xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
call
lcall
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
call
jmp
ret
mov
push
pop
sub
lods
mov
mov
shl
lea
mov
movl
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
mov
jge
popf
pushl
pop
dec
push
mov
call
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
push
pop
xor
movl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
call
call
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
mov
call
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
call
incl
insb
and
add
and
add
add
ret
add
add
add
shlb
add
scas
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
pop
and
add
add
and
add
and
add
and
add
add
or
add
add
add
xor
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
add
and
add
add
ret
add
add
add
shlb
add
scas
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
add
pop
and
add
add
and
add
and
add
and
add
add
or
add
add
add
xor
add
and
add
and
add
and
add
add
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
add
outsb
fs
je
insl
inc
add
popa
je
inc
jbe
outsb
je
add
push
add
je
jb
arpl
jae
gs
imul
jb
popa
je
inc
jbe
outsb
je
add
add
je
jb
jbe
je
push
jb
imul
push
add
inc
gs
je
imul
push
add
dec
add
je
jb
arpl
jae
gs
jo
add
insb
jae
jb
outsb
inc
add
adc
push
gs
insl
gs
push
add
aad
inc
gs
gs
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
jbe
outsb
je
add
aam
inc
gs
jb
jbe
push
jns
gs
add
popa
je
inc
jbe
outsb
je
add
lock
imul
jb
je
arpl
movb
gs
jne
jb
outsb
je
push
add
mov
jo
outsb
fs
push
add
add
popa
jo
jb
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
adc
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
push
fs
outsl
addr16
imul
add
lldt
push
gs
outsl
add
fs
outsl
addr16
imul
add
push
fs
outsl
jne
je
jb
add
push
inc
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
roll
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jl
jp
lods
lods
lods
add
cmpsb
test
mov
mov
mov
ret
ret
stos
lret
lret
int3
rcl
in
rcl
shl
iret
iret
shl
into
int
hlt
enter
enter
in
mov
mov
stos
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
out
lret
rcl
sar
xlat
fcomp
std
xlat
fdivr
xlat
xlat
aad
aam
rcl
sar
int
int3
aad
dec
rcl
inc
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
scas
sbb
mov
jnp
mov
sar
mov
leave
lret
lret
call
rcl
aad
fcom
xlat
call
fcom
call
aam
int3
int3
int3
dec
int
call
aad
dec
int3
int
mov
mov
mov
std
cmpsb
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
into
int3
call
rcl
call
xlat
call
fcomp
call
aad
dec
int
dec
lret
into
int3
into
inc
mov
rol
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
push
imul
fs
inc
sbb
pf2iw
sbb
ss
cmp
adc
pop
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
leave
call
rcl
call
aam
call
aam
dec
rcl
inc
leave
inc
ret
mov
mov
ljmp
mov
popf
xchg
xchg
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
outsl
xor
jle
jge
jle
jno
jo
popa
popa
popa
mov
cmp
inc
mov
outsb
outsl
outsl
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsb
movsl
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
lret
dec
lret
lret
enter
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
cmp
femms
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
jnp
lea
incb
jl
idivb
jl
outsl
jo
out
push
push
ret
jle
jp
js
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsl
lcall
xchg
incl
addl
xchg
xchg
xchg
lahf
lahf
lahf
sti
mov
xchg
xchg
mov
jp
jns
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
mov
addb
decb
xchg
loope
jno
enter
mov
addb
xchg
addr16
cmp
ss
cmp
movsb
mov
test
sti
stos
lods
lods
lods
stos
lods
stos
test
std
movsb
movsb
movsb
std
lcall
incl
jg
js
js
jl
jp
mov
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
xchg
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
pop
push
push
push
push
xor
inc
dec
insl
insb
insl
jl
xchg
leave
lcall
out
cltd
cltd
lcall
mov
decl
mov
lcall
cmpsb
cmpsb
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
cmpsl
lods
call
cltd
xchg
xchg
incl
test
decb
xchg
xchg
popf
popf
sahf
std
mov
mov
xchg
in
xchg
nop
xchg
in
xchg
jne
or
add
inc
sub
daa
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
xchg
std
mov
nop
call
sahf
sahf
jmp
cmpsl
stos
pushl
movsl
scas
mov
xchg
stos
std
mov
xchg
lods
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
mov
lcall
mov
decl
xchg
decl
xchg
xchg
sahf
popf
sahf
mov
test
mov
xchg
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
pusha
bound
jae
mov
lahf
orl
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
nop
mov
xor
js
mov
cmpsb
mov
mov
mov
lods
lods
lods
mov
movsl
mov
add
pop
pop
adc
mov
jmp
lea
xchg
xchg
xchg
call
xchg
xchg
call
cltd
fwait
pushf
popf
popf
sahf
sahf
sahf
mov
movsl
mov
out
xchg
xchg
nop
xchg
les
xchg
fwait
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
je
lcall
jmp
inc
jnp
mov
jp
mov
je
mov
outsb
ljmp
adc
stos
or
lods
or
mov
jge
mov
mov
stos
pushf
movsb
movsl
movsb
and
add
add
mov
add
pop
adc
mov
jmp
xchg
xchg
call
cltd
lcall
sahf
sahf
lcall
lcall
nop
xchg
xchg
nop
cwtl
nop
call
lcall
cltd
sahf
stc
lahf
xchg
sahf
cld
pushf
mov
xchg
insb
mov
xchg
push
jg
xchg
dec
jns
fwait
cmp
insb
sahf
and
mov
adc
arpl
test
pcmpgtw
lods
adc
scas
adc
mov
imul
adc
mov
insb
mov
lcall
lods
lods
scas
scas
movsl
movsl
movsb
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
jmp
mov
movsl
jmp
xchg
xchg
decl
mov
decl
jbe
lcall
xchg
dec
jnp
xchg
cmp
call
push
pusha
call
or
xchg
add
pop
lcall
push
pop
ljmp
sbb
mov
insl
pushl
outsb
mov
and
and
rcrl
inc
inc
test
ret
xchg
lods
mov
lods
lods
mov
lahf
sahf
mov
add
pop
pop
adc
scas
mov
mov
cltd
sahf
lcall
movsl
jmp
test
ljmp
cmpsb
test
lcall
decl
dec
jno
mov
push
mov
arpl
mov
pusha
decl
or
test
push
incl
add
popl
pop
call
add
lahf
add
cmpsb
or
mov
outsb
pushl
sub
mov
sub
les
jg
cs
cs
inc
mov
scas
mov
mov
lret
movsl
dec
mov
mov
add
add
add
stos
mov
push
adc
cmpsl
scas
ljmp
sahf
jmp
stos
stos
ljmp
stos
pushl
lods
lods
jmp
jb
incl
push
push
incl
pop
push
incl
push
incl
push
decl
add
popl
pop
call
add
sahf
add
add
ljmp
sub
mov
aaa
test
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
movsb
test
mov
mov
mov
cmpsl
test
lods
scas
lods
pushl
mov
pushl
mov
ljmp
decl
push
decl
push
decl
pop
push
incl
add
mov
push
decl
add
popf
add
add
add
lods
add
pushl
cmp
dec
inc
call
inc
call
dec
nop
call
dec
xchg
fmuls
fimull
fisttpl
ficoml
call
test
std
mov
mov
movsb
mov
sahf
or
add
add
add
add
inc
dec
adc
jp
movsb
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
aaa
outsl
decl
sbb
call
push
pop
decl
push
decl
add
xchg
add
popf
add
mov
add
stos
add
mov
gs
and
dec
dec
nop
call
push
cltd
call
push
fwait
fistl
fstpl
jmp
pop
pushf
fists
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
jns
sahf
cltd
lahf
jmp
sahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
movsb
call
and
xchg
and
push
call
or
decl
add
lcall
jmp
add
mov
fs
mov
xor
fldenv
fisubs
jmp
arpl
jmp
fs
out
test
ljmp
fildl
ret
mov
test
mov
sahf
mov
add
add
add
inc
aas
adc
jb
cltd
xchg
cwtl
call
sahf
fwait
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
xor
lcall
call
or
xchg
add
fwait
add
mov
add
stos
add
mov
pushl
adc
rolb
jmp
jo
jmp
jno
jmp
jno
jmp
jne
in
jae
out
je
out
jbe
out
je
jmp
xchg
mov
test
lcall
lahf
add
jg
cmp
imul
mov
lcall
mov
pushl
mov
mov
inc
sarb
mov
scas
lcall
jo
lahf
cmp
sahf
cmp
xor
lcall
call
add
add
test
popa
pushl
add
mov
sbb
ficoml
jmp
ja
jmp
jge
jmp
mov
out
cmpb
icebp
test
push
test
call
mov
inc
mov
test
sahf
sahf
popf
daa
mov
mov
add
bound
aaa
aaa
cmp
pop
pop
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
inc
ret
sar
mov
jmp
cmp
inc
jle
movsb
inc
jg
movsl
cmp
lcall
lcall
add
test
pusha
ljmp
add
add
ret
add
shll
mov
jmp
mov
push
pop
push
nop
ret
push
pop
push
xchg
ret
push
xchg
ret
stc
xchg
stc
mov
out
mov
fnstenv
ret
clc
lods
stos
stos
mov
popf
popf
xor
pushf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
mov
mov
jl
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
enter
xlat
xor
call
xchg
ret
push
lcall
hlt
fwait
push
fwait
lret
fwait
lret
sahf
lret
cli
sahf
int3
sti
sahf
int3
cli
lcall
fbstp
cli
mov
mov
lahf
lahf
mov
add
add
add
aaa
add
das
cs
cmp
outsb
dec
dec
dec
jecxz
pop
call
mov
mov
mov
sar
mov
inc
mov
mov
ljmp
dec
xchg
movsl
sub
fwait
pop
pop
lcall
add
add
mov
arpl
mov
add
movl
je
loopne
xchg
out
mov
push
cmpsb
int3
push
movsl
int
clc
cmpsb
into
cld
test
cld
movsl
into
cld
cmpsl
iret
stos
sar
cld
stos
iret
std
cmpsl
sar
negl
lret
dec
lret
mov
mov
mov
xchg
xchg
add
lcall
xor
xor
sub
sub
inc
inc
inc
bound
push
xlat
jne
jb
mov
sarb
mov
ret
enter
ret
ret
mov
test
mov
push
mov
scas
dec
test
lahf
sbb
pop
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
adc
pop
test
negb
sar
cli
scas
aam
cld
scas
aam
cli
mov
mov
std
mov
std
mov
std
mov
mov
std
mov
push
movsb
jmp
mov
dec
leave
int3
mov
mov
lahf
lahf
mov
or
add
add
xor
sbb
dec
dec
outsb
outsb
outsb
mov
aad
xlat
jmp
xlat
test
into
into
dec
lret
leave
leave
leave
dec
leave
lret
inc
leave
mov
scas
jmp
push
mov
stos
cmp
jmp
add
add
mov
arpl
mov
add
roll
outsb
call
add
loopne
je
ljmp
cli
lods
sar
mov
mov
cld
mov
fdivr
cld
mov
fdivr
std
rcr
mov
int
out
call
lret
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
leave
movl
call
out
jecxz
loop
fstp
fsubp
fcmovnu
fcomp
xlat
cli
aam
std
int3
iret
into
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
aad
jae
faddl
ja
jecxz
jbe
in
xor
sti
mov
loope
inc
loopne
inc
loope
std
inc
fdivrp
inc
std
leave
fdivrp
dec
std
enter
lret
cli
mov
lret
lret
mov
mov
xchg
adc
add
add
incb
std
incl
incb
hlt
div
or
in
in
pop
in
out
out
sub
out
out
dec
jmp
ljmp
in
out
fcmovu
fucomp
ret
stc
lods
jo
cmpsb
cmp
mov
add
test
popa
pushl
add
lds
imul
xlat
add
filds
jbe
jmp
inc
popf
cli
mov
jecxz
dec
loop
std
int
dec
in
std
int
std
int
dec
loop
std
iret
jecxz
dec
in
call
jecxz
call
in
cld
out
mov
inc
ret
out
test
cmpsb
mov
cwtl
cwtl
add
add
add
incb
std
std
add
stc
testl
lock
repnz
out
lock
pop
in
icebp
out
cmp
out
in
pop
loope
mov
xchg
sti
lahf
es
movsl
add
lods
add
mov
gs
mov
add
add
flds
jne
in
jnp
in
push
jge
negb
cli
mov
std
shl
shl
shr
call
out
std
shl
call
call
std
xlat
out
std
fucompp
std
fldl2t
std
std
shl
push
jmp
rcr
dec
lret
lret
stos
test
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
cld
testl
repnz
or
aam
xor
jb
negb
add
test
pop
ljmp
add
ret
dec
add
add
fldl
jne
out
ja
in
sbb
cli
ret
loopne
fld1
std
fucompp
std
std
fldl2t
std
fucompp
fucomp
fucomp
fucomp
fucomip
std
fucomip
fucomip
cld
shl
push
jmp
aad
dec
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
mov
loope
add
leave
lds
lods
jl
repnz
and
lahf
add
test
pop
pushl
add
ret
dec
add
aad
jno
loopne
jne
call
sub
cld
shl
fucomip
fucomi
std
std
fucomi
fsub
cld
aam
std
aam
cli
shl
sti
shl
clc
iret
fdivrp
clc
lret
test
lret
call
fcom
sti
mov
mov
cltd
lcall
cltd
fwait
fwait
add
add
leave
lds
lods
mov
lcall
add
mov
fs
mov
add
rolb
jo
add
loope
jp
ljmp
cld
xchg
cli
lret
cld
int3
loope
sti
test
aam
repnz
sar
icebp
mov
int
ljmp
jmp
ret
call
fsub
cmc
loopne
fsubrp
mov
mov
xchg
add
add
add
int3
int
mov
sarb
sahf
xor
pop
ljmp
add
mov
add
int
jo
rorl
fistl
jns
loopne
cmp
dec
cwtl
jmp
mov
jmp
scas
leave
std
loop
ret
cld
fidivs
neg
mov
enter
int3
in
leave
into
fsubp
rcl
shl
xlat
fcmovnb
out
loope
jmp
jmp
popf
ljmp
push
lods
lods
stos
adc
cmpsl
cmpsb
cmpsb
add
rolb
ret
mov
stos
aam
dec
cmp
sbb
cmpsb
sbb
jno
mov
jns
mov
inc
test
ret
stc
leave
gs
test
mov
out
mov
mov
enter
int3
rcl
lret
mov
iret
shlb
xlat
rcl
jg
fcmovu
jb
gs
in
out
out
ljmp
sub
div
and
repnz
or
mov
int3
add
add
add
mov
roll
mov
test
lcall
jbe
ljmp
mov
sarb
mov
ret
mov
cmpsl
leave
mov
enter
int3
jp
int
addr16
rcl
push
iret
rcl
dec
xlat
xlat
inc
rcl
aam
aam
fldenv
fcomp
fcompl
fstl
fsubp
loope
loope
in
out
jmp
in
repnz
add
sti
testb
std
cld
add
incb
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
les
mov
daa
int3
ror
and
aam
sbb
rcll
rcl
rorl
rcl
aad
rcr
add
add
add
in
add
jmp
add
xlat
aad
std
incl
mov
mov
add
ret
lds
rol
sub
mov
mov
push
rol
or
enter
leave
enter
lret
roll
rcl
aam
rcr
aam
xlat
add
aad
add
xlat
loop
aad
fiaddl
loopne
loope
fstp
fiadds
jecxz
out
icebp
repnz
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
mov
mov
ja
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
rcl
cmc
rcl
sar
ror
iret
cli
lret
int
stc
lret
int3
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
into
iret
into
xlat
aad
call
call
iret
iret
dec
int
dec
lret
lret
sarb
stos
lods
stos
icebp
cltd
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jae
jae
jne
gs
inc
dec
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
rcl
call
rcl
dec
int3
int3
inc
mov
pushl
test
popf
lahf
sahf
xchg
xchg
xchg
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
jg
jl
jnp
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
push
imul
cmp
aaa
pop
jno
outsl
adc
mov
mov
sar
mov
mov
mov
mov
jmp
pushf
pushf
call
xchg
xchg
fwait
cltd
lcall
dec
dec
dec
movups
add
add
add
add
add
pop
lcall
pop
pushf
xchg
lcall
addb
jl
jge
js
jp
jp
jp
jp
jnp
jb
jae
push
push
push
cmp
jae
popf
popf
sahf
mov
scas
scas
repz
scas
scas
sti
scas
lods
scas
std
test
test
pushf
pushf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
movsl
movsl
cltd
jae
jae
adc
adc
add
add
add
add
insl
outsl
outsb
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
outsl
orl
lcall
mov
call
pushf
popf
ljmp
stos
scas
std
mov
scas
mov
mov
mov
cmpsl
mov
addb
add
add
add
add
pop
or
lods
mov
movsl
sahf
mov
decl
mov
cwtl
xchg
cwtl
std
popf
sahf
sahf
sti
mov
cwtl
lcall
push
push
jo
pop
pop
outsl
imul
jg
subl
mov
std
xchg
mov
ljmp
jg
pushl
pop
mov
jnp
mov
scas
stos
insl
test
add
add
add
add
pusha
or
mov
in
movsb
test
call
cwtl
lcall
cwtl
lcall
sahf
popf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
cmp
dec
jp
movsb
inc
js
scas
xor
je
scas
pop
insl
ljmp
sbb
mov
mov
mov
scas
mov
mov
add
add
add
add
popa
or
mov
in
movsl
test
lcall
mov
mov
decl
addl
xchg
jae
cld
cwtl
pusha
test
xchg
dec
jns
xchg
cmp
nop
sub
xchg
sbb
adc
sahf
or
push
pushl
sbb
mov
and
mov
test
scas
xchg
sahf
lahf
popf
adc
add
add
popa
pop
pop
or
mov
stos
mov
mov
ljmp
cmpsl
test
fwait
xchg
cwtl
decl
cmp
mov
decl
adc
or
mov
call
add
cmpsb
or
jb
mov
das
jle
les
jle
das
cmp
leave
pop
xchg
inc
stos
mov
scas
scas
mov
test
test
add
add
add
popa
or
cmpsb
stos
in
mov
test
scas
mov
pushl
mov
jmp
jno
mov
pop
decl
or
test
push
decl
add
lahf
add
add
mov
insl
inc
aaa
test
lret
inc
mov
rolb
call
inc
nop
call
inc
xchg
call
bound
stc
mov
mov
movsb
movsb
movsb
daa
std
add
add
add
popa
or
mov
ljmp
mov
mov
mov
ljmp
jge
mov
pusha
decl
or
popl
push
call
add
cmpsb
add
scas
add
mov
dec
xchg
fsts
fistpl
ficomps
jmp
pop
mov
jmp
outsb
cmpsb
dec
test
cld
mov
mov
cmpsl
stos
movsl
xor
add
add
dec
pop
jle
jl
pushf
cwtl
cwtl
jecxz
mov
scas
pushl
mov
mov
lcall
cs
lcall
and
call
pop
lcall
add
mov
fs
mov
xor
fsubl
jmp
outsb
test
jmp
jo
in
jae
call
test
std
mov
test
inc
addl
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
je
lcall
cmp
popf
sub
xchg
or
pushf
add
mov
add
mov
inc
or
call
inc
xchg
jmp
js
jmp
mov
out
test
push
mov
push
mov
mov
test
push
cltd
lcall
sub
push
push
push
dec
pop
imul
test
mov
mov
mov
rol
ret
inc
mov
sahf
jmp
inc
cmp
sub
fwait
or
mov
add
mov
fs
mov
adc
mov
push
xchg
cwtl
push
cwtl
push
lcall
negb
inc
mov
stos
popa
lahf
mov
add
xor
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
xchg
cmpsl
jmp
dec
cmp
pop
insb
jmp
add
mov
fs
mov
add
fisubl
cmp
jl
push
movsb
int
mull
iret
cli
stos
iret
std
lods
sar
stos
sar
sti
cmpsb
int3
jmp
mov
inc
mov
test
or
add
add
dec
dec
push
aaa
jae
je
test
into
into
out
iret
int
lret
lret
int3
sti
lret
std
leave
enter
mov
stos
popa
mov
stos
inc
jg
mov
add
mov
fs
add
iret
add
fildl
xchg
push
xchg
std
mov
std
mov
fcos
mov
mov
sar
jmp
leave
dec
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loope
loop
loopne
loopne
fstp
fcmovnb
fcmovu
fcmovnu
aad
fsubr
shlb
cmpsl
sub
jmp
arpl
mov
add
add
jecxz
jl
icebp
push
mov
std
inc
loopne
inc
std
enter
enter
leave
std
out
mov
lret
divb
sahf
popf
sbb
add
add
incl
std
std
add
jmp
or
out
in
sbb
in
in
xor
loopne
loop
mov
mov
mov
add
mov
arpl
roll
dec
add
fildl
jne
ljmp
sti
ret
cld
shl
shl
call
in
std
shl
std
aad
xlat
jmp
push
enter
int
stc
mov
mov
add
incl
std
std
add
cld
cld
pop
aam
aad
mov
pop
mov
lahf
or
ljmp
add
add
rolb
jno
fiadds
ja
in
and
shl
fldpi
fsubr
std
fsubr
cld
sti
fsub
std
fld1
std
aad
push
fdivr
loope
sti
mov
popf
popf
das
add
add
int
int3
or
bound
stos
add
mov
add
add
loop
jns
in
xor
cli
lret
loop
cli
lret
cmc
vpaddd
ret
icebp
ret
aam
out
ret
in
vpsubw
aad
ljmp
ljmp
test
add
add
add
aam
push
mov
je
or
mov
imul
sbb
int3
and
sub
sti
loopne
fwait
clc
in
mov
out
loop
lret
jmp
fdivrl
lret
leave
fmulp
sarl
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
xchg
mov
fidivrl
jg
rol
stos
mov
mov
ret
ror
rol
lret
insl
ror
int
rcl
rorb
fcomp
cmp
fsubp
das
in
fisubs
jecxz
repnz
jmp
or
std
std
add
add
add
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
and
aam
pop
rol
adc
rcl
or
or
into
int3
add
incl
std
std
incl
lcall
pextrw
or
int
int3
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
enter
enter
sarl
scas
mov
stos
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
aam
rcl
sar
into
iret
int
mov
stc
mov
cmpsl
test
cmpb
pop
sbb
add
add
add
add
add
add
add
add
jae
jno
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
rcl
dec
into
into
dec
enter
mov
lcall
mov
push
add
add
add
add
je
jne
xchg
aad
outsb
jo
arpl
mov
push
insl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jb
es
das
add
add
add
add
je
jae
pushf
xchg
fwait
mov
xchg
clc
xchg
test
test
imul
mov
into
movsb
mov
lahf
sti
xchg
xchg
xchg
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsb
test
test
test
mov
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
lcall
mov
push
push
imul
jge
lea
xchg
notl
mov
mov
cltd
pushl
jb
mov
scas
scas
push
lods
stos
stos
add
add
add
cmpsl
mov
mov
lods
cld
xchg
xchg
xchg
call
cltd
fwait
call
lcall
xchg
mov
loope
jbe
out
nop
fs
lcall
ljmp
and
mov
insl
pushl
sahf
lods
lock
mov
imul
into
add
xchg
pop
lods
movsb
lods
test
sahf
pushf
popf
jmp
mov
xchg
decl
push
ja
nop
inc
je
mov
imul
nop
adc
xchg
or
or
mov
insl
mov
and
jp
ret
ds
mov
mov
subl
jae
push
mov
movsb
test
test
scas
scas
pushl
xchg
decl
or
xchg
decl
add
mov
adc
shlb
dec
inc
mov
aad
call
dec
xchg
dec
cltd
mov
mov
mov
movsb
movsb
movsl
push
add
add
push
push
cwtl
xchg
xchg
test
mov
lods
pushl
mov
movsb
call
pop
arpl
nop
pop
pop
decl
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pop
movsb
jmp
cmpsl
call
lcall
test
cmpsl
pop
add
add
bound
adc
sahf
fwait
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
xor
jmp
jnp
out
jle
push
jg
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
fs
cmpsb
inc
jle
sahf
and
popf
add
pop
pushl
or
fimull
in
mov
push
xchg
clc
xchg
enter
jmp
cmpsb
inc
mov
cmpsb
sub
aas
aas
inc
adc
push
xchg
xchg
cld
rol
inc
mov
xchg
ljmp
pop
jmp
pushl
push
aam
ja
in
insl
scas
push
test
stc
stos
sar
cld
lods
sar
cld
scas
sar
cld
scas
sar
jmp
lret
mov
cmpsb
ds
std
add
xor
inc
scas
mov
mov
aad
mov
aad
rcl
shr
lret
cli
mov
mov
jmp
inc
add
aad
jno
out
xchg
testl
cld
rcr
cld
rcr
cld
ret
lock
ret
in
cmpsl
cmpsl
dec
addb
add
in
or
call
in
outsb
fcomp
mov
add
mov
add
faddl
cld
scas
std
into
in
std
iret
in
std
shl
call
out
aad
push
enter
enter
scas
scas
popa
addb
add
std
add
std
incl
lret
int
sub
sahf
sbb
stos
add
mov
add
loope
jp
hlt
push
cmpsl
cld
loope
aad
std
aam
cld
shl
cld
aad
stc
shl
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
vfnmsub213ss
insl
cld
lods
add
push
into
or
fistps
cmp
insl
stos
cld
out
mov
aam
jmp
mov
shl
out
aam
call
scas
push
cltd
lcall
sarb
xchg
dec
and
ret
int3
lret
mov
xlat
mov
lret
adc
int3
outsl
fxch
iret
pop
fst
aad
in
loopne
out
call
sbb
rol
add
mov
scas
arpl
lods
mov
les
les
rol
sbb
bswap
int3
into
or
aam
push
std
add
std
incl
stos
std
add
mov
std
add
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
shlb
mov
and
insb
push
cmp
iret
insb
ja
mov
lret
sti
fbstp
sbb
xchg
sub
in
test
add
fmul
or
inc
inc
sub
sbbl
pusha
cltd
jle
mov
in
shrb
mov
aas
and
push
pusha
and
xchg
je
sti
movsl
mov
movb
xor
push
jg
mov
sahf
test
fnsave
mov
xchg
inc
dec
fnstenv
data16
aam
cmp
jmp
or
cmp
xor
js
jne
cltd
push
call
loop
outsl
push
sbb
lea
push
shlb
xchg
stos
inc
ret
stos
out
test
in
pusha
push
decb
das
cmp
jle
push
sub
orl
and
xor
popa
inc
test
jns
pop
divb
aam
adc
out
rclb
fwait
xor
fidivs
jnp
push
lods
xchg
cld
xchg
into
xlat
outsb
add
sbb
push
jge
ljmp
adc
inc
inc
xor
jb
xchg
sub
xchg
mov
lret
inc
in
push
shlb
xlat
int3
arpl
test
dec
fbstp
ret
data16
mov
sub
insb
lds
mov
loopne
cld
adc
sahf
xor
je
mov
adc
loope
pop
and
cwtl
das
sbb
jbe
cmp
xchg
mov
fisttpl
mov
adc
sub
pop
and
mov
mov
in
mov
add
loopne
dec
ja
and
cmpsl
cmp
fadds
pop
lock
cmp
add
ja
jle
pop
out
push
lahf
xchg
sub
ja
or
and
add
nop
inc
xchg
sub
and
lret
fadds
lock
notb
mov
xchg
sub
or
mov
loopne
xor
sbbb
push
imul
cmpsb
mov
testl
lods
dec
mov
jp
aas
jl
ds
divps
inc
iret
lds
jl
xchg
push
in
push
mov
xor
jno
pop
mov
repnz
xchg
and
lret
bound
ss
xor
andb
cmpsb
addl
mov
jb
stc
aad
mov
dec
daa
sbbl
outsb
icebp
mov
rorl
repnz
push
call
lds
jne
gs
jecxz
jae
xchg
movsl
mov
add
sbb
cmp
cmp
dec
pop
cmpsl
ds
fwait
mov
pop
loop
jne
out
add
jnp
sete
inc
push
add
xchg
test
mov
mov
addr16
ds
or
xchg
dec
pop
repz
or
adc
scas
sub
fcomip
cwtl
das
and
dec
loope
inc
mov
jbe
push
imul
xchg
sbb
movsb
cmp
adc
jle
cs
loopne
shl
dec
jecxz
repz
xchg
and
inc
sbb
ja
mov
mov
out
sbb
les
cmp
loop
mov
xchg
sub
aad
xchg
push
in
dec
push
sub
mov
aaa
shlb
jp
shrl
int3
pop
icebp
std
fisttpll
push
pop
jns
push
das
sub
pusha
jb
movsb
orl
not
data16
add
aam
dec
and
repnz
mov
rclb
das
movb
jbe
arpl
xchg
jno
xchg
mov
les
mov
or
roll
test
lea
out
cltd
scas
pop
loopne
jbe
in
add
jl
or
add
xchg
cmpsb
and
in
aas
sub
lock
push
insb
add
cmpsl
test
aad
inc
fisubrl
clc
ret
dec
mov
jp
inc
fnstcw
and
test
in
popf
xor
out
cmpsb
cmp
jo
insl
jbe
pop
sahf
enter
ret
jmp
ret
in
sbbl
pop
divb
add
outsb
xchg
fwait
xor
nop
mov
ficoml
test
pop
aaa
pop
sahf
fs
xchg
insl
xchg
mov
ds
rcll
or
scas
inc
or
mov
pusha
sub
movsl
pusha
subl
mov
pop
sahf
or
das
dec
out
xor
add
mov
xchg
rol
and
ljmp
dec
cmp
xchg
xchg
mov
pop
cmc
icebp
aad
adc
sbb
dec
and
jg
mov
enter
mov
hlt
sbb
dec
adc
scas
inc
outsl
pop
cmc
pushf
outsl
lds
jl
lock
add
je
cli
test
cmpsb
cmp
movsb
and
pop
push
jle
push
scas
into
add
cmpsb
sub
pop
adcb
adc
imulb
mov
xchg
pop
mov
push
mov
jo
movsb
movsb
aaa
fidivl
jle
js
mov
iret
cmpsw
sub
pop
jle
dec
scas
les
clc
jbe
pop
cmpsl
and
outsl
push
jle
in
scas
leave
push
jmp
jne
jb
and
enter
ret
cli
jl
pop
mov
dec
in
imul
cli
andl
and
aad
imul
sti
xorl
push
push
adc
addl
push
pushf
shrl
subl
cmp
aaa
into
mov
inc
fstpl
in
test
jp
test
ja
mov
add
sbb
pop
dec
js
shrb
mov
dec
jge
inc
mov
push
out
outsl
jg
sahf
push
mov
push
mov
imul
xor
outsb
jmp
lahf
sbb
adc
aam
rorb
outsl
inc
ficompl
test
jge
arpl
xchg
adc
aaa
into
mov
fs
cmovo
mov
or
jecxz
xchg
sbb
push
push
andl
fdivp
gs
sub
nop
aas
addr16
cmc
push
cmp
mov
das
push
xchg
es
movl
mov
aas
push
lcall
cmc
pop
inc
fimull
cltd
in
test
shlb
add
mov
xchg
inc
mov
pop
mov
insl
lea
pop
lret
bound
jmp
cmpsb
fxch
data16
sbb
dec
js
jl
loopne
jae
jp
stos
add
xor
add
xchg
add
mov
call
push
cwtl
pop
aad
ss
pop
mov
insl
xor
lahf
push
testb
push
shrb
rolb
mov
push
cmc
xchg
sub
jae
mov
jl
push
call
leave
sbb
dec
ljmp
lahf
cmp
subl
or
dec
ficoml
mov
pop
mov
in
xchg
int3
aas
shlb
leave
pop
pop
xlat
outsb
mov
cltd
push
mov
int3
in
pop
icebp
mov
enter
push
insb
add
lods
mov
andb
aad
stc
push
inc
fiaddl
movsb
gs
shrl
jg
repz
sub
adc
inc
movsb
stc
nop
shlb
clc
xchg
idiv
nop
and
inc
pop
scas
jae
xor
aaa
xchg
mov
lds
jnp
loope
adc
stos
add
imul
add
stos
out
fidivrl
inc
fisubrl
pop
icebp
jae
inc
faddp
xchg
pop
cmc
enter
xchg
push
xchg
sub
lcall
xchg
push
dec
loope
mov
out
lret
pushf
xchg
push
inc
fildl
cmpsl
stc
aam
xor
push
ss
cltd
xor
mov
xchg
out
inc
fiaddl
adc
insl
inc
sub
stc
pushf
ja
stos
movsb
mov
xchg
in
pop
lock
push
jg
cmp
sub
test
mov
movsl
int
shll
jae
daa
add
test
xchg
sbb
lds
loop
pop
cli
inc
fsubrs
inc
push
addr16
push
in
test
add
out
push
mov
std
imul
dec
xlat
out
jp
inc
xlat
rcrb
nop
cld
adc
cmp
mov
jb
das
inc
rclb
rcll
out
gs
xor
pop
imul
ret
add
iret
out
and
sbb
lahf
test
lret
call
fdivl
push
inc
fadds
add
imul
mov
fdivs
push
adc
imul
pop
push
insl
les
add
mov
mov
aas
adc
add
insl
add
out
dec
out
cmp
jg
mov
sarb
loopne
movsb
adc
xor
lret
add
mov
push
mov
icebp
mov
pop
inc
mov
adc
imul
add
fmull
imul
push
adc
lret
pop
sarl
push
xor
out
nop
cmpsl
insb
ret
push
testl
out
mov
loope
bound
lret
test
lea
mov
jle
sbb
pop
out
les
jo
nop
mov
pop
data16
insb
add
mov
mov
mov
into
adc
subl
mov
fs
mov
sbb
or
push
inc
faddp
enter
push
scas
mov
pop
icebp
push
testl
clc
dec
insb
and
sbb
inc
pop
mov
push
popa
add
dec
ret
xchg
sub
sub
daa
cmc
inc
push
ja
and
hlt
dec
rol
test
loopne
pminub
addr16
mov
sub
pop
imul
or
lock
in
mov
add
jns,pt
ret
jns
cmp
xchg
jno
sahf
inc
cld
int3
push
subb
fldenv
adc
jmp
cmp
je
lahf
out
xchg
addb
mov
sbb
rcrl
or
mov
mov
sbb
inc
sbb
pop
lds
mov
adc
cmpsl
inc
adc
int3
adc
stc
jg
xlat
push
fmull
sbb
push
cltd
push
sub
push
popa
pop
xor
out
movsl
pop
push
bound
mov
into
dec
xchg
dec
repz
adc
adc
lods
movsb
and
cmp
or
dec
cwtl
jno
mov
or
mov
push
in
enter
fldl
shlb
adc
aam
xor
ret
add
testl
pop
jns
jbe
jge
mov
imul
movsb
dec
testb
je
dec
inc
in
int
pcmpgtd
push
mov
push
xor
jmp
lods
icebp
ds
sub
andb
aad
hlt
add
mov
test
adc
and
xor
jle
ljmp
xchg
mov
lea
xor
scas
or
notl
mov
lret
inc
adcb
fbld
es
sub
xor
movsl
js
cmp
bound
mov
mov
mov
mov
pop
fisttpll
mov
mov
and
cmp
xchg
rcrl
xchg
pop
sbb
jmp
ficomps
je
and
sbb
jns
fcmovnbe
inc
xchg
xchg
jp
sbb
arpl
aas
outsl
push
cwtl
push
test
adc
mov
stc
nop
xor
scas
loope
aaa
into
pop
add
lret
dec
in
aad
cwtl
add
xsha256
cmpsb
xchg
push
aad
xorb
push
imul
mov
and
mov
cmp
daa
cmp
enter
push
add
inc
fidivrs
push
out
xchg
sbb
pop
insb
mov
fs
decl
arpl
push
pop
mov
dec
clc
movsl
cmp
mov
mov
inc
push
in
jbe
fidivs
xchg
je
leave
mov
xor
jecxz
sub
dec
les
xchg
lret
lods
loop
iret
inc
call
xchg
push
xlat
testb
add
rcll
mov
push
call
jne
jg
or
popf
xor
shll
scas
xor
int
dec
push
lock
cld
xchg
cmp
sbb
ds
iret
in
dec
loop
push
push
out
das
jnp
add
fiaddl
cmp
mov
ficompl
inc
fwait
repz
gs
mov
gs
xchg
and
in
test
sbb
sarb
into
jmp
add
sbb
dec
fbstp
cmp
data16
js
mov
sbb
jb
dec
inc
sbb
cmp
shrb
jl
pop
popf
add
fbstp
mov
mov
sbb
aas
or
sbb
or
sub
stos
adc
xor
mov
cltd
pop
sbbl
fstps
jo
ss
jg
mov
jb
xchg
push
popf
arpl
stc
nop
lea
inc
dec
pop
scas
imul
nop
ficoml
mov
push
ljmp
jno
out
test
das
add
nop
daa
gs
scas
inc
iret
dec
out
pop
call
add
negl
jmp
inc
and
mov
push
hlt
inc
fdivs
andb
mov
dec
out
filds
cli
pop
insl
add
adc
push
stos
sahf
xor
jle
mov
test
lock
or
pushf
xor
add
push
clc
cmp
mov
dec
xor
enter
mov
lds
adc
add
outsl
pop
xchg
cs
push
jmp
out
out
pop
cli
pop
loop
in
adc
es
push
add
pop
rcrb
mov
jne
bound
shr
xor
jnp
and
xchg
pop
cmp
sahf
movsl
cmp
mov
mov
sub
shrl
jns
sub
out
ret
mov
mov
push
movsl
sbb
shrb
ds
cwtl
and
xchg
pop
icebp
push
xchg
movsl
in
je
add
push
sub
push
mov
fcoml
add
adc
push
jae
shrl
pushf
movsl
cmp
ret
icebp
mov
ret
pop
pop
test
mov
ja
js
sub
xchg
jg
fidivrs
loope
movsb
add
sub
je
iret
jp
loopne
call
addr16
lock
mov
dec
sbb
gs
xchg
mov
ret
fcompl
mov
xor
ja
xchg
sub
sbb
ss
loope
fstpl
sti
cmp
mov
shrb
cwtl
das
dec
test
mov
aam
push
lret
ss
jecxz
sub
sbb
lcall
and
andb
fwait
shrb
push
out
sti
and
mov
xlat
lcall
cmc
call
add
jae
xlat
outsb
push
pushf
fwait
xor
sub
push
das
int3
and
lods
xor
mov
cmpsb
adc
mov
xor
push
movsl
popf
xor
jge
out
outsb
mov
add
call
adc
jg
ds
inc
pop
xchg
push
popf
ret
pop
jns
adc
cmp
push
inc
pop
and
stc
inc
dec
loop
sahf
outsb
adcb
mov
lahf
ss
sbb
mov
out
push
cmp
lret
bound
pop
repnz
xor
jns
adcl
mov
lods
xchg
lds
mov
sub
shrl
cs
mov
ljmp
jge
movsb
cmp
cs
loop
cli
out
dec
jecxz
adc
cwtl
cwtl
pop
jle
js
adc
rorl
xor
cld
sti
mov
imulb
jge
cwtl
mov
fwait
xor
adc
push
lahf
sahf
xor
leave
mov
push
call
fiadds
push
scas
cli
testb
ficoms
inc
dec
stos
inc
xor
pop
negb
jge
lock
xor
ret
idivl
stos
inc
pushf
and
gs
pop
mov
shrl
pushl
std
pop
repnz
push
nop
daa
dec
xor
mov
data16
inc
je
cmp
arpl
push
pop
repnz
out
adc
decb
lahf
daa
and
mov
adcl
inc
or
arpl
dec
and
gs
imul
ss
sbbl
jne
cmp
aas
sahf
pop
pop
out
shrl
stc
nop
pop
testl
cmp
mov
fxch
repz
mov
pusha
testl
add
aam
pop
mov
mov
aam
dec
fsubrs
push
pop
repz
testb
stos
adc
loop
mov
push
or
xchg
sub
push
call
cmp
push
sbb
lea
push
sti
xchg
frstor
inc
fwait
negb
mov
mov
pusha
xor
aaa
into
arpl
jle
test
add
add
sbb
arpl
cmc
jns
daa
inc
push
sbbb
push
inc
fnstenv
lods
mov
nop
jp
fdivl
xchg
pop
scas
inc
test
xchg
cmc
outsl
xor
mov
aad
cli
mov
aad
sbb
push
in
fistpl
jae
std
cmp
sub
inc
loope
pusha
pop
mov
test
call
decb
in
test
mov
cmp
sar
sub
sbb
ss
repz
iret
sbbl
jae
adc
cmp
cwtl
das
sub
inc
jg
mov
add
aam
pop
test
xorl
repnz
or
or
rolb
lods
push
out
outsl
xor
jecxz
mov
test
cmp
lods
mov
out
out
scas
inc
mov
ror
fs
mov
pop
mov
jmp
addr16
jp
nop
or
push
mov
into
adc
mov
cmp
imul
dec
loop
inc
popf
xor
xor
jo
lods
inc
out
cltd
xchg
out
pop
lret
fimuls
cmpsb
cmp
movsb
pop
les
int
sahf
push
loopw
mov
lret
or
lret
push
mov
cmp
ja
cmp
sub
pop
icebp
xchg
shrl
lods
inc
jns
xchg
sub
push
cs
xchg
jns
xorb
scas
mov
shll
mov
inc
rolb
adc
test
call
adc
adc
fwait
clc
pushf
xor
inc
mov
sbbl
sbb
ljmp
lods
js
stc
out
xchg
xor
fisttpl
sbbl
sbb
xchg
sub
scas
scas
inc
dec
lea
fs
and
jmp
out
dec
leave
pusha
jge
sbb
mov
cmp
fcomp
lds
fs
cmpsl
dec
jecxz
scas
rolb
cwtl
stc
ja
es
adc
mov
imul
enter
lret
repz
jecxz
cmpl
pop
sbb
nop
pop
ss
mov
popa
clc
cltd
and
imul
push
lahf
repnz
ficoml
cmpsl
and
lds
mov
in
jle
push
sbbb
jmp
push
mov
cmp
pop
fidivs
mov
mov
fbld
cmpps
pop
xor
mov
scas
mov
ret
lahf
ss
pop
or
lret
aad
lock
add
ss
shrl
push
jnp
addr16
add
rolb
jo
sub
mov
sub
inc
insl
jp
lds
mov
std
xchg
es
or
sub
dec
jge
jge
dec
loopne
lahf
cmpsb
cmp
jo
mov
and
enter
test
push
popf
xchg
loopne
shr
jbe
mov
nop
ja
addr16
jle
dec
leave
out
pop
les
repnz
adc
cmp
jae
xchg
xchg
lcall
mov
xorl
adc
movsl
mov
dec
scas
dec
mov
xor
rolb
lods
out
lods
arpl
cmp
imul
rcrl
mov
lea
sahf
stos
test
stos
jmp
lock
pop
xchg
jecxz
or
outsb
sub
push
pop
fistl
push
or
push
sub
ret
lea
push
mov
dec
xchg
cmp
dec
fidivl
mov
add
mov
cmc
cmp
mov
inc
xchg
movsl
loop
and
insl
xchg
or
push
push
jmp
push
sub
movsl
cli
lds
imul
push
outsl
into
insl
inc
ja
push
xchg
in
icebp
sub
call
aad
inc
xor
mov
and
push
into
adcb
cmp
clc
mov
or
fwait
dec
enter
inc
insb
xchg
push
test
sbb
jb
les
xor
or
lcall
mov
lret
mov
mov
xor
hlt
mov
idivl
sub
test
js
lahf
rolb
fsubrs
shlb
jp
mov
jo
ljmp
cmp
gs
cmp
jbe
pop
fstpt
adc
jge
sub
and
mov
jno
loope
push
and
mov
fldl
imull
xchg
lods
xor
fiaddl
mull
mov
dec
jns
add
mov
jb
mov
out
outsl
mov
sbb
xchg
or
imul
data16
sbb
or
or
xor
jnp
int
gs
imul
shll
daa
jl
dec
push
dec
sti
push
pop
mov
pop
push
mov
popf
xchg
std
popl
into
movsb
sbbb
pop
adc
mov
int3
cmp
xchg
sub
call
idivb
add
setl
std
mov
mov
dec
sahf
clc
add
push
cmc
push
mov
sbb
inc
mov
xorb
cmc
sub
fcmovu
mov
jp
data16
dec
fxch
sbb
fldt
xchg
xchg
xorb
out
fiadds
sbb
adc
mov
push
fisubrs
movsb
mov
dec
pop
shrl
adc
xchg
cmpsl
clc
daa
xor
inc
push
lret
sbb
jl
and
sub
insb
in
in
push
cltd
rcll
fwait
ret
jne
mov
mov
aaa
or
jle
cwtl
fidivl
mov
mov
test
subl
cmp
ss
xchg
call
cmpps
jno
mov
test
xor
loopne
push
in
mov
cmp
orb
int3
sub
mov
insl
ss
inc
loopne
mov
dec
neg
push
pop
out
pushf
mov
push
outsb
add
xchg
push
movsl
push
add
cmp
lret
jb
push
insb
lea
lahf
into
mov
inc
jb
daa
scas
sbb
aas
aaa
fs
insb
push
andl
mov
and
test
movsl
push
inc
pop
test
dec
dec
stc
out
iret
dec
sub
fwait
cld
push
in
sbb
mov
push
cmpsl
ja
cmp
or
xor
insl
xchg
or
xor
sub
xchg
cs
icebp
sub
pop
adc
lahf
ret
stos
and
xchg
jbe
add
fwait
mov
or
sbb
rorb
sti
sbbb
mov
jnp
sbb
stos
cmp
fimull
jecxz
aas
mov
rcrb
bswap
xchg
or
bound
inc
mov
push
sub
enter
sti
std
sbb
xor
stc
push
roll
stos
mov
ja
push
adc
mov
xor
jp
pop
inc
pop
ss
stos
enter
nopl
lret
sbb
mov
push
js
stc
adc
ljmp
pop
mov
pop
push
ret
mov
not
mov
mov
inc
leave
stos
mov
pop
sahf
je
xchg
or
sub
xchg
xchg
jmp
aam
mov
out
pop
push
and
nop
in
aad
sbb
dec
inc
xchg
sub
sbb
shl
cld
repz
sub
pop
jecxz
mov
sbb
outsb
outsb
lcall
or
in
sbb
pop
es
cmp
push
xchg
pop
lcall
cmp
dec
inc
aam
popa
or
xchg
int3
push
push
outsl
aam
inc
cmpsb
lret
call
sbb
daa
jbe
jl
pop
iret
pop
int3
pop
loop
lock
into
push
iret
push
mov
shrb
inc
or
xchg
push
push
mov
mov
sbb
mov
stos
movsl
push
cmp
dec
inc
mov
mov
js
jmp
mov
push
push
in
icebp
cmp
push
mov
cmpsb
push
jge
and
mov
bound
xor
xor
push
or
mov
repnz
mov
in
pop
or
in
int3
pop
inc
out
mov
movsl
cmp
popa
ror
push
lcall
jno
sub
lods
loope
add
mov
stos
in
lods
loopne
xor
fmuls
mov
cmp
mov
pop
jne
ljmp
stos
push
fnstsw
add
push
mov
addb
stos
xchg
stc
and
pop
insb
and
xchg
jl
loope
fwait
int3
pop
imul
xor
push
jbe
aaa
imul
popa
rol
lea
not
rcrb
iret
cld
push
repnz
lcall
sbb
push
sub
fadd
mov
in
les
cmp
push
xchg
cld
inc
or
aam
sub
inc
imul
jae
push
stos
aad
push
popf
xchg
mov
mov
mov
or
js
cli
inc
hlt
test
ljmp
push
dec
dec
cwtl
stc
fwait
ja
jg,pt
fsubrl
jle
in
mov
into
dec
out
or
loopne
sahf
push
sbb
jle
flds
fldcw
mov
mov
dec
adc
sbb
mov
repz
mov
cmp
ja
ror
cmpsl
adc
data16
pop
dec
lea
or
xlat
sub
stos
inc
stos
in
lds
pushf
mov
rcll
sbb
pop
mov
ficompl
push
push
ljmpw
mov
daa
movsl
add
xor
xor
in
icebp
push
mov
popf
jp
cwtl
pusha
insl
lods
call
adc
lret
xchg
sbb
mov
dec
lahf
jnp
push
adc
or
mov
xchg
scas
loopne
mov
lret
and
jo
sbb
fcomp
push
cmp
pop
mov
cmp
lods
mov
nop
loopne
adcb
test
jmp
xchg
inc
adc
push
mov
lock
ret
pop
in
push
dec
push
mov
pop
lods
pushf
lock
xor
dec
push
cwtl
mov
enter
pusha
ja
mov
loopne
inc
inc
fdivl
addr16
mov
mov
scas
stc
jae
jbe
jb
xchg
jmp
and
xor
mov
and
dec
fdivrl
jge
cmpsl
mov
fidivrs
xchg
fldcw
dec
and
and
jnp
std
js
stc
cmp
rcrb
leave
imul
xchg
repz
pop
dec
cmp
testl
xor
jle
sub
add
xchg
push
jge
sbb
sbb
xchg
ds
jmp
dec
or
xor
imul
std
ret
mov
mov
jmp
push
stc
sbb
out
jbe
movl
mov
loopne
add
push
sub
in
mov
repnz
inc
loope
push
cmp
imull
in
lret
js
fmul
jle
cmp
pop
negl
sarb
mov
mov
stc
jns
cmp
ror
lea
sub
pushl
hlt
sbb
mov
aam
test
cmpb
imul
rolb
out
pop
pop
mov
sbbb
adc
jb
jnp
outsb
xchg
hlt
or
jae
xchg
cmpb
scas
pop
dec
gs
enter
outsb
fcoms
xchg
jmp
dec
dec
lds
test
dec
adc
jle
add
jbe
push
jmp
dec
cwtl
jno
inc
lahf
repz
ljmp
js
adc
mov
mov
jae
dec
gs
movsb
ja
bound
loopne
mov
sti
rcll
rcl
inc
dec
mov
repz
nop
pop
test
and
iret
mov
sub
mov
mov
outsl
sub
jo
jb
sbb
movsl
add
out
jg
rolb
inc
mov
popl
in
cli
mov
mov
cmpsl
fistl
inc
push
sub
inc
aaa
sahf
stos
cmp
mov
aam
add
or
dec
add
jno
fmul
enter
xor
inc
push
scas
es
loop
push
inc
jecxz
mov
mov
pop
pop
push
cltd
sti
icebp
negb
dec
jp
dec
outsb
cmp
int
sarl
addr16
mov
adc
xchg
in
mov
fists
test
int3
cmpsl
scas
add
or
call
pop
and
lods
pop
and
shr
popf
in
ret
add
inc
aas
xchg
dec
or
pop
sti
cmp
add
bound
xchg
xor
fxch
push
sub
adc
pop
mov
mov
gs
mov
loopne
or
insb
xchg
lock
xchg
jns,pt
cmp
pop
xchg
fwait
in
loop
xor
mov
flds
hlt
sarb
and
ss
movsb
jns
jae
orb
into
loopne
es
lret
push
gs
imul
cmpb
and
iret
shr
cmpb
adc
cwtl
mov
sub
mov
aam
aas
cld
loopne
inc
outsb
inc
jne
push
les
mov
add
cmp
sub
xor
cmp
or
enter
fs
mov
or
add
jns
cmpsl
cmp
and
or
outsl
push
push
inc
jecxz
jb
repz
jl
sbb
and
add
cmp
out
sub
push
cmp
movsb
fs
xchg
mov
mov
cmp
push
add
mov
jnp
or
push
cmpl
mov
repz
or
jp
adc
pop
loop
cmp
cmp
pop
pushf
xchg
dec
sub
das
out
xor
mov
sbb
adc
not
sbb
lret
mov
and
subb
inc
lods
jl
ja
dec
insl
fnstsw
lea
and
outsb
rorl
mov
xchg
out
imul
mov
add
std
dec
rep
inc
outsb
popa
pop
out
aam
call
movsb
fwait
adc
inc
in
jae
cmp
jne
fninit
add
lods
mov
and
mov
xchg
imul
push
lods
fucom
adc
sub
sbb
lds
mov
sti
sub
dec
cmp
mov
mov
in
test
dec
pop
movsl
pop
xchg
push
add
push
push
shl
lretw
lea
xchg
ret
pop
ret
mov
inc
in
lds
xchg
inc
dec
mov
lods
aad
mov
or
bnd
out
xchg
stc
fidivrs
add
push
sarb
orl
cmc
xor
mov
sahf
and
or
push
ret
inc
adc
push
leave
dec
cmc
cmc
ret
jle
or
flds
ja
pandn
xor
mov
sbb
xlat
pushl
loopne
push
add
pop
dec
clc
mov
lds
push
cmpsb
loopne
mov
add
jo
push
dec
xchg
enter
ret
pop
aaa
mov
cmp
test
xorl
xor
push
sbb
addr16
loop
loopne
mov
ds
cmpsl
ss
hlt
call
or
addl
push
or
ss
xchg
jecxz
test
ret
pop
sub
data16
push
add
xor
and
popl
fucomip
mov
mov
mov
mov
inc
leave
push
and
mov
xor
int3
mov
cmp
out
aad
out
mov
lds
mov
mov
or
fndisi(8087
jmp
cwtl
dec
stos
dec
adc
lret
or
adc
jne
in
mov
popf
addb
mov
adc
mov
es
sbb
fisttpll
cmp
dec
mov
pop
push
jns
push
inc
cwtl
pop
into
add
cmp
notb
movntps
sbb
in
add
mov
inc
push
inc
jae
xor
xor
std
jg
pop
in
mov
insb
pusha
mov
pusha
clc
mov
loop
and
lret
mov
mov
inc
xor
inc
mov
int
into
fwait
mov
inc
inc
mov
fstpt
lock
and
add
into
test
lock
enter
push
test
cld
movsb
out
mov
cmpb
xor
sti
xchg
and
jne
cs
xor
and
jl
stc
outsb
es
pop
adc
pop
mov
in
outsl
fisubs
sub
int3
sub
adc
out
repnz
mov
mov
pop
cmpsl
jle
xorl
add
dec
push
sbb
in
out
lretw
dec
inc
xchg
je
int
fldl
lret
mov
inc
mull
dec
notb
mov
mov
ret
pop
push
jge
scas
xor
insb
movsb
shll
in
push
mov
into
icebp
or
jp
test
jbe
sub
ror
cli
push
or
jne
test
jns
xor
test
pop
dec
mov
push
and
mov
in
pop
or
mov
call
sbbb
sub
fdivs
stos
movsl
mov
mov
fildl
pop
jnp
movsb
xor
mov
daa
loop
imul
decb
mov
push
les
sbb
cs
xor
fcompl
jne
shlb
sti
inc
fcmovu
loope
cmpsb
shlb
mov
pop
test
jge
mov
mov
xchg
lret
sbb
sub
arpl
gs
test
cmc
movsb
mov
inc
fs
mov
addr16
and
mov
mov
xchg
or
hlt
or
jg
jae
mov
mov
jge
jge
loopne
sarb
dec
imul
jg
inc
push
mov
add
stc
mov
out
jb
inc
cmpsl
test
dec
dec
je
subl
fbstp
cmpsl
mov
roll
mov
out
std
int
loopne
sbb
xor
xor
sahf
roll
and
pop
lods
push
es
cmpsl
cld
mov
fs
rcl
popl
push
lea
or
mov
repz
cmp
icebp
mov
cmp
inc
sub
inc
mov
shlb
data16
cmp
cltd
adc
sub
rcl
sub
fwait
pushf
loop
mov
into
int3
sub
out
mov
hlt
sahf
outsl
scas
mov
cli
inc
out
cmp
repz
aaa
stos
adc
mov
and
out
movsb
lret
mov
or
lea
xor
out
add
dec
pop
es
scas
and
ljmp
int
xor
enter
inc
pushf
movsl
mov
andl
mov
jge
aam
inc
cmp
nop
inc
in
xor
or
mov
mov
sbb
mov
js
mov
jp
xor
push
add
jo
cmpsb
and
out
lock
andb
or
aad
stc
dec
scas
enter
xchg
cmc
pop
outsl
xor
mov
sub
jle
push
xchg
lret
push
lods
pop
sar
test
dec
adc
pop
dec
mov
adcl
xor
fld
mov
rolb
cmp
aam
sub
mov
int3
push
add
ret
jp
cmpl
jnp
adc
out
push
lcall
stos
fcomps
sub
lret
fistps
xlat
pop
ja
xor
jne
cmp
inc
jle
mov
mov
mov
xchg
xchg
or
fists
push
lds
outsb
push
mov
xchg
push
pop
pop
inc
repnz
negb
cmp
fdiv
mov
rcrl
sarl
pop
push
xlat
scas
xchg
out
inc
xor
sbb
in
repnz
mov
inc
or
or
jno
push
and
jae
adc
lock
add
imul
adc
test
ds
rol
lret
sarl
call
data16
adc
sub
cli
rcl
mov
mov
stos
and
out
iret
inc
sti
dec
sub
add
pop
scas
cmp
pushl
cmp
xchg
scas
add
adc
jnp
loop
mov
cmp
popf
inc
aad
in
xor
jmp
ss
cmp
lahf
adc
rcrl
sbb
or
bnd
js
and
xor
mov
xchg
inc
lcall
das
sub
pusha
sti
mov
outsb
ret
or
jae
pop
hlt
xchg
add
inc
mov
inc
stos
aaa
aad
arpl
mov
pop
push
lods
dec
sbb
fs
cmpsl
inc
fcomps
lahf
jbe
and
in
push
test
rolb
pop
addr16
ret
xchg
inc
push
es
jno
dec
mov
lods
insl
and
mov
clc
scas
sti
sar
dec
hlt
scas
mov
nop
mov
mov
add
cmpsl
in
pusha
push
or
jmp
aad
xor
cld
sbb
in
testb
in
pop
std
push
insl
mov
mov
or
cmp
jp
push
cmp
loop
es
add
xor
daa
cmc
cli
mov
push
inc
inc
xchg
dec
mov
int3
mov
or
push
add
stc
les
cwtl
jp
pop
lods
cmp
jns
out
xchg
or
fsts
lods
lds
push
pop
jg
add
es
or
jns
xchg
ss
xlat
sbb
loopne
xchg
pop
ljmp
rcrb
dec
pop
xchg
pop
cmc
mov
and
rol
jle
inc
dec
cmp
inc
jge
ror
fcomps
pop
and
jno
inc
test
out
or
pop
cmp
bound
lods
dec
movsl
aad
fisubs
mov
pop
sbb
pop
dec
sbb
insb
pop
scas
pop
and
out
lret
test
add
pop
pop
pop
jno
pop
fwait
jl
adc
es
push
sahf
cmpl
xchg
gs
add
dec
aad
orb
pusha
cltd
mov
jmp
bswap
lods
in
sub
or
fdivrp
sbb
sbb
cmp
xlat
shrb
jo
adc
mov
inc
pop
in
pusha
jne
jmp
push
cli
jge
add
fcompl
fs
mov
dec
fnstcw
jno
xchg
bound
in
lea
test
ret
cmp
push
and
pop
fstl
mov
xchg
pop
in
ja
in
xchg
ljmp
ret
sbb
cmp
cmp
sub
je
xchg
adc
sub
repnz
add
scas
add
and
repz
push
repz
pop
pop
xor
inc
cmp
mov
mov
and
inc
cmpsb
and
jne
xchg
push
mov
imul
pushf
xchg
loopne
fstl
inc
outsl
std
fwait
and
repz
ds
inc
divl
and
or
sbbb
xchg
aaa
bound
dec
mov
fstpt
out
dec
xchg
in
mov
mov
push
lcall
jle
repnz
sub
in
or
or
cmp
mov
xor
rolb
ret
pop
mul
js
repz
dec
popa
dec
push
add
mov
lea
xor
testl
cltd
in
das
je
ficomps
mov
add
dec
sbb
scas
or
xlat
ror
xor
dec
cli
push
xchg
sub
cltd
addr16
and
add
outsl
jae
or
lock
ret
fldl
xor
lods
adc
bnd
push
aad
lret
mov
mov
out
and
dec
pushf
div
sub
ss
mov
push
mov
les
push
adc
arpl
xchg
loopne
aaa
push
addl
outsl
jmp
mov
or
and
insb
fwait
push
push
pop
outsl
mov
pushf
mov
arpl
cmc
pop
nop
mov
call
push
les
je
bound
repz
cmp
sbb
cmp
testb
mov
adc
or
data16
bnd
adc
mov
out
or
push
pusha
notl
inc
es
sbb
sub
lcall
pop
dec
inc
ret
out
push
dec
sbb
fiadds
pop
jecxz
mov
int3
inc
xchg
push
push
or
push
xor
in
mov
ljmp
pop
and
mov
movsl
mov
pop
arpl
sbb
in
push
outsl
cli
sbb
fmull
cmpsl
pop
adc
int
jmp
xchg
pushf
faddl
ret
push
jo
xor
icebp
xlat
sub
cmp
pop
and
test
jno
xrelease
pop
out
test
mov
push
stc
sbb
mov
adc
and
stos
mov
loop
or
mov
iret
test
fisttps
sarl
in
popf
int3
add
inc
xor
divb
ficompl
shr
mov
xor
fdivrl
pop
mov
flds
inc
pop
jne
nop
in
outsb
mov
adc
mov
push
fwait
pushf
fisubl
scas
adc
push
add
outsb
repnz
imul
dec
push
lock
jle
adc
jge
xor
cmp
lods
inc
roll
mov
imul
rdpmc
cmp
movb
dec
xchg
cld
sti
cmp
inc
dec
inc
in
sub
call
lds
and
sbb
fwait
xchg
and
loopne
cli
fscale
xor
cltd
in
jnp
pop
out
cli
rcrb
xor
ds
adc
mov
sbb
scas
pop
sub
ljmp
cli
shrb
push
xor
cmp
cmp
pop
es
dec
sub
ja
cli
cmc
cmp
sub
mov
lcall
pushf
cwtl
gs
xchg
xchg
jb
push
inc
repnz
stc
jno
insb
xor
ja
pop
dec
movsb
movsb
popa
cmp
mov
sbb
sbb
aaa
pop
jne
adc
in
bound
pusha
adc
sbb
inc
test
inc
jmp
mov
cmp
movsb
pop
xlat
pop
lcall
add
imull
xor
bound
mov
lods
in
rorb
rcrb
jne
mov
stc
popa
or
jnp
rorb
cmp
inc
pop
add
inc
lahf
xchg
enter
in
mov
xorb
add
in
mov
pop
scas
call
xor
pusha
scas
sbbb
push
dec
xor
leave
inc
xchg
xchg
imul
cltd
pop
dec
pop
pop
pop
xchg
wbinvd
cmp
shll
lea
pusha
cltd
in
incb
js
out
lock
sahf
insb
fbld
pushf
out
xchg
lret
jbe
push
lcall
nop
test
sub
nop
cs
and
push
hlt
pop
sub
int
fs
rep
fstps
int
xchg
mov
jp
rcll
enter
sbb
pop
stc
addr16
nop
ja
xor
or
cmp
js
je
out
and
sub
pusha
xchg
jb
push
rclb
lods
pop
add
into
and
jge
pusha
cmpsb
and
jmp
nop
jmp
and
rcll
cli
dec
xchg
aaa
jle
sub
push
xchg
inc
add
mov
xchg
xor
push
add
bound
jp
arpl
std
xchg
das
push
cmc
pop
add
mov
fwait
ljmp
push
test
adc
sub
xor
add
cmp
notl
dec
push
pushf
or
push
mov
push
lret
xchg
lods
or
jp
sub
mov
inc
daa
and
adc
outsb
push
dec
mov
enter
push
push
pop
pop
mov
mov
mov
jle
fidivrl
lret
cs
inc
mov
ljmp
sub
jmp
pop
pop
cmp
adc
daa
inc
clc
add
add
in
xchg
aad
jae
inc
or
int
ljmp
cltd
insb
jb
gs
sbb
cld
sahf
xor
fwait
leave
adc
xchg
sub
cmove
popf
pop
push
pop
jg
movsl
fstpl
dec
int3
pop
ret
adc
in
mov
sbb
mov
mov
hlt
cltd
stos
js
push
mov
add
pop
lret
mov
insl
sti
sbb
ljmp
xlat
inc
loope
idiv
out
fld
psrlw
jle
cmp
push
xor
dec
in
out
xchg
out
mov
jne
outsl
jb
outsl
xor
loop
sbb
loopne
rcrl
dec
loop
jae
iret
mov
fmuls
aam
mov
push
fisttps
dec
sub
lock
mov
dec
jl
pop
stos
push
out
xchg
and
stc
cld
mov
push
rorl
test
adc
mov
iret
sub
sub
mov
in
jl
add
lods
fsubr
mov
repz
adc
or
aaa
jb
add
jmp
mov
sti
adc
xor
add
arpl
test
enter
fisubrl
lahf
jmp
add
sub
mov
lahf
aas
xlat
cs
dec
add
cmp
in
xor
out
inc
jae
stc
push
rcll
fldcw
sub
out
sub
fidivrl
fldcw
adc
and
mov
arpl
scas
pop
xchg
dec
push
cmc
jg
sub
scas
sti
outsb
jmp
sbb
int3
sub
fldcw
lret
dec
mov
xor
mov
stos
lock
jl
stos
lock
adc
aad
cmp
jnp
xchg
in
lret
int
mov
stos
xor
frstor
mov
bound
mov
add
push
ficoms
icebp
jnp
push
sbb
push
push
or
pushf
adc
insl
dec
ja
jnp
inc
in
and
mov
imulb
test
in
sbb
sub
hlt
ds
inc
sub
test
push
jmp
sub
sub
mov
inc
pop
bound
push
icebp
insl
sahf
div
pop
lods
int
test
jge
test
std
inc
mov
inc
mov
iret
mov
push
lock
stos
ret
outsl
jns
adc
mov
sub
int
lock
js
push
lock
fsub
xor
loop
or
test
mov
inc
lods
push
mov
push
pop
out
sub
and
stos
inc
push
cmpsl
push
inc
out
push
sbb
ds
inc
sub
mov
push
int3
inc
idivl
adc
xchg
mov
sub
fdivrl
pop
aaa
or
mov
in
dec
or
mov
jmp
test
mov
add
adc
push
mov
or
mov
jo
std
outsb
cltd
mov
jne
jge
negb
cmpsl
icebp
push
rorb
lods
dec
pop
xor
fwait
test
addb
cmpsl
sbb
sbb
ret
mov
sub
xor
in
mov
fcoml
cld
jp
push
cwtl
jns
pop
xchg
cwtl
outsb
cmpsb
out
xchg
mov
fs
fucomip
adcb
xchg
sub
xor
mov
lea
loopnew
inc
faddl
add
test
fs
pop
push
or
lods
cmpsl
daa
mov
stc
inc
fisubrl
and
pop
push
dec
pusha
idivl
js
popf
jnp
iret
movl
xor
sbb
dec
jne
aas
popf
xchg
shrb
mov
repz
adc
cmp
test
jae
and
mov
stc
sarl
dec
and
insb
in
test
mov
xchg
notl
sub
inc
sbb
xchg
imul
popf
mov
sti
out
jmp
push
cmp
or
cmp
pop
fbstp
loop
xor
jne
cmp
popl
cmpsb
or
inc
xor
imul
dec
in
push
out
test
cmpsl
fsubr
xchg
sub
cli
sub
inc
jne
dec
loop
xchg
int
enter
shr
jmp
sbb
xchg
and
or
ja
daa
mov
lret
fcoml
in
loope
push
xor
cli
gs
call
mov
fldenv
rcll
sub
data16
jo
stc
mov
ret
cld
jmp
add
ss
mov
jns
xchg
xchg
push
mov
mov
stos
in
jmp
pop
adc
ss
pop
mov
test
inc
in
enter
jecxz
cmp
movsb
cmp
aas
test
sti
xchg
fucomip
fdivl
add
cmp
call
cmp
cmpsl
jo
loope
add
cmp
insb
add
lods
inc
xchg
daa
lods
test
in
ror
hlt
mov
repnz
inc
sub
sub
inc
dec
jne
ja
xor
popf
cwtl
insl
add
mov
and
leave
xor
jp
lea
repnz
shrl
lods
and
leave
pusha
pop
inc
jb
jle
sub
dec
leave
ret
jmp
dec
adc
out
test
out
outsl
push
xor
outsb
add
adc
cmp
dec
xor
stos
inc
xchg
nop
mov
out
jmp
mov
ss
je
xchg
nop
xor
leave
mov
add
ljmp
dec
xor
leave
insl
insl
jmp
adc
loop
repnz
add
sarl
pop
mov
add
ror
stos
inc
repz
inc
dec
dec
stc
ja
fidivl
cwtl
out
xchg
lret
cmpsl
ds
jecxz
jne
pop
xchg
cs
ds
loop
jb
jge
mov
xchg
not
aas
or
arpl
inc
sub
pop
icebp
pushf
js
mov
mov
loop
cld
pop
aaa
into
inc
sbb
push
mov
lods
inc
mov
ret
cld
add
push
inc
pop
jle
mov
mov
aam
out
test
cmc
shrb
push
test
cmp
sub
stos
pop
aad
hlt
mov
testb
sub
xor
lret
xlat
xchg
cltd
xor
clc
testb
inc
inc
fidivrs
popf
xor
sahf
jp
enter
into
jmp
loope
sub
movsl
insl
dec
insb
add
jg
mov
fnstenv
pop
sub
sub
jbe
enter
pop
icebp
ret
ljmp
inc
xlat
push
inc
pop
icebp
jp
mov
lods
pushf
test
das
mul
cli
xchg
and
and
inc
inc
test
out
popf
mov
xor
call
rclb
push
jmp
mov
cmp
jmp
jmp
and
inc
outsl
inc
nop
daa
jg
repnz
fisubrl
fbld
es
popa
inc
mov
sarb
stc
add
sbbl
and
sbbb
pop
jae
stc
movsl
xchg
or
out
and
pop
cmp
aas
mov
lret
jmp
sbb
pop
cmp
arpl
cmpsb
test
jb
enter
loopne
push
sbb
pop
dec
cmp
mov
outsl
and
mov
loopne
xor
adc
jae
imul
xchg
mov
mov
mov
test
shrl
or
inc
fimuls
imul
xchg
js
inc
mov
les
mov
adc
mov
inc
imul
xor
mov
fs
or
outsb
aaa
adc
mov
push
and
xchg
scas
aas
xlat
mov
jb
mul
ja
adc
pop
dec
push
mov
mov
lods
and
out
cmc
pop
mov
adc
aaa
jbe
in
xchg
cwtl
fbstp
mov
and
cmp
arpl
jno
and
mov
fisubrs
mov
sub
mov
dec
adc
cmpsb
mov
lcall
in
insb
push
cs
pop
aas
sbb
scas
mov
iret
rcl
adc
pop
sub
xchg
pop
cmp
test
lret
call
outsl
push
pop
inc
sahf
xor
scas
cwtl
mov
rcl
pop
repnz
cli
xchg
sub
test
inc
sbb
jno
jae
stos
xchg
push
mov
lret
cmc
mov
out
mov
pop
xor
test
mov
ret
test
test
dec
cmp
test
imul
sbb
fbstp
or
xchg
sub
sub
mov
inc
mov
loop
shrb
add
test
daa
repnz
mov
jne
mov
fcmovnb
cs
popa
clc
sub
push
ljmp
jb
cmpsb
mov
xchg
hlt
divl
cmp
in
jb
mov
test
mov
je
jmp
pop
sahf
xor
xor
mov
lea
shlb
adc
xor
inc
outsb
dec
andb
xchg
jo
popf
scas
cmp
adc
mov
iret
push
orl
fldcw
rcrl
shr
jns
and
negl
cld
xchg
andb
shll
stc
adc
orb
adc
scas
fwait
bound
mov
repnz
ds
pop
mov
mov
stos
cmpsl
pop
out
lds
std
cmc
jo
sub
inc
mov
fs
xchg
aam
iret
mov
xchg
out
loop
lahf
sbb
xor
lods
imul
nop
xchg
mov
jecxz
cmp
pop
movzwl
sub
push
pop
out
test
call
aam
outsb
clc
idiv
inc
loopne
sbb
inc
dec
jbe
jne
pop
xchg
fwait
cmpsb
inc
mov
jo
or
mov
mov
adc
cld
sbb
popf
inc
or
dec
jbe
mov
jl
xlat
fwait
test
shl
lods
inc
out
or
inc
adc
ss
sti
xchg
inc
mov
xchg
lods
push
out
in
loop
fwait
sbb
sbb
mov
mov
icebp
mov
jb
jecxz
and
insb
or
stos
push
sahf
sbb
aas
mov
into
add
lret
scas
dec
pop
jae
ficompl
mov
jnp
adc
inc
imul
mov
adc
xchg
outsb
test
adc
xor
inc
repz
jge
das
jbe
gs
rcrl
push
cltd
and
ficompl
popa
or
scas
xor
imul
idiv
arpl
ja
add
push
into
icebp
addl
and
sub
movsl
add
dec
out
js
dec
xchg
or
pop
call
push
leave
imul
std
xchg
jne
push
mov
xchg
sbb
and
mov
out
xor
pop
ljmp
subl
sbb
mov
stos
sbb
inc
ljmp
test
ret
dec
pusha
or
cmpsb
cmpsb
dec
in
add
mov
and
adcl
sub
rclb
imul
pop
and
add
jne
inc
jmp
test
stc
mov
lods
dec
and
fistpl
out
push
xor
aam
xor
test
mov
and
outsb
lock
in
mov
sub
outsb
leave
jnp
add
addr16
leave
nop
and
inc
ret
test
jo
mov
jge
pop
bnd
out
mov
dec
in
mov
mov
aas
mov
mull
rcrl
daa
dec
ljmp
jno
shl
loopne
loop
sub
push
xor
xchg
mov
push
fisubrl
push
shlb
das
adc
mov
inc
fdivs
aam
fiadds
test
jns
add
int3
rclb
xchg
sub
pop
es
pop
shlb
jb
je
jb
add
test
jecxz
pop
lcall
push
dec
pushf
push
and
test
mov
int3
arpl
xsha256
cmpsb
xchg
arpl
mov
mov
mov
pop
pop
out
cmp
pop
mov
pop
data16
mov
adc
stos
and
fsubrl
add
xor
aaa
adcb
andb
or
and
dec
cli
xchg
jge
mov
mov
shlb
test
int
fsubr
test
fistl
xor
or
mov
shll
push
call
cmc
pop
sbbl
push
fnstenv
pop
rclb
lret
mov
xor
push
mov
out
cmp
and
push
cmp
lock
mov
jle
addr16
mov
xchg
sub
mul
les
sbb
push
jnp
add
roll
stos
inc
loop
xchg
gs
fsubl
ret
cmp
sub
mov
inc
fidivs
push
stc
mov
outsl
push
sbb
scas
inc
repnz
gs
dec
loope
test
jg
andl
roll
das
push
xor
mov
addb
ja
repz
cwtl
arpl
mov
fidivl
cli
addr16
movsl
sbb
sti
add
mov
cmpsl
and
in
add
jmp
dec
sbb
fdivl
jecxz
ret
mov
leave
lock
pop
ds
mov
ds
push
enter
ds
outsl
mov
xor
add
shr
sbb
fimull
and
inc
pop
divb
sbb
jb
ss
adcl
dec
pop
push
cmc
push
mov
jge
xchg
dec
cmpsb
mov
fsubr
loopne
adc
jb
lret
das
in
or
mov
xchg
stos
mov
pop
icebp
mov
in
cmpsl
sbb
xchg
sub
push
jmp
setl
or
mov
cmc
mov
push
sub
inc
repnz
notl
call
insl
out
test
inc
fmulp
cmpsl
xchg
fldz
gs
and
outsl
push
fmul
cmp
mov
mov
stos
inc
lret
sub
fnsave
xchg
sub
mov
pop
mov
xor
enter
cmpsl
ds
loopne
jns
cld
xchg
push
popf
outsb
lret
sti
insl
sbb
scas
jo
popa
sub
mov
push
and
aad
gs
push
sbb
mov
or
enter
push
cmp
das
loopne
mov
movsb
out
test
pop
lahf
mov
mov
dec
test
mov
divb
out
in
test
out
std
xlat
popf
pop
scas
int
jo
mov
das
mov
sarb
and
fsts
xchg
dec
xchg
hlt
mov
jp
cmpsl
imul
fimull
sbb
imul
jg
adc
adcb
fucom
jnp
in
daa
xlat
enter
push
rclb
loope
mov
xchg
mov
sarb
mov
and
push
daa
test
fisubl
mov
cwtl
popf
pop
lock
stos
testb
cs
lahf
xor
mov
scas
addr16
and
sbbb
push
pusha
testl
std
stc
into
jmp
add
pop
repnz
enter
in
pop
neg
jge
mov
mov
enter
out
mov
mov
ja
inc
sub
mov
loopne
mov
dec
jecxz
pop
out
jle
out
cwtl
jge
cld
outsb
pop
lock
pop
sbb
push
push
sub
orb
ds
pop
cmc
jbe
pop
lock
icebp
push
in
stos
cmp
fsub
pop
icebp
aad
and
popl
cld
dec
in
xor
data16
nop
daa
and
dec
stos
repz
out
imul
adc
pop
adcl
andb
inc
ficomps
fsubl
mov
sbb
xchg
sbb
gs
in
mov
clc
cld
mov
and
fwait
sub
pop
mov
and
push
sqrtps
adcb
mov
xor
scas
inc
jmp
jo
jo
fnstsw
sbbb
aaa
andb
mov
ret
add
inc
mov
hlt
sub
inc
fstps
adc
xchg
adc
test
xchg
into
gs
mov
push
popf
and
movsb
adc
rclb
pop
orl
daa
mov
jle
outsb
mov
popf
sub
mov
sbb
fcoml
ror
les
adc
insl
scas
shll
sub
xchg
pop
mov
jno
sbb
mov
cltd
or
aad
fcompl
fcomip
or
push
jmp
jo
test
push
jae
insb
adc
sub
aaa
cltd
shlb
mov
imul
mov
cmp
push
popf
xchg
aas
int
mov
adc
es
cmp
andb
jecxz
xchg
sub
hlt
jle
daa
or
gs
mov
aad
xchg
sub
xchg
xchg
sub
outsb
pop
pusha
add
mov
mov
insl
addr16
pop
or
add
cmp
or
mov
mov
insl
and
out
xor
punpcklwd
mov
ss
fnsave
lret
leave
out
cli
or
xchg
sub
mov
subl
pop
jne
fidivl
test
pop
cmp
int3
arpl
cltd
xor
mov
cltd
mov
sub
pop
subb
dec
icebp
pop
jecxz
lahf
ss
mull
call
incb
out
or
je
sti
mov
jg
stc
cmp
ljmp
jne
shlb
pop
enter
nop
montmul
cmpsb
add
pop
lock
test
inc
jne
add
push
popf
xor
push
jecxz
inc
hlt
cmpsl
ds
xchg
ja
add
push
or
inc
jae
jp
cwtl
mov
or
mov
inc
ficoms
pop
mov
xchg
outsb
clc
sub
imul
push
repnz
push
testl
lds
cwtl
das
inc
or
into
jns
ret
pop
xor
in
outsb
mov
insb
in
jbe
pop
arpl
xchg
xchg
sahf
pop
mov
push
or
inc
inc
cmp
jno
xor
hlt
clc
dec
in
clc
out
ljmp
add
cltd
mov
mov
lea
dec
mov
mov
out
xchg
xor
xchg
movsl
mov
ret
das
movb
hlt
enter
clc
addr16
sti
lods
inc
in
xchg
mov
inc
mov
jp
divb
std
js
out
jecxz
fbstp
lock
push
push
ljmp
sub
mov
mov
fs
ficoms
out
cltd
jbe
lret
imul
mov
in
cmp
data16
in
push
sbb
mov
out
xchg
lret
mov
mov
sub
lods
xor
arpl
test
out
sbb
push
jp
or
cmp
push
in
mov
loopne
out
imul
fistps
jo
push
lock
mov
push
out
daa
imul
mov
aas
mov
mov
jbe
shll
cmpsb
mov
push
pop
aas
stos
inc
jo
aas
inc
neg
jae
xchg
xchg
scas
out
test
cld
into
gs
sbb
sub
ficoms
flds
push
jmp
into
arpl
mov
scas
lds
xchg
daa
loop
and
xchg
mov
test
data16
inc
testl
and
lea
movsl
xor
ret
jne
mov
gs
ret
in
xchg
mov
aas
cltd
xor
adc
sub
out
test
ret
shrl
lcall
mov
mov
and
gs
cwtl
in
pop
fmull
int
and
add
lret
repz
mov
data16
test
cmc
mov
jo
arpl
loop
cltd
out
xor
mov
adc
out
test
out
mov
call
les
repnz
es
ss
jg
mov
int
ss
adc
sbbl
mov
mov
je
inc
mov
lds
or
inc
xchg
mov
daa
mov
lcall
mov
dec
pop
mov
outsl
fidivl
add
shll
push
mov
mov
repz
fnstenv
outsb
add
cmp
das
cmpb
jge
inc
ret
stos
push
mov
repnz
and
movsb
push
popf
nop
pop
scas
add
lret
cmpl
mov
push
lods
cmpsb
ss
jecxz
movsl
leave
pusha
pop
lock
and
pop
scas
cltd
stos
in
out
into
fwait
out
xchg
or
sbb
outsl
ds
jo
push
lods
pop
negl
daa
lahf
fbstp
mov
pop
sahf
inc
xchg
jno
leave
mov
xchg
nop
mov
popf
ljmp
sbb
fbstp
sbb
xchg
mov
jmp
mov
sar
mov
sub
xchg
push
push
out
test
add
jbe
out
xchg
ss
nop
test
or
or
adc
pop
das
inc
test
gs
call
add
adcb
rcrl
lea
jb
push
movsb
int3
std
xchg
mov
sbb
jl
jne
iret
movsl
inc
add
jmp
xchg
and
inc
out
xlat
pop
imul
dec
out
xchg
mov
ficompl
test
or
mov
das
ret
std
nop
or
loopne
cs
pop
mov
push
out
xor
mov
mov
pop
pop
test
lea
popa
loopne
xchg
daa
movsl
add
test
sahf
test
and
jge
clc
inc
fisubrl
mov
popa
clc
jnp
and
into
pusha
inc
fcoms
mov
mul
inc
mov
adc
pop
pushf
xor
dec
scas
inc
cmpl
outsl
jnp
xor
cltd
xor
push
mov
stos
call
jo
frstor
sub
pop
lods
inc
push
and
push
push
mov
or
mov
lods
cmp
les
stos
push
in
sbb
sahf
xchg
decl
adc
adc
inc
fisubl
and
in
shll
inc
pop
enter
push
out
nop
aad
add
jp
insl
inc
add
and
xor
lods
mov
mov
enter
dec
loopne
jns
imul
inc
mov
aaa
sbb
scas
dec
rclb
inc
fnstcw
stos
aad
sbb
pusha
std
xchg
push
push
sbb
add
daa
popl
iret
xor
push
jl
pop
lock
sti
int3
arpl
lods
xchg
fildll
lcall
mov
adc
dec
cmp
mov
in
and
xchg
sub
xlat
lock
daa
loop
mov
clc
mov
ljmp
and
rorb
pop
mov
es
pop
scas
add
xchg
sub
clc
ljmp
test
jg
pop
jno
nop
daa
dec
gs
push
ds
jae
push
rcrl
out
test
sbb
cmp
fnstcw
gs
stos
add
xor
jg
call
outsl
mov
mov
sub
hlt
xchg
sbb
dec
loope
or
jg
push
pusha
testl
push
in
cld
imul
lcall
lock
ss
repz
in
in
pusha
testl
push
pop
icebp
jg
pushf
xor
push
in
add
mov
lock
mov
aaa
into
insl
testl
mov
ja
mov
lret
aam
xor
gs
sub
mov
xor
inc
es
pushf
cltd
xor
inc
out
cmp
rclb
fnsave
cmpsb
cmp
sub
xchg
inc
mov
mov
jb
mulb
and
add
xor
mov
inc
pop
divb
jg
leave
repnz
in
mov
rcrl
lods
inc
mov
xlat
outsb
mov
xchg
cwtl
xor
cwtl
fs
dec
in
in
stos
adc
aam
faddl
lds
imulb
push
jmp
mov
mov
pop
repz
push
push
js
mov
leave
pusha
dec
mov
cld
xchg
inc
pop
mov
push
pop
cmp
xor
lock
dec
loop
push
clc
pop
das
jge
popa
imul
sbb
mov
setae
add
ret
pop
std
ss
insb
scas
cmpsb
pop
hlt
pop
sub
xchg
pop
push
push
mov
sbb
mov
push
lcall
in
cmp
lods
lock
push
lcall
inc
lods
aas
jns
adc
xor
push
in
nop
mov
jnp
les
movsl
mov
testb
push
and
mov
leave
dec
in
negb
int
test
in
pusha
imull
gs
movsb
sahf
and
mov
pop
hlt
into
in
shlb
push
jg
jbe
in
pop
lock
fs
cmpsb
outsb
or
pop
and
xchg
fs
pop
repz
xor
es
or
in
popa
clc
hlt
fs
inc
cmpsb
testl
cltd
arpl
insb
add
in
ret
add
in
jb
ret
cmpsl
cmpsb
add
xchg
je
mov
fs
or
mov
xchg
pop
mov
cltd
xor
xchg
mov
iret
lret
add
mov
aad
jl
shll
jo
or
adc
adc
add
ds
dec
dec
in
jb
fbld
push
jmp
pop
pop
test
pop
xor
daa
inc
mov
add
mov
or
icebp
cmp
lahf
test
lods
cltd
xor
das
and
dec
sbb
dec
fidivl
or
cmp
imul
in
mov
scas
and
cmp
pop
mov
mov
out
dec
fbstp
cltd
stc
nop
or
jmp
and
loopne
rcl
sahf
sub
mov
mov
sbbl
notl
and
and
mov
push
xchg
sub
adc
mov
stos
and
movsb
je
mov
scas
and
jns
or
iret
push
xchg
jae
lds
test
jecxz
inc
aad
scas
inc
arpl
imul
sbb
sub
jmp
adc
in
sbb
sbb
inc
loope
daa
mov
xlat
enter
add
shlb
mov
icebp
mov
cmp
push
stos
inc
jl
lahf
ss
jne
add
test
mov
rcrl
test
cs
scas
pop
in
dec
xlat
sbb
dec
push
test
push
push
in
aas
lret
xor
push
in
mov
mov
sahf
xor
push
mov
int
sbbl
mov
cli
xchg
sti
std
and
das
lock
loop
mov
fdivr
test
fwait
in
int
lds
out
xchg
cmp
mov
test
ret
or
or
addr16
arpl
lahf
push
jns
pop
stos
mov
jge
sub
inc
fcmovu
sbb
aaa
jnp
fnstenv
mov
std
pop
in
cmpl
pop
cmc
jno
push
mov
je
dec
pushw
rcrb
testb
imul
add
xor
mov
push
das
mov
push
sub
dec
jecxz
pushf
add
outsb
mov
mov
cmp
sub
jo
outsb
jmp
sub
adc
lea
xlat
jmp
or
jp
iret
sbb
push
jnp
mov
dec
cs
pop
mov
add
fs
dec
inc
push
out
xor
ja
cmp
mov
arpl
dec
or
mov
daa
or
and
adc
xchg
push
inc
fnstsw
fmuls
mov
pop
jle
jp
popf
jge
mov
insl
push
popf
pop
dec
mov
pusha
paddw
pop
pop
dec
pop
sahf
inc
ficoml
popf
hlt
jnp
fistpl
push
in
jl
add
out
sub
lods
sbbl
cltd
xchg
sub
add
lds
stc
nop
push
jle
xchg
jo
stc
nop
mov
push
popf
push
xor
xchg
xchg
loope
les
roll
pop
fdiv
testl
mov
repz
mov
rolb
xor
clc
mov
aas
jo
out
cmp
je
sub
stos
inc
lods
xchg
sub
jb
ja
cltd
mov
lret
xchg
or
shll
jb
mov
xchg
xor
jae
out
sub
pop
add
stos
jb
pop
hlt
or
addr16
incl
adc
lods
mov
outsl
cld
sub
mov
sbb
dec
dec
insl
add
loope
cmp
mov
aad
dec
push
repz
sbb
add
jmp
push
add
jecxz
push
inc
mov
std
stos
and
mov
gs
dec
movsl
mov
pusha
orl
je
mov
push
lock
sub
icebp
inc
pop
jo
jg
xchg
fbld
pushl
mov
rorl
test
enter
lods
cmp
jnp
fisubl
or
insl
or
outsb
stc
filds
inc
std
inc
scas
clc
pop
ficompl
cli
lods
jno
test
stos
add
out
mov
ud1
add
xchg
push
jb
shrb
ljmp
call
pop
std
or
lods
sub
push
enter
insl
lds
xchg
sub
cwtl
je
xchg
cmpsb
divl
and
or
mov
mov
fnstsw
adc
daa
scas
dec
xor
hlt
jg
push
jnp
sbbb
xcrypt-cfb
cmpsl
jecxz
dec
pop
cwtl
in
sbb
pop
fildll
fdivrs
cmp
xor
ljmp
stos
sar
iret
scas
les
sbb
test
stos
sarb
test
icebp
and
pop
cmp
mov
push
mov
inc
in
aas
sbb
sbb
push
dec
push
cld
sub
cmpsb
jecxz
mov
or
and
sub
mov
jo
clc
movsb
rorb
jmp
shrl
xchg
enter
les
sbb
inc
ds
push
aad
pop
fisubrl
mov
sub
or
ja
xchg
lods
push
xchg
cmp
mov
lahf
inc
sbb
outsb
hlt
xchg
push
dec
daa
stos
jmp
mov
adc
data16
cmpsl
inc
lods
movzbl
arpl
push
adc
push
into
int
sti
push
push
test
adc
xchg
cmp
inc
mov
sbb
push
adc
push
push
jge
jl
lcall
inc
dec
xor
adc
ret
mov
dec
sarl
jmp
stos
adc
ss
inc
pop
pop
mov
repnz
lret
call
jns
adc
out
jb
xchg
std
pop
outsl
push
pop
add
jnp
fneni(8087
adc
mov
xor
cmp
jp
lahf
jg
xchg
cmp
imul
mov
mov
cmp
out
jne
cmpsb
add
fistpll
push
xchg
cmp
xor
and
lar
nop
aas
outsb
push
jp
jae
mov
or
sarl
jle
mov
cltd
cmp
adcb
cmp
ja
mov
adc
push
adc
push
dec
mov
push
lea
xchg
jle
aam
adc
push
pop
dec
aas
popf
push
xchg
outsl
adc
dec
mov
sub
pop
out
out
or
or
outsb
cs
fldt
movsl
ljmp
shlb
inc
or
and
dec
or
ret
nop
ja
lods
cs
outsb
xor
sbb
push
cmp
repnz
and
jmp
inc
adc
sub
mov
and
add
inc
cmp
shlb
pop
shrl
sbb
clc
pop
jnp
shlb
cmp
cmp
push
add
dec
or
pop
arpl
xor
sbb
sbb
ljmp
scas
aaa
add
data16
icebp
fs
and
mov
lds
shll
daa
xor
in
addr16
sub
jne
sbb
lock
jo
cmpsl
inc
cmpsb
sbb
xor
push
mov
mov
xchg
jl
out
push
mov
push
lcall
lock
lahf
mov
loop
popf
les
lock
adc
or
mov
push
sub
cmp
jbe
cltd
xchg
sub
ljmp
mov
leave
mov
aas
int
adc
pushf
lret
push
scas
cltd
jl
sub
and
mov
out
and
pusha
mov
mov
movsl
loop
out
push
lcall
scas
js
cltd
add
jp
jnp
sub
pop
repnz
dec
sub
mov
cmp
mov
push
or
in
les
add
imul
std
fildl
inc
mov
mov
ret
xchg
movsl
sbb
sub
lds
cwtl
jge
insl
push
jnp
mov
push
or
bound
mov
sbb
and
lahf
ds
fs
cmp
jns
mov
cwtl
jle
jno
clc
bound
mov
jp
jns
repnz
ljmp
loopne
fwait
mov
inc
cmp
ds
push
outsb
and
ret
push
sub
scas
or
mov
jns
fisubl
aaa
and
mov
push
mov
outsl
sbb
jne
sub
adc
sarb
dec
dec
cmp
insb
clc
mov
inc
lcall
mov
dec
jecxz
in
push
fidivs
ja
mov
addr16
cld
inc
call
mov
jmp
bound
mov
xchg
push
or
and
cmp
jne
fisubrl
push
fldl
pop
jp
pop
pop
lret
mov
stos
inc
mov
iret
jno
ficompl
cmovnp
dec
push
stos
out
lock
test
and
fwait
outsl
jmp
sbb
add
dec
repz
sub
mov
adc
jge
xor
iret
mov
dec
xchg
and
outsl
push
mov
imul
hlt
mov
enter
push
adc
dec
test
into
fildll
fcomps
mov
pop
push
fidivrs
push
loopne
test
lret
push
xorl
or
pop
cmpsl
lcall
mov
outsl
mov
mov
jmp
lods
sub
adc
dec
test
icebp
sub
mov
int3
cmp
cld
movsb
outsb
sarb
aas
mov
sub
push
into
imull
rorl
mov
icebp
or
lods
pop
mov
mov
lahf
jg
icebp
ss
lods
push
insb
adc
and
cld
xor
xchg
mov
mov
dec
mov
stos
idivb
xchg
int
or
xor
in
ficompl
dec
icebp
adc
xor
mov
ljmp
mov
sbb
sub
repnz
sbb
cmp
loopne
sbb
insb
xor
ds
jecxz
in
push
dec
sbb
cli
test
adc
pop
cs
iret
cmc
add
pop
sub
ret
repz
mov
dec
pop
repz
mov
add
fdiv
adc
xor
lods
pop
pop
je
scas
lahf
adc
ljmp
fdivr
mov
jae
push
lods
inc
adc
pop
push
xchg
push
mov
cmpsb
pop
xor
mov
in
or
mov
test
mov
or
out
mov
mov
adc
mov
adc
cld
mov
test
sti
xor
rcll
sub
pop
in
into
xchg
cmpsl
repz
shl
ljmp
cs
push
adc
repz
inc
jno
mov
sub
xor
pop
adc
roll
imul
divl
mov
jmp
insl
xchg
mov
hlt
addr16
rcll
sbb
cmp
popf
sub
sub
sbb
repnz
enter
insl
and
and
cli
scas
test
jno
pop
inc
cld
mov
cmp
xchg
test
sahf
and
lds
jne
repz
loop
adc
sub
imul
cltd
pop
mov
dec
mov
cmpsb
cmp
and
les
inc
test
ja
lods
inc
inc
cwtl
mov
bound
mov
fidivs
or
inc
pop
es
cwtl
scas
inc
fneni(8087
mov
arpl
xor
push
out
cmp
sbbl
xor
mov
imul
push
cmpsb
loope
fcomp
icebp
mov
cli
call
push
out
xchg
and
mov
js
inc
fsubl
arpl
imul
gs
mov
jl,pn
and
shrb
xlat
pop
icebp
shrl
jg
cmc
mov
icebp
movsl
in
jo
add
xor
xor
xchg
push
mov
aaa
in
add
stc
popf
insb
jmp
jmp
mov
lahf
mov
shrl
ds
repnz
jge
repz
inc
lock
movsb
xchg
sub
enter
imul
outsl
push
sbb
test
dec
cmp
and
insb
rol
mov
stc
jecxz
push
out
push
add
jne
imul
sub
mov
paddb
jb
xor
bound
nop
addb
aam
or
or
xor
rcrl
jmp
jl
fildll
dec
adc
xchg
sub
and
and
mov
dec
insl
test
mov
lods
pop
movsb
out
xor
push
ds
inc
ljmp
jno
rorb
icebp
xchg
outsl
adc
add
adc
lea
push
jl
sahf
lahf
xor
movsl
cmp
mov
pusha
mov
jle
loopw
cltd
cs
xchg
jmp
and
cmp
pop
cmp
notb
pop
repnz
jge
test
jp
xor
push
cwtl
das
mov
push
dec
test
fsubrs
cld
aam
cs
testb
push
adc
cmpsl
shrl
lret
lds
inc
dec
jecxz
or
push
lret
and
sub
sub
fnstenv
sahf
mov
rcrb
nop
mov
fs
ficoms
adc
xor
mov
push
movsl
cmp
sbb
pusha
notl
pop
xor
xorb
test
lret
mov
into
or
ds
dec
in
gs
xchg
add
xchg
jae
inc
xlat
dec
xchg
lea
push
and
cwtl
jmp
sub
push
popf
scas
dec
fidivl
notb
mov
mov
stc
xchg
sub
xchg
mov
sbb
mov
add
sbb
ds
lods
cmp
fidivs
fs
xchg
in
pop
or
adc
or
or
mov
lahf
ss
sbbb
andl
and
icebp
mov
stos
inc
enter
in
adc
mov
in
mov
ds
mov
aam
lahf
inc
fistl
mov
mov
mov
les
fcmovu
xlat
pop
hlt
enter
hlt
jmp
xlat
outsb
out
cld
shlb
mov
fsubr
rdmsr
leave
xorb
mov
into
xor
cli
xor
adc
sti
fcoms
push
ljmp
inc
icebp
std
call
xchg
fistl
lret
enter
movsb
sub
adc
ss
icebp
cmpsl
fcompl
mov
enter
cmpsl
pop
repnz
cmpsb
cmp
cli
in
push
lods
fisubs
push
ljmp
ja
cmpl
lods
adc
ss
ljmp
jae
mov
fstpt
outsb
call
mov
mov
jb
fbstp
xchg
repnz
daa
pushf
xor
mov
mov
jo
xchg
jp
pusha
push
in
push
mov
clc
jb
sbb
lret
icebp
mov
mov
xlat
outsb
mov
ret
pop
add
mov
aas
pop
mov
repz
cltd
add
xlat
out
mov
ljmp
mov
jnp
sub
fnsave
addr16
mov
ret
and
je
inc
fadd
sub
out
push
fnstenv
adc
jmp
mov
inc
jle
xchg
pop
lahf
test
adc
sbb
xor
leave
mov
les
pop
test
pop
repz
sbb
nop
pusha
call
sub
ja
mov
enter
mov
dec
aas
jns
stc
adc
fnsave
stos
inc
movsb
inc
ja
mov
insb
add
fsubs
sub
adc
mov
lock
mov
jbe
ja
subl
or
pop
icebp
adc
ss
xor
leave
ljmp
fadd
pop
into
sbb
loope
stos
inc
sub
xor
je
fsubrs
xchg
shlb
xchg
cli
xchg
lds
in
lcall
fs
dec
addr16
aas
or
pop
inc
pusha
xchg
push
loope
jle
je
nop
enterw
xchg
stc
cltd
mov
mov
jbe
mov
insb
xchg
lods
lock
xor
push
mov
xor
repnz
data16
inc
or
notb
das
and
push
push
mov
stc
mov
into
push
out
nop
jo
jo
mov
mov
push
fbstp
inc
adc
pop
push
sbb
inc
cld
scas
inc
sub
int
lret
xchg
sub
jp
fisubrs
add
std
bound
nop
push
insl
nop
xor
stos
imul
jne
xor
push
and
out
imul
outsl
mov
pop
inc
flds
sub
xchg
push
push
jmp
and
inc
sti
xchg
cmp
pop
scas
xor
add
rcll
add
test
mov
icebp
nop
dec
loopne
adc
sbbl
mov
pop
insl
ss
arpl
leave
sub
in
sbb
mov
into
mov
aad
loope
push
lods
mov
aas
jae
sub
jg
dec
loop
push
imul
es
xchg
cwtl
loope
pop
daa
mov
xchg
or
test
shrl
popa
mov
push
pop
jae
mov
sub
pop
stc
add
fwait
xor
cmp
mov
loop
adc
cmp
aas
push
mov
jbe
xor
ret
dec
pusha
divl
popa
clc
aad
xchg
sub
notb
scas
out
lods
inc
repnz
into
jns
jmp
fcomps
dec
loopne
sub
rcrb
mov
mov
jbe
jecxz
fists
mov
popf
xlat
js
sbb
mov
or
inc
sbb
nop
adc
cwtl
inc
mov
pop
and
iret
data16
mov
fsubr
pop
dec
out
mov
pop
mov
pop
xor
mov
outsb
cs
pop
and
inc
and
mov
sub
mov
cmp
loop
dec
push
jle
test
dec
hlt
mov
cs
pop
adc
adc
cmpsb
xchg
sub
mov
fnstsw
mov
incl
es
jmp
shl
adc
push
repnz
jecxz
mov
in
add
ret
in
andl
mov
rcrl
mov
into
gs
lods
inc
aas
test
xorl
jb
mov
int3
sub
xchg
inc
test
or
sbb
lcall
shrb
test
inc
mov
test
mov
push
xchg
sub
sub
call
or
jnp
sub
rsm
xchg
mov
ret
mov
push
jns
scas
inc
enter
push
jmp
stos
inc
push
std
push
popf
out
mov
in
jp
xchg
mov
rcrl
push
cmpsl
inc
pop
mov
enter
and
cwtl
pop
or
sti
xchg
push
out
jp
loopne
icebp
mov
add
mov
push
gs
fcompl
xor
or
cmp
imul
fsubrl
push
mov
stc
fs
jnp
test
scas
notb
xor
dec
shlb
test
push
in
jbe
inc
fldcw
lret
repnz
and
call
and
out
test
mov
mov
pushw
sbb
pop
pop
repz
into
jecxz
movaps
mov
sbb
jp
push
jmp
mov
inc
fisubl
jns
mov
pop
add
outsb
add
lret
pop
cmp
dec
repnz
xor
mov
incl
jg
jb
insb
fdiv
nop
popa
clc
add
repnz
ret
push
push
in
and
and
lret
int
in
add
jb
add
clc
stos
js
jmp
enter
in
iret
data16
mov
mov
mov
call
sbb
in
and
fmulp
or
sub
mov
lret
and
dec
xchg
dec
jl
pusha
hlt
scas
dec
or
nop
scas
sub
sarl
ficomps
je
lods
cs
adc
add
dec
rolb
cmp
loop
sbb
pusha
aam
lcall
ljmp
stos
daa
mov
mov
lods
cs
and
popf
stc
lock
movsb
jb
ret
std
pusha
pop
incb
cmp
lret
xchg
fdivrl
xchg
add
xchg
adc
in
test
divb
ss
ds
stos
into
mov
rclb
negb
mov
jecxz
add
adc
rcll
int3
cli
mov
pop
stos
cpuid
cmp
fbstp
rclb
xchg
push
mov
jne
jno
mov
or
xchg
cmp
cmp
dec
repnz
or
icebp
je
dec
adc
dec
push
cmpb
dec
push
adc
cmp
nop
rorl
loop
dec
mov
clc
scas
je
jo
pop
cmp
xchg
ret
mov
movsl
pop
mov
jae
xchg
rolb
dec
mov
jecxz
push
mov
sti
dec
loope
and
pop
push
xlat
push
js
sub
xchg
stc
jl
cmp
iret
ret
insl
cmp
sahf
and
ja
mov
xchg
cmpsl
adc
inc
enter
fs
cs
sbb
rorb
mov
jmp
or
imul
push
lock
repnz
mov
cmpsl
loope
mov
xchg
add
xor
dec
in
or
mov
imul
pop
xsha1
cmpsb
mov
mov
sub
cmpsl
out
in
ret
cmp
push
das
mov
add
mov
push
adc
xchg
add
or
test
xor
pop
cmp
inc
in
dec
loope
bound
sub
rcl
jo
pop
out
fwait
vpextrw
lds
and
aad
popa
xor
in
push
inc
cmp
in
sbb
jo
xchg
fdivl
push
mov
movsl
lret
data16
push
inc
mov
push
inc
ja
inc
xlat
fwait
cwtl
pop
lret
cmc
in
jmp
jl
adc
add
xchg
nop
and
out
aas
adc
fsubrs
xor
hlt
gs
testb
scas
adc
loopne
cltd
xor
add
lret
mov
pop
push
push
call
mov
outsl
push
fcom
repz
lea
adc
jg
das
test
lret
sti
repz
and
inc
add
and
ret
test
outsb
push
rol
fnstenv
ret
pop
jns
test
lcall
and
call
ja
popf
xor
cwtl
or
out
popf
sbb
or
insb
ss
pop
push
mov
mov
fsubl
or
xor
xchg
bound
jne
fadds
xchg
or
xlat
outsb
or
fdivl
daa
adc
jne
jns
lahf
clc
notl
jnp
scas
cmp
jno
add
or
sbb
loop
or
jp
mov
inc
ds
andl
cmpsl
mov
in
lahf
test
adc
mov
xchg
sbb
pop
mov
add
rcrb
inc
sti
lds
pop
dec
inc
sahf
mov
or
cmpsb
ljmp
adc
xchg
cli
cmpsb
outsl
sub
mov
stos
insb
dec
inc
xor
and
add
xchg
jno
cmp
std
sbb
das
ja
clc
pop
xchg
stc
inc
lahf
scas
mov
add
insl
in
mov
ficoms
inc
andb
sbb
mov
jecxz
mov
and
cmp
fisttpll
jnp
pop
pop
mov
sbb
addr16
pushf
jmp
xchg
loop
lret
in
xlat
xlat
stos
stos
into
popf
sub
sbb
sub
dec
and
idivl
pop
sar
xchg
push
mov
jne
sbb
push
pop
arpl
and
mov
pushf
mov
ja
jnp
mov
add
aas
sbb
mov
pop
mov
cltd
mov
jno
mov
sti
nop
cmp
jns
cmp
sbb
scas
cmp
push
fdivrp
pop
lock
dec
jns
jle
stc
jl
xchg
sub
lock
inc
cmp
pusha
insb
imul
mov
or
inc
aaa
sub
addr16
gs
test
mov
xchg
jmp
push
ljmp
xchg
nop
jl
sub
iret
mov
add
pop
jbe
sub
mov
xchg
mov
mov
xchg
or
ds
sub
or
sbb
push
loopne
lea
sahf
pop
rol
mov
mov
add
xchg
xchg
fmuls
sbb
rorl
test
sub
std
mov
inc
push
and
stos
ljmp
in
adc
scas
imul
sbb
cmp
push
movsl
icebp
test
dec
sbb
pop
mov
mov
mov
addr16
jne
cmc
mov
push
sub
push
mov
xchg
cmp
js
dec
pop
aad
jns
jbe
xchg
mov
lcall
outsl
push
sbb
fwait
xor
cmp
jns
pop
in
roll
fwait
bound
repnz
cs
xchg
add
sub
mov
dec
les
mov
ret
test
mov
test
divl
out
push
mov
icebp
lcall
mov
addl
gs
xchg
dec
dec
shlb
fbstp
pushf
inc
daa
in
pop
or
sbb
or
sbb
pop
ja
repz
testb
pop
jo
mov
jb
lds
sub
in
xchg
sbb
and
sti
jb
out
out
int
popf
xor
lret
fstpl
je
icebp
xor
or
dec
mov
mov
je
jnp
mov
mov
push
movsl
or
mov
fisttpl
lahf
in
jne
mov
jp
xchg
roll
lcall
popa
clc
lret
loopne
out
dec
fldenv
mov
lods
or
popa
cmp
pop
out
push
out
mov
or
push
ljmp
pop
sahf
jo
sbb
dec
lds
mov
adc
and
cmp
pop
jmp
inc
sbb
je
sub
mov
sub
mov
mov
cli
xchg
insl
or
test
enter
pop
cmpsl
loop
sbb
lea
imul
push
leave
out
lret
jne
inc
data16
mov
cmp
inc
xchg
sub
ja
test
mov
lods
mov
loope
adc
inc
fildl
xchg
xchg
sub
and
je
int
adcb
sub
dec
dec
jecxz
idiv
xchg
mov
push
mov
fadds
lock
icebp
clc
mov
or
mov
cli
fwait
stos
lods
inc
add
push
in
mov
fistps
sub
or
pusha
lods
pop
sahf
and
and
icebp
aad
push
in
dec
mulb
jmp
or
cmp
pop
pop
iret
data16
cmp
fs
sbb
mov
out
icebp
sbb
mov
inc
outsb
inc
fstps
loop
test
inc
fcom
cmp
cli
lods
andl
mov
xor
pop
jg
jno,pn
sbb
sub
lret
ss
je
or
lock
movl
pop
std
pop
test
mov
arpl
pop
pop
test
ljmp
xor
xor
or
push
inc
mov
repz
jb
xlat
sbb
pop
add
mov
jne
jno
dec
xchg
cltd
xor
outsb
lret
bound
xchg
sub
mov
popf
xor
in
daa
mov
xor
pop
mov
mov
xor
popa
mov
dec
jle
movsl
cmp
rol
pop
lds
icebp
mov
xor
inc
jmpw
sbb
xor
insb
int
xchg
sub
cmp
push
ss
in
push
mov
push
or
mov
jne
pop
pop
test
add
mov
dec
pop
mov
push
push
out
orb
int3
xor
in
shl
cmpsb
add
xor
mov
ds
in
add
xor
or
pop
call
jp
mov
inc
dec
je
add
loope
ss
aad
adc
divb
cmpsl
mov
arpl
or
mov
add
and
in
push
popl
and
mov
lods
rcll
sub
inc
add
jns
mov
leave
add
sub
ljmp
sti
mov
xchg
sub
lea
jb
mulb
arpl
call
or
or
push
int
inc
mov
int
add
inc
xchg
xor
jns
inc
jno
andl
sbb
xor
dec
add
shrb
push
push
xchg
out
addb
mov
loop
scas
inc
shrb
aas
incl
push
lods
sub
out
fs
testb
push
cs
pop
cmc
xchg
mov
mov
push
xchg
jo
pop
dec
push
stos
jb
mov
cs
imul
sub
loope
imul
mov
mov
mov
enter
mov
or
dec
rcrb
mov
ds
sub
inc
mov
xor
sub
sbb
mov
cmp
inc
mov
inc
mov
sbb
cld
push
cmpsl
ret
mov
xchg
sub
sub
in
jecxz
cmpsl
adc
repnz
fsubr
jg
insl
adc
adc
inc
outsl
push
mov
shr
push
lods
sbb
jge
add
mov
test
mov
cs
repz
mov
and
mov
push
clc
mov
pop
mov
lock
lock
mov
imul
xor
daa
dec
push
pop
test
xor
jge
or
aam
test
xchg
add
xor
mov
and
sbb
popa
and
sbb
sbb
push
mov
arpl
and
pop
sbbl
notl
cmp
mov
nop
add
pop
lret
inc
or
sbb
jmp
pop
adc
xchg
cltd
in
fwait
sbb
or
mov
jmp
pop
sbb
imul
mov
into
test
and
xchg
push
call
pop
test
add
jne
add
lds
ss
push
aam
insl
into
cli
inc
mov
cli
xchg
xchg
mov
jbe
inc
fidivl
stos
xchg
stc
dec
dec
jmp
or
cmp
fidivrs
iret
mov
mov
add
mov
jmp
dec
in
pop
repz
std
leave
mov
leave
push
int3
cli
es
andl
icebp
hlt
iret
or
test
sbb
push
lds
idivb
inc
movsb
inc
add
xor
ss
fcompl
mov
js
pop
xchg
lods
std
mov
bound
ret
hlt
inc
pop
push
rolb
lcall
hlt
mov
shlb
loop
push
xor
jbe
aaa
xor
xchg
mov
mov
xor
scas
adc
test
shr
test
inc
sbb
arpl
pusha
test
xchg
push
insb
push
dec
mov
lds
lcall
push
mov
sub
jb
xor
mov
inc
or
pop
mov
imul
sub
je
out
dec
call
fisttps
std
xchg
scas
push
and
push
sub
scas
ss
int
pop
mov
lea
in
sahf
xchg
mov
mov
sub
sbbl
lds
rcll
jno
xor
arpl
fwait
cmpb
fistps
pop
mov
cmp
xor
lea
ss
mov
or
mov
shlb
aad
clc
clc
jmp
pop
push
sbb
inc
daa
out
outsl
sbbl
out
fmull
lret
orb
rcrl
out
in
sub
cmp
xchg
scas
scas
dec
adc
ss
dec
sub
or
xchg
sarl
pop
pop
mov
xchg
aad
xchg
push
andl
ret
insb
cmpsl
das
fadd
sti
or
test
cmc
dec
xor
push
mov
cmp
enter
xchg
jmp
xchg
loopne
jo
push
aad
mov
inc
ljmp
sbb
sub
cmp
stc
rcll
stos
cld
push
lods
sub
cli
mov
push
in
loope
xchg
adc
lds
jb
loope
xchg
fbstp
out
dec
test
xor
out
sar
jle
xchg
imul
mov
pop
orb
xchg
jge
sub
cmc
inc
fisubl
jo
insl
push
xchg
adc
aad
mov
lcall
and
xlat
loope
xor
stc
insb
push
pop
hlt
jle
movsl
ret
or
push
dec
cmp
or
movsl
mov
mov
stc
int
leave
inc
xlat
cli
adc
lea
adc
std
adc
dec
push
push
inc
adc
call
incl
into
mov
pop
cmp
fst
iret
mov
mov
jae
push
adc
pop
mov
lea
add
pop
sbb
insl
xor
push
cmp
mov
mov
or
push
mov
mov
push
add
mov
push
or
inc
movb
pop
aam
xor
aad
cmp
dec
lods
pop
scas
es
and
mov
aas
jmp
fwait
sub
int3
cmp
jb
in
inc
jle
jge
divb
push
pop
orl
gs
xlat
out
ljmp
fstl
sub
and
xchg
push
cmpl
mov
les
mov
das
repnz
pop
jns
addr16
fisubl
bound
xchg
mov
inc
std
out
ss
test
js
faddp
ja
negl
xchg
fdivrs
push
lcall
rcll
pop
clc
mov
sub
dec
cmp
xchg
sub
cs
cli
push
add
fdivs
jecxz
and
dec
out
and
adc
xchg
out
arpl
push
pop
pop
out
add
fistps
inc
scas
push
popf
rcll
mov
decl
and
daa
int
mov
int3
enter
xor
fldenv
into
push
mov
scas
aaa
pushf
jecxz
sbb
mov
xchg
mov
stc
jo
add
mov
sub
push
aad
jp
xchg
sbb
ljmp
cmp
leave
call
sub
loope
mov
test
mov
and
aad
sbb
adc
call
nop
stos
hlt
mov
pop
mov
das
js
clc
mov
popf
loope
adc
sbb
sub
das
sub
shr
adc
sbb
pop
pop
jl
mov
jp
sbbl
lret
jmp
fildl
inc
iret
cmp
test
push
mov
aam
clc
ss
cmc
jl
repz
rcll
imul
fsubl
xor
sbb
in
testl
sbb
sbb
pusha
in
add
lods
insb
fstpl
clc
mov
in
fisttps
cmp
add
cs
test
push
aam
out
sbb
mov
sub
push
sub
inc
jmp
xchg
je
dec
loope
mov
mov
sbb
aam
addb
xor
xchg
sub
loope
jne
adc
sub
dec
sub
sub
and
adc
lods
dec
or
xchg
mov
push
outsl
or
in
jge
push
mov
mov
cltd
xor
jns
add
int
ljmp
and
or
icebp
sahf
xchg
pop
inc
xchg
dec
fidivl
xor
rcrl
arpl
adc
xchg
and
sub
inc
aad
push
loopne
lcall
inc
stos
imul
lret
clc
lock
inc
mov
xor
sbb
xor
add
mov
incl
and
das
popf
or
push
xor
cld
cmp
push
dec
js
test
push
mov
out
std
loop
mov
pop
fimull
scas
add
cmp
popa
pop
push
fs
adc
jae
pop
repz
push
mov
mov
jae
cmp
fs
and
cmp
push
adc
neg
inc
sub
mov
ja
push
xor
inc
stos
push
xor
xorb
jno
adc
test
repz
inc
cmp
popa
outsb
mov
pop
movsl
js
jno
push
mov
push
rcrl
adc
sbb
and
aaa
jmp
and
or
movsl
shrl
and
lcall
sbbb
mov
jmp
mov
cmp
pop
mov
mov
lahf
mov
inc
cmpsl
cwtl
sti
pop
mov
mov
pushf
pop
add
ss
fsts
das
je
xor
sub
je
cmp
push
adc
mov
lods
imul
mov
clc
movsl
xor
jecxz
xor
ret
gs
push
sbb
jns
sub
mov
fwait
inc
add
fwait
outsb
and
ljmp
sub
sub
cld
xchg
scas
dec
pop
fisttpl
aad
adc
loopne
mov
sub
lods
inc
mov
mov
mov
ficomps
push
out
push
sbb
sub
mov
enter
mov
in
fmul
add
orl
pop
ja
aad
adc
sub
es
pushf
inc
xor
jne
push
inc
scas
rorb
xorb
pop
push
mov
mov
push
sub
dec
or
cmp
shrb
dec
imul
push
les
dec
nop
aad
outsl
push
or
cmp
lods
shl
pop
je
dec
aad
out
or
andb
cmp
ljmp
sarl
lds
add
or
mov
and
testb
mov
mov
xor
mov
dec
jmp
xor
pop
pop
inc
in
jo
std
stos
mov
sbb
add
lods
xchg
test
fiaddl
int
mov
mov
sbb
jnp
in
daa
jecxz
sti
cmp
ficomps
ja
jnp
dec
repz
lea
push
enter
and
push
mov
inc
push
lods
inc
jne
fmull
addl
jno
pop
inc
fwait
xchg
or
es
cmpsb
dec
out
jle
jno
add
push
add
pop
sbb
addr16
les
adc
and
pop
arpl
ds
sbb
into
and
stc
sahf
in
cmp
sbb
ja
out
pop
cmpsb
push
jmp
jge
mov
dec
lret
and
cs
leave
push
xchg
sbb
add
cmc
rorb
daa
jne
les
cmp
mov
inc
mov
xchg
sbbb
jecxz
mov
sbb
or
jae
jmp
vmwrite
adc
sbb
sti
or
inc
mov
sbb
fmulp
pop
and
jbe
pop
dec
push
lret
push
call
test
and
adc
xor
fstps
cmp
pop
popa
rcrl
leave
dec
jno
pop
add
call
fnstcw
sahf
jle
test
orb
mov
mov
jg
scas
inc
xor
sarl
pop
or
rolb
jle
inc
adc
lret
mov
and
jb
lods
adc
jne
popa
test
sub
jg
xchg
shll
or
pop
and
scas
mov
sbb
add
fnstcw
push
cmp
jbe
sbb
clc
push
sub
arpl
mov
in
daa
lea
aad
mov
ret
stos
cmp
fdivl
cs
aaa
int3
popa
cmp
inc
adc
les
push
dec
xlat
jb
and
or
push
test
stos
into
jg
adc
ss
pop
lock
sti
lock
fwait
cvtps2pi
loopne
popf
mov
sbb
inc
cmp
inc
pushl
cs
jne
jae
pop
inc
sbb
xchg
jo
cmp
adc
insl
mov
mov
jbe
or
lret
outsb
mul
pusha
std
jae
jmp
push
mov
pop
inc
movsl
mov
cmpl
jae
cmpsb
pop
mov
cmp
test
lea
out
outsb
pop
add
call
std
inc
mov
push
out
sbb
daa
outsb
jl
pop
scas
scas
cmp
test
push
ficompl
inc
idivb
mov
and
push
sbb
cmp
add
mov
sahf
sbb
loope
stc
add
popf
repnz
or
or
lock
xchg
adc
add
hlt
cmp
cmpsb
shrl
adc
repnz
ret
out
out
adc
lcall
adc
add
imul
xor
popf
cltd
gs
add
les
push
movsb
and
aad
xchg
in
inc
cli
in
scas
xchg
or
test
in
lds
xchg
popf
jmp
sub
aad
push
in
negb
dec
mov
pop
repz
mov
icebp
cmc
out
push
cmp
rorl
push
xchg
cs
push
in
adc
pop
mov
in
shll
addr16
push
hlt
jecxz
divl
in
mov
int3
dec
jmp
fs
fisubl
pop
add
repnz
xchg
test
iret
shlb
ret
ret
fsub
aam
out
ja
fbstp
sbb
sbb
cld
sti
sub
mov
mov
in
clc
push
pop
xlat
shl
fisttpl
cmp
sbb
jbe
inc
sub
inc
subl
cmpsl
ret
xchg
scas
daa
sub
push
iret
mov
add
sbb
push
mov
clc
daa
aas
mov
mov
jecxz
push
in
push
mov
mov
xchg
push
ret
cwtl
mov
lcall
clc
imul
sbb
loop
lock
out
ljmp
out
cmp
jnp
xor
push
jne
cmp
leave
dec
sahf
pop
sarb
pop
push
stos
pusha
test
int3
arpl
cmpsb
push
xor
popa
and
repz
cwtl
xchg
xchg
addr16
jp
fsubl
ret
xor
cs
push
push
push
pop
scas
xorl
cmp
pop
inc
jns
mov
out
les
push
ljmp
insl
add
pop
mov
and
adc
rorl
ret
mov
sti
dec
in
aas
mov
mov
les
and
xchg
xchg
sbb
mov
mov
mov
js
test
arpl
push
dec
pop
idivb
adc
jae
stos
test
sbb
mov
and
pop
scas
pop
movsb
ret
xlat
in
mov
rcrl
inc
dec
jp
pop
test
xor
mov
icebp
adc
jb
out
pop
out
int
mov
mov
shrl
rclb
lods
out
xchg
mov
ret
adc
push
leave
sbb
add
faddl
call
popf
int3
and
das
cltd
rcrl
xchg
sub
lret
inc
iret
out
sbbb
ljmp
add
cmpsb
cmp
push
adc
ljmp
adc
jle
test
dec
jge
dec
jecxz
or
push
in
sub
and
dec
je
enter
add
push
xchg
sub
sub
cwtl
cmp
pop
scas
xor
sbb
arpl
insb
xchg
mov
sbb
or
cmp
mov
xor
fdivrl
int3
arpl
mov
fs
lods
adc
jno
int
mov
mov
cmp
adc
bound
iret
data16
inc
fistl
pushf
xchg
sub
xor
shlb
mov
pushf
xor
call
jp
popf
xchg
sub
pop
xchg
sub
pusha
dec
lea
xor
xor
mov
mov
sub
dec
test
pop
outsl
mov
lret
and
or
and
mov
sub
add
adc
mov
push
inc
int
movsl
fldcw
mov
xlat
iret
mov
cmpsb
ret
inc
gs
mov
xchg
mov
data16
or
adc
pop
push
pop
mov
mov
mov
fiaddl
repz
fdivl
sbb
rorl
popa
clc
in
add
lret
or
loope
sbb
ds
inc
pop
inc
ficoml
lret
ja
adc
lret
mov
xor
hlt
mov
push
in
test
pop
push
pushf
xor
pop
mov
dec
or
out
stos
inc
fists
jl
imul
cmp
jb
mov
pop
sbb
movsl
mov
outsl
push
jle
mov
xchg
push
insl
add
fisttpl
jb
nop
rcll
cmp
xor
pop
jmp
jns
push
adc
push
cmc
mov
or
mov
ja
nop
lock
pop
sub
lea
push
movsl
push
test
ljmp
outsb
add
addr16
scas
inc
adc
ja
mov
pop
icebp
aad
pop
adc
cli
pop
mov
push
fisubs
rcrl
inc
ficomps
out
mov
fildll
mov
xchg
mov
add
test
in
mov
mov
cltd
insl
dec
cli
xchg
jge
push
cmpsl
cmp
testl
xchg
or
movsb
cmp
jb
xchg
jb
add
es
cmpsl
enter
enter
mov
or
fs
xchg
xchg
lock
and
sub
lods
xchg
out
xor
push
rcrb
sub
add
xchg
sub
je
xor
popl
xchg
rclb
dec
scas
dec
loopne
es
je
cmp
negl
and
mov
push
fdivs
jne
xor
pop
pop
add
pop
ljmp
pop
push
cmp
inc
sub
xchg
jb
xor
lahf
arpl
jg
push
push
test
and
pop
push
jo
mov
lods
sub
jo
dec
xor
mov
outsl
clc
mov
rcrl
mov
pop
push
xchg
aaa
lock
in
es
nop
ja
das
lcall
aas
data16
xor
or
push
mov
out
add
push
push
jmp
mov
and
scas
hlt
fisttpl
pop
divb
and
iret
fbstp
lret
sbb
mov
xor
imul
and
dec
loope
dec
and
imul
jb
inc
sub
jle
push
cmp
ja
repz
clc
imul
aam
pushf
adc
aad
pop
mov
lahf
das
sbb
pop
xchg
pushf
movsl
dec
jle
data16
in
add
sub
or
stos
rcrl
and
sbb
mov
mov
loopne
dec
and
test
sub
roll
in
ja
dec
out
cwtl
inc
fisubl
fsts
cmpsl
in
inc
cmp
addr16
sbb
mov
mov
jno
push
das
pop
out
sahf
adc
add
jge
cmp
imul
out
add
or
xchg
add
bound
mov
cmp
lods
xor
das
into
pop
out
call
jmp
push
jo
adc
push
ljmp
jno
inc
inc
mov
and
repz
test
jbe
rcll
test
sub
push
jle
movsl
data16
lock
push
sbb
sub
or
outsb
insb
ss
subl
mov
movsb
in
adc
ds
adc
ret
movsl
add
inc
std
push
mov
xor
push
stc
push
mov
gs
in
sbb
mov
push
scas
pop
movsl
sub
mov
xor
or
cmpsl
xor
repnz
loope
ds
pop
adc
iret
hlt
push
push
mov
scas
inc
repz
xchg
sub
arpl
mov
loop
sbb
imul
xchg
jg
cmp
xchg
lea
jg
push
adc
clc
inc
jmp
std
cld
cmp
insl
out
sbb
pop
xor
stc
jle
addr16
fldcw
popf
adc
mov
adc
dec
in
or
adc
or
out
pop
aaa
int3
add
sub
pop
aam
sub
scas
daa
scas
inc
pop
rclb
lods
and
inc
lret
sub
jb
cmp
movsl
push
xor
movsb
imul
cmpsl
mov
xchg
mov
cmp
int
dec
mov
stc
dec
mov
lret
or
xchg
xor
xchg
pop
sub
gs
xor
bound
mov
call
xor
inc
shl
xor
dec
xor
outsb
mov
adc
jns
jne
pop
cmp
inc
shrl
push
mov
les
add
lock
rcll
insl
rolb
xorl
mov
movsl
dec
xor
adc
enter
enter
mov
cs
pop
ss
pop
outsl
push
nop
daa
push
nop
mov
insb
inc
dec
mov
daa
pop
fstps
jmp
int3
arpl
out
stos
cmpl
xlat
inc
mov
xor
loope
xchg
sub
pop
mov
xchg
sub
push
out
adcl
fiaddl
jle
cmpsl
fs
cmp
out
test
pop
sub
pop
cli
push
fistpll
mov
mov
ret
mov
js
mov
das
xchg
sub
push
cmp
aaa
jecxz
jp
pop
cmp
in
daa
mov
fiadds
cltd
loop
das
jge
xchg
cwtl
sahf
xor
sub
inc
fldenv
shll
in
mov
lcall
rorl
mov
pop
sub
testl
fcoml
sbb
sub
xor
sbb
sub
dec
inc
fsubrl
or
cs
pop
repz
call
add
dec
loope
cmp
imul
lods
sbb
mov
je
push
jmp
xchg
gs
sub
dec
es
stos
jae
out
movsb
lret
jge
fadd
adc
add
xor
jge
rcll
push
loop
cwtl
lds
imulb
lret
ljmp
out
in
test
mov
xchg
jmp
or
movsb
cmp
imul
and
mov
rcll
add
pop
cmc
jp
movsb
cmp
sbb
jle
gs
mov
lea
shll
mov
imul
xchg
mov
mov
xor
xor
and
push
movsb
mov
stos
inc
and
in
cmpsl
xchg
sub
lods
push
call
inc
sbb
mov
ret
fldenv
sub
cli
xchg
pop
dec
hlt
mov
mov
dec
je
add
mov
dec
xor
inc
nop
push
shrl
mov
push
stc
nop
mov
adc
mov
insb
or
pop
jmp
mov
mov
sbbl
add
add
ret
push
inc
jecxz
or
fcmovb
pop
sbb
cmp
int3
cmp
push
out
mov
fmull
mov
push
mov
xchg
push
repnz
push
inc
gs
popa
jae
cli
dec
sbbb
mov
and
in
push
mov
push
into
cmp
aaa
into
inc
pop
add
mov
pop
cmc
add
adc
pop
repz
lods
pop
jp
mov
mov
add
shrl
add
mov
clc
cmpsl
repz
sbb
lds
adc
popf
dec
das
cmp
dec
in
add
xor
jg
jbe
repnz
lds
imul
loopne
xchg
repnz
inc
fstpl
dec
out
mov
gs
pop
popf
lahf
cld
xchg
daa
out
js
imul
ds
jns
or
ljmp
jae
test
cli
xchg
sub
cli
jbe
mov
push
mov
fnstsw
popf
rol
mov
pusha
repz
mov
mov
sub
sbb
mov
jns
mov
out
inc
inc
sti
ret
lret
push
sub
dec
cmp
push
adc
inc
xchg
and
pop
adc
push
loope
cmp
cld
insl
fwait
push
testb
jp
sub
mov
loopne
and
and
adc
ret
sbb
or
sti
shrb
cli
xchg
add
aaa
gs
shll
adc
add
xor
push
inc
adc
sub
xor
push
cmpsb
xchg
mov
add
mov
inc
mov
mov
in
subb
cmp
pop
shlb
add
jp
pop
shrl
mov
out
sahf
dec
inc
and
js
lret
fld
pop
push
add
jl
jmp
and
addb
scas
mov
stos
add
and
aas
and
rcll
into
xchg
je
loop
stos
lods
add
pop
xchg
cmp
push
mov
xchg
push
jl
arpl
sub
int3
arpl
cmp
out
test
es
sti
jne
into
sub
sub
lcall
sti
xlat
jbe
xchg
cmpsl
out
bnd
loop
xor
js
pop
movsb
cmp
mov
cmc
popa
stos
pop
movsb
add
ljmp
adc
je
jo
pop
mov
inc
inc
popa
inc
jge
sbbb
aaa
mov
fdivrl
sbb
jmp
fsubs
nop
andb
mov
mov
sti
pmulhw
mov
cld
imul
push
icebp
push
mov
lock
push
push
or
mov
cmp
inc
pop
sub
push
inc
push
and
jno
xor
lret
fsubl
and
adc
mov
sbb
xor
movsb
pop
bound
outsb
or
mov
sti
pusha
mov
mov
pop
adc
pusha
ret
sahf
fsubr
roll
icebp
call
mov
nop
lret
in
adc
xlat
std
adcl
mov
jnp
out
xor
xor
shll
mov
std
loopne
jo
push
add
fwait
repz
and
lods
std
push
jo
mov
stc
or
imul
pop
movsl
ja
jl
or
or
loopne
xor
mov
inc
movaps
inc
jo
sti
mov
inc
orb
adc
mov
or
jns
sub
xor
js
sbb
sbb
cltd
jb
loopne
jp
in
xchg
icebp
push
adc
jg
scas
pop
mov
dec
push
sbb
outsb
les
xchg
jnp
mov
sahf
xor
jg
outsb
cmpsb
mov
xchg
pop
not
hlt
mov
ret
cmc
iret
ret
push
lret
jno
sbb
movsl
xchg
ss
hlt
movb
pusha
pop
std
push
lea
shrl
mov
movsb
mov
arpl
mov
add
lods
xor
out
nop
rcll
lret
pop
jno
mov
sub
aad
mov
sbb
jo
cmpsb
data16
outsb
cli
movsb
cmp
mov
dec
test
mov
adc
shl
int3
rol
repnz
jge
fldenv
or
das
fisubrl
push
sub
pop
idivb
lods
pop
loopne
cmp
ss
pop
call
jno
sbb
mov
ret
xor
ds
outsb
add
xlat
mov
std
inc
fisubs
fsubrl
mov
shlb
fcompl
cltd
adc
sbb
pop
cwtl
jb
cld
data16
sarl
dec
and
ret
xor
rep
stc
bound
subb
je
push
ljmp
out
mov
es
je
mov
lods
fiadds
arpl
movsl
sbb
mov
mov
mov
xor
aaa
adc
jbe
mov
fcomp
jne
or
pusha
xor
jecxz
rcrb
jg
call
cmp
in
mov
or
mov
sub
sub
jno
dec
and
lahf
lods
adc
cmp
std
mov
cld
or
push
fdivrl
lcall
push
ret
sub
push
jmp
hlt
jne
and
adc
std
pop
dec
mov
sbb
xchg
mov
xor
mov
add
mov
adc
arpl
int
pop
push
pop
sahf
xor
mov
mov
xchg
inc
mov
sbb
fcoml
push
aas
or
xor
les
push
ljmp
daa
inc
mov
xchg
imul
test
ret
arpl
stc
mov
rorb
xor
or
sahf
xor
or
js
mov
roll
insb
add
xchg
jmp
cld
inc
or
ss
pushf
popa
push
out
insl
stos
inc
pop
jbe
cmp
xlat
inc
sbb
xor
inc
inc
fsts
insb
add
xor
push
sbb
dec
xchg
jp
push
mov
xchg
push
cmc
test
sahf
add
sbb
mov
lahf
loop
cmp
sub
inc
ss
shl
dec
mov
add
ljmp
jno
rorl
cmc
mov
sub
xchg
pop
scas
lds
xor
ret
insb
jge
sub
mov
ret
negb
jecxz
cmpl
or
adc
int
xor
loop
sbb
addr16
cmp
xor
test
fs
cmp
jne
xor
inc
gs
mov
inc
push
xor
test
pop
stc
add
dec
add
out
sbb
push
bound
xchg
rorl
push
jne
inc
sbb
clc
dec
ss
into
add
iret
cmp
mov
and
or
inc
addr16
cwtl
mov
inc
data16
insb
rcrb
out
sbb
xlat
dec
les
jb
xchg
sub
ds
inc
dec
mov
andl
pop
and
cs
xchg
mov
addr16
mov
xchg
rcr
repnz
int3
test
add
fmul
push
pop
jecxz
gs
adc
inc
xchg
xchg
jmp
dec
je
cltd
arpl
mov
sbb
fcompl
add
test
lret
jae
repnz
push
xor
mov
jmp
add
fisttpl
push
sbb
or
jp
aaa
outsb
sbb
bound
imul
ret
mov
ja
adc
icebp
pop
lods
cld
xchg
filds
lret
inc
mov
ss
ds
cmc
fcomi
cmp
mov
icebp
imul
pop
push
jmp
pop
cmpsl
lea
mov
pusha
pop
or
outsl
jnp
bound
pushf
xor
mov
add
xor
mov
fnstenv
arpl
dec
push
adc
imul
ja
cmp
push
pushf
hlt
fdivs
mov
int3
ficomps
mov
push
loop,pn
adc
push
xor
cmp
xchg
test
pop
adc
and
xlat
fisubs
cmp
icebp
imul
jb
push
cwtl
inc
fiadds
aam
bound
lods
cs
cmpsl
mov
inc
test
in
adc
fildl
xor
sub
es
test
dec
xchg
add
filds
test
push
inc
sbbb
xchg
sahf
and
imul
xor
mov
pusha
adc
imul
and
mov
das
pop
inc
jnp
xchg
mov
pusha
push
mov
mov
outsl
loope
std
xchg
xorl
popa
cmp
fidivs
xchg
fisttpl
or
pop
mov
xchg
xor
sbb
push
xchg
push
hlt
data16
stos
int3
fisubs
and
xchg
xchg
aas
and
push
rorl
jns
arpl
push
push
inc
mov
das
adc
popa
mov
or
mov
ror
lret
jle
xchg
scas
cwtl
lahf
adc
shrb
xor
pop
add
sub
fcoms
pop
inc
imul
sub
xchg
xchg
mov
pop
out
cmpsl
pop
dec
cmpsb
lahf
ss
loope
add
xchg
add
pop
ss
xlat
aad
nop
cltd
add
mov
push
jecxz
rcll
repz
stos
push
or
cmpsl
es
mov
fisubs
ret
in
inc
jp
test
testl
lods
mov
sbb
mov
jne
inc
popf
punpckhbw
sar
add
mov
movsl
in
cmp
push
stc
push
bswap
mov
orl
inc
adc
adc
dec
add
mov
mov
jae
sbb
cld
xchg
aas
insb
sbb
addb
sti
mov
mov
mov
mov
cmp
xchg
dec
clc
out
ds
pop
sbb
inc
pop
repz
push
jmp
scas
jp
pop
xor
jge
cmc
mov
scas
data16
xchg
sarb
cmp
gs
dec
sbb
mov
inc
cmp
push
lock
aaa
sbb
lahf
inc
sub
lods
push
cmpsl
push
pop
scas
out
ret
cmpsb
aad
pop
gs
movsl
push
lret
cmpb
mov
ret
add
jmp
loopne
lods
or
pop
ds
test
xor
stc
fnstsw
andb
adc
lcall
in
sub
ss
cli
xchg
cmp
sahf
cwtl
adc
inc
and
cmp
out
clc
out
xor
pop
jmp
add
popf
pop
sbb
ds
jo
call
xchg
push
sti
xchg
or
mov
insl
mov
outsb
cld
ss
clc
jae
mov
mov
mov
mov
cltd
pop
scas
jae
cmp
add
stos
sub
mov
popa
rorb
adcl
mov
lcall
sbb
loope
nop
adc
int3
lahf
jo
daa
push
add
mov
xchg
pop
add
sub
dec
inc
mov
jle
dec
out
lahf
push
jne
add
stc
rol
pop
aad
mov
cli
out
sub
xchg
sbb
jbe
adc
cmp
push
ljmp
fwait
je
cmpsb
test
and
jne
shrl
enter
xchg
dec
jae
xor
dec
inc
arpl
dec
and
jg
jg
xchg
fists
xor
xor
adc
mov
pop
push
push
sub
mov
pop
aad
mov
and
cmp
xchg
shrb
mov
jl
adc
xchg
inc
inc
dec
movsb
das
jg
and
stos
lcall
out
xlat
push
mov
popa
jne
sub
mov
dec
xchg
scas
jge
add
xor
push
xor
and
mov
loope
sub
mov
seta
fcmovnb
ljmp
jecxz
push
sub
lods
dec
push
jo
shl
sti
mov
int3
jp
sbb
adc
ret
or
jae
bound
fs
or
stos
stc
in
xor
xor
bound
jmp
adc
test
mov
lods
dec
ds
mov
and
cmp
mov
out
sbb
testb
and
sub
in
addr16
insb
ret
dec
andb
lock
sbb
loopne
mov
jl
add
shrl
xchg
jno
mov
and
bound
lock
fidivs
push
push
js
add
daa
jo
xchg
int
mov
mov
adc
xchg
scas
shlb
in
dec
shl
sbbl
or
arpl
add
or
sbb
and
jmp
push
pop
testl
fs
mov
arpl
fisubl
cmp
pop
fcmovu
pop
in
int
shlb
ficoml
cmp
cwtl
pusha
mov
push
mov
jb
loope
loop
dec
stc
nop
pop
push
jmp
cmp
adc
add
adc
aaa
fwait
aam
xorl
mov
rclb
xor
test
mov
inc
std
xchg
jns
lods
cltd
sbb
push
inc
lods
mov
mov
mov
dec
fxch
popa
addps
dec
and
aam
neg
push
sbb
sbb
xchg
pop
adc
fwait
add
inc
cmc
add
in
mov
pop
call
stc
je
inc
in
sbb
jg
push
add
stos
rorl
fdivrl
sbb
mov
inc
mov
xchg
push
mov
rcll
lcall
pop
mov
icebp
leave
not
in
sbb
test
cmovbe
dec
adc
iret
fnsave
push
outsl
sbb
shlb
push
in
mov
stos
pop
cmc
leave
jg
cs
gs
popa
pop
shrl
ret
sahf
inc
mov
cmp
sbb
mov
dec
add
inc
adc
sbb
lcall
mov
dec
out
jl
push
lods
cmpsl
insl
add
lret
cld
jno
fidivl
mov
adcb
hlt
push
stc
mov
sahf
int
xlat
loop
es
and
mov
push
push
lods
js
mov
adc
jp
cwtl
jae
scas
mov
rcl
loop
mov
in
icebp
inc
xor
shll
js
enter
cmpsb
or
pop
movsb
rolb
sub
shrl
mov
repz
dec
jecxz
lcall
add
hlt
inc
pop
sbb
pop
subl
ficoms
movl
orb
test
out
mov
stos
in
jae
add
rorb
adc
loopne
jmp
pop
mov
push
jle
push
decb
rdpmc
cmp
test
xchg
adc
jns
fildll
xchg
scas
mov
push
adc
pop
repz
call
mov
leave
adc
testb
ss
js
movsl
xchg
movsl
adc
xchg
inc
ret
push
into
inc
shlb
fbld
xchg
dec
mov
mov
pusha
fbstp
sub
shl
stos
repnz
hlt
shlb
xchg
add
mov
test
cmp
notb
icebp
xchg
inc
inc
mov
adc
jecxz
mov
xchg
mov
jbe
out
movsb
ss
push
ja
lret
jbe
test
or
push
les
into
xlat
enter
fmul
inc
fwait
out
push
ss
add
ret
jnp
mov
add
pop
jl
pop
scas
sahf
inc
shlb
popa
mov
scas
jno
sbb
ficoml
lcall
jo
adc
cmp
or
por
iret
adc
sbb
cmp
and
wrmsr
or
jecxz
loope
inc
shlb
jecxz
push
lcall
add
jne
sbb
and
xor
mov
sbb
pop
or
mov
cmp
insl
fsubl
ret
add
push
aaa
mov
or
dec
mov
je
sub
sbb
inc
sub
hlt
mov
les
in
adc
and
fs
ljmp
mov
lds
push
fwait
icebp
int
pusha
js
cmp
mov
cmp
pop
jno
jl
dec
cmp
sbb
rcrl
andb
fwait
mov
or
adc
out
loope
push
dec
jle
insb
das
movsl
sbb
lcall
inc
loop
and
jno
cmpl
lret
jge
dec
fsts
out
and
shl
out
mov
sbbb
stos
ret
ss
pop
ja
mov
jns
pop
iret
shrl
fwait
insb
scas
xchg
insl
add
test
jmp
or
jb
xor
or
nop
inc
dec
dec
mov
mov
daa
mov
shlb
mov
fisubl
stos
shll
and
mov
cwtl
push
outsl
pop
fistpll
push
pop
into
xor
xor
cmp
imul
mov
hlt
lret
jge
xor
pop
and
inc
in
pop
adc
jge
sub
mov
out
jno
inc
jns
inc
and
adc
jl
in
xchg
adc
int3
prefetchw
or
insb
jb
test
inc
mov
iret
test
xor
sbb
adc
loope
push
xor
and
loop
xor
mov
js
ret
loopne
adc
cs
ss
negb
fstpt
jge
cli
mov
sub
inc
fs
test
aaa
push
lret
out
loope
inc
shlb
orps
pushf
adc
iret
das
mov
rclb
add
cmpsl
and
and
in
out
xchg
loope
xchg
leave
pop
in
out
ss
jge
sub
pop
outsb
push
mov
mov
pop
mov
xor
push
incl
scas
dec
cmp
and
xchg
test
sub
xor
push
pop
mov
sub
es
xlat
jg
pop
jae
cmpsb
cmp
adc
jmp
dec
cmp
insb
imul
add
mov
adc
and
pop
adc
roll
mov
jle
adc
in
std
pop
inc
xchg
xor
clc
data16
or
jge
xor
insb
popf
test
pop
mov
lret
mov
dec
loop
mov
lds
lea
pop
sbb
xor
mov
adc
jecxz
mov
stc
sub
cmpsl
or
cs
cwtl
pop
mov
stos
mov
mov
sahf
shrl
mov
outsb
sub
xchg
pop
dec
push
mov
mov
ss
mov
in
sub
rorb
data16
mov
repnz
cmc
ljmp
xor
or
mov
mov
push
push
inc
rol
sbb
dec
inc
pop
dec
ljmp
xor
test
and
mov
push
loope
mov
dec
in
imul
pop
into
lock
adc
cmp
pop
aas
lret
push
sahf
pushf
fs
dec
mov
daa
pop
scas
adc
fistpll
lods
xor
jb
mov
pushf
out
mov
mov
popa
push
fmul
mov
adc
adc
cmp
adc
lea
jg
in
fidivl
add
jno
mov
push
loope
dec
xor
outsl
adc
pop
je
sub
or
cmc
sbb
pop
popf
xor
mov
insl
nop
arpl
xchg
mov
in
add
imull
push
xchg
jp
jns
mov
loope
cmp
popa
jnp
inc
cmpsb
les
iret
fidivs
in
xor
xor
mov
mov
push
shlb
aaa
dec
push
xor
pop
out
test
leave
pop
mov
inc
jb
lret
cmp
mov
mul
push
and
mov
adc
or
imul
arpl
add
lods
data16
pop
sbb
lods
mov
fdivs
je
sub
xor
pop
clc
and
mov
mov
clc
fnsave
adc
cmp
fidivs
iret
test
add
jns
pop
test
nop
inc
push
mov
test
dec
clc
lock
jae
ror
loope
out
sub
jge
jmp
stos
jle
or
loope
sarl
xchg
jg
icebp
mov
roll
jnp
or
jmp
out
push
push
pop
lods
sahf
js
xchg
or
jne
mov
sti
fisttpl
sub
lret
mov
aaa
jae
pop
xor
xchg
adc
daa
inc
shll
lds
xor
arpl
popa
jg
lret
test
ja
enter
test
lea
cmp
add
mov
loop
xlat
lock
inc
xchg
mov
sahf
push
mov
stos
test
sbb
and
add
stos
loop
aas
loopne
xorl
fimull
clc
sti
fsubl
sub
out
movsb
dec
cmp
sbb
dec
pop
mov
mov
ret
aad
jns
sbbl
cmp
lahf
mov
nop
inc
push
ret
push
imul
ja
sbb
pusha
pushf
pop
cmp
dec
jb
or
adc
subb
xlat
mov
pushf
xor
stos
jne
loopne
out
ret
sbb
ret
imul
xchg
stc
inc
popa
test
mov
cmp
cmp
stos
icebp
mov
loop
in
xlat
scas
in
or
stos
cmp
mov
je
dec
shlb
sti
cmp
push
ret
ja
popf
sub
push
icebp
and
mov
jg
je
push
add
ljmp
jne
xchg
jmp
int
orb
sbb
inc
pop
push
das
icebp
fildll
dec
dec
inc
push
insb
pop
add
aaa
xchg
scas
jno
and
sahf
cmp
adc
mov
or
inc
lret
add
push
out
test
rolb
call
cli
adc
or
daa
cmpsl
or
adc
call
test
cmp
and
scas
push
push
ret
xchg
pop
jmp
inc
xchg
sub
test
mov
sarl
jb
cld
sub
sti
popf
cmp
add
pop
mov
or
cmp
mov
and
or
mov
cmp
in
pop
push
shrl
out
gs
dec
hlt
cmc
out
jp
pop
data16
push
or
flds
hlt
mov
sbb
cli
pop
xchg
imulb
cmp
sbbb
push
jnp
movsl
aad
je
les
testb
xchg
xchg
popf
or
les
insl
jmp
mov
fsubrl
pop
int
jg
or
push
stos
mov
mov
sub
xchg
fucomip
push
fiaddl
mov
sbb
popa
pushf
scas
arpl
out
push
hlt
mov
mov
mov
jge
shrb
dec
pop
adc
scas
dec
mov
pop
xor
push
ljmp
popf
stc
inc
adc
inc
adcl
xchg
mov
sbbb
push
and
sbb
jbe
fsubl
shrl
scas
add
insb
cmpsl
sti
je
cmp
cmc
or
jb
cmp
leave
mov
xor
jo
scas
mov
cmpsb
bound
sub
xchg
xchg
lods
and
in
ror
pop
push
dec
xlat
dec
cmc
pop
mov
ret
sbb
add
lods
mov
popa
ljmp
andl
cmp
dec
mov
pop
aam
pop
dec
add
rorb
call
jmp
add
sbb
mov
xchg
xchg
xorl
sub
aas
pushfw
movsl
roll
movsl
and
push
into
push
cltd
repz
adc
ficoms
imulb
hlt
xchg
xor
xchg
and
push
aam
sbb
sbb
rolb
sahf
movsb
out
sahf
aam
mov
ljmp
sbb
insb
orb
mov
adc
aas
and
sbb
push
jmp
inc
inc
sub
push
jno
lcall
cltd
push
push
inc
lods
inc
push
mov
leave
and
iret
js
adc
inc
stos
xor
dec
push
inc
cmc
xchg
lea
dec
cmc
insb
scas
sbb
cltd
cwtl
pop
mov
mov
aad
xor
jne
xlat
and
pop
pop
mov
dec
insb
cmp
arpl
lcall
mov
repnz
movsl
icebp
xchg
jb
leave
adc
sti
shll
in
pop
lahf
dec
call
int3
lret
lret
mov
hlt
movsl
adc
outsl
jge
xchg
or
mov
iret
push
pop
pop
imul
adc
lds
and
or
bts
and
sub
push
cmp
loop
cmp
and
jecxz
pop
enter
inc
dec
mov
or
subl
mov
divb
sbbl
jno
leave
xor
pop
mov
daa
jmp
mov
sbb
push
lea
sbb
jp
sub
jne
jo
imul
repz
stos
sub
mulb
cld
rcll
push
mov
lods
mov
or
loope
dec
dec
sbb
dec
lea
movsb
and
adc
arpl
push
les
je
push
mov
sub
jle
mov
loopne
sbb
add
xor
stos
cmpl
aad
lods
ljmp
shrb
bound
xchg
jbe
adc
xchg
jge
das
call
ret
push
fwait
test
mov
lods
test
push
ret
addr16
in
jge
loopne
dec
push
push
repz
jne
mov
push
shlb
inc
cmpsl
les
mov
test
and
and
jge
push
cmp
int
repz
add
inc
rcrl
xchg
test
sub
cmp
dec
jns
movsl
and
adc
inc
xchg
loope
int3
pop
pop
test
or
enter
jne
lock
aam
or
dec
jecxz
jl
lods
test
inc
andb
lcall
in
inc
in
push
xchg
hlt
mov
jbe
jae
push
mov
repz
xor
adc
push
xchg
inc
icebp
andb
mov
cmp
iret
andb
iret
imul
mov
xchg
mov
xor
push
add
dec
icebp
xchg
aas
mov
sbb
sbb
idivb
jl
jno
dec
mov
jge
and
dec
xchg
sub
push
fisttps
scas
movsb
adcl
or
mov
jae
mov
out
dec
add
mov
or
push
mov
add
xor
and
inc
jns
fwait
lods
int
data16
dec
loop
cmp
sbb
mov
ds
push
jnp
sub
dec
sbb
pop
jmp
xor
jmp
fcoml
inc
fnsave
fs
cmp
and
outsl
inc
test
or
cs
stc
xorl
loop
add
mov
jg
inc
mov
mov
mov
mov
or
sahf
xor
xor
aas
loop
int3
mov
ljmp
add
cmpsb
cmpsb
clc
ror
dec
loope
cmpsl
jg
mov
scas
test
xchg
xchg
mov
mov
xor
in
daa
mov
rolb
pop
cltd
cmp
inc
std
and
cmp
in
lods
mov
cld
and
lds
sbbl
cmp
adc
daa
mov
into
insl
add
cmp
adc
mov
mov
push
les
repz
adc
xchg
inc
dec
ret
or
or
xchg
ds
or
pop
xchg
cmpsb
xchg
or
sbb
sub
cmpl
xor
inc
fldt
push
or
aad
and
dec
aam
ret
mov
stc
mov
xchg
sbb
sbb
dec
mov
pop
push
xchg
or
sbb
movsb
repnz
push
mov
inc
fldt
in
in
dec
mov
jnp
fwait
xor
dec
aad
dec
cmp
mov
mov
int
sub
gs
cmpsl
inc
cld
mov
adc
stos
sahf
sub
insb
aam
jno
insb
or
mov
fsubrs
push
and
testb
rorb
lahf
fistpl
inc
pop
fstps
pop
out
push
pop
mov
hlt
and
loope
cmp
mov
pop
push
daa
outsl
xchg
rorb
hlt
pop
xlat
mov
jno
or
dec
mov
fcmovnb
add
out
xchg
push
sub
into
pushf
sbb
xor
or
sti
aad
fiadds
pop
nop
stos
daa
gs
xchg
jmp
adc
ds
push
movsb
and
jnp
push
or
xchg
addr16
hlt
ds
and
rolb
cmp
push
jecxz
inc
lods
scas
shrl
pop
rcr
mov
into
pop
ss
jl
mov
dec
sub
ds
pushf
xor
adc
lods
or
pop
out
in
xor
mov
or
push
fcoms
test
xchg
xchg
pushf
mov
or
aas
xchg
inc
jecxz
pop
fnstsw
aas
mov
in
jmp
cld
shl
shrb
mov
push
dec
pop
jns
fldcw
dec
es
loope
adc
out
hlt
sbb
stos
add
ficompl
sbb
cmpsl
dec
cmp
data16
mov
mov
and
mov
mov
repz
jo
push
pusha
mov
mov
sbb
pop
fnstsw
fldt
jge
inc
add
aas
pop
divl
movsb
scas
cmp
jge
xchg
adc
pop
push
out
inc
lods
mov
cmpsl
stos
adc
sbb
lea
or
pop
or
outsb
inc
jae
mov
push
adc
loopne
std
lods
cmp
pusha
or
push
shl
xor
lcall
in
add
pop
adc
fisubrs
dec
gs
ret
jnp
adc
sbb
movsb
jg
sub
loop
sub
ds
pop
and
mov
jnp
fsubs
rcr
popa
test
mov
mov
es
xor
inc
push
repz
lods
cld
repnz
jmp
pop
aaa
inc
and
dec
push
sub
cmp
jne
popf
and
pop
fldcw
dec
arpl
iret
loop
test
rcll
nop
sub
mov
and
out
mov
mov
sti
xchg
push
popa
and
fsubr
icebp
xchg
inc
int3
or
cmpsl
dec
stos
arpl
pusha
jns
dec
pusha
sbbl
mov
jmp
jmp
inc
lretw
sbb
inc
xor
aam
inc
mov
int3
and
arpl
cmp
imul
pop
mov
jae
jp,pt
outsl
pop
xor
push
fcompl
pop
imul
sbb
pop
je
in
cmp
pushf
divl
shl
xlat
mov
loope
xor
js
push
rorl
push
hlt
jne
lahf
sbb
xlat
push
in
add
stc
jp
push
repnz
pop
push
lcall
popa
mov
mov
and
jl
inc
or
rsqrtps
out
mov
add
or
dec
popl
cmp
push
mov
outsb
test
in
fcmovnb
and
jmp
lock
jge
mov
bnd
pusha
and
ljmp
jns
mov
dec
rcrl
outsl
pop
mov
jae
or
mov
mov
push
push
or
ss
pop
push
icebp
push
jnp
clc
mov
leave
adc
sti
xchg
xchg
out
sbb
pop
jb
aas
push
dec
and
movsb
xchg
ds
adc
popf
xor
add
mov
xchg
mov
push
dec
jb
iret
mov
jge
lret
ljmp
stos
cmp
jbe
gs
stc
fwait
test
cmp
xchg
dec
push
push
test
ss
lods
xor
rcr
xchg
inc
pop
sub
and
jmp
jae
lea
pop
cmp
int3
xchg
mov
loop
adc
xlat
scas
add
push
incl
in
jae
inc
inc
push
outsb
and
fnstsw
mov
es
shrb
xchg
push
cmp
cmp
rclb
lds
test
dec
sbb
mov
jge
add
sub
mov
add
mov
pop
repnz
fdivrs
clc
out
xor
xchg
adc
dec
xor
mov
pushf
sahf
ss
mov
mov
shlb
sahf
cmp
cmove
shr
pop
mov
add
ja
push
lret
sbb
push
out
jae
dec
enter
arpl
sbb
push
mov
dec
incl
xor
xchg
dec
lock
cmc
arpl
mov
sbb
push
imull
pop
xlat
clc
add
inc
mov
pop
shlb
jmp
cmp
jno
adc
dec
lret
pop
inc
shll
jns
js
sbb
loopne
inc
xchg
mov
and
insl
push
icebp
push
mov
filds
cs
aas
insl
push
out
mov
push
cmp
shlb
mov
push
dec
push
jecxz
and
test
pop
mov
mov
cmpsl
inc
int
test
fnstenv
cld
xchg
imul
lahf
cmp
aam
sbb
sbb
pop
cmpsb
das
out
popa
pop
mov
xor
les
mov
or
icebp
dec
lods
sub
fnsave
stc
pop
xchg
mov
push
mov
jge
frstor
les
adc
cwtl
cltd
and
adc
loopne
xchg
mov
sahf
mov
fsts
stc
add
sub
loope
inc
cmc
mov
retw
adc
push
out
adc
push
xor
dec
jo
dec
mov
test
call
mov
fisubs
addl
dec
mov
inc
mov
lods
popf
mov
pop
jbe
cld
xlat
outsl
flds
pop
dec
cmp
mov
std
jge
data16
test
cmpsl
out
jmp
aaa
data16
jo
shlb
std
jge
fdivrl
lds
pop
inc
fisttpl
inc
xor
rcl
repz
mov
sti
repz
xchg
fistpl
test
inc
out
inc
loopne
enter
cmpsb
mov
cmp
jne
jns
pop
adc
pop
xor
out
pop
insb
fucom
pop
adc
dec
add
cmp
and
sbb
and
push
xchg
mov
jecxz
ret
into
push
mov
or
add
cmp
decl
jns
rcrb
loopne
lahf
push
clc
loope
out
cld
ds
cmpsb
testl
dec
lods
and
rorb
xchg
sahf
mov
stos
cmp
mov
cwtl
ret
ret
ret
les
xchg
aas
sbb
add
scas
stos
aas
cld
std
cli
into
mov
push
and
loop
enter
fs
jo
test
pusha
sbbb
push
inc
negb
mov
xchg
add
movsb
cli
lock
xor
sbb
dec
pop
stc
adc
in
or
testl
mov
and
insl
xor
push
fdivl
jns
out
mov
adc
sti
cmc
rcrb
mov
push
aam
fcompl
les
and
and
popa
mov
mov
pop
lcall
cmc
adc
sbb
insb
pop
jl
xor
cmp
mov
cld
cmpsl
and
decl
lfs
dec
sahf
add
aam
xor
loopne
jge
pop
inc
frstor
or
sub
incb
popa
jnp
xlat
movsl
jns
add
push
loop
and
incl
xor
push
popf
lods
jbe
loopne
xor
jl
mov
aas
push
cli
pushf
mov
xlat
cs
ja
xor
mov
push
and
cmpsb
das
xchg
sbb
push
mov
add
je
cmpsl
mov
fiadds
fmull
jns
es
pop
rorb
rol
jbe
jne
out
fadds
ss
push
je
aas
fnstcw
push
fs
loop
jmp
or
cmp
sti
jp
cwtl
out
test
and
aam
push
data16
and
not
int3
fsubs
cmc
or
and
mov
loope
test
mov
jmp
cs
pop
jo
fwait
scas
push
jbe
xchg
je
insb
and
aaa
fsubrs
lahf
push
add
push
repz
outsb
and
mov
push
fidivrs
into
sub
push
mov
in
cmp
mov
inc
repz
daa
mov
fsubrl
add
mov
mov
pop
test
lret
daa
test
cmp
jle
bound
in
push
or
add
mov
push
lods
push
adc
in
jns
mov
clc
mov
jmp
adc
insb
mov
pop
inc
cmp
outsb
fs
test
cmp
frstor
arpl
in
scas
adc
loope
fiaddl
cmp
jb
in
xchg
and
lods
jmp
fisubrl
or
push
out
dec
stc
or
movsb
rorb
jle
inc
pop
outsb
mov
and
call
push
aas
sbb
xchg
outsl
mov
xlat
flds
rclb
es
fsts
fdiv
add
inc
sub
pop
and
push
jmp
and
add
xchg
xor
ret
mov
cmp
int
rcrb
stos
lods
jbe
mov
repnz
add
jmp
sti
jbe
subl
in
and
aaa
mov
push
enter
inc
out
xchg
lcall
mov
into
add
sbb
insl
add
ds
bsr
dec
jns
sahf
xor
stc
mov
testb
loop
push
adc
push
call
ds
sahf
pop
pushf
cmp
mov
adc
fdivrs
mov
push
xchg
dec
and
mov
dec
add
sahf
jmp
shr
adcb
lret
out
jbe
icebp
insb
push
xchg
adc
cmp
jmp
scas
rcrb
add
cmp
movsl
push
imul
dec
or
aas
stos
and
out
mov
mov
fcomp
rcrl
popl
mov
ds
dec
cmp
jbe
mov
jns
or
dec
pop
dec
mov
cltd
andl
adc
add
jae
ret
in
mov
adc
jae
sub
inc
scas
inc
js
imull
adc
gs
fnsave
mov
cwtl
mov
push
scas
fdivl
iret
and
xor
add
iret
data16
outsl
call
into
mov
push
jne
add
dec
pop
pusha
aad
out
xchg
jg
and
dec
adc
sti
lcall
pusha
xchg
insl
mov
cmpsl
and
cli
aas
test
loop
push
sbb
jns
fcoml
nop
ljmp
loop
mov
aad
data16
lret
insb
jge
jns
mull
mov
xor
decb
inc
jae
add
sub
stos
inc
ret
mov
fistl
rolb
test
dec
and
movsl
mov
push
das
icebp
and
outsl
or
sarl
pusha
mov
sbb
in
mov
cli
jb
pop
dec
sub
pushf
out
test
loop
insw
mov
push
fs
repnz
xchg
dec
out
repnz
js
pop
dec
loop
in
adc
clc
imul
jg
or
popa
push
inc
bound
fisubl
sbb
or
call
test
outsl
negl
mov
xchg
sbb
ds
nop
adc
mov
fdivr
pushf
mov
xchg
adc
mov
data16
cwtl
sti
xchg
cli
out
mulb
mov
jbe,pn
imul
bound
dec
subl
scas
icebp
aas
loopne
xchg
push
and
adc
sbb
bound
addr16
cld
jb
add
popl
mov
fisubs
push
lods
lret
jno
dec
dec
mov
xorb
jecxz
dec
jo
jmp
icebp
stos
addr16
adc
enter
mov
or
cld
jg
pusha
mov
xchg
pop
repz
test
mov
push
scas
jbe
mov
jle
in
lret
das
mov
add
mov
nop
ljmp
sti
out
and
add
iret
sbb
shlb
push
loop
mov
xchg
leave
jb
outsl
ljmp
push
or
cmp
aas
ret
dec
cld
outsl
cmp
add
push
inc
and
je
jp
jecxz
andb
or
mov
jg
loope
jae
xchg
xor
cli
pusha
xchg
push
adc
cmp
jge
xchg
mov
popa
mov
pusha
stc
xchg
jmp
andb
jge
stc
scas
or
movsl
test
in
mov
ret
cmpsl
and
ret
jb
stc
inc
into
gs
sarb
outsl
ds
ja
adc
shrb
imul
jae
aad
cmpb
add
clc
mov
stc
nop
sub
dec
xor
insl
mov
sub
mov
into
sbb
hlt
call
ja
call
out
fs
sbb
push
pop
cmp
mov
lods
push
addr16
cli
xor
stos
in
ret
in
lods
pop
xor
test
mov
fadd
fnstsw
xor
sub
rorb
or
and
inc
push
enter
std
mov
dec
nop
enter
xor
dec
imul
or
lds
mov
sarb
adc
mov
pop
cmpsl
enter
jp
or
insb
or
and
rcr
xor
mov
cmp
lods
mov
les
int
xchg
pop
mov
cmpsb
gs
inc
popa
mov
repz
add
xor
fstpl
fisttpl
dec
xlat
mov
push
arpl
mov
lods
cmovbe
mov
sbbb
and
mov
loop
push
cmpsl
fs
xchg
mov
jne
jbe
inc
pop
fsts
push
sub
out
sub
dec
cmpsl
push
sbb
jle
mov
jl
and
lods
add
lahf
fldt
test
xlat
cmpsl
data16
mov
push
sub
push
xchg
ret
sub
jge
je
jl
sub
mov
faddl
addr16
cmp
in
xor
dec
inc
jl
mov
push
or
push
push
jne
jne
mov
and
jl
sub
and
shlb
mov
mov
mov
mov
add
xor
mov
jo
push
scas
fst
mov
in
mov
repnz
push
popf
int3
adc
cwtl
sub
mov
sub
lea
imul
mov
popa
and
push
mov
je
and
adc
int
mov
negl
iret
leave
gs
push
push
pop
movsb
dec
out
icebp
jecxz
scas
ret
or
cwtl
mov
and
cmovg
fnsave
js
nop
mov
xchg
inc
xchg
cmp
and
sti
inc
cmp
and
sbb
test
push
push
popa
fwait
pop
sahf
mov
cmp
cli
testb
aaa
jp
dec
adc
xor
fcomip
mov
mov
insl
sub
ret
hlt
lret
cli
mov
mov
jge
push
add
and
xor
out
divl
dec
sub
ret
jle
insb
jg
sub
jle
call
frstor
test
int
jp
cmc
clc
iret
mov
mov
add
test
icebp
movsl
jb
call
cs
adc
cmc
pushf
loope
mov
mov
and
adc
popf
inc
pop
incb
lcall
mov
jg
imul
or
mov
lock
shll
mov
lock
mov
mov
fsubs
int
push
pop
push
daa
int
decb
out
orl
xor
push
sub
and
add
int3
out
sti
out
and
xchg
popf
sbb
test
daa
add
pop
es
inc
loope
pop
and
subb
push
sub
xchg
sbb
stos
jae
imul
or
fdivl
cmp
sahf
pop
je
out
jmp
dec
dec
lcall
dec
out
push
ja
xor
or
std
inc
icebp
jle
mov
sub
xchg
sti
loop
rclb
push
insb
mov
pushf
xor
xor
or
xor
aad
cwtl
xchg
dec
ss
pop
pop
mov
sub
add
mov
adc
inc
cltd
stos
repz
and
adc
mov
inc
outsl
std
cltd
xor
xor
je
mov
cmc
add
xor
xor
dec
cltd
mov
js
or
inc
xlat
aad
sbb
aaa
cmc
out
mov
dec
jo
aas
pusha
xor
and
xchg
dec
int
mov
pop
mov
js
icebp
cmp
xchg
xlat
add
lods
xor
xor
sbb
lea
adc
mov
ljmp
loop
dec
add
cli
mov
stos
es
aaa
lea
cmpsl
lahf
fidivl
aam
dec
out
fwait
mov
inc
out
inc
scas
arpl
xchg
dec
jbe
outsl
push
lret
pop
jl
imul
lods
jg
decl
pop
movsl
xchg
add
mov
mov
mov
ds
inc
es
mov
inc
callw
int3
sahf
hlt
push
les
or
dec
test
mov
stos
or
addr16
jle
fisubrl
aad
or
sub
sub
pop
lret
mov
das
inc
lods
jo
leave
flds
test
fsubrs
sub
je
out
notb
or
cmc
mov
idivl
or
pop
mov
mov
fwait
adc
mov
and
mov
insl
scas
movsl
insl
je
push
push
jge
fidivrl
mov
cmc
mov
and
negb
dec
inc
jnp
andb
inc
and
or
jecxz
sbb
mov
xor
xchg
ja
dec
push
fbstp
inc
cmp
fmul
leave
lock
neg
fs
sub
popf
jp
mov
cmp
xchg
pop
xor
daa
out
dec
mov
push
lods
push
cmc
add
leave
pop
or
sbb
sbb
sarb
mov
jmp
and
repz
lret
dec
lods
in
rorl
mov
sub
ficompl
loopne
sti
sbb
fs
fadds
mov
mov
xor
jmp
cltd
jo
hlt
xchg
das
bound
xor
ficomps
mov
cmc
lret
mov
xor
sbb
outsl
mov
jge
outsl
out
outsl
icebp
xchg
fimull
fldt
stos
test
fs
xchg
lret
xlat
jecxz
mov
movsb
jnp
push
int3
adc
add
in
and
sbb
push
dec
cmp
rcrb
mov
push
repnz
cwtl
adc
push
lret
adc
push
insl
dec
jb
inc
jp
xor
jecxz
fadds
pop
and
repnz
mov
repz
mov
mov
shr
adc
xor
cli
xorb
xor
xchg
incl
push
adc
pushf
pop
dec
or
sbb
mov
jae
loop
pop
clc
jp
xor
ror
out
fbstp
xchg
in
inc
sbb
out
repz
loopne
push
dec
jp
aas
xor
sbbl
out
insl
and
xchg
call
loopne
sahf
out
pop
add
mov
aaa
jb
cli
je
and
cmp
pop
push
add
aam
iret
inc
pop
cmpsb
jne
dec
repz
dec
add
jno
cmpsb
shl
mov
repnz
aam
xchg
jbe
xor
sbbl
and
sub
cs
pusha
jns
pop
jmp
psllq
in
nop
ret
mov
test
pop
aaa
mov
shlb
pop
sub
and
pushf
outsl
mov
push
dec
and
jnp
testl
cltd
cmp
into
scas
push
nop
ljmp
push
inc
repz
std
ja
adcb
in
jo
mov
clc
pop
ja
mov
jmp
and
sub
or
idivb
pop
pop
push
fbstp
and
lret
nop
cmp
fwait
dec
jno
jae
es
dec
xchg
into
das
cmpsl
fldlg2
jecxz
outsb
andb
leave
pusha
or
sub
push
lcall
add
dec
pop
push
cmp
lods
jecxz
xchg
lods
aam
fwait
bnd
cmp
rcll
push
pop
xchg
jmp
jne
dec
adc
dec
xor
push
insl
or
xor
adc
and
ficoml
test
inc
sub
add
sbb
cmc
xchg
xor
dec
or
adc
ret
call
std
jae
test
add
out
cmp
lods
fstpl
mov
data16
in
xchg
js
xor
scas
inc
sub
sub
fisttps
es
mov
mov
in
xor
adc
mov
cmc
jp
cmp
add
pop
imul
scas
and
sbb
stos
xor
sarb
clc
cmpsb
insb
fnstsw
lods
lods
push
stos
out
sub
xor
mov
mov
insb
mov
mov
enter
mov
push
hlt
jl
add
push
adc
ss
xor
inc
xchg
adc
into
ds
rorb
and
mov
lret
jp
jmp
xrelease
jmp
cmp
divb
gs
out
xchg
stos
stc
inc
rcll
jno
leave
and
scas
lret
xchg
cmpsl
out
pop
dec
adc
mov
sbbl
movsb
clc
rclb
sbb
mov
icebp
push
ja
jne
jle
call
cmp
subb
sbb
mov
cmp
dec
dec
mov
outsl
loope
insb
jmp
out
cmpsl
push
cld
sub
cmp
mov
outsb
jle
insb
cmc
rsm
out
sub
in
and
push
int
dec
jb
popa
sbbl
fstps
cmp
filds
sub
jmp
bnd
add
adc
movsb
shlb
icebp
test
andl
add
nop
xchg
and
jae
loop
ficomps
sbbl
cs
pop
loope
cltd
lret
mov
sub
roll
or
ljmp
in
mov
xchg
mov
fcompl
push
add
xchg
movsb
cmc
pop
aam
add
mov
fidivs
mov
out
iret
and
ret
outsb
jae
push
gs
add
mov
or
repnz
jl
aas
add
jo
xchg
add
push
sahf
data16
subb
fdiv
mov
mov
jns
push
push
popa
xor
mov
push
push
neg
mov
or
loope
repz
jb
scas
ret
cmpsb
xchg
cmp
movsb
cmp
pusha
add
test
jl
mov
pop
jmp
or
and
loope
pop
xor
or
sarl
jo
pop
add
popf
cmpsl
mov
clc
adc
push
xchg
fdivrl
movl
sub
jecxz
mov
mov
mov
adc
outsl
push
fs
gs
inc
adc
push
pop
das
dec
popf
sbb
into
mov
shl
mov
mov
ficoms
add
sub
mov
dec
push
mov
and
out
gs
jbe
mov
movsl
lods
mov
jg
das
cmp
test
mov
sbb
mov
cmp
fsubrl
sbb
mov
inc
push
xchg
test
jle
js
add
mov
mov
dec
jle
loop
fdivs
jnp
sbb
data16
sub
fwait
lods
fiaddl
cmp
push
or
push
ret
fistpll
inc
test
jnp
hlt
test
stos
mov
out
andb
lods
jnp
scas
push
add
sub
inc
add
jne
mov
sbb
int3
cmp
push
out
cmpsb
push
sbb
call
insb
cli
lds
inc
movsb
aaa
dec
mov
add
adc
mov
arpl
je
outsb
mov
imul
push
adc
dec
push
push
lock
fwait
addr16
pop
lcall
adc
gs
mov
dec
jbe
ds
mov
cmp
pop
clc
cld
pop
xor
pop
jno
pop
mov
jle
sub
pop
sbb
icebp
rdtsc
mov
in
rorb
rorb
rcrb
mov
mov
loopne
and
pop
or
dec
pop
mov
imul
mov
stos
xor
bound
jge
dec
aas
imul
faddl
cmp
arpl
decb
das
ja
jno
xor
mov
dec
push
aaa
jns
jle
push
push
aaa
lcall
pop
sbb
outsl
arpl
sbb
dec
xor
sarl
push
or
rorb
in
pop
out
bound
add
jl
or
iret
xchg
sarl
movb
imulb
lahf
lahf
sbb
push
sub
lods
andl
fwait
arpl
loope
rcrb
test
sub
adc
testb
push
adc
ret
push
mov
or
cmp
cmp
lcall
and
cltd
aam
int3
mov
outsl
loop
xchg
mov
mov
test
xorb
push
push
xchg
test
sub
ret
stc
mov
mov
and
push
ffreep
jno
scas
fdivs
dec
call
mov
sub
negb
push
jmp
lret
das
or
in
ds
inc
xchg
imul
fadds
sbb
adc
inc
dec
mov
js
arpl
pop
xchg
adc
mov
popf
fildll
pop
add
jl
leave
repz
add
dec
add
test
andb
adc
mov
pop
adc
pusha
scas
loop
sub
pop
loop
mov
mov
nop
shll
testb
xchg
adc
popf
mov
adc
cmp
mov
push
iret
fisttpl
and
repz
sbb
lods
in
std
aas
fwait
inc
jae
jg
fdivrs
jl
cmpsl
xor
mov
mov
dec
push
add
push
adc
xchg
push
aad
frstor
add
ljmp
fistpll
cmc
push
xor
stos
aas
fcmovu
nop
mov
or
mov
cmpsl
xor
pusha
rclb
dec
scas
jb
mov
lret
adc
pop
pop
aas
outsb
push
scas
ret
cld
outsl
dec
or
and
cltd
sbb
dec
or
notl
pop
mov
enter
pop
cli
jmp
inc
arpl
adc
mov
mov
jae
fimuls
data16
in
pop
mov
loope
out
loop
clc
aad
adc
sbb
insb
pop
ret
jb
lret
jp
int
sub
gs
enter
cmp
adc
or
cli
inc
jge,pn
adc
pushf
or
fildll
and
cmp
pop
mov
daa
cmp
mov
shll
push
in
jl
lret
xchg
sbb
and
inc
sub
insb
mov
aas
adc
push
out
fwait
adcw
iret
leave
pusha
add
aam
pop
cmpsb
testb
jg
mov
add
shlb
into
cmp
fwait
sbb
scas
loop
negl
xor
dec
inc
mov
xchg
mov
das
aas
fisubrs
scas
mov
and
sbb
sbb
lcall
outsl
out
mov
lahf
dec
mov
lahf
adc
sbb
dec
decb
pop
sbb
xchg
and
fistpll
mov
cmpsl
icebp
push
or
dec
push
leave
xor
cs
dec
dec
or
icebp
movsl
arpl
das
mov
icebp
mov
stos
push
imul
std
sarl
imul
loopne
mov
adc
stc
cmp
sub
pop
ret
mov
sub
jmp
negl
inc
mov
adc
outsl
fbld
or
adc
mov
les
mulb
pop
jle
pop
sub
push
mov
arpl
ret
jo
ljmp
or
adc
lock
fsubr
cmpsb
ja
mov
xor
jp
data16
pop
or
mov
imul
mov
xchg
jb
push
sub
inc
pop
dec
jb
xor
test
enter
std
pop
cmpsl
ficompl
scas
inc
cmp
aas
repnz
das
mov
pop
lock
into
ret
mov
aad
jmp
enter
mov
pop
dec
lahf
adc
cmp
cmc
js
xor
sbb
std
cmp
inc
sbb
push
cmp
mov
enter
addr16
ficomps
lods
ja
xlat
add
add
ss
mov
lock
mov
shl
inc
sub
pop
xor
imul
push
inc
push
dec
push
mov
test
push
mov
test
subl
mov
roll
stc
push
data16
cwtl
jne
xchg
arpl
std
adc
idivl
loope
fdiv
jle
sub
lds
popf
jle
dec
mov
nop
mov
sub
push
ljmp
jb
cmp
les
pop
push
inc
or
mov
fxch
bound
mov
or
mov
adc
mov
std
adc
or
add
cmp
lods
sbb
fs
adc
mov
mull
xlat
pop
scas
push
gs
gs
inc
cld
into
sbb
and
imul
inc
imul
popf
or
pop
vprotb
rcll
aaa
int3
add
imul
lods
sbb
pop
outsl
in
xchg
movsl
ret
push
testl
int3
cmp
adc
jnp
pushf
arpl
adcb
jecxz
and
mov
jo
leave
lea
ficompl
sub
inc
and
jno
sbb
stos
aas
mov
xor
shrb
scas
jg
fdivrs
inc
pop
int3
lret
and
cmpsl
stos
lea
xor
cmpsb
lds
sub
push
jecxz
mov
test
mov
out
fcomps
incl
push
sub
mov
pop
xchg
mov
push
data16
nop
mov
shl
ss
mov
mov
bound
stos
dec
pop
xor
cs
mov
rolb
mov
into
mov
fdivs
push
lods
dec
pusha
pop
mov
dec
enter
lds
cwtl
mov
inc
in
test
cltd
mov
gs
xchg
stc
xchg
cmpsl
mov
push
or
adc
mov
dec
pop
dec
adc
scas
test
xor
movsb
dec
loope
rcrl
push
push
repnz
les
or
movsb
cmp
cli
mov
imul
call
xor
movsb
shrl
lret
lods
repnz
ja
mov
sub
cmpl
sub
rcrl
out
popa
cltd
mov
push
in
push
jmp
andl
nop
jb
ret
adc
mov
jge
repz
out
adc
dec
inc
das
dec
add
lock
and
aaa
mov
leave
in
ret
adc
jo
mov
mull
pop
inc
out
jb
divb
loopne
add
or
popf
jo
cmp
fwait
popf
push
fcoml
insb
dec
jmp
jnp
popf
shlb
insb
outsl
adc
dec
in
outsb
rorb
popa
cs
inc
pop
or
mov
je
adc
and
and
ret
test
test
push
stc
jp
arpl
andl
xor
sub
bound
test
scas
or
mov
adc
inc
stc
jno
shrb
leave
es
cmp
bt
fnsave
shr
dec
cmpsl
ret
xchg
outsb
sbb
lahf
xor
cmp
inc
cmp
imul
orb
or
and
push
push
inc
mov
loope
or
xorl
dec
jmp
or
mov
dec
lods
out
test
xor
jae
mov
cli
xchg
cld
jbe
test
sti
pop
adc
int
push
sbb
jecxz
and
pop
jo
xor
xchg
aas
push
xchg
movsb
xor
xchg
xor
pop
dec
fstl
jle
or
xor
shll
mov
push
in
mov
aad
aam
xor
testb
fldenv
sub
test
lret
data16
mov
jge
mov
shlb
out
das
pop
andl
mov
imul
aas
sbb
repnz
jns
inc
jne
stos
lds
adc
dec
pushf
pop
lods
out
inc
test
call
jl
in
xchg
adc
repz
xor
test
adc
call
js
mov
addb
jp
adc
sbb
shll
std
cwtl
mov
lods
xor
outsl
inc
cmp
insb
arpl
mov
or
les
xchg
jl
jecxz
mov
push
cmp
push
jmp
mul
scas
cmp
pop
inc
push
ret
mov
xor
test
mov
add
stos
pop
insl
in
icebp
jge
shl
imul
divl
lds
fildll
arpl
xchg
imul
cltd
xor
sub
inc
adc
pop
xlat
xor
xchg
mov
out
inc
dec
xlat
dec
xor
add
jno
insb
pop
jge
and
test
fsubrs
pop
adc
mov
lret
je
mov
sub
test
out
ret
cmc
adc
scas
out
cmp
push
add
push
dec
cwtl
outsb
add
jmp
push
addr16
mov
push
mov
movsl
ret
fnstenv
outsb
push
iret
xlat
in
test
out
jne
scas
xchg
jae
pop
ja
mov
out
mov
popa
clc
push
inc
out
xchg
ss
jg
sub
fidivrs
mov
push
in
cmp
iret
xchg
jns
std
cmpsb
decb
mov
mov
out
daa
hlt
int
sbb
dec
dec
notb
mov
ret
dec
mov
cld
mov
xchg
mov
scas
loope
push
mov
xchg
mov
add
call
mov
cmpsb
add
pop
xor
movsb
add
cs
testb
daa
cld
outsl
jl,pn
dec
mov
insl
aam
stos
aam
jecxz
bound
add
jp
repz
jmp
adc
mov
leave
jg
int
ljmp
jl
stc
cmp
cltd
jl
adc
movsb
in
mov
inc
pop
cli
add
stos
ss
int
inc
aam
leave
std
or
xchg
push
fisubrs
shlb
or
jae
and
or
push
lds
pop
xchg
jb
or
fs
mov
sar
mov
pusha
jbe
cmp
jl
xchg
daa
inc
popf
fnsetpm(287
in
std
out
or
fmull
cmc
mov
mov
sub
jecxz
push
pop
sbb
decb
call
cld
mov
test
sbb
imul
loope
jl
aas
and
sub
repnz
mov
jmp
push
fdiv
mov
sub
out
sub
retw
cli
push
js
mov
in
xlat
mov
xchg
cs
popa
adcl
push
cltd
sbb
stc
and
mov
mov
cmp
add
sbb
outsb
push
dec
mov
cmpsb
imul
subb
inc
xlat
inc
dec
insb
ret
rclb
pop
sbb
mov
aam
data16
inc
xor
mov
xlat
inc
xchg
mov
dec
pop
jg
mov
xor
pop
or
cmp
ds
xchg
add
faddl
mov
dec
push
faddl
mov
sub
pop
sbb
stos
sub
scas
dec
cmp
cmpsb
adc
add
lret
sub
mov
pop
push
lock
and
jg
hlt
cmp
and
sbb
and
shlb
shrl
mov
adc
in
pushf
sub
inc
filds
loop
out
jle
fcompl
shll
cmp
out
inc
fsts
xchg
addr16
jl
add
jbe
lods
sbb
mov
dec
xchg
test
xchg
mov
cltd
in
inc
insb
ret
sub
xchg
idivl
pop
jbe
ds
outsl
in
mov
test
ror
adc
dec
pop
mov
les
ret
stc
lea
sarb
js
pop
les
adc
or
insb
fcomip
pop
pop
add
lahf
ss
arpl
or
in
rcr
ret
xchg
cmp
clc
loop
movsl
dec
cmp
xor
in
and
add
push
cmp
negb
loope,pn
xor
lcall
std
mov
cld
dec
xchg
sub
testb
pop
adc
and
in
pop
addr16
decb
add
aam
out
arpl
pop
jmp
adcb
push
mov
pop
lahf
cmp
or
es
leave
pusha
in
jp
dec
push
mov
add
je
insl
cmpsl
les
sti
xchg
loopne
dec
test
xchg
mov
stos
shr
sub
stc
xchg
icebp
sbb
adc
sub
testb
jle
add
scas
mov
inc
xlat
aam
sub
inc
pop
enter
std
rolb
xor
push
jo
rcrl
xor
sti
ljmp
push
cmp
ror
nop
jae
test
sbb
outsl
sbb
cmp
fldl
int
les
xlat
push
push
cltd
sbb
adc
mov
icebp
adc
frstor
hlt
xchg
add
outsb
xchg
sub
test
test
cmp
adc
cli
mov
ret
sbb
lock
hlt
mov
jl
lcall
lea
inc
out
or
lret
mov
loop
or
in
scas
out
lea
out
pop
jnp
or
pop
push
movsl
jbe
adc
mov
adc
aam
jg
out
sbb
add
xchg
xor
and
adc
cmp
scas
xchg
aaa
into
shll
aam
sarl
add
fnstcw
push
lret
mov
dec
leave
outsl
daa
push
mov
xchg
push
loop
scas
cmp
clc
mov
adc
jmp
test
nop
ja
sub
mov
dec
push
mov
divb
lret
cld
das
repnz
adc
outsl
inc
std
test
das
jb
push
int3
fwait
push
push
adc
int3
sti
pop
fdivrs
fsubs
jle
sbb
fisttpl
mov
stc
loope
test
pusha
clc
xchg
sub
sbb
xor
sub
pop
cmp
shrl
pop
ljmp
jns
roll
daa
or
sub
sbb
iret
cmp
xchg
idivl
idivl
sarl
pop
mov
vpunpcklqdq
mov
and
inc
jae
dec
movsl
jns
call
mov
test
lret
dec
je
fwait
pop
test
xchg
nop
shlb
into
repnz
pop
lcall
leave
in
notl
mov
sbb
adcl
sbb
lea
outsb
pop
testb
xchg
adc
into
inc
and
popf
xor
out
test
stc
mov
pop
jle
dec
flds
push
loope
push
and
imul
stos
in
lods
pop
arpl
adcl
or
cltd
cmp
mov
adc
sbb
icebp
ljmp
xchg
aaa
pop
lods
mov
inc
xorl
push
and
xchg
hlt
xor
cmp
adcl
in
shrl
adc
cmpsb
inc
bound
push
fucomp
jne
jns
adc
jp
fcoml
jae
sub
fnstsw
ds
add
hlt
xor
lods
aad
mov
stc
xchg
out
or
xlat
mov
loope
mov
addr16
mov
or
pop
in
clc
sahf
sub
pushf
das
sub
fwait
dec
mov
mov
push
cmp
sub
pop
cmp
cmpsb
jp
mov
pop
push
mov
mov
je
mov
pop
jo
fcoml
int
jp
cmp
repz
sub
fsubr
fisubl
add
int
pop
add
push
and
or
sbb
mov
test
sub
pop
push
mov
dec
and
mov
or
jb
fisttpl
inc
hlt
sbb
inc
push
std
out
jmp
mov
out
lret
pop
cld
xor
andl
call
push
jmp
sub
cli
cmp
out
pop
pop
sbbb
cmp
adc
fmul
mov
stos
out
js
loope
sub
fsubrs
push
mov
pop
divb
stos
mov
mov
or
in
shl
or
sbbl
push
and
jg
push
cltd
push
mov
cmpsl
or
push
xor
adc
aas
xor
clc
push
push
out
or
jp
aas
mov
aas
dec
mov
mov
or
sbb
stos
imul
jo
ret
inc
lret
stos
cmp
push
and
ljmp
jmp
cmpsb
cmp
les
push
rcr
pop
adc
jp
mov
je
adc
lret
fwait
shl
add
loope
cltd
out
push
or
nop
adc
mov
mov
jle
ret
push
add
add
sti
icebp
xchg
in
mov
xchg
rcll
fiaddl
pop
inc
stos
inc
jb
fsts
movsb
sub
test
insb
pusha
mov
mov
fldcw
das
jmp
sub
push
jae
repnz
call
loop
push
test
add
call
mov
adc
int3
inc
push
and
fstpt
outsl
pop
lcall
sub
addb
jb
mov
iret
and
mov
nop
mov
rorl
mov
lods
test
test
ds
mov
gs
data16
icebp
push
and
jp
enter
addl
inc
mov
stos
xor
mov
ja
aas
icebp
pusha
andb
movsb
sbb
mov
and
mov
jp
call
jb
pusha
ss
mov
mov
jl
aas
loopne
sbb
mov
adc
testl
inc
mov
mov
and
popl
jne
loop
mov
mov
dec
in
stc
push
mov
sarb
mov
and
cmpsl
int
xchg
hlt
fmull
or
jnp
xchg
mov
test
mov
scas
push
gs
repz
stc
push
mov
in
dec
call
loope
popa
mov
mov
mull
inc
bound
xchg
jnp
sbb
in
cmp
xor
clc
pop
scas
arpl
adcl
xchg
xlat
dec
nop
daa
and
out
mov
movsl
push
jmp
cmp
xchg
and
add
ljmp
pop
emms
out
jns
outsl
cmpsb
jl
ret
cmp
les
shlb
add
mov
mov
mov
cmpb
mov
xor
cmp
js
loop
dec
mov
out
push
test
flds
xchg
test
icebp
cmpsl
stos
aas
add
xor
in
sbbb
jnp
cmp
mov
mov
add
sub
mov
sbb
jp
add
dec
cli
adc
sbb
inc
arpl
mov
daa
stc
neg
in
call
aad
fisttpl
stos
jmp
scas
inc
fwait
mov
frstor
jne
mov
int
int3
xor
int3
out
push
add
push
push
sbb
mov
dec
arpl
sar
and
cmc
cltd
negl
adc
push
adc
js
push
movsl
aad
ja
test
mov
sti
dec
push
movsl
sbbb
mov
mov
pop
dec
lret
or
addr16
pop
cltd
or
sub
shrb
daa
cmp
inc
movsl
js
push
lret
xor
jecxz
cli
mov
fists
addb
or
mov
fstpl
push
xchg
out
jbe
in
iret
xchg
repz
popf
push
mov
scas
movsb
loope
mov
ljmp
jae
xchg
pop
push
in
sahf
add
push
jo
xchg
clc
push
aam
mov
pushf
ja
subb
daa
pop
add
xor
sbb
aaa
lock
fucom
xor
fimull
add
sub
bound
gs
fistl
push
mov
mov
push
repz
xchg
je
pop
insb
negb
push
or
lock
incb
enter
lea
out
mov
mov
xchg
test
fdivp
shl
das
addr16
pop
cmpsl
jg,pt
adc
pop
pop
test
in
jnp
pushf
in
arpl
outsb
sbb
enter
das
ljmp
sub
mov
push
push
test
cli
mov
cmpsb
test
push
aaa
pop
ffree
shrb
mov
lods
mov
js
jae
inc
cmp
enter
pop
mov
fidivrs
adc
mov
insb
jg
mov
or
out
aaa
dec
mov
and
movsl
mov
jns
bound
shrl
sbbb
lahf
bound
pop
mov
mov
push
pop
adc
inc
jb
xor
xchg
dec
in
push
call
mov
push
push
lahf
rcrl
inc
fs
push
add
in
dec
add
pop
mov
cli
insl
adc
sub
mov
outsb
sar
xchg
in
sub
lret
adcb
or
sahf
scas
xchg
xchg
repnz
mov
xchg
leave
add
xchg
movsl
incl
mov
pop
in
in
dec
dec
inc
sub
jmp
pop
dec
mov
pop
jb
mov
or
cmpsl
and
insb
and
push
sets
xchg
dec
testl
loope
cmp
fwait
push
add
and
mov
and
add
cmp
in
mov
call
mov
or
daa
adc
inc
cmp
adc
dec
jbe
addl
mov
orl
pusha
enter
mov
insl
lret
xchg
stc
xor
lods
mov
inc
pop
mov
cmp
in
xchg
in
nop
pusha
mov
arpl
shrl
popf
popf
cmp
xchg
push
imul
hlt
cmp
in
es
mov
xchg
lret
push
xor
hlt
mov
arpl
out
mov
cbtw
jae
jb
fs
ficomps
lahf
sbbb
jecxz
sub
popa
push
test
ret
pusha
insb
fists
xchg
adc
push
sub
daa
lret
add
ror
ljmp
sbb
cld
add
dec
in
mov
mov
add
push
mov
sbb
or
inc
leave
dec
dec
enter
push
je
arpl
pop
push
hlt
jg
mov
in
daa
ret
hlt
xor
mov
push
sbbb
insl
mov
cmp
imul
out
push
lahf
mov
cmc
dec
jo
jge
jnp
hlt
ljmp
jnp
add
arpl
dec
pop
mov
decb
into
fldenv
push
test
je
mov
lds
sar
adc
inc
dec
out
jle
rcrl
push
jo,pn
lcall
adc
sti
jno
mov
add
pop
popf
mov
push
in
subl
mov
fdivp
pop
inc
sub
adc
or
testl
into
or
mov
aad
loopne
fsubl
lahf
push
mov
mov
fwait
aas
test
cmp
inc
pusha
lea
outsb
pop
add
pop
je
in
test
push
test
lahf
jae
imul
roll
sbb
andb
ds
dec
gs
les
dec
add
ss
pop
paddusb
xor
outsb
pop
icebp
mov
or
push
int3
arpl
xchg
lods
mov
inc
movsl
mov
or
jbe
xor
outsb
ja
pop
fs
in
shll
scas
stos
push
iret
loope
scas
dec
pusha
push
push
mov
test
dec
dec
sub
sbb
aad
inc
data16
call
stos
popl
jle
xchg
arpl
hlt
int
and
jno
xchg
aad
push
xchg
mov
sub
mov
arpl
scas
pop
jb
shll
daa
or
dec
add
mov
lock
pop
xor
ret
and
xchg
loopne
pop
shl
sbb
aas
add
add
sbb
push
je
mov
mov
inc
xor
push
lds
push
jl
clc
mov
dec
test
loope
cmpsl
and
cld
adc
enter
push
out
icebp
jno
mov
daa
ffreep
push
add
test
fld
cs
sub
es
das
out
inc
jle
shrb
lcall
and
xor
or
scas
mov
mov
dec
nop
sbb
cmpsl
ds
icebp
cmp
into
loope
or
aam
insb
imul
mov
mov
ffreep
out
mov
sbbl
nop
or
sub
push
pop
pop
rolb
andb
pusha
push
mov
fidivrl
push
and
sub
bound
iret
ret
repz
push
push
cld
mov
inc
xchg
dec
xor
in
loopne
imull
test
xor
push
adc
mov
insb
mov
rcrb
fdivrs
inc
aad
subb
loop
int3
and
outsl
push
outsb
arpl
testb
inc
lea
subb
mov
clc
jae
push
or
aas
dec
cwtl
mov
or
push
pop
cli
repz
and
das
inc
stc
inc
inc
in
adc
pusha
insl
mov
faddl
scas
rorb
into
and
cmp
push
pop
inc
orb
jnp
pop
stos
dec
xchg
or
shlb
cmpsl
sbb
fdivrl
mov
mov
mov
inc
sub
cmpsb
pop
addl
fistl
imul
and
cmp
je
sub
cmp
inc
jmp
dec
sbb
pop
xchg
sbb
xchg
stos
inc
lds
xchg
loope
leave
je
lahf
stos
cli
insl
or
pop
loop
std
push
add
fldl2t
dec
mov
xor
loop,pt
iret
add
std
xor
xchg
jo
fbld
jecxz
sub
lds
scas
push
les
mov
xchg
mov
repz
add
and
or
pusha
mov
fcomi
dec
add
mov
add
xor
mov
add
test
push
shll
inc
gs
insl
pop
add
jg
test
jns
pop
jecxz
mov
jp
test
ret
push
jl
jle
add
loopne
imul
nop
outsb
paddq
insl
loope
scas
int3
jnp
push
and
je
clc
xlat
lods
hlt
xchg
xlat
sub
pop
insb
clc
js
sub
fxch
cmpb
sub
mov
les
insb
pop
xor
in
pop
jo
push
hlt
bound
jo
push
cmpl
xchg
testl
gs
fwait
push
xchg
pop
and
popa
xchg
je
stos
push
out
test
fucomip
mov
je
push
out
test
lret
jne
fidivs
xor
loope
in
sub
out
rcrl
push
lret
andb
add
jne
mov
pop
cmp
xchg
lcall
jl
rcrb
inc
cmp
or
fcomi
jecxz
push
ljmp
jno
mov
ss
push
mov
faddl
cltd
xor
cs
repz
push
and
pcmpgtw
and
cmp
enter
repnz
inc
ficompl
or
iret
mov
lret
pop
call
xor
push
inc
fmull
sbb
xor
mov
cmpsl
jae
negb
lods
mov
ja
enter
mov
push
mov
jnp
data16
jge
leave
and
mov
pop
xchg
movsl
inc
mov
repnz
cmp
push
jge
push
cmp
ret
je
push
jle
popa
mov
jge
or
dec
mov
imul
push
jae
inc
dec
xor
pop
xchg
add
clc
push
int
mov
lods
mov
fsts
mov
sub
pushf
fidivl
sti
and
sbb
cmp
mov
cmc
std
int3
arpl
ja
arpl
sti
and
pop
cmc
mov
arpl
lds
mov
mov
fyl2xp1
push
inc
cmp
inc
lret
addb
out
and
push
add
loopne
mov
pop
ror
mul
jmp
dec
sub
pop
inc
cmpsl
dec
sahf
aaa
pop
dec
popa
push
iret
shrl
test
sarl
test
adcl
xchg
in
rorl
or
ja
xchg
mov
or
sahf
add
sbb
or
xlat
imul
sti
pop
mov
lea
scas
loop
in
lea
iret
js
aad
xlat
or
sbb
sub
icebp
pop
ret
rcrl
into
mov
out
mov
and
cmp
aam
int3
ljmp
dec
sub
mov
mov
cmp
xor
in
cmp
inc
cld
xchg
jbe
cmpsl
add
pop
jmp
fiaddl
jo
fstpl
icebp
in
push
inc
add
sub
push
loope
sbb
rcr
mov
mov
ja
mov
xor
add
push
stos
mov
mov
ja
and
sub
int
mov
adc
cmpsl
pop
loopne
fistpll
test
jg
loop
jl
inc
jnp
xchg
call
je
out
sub
pop
subl
add
mov
negl
shlb
dec
lods
test
out
mov
in
decb
dec
mov
push
jg
fwait
xor
and
xor
xchg
push
mov
sbb
pop
in
xchg
ljmp
jno
dec
xchg
ja
lds
xor
lahf
rolb
sbb
aas
mov
xor
and
lea
lods
inc
pop
divb
pop
ljmp
and
mov
hlt
mov
dec
mov
sarb
mov
adc
shrl
mov
call
push
cmpsl
or
xlat
xchg
popa
clc
idivl
pushf
stos
lahf
pop
cmc
mov
mov
push
in
dec
std
sbb
lcall
cli
mov
sbb
dec
adc
je
outsl
inc
mov
adc
sub
mov
cmp
push
mov
arpl
ja
jl
jbe
mov
lret
dec
sar
jno
cmpsl
hlt
mov
dec
sbb
jge
outsl
divl
mov
inc
cmp
add
sar
pop
mov
mov
das
or
cmp
clc
xchg
xchg
sbb
pushf
or
clc
daa
lock
popf
arpl
aas
dec
dec
lods
sahf
lods
dec
jecxz
mov
mov
fdivl
mov
bnd
clc
sbb
popa
push
insl
push
loop
pop
adc
mov
gs
ret
add
mov
sbb
jae
and
aas
pop
jmp
mov
in
jno
adc
xor
pop
int
cmp
jecxz
test
movsl
jl
in
repz
loop
pop
xor
lahf
fidivl
jmp
mov
aaa
dec
fs
fstps
or
daa
mov
cli
ret
hlt
sbb
dec
mov
imul
pop
loopne
sar
adc
orl
dec
in
arpl
add
pushf
mov
test
dec
out
xchg
jne
clc
mov
sbb
push
ljmp
xchg
mov
cmp
and
push
leave
add
mov
sahf
mov
shll
mov
jl
mov
test
lahf
lds
jns
adc
push
lea
xor
pop
popa
xor
int
push
inc
mov
outsl
lret
push
lods
mov
push
jge
cld
sbbl
push
loopne
xor
mov
enter
repnz
xchg
mov
fsubr
jo
sti
xchg
add
inc
xor
call
popf
push
aaa
lods
mov
xor
sub
sub
adc
stos
jno
popa
les
xchg
xor
pop
andl
test
xlat
scas
sbb
inc
lods
mov
lret
jmp
dec
sbb
dec
add
add
sbb
push
insb
jle
adc
xlat
fwait
xor
int3
imull
shrb
leave
pop
cmpsb
pop
and
sbb
out
sti
addr16
dec
add
and
cli
and
mov
cmp
nop
outsl
jge
xchg
mov
mov
lret
aad
xor
inc
scas
add
fildl
inc
das
push
or
jae
std
imulb
gs
out
add
stc
test
enter
sbb
push
cmc
adc
test
shlb
testl
add
rcrl
jo
mov
test
pop
pusha
sub
js
test
add
je
jns
shl
cltd
test
jb
add
aas
xchg
xor
cwtl
xor
push
jp
pushf
mov
iret
test
pop
bound
insb
addl
xchg
jnp
pop
cmpsb
movsl
sbb
imul
enter
and
int3
icebp
mov
out
push
int
out
dec
sub
ficompl
mov
inc
dec
es
jbe
loopne
sub
lock
cmp
mov
mov
cmp
lcall
and
rcll
pop
and
lods
mov
xor
jns
lock
movsb
mov
sbb
scas
dec
cmpsb
lea
jmp
lock
clc
pop
ss
iret
sahf
xor
xchg
lods
mov
mov
sub
push
movsb
sahf
cwtl
jle
lret
les
xor
sub
dec
gs
negb
cwtl
mov
push
xchg
leave
mov
xchg
jns
or
add
lods
fldcw
jl
mov
mov
ds
in
inc
fwait
repnz
inc
popf
out
inc
out
pop
les
flds
loop
push
rcrb
cmpsl
sbb
lds
ss
mov
xor
ret
inc
mov
or
fidivs
stos
pop
scas
fcompl
popf
lods
jns
subl
xchg
mov
mov
dec
mov
sbb
mov
insb
mov
sub
jl
imul
test
in
sub
pop
and
stos
js
outsl
out
xchg
jge
lret
in
adcl
mov
les
cmpsl
mov
dec
rorl
xorl
dec
mov
scas
mov
sbb
or
sbb
clc
sbb
das
pop
mov
test
pop
lret
dec
loopne
call
xor
push
fld
xchg
test
test
jnp
ret
repnz
ljmp
fmuls
sbb
stc
dec
loop
aas
push
jnp
imull
sub
out
pop
loope
ficoms
and
push
movnti
rorb
ds
push
push
out
add
stos
in
movsl
push
int3
mov
hlt
fwait
adcl
xchg
or
jmp
sbb
nop
das
dec
mov
test
insl
add
outsl
loopne
rorl
cwtl
cmpsb
push
xor
cmpsl
xor
test
enter
popa
mov
cmp
mov
pop
gs
cwtl
lds
jae
mov
xor
icebp
mov
adc
adc
jns
mov
leave
arpl
sbb
insb
adcb
mov
push
dec
fadds
add
jae
enter
pushf
dec
fisubl
xchg
cld
lcall
mov
pusha
orb
and
fidivs
fwait
add
icebp
sti
scas
mov
adc
iret
outsl
fcmovnb
pop
or
daa
aaa
ficompl
push
or
lret
xchg
adc
push
std
test
movsb
sub
jl
out
es
xchg
cli
cmp
inc
ds
psubusb
sub
sbbl
mov
push
aam
sarb
sub
repnz
and
pop
insb
sub
xchg
inc
xlat
sub
xor
nop
xchg
push
stos
mov
lcall
and
push
or
inc
cli
repnz
testb
push
cwtl
sub
fbstp
pop
incw
and
mov
cwtl
rcll
xchg
mov
jmp
push
sub
test
cmp
jecxz
jle
addl
push
xchg
insl
or
clc
mov
mov
scas
or
cs
pusha
xchg
fimull
sbb
add
add
xor
jnp
sub
rcrl
mov
aad
jmp
or
lock
andb
adc
sub
xor
cmp
pop
cmc
fcompp
inc
pop
or
jge
xor
aam
push
in
push
stos
inc
clc
scas
in
stos
jge
cld
scas
lret
out
andb
movsb
cmpsb
xchg
xchg
xor
dec
cmp
push
sbb
mov
sub
sahf
out
mov
lock
test
inc
clc
sub
or
hlt
leave
jle
jp
daa
mov
dec
pop
fdiv
push
pop
loope
pop
xchg
xchg
sub
pusha
xchg
je
mov
inc
les
dec
dec
cwtl
xor
leave
loope
or
sbb
js
cmp
sarl
jne
cmp
testl
inc
pop
int3
jg
mov
fstps
push
std
mov
cs
and
cwtl
pop
push
out
push
inc
repnz
cs
ficomps
imul
jne
jne
outsl
add
sbb
mov
pop
arpl
xchg
lds
sar
lret
imull
cwtl
and
leave
inc
mov
lret
iret
mov
pop
insl
pop
aaa
pop
xor
or
mov
arpl
mov
add
mov
mov
test
imul
add
rclb
rorb
outsb
adc
into
or
int
xor
psrld
xchg
je
in
or
sub
push
lahf
mov
push
mov
sub
xchg
mov
adc
push
das
std
lret
popa
shrl
mov
cmp
sbbb
sbbl
mov
fs
xchg
fildl
dec
push
fs
xchg
sub
cmpsb
adc
and
lock
popa
jl
push
adc
cmp
jl
lret
sbb
rcll
cmp
inc
repnz
pusha
xorb
jae
sbb
fcompl
repnz
imul
push
repz
lcall
shll
jl
and
mov
mov
lods
inc
nop
int3
jg
icebp
jmp
mov
mov
out
xor
mov
bts
mov
outsl
and
jnp
cltd
add
or
add
lcall
mov
pop
ds
hlt
xchg
popf
and
shlb
std
adcl
xchg
imul
sbb
cmpsb
sbb
mov
enter
lret
out
aaa
xchg
push
sbb
jno
dec
or
jecxz
xchg
sahf
xor
ficompl
mov
jno
xor
xchg
or
ljmp
inc
mov
inc
cs
or
push
je
scas
pop
insl
in
xor
out
jmp
jae
mov
cmpsb
test
mov
cmpsb
fisubs
js
and
neg
mov
or
mov
jecxz
outsb
add
push
inc
mov
xchg
mov
ljmp
mov
pop
cmpb
in
lea
loop
repnz
jbe
pop
imul
xor
xchg
dec
push
mov
in
insl
mov
jae
in
and
fimuls
jp
push
cmpb
jno
out
lods
mov
add
std
pusha
cmp
and
lcall
push
in
and
push
movb
jbe
movsl
nop
and
adc
adc
arpl
cltd
xchg
shr
popa
cwtl
lea
mov
mov
insl
sub
xchg
xchg
cmc
pop
fs
pcmpgtw
test
or
fdivrs
ss
mov
push
outsl
pop
lret
nop
fldl
mov
push
lods
ret
fnstcw
in
mov
imul
shrb
lret
fnstcw
movsl
mov
jne
add
pop
mov
pop
fmulp
call
cmp
lods
xchg
mov
fldcw
out
popf
stc
and
cli
cmp
sbbl
rcr
repnz
fdivs
repz
sbb
add
cmp
mov
cmpsb
cvtpi2ps
cmp
ss
sbb
out
push
cmpsl
or
and
mov
je
test
inc
mov
mov
jmp
jmp
or
push
jl
mov
mov
add
xor
sbb
push
jns
inc
push
push
jno
bound
sbb
sahf
jb
adc
negl
mov
arpl
lret
xor
or
adc
outsb
jno
xor
jecxz
mov
add
push
insl
mov
ret
jb
aaa
movsl
sarb
jnp
push
lods
lds
pop
inc
inc
mov
ljmp
and
sbb
jp
mov
lds
loop
cs
addr16
xchg
mov
aam
aas
xlat
push
call
xchg
ss
pop
mov
pop
dec
add
mov
in
hlt
andl
aad
push
mov
xchg
lcall
jnp
loopne
je
dec
out
icebp
arpl
fwait
in
mov
xchg
sub
cmpsl
or
adc
fstpt
repnz
lret
bound
xchg
push
scas
dec
sub
and
lcall
pop
in
loop
cmp
xchg
xchg
xchg
js
sbb
and
xchg
pop
or
in
mov
push
imul
popa
xchg
mov
adc
ftst
fdivp
ret
add
inc
sub
adc
sahf
subl
ljmp
jbe
sbb
push
loope
jno
fldt
mov
fimuls
stc
mov
mull
mov
mov
into
jg
or
pop
adc
test
hlt
fcos
int
or
imul
mov
sahf
cmp
xchg
rorl
mov
icebp
fdivl
scas
mov
mov
fisubs
xchg
or
pop
jne
push
inc
sbb
fidivs
pop
jl
orb
stos
jmp
arpl
fnsave
into
enter
xchg
gs
add
xchg
fcmovnbe
fisubs
data16
popa
xor
jb
mov
adc
rcl
rol
ljmp
sub
jle
dec
popa
jecxz
rcl
xchg
dec
ret
jle
std
sub
popf
dec
test
dec
fidivrl
mov
mov
sub
push
fbstp
fsts
arpl
mov
aad
lock
jl
mov
sbb
xchg
sbb
hlt
sbb
and
aas
into
out
push
xor
lock
inc
dec
movsb
ret
aad
xlat
ret
sub
cmpsl
jecxz
xchg
dec
add
inc
lret
ds
pop
jo
jge
add
es
std
cs
mov
jmp
pop
push
or
jge
adc
rcr
lods
mov
fs
ds
aaa
add
shll
std
and
je
mov
xor
lret
mov
outsl
xchg
mov
mov
bound
sbb
jg
aaa
adcb
sarb
les
sub
ljmp
nop
dec
cld
xor
in
mov
xchg
push
sbb
inc
sbb
test
sub
jns
in
add
shll
cwtl
push
sub
sbb
cmc
mov
test
or
xor
shlb
or
mov
fs
mov
adc
and
fistl
lcall
xchg
test
push
mov
jl
dec
outsb
or
pop
fidivs
leave
iret
pop
pop
pause
inc
imul
or
lret
pop
sub
js
mov
xchg
mov
sub
testl
add
fwait
jne
dec
out
les
mov
adc
push
jp
adc
cltd
sub
pop
hlt
adc
mov
dec
cltd
cmpsb
cmp
pop
loop
mov
dec
cwtl
out
test
aad
jg
pop
ja
mov
xor
pop
jo
shrb
xchg
and
jle
cmp
and
push
fidivl
aas
ret
aam
push
fadd
loop
fsubrl
decb
push
push
dec
ljmp
jnp
inc
mov
adc
rol
subl
and
cltd
cmp
adc
or
push
leave
xchg
data16
std
mov
sub
jae
push
add
imul
orl
adc
dec
arpl
out
inc
mov
aas
insl
add
icebp
push
popf
loop
mov
outsl
xor
mov
outsb
mov
insb
mov
loopne
sti
pop
mov
notl
mov
aas
sbbb
inc
lea
dec
fcomip
adc
and
jg
add
adc
lea
mov
sti
xchg
testb
sbb
cld
xchg
repnz
into
scas
popa
hlt
mov
inc
fdivl
out
test
imul
outsb
jns
cmp
mov
shrl
push
sbb
fs
mov
call
push
add
shlb
lods
mov
imul
jp
fcoms
cwtl
mov
adc
mov
les
mov
fidivl
cmpsb
mov
outsl
jmp
adc
arpl
jmp
loopne
lcall
cld
outsl
fadds
test
mov
sub
pushf
or
sbb
movsl
dec
into
mov
and
lcall
pop
sahf
mov
adc
cwtl
inc
mov
lcall
and
adc
fwait
pop
rcrb
pop
mov
lret
sti
in
inc
fsubl
mov
out
fcomi
rcll
push
call
xor
data16
sub
xchg
pop
es
jnp
pop
out
pop
insl
mov
mov
mov
js
mov
jp
or
jle
xchg
jnp
sub
popf
lret
call
mov
imul
push
mov
pop
rep
out
leave
sbb
ds
or
enter
adc
fadds
lcall
sbb
lret
adc
adcb
das
pop
dec
sub
gs
fucomi
aaa
stos
pushf
jae
pop
movsl
mov
push
jae
in
hlt
mov
jno
cltd
sub
adc
inc
sbb
iret
jmp
leave
sbb
xor
push
call
aaa
outsl
loop
fcomip
mov
sahf
fldcw
js
into
ficoms
aam
push
xchg
loope
dec
aaa
repnz
adc
cmp
xchg
cmp
les
xchg
push
or
ret
int
jns
push
jmp
ret
dec
jmp
adc
out
insl
xor
or
mov
js
dec
loope
push
imul
push
dec
xor
push
jae
js
push
and
outsb
mov
sti
rcll
cmc
leave
xor
testl
jmp
mov
mov
jmp
adc
jg
hlt
adc
mov
pop
repnz
mov
lret
sti
out
out
xchg
jnp
lds
and
or
mov
pop
inc
fistl
cmp
imul
push
mov
jno
out
test
arpl
sbb
sbb
sub
xor
data16
std
popf
inc
sub
in
call
mov
es
sub
lret
and
jno
jecxz
and
jp
scas
sub
pop
pop
mov
in
jnp
mov
cli
adc
jb
pop
lds
push
cltd
xor
cmpsl
out
xchg
ja
pop
sub
xchg
imul
imul
div
xchg
dec
sbb
pop
and
dec
mov
adc
sbb
hlt
mov
rclb
outsl
lahf
and
sti
sbb
aaa
ljmp
jb
xchg
sbb
std
xchg
out
gs
dec
jae
lahf
stos
mov
mov
lock
in
idivl
xor
mov
in
jns
jno
pop
inc
popf
in
cld
add
stos
cld
dec
xor
or
clc
into
add
jl
mov
xchg
push
or
or
push
pusha
mov
pop
loop
ss
pop
out
ja
cmpsb
xor
push
or
jmp
xchg
mov
lock
in
lcall
repnz
stc
mov
adc
xchg
push
mov
xchg
inc
movsl
xchg
xchg
mov
movsb
dec
in
cmc
mov
add
xor
adc
xlat
outsl
mov
cwtl
das
cmp
xchg
xor
aas
xchg
mov
fcmovbe
outsb
or
adc
movhps
xchg
ja
xchg
push
inc
lret
adc
insl
inc
inc
dec
pop
in
sbb
loopw
mov
lods
in
or
mov
jae
lods
ja
sbb
int
xor
sub
cmp
movb
int
int
dec
negl
jl
adc
rcll
sbb
jmp
xchg
add
loop
jmp
lret
dec
push
lahf
xor
and
xchg
sub
adc
cmp
xor
cs
and
scas
jae
outsb
mov
loope
mov
jb
rcll
orl
inc
mov
shrb
mov
pop
dec
lods
pop
push
movl
mov
test
mov
or
and
in
dec
repz
test
mov
dec
sub
add
or
sub
add
adc
sub
les
stos
notl
loop
cltd
lcall
aad
movsb
jb
mov
jbe
cmp
outsl
jl
outsl
scas
addl
jne
sbb
into
sbbl
fs
loop
push
adc
push
cltd
sbb
cmc
mov
inc
in
xchg
sub
mov
mov
mov
sbb
mov
mov
inc
aas
mov
sahf
pop
repnz
mov
push
out
pop
mov
and
sub
mov
outsb
mov
xor
xchg
or
xchg
daa
in
xchg
movsl
push
scas
inc
roll
loop
lods
cwtl
sti
fdivr
icebp
aad
testl
xchg
jle
out
cs
test
mov
push
adc
jnp
nop
inc
xlat
rcrl
into
insl
mov
shr
jbe
or
les
stos
ss
adc
data16
jmp
hlt
xchg
pop
dec
jmp
insb
jnp
mov
jae
lock
push
cmc
xor
and
iret
push
inc
jecxz
adc
sub
pop
sarb
sahf
add
mov
push
push
out
push
adc
leave
xchg
xor
and
inc
gs
int3
rcrb
mov
stos
sbb
cltd
push
test
jmp
and
inc
mov
inc
fldt
lds
sbb
dec
sub
inc
mov
jp
adc
adc
aam
jl
and
mov
xor
aam
addb
dec
pop
mov
ret
mov
je
loopne
scas
gs
fbld
xchg
mov
fistpl
repz
fcoms
xchg
je
pop
rolb
pop
push
mov
and
ror
cmp
aad
arpl
test
jo
stos
test
xchg
sub
mov
fs
push
nop
into
enter
push
daa
inc
dec
dec
stc
dec
movsl
icebp
call
in
into
dec
push
sub
xchg
mov
inc
xorb
std
mov
mov
lret
push
std
xchg
inc
into
gs
fmul
adc
in
sbb
cmp
mov
lcall
jo
insl
test
mov
cmpsl
cmc
rclb
xlat
dec
test
out
cmp
xor
icebp
mov
decb
push
jmp
add
inc
jnp
sub
cltd
xchg
lahf
in
call
clc
jle
dec
cmp
jne
inc
pop
dec
icebp
pop
push
jae
add
nop
clc
sbbb
notl
adc
cmp
cwtl
mov
inc
push
icebp
std
hlt
lret
mov
call
or
jne
and
push
hlt
xchg
data16
pop
stos
or
mov
scas
push
iret
pop
pop
repnz
popf
push
ret
dec
mov
outsb
push
imul
mov
fildll
push
aas
add
sti
fistps
negl
out
test
stos
cltd
andl
jno
jge
scas
push
push
xor
adc
xor
sahf
lods
out
cmpsl
push
insl
xor
outsl
jnp
pop
xor
arpl
xchg
cltd
test
lods
ljmp
pop
inc
testl
inc
xchg
cld
out
xor
rclb
pop
bound
pop
and
ret
sbb
dec
adc
xor
and
jb
sub
mov
dec
aam
mov
fs
adc
push
pop
je
int
or
scas
ljmp
filds
ret
ds
pop
jmp
fsts
push
or
jae
les
jbe
mov
jb
and
pop
rclb
inc
inc
pop
sub
ret
orb
in
pop
dec
mov
daa
mov
cmpsl
pop
mov
mov
call
jb
sbb
fsubrs
cmp
pusha
outsl
fucomi
jne
pop
lock
push
in
fstpl
push
pop
lcall
jae
adc
nop
xor
jp
mov
add
scas
call
out
push
or
ljmp
addr16
dec
push
or
jmp
mov
lret
pop
and
out
xor
movsl
or
jmp
mov
and
cmc
jl
ss
push
dec
push
ds
jp
lock
mov
roll
mov
fstpl
sub
mov
test
xor
xor
adc
sbb
cwtl
push
movsl
mov
leave
pop
out
xor
pop
testl
repnz
std
sti
xchg
mov
fsubl
aad
aam
inc
jb
lcall
or
popf
mov
in
test
lahf
push
popa
mov
repz
mov
xchg
mov
and
mov
loop
roll
mov
cmpsb
test
mov
sahf
xor
iret
aad
js
pusha
lret
mov
popa
add
das
fnstsw
leave
lret
push
leave
mov
adc
xchg
lds
aaa
sbb
cld
aam
inc
imul
sbb
std
jo
mov
mov
mov
aas
sarb
pop
popf
xor
out
out
hlt
push
inc
loopne
shr
aaa
mov
mov
not
es
push
ret
pop
xchg
andb
or
xor
xchg
clc
adc
mov
inc
scas
pop
fs
xchg
cltd
aas
mov
les
mov
mov
sbbl
sbb
push
inc
push
xor
push
ja
in
call
xorb
aam
push
dec
add
andl
xchg
or
add
inc
mov
and
pop
cmpsl
inc
fs
jnp
jecxz
nop
dec
and
xchg
xchg
jge
cmp
dec
pushf
repnz
cli
movsb
jnp
mov
add
dec
pushf
dec
adc
cltd
inc
mov
push
sbbb
xchg
mov
xchg
xor
loop
ss
sbb
es
daa
xchg
jge
sub
xlat
sub
lea
dec
mov
shr
imul
sbb
jnp
mov
aas
das
addr16
pop
in
inc
inc
add
rorb
stc
or
push
pop
dec
adc
aam
stos
push
add
ret
adc
in
or
outsl
add
test
pop
pop
push
popf
roll
out
mov
lret
xchg
cs
push
sub
and
data16
jge
xor
cld
xchg
jecxz
lea
mov
jo
jmp
in
test
rcrl
call
sub
iret
les
pop
push
in
inc
mov
jecxz
ljmp
je
cmpsb
ret
and
dec
repz
push
jp
xor
insb
add
inc
test
and
push
out
nop
and
test
jns
push
mov
pop
mov
cmp
out
mov
vpxor
or
lret
ret
adc
jae
lods
test
inc
stos
jbe
xchg
or
adcl
shll
pop
nop
addr16
xor
jge
fldz
sub
jno
test
dec
out
imul
mov
sub
sbb
push
jge
fwait
loop
adc
repnz
aas
aam
lods
push
pop
sarb
pop
mov
inc
mov
lcall
icebp
or
movsl
or
fisubrl
mov
fmull
or
loopne
lea
mov
mov
fimuls
in
aam
ljmp
mov
cs
enter
fimull
pop
cmp
imul
inc
movsl
ds
fbstp
dec
push
sbb
and
and
pushf
in
jb
fsubl
dec
out
xor
cwtl
and
out
adc
cmp
bound
push
or
mov
jbe
loop
jns
in
and
jge,pt
lret
imul
jle
pop
cli
mov
ss
pop
les
daa
daa
fsubrs
int
fmul
xchg
out
jbe
push
adc
into
jno
cli
bound
repz
cmpb
cmp
imul
xchg
push
shll
hlt
or
js
adc
xchg
mov
insb
jecxz
mov
add
sar
xchg
pop
iret
daa
jp
mov
dec
fiadds
out
je
addr16
adc
mov
or
jmp
je
sti
movsl
hlt
jb
roll
call
and
xor
mov
rolb
or
inc
jg
je
es
fldenv
or
test
ljmp
aam
inc
inc
mov
sub
repnz
pop
add
pop
inc
ret
lds
mul
pop
sbb
movsl
fisttpl
pop
jae
pop
movsl
sub
mov
int
adc
lea
lods
rolb
jmp
inc
fwait
jb
outsb
outsl
jns
and
push
negl
lods
mov
lock
aad
add
loopne
mov
xchg
pop
cmp
mov
sar
xor
cmp
add
cmp
add
cmp
lahf
xor
sbb
fisttpl
inc
fildl
std
fcmove
xor
dec
shlb
bound
jbe
adc
and
mov
jmp
mov
pop
push
call
sbbb
ljmp
adc
sbb
sbb
subb
inc
stos
xchg
mov
xchg
sbb
add
mov
fadd
adc
and
fdiv
and
in
xchg
xor
test
mov
jecxz
mov
in
dec
in
mov
in
mov
sbb
insl
add
inc
insb
xchg
sub
ljmp
pop
cld
push
pop
sub
stc
imul
rorb
js
out
xor
jne
xor
stos
arpl
sbb
scas
rcll
adc
lcall
aam
stos
cmc
loop
cmc
sub
pop
lret
push
or
push
jno
and
xchg
sub
aam
sbb
pop
movsb
ss
lret
call
push
inc
and
sub
mov
cltd
push
sub
add
shlb
add
jg
shll
xor
out
repnz
lahf
inc
mov
add
ret
movsw
imul
mov
stos
dec
inc
popf
sarb
popf
or
nop
and
into
and
rclb
roll
inc
fmulp
mov
sbbb
sub
pop
negl
add
imul
sbb
cmp
outsl
jns
inc
ficoml
imul
xor
cmpsb
pop
inc
loope
inc
inc
in
std
lret
sub
sbbb
jnp
in
xor
fadds
inc
imul
cmpsb
sbb
mov
mov
add
inc
sbb
adc
ljmp
ss
fists
mov
push
lcall
je
pop
mov
pop
xchg
xor
add
cmp
addr16
jno
pop
adcb
mov
and
sub
shrb
xchg
frstor
insl
dec
xor
push
pop
dec
lds
fs
sbb
movsb
or
ss
sub
and
dec
xor
mov
rol
push
inc
add
xor
cwtl
or
and
cmp
xlat
push
cwtl
or
add
or
dec
add
imull
sub
icebp
sar
les
insl
pop
std
aam
pop
in
sbb
ljmp
fnstenvs
fidivl
dec
ret
pop
jb
jo
ficoml
dec
arpl
sarl
inc
cmp
pushf
test
outsb
jl
dec
and
test
ljmp
sbb
es
jo
add
xchg
repnz
filds
jns
movsl
add
arpl
ret
push
fcomps
mov
insl
sbb
lahf
add
and
jbe
pop
lret
rcl
enter
pop
jmp
dec
pop
into
xchg
pop
mov
mov
ret
lods
xlat
imul
mov
loope
shlb
out
lods
mov
sahf
and
sub
mov
stos
aaa
mov
push
movsl
inc
fdivs
or
pop
stc
popf
sbb
shll
mov
mov
xlat
jmp
testb
repz
lods
popa
mov
xor
enter
mov
daa
ljmp
pop
and
adc
sbb
jo
mov
add
mov
jcxz
ficomps
xor
inc
into
mov
inc
dec
adc
xor
mov
gs
xchg
fbld
cli
stc
les
push
outsb
xchg
subl
or
jg
dec
add
in
xlat
outsb
fists
cli
je
les
ljmp
nop
xchg
add
push
fdiv
mov
and
js
push
hlt
stos
or
inc
and
sahf
leave
out
mov
out
loope
adc
adc
and
aaa
jmp
imul
mov
addr16
xor
js
imul
sarb
push
fnstcw
lcall
xchg
mov
pop
jecxz
shrl
push
adcl
add
out
or
repz
int
mov
mov
test
mov
and
hlt
adc
mov
adc
mov
std
scas
pop
fwait
mov
mov
xchg
dec
in
lea
ret
cmp
pop
jg
nop
lds
jo
xlat
es
xchg
shrb
filds
repnz
or
xchg
pop
mov
out
fistps
movsb
cmp
cmp
outsb
jbe
gs
mov
in
jecxz
imul
aam
cmp
dec
lds
pop
ja
nop
sub
pop
dec
xchg
stos
hlt
jnp
scas
lods
adc
sbb
add
setl
outsl
cltd
mov
jbe
xor
dec
mov
and
scas
mov
lds
push
cld
ljmp
insb
cwtl
push
mov
jae
jns
sbb
fs
out
sbb
imul
sti
cli
jae
sub
adc
mov
jnp
fucomp
xchg
push
mov
push
fcoms
add
ja
jnp
test
ljmp
orb
push
aam
lods
pop
pop
repz
push
fisubrl
imul
mov
xor
ret
push
and
fdivp
mov
sbb
mov
inc
push
aas
out
icebp
sub
ss
frstor
pop
lods
enter
js
das
inc
mov
fiaddl
test
gs
mov
cltd
mov
or
xchg
xor
pop
cltd
xchg
stos
mov
js
loopne
fsubr
lcall
scas
sub
test
dec
js
mov
mov
aam
stc
incb
das
roll
jno
jle
sbb
inc
adcl
out
dec
or
inc
out
mov
lods
inc
dec
iret
fidivl
inc
fsubl
push
insl
aad
data16
sbb
sub
add
ret
icebp
or
fwait
insb
daa
outsl
insb
mov
int
add
push
mov
dec
movsl
push
aad
sub
sub
push
and
in
jmp
daa
mov
shr
and
mov
out
jb
fcoms
lods
cld
inc
mov
sti
or
inc
or
cmp
or
cmp
push
daa
xchg
sbbl
mov
cmpsl
in
sarl
jge
dec
xor
mov
pusha
dec
add
dec
mov
andb
pop
push
or
daa
seto
xchg
icebp
mov
xor
push
in
cli
fs
gs
js
xchg
stos
fistps
pop
jg
int3
mov
sar
pusha
push
add
rol
and
cmp
inc
adc
loope
daa
addr16
pop
hlt
and
pop
lock
aad
or
movsb
cmp
orb
cmp
jnp
fstpl
pop
lds
scas
fbld
scas
push
xor
in
add
shr
dec
lret
jp
sbb
loopne
or
rolb
repnz
add
jb
cmp
dec
add
or
dec
mov
push
inc
stos
mov
clc
fdivl
pop
lret
mov
lcall
sarl
es
push
daa
or
out
cmp
add
loope
fcompl
sbb
je
ret
pop
inc
ret
cmp
xchg
insb
xor
sbb
leave
cwtl
insl
je
loope
rcrb
in
das
sbb
sub
in
rcr
cmp
movsl
insl
test
jbe
xchg
mov
push
dec
mov
push
shrl
int3
cltd
lock
inc
mov
negb
outsb
daa
sbb
out
sarl
add
pop
fwait
fs
sbb
dec
push
sti
xchg
dec
out
sub
mov
mov
sub
add
loope
ljmp
leave
jno
lcall
or
cs
aad
in
sbb
xor
inc
dec
jecxz
imul
add
mov
shl
fstpt
mov
cmp
pop
outsl
ret
insl
adc
mov
sbb
mov
ret
and
or
cmpsl
and
in
sub
push
stc
popf
sti
xorb
les
mov
imul
inc
jecxz
les
mov
int
cmp
dec
ljmp
push
jns
insl
mov
stc
imul
mov
mov
in
jmp
int3
fs
repz
xor
jecxz
icebp
xchg
xchg
and
xor
andw
xlat
repz
jo
shll
pop
dec
loop
fmuls
outsb
sub
xchg
inc
jl
test
mov
mov
mov
inc
stos
xchg
and
cmp
imul
pop
jb
les
push
imul
mov
insb
add
movsl
sub
mov
push
mov
nop
loopne
sbb
mov
mov
orb
mov
jo
jns
jg
int3
mov
movb
lds
ret
cmp
dec
push
sub
into
cmpb
cltd
jecxz
mov
mov
test
adcb
loop
sbb
les
repnz
cmpl
push
addr16
push
inc
pop
cmp
repnz
orl
mov
dec
mov
or
inc
push
push
insl
rol
xor
in
icebp
jnp
lods
loop
stos
lcall
fldt
sbb
out
enter
xchg
loop
imul
ds
dec
mov
nop
jmp
into
sbb
sbb
sub
int3
icebp
jg
lods
cmc
pusha
ss
addr16
lcall
or
out
cmp
dec
rcrb
adc
push
dec
jge
mov
test
stos
push
fnstcw
js
mov
jecxz
xchg
lret
sahf
inc
lcall
xor
mov
arpl
cmpsl
jp
int
inc
jbe
out
into
in
std
js
cmp
lahf
and
fnstenv
xor
adc
xchg
inc
imul
push
mov
and
icebp
push
cwtl
movsl
jl
xchg
imul
push
add
add
lods
fcoml
mov
mov
pop
cmc
mov
push
xchg
mov
pop
outsb
loope
jg
out
iret
syscall
dec
nop
cmp
push
pop
mov
insl
lahf
mov
out
jo
orb
or
fbld
in
cmp
dec
outsb
loope
adc
cmpsl
cmpsb
stc
push
out
push
aam
jl
les
or
sub
xchg
xor
les
mul
in
sub
mov
stos
mov
cmpb
push
push
jns
pop
call
das
lahf
and
in
xchg
jmp
lock
mov
add
pop
jmp
cmc
rorl
mov
xor
mov
stos
std
or
in
dec
repnz
in
bound
adc
cmp
ret
jae
add
in
add
jae
out
dec
hlt
aam
push
in
ret
out
testl
lods
inc
mov
insl
sbb
stos
test
fisubl
push
nop
or
add
out
aad
test
xchg
pop
in
orl
out
sub
pop
gs
test
fildl
into
ficomps
mov
jecxz
out
repnz
test
das
jne
pusha
js
lret
shll
mov
dec
xor
in
mov
jecxz
dec
loopne
je
xchg
xor
addr16
fildl
cmovge
int
dec
cmp
cmp
inc
pop
inc
mov
sub
jmp
pop
cld
popa
xchg
lock
addr16
add
inc
sbb
pop
push
cmp
mov
mov
and
adc
xchg
in
ja
sbb
mov
popf
or
xchg
arpl
pop
sub
jae
cmp
fmul
sbb
stc
js
frstor
xchg
imul
or
sub
inc
pop
es
push
test
push
or
pop
mov
ds
iret
es
mov
inc
xchg
icebp
call
mov
hlt
or
sbb
dec
xor
cli
xchg
sti
ss
push
and
push
inc
and
jnp
fdivrs
movsb
xchg
xor
test
aad
xor
bound
add
imul
in
add
hlt
jno
in
xor
push
inc
pop
push
ljmp
mov
mov
dec
cmc
lcall
daa
test
test
out
inc
mov
mov
pop
fidivs
mov
jl
aam
adc
mov
sbb
dec
stos
repz
xorb
or
adc
je
imul
and
cmpsl
add
pop
and
aaa
je
add
lcall
stc
movsb
sbbl
repz
mov
or
stos
jb
add
inc
enter
les
data16
clc
cmpb
scas
fwait
or
roll
popa
adc
push
dec
out
int
push
in
or
push
lahf
adc
je
pop
or
test
mov
sub
sub
inc
das
loope
inc
ret
sbb
ret
lcall
jne
popa
push
lock
aaa
sbb
pop
pop
hlt
filds
xchg
jl
out
mov
fmul
add
mov
mov
adc
loope
jns
mov
inc
xchg
ja
aas
push
insl
cmp
int3
pop
insb
in
add
pop
pop
lock
lcall
call
outsl
aad
mov
jle
mov
jp
imul
and
mov
push
add
or
mov
js
pop
xlat
sub
pop
sti
test
sbb
test
inc
aad
and
dec
shll
dec
int
dec
incl
dec
pop
das
hlt
mov
into
adc
and
add
cmpsl
sahf
clc
cld
add
xchg
shll
test
add
fsubrs
cwtl
fildl
sti
pop
sbb
add
testb
jnp
aaa
stos
adc
inc
jmp
out
jne
cmp
sahf
mov
call
push
fiaddl
mov
ret
hlt
xor
gs
jae
xchg
gs
ds
lods
pop
add
jne
dec
loope
test
dec
call
mov
dec
xor
daa
hlt
mov
jmp
cmc
push
out
lahf
mov
jne
imul
into
loop
cmp
xor
addl
pushf
inc
inc
call
pop
cmp
ret
push
out
dec
push
fs
imul
xlat
stc
or
push
jns
mov
ret
pop
or
cli
push
test
das
lahf
fcomps
mov
mov
gs
out
or
repz
fildll
pop
fstpl
jae
insl
aaa
add
imul
push
inc
mov
xchg
push
sbbl
aaa
sbb
mov
ja
rcrl
mov
sub
insb
sbb
loop
movsb
rclb
bound
dec
pop
adc
lcall
pop
lret
sbb
es
mov
pop
cmp
sub
shl
in
mov
in
cmp
pushf
ljmp
add
and
adc
icebp
inc
push
push
adc
xor
dec
mov
adc
mov
lret
xchg
pop
pop
mov
xchg
cmp
pop
cmp
fdivp
cmp
xchg
sar
add
push
das
jbe
xchg
jae
sbb
stos
scas
stos
mov
pop
adc
outsb
stos
cmp
inc
lcall
call
xor
rcrb
ljmp
push
inc
hlt
into
dec
adc
pop
jae
adc
fwait
adc
enter
inc
test
dec
outsb
mov
in
or
lods
adc
pop
fiaddl
mov
insb
movsb
and
pop
xchg
jmp
lods
lock
push
cltd
adc
ljmp
inc
scas
or
pop
movsb
cld
jl
dec
notl
or
sbb
rcrb
popa
cs
or
push
mov
loope
repnz
cmpsb
adcl
cmp
loopne
loopne
js
jg
adc
ja
mov
in
adc
mov
cmp
insl
fwait
jo
fdivr
push
movsb
fwait
sbb
push
mov
jmp
pop
fs
popa
xchg
xor
ret
clc
out
xchg
xor
pop
lock
dec
lahf
cli
xor
clc
or
xchg
pushf
pop
repz
dec
push
ljmp
mov
pushf
and
jecxz
sbb
std
stc
test
scas
cli
pushf
orl
cmc
rcrl
les
ret
inc
pusha
sbb
les
and
and
push
cs
or
cmpsb
outsb
loope
mov
stos
mov
inc
pop
push
push
inc
test
pop
cld
data16
push
jmp
pop
adcl
sub
push
pop
js
addr16
popa
push
movb
out
shrb
xchg
pop
test
aaa
cmpsb
shrb
and
push
fwait
daa
scas
out
subl
sbb
out
jmp
cmp
cmp
scas
jns
cmpsl
dec
push
ffreep
mov
loop
adc
mov
pop
repnz
sbb
sbb
cli
sbb
push
lds
jecxz
ljmp
or
xlat
cmpsb
xor
push
jmp
bound
clc
push
push
inc
xor
cli
fildl
xchg
adc
lsl
clc
or
sbb
jg
jns
js
dec
scas
inc
in
mov
scas
gs
enter
popa
int3
inc
sub
dec
aad
outsl
pop
xchg
push
cmc
push
sbb
push
out
cmp
mov
mov
or
dec
popa
data16
roll
lahf
dec
and
cmpsl
push
xchg
mov
mov
hlt
mov
dec
mov
xchg
ffree
out
outsl
flds
xchg
xor
push
popf
cmpsl
stos
mov
rcrb
push
mov
mov
in
ficoms
jne
adc
dec
scas
sub
mov
xchg
int3
das
dec
lock
and
mov
enter
xor
xchg
test
rcrl
adc
daa
add
xchg
scas
push
jo
mov
test
xchg
popa
add
enter
jno
xchg
xchg
mov
enter
sub
int
sbb
lahf
add
je
jbe
imul
stos
sbbb
fwait
dec
repnz
jnp
insb
test
fs
iret
cmc
xor
sahf
adc
mov
mov
jnp
adc
jbe
sbb
sub
int3
imul
jg
ljmp
mov
in
dec
ja
imul
xchg
into
lret
loope
sahf
fwait
xor
mov
addb
cs
std
or
cmp
dec
mov
out
and
insl
cmp
pop
or
push
iret
mov
lds
sarb
mov
imul
test
stos
or
jb
push
adc
in
and
inc
lods
loopne,pt
iret
inc
sbb
mov
lock
lret
mov
bnd
adc
lahf
mov
pop
movsb
loope
in
pushf
vrsqrtps
jecxz
dec
in
push
out
push
xlat
push
je
fucomi
leavew
mov
add
test
jle
shll
sti
clc
add
xchg
cmp
test
testb
jecxz
sub
test
mov
push
cmp
push
sbb
add
fdivrl
mov
xchg
sbb
cld
data16
xchg
inc
or
nop
cmpsb
xor
pop
repnz
leave
sub
movsl
movsl
cmp
jae
mov
pop
lahf
test
nop
shlb
neg
test
dec
xchg
dec
mov
mov
mov
sub
cwtl
and
xchg
adc
rolb
sub
jecxz
fsubrs
sub
clc
mov
testb
cmp
and
jnp
jle
mov
sbb
int3
ret
xlat
mov
sub
dec
mov
scas
mov
sub
or
pop
scas
call
cld
and
xor
call
pop
or
lret
aad
ljmp
insl
inc
fldenv
inc
xchg
jb
mov
testl
into
and
jns
into
jl
jae
push
fnsave
cmpl
rorb
mov
jnp
insl
sahf
jb
loopne
mov
sub
rcll
rcl
pop
cmp
lock
rorb
cmc
mov
pop
out
jmp
and
pop
push
mov
popf
fstl
iretw
inc
jg
shrl
movq
xor
mov
je
rorb
mov
dec
jg
repnz
push
pop
xor
push
jbe
sbb
mov
mov
cmp
or
cmc
jae
inc
mov
int3
repz
lds
stc
xchg
inc
dec
mov
inc
cmp
insl
leave
dec
rol
xor
xchg
mov
mov
adc
pop
pop
cmc
lea
lea
aad
add
pop
pop
aas
mov
fstps
pop
jbe
das
loopne
sub
and
rclb
fistps
xlat
loope
cmc
inc
cmp
scas
mov
jl
fsubrp
inc
sbb
shl
inc
inc
adc
push
cmpb
xorl
adc
adcb
mov
lock
lea
inc
fcomps
mov
ja
mov
mov
pop
in
loope
movsl
mov
mov
mov
daa
sbb
les
sbb
test
inc
inc
inc
je
call
outsl
fsubs
notb
cmp
push
sahf
jnp
test
cld
fs
pusha
jo
push
clc
popl
out
add
popa
adcl
dec
loop
arpl
out
xlat
aad
xlat
lret
push
icebp
push
out
insb
adc
rolb
ljmp
inc
pop
je
out
sub
mov
lds
push
lret
sbb
pop
pop
sub
dec
in
loop
mov
in
dec
rcrb
outsl
pushf
imul
std
jns,pt
mov
fildl
into
jb
sbb
gs
fsubs
mov
push
enter
call
jns
jnp
add
add
cmc
pop
lret
out
loopne
out
ret
ss
push
out
push
inc
loope
adc
pop
sbb
in
fdivp
mov
out
and
test
repnz
notb
xchg
mov
sbb
jno
inc
lret
in
jae
sub
stc
jno
test
pop
pusha
leave
sub
test
sub
sbb
adc
popf
bound
imul
rcl
dec
sub
lods
cld
xor
loopne
daa
pop
add
inc
cmpsb
xchg
pop
jne
or
adc
sub
jmp
out
sbb
subb
cmpsb
push
cmp
mov
std
loopne
jo
jo
iret
mov
ja
mov
iret
ret
sub
mov
mov
dec
lahf
xchg
add
sbb
mov
push
or
ret
sahf
xor
mov
repnz
xor
xchg
fisttpll
ja
scas
or
mov
jb
imul
jno
test
in
xor
xchg
and
mov
or
in
cmpb
nop
lods
dec
stos
movsb
out
repz
mov
test
inc
sbb
jecxz
adc
jo
sahf
imul
scas
cli
or
xor
loope
mov
stc
mov
cs
ja
cld
xchg
inc
into
movsl
and
out
push
push
pusha
jnp
daa
out
insl
add
testb
scas
add
test
pusha
mov
sbb
mov
pop
or
ja
rcl
pop
ds
or
lcall
stc
test
jns
aaa
push
dec
xchg
ljmp
or
dec
pop
lret
lahf
or
add
ja
xchg
test
sbb
add
push
rep
in
adcl
push
mov
add
adc
pop
or
loopne
sahf
xor
mov
inc
das
push
push
lods
test
push
inc
gs
int3
popa
pusha
sti
pop
lock
xor
insl
pop
repz
add
pushf
push
mov
bound
or
ror
repz
dec
xchg
add
and
jge
icebp
mov
data16
push
insb
cmpsl
mov
addr16
add
mov
out
push
in
pushf
sub
dec
stc
jge
aas
sub
mov
repnz
icebp
push
test
push
cmpsl
push
repnz
out
push
xchg
jp
push
shll
pop
xchg
fwait
outsb
sub
insb
adc
jmp
test
bound
cmpsl
scas
mov
push
aaa
clc
aaa
sub
xchg
mov
push
ficoml
jecxz
ja
dec
and
stos
cli
or
mov
push
mov
cmp
in
in
insb
mov
inc
dec
jle
sub
test
cld
push
add
jle
jne
adc
and
sbb
mov
shrl
test
mov
mov
in
mov
cmp
cmp
mov
inc
inc
ficoml
decb
js
popf
jo
sub
xchg
fs
pop
sar
fcmove
fwait
lods
fcmovne
or
cmp
pop
cmpsb
lds
xor
movsl
push
in
jmp
into
sbb
fnsave
add
loopne
adc
test
inc
je
cmpsb
fadd
sbb
mov
mov
sub
or
movsl
lock
inc
push
pop
mov
js
fcmovbe
movsl
cmc
inc
xchg
stos
ja
cmp
icebp
cmp
add
inc
push
lcall
pop
xor
div
and
stos
dec
inc
fwait
xchg
imul
repnz
cmc
nop
rolb
mov
xchg
in
pop
xlat
test
inc
hlt
out
leave
loop
push
inc
scas
out
repz
fdiv
pop
leave
jp
and
vmovaps
insb
das
dec
aas
xchg
scas
dec
push
adc
xchg
mov
push
aam
cmp
dec
mov
sbb
pop
aaa
adc
lret
cld
jno
ljmp
sub
dec
std
into
addl
or
mov
push
inc
icebp
imul
outsl
or
test
out
out
pop
pop
mov
xchg
loop
cmp
ds
dec
aaa
icebp
cmp
lods
daa
ret
jle
inc
xchg
decl
fnstenv
dec
dec
lock
je
cmp
iret
adc
pop
xchg
ret
xchg
pop
pop
pop
jge
iret
shll
or
inc
adc
fbstp
xchg
xor
mul
imul
rcl
lret
js
pop
adc
adc
test
jo
in
jnp
mov
out
nop
xchg
add
adc
mov
nop
mov
aad
jb
fsubrs
xchg
ds
or
pop
cmp
pop
and
or
cmpsl
inc
mov
clc
ret
xor
cld
scas
outsl
test
or
and
pop
and
lods
addr16
mov
inc
lods
and
fwait
mov
stos
xor
jg
inc
jne
lcall
pop
mov
jae
dec
test
popa
cmp
es
push
aad
popa
shll
test
mov
inc
stos
popf
lods
mov
mov
adc
daa
nop
sbb
sti
jno
loop
xor
iret
jp
cmc
ljmp
jb
push
adc
cmpsl
add
int
arpl
in
xchg
mov
xorb
daa
and
jns
or
les
mov
pop
mov
dec
shrl
inc
into
dec
mov
push
mov
mov
mov
pushf
and
out
dec
pop
fsub
mov
cmc
sbb
arpl
lret
out
mov
testb
call
mov
fcomps
int
repz
xchg
mov
imulb
xor
mov
jge
mov
pop
sahf
xor
iret
jle
jns
xor
test
stos
std
or
inc
mov
sub
pop
jnp
xor
mov
mov
xchg
fidivl
cmp
push
mov
fucomip
pop
mov
aam
incb
ja
and
sub
insl
dec
push
sarl
pop
mov
lea
jle
lcall
sbb
xchg
mov
adc
dec
xchg
mov
mov
fstl
mov
fstpl
sbb
orl
enter
dec
or
sbb
and
pop
sahf
test
lret
incl
mov
xor
inc
mov
sbbl
aas
mov
pop
imul
cs
mov
lds
inc
cmp
jg
repz
ds
cmp
cwtl
jne
repnz
movsl
out
adc
inc
jecxz
add
lret
xlat
fbld
or
cltd
push
ljmp
jb
push
repz
gs
mov
shlb
lods
cmp
xchg
xchg
pop
adc
lds
shrl
pop
ret
pop
sub
gs
dec
loope
dec
sbb
jne
sbb
dec
loop
or
movsl
mov
fwait
dec
cmc
sub
hlt
sub
mov
mov
test
lcall
lcall
xor
pushf
push
lahf
test
movsb
pop
stc
or
jg
int
rorl
add
jno
sbb
es
adc
ja
mov
add
add
sbbb
jbe
mov
es
insb
pop
in
mov
adcb
popf
xor
adc
mov
std
mov
or
fdivs
aam
cmp
mov
push
xlat
call
mov
stos
mov
mov
int3
mov
jg
sbb
bound
in
push
popf
frstor
sbb
sbb
insl
pop
adc
pop
jl
xor
sbb
popa
adc
scas
mov
adc
mov
rep
mov
add
cltd
push
sahf
test
adc
and
or
mov
jae
xchg
aad
dec
pop
mov
std
dec
inc
push
push
inc
insb
popf
xor
arpl
mov
pop
push
adcb
xchg
adc
shl
jle
xchg
call
inc
add
ret
add
arpl
insb
test
jecxz
pop
pop
outsb
cmp
cltd
and
mov
mov
sbb
push
cld
cmp
cmp
shrl
pop
int
push
outsb
out
lret
mov
xor
mov
mov
fisubrl
lods
push
mov
add
clc
adc
dec
xor
mov
sbb
jmp
lods
mov
xchg
dec
and
xchg
cmc
enter
out
add
inc
les
xchg
pushf
les
cs
mov
int3
jnp
mov
test
loope
frstor
xchg
mov
mov
fldl2e
dec
jns
or
push
fwait
iret
cmp
push
cmp
out
adcl
ja
mov
es
sbb
movsb
pusha
ss
dec
add
mov
fnstcw
dec
cmp
dec
cli
jne
outsl
push
pop
xchg
je
add
or
jle
cmp
jnp
push
add
lret
jne
daa
mov
add
fdivrs
dec
mov
mov
fisttpll
or
out
jmp
pop
or
push
popf
hlt
pushf
jle
sbb
mov
js
out
fstpl
dec
xlat
dec
cltd
enter
mov
outsb
mov
mov
add
pop
outsl
lea
sub
cmp
ss
sub
lea
sahf
cmpsb
scas
shr
addb
test
dec
scas
cmc
inc
loopne
pushf
scas
imul
in
jl
jb
imul
adc
pop
dec
jns
mov
pusha
mov
mov
addl
xor
aaa
pop
jno
sbb
jp
push
icebp
mov
pop
pop
repnz
jbe
adc
sub
idivl
dec
fldcw
add
jae
and
jmp
sbbl
mov
sub
ret
pop
ret
repz
mov
pop
xlat
lods
lret
mov
popa
scas
and
sbb
dec
inc
fnstcw
lret
mov
rorl
jl
mov
add
mov
aas
mov
inc
lock
das
test
pop
aaa
cmp
in
jmp
pop
dec
cmpsb
out
sti
mov
pop
les
push
fistps
movsl
push
mov
mov
mov
int
or
std
push
sahf
rcrb
adc
mov
add
adc
movsb
addr16
test
fcmovb
call
ret
dec
or
xor
dec
lahf
shrl
in
push
test
add
mov
push
jmp
fwait
std
movsb
cmp
mov
shlb
fwait
call
and
movsl
idivb
sub
jb
clc
push
call
dec
mov
or
jb
lret
mov
inc
mov
inc
jbe
stos
test
pop
aad
popa
xor
cli
adc
xchg
cmp
dec
movsl
into
pop
bound
sbb
fsts
dec
push
sub
xor
pushf
push
push
pop
inc
into
push
movsl
ljmp
imul
sub
adc
cmp
sub
mov
lock
xor
cmp
sbb
inc
fsubl
les
in
popl
in
add
inc
mov
ds
aaa
jl
enter
hlt
es
rcll
insb
ja
pop
mov
fsubrs
or
repz
dec
fistps
das
xlat
add
jb
add
sahf
rcrb
or
repz
pop
incb
imul
mov
adc
and
xor
sbb
push
stos
xchg
sub
js
pop
ret
mov
mov
adcl
inc
fldt
jmp
das
and
push
jecxz
les
shl
mov
mov
aad
mov
sbb
pop
bound
lahf
xorl
and
push
mov
mov
sbb
mov
jecxz
mov
push
jmp
dec
push
xor
fidivrs
lds
fnsave
inc
popa
inc
sub
mov
sbb
insb
cmpsb
mov
fcom
cmp
sub
ret
inc
sub
ss
scas
inc
sub
stc
mov
repnz
es
fsubs
mov
mov
inc
fcoms
push
jmp
pop
imul
cmpsl
pop
out
in
stos
pop
push
sbb
pop
roll
fadd
pop
cwtl
pusha
mov
cmpsb
loope
cs
jmp
imul
clc
mov
push
mov
mov
loopne
stos
adc
dec
cmpsl
dec
popf
mov
loopne
sbb
scas
rdpmc
xorl
inc
jle
jno
arpl
insl
les
fwait
mov
jb
xchg
pop
into
cld
and
xchg
pop
mov
or
std
xchg
mov
push
shlb
stc
mov
shrl
cwtl
add
sbb
pop
pop
cmp
adc
push
mov
xor
jmp
popa
sbb
jge
out
jne
jge
push
cmp
stos
movsl
inc
scas
mov
add
sub
stos
push
inc
dec
or
movsb
pop
and
mov
fildll
xchg
ja
push
movsb
in
adc
test
adc
adc
jb
jecxz
xchg
inc
mov
dec
pop
cwtl
and
or
jno
sbb
lahf
push
jecxz
aaa
imul
or
int3
or
jge
pop
pushf
xor
int3
imul
pop
add
addr16
clc
and
xor
add
aam
test
push
ror
in
and
mov
adc
daa
push
dec
movb
dec
cmp
mov
shlb
mov
mov
cmp
pop
sbb
mov
push
or
mov
xchg
lcall
pushf
xchg
mov
mov
leave
mov
into
xor
js
hlt
clc
xlat
and
sbb
je
jb
stc
in
sub
rcrb
shl
in
or
pusha
sub
je
mov
sti
push
lock
lods
and
fnstcw
adc
inc
inc
imul
fwait
cmp
sbb
sub
jp
mov
and
or
or
xor
xchg
mov
lret
cld
ds
or
cld
adcb
aam
ret
and
andb
rcrb
mov
lahf
mov
mov
inc
xor
out
jno
push
mov
jge
insl
push
lret
inc
idivl
lods
push
jg
cmp
pop
xor
rcrb
mov
and
in
lods
cli
xor
cltd
mov
cmp
adc
xor
fs
dec
adc
lods
jmp
sbb
into
mov
push
and
adc
jge
aas
movsb
das
sbbb
scas
inc
fadds
int
mov
jbe
loopne
or
aaa
mov
iret
data16
or
in
stc
in
das
sub
test
in
cltd
sub
sbb
imul
xchg
testb
cmp
dec
jno
ja
mov
testl
cmp
fmull
fidivl
lods
xor
aam
movsb
add
bound
and
shrl
push
test
lcall
inc
fdivrl
fdivs
xchg
jno
into
sub
shrb
mov
icebp
pop
xlat
fs
movsl
adc
fisttps
push
xor
fsubs
mov
mov
push
mov
repnz
daa
sbb
pop
movsb
mov
xchg
sub
jp
and
scas
repz
xor
nop
gs
pop
hlt
xchg
fwait
pop
dec
inc
sbbb
jecxz
mov
js
daa
ret
push
popf
in
add
xlat
mov
pop
mov
mov
dec
js
repnz
filds
add
aam
out
test
jle
jg
inc
mov
add
mov
cmpsl
repnz
repz
add
xlat
jp
mov
dec
bound
xor
fimull
add
add
cmp
mov
dec
dec
and
cli
push
adc
sti
jp
aas
sbb
dec
les
imulb
shll
or
jp
fnsave
lret
mov
es
ret
mov
es
pop
pop
imul
das
mov
jo
mov
sbb
pop
xchg
js
leave
or
bnd
bound
inc
daa
mov
xchg
pop
adc
aaa
pop
sarb
out
jg
cmpsb
mov
jmp
inc
and
outsl
insb
lret
testl
into
lcall
mov
into
jno
pop
insb
dec
loop
sub
push
scas
popa
sub
xchg
iret
movsl
cmp
mov
dec
fdivrl
sarb
dec
mov
dec
pop
push
movsl
nop
push
in
jg
scas
inc
scas
sbb
int3
fdivl
mov
and
ja
add
dec
ds
mov
adc
test
fiaddl
nop
inc
scas
rorl
in
insb
dec
mov
fidivrl
xchg
xchg
or
hlt
add
aam
sbb
mov
jne
notl
xchg
fidivl
xchg
adc
shrl
xchg
es
mov
cmpsb
cmp
ja
sar
bound
rcrl
xor
lcall
aad
pop
repz
mov
dec
rorb
inc
lret
bound
andl
lods
jmp
add
mov
and
cmp
push
jmp
or
jmp
hlt
outsb
sbb
lahf
outsb
add
in
pop
mov
loop
dec
add
xchg
leave
mov
add
shlb
pop
stos
mov
inc
pop
out
jbe
mov
cltd
fcomip
out
sahf
imul
mov
dec
sbb
add
enter
je
xchg
dec
mov
jge
adc
cmp
repnz
jae
loope
or
mov
aam
push
push
xchg
int
les
jmp
out
rclb
movsl
nop
pop
inc
pop
test
aas
mov
dec
push
out
jns
and
mov
stos
pushf
inc
out
dec
in
addl
or
int3
repnz
mov
fstl
jb
imull
in
fcoms
xor
xor
or
clc
int
jg
add
cmp
add
cmp
in
test
push
bound
les
jmp
test
rolb
divps
adc
aam
add
es
xor
pop
stos
movb
mov
fisttpl
scas
int3
stc
leave
inc
popa
sti
sbb
lahf
pop
mov
fdiv
clc
mov
or
lods
add
rclb
in
xchg
sub
add
adc
mov
inc
xorl
int
aam
mov
xor
mov
sub
mov
sub
lock
xor
dec
dec
dec
cmp
rcrl
fldpi
ret
pop
jae
fmulp
leave
push
mov
sub
inc
mov
cmp
inc
mov
lcall
stos
mov
mov
pop
ja
push
mov
out
mov
and
mov
sbbl
popw
hlt
mov
jbe,pt
push
mov
sbb
pop
fldpi
mov
cmp
adc
dec
pop
jl
mov
and
lret
jnp
jb
mov
xchg
and
push
int3
xchg
ljmp
andl
xchg
hlt
xchg
dec
aad
mov
addr16
lar
lea
lock
movsb
jnp
ds
cli
ds
cltd
test
xor
insl
sub
xor
sub
fs
sub
js
lds
mov
pusha
jno
sbb
mov
fsub
and
flds
das
adc
cmp
popl
or
int3
pop
icebp
loop
jno
add
pop
lret
fisttpl
rcrb
nop
mov
and
fwait
xor
push
hlt
mov
or
rolb
addb
mov
push
es
jne
mov
mov
dec
scas
jne
adc
gs
lea
test
cmp
enter
sbb
int3
jo
xor
flds
pop
push
ret
arpl
outsl
aad
cmpsb
jle
addb
inc
mov
inc
fcompl
pop
mov
xchg
jecxz
rcl
xor
sbb
movsl
hlt
mov
aad
cld
pushf
dec
dec
ret
test
mov
pop
push
subb
pusha
and
lret
jo
adc
mov
mov
fwait
mov
pop
mov
and
iret
fcoml
and
cmp
fisubl
in
dec
dec
xchg
jbe
push
aad
mov
test
cmpsl
cmpsb
in
jmp
hlt
fidivrl
inc
push
dec
sarb
mov
adc
cmp
xor
add
push
add
cmc
int3
daa
cwtl
icebp
rcll
cmp
and
std
xor
mov
sbb
adc
pop
xchg
loope
xchg
mov
xor
inc
mov
sbb
subb
xrelease
push
push
sbb
sub
insb
xor
bound
test
cs
mov
mov
or
pop
lcall
test
pop
imul
cwtl
dec
iret
daa
test
add
mov
loop
xor
fbld
das
and
fnstenv
inc
rcrl
or
test
lret
ja
ds
popf
push
shll
mov
sbbb
xchg
cmc
add
mov
outsb
mov
outsl
pop
xlat
cmp
dec
ss
cs
xchg
sbb
pop
mov
jno
pop
pop
xor
idivb
stc
bound
mov
daa
cmp
push
pushf
lods
dec
enter
jno
arpl
mov
fimuls
adc
xor
loop
xor
shll
sub
out
push
cmp
dec
ss
test
stos
add
ror
mov
jle
sub
mov
push
mov
lret
mov
decl
mov
sub
sbb
xchg
cmp
xchg
jmp
sahf
pop
pushf
in
or
aas
dec
fmuls
push
jmp
mov
pop
adc
and
ret
sahf
ljmp
test
stos
dec
scas
cmp
cli
testb
push
adc
push
leave
sti
jae
popa
ja
push
test
outsl
dec
cld
and
insl
dec
sbb
push
mov
fisubl
je
pop
lds
xchg
fwait
adc
push
addr16
stos
sub
mov
jg
jecxz
cmp
dec
cmp
pop
notl
nop
insb
sub
mov
xchg
inc
mov
dec
ficompl
inc
ficomps
popa
xchg
and
aam
jne
js
test
sub
and
or
xchg
adc
jns
and
orl
or
sub
in
dec
aaa
into
cmp
inc
xlat
ds
fistps
xor
pop
movsb
pop
pop
popa
add
inc
fdivl
cs
sub
mov
out
xchg
mov
or
mov
xchg
shrb
cmp
jno
jno
jp
lcall
arpl
fadd
inc
imul
xor
repz
mov
rcll
and
push
aaa
pop
inc
in
push
je
sbb
iret
pop
or
out
lahf
ds
jb
mov
jnp
aad
xchg
sbb
sub
addr16
push
xlat
nop
mov
dec
mov
imul
lea
dec
loop
out
adc
inc
pusha
sti
mov
ffree
inc
addl
popf
push
lods
ljmp
inc
fcom
jp
sub
jb
outsl
sub
jae
movsb
cmc
pop
xor
mov
or
pop
test
lcall
push
push
ret
push
mov
movsb
addr16
je
dec
cld
dec
mov
notl
ror
outsl
pop
rcll
and
cmp
pop
pop
cmp
je
xchg
push
inc
inc
scas
sbb
orb
push
insb
ds
ds
cmp
out
mov
xchg
sub
cli
aas
mov
stos
call
jmp
rclb
das
sub
movsl
dec
sub
lret
clc
shll
aas
adc
call
mov
inc
xor
cmp
rorb
sahf
sarl
in
xor
mov
dec
push
dec
insb
stc
mov
mov
mov
or
and
int
scas
fisubl
xor
pop
sbb
xlat
dec
in
out
mov
xchg
es
fstpl
lcall
fwait
in
ret
dec
fmull
or
stos
and
std
xchg
in
pop
jbe
les
xchg
inc
ret
sub
pop
scas
mov
rorb
xchg
jo
jle
sub
aaa
jecxz
aas
adc
push
sbb
pop
inc
sbb
shufps
pushf
xchg
in
daa
daa
or
lock
shlb
mov
push
icebp
jmp
out
pop
pop
fisttps
and
sbb
pop
enter
lahf
repz
aas
add
cld
fxch
test
mov
or
push
add
lcall
add
dec
loope
xor
sbb
jg
fs
push
adcl
add
cmp
pusha
lods
dec
loopne
xchg
adc
test
mov
int
les
mov
insb
insb
negb
mov
add
cmp
es
and
push
jmp
shll
sub
call
dec
es
mov
sub
in
pop
popa
shll
mov
sbb
subl
test
lods
fldl
cmp
ss
lea
push
flds
mov
dec
sub
scas
mov
add
and
ja
xor
xchg
lea
or
adc
jbe
push
jge
flds
fwait
adc
or
fsubrs
jnp
pop
test
mov
lahf
jge
mov
jno
imul
mov
sub
je
mov
jb
pop
cmc
data16
jg
add
loopne
popf
mov
inc
lret
fcmovne
jns
cmpsb
xchg
gs
jmp
pop
ret
inc
xor
pop
push
int
mov
mov
mov
sbb
shrl
sub
xchg
mov
or
cld
fadd
xchg
pusha
sub
sbb
inc
jns
pop
or
fiaddl
dec
or
es
aam
pop
push
sub
and
sub
mov
ds
leave
xlat
add
in
andb
inc
xor
sub
push
jmp
push
pushf
cli
outsl
jb
aaa
pop
inc
adc
ljmp
lret
add
pop
pop
add
or
dec
pop
addr16
xchg
fs
mov
push
repnz
mov
and
mov
mov
mov
aaa
mov
sub
add
loop
xor
or
test
mov
lea
seta
sbb
sub
sub
sbb
xchg
pop
inc
pusha
push
stos
shlb
push
push
jecxz
in
js
push
mov
ret
jge
cmc
ficompl
fwait
adc
lods
pop
lock
pop
push
cmp
pop
inc
mov
xchg
jp
shrb
inc
xor
gs
pop
movb
rorl
mov
sbb
insb
jmp
sub
jp
mov
aaa
into
andb
cmc
adc
push
fwait
pop
cltd
push
pop
mov
out
sbb
dec
out
scas
cmpsb
sub
xchg
sbbl
add
xor
sub
jnp
lahf
xchg
outsl
push
cmpsl
shrl
fbld
ficomps
pop
scas
data16
fs
fcomps
pop
pop
mov
cmp
mov
push
or
outsl
and
cmp
pop
orb
or
pushl
stc
push
imul
or
std
and
push
out
sahf
jl
pop
test
lods
jne
ja
loopne
int
pop
scas
inc
sub
rcrl
ljmp
xlat
ret
pop
insb
in
xor
sub
jg
jnp
lea
in
fbstp
adc
ja
pop
mov
mov
mov
addr16
or
fwait
stc
push
sub
cld
or
in
jnp
adc
arpl
pop
adc
push
mov
lods
cmp
ljmp
add
fisttpll
filds
ljmp
push
jno
into
jo
push
lcall
mov
pop
add
aaa
repnz
adc
xchg
mov
add
movsb
push
movsl
aad
inc
hlt
pop
dec
cmpsl
cmp
sub
sub
sbb
add
inc
mov
ret
and
jecxz
dec
out
cld
outsl
cwtl
mov
insl
mov
jb
sbb
dec
cmpsl
pop
cmp
push
xchg
mov
icebp
insb
cmp
sub
mov
in
pushf
movsb
pop
leave
pusha
mov
ss
insl
imul
jns
mov
cmp
imul
or
or
cmp
mov
cmp
push
xchg
cmp
jl
cmp
cmpsl
ds
jno
in
insb
push
fadd
and
stos
lods
jbe
in
inc
adc
add
pop
mov
xor
fcmove
imul
cmpl
out
adc
aaa
add
imul
sub
enter
call
in
repz
mov
add
mov
fwait
in
mov
sub
loopne
pop
pop
jae
ret
fdivrs
pop
jle
xchg
fcompl
or
jnp
sahf
ss
mov
sahf
pop
mov
dec
mov
loopne
rcrb
mov
push
push
dec
loope
xchg
jl
add
push
sbb
xchg
mov
add
in
or
sub
call
or
andl
sub
and
rolb
add
mov
cld
push
sbb
push
push
dec
pop
clc
inc
jp
mov
scas
mov
push
mov
clc
ja
lret
xchg
pushf
push
ret
icebp
and
and
sbb
mov
inc
pusha
arpl
push
out
push
push
jne
in
add
mov
loopne
mov
outsl
nop
out
push
jbe
sahf
pusha
xchg
aad
leave
jge
cmp
mov
adcl
bound
ret
xor
movsb
aas
jp
inc
jmp
xor
or
dec
push
jmp
cmp
aad
inc
inc
in
test
cmp
mov
mov
xchg
sub
mov
xchg
jno
pop
jl
or
testl
pop
sbb
or
jbe
in
pop
shll
add
cmp
fcmovnbe
xorl
fs
cmp
stos
into
shl
int3
sbb
sbb
cld
cmp
pop
outsl
imul
notb
mov
cld
dec
in
or
insb
popf
add
or
mov
mov
loope
jmp
xchg
shrl
pop
daa
rcl
mov
dec
and
inc
pop
push
std
mov
mov
fdivrl
sub
enter
cwtl
mov
imul
jae
fstps
mov
stos
sbb
cmc
push
insl
daa
mov
xor
stc
xor
cmp
mov
xor
mov
stos
inc
divl
out
mov
push
xchg
shrb
mov
adc
andl
jmp
scas
xchg
out
out
mov
orb
jmp
mov
js
mov
jno
or
xlat
in
mov
dec
adc
mov
mov
sbb
fcomi
cmp
xchg
shll
test
push
test
rclb
push
jbe
jnp
adc
ja
ficompl
mov
popf
mov
test
lret
out
jno
push
and
dec
in
repnz
insl
mov
mov
push
imul
xchg
push
je
pminub
ja
sbb
inc
popf
push
cwtl
cmpsb
cmp
lcall
mov
xchg
lock
cmp
aam
std
push
mov
sub
xchg
mov
shl
scas
add
xor
add
out
pop
in
leave
fstps
jge
movsl
and
push
test
and
andb
sub
mov
cli
push
mov
inc
out
cwtl
xorb
ss
subl
sub
je
shll
dec
fldcw
scas
sahf
test
xor
nop
lds
pop
cmc
xchg
push
adc
daa
sbb
out
cld
mov
jb
sub
dec
insl
sbbb
mov
xchg
fwait
das
iret
pop
mov
fildl
mov
lret
stc
cwtl
dec
dec
fidivl
add
lcall
in
ljmp
adc
out
ja
icebp
and
test
lods
inc
mov
and
lahf
push
xor
add
nop
sbb
jle
mov
adc
cmp
pop
sub
dec
cltd
push
push
repnz
and
dec
movsb
lcall
sti
loope
sbb
cmp
sbbb
imul
push
mov
inc
gs
inc
fldenv
test
jp
decb
jo
cmpsl
call
in
or
pop
iret
fadds
nop
dec
pop
sub
mov
mov
addr16
cwtl
sbb
xchg
mov
loop
or
lock
out
xor
pop
jb
add
mov
push
daa
in
loopne
jae
sub
xchg
mov
jg
out
pop
sbb
sti
or
lea
and
sub
xchg
mov
jo
das
xchg
dec
scas
les
test
sub
sub
test
daa
mov
cmp
mov
scas
jns
popf
lods
jae
call
mov
jb
cmc
add
jecxz
sub
pop
fbstp
mov
mov
mov
sub
sub
pop
aad
jnp
call
sbb
je
jge
inc
jne
incb
sub
and
mov
xchg
pop
pop
jbe
mov
popa
fidivs
add
mov
dec
xchg
setno
or
sub
mov
mov
test
fldl
scas
loope
loopne
arpl
in
or
jg
test
fs
jbe
shll
and
das
cwtl
inc
cmpsl
lret
xchg
aam
push
repz
aaa
jg
push
sar
inc
sub
aas
ret
lret
outsl
pop
in
pop
lcall
xor
jecxz
stos
jmp
aad
movsl
pop
in
notb
mov
outsb
inc
jl
rclb
shl
jp
fimuls
mov
mov
cltd
loop
inc
jmp
mov
cmpsb
or
loopne
test
push
test
mov
push
add
test
jno
nop
movsl
jp
outsl
inc
dec
push
xchg
add
sbb
push
dec
lea
xor
popa
jmp
aam
sbb
jmp
stos
cmp
pop
rorl
jecxz
xor
xchg
scas
scas
test
mov
test
sti
jle
ja
xor
shl
out
rcpps
or
and
fldl2e
popa
sub
lahf
pop
stos
mov
daa
and
pop
lock
in
out
pop
add
jp
jmp
jae
mov
aad
mov
xchg
sub
pop
fs
inc
adcb
jbe
pushf
pop
cmp
push
in
and
aaa
gs
cwtl
je
fwait
or
jl
rorb
pop
sahf
repz
xchg
cmp
in
push
scas
imul
stos
push
mov
xchg
adc
outsb
cmp
jge
pop
push
mov
scas
cmpsb
cmp
adc
add
pop
and
call
shl
jg
and
jae
clc
addr16
sbb
data16
xchg
add
popf
dec
sahf
xor
or
rcll
cwtl
in
inc
aaa
sub
sub
out
and
cmp
fisttpl
push
pop
jns
push
test
lcall
sbb
cmp
pop
cmp
sub
out
mov
pop
pop
xor
jo
test
pop
or
pop
or
adc
jmp
mov
add
dec
sbb
sbb
and
imul
sbb
dec
sub
fsts
pop
jmp
out
inc
cmc
push
les
xchg
aaa
es
addl
int3
xor
cmp
gs
xchg
mov
test
add
out
stos
lahf
fnsave
repnz
inc
mov
insl
fdivs
fwait
mov
pop
adc
mov
sarb
shrl
sti
pop
jne
test
pop
pop
enter
cmp
cli
pop
scas
test
stos
mov
jbe
mov
mov
mov
mov
fmuls
sbb
cmp
or
lea
push
xchg
aaa
lret
stos
pop
into
and
movsl
stos
inc
pop
cli
xchg
ja
cwtl
test
sbb
ljmp
mov
mov
push
fs
xor
jo
lods
in
and
push
push
inc
push
cmpl
fcompl
rorb
sub
es
sbbl
pusha
out
push
sub
cmp
aaa
fsubr
jg
sti
or
cmpsl
push
and
push
fisttps
lea
sub
fisubs
mov
outsb
jnp,pt
inc
mov
dec
xor
ficoml
pop
mov
xchg
and
mov
pushf
faddl
push
pop
test
gs
dec
push
lahf
lock
bound
fs
hlt
jno
push
or
sbb
and
scas
mov
addr16
adcb
ret
out
in
in
pop
pop
xchg
pop
mov
setae
pop
mov
ljmp
mov
jo
iret
in
addl
shlb
test
pop
lods
inc
adc
adc
pop
pop
das
dec
mov
sar
jo
out
and
negb
push
testl
push
cli
pusha
push
cmp
cld
cld
pop
scas
dec
imul
lock
cmp
push
sarl
push
push
xor
inc
adc
mov
pop
lds
ret
dec
lea
and
lds
and
xchg
pop
sub
add
xchg
cmpsb
sub
test
add
das
mulb
aas
loopne
push
push
mov
pusha
test
mov
ret
sbb
imull
jne
pop
cmpsl
pop
lods
mov
dec
out
ret
mov
loopne
loope
repz
lock
add
xor
xchg
insb
cmp
sbb
inc
mov
xchg
sub
cmp
ljmp
sbb
xor
shrl
imul
psubusw
sub
sbb
out
lahf
ss
add
imul
js
sub
fcompl
pop
inc
add
leave
push
arpl
lret
dec
das
jmp
lds
out
addr16
xchg
mov
repz
jl
pop
mov
decl
adc
out
popf
mov
push
shlb
add
mov
adc
in
insb
iret
mov
inc
sub
jle
mov
add
movsb
push
mov
pop
or
or
dec
ror
out
lods
xchg
sub
sub
add
inc
fwait
pop
sbb
aaa
dec
push
mov
cmp
xor
mov
notl
out
lahf
fldenv
arpl
test
imull
cli
jne
mov
lock
rorl
notb
pop
lret
xor
cmp
lods
movsb
cmp
movsb
ret
inc
sbbl
push
sbb
test
in
xor
fiadds
adc
mov
dec
test
mov
push
and
fnstsw
dec
lret
push
mov
jl
je
sarl
cmpsb
pop
in
push
mov
fld
jecxz
ljmp
sbb
push
loope
iret
mov
inc
cltd
jg
scas
lret
jnp
pop
roll
cmpps
push
xor
sbb
stc
les
cmpsb
xor
fimuls
sbb
or
sbb
push
jmp
js
xchg
ja
jl
je
lods
xorl
out
shrl
push
fwait
push
push
jo
xchg
adc
mov
loop
xor
or
mov
std
pop
jp
xchg
xchg
add
ror
repz
mov
adc
clc
in
mov
aad
and
sbb
fs
mov
out
or
outsb
scas
dec
jg
std
mov
inc
push
aam
int3
push
mov
xor
jecxz
fisubl
inc
stos
cmp
lret
js
ds
mov
mov
mov
mov
sub
fisttpl
cli
lahf
add
xchg
ds
mov
mov
xchg
into
xchg
sub
and
scas
lea
and
sub
xor
jge
inc
pop
stos
outsb
mov
nop
scas
lcall
incl
ljmp
xor
shrb
sbbb
popa
add
push
sbbb
call
xor
add
mov
sarb
add
sub
dec
cltd
adc
out
loopne
outsb
add
sub
push
test
dec
mov
mov
mov
popa
or
ss
jmp
enter
push
xor
shl
pop
leave
fnsave
sti
or
shrl
jle
mov
loope
xchg
pop
lods
outsl
icebp
sub
mov
mov
jle
push
push
push
adc
and
jle
adc
cmpb
or
xchg
in
mov
cmc
dec
sti
mov
insl
fwait
rorl
or
and
push
aaa
push
test
nop
push
pextrw
jo
mov
popf
sub
cmp
mov
xor
ret
jne
fmuls
cmp
call
sarl
in
inc
xorl
ret
leave
dec
sub
int
sti
mov
in
xor
daa
leave
mov
xchg
jle
sbb
lds
outsb
fwait
and
sbb
dec
cmpsl
push
andb
clc
cld
jge
dec
push
dec
mov
int
push
int
jo
pushf
cld
inc
sti
hlt
popl
xchg
popf
jo
rcr
jmp
push
std
lahf
inc
xor
add
lea
fistl
ret
jae
inc
xchg
aas
push
cmp
mov
sub
or
cmp
loope
das
cmpsb
imul
into
mov
int
int
lea
lahf
int
ret
aaa
sbb
mov
pop
mov
cld
mov
movsl
mov
push
rclb
jmp
movsl
and
mov
push
jecxz,pt
ds
push
sub
std
outsb
mov
rcll
adc
sahf
subl
sub
cmp
cmpsl
mov
adc
dec
js
dec
pop
jnp
mov
and
adc
movsl
sub
cmpsl
jb
mov
mov
sahf
imul
lds
inc
push
dec
jnp
mov
lds
dec
nop
xor
pushf
cltd
or
test
push
pushf
mov
pop
mov
xor
xchg
inc
inc
dec
add
push
lcall
xor
dec
in
dec
mov
in
xlat
cmp
aam
out
add
lret
movsb
scas
xor
jmp
lea
fs
lret
push
xlat
in
inc
clc
pop
push
fiaddl
xor
cmp
pushf
pop
fstps
scas
dec
sub
fnstsw
shll
mov
sub
mov
inc
xor
jmp
push
pop
arpl
pop
xchg
sub
cli
add
imul
pop
hlt
jb
pop
lock
clc
mov
jle
xchg
mov
pop
mov
sarl
xchg
stos
push
and
cmpsl
rolb
stos
fsubs
sub
push
lahf
dec
cld
pop
mov
or
aaa
or
fstl
pop
repz
pop
repz
and
jbe
jg
mov
outsb
cmpsl
xchg
mov
vpsrld
mov
rcrl
das
pop
aam
loopne
fmuls
push
mov
xor
lahf
mov
pop
cltd
ret
mov
stos
xchg
fmuls
inc
pop
or
sbb
push
pop
stc
jne
push
cmpb
sub
jnp
fistpl
add
xchg
aam
mov
ret
adc
es
and
dec
into
or
enter
jo
cltd
in
js
mov
outsl
push
inc
outsb
pop
fnstenv
xor
xor
pxor
push
lock
cmp
test
pop
xchg
cmp
pop
mov
inc
mov
aad
lret
mov
add
jns
lcall
add
in
stos
mov
hlt
jns
out
bound
int
hlt
aas
jmp
cltd
ljmp
cmp
fadds
cmp
je
dec
xchg
pop
add
xlat
mov
mov
push
cwtl
out
cmpsb
mov
mov
push
aas
mov
hlt
fucom
frstor
mov
mov
inc
push
mov
bound
dec
push
mov
fisubrl
out
mov
add
lds
push
stos
into
pop
ljmp
divb
jge
not
lds
lods
jle
mov
xchg
addr16
in
push
push
push
fsubrp
fstpl
add
add
xchg
xchg
add
jle
xchg
sub
mov
mov
mov
push
xor
movsb
cltd
stos
jmp
out
jne
sbb
push
cmp
jecxz
sub
dec
lret
iret
jg
add
int
jge
int
mov
push
in
addl
fwait
sahf
sub
xlat
and
enter
pop
lcall
mov
mov
jg
mov
outsl
push
and
rcrb
xchg
test
push
popf
push
out
push
sar
push
cld
xor
sub
jbe
sahf
popa
ss
in
fsts
jp
mov
or
inc
bound
adc
mov
sub
cmpsl
scas
aas
adcl
inc
fbld
call
dec
into
sahf
and
aad
bound
fcomps
ss
fcmovne
pop
pop
cmpsb
cmp
or
xchg
sub
xchg
fnstcw
pop
test
lret
ja
popa
xchg
clc
aas
in
pop
push
dec
adc
sarb
xor
cltd
cmp
push
push
sbb
lds
or
cmp
pop
xchg
out
test
cmp
cmpsl
mov
test
cmpb
nop
jo
sub
pop
jnp
pusha
daa
jbe
pop
fsubl
or
cs
adc
xchg
test
inc
pop
andb
add
lahf
inc
andl
mov
pop
sub
inc
or
sbb
sub
mov
inc
mov
mov
stos
xchg
mov
sbb
iret
es
ret
popa
into
push
or
cwtl
xorl
mov
xlat
xor
shll
cs
mov
adc
add
scas
sahf
jmp
jns
fs
notb
sub
jecxz
dec
into
push
shll
sti
push
cwtl
and
push
mov
scas
inc
lahf
cmp
inc
add
sbb
mov
or
or
xor
pop
cmpsl
mov
fimull
and
outsb
and
orl
cmp
cmpsb
out
loopne
in
add
mov
lahf
mov
jae
pop
mov
cmp
adc
jb
ds
add
popf
ds
inc
fidivrl
pop
push
bsf
outsb
sub
ljmp
lea
ror
movsl
in
adc
gs
ficoml
loope
ds
loope
outsb
add
sub
adc
pop
mov
pusha
inc
jecxz
cli
or
mov
sbb
into
xor
test
aas
push
mov
cmpsb
xchg
add
jno
sbb
leave
repz
pop
cmpl
inc
xchg
int
popa
pop
jns
pusha
test
and
push
push
roll
xchg
fnsave
imul
push
push
jmp
inc
idivb
fwait
ret
mov
ret
dec
enter
pop
mov
fstpl
stos
lea
jl
insb
sub
sahf
arpl
sbb
ss
push
jne
push
imul
inc
adc
test
or
jmp
movsb
pop
lcall
adc
mov
mov
or
inc
inc
stos
inc
popf
lea
push
loopne
mov
mov
repz
cld
push
xchg
push
stc
push
nop
dec
sbb
jg
pop
loope
mov
dec
xor
and
stc
mov
ljmp
sub
testl
lock
shld
xchg
test
adc
bound
jno
mov
push
mov
pop
xchg
jmp
push
cmp
xlat
outsb
push
or
imul
cmp
movsb
mov
mov
mov
insb
mov
xor
mov
mov
loop
andl
mov
jecxz
mov
lea
pop
movsb
jnp
sbb
add
loopne
imul
xchg
push
pop
add
jno
sub
pop
adc
add
cld
mov
ret
faddl
push
push
outsb
pop
add
sub
mov
popa
ljmp
mov
push
test
dec
push
add
add
cmpsb
js
lods
and
sbb
push
mov
xor
xchg
rorb
out
or
jg
test
sbb
fsubl
imul
mov
out
daa
outsl
inc
icebp
mov
jbe
sub
out
jno
out
cltd
cs
imul
movsb
movsb
aaa
cmp
out
and
fildl
mov
rorb
and
inc
cmp
ds
sbb
loop
hlt
enter
and
push
add
je
mov
sub
repz
xchg
in
lds
xor
jnp
or
jge
jge
pusha
push
dec
test
xor
push
push
lods
jo
fcomip
movsb
push
mov
sub
fwait
xchg
cmp
test
xor
mov
cmp
xchg
dec
inc
rolb
imul
insl
test
xor
test
xchg
scas
out
cmpsl
pop
cmp
imul
pop
cmp
lcall
push
lret
insb
mov
xchg
dec
push
lcall
loope
push
mov
cltd
or
test
fmul
fisubl
and
insl
or
inc
fists
add
jns
stc
or
xchg
rcrl
insb
push
clc
repz
nop
adc
outsl
pop
or
pop
xchg
sub
into
gs
outsl
daa
and
pop
jae
ljmp
push
sub
jno
mov
and
jmp
sti
or
sbb
or
fnstenv
push
test
xchg
cmp
pop
push
lock
out
dec
arpl
stos
inc
aad
fldcw
test
jg
mov
fistpll
push
js
inc
pop
cld
mov
ljmp
push
ret
sahf
addb
rcl
mov
stc
mov
cs
lea
xor
rol
and
push
loope
mov
xchg
movsl
lret
test
mulb
mov
ds
mov
fcom
decl
bound
nop
and
cmp
mov
adc
out
js
testl
pushf
out
and
cmpsb
jge
mov
outsb
roll
insb
add
mov
push
mov
je
or
and
mov
sub
mov
mov
adc
cmpl
dec
fwait
xor
adc
jle
cmp
stos
mov
lret
pop
jg
xchg
ret
cmp
sbb
and
add
iret
push
imul
jecxz
rorb
icebp
andb
je
mov
testl
inc
sub
ja
jnp
mov
inc
shl
scas
push
jb
scas
cmp
mov
iret
out
imul
and
in
stos
lret
dec
inc
outsb
inc
rol
sbb
dec
inc
std
xlat
jo
insb
mov
test
out
mov
test
insb
in
dec
mov
loopne
outsl
xchg
lea
sbb
sub
fadds
pop
cmc
push
sbb
es
push
in
imul
aaa
jle
mov
leave
inc
stc
add
dec
mov
int
repnz
insl
xor
xor
mov
dec
hlt
test
sub
mov
test
mov
jo
lods
inc
fistl
jae
ds
sub
mov
xchg
movsb
mov
fstl
mov
jno
scas
shl
jo
xorl
and
fcom
ds
out
scas
pop
sub
pusha
xchg
inc
adc
sbb
pop
imul
cmc
out
xor
xchg
daa
cltd
add
xor
lods
push
add
jecxz
push
lods
cld
add
sub
shlb
push
iret
adc
xchg
sub
xor
mov
mov
js
xchg
rcrl
scas
sub
aam
jecxz
sub
stos
and
mov
mov
cli
rorb
in
jae
divb
pop
mov
scas
mov
mov
enter
push
xchg
sub
je
into
adcl
mov
pop
xchg
out
adc
adc
bound
outsl
sub
insb
pusha
xchg
ret
insl
jb
insl
jl
fstpt
loop
out
push
pop
in
dec
sti
mov
adc
jg
sarl
pop
inc
in
scas
pop
sbb
jnp
mov
fadd
lcall
xlat
in
mov
gs
and
cmp
sub
xchg
jb
popa
lock
inc
lock
jp
gs
cmp
sub
mov
mov
add
add
or
jp
push
push
daa
fwait
mov
xchg
sub
sbb
dec
jns
dec
jecxz
xchg
rclb
adc
ficompl
dec
in
jg
xchg
sti
sub
pop
push
pop
mov
shr
dec
out
push
jo
dec
ja
push
push
mov
jl
and
push
ficoml
xchg
aas
pop
lahf
lret
push
add
les
xor
mov
data16
xor
dec
daa
mov
insl
in
push
pop
cmp
pop
or
xor
roll
call
dec
lds
dec
lcall
into
xor
inc
mov
fistpll
shrb
fdivrl
rcl
movd
and
pop
mov
push
lea
fcoms
ljmp
cmp
adc
stos
xchg
bndldx
cmp
out
dec
pop
push
fdivp
movsl
push
rcrl
fucom
sti
adcl
loopne
inc
fsubr
je
scas
inc
imul
lret
int3
lret
mov
jle
inc
lret
iret
mov
dec
aaa
jns
je
cltd
das
in
sub
mov
fcoms
cld
sub
dec
in
xchg
mov
mov
adc
xor
adc
std
sub
mov
xlat
xor
aam
mov
adcb
icebp
mov
imul
xor
loopne
sbb
or
push
testl
jae
pop
movsl
test
out
jnp
mov
iret
pop
add
cli
stc
or
cmp
cmpsl
cmp
and
and
pop
loope
out
in
cmp
mov
mov
nop
test
sarl
jecxz
test
in
jmp
insl
cmp
pop
imull
pop
xchg
popf
sub
sub
cmpb
dec
in
xor
loopne
sub
inc
inc
mov
adc
enter
sub
xor
daa
push
ljmp
popf
xchg
insl
pusha
negl
js
jae
sub
ljmp
addr16
mov
cmp
cmp
and
cmp
cwtl
xor
incl
insb
cmp
xchg
cli
enter
jle
lods
rcrb
sbb
xor
dec
cs
mov
push
outsb
in
mov
ret
fisubrl
cmpsl
sti
add
adc
and
fs
cld
mov
pop
stc
aad
xor
dec
shlb
cmp
outsl
inc
clc
pop
jp
in
mulb
fldenv
out
mov
cmp
mov
jge
int3
lcall
adc
dec
push
or
cmp
icebp
movsl
pusha
lods
mov
or
cmpsl
jo,pn
inc
out
xchg
jecxz
dec
inc
aas
aad
aaa
mov
fwait
jecxz
inc
xchg
jns
stos
mov
mov
and
xchg
out
fstpt
movsb
or
sub
adc
and
inc
lcall
inc
mov
lods
xchg
or
cmovae
idivl
fdivrl
call
into
or
xchg
cmp
ror
ja
or
pop
inc
mov
outsl
add
int3
and
dec
xor
xchg
nop
jp
and
decb
sbb
sar
inc
mov
les
repz
std
sub
push
imul
xchg
ljmp
and
incb
mov
inc
ret
out
mov
xlat
cmpsb
or
jp
in
popa
leave
divb
vmovupd
and
xlat
mov
int
fldl
out
sub
jp
enter
pop
mov
mov
mov
sbbb
into
out
push
add
outsb
scas
iret
pop
stc
outsl
int3
inc
fisubs
and
sti
mov
cwtl
xlat
mov
and
xchg
mov
jp
fisubs
lcall
ret
lret
scas
mov
mov
cmp
iret
pop
cmc
cmpb
dec
dec
stos
push
scas
cmpsl
vaddsubpd
loopne
push
adc
lds
shll
cs
lds
jg
xchg
scas
sbb
jae
sub
stos
shll
lock
jg
sbb
clc
aas
dec
jne
adc
popf
int
mov
shrl
fstpt
adc
movsl
mov
stos
mov
sbb
mov
jmp
or
imul
inc
jle
sbb
dec
add
lahf
sarb
mov
sbb
sbbl
jecxz
popf
icebp
movsl
dec
sbbb
dec
out
int
sub
jns
rep
mov
pop
pushf
pop
repnz
sub
pop
cmp
push
imul
jb
std
xchg
inc
cmp
jg
test
cmp
mov
aam
and
mov
addr16
cltd
test
pop
mov
jo
push
pop
jbe
dec
fcomps
xor
mov
push
rcrb
sbb
cld
lcall
rol
test
mov
and
repnz
push
cmp
xchg
mov
notl
stos
adcb
mov
dec
xlat
adc
sbb
mov
filds
dec
or
sbb
fdivl
xchg
adc
cmp
add
mov
loop
add
ja
rcrl
mov
xor
push
in
fdiv
jg
jmp
dec
sbb
mov
shll
push
xchg
call
enter
mov
cmp
cli
shrl
aam
ds
xor
scas
cs
fs
test
mov
loopne
dec
aad
lahf
cmp
out
push
dec
push
fistpl
cwtl
outsl
push
xchg
cmp
dec
stc
es
adc
dec
loope
xchg
add
mov
push
jo
fsubr
sub
dec
mov
das
int3
cmp
adc
mov
mov
roll
mov
es
push
sub
xchg
adc
insb
push
mov
cmp
mov
jge
inc
lcall
ret
xor
pop
mov
fcmovu
jmp
aad
hlt
xor
sub
insl
lods
arpl
rcrl
js
sub
popf
jl
inc
dec
jle
xchg
adc
sbb
jo
push
cmp
inc
pushf
lret
mov
inc
fsubr
out
stc
adc
push
and
push
mov
ret
and
push
adc
insl
push
insb
test
push
outsb
icebp
std
sbb
outsb
sahf
scas
cmp
adc
movsb
clc
mov
jns
leave
pushf
outsl
jbe
in
mov
rcrb
dec
mov
es
cli
pushf
outsl
jle
pusha
mov
inc
out
xor
cltd
insb
xor
bndstx
insb
jl
inc
out
sti
and
sbb
loopne
pop
out
icebp
cltd
das
loopne
mov
aad
popf
in
pop
hlt
in
hlt
addl
add
es
imul
ds
push
dec
mov
mov
sti
pop
mov
adc
or
fs
or
inc
and
dec
mov
test
adc
xor
les
in
push
add
mov
pushf
ds
fbstp
in
js
xlat
push
stos
lea
and
inc
lea
jg
jmp
inc
mov
aam
xchg
icebp
jae
pop
cmc
pop
inc
adc
cmp
cmp
std
lahf
xor
sbb
mov
push
inc
add
adc
dec
aad
in
insl
repnz
mov
adc
jb
add
outsl
push
sub
data16
mov
lret
cld
push
out
mov
xor
jle
scas
aaa
sub
pop
je
cmp
hlt
push
jne
pop
dec
int3
lods
pop
jp
or
add
mov
shl
test
mov
xorl
inc
lret
fimuls
inc
fstpt
jp
push
pushf
cmp
xchg
push
fcomps
iret
inc
les
dec
push
mov
out
push
xchg
ret
dec
test
pop
jmp
sub
add
sbb
lock
mov
imul
out
dec
lret
mov
inc
dec
in
lahf
adc
je
inc
and
stos
lcall
xor
out
addb
testl
insb
push
xchg
xor
jl
dec
insb
test
xchg
repz
mov
dec
mov
push
jne
test
push
or
in
loop
test
mov
popf
dec
fsubs
repnz
popf
or
and
or
dec
push
add
mov
xor
pop
jo
dec
inc
lret
xchg
stos
jl
jb
outsb
sub
mov
rdpmc
scas
lods
add
and
inc
push
lea
imul
ljmp
mov
mov
push
mov
enter
rcrb
data16
addr16
inc
lret
andl
aam
mov
mov
sbb
jp
xlat
js
dec
fwait
or
adc
orb
movd
scas
inc
push
lea
jl
xor
xchg
dec
xor
call
sbb
xchg
pushf
mov
dec
and
test
xchg
cld
pop
mov
jmp
fnstenv
add
dec
iret
mov
xchg
jecxz
dec
and
or
inc
or
push
push
outsb
dec
cmpsb
jp
gs
aam
popa
pop
repnz
ljmp
pushf
repz
jbe
pop
das
mov
cmp
lds
ss
sbb
daa
pop
data16
mov
add
adc
mov
es
fs
push
leave
inc
jb
test
les
jae
mulb
fs
loopne
orb
sub
pop
dec
mov
jp
nop
shl
inc
fiadds
popa
mov
xor
fistpll
cmp
je
dec
xor
stc
lock
dec
pop
shll
loop
in
jle
push
sub
dec
fmuls
es
sti
push
ds
push
sbb
mov
inc
outsl
bound
and
ja
stc
jmp
cwtl
inc
xlat
mov
pop
das
pushf
xor
in
loop
dec
gs
xchg
xchg
xor
add
notl
addr16
fcoml
mov
push
push
arpl
mov
push
and
pop
jp
das
nop
and
xor
in
sub
adc
lods
adcl
xchg
jo
add
andb
out
xchg
lret
push
movsl
cmp
aad
and
hlt
dec
mov
pop
rorb
inc
pushl
popa
push
call
lret
dec
outsl
aaa
in
clc
or
clc
fidivl
pop
nopl
cmp
jae
jl
mov
ja
or
popf
xor
dec
pushf
test
mov
imul
cltd
sbb
enter
pop
ljmp
scas
mov
jae
sbb
pusha
pop
xor
xchg
or
mov
xchg
push
xchg
inc
xchg
add
add
and
cmp
outsl
aad
mov
in
fwait
sarl
leave
and
clc
or
test
lcall
ret
xor
push
mov
xor
in
sahf
adc
mov
pusha
daa
jbe
xchg
push
lret
ret
sub
add
mulb
add
jo
sub
add
and
pop
test
or
out
dec
mov
push
cmp
push
scas
mov
lds
rcll
add
push
sub
xor
cli
loope
out
add
outsl
lret
lret
mov
shll
loopne
xchg
push
pop
sbb
lods
ds
sbb
sbb
mov
add
mov
outsl
andl
xchg
fisubrs
int3
sub
push
aad
fldl2t
out
push
decb
xchg
cmpsl
lea
rolb
ret
jge
cmpps
aad
cli
and
rcrb
movb
scas
jns
or
adc
in
dec
xor
cmp
ret
mov
push
lea
or
ret
scas
test
rcrb
or
testl
adc
mov
ficoms
push
or
ss
or
repnz
cmp
push
dec
mov
pusha
xchg
movsb
shrb
jne
xlat
inc
lret
or
adc
mov
test
mov
push
scas
movsb
mov
sub
imul
and
add
push
test
test
ljmp
enter
lcall
es
call
cmp
or
push
out
test
dec
test
dec
push
push
ror
mov
push
cmp
test
repnz
inc
popa
mov
and
inc
mov
scas
pushf
notb
shl
sub
cmp
fimull
adc
testl
lcall
cmpsl
push
dec
mov
push
and
call
or
or
fimull
loop
mov
push
mov
inc
sbb
or
test
mov
xor
pop
dec
lahf
xor
cli
xchg
into
jl
sub
dec
nop
sub
inc
cmc
inc
gs
sahf
push
out
xor
jnp,pt
jbe
scas
add
fimull
movsb
cmp
in
das
repnz
popa
mov
lods
pop
pop
sub
xlat
jl
mov
outsl
sbb
push
dec
adc
adc
fbstp
push
jo
jb
outsl
push
jmp
xor
pushf
xchg
rorl
add
mov
mov
or
cmp
dec
adc
cltd
ret
push
adc
mov
fnstenv
mov
addb
insb
xchg
mov
mull
and
cltd
push
inc
test
and
call
sub
flds
inc
pop
sub
xchg
mov
dec
loope
pop
and
mov
xchg
loope
outsb
add
push
out
mov
xchg
pop
idiv
ret
test
mov
out
jo
sub
es
jbe
jb
loopne
inc
popf
mov
xchg
orl
pop
xchg
mov
test
int
mov
jp
xor
lock
into
int
ret
inc
pop
xor
shl
push
imul
xchg
jae
mov
int
not
cmp
sbb
cld
orb
in
shl
inc
inc
adc
out
jbe
inc
cltd
dec
jae
mov
jmp
fs
out
and
scas
cmp
dec
and
push
pop
cwtl
test
mov
adc
cmpsl
ret
lret
mov
nop
dec
sarb
loop
push
rol
fsubs
jns
inc
insb
pusha
mov
mov
adcl
mov
mov
sbb
test
mov
fidivrs
adc
xchg
or
dec
pop
int
mov
fwait
int
test
adc
subb
push
imul
ss
test
and
lahf
lahf
cs
mov
pushf
add
add
push
in
adc
inc
loop
je
and
xchg
fadds
shll
push
cmp
mov
inc
test
cmpsb
lock
and
cmpsb
fldcw
loopne
ljmp
arpl
test
mov
push
clc
test
pop
lock
stc
dec
or
mov
shl
je
call
jne
or
pop
jge
insl
cmpsl
mov
fldcw
sub
sbb
push
push
mov
stc
push
loopne
mov
lock
sub
add
jo
xchg
in
add
loop
lea
icebp
adc
js
mov
sbb
icebp
rclb
mov
mov
fisubs
repz
in
push
imul
notl
out
xchg
pop
repz
call
outsl
lock
cs
push
inc
and
mov
sbb
push
stc
pop
xor
and
popf
ja
iret
add
icebp
movsl
cs
push
push
rorl
cmc
cmp
fisubl
test
lcall
loop
mov
imul
cs
cmp
xor
mov
mov
dec
dec
cltd
mov
out
ret
sub
ljmp
pusha
mul
jb
push
addr16
sbb
or
add
aad
or
in
adc
inc
and
and
iret
outsl
add
sbb
test
mov
fisubl
pop
lock
jp
xchg
inc
fldl
xchg
push
mov
dec
mov
jp
sbb
inc
pop
lea
jge
dec
out
fwait
inc
call
pushf
jbe
cmp
sbb
mov
xchg
cmpb
jmp
mov
or
push
or
jp
mov
pop
or
das
pop
sbb
orl
cmpsb
jle
loope
test
mov
sbb
mov
add
jmp
xor
cmpsb
mov
cmpl
dec
add
jne
mov
or
or
out
lods
mov
test
out
or
push
mov
scas
jg
mov
adc
inc
dec
in
push
lcall
mov
push
scas
ret
jle
subb
gs
repz
mov
pop
pop
sbb
clc
pop
jg
cmp
inc
pop
les
loopne
jecxz
inc
lret
outsl
cmc
pop
mov
ja
mov
xchg
inc
cmc
and
bound
lret
xor
mov
sbb
sbb
notl
push
imul
imul
xchg
int3
cmp
xor
lret
jo
movsb
mov
dec
test
mov
xchg
out
js
rcrl
and
scas
pop
das
std
test
out
push
cmc
cmp
movsb
insl
push
fbstp
xchg
rcl
xchg
lcall
sbb
sub
cld
scas
jg
orb
in
jge
xchg
and
pop
add
inc
pop
lds
mov
jmp
xchg
fs
aaa
sub
stc
push
ds
or
frstor
xor
int
add
jg
fstpl
imul
dec
and
subl
testl
sbb
negb
cld
shr
sub
inc
mov
jne
xchg
pop
imul
pop
inc
sub
shlb
xchg
aam
out
stc
fnsave
test
add
xchg
aaa
es
xchg
jno
inc
push
jle
pop
push
dec
pop
enter
and
out
in
mov
ja
int3
and
fmul
sbb
push
popa
js
dec
xchg
and
cmp
cmp
push
test
std
cmpsb
cmpsl
jge
add
je
int
pop
push
adc
mov
pop
movsl
pusha
ret
adc
cmc
iret
das
aad
jns
scas
dec
sub
ds
or
and
fisubl
sbbl
adc
jo
dec
mov
mov
into
mull
popf
xchg
mov
lcall
or
cmp
inc
sub
ljmp
jno
lret
push
push
std
in
popa
xchg
mov
cmc
pop
hlt
pop
ret
ljmp
xor
push
adc
xchg
nopl
or
mov
inc
lret
add
mov
sub
fdivrl
push
add
mov
rcl
dec
jbe
mov
test
mov
dec
lods
sbb
xor
push
mov
mov
sub
iret
mov
push
dec
cmp
jle
es
adc
xchg
inc
aas
pop
lahf
pusha
xchg
sub
repnz
inc
notl
cmp
xchg
xor
mov
fdivl
jno
mov
clc
add
sbb
in
xchg
jae
scas
add
mov
and
mov
sub
clc
sbb
mov
in
hlt
nop
jmp
ret
and
shrl
ss
mov
fistl
xor
lds
lds
xchg
int3
pop
daa
mov
inc
mov
test
loop
pop
sbbb
or
adc
mov
fisttpll
popa
inc
in
popf
pop
and
push
dec
lods
fs
call
test
pop
lds
insb
das
jg
add
xor
dec
std
mov
push
fwait
repz
out
cmc
loop
out
out
mov
ret
cmpsl
inc
push
inc
mov
dec
je
sti
mov
cld
mov
inc
repz
pop
stos
xor
stos
test
pop
cmp
popa
out
pop
and
rcll
mov
adc
adc
jle
es
push
or
inc
xchg
in
dec
mull
sahf
adc
in
loope
inc
dec
out
out
popa
jb
movsl
les
xor
stc
iret
xchg
xor
mov
les
jne
adc
xchg
add
movl
and
andl
push
pop
sbb
nop
iret
fiadds
rorb
pop
fsubrp
push
insl
push
jmp
xchg
in
popf
scas
mov
lea
push
adc
call
cmc
adcb
aad
arpl
mov
fsubp
and
fnstsw
sbbb
jle
pop
out
mov
xor
adc
lock
fstps
sub
push
mov
pop
nop
push
push
frstor
hlt
mov
stos
mov
dec
mov
maxps
arpl
adc
imul
xchg
sub
shrl
subl
push
push
in
or
dec
fistl
fwait
into
cmp
or
pop
xor
dec
ret
xchg
repnz
jo
mov
pushf
ljmp
lock
hlt
cltd
in
sbb
mov
cmpsb
push
ret
jno
icebp
mov
lds
fwait
mov
jae
sub
pop
add
es
filds
xchg
clc
push
lcall
sahf
dec
lods
bound
xchg
int
xor
add
arpl
aam
cltd
leave
jecxz
pop
adc
jb
aam
push
aaa
into
dec
dec
xlat
mov
jecxz
lea
add
jno
xor
loop
mov
cli
sub
and
cmp
or
push
pushf
std
pop
mov
hlt
je
movsl
dec
jae
xchg
lods
cmp
test
es
push
rorb
test
cmp
in
lock
repz
cmc
mov
xchg
sbb
pop
sbb
mov
data16
inc
jl
dec
sub
pop
lcall
dec
outsb
mov
decb
cmp
rcll
stos
or
or
push
out
mov
sbb
inc
lcall
outsb
mov
push
jg
in
jl
flds
cltd
sbb
cld
inc
cmp
hlt
adc
push
xchg
sbb
dec
cmc
sub
outsl
pusha
ljmp
adcl
dec
mov
push
xchg
adc
push
fbld
scas
fstpl
arpl
mov
sahf
or
mov
mov
outsl
ds
out
into
jnp
mov
add
push
rclb
mov
sub
cs
popa
sbb
shlb
decb
int
xchg
mov
sub
mov
mov
lds
pop
cmc
cmpsb
add
pop
stos
sub
inc
cmp
insl
dec
pop
inc
insb
or
and
aaa
sbb
mov
pop
sub
leave
mov
cmc
call
pushl
xchg
cmp
ret
test
aam
gs
or
cmpsl
ja
scas
sahf
push
pop
jo
inc
mov
insl
xchg
sbb
jge
cmp
adc
xchg
pop
mov
sbb
sti
sbb
insl
rcr
jo
jbe
cmp
jecxz
push
xchg
mov
lcall
movl
nop
mov
ds
pushf
push
fnstenv
xchg
adc
das
xor
xor
add
lds
loopne
lds
pop
jmp
xor
sub
insb
mov
jg
sub
sbb
das
ds
pop
mov
inc
jns
mov
pop
mov
nop
imul
repnz
mov
xchg
add
stc
sbb
sti
fcoms
mov
add
pop
mov
jae
call
xchg
cs
or
mov
mov
sub
jg
jmp
testl
mov
push
cmp
nop
pop
xchg
dec
adc
xor
dec
arpl
dec
mov
dec
loop
mov
push
dec
out
iret
ficompl
imul
cmc
mov
jp
pop
mov
xchg
fisttpl
std
push
push
ret
data16
and
sub
ds
or
hlt
pusha
xor
sbb
dec
cltd
jae
ret
xchg
add
add
or
cwtl
das
inc
lea
or
push
int3
xchg
mov
mov
lock
sub
call
sbb
mov
jge
mov
in
inc
data16
stos
jmp
or
leave
lock
lock
adc
sub
movsl
cmp
shrb
leave
mov
add
jb
imul
inc
in
inc
sbb
mov
in
sub
mov
lret
nop
dec
lcall
sub
les
pop
test
add
lret
data16
cwtl
xlat
sahf
imul
jo
fists
or
push
jne
mov
cmp
fisubs
dec
and
neg
stos
push
pop
inc
stos
push
pop
cmp
dec
push
xchg
inc
xor
daa
push
test
call
cltd
scas
inc
in
add
pop
call
dec
push
mov
outsl
stos
call
sub
inc
mov
jmp
out
cmpsl
lahf
cmp
jecxz
loope
mov
aas
xchg
imul
xchg
cmp
cltd
inc
mov
mov
cmpsl
repz
sub
and
negb
add
ret
xor
inc
push
js
lock
jmp
pop
das
cmp
jo
pop
push
loop
sbb
jle
shl
sarb
push
shr
xor
lds
or
cli
dec
push
out
xor
pop
jmp
mov
ljmp
xor
sbb
add
data16
xor
mov
sbb
outsb
cwtl
pop
popa
cmp
adc
xchg
fsubrp
push
subl
xchg
loopne
mov
loopne
insl
add
popa
clc
test
sbb
rcll
std
hlt
pop
pusha
aaa
or
pusha
testl
jle
adc
cs
sbb
cmc
je
aas
push
inc
out
sahf
xchg
lret
aam
cmpsl
sbb
mov
sbb
add
inc
fistpll
sub
into
push
mov
enter
ret
lret
divb
scas
and
lret
fst
jno
test
ja
push
gs
and
jb
jp
inc
loopne
xchg
dec
jb
pop
call
gs
arpl
adc
stc
or
pop
add
lret
aam
add
into
and
sub
in
sub
sub
mov
push
add
xlat
lods
inc
sbb
jb
out
xchg
ds
ret
push
mov
push
xor
adc
push
xor
rolb
inc
push
mov
xchg
sub
imul
and
mov
xor
clc
mov
aaa
outsl
xchg
add
jecxz
jo
addl
pusha
xlat
sbb
jno
jle
inc
mov
ret
movsb
fsubl
xor
push
fs
add
inc
shll
xchg
lods
or
lods
inc
inc
cmp
jg
fisttpl
fstl
fsubr
xchg
add
sub
adc
push
and
jecxz
cmp
cmpsb
test
jno
jb
cmp
sbb
ljmp
cmp
loop
push
and
mov
pop
in
std
push
cli
push
or
cmp
jmp
xchg
dec
loope
ljmp
movsl
add
aas
jns
jge
push
push
mov
in
scas
inc
ja
and
in
push
stos
sbb
and
lods
push
push
loope
in
jp
loope
push
mov
lods
lcall
mov
or
xchg
mov
popa
test
in
xchg
ds
inc
cmpsl
popa
sbb
cltd
and
data16
and
pop
fnstcw
cltd
lods
in
notl
int3
jl
xchg
xor
lea
iret
pop
sub
or
mov
stos
xor
sbb
ret
insb
out
sbb
add
outsb
ffree
loop
ljmp
inc
inc
mov
jbe
sub
mov
jg
mov
cmc
lods
outsl
sub
repnz
fiadds
xor
or
testl
dec
es
arpl
jne
ret
ud2
adc
daa
and
ss
lret
dec
loope
sbb
push
pop
dec
mov
aaa
adc
aam
mov
int3
xor
enter
lahf
sbb
lret
out
pop
punpckhbw
add
call
and
adc
out
bound
jne
jl
cmc
mov
jne
lods
inc
xchg
into
arpl
jmp
repz
insl
or
mov
fildl
or
out
enter
stc
add
sub
and
mov
std
push
push
sahf
and
inc
push
insb
out
rorl
ljmp
mov
dec
xchg
mov
or
daa
or
sub
adc
mov
test
mov
rorb
xor
enter
rclb
int3
mov
in
js
sub
add
mov
mov
ret
addr16
mov
mov
xlat
inc
dec
mov
adc
loop
sbb
mov
jnp
inc
stc
dec
pop
movsb
xor
xchg
mov
jns
ljmp
sub
lock
xor
into
mov
js
les
test
xor
test
pop
pop
sahf
hlt
add
sub
fst
js
fdivs
sbb
fmul
shrl
and
pop
push
jbe
fsubp
mov
add
rcrb
fcompl
stos
ret
and
xchg
cwtl
leave
pop
mov
xchg
sub
adc
mov
int
pop
mov
sub
pop
out
inc
dec
lea
cmp
dec
mov
xor
stos
jbe
fdivrl
push
cmp
pop
femms
jno
inc
outsb
aad
push
or
out
lock
jp
pop
lods
mov
in
adc
mov
mov
and
mov
push
stc
fsubrs
cmpsb
shll
adc
mov
adc
bound
jns
pushf
imul
pushf
mov
or
repnz
inc
mov
lds
iret
dec
lcall
iret
ret
add
mov
sbb
xlat
push
sbb
das
scas
shl
addb
andb
jae
aaa
scas
dec
inc
pusha
jns
ljmp
das
in
push
popf
add
mov
arpl
push
or
xor
shr
jne
pop
add
sbb
es
in
test
pop
cmpsb
cmp
or
jecxz
js
rorb
jb
stc
sbb
data16
je
adc
mov
repz
lds
mov
mov
mov
push
out
fstps
or
cmpsl
xor
pop
out
pusha
sub
pop
repnz
mov
fnstsw
mov
inc
fld
pop
xchg
je
loope
adcb
inc
pushf
dec
nop
push
stc
mov
and
xor
jp
sub
jb
jp
push
push
fisubs
into
sbb
icebp
sbb
mov
cli
or
push
mov
xchg
add
pop
mov
fisubs
dec
inc
mov
rcrb
aad
adc
pop
mov
insb
cmc
jne
cmp
push
and
test
xchg
adc
test
mov
insb
pusha
fldt
jg
std
push
jp
sbbb
test
xor
cmc
incl
dec
int
adc
push
aas
pop
xchg
fwait
loopne
and
ret
sti
int
data16
nop
add
fwait
cmpsb
lcall
popa
loope
out
test
add
cld
mov
jae
sbb
cmpl
mov
inc
adc
cltd
xor
add
sbb
pop
cmpsl
nop
jb
aad
test
jmp
shlb
pop
in
mov
mov
jp
popf
gs
movsb
icebp
adc
cmp
jae
jne
push
jmp
xor
pusha
fwait
mov
les
testl
ds
lret
mov
xchg
sbb
dec
cmpl
es
mov
push
lcall
int3
sbbl
icebp
dec
fcmovnb
test
in
mov
pop
sub
call
pushf
sub
shlb
mov
in
and
iret
pop
int
lret
out
loop
aaa
movsl
shl
push
xor
in
pop
mov
xor
pop
sahf
fldenv
pop
cmpsb
mov
jnp
xlat
cmp
cmp
cmc
movsb
pop
cmpsl
mov
rcrb
inc
cmpsb
mov
push
imul
aad
xchg
sbb
aad
pop
xlat
inc
sub
scas
jmp
stc
dec
mov
cmp
adc
mov
mov
mov
lret
inc
lret
roll
or
int3
mov
and
std
or
ja
enter
std
das
jmp
inc
sub
adc
out
mov
jl
in
pop
xor
inc
jns
and
push
or
hlt
sbb
xor
shll
leave
fnstenv
jb
pushl
insl
jl
push
pop
pop
mov
mov
into
push
les
or
dec
add
jge
rcrl
mov
mov
in
cmpsb
mov
adc
mov
dec
jae
outsb
sub
pop
push
pop
inc
gs
xor
inc
fwait
inc
je
out
add
dec
pop
sbb
cmp
insl
jnp
mov
mov
jnp
insb
pusha
fistpl
add
jg
jp
outsl
outsb
nop
daa
mov
or
xchg
dec
aas
cmp
dec
sbb
add
or
in
xchg
loop
dec
inc
add
dec
call
and
jp
push
push
insl
mov
cwtl
addr16
sub
xlat
repz
or
add
pop
lds
fwait
aad
add
mov
cmp
cmp
mov
xor
xchg
push
repz
sahf
xor
mov
mov
shlb
aaa
loop
pop
stos
xor
mov
not
out
add
dec
lahf
xor
loope
pusha
jmp
pusha
adc
inc
lcall
dec
loope
and
popa
test
in
ret
fstl
fs
xchg
nop
aas
dec
jp
or
stos
adc
sbb
and
sbb
and
lcall
fadds
add
and
xchg
filds
imul
jp
sub
in
xor
xor
lcall
fstpt
aam
lds
cwtl
divb
xchg
lea
pop
xor
scas
sbb
mov
adc
mov
out
fisttpll
jp
lods
jl
mov
fidivl
gs
cwtl
pop
or
cmp
push
xorb
inc
mov
xlat
and
ret
inc
fisubrs
sar
mov
inc
roll
jo
iret
push
sbb
pusha
stos
xor
fisubrl
loopne
sbb
dec
loope
cmp
shr
jle
xchg
mov
clc
movsl
cmp
paddd
xchg
pop
mov
bnd
or
inc
je
sbb
pop
rorb
mov
xchg
mov
or
push
xchg
or
out
xchg
dec
push
call
int
jp
xchg
add
and
sbb
and
mov
notl
xor
mov
or
cwtl
xor
cmpps
cmpl
push
stos
mov
inc
mov
nop
addb
cmp
sahf
mov
or
aas
push
and
aas
push
nop
pushf
sar
sahf
and
imul
sub
mov
movsl
dec
add
sbb
out
hlt
mov
mov
dec
cmp
pop
lret
bound
in
jb
cwtl
scas
push
sbb
int
es
popf
pop
clc
adcl
and
int
jl
push
bound
js
out
notb
cmp
stos
repnz
rcrw
xor
dec
insb
jle
push
xlat
dec
jns
push
stos
push
addl
mov
call
repz
xchg
sub
jl
arpl
add
fimull
add
mov
mov
mov
and
mov
mov
inc
into
mov
and
adc
and
pop
sub
xchg
sub
aam
cmp
loopne
xor
addr16
push
push
jle
mov
mov
dec
and
out
icebp
dec
aam
sbb
dec
pop
lods
jge
mov
mov
loopne
in
mov
loop
xchg
cmp
test
jmp
jecxz
cltd
repnz
data16
push
xchg
cmpsb
leave
mov
cmc
or
sti
faddl
icebp
in
and
rcrl
pop
mov
sub
and
xchg
mov
cmp
test
fs
insl
stc
and
movsl
add
mov
imul
pop
mov
and
mov
xor
fldenv
icebp
inc
outsl
mov
test
inc
popa
movsl
cld
push
add
mov
stos
jno
rcrl
push
test
stos
pop
cltd
pop
lods
sbb
and
add
ds
repz
xchg
cs
pop
lea
cmp
cmp
pusha
cmp
inc
outsb
inc
sub
orl
mov
sbb
or
jo
arpl
js
adcb
out
mov
pop
jae
in
insl
add
in
inc
ja
mov
popa
xor
sbb
loope
shll
sbb
jl
push
push
in
daa
or
mov
insb
mov
jp
ret
sub
mov
loope
jg
cmpsb
sbb
mov
jecxz
insb
test
jmp
in
add
push
jg
sub
icebp
outsl
repz
jno
das
lret
mov
ljmp
jmp
arpl
mov
mov
push
imul
mov
jnp
jnp
jecxz
pushf
out
dec
mov
loop
mov
rcr
mov
mov
mov
sub
clc
mov
shr
dec
gs
inc
pop
jle
inc
gs
lahf
loope
fstpl
aad
mov
sbb
dec
mov
cmp
scas
call
icebp
stos
sahf
sub
in
xor
cltd
jnp
stos
sbb
imul
add
inc
ljmp
sbb
imul
out
sti
or
iret
test
insl
xchg
ret
hlt
iret
aam
sub
hlt
scas
push
adc
imul
xchg
test
aad
mov
out
mov
sub
cltd
push
or
jne
sbb
xchg
mov
pop
pop
xchg
jecxz
cmp
ds
movsb
lock
jle
cwtl
aad
or
jbe
sub
cmpsl
add
and
pop
cmp
lods
bound
mov
mov
xor
mov
popf
jo
cmp
stc
loop
aas
mov
jecxz
xlat
clc
mov
cmpsl
insl
leave
or
stos
and
lret
xchg
jbe
mov
mov
xor
dec
dec
add
jge
adc
mov
sub
and
xchg
lret
es
adc
addr16
jmp
or
ret
jo
cmp
fwait
leave
shrl
lret
push
outsl
add
imul
push
and
sbb
das
leave
jae
pop
insb
adc
pop
mov
jle
das
mov
mov
insb
imul
xchg
push
aas
rorl
jp
pop
outsl
push
call
int
popf
pop
insb
add
mov
xlat
dec
imul
cmpsl
add
dec
mov
pop
add
aad
mov
xchg
dec
mov
sbb
sub
cmp
push
mov
cmp
jno
or
and
inc
jbe
or
je
mov
jle
push
pop
cmpsb
popl
je
icebp
mov
pop
test
cmp
shrl
in
pop
mov
add
adc
and
dec
pop
pop
cmc
or
dec
dec
lcall
in
add
xor
stos
cmpsl
in
add
mov
das
mov
cmp
iret
jecxz
lcall
pop
jl
cmp
mov
xor
mov
xchg
sbb
sar
test
scas
push
movsb
out
pop
pushl
or
insl
mov
mov
adc
sbb
ret
shll
imul
pop
es
sbb
fbstp
lods
sbb
loop
xor
sbbl
mov
sbb
lret
push
pop
or
push
xor
pop
jo
clc
cs
loop
outsb
push
setl
icebp
sbb
out
push
outsl
cs
movsl
lcall
xchg
mov
jg
loop
xor
lods
jp
je
test
fidivrl
mov
dec
mov
jo
in
sahf
mov
loop
jge
ljmp
cs
xchg
sbb
std
xchg
test
add
das
cwtl
xchg
adcl
cld
push
repz
call
mov
test
jge
cmpsb
add
pop
sbb
fsubl
inc
data16
subb
cmpb
adc
in
push
test
sub
test
scas
add
mov
push
push
sbb
stos
push
jno
xchg
inc
push
push
or
shrb
jge
and
mov
sbb
iret
pushf
cmp
pop
repz
bound
xchg
adc
mov
adc
stos
inc
es
inc
sub
test
pop
or
int3
fucomip
fs
imul
push
sbb
or
out
cmp
add
dec
mov
ljmp
repnz
fsub
push
dec
arpl
sbb
and
pop
out
dec
cmp
stos
dec
mov
call
roll
mov
jae
ss
mov
mov
dec
aam
xchg
in
jbe
scas
jp
mov
xchg
int
push
fcomps
sbb
mov
loop
or
sub
cmp
mov
xor
mov
push
xor
push
addl
sub
mov
ljmp
mov
fbstp
shll
dec
add
push
jmp
pop
aas
icebp
mov
jmp
mov
cmp
sbb
fcomip
mov
les
sub
adc
adc
mov
jmp
or
jb
cli
imul
test
dec
pop
or
pusha
shll
xacquire
mov
fisubrs
adc
xchg
sbb
jecxz
and
into
jb
jno
push
call
imul
xchg
jbe
or
fadd
mov
lret
mov
sbb
mov
int3
das
lock
scas
push
push
ljmp
jno
ret
loopnew
mov
stc
jg
fistl
inc
jl
mov
mov
cmp
ljmp
movsb
aas
aad
xchg
xchg
cmpsb
cmc
push
fists
int
jmp
or
ds
sbb
dec
stos
add
lret
shll
aad
lods
add
cmpsl
xor
fiaddl
ljmp
mov
push
dec
rolb
popf
std
insl
xchg
xor
loope
jbe
movsl
mov
loope
stos
rcrl
sahf
xor
ds
fwait
jmp
test
push
or
mov
es
mov
mov
push
xlat
outsb
cmp
sbb
std
aam
mov
in
push
in
pop
fsubs
stc
cmp
scas
adcl
sub
test
mov
mov
add
mov
xlat
pop
pop
dec
scas
push
jmp
sbb
insl
jl
dec
jmp
mov
sub
pop
adc
lds
pusha
mov
jo
es
xlat
imul
add
stos
mov
cmpsl
lds
mov
xchg
insb
inc
pusha
xchg
push
mov
inc
stc
test
lret
sarl
stos
rorb
lahf
test
fnsave
adc
xchg
scas
jno
pop
mov
add
cli
das
repnz
pushl
test
shrb
call
push
jb
jmp
aam
xchg
sub
jno
sub
imul
jo
aas
pop
rep
push
jmp
push
sar
lea
xchg
inc
sbb
bound
into
cmp
sub
sti
shlb
xor
inc
mov
out
test
jae
enter
mov
xor
or
ljmp
jno
mov
xchg
notl
movb
cld
dec
pop
daa
negb
push
push
test
sbb
xor
mov
or
inc
and
aad
arpl
xchg
scas
sbb
sub
push
push
sub
add
or
ret
rorl
pop
dec
int
mov
jae
repnz
inc
pop
sbb
pop
jo,pn
and
fildll
stos
inc
and
jg
jbe
rcrl
in
insl
mov
fmuls
push
cmp
scas
mov
stc
shll
pop
mov
adc
into
rcrl
movsl
jb,pn
cmpsb
lret
adc
xlat
lods
add
push
lahf
stos
aas
movsl
mov
fs
mov
cmc
arpl
test
int
mov
fstp
in
pop
lods
mov
adc
mov
adc
mov
inc
fs
bound
out
sbb
sbb
aad
xchg
cmp
xchg
fcomip
in
stos
add
jecxz
dec
mov
pop
mov
mov
sub
test
dec
stos
in
add
adcb
mov
adcb
imul
outsb
inc
pop
xchg
cmp
pop
imul
or
mov
mov
loopne
shr
push
rclb
pusha
femms
jecxz
scas
dec
daa
in
or
sub
repz
xchg
mov
pop
ficoms
jne
ret
mov
leave
cmp
jl
jo
pop
adc
push
adc
jnp
shlb
addb
scas
dec
pop
inc
adc
in
call
scas
pop
cmpsl
mov
fnstenv
out
mov
fidivl
hlt
add
xchg
xor
xor
and
inc
lret
mov
push
dec
add
cmp
lods
dec
and
icebp
loopne
int
and
call
sbb
or
add
cmp
faddl
int3
jo
inc
gs
xor
mov
jmp
mov
mov
xor
pop
ja
hlt
sbb
aad
or
push
jecxz
dec
adc
cmp
loop
xchg
jle
mov
data16
lcall
in
test
sub
jcxz
xchg
jbe
outsl
daa
or
pop
not
lahf
lock
repnz
pop
out
lahf
sbb
nop
inc
outsb
in
jl
mov
fs
cmp
lcall
jne
cld
xchg
push
insb
push
mov
in
ljmpw
or
jo
cmpsb
lock
pop
and
lahf
sub
out
lods
popf
pusha
lods
mov
je
cs
pop
jno
cld
push
bound
sub
push
xchg
scas
jp
jns
xor
out
fucomip
aad
sbb
outsb
adcl
mov
ret
lods
mov
pop
cmp
push
cmp
xor
shlb
jno
mov
xchg
xchg
and
sub
mov
push
cmpb
insb
push
rorb
adc
loop
lock
add
push
mov
mov
insb
lahf
mov
movsl
adc
jns
rol
pop
sbb
je
add
pop
xor
cmp
fbstp
jg
test
das
jl
pushf
outsb
andb
sub
test
xchg
adc
inc
mov
and
lock
daa
ret
fucomip
ja
dec
bound
jae
inc
xchg
and
cmp
pop
test
push
and
daa
xor
inc
gs
dec
mov
xor
xchg
xchg
repz
jns
stos
xchg
mov
cs
daa
inc
jo
sbb
dec
add
xchg
dec
mov
mov
mov
insb
mov
clc
aaa
std
sub
idivl
jae
add
outsb
jo
cmc
lods
inc
arpl
jno
ret
sub
xchg
pop
add
incl
imul
fldenv
sarb
dec
and
cmc
adcl
inc
sbb
pop
pop
out
push
jno
sub
shrl
mov
push
call
test
jg
inc
sbb
jle
lret
sub
jle
in
jnp
cmp
test
inc
arpl
mov
gs
mov
mov
push
pushf
fldl2t
mov
jb
jl
jns
sbb
mov
and
jbe
mov
sahf
into
pushf
sbb
cmp
addl
test
sub
std
mov
mov
dec
das
mov
lock
ljmp
pusha
or
rclb
push
sbb
jne
and
ret
mov
jmp
int
mov
xchg
aas
lds
mov
sub
ds
or
cmp
mov
jp
mov
lahf
jno
add
and
pop
mov
adc
daa
fs
stos
je
add
imul
xor
movsl
inc
jecxz
mov
mov
icebp
mov
xor
xchg
jae
sbb
push
ja
cmp
inc
xchg
inc
jg
mov
ljmp
inc
cmp
jecxz
and
mov
jle
aam
shlb
fldcw
jecxz
addr16
mov
adc
jmp
pop
cmp
fidivrs
cld
in
addr16
std
adc
movsb
stc
repz
mov
js
insl
jbe
sbb
push
notl
imul
cmpsb
loop
or
icebp
mov
xchg
pusha
sbb
sahf
mov
push
cmp
lods
pop
sub
push
icebp
aad
repz
cltd
das
mov
or
pop
out
das
stos
dec
data16
dec
mov
gs
in
xchg
xor
inc
shrb
mov
jmp
pop
loopne
jae
shr
push
xchg
loopne
loopne
cmp
add
fwait
push
jmp
jmp
mov
cld
xchg
incb
in
push
shl
out
jb
dec
cmp
in
push
dec
lahf
dec
lahf
int
xor
fcmovne
jo
inc
jge
hlt
push
mov
inc
mov
mov
cwtl
imul
stc
mov
clc
js
adc
sub
leave
int3
test
xchg
test
cmp
xor
sbb
lahf
adc
cmpsl
or
push
fwait
xor
out
hlt
addr16
pop
iret
pop
cmp
push
mov
mov
fwait
inc
fmulp
pop
or
cmp
mov
loope
or
add
es
jb
inc
push
ficoms
and
ret
int3
dec
out
pop
call
sbb
push
jo
lcall
adc
push
sahf
cmp
pop
cltd
cs
sahf
xor
mov
shrl
lods
xor
pusha
lods
add
imul
add
js
loopne
cwtl
clc
pop
push
pushf
jbe
dec
pop
dec
stos
pop
orl
add
jmp
out
xor
pop
and
popf
mov
js
inc
mov
lods
loope
pop
cmp
ss
push
add
roll
cmpsl
xlat
repz
cmpsb
mov
mov
mov
lea
jb
jge
and
scas
repnz
sbb
push
dec
add
in
sahf
clc
movsl
push
movsl
out
push
jmp
cmp
ljmp
out
add
pop
adcb
adc
cmc
sbb
loope
and
sbb
test
fmuls
aam
imul
lret
dec
das
dec
dec
shll
dec
pop
lock
test
lock
leave
ss
jp
js
loop
or
fs
add
add
xor
xchg
jns
mov
cltd
cmp
inc
jge
pop
scas
insl
add
jge
loop
fists
popf
sahf
rcl
mov
inc
pop
xchg
movsb
andl
pop
sub
sbb
mov
sbb
pop
push
add
mov
pop
xchg
xchg
cmp
orl
or
cmpsb
sub
popa
scas
std
xor
xchg
push
mov
jmp
xor
lods
push
aad
add
mov
push
or
adc
mov
into
iret
ljmp
and
flds
jl
cmp
adc
dec
lcall
loope
inc
add
daa
shll
shll
test
pop
jle
imul
push
sti
push
popf
mov
repz
pop
loope
negl
mov
push
push
lcall
cwtl
xorl
cs
fs
stos
xchg
das
fs
mov
pop
loopne
pusha
ret
cld
xchg
pop
fstpl
in
or
jg
outsb
mov
inc
js
aam
lods
flds
movsb
xchg
xlat
pop
push
jae
stos
rcrl
pusha
cli
fwait
sti
leave
pop
daa
shll
mov
sub
scas
pop
mov
xor
imul
sbb
jnp
out
les
mov
das
xlat
xchg
jb
lods
jge
jecxz
mov
out
mov
push
pop
stc
add
mov
mov
cmc
xchg
add
lcall
sub
pop
sub
xor
mov
scas
pushf
in
push
jge
push
add
dec
fistpl
inc
xchg
or
mov
lcall
in
xchg
imul
add
sbb
adcl
fcmovnb
mov
adc
xchg
sub
daa
mov
sub
jbe
mov
sbb
dec
mov
inc
sub
pop
xor
repnz
mov
or
clc
mov
arpl
mov
fidivrs
jb
xor
add
dec
mov
les
idivb
mov
sbb
jmp
xchg
repz
dec
dec
nop
jp
push
lods
lods
and
and
inc
push
push
adc
aaa
adc
inc
add
andb
cmpsb
mov
mov
sarb
out
mov
dec
loopne
add
jl
and
fistps
mov
out
enter
aad
aam
adc
mov
jle
out
maxps
es
xor
jmp
mov
mov
iret
mov
enter
scas
jecxz
dec
rorb
das
je
shlb
lods
scas
dec
mov
data16
jo
jo
xchg
cmp
sub
pop
jae
dec
xchg
shrb
xorb
int3
test
test
out
test
fs
cmpsl
rorb
and
push
je
lods
int
popf
lods
dec
push
lods
mov
rcrl
cmpsl
cmp
cmp
jbe
inc
cli
push
jle
jp
out
sbb
dec
subb
out
lock
and
repz
adc
xor
add
pop
std
mov
dec
lock
jle
dec
in
std
inc
or
cwtl
stc
cmp
mov
test
js
js
aam
loopne
repnz
push
jns
aad
add
mov
dec
cmp
inc
ficompl
xchg
nop
inc
pop
adc
mov
jg
and
push
bound
fdiv
dec
mov
xor
and
mov
popa
ficompl
lods
mov
imul
push
aas
mov
ret
xor
bound
pushf
sub
add
sub
mov
add
js
cs
mov
pop
test
lods
dec
pop
xor
movsb
mov
xchg
call
out
jno
pop
in
adc
cmc
sbb
or
sbb
mov
sbb
xchg
add
shrb
dec
aam
mov
pop
add
mul
xchg
and
pop
test
push
sarl
scas
scas
out
loopne
lods
insb
ja
or
mov
mov
push
ret
pop
push
int3
mov
xchg
enter
imul
inc
scas
cwtl
sbb
jno
jb
aam
test
add
pop
gs
jecxz
add
ljmp
inc
push
fwait
mov
je
out
pop
repnz
xchg
push
push
add
hlt
xor
pop
pop
mov
xor
mov
inc
out
aam
and
fdivs
or
outsl
test
jge
and
dec
sahf
fwait
testb
repnz
pop
outsb
add
shlb
les
mov
call
mov
xchg
es
hlt
push
jns
iret
stos
aaa
addr16
sbb
mov
cmpsl
inc
xlat
aam
aaa
divl
mov
add
dec
or
data16
pop
divl
pop
inc
sub
ficompl
addr16
mov
xor
mov
inc
fadds
aam
loop
mov
pop
hlt
sbb
mov
push
addl
fsubr
out
rorl
shrl
scas
cmpsl
mov
jb
cli
pusha
push
popa
sbb
jg
cli
mov
pop
ret
pop
dec
rclb
invlpg
cltd
jp
or
movsb
jmp
out
push
imul
inc
bound
cmpsl
jecxz
mov
mov
adc
outsl
loop
mov
test
and
xchg
stc
inc
repz
push
outsb
fcoms
xchg
xor
ja
in
inc
repz
dec
rorb
test
xchg
ds
lret
sub
js
into
in
sar
sar
dec
aam
sti
sbb
push
jnp
pop
jbe
mov
cwtl
xor
push
pop
fimull
xchg
pop
mov
dec
test
cld
bound
andl
rorb
stos
pop
lock
js
mov
cli
jne
adc
leave
xchg
dec
ja
je
ss
in
inc
adc
fbld
nop
xchg
add
in
cmp
jb
mov
pop
mov
fstl
out
rol
add
rdtsc
lret
or
and
push
jl
test
imul
out
and
and
mov
jnp
pop
add
xor
cmp
mov
call
dec
loope
aas
sti
nop
push
fnsave
int3
lock
adc
inc
cmc
outsl
xchg
imul
mov
xor
xor
pushf
dec
mov
mov
shrb
pusha
sub
adc
repz
lods
and
fucom
mov
stos
push
jo
cmp
mov
bound
cwtl
or
loop
mov
pop
insl
fcmovne
lods
jo
cmpb
cltd
arpl
push
jmp
inc
stos
cmpsb
sub
scas
imul
popa
and
call
jbe
lret
dec
pop
push
pop
lock
les
xchg
sbb
cltd
cwtl
imul
xor
dec
adc
aaa
push
sahf
push
cli
push
push
xchg
scas
xor
popf
jo
pushf
and
dec
cmpsb
test
push
cmpsl
leave
pop
xchg
pop
pop
movsl
out
cmp
into
push
outsb
inc
fsubs
and
fcoms
add
jbe
xchg
movsb
loope
push
pushf
adc
mov
mov
xor
xchg
popa
fisttpll
mov
fildll
repnz
pop
cld
sub
mov
xor
pop
sbb
pushf
fsubp
arpl
cwtl
mov
mov
loopne
jmp
dec
fdiv
mov
dec
daa
cmp
adc
aad
xorb
mov
mov
fwait
nop
jle
jne
loopne
lret
adc
inc
dec
push
push
jl
repnz
jne
xchg
xchg
ds
adc
dec
pop
decb
clc
inc
negl
push
rcl
inc
sbb
das
dec
jb
jbe
test
inc
or
sbb
mov
into
loope
pop
das
pop
movsb
repz
xor
pop
pop
add
mov
xor
sub
sahf
mov
xchg
rclb
jp
fisttpl
adc
mov
js
cmp
inc
inc
lea
data16
mov
je
mov
lahf
pusha
xchg
jge
cmp
enter
cmp
push
jl
sub
dec
aad
pmulhw
adc
imul
jp
unpckhps
pop
je
out
mov
repnz
sahf
cld
cmp
adc
ja
and
test
fstpl
inc
jnp
push
or
repnz
jno
cmp
nop
rcrl
xor
fbld
stc
sbb
jle
mov
lods
inc
mov
sti
mov
psrlq
jge
lds
dec
add
leave
mov
out
xchg
and
orps
mov
scas
movsb
mov
xchg
cmpb
bound
jmp
pop
into
rcrb
mov
push
xchg
dec
ret
pushf
gs
in
jns
jmp
enter
sub
jae
and
push
xchg
je
in
inc
push
cltd
shrl
jmp
in
push
mov
cmc
and
scas
sbb
data16
mov
arpl
es
or
mov
mov
leave
loope
sub
jbe
das
or
cmp
xchg
sbb
cmp
xchg
pop
mov
data16
stc
je
push
movsl
push
movsl
fcmovbe
jp
repz
xlat
xorb
xor
mov
lods
inc
fsts
xchg
push
movsl
mov
ficoms
cmp
cmp
add
js
xchg
mov
in
das
xchg
jo
loopne
cmp
sbb
shrb
rcr
daa
fistl
mov
leave
jo
mov
shrb
dec
pusha
es
mov
popfw
xor
hlt
and
fdivrl
frstor
push
push
jmp
hlt
mov
mov
pusha
rorb
out
and
fdivrs
mov
frstor
scas
int3
xchg
dec
mov
or
xor
jbe
cwtl
das
pop
mov
sub
dec
xchg
fdivr
ljmp
mov
cmp
lret
ja
adc
fdivrl
stc
mov
shlb
dec
dec
adc
pop
cmp
dec
and
iret
xor
fisttps
in
movntq
out
mov
sub
add
inc
inc
mov
xchg
mov
movsl
js
mov
fisttps
stos
push
mov
mov
jno
lods
xchg
sbbb
ja
popf
sub
call
cmp
cmpsl
push
cmp
aad
sahf
mov
aam
outsb
loope
push
out
pop
shl
insb
xlat
les
mov
jb
enter
sbbb
loop
push
insb
push
cmp
aaa
fidivl
test
lods
xor
pop
dec
jnp
lret
dec
pop
iret
sbb
js
and
mov
rcr
ret
fldt
pusha
iret
xchg
push
push
mov
inc
pusha
loope
mov
lret
jl
into
loope
sub
inc
outsl
inc
rcrl
sbb
jmp
ljmp
jno
mov
or
sub
data16
lods
inc
out
in
dec
and
push
xor
test
test
loopne
test
jg
sarl
pop
add
pop
aam
or
xchg
xchg
les
test
ret
push
adc
and
adc
jnp
jns
sahf
add
fdivrs
ds
mov
insl
les
push
out
outsl
daa
inc
jge
test
out
sub
mov
iret
rorb
jb
jmp
xor
jmp
stc
xchg
mov
pushw
movsl
mov
rorl
adc
int3
adc
sbb
add
cmp
push
loopne
call
inc
std
mov
shrb
pop
inc
push
cmp
mov
pop
sarl
cmc
inc
or
jle
pop
notl
jl
xchg
xor
sub
int3
rorb
add
adc
rolb
fwait
mov
push
divb
out
call
mov
movzbl
jge
pushf
xor
loopne
pop
xchg
mov
in
inc
jmp
push
sbb
mov
imul
scas
cmpl
inc
call
test
inc
outsb
sub
mov
in
ss
inc
shrl
and
repz
xchg
stos
call
xchg
in
sub
cld
out
inc
mov
lods
in
sbb
mov
pop
repz
loopne
push
push
jp,pt
pop
mov
mov
inc
es
fbld
cmp
cmp
dec
divb
add
jb
std
jp
cmpsl
out
push
sbb
jne
cwtl
pop
jg
mov
cmpb
cli
arpl
pop
mov
fldenv
enter
mov
lea
stos
inc
pop
outsl
das
lds
and
pop
repz
push
hlt
aas
add
bound
leave
jae
sub
push
xlat
int
rclb
xchg
push
xor
gs
out
fdiv
and
cld
inc
leave
jne
jle
lods
push
jne
fistpl
push
jns
cwtl
ljmp
insb
cmpsl
push
cmp
repnz
outsb
out
mov
cmp
mov
push
cwtl
adcl
lds
dec
aam
vaddps
ret
test
rcr
repz
cmpsl
inc
mov
testb
mov
fwait
mov
test
adc
inc
stos
repnz
je
mov
stos
pop
mov
or
mov
out
loopne
adc
xor
xor
adc
jno
fildll
lods
imul
dec
jmp
jbe
jecxz
imul
dec
std
and
jb
push
xchg
out
decb
sub
mov
mov
inc
cltd
cmpsb
mov
and
enter
cwtl
sub
std
mov
ficoms
cmp
sahf
push
punpcklwd
test
fnsave
imul
iret
fildl
xchg
leave
iret
xchg
cld
jne
sbb
cmp
lods
dec
mov
push
pop
vpcmpgtb
pop
sti
mov
fwait
jmp
icebp
ja
cmpsl
test
loopne
inc
pop
cld
adc
movsb
es
mov
insl
adc
shlb
pushf
xlat
movl
lods
push
out
inc
lret
pusha
icebp
xor
lds
sub
or
rcrb
fsubr
sub
or
cmp
lret
in
call
mov
fidivrs
in
cmp
mov
dec
add
mov
mov
clc
inc
mov
mov
rclb
pop
push
gs
adc
das
cmp
xchg
fwait
stos
xor
lret
icebp
and
daa
push
mov
subb
mov
sbbb
jne
stos
enter
inc
inc
xchg
movsb
push
nop
mov
fidivrl
clc
or
push
inc
mov
loopne
pop
mov
int
xchg
adcl
fldenv
test
or
aad
cmp
xchg
mov
push
cmpsl
push
test
cmpsb
and
jmp
add
jbe
jae
xor
sbb
popa
mov
mov
and
stos
mov
iret
dec
push
sbb
mov
shrl
and
repnz
inc
loope
xchg
cmp
sub
push
inc
arpl
mov
fists
jecxz
adc
inc
jp
mov
inc
mov
jb
mov
xor
push
or
xchg
mov
jmp
scas
and
mov
xchg
inc
push
or
mov
jno
pop
mov
pusha
mov
fwait
popa
clc
mov
mov
add
push
jecxz
jns
add
cmpsl
addr16
cwtl
pop
adc
pusha
call
loope
jbe
fdivl
outsb
mov
loope
ja
sub
pop
fsubl
cli
mov
ss
push
jo
mov
mov
push
pop
orl
mov
sbb
xchg
pop
repnz
inc
in
fcoms
sbb
unpcklps
mov
or
in
lds
push
xchg
aas
xlat
sub
adc
mov
ss
sbb
xchg
push
test
popf
iret
fstps
stos
adc
or
jae
pop
clc
xchg
add
dec
mov
jle
mov
add
in
push
xor
int
mov
lods
mov
pop
pop
jb
loopne
inc
adc
and
mov
insl
in
jnp
lds
inc
pop
xchg
jb
daa
mov
dec
jmp
pushf
inc
insl
sbb
stc
xor
inc
ficomps
pop
adc
and
dec
mov
jno
jbe
test
movl
ja
sub
xchg
mov
test
rcrb
dec
jmp
add
inc
sti
divb
push
mov
aam
insb
outsb
or
xor
mov
xor
jne
push
lahf
push
aam
add
repnz
pop
aas
mov
xchg
or
add
push
imul
sbb
clc
aaa
cmpsl
push
mov
mov
inc
xchg
mov
xor
fiadds
js
fsubr
mov
stc
enter
add
call
sti
xor
nop
pop
outsl
shll
xchg
add
push
and
and
imul
mov
push
inc
in
push
sub
lock
cmpsb
and
addr16
cmpsb
push
inc
dec
or
push
xchg
dec
movsl
mov
or
adc
sub
es
xchg
mov
les
xchg
enter
hlt
sub
and
sbb
inc
movsb
cmp
inc
mov
pop
and
repnz
jmp
xor
inc
scas
sub
jns
outsl
stos
and
mov
sti
push
or
dec
xchg
aas
mov
aam
pop
adc
dec
in
mul
iret
shlb
xchg
mov
mov
sbb
add
xchg
or
out
lods
in
sub
ljmp
lcall
push
mov
inc
es
sahf
sbb
mov
jno
dec
xchg
fidivrl
sbb
fs
mov
pop
inc
push
jl
inc
or
pop
cli
pop
icebp
add
push
jns
fwait
mov
or
xchg
mov
mov
nop
ljmp
call
orb
add
jb
xor
cmp
or
dec
mov
iret
adcl
and
cmpsb
inc
jns
out
pop
add
sub
ja
test
aam
shll
jnp
sbb
push
xor
les
and
or
xchg
xchg
mov
pop
add
sbbl
aas
jmp
push
xchg
add
pop
icebp
inc
repnz
push
mov
cmpb
stc
js
out
jo
mov
add
lods
test
lods
adcb
mov
fistl
mov
scas
mov
dec
pop
test
sbb
addr16
test
push
dec
pop
sub
xchg
add
push
movl
xor
repnz
jge
rcrl
lds
push
sti
xchg
subl
loopne,pn
dec
jecxz
cmc
cmp
insl
bound
fcmovne
loop
sbb
mov
jb
pop
imul
and
aas
cmpl
pop
xchg
shrb
loop
mov
pop
mov
scas
cld
outsl
jnp
imul
xchg
call
xor
or
xchg
sti
xchg
enter
sub
mov
and
or
in
push
pop
fwait
inc
xchg
jbe
mov
in
popf
xchg
xchg
js
push
fists
mov
bound
arpl
mov
stos
shr
pop
inc
movsb
mov
cli
push
daa
adc
and
adc
mov
testl
lcall
sbb
stc
jns
dec
rcrl
mov
fstpt
popf
mov
jmp
das
adc
sbb
ret
mov
mov
push
xor
out
rcll
cmc
cmp
repnz
int
dec
push
mov
out
shlb
sub
mov
sub
pop
rolb
in
fsubs
jl
gs
push
inc
rolb
mov
jg
es
gs
add
js
js
in
add
mov
mov
rcrl
aad
cld
pop
mov
lock
and
sti
jmp
sub
iret
mov
movsl
mov
xchg
mov
pushf
mov
xor
pop
xchg
ljmp
and
xchg
repz
int
out
xor
mov
sbb
imul
cmp
inc
outsl
push
jns
inc
data16
dec
cmp
movsl
repz
jnp
and
imul
lock
push
incl
repz
popa
ret
std
insb
sbb
jmp
pop
loopne
in
std
cmp
rcl
fistl
mov
jnp
inc
pop
imul
xchg
jle
and
test
xchg
daa
mov
imul
add
icebp
mov
pop
loopne
mov
mov
stos
mov
pop
jo
add
push
sbb
adc
jne
cmp
mov
sbb
push
shll
pop
adc
xlat
cmc
mov
adc
loope
cmp
mov
dec
stc
insb
and
push
or
std
and
push
push
push
sarb
sub
jl
ret
cld
or
mov
pusha
out
and
jb
test
scas
rcll
cmp
cwtl
icebp
mov
ret
mov
lds
testl
jbe
pop
lea
add
xchg
add
xchg
data16
xchg
xor
xor
ljmp
jb
out
lahf
add
pusha
mov
imul
xchg
ret
mov
cwtl
outsl
mov
jae
push
and
cmc
das
and
dec
aam
std
fisubl
push
adc
jbe
dec
loope
imulb
hlt
cmp
xchg
fisubs
push
and
and
in
push
scas
call
and
inc
push
out
mov
sub
or
imul
mov
mov
dec
imul
xchg
pop
orl
mov
inc
mov
jp
int3
stos
jge
and
and
or
outsb
mov
mov
ret
aaa
sarl
sub
mov
lret
cld
repnz
ja
adc
add
cmc
cmp
xchg
es
push
add
negl
mov
xor
mov
push
leave
ret
push
adc
movsl
inc
cwtl
shll
je
pop
cmp
dec
loope
cmp
ljmp
lahf
sbb
cmp
nop
cmp
xchg
scas
test
dec
mov
movsl
daa
rorl
xchg
sahf
hlt
add
sbb
repz
dec
or
mov
enter
das
gs
into
pop
imul
jae
push
mov
dec
fisubl
xor
lcall
dec
mov
sub
dec
lods
testb
adc
jp
push
nop
cmp
loop
out
bound
xchg
xchg
mov
jp
or
jp
mov
aam
and
cmpsl
mov
mov
jg
xor
push
mov
cmpsl
mov
iret
fcoml
dec
dec
and
shl
dec
in
xchg
push
dec
imul
outsl
cmpb
add
jb
cld
mov
mov
sub
sahf
add
xor
outsl
jo
inc
push
push
push
push
and
std
xor
stos
bnd
int
cmp
fidivs
sbb
lods
insb
xchg
pop
out
enter
dec
fs
xchg
fidivl
sub
popa
pop
call
call
addr16
mov
mov
push
jg
mov
negl
pop
xlat
cmpsb
xchg
mov
push
jecxz
cmp
call
loop
pop
pop
push
jns
sbb
mov
push
cwtl
les
xor
pop
mov
fs
xor
jmp
jecxz
outsb
imul
sbb
push
lret
aaa
xor
push
cli
xlat
xchg
mov
decl
cmpsl
xchg
fdivr
mov
lock
mov
mov
in
in
xchg
pop
and
movsl
cmp
in
mov
mov
jl
daa
mov
push
ja
push
or
sahf
cmp
mov
or
ja
daa
mov
pop
les
mov
dec
lahf
inc
adc
sbb
mov
test
lods
or
jns
notl
sti
push
sbb
adc
jge
xor
xchg
inc
adc
xor
mov
fdivrl
push
pop
rclb
in
loope
dec
daa
bnd
jge
xchg
pop
add
inc
repnz
in
mov
neg
xor
mov
fstl
adc
popa
daa
adcl
daa
and
adc
inc
jmp
in
and
hlt
bound
aas
mov
add
bound
xchg
aam
mov
push
pop
outsl
aas
mov
sub
dec
scas
sarl
adc
shlb
sti
pop
addr16
gs
in
inc
sub
popa
lcall
lods
push
mov
add
addr16
sti
in
int3
inc
jns
int
clc
pop
test
or
mov
push
insb
cld
popf
cmp
mov
add
adc
shlb
rcll
fistps
cmc
imul
pop
cmp
cld
les
jp
dec
pop
ja
mov
mov
xor
jle
jl
sbb
cmp
add
test
or
xchg
divl
push
lods
sbb
cmp
dec
dec
push
xchg
and
je
pop
xor
repz
inc
jne
jmp
mov
mov
aam
mov
cmp
fsubs
xlat
pop
mov
xlat
dec
cli
sbb
jae
outsl
ficoml
icebp
enter
test
mov
out
adc
ret
shrl
mov
mov
jecxz
into
sub
ficoms
fimull
dec
jne
xchg
adc
inc
repnz
int
int
and
cmp
loop
xlat
outsb
addr16
test
clc
jo
cmpb
sub
xor
aas
xchg
adc
pop
mov
add
pop
jl
xchg
xor
imul
out
fsubr
jnp
pop
sbb
jge
mov
cmc
imul
jge
cmp
stos
test
cmp
mov
arpl
ljmp
std
add
lods
cltd
inc
push
xchg
jne
pop
jno
aam
jl
sbb
mov
mov
sbb
add
scas
add
push
int
cmp
mov
stos
and
cmpsb
in
sti
xor
xchg
popa
or
cmc
rcrb
leave
in
jnp
add
or
pop
mov
xchg
mov
xchg
imul
jae
sbb
mov
fbstp
int
out
mov
xchg
imul
outsb
pop
add
loopne
cmp
inc
mov
pop
outsb
sbb
outsl
daa
jl
mov
pop
jb
hlt
jae
stc
bound
sub
ficompl
adc
jns
pop
int
inc
enter
mov
adc
push
push
call
and
push
push
mov
xor
or
icebp
inc
jmp
and
xchg
in
lcall
or
cmp
test
ljmp
inc
out
pop
fbstp
add
in
je
pop
aad
or
or
pop
cltd
call
cmp
les
in
ret
push
jno
push
mov
leave
sbb
into
rcl
enter
cmp
sahf
gs
popf
pushf
cli
loop
and
dec
mov
subl
push
insb
mov
mov
mov
pop
dec
push
mov
cld
sub
jo
mov
inc
mov
mov
inc
mov
xor
or
int
lds
and
fsubrs
cwtl
xchg
dec
rorl
jns
std
fisubrl
push
sti
pop
sbb
inc
ficoml
jno
mov
pop
out
pop
shll
jo
pop
mov
jle
imul
aad
in
outsb
div
mov
nop
xchg
add
mov
mov
push
push
and
shlb
dec
mov
sbb
lret
ror
nop
inc
mov
out
mov
insl
pop
add
jne
xchg
ds
pop
out
bound
push
shlb
int3
lea
lret
cltd
inc
lock
test
pushf
scas
mov
sbb
js
mov
loopne
jge
sub
outsb
jne
xchg
fucomp
inc
push
dec
inc
jle
jb
push
fimull
lock
ret
arpl
ss
push
add
sbb
fsubr
je
push
loope
jbe
adc
icebp
repz
out
arpl
adc
mov
pop
mulb
pop
sahf
ds
movsb
repnz
xor
loopne
xchg
rep
add
les
and
cmc
aaa
mov
dec
xor
mov
jb
push
jg
bound
insb
cmpsl
enter
mov
loop
gs
mov
pop
mov
adc
inc
rolb
add
sti
xor
mov
xor
aas
jnp
fwait
xor
jmp
push
cmp
neg
inc
popa
inc
sahf
outsb
jo
sbb
mov
jecxz
xor
icebp
ds
push
dec
dec
jae
imul
add
je
test
outsl
pop
iret
sbb
hlt
sarb
xor
imul
fisttpll
test
pop
repnz
push
orb
cmp
into
jbe
clc
imul
adc
out
ret
cmpsb
daa
or
mov
int
pop
lcall
mov
inc
data16
dec
fisubl
movb
mov
adc
push
in
repnz
les
test
ret
in
sti
fwait
inc
xor
xor
mov
lods
outsl
sub
push
popf
pop
fwait
ljmp
in
stos
and
mov
mov
and
mov
mov
test
aam
push
mov
out
xchg
inc
fs
pop
or
out
stos
repnz
xor
test
sub
aam
pop
pop
add
pop
daa
movsl
movsl
js
mov
or
push
stos
in
adcl
dec
enter
js
dec
repz
fldz
std
test
mov
movsl
cld
cltd
lods
xor
xor
dec
in
mov
xchg
int
cmp
test
push
stc
nop
pusha
cld
mov
push
mov
mov
push
pop
jb
adc
cltd
incl
xor
sbb
in
in
cmp
in
mov
lds
push
gs
mov
stos
call
mov
add
inc
je
sti
sahf
es
add
cmp
push
lods
imul
jae
movsl
leave
addl
mov
jne
sub
out
or
fnstcw
pop
daa
sti
add
pop
gs
gs
testl
sbb
insl
aaa
es
lahf
fiadds
aaa
int3
and
inc
pop
sub
into
pop
cmp
add
arpl
in
in
fisubs
sub
jo
int
or
hlt
jnp
out
cmp
add
mov
cmp
mov
xlat
popf
jae
test
cli
test
test
dec
inc
gs
iret
push
push
cmpsl
shl
mov
sub
cmp
cmp
inc
in
and
call
test
adc
bound
movsb
test
and
push
je
inc
fldenv
lahf
push
ja
movsb
bnd
dec
cwtl
in
mov
js
out
int
outsl
adc
pop
loop
xor
sbb
call
mov
aam
mov
pop
xchg
add
test
test
shl
in
cmp
mov
dec
mov
xchg
mov
scas
loopne
or
jl
mov
popf
xor
ret
jae
into
movsb
and
sahf
xor
sbbb
das
mov
rolb
lcall
inc
fdivr
or
imul
sarb
jb
mov
jp
cmc
subb
xchg
cwtl
das
ret
mov
mov
jge
mov
push
jae
movsl
inc
mov
dec
adc
xor
in
ds
icebp
adc
push
push
push
sub
sub
lock
pop
xchg
sarb
jl
mov
clc
rolb
mov
stc
mov
lods
out
mov
xor
push
jl
pop
mov
lcall
das
mov
mov
xchg
sbb
sub
aas
xchg
sbb
call
or
lahf
mov
es
subb
sub
add
mov
jb
mov
mov
and
mov
push
mov
ret
ficoml
jmp
lret
push
movsl
icebp
rclb
cltd
dec
or
sbb
inc
sub
and
inc
bound
ret
pop
test
sbbl
cli
mull
inc
xor
pop
cmp
add
push
xor
fidivl
cs
ret
mov
push
mov
test
cltd
outsb
sub
mov
pop
xor
data16
repnz
testl
data16
arpl
les
imul
pushf
xor
jle
cmp
push
sub
in
cmp
pop
ret
loope
push
add
lahf
cmpsb
push
xchg
dec
test
lds
out
stc
es
js
mov
push
or
cmp
adc
dec
popf
xchg
inc
sbb
jbe
testb
call
addr16
sub
pop
dec
dec
mov
sbb
cs
ficoms
stos
inc
cmpsb
in
mov
pop
addr16
pop
cltd
jle
stos
sub
pop
and
std
xchg
lea
sub
xchg
and
inc
sbb
push
or
xchg
xor
xchg
aad
inc
dec
cmp
pop
jmp
dec
mov
inc
idivb
cld
push
test
je
adc
test
xchg
outsb
push
and
test
notb
cmpsl
daa
dec
pusha
cld
mov
lods
mov
inc
fsubs
xchg
dec
and
loopne
jmp
sbb
or
mov
lahf
es
sti
dec
jns
dec
adc
xchg
lret
fmuls
xchg
sbb
mov
or
xor
add
fldt
and
out
pop
mov
rcll
shll
dec
and
jecxz
lods
jmp
push
cmp
gs
or
xor
push
adc
shrb
pop
adc
mov
mov
ljmp
push
fwait
xlat
mov
sub
push
imul
xor
adc
lret
sahf
jnp
pop
sbb
mov
outsb
or
xchg
sbb
data16
fldl2t
cltd
push
xchg
push
fstl
sbb
push
subl
push
in
xor
dec
cmp
mov
mov
imul
inc
popa
ss
dec
sbb
and
jns
xor
je
aad
adc
jle
push
mov
xorl
cmpsb
sti
and
imul
shll
mov
lds
pop
dec
push
jo
jb
add
ja
das
sbbb
xchg
push
fcomps
add
jle
sbb
fwait
pop
xor
mov
ret
jnp
push
xchg
inc
scas
repnz
sahf
mov
push
test
stc
adc
and
idivl
or
movsb
inc
jno
mov
outsb
in
test
cmpsl
sbb
add
aad
testl
mov
insl
and
add
cltd
aaa
pusha
insl
xor
mov
xchg
jb
int
rclb
test
fadds
cli
icebp
js
inc
shll
lods
sub
repz
lret
lods
and
push
mov
sub
pop
push
clc
sahf
dec
dec
lahf
push
je
jno
mov
and
pinsrw
xchg
fwait
sbb
jbe
jb
out
add
xorl
fsubrp
mov
ja
cmpsl
xchg
inc
lods
pop
out
jbe
fdivp
jo
imul
jle
les
mov
dec
jecxz
xlat
jo
pop
fyl2x
movsl
push
adc
xor
enter
push
rcrl
fmull
dec
fnstenv
xor
inc
dec
pop
jnp
jnp
jae
sahf
lods
jl
inc
leave
mov
in
push
sub
cld
iret
icebp
int
ret
decb
mov
cld
add
fsubl
xor
call
mov
outsb
in
pusha
shrb
lock
into
push
lods
loope
out
sbb
push
scas
fimuls
mov
jge
fcomip
mov
and
aaa
mov
adc
imul
push
push
sub
ja
ret
in
dec
pop
popa
sbb
jle
mull
fs
sbb
jle
divb
test
das
mov
rcrl
add
in
and
int
daa
leave
sub
dec
fsubs
cmp
add
clc
cmpsl
int3
dec
pop
jg
test
and
loop
xchg
mov
and
xchg
push
pop
mov
in
and
mov
sub
cmpsb
adc
fnsave
mov
fs
bound
xchg
mov
jmp
sbb
mov
xor
mov
repz
sub
xchg
enter
outsl
jle
dec
or
ret
jns
cmc
outsb
popf
fs
dec
repnz
jbe
push
inc
xchg
in
clc
mov
imul
xchg
xor
into
aad
and
xlat
outsb
push
jl
sbb
insb
test
mov
dec
xchg
mov
fstl
hlt
leave
inc
cs
pop
push
add
lock
cmp
dec
movsb
or
pop
xor
cmp
xchg
inc
jno
shrb
ficoms
push
xchg
data16
adc
int3
loope
dec
sub
jg
inc
mov
out
pop
or
cwtl
xchg
shl
mov
outsl
xchg
rorb
faddl
insl
adc
fcmovne
scas
mov
and
mov
and
stos
mov
jp
andb
push
mov
mov
shlb
jl
jg
or
pop
mov
mov
lahf
sub
sbb
cli
aaa
mov
push
lret
mov
sbb
popl
daa
rcr
bound
scas
mov
mov
fdivrp
xor
aam
fldcw
jmp
ds
stos
loopw
mov
pusha
lods
rcrl
and
fisubrl
add
ss
sbb
subb
mov
lods
incb
fs
testl
push
int3
mov
xchg
das
imul
test
lds
jae
mov
mov
lods
pop
adc
jns
cmp
cmp
sub
pop
xchg
arpl
lds
int
jl
inc
bound
fistps
ja
xor
mov
ret
inc
test
jae
push
data16
mov
fwait
test
mov
popf
add
sbb
addr16
cs
lahf
mov
cmp
push
movsb
add
sahf
xchg
add
lea
mov
push
inc
stos
xor
xor
mov
fbstp
subl
dec
add
ss
jne
cmpsb
sub
mov
scas
hlt
loopne
ljmp
cmp
dec
sbb
pop
add
jbe
push
mov
hlt
add
cmpsl
and
rorl
out
fdivl
mov
jg
divb
cld
or
cmp
cmp
mov
orl
sahf
aam
mov
test
inc
mov
loope
pop
xchg
sub
mov
jle
sbb
and
cmp
jmp
pop
push
lds
outsb
movb
dec
and
fsubl
lcall
xor
or
in
add
push
xor
mov
mov
mov
push
pop
push
sti
inc
pushf
arpl
imul
fxch
pop
test
sub
jecxz
xor
lret
int
aaa
sahf
les
sbb
xor
pop
in
scas
jle
mov
xor
dec
sahf
mov
call
adcb
inc
lods
fisttps
sysenter
testl
sbb
inc
mov
xor
xchg
repnz
fidivs
sbb
fnstsw
mov
mov
outsb
cmp
fildll
cmpsl
jp
dec
lret
add
out
jp
fidivrl
mov
mov
leave
pop
jmp
ret
sub
dec
lock
lea
mov
sarb
cld
fsubr
popa
mov
pop
sbb
enter
ljmp
insl
shrl
inc
ret
mov
addr16
xchg
rclb
cwtl
cltd
mov
sub
mov
lahf
fdivs
test
bound
mov
sbb
ja
cld
insb
sub
cld
cmpsl
xor
stos
test
in
dec
inc
icebp
push
fcompl
fcoms
push
js
cmp
dec
lret
adc
xor
pop
jae
stos
int3
jg
insl
mov
repz
dec
push
and
fstpt
pop
scas
jmp
data16
inc
mov
jbe
push
js
dec
test
hlt
pop
xor
lods
xor
jmp
cmp
push
xlat
scas
or
and
fdivp
mov
and
xchg
pop
jecxz
in
test
jnp
inc
cli
or
call
add
aaa
in
xlat
dec
in
jno
adc
xor
fdivs
mov
push
call
adc
sub
and
jne
dec
outsl
push
jge
and
test
lea
adc
xor
loope
and
mov
daa
leave
popa
push
inc
fildl
mov
repz
mov
mov
iret
ljmp
in
stos
in
out
filds
imul
jo
ss
push
jno
ljmp
insb
lods
mov
nop
cmpsb
out
jns
in
outsl
or
xor
clc
or
adc
pusha
mov
xchg
daa
test
mov
les
push
mov
sub
icebp
mov
fnstsw
pop
bound
sub
mov
sub
cwtl
jbe
test
imul
rorb
out
and
scas
push
xchg
int
pop
jmp
int3
pop
dec
aaa
xchg
inc
lods
out
lock
push
out
xchg
mov
lcall
or
dec
add
scas
stos
inc
loope
hlt
pop
push
fwait
cmp
push
push
and
sbb
inc
test
inc
mov
filds
and
mov
adc
sti
cmp
pop
add
int3
xor
leave
ss
lret
pop
mov
sbb
icebp
inc
adc
xchg
or
test
pushf
pop
push
in
loop
mov
sub
xchg
sub
pushf
pop
aaa
mov
or
stos
js
frstor
push
ret
mov
pop
inc
inc
mov
sahf
roll
cmc
add
dec
lcall
scas
in
mov
test
int3
xor
mov
mov
inc
xorl
call
cmpsb
jl
popf
xchg
arpl
sti
and
add
rorl
movsb
xor
sbb
pop
inc
adc
test
xchg
push
mov
adc
mov
pusha
adc
lret
push
stc
pop
xor
into
shl
outsl
js
mov
ds
mov
push
jmp
add
jmp
in
dec
mov
mov
mov
mull
mov
fdivr
jb
fnsave
dec
sub
sub
sbb
xchg
mov
pusha
repz
out
pop
xchg
rcl
cwtl
mov
clc
popa
ds
sarl
inc
fldt
cmp
in
mov
sbb
stc
mov
lret
arpl
fldenv
sub
push
sub
push
push
pushf
sbb
and
data16
inc
inc
fimuls
push
mov
xor
xchg
shl
xor
loop
mov
pop
sti
int3
add
dec
in
test
aam
xchg
aad
imull
out
pusha
push
or
addb
imul
stos
jne
sub
xchg
outsb
adc
repz
int3
cld
ds
ljmp
fs
xor
fisubs
mov
or
mov
cli
cli
or
dec
aas
clc
lea
pop
fildll
ja
jnp
out
or
xor
inc
stc
loopne
inc
in
cld
es
jecxz
inc
fistpll
lock
inc
cld
popl
loope
adc
lods
rcrl
jns
shr
iret
add
pop
mov
scas
cmp
cwtl
movsl
repnz
aas
cmp
pop
xchg
xchg
jnp
xchg
jl
je
and
sti
inc
imulb
xchg
sbb
mov
flds
lcall
stc
xchg
cmc
das
fnsave
aam
adcb
movsb
mov
sbb
push
and
incb
fidivrl
adc
loope
cli
mov
mov
outsl
incb
xor
pop
lcall
add
aam
mov
mov
add
push
cltd
adc
in
aaa
fimuls
cwtl
mov
xchg
sub
cmpsb
mov
xlat
mov
jecxz
cld
and
insl
lret
call
iret
lods
mov
cmp
push
sbb
dec
or
jge
aam
in
andl
in
pop
outsl
cmp
pushf
jno
lcall
mov
push
jmp
and
push
mov
pop
jecxz
pop
lea
and
mov
pop
inc
fimuls
test
push
fdivl
mov
lods
xchg
jg
push
leave
stos
push
cmp
mov
and
mov
sub
decb
imul
and
xlat
outsb
mov
pop
cmc
nop
pop
add
sub
movsb
cmp
adc
inc
aaa
pop
test
mov
aam
pop
inc
jmp
or
out
fmuls
pushf
into
out
inc
push
pop
cld
or
adc
push
jne
xor
or
into
pop
divb
out
movsl
addr16
mov
cltd
lods
add
sub
xlat
fists
pop
xchg
jp
movsb
lahf
es
or
imul
push
repz
lock
lea
sbb
cwtl
dec
sub
int3
push
out
jne
dec
pop
gs
dec
mov
addr16
push
add
ja
scas
sub
dec
sub
pop
pusha
ror
xor
out
pop
dec
iret
xchg
clc
pusha
jge
aam
pop
pop
subl
xlat
mov
lret
cmp
pop
repz
iret
data16
aad
inc
nop
pop
jne
dec
fwait
or
adc
xor
pop
pop
push
or
in
les
int3
lds
addr16
xlat
ds
jbe
movsl
fucomp
mov
es
shll
test
mov
call
nop
inc
and
adc
outsb
mov
into
sbb
push
movsb
lods
ljmp
ljmp
xlat
js
or
dec
icebp
daa
mov
popa
cmp
xchg
rorl
incl
mov
mov
or
mov
lahf
bound
jne
cltd
test
in
lock
dec
mov
mov
sbb
aas
aas
push
or
inc
cmp
in
les
pop
cmp
push
pop
xor
scas
lock
add
scas
mov
push
mov
cmc
stos
fistl
sub
jns
xor
or
pop
std
and
addr16
cmpsb
les
das
mov
mov
and
xor
xlat
repz
aaa
pop
xor
pop
dec
xchg
inc
inc
push
icebp
nop
pop
icebp
dec
adc
jl
adcb
adc
add
test
scas
dec
lock
push
mov
pop
or
cmp
imul
inc
js
xchg
rolb
out
adc
es
pop
fwait
inc
lea
or
mov
xor
sbb
jle
in
scas
rcrb
scas
mov
sbb
arpl
mov
sub
cld
add
pop
xchg
dec
xchg
xor
stos
or
clc
imul
mov
cmc
stos
mov
cmpl
into
lret
dec
loopne
mov
or
cmc
mov
sub
sub
daa
or
call
or
movsl
sbb
lret
les
cmpb
rcrl
xor
xchg
mov
inc
xor
xchg
mov
shll
call
xchg
jne
mov
inc
movsl
cmp
test
inc
xor
push
add
lret
sub
mov
push
pusha
mov
mov
cmp
mov
stc
fwait
icebp
lea
pop
sahf
inc
leave
mov
inc
inc
push
in
inc
adc
or
iret
cmpsb
push
lods
inc
filds
jle
nop
inc
sti
xorb
or
jecxz
leave
fbstp
loopne
sahf
out
add
mov
push
mov
mov
into
mov
jne
mov
mov
lea
xor
dec
cmp
fistl
or
mov
stos
cltd
mov
mov
imull
pop
movsl
pushf
pop
jno
ret
jmp
movsb
fmull
lods
subl
xchg
cmpsb
mov
addl
push
jmp
mov
fisubl
mov
es
enter
roll
fsubs
repz
loopne
push
cmpsb
ret
sarb
inc
stos
mov
out
xchg
push
test
xchg
sub
jb
cmp
idivb
adc
mov
pop
lock
shlb
inc
add
ljmp
sbbl
gs
pop
dec
mov
movsb
inc
call
mov
inc
fs
lcall
xor
mov
sub
pushf
sahf
and
xchg
or
stc
pop
cmp
mov
sti
xchg
sub
and
or
hlt
lret
inc
mov
and
mov
xor
or
jbe
xchg
stc
push
cmp
or
jecxz
jns
jl
xor
pop
xor
cli
mov
xchg
cmc
push
fildll
inc
push
mov
icebp
mov
repz
leave
fsts
xchg
std
sar
sahf
clc
hlt
stc
pushf
scas
popa
call
pop
cmpsb
xchg
pop
cmp
jmp
mov
push
jnp
outsl
les
xchg
xlat
xchg
rcl
aaa
pop
imul
notb
xor
adc
mov
insb
push
shrb
mov
sbb
add
push
sub
popf
mov
cmp
push
insb
xor
out
iret
mov
incl
mov
loope
mov
mov
roll
xchg
test
push
jmp
mov
loope
sbb
dec
out
pop
and
jnp
cmp
dec
jo
inc
jbe
jnp
inc
jg
inc
cmp
push
xchg
roll
bound
jne
sbbb
data16
jp
mov
mul
lea
cmpsl
dec
mov
push
stos
xchg
pop
daa
adc
xor
push
decl
jp
aam
pop
mov
add
cld
xlat
movzbl
mov
lcall
pop
stc
hlt
add
xchg
push
push
clc
cmp
dec
push
out
test
call
fs
ss
mov
push
push
stos
movsb
or
cmp
insb
jnp
cmc
pop
jnp
je
mov
jecxz
xchg
push
jo
js
pop
sbb
mov
mov
dec
lahf
cmp
add
out
dec
ja
inc
popf
lea
sub
repnz
std
lds
and
orl
mov
mov
mov
jmp
mov
aas
mov
mov
in
jle
xchg
jp
mov
mov
sbb
lock
mov
push
jo
xlat
mov
insl
fxtract
xchg
push
xchg
sub
jmp
cmp
jge
mov
in
cmp
test
nop
push
fidivrl
pop
and
ret
or
rcr
fimuls
test
aad
sbb
cltd
inc
mov
repnz
push
imul
fidivl
or
incb
test
jg
add
roll
ss
dec
sbb
push
xchg
xchg
leave
aam
adc
or
push
jo
jb
push
insl
add
xor
sbb
mov
add
xor
mov
and
push
xchg
aaa
lret
xchg
push
popf
pushf
push
into
iret
xchg
sbb
fnstsw
mov
pop
cld
rcrl
cmp
clc
sbb
push
add
fidivs
or
mov
mov
push
imul
and
in
mov
aad
or
pop
cmp
insb
subb
pop
test
mov
hlt
sbb
cmp
lret
lret
jle
push
fnstcw
shl
aam
jle
cmpsb
mov
push
lahf
add
and
push
pop
in
sbbb
or
xor
rcrb
mov
add
pushf
sub
xor
sub
sbb
xchg
ret
jl
mov
push
ljmp
cmp
mov
mov
mov
mov
in
jns
sbb
sbb
sahf
gs
daa
lods
adcb
dec
dec
shr
enter
xchg
mov
cwtl
jo
cmp
cmp
sahf
imul
push
aam
mov
adc
scas
inc
repnz
adc
jp
int3
dec
dec
jg
xchg
and
iret
popa
pop
cld
icebp
movsl
imul
lret
mov
loop
cmp
mov
add
dec
je
sub
es
mov
cmpl
mov
xchg
mov
ret
imul
mov
sahf
and
repz
push
testl
pop
adcb
aas
xchg
mov
loopne
cmp
mov
cmc
mov
inc
or
or
mov
and
idivl
scas
mov
jecxz
stc
aas
mov
pop
repnz
jae
sbb
or
adc
stc
aaa
fisubrs
in
pushf
push
sbb
add
lock
pop
mov
cwtl
xor
jge
leave
std
pop
jle
push
add
das
lds
loop
das
cmp
pusha
js
cltd
or
pop
aaa
or
jg
or
insb
fildll
data16
js
push
xchg
cmp
mov
mov
pop
mov
into
pop
xor
mov
mov
mov
jmp
mov
pop
jge
out
jp
jno
jne
cwtl
mov
shrb
mov
jle
lods
mov
or
out
cmp
shrb
adc
lds
adc
int
stos
mov
mov
ret
push
data16
jbe
add
mov
add
xor
xor
push
seta
push
pop
popf
mov
fbstp
and
std
pop
jmp
out
adc
gs
outsb
lret
xor
lea
jno
dec
mov
pop
cmp
cli
hlt
scas
push
lret
and
test
mov
shll
idivl
add
jb
sahf
fildll
cmp
cmpsb
hlt
pop
sub
mov
or
mov
pop
sbb
orb
cli
loop
sahf
adc
out
inc
or
cmpsb
xchg
cmp
leave
add
sbb
xor
mov
pushf
jg
jo
leave
push
inc
loop
inc
xchg
adc
in
dec
cmp
mov
xchg
test
jae
xchg
pop
and
mov
imul
mov
cmpsb
js
mov
mov
icebp
xor
int3
pushf
fidivl
shll
xor
xchg
or
dec
dec
fwait
sub
icebp
imul
out
cmpsl
push
nop
sbb
stos
loope
and
fidivs
xor
fnstcw
scas
add
xor
mov
push
pop
or
arpl
push
rclb
mov
pop
imul
decb
mov
pushf
loop
or
aad
push
dec
pop
jp
ja
jecxz
cmp
mov
cmp
dec
pop
cld
mov
add
mov
cmp
test
mov
rcl
sbb
cmpsl
scas
fldl
jns
icebp
mov
or
xchg
arpl
dec
incb
ljmp
push
outsl
pop
in
out
test
inc
push
fildll
or
pop
add
push
repnz
mov
imul
pop
cld
xchg
lea
outsl
aaa
decl
pop
mov
push
mov
out
les
inc
mov
icebp
stos
mov
rcl
or
or
aam
mov
push
leave
and
mov
push
rolb
jnp
pop
repz
push
jp
test
mov
adc
jbe
sbb
or
sbb
movsl
call
lcall
fnstenv
mov
faddl
mov
push
inc
sub
cmpsb
xor
popa
mov
inc
cmp
out
cmpl
push
jo
pop
or
pop
mov
jg
int
jecxz
testl
xor
mov
rolb
jae
mov
leave
hlt
das
jb
mov
pop
inc
subl
aaa
lds
jbe
mov
push
xor
xor
or
add
ret
movsl
xchg
jecxz
mov
movsl
mov
ficoms
ss
xor
imul
mov
dec
pop
ret
sub
call
cs
gs
imul
jne
movsb
out
cmp
sub
shll
test
mov
aas
mov
cmpsl
add
and
movsb
inc
cmp
jl
cltd
sub
lcall
and
les
and
dec
sub
daa
sbb
add
sub
pop
popa
and
inc
xchg
mov
cmpsb
mov
jmp
test
stos
jne
js
mov
dec
mov
jae
daa
sub
dec
or
rclb
push
test
enter
ret
pop
push
mov
mov
lds
pop
scas
addr16
arpl
into
cmpsb
fwait
jae
cmp
xchg
inc
cmp
dec
out
cli
in
mov
out
out
jae
pop
mov
fistl
mov
lods
ret
xor
mov
xchg
sarl
mov
ror
add
cmp
mov
and
cmp
pop
add
sub
dec
xchg
dec
add
cmp
sbb
insl
pop
mov
cmp
orb
in
popa
push
imul
mov
sub
lret
inc
subb
xchg
sbb
test
outsl
or
loop
jp
mov
mov
mov
cltd
mov
jo
dec
jecxz
ljmp
pusha
in
mov
push
inc
out
loopne
jl
jae
dec
dec
mov
fidivrl
lea
aad
pop
lods
inc
fidivrs
aad
daa
mov
add
jae
adc
jle
repz
fs
mov
repz
je
xor
sub
jge
int3
mov
dec
pop
pop
outsb
mov
hlt
xchg
or
subb
or
cmpsb
xchg
and
daa
subb
sbb
mov
add
pop
test
push
scas
popa
mov
stos
jbe
mov
pop
jae
fldt
jnp
out
and
or
adc
mov
and
addr16
jge
out
jno
movsl
stc
les
add
pop
xor
cwtl
mov
sbb
jb
and
mov
test
adc
rol
mov
sub
fwait
cmp
and
addr16
nop
fildll
lock
push
mov
sub
mov
fbld
fidivrl
test
pop
mov
scas
sahf
mov
jne
test
xchg
js
adc
and
sub
lea
jno
inc
lods
pop
adcb
jl
pop
imul
lahf
xor
or
int3
fs
pop
xchg
cs
jle
add
test
adc
cmp
adc
add
outsl
pop
mov
mov
rorl
xchg
mov
es
popl
jge
lock
es
das
sarl
sbb
mov
sub
adc
inc
dec
stos
mov
xor
jmp
sbb
aaa
cmpsb
and
out
test
lahf
mov
xor
fnstcw
cli
pushf
mov
leave
adc
cmp
scas
hlt
sub
adc
les
adc
dec
push
xor
jns
loope
stos
add
nop
jnp
imul
test
mov
jl
inc
pushf
adc
pop
push
sar
out
bound
inc
cmpsl
dec
jle
data16
lret
lahf
or
lea
mov
mov
sbbl
test
pop
popf
data16
jmp
lahf
sbb
adc
and
repnz
sbb
lret
mov
int
pop
ss
andl
pop
fdivs
in
sbb
repnz
fdivl
imul
fs
fnstenv
std
or
adc
sbb
into
pop
adc
xchg
je
repnz
ret
stc
lcall
mov
mov
mov
push
fwait
cmp
mov
lahf
sbb
push
aas
lret
jb
sbb
in
ret
jecxz
xchg
mov
mov
and
add
das
mov
in
jne
test
shlb
in
adc
sbb
dec
adc
xor
mov
adc
in
mov
mull
inc
jle
jnp
sbbb
jmp
sub
xchg
movsb
cmp
imul
jmp
fstps
sti
das
or
mov
xor
jmp
mov
test
aaa
into
test
mov
jnp
sub
jge
repnz
mov
cmpsl
jnp
mov
lret
cld
push
cmp
nop
xor
cmpsb
inc
jecxz
dec
out
in
out
out
jae
add
xor
mov
mov
cmp
cmp
inc
lahf
mov
adc
aad
and
inc
lds
shl
jae
mov
cwtl
out
push
xchg
out
pop
push
mov
adc
sbb
sub
test
imul
loopne
andb
sub
outsb
add
ljmp
aad
xor
jl
mov
add
sbb
pushf
outsl
nop
inc
xchg
mov
jne
loopne
outsl
push
jmp
pop
jno
add
and
outsb
push
sti
pop
lret
in
adc
cmpsb
fs
incl
jne
rolb
push
shrl
insl
cmpsb
inc
pusha
gs
jbe
pushf
sub
stos
test
lret
sub
or
dec
pusha
repnz
fwait
sub
add
lret
in
sbb
popl
push
cmpsl
inc
or
sub
lcall
leave
scas
inc
dec
xor
dec
cmpsb
cld
loop
lods
sub
inc
fnstsw
pusha
pop
sahf
jo
push
fisubl
mov
sub
mov
dec
mov
inc
ja
push
sbb
add
cmp
mov
xchg
push
mov
sub
or
icebp
mov
sub
dec
xchg
inc
and
outsl
push
sbb
sub
mov
mov
out
jno
add
mov
fs
mov
fcompl
mov
cmp
aas
dec
cmp
sbb
xor
and
add
jl
test
out
test
mov
mov
sub
dec
mov
jge
aam
inc
pop
out
dec
and
add
push
jns
push
stos
daa
push
pop
ficomps
sub
inc
xor
and
mov
pop
sub
arpl
rcll
push
and
std
clc
test
nop
fdivr
pushf
outsl
add
mov
push
testb
or
dec
jecxz
decb
pop
adc
insb
adcl
stos
xchg
dec
adc
stos
out
push
idivb
or
jne
cmp
mov
int
or
mov
add
pop
mov
adc
repz
pop
mov
and
out
pop
arpl
cmp
or
xchg
push
je
arpl
popa
mov
pop
mov
mov
test
fisttpll
lock
jo
pop
pop
pushf
and
outsl
loop
sub
scas
insl
cmp
jno
nop
jmp
jge
add
stos
stos
lds
std
mov
mov
xchg
sbb
sbb
pop
das
jmp
out
enter
insb
jle
xchg
enter
cmp
inc
ror
push
sarl
cmp
bound
dec
pop
add
lods
mov
xor
mov
les
push
pop
fnsave
push
lahf
insb
test
jecxz
xlat
vpaddsw
rcrl
add
fs
shlw
shlb
idivb
dec
push
fidivrl
push
adc
mov
pop
fcmovnb
imul
and
mov
jbe
mov
mov
out
pop
jmp
bound
cmp
in
mov
outsl
in
aaa
sbb
outsb
les
insb
pop
roll
cmpsb
cmp
inc
shl
pop
xchg
mov
dec
push
mov
nop
sbb
sub
imul
xlat
nop
cmp
xor
sbbl
jmp
or
sbb
jb
cpuid
aaa
in
push
imul
sti
adc
mov
or
xchg
dec
dec
pop
lea
loop
sti
sbb
inc
add
je
ss
dec
mov
sbb
out
rclb
sub
scas
push
movsl
mov
add
int3
lret
mov
sbb
mov
push
jle
scas
mov
sub
out
push
jbe
lret
lock
or
adc
shr
mov
out
mov
filds
jmp
lea
mov
inc
xor
mov
out
and
repz
push
je
cmp
ds
loopne
sub
stc
lea
bound
inc
test
inc
mov
lods
cmpb
mov
je
mov
xchg
adc
sbb
js
mov
or
scas
popf
hlt
outsl
sbb
xchg
mov
pusha
aam
hlt
arpl
rcll
jge
popa
mov
and
xchg
or
jno
add
mov
movsl
xor
fs
fadds
jno
adcb
and
adc
sub
lods
pushf
popf
jb
out
or
cmp
fsubrs
jle
xor
xlat
inc
faddp
jno
xor
fsubl
add
sub
cmpsl
cld
inc
cmpsl
pop
mov
xor
mov
insb
xor
push
cltd
into
pop
sub
mov
cmp
push
andl
cmpb
lods
sbb
inc
jae
ss
mov
insb
es
pusha
pop
nop
cmpsb
repnz
scas
push
test
orl
push
inc
jno
cli
es
xchg
int
cmpsb
or
pop
xchg
mov
cmp
cwtl
pop
dec
repnz
imul
out
push
int
sub
jae
aad
outsl
pusha
ss
imul
pop
das
test
xor
sti
mov
into
push
dec
or
outsb
out
lahf
mov
ds
rorb
in
inc
push
or
mov
into
gs
inc
sub
shlb
leave
cli
int
or
mov
inc
test
push
dec
stos
add
cs
cwtl
push
jnp
xchg
mov
out
cmpsb
cmp
subl
enter
jle
sbb
jle
ret
push
aam
mov
jb
icebp
cmp
push
add
cmpsb
inc
fstl
clc
xor
and
mov
scas
es
sti
xchg
cli
xor
divl
fildl
aas
inc
cld
int
add
in
or
mov
lret
repz
push
sub
push
sbb
and
loop
fnstsw
lahf
ss
inc
call
cmp
int
enter
lret
cld
ss
adc
int
out
imul
ficoml
jmp
xchg
mov
xor
cmpsb
outsb
mov
inc
in
insl
je
outsb
repz
xchg
push
cmpsb
lds
test
add
cmp
and
or
xchg
push
mov
sti
cli
dec
rolb
mov
gs
mov
pop
pushf
jmp
dec
movsb
inc
mov
cmc
lret
fcomps
icebp
add
and
sub
mov
clc
cmp
outsb
cmp
cltd
lods
inc
fcomi
mov
adc
pop
mov
inc
pop
shll
dec
dec
hlt
jmp
push
dec
fwait
popa
mov
int3
jo
push
mov
test
fsts
xor
in
mov
fisubl
scas
adc
jb
outsl
mov
and
aad
jecxz
clc
sti
out
ss
mov
cmp
and
push
push
push
ret
daa
ljmp
push
ret
or
jle
xchg
sbb
xchg
push
xor
xlat
cmp
aas
mov
aam
adc
lret
sub
jo
mov
xchg
test
enter
outsl
mov
sbbb
push
leave
add
xchg
cli
cli
test
push
or
adc
or
mov
das
adc
dec
cmp
and
and
popl
mov
mov
and
pop
mov
lods
pmulhw
imul
insl
xchg
pushf
sub
sahf
loop
add
add
movsb
mov
nop
inc
incl
fldenv
mov
push
pop
mov
pop
jno
lcall
cli
jo
daa
push
sub
inc
mov
insl
or
and
cld
popfw
and
and
or
jl
cmpl
movsl
adc
lahf
mov
or
xchg
fistpll
jo
xor
mov
fucom
push
xchg
mov
mov
xchg
fldl
cmpb
fistps
jge
in
nop
iret
shl
mov
mov
arpl
xchg
nop
xor
adc
push
push
lret
sti
scas
gs
fpatan
mov
stc
cli
into
cmp
clc
pop
cli
hlt
aam
or
add
xchg
dec
add
fsubrl
jle
jl
adc
cld
mov
push
sbbb
pop
lretw
movsl
loopne
dec
enter
imul
adc
lret
fcoms
adc
popf
movsl
add
std
repnz
sbb
cltd
sub
mov
xor
call
icebp
mov
sbb
dec
mov
cmpsb
stc
xor
dec
mov
sub
sub
pop
dec
repz
jb
cltd
arpl
sbb
std
push
negb
or
fdivrs
jecxz
and
xor
sub
out
cmpsl
pop
fistps
push
imul
das
add
jnp
inc
lods
cmp
ss
out
sbb
clc
inc
decb
addr16
jg
in
lcall
mov
lss
fnstcw
rorl
daa
call
loopne
mov
popa
mov
stos
lods
lock
sbb
fmull
fbstp
mov
inc
cli
dec
popf
inc
ret
mov
and
sub
inc
jp
sbb
dec
sahf
jne
out
xor
cld
addb
mov
repz
push
pop
popf
jns
decl
jno
and
out
xchg
inc
xlat
push
or
cmpl
repz
pop
and
push
pushl
negl
lahf
sti
xchg
rcll
sahf
xor
std
into
mov
mov
xchg
inc
out
shll
in
mov
mov
ret
cmp
jnp
in
call
sbbb
jb
mov
addr16
fnstcw
loopne
mov
mov
inc
int
push
xchg
pop
loope
mov
dec
add
lock
cs
fnstenv
push
sub
fdiv
mov
or
mov
dec
std
aam
push
jl
mov
sbb
sbb
lcall
xchg
push
icebp
loope
xchg
dec
jecxz
mov
push
int
rclb
pop
jne
mov
and
inc
pushf
or
push
mov
mov
adc
icebp
sbb
gs
jb
sbb
rcl
repz
adc
mov
cmpsl
xchg
xor
adc
cmc
rcrb
and
loop
push
inc
mov
and
jo
sbb
mov
fstl
mov
jne
jecxz
sar
xchg
shll
or
and
sahf
or
jo
xchg
mov
mov
mov
shll
pop
popw
mov
outsl
cltd
stos
mov
movsl
outsb
add
add
adc
mov
jg
push
sahf
shrl
or
popf
sub
cmp
inc
xor
mov
mov
sbb
outsl
jge
insb
pop
outsb
push
out
test
add
push
lret
dec
fistps
xlat
rcrb
sub
adc
lds
insl
arpl
insl
or
into
data16
cmp
jno
in
cmp
xchg
dec
and
and
dec
jecxz
rcll
aad
rcrl
hlt
into
popf
idivl
jle
dec
aam
dec
mov
jo
fcompl
sub
jbe
iret
mov
ret
cmpsl
push
sub
push
dec
or
cmpsl
push
shl
cmp
mov
das
dec
jne
xchg
andl
pop
or
cld
incb
aas
stos
adc
mov
stos
mov
in
cmc
outsb
data16
cmpsb
jg
pop
xor
dec
mov
bound
pop
inc
nop
and
xorb
aaa
inc
xchg
sub
dec
lret
je
stos
sbb
leave
popf
mov
mov
rcrb
leave
xchg
dec
mov
mov
movl
mov
or
loopne
ds
mov
lcall
cmp
icebp
and
ret
mov
je
and
mov
dec
mov
sub
push
les
adc
xchg
daa
nop
repz
sbbb
adc
pushf
pusha
mov
sub
mov
nop
aas
jmp
cmp
out
loope
sti
jb,pt
push
lods
mov
mov
fst
stos
jecxz
sub
es
mov
cmp
mov
jb
mov
orb
aad
mov
mov
mov
repnz
stos
pop
mov
stos
or
pop
sub
js
lahf
and
outsb
or
leave
pop
dec
mov
mov
mov
lods
adc
ljmp
adc
lea
xor
sub
mov
fimull
insb
icebp
mov
sub
lret
std
jae
mov
xchg
pop
enter
cmp
pop
sahf
push
inc
clc
daa
mov
jnp
inc
fsubrs
rcrb
fisubrs
pop
inc
or
sub
jo
push
sub
loop
repz
or
dec
inc
dec
pop
inc
nop
fldenv
sub
add
xor
cmpsl
push
int3
arpl
ss
xor
cltd
mov
xor
or
push
out
push
adc
ljmp
ljmp
clc
jmp
mov
lock
dec
mov
cmp
mov
movsb
sub
test
add
add
popf
sbb
or
xchg
gs
sub
pop
pop
push
add
js
lea
adc
ss
or
imul
out
jg
mov
cmp
inc
sbb
pop
lea
mov
jmp
andb
pop
lock
leave
xchg
xor
mov
mov
je
add
mov
jno,pt
lea
xchg
inc
cmp
inc
out
xlat
repz
stos
pop
xchg
dec
xchg
xor
mov
in
cld
push
rorb
sbb
outsb
add
jle
or
or
pop
mov
pop
in
orl
nop
push
push
sbb
arpl
xchg
cmp
mov
inc
pushf
mov
ljmp
and
rorl
xchg
pop
fwait
push
sbb
mov
add
je
jge
and
imul
pop
imul
shlb
mov
testb
jle
pop
adc
jbe
pop
addr16
lods
add
ret
data16
fs
cmp
es
jmp
test
lret
jl
leave
sbb
push
outsb
jmp
add
push
xchg
push
push
xchg
push
and
mov
add
or
jecxz
pop
push
scas
push
add
sbb
xor
mov
fsubl
xor
aam
add
mov
jns
cmp
jp
or
shll
mov
imulb
aad
loopne
pop
rorb
sahf
mov
out
out
add
stos
es
jmp
cld
test
and
push
lods
incl
mov
sub
fildll
mov
lahf
cmp
data16
cmp
repnz
nop
in
lods
and
fnstenv
cmpsb
jns
in
out
mov
or
dec
jnp
dec
mov
push
add
xchg
aad
adcb
or
mov
fidivs
andb
arpl
ljmp
testb
jo
mov
mov
sahf
fimuls
and
pusha
xlat
xor
ficomps
es
test
popf
cltd
jnp
inc
loopne
pushf
and
cmpsb
xchg
repnz
mov
pop
xchg
dec
xor
xchg
repz
cmp
cmpsb
xor
out
mov
xor
ljmp
cld
xor
inc
jnp
cld
add
pop
and
fnsave
stos
je
incb
and
push
scas
mov
sbb
jne
cmc
cmp
mov
rorb
daa
and
push
xchg
push
lods
out
add
sbb
jl
xor
dec
jmp
jnp
cmp
into
mov
xchg
adc
jecxz
std
mov
mov
dec
add
sbb
test
push
inc
pop
mov
int3
fisubs
cmpsb
movb
test
mov
aad
or
xor
add
js
push
loope
pop
xor
icebp
dec
and
add
je
sub
pop
sub
mov
sbb
lret
fidivrl
lahf
pop
or
mov
xlat
xchg
shl
clc
cli
inc
add
sub
pop
sub
xlat
jbe
stos
mov
in
movsb
test
mov
xor
cmpsl
es
inc
or
pop
xchg
push
xor
mov
out
shl
mov
out
repz
add
jmp
pop
and
test
popf
mov
adc
mov
cltd
not
popa
and
inc
sahf
adc
xchg
xor
out
bound
lea
mov
add
cs
cmp
xor
repz
and
insb
jne
hlt
xchg
mov
aam
repnz
out
jecxz
scas
push
pop
out
sbb
push
pop
dec
rcrb
cmpsl
out
push
dec
out
mov
repnz
xchg
insl
adc
jbe
pushf
scas
lahf
jmp
into
in
jno
dec
ret
insl
jmp
sbb
push
push
stos
add
xchg
mov
jno
sub
add
jno
mov
add
hlt
clc
sbb
ds
outsl
je
mov
lea
mov
sub
cmp
jnp
jbe
loop
in
sub
aas
mov
inc
fmull
leave
mov
imul
loopne
inc
sub
shrl
dec
aaa
mov
out
cmp
pop
mov
mov
dec
inc
je
jae
adc
insb
inc
in
icebp
or
sub
cmp
mov
xlat
push
fbstp
movsb
int3
lea
gs
mov
imul
push
or
push
mov
jp,pt
addr16
cld
and
push
dec
lods
sbbl
push
cmpsb
dec
xor
mov
mov
popf
into
cmp
sub
stos
lahf
xchg
ret
lock
roll
mov
push
outsb
add
lds
lock
mov
out
test
xor
push
bound
pop
pop
sub
negb
fwait
pop
mov
pop
cmp
cmpsl
mov
sbb
out
xchg
stos
pop
loope
jge
scas
call
mov
sbb
mov
ret
xor
mov
lds
push
imul
rcrb
call
cmp
and
push
jnp
shll
mov
ret
fldenv
in
sbb
sahf
adc
xor
jl
lods
add
add
push
orb
inc
jnp
hlt
cwtl
jle
ss
in
dec
push
pushf
sbb
inc
mov
js
xor
push
sahf
leave
or
xor
jno
cmp
sub
loope
aad
es
ret
into
jbe
add
cmpsl
test
bound
std
out
test
psllw
xor
xchg
aas
dec
push
mov
sbb
mov
push
adc
cmp
push
ljmp
inc
cmp
fwait
sub
inc
add
outsl
fiaddl
iret
outsb
adc
shrl
xchg
stc
dec
dec
in
pusha
les
fwait
dec
cltd
inc
push
test
sar
mov
adc
sub
fisubrs
mov
cmp
popa
pop
ds
or
test
pop
jmp
test
repz
stos
pop
or
andb
andb
jns
and
jno
sbb
enter
in
or
idiv
xchg
and
ss
inc
sbb
les
inc
add
cli
mov
pop
loopne
mov
hlt
mov
shr
test
sbb
jbe
and
sti
std
cmp
enter
sbb
xor
cmp
jle
cmp
inc
loopne
mov
popa
rorb
cld
stos
dec
cli
rclb
std
lods
xchg
mov
test
inc
mov
fldt
mov
push
add
mov
mov
cmpsb
pop
sub
inc
and
jl
aaa
add
mov
out
lahf
les
dec
pop
sbb
rcll
xlat
xor
int
aad
cmp
cmp
sub
sub
adc
std
sub
dec
mov
sub
aaa
adc
dec
or
rorl
sarb
mov
xchg
dec
xchg
int
jl
in
dec
mov
imul
jnp
cmp
cmp
sbb
jbe
testl
jp
pop
mov
dec
push
jle
push
rcl
and
lods
jl
sbb
jb
sahf
insl
xchg
jl
cld
sbb
ficoml
mov
dec
cli
aad
shrl
xor
out
inc
movsl
xchg
xor
jge
out
xchg
fcmovnb
ret
jnp
stos
fcmove
adc
rolb
divb
mov
shl
push
pop
movsl
mov
cwtl
jp
je
fs
test
sbb
arpl
cmp
fdivs
push
negb
popf
xor
daa
push
sub
inc
cli
sbb
dec
ljmp
xchg
rorb
cmp
addr16
rolb
and
js
jl
cmp
cld
insl
sub
mov
mov
push
in
adc
cmp
imul
dec
fidivl
arpl
pop
dec
fidivs
sub
addb
test
mov
pop
sub
xchg
lret
jbe
push
mov
bsf
sahf
cmp
pop
cld
leave
add
push
daa
outsl
xor
call
test
push
notb
adc
cmpsb
xor
loop
repz
out
mov
mov
sbb
adc
ds
hlt
aaa
dec
cmp
adc
test
test
jmp
mov
scas
inc
cli
leave
clc
and
mov
lds
or
iret
jecxz
ds
jl
mov
push
push
rol
jns
jb
sbb
mov
data16
sahf
jle
rclb
enter
rcll
xor
ret
shlb
fs
xor
lret
js
or
fyl2xp1
fs
fstpl
jae
cld
push
mov
adc
jae
pop
mov
cli
scas
test
addr16
shrl
xor
flds
mov
sbb
or
in
dec
jecxz
jecxz
xor
or
cmc
mov
out
ret
inc
daa
and
jle
ja
rcrl
sub
xorl
dec
loope
inc
or
mov
stos
aam
pop
cmp
sbb
jne
fcoms
imul
out
dec
mov
jl
int3
sub
loop
testb
inc
sbb
mov
les
lea
or
roll
lret
xlat
xchg
fwait
and
or
xchg
mov
loop
dec
mov
dec
push
mov
loop
add
daa
es
daa
ret
dec
cmp
mov
stos
adc
pop
ds
loop
dec
cmp
inc
fdivl
sub
icebp
mov
in
jnp
ljmp
pop
iret
pushf
fidivrs
hlt
dec
cmp
inc
aaa
xchg
sbbl
push
dec
adc
jae
xchg
dec
add
pop
cs
xor
fwait
lock
jmp
lods
loopne
lahf
xchg
ret
jl
add
sahf
scas
inc
xor
sahf
fbld
insl
fsubs
aad
imul
rcrl
add
mov
daa
adc
mov
mov
sub
aad
insl
divl
fisttpl
das
pusha
and
mov
and
data16
add
adc
xchg
test
dec
out
mov
xor
gs
mov
pop
sub
into
xor
daa
mov
inc
imul
xchg
cmc
call
xchg
stos
push
cmp
repnz
in
jae
jb
jbe
ret
cmpsl
sbb
int
fcmovnbe
fcmovnb
rorl
lods
test
fimull
push
mov
shl
dec
and
cs
test
sbb
out
sub
lock
in
out
inc
lret
sbb
pop
add
adcl
inc
sbb
sub
icebp
mov
cs
pop
push
adc
bound
in
sbb
dec
loop
jmp
in
xchg
fptan
mov
inc
imul
sbb
fcomps
or
aas
lcall
jno
xchg
ja
inc
into
xchg
stc
xor
mov
jg,pt
mov
mov
push
sti
pop
pop
arpl
sub
nop
mov
in
push
xchg
loopne
into
mov
mov
push
ja
fsubrl
jle
xor
in
test
shll
pusha
xchg
add
dec
dec
sub
add
xor
lret
pop
adc
cs
mov
repz
cmpsb
insb
jnp
mov
dec
je
test
jmp
ss
sbb
ret
fiaddl
jbe
cmp
fldcw
sbb
shr
lahf
das
cmp
add
test
dec
sti
icebp
jns
bts
clc
sub
inc
ja
mov
xchg
inc
cltd
std
xor
xsha256
cmpsb
adc
or
inc
cmp
push
mov
fidivrl
aas
pop
sti
pop
mov
lea
or
shr
push
stos
adc
jae
xlat
jmp
adc
aaa
jmp
popf
mov
jo
jmp
cmc
push
mov
sbb
pop
xchg
jp
int3
mov
mov
in
ds
clc
mov
fldcw
or
mov
orb
mov
bnd
push
jp
insl
sbb
mov
push
pop
jbe
fcmovbe
and
pop
mov
test
sbb
into
xchg
add
out
ljmp
mov
clc
add
mov
in
loop
rolb
push
jnp
xchg
fcmovnbe
imul
hlt
int
xchg
jl
pop
inc
fcompl
or
mov
mov
js
push
pop
xchg
cltd
mov
sbb
xor
mov
sub
pusha
jl
and
sbb
add
jae
jmp
stc
adc
cld
ja
sbb
adc
mov
cmpsl
jns
mov
scas
stos
cld
add
loopne
push
fwait
mov
movsb
insl
jl
and
xor
mull
push
jo
movsb
popf
enter
pop
sub
clc
clc
jae
loop
dec
or
push
pop
mov
cli
jmp
sti
test
call
or
adc
fucomi
adc
inc
jo
sahf
xor
xor
mov
push
aas
sub
or
jl
sub
scas
push
in
jle
rorb
xchg
es
push
sub
inc
in
mov
xor
push
in
out
pop
repnz
fdivrs
imul
popf
sti
cld
aad
in
inc
out
pusha
mov
mov
push
push
adc
push
xor
sub
in
jge
pop
loope
insb
fistps
mov
xchg
push
dec
push
test
jns
adc
rolb
fsubrl
movsl
leave
or
pop
xchg
push
pop
dec
inc
icebp
pop
push
dec
inc
mov
inc
insl
cmp
stos
mov
jl
cltd
lock
xchg
jo
cmp
sti
call
sbb
lea
lcall
sti
enter
pop
push
mov
jmp
cmp
inc
pop
sahf
jb
mov
inc
push
insl
inc
fisubrl
adc
cmpsl
cmp
mov
lds
mov
mov
fnstsw
mov
and
push
add
mov
es
aad
jb
xchg
mov
jne
cmc
sbb
out
lret
push
test
cmp
jo
lods
rolb
clc
das
repz
pop
outsl
adc
cmp
push
js
xchg
mov
sub
sbb
mov
lret
cmpsb
stc
jns
les
adc
cmp
daa
lods
negb
xor
repz
jo
out
cli
ret
movsl
lods
bound
scas
push
popf
xchg
stc
fldcw
dec
andb
push
popa
mov
inc
std
aas
out
push
leave
push
test
mov
mov
dec
jle
outsb
mov
shll
jne
push
pop
stos
shlb
mov
push
push
mov
loopne
std
xchg
inc
sub
rcrl
adc
loope
daa
jge
and
jns
pop
jg
mov
repnz
ficomps
int3
bound
dec
int
in
or
jge
or
pop
adc
fdivs
rcr
cli
std
adcb
pop
lret
xlat
fadd
enter
and
add
and
shrb
mov
sbb
cmp
data16
xor
cs
and
or
popa
lea
mov
stos
xchg
inc
xor
xor
cmp
push
test
mov
xor
inc
pop
divb
jno
and
adc
andl
sbb
add
adc
sbb
push
cmc
popa
jnp
pop
inc
mov
xor
data16
or
insl
mov
adcl
in
push
gs
mov
bound
sbb
test
cmc
test
push
movsl
cli
into
push
out
mov
adc
push
arpl
sbb
shl
aam
addl
sub
jl
test
test
cmp
inc
sbb
mov
xchg
push
cmp
mov
lods
sub
sbb
xchg
mov
mov
adc
iret
call
das
jnp
ds
sbb
flds
daa
mov
pop
jg
xor
cmpsl
ret
mov
rorb
jge
add
hlt
add
jle
add
stos
mov
or
mov
mov
mov
das
adc
stos
adc
stc
cmpsl
sti
cmp
ljmp
mov
cmpsb
jo
daa
imul
dec
minps
mov
out
sbb
sub
sbb
dec
inc
cs
loop
xor
out
rolb
iret
dec
out
dec
shll
xlat
mov
mov
mov
loop
sbb
mov
mov
notb
mov
mov
pop
mov
nop
loop
inc
mov
cs
inc
cli
stos
or
sbb
or
mov
fs
hlt
lds
bound
aad
push
mov
subb
sub
xlat
int3
pop
inc
jns
fsubl
cs
mov
inc
les
cmc
pushw
jg
pop
in
add
sbb
dec
adc
cmc
in
jne
mov
mov
popf
fs
shrb
outsl
gs
dec
out
mov
cmc
rorb
mov
addr16
and
neg
adc
jle
cmovle
push
add
mov
inc
and
push
mov
fsubr
cwtl
xchg
sar
cmc
jge
xor
jge
fs
incb
loope
jbe
pop
hlt
shlb
dec
sbb
cmp
in
mov
inc
mov
call
pop
pop
in
repnz
and
mov
enter
int
mull
jno
xor
sub
pop
xchg
aas
add
int3
sub
icebp
pop
lods
aam
iret
ja
bound
sbb
in
pop
out
xchg
xlat
dec
mov
mov
sbb
call
sub
adc
fnstsw
ss
fistpll
cmp
popf
jo
aam
shrl
arpl
lock
loope
push
sub
jl
scas
es
mov
imul
pushf
addb
sahf
sub
jae
out
inc
xchg
jae
jne
mov
test
xchg
pop
lea
push
inc
scas
xor
pop
repz
dec
fstpt
dec
icebp
inc
notb
mov
call
inc
cmpsb
push
xor
jne
sbb
mov
lods
and
out
or
xor
mov
cmp
cld
scas
mov
and
xchg
xor
push
cld
xor
mov
mov
ja
and
inc
fdivl
add
jno
stos
xchg
scas
imul
lret
jno
out
ja
mov
dec
cmp
sub
push
jae
sbb
aam
addr16
sahf
push
aam
call
movsb
push
jnp
dec
jge
scas
pop
and
aam
push
sbbl
arpl
inc
mov
test
cmp
pop
repz
popf
imul
mov
mov
imul
xchg
inc
lret
push
adc
ret
jle
or
xor
repz
xchg
mov
sbb
cmp
jo
inc
mov
lods
dec
inc
in
in
rcl
push
or
stc
popf
xchg
cmpsl
mov
call
aaa
js
std
mull
bound
bndstx
cmp
cmp
lret
jae
lea
pusha
dec
mov
imul
adc
lods
add
xor
or
cmp
addb
pop
and
xorl
or
cld
xor
arpl
int3
or
or
inc
stos
jne
inc
push
xchg
out
clc
xchg
mov
sahf
sub
xor
mov
or
pop
mov
ljmp
push
push
mov
addr16
mov
stos
into
ret
push
xorb
lds
or
adc
pop
mov
add
jmp
jb
stos
scas
xchg
outsl
daa
pushf
insl
lret
cmp
xorl
pop
pop
mov
sub
sbb
xchg
dec
inc
xlat
bound
data16
xchg
inc
jno
mov
jg
popf
test
pop
imul
sbb
mov
mov
dec
push
xor
inc
loopne
mov
cmp
and
in
leave
pusha
inc
push
jnp
push
out
int
fldcw
pop
push
out
dec
dec
jne
test
jne
xchg
movsl
jg
rolb
mov
test
jns
mov
test
pop
ljmp
sbb
rolb
mov
outsb
mov
dec
fidivrl
pop
fiadds
sub
sbbl
aas
fwait
sarb
jle
or
cmc
push
cmc
lcall
xor
shl
mov
stos
mov
fmul
adc
lock
ret
int3
jbe
mov
fsubrl
gs
test
mov
faddl
mov
inc
inc
adc
xor
push
aad
fistl
ja
inc
popa
push
inc
inc
scas
add
iret
xor
das
pop
push
add
add
movsl
mov
cmpb
insl
adc
dec
dec
dec
pop
jmp
dec
mov
dec
add
xchg
cmpl
and
mov
lahf
mov
pop
jecxz
mov
test
push
xchg
mov
int
mov
test
stos
les
inc
std
push
les
cmpsl
rcll
repz
clc
xor
lock
dec
and
loopne
push
test
mov
lcall
outsb
test
adc
fs
iret
lea
fs
and
fcompl
loop
enter
mov
sub
sbb
or
loope
sub
test
outsb
in
sbb
and
jle
popa
pop
cs
mov
xor
push
and
sar
inc
and
xor
fidivs
mov
in
jbe
fiadds
movsl
xor
loop
aaa
or
movsl
mov
and
in
in
push
pop
push
add
mov
sub
aam
aad
sti
sbb
les
pop
mov
sbb
pop
push
push
or
lahf
pop
pop
pop
lods
imul
popa
repnz
iret
orb
lds
push
pop
out
pop
sbb
sbb
mov
adc
xor
test
subl
xchg
mov
in
mov
ret
pop
sbb
pop
hlt
sbb
and
in
popl
inc
pop
mov
or
dec
or
adcl
mov
stos
mov
mov
into
aas
mov
outsb
dec
bound
daa
outsl
mov
inc
loop
xor
mov
adc
jl
add
mov
aaa
fidivrl
push
aas
loop
push
xor
add
xchg
jno
bound
pop
xchg
or
dec
arpl
adc
jle
jg
movsb
xchg
adcb
jge
jecxz
lea
lods
idiv
es
push
lret
mov
out
adc
fidivrs
shlb
test
and
iret
cwtl
mov
shrb
inc
idiv
lods
adc
mov
mov
push
fsubl
add
sub
sbbl
jnp
adc
movsl
mov
ja
cli
mov
add
lret
xchg
xlat
jb
add
cmpsl
mov
scas
and
dec
adc
lret
mov
jns
pop
jmp
push
scas
or
pop
sub
push
ljmp
out
sub
loop
jo
add
cmpsl
sub
push
fsubs
andb
int
jne
and
hlt
dec
sub
mov
mov
xchg
pusha
or
cmp
mov
aas
roll
pop
inc
call
pushf
mov
mov
inc
lods
lahf
pop
and
cwtl
stos
sahf
or
add
pop
xchg
pop
out
or
mov
jmp
xor
push
ficoml
mov
leave
pop
sbb
aaa
jl
and
imul
cs
into
jg
jg
pop
movsl
loop
push
jge
sbb
outsb
pop
inc
inc
sbb
mov
add
aam
push
test
pop
mov
nop
repz
insl
pop
mov
ja
adc
cltd
pop
aam
sbb
mov
js
pushf
or
jbe
mov
scas
jb
sbb
xorb
pushf
lds
aad
add
loop
js
dec
das
lock
mov
mov
dec
cmp
jbe
push
das
xor
aas
dec
pushf
out
mov
add
ret
adc
lcall
push
nop
add
sub
sbb
or
sub
dec
mov
les
mov
pop
sub
cmp
data16
lret
cmp
stos
sub
aam
lret
cld
fdivrl
sbb
jns
hlt
mov
sub
dec
add
dec
mov
mov
adc
fstpt
fimull
xchg
loop
test
dec
fistpll
lea
xchg
pop
outsl
adc
rolb
pop
mov
mov
xor
inc
dec
scas
dec
mov
jle
lock
adc
daa
and
push
jp
subl
inc
mov
or
popf
jge
pop
mov
push
lcall
fadd
stos
paddb
add
lret
xchg
jecxz
jne
mov
subl
mov
fstps
pusha
mov
testl
movsl
adc
scas
neg
fmul
imul
sub
pusha
flds
mov
nop
mov
xchg
jecxz
xchg
jle
add
push
fistpl
mov
xor
insl
or
in
test
mov
xchg
fnstenv
shrl
push
mov
movsb
inc
push
inc
mov
ljmp
sbb
fsub
daa
scas
hlt
mov
xor
dec
or
adc
pusha
mov
mov
inc
fnstenv
sub
add
mov
xchg
movsb
sti
ja
das
adc
mov
loop
pop
add
imul
rcrb
xchg
xchg
sbb
jmp
fwait
jns
push
and
notl
cmpl
loop
aad
jb
aas
dec
aad
xchg
mov
pusha
sub
popa
or
sub
add
jne
mov
adc
jg
lcall
pop
mulb
fisttpl
inc
jmp
sbb
sbb
mov
pop
test
or
jle
sbb
gs
add
xor
add
pop
xchg
xchg
xchg
sub
mov
mov
aam
stos
popf
mov
gs
fbld
pop
inc
lret
xor
jo
xchg
jecxz
ficompl
pop
lret
mul
cmp
add
inc
cmc
mov
sub
push
es
scas
mov
lcall
clc
es
push
xlat
add
adc
jp
dec
xchg
rclb
faddl
jp
neg
test
mov
mov
and
fadds
push
test
mov
pop
addl
cld
xchg
ja
in
lahf
mov
mov
jnp
jno
and
ja
inc
mov
pop
push
mov
mov
xor
pusha
insl
movsb
and
lahf
lock
jg
xlat
mov
stc
lods
push
dec
ja
dec
pusha
mov
cmc
sbb
fsts
fldenv
jne
or
into
mov
and
fistpl
cmp
aas
inc
insb
jle
mov
push
orb
lock
cmc
pop
mov
mov
pop
xchg
xchg
jmp
adc
lods
sub
xor
fxch
jp
push
leave
mov
mov
push
mov
sbb
ss
pop
cwtl
out
insl
jl
sub
dec
sub
xor
dec
cmpsb
jmp
outsl
movsb
adc
call
and
mov
or
and
push
insb
adc
stos
xor
rclb
cmp
add
test
jmp
pop
out
xchg
test
add
jnp
push
jno
pop
jbe
xor
cmp
arpl
mov
mov
or
mov
and
lods
pop
xchg
rclb
cmp
out
inc
cmp
adc
je
nop
out
push
shll
test
cltd
pop
arpl
dec
loopne
jecxz
adc
mov
pop
setns
movsl
cmp
mov
loope
mov
rcll
stc
nop
scas
pop
enter
cld
mov
inc
movsb
mov
lods
pop
sub
loope
ret
popf
ret
hlt
push
in
jge
dec
push
jbe
cmpb
push
cmp
mov
cwtl
add
push
jle
stos
pop
xchg
sub
clc
inc
hlt
cli
imul
jae
fsubl
lahf
test
and
inc
mov
ret
nop
daa
cmpsl
mov
sub
mov
ret
jnp
xchg
sub
mov
mov
mov
mov
clc
shrl
dec
aaa
out
or
lahf
ss
ret
cmp
push
sbb
sub
cmp
xor
popl
adc
push
push
cmp
mov
fadds
inc
data16
data16
test
testb
pop
mov
add
mov
xchg
in
or
push
fbstp
pop
lods
jae
mov
dec
xchg
mov
out
sub
notb
pop
jo
mov
addr16
scas
popa
cmp
in
into
fsubr
sbb
cmp
lea
mov
lods
pop
loopne
push
stc
shlb
xor
cld
xchg
jle
adc
ret
lcall
clc
cmp
jne
jne
pop
out
dec
cmp
pop
lods
inc
lods
repnz
inc
stos
mov
fistl
push
inc
and
stos
mov
out
dec
push
or
jno
xchg
xchg
stos
add
inc
push
mov
lds
out
aad
inc
aam
jno
test
adc
inc
out
xor
in
jne
popf
fistps
cmc
das
cmp
push
into
leave
test
pop
sub
xlat
shlb
adc
mov
nop
fcmove
cmpl
fcmovnu
into
lret
aas
outsl
loop
leave
gs
sbb
test
lods
enter
int
movsb
and
pop
pop
xlat
xor
inc
adc
mov
stos
fcmovnb
mov
dec
scas
fmul
sbb
sub
pop
lret
arpl
in
adc
jns
jp
pop
push
or
or
mov
sbb
cld
xchg
xor
dec
int3
or
ljmp
mov
xlat
pop
jb
sarb
inc
mov
xchg
jo
or
insl
pop
rorl
not
outsl
addr16
or
or
cwtl
stos
cmp
hlt
inc
add
mov
daa
into
test
mov
notb
mov
mov
sbb
push
inc
fdivs
xchg
sbb
mov
imul
jno
loopne
xor
pop
ljmp
push
cmpsb
push
jecxz
push
aaa
jl
shrl
sahf
mov
fstl
fstpl
mov
dec
and
fistpl
pop
std
jae
mov
and
sar
lahf
sbb
inc
aaa
loopne
dec
pop
sbb
cmp
push
push
xchg
adc
mov
mov
sbb
sub
jp
or
adc
or
xor
sbb
and
fwait
sub
test
xor
adc
std
in
sub
dec
fistpl
nop
sbb
frstor
dec
mov
dec
jmp
cli
ljmp
mov
ret
add
ljmp
mov
jg
xor
and
sbb
sbb
insb
popa
fs
leave
adc
pop
loop
cmpsl
xlat
aas
xchg
pop
pop
daa
aad
jns
lods
inc
lahf
sbb
xor
jno
lcall
fcoms
fs
dec
pop
out
mov
xlat
or
adc
ret
or
cmp
pop
lcall
lods
mov
xorl
or
cli
mov
insb
add
sti
mov
pop
adc
ljmp
sub
addb
mov
mov
mov
xlat
rcll
sbb
and
cmc
mov
mov
scas
movsb
mov
sarl
and
or
dec
cmp
test
loopne
leave
mov
gs
jno
sbb
xchg
sbb
sbb
jmp
sub
push
fwait
rorl
subb
push
cltd
xlat
dec
or
add
stc
mov
adc
insl
xchg
add
dec
mov
cwtl
into
sbb
mov
out
ret
pop
mov
shl
imull
out
stos
sbb
dec
lret
ja
dec
jecxz
adc
aaa
push
popf
push
xor
push
loopne
or
adc
in
xchg
push
mov
pop
das
aam
stos
add
test
je
sbb
jno
cmp
inc
jmp
inc
xor
push
int3
adc
xor
sbb
or
cmpsl
push
dec
push
jb
aaa
movsb
jae
mov
sub
adc
lods
loopne
dec
fmull
out
repnz
sbb
adc
cmp
call
push
subb
lcall
outsb
lock
mov
jle
add
pop
lds
sti
mov
cmp
in
pop
xor
jmp
pushl
or
fs
xlat
jmp
or
xor
fmuls
scas
pop
mul
push
xchg
loopne
jge
add
divb
jge
ja
jbe
add
fwait
sbb
pop
insb
addb
pushf
xor
es
enter
push
lcall
xor
pushf
int
mov
arpl
leave
xchg
mov
nop
push
cmp
cmp
jno
in
clc
sahf
mov
leave
pop
cli
test
jle
push
mov
sahf
jbe
push
enter
ds
cmp
mov
dec
lods
fmulp
pusha
jecxz
test
sub
or
not
and
fsubl
jne
cli
adc
into
subl
add
push
mov
jmp
lods
sub
push
jl
out
sbb
sahf
adc
pop
jmp
mov
aad
pop
cmp
not
addr16
mov
ss
out
test
mov
movsb
dec
and
pop
data16
xchg
scas
xchg
push
push
mov
jb
pop
sub
or
dec
subb
jmp
daa
dec
addr16
sub
push
fidivrs
in
pop
lods
inc
mov
lret
int3
cmc
mov
adc
movups
inc
das
and
add
cld
loop
or
sub
jle
cmpsl
pop
push
daa
inc
jle
cmpsb
lock
cmpsl
jno
loope
mov
add
mov
xchg
sbb
loope
in
inc
aas
stc
dec
or
insl
aas
sahf
inc
popf
push
mov
sbb
mov
fisubrs
rorb
push
dec
push
ficomps
out
gs
fcomip
andb
sbb
cmp
les
inc
cmp
sbb
sbbl
inc
pop
das
movsb
in
mov
stos
pushf
movsl
adc
jmp
fcoms
scas
or
das
xor
mov
scas
sahf
inc
xlat
iret
enter
mov
icebp
jecxz
jnp
xchg
xor
cwtl
popa
mov
ljmp
pushf
xor
cmpsl
into
ficompl
mov
inc
bound
gs
push
or
mov
sbb
pop
jmp
das
mov
ss
divl
lods
jp
dec
scas
lret
jb
xlat
pop
jo
mov
push
xchg
out
ret
push
xlat
movl
das
cmovb
stos
mov
push
cmpsl
lods
lret
xor
adc
pop
imul
pop
mov
pop
sub
mov
and
test
inc
inc
sbb
xor
xor
jmp
inc
mov
dec
mov
mov
xchg
xor
aad
jb
pop
pushf
popf
popa
pop
call
enter
cmc
popa
pop
iret
push
imul
and
xchg
aad
fldcw
pop
cmc
inc
mov
aam
cmpsl
dec
in
push
xor
stos
cmp
jge
mov
callw
fwait
dec
in
es
stos
movsl
lea
aaa
pushf
arpl
or
sub
sarb
pop
add
push
sbb
mov
jae
mov
test
int3
ds
cmp
mov
inc
cltd
push
cmp
cmp
shl
or
call
push
sub
sub
mov
jnp
inc
dec
xor
sbb
push
jmp
mov
jnp
mov
cmp
test
inc
scas
pop
ret
or
test
lods
test
inc
mov
push
gs
fs
out
fwait
mov
jmp
mov
fistpl
sub
jbe
mov
and
inc
pop
add
pop
insb
jecxz
cmp
sbb
jmp
clc
daa
xchg
scas
stc
push
aaa
cld
lret
push
and
cmp
add
outsl
jae
loop
test
inc
pop
mov
mov
lods
and
push
xor
out
mov
rolb
dec
and
hlt
fstps
push
jae
lods
pop
call
das
sahf
sahf
or
add
in
mov
mov
push
mov
dec
pop
cmp
push
stos
jmp
cmpsb
cwtl
xor
sahf
mov
xor
enter
negb
sbb
pop
cmc
mov
cs
test
cmp
sub
adc
out
xor
inc
or
jns
cmp
push
sub
fwait
dec
dec
mov
cs
mov
daa
jg
outsb
mov
sub
lea
fidivs
sbb
lahf
jmp
jle
push
push
jbe
hlt
mov
stos
ds
insb
mov
or
inc
adc
mov
push
mov
jge
test
sub
mov
movsb
sti
pop
pushf
jnp
in
jnp
popa
xchg
push
loop
or
gs
cmp
pop
fistpll
push
sub
mov
add
les
maxps
jae
pop
sub
test
fbld
push
jno
and
test
sbb
xchg
jns
fldcw
push
out
cli
mov
xchg
pop
add
mov
mov
jle
popa
xchg
mov
cmp
mov
xchg
sbbl
negb
ret
sbb
jne
out
jecxz
jge
out
sbb
shrl
std
and
outsl
xchg
pop
mov
dec
jmp
push
ja
mov
sub
ret
sbb
cltd
push
mov
dec
lahf
ss
pop
je
sahf
js
rclb
shrb
mov
cmp
dec
test
adc
in
arpl
clc
jnp
insb
popa
inc
push
pop
sahf
adc
out
repz
out
or
mov
call
push
inc
ficomps
aaa
xchg
int3
in
mov
mov
mov
dec
add
inc
xchg
sub
loop
cmpsb
push
jnp
sbb
icebp
sub
mov
shl
and
jl
dec
add
pop
das
into
stos
aaa
mov
cmp
add
adc
add
js
mov
test
mov
or
xlat
sbb
adc
cmp
cs
enterw
or
ja
xchg
push
xchg
loopne
mov
lahf
cmp
roll
mov
out
mov
or
pop
adcl
imul
out
test
push
or
adc
aas
dec
pop
popa
sub
sbb
int
fs
push
xor
adc
dec
in
loop
insb
add
dec
add
leave
add
push
negb
lret
pop
jg
imul
fnsave
repz
movsb
xchg
xor
lods
out
jmp
inc
adc
pusha
dec
aaa
jae
adcl
mov
sbb
lcall
jb
xchg
sbb
mov
lds
loopne
push
fwait
aad
in
rorl
add
gs
cwtl
fsubrl
popf
mov
movsl
mov
insb
and
iret
jae
push
sbb
cmp
xor
push
test
sti
loopne
mov
fildll
cwtl
inc
fisubs
dec
out
push
test
xchg
lcall
sub
and
xor
inc
sub
pop
in
ret
jo
out
add
pop
dec
cmp
xor
xchg
das
rcll
test
repnz
adc
add
mov
mov
xlat
adc
lea
out
fs
lahf
push
jns
sarl
or
popf
popf
and
add
in
xlat
out
inc
or
sbb
sbb
fnop
pop
mov
lahf
push
rcll
or
pop
pop
test
dec
or
hlt
cmp
addr16
pop
push
and
repnz
cmp
pop
shl
cmpsl
mov
and
inc
pop
adc
xor
test
shr
sub
fbstp
sbb
subl
pusha
fstpt
mov
jbe
pop
shll
mov
mov
pop
outsb
pop
outsl
sbb
insb
stos
or
or
mov
scas
mov
push
int3
test
cmp
xchg
lods
pop
nop
pop
scas
sarl
shrl
mov
jg
lret
stos
push
ljmp
ficoml
pop
mov
pop
mov
rcll
addl
imulb
pop
ss
push
movsb
icebp
mov
scas
adc
das
adc
xchg
int
addl
mov
sbb
inc
stc
xorb
xchg
fdiv
decl
imul
inc
adcl
call
and
mov
mulb
jmp
mov
or
out
cmp
mov
or
hlt
dec
push
jge
mov
inc
les
pop
sbb
or
push
out
xlat
daa
mov
cltd
xor
xor
shr
jb
push
out
jg
mov
imul
add
sub
sete
adc
insl
int3
pop
js
push
loopne
ja
mov
sub
in
sbb
mov
sub
push
jecxz
insl
jae
cltd
xor
orb
push
sub
movsb
jl
mov
mov
mov
popf
push
mov
sbb
daa
inc
sbb
mov
xchg
sbb
adc
cmpb
add
dec
mov
sbb
nop
jno
mov
and
lock
out
ret
shufps
sbb
or
jp
ds
or
xchg
xchg
pop
mov
sbb
xchg
push
xchg
imul
loopne
in
sbb
loopne
mov
cmp
lcall
out
loope
loopne
std
sub
sbb
cmp
push
popa
pop
scas
stc
dec
test
movsl
imul
mov
leave
push
dec
test
fs
jmp
iret
pop
stos
daa
jp
rol
add
jo
sub
sub
ljmp
cmp
and
in
sti
sub
out
xor
ljmp
xlat
push
in
enter
std
sub
cmp
sub
dec
sbb
adc
lock
mov
bound
xchg
repz
pop
push
pop
arpl
inc
inc
adc
ljmp
fsubs
gs
lret
sbb
push
mov
stos
or
jne
push
pop
ss
js
shrb
xchg
jo
add
or
and
xchg
sbb
stos
lahf
lcall
fstpt
pop
outsl
mov
sub
clc
cmp
add
mov
mov
notl
out
mov
sub
aaa
je
or
xchg
sbb
stos
add
mov
and
pop
ds
loop
ja
ret
hlt
outsb
hlt
mov
cld
mov
jnp
adc
rorl
xchg
mov
pop
cmp
fcomps
rorl
fsubrs
cli
aam
xchg
sub
pop
add
cmp
mov
enter
add
mov
lds
adcl
adc
jae
fcomi
das
in
movsb
push
mov
inc
mov
rcll
aaa
pop
cmp
fistpll
adc
lahf
enter
fwait
mov
repnz
clc
and
cld
outsl
dec
pop
xchg
insl
mov
je
sub
jns
or
add
popf
sbb
inc
test
or
dec
mov
pushf
dec
hlt
jne
mov
rol
hlt
jnp
cmp
lcall
das
out
xchg
jecxz
movsb
aam
mov
call
int
mov
pop
gs
rcll
sbb
ret
push
xor
movsl
ret
xor
cmpb
jp
out
inc
jmp
enter
xor
es
sbbl
mov
xorl
mov
push
xor
adc
push
or
icebp
cwtl
jae
jb
aad
cmpsl
fisubs
inc
imul
insl
sbbl
sub
subl
jo
push
pop
cli
loopne
cmc
cmpb
push
add
inc
jl
into
popa
in
and
push
add
xchg
xchg
andb
les
cmc
lds
lcall
or
out
pop
std
pop
cmp
insb
cmp
out
test
jmp
dec
mov
push
push
mov
loopne
stos
pop
neg
jle
stc
je
jge
or
cmpsl
lret
jge
orl
sti
jno
inc
enter
aas
lret
xchg
leave
mov
mov
fisubl
cmpsl
cmp
in
addr16
rcrl
mov
jmp
popf
cmpsb
add
mov
adc
jecxz
jg
inc
stos
pop
pshufw
lret
nop
mov
sbbb
outsb
loop
test
sbb
push
cmc
cmp
pop
sub
loopne
or
outsl
mov
out
push
and
clc
inc
lretw
xor
mov
ljmp
out
sbb
pop
jne
test
call
cmp
loope
je
xchg
jge
test
xchg
sbb
adc
popa
mov
movsb
or
pop
adc
sub
jmp
out
mov
and
repz
dec
dec
sahf
sub
aam
add
pusha
and
int
rorb
bound
jg
lea
pop
xor
loopne
lea
repnz
xchg
push
adc
xchg
ja
dec
dec
or
dec
cmp
loopne
pushf
adc
mov
aad
sahf
and
std
paddusw
cltd
arpl
push
leave
adc
pop
mov
out
mul
call
dec
fs
jno
ret
jl
sbb
adc
imul
xorb
out
push
sbb
or
aas
and
jg
scas
mov
jle
loopne
subl
push
xor
xor
push
or
adc
mov
or
aas
dec
inc
imul
mov
sub
cs
subb
inc
in
hlt
sbb
jmp
push
push
xchg
xor
pop
xchg
mov
push
xor
cmp
pop
cltd
pop
out
aas
popa
and
inc
lods
inc
jbe
repz
lret
lret
cmp
ss
inc
outsl
push
sbb
inc
jecxz
jae
lds
pop
add
repnz
add
add
jmp
pop
testb
nop
sti
dec
lea
mov
popa
cli
pushf
bound
adc
dec
or
jo,pt
std
test
or
popa
test
pop
pop
inc
mov
fucomp
into
test
xchg
fdivrl
sbb
add
xchg
pop
jae
mov
sub
jb
jp
add
dec
xchg
fisubrs
orb
fsubrp
shr
add
add
mov
loop
scas
lcall
in
clc
sub
xchg
shrb
push
loope
mov
in
mov
enter
imul
frstpm(287
in
mov
pop
xchg
inc
push
cmp
dec
ret
dec
fucomip
jns
jge
adc
fadds
pop
bnd
pop
adc
xor
lods
leave
push
ret
ljmp
xchg
push
add
cmp
mov
ss
jecxz
out
out
incb
cwtl
sub
dec
gs
pop
mov
cmpsl
enter
cmp
popa
daa
fistps
adc
int
mov
jns
pushf
mov
cwtl
pop
ja
outsb
sub
mov
inc
fcomi
xor
or
hlt
xor
xor
sub
pop
ds
in
sub
xor
mov
pop
int
nop
pop
bound
fdivp
xlat
int3
lds
jb
or
pushf
scas
add
add
loope
mov
cltd
sub
imul
repnz
jbe
out
adc
hlt
inc
lock
mov
push
mov
fyl2xp1
xchg
test
addl
adc
mov
or
and
shll
repnz
sbbb
dec
shlb
mov
clc
cmpsl
xor
inc
into
loope
lods
lock
bound
leave
icebp
adc
in
jo
push
pop
sub
notl
jle,pn
sbbl
jnp
dec
mov
mov
ret
lcall
ljmp
and
push
adc
cmp
std
fsubs
lret
pop
pop
lahf
ss
outsb
stc
jp
xchg
scas
push
xor
outsb
les
sub
mov
push
sbb
insb
stos
sti
inc
xchg
loop
ss
mov
jge
cs
imul
and
xchg
pop
push
jecxz
enter
and
inc
pop
jbe
into
push
sub
inc
inc
popf
mov
pop
cmpsl
and
mov
xor
rcll
pop
pop
pop
aaa
mov
leave
mov
cmp
mov
fwait
sbb
cli
enter
mov
xor
xchg
loop
stos
pusha
call
jns
push
mov
or
jns
cmp
and
and
pop
frstor
loop
sub
out
mov
push
dec
in
rclb
or
cmc
dec
stos
and
shll
sub
test
into
mov
push
aam
sbb
push
popa
xchg
pop
xor
enter
cmp
dec
dec
pop
dec
mov
and
scas
test
push
push
mov
push
lock
popa
mov
stos
xor
sub
movsl
or
jnp
jecxz
call
xor
into
sbb
fistpll
mov
dec
arpl
cmpsl
mov
adc
sbb
adc
fistpll
arpl
andl
add
imul
bnd
nop
fimull
in
aad
nop
nop
bound
icebp
sbb
repz
adc
fstps
sub
xchg
push
xchg
jno
jnp
sbb
cmpsl
adc
cmp
stos
push
xchg
xor
jbe
insb
adcb
xor
lds
aam
jmp
lods
inc
fimuls
mov
stos
jo
xchg
pusha
daa
fwait
mov
aam
out
and
cmp
push
out
or
cmp
daa
stos
inc
xchg
loope
xchg
out
fisttps
dec
fbld
mov
outsl
ds
stos
jbe
mov
push
xor
adc
pop
out
dec
cmp
jne
xlat
into
dec
xchg
add
das
cmp
jae
testl
xchg
into
stos
fnstcw
adc
mov
push
jl
js
fisubs
push
sub
adc
add
cmp
jbe
xchg
shl
cmpsl
out
add
sub
cli
and
hlt
mov
mov
fsubl
xor
je
int3
mov
in
push
ljmp
cmc
aas
cmpsl
mov
negb
jle
or
lods
jge
cmc
pop
mov
sub
sub
ret
xor
mov
push
out
popa
add
out
push
lock
aad
dec
mov
push
lock
mov
dec
push
xchg
das
test
push
sub
imul
js
nop
les
popa
nop
push
xor
movsl
vcvtdq2pd
push
cmpsl
les
xchg
stos
xor
mov
or
mov
pop
sbb
xchg
mov
jge
shlb
loop
lods
sbb
popa
test
inc
jnp
xor
sub
push
repz
dec
jb
mov
jecxz
shr
and
aaa
movsl
lock
jl
mov
cmpsb
mov
nop
mov
ret
rcrb
dec
cs
out
rol
ds
outsl
dec
xchg
rolw
mov
xor
aam
mov
sbb
mov
pop
inc
sbb
xchg
ss
insb
aad
cmp
adc
and
pusha
mov
lcall
and
lods
lret
jb
sub
xchg
sub
dec
inc
pop
les
loopne
iret
adc
cli
fwait
adcb
lods
gs
int
xchg
addb
ljmp
cmp
fcmovu
xchg
adc
jp
sbb
in
push
test
out
bound
dec
stc
xchg
ss
pushf
sbbb
add
mov
subl
in
lcall
ret
and
jge
sarl
xor
cltd
cli
dec
mov
xchg
push
out
push
add
in
xchg
jns
lods
jb
dec
dec
cmp
xchg
add
add
adc
inc
stos
adc
push
dec
loope
ds
inc
and
dec
ja
pop
jp
cmpsl
jmp
xchg
pop
roll
mov
js
mov
sbb
jnp
mov
jbe
imul
cmp
jb
cmp
testl
cmc
push
stos
in
sahf
je
dec
pop
imul
fidivrs
xlat
test
or
jne
xchg
imulb
or
jp
lods
fwait
dec
adc
dec
mov
adc
cli
or
jmp
inc
fwait
cmp
inc
gs
push
sahf
lock
cmp
in
rol
dec
jbe
jne
push
shrl
lds
sahf
pop
negb
jne
or
jl
sub
inc
insl
add
lret
imul
pushf
in
arpl
mov
xor
jle
push
inc
and
inc
jecxz
insb
add
out
pop
and
xchg
stos
arpl
dec
sbb
outsl
jge
sbb
mov
adc
mov
fcmove
lret
cmp
mov
mov
es
test
ret
inc
fcoml
mov
and
ds
sti
jp
ds
xchg
fcmove
mov
test
lods
clc
aas
inc
pop
pop
iret
lods
paddd
jnp
or
mov
mov
std
faddp
insl
ret
ret
rcrl
dec
pop
bound
movsb
jp
subl
push
or
cmp
cmp
cs
insb
lock
pop
into
jge
push
cltd
cltd
outsl
popa
iret
mov
push
fsubs
arpl
xchg
jb
std
xor
std
pop
test
cwtl
push
adc
movsb
cltd
mov
pusha
cs
add
inc
fidivs
fbld
mov
push
es
dec
fs
xchg
insl
inc
cmp
lahf
aam
xchg
mov
pop
adc
push
arpl
ss
popl
push
call
clc
cmp
mov
and
inc
gs
xor
adc
repnz
bound
jnp
xchg
inc
fisubrs
ss
xchg
adc
inc
frstor
fs
adc
jne
ret
pop
push
int
dec
or
cmc
inc
push
xor
mov
test
cmp
es
shr
inc
movsb
test
leave
test
sub
incl
xchg
daa
bound
push
call
adc
sarb
cmp
xchg
lds
arpl
jno
adc
and
test
sarb
inc
pop
xor
dec
loopne
mov
mov
mov
jl
pushf
lds
ljmp
std
mov
inc
fisttpll
push
or
pop
repz
test
cmp
in
test
dec
lahf
and
sbb
inc
aas
fmull
pop
xlat
es
jle
out
fcoms
cmp
xchg
popa
or
xor
loop
sarl
mov
lock
scas
lret
ror
cld
xor
adc
sub
stos
inc
cwtl
adc
cld
test
pop
les
mov
popa
into
mov
stos
int3
fisubrs
xchg
add
mov
inc
and
loop
int3
arpl
inc
lcall
ret
fcomps
or
mov
or
mov
push
adc
add
xor
mov
cmp
test
sti
es
jl
insb
dec
in
daa
nop
addr16
fidivrl
shlb
sahf
stos
js
mov
jge
dec
xor
or
xchg
decl
stc
andb
lret
in
pushw
outsl
push
insl
mov
imul
lock
shr
jne
daa
popf
jg
mov
xor
aaa
xor
xor
sub
pop
test
nop
push
xchg
xor
push
mov
aam
inc
or
lea
lret
cld
mov
mov
ss
xchg
push
or
jg
pop
ljmp
push
out
cmp
repz
push
repz
test
lods
and
loope
sbb
dec
dec
lea
jno
fistpll
jl
cmp
sbb
lods
dec
and
jg
insb
xor
pop
js
xchg
stos
cmp
or
and
xor
push
mov
cmp
mov
mov
xchg
cld
loop
mov
pop
pop
inc
sbb
lds
jne
std
mov
pop
jns
add
in
cmp
lcall
xchg
imul
stos
xchg
outsl
cmpsl
aas
mov
push
adc
jg
shlb
pushf
jecxz
sbb
out
mov
sti
inc
faddp
dec
mov
movsb
jle
cmp
mov
pop
outsl
mov
mov
insl
add
jbe
push
or
fistpll
push
jg
jl
mov
jbe
lret
sbb
mov
je
cmpsb
cmp
jecxz
aaa
lret
lds
cwtl
in
mov
fdivs
in
mov
mov
mov
push
lock
sub
bswap
mov
mov
and
fnstsw
rol
add
fs
adc
add
test
cmp
xchg
dec
outsl
stos
cmc
adc
adc
mov
std
add
sbb
mov
jl
xor
mov
sbb
mov
xchg
pop
nop
pop
cwtl
ljmp
rolb
cmpb
sbb
cmp
pusha
testl
add
sub
dec
data16
pop
jl
leave
xlat
mov
mov
xchg
dec
jnp
repz
ss
adc
fsubs
outsl
notl
jle
lret
cli
jne
pop
push
cmc
int3
in
in
test
cld
clc
mov
or
push
enter
xchg
loop
in
xchg
adc
push
or
ret
mov
loopne
ss
test
lods
inc
cmp
sub
repz
add
xchg
sbbl
loopne
jnp
cmp
cmp
or
dec
xchg
xchg
lret
mov
cmpsl
or
pop
lods
mov
insl
mov
int3
sub
sbb
dec
dec
push
or
ja
sub
shll
daa
call
xor
pop
je
repz
inc
sub
or
adc
int3
mov
pop
pop
or
movsb
xchg
mov
push
lret
es
mov
insl
and
push
test
imul
jo
insl
mov
mov
sbb
mov
pop
mov
imul
lahf
test
xor
xlat
mov
and
pop
mov
insb
int
inc
fs
mov
mov
bound
rcll
pop
inc
int3
hlt
adc
out
enter
gs
aad
sub
mov
cmpl
sarb
imul
cwtl
and
pop
ret
pop
scas
mov
push
jmp
mov
ret
jge
outsl
ret
jmp
aam
loopne
icebp
cmc
aas
mov
adc
ss
je
imul
clc
andl
fists
adc
sbb
jne
lret
cmp
cld
xchg
pop
mov
std
ss
sbb
inc
and
fsubr
lds
cli
pop
adc
xchg
push
aam
es
in
inc
cld
fstps
dec
in
ds
cmpb
push
popf
or
sahf
fnstenv
pop
mov
cmp
mov
imul
out
mov
faddl
cmpsl
arpl
loop
jge
rolb
fs
add
mov
je
or
sbb
notl
lock
xchg
repnz
js
sub
imul
sbb
je
mov
mov
cmp
sbb
arpl
xor
fwait
and
and
out
test
clc
in
adc
jge
cmp
or
mov
pop
orb
std
cltd
fmull
in
adc
inc
push
cwtl
jnp
dec
daa
mov
shrl
lock
and
or
cmp
jb
sti
shlb
inc
mov
pop
rolb
bnd
shll
dec
movsb
lods
xchg
outsl
test
dec
dec
pop
jl
pop
jae
jns
repz
ja
js
das
adc
shlb
sub
in
das
jnp
rcll
popf
mov
sub
jns
push
das
aam
inc
and
dec
in
outsb
ljmp
loope
push
xlat
mov
test
arpl
scas
pop
and
shr
push
push
gs
mov
scas
aad
or
add
add
rclb
xlat
mov
sbbb
loopne
sub
jmp
ret
notl
xor
into
out
push
movsl
pop
out
js
rdtsc
push
out
lods
dec
pop
fisubs
add
mov
pop
jno
es
jb
pushf
mov
adc
jb
call
out
inc
adc
dec
mov
fmuls
push
fidivl
insl
pop
test
cmp
cmpsl
sbb
mull
incb
or
mov
adc
jbe
sub
xchg
sbb
or
mov
test
push
jle
xor
jb
dec
in
mov
xchg
cmp
cmp
call
fnstcw
or
dec
cmc
pushf
jge
icebp
outsb
stos
pop
add
lret
stc
je
jbe
jno
mov
fs
xchg
test
xor
stos
add
lar
dec
rcll
sahf
xor
std
mov
mov
into
xor
sub
xor
jg
jp
es
fldt
cmp
dec
in
adc
lahf
dec
das
jbe
jns
clc
push
jmp
filds
stc
sahf
push
nop
test
or
js
out
sub
dec
jne
cmp
cmp
dec
xchg
sub
xchg
xor
mov
sub
adc
jne
nop
imulb
add
mov
jo
adc
cmp
movsb
sub
lds
mov
push
iret
fdivr
xchg
sar
sub
cmpsl
xor
data16
mov
mov
lods
and
out
lods
and
jecxz
jb
rolb
inc
mov
mov
inc
ljmp
push
push
push
dec
aam
pop
push
jae
jge
imull
jle
cmpsl
dec
jle
loope
jl
inc
decb
out
jb
out
les
xor
pop
aad
aad
inc
mov
loopne
sbb
aam
push
mov
ret
je
dec
sbbb
mov
cmpsb
in
pushf
mov
in
sub
stc
jb
cmp
sbb
lea
int3
xchg
decl
loop
ret
hlt
dec
adc
lds
xor
mov
pop
lods
rolb
mov
inc
dec
sbb
out
scas
dec
loope
xor
cmp
inc
lock
xchg
jmp
lock
xor
xor
pop
cmpsl
cmp
dec
std
jmp
outsb
fsts
in
xchg
in
stos
cmp
mov
or
movsl
jp
popf
ret
mov
lahf
push
jecxz
jecxz
sbb
std
aam
insl
mov
repz
or
push
icebp
xchg
inc
cwtl
lods
adc
and
je
ret
andb
data16
cmp
cwtl
adc
fwait
data16
rcrb
push
push
roll
or
or
sbb
rorl
imul
sbb
cmp
daa
mov
mov
enter
and
mov
sub
in
xor
jae
leave
and
mov
sub
cmp
lcall
mov
cs
aas
out
jno
mov
pop
out
mov
dec
add
dec
mov
aaa
in
push
or
mov
test
or
and
xor
jp
adc
cmp
in
cmc
aad
rcll
and
pop
adc
fchs
xor
xchg
jmp
and
mov
adc
scas
fwait
scas
lea
push
adc
out
int3
push
addb
jmp
mov
pop
xchg
sbbl
inc
repnz
xchg
pop
sahf
loop
gs
pop
out
sub
jl
sbb
mov
push
testl
mov
hlt
push
cmc
int
jle
sub
pop
adc
jb
dec
int3
jb
add
enter
pop
ret
mov
lret
es
sbb
mov
popa
lock
add
sub
cmc
fisubrs
jns
mov
mov
push
sahf
fcom
addr16
cld
push
inc
adc
sub
add
cmpsb
ljmp
pushf
sbbb
adc
aaa
mov
jmp
mov
pop
push
inc
xchg
push
mov
add
xchg
xchg
adc
stos
push
push
xchg
aaa
aam
stc
pop
jmp
cli
pop
mov
xchg
das
repnz
enter
jecxz
iret
add
dec
jecxz
es
aaa
sti
and
add
mov
add
xor
mov
and
jb
push
les
pop
mov
and
mov
fcomps
push
jns
lahf
cs
stos
jne
pop
jb
add
fadds
cmp
out
mov
cmp
negb
xchg
mov
mov
xchg
inc
jge
popa
mov
pop
mov
sbb
shll
stc
fisubl
sbb
idivl
cld
lret
insl
adcb
clc
int3
jo
movsb
add
notb
lcall
cmpl
push
sub
sti
or
lock
push
add
scas
push
in
or
bound
cmp
aaa
lret
incb
pop
pop
xor
movsb
fistps
push
fwait
xor
clc
call
push
adc
ljmp
insl
testb
mov
out
inc
push
dec
lret
cmp
xor
bound
fidivrl
mov
mov
lods
mov
mov
push
sti
test
xchg
cwtl
pop
push
loopne
in
insb
xchg
lahf
stc
mov
jge
xchg
pushl
movsl
sti
mov
rcl
ja
mov
or
add
rcll
dec
decb
inc
sbb
or
pop
adc
sarl
inc
mov
addl
or
push
lea
in
mov
loopne
fwait
cs
gs
gs
and
pop
mov
mov
stc
or
mov
inc
mov
jno
sbb
mov
push
mov
push
imul
cltd
negl
mov
imul
push
cltd
cs
jl
mov
iret
imul
stos
subb
sbb
mov
or
mov
cmpsl
arpl
add
dec
hlt
inc
jno
mov
arpl
cmp
xor
xor
push
or
jg
inc
cltd
test
and
adc
stos
cwtl
mov
ds
hlt
lds
lret
ss
test
out
sbb
adc
fimuls
lret
je
hlt
mov
movsb
sbb
push
xor
adc
jb
add
jecxz
and
pop
inc
fadd
lods
or
add
outsb
jp
mov
mov
mov
lods
fstpt
add
push
pop
push
xor
jbe
mov
mov
xchg
js
cli
or
sahf
sub
cmp
arpl
popf
sbb
push
leave
dec
jmp
sbb
sbb
imul
jo
push
ret
in
rorl
fisubrs
xchg
fdivrl
cmp
int3
lret
repnz
aam
xor
mov
lret
mov
mov
loopne
xchg
push
jecxz
lea
mov
dec
jl
and
xor
fs
jnp
in
jbe
inc
add
sbb
push
scas
mov
bound
jne
jb
pushf
dec
or
pop
lods
outsb
js
cmpsl
and
and
outsb
mov
pop
call
mov
push
scas
scas
out
adc
imul
xchg
aas
mov
jmp
sbb
push
cmp
xor
rcl
mov
ret
and
cltd
push
add
mov
mov
frstor
xchg
jne
cmpsb
xchg
jg
jnp
push
lods
gs
aam
xchg
in
xor
mov
dec
cmp
es
inc
sub
pop
outsb
add
push
mov
ficompl
int
mov
add
push
inc
lds
mov
in
push
xor
test
or
xchg
gs
pop
jbe
sub
out
lods
loope
xchg
sub
in
rcrb
dec
mov
rorl
pop
movsl
into
cmp
iret
bound
scas
xchg
and
int
adc
jo
cli
xor
lea
loopne
movsl
mov
andl
inc
pop
hlt
mov
push
fwait
jl
dec
mov
lahf
push
ds
sahf
pop
push
adc
daa
push
aaa
push
stc
insl
adc
arpl
out
test
out
fidivrs
push
in
and
jmp
xor
jne
add
xlat
inc
mov
inc
test
cli
xor
ret
or
je
jecxz
out
cld
xchg
xchg
xchg
imul
movsb
cmp
cli
jns
mov
or
xor
push
inc
dec
lahf
orb
shrb
stos
dec
push
push
enter
jnp
in
shll
movsl
adc
int
or
loop
jbe
sbb
sub
jmp
jbe
add
fucomi
mov
pop
fildl
pop
sbb
int
scas
les
negl
aaa
push
decl
cmp
ljmp
cmc
mov
dec
mov
pop
aad
mov
push
imul
xchg
jmp
and
sbbb
lret
lock
adc
adc
xor
and
xor
fisubrs
mov
dec
popa
xor
cmp
aas
loope
push
mov
inc
pop
bound
jmp
out
and
je
jb
xor
jmp
or
xor
sub
sub
xchg
fnstenv
mov
cmpsb
xchg
loop
inc
fidivrl
xor
out
or
xchg
dec
xor
in
mov
icebp
mov
or
cmp
adc
sub
pop
lret
imul
in
aas
mov
cmpsb
xor
cli
mov
stos
pop
pop
fidivrs
aaa
fs
inc
stos
xor
fstpl
mov
sub
imul
cmc
scas
jb
cmp
stc
ds
test
jbe
push
push
arpl
bound
sub
add
mov
fldt
push
roll
pop
inc
jmp
ds
fdivr
fldt
test
adc
xchg
mov
inc
fnstsw
orl
push
push
cmp
call
mov
outsl
xor
cmpsl
adc
mov
popa
mov
jle
pop
pop
push
xchg
jle
xchg
sub
cmpsl
loop
mov
push
sub
insb
aad
les
sub
adc
pop
cmp
cli
dec
loope
xor
repnz
push
push
adc
fwait
xor
xor
mov
cli
or
mov
loop
sub
xchg
addr16
cmc
or
jo
cltd
cmp
scas
dec
neg
mov
out
repnz
sti
mov
fildll
out
lret
shlb
stos
lahf
testl
sbbb
jb
ljmp
cmp
aas
adc
lret
icebp
popa
pop
clc
adc
mov
mov
in
int
inc
pop
notl
mov
das
imul
add
mov
imul
orb
jne
jno
sub
sbb
sbb
and
scas
cmpsl
xchg
push
push
xchg
and
cmp
stc
xor
pop
dec
sub
pop
loop
int
dec
loopne
jmp
or
dec
mov
popf
scas
and
testl
and
cmpb
sub
mov
int
wbinvd
pop
mov
adc
mov
shll
push
sahf
mov
cmp
clc
and
notb
mov
inc
in
sarl
cmp
mov
pop
xchg
aaa
mov
xlat
sub
into
shl
sub
mov
jno
or
outsb
sub
test
inc
sub
mov
adcb
mov
push
inc
gs
mov
inc
out
pushf
and
std
cmp
stos
xlat
mov
adc
cmp
idiv
insb
push
scas
pop
into
movsl
pop
int3
test
add
dec
test
call
icebp
loop
pop
adcl
stc
lahf
jne
mov
pop
ja
les
testl
adc
adc
cmp
push
inc
add
dec
jl
xchg
das
pop
repnz
mov
lahf
sbb
out
dec
mov
inc
adc
xor
jle
jmp
mov
or
mov
mov
jg
sub
stos
xchg
cmp
dec
xchg
ja
ljmp
jno
sub
scas
fcomip
inc
xchg
and
push
outsb
cli
inc
dec
loope
or
mov
cmpsb
fidivs
cmpl
sbb
in
sahf
rol
mov
repnz
push
daa
fnstenv
fxch
aas
pop
mov
test
fiadds
cmp
pop
repz
enter
fldcw
cld
push
lods
mov
pop
bound
int
cmc
push
into
fcmovu
mov
loop
das
pushf
test
movsb
pop
stc
cmc
inc
movsb
adc
jp
inc
mov
jnp
ja
add
scas
xchg
sub
gs
sub
xor
divb
add
mov
xor
dec
iret
adc
mov
ljmp
outsl
cmc
push
push
or
stos
xchg
mov
xchg
repnz
mov
fwait
xchg
mov
inc
mov
js
push
lods
xchg
push
ds
repz
popf
cmc
test
inc
scas
push
push
add
aas
in
jo
cwtl
loope
cmpsb
fs
scas
cld
mov
in
jmp
pushf
xor
fists
pop
cmpsb
icebp
push
scas
call
mov
sahf
cmc
ja
jp
andb
push
mov
pop
mov
push
and
xchg
mov
jno
jl
adc
fsubr
jo
fsubrl
push
rcl
addr16
lahf
pop
mov
test
aam
std
les
fidivl
dec
rsm
in
xlat
out
shrl
pop
jnp
shl
mov
jmp
and
xlat
ss
es
pop
add
fidivs
outsl
sbb
mov
cmpsl
mov
push
xchg
jg
sbb
hlt
sub
cmp
sbb
dec
mov
jne
sub
inc
jo
pop
mov
add
xlat
or
inc
in
dec
mov
jne
ljmp
inc
lret
jno
shrb
sbb
sbb
bnd
daa
add
testl
and
mov
adc
and
push
jnp
in
frstor
jns
test
push
rclb
mov
push
push
lcall
mov
mov
jns
fs
jle
mov
add
xor
scas
fsubrp
cmpsb
lock
pop
xor
decb
ror
pop
push
pop
into
cmp
push
jns
jne
and
and
pop
lahf
mov
mov
ja
push
fdivp
inc
dec
xchg
jg
jno
or
dec
cmpsb
mov
out
int3
mov
ljmp
jne
je
sahf
xor
cld
cmp
dec
and
cld
mov
mov
shl
popa
pop
fidivrl
adc
das
mov
xor
out
ret
jle
fwait
mov
std
mov
aad
sub
std
push
mov
or
call
mov
rorl
imul
lea
inc
aaa
or
and
push
inc
cli
dec
and
cld
ffree
jno
jg
sbb
nop
stos
mov
movsl
adc
push
xchg
add
jb
lahf
pop
cmp
adc
mov
inc
jecxz
push
xor
fdiv
inc
inc
pop
sbb
pop
mov
mov
push
es
addb
into
pop
repz
insb
leave
lods
pop
call
or
push
mov
ljmp
push
insl
push
popf
jp
pop
cmpsb
push
inc
adc
inc
cmp
xchg
pusha
pop
std
test
lock
sti
xchg
repz
push
pop
loopne
xchg
adc
repz
cmp
pop
loopne
mov
stos
xchg
lret
aad
std
lods
dec
clc
sbb
push
std
sbb
jae
sub
or
pop
dec
test
mov
pop
cmpsb
mov
jp
inc
mov
out
mov
repz
fisubl
test
rorb
lcall
xor
xchg
mov
movsl
lea
filds
fucom
ja
das
subl
or
cmp
idivl
aas
es
repz
jmp
mov
cmc
loope
scas
inc
jns
insl
in
pushf
ret
in
mov
clc
mov
or
pusha
lods
pop
scas
vfrczps
ss
push
jl
mov
ret
fwait
cmpsl
sti
mov
shlb
les
aaa
mov
jo
cmpl
push
mov
jmp
movsl
fdivrl
test
inc
pop
xchg
mov
xchg
jnp
shr
repnz
xor
sbb
cmp
enter
jg
dec
aaa
adc
mov
mov
stc
xchg
aad
ja
popa
negb
sub
lods
out
stc
cli
outsb
inc
cli
sbb
data16
mov
add
in
out
cltd
cmp
jge
out
movsb
adcb
dec
arpl
cmp
xchg
int3
outsl
adc
xor
cmpsb
sahf
cltd
cmpsl
mov
aam
test
dec
pop
clc
pop
fisubs
or
and
jg
jno
lret
ret
cltd
mov
lret
hlt
pop
subb
sbb
std
xchg
pop
fstl
or
mov
push
nop
jecxz
in
jno
dec
pop
pop
push
xchg
push
clc
in
cld
and
mov
pusha
mov
aam
lea
jecxz
mov
mov
fdivrl
aaa
or
test
push
lock
int
sub
push
push
dec
xor
das
sbb
dec
nop
je
mov
mov
inc
sub
inc
push
bound
pop
pop
or
dec
and
pop
dec
push
inc
xchg
sub
dec
pop
sub
fisttpll
jne
in
lods
xchg
jp
xchg
in
lds
lahf
loop
fwait
cmpsl
jo
fwait
test
jne
adcb
adc
cmpl
cmpsl
sub
push
stos
mov
mov
shr
jl
dec
pop
inc
sub
ret
in
xchg
insl
mov
adc
js
dec
arpl
xchg
int3
in
and
in
test
in
pop
pop
lret
xor
sbb
adc
push
fcmovbe
stos
nop
jbe
cmpsb
mov
push
cmp
int
pop
inc
push
push
scas
lock
sub
cld
push
or
dec
rcrl
jmp
cmp
pop
mul
dec
cli
flds
dec
inc
mov
subb
test
idiv
data16
mov
adc
lods
fbstp
stos
mov
ret
pusha
mov
or
or
gs
pop
in
adc
ds
pop
xchg
pusha
mov
shll
into
dec
aad
repz
jmp
mov
shr
clc
mov
data16
ret
rorl
pop
dec
mov
ds
jo
mov
stos
pop
enter
jl
or
cmp
mov
into
inc
stos
call
test
and
cmp
and
mov
ret
xor
xorb
pop
leave
mov
xor
sub
push
jecxz
pop
sub
pop
jmp
fcmovu
fldenv
push
ret
cwtl
cmpsl
out
movsb
lret
lret
mov
iret
popf
cmp
cmp
inc
push
cld
fwait
aad
mov
arpl
mov
mov
xor
mov
shlb
xorl
push
sahf
fnsave
cld
xchg
mov
inc
sbb
xor
mov
loope
lods
es
cmp
hlt
addr16
pop
cmc
sub
mov
sub
mov
adc
sub
nop
lahf
sbb
add
repnz
add
push
shlb
push
ret
or
loopne
mov
cmpsl
inc
lcall
dec
adc
cmp
cmp
xor
cmp
movsl
dec
int3
arpl
jb
dec
dec
and
imul
les
insb
sbb
into
cmp
inc
cwtl
pop
addr16
in
clc
jmp
xor
nop
daa
leave
lret
or
outsb
push
jnp
jbe
xchg
xchg
add
outsl
inc
mov
repnz
sub
mov
scas
add
fsubr
aam
lcall
imul
es
xchg
jno
shrl
jno
mov
test
inc
dec
lods
add
or
call
mov
pusha
dec
adc
dec
or
push
bnd
adc
push
aad
cmp
test
mov
xchg
jne
imul
test
jbe
stc
cmpsb
sbb
cwtl
jmp
lret
fwait
jecxz
mov
mov
pushf
js
insl
stos
mov
or
lods
and
cli
push
sbb
outsb
scas
sahf
leave
int3
sub
cmc
aam
pushf
mov
dec
mov
arpl
sbb
fldt
rclb
or
out
imul
cmpsb
lock
cmp
ret
xchg
sub
add
mov
shrl
dec
jecxz
data16
pushf
xchg
fisubrl
add
push
push
ljmp
out
addr16
xlat
dec
cmp
mov
jne
ljmp
sti
mov
push
arpl
ret
jae
rclb
dec
xchg
test
fnsave
inc
movsl
mov
cmp
lret
sub
test
sarl
mov
insb
fwait
jle
add
subl
out
ljmp
sbb
mov
push
or
mov
dec
loope
adc
pop
xchg
push
pop
mov
js
mov
call
xchg
mov
jnp
ficoml
adc
movsb
cmc
or
xchg
es
insb
add
xchg
enter
inc
call
push
mov
jae
cmp
js
adc
fidivrl
xor
insb
sar
adc
mov
mov
or
mov
aad
cli
lret
push
shl
mov
xor
int
push
ljmp
fsubrl
scas
jg
das
jns
cmp
sbb
lods
mov
mov
fisttpll
adc
sbb
cli
adc
out
jle
mov
jnp
jns
xchg
mov
cmp
sbb
cli
mov
loopne
lcall
ret
cmp
cmp
sub
pop
cmp
xchg
or
cmp
dec
cld
cmp
dec
pop
adc
test
rclb
jno
fcmovb
or
xchg
imul
aam
jo
lret
mov
push
and
aaa
add
mov
imul
cmpb
sbb
outsl
sbb
mov
inc
mov
cwtl
movsl
loopne
fxch
jb
cmpsb
mov
sbb
inc
mov
mov
outsl
inc
ds
jge
jno
and
jg
sbb
pop
dec
inc
ds
mov
lods
or
sbb
dec
ret
ret
bnd
cmp
push
out
dec
iret
push
mov
add
or
cld
push
xchg
sub
arpl
mov
pop
dec
aas
jg
aas
lds
loopne
ficoml
mov
or
cs
inc
xor
ljmp
pop
jle
push
xchg
mov
cmp
mov
loope
repnz
add
or
sbb
or
lcall
xor
push
outsl
mov
push
data16
mov
dec
loop
sbb
stc
jb
push
and
or
mov
lock
das
shll
jecxz
jb
push
sbb
fistps
jns
inc
cld
cmc
int
cmp
movsb
cld
jns
stc
shrb
insl
push
lock
sbb
mov
push
divl
jbe
pop
cltd
xchg
movswl
sub
add
jg
outsb
pop
dec
mov
ret
sbb
outsb
jl
mov
bnd
xchg
xchg
xchg
mov
dec
gs
pop
int3
arpl
in
adcl
loope
sti
push
inc
aaa
out
nop
das
fldl
push
mov
cmpsl
data16
sbb
push
sub
out
into
or
lret
stos
insl
ja
mov
hlt
icebp
stos
insl
jl
popf
fistl
in
stc
aad
or
mov
jns
into
ds
mov
out
jecxz
cmp
popa
insl
inc
xchg
or
dec
aas
mov
dec
jecxz
sarb
in
stos
popf
xchg
inc
out
aaa
jmp
mov
std
inc
and
inc
pop
and
dec
shlb
pop
sub
enter
jle
lea
push
fnstsw
sbb
out
orb
les
push
lods
subb
xchg
test
jnp
mov
test
mov
inc
adc
insb
xor
push
mov
or
loop
test
push
adc
dec
fcoms
insb
insb
and
xchg
xchg
cltd
dec
loop
adc
cwtl
push
fwait
es
dec
lcall
pop
sti
out
inc
es
and
sub
cmp
jo
lds
das
inc
lret
add
daa
jne
dec
pop
push
push
mov
ret
and
aas
add
out
pop
mov
adc
icebp
sbb
arpl
xchg
inc
jb
jnp
in
call
mov
jp
sub
fisubl
icebp
leave
xchg
incb
outsl
je
ds
fwait
lods
cmp
cmc
mov
outsb
fwait
js
sbb
sbb
sbb
repz
out
cmp
fstl
clc
push
lret
scas
jno
iret
or
in
and
or
adc
add
adc
push
push
out
out
lods
or
jl
mov
cmpsb
jns
or
xchg
daa
ja
mov
pusha
repnz
mov
jg
lock
in
les
cmp
push
outsb
pop
std
lret
clc
jge
jb
sbb
cwtl
lret
xchg
mov
loop
cmc
cld
flds
sbb
call
jns
xchg
in
xlat
or
or
scas
jno
daa
xor
shll
push
inc
mov
pop
sbb
xchg
movsb
pop
loope
lret
int
icebp
shrb
jb
pop
mov
push
fldenv
pop
or
mov
fisubrl
lock
push
es
sbb
imul
jnp
and
inc
adc
inc
add
xlat
push
pop
add
sahf
imul
mov
mov
ja
stos
cli
push
cmc
shlb
mov
xchg
bts
loope
movsb
adc
push
nop
cli
push
push
mov
cmp
dec
jns
add
mov
lahf
pop
sub
pop
jbe
pushf
rcll
arpl
lods
mov
xor
cs
rcr
jae
inc
cmp
mov
mov
add
int3
jno
test
and
pop
mov
clc
adc
jmp
clc
and
push
in
subb
loope
push
push
repz
push
xchg
mov
std
sbb
jle
sbb
mov
or
lea
enter
xlat
and
stc
dec
aam
xchg
cmp
fs
ja
sub
inc
loope
std
and
test
stc
mov
mov
icebp
mov
add
push
imul
loopw
out
cld
movsb
add
imul
pop
dec
fiaddl
js
mov
or
jle
adc
jnp
push
gs
fbld
ret
lods
aam
push
inc
and
aad
aam
scas
sti
mov
ss
loope
sbb
ret
loopne
add
out
dec
pop
sbb
sub
cwtl
and
lock
push
loop
mov
and
xchg
push
rcl
add
call
xor
push
add
mov
xchg
or
mov
adc
cmp
push
push
enter
movsb
xor
in
fisubl
das
test
push
stos
push
lahf
repnz
rcll
pop
xchg
imul
movsb
mov
fs
xchg
xchg
sbb
aaa
jo
out
fcmovbe
imul
mov
jns
pop
hlt
cld
push
loop
cwtl
jnp
lret
hlt
in
fs
add
imul
lret
test
jne
dec
scas
pop
inc
sti
test
inc
cld
add
test
ljmp
sbb
pusha
adc
and
mov
pcmpgtb
pop
loope
popf
adc
inc
xchg
mov
loop
xor
and
push
outsl
mov
add
push
xchg
sub
data16
mov
or
ljmp
popa
xor
xchg
mov
pushf
loop
push
in
sahf
xchg
outsb
or
mov
inc
push
incb
and
inc
data16
cld
sub
mov
icebp
out
popf
fnstsw
lock
into
cmp
mov
divl
mov
mov
xor
sbb
sub
pop
ja
scas
cmp
aam
jl
add
mov
adc
xchg
andl
mov
fs
jne
mov
dec
dec
add
fdivrl
lock
addb
xchg
sub
jno
enter
dec
mov
mov
and
pop
jae
mov
repnz
cmp
cli
inc
int
or
adc
push
mov
jb
inc
lret
scas
mov
sbb
hlt
cmpsb
adc
sub
out
cli
ret
fs
xchg
xorl
add
mov
adc
scas
add
nop
jnp
push
pop
adc
lods
push
jle
stos
cmp
mov
js
mov
stc
xchg
push
push
sti
adc
pop
sub
sarl
push
mov
adc
pop
mov
pop
movsl
cwtl
fs
scas
cmp
repz
jp
ds
es
cmp
xlat
aam
fsubs
out
out
pop
je
jl
mov
add
xchg
pop
adc
jnp
mov
xor
lahf
stos
dec
xchg
push
and
nop
pop
rcll
pop
mov
pop
scas
xchg
iret
fiaddl
pop
adc
lret
call
adc
jg
pop
jno
mov
sbb
push
xchg
and
xchg
mov
repz
out
and
push
or
rorb
push
push
mov
jmp
lods
inc
or
and
clc
test
add
cmpsb
outsl
adc
mov
clc
sahf
into
lods
xchg
jge
mov
loopne
mov
ljmp
fsubs
adc
sbb
pop
out
cmp
cltd
mov
roll
mov
in
dec
jge
out
cltd
jns
mov
loope
daa
inc
mov
mov
xchg
dec
sbb
push
fwait
sbb
push
pop
mov
and
cmp
jl
ljmp
fldcw
jb
jp
iret
xchg
cmc
ret
inc
mov
mov
dec
arpl
shr
les
jmp
cvttps2pi
dec
push
fwait
xchg
add
mov
mov
out
out
dec
cmp
aaa
insb
insl
mov
xchg
xchg
mov
mov
xor
hlt
dec
or
or
and
out
test
mov
sub
addb
lds
bound
daa
clc
pop
pop
or
cmp
out
rcll
leave
fstpt
aad
bnd
push
clc
push
cmpsb
in
sbb
xchg
xchg
jb
shrl
test
cmp
inc
int
dec
and
outsl
scas
dec
out
inc
fwait
iret
cmpsb
dec
fs
push
inc
xchg
mov
in
sbb
inc
loopne
inc
out
in
xchg
mov
mov
push
test
cli
lea
sbb
dec
sbb
cmp
movsb
jmp
dec
sub
cmpb
or
sbb
and
leave
cmpsb
push
inc
jmp
sbb
mov
adc
iret
mov
fsubr
rorl
in
inc
fisttpl
cmp
mov
lods
push
add
out
clc
rcrl
or
fstl
call
lret
js
sbb
cmpsl
test
int3
fs
xor
jecxz
adc
ljmp
cld
sbb
jp
dec
jl
cmc
cmp
push
nop
or
xchg
push
sub
dec
pop
dec
mov
orb
clc
jl
popf
repnz
test
add
xchg
inc
mov
loope
xchg
jl
adc
sbb
fdivrs
ret
push
or
aaa
xchg
sbb
and
dec
lods
and
call
in
inc
outsb
inc
scas
jle
mov
mov
and
enter
out
jp
dec
sarb
push
stc
xchg
cs
xchg
stc
push
mov
push
xlat
jmp
aaa
repz
dec
mov
push
xchg
out
sahf
nop
andl
fsubrp
repz
sbb
js
aas
cmp
xor
out
mov
jne
pop
jo
jb
mov
test
mov
push
mov
pop
hlt
stc
jnp
andb
subps
pop
sub
dec
mov
cltd
repz
and
xor
add
call
dec
loope
inc
sahf
lock
out
xchg
popf
add
ret
and
and
jecxz
jl
jne
lods
mov
shlb
push
loop
aam
xor
cmpb
scas
add
lods
xchg
xchg
fidivrs
adc
test
cs
lcall
outsb
jo
fbld
cmpsl
sbb
ljmp
stos
outsl
adc
fistps
inc
test
into
gs
or
mov
jbe
bound
cld
inc
dec
mov
popf
sub
fchs
mov
mov
sarb
stc
or
jle
pop
pushf
sbb
cmpsb
xchg
sbbl
lret
xchg
xchg
ret
and
jl
cmpsl
insb
sbbb
stos
mov
pop
lcall
pop
cmp
imul
sbb
xchg
push
dec
aaa
scas
pop
pop
rorb
or
and
in
test
nop
bound
daa
sub
xor
sbbb
mov
sbb
pop
loopne
aam
adc
enter
pusha
mov
inc
or
sbb
xchg
cld
mov
xor
sub
cmp
mov
aas
mov
xorl
pop
andb
pop
sahf
mov
icebp
pminub
stos
test
lret
jno
leave
mov
mov
cmpsl
sbb
dec
or
sarb
cmp
cmp
push
sub
adc
lret
xlat
jo
rep
xor
shl
or
ds
lcall
testb
nop
cmp
mov
mov
fstpl
daa
jno
jbe
cmp
pop
outsb
rolb
popf
jmp
pop
cmpsb
mov
xchg
mov
add
jae
inc
mov
pop
das
stos
dec
nop
sbb
insl
add
rcll
std
roll
mov
pop
pop
in
imul
mov
sahf
inc
lods
fdivrl
lahf
in
and
xchg
lods
jmp
sbb
add
cmpsb
test
test
push
add
xchg
push
mov
mov
push
adc
mov
shl
and
in
or
adc
sub
inc
mov
pop
outsb
and
mov
lcall
in
enter
test
dec
ja
jno
rorb
das
push
mov
aad
addr16
das
mov
lea
mov
push
lds
call
mov
stos
lock
pop
xor
out
lock
test
adcb
jge
mov
push
mov
sub
fdivr
jbe
add
sbb
jmp
cld
jno
aad
cwtl
or
shll
aaa
pop
pop
push
je
cmp
lret
mov
or
dec
xchg
xchg
sub
xchg
shlb
push
mov
arpl
in
cmp
sahf
clc
call
jno
or
fisubl
mov
ret
mov
cmp
sbbb
pop
cmp
jle
aad
les
inc
pop
out
jg
mov
mov
fwait
inc
xchg
mov
dec
cmp
xchg
inc
lods
cltd
sub
sbbl
jg
adc
shlb
mov
into
mov
pop
repnz
push
cltd
xlat
loopne
aam
dec
push
insb
jl
dec
or
sub
notl
testl
lea
ret
ficompl
test
adc
xor
sbbb
ret
in
jno
loopne
test
add
inc
das
aad
and
push
jns
lret
mov
mov
add
xchg
std
loopne
cs
idivb
inc
inc
fidivrs
and
mov
je
dec
xchg
mov
add
push
movsl
gs
and
push
or
mov
push
mov
lahf
repz
adcl
xchg
dec
mov
lcall
push
inc
and
std
push
in
push
in
scas
cltd
mov
mov
sbb
mov
cld
mov
mov
cmpsb
in
fwait
and
mov
repz
loop
mov
lret
xchg
int3
fdivp
sbb
daa
xchg
mov
cli
in
aad
rorl
mov
ficomps
mov
int3
xchg
xor
out
lret
adc
and
and
ficomps
ret
lcall
ficoms
movsl
int
call
mov
js
sbb
mov
push
mov
aam
movb
dec
jg
in
clc
sub
lock
int3
test
mov
out
test
cld
add
mov
xchg
mov
dec
js,pn
outsl
pop
jge
mov
loop
call
push
sahf
addl
mov
cmpb
decl
aam
bnd
jbe
jp
pop
add
aam
xchg
mov
mov
jg
adc
sahf
int3
cmpsb
ljmp
jno
in
dec
inc
testb
mov
cmp
outsb
mov
push
repz
push
mov
sub
popl
lahf
lcall
in
stos
movsb
addl
jle
fdivrl
mov
rolb
dec
mov
rorl
arpl
inc
imul
mov
icebp
mov
xor
out
mov
rorl
pop
icebp
fnstenv
pop
xor
loopne
out
cmp
adc
inc
rolb
inc
jecxz
bound
cwtl
add
mov
mov
push
mov
jae
imul
sbb
mov
or
insb
rorb
jne
sbb
push
sbb
mov
sahf
xor
and
mov
adc
pop
xchg
sub
jns
or
push
mov
fsubrp
pop
int3
fdivs
mov
pushf
out
test
iret
mov
rcpps
cmpsb
adc
fsubrs
repnz
outsl
adc
dec
push
push
in
mov
dec
jae
jl
iret
pop
rcrl
lahf
pop
out
jns
repnz
jae
sub
xor
sub
jecxz
jns
stos
repnz
push
or
std
orl
mov
pusha
add
xorb
jg
inc
mov
mov
shrl
das
pop
sbb
adc
jb
int3
scas
in
movsb
int3
out
jnp
mov
mov
sbbb
mov
sub
pop
and
rcrl
push
dec
jne
xchg
fisttpll
sbb
jmp
pop
fistps
pop
stc
and
cmp
adc
mov
stc
rcrb
hlt
fs
push
out
cmp
mov
pushf
not
xor
ja
rcll
test
pop
bts
or
xchg
or
mov
push
stos
jg
push
and
mov
loop
xor
jecxz
push
shrb
xor
icebp
inc
andl
cs
xchg
lret
sbb
mov
nop
push
ret
xor
pop
loopne
jne
std
push
jp
sti
stos
xor
mov
pop
out
push
and
add
xor
mov
jmp
pop
mov
fisubs
sub
jle
xor
jns
shrl
dec
sbb
or
jle
jbe
mulb
push
mov
cmp
push
pop
push
dec
mov
xorb
push
lods
mov
sbb
xchg
lea
mov
ljmp
pop
add
mov
loop
leave
int
aad
frstor
pop
inc
aas
enter
sti
in
ret
rcrl
scas
iret
outsb
mov
jne
xor
shl
push
mov
fwait
shlb
sub
mov
mov
push
or
push
fistpl
ret
mov
fmull
popa
jl
movsl
ds
loope
stc
out
mov
xchg
imul
in
cmp
leave
xor
jb
xor
jl
cmpsl
cmp
ret
inc
lods
and
pop
add
test
jbe
ret
outsl
or
cmp
fisubl
push
test
sub
or
mov
mov
adc
es
lds
mov
fidivrl
je
sub
sbb
dec
out
call
xchg
and
in
out
lahf
xor
jmp
or
rorb
loope
pop
rcl
inc
nop
sbb
mov
enter
rcrb
mov
push
cmp
xchg
in
leave
test
loopne
jne
jnp
pop
addr16
loope
scas
enter
and
mov
cwtl
inc
jno
cmp
pop
insb
loopne
xchg
push
mov
inc
jno
and
and
cmpsl
mov
fdivrl
push
adc
inc
jle
adc
or
cwtl
xor
jb
xchg
pop
scas
dec
and
push
loope
adc
sub
negl
test
pusha
mov
mov
inc
subl
xchg
ja
sbb
pop
xchg
cmp
lret
xor
testb
mov
cmpb
pop
push
lea
mov
pop
into
daa
sbb
sub
dec
dec
add
out
pop
xor
mul
shl
push
js
aaa
xor
dec
xchg
shrb
loop
mov
lcall
push
jmp
and
xchg
ljmp
push
mov
mov
xchg
in
sti
icebp
leave
pop
movsl
into
idivb
fwait
dec
and
aad
jo
mov
sbbl
fcoml
testb
xor
mov
into
jb
push
shrb
aas
stc
je
cmp
jnp
inc
jecxz
pop
pop
fucomip
jg
dec
cmc
add
jl
ficompl
or
out
jg
hlt
cmp
lods
imulb
pop
ret
mov
loopne
mov
jmp
push
or
jp
iret
jle
jmp
xchg
cltd
inc
add
das
mov
mov
jbe
and
hlt
in
nop
daa
or
jecxz
dec
adc
imul
loopne
subl
add
and
rcrb
sbb
enter
jge
inc
jae
imul
jns
int
adcl
pop
pushf
adc
xor
loop
outsl
leave
jecxz
shr
jecxz
addb
test
fdivrs
faddl
adc
jle
addr16
mov
les
xchg
dec
dec
movsl
mov
loope
test
addb
lcall
xchg
jne
hlt
mov
pop
or
adc
xchg
xor
cmp
testb
daa
xchg
int3
xor
gs
repnz
lock
dec
cmp
sub
cltd
repz
push
fstpt
fucomip
jg
adc
push
or
gs
scas
lret
jecxz
mov
sbb
jmp
divb
int
pushf
mov
addr16
outsb
movsb
notl
es
or
mov
ret
fldcw
push
sub
fisubs
add
lock
movsl
inc
jmp
movsb
icebp
jno
inc
fs
mov
inc
inc
jp
movsb
cmp
mov
mov
lret
test
ljmp
adc
xchg
adc
aas
mov
push
pop
mov
mov
push
cwtl
gs
mov
xor
mov
shrl
sbb
jl
inc
push
popa
dec
in
stos
ficompl
into
in
jl
adc
in
mov
push
cmpl
sbb
cmpsb
push
adc
jp
jbe
mov
mov
adc
cltd
mov
pop
xor
pop
mov
cmp
cmp
inc
pop
scas
jno
dec
xor
mov
push
xor
test
xor
mov
fstl
cld
cmp
xchg
push
mov
lea
loopne
dec
dec
stc
or
pop
nop
mov
dec
push
mov
sub
jbe
vpcmpeqb
or
cli
xchg
sarb
int
sub
sub
and
loopne
dec
insb
mov
sahf
popf
iret
dec
xchg
out
cmp
lahf
enter
xor
shrb
inc
in
mov
push
pop
adc
mov
sbb
xor
xchg
pop
outsb
out
mov
push
notl
mov
add
fbstp
push
stos
mov
pusha
andb
stos
hlt
lret
pop
scas
rolb
lret
ss
gs
jp
stc
testl
xor
movsl
inc
icebp
push
dec
cld
movsb
push
push
or
shl
stos
sbbb
lret
jb
repz
mov
cmpsl
icebp
dec
pop
inc
es
xchg
out
sti
rclb
jecxz
or
lods
xor
pushf
jmp
orl
aam
jne
cmp
aas
loope
push
lods
mov
pop
jb
and
pusha
mov
pop
dec
pop
jp
push
mov
xchg
outsb
pop
std
inc
sti
ljmp
mov
cwtl
adc
and
jle
shll
stc
adc
pop
fs
xchg
xor
and
sbb
jbe
bound
cmp
dec
bound
lods
adc
pushf
pop
sti
js
fstpl
sbb
gs
testb
xchg
jp
jg
mov
adc
or
pop
std
int
loopne
and
jle
xor
lea
push
sub
add
lret
mov
pop
cmp
das
and
sbb
movntq
xchg
fwait
pop
lea
ficomps
push
sahf
jno
and
pop
dec
fdivl
fidivrs
and
sti
dec
pusha
sub
icebp
jl
lods
push
fs
pop
cwtl
andb
dec
ja
adc
cltd
dec
outsl
dec
cli
dec
cmp
mov
loope
xchg
daa
aaa
or
repz
ja
ret
fidivrl
andl
dec
pop
ljmp
pop
cs
dec
mov
xchg
add
ret
pop
out
in
push
mov
xchg
aad
mov
mov
sub
sahf
aas
cmp
add
adc
cs
lock
xor
dec
mov
shrb
xchg
ret
fists
xchg
add
lcall
dec
das
dec
aas
outsb
mov
aad
mull
outsb
rcrl
dec
daa
jp
add
jb
leave
mov
stos
test
insb
out
mov
mov
mov
sbbb
leave
test
pop
lds
mov
jb
add
mov
loope
push
inc
sbb
mov
aaa
daa
test
cli
adc
jmp
out
add
pop
inc
imul
and
xchg
dec
pop
hlt
scas
int3
xor
icebp
mov
pop
mov
xor
push
cmc
sbb
cmpsb
or
cmp
movsl
mov
mov
cld
fwait
imul
and
pop
lea
in
cmc
xchg
dec
mov
pop
leave
pop
add
mov
lret
adc
mov
inc
inc
dec
add
std
cltd
fdivrp
sub
outsb
jbe
dec
pop
push
fstpl
mov
sbb
cli
es
out
and
xchg
push
mov
adc
aam
out
add
and
jno
jo
sahf
orl
mov
sub
add
lcall
xchg
mov
aaa
sub
cmp
std
into
stos
push
lret
add
sub
or
dec
add
push
xchg
out
pusha
ret
lret
add
jno
data16
inc
clc
xchg
lret
mov
les
jno
mov
cmpl
sbb
cltd
mov
xchg
cmpsl
cmp
std
jmp
adc
aas
add
push
jl
mov
lret
imul
mov
jo
and
out
sbb
mov
jl
call
inc
xor
cmp
fiaddl
cli
jno
mov
popa
cmpsl
test
or
adc
xchg
xchg
push
mov
sbb
cmp
mov
lock
pop
loop
movsl
push
xchg
jb,pt
push
repz
mov
push
inc
or
and
mov
jl
pop
and
stos
fldcw
xchg
mov
out
adc
inc
shl
xchg
fistpll
adc
or
mov
lret
push
inc
pop
jecxz
mov
xchg
pop
sub
fsubrs
addr16
jae
mov
movsl
push
out
fnstsw
daa
lods
ljmp
mov
or
jg
scas
fdivp
insl
inc
push
fisubl
outsl
mov
loope
pushf
shll
js
adc
adc
imul
mov
jno
mov
negb
push
repnz
repz
lahf
mov
jmp
xchg
cmc
lret
or
pop
add
sbb
outsl
es
rcrb
mov
jns
jnp
sbb
jbe
cmp
shlb
or
mov
inc
cs
push
cmpsl
pop
add
push
adc
mov
ret
popa
jl
sub
pop
pop
add
or
jmp
popl
sub
cmp
idiv
inc
popf
test
dec
dec
jns
inc
int3
push
popa
arpl
clc
sbb
icebp
cmp
les
insb
nop
aam
out
outsl
dec
inc
xchg
and
and
pop
inc
dec
fcompl
add
push
xor
inc
outsl
mov
pop
sbb
cmp
jo
call
decb
jmp
lods
mov
mov
pop
into
pop
mov
mov
mov
push
pop
jb
aas
ja
lea
pop
outsb
scas
lds
jae
mov
or
jnp
call
data16
mov
inc
mov
mov
sti
fwait
mov
in
push
int3
jbe
push
push
dec
mov
dec
fstpt
bound
xor
xchg
cmp
push
lahf
popa
push
jp
scas
xchg
and
fcoml
push
out
jg
sub
xchg
daa
mov
repz
cmp
ja
leave
sub
add
fsubrs
sub
aas
pop
push
out
xchg
jno
mov
adc
subb
loope
lcall
fsubrl
in
inc
stc
xchg
ret
mov
xor
xor
movhlps
in
pop
sbb
mov
jmp
popf
test
int3
jge
lods
pop
mov
loopne
sti
in
xor
stc
fs
xor
rcll
and
and
fimull
out
sti
pop
sahf
roll
scas
ja
jecxz
cwtl
mov
in
inc
out
sbb
and
inc
hlt
rcrb
subl
and
xchg
mov
xchg
test
cmpsl
or
pop
cwtl
imul
jo
mov
testb
loope
mov
popf
push
sbb
popf
test
jnp
xor
fwait
or
fstl
hlt
xor
xchg
sub
and
fsubr
sar
jge
pop
sub
cmp
mov
cmp
dec
inc
xorl
cmp
repz
pop
inc
loope
mov
lods
push
mov
daa
adc
jns
arpl
ficoml
cmp
pop
inc
fisttpll
xchg
bound
push
and
test
std
nop
aad
nop
mov
outsb
das
add
push
lods
mov
iret
xor
add
xchg
test
sbb
jg
push
test
cmp
jle
loope
data16
push
adc
push
cmpsl
and
je
mov
outsl
scas
out
or
les
in
icebp
lods
in
push
adc
sbb
popa
mov
in
mov
jge
add
mov
dec
rcrl
leave
sub
aad
stos
mov
sbb
orl
fdivl
out
jge
inc
sub
clc
push
aaa
adc
loop
mov
imul
je
ret
imul
popa
into
push
movntps
nop
and
aad
xchg
pop
mov
ret
adc
les
dec
ss
jg
sahf
lock
std
rolb
inc
fdivp
test
jg
fwait
adc
rcrl
sub
imul
test
jbe
jnp
mov
pushf
push
sti
insl
scas
xor
inc
out
out
inc
pop
in
lahf
or
pop
mov
dec
popa
mov
pop
loopne
popa
daa
pusha
fildl
sbb
sbb
pop
addb
cwtl
movsb
sahf
out
sbb
push
or
add
jmp
mov
int
je
and
insl
mov
xchg
and
adc
dec
mov
lcall
pop
add
cli
in
mov
sbbb
notb
decl
mov
aam
xor
pop
outsb
cmpsl
fwait
gs
cmpsl
pop
mov
jge
test
dec
stc
mov
cmpsl
sbb
aaa
dec
enter
xor
rcll
idivl
dec
stos
cmp
outsb
iret
adc
scas
inc
mov
lock
inc
fmul
sbb
mov
and
xchg
movb
mov
inc
ljmp
add
mov
roll
jge
sbb
stc
jge
nop
adc
test
fldt
mov
dec
lcall
clc
or
fbstp
push
mov
jno
into
push
les
sub
in
mov
inc
pop
adc
sti
enter
icebp
int
loope
into
testb
mov
mov
and
sbb
ret
pop
lea
sub
mov
jg
mov
popa
mov
ds
cmp
outsl
pop
outsb
loop
subb
mov
push
pop
pusha
lds
testl
sub
das
adc
mov
arpl
aad
push
jno
cmpsb
frstpm(287
pop
xor
xor
pop
or
aaa
inc
pusha
jne
or
adc
jle
push
mov
arpl
jbe
lods
mov
gs
xchg
test
mov
ret
or
jnp
fcomps
idivb
addr16
enter
aaa
dec
in
outsb
sbb
jae
sbb
adc
mov
cmp
pop
aad
inc
sarl
leave
pusha
insb
cmpb
xchg
out
clc
cwtl
fsubl
out
lods
ds
xchg
xchg
cltd
stos
mov
mov
xor
into
mov
inc
cli
fsubl
dec
dec
mov
push
cmp
aad
pop
xor
int3
sub
lds
add
and
gs
sahf
in
out
mov
mov
negb
push
push
xchg
repnz
lret
imul
insb
add
sbb
adc
push
cmpsb
xchg
sub
cmc
pusha
pushl
sub
jmp
or
mov
jge
daa
pop
dec
adc
fnstenv
stc
sti
pop
adc
jg
divb
mov
sub
in
outsl
jle
decl
and
lods
arpl
into
dec
jae
or
cmp
jne
push
imul
push
cmp
jmp
cltd
push
out
ficoms
clc
test
loopne
std
mov
or
push
xor
xchg
xchg
cli
outsl
push
push
repnz
sub
add
pop
lods
adc
subl
popf
mov
and
xchg
iret
mov
out
dec
lret
lret
jge
call
aas
loopne
xchg
loop
jo
out
lock
ffreep
sub
cmp
pop
push
lods
iret
jbe
add
cltd
lock
pop
xlat
cmc
je
push
adc
jb
cli
and
xchg
push
fistps
shrb
sub
pop
push
cmp
pushf
test
jo
in
or
fnstcw
push
rcrl
add
xor
or
rorl
mov
xor
out
mov
shl
sub
cwtl
out
addr16
and
jge
or
sti
jle
xor
jmp
in
inc
pop
pop
stc
inc
testb
jmp
adc
lea
repz
fisubs
stos
sub
int3
adc
sahf
andb
xor
jmp
pop
adc
outsl
mov
roll
sbb
inc
push
cli
jecxz
sub
jmp
loopne
and
gs
cli
pushf
jns
sarb
jg
int
add
ss
js
loope
sub
out
sbb
ss
stos
and
mov
push
sbb
mov
jg
add
mov
jle
fsts
stos
out
mov
jge
xchg
test
out
ds
lds
fsubl
sbb
das
pop
jmp
pop
cmp
mulb
cmp
fidivrs
xchg
inc
lahf
xlat
xchg
bound
dec
inc
jmp
test
subl
aam
sub
push
jp
cld
paddusb
or
adc
jecxz
pusha
mov
insl
jge
ret
pop
insb
outsb
mov
mov
pop
adc
xchg
add
sahf
cwtl
lods
rolb
adcb
js
pop
mov
inc
cwtl
pop
iret
cmpsb
adc
mov
jnp
fbld
test
fadd
sbb
add
outsb
push
xor
in
inc
jl
stos
mov
cltd
or
pop
jb
lahf
dec
fdivs
add
lret
lea
nop
dec
or
repz
gs
mov
jnp
pop
xchg
aaa
sahf
pop
imul
divl
adc
rcrl
adc
add
adc
lods
scas
leave
into
jns
sub
mov
pop
jle
lods
inc
test
movl
mov
mov
rorb
outsb
lds
mov
or
test
xor
fimuls
or
push
bnd
rcrl
rcll
les
mov
jp
std
mov
mov
or
xchg
pop
xor
aad
repnz
lds
les
or
arpl
sub
and
insl
xchg
adc
sbb
mov
ljmp
pushf
cli
test
sub
xorb
fcompl
ret
add
mov
mov
xchg
pop
add
jno
cmc
cs
add
in
push
cwtl
ficoml
ret
stc
movsb
push
ret
bound
fldcw
push
jae
sub
mov
dec
fildl
outsb
xlat
repz
push
pop
dec
mov
std
sub
sub
or
std
cltd
ljmp
inc
push
bound
stc
inc
fsubrl
push
cmp
ds
lea
test
adc
dec
es
jle
les
repz
mov
pop
repnz
push
add
mov
cld
nop
cmp
adc
clc
xor
inc
sahf
divl
sbb
inc
lock
jecxz
push
leave
out
jl,pn
inc
sub
xchg
cs
aad
jge
mov
push
adc
scas
mov
sbb
lret
bound
fwait
push
movsl
nop
jmp
bound
test
push
lcall
aaa
call
cmp
add
dec
cmp
cli
cmpb
inc
jecxz
outsl
cwtl
fimuls
jns
jmp
cld
push
mov
mov
mov
and
ret
dec
mov
jg
scas
aaa
rcll
mov
loopne
mov
jg
and
or
mov
mov
fmulp
xchg
dec
movsl
xchg
xor
sub
inc
repz
xlat
jno
jle
and
jecxz
xlat
pop
aad
pop
sub
adc
inc
arpl
adc
mov
insb
enter
sub
mov
or
fildl
rcr
cld
cmp
inc
pop
jg
loopne
xchg
mov
and
push
xchg
sub
sbb
adc
outsb
and
adc
pusha
dec
xchg
xchg
sbb
test
in
and
movsl
mov
push
mov
xor
pop
mov
bswap
addr16
mov
sbb
and
cmp
sarb
mov
push
jmp
mov
mov
pusha
sarl
faddl
and
mov
push
popa
bound
lea
ss
push
cmp
pop
outsb
loope
notb
pop
lahf
mov
sub
scas
xchg
or
inc
and
push
jl
xor
xor
out
aam
dec
mov
dec
movsl
jg
mov
sub
sbb
cmpsb
ret
jae
mov
in
push
xor
movsb
loopne
scas
adc
les
mov
lret
lret
and
cmpsb
push
sti
push
dec
sti
fcompl
xlat
xor
mov
xor
cmp
xlat
sarl
fnstenv
cwtl
je
inc
pop
hlt
pop
std
setp
hlt
sub
cmpsl
in
popl
inc
xlat
inc
lcall
fdivrs
or
fs
xchg
pop
mov
sbb
out
pop
insb
jmp
incb
or
div
xchg
ljmp
xor
out
jp
hlt
addr16
fsubrp
jns
add
mov
lds
add
xor
fxch
or
pop
adc
xor
ss
out
xchg
xchg
mov
es
int3
faddp
dec
mov
pop
andl
fdivs
pusha
adc
jecxz
sti
mov
icebp
outsl
int3
pop
mov
fcoml
shll
iret
loope
in
sbb
sbb
test
sub
fidivrs
lea
mov
iret
sbb
cmp
cmp
sub
rolb
cmp
pop
jecxz
pop
xor
lock
scas
iret
aam
out
out
lret
loop
sbb
test
add
inc
push
scas
fisubrs
shl
push
mov
push
xchg
jns
xor
movsl
movsl
mov
leave
lods
pop
fildl
add
int3
jg
fbld
cmp
int
test
push
jb
ret
fiaddl
adc
js
pop
in
mov
xchg
xchg
push
std
cltd
fsubrl
movsl
aam
out
add
lods
dec
and
xchg
jns
add
popa
sarl
dec
mov
test
out
jae
jge
mov
adc
mov
loop
mov
test
ja
ljmp
jp
test
int3
mov
imul
bnd
dec
inc
enter
je
pop
push
scas
dec
mov
sub
insb
push
dec
cli
push
pushf
enter
test
clc
mov
pop
mov
fadds
dec
pop
rcrb
popa
mov
les
aad
push
rcll
outsb
push
stos
nop
daa
or
scas
mov
mov
jb
inc
pop
fsts
sbb
adc
repnz
pop
out
jb
out
fwait
sbb
lds
cltd
mov
sbb
fnsave
mov
jecxz
scas
call
jae
sahf
and
xchg
inc
dec
and
addr16
pop
push
ss
cmp
xchg
dec
jecxz
mov
push
lahf
add
dec
imul
jecxz
rcll
dec
mov
movsl
cld
leave
outsb
mov
mov
or
push
addr16
sub
movl
cmp
insl
cmp
dec
call
jmp
push
xchg
loope
xchg
cmpsb
add
das
and
pusha
adc
repnz
cmp
leave
rclb
inc
nop
mov
sbb
mov
sbbl
nop
cmc
sbb
daa
mov
aaa
jg
sti
ljmp
jno
sarl
loop
pop
adc
mov
inc
outsb
mov
adc
insb
cltd
xor
sbb
cmpsb
cmp
lods
mov
loop
jl
fsubl
dec
arpl
dec
pop
xchg
fisttps
js
pop
int3
arpl
inc
sbb
push
jmp
inc
mov
mov
popa
pop
and
sbb
push
cmp
gs
pop
jle
jbe
iret
cmpsl
mov
nop
daa
fmuls
dec
stos
push
mov
loop
and
mov
dec
pop
xor
in
pushl
xor
dec
stos
jbe
add
pop
xchg
xchg
xchg
loop
push
inc
lahf
les
std
movb
jnp
add
or
push
jo
mov
or
and
add
aaa
stc
or
test
loopne
push
adc
pop
xor
ds
push
in
push
mov
pop
pushf
hlt
and
mov
add
xor
xchg
cld
push
add
andl
je
loopne
pushf
xchg
mov
sbb
ds
clc
out
pop
fwait
loope
pop
push
leave
in
les
mov
pop
mov
stos
xor
sub
pop
ss
and
mov
jbe
stc
cs
fxch
ljmp
jecxz
xchg
test
inc
es
xchg
add
mov
jp
cmp
imul
push
das
addr16
jmp
pop
sub
lods
sbb
push
insb
dec
xchg
les
in
in
ja
mov
sbb
out
jl
cmc
ja
push
inc
fiaddl
push
std
pop
mov
and
sahf
data16
dec
stos
inc
jmp
mov
mov
in
test
xchg
cmc
add
jb
mov
sbb
into
sarb
xchg
mov
shrb
cs
xor
scas
dec
std
dec
aas
xlat
mov
mov
xchg
push
inc
adc
jecxz
xor
mov
inc
jge
adc
and
pushf
mov
adc
int
push
nop
jae
repz
mov
mov
pop
gs
push
xchg
jl
mov
inc
xor
in
push
push
cmp
inc
mov
mov
pop
cmpsb
mov
push
test
fidivl
imul
lock
sbb
adc
xchg
lods
in
cmp
push
mov
shlb
mov
cmp
dec
mov
jecxz
pushf
xor
xor
dec
adc
out
fldenv
std
push
jb
mov
sbb
dec
mov
inc
adc
out
push
push
in
pusha
xchg
pusha
sbb
add
mov
jb
pop
fnstenv
popf
sub
gs
and
xor
das
popf
xor
add
or
jbe
push
movsb
mov
push
out
xchg
lods
and
or
fs
xor
xchg
inc
pop
sahf
pop
cmp
sbb
xchg
out
pop
push
int3
cmp
ljmp
mov
inc
insb
jae
sbb
jno
pushf
das
jae
enter
sbb
fs
test
popa
loope
pop
addr16
mov
and
pop
sbb
dec
loop
outsb
or
mov
lcall
int3
and
or
cmp
insb
mov
mov
xchg
add
enter
clc
xlat
insb
js
or
int
mov
or
jae,pt
cmpsb
aad
push
add
xchg
xor
nop
lret
shl
ss
inc
or
cmpsl
stos
inc
add
aad
adc
xor
adc
jnp
jmp
pop
sub
scas
mov
subb
and
lcall
clc
and
inc
jg
inc
sarb
rol
bndstx
xchg
pop
xor
loopne
jl
aas
hlt
cmp
ss
cmp
std
aaa
pop
jo
enter
sub
les
nop
stos
pop
in
add
jne
out
movsl
xchg
or
and
dec
lods
inc
arpl
cwtl
repnz
scas
leave
push
inc
testl
cli
pop
sub
lds
add
inc
lahf
loop
into
xchg
mov
xchg
xor
mov
shll
inc
in
dec
in
xor
pop
jg
insb
cwtl
rclb
cli
xchg
inc
icebp
pop
sub
and
mov
gs
je
jae
adc
lret
jb
fistl
sbb
icebp
pop
push
or
sub
ss
data16
inc
lods
mov
aas
fldl
cli
loope
gs
into
enter
dec
dec
push
cmpsl
mov
or
in
daa
leave
push
adc
add
adc
loop
push
xchg
fwait
mov
mov
mov
sbb
sbbl
adc
hlt
or
fsubr
xchg
popa
xor
xor
ret
fistps
pop
push
ss
or
out
xor
push
push
std
fcmovb
rclb
sbb
arpl
push
mov
sbb
inc
lock
adc
mov
push
xchg
and
inc
push
aaa
mov
xor
imull
rorl
sbb
outsb
inc
inc
repz
cmp
imul
push
and
xchg
into
pop
repz
pop
shrl
pop
xchg
loop
adc
mov
pop
sbb
movsb
pop
mov
xlat
jl
lcall
mov
add
lea
and
fcompl
jns
dec
stos
push
inc
sub
negb
jnp
les
cmp
cmp
xchg
test
adc
pop
sbb
mov
mov
jbe
xchg
add
popf
xor
mov
inc
ss
sub
add
je
loope
out
sti
gs
scas
mov
hlt
push
rolb
mov
bound
add
adc
sahf
subl
sub
orl
orl
push
aas
pop
cld
adc
aaa
fxch
jo
imul
es
or
mov
jae
imul
rcll
cmc
cld
aas
nop
push
repnz
insl
sahf
ljmp
jo
jae
xor
xchg
jae
xor
in
jno
lret
cmp
push
lods
cmp
push
mov
imulb
add
inc
stos
push
sub
js
std
pop
enter
xchg
or
xor
add
cmp
xor
push
mov
lods
sbbb
jmp
test
dec
ds
jecxz
popf
scas
sbb
fs
jbe
popf
cmp
pop
mull
xor
pop
bound
cs
adc
fisubrs
push
arpl
shr
repz
pop
fldcw
or
push
in
int3
mov
je
sarl
or
sub
pop
bound
aaa
or
lods
aam
das
leave
mov
sti
pusha
mov
sbb
incb
jge
out
bound
push
xor
sbb
cmp
rol
push
push
jae
pusha
out
cltd
ret
rclb
sbb
jp
add
sbb
mov
leave
dec
jmp
mov
bound
fisubs
xchg
icebp
cmp
push
sti
loope
or
mov
lods
rorl
sbb
ja
loop
mov
jno
xchg
int3
out
std
sbb
stos
ret
jle
push
addl
rolb
inc
push
cmpsb
sti
mov
jp
jae
test
enter
gs
in
add
ds
inc
push
das
adc
mov
pushf
jg
mov
fxtract
pop
movsb
lods
lock
adcb
inc
repnz
adc
addr16
push
inc
push
mov
ljmp
out
test
sub
aam
fdivrs
dec
cmp
xor
cmp
mov
loope
cmpsl
jp
jle
or
lea
mov
repz
decb
jbe
adc
lods
jno
fildl
stos
mov
test
loope
daa
mov
mov
and
sbb
enter
add
xchg
push
rorl
mov
fmuls
sbb
pop
hlt
adc
mov
xor
sarb
inc
mov
movsl
fs
dec
push
push
in
cmp
xor
mov
and
jbe
hlt
inc
clc
es
je
inc
jns
or
inc
cmc
rolb
in
pop
in
push
jbe
loope
pusha
cwtl
mov
test
out
lea
outsl
outsl
test
push
push
scas
mov
fmull
jns
fisttpll
lret
mov
or
jge
or
movsb
ja
addb
inc
sbb
mov
mov
mov
testb
mov
popa
or
push
adc
mov
movsl
movsb
inc
and
call
cli
or
ficompl
adc
lret
xchg
dec
sub
mov
or
es
sbb
jnp
cwtl
xor
in
and
iret
aad
cwtl
je
out
test
and
aam
jae
movsb
popf
xor
roll
mov
cli
jne
add
call
mov
add
pop
sub
sbb
pop
cmp
xchg
cmp
push
xchg
inc
loop
mov
dec
or
cmc
jbe
jg
lds
jmp
fbstp
jnp
test
xchg
mov
add
out
iret
push
mov
mov
cmp
add
subl
aam
enter
push
or
xor
push
cmpsb
pushl
test
ja
inc
adcl
adc
pushf
xor
jecxz
in
mov
pop
and
sti
xchg
lock
mov
pop
out
mov
or
ja
mov
sub
test
outsl
lock
outsb
ja
outsl
xchg
xchg
inc
dec
nop
inc
faddl
adc
jecxz
sbb
jno
loope
xchg
add
insb
sbb
xchg
sbb
jo
insl
and
inc
pop
push
jmp
mov
pop
ds
les
add
push
xchg
pop
sub
jl
pop
cmp
xor
cltd
insl
into
jmp
mov
sub
xlat
addr16
test
rcrb
cmpb
mov
mov
loope
pusha
push
out
stos
jmp
sbb
xchg
ret
sbb
fnstcw
shrb
jb
mov
push
and
into
mov
adc
pusha
stc
test
sub
fidivrl
push
mov
out
arpl
hlt
fistpl
jbe
adc
ss
pop
and
insb
ret
mov
xchg
fnstenv
mov
int
faddl
ficomps
mov
faddl
jmp
push
int
cld
cmp
dec
and
dec
adc
clc
xchg
js
test
fyl2xp1
mov
push
jmp
xor
fbstp
inc
das
pop
mov
pop
loope
cmp
add
testb
mov
lds
sbb
lods
js
pop
or
and
jmp
push
mov
pop
fs
call
mov
cmp
fs
insb
popf
or
mov
pop
xor
mov
fsubrp
lret
fs
lcall
mov
pushf
dec
jecxz
lods
hlt
mov
ret
sbb
sbb
movsl
icebp
cmpb
push
popa
stc
imul
loope
mov
add
pop
shll
gs
out
hlt
fwait
mov
in
dec
mov
shrb
call
icebp
dec
mov
xchg
je
incl
push
movsl
ja
dec
inc
xlat
jle
aaa
loop
mov
jge
mov
adc
push
mov
shll
mov
adc
jo
or
push
lods
mov
sbb
loope
jle
mov
int
inc
leave
in
aaa
jae
jbe
aas
gs
mulb
jmp
sbb
int3
sahf
cmc
mov
ret
fildll
lret
xor
push
roll
std
cmp
das
lds
adc
mov
insl
push
mov
out
add
stos
mov
push
xor
or
je
orb
outsl
xchg
xchg
push
push
aam
aas
or
fwait
inc
jmp
cs
repz
loope
ficoms
data16
push
rclb
jl
outsl
push
iret
mov
mov
dec
inc
jl
outsb
lds
xor
inc
and
dec
ljmp
leave
push
mov
std
or
test
cltd
into
loop
cltd
and
imul
inc
pop
test
mov
adc
lahf
dec
mov
xchg
cmpsl
fwait
mov
mov
shrl
cmp
mov
test
pop
mov
lds
ss
mov
add
test
inc
inc
fdivp
fxch
xor
fisttpl
shrb
jno
shld
inc
jle
in
mov
sub
mov
xor
push
add
ficoml
cmp
or
imul
shll
enter
fcompl
or
xchg
mov
mov
test
lret
mov
rcll
insb
scas
push
push
and
sbb
inc
call
xor
pop
push
jno
cmp
aaa
dec
mov
pusha
jo
insl
rcrl
data16
sbb
xchg
jecxz
inc
fsubrs
cli
test
fisttpll
xchg
jb
aaa
and
insb
icebp
cmp
imul
stos
icebp
daa
xor
test
adc
dec
stos
push
push
xor
adc
js
xor
and
push
mov
xor
ds
adc
testb
popf
aas
icebp
orb
adc
in
dec
andl
jne
jge
xchg
out
inc
cli
inc
loopne
icebp
ret
add
ss
ljmp
push
push
jb
movsb
test
adc
jle
lcall
fstpl
sub
pushf
sub
or
jne
js
and
xchg
decl
pop
popf
xor
jg
jecxz
fbld
sbbl
cmp
mov
xchg
jge
sub
into
xchg
jbe
in
repnz
fisubrs
insb
add
xchg
clc
pop
orl
inc
bound
fcomps
das
mov
cmp
jge
cld
ficoms
fnstenv
lods
iret
jecxz
stos
lret
xor
lahf
xor
add
pop
bound
sub
add
jl
pop
jb
pop
mov
xchg
int
mov
out
sbb
sub
push
cmp
aad
iret
gs
pop
dec
sub
shl
rcll
sub
mov
stos
adc
mov
es
cli
adcl
adc
xlat
push
or
jae,pt
push
lahf
and
jns
mov
mov
cld
jge
sbb
xor
mov
jg
mov
int3
shlb
adc
fistps
stos
dec
leave
dec
hlt
push
sub
add
cmp
aas
push
adcb
loopne
arpl
xchg
test
pop
into
out
adc
mov
mov
xor
lret
mov
addr16
mov
dec
adc
adc
dec
sahf
mov
fldt
inc
jmp
xchg
adc
push
cli
in
dec
test
dec
loope
jbe
sub
lea
lods
and
aaa
mov
sbb
mov
out
stos
mov
into
rorl
push
adc
call
repnz
sub
inc
mov
test
add
mov
mov
jle
dec
adc
mov
inc
jmp
fwait
sti
xor
or
repnz
push
outsl
test
lods
cmpsl
pusha
pop
icebp
mov
push
adc
adc
pop
repz
sahf
xor
jns
mov
outsl
rorl
divb
mov
jae
jns
fsub
inc
sbbl
mov
andb
or
insl
cwtl
mov
mov
lock
fdivrl
jns
xchg
testl
push
jbe
mov
sbb
dec
jp
xchg
xor
mov
andl
add
mov
xchg
movsl
inc
bound
das
jno
dec
out
inc
lock
xchg
insl
sub
movsl
in
and
cs
out
daa
adc
jae
lock
call
rcrl
repnz
in
scas
fiadds
pop
jo
nop
and
shr
xorl
or
or
inc
mov
shr
mov
pop
orl
gs
fnstenv
push
jle
xchg
push
mov
inc
pop
lods
jmp
mov
mov
mov
sbb
jnp
jno
cmp
insb
jle
xchg
out
push
int
or
sbb
lods
push
cmp
fwait
int
dec
push
jbe
add
in
pop
dec
push
into
fucomi
rol
popa
mov
call
aas
rolb
push
pop
icebp
jae
rcl
xchg
fimull
or
mov
pop
ret
adc
loopne
or
lcall
jmp
cmp
cmp
jge
test
fmull
push
xor
pop
or
jmp
gs
stos
je
xchg
and
ret
sbb
pop
jbe
mov
clc
movsb
xchg
f2xm1
mov
es
decb
sbb
xorb
mov
jae
jle
xorb
dec
jecxz
add
outsl
sbb
cltd
cmp
cmp
out
scas
xchg
mov
push
dec
dec
fcomip
es
lock
push
daa
xor
ja
lcall
test
xchg
jne
dec
dec
std
xchg
adc
jecxz
xchg
xor
hlt
xchg
jp
add
cmp
lahf
pop
jg
and
leave
xor
xchg
call
fidivs
sbb
jp
mov
push
popf
leave
lret
or
popa
xor
dec
add
shlb
bound
mov
stos
popf
dec
into
cmp
pop
and
popf
cmc
mov
nop
and
out
dec
and
fisubrs
pcmpeqd
and
insl
dec
movsl
ja
jmp
or
nop
popa
add
inc
mov
addr16
fdivrs
pop
xchg
enter
sbb
sbb
nop
jns
roll
jb
push
sbb
sub
cmc
push
dec
push
outsb
mov
add
test
loop
add
test
xchg
into
ja
ljmp
push
adc
mov
mov
cmp
in
push
dec
pop
insb
sub
sar
pop
mov
pop
es
js
or
mov
and
inc
fs
xchg
jo
ljmp
mov
jle
and
dec
ror
jno
or
iret
jl
jmp
adc
mov
mov
cltd
jle
mov
push
lret
mov
add
adc
pop
push
xor
movb
mov
jo
fsubrl
imul
loope
push
push
fnop
inc
push
popa
inc
dec
pop
xor
movsl
lds
jl
es
int
mov
or
pop
lock
or
idivb
mov
pop
sbb
daa
mov
in
stos
sbb
cmp
mov
movsl
and
ret
movsb
fidivrl
pop
enter
lahf
jb
in
xchg
es
dec
sbb
loop
jg
roll
pop
mov
push
add
insb
or
movsb
in
adcl
fbstp
xchg
and
xchg
arpl
push
jle
loop
and
gs
jnp
xchg
inc
adc
mov
mov
sbb
in
dec
mov
cwtl
and
and
enter
and
arpl
movsl
std
push
mov
in
inc
mov
push
into
mov
lods
inc
mov
les
inc
ss
jge
mov
je
aaa
fisubrl
mov
je
mov
fs
dec
scas
stos
stos
mov
jp
leave
xchg
test
pushw
inc
and
aad
ret
inc
popf
stc
jmp
movsb
ss
in
loope
sub
nop
arpl
sub
or
into
inc
fidivs
mov
xchg
gs
lock
sub
loopne
repnz
mov
nop
mov
push
nop
cmpsb
pop
mov
xor
scas
cltd
loop
pop
nop
adc
cmp
xchg
mov
fmuls
loop
sbb
test
add
rorl
mov
jmp
add
sbb
cltd
jns
jb
fnsave
lret
push
rcll
stos
out
xor
out
pop
xchg
or
aad
dec
sbb
cli
adc
inc
je
repz
call
jbe
arpl
daa
fldt
push
stc
mov
fdivs
es
test
outsb
and
jae
pushf
mov
ljmp
xor
jbe
lret
faddl
sbb
int
sbb
push
mov
mov
into
outsb
test
mov
push
jecxz
xor
repnz
fstpl
popa
ss
sbb
add
aad
mov
mov
rcl
fiaddl
cld
push
cmpsl
xor
icebp
testb
mov
adc
fisubs
popf
shrl
das
mov
pop
jecxz
jecxz
pop
sub
shrb
test
pop
pusha
jl
in
shrl
pop
das
pop
jbe
repz
dec
mov
and
push
push
dec
mov
xor
stos
jno
fnsave
mov
jmp
insb
in
or
mov
mov
ret
jae
dec
iret
dec
nop
repnz
push
out
out
pop
movsb
int3
mov
cmp
mov
sbb
jg
push
mov
add
xor
sub
scas
mov
sub
cmp
call
fsubs
clc
xor
jge
ljmp
pop
inc
adc
movsl
inc
and
daa
mov
fs
push
xchg
sbb
sbb
cmp
lock
ret
in
call
mov
add
int3
xor
jle
sbb
notl
push
xlat
rol
das
or
adc
stos
cwtl
push
jmp
repnz
rol
fwait
inc
push
xchg
cmc
or
jbe
cmp
das
cltd
arpl
mov
cli
jne
xor
call
jnp
fistl
stos
add
jns
and
leave
push
cmp
push
ror
out
in
jne
insb
lahf
mov
adc
or
ljmp
lcall
cld
sub
mov
subb
lahf
mov
sahf
sub
cld
xchg
sub
in
fwait
ret
fdivs
push
loopne
ja
mov
push
inc
mov
mov
addr16
fs
sti
mov
sub
test
sti
adc
andl
sub
xor
shl
push
push
jne
jmp
jmp
mov
or
push
pop
sbb
adc
mov
iret
adc
addr16
cmc
push
out
es
push
sub
jp
gs
sub
adc
in
test
xchg
sub
push
punpcklbw
xor
sub
rorb
xor
push
adc
mov
movsb
addb
shll
xchg
mov
rorb
xor
cmpsb
imull
fsts
test
popa
fcompl
mov
rol
or
js
dec
mov
jp
test
js
fucomp
ret
sti
mov
ret
add
shll
sub
inc
cmc
ss
mov
and
mov
call
rclb
adc
adc
pusha
mull
or
fdivs
ss
adc
je
in
xor
jp
sbb
insb
iret
mov
add
cs
jmp
lret
mov
cwtl
pop
in
movsb
repnz
push
xchg
movsb
sbb
and
ret
jmp
cmp
pop
xchg
decb
or
pop
ds
divb
ret
and
cmc
insl
sub
jmp
dec
idivb
mov
dec
pop
dec
lods
mov
mov
add
push
lds
lds
decb
addb
iret
and
xchg
push
or
loop
add
lods
push
addr16
movsl
jle
repz
cmp
ret
pop
mov
adcl
les
push
aaa
mov
xorl
cmp
push
pop
xchg
add
sbbl
lahf
sar
xchg
pop
mov
insb
push
cmpb
cmpsb
outsb
fmull
gs
jns
sub
rol
neg
jne
jecxz
mov
pop
adc
sbb
in
jbe
shll
cmp
rcll
xchg
mov
std
fs
mov
ficoml
mov
add
insb
push
cmc
int3
mov
push
imulb
adc
add
xor
cld
out
sarb
out
lcall
dec
aas
push
insl
lods
lret
data16
cmp
adc
jae
or
xorb
pop
fnstcw
or
cmp
sbb
rcr
sbb
mov
test
test
out
aaa
icebp
mov
orl
test
mov
xor
jge
push
test
sbb
jecxz
and
add
imul
pop
inc
stos
cmp
push
mov
pop
dec
lahf
jp
and
cmp
push
mov
adc
jmp
pop
leave
pusha
cmp
jae
aas
sub
inc
pusha
scas
sub
scas
and
mov
sub
in
dec
push
sti
cmp
or
xchg
xor
ret
mov
aaa
popf
mov
push
dec
adcl
mov
subb
push
movl
add
mov
ret
ret
int
lock
or
aas
mov
mov
sahf
nop
xor
xor
add
outsl
sbbl
pop
adcl
fidivl
and
mov
sbb
mov
push
test
clc
sahf
fisubl
mov
dec
mov
cmp
sub
mov
hlt
rclb
or
popf
jmp
jo
xor
pusha
or
and
rorl
stc
mov
dec
insb
push
stos
sbb
mov
enter
inc
mov
repnz
xor
pop
push
int3
daa
push
mov
mov
push
lahf
pop
cwtl
clc
mov
jge
fisttps
adc
cmpsb
aas
push
out
mov
das
add
xor
xchg
sbb
adc
lret
cwtl
lret
sbb
push
jg
push
or
pop
xor
push
repz
subl
mov
mov
adc
scas
push
sbb
popl
inc
cmp
pop
fwait
inc
xor
in
xor
test
dec
inc
pop
jbe
das
mov
or
aad
cmp
fsubrs
inc
jae
xchg
nop
aam
add
inc
add
imul
stc
popf
or
into
sbb
nop
int
iret
sbb
lahf
stos
shll
mov
andl
mov
jp
andb
sub
enter
adc
fsincos
std
jo
jae
mov
fidivrl
jmp
xchg
cmp
scas
pop
jae
jno
pop
sbb
scas
inc
pop
pop
subl
xor
jge
mov
in
dec
lds
push
nop
das
pop
xchg
cmpsb
sbb
xchg
sbb
jle
loop
ljmp
mov
xor
lret
pop
aam
lret
ret
lcall
pop
mov
xchg
outsl
cmp
pop
mov
mov
cmp
add
cmc
ja
inc
mov
std
dec
loop
sti
outsb
sbb
mov
xchg
sub
sbb
aad
jecxz
and
lcall
add
pop
cvtps2pd
mov
inc
inc
pop
ficoms
imul
outsb
sub
cli
test
inc
inc
fidivs
add
mov
adc
les
or
inc
leave
aad
fbstp
fdecstp
sub
cltd
push
addl
das
or
ja
lahf
cmp
mov
sub
test
push
outsb
aaa
lods
add
orb
or
call
or
clc
popa
pop
mov
xchg
in
movsb
jbe
ror
imul
pop
sub
dec
dec
cmpsb
dec
push
int
jae
inc
arpl
xchg
and
mov
pop
out
aaa
shlb
sbb
xchg
outsb
push
repnz
adc
xor
stc
inc
fs
cwtl
adc
inc
push
mov
pop
mul
xchg
and
and
iret
or
fadds
sbb
bound
fstpt
std
inc
pushw
int
or
push
jne
sub
mov
push
fdivrs
std
dec
push
stos
addr16
aas
mov
mov
orl
mov
jg
ds
pop
outsb
inc
sbb
out
fwait
in
sub
cmp
loope
mov
testb
pop
shl
pop
bound
rcrl
decb
push
or
xchg
lret
push
inc
cwtl
mov
js
xor
pop
inc
sub
test
loop
cmpsb
push
jecxz
add
sub
outsl
dec
pop
xorl
loop
inc
out
movsl
daa
mov
shll
iret
shrl
scas
inc
pop
xchg
push
stc
mov
pushf
pop
stc
adc
jp
pop
pushf
shrl
dec
lods
xor
add
push
mov
mov
scas
inc
lretw
sub
out
scas
inc
and
xchg
xor
cs
movsl
push
adc
adc
testl
lods
cld
or
lret
adc
mov
dec
pop
std
jle
outsb
mov
insl
mov
push
xchg
out
outsl
xchg
pop
jge
push
pop
je
push
leave
xlat
sbb
aad
mov
in
insl
jmp
mov
enter
cmpsb
xor
mov
inc
sub
xchg
dec
and
dec
sub
mov
jnp
addr16
dec
hlt
aaa
add
mov
push
and
int3
negb
gs
push
inc
stos
push
shlb
mov
int
sub
arpl
movsb
repnz
sahf
pop
in
sub
jb
mov
andb
imul
add
inc
pop
divb
jnp
gs
jne
fs
mov
add
insb
dec
shr
jno
jno
xchg
xchg
and
loopne
or
jge
icebp
fimull
lahf
lea
es
and
add
jmp
or
leave
sub
imul
test
cwtl
mov
and
and
sub
sbb
mov
jg
sub
fstpt
dec
dec
cs
or
int
lahf
mov
inc
fisubrl
or
out
dec
xchg
pusha
data16
inc
mov
fldl2t
adc
mov
sub
dec
mov
jbe
clc
lock
jb
stos
lret
push
mov
divb
add
outsl
inc
sbb
into
sub
xchg
clc
inc
in
in
das
inc
rcrl
pop
lea
pop
std
add
and
ret
dec
fnsave
repnz
jns
jle
pushf
scas
and
out
out
mov
rorb
xchg
in
shr
aad
add
mov
fst
pop
push
test
popa
mulb
mov
add
pop
cmp
imul
cmp
dec
loopne
push
lds
ret
or
jb
dec
pop
jge
nop
in
inc
sub
dec
enter
jb
pop
loopew
dec
repnz
inc
push
lahf
out
std
sub
jbe
inc
bound
jb
cwtl
test
push
cmp
mov
test
mov
test
bound
out
iret
adc
bound
cmc
push
add
cmp
mov
jnp
shrl
xchg
add
popf
jmp
iret
cmp
dec
shl
addb
pop
dec
test
pop
fdiv
aaa
in
adc
mov
pop
sub
jl
mov
fimuls
arpl
in
push
mov
andl
and
inc
mov
cbtw
mov
mov
int3
and
pop
andl
fwait
inc
aaa
leave
jbe
testl
mov
push
lods
cld
lcall
cwtl
imul
adc
fidivrs
mov
mov
xchg
arpl
lret
lods
aam
fcmovnbe
lods
frstor
and
mov
ret
pop
js
lcall
and
and
jne
jbe
dec
pop
pop
lods
xor
hlt
push
negb
add
adc
es
bound
push
jle
mov
imul
int3
popa
jle
push
mov
out
bound
stc
adc
pushf
or
imull
sub
enter
adc
fcoml
testl
adc
jecxz
xchg
add
test
cli
jbe
popf
jnp
outsl
cwtl
push
cmc
dec
pop
out
jg
das
mov
lds
imul
push
inc
cs
push
jne
inc
fidivl
out
vcomiss
fcmovnb
sbb
into
mov
aaa
mov
pop
pop
stos
sar
mov
fucom
dec
repnz
ret
or
decb
fistps
push
dec
orb
ljmp
add
sub
jns
enter
test
cmp
adc
test
icebp
ljmp
cwtl
rcl
adc
ret
pop
mov
popl
jb
xchg
jae
lahf
ss
sub
sbb
xchg
cs
mov
ret
and
xchg
cmc
ret
sub
sbb
daa
data16
out
stc
push
lods
lds
shlb
mov
cltd
or
push
pusha
mov
js
data16
add
mov
push
scas
pop
push
sbbb
mulb
pushf
repz
adc
in
jo
inc
stc
fstps
inc
pop
subl
mov
mov
xorl
mov
xchg
aam
jmp
xor
cltd
mov
in
dec
or
jg
sti
jmp
popf
pusha
leave
jne,pn
test
mov
push
fldenv
xchg
call
out
and
int3
call
std
lods
cmpsb
clc
add
sbb
pop
es
test
fwait
shlb
add
dec
push
cwtl
jbe
dec
dec
inc
aaa
idivl
lret
push
push
sub
xor
mov
movsb
pop
out
xchg
pop
sbb
icebp
into
add
adc
out
js
mov
insb
sbb
and
out
xor
insl
data16
sub
test
xor
push
stos
mull
cmp
xchg
xor
xor
mov
aaa
out
push
sbb
fisubrl
xchg
inc
mov
xchg
cs
sbb
ret
es
pop
movsl
movl
lcall
sbb
cmp
sub
push
lahf
les
push
aaa
or
sbb
sbb
imul
push
jb
and
leave
int
mov
test
mov
and
sub
mov
ficoml
jbe
imul
dec
pop
repz
icebp
mov
cli
xchg
push
add
sbb
sub
push
das
jnp
scas
inc
int3
adc
leave
int3
xor
push
ja
jne
inc
aas
cmp
movsb
xchg
or
inc
add
mov
incl
and
push
fwait
xchg
js
lret
std
jecxz
das
popa
jo
and
jl
push
and
xor
cmpsb
or
mov
xchg
int3
mov
cwtl
stc
insl
sbb
sbb
and
cmp
jnp
add
or
push
add
sub
mov
testl
and
mov
jb
rcl
dec
imul
cmpl
inc
pop
imul
jp
ja
xorb
aad
pop
sbb
and
add
push
insl
add
jnp
popa
mov
fldl
push
scas
push
int3
ficoms
shl
adc
and
or
mov
out
dec
dec
adc
cmp
nop
sbb
shll
push
mov
adc
mov
adc
xor
int3
cli
movsb
push
cmp
sub
inc
lods
jmp
inc
mov
lods
call
mov
cmp
inc
jnp
into
fmul
and
fildl
addr16
ja
inc
stos
lret
sub
lret
sub
repz
dec
repnz
jb
mov
dec
insb
jno
sbb
xchg
mov
ret
test
pop
loopne
jecxz
hlt
cltd
mov
mov
test
mov
dec
cmp
sahf
bound
mov
push
push
xchg
pushf
inc
cmp
data16
pop
pop
pop
xor
cmp
mov
xchg
mov
xchg
pop
dec
pop
dec
mov
cmp
outsb
pop
mov
stos
inc
jb
mov
int
mov
sub
add
cmp
push
jg
mov
shl
sub
imul
inc
sahf
rol
and
scas
mov
lcall
sub
cmp
das
xchg
add
in
jnp
imul
scas
adc
ss
sahf
arpl
cli
xchg
pop
jle
es
sbb
inc
das
sbb
inc
inc
mov
inc
pop
loope
pop
lock
out
lahf
popf
or
xor
sub
add
add
mov
pop
dec
cmp
push
js
dec
insb
mov
sub
lret
inc
loop
push
shll
xchg
jl
push
scas
mov
xchg
sbb
mov
in
push
adcb
push
lea
inc
test
sub
out
xor
movsb
ljmp
ret
xor
add
sub
mov
dec
add
sub
ret
cmc
cmp
mov
adc
add
cs
push
mov
fbld
cli
sub
mov
scas
mov
sbb
in
sahf
add
and
arpl
aad
nop
inc
add
iret
xlat
pushf
sub
sti
dec
fimull
cmc
leave
mov
adc
pusha
imul
xchg
or
sub
or
in
dec
sbb
push
jmp
pop
jo
and
insb
adc
pop
aad
aas
ficomps
mov
adc
int
push
in
inc
test
mov
cwtl
jbe
push
js
pop
push
fcompl
je
xchg
xor
test
dec
jl
xchg
lods
inc
dec
pop
test
les
es
lahf
ss
jmp
in
inc
or
inc
aas
push
mov
or
out
sbb
sbbl
repz
test
icebp
add
fiaddl
adc
fisubs
sub
lret
ss
fsts
jle
out
inc
push
mov
or
test
sar
roll
test
movsl
cmp
lret
jae
repnz
loopne
xchg
adc
sti
pop
pop
push
mov
jno
into
lahf
sti
insb
movd
pop
cmp
cmp
repz
xchg
and
les
push
sub
dec
sbb
ret
pop
mov
mov
test
mov
imul
cmp
rcll
mov
add
cs
mov
daa
jmp
or
mov
pop
pop
sbb
leave
ret
das
es
xchg
ret
jmp
mov
shll
ljmp
xchg
or
dec
push
cld
fsts
fstl
test
jg
xlat
outsl
cld
aad
or
dec
dec
add
in
lcall
push
inc
out
xchg
xor
inc
xor
mov
jbe
shl
cmp
mov
pop
cmpsl
outsl
inc
out
out
pop
adc
cmc
out
cs
popf
dec
push
negl
insl
inc
and
jge
jne
jmp
push
subl
mov
or
cli
jo
and
dec
mov
rcrl
push
in
adc
cmp
mov
add
jne
aad
xchg
mov
shl
or
icebp
mov
test
call
sub
add
fsubl
mov
andl
cli
push
stos
dec
fcomi
int
push
call
push
ljmp
jno
xor
cltd
push
test
stos
add
push
inc
push
lea
movb
fs
pop
lahf
lret
mov
inc
mov
idivb
gs
test
scas
pop
mov
data16
testl
dec
dec
sbb
pusha
stc
or
dec
and
sbbb
fstpl
xchg
out
cmpsb
mov
scas
inc
jo
add
jae
jbe
out
pop
das
push
out
xor
sub
rcll
cld
ja
jns
imul
mov
daa
out
jle
jge
push
sub
pop
adc
stos
mov
adc
jp
decl
xor
mov
lea
cmp
cmp
or
jp
hlt
imul
mov
xchg
scas
lret
xlat
fcomip
xchg
orb
mov
cmc
mov
loop
pop
rcr
loopne
int3
jmp
mov
or
imul
into
and
shl
mov
sahf
mov
or
push
fimull
jne
fsts
pop
mov
jno
pop
sahf
stos
xchg
aam
jecxz
in
aad
aad
rclb
cmp
mov
sub
jecxz
jbe
outsb
loope
stos
cmpsb
dec
pop
jo
adc
sub
arpl
bound
movd
fwait
mov
stos
mov
push
fadd
xchg
cmpsb
jl
loopne
jl
cmc
lcall
xchg
hlt
hlt
stos
xchg
mov
cmp
adc
adc
ss
mov
pop
mov
les
sub
pop
push
lea
cmp
sahf
xor
jmp
sbb
dec
jg
loopne
aad
lcall
stc
and
fbstp
dec
xchg
in
icebp
inc
shrl
incb
mov
sbb
aaa
dec
mov
inc
aam
ds
std
push
icebp
and
pop
fsts
add
cmp
sbb
push
or
ljmp
stos
ljmp
pop
icebp
jno
sbb
xchg
xchg
js
jo
outsb
sub
jge
jl
mov
and
xchg
pop
fst
mov
es
vxorps
push
fisttps
pop
pop
scas
push
xchg
aam
imul
out
xor
sub
daa
push
mov
cmp
add
pusha
arpl
aam
mov
xlat
jbe
push
std
mov
mov
mov
lret
add
or
mov
idivl
outsl
jnp
sbb
fistps
sbb
adcl
or
aam
xchg
pop
mov
mov
mov
jns
dec
or
adc
rcrl
xorl
push
sub
mov
loopne
xchg
mov
mov
sub
sahf
cld
jg
imul
xchg
ret
icebp
or
lock
xchg
aad
mov
cmp
scas
out
jecxz
cltd
rcl
repnz
and
test
int
out
pop
or
xor
popf
mov
pop
push
jmp
movsl
xchg
lock
es
imul
or
lock
mov
mov
rol
in
ret
xor
push
cmc
xchg
mov
cli
fwait
pop
and
xchg
push
or
fs
fldcw
orl
pusha
out
pop
lds
out
sub
cli
adc
mov
push
xorl
xchg
punpckldq
fprem
or
std
and
xor
je
mov
cmp
test
pop
mov
mov
sarl
and
mov
adc
mov
xchg
insb
xchg
std
and
sahf
jae
xchg
lret
mov
and
sub
cmp
xor
test
fwait
sbb
lea
movsb
cmpsl
xchg
sahf
cld
inc
lret
cmc
push
cs
nop
leave
sbb
cli
mov
rorl
lds
dec
lods
add
mov
jne
outsb
cmp
mov
mov
jmp
lds
aaa
fstpt
fwait
mov
lret
jl
jg
xchg
dec
jecxz
and
lock
add
adc
arpl
fsts
imul
sbb
mov
add
sbb
xor
sub
mov
add
int3
dec
pusha
or
daa
dec
xchg
add
lods
fwait
cmp
aad
inc
aaa
xchg
sub
call
daa
cmp
mov
popa
js
mov
push
in
dec
or
cmp
mov
sahf
sbbl
ds
mov
mov
fistps
dec
dec
push
call
mov
sbb
pop
shrl
hlt
mov
call
jnp
stos
push
pop
scas
ss
fidivl
cmpsb
adc
rcrl
mov
dec
push
cs
mov
imul
repz
cld
lcall
out
aam
sub
sbb
arpl
cmp
sbb
stc
xchg
jns
sahf
aad
imul
arpl
push
mov
sti
jle
sub
mov
xor
lret
insl
push
pushf
ljmp
inc
nop
ds
ret
inc
adc
inc
out
inc
jle
popa
faddl
and
hlt
xchg
xor
sbb
add
lahf
or
xor
sahf
dec
push
hlt
jp
hlt
xchg
lcall
loop
das
xrelease
add
adc
ljmp
and
adc
inc
call
lods
test
dec
clc
push
hlt
call
dec
popa
mov
in
add
pop
das
inc
dec
mov
shlb
sub
mov
rolb
inc
push
cmp
push
inc
inc
add
pop
mov
xchg
dec
fwait
shl
add
adc
push
int3
int
movsl
stos
dec
sahf
mov
in
stc
pushf
sbb
sbb
mov
or
pop
add
cmpsl
pop
call
ljmp
dec
xchg
sub
or
hlt
push
mov
gs
in
mov
mov
adc
xlat
pushf
daa
test
mov
cmpsl
sub
inc
movsb
mov
test
imul
sahf
repnz
loope
pushf
sbb
sbb
das
fwait
sahf
loop
rcll
shlb
sub
popa
cld
jle
and
inc
lahf
xorl
mov
popa
test
fisubrl
dec
sbb
cmp
outsl
cmp
pop
push
ret
adc
lahf
fxch
prefetch
into
mulb
or
adc
push
stos
es
sbb
push
fnsave
sahf
push
jns
mov
ficomps
andb
mov
fwait
cltd
enter
es
push
lods
add
out
cltd
cmp
push
push
jmp
sarb
mov
dec
cmp
push
fistl
lahf
xchg
sub
dec
movsb
hlt
mov
inc
cmp
lret
mov
fs
das
movb
stc
loop
int3
fs
inc
xorb
in
lret
sub
idivb
mov
imul
stos
cmc
cmp
hlt
dec
and
lret
jg
cmp
enter
inc
cmpsl
shlb
popa
pop
jbe
pop
xchg
sahf
inc
jmp
dec
push
jb
sti
xchg
adc
mov
dec
or
ss
inc
cltd
imul
sub
xor
adc
jecxz
add
iret
popf
cmpsb
das
adc
dec
in
mov
scas
aam
repz
fstps
ja
sub
seta
dec
std
cmp
fsubr
fistpll
test
scas
jecxz
outsl
int3
jle
adc
bound
cli
or
addr16
or
int3
pop
les
daa
mov
pop
insl
sub
pop
out
mov
adc
xor
mov
jmp
repz
mov
mov
pop
int
ret
fists
arpl
popf
lahf
call
in
mov
outsl
jno
andb
jbe
jg
pop
lods
imul
sarb
mov
stos
mov
sub
push
movsl
pop
out
mov
in
mov
xchg
sub
call
lds
lret
testl
add
xchg
enter
ljmp
mov
mov
aad
stc
add
adc
pop
jl
imul
adc
inc
mov
ret
dec
lods
imul
push
mov
call
pop
pop
outsl
add
and
stos
and
inc
mov
movsb
mov
fwait
jmp
pop
jge
and
xlat
pop
cld
stos
int
xor
xor
sub
addb
and
adc
jmp
rcrl
mov
mov
mov
cmp
lret
out
xchg
call
cwtl
popa
xor
out
xchg
cmp
xchg
in
fdivrl
inc
test
cmp
bound
aam
sahf
cmp
scas
xlat
and
sbb
inc
dec
cmp
add
xlat
mov
enter
popa
and
inc
scas
call
mov
sahf
testl
jbe
xlat
lods
mov
pop
ljmp
jno
in
pop
cwtl
sub
aas
loopne
mov
outsl
push
mov
ret
pop
out
int
adc
daa
stos
cmp
xlat
xchg
js
sbb
mov
jb
clc
xchg
dec
loopne
push
sbb
dec
into
lock
int
xor
mov
out
inc
int3
sbb
push
sbb
cs
imul
shrl
mov
mov
inc
push
jl
movsl
xor
adc
insl
mov
and
push
mov
popf
movsb
loopne
enter
mov
dec
mov
rolb
push
xchg
add
mov
inc
fld
fisttpl
out
push
sub
sub
jb
stos
push
jecxz
addb
jmp
push
sbb
mov
mov
xchg
add
bound
pop
test
or
mov
xlat
leave
jg
mov
push
ljmp
ja
cmp
sub
aas
insl
and
push
xchg
inc
popf
sbb
or
jge
mov
mov
loopne
jl
mov
dec
and
or
shll
push
jo
pop
cmpsb
pop
inc
in
fdivrs
cmp
andb
into
adc
fsubrs
jae
notb
mov
dec
mov
jb
mov
mov
pop
jle
mov
mov
cmpsb
push
push
and
xchg
mov
add
push
xchg
jp
lods
jle
clc
scas
int
shr
mov
lret
or
rorb
ja
in
sbbl
stos
xchg
scas
jnp
cltd
mov
dec
xchg
lods
pop
jae
cmp
sub
mov
xchg
lret
cmpb
loope
loope
xchg
ds
test
mov
adc
insb
fwait
negl
xor
andl
adc
xchg
add
jne
jno
call
movsb
mov
stc
outsb
xchg
add
sub
push
fdivs
sub
out
or
mov
lds
mulb
mov
fcomps
mov
mov
rcl
sti
outsl
add
push
mov
mov
testl
mov
jl
enter
push
incl
cmp
add
adc
mov
stos
add
leave
lret
dec
in
pop
pop
mov
mov
mov
mov
adc
into
sub
fcomps
dec
cmp
lahf
sbb
negl
mov
cmpsl
js
hlt
test
cmp
cltd
aas
pop
or
leave
mov
ds
pop
pop
nop
insb
int
xchg
mov
icebp
jle
dec
or
and
sub
sti
or
sbb
mov
push
pop
in
int
sub
insb
jecxz
minps
pop
loopne
mov
sbb
sbb
mov
lahf
fwait
out
in
push
fmull
adc
add
xchg
add
test
sbb
lods
ds
mov
lret
sub
in
lds
mov
cld
cmp
adc
popf
xchg
xor
bound
jne
mov
push
popf
fstpl
or
lcall
outsb
mov
pop
movsb
fnstcw
push
inc
sub
enter
push
mov
mov
xchg
icebp
outsl
les
clc
sahf
and
js
inc
sbb
mov
call
jnp
stos
mov
push
push
or
shll
jo
mov
movsb
push
pop
nop
inc
stos
jmp
and
clc
push
stos
dec
dec
pop
add
fistpll
andb
mov
sub
mov
scas
imul
lret
mov
in
mov
loope
xor
mov
or
out
sbb
jns
cli
imul
scas
test
push
mov
popa
mov
inc
push
sbb
xchg
dec
adc
xchg
sub
cmp
pop
xchg
push
pop
xchg
sbb
aad
mov
ret
ret
pop
pop
js
lock
mov
cld
nop
cmp
add
mov
imul
push
pop
dec
call
pop
icebp
daa
mov
stos
test
out
ret
lcall
adc
dec
cmp
fbstp
les
xor
in
lret
out
jb
shlb
push
loopne
mov
sub
dec
xor
inc
rcrb
mov
or
nop
mov
rcrb
sti
add
xor
pop
ss
gs
loop
imul
fucomi
xchg
iret
mov
out
or
mov
pop
cs
aam
mov
and
mov
mov
fstpt
stos
fildl
filds
scas
inc
in
mov
lods
jnp
int3
into
jnp,pt
xor
std
xchg
add
sbb
xchg
cmp
add
fstp
and
cmpsl
ds
cmp
inc
fsubrl
cmc
inc
mov
arpl
mov
les
in
andl
push
jle
sti
mov
mov
mov
inc
fdivrs
shrl
pop
aad
movsb
negb
lods
sbb
nop
sub
jmp
testl
jg
push
push
mov
iret
mov
inc
jbe
repz
movsl
pop
cmpsl
std
lods
out
imul
inc
or
outsb
pop
pop
popa
and
and
pop
sbb
les
cmp
dec
outsw
or
aaa
pusha
and
xchg
push
push
js
add
mov
insb
mov
push
popa
jb
push
xor
lret
pop
cli
sbb
cs
scas
js
mov
in
pop
sub
and
mov
lahf
testl
add
push
mov
pop
loop
cmp
dec
pop
cmp
seta
popa
scas
mov
sub
dec
push
jb
cltd
jb
fbld
mov
lcall
mov
dec
add
adc
mov
adc
push
adc
and
in
sbb
fwait
ss
xchg
les
test
outsl
and
pop
and
les
mov
mov
pop
jns
push
jae
andl
mov
repnz
xchg
push
repz
std
xchg
xlat
sub
aad
pop
cmp
jg
aad
inc
xchg
jmp
mov
js
xor
addr16
stos
dec
ds
aas
mov
push
test
mov
jno
sbb
mov
ss
imul
xor
inc
hlt
xor
fs
bound
lcall
push
push
loope
add
or
rolb
mov
jmp
aaa
call
add
dec
jl
pop
daa
dec
cmpsb
cmp
sarb
movsl
and
mov
or
sub
xor
xchg
out
xchg
jne
jno
rcl
cmp
add
call
and
push
sti
add
fsubrp
push
stc
nop
mov
fsubr
or
xor
inc
les
inc
dec
dec
mov
push
jne
faddl
sub
adc
ljmp
mov
das
pop
test
incl
mov
mov
jno
xchg
dec
das
lds
insl
ror
leave
inc
sbb
push
xchg
lret
popa
xor
jmp
push
imul
push
sbb
mov
push
ss
in
sub
jmp
push
adc
mov
xor
sahf
ret
mov
and
out
test
sar
and
xor
das
test
pop
adc
addb
push
clc
sahf
fstps
outsl
mov
fwait
cmpsl
ljmp
sbb
pushf
sbb
movb
ljmp
ffreep
jle
inc
mov
inc
arpl
ret
adc
jmp
sub
inc
nop
call
pushf
stc
or
pusha
xor
daa
imul
pop
sbb
mov
cld
fcomi
xchg
push
and
inc
push
mov
inc
daa
add
into
ret
xor
mov
dec
setb
dec
and
mov
add
test
add
and
gs
pop
jo
jns
cmp
xor
push
adc
jae
in
std
lahf
out
adc
sub
cli
inc
push
daa
jmp
mov
lods
sarb
mov
mov
sbb
mov
aam
out
mov
loope
psllq
xor
mov
test
pushl
xor
aam
mov
scas
ss
popf
hlt
dec
push
fnstenv
mov
mov
sub
cmp
sub
jmp
imul
or
dec
gs
rol
cmp
push
test
jno
xchg
int
addr16
lcall
push
mov
daa
cltd
xor
mov
mov
ficoml
add
jle
mov
popf
outsb
and
sbb
sti
fcompl
aas
xchg
popl
loopne
sub
gs
jmp
loopne
out
shl
imul
arpl
push
sbb
ljmp
mov
leave
aas
rorl
dec
cld
fwait
call
mov
aas
adcl
addr16
outsl
xchg
jae
adc
inc
icebp
and
xor
add
xchg
test
fwait
sbb
or
push
mov
repz
jns
mov
aaa
iret
push
mov
dec
orb
mov
scas
pop
cmpb
dec
xchg
test
xchg
movsbl
scas
lock
add
mov
out
montmul
cmpsb
subl
add
test
pop
out
cmpsl
adc
mov
mov
or
and
rol
or
mov
cmovg
sbb
std
arpl
lods
adc
pop
mov
xchg
adc
fs
push
add
dec
leave
sbb
daa
jg
lahf
daa
jecxz
pusha
and
ss
push
pop
cmpsl
inc
mov
loope
stos
and
xchg
jnp
or
and
jle
in
lock
inc
or
lods
jmp
or
lock
inc
sbb
mov
ret
fistpl
add
xchg
sub
mov
call
ljmp
outsl
inc
inc
mov
push
fs
lcall
and
scas
test
lahf
sub
test
mov
add
sti
inc
aas
or
es
in
lods
xchg
or
sub
gs
testb
sahf
out
mov
add
call
pusha
pusha
outsb
add
imul
inc
dec
sahf
popa
movsb
add
cmp
mov
jno
cld
push
push
aas
rorb
inc
dec
mov
pop
dec
lahf
inc
dec
xor
xchg
loope
or
push
rclb
jl
les
data16
aaa
popf
inc
aam
mov
mov
ficompl
pop
mov
negb
ss
jecxz
xor
dec
mov
jecxz
sub
jge
sub
std
addl
sbb
inc
sbb
scas
loope
daa
lods
add
movsl
sbb
lods
mov
rcrl
repnz
mov
pop
or
inc
sbb
cmp
sub
nop
jo
xchg
mov
test
mov
adc
iret
out
js
pusha
vcmppd
fwait
in
dec
mov
jbe
call
xchg
popf
jnp
iret
out
push
in
mov
inc
and
mov
and
rolb
fildll
lods
cwtl
mov
sbb
cld
hlt
push
icebp
mov
jg
jnp
jle
xchg
mov
lret
fwait
pop
jl
lods
jmp
push
dec
mov
xchg
sub
lea
jge
xor
fisubl
jmp
mov
or
xor
shrl
aas
or
pop
xor
scas
aaa
xchg
fwait
mov
push
jmp
push
sub
jbe
and
pop
inc
sbb
adc
pop
cmp
int3
pop
jbe
mov
insb
insl
add
test
scas
cmc
mov
jp
in
jg
mov
and
sti
inc
mov
aam
stos
in
xor
loopne
daa
push
popf
mov
iret
leave
push
fld
data16
ja
sbb
inc
mov
pop
jne
nop
daa
pop
adc
movb
imul
xlat
js
adc
mov
sub
les
xor
xor
inc
or
aam
sub
cmp
inc
loopne
jle
mov
mov
stos
out
pop
adc
dec
cmp
fcoms
jmp
cli
sbb
push
and
hlt
jg
shlb
adc
and
and
lods
sub
scas
mov
mov
sbbb
lcall
les
data16
addr16
dec
pop
daa
outsl
aam
jle
or
sbb
add
cli
sarb
insl
lcall
jmp
cmp
dec
bound
mov
lock
jno
pop
gs
add
jne
and
fists
dec
loopne
fisubl
leave
outsl
mov
icebp
add
fdivl
int
out
insb
xlat
xchg
hlt
mov
mov
cli
fnsave
jns
nop
jg
add
push
out
fldt
fnsave
sti
xchg
or
inc
fld
bound
lds
push
lods
or
xor
cmc
pop
pop
push
lcall
adc
mov
push
xchg
std
xchg
add
xor
sarl
or
adcl
inc
push
lods
inc
push
rcll
mov
sahf
xor
or
jmp
or
test
mov
cli
mov
push
movsl
dec
or
jo
mov
xor
fwait
xor
imul
fsubrs
mov
sub
outsb
fwait
push
cmpsl
in
or
xor
js
pop
and
jge
push
lret
or
dec
add
ljmp
sub
xchg
xor
sbb
push
ss
xor
jno
fidivl
mov
cmp
sbb
out
out
mov
insl
inc
jno
stos
push
imul
xor
mov
aaa
je
and
pop
adc
push
cmp
scas
xor
sbb
pop
add
adc
mov
xor
ret
jns
repz
stos
loop
pop
xor
es
jno
xor
subb
aad
xor
aad
sub
call
xor
mov
cmp
dec
popa
push
mov
and
xchg
and
dec
jmp
lret
sar
out
mov
push
test
popf
jb
stos
sarl
cmp
fs
lahf
shrb
in
push
inc
pop
rorl
es
add
lods
daa
cmpsb
jae
lret
jl
mov
nop
stos
loopne
mov
aad
mov
loop
ficompl
fistpl
sbb
adc
ds
loope
sub
cmp
jmp
push
mov
mov
add
mov
leave
cmp
arpl
rolb
ret
jge
jnp
add
enter
add
inc
pop
mov
ret
mov
mov
xchg
cwtl
loop
icebp
mov
adc
jbe
pop
sahf
sbb
rcrl
and
test
push
into
gs
cltd
loope
or
out
dec
in
xchg
cmp
push
jbe
addl
inc
sarb
ret
repnz
inc
pusha
std
sbb
add
in
pop
xor
push
dec
fcmove
gs
or
inc
test
mov
leave
inc
mov
fstl
jns
movl
push
in
ds
and
addr16
mov
lcall
loop
inc
insl
sarb
cld
dec
in
dec
gs
xchg
imull
clc
jecxz
add
loope
shrl
mov
pop
mov
icebp
insl
mov
adc
cmc
inc
popf
movsl
and
iret
gs
push
cmp
movb
les
lcall
scas
xor
pusha
popa
shrl
adcb
into
shl
fdivs
popa
subl
popa
fildll
add
mov
sub
movsl
mov
mov
in
inc
or
adc
sub
call
sub
cmpsb
rol
dec
sbb
testl
xchg
hlt
xchg
adc
mov
popf
scas
rcr
insl
test
cmc
xor
or
arpl
test
icebp
mov
xlat
fs
mov
shlb
fcomps
mov
sub
aam
out
lahf
cmpl
pusha
ljmp
mov
xchg
pop
out
mov
nop
ljmp
adc
sbb
aas
scas
data16
rclb
leave
mov
cmp
and
inc
stc
int3
lret
pop
jo
cmp
xlat
lret
lret
pop
xlat
jne
mov
int
ffree
xchg
stc
dec
and
lcall
pushf
pop
jae
jns
cmc
pop
loopne,pt
push
push
rorb
mov
cmpsl
nop
mov
add
stos
push
dec
pop
mov
mov
les
mov
ljmp
cmpsb
jne
in
in
out
xchg
clc
xchg
xchg
fisubl
sbb
jne
cmpsb
xor
test
cmp
dec
sbbb
or
insb
cvtps2pi
je
pop
xor
popl
dec
testb
in
popa
hlt
sub
adc
xor
aas
dec
add
es
decl
fcmovnu
cmpsb
pop
lahf
sarb
mov
out
add
rcr
mov
insl
cmpsl
cmp
leave
iret
sbb
jecxz
inc
and
sub
push
movsl
sub
jecxz
dec
out
cli
dec
fwait
out
cmpsl
cld
outsb
inc
lcall
and
jbe
xor
and
clc
lret
xlat
sbb
aas
xchg
lds
sub
cltd
arpl
mov
dec
cmp
pop
push
loop
mov
pop
stc
jb
jecxz
xor
aaa
sub
or
fwait
xchg
daa
inc
imulb
dec
aad
adc
cld
mov
popa
mov
mov
sbbl
addl
pop
fists
fnstenv
jae
popa
movsb
ficoml
mov
pushf
cmc
mov
jecxz
in
adc
mov
push
jb
mov
pop
dec
inc
lret
jnp
cmp
into
push
adc
lcall
jg
popf
cmc
mov
aam
jns
adc
popa
jb
gs
push
jae
mov
daa
mov
nop
rolb
pop
nop
push
iret
dec
and
sarl
out
test
dec
add
stos
ljmp
faddl
dec
dec
mov
push
jae
loope
outsb
pushf
les
adc
push
inc
addr16
shl
mov
lods
loopne
sub
ja
mov
fsubrs
pop
cmc
xor
sarb
in
shl
sub
mov
ljmp
cs
xor
pop
ds
in
fs
add
mov
fidivs
jle
clc
faddl
push
cmp
mov
cwtl
push
clc
sahf
xor
in
mov
adc
sbb
repz
xor
lret
sti
xor
adc
jmp
push
fistl
loopne
push
jae
ret
js
mov
scas
cld
or
push
inc
das
imulb
add
icebp
sahf
and
shll
repz
into
movsl
mov
pop
mov
fcoms
sti
out
sub
sbb
xor
or
addb
ljmp
jne
push
xor
sar
and
inc
adc
inc
lret
data16
rclb
mov
lret
das
xchg
jp
out
adc
pop
mov
push
sub
push
in
lds
mul
fldl
push
dec
hlt
mov
sti
push
fildll
sub
rcrb
or
pop
hlt
push
mov
out
xlat
sub
pop
inc
fsubr
orl
fmulp
aas
fildll
insl
jmp
ljmp
lods
pop
es
fcom
out
pop
xor
mov
jb
out
test
cmp
cmpsb
addr16
inc
bound
daa
push
mov
add
mov
leave
nop
daa
popa
inc
inc
xchg
test
xchg
decl
pushf
aad
xchg
mov
aam
cld
xor
mov
ja
fbld
mull
jle
mov
cmp
enter
lret
mov
cli
fadd
cmp
loopne
lcall
jmp
or
push
pop
xor
sahf
notb
je
mov
mov
xchg
test
clc
push
and
add
lret
and
xchg
xchg
inc
dec
pop
inc
mov
cmp
call
or
adc
push
loope
mov
addl
push
xor
lock
dec
mov
les
mov
mov
into
mov
pop
mov
jp
jle
rcr
mov
add
rolb
dec
outsb
test
ret
cmp
jne
imul
pop
xchg
jl
arpl
jg
mov
sbb
inc
sbb
leave
int3
mov
sarl
cmpsb
push
sbb
xchg
hlt
lret
jnp
pop
pop
cmpsb
inc
mov
xor
xor
imul
leave
lds
insl
inc
sbb
xor
test
cld
pop
out
in
cmpsb
pop
fsubp
fisttpll
dec
sub
rcr
js
fldl
stos
arpl
movb
pop
mov
mov
adc
out
insb
fstl
aam
xor
fistps
mov
int
mov
or
scas
loop
push
stos
fnstcw
cs
je
dec
inc
and
dec
shl
mov
fistpll
std
push
sub
out
mov
or
mov
sti
fwait
pop
or
outsl
cmp
ret
fsts
pop
adc
dec
xchg
and
outsl
xor
sbb
or
lds
je
xor
jge
dec
cwtl
lret
xlat
mov
adc
sahf
dec
inc
in
mov
gs
mov
dec
and
out
add
mov
mov
xchg
test
daa
sub
mov
mov
pop
popf
jae
add
aaa
negl
data16
mov
je
adc
ror
adc
aaa
ds
dec
mov
cmp
arpl
or
lods
repnz
jl
fistpll
pop
jecxz
rol
lods
jbe
push
aam
cwtl
push
inc
pop
sbb
inc
push
jg
into
stc
jle
out
cli
pop
bound
mov
mov
inc
dec
adc
pop
lret
in
jp
int
inc
jmp
sti
pop
xor
pop
stos
out
sub
adc
cmp
js
out
jp
in
call
push
jecxz
int3
pop
fldt
rcll
popf
sbbb
insl
adc
leave
pop
mov
inc
ljmp
ja
dec
test
inc
int3
cmp
es
cmpsb
insb
adc
pop
add
out
pop
test
sbb
lods
ljmp
pushf
inc
add
dec
loop
and
adc
lock
push
lods
ss
daa
dec
dec
dec
jge
or
push
mov
push
mov
icebp
popf
sbb
adc
ds
or
movsl
and
jg
mov
pop
xor
ljmp
xor
cmp
mov
call
test
jne
mov
std
adc
hlt
cmpsb
cmc
push
sub
push
int
xchg
call
movw
hlt
xlat
shll
mov
rdtsc
jge
or
jle
lea
and
imulb
cwtl
xor
out
xor
fs
push
inc
inc
clc
ja
jae
mov
add
fnstenv
pop
daa
outsb
test
negl
jmp
dec
xor
xchg
xlat
adc
gs
mov
nop
push
ja
pop
and
adc
cwtl
or
sbb
dec
loopne
jle
mov
rclb
fimuls
sub
xor
scas
push
push
push
mov
lds
push
sub
or
mov
mov
xorb
push
clc
push
jns
pop
push
inc
fmulp
add
in
inc
je
push
cmpsb
fs
cmpsl
pop
dec
lahf
out
pop
jo
or
rclb
sbb
call
xchg
clc
inc
iret
fnstenv
jbe
inc
jae
in
sub
mov
push
int
js
fldpi
lret
xor
cmp
inc
out
sub
pusha
cwtl
leave
lea
ss
sbb
adc
sti
add
fstpl
enter
mov
gs
and
test
add
sahf
mov
lods
pop
push
in
lret
add
leave
inc
dec
mov
int
xor
repnz
mov
mov
push
and
mov
std
cmp
lods
pop
add
leave
call
daa
xchg
xchg
add
dec
movsb
fisubl
fxch
scas
shll
ret
jae
mov
andnps
or
mov
lods
cltd
adc
call
data16
or
jb
mov
js
orl
mov
les
out
out
mov
xchg
out
lret
cmp
sbb
fimuls
jecxz
rol
pop
mov
add
sarl
mov
scas
and
pop
pop
adc
mov
inc
push
mov
dec
cmpsb
cmp
test
shl
ret
dec
jl
shlb
mov
inc
lea
xlat
jle
test
insb
fwait
cmp
int3
bound
pop
jmp
mov
out
insl
ficoms
mov
fstpl
data16
popl
cld
push
push
arpl
mov
jbe
adc
scas
inc
sub
dec
push
aam
push
mov
jo
das
dec
pop
cmp
sbb
inc
mov
jmp
iret
xchg
es
xor
push
mov
pop
jl
int
cmp
pop
imul
adc
sub
mov
adc
mov
pop
fldcw
sub
lcall
inc
jp
test
sbb
add
repz
pop
imul
inc
sbb
aad
fs
push
test
int
push
je
mov
gs
pushf
xlat
xchg
jo
dec
mov
gs
xchg
xchg
scas
stos
int3
fmulp
bound
inc
movl
jns
loop
xor
int
or
ret
jmp
pop
icebp
mov
in
xchg
pop
out
aaa
or
push
fs
mov
xor
mov
inc
adc
inc
aam
imul
jmp
call
mov
rorl
fiadds
rcrl
pushl
stos
mov
jge
fcoms
cmp
stc
xchg
mov
mov
shrl
stc
test
imul
xor
cmpsb
jns
lock
sar
in
fmull
push
dec
add
add
aaa
sub
sub
movsl
mov
loopne
push
lock
out
ljmp
out
lret
dec
pop
icebp
jl
push
in
rcl
add
pop
movsl
repnz
jg
mov
xchg
xchg
lcall
and
sbb
xchg
xor
pop
in
pop
repz
pusha
add
cs
nop
jl
int3
push
outsl
adc
mov
fs
das
addr16
sub
fwait
mov
mov
mov
inc
and
add
fstl
mov
jmp
and
jno
sbb
pop
out
or
popa
xor
ja
mov
popa
xlat
push
lret
mov
call
adc
push
icebp
int3
xor
mov
dec
je
push
mov
outsl
arpl
mov
imul
xor
movsb
sbb
outsb
add
out
mov
rclb
inc
shll
rcrb
add
das
mov
pop
sub
ret
cltd
jo
mov
pop
repnz
mov
jns
insb
or
mov
movsl
sbb
xchg
je
xchg
xor
cmp
and
mov
aaa
int
jb
ret
jb
push
inc
orl
inc
fistpl
dec
arpl
jle
stc
lods
into
adc
sbbl
dec
cmp
jg
pushf
sbb
ljmp
jns
fs
out
and
in
stos
push
push
dec
xchg
movsl
icebp
hlt
push
addr16
sub
scas
leave
fwait
test
dec
xor
mov
loopne
mov
xor
xchg
rol
xchg
lret
js
mov
adc
add
enter
aas
xchg
repz
xor
or
mov
daa
sub
xchg
in
ret
fs
test
fwait
add
adc
jmp
push
cmp
cli
jne
xor
test
fcoms
lods
push
subb
out
stc
xor
ret
inc
call
ret
jecxz
mov
test
or
mov
repz
cmpsb
pushf
jecxz
xchg
xchg
pop
mov
jg
aaa
push
or
adc
and
imul
ficoml
inc
or
mov
lcall
cmp
add
fistl
int
in
jge
mov
push
mov
dec
in
arpl
dec
loope
xchg
xchg
sub
addb
scas
jmp
or
test
jle
fucomip
cmpsb
lahf
push
sub
mov
xchg
adc
jecxz
lea
inc
fldl
sub
dec
and
xor
inc
test
std
mov
mov
fildl
lea
jo
push
dec
lret
stc
mov
sub
xor
mov
idivl
test
fstpt
in
lods
push
test
cs
push
and
jb
lods
sub
mov
fisttpl
adc
sub
cmp
cmp
pop
sahf
and
sub
orb
nop
mov
mov
mov
mov
inc
je
rcll
sbb
lea
dec
jecxz
scas
xor
xorb
mov
and
data16
dec
mov
cli
std
pushf
jno
jae
stos
push
imul
out
in
pop
aam
dec
ret
jae
jl
mov
xchg
xchg
fs
and
or
mov
add
sbb
stos
fnstcw
push
mov
fbld
negb
or
push
mov
and
mov
dec
jns
fisubl
pop
data16
imul
outsl
xor
dec
js
mov
call
shlb
mov
push
fdivrl
xchg
push
or
call
or
jne
and
push
mov
lea
lret
mov
jo
and
jnp
sysret
mov
jbe
jns
stos
fsubrl
mov
cmpsb
ror
andl
dec
imul
inc
filds
pop
in
out
push
sub
jb
jp
cmpsl
cmp
xor
mov
add
pop
sub
and
xchg
out
mov
rorl
xchg
add
xchg
fwait
xor
sti
mov
mov
mov
push
pop
pop
push
jg
pop
jo
add
data16
movsl
add
test
inc
sub
cmp
in
jae
cmp
xlat
add
ret
leave
lret
xlat
popa
ret
orl
adc
loop
dec
dec
mov
in
cmp
cli
scas
test
push
loop
xor
icebp
xor
push
inc
sti
xchg
stc
and
xchg
or
push
mov
mov
cmp
jb
rolb
jns
adc
jmp
out
or
aam
push
fstl
adc
cmc
adc
mov
in
int
repz
xor
sub
add
adc
cmp
adc
mov
add
lea
ret
inc
push
mov
push
mov
xor
and
cltd
jmp
jae
dec
movsl
dec
aam
dec
addb
int3
dec
xor
repnz
inc
cwtl
sar
jg
mov
hlt
fsubl
xchg
dec
aaa
pop
jg
sahf
fs
jns
fs
or
push
xchg
mov
imull
or
fdivl
add
dec
popa
mov
loop
je
and
pop
sub
ret
adc
push
sbb
loope
push
in
lahf
and
pusha
mov
and
sub
stos
outsl
xor
add
adc
jbe
int3
cwtl
adc
test
stos
je
ficompl
mov
dec
dec
loop
loope
jno
jo
push
or
push
cmpb
pop
inc
lcall
adc
sbb
loopne
cmp
out
out
out
addr16
jns
popl
dec
dec
gs
pop
mov
in
cmp
iret
xor
pop
pop
je
jb
pusha
xchg
cmpsb
lock
mov
add
ret
or
jge
dec
or
lret
jg
in
push
adc
aas
pop
repnz
cmpl
push
mov
sub
ds
lcall
xor
xchg
sbb
mov
dec
cmp
xor
arpl
jne
pusha
xchg
outsl
daa
testb
les
sti
push
xor
aaa
sbb
adc
xchg
pop
hlt
or
aaa
mov
out
int3
imul
repnz
mov
sub
ds
out
into
xchg
push
inc
movd
pop
sub
xor
and
sub
dec
mov
mov
mov
ss
neg
jmp
sbb
das
movb
add
mov
or
push
and
cmpsl
jge
mov
nopl
and
mov
sub
pop
out
mov
or
arpl
push
and
mov
sub
cmp
enter
push
push
mov
jno
jle
pop
sbb
out
mov
xchg
es
lcall
pop
mov
pop
add
pop
dec
jno
aaa
jecxz
imul
int3
lret
push
fcoml
enter
fsubr
mov
cmpsl
aas
inc
push
mov
fxch
arpl
mov
aas
test
gs
pop
fisubs
jl
inc
pop
or
push
icebp
aas
add
push
inc
cmp
dec
inc
test
xor
inc
and
cmc
push
sbb
in
inc
push
sti
cmpsl
mov
pop
fcomp
sub
rcrb
inc
inc
dec
enter
aam
gs
outsb
gs
and
cwtl
inc
xchg
mov
sub
daa
mov
gs
push
lret
add
test
daa
mov
push
das
cmpsb
test
imul
adc
xchg
add
lret
lret
or
pop
or
into
cvttps2pi
pop
push
lret
cmpb
pusha
fidivrl
mov
dec
adc
pop
dec
jmp
xchg
dec
repnz
in
pusha
cs
sub
mov
jae
ret
jno
fs
sbb
sti
xchg
pop
xlat
cltd
jne
jge
sub
testb
lods
or
xchg
jnp
popf
jmp
dec
loopne
test
xlat
adc
ret
lret
je
sti
outsb
jp
xchg
xchg
push
mov
stc
mov
andb
pop
jnp
les
outsl
rolb
inc
sub
xchg
inc
sti
jecxz
arpl
cwtl
aam
xchg
push
jmp
cmpsb
push
pushf
out
xchg
imul
data16
and
push
test
mov
fbstp
lahf
cmc
insb
sahf
mov
and
add
or
add
xchg
adc
pop
jle
imul
sub
or
jno
in
add
mov
sub
dec
push
pop
jb
mov
insb
mov
ret
hlt
mov
push
into
scas
inc
add
mov
or
das
inc
shll
ret
xlat
sub
repz
mov
xor
xchg
jge
std
je
stos
xchg
or
pop
xchg
pushf
and
scas
xchg
mov
xchg
jo
imul
xchg
add
inc
add
ja
rclb
outsb
jbe
push
xor
dec
pop
xor
mov
movsl
jge
mov
test
testl
into
cwtl
jecxz
int3
dec
jb
aam
add
inc
dec
clc
mov
call
mov
stos
pop
out
test
dec
lret
test
jae
jnp
xchg
pop
pop
cli
inc
add
dec
pop
enter
movsl
jmp
xchg
pop
subb
sbb
loop
test
lds
shl
insl
add
lea
jnp
mov
incb
test
sarb
aas
mov
pop
pop
in
jl
popf
xor
pusha
lock
mov
stc
push
mov
jb
mov
ret
sub
xchg
dec
orl
ljmp
jno
push
cmp
and
lods
and
ds
pusha
fucomi
pushf
hlt
dec
inc
fildl
xchg
xchg
loop
cwtl
push
std
sub
lods
xchg
incb
inc
arpl
jp
outsl
aad
jae
fwait
in
cmp
pop
movsl
sbb
push
or
add
sub
iret
daa
or
aam
adc
jnp
adc
push
add
out
movsl
pop
push
lret
movsl
mov
mov
sahf
stc
test
out
xor
add
icebp
mov
aas
dec
push
jno
ljmp
inc
xor
inc
inc
daa
cmp
mov
mov
dec
in
insl
jge
mov
mov
cld
inc
leave
dec
sbbl
pop
in
mov
stc
push
xor
mov
repnz
ljmp
cwtl
decl
stos
mov
pushl
adcl
into
pop
jmp
adc
loope
inc
int3
xchg
lret
data16
sub
inc
in
je
loopne
mov
cmp
xchg
push
jnp
loop
dec
mov
pop
not
out
test
xlat
mov
push
popf
pop
adc
imul
fucomip
lods
sub
cwtl
out
out
popa
and
enter
dec
mov
mov
inc
xchg
test
mov
fstl
iret
inc
jae
movsl
mov
leave
int
enter
in
mov
mov
adc
push
je
movsb
in
mov
rorl
xchg
push
cltd
lret
gs
std
shrb
das
cmp
addr16
ljmp
aaa
sub
test
scas
cli
pushf
das
fldt
push
sbbb
cmp
add
pop
cmpsl
mov
xchg
ja
gs
add
jnp
pop
pop
add
xchg
push
cmp
pop
decb
cmpsb
je
adc
fisttps
xchg
mov
pop
mov
push
iret
test
daa
aaa
sub
test
in
mov
mov
jle
ret
mov
lret
int3
ss
lret
mov
enter
insb
xor
iret
xchg
test
je
pop
js
inc
loopne
je
test
and
es
jne
pushl
daa
fdivrs
xchg
sub
dec
pusha
enter
adc
int3
fcompl
stos
xchg
push
add
and
daa
jmp
inc
stos
sar
or
pop
and
jp
mov
dec
je
cld
xor
push
xchg
scas
adc
mov
jp
jb
nop
cmpsb
pop
cmpsb
mov
and
push
xchg
fbld
cmp
mov
cmp
push
jno
pop
xchg
xchg
sub
cmpsl
scas
repnz
pop
enter
xchg
cmp
in
xchg
mov
gs
ret
fidivrl
adc
xchg
cmp
mov
or
in
pop
scas
pop
inc
sbb
lret
xor
push
pop
sbb
mov
or
mov
ljmp
jno
mov
fdivr
push
in
xchg
decl
andl
pop
mov
fisubrl
pop
inc
iret
ljmp
pop
sbb
mov
pushf
mov
jle
cmp
cmc
call
xor
pop
icebp
xchg
mov
inc
pop
out
ficoml
xor
ret
out
mov
insb
fsubr
ja
sub
lret
jb
dec
dec
sub
mov
cmp
push
jecxz
cmp
pop
mov
jbe
lret
stos
dec
sub
mov
rolb
mov
mov
dec
mov
rclb
inc
out
idivb
mov
loope
push
dec
cmp
insb
xchg
es
or
outsb
lret
in
in
push
subb
inc
xlat
js
add
jp
cmc
cld
es
jno,pn
mov
mov
xchg
enter
xor
bound
fstpt
pop
mov
jge
lods
mov
jecxz
or
popa
mov
push
and
inc
xchg
pop
std
mov
push
cmpsl
dec
das
outsb
sub
push
sarb
jae
xor
dec
imul
mov
jp
jne
icebp
fcmovne
aas
cmc
testb
sarl
mov
jmp
xor
or
mov
and
sub
jae
push
mov
adc
or
cs
pushf
addr16
sahf
xchg
nop
sahf
push
push
mov
dec
lret
or
xlat
cmp
mov
mov
jge
repz
es
cmc
xchg
jecxz
leave
clc
hlt
add
sub
repz
fcmovnbe
and
data16
pop
outsb
mov
mov
push
sti
loopne
mov
loopne
sbb
sub
pop
mov
fwait
sahf
ljmp
mov
pop
and
mov
negb
jg
or
mov
rcl
push
and
test
cmpsb
int3
clc
xchg
sub
and
pushf
mov
push
aam
push
popf
bound
jp
test
imulb
cmp
jle
add
mov
hlt
or
pushf
imul
jecxz
mov
lods
xor
push
in
sbb
loopne
mov
sti
push
cmp
jbe
sbb
xchg
xor
stc
std
push
or
push
in
sti
push
sbb
xor
out
add
xor
cmp
idivb
shrl
insl
lcall
dec
pop
insb
jnp
test
mov
call
mov
pop
stos
lds
fstpt
pop
cmp
sub
sub
mov
mov
lea
bound
mov
int
pop
mov
jp
lret
and
jp
ficomps
lret
inc
mov
sti
pop
cmpl
xchg
or
adc
lods
lds
push
sti
jb
xor
mov
pop
mov
dec
xor
scas
mov
lret
pushf
addl
push
ss
sub
pop
insl
inc
ds
vpavgw
rcr
xchg
jo
ret
rcr
outsl
fisttpl
adc
pushf
dec
outsb
rolb
jle
dec
or
xor
psrad
or
xchg
xchg
pop
mov
hlt
fstpt
in
js
test
icebp
cmp
mov
cmpsl
in
mov
jo
mov
lcall
arpl
pusha
jmp
fisttpll
mov
jnp
adc
shll
fidivl
fcompl
inc
ret
mov
or
add
jnp
repnz
test
cmp
mov
push
fwait
icebp
repnz
fcoml
mov
push
jge
aaa
mov
mov
into
addb
pushf
sarl
mov
cwtl
repnz
mov
sub
leave
add
std
cmp
fistl
sbb
jp
aaa
add
adc
xchg
adc
or
dec
jnp
fisttps
xchg
out
aam
fisttpl
movl
enter
cmc
addr16
xchg
push
aaa
push
xchg
add
sub
mov
mov
jp
daa
inc
sbb
jg
mov
sub
xchg
or
ret
push
lods
mov
adcb
shll
push
cmpsl
mov
push
dec
push
fpatan
jnp
add
sbb
js
into
lea
jl
and
inc
orl
inc
mov
mov
xchg
mov
jb
popa
lret
sub
xchg
fildll
jb
aad
insl
sbb
jg
into
mov
push
xor
mov
lret
push
cmp
fisubs
push
and
imul
xchg
rcr
and
mov
cld
mov
pop
iret
jo
int3
repnz
or
data16
jo
scas
mov
ret
loop
xchg
adc
mov
jns
mov
mov
popa
leave
ja
jge
jb
mov
int3
shrl
jae
jecxz
pop
inc
stos
inc
imul
dec
add
mov
leave
xor
xchg
jne
fdivl
mov
add
les
push
enter
xchg
push
scas
lock
dec
in
shlb
inc
add
xor
sub
scas
add
dec
push
and
fsubr
repnz
stos
or
pop
jmp
pop
pop
adc
sbb
fists
fmull
fidivs
in
in
jno
call
fidivrs
and
xor
inc
std
push
adc
ss
adc
shl
decl
test
jbe
in
cmp
xor
fs
mov
pop
pusha
iret
fnstenv
cmp
mov
pusha
cs
sti
cmpsl
xor
fldenv
jmp
cmp
push
pop
dec
and
jo
mov
ds
push
adc
xor
bound
mov
dec
cmpsl
out
std
inc
push
xlat
cld
fbld
sti
cltd
adc
int3
jne
jns
pop
and
test
xchg
add
mov
mov
les
in
pop
out
test
ret
fistl
mov
push
fs
dec
fdivr
jecxz
xor
pop
rcrl
mov
dec
adc
mov
xchg
mov
or
jg
mov
pop
xchg
leave
int
stc
cltd
push
and
enter
xor
mov
mov
out
stos
shlb
int3
cmp
sbb
fmuls
cmp
xchg
test
insb
fidivl
clc
or
aam
in
mov
lret
pop
mov
in
dec
mov
lods
add
into
inc
jbe
xor
leave
fnop
out
push
popf
xor
and
dec
mov
push
jge
test
sbb
sar
dec
insl
pusha
test
les
mov
rolb
cmp
loopne
add
dec
es
cli
xor
stos
inc
cmp
xor
mov
mov
push
pop
jb
mov
adc
int3
or
pushf
mov
loopne
and
enter
pop
icebp
inc
fistl
mov
lods
and
adc
rcrb
mov
mov
xchg
mov
sbbb
adc
xchg
subb
xor
addr16
test
add
mov
and
test
cmc
pusha
fucomp
movsl
repnz
aam
int3
fcomps
jbe
cltd
sbb
xchg
out
xchg
and
pop
push
xchg
repnz
insb
xor
jnp
xchg
in
xchg
out
jp
cld
hlt
jmp
cmp
ja
and
and
mov
xchg
push
sub
add
mov
mov
mov
dec
jo
ret
out
out
mov
gs
movsl
xchg
dec
jp
repz
mov
shlb
rcl
xchg
out
pop
xchg
je
and
inc
pop
or
fstp
xchg
int
icebp
jo
popf
and
scas
or
rcr
jae
call
and
jmp
and
hlt
inc
mov
rorl
pop
daa
add
popf
shll
mov
popf
xchg
mov
sub
push
loope
xchg
scas
in
cmp
mov
repnz
sbb
dec
addl
and
push
inc
call
dec
cmpsl
fnstenv
lock
jno
dec
loop
lahf
push
mov
cmp
push
insl
add
xor
cmpsb
mov
arpl
xchg
cs
outsl
sbb
popf
mov
cmp
inc
jecxz
mov
xchg
test
fmuls
push
push
or
cmp
dec
mov
cmp
mov
lods
inc
jg
mov
mov
xchg
icebp
xor
aam
aam
out
sbb
mov
test
lret
mov
in
fdivrl
mov
lods
push
cmc
mov
mov
dec
mov
push
mov
arpl
xchg
mov
testb
cmp
and
call
pop
orb
jns
movsb
jg
cmpsl
mov
push
pusha
lahf
adc
mov
popa
xor
sbb
into
fcmovbe
outsl
and
xor
js
dec
and
push
cmc
or
push
repnz
ds
loope
xchg
dec
push
ret
insb
loopne
shrl
fyl2x
add
xchg
inc
mov
inc
cmpsb
imul
fmull
mov
dec
pop
cli
jo
shlb
inc
dec
xchg
popa
or
rorl
lods
nop
fimull
dec
cmp
cld
push
dec
and
fcoms
mov
mov
pop
sbb
js
dec
enter
mov
lods
jb
jno
lret
imul
fimull
ljmp
and
xchg
pushf
mov
adc
xchg
orb
mov
testl
into
lods
mov
movsb
cmp
nop
cltd
and
pop
push
ljmp
outsl
dec
dec
mov
mov
push
data16
inc
mov
aad
or
data16
mov
or
jbe
fwait
mov
jns
inc
xchg
pop
sahf
int3
cmpsb
in
add
jo
jo
cmp
cli
aas
outsb
cmp
push
sarl
jle
mov
xchg
pop
cmp
add
sub
xchg
dec
ds
pop
pushf
cmc
in
std
adc
xchg
or
jmp
jge
pop
pop
stos
xchg
jnp
or
mov
imul
divl
and
enter
daa
test
sarl
das
call
cld
or
daa
push
lcall
insb
out
pop
and
add
mov
sbb
pop
pop
data16
lret
fs
sbb
push
mov
cmp
cmp
xchg
mov
sbbl
pop
cmp
sub
dec
cmpsl
xchg
adc
and
pop
movq
aas
iret
push
mov
out
popa
and
mov
stos
or
and
out
shlb
dec
sub
and
loopne
test
and
test
dec
inc
fwait
push
inc
lds
inc
enter
insb
jae
push
sub
lods
sbb
cmp
cmp
and
or
cmpsb
pop
pop
iret
and
push
or
sbb
and
add
stos
push
pushf
vpmacsdql
adc
jle
push
ljmp
add
lahf
lahf
jg
or
scas
xchg
add
xchg
in
and
shll
in
test
decb
out
jae
fsubrl
add
cmpl
icebp
sub
mov
mov
fiaddl
cli
mov
stos
sub
call
mov
rcrl
insl
les
mov
popa
testl
jmp
sbb
and
xchg
pop
add
xor
outsl
inc
mov
xchg
mov
sbbb
add
nop
nop
or
das
mov
popa
mov
testl
repnz
push
and
xor
aas
movsb
pop
outsl
lret
fnstsw
jmp
pop
xchg
xlat
and
fcomp
sub
and
lods
jmp
jecxz
popf
mov
push
xor
sub
lcall
fldt
loope
pop
jmp
and
mov
adc
push
imul
negb
xchg
sbb
bound
daa
cmp
rorl
mov
scas
imull
adc
sub
imul
cmc
adc
or
orb
jge
imul
popf
jnp
xchg
in
fsts
std
popf
iret
sbb
jo
sub
push
insb
ljmp
sarl
lock
adc
test
adc
ret
add
jp
add
add
pop
push
xchg
mov
scas
and
test
adc
mov
mull
stc
jle
mov
dec
xchg
inc
movsl
dec
aas
lahf
cs
out
outsl
sbb
push
leave
test
aaa
jae
les
dec
sub
push
push
ret
pop
js
xchg
in
mov
fs
pop
or
fnstcw
stos
inc
das
mov
and
push
leave
add
stc
popa
pop
pop
cltd
test
adc
idivb
sbb
xor
xchg
negl
and
push
jecxz
or
and
notl
mov
add
stc
mov
add
es
cld
inc
sbb
jmp
sahf
aam
pop
cmp
cli
inc
cwtl
sbb
mov
push
xchg
pop
repnz
sub
mov
jle
mov
les
push
in
jne
cmp
push
inc
je
ss
out
gs
fnsave
stos
push
add
sbbb
js
mov
fldcw
pop
xor
or
lock
ficompl
shlb
push
rorb
cs
mov
sub
pop
pusha
out
jbe
scas
and
push
or
jne
shrl
imul
call
leave
jmp
std
mov
xchg
sbb
repz
cli
push
or
adc
data16
dec
jbe
cmp
fwait
and
cmp
cmc
std
repnz
inc
mov
xchg
cmp
lock
add
stc
test
shrl
dec
sbb
aam
sub
iret
mov
sub
mov
jg
cs
fildll
int
adc
dec
in
imul
pop
ss
lcall
cltd
repz
insl
sbb
jp
adc
ss
push
shrb
mov
imul
imul
out
xorb
les
mov
xchg
loope
fmull
mov
push
or
fidivrl
jbe
popf
sbb
sub
dec
push
and
insb
cmp
lret
cs
cmp
out
out
pop
fs
cld
or
adc
leave
mov
ret
notl
mov
in
scas
mov
lret
shlb
adc
int3
insl
xchg
aam
or
pop
popf
fisubl
jl
stos
lcall
mov
and
add
sub
cmp
testb
or
sub
repnz
ljmp
cltd
jo
iret
fldt
leave
or
fs
push
test
and
std
es
xchg
mov
mov
jae
mov
adc
cltd
xchg
jns
dec
in
pushw
int3
push
stos
aas
mov
cmpsb
mov
pop
pop
ret
jb
sbb
pop
or
jle
add
les
testl
jmp
adc
rcrl
cmpsb
push
jge
cmp
stc
xchg
ds
jmp
cmp
pop
ss
pop
movsl
icebp
push
data16
xchg
pop
jge,pn
or
addl
fsubs
pushf
xor
jge
mov
sub
movsb
xchg
pop
mov
rorb
jge
cmp
sbb
xor
push
sbb
dec
pop
inc
inc
mov
outsl
test
mov
popf
shrl
mov
sub
jmp
mov
pop
or
adcl
addr16
dec
jb
movsl
int3
jo
in
rclb
push
out
xor
mov
mov
push
mov
xor
pop
jmp
icebp
enter
mov
xor
mov
xchg
loope
add
ss
xlat
add
stos
cmp
cmp
sarl
cmp
imul
icebp
hlt
xlat
test
push
push
out
popf
movsb
xchg
add
jl
test
add
aaa
push
lock
repnz
sub
stos
add
testl
push
push
fbld
cmc
arpl
out
addb
xor
xor
push
mov
sahf
je
adcb
sbb
out
inc
or
cli
jmp
and
arpl
jp
xor
push
fwait
mov
cwtl
push
shlb
sub
fsubl
inc
aam
je
sub
mov
sarb
addb
dec
xchg
jl
inc
mov
daa
ljmp
xor
test
jmp
stos
adc
sbb
addps
loope
adcb
es
loope
fdivs
jnp
insl
mov
jge
or
daa
add
push
mov
jle
cmp
sub
add
mov
jno
add
les
cwtl
fistpll
adc
dec
insl
imul
fidivl
cld
aaa
loope
mov
ret
lods
repz
insl
clc
fistpl
jg
outsb
dec
ds
pop
adcl
ret
xchg
jae
cmp
stc
in
incb
test
add
test
lods
subl
jle
adc
jae
mov
xchg
sbb
sahf
int
aas
sbb
xchg
push
jle
in
movsb
es
dec
jne
das
add
mov
push
or
sub
jb
fwait
imul
jp
shlb
mov
xchg
push
fsts
js
push
scas
mov
out
sub
scas
add
xchg
xor
mov
adc
inc
out
sbb
mov
les
adc
int
scas
in
out
add
adc
dec
test
or
push
call
cmpl
das
inc
adc
xor
push
dec
scas
ss
mov
repnz
jne
faddp
movsb
stos
mov
movsl
div
jnp
sti
pop
ljmp
jmp
jecxz
sahf
test
jl
add
and
orl
sub
imul
imul
pop
test
add
lods
cmp
xchg
add
adc
xchg
xchg
push
test
fwait
push
mov
shrl
scas
enter
rolb
add
outsl
mov
add
mov
or
cmp
jne
or
aaa
ret
std
cmpsl
ja
gs
mov
cltd
into
mov
add
mov
add
inc
stos
out
mov
f2xm1
shll
repz
pop
mov
repnz
lahf
stos
mov
jp
mov
orl
xchg
pop
cli
test
in
sub
hlt
cld
lahf
cmpsl
inc
sub
inc
js
cmp
outsb
pop
lahf
lahf
dec
ret
gs
sbb
sub
push
sbb
arpl
pop
scas
aad
ljmp
out
dec
mov
inc
adc
loopne
sti
mov
stos
pop
rclb
mov
sbb
mov
ds
adc
popa
scas
jg
ss
sub
push
in
jl
mov
out
push
mov
push
mov
mov
ds
adc
les
ss
mov
xchg
js
push
mov
aaa
mov
int3
lcall
popf
jp
inc
xchg
add
jecxz
jb
push
sub
pop
cli
sub
mov
pop
jae
dec
dec
mov
mov
int
ljmp
xchg
mov
jnp
inc
lcall
sbb
push
aaa
cmpsl
jns
or
sbb
xchg
push
pop
mov
mov
lds
sub
mov
ja
or
jne
je
mov
incb
sbb
inc
sbb
cltd
test
je
and
and
mov
out
push
xchg
mov
jb
lret
lret
or
es
mov
sub
fidivrl
in
dec
inc
or
push
orb
xchg
addb
lahf
test
movsl
les
dec
out
out
or
cmp
sub
mov
sub
int
fists
rcll
addb
sbb
and
adc
dec
xor
mov
xor
test
add
movsb
jmp
mov
fldl
mov
in
imul
push
inc
mov
mov
dec
std
or
sbb
mov
cmpsl
sbb
adc
ds
ret
mov
and
test
into
mov
clc
or
shrl
js
sbb
cmp
sarl
mov
rorl
dec
push
mov
jns
pop
andl
in
add
lds
ret
scas
push
popa
aad
repz
stos
ficomps
xchg
mov
aam
inc
arpl
xchg
jo
bound
sbb
inc
add
stc
shrl
lds
lret
mov
bound
ret
ljmp
adc
stos
dec
daa
repnz
lds
cmpsb
loopne
mov
xchg
push
inc
or
adc
dec
and
sbb
sub
push
inc
mov
mov
xchg
pop
mov
sbb
lods
icebp
in
aaa
shlb
aad
aad
push
mov
push
int
cmp
movsl
push
xchg
pop
mov
adc
sbb
popa
loopne
mov
fs
cmp
adc
mov
cwtl
lods
xor
out
xor
push
xor
pop
imul
add
shll
notb
xchg
cmp
xsha256
cmpsb
aad
mov
jne
in
aas
jle
jns
jl
inc
gs
aad
sbb
daa
je
fidivrs
maxps
fisttps
lahf
ds
cld
add
cmpsl
dec
cld
in
sub
or
test
xchg
jmp
jbe
and
testb
incb
inc
mov
cmp
or
test
pop
pop
cld
mov
xchg
in
out
outsb
test
jecxz
cli
push
or
inc
sbb
subl
sarl
pusha
addr16
test
daa
xor
xlat
push
aas
pop
xlat
out
mov
jne
pop
cmp
mov
dec
cmp
jmp
and
lahf
ds
insb
dec
pusha
mov
cmp
inc
push
mov
adc
outsb
add
cli
movsl
jl
insb
xchg
outsb
pop
mov
add
repnz
push
repnz
enter
mov
mov
sbb
imul
std
sbb
shufps
inc
xor
mov
sbb
test
or
fidivl
movsb
fdivs
mov
lods
addb
sub
into
pop
push
test
in
sub
pop
enter
pop
or
lret
xchg
test
xchg
xchg
cs
lods
in
mov
das
inc
cwtl
sarl
mov
add
popa
loop
xlat
pusha
jno
push
jg
jle
pusha
das
push
cmpsb
mov
gs
mov
mov
pop
aam
test
mov
push
xchg
daa
xlat
pop
sti
fwait
sub
lret
shrb
fxch
icebp
pusha
fdivr
sub
xor
js
jl
pop
xor
inc
in
inc
mov
bound
add
and
xchg
test
add
scas
ret
cltd
xchg
and
cwtl
mov
test
xchg
and
dec
in
test
in
push
inc
jne
adc
pop
cmp
lcall
ja
daa
in
and
xchg
xlat
or
enter
mov
lods
aas
arpl
sub
and
cmp
imul
push
push
add
mov
test
pop
sub
mov
xor
fwait
call
ficoms
sub
and
mov
repnz
sub
pushf
jg
enter
push
xor
call
rcr
add
hlt
roll
popa
adc
xchg
mov
or
xchg
dec
in
sarl
iret
data16
mov
mov
cmp
dec
pop
pop
mov
cld
xchg
stos
fildl
fcmovb
xor
adc
pop
or
jg
jbe
adc
test
push
popf
cmp
aaa
nop
sub
mov
mov
lds
aam
add
push
out
jnp
idivl
js
pop
and
cmpsb
pop
pop
mov
lods
cld
inc
dec
lahf
mov
lods
xor
fwait
inc
dec
mov
loope
data16
add
movsb
push
leave
jbe
jae
mov
mov
sbb
cmp
cmpsl
les
mov
jo
sub
push
jae
sub
imul
sbb
out
or
test
cmpsb
inc
push
mov
mov
mov
mov
loop
sbb
ficompl
cltd
jns
xchg
jnp
and
popf
and
mov
or
dec
nop
out
cmc
mov
adc
fwait
int3
fldl
cli
cmp
sub
xor
sbb
jge
xchg
push
movsl
popf
xor
add
lahf
cmp
xor
push
sub
push
sub
jno
repz
pop
xor
into
fcoml
or
scas
fnstenv
bound
rorb
outsl
ds
test
sbb
sub
js
pop
jge
mov
and
mov
ret
jl
int3
daa
mov
test
cld
mov
test
std
jg
insl
lods
inc
pop
xor
sbb
inc
pop
sbb
pusha
mov
or
push
inc
dec
jae
xor
xchg
pop
jl
test
cmp
pop
push
jo
dec
cmc
inc
inc
xchg
sub
jbe
rclb
mov
xchg
sbb
cmp
rclb
push
ds
filds
and
and
ljmp
mov
xor
popa
push
mov
in
jle
push
movsl
push
mov
xor
dec
arpl
shrb
loope
xor
dec
std
ljmp
inc
dec
ficoml
xor
dec
or
jbe
repz
jge
js
cmc
int
dec
in
inc
ffreep
sbb
mov
mov
shl
pop
lds
je
push
clc
xchg
fwait
sahf
clc
xchg
lock
sbb
mov
add
xchg
js
cmp
lea
test
adc
pop
mov
bound
dec
es
jnp
cmp
fadds
adc
nop
push
xlat
test
and
data16
ret
cmpl
xchg
sub
pop
repz
sbb
andl
stos
sbb
pop
daa
leave
xor
repnz
dec
gs
fdivrs
mov
outsl
add
fsub
sti
and
lcall
ja
push
sbb
sub
pusha
cmpsl
rorb
aad
jl
add
sub
sub
jno
mov
std
jg
hlt
lea
and
pop
popa
pop
aad
shlb
pop
sbb
xlat
mov
cltd
jecxz
not
pop
adc
lahf
aad
xlat
and
fucom
dec
pop
add
xor
in
decl
pop
in
fwait
pushf
xor
lahf
pop
ljmp
jmp
sub
ljmp
scas
fstl
ljmp
mov
add
lret
cld
roll
mov
cmp
pop
xor
push
addb
push
cmc
addr16
push
test
lods
outsl
mov
jge
divl
ds
lret
pop
scas
mov
cli
push
cmp
or
pop
iret
mov
arpl
jge
sbb
insb
dec
sbb
shrb
mov
lret
push
mov
fmull
stos
in
and
push
addr16
scas
jecxz
mov
popf
push
mov
fidivl
push
sarl
clc
push
inc
adc
out
cld
ss
inc
add
and
lds
fwait
mov
rorb
and
jns
jecxz
pop
insb
xchg
call
mov
mov
fs
pop
ljmp
xor
dec
pop
sbb
mov
testb
int
mov
inc
or
add
dec
call
lret
inc
sub
call
negb
or
cs
js
add
xchg
cs
call
push
mov
sbb
lods
movsl
clc
sbb
movl
add
ja
lods
and
or
lds
xor
cwtl
mov
fistl
jg
push
or
sbb
jle
pop
lock
lret
sub
loop
out
push
inc
mov
repnz
mov
test
test
insb
push
xor
sub
das
iret
xor
fcoms
scas
jbe
dec
cmp
call
sti
push
adc
stc
test
ss
pop
rcrl
data16
jmp
test
xchg
pop
insl
ror
xor
sbb
imul
push
sbbb
push
mov
or
xor
movsl
pushf
cli
mov
cmpb
and
or
jmp
mov
out
and
push
mov
movl
cwtl
adc
dec
add
jns
mov
jb
arpl
sub
mov
shrl
inc
bound
dec
mov
arpl
sbb
adcb
pop
cli
cmp
sub
mov
imulb
lds
test
and
and
cmp
mov
les
mov
lret
jge
mov
mov
push
lods
cmp
adc
popa
data16
sti
dec
inc
int3
arpl
nop
data16
inc
imul
inc
out
xchg
ret
jg
sub
xchg
test
out
lock
and
imul
jns
pop
mov
scas
js
int
dec
dec
or
out
add
outsl
mov
lahf
sbbl
repz
lods
sub
cwtl
push
cmp
repnz
cmpsl
add
lahf
cmpsl
aaa
dec
mov
adc
pop
test
repz
mov
call
or
jno
xchg
dec
movsl
dec
push
fadds
orl
mov
fldt
test
push
sub
push
test
out
mov
addr16
pop
pop
test
pop
jns
sub
insl
add
mov
push
cmp
mov
dec
test
cli
inc
cs
lock
pop
imul
ja,pn
add
rcrb
adcl
repz
das
jae
add
inc
inc
cmp
and
ljmp
push
ret
xor
out
insb
mov
clc
or
daa
inc
cmp
notl
fisubrl
mov
lahf
pop
test
xchg
mov
pop
mov
pop
in
notb
icebp
or
dec
cmpsb
jle
iret
mov
sbb
lahf
stos
inc
scas
mov
push
flds
pop
sub
sub
insl
test
cltd
sub
or
enter
and
cs
cli
cld
jae
inc
ret
shrb
call
ffree
or
ffree
inc
push
cmp
sub
xchg
pop
and
popl
addl
push
pop
and
mov
or
push
jo
rcrb
sbb
jle
pusha
daa
loop
loopne
iret
out
cmpsl
ja
mov
lret
or
outsb
aam
xchg
adc
popf
addl
jp
fwait
insl
pushf
stos
mov
xor
sbb
sbb
mov
dec
mov
lahf
insl
data16
push
fisubs
fcompl
insl
mov
xor
mov
push
fildll
rorl
mov
sbb
aaa
hlt
jns
jo
cmc
adc
mov
pop
adc
jge
jg
popf
lock
lock
cmp
pop
out
mov
into
or
je
fxch
xchg
mov
mov
pop
aam
inc
pop
js
lea
std
lahf
clc
push
dec
and
mov
enter
add
inc
jbe
jno
and
inc
lods
xchg
pop
mov
sbb
adc
pop
push
sub
cmpl
mov
push
inc
test
inc
xchg
cmc
mov
mov
jle
sahf
mov
leave
pusha
xchg
push
xor
test
nop
mulb
cmp
push
pop
xor
sbb
pop
jl
jmp
xor
push
inc
adc
out
mov
add
dec
mov
or
add
rclb
jl
mov
mov
notb
aas
cld
jae
ja
jecxz
lea
adc
jg
icebp
movsl
jae
pushf
add
mov
pusha
cwtl
cld
dec
inc
xchg
jecxz
jne
int
jns
aad
popf
sbb
stos
sbbb
cmpsb
lock
fisubrs
dec
gs
insl
add
push
jmp
notb
mov
gs
imul
mov
mov
jno
push
adc
in
fwait
dec
sbb
cmp
cmp
scas
and
in
stc
inc
jne
mov
loopne
cli
aad
adc
cmpsb
fimuls
scas
gs
push
mov
fwait
pop
test
jnp
loope
cmp
daa
or
insl
les
jb
adc
outsl
push
in
mov
inc
lret
inc
dec
xchg
jbe
mov
push
jns
or
inc
push
in
jne
ret
rcrl
xor
and
das
mov
push
clc
adc
test
out
out
xchg
fisubrs
aaa
sub
daa
xor
addl
icebp
mov
add
mov
jg
add
and
jns
adc
ss
push
xchg
loopne
notl
les
xchg
das
inc
sbb
mov
jns
mov
gs
outsb
xlat
das
outsb
jp
test
xlat
xchg
scas
popa
inc
xchg
xchg
jl
data16
cwtl
push
cld
sbbb
mov
xor
aaa
imulb
sub
and
jo
xor
stc
or
push
push
test
xor
lret
lods
or
imul
sbb
sbb
dec
mov
dec
mov
out
dec
rcrb
cmpsl
out
das
sub
pusha
jg
dec
jge
iret
into
iret
mov
push
inc
cmp
push
popf
das
js
out
jns
jmp
fcoms
cmp
pop
fisttpl
xor
mov
cmpsl
sahf
fstpl
pop
cmpsb
cmp
cmpsb
xchg
aaa
mov
mov
test
add
jmp
lahf
loop
dec
and
sbb
adc
nop
je
dec
cwtl
stos
jne
ljmp
xchg
mov
lret
add
loopne
push
lahf
not
mov
dec
mov
mov
repz
mov
daa
push
and
jne
sub
or
pop
adc
push
shlb
jbe
sti
fldt
fs
ds
or
inc
pop
fnsave
leave
pusha
decb
push
jb
fsubs
push
ds
push
cmp
adc
xchg
test
ss
pop
push
out
iret
jb
xchg
aas
pop
movsb
sti
xchg
pop
inc
jl
inc
scas
data16
lret
addr16
dec
cmp
sbb
or
cmpsl
ds
mov
xchg
mov
stos
imul
mov
pop
push
mov
fs
cmp
das
push
clc
nop
adc
or
std
mov
mov
in
vfrczsd
xor
mov
dec
push
xor
fisttpl
notl
mov
add
mov
add
xchg
xlat
add
mov
imul
mov
or
cwtl
aaa
ret
addps
sbb
std
icebp
push
arpl
cmp
xor
in
imul
sahf
movsb
lea
cmp
aaa
cld
xor
negb
outsb
xor
bound
add
iret
leave
xlat
add
jnp
mov
bound
push
and
repz
int
daa
pop
das
loope
ss
inc
jg
stos
or
pop
addr16
cs
loop
ret
sub
mov
inc
imul
xchg
or
daa
cli
or
pop
dec
repnz
shlb
or
outsb
cltd
mov
cmpsb
jl
daa
les
sbb
add
jae
jae
mov
in
fcoms
adcb
repz
mov
add
negb
cmpsl
pop
mov
and
mov
mov
sarl
xor
cmc
mov
push
cwtl
das
push
jmp
shl
jp
loop
jl
scas
mov
mov
inc
stc
xorb
sub
pop
mov
add
es
fs
push
jg
outsb
push
sbb
mov
xchg
outsb
sub
jmp
pop
hlt
mov
test
and
cmc
jns
adc
pop
push
aam
push
out
sbb
movsb
cmp
push
lret
jbe
ret
cmp
ror
test
xchg
aaa
jnp
or
xchg
inc
or
pop
adc
cmp
xor
sbb
inc
out
sbb
pushf
in
or
pop
and
aam
sub
mov
and
ss
mov
test
sub
fdivs
int3
pop
ret
push
add
sub
mov
push
pusha
add
arpl
sub
push
shlb
push
pop
repnz
jmp
cs
rolb
fwait
mov
dec
push
adc
mov
fnstsw
repz
stos
test
dec
xor
out
pop
lods
shl
xor
bnd
pop
insb
or
mov
pushf
mov
push
cmp
ljmp
rcrb
jb
pop
jle
mov
and
and
add
mov
mov
rcr
ljmp
sahf
orl
jg
out
enter
bound
push
cmp
xchg
loope
in
daa
fldcw
mov
outsl
test
js
sbb
xorb
xor
sub
sbb
in
arpl
in
mov
sbb
jae
add
sub
sub
loopne
jp
iret
cmpsb
adc
lock
push
in
push
inc
inc
xchg
pop
sahf
mov
inc
fisubs
pop
data16
cmp
xchg
push
mov
arpl
xchg
imul
out
or
cmp
pop
and
jae
push
sub
clc
outsl
pop
push
lods
pop
lea
add
xchg
xchg
cmp
popf
dec
xlat
mov
add
aad
xor
mov
fldl
xor
mov
outsl
out
pop
dec
movsl
jg
leave
movsb
fwait
pop
sub
jg
out
pushf
pop
popl
popf
js
cwtl
adc
mov
xchg
sub
pop
out
fidivl
andb
add
clc
nop
fbld
inc
mov
mov
xor
or
cmp
lea
mov
mov
pop
in
pop
clc
lcall
lods
jo
ds
push
xor
xchg
lret
enter
xor
fwait
mov
mov
push
fdiv
lret
and
sbb
int
cmpb
mov
shrd
fistl
std
pop
cld
xchg
scas
lret
mov
push
fldcw
dec
mov
sub
cmp
orb
stc
xor
or
lret
fdivrs
push
mov
fcomps
mov
inc
ljmp
xchg
sbb
cmp
sub
or
xchg
fisttpll
and
js
fsubs
dec
stos
inc
jnp
dec
out
rcrl
arpl
xchg
xchg
dec
aam
hlt
dec
stos
gs
mov
xor
adc
push
popa
pushf
mov
out
in
mov
loop
sub
in
shl
imul
mov
adc
mov
lret
push
cmp
fdivrl
mov
lea
arpl
mov
mov
mov
ret
hlt
idiv
pop
add
or
cmp
add
mov
data16
inc
or
mov
out
fsubrp
pop
jmp
fstps
dec
addr16
xchg
cwtl
push
inc
pop
hlt
xchg
pop
mov
mov
mov
mov
scas
in
fisubs
inc
push
ss
je
stos
dec
pop
cmpsb
sti
xor
xor
push
jle
xor
test
sbb
shl
xchg
push
scas
inc
mov
jb
jne
or
nop
add
lods
dec
lcall
test
shrb
loopne
enter
jns
pop
fs
add
movsl
cld
push
lock
fiadds
xchg
xchg
add
push
aaa
insl
jb
sub
das
jo
movsl
ds
jp
fstpl
jp
popa
leave
mov
lret
pop
adc
add
push
lcall
mov
aas
ret
xor
mov
and
mov
daa
ret
xchg
mov
pop
cmp
jnp
incl
and
popf
jecxz
and
mov
fcmovbe
inc
mov
scas
shr
sbb
gs
dec
scas
mov
leave
adc
in
pop
bnd
pop
dec
cmp
pop
mov
jnp
ret
cmp
adc
out
lahf
js
push
ljmp
and
push
lea
gs
rorb
mov
add
mov
psadbw
jle
push
xchg
push
xor
cmp
insl
lock
push
push
inc
xor
fisubs
ljmp
lea
outsl
push
xor
gs
or
lock
test
gs
sbb
adc
jnp
adc
xchg
pop
outsl
lods
dec
test
int
imul
jl
out
xchg
or
cltd
mul
push
shrl
subb
sub
sub
add
inc
sub
push
dec
notb
test
repnz
psubb
adc
dec
imul
cld
insb
pop
sub
fstp
sub
jne
xor
in
ja
jae
imul
sbb
cmp
rcll
int3
nop
divb
add
daa
pop
fsubr
xchg
dec
in
mul
jp
dec
notb
mov
jecxz
jae
fadds
mov
sub
cmp
sbb
jne
sub
insl
or
bound
pop
aaa
scas
push
xchg
pop
cmp
inc
push
cmp
lcall
mov
mov
xchg
adc
das
movsb
pop
xchg
fisttps
and
shrb
test
push
xor
dec
pop
cmpsl
insb
rcll
and
mov
adc
jb
add
loope
loop
test
pop
imul
enter
lock
cmp
sub
cmp
test
ds
mov
js
imulb
or
dec
inc
in
jp
dec
lods
fldt
jne
fwait
inc
test
mov
fnsave
fidivl
fisubl
dec
popa
fsubrl
mov
mov
imul
fnsave
or
dec
cmp
pop
sub
lret
xor
add
aam
ss
out
mov
mov
fsubl
jno
enter
dec
add
ficoms
jecxz
and
jo
adc
dec
popf
cmp
push
imul
aas
mov
vpcmpgtd
pop
jne
mov
imul
mov
fwait
pmullw
jo
jmp
cmpsl
xchg
test
mov
insb
mov
adc
rol
popa
add
outsb
pop
addr16
adcl
mov
push
add
shlb
loope
lret
pop
mov
ficoms
ret
lahf
cs
gs
mov
lahf
out
outsb
loope
xor
je
leave
pushf
testl
loopne
mov
mov
pop
inc
sbb
pop
jne
int3
iret
jnp
bound
sub
sbb
and
mull
dec
aad
jecxz
aam
mov
mov
por
push
imul
jp
add
sbb
xchg
and
test
dec
push
pop
dec
popf
cli
loope
and
aas
mov
add
pop
addr16
xchg
jne
cmp
xor
repz
cmp
push
pop
or
loop
sarl
mov
push
pop
dec
pop
cmp
mov
sarb
sar
sbb
subb
aam
call
xchg
jnp
loopne
add
fs
add
lea
sub
add
cmp
es
and
and
mov
daa
ret
andb
push
jbe
jnp
and
orb
dec
movsl
jmp
into
mov
int3
mov
imul
ljmp
pop
call
cmp
xor
mov
aas
push
inc
nop
fadd
aam
test
jge
push
scas
mov
inc
data16
outsb
aad
fdivl
lcall
push
lret
andb
stos
mov
sbb
ret
call
or
insl
mov
or
xchg
add
and
adc
cmpsl
mov
cld
loop
push
cmpsb
mul
das
jae
xor
lcall
inc
ljmp
je
xchg
enter
call
lods
out
pop
mov
dec
scas
daa
outsb
cmp
mov
ds
aas
popf
mov
push
mov
fstpl
and
xchg
jg
cs
pop
loope
rorl
imul
or
test
bound
or
adc
inc
icebp
mov
cmp
fs
scas
push
cld
xlat
shl
flds
test
mov
sub
cmp
push
xor
add
movsl
int
lock
stc
adc
xchg
sbb
hlt
shrl
call
repz
in
sub
adc
mov
jp
inc
out
mov
push
mov
mov
in
pop
das
cwtl
jecxz
sti
pop
cmp
aas
outsb
jne
enter
pop
xor
lods
and
xchg
inc
dec
lret
out
nop
movsb
sbb
jp
insb
data16
jns
or
or
jb
push
mov
jae
test
incb
adc
rcrl
jae
rcl
jns
jns
xchg
imul
mov
ds
and
rorb
jb
sbb
and
fwait
fs
fisubl
cltd
enter
xchg
addr16
scas
incb
cmp
inc
sbb
insb
mov
and
call
and
cmc
push
sbb
clc
inc
jle
pushl
in
push
xlat
xchg
push
imul
sub
lret
das
mov
popf
lret
pop
sub
sub
mov
cmp
push
inc
mov
insl
cmpsl
fs
jo
dec
ret
add
movsb
mov
in
das
ret
jbe
outsl
in
dec
fcmovbe
cmpl
mov
cli
add
std
mov
mov
pop
out
mov
adc
or
adc
jmp
hlt
lock
je
test
lods
aas
lret
scas
pop
sbbb
neg
repnz
pop
daa
bound
aad
push
jecxz
cmc
pop
das
add
or
hlt
pop
mov
push
pop
imul
pop
jle
or
jo
in
jl
sbb
arpl
push
popf
inc
ffree
pop
mov
addl
push
add
addb
or
cld
add
ljmp
test
shrl
adc
into
or
cmp
cld
and
xor
cmpb
add
je
and
lret
xor
add
xchg
add
mov
adc
cmp
sbb
les
sub
aaa
stc
push
lea
daa
aad
xor
decb
or
enter
cmpsl
sbb
mov
mov
dec
cmp
jns
dec
pop
imul
and
test
mov
cmp
movsl
bound
xor
push
pop
mov
scas
inc
inc
xchg
cmc
push
lcall
and
adc
mov
stc
in
inc
fsubp
mov
adc
je
jmp
pop
xor
fdivrl
lods
and
jecxz
cld
mov
out
shl
in
mov
and
push
jbe
pop
stc
mov
out
mov
enter
insb
mov
hlt
or
pop
and
iret
das
adcb
push
fidivrl
sbb
xchg
xchg
leave
pop
jae
inc
arpl
js
or
inc
jmp
mov
les
lods
mov
cwtl
out
add
jo
cmpsb
addr16
idivl
fs
jge
and
adc
xchg
test
jbe
push
sub
addr16
mov
sbb
movsb
inc
imul
adc
adc
je
xchg
jge
adc
pop
sbb
jb
add
lods
inc
push
push
xorl
stos
xor
inc
adc
add
mov
adc
pop
or
push
and
mov
std
xchg
or
popf
addr16
leave
inc
xor
roll
push
dec
mov
aad
inc
and
addr16
ds
imull
les
dec
xchg
pop
repnz
inc
jns
hlt
fs
inc
aam
jb
xchg
inc
popa
outsl
outsl
push
daa
push
mov
in
pop
mov
int
mov
dec
inc
jp
nop
nop
es
dec
cmpsl
in
sahf
sub
and
jg
push
push
aaa
filds
addl
aam
pop
pop
add
js
pushf
shrl
addb
addr16
xchg
push
lret
daa
sub
or
mov
dec
xchg
xchg
xchg
imul
xchg
mov
cwtl
inc
xor
loope
in
or
inc
fsubrl
loop
push
fwait
pop
idivl
xchg
mov
cmc
dec
sarb
sbbb
sbb
mov
loope
xor
jg
pusha
xchg
push
ret
dec
out
xchg
jmp
sbb
mov
push
js
sbb
xchg
sbb
mov
scas
xor
mov
xorb
jno
lcall
mov
out
xor
xchg
shlb
imul
sub
mov
jne
add
add
div
pushf
popa
fsubrs
addl
jne
fnstcw
fldt
add
lret
in
push
divl
xchg
lods
or
cmpsl
mov
jge
lock
cmp
push
test
js
adc
in
cmp
xchg
mov
dec
es
into
ds
outsl
stos
lret
loopne
out
nop
mov
mov
hlt
movsl
sub
and
stc
dec
loope
dec
and
push
fadds
adc
push
mov
jge
mov
xchg
arpl
mov
jecxz
lods
pop
mov
dec
mov
lcall
loope
pop
inc
fstpt
popa
dec
lret
xor
adc
std
mov
notb
scas
fxam
bound
int3
and
inc
loope
add
push
call
out
and
mov
push
je
mov
add
jno
repnz
dec
loope
mov
imul
testb
nop
in
add
push
jecxz
xlat
fdivrp
pop
ds
popa
arpl
dec
push
cmp
scas
mov
cmp
les
ss
sbb
insb
adc
xchg
insb
in
push
in
sbb
mov
les
cli
inc
add
or
pop
pop
mov
jge
insb
call
loopne
lahf
cmc
test
ret
inc
and
lret
bound
mov
jmp
push
xchg
mov
push
sbb
mov
mov
add
les
nop
adc
mov
icebp
sbb
inc
jmp
aaa
and
push
lret
and
push
lods
cmpsb
out
imul
pop
mov
test
shl
inc
cmpsb
lds
es
into
mov
ljmp
xchg
inc
popf
xlat
mov
arpl
jnp
pop
loop
push
pop
or
pusha
ss
stc
cli
cmp
mov
mov
pop
add
mov
mov
push
andb
xor
sub
scas
subl
jle
cld
xor
dec
jae
sbb
stos
aad
or
or
push
movsb
jno
xor
sarb
jecxz
cmpsb
and
hlt
scas
sub
adc
push
outsb
int3
out
jb
inc
xor
dec
lods
arpl
fnstenv
inc
test
imul
popa
jo
pop
adc
out
pop
jne
xor
sub
js
inc
pop
mov
into
xlat
outsl
dec
and
lret
jno
jecxz
push
out
orb
or
cs
jge
add
aam
shrl
mov
bnd
sub
add
fbstp
mov
add
mov
in
adc
out
xlat
sub
push
xchg
sub
pop
mov
int
and
nop
loopne
push
repnz
pop
sahf
mov
std
push
popa
stos
and
and
fimull
pop
aas
ds
stos
sub
mov
push
mov
dec
xchg
or
jmp
pop
push
addr16
aas
dec
xchg
in
push
sbb
push
mov
sbb
js
out
xor
aam
add
inc
sub
cmp
mov
sbb
jno
xor
scas
jp
fs
xor
sbb
sub
loopne
ds
inc
hlt
movsb
pop
loop
add
ljmp
mov
std
xchg
and
je
stc
fwait
add
lret
adc
nop
lods
adc
sub
cmp
loope
rorb
add
jp
mov
jne
ja
gs
stos
dec
mov
cs
je
shrl
cmp
cmpb
jmp
or
rolb
pop
test
cld
imul
mov
aam
daa
or
mov
int3
mov
pop
scas
cli
fsubrs
in
push
arpl
test
scas
fstl
sbb
pushf
mov
dec
lret
jb
xor
dec
cmp
divl
aam
sub
dec
pop
testb
push
adc
push
or
mov
push
pop
mov
pop
bound
dec
test
lret
adc
or
xchg
std
push
sbb
bound
jae
popa
mov
sbb
adc
fs
out
cmp
push
xchg
dec
test
icebp
ljmp
mov
or
lcall
daa
js
repnz
dec
std
mov
test
pop
enter
mov
cmpsb
loop
push
rorb
push
mov
inc
outsb
aad
shlb
cwtl
mov
fwait
xor
cli
jp
sub
fbstp
fcoms
popa
jno
test
sbb
gs
push
mov
lock
test
push
or
adc
insb
mov
sbb
mov
imul
lcall
xchg
mov
sbb
cmp
scas
out
mov
and
loop
pop
inc
andb
adcb
push
sub
inc
pop
sahf
pop
push
pop
out
icebp
inc
imul
sub
jl
pop
rol
stos
adc
pop
xchg
push
jge
clc
cmp
cmp
loope
lds
pop
aad
fmuls
push
lock
cmp
das
jecxz
leave
inc
push
adc
out
outsl
pop
ss
into
jle
data16
or
outsb
cmp
xlat
outsb
mov
cs
push
cmpsl
arpl
test
test
outsl
cmpl
pop
repnz
adc
pop
xor
in
mov
pop
inc
jmp
push
out
jnp
faddl
lods
sub
push
pop
mov
lods
inc
je
mov
inc
or
mov
out
jp
pusha
mov
ficoml
nop
dec
or
inc
out
mov
add
rclb
shlb
pop
out
arpl
jp
add
aas
mov
mov
xor
adc
ja
lods
xchg
lds
shll
mov
pop
imul
jne
loopne
pushf
fildl
popl
cwtl
shlb
or
pop
lcall
pusha
repnz
xor
pop
mov
xchg
ja
xor
aaa
gs
mov
xor
cwtl
pop
pop
cmpsb
sub
and
adc
inc
in
inc
push
xor
insl
pop
sbb
pop
mov
jecxz
ret
hlt
mov
inc
push
bound
les
outsl
xor
mov
daa
into
cmp
insl
jmp
push
rorl
sbb
dec
sbb
insb
sbb
sub
xchg
loope
das
pushf
inc
ljmp
pop
stc
jecxz
sub
mov
push
int
or
sbb
cwtl
mov
push
in
je
imul
mov
test
sbb
bound
addl
dec
pushw
dec
xchg
rorb
cltd
pop
test
shl
mov
fldcw
xchg
cltd
std
cmp
sub
sub
pop
inc
mov
jge
incb
rorl
mov
test
aas
mov
mov
lods
pop
xor
dec
inc
test
jmp
stos
je
fldcw
repz
fistps
add
fiadds
fs
mov
lds
mov
pop
xor
jg
fdivs
cmpsb
xor
push
inc
inc
push
rep
cmp
xor
scas
push
xchg
lcall
push
shlb
xchg
imul
lret
data16
rcrb
fsubr
add
dec
les
dec
adc
push
mov
loop
push
dec
ja
pusha
test
ret
ficoms
jle
rcrl
out
inc
out
xchg
adc
imul
or
dec
mov
mov
test
or
test
and
test
adc
lcall
loopne
test
dec
mov
xor
imul
dec
mov
sbb
mov
mov
lds
add
and
xchg
xor
inc
pop
mov
ret
fmull
hlt
icebp
inc
mov
and
adc
test
add
or
ja
mov
mov
fs
and
sbb
inc
jge
sbb
xchg
sarb
sub
push
sbb
shrl
dec
xchg
mov
loope
jns
or
ja
int3
jg
push
cmpsl
inc
lea
dec
fbstp
repnz
jmp
int3
rorl
sub
pop
dec
ret
xchg
push
lret
fwait
pop
and
int3
adc
hlt
xchg
or
xchg
mov
andl
or
enter
das
insl
fwait
sub
push
outsl
pushl
sub
jmp
lahf
fiaddl
pushf
loopne
into
mov
out
xchg
xchg
icebp
negl
xchg
lea
stos
lahf
and
inc
insl
mov
rolb
subb
xor
icebp
push
jp
mov
push
mov
and
lock
scas
and
mov
out
test
push
mov
or
lahf
xchg
xchg
push
test
sub
das
inc
repnz
fwait
icebp
les
jnp
std
test
stc
fwait
xchg
mov
popa
aaa
push
xchg
inc
lret
int3
pop
mov
sub
and
add
or
gs
cmp
cmp
mov
xchg
pop
lods
rorb
xchg
pop
cld
push
into
lods
ja
push
insb
sti
fidivrs
decl
ret
jb
pop
int3
scas
xor
push
fwait
out
mov
jnp
xchg
shlb
jo
xchg
mov
sbb
ljmp
sbb
lods
xor
ja
or
mov
xor
mov
jg
pop
or
mov
push
xor
stos
test
mov
pop
out
push
cmp
arpl
pop
repz
daa
adc
mov
mov
dec
xor
fsubrl
jg
pop
int3
jo
in
popf
mov
inc
pushf
shlb
sbb
pop
cmpb
je
cmpsl
xor
xlat
std
ja
fidivrl
add
test
push
pop
stos
jmp
cwtl
das
inc
leave
cmp
lea
gs
dec
lea
loopne
les
call
stos
jg
jl
cmpsl
mov
je
cli
pushf
test
in
in
jg
mov
movsl
insb
fists
push
cltd
push
cmp
cmc
sub
cltd
add
xchg
cmpsl
jp
jns
xor
loop
outsl
sbb
jecxz
dec
adc
cmp
and
ja
cmp
mov
imul
push
lock
adc
and
add
test
jl
push
mov
sub
xchg
fisttpll
fisttpl
lret
mov
nop
xor
xor
enter
cmc
jmp
fbstp
sub
pop
pavgb
out
ret
xlat
cmp
pop
pop
testb
sbb
adc
cli
xchg
sbb
addb
insl
mov
lds
or
pop
push
xchg
lock
jb
stos
lahf
stos
stos
ss
adc
outsb
adc
repz
dec
mov
jne
in
xor
scas
sub
cwtl
out
leave
popa
outsl
bnd
aas
mov
stos
daa
cmp
push
icebp
xchg
in
pop
aaa
daa
push
mov
aaa
test
je
lock
push
icebp
adc
stos
and
shlb
outsb
mov
pop
or
adc
jno
fists
dec
sbb
dec
outsb
adc
push
loop
mov
push
push
cmpsb
pop
jg
mov
jg
and
ds
push
arpl
pop
out
cmp
xlat
outsb
sub
mov
call
push
add
ja
cmp
ret
push
popa
jns
mov
inc
stos
or
dec
iret
fstl
test
loope
cs
out
movb
dec
sti
adc
mov
sbb
les
popa
cli
aas
or
repz
cmp
lea
movsb
cwtl
xchg
pop
test
sub
mov
push
mov
lret
mov
xlat
push
xchg
pusha
mov
mov
mov
data16
xchg
sahf
add
cmp
xor
mov
in
movd
into
jns
bound
and
imul
lret
pop
inc
popa
arpl
dec
pop
sti
sub
mov
mov
pop
movsb
into
push
cmpsb
shrb
lods
daa
jle
test
ss
in
xor
inc
loope
dec
testl
ret
xor
adc
or
sbb
nop
dec
add
inc
lcall
es
call
mov
push
adc
imul
test
test
add
xchg
lods
inc
fmul
adc
jbe
lret
push
jae
outsl
sbbl
jle
xchg
dec
frstor
out
and
fnsave
mov
or
xchg
pusha
inc
push
inc
ja
imul
cwtl
lret
es
push
pop
mov
mov
pop
add
outsb
sbb
jnp
fwait
stos
inc
movsl
jmp
loope
scas
rcr
jb
pop
icebp
mov
add
dec
aas
sahf
ficoml
sub
dec
inc
call
or
and
outsb
sbbl
mov
imul
jg
insl
cmc
xchg
jl
hlt
mov
push
jg
mov
sub
cmpsb
stc
and
repz
das
and
pop
jns
and
lahf
jbe
mov
shrb
into
js
ja
movsb
inc
sti
loop
data16
sub
fists
dec
mov
lret
scas
push
popa
cltd
shrl
fnstsw
xor
pop
mov
jb
inc
sub
inc
adc
pop
arpl
pop
and
in
dec
out
test
push
or
sub
mul
fs
sbb
dec
mov
and
fisttps
hlt
fldenv
scas
cmp
and
fs
addr16
push
pop
or
ds
xchg
dec
or
xor
nop
loope
add
out
jno
repnz
sub
jns
pop
pusha
cwtl
xor
jb
push
lods
xor
jmp
pop
je
iret
xor
mov
movsl
loop
xor
add
or
mov
lret
test
ret
push
lret
or
push
inc
inc
imul
mov
loop
pop
inc
aad
stos
in
call
jg
leave
cltd
jno
lea
push
mov
cmc
imul
popf
push
test
jbe
int3
and
push
leave
fadds
adcb
dec
sbb
testb
repnz
jg
mov
adc
pop
mov
mov
inc
lret
scas
xor
jne
dec
jb
nop
outsb
test
dec
sub
ss
mov
xacquire
pop
dec
call
aas
mov
movsl
es
push
lock
add
push
lea
std
sti
sub
ret
clc
mull
and
subb
mov
pop
out
push
pop
xor
inc
in
lods
js
mov
mov
movsb
call
inc
pop
mov
in
sbb
pop
push
imul
pop
inc
pop
popf
std
jo
scas
fnsave
xor
daa
xchg
aad
hlt
mov
cmp
inc
jae
fwait
mov
and
fistpll
ret
xor
xor
jp
add
in
xchg
popf
push
nop
pop
push
stos
cmp
xchg
popa
mov
push
mov
and
push
das
dec
mov
mov
pop
lds
cli
adc
mov
inc
jl
fwait
jmp
hlt
cltd
movsb
ret
push
imul
mov
mov
fisubrs
insb
xor
mov
mov
lcall
lods
fs
mov
xchg
in
shrb
cmp
xchg
jl
push
cs
negl
and
dec
aaa
arpl
movsb
ret
popa
repnz
mov
dec
stos
scas
or
mov
sbb
inc
cmp
dec
dec
inc
cld
nop
jns
pop
adc
push
jmp
push
xor
test
sub
test
call
shll
out
inc
and
sbb
dec
daa
ljmp
imul
cmp
xor
imul
xchg
test
pop
inc
mov
fisttps
in
mov
adc
lods
pop
or
xchg
xlat
or
xor
jno
in
addl
jns
out
sahf
aaa
jg
push
inc
fists
push
out
decb
inc
or
xor
in
fwait
aas
jne
test
nop
ds
xchg
in
pop
call
leave
xor
je
jl
cltd
and
andl
daa
adc
movb
push
and
iret
adc
jecxz
mov
std
pop
adc
and
push
fsubrl
fisttpl
add
push
repz
and
push
adc
mov
les
adc
stc
adc
pcmpgtw
ror
xchg
sbb
or
in
mov
pusha
mov
xchg
sbb
fbld
nop
jge
mov
inc
pop
in
cltd
push
push
xor
xchg
fwait
mov
or
adc
ret
sbb
cs
lock
daa
push
pop
dec
and
cwtl
jmp
cwtl
fsubrl
mov
mov
adc
cld
and
jl
flds
lcall
and
sbb
pushf
lea
mov
dec
cld
in
dec
pop
cmp
std
nop
pop
aam
inc
and
lahf
cwtl
jne
add
push
dec
mov
jbe
adc
test
cmpsl
xor
add
sar
or
mov
adc
shrb
dec
xlat
sbb
repnz
cmpsb
sbb
jl
jle
cli
cmp
sub
xchg
inc
mov
cltd
or
mov
dec
mov
xor
mov
xchg
shrb
push
addr16
pop
lock
gs
scas
mov
push
outsb
inc
push
je
loop
jnp
and
mov
cwtl
push
inc
mov
add
cld
lret
mov
inc
or
aaa
sahf
or
cwtl
das
and
gs
add
cmc
mov
gs
dec
notl
mulb
mov
pop
xor
add
and
mov
push
jae
add
mov
ljmp
pop
cmp
adc
mov
repnz
mov
push
jno
pop
rcl
scas
mov
push
lods
adc
pminub
jp
lods
ret
or
and
sbbl
and
xor
ja
popa
add
cltd
xor
push
mov
dec
pop
aaa
out
mov
sbb
and
cmp
sub
ret
stos
out
jnp
push
pop
popf
aas
pushf
add
sti
popf
cmpsl
fists
in
sbb
ljmp
jno
dec
xor
push
jbe,pt
add
repz
xor
leave
add
mov
jo
pop
adc
pop
cmp
ret
nop
addr16
mov
pop
test
fstpl
cmpsb
lea
ret
mov
push
rsm
xchg
pop
add
pop
cmp
rcrb
cs
and
insl
or
mov
and
test
push
add
inc
hlt
mov
adc
sbb
sbb
cmp
cmp
sbb
xchg
or
xchg
xchg
sub
mov
mov
popf
xchg
outsb
into
test
inc
das
mov
adc
jmp
cs
mov
adc
loope
xor
aaa
lret
aas
call
mov
aam
loopne
int3
fst
push
sarl
pop
punpcklwd
test
out
scas
sbbl
sub
mov
sbb
cmp
cmp
jnp
cld
aad
stos
insl
ret
pusha
ret
adc
pop
jge
and
aam
mov
lods
aad
es
xor
scas
xchg
xchg
insb
mov
pop
xrelease
mov
cmpsl
lds
jge
addl
scas
cmp
fildll
pop
ret
test
fisubrs
push
hlt
shlb
jb
es
jno
hlt
test
pop
adc
xchg
arpl
jno
mov
aas
pop
fcoms
nop
and
push
movsb
sbb
fnstcw
fwait
in
adc
push
dec
shl
mov
inc
jle
push
mov
out
test
arpl
clc
or
sub
push
nop
repz
orb
bound
mov
clc
js
mov
pushf
dec
add
inc
mov
out
jbe
test
adc
addr16
jnp
loopne
dec
jno
add
cmpsb
cmp
lock
sub
or
jecxz
sbb
mov
pusha
stos
in
pop
push
pop
imul
call
sahf
pusha
repz
pop
mov
sahf
or
or
adc
push
inc
mov
dec
add
pop
inc
mov
lret
lcall
pop
out
sahf
inc
cld
add
in
call
std
mov
repnz
mov
cs
aam
ss
rorl
inc
cmp
lret
cltd
xchg
dec
pop
push
jmp
xor
pushf
jns
mulb
cmp
cld
sbb
sub
adc
test
add
jecxz
sti
sahf
fcoml
pop
inc
call
mov
std
add
outsl
mov
inc
dec
lcall
xor
in
movsb
fdiv
test
insl
sub
mov
imul
jl
xor
fcoms
mov
push
cmpsb
and
or
push
std
jns
or
test
pop
jp
rcll
dec
push
xor
or
out
das
cmp
outsl
hlt
das
mov
pop
lahf
cmp
sub
dec
insl
out
xchg
pop
jne
mov
inc
inc
mov
repnz
xchg
ret
jle
clc
icebp
enter
movsb
aaa
enter
mov
out
jno
xor
xor
pop
and
test
out
jne
pop
js
outsb
xchg
xor
adc
fbstp
mov
dec
jo
in
xchg
jne
dec
mov
jno
mov
sub
repz
pop
dec
xchg
outsl
lahf
mov
notb
cmp
push
ror
sub
xlat
jno
mov
mov
mov
push
mov
loope
popf
jo
iret
xchg
push
shll
mov
mov
popa
mov
test
mov
test
mov
hlt
fisubs
shll
pop
ret
fisttpll
lea
jne
lock
sub
and
pop
cmpps
loop
cmp
pushf
xchg
dec
flds
shl
pop
rolb
mov
ja
pusha
test
pop
sarb
mov
nop
push
mov
jle
push
sbb
jno
adc
push
clc
sahf
rcrl
and
cmp
jge
and
arpl
adc
mov
dec
cwtl
lods
lods
jo
scas
sarb
popa
xchg
shrl
pop
leave
arpl
cmp
jle
dec
jne
xchg
xor
adc
pop
ds
ljmp
jno
pop
lret
popa
xor
lods
cmp
push
adc
jns
in
ret
dec
pop
fwait
xor
shr
mov
ret
ljmp
cli
xchg
inc
adc
movsb
cmp
fiaddl
push
rcl
lahf
push
into
and
sbb
xchg
jo
mov
dec
adc
inc
fldenv
ret
aas
stc
pop
andl
xchg
jae
inc
sub
add
dec
mov
xor
xchg
imul
iret
mov
sarb
sub
imul
nop
sti
mov
push
adc
lret
lcall
fs
and
push
in
mov
cli
mov
subss
and
xor
xchg
sub
std
jo
pop
out
jge
push
fucomi
xor
sbb
fdivrl
icebp
cltd
int3
pop
cwtl
sub
xor
loope
jmp
notl
fdivl
or
fisubl
pop
std
pop
xlat
cltd
push
out
outsb
nop
pushf
push
stos
jne
ror
outsb
dec
data16
cltd
jo
int
lret
shlb
je
test
ds
call
lcall
cmp
cmc
lods
cwtl
sub
in
mov
dec
aaa
and
adc
fs
mov
aam
mov
in
jnp
fstl
nop
mov
mov
test
mov
jle
sbb
cwtl
xor
push
xor
popa
inc
fwait
rol
mov
and
aaa
dec
cmp
xlat
xchg
mov
sub
out
test
notb
add
add
loopne
out
mov
xchg
daa
push
add
pop
les
imull
jmp
in
out
addr16
jp
ss
addb
dec
fisubl
repz
mov
lret
icebp
jmp
push
inc
sbb
push
push
mov
ljmp
mov
nop
in
fisubrs
sub
sub
pop
hlt
mov
inc
adc
pop
stos
mov
pushf
lea
imul
call
jge
push
sub
aam
inc
push
mov
mov
pop
or
push
cmp
test
mov
and
or
out
ret
add
add
cmp
mov
int
pop
jb
add
ret
fildl
insb
test
scas
sar
rcrb
sarb
ret
notl
cmp
or
jo
add
ss
jmp
fwait
adc
popa
fidivs
pushf
dec
jae
mov
inc
jecxz
mov
ret
sub
icebp
dec
loope
ja
dec
test
adc
ljmp
subb
out
inc
fsubrs
lds
call
ror
push
mov
jbe
stos
cmpsl
out
and
rclb
sar
pop
hlt
add
push
out
mov
dec
jnp
sbb
movsl
lret
xlat
leave
lret
out
jle
int
aaa
jne
add
or
cmpsl
inc
loop
stc
xchg
push
js
decb
xchg
lret
lock
popf
pop
cmpsb
dec
shll
mov
shll
out
xor
mov
xor
lret
push
inc
ss
inc
in
das
jp
xchg
jle
dec
cmpsl
dec
xchg
sar
lsl
loopne
and
push
sub
or
ret
jp
stos
je
mov
jge
inc
sbb
enter
test
dec
rclb
lcall
mov
je
sbb
pusha
mov
arpl
lret
cmp
imul
cmpsb
xchg
lret
dec
es
shlb
xor
or
out
loopne
jp
push
mov
and
ss
jecxz
push
js
sub
push
sbb
xchg
mov
negl
shr
cmp
cmp
cmp
scas
xor
or
jb
andl
sti
inc
sti
test
into
pushf
xor
add
loopne
xchg
or
dec
ficoml
jge
push
mov
jb
aas
add
aas
dec
cmp
filds
jecxz
inc
mov
adcb
fcom
mov
dec
sbb
clc
mov
arpl
pop
shlb
pop
cwtl
mov
jge
shll
hlt
adc
jb
and
xchg
ds
inc
pop
inc
xchg
adc
dec
jecxz
adc
negb
xchg
adc
cmp
and
jno
ret
dec
mov
cmp
push
mov
xchg
mov
rol
roll
out
fisubrs
cmp
out
sub
scas
fimuls
mov
jno
xchg
push
mov
arpl
and
pop
adc
sbb
shrb
movsl
lea
loop
enter
jle
jnp
repz
aam
lds
lock
nop
xor
cmpsl
aas
andb
dec
pop
mov
lret
mov
sbb
cs
xchg
dec
adc
lods
jne
xchg
sbb
test
mov
xlat
sub
test
testb
lret
outsl
mov
mov
dec
inc
inc
je
pop
xchg
sub
inc
sbb
popf
xchg
mov
mov
add
fucomi
or
pop
xchg
cmpsb
inc
pop
andl
sbb
xor
add
adc
jnp
push
inc
push
test
cmpsl
fnstenv
or
sti
int
mov
gs
repnz
xchg
adc
aad
cmpsl
push
test
movsl
in
mov
dec
aas
push
cmpsb
ret
push
js
push
push
or
es
out
and
pop
decl
pusha
cmp
fisubl
cmc
lea
out
les
sub
movsl
xor
xlat
sbb
adc
enter
popa
and
jae
lcall
mov
loop
and
rcl
gs
ret
in
int
xchg
add
popf
stos
inc
popa
pop
pop
fidivrl
fistps
mov
fistps
fnstcw
xchg
jmp
lds
movsl
or
inc
das
loope
cmp
out
jo
adc
add
xor
sub
add
aad
pop
adc
pop
sahf
jns
cmpsl
inc
shlb
cmc
mov
sbb
or
sbb
pop
scas
loopne
sub
mov
pusha
movsb
call
insb
mov
mov
inc
mov
mov
mov
adc
sub
xchg
or
inc
inc
js
jmp
jb
mov
mov
stos
das
xor
dec
dec
out
xchg
aam
inc
fdivr
xor
adc
shll
in
je
pop
ja
icebp
insb
mov
dec
sub
jo
push
dec
in
out
sub
in
and
push
out
mov
sub
cmpsb
jno
pop
adc
daa
lds
xor
fsubrs
int3
outsl
cmp
push
sub
loopne
pop
sbb
pop
movsb
mov
inc
jl
lock
pop
movsb
push
mov
or
dec
dec
pop
xchg
mov
loop
inc
fwait
cmpsb
test
in
ljmp
sub
mov
imul
cs
inc
cmp
and
imul
jmp
pop
insl
les
push
adc
jmp
or
je
insb
stos
subb
daa
inc
sub
and
push
outsb
repz
adc
and
jge
push
xchg
mov
xchg
lahf
shr
add
jp
aaa
pop
shlb
movsl
sbb
les
orb
mov
popf
xchg
idivb
aam
push
fwait
lods
xchg
dec
mov
lods
inc
pop
aad
xor
imulb
add
int3
leave
das
nop
outsb
clc
or
add
popf
cmc
xor
ja
jno
ja
push
sub
pop
dec
in
push
cmpb
mov
js
test
lods
stos
aas
push
test
dec
lea
ss
xor
roll
and
pop
mov
add
jecxz
cld
and
xor
bound
test
mov
sarb
push
daa
jecxz
mov
mov
pop
mov
inc
add
aam
add
test
fcomps
std
subl
into
mov
xor
fnstsw
xor
vmovaps
cmp
clc
adc
inc
pop
jle
fwait
loopne
icebp
jle
xchg
daa
int3
pop
imul
push
lahf
jnp
inc
rcl
pushf
es
stos
mov
add
outsl
push
xor
nop
adc
fmull
into
pop
out
int3
arpl
ficomps
sbb
mov
push
enter
adc
mov
fwait
cmp
mov
cwtl
mov
xlat
cmpsl
out
cs
pop
int
and
out
xchg
inc
inc
inc
sub
fidivrl
jle
in
inc
push
out
push
test
test
leave
mov
mov
sahf
pop
push
or
lds
jnp
add
jno
jb
jl
and
sbb
orb
mov
jo
jmp
fiaddl
push
cmpsb
cmp
test
push
inc
in
cli
jno
daa
dec
dec
in
dec
mov
das
push
mov
pop
add
and
and
mov
in
jecxz
test
add
daa
dec
mov
clc
outsl
adc
mov
mov
pushf
mov
cmc
dec
sub
jae
pop
jl
cmp
cld
ja
dec
dec
pop
mov
push
or
aam
in
xor
mov
mov
clc
or
icebp
push
call
push
in
outsl
adcb
sub
bound
clc
pushf
dec
pop
adc
add
ljmp
mov
jl
dec
or
xchg
aam
mov
add
lea
loope
mov
stc
popf
push
enter
add
hlt
cmp
shlb
xchg
testl
add
adc
mov
xor
test
push
add
ljmp
push
xchg
pop
sbb
out
and
cmpsb
cmp
mov
and
add
iret
outsl
xorl
decb
adc
lods
jo
dec
xor
imul
inc
fisubrl
loop
pusha
xor
sub
rcl
push
push
sbb
cmp
aam
daa
mov
ja
sbb
add
and
out
cli
stos
inc
mov
inc
roll
jno
nop
outsb
and
mov
sbb
lret
dec
lods
in
inc
fwait
jns
cltd
es
fs
xchg
jnp
enter
fs
lock
in
xor
loope
cwtl
pop
jbe
aam
xor
rcr
jl
popf
or
mov
fstl
or
out
sbb
inc
ss
lods
jmp
dec
test
pushf
insb
jle
mov
sbb
add
arpl
stos
jb
out
inc
sarb
jbe
lcall
jne
pop
mov
cli
adc
imul
xor
pushf
outsb
xchg
push
push
jle
lock
sub
stos
icebp
xchg
sbbb
pop
js
add
mov
sti
mov
out
xor
mov
adc
aaa
es
loop
push
sub
or
sub
pushl
jecxz
cmp
fcom
ret
push
inc
insl
sbb
inc
shll
xorl
adc
inc
push
jg
sbb
cmp
jne
dec
mov
and
xor
push
sub
xchg
clc
stos
inc
in
inc
ficompl
insb
adc
lods
je
shrl
fidivs
inc
sub
cli
cwtl
js
daa
scas
adc
out
cmpsl
sub
aad
sahf
pop
or
in
out
test
xchg
sub
push
test
out
sub
or
jbe
cs
cltd
or
ja
adc
mov
mov
and
lahf
test
cld
xlat
mov
std
push
xor
in
andb
push
fwait
mov
xor
add
adc
xchg
push
xchg
fmulp
nop
sti
dec
dec
aaa
insb
pop
sub
fwait
ss
or
cmp
imul
adc
into
popa
ret
or
inc
iret
push
iret
in
sbb
movsl
mov
add
cmp
sti
mov
outsl
js
pushf
xor
xchg
mov
hlt
outsl
dec
and
addr16
and
je
scas
in
out
xchg
mov
push
adc
push
mov
or
cs
aam
pop
push
push
shll
decb
retw
jb
loopne
pusha
lods
stc
sbb
repnz
inc
adc
jp
idivb
pop
mov
rorl
out
jp
ret
js
add
inc
add
jnp
mov
into
lods
mov
subl
ss
orb
push
nop
hlt
repz
sbb
xchg
popa
idivl
adc
mov
fs
fstl
adc
mov
mov
or
adc
shl
xchg
dec
pop
testb
jl
das
addr16
mov
pop
mov
sbb
xlat
shlb
push
pop
mov
arpl
insb
mov
sbb
inc
inc
mov
int
and
add
xor
loopne
xor
push
jno
mov
dec
lcall
cmp
subl
push
pusha
xchg
stc
pop
scas
inc
das
xchg
mov
fists
push
movsl
aam
add
das
pop
mov
fcmovne
arpl
sub
push
dec
outsl
enter
in
inc
dec
and
mov
lcall
outsl
adc
jo
add
test
fdivl
lea
in
test
cwtl
sti
out
data16
xchg
dec
notl
mov
push
testl
inc
push
insl
std
stos
push
push
fstpl
hlt
mov
mov
sbb
fs
pop
xorb
hlt
xchg
mov
icebp
mov
lahf
imull
pop
or
test
sbb
std
rcr
outsl
and
aad
mov
shll
mov
pop
lahf
shlb
mov
sub
ljmp
and
push
stc
rorb
jne
pop
hlt
in
xchg
jecxz
mov
movsl
jg
or
lock
ds
xchg
pop
sbb
lret
in
shlb
dec
inc
jle
sub
mov
iret
adc
mov
leave
lea
scas
and
jmp
orl
fmull
pusha
cmp
test
outsb
and
loope
movsl
adc
jl
xor
mov
test
or
add
push
pusha
pop
xchg
cmp
adc
scas
dec
inc
sbb
xchg
xchg
ja
loopne
and
fidivl
gs
mov
bound
adc
cs
dec
jo
fs
push
xor
imul
leave
int
mov
mov
cmp
jmp
hlt
mov
test
fs
mov
mov
mov
int
es
stos
andb
or
cmp
leave
mov
lea
dec
rcr
scas
cmp
loopne
pop
pop
adc
loop
dec
and
lcall
lcall
adc
sub
fidivl
aam
push
aas
dec
fcmove
mov
js
xchg
ja
xorl
jno
fiadds
sub
cmpl
and
jp
lock
fldenv
sti
lret
mov
stos
cmp
rcrl
or
and
sti
fwait
pop
dec
sarb
cmpsb
push
incb
cmpsb
jmp
ljmp
shrl
jae
xchg
ficomps
push
sub
mov
xchg
aaa
fucomi
stc
mov
add
mov
cmp
jb
pop
mov
enter
repz
fsubl
cmc
cli
xchg
sub
hlt
xor
cli
xchg
je
mov
push
push
xor
pop
cmp
inc
sahf
sbbb
or
pop
imulb
lods
xor
jbe
jne
shlb
sahf
shlb
cmp
push
or
or
es
icebp
int
ds
test
int3
and
jp
popf
cmp
out
mov
xor
bswap
jg
cmp
jle
add
jbe
ljmp
in
cltd
popa
daa
les
mov
mov
add
and
dec
test
cmp
out
lock
add
add
cld
mov
push
adc
mov
jecxz
pop
ljmp
dec
call
dec
pushf
mov
shrb
pop
cltd
sbb
dec
xor
sbb
and
test
sti
or
adc
and
rcl
dec
mov
lcall
fwait
test
mov
sub
mov
sti
push
lods
mov
std
lock
orb
dec
aaa
jecxz
adcb
ret
call
hlt
mov
ja
jbe
das
mov
or
in
repz
ss
aas
lret
in
push
clc
cmc
push
fadds
cmpsb
popa
adc
test
je
pop
in
xchg
pop
or
xchg
or
pusha
mov
scas
fwait
jbe
je
pop
push
outsb
fldenv
jo
mov
aaa
xor
push
lret
mov
fadds
xchg
push
inc
stc
out
inc
mov
mov
pop
movsl
sbb
lret
jle
jecxz
xor
aaa
push
dec
push
icebp
cmp
data16
inc
mov
adc
dec
cmc
ds
inc
sbb
pop
pop
xor
lods
cmc
outsl
push
jmp
sbb
or
push
mov
add
or
xchg
jae
lcall
lret
sub
adc
dec
push
lods
cmp
outsl
ret
fwait
xchg
add
repnz
push
lcall
mov
jmp
lahf
divl
pop
into
xchg
and
lock
loopne
rorb
outsl
or
jno
in
add
jmp
jns
pop
mov
addl
scas
not
mov
and
mov
sti
adc
mov
jmp
shrb
or
sbb
jno
mov
jmp
jne
out
out
jbe
shrb
int3
mov
adc
rcrl
repnz
roll
ret
jp
ret
mov
mov
arpl
iret
shll
jge
xor
pop
out
ret
inc
out
push
pusha
xchg
sbb
push
sarb
std
adc
mov
push
xor
das
hlt
xchg
or
mov
out
and
pop
cmp
shr
mov
mov
sarl
stc
repnz
mov
jecxz
sbb
jg
pop
notb
mov
sub
cli
pushf
stc
lret
jns
ljmp
mov
add
sahf
loope
fucomp
addl
xor
mov
jmp
and
adc
js
data16
pop
pop
popf
inc
and
fidivrl
jl
or
ja
out
xchg
imul
out
lock
pop
notb
and
and
sti
das
mov
jno
xchg
adcl
push
sbb
xor
into
imul
in
test
xchg
into
mov
fwait
xchg
aam
inc
popa
sub
cmp
pop
mov
repnz
jns
pop
or
push
dec
mov
pushf
xchg
sub
pop
add
pop
jne
inc
test
aas
fistpl
bound
cmp
dec
jb
jmp
jae
mov
dec
pop
sti
rol
stos
adc
out
jns,pn
arpl
mov
fs
mov
or
fwait
clc
stc
data16
stos
pop
jb
ljmp
mov
clc
jne
mov
dec
jb
hlt
mov
jp
out
or
add
fdiv
push
jmp
aad
in
ss
pop
sub
cmp
int3
cmc
dec
insb
adc
les
mov
inc
xchg
shl
fdivr
push
add
dec
mov
loopne
in
sbb
mov
sahf
out
cmpsl
int3
jae
pop
mov
arpl
push
mov
inc
pusha
inc
jle
xchg
mov
test
xchg
jp
fs
mov
mov
subb
xchg
or
adc
dec
and
nop
daa
ret
cmp
pop
sub
nop
cmp
pop
jnp
int3
pop
les
iret
adc
sbb
rcll
dec
dec
cmc
pop
popf
je
xor
jmp
sti
popf
inc
data16
out
jmp
cmpsl
push
sbb
js
imul
sub
add
jnp
call
jecxz
and
arpl
les
mov
js
inc
ficompl
sub
pop
mov
mov
jg
outsl
cmp
jb
and
mov
add
ret
add
xor
push
mov
push
lods
mov
xchg
mov
and
push
loopne
aam
imul
mov
dec
aad
pushf
jae
out
sbb
cli
repnz
cmp
std
push
out
inc
push
test
adc
jmp
loope
stos
add
aas
dec
cmc
icebp
scas
cld
xchg
and
mov
rcll
fdivrl
cmp
int
xor
mov
or
gs
mov
call
add
std
cltd
data16
jno
sub
mov
movsb
pop
jo
sbb
bswap
arpl
test
scas
imul
loope
rcr
or
sub
int
rcrb
stc
sbb
inc
push
bswap
mov
insl
nop
cmpl
stos
call
cwtl
pop
mov
sbbl
arpl
ret
nop
imul
shlb
cmp
inc
call
jl
sarl
cwtl
je
cmp
mov
mov
in
enter
imul
nop
dec
jge
stos
test
xlat
or
or
and
out
xor
inc
sub
mov
mov
in
xlat
add
mov
mov
aas
mov
jb
jg
pop
inc
xchg
bound
add
or
adc
cmp
sub
push
jle
fmull
in
js
or
insb
sub
enter
xor
in
push
data16
inc
pushf
insb
fistps
fidivl
mov
bound
add
push
negb
xorb
jne
pop
lret
mov
data16
test
jno
movsb
mov
inc
das
fs
in
push
jae
test
jnp
adc
scas
cmp
mov
inc
popf
ljmp
cmp
pop
push
addb
imul
call
add
popa
lock
mov
push
mov
add
imul
cmpsb
ret
inc
push
xor
iret
cwtl
lds
testl
lret
adc
ss
and
lret
data16
jb
mov
int3
es
mov
pop
ret
xchg
adc
jp
out
mov
xchg
dec
inc
fdivs
add
fwait
xlat
insb
xor
out
cwtl
inc
fmul
or
jo
and
mov
xor
iret
mov
push
es
xcrypt-ecb
cmpsl
int3
mov
lret
outsl
pop
cmp
leave
or
push
xor
jne
cmp
es
in
enter
cmp
push
adc
jp
xchg
stos
stos
cmp
fldt
push
in
out
mov
adc
jne
outsb
pop
test
dec
cmp
pop
repz
imul
and
pop
out
cmpsl
aad
lds
stc
mov
mov
lcall
pop
ret
push
inc
mov
push
rorl
jo
jo
pop
jbe
mov
jo
sbb
les
pop
fildl
dec
gs
pusha
test
jle
pop
mov
les
inc
add
scas
jp
mov
xor
or
dec
mov
jno
cmpsl
cmpsb
das
outsb
loope
dec
jle
push
popf
test
dec
int3
je
jb
ss
mov
arpl
pop
and
sub
xchg
cmpsl
adc
push
jmp
loope
rcrb
test
pop
mov
outsb
ret
dec
adc
mov
xor
movsb
out
xor
sub
bound
std
fs
and
inc
inc
cmpsl
cs
mov
fidivrl
bound
lahf
nop
aam
ret
loop
arpl
mov
imul
sub
dec
imul
fcomps
flds
scas
cmc
stc
or
pop
dec
daa
clc
scas
inc
inc
stc
cmp
mov
mov
gs
std
mov
xor
lret
pop
jno
outsb
std
lahf
pop
pop
ds
pushf
sbb
insl
add
sub
mov
jg
mov
or
inc
je
push
push
jmp
out
and
push
xor
mov
jae
lcall
in
rcrl
aaa
ds
cs
aad
sahf
push
cmp
test
pop
xchg
push
pop
mov
mov
pop
int3
lds
sbb
out
cmc
cmp
push
dec
in
xchg
jmp
jge
in
div
mov
lret
call
xor
rcr
insb
lea
sbb
mov
or
jb
mov
dec
iret
fldt
adc
fidivrs
add
popf
dec
ret
xchg
out
les
pop
movsl
push
mov
jp
in
add
pop
add
shll
mov
repnz
shl
adc
int
aad
shll
insl
jg
ljmp
or
in
movsl
fs
cmp
pop
scas
jb
xor
lahf
pop
outsb
push
push
mov
mov
cli
mov
xor
jb
sbb
add
sbb
xchg
sub
call
inc
inc
pushf
and
xor
mov
dec
stc
mov
ret
push
scas
pop
xchg
adc
sub
out
sub
adcl
jbe
xchg
dec
bound
adc
call
or
lods
test
pushf
xor
add
or
cmp
push
ss
mov
popa
push
mov
lock
fidivl
mov
rorl
stc
out
jnp
push
mov
jg
jo
push
loop
pop
and
fimuls
cli
push
and
cwtl
movsl
ja
sbb
jp
cmp
scas
and
add
mov
popa
add
xor
int3
mov
dec
gs
aas
sub
lods
mov
or
movsl
adc
insl
or
imul
cmp
aas
repnz
sub
int
push
pop
mov
push
or
jle
in
and
add
mov
dec
push
pop
push
iret
cmp
jns
out
pop
fwait
mov
fisubrl
mov
add
dec
mov
dec
dec
mov
adcl
or
fs
mov
sahf
ret
push
jo
mov
sbb
push
cli
dec
leave
fnsetpm(287
mov
push
into
cmp
jbe
repz
fadd
cltd
ret
jle
push
push
mov
xchg
jmp
cmc
xchg
push
insb
mov
pushf
jnp
sbb
add
lahf
ss
fists
clc
fldlg2
sbb
jge
jl
in
aam
mov
push
pop
psadbw
mov
les
push
std
out
inc
sbb
lods
push
push
cs
mov
pushf
andb
adc
mov
jbe
imul
pop
fdivp
cmp
lcall
ret
xor
fcom
push
pop
mov
enter
adc
out
inc
dec
icebp
add
inc
sbb
enter
jle
fdivs
inc
sub
sti
xchg
mov
movsb
pusha
mov
into
mov
orb
jns
jno
xor
shl
sbb
add
shll
mov
outsl
js
out
test
xor
or
das
jge
movsb
pusha
fstps
mov
xchg
or
outsl
dec
dec
ret
jge
dec
mov
outsl
or
imull
add
scas
clc
jnp
xchg
xchg
iret
adc
xchg
mov
or
adcl
add
pop
push
loop
mov
jg
shlb
xor
icebp
jg
inc
jp
push
add
dec
clc
in
inc
stc
xchg
xchg
shlb
mov
push
sub
dec
jo
jne
cld
lcall
xor
sbb
ret
lock
enter
sti
or
xor
jl
pop
mov
or
jl
sahf
mov
iret
enter
insb
jne,pn
adc
scas
inc
fwait
cld
mov
mov
xchg
add
mov
xchg
push
adc
enter
test
dec
pop
adc
imul
out
insl
int
iret
lock
dec
lock
inc
fsubr
imul
adc
push
inc
push
idivl
addl
shl
lods
lahf
fisubs
pop
ret
or
mov
in
mov
sub
imul
es
lods
pop
inc
cmp
jecxz
jl
adcb
loopne
ret
jo
inc
cmpsb
and
sahf
clc
addr16
cmpsl
mov
mov
cmp
cmpb
lods
xchg
sub
dec
ja
bnd
cwtl
cltd
stc
dec
rcrl
xchg
or
cmpsb
stc
nop
sbb
xchg
cltd
test
add
dec
add
lahf
cmp
mov
xlat
scas
mov
int3
sti
std
cmp
push
inc
loope
pop
movsb
push
stc
xor
cltd
sbb
mov
mov
push
add
in
mov
pop
popl
dec
sbb
scas
fwait
or
jne
fdivs
xor
aam
insb
je
pop
das
pop
cmp
mov
sub
fidivrl
ljmp
leave
inc
shll
test
jg
xorb
push
fiaddl
cmp
lret
fucomip
movsl
iret
pop
add
scas
fdivr
ljmp
or
aad
inc
mov
mov
popf
mov
push
scas
scas
sbb
mov
pop
imul
mulb
adc
ja
outsl
scas
push
fildl
mov
inc
je
jno
in
jne
jno
nop
imul
mov
and
scas
mov
loope
scas
imul
mov
xchg
cmpsb
aad
mov
test
pop
sbb
subl
mov
fisubrs
xchg
cmpsl
or
popf
xor
fwait
ljmp
jno
rcrl
icebp
sbb
mov
and
and
xchg
shll
sub
int3
lret
add
inc
popl
sub
sbb
adc
ss
sahf
inc
roll
jl
fbstp
jp
iret
mov
or
testb
shlb
pop
xor
insl
and
xchg
hlt
mov
jmp
repnz
iret
push
sub
jns
test
dec
push
jmp
mov
jo
cli
fdivrs
into
add
mov
ret
xchg
add
dec
pop
mov
push
mov
mov
adc
mov
xchg
jbe
test
mov
imul
or
push
rclb
add
mov
mov
dec
jb
pop
adc
loopne
add
push
ss
aas
fstpl
hlt
push
inc
es
lods
and
call
adc
xor
lods
inc
pop
jno
repnz
stos
std
ret
int3
loopne
data16
gs
imul
cld
notb
xchg
fidivrl
dec
into
xlat
outsb
add
pop
jbe
cmc
push
test
fidivs
aam
jne
hlt
adc
andl
fpatan
push
clc
js
scas
xor
test
or
ficomps
mov
mov
iret
lcall
shlb
repnz
imul
cmp
fimuls
jecxz
mov
push
push
aas
cmp
fdivrs
xchg
scas
add
cmc
mov
aad
ds
pop
cli
ret
shrl
int
xor
and
arpl
mov
jmp
in
and
pop
sbb
call
fsts
ret
icebp
rclb
movsl
jae
xlat
lods
or
out
popf
scas
pop
cmp
mov
fnstsw
mov
es
push
xchg
add
repz
je
adc
enter
mov
mov
jnp
or
sbb
inc
adc
mov
mov
gs
mov
incl
add
inc
bnd
cmpsb
aam
xorb
jo
push
inc
wrmsr
iret
mov
dec
mov
pop
xchg
and
icebp
into
call
mov
cmpsl
add
loop
adc
push
in
popf
scas
cmp
bndstx
outsl
testb
mov
notb
cltd
std
fcomi
mov
adc
outsl
sbbl
lcall
mov
jge
mov
add
mov
into
inc
fiaddl
push
and
bound
cmpsb
mov
cmp
into
enter
jo
add
je
repz
and
out
test
jae
imul
repnz
leave
fistps
loopne
ds
mov
sbb
sbb
dec
cmp
adc
xor
fcoml
xchg
imul
ljmp
jno
cmpsl
inc
dec
fbld
adc
iret
popa
into
adc
adc
add
cmc
lds
sbb
cld
or
xor
dec
loop
push
lret
dec
xchg
idivb
add
jecxz
dec
shrb
iret
inc
pusha
sbb
pop
aaa
xchg
adc
int3
mov
test
inc
aas
jbe
mov
lods
or
mov
mov
or
loope
ds
push
inc
pushf
test
cltd
js
add
sbb
in
punpckldq
push
movsl
pop
or
mov
movsl
out
sbb
movsl
push
lahf
cwtl
xor
lret
push
and
push
stos
mov
pop
xor
cmp
xor
mov
scas
push
sbb
adc
int
mov
jnp
out
jbe
dec
mov
cmp
scas
mov
sbb
inc
push
or
adc
cmp
and
jns
push
push
popf
jno
jg
jmp
sbb
and
repnz
lea
mov
inc
sbb
dec
in
mov
iret
pop
push
das
and
popa
jl
mov
push
cltd
sbb
subl
or
out
repnz
mov
dec
cmc
aaa
jl
inc
cmp
inc
into
mov
inc
stos
sub
cmpsl
mov
xor
jmp
push
xchg
or
cmp
addr16
inc
repnz
jns
sub
scas
pop
stos
lds
mov
pushf
pop
push
popa
sub
push
rol
in
mov
loope
xor
push
mov
and
pushf
rclb
jmp
shll
pop
fwait
cli
inc
dec
dec
outsb
or
jb
push
aas
mov
dec
stc
and
add
mov
arpl
test
adc
mov
pop
fldpi
cmp
add
xchg
and
imull
jbe
fists
jp
jle
fnstsw
xchg
cltd
rclb
test
add
enter
iret
lea
jmp
xor
add
lret
sub
sbb
sub
repz
push
movsl
stc
test
sub
xchg
jns
test
mov
je
mov
ja
jb
ds
inc
rcrl
inc
popa
lea
rclb
insb
cli
lret
fisubs
rcrl
pop
mov
aam
sbb
jl
ja
xor
fdivrs
jno
xor
adc
add
mov
fldl
mov
or
not
and
dec
mov
jecxz
test
jg
mov
mov
out
popf
cli
push
push
cmp
jle
pop
pop
xchg
pop
aam
ja
push
out
or
add
sub
je
jle
xchg
scas
push
mov
sahf
fists
adc
mov
mov
lods
cli
mov
adc
aam
addr16
add
pop
jne
cmpsb
jge
inc
mov
mov
fs
ficompl
dec
dec
sbb
jae
or
push
push
ret
outsb
or
cld
leave
mov
out
and
loop
pop
out
ds
jne
ret
movl
xchg
arpl
add
and
daa
pop
mov
scas
inc
das
iret
fstpl
rorb
inc
mov
clc
roll
out
xor
rol
pop
ret
add
pcmpgtw
negl
test
mov
stos
pop
mov
int
hlt
insb
mov
std
cmpsb
dec
and
pop
lret
xor
sub
xor
mov
cmp
fdivp
cwtl
push
into
loop
xchg
mov
fwait
mov
jb
add
in
dec
dec
inc
je
mov
push
jnp
pop
ret
sub
aas
mov
sahf
push
adc
pop
mov
shlb
out
sub
fcomip
sub
es
jle
fnsave
outsb
mov
sarl
pop
popf
inc
out
mov
insl
cmp
adcl
nop
lock
mov
andl
add
add
mov
imul
nop
jo
mov
aad
jne
jl
and
xchg
mov
mov
je
jp
fisttps
cmp
les
outsb
sub
mov
rol
push
out
and
xlat
push
lea
jo
outsl
xor
mov
andl
outsl
iret
addb
arpl
cmp
add
pushl
xchg
jns
pop
lcall
xchg
xchg
dec
repnz
ss
push
movsl
fsubrs
fidivl
adc
hlt
pusha
pop
test
xchg
ds
xor
sbb
pop
ljmp
in
je
push
sub
aad
add
jmp
mov
out
dec
mov
ret
add
sub
ljmp
ret
adc
jo
xlat
aas
push
inc
mov
sarb
cmpsb
mov
in
cmpb
xchg
bswap
sbb
dec
or
dec
nop
out
lock
adc
and
jbe
or
xor
in
jnp
push
xchg
adc
addr16
add
loope
adc
mov
mov
lock
icebp
movsl
icebp
xor
cmp
cmp
int
rcr
sub
lret
jno
mov
aad
loop
xor
in
scas
jae
lahf
xrelease
movsb
pusha
sub
add
inc
or
fidivl
adc
jle
push
inc
push
push
push
pusha
nop
lds
testb
xchg
sbb
push
mov
ret
jae
dec
movsl
clc
stc
ljmp
cli
icebp
jo
sub
and
add
mov
xchg
jge
pop
lret
xchg
pushf
bound
mov
jecxz
ljmp
cmp
mov
dec
jge
dec
mov
test
loop
shl
xor
repnz
xchg
out
jb
xor
lahf
push
ret
sub
pop
mov
mov
mov
decl
cwtl
loopne
mov
push
pop
jb
add
cmpsl
mov
jmp
lea
mov
fdivs
cmp
cmp
add
or
fbstp
or
adc
movsl
inc
inc
or
std
inc
mov
shrl
mov
pop
movsl
outsl
shlb
xor
push
xchg
js
aaa
bound
mov
xchg
scas
cmp
mov
jno
pushf
aam
aad
ljmp
dec
or
aad
aam
and
add
mov
inc
cltd
cmpsl
idiv
push
pop
xchg
ds
mov
xchg
cmp
add
icebp
ret
arpl
jp
inc
in
push
xchg
stos
invd
fucom
aaa
fwait
jmp
insl
inc
and
pop
mov
addl
and
in
adc
cli
std
and
out
jno
inc
lea
mov
ficompl
xchg
fidivrs
shl
pop
test
aad
pop
lcall
push
loop
add
ds
imull
ljmp
daa
dec
imul
inc
aad
add
pop
push
sbbl
pop
imul
call
cld
out
lea
mov
sbb
iret
shlb
pop
pusha
or
push
clc
insb
add
dec
loop
xchg
mov
enter
insb
jmp
push
popa
jno
and
sub
sbb
push
mov
push
mov
clc
pusha
push
stc
cltd
cmpsb
push
cwtl
aad
xchg
out
cmpsl
push
inc
mov
enter
xchg
adc
push
imul
daa
stos
das
andl
cmp
mov
sub
lods
or
inc
out
iret
stos
or
push
xchg
adcl
jl
inc
dec
push
movsl
pop
out
shlb
push
mov
jle
hlt
scas
fiaddl
pop
and
push
pop
cmp
pop
ljmp
out
xor
div
cli
adc
push
inc
adc
add
cmpb
loope
mov
push
push
xlat
xchg
mov
jg
jg
mov
add
int3
xchg
sarl
dec
out
cld
shrb
inc
ljmp
syscall
sbb
mov
push
cltd
cltd
jle
add
mov
lea
mov
out
cmpsb
fisubrs
repz
cmc
dec
pop
mov
mov
pop
jo
and
push
push
sahf
push
cmpsl
nop
outsb
loope
insl
aad
rolb
xor
or
das
lds
inc
xorb
test
loope
pop
rcrb
pop
jp
push
in
mov
adc
ja
dec
push
push
push
cmpsl
cmp
pop
insb
stos
icebp
pop
mov
aam
test
rorb
scas
xor
es
pop
or
inc
in
pop
in
add
pusha
sbbb
and
aam
pushf
mov
jg
mov
repz
rolb
loopne
mov
loopne
sub
dec
mov
and
xor
mov
mov
fwait
add
sbb
out
xchg
stc
adc
add
repz
mov
jle
xchg
xor
or
sbb
cmpsb
push
scas
out
add
cmpsl
movsb
jbe
test
into
pop
repz
clc
ficomps
mov
dec
jne
push
scas
xchg
nop
loopne
xchg
add
mov
sub
add
mov
in
je
je
enter
xchg
ljmp
dec
mov
insl
jne
out
fwait
mov
dec
out
pop
adc
mov
arpl
aad
mov
in
jno
cmp
jle
add
xchg
shll
sbb
pop
scas
bound
lret
xor
push
pusha
pusha
xorb
dec
pop
rcrl
test
push
jo
mov
jge
mov
push
out
aam
cmp
ret
dec
mov
sub
and
movsb
in
pusha
pop
or
js
pop
cld
push
add
jnp
jb
ljmp
fnstcw
sbbl
adc
negb
movsl
add
aad
fs
jbe
push
shld
sbb
pop
push
push
jo
push
jns
and
es
pop
push
test
lods
aas
jo
xlat
lds
pushf
jo
pop
aaa
pop
je
ja
xchg
xchg
pop
movsb
add
inc
imul
sub
sbb
roll
scas
mov
fists
in
scas
mov
dec
aad
ret
hlt
mov
and
idivl
sub
mov
xchg
jnp
hlt
jg
pop
dec
cwtl
adc
mov
add
push
mov
push
push
push
mov
jge
xlat
shr
add
xchg
sub
and
sbb
test
xchg
jmp
and
lods
pop
cwtl
xor
data16
lcall
sahf
stos
fs
sub
mov
call
dec
ljmp
mov
dec
test
xor
iret
das
push
sbb
sbb
fildl
pop
mov
daa
leave
xor
sar
sub
in
ffree
sbb
mov
aas
add
push
neg
popl
pop
pop
push
inc
push
cli
jg
cs
cltd
sti
das
int
jp
icebp
mov
cmc
fmul
sahf
inc
push
mov
jmp
mov
mov
or
xchg
adc
cmp
mov
jnp
mov
sbb
ss
sbb
inc
ds
and
clc
push
ret
mov
push
cmpsb
dec
and
daa
out
loopne
push
jb
mov
mov
sub
mov
fldl
fnstsw
stos
shrb
mov
fisubrl
cmp
iret
mov
adc
xor
inc
mov
push
pushf
popa
ss
mov
aaa
movsl
int
loopne
jno
insl
fwait
pop
loope
pop
and
mov
ja
jle
push
push
mov
cmpb
test
xchg
jl
fisubl
fsubr
mov
fiadds
iret
push
frstor
out
mov
mov
cld
and
fnstsw
push
leave
mov
xor
mov
sub
push
loope
rcll
sbb
push
rol
fcoml
push
xchg
int
imul
out
iret
mov
mov
add
adc
repz
je
popf
repz
dec
incb
in
add
mov
xchg
add
imul
pushw
rcl
ror
cmc
paddusw
cmp
jecxz
sub
adc
call
stc
inc
mov
push
mov
and
or
add
pop
test
add
adc
fwait
pushf
das
xchg
push
xor
cmpsb
adc
push
negb
xor
push
jo
aas
daa
pop
jb
loope
stos
push
je
cltd
lock
cltd
test
iret
sbb
out
out
into
test
cmpl
into
pushf
lea
icebp
pop
daa
ljmp
inc
pusha
jp
adc
inc
and
loop
inc
fs
or
shl
dec
mov
stos
clc
pop
js
subb
push
daa
push
pop
pusha
and
data16
add
jbe
inc
aas
mov
mov
lcall
mov
imul
popa
pop
add
lock
cs
push
cmp
and
pop
sbb
push
xchg
add
movsb
sbb
xchg
mov
inc
cmp
pusha
mov
mov
inc
fisubrs
in
push
inc
ret
addr16
in
jmp
jnp
push
notb
jp
push
jae
loopne
and
sbb
jne
xchg
or
and
aad
mov
call
cmp
dec
xchg
stos
jge
jmp
jl
out
movhps
xchg
cmc
mov
and
xchg
test
push
push
mull
stos
aad
xor
int3
xchg
inc
fmuls
je
mov
jge
es
push
out
lods
outsl
pusha
sub
mov
mov
pop
mov
mov
fidivrs
mov
jge
dec
jg
les
mov
sub
add
mov
popf
sbb
xchg
std
sbb
add
loop
movsb
imul
mov
xchg
add
sbb
test
push
xlat
or
std
inc
scas
xor
pop
movsb
inc
popf
mov
adc
jmp
add
jno
pop
jecxz
push
aas
dec
mov
shlb
outsl
pop
sub
push
ret
mov
cwtl
stos
cmpsb
mov
xor
mov
push
outsb
mov
scas
xchg
jae
cmp
imul
cmp
cmp
test
aad
insb
andb
sbb
arpl
cmp
jge
mov
push
loop
cmp
call
adc
fcompl
lods
jmp
jp
icebp
adc
xor
inc
jg
push
mov
sub
lahf
test
adc
imul
sbb
push
mov
out
inc
repnz
clc
push
sub
lret
nop
in
fwait
cmp
jnp
lock
es
jg
xorl
aas
fcmovnu
xor
ljmp
mov
mov
and
imull
lcall
or
mov
adc
sbb
and
in
mov
mov
nop
test
aam
pop
dec
pop
cmpsb
jnp
dec
inc
dec
dec
lods
mov
xor
push
popf
lahf
out
inc
dec
mov
cmp
and
xchg
mov
push
imul
jmp
mov
xchg
add
pop
jae
and
push
fwait
mov
mov
jbe
mov
and
xor
lods
push
cli
mov
stos
sub
adc
scas
mov
jp
lods
ror
shrb
jb
xor
fcmovbe
repnz
bnd
test
and
cmpsl
add
faddp
imul
sbbb
imul
ss
sub
dec
pop
jp
test
sbb
xchg
mov
rcrl
dec
icebp
scas
lea
mov
mov
mov
data16
das
popl
xchg
lds
inc
incl
stos
mov
es
andb
lods
insl
sahf
fidivs
and
icebp
orb
lods
stos
inc
fisubrs
cmpsb
and
enter
addr16
mov
jbe
arpl
jns
cmp
fsubrs
lret
mov
outsb
xchg
add
out
inc
xchg
sub
inc
and
fldt
dec
sub
cmc
jecxz
push
sbb
mov
or
jecxz
sub
sub
push
out
fidivs
lret
xchg
inc
mov
push
add
pusha
lcall
icebp
xorl
enter
adc
ret
mov
popf
sub
sbb
std
push
mov
add
es
push
sub
inc
push
out
sti
inc
ret
outsb
push
mov
les
loopne
xlat
pop
hlt
mov
fldenv
and
push
mov
aas
dec
shl
mov
clc
mov
mov
orb
js
das
cmp
repnz
lcall
ds
and
adc
jb
lret
adc
push
push
xchg
xor
enter
inc
ficompl
lret
hlt
dec
mov
push
in
mov
push
les
cmc
scas
cmp
and
mov
les
hlt
xor
xlat
xorl
push
cld
inc
adc
add
xor
push
aas
adc
jp
pop
outsb
cmp
out
xchg
stos
adc
fwait
jge
pop
repnz
lcall
inc
cmp
scas
lock
dec
and
jp
int3
shll
sub
cmp
ljmp
xor
pop
repz
push
mov
out
andb
ljmp
inc
and
movsb
xchg
hlt
in
incl
lahf
loop
mov
xchg
lds
mov
cmpsb
std
leave
jp
adc
call
cmpsb
cmp
ds
cmp
int3
lahf
dec
adc
imul
dec
insl
pop
outsb
sbb
jecxz
cmp
xchg
sub
cmp
cmpsl
mov
push
sub
imul
cmc
add
add
inc
sbb
add
repz
popf
cwtl
xchg
jmp
cli
or
and
pop
xchg
xor
jecxz
daa
ljmp
ja
ret
jb
bsr
loop
mov
push
mov
push
jmp
aam
icebp
lret
ljmp
inc
int
cwtl
ja
sbb
sbb
outsl
pop
jno
in
push
repz
lret
push
push
adc
push
push
imul
inc
pop
mov
xor
sbb
mov
rcl
push
sub
andl
mov
pop
inc
nop
jg
and
xchg
inc
xlat
xchg
pop
icebp
jecxz
fxch
leave
dec
stc
and
insl
pop
mov
inc
adc
cmp
dec
ja
into
pop
shr
mov
mov
xchg
dec
call
sbb
xchg
pop
pushf
cmp
and
shlb
sbb
out
add
out
pusha
xchg
sahf
dec
pop
mov
fstpl
loopne
loope
or
inc
sbb
or
rcrb
outsb
lock
lods
fwait
or
jnp
test
test
sub
inc
scas
imul
hlt
mov
mov
xchg
arpl
jmp
cmp
sub
inc
or
dec
enter
xchg
dec
dec
pop
dec
mov
add
mov
in
jl
cltd
je
lods
test
or
fxtract
jbe
sbb
fists
imul
jno
adcb
popf
lods
mov
inc
stos
push
cmp
lds
mov
orl
arpl
imull
jbe
mov
jbe
test
adc
sbb
mov
test
aaa
dec
adc
stc
scas
xor
cli
sarl
sub
nop
ja
psubd
xlat
cmp
mov
lock
sub
popf
jg
stc
leave
lahf
mov
push
movsl
mov
fwait
insl
dec
popf
and
aaa
out
mov
pop
xchg
cmp
icebp
fadd
sub
andl
out
adc
pop
xor
icebp
mov
xor
cmp
mov
jnp
iret
sub
xor
jns
in
test
sbb
inc
jl
or
ret
loopne
sbb
outsb
dec
and
jbe
out
dec
lret
xchg
mov
shr
insb
jle
mov
pusha
out
jg
addl
pop
les
pushf
mov
loopne
xchg
sbb
into
mov
scas
ja
adc
and
out
std
subb
push
xchg
aas
stos
inc
pop
in
enter
xlat
outsb
jno
jne
dec
movsb
push
clc
sahf
fcmovne
xchg
bound
call
mov
mov
lods
mov
cmpsb
pop
int3
adc
into
push
iret
mov
or
lock
and
repnz
jb
stos
mov
sub
insl
adc
and
adc
or
inc
push
divb
jmp
sub
sbb
xchg
sqrtps
dec
mov
sbbb
ljmp
mov
and
push
or
or
sbb
ret
in
add
les
jg
andb
mov
cmp
aam
and
and
pop
icebp
inc
jnp
lret
push
orl
mov
cmp
js
in
sub
jge
pop
adc
cmp
pop
outsl
adc
notl
aad
das
mov
cwtl
lock
and
jne
pop
jmp
outsl
shll
xchg
xor
or
mov
roll
lret
aaa
into
aaa
cmpsb
enter
push
stos
push
andb
adc
dec
mov
aad
cmpsb
push
dec
popa
mov
repz
scas
insb
mov
or
sbb
dec
shl
inc
mov
pop
in
rcr
jno
xor
insb
jns,pn
pop
inc
mov
ja
mov
das
idivl
pop
scas
out
lds
imul
int
xchg
inc
mov
aad
mov
xchg
lahf
aad
bsf
sbb
iret
or
lock
lret
insl
pop
push
leave
ret
pop
arpl
xchg
or
daa
stc
mov
and
popf
adc
sub
xchg
jae
subb
xchg
pop
lret
inc
xlat
es
in
ljmp
aam
xor
lock
ja
inc
xchg
add
dec
inc
cltd
pop
mov
in
jl
sub
jns
inc
gs
fwait
test
xchg
sub
mov
cltd
inc
jae
jmp
int
cmp
mov
loopne
jbe
sub
inc
ja
shr
daa
stos
adc
ss
or
lcall
mov
xlat
mov
xchg
mov
dec
cmc
push
fadds
mov
imul
mov
mov
sub
inc
lods
mov
pop
lods
mov
inc
mov
lret
and
cmp
call
inc
push
inc
in
inc
push
cmp
addb
xlat
hlt
mov
fbstp
pop
push
cli
push
add
arpl
xchg
pop
outsl
dec
xor
aam
pop
push
int3
xor
and
jnp
loope
mov
push
ds
cmc
push
jg
push
js
lods
or
push
popa
add
in
stos
lahf
xor
mov
push
cmp
jp
sti
xor
stc
and
mov
sub
cmp
out
in
adc
push
ljmp
daa
lds
mov
and
pop
add
and
lods
jmp
imul
arpl
adc
or
mov
out
sbb
pop
xor
xchg
or
push
mov
enter
mov
fcoms
push
in
push
addb
adc
mov
xchg
mov
mov
and
inc
test
push
stos
pop
mov
aam
xor
mov
jp
bound
jno
mov
das
insl
push
andl
sarl
push
in
jecxz
sbb
test
imul
lret
jne
and
insl
cs
pop
or
insl
repz
insl
mov
push
push
jne
cmp
hlt
adc
mov
ret
aam
xchg
shlb
jo
cmp
and
mov
std
clc
cmpsl
xor
jno
push
stc
jbe
das
mov
inc
call
cmp
xor
xor
daa
jnp
or
ja
lds
shlb
xchg
ja
repnz
addr16
push
lret
sbb
xchg
ss
fdivr
and
adc
mov
test
inc
nop
mov
faddl
loop
stc
jo
cmp
repz
xchg
adc
adcb
xor
gs
add
lret
addr16
sub
incb
testl
cwtl
push
inc
xor
inc
push
inc
push
arpl
push
lahf
mov
push
and
rcrl
sub
inc
imul
imul
aaa
add
cmp
jb
mov
cmp
mov
gs
cltd
shlb
out
in
test
add
jmp
ss
mov
sub
mov
dec
hlt
xor
inc
dec
mov
mov
pop
popf
push
std
scas
fwait
xchg
sub
inc
ja
or
stos
lock
lods
jbe
fidivrs
pusha
fsubrl
sub
xor
aaa
mov
loope
cmp
int
and
jo
mov
add
jb
jecxz
andl
cmp
roll
push
iret
imul
mov
mov
xchg
popa
push
jle
loopne
lock
add
add
loopne
cld
cmpsb
lret
addr16
or
pop
lea
add
dec
or
xchg
inc
sahf
sub
test
lret
sub
pop
push
jno
sbb
sbb
dec
add
inc
sti
add
cmp
daa
subl
repnz
mov
stos
add
outsl
rcrl
adcb
sub
and
leave
das
mov
test
lret
out
ljmp
jns
xlat
in
jmp
fmuls
arpl
fstpt
test
mov
dec
aaa
imul
popa
xchg
hlt
faddp
jns
cmp
mov
mov
mov
inc
ja
js
imul
pushl
adc
cmp
add
mov
adc
jge
addr16
into
push
dec
xchg
and
fldcw
jb
ret
out
mov
fldenv
sbb
mov
fcomps
stos
jnp
shlb
adc
jno
repnz
and
das
mov
scas
push
cmp
push
dec
loop
fadds
add
arpl
add
inc
xchg
sbb
xchg
xchg
popf
or
hlt
mov
pop
xchg
mul
inc
mov
daa
cld
pop
xor
mov
loope
add
adc
inc
andl
mov
add
hlt
and
std
das
xchg
push
sbb
jge
sbb
rorl
out
add
nop
pop
fbstp
inc
lds
jle
xor
jne
xor
sbb
ja
pop
insl
push
mov
addr16
scas
mov
cmp
cwtl
enter
out
mov
fcom
add
mov
or
jmp
or
and
push
sbb
lods
in
inc
aas
push
cs
add
xchg
out
sbb
pusha
add
fnsave
cs
push
mov
mov
jmp
rclb
sarb
jmp
cmp
jnp
and
mov
ja
int3
adc
sub
scas
xchg
sub
inc
mov
loope
scas
mov
cld
push
mov
xlat
inc
aad
flds
fs
inc
cmpsl
inc
in
je
mov
xchg
or
mov
cmp
pop
jno
notl
nop
mov
adc
sub
adcb
mov
push
test
cmpsl
xor
movsl
scas
inc
test
xchg
push
es
and
lahf
push
lods
adc
andb
mov
cs
ja
inc
lds
or
sahf
out
ret
popf
xor
jle
ljmp
clc
push
cld
sub
outsl
repnz
dec
addr16
mov
xor
in
cld
mov
mov
mov
sti
xor
sub
cld
mov
test
pop
scas
mov
sub
push
stc
sbb
movsl
mov
test
inc
xorl
aam
inc
adc
ljmp
cltd
inc
inc
fdivl
cmp
adc
into
movntps
out
in
mov
pop
cmp
call
test
je
iret
lds
or
mov
cmp
iret
insl
aas
cmp
insl
jmp
aam
mov
ss
and
call
mov
rcrl
xchg
jmp
repnz
sub
std
mov
inc
data16
jbe
insl
xlat
test
or
cwtl
pop
movsb
decl
fstpt
popa
jb
pushf
mov
inc
pop
jo
push
cwtl
xor
arpl
xor
push
fcomi
mov
sbbb
xor
mov
clc
or
pusha
mov
jmp
gs
ret
or
jae
lds
sbb
mov
mov
inc
ss
dec
dec
jge
cmpsb
mov
loopne
imul
mov
jle
pop
mov
dec
add
xchg
xchg
idiv
xchg
jns
jge
dec
mov
sbb
mov
mov
adc
pxor
xchg
push
in
loopne
mov
cmp
mov
mov
cmpsb
lahf
je
and
xor
je
and
pop
mov
mov
and
mov
xchg
fidivl
mov
sub
xchg
iret
pop
insl
std
testb
adc
mov
repz
subb
in
mov
popf
in
inc
pop
addr16
leave
adc
xor
mov
adc
push
dec
push
inc
mov
xchg
lods
fcoml
fldenv
mov
or
mov
push
mov
inc
and
lahf
popa
jns
mov
or
iret
sbb
leave
cmp
xchg
and
lds
popf
lods
adc
das
dec
fsubrl
cmova
xchg
fwait
loope
or
mov
repnz
lock
inc
and
push
jmp
in
xor
out
and
xchg
dec
fcmovnbe
notl
ljmp
cltd
adc
pop
daa
jb
aad
mov
popl
data16
and
inc
cs
in
int
xchg
jo
cld
in
test
out
xor
ja
xor
mov
in
mov
je
lret
repnz
mov
pop
fildll
push
fisubl
dec
insb
add
leave
push
loopne
pop
sahf
and
add
adc
xor
adc
add
imul
outsb
ret
inc
loopne
pusha
push
lods
insb
jle
inc
es
mov
rclb
push
xlat
imul
mov
sbb
mov
xlat
negb
push
or
add
flds
sbb
sbb
sub
dec
loope
inc
mov
xor
lahf
movsb
xchg
pop
push
or
out
sahf
jne
or
cmpsl
jnp
cmpsl
insb
adcl
aam
or
ss
push
mov
xchg
mov
add
mov
in
sub
imul
sarb
pop
jae
subl
fidivrs
adc
xorl
sub
out
popl
adc
xchg
push
mov
add
sti
rcl
cmc
or
xchg
push
xchg
xor
mov
test
leave
add
cmpsl
pop
sub
mov
push
pop
out
scas
adc
fcmove
push
xchg
lret
sbb
popf
shrl
movsl
sbb
lock
sbbb
mov
cmp
xchg
dec
push
js
dec
sub
dec
aaa
push
pop
imul
sbb
popf
sbb
sub
mov
xchg
nop
xchg
addr16
movsl
dec
lock
in
sarb
xchg
out
cli
int
dec
in
inc
shlb
subb
int
lahf
js
shlb
sahf
scas
lock
inc
std
push
incl
int3
mov
std
enter
stos
outsb
mov
pop
lds
sub
push
xchg
and
jbe
mov
rorl
pop
mov
lret
jns
xchg
sub
xchg
mov
insl
add
push
cld
push
xor
mov
cmpsb
push
std
adc
mov
addr16
lret
dec
clc
add
adc
scas
push
fadds
jmp
shl
neg
pop
jge
xchg
mov
mov
shr
jl
sbb
fimuls
lods
jbe
outsb
ret
loope
orl
cwtl
sbb
jnp
outsl
rolb
jge
pop
out
push
cmc
int3
call
add
jbe
mov
pop
inc
imul
lods
mov
mov
sub
es
scas
add
outsb
std
and
push
push
sub
arpl
stc
nop
push
test
call
stos
mov
leave
sbb
aas
test
xchg
mov
add
pop
add
mov
add
jmp
call
xor
sub
jae
adc
mov
jmp
cs
fs
jle
add
dec
pop
pop
mov
out
in
add
faddl
es
mov
ret
into
dec
dec
sbb
xchg
pop
sub
in
sub
cltd
aas
imul
fnstenv
pushf
push
test
cmp
xor
cld
enter
ss
and
mov
xorb
imulb
push
jno
add
xchg
dec
shrl
mov
add
jae
test
mov
mov
dec
inc
adc
insl
xchg
fsubp
ljmp
bound
pop
aam
ret
insb
xor
lods
sub
sub
pop
imul
mov
adc
pop
pop
adc
out
in
adc
repz
out
sbb
in
notb
repnz
sbb
sbb
xchg
arpl
in
pop
ret
sub
push
mov
ds
orl
push
pop
mov
aad
inc
cmpsb
int
fcmovnu
mov
inc
inc
ret
push
push
clc
test
mov
dec
push
sub
xor
les
out
cmp
xchg
pop
addr16
int
frstor
in
add
test
add
scas
cmp
pop
call
adc
adc
xchg
inc
xchg
scas
pop
addr16
sti
adc
mov
xor
mov
aaa
and
fdivl
ja
mov
xchg
pop
lret
sbbl
mov
push
repnz
push
and
cmpsb
arpl
out
jb
in
sub
out
sbb
xor
pop
jg
lock
xor
xor
xorl
lahf
dec
pop
push
fiadds
sbb
sub
adc
lcall
and
into
outsl
testl
stc
xchg
or
das
push
xor
scas
testl
cld
dec
sbb
xor
adc
xor
push
cmp
mov
mov
sbb
mov
add
fsts
xchg
inc
xchg
pusha
fidivs
popa
jo
mov
add
fdivl
fsubrp
mov
push
sbbl
inc
mov
test
das
mov
jmp
inc
sub
jnp
jg
mov
pop
mov
push
xor
jo
mov
mov
sbb
into
ss
push
popf
pop
out
sbb
icebp
mov
cmp
mov
mov
sbb
insb
adc
shl
and
sahf
cld
pop
mov
and
test
cmp
and
lcall
std
mov
dec
out
mov
lods
pop
push
cli
or
rcrl
add
add
push
add
xlat
jo
aas
dec
in
or
dec
test
testb
xchg
sbb
sti
push
and
mov
je
shrl
das
cmp
je
push
test
scas
sbb
push
dec
notl
imul
inc
or
dec
testb
shrl
lret
out
sti
test
cli
xor
out
cmpsl
sbb
mov
loopne
mov
sbb
pusha
cwtl
dec
rorl
outsl
test
jns
ret
sbb
and
and
push
sub
clc
je
sub
push
fldt
lret
popaw
mov
adc
jge
fwait
sahf
jmp
mov
sub
aas
into
pop
xchg
mov
dec
xor
xchg
imul
jne
push
cmp
adc
pop
iret
xchg
cmp
rol
test
ja
fs
mov
xchg
sbb
mov
lret
jp
pusha
mov
fyl2x
rcrb
mov
adc
in
add
jno
in
mov
xchg
hlt
fimuls
mov
ficompl
inc
adc
cld
or
lret
jae
fstpt
mov
sbb
rcl
jmp
insb
xor
shl
mov
cmpsl
adc
pop
cmp
stc
test
sub
mov
sbb
pop
push
aam
pop
idivl
je
dec
push
lock
dec
loope
or
shrb
outsb
fistpll
push
mov
dec
in
movl
cmp
call
xchg
add
dec
mov
mov
js
pop
mov
mov
cmp
sbb
and
dec
pop
sti
and
test
lret
sbb
sbb
pop
lds
pop
std
subb
aad
jl
or
shlb
push
mov
jb
push
insl
jb
decb
or
push
jae
inc
xchg
sbb
data16
int
pop
ja
sub
fists
aad
add
mov
jmp
push
outsb
ds
ss
sub
ficoml
int3
in
jp
xor
stos
mov
addl
xor
mov
xchg
pop
outsb
inc
ds
jo
out
test
mov
inc
arpl
pop
push
mov
mov
subb
jno
jb
mov
xchg
inc
jge
cmp
rcrb
jge
iret
pop
mov
pop
cs
and
xchg
cwtl
jae
shld
jae
bound
fcompl
push
imul
xchg
sub
inc
push
cli
add
aas
stos
jle
and
cmp
loope
mov
adc
mov
adc
clc
fcom
cmc
in
xor
or
cmpsl
sbb
negl
cmp
sub
in
subl
push
loope
mov
and
push
fstl
pop
hlt
inc
in
ja
jns
push
nop
negl
jge
jno
into
xlat
sbb
outsb
outsb
loop
and
dec
dec
bound
fwait
scas
inc
int
jge
call
or
ficoml
lret
cwtl
cs
adc
mulb
popa
inc
xlat
int3
int3
or
inc
and
fcmovnu
filds
adc
push
int
in
ss
int
lcall
jge
lahf
cmpsl
jbe
adc
mov
xchg
test
add
sub
outsl
idiv
jno
int3
mov
add
jnp
out
or
cmp
jno
pop
cltd
cmpsl
int
sub
cltd
mov
dec
out
or
xchg
imul
shll
add
adcb
cmpsl
xor
dec
pop
sbb
push
fwait
xchg
insb
int3
dec
fbstp
sbb
andb
insl
adc
inc
and
js
cltd
pop
fcoml
repz
das
pusha
cli
dec
hlt
jmp
lds
arpl
js
mov
push
xchg
jmp
jne
adcb
cmp
push
push
mov
sbb
cmp
xchg
jge
jmp
push
sbb
gs
and
shlb
mov
adc
sti
cltd
adc
mov
or
orb
cmp
mov
mov
inc
daa
fnstenv
or
lods
inc
inc
stos
mov
jp
stc
mov
das
arpl
ds
rclb
jp
insl
jmp
jge
das
cmp
imull
xor
repnz
rcrl
lret
es
pop
dec
jp
cmp
fs
std
inc
pusha
or
xchg
sbb
in
push
sub
repz
imulb
or
or
lods
mov
scas
repnz
push
mov
mov
cmpsw
test
xchg
sub
test
leave
xor
lret
cmp
jmp
loop
mov
push
fisubrl
enter
jbe
jno
out
pop
sbb
cmp
std
cmc
dec
test
sbb
enter
fmuls
or
arpl
dec
push
xor
es
xchg
lods
movsb
cmp
adc
cmp
jnp
sub
hlt
js
js
shufps
aas
cmp
jnp
xchg
pop
jle
inc
sti
xor
xchg
mov
ss
inc
ror
jno
arpl
dec
scas
in
loopne
leave
cwtl
xchg
jb
dec
testb
sub
in
or
outsb
adc
call
sub
test
inc
cmp
aaa
loop
jb
add
ds
pop
or
mov
fs
xchg
xor
dec
loopne
loope
loope
shrb
hlt
cmpxchg
xchg
xchg
inc
dec
pop
roll
fstpt
push
fisubs
pushf
test
inc
sub
clc
shrb
xor
sbb
xor
sbb
mov
and
pusha
divl
jg
sbb
add
mov
fninit
popf
nop
xor
out
inc
shll
mov
in
push
cli
rorb
imul
sahf
decb
jne
sbb
ret
cli
jecxz
mov
jge
aam
adc
push
dec
and
mov
sahf
shr
ret
flds
fnstenv
sbb
std
ret
pop
mov
in
sbbl
fwait
movsb
adc
leave
xor
pusha
fldl
out
xor
js
jge
jne
jnp
sbbl
mov
add
je
and
push
fs
mulb
idivl
movsb
mov
add
les
filds
or
stos
jg
cltd
adc
sbb
jmp
pop
inc
into
lcall
jo
push
out
and
inc
fisubl
and
dec
push
outsb
or
popa
test
rolb
daa
mov
xchg
movsb
adc
pusha
pop
or
mov
out
pop
fmuls
mov
adc
daa
inc
dec
and
dec
and
push
insb
aam
sahf
data16
cwtl
test
std
add
sub
fstpl
mov
mov
mov
sub
pop
xchg
cmp
ja
pop
popf
dec
test
mov
dec
push
mov
add
in
gs
pop
fisubrl
das
mov
and
outsl
and
add
in
adc
mov
add
bound
xchg
nop
push
inc
pusha
xor
and
in
push
aad
jbe
dec
iret
xor
mov
add
test
mov
inc
xchg
sbb
inc
pop
divl
and
mov
sbb
jl
bound
outsb
rorl
lret
into
mov
movhps
dec
sbb
cld
dec
sbb
cmp
shlb
mov
out
test
adc
jnp
push
mov
dec
push
or
aad
inc
pop
mov
or
jge
pop
xor
fcomip
push
jno
add
mov
pusha
mov
adc
test
clc
out
inc
fdivl
push
add
je
into
pusha
cmp
xchg
push
pop
stc
jnp
and
push
mov
pop
ss
jno
and
mov
ss
pop
cmc
jae
sbb
pop
sub
into
jno
sbb
shlb
gs
hlt
pop
ljmp
jecxz
in
mov
sbb
sbb
pop
fmull
jecxz
jecxz
xor
lret
cmc
dec
lret
addl
daa
and
loope
push
sub
outsl
xchg
push
dec
out
sbb
jnp
pop
insl
jmp
cmp
int3
inc
stos
or
dec
jae
cmp
fcompl
shrl
add
test
sbb
sbb
decl
test
mov
adc
push
or
dec
cs
pop
jb
and
inc
stos
inc
js
outsl
cs
sbb
adc
lock
mov
cld
and
mov
loopne
push
rcrl
add
xor
add
push
pop
adc
int3
int3
pop
fildll
add
mov
xlat
jmp
outsb
loopne
ret
and
cmp
fisttps
clc
std
xor
insb
mov
sbb
pop
ljmp
sbb
xor
pop
mov
or
mov
lods
movsb
out
add
jle
xor
pop
mov
pop
mov
xor
add
aad
mov
fcoml
dec
inc
cmp
popf
fnstenv
std
movsl
mov
sbb
jae
sub
rorb
sti
punpckldq
mov
xchg
push
cmp
out
jno
xchg
sbb
cmp
sbb
fdivs
or
adc
sbbl
pusha
cwtl
ds
sub
dec
pop
stc
iret
sub
push
stos
outsb
fdivp
cmp
ja
dec
cs
lods
addl
xor
in
adc
dec
shl
mov
sub
inc
fstps
scas
mov
jl
arpl
xchg
add
add
push
ljmp
cltd
push
fstpt
mov
lds
xor
paddd
push
jl
pop
cs
fildl
pop
das
push
mov
pop
cltd
mov
mov
les
lret
cmpsl
xchg
in
or
or
jnp
xor
or
inc
jg
cmp
sbb
xchg
leave
push
test
std
mov
filds
in
mov
sub
push
icebp
andl
adc
scas
int3
enter
in
ss
xchg
ljmp
aam
jb
xchg
sbb
leave
shl
push
out
outsb
out
pop
les
das
lods
xchg
sub
pop
mov
add
xor
cmpsl
mov
sbb
push
iret
repnz
push
test
bound
add
les
pop
mov
dec
loop
inc
outsb
sub
je
rcr
pop
insb
dec
scas
fwait
repnz
addr16
ror
or
xchg
sbb
lock
add
int3
fcomps
adc
imul
jge
lahf
mov
cli
stos
mov
fsubr
mov
hlt
mov
test
hlt
pcmpgtd
xor
out
dec
jecxz
jns
imul
mov
dec
shlb
flds
lea
js
cs
push
mov
xchg
dec
icebp
push
cmpsb
scas
xor
xchg
std
in
lock
adc
mov
mov
pop
repz
jnp
ret
enter
int
iret
mov
pushl
into
pop
js
pop
dec
outsl
das
push
aas
add
test
out
rclb
xor
push
sub
cmpsb
add
pop
bound
push
push
pushf
jmp
fists
push
in
adc
jbe
cs
loop
test
or
push
cmp
jbe
or
mov
fidivrs
push
sbbl
inc
dec
test
inc
shlb
in
jp
gs
out
pop
jae
add
aas
cmp
nop
daa
jnp
mov
daa
xchg
fnstenv
sbb
sbb
gs
int3
mov
xchg
pop
repnz
repz
ret
jo
je
cmpsl
jns
fildll
mov
xchg
sub
xchg
popf
je
pop
push
mov
mov
into
outsb
and
repz
int3
pop
mov
fisubs
push
je
popl
jb
mov
int3
fldt
pop
lds
xor
xor
cmp
or
xor
mov
mov
xlat
push
jne
sbb
dec
xchg
in
ja
testb
inc
push
testb
repnz
shrl
loope
stos
push
hlt
dec
cmc
fstpt
xor
mov
lea
lret
jle
add
call
mov
fcmovu
jae
jnp
clc
stos
movsl
cli
stos
lods
jp
inc
iret
sub
add
das
adc
call
in
add
add
mov
inc
fcompl
int3
rolb
rorb
cli
ret
inc
sbb
inc
sub
push
shlb
sbb
inc
jne
sti
xor
bound
addr16
imul
test
mov
jg
push
popf
or
pop
xchg
lcall
mov
fwait
or
sbbb
pop
cld
imul
jne
jge
lock
xchg
xchg
sub
fiaddl
pop
aam
xor
mov
dec
in
inc
xchg
xorb
add
pop
fadds
fwait
xchg
jle
sbb
pop
mov
sbb
ret
nop
das
fisubrl
les
fbld
enter
adc
das
xor
ja
lds
iret
add
xor
movsb
lods
add
xlat
inc
or
mov
aad
fptan
xor
popf
lods
add
inc
or
or
mov
inc
push
sub
clc
js
pop
scas
fisttps
cmp
xor
cmp
add
addb
mov
xchg
sub
pop
jecxz
jge
inc
scas
dec
in
daa
mov
pop
mov
or
sub
in
mov
insl
add
push
out
add
nop
sub
and
repnz
xor
lods
inc
dec
lahf
outsb
mov
cmp
cmc
fildll
mov
push
shrl
call
or
decb
daa
mov
lret
dec
add
shl
push
mov
xor
inc
add
sub
dec
pop
mulb
pushf
mulb
ret
jb
xchg
test
xchg
adc
xor
pushf
inc
sahf
sar
in
movb
int3
sti
data16
data16
insb
adc
ficoms
fadd
push
jae
push
movsb
fiadds
inc
insl
pop
insb
lahf
push
mov
pusha
outsb
jp
pop
xchg
sbb
add
andb
pop
jno
xchg
add
mov
cmp
pop
push
or
mov
decb
into
sbb
mov
push
loopne
clc
xor
jbe
aaa
push
cmp
dec
and
arpl
stos
jbe
mov
repnz
scas
repz
outsl
rorb
je
pop
mov
jg
jnp
sub
push
mov
adc
jno
fdiv
push
repnz
mov
sbb
outsb
mov
sbbb
jg
mov
xchg
xor
or
inc
sbb
and
mov
mov
inc
jg
mov
xchg
mov
dec
add
cmp
inc
jge
cwtl
test
xchg
shll
imulb
sbb
ret
jp
and
fldl
call
mov
pop
call
xor
jge
jge
jle
ret
std
jle
and
sub
sbbb
or
std
test
andb
lods
insl
adc
ds
notb
jl
mov
jle
and
add
inc
hlt
pop
mov
movsl
xchg
cmp
adc
repz
popf
sub
iret
leave
xchg
sbb
adc
jle
ja
ljmp
clc
pushf
scas
adc
push
jl
inc
orl
fmul
aam
jbe
scas
scas
fdivrl
test
lret
fisubl
adc
dec
loop
cmc
or
or
mov
pop
mov
cli
pop
scas
pop
cld
outsl
cmp
lods
loope
std
mov
add
pushf
cmp
in
push
sti
add
push
enter
call
push
inc
sub
fists
adc
and
iret
nop
sbb
inc
lcall
cltd
mov
into
xchg
mov
cwtl
imul
inc
popa
jg
push
lods
movsb
jo
inc
mov
inc
lret
mov
inc
lcall
lret
add
test
cmp
fwait
xor
loope
adc
les
shrb
adc
mov
loop
mov
cmp
mov
ljmp
sub
rcll
outsb
xor
pop
add
push
jno
mov
add
pop
cmp
sbb
or
in
test
daa
out
sbb
aas
jb
stos
sub
cmp
sbbl
sti
push
es
orb
or
mov
jl
xchg
sub
movsl
inc
cmpsb
mov
pop
jmp
fsubl
cmpsb
or
sub
lods
leave
scas
add
xor
mov
jl
push
es
data16
add
lods
push
movsl
outsb
xchg
mov
leave
push
pop
movsl
call
push
insl
add
adc
and
dec
test
add
ja
xchg
test
enter
es
jnp
push
xor
gs
sub
push
ss
aas
xchg
inc
frstor
insb
adc
lea
and
andl
and
call
push
xchg
mov
fwait
bound
imul
bound
inc
fiaddl
stos
ss
clc
daa
pop
xor
lds
mov
pop
dec
hlt
push
ret
pop
dec
jnp
inc
loope
scas
dec
loopne
scas
out
mov
ret
mov
cmp
ljmp
dec
and
in
add
xchg
mov
add
ret
stos
sti
adc
pop
addr16
sbbl
arpl
adcb
or
test
xchg
push
xchg
sub
mov
pop
out
or
arpl
not
mov
scas
pop
cmpsb
adc
mov
pop
clc
stc
push
movsl
jae
rep
dec
leave
pop
jns
add
mov
inc
lock
nop
pop
push
push
jnp
xor
stos
lock
mov
dec
pushf
inc
fcmovnb
jnp
outsb
cmpsb
repnz
stos
into
rcrb
jl
jl
pop
loope
mov
jp
or
adc
or
insl
mov
ss
jl
inc
hlt
sub
daa
mov
mov
aad
shll
dec
test
mov
xchg
jp
lcall
adc
push
add
inc
sbb
add
idiv
cwtl
outsl
mov
ss
int
testl
loop
xor
loop
call
inc
mov
loopne
fbld
dec
imul
jle
mov
int3
mov
pop
hlt
push
push
dec
pop
cmp
sbb
lods
orb
addl
aas
loope
insb
adcl
iret
pop
cli
lea
outsl
aas
pushf
inc
stc
nop
je
add
adc
pop
fbld
add
fyl2xp1
lahf
or
inc
out
mov
or
push
ds
and
mov
fsubrp
sti
push
in
js
sub
xchg
pushf
xor
pop
push
repz
aaa
int
sbb
outsb
ret
repz
ljmp
insb
cld
cwtl
cmp
out
pop
cmc
in
pop
xchg
dec
mov
xchg
sbb
pushf
mov
idivb
scas
test
dec
filds
cmp
dec
cmp
xchg
outsl
inc
push
cmp
push
pusha
inc
stc
adc
ss
out
xchg
jae
sbb
push
lods
cwtl
or
imul
loope
push
adc
jecxz
enter
pop
mov
push
mov
dec
cmp
dec
inc
ret
add
or
push
outsl
insl
ss
lahf
nop
popf
bound
ds
roll
cmp
sbb
xchg
mov
nop
adc
and
xor
out
push
sahf
sub
bound
dec
dec
lock
xchg
cmpsb
pushf
and
or
cmpsl
cmp
pop
or
sub
jno
cmpsl
ds
xchg
dec
imul
in
push
xor
arpl
or
aam
dec
push
inc
movsb
jno
push
adc
dec
sub
ss
loop
xor
in
inc
popf
ret
les
sbb
fsubs
or
ljmp
scas
jbe
pop
add
jns
loop
jl
aaa
stc
int3
popf
adc
inc
mov
cmp
adcb
cmp
pop
sbb
out
inc
lret
sub
stc
sub
daa
clc
cmp
enter
clc
jle
mov
lret
jp
sahf
push
mov
aad
lret
jb
mov
cltd
rorl
lea
lcall
xor
ret
imull
xor
dec
mov
xchg
or
mov
mov
fcmovnu
inc
inc
dec
add
sbb
xor
xchg
push
das
cli
pop
pop
inc
push
cwtl
out
inc
xchg
jb
enter
inc
bound
aaa
mov
mov
xor
fbld
repz
add
das
mov
push
push
mov
and
cmp
ja
popf
test
sbb
dec
pop
and
add
xchg
pusha
inc
clc
lods
lahf
ljmp
inc
sub
add
mov
adc
daa
inc
push
jg
scas
xor
xor
push
sub
mov
mov
into
fcompl
mov
pusha
ss
add
and
inc
leave
jecxz
sbb
fwait
dec
sub
xor
push
in
test
in
add
test
movsl
out
int
pavgw
jecxz
cmp
adc
mov
loop
push
adc
sahf
arpl
dec
jns
mov
pop
xor
jmp
jmp
rcrl
add
pop
xlat
scas
mov
adc
call
mov
add
mov
jmp
or
add
inc
in
pop
shrb
test
sub
lock
sbb
sub
lret
jp
daa
cmpsl
mov
call
in
push
mov
ja
pop
jmp
xor
pop
mov
xor
cmp
pop
out
cld
inc
loop
arpl
imul
jo
aaa
lods
repz
push
testb
jge
inc
lods
pop
mov
jae
mov
and
xor
arpl
lcall
icebp
sub
jg
or
push
cmp
jecxz
mov
repz
mov
in
je
xor
loope
ret
ljmp
mov
stos
xchg
mov
push
dec
loop
sub
scas
mov
adc
mov
pop
fdivp
add
add
sub
out
and
pop
repnz
push
lods
fwait
pop
jp
je
scas
jg
aad
clc
test
cmp
fs
sub
es
sahf
xchg
pusha
cmp
ds
lods
out
sahf
xor
repz
and
call
push
rcrb
out
sbbl
xchg
scas
push
icebp
fidivl
pop
dec
pop
or
dec
or
lcall
mov
cmp
pop
jl
cmpb
lahf
cmp
mov
cld
ficomps
sub
mov
decb
mov
out
mov
in
mov
in
or
sti
cmp
pop
rep
sub
jp
dec
or
sub
bound
enter
enter
cs
add
lret
idivb
dec
lret
add
lock
insb
inc
sti
rcr
fs
mov
jnp
cmpsl
dec
repz
xchg
aas
into
adc
stos
inc
fdivrl
push
fldcw
popa
fwait
in
add
xchg
inc
xchg
addr16
in
add
lret
adc
pusha
xchg
sub
and
cs
sub
mov
inc
fimull
int
mov
rclb
sbbl
addr16
sti
jge
mov
mov
fldenv
or
mov
sub
cmp
mov
dec
xor
push
sub
push
cmp
cmp
jnp
stos
sbbl
sbb
pop
negb
sub
stos
dec
into
sub
out
mov
jmp
dec
pop
test
xchg
mov
lret
sub
popf
xor
fdivrl
mov
mov
jg
lods
mov
mov
je
cld
fs
fsubrl
lea
mov
push
cltd
out
andb
sub
inc
popa
js
cmp
xor
and
imul
ss
lahf
ss
gs
mov
fldenvs
outsb
lahf
daa
shrl
out
pusha
push
sub
xor
mov
rorl
mov
xor
or
addr16
cmp
ret
enter
std
inc
repz
lahf
mov
push
add
mov
mov
sarb
inc
cltd
movsb
pop
mov
stos
pop
xor
mov
std
aas
cwtl
test
and
dec
inc
inc
je
ret
fisubrs
pushf
inc
fnstsw
shll
fdivrs
imul
xlat
cmpsb
add
adc
aaa
push
lods
push
jae
scas
cmp
stos
pop
bnd
inc
fcmovnbe
cmp
ret
push
xor
lds
inc
arpl
in
add
push
je
dec
inc
out
popa
inc
xchg
push
in
xchg
inc
xchg
mov
enter
cld
mov
popf
push
dec
idivb
xchg
popf
and
repnz
test
push
add
and
stc
or
jmp
xchg
push
lcall
adc
pop
cmp
repnz
out
inc
es
dec
jbe
add
popf
inc
loopne
and
lea
mov
test
mov
div
xchg
mov
rcl
sbb
es
outsl
sbb
cltd
or
and
popf
sti
mov
sbb
mov
push
inc
mov
shlb
or
xor
xor
pop
cmp
lcall
mov
leave
sbbl
stc
mov
int
pop
decl
dec
jecxz
sub
sbb
notb
adc
or
nop
ficomps
sti
in
popf
jne
mov
push
xchg
aaa
jl
test
mov
ja
sub
jmp
mov
test
aam
jmp
mov
lea
mov
pusha
test
movsb
cmp
adc
cli
pop
mov
gs
fistpl
or
in
div
mov
pop
outsl
inc
inc
lock
add
sub
outsb
inc
hlt
dec
sti
mov
pop
sahf
jmp
xor
shlb
xchg
icebp
mov
in
movsb
dec
les
aad
dec
or
fidivs
sub
test
test
mov
cmp
inc
sbb
stos
xchg
or
imul
sbb
adc
rorb
nop
push
jae
push
xor
or
lods
orl
fidivs
xchg
pop
lock
xor
sub
push
mov
ss
mov
push
mov
test
dec
ljmp
call
inc
xor
and
pusha
test
lret
xlat
ja
jno
push
sbb
movsl
mov
fildll
data16
movsb
imul
dec
testl
push
shll
jl
mov
ds
xchg
pop
xchg
sub
cmp
testb
add
lcall
stc
ret
daa
mov
add
popf
sbb
cltd
fimuls
sbb
in
lock
adc
push
jo
xchg
cmp
shrb
push
mov
shlb
xor
adc
imull
mov
cli
mov
gs
push
sahf
clc
xchg
cmp
stos
jbe
scas
out
xchg
and
xor
or
pop
outsl
cli
insl
std
rcrl
test
mulb
sarl
dec
sbb
dec
jns
mull
enter
pop
add
jno
fsubs
mov
push
mov
repnz
jbe
cmp
out
mov
stos
mov
mov
inc
ret
div
adc
jo
xlat
cs
mov
cmpb
out
in
xchg
sub
outsb
mov
mov
sub
in
lret
aad
scas
mov
dec
cwtl
das
incl
aad
enter
dec
scas
sbb
ljmp
dec
lods
cli
xor
and
cltd
push
movsl
lret
subl
sub
sbb
jnp
lods
xchg
xor
hlt
xlat
push
call
sbb
repnz
js
cmpsl
test
cltd
sbb
push
cmp
push
pop
mov
xor
dec
push
and
js
add
imul
mov
push
shr
repnz
cmp
lods
xchg
dec
sub
xchg
sub
ror
jne
int3
popf
es
in
pop
in
orl
sub
test
jle
sub
mov
std
out
rcrl
cmp
ret
movsb
mov
lods
aad
incb
incb
ss
cwtl
in
movb
push
mov
sbb
sub
and
daa
add
xchg
orb
mov
jmp
or
aaa
add
call
in
mov
sbb
aam
jp
push
dec
and
mov
lods
aaa
mov
xchg
loope
fnstcw
adc
pop
data16
sbb
mov
mov
cmp
lods
in
jno
pop
or
repnz
mov
adc
cmp
test
cmpsb
cmpsl
cmpsb
dec
dec
sbb
hlt
dec
fsubs
test
xor
fdivs
fsubs
addl
pusha
fbld
sbb
xchg
sub
stos
and
mov
daa
mov
sarb
loope
inc
mov
or
movsl
insb
stc
sbbl
xchg
and
mov
mov
mov
inc
es
sbb
xor
mov
vpsllq
push
fists
mov
and
sub
jb
pop
jae
xchg
jno
lds
mov
push
pop
push
imul
ss
loop
adc
or
cmp
stc
xchg
in
ret
ret
cmp
mov
sbb
mov
outsl
mov
push
stos
rcl
ljmp
sub
cltd
push
lcall
scas
sub
xor
sbb
xchg
jp
leave
inc
and
xor
mov
inc
dec
sbb
dec
jecxz
std
dec
test
dec
inc
fnstcw
jp
stos
adc
sbbl
pop
dec
adc
sbb
aas
testl
add
or
mov
divb
dec
loope
aad
and
and
test
fcmovnb
dec
ss
and
sbb
cwtl
out
int3
sahf
addr16
test
int
jne
je
adc
pop
test
out
clc
scas
mov
pop
aaa
lret
or
lods
inc
xchg
test
les
testb
lahf
jg
jae
cs
popf
stc
fdivl
sbb
pushf
sbb
mov
jnp
insl
lods
and
fcmovne
cltd
test
clc
mov
sbb
push
mov
insl
out
adc
xor
or
pop
fstpl
mov
add
imul
mov
sub
or
dec
rorb
das
mov
lcall
push
jno
popf
xor
sbb
jge
xchg
sbb
inc
cld
fldl
jns
xor
andl
or
sbb
adc
xchg
jbe
nop
daa
push
dec
xor
les
faddl
mov
fildll
ret
add
insb
out
ret
andl
lcall
fdivl
push
into
inc
jnp
cli
pop
call
mov
mov
sub
push
mov
xor
mov
mov
or
iret
dec
out
cltd
mov
pop
cmp
xchg
sbb
bound
add
mov
sbb
cmp
jge
jle
adc
xor
push
jp
adc
xchg
mov
push
mov
mov
xchg
jle
sbb
call
popf
xor
pop
insl
add
cmp
ja
jo
int
bndstx
lea
icebp
mov
mov
mov
cltd
fwait
scas
mov
jg
test
xchg
sub
push
xor
mov
cltd
xchg
and
stc
push
test
sbbl
mov
fiadds
jnp
inc
or
std
sahf
nop
hlt
pop
adc
jp
shrl
sbb
cltd
push
mov
xor
jno
inc
mov
fiadds
cli
adc
mov
jo
andl
sub
dec
mulb
imulb
in
icebp
int
lret
into
pop
push
jp
mov
adc
sub
push
dec
or
sahf
add
inc
iret
test
daa
push
repz
xchg
push
xor
add
movsb
mov
fs
out
sbb
iret
add
in
inc
push
sub
in
xchg
loop
addr16
xor
jb
std
xor
sub
and
pop
in
mov
lds
bt
mov
fidivl
nop
popf
lods
rcr
or
imul
andl
in
mov
imulb
and
out
pop
cmp
outsb
std
cltd
dec
xchg
xchg
test
xchg
decb
or
mov
jmp
bound
inc
or
or
jae
movsb
or
jle
in
mov
pop
sbb
dec
cltd
addr16
jle
out
adc
mov
sbb
add
gs
push
push
push
out
lcall
sbb
scas
test
sti
xchg
inc
cmp
mov
pop
fcomp
in
mov
add
mov
mov
or
in
fiadds
pop
sahf
bound
sbb
cmp
and
cltd
or
push
and
sbb
mov
and
xchg
sub
mov
decb
jl
test
jecxz
mov
xchg
adc
adc
sub
or
fchs
add
pop
jmp
inc
push
pushf
pop
or
mov
add
arpl
insb
pop
and
mov
data16
jne
push
rcrl
sti
les
jle
cwtl
divl
mov
push
push
add
jge
jo
jae
scas
in
fwait
cmpl
int3
and
test
push
cmc
sbb
add
dec
mov
push
or
adc
imul
pop
push
js
mov
gs
push
call
sub
outsl
lods
dec
or
fcoms
lea
mov
insb
add
jl
and
sub
test
mov
xchg
insb
cmp
ljmp
and
rorb
push
push
xorl
sub
loope
push
lods
adc
or
subb
push
and
lods
lods
inc
inc
pusha
mov
xchg
addr16
cmp
ja
les
cld
scas
jbe
push
rcll
xchg
outsb
xor
mov
aad
xchg
arpl
xor
pop
jmp
adc
and
inc
jnp
rorb
xchg
xchg
loope
sub
or
stos
mov
dec
testb
lret
ret
test
jbe,pt
mov
lret
lret
adc
and
dec
push
hlt
pop
test
lock
es
jnp
andb
bnd
adc
ror
sub
sbb
push
lock
mov
xchg
fwait
pop
movsb
xlat
inc
xor
xchg
jecxz
adc
push
lods
jmp
inc
fcompl
push
repz
sbb
jmp
pusha
cmp
pusha
pop
imul
xor
mov
mov
mov
push
add
shll
rcrl
and
ret
loopne
loopne
imul
bound
push
mov
shll
pusha
hlt
jg
mov
out
xchg
daa
loope
neg
add
scas
ljmp
call
js
xor
call
lret
std
lret
dec
push
mov
cmp
stos
jl
fldl
or
fcomps
movsb
je
add
mov
leave
bound
ret
mov
push
sub
sbb
aaa
jno
pop
dec
jecxz
inc
and
std
das
push
out
jle
fs
pop
notb
mov
sbb
xchg
pusha
pop
jae
sbb
pop
and
popf
pop
imulb
and
and
stc
add
das
daa
outsb
push
sbb
pop
insl
icebp
cmp
pop
inc
stos
jp
popa
push
push
pushf
sub
popf
jle
fcomi
test
xor
mov
inc
bound
repz
scas
adc
idivb
in
jno
aas
in
add
aam
pop
hlt
mov
int
pop
mov
add
dec
push
popf
jmp
pop
insl
repz
mov
fnsave
push
ljmp
jno
arpl
mov
es
jecxz
nop
pop
inc
cmp
cmp
push
mov
fdiv
test
xchg
pop
lods
scas
mov
xor
arpl
lods
add
push
mov
sahf
imul
adcl
inc
repz
bound
inc
cmp
sub
adc
movsl
insl
inc
xchg
bound
jno
cmp
xchg
push
mov
shrl
test
js
dec
clc
adc
mov
imul
ljmp
imul
rcl
out
lret
pop
cwtl
or
sub
mov
test
cmp
pop
jge
int
dec
xor
and
push
mov
cld
sbb
cs
sbb
ss
les
adc
inc
mov
mov
adc
mov
test
mov
add
insl
push
aam
filds
xchg
clc
test
mov
dec
sub
mov
js
or
sub
xchg
inc
mov
ljmp
sub
inc
and
and
aad
fxch
js
cmpsl
xlat
repz
movsb
sti
sub
xor
xchg
push
mov
jmp
mov
dec
fildll
jmp
test
inc
repz
les
mov
shrl
nop
fldl2e
jne
push
into
lock
xor
lcall
mov
sahf
int
rcll
ljmp
xor
mov
jbe
xchg
and
cmp
in
add
data16
xor
push
and
mov
xor
adc
bound
jmp
pop
mov
sub
out
push
imul
sbb
stc
out
jb
cmc
jo
imul
filds
jnp
inc
mov
icebp
cmpsl
sub
pop
push
loopne
inc
xchg
insl
add
sub
mov
leave
rcl
push
into
mov
int3
fimuls
sbb
jge
xor
xchg
jl
cmp
scas
int
outsb
add
mov
adc
cltd
and
inc
fnstcw
cmp
je
fcmovb
mov
mov
jno
jmp
call
jnp
repz
lsl
add
pop
mov
jne
or
sub
std
es
add
and
jbe
ds
jns
mov
pop
int3
cld
ss
push
fcmovb
iret
push
sarb
dec
cmp
dec
dec
mov
mov
cmpsl
das
out
sub
lcall
enter
inc
stos
dec
fsubrl
fnsave
test
push
repz
adc
sub
aad
loop
fisttpl
cmc
inc
je
stos
add
mov
sub
inc
mov
test
rolb
pop
pusha
adcl
sbb
fistpll
mov
inc
loop
lods
mov
repz
addr16
loope
xchg
sbb
jbe
cmp
push
lds
sbb
nop
pushf
sub
dec
mov
lcall
icebp
inc
pop
adc
or
cmp
xor
mov
push
out
loopne
mov
stc
sub
stos
push
cmpl
cmp
dec
mov
add
repnz
and
into
test
mov
dec
jno
inc
pushf
sbbl
pop
je
mov
insl
pop
jecxz
enter
pop
imul
cmpb
cltd
jp
cmp
mov
cmp
pushf
hlt
xchg
test
or
daa
xlat
cmc
pop
pop
push
lods
popa
cmp
insl
and
dec
lods
xor
aad
call
testb
lea
mov
scas
mov
pusha
push
jge
mov
fdiv
xchg
fdivrs
push
insb
addr16
cli
cwtl
fnstcw
mov
lahf
xchg
xchg
bound
push
jbe
mov
xchg
inc
mov
fildl
and
in
addr16
sub
shll
xor
ljmp
scas
out
mov
outsl
add
leave
ss
ds
shr
add
fdivl
jge
xchg
jo
xchg
sub
lods
push
jmp
gs
push
fnsave
rclb
adc
or
aas
aaa
int
adc
mov
test
xchg
enter
fstpl
jne
jns
flds
lret
loope
lods
roll
rorl
mov
imul
in
fdivs
sbbl
xchg
or
mov
xor
mov
cmpsl
sub
pusha
popf
and
xchg
cltd
pop
shrl
pop
xor
xchg
sub
dec
idivl
mov
addr16
shlb
push
insl
sarl
pop
and
inc
or
xor
into
fstpt
mov
sbb
push
sti
lods
hlt
dec
popf
adc
jmp
mov
jo
lds
inc
sbb
in
push
pop
push
cmpsb
add
mov
sbb
daa
push
das
sbb
mov
mov
lock
cmp
cli
mov
push
jle
jmp
cmp
loope
adc
inc
mov
mov
jb
push
inc
and
mov
xor
and
imul
imul
sahf
add
dec
ds
push
sbb
loop
clc
lock
pop
add
cmpsl
pop
jecxz
xchg
stos
stc
inc
inc
push
sub
cmp
and
cmpsl
push
outsl
sub
out
test
and
lret
call
fdivs
fwait
fwait
cmpsl
test
and
mov
imul
xchg
popf
in
ret
pop
outsb
jmp
fwait
push
add
out
mov
fstpt
cwtl
mov
je
loop
jnp
jnp
or
mov
xchg
aad
out
or
and
nop
or
jl
inc
cltd
jge
ret
cmpxchg
mov
mov
dec
xlat
mov
rcr
mov
xor
jmp
loop
and
push
xor
es
mov
ret
sub
mov
jno
adc
test
xchg
cmp
sbbl
outsb
fcmovbe
ja
add
bound
mov
lds
mov
xchg
movsl
lret
adc
xchg
inc
push
int
adcb
int3
cmp
xor
mov
gs
xchg
mov
jmp
es
xchg
mov
xchg
sub
fidivrl
aaa
into
xor
push
push
lods
movsb
jnp
dec
mov
stos
test
aaa
iret
movsb
cmp
aaa
loop
imul
xchg
insb
jb
pushf
scas
pop
sub
out
in
sarl
xchg
outsl
imul
pop
imul
jne
pop
add
push
out
or
push
xchg
add
rcr
add
mov
std
mov
cltd
push
inc
or
cli
aaa
jle
mov
not
push
in
aaa
mov
cli
jno
xchg
sub
aam
imul
pop
cmp
rorl
jle
scas
and
push
push
in
jbe
jae
test
dec
adc
loop
repnz
push
insb
adc
aam
fcomps
das
jnp
jbe
icebp
cmc
jmp
sar
mov
aam
mov
ljmp
repnz
push
lahf
push
lea
cmpsl
cmpsl
in
rcrl
sbb
jg
push
mov
mov
cmp
and
lds
lcall
popa
jmp
jbe
test
gs
mov
dec
push
mov
aas
dec
lea
jp
pop
and
xlat
imul
mov
cwtl
out
xchg
push
popa
arpl
sub
fucompp
adcb
int3
js
fiadds
ljmp
fidivrl
ds
mov
fstpl
les
pop
cmp
pusha
idivl
dec
xchg
cld
add
cltd
fnstsw
leave
addr16
in
movsl
iret
mov
fsubrs
lcall
sub
pop
scas
je
add
pusha
xchg
xor
jne
mov
fcmovbe
inc
push
pop
mov
or
mov
fistl
inc
fistl
push
lods
push
add
xor
stos
fs
cltd
inc
dec
pop
fnsave
icebp
iret
out
cwtl
out
repnz
aas
push
cmp
mov
xchg
xchg
pushf
xchg
gs
mov
sarb
in
sbb
pop
scas
dec
test
mov
bound
leave
pusha
test
bound
scas
inc
mov
cmpsl
xor
sti
xor
out
sub
fistl
inc
pop
sub
push
jno
in
negl
leave
or
dec
nop
fwait
std
sbb
dec
push
daa
and
in
pop
push
lock
insl
xchg
mov
out
mov
cltd
aam
in
mov
stos
and
sub
mov
or
notl
cmpsl
add
and
jno
jl
pop
mov
xchg
xorps
and
pop
lods
or
inc
cmp
test
adc
adc
outsb
xor
mov
cmpsb
call
push
fisttpll
jo
xchg
bound
mov
shl
xchg
andb
or
pop
mov
test
or
add
leavew
fcmove
out
ljmp
or
xchg
xchg
add
cmp
test
fsincos
enter
mov
jo
in
insb
pushf
pushl
add
mov
adc
shrl
jle
pop
int
mov
cli
xchg
popa
dec
inc
sbb
sub
add
mov
test
fistpl
aam
ds
xchg
fucomi
lret
stc
cmp
mov
pop
aad
jb
xchg
pop
xchg
mov
jmp
loop
ljmp
inc
push
inc
dec
movsb
add
jl
adc
enter
iret
in
mov
push
and
into
mov
js
mov
sahf
icebp
xchg
inc
fs
adc
mov
arpl
mov
mov
in
inc
pop
adc
cwtl
pop
lods
repnz
dec
sti
mov
aas
and
pop
push
pop
xchg
mov
pop
hlt
xchg
jnp
ret
addr16
call
orb
movsb
aam
rcll
inc
movsb
out
jg
xchg
dec
push
jmp
scas
xor
push
fwait
mov
js
je
xor
push
jnp
addr16
cld
cwtl
mov
mov
les
cmp
cs
adc
xchg
lock
xor
das
js
aad
mov
pop
clc
nop
cli
ret
les
push
jmp
lret
jb
xchg
inc
popa
jno
lret
push
lahf
testl
sarb
add
pop
mov
or
cmp
out
cli
pop
cmpb
mov
mov
jne
and
fwait
push
in
cld
dec
and
lahf
ss
sbb
pop
push
mov
fbstp
xor
cs
jecxz
lret
std
loope
ds
fpatan
xor
jnp
mov
movsb
es
cmc
cmp
test
cmp
stos
mov
mov
iret
fcomps
push
int3
mov
push
jb
lcall
fisubs
sub
fnstsw
shrb
pop
inc
xchg
cmpsb
fnstenv
mov
popf
ja
dec
and
rorl
out
pop
jno
mov
and
mov
call
inc
mov
mov
push
sub
push
fmuls
fsubl
push
shrb
mov
push
in
mov
mov
cmc
sbb
jbe
push
push
push
inc
fstpl
xor
repz
in
ret
hlt
ljmp
push
clc
push
jbe
lea
shlb
call
pop
mov
je
xchg
test
push
add
pop
xchg
xor
push
adc
popf
add
sbbb
mov
xchg
sub
out
cmp
dec
outsl
push
and
movb
cmp
push
gs
xchg
jno
push
data16
inc
loop
ficoms
jecxz
xchg
mov
and
jb
loop
adc
inc
out
loop
shr
pop
icebp
inc
mov
pusha
je
xchg
mov
data16
fdivl
and
cmova
insb
insl
aad
repz
xchg
mov
imul
push
lods
sbb
cmp
adc
xchg
push
in
and
mov
mov
xlat
mov
out
clc
das
fwait
jge
sub
mov
inc
jp
out
pop
js
pop
cmpsb
fsubr
cmpsb
and
and
push
fcmovu
testb
ja
adc
bound
cltd
cmp
jno
mov
add
sub
sahf
and
insl
shrb
repnz
inc
push
out
jmp
repnz
sub
seta
enter
pusha
mov
pop
es
cwtl
cmpsl
ds
inc
cmpsl
mov
fwait
mov
sub
stos
mov
in
ret
and
scas
rcrb
jecxz
jle
adc
dec
andb
push
jae
arpl
pop
repz
enter
mov
dec
fldlg2
test
fwait
stos
lods
jecxz
out
arpl
mov
adc
sahf
or
and
cmp
jle
adc
lahf
out
roll
frstor
mov
pop
data16
mov
imul
ficompl
out
mov
jecxz
into
xchg
add
popa
mov
lock
inc
out
push
xor
jecxz
leave
fadd
add
pop
sar
push
shl
andb
dec
outsl
push
orl
sub
jnp
sbb
lods
nop
je
cmpsl
push
cmc
and
adc
into
mov
adc
aam
sbb
dec
xabort
xor
inc
pushf
xor
jp
mov
fdivl
fcom
cmc
adcb
mov
stc
or
andb
sbb
aad
enter
pop
imul
sbb
call
dec
cmovp
cmc
data16
sub
stos
jnp
pop
jmp
daa
mov
mov
into
xor
rdtsc
test
bound
fbstp
in
xchg
cmp
std
or
aad
pop
lods
inc
xchg
insb
in
xchg
mov
cmc
mov
mov
int3
pop
cmp
lds
shlb
dec
lods
ds
push
push
xchg
stc
push
jne
sbb
sub
sub
or
lds
sti
or
mov
push
mov
out
fucomi
inc
xlat
cmp
in
lds
orl
inc
or
pop
mov
lcall
mov
or
dec
lea
shll
decb
stos
mov
cwtl
nop
push
push
gs
addr16
test
inc
inc
mov
add
inc
cli
int3
bound
xorl
dec
rcrl
jae,pt
rclb
sbb
lds
cmp
jo
adcb
enter
push
adc
out
mov
shrl
add
jmp
pop
scas
rol
mov
decl
ljmp
or
sub
adc
cmp
pop
roll
mov
les
push
sbb
xchg
scas
pop
cmp
push
popf
lods
lods
and
inc
insb
mov
mov
dec
loopne
mov
xchg
sub
dec
repz
hlt
aad
mov
xchg
sbb
dec
enter
jp
fidivl
xor
xchg
or
cmpsl
jle
fcoms
loopne
popa
add
mov
adcl
shrl
mov
loope
imul
jns
rclb
clc
or
fwait
test
int
jae
mov
xchg
push
int3
cltd
push
test
fldl2e
aas
dec
xor
mov
in
pusha
popa
mov
sub
push
repnz
mov
pop
xchg
fsts
xor
test
loop
pusha
es
out
jecxz
sub
mov
cmc
pusha
cmp
push
dec
loop
mov
shrb
je
orl
pop
leave
popf
cmp
fsubr
sahf
rclb
jnp
sbb
mov
test
frstor
js
push
out
mov
mov
loop
sub
je
outsb
std
jmp
sub
lret
addl
adc
dec
add
iret
jl
shl
movsl
xor
inc
rcrl
xor
lret
enter
in
xor
ret
or
cltd
xlat
outsb
lret
xchg
or
test
es
xor
lods
inc
pop
cltd
test
pusha
dec
mov
clc
or
add
int3
in
dec
pop
out
xlat
fwait
out
xchg
xor
hlt
aas
sarb
ret
inc
xchg
push
jae
insb
movsl
jno
fldcw
out
xchg
rorb
nop
fldenv
mov
inc
mov
xchg
test
insb
xchg
fisttps
xchg
movb
or
addr16
fcoms
insb
or
add
pop
fbld
pusha
cmp
data16
add
jecxz
out
roll
sbb
repnz
fs
xchg
ret
mov
in
push
inc
cmp
insb
or
sbb
pop
dec
jno
jle
lds
pop
push
insb
mov
fisttps
loopne
pop
ds
mov
cltd
call
test
push
test
xor
scas
out
mov
test
mov
and
mov
popf
mov
pop
sahf
mov
cmp
into
fwait
cwtl
sub
push
ds
callw
loopne
or
and
icebp
es
push
or
add
int3
push
xor
bound
neg
push
pop
cmpb
push
sub
push
sti
pop
shrb
ret
insb
ret
mov
repz
mov
lods
add
insb
adc
and
pusha
icebp
andb
or
push
cmp
fs
pushl
pop
data16
lea
ljmp
hlt
mov
mov
jge
ss
or
ds
pop
xor
out
mov
pop
das
fiaddl
add
cltd
repnz
test
inc
xchg
mov
gs
mov
shrb
fadds
xor
pop
xor
sbb
xor
mov
jnp
jae
testb
lods
xchg
fmul
jl
dec
js
and
jmp
jns
ljmp
pop
xor
inc
fisubrs
faddl
sahf
or
xchg
pushf
jo
mov
repnz
adc
cwtl
and
ret
adc
and
mov
mov
cmp
push
xchg
and
xchg
out
test
lea
sti
pop
mov
shrl
push
into
lods
push
inc
popa
out
fisubrl
aam
xchg
dec
popa
insl
je
hlt
xchg
sti
add
xchg
sbb
xchg
add
leave
inc
cmp
dec
cli
rcl
notl
sbb
push
rcr
out
cmpsl
cli
out
mov
adc
imul
mov
xchg
sarl
sbb
lock
clc
push
popf
sub
and
push
leave
pusha
je
dec
mov
call
cmp
aas
push
xor
aaa
into
sub
dec
dec
sbb
mov
mov
inc
scas
pop
mov
shlb
cmp
cltd
sub
sub
scas
mov
dec
lcall
ljmp
and
scas
pop
popf
lahf
notl
jmp
dec
sbb
mov
inc
and
adc
xchg
inc
js
or
cmp
jp
sarl
cmp
jne
mov
pusha
mov
fmull
out
jae
add
mov
cli
push
cmc
jl
lret
lods
adc
dec
loop
inc
dec
xor
xor
xchg
mov
mov
iret
negb
aad
data16
or
cmp
les
enter
cltd
or
rolb
sub
inc
jecxz
sbbb
dec
sub
iret
pusha
fstl
jl
add
sbb
mov
mov
je
xchg
xor
out
pop
mov
cmpsb
aaa
test
mov
inc
fdivr
pop
in
xchg
fisubs
mov
in
jp
testl
cmp
scas
out
stos
adc
inc
int3
imul
std
movsl
push
subb
sti
popf
nop
sbb
mov
jb
cmp
xchg
frstor
xor
mov
js
inc
cltd
inc
cltd
ret
cmpb
sarl
test
cs
dec
lahf
popf
pop
repz
sub
aaa
pop
cmp
or
xchg
fxch
adc
sti
cli
sbb
jns
adc
js
or
inc
aam
aad
push
xchg
cs
xchg
pop
aad
ds
out
lea
out
ret
mov
fimuls
xchg
push
xchg
jge
push
popa
pop
ficomps
fs
hlt
test
pop
push
repnz
adc
push
mov
gs
ds
xlat
cmp
mov
add
sahf
nop
daa
shrb
inc
xchg
call
or
mov
xor
jae
lea
sbb
xchg
shrl
sub
push
sub
push
pusha
sti
push
xchg
insl
mov
pop
insb
add
out
ja
xor
mov
jp
sbb
sub
push
dec
xchg
lods
pusha
xchg
mov
cmc
push
cmp
das
dec
cmp
dec
jle
jbe
pop
ficomps
xor
data16
iret
jbe
xchg
add
stos
loop
or
xchg
movsl
jle
xlat
mov
cmp
mov
daa
xor
cmp
mov
stos
shll
fs
popa
sub
insl
pop
in
mov
lret
mov
pop
jb
fsubl
xchg
xor
fidivs
cs
push
xchg
in
test
std
mov
mov
roll
shrb
out
ret
bound
cmp
sbb
xchg
push
cld
jecxz
sti
cltd
sbb
jbe
pop
xchg
cmp
lods
xchg
inc
jecxz
dec
andl
dec
rcll
jb
jnp
mov
pop
pushf
pop
les
jb
push
fdivl
daa
push
lret
jg
jns
lret
lcall
idivb
ret
xchg
sub
mov
pop
sbb
sti
test
cld
xchg
dec
ret
jg
mov
adc
push
mov
lret
mov
int
lds
jl
mov
repz
mov
dec
jnp
ret
xchg
jle
adc
icebp
xchg
sbbl
jmp
sub
mov
and
nop
xchg
push
cmp
scas
cmpsb
test
jle
outsl
adc
je
mov
xchg
popa
and
into
lock
dec
xlat
mov
loope
pusha
popf
mov
dec
fcoml
dec
shll
mov
repz
pop
add
mov
add
js
push
pop
enter
dec
and
pop
push
inc
adc
data16
repnz
lds
ja
jnp
inc
and
pop
mov
sub
xchg
dec
pop
fcmovnb
adc
mov
mov
push
into
cmp
je
mov
cld
add
xchg
lret
xor
xchg
dec
leave
and
fs
lods
inc
mulb
insb
lret
sahf
cmp
adc
leave
sbb
inc
sub
std
jl
xor
add
jg
sahf
in
cmpxchg
mov
jg
add
sbb
lcall
dec
call
popa
xor
dec
sahf
rcll
ja
jnp
test
dec
mov
pop
and
xchg
in
xor
pusha
jmp
ds
mov
std
outsb
enter
cltd
int3
pop
lds
xor
mov
pop
gs
jecxz
push
movsl
fstps
pop
mov
cmp
not
add
ljmp
movsl
test
cmovle
stos
fildll
push
daa
aam
insl
sti
lods
mov
notb
jnp
sbb
pop
sarl
test
in
sub
cmpsl
sahf
js
inc
enter
fnstenv
icebp
xchg
jae
mov
push
xchg
popa
test
inc
sub
jl
pop
adc
sti
or
xor
bound
and
sti
mov
not
aam
js
stc
sub
ds
fnclex
add
cmp
jo
push
inc
sub
mov
aas
in
in
dec
adc
lret
dec
sbb
lds
in
xorb
push
int
add
push
insl
add
out
int
sub
ss
dec
and
clc
mov
loope
sub
aam
lods
mov
sub
cmp
adc
push
jae
xchg
movsl
add
push
and
and
push
repz
cli
shrl
mov
or
adc
sub
xlat
adc
int
cmp
sub
icebp
xchg
add
ss
and
sub
nop
pusha
in
sub
or
fdivrl
mov
mov
leave
mov
mov
cld
xchg
and
lret
frstor
sbb
jle
jo
xlat
insb
jecxz
cmp
xor
in
int3
jnp
subl
popf
jl
cmpsb
inc
stos
inc
inc
fbld
add
jbe
mov
or
daa
pop
cmovg
aad
or
push
jno
iret
je
repnz
mov
movsl
repz
push
nop
test
out
outsl
inc
cmpsl
pop
push
dec
inc
dec
mov
pop
sahf
sbb
sub
insl
ret
add
pop
dec
cltd
mov
mov
cmp
pop
mov
pop
push
xchg
or
jne
inc
sub
ret
lock
push
push
loopne
fdivrs
sub
scas
sbb
ss
clc
lea
adc
push
ja
lods
aas
aaa
xchg
xor
fldl
mov
inc
sahf
or
mov
lret
cld
and
lss
movsb
cmp
jecxz
pop
shlb
push
imul
dec
icebp
movsl
sub
pop
js
mov
or
xor
or
cmp
xchg
stos
bound
scas
push
test
inc
mov
out
shlb
shr
inc
pop
lds
out
fwait
jo
xor
jge,pt
out
mov
mov
sub
mov
adc
mov
rorb
mov
inc
sub
loopne
movsl
mov
xor
inc
xchg
sbb
movsb
iret
subl
xor
mov
int3
flds
stos
or
icebp
push
mov
sbb
sub
movsb
ds
in
jns
add
push
jmp
mov
pop
out
out
int
push
js
fucomip
shll
add
push
inc
cmpsl
or
and
das
cmpsl
lds
pushf
xor
pop
shrb
xlat
mov
sbb
lcall
jno
pop
lock
xchg
dec
lea
or
in
xchg
sub
mov
notl
aas
rcrl
pop
add
jle
cmc
or
add
push
adc
rcl
cmp
adc
mov
push
mov
subl
xor
and
flds
cmp
int3
mov
movsl
push
pop
hlt
nop
mov
dec
nop
loope
push
nop
cmp
pop
jge
shrb
inc
pop
adc
and
fidivs
mov
rol
add
xor
lahf
sbb
stos
add
cmp
pop
repz
scas
fsubr
test
rcrb
inc
adc
into
dec
push
pop
jle
dec
push
in
jno
outsl
negb
xchg
jae
leave
sbb
in
jmp
scas
fdivr
lock
jae
mov
add
sbb
dec
jp
cmp
insb
int
mov
in
xchg
cmpb
sub
mov
cmpxchg
sahf
xchg
cmp
pop
sub
and
push
shr
pop
xchg
in
jb
enter
xor
pop
sbb
push
scas
imul
les
xchg
mov
pop
or
es
loope
icebp
fidivrl
bound
push
xchg
and
sbb
test
inc
xchg
stos
fsubrs
fwait
push
test
cmp
pop
jmp
mov
jb
insl
jmp
jecxz
arpl
mov
repnz
aaa
mov
jno
xor
push
or
mov
push
ljmp
call
int3
insb
sub
cmpsl
sbb
sbb
div
aad
ds
sub
mov
test
push
xor
xchg
lret
xlat
stos
js
std
and
sbb
test
out
in
iret
fistl
add
mov
or
aam
cmp
ljmp
pop
int3
fs
and
adc
lds
fnstsw
lret
adc
jp
and
outsb
add
ret
pushf
shll
sub
push
das
dec
loopne
dec
add
js
inc
gs
pushf
pop
test
pusha
or
xchg
xchg
mov
mov
xchg
data16
int3
mov
jns
add
push
repnz
pop
icebp
in
repnz
sbb
mov
xor
daa
inc
add
loope
aad
xchg
mov
xor
xor
xchg
mov
lods
jle
in
popf
lods
mov
stos
pushf
xor
je
adc
hlt
mov
imulb
push
pop
mov
fdivrl
mov
int3
xchg
push
fsubrs
loop
cmp
fcoms
sahf
mov
mov
add
out
ficomps
fisttps
cs
add
insb
lahf
js
and
mov
andw
fnsave
pop
xlat
push
filds
movsb
pop
cmp
ds
mov
and
mov
aam
in
jae
jnp
lods
sub
lret
sub
fs
shlb
imul
int3
lea
cmpsl
sbb
cmpsl
cmp
mov
mov
and
dec
test
ja
bound
cmpsl
mov
mov
push
sbb
test
sub
test
xchg
jl
add
push
out
jl
je
mov
out
sub
xchg
jmp
aaa
add
or
adc
sarl
testb
jbe
stos
cmpsl
pushf
lea
out
xor
mov
xor
push
stos
dec
paddw
push
lods
movsl
int
into
outsb
mov
push
pop
mov
lret
iret
mov
ret
int
jp
dec
loopne
jecxz
dec
and
addr16
sub
mov
int3
aas
shlb
inc
push
jle
sbbl
xchg
sub
and
sbb
push
sub
std
rcr
inc
data16
rcrl
jp
ss
pop
push
out
inc
or
and
push
and
fbld
sbb
jge
fisttps
mov
xchg
divb
cmp
les
add
test
mov
adc
add
mov
js
jl
or
leave
cmp
jb
mov
jge
subl
inc
adc
imul
and
sub
cltd
xchg
stos
add
imul
add
sbb
push
push
pop
cmp
pop
scas
mov
and
hlt
mov
mov
xchg
or
dec
and
or
test
dec
sub
pop
fwait
and
mov
mov
les
sub
leave
lock
inc
repz
jno
lea
jns
add
test
repnz
jne
int
testl
movsb
jmp
pushf
mull
pminub
mov
and
flds
sti
push
mov
nop
std
xor
cs
pop
out
dec
dec
in
rcrl
mov
ja
push
outsb
lock
inc
or
push
and
push
and
mov
jno
add
xchg
sbb
mov
mov
gs
mov
xorb
cmp
xchg
pop
daa
cmp
fdivr
stc
sub
mov
sub
test
aaa
clc
or
mulb
subb
ret
push
test
enter
xor
test
pop
call
jo
je
cmp
xor
mov
cmpsl
pop
cmpsl
xchg
cs
and
imul
out
push
mov
call
mov
imul
add
mov
rcrl
out
xchg
pop
mov
mov
fsubl
push
fists
ja
js
push
mov
add
push
rorb
lret
das
arpl
add
in
loopne
push
dec
pop
addl
push
insl
and
ljmp
mov
shlb
rcl
jae
add
scas
mov
mov
xchg
add
mov
mov
movsl
js
jg
testl
and
inc
jnp
and
in
cmp
mov
push
ds
inc
cmp
sbb
jne
aaa
jge
add
cmp
xor
stc
inc
lds
sub
mov
jns
ds
inc
sbb
call
mov
fistps
rcrb
mov
lahf
xor
pop
mov
sbb
cmp
lock
fiadds
pop
inc
mov
sbb
fwait
pop
sub
sti
ljmp
cmpxchg
notl
andb
or
je
imul
gs
pop
jl
dec
aas
xchg
sbb
test
shrl
enter
fs
stos
in
pop
ret
data16
ja
dec
cmp
mov
mov
aad
jae
cmp
pop
popa
call
lahf
ljmp
inc
es
test
mov
xor
cmp
sub
cmp
out
mov
jae
add
ja
sub
xchg
in
iret
cltd
xor
jl
jecxz
test
pop
iret
mov
stc
mov
jno
lret
lcall
cwtl
stos
scas
xlat
jo
mov
pop
jp
scas
cmp
xchg
and
mov
push
fdivrl
faddp
sbb
int3
mov
xchg
xor
sbb
jne
mov
bound
push
push
in
pop
icebp
js
outsb
repz
jno
push
and
xchg
xchg
int
and
sub
ds
xchg
jmp
add
out
mov
mov
add
fimull
sub
lea
and
dec
enter
lds
cmpsb
ja
pushl
sub
cld
fwait
jno
sub
inc
scas
in
test
popf
or
or
lcall
mov
outsb
jmp
cmpsb
adc
shr
jbe
lret
cld
jno
mov
xor
aad
jle
mov
or
fldcw
or
adc
lret
pop
stos
or
divl
mov
test
rorb
adc
repz
stos
out
test
adc
push
lret
xor
hlt
decb
das
pushf
js
mov
jge
mov
in
ja
add
jle
cltd
cmpsl
scas
and
cmpb
lahf
adc
xchg
test
jmp
std
or
cmp
or
push
adc
pop
mov
das
popa
mov
or
cld
les
not
stc
sub
xchg
rcl
mov
pop
repz
pop
mov
out
adc
xchg
jb
pop
cmc
fsts
sbbl
pop
dec
scas
inc
cmpb
mov
rorb
scas
inc
and
daa
mov
jle
enter
scas
inc
xchg
cmp
inc
fdivrs
bound
mov
mov
scas
inc
pop
insb
daa
mov
push
mov
and
in
inc
out
mov
les
lcall
jmp
jb
ror
mov
mov
dec
lods
mov
fidivrl
pop
mov
xor
sbb
push
scas
cmp
push
das
iret
clc
cwtl
or
lret
nop
arpl
push
xchg
sbb
sar
push
lea
les
sahf
daa
mov
mov
int3
xor
nop
push
jo
stc
xchg
sbb
leave
sbb
mov
bound
xchg
xchg
push
add
insb
popa
mov
out
inc
pop
loop
add
or
push
fisttpll
iret
or
aad
add
or
inc
sti
lret
jg
lea
xor
inc
push
inc
mov
sti
or
adc
pusha
pop
popf
cwtl
fstpt
inc
xchg
jnp
inc
lcall
cs
rorl
int
dec
inc
lods
inc
add
call
xorb
cmpsb
sub
xor
les
mov
movsb
sub
into
push
dec
les
inc
pop
and
loope
imul
je
mov
mov
push
testb
mov
xchg
inc
int3
pop
add
out
je
aaa
mov
jge
scas
jl
ret
push
jmp
cmp
jo
rolb
in
test
fwait
xchg
popa
fsubs
inc
or
mov
sub
dec
pop
inc
lds
xor
xchg
pop
cmp
mulb
add
daa
mov
int3
testb
stc
cmp
cs
jge
or
push
xor
push
mov
fnstenv
scas
addl
loopne
incb
mov
lahf
push
push
jne
cmp
popa
dec
pop
and
imul
rcrb
cwtl
std
rorb
rcrl
pop
adc
pop
add
imul
or
lahf
es
lods
jge
push
ss
out
fwait
cmp
outsb
jnp
push
push
xor
outsl
popl
out
xor
in
daa
xchg
sub
jnp
push
lods
mov
shr
dec
sbb
ds
out
or
cld
loope
mov
insb
jg
xlat
test
call
inc
leave
adc
int3
mov
lds
pop
cltd
add
push
mov
mov
testl
xchg
jb
je
icebp
sub
cltd
js
lea
sbb
lret
or
call
cs
xor
push
arpl
loopne
push
outsb
or
and
pop
adc
mov
add
cmpsb
push
mov
clc
arpl
loop
mov
lock
shr
cmp
xchg
pop
mov
mov
mov
or
das
shlb
xlat
xchg
push
iret
outsb
in
lret
pop
jbe
mov
stos
cmpsb
pop
mov
das
dec
rcrl
inc
lcall
sub
sahf
pop
addb
mov
add
xor
push
ds
cmp
cmp
lds
imul
xchg
dec
add
insb
mov
pop
xlat
mov
xchg
popa
cmpsb
in
fiaddl
ljmp
dec
dec
pop
mov
pop
in
pop
sub
pop
outsb
dec
fstpl
xchg
sub
xor
or
push
xchg
ss
adc
lods
xor
inc
and
lcall
xor
xchg
mov
mov
inc
jns
in
daa
out
hlt
xlat
call
push
dec
jnp
popf
dec
mov
or
iret
jbe
fsubl
add
es
pop
xchg
push
pop
jns
andl
or
lcall
mov
pop
cs
jno
shr
or
inc
subb
gs
stos
cmp
rclb
addr16
xlat
rolb
dec
sub
jnp
push
inc
adc
jg
stos
insl
sub
xchg
imul
mov
add
aas
in
sub
push
sahf
insb
fistps
mov
jp
lret
push
mov
scas
mov
test
mull
sbb
icebp
call
or
pop
inc
test
rclb
outsl
cmpsl
scas
and
subb
clc
popa
or
pop
std
hlt
xchg
sub
lea
or
hlt
mov
into
xchg
clc
sti
std
xchg
inc
rcll
rolb
leave
jecxz
out
xchg
mov
gs
addr16
cmp
test
lods
in
mov
mov
xor
imulb
mov
addr16
inc
shll
cmp
jbe
xor
cmp
xor
add
dec
aaa
or
mov
xchg
fwait
mov
and
or
daa
pop
inc
rorl
ret
dec
inc
pop
jl
into
mov
sbb
fs
pop
ret
push
mov
shrb
cltd
test
and
in
push
sarb
fisttps
out
bound
insb
jle
int
fnstsw
or
dec
cmc
enter
repz
daa
push
adc
enter
dec
cmp
movsb
mov
cmpsl
out
push
push
add
and
sub
shlb
sbb
dec
cs
inc
sbb
aas
in
leave
pop
js
adc
aaa
xchg
sub
mov
dec
mov
adc
pop
inc
jmp
cmp
fldcw
lret
aaa
or
xor
xchg
pop
pop
adc
js
adc
sti
xchg
mov
lds
cli
repnz
in
imul
push
adc
push
mov
lods
into
pop
add
cmp
adc
adc
mov
jge
lcall
adc
mov
call
mov
jmp
or
cs
jae
or
cmp
dec
daa
fwait
imul
adcl
add
aas
xchg
pop
mov
pop
adcl
xor
mov
or
aas
stos
push
push
insb
or
hlt
mov
mov
dec
jl
inc
fcmovbe
push
sbb
push
clc
bound
insb
push
add
les
leave
sub
insl
pop
daa
xlat
jmp
mov
mov
xchg
jl
jo
jge
aam
jmp
pushf
lret
fnstsw
push
ret
and
xchg
movb
pop
sub
addl
xchg
fiaddl
imul
test
jg
insb
dec
cld
dec
aaa
add
into
push
jae
inc
movsl
inc
popa
or
jns
mov
jae
and
pop
adc
cmp
jle
cmp
adc
and
in
mov
pop
push
bound
std
pop
aam
vpmacsdd
dec
fidivrs
mov
bound
test
daa
insb
adc
xor
add
test
add
pop
jno
pop
fwait
lret
xchg
mov
les
into
gs
mov
jno
mov
out
out
push
mov
pop
xchg
mov
xor
sarb
pop
imul
adc
and
jno
push
mov
test
lret
lods
aas
sbb
xor
inc
sahf
inc
sbb
xchg
jne
dec
mov
adc
test
into
jns
aas
dec
lahf
xor
cmpsb
inc
dec
popa
rclb
xchg
popa
cmp
das
push
xor
sub
xchg
roll
jg
cmpsb
jge
push
adc
int
adc
inc
or
cmpsb
dec
and
mov
out
inc
int3
sub
cmp
test
fs
xor
ret
push
rcrb
push
xchg
jp
int3
test
nop
push
ljmp
mov
fsts
mov
out
leave
add
jae
sbb
mov
pop
and
cwtl
pop
lock
test
ret
jno
sbb
mov
lcall
lcall
mov
mov
xor
sahf
xor
subl
int
cmpsb
inc
out
xchg
popa
adc
sbb
jl
inc
and
aas
mov
and
mov
mov
mov
ror
les
mov
scas
insb
push
pop
in
pop
ret
sbb
stos
scas
pop
faddl
mov
fisubrs
and
push
mov
mov
scas
xor
dec
hlt
lret
inc
mov
cmpsb
pop
and
pop
lods
ror
ret
cmp
xor
jnp
xchg
fimull
add
mov
jne
addb
xlat
sti
pop
mov
roll
cwtl
add
imul
imul
test
push
push
push
test
icebp
xor
pushf
cmpsl
xor
stos
inc
iret
test
data16
lock
jns
lcall
stos
mov
mov
out
sub
or
out
fidivrs
jle
push
pop
push
clc
dec
mov
out
leave
filds
add
mov
cmp
hlt
in
lcall
push
and
xorl
inc
jp
pop
mov
lahf
push
aas
dec
adc
pop
dec
jecxz
and
iret
dec
sbb
into
and
push
pop
xchg
sbb
dec
pop
push
jge
and
mov
mov
pop
jl
dec
add
xlat
cmp
sbbl
pop
insb
icebp
sahf
sub
push
sbb
pop
imul
mov
daa
mov
sub
lods
bound
pop
cmpsb
add
pop
test
rcrb
adc
stos
inc
mov
push
push
jmp
jns
out
cmp
sbb
jb
mov
roll
or
push
es
movsl
jl
sahf
sub
shll
mov
aas
fidivs
sbb
xor
cmc
push
addr16
aaa
mov
push
jne
loope
push
xchg
add
xchg
test
mov
ds
lock
pop
mov
stos
xchg
sub
sub
push
xchg
mov
bound
cmpsl
adc
sub
add
jo
mov
dec
jg
inc
cmp
pop
neg
mov
jb
sarb
xor
dec
mov
jne
sbb
mov
inc
push
pop
inc
mov
sbb
inc
imul
addr16
xchg
inc
lods
cmpsl
out
adcl
mov
std
aam
sbb
mov
ss
cmpsb
sub
fsubrs
xchg
ja
es
fistps
xchg
push
dec
nop
popa
and
das
mov
adc
mov
xchg
stc
mov
inc
add
xchg
adc
or
imul
xchg
xlat
cmp
or
mov
int3
aaa
dec
mov
jmp
and
aad
shll
add
orb
or
je
cmpsl
jns
sbb
cmp
xchg
ljmp
sti
fimull
imul
fdivrl
out
sti
dec
imul
into
cwtl
test
outsb
fs
test
cld
xchg
pop
xor
xlat
shrl
mov
sub
mov
fldl2t
aam
cmp
addb
fnstcw
aaa
cltd
and
inc
adc
lret
xor
and
push
ljmp
out
sti
test
adc
adc
push
das
push
mov
sub
pop
cs
jns
mov
lds
cmp
add
fstps
push
test
or
in
je
sbb
outsl
mov
xor
pop
jo
lds
setge
xor
mov
cmp
push
add
daa
xor
decb
mov
adc
sbb
in
test
cmp
xor
mov
inc
dec
and
iret
fucomp
mov
daa
mov
aam
mov
mov
add
add
push
mov
jge
pop
mov
ss
add
lock
fdivl
cmp
add
pop
fwait
cs
mov
sub
sbb
daa
inc
add
sub
shlb
loopne
xchg
scas
inc
push
xchg
inc
lock
inc
fisubl
cs
xchg
add
and
xor
lret
xlat
xor
xchg
push
shl
lahf
notl
shll
push
incl
xchg
test
repz
pop
push
jecxz
inc
cmp
and
mov
mov
call
test
sbb
cld
mov
out
lahf
cmp
or
nop
in
loop,pn
addr16
inc
xor
inc
bound
cs
iret
insb
cmp
or
inc
jmp
mov
adc
pop
ja
outsb
mov
adc
mov
mov
jge
sbbl
xor
jl
sub
gs
or
dec
mov
sub
pop
add
pop
cmpl
and
aad
test
sub
frstor
mov
push
test
aad
in
and
cltd
cwtl
in
in
enter
push
mov
test
push
sub
not
lret
mov
out
inc
nop
jp
mov
clc
sti
jnp
ficompl
push
int3
scas
test
addr16
std
popf
cwtl
movsl
cmp
in
pushf
test
sahf
mov
jb
cmp
int3
sbbb
sar
into
dec
test
bound
jecxz
adc
jp
in
sahf
mov
push
inc
ljmp
sbb
cwtl
aaa
inc
jnp
cld
jmp
ror
and
lods
into
cmpsl
add
daa
inc
mov
int
bound
rcrl
mov
int
inc
les
aaa
je
shll
xchg
mov
inc
fwait
add
or
cmp
push
inc
clc
mov
sbb
arpl
aam
repz
jnp
cmpsb
cmp
inc
call
js
cmpsb
jg
jbe
das
gs
pushf
cmpsb
xchg
add
cld
mov
cmpsb
sbbl
dec
xor
xchg
pop
inc
loop
dec
xchg
outsb
movsl
js
ss
and
hlt
sub
out
dec
lahf
loopne
addr16
fidivs
pop
popf
or
je
popa
or
cmp
fs
mov
cmp
add
ss
inc
or
mov
sbb
jo
ret
sbb
mov
aam
sbb
ss
imul
pop
cmp
sub
in
movsl
cmp
and
ret
popf
and
lods
xchg
inc
and
push
into
hlt
clc
bnd
jnp,pt
mov
loope
or
adc
je
lret
cmp
jge
dec
add
divl
lahf
popfw
push
xchg
pop
popf
sbb
lret
push
arpl
out
jg
into
testl
add
testb
or
loope
repz
add
mov
jno
loop
jmp
and
sbb
je
shrl
xchg
pop
dec
jl
mov
cmpl
push
sbb
je
imul
sub
in
repz
sar
add
stc
sub
push
retw
loop
repnz
ljmp
dec
and
push
push
jne
lahf
negl
jge
leave
push
lods
out
fisubs
and
leave
push
gs
push
mov
sbb
std
cs
repnz
push
sub
mov
sbb
idivb
dec
xchg
repz
aam
movsl
jge
xchg
cmpsl
sub
shll
cli
push
adc
xor
or
mov
stos
or
dec
add
mov
mov
int3
pop
shl
insl
fldenv
mov
test
mov
enter
or
cmc
mov
push
and
sub
scas
mov
loope
jb
divb
adc
cltd
icebp
inc
jnp
loope
xor
sahf
gs
mov
mov
lods
dec
sahf
push
sub
imul
or
jecxz
add
sbb
fnsave
cld
jmp
scas
xchg
adc
adc
in
xor
cmp
aam
lret
std
daa
leave
gs
adc
sbb
mov
icebp
out
jo
rcpps
int
clc
shlb
test
and
test
cmp
imul
sub
sub
xchg
dec
inc
mov
cmp
xor
xor
stos
mov
aaa
mov
xchg
xor
and
mov
mov
into
sub
fisubrs
data16
in
mov
lret
jge
ror
ret
jb
je
push
scas
xor
jmp
add
div
dec
loope
shlb
daa
cwtl
xor
push
jno
popa
inc
inc
xchg
cmpsb
lock
dec
sbb
sub
aam
int
mov
addr16
pop
cwtl
int
adc
stos
pop
dec
sbb
dec
mov
das
shr
pop
mov
xor
cltd
cltd
jp
fnstenv
fwait
and
mov
xchg
mov
outsb
imul
pop
jge
shlb
xor
xchg
outsb
ret
mov
push
or
sbb
enter
jbe
xchg
dec
test
dec
pop
loope
mov
addl
cli
outsl
mov
jnp
test
aad
or
mov
pop
call
js
ljmp
aad
sbb
xlat
ja
dec
or
pop
push
inc
out
fidivrl
mov
clc
and
mov
bound
iret
jmp
stos
cmp
dec
rcll
push
aas
shrl
cmp
out
aam
outsb
outsb
xchg
xor
mov
out
aad
scas
cmc
jmp
and
pusha
mov
sbb
lods
mov
adc
jp
dec
or
inc
je
xor
pop
mov
adc
dec
dec
mov
jnp
test
adc
push
in
orl
data16
mov
fidivrl
cmp
jb
mov
push
hlt
mov
adcb
sti
test
pop
adc
adc
jb
mov
cmpsb
or
lods
nop
imull
int
cmp
mov
push
add
xor
xor
dec
pop
push
popf
add
jnp
or
das
icebp
repnz
pop
call
andb
mov
jno
and
push
shlb
inc
js
mov
je
mov
xchg
cmp
pop
aam
leave
ds
ja
test
stos
repz
mov
mov
hlt
sbb
cwtl
and
push
pop
or
repz
cltd
roll
test
adc
aam
inc
dec
xchg
inc
sbbl
xor
enter
jmp
mov
scas
inc
in
pop
ljmp
mov
in
test
xchg
fs
cltd
or
popa
xor
pop
fimuls
fstl
mov
sti
xlat
adcl
inc
rolb
lret
andl
or
and
aam
lret
aas
clc
bound
mov
inc
or
xchg
push
push
adc
das
inc
add
andl
enter
shrl
lea
int3
jnp
mov
rcr
xchg
sub
mov
mov
cmpsb
sbb
jne
inc
push
mov
sub
sub
movsb
xor
int3
sbb
adc
clc
dec
ss
jns
cwtl
push
xchg
sub
cmpsb
cmp
cmpsb
inc
test
pop
xchg
sbb
sbb
jb
stos
out
sub
ja
cmp
mov
je
fidivl
dec
xor
or
mov
xchg
mov
pop
ljmp
add
jo
clc
push
push
pop
mov
cltd
test
loope
test
nop
out
lods
outsb
bound
inc
mov
stos
mov
jo
testl
jno
roll
pop
orl
in
inc
xor
push
jl
jbe
inc
test
out
int
jg
dec
mov
hlt
or
mov
gs
cmpsl
jg
sub
pop
fwait
pop
dec
rol
adc
leave
pop
adc
sub
dec
jns
into
and
inc
jo
dec
cmpsl
stc
dec
mov
out
jno
sbb
cmp
pop
daa
mov
gs
pop
sbb
icebp
xchg
inc
adc
movsl
pop
jp
add
jne
cwtl
dec
jb
aad
xchg
sub
lea
mov
push
add
cld
and
stc
xor
mov
mov
stos
popa
test
inc
or
cli
push
and
sub
fninit
xchg
test
inc
fiadds
fisttpll
add
aad
mov
in
xorl
or
gs
sbb
cltd
push
out
data16
cmp
call
mov
lods
outsb
sbb
mov
adc
test
and
mov
cmpsb
push
jle
sbb
imul
movsl
movsl
das
aaa
call
mov
leave
scas
mov
push
sub
mov
adcl
mov
sbb
pop
insl
sbb
subb
push
push
test
movsb
outsb
xlat
sub
sahf
jae
lcall
mov
push
idivb
bound
mov
decb
das
mov
inc
ret
mov
ja
rclb
and
out
add
cmp
bound
addr16
clc
sub
add
and
mov
xor
rep
fcompl
push
ljmp
ret
sahf
xor
push
xchg
mov
and
push
loopne
rcrb
inc
sub
xor
mov
ljmp
xor
sti
pop
adc
hlt
insb
and
inc
push
inc
fadds
push
fdivs
dec
bnd
jl
sbb
sbb
in
in
xlat
sahf
std
ret
test
add
cld
adc
imul
lahf
ss
fs
fstps
lret
insl
dec
dec
loopne
mov
add
inc
in
js
push
lods
jle
xchg
mov
or
and
pop
andb
and
and
popa
push
adc
int
jbe
dec
das
xor
xchg
in
shll
add
dec
sub
dec
fcoms
sub
pushl
or
out
mov
pop
jmp
mov
cwtl
shll
cmp
jbe
add
out
inc
pop
lods
mov
push
insb
inc
es
insl
push
jecxz
mov
inc
xchg
inc
stos
es
imul
iret
push
push
imul
jmp
and
out
mov
stos
in
int
pop
cmc
ret
and
mov
nop
fs
in
int3
nop
cmp
add
dec
in
pcmpeqw
pop
imul
fistpll
shr
std
xchg
fnsetpm(287
testl
jge
icebp
mov
nop
or
rcrl
fcomps
jp
out
jp
loope
mov
cwtl
add
std
stc
mov
xor
jne
push
call
sarl
ljmp
jb
push
lods
data16
push
cmc
stc
es
test
icebp
cli
lea
jl
aad
jnp
push
mov
mov
fs
add
mov
jbe
out
out
add
lods
add
jne
je
mov
mov
loopne
cmp
shl
cmpsb
cmp
push
jp
inc
lods
jb
sbb
data16
jecxz
repz
sti
stc
jmp
mov
stc
js
xlat
mov
sbb
pusha
idivl
fnstcw
pop
iret
sbb
in
mov
mov
cmp
or
jecxz
xchg
cli
outsl
push
sub
add
call
pop
repnz
std
xchg
or
int3
arpl
outsl
daa
sbb
and
cmpsb
jmp
jecxz
enter
add
cmp
insb
add
insl
scas
lret
mov
mov
pop
fnstenv
push
shrl
jl
inc
mov
daa
mov
add
inc
fisttpll
adc
stos
fucomip
jg
int
insl
pushl
push
popf
addr16
jbe
xchg
clc
enter
lods
sbb
dec
out
cmp
push
insl
add
mov
mov
sbb
mov
jns
aas
rcrb
pop
hlt
sub
shrl
pop
daa
mov
and
sbbl
cmp
mov
cld
or
rclb
fbstp
ret
shll
add
daa
es
xor
gs
add
mov
and
mov
stos
inc
aas
add
xorl
mov
sahf
xor
xor
fwait
xor
loopne
in
cmp
out
insl
fwait
mov
adc
jmp
pop
sbb
cmp
mov
les
ja
and
gs
adc
setge
or
xor
gs
dec
sbb
fnstenv
out
imul
xor
scas
mov
fidivs
repnz
out
and
std
xchg
inc
dec
out
xchg
cmpsb
pushf
or
clc
out
sub
pop
sbb
inc
dec
loopne
imul
mov
in
call
cltd
xor
sub
insb
dec
loop
cmpsl
ds
loopne
sahf
adc
cmp
test
mov
fisubrl
dec
xor
mov
fidivl
test
xchg
mov
sbb
add
pop
sub
mov
test
leave
fwait
xor
cli
ret
and
push
push
or
movsl
cmpsl
xchg
sub
xor
repz
leave
and
es
xchg
xchg
inc
fcmovnb
mov
fs
sbb
je
xor
sub
mov
gs
or
add
in
xorl
or
push
pop
and
mov
lds
xlat
sub
jno
inc
dec
cmpsb
cmp
xchg
xchg
xor
mov
inc
call
xor
sahf
arpl
sti
xchg
icebp
push
pop
scas
pop
xchg
mov
adc
movsl
sub
pop
jge
imul
sub
shll
imul
divl
insl
dec
in
xor
xchg
shll
insl
sub
lahf
cmp
jae
mov
push
jmp
insb
test
sub
arpl
xchg
ds
inc
outsl
mov
mov
xchg
fsubrs
xor
imulb
mov
mov
push
lods
inc
bound
or
xchg
xor
jl
mov
leave
mov
addr16
xchg
sub
insl
mov
outsb
add
push
mov
mov
data16
xchg
and
push
mov
pop
mov
push
push
ljmp
sub
jmp
repnz
js
push
lods
push
enter
inc
fldenv
jg
out
and
mov
test
sbbl
ja
fldenv
jl
lret
mov
xchg
sti
outsl
ljmp
adc
cmp
insl
push
mov
mov
mov
shlb
add
push
rclb
mov
ja
push
xor
mov
xsha1
cmpsb
dec
mov
out
xchg
inc
jp
jns
lods
inc
dec
scas
or
adc
orb
and
jmp
test
dec
testb
stos
es
sbb
jns
or
dec
jecxz
xlat
adc
mov
inc
dec
sahf
push
iret
loopne
inc
adc
add
cmp
mov
and
icebp
arpl
and
lahf
ss
push
popf
xor
adc
cwtl
mov
int
inc
fsubrs
pop
pop
cmc
mov
in
sub
scas
inc
xor
loope
xchg
adc
lcall
dec
dec
loope
out
jb
lods
mov
fstpt
cmp
imul
scas
subb
jl
jns
push
sahf
insl
int3
sub
mov
fisubs
pop
jbe
mov
mov
nop
or
sub
pop
shr
idivb
xchg
lret
cld
gs
xchg
sbb
fs
or
cltd
add
aaa
mov
inc
fldl
cmpsb
lods
inc
aam
cmp
jns
scas
sbbl
dec
int3
arpl
inc
das
lcall
jp
stc
sbb
mov
jno
rcrl
xor
roll
je
mov
sbb
push
movsl
jo
gs
sbb
sbbl
jecxz
adc
xchg
cmp
cmpsl
push
mov
adc
lds
addr16
xchg
mov
or
imul
pop
shlb
jp
aaa
pop
out
mov
mov
data16
xchg
ss
movsl
mov
mov
sbbl
data16
sbb
add
pop
out
push
sub
or
cmpsl
nop
xchg
sub
iret
mov
std
lock
es
or
inc
push
sub
test
pop
mov
leave
out
test
pause
daa
sub
pop
hlt
dec
inc
mov
cli
xchg
cwtl
mov
mov
ljmp
aas
cmp
lods
insl
pusha
inc
pop
xchg
mov
shlb
call
xor
pop
jbe
push
jg
addb
ss
or
jno
and
iret
push
pop
sub
js
out
mov
fdivrp
mov
dec
popa
inc
pop
xchg
jo
sbb
ret
repnz
push
jno
xor
call
subb
mov
mov
inc
sub
push
insb
dec
dec
mov
mov
sarb
ja
sub
inc
fidivrl
inc
xchg
ja
dec
loopne
popf
ret
pop
lret
test
jmp
int3
and
push
ljmp
adc
pop
repnz
jnp
das
sbb
or
and
nop
and
ret
js
push
scas
add
xor
pop
aam
lea
dec
in
lods
mov
fidivl
mov
sub
adcb
dec
push
mov
cltd
je
fwait
inc
sbb
lea
xchg
sub
out
inc
mov
pop
sahf
leave
stc
mov
out
jle
rol
sbb
insb
xchg
fcmovbe
push
cmp
mov
xchg
lret
push
loop
xchg
fadds
mov
sti
das
repnz
rcl
xchg
out
lret
sbb
mov
call
cmpsb
dec
fldcw
in
inc
dec
ret
data16
fidivl
repz
leave
inc
ret
into
inc
push
add
cmp
or
mov
mov
loop
outsl
rorl
pop
lods
xor
push
jbe
mov
push
jecxz
push
es
pop
jne
push
add
cltd
xchg
or
sbb
movsb
bound
add
sbb
push
test
pop
sub
cmp
push
xchg
inc
into
xchg
add
xor
adc
dec
scas
adc
mov
out
sbb
mov
cmpsb
ret
pop
inc
mov
fistpll
shrl
pop
lock
shlb
mov
jno
test
mov
pop
cs
mov
mov
out
dec
xor
loop
xor
imul
adc
cmp
jne
mov
clc
clc
push
and
or
jnp
cld
imul
stc
xchg
cmpsb
cwtl
adc
sbb
cltd
and
lret
insl
out
enter
mov
lods
xchg
mov
imull
mov
mov
jge
pop
into
rcrl
sub
mov
lahf
xchg
push
lcall
or
imul
lds
pop
mov
push
xor
push
xchg
dec
rclb
sbb
aas
xchg
sub
mov
xchg
adc
das
enter
jle
test
mov
inc
fsts
cmp
sbb
pop
rcll
loopne
add
aam
jle
insb
xchg
mov
addr16
bound
imul
notb
push
sub
xor
ja
fdivs
sub
mov
fldt
loope
push
or
push
mov
or
imul
imul
lods
sub
in
cltd
aas
and
pop
cmp
adc
imul
dec
out
shl
out
sub
cmpsl
mov
push
push
jmp
fsubr
fwait
ret
cmp
xor
inc
pop
push
stos
push
pop
lods
gs
mov
pop
inc
mov
loop
dec
fists
jge
or
lea
lcall
push
cltd
mov
sub
inc
fadd
dec
loope
jo
paddq
add
jbe
mov
repnz
dec
lahf
imulb
daa
in
xchg
rorb
loope
pop
stos
fadds
xor
xchg
fisubrs
inc
mov
loope
pop
loopne
fs
sbb
dec
shll
cmp
xchg
xchg
cmp
sub
and
mov
fisubrl
xchg
inc
int3
in
mov
shrb
out
leave
shrb
and
call
fdivr
and
mov
adc
adc
mov
mov
fnstenv
sahf
pop
les
mov
cmpsl
lds
jp
add
arpl
pop
sarb
pop
repz
loope,pt
aas
sub
test
lock
inc
xchg
jns
cmpsb
popa
enter
lea
push
jbe
mov
bound
int3
pop
dec
pushf
ret
pop
lock
or
mov
push
mov
xchg
jmp
lcall
imul
aad
ret
pop
jb
pop
sarl
sbb
repnz
xchg
add
sub
sub
mov
fnstenv
cmc
fadd
sbb
fucom
and
sarb
or
test
sub
fucomip
test
lock
ror
loope
jno
fisubrs
fsub
rorb
mov
stc
cmpl
nop
aad
lcall
sti
arpl
jl
pop
icebp
or
jae
cmp
add
or
out
and
push
lret
stos
cmp
xchg
movlps
cltd
xchg
or
cs
jl
cltd
xchg
adc
out
mov
fistl
arpl
scas
xchg
lcall
icebp
imul
shll
in
xorl
cs
xor
js
xchg
jns
inc
xor
push
int3
jbe
cmp
pop
inc
aas
add
sbb
cs
mov
dec
sbb
scas
bound
xlat
insb
loop
mov
pop
repz
jl
lds
fidivrs
dec
in
dec
shlb
ret
push
adc
pop
cmc
or
mov
push
add
test
add
lods
fwait
dec
sarl
sbb
fwait
jg
and
cmpsl
jnp
cmp
fs
mov
fdivl
popa
xor
adc
xor
add
inc
inc
ret
fmuls
mov
adc
loope
jbe
jnp
gs
cmpsl
sub
cmp
jmp
out
fisubrl
in
lret
mov
or
scas
ljmp
ds
jl
dec
movsb
sub
xchg
jp
jo
cwtl
push
sbb
aad
jmp
pop
scas
pop
mov
sbb
fistl
xchg
dec
jecxz
js
mov
dec
mov
pop
loope
mov
pusha
call
fldcw
addr16
hlt
pop
lret
ret
xchg
int3
enter
sub
insl
xchg
test
mov
pop
mov
mov
out
rclb
fmuls
mov
sbb
in
movsl
cld
inc
int3
lret
mov
mov
and
add
sub
stos
push
popf
call
xchg
sbb
decb
ret
outsl
mov
xor
mov
adc
iret
push
jne
test
mov
dec
mov
stos
call
lahf
xchg
mov
jb
dec
andl
aaa
shll
popa
das
rorl
imul
xchg
sub
sbb
movsl
jnp
xor
loope
fsub
sub
push
sahf
push
adc
mov
or
sub
and
push
lcall
xchg
pop
and
enter
xchg
adc
sub
xlat
xor
or
mov
arpl
mov
loopne
pushf
shl
out
jns
in
pop
adc
test
jmp
fiadds
call
jle
test
repz
das
push
dec
aaa
movsl
pop
jae
jmp
inc
aaa
mov
nop
inc
out
fs
arpl
ljmp
fisubrs
xchg
ret
mov
lods
jle
pusha
cld
fs
jp
push
shlb
testl
sub
dec
loope,pn
cli
flds
pop
sub
xor
stos
pop
mov
sbb
push
leave
and
out
mov
mov
test
xor
lahf
sysenter
dec
loopne
xor
jne
cs
sub
mov
or
sbb
pop
out
hlt
sbb
pop
or
mov
push
cmpsl
cs
das
loopne
push
or
xlat
out
jecxz
add
jecxz
in
pop
or
xor
icebp
mov
je
jmp
mov
lret
mov
jnp
sti
mov
out
xchg
sub
mov
data16
shll
xchg
xchg
inc
fsub
mov
sbb
xchg
push
add
fwait
cmc
mov
xchg
and
push
out
outsl
test
int3
aas
xchg
std
xor
in
jns
cmc
enter
lds
loop
inc
fnstenv
cwtl
add
xchg
xchg
fcomps
faddl
mov
imul
repz
cltd
adc
push
jns
xor
loopne
cli
mov
std
inc
xchg
mov
test
xorb
cmp
cmpl
mov
push
sbb
leave
dec
mov
aas
push
dec
inc
fidivs
aaa
dec
mov
dec
add
icebp
sbb
out
and
mov
jo
ss
push
sub
mov
movsb
push
movsb
insl
inc
cmc
nop
mov
aam
cli
out
repnz
clc
js
sbb
sbb
add
inc
out
xor
out
xchg
add
scas
jne
fs
jmp
and
push
sahf
subl
or
sbb
mov
std
adc
psllq
push
and
movsl
test
mov
in
inc
pop
enter
mov
dec
mov
adc
stos
jnp
fs
add
jae
dec
lahf
daa
fsubs
and
jg
ds
aaa
sub
lea
mov
cltd
ja
iret
dec
adc
int3
xchg
insb
push
lret
or
or
test
in
into
fs
mov
outsb
ret
mov
mov
dec
mov
sbb
fs
into
inc
cs
std
es
lahf
test
jo
sub
mov
jb
dec
iret
cmp
imul
pusha
imul
dec
xor
push
insb
push
fmull
sbbl
mov
in
adc
lret
mov
mov
stos
jo
popf
int3
dec
sbb
mov
and
les
je
dec
cmpsb
inc
lret
loope
stos
mov
or
jg
and
rorl
sub
movsb
xchg
addr16
push
pop
mov
roll
push
shrl
xchg
mov
mov
xchg
inc
push
sarl
aas
cmp
jecxz
pop
mov
dec
sub
push
xchg
scas
js
or
cwtl
xchg
xchg
lahf
repz
orb
stc
addb
mov
mov
or
cmp
jle
xor
sahf
xor
adc
mov
sub
stc
dec
in
jge
cmp
es
lret
cmp
jne
out
dec
mov
jbe
dec
sti
pop
leave
mov
or
je
push
scas
sub
and
ljmp
stos
pop
inc
sbb
sahf
dec
dec
mov
xor
pusha
js
jle
xor
aam
push
jp
int3
sbb
ljmp
or
pop
outsb
push
xor
pop
mov
lock
outsl
std
sub
cli
mov
clc
pop
mov
outsl
mov
and
inc
xchg
sub
fisttpll
xchg
mov
sbb
cmp
in
shrb
pusha
jp
gs
test
adc
rcrl
xchg
xchg
cmpb
pop
adc
mov
out
popa
jle
adcb
in
mov
ljmp
dec
mov
sti
insb
push
ljmp
xor
iret
scas
xchg
inc
scas
and
xor
cmc
pop
cmc
and
ljmp
test
lea
shr
nop
jl
mov
xchg
mov
aaa
ficompl
ds
mov
int
mov
adc
mov
les
adc
mov
cwtl
lret
aaa
jle
je
data16
jnp
dec
ljmp
adc
mov
ret
aad
je
adc
xchg
jmp
or
or
addr16
sub
mov
repz
lret
orl
xchg
mov
jno
imul
fs
jle
mov
xor
andl
mov
pop
adc
loop
push
jbe
push
dec
adc
imul
adc
pop
hlt
xor
clc
sub
dec
fimuls
test
imul
arpl
scas
je
dec
sahf
test
mov
sarb
sbb
pushf
inc
ret
and
xlat
cmp
jbe
call
inc
pop
adc
pop
dec
pop
xchg
cmpsl
pop
orl
insb
mov
mov
push
inc
dec
mov
imul
inc
nop
pop
inc
mov
add
cwtl
sahf
subl
insb
push
sarl
mov
sbbl
enter
push
jge
lds
es
xchg
dec
mov
negb
scas
and
xchg
jo
test
ja
xchg
xchg
jae
aas
cmp
test
and
aam
cld
push
push
sarb
sahf
and
mov
mov
cmpsl
pop
pop
lds
divb
out
sbb
xchg
jmp
dec
scas
loop
and
cwtl
add
cwtl
je
cs
lock
les
addr16
int3
ljmp
lret
loope
jb
mov
lods
xchg
clc
pushl
sbb
loopne
shlb
aad
or
rorl
inc
xlat
sbb
test
stc
scas
xchg
mov
std
jge
mov
jne
imul
jle
mov
pop
mov
nop
insl
mov
rorl
mov
iret
adc
iret
sub
imulb
sbb
push
cmpsb
push
cmp
push
jle
push
pop
dec
lds
sub
aaa
fbld
std
adc
xor
xchg
xchg
jnp
adc
xchg
mov
adc
mov
push
sahf
push
jmp
mov
jae
in
cmp
lods
orb
mov
inc
add
cmp
inc
sub
jp
jmp
mov
aaa
out
addl
movsl
jbe
gs
xchg
movsl
and
xor
add
pop
repnz
stc
daa
cmc
mov
repz
stos
mov
fnsave
or
sbb
rcrb
add
scas
je
jge
jecxz
ljmp
es
mov
mov
adc
pop
repnz
ficoms
cld
jecxz
cli
ss
lods
push
stos
or
sub
andb
lret
dec
dec
orl
xor
imul
ljmp
or
mov
push
je
or
xchg
jge
adc
lea
jbe
hlt
jnp
xchg
dec
mov
mov
push
jle
lock
jmp
jp
add
adc
xor
leave
aaa
xchg
das
in
popa
out
xor
inc
les
shl
sub
fwait
repz
or
ljmp
gs
call
sbb
mov
aas
in
test
fidivs
sub
lods
pop
cltd
xchg
mov
sarb
or
mov
ret
arpl
jne
xchg
sub
mov
repnz
js
dec
pop
out
sbb
mov
fcmovu
xor
push
mov
aaa
lret
loopne
lret
xchg
insb
stos
loopne
das
inc
pop
ret
jecxz
push
daa
aaa
into
pop
and
ss
or
fs
fs
in
dec
mov
cmpsl
add
aad
cmpl
pop
push
push
push
fwait
mov
mov
dec
xchg
dec
and
popa
mov
xor
mov
aas
loopne
xchg
cli
sub
sbb
daa
dec
sbb
cmpsb
pop
lock
cmc
pop
rcl
pop
outsb
mov
fildll
fimuls
pushf
push
lret
or
movsb
sbb
push
iret
lock
frstor
lcall
push
xchg
jno
pop
and
dec
loope
test
sbb
enter
or
dec
aaa
fdivl
jmp
sbb
shl
cmp
sbb
push
rorb
xor
and
inc
mov
pop
popf
cs
mov
cmpsb
pusha
mov
pop
xchg
mov
fisubrs
subl
or
addl
out
push
in
push
call
mov
and
mov
cli
xor
sub
jns
aas
shlb
in
movsb
pop
and
jp
and
pop
outsl
inc
out
push
pusha
jmp
shrl
fwait
xor
leave
sbb
xchg
xchg
mov
mov
xchg
sahf
xchg
xchg
nopl
std
mov
jg
sbb
and
mov
out
movsb
add
mov
daa
dec
lmsw
pop
cmpsl
push
xchg
fldl
mov
aad
lods
ja
or
sbb
xchg
nop
push
stos
es
pop
pop
jo
mov
adc
cmpsb
aaa
cltd
inc
lret
sub
add
xor
jp
xor
xchg
xchg
mov
gs
or
popa
clc
push
dec
and
xor
mov
enter
cmp
movsb
xchg
push
sbb
out
and
mov
jnp
add
sbb
xchg
fdivl
mov
mov
add
mov
and
or
pop
cmp
imul
pushf
pop
mov
push
mov
scas
jg
xchg
xchg
cmpsl
ss
enter
xchg
pop
adc
jp
sub
jne
mov
sub
rcll
xlat
lret
pop
sub
iret
cmpsl
ds
loopne
das
aad
sub
dec
flds
adc
aad
jne
cltd
jecxz
daa
lods
sahf
inc
sti
insb
pushf
xchg
idiv
xchg
clc
pop
jb
outsl
stos
pop
enter
test
mov
pop
ds
mov
shrb
lods
mov
loop
sar
mov
aad
adc
ret
cmp
fwait
xchg
mov
out
jge
mov
fisubs
pop
jbe
dec
cmpsl
xor
cmc
dec
dec
fildll
std
and
ljmp
add
jmp
call
inc
jmp
lods
mov
sti
mov
jmp
cli
sub
pop
add
pop
cmpsb
pop
fldenv
popa
jecxz
in
mov
fidivs
in
mov
push
sar
cmpl
push
pop
mov
xlat
enter
pop
lcall
repnz
and
arpl
test
mov
popa
les
mov
push
aas
mov
cmp
stos
sub
add
mov
shrl
scas
and
and
lds
jae
push
dec
push
lods
pop
xchg
dec
mov
jle
outsl
int
cmp
jns
fs
into
lahf
rclb
xor
repz
lods
jecxz
jmp
stos
cmpsl
lcallw
inc
xchg
jnp
icebp
arpl
sbb
mov
mov
cmp
cmc
push
dec
stos
jne
push
pusha
mov
shlb
pop
rcrl
push
lods
ss
xchg
mov
push
pop
cmp
mov
lcall
sbb
jp
std
pop
inc
mov
ds
int3
lods
pop
nop
daa
pop
jecxz
push
add
imull
xor
push
test
and
cli
and
dec
add
outsb
mov
sbb
cmpb
movl
or
repz
cmc
jmp
sti
es
test
lret
adcb
int3
sarb
into
fnstcw
aad
mov
mov
adc
cmp
adc
sbb
out
mov
rorl
in
push
sar
lods
fildl
mov
mov
das
xchg
cli
and
cmp
popf
jg
add
insb
insb
loop
sub
gs
cmp
adcl
xchg
adc
stos
jo
orl
xchg
in
push
add
daa
adc
fwait
cmp
mov
das
jo
cmp
lods
sub
pop
mov
mov
popa
sqrtps
xchg
pop
jp
aas
adc
cmpsb
inc
or
sub
or
addr16
xchg
fiaddl
adc
mov
inc
in
sbb
lock
xchg
jp
xchg
lods
cmpsl
insb
cltd
pop
into
mov
fwait
je
or
sbb
xchg
mov
or
dec
mov
mov
fistpll
mov
out
icebp
push
test
mov
das
loope
cmp
or
push
in
test
lret
add
icebp
sahf
mov
push
add
mov
push
sub
add
jle
lea
aas
xor
outsl
push
push
popa
sarl
pop
jb
cs
shll
pop
pop
sarl
pop
sti
push
pop
and
push
cmp
std
and
jbe
pop
inc
mov
mov
jg
mov
push
xor
or
or
xor
sbb
adc
push
xor
mov
mov
add
pop
fcomps
popa
aad
sbb
dec
sub
scas
mov
push
or
fstpl
mov
rclb
hlt
xor
cmp
jns
ficoms
lcall
mov
repz
fists
inc
xor
gs
lods
jo
inc
and
cmp
popf
xor
in
ds
test
jbe
dec
cmp
sbb
cwtl
push
faddl
xor
bound
jge
push
enter
mov
xor
push
out
lret
loope
adc
jp
pop
add
imul
outsb
inc
pusha
add
ss
mov
test
lret
out
push
cltd
pop
sub
pop
or
push
push
cmp
cmp
in
push
add
jns
xor
xchg
sub
lcall
mov
sbb
movsl
xchg
pop
test
jbe
shr
insl
mov
dec
jecxz
fdiv
sbb
jno
call
xor
xchg
cmp
movsl
dec
jnp
ljmp
push
movsl
fsubl
loope
cli
cmp
enter
or
cltd
jbe
lret
loope
shr
jmp
sub
std
sub
inc
push
sbb
fildll
add
mov
jecxz
pop
aaa
loop
out
mov
loopne
mov
aam
pop
cmc
adc
inc
xchg
mov
sub
mov
hlt
jae
in
mov
div
mov
cmp
std
sbbb
cmp
and
and
sbb
rcll
insl
movlps
mov
xchg
dec
nop
mov
ja
mov
inc
sub
cltd
xchg
divl
fsts
dec
pop
fucom
and
push
test
inc
repnz
jb
in
mov
roll
popf
test
mov
test
lret
push
stc
mov
lea
stos
adcb
aas
stos
inc
jno
sahf
xor
lds
push
and
jle
movsb
fidivl
cmp
mov
jnp
inc
fmuls
popf
xor
into
xor
popa
out
push
jmp
mov
jo
jae
fwait
xor
xchg
mov
pop
call
xlat
outsb
scas
cmp
popa
insl
shl
mov
vprotw
stos
push
loop
popf
adc
enter
mov
stc
xchg
mov
outsb
add
or
and
shrl
scas
adc
pusha
inc
sarb
jle
and
outsl
push
mov
testb
leave
adc
cli
pop
inc
fsts
mov
mul
insl
push
call
xor
push
popf
xor
adc
push
inc
xchg
cld
fnstenv
mov
testl
rcrl
sahf
nop
hlt
xor
and
inc
push
call
xor
push
stc
xchg
lea
ds
inc
jo
sahf
xor
les
push
and
fidivl
cmp
mov
jp
inc
fmuls
pushf
xor
int
pop
mulb
push
jmp
mov
jo
jb
fwait
xor
xchg
mov
pop
out
inc
sbb
scas
cmp
popa
insb
iret
cmc
mov
mov
jg
and
stos
push
loope
popf
adc
enter
mov
clc
test
mov
outsb
add
or
and
shrb
scas
adc
pusha
inc
iret
mov
jle
and
outsl
push
mov
testb
enter
pop
inc
mov
mul
insb
push
call
mov
fbstp
aad
xor
nop
out
xchg
sub
pop
lcall
subl
es
mov
pop
arpl
push
xor
bound
pop
mov
les
mov
xor
dec
sar
and
mov
jmp
imulb
or
xor
daa
mov
test
cmp
pop
cmpsb
loopne
fdivrs
scas
stc
jle
cmp
jmp
mov
push
pop
ficoms
or
xor
std
pushf
mov
cwtl
jecxz
test
out
add
divl
dec
mov
adc
lds
sahf
xor
sub
sbb
daa
loope
sbb
jnp
movsb
jnp
mov
dec
loop
add
stos
add
sub
push
lods
test
es
mov
ficoms
jno
mov
nop
adc
pushw
and
mov
dec
fcoms
push
stc
push
iret
sub
test
scas
inc
mov
out
mov
repnz
push
mov
cltd
sbb
jle
data16
mov
lock
xchg
hlt
or
push
xchg
xor
pop
xchg
xor
sbb
leave
mov
out
repz
rcrl
repz
push
jo
adc
sbb
inc
add
bswap
and
cmpsb
insb
xchg
push
scas
sub
add
push
cmp
adcb
jecxz
ret
push
lea
insl
sbb
pop
dec
xor
or
and
movsb
arpl
jo
jmp
cwtl
lock
outsl
aas
subl
mov
lahf
xchg
fwait
xchg
insl
or
negl
dec
jne
movsl
sub
inc
mov
ffreep
mov
inc
mov
popa
jge
xchg
fcom
popa
xchg
xor
movl
dec
cmpsl
xor
mov
xchg
inc
push
cwtl
dec
test
outsl
cmpsb
mov
inc
cmpl
or
dec
inc
fdivrl
out
fmuls
sub
jno
negb
push
gs
and
mov
mov
ss
mov
mov
hlt
notl
push
fstps
je
add
and
sbb
xor
ret
pop
mov
pushf
loopne
mov
dec
push
add
loope
pop
jae
add
notb
cmp
lods
stc
js
adc
ja
test
nop
ss
testb
arpl
scas
adcl
mov
xchg
cld
jle
sbbl
pop
lock
imul
test
mov
mov
xchg
testl
sarb
sbbb
jge
dec
pop
mov
inc
sub
pop
mov
and
outsb
push
pushf
push
iret
lock
mov
frstor
js
out
cli
cmc
filds
push
dec
inc
mov
lds
sub
and
xor
inc
pop
mov
adc
mov
scas
mov
adc
pop
xsha256
cmpsb
nop
add
xor
mov
dec
jmp
je
pop
push
xchg
shrb
sub
jo
cmp
cmpsl
test
inc
push
popf
aaa
dec
xor
xor
shl
jp
popa
xor
push
outsl
popa
clc
pusha
add
xorb
andb
push
xchg
cs
xor
iret
dec
pop
icebp
cmp
movsl
push
fcoms
in
gs
sbbl
cli
add
jmp
dec
jecxz
xchg
lds
inc
xlat
sti
movsl
int3
arpl
fidivl
test
or
xchg
test
add
lods
es
mov
and
mov
or
jnp
or
sub
cmpsb
mov
icebp
scas
inc
and
dec
or
mov
ret
mull
popa
call
test
ficomps
mov
mov
mov
or
repnz
pop
shl
call
mov
fnstcw
sbb
jb
push
bswap
inc
xchg
add
cld
test
push
dec
or
enter
loope
out
lds
mov
sbb
in
jmp
clc
nop
outsb
add
mov
jb
je
pop
fstpt
and
sbb
inc
adc
mov
mov
popa
cmc
lret
inc
fidivrl
and
adc
dec
pop
cld
xor
rclb
jg
jne
dec
fidivrl
and
and
aas
addr16
insl
hlt
cmpb
xchg
shll
cs
inc
popa
call
popf
cs
or
dec
in
add
clc
fwait
dec
filds
mov
mov
pushf
cltd
test
jmp
addr16
inc
popf
jp
outsl
cwtl
int
xchg
lret
sarb
inc
cmp
xchg
sub
jbe
jbe
in
push
loope
xchg
inc
mov
sbb
dec
adc
pop
add
outsb
imulb
in
jbe
jp
loop
lret
jmp
push
sub
inc
flds
sbbb
jbe
inc
stc
bound
fisubrl
cmpsl
pop
dec
push
adc
int
lods
inc
pop
add
ror
pop
and
or
pop
jle
je
call
or
xlat
jl
push
dec
adc
lahf
inc
add
pop
dec
adc
aaa
push
fwait
mov
into
xchg
push
insb
cmp
mov
sub
roll
or
lret
pop
add
call
xchg
repnz
mov
mov
mov
jb
bound
in
xchg
cmp
mov
cmpsl
cmp
fildl
daa
ret
flds
jbe
pop
lods
in
dec
adc
mov
mov
js
sub
outsb
cmpsl
xlat
mov
in
mov
cmp
cli
lock
test
inc
or
mov
xor
mov
mov
andb
cmc
pop
out
pop
sub
adcb
xor
dec
dec
xor
mov
sub
in
je
lret
pop
test
cs
rcrl
lods
mov
dec
mov
cs
mov
repz
int3
fdivp
fs
das
scas
cmp
outsb
mov
mov
sub
mov
jge
mov
in
insb
mov
mulb
and
mov
and
test
fs
fldl
mov
push
out
test
mov
outsl
daa
xchg
and
repz
stos
sub
aad
mov
fisttpl
and
test
and
and
mulb
xchg
mov
and
xchg
cmp
mov
mov
call
repz
subl
xchg
inc
inc
push
inc
adc
cltd
jbe
mov
mov
fs
push
rcl
jg
add
movzwl
dec
mov
dec
lds
out
imul
scas
sub
fadds
xchg
lods
push
mov
les
inc
adc
mov
xor
outsb
loope
inc
jbe
mov
mov
mov
adc
aas
adc
adc
jno
cld
push
outsb
das
stos
sbb
and
push
clc
inc
adc
or
mov
movsl
mov
add
xor
mov
das
mov
adc
jno
dec
ja
les
jno
arpl
loop
lea
add
mov
xchg
ret
test
xchg
inc
iret
and
sbb
push
repnz
lret
lock
xor
sub
xchg
outsl
and
xor
enter
sbbl
push
call
jb
shlb
push
sbb
cmpsb
mov
xor
mov
stos
pop
addr16
cwtl
pop
xor
mov
xor
adc
lods
sub
test
movb
scas
mov
cmpsl
add
jl
sub
pushf
adc
mov
sbb
push
lret
roll
scas
cmp
pop
les
fsubl
mov
push
mov
das
adc
inc
push
scas
mov
pop
testl
push
lcall
add
adc
mov
fmuls
jecxz
xlat
xchg
adc
movsb
cmp
out
inc
adc
cmp
inc
rcr
dec
popf
and
lcall
movsl
or
call
lret
lahf
push
out
dec
les
ror
lods
daa
sub
sub
jge
shll
aam
int3
cltd
aam
jns
xor
lods
xchg
xor
out
les
lods
or
stc
pop
or
les
movl
pop
and
cmp
outsb
mov
adcl
push
pop
xchg
pop
push
inc
adc
in
push
xor
shlb
movsl
xor
insl
insl
ljmp
inc
adc
add
mov
in
push
mov
inc
pop
jmp
push
jns
outsb
out
push
stos
sub
or
adc
push
add
dec
add
jae
mov
insl
inc
jnp
pusha
jns
ret
stos
sub
inc
movlps
cmp
aam
mov
out
je
jbe
jns
ret
stos
sub
push
enter
push
add
dec
add
popf
sahf
out
jbe
into
mov
jno
dec
mov
test
jnp
sub
scas
xor
sbb
push
and
dec
sub
or
popf
pusha
pop
mov
je
stc
push
cld
sbb
js
sub
imul
xchg
cltd
sbb
dec
enter
cltd
sarl
int3
xchg
sub
imul
cmp
in
fstl
sbb
pushf
icebp
push
nop
ds
sarl
movsl
gs
or
lds
xchg
stos
push
mov
jo
adc
inc
mov
cli
pop
outsb
xchg
test
cmp
test
pushf
cmp
mov
mov
sbb
inc
rclb
cmp
imul
sub
negb
push
inc
and
push
mov
mov
shll
mov
mov
cmpsl
xor
cmpsl
pusha
icebp
adc
sti
pop
xor
adc
dec
test
mov
imul
mov
jecxz
rorl
adc
outsb
lods
dec
mov
jge
mov
jo
ss
inc
add
pop
ret
cmp
xor
push
and
je
pop
lahf
cmp
stos
rcrl
or
push
movsl
xor
pop
push
shl
in
and
outsl
fistl
lods
aad
bswap
mov
xor
mov
cmpsb
pop
std
iret
cmc
test
adc
sti
xchg
inc
fst
into
mov
cmpsl
pop
testl
pop
and
xor
outsl
in
adcl
mov
sbb
adc
pop
xchg
push
repz
lods
inc
cld
subl
lret
bound
mov
and
adc
int
loope
add
insl
out
dec
pop
inc
or
lahf
and
pusha
cmp
mov
mov
cmp
pop
lret
js
inc
mov
and
dec
or
ret
out
daa
sbb
lods
xor
dec
cmp
mov
sarb
movsb
mov
xor
es
push
xchg
ds
ljmp
scas
jmp
scas
inc
mov
inc
adc
jne
mov
mov
in
imul
popa
ss
cmp
out
cmp
aad
sti
pop
mov
cwtl
cmp
stos
sbb
daa
aaa
popa
cmc
inc
cmp
scas
jp
pop
mov
pop
icebp
xchg
jle
mov
shll
cmp
lcall
or
cltd
dec
push
cld
pop
add
push
loope
lret
popa
cwtl
sbb
stos
xor
mov
push
mov
les
lea
lods
sub
or
fildl
movsb
xor
pop
xchg
aas
fldt
negl
js
add
lahf
cmp
pop
dec
pop
pop
jbe
xor
mov
push
mov
mov
jle
lds
loope
dec
rcl
repnz
call
jne
arpl
lret
popfw
inc
out
stos
xor
in
je
test
arpl
or
sub
adc
add
and
cld
gs
xor
mov
in
jbe
jge
rclb
jnp
xchg
testl
add
orl
xor
xchg
repnz
iret
mov
aaa
mov
stos
mov
std
dec
sahf
dec
or
xchg
mov
mov
mov
loope
out
sub
push
rcl
push
rcll
test
leave
add
and
aam
add
cmp
dec
ss
loopne
sub
pop
stc
mov
sub
mov
setl
or
jmp
js
add
daa
mov
inc
or
decl
gs
push
stc
cwtl
jb
push
xor
xor
daa
or
cmpsb
cmp
dec
adc
sahf
inc
js
stc
ret
jne
sub
mov
ss
sub
pop
sbbl
aas
dec
frstor
mov
lahf
sub
cld
arpl
lret
movsl
pop
loop
mov
enter
filds
repnz
add
nop
in
sti
and
ss
inc
pop
insl
repz
xchg
addl
or
popa
jnp
pop
add
aad
mov
stos
scas
ss
lahf
nop
cmp
out
shll
sarl
add
dec
xchg
stos
sub
lds
xchg
jbe
xor
test
mov
fwait
inc
and
xor
xchg
cmp
ljmp
shlb
es
fdivs
fildl
int3
cli
xchg
cmp
sub
xchg
xor
sub
xchg
cmp
insb
inc
or
lods
jne
mov
mov
adc
pop
add
movsb
xchg
cmp
sub
test
sbb
movsl
sub
mov
cmp
xchg
add
jecxz
sub
dec
mov
inc
psllq
movsl
xor
stos
out
insl
cld
cmp
nop
sbbb
out
rcrb
mov
test
mov
repz
fwait
push
jmp
add
jo
xor
dec
adc
and
lock
jmp
clc
leave
stc
mov
sti
arpl
mov
sub
mov
cmp
jnp
push
sahf
addr16
es
ljmp
push
aad
outsl
pop
std
aam
lcall
sbb
in
dec
inc
data16
ret
cmp
lds
dec
adc
daa
mov
dec
or
xor
iret
mov
sub
cmp
test
and
jge
lock
fistpll
adc
push
loop
add
pop
pop
rcll
int3
rolb
sub
pop
fs
sub
xchg
jnp
shlb
lret
jne
inc
mov
adc
inc
pop
cmp
lods
popf
mov
cmpsl
adc
scas
daa
xchg
push
pop
fcmove
lea
test
pop
imul
add
ret
cmp
hlt
push
jge
in
std
push
jnp
test
mov
icebp
pop
cmp
push
clc
pop
xor
pop
sbb
lock
xchg
inc
icebp
out
test
jbe
mov
push
insb
and
pop
lea
cli
shll
sbb
adc
mov
mov
shlb
mov
jbe
add
sub
enter
inc
or
pop
and
imul
loop
lods
je
fistpll
jo
mov
jb
pop
stc
add
xchg
shlb
and
bound
xchg
push
loop
inc
les
xchg
orb
mov
js
or
push
icebp
lret
pop
inc
xor
pop
xchg
sahf
inc
adc
inc
jns
xchg
jg
imul
push
lds
pop
sti
repz
push
add
lahf
cmp
jns
push
push
xchg
rclb
dec
aad
adc
icebp
cmp
xchg
js
add
xchg
gs
movsb
lahf
mov
cmp
jmp
sbb
adc
inc
imul
or
xor
dec
lcall
aas
out
xor
ljmp
stos
sub
jmp
mov
dec
aaa
hlt
fs
xchg
into
mov
add
mov
cld
iret
enter
pop
repz
sarb
dec
lods
mov
clc
mov
xchg
aas
pop
insb
sub
xchg
gs
mov
loope
push
inc
xchg
inc
jns
hlt
pop
andl
into
scas
stos
push
call
loop
outsl
push
push
add
test
pop
negl
out
sarb
movsl
cmp
jl
mov
repnz
in
sub
sarl
aas
fdivs
jp
push
mov
mov
or
ljmp
adc
adc
push
rcll
insb
out
dec
test
xchg
aaa
mov
xor
mulb
xor
mov
xchg
jne
lods
adc
mov
jl
dec
mov
out
mov
inc
repnz
xchg
out
in
cmp
push
sub
inc
int3
imul
jno
push
imull
lretw
xchg
add
push
push
jmp
out
insl
push
cli
xchg
cli
adc
jp
dec
push
cmp
sub
push
jns
je
nop
dec
sahf
mov
roll
loope
push
add
sti
rclb
mov
pop
xorb
mov
in
or
xor
add
scas
xor
lds
cmp
dec
lret
inc
pop
sbb
mov
xor
imul
mov
cmpsb
pop
rcrl
jo
push
push
mov
cltd
jg
mov
xor
cmpsl
bound
or
sub
sub
les
and
fs
pop
ss
or
hlt
mov
xchg
stc
out
sti
pop
cmp
rolb
ficoms
dec
ret
push
fwait
cmp
push
mov
push
movsb
ret
jb
aad
pop
das
mov
mov
das
mov
sbb
or
xchg
test
xchg
jg
int
and
pop
xor
mov
stos
imul
test
adc
cmpsb
movsb
jmp
daa
mov
cmpsl
sub
out
xchg
push
pop
or
and
psrlw
scas
nop
cmp
xchg
sbb
cmp
mov
xor
aad
jne
pop
or
rclb
xchg
ror
sub
je
pop
loope
fcomi
jae
pop
add
lea
cmpsl
pusha
neg
xchg
or
xchg
sub
mov
mov
cmpsb
dec
fidivrs
add
push
pop
or
add
addr16
mov
je
enter
jge
fistps
cmpsl
mov
cmp
pop
cmpsb
add
mov
movsl
sub
push
arpl
pop
cli
cmp
sub
jecxz
mov
pop
or
xchg
pusha
int
loope
jnp
cmp
cli
inc
sub
mov
mov
inc
adc
scas
adcb
jle
dec
pop
ljmp
fisubl
test
pop
rorl
lret
xchg
lret
out
insb
bound
repz
inc
adc
jo
xchg
ss
add
mov
test
outsl
ds
int
mov
dec
or
mov
add
xchg
dec
or
scas
outsb
ljmp
jne
dec
arpl
dec
sbb
dec
dec
inc
mov
sbb
and
mov
push
das
lods
sub
lods
push
lret
aas
cltd
ficoms
out
or
push
mov
lock
in
imul
adc
shrl
fnstcw
je
mov
sbb
cmc
std
leave
mov
in
addr16
sub
adc
xor
push
add
das
jl
cwtl
cs
nop
lods
enter
mov
add
add
call
mov
mov
pop
jnp
xor
pusha
call
xor
adc
xor
test
mov
ret
fstpt
sub
cmp
out
adc
sbb
cmp
fwait
pushf
sbb
cli
into
mov
pop
test
and
cmp
add
pop
das
roll
add
pop
std
pop
add
cmp
test
mov
push
xchg
push
push
sbb
call
arpl
push
iret
push
fdivrl
jne
lret
movsl
xor
rolb
subl
jb
or
pop
mov
movsl
inc
xor
ds
aad
ja
stos
xor
push
int
jl
add
cli
dec
xchg
in
sarb
mov
pop
add
test
and
mov
lea
stc
popa
sahf
ffreep
mov
or
jge
arpl
xor
push
rorb
adc
pop
stc
lahf
aas
push
fnstsw
mov
adc
lcall
sbb
test
lods
cs
fnstcw
lods
and
add
jnp
pop
fnstsw
std
pop
sub
popa
jo
xchg
inc
std
insb
pushf
aaa
pop
loop
mov
iret
repnz
test
cmpsb
mov
pop
clc
pop
adc
jo
out
clc
outsl
out
stc
out
push
dec
call
arpl
les
in
inc
sbbl
adc
ja
inc
fiaddl
ret
cld
and
cmp
xchg
cmpsl
aas
std
gs
push
hlt
sub
inc
icebp
pop
and
xor
int
into
xor
mov
sub
push
cmc
pop
cmpl
mov
mov
adc
lcall
icebp
pusha
push
sub
jg
pop
test
mov
pop
jl
in
xchg
mov
cmc
mov
adc
xchg
inc
push
movntps
add
orl
fwait
dec
push
jo
das
lods
popa
push
lcall
hlt
xor
shlb
mov
roll
bound
inc
adc
cmp
aam
jnp
mov
or
test
and
pushf
xor
mov
js
ja
sahf
in
imul
mulb
shrb
ret
scas
inc
cmc
cmc
xor
js
dec
inc
or
aad
orl
stos
mov
lods
push
cld
lods
insb
or
xchg
mov
dec
adc
call
inc
or
cmp
sarb
test
xor
scas
fdivrs
and
shlb
add
aam
jo
or
lret
fmul
jns
loop
dec
loop
add
xor
cmp
inc
xchg
lock
inc
xchg
cmp
pop
jbe
inc
insl
mov
jp
jns
std
and
orb
cmp
sbb
or
mov
dec
push
cmp
dec
cwtl
mov
push
adc
pushf
cmp
shlb
mov
dec
out
pop
add
neg
test
xlat
jge
dec
mov
test
xlat
add
mov
mov
js
es
in
pop
aam
popa
clc
lea
icebp
ds
mov
mov
mov
in
xchg
push
mov
inc
out
insl
pusha
lcall
je
cmc
arpl
outsl
cmpsl
xor
loop
lret
cld
xor
and
rolb
leave
and
outsb
or
mov
dec
push
repnz
adcb
pop
ud0
xchg
inc
movsb
sbb
dec
das
pop
push
xchg
xor
jno
aas
insl
outsl
add
nop
xor
mov
xor
int
stos
xor
roll
xlat
cmp
mov
movsb
sub
iret
fmuls
outsb
addr16
sti
jnp
sub
xlat
in
push
sub
push
and
jo
pop
xchg
add
pop
mov
out
callw
enter
xchg
aaa
lods
fisttpll
inc
jno
fidivrl
push
add
cmp
and
add
hlt
mov
andb
sub
in
mov
test
adc
imul
fisubl
adc
adc
andb
inc
cli
push
push
add
jecxz
cmp
dec
fwait
cmp
or
in
push
pop
int
dec
cmpsl
das
lea
pop
lods
out
mov
and
mov
mov
push
test
movsb
stos
sub
popa
push
push
and
out
xor
push
std
lret
xchg
xlat
in
add
enter
daa
push
cli
data16
jecxz
loop
add
adc
data16
dec
and
test
in
gs
mul
outsl
push
cwtl
in
push
fstps
repz
leave
dec
pop
or
mov
data16
cld
lods
negb
out
outsl
negb
push
rorb
cmp
adc
inc
push
fimuls
jmp
mov
or
insb
clc
bound
das
lcall
mov
negl
int
pop
andw
jno
je
push
cli
push
bound
movsb
jmp
fadds
ja
scas
xor
jmp
xchg
xor
mov
mov
mov
push
dec
push
add
mov
xchg
mov
mov
sbb
adcl
lea
rol
nop
scas
sbb
nop
mov
push
add
xorb
xor
ret
push
and
pusha
inc
sbb
je
lds
not
ja
enter
pushf
sbb
mov
pop
dec
jge
push
jnp
es
xchg
cmp
aad
add
push
xor
fbstp
shrb
mov
leave
mov
push
cmp
jle
jp
ljmp
sbb
mov
push
pop
stos
xor
mov
mov
in
notb
movsl
lcall
mov
jmp
push
fcoml
mov
cmp
ret
insb
in
sub
jo
mov
fsubs
and
setp
or
iret
lea
push
add
push
call
rclb
mov
rolb
popf
call
inc
in
add
mov
sbb
into
pop
test
adc
pop
dec
or
xchg
sub
push
imul
jbe
adc
out
arpl
int
inc
xchg
and
dec
inc
or
leave
ljmp
cmp
adcl
dec
adc
fdivrp
lds
push
cli
jp
mov
lock
add
sub
jl
pop
add
imul
or
repz
mov
nop
inc
jle
mov
outsl
xchg
gs
jp
jp
ds
mov
mov
stc
lods
cli
pop
jbe
pop
cld
sub
test
aaa
insb
jmp
xchg
not
orl
xchg
popf
mov
insl
shl
push
mov
lods
pop
imul
xchg
ds
xor
filds
orb
movsl
jmp
aam
and
loope
stc
movb
jbe
cmp
cmp
dec
jns
dec
ds
pushf
inc
inc
sub
pop
lods
or
scas
mov
mov
mov
jge
cmp
pop
out
mov
pop
cli
es
push
add
fsubrl
mov
jge
cmp
mov
stos
push
rcl
test
pop
decb
xlat
xchg
inc
inc
imul
test
adc
or
in
mov
or
jge
inc
push
jecxz
dec
adc
cmc
inc
or
pop
nop
cmp
lods
xor
xchg
fiaddl
jg
scas
xor
outsl
adc
stos
fwait
movsb
daa
push
mov
inc
or
push
iret
arpl
fbld
leave
xchg
jg
jne
pop
popa
icebp
dec
or
add
pop
xor
je
fsubrl
cs
lea
mov
scas
inc
or
aad
jl
push
lock
rcr
push
cld
in
into
xchg
add
filds
cmc
push
sbb
loopne
mov
cmp
dec
loope
sbb
dec
lods
sahf
scas
xor
mov
push
std
and
and
out
mov
xor
push
sbb
lahf
jge
and
lret
test
and
movsb
mov
jae
mov
jne
fwait
jo
sbb
test
arpl
aam
and
inc
mov
mov
test
fwait
mov
pushf
inc
add
cmp
sbb
nop
into
lods
xor
jmp
cltd
test
mov
mov
test
mov
test
lea
xor
cmp
dec
es
inc
add
push
inc
xchg
push
int3
cltd
popf
sbb
push
push
add
adc
les
and
in
dec
loop
std
sbb
and
add
mov
push
mov
std
ja
ret
gs
pop
cld
xlat
mov
dec
lock
rcrb
imul
mov
stos
sub
in
jg
or
mov
dec
subl
sahf
movsb
mov
rorl
pop
lcall
mov
push
ljmp
or
sbb
scas
cld
pop
rorb
jle
out
add
dec
adc
sbb
sbb
push
push
dec
js
jnp
or
pop
insl
movsl
xor
mov
mov
and
xchg
mov
daa
jecxz
mov
xor
inc
popw
add
mov
mov
sub
mov
xor
mov
lods
jb
add
push
loop
jae
aaa
cmpsb
sbb
xor
inc
mov
xor
pop
clc
xchg
add
cwtl
pop
cmp
ficomps
push
iret
clc
add
sbb
dec
cmpsb
cmp
dec
jno
shll
dec
xchg
mov
inc
or
jo
jns
in
movsl
cs
popa
add
inc
xor
mov
rcr
jge
decl
inc
adc
aad
gs
and
shll
or
or
inc
ja
lcall
push
pop
cli
gs
xacquire
lret
js
lret
bswap
incl
xchg
inc
sbb
nop
inc
movl
out
xchg
mov
insl
add
fcomp
test
fildl
rep
pop
add
or
jae
adcl
inc
push
inc
mov
push
add
mov
fwait
cmp
popa
test
das
add
push
scas
inc
mov
jne
mov
cmp
into
ljmp
fildl
data16
sarb
jbe
test
push
xchg
aaa
mov
lods
sub
cmp
push
aam
sub
sbb
cmp
fldenv
cli
mov
mov
popa
repnz
bound
inc
jnp
mov
into
dec
inc
fdivrl
rorl
jnp
mov
sub
cmpl
ja
push
jecxz
in
gs
sub
cmp
out
pop
add
hlt
mov
cmpsb
mov
scas
mov
nop
inc
mov
pop
cltd
jae
lea
ret
nop
shrb
push
inc
popf
std
pop
ret
fimull
and
cwtl
push
push
clc
fwait
je
mov
int
cli
mov
or
aad
and
and
pop
mov
fldl
icebp
jb
cmp
es
push
jb
dec
jge
add
repz
aad
xchg
rolb
add
repz
or
jo
push
mov
fmull
rorb
imul
jg
sub
push
inc
adc
and
lds
out
in
xor
pop
cmp
sahf
inc
mov
mov
lret
in
push
add
pop
jns
sbb
pop
xor
sub
movsb
fnstsw
mov
add
push
fidivs
and
mov
inc
into
fcoml
bnd
das
std
adc
mov
fwait
loopne
leave
jle
xchg
aaa
pop
jo
ja
mov
adc
xlat
jl
inc
cld
gs
imul
mov
push
andb
loop
or
fdivs
test
pusha
jle
in
outsl
xchg
imul
pop
lock
out
data16
sub
je
xchg
bound
mov
fstpt
jg
jp
negb
outsb
sbb
inc
loopne
push
cwtl
ss
push
adc
sub
bswap
repz
in
cmp
out
pusha
out
and
sbb
mov
ss
inc
fdivrl
call
jge
mov
repnz
ds
xor
pop
aad
outsb
dec
push
scas
pop
neg
mov
data16
mov
push
adc
sub
rcrl
dec
or
sti
ss
loop
pop
sbb
mov
mov
mov
adc
sub
dec
mov
stos
add
mov
andb
pop
frstor
mov
xchg
sub
pop
les
xchg
pushf
pop
lock
inc
xlat
repnz
adc
lods
flds
lods
mov
mov
imul
popf
jge
mov
stos
daa
mov
ja
sbb
jecxz
xchg
dec
fnstcw
and
jge
dec
and
xor
gs
jne
xchg
pop
adc
test
popa
push
inc
dec
sub
ljmp
push
sti
mov
scas
les
in
es
daa
xchg
sbbl
or
xor
clc
cmp
sub
repz
push
leave
pusha
inc
sbb
pop
jmp
orl
orl
outsl
orl
iret
xchg
pusha
repnz
push
xchg
or
mov
imul
and
lods
xor
dec
arpl
test
cmpsl
sub
jno
nop
cmp
mov
push
repz
or
aaa
fwait
mov
scas
mov
jl
lods
lret
rorl
sbb
subb
cld
ljmp
mov
cwtl
negb
mov
xor
xlat
dec
loope
movsl
and
xlat
jmp
push
and
xor
sub
lds
jmp
lods
mov
mov
ja
sbb
insl
add
jmp
sbb
ret
mov
dec
dec
adc
fs
sub
xchg
push
add
movsl
jns
pop
pop
add
xor
fdivrs
test
mov
add
mov
inc
mov
stos
xor
inc
out
inc
inc
pop
sub
fadds
sbb
push
out
in
jno
cli
nop
aas
sub
pop
popf
xor
pop
sub
movsl
xor
mov
insb
cmc
lret
jle
lcall
push
fs
and
inc
mov
cli
xchg
xlat
xchg
sbb
inc
pop
sti
dec
scas
fstpt
xchg
and
cltd
inc
mov
add
ret
cmp
popf
roll
and
std
push
aas
inc
andnps
into
mov
mov
adc
jmp
mov
cmp
dec
js
jmp
imul
pusha
xorl
pop
pop
jb
mov
mov
movsl
sub
out
mov
mov
fnsave
add
xor
int
in
das
and
sub
inc
or
cmp
xor
inc
je
out
arpl
xchg
mov
sub
iret
data16
lahf
ss
in
test
dec
mov
mov
aad
sub
jae
stc
nop
sub
pop
scas
jp
gs
sbb
sbb
push
ljmp
jno
jb
mov
es
xor
je
out
inc
sbb
lret
bound
mov
mov
add
aaa
into
pop
loope
sahf
adc
in
mov
and
or
xchg
mov
xchg
sub
popa
clc
or
inc
stos
sub
pop
lret
int
std
jge
xor
push
in
adcl
push
add
mov
push
les
mov
test
inc
fiadds
adc
cld
cltd
sbb
dec
mov
push
jmp
aas
mov
rclb
es
mov
jne
lods
inc
xchg
push
std
xchg
cmp
sbb
cmp
pop
or
cs
mov
addl
xchg
sub
push
arpl
xchg
mov
daa
test
sbb
dec
iret
data16
lahf
ss
dec
mov
mov
aam
sub
jb
stc
nop
daa
xchg
inc
faddp
dec
pop
scas
jns
gs
pop
fwait
xor
sbb
push
ljmp
jno
jno
mov
lds
fnsave
lods
inc
sbb
lret
bound
sbb
mov
loopne
sahf
adc
in
scas
xor
or
test
mov
xchg
sub
popa
clc
or
inc
test
lret
cld
jl
xor
sbb
mov
mov
push
ret
sub
cmpsl
adc
adc
cld
cwtl
sbb
dec
mov
push
jmp
ds
rclb
es
mov
jne
lods
inc
xchg
add
lret
jmp
or
cmpl
or
sub
dec
jne
addb
fdivl
mov
arpl
test
mov
cmpsl
sbbl
jns
lahf
ss
in
test
dec
mov
mov
roll
shlb
nop
es
inc
faddp
inc
pop
scas
js
gs
push
lcall
imul
mov
or
mov
les
fnsave
lods
inc
pop
test
xchg
mov
lret
bound
sbb
mov
filds
sahf
adc
in
scas
xor
or
test
mov
xchg
sub
clc
pop
jbe
inc
test
jg
pop
leave
int
sti
jnp
xor
sbb
orl
push
add
mov
push
ret
repz
mov
adc
cld
xchg
sbb
dec
mov
push
jmp
cmp
pop
rclb
es
mov
jne
arpl
xchg
ss
call
or
cmpl
pop
or
sub
es
jg
inc
fdivl
mov
arpl
test
mov
and
inc
iret
data16
lahf
sub
mov
mov
sarb
sub
jo
stc
nop
and
inc
pop
scas
ja
gs
adc
sbbl
jmp
ljmp
jno
outsl
fnstsw
es
xor
je
in
inc
push
test
xchg
mov
lret
bound
sbb
mov
fiadds
sahf
push
in
lods
xor
or
addl
and
clc
push
jne
inc
cmpsl
daa
jg
pop
enter
jp
xor
sbb
orl
push
ljmp
mov
push
shrb
icebp
jae
movsl
adc
inc
push
lods
mull
xchg
sbb
sbb
push
ljmp
jno
out
pop
rclb
nop
daa
inc
scas
fidivs
bound
xchg
xor
int3
arpl
push
sbb
cmp
or
sub
jne
jge
inc
fnsave
sahf
xchg
sub
push
fs
xor
dec
and
iret
data16
mov
test
dec
mov
mov
sarl
cli
xchg
and
inc
faddp
inc
sbb
adc
sbbl
ljmp
mov
fstpt
daa
ret
je
jecxz
inc
adc
ss
arpl
sbb
mov
fisttpll
lahf
push
jp
in
stos
das
es
incb
xchg
sub
stc
add
mov
movsl
and
into
gs
js
xor
dec
lret
mov
mov
push
mov
stc
nop
mov
les
scas
cmc
bound
xchg
push
ss
mov
sbb
push
mov
or
pop
rcrl
xchg
sub
lods
fbstp
pusha
scas
inc
xchg
add
xchg
xor
sbb
test
in
cmpl
cmp
pop
or
sub
or
das
popf
xchg
sub
push
fs
xor
sbbb
inc
shlb
mulb
test
dec
mov
mov
iret
cmp
shrl
xchg
and
sbb
adc
test
gs
mov
or
push
or
nop
daa
shrb
inc
adc
int3
arpl
sbb
mov
fisttpl
lahf
or
push
in
stos
sub
je
std
jg
shll
add
dec
movsb
and
divw
xor
dec
leave
mov
mov
dec
mov
stc
nop
mov
ret
repz
addr16
xchg
adc
int
mov
sbb
push
jmp
push
movsb
cmp
mov
ret
or
ja
pop
scas
inc
nop
xchg
xor
sbb
addl
rcl
pop
or
daa
stos
sub
jp
inc
pushf
xchg
sub
dec
fs
sub
dec
and
shlb
cmc
mov
test
dec
mov
mov
into
cmp
shrl
and
sbb
adc
test
fs
jmp
xchg
or
rclb
nop
daa
mov
loopne
inc
adc
int3
arpl
sbb
mov
fimull
lahf
or
in
test
lret
cld
jle
fldt
shlb
add
dec
mov
iret
data16
xor
dec
enter
push
mov
dec
mov
stc
nop
mov
rcll
repnz
addr16
xchg
adc
int
mov
sbb
gs
jmp
add
jb
jmp
or
ja
pop
scas
inc
xchg
xor
sbb
addb
mov
or
es
sub
jns
inc
dec
fs
jg
mov
and
shlb
hlt
mov
test
inc
mov
mov
int
sub
imul
xchg
and
sbb
adc
sbb
push
jmp
test
or
rclb
nop
daa
mov
fildll
xchg
mov
int3
arpl
mov
xchg
cmpl
ja
in
test
es
sti
jge
fldt
iret
stc
add
dec
mov
ret
iret
data16
je
xor
dec
mov
mov
dec
mov
stc
nop
lahf
or
pop
scas
icebp
pop
addr16
nop
adc
int
mov
sbb
fs
jmp
add
cmp
mov
or
push
ret
or
ja
pop
scas
inc
mov
xchg
das
mov
fs
sbb
addl
cmp
rcll
mov
and
inc
jbe
js
inc
xchg
sub
dec
fs
jle
mov
pop
mov
shlb
repz
test
inc
mov
mov
int3
cmp
shrl
xchg
pop
mov
mov
fisubs
setae
int
xor
push
test
or
rclb
nop
daa
mov
fisubrs
xchg
mov
int3
arpl
sbb
mov
cmp
push
fmuls
lahf
or
in
cmpsl
sub
mov
cli
jl
fldt
into
stc
ljmp
dec
mov
ror
repz
movsl
adc
test
mov
mov
dec
mov
cli
xchg
sahf
or
cmp
sbb
mov
aaa
into
inc
scas
test
arpl
xchg
add
out
ret
or
ja
pop
mov
sti
xchg
sub
dec
sbb
jg
in
test
cmp
rcll
mov
and
jbe
jbe
inc
fisubrs
cwtl
xchg
sub
dec
gs
jge
mov
sbb
shlb
repnz
test
inc
mov
mov
lret
aaa
sub
push
mov
mov
fsubl
or
test
pusha
in
in
adc
ss
push
mov
jne
xchg
scas
xor
fs
iret
sbb
mov
cmp
push
xlat
or
movsl
sub
mov
clc
jnp
fsubrl
arpl
insb
mov
sahf
pop
sbbb
mov
mov
test
push
mull
mov
dec
mov
shr
sti
xchg
popf
or
cmp
decb
iret
inc
lods
test
bound
xchg
add
out
ret
pop
xchg
sub
cmpsb
loopne
fcomps
dec
mov
xchg
sub
sbb
jge
out
test
sahf
cmp
iret
push
or
test
pop
out
and
jbe
je
dec
fildll
xchg
xchg
sub
dec
data16
jl
mov
sbb
shlb
icebp
mov
test
inc
rclb
or
adc
fidivs
xor
cld
xchg
sbb
sbb
or
test
pop
jecxz
in
adc
mov
or
rclb
xchg
sub
fdivl
xchg
lods
das
into
gs
int
mov
sub
mov
cmp
push
aad
mov
mov
les
idivb
lret
fs
cld
push
dec
pushf
sbb
shlb
jo
cmp
ret
mov
movsb
xchg
push
fidivs
mov
ret
cld
xchg
fwait
pop
dec
loope
mov
push
sarb
stos
xchg
xchg
movsb
cmp
mov
or
push
ret
push
xchg
sub
movsb
loopne
pop
mov
mov
xchg
sub
sbb
jnp
out
xchg
pushf
cmp
int
or
out
pop
cmpsb
sub
xlat
inc
jbe
jb
dec
loopne
xchg
xchg
sub
dec
addr16
jnp
mov
sbb
shlb
lock
test
inc
rcrl
or
adc
sub
fs
mov
sbb
or
test
pop
loop
out
adc
cmp
rol
push
add
fidivs
xchg
stos
cs
pushaw
lret
sbb
mov
cmp
dec
aam
mov
mov
ret
hlt
js
fisubrs
lret
sti
push
test
dec
mov
mov
xchg
rclb
or
jbe
mov
ret
std
xchg
lcall
mov
push
push
sarl
test
pop
out
nop
cld
movsb
cmp
mov
or
addl
mov
mov
xchg
daa
lods
shrl
dec
sbb
jns
out
xchg
fwait
cmp
int3
push
or
out
push
movsl
sub
aas
jbe
jno
dec
loopne
xchg
xchg
sub
dec
addr16
jp
mov
sbb
addr16
cmp
out
test
loopne
mov
enter
arpl
std
xchg
sbb
sbb
or
test
pop
loope
out
adc
cmp
rol
push
add
fidivs
fidivl
xchg
test
lret
sti
sub
mov
cmp
dec
rorl
mov
mov
shll
ja
fisubrs
leave
gs
cli
addr16
cltd
sbb
in
outsb
mov
xchg
rol
repz
or
jbe
mov
ret
std
xchg
cltd
add
loope
mov
push
sarl
pop
pop
out
sti
movsb
cmp
dec
ret
add
sub
mov
mov
mov
xchg
es
shrl
inc
sbb
js
out
xchg
lcall
sub
out
sbb
jbe,pt
jo
dec
loopne
xchg
xchg
sub
dec
addr16
jns
mov
pop
fwait
test
out
mov
test
fisttps
adc
sub
call
dec
fbstp
data16
pop
mov
sarb
loopne
out
adc
scas
xor
fs
rclb
xchg
sub
fnstenv
xchg
test
iret
pop
leave
sbb
mov
cmp
dec
rorb
mov
lahf
and
rclb
or
jbe
fisubs
enter
data16
cwtl
sbb
jmp
mov
xchg
rol
repnz
or
jbe
mov
ret
std
xchg
cwtl
add
xor
sbb
xchg
cmp
cmp
xchg
mov
movsb
cmp
jbe
loop
ret
add
ja
push
mov
mov
xchg
and
inc
sbb
ja
out
xchg
cltd
cmp
lret
movsb
sub
sub
aam
jbe
outsl
cmc
dec
loopne
xchg
xchg
sub
inc
addr16
js
mov
push
lcall
imul
out
test
fimuls
sete
jbe
xor
shll
xchg
sbb
sbb
push
lea
sarb
fists
adc
cmp
into
rclb
xchg
sub
fdivs
xchg
cmpsl
sub
pop
enter
jle
test
rorl
mov
sahf
and
rclb
icebp
jne
fisubs
gs
clc
gs
xchg
sbb
ljmp
xchg
pop
or
jbe
mov
ret
std
xchg
xchg
add
xor
push
sarl
cmpsb
xchg
stc
movsb
cmp
scas
jbe
loope
ret
add
ja
push
mov
xchg
xchg
and
shrl
inc
sbb
jbe
out
xchg
cwtl
cmp
leave
dec
or
out
sbb
jbe
outsb
hlt
dec
loopne
nop
xchg
sub
inc
addr16
ja
mov
adc
shlb
in
mov
test
or
push
xchg
fbstp
das
sub
pusha
out
xchg
sbb
sbb
add
test
pop
ficoms
mov
or
int
push
incl
fbstp
mov
or
cmpsb
sub
pop
sbb
scas
sbb
rorl
or
popf
and
rclb
or
movsb
adc
cld
mulb
xchg
pop
test
dec
mov
push
pushf
or
xchg
push
movsl
mov
fbstp
scas
sub
loopne
std
xchg
xchg
add
xor
imul
cmp
pop
out
mov
movsl
cmp
lods
jbe
fisttps
jle
xchg
sub
lahf
loope
rcll
dec
test
call
flds
mov
cli
out
xchg
cmp
leave
dec
or
lock
ja
outsb
repnz
loopne
nop
xchg
sub
inc
addr16
jne
mov
adc
shrl
ljmp
mov
fisttpll
jbe
das
sub
pusha
in
xchg
push
orb
aaa
sbb
add
test
fcoml
or
jne,pn
pusha
int
pop
incl
loopne
push
aam
dec
push
je
xchg
cmpsb
daa
iret
pop
sbb
clc
jp
test
or
pushf
pop
sub
push
mov
dec
fbld
ret
data16
hlt
arpl
inc
mov
imul
or
mov
mov
xsha1
cmpsb
lea
loopne
inc
scas
sub
xchg
xchg
add
mov
mov
push
push
test
cmp
aaa
movsl
mov
xlat
pop
pop
lock
cmpsb
cmp
fisttpll
pop
jge
xchg
sub
lahf
loop
rcll
dec
xor
xchg
and
push
mov
clc
out
xchg
xchg
cmp
enter
jl
pop
icebp
sbb
js
insl
lock
loopne
xchg
sub
jae
mov
adc
test
xor
mov
xchg
fmull
movsl
or
cs
pop
loop
xchg
adc
dec
loope
xor
push
sarb
ficoml
or
cmp
int3
ret
jg
sub
shlb
xchg
movsl
and
sbb
test
lret
or
fwait
sbb
js
out
outsl
dec
fbld
shll
bound
sbb
mov
push
mov
mov
mov
adc
lods
cs
xchg
xchg
decl
mov
mov
push
push
addl
pop
push
pop
lock
cmpsb
cmp
fmull
pop
jl
xchg
sub
sahf
loop
rclb
dec
xor
xchg
and
mov
imul
xchg
xchg
cmp
dec
or
icebp
sbb
js
insb
out
dec
loopne
mov
jb
mov
adc
imul
lock
fisttpl
movsl
or
fbstp
sub
std
xchg
adc
sbb
add
xchg
or
cmp
lret
ret
jle
sub
shll
xchg
movsb
and
push
lds
test
lret
sti
imul
dec
mov
dec
fistps
shlb
popa
mov
xchg
adc
push
mov
mov
mov
adc
cmp
pop
xchg
nop
decb
mov
mov
push
push
addb
xor
push
pop
lock
cmpsb
cmp
fisttpl
pop
jnp
xchg
sub
popf
loop
iret
dec
mov
xor
shrl
inc
push
mov
imul
xchg
xchg
cmp
dec
or
icebp
sbb
packssdw
dec
loopne
lea
jno
mov
adc
shrb
out
cmp
xchg
xchg
fimull
movsl
or
sub
pop
loopne
xchg
adc
loope
xor
mov
shrl
add
xchg
ljmp
stos
inc
jp
js
cld
jg
xchg
ficoms
sahf
mov
add
dec
cmpsb
mov
push
push
xor
push
pop
flds
inc
adc
out
daa
cs
sub
pop
fcomps
mov
mov
push
mov
cmp
fwait
mov
lahf
pop
fs
mov
push
xchg
sti
in
loope
adc
pop
push
aad
xor
ret
pusha
gs
pop
loopne
popf
or
nop
notl
sbbb
push
sub
fwait
and
adc
push
push
sbb
mov
ret
push
fdivl
in
int3
test
xchg
lods
loope
xchg
jns
sbb
xchg
inc
jnp
in
mov
jge
or
imul
std
xor
mov
mov
pop
jns
push
inc
mov
dec
push
or
xchg
imul
or
add
or
dec
popa
jo
adc
mov
aad
in
movsl
sbb
std
dec
mov
repz
or
mov
rol
pop
gs
subb
xchg
jbe
int
pusha
jp
loopne
in
adc
fs
testb
andb
pop
fadd
aam
scas
push
mull
jo
lcall
fcompl
pop
stc
sbb
cld
fimull
or
or
sbb
and
das
sbb
sub
imul
lock
pop
inc
call
test
jg
jb
loopne
sub
loop
popf
jne
je
push
test
imul
idiv
aas
adc
filds
jnp
lea
pop
fdecstp
mov
pop
out
add
sbb
rolb
outsb
xor
mov
mov
lahf
push
fimuls
mov
daa
ud2
jmp
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
push
js
sub
push
dec
movb
mov
cmp
lea
andb
fs
arpl
adc
inc
adc
adc
leave
scas
adc
ja
mov
adc
xor
add
push
xchg
je
dec
pop
mov
test
jae
adc
call
jge
inc
xchg
lods
adc
mov
cli
mov
movsl
or
jle
jno
xor
dec
fucomip
adc
adc
jp
adc
mov
mov
imul
pop
pop
sub
stc
imul
sbbb
ljmp
std
jg
mov
ljmp
imul
repz
addr16
lods
test
test
scas
mov
add
stc
add
add
cmp
pushf
xor
sub
add
sub
aam
mov
adc
icebp
pop
inc
adc
outsb
out
or
dec
xchg
movsb
je
xchg
int3
push
loope
repnz
jecxz
xchg
cmpsl
nop
or
daa
lcall
sbb
push
push
add
enter
mov
int3
push
inc
fidivs
xor
push
mov
cmp
daa
out
sub
jae
lahf
int3
mov
int3
cld
shlb
xchg
out
addr16
xchg
repz
mov
cmp
mov
hlt
dec
mov
jnp
mov
push
dec
icebp
test
sub
out
push
jecxz
jmp
jmp
imul
in
insb
ret
and
rcrl
sbb
push
mov
jnp
sub
shrb
adc
mov
cli
add
cmp
and
mov
icebp
scas
fimuls
shll
aaa
push
pop
movsl
scas
and
jle
lcall
stc
sbb
jb
in
jo
jmp
mov
daa
and
push
std
mov
xor
fwait
iret
xor
insl
inc
mov
xor
js
xor
pop
mov
popf
push
inc
xor
stos
test
dec
fstpl
mov
stos
out
test
mov
or
ficoml
lret
fwait
mov
jo
push
and
xchg
sub
insl
jb
movsb
dec
or
xor
pop
cmc
dec
xchg
cmc
sbb
movsl
xchg
imul
and
rcl
mov
orb
popa
add
ja
jno
popa
dec
mov
pop
dec
mov
jecxz
mov
inc
mov
dec
mov
mov
or
fists
xor
xchg
dec
or
dec
jns
jno
fcoml
adc
shlb
mov
pop
out
movsl
movsb
das
fisubs
rcrb
rolb
and
iret
stos
fisubl
push
and
aad
sarl
out
sub
fs
sbb
fwait
in
fs
push
mov
movsb
fcmove
cmp
movsb
mov
cmc
dec
mov
mov
arpl
xchg
out
jecxz
rolb
push
mov
mov
push
loope
pop
sbb
mov
push
in
push
std
repnz
adc
repnz
pusha
icebp
mov
mov
dec
cmp
movsl
lods
out
sbb
add
and
cmp
and
scas
pop
mov
in
adc
mov
ja
mov
ret
cmpsl
jnp
cwtl
and
test
arpl
fsubl
repz
or
fisttpl
xlat
repnz
cli
cltd
clc
jl
sub
pslld
aam
lcall
xor
adc
sub
inc
lds
cmpsb
aad
jge
mov
test
mov
lds
into
jae
dec
xchg
cmp
shrb
popa
out
hlt
pop
add
sub
es
ret
dec
inc
fwait
mov
jle
addr16
pop
ljmp
sbb
scas
push
aaa
lret
xor
ret
cmp
jnp
mov
jnp
lret
jg
out
mov
lods
adc
loope
dec
test
mov
xorl
pop
cld
popa
sub
lret
cmp
mov
and
add
jmp
jl
mull
rcr
and
test
pop
cmp
pop
inc
mov
sar
bound
adc
jae
dec
outsl
xchg
mov
pop
pop
movsb
cltd
aad
movsw
scas
xchg
out
pop
ja
and
and
outsb
pop
xor
les
ss
pop
shrb
jb
rorb
jb
xchg
clc
lret
xor
xor
push
jnp
jnp
xor
test
push
jge
push
and
dec
adc
cmp
jbe
and
cli
mov
inc
add
test
sub
dec
dec
test
daa
gs
movl
dec
inc
inc
xor
inc
aas
sub
aad
add
inc
mov
cs
push
shll
addb
outsl
repnz
add
std
or
push
push
lds
pop
jge
scas
mov
mov
mov
ret
frstor
inc
enter
inc
sub
mov
mov
push
xor
jp
or
inc
cmp
loopne
or
inc
cmp
push
lock
cmp
xchg
xlat
or
imul
dec
xor
or
jle
xchg
mov
inc
push
daa
push
inc
cmp
hlt
rorl
or
add
stc
push
popa
add
cmp
cmp
outsb
mov
or
hlt
cmp
addr16
int3
out
jecxz
pop
cmpsl
add
xchg
mov
inc
mov
movsl
sti
mov
pushl
in
fisttpl
push
adc
jl
sbb
xchg
jmp
dec
std
stos
push
push
ret
xchg
mov
lahf
lret
testb
cmp
lret
jg
insb
sarl
enter
in
xlat
cmp
sub
mov
xchg
push
stc
mov
std
ljmp
int
mov
xchg
cmc
insb
aam
enter
xchg
outsb
shrb
pushf
sub
bound
ret
outsb
mov
dec
in
add
aaa
cmp
mov
pushf
in
pop
adc
movsl
call
enter
rol
cmp
mov
fcoms
stos
fistpl
or
scas
cmc
in
rclb
rol
push
ror
in
or
mov
dec
mov
inc
mov
mov
inc
mov
mov
inc
scas
push
mov
inc
lods
jl
out
pop
pop
in
cmpl
movsl
add
mov
popa
subb
cld
or
adc
sub
lcall
outsl
dec
int
xchg
aas
repnz
cmp
xchg
popa
inc
mov
leave
push
pop
pop
adc
icebp
cld
lcall
pop
cmp
ficoml
je
xchg
loopne
inc
add
xchg
adc
addr16
inc
sbb
pop
jle
xor
cmp
pop
and
ljmp
jae
push
movsb
mov
xchg
add
repz
repz
mov
pcmpeqd
pop
std
jmp
jl
jl
ficoms
inc
mov
and
mov
pop
pop
mov
sub
std
nop
in
nop
push
nop
lcall
add
ljmp
jecxz
dec
notb
mov
add
andl
sbb
dec
cwtl
fidivrl
ja
out
mov
dec
imul
sbb
dec
je
test
leave
jg
push
or
adc
sub
fdivrs
lods
push
jb
fs
xor
iret
mov
xor
insb
jb
xlat
pop
add
loopne
and
fcoml
adc
sbb
es
cmp
je
in
fbstp
mov
add
and
mov
leave
loopne
adc
adc
mov
mov
mov
es
mov
arpl
into
sbb
mov
and
xor
int
xchg
inc
test
gs
dec
insl
fldenv
jecxz
xchg
out
mov
cld
mov
dec
aad
mov
inc
in
xor
pushf
inc
dec
xchg
add
fsubrl
cld
std
xchg
mov
xchg
lds
popf
cmp
popf
push
in
cld
aad
enterw
outsl
dec
jge
adc
aas
int
cs
je
movaps
ficoms
mov
dec
inc
ljmp
inc
into
into
cmp
jmp
out
inc
outsl
inc
cld
and
sbb
jnp
dec
jb
push
sbbb
or
es
push
mov
lea
mov
