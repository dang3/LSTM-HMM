push
mov
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
push
mov
sub
push
call
push
call
call
mov
cmpl
je
push
call
mov
push
call
mov
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
call
push
call
mov
push
push
call
push
call
push
push
call
push
call
mov
push
push
push
call
push
push
call
call
mov
push
call
mov
push
call
mov
push
call
mov
call
mov
call
push
call
push
call
call
mov
cmpl
je
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
call
push
push
call
push
call
push
push
call
call
mov
cmpl
je
push
push
call
push
push
call
call
mov
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
call
mov
push
push
call
call
mov
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
call
call
mov
call
mov
push
push
push
call
movl
lea
push
lea
push
call
push
call
push
call
push
push
call
call
push
push
call
push
push
push
call
push
call
push
call
call
mov
cmpl
je
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
call
call
mov
cmpl
je
push
call
call
mov
push
push
call
push
push
call
push
call
push
call
mov
push
call
mov
push
call
call
mov
call
mov
push
push
call
push
push
push
call
call
mov
push
call
mov
push
call
call
mov
push
push
call
push
call
mov
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
mov
push
call
push
call
mov
push
push
call
push
push
push
push
push
push
push
call
mov
push
push
call
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
call
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
push
call
push
push
push
call
push
call
push
call
push
call
push
push
call
call
mov
cmpl
je
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
call
movl
lea
push
lea
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
call
push
push
call
movl
lea
push
lea
push
call
push
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
call
mov
push
push
call
call
call
mov
cmpl
je
push
push
push
call
movl
lea
push
lea
push
call
push
push
call
push
call
call
mov
push
push
call
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
mov
push
call
push
call
call
mov
cmpl
je
push
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
mov
push
push
push
call
movl
lea
push
lea
push
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
push
call
push
call
mov
push
push
call
push
push
push
call
movl
lea
push
lea
push
call
push
push
call
push
push
call
push
call
mov
call
push
push
push
call
push
push
call
push
push
push
call
movl
lea
push
lea
push
call
push
call
mov
push
call
mov
call
mov
push
push
call
movl
lea
push
lea
push
call
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
call
mov
call
mov
push
call
mov
call
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
push
call
call
mov
cmpl
je
call
mov
push
call
push
call
push
call
mov
push
push
push
call
call
mov
push
call
push
call
push
call
mov
call
mov
push
push
call
call
mov
movl
lea
push
lea
push
call
push
push
push
call
push
push
call
push
call
push
call
call
mov
cmpl
je
push
push
push
push
push
push
push
call
mov
push
call
push
call
call
mov
cmpl
je
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
push
call
call
mov
push
call
call
mov
push
push
call
push
push
call
push
call
movl
lea
push
lea
push
call
push
call
mov
push
call
mov
push
push
push
call
push
call
mov
call
mov
push
push
call
push
call
movl
lea
push
lea
push
call
push
push
call
push
call
mov
call
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
push
call
push
call
mov
call
mov
push
push
push
call
push
call
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
push
push
call
call
mov
cmpl
je
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
mov
push
call
push
call
mov
push
push
call
movl
lea
push
lea
push
call
movl
lea
push
lea
push
call
push
call
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
mov
call
mov
push
push
push
call
movl
lea
push
lea
push
call
call
movl
lea
push
lea
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
mov
push
push
call
push
push
call
push
push
call
call
push
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
call
mov
push
call
push
push
push
push
push
push
push
call
mov
cmpl
je
push
lea
push
push
lea
push
mov
push
call
mov
push
call
push
call
jmp
call
movl
mov
push
call
add
mov
cmpl
je
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
mov
jmp
push
call
add
mov
cmpl
je
movl
jmp
mov
add
mov
cmpl
jae
mov
add
mov
mov
mov
jmp
push
call
add
mov
cmpl
je
movl
jmp
mov
add
mov
cmpl
jae
mov
add
mov
mov
mov
jmp
push
call
mov
push
mov
push
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
push
call
add
mov
push
call
add
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
int3
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
mov
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
jo
add
pop
xor
add
add
cmp
add
sub
add
sbb
add
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
pop
xor
add
add
inc
xor
add
xor
add
add
add
xor
add
xor
add
add
add
add
divb
add
call
xor
add
ljmp
sub
sbb
add
int3
xor
add
xor
add
add
add
add
xor
add
test
add
pop
xor
add
add
inc
xor
add
xor
add
xor
add
xor
add
add
out
xor
add
xor
add
xor
add
xor
add
xor
add
add
jo
add
pop
xor
add
add
cmp
add
sub
add
sbb
add
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
pop
xor
add
add
inc
xor
add
xor
add
add
add
xor
add
xor
add
add
add
add
divb
add
call
xor
add
add
add
add
je
jae
jb
popa
insl
gs
add
inc
inc
push
inc
push
dec
xor
cs
insb
add
inc
add
inc
jne
insb
inc
popa
arpl
add
insb
inc
gs
push
add
add
inc
insb
outsb
fs
jne
arpl
push
add
inc
outsb
add
insb
inc
gs
jb
outsl
jb
add
insb
inc
gs
push
add
add
inc
imul
inc
dec
xor
cs
insb
add
xchg
add
insb
insb
outsl
arpl
add
data16
add
dec
push
push
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
add
insl
outsl
jbe
inc
imul
jns
add
je
inc
gs
gs
imul
inc
jb
popa
je
inc
imul
jns
add
sub
inc
outsl
jo
inc
imul
gs
imul
bound
gs
add
push
add
gs
inc
imul
gs
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
gs
add
imul
xor
inc
jb
popa
je
inc
imul
gs
imul
bound
gs
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
push
dec
inc
dec
xor
cs
insb
dec
xchg
cmc
das
ds
outsb
loopne
cs
inc
sbb
cs
cmc
inc
mov
sub
sub
out
sbb
lret
push
sbb
pop
lock
push
mov
cmp
gs
repnz
iret
out
pop
ret
and
fcoml
lret
mov
fwait
std
mov
fisubs
vmovntdq
push
push
dec
mov
stos
sub
sub
pop
xchg
insb
test
pop
call
push
jns
sub
cmpsl
mov
pop
or
pop
fmuls
jle
call
xchg
enter
mov
outsl
add
mov
adc
das
int
mov
sub
dec
sarb
pushf
pop
ljmp
push
xchg
inc
daa
mov
mov
push
lret
sbb
inc
cmpsb
xorb
mov
mov
sub
push
add
mov
or
xor
jb
fdivs
adc
imul
ja
out
pusha
lea
lods
push
loop
addr16
and
mov
scas
jb
lock
dec
std
lds
dec
adc
mov
pop
call
out
add
mov
or
arpl
inc
rcll
ss
test
fdivrp
jo
add
movsl
hlt
mov
xor
imul
or
lret
clc
xor
into
push
mov
icebp
jmp
hlt
cli
mov
sub
mov
sub
fs
pop
mov
xchg
aam
jge
insl
sahf
mov
andb
adc
jmp
adc
call
lods
push
xorl
scas
pop
mov
and
lret
jl
inc
pop
repz
and
xchg
xor
in
jbe
jbe
jbe
fistpll
out
leave
push
cmp
aad
ret
push
sti
sub
and
sub
or
xor
sub
dec
movsl
cmp
dec
inc
das
cld
or
xor
shll
jecxz
hlt
sub
inc
ljmp
cmpsl
jo
movsl
cwtl
cli
iret
mov
dec
fsubrl
fstps
repz
push
sub
mov
dec
popf
jae
inc
jp
sub
cmp
imul
xchg
loope
pop
int3
add
in
dec
sbb
loopne
outsl
or
add
and
icebp
push
in
sub
sub
sub
push
mov
add
dec
loopne
stc
shrl
push
mov
xor
cltd
and
sti
data16
psrlq
lds
lock
mov
adc
push
inc
jl
test
andl
mov
pop
scas
push
push
leave
or
inc
pop
push
testl
hlt
inc
mov
lock
rorb
adc
test
rcr
je
add
xchg
mov
iret
cmc
xor
pop
adcl
loop
mov
mov
cmpsb
in
repz
sahf
loope
addr16
push
mov
xchg
imul
adc
sbb
mov
pop
enter
test
mov
fisubl
outsb
adc
pop
sbb
jle
iret
sub
mov
inc
cld
inc
jnp
push
rcll
add
sub
repnz
loop
test
in
push
xchg
jecxz
adc
in
add
and
mov
mov
xor
lret
cmp
popa
mov
ss
pushf
ret
mov
mov
jecxz
push
popf
inc
and
pop
bound
cmp
push
mov
aas
dec
std
push
lret
jb
leave
aas
repnz
sbb
aam
dec
lcall
test
data16
cmp
test
leave
movb
cmpsl
adc
jl
inc
pusha
nop
or
mov
sbb
mov
add
push
dec
jge
ret
or
dec
dec
int3
out
cmp
andb
mov
sub
add
imul
pop
rolb
dec
stos
js
push
jo
test
cmpsb
and
cmp
repz
leave
sub
lods
sub
add
sbb
mov
sarl
mov
dec
jmp
pushf
js
cmpb
add
and
out
int3
adc
adc
xlat
dec
jmp
jo
pop
stc
shlb
inc
xchg
ljmp
out
mov
dec
lret
outsb
sahf
in
cwtl
mov
sti
leave
sbb
inc
xor
insl
xor
add
rcr
lahf
and
mov
mov
dec
jle
inc
lods
int
insb
jne
mov
cmp
imul
fs
sbb
dec
fs
out
arpl
cmp
mov
jne
add
sub
adc
stos
ja
dec
xchg
jns
scas
sar
rorl
push
stos
xor
cmpl
out
cli
and
fisubs
sub
mov
and
dec
clc
mov
push
jmp
cmp
mov
stos
push
or
incb
cmpsl
rorb
adc
lock
cmp
sarl
push
jns
lock
sub
lea
xchg
ds
fsubrl
dec
aaa
pop
sbb
mov
test
add
ret
mov
or
or
mov
stos
add
add
rol
push
push
shl
pop
imulb
sbb
mov
repnz
ja
insl
shlb
xchg
dec
mov
lcall
mov
fs
nop
jl
cmp
sbb
test
ffreep
and
pop
notl
cmp
std
jns
pop
cwtl
jmp
ljmp
mov
add
in
fidivrs
mov
jo
cmpsb
mov
add
cmp
cmp
or
movsb
mov
sub
jge
mov
mov
test
push
adc
mov
inc
addl
jne
sahf
dec
mov
test
cmpsl
movsl
call
sub
cli
dec
popf
and
lods
adc
xchg
add
lods
mov
pop
ss
mov
stos
in
insl
xchg
mov
subb
cmc
xchg
pusha
out
pop
dec
mov
dec
push
sub
lods
and
jg
addr16
mov
aam
xor
jb
cmp
xor
xchg
mov
cltd
xchg
mov
sbbb
in
or
sub
jo
lahf
loope
insb
or
jae
xchg
nopl
hlt
loopne
xchg
imul
cmc
out
out
out
pop
dec
inc
add
lcall
lock
inc
sbbb
hlt
sbb
out
shr
add
sub
jg
mov
mov
mov
jo
int3
repnz
xchg
cmpsl
aas
popa
xor
add
xor
ret
stos
jne
and
mov
imul
gs
lret
or
xor
bound
mov
lods
add
aad
ds
bound
emms
cmovp
addr16
xchg
cmp
out
fstps
pop
loop
and
fstps
aam
andl
mov
fbstp
mov
dec
lret
jno
and
push
push
xchg
xor
ret
adc
test
insl
add
movsl
lds
fmull
jmp
test
call
cwtl
or
xor
push
outsb
inc
mov
es
adc
push
adc
mov
ss
add
pop
or
jns
jns
rclb
nop
das
mov
push
aaa
lcall
lods
shlb
int
hlt
sbb
pop
jb
jmp
insb
pushf
rol
test
pop
pop
fisubrs
adc
mov
mov
or
out
icebp
sahf
stc
pop
xchg
in
lds
scas
fdivs
cld
pop
insb
pop
popf
pop
int
fdivrs
mov
mov
mov
mov
pushf
push
sbb
pop
or
mov
movsb
popa
negl
pop
xor
in
fimuls
int
push
scas
nop
idivb
xor
inc
add
jbe
fidivl
ss
hlt
add
cs
mov
sbb
dec
xchg
mov
pop
push
dec
cmpsb
push
jo
dec
push
pop
cmp
or
xor
cmpsl
jl
daa
imul
in
jne
dec
test
rcl
outsl
cs
ret
push
fwait
loope
push
jge
sub
fdivl
repnz
jp
push
mov
xchg
mov
ss
xchg
rol
mov
pop
push
mov
sub
lahf
test
mov
xor
mov
cmpsb
or
shlb
in
add
out
inc
push
pushf
test
cmp
mov
repnz
pop
pop
out
jns
mov
fstps
lods
test
orl
cmp
std
inc
xor
scas
adc
stos
xor
inc
xor
jp
nop
sbb
test
fs
popfw
jecxz
mov
leave
jg
or
loop
dec
sub
stc
xlat
out
es
or
subb
cmp
lret
dec
sar
inc
stc
sub
dec
adc
mov
es
aaa
sbb
jp
add
jb
push
mov
outsl
aad
cmp
xor
xlat
or
loopne
adc
sahf
subb
mov
and
xor
lods
mov
in
arpl
jns
inc
cld
shll
ret
pop
cmc
pop
inc
movsb
test
shrl
arpl
dec
push
sbb
cmp
hlt
and
adc
es
les
cmp
scas
aam
mov
add
adc
mov
cmp
cmp
adc
popa
sar
fstl
aad
mov
ljmp
xor
xor
mov
mov
push
insl
adc
out
dec
sahf
scas
pop
sahf
mov
jbe
xor
xor
adc
and
rolb
xor
loopne
mov
fwait
mov
mov
nop
fsubs
sbb
sti
es
mov
lret
jl
aaa
aam
cmp
out
iret
fcoms
mov
insl
lret
jge
ffree
xchg
std
shl
xor
inc
jbe
rcr
mov
inc
cmp
inc
les
cwtl
aam
loopne
lock
aaa
std
or
mov
sbb
push
cmp
xlat
push
pusha
dec
arpl
out
cmp
lods
xlat
aaa
imul
ret
lods
xor
fcomps
rcrl
push
pop
or
movsb
xor
mov
sahf
pop
xor
ret
outsl
outsl
fidivl
inc
out
data16
inc
pop
inc
mov
adc
insl
or
dec
js
mov
pushf
xor
lret
js
insb
pusha
adc
xor
add
push
and
cmp
jle
stos
mov
and
scas
mov
fisubrl
addr16
xchg
loope
fcmovnb
sbb
js
mov
adc
inc
cmp
mov
mov
push
xchg
inc
adc
and
fistpl
movsl
rclb
dec
pop
shrb
es
sbb
push
push
ss
push
xor
hlt
lock
or
or
add
dec
jge
fwait
into
xor
outsl
xor
in
fcomps
adc
add
mov
and
sub
negl
push
sub
mov
sbb
and
into
in
and
or
sub
nop
add
js
fpatan
nop
stos
lcall
pushf
insb
cmpb
adc
fwait
or
or
mov
mov
jae
imul
mov
pop
push
dec
jg
test
adc
sbb
pop
shll
add
hlt
rorl
fs
scas
scas
test
jmp
or
cld
add
lahf
roll
xchg
mov
lods
xlat
xor
push
or
cmp
cli
ret
mov
rcrl
xchg
xor
mov
sbb
jne
sti
inc
cltd
pop
push
jns
adc
icebp
push
je
mov
loop
mov
add
inc
aad
sub
clc
lret
ss
cld
out
xchg
lret
test
xchg
push
xor
dec
rclb
adc
jg
jl
mov
arpl
lret
push
scas
mov
shrl
pusha
shlb
stos
push
dec
in
sahf
xchg
insb
sbb
mov
lods
pop
xchg
jmp
lahf
rcll
icebp
sbb
ss
sbb
das
sbb
mov
rol
test
out
scas
std
repnz
xor
xchg
call
test
pop
and
frstor
mov
mov
out
in
fmull
and
mov
adc
test
sub
push
sbb
std
xor
inc
push
or
je
adc
xchg
mov
test
mov
cmp
jg
popa
mov
sarl
mov
rclb
jmp
ss
sbbb
ljmp
sbb
cmpsl
inc
mov
and
outsb
ljmp
out
in
sbb
add
in
jp
mov
push
repnz
pop
xlat
mov
xchg
stos
pusha
enter
js
and
pop
push
in
cmpsl
or
inc
aaa
cmp
mov
mov
cmpsl
or
push
add
pop
imul
cmp
icebp
xor
pop
dec
mov
ljmp
outsb
call
mov
inc
lock
pop
cli
mov
bound
xor
push
push
sbb
test
rolb
or
in
xor
insb
arpl
fsubl
gs
sub
hlt
cmp
push
dec
mov
pop
mov
inc
mov
inc
pop
lahf
jnp
orl
les
std
add
test
cltd
loop
ror
xchg
mov
mov
daa
add
jo
mov
std
movsl
mov
push
pop
jne
jmp
or
in
inc
test
daa
sub
fdivrs
shr
dec
cmpsl
mov
ljmp
add
rcl
sub
push
cltd
enter
lahf
push
lcall
icebp
out
xor
push
lret
push
bound
es
cmpl
aad
fadds
and
jle
dec
jne
aaa
dec
xlat
fcmovnb
adc
xlat
jg
aas
mov
and
ljmp
xorl
das
mov
clc
dec
data16
fmull
scas
outsb
xchg
jge
add
or
rorb
scas
pop
rorb
lods
cmpsl
adc
lahf
add
mov
pop
xchg
jl
inc
ss
nop
add
mov
cmp
add
fwait
mov
rorb
push
pop
push
in
pushf
sub
in
mov
cmp
fsts
pop
push
fdivrs
repz
sub
add
insb
fimull
jae
jbe
xlat
inc
orb
cltd
ret
push
inc
movsb
inc
mov
fists
xchg
xchg
pop
stc
cli
jo
repnz
mov
cs
xchg
and
jns
bound
sar
cmp
aas
std
cli
cmp
push
cli
addr16
stc
dec
out
or
mov
xor
jge
jecxz
pop
mov
lods
movsb
inc
repnz
pop
in
fdivrs
dec
inc
xor
andb
push
aas
mov
add
dec
scas
cli
mov
pop
arpl
fwait
add
add
mov
test
call
cmpb
repz
arpl
push
jns
mov
or
mov
test
inc
subl
mov
pavgw
sysexit
cmp
mov
xor
test
jmp
xlat
clc
xchg
aam
add
iret
adc
je
mov
mov
lds
ret
and
sbb
fcomip
or
std
push
and
sahf
imul
jo
or
daa
ret
testl
jno
jae
jo
orl
add
test
dec
xchg
inc
xor
lret
lea
das
and
jne
in
lret
cmp
dec
dec
mov
cli
js
aam
setb
add
aad
adc
cmp
mov
into
jo
cmpsb
or
push
ret
subb
orl
ret
mov
dec
leave
into
rolb
cmp
les
in
shr
sub
and
mov
mov
sarl
ficompl
mov
lock
stc
cwtl
pop
sbb
dec
iret
outsl
sbb
mov
data16
cmp
xor
sti
mov
roll
mov
xchg
mov
aas
nop
popa
je
mov
sub
out
add
and
aad
or
xchg
push
cs
das
adc
out
sbb
pop
and
jne
cmp
shll
in
dec
fs
jmp
aas
sarb
pop
movsl
sub
call
int
cmc
insb
cli
popa
mov
jne
ds
sbb
adc
mov
rol
test
jb
inc
add
fisttpll
loop
xchg
insb
in
movsb
sbb
popa
loopne
out
or
xor
sub
inc
and
and
mov
stos
mov
cmp
out
cld
jle
mov
inc
cmp
ret
xor
mov
xchg
sub
sbb
push
push
ds
mov
jmp
adc
movsb
push
mov
lock
sbb
mov
push
dec
jge
push
in
int
push
cltd
and
lea
enter
sti
loope
psubq
inc
aaa
leave
xlat
cmp
jecxz
lods
add
enter
stos
iret
add
int3
das
add
sbb
pop
or
push
xor
jns
adc
jnp
mov
out
sbb
dec
xchg
pop
lods
push
pusha
and
and
jnp
push
lock
cmp
dec
or
int
mov
cmp
icebp
das
sahf
out
and
popa
inc
adc
push
aam
xor
addb
lcall
stc
sub
pusha
cmp
push
mov
xorl
clc
decb
out
cld
push
jae
in
pop
test
jns
pop
jae
fwait
mov
stos
xchg
loop
into
inc
jo
pop
pop
xchg
addr16
xor
lret
push
add
rcrb
sbb
cmp
int3
movb
mov
jmp
cmp
popf
in
fcoms
adc
iret
popf
shlb
or
jb
pop
nop
jns
fcmovb
bnd
mov
test
out
and
add
loopne
cli
xchg
sbb
shlb
pop
int
bound
sub
addr16
pop
mov
pop
push
mov
gs
loope
mov
ljmp
call
xor
sarl
lds
inc
cmp
scas
cmp
stos
cmc
aad
imul
gs
mov
mov
push
push
cmp
dec
test
inc
roll
pop
xor
out
or
add
add
inc
cmpsb
mov
leave
test
xor
shlb
jo
adc
lock
cmp
in
fs
pop
jns
in
inc
cli
movsl
pop
inc
sub
outsl
dec
shll
scas
adc
rcll
addl
addr16
outsb
fnstcw
pop
fs
ror
jbe
mov
sbb
ljmp
or
adc
jo
fwait
sub
pop
mov
je
in
push
fisubl
jle
hlt
cmp
cmp
xor
xor
movsl
and
outsb
lret
ss
mov
push
sbb
sbb
pushf
xorb
push
jp
mov
dec
lock
adc
cmp
movsb
test
dec
mov
sub
sbb
xchg
pop
mov
int
mov
xchg
dec
in
test
fcoms
imul
mov
or
jmp
or
cmp
hlt
adc
inc
jle
mov
lea
mov
pop
xchg
xchg
cmp
popa
push
push
pop
mov
lods
fisubl
stos
fcompl
mov
into
jge
adc
and
mov
mov
jmp
push
loopne
xor
shlb
mov
xchg
es
mov
push
sbb
mov
loopne
lods
xchg
insb
mov
xchg
lods
adc
add
xor
dec
in
clc
movsl
imul
push
push
xor
and
push
cmp
jmp
jg
jp
stos
mov
mov
ds
cmp
pop
or
addr16
cmpsb
bound
enter
mov
negb
jns
mov
and
pop
iret
dec
insl
lods
jns
pop
lahf
jge
pusha
push
dec
mov
push
lock
mov
dec
pop
inc
sbb
je
mov
adc
fisubrs
out
pop
dec
mov
mov
cld
mov
cs
xchg
push
mov
adc
test
sbbl
enter
xchg
cmc
leave
adc
pop
sbb
lock
inc
out
add
jmp
xchg
mov
cltd
stos
sahf
sub
and
stos
fsubrl
pop
sarb
pusha
data16
push
or
sub
push
mov
mov
addr16
outsb
adc
ja
fcoms
inc
outsb
jge
xchg
sbb
inc
or
push
outsb
mov
and
int
pop
in
jge
xchg
dec
sti
into
in
pop
xor
fcoml
icebp
imul
cmp
xor
adc
inc
fildl
test
imul
arpl
out
stos
ficoml
lock
loop
xchg
inc
lock
loopne
mov
sbb
shrl
lods
test
mov
addr16
add
push
aam
enter
aam
orb
fsub
jne
push
push
adc
mov
sbb
mov
pushf
out
jl
jg
mov
or
xlat
add
or
push
adc
andl
sbb
xor
je
stc
repnz
clc
and
add
notb
cs
xchg
divl
jle
shr
test
or
mov
or
sub
dec
jbe
cmp
add
push
int
or
repz
bound
or
repnz
jle
xor
pop
push
fistl
or
adc
pop
xor
cmp
push
ss
push
mov
fidivrl
xchg
insb
xchg
pop
xchg
les
sar
jae
adc
pushf
cld
pop
lds
cmp
xlat
push
mov
and
lret
xor
add
dec
sub
dec
push
and
sahf
sbb
push
adc
push
fistl
push
clc
cmp
jmp
outsb
adc
jo
add
mov
mov
sahf
lds
sbb
inc
std
add
aad
stc
adc
test
rol
mov
sbb
sub
cmpsl
mov
addr16
sub
sub
mov
mov
xchg
lods
mov
push
imul
cs
outsb
inc
add
rcrl
xchg
arpl
in
mov
dec
inc
and
or
cwtl
xchg
or
mov
pop
add
gs
rcl
test
pop
cmpsl
lods
repnz
nop
mov
shlb
dec
shrb
test
dec
xor
dec
inc
bound
mov
fdivs
jmp
addr16
pop
pop
xchg
rorl
push
addl
inc
inc
aad
xchg
xor
bsr
jns
sbb
popa
in
jle
sahf
fs
add
dec
push
push
xlat
decl
addr16
inc
mov
mov
das
insl
adc
rcll
sahf
jo
xchg
aaa
in
add
and
rcll
cmp
pusha
push
sti
xor
xchg
imul
pop
push
dec
xor
mov
pop
or
dec
std
cmp
or
lcall
call
sbb
xchg
popf
pushw
inc
testb
mov
mov
sbb
and
adc
mov
jecxz
cmp
jae
addl
imul
pop
out
mov
xchg
jo
in
jb
mov
loope
mov
int
dec
jge
popf
mov
loope
mov
mov
lret
cli
mov
xor
cmc
jg
dec
repnz
pop
mov
aam
inc
and
add
push
sub
and
cmpsl
rorb
shlb
xor
adcb
mov
add
ret
inc
and
sub
and
insl
or
insl
dec
bound
decl
pop
into
xchg
mov
fisubrl
mov
jbe
popa
mov
add
dec
rol
shl
inc
xchg
pop
add
movsb
ljmp
addr16
pusha
mov
pushf
push
sub
nop
hlt
call
add
adc
clc
sahf
mov
mov
dec
insl
jecxz
mov
mov
jne
dec
in
dec
fwait
into
mov
icebp
mov
cmpsl
iret
stos
fcomps
enter
pop
push
dec
add
cmp
dec
xchg
add
pop
dec
movsb
ss
sbb
jbe
inc
xchg
rorb
gs
ljmp
lcall
clc
icebp
test
xor
mov
clc
aam
int3
adc
rclb
repnz
xchg
les
pop
sbb
out
xchg
pop
pop
sub
cwtl
cmp
adc
test
int3
lahf
rcrb
mov
mov
push
rorl
rclb
and
out
add
ror
repnz
jg
pop
mov
jnp
cmp
push
iret
pushf
std
cmc
call
lock
sbb
nop
lret
jl
and
int
out
jl
icebp
insl
sbb
xlat
xchg
or
and
push
pop
and
repnz
fmul
and
mov
mov
sbb
loop
sbb
mov
xchg
push
adcb
add
scas
inc
sbb
mov
enter
ja
mov
leave
and
je
fistpl
in
cmpsl
sbb
cwtl
ret
add
shr
pop
push
pop
xchg
cmp
enter
push
cmp
jmp
loope
push
cmc
mov
jmp
or
add
inc
leave
dec
inc
mov
decb
aas
ljmp
je
outsb
fcompl
shl
adc
cld
in
xor
push
bound
movsb
imul
clc
jnp
ss
std
sbb
cmp
addps
xchg
loop
xchg
mov
repz
shlb
sub
pop
jmp
sub
mov
pop
out
cmp
cmpsb
stc
pop
stos
outsl
cltd
dec
pop
xor
fcoml
iret
mov
mov
lcall
rep
stos
mov
movsb
xchg
xchg
in
das
idiv
aaa
imull
repnz
mov
repz
int3
xchg
add
cmp
mov
ret
cmpsl
std
sbb
jne
jp
std
xlat
and
cli
imul
dec
sarl
xor
dec
imul
flds
push
cmp
sbb
push
scas
std
mov
insb
into
pop
mov
sti
arpl
adc
sbb
mull
or
fnstsw
loope
pop
xchg
or
push
xchg
lds
into
rcl
mov
aaa
pop
mov
xlat
fwait
adc
movsb
jbe
mov
inc
out
add
ret
out
dec
setnp
ret
ficomps
test
iret
lock
lods
add
mov
test
jmp
js
jb
in
or
mov
js
inc
xor
imul
inc
repz
cmc
stos
mov
sti
pop
movsb
lds
sub
xor
test
lret
pop
push
je
pop
jae
imul
mov
scas
mov
push
pop
stos
outsb
out
push
fstpl
rorb
icebp
addb
insl
lcall
subl
pop
cs
sbbb
ss
dec
loope
cmp
jp
lds
cmc
xor
xchg
dec
inc
test
popf
pusha
cld
cwtl
mov
dec
jle
out
rcll
sub
gs
std
mov
lret
add
jae
adc
data16
jge
lret
push
jle
push
gs
sub
push
jmp
rol
xor
mov
and
pop
lea
out
jne
cld
cmp
cmp
stos
in
repnz
int
in
dec
scas
mov
mov
ja
int3
stos
or
and
repnz
mov
mov
cmp
movsb
out
vpslld
inc
push
push
shr
cli
sbb
inc
and
cmpsb
and
xchg
aad
movntps
sbb
mov
mov
cmp
jns
bound
pop
mov
sub
add
aad
arpl
jnp
lods
adc
cmp
jne
push
mov
icebp
nop
rcrb
push
pushf
fimull
xor
leave
push
cmpsl
mov
enter
stc
sub
nop
mov
or
sub
sub
int
jns
in
andb
andb
mov
cltd
repz
mov
xchg
dec
cmp
mov
inc
xchg
into
sbb
adc
push
popf
xor
push
push
stos
out
in
push
lret
push
xchg
mov
shlb
xchg
adc
repz
jne
rorb
mov
mov
jae
stos
pop
and
test
xor
aas
and
aaa
outsb
jecxz
adc
pop
insb
jo
mul
mov
iret
jg
rcrb
mov
daa
ljmp
sub
ret
pop
jne
mov
je
test
or
ss
jns
inc
mov
dec
push
xor
adc
and
mov
mov
pop
es
mov
push
push
leave
fnstenv
sbb
mov
ja
push
inc
stos
les
hlt
and
lock
sub
mov
std
insl
xor
jecxz
pop
sarl
cmp
jge
jecxz
xor
mov
cld
pop
dec
popf
jnp
subb
test
mov
subl
lods
andl
inc
mov
pusha
lea
mov
jp
loope
imul
iret
rorb
and
pop
jns
jg
ficoml
fcomp
cmpb
pop
aaa
aas
sbb
fs
xor
test
xchg
mov
dec
test
lret
fcomps
jecxz
mov
pop
stos
adc
mov
repz
mov
inc
scas
pop
xchg
cmp
js
pop
bound
in
or
outsl
xchg
dec
aas
dec
aaa
shll
nop
loop
mov
dec
lcall
bound
jnp,pt
sub
push
cmp
cmp
and
shl
pop
jge
sub
xor
xor
in
idivl
lds
sbb
aaa
push
popf
push
lret
loop
sub
scas
loopne
loopne
fwait
push
repnz
push
cmp
jge
test
cwtl
fs
push
insb
push
pusha
sar
test
lahf
dec
mov
xchg
add
inc
clc
mov
pop
push
popa
push
lods
mov
inc
repnz
scas
push
repnz
mov
jp
mov
mov
mov
out
aas
mov
std
add
push
js
adc
sub
inc
scas
mov
cmp
in
in
sub
mov
in
mov
aad
test
mov
daa
outsb
mov
ss
scas
pushf
test
fcoms
orl
fcoms
pop
lahf
es
mov
push
jge
fstps
xor
push
mov
sbb
mov
xchg
in
push
mov
dec
mov
loopne
lods
mov
mov
loope
ds
cmp
jnp
jle
and
sti
sbb
jl
add
ret
xchg
mov
push
stos
mov
mov
mov
dec
fisubrl
dec
fs
repz
push
pusha
fs
arpl
adc
and
add
add
in
and
or
mov
dec
sbb
mov
xor
mov
mov
scas
les
aad
adc
call
popf
and
fistpll
fisubrs
or
mov
dec
sahf
sub
scas
loopne
loop
fwait
rol
and
or
pop
scas
add
mov
dec
push
in
ljmp
rcl
dec
dec
rcrl
cmpsl
mov
in
push
lahf
insb
xchg
icebp
sbb
fcmove
hlt
mov
clc
dec
sbb
adc
inc
inc
or
pop
mov
cs
aam
orb
pop
mov
addr16
dec
pop
stos
into
add
js
stos
add
inc
sbb
ljmp
cmp
sbb
and
sbb
or
push
popf
mov
lret
mov
mov
cmc
cmp
sbb
mov
data16
es
icebp
push
jb
lret
test
mov
lret
sub
adc
or
inc
adc
sarl
aaa
push
sbbl
pop
scas
sbb
mov
mov
push
lock
push
mov
mov
bound
xor
add
scas
mov
lcall
push
adc
jge
and
pop
fdivrs
sub
sub
mov
mov
es
sub
in
jle
jns
fisubs
xchg
pop
sbb
scas
cmp
into
cwtl
cltd
scas
adc
imul
in
imul
ss
mov
cld
add
pop
jl
jge
subb
mov
push
push
test
xchg
adc
xchg
in
test
push
imul
jg
mov
and
test
push
jl
mov
ljmp
int
cmp
leave
push
in
ja
mov
jmp
adc
dec
sbb
adc
loopne
fcomip
movsb
jge
sub
add
enter
test
movsb
sub
dec
jae
iret
pop
push
and
popf
call
push
clc
into
jecxz
repnz
sbb
outsb
test
sub
inc
rclb
imul
xchg
or
sbb
arpl
loopne
insl
jl
les
fs
sub
rol
loopne
pop
lods
lock
adc
mov
stos
out
idivl
repnz
mov
in
cmp
xchg
mov
cmc
je
fisttps
bound
icebp
insl
add
filds
je
xchg
loopne
jmp
inc
or
insb
add
cmp
rcll
frstor
or
sub
jno
fldl
insl
enter
ljmp
call
jmp
loop
add
popa
fiaddl
ja
jo
add
add
lds
out
outsl
dec
fistl
cmp
xor
rcll
setge
std
ja
mov
add
xor
ljmp
inc
icebp
add
test
fld
out
call
shlb
rcl
mov
fnstenv
shlb
sbb
scas
mov
ss
or
adc
sub
fcmovnbe
addl
movsl
popf
mov
mov
or
out
out
dec
cmp
sub
sbb
cmc
xor
ljmp
aas
int3
rorb
sbb
cmp
insl
push
hlt
mov
sbbb
jne
jmp
nop
lret
xchg
cmpsl
xorb
std
mov
add
daa
std
cld
and
bound
pop
scas
xorb
or
mov
push
mov
fcmovnu
fisttpl
cld
icebp
push
cmpsl
movsl
sub
std
pop
dec
adc
ret
xchg
adc
in
sti
push
sbb
xor
jge
mov
ret
or
mov
movsb
arpl
pop
les
jmp
loop
and
aaa
popf
dec
out
cld
push
adc
fsts
stos
xchg
loopne
sub
pop
add
push
lods
mov
mov
xchg
movsl
sub
pop
or
dec
sbb
xchg
mov
dec
hlt
xchg
pop
jns
lcall
dec
stos
push
push
adc
sub
jle
sbb
ja
lock
and
cmc
mov
push
cltd
and
xor
addr16
lea
imul
pusha
pop
out
cld
scas
mov
loope
addr16
data16
jne
repz
shrb
mov
jno
lret
push
mov
jp
dec
fwait
cmp
lahf
aas
dec
mov
jle
test
bound
stos
mov
in
inc
xchg
imul
jp
and
sub
leave
mov
push
enter
movsl
in
aaa
dec
out
sbb
clc
lods
xlat
div
out
pop
bound
jae
testl
add
hlt
pop
out
hlt
test
add
xchg
ret
lcall
mov
lret
pop
mov
std
adc
jg
jmp
cmc
iret
lods
out
aas
push
ret
out
stc
or
out
push
pop
enter
lods
fxam
adc
push
pushf
pusha
cltd
icebp
insb
hlt
shrl
fcoms
mov
les
dec
jmp
jp
scas
jecxz
sti
jl
inc
int
leave
xchg
cmp
hlt
clc
inc
fbstp
jb
stc
in
cvtpi2ps
cmpsb
dec
or
dec
pop
mov
out
add
adc
mov
movsb
insl
xchg
loope
iret
test
in
iret
sarl
jbe
or
int3
scas
dec
push
mov
xlat
aam
popa
jo
inc
xor
sahf
out
xlat
dec
xchg
sub
sub
mov
out
test
mov
mov
ret
inc
or
icebp
mov
push
jmp
ds
jbe
jecxz
aam
xchg
lret
fidivl
jg
cli
andl
ret
addb
or
outsl
test
insl
xchg
sub
jae
aas
bound
mov
shr
jo
repnz
jne
push
adc
enter
cmp
xchg
scas
mov
leave
cmp
fsubl
xchg
adc
push
loop
jbe
int
mov
pushf
scas
sub
sbb
pushf
jnp
daa
push
leave
test
pop
popa
aas
hlt
xlat
push
pushf
test
sbb
push
push
fimull
adc
pop
sahf
inc
mov
sub
cwtl
dec
pusha
lods
mov
sbb
sub
mov
sbb
dec
cmp
les
pop
inc
jp
push
rcrl
pop
inc
arpl
mov
arpl
or
fdivrs
call
xor
out
sbb
push
mov
daa
pusha
add
movsb
sahf
sub
sub
or
inc
pushf
inc
cmc
inc
subb
add
cld
push
js
lret
sub
adc
add
scas
mov
movsl
enter
hlt
mov
jmp
sbb
testb
ficompl
sbb
insb
sbb
sub
insl
inc
call
test
imul
adc
aaa
xchg
xor
shl
or
enter
pop
jne
leave
insl
loop
sub
mov
mov
push
nop
and
mov
fs
rcrl
out
shll
jl
pop
sub
adc
dec
aam
mov
jnp
dec
push
out
test
inc
pop
push
mov
dec
cmp
cmpsl
shll
inc
xor
mov
xor
stos
and
testl
lds
lods
test
dec
cld
xor
pusha
imul
or
test
imul
dec
ja
jp
pop
sbb
add
das
sarb
std
pop
lock
leave
xlat
notb
xchg
sbb
pop
xor
pusha
mov
rcl
ja
lds
inc
mov
push
jbe
dec
in
mov
lcall
or
ds
xchg
fldcw
hlt
or
xchg
xchg
and
sbb
dec
push
jge
pop
mov
and
cld
lcall
sahf
xchg
mov
mov
adc
int3
and
jl
mov
adc
out
insb
and
sub
insl
addr16
mov
les
pop
dec
dec
xchg
rorl
sbb
dec
movsl
test
pushf
orb
cmp
sbb
test
sbb
call
add
je
adc
mov
and
pop
das
mov
jbe
into
cmp
dec
ljmp
leave
jp
cmpsb
cmp
inc
xchg
jo
xor
mov
mov
lods
cmc
and
sbb
leave
sub
push
pop
mov
rcrl
mov
fists
les
mov
mov
aam
repz
mov
inc
sahf
repz
mov
xchg
daa
stos
aam
pop
repnz
mov
xor
jae
sti
imul
pop
mov
jge
pop
dec
fdivrl
push
in
mov
insb
xor
test
and
cmp
lods
into
mov
xor
loop
in
hlt
or
mov
dec
cmp
push
loope
jecxz
xchg
mov
push
or
jmp
push
mov
bound
adc
aas
sarl
sarl
lret
mov
iret
jbe
add
jmp
mov
repnz
inc
xor
sbb
mov
fmuls
rcll
jb
icebp
xor
fbld
xor
test
pop
mov
jecxz
jg
adc
fisttpl
subl
test
fstps
jg
mov
mov
ss
rorl
jbe
ret
int3
sbb
test
push
pop
adc
jns
and
inc
test
mov
dec
or
xchg
pop
aam
lret
out
and
int3
lret
aad
xor
mov
scas
push
lret
aaa
iret
dec
fsubl
adc
outsl
shll
mov
jle
sub
pushf
test
and
add
adc
sub
push
jbe
xor
sbb
sub
cli
js
add
shl
notl
adc
dec
icebp
push
jo
mov
outsl
pop
repnz
jl
pop
int
repz
mul
imul
icebp
outsb
cmpsl
mov
mov
pop
pop
dec
aam
jmp
cmc
icebp
scas
inc
add
leave
dec
sbb
mov
ja
leave
mov
fisubs
call
push
test
adc
mov
sub
mov
les
sbb
xchg
fsubs
jnp
in
mov
push
xor
rcrl
sarb
jbe
and
xor
push
test
sarb
jmp
cmpsb
unpckhps
mov
mov
rcll
scas
and
out
dec
jp
cli
pop
mov
inc
xor
test
xlat
insl
mov
insl
or
int3
daa
dec
test
std
adc
and
ljmp
dec
jmp
rcll
pop
aaa
into
out
sub
cltd
sub
in
mov
mov
in
xchg
addb
bound
inc
dec
xor
data16
mov
inc
out
popf
cmp
or
movsl
ds
popf
test
lds
jp
mov
sti
iret
pop
ljmp
pop
ret
divb
mov
pop
test
sbb
adc
jl
mov
mov
adc
jmp
dec
push
inc
push
popl
loop
jno
lods
popf
xlat
pusha
dec
dec
imul
pop
repz
mov
cmpsl
push
sbb
pop
bound
push
imul
outsl
mov
adc
pop
hlt
mov
xchg
lahf
test
bound
push
or
cmpsl
lret
lods
ficoms
adc
mov
cwtl
push
mov
fdivrl
das
jecxz
lods
or
ljmp
sub
mov
sbb
pop
xor
test
rcrb
push
ror
ljmp
test
jo
cld
bound
inc
rorb
xchg
mov
add
adc
sbb
mov
push
je
mov
dec
push
aas
jno
out
add
fst
ljmp
daa
or
fisubrl
popa
pop
cmp
fbld
test
movsl
out
minps
cli
xchg
pop
adc
ds
pop
call
fisubrs
sub
repnz
mov
in
aas
add
sub
mov
push
outsl
push
sub
adc
sbb
pop
jmp
sbbl
xchg
add
push
fld
mov
imul
sbb
dec
dec
xchg
mov
pop
mov
xor
cld
xor
xor
dec
xor
sbb
test
add
jg
mov
in
mov
jo
add
push
or
nop
in
dec
in
mov
cmp
jecxz
or
out
jae
out
movsl
mov
enter
test
xchg
fnstenv
jecxz
mov
mov
inc
mov
out
pop
out
and
push
mov
add
and
aaa
push
das
insb
addb
mov
xor
sub
push
in
xor
lahf
mov
pop
popf
lret
stos
xor
mov
addr16
imul
pop
shr
and
fbld
outsl
clc
sub
jno
lahf
test
pushf
xchg
aas
push
and
or
adc
rolb
lret
push
push
jae
gs
fneni(8087
cld
cmp
fucomi
jge
fsubr
test
sbb
adcl
sub
xor
jnp
xor
pop
aas
adc
push
outsl
movb
out
popf
aaa
inc
push
js
and
xchg
mov
inc
test
shll
sbb
dec
mov
lods
inc
and
in
ja
movsl
punpckhwd
push
jb
adc
aas
xor
loopne
cmp
repnz
xor
inc
loopne
mov
mov
mov
repnz
into
bound
aam
inc
aas
cmp
mull
mul
lret
jns
sbb
popa
mov
xchg
sarb
xor
roll
cltd
fimuls
cmpsb
xchg
push
cmc
xchg
inc
mov
int
jmp
mov
sti
lahf
add
and
cmp
mov
sbbb
dec
inc
cltd
aad
ljmp
adc
aaa
fbld
call
shll
pop
sahf
roll
xchg
adc
not
imul
jecxz
loopne
inc
aas
xor
push
shlb
dec
jge
shll
lahf
loopne
mov
pop
ss
add
dec
mov
dec
cmp
scas
aad
xchg
and
es
or
cs
xor
jmp
leave
or
adc
dec
add
xor
call
aad
and
gs
pop
arpl
pop
lods
lahf
and
rolb
je
xchg
mov
mov
sub
icebp
add
add
repz
cld
test
push
push
out
pusha
ret
arpl
mov
test
stc
stc
repz
mov
lcall
sbb
in
out
andl
loop
dec
imul
lret
sarl
xchg
dec
comiss
dec
mov
xchg
test
shll
jle
test
sub
shrb
cld
pop
adcl
mov
cmp
rcll
sbb
and
or
rol
lods
bound
add
xchg
ljmp
and
xor
adc
repz
mov
jl
push
sub
test
cmp
add
fwait
imul
shrb
sbbb
repnz
or
or
stc
jb
rcr
mull
es
int3
test
bound
test
cmpb
xlat
mov
cmp
int3
mov
xlat
inc
add
enter
les
nop
jp
add
pop
pushl
and
in
ds
repz
dec
sbb
xor
jb
lret
popf
mov
imul
sub
sub
int3
mov
add
aad
sbb
xor
fistpll
jmp
lahf
ret
ret
inc
daa
xor
pop
mov
adcb
add
daa
pushf
jb
and
push
aad
je
fisttpll
test
in
pop
mov
je
mov
shlb
mulb
adc
xorl
mov
cwtl
lea
ljmp
fsubrl
mov
inc
mov
push
dec
sbb
int
cli
xchg
fsubl
cmp
popf
adcb
iret
mov
in
inc
clc
stos
push
xor
in
mov
sub
xor
insb
lock
mov
dec
leave
icebp
je
repnz
push
push
clc
sbb
movsl
pop
push
pop
pop
or
sub
sub
insl
fisttps
lahf
add
sub
loop
pusha
and
fildll
ficompl
insb
sub
mov
lock
sbb
sbb
mov
lcall
icebp
sahf
jnp
add
jae
inc
les
push
ficompl
dec
cmpsl
adc
jmp
or
sbb
imulb
adc
cmp
sub
std
repz
test
add
lods
aaa
pop
xchg
les
ds
outsb
out
mov
dec
jne
rcrl
push
ds
gs
xchg
inc
adc
or
cld
mov
xor
leave
jge
sub
outsb
cmc
sub
aaa
out
inc
xchg
adc
mov
inc
adc
rclb
into
fistl
cmpsb
xor
sub
insb
mov
outsl
pop
push
test
in
mov
out
jg
nop
lahf
cli
aas
test
mov
inc
in
jo
jmp
into
pop
xor
or
or
arpl
and
addr16
imul
xchg
ja
inc
popa
jmp
out
test
into
fldcw
lds
jae
lret
inc
dec
jp
adc
and
outsb
xchg
rcrl
lods
sarb
or
adc
sahf
mov
pop
sub
rolb
jo
decl
add
in
jno
lret
inc
xrelease
repz
daa
push
jbe
out
adc
mov
xor
cs
das
dec
mov
inc
scas
dec
mov
paddusw
or
sub
stc
jns
cmp
ljmp
xchg
adc
mov
xchg
xor
inc
jo
pop
and
addr16
dec
test
mov
sub
roll
push
inc
cmp
xchg
xor
rcrb
rclb
repz
and
das
in
pop
sahf
xchg
mov
fdivp
andl
repnz
or
divb
push
or
pop
test
jmp
jmp
pop
icebp
cmp
dec
lret
rcr
push
push
fisubl
adc
xchg
jl
ficoms
adcl
add
inc
das
adc
ds
dec
xor
insl
stc
xor
loope
into
add
jg
and
in
lahf
icebp
sub
push
lret
xor
mov
jmp
imul
cmp
push
pop
jp
popf
mov
jp
sbb
lods
out
pop
or
sub
jl
mov
push
adc
xor
mov
add
jp
pop
cltd
scas
loop
loope
push
cwtl
mov
pop
mov
inc
adc
push
add
fs
add
mov
sbb
push
push
in
adc
lock
pop
xlat
sbb
cld
insl
jmp
repz
insb
out
or
inc
imul
mov
pop
out
and
stos
sbb
push
aaa
lcall
cld
mov
test
inc
test
and
insb
gs
aas
cmp
stc
xchg
pop
dec
jnp
leave
mov
inc
std
xchg
xchg
and
push
dec
int
and
sub
stc
pop
js
cs
mull
into
cltd
dec
mov
xor
sub
das
push
jge
psrlq
cwtl
jbe
jp
ds
push
jno
xor
cmp
add
ljmp
adc
in
pop
mov
pop
push
adc
aad
arpl
xchg
lret
and
into
jo
andb
xor
and
jbe
inc
sbb
xor
adc
gs
aad
mov
lea
sbb
daa
jp
push
mov
push
xor
jp
sub
sahf
and
jl
push
inc
dec
data16
push
cwtl
mov
cld
xchg
sub
addl
push
jno
lods
push
add
sub
int
pop
das
movsl
stos
sub
repz
jle
aas
mov
sbb
inc
in
sbb
pusha
dec
repnz
orb
dec
sub
jbe
fimull
andl
xchg
mov
add
imul
ljmp
cwtl
paddsw
aad
jmp
loop
fbld
mov
call
test
and
jl
insl
mov
fwait
pop
fiadds
fimuls
stc
cmpsb
pop
pushf
stc
or
out
push
push
mov
mov
adc
cwtl
pop
test
pop
or
clc
cmp
mov
lods
ja
iret
pushf
fbstp
xchg
mov
enter
and
inc
scas
cmc
jmp
shl
xchg
das
fdivr
push
adc
sbb
pop
cmp
mov
pushf
pop
into
pop
jbe
ds
movsb
call
inc
andl
adc
or
pop
out
popf
mov
enter
leave
pop
dec
movsl
cmp
inc
sub
cmpsb
cltd
adc
das
out
inc
subl
push
pop
cmc
loopne
mov
dec
sbb
push
dec
sub
dec
xor
xchg
mov
sahf
out
jns
pop
mov
pusha
xchg
xchg
les
rcrb
push
push
pop
mov
xlat
inc
inc
bound
mov
mov
sbb
dec
stos
fsubl
dec
loope
fdivrl
pop
push
outsb
xor
pop
sbb
inc
xor
jo
rolb
popa
inc
pop
pop
mov
fisubrl
stc
adc
mov
add
loopne
or
inc
cli
inc
or
add
ret
fimuls
add
inc
push
in
pop
xor
cmp
cmp
cmc
test
mov
iret
leave
xchg
mov
fimuls
and
cmp
dec
pop
in
xor
aas
pop
push
add
adc
mov
jmp
adc
dec
and
inc
jb
daa
loopne
outsl
sbb
fstenv
mov
dec
jle
jg
stc
mov
sbb
sub
xor
imul
lock
ja
pop
loop
jmp
mov
push
jnp
cltd
je
in
daa
jb
loope
adc
test
push
mov
aas
mov
pop
pop
out
std
jg
dec
nop
cmpsb
mov
repz
mov
aaa
test
jp
dec
cs
cmp
push
sub
insl
inc
in
outsb
pop
ds
sbb
adc
inc
or
test
jb
xor
cltd
addb
cmpb
push
cli
aad
add
pop
mov
lock
js
pop
js
lret
cmp
mov
xlat
neg
cmpsl
les
inc
jno
cmpsb
bound
push
inc
inc
jne
fldt
and
and
scas
cmp
adcb
aam
lods
jo
jp
mov
sbb
sahf
cmp
js
adc
adc
adc
cmp
xlat
lods
dec
mov
adc
loopne
pop
rorb
adc
int
clc
inc
mov
inc
push
fmulp
sub
xor
cwtl
lods
imul
and
icebp
inc
fs
push
lcall
xchg
movsb
lds
xchg
enter
addl
or
int3
sub
xchg
pop
xchg
sub
test
fs
add
andl
ljmp
cmpsl
push
pop
lea
call
frstor
push
push
pop
xchg
fnstenv
out
adc
cmp
mov
or
add
mov
fstpt
in
push
ret
pusha
and
jge
js
cmpsb
adc
push
push
mov
test
mov
sbb
pop
lret
mov
adc
jg
push
orb
out
pusha
xor
jb
pop
or
xlat
adc
lcall
jp
inc
lahf
aas
ficompl
xchg
mov
das
mov
add
sub
adc
aaa
fcmovnu
xchg
xor
jge
cli
nop
jl
in
pop
push
fistl
push
hlt
mov
aas
hlt
push
jbe
mov
xchg
cmp
push
xchg
test
adc
das
ss
jp
jnp
fdiv
dec
fwait
movsl
xchg
daa
mov
sbb
cmpsl
push
cld
ds
sub
mov
cmpsl
mov
cltd
pushf
mov
adc
out
mov
fisttps
mov
mov
pop
cmp
sbb
sbb
fiadds
cmpsl
ljmp
or
pop
pop
add
loopne
mov
subl
dec
mov
or
sti
lods
mov
pop
cmp
fsubs
inc
sub
fdiv
mov
mov
push
add
popa
ss
pop
pop
pop
xor
lahf
sub
jge
lahf
pushw
pop
arpl
fldcw
outsl
cs
or
adc
sub
and
mov
repz
jge
xchg
adc
cmpsl
xor
iret
cld
jle
cmp
cli
add
out
pop
out
leave
fwait
sub
gs
jl
push
or
xchg
mov
jns
in
pop
jnp
push
in
je
xor
xchg
sbb
push
sub
push
das
fldcw
scas
push
xchg
mov
and
xchg
imul
fstpt
mov
mov
cmpsb
xor
jmp
sbb
orb
push
push
push
lea
xor
jecxz
mov
mov
push
adc
cmpsb
dec
lret
mov
cltd
enter
mov
xor
addr16
cld
gs
lods
cmpsb
ds
cmp
mov
rcll
roll
cmpsl
cmp
or
xlat
mov
dec
addl
xchg
sub
insb
cmp
adc
aaa
mov
pop
jecxz
rorb
jae
push
fistps
push
nop
xlat
lret
stc
mov
enter
add
rcl
mov
mov
ficoml
pop
adc
mov
sbb
mov
dec
jae
stc
jecxz
cwtl
cmpsb
xorb
movsl
shrl
sub
test
adc
adc
out
jne
clc
test
in
jno
jp
push
fcomps
popf
insl
adc
arpl
inc
pop
ja
mov
xor
bswap
lock
fs
in
enter
es
pop
pop
cld
stos
pop
jg
adc
jb
shrl
fnstsw
repz
pushf
lcall
test
cmp
ret
xor
cwtl
push
in
mov
cmp
pop
jmp
inc
pop
push
fwait
xor
pushw
dec
aam
pop
ret
mov
popa
sbb
or
mov
pop
mov
das
ljmp
inc
ss
sbb
mov
sarl
mov
pop
mov
repnz
andl
stc
loope
and
fidivl
push
push
test
or
nop
out
jb
jo
jmp
pop
in
mov
int3
inc
add
sub
push
out
mov
dec
negb
dec
negl
inc
lea
cmp
pop
sub
repnz
sbb
sub
scas
xor
loope
pop
pop
test
outsb
sahf
sub
xorb
lods
jnp
mov
xorl
ljmp
mov
test
aad
dec
cmpsl
movsb
mov
adc
mov
pop
aad
dec
jnp
jns
repnz
enter
or
int
ficompl
aas
ds
pop
in
fwait
lock
outsl
dec
test
fwait
data16
inc
into
push
flds
pop
mov
pusha
dec
lret
rolb
pop
add
cs
pop
daa
outsb
cld
mul
stos
outsl
mov
push
add
imul
imul
mov
inc
stos
lret
xor
stos
push
mov
cmpsl
xchg
dec
rcrb
pop
outsl
push
enter
out
clc
fcmovnu
call
cltd
das
adc
bound
dec
ret
mov
rorb
jp
lahf
jae
fldenv
aam
and
pusha
fucomi
out
loope
adc
sbb
mov
sbb
sub
mov
cmp
stos
outsb
adc
lahf
sbb
xchg
lea
orb
xchg
repz
popa
xchg
jo
mov
dec
dec
mov
fwait
xchg
mov
call
inc
or
aas
dec
ss
sub
enter
xlat
sbb
pop
popf
or
dec
fdivl
dec
pop
or
stos
push
imul
fmuls
lock
daa
push
mov
lock
enter
dec
adc
pop
mov
push
stos
insb
push
call
call
mov
aam
int
js
gs
xor
outsb
movsl
pop
call
jne
mov
adc
test
bound
arpl
push
xchg
cmp
fcomp
fstpl
mov
test
mov
inc
push
or
stc
cli
adc
mov
jo
cmpsl
mov
js
test
out
push
add
int3
mov
jle
pop
add
cmpsl
adc
fisubl
xchg
jecxz
adc
lcall
pop
and
or
in
addl
outsl
pop
xchg
push
cmpl
dec
xor
lods
adcb
inc
clc
xor
popa
jb
loop
fwait
insb
stos
cmp
mov
mov
lret
push
testl
cmp
outsb
xchg
in
gs
push
popf
push
lahf
cmpsl
cmp
pop
xor
jl
mov
adc
stc
ja
test
fnstsw
call
cmpsl
rol
add
adc
pop
xchg
les
push
popf
pop
jbe
fwait
adc
icebp
imull
jle
imul
les
rep
outsb
movsb
adc
sbb
xchg
mov
and
cmc
cmpsl
mov
in
cli
sbb
or
js
addl
test
or
jae
lcall
or
cmc
push
push
add
inc
leave
daa
and
scas
in
push
arpl
pop
jbe
mov
test
xor
ret
movsl
pop
push
dec
jno
push
jmp
cltd
js
movsl
jo
jns
imul
sbb
xchg
xor
ret
inc
push
cmp
pop
fs
rcr
in
rorb
xchg
mov
adc
jmp
lcall
sub
out
iret
movsb
cwtl
aam
cli
sahf
imul
mov
cwtl
int
sbb
lods
push
add
pop
sub
fcomps
fildll
sbb
pop
jns
xor
das
aam
frstor
movsb
pop
or
cwtl
add
jl
insb
lods
mov
fildl
xchg
mov
aaa
int3
push
lock
ljmp
dec
lods
repnz
clc
cs
nop
int
and
sarl
mov
shll
shl
scas
hlt
add
xchg
add
or
mov
mov
insl
inc
test
cmp
jmp
icebp
sbb
push
pop
push
and
add
xor
mov
inc
pop
push
int3
aas
imul
sets
rcrb
mov
addl
leave
shrb
sub
jmp
out
shlb
push
ss
jbe
repnz
rcl
xchg
ds
dec
xlat
loope
xchg
push
push
cmp
lds
gs
xchg
mov
enter
lret
jbe
movsb
dec
and
nop
cmpsb
mov
aad
fwait
mov
out
iret
aaa
mov
fldl
push
mov
and
or
jge
mov
adc
push
into
insl
mov
sbb
sti
push
out
add
jmp
icebp
fstl
bound
data16
add
pop
in
adc
ljmp
push
lret
sbb
pusha
jns
nop
outsb
mov
xor
sub
sbb
adc
subl
mov
cmp
mov
mov
in
iret
and
jp
in
push
aas
and
nop
and
lock
cmpsl
adc
int3
dec
mov
js
sbb
and
enter
test
lcall
hlt
out
mov
xor
xchg
jae
insb
xchg
sub
mov
mov
loopne
mov
bound
call
fisubs
jne,pt
add
mov
pavgb
imul
pusha
adc
sub
inc
negb
push
mov
dec
dec
jl
dec
les
adc
call
and
cmp
call
sub
pop
shl
repnz
push
or
mov
xchg
mov
dec
test
cli
inc
sub
sahf
sahf
imul
cmp
jo
jbe
sbb
mov
jmp
dec
sbb
shlb
fisttpl
mov
push
pop
flds
fisttpll
lods
xor
adc
je
sbb
or
cmp
add
sub
push
sarb
stos
jl
stc
lret
mov
fisubrl
adc
scas
xor
or
mov
xchg
and
cltd
mov
fcmovnbe
imul
xchg
cmpsb
push
bound
and
mov
push
cltd
xchg
ds
and
mov
out
pop
push
pop
jecxz
mov
mov
xchg
jb
lock
jno
dec
cld
xchg
inc
or
in
mov
add
cwtl
stc
sbb
mov
dec
fisubs
mov
pop
or
push
ljmp
mov
or
hlt
inc
cltd
xor
in
xor
sub
leave
push
inc
xchg
jns
push
das
shlb
rolb
movsb
adc
test
cmp
sub
xchg
loopne
inc
sub
or
aad
mov
pop
mov
xchg
jno
popa
scas
std
sub
pop
lea
shr
shrb
dec
xorl
into
adc
into
sub
sbb
push
mov
xor
and
xchg
push
ret
dec
ficoml
inc
pop
jae
loop
cmp
idivl
or
push
popa
in
mov
jns
in
adc
hlt
cs
fcmovb
fisubs
inc
test
ja
jge
and
outsl
xorl
into
xlat
mov
sub
sar
add
pop
push
mov
fnstsw
jb
or
add
add
leave
xor
pop
mov
xchg
inc
cwtl
jmp
mov
jp
cwtl
sahf
loopne
mov
loopne
pop
mov
xchg
inc
pushf
cltd
and
sub
xchg
mov
inc
loope
and
adc
adc
sbb
pop
aam
in
das
insl
mov
les
pop
sbb
fstpl
fwait
in
or
push
punpckldq
adc
and
mov
sub
jp
idivl
add
stc
in
icebp
mov
shll
in
ja
xor
in
sbb
fsubrl
das
and
orl
lret
sarl
sub
ret
push
in
mov
pop
push
mov
lcall
cwtl
push
outsb
popf
mov
lock
sub
sub
mov
scas
lahf
shll
data16
mov
and
and
loop
add
lods
xor
sti
sub
or
shll
pop
ret
pop
je
jl
imul
leave
fwait
inc
mov
jo
pop
sbb
ja
popa
popa
inc
lret
ljmp
sbb
icebp
jle
jl
or
fwait
ret
ret
mov
es
aad
dec
pusha
lods
inc
mov
xor
pop
add
jbe
sbb
test
in
lret
inc
sbb
dec
movsb
lret
sub
sti
movsb
xor
ds
movsb
add
shrl
rol
push
push
cmp
mov
inc
cmp
push
pop
cltd
mov
add
rcll
mov
inc
dec
ss
push
push
adc
rcrl
repz
pop
adc
and
and
add
sbb
cmc
sbb
mov
outsl
pop
and
cmc
jle
out
and
sbb
xchg
xor
mov
ficoml
std
jno
xchg
and
push
xor
stc
loop
sbb
loop
mov
lods
nop
mov
mov
scas
dec
mov
adc
add
iret
cli
out
into
pop
mov
xor
mov
pop
int
fisubrs
test
movmskps
sub
adc
ja
mov
lock
mov
dec
into
mov
clc
xor
std
out
pop
arpl
jno
inc
push
add
mov
cwtl
sti
arpl
inc
mov
push
mov
scas
add
dec
adc
push
adc
outsl
test
nop
push
pop
lret
lret
adc
lcall
lds
or
dec
jbe
push
inc
clc
pusha
jb
xchg
and
test
push
pusha
jbe
xchg
adc
int
push
xchg
adc
sub
insb
lods
fbstp
pop
lds
sbb
fwait
enter
shll
mov
pop
mov
je
mov
int
mov
xor
inc
mov
fldcw
cmp
xor
push
fwait
push
test
push
dec
into
and
adc
cld
pop
hlt
clc
add
fsts
je
or
mov
stos
add
in
stc
lds
pop
inc
cmpsb
cmc
sbb
pop
push
xchg
lea
lock
push
fmull
lds
and
dec
jmp
cld
mov
xchg
fists
jl
mul
outsb
clc
cmc
sbb
lahf
das
jge
pop
mov
jns
mov
mov
adcl
mov
ficompl
push
clc
pop
inc
ds
push
ret
cmp
mov
mov
scas
iret
repnz
incb
movq
mov
incb
pop
pop
test
scas
jne
push
sub
aam
enter
insl
mov
imul
sarl
test
cmpsl
sub
push
and
inc
fadd
cmp
insb
js
movlhps
mov
mov
test
rcl
lret
and
ja
jle
sbb
mov
repnz
test
xor
jmp
outsb
jp
push
pop
mov
mov
pop
push
outsb
dec
push
xchg
arpl
or
pop
push
jae
jo
imulb
inc
js
repnz
sbb
jno
pop
pop
cli
inc
fmuls
test
pushf
mulb
clc
in
sbb
sbb
jns
scas
or
cltd
sub
cld
cmp
scas
and
xor
and
push
outsl
add
and
ror
and
repnz
out
out
mov
xchg
xchg
cmp
bound
les
and
stos
hlt
xchg
sub
fdivrs
leave
sub
cmpsl
sub
stos
scas
dec
ss
push
shl
shr
jbe
dec
adc
int
std
inc
aam
xor
dec
sub
lcall
inc
mov
mov
add
lds
cmp
pop
mov
lds
mov
push
add
dec
clc
cmp
lret
out
outsl
test
out
leave
insl
add
popa
adc
xchg
std
cmp
mov
and
xchg
xor
add
sahf
xchg
xchg
int3
clc
mov
test
add
push
cld
mov
adc
xchg
popf
fcmovne
inc
sub
js
ljmp
adc
mov
imul
fstps
orb
mov
xlat
out
nop
pop
mov
addl
mov
mov
pop
sbb
stos
iret
pop
jb
lods
cmp
or
int3
into
push
jge
clc
mov
or
jbe
xchg
push
fcoms
in
push
inc
jnp
mov
dec
ljmp
data16
and
and
loop
mov
jne
or
mov
movsw
xchg
sbb
jbe
jg
bound
dec
inc
adc
or
or
mov
sbb
aad
push
ret
mov
mov
stos
mov
out
push
into
test
dec
sbb
popf
mov
jo
sub
mov
push
or
ficoml
and
inc
movl
mov
inc
cli
dec
movsb
and
test
imul
out
cmp
and
cmp
inc
mov
lahf
in
hlt
js
jne
repnz
xchg
lock
arpl
loop
fsts
xor
outsl
stc
lret
xchg
and
js
hlt
es
pop
pushf
mov
js
cwtl
add
jl
cld
popa
fidivl
rcl
sbb
mov
lods
sub
sbb
inc
lods
jno
sbb
daa
fwait
test
sbb
das
nop
popf
pusha
inc
gs
mov
mov
jmp
jmp
rcrb
je
pop
fistps
fdivp
sti
mov
pop
push
gs
aam
mov
loope
iret
aam
sbb
jne
inc
jns
inc
push
ror
data16
mov
mov
test
ret
or
lret
mov
fcompl
mov
inc
out
lret
jge
scas
sti
jo
lret
mov
loopne
jns
and
cmc
xchg
jp
jbe
repnz
pop
or
add
jecxz
repnz
xlat
mov
dec
mov
lahf
mull
lret
sub
repnz
cmpl
jmp
out
outsl
arpl
push
jecxz
imul
or
jo
hlt
stc
sub
mov
xchg
inc
fsubrp
movsb
jns
xchg
test
outsb
daa
lea
les
or
dec
mov
jbe
hlt
loope
jb
cltd
cmpl
sbb
lods
in
mov
std
cmp
add
jbe
sub
scas
mov
cmp
hlt
jnp
lods
sub
test
xor
sahf
jo
into
lock
push
sub
sub
lahf
pminub
push
and
fsubrs
mov
stos
xor
loope
das
and
cmp
loopne
or
in
push
jo
fcomip
cwtl
rcrb
sbb
add
adc
scas
insb
pop
xor
test
dec
insl
shlb
aam
shrb
pop
movsb
pop
xchg
and
fs
mov
stc
scas
into
xor
rol
dec
pop
dec
mov
or
repnz
jne
fidivl
mov
push
stc
cmp
cltd
and
inc
gs
in
movsl
negb
jbe
mov
icebp
test
jge
rorl
mov
decl
mov
imul
jg
or
cwtl
push
jns
xchg
xchg
xchg
sub
mov
sahf
jp
xlat
jg
mov
mov
or
fdivrs
cmp
stos
imulb
pop
jae
lea
inc
ret
in
push
cwtl
and
pusha
decl
mov
cli
inc
mov
repz
pop
pushf
lods
inc
or
adc
repz
jne
outsl
mov
mov
and
rcrb
mov
or
mov
jb
repnz
push
dec
mov
cli
add
cwtl
cmpsl
and
jge
dec
icebp
xchg
dec
jecxz
lods
xchg
or
jle
icebp
push
sub
faddl
ja
arpl
lds
js
sbb
sbb
mov
inc
cmp
or
mov
jbe
movsl
ja
mov
dec
jae
jp
aad
into
dec
adc
aam
push
stos
push
test
stos
data16
mov
in
and
sbb
xor
in
sbb
and
imul
es
mov
xchg
mov
and
mov
xor
jp
inc
out
fidivs
int
pop
xchg
ret
into
push
mov
pop
lock
aas
scas
inc
add
and
inc
in
scas
rcrb
outsl
cmp
adc
int3
in
cli
and
sub
scas
imul
cmp
stos
shlb
ret
jbe
or
mov
shrb
dec
mov
scas
or
sbb
pusha
or
inc
aaa
xchg
inc
mov
xchg
lret
je
pop
in
adc
jnp
cwtl
fwait
in
inc
mov
aam
dec
jmp
clc
mov
nop
imul
out
xor
jae
test
mov
dec
dec
daa
mov
mov
les
mov
cltd
mov
dec
mov
or
sbb
shrb
movsb
scas
push
iret
sub
ljmp
int
fcoms
and
outsb
fildl
sbb
pop
mov
idivl
push
sub
mov
shrl
push
jge
scas
pop
xor
mov
xchg
filds
test
adc
adc
xor
xchg
push
leave
fdivrs
add
shr
push
mov
scas
adc
jmp
daa
sub
aam
mov
or
or
iret
into
adc
push
out
mov
sub
in
inc
dec
fs
fildll
hlt
add
xor
clc
xchg
xchg
inc
and
dec
int
vandnpd
cmp
push
ret
mov
xor
cmc
insl
add
pop
mov
cmp
int
push
jo
xchg
or
jmp
loopne
mov
jge
or
rcl
fdivrs
pop
repz
mov
xor
inc
mov
rdpmc
and
call
iret
xor
fdivrl
and
outsb
xor
sbb
cli
orb
ret
fisubs
or
rorl
mov
xchg
add
cmp
repnz
jp
imul
jl
adc
cmp
xchg
gs
sbb
movsl
in
add
sbb
lock
and
icebp
or
fidivrl
aaa
xchg
std
inc
aaa
test
repz
dec
mov
push
dec
repnz
cmp
repz
xchg
mov
jno
sti
aad
jge
jge
fistpl
cltd
mov
xchg
xchg
fcomps
pop
jbe
add
add
mov
add
std
gs
popa
sbb
cmpsl
lret
push
mov
jne
mov
ret
jbe
fdivrl
jle
ljmp
icebp
mov
iret
mov
mov
push
inc
test
mov
ja
in
filds
add
adc
lods
fs
add
ja
pop
int
mov
push
scas
push
sub
mov
pop
pop
adc
out
push
out
jne
mov
sbb
ficoml
push
leave
loop
lret
mov
push
push
dec
inc
pop
mov
dec
rclb
cmpb
cmpsb
repnz
ret
pop
sub
dec
ja
out
jle
pop
mov
sub
scas
jmp
mov
lods
popa
adc
clc
jns
ds
js
scas
dec
enter
xchg
stc
cmp
test
pushf
xchg
xor
mov
jns
dec
popf
xchg
lret
ds
loope
bts
cmp
lods
sbb
sub
inc
push
cmp
mov
mov
sub
stos
sbb
dec
jl
ljmp
or
add
sahf
mov
and
out
push
mov
ficoml
push
mov
push
int3
daa
sbb
stos
ret
add
dec
adc
jmp
push
cld
cwtl
mov
sub
inc
js
iret
js
daa
stos
add
arpl
ret
sbb
inc
and
std
or
adc
pop
jl
out
aad
adc
jns
sti
or
sbb
aad
mov
std
mov
enter
mov
loop
mov
push
aad
cs
dec
arpl
sub
and
pop
gs
add
icebp
mov
dec
dec
rcll
jno
dec
pop
lcall
or
into
pusha
les
adc
out
push
pushf
xorl
push
push
adc
mov
push
nop
sub
fistps
adc
adc
mov
test
xorl
aas
sbb
push
xchg
mov
mov
enter
mov
mov
mov
cmc
fwait
andb
xor
clc
sti
insb
loope
dec
mov
stos
jae
outsl
iret
cmp
add
popf
or
jge
xchg
js
xchg
js
stos
mov
jno
xchg
arpl
loope
rolb
iret
adc
mov
sub
pop
ficompl
or
cmp
loop
mov
adc
inc
dec
sbb
push
dec
scas
xor
jle
and
cmp
mov
loopne
jb
ss
cmpsl
mov
jno
and
jge
or
xor
sbb
jbe
daa
mov
gs
cld
inc
aam
push
xchg
sub
sub
sub
subb
and
lock
pop
sahf
mov
dec
xchg
sbb
loopne
or
adc
mov
push
mov
shr
imul
arpl
icebp
push
ja
xchg
jecxz
and
por
ja
loop
ficoms
into
or
xchg
imul
js
je
cmp
lea
jbe
loop
or
mov
xor
pop
cmp
inc
mov
out
ja
outsb
nop
mov
mov
clc
daa
or
mov
lock
xchg
xor
add
add
adc
dec
ret
cmc
popf
mov
xor
push
dec
fstl
adc
cmp
xor
sub
add
push
dec
or
enter
jle
adc
dec
orb
repnz
jmp
gs
lock
sub
loop
pop
mov
add
dec
dec
dec
jge
pop
pop
pusha
jmp
insb
mov
push
outsb
shrb
push
push
movsl
pop
sbbb
and
repnz
lock
xorl
daa
in
repnz
imul
and
xchg
jno
aad
fists
je
leave
jp
pop
pushf
in
stc
cli
rolb
loopne
cmpsb
pop
data16
clc
or
scas
push
rclb
shlb
dec
cwtl
jb
or
addr16
cltd
ja
fstpt
jno
aam
lock
mov
mov
dec
pop
add
sbb
or
fbld
leave
dec
imul
pushf
imul
in
xor
add
xor
or
icebp
test
fisubl
push
fsub
aas
sbb
loope
cli
mov
fnsaves
pop
fstpl
ret
mov
dec
jbe
leave
push
cld
scas
rclb
in
adc
ret
mov
inc
sub
out
xchg
push
fsubrl
ljmp
fbstp
icebp
mov
mov
icebp
inc
and
xor
sbb
shll
xchg
cmp
mov
lret
je
dec
and
xor
pop
adc
imul
mov
or
adc
and
jmp
pusha
fimull
scas
fprem
inc
or
mov
sbb
mov
iret
std
stos
push
dec
mov
sbb
adc
mov
push
pop
push
xor
in
lahf
xor
xorb
out
cltd
cs
cmp
loopne
les
lret
fwait
dec
adc
push
xchg
push
jo
pop
mov
dec
xchg
adc
sbb
pop
mov
mov
jg
stc
sbb
mov
pop
push
repnz
xchg
dec
cld
int3
popa
iret
dec
jae
fs
stc
stc
and
and
arpl
ja
xchg
flds
or
adc
pop
ds
jns
cmp
cwtl
adc
shl
mov
lods
shll
push
lods
lahf
mov
and
sti
jnp
mov
aam
sbb
subb
std
js
and
sbb
rolb
xor
fdivr
popa
xchg
pop
sub
rolb
popa
inc
push
xchg
sbb
out
mov
sbb
add
push
jne
adc
mov
xchg
loope
fisubs
iret
mov
or
push
cmp
scas
ljmp
andb
lods
lock
vpmacsdd
pop
cmpsl
xchg
xor
fidivrl
inc
bnd
or
pop
les
sub
xchg
inc
data16
jb
mov
ljmp
js
fdiv
dec
mov
mov
imul
mov
std
scas
je
int3
xchg
mov
scas
ds
mov
rorl
or
pop
std
adc
cmp
test
ja
adc
mov
push
dec
lock
sbb
popa
data16
nop
out
ds
mov
mov
pop
pop
xchg
lret
fwait
roll
dec
xchg
jno
pushf
ss
test
jbe
pop
xor
mov
push
out
pop
leave
ficomps
movsb
addr16
mov
flds
shl
adc
or
xchg
xchg
sbb
nop
mov
fidivrl
mov
sub
sub
movsl
fcmovu
inc
add
xchg
lret
push
mov
out
enter
dec
aad
jbe
or
mov
or
mov
push
data16
in
sahf
sahf
in
nop
scas
xchg
or
inc
lock
sar
outsl
pop
adc
and
mov
push
xor
push
dec
fidivl
mov
clc
aas
xchg
test
in
dec
aaa
aaa
inc
adc
fs
push
lcall
and
nop
mov
lahf
inc
and
inc
push
shrl
cmpsl
pop
pop
push
push
imul
lock
stc
cmpl
push
mov
cmp
ret
mov
addl
aaa
mov
jo
xchg
in
mov
outsb
repnz
mov
jge
push
mov
pop
xlat
lret
mov
call
sbb
loopne
xchg
imul
dec
popf
cmp
fists
in
into
rolb
in
adc
lods
cmp
pop
popf
push
jle
cmpsl
scas
jecxz
jmp
pop
mov
cmc
mov
inc
cltd
cmp
mov
bound
cld
les
test
xchg
push
mov
jmp
mov
adc
js
mov
es
xor
push
icebp
pusha
inc
cmp
repnz
ret
sti
push
shll
sbb
adc
daa
out
pop
stos
push
mov
icebp
rcll
dec
add
sub
stos
push
xor
pop
mov
jge
push
pop
mov
std
pop
in
cmpsl
das
sub
movsl
shl
out
or
push
sub
out
insb
leave
sbb
sbb
jnp
pop
cmp
add
pushf
and
movsb
lcall
repz
jge
jbe
lods
sub
popf
mov
fcompl
push
mov
fldenv
add
mov
dec
enter
push
test
rolb
div
test
pusha
push
scas
cmpsl
cmp
jle
pop
test
xor
sbb
inc
mov
lock
in
xchg
mov
jne
mov
dec
ret
adc
cs
pop
push
xor
fsubp
shlb
pop
and
sub
adc
adc
sbb
sub
movsb
ds
aad
sbb
cmp
scas
enter
cmp
push
ja
pop
mov
or
and
insb
faddp
xchg
adc
xor
in
mov
fcmovnu
in
insb
mov
loopne
in
add
push
stos
enter
mov
in
pop
arpl
cs
inc
mov
cmc
push
std
and
cmc
and
xorb
popf
clc
mov
and
fcmovnb
pushf
pop
rcrb
insl
cmp
jp
xchg
outsb
sbb
push
push
mov
imul
add
mov
in
rorb
cmp
cmp
jle
fnstenv
fldenv
cmpsb
orl
add
push
mov
iret
mov
or
idivl
xor
push
ljmp
xchg
and
shll
sub
push
add
fsubrs
and
inc
mov
call
dec
stc
movsl
xor
mov
pop
mov
pushf
pop
test
lret
or
xchg
clc
dec
sti
dec
lds
test
mov
aad
out
jbe
repnz
sub
mov
ds
lahf
add
cmpsl
add
xor
fcmovnbe
lret
les
or
pop
addb
xchg
pop
inc
mov
dec
push
scas
pop
mov
sub
inc
adc
pop
hlt
popl
pop
aaa
mov
mov
mov
sbb
cmpsl
aad
rcrb
inc
inc
xchg
mov
js
xchg
adc
dec
sbb
push
fisubs
push
mov
jo
xor
nop
sub
cmpb
and
enter
cmp
jle
mov
inc
xor
mov
ret
add
hlt
dec
cltd
push
dec
mov
cmp
dec
push
mov
sarb
js
cmpsb
mov
lret
imul
dec
sub
cmpsl
xor
xlat
jmp
push
pop
cmp
call
jo
sbb
xor
jno
iret
and
pop
mov
xlat
std
pop
inc
pop
mov
jl
pop
jmp
fdivs
jae
clc
xlat
mov
mov
mov
les
mov
push
sbb
push
rorl
sub
and
loopne
stos
repnz
testl
aas
aam
in
lret
add
mov
imull
imul
lcall
lods
xor
mov
repnz
rcll
push
xchg
mov
cmp
mov
cmpsb
cmc
popa
cmpsb
jl
cld
jno
add
xchg
jle
lods
cmpsl
scas
daa
int3
adc
test
imul
sbb
inc
jp
jg
ja
sbb
test
cmp
fstps
lods
mov
xchg
pop
ds
mov
enter
xchg
cmp
xchg
jnp
pushf
jb
out
xchg
mov
jmp
scas
and
xchg
daa
shlb
ljmp
hlt
jns
xor
adc
leave
xor
inc
mov
and
test
jle
inc
testl
pop
or
ds
out
jne
jp
pop
je
xchg
sbb
aas
cltd
fnstcw
out
pop
out
das
daa
sbb
mov
cmp
sub
jae
add
push
shlb
mulb
inc
pop
enter
cli
sbb
jns
adc
daa
sub
out
mov
pusha
cmp
jo
ficomps
pop
arpl
cmp
pop
sbb
inc
push
jp
cld
imul
dec
sbb
data16
jo
adc
add
xor
repnz
lret
aad
xlat
adc
pop
sbbl
mov
sub
cmp
xchg
outsl
enter
sbb
cmp
sbbb
xchg
cltd
jge
mov
jmp
std
jp
fcompl
shll
test
test
or
xchg
cmp
jecxz
pop
sbb
push
pop
push
testl
mov
movsl
xrelease
in
adc
mov
pushl
ss
jp
ficomps
adc
int
ficoms
mov
sbb
rcl
aam
dec
and
lret
dec
test
aaa
adc
push
ja
movsl
jl
push
js
aaa
ja
inc
aad
xor
pop
inc
xchg
das
lods
push
popa
test
loop
and
mov
ja
mov
sarl
lcall
cmp
outsb
dec
jne
dec
sbb
stos
test
jmp
icebp
jb
call
pop
mov
dec
aad
lret
bound
je
xor
pop
loopne
lods
xorl
or
out
mov
push
movsl
mov
rcl
xchg
push
mov
fsubl
movsb
test
repz
xchg
mov
mov
and
lock
iret
mov
lret
cmp
stc
inc
push
dec
push
frstor
addl
sbb
mov
cmp
cmc
dec
lret
mov
lods
or
cmp
mov
adc
lcall
mov
sahf
inc
sub
lock
inc
mov
pop
or
dec
enter
cmp
loopne
pop
mov
sarb
rclb
js
jg
testl
sarl
dec
jns
mov
mov
push
inc
lods
fnstcw
push
stos
and
add
pop
cltd
jmp
ss
mov
stc
push
ljmp
pushl
lods
movsb
lock
pop
ss
mov
in
inc
cmpsl
sarb
jnp
dec
jle
jnp
sub
mov
andl
ja
pop
pop
or
ds
je
pop
cmp
aad
int
lea
icebp
or
xchg
push
dec
mov
rorl
or
ds
mov
jmp
ret
push
rorl
or
clc
inc
dec
iret
in
add
mov
add
push
pop
or
loopne
sbb
bound
in
cmp
push
arpl
call
pushf
lret
hlt
mov
andl
add
fdivs
repz
jecxz
jmp
and
loop
push
loop
cmp
mov
mov
xchg
inc
sti
notl
call
lds
arpl
sbb
jne
outsl
jecxz
and
notb
push
mov
cmp
lahf
dec
fldenv
xchg
inc
mov
adcl
mov
out
std
xor
xchg
repnz
ret
add
inc
in
ss
lock
out
out
int3
and
inc
out
mov
xchg
scas
jae
pusha
insb
aam
mov
push
and
pop
popf
vfrczss
mov
jae
xchg
sbb
divb
fcom
test
jge
push
mov
push
call
push
lds
jnp
or
jne
fsubp
sub
lcall
mov
and
push
xor
div
or
adcb
pop
cs
sub
push
inc
out
pop
loop
mov
sbb
inc
push
es
push
rorl
xchg
inc
jmp
out
ja
pop
mov
push
loopne
mov
inc
sbb
mov
in
in
jle
lods
cmp
adc
push
or
pop
push
fcomip
inc
push
into
cmp
xchg
fiadds
jnp
jp
mov
in
mov
xchg
jns
mov
arpl
scas
stos
push
add
outsb
orb
in
sub
xchg
push
scas
int
mov
push
stos
cmp
in
push
mov
dec
test
inc
lahf
mov
enter
test
insl
mov
dec
xchg
dec
pushf
fwait
not
and
inc
lds
pusha
stos
mov
stc
push
push
out
sub
add
cmpl
xor
mov
sbb
shl
lahf
ljmp
jmp
adc
mov
lret
push
bound
cld
cmp
mov
or
in
mov
mov
cs
mov
data16
pop
bound
out
mov
xor
hlt
xorl
lock
lahf
sub
sub
data16
loopne
xchg
and
mov
cwtl
cli
aam
pop
in
pop
aam
inc
je
out
adc
mov
mov
mov
and
dec
adc
mov
sbb
pop
xchg
inc
test
inc
es
xchg
lcall
out
scas
loope
daa
out
mov
andl
mov
xchg
or
dec
mov
xor
jl
or
mov
jge
xchg
xchg
pop
into
andl
or
rol
sbb
stc
mov
popf
and
lcall
or
or
adc
shlb
outsl
mov
sbb
push
sub
or
lret
insb
jb
xlat
out
sub
pop
lock
popa
sbb
cmc
jg
cwtl
addb
jnp
scas
bound
fbld
insl
xchg
lret
movsl
xor
sbb
cmpsb
mov
inc
filds
inc
mov
not
mov
mov
lods
pop
call
add
cmp
and
mov
cmpl
sbb
mov
cmp
lcall
mov
lret
mov
or
and
or
mov
hlt
rcrl
pop
fbstp
mov
dec
fwait
or
or
xchg
rcrl
mov
adc
sbb
scas
sub
dec
fwait
inc
mov
je
mov
jbe
and
push
je
or
js
stos
divb
fucomp
push
incl
jno
fsubs
cs
out
adc
xchg
xlat
mov
mov
lock
gs
sub
imul
nop
push
or
loope
cltd
cmp
arpl
jg
add
add
adc
outsb
lock
stos
mov
xor
popa
cmpsb
xor
ss
sbb
cmp
adc
inc
jl
pop
mov
inc
pushf
popa
in
inc
pushf
jnp
adc
test
inc
sti
call
jg
rcr
movaps
in
fbstp
in
mov
shll
dec
adc
cmp
fsubrp
outsb
aas
popa
xor
insb
push
clc
fucomi
clc
sahf
push
in
leave
xchg
pop
in
ret
mov
and
lret
jecxz
popf
pop
int3
xlat
fstpl
adc
das
jns,pt
mov
pop
sub
es
loop
or
das
mov
popa
jge
inc
mov
fists
stos
mov
or
loop
mov
sbb
sahf
dec
mov
jnp
pop
roll
out
popf
ret
dec
in
mov
pop
les
lea
bound
mov
ljmp
push
and
iret
lahf
inc
rorb
dec
shll
pop
jg,pt
mov
ja
mov
mov
repz
add
mov
addr16
adc
mov
nop
dec
add
jp
fcoms
pop
jecxz
and
clc
pop
lods
inc
xor
rolb
or
add
ret
jns
pop
adc
mov
out
adc
inc
mov
dec
adcb
stos
pop
sub
adc
je
ret
insb
lock
popf
mov
and
jg
cmp
rolb
repnz
jl
scas
loop
push
mov
loopne
mov
in
test
push
clc
hlt
stc
into
jg
xchg
mov
jo
cltd
in
jmp
aad
pushf
and
xor
pop
rcr
xchg
xor
stos
stos
outsl
ds
fistpl
ljmp
sub
gs
pop
inc
pop
pop
lods
add
pop
cmpsl
scas
or
sub
xchg
or
add
mov
push
sub
test
das
sbb
bound
mov
in
mov
inc
jl
push
jmp
and
sub
scas
jl,pt
enter
jnp
dec
lret
pop
sbb
jp
add
or
cmc
sbb
js
lret
out
mov
sub
into
loope
rorl
cs
pop
leave
inc
int3
enter
fs
xor
scas
ja,pn
fmuls
das
in
pop
iret
loop
scas
js
mov
mov
xor
movsb
out
or
ret
loopne
pop
xchg
ja
or
imul
and
aad
orb
jecxz
and
repnz
in
jne
xchg
inc
or
imul
lret
pop
sub
jg
sti
popa
call
cmp
inc
in
xor
inc
jg
push
push
addb
mov
fcmovnu
icebp
ljmp
nop
add
mov
inc
inc
or
adc
pop
sbb
push
les
pop
dec
lret
jmp
nop
mov
sbb
std
mov
cmpsb
pop
fwait
push
jo
sarb
loop
ret
push
sbb
push
xor
lods
dec
xchg
int
xchg
and
movsb
les
lcall
test
cmp
inc
aam
add
insl
rcrl
pop
popf
ja
sahf
pop
mov
dec
xor
loopne
and
sbb
idivb
fs
out
fldenv
sub
pop
in
cs
enter
xchg
adc
push
lods
sub
and
call
enter
paddb
jns
shrl
ret
aam
jecxz
ret
sub
aad
mov
jmp
nop
stos
mov
in
lahf
popl
cli
mov
notl
arpl
popa
mov
pop
mov
mov
mov
push
rclb
test
cld
iret
jbe
jl
movsl
or
sbb
xchg
inc
adc
out
enter
insl
jno
push
xchg
loopne
pop
adc
in
and
pop
sub
lret
xchg
fildll
push
and
sub
out
add
repnz
shlb
jnp
cmp
insb
jmp
push
jge
jae
test
dec
lock
sub
add
arpl
imulb
imul
cltd
mov
subl
jge
dec
clc
jns
out
imul
add
xor
jmp
enter
fcom
test
or
jmp
mov
fcomps
pop
cmp
mov
loop
or
fadds
std
jb
stos
push
inc
inc
push
dec
aas
adc
dec
cmc
dec
cmc
mov
push
jmp
xchg
pop
in
push
mov
xor
adc
xchg
mov
sbb
loope
jmp
cld
test
or
fs
cld
adc
roll
test
mov
mov
mov
push
sub
cs
sub
xor
lds
mov
nopl
sbb
out
xchg
jnp
xchg
xor
imul
or
or
insl
xor
xor
add
xchg
stos
cmp
push
addb
push
inc
dec
cli
insl
fcmovnu
mov
popa
mov
mov
inc
cmpsb
mov
cmc
mov
jecxz
mov
into
mov
and
dec
jg
repnz
jge
mov
xchg
sbb
into
cmc
inc
imul
mov
xchg
out
sbb
mov
jno
nop
lcall
lock
hlt
imul
popa
popa
push
mov
ret
jp
xor
stc
fisttpll
adc
adc
xchg
insb
sbb
sbb
dec
mov
lret
fs
xchg
mov
pop
aas
sub
sbb
pop
loop
xor
cmpsl
repnz
rol
and
outsb
das
sbb
in
fbld
dec
adc
cli
aaa
pop
or
imul
or
jno
sbb
shl
adc
int
jecxz
pushl
leave
mov
sarl
pushl
xchg
sub
jecxz
rorl
iret
sub
and
add
cmp
pop
jns
dec
fcomps
xchg
push
data16
sub
insb
fcompl
loop
mov
stos
xor
stos
adc
daa
fwait
movsl
ss
inc
inc
mov
sti
adcb
repnz
mov
xor
lods
jle
sub
jb
pop
fldl
stc
or
jle
adc
pop
xor
insb
jno
add
mov
mov
mov
outsl
sub
movsb
cmp
push
fs
pop
shlb
fnstcw
xchg
lods
xor
and
js
inc
and
mov
jg
sub
cmp
add
inc
ljmp
test
movl
outsl
xchg
adc
mov
mov
iret
pop
mov
stc
push
jge
lcall
cmp
faddp
sub
cmp
push
and
sti
push
jnp
pusha
adc
sub
out
sbb
adc
fcompl
stos
jno
fisubl
mov
rep
and
cli
lret
or
clc
lea
insl
mov
push
icebp
dec
cs
push
pop
idivb
xchg
adc
push
and
popa
and
subl
mov
xor
cmp
inc
and
inc
pop
fcomp
xchg
sub
lret
call
imul
outsl
or
sbb
jne
xchg
imul
sbb
xlat
add
mov
ret
in
in
sbbl
mov
jecxz
inc
scas
imul
jle
movl
push
daa
cld
push
fdivl
push
lret
xchg
jge
push
andb
aaa
cmp
mov
ja
in
xchg
pop
mov
fsubs
iret
aad
or
orl
lahf
cmp
ret
rorl
mov
mulps
jl
fdivrl
push
addb
aas
outsb
push
addr16
xlat
xor
or
loopne
sub
xor
aas
cmp
adc
push
sub
dec
sbb
mov
and
aad
fucomi
rorb
bound
cli
fmul
decl
xor
js
aad
xchg
je
in
test
stos
mov
sbb
sub
add
or
jmp
jp
cwtl
mov
push
subb
bnd
stos
mov
pop
in
cmp
popf
sbb
lods
push
arpl
jle
push
movsb
out
stos
add
jmp
or
mov
xadd
mov
pop
xor
adc
sbb
or
sahf
iret
cmpsb
mov
mov
xchg
fwait
les
cmc
mov
lea
adc
mov
pop
jl
inc
loopne
push
in
mov
cwtl
mov
cmp
sahf
sub
aam
dec
je
jmp
xchg
jno
fdivl
js
push
adc
pop
arpl
into
xchg
inc
sbb
imul
les
pop
cli
call
cmp
outsl
lods
das
jb
and
mov
cmc
adc
aaa
ja
dec
cmp
out
push
fwait
outsb
outsl
or
jne
les
pop
dec
shrl
push
mov
movsb
pop
rclb
stos
cmp
xor
ja
add
push
shll
leave
jno
arpl
mov
xor
jnp
inc
jle
mov
sarb
test
mov
mov
fs
sub
cmp
cmpsb
mov
jbe
fcmovnb
scas
xchg
inc
adc
xchg
frstor
jmp
std
dec
movsb
andl
add
push
add
fstpl
dec
stos
daa
jecxz
fchs
mov
mov
push
lods
lea
jge
push
loope
clc
lret
jle
jle
push
fisubs
mov
hlt
and
and
sub
mov
and
enter
sub
xor
fstp
dec
test
xor
cmpsl
sub
sub
jl
mov
sub
fwait
out
pop
in
push
ds
and
popf
mov
cld
cmpsl
push
push
push
or
negb
mov
lods
inc
testl
enter
jne
push
lock
scas
lock
inc
test
fxch
repnz
xchg
imul
push
or
add
out
imul
pop
push
push
daa
inc
mov
push
imul
rolb
pop
pop
mov
imul
adc
cmp
lea
pop
les
ret
or
out
mov
pop
cmp
insl
gs
sbb
test
mov
and
and
jbe
jbe
cld
push
lret
xchg
dec
test
adc
js
je
add
xor
add
mov
repnz
jmp
lea
stos
loope
outsl
mov
pushf
es
out
push
loope
testb
jl
push
test
jle
ss
test
pop
sbb
and
mov
cltd
xor
jle
xchg
mov
scas
inc
inc
mov
lock
mov
sahf
cmp
dec
or
dec
ret
mov
cmp
test
lret
repz
xor
xchg
daa
jg
xchg
into
shl
fldt
sbb
cmp
jbe
push
xchg
jmp
mov
pop
dec
faddl
add
xchg
sub
repnz
or
ja
push
dec
xor
icebp
add
jecxz
xchg
mov
negl
in
mov
cltd
divl
dec
push
xchg
adc
push
pushw
aam
jne
xchg
lcall
subl
rorl
iret
sbb
sbb
sbb
xlat
sbb
imul
roll
stos
daa
mov
push
adc
push
xor
aaa
addr16
les
flds
mov
inc
adc
mov
jo
jle
stos
mov
lods
xchg
jp
mov
cmp
push
jge
add
aad
or
out
xor
xchg
sti
xor
es
pop
mov
in
mov
shrb
in
test
mov
adc
or
repz
jbe
lret
mov
aaa
fisubl
mov
pop
mov
lcall
dec
ljmp
daa
or
cmpsl
iret
or
inc
cmpl
je
outsb
int
fldenv
jmp
in
push
or
popf
xor
xlat
je
pusha
loop
adc
lods
mov
ret
pop
dec
mov
mov
xchg
ret
or
pushf
js
xchg
dec
push
mov
ret
js
xor
mov
or
lret
int3
xchg
inc
movsb
xor
cli
add
cmp
add
clc
btr
xchg
loope
jmp
popf
sub
add
inc
adc
movsb
mov
fisttpl
or
mov
outsb
movsb
pop
outsl
or
push
mov
jl
nop
and
inc
sub
cmp
sbb
add
dec
cmp
push
lea
aad
xchg
xchg
aaa
mov
jno
inc
fwait
cmp
push
mov
movsl
xchg
jnp
mov
popf
push
push
mov
aad
pushf
push
xor
push
mov
js
enter
rorl
adc
inc
pop
cmp
xchg
inc
shrb
xor
sbb
cmpsl
sub
sbb
in
add
dec
fistps
mov
mov
mov
push
fcmovnbe
mov
es
shlb
lahf
xor
jmp
and
mov
lahf
add
dec
jmp
scas
subb
addr16
dec
and
std
data16
adcb
shll
jecxz
jne
or
mov
or
add
pop
dec
add
sbb
lret
pop
cmpsl
dec
fucomp
sub
jp
out
pop
mov
cmp
xchg
pop
sbb
outsl
out
sahf
cld
jecxz
inc
xchg
inc
xor
mov
adc
push
mov
int
lods
data16
or
pop
sub
mov
ss
sub
rol
jp
dec
pusha
enter
movsb
int
sbb
mov
xorb
addr16
cmp
add
xchg
test
cmp
lds
popl
out
js
push
cltd
or
and
rcll
std
jnp
cmpsb
sahf
test
insb
mov
mov
mov
add
hlt
xorl
fwait
dec
cwtl
sub
sbb
mov
jnp
scas
into
sbb
filds
cmp
xor
jns
test
sub
mov
int
adc
add
mov
adc
enter
leave
cmp
out
cmpsb
add
pop
cli
xor
inc
xchg
bound
adc
repz
fcoml
popf
pop
jnp
or
dec
in
cli
sub
xchg
mov
test
out
pop
push
mov
xor
pop
pop
je
adc
enter
std
xor
mov
sbb
les
pop
push
es
ljmp
aaa
xchg
pop
lret
aas
div
stos
xchg
mov
cltd
pushf
ljmp
inc
and
sub
and
and
inc
xchg
xchg
loopne
or
jnp
cmp
push
adc
fiadds
out
idivl
xchg
xchg
fwait
js
les
and
and
cmpsl
mov
in
mov
pop
inc
ret
sbb
fimuls
daa
and
cltd
imul
out
addr16
xlat
fisttps
fdivrl
fstpt
cli
push
push
scas
push
push
jge
push
test
lods
inc
mov
pop
dec
das
jl
xchg
mul
ret
inc
pop
int3
js
mov
bound
mov
movsb
ljmp
dec
jp
cmp
jge,pn
or
sbb
mov
mov
stc
iret
or
fnstsw
push
and
pop
dec
sbb
sub
pop
repnz
stos
sub
movsb
inc
out
fsub
dec
mov
sbb
outsb
int3
xor
mov
adc
xchg
add
pop
insl
mov
xchg
ja
fcomps
mov
sub
push
adc
cmc
xor
test
gs
dec
enter
ret
jl
push
rorl
cs
push
xchg
cmp
cmp
jns
shlb
cmpsb
rclb
jl
push
in
mov
mov
mov
loop
jge
add
cmp
push
push
inc
push
add
mov
dec
clc
cmp
adc
movsb
or
pop
jle
insb
xor
adc
mov
and
ret
cmp
repz
popa
mov
popa
bound
mov
lods
dec
cmp
daa
jo
nop
pop
mov
xchg
imul
mov
mov
mov
jne
add
loope
sbb
out
mov
icebp
and
rcrl
jecxz
jge
push
sub
mov
lock
scas
enter
dec
stc
push
push
ljmp
sub
inc
inc
sub
pusha
in
out
ret
inc
dec
mov
and
stc
mov
cld
data16
pop
jg
les
popf
inc
push
inc
and
imul
sub
sti
ljmp
pusha
jle
cmovo
or
mov
xchg
cmc
jns
cmp
jo
pop
dec
leave
xchg
xlat
rcrl
push
cmpsb
xchg
pop
pop
nop
fistps
xchg
enter
mov
cmc
enter
aaa
jb
or
inc
sub
test
pushf
insb
aaa
push
imul
add
loope
push
dec
add
in
inc
inc
imul
cmp
mov
leave
aaa
add
lcall
das
pop
loope
in
test
in
xchg
xor
xor
mov
jl
test
shll
inc
dec
pop
mov
es
ret
data16
jb
or
jnp
push
mov
ja
add
and
push
sub
push
insb
outsl
and
add
hlt
movsl
dec
movsb
and
pusha
sub
adc
dec
sub
dec
repnz
icebp
fstl
push
pop
push
pop
fstpt
mov
fisubrs
push
cmp
jne
push
int3
gs
insl
adc
sbb
xchg
mov
pop
inc
dec
in
inc
jno
movb
mov
adc
fcompl
adc
pop
sarl
into
insl
lret
sti
ret
mov
mov
sub
in
or
sbb
insl
fnsave
aad
ficoml
sub
lret
test
test
std
push
lods
sti
push
arpl
xor
cs
daa
add
sti
outsl
repnz
lods
repnz
mov
sbb
and
lcall
inc
js
cs
dec
mov
jb
sahf
cli
aaa
in
xlat
jb
sbb
popa
sbb
jns
cmp
test
pop
xchg
rorl
ljmp
ret
cli
js
mov
dec
pop
inc
inc
and
sbb
cmp
fdivrp
sbb
pop
add
xor
dec
inc
jp
cmc
lahf
fildl
cmp
cmp
mov
scas
repnz
xor
jns
or
push
sub
inc
cmc
fistl
xchg
mov
icebp
jb
push
testl
xchg
pop
cmp
jge
ss
std
push
mov
in
mov
loopne
call
jp
imul
jb
push
loopne
in
pusha
push
arpl
ds
pop
insb
cmp
imul
out
in
out
or
dec
inc
inc
xchg
mov
pop
mov
daa
hlt
out
mov
push
xchg
xchg
xor
push
cmp
sbb
mov
xor
loopne
push
imul
fldenv
or
pop
push
in
imul
pop
rclb
in
es
aad
or
out
fwait
jle
fs
lds
je
cmc
hlt
ja
out
pslld
inc
ret
mov
addr16
int
call
roll
or
xchg
mov
mov
cmp
dec
or
xchg
push
or
jno
jne
cs
out
jbe
aad
orl
out
adcb
jae
rcrl
sbb
inc
fnstsw
call
lds
sub
addl
arpl
fistpl
inc
jl
mov
inc
lods
fdivrl
jne
push
mov
push
fwait
pop
xchg
ljmp
cmpsb
mov
add
or
lea
sbb
repnz
and
push
int
or
jo
pushf
loop
hlt
call
icebp
jne
cmp
pop
push
mov
cmovo
sub
jb
lods
mov
mov
xor
out
inc
xor
mov
mov
mov
jmp
jmp
cmp
or
xchg
push
test
fcoms
push
mov
aas
xor
hlt
stos
xor
icebp
loope
mov
mov
hlt
mov
movsl
cmpb
dec
ret
pop
rcrb
mov
cmc
mov
push
in
pop
ja
jns
xor
mov
mov
aas
std
imul
hlt
mov
lretw
aam
test
or
negb
or
inc
sbb
sbb
dec
xlat
popa
xor
mov
push
jnp
leave
mov
imull
stos
adc
in
cmp
push
je
jecxz
add
jbe
cwtl
stos
mov
push
loope
out
inc
rcrl
push
jnp
stos
pusha
lods
mov
push
hlt
add
jns
sbb
push
in
mov
sbb
call
adc
cli
jl
jno
pop
jg
add
mov
loop
pushf
sbbl
xchg
mov
insl
pop
loope
mov
push
or
xchg
pushf
sbb
sbb
into
cmp
sqrtps
bound
dec
inc
inc
pop
test
aad
popf
sbb
xor
lret
adc
cli
cwtl
lahf
and
mov
inc
fucomp
mov
loopne
fildll
xchg
cmp
stos
cmpsb
adc
pop
mov
movsb
leave
fldl
jae
inc
push
or
divl
imul
xor
decl
les
jb
std
push
xchg
add
push
or
push
std
insb
xchg
or
add
pop
mov
dec
out
mov
adc
and
lea
jge
xlat
in
call
mov
dec
pop
sti
xchg
fwait
movsl
pop
or
cmpunordps
xchg
adc
cmpb
mov
cmp
stc
sub
sub
into
divl
ljmp
aad
pop
pusha
cmp
je
cwtl
imul
rclb
notl
in
lds
pop
stos
data16
sbb
stos
add
cmp
enter
fwait
popa
sub
inc
ret
in
sub
mov
xchg
das
pop
leave
notl
add
push
jmp
dec
imul
loope
push
inc
push
xor
inc
jecxz
pop
sbb
pop
add
jg
mov
mov
fildll
or
addr16
adc
sbb
and
in
xor
xorl
je
cwtl
mov
inc
mov
stos
and
dec
xor
xor
pop
test
jnp
sbb
pop
mov
cmp
daa
add
outsl
popa
cmp
addb
adc
push
fsts
or
dec
jae
cs
pop
mov
stos
add
test
adc
push
fcmovne
xchg
sbb
jle
fwait
mov
mov
in
sbb
and
insl
fs
lcall
adc
or
or
movsb
shrb
xor
xlat
mov
mov
insl
sti
sub
mov
dec
in
mov
je
cld
mov
or
test
fs
mov
fwait
inc
mov
pop
stc
adc
ss
test
jnp
xor
shrb
popw
pop
mov
jle
push
cmc
or
jb
sbb
xor
pop
fildll
rcrb
jl
inc
popf
cmp
pop
add
mov
mov
sbb
dec
mov
xchg
insb
fwait
aaa
sub
jecxz
inc
jmp
push
dec
inc
mov
movsb
mov
sbb
mov
out
call
ror
mov
jae
sbb
adc
loope
clc
mov
jno
sbb
leave
cmc
adc
test
inc
sahf
imulb
xlat
push
stos
test
fidivrs
mov
bound
add
mov
mov
cmp
pop
xchg
sub
add
pop
mov
out
jnp
xchg
faddp
enter
sbb
aaa
mov
cmpsl
lock
pop
xchg
push
stc
dec
pop
dec
mov
cltd
cltd
fdiv
mov
cli
push
add
dec
rcll
mov
outsl
js
loopne
je
xchg
shlb
sbb
nop
mov
pop
xchg
popa
dec
cmp
out
inc
xchg
aaa
les
cmp
adc
or
cwtl
outsl
out
dec
pushf
js
or
sbb
jmp
push
cld
jnp
mov
test
push
adc
iret
xlat
mov
mov
sub
stos
jae
sti
int3
push
dec
data16
mov
sarb
cmp
outsl
cmp
mov
mov
lahf
enter
sub
xchg
jmp
fsubrl
rclb
pop
imul
std
and
add
add
mov
xchg
push
cmp
mov
push
pop
push
or
xchg
push
cmp
stos
jo
push
sbb
stc
rcrl
jnp
pop
ja
xor
popf
pop
adc
sub
sbb
in
out
leave
jmp
or
mov
sbb
xor
xor
mov
and
jl
scas
mov
or
les
es
dec
sub
popa
aam
mov
push
int
pop
mov
xor
icebp
pop
out
repz
sub
pmulhw
dec
sbb
mov
js
xor
xchg
outsl
jecxz
scas
adc
push
mov
mov
add
jae
and
pop
cs
dec
dec
fcomps
jo
dec
cmp
add
and
jmp
call
xor
ret
jle
aas
or
jge
cmp
stc
icebp
loope
movsb
cmp
add
jecxz
pop
jne
sbb
lds
notl
xchg
push
scas
outsl
mov
push
xchg
or
pop
loop
push
fstl
je
and
or
xchg
lea
bnd
adc
cmpps
mov
fcoms
mov
shrl
pop
xchg
sbb
je
scas
aas
leave
push
push
popa
mov
fwait
mov
or
mov
add
shrb
sub
lcall
pop
rorl
mov
cmp
mov
data16
test
jo
imul
push
addr16
add
pop
fnsave
mov
add
mov
sbb
sub
lea
ds
jno
test
sub
sbb
or
xor
xlat
test
repnz
jecxz
jae
add
insl
inc
stos
adc
and
arpl
divl
pop
sub
arpl
movsl
adc
insb
pop
aas
std
lods
dec
js
dec
xchg
mov
adc
mov
fildl
cli
test
ljmp
repnz
mov
mov
adc
imul
mov
cltd
lret
pop
andl
repnz
in
mov
enter
inc
mov
out
fiadds
test
outsb
scas
xchg
mov
incb
dec
lcall
lret
xor
dec
fimuls
mov
jno
fisttpl
ficomps
push
sahf
dec
add
repnz
imulb
mov
repz
out
repnz
pop
dec
sbb
xchg
dec
leave
cmp
rcr
js
or
fwait
ja
or
imul
inc
movsb
fdivp
popl
repz
mov
pop
call
mov
sbb
loop,pn
jmp
and
popa
or
and
mov
scas
push
lds
les
ret
leave
hlt
jl
mov
jae
fiaddl
pop
dec
add
dec
and
imul
pop
cmp
bound
ret
mov
cmp
idivl
ss
jge
pop
lcall
outsl
test
or
shlb
shll
das
inc
sub
pop
sar
and
pop
cld
mov
mov
xorl
dec
outsl
rcrl
cmpsb
jnp
jno
cmpsl
mov
cmpl
pop
imul
xchg
mov
scas
icebp
xchg
adc
push
fs
fs
and
jmp
pop
loop
cmp
in
inc
and
sbb
outsl
push
cmp
push
fildll
es
repnz
fstps
ja
xor
jnp
notl
adc
push
lret
stc
sbb
sub
or
cmpsb
cmp
ds
pop
or
stc
push
gs
sub
gs
mov
xchg
jns
mov
shrl
push
adc
clc
inc
out
repz
pop
in
adc
sahf
in
dec
mov
fstpt
sub
enter
ja
pop
les
ds
mov
ret
sti
loop
arpl
sbbl
jnp
fcmovb
int
repz
mov
lcall
call
pop
cmp
aad
out
mov
std
mov
ret
push
adc
and
xchg
popa
and
ljmp
sub
cwtl
adc
push
push
fstps
fistps
and
das
ret
push
and
push
lret
inc
pop
loope
out
add
mov
mov
shlb
enter
sbb
and
jns
out
pushf
or
cmp
xchg
jns
mov
mov
mov
leave
addb
sbb
inc
sbb
dec
addr16
call
mov
addr16
or
sub
push
mov
jmp
pop
cmp
loop
lods
fidivs
cmp
push
xor
loope
xorb
ss
test
std
inc
les
cmp
and
mov
mov
test
in
cmp
stos
dec
xchg
push
jae
jno
lret
jns
mov
pop
sbb
mov
cwtl
jecxz
xor
lret
lods
fidivl
mov
push
cmp
cmp
adc
mov
push
sbb
push
mov
xor
orl
outsb
xchg
test
lcall
fwait
out
cs
mov
pop
cmpsb
pop
jns
jp
scas
ja
ret
cwtl
aas
divl
mov
push
ljmp
inc
in
je
add
pop
test
out
push
add
jmp
fstpt
bound
mov
pop
cmp
jbe
mov
cld
inc
add
jae
outsb
cmpsl
hlt
xor
add
lea
dec
pop
popf
pop
inc
mov
test
int
inc
shl
incb
pop
xor
sbb
mov
push
popf
push
cmpsb
xchg
jecxz
lods
test
pusha
scas
xchg
add
mov
int
shr
into
shl
pop
repz
popf
or
mov
push
aad
lahf
sbb
pop
mov
inc
pop
cmpl
pop
movsl
cmp
outsb
out
add
adc
repz
or
lods
das
jnp
xor
lock
call
mov
pop
loope
popf
add
frstor
push
inc
jmp
xor
sbb
popf
adc
ljmp
inc
xor
arpl
iret
pop
frstor
dec
addr16
mov
lds
or
jae
mov
inc
pop
in
sub
adc
loop
dec
jnp
mov
addr16
mov
sarl
lahf
pop
jl
xor
fistps
pop
adc
xchg
sub
cld
sub
sarb
rorb
add
pop
dec
jno
stos
cmpsl
pop
mov
push
dec
xchg
jnp
xlat
pop
jge
fmuls
inc
add
fs
jmp
hlt
mov
pushf
mov
insb
mov
hlt
cs
inc
mov
mov
mov
push
fidivs
lods
or
pop
jno
add
pop
pop
cmp
bound
push
in
addr16
jmp
rorb
inc
mov
inc
inc
arpl
pushf
es
push
fistl
clc
loopne
pop
add
sbb
jle
rorl
je
xchg
dec
jnp
call
pop
and
cmp
stc
mov
scas
adc
loope
sub
iret
xchg
add
add
in
in
mov
adc
pop
or
popa
push
push
or
dec
push
lea
pop
and
or
mov
sahf
pushf
test
cmpsb
mov
sbb
outsb
in
jns
xchg
outsl
fadds
xor
sbb
xor
push
pop
xlat
xor
adc
inc
jno
outsl
std
neg
popf
ljmp
test
add
lea
shrb
mov
lea
sahf
aas
xor
hlt
cmp
mov
cmp
xlat
ret
mov
lret
mov
cmpb
in
add
dec
jge
push
cmp
neg
and
shlb
sub
pop
add
scas
jbe
leave
jle
and
in
movl
nop
push
push
mov
push
push
and
push
lea
sub
pusha
in
sbb
out
sahf
cltd
cltd
fisttps
push
or
push
insl
cmpsl
mov
xor
lret
pop
std
enter
ret
outsl
xor
imul
cmc
pop
jno
mov
ret
add
add
mov
mov
stc
push
cld
rcll
mov
popw
fistpll
xor
and
fwait
sahf
xchg
jnp
adc
mov
inc
push
push
push
sbb
mov
sbb
xchg
inc
shrl
mov
add
fwait
adc
fadds
jge
lahf
jo
xchg
sub
jge
or
dec
cmp
sti
pop
and
push
jno
popf
mov
test
push
inc
mov
adcl
cmpb
and
cmp
inc
adc
sbb
xchg
fdivrs
inc
aad
outsl
cmpsb
pop
inc
cmpsl
cmc
cmp
imul
pop
repnz
out
sub
dec
push
mov
fcomip
out
out
sarb
cmp
jns
lcall
mov
mov
ficompl
xchg
ret
adc
mov
repz
stc
addb
shll
and
sub
add
mov
imul
mul
xlat
xor
mov
mov
mov
jge
scas
outsb
mov
test
stos
pop
or
add
cmpsl
aam
pop
sarl
loop
ja
jle
and
popf
js
sahf
or
push
xor
sub
dec
pop
mov
es
sub
sbb
dec
test
bound
mov
aam
xchg
and
rcrl
mov
jns
pop
sbbl
scas
cmp
je
ret
xor
mov
mov
enter
sbb
imull
add
aaa
out
add
or
mov
ficompl
jns
lcall
mov
movsb
int3
mov
stos
inc
pop
sub
adc
cmp
lahf
sahf
mov
or
das
push
rolb
pop
push
xchg
scas
and
push
frstor
fsubrp
rcll
push
mov
mov
push
cmp
jae
mov
outsb
jb
inc
jbe
mov
mov
movsb
mov
iret
fidivrl
pop
subb
jl
dec
mov
shll
xor
pop
sbb
jne
clc
icebp
out
mov
cmp
xor
jp
incl
das
mov
jbe
xchg
xchg
sub
ljmp
xlat
mov
dec
adc
jp
sub
or
cmpsl
add
ja,pn
les
or
into
xor
bound
push
fmuls
inc
pop
outsb
pusha
pushf
roll
sub
or
push
int3
loopne
cltd
adc
ja
jmp
or
inc
pop
loope
testl
dec
lret
or
inc
jg
mov
insl
repz
xor
xor
add
fmuls
outsb
push
xchg
ret
int
mov
lods
call
add
push
lock
popf
ret
or
jbe
mov
lahf
push
adc
popa
mov
or
push
adc
ficoms
movsb
in
loopne
pop
addr16
sbb
inc
cmpsb
inc
mov
xchg
insb
mov
das
mov
mov
shl
xchg
cmp
push
xor
rcrl
into
scas
mov
sub
jno
daa
inc
lea
or
out
or
out
popa
jbe
sarl
jae
aam
insb
dec
adc
dec
test
daa
pop
jle
mov
push
push
mov
insb
lea
lock
les
xchg
jo
ficoml
push
mov
sbb
aad
xor
lea
pop
push
mov
fldenv
das
adc
loope
mov
mov
mov
or
mov
lcall
cmpsl
das
sub
sbb
lcall
sub
and
outsl
out
or
dec
jne
push
dec
jp
push
mov
add
movsb
push
dec
insl
icebp
arpl
insb
push
pop
jl
mov
add
stc
xchg
add
adc
and
in
dec
das
add
add
mov
pop
jbe
pop
inc
sbb
out
sarl
fisubl
loope
cmp
push
testl
xor
jg
lcall
pop
negb
outsb
pushf
imulb
mov
js
xchg
xchg
stos
lret
mov
cmp
cmpxchg
inc
ljmp
je
and
shrb
sbb
shl
mov
cmp
mov
sahf
pop
aam
test
lret
or
pop
cwtl
sub
lahf
mov
movsb
jne
mov
cld
sbb
sub
add
xor
daa
add
cli
or
inc
xchg
mov
ljmp
cmp
pop
xor
aaa
mov
push
dec
jmp
fistpll
inc
int3
shrl
repz
into
mov
jne
jno
lods
shll
shr
or
addb
mov
stc
sbb
mov
test
xchg
push
cmp
sub
push
lds
jmp
lea
sbb
scas
sub
xchg
lret
inc
sbb
xor
dec
fs
mov
pop
jne
add
addl
pushf
push
cmc
stos
leave
pop
push
xchg
xchg
sbb
test
add
ja
xor
loopne
mov
aaa
xchg
imul
ficompl
pop
aam
adc
cld
and
fcomps
dec
or
jb
cld
mov
inc
push
mov
rcrl
mov
jl
cltd
add
loop
je
out
xchg
das
mov
jp
cltd
mov
inc
mov
incl
test
xchg
and
stc
push
int3
dec
mov
push
sub
fsubr
xor
lahf
shrl
test
call
lret
cmc
push
addr16
fcoml
paddq
sti
cmpb
fmull
insl
inc
mov
inc
fisttps
sub
inc
adc
les
or
bound
push
lahf
pop
sbb
mov
lock
cmp
dec
fildl
sahf
pop
imul
subb
inc
test
or
cmp
movsl
inc
js
add
test
imul
mov
push
mov
push
pop
push
push
fs
std
adc
dec
xor
stos
enter
add
xchg
lea
add
inc
push
xchg
mov
int
jmp
adc
mov
ficoms
mov
xor
sarb
mov
in
jnp
add
push
out
jbe
popa
std
dec
ss
loope
cmp
mov
lods
movsb
inc
jo
jmp
aas
inc
cli
aad
sub
outsb
jge
push
sti
push
in
jp
pop
shlb
or
outsb
mov
add
cmp
pop
add
sbb
xor
jns
xchg
icebp
andb
andb
xor
jmp
int3
sub
dec
and
mov
filds
push
sub
mov
dec
ss
ljmp
roll
pop
or
pop
and
push
push
cmp
push
aas
mov
arpl
roll
incb
mov
dec
sbb
into
ljmp
cmp
mov
out
iret
xchg
cmp
mov
call
lcall
xchg
outsl
and
xor
int
xchg
loop
mov
mov
mov
push
inc
dec
inc
ljmp
jnp
divl
mov
dec
cmpsl
lods
inc
addr16
cmp
int3
mov
rolb
cmp
cld
mov
stos
jae
test
push
push
add
mov
fcoms
mov
inc
lds
fst
mov
push
ret
push
jl
shl
neg
or
js
aam
jge
popf
inc
jle
or
jl
xor
lods
ss
jbe
daa
clc
ljmp
xchg
add
les
outsl
push
push
shll
mov
mov
mov
mov
and
pop
lret
mov
xchg
push
shlb
sub
and
sub
call
loope
and
cmp
add
dec
fwait
xchg
xor
add
stc
jo
mov
out
or
push
rcrb
mov
aaa
cld
lods
int3
xchg
xlat
jns
imul
add
test
sti
dec
shrl
je
pop
pop
and
aaa
les
aas
fcmovu
sahf
xlat
daa
pop
vsubps
stc
mov
mov
fldt
mov
push
rcl
and
xchg
stos
or
loopne
push
and
in
std
outsl
pop
mov
xor
add
sbb
scas
bound
in
push
pushf
fimull
and
mov
inc
test
jp
sbb
jp
xchg
jno
das
dec
cmp
ljmp
ja
or
jo
sub
inc
stos
pop
cmpsl
xchg
and
mov
repnz
xlat
jg
push
nop
push
mov
orl
xchg
popf
dec
aaa
in
sbb
jae
sub
jp
xor
addr16
sbb
pop
mov
pop
loope
icebp
ss
frstor
jge
hlt
std
mov
push
xchg
shl
xchg
adc
loop
lods
xor
mov
xlat
mov
frstor
pop
add
mov
sub
cmp
pusha
xchg
cmpsl
sub
test
and
jg
xor
adc
mov
pop
movsl
popf
adc
cmpsb
inc
sub
lods
imul
jnp
ficompl
pop
fcomi
mov
out
mov
cmp
test
inc
je
in
cmp
ret
ss
addr16
adc
push
xor
dec
jle
adc
int
mov
outsb
pop
push
cld
in
lret
enter
mov
jecxz
fistl
jno
mov
nop
fistpl
sbb
lock
push
lock
les
test
add
rorl
push
in
or
outsb
pop
int
sbb
sbb
ficompl
pop
sub
not
lods
out
int3
cmpl
ds
sbb
enterw
into
dec
add
bound
inc
jns
lahf
mov
sub
mov
fildll
xchg
inc
and
and
push
js
sbb
sbb
addr16
pop
gs
outsl
jp
jb
pop
in
ja
and
dec
mov
test
and
sbb
sbb
out
divb
jno
push
jl
inc
jb
pop
add
push
int
popa
pushf
mov
aam
dec
mov
or
cmp
std
mov
out
dec
in
jp
mov
cmp
mov
push
xchg
aad
mov
aas
adc
push
pusha
mov
add
fstpl
mov
xchg
sub
fidivs
jbe
outsl
mov
push
jmp
add
sahf
ss
xchg
xchg
xor
ljmp
cmp
adc
ss
mov
and
mulb
push
lret
push
int3
add
xor
xor
xor
imul
xchg
enter
stos
je
out
stc
or
in
jbe
nop
and
or
mov
je,pt
addr16
ljmp
decb
aaa
adc
cmpsl
push
fldl
pop
leave
pushf
lret
movsb
outsl
inc
jb
enter
fcoms
mov
xchg
xlat
and
and
adc
mov
xchg
pop
cmc
pop
out
sub
ljmp
adc
fidivrl
std
pop
and
ficoms
imul
lods
jne
jle
js
pop
or
movsb
loop
repnz
jno
daa
pop
add
lock
jmp
les
cmp
sbb
into
popf
dec
es
lds
xlat
and
shlb
jl
fcompl
movsb
lds
ja
mov
add
push
push
add
sbb
push
out
pop
pusha
into
mov
jb
popa
mov
xchg
and
out
sub
jp
lahf
icebp
fcomps
sbb
iret
sbb
fnstenv
sub
pop
dec
dec
outsb
cmp
push
fs
or
adc
pop
filds
test
or
fdivrs
sub
fwait
xlat
and
call
lahf
stc
arpl
push
pop
aad
mov
rcrb
lock
add
ret
movsl
int3
in
pop
dec
inc
xor
mov
and
hlt
push
push
jbe
hlt
scas
sub
and
test
andnps
cwtl
ljmp
dec
movsl
xchg
test
inc
test
pop
dec
js
sbb
mov
in
shll
out
in
xor
jae
lcall
cmpsl
nop
jl
mov
adc
mov
ret
adc
neg
inc
xlat
sbb
dec
hlt
fistpll
cmp
xchg
adc
gs
add
and
push
pop
test
inc
dec
adc
pop
push
andl
push
cmc
test
pop
mov
push
mov
fidivrl
test
mov
scas
mov
movsb
jns
lods
aaa
daa
sub
dec
cwtl
ja
jnp
push
stos
lea
mov
push
xchg
jne
sarb
cmc
out
mov
pop
sub
inc
mov
into
popf
xchg
ss
push
out
and
aad
pcmpgtw
ss
or
inc
lods
cmpsl
mov
xchg
lret
mov
inc
iret
mov
mov
fbstp
mov
sub
lret
xchg
lret
pop
stc
insb
daa
push
rol
cltd
sub
xor
push
mov
xchg
sbb
mov
je
scas
inc
into
lds
mov
rorb
mov
shrl
dec
jo
pop
lret
mov
dec
cmp
xor
leave
sbb
fldlg2
insl
fidivs
inc
cmpl
ja
push
add
push
test
xchg
cltd
lea
aaa
mov
ss
aaa
clc
sbb
mov
cmp
and
push
push
aad
aad
aaa
daa
and
rorl
les
loop
lret
add
stc
jno
push
cmp
sub
inc
mov
inc
idivl
xchg
mov
imul
cmovp
jge
pop
add
mov
or
xchg
rcl
frstor
bound
sub
jno
add
out
mov
popa
call
jno
into
mov
test
push
cmp
cwtl
sub
loopne
add
lea
sbbb
andb
sti
pop
test
pop
pop
add
mov
cli
pop
lahf
rcrl
sub
lret
sahf
adc
add
insb
xor
std
nop
xlat
repz
cwtl
xchg
jbe
xor
fsub
les
xchg
scas
jnp
gs
les
hlt
xor
int
out
xchg
cmp
adc
mov
fsubr
imul
jmp
xlat
outsb
adc
xor
push
stos
sub
rcrl
fnstenv
lea
sahf
cmp
cld
inc
push
lds
mov
ja
stos
leave
and
negl
push
int3
push
sbb
movsb
pop
xor
push
xor
cmp
outsl
inc
sub
inc
insb
addr16
mov
test
nop
in
sbb
js
test
fistpl
xchg
addl
adc
orb
xor
pop
mov
or
add
inc
push
xor
popf
mov
xchg
pop
rorb
push
aam
inc
jp
push
mov
push
shr
les
mov
or
aaa
and
add
or
sub
sub
push
mov
mov
jmp
outsb
add
test
dec
sbbb
outsb
sub
mov
movsl
xor
cltd
sbbb
push
iret
dec
adc
jne
scas
mov
and
lods
in
out
jmp
fisttpll
cmp
addr16
and
xchg
cwtl
imul
push
jecxz
out
cmp
cmp
inc
mov
or
cmp
mov
in
adc
loop
lret
dec
mov
sbb
sub
jecxz
dec
fcompl
xchg
jno
jnp
cmpsl
loope
jl
clc
push
sbb
add
jbe
shlb
or
adc
sub
or
mov
loopne
into
out
jo
jecxz
mov
adc
fidivl
stos
popa
mov
enter
inc
fisubrs
jl
sbb
jae
jne
mov
sub
iret
bound
fidivrl
fisubl
push
jg
je
sub
mov
jecxz
outsl
sarb
sub
pushf
fisubrl
mov
invd
and
pop
clc
test
push
inc
cmp
fwait
mov
pop
sub
call
xchg
sbb
test
fdiv
lahf
cmpsb
mov
adcb
in
mov
pop
popf
mov
outsl
sbb
mov
sar
sbbb
mov
hlt
xlat
icebp
fcmovnu
insb
cmp
ret
adc
sbb
inc
push
pushf
pushf
adc
cmp
dec
inc
cmc
imul
sarl
insl
cmp
pop
out
jg
movsl
enter
mov
sbb
daa
xor
and
cmp
fisubl
mov
stos
cmp
pop
pop
sub
fistl
int3
pop
popf
ds
pop
aam
and
in
sub
and
sbb
xchg
lods
popf
je
xchg
mov
lods
add
dec
shll
fwait
sbb
pusha
jbe
xor
jge
ss
xchg
cmp
shll
ret
in
lock
sbb
xlat
pop
sub
je
dec
cmp
addb
cmp
inc
es
mov
lahf
cli
push
hlt
and
fdivrs
leave
pop
leave
mov
stos
sub
jp
or
xchg
push
ret
test
cltd
cmpl
dec
and
jg
dec
pop
inc
pop
pop
dec
frstor
jb
mov
xchg
gs
in
in
mov
sarb
enter
inc
push
data16
ret
xchg
and
sub
ret
push
clc
push
inc
lock
cld
ret
int
cmp
shrb
or
pop
in
xchg
mov
popf
mov
jmp
enter
stc
ficoml
es
inc
sbb
pop
lcall
lahf
inc
enter
cli
les
mov
stc
or
roll
add
or
adc
pop
cmp
sti
xor
lret
jbe
and
in
clc
inc
out
rep
jg
aam
lock
outsb
in
arpl
ret
jo
cltd
in
mov
jnp
insb
std
js
adc
push
push
fsubs
hlt
stos
and
lret
add
add
sbb
mov
adc
fs
push
lock
dec
xchg
jbe
shlb
dec
cmp
push
xchg
sbb
imul
and
xor
dec
jno
add
or
sbb
loopne,pn
fimull
js
outsb
push
jmp
inc
xchg
repz
jb
test
lds
pushf
or
and
add
ds
inc
pop
shll
adc
lods
das
ficomps
loopne
imul
xor
out
mov
pop
sbb
ljmp
loope,pn
jl
movsb
fldpi
out
ja
sbb
cld
in
pop
cmp
sbb
insl
ja
adc
mov
clc
mov
and
fistps
push
mov
adc
pop
adc
adc
ss
mov
psrlq
sbb
mov
in
mov
lea
cmc
dec
adc
dec
push
sub
adc
mov
int
loope
push
jl
jge
or
xlat
sbb
inc
mov
clc
cld
jns
xchg
arpl
outsl
pop
push
sbb
push
push
repz
and
mov
psadbw
imulb
addb
sbb
adc
xchg
in
xor
jp
push
xor
ret
sbb
adc
xchg
lret
test
ret
movsb
push
call
pop
dec
pop
push
jae
fwait
rol
pop
adcl
push
roll
imul
jnp
sbb
int
les
sti
inc
xchg
aaa
xchg
movsb
add
in
jb
mov
rcrb
xchg
sbb
adc
shlb
imul
movsl
push
push
imul
shr
cltd
frstor
xchg
push
rorb
mov
mov
xor
push
push
inc
xor
lret
or
xor
adc
jno
call
insb
cmpsl
jb
mov
adc
adc
dec
mov
cmp
popa
or
xor
cmp
xchg
add
in
mov
cltd
mov
push
dec
icebp
stos
mov
inc
mov
xchg
call
sbb
aas
push
or
jno
out
in
pop
push
jae
jmp
sub
pop
jne
sub
xor
mov
jbe
jecxz
lods
dec
sub
xchg
sbb
sub
push
or
imul
add
push
xchg
mov
mov
mov
add
dec
xlat
roll
jmp
add
arpl
sti
mov
lock
out
cld
push
lret
pushf
or
push
pop
insl
arpl
or
pop
test
xor
inc
jae
push
push
fchs
clc
cmp
push
jne
mov
loop
jb
movsb
sbb
insb
xchg
out
xchg
adc
addl
jae
pop
in
sub
xchg
mov
call
roll
rcrl
xor
adcl
imul
and
ljmp
lock
dec
add
xchg
sub
mov
and
addr16
xor
xor
xchg
js
adc
add
sbb
les
mov
push
fdiv
scas
sub
sbb
inc
fiadds
es
mulb
xchg
mov
sbb
leave
rcrl
cli
jnp
jne
and
jbe
out
cs
adc
subl
in
jnp
sub
popa
scas
xor
cmp
mov
and
and
add
mov
xor
mov
and
ret
dec
sarl
lods
mov
lock
clc
mov
dec
mov
stos
es
arpl
and
hlt
gs
cmp
popa
lds
adc
test
xor
scas
inc
bound
sub
mov
xchg
insb
sub
lods
lock
ret
mov
ret
lahf
xchg
pop
ss
pop
cmp
mov
xchg
arpl
dec
sbb
lcall
mov
hlt
or
adc
sub
push
ret
out
ljmp
bound
jmp
mulb
push
sbb
aas
pop
jge,pt
daa
out
adc
jno
stos
mov
push
sbb
ret
imul
xor
imul
ret
stos
sub
pusha
fmull
mov
lcall
push
push
cmpsl
mov
shr
aam
push
jns
dec
ret
addr16
sbb
jmp
mov
cmp
inc
cltd
xor
ja
push
mov
pushf
mov
cmp
aas
xchg
mov
loopne
cmpsl
add
in
sbb
jge
xchg
mov
loope
cpuid
adc
mov
and
lods
adc
lahf
xorl
inc
pop
clc
mov
imul
movsl
in
test
jnp
adc
pop
das
or
jb
sti
mov
push
jecxz
hlt
jmp
jecxz
sub
lods
aas
cmp
adc
sub
push
out
stos
jle
cmp
mov
test
lahf
push
adc
scas
mov
fcmove
sub
aad
xor
sti
mov
mov
out
mov
shll
mov
pop
inc
in
lret
fiadds
jle
mov
enter
dec
jns
push
popl
adc
dec
pop
loop
xchg
fisubrs
daa
adc
aam
mov
test
outsl
hlt
fwait
sub
repz
cmp
sub
jecxz
stc
mov
outsl
push
jge
xor
lock
adc
push
push
mov
pop
rorb
sti
ja
movsb
out
outsl
int3
ljmp
jbe
mov
cmp
inc
sbbb
or
test
je
cmc
jmp
xor
mov
add
pop
in
fcompl
bound
aas
inc
insl
dec
jmp
pop
sub
or
or
xor
lea
test
sarl
ret
or
mov
rcrl
fldz
push
cmp
stc
in
in
cs
fimuls
insb
and
jmp
std
gs
cmpsl
mov
loope
push
lea
fwait
push
mov
inc
xchg
pushf
clc
mov
xchg
inc
xor
call
cmp
xor
push
dec
ret
sub
mov
mov
sti
mov
dec
xchg
aas
xor
sar
cmpsl
clc
cwtl
add
cwtl
lock
sbb
jmp
pop
loop
repz
xchg
xchg
and
in
test
mov
add
ret
pop
ret
and
aad
test
or
cmpsl
sbb
mov
adc
fsubr
popa
xor
jle
jbe
mov
icebp
push
int
adc
insb
sbb
xor
xchg
fcoms
or
pop
sahf
shrl
mov
shl
imul
movsl
xchg
inc
xor
hlt
push
lcall
and
mov
inc
adc
lods
sbb
cmp
dec
xchg
mov
test
add
mov
shlb
stos
sub
je
sbb
jno
mov
pop
push
sahf
cmp
add
repnz
je
dec
or
scas
movsl
jae
inc
scas
dec
adc
sbb
adc
cmc
add
clc
imul
rcll
xor
scas
mov
aam
out
in
std
add
mov
divb
test
pushf
bound
pop
push
dec
xchg
dec
vpacksswb
jb
pop
repz
fists
insb
test
jecxz
clc
jns
jne
inc
imul
mov
fcomps
icebp
das
cld
sub
add
xor
mov
movsl
daa
sub
aad
inc
mov
jg
mov
pop
loopne
mov
push
fstl
xor
sbb
lret
andb
ffree
jne
int
pop
jbe
cmpsb
pushf
pop
dec
xor
out
cmp
aaa
mov
mov
aas
test
jmp
adc
js
jae
mov
aaa
pop
inc
rolb
sbb
out
jno
push
xlat
andl
push
nop
and
mov
jg
and
lahf
sub
lahf
lret
xor
mov
pusha
out
or
push
test
add
push
add
fstps
pop
mov
jg
cmp
arpl
neg
les
fcoms
popa
cmp
pop
mov
ss
xor
and
push
push
xlat
lods
cmp
jge
jg
dec
fildll
jns
add
roll
cmp
fisttps
mov
push
mov
adc
mov
inc
mov
jo
jno
or
dec
shrb
cs
xor
in
xchg
popa
scas
dec
pop
xchg
sbb
xorb
dec
inc
inc
pop
mov
or
inc
xor
in
sub
lds
add
push
fnstsw
xchg
int
inc
jecxz
loopne
ja
xor
mov
mov
rcl
xor
push
push
les
or
push
push
jno
xor
adc
fstpt
int3
jecxz
popa
mov
aaa
jo
testb
xchg
es
dec
push
pop
cmp
orl
hlt
test
jecxz
movsl
inc
aam
cld
jno
push
lods
inc
loop
hlt
mov
pop
and
call
in
jbe
xchg
and
mov
fsubrs
fdivrl
sub
push
pop
jge
nop
pop
pop
jb
xor
inc
sar
sbb
or
sub
sub
shrl
ds
or
jae
lcall
xchg
lea
sub
push
adc
pop
pop
rcrb
lea
icebp
je
dec
pop
jbe
addr16
xlat
lea
adc
add
in
add
or
testb
mov
jb
pop
pop
ret
test
aam
pop
aas
pop
dec
clc
push
xchg
aaa
lret
repnz
or
cltd
xchg
ljmp
ror
sub
add
sub
in
fidivl
mov
dec
jmp
sub
xchg
mov
int3
mov
xor
mov
jge
cwtl
pop
fsubl
sub
negl
xchg
lods
cmpsb
add
cltd
stc
add
and
fildl
adc
adc
lcall
lods
dec
enter
or
aad
xchg
lock
fs
fadds
jmp
stos
and
fs
popf
je
dec
loop
xor
pop
xor
inc
pop
pop
ret
popa
imul
and
or
fistpll
dec
arpl
repz
fldenv
mov
cwtl
mov
call
out
outsb
sub
pop
test
es
sti
inc
adc
jg
testl
ror
mov
inc
push
add
dec
mov
mov
unpckhps
cwtl
push
jecxz
dec
sbb
rcrb
daa
repnz
dec
sti
inc
nop
fisubl
mov
cmp
js
sarl
add
jne
xchg
fsubrl
imul
pushl
das
roll
or
test
rcl
cli
inc
dec
cmp
fsubr
cs
adc
repz
ja
lahf
test
pusha
repz
mov
pusha
pop
fs
lret
adc
out
push
fimuls
pop
notb
push
ret
jnp
jo
insl
cmp
sub
ret
push
pop
sbb
cmp
les
lds
cwtl
mov
dec
bound
int3
mov
xor
pop
insl
pop
movsb
aam
notb
mov
mov
popf
sbb
mov
pop
mov
gs
bound
mov
jae
cmp
loopne
clc
jmp
jnp
movsb
add
mov
mov
out
dec
and
xor
in
js
sub
push
cli
lock
adc
xor
pushl
mov
fnstcw
and
sbb
mov
pop
mov
rorl
lods
mov
xchg
push
mov
in
lahf
fwait
mov
xlat
in
ret
add
aas
add
sub
lods
ret
cmpsl
and
xchg
dec
call
scas
or
xor
sub
xor
or
stos
push
pop
sub
jns
out
and
mov
in
movsb
stc
loopne
sbb
or
arpl
mov
das
xor
sub
add
pop
sti
out
mov
dec
pop
in
jnp
daa
test
push
mov
add
jge
xor
ret
xor
lods
sarl
jmp
push
cmp
loopne
fnstcw
popa
xlat
xor
lret
into
insb
daa
lcall
mov
xor
repnz
ss
xor
jecxz
nop
or
in
cmp
mov
cmp
lods
dec
leave
xor
ret
xlat
mov
dec
mov
lret
test
inc
aad
inc
inc
aam
idiv
cli
jb
lea
stc
xchg
pop
push
in
sub
cs
inc
mov
call
pop
push
adc
lret
cmp
adc
out
cmc
jmp
mov
cmp
and
js
aad
or
fcmovne
aas
cmpsl
inc
gs
adc
ja
nop
cmp
add
scas
jbe
mov
xchg
sub
cmpsl
hlt
xchg
dec
pop
fucomi
int3
outsl
lods
sbb
ret
jmp
lret
add
cmp
ds
in
movsl
arpl
dec
movsb
jo
sub
inc
adc
fisubrs
cmp
jo
fisubl
sub
out
mov
pop
xor
inc
pop
aaa
adc
or
or
pop
mov
fimuls
fldcw
mov
cli
push
and
push
imul
jo
mov
push
lcall
es
mov
pop
sub
mov
mov
xchg
push
mov
mov
jg
cld
adc
loope
sti
dec
les
or
xchg
fsub
xchg
xchg
adc
sub
jns
test
imull
mov
push
mov
sbbb
fcmovnbe
mov
cld
xor
pushl
adc
mov
rcll
enter
lods
pushf
sbb
repnz
mov
push
cmp
jle
ret
mov
ljmp
xchg
testl
mov
lret
dec
xchg
mov
jb
mov
xchg
jecxz
std
negb
xlat
and
repz
popa
jle
xor
cli
xchg
jg
add
push
lods
fstps
sub
aaa
xorl
outsl
add
adc
push
aad
out
rcl
cmp
arpl
jge
inc
in
xchg
and
cmpsl
push
lret
xchg
ljmp
adc
ja
scas
scas
push
ljmp
clc
int
pushf
push
pop
dec
lcall
cmp
xchg
cwtl
mov
jl
add
inc
out
jecxz
je
sbb
dec
scas
pop
pop
xchg
cwtl
adcb
cli
pushf
iret
fstps
popa
mov
pop
add
jbe
mov
xlat
fdivrs
adc
cmp
in
inc
jno
je
xor
push
hlt
pop
dec
mov
push
cmc
ja
xchg
pop
dec
mov
mov
cmp
dec
stos
call
or
sahf
dec
sbb
cs
leave
stos
notb
pop
std
adc
jbe
jne
jmp
mull
iret
and
imul
orl
sti
pop
hlt
cli
call
ret
test
bound
xchg
in
dec
cmp
sbb
push
pop
adc
aad
jp
add
jo
pusha
mov
xchg
jecxz
jle
sub
pop
jge
fbld
add
mov
test
clc
lods
std
aad
fidivrl
mov
pop
int
jb
imul
mov
push
arpl
aad
cmp
lcall
mov
jle
add
test
xchg
or
enter
std
sub
aaa
leave
frstor
dec
dec
repz
aam
stc
mov
cmp
or
mov
jge
dec
sbb
pop
fisubrl
sbb
or
or
mov
sub
cmp
or
sahf
dec
sub
xchg
insl
out
mov
mov
dec
sbb
enter
push
aas
nop
mov
pop
sub
and
popa
lods
dec
jnp
out
mov
xor
pop
repz
sub
mov
sub
add
mov
sarb
es
inc
sub
mov
add
xorl
jnp
loop
fld
jmp
inc
lcall
sub
mov
push
in
fs
inc
into
lret
push
jmp
mov
mov
mov
cld
add
nop
pop
popf
sbb
fildl
sub
mov
push
aad
ficompl
cwtl
fsubrs
outsb
and
jnp
jge
cmp
adc
and
lret
and
and
lahf
imul
add
jecxz
ret
pop
lea
sar
jge
std
xor
movzwl
mov
in
push
jns
cmp
inc
mov
pop
ret
leave
in
inc
into
hlt
int3
pop
adc
pop
imul
hlt
xor
or
sub
push
sbbl
ret
es
mov
mov
enter
jb
nop
neg
pusha
xor
dec
cmp
lea
les
pop
stos
enter
push
add
mov
lcall
adc
pop
sbb
mov
mov
pop
sbb
pop
pusha
mov
dec
jno
imul
adc
mov
js
aad
imul
jo
cmpsl
out
shll
loop
adc
mov
push
xor
fldcw
into
jmp
sti
dec
and
shlb
out
clc
jecxz
mov
adc
xchg
dec
jle
pop
or
outsl
mov
rcrb
movsl
fistpll
or
dec
cwtl
sbb
push
cmp
pop
pop
mov
push
mov
jmp
lret
lret
or
xchg
out
jo
push
lea
fidivl
cmp
cmp
inc
stc
jecxz
cs
xchg
cld
fcmovnb
jle
cmp
add
sub
sub
and
cmc
dec
cmp
aas
push
adc
jmp
sub
inc
xor
xchg
mov
mov
jge
in
pop
stc
mov
push
pop
inc
lret
fdivrl
cmpsl
fbld
jmp
push
pushf
adc
in
add
cltd
xchg
or
push
data16
imulb
or
addr16
insl
xchg
and
mov
insl
std
push
and
and
dec
sub
xchg
es
mov
mov
xor
loope
fcmovb
jge
dec
test
aad
out
ja
push
add
xor
insb
xchg
in
push
inc
loopne
push
dec
movb
jns
sub
rcr
mov
leave
loop
mov
xor
mov
xor
mov
mov
cmp
into
mov
aas
jnp
setge
les
push
pop
mov
mov
pushf
dec
in
jl
iret
xchg
sbb
in
adc
sbb
push
cmovae
pop
add
push
addl
mov
inc
loop
or
test
mov
sub
cwtl
mov
ds
and
pop
lret
or
out
push
pop
mov
inc
xchg
inc
inc
rorl
inc
int3
pop
mov
adc
mov
add
mov
pop
xchg
int3
sti
and
add
in
cmc
push
fsubs
jno
es
aaa
insl
mov
pop
outsl
push
icebp
dec
imul
popf
imul
fbld
inc
and
mov
lods
fcmovbe
mov
pop
mov
pop
and
jne
mov
and
xchg
cmpsb
push
sbb
push
add
loope
mov
and
ficoml
lea
nop
sbb
push
rcrl
arpl
movsb
push
repnz
pop
call
loop
jb
or
lods
repz
test
jmp
jp
xchg
pop
sarb
fiadds
test
xchg
lock
cmp
cmp
stos
mov
and
test
adcb
or
fld
cmp
fwait
mov
cmpsb
dec
ja
and
jnp
shll
and
mov
lods
mov
in
cmpb
xchg
imul
decb
inc
xor
out
std
xchg
jmp
adc
cmp
push
pop
pop
in
fsubrl
aas
loop
push
inc
movsl
mov
inc
and
dec
pop
rcll
test
movsb
dec
stos
ret
mov
pop
inc
xor
jle
std
mov
in
fcoms
rol
inc
arpl
jg
or
ljmp
mov
or
fdivp
jle
add
pop
je
mov
mov
mov
das
mov
ds
xchg
lods
leave
dec
mov
add
out
add
frstor
pop
popf
adc
pop
mov
jb
and
fsubp
insb
popf
fwait
add
inc
pushf
popa
fisubs
mov
sbb
jl
sub
sbb
sub
cmp
mov
and
addr16
nop
test
mov
pushf
jle
mov
inc
sti
aaa
sub
inc
les
loopne
call
test
push
mov
cmpsb
ds
pop
in
cmp
test
sbb
mov
lods
fmull
fists
stos
jg
push
mov
and
dec
popa
repnz
shlb
popf
lret
cmc
lods
int3
mov
cmp
icebp
test
in
pop
loopne
outsl
pop
roll
mov
cmp
sbb
fnstsw
push
rclb
mov
jge
cmp
leave
push
xchg
stos
fsubl
sub
popf
inc
or
shl
mov
daa
and
int3
mov
les
jp
subb
adc
cmp
bound
mov
xchg
into
push
inc
stos
mov
inc
push
fwait
inc
call
test
arpl
push
add
sub
nop
mov
test
aaa
dec
mov
jnp
mov
in
and
lea
notl
and
call
divl
int
cmp
push
cmpsb
shll
and
mov
or
dec
shl
jne
imul
and
pop
mov
cmp
jno
add
rclb
cmp
xchg
inc
fsubrl
xchg
mov
push
lcall
cmpsb
inc
mov
push
mov
mov
addr16
jmp
or
xchg
test
dec
sub
jno
insb
dec
add
ds
aam
lret
adc
mov
testb
mov
mov
cmp
stc
add
mov
sti
inc
ljmp
mov
push
dec
pop
adc
pushf
xchg
ljmp
test
mov
push
xchg
ljmp
pushw
jns
pop
pop
les
stc
xchg
jle
nop
rcrb
stos
fistpll
jae
xchg
clc
inc
xchg
sbb
in
push
repz
ds
pusha
into
cmp
and
jmp
mov
inc
ret
cmpsb
repnz
sar
add
push
insl
pop
fnstcw
jmp
inc
add
mov
clc
and
js
xchg
cmp
xchg
mov
sbbb
adc
in
inc
dec
cmp
sub
shlb
cld
sub
idivb
sahf
or
jb
fs
fstp
and
push
mov
add
jg
in
xor
add
pop
jb
mov
movsl
xchg
mov
pop
mov
push
into
push
fcoms
sub
loop
mov
movsb
test
test
push
jge
dec
mov
xchg
jno
fsubrl
movsb
push
lock
sub
pop
in
add
es
ljmp
adc
pop
pop
mov
fldt
fsubs
je
rorb
mov
add
popa
mov
jmp
adc
icebp
or
lahf
mov
ss
and
xchg
std
aas
loopne
fnstcw
imul
jae
jge
mov
adc
jo
shl
jae
popl
push
xchg
adc
je
jmp
xor
xor
mov
fwait
sub
inc
adc
shlb
add
cmp
lods
lret
nop
scas
enter
loope
pop
popa
mov
jmp
cmp
in
test
jmp
sub
dec
xor
sbb
repnz
xchg
mov
leave
adc
in
pop
xorl
mov
fiaddl
dec
pop
rorb
cltd
imul
mov
dec
xorl
inc
lea
aas
dec
int
fisubs
sub
adc
xor
out
fs
aas
gs
sbbb
jno
or
loop
cmp
nop
adcb
std
repnz
fwait
arpl
enter
mov
jp
adc
xchg
mov
in
adc
testl
dec
int
ret
adc
je
arpl
shlb
adc
std
out
repz
pop
lods
sub
or
lahf
fsubr
pushf
xor
and
in
pop
xchg
repz
movsl
inc
xor
adc
push
std
andl
pop
out
out
and
mov
adc
rolb
inc
xor
push
out
pop
ss
cmp
inc
pop
fwait
and
loope
xchg
loope
xchg
dec
dec
dec
cwtl
addb
mov
loope
mov
jecxz
xor
dec
cltd
sub
idivl
add
mov
fnstenv
mov
clc
cli
xor
stos
js
push
enter
mov
jno
mov
subl
mov
jl
mov
cmpsb
leave
mov
mov
cli
xchg
or
mov
mov
movsb
jno
pop
ficoml
repnz
cmp
push
or
ljmp
dec
lods
loope
cmp
mov
cmp
mov
clc
aam
lret
and
flds
inc
pop
and
scas
cmp
dec
ret
sbb
inc
mov
xchg
jb
popa
jns
pop
push
out
xor
vphaddbw
jg
ljmp
jmp
cmp
dec
int3
ljmp
and
pop
imul
adc
lret
pop
xchg
mov
xchg
cmp
cmpsl
test
daa
adc
mov
dec
or
mov
cmp
pop
adc
cmp
sbb
movsl
inc
push
stos
mov
insl
cwtl
inc
dec
or
jb
dec
add
or
fcoml
jp
nop
lcall
fld
bound
enter
das
or
sbb
out
ret
add
jbe
pop
decb
aas
aaa
movsb
testl
addr16
xor
jmp
imul
les
lret
dec
popl
cmp
mov
dec
push
sbb
sbb
pushf
idivb
xor
andl
out
popa
bound
mov
stos
in
or
sbb
clc
mov
arpl
push
or
sub
mov
dec
in
leave
add
loope
lock
mov
add
sub
data16
std
out
xchg
pop
xchg
leave
gs
ljmp
pop
loope
bnd
push
enter
adc
cmp
cli
dec
in
add
mov
mov
cmp
sub
rorb
inc
fs
and
hlt
loopne
outsb
daa
int
and
lock
add
lods
addr16
add
cs
pop
dec
lea
and
roll
cmp
sub
push
push
cmp
je
into
lret
fidivl
and
enter
fidivs
mov
cld
adc
cltd
pop
cmp
iret
adc
xor
fs
call
icebp
lcall
mov
mov
mov
inc
sbb
adc
ja
test
data16
mov
cmpsl
test
lods
insb
cltd
push
stos
scas
fistps
lock
out
jge
pusha
lods
jo
push
mov
mov
dec
mov
xchg
mov
and
lret
sbb
pop
pop
xor
push
lods
mov
lds
test
sub
aaa
mov
fmuls
fistl
mov
mov
pop
jl
push
sub
out
clc
adc
sahf
in
sbb
iret
sbb
arpl
notl
stos
add
dec
mov
jbe
pop
aas
xor
mov
ret
adc
mov
dec
jg
popa
pop
movsb
xchg
adc
jle
inc
pushf
pop
addb
shrb
inc
cmp
adc
lea
mov
dec
adc
icebp
and
lea
sub
lret
jle
or
inc
scas
mov
adc
addb
cmc
call
pushf
dec
xchg
push
int
adc
mov
fisttpll
cld
xchg
xchg
ja
int
scas
sub
sarb
gs
aad
mov
sub
cmp
add
repz
out
ljmp
ljmp
lret
or
nop
sti
mov
hlt
in
dec
inc
sub
imul
shrb
mov
aaa
inc
inc
inc
sbb
ficomps
leave
jb
outsb
sbb
cmc
jno
fisttpl
sbb
dec
push
mov
out
mov
pop
xor
push
xlat
jge
mov
imul
adc
sbb
test
mov
xor
fstpt
lods
add
mov
push
pop
scas
ss
aad
arpl
sub
mov
sbb
or
inc
inc
or
mov
cltd
xchg
es
mov
addl
sub
inc
test
movsb
int3
lret
and
scas
push
sbb
jp
insl
and
sub
xchg
xchg
add
and
iret
ja
mov
out
add
in
pop
test
sub
fstl
inc
cld
out
rcrb
inc
insl
aas
adc
addr16
outsb
or
je
mov
loop
xchg
inc
addb
insb
inc
xchg
loopne
aad
and
loope
xor
mov
lock
mov
sub
mov
push
xchg
aaa
and
or
push
add
clc
fldenv
sahf
fbstp
leave
xor
in
or
mov
jg
xchg
inc
rcrb
lret
scas
sbb
cmp
outsl
sub
aaa
out
popf
popf
mov
add
mov
add
ffreep
or
or
inc
out
cmp
add
mov
mov
xchg
insb
test
sahf
mov
or
xchg
nop
mov
cwtl
fwait
insb
gs
das
add
dec
mov
mov
and
aad
xchg
inc
push
loopne
ret
insl
test
inc
xchg
into
or
rcr
and
xchg
dec
incl
mov
sar
jg
mov
dec
std
bound
dec
xchg
sub
or
jecxz
pop
repnz
mov
imul
aas
jecxz
mov
cld
xchg
dec
lock
sbb
jns
or
add
mov
sahf
push
xlat
sub
jne
jne
fcmovnb
pop
packssdw
fnstcw
in
push
jecxz
sbb
cmc
aaa
jnp
insb
and
mov
daa
loopne
pusha
fwait
xor
jle
cmp
jl
fs
lahf
ret
cmp
scas
cmp
nop
negb
fsubrs
in
outsb
cmp
mov
fiadds
jmp
mov
stos
inc
mov
jb
dec
ficompl
rcrb
pop
inc
popf
dec
mov
push
inc
sub
push
or
xchg
out
push
sub
pop
stos
pop
jns
out
lods
sbb
es
inc
mov
xchg
es
inc
jnp
inc
fcmovne
mov
nop
sub
cli
push
pop
add
or
add
xor
inc
xchg
mov
iret
or
mov
call
jo
inc
xchg
mov
inc
fcom
mov
popa
push
aam
mov
cmp
ficoml
enter
ds
aad
out
dec
sbb
sbb
out
inc
icebp
cmp
movb
mov
repz
cmp
in
push
daa
jle
or
push
addb
popf
xchg
shll
aad
ljmp
xor
dec
rorb
mov
enter
aam
fnsave
cs
call
popa
mov
push
addr16
in
cmpsb
jno
add
dec
cld
ss
or
pop
dec
js
dec
iret
or
cmpsl
jno
push
outsl
push
jmp
js
push
repnz
pop
in
iret
sub
mov
loopne
mov
or
in
outsl
cli
mov
sbb
test
cmp
cli
mov
rcrl
in
stc
mov
sub
pop
dec
jae
movsb
mov
hlt
jmp
adc
sbb
movsb
sub
or
inc
cmp
and
lods
jp
push
lods
inc
aaa
or
mov
xchg
imul
jmp
and
pop
mov
shr
add
test
adc
jmp
adc
cmpsb
push
cld
push
cld
imul
push
mov
add
dec
lock
jl
outsb
xor
or
add
lock
add
and
insl
sahf
adc
push
push
nop
repz
iret
dec
dec
les
popf
shrb
popf
mov
jmp
sub
adc
sub
data16
call
repnz
outsl
or
xor
mov
jge
jg
add
leave
mov
adc
rcl
jmp
or
pop
int
and
mov
mov
sub
mov
outsb
adc
cs
and
fsubrp
adc
adc
push
sbb
sub
pop
mov
adc
cltd
repz
jecxz
adc
add
jg
imul
mov
fsts
and
int3
mov
sub
fildll
jl
cmp
push
pop
add
es
inc
or
aam
cmp
adc
lods
xor
fistl
pop
mov
std
mov
lea
scas
xchg
jne
in
inc
in
add
jmp
jo
movsb
fdivl
xchg
jo
aaa
xor
inc
push
gs
mov
xchg
cld
lcall
addb
roll
sub
std
outsb
inc
arpl
push
shll
test
push
hlt
sub
inc
pusha
pop
std
cmp
stos
fldcw
sub
dec
adc
dec
cld
inc
shrl
popa
mov
adc
test
imul
call
xor
mov
arpl
jl
cmp
add
push
dec
jmp
pop
mov
jge
lea
sub
jp
rclb
cld
std
loopne
test
test
push
in
push
test
lcall
int
xlat
loope
scas
cmpsb
enter
fwait
xchg
xor
fnop
out
xchg
loope
pop
jnp
mov
sbb
mov
fadd
into
push
cmp
out
filds
add
or
fwait
std
add
ror
cli
imul
test
aam
lds
push
clc
mov
mov
xor
jno
ret
rcrb
lcall
andb
imul
lcall
jle
inc
cmpl
and
pusha
or
or
clc
das
inc
sbb
or
push
js
negl
adc
mov
outsb
pop
cmp
pop
inc
stos
lahf
test
mov
xor
int3
lock
jo
nop
push
in
jmp
fstpt
sbb
push
xor
cmp
mov
xor
cmp
pop
leave
mov
jno
shr
cli
imul
inc
inc
jle
inc
dec
mov
pop
imul
mov
aaa
xor
hlt
in
pop
in
and
and
dec
lods
test
adc
jmp
inc
cmp
xchg
pop
loopne
cld
cmpsb
call
pop
jg
es
pop
into
pop
lcall
xor
sub
inc
leave
jne
and
add
or
adcl
jae
dec
rol
icebp
test
add
inc
je
insb
scas
loope
add
pop
pop
sbb
scas
pop
mov
and
jnp
dec
xchg
jle
inc
icebp
or
sbb
add
rcl
push
jnp
inc
aas
data16
daa
mov
push
xchg
lods
dec
ror
outsl
clc
push
or
and
in
data16
les
lock
dec
lcall
iret
xor
xchg
pop
pop
es
inc
jns
dec
ja
add
cmp
cmp
dec
dec
es
mov
ja
add
push
ja
sub
iret
loope
shrb
mov
mov
push
adc
sub
pop
nop
adc
shl
jecxz
gs
push
out
jo
movsb
xor
lock
jb
mov
pop
popa
jp
push
push
sub
cmp
sbb
stos
arpl
xchg
cltd
clc
xchg
xchg
in
lods
nop
popf
inc
inc
add
cld
loope
mov
repnz
stos
scas
loop
movsb
xchg
sbb
jae
dec
mov
popf
shlb
cmp
dec
popf
jnp
xor
aad
jp
loopne
jg
and
addr16
adc
cmc
xor
mov
pushf
std
sbb
test
xor
mov
push
jle
rcrl
dec
and
imul
movl
loope
dec
or
mov
mov
xchg
sbb
pop
add
sbbl
scas
push
fcompl
jne
cmc
adc
dec
pop
mov
arpl
mov
rcr
inc
xor
mov
sbb
mov
js
ja
sub
mov
jle
mov
rolb
xor
je
test
xchg
cmp
dec
jg
sbb
stos
xchg
ja
push
mov
loop
adc
xor
lcall
or
decb
imul
xor
mov
adc
in
xchg
cmp
mov
mov
mov
lods
cmpsl
and
dec
scas
xchg
dec
test
pop
dec
in
add
mov
js
bound
jb
push
cs
sbb
jae
cmp
rclb
xchg
into
mov
adc
movsl
es
add
test
add
sub
push
xchg
mov
push
divl
cmc
iret
cmpsl
jnp
xor
pusha
imul
js
cltd
lods
xlat
lret
and
ret
dec
sub
add
mov
pop
pop
loope
insb
and
add
fs
cmp
xchg
rcll
ljmp
enter
movsl
cmp
aam
andl
push
sbb
push
testb
or
arpl
or
pop
xor
out
adc
push
repz
add
out
out
push
iret
cli
push
xchg
xchg
xor
inc
jno
or
sbb
mov
shrl
mov
movsb
icebp
data16
stc
scas
push
xor
xor
in
push
loopne
dec
pushf
xchg
pop
mov
sub
xchg
aas
inc
sbb
popf
leave
dec
sbb
out
lea
mov
sbb
arpl
mov
in
shl
inc
hlt
pushf
sbb
cmpsl
sub
ficoml
mov
aaa
cs
ja
dec
jae
in
sbb
or
push
and
rcrl
xor
sbb
nop
fs
mov
and
shll
fstpl
cld
adcl
call
ret
xchg
dec
push
neg
or
ret
shrb
sub
jns
xor
sbb
hlt
cli
mov
cmpl
stos
mov
dec
cmp
jne
lods
insb
gs
lods
mov
in
mov
push
push
cmpsb
je
in
jl
nop
push
push
xchg
pushf
cmp
lods
add
incb
jno
inc
bndldx
xor
in
push
stos
adc
addr16
sub
lds
adc
cli
sarb
sub
inc
xlat
push
cmc
cmp
inc
shll
inc
or
fs
arpl
mov
add
ret
cmpsl
loop
jmp
mov
xchg
icebp
roll
cld
movsb
and
push
nop
xor
fmull
push
pop
xor
lock
jae
pop
adc
in
lds
mov
inc
jp
sti
loop
sbb
into
lcall
sti
xchg
out
cmp
xor
loopne
repz
pop
cli
aaa
mov
sub
movsl
dec
icebp
sahf
insl
cmp
int
xor
mov
push
cli
add
out
sbb
fwait
xor
cmp
sbbb
aam
add
pop
mov
xor
sub
jle
iret
lcall
mov
push
loopne
jp
lock
cmp
mov
or
out
andl
sub
test
push
inc
in
sbb
popf
std
testb
mov
or
push
cmp
dec
jge
jns
cltd
and
jo
sbb
lcall
fnstsw
and
neg
jl
xchg
ljmp
pop
mov
cs
pop
sub
pop
sub
in
push
xor
cmpb
mov
inc
cmc
xchg
cltd
pop
ret
gs
dec
cmc
sahf
ss
inc
outsl
jns
or
adc
mov
and
pcmpeqd
inc
aad
inc
lock
and
and
in
push
pop
mov
jae
loope
outsl
xor
mov
fs
cltd
jae
sub
cmpsb
push
rcr
or
je
test
cld
jg
jle
cmp
jmp
scas
jnp
shlb
pop
dec
sbb
mov
leave
subl
into
mov
cmpl
mov
insb
dec
inc
insb
inc
adc
mov
fists
out
and
and
cmp
rorb
mov
push
test
or
push
subl
jle
insl
lahf
mov
out
sar
sub
je
and
mov
cmp
fidivrl
adc
sbb
dec
cmc
inc
mov
jne
lea
cs
in
adc
pop
aas
add
dec
dec
and
stos
es
clc
sub
stos
aas
add
int
icebp
out
test
outsl
cmpsl
stc
ds
cmp
and
popa
xchg
imul
mov
lcall
leave
pop
push
shll
mov
or
push
ss
push
dec
lods
push
out
pop
mov
and
fs
mov
adc
and
push
pusha
jmp
xchg
cmp
inc
popf
clc
ds
xor
or
mov
xor
and
push
mov
movsl
xor
dec
mov
pop
adc
sbb
ret
or
hlt
or
mov
push
push
fldt
adc
add
sbb
xchg
stc
mov
sub
stos
xchg
sbb
std
and
insl
push
pusha
mov
and
cmp
and
cmp
mov
pop
jno
icebp
cmpsb
sub
pop
stc
push
sti
int
mov
inc
ret
xchg
cld
push
repz
clc
js
pop
mov
ret
loope
dec
in
pop
sbb
stos
jg
pop
lret
enter
stc
xchg
mov
inc
adc
aaa
inc
pusha
fs
mov
rclb
adc
movsl
jnp
mov
add
icebp
jae
xchg
cltd
xchg
fdivrl
shl
loopne
pop
stc
add
xchg
inc
push
js
and
mov
and
inc
push
adc
push
sub
in
push
lcall
fsincos
inc
jbe
rcrb
inc
fdivl
adc
shrl
arpl
add
mov
mov
test
das
sbb
sbb
pop
mov
jp
sbb
fists
testl
or
adc
and
js
and
mov
add
outsl
cwtl
es
lock
mov
mov
in
mov
jne
leave
pop
ss
push
fdivr
mov
fldcw
cmpsl
pop
add
decl
test
ret
mov
mov
pop
sbb
in
ss
fsubp
mov
add
andb
dec
mov
jmp
ljmp
lcall
inc
aad
loope
imull
xor
decl
jg
or
inc
movsb
xchg
or
test
cld
push
add
jg
pop
sbb
mov
outsl
adc
mov
xchg
push
aas
adc
mov
leave
les
icebp
dec
das
insl
je
std
icebp
movsl
push
cmp
adc
sbb
mov
mov
push
dec
xchg
xor
dec
cwtl
dec
mov
sahf
jecxz
outsb
data16
rorl
nop
sbb
add
push
mov
mov
test
pop
mov
in
in
int3
push
pop
mov
lcall
sbb
xor
insl
clc
mov
aas
jecxz
aas
mov
leave
xchg
mov
push
mov
cmp
in
js
sub
repz
pop
xchg
dec
mov
mov
and
sarb
popf
cs
mov
jnp
das
aaa
push
fisubrl
sbb
dec
inc
outsb
sub
xor
or
cmp
lcall
stos
daa
or
xlat
or
and
fcmovnu
push
cmp
or
push
cs
inc
ds
popa
cwtl
jmp
daa
dec
mov
mov
pop
sub
pop
inc
inc
mov
in
aad
test
aas
sbb
pop
arpl
mov
pop
pushf
mov
jbe
fcomps
popf
jl
loope
or
jp
add
imul
adc
in
in
cmc
fnstcw
ja
jl
jne
cmp
loope
mov
into
push
cwtl
or
sbb
sub
mov
addr16
repz
test
out
jmp
fmuls
addr16
mov
xchg
sub
jp
cmp
popf
mov
cmpsl
pop
and
mov
ja
rcl
mov
sub
sub
inc
push
cmp
jne
cmc
clc
cmp
aaa
cltd
sbb
fdivs
dec
fs
pop
aaa
jae
sbb
sub
lcall
std
test
sbbb
cltd
sbb
lret
daa
imul
pusha
push
enter
push
inc
out
mov
ja
stos
mov
mov
out
mov
adc
bound
add
cmpsl
mov
mov
add
rolb
ret
cmp
sarb
test
inc
data16
sti
or
add
ret
ljmp
mov
xor
mov
pop
pop
stc
gs
xor
add
mov
imul
das
or
mov
pop
inc
pop
out
cwtl
icebp
sub
das
dec
mov
out
out
icebp
pop
aas
stc
sbb
cltd
and
mov
jmp
enter
cmpsb
ja
lret
out
mov
sbb
les
adc
cmpsl
test
jecxz
jb
or
popa
das
repz
sbb
xchg
negl
jle
loopne
push
gs
ja
sarb
out
fwait
lahf
aam
dec
pop
test
test
push
fld
jne
cmp
xchg
dec
daa
enter
jns
int3
pop
in
and
fisubrs
mov
push
lock
ret
mov
and
std
gs
lea
pop
rcll
les
ja
sub
mov
sbb
scas
fildll
aad
jp
mov
mov
dec
cmp
mov
sbb
mov
ficoml
adc
mov
and
xchg
dec
mov
out
mov
test
pop
add
push
push
clc
xchg
bound
xor
jg
test
xchg
sub
cld
nop
mov
insl
mov
xorb
pop
inc
fimull
push
fucomi
js
ds
imul
dec
adc
pushf
stos
pop
or
mov
lret
xor
mov
scas
pop
das
stos
fidivrl
lret
mov
mov
xchg
orl
cmp
push
gs
pushf
sub
insl
jl
mov
push
lods
mov
mov
jo
push
sbb
test
cs
add
cmp
mov
femms
scas
dec
in
dec
jge
pop
out
test
sbb
push
stos
cmp
decb
hlt
push
jmp
inc
cwtl
into
sbb
mov
addb
out
inc
xor
sarl
sar
dec
outsb
sub
sbb
stc
repz
stos
fimull
xchg
push
xchg
lcall
ret
inc
sbb
sub
and
mov
push
sub
data16
mov
lods
arpl
mov
test
scas
das
jne
inc
ror
pop
or
loope
adc
xchg
das
adc
push
std
sbb
hlt
mov
clc
sub
jecxz
adc
pushf
call
ret
xor
mov
sbb
mov
test
les
popl
xchg
dec
mov
mov
xchg
pop
push
lcall
xor
mov
data16
mov
adc
mov
sbb
loope
lahf
int
mov
push
loope
inc
popf
add
in
mov
and
int3
jo
dec
mov
in
pop
sub
push
imul
div
outsb
inc
je
lea
mov
pop
sub
es
xchg
rolb
adc
shlb
or
xchg
cmp
pop
mov
xor
lcall
cmp
sub
std
xlat
daa
int
adc
push
fcmovb
mov
ja
sbb
test
inc
ja
cmp
or
and
enter
mov
jp
mov
sub
pop
dec
inc
sbb
adc
mov
add
icebp
pop
adc
or
mov
outsl
cmp
je
mov
xor
jno
mov
lret
scas
mov
pop
arpl
test
xchg
push
frstor
sbb
dec
xchg
mov
int3
cli
adc
les
out
aas
int3
push
inc
idivb
add
imul
dec
je
repz
mov
movsl
pop
pop
add
mov
stc
je
cmc
in
movsl
test
insl
or
xlat
sub
lods
movb
xlat
jbe
loope
decl
addr16
aas
xchg
cmp
mov
dec
sub
xor
sub
pop
std
cmpsb
mov
and
mov
and
ljmp
inc
xor
push
mov
add
add
gs
nop
cmp
ret
cmp
jns
sub
dec
bound
inc
xchg
repnz
out
test
mov
popf
and
repz
lea
xchg
in
xor
add
iret
int3
or
sbb
jo
icebp
adc
xor
add
xlat
pop
les
lods
std
shlb
repz
popa
in
jg
cmpsb
shrl
mov
mov
leave
rorb
out
pop
imul
xor
aad
sub
leave
cmp
cmp
push
aas
sbb
lock
xor
test
in
inc
mov
cltd
ja
test
xor
fbld
pop
and
or
je
cwtl
lock
push
pop
adc
add
push
in
add
lret
stos
fs
in
xchg
xor
adc
mov
test
loopw
dec
dec
sub
inc
or
outsl
js
add
push
lds
arpl
pop
and
je
ljmp
outsl
adc
jo
sbbl
mov
mulb
jno
es
aam
push
cld
enter
aam
push
rcl
fwait
mov
ret
iret
mov
pop
std
sbb
scas
repnz
popa
push
mov
xor
sahf
sub
mov
lret
enter
adc
addl
mov
into
iret
sub
inc
subl
ret
shll
add
insl
cwtl
pop
sbbl
mov
jecxz
les
xchg
adc
or
cmp
inc
mov
sbb
es
mov
sub
xchg
mov
sub
fbld
adc
or
jns
dec
mov
mov
xchg
jno
xchg
add
pop
mov
ja
js
in
dec
imul
pop
xchg
xchg
pop
mov
jecxz
hlt
jbe
add
jb
shl
push
in
data16
fcomps
xchg
jne
enter
stos
aad
cmp
inc
sub
jg
aaa
push
mov
mov
mov
jne
cmpsb
xor
jne,pn
arpl
adc
adc
jl
je
mov
dec
std
jbe
mov
jns
dec
js
inc
dec
sbbb
cmp
fimuls
pop
lods
sar
sub
addr16
mov
ljmp
fcomps
or
xchg
test
push
lcall
jne
fdivr
mov
jae
inc
xor
sbb
push
cwtl
push
mov
push
add
dec
pop
jnp
dec
lds
aam
mov
icebp
shlb
xlat
sub
pop
xchg
nop
ret
lcall
xor
sbb
cmp
and
ljmp
dec
pushfw
aam
sub
out
push
sbb
jne
loopne
insl
popf
or
movsb
aam
adc
ret
xor
pop
jae
repz
lds
movsl
mov
out
lea
fcmovne
or
jb
shrl
mov
notb
test
fidivl
lods
mov
xchg
pop
jmp
push
movsb
pop
jae
xor
fistl
mov
xor
push
popf
pop
scas
mov
add
test
pop
lods
scas
lods
cmpsl
unpcklps
ss
xor
out
sub
daa
aaa
sbb
movsb
int
adc
sub
push
pop
inc
and
or
cmp
inc
sub
std
xlat
lcall
xchg
sbb
pop
jmp
inc
xchg
pop
cmpsl
or
jg
in
dec
or
lods
sahf
popf
fildll
lock
sbb
repz
into
bound
jle
inc
stos
pop
jecxz
jns
xor
sub
inc
mov
adc
loopne
lcall
ljmp
jmp
adc
iret
jns,pt
mov
rorb
mov
sbb
call
xchg
aaa
mov
fimull
push
sti
inc
dec
mov
outsb
sbb
or
inc
push
sub
pop
mov
xchg
movsl
push
cmp
sub
int3
ss
dec
lea
xchg
pop
in
sysexit
fs
insb
mov
lods
cmp
in
sti
cmp
ficompl
stos
sbb
adc
icebp
cmp
jne
inc
sbb
out
xchg
cld
push
test
sahf
fcmovne
repnz
pop
mov
mov
shl
subb
les
gs
sub
lock
je
lods
ret
cwtl
mov
xchg
out
mov
out
int3
in
outsb
xchg
mov
imul
xchg
cmp
les
fcompl
cmpb
mov
pusha
mov
rcr
sub
das
cmpsl
xchg
out
or
push
cmc
jo
pop
popf
repz
fwait
xchg
scas
scas
lret
movsl
popa
ljmp
pop
arpl
test
pop
mov
or
lret
and
insb
fdivrs
repnz
leave
sti
jle
mov
and
or
xchg
movsb
cmp
jp
cmpb
pop
les
cmp
push
add
cli
jecxz
dec
stos
sbb
cmpsl
mov
mov
das
push
cltd
addr16
push
or
negl
out
pop
sub
and
ja
cld
xchg
push
mov
dec
xlat
aaa
mov
cltd
push
inc
add
jne
std
push
jp
push
leave
sbb
ret
mov
jmp
test
cs
or
inc
sbb
sbb
or
bound
jae
adc
loop
decl
adc
mov
sbb
stc
fiaddl
jmp
jecxz
pop
xor
aaa
pusha
sub
fwait
pop
fmull
jecxz
iret
or
iret
rorl
fldl
xlat
mov
add
push
and
dec
push
sbb
addr16
sub
sbb
dec
jmp
test
pop
xlat
scas
shll
ret
repz
xchg
xchg
sbb
mov
pop
sar
inc
mov
push
pop
int
js
popa
sbb
lods
jbe
jnp
aam
fidivrs
lret
inc
adc
sbb
push
imul
jbe
dec
cmpb
sti
hlt
mov
and
jecxz
inc
adc
test
pop
cmpsl
pop
mov
cltd
outsb
outsb
push
mov
and
xor
xor
add
pop
dec
inc
jp
jno
push
sub
roll
dec
test
lock
xchg
xchg
movsb
jo
ret
daa
test
and
push
aaa
andl
jbe
lret
xor
outsl
adc
decl
jl
adc
pop
rcrb
jae
mov
mov
popf
cmp
arpl
outsb
add
les
cmpsb
mov
das
and
dec
xchg
cmpsl
outsl
pop
jmp
les
push
mov
stc
lcall
sbb
adc
ficomps
cld
inc
arpl
insb
push
dec
les
cmovs
lret
popl
repz
add
pop
mov
mov
or
xor
cs
mov
adc
add
sbb
out
jl
mov
lods
dec
lahf
xor
jb
pop
xor
cmc
cmp
pop
cmp
sub
pop
lods
xor
cmp
pop
xchg
insl
sbb
and
popa
in
xchg
add
lods
jnp
fstpl
ss
xchg
adc
insl
jle
mov
mov
xor
dec
mov
or
xchg
nop
xchg
mov
hlt
fcomps
cmp
push
mov
int3
mov
daa
jnp
std
addr16
adc
mov
idivb
in
inc
mov
sbb
mov
in
inc
sbb
jnp
mov
jmp
lods
dec
fsubl
mov
fs
adc
and
dec
sub
jmp
pop
rcll
adc
mov
fs
roll
cld
mov
insb
mov
lods
push
pop
pusha
jbe
pushf
mov
jno
dec
lahf
addb
call
fwait
fs
xor
lods
fbstp
add
fs
xor
mov
pop
mov
and
inc
sbb
pop
test
repnz
mov
push
cmpsb
loopne
sub
stos
cmp
xor
iret
in
int
movsb
and
dec
push
sbb
out
push
add
xchg
jno
fcomps
test
inc
fstl
xchg
int
pop
std
enter
popa
mov
enter
in
pop
mov
ja
cmp
imul
jg
jmp
lds
data16
int
inc
cmp
les
inc
lcall
movsl
stos
cs
push
mov
insl
mov
loop
test
pusha
ljmp
and
push
lea
and
int3
js
inc
out
rcr
fmuls
aam
icebp
pop
mov
mov
sub
mov
imul
cmp
int3
cld
mov
leave
xor
mov
push
arpl
cmp
jns
lcall
add
movsl
mov
out
dec
sub
hlt
inc
sbb
push
pop
add
stos
dec
cmp
out
xor
jne
pop
sub
and
push
push
mov
sub
mov
jo
jae
dec
push
cld
jl,pn
xor
jne
push
insl
mov
xchg
cmpsb
mov
addr16
adc
push
sub
jne
fstpt
push
leave
movsb
sti
pop
add
xor
xor
mov
jae
or
scas
push
pop
dec
std
out
pop
sbb
fdivrp
fsts
cmp
sahf
sbb
pop
adcb
lock
mov
mov
push
pushf
mov
pop
movsl
pop
adc
sub
inc
mov
test
sub
out
inc
mov
inc
fdiv
adc
out
xchg
lods
cmp
repnz
add
xlat
inc
test
jge
nop
js
je
test
out
cwtl
test
push
add
leave
mov
lods
or
pop
imul
dec
clc
das
leave
insb
mov
aad
and
nop
sub
scas
dec
push
jle
out
mov
push
xchg
adc
sub
out
addr16
sbb
cmp
popa
scas
and
repz
stc
nop
and
out
out
pop
mov
inc
and
enter
push
hlt
mov
cli
dec
pop
sub
sub
jmp
inc
sub
es
mov
dec
mov
mov
jns
or
shll
outsb
sbb
adc
push
clc
push
daa
sbb
and
sahf
jo
movsb
shll
xchg
sub
or
lea
cmp
mov
outsb
push
sub
mov
mov
xor
movzbl
int3
jno
fsubrs
cmova
push
push
push
scas
jmp
jg
jge
mov
ds
xchg
lahf
enter
mov
and
push
adc
pusha
addr16
arpl
inc
in
fnstcw
dec
mov
mov
pop
add
mov
bound
mov
fsubrs
mov
outsb
jp
pop
push
adc
push
addr16
fstpl
lret
stos
and
icebp
cld
cmp
cli
mov
out
lea
add
push
mov
fistpl
stc
jge
jmp
cs
jecxz
dec
test
mov
cwtl
adc
cmp
stc
popf
lret
jno
push
cmc
dec
stos
push
loopne
xchg
pop
inc
or
aad
jl
push
psubd
jl
pop
mov
xchg
sbb
push
adc
add
dec
mov
jmp
pop
scas
add
ss
push
std
and
sbb
ja
xchg
cs
cmp
les
dec
push
out
mov
out
movsb
pop
push
jbe
add
insl
xchg
and
pop
cli
sbb
add
push
mov
lcall
or
sub
pop
roll
adc
stc
sbb
inc
push
sbb
fwait
cld
fdivrs
pop
pushf
inc
out
faddl
repz
popl
pop
pusha
ja
lret
sbb
lods
mov
add
out
add
cmp
lret
sbb
sbb
inc
mov
xchg
dec
or
adc
sbb
pop
mov
les
cli
dec
pop
pop
mov
jmp
cltd
psubusb
out
xor
mov
adc
pop
arpl
jbe
out
inc
cld
shll
mov
or
xchg
ss
pop
popf
call
cmp
mov
add
dec
xchg
sbb
or
fs
dec
cmp
xor
adc
add
mov
out
mov
or
loope,pt
int
push
and
push
lea
mov
test
xchg
xlat
test
adc
xor
fs
mov
fmuls
pop
out
iret
andl
lods
dec
mov
pop
pop
lods
cld
jl
sub
insb
ss
pop
lar
ljmp
movsl
adc
jnp
jge
lcall
sub
je
dec
arpl
rclb
pop
pop
in
sub
add
xchg
flds
dec
pop
loop
jns
and
icebp
mov
cmpxchg
lds
sbb
mov
dec
push
arpl
outsl
pop
push
push
add
mov
jbe
sti
inc
pop
inc
bound
push
mov
xor
rcrl
cmpsb
and
aas
rcrl
pop
mov
mov
das
stc
push
inc
jne
hlt
out
inc
mov
cwtl
rcrl
mov
mov
jo
ret
test
rcrl
add
call
add
iret
test
jle
lea
inc
jg
xorl
or
inc
mov
repnz
arpl
sbbb
push
leave
test
mov
mov
hlt
xchg
cmpsl
cli
shrl
in
sub
mov
pop
shrl
loop
push
jmp
lea
jo
clc
cmpsb
movsb
mov
or
movsl
pop
and
sbb
mov
in
lahf
cmpsl
negb
jae
fwait
pop
orb
push
add
inc
sub
pop
push
mov
jae
mov
add
push
fstps
cltd
sbb
fists
lret
clc
jno
sbb
push
fstps
xor
mov
jne
mov
mov
jb
pop
push
int3
and
fwait
add
adc
inc
lret
loope
dec
les
popa
imull
add
dec
push
stc
ud2
fs
inc
insb
and
mov
stc
xor
addr16
pop
and
cmp
sub
pop
mov
fldl
push
xor
jmp
sbb
es
mov
mov
lea
mov
push
test
xor
iret
out
rolb
lods
jae
xor
pop
mov
shlb
mov
mov
dec
std
std
xor
add
dec
or
jge
stos
sbbb
xchg
sahf
pop
adc
andl
shll
mov
ret
push
xor
daa
push
and
or
mov
stc
popa
inc
jno
cwtl
sub
pop
test
sub
pop
xor
fmuls
xchg
dec
mov
mov
xor
sub
in
mov
mov
pop
fiaddl
fsubl
or
dec
inc
pop
pop
add
mov
add
push
and
sarl
jl
pusha
mov
or
mov
jbe
jne
pop
mov
cmp
xchg
pushf
scas
mov
or
and
dec
andl
jo
imul
int3
add
push
idivl
mov
test
stos
repz
push
and
test
dec
sarb
stos
and
mov
sahf
xchg
or
pop
lcall
insl
jge
mov
out
jns
mov
fidivrs
jo
push
push
mov
push
mov
bound
sbb
push
nop
out
fistpll
popa
insb
adc
in
nop
jg
or
pop
add
and
pop
sub
rcrb
push
lock
jo
cmp
jb
aad
mov
or
daa
shrb
das
stos
pop
jmp
inc
sub
cmc
mov
shlb
data16
setbe
dec
ud2
jnp
cld
pushf
cs
das
xlat
rcrl
or
repnz
cmc
into
xchg
hlt
xor
push
pop
pop
test
inc
xchg
inc
mov
pusha
adc
cmovl
sbb
xor
shl
adc
cltd
addb
adc
pushf
xchg
or
outsb
push
mov
loope
cmc
popa
xchg
aam
loopne
and
push
jge
pop
mov
pop
jne
fs
ljmp
sbb
js
dec
mov
imulb
test
add
sbb
xchg
lcall
dec
out
shll
fwait
add
jno
lcall
cmpsl
mov
push
jmp
fsubrl
jne
mov
icebp
or
jns
insb
push
lret
es
inc
xchg
lods
loop
mov
cmp
dec
dec
dec
lea
adcb
hlt
inc
sub
test
adc
cmp
mov
xor
mov
sub
xchg
js
imul
clc
loopne
mov
xchg
or
sahf
test
xor
and
fnsave
cmp
fwait
and
mov
pushf
jne
arpl
and
adc
hlt
inc
test
pusha
pop
mov
fildl
pop
test
outsl
fistl
pop
enter
test
sbb
jge
mov
movsl
sub
hlt
push
dec
jno
popf
repnz
and
mov
xchg
push
sub
and
mov
call
sti
sub
hlt
adc
dec
stos
into
add
xchg
repz
push
das
movsb
push
mov
add
mov
push
inc
sbb
jle
jno
shl
add
xchg
and
adc
xlat
jp
mov
xchg
jmp
jns
or
push
inc
ret
lcall
pop
jp
inc
lret
test
pop
hlt
dec
dec
mov
mov
dec
in
or
test
add
sub
and
sbb
repnz
mov
aam
subb
out
or
daa
sahf
fwait
cwtl
stos
mov
fnstsw
sub
adc
xchg
lret
push
push
stos
dec
fldenv
cmpl
cwtl
arpl
xor
or
push
or
mov
call
mov
movsb
dec
mov
adc
cld
scas
adc
dec
jae
sarb
push
stos
mov
sub
pop
cmp
and
mov
add
loop
test
scas
sbb
pop
fmull
jb
fadds
sti
fdivr
movsl
and
push
jge
cmp
jne
mov
scas
mov
insl
arpl
ljmp
cwtl
pop
call
push
mov
cwtd
shrl
loopne
mov
mov
dec
sbb
pop
mov
dec
jp
dec
shlb
div
stc
adc
xor
xlat
inc
jbe
ljmp
sub
sub
loope
ljmp
data16
rclb
jp
push
sbb
cltd
jns
xchg
pop
stos
stos
mov
mov
sub
xchg
jle
push
xor
pop
popf
das
or
in
adc
cli
std
imul
in
ret
or
ljmp
fisubs
push
push
repnz
adc
popa
dec
insb
add
rolb
ret
outsl
seta
cmp
addr16
rcll
pop
jne
lea
mov
aam
or
push
cli
lods
outsl
fnsave
inc
mov
pop
push
outsb
mov
jl
out
in
push
cmpsb
fldcw
add
cmpsb
ljmp
pop
fmull
sahf
mov
call
xchg
idiv
dec
and
fistpll
dec
push
jmp
sbb
xchg
insl
js
pushf
bound
pop
jg,pn
or
aad
push
pop
xchg
push
mov
sbb
nop
sbb
xchg
insb
sbb
popf
sbb
sbb
lcall
mov
js
mov
jecxz
inc
push
test
scas
ficoms
inc
jle
test
test
dec
mov
ljmp
sbb
popf
jecxz
push
pop
repnz
fidivl
dec
pushf
inc
cli
pop
out
mov
add
inc
pop
inc
inc
mov
lcall
dec
jg
xlat
adcb
iret
xor
psubusb
mov
or
or
insb
mov
jecxz
out
cld
xchg
jl
icebp
pushf
lods
inc
aad
lahf
pop
ja
leave
adc
lret
dec
ljmp
bound
inc
sub
sub
mov
cmpsb
pop
jne
imul
sbb
cmp
push
add
dec
xor
jge
call
decb
mull
inc
repz
lds
add
lock
pop
movsl
push
mov
sbb
aad
js
xor
inc
idiv
push
or
fdivrl
outsl
subb
aad
pop
out
xor
aam
sub
outsl
sub
cmpb
insb
nop
and
stc
aaa
or
sub
aad
call
pop
mov
and
jp
imul
pusha
in
inc
cli
int3
xor
jecxz
enter
out
xor
idivb
inc
sbb
xor
push
sub
dec
add
shrl
incb
call
or
dec
mov
sbb
icebp
stc
sbb
outsb
xchg
pop
xor
cmp
or
inc
mov
or
dec
sbb
in
mov
mov
mov
xor
mov
cmp
inc
inc
xchg
es
mov
add
inc
leave
jg
mul
out
fstl
mov
rorl
hlt
lret
sahf
ficoml
inc
pop
or
push
repnz
adc
push
pushf
pop
movsb
sub
bnd
gs
adc
cmp
in
out
jb
sbb
sub
int
xor
insl
sbb
push
push
push
jecxz
outsl
jns
icebp
test
sbb
in
insb
add
push
inc
fisttpl
sbb
inc
push
fnstcw
adc
data16
push
int3
in
or
xchg
lret
data16
sub
jno
adc
cmp
sar
inc
xchg
int
or
nop
jg
test
outsl
push
push
fisubl
lahf
lods
pusha
mov
lcall
movsb
adc
addr16
sti
movsb
test
sbb
push
mov
cmpsl
movsb
pop
cmp
shlb
shll
sub
je
sti
sti
pop
lea
adc
inc
adc
push
push
add
sub
and
pop
dec
xor
push
fldl
inc
dec
mov
mov
iret
fisubs
xchg
cmp
xchg
lahf
hlt
pop
pop
xor
inc
sub
push
arpl
je
pusha
dec
inc
call
fstpl
adc
int
stc
adc
inc
adc
es
idivl
jb
in
fmull
call
lea
inc
sub
mov
cld
sti
cli
outsl
rolb
incl
clc
jmp
add
daa
jno
xlat
lret
pop
inc
cmpsl
adc
rcll
aas
dec
mov
popa
cld
incl
mov
inc
xchg
test
and
mov
ret
lahf
pop
in
aaa
mov
add
shl
fstpt
xor
mov
adc
iret
sub
movsb
test
mov
idivb
bnd
lock
cltd
xorb
adc
cld
outsb
sahf
aam
mov
mov
mov
notb
and
imul
and
andb
push
adc
cmc
inc
mov
jb
test
test
adc
or
mov
pushf
inc
jno
or
out
popa
subl
in
or
sahf
out
stos
pop
and
arpl
or
orb
imul
dec
xchg
jb
pop
shrl
int
cmp
jno
xchg
pop
cmc
sarl
mov
mov
stc
sti
insl
loopne
sub
xorl
scas
push
dec
mov
xchg
sahf
push
in
lods
push
mov
stc
cmp
icebp
mov
negb
stc
addb
fstpt
mov
xchg
sub
mov
scas
xchg
int
out
pop
or
ja
inc
addb
xchg
adc
mov
in
push
xor
fldcw
fcompl
cli
pop
scas
cmc
lret
int
xchg
loopne
push
bound
in
jmp
inc
add
mov
sub
incb
jae
mov
dec
mov
or
jnp
pop
mov
movhps
andl
jae
xchg
jle
jae
xchg
jb
jae
cmp
addr16
sahf
jae
notl
fnstsw
enter
dec
sti
dec
adc
ret
shll
mov
cmp
mov
xor
dec
call
pop
xchg
dec
xor
rclb
inc
lock
pop
aam
scas
ret
ss
sub
push
lods
std
push
inc
pop
pop
loop
add
inc
stos
mov
pop
pop
mov
ljmp
ret
adc
loopne
int3
add
lret
out
jge
lods
ret
push
ljmp
add
lahf
jle
js
or
out
adc
xchg
fwait
sarl
ficompl
pop
push
inc
in
mov
mov
repz
jmp
cmp
outsl
ja
stos
cs
sbb
enter
mov
fsubl
add
lea
sahf
cmpsb
dec
sti
cmp
fidivrl
jb
into
and
andb
push
inc
push
add
int3
inc
pop
dec
into
dec
or
hlt
sbb
lret
nop
adc
sahf
mov
and
andl
mov
lret
or
les
lret
into
xchg
pop
xor
and
sbb
sub
lock
pop
test
outsb
insb
mov
das
sbb
sub
or
jp
xchg
lods
cwtl
cli
pusha
xor
mov
stos
adcb
inc
repz
faddl
das
aas
sub
lea
sbb
in
pop
push
into
mov
pop
sub
pop
ret
mov
xor
outsb
in
pop
mov
mov
cmpsb
adc
jns
sahf
pop
jp
aas
xor
sub
cmp
popa
stos
jb
push
cmp
insb
xchg
es
movsl
std
iret
push
cmpsl
adc
das
push
mov
inc
jnp
xchg
dec
add
std
lret
push
out
mov
stos
jmp
jp
scas
adc
shr
cmp
std
adc
lods
mov
or
pop
jl
sbb
mov
iret
cmp
outsb
dec
and
and
and
movsl
popa
push
xor
or
add
sbb
sub
popf
in
ret
popf
mov
cmp
outsb
std
sub
cmpsb
add
xchg
xor
xor
bound
daa
push
lock
lret
shl
add
xor
imul
fists
xor
mov
imul
mov
mov
or
push
cmpsl
or
mov
clc
jecxz
jbe
addl
andl
xlat
and
push
mov
dec
xchg
fisubl
shll
popf
push
sti
int
lock
test
movl
lahf
gs
pop
je
and
push
dec
or
dec
mov
mov
inc
push
aad
pop
test
adc
cmp
mov
mov
imul
movsl
aas
mov
cltd
adc
jge
mov
int3
pop
push
jge
push
sbb
adc
test
mov
or
push
ret
mov
sbb
xchg
push
data16
pop
fistl
and
ficoml
pop
lcall
mov
mov
aad
test
and
mov
test
rolb
inc
movl
sub
cmp
fwait
mov
pop
out
sbb
jp
out
push
mov
into
push
cmpsl
in
push
xor
nop
mov
test
and
xor
mov
inc
mov
fs
in
cltd
fcomps
xlat
and
ret
mov
mov
cwtl
jp
in
loop,pn
pop
fbld
icebp
lock
jbe
jmp
or
jne
cmp
jle
pop
mov
ficomps
dec
stos
mov
sbb
fisubrs
sahf
adc
mov
jns
mov
mov
scas
mov
icebp
repnz
jle
aaa
or
jmp
pusha
mov
mov
jb
inc
cmp
out
jp
cltd
scas
pop
jne
into
fcmovnu
cmp
and
ret
loopne
les
movsb
das
pop
mov
iret
xor
cli
out
dec
fbld
fstps
push
or
add
jb
adc
das
lahf
push
push
int3
push
sbb
test
test
dec
aaa
push
jno
mov
daa
pop
test
mov
imul
add
pop
cmp
mov
pop
pmullw
jno
mov
push
lret
movsl
pop
pop
loope
ja
xor
or
mov
daa
ret
lock
mov
xor
inc
cmp
push
sar
cmpsl
pop
arpl
xchg
adc
ja
bnd
sub
les
out
jno
test
mov
dec
in
lahf
and
dec
jo
popf
fwait
ret
cli
imul
fdiv
mov
leave
leave
rcr
sub
orl
mov
push
pop
fimuls
jb,pn
xor
std
fldt
jb
ja
hlt
sarb
into
js
jge
std
stc
int
xor
test
cmc
inc
int
and
ljmp
test
sbb
jno
scas
push
adc
lret
mov
int3
or
mov
inc
inc
mov
dec
out
mov
cmpb
and
lahf
xor
mov
negl
pusha
push
dec
sahf
lods
lret
push
sub
lea
ljmp
jl,pt
icebp
and
out
push
test
insb
push
call
sub
jno
sub
fisttpll
lock
sub
sbb
cs
roll
xchg
add
lret
lock
add
addb
and
adc
out
mov
mov
sub
repnz
popa
fs
aas
cltd
popa
or
pushf
or
hlt
out
aad
cs
fdivrl
sbbl
mov
pop
pop
cmp
cld
inc
fists
add
push
add
mov
sub
xchg
inc
mov
xor
push
jg
jne
outsb
jmp
out
leave
mov
stos
jo
aam
ds
outsl
mov
test
mov
add
je
mov
mov
leave
sub
pop
add
icebp
movsl
cmp
loop
xor
push
push
fimull
and
jb
xchg
into
or
and
idivb
bound
dec
in
in
popa
xor
sbb
orb
lret
jno
and
push
iret
les
dec
in
aad
sbb
jl
lret
push
aaa
pop
adc
fsubs
jnp
sahf
fisttpll
dec
adc
js
xchg
jns
xor
dec
int3
scas
lock
xchg
lret
xchg
jp
aaa
mov
hlt
sahf
mov
int
adc
add
jne
fcomi
int3
jl
gs
cmp
and
push
mov
inc
test
jg
adc
sbb
jmp
jge
inc
jge
mov
mov
rcrl
lret
mov
mov
inc
lds
dec
test
gs
sbb
cmp
jl
ffreep
jl
xorps
xchg
jae
nop
in
push
nop
in
sub
jne
push
lahf
imul
fwait
cwtl
mov
mov
idivb
movsb
shl
inc
push
cltd
or
xchg
xor
mov
sbb
jge
push
mov
sti
call
mov
xchg
cmp
sbb
adc
mov
loope
mov
lret
xchg
repnz
test
jl
out
repz
imul
cmp
rorb
pop
or
jno
inc
cmove
insl
imul
stos
movsb
jbe
sub
xchg
subl
add
or
add
mov
sub
push
movsb
mov
push
jbe
cmp
pop
into
sub
jbe
es
add
enter
pop
filds
inc
sub
adc
push
sbb
movsl
jp
dec
mov
cmpb
outsl
cmpsl
out
xor
sbb
xchg
or
insb
inc
pop
and
data16
cmpsb
scas
mov
mov
pushw
out
in
fwait
jp
mov
xlat
jge
ss
data16
mov
jno
cmp
jecxz
sub
pop
aam
adc
movb
mov
ret
gs
subl
push
aam
sarb
insb
scas
fcoms
dec
inc
test
xlat
fnstsw
dec
inc
or
xlat
push
add
jge
push
test
fincstp
xorl
ljmp
pop
cmpsb
or
out
mov
fs
or
inc
mov
mov
add
xor
lahf
cs
aas
fldt
jg
in
lds
pop
lcall
mov
and
mov
movsl
mov
loope
sbb
popf
arpl
and
gs
in
and
cltd
xor
xchg
mov
repz
ljmp
mov
jae
mov
orb
push
jnp
mov
xlat
and
cli
mov
xor
loopne
movsl
inc
and
clc
or
mov
or
insb
ljmp
push
adc
pop
mov
cwtl
loopne
push
sbbb
jp
int3
fwait
icebp
adc
in
in
jg,pt
fmul
fcomps
jl
fwait
cmc
hlt
out
add
testl
or
sub
loope
push
cmp
loope
rclb
cmc
jae
jle
enter
mov
pop
dec
xorb
nop
cmp
push
jmp
aam
or
inc
movsb
rclb
mov
lret
inc
pop
popf
pop
dec
adc
jae
or
cmp
test
dec
bnd
sub
push
or
roll
inc
imul
inc
add
cltd
xchg
ljmp
mov
mov
xor
sbb
mov
lods
lcall
add
dec
jno
jae
mov
fildl
insl
push
icebp
imul
insb
mov
xor
ljmp
aad
push
lods
jmp
jbe
sub
inc
inc
negb
dec
out
ja
lcall
jle
cmp
sbb
dec
push
test
mov
xor
cmpl
mov
pop
sbb
adc
push
imul
push
and
stos
loope
add
lret
adc
xchg
shlb
pop
lret
roll
fcmove
sub
lods
add
xor
daa
xchg
mov
stos
movsb
inc
rcrl
dec
fisttps
sbb
lea
outsb
jns
push
mov
mov
jp
jmp
mov
ret
jmp
int3
jb
lds
adc
int3
outsl
ret
stos
out
xor
scas
repnz
xchg
jnp
mov
ret
cmc
enter
xor
faddl
jae
inc
cmp
pop
add
add
inc
sbb
imul
sub
leave
pushl
mov
or
repz
roll
out
jb
and
push
loope
or
or
mull
cld
lret
jns
and
sbb
cmc
stos
nop
sbb
mov
dec
mov
in
into
das
sti
cmp
les
int3
inc
xorl
cmpsb
sub
fwait
sarb
pop
cmp
cmc
add
xchg
cmp
xchg
push
cmpl
movsl
xchg
lock
icebp
adc
sbb
inc
adc
pushf
inc
imull
lar
jl
outsb
sub
sti
insb
xchg
das
pop
rolb
xor
sbb
ja
stos
cmp
cwtl
jmp
push
or
ss
dec
icebp
jmp
pop
push
in
cmp
push
mov
popa
jmp
js
ffree
adc
pcmpeqb
lods
ror
inc
out
rcll
std
scas
cld
or
sbb
mov
arpl
cld
mov
cs
lcall
mov
fisttpll
rolb
ret
mov
dec
repz
sub
aam
cmp
fimull
push
cmp
push
insl
pop
dec
lds
loop
icebp
pop
stc
dec
pop
sub
mov
enter
aam
enter
jo
daa
cmpsl
movsl
addr16
push
fnstcw
jge
jmp
push
bound
int3
imul
adc
inc
mov
mov
jne
mov
loopne
int3
stos
pusha
mov
xor
xchg
pop
sbb
loope
popl
pop
aaa
sub
push
ss
shrl
xchg
xchg
pop
dec
sbb
insb
push
mov
fwait
or
jb
popa
mov
fisttpl
push
xor
push
stc
fcomps
std
fistpl
xor
lea
inc
in
or
push
icebp
les
icebp
adc
fiadds
call
dec
jg
cld
ljmp
les
call
insl
mov
aad
add
lds
fldt
imul
int
popf
adcl
sbbl
mov
out
jle
and
dec
or
mov
jle
ja
in
xor
pop
inc
lahf
stos
jo
daa
imul
stc
dec
cmp
clc
rcl
out
sbbl
dec
jns
push
dec
xchg
rcrb
les
pop
sub
mov
jbe
mov
call
enter
lret
dec
inc
mov
add
enter
jnp
add
xorb
sub
push
mov
aaa
and
mov
int
je
xchg
or
xor
ss
mov
dec
jecxz
dec
sbb
inc
shr
and
lret
ljmp
jo
icebp
cmp
cmpsl
or
cmp
mov
mov
dec
inc
adc
cmpl
push
imul
add
imul
mov
rol
mov
lahf
movsb
popf
out
xchg
sbb
push
or
in
jnp
mov
dec
mov
add
dec
xor
sbb
jle
sti
aad
push
aad
imul
call
jns
int3
lea
jae
ret
mov
or
outsl
push
push
jl
loopne
sub
imul
pop
xchg
das
pop
aas
or
scas
lret
push
xchg
inc
je
and
stos
push
inc
das
inc
adc
sub
cmpsb
xchg
inc
cltd
sar
hlt
dec
test
pop
stc
xor
adc
mov
push
inc
loop
mov
test
fcoms
dec
popa
int
push
adc
pop
cld
imul
fisttps
mul
into
lods
xor
test
dec
push
xor
andl
imul
rcrb
xchg
xlat
and
push
sub
lahf
pushf
psubw
aam
clc
sbb
pop
leave
stos
mov
rcrl
pause
jb
jp
dec
in
pop
out
xchg
mov
jecxz
jno
mov
in
icebp
popf
sub
xorb
adc
cwtl
shl
js
cmp
fimuls
add
dec
push
call
xchg
clc
lret
adc
je
jb
push
cmp
lods
push
adc
xchg
or
push
mov
push
mov
imul
xchg
push
cld
inc
das
lods
mov
mov
clc
xchg
add
xchg
push
dec
inc
cmpsl
sub
or
out
jmp
mov
push
mov
nop
shlb
lock
dec
rcrl
popf
ds
mov
cwtl
ret
movsl
and
or
jo
push
pop
test
rcrb
fidivl
leave
clc
sub
addb
movsl
add
inc
push
sub
mov
or
clc
mov
pop
mov
fcomi
mov
and
pop
out
and
mov
ret
test
out
jo
insl
std
jno
in
mov
sub
in
rcrb
add
jmp
clc
xor
paddq
lahf
mov
ljmp
push
sub
in
sbbl
or
lds
sbb
lock
push
loope
call
aad
imul
fcmovnb
je
je
inc
lret
mov
fsts
fs
mov
mov
popf
jbe
orl
pop
icebp
fwait
push
xchg
sahf
out
push
pop
xchg
fs
ja
mov
push
xor
ja
jae
in
scas
mov
cmpb
mov
sub
inc
lods
test
outsb
shlb
dec
and
add
xor
repz
cmp
gs
std
jo
int3
sbb
jmp
pop
jp
stos
enter
push
xor
rolb
cmp
push
loop
add
mov
dec
bound
repnz
or
outsl
or
cmpsl
imul
jo
mov
sbb
jg
or
cld
mov
sbb
outsl
cld
stc
jle
gs
adc
subl
or
scas
sarb
rcl
or
mov
addr16
inc
shll
insb
jno
xchg
mov
int
push
movl
lods
ljmp
popa
adc
ljmp
jecxz
or
push
push
shll
inc
les
std
jl
mov
int3
mov
xor
fistps
lret
mov
sub
mov
test
mov
mov
add
inc
sbb
lds
dec
mov
lahf
daa
push
xchg
test
cli
cmpsb
xlat
call
dec
iret
sbb
sub
lcall
pop
mov
add
or
sub
repnz
pop
sub
pop
ljmp
adc
test
lret
pop
outsb
pop
inc
mov
shlb
sbb
xchg
shll
xchg
cmp
lret
repnz
cmp
into
push
popf
cli
xchg
jb
add
test
cmp
rcrl
lods
enter
out
adc
xor
clc
xor
fmull
pop
xor
imul
mov
xchg
popa
les
aam
sub
push
daa
insb
push
jmp
jl
push
ret
adc
jl
cmpsl
movsl
push
push
repz
fucomip
cmp
sbb
inc
mov
jae
sbb
add
xchg
idivl
icebp
clc
mov
inc
adc
fs
popf
sbb
aad
inc
fwait
ja
jbe
mov
xchg
jae
mov
sbb
inc
inc
inc
cmp
dec
or
adc
dec
or
test
sbb
out
or
mov
cwtl
test
dec
test
lcall
cld
dec
mov
arpl
imulb
push
es
cmp
cmp
sar
popa
and
addl
pop
outsl
mov
out
call
out
dec
dec
add
fmulp
mov
jno
jb
stos
adc
jno
jle
add
add
push
mov
push
dec
xchg
sub
sti
pop
jb
push
test
mov
adcl
mov
and
rcr
fs
pop
stos
movsl
or
into
jo
mov
shlb
lock
imul
addr16
ret
popa
sub
fs
int
mov
add
addl
xchg
push
pop
push
sbb
in
fiadds
mov
mov
push
xor
lock
and
repz
cmpsl
mov
out
xchg
scas
jno
jo
loopne
addl
das
clc
mov
movsl
daa
push
push
dec
or
xor
daa
aam
mov
and
cmpb
xlat
jge
pop
mov
cmp
fistpll
and
stc
inc
mov
jae
mov
jne
sbb
cmpsb
mov
mov
mov
inc
add
int3
xchg
xorb
scas
xchg
icebp
or
pop
adc
mov
loopne
xchg
loop
dec
fbld
and
rorl
jns
and
das
or
mov
sub
mov
push
popa
repz
push
xchg
aad
cmp
pusha
fs
mov
mov
idivl
xor
nop
ja
leave
clc
mov
mov
sub
in
sbb
leave
jle
jne
adc
cmpsl
shlb
sub
push
push
jg
lods
inc
ficoms
mov
xor
repz
jo
aad
mov
rcr
icebp
in
xor
xlat
add
das
bound
iret
dec
test
sahf
nop
in
and
orl
pusha
mov
xor
idivl
add
inc
xor
mov
pop
sub
add
outsl
push
cmp
fwait
js
jb
iret
dec
push
test
and
rep
adc
and
push
cmp
shll
daa
sub
push
jp
sarl
push
sbb
andl
mov
fadds
xchg
add
popf
jnp
popf
mov
push
rol
ret
sub
mov
sub
mov
sbb
data16
push
lret
lods
lods
sbb
and
xor
jnp
cli
mov
xor
sub
test
adc
mov
outsb
ds
repnz
das
imul
or
push
and
clc
jae
ret
mov
insl
add
push
fsubr
icebp
cmp
outsb
lea
rclb
sub
pop
fiadds
je
int3
lret
out
mov
les
out
add
inc
mov
loop
mov
test
mov
out
out
mov
mov
xchg
xor
push
enter
filds
rolb
test
movsb
sbb
mov
out
shll
push
sub
std
pop
fs
inc
cmp
insb
insl
cmp
push
stos
and
repnz
pop
push
dec
and
testl
jge
out
and
mov
or
and
lea
and
adc
push
mov
sub
test
mov
mov
rcl
in
xorb
dec
dec
mov
repz
pop
aam
lahf
xchg
pop
mov
hlt
jle
incb
cmc
inc
dec
loope
sbb
insb
subl
xchg
jge
in
imulb
aad
push
and
test
pop
iret
xchg
fstl
imul
je
jge
inc
imul
fs
jl
mov
rcll
cmp
imul
and
push
in
adc
loop
jg
hlt
addb
mov
popa
jl
xchg
jecxz
or
fdivrl
lock
fisubrs
jns
dec
add
jle
stc
and
mov
or
es
pop
cmp
cmp
jbe
mov
jmp
jg
mov
dec
push
cmpsb
test
faddp
ja
xlat
clc
js
pop
arpl
add
inc
jmp
aam
addb
xor
pushf
lods
pop
pop
daa
rcrl
in
stos
test
fcoml
test
cwtl
push
mulb
add
dec
jl
in
out
push
cmp
jge
mov
mov
mov
ret
cmp
jnp
iret
cld
mov
std
cli
lcall
lret
sarb
data16
das
push
repnz
xor
mov
sbb
repnz
div
xchg
lock
mov
pop
inc
push
stos
or
jnp
and
cmpsl
mov
sub
mov
mov
cmp
inc
in
lods
nop
jmp
push
sub
mov
xlat
fdivs
lret
orb
cmc
push
pop
loope
popa
mov
mov
adc
lret
sbb
loope
mov
lcall
xor
mov
push
je
push
dec
jnp
xchg
cld
cmp
adc
push
inc
push
jle
jecxz
mov
inc
aaa
push
inc
daa
add
test
add
pop
xchg
cmp
and
je
fisttps
pop
sub
fnstenv
imul
cs
fneni(8087
pop
sbb
fsubrl
hlt
into
mov
jbe
pop
fsubl
inc
ret
aad
dec
les
leave
bound
data16
popf
push
inc
cmc
mov
or
inc
std
std
sbb
push
xor
jbe
cwtl
movsb
mov
cli
mov
aas
unpcklps
ja
xchg
cmp
lock
pop
movsl
xor
jg
movsb
dec
lds
psubd
adc
andb
jecxz
mov
mulb
fcompl
fldcw
bound
mov
lock
xchg
sbb
fldcw
dec
add
mov
push
mov
or
je
and
add
fdivs
jecxz
stc
adc
pop
or
in
xor
or
sbb
xchg
sub
mov
mov
roll
out
cmp
mov
inc
jns
dec
inc
stc
ljmp
loope
push
movsl
orb
scas
pop
repz
jns
dec
je
pushf
add
mov
and
clc
dec
shrb
fsubrl
mov
pop
and
pop
dec
shlb
jb
jmp
das
or
shrb
enter
sub
sub
ljmp
sahf
ljmp
rclb
imulb
mov
pop
pop
adc
mov
dec
mov
cmpsl
or
push
pusha
add
rolb
mov
mov
movsl
jmp
fldenv
test
arpl
scas
scas
sub
adc
cmp
sub
mov
xorb
repz
mov
aas
je
orl
pop
xchg
repnz
aas
inc
clc
dec
jo
mov
cld
rdpmc
jnp
sbb
gs
pop
mov
push
ds
fwait
inc
out
sub
and
in
pop
lahf
add
mov
add
not
dec
data16
xchg
fistl
sar
fwait
loopne
das
mov
sbb
push
inc
pop
leave
shl
sbbb
fdiv
test
cmpsb
jle
sbb
in
mov
xor
push
ljmp
cltd
cmp
loop
or
in
jae
sub
jns
imul
inc
push
inc
cwtl
rolb
cmp
pusha
mov
popf
enter
inc
mov
dec
and
sub
push
jne
inc
or
lret
jp
xchg
not
mov
sub
js
push
xchg
sub
push
pop
mov
addb
lret
flds
es
data16
jp
pop
mov
popf
jo
xchg
push
ror
mov
hlt
enter
lods
or
push
jl
shlb
pop
jecxz
push
add
mov
or
clc
imul
and
adc
mov
dec
negl
adc
mov
ds
mov
xchg
xlat
aad
jno
ficoml
add
adc
into
pop
pushf
pop
gs
shrb
or
push
inc
push
ja
jmp
adc
mov
cmp
adc
add
jecxz
dec
fldl
aaa
movsl
orl
imul
pushf
mov
jns
jl
sbb
ja
mov
arpl
mov
cmp
dec
push
adc
loopne
in
jnp
pop
pop
aam
hlt
push
cltd
test
dec
mov
btr
or
rep
fdiv
pop
std
mov
jo
jns
call
dec
out
add
fdiv
sbb
cmp
mov
in
push
push
xlat
sub
dec
inc
lcall
xor
add
js
mov
sahf
or
sbb
jmp
gs
ret
cmp
stos
inc
inc
aam
inc
mov
adc
cmp
ret
inc
gs
jge
jge
rcrb
stos
adc
les
pusha
adc
or
and
pop
sti
out
jmp
das
rorl
lods
mov
ja
mov
add
test
mov
cmp
push
stos
sti
xchg
mov
dec
sarl
enter
leave
jecxz
aad
pop
pop
cmp
sbb
push
push
push
ficomps
cmc
popa
mov
or
add
mov
leave
inc
xchg
lock
mov
push
ds
inc
pop
andb
inc
and
mov
insb
mov
mov
sub
push
mov
mov
rol
pop
add
lods
loopne
sbb
cs
adc
out
pop
int3
and
push
arpl
inc
movsb
into
mov
sub
xor
push
bound
fwait
cmc
lret
neg
inc
pusha
dec
push
popf
and
std
leave
fwait
les
mov
stc
xchg
jns
or
adc
cmp
enter
hlt
pop
and
negl
xchg
movsb
cmp
jg
scas
or
sub
idivb
or
out
js
aam
nop
fsubr
mov
repnz
xchg
mov
sub
mov
cs
inc
mov
bound
sub
pop
cmp
lahf
mov
in
cmpl
fimull
xchg
out
aam
arpl
fmul
neg
nop
xchg
push
out
inc
inc
pop
sub
das
add
js
or
push
inc
jns
hlt
xchg
mov
pusha
rcll
daa
xor
mov
fwait
sub
lods
rclb
add
pop
mov
or
imul
into
and
lods
addr16
pop
pop
into
stos
in
jge
sti
push
jg
fcoml
mov
cmp
ret
cmp
call
jle
lret
dec
int
out
pusha
lahf
int3
jbe
mov
xor
shll
jl
in
xchg
dec
movsl
xchg
in
fwait
les
fs
cmc
test
mov
pop
cmp
jg
lret
in
dec
mov
or
and
or
jecxz
xor
jl
lret
cld
mov
lcall
call
xchg
sbb
pop
cmp
sbb
popf
sbb
cmp
dec
sbb
test
pop
mov
int3
negl
push
shr
or
push
mov
sbb
dec
mov
mov
jns
ret
repnz
fwait
mov
mov
pop
mov
mov
push
mov
fistpl
sub
lret
jle
add
mov
ss
in
mov
scas
xor
mov
in
pop
pop
pop
mov
f2xm1
mov
outsl
jg
sbb
cwtl
push
dec
ja
stc
mov
dec
pop
cmp
je
outsb
jno
add
repz
outsl
cmp
lret
sub
out
nop
in
mov
ds
out
ljmp
jecxz
repz
xchg
lret
out
sbbb
fistpl
or
bound
out
push
xchg
add
stos
loopne
pop
jg
add
cmp
sub
jmp
cmpl
dec
mov
inc
fstps
rclb
outsb
push
lea
sub
pop
daa
mov
xor
inc
dec
aad
inc
dec
test
leave
fisubs
lea
push
sub
sub
or
dec
shlb
xchg
xlat
xchg
mov
lea
pop
movsl
xor
or
and
cmp
push
outsl
call
outsb
pushf
sbb
pop
sbb
and
jb
and
adc
xchg
js
imul
movsl
pushf
or
loope,pt
adc
pusha
add
movsb
adcl
ret
leave
js
jp
lods
pushf
inc
scas
in
push
mov
orb
arpl
mov
push
fisttpll
adc
sub
mov
adc
in
dec
jp
sbb
sub
int
loope
dec
loopne
js
cmp
imul
lock
in
stos
or
popa
sub
shrb
repnz
je
mov
clc
cwtl
or
ljmp
fcoml
shl
pop
imulb
mov
pop
sti
scas
dec
cs
ret
dec
jmp
dec
mov
mov
xchg
cmp
pushf
popa
dec
outsl
cmp
ret
paddusw
fidivrs
ja
mov
dec
adc
mov
jmp
push
xor
loope
pop
ljmp
popl
cmpsb
mov
gs
roll
lret
xor
out
aad
xchg
or
daa
scas
or
loop
push
pop
sub
test
jnp
nop
mov
and
notb
fs
repz
incb
xlat
and
jp
daa
imul
jne
sbb
push
outsl
dec
mov
cli
or
lea
jp
out
pop
arpl
fcomp
shlb
cmc
sbb
dec
in
cltd
mov
push
mov
test
mov
inc
mov
imul
loopne
sti
xchg
pop
mov
popa
gs
xor
outsl
pop
xor
sbb
mov
dec
ja
aaa
xchg
hlt
in
xor
out
cwtl
add
out
cmp
sbbb
xchg
out
and
les
aaa
mov
add
rcl
fwait
sub
repz
jb
push
clc
fmull
bound
and
cmp
adc
rolb
stc
mov
fcmovnbe
xorb
mov
dec
cld
sar
mov
cltd
push
jae
cmc
jne
cs
mov
in
inc
ljmp
mov
sub
adc
push
movsl
subl
stos
sbb
lods
cwtl
or
les
cmp
test
dec
inc
and
mov
out
andl
mov
adcb
jp
out
mov
inc
loop
mov
mov
dec
pop
pop
xor
scas
mov
iret
and
filds
pop
fiadds
inc
mov
sar
and
pushf
stc
add
imul
jp
mov
and
gs
cmp
loop
pop
add
jle
pop
orl
test
jae
pop
cltd
nop
mov
push
push
and
xchg
ret
ljmp
enter
xorb
jae
ficomps
dec
sub
mov
lret
mov
out
data16
push
lret
leave
add
jle
push
inc
cmp
mov
sub
sbbl
mov
lcall
repnz
xor
inc
or
sti
movsb
in
aam
adc
mov
movsl
inc
cwtl
sbb
jle
movsl
in
dec
gs
cmp
js
arpl
add
sarb
fnstcw
rclb
mov
cmp
jo
push
add
shrb
outsb
stos
loopne
cmc
icebp
popa
sub
sbb
inc
js
inc
xor
addb
add
push
sub
and
mov
inc
mov
lods
call
inc
imul
cmp
jnp
sbb
outsb
jg
cmp
repnz
xlat
lock
cmp
cmpsl
repnz
test
pop
mov
inc
lret
xlat
mov
and
sti
insb
mov
and
icebp
out
inc
mov
jle
pop
inc
lods
xchg
push
push
cs
gs
test
sub
lcall
pop
jl
stos
cmp
cmp
insb
call
sub
movsl
js
mov
fwait
js
xchg
mov
xchg
sub
ret
jge
or
pop
xor
mov
and
and
fucomi
push
movups
adc
xor
int
lea
xor
in
push
popa
aad
mov
pop
mov
sub
loop
or
mov
pop
sbb
lock
push
or
loopne
filds
mov
fwait
push
pop
or
lea
lods
cmp
and
dec
leave
mov
fistpl
inc
out
out
mov
sbb
and
addl
mov
das
sub
and
fcoms
mov
xchg
pop
stc
fistps
repnz
out
insl
adc
cmpsb
or
sub
mov
inc
out
fldpi
test
ja
sub
inc
cmp
mov
sbb
and
push
inc
jb
aam
out
mov
leave
lcall
in
pop
cmp
mov
cltd
bound
add
clc
push
push
add
push
push
repz
pop
sub
ds
addl
fimuls
popa
dec
pop
imul
imul
inc
sbb
lret
test
mov
out
out
rcrl
xchg
in
mov
push
jmp
test
mov
jmp
dec
sbb
mov
pop
ljmp
lcall
jae
iret
inc
push
aad
mov
cmc
movsb
pop
xchg
cs
xchg
pop
je
push
xchg
js
fmull
add
ret
popa
ret
fnsave
test
arpl
adc
and
fwait
jns
sahf
nop
jo
out
mov
cmpsw
aad
sub
jmp
adc
mov
orl
and
inc
mov
sub
cmp
ss
std
cmc
xchg
xchg
jne
dec
or
outsl
and
sub
mov
je
mov
cs
je
inc
inc
iret
dec
push
test
sub
loopne
cmpsl
aam
or
or
add
sbb
sub
cmp
lea
add
idivl
out
and
fistps
lret
push
jb
outsb
aas
mov
psubq
or
jl
pop
enter
arpl
out
pop
or
jo
mov
add
lcall
arpl
fstl
dec
and
roll
imul
mov
je
aaa
int3
dec
adc
jge
and
pop
mov
xor
sub
xor
xor
mov
pop
mov
fsubp
pop
or
jbe
unpckhps
sub
mov
pushf
jmp
xor
push
psadbw
mov
into
or
lret
push
clc
fs
pop
lods
arpl
mov
push
jmp
and
test
fcoms
push
stos
pusha
xchg
jae
cmp
insb
jge
stos
push
out
dec
popf
mov
fidivrl
fs
pop
jmp
xchg
push
sub
fisubrl
lahf
jge
mov
cld
jl
and
fs
pop
in
icebp
daa
jge
ret
lods
sbb
cwtl
inc
pusha
mov
xchg
loope
or
pop
mov
vmovdqa
xlat
dec
popf
push
pop
stos
std
mov
pop
out
jns
popa
pop
ror
lea
and
insb
xchg
pop
xor
cmp
xchg
mov
and
out
movsb
push
mov
mov
jne
adc
xchg
out
insb
push
mov
outsl
pop
lret
je
xlat
sub
pop
aad
ds
popf
test
fsubrs
mov
ror
bound
das
mov
cmp
and
lods
xchg
mov
mov
sahf
fcmovne
jns
cld
and
inc
dec
sbb
mov
pop
arpl
stc
xchg
in
test
xchg
ret
push
mov
add
pusha
mov
repnz
sbb
arpl
cmp
sub
sub
and
lret
movsl
pop
cltd
sti
daa
jg
pop
sbb
sbb
inc
loope
pop
out
arpl
jbe
mov
cltd
adc
cmp
repnz
negb
inc
xor
jo
pop
dec
shll
inc
sub
mov
and
cwtl
fucom
xlat
loopne
je
stos
daa
pop
clc
lods
push
fisttpll
mov
xchg
or
or
repz
mov
xchg
push
mov
stc
lea
sub
and
push
gs
cmc
inc
imul
in
jo
push
mov
clc
daa
bound
xchg
add
inc
orl
inc
adc
cwtl
xor
cli
xor
enter
jl
xor
jg
or
xchg
xor
jb
jne
mov
arpl
gs
addr16
cltd
test
push
outsb
and
std
inc
pop
xchg
xlat
stc
repnz
mov
popa
adc
push
stc
and
xchg
fldcw
in
test
inc
and
adc
sub
inc
or
mov
gs
int
fbld
dec
sub
std
aam
iret
mov
scas
inc
out
xchg
inc
in
push
xor
movsb
cmpsb
dec
or
xor
pusha
cld
pop
pop
and
sbb
popf
addb
push
adc
inc
vmread
aaa
adc
sbb
aam
cmp
inc
jmp
sti
cmpsb
ret
ret
pop
je
xor
stos
xchg
sbb
mov
cmpb
loopne
mov
jne
insl
cmp
add
ret
push
std
pop
adc
mov
icebp
pop
mov
shll
push
push
add
xor
rcl
or
mov
jp
cmp
movb
push
cli
dec
pop
in
push
test
popa
faddl
movsl
pop
divb
xchg
jecxz
mov
mov
inc
pop
pop
push
or
mov
cltd
mov
popa
and
sub
leave
rorl
je
sbb
ror
mov
je
loopne
test
popa
sbb
sub
jne
addr16
jnp
push
and
sub
fwait
lock
push
stos
ja
lahf
push
mov
pop
mov
dec
xor
dec
dec
rcl
fildll
sahf
out
in
aam
lods
cmp
add
pop
pop
sub
jg
add
pop
loopne
jmp
das
rcrb
outsl
cmp
adc
inc
lods
mov
mov
int3
gs
or
lods
fnsave
inc
and
cmc
sahf
repnz
scas
push
lds
xor
jle
xchg
push
pop
or
cld
aad
es
inc
jecxz
arpl
fmull
sbb
popa
ljmp
loope
dec
test
pop
jbe
sbbl
rcll
aam
dec
fwait
js
cmp
push
pop
stc
es
bsf
cli
in
inc
in
movsb
push
sub
test
adc
fs
add
cltd
push
into
push
push
pop
xor
pminub
fstpt
or
lret
iret
jle
mov
or
add
insb
jmp
dec
lods
mov
mov
jl
pop
mov
scas
cld
testl
repz
pop
enter
mov
out
pop
imulb
es
js
jo
xor
push
fcoms
xlat
push
add
xchg
xor
xor
or
int
arpl
ja
sahf
lret
insl
sbb
lret
data16
or
test
jmp
cld
out
lds
mov
cltd
cmc
xchg
lods
aaa
cmpsb
mov
movsl
aaa
add
stc
xchg
leave
xchg
dec
and
fmulp
movsl
fcomp
scas
outsb
mov
mov
out
fcoms
movsl
cs
std
pushf
pusha
push
cmp
not
adc
leave
push
popf
push
lods
popa
add
xor
dec
imulb
repz
add
push
and
mov
je
stos
gs
sub
ja
std
lret
xchg
je
inc
cmp
sahf
popa
divl
scas
fcmovnbe
push
cmp
out
cmpl
mov
pop
mov
jae
leave
sbb
clc
xchg
int
jbe
rsm
addr16
nop
sub
mov
add
push
mov
or
scas
loopne
ljmp
lods
push
jnp
scas
or
jmp
jnp
mov
jns
loope
leave
outsb
jb
pop
jo
push
imul
xchg
cli
aaa
cmpsl
mov
out
pop
pop
jp,pn
sub
jbe
xor
dec
pushf
dec
addr16
cmp
fistpll
add
sub
movsl
pushf
jne
test
out
sbb
daa
ss
push
mov
push
jo
inc
test
jmp
push
inc
xor
lea
subb
add
adc
sbb
push
int3
scas
iret
insb
call
iret
sbb
cli
push
enter
jno
jl
shl
xlat
in
rcrb
scas
subb
mov
ret
mov
pop
cmp
mov
out
mov
inc
pop
loope
cmp
fldcw
insl
ss
stos
ss
lcall
or
test
inc
jp
push
dec
bnd
or
je
inc
in
addr16
outsl
xchg
scas
push
dec
adc
popf
fcomps
cwtl
test
jbe
mov
inc
push
lods
or
adc
lds
inc
mov
flds
imul
repnz
mov
mov
or
push
push
fnstcw
and
dec
hlt
stos
test
sub
sub
xor
aad
lea
sti
mov
pop
inc
lret
bound
punpcklbw
jnp
out
loope
outsl
mov
enter
push
mov
or
scas
and
xchg
mov
sahf
aam
stc
jns
mov
dec
push
mov
insl
push
repnz
shlb
imul
adc
pop
mov
cmpsb
add
in
jae
add
pop
push
fdivs
fisubrl
push
fcoms
sbb
sbb
pop
xchg
xor
bnd
dec
sub
bnd
jmp
adc
xchg
cmp
sti
cmp
cmpsb
ret
pop
fmul
push
sub
and
movlps
push
je
mov
leave
aaa
jl
ljmp
and
dec
and
fistpll
mov
fsts
push
jo
jo
out
arpl
outsb
sbb
adc
rorb
and
in
inc
and
test
push
test
mov
xchg
xchg
in
lcall
imul
js
add
testb
cli
xchg
sti
mov
out
sbbb
movsb
add
imul
inc
enter
xchg
pop
into
xchg
inc
sbb
sti
cmp
sub
fstpt
mov
and
pop
movsb
lock
cmpsl
cmp
cmc
test
test
loope
loope
ret
ja
jge
add
mov
mov
mov
adc
and
jns
ret
scas
add
inc
inc
jae
mov
lods
mulb
out
mov
xor
ds
scas
loope
adc
repz
cmp
outsl
xchg
roll
mov
aam
push
cmp
je
int
xchg
jle
mov
adc
lret
add
nop
jns
imul
dec
add
push
jge
mov
mov
rol
cmp
cs
xchg
inc
jg
jbe
mov
add
mov
and
inc
je
dec
in
sbb
cmp
sub
add
or
or
adc
fmull
inc
out
push
cmpsl
lods
insl
hlt
dec
mov
data16
xor
sbb
test
shll
in
sti
xchg
adc
int3
xchg
jno
mov
lock
xor
adcl
mov
push
mov
std
pop
lock
jg
adc
xor
adc
add
sub
js
in
addb
add
jmp
push
inc
sahf
mov
jmp
xlat
jnp
mov
jo
jno
inc
gs
mov
sub
xchg
add
loop
adcl
xor
leave
aaa
push
pop
ficoms
push
cwtl
jae
mov
pushf
aad
sbb
dec
add
sub
cmp
int3
inc
imul
lahf
mov
lahf
sub
jl
mov
mov
imulb
stos
ret
cmpsl
jbe
cmc
xor
cltd
adc
daa
es
std
inc
xor
vpsignw
in
popf
dec
sahf
pop
lcall
and
cld
cmp
int3
sbb
popf
and
jg
push
mov
inc
mov
lahf
push
mov
pop
jo
rcrl
std
lods
sbb
dec
mov
xlat
mov
sbb
mov
int
inc
idivl
push
adc
arpl
jg
dec
pop
jg
stc
sbb
enter
pop
cmc
fsubr
inc
xor
jmp
fdivrs
inc
cmp
rclb
xor
pop
call
cmp
adc
bound
leave
sarb
or
sbb
jmp
adc
in
pop
push
inc
lret
sub
ror
cmp
inc
enter
js
jae
xor
pop
push
push
aam
addr16
lret
add
addr16
inc
pop
push
pop
flds
mov
call
push
dec
fisttpl
or
fs
adc
ljmp
mov
fisubl
jp
xorb
mov
popa
ror
les
sbb
push
loopne
jbe
dec
ds
shll
call
movl
mov
outsl
xchg
scas
in
mov
lds
cmp
ret
iret
cmp
leave
sub
in
incb
jns
ja
call
xlat
push
dec
fwait
mov
or
loope
in
aas
inc
inc
dec
ret
or
and
sti
push
cmp
mov
mov
pusha
outsl
xchg
imulb
mov
add
and
fwait
xchg
cmp
or
xchg
notb
or
and
lods
sbb
jl
push
cmp
and
call
dec
test
dec
ret
sbb
push
cmp
xchg
les
sbb
inc
jno
lock
jo
dec
andb
cmp
add
sub
pushf
jae
andl
push
test
out
shlb
mov
insl
inc
mov
popf
fistps
mov
cmp
jns
dec
sub
push
dec
mov
mov
dec
stc
xchg
out
mov
mov
aaa
add
xor
cld
dec
inc
rcl
fcoml
fisubl
sub
dec
shlb
and
mov
mov
pop
imul
aam
fnstsw
out
dec
into
xor
xchg
lock
pop
pushf
out
loope
das
mov
rcl
add
outsb
aam
cmpsl
arpl
pop
xchg
test
repz
adcl
jmp
jle
pushf
dec
insl
lret
sahf
jle
jge
mov
mov
push
aam
adc
jae
cs
pop
cmpl
lods
scas
shrl
pop
sbb
sbb
jo
mov
popf
cmp
and
aaa
sbb
add
aam
stos
out
xor
inc
por
in
jge
jg
aad
sub
sbb
mov
sub
xchg
sbb
movsb
stos
adc
outsl
adc
push
push
pop
and
push
gs
aam
int
and
xor
mov
jno
dec
movsl
mov
xabort
lods
mov
stos
rclb
and
dec
inc
cmc
push
fsubrs
ljmp
ror
adc
jle
fmuls
or
xor
scas
inc
mov
loopne
adc
inc
push
jbe
pop
jmp
sub
adc
add
les
jb
push
xor
in
jnp
jp
movl
xchg
lret
mov
xchg
ja
repz
cmpsb
push
rol
imul
cmovb
rcr
pushf
lret
iret
iret
scas
xchg
mov
out
pop
fidivl
rclb
loope
xchg
xchg
dec
ret
jp
out
decb
addr16
push
rcll
jmp
loope
pop
lcall
ror
xor
pop
push
or
gs
sub
pop
scas
inc
sub
xor
cmc
pop
mov
push
fmul
je
jl
stc
test
jns
sbb
dec
push
nop
adc
sub
lds
clc
test
jp
pop
es
stos
add
dec
imul
jno
and
cmp
sub
adcb
xchg
jg
adc
cmc
aam
loop
sahf
adc
xor
mov
mov
xor
into
les
adc
add
repnz
mov
mov
movsb
pop
movsl
cmp
add
and
mov
mov
movsb
jmp
or
xchg
jnp
and
inc
lret
add
dec
push
or
loop
popa
and
pop
adc
lea
inc
xchg
xchg
sbb
sbb
mov
aas
mov
insb
cwtl
inc
sti
jge
cs
xlat
and
mov
movsl
fcomp
inc
jnp
cltd
dec
adc
cwtl
cli
push
pop
jae
xor
inc
outsb
popf
call
sub
mov
mov
or
mov
lcall
aaa
xor
push
adc
loopne
mov
subb
xlat
jge
sbb
testl
test
js
xchg
icebp
or
cmpsb
pop
mov
xchg
push
fldcw
jmp
es
jne
jmp
mov
jae
and
or
pop
add
cs
add
cmpsb
mov
call
test
loop
pop
pop
aas
jbe
jl
cmpsb
sbb
jecxz
pop
nop
sbb
xchg
jo
xchg
gs
insl
mov
xchg
sub
ljmp
jmp
xchg
xor
rcrb
jbe
mov
es
push
test
pop
ss
stos
sub
inc
pop
lods
int3
sub
hlt
pop
jb
and
inc
dec
and
clc
pop
dec
lret
test
sub
lods
push
push
dec
sti
arpl
cmp
cmp
inc
fstl
mov
cmc
stos
mov
mov
jle
leave
shll
push
cs
test
sub
mov
jg
sbb
rcl
sub
jns
mov
xchg
xchg
mov
jb
mov
jbe
or
jae
pop
jmp
in
lcall
jno
int3
adc
mov
movsl
fsubl
add
adc
sub
ljmp
gs
bound
xchg
jmp
ret
or
push
fisttpll
inc
xor
push
loopne
pop
add
loope
fcomps
jb
xor
pop
out
decb
subl
pop
test
in
sub
push
cmp
or
inc
dec
pop
es
pop
jo
xchg
and
jne
mov
mov
jp
fdivrp
inc
mov
sti
mov
jb
add
add
insb
mov
outsb
gs
pop
addb
push
cmp
dec
xchg
cmp
les
sub
inc
inc
mov
add
push
jp
out
fistpll
jbe
or
cld
jmp
or
lods
imul
add
test
cwtl
xchg
mov
insl
lret
test
cli
add
loope
push
out
call
pop
mov
loop
push
out
jmp
jecxz
cmp
iret
enter
xchg
sub
addr16
jp
cmp
fisttpll
push
cmp
arpl
dec
inc
xlat
lret
cmpsb
jge
jge
and
movsl
cld
xchg
xchg
mov
inc
lods
push
fisttpl
pop
stos
xor
xchg
push
stc
iret
xchg
lcall
cmpl
sub
and
dec
push
shrl
push
cltd
jnp
rcrl
jnp
pop
jmp
inc
add
xchg
fisubrs
inc
push
mov
and
mov
push
push
dec
fidivrl
mov
or
pop
push
in
mov
outsl
lds
fyl2x
loopne
sub
jbe
icebp
mov
pusha
sbb
push
mov
mov
sbb
into
mov
sub
dec
lock
jecxz
jmp
pop
testb
mov
push
fistpll
and
add
incb
push
arpl
lret
cltd
mov
cld
jo
in
das
cmc
add
push
sub
adc
in
sbb
movsb
and
lahf
rclb
xor
aam
ret
mov
xchg
lock
fdivs
sub
mov
sub
cli
inc
or
pop
sub
xchg
sub
mov
push
fs
dec
in
rcr
mov
add
sub
test
sub
int
xor
jle
jle
xchg
loop
mov
sti
pop
xor
cltd
sbb
sbb
jno
cmpsl
test
fsubrl
jp
call
notb
pop
sti
fs
out
mov
je
dec
test
mov
std
sbb
es
sbb
lahf
inc
ret
imul
stc
inc
dec
fs
mov
shl
mov
ljmp
add
add
or
push
push
sbb
decl
adc
outsl
filds
jnp
icebp
dec
adc
popf
andb
ficoml
sub
sub
aas
jo
shrl
inc
mov
stos
mov
leave
mov
fwait
out
xchg
add
adc
jmp
cmp
cld
jmp
mull
repz
in
pop
jnp
push
jne
shlb
dec
icebp
xor
xchg
sbb
add
lods
sbb
test
dec
mov
stos
mov
jbe
stos
mov
dec
mov
add
iret
roll
xchg
filds
bound
pop
divl
rcrl
ror
sub
jnp
out
xchg
sar
mov
mov
movsb
das
jne
and
jl
ret
pop
out
inc
clc
push
sbb
les
sbb
loop
repnz
test
inc
lretw
xor
adc
mov
in
cld
mov
sbb
jno
cmp
rcrb
repz
sbbl
mov
or
lea
jo
xchg
cmp
popa
movsl
xchg
mov
std
cld
aad
sarb
push
outsl
mov
or
sbb
add
mov
push
jmp
out
cmpsb
dec
cld
rol
je
in
push
pushf
fstpl
insl
push
add
int3
lock
shrl
and
jl
mov
cmpsb
mul
lret
jp
add
stos
jbe
in
call
fwait
test
je
jecxz
das
mov
jbe
cmp
jge
jbe
mov
jbe
cmp
sbb
mov
and
push
clc
adc
das
enter
cmp
insb
fnsave
mov
dec
adc
mov
xchg
lds
inc
lods
shll
loopne
jo
sub
mov
out
push
mov
popa
mov
sbb
mov
shl
pop
mov
mov
cmp
sub
loopne
loopne
inc
adc
cltd
jg
imul
mov
pop
mov
inc
jns
arpl
and
sbbb
pop
daa
in
jae
sub
or
fdivp
and
mov
xor
xor
and
shlb
mov
push
call
jnp
jl
cld
daa
inc
xlat
ja
sahf
xor
popf
jo
test
or
jb
hlt
jns
xchg
or
fbld
push
stos
push
xor
and
pop
mov
xchg
in
inc
call
xchg
lret
xchg
pushf
pop
gs
out
mov
clc
mov
std
hlt
push
mov
call
in
sbb
cmp
inc
sti
pop
je
popf
fwait
out
pop
xchg
xchg
sub
mov
or
into
pop
les
imul
repnz
adc
jmp
push
out
pop
pop
xchg
xlat
adc
adc
stos
dec
mov
mov
or
and
lock
mov
or
iret
out
fdiv
das
mov
xchg
movsb
scas
jge
sahf
mov
dec
cmc
loopne
push
aam
jns
xor
dec
test
ja
mov
inc
push
mov
or
pop
ss
sbb
lret
add
adc
and
das
lods
pop
xchg
stos
aaa
js
add
mul
sub
pop
mov
lret
sbb
ljmp
bound
mov
addb
icebp
rclb
mov
jbe
xor
mov
cmpl
xor
cmp
dec
xchg
stos
fcomp
dec
push
mov
add
gs
imul
arpl
mov
shrl
jno
mov
out
fildll
pop
test
fildl
loope
add
rorl
fmul
and
int
cmp
xchg
in
rcll
cld
test
or
add
ss
sbbl
subl
pop
int
out
add
scas
xor
jae
cmp
xor
xor
xchg
lret
ret
andb
aam
pop
sub
into
xor
arpl
aam
sub
xor
in
sub
call
out
in
sbb
mov
mov
push
inc
sbb
sbb
fcmovnb
fadd
mov
jmp
insl
test
inc
call
cmpl
xor
xor
mov
and
sub
pop
rorl
loop
mov
ss
adc
stc
aad
sbb
movb
mov
mov
push
aam
les
std
je
insl
mov
xor
push
sub
scas
xor
fwait
sti
xchg
imul
cmc
leave
mov
pop
mov
push
mov
mov
inc
ret
popa
pop
add
ficoms
inc
mov
xchg
fs
lcall
arpl
cmp
inc
dec
into
mov
insb
gs
add
adc
test
out
adc
sub
mov
add
cmp
xchg
pop
rcll
jp
rcll
out
jae
fdivrs
sbb
dec
hlt
and
sbb
mov
xchg
dec
ss
daa
pop
cmp
aad
adcl
outsb
jb
shrl
inc
dec
ds
mov
adc
xor
ja
shrb
fs
push
mov
rclb
jno
lahf
mov
jecxz
sbb
movsl
int
enter
rcr
out
sub
pop
cmp
aad
add
lods
jp
sbb
cli
jge
aam
gs
add
pop
mov
test
xlat
sbb
push
jp
bound
sti
fistl
scas
in
sub
lods
inc
adc
jle
lods
loope
add
push
xor
and
popl
sarl
fbld
imul
cs
mov
cld
inc
out
push
in
adc
xchg
in
outsb
mov
add
and
or
test
repz
add
enter
bound
pop
fiaddl
sarb
dec
outsl
je
xor
lahf
fidivs
jnp
adc
mov
fsubrp
int
loope
mov
jmp
xor
fadds
js
add
sbb
inc
inc
imul
push
push
sarl
cld
cmp
ret
rol
imul
pop
or
jne
leave
inc
mov
lods
movsl
inc
adc
cmp
jmp
pop
or
shlb
cmpsl
xchg
mov
jno
lret
add
aas
pop
inc
xchg
jge
loop
jne
test
cmp
mov
lods
dec
add
imul
inc
fdivrs
xchg
fwait
and
jne
jge
push
mov
pmulhuw
mov
and
jge
cmpsb
dec
cmp
push
jae
in
test
ret
mov
sub
nop
sub
xchg
lcall
cld
bound
mov
cmpsb
and
sbb
xor
out
pushf
pop
mov
negb
jns
add
js
and
test
adc
jns
pop
mov
or
imul
fwait
dec
inc
add
mov
fdivl
inc
data16
push
repnz
daa
fwait
mov
mov
mov
lea
xor
scas
inc
fwait
inc
incl
mov
int3
inc
out
lds
xor
or
mov
stos
or
push
and
sbb
fidivrl
aad
testl
ret
or
ljmp
add
sbb
xor
push
ds
mov
adc
int3
xchg
mov
aaa
cmp
mov
add
mov
sub
ljmp
sub
mov
inc
insl
xchg
cmc
adc
mov
lahf
or
cld
int3
fidivrl
dec
pop
into
pop
call
enter
jae
inc
or
or
pop
pop
inc
pop
xlat
fistpl
rclb
mov
fucomp
bound
lods
negl
inc
iret
pop
in
outsb
mov
fs
inc
fptan
inc
orb
pushf
lcall
jb
roll
jns
push
xor
pop
or
jbe
inc
aaa
dec
mov
clc
testb
cmp
fcoms
pop
rcrl
cmp
cld
mov
mov
repnz
imull
jno
dec
fbld
xor
cs
jns
aas
xor
ret
xchg
movsl
cltd
imul
inc
cmp
in
adc
jnp
cltd
push
adc
sbb
mov
pop
inc
sarl
cmp
pop
imul
das
frstor
popf
movsl
and
out
aas
push
rol
fadd
jb
sub
push
sub
cmp
jmp
rorl
hlt
adc
pop
scas
lcall
jmp
and
mov
pop
dec
mov
in
xchg
jbe
ljmp
cmp
push
les
xor
or
fcoms
outsb
adc
js
lret
and
cmp
js
mov
loopne
or
jecxz
jp
and
jmp
xor
aas
push
ja
aas
movsl
addr16
and
mov
ss
ljmp
repz
push
fstl
fdivrl
cmc
hlt
sbb
lret
clc
iret
pop
inc
jnp
mov
call
hlt
xor
adc
les
mov
lock
pop
jbe
push
pushf
leave
insb
pop
xor
jo
jmp
out
roll
inc
pop
test
lahf
pop
adc
jno
loop
stos
jmp
or
sbb
mov
rclb
jmp
lret
dec
dec
push
xchg
popf
mov
jmp
push
xchg
jg
adc
dec
cmp
add
jae
sbb
fimull
xchg
subl
in
iret
movl
jg
int3
sub
jno
shll
imul
popa
mov
outsb
mov
pushf
insb
aam
xor
cmc
xchg
or
jge
int
ficompl
inc
shlb
inc
jne
or
sub
xchg
cltd
mov
mov
jmp
jle
pop
jb
adc
mov
out
sub
pop
jb
leave
xchg
rorb
add
sahf
cmp
dec
or
sbb
jne
es
inc
adc
xor
not
push
cs
or
enter
scas
sbb
xchg
jg
sarl
pop
outsb
enter
add
push
rep
movsb
mov
int3
movsl
nop
loope
mov
fists
cs
or
imul
or
out
sub
xchg
lods
and
push
mov
push
adc
push
mov
outsl
sbb
pmullw
fcmove
jl
ret
in
push
sti
pop
fucom
bound
daa
push
iret
add
outsl
fisubrl
mov
jecxz
adc
or
push
rcrb
inc
or
fistps
leave
push
xor
data16
sbb
mov
andl
aas
ds
and
orb
addb
xchg
mov
pop
call
inc
adc
je
cwtl
jge
or
idivl
addr16
mov
mov
xchg
push
and
sbb
or
shl
fdivrl
inc
push
add
cmpsb
lea
mov
xlat
dec
or
sub
xchg
lea
push
shl
mov
or
loopne
cmp
cmpsl
adc
mov
fbstp
outsl
push
rol
rolb
inc
pop
call
push
orl
and
fst
orb
aam
mov
jns
inc
outsb
jae
push
lods
jo
push
adc
or
fdivrl
les
adc
fs
loop
mov
enter
stos
clc
mov
xor
jp
add
cmp
rcrb
fs
arpl
inc
jno
imull
int
pop
adc
add
clc
icebp
pushf
jp
xchg
add
add
sub
int3
test
cld
shr
insl
xor
jle
sub
or
dec
mov
out
push
bound
sbb
lret
out
gs
and
push
mov
popa
xchg
mov
push
sarb
popf
xor
pusha
cmp
jle
xor
test
sbb
aam
push
mov
dec
pop
add
mov
dec
mov
lret
xchg
push
sub
sub
fwait
push
cs
fadds
leave
movsl
jbe
std
push
mov
in
andl
adc
cmc
mov
add
lods
stos
and
aam
fxtract
test
repz
fdiv
dec
andb
xor
mov
sub
jge
call
pop
xchg
scas
inc
xor
addr16
int
lret
clc
lock
mov
fwait
sti
test
cwtl
ret
outsl
sub
test
hlt
fs
mov
push
cmp
enter
clc
pop
mulb
dec
push
push
aam
shlb
inc
ss
sub
lods
decb
ds
int
test
leave
jp
jge
push
clc
inc
into
nop
cli
push
out
cmp
test
js
leave
mov
mov
mov
add
sbb
sar
scas
out
test
into
inc
jbe
ss
repz
inc
mov
adc
jl
xor
lock
add
push
dec
pop
adc
pop
aam
mov
jo
es
test
jnp
pop
pop
jl
and
dec
or
enter
je
test
and
dec
sbb
clc
inc
or
push
test
lret
and
mov
dec
leave
adc
mov
out
repnz
scas
pop
stos
xchg
xchg
add
jb
mov
pusha
mov
inc
push
and
mov
iret
and
push
stos
daa
mov
repz
sarl
lock
mov
vunpcklps
jge
push
out
or
xorl
add
out
fwait
js
mulb
repz
xor
fistpl
shr
sahf
jg
jae
xchg
cs
mov
ret
xchg
in
push
push
pop
xorl
shlb
push
fsubrs
das
mov
sbb
lcall
cmp
sbb
mov
and
mov
pushf
inc
pop
in
in
xor
out
pop
call
int
sub
adc
cwtl
mov
xchg
cmp
daa
sub
shlb
inc
jp
push
shll
test
jbe,pt
or
xor
inc
outsl
cmc
cli
mov
sti
xchg
ficompl
arpl
fiadds
pop
push
and
stos
arpl
mov
fistl
sub
hlt
dec
test
xchg
movsb
and
int3
push
hlt
cmpsb
scas
inc
faddl
mov
aad
fisubrl
sub
jnp
daa
jb
push
aad
das
jb
mov
push
jecxz
pusha
lock
inc
jo
cli
lds
pop
xchg
mov
lret
xchg
imul
xor
dec
movsb
icebp
push
fnsave
xchg
std
adc
in
loop
add
xchg
daa
cmp
mov
xchg
xchg
les
and
jl
in
int3
xor
jp
xchg
cs
sbb
cmp
aad
ds
cmp
dec
mov
fwait
push
pop
sub
add
push
xchg
push
mov
mov
or
fidivrs
adc
sahf
fwait
pop
shlb
adc
repnz
mov
mov
mov
outsb
mov
push
push
and
and
scas
scas
inc
out
outsb
adc
lahf
push
inc
cld
ret
dec
in
push
mov
adc
jmp
xor
mov
stos
insb
es
pop
cmpps
jle
mov
out
jl
mov
add
pop
adc
loop
xchg
sti
fisubl
xor
into
divb
cmpsb
mov
rcll
adc
mov
inc
insb
pop
mov
js
test
cmp
and
lds
mov
stc
imul
inc
into
push
pop
xchg
cmp
cwtl
push
push
gs
icebp
in
loope
xchg
and
mov
mov
out
and
insl
sub
aas
and
js
lcall
or
das
js
cmpsb
fists
outsl
popf
stos
aaa
xchg
fidivl
cmp
jle
sub
shl
dec
jbe
or
dec
sbb
sbb
xchg
mov
mov
movsl
mov
repnz
rorl
leave
jo
xchg
aaa
lcall
add
faddp
addb
xchg
in
push
xor
fcmovu
xor
dec
mov
cwtl
insl
mov
std
push
jl
mov
rcrb
mov
movsb
adc
push
and
insl
shrb
xor
fxch
inc
movsl
inc
jge
stc
adc
pop
or
jmp
push
and
js
cmp
xchg
mov
jmp
mov
cmp
push
out
xchg
js
sub
cltd
inc
xchg
add
js
xchg
leave
pop
sub
sbb
xchg
pop
out
mov
sbb
inc
stos
mov
adc
xor
jns
cmc
les
cmp
jl
and
and
pushf
xchg
add
lret
cmp
cmp
cmpsb
push
or
dec
push
adc
cmp
cmp
xchg
mov
add
les
xchg
rorl
adc
in
bound
and
dec
pop
push
stos
movsl
sbb
je
movsb
inc
inc
sbb
xchg
adc
icebp
dec
movsl
mov
xorl
mov
add
fsubrl
pop
ljmp
or
xchg
test
xchg
cmc
jne
repnz
mov
adc
mov
lret
mov
fwait
sarl
mov
mov
xor
roll
das
and
xchg
lret
leave
fs
inc
aas
xor
cmp
mov
jl
imul
sub
mov
mov
test
dec
or
inc
xor
sbb
add
loopne
and
add
pusha
xchg
addr16
ja
and
inc
mov
mov
iret
loope
fwait
imul
or
cmc
inc
je
adc
fisubs
inc
sti
xchg
int
repz
sbb
push
push
cmp
lret
hlt
add
or
push
mov
int
xor
das
pop
pushl
mov
ret
pop
ds
icebp
push
jb
cld
mov
mov
std
clc
cmova
cltd
data16
cltd
xchg
add
mov
and
fsub
fisttpl
test
fs
in
inc
cmpsl
xchg
dec
xchg
stc
dec
jns
mov
aad
add
jecxz
push
jmp
push
xor
adc
cmp
push
mov
mov
xchg
jp
add
loope
pop
lods
push
xor
adc
cmp
mov
rcll
xchg
movsl
fwait
xor
lcall
rolb
int3
pop
mov
shlb
gs
outsl
sbb
std
repnz
add
pop
lock
loopne
bnd
xchg
jl
cmp
and
iret
cltd
add
sbb
fcompl
movsb
les
sbbl
das
lock
cwtl
mov
fmulp
and
fists
je
sub
bnd
sub
movsb
push
xor
sbb
mov
repz
or
aad
inc
repnz
test
js
lea
inc
push
stc
inc
xor
xchg
test
mov
in
lahf
jmp
cmpsl
jmp
iret
adc
or
aad
adc
xor
cmpsl
mov
data16
lock
add
mov
mov
mov
out
pop
and
clc
out
xlat
adcb
add
and
push
shl
xchg
xor
mov
test
cmpsb
in
shr
jno
pop
jbe
mov
or
mov
sbb
add
fnstcw
cmp
push
push
dec
mov
icebp
jl
pop
jae
push
pop
shrl
paddsw
lock
mov
cmp
dec
pop
dec
stc
or
dec
fiadds
cmc
jbe
shrl
jb
adc
and
push
cli
clc
add
test
into
testb
inc
movsl
repz
frstor
cld
scas
std
insl
pop
sbb
mov
inc
repz
add
or
mov
gs
mov
mov
jl
xchg
and
jns
ja
bound
xchg
idiv
cmpsl
dec
dec
push
mov
adc
dec
adc
adc
clc
imul
fcomps
out
fisttpl
repnz
mov
aad
inc
fs
mov
pop
mov
jl
mov
mov
mov
adc
push
scas
push
fidivs
hlt
sub
cmp
mov
add
inc
aam
sbb
adc
xchg
pop
inc
and
popa
sbb
aam
aam
dec
shll
lcall
sbb
adc
pusha
inc
addr16
sbb
pop
push
stc
lock
mov
push
add
mov
xchg
mov
sbb
or
imulb
sbb
cmp
mov
sbb
mov
std
ret
hlt
inc
mov
sahf
aam
cs
pop
adc
mov
enter
fldl
cmp
les
in
fstl
mull
scas
sub
cmp
pop
in
or
stc
pusha
add
pop
or
rclb
xchg
mov
pusha
loop
pop
scas
and
inc
ficoml
subb
loopne
insl
pop
out
fs
and
in
in
ret
push
mov
cmp
popf
fwait
jb
inc
mov
clc
aam
cmp
inc
sbb
bound
addr16
and
push
insb
jne
fsubrs
jmp
sub
cld
pop
js
pop
mov
stc
sbb
push
in
ljmp
lock
jno
lret
out
test
mov
pcmpeqd
fimuls
daa
popa
add
negl
and
std
pop
mov
adc
sarb
std
sub
pop
bound
dec
push
push
jne
cwtl
sub
orb
sbb
cmc
xor
int3
fimuls
mov
or
xchg
test
into
mov
nop
in
cmp
in
inc
xchg
add
sbb
arpl
lods
cmc
inc
scas
add
inc
stos
in
dec
mov
lahf
dec
popa
mov
movsb
aam
pop
repz
xor
jl
fbld
cld
pop
int
mov
jmp
nop
popa
dec
mov
push
xor
cmp
mov
mov
inc
cmp
push
cmpsl
outsb
fistps
dec
stc
push
or
or
add
nop
mov
mov
xchg
xchg
sbb
ljmp
push
add
push
addb
jbe
pop
pavgb
jle
cmp
pop
sub
sub
movsb
nop
jl
into
sub
mov
mov
cwtl
pop
mov
pop
enter
mov
jg
jle
mov
sbb
adc
jl
popf
dec
cmpl
sbb
mov
repnz
loope
jno
mov
xchg
test
popf
cwtl
mul
fstps
std
stos
or
xchg
xor
or
es
cmp
popa
ljmp
sbb
inc
cmp
insb
mov
pushf
jne
outsb
scas
shlb
sbb
dec
leave
sarb
test
nop
or
mov
mov
movsb
pop
adc
mov
ljmp
test
adc
and
or
push
xor
call
mov
jecxz
mov
xchg
aaa
imul
and
add
and
daa
sub
sahf
icebp
jb
pop
enter
iret
jmp
inc
fbld
sub
das
ljmp
pop
mov
cld
jp
mov
stos
xchg
jmp
cmp
in
dec
sub
and
dec
mov
fcompl
jbe
in
dec
pushf
mov
or
lea
imul
jnp
mov
sbb
cmpsb
scas
mov
pop
pop
or
jle
stc
mov
les
pop
mov
daa
push
fistpll
fs
fbstp
xchg
mov
mov
jb
dec
cmp
dec
add
scas
push
fsub
cmp
mov
rorb
bound
push
clc
ljmp
dec
dec
sub
nop
arpl
lods
jne
mov
sbb
push
int
pop
pop
add
cltd
push
sbb
mov
daa
gs
aas
jno
ficomps
loope
incb
dec
cli
sub
mov
lcall
pop
mov
ja
dec
jb
stos
lock
test
iret
sub
pop
cmp
cmp
dec
mov
enter
adc
xchg
outsb
xchg
inc
mov
lods
sbb
ficompl
jne
lret
cmp
lret
lods
enter
cltd
and
mov
mov
lahf
or
daa
adc
loopne
repnz
mov
and
add
or
fisubl
daa
push
in
pop
pop
or
leave
sbb
sahf
xchg
cmp
inc
cs
insl
jg
inc
dec
add
ljmp
dec
cmp
xchg
sbb
or
lea
outsb
cld
lea
xchg
add
stc
in
mov
repnz
push
jno
test
jl
testl
and
sbb
in
and
mov
sti
add
push
mov
mul
out
push
and
sub
aaa
xor
dec
push
out
sti
xor
leave
push
inc
iret
inc
cmp
lcall
jbe
jmp
sub
das
fwait
xor
pushf
lods
rorl
repnz
add
jns
sub
mov
dec
out
mov
aas
xchg
mov
fxch
mov
sbb
mov
xchg
ds
icebp
lret
adc
push
popf
enter
inc
pushf
and
mov
add
sarb
imul
jmp
dec
jo
jg
push
lds
push
inc
mov
imul
orb
aaa
stos
cwtl
add
mov
and
sbb
lahf
push
pop
xor
jg
sub
mov
shll
and
popf
push
jb
gs
movsb
pop
and
insl
jb
lret
xor
adc
xchg
pop
insl
daa
sub
les
dec
push
aas
scas
jle
stc
clc
mov
dec
adc
imul
sbb
inc
add
fwait
or
cmp
lds
mov
ret
mov
jp
push
out
cmp
test
adc
loop
push
imul
xor
inc
cld
xor
cmpsb
dec
push
jns
xor
xchg
lods
cltd
fwait
sbb
stos
push
inc
push
lea
popa
fs
repz
xor
adc
mov
cmpsb
mov
dec
ljmp
sbb
mov
fcompl
in
movl
les
dec
jmp
or
dec
push
pop
jae
jnp
mov
cli
mov
mov
flds
cmp
cmp
iret
outsl
push
test
xchg
xchg
fimull
add
inc
push
cmp
out
cmpsb
mov
add
xchg
pusha
push
repz
cmp
or
movsb
jge
jg
and
sti
outsb
outsb
mov
ficoms
les
add
push
negl
push
mov
cwtl
out
js
cmp
clc
inc
bound
jae
xchg
in
jl
bsf
and
arpl
int3
je
test
mov
in
sub
in
or
in
mov
leave
xor
popa
movsl
xchg
push
cmc
mov
shlb
outsl
xchg
mov
inc
and
insl
push
pop
inc
les
insb
xchg
sub
mov
sub
ret
je
pop
popa
outsl
push
xchg
int3
idivl
repz
xor
xchg
hlt
push
sbb
add
out
imul
adc
mov
xchg
dec
cmpb
add
sarl
bound
outsl
cld
int
cli
push
loopne
out
cwtl
sbb
jns
xchg
sub
mov
sbb
push
cmp
pop
or
les
sbb
movsl
xlat
adc
xchg
sbb
std
mov
xchg
jg
loopne
sbb
add
xchg
mov
sub
xor
arpl
in
outsb
popf
and
sbb
xchg
pusha
mov
ret
enter
inc
jne
repnz
dec
xor
push
or
into
push
inc
jg
jne
mov
dec
es
cli
scas
ds
pop
cli
add
xor
xchg
in
xor
inc
xchg
jbe
rolb
cmp
push
mov
adc
stos
aad
xor
mov
orb
dec
insl
sub
dec
pusha
call
xor
ljmp
jne
push
adc
push
call
jecxz
call
pop
ss
push
lret
rcrb
mov
mov
dec
or
fmuls
sbb
mov
sbb
adc
pop
dec
mov
jle
fucomp
sub
sub
xchg
mov
pop
jg
adc
push
test
push
jmp
dec
and
outsl
xchg
jmp
mov
mov
into
nop
jns
in
ja
in
aas
fsubrp
jne
jl
rolb
sarl
call
mov
xor
cmpsb
cli
and
imul
hlt
popa
pushf
xchg
add
lock
dec
mov
scas
fwait
ds
scas
sub
add
jp
push
mov
and
cmp
pop
cmpsb
jle
call
pushf
nop
pop
shlb
inc
das
inc
imul
adc
shlb
bound
mov
sbb
sub
inc
mov
fisubs
mov
movl
sub
mov
cmp
jne
dec
push
mov
aam
xchg
mov
pusha
inc
test
lods
ret
push
push
pop
in
jmp
mov
pop
fisttpll
ja
ss
cwtl
ljmp
pop
movsb
loope
pop
mov
push
mov
jb
jg
cwtl
xchg
inc
shrb
cmp
push
imul
lds
sbb
sbb
mov
push
mov
aas
pushf
pop
push
fs
es
dec
repz
xor
icebp
cmp
das
jns
fisttpl
and
sub
mov
call
ret
push
jmp
mov
inc
sarl
add
or
mov
mov
adc
or
and
jnp
decl
sarl
ss
hlt
mov
fucom
je
clc
inc
jmp
aam
out
mov
cld
inc
sub
xor
mov
lcall
shr
mov
js
pop
js
or
jnp
sbb
inc
mov
shll
mov
inc
das
arpl
cld
mov
out
or
sbb
cwtl
inc
jl
push
sub
int3
xor
inc
loop
stc
push
pusha
jnp
cmp
outsb
inc
mov
out
aam
mov
jge
call
pop
dec
xchg
jbe
aaa
jg
das
xchg
sti
push
lock
push
push
push
push
fdivl
sbb
sbb
push
clc
cmc
mov
out
ljmp
aad
into
into
and
sahf
aam
enter
incb
decb
inc
nop
push
adc
insl
xchg
je
movsl
mov
rcl
jb
or
test
movd
dec
mov
inc
lcall
call
cltd
mov
scas
imul
vminps
pop
mov
test
inc
xor
fwait
add
cltd
mov
sub
enter
enter
push
andl
jns
cmc
fdivl
mov
adc
lock
in
and
out
addr16
nop
cmp
dec
out
int
and
loope
or
push
adc
js
adc
hlt
pop
repnz
inc
fsubr
rcrl
test
inc
cmp
pop
mov
clc
test
leave
push
lock
repnz
aad
std
dec
jae
xchg
clc
push
lret
fs
mov
dec
cmp
aad
movsl
fstl
popf
pop
aam
fcom
sbb
dec
dec
jb
push
mov
mov
leave
adc
sbb
inc
xor
adc
jle
xchg
push
adc
sbb
fnstcw
cmp
nop
repnz
sbb
pop
add
dec
jl
ds
adc
jmp
or
xor
pop
ds
in
stos
sahf
lahf
adc
and
lds
inc
mov
bound
push
inc
dec
rcl
mov
xchg
cmp
xchg
dec
inc
test
test
and
add
lret
cmp
popa
in
jbe
daa
push
mov
nop
and
xor
mov
ds
aas
push
rolb
dec
mov
push
outsl
dec
pop
iret
push
mov
pop
and
adc
clc
dec
pop
sbb
stc
scas
mov
ss
xor
add
dec
std
popa
lods
xchg
mov
fwait
movsl
ds
cld
fcmove
out
clc
sub
jmp
sbb
std
push
xor
pop
mov
imul
sub
shll
sti
test
shl
mov
mov
int
mov
jg
xor
cmp
repnz
inc
jae
push
filds
arpl
mov
ror
xor
das
xchg
push
into
and
jae
mov
jns
jb
and
in
sets
jnp
sbb
push
cli
movsl
adc
mov
adc
mov
jb
cmc
xchg
jnp
xlat
mov
cmpsb
leave
add
mov
xor
pop
cmp
fcoms
mov
mov
push
xchg
inc
or
pop
lahf
xor
or
dec
lea
xor
xor
popf
popl
mov
xchg
xor
cld
sahf
pusha
push
jo
jo
or
ss
hlt
mov
insl
frstor
ljmp
stc
adc
cmpsb
adc
pushf
data16
jge
pop
xchg
add
xchg
fisubrs
push
cmp
mov
fs
fwait
xchg
add
jo
arpl
xchg
push
hlt
sub
sub
pop
fdivrl
je
insb
or
add
dec
imul
call
es
xchg
daa
or
push
das
add
inc
push
aad
xchg
push
cmp
mov
bound
sbb
xor
mov
pop
in
inc
loop
mov
das
xor
pop
mov
push
mov
cmp
push
out
sub
lock
dec
jle
xchg
insb
inc
scas
mov
mov
bnd
arpl
mov
les
mov
nop
jo
cld
mov
repz
push
add
inc
repz
add
add
mov
cmp
push
lahf
pushf
xchg
pop
add
pop
or
jo
add
dec
push
xor
inc
sbb
imul
into
mov
inc
js
pop
xchg
aas
fcomps
subb
mov
out
adc
loopne
inc
into
jno
popa
in
sub
test
push
out
or
sub
xchg
adc
inc
pop
out
mov
aad
add
incb
jbe
loope
aam
addl
push
sub
xchg
xor
bound
push
mov
insb
and
loopne
std
fldl
xchg
cmp
loop
dec
inc
sub
mov
push
adc
pshufw
in
cs
test
xor
pushl
ret
adc
jp
push
jle
fs
popa
ret
repz
pop
push
push
lret
dec
aas
fisubl
insl
xor
arpl
sbb
add
adc
xlat
faddp
add
or
stc
stc
decb
cmpsb
shl
roll
inc
push
fisttpl
inc
or
dec
es
in
scas
les
jne
imul
and
jns
and
pop
imul
lret
or
test
sub
inc
cmp
push
out
call
sahf
clc
jae
iret
cli
repz
icebp
clc
xor
sbbl
repz
jp
xlat
adc
in
ljmp
push
mov
adc
int
mov
jns
mov
inc
mov
inc
push
jo
cmpsb
loop
fistl
test
cmpsb
sbb
and
and
ret
fwait
mov
add
sarb
push
xchg
mov
xchg
xchg
jl
ss
add
jbe
and
je,pn
inc
dec
cmp
and
jecxz
mov
icebp
adc
sub
loop
push
push
pop
jae
lock
lret
jns
mov
sbb
mov
pop
loop
mov
mov
xor
dec
int3
jnp
int
ds
lahf
fsubl
aam
push
mov
and
mov
xchg
add
dec
add
mov
lods
pop
rcr
in
push
and
or
aas
and
mov
test
loop
lock
inc
outsl
push
andb
adc
cli
sar
xor
mov
lods
cld
inc
jnp
sub
mov
jo
or
aam
cli
xchg
add
cmp
in
cld
push
mov
insb
aad
lock
ds
mov
pop
mov
lods
test
pop
jne
xchg
push
repnz
iret
inc
cltd
mov
mov
ljmp
gs
scas
aam
aam
fwait
mov
out
stc
jmp
mov
nop
pushf
fidivl
stos
jg
nop
jnp
or
inc
or
shrl
pop
ljmp
les
jge
cli
mov
adc
repnz
out
xchg
test
adc
int3
je
pop
add
fucomp
popa
cmp
sub
push
cmpsl
mov
or
rcrb
scas
int
mov
push
loopne
dec
fdivs
mov
push
lea
lret
push
lods
mov
enter
and
or
sub
iret
inc
lock
dec
sbb
scas
xor
dec
mov
push
push
rcrb
adc
rol
cmp
mov
jo
xchg
and
xor
and
xchg
clc
dec
rol
xor
dec
sar
cs
testb
cs
les
jae
cmc
fildll
mov
scas
sub
scas
fistps
and
scas
cmpsb
xor
int
outsb
gs
pop
sti
int
rcrb
cmp
fcoms
loope
mov
sub
icebp
out
aad
xor
rorb
adc
das
stos
lea
fsubs
ss
lds
pop
icebp
out
jns
loopne
or
push
cltd
inc
adc
into
jmp
test
dec
inc
cs
cmp
cmpsl
adc
int3
out
sub
lret
cmp
cld
lock
or
adc
fwait
lret
jmp
dec
xchg
orl
inc
lea
push
or
dec
push
fadds
or
inc
test
outsl
and
and
or
xchg
inc
stc
lret
xchg
cmp
fld
cmpsb
fucomip
jmp
das
jecxz
or
mov
push
mov
jns
dec
jecxz
es
xchg
stc
jo
lock
jecxz
jp
adc
rorb
incb
sarb
fstl
cmpsl
dec
push
hlt
stos
or
jg
enter
jge
js
imul
pop
aas
xchg
in
push
outsb
es
cs
mov
shl
fnstcw
lods
in
adc
mov
inc
aam
cmpsl
pop
subb
lock
adc
and
xchg
inc
mov
cmpsb
xor
insb
jmp
xchg
repnz
sub
mov
lods
push
nop
and
scas
dec
insb
dec
xchg
das
lret
inc
add
mov
hlt
bound
aas
jmp
arpl
je
mov
movsb
cld
loope
dec
jns
push
les
sbb
rep
mov
inc
cmp
lock
dec
cli
cltd
aad
mov
xor
stc
test
push
pusha
pop
push
push
xchg
stos
add
jecxz
rclb
cld
mov
hlt
rcrb
jge
xchg
lret
sub
jo
xor
dec
or
cmp
push
sub
inc
xorb
push
cli
mov
lds
push
inc
and
popf
inc
jg
roll
loopne
and
fmuls
scas
movsb
add
push
fmulp
xchg
pop
sbb
and
cs
cltd
aam
jb
add
add
enter
dec
mov
mov
out
rcl
xchg
leave
dec
pop
test
jnp
out
gs
adc
mov
or
mov
scas
aaa
in
mov
js,pn
mulb
lcall
sbb
ss
inc
xchg
mov
pop
dec
movsl
jns
push
aam
sub
xor
cmp
lahf
dec
sbb
inc
push
xor
push
or
add
insl
or
sbb
fstpl
xchg
xchg
jp
xchg
sub
mov
in
push
push
sbb
cmp
dec
mov
in
cwtl
cmc
jecxz
lahf
into
fucomp
xchg
jge
scas
popa
dec
test
bound
mov
js
jle
test
lock
pop
fs
or
xor
cmpb
sti
insb
popf
dec
inc
sbb
push
dec
jb
fs
popa
cs
cmp
not
movsl
sub
ds
mov
pop
mov
movsl
pop
bound
push
jle
pop
dec
int
js
sbb
sahf
es
and
aad
mov
aas
mov
cmp
mov
mov
test
pop
shrb
lahf
jnp
or
mov
imull
ret
je
pushl
xorl
pop
inc
cmpsl
les
data16
lret
addr16
js
or
and
lcall
mull
inc
je
in
push
psubq
lret
movsw
in
lret
push
inc
dec
xor
or
jg
es
mov
dec
cltd
inc
xchg
sub
cmp
fisttpll
xlat
add
lcall
in
or
dec
xchg
cmpl
jne
jle
ss
imul
out
test
push
xchg
aam
jmp
clc
sbb
push
lods
or
mov
pop
movsl
pop
and
sti
in
cs
lods
xor
dec
inc
xor
dec
push
xor
push
imul
loopne
push
fs
xor
inc
sbb
mov
out
cmp
rcl
insl
add
in
sbb
fs
addr16
ret
add
sub
nop
xor
sub
aad
divb
and
cld
sub
pop
push
mov
stc
movsl
popa
sub
lahf
fdivs
xor
ret
ja
fwait
sub
stc
lahf
mov
inc
sbb
xor
aam
sbb
jbe
and
jmp
sub
out
xor
mov
sub
mov
js
push
repnz
sbb
push
testb
out
cmc
popf
jne
sarb
or
sbb
cs
imul
add
frstor
roll
in
jecxz
add
std
call
mov
enter
push
pusha
out
cmp
or
cwtl
jns
imul
jns
push
mov
sbb
stos
mov
xor
std
sub
arpl
testl
sub
into
xor
xor
xchg
adc
pop
fstl
jecxz
ds
cmp
mov
cmc
bound
mov
or
test
push
fsubrs
lods
mov
push
or
cld
inc
jns
ds
or
repnz
mov
mov
xor
hlt
ss
mov
mov
adc
enter
jbe
sahf
mov
hlt
cmp
les
push
orb
out
sub
push
insl
test
pop
xor
add
or
sub
mov
dec
jns
sub
mov
jecxz
dec
popf
jb
ljmp
add
test
cmp
push
ljmp
rolb
pop
sbb
cmp
fdivrl
in
sbb
out
and
inc
cld
pop
lock
pop
test
stc
cmc
test
jp
mov
jge
pop
adc
ffree
mov
icebp
push
cmp
cs
cmp
lret
in
dec
inc
cs
push
pop
fcomp
aad
and
push
ror
add
mov
lock
mov
or
xor
mov
dec
and
jo
or
dec
jg
jp
and
sub
jae
hlt
call
mov
pop
sub
out
ja
out
nop
scas
add
add
jmp
xchg
xchg
out
cld
pop
in
imul
out
and
fsubrs
ds
cmp
mov
je
jo
inc
pop
loopne
in
mov
mov
data16
test
fstp
out
inc
in
sub
pop
adc
cmp
and
lret
lock
lret
inc
arpl
cld
lea
xchg
sarb
jbe
push
and
pop
mov
enter
cmp
sbb
xchg
mov
sub
mov
and
push
fisttpll
dec
jb
int3
push
repz
dec
pushf
fbstp
jmp
mov
xchg
push
sbb
add
cmp
cmp
out
sub
rcr
lods
pop
call
pop
pop
bound
lcall
add
or
fildl
mov
sahf
nop
xchg
fstps
add
xchg
nop
sub
call
sub
scas
xchg
std
and
and
xlat
adc
cld
daa
pop
cwtl
and
mov
jle
jns
out
cmp
ljmp
mov
and
daa
adc
rolb
jmp
jne
shll
push
sub
push
mov
adc
test
shrl
inc
jle
test
sub
ss
or
pop
sub
into
lods
mov
mov
jge
stos
ljmp
jnp
call
xchg
dec
sbb
mov
mov
inc
orb
or
int3
jbe
jg
cmp
inc
and
enter
out
bsf
mov
push
sub
ds
pusha
xchg
xchg
cmp
mov
inc
jl
aas
cmpb
lods
sbb
iret
jb
xchg
and
enter
movsl
idivb
dec
roll
mov
fsubrl
ret
shll
jbe
inc
cltd
jge
jnp
or
shlb
jne
scas
frstor
pusha
cmpsb
pop
cltd
mov
adc
jno
dec
push
xor
lcall
movsb
xor
lret
pop
clc
ja,pn
or
or
jg
mov
ficoms
jne
push
imul
sbb
dec
scas
hlt
cmp
jb
and
xchg
sarb
pop
into
mov
sub
mov
loop
mov
jo
sub
xchg
mov
outsl
mov
and
cmpsl
inc
sbb
mov
mov
dec
sub
clc
and
mov
mov
enter
mov
dec
or
shlb
mov
sub
xchg
js
mov
or
cmpsb
sub
cmp
pop
adc
jo,pt
cs
repz
stc
xchg
rclb
cltd
mov
dec
mov
dec
cmp
aad
inc
mov
xchg
mov
ret
aam
in
xchg
sub
shrl
and
data16
pop
mov
jno
add
cmpsb
jae
jne
push
sarl
imul
sbb
or
pop
adcb
lds
in
pop
fldl
imul
add
lock
dec
dec
outsl
pop
sbb
ss
int
xor
cwtl
pushf
testb
cli
jns
rcll
mov
or
les
pop
adc
lds
fildll
mov
sub
and
add
xchg
push
mov
xor
jl
jmp
jae
sbb
sub
fldcw
xor
fsubl
popf
dec
dec
xchg
mov
out
and
and
dec
adc
xor
jbe
sahf
enter
and
cwtl
mov
pop
push
inc
fst
dec
pop
adc
inc
sarb
inc
adc
sbb
dec
cmp
push
and
mov
dec
je
pop
cmp
mov
ss
wrmsr
adc
fcoms
jno
shlb
jae
in
mov
and
jnp
fcmovnbe
popa
add
loop
jne
dec
pop
in
call
js
and
mov
in
add
in
mov
xor
xchg
insb
mov
mov
insb
push
jp
mov
dec
test
lock
xchg
js
jle
bound
dec
mov
xchg
bound
std
add
adc
cmp
mov
hlt
mov
mov
xchg
setb
mov
adcl
or
sbbb
pushf
mov
xor
lcall
xor
in
jmp
or
push
xchg
dec
mov
jecxz
pop
loop
clc
sbb
jg
pushf
and
orl
xor
and
fdivr
mov
jmp
lock
fmulp
push
jnp
mov
mov
fildl
push
mov
outsb
imul
iret
jnp
pop
dec
sahf
pushf
adc
jae
adc
jae
imul
sub
mov
dec
inc
in
inc
popa
cmp
xor
test
or
shrl
mov
insb
sbb
push
adc
imul
mov
add
nop
out
lods
mov
mov
lret
pop
lea
addl
jnp
dec
faddl
or
ret
jecxz
fdivl
jmp
lods
test
jecxz
pop
cmp
iret
mov
das
push
xor
push
lods
insl
xlat
mov
mov
jmp
jle
movsb
fcoms
not
dec
push
xchg
xor
push
addb
dec
enter
iret
pop
mov
pop
sub
push
fnstenv
add
and
mov
pop
repz
and
pusha
sbbb
and
imul
lret
or
ds
roll
adc
sub
dec
mov
fwait
ljmp
aam
push
mov
fidivs
dec
rcl
xchg
in
add
stc
and
fsubl
xchg
jecxz
fdivs
cmc
cmp
in
add
arpl
or
jle
outsb
repnz
pop
outsb
leave
test
mov
pop
xchg
sub
nop
push
dec
sahf
in
cmp
loope
push
jge
push
test
aad
and
pop
pop
xor
cmpsb
inc
jnp
pop
lock
loopne
mov
dec
repnz
sbb
mov
ja
ljmp
repnz
dec
or
std
xlat
cmp
cmovg
fcompl
sbb
mov
mov
aam
fmuls
idivb
ficoms
sub
repnz
pop
data16
pop
mov
aaa
mov
push
dec
lahf
fmuls
xor
cmp
imul
jb
pop
fiaddl
jbe
push
mov
adc
fs
mov
and
jo,pn
nop
mov
cmc
jg
mov
mulb
mov
cmp
and
scas
mov
xor
rorl
jno
fcompl
subl
scas
aas
stos
add
addb
pop
addb
fildll
mov
lods
fsubrl
xor
ror
or
es
mov
lock
jne
jno
aam
lods
insb
mov
pop
popa
icebp
jb
fnstcw
push
jge
lahf
daa
adc
xchg
aaa
sub
cmc
sub
cmpsl
shll
dec
in
jle
lods
es
dec
mov
dec
cwtl
inc
call
es
fisubrs
jl
fistpll
dec
dec
ds
ljmp
popa
xchg
loope
push
aaa
xchg
and
mov
inc
lcall
inc
scas
inc
subb
push
push
sarl
sub
cmpsl
xchg
lods
xchg
lahf
xor
shlb
movsl
icebp
cmp
adc
popa
loopne
sahf
mov
jo
imul
and
sbb
cmpsl
inc
sbb
sbb
sbb
adcl
add
mov
std
pop
ds
lahf
test
sbb
es
je
mov
hlt
imul
cmp
inc
mov
out
mov
repnz
xchg
and
cmp
adc
push
bound
mov
cmc
pop
fbstp
js
lcall
shll
push
fsubrs
in
inc
jg
out
cld
adc
push
and
jl
in
jmp
xchg
adc
out
ret
and
ljmp
in
inc
sub
jmpw
xlat
pop
xor
aad
popf
jae
push
mov
sbb
push
sbb
cmp
and
jp
inc
popf
in
addr16
and
leavew
and
stos
dec
js
cmp
cmpsl
in
rcll
ja
adc
lret
adc
mov
lds
sbb
repnz
mov
ret
mov
pop
aam
fldcw
mov
orl
jne
xor
xor
rorl
jmp
lock
inc
jno
pop
sahf
popf
adc
mov
inc
sub
ret
add
jno
dec
stos
pushf
pop
ret
inc
roll
cmpsl
test
sbb
dec
inc
cmpsb
pop
cmpsb
je
or
je
test
adc
imul
clc
inc
hlt
and
jecxz
push
insl
mov
inc
jp
loopne
push
sub
fwait
or
inc
jo
jl
scas
sbb
xchg
mov
lods
mov
or
jns
mov
enter
lods
push
rol
jns
rol
mov
cmp
ror
test
stc
inc
add
mov
mov
stos
out
into
sbb
dec
pop
jl
pop
xor
push
xchg
jb
int3
cwtl
iret
shrl
data16
cmpl
lahf
cmpsl
cmc
stos
mov
add
cmpsl
mov
pop
sbb
cmpsb
je
mov
icebp
adcl
jge
movsl
or
pushl
adc
pop
push
enter
fidivrl
mov
popf
sahf
sub
jo
gs
aam
push
mov
cmp
shl
out
mov
shlb
adc
dec
imul
cmc
rolb
or
repnz
mov
add
scas
lods
push
cli
mov
decb
loopne
lret
xchg
aaa
js
xchg
sub
pushf
sub
popf
scas
push
mov
push
pusha
movsb
gs
loope
aas
fmull
dec
daa
insb
iret
adc
push
mov
add
mov
sbb
inc
jno
cmp
mov
dec
sbb
sub
jmp
icebp
sbb
notl
call
or
jno
sub
addl
rorb
popa
inc
loop
dec
xchg
enter
sub
popa
or
inc
add
and
adc
ret
xchg
or
jbe
mov
in
cwtl
popf
leave
xor
push
push
sbb
fsubp
cli
stos
ss
xlat
sub
xor
and
push
dec
lret
xchg
pop
xlat
aad
jae
adc
cmpsb
push
gs
aam
in
sbb
aas
int3
repnz
fsubl
icebp
xor
jle
clc
dec
push
push
sbb
in
mov
data16
jg
sub
adc
jo
jl
outsl
negb
movsl
inc
imul
test
mov
sbb
mov
addr16
pop
sub
fsubs
sti
mov
add
test
adc
addl
sub
and
loopne
inc
mov
mov
push
pop
adc
dec
push
mov
adc
dec
jmp
xchg
daa
lahf
and
cmc
jle
inc
xchg
cmc
mov
xor
pusha
adc
push
lods
inc
push
adc
icebp
pop
dec
sbb
mov
mov
arpl
cmp
or
aas
aam
mov
inc
and
dec
int3
sbb
loopne
sub
cltd
mov
and
mov
in
dec
pop
mov
leave
sbb
xchg
mov
push
xchg
mov
outsb
mov
sub
or
xchg
fiadds
mov
mov
mov
adc
stos
mov
mov
mov
sub
in
mov
mov
mov
xor
lods
movsl
mov
mov
adc
sbb
lods
mov
xchg
add
mov
scas
push
scas
xor
lods
or
mov
xchg
jo
daa
jg
push
mov
stc
es
pushf
dec
data16
xchg
cmp
pop
push
leave
rorb
dec
lret
loope
xor
lret
pop
fwait
dec
imul
gs
adc
inc
loopne
fidivrl
daa
fidivl
mov
sub
sbb
jnp
mov
xchg
cmp
pop
std
les
ljmp
sbb
xchg
dec
mov
dec
or
out
xchg
cs
pop
cmp
lods
and
inc
pop
pop
jmp
mov
mov
sahf
fbld
daa
mov
cld
add
jge
enter
inc
mov
lods
xor
mov
outsb
dec
adc
push
cmovle
dec
mov
in
xchg
cmp
pop
jns
lahf
mov
xchg
je
sahf
out
cmc
hlt
jno
cmp
scas
adc
dec
sbb
adc
mov
inc
je
idivb
test
pop
jecxz
or
jmp
sbbl
jl
xorb
sbb
push
jle
movsb
sub
lock
xor
mov
stos
or
divl
xor
int
or
mov
mov
cmp
pop
dec
bound
jne
fnstcw
fwait
push
mov
sbb
je
sbb
aam
cmp
add
rcrl
nop
cmp
hlt
insl
bnd
popa
mov
xchg
cmp
xor
in
pop
xchg
inc
or
out
das
cmpsl
pop
sbb
lods
aas
outsl
popf
mov
inc
fstpl
pop
mov
lahf
into
inc
push
pop
fadds
jb
add
in
sub
push
call
pop
sub
mov
push
pushl
pushl
pushl
call
mov
sub
add
push
pushl
call
mov
mov
sub
add
push
pushl
call
mov
mov
sub
add
push
pushl
call
mov
mov
sub
add
push
pushl
call
mov
mov
sub
add
push
pushl
call
mov
cmpl
je
cmpl
je
cmpl
jne
jmp
push
push
pushl
push
call
mov
cmpl
je
mov
mov
call
cmp
je
mov
mov
add
mov
lea
push
push
mov
pushl
pushl
call
test
je
mov
pushl
pushl
pushl
call
mov
mov
add
mov
andl
mov
movzwl
mov
lea
mov
jmp
mov
inc
mov
mov
add
mov
mov
movzwl
cmp
jae
mov
pushl
mov
mov
add
push
mov
mov
add
push
call
jmp
push
push
pushl
call
andl
pushl
pushl
mov
call
test
je
mov
mov
add
mov
push
call
cmpl
je
push
push
pushl
call
push
call
pop
leave
ret
push
mov
sub
push
push
movl
push
xor
cmp
jbe
mov
inc
mov
mov
xor
mov
divl
xor
xor
mov
test
jbe
mov
add
xor
divl
mov
mov
add
add
inc
cmp
jb
mov
lea
xor
mov
divl
sub
mov
mov
mov
xor
mov
mov
add
inc
cmp
jb
decl
jne
pop
pop
pop
leave
ret
push
push
mov
mov
mov
rep
pop
pop
ret
mov
lea
mov
test
jne
mov
movzbl
inc
mov
mov
movl
mov
mov
shr
add
and
mov
ret
push
xor
inc
call
lea
call
test
jne
mov
pop
ret
push
mov
and
sub
mov
andl
push
xor
and
mov
lea
inc
push
mov
mov
lea
call
test
je
call
test
je
call
test
je
push
xor
pop
lea
call
dec
lea
jne
mov
test
je
mov
sub
mov
mov
jmp
movb
incl
jmp
mov
movzbl
incl
xor
inc
mov
and
inc
inc
shr
je
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
jmp
mov
jmp
call
test
jne
cmp
jne
lea
call
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
jmp
sub
jmp
dec
dec
mov
movzbl
shl
add
incl
lea
mov
call
cmp
jb
inc
cmp
jb
inc
cmp
jae
inc
inc
test
je
mov
sub
mov
mov
incl
inc
dec
mov
jne
mov
xor
inc
jmp
mov
mov
mov
incl
incl
mov
xor
cmpl
je
mov
pop
sub
pop
mov
pop
ret
push
mov
push
mov
jmp
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
test
je
mov
add
cmpl
jne
xor
inc
pop
pop
ret
xor
jmp
push
lea
cmpl
push
push
je
mov
lea
mov
test
je
mov
lea
cmpl
je
mov
add
push
call
test
je
pushl
push
pushl
mov
call
test
je
add
add
cmpl
jne
xor
inc
pop
pop
pop
ret
xor
jmp
mov
xor
lea
push
mov
inc
test
je
cmpl
je
pushl
lea
pushl
push
call
pop
ret
inc
js
je
jb
arpl
jae
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
outsl
popa
fs
imul
add
mov
push
push
addb
aad
mov
in
cmp
insb
cltd
mov
xchg
lret
pop
or
js
jp
fs
data16
insl
imul
jns
jo
cs
add
imul
add
add
insb
gs
jno,pn
jae
push
push
bound
jbe
outsb
outsl
outsb
arpl
ja
jae
insl
add
bound
jae
gs
insb
add
fs
popaw
cs
add
outsl
ja
ja,pn
ja
add
ja
jo
outsb
add
add
imul
jno
imul
insl
imul
ja
push
ja
outsb
addr16
add
outsl
jb
imul
add
jbe
outsl
push
arpl
jo
arpl
add
add
ja
insb
outsb
imul
jae
ja
push
insl
imul
popaw
outsb
add
jbe
jo
jae
outsb
popa
push
push
arpl
add
jae
insl
cs
imul
push
jp
add
add
jo
js
cs
insl
imul
insl
push
imul
js
add
add
outsb
fs
imul
add
arpl
outsb
imul
add
insb
jns
imul
je
add
add
insb
imul
gs
add
ja
jns
push
insb
add
addr16
jp
jbe
jno
data16
popa
jbe
js
jbe
add
jns
gs
js
jne
push
add
add
gs
data16
outsl
push
add
jno
je
ja
jno
outsl
je
add
add
addr16
add
add
arpl
js
jns,pn
add
add
je
outsb
push
jne
gs
add
add
jo
gs
jae,pn
add
add
bound
data16
arpl
jne
cs
imul
imul
add
imul
insb
outsl
add
add
imul
cs
outsl
insb
add
add
popa
gs
insb
jp
outsl
push
jae
ja
je,pn
data16
add
jns
cs
add
add
outsl
push
jns
jno,pn
jp
imul
jne
data16
add
add
imul
outsl
push
add
jns
outsb
jbe
arpl
add
add
insl
jne
data16
add
add
push
jns
imul
add
jb
ja
cs
jp
add
add
jp
ja
imul
add
jne
push
jo
jb
add
add
fs
ja,pn
jns
add
add
jno
insl
jp,pn
jbe
add
imul
gs
add
jae
outsb
insl
ja,pn
push
add
imul
jno
imul
add
ja
arpl
add
add
jb
imul
je
add
insb
js
jo
jne,pn
data16
js
jns
imul
bound
jno
js
jo
outsl
cs
insb
outsb
outsl
imul
add
ja
outsb
jo
insb
imul
add
add
push
add
add
outsb
js
outsb
jae
add
addr16
je
outsl
jp
insl
jne
jns
outsb
add
add
data16
jo
popa
add
add
outsb
outsl
outsb
cs
bound
add
jp
imul
ja,pn
push
outsl
data16
add
outsb
imul
imul
jno,pn
push
push
je
imul
bound
js,pn
jns
imul
insb
jb,pn
imul
add
jp
jb
imul
jb
ja
jb
jb
addr16
push
cs
add
arpl
add
add
popa
arpl
jns
insl
add
add
imul
jp,pn
jno
add
je
jno
bound
data16
add
bound
arpl
imul
jae
addr16
insl
insb
cs
insb
add
add
addr16
imul
insl
jae
add
push
push
outsb
ja
imul
add
add
jb
jne
js
push
add
imul
jno
add
add
jns
popa
jae
outsl
jne
jbe
jo
insb
add
add
gs
imul
jne
add
jp
ja
je
jns,pn
ja
add
add
add
popa
jp
cs
add
imul
fs
arpl
jno
cs
popa
imul
imul
outsl
jns,pn
add
jb
gs
insb
fs
arpl
add
arpl
jns
data16
add
js
data16
outsl
data16
imul
jno
data16
add
insb
outsl
gs
add
ja
outsl
jo
add
arpl
ja,pn
outsb
add
add
jno
arpl
jb
jno
add
add
arpl
jb
addr16
jp,pn
jbe
add
add
push
imul
jo
add
add
jbe
jb
add
jno
insl
data16
insl
add
add
push
insl
je
addr16
insb
insl
outsb
popa
insb
add
add
arpl
gs
add
add
jno
push
jno
imul
ja
imul
ja
add
jns
jo
push
add
add
jae
jo,pn
jp
add
add
jo
jbe
imul
push
insb
jno
jns,pn
jbe
add
add
jo
jp
jno,pn
data16
jb
jb
jae
jo
cs
data16
add
add
jo
push
add
addr16
arpl
js
jp
add
inc
gs
jb
arpl
fs
jae
add
imul
gs
xor
cs
insb
add
add
ja
popa
cs
addr16
imul
add
add
jae
jp
add
add
jbe
ja
jb
add
jp
jbe
ja
add
add
bound
js
add
jb
jbe
gs
add
arpl
imul
insl
jae
insb
bound
imul
jne
jae
bound
add
add
outsb
jno
cs
outsb
add
add
popa
je
popa
je
push
imul
jns
bound
imul
add
insb
push
arpl
add
data16
bound
je
push
je
js
ja
data16
add
add
gs
addr16
add
add
outsb
jbe
popa
add
add
insl
jb
bound
insl
add
add
push
jo
jns
arpl
add
add
jo
bound
add
add
jno
jne
push
jae
imul
add
jo
outsl
arpl
cs
jo
add
add
imul
bound
add
jae
je
jno,pn
ja
add
push
cs
arpl
outsl
add
add
gs
popa
ja
add
add
outsl
outsb
jne
outsb
arpl
jno
data16
gs
jp
jae
push
push
insl
outsl
jbe
add
add
insl
push
push
imul
add
add
outsl
jp
addr16
data16
add
addr16
jp,pn
jo
add
jne
outsl
jb
je,pn
insl
add
add
jp
add
add
jb
addr16
fs
ja,pn
ja
add
jne
jno
js
je
fs
jns
insb
outsl
add
jne
jbe
gs
outsl
imul
outsb
arpl
jae
imul
arpl
outsb
insl
outsb
add
jne
imul
addr16
add
push
jae
push
jb
js
insl
insl
outsb
insl
jne
arpl
add
add
jp
imul
js
popa
add
add
gs
jb
je,pn
insb
add
jno
push
insl
push
data16
add
bound
gs
add
fs
imul
add
add
push
add
bound
popa
add
push
jbe
push
fs
add
outsb
push
jo
imul
add
add
fs
imul
jbe,pn
push
push
addr16
outsl
imul
ja
add
push
push
add
addr16
imul
bound
imul
imul
arpl
outsl
jbe
imul
fs
imul
bound
add
js
jno,pn
add
add
insb
jo
imul
ja
add
add
jb
jbe
outsl
insb
push
jns
add
add
outsb
insb
outsl
jp
arpl
add
jns
bound
add
jbe
jne
jbe
jb
arpl
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
rolb
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
inc
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
add
add
jb
je
and
push
add
jae
je
add
jae
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
popa
add
jo
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
