out
imul
push
cmpsb
mov
pop
xor
je
icebp
xor
adc
aaa
or
jge
data16
jmp
sti
jg
or
nop
fs
js
loop
lock
mov
ficompl
call
cmp
movq
sbb
jp
inc
inc
inc
stos
cmp
sbb
jmp
loop
stos
data16
repnz
add
dec
out
loopne
cmp
jbe
fnstenv
xchg
jmp
inc
dec
inc
out
xchg
mov
xchg
pop
lods
push
pop
aaa
ret
add
cmp
stos
lds
mov
ljmp
sbb
inc
cltd
mov
push
mov
enter
pop
sub
sub
loope
jg
decl
stos
add
out
adc
repz
jo
mov
sub
arpl
cmpsb
add
lcall
mov
inc
and
adc
lock
imul
pop
mov
sub
out
add
xor
enter
sbb
push
in
mov
scas
and
sbb
ljmp
mov
aad
das
push
xor
add
mov
ljmp
jge
mov
out
out
ret
cs
pushf
outsl
sub
mov
jns
rcrb
pushl
sub
push
adc
cmp
lret
adc
rorb
jp
pop
xchg
sti
adc
lcall
sub
stos
mov
nop
push
xor
cmp
mov
and
ret
sbbl
jmp
xor
shrb
mov
fs
xchg
into
in
jge
pop
mov
mov
mov
push
adc
std
fnstcw
jmp
mov
lea
ljmp
sub
jnp
out
pop
xor
inc
out
jnp
and
mov
clc
addr16
inc
lcall
pop
jmp
inc
adc
add
pop
jns
mov
out
sbb
cs
lods
xor
jmp
data16
cmpsb
pop
xchg
cmpsl
popa
lret
push
push
jo
repnz
or
out
in
dec
loop
aas
push
ja
fcompl
dec
ficomps
cmpsl
xor
fwait
add
jmp
sub
mov
fstpt
jbe
xorb
and
mov
push
push
sub
pop
mov
mov
lock
lcall
sbb
cmp
sub
xchg
xchg
add
sti
dec
inc
xchg
xor
data16
stc
in
dec
outsb
sbb
out
pop
push
jg
out
dec
dec
xchg
mov
daa
or
ret
nop
std
dec
jne
mov
test
call
adc
pop
push
inc
repz
sub
lods
jae
mov
mov
decl
pop
movsl
out
mov
cmc
xchg
mov
popa
jp
cmp
sub
decl
sbb
iret
sbb
fistps
aam
fsts
pop
orl
mov
decl
into
mov
jge
or
cld
test
xchg
fldt
movsb
shrl
mov
xchg
pushl
cmc
cmpsb
cmp
pusha
jns
inc
in
call
mov
mov
push
xor
into
in
mov
call
cmpsl
mov
mov
subl
sahf
scas
in
pop
lock
filds
xor
pop
adcb
jge
or
push
mov
fwait
rcrb
pushl
jno
filds
sbb
lock
dec
xor
push
movsb
mov
movsl
je
decl
push
adc
mov
mov
divb
mov
push
lahf
int
cli
pop
lock
call
pusha
subl
mov
dec
outsb
xor
xor
test
sbb
dec
enter
call
dec
jecxz,pn
mov
adcl
movsl
call
push
jne
add
sub
rcrl
insl
pushf
fmul
aas
jne
loop
pop
pop
mov
stos
or
nop
cld
sub
inc
jg
dec
push
jmp
in
daa
out
es
mov
jge
filds
ds
cmp
mov
push
pop
rorb
inc
or
gs
cmp
mov
enter
das
shl
cmp
in
jg
ss
roll
add
pop
or
jno
pop
fnstcw
push
sbbl
sbbb
jne
pop
pop
orl
xchg
vorps
cmpsb
insl
push
in
xor
incl
stos
cli
test
mov
andb
jno
jbe
push
popf
arpl
pop
dec
xchg
fs
or
mulb
and
pop
cmp
cltd
and
add
pop
insl
bound
aaa
mov
int
int
jne
sbb
xchg
jb
mov
push
aaa
in
lahf
inc
and
stos
and
pop
pop
lock
incl
jae
mov
jne
pushf
pop
jl
data16
dec
jb
adc
icebp
pushl
mov
clc
xchg
jo
mov
out
lds
cmpsb
mov
fadds
lcall
pop
sbb
xchg
lea
lahf
movsb
out
movsb
jne
data16
inc
scas
jbe
or
pop
sub
cwtl
xchg
call
fsubl
je
push
in
movsb
inc
imul
cmp
outsb
fisubl
fists
and
ret
xlat
push
and
and
mov
add
into
xchg
testb
loope
loopne
cwtl
and
arpl
inc
loop
mov
cmp
and
cmp
and
sub
sahf
out
mov
pop
push
sbb
and
ja
cmp
dec
push
lret
sbb
adc
pop
push
sub
fs
pusha
push
decl
cmc
jp
bound
mov
and
push
xchg
xchg
or
lahf
add
mov
incl
loopne
in
imul
clc
dec
and
jb
jnp
inc
xlat
mov
push
inc
jg
jmp
scas
cli
inc
mov
subl
shl
lcall
fwait
xor
jmp
test
in
subl
cmp
repnz
push
cmp
mov
pop
add
ljmp
shl
cmp
sub
in
mov
and
cld
and
jmp
testb
mov
dec
or
push
data16
outsb
push
subb
pop
or
xor
add
ja
inc
mov
jnp
cwtl
cmpb
add
into
inc
sub
std
push
pop
outsl
cmp
arpl
cwtl
cmpsb
xor
push
xchg
imul
decl
mov
daa
jg
pop
es
rolb
icebp
ss
leave
outsl
mov
xor
dec
or
ljmp
or
pop
ss
data16
cmp
rol
inc
add
inc
push
sbb
sar
jmp
pop
dec
dec
jle
lds
movl
cmp
cmpsl
mov
xor
jle
decl
scas
xorl
data16
lret
push
es
dec
roll
inc
jb
cld
jmp
add
je
cmp
cmp
insb
mov
lret
adc
cmp
add
addr16
mov
push
adc
icebp
push
clc
cwtl
cs
or
lcall
mov
push
inc
fdivs
jecxz
cli
mov
sbb
inc
test
or
push
mov
int3
or
incb
xor
push
inc
push
push
lcall
mov
in
mov
xor
mov
dec
fsubrl
cli
push
cmpsl
push
adc
shll
clc
or
cwtl
dec
test
pushl
jmp
mov
add
shlb
movsl
sbb
pop
pop
andb
les
sub
ljmp
in
inc
ret
mov
rcll
arpl
cmc
xor
xchg
sub
push
or
ljmp
int
fists
out
or
xor
fisttps
jge
push
adc
cli
decl
outsl
and
mov
push
xchg
push
repz
cmp
ljmp
incl
xchg
mov
cmpsl
add
jl
xchg
stos
addb
jg
jmp
repz
movl
pop
int
loopne
or
lods
inc
adc
neg
decb
fimull
jecxz
xor
stos
sbb
inc
out
jo
add
add
repz
cld
inc
lahf
repz
xchg
test
fistps
and
into
pusha
adc
decl
cmp
lods
mov
daa
dec
mov
jmp
add
fs
dec
cmp
and
cld
mov
mov
fldcw
stos
pop
ja
cmp
imul
and
xor
test
loope
adc
rorl
ret
or
loopne
test
sub
lret
adc
mov
jg
out
clc
cltd
mov
in
mov
pop
sahf
mov
lahf
ljmp
adc
jnp
and
inc
xchg
ret
aaa
testb
pop
lret
in
mov
lea
aaa
pop
mov
push
bound
fs
cli
xchg
lret
into
or
sahf
stc
xchg
cs
jp
shll
jmp
shl
dec
bound
pop
xor
cmp
pop
mov
adc
ss
pop
mov
dec
ljmp
jle
add
cmp
mov
push
add
mov
pushl
jae
or
dec
push
xorps
cmp
std
mov
mov
inc
dec
xor
jle
cli
pushl
imul
fnstcw
jmp
ljmp
lea
xor
cli
movsb
sbb
jecxz
sub
into
clc
mov
mov
call
into
nop
insl
repnz
fdivrs
pop
add
pusha
fstpt
aam
inc
jp
ljmp
dec
mov
rcr
push
stc
pop
jnp
and
cwtl
aad
add
std
in
cltd
or
push
mov
pop
in
jne
cwtl
xor
test
data16
pop
loope
cs
dec
insb
loope
pushl
and
xchg
xchg
sbb
cs
fwait
test
pop
adc
je
cwtl
enter
jne
push
lock
incl
dec
xchg
push
and
inc
cmp
dec
mov
insl
xchg
inc
xor
movsl
xor
xor
loope
push
push
pop
test
jno
rol
jmp
push
mov
rclb
jecxz
js
and
jne
fcomp
aad
fucomip
jmp
and
mov
add
repz
lock
jp
cltd
push
sbb
popa
insl
vcvtdq2ps
shlb
popf
ljmp
hlt
mov
cmp
inc
in
inc
test
nop
scas
sbb
pop
jbe
loope
into
decb
inc
cmc
xchg
add
jmp
mov
loope
jle
mov
arpl
xchg
sub
lret
push
mov
and
jmp
arpl
divb
lods
loope
sub
loop
sub
xrelease
outsl
out
xor
inc
ficomps
test
add
inc
insl
jle
inc
call
jmp
jnp
jge
xor
fcom
mov
xor
fiadds
das
repnz
mov
pushf
ds
pop
cmp
xchg
pop
mov
ljmp
outsl
or
nop
mov
adc
fwait
imul
xor
ljmp
cmp
jecxz
xchg
pop
jmp
lds
cmp
jmp
incl
iret
pop
jns
sbb
pop
push
inc
push
add
xlat
mov
pop
push
lcall
call
stc
dec
dec
mov
cmp
pcmpgtb
sub
decl
xchg
movsl
sbb
lock
test
dec
rcr
notl
out
shll
pop
notb
ds
ret
mov
incl
push
mov
push
cmc
mov
mov
movsl
outsb
lcall
sbb
cmp
jp
in
dec
movups
pop
out
and
lcall
inc
out
pop
push
sbb
fcoml
mov
idivb
mov
jmp
std
xchg
and
cmpsb
decl
cmpsl
mov
dec
xchg
ss
dec
les
jp
mov
hlt
stc
lock
cld
in
loope
int
cmc
mov
insb
ret
das
sbb
xchg
test
pushl
push
xchg
mov
inc
mov
xchg
fnsave
cmp
and
and
call
repnz
adc
cmp
test
js
pop
fists
mov
xlat
sub
dec
inc
mov
xlat
adc
and
sti
and
mov
jmp
div
pop
bound
dec
js
or
cmpsb
push
push
inc
fdivrl
test
dec
stc
dec
push
push
pop
sub
jmp
testb
mov
ds
fisttps
xchg
xor
and
and
jg
incl
leave
or
inc
pop
addr16
je
adc
rorb
aad
incl
dec
pop
in
stos
aad
or
movsl
dec
xchg
adc
mov
sbb
mov
xor
arpl
faddl
pop
divl
rclb
dec
inc
ret
jg
incl
sbb
mov
addl
mov
js
pop
mov
sbb
jp
mov
outsb
iret
les
adc
pop
stos
mov
call
loopne
sbb
lahf
xor
lock
jne
inc
test
fs
sbb
mov
std
dec
pop
roll
mov
jg
pop
sub
xchg
dec
xor
or
das
out
inc
cmp
decl
das
lahf
test
iret
lock
aam
sub
out
dec
push
out
inc
mov
call
jnp
scas
fs
xchg
ss
mov
mov
cmpsb
insb
das
gs
pop
test
call
std
ljmp
mov
inc
or
inc
jl
int3
pop
push
jno
popa
sti
mov
cmp
add
mov
fmul
mov
fidivs
in
fstpt
mov
pop
rcrb
ljmp
mov
push
shlb
les
xchg
fcomps
mov
incl
rorb
sub
mov
mov
sub
jns
mov
inc
mov
decl
push
jl
jmp
sub
mov
mov
push
cmp
push
outsb
adc
outsl
cli
decl
mov
ret
je
dec
push
loop
cmp
lahf
inc
cmp
push
jmp
sbb
js
sub
cmpsl
and
fstps
or
pushl
divb
dec
inc
jo
mov
inc
jmp
mov
xor
or
pushl
fs
mov
xchg
sub
mov
pop
inc
jb
adc
jge
cli
idiv
call
mov
subb
repnz
or
lcall
pushl
push
call
lahf
in
sti
mov
cmc
test
jbe
ret
fstp
std
hlt
cltd
mov
add
xor
or
popf
fldl
pop
test
xor
jbe
aad
dec
or
divb
je
je
call
cld
call
stc
jo
pop
dec
lods
stc
inc
sub
shl
xchg
mov
std
adc
mov
lcall
sbbl
fidivs
mov
out
imul
addr16
dec
and
movsl
mov
retw
cld
mov
ja
sarl
mov
daa
xchg
ljmp
pop
rorl
xchg
aaa
inc
cltd
xchg
gs
xchg
popa
push
in
push
xchg
mov
fnstcw
sbb
das
jp
loop
ds
sbbl
and
pop
mov
loope
fisubs
jae
sub
hlt
daa
add
sahf
fistpll
pop
iret
bound
ja
insl
mov
insl
movsb
jo
dec
push
sub
jmp
push
clc
dec
movsb
test
sbb
testl
xchg
xor
jmp
inc
pop
lret
jecxz
inc
jle
pushf
outsl
imul
cli
popa
addr16
sub
pushl
xor
adc
cmpl
xor
or
rorb
cwtl
pop
push
jnp
int
fdivrp
mov
jmp
cmpsb
fidivrl
dec
sbb
into
cmpsb
xchg
xor
add
daa
mov
dec
mov
inc
imul
es
aad
dec
push
mov
cmp
add
gs
outsb
fs
push
std
call
rcl
add
pusha
mov
adc
test
xor
mov
mov
pushl
xor
sub
push
push
lods
cmp
int
popa
or
pop
sti
decl
push
aad
out
fidivrl
in
sub
arpl
lock
lods
cmp
lods
out
cld
std
outsb
lret
aas
ss
in
xor
test
mov
mov
popa
scas
mov
jne
pushf
cli
call
xchg
cmp
pushf
inc
inc
inc
leave
out
push
inc
add
call
push
cmp
shlb
push
pushl
push
cmp
push
movsl
mov
loopne
pop
or
jae
push
test
mov
pushl
add
andb
cli
mov
out
into
mov
pop
rcrb
repz
jmp
mov
and
and
rorb
hlt
xchg
mov
out
daa
gs
fsubs
ljmp
or
push
iret
dec
sarl
lods
dec
push
cmp
movsl
aas
jbe
cmp
jmp
fiaddl
push
pop
push
fs
aas
jge
test
mov
mov
out
mov
incl
or
mov
pop
loopne
call
mov
out
aas
or
lret
lahf
rdmsr
jmp
pop
movsl
subl
xchg
pop
xchg
sbb
imul
clc
push
in
fidivl
ffreep
stos
pop
push
out
hlt
lds
fcmovnu
lock
divl
daa
dec
sbb
subb
push
addl
or
gs
inc
xchg
aam
mov
mov
add
pop
out
fs
aaa
aad
aad
subl
and
pushl
push
hlt
call
mov
jle
into
dec
int3
mov
mov
dec
and
nop
lret
call
mov
cmp
loope
mov
jge
in
adc
add
fs
out
jmp
cmc
mov
sub
fidivl
jmp
stc
cmpsb
add
adc
sub
xor
mov
pushl
add
pop
iret
std
mov
in
test
lds
xor
imul
lock
ds
stos
xor
ljmp
and
cmpb
jl
loope
dec
call
mov
sysenter
imul
repnz
mov
jmp
adcb
in
mov
sbbl
mov
test
mov
sbb
mov
cmp
fists
pop
fmuls
mov
pusha
cmp
jmp
and
and
push
mov
mov
pop
inc
push
dec
in
dec
jl
mov
incl
adc
pop
jae
std
pop
add
xchg
adc
jmp
or
incl
mov
and
inc
adc
sub
dec
mov
repz
clc
movsb
add
std
mov
lock
jmp
lret
lret
or
jo
cmp
test
sub
push
jp
xchg
idiv
jns
mov
gs
mulb
mov
mov
cmp
inc
ss
adc
pop
ljmp
cli
mov
push
jbe
jb
hlt
xor
jecxz
mov
mov
cmp
lods
mov
pop
xchg
mov
adc
mov
cmp
cmpsb
lods
cli
inc
into
cmp
roll
add
orb
loop
outsb
push
mov
pop
clc
jbe
scas
int3
das
xor
std
xor
out
mov
faddl
cmpl
jb
idiv
std
inc
inc
into
inc
inc
in
and
subb
inc
push
in
dec
cli
dec
and
jle
cmp
xor
call
outsl
shll
test
jp
enter
pop
fnstenv
arpl
popf
dec
jne
fildl
lods
pushf
pop
rcrb
jge
in
jge
js
dec
aad
sub
mov
pop
mov
adc
bound
add
pop
test
and
decl
outsb
or
icebp
out
xchg
rorl
inc
fcomps
push
aaa
sbb
sarb
clc
loopne
mov
pop
ret
xor
in
mov
xor
jmp
cli
inc
aad
or
inc
mov
jmp
jp
xor
sub
mov
mov
dec
or
mov
call
clc
sub
mov
cwtl
out
adc
push
jg
stc
jmp
lds
sub
pop
mov
jg
stc
xor
and
mov
mov
adc
mov
loopne
mov
jno
insl
into
jbe
jnp
and
sbb
imul
mov
inc
sbb
mov
mov
idivb
mov
and
xchg
pop
push
jae
jbe
jg
decb
test
mov
sub
fcomp
add
push
jne
cmc
xchg
push
fisttps
mov
das
aas
rorb
dec
out
mov
shll
dec
cmp
popa
dec
cmp
xchg
test
dec
xor
sbb
or
mov
dec
xor
push
push
scas
fcompl
mov
dec
push
jno
mov
adc
adc
sub
ret
sbb
stc
push
fdivrp
mov
add
adc
pop
pop
jmp
mov
xchg
shll
nop
mov
orb
addb
jge
enter
addr16
cmp
xchg
xor
mov
adc
push
imul
pop
pop
dec
testl
imul
mov
insl
fcomps
scas
jae
loopne
fisttpl
loop
xchg
inc
mov
or
jnp
adc
or
and
lcall
aad
in
push
xchg
mov
jl
inc
xchg
insb
pop
repz
stos
lods
mov
mov
and
lcall
out
jg
out
enter
int3
stc
aad
inc
dec
in
rorl
xchg
ds
pop
pop
stos
xchg
cld
incl
bound
and
movsl
adc
xor
lret
or
push
mov
mov
dec
adc
int
inc
scas
in
movsb
je
ss
popl
mov
inc
lret
in
xchg
mov
fwait
adc
popa
jge
insl
xor
pop
and
leave
and
cli
sub
sub
jg
cmp
mov
dec
popf
mov
inc
pop
outsb
push
sub
jg
mov
push
mov
push
mov
mov
lcall
sti
inc
xor
jbe
jp
ret
xor
adc
je
push
movsl
imul
in
call
sub
inc
mov
hlt
add
sti
xchg
or
inc
repnz
xor
pop
std
push
lahf
cmp
bound
scas
xchg
test
mov
fwait
lods
fs
push
mov
incb
lea
jns
in
mov
adc
sub
les
call
loop
daa
or
idivb
jne
inc
mov
shll
in
lret
call
adc
mov
fldl2e
call
add
xor
lret
xor
jmp
adc
push
mov
dec
cwtl
sbb
clc
sbb
icebp
clc
mov
and
adc
sub
ljmp
add
cld
xor
imul
andb
mov
jl
push
adc
mov
or
push
or
or
sar
adc
mov
and
jle
incl
pop
call
dec
fnstcw
push
sbb
movsl
das
repnz
incl
adc
push
hlt
pop
mov
scas
aaa
jle
push
loope
lahf
stos
iret
cs
ss
imul
jae
scas
pop
insl
push
scas
es
mov
push
xchg
inc
movsb
mov
inc
cld
fsubrl
fld
adc
js
push
jno
mov
sbb
mov
dec
mov
cmp
insl
add
pusha
arpl
and
repz
jmp
pushf
cmp
jg
stos
jnp
jnp
stos
testb
rcr
sbb
mov
ja
fistpl
mov
dec
mov
aaa
js
shll
push
push
cmp
std
call
jle
testb
imul
test
jg
jo
and
inc
stos
fimuls
sbb
inc
ss
xor
divl
cmpsb
clc
clc
jns
xor
repz
mov
dec
sbb
jmp
dec
pop
es
sbbb
adc
xor
mov
pushl
xchg
aas
xchg
adc
xor
lock
inc
inc
cmp
add
and
fists
lods
insb
aad
aad
mov
les
subb
lods
push
fbstp
lods
pop
stc
sub
and
scas
sbb
adcb
decl
xor
adc
stos
hlt
call
lods
mov
sbb
jae
cld
lcall
inc
aaa
inc
cmp
push
out
adc
jmp
jmp
andl
call
fisubs
push
sbb
xchg
sbb
mov
aam
imul
call
in
cs
fisttpll
lods
aad
push
je
cmc
xor
sti
jge
cmp
cli
fstpl
js
out
call
adc
jge
shlb
dec
and
jmp
jne
scas
out
movsb
inc
sub
ret
ffree
aad
ja
and
and
iret
add
les
or
jmp
dec
loopne
out
lea
stc
out
lock
mov
jbe
xor
hlt
cwtl
jg
ljmp
jmp
mov
dec
leave
loope
sub
dec
stos
mov
cmp
cmp
es
call
jecxz
push
or
sahf
ret
xor
es
sbb
and
xchg
es
fcomip
stc
bound
pushf
fdivs
fidivrl
testb
inc
mov
call
cld
mov
stos
mov
cmp
aam
mov
sbb
out
jle
inc
push
test
jmp
out
mov
dec
inc
daa
add
xchg
xchg
and
pop
sub
jl
jae
stos
pop
ljmp
sar
emms
not
sbb
popa
test
mov
adc
cmp
inc
data16
insl
bound
jmp
insb
je
call
loopne
jg
sti
call
jne
lret
xlat
sbb
lods
adc
push
inc
push
fs
mov
mov
cmc
and
mov
xor
int3
sub
lods
out
cmp
icebp
lock
int
pop
push
leave
xor
fbld
xor
int
rorl
mov
add
mov
sbb
jb
inc
fwait
pop
ljmp
xchg
xor
lods
sti
sarl
shrb
enter
inc
mov
test
popf
ret
fcmovbe
pop
jecxz
sbb
cmp
xchg
out
and
int3
jae
inc
push
loopne
adc
out
jl
mov
xor
push
and
adc
xchg
sub
pushl
jne
insb
aas
cltd
leave
cltd
or
xchg
stos
jp
int
mov
out
gs
lods
sbb
in
jmp
or
mov
hlt
add
lret
ds
mov
dec
es
shll
call
daa
jnp
insb
and
lahf
out
xor
ret
sub
int
imul
and
test
in
xchg
fsubl
cltd
sbb
pop
loope
inc
mov
hlt
pop
add
repnz
jno
ljmp
pop
xchg
aad
and
mov
cmp
les
sub
out
popf
scas
fdivs
lcall
mov
outsl
dec
add
addb
mov
adc
repnz
jmp
jge
lret
cmp
dec
inc
cmp
ja
sar
dec
mov
cltd
addr16
dec
jo
decl
push
loop
scas
sar
cs
jb
ds
das
std
lcall
jge
sbb
popa
repnz
clc
jmp
icebp
mov
mov
add
push
mov
cld
adc
aam
jle
sbb
ds
push
pusha
adc
mov
out
add
sbb
sti
mov
into
outsl
push
and
push
xchg
pop
mov
pop
jb
xchg
mov
jne
mov
popa
pusha
popa
mov
ja
divl
outsl
adc
adc
jo
sbb
pop
cs
out
sbb
adc
shrl
xor
jno
add
dec
fwait
adc
or
fwait
jbe
jmp
and
in
fldt
mov
push
sub
in
outsl
cmpl
scas
sub
mov
outsl
inc
mov
add
jle
and
mov
sub
or
testb
sub
jbe
or
pop
mov
jbe
mov
mov
and
push
fcoml
icebp
adcb
xchg
in
and
push
pop
mov
jno
adc
repnz
sbb
fs
sub
xor
jno
sbb
and
pop
inc
addb
mov
movsl
push
jge
outsl
cmp
jae
cmp
adcb
enter
push
xor
mov
or
pop
pop
fwait
das
imul
sbb
movsl
mov
inc
cmp
and
adc
pusha
aad
out
movsl
adc
insl
repnz
adcl
popf
jecxz
xor
mov
mov
lea
sub
mov
push
inc
xor
cmp
mov
mov
xlat
outsb
pop
push
movsl
imul
inc
mov
mov
enter
lds
enter
sbb
addl
sbb
push
lods
inc
jmp
add
cmp
aad
scas
lea
pusha
lcall
xchg
jo
xchg
dec
lret
leave
xchg
or
das
xchg
lahf
call
inc
mov
mov
dec
dec
dec
sub
call
sbb
add
dec
push
popa
ret
ret
ljmp
fcmovu
jmp
ror
pop
xchg
and
inc
push
lret
and
testl
mov
and
inc
mov
ljmp
je
or
popf
movsb
outsb
mov
aas
call
cmp
pushl
paddq
mov
lret
rolb
fstpt
pop
iret
pop
sub
push
adc
ljmp
mov
jae
sarb
mov
fstp
cli
sub
frstor
lcall
or
jo
sub
ja
push
cmc
fidivrl
push
cli
popa
dec
push
jmp
pop
icebp
jne
inc
ljmp
test
push
popa
rcll
jp
loope
mov
adc
mov
repz
sahf
push
push
daa
pop
xor
lret
and
call
scas
push
rclb
enter
xor
xor
movsl
insl
mov
pop
aam
decl
mov
pop
popa
add
and
push
leave
rorb
clc
imul
mov
sub
mov
inc
jge
ret
pop
es
cltd
dec
out
cltd
std
xchg
inc
sbb
call
jno
xchg
jno
adc
pop
dec
sub
lds
push
adcb
inc
fldl
or
call
mov
in
sbb
cld
inc
jb
ds
inc
clc
lock
inc
clc
jge
int
jno
in
incl
mov
fidivs
imul
loope
mov
jmp
inc
mov
push
lods
mov
add
arpl
mov
jo
or
rorb
mov
inc
inc
inc
cmp
sbb
push
in
pop
int3
adc
lea
pop
imulb
mov
pop
bound
test
decl
adc
mov
add
cmpsb
sarb
jmp
inc
arpl
lcall
or
pop
push
push
test
gs
shlb
pop
sbb
jg
or
aad
mov
jae
inc
lahf
pop
push
shrl
lock
fsubs
adc
dec
or
decl
push
pop
xor
push
ss
sub
push
test
ret
scas
fstpl
adc
lds
hlt
mov
and
mov
ja
or
imul
pushl
sbb
pop
sub
push
jbe
push
popa
mov
adc
mov
decl
fcoml
in
enter
stos
insl
xchg
jl
aaa
inc
and
sti
mov
scas
push
andl
inc
mov
inc
icebp
xchg
cwtl
adc
xor
aas
jne
inc
mov
pop
or
fcompl
stos
lods
xchg
arpl
stc
sahf
cwtl
fmull
dec
out
lods
pushf
movsl
mov
incl
mov
sbb
fucomp
inc
jp
add
insl
mov
stos
dec
cmpsb
dec
mov
incl
pop
outsb
outsb
int
mov
les
xor
and
mov
jo
addr16
mov
pop
xor
jmp
pop
inc
subl
jp
pushl
sahf
popa
and
out
cmovnp
popa
adc
mov
mov
push
cld
leave
jmp
jg
mov
mov
int3
js
clc
orb
in
push
in
repz
das
jg
add
push
xchg
shll
sbb
pushf
pusha
sbb
mov
ret
jae
fstps
fidivl
inc
stos
cmpsb
ljmp
jmp
push
mov
push
lods
jo
ret
inc
xchg
jo
dec
sti
and
and
xor
decl
lret
cmp
mov
outsb
sbb
push
sub
xchg
cmp
cmp
icebp
movsb
pop
xchg
jne
mov
imul
mov
sahf
pop
stc
jmp
inc
lods
mov
sbb
stos
or
adc
xchg
mov
mov
shll
sti
test
fisttpl
jns
aad
ret
loope
or
dec
call
aaa
sti
pop
xchg
mov
mov
popa
daa
fs
adc
sbb
xchg
mov
mull
cmp
inc
mov
xor
pusha
inc
fdivrs
incl
nop
movsl
push
sahf
out
add
and
push
push
mov
std
push
pop
pop
pop
xor
flds
cld
xchg
push
aas
cmc
or
fs
inc
fmulp
add
shrl
clc
jb
jmp
std
adc
incl
xlat
shl
cli
xchg
or
insl
add
gs
cltd
pop
insb
daa
mov
xor
mov
incl
in
inc
xchg
cmp
in
push
add
clc
cmp
jnp
mov
mov
cmp
add
ljmp
bound
icebp
push
xor
test
inc
push
enter
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
mov
out
imul
push
cmpsb
mov
pop
xor
je
icebp
xor
adc
aaa
or
jge
data16
jmp
sti
jg
or
nop
fs
js
loop
lock
mov
ficompl
call
cmp
movq
sbb
jp
inc
inc
inc
stos
cmp
sbb
jmp
loop
stos
data16
repnz
add
dec
out
loopne
cmp
jbe
fnstenv
xchg
jmp
inc
dec
inc
out
xchg
mov
xchg
pop
lods
push
pop
aaa
ret
add
cmp
stos
lds
mov
ljmp
sbb
inc
cltd
mov
push
mov
enter
pop
sub
sub
loope
jg
decl
stos
add
out
adc
repz
jo
mov
sub
arpl
cmpsb
add
lcall
mov
inc
and
adc
lock
imul
pop
mov
sub
out
add
xor
enter
sbb
push
in
mov
scas
and
sbb
ljmp
mov
aad
das
push
xor
add
mov
ljmp
jge
mov
out
out
ret
cs
pushf
outsl
sub
mov
jns
rcrb
pushl
sub
push
adc
cmp
lret
adc
rorb
jp
pop
xchg
sti
adc
lcall
sub
stos
mov
nop
push
xor
cmp
mov
and
ret
sbbl
jmp
xor
shrb
mov
fs
xchg
into
in
jge
pop
mov
mov
mov
push
adc
std
fnstcw
jmp
mov
lea
ljmp
sub
jnp
out
pop
xor
inc
out
jnp
and
mov
clc
addr16
inc
lcall
pop
jmp
inc
adc
add
pop
jns
mov
out
sbb
cs
lods
xor
jmp
data16
cmpsb
pop
xchg
cmpsl
popa
lret
push
push
jo
repnz
or
out
in
dec
loop
aas
push
ja
fcompl
dec
ficomps
cmpsl
xor
fwait
add
jmp
sub
mov
int
je
pop
sti
jbe
xorb
and
mov
push
push
sub
pop
mov
mov
push
push
sbb
cmp
sub
xchg
xchg
add
sti
dec
inc
xchg
xor
data16
stc
in
dec
outsb
sbb
out
incl
repz
out
dec
dec
xchg
mov
daa
or
ret
nop
std
dec
jne
mov
incl
sbb
push
pop
push
inc
repz
sub
lods
jae
mov
mov
pop
divps
xchg
mov
popa
jp
cmp
sub
jmp
sbb
iret
sbb
fistps
aam
fsts
pop
orl
mov
incl
jns
js
cld
test
xchg
fldt
movsb
shrl
mov
xchg
jmp
cmc
cmpsb
cmp
pusha
jns
inc
in
call
mov
mov
push
xor
into
in
pushl
cmpsl
mov
mov
subl
sahf
scas
in
pop
lock
incl
cld
pop
adcb
jge
or
push
mov
fwait
rcrb
pushl
push
sbb
lock
dec
xor
push
movsb
mov
movsl
pushl
cld
and
cltd
fistps
aad
mov
mov
mov
cmpsb
mov
push
lahf
int
das
clc
dec
call
pusha
subl
mov
dec
outsb
xor
xor
test
sbb
dec
enter
call
dec
jecxz,pn
mov
adcl
jmp
add
sub
rcrl
insl
pushf
fmul
aas
jne
loop
pop
pop
mov
stos
or
nop
cld
sub
incl
xchg
dec
push
jmp
in
daa
out
es
mov
jge
filds
ds
cmp
mov
pushl
or
gs
cmp
mov
enter
das
shl
cmp
in
mov
fcom
inc
mov
hlt
pop
or
jno
pop
fnstcw
push
sbbl
dec
incl
pop
pop
orl
xchg
vorps
cmpsb
insl
push
in
xor
jg
pushl
cli
test
mov
andb
jno
jbe
push
popf
arpl
call
int
fs
or
mulb
and
pop
cmp
cltd
and
add
pop
insl
bound
aaa
mov
jne
sbb
xchg
jb
mov
push
aaa
in
lahf
inc
and
stos
and
das
clc
lcall
add
mov
jne
pushf
pop
jl
data16
dec
jb
adc
jmp
jo
mov
clc
xchg
jo
mov
out
lds
cmpsb
mov
fadds
ljmp
xchg
lea
lahf
movsb
out
movsb
jne
data16
inc
scas
jbe
or
pop
sub
cwtl
decl
push
fsubl
je
push
in
movsb
inc
imul
cmp
outsb
jmp
cltd
and
ret
xlat
push
and
and
mov
add
into
xchg
neg
lock
lock
cwtl
and
arpl
inc
loop
mov
cmp
and
cmp
and
sub
sahf
out
mov
pop
push
sbb
and
ja
cmp
push
lret
sbb
adc
pop
push
sub
fs
pusha
decl
dec
shl
xor
dec
in
ret
fidivrs
and
push
xchg
xchg
or
lahf
add
mov
jmp
push
loopne
in
imul
clc
dec
and
jb
jnp
inc
xlat
mov
push
inc
jg
jmp
std
jmp
cltd
sub
subl
shl
lcall
fwait
idiv
pushl
test
in
subl
cmp
repnz
push
cmp
mov
pop
add
call
shl
cmp
sub
in
mov
and
cld
and
in
testb
mov
dec
or
push
data16
outsb
push
subb
pop
or
xor
add
sbb
sbb
cwtl
cmpb
add
into
inc
sub
lret
pop
outsl
cmp
arpl
cwtl
cmpsb
xor
push
xchg
imul
orb
shlb
add
rolb
icebp
ss
leave
outsl
mov
xor
dec
decl
pop
mov
or
cs
ss
data16
cmp
rol
inc
add
inc
push
sbb
call
movb
dec
jle
lds
movl
cmp
cmpsl
mov
xor
jle
scas
xorl
data16
lret
push
es
dec
roll
inc
jb
incl
aam
cmp
cmp
insb
mov
lret
adc
sar
add
addr16
mov
push
adc
icebp
push
clc
cwtl
cs
or
ljmp
movsl
sub
fdivs
jecxz
cli
mov
sbb
mov
or
fcmovnbe
test
push
pop
xchg
add
xor
push
inc
push
call
push
int
orb
in
mov
xor
mov
dec
aad
push
std
fmul
cli
push
cmpsl
push
adc
shll
clc
or
cwtl
dec
test
jg
add
nop
in
inc
jmp
mov
add
shlb
movsl
sbb
pop
pop
andb
les
sub
decl
in
inc
ret
mov
rcll
arpl
cmc
xor
xchg
sub
push
decl
int
fists
out
or
xor
fisttps
jge
push
adc
cli
mov
adc
repnz
and
mov
push
xchg
push
repz
cmp
ljmp
call
mov
mov
mov
cmpsl
add
jl
xchg
stos
addb
mov
repz
movl
pop
int
loopne
or
lods
inc
jg
outsl
call
mov
int3
les
fimull
jecxz
xor
stos
sbb
inc
out
jo
add
cld
add
aaa
mov
lahf
repz
xchg
test
fistps
and
into
pusha
jg
call
lock
cmp
lods
mov
daa
dec
mov
jmp
add
ljmp
fs
dec
cmp
and
cld
mov
mov
fldcw
stos
pop
ja
pop
cmp
cmp
imul
and
xor
test
loope
adc
sarl
ret
or
loopne
test
sub
lret
adc
mov
add
sub
jb
push
mov
pop
sahf
mov
lahf
ljmp
adc
jnp
and
inc
xchg
ret
aaa
testb
pop
lret
in
mov
lea
aaa
pop
mov
loope
cli
xchg
lret
into
or
sahf
stc
xchg
cs
jp
shll
repnz
shl
dec
bound
pop
xor
cmp
pop
mov
adc
ss
pop
mov
jg
decl
stc
in
add
inc
push
xor
cmp
mov
push
add
mov
pushl
or
dec
push
xorps
cmp
std
mov
mov
inc
dec
xor
jle
call
add
jns
jmp
ljmp
lea
xor
cli
movsb
sbb
jecxz
sub
into
clc
mov
mov
ljmp
jle
nop
insl
repnz
fdivrs
pop
add
pusha
fstpt
aam
inc
jp
dec
mov
rcr
push
stc
pop
jnp
and
cwtl
aad
add
std
in
cltd
or
push
mov
or
jne
cwtl
xor
test
data16
pop
loope
cs
dec
insb
cld
jmp
jno
and
xchg
xchg
sbb
cs
fwait
test
pop
adc
je
cwtl
enter
jne
push
lock
incl
rcrw
push
lods
dec
adc
cmp
dec
mov
insl
call
mov
mov
mov
loope
push
push
pop
test
jno
rol
jmp
mov
push
clc
int
sbb
and
jne
fcomp
aad
fucomip
jmp
and
mov
decl
in
lock
jp
cltd
push
sbb
popa
insl
vcvtdq2ps
call
sub
xchg
xlat
hlt
mov
cmp
push
inc
inc
test
nop
scas
sbb
pop
jbe
loope
into
decb
inc
cmc
xchg
add
cmp
mov
loope
jle
mov
arpl
xchg
sub
lret
push
mov
and
dec
fs
sbb
xor
divb
lods
loope
sub
loop
sub
xrelease
mov
pushl
and
pop
jl
push
or
loope
insl
jle
inc
call
jmp
data16
jge
xor
fcom
mov
xor
fiadds
das
repnz
mov
pushf
ds
pop
cmp
xchg
pop
mov
ljmp
push
sub
nop
mov
adc
fwait
imul
xor
pushl
lea
aam
cmp
jecxz
xchg
pop
jmp
lds
cmp
jmp
lcall
jne
pop
jns
sbb
pop
push
inc
push
add
xlat
mov
pop
push
scas
clc
jmp
adc
dec
dec
mov
cmp
pcmpgtb
sub
decl
dec
sub
loop
test
dec
rcr
notl
out
shll
pop
notb
ds
ret
mov
mov
outsb
jecxz
fisubrl
mov
dec
mov
push
cmc
mov
mov
movsl
ljmp
sbb
cmp
jp
in
dec
movups
pop
out
and
lcall
inc
out
pop
push
sbb
fcoml
mov
idivb
mov
jmp
std
xchg
and
jmp
or
cmpsl
mov
dec
xchg
ss
dec
les
jp
mov
hlt
stc
lock
cld
in
loope
int
cli
pop
stos
adc
mov
ret
das
sbb
xchg
test
mov
pushf
add
fists
mov
inc
mov
xchg
fnsave
cmp
and
and
pushl
repnz
adc
cmp
test
js
pop
fists
incl
int3
dec
inc
mov
xlat
adc
and
sti
and
mov
test
div
pop
bound
dec
js
or
cmpsb
push
push
inc
fdivrl
test
dec
stc
dec
push
push
pop
ljmp
testb
mov
ds
fisttps
xchg
xor
and
and
jecxz
pushl
subb
sbb
addr16
je
adc
rorb
call
addl
xchg
in
stos
aad
or
movsl
dec
xchg
adc
mov
sbb
fs
xor
arpl
faddl
pop
divl
rclb
dec
inc
ret
jg
into
fs
sbb
mov
addl
mov
js
pop
mov
in
ljmp
aam
int
push
outsb
iret
les
adc
pop
stos
mov
enter
adc
loopne
sbb
lahf
xor
lock
mov
les
sbb
mov
std
dec
pop
roll
mov
xor
stos
bound
aam
pop
or
das
out
inc
cmp
incl
dec
mov
mov
aam
sub
out
dec
push
out
inc
mov
pushl
push
push
jnp
scas
fs
xchg
ss
mov
mov
cmpsb
insb
das
gs
pop
test
call
push
insl
std
ljmp
mov
inc
or
inc
jl
int3
pop
push
jno
popa
sti
mov
mov
mov
fmul
mov
fidivs
in
fstpt
mov
pop
rcrb
call
push
test
mov
push
shlb
les
xchg
fcomps
mov
jl
cltd
in
dec
lds
hlt
mov
mov
sub
jns
mov
inc
mov
out
sqrtps
decb
sub
mov
mov
push
cmp
push
outsb
adc
std
dec
push
mov
ret
je
dec
push
loop
cmp
lahf
inc
cmp
push
jg
incl
js
sub
cmpsl
and
fstps
or
ljmp
mov
mov
ret
and
jo
mov
inc
jmp
mov
xor
decl
mov
pop
mov
fs
mov
xchg
sub
mov
pop
inc
jb
adc
jge
cli
push
call
mov
subb
repnz
or
lcall
incl
sbb
aas
ficomps
or
cmc
test
jbe
ret
fstp
std
hlt
cltd
mov
pop
clc
xor
or
popf
fldl
pop
test
xor
jbe
aad
dec
or
divb
je
je
or
cmp
stc
jo
pop
dec
lods
stc
inc
sub
shl
xchg
mov
std
adc
decl
or
fidivs
mov
out
imul
addr16
aas
int3
and
movsl
mov
retw
cld
mov
ja
sarl
mov
daa
call
mov
rorl
xchg
aaa
inc
cltd
xchg
gs
xchg
popa
push
in
push
xchg
mov
fnstcw
call
mov
ds
sbbl
and
pop
mov
decl
fisubs
jae
sub
hlt
daa
add
ljmp
sahf
mov
bound
ja
insl
mov
insl
movsb
jo
dec
push
ljmp
movsl
test
dec
movsb
test
sbb
testl
xchg
xor
scas
and
lret
jecxz
inc
jle
pushf
outsl
imul
cli
popa
addr16
sub
decl
xor
xor
adc
cmpl
xor
or
rorb
cwtl
pop
push
jnp
int
incl
fsubp
cmpsb
fidivrl
dec
sbb
into
cmpsb
xchg
xor
add
daa
mov
decl
insl
mov
inc
push
mov
mov
movsl
cmp
sub
outsb
fs
call
addl
add
pusha
mov
adc
test
xor
mov
mov
lcall
loope
mov
push
push
lods
cmp
int
popa
or
pop
sti
incl
stos
fidivrl
in
sub
arpl
lock
lods
cmp
lods
out
cld
std
outsb
lret
aas
ss
in
xor
test
mov
mov
popa
scas
mov
add
pushl
xchg
cmp
pushf
inc
inc
inc
leave
out
push
inc
add
decl
cmp
shlb
push
in
mov
jno
ret
push
cmp
push
movsl
mov
loopne
pop
or
jae
push
test
mov
jg
jbe
sub
repz
cli
mov
out
into
mov
pop
rcrb
push
fs
mulb
scas
fsubl
testl
xchg
mov
out
daa
gs
fsubs
lret
stos
jb
xor
addr16
push
iret
dec
sarl
lods
dec
push
cmp
movsl
aas
jbe
cmp
fiaddl
push
pop
push
fs
aas
jge
test
mov
mov
out
mov
ljmp
add
pop
loopne
call
mov
out
aas
or
lret
lahf
ud0
pushl
pusha
pop
pop
movsl
subl
xchg
pop
xchg
sbb
imul
jmp
xor
stos
pop
push
out
hlt
lds
fcmovnu
lock
divl
daa
dec
sbb
subb
push
addl
or
gs
inc
xchg
aam
mov
xchg
pop
out
fs
aaa
aad
aad
subl
and
lcall
push
hlt
call
mov
jle
into
dec
int3
mov
mov
dec
and
nop
lret
pushl
mov
cmp
loope
mov
jge
in
adc
add
fs
out
mov
cmc
mov
sub
fidivl
jmp
stc
cmpsb
add
adc
sub
xor
mov
jmp
inc
insl
out
add
pop
iret
std
mov
in
test
lds
xor
imul
lock
ds
stos
xor
ljmp
and
cmpb
jl
loope
decl
lods
xchg
mov
sysenter
imul
repnz
mov
jmp
adcb
in
mov
sbbl
mov
test
mov
sbb
mov
cmp
fists
pop
fmuls
mov
push
mov
into
push
mov
mov
pop
inc
push
dec
in
dec
jl
mov
jge
outsl
adc
pop
jae
std
pop
add
xchg
adc
jmp
or
call
jo
adc
sub
dec
mov
repz
clc
movsb
add
std
mov
call
movsl
or
jo
cmp
test
sub
push
jp
sti
call
jge
xchg
gs
mulb
mov
mov
cmp
inc
ss
adc
pop
call
jge
es
cmp
xorb
xor
jecxz
mov
mov
bound
lods
mov
pop
xchg
mov
adc
mov
cmp
cmpsb
lods
cli
inc
into
cmp
cmp
call
pop
add
orb
loop
outsb
push
mov
lcall
jbe
scas
int3
das
xor
std
xor
out
mov
faddl
cmpl
jb
push
std
inc
inc
into
inc
inc
in
and
subb
inc
push
in
dec
cli
dec
and
ljmp
jle
mov
enter
divb
dec
lahf
call
outsl
shll
test
pushl
jp
enter
pop
fnstenv
arpl
popf
dec
jne
fildl
lods
pushf
pop
rcrb
jge
call
jge
js
dec
aad
sub
mov
pop
mov
adc
bound
add
pop
test
and
js
iret
outsb
or
icebp
out
xchg
rorl
inc
fcomps
push
aaa
sbb
sarb
clc
loopne
fildll
xor
in
mov
xor
jmp
cli
inc
aad
or
inc
mov
push
daa
jp
xor
sub
mov
mov
dec
or
mov
call
clc
sub
mov
cwtl
out
adc
push
mov
lds
call
or
pop
mov
sti
cld
xchg
dec
mov
mov
mov
and
ret
mov
jno
insl
addr16
imul
addr16
pop
inc
sbb
mov
mov
sti
fcomip
fstl
scas
sub
imul
jae
cmp
test
mov
sub
push
jne
cmc
xchg
push
fisttps
pop
xor
aas
rorb
dec
out
mov
loopne
jl
cmp
popa
dec
lahf
sbb
test
dec
xor
sbb
or
mov
dec
xor
push
push
mov
orl
jno
mov
adc
jmp
mov
nop
out
loopne
mov
add
adc
pop
notb
inc
cmp
add
js
lahf
nop
mov
sub
add
andb
jge
enter
jbe
adcb
xor
mov
adc
cmp
jbe
sub
pop
cli
lock
sub
shrb
ret
dec
push
addr16
fwait
insl
icebp
adc
jae
loopne
fisttpl
jg
xchg
inc
mov
or
jnp
adc
or
and
aad
in
push
call
inc
xchg
insb
pop
repz
stos
lods
mov
mov
and
xchg
out
jg
out
decl
push
and
int3
stc
aad
inc
dec
in
rorl
xchg
ds
pop
pop
stos
xchg
cld
push
bound
and
dec
movsl
adc
xor
lret
or
push
mov
mov
dec
adc
in
incl
xchg
and
popl
mov
inc
lret
in
xchg
mov
fwait
adc
call
popa
jge
insl
xor
pop
and
leave
and
cli
sub
sub
xlat
mov
lcall
test
mov
inc
pop
outsb
push
sub
cli
fists
sbb
jnp
mov
push
mov
mov
mov
jb
sti
incl
test
jbe
jp
ret
xor
adc
je
push
movsl
imul
hlt
call
sub
inc
mov
hlt
add
sti
xchg
or
inc
repnz
xor
pop
cmc
lahf
cmp
bound
lcall
xchg
test
mov
fwait
lods
fs
push
shrb
incl
lea
jns
in
mov
adc
sub
les
daa
or
pushl
mov
jne
inc
mov
shll
in
lret
push
lahf
inc
inc
call
mov
fldl2e
call
add
xor
lret
xor
movsb
xchg
inc
clc
loope
call
rcll
jae
cwtl
sbb
clc
sbb
icebp
clc
mov
and
adc
sub
add
cld
xor
ljmp
negb
push
andb
mov
jl
push
adc
pop
or
sar
scas
push
or
or
sar
adc
mov
and
jle
jg
cmpsl
lret
pop
call
dec
fnstcw
push
sbb
movsl
das
repnz
add
adc
push
push
pop
mov
scas
aaa
jle
push
loope
lahf
stos
iret
cs
ss
imul
insl
call
scas
es
mov
push
xchg
inc
movsb
mov
inc
cld
fsubrl
fld
adc
push
jno
mov
lcall
sbb
mov
dec
mov
cmp
insl
add
pusha
arpl
and
repz
jmp
stos
jnp
jnp
stos
testb
rcr
sbb
xchg
ja
fistpl
test
nop
dec
mov
aaa
js
shll
push
push
adcl
repz
mov
outsl
ljmp
pop
test
jg
jo
and
inc
stos
fimuls
push
inc
ss
xor
divl
cmpsb
clc
clc
jns
xor
repz
mov
dec
bound
pop
incl
xchg
inc
add
dec
xor
mov
mov
mov
decl
aas
xchg
adc
xor
lock
inc
inc
cmp
add
and
fists
aad
mov
xchg
and
mov
subb
lods
push
fbstp
pop
mov
incl
scas
sbb
adcb
fisubrs
mov
movsb
bound
xchg
push
fnstsw
pop
add
inc
add
inc
cmp
push
out
adc
jmp
jmp
andl
mov
sbb
mov
aam
imul
cs
fisttpll
push
int3
xorb
insb
push
je
cmc
xor
sti
jge
cmp
cli
fstpl
js
out
call
call
add
jge
shlb
dec
and
jmp
jne
scas
out
movsb
lds
mov
jmp
ret
ffree
aad
ja
and
and
iret
add
les
or
loopne
out
jnp
pop
stc
out
lock
mov
jbe
xor
hlt
cwtl
jg
ljmp
pmulhuw
es
ljmp
dec
leave
loope
sub
dec
stos
mov
cmp
cmp
es
je
xchg
dec
push
or
sahf
ret
xor
es
sbb
and
xchg
es
bound
pushf
jg
ja
fdivs
fidivrl
testb
inc
mov
fsubrl
jmp
aam
mov
sbb
out
jle
inc
push
test
out
mov
ljmp
add
xchg
xchg
and
pop
sub
jl
jae
stos
pop
orl
decl
lock
lock
test
mov
adc
addr16
fistps
jmp
nop
insl
bound
jmp
insb
je
call
loopne
sti
call
cmp
lret
xlat
sbb
lods
adc
push
inc
push
fs
mov
mov
addr16
jmp
pop
xor
int3
sub
lods
out
cmp
icebp
lock
int
pop
push
leave
xor
fs
pop
xor
incl
int
rorl
mov
add
mov
sbb
jb
inc
fwait
pop
xorl
fwait
dec
ljmp
lods
sti
sarl
shrb
enter
inc
sti
test
popf
ret
fcmovbe
pop
jecxz
sbb
cmp
xchg
out
and
int3
jae
adc
out
jl
push
add
and
xor
add
and
test
call
xchg
xor
insb
aas
cltd
leave
lcall
lret
stos
jp
int
mov
out
gs
lods
sbb
and
cli
mov
in
push
add
lret
ds
mov
dec
es
shll
in
xchg
frstor
jnp
jmp
and
lahf
out
xor
ret
sub
int
imul
and
aas
xchg
fsubl
lcall
loope
inc
mov
hlt
pop
add
repnz
jno
scas
cs
mov
xchg
aad
call
and
mov
cmp
les
sub
out
popf
scas
fdivs
mov
outsl
dec
add
incl
inc
int
mov
adc
repnz
jmp
jge
lret
cmp
dec
inc
cmp
ja
sar
dec
mov
cltd
addr16
dec
jo
dec
cmp
loop
scas
sar
incl
cwtl
jb
ds
das
std
lcall
jge
sbb
popa
repnz
icebp
mov
jg
clc
pop
mov
add
add
push
mov
nopl
xor
push
pusha
out
add
mov
add
push
mov
test
iret
sub
and
push
leave
and
leave
and
jg
xchg
pop
jb
imul
frstor
or
push
xchg
lret
ja
mull
sub
jle
sbb
sbb
cs
xor
das
xor
orl
and
jbe
addr16
inc
or
fistl
fwait
xor
outsl
fnsetpm(287
aaa
in
bound
cmp
mov
mov
or
or
add
outsl
inc
mov
pusha
sbb
or
testb
pop
and
imulb
pop
mov
fbstp
or
mov
xchg
outsl
insl
sti
push
cmp
mov
adc
in
and
loopne
pop
dec
jno
adc
pop
mov
push
xor
sub
jbe
ss
sbb
lods
jns
cmp
inc
cltd
mov
pop
push
jge
jae
outsl
cmp
cmp
dec
roll
xchg
mov
push
xor
pop
rorl
adc
push
push
pop
imul
add
ss
inc
cmp
and
cmp
adc
repnz
aad
or
insl
ja
jno
stos
adcl
imul
sub
lea
lcall
shll
xor
inc
daa
mov
and
or
xlat
outsb
pop
push
pop
movsl
imul
inc
mov
jmp
enter
jnp
jmp
inc
sbb
test
sub
ret
dec
jae
stos
fiadds
and
xor
add
cmp
add
lcall
xchg
out
xchg
imul
mov
xchg
lahf
mov
call
inc
mov
pop
loope
mov
dec
dec
dec
sub
call
and
lcall
mov
push
popa
ret
ret
stos
inc
sbb
fcmovu
jmp
dec
ror
pop
xchg
and
inc
push
lret
and
testl
mov
and
lds
dec
ljmp
add
leave
xchg
loope
movsb
outsb
mov
aas
call
cmp
mov
mov
pushl
xchg
fstpt
pop
iret
pop
sub
push
adc
mov
decl
cli
sarb
mov
fstp
cli
sub
frstor
xlat
adc
jo
in
sub
ja
push
cmc
fidivrl
push
cli
popa
dec
push
jmp
pop
icebp
pushl
jne
inc
ljmp
test
push
popa
rcll
jp
loope
mov
lcall
adc
mov
repz
sahf
push
push
daa
pop
xor
lret
and
scas
push
sar
call
sti
enter
xor
xor
movsl
insl
mov
pop
aam
mov
aam
mov
lcall
mov
out
mov
push
leave
rorb
clc
imul
mov
cmp
je
mov
pop
cltd
dec
out
cltd
std
xchg
inc
sbb
push
divb
xchg
jno
adc
push
pop
dec
sub
lds
push
adcb
inc
fldl
or
pop
les
sbb
sbb
iret
jo
jl
inc
jb
ds
inc
clc
lock
inc
clc
jge
int
jno
test
leave
xchg
mov
jns
in
fidivs
imul
loope
mov
mov
inc
mov
decl
lods
mov
add
arpl
mov
jo
or
rorb
mov
inc
inc
inc
cmp
pop
int3
adc
mov
cld
decl
in
xor
pop
bound
test
pushl
mov
add
cmpsb
sarb
jmp
inc
arpl
or
pop
push
incl
push
test
gs
shlb
pop
sbb
jg
or
aad
mov
pop
push
shrl
shlb
lock
fsubs
adc
dec
or
xchg
ret
pushl
and
and
jbe
sub
push
test
ret
scas
fstpl
dec
mov
push
mov
and
mov
ja
or
imul
jb
sbb
lcall
inc
sub
push
jbe
push
popa
mov
adc
mov
pop
mov
sar
call
stos
insl
xchg
jl
aaa
inc
and
sti
mov
scas
push
andl
icebp
xchg
cwtl
adc
or
mov
jne
inc
mov
pop
or
fcompl
stos
lods
xchg
jnp
arpl
stc
sahf
cwtl
fmull
dec
out
lods
pushf
movsl
mov
movsb
call
xor
inc
jp
add
insl
mov
stos
dec
cmpsb
dec
mov
pop
outsb
outsb
int
mov
inc
aaa
xor
and
mov
jo
addr16
mov
bound
pop
inc
subl
mov
mov
inc
out
cmovnp
popa
adc
mov
mov
push
cld
leave
jmp
mov
jg
fs
js
clc
orb
in
push
in
repz
das
add
jg
stos
xchg
push
xchg
shll
sbb
pushf
pusha
sbb
mov
mov
lcall
fmull
fidivl
inc
stos
cmpsb
ljmp
dec
push
mov
push
call
fldt
loope
xchg
jo
dec
sti
and
and
xor
lret
cmp
decl
mov
outsb
sbb
push
sub
xchg
and
jmp
icebp
movsb
pop
xchg
jne
mov
imul
mov
sahf
pop
stc
push
inc
mov
mov
sbb
stos
or
adc
xchg
or
xchg
sar
stos
jmp
sti
test
fisttpl
jns
aad
ret
loope
or
aaa
sti
pop
xchg
mov
mov
mov
daa
fs
adc
sbb
xchg
sub
mull
cmp
cmc
mov
adc
xchg
adc
inc
fdivrs
add
nop
movsl
push
sahf
out
incl
inc
pop
cmpsb
and
push
push
mov
std
push
pop
pop
pop
xor
flds
cld
xchg
push
aas
cmc
or
fs
ljmp
std
shrl
clc
jb
jmp
std
adc
xlat
shl
cli
xchg
or
stc
insl
add
gs
cltd
pop
insb
daa
mov
xor
mov
out
mov
ja
incl
dec
cmp
in
push
add
clc
cmp
mov
decl
pop
cmp
add
ljmp
xor
test
or
inc
dec
inc
push
enter
inc
inc
add
sub
mov
test
push
add
subl
call
sbb
or
aad
lahf
pop
leave
sbb
mov
add
stc
adc
jmp
cmp
mov
inc
sbb
jae
insb
or
sbb
cmpsl
xor
stos
sbbl
fsubp
daa
outsb
loop
mov
incb
inc
sub
push
jmp
loope
cmpsl
or
jmp
fnstsw
sub
mov
cld
mov
jg
insl
test
xchg
fst
inc
cmp
xchg
fimull
push
stos
adc
pop
adc
xchg
jno
pop
loopne
leave
add
and
decl
fcomps
mov
jge
cli
adc
push
lods
jmp
fs
xchg
icebp
sub
call
cmc
pop
push
sub
xor
push
in
push
iret
orl
insl
cmp
jmp
cmpsb
fs
out
dec
aad
adcb
mov
mov
fs
jmp
or
adc
xchg
into
xchg
scas
subl
add
mov
incl
jae
pop
mov
int3
lock
repz
cmp
or
pop
mul
jecxz
loope
je
mov
jae
fsubrl
pushl
rol
and
cmp
cmp
ret
pop
adc
daa
mov
xchg
and
std
pop
fisttpll
mov
sub
shlb
xor
fxch
popf
stc
testb
inc
movsb
sub
sbbb
cmp
stos
lcall
pop
xchg
inc
lods
movsl
push
push
mov
pushl
loopne
cmpsb
xor
jg
xchg
fimull
fcompl
icebp
pop
push
sbb
mov
cwtl
xor
mov
or
ljmp
inc
popf
cli
clc
ljmp
or
lcall
push
push
mov
jne
mov
fsubrs
lcall
lock
aam
ljmp
mov
pushl
jl
stc
pop
and
mov
mov
pushf
inc
jl
ret
jge
inc
xchg
inc
jmp
not
jle
cmp
rcr
js
pop
cmpsl
loopne
adc
mov
mov
or
ljmp
into
or
stc
insb
dec
std
sbb
sarl
stos
repz
mov
lods
or
pop
xchg
push
test
push
pop
inc
jp
add
cmp
mov
pop
or
inc
jno
xor
mov
aad
incl
dec
inc
pusha
mov
jb
jbe
mov
ficoml
dec
movsl
sbb
and
and
add
sub
add
xorl
push
add
dec
or
push
adc
or
stos
lcall
inc
and
add
adc
or
iret
addb
inc
add
lcall
adc
adc
ds
ja
push
inc
cs
mov
push
push
inc
stc
push
lock
jp
dec
inc
jno
or
sub
stos
aad
data16
popa
imul
test
xchg
mov
call
icebp
add
cltd
push
fcomip
incl
aad
push
lds
jb
xchg
stc
je
xchg
push
xchg
adc
push
ds
pushl
das
pop
cltd
js
aaa
popf
and
ret
xor
loope
filds
daa
mov
sub
cmp
push
into
adc
test
das
dec
cltd
iret
jmp
and
xorl
ds
xor
xor
movsl
add
or
in
ljmp
int3
mov
cltd
cmp
sub
xchg
mov
or
testb
movb
mov
and
cltd
and
dec
xchg
repz
outsl
dec
pop
popf
push
sub
repnz
mov
jg
mov
lods
push
inc
xor
sub
test
sub
sbb
sub
test
adc
push
push
faddp
jmp
rcr
add
push
das
sub
jne,pn
aaa
xchg
adcb
cmp
and
sub
cmpsb
movsl
loope
addb
imul
imul
fdivl
sahf
add
cltd
xor
gs
push
test
add
gs
sub
add
jle
add
mov
roll
push
icebp
cmp
addr16
and
ss
cmpl
bound
aas
sub
cmp
gs
xor
jbe
test
adc
mov
imul
sarl
decb
test
lcall
add
push
sub
jle
xchg
push
xchg
push
jbe
cwtl
cmp
insb
fdiv
add
xor
repz
lock
adcl
xchg
movsb
add
mov
pcmpeqd
roll
test
mov
pop
mov
sahf
xor
mov
add
jne
mov
je
jle
cmp
inc
loop
inc
mov
cmp
lahf
jg
jne
mov
inc
fnstenv
das
clc
in
aaa
mov
mov
and
shll
cs
adc
rorb
mov
call
ss
xor
cmpsb
inc
lret
lock
ds
sbb
mov
jb
cmp
jnp
fadds
dec
push
lret
shl
cwtl
jae
pushl
sub
aad
mov
or
test
push
mov
and
ljmp
mov
or
push
xor
mov
lea
sbb
xchg
idivl
xchg
mov
es
add
push
pop
push
scas
push
jne
dec
xchg
sub
outsl
sti
leave
pop
mov
sbb
inc
test
cmpsb
and
les
add
in
jno
insl
xchg
mov
dec
imul
in
jno
sub
and
pop
xchg
jno
lock
call
mov
jno
jbe
cmp
test
stos
scas
sbb
inc
xchg
lock
clc
neg
clc
popf
push
push
ret
jnp
cmp
in
cmp
enter
sbb
clc
int3
lret
or
sbb
jnp
push
fwait
je
iret
clc
filds
adc
push
jnp
int3
mov
inc
loop
sar
pop
aaa
push
movb
sahf
negl
push
mov
std
xor
inc
divb
pop
icebp
mov
inc
xor
fisttpll
add
sbb
push
mov
out
add
mov
dec
shll
das
jg
movsl
loopne
jnp
push
mulb
and
jnp
dec
mov
out
pusha
push
dec
in
mov
test
adc
mov
scas
push
push
repz
addr16
xor
xchg
into
es
mov
fisttpl
sbb
pop
repnz
pop
into
sub
fimuls
pop
incl
icebp
sbbb
test
mov
mov
xor
loope
ds
push
scas
push
mov
adc
cld
incl
mov
push
push
push
sbb
into
push
add
adc
icebp
add
xor
mov
dec
ljmp
push
push
xor
push
dec
mov
or
add
dec
jle
inc
and
mov
hlt
jle
inc
and
jbe
adc
push
int3
mov
test
mov
dec
jge
mov
pusha
sbb
je
lahf
into
mov
mov
mov
add
push
xor
jnp
push
ss
or
jnp
sar
sbb
incl
push
mov
mov
and
xchg
lock
jg
incb
int3
jmp
loope
xchg
pop
fisubl
pop
cmc
jg
clc
xlat
cmpsl
cmp
hlt
push
mov
mov
adc
sti
mov
incb
out
push
loop
mov
mov
pop
cli
mov
pusha
inc
xchg
jbe
sbb
pop
and
stos
push
inc
dec
rorl
xchg
ljmp
mov
push
adc
inc
cli
xchg
pop
xchg
mov
adc
test
lcall
or
bound
push
push
orl
fistl
cmc
jns
insl
add
in
fwait
bound
jne
in
fcmovnb
arpl
push
testb
adc
shr
lock
incb
mov
push
sarb
test
testb
les
stos
mov
pop
inc
test
push
loope
imul
mov
adc
and
push
mov
fs
jle
jg
lock
lcall
mov
push
add
sbb
jecxz,pn
subb
ds
add
sub
icebp
sbb
inc
and
push
xchg
das
mov
fldenv
push
push
push
nop
aam
stos
cltd
nop
and
lahf
mov
and
dec
incl
stos
mov
icebp
cltd
jle
adc
cmp
call
imul
inc
sbb
scas
decl
nop
dec
in
inc
push
repz
sub
mov
sbb
je
das
cmpb
decl
and
mov
loop
xor
dec
cmp
push
dec
push
dec
inc
lcall
xor
inc
inc
bound
dec
push
insb
push
dec
arpl
pop
push
jb
push
pop
dec
dec
push
imul
push
push
imul
dec
inc
inc
push
dec
outsb
push
xor
addr16
xor
inc
outsb
bound
pushl
jne
je
dec
pop
push
cmp
push
push
dec
dec
data16
imul
js
push
dec
dec
ljmp
insb
cmp
insb
jae
jp
outsl
popa
xor
push
dec
dec
outsl
pop
inc
dec
insb
xor
dec
push
and
pushl
jb
inc
dec
outsl
inc
xor
push
push
inc
inc
inc
xor
fiadds
dec
jne
outsb
inc
imul
inc
push
cld
push
insl
je
insb
lcall
xor
inc
push
dec
jbe
dec
jb
je
insl
jae
push
jne
jg
pop
sbb
push
dec
jo
fs
inc
cmp
xor
xor
dec
dec
incl
outsw
fs
inc
dec
js
push
xor
popa
jo
enter
push
xor
ljmp
cmp
inc
dec
inc
push
bound
dec
jns
fs
push
ja
push
aaa
mov
or
bound
jae
dec
xor
dec
jp
dec
pop
jns
jg
insb
push
or
insl
outsb
popa
xor
outsl
push
xor
dec
outsb
jg
xor
insb
aaa
outsl
bound
inc
jo
scas
aaa
inc
outsb
push
cld
pop
fdivs
cwtl
jl
jbe
jno
jp
pop
aaa
bound
insb
jg
mov
jo
push
jb
push
inc
jae
jbe
pop
mov
imul
push
dec
js
push
js
dec
inc
pop
xor
bound
inc
jo
rcr
jg
cs
push
je
je
or
outsb
or
mov
addb
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
mov
xchg
cmp
scas
clc
lods
inc
cmp
sub
out
sahf
out
sub
push
bound
out
sahf
mov
mov
or
sahf
out
fiadds
pop
fs
jns
out
mov
jns
out
in
cli
add
iret
repz
push
sbb
inc
dec
bound
repz
orb
mov
lret
out
lcall
sub
push
pop
push
out
xchg
cmpsb
mov
sahf
out
out
cli
add
push
iret
repz
and
push
pop
push
je
xchg
cmpsb
mov
cmp
repz
out
lcall
cmp
out
sahf
inc
push
pop
jo
mov
out
pushf
cmpsb
mov
fcmovbe
jl
out
lock
push
mov
iret
repz
and
inc
push
pusha
cmp
repz
jle
xchg
test
cmp
repz
cmp
mov
xchg
push
sub
dec
repz
repz
insb
adcb
mov
jns
loop
hlt
or
or
jns
out
sub
dec
sahf
out
sahf
push
push
jle
pushf
jns
out
cmpsb
mov
rcr
repz
out
add
adc
iret
repz
cmp
pop
push
repz
cmpsb
mov
lret
iret
repz
ljmp
cmpsl
push
sub
inc
push
sahf
out
sahf
pop
push
jns
out
cmpsb
mov
fsub
repz
out
add
repz
cmp
outsb
js
iret
repz
xchg
mov
iret
repz
lock
xchg
imull
sbb
inc
push
pop
push
sahf
out
sahf
jb
sahf
mov
repz
adc
cmp
repz
mov
ds
in
push
mov
jns
bound
stos
ret
dec
repz
adc
cmp
repz
movsb
mov
iret
lock
mov
out
sahf
push
loopne
dec
repz
push
mov
cmp
repz
mov
test
sbb
jns
out
data16
out
notb
shll
iret
repz
pop
jo
mov
repz
adc
sub
sahf
out
push
jo
mov
out
out
ret
sbb
iret
repz
inc
pop
je
test
sahf
out
cmp
lock
and
jns
out
push
outsb
xchg
shr
add
push
xor
repz
dec
fs
mov
sahf
out
cmp
cld
push
cs
jns
out
pop
je
mov
out
call
push
dec
jns
out
bound
cmpsb
mov
fdiv
or
and
iret
repz
push
push
xchg
mov
sahf
out
cmp
testb
es
sahf
out
push
insb
sbbb
enter
lret
repz
inc
pop
jo
sahf
mov
shr
push
lret
push
ss
out
push
push
jl
out
out
sbb
cs
repz
dec
pusha
jp
cmpsb
rcrb
or
and
jns
out
push
insb
test
out
loop
cmpsl
add
test
mov
popa
or
inc
pop
ljmp
ds
mov
xchg
mov
lock
stos
push
push
out
test
mov
add
mov
push
mov
in
fidivl
jmp
sbb
stos
in
mov
jb
fisubrs
outsb
lods
mov
jge
mov
jmp
fbld
mov
mov
fidivrs
jo
lods
lods
call
xchg
ljmp
mov
jb
fisubrl
jb
stos
mov
mov
mov
in
jg
lods
fs
scas
in
xor
mov
rol
mov
out
int
scas
data16
out
sbb
mov
add
scas
inc
xlat
lods
lock
mov
mov
or
jg
push
mov
paddusb
mov
mov
dec
aam
repnz
mov
stos
aaa
or
push
adc
mov
in
fidivl
test
shrb
addr16
pop
test
test
jo
fstps
call
cld
fwait
shl
mov
call
fnsave
outsb
out
jg
ljmp
mov
icebp
mov
cmp
into
stos
mov
mov
scas
push
std
lods
mov
mov
mov
inc
lods
push
andb
std
das
pop
jmp
mov
das
fstps
dec
test
scas
mov
mov
pop
sbb
aaa
mov
data16
fdivrs
push
aas
into
incl
mov
lock
lods
mov
and
mov
call
push
cld
test
int3
scas
test
jmp
les
out
stos
stos
outsb
scas
mov
call
outsl
or
call
rcl
test
bound
mov
push
mov
ds
mov
mov
cmp
outsl
jle
mov
jl
mov
aas
iret
mov
mov
fnstsw
mov
ret
imul
in
incl
jne
pop
mov
pop
dec
mov
scas
cli
or
stos
negb
popa
outsb
pop
lahf
mov
xor
jmp
mov
scas
cmpsl
mov
dec
iret
mov
dec
add
or
test
loopne
mov
cmc
scas
fiadds
inc
out
or
pop
test
int
iret
mov
ret
pop
cmc
stos
push
pop
aam
mov
scas
xor
sub
loope
mov
ljmp
in
lea
sbb
pop
insb
inc
inc
in
dec
enter
mov
fwait
int
psubusw
pop
iret
dec
iret
fwait
insl
ret
mov
mov
scas
leave
scas
lret
xlat
outsl
fwait
in
aaa
mov
cmpsb
ficoms
cmc
fstpt
or
lods
scas
cmpsl
xlat
mov
sbb
scas
push
fdivs
push
call
ljmp
dec
mov
out
enter
scas
jle
imul
dec
outsl
mov
fdivrl
les
jg
pop
sub
popa
mov
int
sub
imul
stos
stos
insl
mov
and
mov
jle
fcom
insb
mov
scas
aad
jg
decl
insb
leave
int
fucomi
inc
in
xchg
mov
stc
lahf
scas
rol
mov
mov
push
mov
int
imul
das
mov
jle
mov
das
mov
mov
fstpt
ret
fcomi
mov
pop
stos
ficoms
stos
mov
jg
mov
mov
add
into
mov
push
jl
mov
loopne
lds
shl
fldcw
mov
mov
stos
cli
ret
imul
test
fsub
test
fisubs
inc
mov
std
div
ljmp
pop
pop
fldcw
lods
mov
iret
stos
js
mov
mov
mov
pop
cld
fldcw
jns
cmpsb
mov
mov
stos
cs
lds
and
sti
mov
mov
stos
sub
mov
sub
out
mov
test
subb
cli
sbb
mov
movsl
mov
aam
mov
push
xchg
shrl
and
adc
mov
push
mov
jg
test
fs
test
and
int
repnz
das
clc
inc
cs
enter
into
aam
aam
je
mov
stos
lcall
mov
dec
lea
pop
ret
adc
stos
daa
sub
jbe
into
lcall
sbb
jg
jge
mov
xchg
out
mov
or
outsl
ss
in
adc
leave
push
shrb
jge
mov
jmp
mov
or
popf
dec
inc
pop
fs
mov
or
mov
frstor
cmp
mov
mov
inc
aad
adc
neg
incl
leave
mov
push
lret
jnp
test
mov
ds
adc
cmp
test
or
xlat
decb
xchg
inc
dec
push
xor
or
push
lock
jge
mov
test
shrl
decl
jbe
insl
movsl
stos
pop
add
push
push
pop
out
xor
ljmp
es
out
sarb
into
mov
stos
pop
mov
syscall
sub
in
into
ja
sub
sbb
or
sbb
cmp
stos
sub
out
call
outsb
cmovbe
movsl
fidivs
int
cmp
loopne
rolb
imulb
mov
add
loop
pop
push
loopne
jle
mov
cli
cmp
push
jmp
lods
push
mov
outsl
jbe
mov
jp
dec
cli
mov
in
xlat
stos
pop
adc
in
clc
adc
jl
shl
or
or
and
push
sbb
add
lds
mov
push
hlt
mov
iret
push
test
inc
mov
xor
push
in
sarl
mov
pop
cmp
es
mov
jle
push
sbb
scas
fadds
cmp
idiv
rorl
jmp
int
add
sub
sub
inc
push
cld
pushl
mov
mov
mov
mov
jb
popf
scas
rclb
mov
mov
mov
cs
mov
and
mov
insb
or
cmp
out
dec
sub
stos
stos
add
push
aaa
cmp
adc
cs
mov
and
xor
fcomps
adc
shrb
push
push
push
ss
fwait
mov
out
ljmp
in
mov
jg
jbe
inc
lea
and
mov
leave
mov
cmp
jns
stos
jo
mov
push
movsl
into
shrb
mov
push
mov
sbb
jle
out
mov
push
sub
aas
mov
dec
mov
callw
mov
out
jbe,pn
hlt
xor
mov
mov
jge
out
bound
lret
scas
clc
jbe
rcl
jns
stos
push
int3
push
sbb
xor
in
push
lahf
fwait
inc
or
xchg
push
push
adc
xor
fdiv
fwait
pop
cmpsb
lock
test
lods
test
test
es
imul
stos
test
insl
clc
jbe
mov
push
jbe
stos
je
ss
jne
outsb
push
jg
push
fsub
call
mov
cmp
mov
movsb
mov
shlb
jle
mov
scas
sbb
xchg
lods
mov
mov
sub
scas
xor
in
out
incb
out
fs
lcall
push
icebp
stos
rorl
enter
arpl
cs
out
aaa
int
mov
jo
insb
jg
mov
enter
rorl
pusha
ret
test
sbb
jbe
insb
outsb
loope
push
mov
fbstp
es
mov
out
xchg
push
cmc
push
insb
fisubrs
mov
leave
pop
addb
sahf
push
jg
adcb
sub
adc
fistpl
dec
xor
adc
mov
test
fstl
in
fsubrs
and
and
xor
es
mov
jmp
sub
sub
mov
sub
fnsave
lods
pop
mov
inc
cli
cmpsb
sub
mov
or
or
ret
inc
fbstp
pop
push
cmp
fsubrl
adc
shll
push
mov
cmp
sbb
enter
mov
idiv
out
mov
cmc
cmpsl
jne
mov
xchg
push
lods
mov
aas
push
push
ds
shlb
push
pusha
ret
mov
enter
lods
mov
das
rorb
xchg
mov
adc
incl
lcall
stos
mov
mov
fdivs
lods
mov
cmpsl
push
inc
into
xor
jbe
ror
fildll
push
inc
mov
push
mov
out
stos
mov
fwait
or
sbb
xor
cld
out
into
or
fldt
js
inc
sbb
outsb
shrb
mov
inc
inc
mov
jbe
cwtl
mov
icebp
lcall
adc
movsb
pop
sub
enter
insl
je
xchg
mov
insb
dec
lcall
inc
jne
outsb
lods
cmp
add
in
push
call
xchg
js
dec
sbbb
pushl
inc
push
shl
adc
jge
xsave
mov
movsb
ljmp
adc
out
imul
push
mov
jno
sti
lods
jne
mov
and
fiaddl
stos
in
rorl
es
sub
jmp
sahf
jle
pop
cli
js
xchg
inc
dec
sbb
mov
iret
insl
push
movsb
xchg
rcr
jne
dec
adc
sub
mov
mov
xchg
incl
cmpl
sbb
sahf
or
sahf
or
arpl
xlat
mov
incl
jne
jns
add
push
aam
mov
fcmovnu
sub
mov
stos
jp
shrb
fstpl
lods
subl
aaa
pop
push
fcom
out
clc
jbe
jae
mov
inc
mov
push
add
stos
jae
movsl
sarb
mov
adc
lcall
stos
mov
sbb
incb
add
sbb
sarl
bound
scas
pop
stc
lcall
mov
stos
mov
mov
mov
call
mulb
call
popa
shrl
fimull
stos
jg
pop
rcrb
or
call
pop
pop
lret
stos
mov
push
leave
aad
faddl
stos
sub
int3
out
pop
xlat
mov
mov
cmp
pop
mov
stos
jl
cmp
xor
lods
dec
aas
jl
faddl
jg
sti
fadd
mov
push
add
adc
aad
push
mov
sbb
jmp
push
adc
xor
aas
movsl
in
sub
push
fbstp
mov
clc
mov
ret
mov
sub
out
dec
pop
ret
mov
lcall
xor
mov
dec
test
fchs
and
movsb
jge
jl
push
dec
pop
mov
notb
inc
xor
hlt
lods
dec
dec
jno
cmp
decl
or
div
movsb
inc
xor
and
std
ret
sbb
ljmp
fidivl
adc
push
into
mov
imull
ret
aad
test
xor
lock
mov
pop
xor
lds
das
mov
sub
and
adc
lods
movsl
dec
decl
sbb
repz
sbb
insb
int
push
cwtl
sar
inc
rcrl
aas
and
lcall
push
mov
push
or
mov
ds
popf
aaa
mov
adc
lods
scas
repz
pop
inc
stc
mov
hlt
xor
fidivrs
pop
lcall
push
pushf
sbb
in
jne
inc
popf
fisubrl
icebp
ret
in
cld
pop
cmc
cmpsb
test
cmpsb
push
jbe
mov
inc
cmpb
fcmove
into
sbb
mov
and
movsl
mov
cli
and
jns
pushf
mov
leave
mov
adc
or
xor
ficoms
push
ds
sub
fucomi
aas
dec
mov
push
fidivs
adc
jns
xchg
and
leave
clc
mov
jg
ficoml
sbb
fwait
mov
mov
xlat
into
dec
mov
call
cmpsl
mov
mov
xor
shlb
fisttpll
stos
ret
xlat
movsl
dec
movsl
mov
call
add
or
addb
xor
faddl
lds
loope
shll
sarb
icebp
incl
mov
xorb
lret
push
mov
adc
dec
xor
mov
cld
aas
popf
rdmsr
xchg
vmovlps
or
mov
lcall
ss
aad
or
mov
and
pushf
scas
aaa
inc
ret
das
adc
pop
shrb
add
dec
movsl
mov
add
fs
or
fistps
cli
call
cld
stos
or
sbb
ficoml
mov
mov
pop
lock
sbb
mov
pop
int3
enter
aaa
and
dec
xor
fldcw
cli
std
aam
inc
repz
mov
inc
int3
dec
fucomi
mov
and
dec
ss
lcall
sar
aas
adc
ss
int3
add
jmp
ljmp
and
pushf
test
mov
leave
adc
jae
imul
jl
lods
mov
sarl
jmp
loope
xchg
mov
xor
mov
and
lahf
cli
xor
lods
push
and
rcll
addr16
jmp
lret
adc
mov
and
inc
and
mov
xor
aad
inc
and
jno
xor
ljmp
movsb
mov
jbe
mov
and
and
lret
mov
dec
stos
inc
xor
shll
icebp
ja
pop
lds
sub
push
inc
pop
mov
fistpl
movsb
pop
xor
push
pop
xchg
pushf
push
inc
adcl
aad
ret
call
inc
ja
xchg
xor
adc
mov
and
into
cmp
mov
xor
inc
inc
arpl
dec
mov
adc
jmp
loop
popa
pushf
addr16
push
ret
jae
mov
add
and
mov
xor
jmp
scas
clc
call
aad
iret
mov
jg
lret
pop
cmp
test
in
pushl
push
test
xor
lret
fidivs
lret
cmp
daa
mov
xchg
call
into
push
push
cmpsb
iret
cmp
mov
sbb
movsl
push
inc
and
das
adc
mov
fdivrs
xchg
cmc
cmp
jbe
inc
mov
lods
inc
test
and
sub
adc
mov
mov
aam
test
stc
movsl
mov
push
mov
unpcklps
ljmp
cmp
push
je
adc
out
push
test
push
cmp
mov
jmp
cs
mov
cmpsl
insb
inc
cmpsl
leave
add
and
xchg
lea
adc
add
inc
mov
jmp
adc
add
addb
push
push
push
test
xor
mov
jmp
lcall
mov
mov
add
jg
ljmp
fsubr
ds
mov
sbb
roll
test
and
pusha
inc
and
pop
pop
cmpsl
fcomip
pushl
aas
sub
sbb
movsl
test
pop
decb
pushl
jp
mov
sbb
fs
push
jecxz
sub
popf
lret
icebp
test
fcomip
fsubr
inc
mov
sbb
mov
pop
xorb
aam
mov
cli
ljmp
mov
ss
pushf
inc
inc
mov
aad
outsb
aas
stos
lds
sbb
daa
and
call
adc
stc
push
xor
sti
adc
stos
cmpsb
stc
ss
ret
lret
mov
xor
clc
xchg
not
repz
or
fwait
roll
leave
mov
jle
sarb
pop
lock
enter
adc
test
movsb
in
inc
fistl
mov
xchg
mov
xor
shlb
or
mov
ss
fsubrs
add
sbbl
cmp
cltd
add
mov
sbb
mov
sahf
into
push
cmp
bound
imul
cmp
push
mov
push
sbb
nop
mov
ret
fmuls
cmp
movsb
test
inc
ret
call
cld
pushl
adc
insb
adc
jbe
mov
ret
mov
sbb
jg
sar
ss
scas
add
dec
fwait
ret
cmp
mov
imul
loop
or
ss
add
lods
cmp
hlt
pop
cld
mov
pusha
ds
leave
ret
sbb
mov
scas
pop
cmpsl
sub
outsl
mov
lcall
jge
insb
sbb
mov
jl
push
aam
movsb
jg
pop
cmp
test
test
cwtl
cmp
jmp
xchg
mov
cmp
xchg
inc
inc
das
mov
shr
movsl
daa
cmp
mov
mov
repz
jmp
jnp
lods
xlat
cmp
ds
mov
sbb
loope
sbb
mov
xlat
cmp
test
cmp
out
sbb
repz
nop
mov
ljmp
pop
lock
cwtl
cmp
aad
sbb
mov
cmp
repz
fdivl
xor
cmp
lods
sbb
sub
lahf
mov
ror
lcall
mov
fnstcw
shl
mov
cmp
mov
xchg
pop
cmp
mov
std
jg
aas
xchg
xlat
sub
mov
sbb
out
cmp
mov
push
mov
sbb
adc
sbb
aam
enter
sbb
sti
pop
jmp
sbb
dec
xchg
adc
and
lret
aas
popa
lret
push
mov
sbb
add
call
sbb
test
cmp
mov
mov
into
mov
push
ss
ljmp
sbb
push
and
js
or
loopne
jmp
xchg
cmp
decl
daa
stos
scas
add
nop
mov
sbb
push
sbb
lods
lods
test
sar
call
mov
ja
stos
sarb
shll
add
scas
push
pop
movsl
pushl
xchg
mov
fsts
or
scas
subl
push
popf
lds
or
out
add
cmpsb
mov
push
ljmp
mov
add
mov
push
pop
mov
push
sub
mov
sbbb
pushl
stos
lret
xor
scas
mov
cmp
leave
scas
push
insb
mov
scas
inc
out
mov
repz
test
mov
pop
add
daa
test
jmp
ret
pop
push
inc
pop
cmp
push
cld
pop
hlt
popf
add
fs
lcall
and
lcall
frstor
iret
lahf
and
sbb
pop
test
dec
and
xorl
pop
loopne
mov
shl
fidivrs
push
insl
cmp
movsb
ja
or
jbe
push
shr
incb
xchg
incl
clc
inc
or
pop
mov
push
out
add
jge
mov
pop
in
add
adc
jnp
dec
insb
dec
cmp
icebp
sub
push
pop
lock
outsl
pushf
add
orb
loop
sti
sti
adc
push
cmp
lahf
paddw
stos
cwtl
dec
pop
shrl
and
ss
push
xchg
loope
inc
test
adc
and
inc
testb
mov
sbb
jecxz
pop
jle
push
mov
cs
incl
cld
ljmp
test
mov
aaa
pop
stos
pop
insb
add
ret
hlt
jl
aas
sub
mov
ss
cli
rolb
fbld
lock
cli
jmp
popf
sbb
scas
sbb
gs
mov
cmp
cmp
shlb
decl
jmp
fst
fisttpll
jb
scas
dec
ljmp
js
push
sahf
mov
sbb
mov
bsr
lcall
adc
adc
push
test
and
fldl
out
test
test
fstl
mov
call
rorl
inc
xorl
push
sbb
jmp
fisubrs
pushf
or
fs
ljmp
clc
push
sbb
daa
aas
dec
inc
push
or
xor
lock
lcall
repz
mov
popf
jp
inc
sbb
push
cmp
jp
icebp
lahf
outsl
mov
icebp
ds
or
push
inc
pushl
xchg
and
insb
cmpsb
push
mov
add
inc
adc
and
cwtl
rcll
jle
inc
jge
mov
push
jle
lea
adc
lcall
add
test
sub
push
add
imul
je
cld
cmp
cmpsb
mov
ja
pushl
add
movsb
sub
cmp
mov
jb
add
sbb
fcomip
incl
mov
jle
in
or
mov
add
ja
push
call
test
cmc
sbb
imul
jecxz
decl
and
loopne
jmp
lods
lock
pop
cmp
push
mov
mov
lret
xor
mov
jmp
push
or
dec
bts
pavgb
pop
push
mov
ja
add
pop
dec
inc
out
jbe
lcall
xchg
adc
mov
push
mov
test
out
loopne
test
push
sub
jg
inc
jmp
dec
decl
xor
fsts
adc
dec
pushf
push
inc
xlat
inc
cmp
outsl
adc
pushl
movsl
pusha
sti
fsubl
test
fists
ret
xchg
sahf
stc
mov
jbe
lods
std
ret
incl
loopne
insb
push
icebp
mov
xor
movsl
or
rolb
loop
jg
inc
rclb
push
popa
hlt
clc
das
mov
gs
fistpl
add
dec
pop
outsl
cli
call
out
dec
or
mov
nop
mov
xor
call
popa
pusha
mov
cmp
out
jl
mov
incl
xchg
aaa
pop
lods
mov
jecxz
jae
lcall
add
or
or
adc
push
rcll
xor
and
mov
mov
decl
sbb
imul
outsl
addr16
lods
pop
or
pop
in
jbe
sub
push
ret
adc
incl
cmpsb
pop
jns
jae
icebp
and
inc
in
lods
cmpsb
inc
and
mov
lock
pushl
and
cmpsl
dec
and
test
inc
add
mov
jle
mov
dec
jp
or
jmp
mov
xor
push
inc
sub
jns
gs
push
testb
mov
sbb
call
test
test
sti
mov
sub
pop
mov
cltd
outsb
xchg
incl
add
repz
mov
in
cmpsl
lret
lods
jb
xchg
mov
jp
call
das
jne
clc
cwtl
fidivs
xchg
or
cmp
add
shlb
ret
inc
jno
aas
push
lcall
test
xlat
dec
negb
cmp
out
sub
xor
sbb
sbb
cli
dec
adc
mov
pop
xchg
int3
or
mov
jns
cs
cmp
xor
movsl
lea
mov
rorl
popf
aad
mov
pop
pop
sbb
loop
lea
mov
fcomps
sub
dec
leave
inc
test
in
inc
insb
pop
insb
fdivr
pushl
push
sbb
aad
push
push
sub
andb
jmp
fst
pusha
repz
cli
decl
in
test
jge
xchg
iret
cld
sbb
cmp
adc
or
jge
add
out
inc
mov
ljmp
dec
pop
shll
xchg
cs
iret
and
mov
dec
pushl
push
lcall
and
adc
dec
mov
inc
push
das
mov
fcos
lcall
jns
pop
mov
jp
xor
out
out
lret
push
jg
cmp
adc
decl
dec
mov
nop
cmpsl
push
testb
mov
push
jle
fisubs
mov
sbb
in
inc
mov
addr16
xchg
in
xor
mov
int3
cmc
rcr
call
or
lds
mov
aaa
shl
dec
cmc
add
data16
sbb
mov
ret
fcomip
jle
cltd
insl
adc
nop
and
and
lock
imul
decl
or
flds
xchg
inc
jnp
fmull
sub
popa
sbb
add
xchg
pop
out
clc
decl
dec
ss
mov
sub
idiv
jae
ud0
and
fsubrl
mov
sbb
cmp
xchg
fcomps
clc
jnp
mov
decl
popf
cmp
dec
aam
jnp
mov
fnstenv
inc
bound
add
insl
push
jle
call
xchg
sbb
data16
dec
insl
cmpsl
fldz
les
or
gs
xor
call
inc
cwtl
sti
outsb
mov
add
dec
cltd
add
loop
subl
sbb
push
pusha
int3
call
int3
jecxz
mov
int
fisubrs
mov
stos
das
arpl
inc
pop
scas
add
lock
leave
stos
enter
ss
sbb
faddl
bound
ljmp
sbb
push
pop
pusha
shrb
inc
out
xchg
out
adc
fsts
lods
lock
cmp
imul
xchg
les
add
dec
cld
lret
repnz
imul
pop
jmp
leave
call
in
xchg
inc
cmc
push
add
out
mov
decl
jo
or
push
das
sub
xor
cmc
popa
lds
or
call
insl
aas
mov
add
inc
imul
repz
scas
in
int3
sahf
adc
jg
jns
test
addl
jge
outsb
stos
js
aad
ret
or
cmp
pop
loop
call
and
xor
xorl
nop
xchg
fstpl
jae
je
pop
add
or
lcall
jae
push
icebp
popf
or
ja
cmp
sbb
xor
bound
aam
decl
movsb
jae
popf
adc
mov
jne
int
mov
mov
decl
idivl
add
mov
jbe
into
iret
adc
out
xchg
xchg
jecxz
fidivrl
mov
inc
mov
lods
xchg
mov
aaa
cmp
fsubl
lock
std
ljmp
dec
pop
lods
pop
mov
stos
pop
adc
xchg
push
fisubl
mov
inc
cmp
jle
jne
pop
fsubs
jbe
lcall
add
jmp
incl
sub
in
push
imul
sbb
lock
add
fldl
adc
mov
mov
push
nop
and
test
inc
dec
pop
test
xchg
dec
jg
jg
add
loopne
das
dec
fisubl
lea
mov
mov
pop
outsl
jne
mov
mov
mov
or
sti
or
insl
sbb
loope
in
xchg
pop
adc
mov
sbb
push
bound
leave
insb
repnz
mov
movsb
mov
jnp
aaa
std
incl
rorl
sbb
add
mov
lock
mov
call
xor
add
push
jmp
sub
jnp
divl
imul
sbb
pcmpgtw
or
dec
sbb
push
sub
fcoms
enter
jp
jmp
or
jne
lahf
add
jne
mov
pusha
jae
add
or
mov
clc
ss
add
or
ret
jg
sub
pop
adc
sbb
jno
adc
push
pushl
dec
cmpsl
int
ds
inc
in
mov
sub
lods
and
lods
cmpl
xorl
and
and
fisttps
xor
sahf
testl
pop
jp
pushl
ja
xchg
sub
lcall
shlb
outsl
mov
lds
loop
and
xchg
xor
add
cld
xor
in
test
pop
inc
add
adc
clc
jl
stos
xor
pop
mov
jl
mov
aaa
pop
add
or
ret
lcall
iret
jns
out
shrl
mov
fdivr
pushl
mov
daa
xchg
mov
mov
imul
int3
pop
repnz
in
sub
ljmp
sbb
fsubp
lahf
xchg
inc
sub
dec
mov
hlt
das
sub
mov
mov
test
ljmp
push
xor
rcrb
cmp
je
and
sbb
idivb
adc
jmp
into
sub
mov
or
aam
movl
jo,pn
cmpsb
sti
adc
cmpps
out
cli
inc
les
or
lods
ret
rep
xchg
lahf
cmp
and
ds
or
cmp
loope
and
mov
cmp
xchg
mov
mov
cmp
loop
dec
push
stc
pop
pop
and
lcall
in
fdivr
mov
sub
out
adc
push
or
leave
int3
test
or
mov
lret
cmpsb
xchg
je
orb
out
std
or
cmp
push
xchg
insl
xor
fs
ljmp
imul
or
xchg
movsl
fistps
cltd
je
xchg
mov
push
aam
xchg
xchg
in
pop
mov
ljmp
lcall
or
xor
jae
mov
pop
cmp
lods
mov
mov
ret
cwtl
stos
ret
jb
mov
cmp
cwtl
inc
decl
mov
and
mov
jae
sbb
je
pop
mov
movsb
dec
aaa
sbbb
stos
int3
lcall
test
xlat
jmp
xlat
jnp
not
jno
aad
in
clc
lea
es
add
lock
aad
mov
stos
stos
ss
test
or
ljmp
xchg
out
negb
push
int3
sub
flds
push
jmp
mov
push
adc
into
dec
bound
fcomip
jg
out
jnp
ret
sahf
mov
add
sti
stc
mov
push
insb
pop
jmp
and
or
adc
xor
cli
cmpsl
sbb
mov
mov
lret
pop
insb
inc
adc
lods
sahf
xchg
add
ret
jb
xchg
and
ljmp
dec
and
lods
mov
gs
je
dec
push
fdivrs
push
dec
push
lea
push
cmpsl
mov
lds
mov
xchg
push
out
mov
inc
or
clc
mov
jp
push
outsb
sub
cmp
lock
inc
scas
push
notl
out
mov
push
lcall
dec
rclb
sbb
sbb
adc
cltd
fildll
test
leave
icebp
ljmp
movb
fisubl
ljmp
pop
wrmsr
out
xchg
imull
sarb
mov
xchg
xor
ja
ret
mov
stos
xor
xor
pushf
mov
out
loop
pop
daa
pop
lods
into
inc
test
ljmp
jne
adc
push
jnp
pop
orb
jmp
shl
push
test
add
inc
xchg
cld
cld
sub
jcxz
repnz
fptan
cmp
push
and
js
movsb
mov
jmp
and
pop
mov
clc
sub
mov
sub
push
outsl
aam
pop
mov
in
mov
jne
shlb
push
pop
lods
and
jns
jb
add
jg
mov
add
fcmovu
mov
in
jmp
xchg
nop
xchg
inc
in
lcall
pusha
lock
aad
xorb
adc
lahf
mov
push
fisubs
pop
or
pushl
lea
sahf
stc
pop
inc
scas
xchg
ret
test
aad
in
ljmp
sarb
jp
std
cmp
sub
aam
shrl
lea
mov
pushl
mov
es
jle
xchg
mov
inc
or
and
jp
ljmp
mov
ljmp
sbb
push
pushl
iret
or
inc
add
pushl
pop
mov
int
outsl
or
push
sbb
in
or
sarl
pushl
cld
pushl
movsb
in
movsb
ljmp
dec
sbb
inc
mov
daa
xchg
xor
icebp
sbb
mov
jg
mov
cmp
dec
and
adc
divb
stos
pop
insb
adc
lds
and
fsubrp
idivl
mov
jbe
addr16
pushl
out
add
sub
icebp
adc
mov
jno
shlb
push
mov
lcall
scas
or
loope
fists
jae
and
out
inc
rcrb
decl
into
jg
sahf
or
ss
adc
sub
add
cltd
push
mov
dec
in
shl
push
mov
inc
pop
mov
lcall
nop
pop
xor
cmp
stos
sub
xor
mov
test
cmpsl
push
loope
ljmp
lds
fisttpll
lret
inc
jge
repnz
and
cmp
js
push
out
xchg
call
and
jbe
or
push
push
imul
outsb
iret
loopne
sub
lret
push
sbb
lcall
mov
in
sub
popf
push
test
jg
icebp
jl
aam
mov
pop
push
cmp
xor
fcoml
mov
outsl
clc
decl
or
inc
mov
pop
pop
adc
fisubrl
ljmp
bound
lcall
scas
lret
out
enter
jg
or
push
inc
mov
mov
sahf
push
lock
aad
mov
lea
cmp
jmp
add
inc
inc
aaa
and
dec
sti
in
adc
outsb
sbb
sub
test
pushl
int
sbb
push
cmp
mov
sub
jg
test
mov
jle
cmpsl
jecxz
mov
rolb
dec
ja
xchg
mov
push
mov
mov
fsub
mov
pushl
aam
cs
jmp
rolb
sti
and
cs
and
sbb
jae
jnp
incl
xchg
mov
fcmove
push
incl
loop
cli
and
faddl
sub
pushl
scas
xor
inc
cmpsl
cli
jmp
aam
repz
jmp
dec
inc
pop
xor
incl
mov
mov
gs
push
out
xchg
adc
pop
clc
dec
push
mov
pop
inc
lcall
dec
shll
pop
mov
pop
push
dec
outsl
jo
cwtl
lret
out
ljmp
divl
xchg
jge
nop
fistpll
jnp
and
adc
jle
xorl
pushl
and
in
jg
das
lahf
loopne
adc
jg
mov
loop
or
aam
cld
in
dec
outsb
frstor
sbb
mov
cwtl
mov
cmp
sti
pushf
ljmp
sub
addr16
cmpsl
daa
loope
push
adc
enter
sbb
push
mov
fwait
push
cwtl
sub
jg
xor
movsl
scas
sbb
es
pusha
and
das
push
fisttpll
mov
mov
sub
iret
jp
repz
inc
push
incl
popa
mov
in
lret
hlt
inc
cmpsl
mov
out
xchg
jb
push
add
jmp
ja
sub
xor
repnz
int
lcall
mov
test
femms
es
xor
push
push
xor
inc
lcall
push
out
jle
cli
fadd
sbb
movsl
dec
icebp
repz
mov
outsl
outsl
sahf
xchg
cmp
jl
cltd
incl
roll
negl
stos
fisttps
dec
jnp
xlat
jmp
ja
jmp
test
xchg
repz
jecxz
repnz
test
or
clc
ljmp
sub
inc
mov
inc
fs
jp
xchg
xchg
ret
andb
hlt
or
pop
fwait
cltd
pop
inc
mov
stc
sub
jp
adc
loop
pop
data16
mov
je
mov
xchg
jg
sti
scas
sti
push
mov
call
pop
and
cmp
fs
js
add
int3
rcll
sub
iret
push
scas
pushl
icebp
loop
xlat
push
jnp
sbb
mov
dec
xchg
push
push
adc
inc
and
jnp
jmp
andl
nop
pop
pop
xchg
cli
add
das
ljmp
fistps
mov
pushl
imul
xchg
push
sub
xor
fwait
arpl
out
aaa
jecxz
lret
mov
pushl
enter
out
cmpsb
les
dec
sahf
mov
imul
mov
seta
decl
jnp
fildll
mov
sbb
push
or
jo
inc
jecxz
dec
cmc
mov
cli
jb
lds
lock
jno
dec
fcomps
add
ja
pop
pushf
mov
adc
mov
sbb
fsqrt
mov
cmp
sar
hlt
and
push
imull
ret
jo
mov
or
sti
or
adc
and
xor
inc
inc
fildl
push
ficoms
ret
add
lcall
adc
mov
inc
jb
iret
dec
into
loop
popa
xor
jg
push
push
js
add
push
sub
cmpsl
pop
clc
shrb
outsl
mov
jmp
pushl
out
fsubr
mov
mov
mov
mov
cwtl
stc
xor
push
adc
pusha
outsb
sub
mov
pop
movsb
loop
insb
jbe
jp
push
pop
cltd
dec
inc
mov
add
push
pop
in
loope
std
mov
inc
sbb
push
iret
sbb
inc
sti
jp
pop
push
or
or
rcll
scas
nop
ds
sbb
clc
jg
and
test
push
loope
int
mov
nop
popf
inc
pop
inc
mov
ljmp
inc
leave
mov
aas
in
dec
pop
dec
xor
outsb
mov
repnz
test
insb
and
lcall
sbb
and
arpl
jbe
jnp
sub
inc
daa
andb
add
cmp
lods
and
inc
jg
mov
fs
je
test
loopne
dec
scas
lahf
imul
inc
lds
xchg
jns
dec
mov
out
or
mov
xlat
cmp
adc
push
push
inc
push
roll
cmp
lret
ljmp
sub
das
fldlg2
jnp
mov
pop
inc
rcl
add
jle
ljmp
sar
out
pop
enter
lcall
jb
xor
fildl
xchg
mov
cs
mov
jmp
fsubrs
xor
mov
add
ljmp
mov
and
push
nop
inc
mov
mov
std
sar
incb
cmp
mov
push
pop
sarb
xor
repz
pop
sbb
in
sbb
addb
insb
mov
jecxz
mov
mov
dec
jmp
jnp
fs
push
movsl
push
mov
mov
in
lods
or
lcall
ljmp
rcll
adc
xchg
mov
adc
or
cmp
xchg
mov
pushl
add
mov
jbe
cli
int3
enter
add
popf
dec
pushl
inc
outsb
cmpsb
mov
fsts
sub
shrl
or
insb
imul
into
cmc
adc
cs
dec
test
das
rcrb
call
push
sarl
mov
cmp
addr16
jg
stc
rcr
mov
add
adc
mov
xchg
push
xor
cwtl
jg
jnp
push
scas
push
add
popa
rorl
xor
xor
rcrb
call
adc
cmp
insb
sbb
dec
sub
call
shrb
nop
fcomip
ljmp
nop
aas
sbb
mov
popa
adc
sbb
cmpsb
dec
dec
test
mov
shlb
sub
adc
arpl
out
fstl
dec
hlt
jge
call
and
mulb
mov
lcall
jge
fucomi
lret
push
sti
int3
xchg
call
outsl
jmp
sub
xrelease
push
ljmp
inc
mov
xchg
pop
jae
pop
jns
dec
mov
jle
mov
mov
adc
jbe
xorl
push
mov
mov
push
cltd
imul
mov
into
sbb
cs
jo
add
jecxz
add
shlb
ret
dec
enter
incl
insb
push
mov
stos
mov
ja
outsl
int3
stos
adc
sbb
mov
sub
pushl
cld
dec
mov
push
cmpsb
pop
out
xchg
mov
add
inc
push
int
sub
movsb
mov
sub
mov
pop
stos
hlt
push
shrb
push
ror
decl
aad
xchg
iret
mov
pmaddwd
hlt
loop
or
push
inc
fldcw
jg
outsl
insl
jmp
imull
out
mov
leave
sbb
lret
shl
mov
popf
pushf
mov
and
ljmp
loope
in
jne
pushf
jb
push
je
mov
lods
or
pop
scas
mov
add
decl
add
adcb
out
xchg
in
test
mov
in
ret
inc
ret
incl
mov
outsl
js
stos
mov
test
pop
inc
std
and
dec
xor
cmp
ljmp
jo
inc
mov
rorb
inc
mov
or
mov
jae
xor
int
push
cld
jmp
mov
xor
sub
mov
sarl
call
dec
aas
scas
jno
lea
inc
in
in
popa
push
xchg
popa
jno
call
mov
cmp
jg
out
push
in
mov
and
adc
cmc
lods
shrb
mov
iret
mov
incl
add
xchg
sbb
iret
jns
xor
xor
ljmp
popf
decl
adc
inc
aaa
inc
sahf
cld
mov
inc
scas
xor
jno
adc
push
xchg
dec
std
sub
dec
gs
test
adc
js
push
push
pop
mov
and
cld
jmp
outsl
jo
popa
out
adc
adc
lea
jmp
jno
sahf
and
call
add
popf
or
mov
push
sbb
inc
cmpsl
mov
icebp
lcall
test
mov
outsb
adc
cld
in
mov
jmp
sbb
lcall
arpl
mov
insb
lds
rorl
aad
and
mov
and
pop
cli
sub
lcall
shlb
xchg
or
repz
int
mov
nop
push
mov
loopne
jge
test
add
into
fwait
xchg
push
push
pusha
mov
xchg
mov
xor
ljmp
sar
jge
xor
mov
pop
aaa
push
xchg
scas
cwtl
lahf
adcb
mov
push
mov
lcall
fsubs
inc
or
stos
aad
cmc
stos
pop
pusha
push
in
mov
jne
adcb
test
pushl
push
subb
cmp
pop
test
dec
add
lea
movsl
jl
mov
fcomip
shll
sbb
push
push
lret
pop
enter
jge
lock
lcall
sbb
insl
or
in
out
leave
hlt
add
mov
add
loope
mov
mov
movsb
cli
lret
pop
jg
pop
jbe
inc
call
fdivr
jmp
out
adc
sahf
insl
mov
scas
xchg
cmpsl
dec
xchg
and
mov
in
cmpsl
sub
cmpsl
lahf
pushl
insb
inc
loop
mov
sbb
cld
push
cmp
xor
mov
push
push
cld
jmp
das
andl
in
test
cmc
push
jo
fsubrs
js
fcos
ljmp
jae
inc
movsb
aas
mov
inc
dec
arpl
pushf
dec
pop
xchg
les
test
test
pusha
jb
lcall
shll
lds
inc
out
mov
gs
mov
add
stos
mov
xlat
jnp
push
jns
mov
or
xor
xlat
mov
xchg
repnz
lcall
pinsrw
cmp
add
ror
out
lret
jbe
cmp
mov
fwait
jecxz
out
jge
sti
mov
iret
push
xor
sahf
adc
hlt
and
xlat
mov
paddd
decl
adc
adc
mov
xchg
cmpsl
and
and
or
fcompl
ljmp
mov
sbb
mov
jl
fldenv
movsb
sbb
int
es
pushl
stos
cs
sahf
sub
in
out
mov
gs
xor
adc
dec
test
push
xchg
mov
jl
clc
call
pop
xchg
jl
jle
lret
lea
dec
jbe
xor
mov
data16
jg
stos
sti
xor
inc
jnp
hlt
xchg
cmp
pop
in
gs
xchg
jg
decl
mov
xchg
or
push
or
call
mov
or
jg
incl
cmpsb
mov
shrl
adc
cmc
adc
ds
dec
addl
adc
decl
dec
jne
jns
jb
cmp
rolb
mov
xchg
unpcklps
jae
mov
call
adc
pcmpgtd
in
fsubrl
adc
out
dec
mov
ljmp
cmpsb
int3
into
mov
cld
iret
jp
mov
and
adc
js
sub
mov
scas
cli
decl
add
pushw
insb
int3
ljmp
mov
dec
xor
pushl
cld
loopne
or
shlb
fcmovnu
fucom
out
mov
jae
fnstcw
ljmp
or
mov
mov
lods
adc
pop
loope
dec
je
jmp
fldt
int
out
push
xchg
add
inc
lcall
pop
pushf
inc
incl
sahf
scas
ds
lret
sbb
pusha
arpl
outsb
out
imull
xchg
sahf
mov
ljmp
adcb
lds
fdivp
lock
decl
fldt
cmp
fiaddl
sbbb
push
push
jb
and
mov
stc
push
cld
incl
jns
lds
mov
in
call
mov
repz
jmp
xor
cltd
adc
cwtl
dec
mov
mov
add
icebp
aad
nop
push
xchg
sub
mov
inc
out
jne
aaa
lret
outsl
outsl
stos
xchg
pop
pop
push
and
ja
cwtl
jl
inc
pop
loopne
std
xor
and
ret
insb
mov
pop
lcall
decl
gs
rcl
jmp
xlat
sbb
inc
add
sub
nop
sbb
ljmp
xor
in
iret
arpl
sub
dec
stos
cmp
mov
push
mov
sub
inc
pop
outsl
aam
push
add
jne
cld
pushl
or
cmpsb
pop
jecxz
push
add
mov
mov
loope
add
pop
imul
push
mov
repz
scas
mov
into
push
es
add
dec
mov
in
mov
pop
fxam
test
mov
mov
ljmp
cli
lcall
in
faddl
fsubl
cmp
cmpsl
insb
mov
movsl
jle
adc
fsts
inc
popl
test
and
push
jb
std
outsl
je
out
mov
xchg
push
fdivrp
lcall
xor
cmp
jge
cmp
inc
bound
scas
jle
jg
jg
pushf
popf
cwtl
and
push
je
and
adc
ja
popf
sahf
iret
dec
add
pushl
mov
adc
mov
adc
or
in
jbe
jp
xchg
lods
dec
decl
cmpsl
xchg
ret
test
pushf
push
or
insl
pop
fisttpl
cmc
call
mov
push
sub
mov
aad
xor
push
mov
icebp
mov
incl
xlat
fidivrl
ljmp
xchg
sbb
addr16
inc
cmpsl
cltd
and
or
mov
rol
out
xchg
test
xor
and
add
adc
pop
dec
out
cs
jg
pushl
pop
outsb
mov
or
and
xchg
test
sbb
sub
ljmp
insl
mov
inc
popf
lret
dec
sub
lret
cmpsb
out
les
in
push
icebp
negb
incl
dec
outsb
rclb
ret
and
mov
add
pusha
jmp
add
arpl
sub
pop
cmp
fisubrs
insb
add
push
inc
xor
dec
mov
sbb
nop
and
jl
repz
fsubrl
cld
subl
xor
jg
jmp
push
sbb
xchg
dec
stc
dec
mulb
or
add
adc
ss
call
ficoms
mov
push
inc
arpl
or
xchg
mov
xlat
int
mov
jmp
fcomip
std
sub
cli
mov
lea
fstl
call
mov
mov
mov
dec
mov
pusha
dec
mov
clc
cmp
lods
push
and
mov
or
dec
mov
cs
jo
mov
pusha
gs
mov
sbb
mov
and
lahf
xchg
scas
fildll
mov
fidivs
mov
jbe
xchg
mov
mov
add
xchg
scas
pop
add
in
mov
cs
xchg
mov
popa
mov
push
mov
js
xchg
cmp
incl
xchg
mov
push
mov
xchg
scas
loopne
mov
js
imul
divb
outsl
xchg
outsb
push
jle
das
mov
out
and
jle
xchg
dec
cltd
lods
scas
outsb
jo
sar
dec
nop
lods
enter
push
push
push
cmp
push
dec
pop
xchg
andb
or
outsb
cmpsl
out
ja
das
clc
in
ljmp
negb
xchg
lods
dec
insl
es
ret
jns
scas
insl
pop
lock
jo
xchg
jle
mov
pusha
test
out
imul
ss
jg
test
mov
shrl
jbe
mov
fsubl
mov
add
lock
cmpb
mov
shl
cmpsb
je
into
aam
jle
js
add
mov
mov
test
sbb
ja
xchg
lods
data16
jge
outsb
lea
testl
out
scas
add
decl
xchg
incb
es
gs
scas
cmpsb
mull
std
push
push
scas
pop
call
mov
call
nop
movsl
add
inc
scas
cmp
push
ss
in
xchg
inc
test
call
fnsave
lea
push
mov
out
jge
and
icebp
lea
incl
lock
test
pop
rcrb
es
outsl
mov
add
scas
and
incl
pushf
scas
push
jne
xchg
pop
aad
scas
mov
push
in
push
scas
mov
imulb
incl
dec
scas
movsl
jae
mov
ror
inc
data16
bound
mov
ds
popf
xchg
movsl
push
sub
test
test
popf
rolb
fidivs
xchg
inc
add
mov
sbb
cmpsb
in
xchg
ds
and
addb
aad
scas
test
cld
mov
ja
movb
aam
xor
ss
xchg
jmp
gs
shll
push
dec
mov
in
add
push
das
leave
mov
icebp
outsb
lods
incb
test
rcr
mov
arpl
ljmp
push
push
mov
repnz
xchg
movsl
test
iret
out
sbb
sahf
shrl
jmp
scas
inc
add
mov
mov
jecxz
scas
out
leave
pushl
push
aam
int3
sbb
arpl
mov
repz
stos
push
mov
call
and
test
mov
jae
xchg
add
push
test
hlt
test
fidivl
add
roll
scas
movsl
jns
xchg
incb
cwtl
rcrl
incl
popf
hlt
decb
inc
jecxz
cmpsb
jns
roll
movsl
add
hlt
scas
push
fbstp
pop
jb
repz
call
cmp
in
scas
in
push
xchg
es
iret
jge
addr16
add
and
hlt
lcall
mov
jecxz
mov
subl
scas
arpl
nop
les
scas
pop
repz
cld
jmp
andl
add
mov
incl
fisttpl
mov
push
in
inc
in
scas
lahf
jbe
mov
iret
mov
jne
mov
decl
nop
jecxz
sahf
scas
aas
hlt
xor
jecxz
mov
jns
popl
jmp
jns
aas
add
mov
pop
and
mov
jecxz
xchg
fistpll
xchg
and
push
scas
stos
out
cli
cmpl
rol
and
mov
add
pop
out
hlt
jmp
incl
nop
rcl
scas
add
jae
pop
shrl
sarb
pop
pop
hlt
jmp
mov
jg
pop
flds
mov
adcl
bound
scas
movsb
scas
incl
mov
pusha
test
mov
fldenv
scas
inc
sbbb
in
fbstp
popl
xchg
jg
mov
repz
jg
mov
xorb
lret
ja
xchg
ret
std
fisttpl
jg
lret
push
cmp
decl
mov
push
ja
pop
loope
pop
js
scas
pusha
add
ret
push
mov
dec
add
push
cwtl
into
movsb
loope
pushl
xchg
fs
ljmp
aam
lea
mov
add
nop
add
mov
divb
jecxz
jg
push
mov
jg
lahf
aad
mov
pop
test
mulb
jg
jo
in
pop
xchg
aas
jg
nop
incl
jg
xchg
and
stos
iret
andl
clc
mov
scas
xor
xchg
les
xchg
lcall
pop
fcmovbe
scas
orb
daa
mov
ja
mov
std
cmp
idiv
jg
push
pusha
pop
aad
mov
adc
pop
jns
xchg
pop
flds
idiv
pushl
cld
cli
mov
push
pop
lcall
push
scas
dec
frstor
lock
incl
lea
pop
mov
nop
pop
movsl
shl
fldl
xor
and
xchg
and
cmc
fdivrl
xchg
pushf
xchg
sahf
stc
mov
nop
sbb
clc
jp
lds
fstps
jge
test
mov
scas
push
pop
sahf
or
push
xchg
push
jge
or
arpl
incl
dec
mov
pop
dec
es
pop
nop
pop
pop
add
xchg
clc
jge
xchg
dec
fisubrs
call
fwait
jle
xchg
clc
fdivrs
pushf
stc
ss
mov
cmp
mov
fidivrl
cmp
xchg
mov
jbe
fdivrs
lods
sub
adc
call
stos
xchg
sub
lcall
jl
cwtl
daa
aam
mov
jbe
fwait
movl
jle
imul
ret
insl
fs
jle
pusha
outsl
cmpl
or
pop
out
ffree
mov
fstpl
jg
jbe
mov
push
jae
jmp
pop
repz
xchg
in
js
je
hlt
xchg
push
test
aad
mov
or
fcomi
mov
inc
data16
cwtl
out
mov
je
dec
cmc
mov
ror
jmp
mov
and
mov
call
test
out
addr16
mov
out
push
andl
push
and
and
dec
mov
cs
lea
cs
push
ret
add
push
ret
dec
imul
punpckhdq
xchg
xchg
ljmp
lret
or
jp
pop
imul
mov
push
enter
mov
fnsetpm(287
lret
mov
ljmp
mov
outsl
ljmp
outsl
lock
inc
dec
int
add
xchg
lcall
jge,pn
cmp
inc
lods
push
lret
mov
sahf
lock
popf
dec
mov
mov
in
decl
jo
movsb
or
cmpl
pop
sahf
test
xchg
jmp
rolb
pushf
cltd
add
mov
fwait
push
movsb
mov
lcall
mov
fdivs
mov
or
test
adc
fbstp
or
mov
or
test
adc
mov
or
mov
repz
push
sti
test
or
xchg
movsl
cwtl
mov
adc
or
cmpsl
add
inc
adc
mov
jle
ljmp
adc
lahf
mov
inc
dec
popf
mov
add
stos
or
mov
or
lcall
pusha
mov
adc
mov
mov
cli
and
ja
mov
ljmp
ret
mov
cwtl
jmp
out
push
jae
rorl
cmpsl
nop
inc
mov
flds
leave
adc
xchg
xchg
movsb
jno
inc
repz
into
sbb
inc
cmpsb
push
imul
cmp
into
push
div
xchg
cmp
in
stos
inc
inc
aam
sbb
stos
fwait
inc
pop
pushf
rcrb
mov
sar
in
cmp
push
push
divl
enter
pushf
sbb
imull
jbe
mov
push
cld
lcall
mov
pop
lds
dec
adc
mov
jbe
ljmp
cmpsb
shrb
ret
add
xchg
mov
lock
ret
push
mov
loopne
pushf
test
aam
fwait
cltd
mulb
mov
hlt
push
popf
cltd
push
call
fcompl
sahf
lahf
rolb
movsb
jb
sahf
movl
adc
in
inc
push
jb
ret
in
mov
jb
xchg
mov
out
mov
bound
nop
lods
je
es
jg
fisubs
mov
stos
scas
push
mov
mov
mov
mov
xchg
out
es
xchg
scas
fs
lods
loopne
push
jo
cmp
mov
ret
pop
nop
scas
jo
push
repnz
bound
mov
outsl
loop
mov
js
scas
repnz
push
push
je
lods
fsin
outsl
push
hlt
js
lods
fs
mov
in
mov
push
nop
adc
data16
insb
fwait
pop
out
push
jbe
outsb
dec
mulb
outsb
insl
and
mov
fwait
cs
scas
dec
sahf
mov
imul
lock
sub
push
dec
jle
mov
jp
push
out
scas
insb
add
push
int
mov
popf
pop
loopne
push
pusha
and
nop
stos
push
cmc
mov
hlt
stc
xchg
scas
movsb
jo
in
aaa
mov
pushl
outsb
daa
nop
cmp
xor
xor
pop
xor
scas
xor
xchg
mov
imul
ljmp
jecxz
movsl
je
mov
hlt
xchg
lcall
nop
xchg
hlt
push
mov
and
mov
jb
mov
repnz
or
std
dec
in
lods
hlt
ja
div
xchg
outsb
test
mov
into
hlt
lods
nop
aad
lret
mov
loop
scas
iret
bound
incl
mov
jb
nop
lret
nop
xchg
mov
fidivs
je
mov
in
mov
fs
nop
cmpsl
hlt
shrl
jle
nop
mov
bound
repz
in
mov
bound
mov
jb
mov
pushl
cs
scas
pop
dec
mov
lock
mov
aam
mov
mov
mov
mov
insl
loop
scas
and
fsubrl
int
mov
scas
f2xm1
fbstp
outsb
aam
out
sbb
ret
test
fbld
call
adc
mov
call
aas
shll
xchg
mov
xchg
add
mov
mov
inc
leave
mov
lods
add
mov
mov
ljmp
jne
dec
lock
lret
mov
ljmp
cli
pusha
scas
clc
stc
mov
lcall
data16
fsubs
mov
fistps
push
mov
sub
icebp
xor
push
jns
repnz
mov
sbb
in
sbb
jb
push
xor
mov
cs
sbb
xchg
in
into
jns
mov
cld
das
cli
jge
outsb
cld
lds
mov
pop
and
das
cli
fildll
lea
xor
jp
or
decl
rolb
mov
xorb
jno
out
sbb
fcmovnbe
mov
repz
jmp
scas
push
lock
add
jge
out
and
mov
mov
mov
pop
cld
jmp
int3
scas
out
aam
cmp
daa
insl
xor
mov
or
popf
or
or
pushl
pushf
sti
sarl
cwtl
das
in
add
and
aad
lea
das
pop
lock
test
fwait
push
aam
xchg
jl
fwait
jae
sbb
and
jge
push
loope
lret
cltd
rcl
push
jge
mov
ss
subl
adc
xor
xor
push
add
jmp
dec
xchg
or
inc
fidivrs
scas
ds
sbb
xor
stos
dec
and
mov
sub
out
decb
imul
sbb
shlb
dec
into
xchg
jge
adcl
fwait
jo
mov
test
pop
add
ljmp
mov
adc
and
clc
push
jne
mov
mov
cmpsb
imul
cmp
aaa
dec
outsb
fisttpll
ret
inc
stos
mov
or
ljmp
jle
inc
fsts
mov
add
sub
jp
or
push
jp
inc
mov
shrl
push
cmp
cmp
push
pop
testl
push
pop
shlb
insb
fnstenv
in
or
add
out
stc
mov
jo
dec
push
outsl
mov
outsb
and
scas
push
call
inc
out
sti
out
inc
int
insl
lea
addr16
scas
loop
aas
out
inc
out
fdivrs
push
inc
cmc
decl
sub
dec
addr16
pop
push
xlat
popl
addr16
in
dec
sub
pop
outsb
dec
mov
lock
add
lock
lcall
mov
out
dec
mov
scas
adc
out
lock
outsl
or
dec
jo
lea
xor
sbb
pop
in
mov
cld
lcall
stc
jo
jo
out
scas
push
jo
dec
call
pop
into
dec
out
mov
outsb
fs
pushl
mov
call
cmp
xchg
outsl
mov
sar
mov
out
xchg
icebp
icebp
repnz
mov
xchg
cmp
mov
dec
gs
lock
outsb
and
push
or
pusha
xchg
scas
sar
dec
pop
push
jae
mov
jle
mov
ja
mov
leave
push
icebp
es
inc
out
lahf
stc
ret
mov
push
mov
lods
icebp
jle
dec
inc
xlat
mov
mov
out
lods
test
daa
dec
cld
push
xchg
in
lcall
jmp
scas
aas
jbe
dec
in
into
cmc
mov
jae
mov
add
fstpl
ljmp
incb
push
mov
pop
dec
out
test
cmp
std
out
adc
pop
lods
inc
jns
dec
sbb
xchg
icebp
scas
push
iret
aam
mov
mov
xor
stos
fsub
jge
add
mov
out
ljmp
pop
cmc
filds
push
lret
andb
mov
arpl
mov
pop
push
sub
jmp
xchg
mov
popa
sbb
cmc
addr16
outsl
dec
inc
ljmp
lahf
repz
jmp
jne
push
push
mov
scas
clc
ljmp
sar
jecxz
fadds
jecxz
stos
movsl
jae
push
jp
dec
enter
add
jecxz
push
jae
nop
xchg
in
dec
insl
out
mov
mov
insl
imul
nop
js
jecxz
movsb
sti
jne
jmp
jne
dec
pop
xor
jmp
stc
stos
push
push
rol
jb
xchg
push
jmp
popa
push
jb
test
sbb
cwtl
or
cld
in
aaa
loop
fs
sbb
rcrb
gs
in
push
xchg
hlt
gs
pop
imul
mov
repnz
mov
xchg
add
mov
push
mov
lock
test
pop
icebp
mov
cwtl
icebp
out
stos
loopne
or
fisttpl
jg
arpl
mov
je
jge
in
mov
mov
out
loop
jge
jb
mov
repnz
mov
jg
je
jnp
hlt
jnp
leave
sbb
test
fdiv
dec
jl
iret
mov
lcall
push
repnz
mov
pavgw
mov
hlt
arpl
imul
in
cmpb
addb
imul
in
fs
sub
jmp
mov
in
cmp
daa
data16
movsl
mov
push
out
add
lret
jp
sbb
mov
fsubrs
ja
repnz
adc
push
sbbl
ljmp
or
mov
adc
dec
in
stc
sbbb
out
jp
jmp
ret
out
jg
mov
xchg
ret
mov
cmp
lods
mov
mov
jp
jmp
ret
or
in
inc
jge
insb
stc
mov
ljmp
pop
jmp
sahf
lods
imul
pushl
ljmp
popf
in
in
rolb
inc
orl
jnp
jns
ret
jno
lea
inc
mov
pop
cmpsb
xchg
jmp
jp
imul
xor
out
ljmp
sbb
shrl
push
pop
jmp
jp
insb
popa
sbb
jp
jg
mov
nop
ljmp
push
enter
idivb
clc
aad
dec
push
fnstcw
xor
sub
lret
dec
fs
std
ret
push
mov
xchg
inc
andb
inc
js
int
mov
loope
lcall
xchg
push
or
xchg
xchg
js
ja
shlb
cli
call
add
mov
repnz
leave
dec
pusha
mov
loop
jge
jp
jne
ljmp
sahf
mov
add
mov
cmc
hlt
lock
dec
in
mov
lock
inc
xchg
adc
fisubrl
xchg
push
mov
test
fs
dec
cmp
ret
xorb
inc
xchg
fdivrs
mov
mov
pop
xchg
inc
popa
cmpsl
mov
stc
mov
orl
mov
pushl
push
or
rcrl
jnp
fwait
cld
sub
ljmp
addb
sbb
pop
jbe
into
jmp
xchg
mov
cmpsl
call
orb
or
xchg
aam
scas
mov
imul
cwtl
jmp
test
jmp
jne
pop
cmc
ljmp
subl
std
xchg
ret
jmp
mov
imul
mov
adcl
jmp
jno
imul
mov
lret
mov
jmp
mov
cwtl
shrb
mov
cmpsl
imul
mov
jmp
sti
lcall
fcmovbe
jg
imul
jle
adc
outsl
jmp
mov
jecxz
ljmp
jmp
jno
jmp
cmp
push
xchg
subl
call
push
insl
xorb
ja,pn
test
sub
arpl
fmul
cmpsb
mov
data16
lcall
jg
jnp
push
mov
push
idiv
pop
leave
sub
push
inc
test
adc
push
dec
cmp
addl
add
divl
pop
negl
add
roll
cmp
mov
lds
dec
xchg
mov
fmul
ja
into
sub
or
test
dec
add
xchg
shlb
leave
mov
jg
dec
sub
call
shll
xor
shll
fistpll
push
mov
mov
or
mov
shlb
cmp
dec
js
lret
sub
push
rcl
or
lcall
mov
xor
adc
mov
jnp,pn
mov
mov
ret
xchg
add
mov
cmpsb
rol
mov
push
add
inc
xchg
call
cmp
cwtl
xor
test
inc
add
scas
xorl
or
clc
test
decl
push
out
mov
fiadds
mov
lret
decb
sub
decl
icebp
int3
mov
lret
mov
ret
test
into
dec
mov
mov
jb
mov
ja
mov
int3
adc
cmp
lret
cmp
push
dec
dec
scas
aaa
int3
inc
out
inc
dec
cmp
and
or
xchg
daa
lret
or
lret
cmp
lret
loop
and
stos
lret
ljmp
es
mov
iret
and
in
jns
xchg
inc
cwtl
int3
pop
cmp
dec
pop
inc
push
pushl
fmul
idivl
ror
lods
mov
enter
jae
mov
int
pushl
dec
test
int3
aas
cmp
dec
repz
rorl
shlb
lret
popa
add
jb
mov
mov
mov
test
dec
dec
xor
leave
add
mov
mov
xor
dec
mov
dec
stc
movsl
lret
mov
lret
and
dec
into
ds
lret
jbe
pop
inc
in
lcall
je
ds
rorl
fisubl
notl
xorb
sub
sahf
mov
mov
sub
mov
xor
mov
xor
jge
dec
iret
push
dec
mov
movsb
dec
in
xchg
dec
push
enter
mov
dec
xor
xor
adc
dec
push
test
pop
mov
int3
imul
sahf
pushl
scas
dec
sub
stos
leave
cmp
stc
dec
daa
cmp
mov
sbb
adc
xlat
call
sbb
jae
add
jge
rcrl
mov
add
jge
test
call
push
xor
add
stc
xchg
inc
sub
xor
mov
xrelease
mov
ja
dec
jp
shl
cmp
and
add
sbb
mov
shll
popf
inc
andl
out
mov
xchg
lea
addb
insb
push
dec
leave
mov
jne
pop
test
pop
ljmp
add
or
pop
lret
insl
rolb
test
cli
push
test
push
shr
nop
push
scas
mov
lods
add
dec
mov
jg
pop
rclb
movsb
push
xchg
imul
rcrb
int
add
decl
mov
push
sbb
out
test
mov
push
cmc
mov
add
insb
out
movsl
cmp
addr16
movsl
xchg
xchg
inc
test
push
add
mov
mov
xorb
push
push
call
xor
adc
pop
scas
iret
push
std
push
push
sbbb
add
mov
jg
mov
jecxz
repnz
add
call
out
aam
xchg
decl
sub
enter
pop
test
mov
movsb
cmpsl
xor
push
movsl
push
inc
add
mov
pushf
shll
imul
cmpl
sbb
decl
inc
test
pop
shll
push
push
test
dec
and
mov
dec
hlt
pushl
sbb
add
xchg
cmc
into
test
or
adc
dec
int
push
iret
or
dec
ljmp
mov
shrb
out
mov
enter
dec
int
cs
enter
mov
jmp
sub
popf
xor
sbb
dec
pushf
pop
dec
addb
push
addr16
dec
and
movsb
dec
js
decl
cmp
pop
into
enter
jbe
inc
int
lret
lahf
dec
out
in
decl
into
sub
pop
leave
inc
mov
leave
and
daa
dec
push
adc
xor
dec
dec
jg
cmp
or
dec
test
cmp
push
imul
and
inc
dec
shll
lods
jbe
call
push
pop
jae
sbb
fcoml
in
xchg
fcmovne
dec
adc
lahf
dec
jne
aad
je
dec
sbb
rorb
mov
dec
push
rorl
lret
xor
dec
gs
pop
leave
call
ror
vxorps
mov
jg
jg
add
fimull
dec
lea
int
imul
hlt
out
decl
sbb
lret
xor
ds
inc
jle
ror
lcall
xor
push
cmpsb
arpl
std
je
dec
fistpl
mov
inc
in
lret
inc
dec
decl
incl
mov
add
jge
ret
mov
mov
in
mov
out
cli
jmp
sbb
bound
push
jbe
add
inc
imul
xor
js
mov
stos
mov
pop
mov
inc
cltd
inc
das
push
jg
jg
aas
fnstcw
cmp
lods
shlb
push
loope
mov
jg
mov
push
pushf
mov
sar
sti
mov
scas
add
mov
cs
push
add
add
jb
stos
and
mov
lcall
stos
jno
mov
dec
mov
fwait
jle
test
jmp
lods
js
mov
outsl
int3
push
aad
push
in
jnp
insl
fldt
pop
mov
scas
out
stos
mov
mov
jle
lret
ret
sahf
imul
out
scas
aam
pushf
pop
add
mov
mov
push
mov
aam
popf
mov
leave
test
jb
sbb
repz
scas
pop
ret
adc
ss
scas
push
lods
loop
push
lods
scas
ficoms
int
fldcw
push
sub
lods
lods
fnsave
lret
push
jle
ffreep
mov
out
std
cmp
scas
push
out
jmp
lds
add
mov
mov
pushf
outsl
add
adc
cs
sahf
data16
ret
lods
mov
cld
ret
lcall
pop
cs
inc
jle
mov
fcomi
xchg
scas
test
les
add
xchg
sub
mov
mov
jb
inc
jnp
cmp
mov
stos
lods
nop
mov
pushf
mov
sbb
pop
lock
jo
lods
mov
mov
mov
test
xchg
aaa
outsl
mov
mov
cltd
pop
in
mov
icebp
mov
cmp
call
lods
push
in
cmpsl
scas
xchg
stos
jne
push
inc
xchg
mov
js
out
pusha
lods
mov
idivb
enter
jp
mov
rep
mov
pop
jne
xor
mov
mov
out
scas
mov
push
stos
out
lcall
fbld
pushf
add
int3
mov
mov
add
mov
jnp
mov
mov
int3
dec
js
scas
cli
mov
iret
out
insb
mov
mov
scas
mov
out
or
mov
xchg
push
ja
lods
clc
sub
mov
enter
xchg
pop
roll
shrb
rclb
push
mov
mov
scas
mov
cs
add
test
dec
xchg
test
adcl
mov
outsb
test
mov
aaa
mov
push
xor
cwtl
adc
jl
mov
pop
pop
mov
mov
enter
cmpsb
jne
enter
mov
xchg
je
mov
cmp
pop
cld
subb
clc
mov
enter
test
cli
mov
mov
stc
mov
push
xchg
pop
std
scas
dec
jg
dec
test
mov
and
dec
pop
cmc
das
mov
cs
jp
and
icebp
or
mov
call
cmp
adc
jae
sbb
sarb
pop
insl
mov
aaa
out
mov
imul
inc
push
and
adc
test
lcall
in
lea
mov
inc
insl
lea
push
lods
mov
rcr
test
lcall
xchg
xchg
mov
test
ds
push
push
test
jno
jb
mov
fcoml
adc
data16
jmp
ficoms
xor
jae
mov
mov
out
add
lret
dec
ret
divb
lret
mov
xchg
push
aam
movsb
jle
cld
fcmovne
mov
xchg
push
or
lods
dec
lcall
loopne
adc
loope
jp
andl
adc
xorl
outsl
pusha
loop
adc
sarb
loop
dec
shlb
or
push
fidivrl
add
xor
mov
repz
add
int
bound
fsub
add
adc
popa
ret
ljmp
cltd
xchg
ds
lds
inc
inc
add
and
adcb
add
shlb
cmpsb
int
sbb
mov
mov
fidivl
lretw
int
lret
push
fdivl
fildl
ret
xchg
jp
icebp
js
inc
jnp
push
test
pushf
cmpsb
mov
mov
push
test
scas
dec
mov
push
adc
ss
aam
inc
insb
add
mov
jbe
test
mov
xor
dec
add
int3
xor
or
mov
push
std
mov
jg
mov
fistpl
mov
mov
dec
cmp
mov
inc
ret
pushl
into
push
imul
popa
push
mov
mov
mov
scas
dec
push
dec
jnp
shll
enter
dec
test
sti
mov
outsb
out
push
cmc
mov
jmp
dec
mov
imul
fldcw
mov
ficomps
imul
fwait
add
mov
in
test
js
sbb
push
fildl
lret
push
stos
addr16
mov
inc
rcr
hlt
cwtl
scas
mov
mov
sbb
cld
add
test
scas
outsl
sahf
call
test
lcall
push
adc
fisubl
dec
cwtl
ficoms
imul
adc
mov
push
stos
and
fbstp
ret
test
add
insb
sub
rorb
cmp
pop
jge
mov
or
push
icebp
inc
jge
jp
cmp
fisubrl
fsubl
imul
cmp
cmc
ret
cmpsb
and
bound
pop
stos
incl
and
fwait
in
pop
imul
les
and
jae
daa
popf
stos
ljmp
shlb
loopne
pop
mov
lcall
pop
jge
pushf
mov
jp
imul
popf
shl
sarb
sbb
ret
cmc
pop
pop
ljmp
jp
pop
fsubrl
mov
sub
fildl
xor
stc
jmp
cmp
movsb
and
push
xchg
sub
mov
or
incl
insl
push
jb
std
pop
jae
inc
jp
add
repnz
sbb
inc
bound
fldt
pop
push
mov
ret
mov
add
mov
mov
mov
fnstenv
sarb
incl
xchg
repnz
ja
push
jge
mov
jb
xor
pop
je
jb
outsl
xor
mov
mov
adc
stos
xorb
jge
xchg
cmp
xor
das
add
leave
mov
jmp
adc
test
inc
jbe
sub
cmp
cs
daa
aaa
sub
out
cmpl
mov
cli
das
clc
das
cli
dec
mov
mov
mov
test
lahf
shl
cmp
test
imul
xchg
jecxz
nop
stos
jnp
jg
add
js
adc
dec
lcall
push
or
pop
fcoms
sbb
jns
fxch
loopne
int3
xor
inc
add
adc
divb
and
inc
push
push
pop
add
xor
sbb
inc
add
mov
sbb
jb
mov
inc
and
stos
push
adc
jbe
les
inc
adc
out
push
pop
mov
fwait
out
filds
dec
push
ret
mov
incl
out
mov
dec
cwtl
lods
xchg
loopne
lods
movsb
pop
scas
scas
jmp
and
xchg
stc
dec
mov
leave
lods
insb
jb
cmpsb
movsl
mov
mov
decl
dec
test
sbb
mov
jb
nop
fs
insl
pushl
fwait
inc
shrl
lret
inc
or
fwait
mov
nop
fwait
push
mov
pushl
mov
dec
test
cld
jbe
mov
fcmovne
outsb
into
int
scas
mov
ss
fcompl
jle
div
mov
xchg
lock
popf
push
jno
scas
mov
popf
jle
imul
scas
pushf
mov
ret
lcall
jg
cmpsb
inc
movsb
xchg
cmpsb
les
les
popf
mov
jmp
cltd
mov
mov
lds
adc
addb
inc
mov
cmpsb
push
out
fsubrs
loop
jle
xchg
popa
mov
xchg
data16
into
sub
mov
xchg
scas
xchg
loope
clc
jbe
pop
push
mov
movsb
or
out
jb
xchg
jmp
fldt
movsb
into
stos
data16
push
jns
mov
push
lcall
and
dec
mov
scas
xchg
sbb
mov
les
movsl
cld
sbb
mov
push
xchg
xor
mov
jle
inc
fcmovbe
hlt
dec
mov
decl
movsl
xchg
lret
shll
push
pushf
leave
cltd
lret
cltd
jp
jns
fidivrl
scas
xchg
dec
mov
xchg
cwtl
leave
pop
add
mov
add
sbb
retw
lods
lcall
notb
lcall
mov
cwtl
or
adc
mov
insb
mov
adc
mov
xchg
sahf
outsb
iret
xlat
adcb
xor
std
fbld
dec
enter
mov
mov
mov
mov
lea
pop
ret
mov
sbb
fldt
loope
mov
jns
mov
xchg
mov
xchg
xchg
ss
pop
cld
mov
es
test
mov
jns
xchg
inc
inc
mov
sti
ja
popf
jle
jnp
aam
cmpsb
leave
pop
in
sarl
das
cmpsb
inc
and
mov
xchg
mov
in
jnp
pop
mov
in
pushf
scas
mov
or
mov
mov
daa
faddp
cmp
mov
or
mov
xor
xchg
jp
pop
jno
imul
jno
incl
jle
and
test
bnd
testl
ljmp
inc
adc
push
pop
pop
cmp
lock
test
imul
inc
cmp
adc
sar
call
addr16
mov
rep
sahf
test
sub
repz
and
lret
push
imul
cmp
add
insl
call
or
or
push
fcmovu
lcall
mov
aam
mov
inc
jecxz
rdmsr
imul
push
int
or
addl
lds
or
decl
lcall
fsubs
sub
popw
enter
fldl
or
std
inc
mov
sub
mov
lods
dec
inc
mov
mov
dec
add
xchg
lret
or
mov
fdivrs
mov
push
ljmp
jmp
sbb
cmp
push
pop
jbe
dec
stos
lcall
andl
std
sbb
out
xchg
incb
inc
sbb
adc
mov
fistl
xchg
pushl
jne
add
xchg
test
and
sub
inc
jmp
lea
in
pop
movb
incl
mov
test
mov
adc
sub
nop
lcall
repz
push
in
aaa
jb
inc
addr16
mov
xchg
jge
icebp
pusha
testb
daa
inc
insl
pop
mov
incl
sub
jecxz
mov
xchg
mov
adc
ds
or
insl
inc
inc
ljmp
fdivp
inc
out
xor
cmp
aam
enter
lea
jmp
xor
pop
test
sub
or
sbb
or
push
and
jmp
jae
and
fcompl
aas
mov
sbb
jl
aad
mov
ds
lret
aad
insl
in
cmp
xchg
bound
arpl
fwait
pop
cld
xor
int
sub
or
push
mov
inc
dec
int
inc
leave
and
aaa
out
cmp
stos
fwait
cmpl
or
fdivl
out
pop
jno
push
jb
jne
jg
dec
dec
adc
decb
mov
push
inc
sbb
sbb
jle
inc
aam
addr16
orl
arpl
flds
cs
jg
call
jle
inc
mov
push
andb
cwtl
xchg
or
mov
fstps
icebp
xchg
daa
lods
fwait
jp
sbb
pop
mov
out
mull
lds
cmp
iret
jmp
adc
push
adc
adc
xchg
data16
mov
sbb
jnp
mov
push
mov
call
lods
cli
or
push
sub
shll
mov
incl
sbb
push
push
fdivp
push
cmpsl
nop
int3
aas
mov
adc
ret
test
adc
call
addr16
or
xchg
xchg
lahf
jp
loop
push
je
pop
insb
shrl
aaa
jg
adcb
rcr
pop
mov
push
mov
fistps
into
push
orb
call
push
sti
cld
cmp
inc
hlt
or
movsl
scas
fnstcw
jno
enter
push
and
and
mov
dec
push
jecxz
or
fiaddl
cmpsb
bound
or
repnz
sub
xor
mov
jmp
pop
cld
mov
inc
and
cmp
mov
aas
inc
mov
inc
sbb
sbb
mov
add
inc
lds
repz
or
mov
idivl
movsb
decl
decb
sub
sbb
imul
outsl
iret
call
mov
xchg
cmp
dec
mov
jae
xchg
std
nop
cmp
lods
inc
stos
rorb
cmp
cwtl
mov
or
aaa
or
fs
mov
push
ds
into
adc
in
add
int3
aaa
sbb
adc
lea
sub
mov
mov
sahf
jns
or
inc
pop
jmp
inc
arpl
call
rolb
mov
sti
inc
mov
or
insl
loopne
jne
and
mov
scas
pop
dec
lret
xchg
mov
sbb
inc
xor
push
push
pusha
icebp
or
cmp
enter
movsb
jp
push
inc
cmp
inc
or
mov
sub
dec
test
jne
out
cs
insl
insl
fwait
xor
fdivr
fsts
es
movsl
ds
imul
dec
imul
out
adc
in
mov
pop
hlt
hlt
shlb
dec
repnz
mov
je
nop
mov
lahf
outsl
ror
paddq
adc
in
push
xor
pushl
test
mov
js
cld
cwtl
out
xor
and
push
mov
incl
repz
cmp
orb
sbbl
mov
std
mov
adc
ss
cmp
ljmp
sub
mov
push
insb
test
add
push
adc
es
xchg
xchg
mov
ljmp
incl
push
sbbl
xor
xchg
lcall
lcall
test
pop
rcrl
mov
stos
repz
lock
cmpsb
push
or
sti
std
dec
incl
nop
inc
push
nop
mov
scas
or
mov
scas
fdiv
or
stc
pop
jae
pushl
cld
ljmp
pop
mov
jecxz
loope
outsb
fcoms
test
test
call
cltd
bound
jo
xor
mov
cmc
mov
andb
fildll
pop
int
ret
sub
add
xor
out
sbb
aad
xchg
mov
insl
shll
dec
fidivs
addb
xor
lock
popf
mov
loop
scas
sahf
xchg
pop
mov
leave
mov
scas
out
lcall
hlt
mov
mov
cmpsl
popf
test
mov
cmp
test
fwait
lcall
mov
imul
insl
mov
mov
jns
scas
mov
fbstp
je
cmpsb
push
stos
scas
sub
sahf
push
js
subb
neg
scas
jno
mov
push
test
stos
mov
scas
cltd
push
in
cltd
aas
push
lods
test
test
push
imul
push
lods
mov
dec
xchg
xor
dec
xchg
mov
inc
test
sub
addr16
inc
mov
sub
cmp
pushl
cmp
xchg
push
bound
sbb
movsb
mov
sbb
push
push
mov
cmp
cmpsl
lods
mov
xchg
push
outsb
js
es
fs
cwtl
lods
mov
cltd
outsb
xchg
test
xor
idivb
mov
ja
sbb
xchg
mulb
sub
push
pushl
scas
mov
mov
lods
movsb
divb
jle
lcall
rol
push
aaa
push
mov
jge
sub
push
fcmovnu
push
mov
xor
pop
xchg
jge
daa
inc
les
mov
cld
mov
lcall
cmpb
orl
in
cs
subl
incl
mov
sbb
ss
mov
xchg
scas
xchg
xchg
ret
test
test
mov
jle
mov
ljmp
jle
movsb
cmp
sub
mov
test
mov
cs
jle
ljmp
pop
mov
push
movsb
out
movsb
insb
ret
outsb
mov
les
jp
cmpsb
fadds
ss
jns
cmpsb
ja
mov
out
cs
out
aas
test
xorl
test
cmpl
mov
mov
and
sahf
lret
mov
incl
lret
pop
jbe
cltd
mov
lds
fcomip
push
rep
jne
ss
mov
add
cs
daa
add
and
scas
adcb
mov
mov
sub
scas
call
ret
add
adcb
sbb
mov
push
std
jg
mov
xchg
mov
mov
iret
test
cmpsb
out
xchg
sbb
mov
jle
cmpsl
in
push
inc
mov
mov
jl
cmpsb
std
xorl
and
movsl
pusha
subb
mov
pop
fnstsw
lcall
xor
out
sub
cmpsl
mov
js
cld
in
mov
movsb
xchg
mov
mov
ja
cmpsl
in
jge
outsl
fbld
fadds
mov
xchg
scas
cs
xchg
scas
in
sbb
enter
test
pop
jge
mov
mov
mov
test
mov
jp
sar
jle
and
cmp
jns
cs
imul
in
cmpsb
xor
int3
ficomps
cmp
mov
rcr
js
sub
cmpsb
test
test
test
dec
sbb
mov
jl
call
cld
orl
jmp
test
sub
cs
js
adc
stos
into
stos
push
jnp
lods
scas
nop
cs
cmpsb
js
lods
outsb
scas
or
mov
test
ret
mov
sub
scas
adc
lods
ds
leave
jle
ja
scas
dec
jg
lea
scas
pop
rorb
scas
addr16
add
xchg
scas
push
jg
faddp
pop
test
xchg
mov
lods
cmp
mov
lods
movsb
jle
sarl
inc
in
or
xor
push
push
mov
cs
rcrl
mov
jbe
xchg
scas
ja
pop
mov
js
decl
lock
jbe
inc
jg
lods
mov
mov
pop
lock
mov
mov
jge
stos
or
in
jg
pop
mov
pop
sahf
xchg
lods
add
mov
xchg
data16
stos
popa
pop
scas
and
mov
js
lods
cmpsl
sbbl
popf
push
mov
clc
ja
stos
jno
push
das
mov
ss
ja
stos
imul
jle
ljmp
pop
test
stos
test
xchg
sti
pop
icebp
test
stos
stos
outsb
lods
adc
mov
xchg
jl
insl
stos
inc
mov
bnd
pop
test
stos
mov
shll
mov
stos
xor
or
mov
pushl
xchg
xor
lods
or
sbb
sub
sti
out
lods
es
xchg
mov
cld
jmp
jg
lods
add
or
stos
adc
cs
push
mov
scas
call
mov
jp
lods
cwtl
cmpl
test
dec
js
lds
mov
aaa
jbe
jbe
push
das
push
mov
ljmp
jp
lods
add
js
mov
xor
ja
stos
rolb
add
lcall
insl
mov
xor
test
jns
cmp
cmp
sbb
sub
jmp
and
nop
mov
aaa
push
add
and
mov
cmp
inc
sbb
addb
fists
push
enter
lea
sub
scas
jg
mov
bound
jge
jnp
ret
sub
mov
xor
std
ljmp
imulb
sub
mov
movsb
subb
mov
xor
pushl
cld
jp
mov
jp
jns
movsl
in
xor
ja
xchg
push
xorb
decl
xor
cmp
xor
jns
test
sbb
lcall
pop
pushl
mov
lea
jge
mov
aaa
jl
xchg
stos
jecxz
das
pop
ljmp
clc
incl
fs
jge
add
shrb
je
test
pop
loopne
ljmp
lds
push
aas
sbbl
mov
mov
bound
lahf
sub
mov
imul
jnp
add
jl
das
cmp
bound
shlb
mov
decl
mov
xchg
push
cmp
nop
xor
adc
adc
jp
cmpsl
mov
xchg
mov
aaa
push
jle
mov
push
jns
pop
mov
push
jns
ja
cmpsl
jle
decl
stos
xchg
xor
ja
xchg
jle
cltd
mov
mov
std
fcomip
sub
js
jne
test
push
pop
out
or
pop
add
push
dec
and
xorb
rcrb
cmp
aaa
pop
pop
xchg
outsl
fcomip
incl
mov
xchg
xchg
lcall
sahf
mov
xorb
xchg
jp
pop
pop
cmp
out
nop
int
bnd
sbb
cmpb
test
cmp
jmp
shll
iret
mov
cmp
pushl
ja
bound
jne
jb
les
pop
out
jg
jmp
test
cmpl
sarl
dec
ret
sub
sbb
lds
fwait
movsb
xchg
cmpb
jle
xchg
incl
jg
xor
js
vmovd
jg
xchg
mov
sub
ja
movsb
idivl
mov
ja
mov
fnstenv
xchg
imull
je
mov
shlb
aam
dec
clc
adc
insl
mov
loope
inc
mov
rcll
xchg
and
mov
outsb
jno
xchg
lea
pop
mov
mov
incl
sub
sbbb
dec
mov
add
jg
jle
mov
and
nop
daa
jbe
push
fs
jmp
mov
sub
adc
xor
mov
cmpsl
xchg
add
pusha
dec
lcall
xor
mov
xor
jp
cmpsb
dec
subl
test
mov
gs
jns
ret
adc
add
sub
jns
mov
xchg
xor
js
mov
ja
xchg
xchg
jle
jb
cld
ljmp
mov
ret
push
gs
mov
mov
jae
jbe
mov
pop
jne
std
call
in
xor
mov
ret
addr16
arpl
push
mov
mov
addb
mov
xchg
xor
mov
les
jb
cmpl
cmp
cmp
cmpsl
jp
xchg
jle
xor
jp
ret
outsb
mov
jb
mov
mov
sbbl
fcomip
sbb
rclb
orl
ret
xchg
decl
or
mov
pop
cmp
adc
les
lds
andb
pop
ret
sub
imul
cmp
pushl
cmc
mov
data16
mov
fsubl
add
jb
mov
pop
ret
fstl
xlat
add
test
dec
xor
xchg
jb
dec
mov
lret
and
lret
call
mov
mov
in
jp
aas
lods
out
shll
shll
stos
sub
incl
int
xlat
repz
into
outsl
sarl
add
xchg
clc
xor
call
push
or
mov
rorl
push
xchg
in
ss
cwtl
push
pop
push
mov
lcall
jg
repz
clc
mov
sub
movsl
adc
cmp
dec
call
notb
les
lcall
outsl
sahf
aaa
into
xor
repz
movsb
mov
pop
xor
sar
push
incl
hlt
push
or
ja
push
cli
lret
setae
mov
icebp
out
mov
in
cmpsb
imul
mov
dec
popf
leave
add
stc
lods
ljmp
mov
mov
mov
outsb
subb
dec
subl
shl
test
xorl
jg
cwtl
jne
mov
fildl
lods
sahf
mov
mov
out
xchg
mov
in
mov
ret
scas
mov
push
mov
jg
shr
lods
cwtl
fmull
call
add
je
xchg
xorl
decl
push
rorb
jp
xchg
ja
lret
shl
sub
pop
push
add
push
out
push
cmc
inc
pop
xlat
dec
out
jge
cld
and
int
dec
jl
popa
dec
shl
adc
jns
fbld
hlt
mov
popa
jg
sub
push
cmpsl
sbb
jae
or
out
xor
mov
mov
shlb
mov
rorb
addb
es
or
subl
jl
pushf
aaa
xchg
mov
clc
jge
iret
sub
rcl
mov
xor
sbb
inc
or
pop
cmp
or
lcall
sbb
icebp
add
sub
cmpl
mov
icebp
and
jg
call
xor
push
popa
xor
add
repz
jnp
mov
cltd
jle,pt
ret
stc
mov
decl
pushf
lods
jns
mov
hlt
lds
xor
and
aad
adc
fcomip
dec
dec
mov
sahf
test
rcrl
dec
negb
lcall
fadds
or
sub
push
enter
jne
lcall
out
jbe
ljmp
jne
mov
mov
aad
idiv
ret
lods
pop
lret
push
push
push
ljmp
outsb
xchg
jecxz
nop
popf
outsl
idivl
add
push
mov
dec
push
roll
xchg
aad
cmp
int3
cmpl
std
dec
cmp
adc
out
xchg
into
idivl
mov
push
pushl
cld
decl
or
mull
push
sub
lea
xor
gs
pop
jne
insl
and
add
lea
lahf
sub
sbb
shrl
ljmp
sub
push
lods
inc
lods
icebp
jge
jmp
jge
cmp
mov
out
mov
sahf
jae
nop
sub
sahf
mov
push
pop
out
nop
jb
cmp
aas
fldl
mov
clc
test
js
rolb
and
imul
push
push
mov
jo
dec
inc
xorl
xor
pop
das
stc
ret
test
inc
cmp
pop
xchg
or
jp
mov
or
in
and
jo
test
mov
adc
cmc
aaa
ljmp
fs
push
pop
fisubrl
lods
int3
je
pop
daa
jmp
pop
sub
icebp
xor
jg
lock
lea
inc
inc
cmp
add
or
and
and
sub
call
push
inc
dec
nop
test
and
scas
fs
adc
inc
leave
movsb
dec
sbb
mov
cmp
inc
cli
mov
inc
rclb
jmp
rolb
cmc
rol
lcall
jle
rorl
mov
call
hlt
sbb
ret
xchg
out
and
ljmp
jae
popa
lahf
fwait
test
or
ljmp
mov
pusha
in
fists
xchg
cmpsl
daa
add
xor
dec
loope
aam
lret
sarb
loop
mov
in
leave
cmp
fimuls
push
xchg
inc
cmp
scas
pop
adc
and
lock
cmc
cmp
repnz
ljmp
mov
and
hlt
subb
xchg
lock
mov
stos
mov
jne,pn
push
cmpsb
insb
inc
in
xor
sbb
negb
decl
or
inc
loope
mov
dec
lcall
xor
push
lcall
or
cmp
and
ret
cmpl
stos
mov
add
pushl
das
mov
pop
mov
cmp
sahf
add
sub
sbb
jecxz
cmp
int
adc
scas
incl
xor
sbb
es
pushl
mov
clc
clc
jg
insl
lret
mov
pop
lea
incl
aad
add
test
fsubs
sub
xor
std
call
cld
jl
test
out
mov
xchg
inc
cld
sub
xchg
push
cs
lret
int3
call
in
icebp
aad
pusha
aad
push
cs
push
fidivl
push
out
fdivrp
andb
fidivl
cmp
testl
and
xchg
dec
dec
rcl
ljmp
xchg
test
mov
mov
pop
jge
jl
pop
cs
gs
jp
cli
incl
xor
jbe
adc
fst
sub
in
cmp
mov
add
ljmp
mov
mov
aaa
xchg
movsb
xchg
je
xchg
rcrl
sub
incl
or
subl
fsubrp
sti
fmulp
adc
jns
ljmp
jne
rcrl
push
das
test
pop
stos
scas
aam
xchg
shlb
lock
fdiv
jp
cmpb
add
cli
ss
loop
ds
fdivrp
mov
mov
ljmp
test
je
sub
decl
mov
inc
pop
jp
sbb
sti
and
mov
mov
cmp
cmpsb
cmp
xchg
lahf
push
add
jge
les
idiv
and
fprem1
aas
je
jl
shrb
push
or
jbe
and
ret
pushl
inc
or
adc
je
pop
push
xor
test
fsts
mov
mov
cli
int
lahf
sbb
bound
fcomps
mov
push
inc
sub
je
pushl
fisttpll
sbb
fidivl
shlb
push
mov
xchg
sbb
mov
cmp
mov
out
dec
test
xor
ret
sub
lock
cli
incl
testb
dec
jl
sub
sub
push
test
mov
jg
mov
scas
mov
xchg
dec
pop
ss
or
sub
cmpsl
xorb
sarl
jo
push
lret
and
jg
push
iret
push
outsl
add
pop
xorb
je
push
addl
decl
cmp
mov
jecxz
sarl
mov
push
lea
inc
out
pop
add
jecxz
mov
test
lods
stos
aad
out
cli
jp
cltd
push
jge
jl
loop
pop
cld
inc
pop
and
repnz
jle
sbb
push
and
push
mov
xor
sub
incl
inc
andb
sahf
stos
icebp
lret
ljmp
stos
jg
mov
pop
cmc
cli
adc
and
ja
gs
sti
push
adcl
mov
sahf
popf
add
pminsw
out
jg
xchg
mov
or
cs
loope
sar
aam
mov
sbb
addb
push
pop
insb
adc
sbb
mov
or
sbb
cmp
mov
and
push
jg
sub
mov
jnp
cmp
repz
sub
push
sbb
cs
pop
xor
or
xor
clc
mov
pop
xchg
or
jmp
mov
enter
clc
xchg
pop
in
push
add
mov
aaa
shrl
test
in
bound
xorl
cmp
jl
cmp
subl
pushf
sbb
decb
pop
rolb
push
push
in
dec
into
mov
into
xchg
mov
mov
push
test
push
ficoms
add
dec
call
lcall
sub
clc
sbb
mov
xor
or
mov
dec
ljmp
cltd
and
adc
add
xchg
arpl
insl
xor
lea
adc
jl
mov
popa
pop
data16
idivb
jg
lods
xor
mov
pop
cld
dec
pop
jle
mov
ljmp
push
sub
push
sbb
and
jbe
push
std
call
dec
stc
iret
in
fstpl
dec
mov
push
cltd
sbb
push
and
cmp
mov
mov
das
into
add
lods
cwtl
fs
jle
add
xchg
xchg
rorb
leave
jl
and
xchg
push
stos
in
dec
lea
jb
in
mov
and
adc
outsl
xor
sti
push
and
push
dec
inc
xor
jmp
xchg
stos
mov
dec
mov
scas
mov
dec
arpl
xchg
pop
lock
fnstsw
bound
popf
loopne
mov
mov
jne
call
sbb
cli
dec
jg
lock
hlt
sbb
pop
mov
pusha
mov
incl
int3
xchg
sub
test
dec
jp
jle
fisttpll
testb
xorl
test
test
lret
mov
cmp
xchg
mov
gs
dec
sub
fs
aam
mov
in
cmc
jge
pushf
mov
aad
sbb
jmp
ret
xchg
push
aaa
and
dec
pop
or
loope,pt
sub
subb
icebp
int3
in
loope
mov
jecxz
repnz
fisubs
stos
decl
cmp
das
adc
incl
cmp
stc
dec
ljmp
or
jl
outsl
inc
mov
dec
add
mov
push
incl
pop
xor
mov
stc
fcmovu
push
dec
push
sub
add
fwait
cmp
imul
mov
mov
adc
and
ret
aam
adc
push
in
xchg
jg
jle
push
dec
inc
js
clc
add
xor
jge
or
bound
lods
push
and
cmp
mov
xor
decb
sub
lret
jl
adc
mov
mov
xchg
in
jnp
hlt
inc
mov
xchg
inc
paddusw
fisubrs
add
into
add
gs
jl
call
out
jmp
push
das
clc
and
aam
push
jae
sbb
fstpt
pop
jge
lods
push
lods
xorb
mov
jmp
and
mov
dec
mov
mov
sbb
sub
inc
test
jne
je
movsb
int
data16
inc
mov
push
cltd
jns
lds
mov
push
jns
or
in
push
or
mov
inc
add
pop
out
inc
lret
mov
push
movsb
mov
jg
jp
shlb
jle
fmul
jb
mov
shrl
and
insl
pop
rcl
dec
dec
call
std
pusha
aad
inc
inc
jmp
push
fidivs
orl
ja
ljmp
aam
adc
out
cli
rorl
pop
and
xchg
int
into
push
aad
sbb
pop
mov
push
stc
mov
fiadds
fwait
xlat
lcall
ficoml
or
sarb
pushf
xor
int
lock
cwtl
add
xchg
stos
scas
jp
mov
add
fdivs
push
jo
fcomip
pushl
rcl
pop
aad
leave
ljmp
aaa
insl
loop
sahf
jbe
mov
test
ljmp
clc
call
xchg
lods
pop
sub
xchg
jmp
stos
scas
pop
mov
addb
fsubp
scas
lcall
in
inc
jbe
mov
pop
sub
aas
mov
ljmp
enter
sub
jmp
or
jno
shlb
sbb
in
in
pop
cld
orl
inc
dec
out
ljmp
mov
cmp
ds
push
std
das
mov
int3
sbb
cmpsb
mov
pop
add
inc
cmp
cmp
int3
lock
mov
out
out
clc
jg
jae
xchg
adc
ret
aam
xor
mul
mov
pushl
popf
ret
pop
rcll
pop
adc
xchg
lods
jb
scas
lods
jb
fwait
mov
dec
jg
fldcw
jb
fwait
mov
inc
stos
nop
out
data16
neg
pop
sbb
adc
pop
jle
call
push
mov
aaa
pop
sbb
gs
and
dec
xor
add
flds
sub
xor
into
cs
cmp
and
sbb
inc
int
add
or
pushl
inc
add
cmpsb
ja
out
mov
shld
movb
test
hlt
ljmp
lds
xchg
gs
xor
dec
pop
dec
xor
sarb
mov
mov
dec
mov
dec
jp
gs
jnp
incl
lods
fsubrs
pop
loope
shr
jge
mov
incl
and
adc
sub
ljmp
pop
jns
fwait
loopne
jle
jnp
add
mov
hlt
sub
pop
ret
insb
lcall
shrl
mov
fninit
out
adc
imul
add
icebp
fwait
cmpsl
test
lcall
push
insb
test
lret
pop
adc
call
mov
jnp
mov
sub
cmpsb
or
cwtl
xchg
lock
stc
sub
fldt
lret
add
mov
js
mov
and
xor
clc
fwait
mov
push
and
loop
and
aam
fbld
push
cli
jp
into
mov
mov
clc
mov
ja,pt
xorl
decl
leave
xchg
popf
mov
or
mov
outsb
inc
scas
fs
imul
out
mov
lcall
cs
call
pop
sub
dec
jne
or
xor
call
cvtps2pi
jecxz
roll
or
loop
jbe
aas
xchg
ffree
andb
add
push
loopne
sub
push
fbld
subb
adc
sub
xchg
push
pop
inc
jge
in
and
decl
das
mov
and
and
mov
sbb
or
xor
imul
jecxz
mov
push
xor
aas
add
or
testl
pop
int
inc
push
iret
add
incl
mov
xor
xor
or
ds
pop
mov
or
ljmp
fists
enter
jns
sahf
cmpsb
jno
mov
lret
andl
adc
ljmp
jmp
lds
sarl
adc
and
jo
incl
or
inc
inc
mov
jmp
andb
fiadds
fnstsw
inc
fsts
aas
clc
repz
push
adc
pop
test
jg
call
cwtl
daa
or
repnz
jb
push
push
imul
pop
das
ja
dec
mov
scas
aam
sbb
xor
adc
daa
adc
or
lahf
xchg
jl
daa
cmp
inc
and
cli
cld
sub
pushf
in
jge
cltd
loop
imul
pop
arpl
imul
out
clc
adc
xchg
and
bound
mov
mov
and
mov
add
aam
aam
push
pop
movsl
jns
nop
dec
push
sub
pop
sbb
inc
and
push
out
popf
fwait
lcall
push
push
incl
maskmovq
testl
jmp
mov
cltd
iret
add
mov
push
pop
inc
frstor
call
xlat
xor
cs
sbb
mov
push
lret
gs
xchg
xchg
xchg
jmp
fcmovnu
jnp
movsl
stos
stos
xchg
pop
xchg
jp
sbbb
enter
fs
incl
daa
jge
int
xor
rclb
dec
sub
out
scas
or
sbb
icebp
decl
lock
inc
nop
or
sbb
ss
in
lahf
ss
push
sbb
ds
or
pusha
xorb
idivb
scas
sbb
nop
ljmp
call
mov
scas
lods
pop
lahf
adc
stc
dec
sbb
in
xor
sbbb
incl
and
nop
mov
jge
mov
adc
mov
fwait
jg
jmp
addb
arpl
imul
gs
cmp
fdivrl
data16
out
pop
fisubrs
mov
lcall
cld
je
mov
xchg
mov
pusha
icebp
subl
or
cmp
push
pushl
or
jge
js
add
pop
mov
jge
mov
scas
add
adc
ljmp
clc
das
mov
jp
je
jg
xor
es
mov
out
es
push
call
jae
nop
xchg
mov
enter
decl
sahf
xchg
pop
scas
pop
notb
shlb
test
push
jg
mov
mov
fidivrl
imul
mov
mov
insb
lds
ror
add
mov
stc
xlat
out
pop
in
jg
faddl
xor
xchg
arpl
nop
pop
nop
rorl
cli
lods
movb
lock
jp
jl
or
or
xchg
cli
loop
repz
push
mov
bound
jmp
lods
or
in
mov
outsb
push
adc
push
in
cmc
sbb
andl
xchg
hlt
xor
ljmp
in
jg
xchg
inc
in
jno
pop
add
test
mov
rol
movsb
in
mov
or
in
scas
push
push
jle
inc
xchg
ds
out
cmp
fiadds
inc
inc
ja
push
cmp
push
dec
inc
or
jne
xchg
xchg
call
and
clc
notl
in
inc
xchg
or
rcrl
add
jae
lea
inc
lret
dec
idivl
mov
mov
ljmp
inc
iret
jge
add
jno
shll
out
xchg
xor
out
sub
or
adc
lcall
addr16
icebp
xorb
out
sbb
notl
fidivrl
nop
scas
mov
pop
out
test
adc
rolb
pop
icebp
int3
push
mov
nop
in
into
cmp
aad
fndisi(8087
ljmp
inc
adc
sahf
cld
fists
add
push
push
outsb
clc
sbb
addr16
mov
sahf
loop
jmp
dec
dec
mov
pop
cmp
sbb
lcall
pusha
cwtl
add
in
mov
sahf
sbbl
xchg
push
push
or
dec
outsl
popa
cmp
sbb
addr16
js
andl
xor
ljmp
cvtpi2ps
sti
xchg
popf
mov
es
mov
clc
cwtl
lcall
mov
pop
mov
rcrb
cs
jb
mov
data16
fnstenv
xchg
scas
pop
mov
lea
dec
insb
out
out
cmp
es
push
lcall
ljmp
cmpsl
repz
mov
aam
shll
loopne
sub
shr
mov
sbb
data16
loop
outsb
incb
jae
jg
ret
test
and
dec
xor
cmp
cmp
push
insl
popf
jmp
push
lret
inc
int
xchg
xchg
jge
stos
int3
xchg
jg
mov
mov
jle
push
ja
ljmp
aam
sub
mov
or
inc
jecxz
lea
adc
rclb
cld
call
arpl
cltd
repnz
stc
bound
lahf
outsl
pop
pop
cmp
pushf
xchg
loopne
xor
adc
sahf
sbb
mov
push
mov
jg
out
xor
gs
jle
in
jle
jbe
subl
incl
dec
in
out
cmp
pop
data16
xlat
loopne
jg
popa
sub
ljmp
pop
sbb
repnz
loop
jle
bound
jg
icebp
sarb
fadds
add
adc
mov
in
pushl
pusha
in
mov
ljmp
add
jle
inc
jne
jle
in
sbb
cmc
hlt
jg
pop
subb
cmp
aaa
std
cld
gs
sbbb
xchg
addb
push
inc
popa
pop
rorb
adcb
and
push
repnz
push
loopne
jle
sbb
or
xor
aaa
cld
jmp
sti
aas
cmp
imul
push
sahf
loop
mov
inc
xchg
mov
jb
je
ljmp
dec
cmp
subb
push
fs
ljmp
jg
sub
add
mov
fistpl
in
bound
sbb
sbb
jle
lods
or
or
fnstcw
mov
jg
sbb
fildl
lods
jg
jecxz
jg
arpl
cmp
sahf
das
repz
jae
add
insb
subb
repz
sbbb
cld
sbb
jge
pop
jg
fs
hlt
push
jg
je
shl
xchg
add
mov
jecxz
jbe
pop
orb
addb
adcb
pushf
xchg
jae
addb
andb
aam
dec
in
je
push
cmpsb
fstpt
repnz
arpl
aas
jecxz
and
ss
aam
jmp
or
push
xor
sahf
jg
repz
jg
arpl
jecxz
jg
je
xorb
cmp
jae
loop
push
fwait
push
mov
aad
in
hlt
cmp
push
pop
and
addr16
repnz
out
fstpt
rolb
sub
jae
adc
mov
ret
imul
outsb
xor
pop
sbb
call
pop
repnz
out
imul
push
push
movb
ljmp
sahf
es
mov
add
loop
pop
cmp
or
add
iret
lock
incb
jmp
imul
or
or
scas
out
jecxz
outsb
loopne
dec
int
jmp
scas
adc
jg
scas
cli
ljmp
nop
or
dec
xchg
fwait
push
xor
xor
scas
ljmp
out
clc
int
aas
xchg
pop
daa
adc
adc
clc
repnz
in
lcall
lods
in
sub
jp
pop
push
std
popa
gs
int3
jmp
xor
lcall
data16
xchg
jmp
imul
cmp
imul
or
icebp
hlt
call
imul
sub
adc
mov
add
push
loopne
lock
hlt
insb
je
push
out
push
lcall
jp
pop
out
out
outsb
pushf
int
out
xor
jo
sbb
push
outsl
ljmp
out
pop
jo
cmp
inc
add
ds
hlt
cwtl
outsl
insb
fmull
cmp
outsl
sbb
mov
adc
out
loope
jno
leave
fucom
test
scas
jo
sbb
jbe
shlb
jmp
jecxz
adc
xchg
ljmp
jb
and
lock
xor
pop
movb
sahf
add
or
fnsave
jns
clc
outsl
loop
out
xchg
push
pusha
pop
adc
dec
ljmp
clc
ja
adc
cmp
jns
ljmp
imul
dec
clc
decl
decb
loopne
dec
in
jmp
pop
or
mov
outsb
push
xchg
adc
add
nop
mov
push
mov
sub
ljmp
outsb
adc
insb
decb
or
scas
outsb
loop
and
push
test
in
shll
sti
rcrb
in
pop
cmp
aas
xor
jns
jmp
cmp
jnp
xor
adc
push
movsb
sti
jb
orl
aaa
jmp
lods
call
daa
inc
xor
or
jno
mov
test
out
xor
imul
stos
inc
das
lcall
cmp
cmp
pop
inc
jae
int
pop
xor
xor
sub
decl
pop
sub
adc
insb
fadds
fucom
lods
call
cmp
cmp
mov
ljmp
or
mov
cltd
pop
sub
pop
add
inc
orl
lret
jg
jmp
jecxz
cmpsl
lock
push
pop
or
and
push
cli
xor
cmp
push
ljmp
mov
popa
cmp
xchg
pop
in
lock
lods
fs
xchg
inc
arpl
pop
cld
cmp
pop
movsb
mov
xor
dec
std
daa
dec
push
stc
sbb
aad
pushl
out
xchg
mov
js
lods
insb
rorb
xor
das
jge
mov
jno
xchg
jns
sbb
stos
dec
xor
ljmp
cmp
pushf
inc
push
mov
inc
adc
orb
push
incl
mov
xor
js
or
pusha
dec
and
cmp
cmc
sub
jmp
imull
inc
push
incl
ss
lcall
loopne
in
in
enter
push
push
xor
into
es
cli
dec
hlt
cmp
xchg
sbb
push
push
ds
push
js
sub
clc
jl
pushf
insb
add
dec
sub
adcb
hlt
pop
xor
cmp
jmp
xlat
and
jg
and
rcrl
mov
xor
pusha
pushl
dec
test
cmp
sub
aas
rorl
and
xlat
xor
push
and
and
call
in
add
adc
clc
dec
test
clc
add
mov
scas
jb
out
push
outsb
enter
pushl
ss
adc
xchg
sarl
ljmp
jns
cmpsb
push
xchg
sub
mov
add
fidivrs
into
push
add
push
hlt
dec
sub
cmp
aas
mov
push
or
inc
dec
rorb
lods
loopne
stc
gs
fbstp
lcall
fwait
push
lods
pop
call
cld
jmp
add
into
inc
nop
jnp
test
xor
mov
loopne
dec
jp
push
lock
test
push
out
fidivs
mov
fmuls
lret
cmp
mov
push
gs
negb
insl
ret
test
inc
push
shll
cmpsw
ja
push
pushl
js
mov
lret
scas
lea
out
push
lock
inc
insb
stos
scas
test
cmpsl
cs
jmp
lea
adc
sbbb
mov
xchg
dec
xchg
or
add
popf
xor
sub
call
push
sub
cmc
adc
inc
sahf
jae
push
icebp
jns
mov
push
imul
fcmovne
push
jmp
jle
mov
arpl
mov
mov
enter
sar
stc
lcall
subb
mov
inc
stc
push
outsl
cmpsl
fisttpll
jg
xchg
movsl
sbb
into
movsl
push
es
call
ss
test
ficomps
aam
xchg
jne
xchg
xchg
leave
ja
inc
pop
mov
out
lret
call
mov
mov
and
adc
enter
mov
mov
repz
jmp
mov
ret
mov
stos
cs
in
fnstsw
mov
mov
daa
mov
rcrl
jg
pushl
push
out
push
test
fcomps
add
xor
fcmovnu
aad
inc
xor
leave
push
push
loopne
push
enter
jnp
cmp
lods
dec
cmc
pushl
jo
cmp
out
mov
not
push
dec
xchg
sub
pop
dec
push
pop
ja
jge
lcall
pop
psadbw
je
pop
shrb
aas
fisubrs
dec
mov
xchg
xchg
xlat
sahf
lret
cld
xchg
dec
or
xor
mov
sahf
mov
dec
add
sub
push
adc
test
loope
or
lcall
lods
repnz
push
adc
ljmp
push
push
mov
incb
mov
fiaddl
add
mov
dec
call
xor
scas
and
jno
push
sub
adc
jl
out
lcall
mov
rcrb
xchg
push
mov
iret
push
stos
cmp
loop
push
xor
cmp
mov
dec
push
cmp
mov
sub
jg
movsl
mov
mov
jne
pushl
xor
out
cmpsb
fdivrl
jns
call
loop
pop
fsubl
push
testb
sbb
icebp
stos
dec
decl
mov
xchg
mov
in
pop
out
cs
add
inc
mov
cmp
ljmp
scas
ds
scas
leave
fidivl
outsb
pop
jecxz
mov
sub
dec
sarb
cmc
pushf
jno
ljmp
dec
aad
pop
jno
les
repnz
push
adc
popa
ss
lods
call
mov
pop
push
cmp
jns
mov
into
jo
and
mov
and
inc
cmp
adc
add
inc
add
scas
jbe
repnz
incl
cltd
in
mov
cmp
incl
jecxz
xor
scas
mov
fildll
pop
and
cs
in
call
lea
lret
loop
mov
int3
adc
inc
call
das
fs
rcr
jmp
int
mov
cld
pop
outsl
lcall
loopne
xor
cmp
xor
lahf
dec
inc
mov
arpl
lcall
sub
push
shll
add
xchg
mov
lahf
xor
incl
pop
cmpb
in
mov
aaa
jmp
fdivl
push
fwait
lds
stos
ljmp
out
add
in
in
movsb
ss
cmp
mov
call
mov
inc
push
sub
mov
sub
push
and
clc
lcall
add
cmp
fstpt
push
mov
loopne
into
sbb
pop
cld
inc
and
mov
sbb
pop
jne
fs
nop
into
dec
popf
inc
mov
pusha
and
sbb
call
mov
sub
fwait
loop
mov
mov
xor
add
roll
pop
dec
test
ljmp
aaa
popf
jae
cmpl
sub
adc
and
pop
cmp
lcall
pushl
pushf
and
and
xor
test
cmpsb
mov
xor
cli
ljmp
mov
aam
sub
movsb
scas
dec
xor
aam
aam
sarl
xchg
dec
loop
call
movsb
xchg
and
adc
std
testl
popw
ret
inc
ljmp
std
mov
sub
mov
dec
jmp
push
and
mov
sar
xor
cmp
in
insl
mov
push
andb
add
xchg
pushf
mov
lret
push
fistps
aas
sbb
test
outsb
lret
mov
sub
push
repz
mov
sbb
loopne
xor
arpl
cmp
jo
jns
cmp
fists
dec
data16
push
aam
js
nop
sub
in
fdivl
out
sub
dec
int3
arpl
push
sub
lret
or
or
dec
addr16
call
cmp
gs
mov
cli
fidivrl
repnz
loopne
inc
sub
ret
ds
xor
sub
xchg
imul
jecxz
mov
jl
or
lcall
aam
int3
sbb
out
iret
mov
cli
xor
sbb
or
jl
mov
arpl
shrl
fadds
fsubl
out
clc
jmp
xchg
imul
mov
jl
dec
xchg
fiaddl
xor
sbb
call
jl
cmp
mov
fidivs
cld
daa
cmp
push
movsl
pusha
fimull
test
adc
lcall
pop
iret
push
push
jae
sbb
in
scas
sbb
test
iret
cmc
cs
pop
sbb
decl
and
push
push
dec
sar
jns
mov
ret
mov
mov
mov
pushl
std
mov
call
ret
jle
pop
lods
and
pop
and
jg
sbb
push
push
or
add
mov
mov
add
pop
bound
scas
clc
pushl
bound
lret
adc
pop
mov
out
cmp
testl
fimull
lcall
repnz
sbb
ja
xchg
xchg
cmpsb
decl
jl
mov
sub
jmp
jo
adc
test
sbb
jge
pop
lock
inc
dec
in
vfrczpd
mul
pop
rol
push
lods
pop
loop
insb
fdivr
ljmp
subb
add
push
and
or
pushl
pop
add
pop
jo
outsl
jb
mov
adc
adcb
lcall
inc
in
adc
test
mov
and
sbb
and
lods
mov
es
sbb
std
incl
or
xchg
inc
es
inc
subb
mov
lcall
jb
xchg
fldt
fdivp
inc
test
push
scas
xchg
xor
lret
clc
int
incl
popf
add
add
or
pop
pop
clc
test
add
roll
and
jmp
js
dec
push
aam
adc
daa
imul
cmp
add
cmpsl
incl
pop
inc
push
dec
subl
into
adc
jnp
push
mov
sbb
inc
mov
call
notl
fcmovu
pop
shll
lods
and
mov
and
aad
sub
sarl
sbb
cs
out
scas
jl
scas
pop
inc
loopne
leave
jns
mov
jge
inc
jnp
shrl
movhps
pop
icebp
pushl
das
jo
ret
push
or
pop
jg
dec
int
pusha
cmp
clc
sub
fdivs
jg
push
lock
lahf
lret
sarl
pop
mov
ljmp
xchg
out
int3
fmull
and
mov
ret
adc
test
jp
adc
jl
or
fisubl
push
mov
push
cld
decl
inc
adc
jmp
shr
sbb
mov
nop
insl
cmp
mov
idivb
outsb
xor
in
ja
pop
lcall
or
xor
mov
mov
push
inc
dec
call
aaa
dec
aaa
int
and
push
inc
repnz
dec
and
xor
add
aaa
dec
push
jb
jg
jmp
sbb
sub
fmuls
testb
out
sbb
inc
ret
lret
aad
add
incl
pop
aaa
mov
adc
inc
loop
mov
loop
adc
adc
out
gs
decl
mov
jle
inc
mov
lret
pop
cmp
dec
dec
mov
push
inc
cmp
mov
inc
scas
inc
std
std
es
mov
push
xor
cmc
pushl
pop
xor
push
or
outsb
cld
mov
xchg
cmp
cld
sbb
adc
aam
sub
xor
lcall
insb
sbb
push
iret
dec
rorl
jne
mov
shl
faddp
ss
sbb
test
mov
cld
jp
fstp
lcall
mov
dec
out
sub
jne
es
test
jmp
xor
xor
xor
mov
fsubl
lods
push
loope
incl
je
sbb
push
or
xor
inc
imul
inc
mov
popf
sub
out
lret
xchg
xor
pop
int
and
push
sub
and
enter
xor
inc
imul
ljmp
cmp
std
outsl
mov
adc
xor
xor
pop
es
jnp
xchg
jg
pushl
iret
and
int3
jb
push
jb
jmp
and
push
pop
call
fwait
cli
pop
add
pusha
xor
iret
sbb
sarb
push
das
cli
call
pop
mov
xchg
adc
aaa
loopne
xor
das
xor
cmpsb
outsl
push
pusha
aaa
ds
call
out
xchg
dec
pop
shl
dec
xor
arpl
repz
ret
cmc
push
push
push
adc
call
jno
lret
mov
push
inc
imul
add
lret
mov
ss
addb
ljmp
jmp
outsb
push
jg
aas
repz
sub
inc
outsb
jmp
test
mov
int3
mov
inc
cmp
cltd
push
sbb
cs
call
fninit
mov
loop
or
add
bnd
mov
clc
insl
jecxz
sub
and
decl
sub
push
add
ljmp
ss
cmpsl
icebp
cmp
cmp
in
jg
ds
add
scas
sbb
rcr
push
pushf
aad
flds
cmp
rcll
dec
mov
sbbb
push
fs
into
jl
inc
sub
mov
movsl
lret
sahf
loop
or
out
subb
test
jb
dec
add
std
mov
pop
xchg
es
addr16
stos
mov
pop
sub
cmp
in
sbb
push
scas
mov
dec
imull
mov
add
sbb
mov
out
lahf
pop
dec
inc
stos
dec
test
dec
leave
push
lock
push
divb
decl
push
add
aas
js
test
push
nop
mov
enterw
divb
fidivl
call
das
and
xor
xchg
xor
rcll
pop
mov
outsl
mov
lods
xchg
inc
xor
incl
push
scas
mov
repz
cmp
push
aad
mov
jecxz
jmp
ret
scas
mov
mov
filds
lea
fstl
js
fsubrs
stc
sub
ss
xor
scas
test
dec
lcall
pusha
ss
aad
jg
sbb
das
fistl
test
jo
decl
cmovbe
leave
ds
cmp
or
jmp
xchg
and
pushl
inc
test
iret
data16
sbb
aas
iret
xchg
adc
lret
int3
loopne
xchg
aam
cmp
jmp
dec
cmp
out
test
lods
dec
mov
mov
xor
mov
pop
faddl
cmp
or
ljmp
scas
into
lcall
divb
jmp
cmp
mov
decl
bound
cmp
ja
push
hlt
xor
sbb
fs
outsl
pop
cmp
call
jg
lahf
fmul
dec
jge
inc
push
push
rorb
and
push
xchg
sahf
push
sub
pushl
adc
andl
shrb
xchg
push
call
adc
fst
jg
sub
mov
idiv
cli
adc
mov
les
mov
ljmp
test
fcomps
sbb
jl
out
and
inc
inc
mov
sahf
mov
mov
scas
clc
mov
pusha
sub
jg
iret
pop
dec
pushf
adc
aam
out
xchg
or
mov
js
push
xchg
push
or
incl
std
xchg
mov
stos
adc
push
jl
sbb
and
fiaddl
mov
sub
rcll
int3
jle
pushf
addl
and
lea
mov
in
pop
mov
cmpl
addr16
test
bound
sbb
push
in
cmp
pop
test
int
sbb
cmpsb
inc
int
pop
hlt
dec
cmpsl
mov
popa
xlat
add
divb
pop
aad
pop
xchg
jg
call
mov
sub
mov
push
cmp
xor
add
push
pop
mov
iret
mov
push
jmp
and
pop
jmp
dec
push
repnz
jb
lods
lret
outsb
sbb
aaa
cld
dec
ds
in
adc
dec
ficomps
icebp
add
mov
push
push
dec
cwtl
mov
lret
dec
mov
and
adc
aaa
xor
jnp
push
dec
mov
inc
insb
int3
adc
sub
xchg
xor
incl
xchg
xchg
push
mov
fldenv
pop
in
xchg
lret
repz
sbb
ljmp
push
lcall
push
das
dec
fnstsw
xchg
daa
test
test
dec
sti
xchg
pop
jp
adc
in
mov
popf
test
dec
imul
xchg
push
call
scas
fdivl
insl
mulb
subb
mov
in
xchg
ljmp
mov
xchg
ret
cmpb
popa
and
mov
les
fs
lret
sbb
call
xor
and
icebp
int
push
inc
mov
xchg
and
hlt
int3
mov
adcb
xor
xor
jmp
je
daa
mov
data16
add
jecxz
lret
xchg
test
in
mov
mov
mov
xlat
push
shll
jbe
loop
inc
jmp
incl
hlt
inc
mov
xchg
femms
lret
jl
addr16
sbb
pop
mov
cmp
mov
inc
add
xchg
ficompl
inc
add
dec
rorb
call
js
cmp
imulb
sub
ds
int
mov
gs
lcall
cld
jmp
inc
scas
lret
cmpsl
xor
or
addb
inc
mov
call
xor
fcmovne
mov
aam
cmp
xor
mov
push
scas
clc
or
pushf
and
ja
std
jmp
and
addb
aaa
xchg
incl
cltd
push
push
lds
mov
xor
ds
add
scas
push
iret
jle
or
jg
in
sbb
movsb
add
xor
xor
mov
add
pop
flds
in
decl
xor
mov
jae
out
mov
sbb
aam
inc
mov
xlat
cli
cltd
xor
cmp
lahf
gs
cmp
test
cmpsb
push
pusha
jmp
add
mov
dec
cwtl
aad
es
push
mov
mov
dec
in
js
sub
outsl
es
push
sbb
cmp
mov
and
mov
push
xor
jmp
and
scas
mov
sub
or
inc
ds
push
lret
push
jp
cmp
mov
pop
lods
push
cmp
xchg
xchg
sbb
jo
push
out
es
ljmp
lcall
ljmp
sarl
bound
mov
andb
xor
push
scas
inc
mov
pop
mov
cltd
mov
sbb
rcll
add
jg
sub
inc
mov
aas
ds
movsb
push
or
xchg
or
push
push
lcall
xchg
mov
add
incb
mov
lds
xor
lcall
dec
stos
or
sahf
xchg
test
lds
icebp
pushf
sti
jl
ror
scas
pushf
sub
decl
scas
cmp
jbe
lods
push
xlat
cmp
inc
mov
subl
imul
cmpsb
lds
lcall
shl
pop
outsl
cmp
push
in
test
mov
es
lcall
lods
ds
adc
daa
cmp
pop
ljmp
mov
xchg
and
lods
es
call
stc
push
mov
push
icebp
push
mov
inc
inc
cmp
mov
std
jne
out
push
clc
push
adc
jae,pn
dec
inc
xor
jmp
pop
out
push
lret
scas
daa
and
call
ret
out
arpl
ja
loope
fnstcw
sub
es
popf
loopne
xor
and
lcall
pusha
sub
mov
in
adc
jge
mov
sbb
cmp
add
jmp
sbb
fldenv
leave
jnp
jecxz
sbb
and
sub
jns
hlt
or
or
incl
and
rcrl
addr16
pushf
pop
mov
aas
lret
cmp
jg
ljmp
insb
xchg
flds
jbe
push
das
repz
pop
push
adc
adc
fcomp
sbb
call
sub
push
inc
mov
int
xchg
loope
mov
out
dec
ss
or
out
mov
fidivs
mov
adc
mov
dec
jb
and
sub
push
sarl
inc
and
pop
pop
cs
jmp
aad
cmp
inc
mov
xchg
sbb
dec
xchg
adc
inc
inc
dec
jno
aaa
and
das
shl
or
aad
jnp
popa
out
mov
ror
and
decl
lock
hlt
js
jl
pusha
imul
add
xor
insl
mov
jmp
cli
incl
repz
inc
lea
xor
fidivrs
sbb
sti
mov
and
or
mov
inc
xor
aas
mov
xor
outsl
push
xchg
adc
lcall
mov
lock
in
dec
call
mov
test
in
clc
pushl
xor
rclb
clc
push
fs
add
insb
fstps
mov
ret
lods
dec
ljmp
sti
xchg
xor
ja
or
jmp
inc
ret
cli
sbb
add
mov
call
scas
and
mov
push
adc
mov
mul
pop
and
fimull
jg
movsl
xchg
xor
xchg
aas
enter
daa
mov
mov
test
xchg
push
out
lods
mov
pop
cld
scas
adc
push
push
sbb
test
daa
add
xor
in
stos
ljmp
push
mov
movsb
cmp
sbb
lret
add
cmc
dec
fs
call
xor
sub
mov
movsl
gs
lods
push
sahf
pop
cmp
sahf
xor
pushl
incb
cmp
dec
out
inc
ljmp
fidivl
adc
sbb
add
pop
imul
test
pop
cmpsb
test
icebp
in
lods
sbb
xchg
push
lcall
or
or
pop
paddw
xchg
cs
call
push
sub
lods
adc
imul
dec
jecxz
into
lcall
pusha
mov
das
xor
stos
inc
leave
shrl
xor
jno
push
cmp
pop
mov
rcr
pushl
sbb
adc
es
lods
xor
push
jmp
jmp
add
imul
mov
dec
addr16
mov
mov
inc
incl
aam
sub
sbb
sub
push
cld
outsb
lock
sbb
jbe
clc
mov
scas
sbb
lds
fdivl
sbb
imull
aas
pop
mov
lea
fildl
xchg
ss
sub
ret
xor
sub
and
pusha
out
or
pushl
cld
pop
call
push
jns
sbb
cmp
int
push
ja
inc
or
or
dec
ret
xor
cmp
cmp
pop
mov
jg
ss
push
inc
call
gs
testb
or
or
jbe
push
mov
pop
inc
add
adc
ljmp
push
dec
mov
xlat
arpl
lods
sbb
xor
mov
or
pushl
push
mov
adc
cmp
or
add
testl
out
sarb
sub
jns
inc
push
dec
decl
inc
jle
push
sbb
shrb
out
jp
push
cmp
and
mov
decl
mov
cmpsl
push
fadds
hlt
push
es
mov
cld
in
jp
test
jmp
lods
orb
loopne
loop
jne
push
in
adc
sub
cmp
int
push
das
inc
das
es
lea
std
adc
arpl
rorl
imul
mov
jns
rorl
out
lcall
decl
incl
pop
and
and
sbb
jo
sarl
jmp
sbb
test
push
in
pusha
and
hlt
jg
fmuls
mov
mov
adc
mov
aas
jge
clc
sub
lcall
cmpl
ss
jg,pt
in
mov
adc
call
mov
ret
cmpsl
cli
insb
pusha
xchg
mov
cmp
xor
es
push
js
lods
cmp
xlat
incl
jg
cmp
ret
sti
out
push
cmp
ret
fisubrl
add
jge
or
and
pop
or
mov
divl
push
sti
adc
outsb
inc
xor
inc
push
push
int
call
ficoml
das
pop
jo
pop
cmp
push
mov
maxps
fsubr
add
call
sub
movsb
lods
sbb
push
and
jmp
adc
xorl
lcall
adc
arpl
add
xlat
loope
scas
pop
lret
push
xchg
pop
lcall
int3
int
aam
add
shll
add
xor
xor
lahf
faddp
outsb
mov
mov
addr16
rcrb
push
popf
push
test
sub
push
dec
cmpsl
in
inc
mov
ljmp
sar
cwtl
adc
push
scas
mov
pop
sbb
pop
sub
and
ud0
jmp
xor
sarb
cli
jns
inc
jb
mov
stos
jg
dec
jae
orl
xchg
mov
mov
call
mov
stos
cmp
cmp
rclb
push
sbb
or
sub
push
cld
ljmp
jg
add
add
pop
lcall
xor
mov
fwait
xchg
shl
inc
cmp
xchg
mov
je
in
mov
dec
cli
fnsave
mov
lret
inc
xchg
xor
and
in
xchg
jl
adc
mov
add
sub
ja
pop
lahf
ljmp
jbe
int3
and
pop
dec
dec
sbb
loope
js
xchg
mov
sub
mov
outsl
cmp
or
pushl
adc
gs
dec
cs
insb
cmp
sbb
mov
stos
sbb
cld
or
call
add
in
inc
cmp
scas
test
std
pop
ljmp
stc
cmp
xchg
xor
fwait
dec
cltd
inc
testb
call
jl
xchg
sub
xchg
movsb
sbb
rcll
das
mov
call
mov
imul
xor
adc
test
push
cmp
stos
mov
jmp
cmp
hlt
push
daa
test
xor
jbe
xorb
ljmp
and
test
ja
mov
rcl
js
mov
mov
cld
sub
mov
mov
ljmp
ds
fidivrs
jnp
xchg
ror
mov
arpl
or
sub
sar
dec
pusha
popf
sub
push
xor
inc
ja
es
ljmp
lcall
in
enter
aaa
and
add
sub
xor
std
lret
fdiv
or
aas
jg
mov
cwtl
jecxz
sti
stos
decl
idivb
push
inc
push
or
stos
lea
mov
lds
in
incl
lods
fisubrs
out
or
cs
or
or
push
icebp
scas
clc
cmp
testl
lret
lods
push
pop
sbb
out
xor
ja
add
xchg
cmpsl
fisubs
pop
inc
add
jg
stos
push
push
mov
outsb
shrl
add
andb
push
lods
jg
fwait
ljmp
sub
jp
das
lret
sub
insl
inc
mov
sti
or
aas
arpl
fimull
dec
or
jmp
jl
mov
not
mov
aaa
repz
sub
mov
dec
lcall
ds
jo
or
xor
sub
jns
mov
mov
loope
stc
dec
cs
decl
aas
icebp
sarb
dec
and
sbb
rcrb
adc
sub
decl
daa
pop
mov
dec
cmpsl
addr16
xchg
pop
mov
xor
or
outsb
push
cmp
fwait
mov
lcall
stos
jle
jle
and
das
or
jp
jo
ljmp
ret
pop
sub
jo
and
and
dec
imul
push
cld
push
sub
sbb
add
or
xor
xchg
mov
xor
pushl
xor
out
fsubrs
push
jne
or
pop
mov
aad
insl
mov
mov
ds
call
lock
push
pop
cmp
pop
mov
xchg
mov
scas
aam
repnz
push
cwtl
mov
test
call
popf
repnz
std
mov
pushf
adc
mov
mov
enter
mov
dec
scas
inc
lods
jp
cld
xor
ljmp
mov
pop
in
mov
and
or
cmp
push
jge
xor
jno
xor
fwait
das
cmp
inc
in
xchg
sub
push
insb
xor
inc
mov
roll
mov
adc
cmp
mov
mov
push
ret
rcll
movsb
test
repnz
xor
divb
loopne
rorw
inc
aad
mov
push
xor
call
test
jecxz
jg
hlt
and
adc
adc
fcoml
ljmp
inc
inc
dec
in
and
add
xor
adc
fsubp
test
adc
cmp
test
sbb
add
mov
incl
scas
push
mov
leave
ja
data16
mov
dec
sbb
in
lahf
imul
call
jno
pop
inc
dec
jl
mov
push
sbb
in
xor
and
push
cmp
jg
adcb
pop
lock
jo
cmp
jmp
mov
sbb
push
outsb
mov
pop
nop
cmp
or
cs
cmp
xchg
fcomip
dec
mov
incl
inc
xor
sbb
xor
lds
adc
jg
sbb
loopne
lods
test
inc
mov
and
dec
push
dec
icebp
jb
call
jmp
or
lcall
cmp
dec
add
clc
pushf
iret
lret
jmp
daa
add
daa
fwait
gs
nop
pop
lds
add
ljmp
mov
and
pop
gs
inc
outsl
fnstcw
addr16
pop
pop
in
dec
pop
pop
sbbb
inc
call
loopne
mov
inc
das
es
cmp
and
mov
int
pushl
and
aad
stos
mov
sub
sub
sbb
incl
ret
in
test
and
sub
xor
idivl
push
jns
cmpsl
cld
adc
mov
cltd
fwait
loopne
xchg
mov
jbe
lret
sub
push
dec
popf
and
in
jg
fcoml
in
hlt
dec
repnz
sub
xor
stc
jl
mov
iret
out
aas
add
mov
dec
mov
loopne
test
inc
or
and
decl
and
ljmp
pop
sub
stc
in
jmp
stos
sti
repz
pushl
jecxz
cmpsl
pop
xor
test
in
mov
adc
add
xchg
es
sbb
pushf
xchg
repnz
sti
sbb
dec
iret
dec
xchg
bound
dec
cmp
ljmp
clc
jg
std
pop
cmpsb
mov
fwait
mov
fidivs
lret
xor
cmp
jmp
cmp
inc
scas
inc
enter
push
dec
push
pop
pusha
fisttpl
xor
xor
mov
mov
incl
test
sub
popf
push
push
and
mov
dec
sub
aas
in
sar
incl
sbb
adc
mov
jge
or
sub
aam
and
insb
mov
cld
test
jg
xchg
cmp
lods
xchg
adc
cs
inc
int
mov
jle
add
dec
cmp
mov
adc
mov
dec
cli
incl
xor
or
jle
jp
dec
fcmove
loope
sub
scas
cmp
ljmp
leave
cmp
fdivrs
pop
sub
dec
mov
push
ficomps
lcall
scas
les
mov
in
imul
shl
cmc
mov
idiv
outsl
cli
jg
push
lret
mov
std
ror
and
mov
andl
std
fwait
jno
std
push
push
and
mov
mov
loope
repz
push
lods
cmp
inc
ret
jg
adc
adc
mov
mov
and
call
test
or
ljmp
mov
push
dec
sbbl
daa
dec
loop
bound
sub
cmp
dec
xchg
mov
mov
cmp
fadd
test
dec
xchg
mov
mov
jmp
add
call
push
lret
cld
push
sahf
mov
mov
mov
mov
or
add
hlt
xchg
cld
dec
dec
adc
dec
or
nop
inc
mov
incl
shrl
mov
ljmp
mov
mov
add
lods
or
leave
ds
test
sbb
jg
test
sbb
xchg
cmpb
mov
pop
jo
decb
push
ss
ret
insb
cli
sbb
jle
push
call
inc
or
ds
cmp
scas
sub
imul
lcall
mov
jmp
pop
cmpb
cmp
mov
push
lods
jns
xchg
jo
and
and
aas
cli
mov
adc
push
int
dec
push
and
and
lcall
pop
clc
fstpt
sarb
aad
sahf
sbb
outsl
in
mov
push
andb
dec
add
sub
fldenv
cmc
out
lcall
dec
fisubrl
cwtl
bound
int3
movsb
stos
and
icebp
lcall
and
insb
jne
test
adc
bound
and
lret
lcall
mov
ficoms
clc
mov
sub
jecxz
adc
xlat
imul
sub
pop
cmc
mov
dec
mov
mov
cli
mov
shrb
sarb
subb
sub
jmp
jg
sbb
pop
outsb
popl
jl,pt
mov
push
jl
fsubrl
sti
mov
mov
out
mov
les
add
jecxz
daa
daa
xchg
sahf
push
incl
xchg
rcpps
ss
sbb
adc
push
adc
dec
xchg
loopne
sbb
lcall
cli
adc
add
pop
xchg
arpl
xchg
fwait
mov
adc
xchg
jns
lret
in
mov
and
stos
cmp
stos
out
cmpsl
out
push
push
stos
scas
cli
rorb
add
incl
push
fstpt
cmc
clc
push
stos
cmp
xadd
pop
pop
add
jne
arpl
outsb
incl
idivb
pop
cmp
fmull
ficoms
jae
mov
in
fsts
call
sub
in
jecxz
adc
filds
push
adc
daa
jns
cmpsl
push
sub
lcall
stc
xchg
fwait
inc
sarl
pop
mov
adc
inc
adc
frstor
adc
dec
ss
repz
insl
out
mov
fistl
test
adc
or
mov
xor
std
outsl
xchg
mov
sarl
into
or
add
insl
lods
xor
dec
aam
roll
cmp
int3
dec
jecxz
sarb
pusha
clc
add
xchg
incl
push
cli
fwait
push
popa
roll
cmpb
sub
push
enter
cmp
sbb
pushl
cmp
popa
idivb
cmpsl
push
mov
push
dec
adc
inc
mov
frstor
gs
or
and
add
pushl
cmp
xrelease
push
xchg
insl
lahf
into
stos
cmpsl
mov
mov
loop
sbb
ja
cmp
fwait
add
rorl
jle
mov
xor
lcall
movsb
mov
add
hlt
les
cwtl
test
fisttps
sub
inc
mov
inc
or
sub
std
push
imul
aaa
shll
scas
insb
sub
and
cltd
stos
or
mov
test
cwtl
ret
rcrb
jo
aaa
or
cld
or
repnz
gs
or
jne
or
in
repnz
xchg
into
sbb
in
xchg
out
push
cmove
push
sti
cmpsl
dec
inc
inc
lcall
addl
bound
ss
out
fsubrp
mov
scas
cli
incl
mov
test
pushf
addr16
cmp
inc
jbe
test
and
pop
lock
imul
pop
stos
or
and
mov
aad
ret
call
decb
ljmp
or
mov
xor
out
jo
mov
outsb
xchg
adc
int3
hlt
loopne
int3
lods
mov
movsb
stos
mov
in
jo
sar
or
ret
ret
inc
mov
dec
sbb
out
ljmp
mov
adc
xchg
in
into
inc
cmp
add
dec
pushw
jecxz
adc
ljmp
incl
ret
adc
inc
xor
rep
fsub
jb
adc
mov
xchg
pop
pop
into
cwtl
dec
push
aas
xchg
inc
sbb
sbb
xchg
or
inc
sahf
js
mov
movsl
xchg
inc
imul
or
bound
fiadds
ret
pop
ljmp
loop
data16
push
rcrl
or
stos
incl
cld
bound
in
lods
fmull
pusha
mov
insl
clc
lret
dec
pop
push
je
lods
sbb
push
sbb
adc
and
lahf
add
inc
mov
icebp
enter
add
xor
shll
and
insl
popa
scas
gs
lcall
pop
mov
lret
dec
fmuls
xchg
fcomps
or
int3
mov
inc
jmp
ss
subb
jmp
out
insb
lahf
outsb
fs
inc
jno
rorl
inc
mov
in
mul
fbld
mov
subb
and
popa
xchg
imul
mov
cmp
popa
sarl
mov
out
ds
into
jmp
mov
ss
mov
lcall
shl
mov
in
dec
fs
jmp
arpl
orl
inc
shll
cmpsb
out
clc
call
lahf
sbb
scas
jl
push
aaa
icebp
movsb
popa
lods
push
enter
or
pop
cmp
fisubrl
icebp
lcall
mov
jbe
mov
cmp
sbb
cli
incl
mov
sbb
cld
xor
inc
stc
xor
push
ss
out
into
popa
faddl
out
es
stc
and
or
iret
lock
notl
imul
bound
enter
jo
stos
dec
scas
mov
mov
iret
movsb
mov
ljmp
std
imul
jne
and
push
pop
and
lcall
dec
pop
fcom
pop
mov
xchg
mov
add
faddp
xlat
mov
or
mov
ud2
add
jmp
sbbl
and
mov
mov
mov
repnz
icebp
mov
and
sbb
jmp
inc
or
xor
out
fdivp
inc
in
pop
out
mov
iret
cmp
incl
cli
cmp
cwtl
pop
pop
repz
pop
and
mov
lcall
imul
mov
pop
push
es
movsl
xor
xor
adc
rorb
pushl
ljmp
cmp
out
xchg
jg
inc
scas
mov
mov
pushf
inc
push
and
repz
out
cmp
test
lret
sar
jg
outsl
imul
pushf
sbb
jg
clc
fs
pop
sub
or
jl
aam
cwtl
out
add
xchg
aas
aad
sbb
loop,pt
inc
pop
inc
sub
dec
idiv
mov
aam
xor
iret
sbb
xchg
push
dec
add
jmp
sahf
mov
fcomip
call
int3
jne
scas
mov
xor
sub
pop
xorl
jmp
jmp
xor
xor
ret
cltd
call
jmp
call
add
hlt
pushl
cmp
push
pusha
sbb
xor
push
cld
aam
call
inc
and
shlb
inc
mov
sub
loop
incl
jecxz
or
inc
lret
inc
sub
or
cli
cmpsl
outsb
lds
xchg
adc
lret
inc
addr16
jg
decl
icebp
jecxz
idiv
mov
orb
xchg
enter
inc
add
jae
pushl
decl
mov
push
add
push
cwtl
rcrb
fs
jle
fcomip
ljmp
push
push
shll
movsl
lcall
mov
call
ljmp
dec
daa
test
js
pop
pop
xor
outsl
ss
mov
mov
out
xchg
mov
adc
int3
notl
add
or
xchg
pushl
cmp
lea
sbb
mov
jne
stos
inc
cmpsl
repnz
addb
lods
ret
aas
sub
mov
pop
ja
lcall
insb
or
lods
xchg
fsts
cmp
push
lock
je
sti
xchg
incl
loope
and
jp
js
cmp
mov
out
dec
adc
insl
cli
lcall
incl
or
int
mov
push
pop
pop
mov
pop
jb
or
inc
lcall
decl
dec
cmp
lods
push
daa
andw
cltd
xchg
dec
adc
add
ds
aaa
xor
xchg
mov
cli
adc
jo
xor
repnz
testl
pushl
mov
pop
add
arpl
cmpsl
sub
cmp
sub
or
lcall
ja
adc
pop
cmove
arpl
imul
cmp
in
es
scas
iret
test
push
aam
in
push
imul
outsb
sbb
in
imul
push
lcall
lods
ljmp
jnp
in
mov
fwait
sahf
dec
xchg
pushf
ljmp
xchg
xchg
dec
adc
int3
cmp
cs
hlt
sbbb
dec
ja
sbb
shl
in
popf
das
test
push
inc
cmp
incl
out
les
mov
or
inc
jb
xor
pop
leave
xchg
loop
sar
jmp
addb
cmp
mov
xor
je
call
sahf
scas
mov
fidivs
add
test
push
pop
mov
mov
inc
cmc
add
sbb
xlat
iret
ljmp
push
ljmp
lcall
nop
sub
or
add
inc
sti
mov
rep
xor
jmp
dec
lods
adc
mov
push
out
sbb
scas
push
add
pop
pop
rcl
ret
call
mov
jl
cmc
fdivl
xchg
int3
ja
fstpl
sub
mov
xchg
push
test
xor
clc
or
xor
inc
xchg
fildll
pushl
imul
mov
jmp
cmp
jne
cld
pushl
sbb
repz
push
sbb
std
push
shll
pop
hlt
call
std
cmp
movsl
inc
aad
scas
mov
insb
mov
movsl
pop
mov
nop
test
incl
jp
xor
imul
ret
xlat
adc
fnsave
dec
das
aam
cmp
add
ljmp
push
mov
jl
jecxz
xchg
sbb
mov
addr16
cmpsl
jo
fdivl
jle
mov
cmp
push
aas
inc
in
jbe
stos
cwtl
xchg
loop
pushf
loopne
and
cmp
dec
inc
push
xchg
jne
sub
mov
loopne
decl
and
cltd
adc
mov
sub
fnstenv
jmp
loop
adc
arpl
les
cwtl
mov
push
call
lods
inc
insl
stos
popa
mov
dec
jle
dec
xor
xchg
jge
mov
push
cmp
inc
cmovl
mov
mov
mov
adc
or
mov
clc
lcall
inc
gs
test
mov
push
insb
scas
or
andl
jns
or
imul
out
rclb
pop
or
inc
scas
adc
movsb
push
mov
push
mov
sbb
in
cli
and
gs
incl
inc
xor
nop
lret
cmp
or
outsb
and
test
mov
xor
push
ljmp
lea
loopne
sub
mov
into
add
ljmp
or
mov
hlt
fs
mul
insl
mov
xchg
push
jns
decl
imul
es
addr16
mov
fld
push
rcrl
jecxz
mov
lcall
inc
sbb
test
sub
bound
popa
pushf
aam
cmpsb
shl
xchg
mov
mov
mov
mov
int3
jbe
sub
shrb
ljmp
decl
adc
les
cmp
loopne
xor
in
jmp
push
sub
dec
xor
jb
test
dec
call
mov
push
cld
incl
push
dec
leave
push
mov
cli
popa
push
das
fstpt
lock
std
or
sahf
dec
clc
mov
inc
inc
xor
dec
mov
mov
jmp
cwtl
mov
insl
aad
mov
mov
inc
fnstcw
pusha
mov
nop
ljmp
cli
xor
pop
nop
xorl
jo
mov
leave
cmp
out
lcall
sti
movaps
push
adc
xor
lods
or
lods
mov
mov
out
clc
jmp
mov
push
call
lods
std
sbb
xchg
sbb
les
fnsave
sbb
ret
jp
adc
and
push
stos
sub
fidivrs
mov
decl
imul
add
jo
pop
sbbb
xchg
mov
add
loopne
xor
mov
decl
and
inc
in
jno
push
faddl
and
lcall
mov
sbb
mov
xor
lds
bound
pop
cmp
jne
and
pushl
out
cmp
sahf
stc
incb
sub
and
data16
incl
push
and
or
dec
and
pop
fnsave
adc
movsl
rcrb
incl
rcrb
loope
ja
push
jecxz
es
jns
xor
xchg
lock
sub
cmc
cmpsb
xor
stos
das
fwait
mov
out
inc
jmp
test
or
decl
cmp
lods
imul
pop
inc
bound
mov
scas
cltd
test
mov
dec
jecxz
stos
add
or
sbb
cld
in
adc
rcll
xchg
daa
test
ljmp
mov
hlt
fs
hlt
popf
cmp
fs
notb
sbb
or
mov
mov
cmpsb
add
and
out
mov
fst
inc
out
pop
ficomps
outsl
hlt
xchg
pushl
mov
inc
jb
es
mov
inc
decl
out
and
cmp
adcb
insl
mov
xor
fcoml
test
icebp
fwait
decb
xor
test
sahf
aam
pop
fcos
ljmp
jae
sbbl
scas
test
xchg
adc
mov
jns
dec
ss
jmp
sbb
adc
scas
adc
nop
lcall
jbe
es
jno
mov
lahf
test
addr16
push
push
jo
push
loop
jnp
cmpsb
js
dec
scas
push
sbb
xchg
in
pop
scas
movsb
sbb
shlb
xor
test
dec
mov
hlt
cmp
xor
int
mov
imul
in
push
mov
push
cmp
insl
movsl
je
pmaxsw
sbb
fdivrl
xor
aad
mov
out
push
out
push
xchg
pop
clc
lea
shll
js
sbb
mov
js
jo
xchg
push
xor
imull
dec
sub
loop
ljmp
xor
dec
adc
xor
mov
mov
mov
neg
cmp
adc
inc
std
lcall
decl
mov
inc
adc
icebp
shlb
enter
mov
jge
mov
mov
lods
rolb
mov
aam
push
subb
je
hlt
jmp
pop
inc
out
or
lock
pop
cli
mov
dec
outsl
in
and
push
and
lcall
in
and
insl
mov
and
data16
pmaxub
mov
hlt
cmpsl
movsl
lock
in
ds
insb
es
pop
ficoml
stc
icebp
add
mov
in
sub
test
popl
jecxz
push
mov
jb
incl
xchg
dec
dec
or
or
fldenv
cs
outsl
ds
or
sub
pushl
mov
sbb
fmull
insl
scas
andb
push
cmp
pop
sub
repz
repz
add
adc
adc
push
scas
xchg
xchg
pushl
outsl
out
movsb
dec
xchg
ret
pop
pop
mov
pop
xchg
xchg
mov
fs
push
fidivs
lcall
jge
out
mov
adc
push
push
jl
in
adc
inc
and
rep
jp
std
hlt
pop
jecxz,pn
filds
hlt
stos
pop
int
mov
sti
push
jbe
scas
pusha
jmp
jne
iret
sub
aad
push
mov
arpl
adc
lods
out
jmp
clc
test
xorb
add
lea
lods
mov
mov
test
mov
or
leave
push
jbe
xchg
mov
in
incl
jle
jne
lret
push
popf
aaa
add
push
jae
push
aas
adc
jb
or
inc
loopne
jmp
xlat
inc
xchg
shl
mov
inc
movsl
push
jno
gs
in
int3
clc
pop
cmp
cmp
jp
in
push
inc
mov
sahf
lods
add
scas
mov
int
cmp
es
mov
insl
mov
pop
repnz
out
jmp
arpl
lret
out
sub
add
aaa
cmp
cmp
aad
and
lcall
xchg
pop
pop
xor
gs
jno
inc
adc
outsb
jno
aaa
add
movsb
in
sbb
inc
jg
iret
std
mov
rcr
mov
xor
fld
pop
xor
mov
mov
pop
test
pop
cmpsb
adc
jnp
push
cld
fnstcw
cvtps2pd
cmc
mov
sub
mov
or
add
or
add
test
icebp
int
xor
pop
mov
xor
mov
pop
mov
pushl
mov
aaa
stos
or
pop
lods
dec
dec
dec
mov
fdivl
outsb
adc
fldt
ss
stos
testb
inc
push
out
dec
lods
aam
jbe
xor
insl
lods
incl
sub
sbb
mov
cmp
xor
or
add
xor
es
pushl
das
shrl
mov
shll
scas
push
jbe
xor
out
mov
aad
mov
mov
sub
sahf
call
jmp
mov
xor
jne
inc
jo
lods
lock
jecxz
ret
jo
loopne
loopne
xor
insb
pusha
and
lcall
ja
cmpsl
sub
jl
andl
je
jmp
mov
scas
pop
inc
je
pop
bound
sub
jns
mov
lods
sub
mov
daa
repz
fiadds
mov
sub
outsl
mov
and
je
sub
stos
jg
out
leave
lret
inc
sti
pop
dec
mov
mov
mov
sub
mov
cmp
clc
lret
or
dec
negl
xchg
dec
imul
cwtl
ja
rcll
push
call
out
or
jno
dec
clc
jmp
sarb
stos
cmp
aaa
xchg
shlb
lods
push
decl
mov
pop
add
pop
push
pop
and
mov
test
push
push
xchg
mov
mov
jle
neg
dec
lods
jno
pop
js
sbbl
pop
xchg
outsl
inc
add
jns
jg
sub
cmp
in
das
sbb
sbb
fbld
ds
bound
sub
hlt
mov
cmp
sbb
inc
xor
pop
lahf
std
out
jae
ljmp
rolb
rcr
or
push
fsubl
lahf
sbb
xchg
adc
or
and
repz
stc
scas
pop
dec
adc
pop
and
cmp
lds
mov
in
mov
push
dec
repz
cs
aaa
and
dec
lret
out
sbb
push
jmp
je
fs
inc
add
pop
and
sahf
cs
mov
dec
inc
adc
or
push
jmp
mov
pop
shrb
lods
adc
mov
imul
cltd
adc
mov
ljmp
xchg
addr16
rclb
loop
popa
es
in
pop
rcr
mov
jl
lahf
cmc
pop
xlat
jb
mov
icebp
jne
gs
cmp
cmp
xor
sti
jecxz
push
in
fidivl
jno
cmp
mov
call
mov
lcall
scas
jns
icebp
incl
xchg
outsl
add
dec
mov
mov
call
or
in
cmp
pop
cwtl
pop
push
dec
ljmp
jns
mov
loop,pn
and
loope
das
add
mov
push
jo
sarb
call
outsl
cli
cld
mov
jno
jb
insb
xor
mul
jns
jg
pop
push
pop
lock
es
or
adc
pop
aam
fsubr
jle
lcall
fistpll
mov
lock
adc
clc
dec
lock
lcall
scas
pushl
cld
shll
data16
sub
imul
inc
les
cli
cld
or
mov
push
xchg
cmpsb
les
insl
adc
ds
cmpsl
dec
aam
decl
dec
roll
pop
dec
fwait
idivb
andl
or
push
or
knotw
lea
jnp
jmp
lret
in
or
jmp
cld
mov
dec
dec
call
mov
xorb
jge
jmp
sbb
fsubrl
daa
add
push
cmp
cmp
pop
outsb
bound
mov
loop
xor
mov
pop
or
cmpsl
cmp
repnz
or
cltd
and
mov
cmp
insb
lock
sub
scas
jle
jl
xlat
pop
lds
mov
fdivr
inc
pop
cmpl
pop
ret
mov
lret
sbb
jp
push
or
inc
push
decl
jns
lret
mov
das
outsb
adc
cwtl
sti
std
dec
jns
inc
popf
in
xchg
test
int
push
fcomip
pushl
lods
adc
jmp
out
push
or
cmp
decl
or
sub
mov
pop
mov
stc
mov
mov
inc
out
xchg
jg
lret
pushl
aam
out
fisttps
push
jp
loope
ljmp
bound
pushl
insl
repnz
mov
pop
pop
sbb
faddl
mov
push
enter
cld
ja
call
sbb
cmp
lcall
lds
incl
call
outsb
and
out
call
inc
test
scas
push
mov
jg
andl
jmp
scas
xor
add
cmp
adcl
mov
outsb
sub
pushf
mov
dec
push
jnp
jmp
xchg
ss
xchg
mov
popa
dec
insl
scas
js
add
mov
mov
out
pop
pusha
cmpsb
hlt
lret
js
cwtl
scas
add
popa
sub
inc
fstpl
xchg
push
cmp
scas
call
ja
imul
xor
pop
inc
fistps
xchg
push
into
add
mov
into
cmp
mov
test
int3
clc
sbb
aad
push
adc
loopne
out
cli
push
mov
les
mov
ret
mov
xor
lds
incl
xor
test
movq
jmp
lods
clc
mov
data16
ljmp
adc
pusha
push
push
push
aaa
addb
jno
enter
sti
inc
das
mov
or
pop
fnstcw
push
add
xor
mov
push
lock
mov
outsb
sbb
popa
jno
lahf
xchg
call
addl
cld
dec
xor
mov
pop
sub
gs
push
pop
pop
ljmp
in
fldenvs
jp
lret
add
mov
push
mov
loop
dec
lahf
stc
int3
hlt
or
into
dec
call
jg
int
testb
fstpt
shlb
popf
std
xor
mov
push
jnp
scas
rolb
sti
aas
fucom
decl
imul
xor
adc
pop
sub
xor
and
hlt
dec
fwait
aas
arpl
jecxz
das
mov
push
rorl
in
sub
mov
incl
mov
or
xor
jnp
sti
pop
vpmovsqd
ret
push
mov
mov
out
loop
shl
incl
inc
pusha
loopne
scas
and
push
jo
mov
fst
fstl
hlt
bound
int3
jae
gs
inc
inc
daa
mov
cmp
scas
ret
jae
icebp
es
xchg
sbbl
pushl
je
fidivl
pop
inc
cmp
call
mov
ljmp
dec
and
das
jle
sbb
mov
fsubs
ja
movsl
xor
jmp
or
lods
mov
icebp
lcall
ret
pusha
int3
stos
xor
test
mov
jp
inc
sub
icebp
nop
sti
clc
lahf
loopne
int3
lret
int3
jno
dec
shl
sub
dec
sbb
test
adc
mov
mov
xor
pop
lahf
cmpsb
ljmp
push
mov
push
pusha
push
loop
cli
nop
or
sar
icebp
hlt
sbb
lahf
mov
xor
mov
xchg
fcomip
jmp
dec
in
dec
pop
mov
je
pop
test
jno
leave
sub
mov
ljmp
pop
xor
push
and
mov
jns
ss
ljmp
popf
dec
cli
xchg
lods
stc
fstsw
mov
sbbb
int3
cmpsl
call
jecxz
incl
ret
in
mov
sarb
xchg
out
cmp
test
lcall
pop
mov
into
push
jecxz
mov
clc
testb
push
sub
xor
stc
decl
jmp
int3
jle
out
mov
sub
in
pinsrw
aam
in
mov
mov
push
sahf
arpl
out
dec
inc
adcl
lods
insb
add
inc
fwait
or
stc
sbb
add
or
jmp
andb
loope
or
sti
inc
xor
jp
popa
sar
jmp
xchg
xor
das
pop
add
mov
pop
lds
sbb
das
mov
mov
jg
repnz
sub
push
pop
loope
subl
sbb
mov
xor
ja
incl
scas
je
xchg
sbb
idivb
aas
rcrb
sbb
into
fld
decl
sub
pop
mov
lods
mov
fsubrp
sub
movsb
rcll
jb
fwait
jp
call
add
or
adc
sahf
sub
aam
push
ss
xor
mov
push
ljmp
pushl
and
movsb
cmp
sbb
cwtl
and
jno
lcall
mov
cmp
push
dec
out
add
jo
sub
decb
call
mov
pop
and
pushf
loop
sbb
in
jl
and
jmp
push
jne
push
loope
loope
dec
mov
aas
dec
dec
je
adcl
fdivrp
ja
pushl
mov
adc
ljmp
imul
add
incl
mov
leave
aad
pop
pop
mov
cmpsl
fadd
pop
jb
pop
xor
loopne
or
add
decl
adc
and
mov
cmp
insb
push
js
sbb
bound
cmp
je
test
sub
pop
cld
ljmp
sbb
fisttpll
aam
push
insb
ljmp
add
call
movsl
stos
push
data16
xchg
dec
push
jecxz
fs
dec
jb
xchg
mov
mov
mov
movzbl
mov
je
hlt
push
xchg
xlat
adc
mov
ffreep
xchg
mov
lahf
pop
cmp
push
and
jmp
push
lods
das
ret
inc
scas
mov
cld
decl
jl
cs
adc
lock
movsl
pop
and
jmp
mov
or
iret
fsubl
push
pop
cld
mov
stc
lcall
pop
push
sbb
out
mov
pop
push
or
loopne
ljmp
ss
and
jle
push
dec
int3
cmp
cmp
frstpm(287
and
sahf
ljmp
rorb
or
mov
outsb
sub
cs
push
dec
clc
mov
dec
mov
or
cwtl
push
and
mov
ljmp
cmp
loop
jmp
dec
push
mov
add
sbb
jne
sub
das
fstpl
pop
sbb
cmp
mov
incl
bound
jp
repz
sub
cmpsb
mov
imul
rorb
mov
or
xchg
sbb
mov
imul
sbb
call
pop
jmp
scas
aam
mov
popf
sub
xchg
int
add
jecxz
mov
testb
mov
es
decl
and
insb
fwait
incl
js
cmc
cltd
sbb
dec
cmp
mov
push
pop
scas
sarb
clc
cmp
out
push
xchg
mov
mov
std
sub
adc
ret
dec
das
shll
jle
stos
mov
cli
adc
pop
pop
dec
ds
push
sahf
sub
mov
lret
dec
mov
xchg
movsb
mov
sub
xor
and
sub
inc
rep
sub
decl
int
mov
andb
mov
negb
cmp
push
mov
lods
push
pusha
sbb
pop
jecxz
mov
xchg
test
mov
loop
lret
ss
push
push
add
pushf
push
adc
fdivrp
pop
test
jg
dec
add
sub
pop
insb
and
mov
jb
or
push
jae,pn
ljmp
push
dec
ljmp
sub
aad
xor
sbb
mov
mov
and
test
jl
arpl
fcoml
and
addb
jnp
dec
jle
xchg
lods
call
jne
scas
ljmp
shl
cmp
clc
jle
lcall
cltd
nop
jl
jne
pop
jge,pt
xchg
add
shlb
push
fcomps
add
pop
ret
lcall
push
lods
out
out
xchg
int3
sbb
iret
or
adc
leave
dec
iret
mov
repnz
mov
lcall
xor
jmp
inc
in
mov
push
mov
loop
jle
or
cltd
lock
popf
xchg
sub
xor
pushl
dec
pop
sbb
jo
fistps
pop
insl
insb
loope
inc
xor
in
clc
cmp
inc
mov
insl
push
movsl
fwait
std
inc
mov
cwtl
mov
mov
add
sub
loop
insl
push
mov
and
call
std
mov
mov
pop
mov
pop
test
scas
and
pop
mov
nop
jno
push
lahf
pop
push
aas
xor
pop
cltd
loopne
sub
xor
aaa
dec
pop
in
repnz
jmp
andb
ds
imul
mov
adcb
fimuls
pop
les
xchg
lahf
adc
pushl
outsl
sub
neg
and
adc
pop
out
loope
pop
and
addb
xchg
insb
cs
pushl
mov
aad
es
cmpsb
arpl
out
push
scas
push
in
jbe
pop
cwtl
pop
mov
add
call
lods
loopne
push
ror
sarl
inc
push
push
cld
mov
jno
sahf
mov
add
into
test
call
fimull
inc
idivb
push
fistl
cld
rcrl
push
rolb
adc
test
jg
decl
clc
fldenv
push
and
or
push
mov
mov
ljmp
mov
mov
jg
dec
stos
mov
jbe
scas
sahf
inc
lahf
pop
pusha
pushf
lcall
jns
lock
xchg
jbe
andb
inc
or
jg
mov
mov
call
addr16
xchg
ds
cmp
cmp
repz
mov
lds
mov
out
nop
fcos
call
jmp
mov
dec
mov
es
or
inc
sbb
push
xchg
inc
idivl
pushf
in
sbb
mov
int
cmp
push
scas
pusha
mov
cs
ret
cmp
decb
mov
push
rorb
mov
pop
xor
sbb
call
push
adc
mov
mov
ret
scas
arpl
sar
js
dec
std
jmp
pushl
ret
int3
dec
add
inc
pop
push
sbb
xchg
stos
dec
mov
pop
xor
sbb
jmp
shll
inc
in
xchg
cwtl
and
add
mov
push
daa
sti
idiv
mov
sbb
insl
push
je
out
notb
or
dec
jmp
popf
or
mov
push
sbb
xchg
jle
repz
les
dec
fcoms
jmp
popf
push
scas
hlt
addr16
and
notl
push
movsb
cmp
xchg
sub
int3
fs
sarl
dec
xchg
cs
xchg
movsl
mov
outsb
push
movsb
imul
or
rcl
scas
clc
ljmp
test
mov
or
enter
int3
fistpll
sub
rorb
gs
push
iret
mov
es
rcll
pushl
scas
and
test
in
cmp
dec
lcall
jl
das
or
push
dec
sbbb
dec
inc
xor
sbb
add
pusha
mov
xchg
lret
adc
sub
cmp
loopne
in
mov
inc
call
xor
shrb
lcall
pop
popf
cmp
fwait
jbe
insb
mov
in
pusha
and
rcrb
loopne
je
jg
push
ja
pusha
lods
jns
or
push
jecxz
mov
inc
sub
fstp
scas
sbb
jmp
jge
pop
jge
dec
jmp
insl
cmpsb
dec
in
jbe
push
xor
pop
or
dec
imulb
dec
and
xchg
dec
jnp
mov
xchg
loop
cld
sbb
jmp
push
pop
push
decl
pop
jmp
sub
hlt
or
cmp
cmpsl
insb
xchg
scas
mov
xchg
les
mov
out
sahf
bound
or
jnp
jo
lcall
lods
loop
push
mov
pop
and
sub
lea
sub
popa
nop
xchg
in
lock
lcall
decl
lahf
movsb
ss
push
lds
xchg
push
dec
sbb
subb
mov
cwtl
jmp
lods
fisttps
arpl
mov
jae
or
sub
aad
sbb
decl
add
inc
pop
cmp
jp
in
dec
inc
ds
mov
xchg
cld
pushf
jp
dec
inc
lret
sbb
sti
fnstenv
enter
dec
xchg
rorb
testb
pushf
lcall
loopne
sar
aam
repz
mov
ja
mov
dec
inc
mov
lock
dec
sbb
rep
nop
jbe
in
xchg
or
subl
andb
js
xor
pushf
jl
adc
ljmp
jbe
arpl
cbtw
subb
add
call
inc
mov
mov
pushl
ljmp
out
inc
dec
cmpsb
inc
std
cmp
call
test
mov
fnsave
popa
daa
loop
lea
repz
mov
push
xor
jl
xlat
sbb
mov
mov
sti
xchg
daa
fsubs
fstp
mov
decl
daa
cld
mov
stos
xchg
xor
cmp
or
and
movsl
mov
lods
outsb
dec
cld
insb
es
cli
mov
mov
mov
mov
gs
inc
jle
adc
mov
call
cmpsl
xlat
and
xor
sahf
movsb
fdivrs
and
insl
fldl
incb
push
xor
push
jns
add
arpl
movsb
dec
scas
clc
sahf
fisubrl
test
mov
scas
loop
mov
aas
push
or
call
fldcw
stos
pop
popa
jge
jl
jecxz
outsb
mov
jns
popf
popf
call
add
xchg
mov
in
push
cmp
pushf
dec
lods
mov
cmp
add
ljmp
mov
stos
mov
leave
cld
cmp
inc
add
aam
jmp
push
xor
or
xor
test
shlb
nop
rcr
sbb
movsb
jg
mov
mov
fstl
aas
test
sbb
int
call
faddl
xlat
fcmove
xlat
xchg
mov
cmpsl
sub
adc
test
movsb
lahf
add
fmuls
sbb
jmp
cmp
xor
js
mov
ja
fcmovbe
enter
push
fs
mov
insb
mov
ljmp
cmp
in
jg
mov
std
push
pop
aad
or
daa
mov
or
incl
clc
mov
pop
and
ret
cld
ret
stos
cmp
decl
push
mov
stc
or
jp
nop
and
xor
dec
fcoml
daa
push
call
sub
hlt
aas
push
pop
jl
mov
lds
shrl
and
pop
and
pop
loope
in
shlb
cmc
out
push
push
movsl
sti
imul
out
movsl
cmp
mov
in
lods
loopne
cmc
loope
dec
dec
shll
pop
out
nop
fnstsw
push
int3
push
mov
subb
mov
in
js
adc
pushl
mov
sbb
sub
mov
jbe
adc
pusha
shll
push
insb
arpl
decl
movsl
cs
lret
push
sarb
cmp
insl
repnz
mov
mov
call
jmp
outsl
mov
stc
dec
jp
sbbl
cmp
jne
jae
cld
scas
jecxz
mul
incl
leave
or
jnp
cmpsb
mov
mov
push
sub
mov
stc
mov
sub
test
lcall
mov
push
and
ficompl
cmp
fisubl
in
scas
jg
incl
scas
xchg
push
sub
movsl
pushf
rcrl
in
and
xor
call
cmp
out
mov
ss
cmp
add
mov
push
push
mov
fldt
subb
mov
jns
into
sbb
int3
or
aam
mov
sub
pushf
insb
xor
int3
bound
incl
sti
jecxz
js
pop
loop
pop
and
xorl
push
stos
jmp
insb
outsl
push
test
mov
push
cmpb
dec
jl
int3
mov
pop
or
mov
les
mov
movsl
jp
popa
stos
call
stos
sbb
das
fistpll
xor
xchg
ja
or
mov
push
adc
cld
push
push
sub
mov
xor
mov
mov
es
jle
mov
adc
mov
inc
lcall
imul
les
lods
stos
lahf
ljmp
cs
ficoms
stc
pop
rorb
xchg
call
mov
mov
sti
stc
cmc
pushl
mov
vmaxsd
movsl
lcall
es
data16
jg
scas
xchg
subb
shll
imul
fwait
pop
mov
fbstp
mov
cld
shrb
sbb
sahf
or
adc
pop
cmpb
pushf
test
jbe
cmp
dec
popa
loopew
out
jb
mov
incl
in
in
aaa
add
dec
stos
aam
mov
dec
scas
lea
push
inc
repnz
push
xor
test
lods
jns
cmp
sahf
pop
data16
sarb
and
push
ljmp
jns
dec
int
xchg
cs
add
xchg
sbb
or
push
sub
daa
xchg
scas
dec
call
mov
loopne
dec
push
lods
and
stos
subb
ljmp
jle
push
scas
test
je
xchg
inc
add
cmp
dec
dec
ja
test
mov
push
push
mov
jle
int3
mov
arpl
movsl
or
push
adc
pop
cld
pushl
mov
inc
jo
jg
dec
push
movsb
jnp
add
rol
jmp
lods
inc
lcall
int3
lret
movsl
add
push
pushf
stos
jb
js
xchg
lcall
imul
dec
jmp
fs
adc
fcompl
xor
jp
jns
decl
shr
int
popf
in
rcl
sarb
mov
stos
add
cwtl
sti
insb
in
mov
jmp
aam
add
sti
cwtl
dec
js
or
es
dec
imul
mov
scas
push
sbb
inc
je
pop
inc
pop
sub
add
ffree
push
add
imul
sar
jmp
fmull
cmp
test
pushf
inc
imul
stos
pushl
add
dec
and
into
push
gs
bound
xchg
mov
jnp
add
test
xchg
cmp
dec
test
cmc
mov
call
scas
cmp
inc
add
lcall
jbe
cwtl
add
jg
inc
mov
bound
cld
and
divb
clc
popf
xchg
scas
pop
inc
mov
pop
ja
pushl
mov
adc
sub
rcrl
mov
cmp
add
mov
add
nop
lahf
jo
stos
jns
jb
xor
cmc
xchg
js
icebp
fdivr
jmp
roll
push
sbb
pushf
iret
stos
mov
enter
sbb
ss
imul
in
sub
xchg
leave
scas
xchg
mov
popf
popf
rol
shlb
in
fs
jl
arpl
incl
ret
pop
shrb
jp
push
xchg
cmp
scas
enter
shll
jle
or
pop
add
int3
mov
es
add
pop
popl
jp
jmp
xchg
aam
push
pop
jno
xchg
sub
pop
add
scas
push
fwait
xchg
pusha
or
mov
cwtl
mov
lcall
call
mov
mov
cld
in
push
push
loopne
scas
push
faddl
ljmp
mov
xor
sahf
dec
inc
dec
jecxz
pusha
stc
adc
je
pop
sti
fwait
rclb
mov
xchg
jae
xchg
mov
pop
add
mov
in
jnp
jecxz
lea
icebp
scas
stos
repnz
nop
inc
xchg
add
mov
xchg
rclb
out
test
cltd
cs
scas
dec
inc
es
xchg
mov
add
into
les
mov
ss
add
repnz
test
pushl
shrb
sub
pop
dec
inc
mov
lahf
idiv
mov
cmp
ljmp
adc
pop
push
pop
fisttps
lahf
loop
fwait
xchg
mov
mov
xchg
xchg
lret
pop
xchg
das
dec
ret
hlt
loop
dec
adc
jl
xchg
outsb
ror
je
movsl
call
sbb
dec
aas
hlt
push
xchg
dec
inc
scas
sbb
or
imul
jns
cmpl
and
ja
decl
idivb
or
pop
xchg
add
dec
xchg
pop
rolb
sub
mov
sub
lcall
sahf
add
and
lfs
sub
mov
cmp
in
aaa
mov
or
ror
dec
mov
xchg
lcall
dec
stc
int3
movsl
in
movb
dec
dec
pop
iret
lret
lret
in
mov
sbb
inc
lods
add
cmpsb
enter
jbe
lret
cmp
lcall
lods
xchg
mov
sub
mov
data16
mov
outsl
mov
mov
out
clc
mov
imul
and
cltd
adc
dec
pusha
mov
loopne
ss
call
into
nop
or
xchg
dec
cmp
jnp
cld
jg
fcmovb
test
mov
inc
xchg
pop
out
adc
decl
or
mov
mov
sbb
lcall
lods
cmp
iret
insb
lds
in
into
loop
xchg
es
cld
ja
jbe
in
int3
add
sbb
das
pop
std
out
gs
dec
subb
decl
xchg
mov
sbb
jno
clc
out
sbb
pop
mov
and
call
push
dec
cmp
out
push
insb
inc
sub
mov
dec
cmc
cwtl
int3
jg
iret
out
pop
push
iret
cld
lret
lcall
mov
cltd
int
fwait
mov
pushl
pop
mov
sub
leave
sub
sbb
lcall
mov
sbbb
xor
jl
pop
sbb
call
xchg
jb
notl
pop
cmp
mov
add
addr16
hlt
mov
adc
jp
jge
inc
call
adc
dec
push
jg
std
jae
push
jl
lret
shll
push
mov
adc
push
cmc
mov
sub
in
dec
iret
or
lods
cmpsl
fwait
lret
dec
mov
dec
repnz
sbb
cmpsb
in
jmp
cmp
movsb
add
nop
jbe
push
jl
js
popf
inc
mov
das
ds
mov
mov
mov
jne
mov
sbb
negl
fbld
jecxz
mov
push
mov
notb
dec
enter
call
stos
out
jl
arpl
or
lret
pop
sti
mov
imul
outsl
xchg
out
and
sbb
fs
call
mov
shll
lcall
sahf
enter
imul
sahf
out
inc
stos
adc
inc
ret
inc
fsubrs
xor
mov
ret
pop
aad
mov
cmpsl
lods
enter
dec
scas
push
out
or
or
mov
adc
add
inc
lahf
mov
cltd
mov
lcall
jns
adc
pop
push
adc
sahf
push
jb
cltd
std
or
mov
and
ja
enter
decl
ljmp
jl
mov
fisubs
call
mov
test
call
fwait
push
int3
xchg
adc
jmp
insb
push
cmpsb
inc
push
pop
dec
xlat
cli
insb
or
decl
jne
and
sahf
pop
sahf
fcmovu
and
mov
inc
dec
pop
hlt
mov
enter
mov
cmp
push
div
out
or
decl
xchg
in
rorl
je
dec
or
cmc
jp
mov
jno
decl
iret
sar
test
testl
imul
sub
sbb
mov
fiadds
mov
or
and
fists
pop
cs
rolb
fadds
sub
shlb
ds
adcl
mov
sahf
sbb
dec
pop
xor
cli
test
and
push
jge
loop
mov
cld
jb
cld
sbb
enter
jmp
push
repz
jbe
ficompl
pop
sbb
pushf
and
pop
cld
and
mov
jns
ljmp
stos
test
mov
push
cli
repnz
iret
add
xchg
sbb
enter
add
call
xor
sub
imul
cld
jns
jae
mov
incl
in
jl
je
pop
jne
add
pop
and
imul
push
jg
jmp
add
push
cmp
clc
pop
add
cmp
jg
incb
daa
jmp
decb
lods
idivl
cmp
call
push
gs
test
xor
hlt
aas
inc
adc
pusha
hlt
jbe
add
fcomip
call
nop
jb
and
mov
int
fldt
out
sbbl
rep
inc
lock
xlat
mov
test
out
rcr
and
out
add
jmp
cmp
aad
mov
lcall
jmp
push
repz
les
mov
jp
jecxz
pop
or
or
call
jecxz
push
imul
fwait
subl
insb
push
adc
pushl
aas
repz
pop
adcl
dec
call
cld
scas
sub
jmp
jb
cld
incl
dec
dec
mov
subb
loope
repnz
fdivrp
pop
popf
jns
imul
add
repz
add
int
sar
bound
push
and
fs
pop
push
icebp
decl
out
mov
ret
enter
xlat
in
fucomi
adc
ljmp
ss
and
mov
sti
mov
fcompl
imul
push
mov
jle
dec
xchg
insl
incb
stos
xchg
inc
mov
push
lods
cs
scas
ret
outsl
cli
incl
jbe
mov
fiadds
jmp
sub
das
cli
jg
pop
mov
mov
jp
lahf
push
cmp
pop
imul
inc
mov
movsb
mov
inc
int
pop
mov
loop
ja
dec
pop
xchg
cld
sbb
decl
mov
mov
scas
insb
xchg
add
out
xchg
in
pop
cmpsb
xor
adc
incl
pushf
or
mov
stc
inc
out
repnz
xorb
mov
xor
mov
pop
addb
rcll
jbe
or
sbb
push
decl
jo
jle
jecxz
inc
dec
clc
int3
out
mov
push
into
sub
xchg
push
push
mov
loopne
mov
mov
arpl
sub
push
push
repz
mov
xchg
mov
pop
outsb
xchg
test
in
push
insl
xor
fs
addr16
jmp
mov
xorps
or
adc
and
into
clc
push
mov
out
negl
jmp
dec
lods
push
dec
out
jno
jl
push
sbb
and
jns
mov
cwtl
push
or
push
incl
shlb
jl
pop
and
push
je
jmp
jecxz
pop
testb
mov
sbbl
mov
push
lcall
adc
cmp
lahf
cwtl
out
xor
stc
cmp
incl
out
xchg
push
mov
sbb
out
fistl
fdivs
xchg
mov
lret
testl
xor
push
xchg
fcoml
mov
lcall
add
cld
pop
ds
dec
ljmp
shrb
int
jne
fldt
jmp
das
xchg
jne
jnp
movsl
add
sub
das
jle
sbb
out
decl
pusha
dec
imul
sbb
mov
pusha
bound
outsb
or
cli
push
jmp
mov
push
movsl
lret
xchg
dec
decl
xor
popa
jo
jp
add
in
pop
jnp
pop
scas
pushf
mov
ret
dec
fwait
mov
cmp
inc
ret
shl
sub
js
mov
and
mov
adc
loope
in
and
addr16
rorb
mov
repnz
call
mov
mov
xchg
and
jl
movsl
loopne
mov
aam
ret
scas
sahf
jge
push
sahf
popf
adc
mov
cmp
mov
lods
cmp
lods
pop
int3
in
mov
call
sbb
mov
sub
lcall
cmp
rcl
xchg
stos
jp
add
lret
push
mov
or
mov
ljmp
push
mov
sbb
leave
cmpsb
mov
enter
xchg
mov
aas
sbb
loop
test
fdiv
jecxz
cltd
test
push
les
js
ljmp
lods
insl
xor
add
bound
adc
lock
shrb
mov
jge
sbb
pop
adc
fdivrl
mov
or
in
sbb
sbb
call
aaa
adc
mov
fisubrl
pop
mov
incl
iret
loop
into
push
cli
lea
fs
lahf
xorb
rorl
lcall
mov
sbb
aad
fcmovb
mov
jno
mov
shll
inc
int
mov
in
jmp
mov
jb
bound
cmp
lods
push
and
or
pop
decl
pop
pop
push
cmpsl
mov
jle
mov
lods
in
test
stos
scas
cli
jne
stos
cmpsl
dec
sub
xchg
push
xor
das
das
xchg
leave
or
add
incl
push
test
outsl
in
push
pop
push
leave
cld
or
pop
into
fsubrl
decl
jo
test
cmp
push
pop
add
lods
ror
in
sub
mov
xchg
loopne
adc
mov
and
lahf
xor
jmp
scas
push
nop
push
adc
jne
loope
push
shrw
mov
xor
mov
cld
xor
cmp
sahf
inc
scas
sub
dec
adc
xchg
incl
or
mov
pushf
pop
stos
outsl
repnz
int3
movsl
pop
mov
mov
jne
insb
sbb
ss
pop
push
xchg
mov
cmpsl
mov
shrb
jns
mov
mov
mov
loope
mov
mov
mov
test
inc
mov
loope
adc
mov
pop
xor
call
outsb
mov
aam
adc
stos
loope
add
mov
mov
mov
or
mov
push
dec
scas
cmp
das
int3
mov
pop
loope
mov
fcomip
cmp
mov
pop
pop
mov
mov
xchg
jle
pusha
dec
inc
sub
popa
fdivr
incl
out
lret
mov
sub
xchg
imul
es
dec
mov
or
sarl
outsl
pop
sub
mov
sub
mov
mov
xor
sub
decl
addr16
mov
or
fsub
xchg
cmp
mov
xchg
or
outsl
xchg
pushl
push
dec
mov
das
xor
ret
cmp
popf
addr16
pop
push
ljmp
sbb
cmc
xchg
decl
lea
dec
ret
lahf
popf
loope
cld
push
test
xor
mov
xor
lcall
add
in
mov
outsb
cmp
hlt
add
jg
nop
cmpsl
adc
mov
data16
or
mov
fistpll
movsl
push
xor
mov
xor
scas
pop
orb
mov
test
lcall
adc
mov
cwtl
andps
gs
mov
mov
div
call
test
sbb
pop
lds
cwtl
pop
add
and
cmc
pop
adc
sbb
mov
pop
dec
data16
mov
shl
sahf
mov
inc
jns
test
cmp
or
lret
mov
idivb
add
xchg
iret
bound
and
push
mov
cmpsb
hlt
ret
sahf
clc
in
lods
cli
decl
movsl
inc
inc
rcrl
pop
cmpsl
sub
sbb
cs
into
mov
lret
inc
ljmp
mov
mov
rcl
cld
sarb
mov
ljmp
leave
pushf
in
pop
xchg
add
xchg
mov
push
and
dec
ret
insb
insl
es
xchg
mov
adc
jnp
lock
add
mov
test
xor
ljmp
xchg
sbb
mov
leave
xchg
push
dec
sbb
add
inc
loop
fwait
stc
test
mov
js
sub
sub
cmpsl
test
test
jg
or
jne
adc
arpl
mov
das
dec
jle
incl
pop
enter
es
mov
addl
or
mov
dec
pop
dec
pop
movsl
inc
bound
jle
divl
push
and
mov
fnstenv
call
push
mov
scas
movsb
shlb
inc
scas
pop
rolb
fs
mov
out
test
mov
clc
stos
inc
cld
mov
icebp
adc
subb
ljmp
loope
int3
jle
dec
sbb
imul
stos
clc
call
cld
inc
out
jmp
mov
cmpsl
lret
sahf
repnz
mov
lock
das
push
insb
jb
xor
push
push
cltd
or
call
fbstp
dec
scas
cmp
mov
rolb
pop
or
cld
push
adc
ficompl
pop
pop
lods
pop
xchg
incl
fildl
loopne
out
add
sub
xor
sbb
jno
decl
test
jp
push
or
xlat
inc
jne
loop
inc
sub
insb
mulb
cmpsb
pusha
pop
aam
gs
jbe
mov
pushf
dec
out
dec
addl
cmp
and
mov
mov
ja
sub
sarb
mov
xchg
shl
hlt
jecxz
stc
and
sub
popf
sub
incl
test
les
cmp
xor
nop
push
inc
adc
adc
ljmp
in
push
dec
mov
mov
lcall
pop
das
pop
and
dec
xor
fwait
out
add
popf
das
insb
cmc
scas
js
jns
das
cmp
add
sub
sub
scas
add
lods
lods
push
out
mov
or
pushl
or
pop
sahf
mov
mov
lock
mov
push
push
mov
jge
fmul
pusha
cwtl
incl
jmp
add
out
cmc
sbb
mov
lea
add
sbb
call
jae
lds
push
push
aad
ljmp
and
push
leave
mov
sub
pop
addr16
dec
das
or
movsb
fwait
dec
jg
jmp
ss
repz
jae
insb
in
xchg
fcmovu
add
xor
fisttpll
in
ljmp
fsubrl
je
xor
xor
jl
daa
cmp
adc
and
xchg
out
cli
sub
mov
jg
mov
jae
xor
fsubrl
sub
lods
fwait
xor
jmp
sarl
pop
mov
sbb
mov
pop
mov
dec
test
add
ljmp
push
shrb
add
cmpsl
or
stc
scas
pop
ljmp
test
jae
aad
loope
push
adc
stc
sub
xchg
out
cli
call
popf
fwait
ss
jb
pop
push
jge
andl
xor
subb
pushl
push
mov
dec
sub
stc
lret
pushf
imul
sti
add
nop
mov
jb
pop
cmp
dec
mov
jbe
add
ficompl
jmp
aas
outsl
sbb
fbld
mov
enter
sbb
fwait
and
or
jl
insb
decl
or
lock
sbb
subb
jp
lock
js
jmp
inc
mov
clc
pop
xorl
and
mov
and
sub
jbe
sub
stos
mov
push
lods
and
or
xchg
lahf
dec
scas
lods
ds
inc
fwait
cltd
cmc
add
add
mov
jmp
cs
fsub
lods
cld
incl
dec
test
es
out
lods
jbe
mov
pop
add
cltd
sub
pushl
lcall
mov
pop
stos
lds
fstl
test
mov
ljmp
stos
data16
dec
mov
stos
pop
dec
les
fucomip
push
gs
xchg
ljmp
push
dec
pop
jle
cwtl
xchg
aas
enter
fldcw
or
or
pushl
lret
pop
mov
cmp
std
lret
shll
js
jecxz
mov
xor
pop
icebp
call
jge
pop
adcl
inc
arpl
addb
ljmp
sub
inc
outsl
stos
jge
stc
sub
popa
notb
inc
sahf
and
adc
push
pop
inc
imul
call
xchg
rorb
jo
xchg
cmp
sti
leave
inc
mov
xchg
sbb
jle
mov
ficomps
and
and
and
mov
mov
jg
loop
and
jg
jmp
adc
cltd
andb
stos
decb
sbb
movsl
push
incb
imul
or
xchg
insl
shll
pop
loop
mov
test
imul
and
xchg
bound
sbb
call
xchg
jnp
jne
jg
mov
leave
mov
fs
out
mov
test
dec
mov
test
mov
push
decl
xchg
cmc
xor
jnp
sbb
mov
dec
jo
mov
mov
cltd
pop
xlat
decl
std
and
mov
inc
add
arpl
mov
ljmp
pop
rcrb
adcb
ret
cmp
gs
test
fisttpll
cwtl
add
adc
aaa
std
mov
lahf
lcall
push
sbb
mov
fildll
mov
int
ss
jo
loop
xchg
cmp
mov
push
rcll
stos
xor
lret
ja
data16
cli
decl
testb
lods
adc
mov
cmpl
adc
mov
adc
call
xor
roll
in
mov
lods
sahf
pop
icebp
jecxz
out
xor
pop
inc
push
mov
push
incl
pop
cmp
repnz
stos
push
xsavec
cmp
call
call
jae
mov
in
scas
pop
mov
cmc
jne
xor
mov
paddw
jg
sbb
aaa
iret
test
xchg
mov
xchg
mov
movsl
jle
stos
aas
stc
scas
stos
mov
mov
sbb
lock
xchg
mov
scas
jecxz
nop
shll
mov
pop
and
int
pop
push
packssdw
xor
repnz
aad
shlb
inc
inc
cmp
lea
loope
sbb
sub
mov
loop
lcall
cmpb
ror
insl
cmp
outsl
jp
shll
rorb
mov
scas
in
jae
lea
dec
stos
xor
adc
sahf
in
pushl
negb
xchg
lods
mov
xchg
sbb
pop
lret
outsb
test
xchg
mov
jmp
lock
sbb
ds
std
push
sub
scas
in
aad
sbb
mov
jp
daa
adc
fwait
or
or
lock
sub
xor
lea
ret
scas
test
in
inc
pop
pop
pop
roll
sub
xor
scas
mov
add
cld
int3
test
movsl
cmp
sarb
rcrb
js
sbb
lea
clc
aad
xchg
xor
pop
rcl
mov
xchg
addr16
test
mov
mov
mov
call
scas
sahf
nop
jmp
sub
cs
push
pop
pop
cmpsb
lods
add
ljmp
or
outsb
out
mov
adc
popa
mov
mov
xor
lds
xchg
cmp
mov
outsb
gs
in
dec
insl
cmpsl
push
aad
cli
loopne
cld
call
nop
in
and
nop
ljmp
jmp
mov
sbb
push
inc
sub
scas
outsl
xchg
lods
scas
clc
dec
dec
movd
xchg
push
xlat
add
out
das
cli
call
sbb
daa
lods
xchg
xorl
sub
mov
jmp
add
incl
push
scas
push
mov
idivl
pop
jge
pop
cltd
push
fxch
popf
iret
add
decl
loopne
jle
and
ret
sahf
push
lret
inc
imul
cld
jg
sub
or
outsb
scas
mov
cmp
fnstcw
push
mov
jmp
mov
adc
jo
les
push
clc
lcall
call
dec
xchg
lahf
push
sti
lods
popa
mov
ljmp
shll
push
mov
insl
in
xchg
into
into
arpl
xor
dec
or
add
out
enter
movsb
push
push
or
jmp
and
and
jmp
xor
pop
jae
cmp
nop
add
dec
arpl
xor
js
jne
idiv
decl
push
xchg
and
aas
pop
aad
sbb
mov
enter
movsl
push
loope
xchg
stc
icebp
pushl
sbb
sbb
lods
and
test
sub
js
lret
cmp
sahf
xor
out
loope,pn
xor
cwtl
or
mov
fnsave
aam
repnz
ljmp
xor
mov
mov
inc
jle
and
cmp
clc
addr16
lods
dec
jnp
decl
call
mov
aas
cmpsl
xchg
sbb
push
inc
cli
ret
dec
cs
inc
fdivrp
jmp
lea
sbb
sbb
aam
jl
outsl
pop
loop
sub
in
and
popf
jecxz
fnsave
mov
cmp
mov
mov
movsb
pushf
call
cmpsb
sbb
xchg
or
jmp
push
mov
jmp
lret
movsb
mov
push
sub
jg
and
movsl
xor
dec
dec
or
jns
int3
mov
and
sbb
lea
xor
mov
lahf
ret
cs
fisttpl
aad
cmp
xor
cmpsb
inc
stc
fdivr
data16
xor
cltd
mov
inc
daa
and
ret
jmp
repnz
imul
ss
lcall
fwait
jne
in
into
or
jg
xchg
sti
xchg
mov
ret
je
pushl
jo
out
pop
mov
jae
fs
daa
je
sbb
cwtl
pop
insb
xor
and
pushl
cmp
or
repnz
repz
pop
ss
pop
divl
and
push
pushl
lret
mov
xor
jb
insl
push
repz
pop
dec
jmp
add
sbb
add
mov
and
sbb
out
sbbb
sub
ljmp
cli
fs
pop
in
jae
cmpsl
fdivrs
mov
pop
inc
push
jl
pusha
sbb
jmp
cmp
mov
mov
jb
push
lea
push
mov
dec
dec
sbbl
adc
sti
cmp
out
adc
psrad
and
and
ljmp
xor
cmp
stos
sub
sahf
mov
sbb
call
or
dec
adc
add
dec
push
sbb
mov
mov
sbb
jg
mov
rcrl
sub
sbb
fmull
mov
out
decl
xchg
scas
cmc
xchg
pop
push
std
cmp
mov
inc
push
xor
and
xor
clc
out
clc
call
popa
bound
xor
and
and
pop
out
mov
cmpsl
sahf
cmpsb
hlt
test
addr16
std
clc
push
mov
add
mov
lcall
mov
imul
dec
mov
loop
frstor
mov
mov
push
push
sbb
lods
xchg
aad
inc
inc
loope
lods
mov
lock
inc
pop
cld
outsb
insb
int
outsb
xchg
mulb
lds
sahf
jmp
call
ja
out
mov
cltd
ja
pop
int3
sbb
fisubrs
stc
roll
jge
inc
mov
ljmp
or
arpl
testb
js
mov
hlt
ljmp
fcos
pushl
sub
mov
es
lahf
jb
jbe
cs
clc
cmp
xor
pop
xor
in
leave
mov
mov
dec
fisttps
fistl
cmp
out
out
imul
es
int3
fdivs
xor
sbb
push
xchg
sti
mov
jg
adc
pop
mov
lret
dec
mulb
les
lcall
stos
and
mov
ss
paddusw
idivl
pop
cwtl
push
ss
push
mov
xchg
mov
call
mov
xor
scas
or
cmp
jbe
gs
test
test
jg
scas
or
icebp
cld
inc
in
icebp
sub
mov
xchg
fucomi
scas
mov
outsl
mov
incl
loop
xor
and
lea
sbb
mov
push
sub
add
dec
inc
dec
and
xor
loope
shl
xor
xlat
cwtl
sbb
sbb
stc
add
fs
jecxz
push
fistpl
mov
sahf
jae
adc
inc
adc
add
ljmp
gs
lcall
xchg
xchg
ss
lret
clc
jge
rorb
ljmp
push
pop
sbb
test
fsubrs
add
pop
lods
mov
ljmp
xchg
incl
insl
test
sbb
xor
add
stos
nop
movb
xchg
sbb
int3
cmp
and
adc
dec
and
aaa
pop
inc
icebp
in
xchg
loop
jmp
mov
mov
pop
or
gs
int
daa
cmc
cmp
sub
lock
mov
pop
in
sbb
and
repnz
inc
pop
stos
pop
out
jmp
test
mov
aad
xlat
and
out
incl
jge
outsb
das
lods
push
inc
test
fsts
fwait
jle
sar
aad
cld
push
ljmp
cmp
fwait
or
js
cli
jmp
mov
dec
in
out
xchg
push
jne
inc
push
adc
xchg
xchg
mov
cltd
mov
movb
push
adc
dec
sub
adc
xor
test
aaa
mov
rorb
or
jp
pop
lods
xor
dec
jb
divl
xchg
rcrb
jo
pop
or
xchg
xchg
std
mov
add
jl
push
addr16
imul
add
cmp
mov
in
aas
cs
and
aaa
andb
and
or
popf
inc
insb
scas
ret
lret
les
pushl
out
addb
or
cmp
jmp
push
pop
in
stos
mov
loop
or
cmpsl
pop
lock
pushl
or
sub
mov
fs
jge
lret
xor
dec
and
setno
xchg
mov
or
jl
cmp
xorl
leave
out
lea
pop
sub
mov
sahf
mov
fildll
mov
mov
adc
push
cmc
outsl
lahf
ret
pop
imul
call
push
xor
sbb
xor
sti
ljmp
pop
flds
add
ljmp
ja
test
dec
nop
out
ret
sub
push
jns
add
add
lods
and
aaa
pop
into
dec
dec
jecxz
hlt
pushl
movsl
cmp
outsb
outsl
pop
adc
fistpl
aas
insb
ljmp
and
add
in
rcr
test
add
sbb
call
mov
out
and
lock
shrb
pop
sub
cld
mov
rcrb
and
cld
scas
cmp
les
jecxz
addr16
test
lea
dec
add
vmovaps
jmp
xor
scas
pop
or
lcall
and
fdivrl
xor
push
xor
popf
test
pop
lret
insb
mov
push
cmpsl
aad
sbb
cmpsl
dec
je
cmp
pop
mov
jg
push
out
and
mov
cmpsb
mov
add
inc
sub
in
jns
movsb
scas
rclb
cli
pop
push
push
inc
cmc
mov
mov
in
inc
mov
lcall
xor
adc
lahf
xor
ja
pop
adcb
inc
sti
les
dec
lds
popf
cmp
mov
xchg
fcompl
sbb
shrl
and
sahf
add
cmp
dec
mov
inc
fwait
hlt
sti
outsl
sub
decl
jbe
dec
push
cmp
cmp
outsb
sub
push
add
xchg
sahf
cmpsb
mov
pop
pop
call
mov
aad
mov
call
and
push
sub
in
pushl
fdivrs
out
push
sbb
pop
jno
pusha
mov
repnz
loop
fadds
push
mov
and
nop
fucom
das
sahf
repnz
jl
daa
cld
loop
sbb
sbb
cmc
das
add
scas
divb
mov
data16
lcall
mov
divl
in
adc
mov
inc
popa
fstp
aas
xor
pop
fistpll
xor
cmp
push
pushf
adc
iret
fwait
sbb
xchg
mov
sbbb
sbb
xor
decl
mov
inc
cmp
mov
lahf
or
mov
adc
xchg
incl
xor
mov
cmpsb
mov
and
sub
inc
int3
push
jb
call
push
and
fwait
int3
sbb
or
lcall
sbb
in
fcmovnb
outsl
arpl
fiadds
sub
cld
das
cli
fidivrs
pop
js
rcr
adc
lods
mov
sub
pushl
jno,pn
imul
fmuls
pop
enterw
mov
dec
pusha
std
pusha
das
pop
and
mov
pop
hlt
decl
jns
mov
fwait
mov
xor
popf
pushl
lds
bound
pushl
subl
je
mov
xchg
je
pusha
mov
aad
test
ljmp
ljmp
push
xchg
lret
mov
scas
add
and
inc
jle
popa
cs
fstps
das
movsl
sbb
bound
paddq
pop
mov
and
push
jb
push
mov
sar
jmp
imul
pop
stos
xchg
aaa
lcall
add
mov
push
ficompl
das
adc
xor
aad
aas
pop
loopne
add
xlat
jecxz
pushf
inc
adc
inc
pop
cmp
incl
mov
or
sub
stos
fs
pop
and
and
push
popa
mov
push
add
or
jne
xor
add
decl
or
leave
jge
shlb
sti
clc
xchg
gs
mov
add
mov
call
popa
into
das
out
mov
mov
xchg
inc
jp
mov
jo
mov
and
jl
adc
xor
push
adc
cs
cli
gs
incl
jg
pop
sti
pop
mov
dec
bound
sub
std
xchg
xchg
dec
dec
in
and
fbstp
adc
mov
test
push
test
dec
pop
lods
mov
push
pop
mov
inc
insb
push
sbbl
or
sbb
loopne
fimull
pushw
test
fcmovnu
outsl
hlt
pop
pushf
mov
mov
push
fildl
shrl
clc
jno
call
in
fcoml
std
test
test
sbb
push
inc
pop
test
jge
xchg
cs
pushl
insb
enter
push
cmp
sbb
jbe
mov
mov
adc
lock
cs
pop
mov
cmp
test
adc
mov
leave
jmp
xchg
sub
dec
dec
mov
adc
xor
fidivl
aad
push
das
fcompl
and
inc
xchg
mov
jg
add
and
pop
shrl
jbe
jle
lock
idivb
call
cwtl
gs
xchg
and
jp
and
push
adc
pop
push
fcoms
lcall
adc
and
add
jl
push
aad
loop
lods
mov
push
pushf
and
ljmp
mov
or
test
decb
jnp
cmpsl
add
jg
mov
add
or
or
ds
call
pop
js
pop
cmc
ja
jo
sub
dec
sub
lods
incl
add
mov
sub
sub
xor
xor
dec
xchg
pop
mov
cmp
jg
inc
cwtl
ds
lret
neg
addr16
push
push
mov
pop
dec
sahf
das
call
sahf
lods
push
arpl
pushf
scas
repz
push
int3
icebp
aaa
std
push
adc
push
mov
ja
pusha
aad
lods
add
xorb
mov
adc
sbb
ljmp
push
xor
call
out
test
dec
pop
lock
out
adc
call
push
fwait
nop
xor
mov
dec
sub
and
jecxz
outsb
popf
dec
pop
push
mov
enter
je
icebp
filds
cmp
add
sbb
mov
int3
mov
das
inc
int
pop
push
mov
imul
jb
xor
icebp
xor
sub
pop
push
es
leave
decl
push
bound
fucomip
gs
adc
sbb
fdivl
push
mov
mov
addr16
sbb
adc
into
fcomps
insb
xchg
pop
daa
sti
lcall
jnp
lcall
fcmovb
gs
subl
outsb
imul
pushf
xor
stos
mov
icebp
cld
and
inc
into
popa
mov
jge
push
gs
mov
and
call
and
loop
jl
jmp
fisubrs
dec
push
shrl
inc
push
lds
test
sub
cmp
clc
push
aam
repz
adc
and
out
sbb
fiadds
decl
mov
cli
clc
or
mov
xchg
cmpsl
jge
rcrb
dec
add
dec
test
aas
xor
fidivrl
aam
mov
pushl
push
fistpl
pop
mov
cltd
mov
sbb
out
push
push
sub
push
or
cmp
pop
popa
call
es
pop
sti
push
adc
mov
stos
mov
mov
outsb
subb
or
mov
clc
sub
aas
das
mov
cmpsb
ljmp
cli
lcall
add
mov
pop
add
pop
adc
aaa
sbb
fmul
popa
sub
subl
inc
es
mov
jo
jge
out
cmpsb
cmp
jmp
and
mov
xor
inc
xchg
decl
mov
orps
adc
lahf
js
lret
adc
cmp
fldl
sbb
mov
pop
cs
call
sub
xlat
push
cmp
jne
daa
add
in
sub
mov
in
loop
jl
bound
das
fs
mov
pusha
xlat
cmpl
pop
scas
inc
xchg
cwtl
add
jno
jo
stc
and
push
pushl
push
aas
shlb
lcall
jge
clc
stc
sub
push
jp
mov
push
ret
pop
push
out
mov
or
mov
scas
adc
push
fstl
jnp
push
push
test
imul
dec
push
push
imul
popa
fistl
pop
out
add
push
and
dec
push
or
add
sbb
dec
jmp
push
sub
arpl
cmp
adc
or
lock
sti
xchg
push
adc
pop
xor
mov
out
pop
mov
aad
push
sub
inc
out
add
pop
push
loop
jg
lcall
cmp
dec
fnsave
rorl
popa
pop
pop
pop
jno
idiv
call
inc
popa
test
xor
es
popa
iret
notl
clc
pop
jmp
ljmp
mov
jg
mov
mov
sbb
loope
push
fists
xorb
fisttpll
mov
lock
sbb
daa
jns
mov
jp
cld
lods
loop
decl
xor
aam
lods
hlt
dec
cwtl
pop
xchg
fsts
scas
xor
fstpl
cmp
stc
push
sub
jecxz
push
push
add
xlat
inc
jne
mov
flds
mov
lods
fistpll
fbstp
cmp
add
aaa
xchg
jl
sbb
xor
inc
push
pop
ljmp
mov
jmp
fs
xchg
inc
push
mov
rclb
and
mov
scas
mov
lret
dec
push
sahf
cmp
pop
loopne
ljmp
icebp
bswap
sub
mov
test
mov
jne
decl
sbb
addb
andb
sub
arpl
jmp
call
decl
and
das
adc
xor
cwtl
and
outsb
xchg
stos
fnstsw
or
imul
adc
mov
lods
cmp
dec
not
mov
std
mov
pop
cld
fistpl
inc
nop
pusha
fisubrs
cmpsb
cmp
jle
pop
ss
jg
dec
loop
sar
call
pop
dec
adc
lock
int
cld
test
mov
imul
hlt
cmovge
mov
push
cmp
aaa
lods
inc
fildl
dec
loopne
push
insb
gs
mov
jle
lcall
call
repnz
pop
fcomip
mov
and
fsubr
nop
push
imul
mov
push
scas
idivb
test
ljmp
loope
jle
and
xchg
fdivr
call
add
nop
mov
sbb
push
or
inc
leave
xchg
inc
cli
clc
jmp
popa
mov
add
dec
push
fsubr
cmp
push
mov
inc
or
mov
adc
in
out
sahf
sbb
fwait
out
js
jle
pop
insl
dec
int3
add
dec
mov
clc
subb
and
mov
adc
mov
pop
lahf
and
jle
das
lcall
fildl
loop
cli
test
inc
dec
ds
cmp
mov
call
nop
shll
int3
jp
pop
mov
xchg
dec
adc
mov
sbb
pushl
and
xchg
inc
mov
fwait
je
pushl
adc
lret
pop
dec
cmp
pushl
jecxz
jg
int
aaa
jge
jmp
inc
jg
xor
push
int
xchg
sar
xchg
jmp
cld
dec
rcr
addr16
or
dec
das
adcl
push
and
cmp
outsl
push
xor
add
fnsave
ret
rcrl
and
pop
repz
ljmp
dec
pop
xor
inc
out
fisubl
add
stos
sub
dec
add
sub
add
jno
ljmp
xchg
cmpsl
push
sti
fnstcw
jp
jl
addl
aad
inc
jl
fwait
addr16
pop
lcall
add
stc
push
push
cli
mov
ljmp
stos
rorb
or
mov
push
dec
pop
cld
bound
scas
int3
arpl
cltd
pop
xchg
push
cmpsb
fdivrs
mov
sbb
scas
jbe
cmp
sbbl
aam
call
std
pop
cmc
jae
pop
xchg
clc
adcb
jnp
sti
cmp
push
ss
js
xchg
call
femms
leave
ret
jecxz
push
xchg
mov
adc
dec
jp
mov
pusha
scas
js
lcall
ljmp
and
mov
and
scas
insb
adc
enter
adc
sub
ud0
decl
mov
int
cs
dec
push
push
psadbw
adc
mov
inc
cmp
xlat
daa
out
incl
mov
jmp
lret
pusha
xor
mov
je
jmp
jbe
ja
je
sub
cmp
cmc
stc
or
std
xor
out
jb
decl
pop
adc
data16
push
cmp
in
mov
jmp
dec
cmp
leave
mov
fs
in
cmp
leave
test
fwait
sar
mov
add
rorb
test
add
outsb
cmc
pop
jae
lods
jns
ss
mov
add
jmp
xor
xor
ss
xchg
dec
dec
and
in
into
and
test
call
sti
ljmp
js
mov
dec
loop
stc
sub
and
mov
push
jne
sbb
sbb
in
incl
jecxz
imul
data16
cmp
nop
lret
dec
pop
inc
cli
push
addr16
xor
popa
sub
enter
outsl
mov
out
mov
xlat
cmp
repz
call
cmpsl
xor
sbbl
cmpl
mov
mov
fcomip
and
sbb
sub
add
fdivrs
lcall
call
lock
sbb
dec
outsl
std
dec
sbb
repz
lods
or
in
dec
jb
add
xchg
mov
inc
idivl
into
pop
and
adc
fstpl
scas
mov
xlat
jmp
inc
in
pop
xchg
cmp
js
dec
lods
call
jno
mov
pushl
cld
clc
insl
leave
lret
into
xchg
adc
ds
xchg
push
scas
imulb
jg
out
mov
cmp
jg
pushl
add
and
fs
data16
mov
ljmp
inc
jmp
or
shll
xchg
roll
add
rcrl
out
roll
fnstsw
adc
cwtl
push
das
cmc
push
pop
mov
inc
xlat
out
cld
je
insb
sbb
jo
popa
mov
push
xchg
pusha
pop
xchg
stc
addr16
pop
test
sbb
lea
lret
clc
call
pusha
aam
adc
out
out
frstor
out
cli
imul
lcall
notb
insl
or
dec
data16
sbb
imul
jg
int3
outsl
es
adc
jg
dec
cmp
mov
xor
in
inc
mov
addr16
mov
lock
gs
and
jg
mov
adc
dec
sbb
ljmp
addb
xlat
mov
bound
loopne
incl
jo
push
test
inc
adc
mov
testb
xchg
push
or
int3
icebp
inc
push
lahf
pop
and
push
and
push
ret
punpcklbw
jg,pn
ljmp
mov
xchg
jl
pusha
sti
adc
pop
test
mov
jo
pop
inc
gs
sub
cld
notb
imul
jne
jmp
inc
aas
cmp
add
stos
pop
jecxz
dec
call
jb
push
or
cwtl
mov
mov
fwait
and
lcall
ljmp
dec
jb
pop
mov
cli
incl
test
outsb
jle
mov
push
jbe
test
and
lods
std
idiv
std
mov
jnp
adc
test
or
jecxz
inc
jg
loopne
adc
jmp
repz
pop
push
std
mov
pop
xor
cmp
fcoms
jg
pop
sbb
push
iret
test
sub
dec
ss
xchg
jge
bnd
inc
push
rorb
mov
mov
mov
shll
pop
dec
add
in
ljmp
test
incl
stos
arpl
cwtl
push
imul
sbb
cmp
call
sbb
mov
push
pop
add
ss
or
ja
jno
or
push
repz
sub
push
or
add
fildll
and
inc
sti
dec
pop
fdivl
call
clc
push
lret
stos
mov
shlb
int3
sbb
cmpsl
sbb
xor
xlat
sbb
adc
ljmp
jne
mov
ds
in
mov
pop
insb
insb
pop
lds
push
push
stc
insl
fwait
rcrb
fcmovnb
jecxz
or
decb
out
out
hlt
inc
mov
loopne
pop
ljmp
incl
jg
int3
inc
lods
push
xor
adc
loope
lcall
outsl
sbb
mov
imul
inc
mov
addl
arpl
hlt
lahf
cmp
cmp
or
xor
sbbb
sti
and
mov
mov
arpl
jp
inc
add
cmp
inc
fs
and
ds
nop
and
push
inc
popf
flds
push
fildl
sbb
cmp
xor
xor
mov
bound
inc
decb
fsubr
outsl
xchg
xchg
mov
arpl
stos
push
adc
adcb
out
mov
imul
aaa
fists
push
stos
sbb
add
jmp
in
cmp
xchg
fs
push
or
xor
dec
fbld
loop
insb
and
mov
gs
xchg
out
hlt
scas
mov
xchg
push
hlt
test
fwait
add
cmp
xor
in
xor
incl
push
scas
push
cmp
cmp
fs
cmpsl
cs
rol
int
iret
jne
call
fsts
push
lea
addr16
add
scas
mov
cs
ljmp
out
into
fidivrl
mov
xlat
in
lret
ss
pop
xchg
cmp
jecxz
imul
push
imul
ljmp
mov
ja
pop
pop
jb
aaa
lcall
sbb
sarl
xor
pop
sub
xchg
cmpsb
test
lods
jb
add
jo
xchg
dec
jle
idiv
jg
lock
sahf
aas
pop
icebp
fsub
or
inc
push
pop
lods
call
outsl
xor
mov
jmp
cmp
cmp
push
or
jne
xchg
in
xor
jne
xor
scas
mov
sar
fwait
cmpsl
sbb
dec
cs
sub
insb
pop
push
jne
std
das
rcrb
push
pop
pushf
lds
dec
imul
fcomip
inc
push
mov
inc
lret
aad
ss
enter
dec
cltd
loopne
sahf
jae
jmp
mov
xor
int
mov
adc
add
pop
inc
stos
mov
fidivrl
loopne
popa
pop
icebp
push
push
jmp
jecxz
insb
adc
lods
push
rolb
pop
xchg
push
or
mov
xchg
cmpsl
jge
and
sbb
mov
push
or
test
mov
jmp
sub
or
ss
aad
imul
ficoms
gs
insb
out
je
pop
stc
call
push
pop
cmp
sbb
xor
insl
sub
fsubrl
loopne
mov
jecxz
popf
test
adc
mov
mov
sbb
sbb
in
jae
xchg
loope
movl
sub
clc
loopne
jo
sbb
and
mov
fdivr
jg
test
loop
cld
mov
cmp
xor
add
decl
xchg
test
lcall
jmp
add
dec
jo
in
xlat
xchg
or
test
icebp
pop
jl
loopne
xchg
enter
pop
mov
ror
inc
push
jecxz
aam
add
and
into
out
ljmp
scas
aam
nop
mov
loop
mov
sbb
or
mov
jne
mov
cmp
inc
pop
out
push
fmul
sbb
aas
lods
adc
fcmovnbe
and
decl
out
pop
cwtl
push
cmp
jae
movsl
jge
pop
pop
sbb
das
cmp
and
ds
inc
insb
fs
xchg
push
push
xchg
mov
popl
cmp
out
cltd
fsubl
jmp
call
fcomps
xchg
jne
mov
scas
or
mov
dec
and
pop
fadd
aad
adcb
fstl
or
inc
lods
repz
scas
cmp
loope
stos
or
mov
call
cld
pusha
cmc
inc
sub
sub
addr16
xchg
mull
fbld
dec
test
sbb
jl
in
mov
std
call
adc
inc
cmpsb
sbb
pop
inc
incl
lods
testb
sbb
pop
mov
mov
testl
mov
add
out
sahf
insb
ljmp
add
and
jno
mov
arpl
insb
decl
popf
rolb
mov
jne
insb
or
outsl
fsts
xor
xor
call
ljmp
hlt
sub
adc
lret
pop
insl
mov
fstpl
idiv
sbb
mov
jecxz
mov
inc
mov
cmpsb
outsb
xlat
out
mov
stos
ret
fcomip
scas
xchg
sbb
js
and
popa
les
arpl
insl
andnps
incl
mov
jns
push
iret
xchg
cwtl
push
xchg
inc
je
xchg
cmc
lcall
inc
hlt
sahf
dec
jo
pop
mov
lods
clc
add
sub
push
lcall
arpl
lfs
data16
je
pushl
or
or
dec
loope
mov
mov
outsb
popa
popf
test
decl
decl
push
popa
xorl
push
or
jl
adc
or
pop
incl
pop
or
rclb
cmp
clc
decl
inc
sbb
pusha
sti
fstpl
subb
mov
or
add
pushf
test
das
cmp
int
jp
daa
jb
cli
insl
lods
rolb
or
xchg
mov
psrlq
inc
add
loope
mov
mov
jg
ljmp
sub
xchg
outsl
mov
push
pushf
stos
sub
or
out
jmp
jecxz
push
cmp
sbb
stos
ja
or
push
xchg
nop
pop
fcomip
jmp
out
push
pop
movsl
int3
addr16
aad
fsub
idiv
mov
pushl
add
sbb
addl
or
pop
pop
push
lock
stos
inc
aaa
scas
push
sbb
cmp
aaa
push
popl
scas
addb
inc
or
lods
xor
jno
hlt
enter
cmp
out
leave
fcomps
xor
push
or
enter
out
cmp
cmp
decl
lret
mov
test
cmp
xor
aas
mov
add
pushl
dec
movsl
lods
mov
mov
cmpsb
jbe
lret
jmp
fiadds
pop
call
incl
lret
or
lcall
ficomps
aaa
pop
es
dec
jg
jge
ljmp
cmp
in
mov
sub
pop
sti
sub
sbb
incl
pop
sbb
or
jae
sbb
mov
arpl
in
ficoms
pushl
adc
dec
int3
dec
ja
mov
out
push
outsl
les
movl
xlat
mov
clc
jmp
sbb
mov
sti
dec
xchg
loope
addr16
in
xchg
call
arpl
lcall
mov
enter
ljmp
cli
or
pop
jae
xchg
repnz
mov
mov
mov
pushl
and
test
sbb
or
sbb
cld
mov
int3
ljmp
decl
into
cmp
test
xchg
sbb
add
gs
call
sub
sbb
adcb
and
adc
lods
adcb
loope
xchg
fistpl
cli
cmp
xchg
jg
mov
mov
xchg
push
ds
pop
test
stos
inc
lock
cld
sub
mov
fisttps
loope
xor
add
push
add
adc
add
or
cwtl
push
out
lods
cmpb
jo
sub
ss
cmp
inc
lods
iret
adc
or
jecxz
sbb
pushf
sub
mov
roll
int3
call
push
scas
push
add
ss
testl
lods
js
insb
lods
xor
cmp
mov
sub
or
xchg
add
and
cmp
jg
arpl
lret
lods
cltd
out
mov
or
ljmp
push
fidivrs
jno
mov
lock
dec
or
lods
loope
cli
ss
out
mov
pushl
cld
ljmp
fidivl
or
outsl
pop
popa
jns
jbe
addl
sbb
shr
dec
rclb
or
jmp
xchg
lcall
icebp
incl
stc
adc
fisubrl
test
pop
mov
and
stc
es
es
jge
je
fcom
cmpsb
lods
loopne
or
sbb
jg
mov
es
and
push
lock
cmp
in
loope
addb
or
arpl
and
cmp
incl
jge
jg
pop
cltd
ljmp
xor
pop
and
movb
jo
inc
inc
cmp
cmp
and
fmull
and
aaa
test
fstl
out
data16
push
inc
dec
mov
ljmp
push
jbe
call
xor
cmp
into
ljmp
fiaddl
das
adc
pop
inc
out
ficoms
xor
push
lcall
inc
or
dec
divb
push
or
add
inc
sub
inc
in
xor
std
clc
fdivrl
add
push
jo
and
cmp
inc
cmpsb
push
aas
xor
xchg
mov
jg
call
int
test
cld
stos
adcb
addr16
pushl
mov
arpl
outsl
gs
xor
inc
test
pop
xor
fildl
pop
dec
fidivrs
es
jmp
xor
xor
int3
incb
xor
jb
test
add
adc
pop
shl
int3
hlt
pushl
push
cltd
xor
cmp
sysenter
add
pop
aaa
lock
push
pop
push
jb
or
push
fsqrt
test
sub
in
jg
dec
xor
xchg
cld
inc
dec
jge
and
jmp
xchg
dec
jnp
ljmp
leave
sub
or
sub
fdivl
insl
loop
iret
movsl
fdivl
cld
dec
cmpsb
cmp
cmp
dec
daa
pop
sbb
mov
std
jg
cmp
sti
mov
mov
xchg
loop
ss
xor
fisttps
inc
ss
inc
scas
jbe
xchg
push
and
ds
pop
sub
mov
int3
cmp
mov
dec
std
pusha
adc
mov
test
push
and
in
xor
jg
inc
jno
fisubl
popa
xchg
inc
test
sub
xor
push
xor
cltd
pushl
sub
push
int
cltd
sbb
fxtract
es
pop
arpl
sbb
mov
call
push
fstl
ja
lret
data16
popf
cltd
sub
jle
faddl
shll
ljmp
xor
scas
orb
dec
insb
push
pop
xchg
lods
pop
mov
ljmp
jne
cs
in
sub
test
dec
push
xor
and
pop
and
addr16
add
int3
sahf
gs
add
scas
xchg
sub
pop
or
call
jg
ljmp
divl
int
data16
xchg
fdivs
lcall
leave
jl
es
cmova
add
lods
daa
dec
jbe
cmc
push
sbb
decl
das
cmp
cld
cs
sub
insl
mov
aad
or
push
or
pop
cmp
adc
add
data16
fs
pop
cmp
inc
ficomps
mov
das
add
ljmp
push
ja
mov
xchg
adc
pop
push
into
mov
std
call
mov
push
sub
sar
test
mov
repnz
in
jns
add
jg
cmp
rcll
pop
push
test
jecxz
aas
outsl
shlb
daa
mov
mov
ffreep
loopne
adc
cli
dec
jle
std
or
in
cltd
cmp
sub
push
adc
and
xor
dec
jbe
arpl
in
xchg
pmaxub
push
dec
ja
jno
popl
adc
jp
out
and
jo
mov
arpl
push
daa
add
out
sahf
loop
arpl
lret
imul
or
inc
xor
pushl
mov
push
cmp
fisttpl
scas
jl
repnz
lcall
aaa
jmp
pop
sahf
out
in
dec
inc
push
xlat
jg
fbstp
xchg
test
xor
lds
mov
mov
dec
stos
cmp
sub
stos
fadd
aam
jmp
sarl
cmp
out
lcall
ss
cltd
loopne
test
in
xchg
sub
dec
pop
sarb
aas
push
sbb
ljmp
sub
sub
jg
mov
sub
jbe
mov
ss
std
ljmp
jecxz
repnz
cmp
sub
hlt
cmp
mov
out
test
lods
dec
or
sti
push
inc
or
or
stc
xor
xchg
sar
pop
loopne
xchg
mov
out
sub
sub
or
dec
arpl
test
dec
shlb
std
pushl
cmc
add
add
mov
mov
sbb
cld
cli
mov
dec
jmp
sub
cwtl
and
inc
in
scas
in
mov
sbb
xchg
fcmovb
les
jbe
xchg
popa
add
std
test
push
lods
popf
movsb
imul
xor
lcall
jg
loope
jns
rorl
test
add
jnp
rorb
push
pop
sar
jle
test
mov
or
pop
sar
idiv
mov
xor
call
mov
cmp
sbb
lds
sub
test
ljmp
iret
cmp
cmpsl
push
xchg
scas
push
jbe
pop
sub
xor
rclb
jmp
les
int
jnp
fimuls
es
into
mov
sarb
incl
xchg
add
rcl
bound
aam
push
lods
push
sbb
test
ljmp
lret
in
rol
and
test
push
jbe
xchg
adc
fsubl
std
mov
jmp
add
push
mov
xchg
stos
push
lods
add
out
clc
decl
stos
sti
push
xchg
in
mov
pop
bound
movsb
in
in
mov
xchg
xchg
decl
mov
jl
les
jp
in
loop
mov
jecxz
dec
adc
cmp
pushf
dec
cmpl
sub
fldt
xorb
lods
push
jecxz
incl
adc
mov
xchg
xor
pop
cmpb
cmp
sti
xor
das
pop
cmp
arpl
lret
push
xor
js
stc
bound
mov
sbb
sbb
mov
movsl
or
fcoms
in
cmc
pop
cmp
adc
ret
les
mov
aaa
lret
into
dec
daa
ds
loope
incl
fldt
lcall
cwtl
addr16
mov
cmpsb
inc
mov
jg
add
or
leave
add
fidivl
pop
sbb
mov
test
ljmp
andl
cmc
mov
add
adc
lcallw
xchg
les
loopne
ja
int3
cmpb
pop
xor
fcmovb
lret
add
fstps
into
mov
cmpsb
das
adcb
pop
cld
outsl
std
or
mov
xor
pushl
bound
out
and
add
xor
ficompl
pusha
test
sti
pop
push
lea
into
test
xchg
inc
lods
jmp
inc
mov
sbb
mov
pop
push
push
popl
sahf
xorl
testb
ljmp
rolb
ds
aas
test
mov
lea
or
inc
push
cld
cmp
loope
mov
out
sbb
stos
fcompl
ja
cld
xchg
test
das
add
mov
sub
push
xor
push
sub
jg
jl
loope
inc
sbb
bound
pop
dec
pusha
sbb
repz
call
pop
jmp
sti
lret
inc
shl
cli
pushf
js,pn
jns
or
xchg
out
iret
and
pop
xchg
jmp
sub
sti
sbb
lods
notb
lcall
gs
int
mov
lods
nop
aaa
test
xor
and
push
lcall
dec
aas
mov
push
decl
adc
je
add
dec
sti
in
push
mov
ljmp
add
add
or
scas
loopne
push
scas
stc
add
pushaw
adcb
loop
addr16
lcall
xchg
mov
scas
into
inc
push
sbb
mov
gs
insl
and
pusha
jmp
mov
dec
xchg
out
mov
xor
popa
sarl
int3
add
jg
pop
cmp
fimull
xor
das
fimull
inc
jnp
inc
push
push
lret
push
cli
push
scas
decl
cmp
dec
adc
dec
mov
call
pop
out
jnp
jo
test
cmp
xchg
lcall
leave
testb
xchg
addr16
ja
decl
jmp
cmp
sbb
cmp
mov
cmp
lcall
hlt
xor
cmc
mov
pop
inc
pop
xor
icebp
pushl
popa
sub
push
iret
jl,pn
sbb
xchg
js
enter
int3
push
mov
ljmp
xchg
mov
xor
imull
pop
pop
xor
xor
cwtl
inc
adc
fucomi
and
mov
and
jbe
out
cmc
jge
dec
loop
or
ljmp
ss
xor
fsubl
fdivrl
mov
jmp
icebp
pop
or
or
imul
push
call
fnstenv
aas
std
and
ljmp
mov
mov
mov
cwtl
aam
mov
call
gs
imul
ss
negb
sub
inc
dec
or
mov
es
aam
and
scas
mov
push
mov
stc
jnp
cmp
add
call
and
hlt
adc
adc
and
sub
mov
std
daa
call
push
andl
ljmp
jmp
test
aas
lret
outsb
inc
std
pop
fldenv
fdivr
jmp
mov
inc
adc
dec
int3
mulb
lcall
inc
xchg
mov
jno
and
imull
sub
push
imul
hlt
call
and
bound
pushf
dec
orb
std
in
loop
mov
sbb
decl
mov
adcl
call
fisubs
xor
dec
gs
nop
movsb
scas
dec
xlat
mov
mov
fmuls
dec
sbb
xor
ds
mov
call
pushl
cld
dec
mov
sub
mov
push
scas
mov
push
push
outsb
stos
sbbl
decl
cmp
xchg
cs
cltd
enter
mov
sbb
mov
jne
out
inc
or
mov
jns
and
mov
inc
mov
ljmp
repnz
fildll
pop
cmp
loop
ljmp
mov
dec
or
jle
scas
inc
call
mov
push
mov
ljmp
add
or
pop
sti
mov
and
xchg
incl
lods
std
add
mov
mov
cld
push
cmp
jno
or
inc
add
bound
popa
lock
lahf
or
cmp
ret
jecxz
mov
sub
mov
xchg
or
loop
incl
adc
aas
dec
and
cmpsb
pop
scas
adc
les
add
jp
inc
adc
or
jg
decl
insl
lds
stc
cmc
xchg
dec
jl
sub
arpl
inc
mov
jno
dec
push
pop
ljmp
sub
push
pushf
mov
mov
xchg
add
and
in
pop
add
cmp
test
and
adc
mov
clc
call
push
loop
or
ffreep
add
sub
add
jmp
mov
pushl
mov
sbb
hlt
push
dec
rcr
cmc
scas
dec
scas
ds
mov
shrl
mov
sar
incl
adc
call
jne
shlb
fisubs
jg
cmp
dec
dec
divb
idiv
notb
pop
pop
or
lahf
dec
inc
movsb
mov
call
pop
dec
mov
ror
repz
pushf
push
scas
mov
scas
and
push
inc
xor
jmp
movsl
xchg
loop
aam
mov
and
mov
sbb
insl
adc
arpl
outsb
inc
dec
test
lcall
xchg
push
jmp
and
scas
and
mov
out
clc
daa
test
lcall
fucom
push
out
into
xchg
cmp
pop
adc
mov
add
ljmp
jmp
cld
in
add
and
and
pusha
inc
pop
push
ret
cmpsb
mov
jmp
in
mov
test
in
aaa
mov
xchg
dec
fwait
test
out
mov
call
jb
mov
in
inc
xchg
mov
shrb
inc
fidivs
mov
dec
mov
pushl
js
jge
mov
push
mov
fs
mov
xchg
mov
fucom
sti
fildll
xchg
mov
mov
mov
dec
push
mov
dec
ljmp
incb
mov
mov
cli
lods
sahf
pop
pop
fsubrs
jns
sbb
push
in
push
arpl
ljmp
pop
lock
xor
ficomps
test
jg
pop
loop
das
flds
int
out
jno
dec
mov
jmp
xchg
cmp
out
inc
inc
scas
xor
mov
iret
inc
pop
scas
add
and
mov
test
icebp
cmp
xchg
mov
addr16
ds
adc
sbb
mov
jecxz
jno
int
pop
dec
loope
imul
incl
bound
scas
push
test
sub
insb
jl
fisttpl
movsb
mov
stc
or
decl
call
mov
in
aaa
dec
mov
in
mov
negb
sbb
inc
call
incl
push
dec
sti
ret
es
icebp
fsubrp
lock
scas
and
add
fisttps
xor
out
sub
lods
les
adc
jmp
jge
cltd
dec
mov
xchg
and
dec
add
pushf
dec
jo
xchg
testb
aaa
arpl
mov
ljmp
clc
jmp
out
xchg
mov
sbb
in
mov
ficoms
in
decl
and
jge
enter
ja
dec
adc
xchg
lods
call
cmp
inc
outsb
push
jle
cli
incl
push
nop
jno
insb
add
and
rorl
xlat
jno
lcall
mov
movsb
pop
ljmp
mov
sbb
adc
divb
mov
frstor
out
xlat
jecxz
or
adc
call
xchg
movsb
xor
shlb
mov
mov
inc
out
or
push
cmp
call
std
fldl
cs
adc
dec
movsl
nop
les
mov
mov
xchg
jg
cmp
or
das
les
jae
je
and
cld
mov
call
mov
xchg
push
push
xchg
push
cs
push
stos
addr16
call
inc
aam
mov
mov
sbb
movsl
out
add
and
xchg
out
aaa
xor
pop
sar
decl
rolb
xchg
scas
xor
dec
fcoms
inc
push
scas
mov
imul
jg
sub
adc
push
pop
add
pop
orb
sbb
pop
mov
pop
cmp
mov
negb
adc
je
fst
out
call
xchg
cli
fcoms
fimull
pusha
sbb
push
ds
into
jne
ret
mov
lcall
xchg
loop
fildll
subl
pop
stos
fnstenv
inc
sbb
ljmp
movsl
add
fwait
sbb
or
jbe
shrl
jnp
jecxz
insl
mov
pop
pop
add
cmp
push
adc
push
lods
ljmp
test
push
fisubrl
or
mov
push
adc
mov
jmp
movsb
inc
ds
mov
jne
mov
jns
cmp
movsl
mov
and
cli
xor
push
pop
lret
lods
jg
jmp
mov
mov
and
or
and
pop
pushf
adc
decl
into
mov
sbb
cmc
dec
scas
cmp
pop
into
mov
push
mov
xchg
sub
incl
cmp
jbe
cmp
pop
lock
or
push
iret
pop
aam
add
or
adc
pop
test
pop
sarb
stos
mov
ror
das
test
fs
jmp
fldl
jmp
fs
jns
fsubrl
xor
cmp
jb
pmaxub
ljmp
cs
sub
in
and
popfw
outsb
jnp
je
cmc
add
cmp
mov
cmp
adc
call
adc
imul
lods
and
fiaddl
mov
or
decb
jmp
fbld
xchg
cmp
push
cmp
movl
fistpll
out
mov
aam
adc
dec
dec
test
sbb
std
fwait
scas
cmp
pop
sub
sub
jl
stc
fdivs
lds
aam
jmp
push
pop
cmp
test
add
fadds
inc
cmp
push
fdivrs
xorl
push
scas
fcoml
push
aad
cmc
mov
clc
or
xor
jb
lret
loope
testl
add
mov
sub
int3
cmp
mov
and
push
popa
imul
addr16
in
and
xor
ss
cmpsl
dec
imull
fwait
adc
data16
in
dec
fwait
push
push
push
cld
ljmp
fstps
mov
lods
pushf
pop
dec
lret
adc
mov
dec
movsl
cmp
nop
sti
dec
jmp
out
mov
xor
pop
inc
loop
scas
cmp
jmp
mov
scas
xor
pop
popa
sbb
scas
cmp
jge
mov
imul
lods
scas
scas
jne
push
jp
jne
pop
cs
inc
sub
in
sub
decl
adc
js
mov
sbb
rcll
shrd
inc
xchg
cmp
sar
pop
lahf
aad
icebp
cli
bound
fwait
jno
mov
arpl
inc
adc
idivb
in
std
sbb
call
mov
ret
sub
nop
xor
or
hlt
mov
pop
mov
add
mov
push
pusha
das
loopne
mov
aad
dec
inc
pop
test
and
add
call
mov
and
dec
sbb
or
test
add
mov
out
imul
popw
sbb
je
out
sbb
fisubrs
cmp
and
stos
incl
fnstenv
dec
sbb
gs
lret
push
xor
sahf
ret
andl
lea
lods
sub
push
shll
adcb
call
sar
cmc
filds
bound
lea
sub
pushl
popf
xor
test
in
mov
gs
xchg
cmp
jae
js
ret
and
stos
ljmp
sbb
pushl
inc
inc
jl
cmp
mov
push
push
into
into
add
cwtl
inc
inc
lock
jmp
stc
xchg
popa
and
sbb
stos
test
mov
idivl
push
decl
faddl
jg
xor
sub
fistpll
inc
jp
rclb
decl
lock
or
aam
sbb
or
adc
push
das
and
adc
add
jmp
or
das
fimull
mov
jne
adc
mov
lret
roll
stc
inc
stos
mov
call
xchg
or
push
bound
daa
pop
iret
pusha
aaa
sahf
or
sbb
push
mov
lcall
call
data16
cs
stos
pop
lock
sbb
andb
or
mov
out
jb
cmp
push
push
scas
add
inc
ret
cmpsl
andb
fwait
or
andl
sbb
ret
sti
cli
xchg
pop
mov
enter
pushl
sub
out
xor
and
xor
call
push
inc
call
pusha
jmp
jb
in
rcrl
sbb
add
jnp
or
dec
call
loopne
xchg
jmp
mov
mov
sub
pop
sbb
dec
fbld
clc
shr
in
ss
sarb
int3
and
stos
ja
and
incl
psraw
pop
cmpsb
je
push
adc
mov
aam
mov
pop
and
push
push
pushl
pushf
inc
int3
fsubrs
xchg
inc
sarb
mov
mov
xchg
xor
adc
es
mov
ja
push
and
push
sub
xchg
cld
sub
testl
outsl
inc
fsubrs
xchg
mov
pop
rcrl
add
and
inc
dec
xor
dec
stc
add
pushl
xor
addb
jns
call
ss
jb
mov
and
filds
jmp
popa
sub
rolb
push
call
inc
arpl
dec
xor
xchg
add
leave
daa
mov
in
adcl
mov
out
cmp
xor
or
xchg
adc
mov
dec
push
cmp
inc
call
shll
ret
xchg
pop
jle
test
pop
dec
fidivrs
sub
dec
sub
fcomp
cmc
inc
mov
loop
and
add
mov
cs
push
xchg
pushl
mov
in
xor
lret
push
push
mov
test
mov
repz
push
jmp
loopne
incl
dec
out
inc
subb
sub
sbb
xchg
mov
and
std
add
incl
mov
push
out
sti
mov
xor
cli
add
iret
pop
dec
or
call
repz
mov
pop
mov
sbb
addl
add
cltd
lds
jg
adcb
pop
jo
xchg
int
xor
shll
jmp
shr
mov
lods
mov
call
out
daa
xor
push
loop
sbb
mov
push
aaa
fs
jmp
and
push
loop
filds
push
mov
idivb
mov
and
adc
xor
mov
call
rcrb
adc
inc
fistl
push
lret
cwtl
in
cmpsb
fcoml
out
mov
imull
add
and
out
xchg
jne
mov
push
insl
imul
fists
pop
insb
push
lods
jg
ljmp
addr16
clc
movsl
sahf
test
xor
xor
jmp
cld
dec
das
push
jecxz
cmp
leave
enter
into
in
cs
shll
adc
mov
je
dec
mov
sti
and
cmp
aas
lret
pop
mov
push
lahf
out
ffreep
jmp
rorl
sub
pop
insl
push
sbb
xor
xchg
mov
jne
and
clc
jg
xchg
or
xor
bound
push
add
adc
push
xor
mov
and
gs
movsl
mov
in
in
xchg
push
in
dec
xchg
sub
add
lcall
jle
cs
aas
loop
cs
inc
cs
or
sub
pop
and
ljmp
xor
xor
sub
xor
push
aaa
or
mov
and
fbld
or
test
sarb
ds
out
xor
in
push
js
sbb
cmp
jns
cmp
pushf
jnp
repnz
add
cmp
push
xorl
adc
loop
pop
push
mov
lock
add
sar
jle
mov
mov
push
mov
aas
fwait
cmpl
sub
fistpl
pop
pop
mov
int3
lret
jmp
dec
or
outsb
into
lahf
mov
lods
push
call
imul
inc
jl
lahf
jno
inc
popa
jo
dec
cwtl
outsb
das
sub
sub
stos
repnz
sub
inc
sar
scas
or
sbb
test
xchg
jg
sahf
ljmp
jg
jg
adc
mov
mov
cmp
in
add
xor
sbb
inc
cld
jmp
jp
sbb
mov
andb
sub
imul
jle
sahf
addr16
mov
xchg
mov
ljmp
jne
dec
mov
push
movsb
xor
xchg
sarb
add
fsubl
das
sbb
dec
xor
inc
xor
lahf
mov
cmc
pop
cmc
dec
dec
imul
in
les
incl
adc
cwtl
mull
jb
sub
ret
sbb
xchg
cmp
divl
fdivs
enter
ljmp
in
mov
push
adc
js
mov
test
loopne
fscale
decl
test
push
fwait
fwait
push
leave
mov
inc
xchg
cmpsb
rol
test
jno
pushl
dec
push
adc
ds
sub
shlb
test
fildl
mov
or
decl
mov
aaa
push
and
aaa
xchg
data16
jl
or
cwtl
add
subl
sub
cmpsb
rcl
bound
inc
and
ljmp
dec
arpl
or
sub
dec
pop
movsb
lret
xchg
imul
out
sub
pushl
jns
add
imul
enter
pop
call
jg
cmp
jmp
xor
stc
cmpsl
mov
bound
nop
adc
fucomip
imul
sbb
leave
call
les
push
into
cwtl
sbb
stos
insb
mov
arpl
push
sbb
add
aas
xchg
sbb
mov
pop
jne
or
sub
nop
jle
sbb
mov
decl
fdivl
xor
mov
aam
outsl
jp
sbb
stos
rorb
ret
popl
jns
lcall
mov
out
test
jl
inc
mov
sbb
add
jge
adc
pushl
aaa
in
ret
fcompl
insl
aad
and
xor
fwait
ret
test
push
scas
ljmpw
pushf
mov
sbb
push
add
mulb
xchg
vrcpps
mov
ljmp
adc
adc
xchg
push
jne
push
iret
jbe
mov
imul
incl
pop
and
jbe
repz
mov
mov
inc
iret
pop
mov
imul
push
test
incl
cmp
and
iret
div
xor
inc
dec
cmp
scas
mov
pop
pop
and
jp
jmp
lods
arpl
stc
testb
movnti
cltd
gs
pushl
mov
xor
inc
push
pop
repnz
cmp
nop
push
lods
mov
pushl
fsubrl
sub
pop
add
aam
pop
fucomp
push
sub
pop
int
aad
movsl
jb
jg
add
push
mov
insb
ret
das
cltd
mov
insb
pop
fnstsw
inc
and
leave
mov
insw
inc
inc
lds
adcb
sar
pushl
inc
sbb
mov
roll
insb
pop
dec
shlb
call
fisttps
add
sub
xchg
sbb
jno
sbb
adc
lret
ljmp
cmp
outsl
jmp
mov
cli
aaa
xor
mov
les
imul
inc
call
and
mov
inc
pop
orl
aam
aas
popa
cmp
adc
fcomip
mov
bnd
test
cwtl
and
int3
inc
ds
push
xor
pop
xor
leave
jge
pop
mov
aad
lock
inc
mov
adcl
jnp
lret
mov
iret
push
negl
jae
lods
leave
repz
add
rcr
hlt
incl
cmc
add
adc
scas
sub
fidivl
inc
aam
pop
daa
leave
cltd
mov
scas
cmp
dec
mov
pushl
adc
cs
and
cmpb
idiv
inc
xchg
xor
and
decl
lret
pop
pop
and
push
imulb
dec
mov
gs
or
jg
ja
out
add
mov
ficomps
sbb
jmp
in
jae
inc
in
pushl
iret
adc
cld
aaa
push
xchg
cltd
rolb
imul
cmp
movb
mov
sahf
jg
xor
lods
inc
icebp
or
inc
sbb
repz
pop
stc
adc
push
lahf
sub
decl
ljmp
cmp
jl
pop
adc
lret
cs
rclb
mov
mov
add
sahf
pop
cli
push
call
inc
jo
ja
jge
inc
jnp
es
cmp
xor
sti
int
test
pop
mov
push
sbb
xor
out
inc
adc
xor
cltd
push
popa
pop
cmp
cmp
and
ja
shl
movl
in
jbe
and
js
sub
adc
adc
pushl
or
fcoms
movsl
shll
sub
adc
repz
fcom
bound
xorb
pop
imul
sti
jne
xor
push
xor
and
xchg
cmpsb
push
jmp
ljmp
push
je
inc
lods
in
push
shll
mov
cmp
pmullw
std
pushf
inc
push
push
movl
mov
mov
call
icebp
imul
inc
lret
dec
mov
lret
xor
push
sbb
mov
adc
lcall
mov
mov
gs
bound
or
negb
incl
dec
hlt
test
add
xchg
popf
scas
or
js
and
cld
and
xchg
loop
adc
jmp
ss
in
faddl
jl
and
std
in
and
lock
mov
lcall
jmp
pop
mov
mov
call
jmp
xchg
test
mov
imul
fcompl
shrl
mov
lds
fistpll
sub
pop
mov
cmp
mov
jnp
lcall
mov
cli
or
xor
inc
fxch
gs
mov
inc
xlat
sbb
pop
mov
or
xchg
test
jns
in
mov
sbb
adc
mov
dec
cmpsb
push
scas
loop
repz
aaa
push
xor
arpl
out
pop
xlat
test
mov
cmp
imul
sti
cmp
pop
pop
add
call
pop
shlb
adc
and
push
imul
jmp
mov
jmp
aaa
roll
push
adc
stos
mov
fistps
cltd
lcall
push
mov
cli
cwtl
negb
push
aas
dec
jnp
and
lret
and
test
sub
fisubrs
jge
cs
adc
push
sbb
push
push
pop
sahf
mov
push
in
das
push
add
inc
out
iret
and
xor
ljmp
adc
loope
jle
in
fs
xor
das
and
testb
shrb
dec
sub
rol
dec
fwait
cmp
dec
mov
xchg
cld
pop
xchg
cmpsb
mov
std
ljmp
aaa
ds
mov
out
rorb
int3
mov
adc
ds
or
sbb
push
hlt
inc
push
or
mov
cmc
arpl
mov
adc
lock
mov
decl
inc
mov
in
pushl
jl
imul
repz
scas
add
add
cmp
jecxz
je
sbb
fldenv
push
out
push
lea
dec
or
inc
cli
add
jg
mov
in
insb
xor
jl
cli
mov
arpl
inc
pop
lods
or
pushf
inc
inc
out
adc
xchg
xor
ljmp
push
xchg
push
mov
pop
cmc
and
faddl
add
or
out
dec
imul
pop
pushl
js
fs
insl
loopne
in
data16
aas
and
or
sbb
insb
loope
scas
cld
repnz
xor
pop
mov
cli
xchg
lods
add
pop
arpl
fwait
pop
movsb
jg
rol
sahf
pop
cli
std
notb
adc
mov
cmp
dec
adc
jns
fs
pushl
movsl
mov
xor
xchg
mov
pusha
mov
cli
and
loop
mov
mov
mov
inc
jnp
in
fldt
in
fcomp
mov
les
dec
int3
mov
pop
cmc
stos
scas
clc
ret
inc
mov
xor
jo
inc
cmpsb
outsb
lcall
xchg
xor
lock
aad
repz
inc
xor
adc
or
jge
jne
jb
or
jo
push
fs
fs
jae
pop
in
inc
mov
imul
in
fmull
fldcw
add
push
and
xchg
hlt
xor
dec
add
inc
sub
xor
or
xchg
scas
mov
and
push
dec
ljmp
push
inc
mov
jle
adc
out
inc
push
leave
pop
adc
movsl
push
in
jp
call
ja
sbb
xchg
jae,pt
add
sti
in
add
movsl
cmp
rorb
and
dec
fdivr
call
mov
stc
out
inc
ds
xchg
push
sub
cmp
lock
aad
fists
pusha
or
adc
int
icebp
jmp
jl
daa
or
jmp
test
inc
xchg
push
xchg
inc
pushl
push
add
jmp
jnp
js
stc
cmpsl
imulb
dec
xor
dec
call
push
pop
jmp
loop
in
adc
inc
add
in
outsl
sub
pop
add
adc
cmp
scas
pop
lcall
mov
sahf
or
jge
adc
jecxz
scas
sbb
incl
sbb
adc
jmp
add
imul
mov
mov
push
lods
jge
outsb
xchg
scas
cmp
popa
pop
popa
xor
or
mov
repz
and
or
mov
rep
dec
aad
sbb
in
push
adc
xor
add
or
sbb
jg
loopne
cmpsl
out
clc
fcmovbe
push
je
cmp
stos
js
imul
pushl
jle
leave
stos
push
and
hlt
out
sbb
or
and
sbb
outsl
jbe
sub
and
hlt
icebp
incl
cld
cmp
add
sti
aaa
sahf
inc
push
inc
push
pop
test
out
scas
inc
and
or
xchg
cmp
pop
add
fwait
int
dec
lea
push
push
and
call
push
daa
daa
sbb
push
jp
hlt
pop
mov
inc
xor
mov
pop
call
push
mov
add
ljmp
gs
mov
mov
lcall
inc
mov
xchg
js
stos
stc
mov
jle
test
movsb
shl
icebp
pop
sbb
pushl
fisttps
ret
sub
pop
cmp
fsubrl
and
pop
jecxz
inc
xchg
or
out
loopne
or
pushl
jl
sub
mov
stos
getsec
or
jae
push
repz
in
jmp
sbb
mov
sbb
mov
xlat
fucomi
addr16
nopl
adc
das
clc
filds
inc
jp
dec
mov
aam
mov
add
call
push
fsubrp
push
adc
mov
scas
dec
xchg
cwtl
push
push
aad
cmp
or
jns
mov
call
je
xchg
add
push
push
pop
out
in
scas
mov
outsl
testl
mov
incl
pop
lods
or
dec
lods
mov
imul
add
sbbb
ljmp
jmp
clc
jne
imul
add
push
mov
mov
adc
aad
mov
cmp
push
sti
cmovge
incl
xor
jmp
dec
scas
shr
in
pop
addr16
mov
incl
jmp
mov
cmp
cmp
iret
xchg
jp
jo
div
xor
jmp
pop
jg
repnz
shl
jmp
xchg
pop
sbb
repz
push
adc
push
jmp
ja
in
lea
jbe
cmp
lods
imul
incl
sbb
xor
add
bound
lea
ljmp
sbb
movsb
scas
pop
cmp
mov
aaa
pop
insb
test
fistpll
add
mov
xchg
out
icebp
mov
ljmp
adc
test
inc
cmc
jo
pushw
fcomip
clc
push
arpl
sbb
pop
push
dec
push
sbb
push
push
arpl
inc
stos
pushf
push
xchg
test
out
mov
ja
fcomps
jne
test
mov
subb
adc
aad
call
jge
lock
add
mov
sbb
dec
and
push
hlt
incl
shlb
xor
push
loopne
fildll
jg
jle
sar
lcall
movsl
jge
adc
jnp
cmpsb
jae
inc
mov
inc
sbb
add
sbbb
scas
mov
cmp
shrl
jg
jnp
divl
push
into
mov
cmpsl
nop
xchg
les
pop
pushf
test
scas
xor
les
mov
push
ret
fadd
cmc
arpl
lods
dec
and
push
cli
ljmp
fisubl
dec
jp
ja
push
sub
movsb
mov
dec
shlb
mov
push
add
sub
negb
or
cld
adc
popf
loop
add
xchg
inc
sbb
xor
and
mov
sub
fcoms
fcomip
in
out
test
inc
aam
fldl
mov
xor
push
cmp
movsl
popa
adc
cmp
sub
mov
push
std
jl
dec
xchg
mov
push
cltd
jle
lods
sti
jae
cmp
lcall
push
or
jno
outsl
or
mov
icebp
jo
pop
jge
icebp
pop
js
or
fidivrl
add
mov
inc
adc
fsub
lea
loopne
mov
cld
ljmp
xor
into
shrb
pop
mov
pop
bound
je
lods
imul
xlat
scas
sbb
incl
jl
mov
push
fcoms
mov
fmul
inc
jnp
sahf
jge
mov
inc
rcrl
adc
inc
or
adc
xchg
pop
jecxz
pop
and
push
addr16
addr16
mov
call
cli
inc
push
pop
sbb
into
lret
pop
mov
and
arpl
pop
inc
int
call
xchg
cmpsl
sahf
call
mov
xor
cmp
mov
xchg
sub
adc
lcall
fs
jb
gs
xor
pop
negl
inc
ficompl
es
push
lds
xor
incl
out
ss
pop
pop
add
ds
sbb
aad
scas
push
repnz
out
inc
pushl
cld
sahf
divl
std
rolb
mov
mov
adc
xchg
add
push
out
shl
ret
cmpsb
jmp
xor
sub
xchg
into
sub
mov
js
sbb
stc
or
fnstenv
mov
or
loop
stos
mov
pop
shll
dec
cld
mov
leave
daa
cmp
xor
das
jl
push
jp
imul
enter
mov
add
push
xlat
idivl
mov
push
dec
jb
and
push
sbb
lds
rcll
stos
flds
push
jae
mov
outsb
jmp
test
jmp
inc
scas
andb
std
out
repz
pop
movl
mov
scas
push
ret
mov
xchg
pop
std
in
ljmp
lret
outsb
push
pusha
aaa
jnp
sub
jnp
xchg
ljmp
push
or
jo
push
orl
les
shrb
mull
clc
cld
insl
es
mov
xor
das
clc
dec
dec
addr16
push
les
and
mov
pop
add
fs
or
scas
xchg
popf
aad
mov
ja
mov
jl
mov
or
mov
add
ja
jp
mov
icebp
adc
or
add
push
jbe
cmp
or
mov
mov
pushl
hlt
psrld
test
and
sbb
cmp
in
dec
or
movsl
push
jo
in
push
push
jb
xor
js
cmp
test
push
mov
jmp
mov
out
fs
cld
nop
ljmp
cmp
int3
push
arpl
out
mov
sbb
pushl
inc
lret
push
cmc
sarb
rcrl
pushf
repnz
dec
pop
into
or
inc
mov
inc
push
sti
repz
xlat
cmp
xchg
cmp
shl
ja
mov
test
mov
push
sti
in
inc
jnp
fsubl
cwtl
into
push
ds
enter
daa
jns
ljmp
inc
mov
gs
xchg
fisubs
mov
out
xchg
cwtl
cmc
loop
int
jmp
xchg
jge
sahf
adc
or
adc
cld
push
orl
or
bound
das
fcomp
movsl
xchg
pop
pushl
shr
jns
add
jbe
mov
or
mov
jnp
in
ffreep
jle
mov
pushw
dec
fstpl
arpl
push
xchg
adc
std
inc
or
sub
test
xchg
das
inc
sub
push
call
stc
mov
std
push
and
ljmp
mov
lahf
je
mov
andl
es
data16
and
jne
repz
cltd
jns
lahf
jne
jae
loope
and
sbb
inc
sbb
pop
cmc
pusha
mov
out
ss
pop
mov
pusha
mov
inc
mov
add
pusha
push
xchg
pop
fcoml
and
mov
outsb
mov
mov
mov
jns
mov
push
push
shrb
out
xor
push
cltd
push
sub
inc
test
adc
test
outsb
inc
and
cmp
repnz
jbe
push
outsl
mov
mov
ljmp
jg
mov
std
xchg
xor
jne
in
stc
std
push
xlat
mov
outsb
ja
repz
fidivs
rclb
test
pushl
int
mov
jb
push
popa
sub
hlt
push
inc
popa
data16
rcr
sbb
mov
insl
movsb
addr16
sbb
cmp
ja
scas
mov
add
jg
push
jmp
or
les
icebp
mov
jmp
adc
mov
aaa
mov
stos
cli
stos
lods
lods
jmp
dec
ret
cmp
into
mov
aam
mov
mov
adc
daa
jb
into
inc
clc
xlat
add
xor
in
dec
xchg
push
mov
and
push
jle
int
outsb
sub
push
cmp
div
push
jnp
push
stos
aad
rcrb
lcall
jae
pop
or
in
pop
dec
aas
aas
ljmp
xchg
clc
incl
dec
sbb
and
push
testb
cmp
mov
jmp
mov
sar
dec
mov
push
insl
lds
adc
dec
pop
mov
sbb
icebp
fsubrl
nop
out
mov
daa
or
rolb
xchg
cmc
ja
fcoml
stc
dec
add
pop
sbb
mov
sahf
decl
pushf
mov
out
jo
cmp
movb
lods
xchg
sub
fwait
mov
jg
fidivl
scas
jo
out
adc
sbb
adc
xchg
push
push
shll
aad
push
pop
fucomi
out
adc
xchg
inc
mov
pop
sub
cmp
or
inc
and
ljmp
mov
add
outsl
mov
pushf
mov
rcrl
pushl
pushf
in
sbb
ljmp
rol
push
test
mov
mov
fs
pop
sahf
fdivrl
xchg
cmp
fucomip
ljmp
or
jbe
adc
and
or
pushf
push
bound
sub
popf
mov
cmp
sub
les
cli
popa
push
btr
mov
je
mov
ds
mov
fdivrp
adcl
and
ljmp
repz
call
adc
fstl
cwtl
mov
imul
xchg
pop
cmp
data16
jb
test
xor
les
xchg
xchg
inc
inc
push
movsl
in
stos
out
fldt
int3
pushf
cli
movl
out
jmp
push
cmp
xchg
add
and
js
inc
enter
lcall
sub
aad
sbb
in
mov
jg
mov
sbb
inc
inc
into
imul
inc
push
test
sub
jbe
dec
cmp
outsb
jp
in
mov
arpl
cs
jmp
int
and
sub
scas
xchg
dec
iret
pop
jns
mov
loop
inc
mov
mov
dec
push
push
rorl
pop
jl
faddp
adc
and
outsb
aam
test
jmp
mov
pop
add
int3
into
mov
arpl
clc
sub
mov
outsl
lahf
ds
rcrl
hlt
ljmp
dec
xchg
mov
mov
jne
or
xor
sbb
into
or
xor
negb
in
push
cmp
loope
mov
pop
add
dec
or
mov
push
fdivrl
inc
mov
incl
out
push
mov
aas
pushl
test
gs
sub
or
xchg
fwait
and
fs
popf
mov
push
lds
adc
imul
rcrl
lods
stos
icebp
and
push
xor
xchg
decl
dec
sbb
inc
inc
pop
insl
xchg
getsec
and
xchg
lcall
ljmp
mov
addl
cmp
les
dec
add
and
mov
mov
sub
push
or
and
daa
jno
outsb
mov
jno
adc
push
push
leave
xlat
repnz
ljmp
lea
jecxz
sub
push
mov
or
fldl
lods
popa
pop
les
cmpb
repnz
in
mov
in
sti
in
divb
je
pop
test
lea
xchg
or
idivb
lea
incl
clc
xchg
or
cmp
mov
dec
jmp
or
es
xor
jmp
add
mov
inc
loopne
jg
or
mov
pop
call
in
jb
push
scas
xor
sbb
mov
cmp
fcmovb
cmpsb
imulb
push
sbb
andl
sti
inc
jns
cmp
out
cli
icebp
test
xchg
xchg
shlw
jl
dec
jg
xor
pop
repz
sbb
ljmp
inc
adc
dec
sbb
fcomp
repz
xchg
ss
movsb
fidivrs
jle
data16
out
call
testl
jns
ss
jnp
in
cli
or
push
pop
push
jp
aam
addr16
pushl
cs
jns
loop
mov
cmpsb
pop
add
ret
outsb
sar
int3
add
push
call
out
adc
test
call
xor
jno
mov
repnz
loop
xchg
jp
jp
push
and
jl
push
fstl
incl
test
xor
fdivr
dec
and
ljmp
add
cli
mov
pop
ficompl
loop
call
cmp
dec
dec
or
enter
add
dec
push
movsl
fsubrl
jecxz
out
iret
clc
cmp
inc
lock
sar
insl
sbb
subl
vpbroadcastd
mov
and
cmp
shlb
sbb
inc
clc
push
lcall
mov
add
mov
mov
into
ss
jle
cli
push
adc
cmp
lret
jmp
and
fistpll
call
aaa
pop
icebp
adc
and
cli
cmpsb
stos
add
xchg
push
jl
icebp
dec
iret
gs
pop
ljmp
inc
jmp
scas
cli
aam
sbb
and
pop
mov
add
sbb
int
dec
mov
sub
sub
add
imul
and
bound
lcall
fs
mov
mov
jmp
call
loope
xchg
ret
push
in
pop
jle
mov
mov
or
and
jg
jmp
in
jg
dec
fwait
int
lret
fsubr
adc
and
mov
call
jns
sbb
push
scas
test
ljmp
arpl
bound
cmp
lods
loope
inc
dec
jg
or
into
incl
inc
mov
jae
inc
loope
xchg
popw
loope
lret
lods
jae
push
cmc
lret
push
in
insb
push
xor
fs
xchg
xor
testl
ljmp
sbb
add
or
stos
sti
push
dec
jnp
mov
inc
mov
push
call
icebp
mov
dec
dec
sbb
pop
outsl
ds
and
aaa
frstpm(287
adc
decb
shlb
push
push
cmpsl
jns
cmp
out
repz
mov
std
sbb
and
fcomps
jnp
sbb
dec
pop
mov
sub
xchg
jmp
repz
out
bound
push
cld
incl
sub
jo
mov
mov
mov
into
push
fcoml
lcall
repnz
ret
test
addb
jae
pop
pop
cmc
or
loope
jne
outsl
mov
shrl
push
mov
cmpsb
pop
dec
dec
ss
jg
push
mov
lcall
outsl
xchg
pop
adc
push
sahf
and
jmp
and
out
in
mov
jecxz
sbb
xor
cmp
dec
dec
call
loop
aad
into
repz
or
imul
sub
outsb
imul
lcall
movsb
xchg
mov
std
rolb
dec
mov
add
sub
fucomp
fcmovne
mov
aaa
mov
pop
hlt
xlat
fs
mull
ret
out
push
lret
lcall
inc
pop
js
sbb
inc
lahf
cmpsl
daa
mov
inc
fs
jns
push
idivb
jp
in
mov
xchg
mov
popf
imul
fdivrl
sbb
ljmp
sahf
das
enter
and
shl
sub
scas
pop
stc
adc
int3
sbb
das
jns
cld
lcall
or
jbe
into
jbe
lcall
test
out
incl
cmp
scas
push
test
jbe
sub
xor
jmp
add
aam
push
jns
mov
mov
mov
sbb
jmp
test
pushl
jl
je
sbb
or
decl
ds
jg
lcall
inc
rcl
fists
testl
mov
mov
or
inc
push
fs
icebp
push
dec
adc
mov
nop
inc
cmc
jb
out
mov
xchg
call
aad
lods
mov
lret
test
mov
or
out
sbb
sub
and
fs
call
scas
adc
cmc
out
arpl
test
jbe
sbb
dec
int3
and
push
mov
imul
mov
pop
push
inc
add
xchg
gs
lods
inc
sbb
push
push
inc
mov
push
pop
inc
sbb
mov
scas
leave
push
add
mov
js
dec
sbb
dec
cmc
popa
ja
lcall
loope
stc
dec
mov
push
mov
testl
mov
in
call
icebp
and
dec
in
jl
or
icebp
mov
jnp
stos
push
mov
lcall
and
mov
addr16
repz
adc
stc
xchg
and
inc
push
es
scas
hlt
xor
mov
cli
xchg
xchg
cli
rcl
and
xchg
dec
xor
mov
loopne
aaa
mov
decl
cmp
push
roll
mov
out
int
fsubrs
cmp
stos
cmc
decl
and
mov
into
sbb
push
mov
call
fcomi
dec
mov
lock
clc
cld
push
das
js
cld
xchg
mov
mov
mov
jo
sub
ljmp
scas
repnz
mov
cmp
inc
hlt
cld
lds
jns
out
out
lea
mov
out
cli
incl
outsb
cltd
rcrl
sti
and
imull
outsb
mov
insl
xchg
pop
cmp
outsl
cli
jno
xorl
cli
in
push
push
scas
mov
sub
add
decl
inc
sub
clc
mov
mov
mov
pop
or
pop
lcall
xchg
and
xchg
shr
ret
jp
xchg
cmp
ljmp
shll
idiv
sbb
loope
scas
stos
mov
fistl
repnz
call
sub
scas
fcompl
repz
dec
ja
lock
jecxz
or
mov
call
pop
les
mov
mov
dec
and
insb
sahf
test
lods
inc
jg
mov
add
cmp
jle
cmp
pop
arpl
xchg
and
orl
sub
cli
mov
mov
xor
iret
sahf
sub
lcall
arpl
fs
push
cmp
mov
mov
out
push
movsb
ss
sahf
pop
pushl
dec
dec
jnp
inc
sbb
stc
push
call
jmp
push
mov
ret
pop
push
sub
outsb
jmp
and
and
inc
xor
push
and
scas
in
mov
test
jno
adc
pop
or
rcrl
push
or
out
adc
call
call
jbe
xchg
popf
jae
aas
adc
jnp
mov
xchg
mov
ret
cli
incl
mov
xchg
aam
and
lahf
xor
mov
ljmp
mov
and
inc
jl
aam
pusha
xor
fstpl
ret
mov
mov
ljmp
adc
lcall
lea
hlt
cltd
popf
xor
push
or
mov
decl
and
inc
push
cmp
xor
cmc
leave
mov
ljmp
sti
insl
add
sahf
and
ljmp
lretw
int
pop
cmp
cmp
iret
or
inc
aaa
push
mov
shrb
mov
jg
lea
mov
nop
add
ljmp
push
test
cmpb
jmp
mov
subl
mov
xor
clc
cmp
inc
mov
jnp
loopne
test
jge
insb
int3
scas
add
xor
or
incl
stc
ret
sbb
jle
lahf
into
outsl
xor
inc
cwtl
ljmp
mov
and
pop
push
fdivr
pop
icebp
ljmp
lods
das
mov
dec
inc
push
add
lock
icebp
pop
out
scas
push
subb
scas
testb
xchg
orb
stos
pop
call
inc
pop
scas
push
outsb
and
int3
sti
rcrb
jnp
dec
push
xchg
sbb
jno
pop
mov
outsb
fs
xor
clc
ljmp
call
idivl
shlb
scas
outsb
fldln2
dec
loopne
call
push
imul
lahf
insl
xchg
add
pushl
int3
jge
lock
lret
sti
outsl
lea
out
xchg
pop
pushf
jge
adc
sub
mov
std
xchg
lock
mov
fmull
push
loopne
mov
mov
mov
jmp
push
data16
mov
inc
xor
sahf
xor
arpl
scas
mov
je
test
outsb
je
sub
aad
pushl
movsl
mov
jbe
push
mov
and
cmpsl
and
pop
clc
pop
mov
aas
hlt
ds
push
in
mov
or
jecxz
fcompl
idiv
test
jg
mov
push
dec
mov
stos
mov
push
inc
pusha
movsb
sub
or
lcall
add
notb
pushf
pop
push
cmp
add
push
lret
jb
movsb
xlat
jle
ljmp
mov
dec
sbb
in
sbb
xacquire
lcall
mull
shrb
dec
push
sbb
jl
fadds
dec
cmp
pushl
push
jbe
mov
fisttpll
dec
out
cmp
cmc
add
outsl
test
clc
sub
call
xor
mov
movb
iret
pop
movsl
add
insl
xlat
push
ret
jle
hlt
xchg
add
fwait
xchg
cli
jns
jae
ss
sbb
and
out
or
bound
movsl
addb
push
mov
cwtl
jmp
cld
stos
xorl
pop
dec
out
imul
mov
pop
stos
jno,pn
loope
dec
add
call
out
mov
jne
jb
sub
push
fwait
push
xchg
and
mov
jbe
pop
std
incl
xor
bound
jmp
jp
push
cs
dec
mov
aaa
std
mov
inc
xchg
jle
jno
shl
sahf
cld
pop
cmp
mov
decl
xchg
push
pop
and
fildll
mov
mov
bnd
outsl
cli
lcall
lods
addl
pusha
push
imul
xlat
and
dec
inc
push
call
or
out
lret
sahf
mov
arpl
pop
lock
sbb
mov
es
sub
sahf
loop
ret
arpl
mov
fdivrs
push
mov
pop
arpl
xchg
scas
lcall
mov
aaa
jbe
pop
adc
scas
push
dec
sub
fwait
aaa
jne
or
mov
sub
out
pushl
inc
out
in
sub
mov
sub
loop
fdivl
out
imul
jmp
jp
pop
jge
push
fs
lahf
test
jmp
leave
mov
xchg
lcall
or
sbb
inc
aad
cmp
mov
loopne
cmc
mov
mov
call
std
pop
jb
cmp
jl
mov
adc
scas
fnstcw
enter
lcall
jns
shlb
push
shrl
outsl
push
adc
mov
test
rorb
loop
or
sbb
mov
leave
adc
sbb
lret
std
outsb
fcomip
cs
xor
xchg
mov
in
xchg
outsl
xchg
xchg
xchg
in
add
push
xchg
movsl
das
pop
pushf
push
popa
push
push
xchg
mov
cltd
fwait
xor
ljmp
jmp
lods
jo
sub
mov
push
push
cli
xchg
fdivrp
lcall
or
xchg
cmp
jmp
xchg
add
and
jmp
or
add
mov
or
ljmp
mov
or
add
cmp
mov
jno
pop
fcoml
data16
jns
out
loope
cmovge
cmp
pop
ss
xchg
dec
std
mov
or
hlt
mov
call
shl
jns
xor
out
aad
sub
adc
mov
mov
fwait
in
fdivrl
pop
arpl
imul
call
jb
lds
push
aad
stos
outsb
and
push
cmp
dec
scas
jle
add
out
cmp
les
or
scas
ja
rorb
jb
mov
xchg
pop
cwtl
push
decl
cwtl
xchg
add
je
ret
pop
or
xchg
cmp
dec
stc
mov
mov
pop
incl
xchg
std
test
mov
jg
dec
scas
sarb
pop
ljmp
xchg
shl
jle
pop
mov
jae
dec
push
jg
xchg
pop
xchg
negl
decl
push
jnp
jnp
mov
loop
imul
scas
add
mov
nop
aam
lret
sbb
fs
je
ljmp
out
addr16
call
lret
incl
mov
sbb
iret
stos
mov
mov
test
in
lret
addr16
stc
popf
inc
xor
lock
and
scas
inc
mov
mov
cmp
repz
cmp
ljmp
test
push
scas
cmp
push
cmpb
decl
push
cwtl
xor
fwait
push
sahf
pop
mov
jns
jmp
mov
jl
dec
fwait
pop
leave
jns
and
sub
ret
aam
mov
mov
insb
jne
repnz
int3
pop
pop
inc
test
inc
into
ljmp
jnp
push
jl
scas
lcall
dec
xchg
xchg
add
data16
imul
decl
inc
je
lock
popf
push
lcall
lea
cmp
call
xor
jl
dec
xchg
xor
xor
xor
repz
loop
xor
sbb
daa
xorb
jl
push
in
cli
lcall
cwtl
fidivl
xor
xor
lods
xor
int3
xor
push
es
in
in
dec
xor
cli
xor
sti
xor
and
dec
out
mov
xor
sbb
xor
inc
std
ljmp
data16
das
ret
push
xor
neg
xor
or
ss
sub
xor
xor
jg
xor
pop
xor
xchg
inc
xor
and
xor
or
ds
jg
mov
fs
mov
xor
and
repnz
fcmovb
cli
das
je
aas
add
or
xor
cmp
idiv
fstpt
lret
lea
adc
mov
pop
sbb
aas
js
xor
dec
dec
xor
cmpsl
push
xor
pop
aas
xor
xorb
xchg
sub
push
jmp
pop
das
dec
mov
das
lret
inc
sti
out
xor
test
cs
cmp
mov
xor
jg
pushl
push
jne
cs
imul
jecxz
sbb
pop
mov
ds
inc
jne
sbb
mov
data16
cmp
push
mov
ja
sbb
and
daa
test
pop
jge
or
push
movsl
push
pop
pop
and
pop
jle
jg
cld
inc
xchg
xor
sbb
mov
fadds
sub
xchg
ret
jmp
jmp
inc
mov
in
aam
jns
mov
das
jno
lods
xor
insl
cld
incl
xor
cmp
pop
xor
lods
push
das
aad
sub
ljmp
fiadds
xor
xchg
insl
xor
xchg
mov
sti
movsl
les
pop
add
test
incl
jne
dec
das
int
jb
dec
jnp
xor
xor
mov
jns
insl
imul
subb
fnstsw
aad
in
xor
stc
cs
incl
das
push
or
popa
divl
add
xor
jmp
add
addb
in
mov
jge
das
jne
add
aad
inc
cs
imul
xor
push
sti
or
jnp
mov
fistpl
xor
xor
scas
inc
sbb
xor
cmp
icebp
stos
mov
je
aam
aaa
or
mov
mov
push
lcall
fldenv
pop
push
mulb
mov
and
jecxz
movl
add
fistps
sti
scas
jle
mov
das
lahf
mov
push
push
xchg
cmpl
scas
sub
cmp
add
fdivl
loopne
insb
jmp
xchg
inc
dec
sub
sub
or
add
ja
sub
out
pusha
leave
mov
sbbl
mov
gs
repz
jnp
add
hlt
decl
inc
pop
rcr
push
popf
aam
fstpt
rcrl
in
test
stos
jg
mov
and
xor
sbb
jg
push
xor
xor
push
or
cmp
mov
loop
mov
mov
loop
cmp
lds
ret
mov
ljmp
dec
jae
imul
jp
mov
xorb
test
gs
mov
push
push
dec
outsb
xchg
push
sahf
pop
cmp
loop
cld
lcall
mov
lods
dec
loopne
pop
mov
fcomi
cmp
pop
push
int3
xchg
cmp
jmp
pop
add
sbbb
loop
push
xchg
int3
xchg
test
mov
jle
lret
rolb
mov
sbb
mov
popa
mov
subb
mov
mov
neg
mov
ljmp
add
push
in
and
mov
imul
cmp
imul
cs
xor
mov
pusha
jmp
push
mov
int3
jmp
jmp
push
jecxz
and
dec
lret
aam
mov
scas
lret
xor
push
lods
xor
mov
bound
inc
cltd
push
mov
jnp
and
push
scas
jle
inc
stos
jle
lcall
push
loope
pop
mov
out
or
xchg
mov
mov
decl
lods
mov
icebp
adc
sbb
pop
insb
adc
faddl
sub
cltd
jecxz
ds
push
cli
test
or
mov
stc
mov
testb
inc
mov
adc
mov
stos
push
fdivr
cs
xor
mov
lods
fdivr
shr
mov
out
adc
lea
lea
pop
mov
add
dec
cli
pushf
dec
insl
test
pushf
mov
cmp
insb
leave
gs
lcall
and
adc
loop
adcl
lods
test
adcb
out
sbb
loopne
pop
lock
decl
lds
mov
aad
lds
sti
lock
aaa
imul
jg
sti
mov
push
test
loopne
dec
dec
frndint
fld
fs
pop
push
mov
mov
adcb
mov
outsb
nop
jmp
pop
call
lahf
out
mov
nop
inc
outsl
dec
xchg
aad
insb
lods
jmp
repnz
add
sahf
xchg
add
out
xchg
pop
pop
push
mov
daa
inc
divb
aam
cmp
fldenv
add
add
mov
add
stos
cld
imul
push
stos
cmc
incl
rorb
cltd
xor
in
cmc
imul
jp
pop
pop
imul
aas
pop
leave
push
out
ret
in
es
or
fsts
and
or
push
mov
decl
pop
fisubrl
jae
jo
xchg
dec
dec
lock
test
mov
adc
push
std
lcall
cmpl
out
test
sarl
mov
insb
pop
lods
cmp
aaa
push
call
scas
push
lret
enter
mov
ficoms
cmp
xor
push
leave
lret
test
ljmp
and
fld
sub
inc
mov
frstor
js
fs
add
mov
in
pop
lcall
add
lret
and
sub
jne
addb
addr16
lcall
outsl
movsl
stos
in
push
or
sbb
mov
mov
dec
rep
mov
outsl
out
ss
das
inc
push
lds
xchg
jmp
lcall
adc
fildll
lret
fldenv
pop
stos
add
hlt
mov
mov
in
lcall
addb
cmp
stos
jp
jns
stos
ss
fdivrs
mov
pop
stos
push
nop
jge
xor
loope
sub
sub
or
orb
ret
or
cmp
call
cld
push
fwait
or
mov
mov
push
sbb
ret
mov
mov
or
push
push
cli
lea
fstpt
add
test
enter
xchg
xchg
dec
push
push
std
dec
insb
les
sub
mov
sbb
test
and
sub
jmp
xor
mov
push
pop
mov
cmc
xchg
jnp
insb
stos
aaa
and
inc
clc
div
rorb
incl
cld
jp
test
pop
xchg
test
fcmovu
int3
test
sub
add
xchg
inc
mov
or
leave
adc
rcl
adc
int
jno
add
outsb
mov
scas
dec
cld
pushl
sbb
mov
repnz
dec
in
out
push
jae
lock
add
loope
push
inc
gs
and
fimull
call
or
ja
jns
mov
or
psraw
xor
adc
dec
cmpsl
and
addr16
ljmp
addr16
fidivl
stos
dec
in
adc
jmp
aas
in
cmp
arpl
xchg
sarl
fists
and
dec
xor
jecxz
cmp
jmp
fdivrl
ljmp
fsubl
call
std
inc
sbb
dec
int3
ja
loop
and
cmp
daa
cwtl
mov
aas
lock
mov
insb
mov
dec
call
fadd
testl
xor
pushf
cmpsl
call
in
and
dec
fs
fsub
fildll
cmp
mov
bnd
cs
mov
mov
xor
mov
fcoml
pushf
push
fs
insb
scas
xor
outsb
xchg
pusha
call
mov
rep
jae
loopne
mov
dec
mov
popf
lods
sbb
cmp
decl
mov
pop
sub
rclb
push
test
repnz
or
fcomip
rol
cmp
jmp
test
subl
call
fidivrl
cs
jne
mov
push
jle
ss
bound
mov
nop
or
dec
mov
scas
and
xor
lea
cmpsl
aas
mov
int3
enter
and
jbe
jg
xlat
jne
xchg
ret
pop
mov
add
mov
icebp
cmp
add
leave
mov
jg
scas
mul
aaa
imul
pop
popa
mov
dec
or
push
negl
sub
lcall
cmp
popa
and
clc
adc
mov
shl
mov
movsb
jnp
lock
decl
xor
mov
push
jg
repnz
dec
jecxz
ret
ljmp
mov
sub
int3
sub
or
pushl
pop
fs
adc
sbb
mov
fwait
cmp
cmp
add
test
adc
mov
lds
mov
int3
xor
or
pusha
dec
jmp
in
cmpl
dec
sahf
cmpsb
movsl
push
cmp
xchg
jne
les
inc
mov
je
xlat
in
sub
jge
dec
sub
jb
xchg
lret
call
push
scas
int3
pop
andb
scas
movsl
mov
mov
xlat
jle
cmp
clc
mov
inc
add
stc
aad
fdivrl
mov
rcrb
decl
inc
aam
addr16
sub
mov
icebp
xchg
fldenv
lret
cmp
sti
sbbb
mov
leave
aam
xor
or
pop
mov
xor
cmp
inc
or
loope
fwait
repz
fstpl
push
mov
insl
fwait
sub
out
inc
popf
cwtl
jg
das
or
mov
fwait
mov
jo
add
sub
xor
mov
cld
cmc
sahf
cld
in
movsb
jmp
cs
mov
mov
mov
push
sar
aaa
std
decl
arpl
std
xorl
push
xor
enter
call
adc
lahf
lret
outsb
mov
xorb
sbb
push
sbb
aam
int3
jns
pop
mov
inc
push
mov
test
std
dec
add
inc
mov
int
pop
xor
lcall
les
or
ljmp
sbb
xor
cmp
xor
mov
popa
call
pop
aad
xor
xlat
cli
cs
loope
xor
stc
addl
xor
cmpsl
jg
insl
sti
xor
add
cmc
xor
test
in
lret
in
ljmp
cli
imul
testb
imul
je
cld
lcall
outsb
loope
scas
dec
test
sbb
dec
pop
lods
iret
cmp
cli
xchg
lcall
mov
dec
pop
or
cmp
mov
out
mov
cld
call
push
mov
js
pop
push
add
jl
repz
ljmp
push
hlt
push
fs
js
ss
mov
into
jo
dec
repnz
daa
mov
das
insb
leave
out
pop
inc
addb
fs
ds
sub
and
sub
mov
jo
aas
jle
mov
ljmp
mov
push
and
test
push
add
pop
cmpsb
mov
cli
cld
xor
dec
cs
clc
jmp
pop
imul
mov
and
jbe
std
and
aaa
aad
mov
jg
enter
mov
xchg
das
enter
cs
sub
in
test
lcall
sahf
negb
cltd
mov
leave
repnz
scas
inc
scas
fadds
movsb
aad
aas
fwait
pushl
pop
mov
jbe
and
in
mov
incb
lcall
lcall
mov
adc
loop
scas
jl
aas
jp
lcall
cwtl
cmp
mov
jg
mov
movsb
sbb
test
out
into
movsl
adc
out
lock
mov
incl
cld
decl
cmp
lods
mov
je
xor
jmp
shl
mov
mov
xlat
push
movsl
xor
je
xor
shrb
xor
in
pusha
mov
movsb
sub
ljmp
push
jne
sbb
cmpb
xor
movb
lods
push
ja
mov
decl
shll
push
shll
push
jl
popa
rcrb
test
jnp
icebp
popf
aad
xchg
pop
adc
dec
hlt
pop
mov
cltd
sbb
stos
mov
call
dec
std
mov
dec
fisttpl
es
inc
xchg
jo
cltd
or
mov
js
jmp
andl
xchg
stc
mov
inc
mov
aad
push
je
pop
inc
lds
iret
xchg
ljmp
sbb
leave
sbb
repnz
mov
fcomip
inc
mov
and
pusha
and
pop
push
adcb
into
adc
int3
pushl
aam
xchg
mov
pop
xlat
cmp
mov
adc
mov
pop
xor
mov
jbe
or
dec
imul
push
mov
sbbl
in
adc
xor
push
scas
cmc
daa
or
decl
lahf
dec
ja
sub
push
xchg
jb
sub
les
pop
and
mov
pop
out
clc
fstps
mov
jle
xor
outsb
mov
stos
call
cli
jle
xor
scas
xor
jge
xchg
loope
es
test
push
ret
stos
imul
fcomip
pushl
outsl
inc
xor
ret
jnp
sub
mov
mov
rcll
jg
js
cltd
lods
dec
in
fwait
ss
mov
enter
push
fs
incl
push
mov
push
mov
dec
jmp
outsb
sub
stos
pop
mov
or
ret
pop
addb
sbb
xor
or
jecxz
call
pop
add
int
dec
xchg
inc
sbb
push
cmpsb
je
cwtl
rorl
jle
pusha
cmp
iret
mov
jmp
dec
les
lret
call
fwait
lcall
pop
inc
sub
addr16
ret
lret
call
push
ds
adc
xor
mov
clc
inc
xchg
jne
jmp
dec
imul
mov
sti
pop
test
xor
pop
jmp
lock
mov
jp
decl
aas
cwtl
mov
dec
fbstp
dec
fucomp
scas
in
int3
add
hlt
pushl
pop
pop
adc
push
mov
addb
add
test
add
nop
clc
add
les
test
popl
mov
lods
and
mov
add
fcoms
lahf
loopne
adc
into
push
dec
in
and
mov
enter
sarb
out
sbb
sub
and
cmp
push
and
and
dec
scas
shl
stc
xor
cmpsl
xor
push
or
push
push
mov
push
sub
mov
ljmp
lods
flds
xor
mov
xchg
and
jg
pushl
mov
pop
dec
fnstcw
or
jg
mov
call
pop
sbb
pop
sbb
jp
push
add
mov
xchg
lods
js
in
cmp
call
jmp
xor
les
cmp
push
jle
pop
mov
mov
incl
pop
xchg
rcrl
mov
insl
mov
jo
loopne
mov
daa
sub
pop
pop
sub
jnp
stos
mov
jmp
jo
in
and
sub
cmp
sti
push
nop
add
arpl
adc
mov
loop
cmp
add
pop
dec
mov
lcall
fwait
dec
sbb
js
cltd
pop
rcll
outsl
jl
push
lahf
aad
jns
push
ljmp
sub
scas
incl
fs
sbb
aas
test
in
repz
std
decl
in
or
adc
popf
push
mov
jp
mov
pusha
stos
xor
jo
jns
pop
in
rcrl
aam
add
cli
insl
nop
or
jmp
push
jbe
mov
fcmove
cmp
push
xchg
sahf
pop
sti
outsb
out
sarl
jl
sub
cmc
inc
pusha
rcrb
jl
scas
sahf
test
cmp
mov
call
das
stc
insb
test
xchg
ret
inc
pop
sbb
pop
mov
loop
sti
fcomi
sbb
inc
pop
leave
xchg
pop
ljmp
push
pop
fstps
xlat
jmp
out
xchg
dec
jle
fidivs
or
cmpsb
and
call
into
adc
mov
movsl
xchg
or
inc
sbb
jae
add
sub
jmp
mov
dec
movsb
cmp
jle
push
add
ret
sub
ljmp
ficomps
insb
test
mov
add
mov
inc
cs
pop
addps
bsf
addr16
call
ja
nop
fadds
xchg
push
push
inc
jmp
inc
stos
sbb
scas
test
les
jmp
adcb
out
fisubrl
pusha
test
mov
stos
call
in
ja
and
in
call
ds
or
mov
mov
mov
mov
jmp
jg
mov
daa
fdivl
not
scas
ficoml
sahf
lcall
lcall
pop
adcb
mov
sbb
push
outsb
lcallw
popa
repz
jl
xchg
scas
ljmp
bswap
mov
xchg
in
loop
xor
mov
mov
mov
ljmp
out
inc
xchg
cmp
adc
dec
pop
jl
aaa
push
call
push
popf
pop
xabort
test
pop
sub
lret
jmp
pop
mov
and
jge
sub
cld
call
xor
xor
mov
rcrl
pop
push
imul
dec
cmc
jg
push
fiaddl
ljmp
jl
pop
push
ret
jge
rol
jg
xchg
and
sub
shlb
jae
cmp
ffreep
cmpsl
xor
mov
scas
jae
stos
decl
rcll
xchg
mov
mov
sub
adc
inc
sti
stc
xor
add
scas
add
ljmp
sub
push
jge
or
sub
adc
pop
lcall
nop
shll
inc
jno
enter
mov
mov
push
jno
lret
gs
mov
push
xor
mov
loope
shr
fnstsw
xlat
mov
jmp
outsl
rdpmc
cmpsb
and
push
pop
in
and
mov
ljmp
movsb
sub
push
jge
js
enter
scas
daa
cmp
lret
js
jge
xchg
hlt
cmp
lods
mov
les
sub
std
mov
lock
sbb
jge
fistps
or
icebp
ljmp
jae
add
xchg
std
adc
pop
pop
nop
subb
push
scas
arpl
stos
xor
in
cmp
and
mov
sub
ljmp
mov
addr16
mov
mov
xor
push
pop
sbb
jbe
sbb
dec
scas
sahf
std
ljmp
or
out
iret
into
dec
fsubrs
mov
mov
fists
xchg
xchg
inc
mov
or
adc
dec
jle
dec
push
fcomip
add
push
cwtl
nop
lcall
movsb
enter
jge
int3
add
dec
out
add
ss
stos
jge
jbe
lods
jo
rorl
mov
jl
in
add
shlb
iret
std
mov
xchg
fdivs
mov
mov
out
add
cmp
test
mov
inc
into
mov
sar
mov
sbb
xlat
inc
pop
push
scas
insb
add
push
ds
call
popf
xchg
pop
imul
enter
ss
mov
cmp
decl
cltd
test
pop
scas
mov
mov
mov
frstor
jo
ud0
call
dec
clc
xor
inc
mov
jb
pop
daa
scas
sbb
jg
aad
cmpsb
icebp
dec
bound
dec
mov
in
fwait
out
neg
push
dec
mov
cmp
or
decl
mov
mov
cmc
inc
push
dec
mov
and
push
adc
jg
inc
push
test
dec
mov
mov
bound
pop
xchg
ds
ljmp
fs
bound
jecxz
mov
mov
and
in
pushf
xchg
scas
xchg
fisttps
jmp
imul
inc
xor
incl
mov
jne
mov
jno
scas
int
test
lahf
ret
dec
in
cli
shr
pop
and
test
pushl
adc
mov
test
sbb
out
lret
decl
or
test
loop
mov
test
mov
ja
jb
jg
or
mov
mov
out
je
cmovno
popa
push
adc
mov
jmp
leave
fisubl
arpl
fimull
mov
enter
push
fs
mov
aas
inc
cltd
jo
sahf
call
push
xor
xchg
fldt
scas
int3
inc
jge
mov
and
adc
enter
inc
lahf
fists
jg
scas
cmp
mov
dec
das
mov
mov
pop
pop
or
test
in
ret
jb
sbb
mov
jmp
jg
clc
scas
push
insl
insl
out
sub
pop
mov
cld
enter
scas
and
mov
decl
mov
jbe
pushf
fistpll
sbb
mov
es
sbb
jmp
les
dec
cmpsb
mov
jo
scas
sbb
clc
push
scas
scas
mov
lock
lahf
cmp
xor
enter
lcall
pop
jle
or
shlb
es
mov
lods
sbb
mov
ljmp
fwait
out
sbb
jle
pop
ret
pushf
sbb
push
push
ljmp
scas
dec
sub
imul
mov
mov
dec
jg
fwait
push
adc
pushl
std
addl
mov
push
xor
adc
ret
loop
sbb
int
fildl
push
sahf
ficoms
mov
inc
lahf
lea
test
pop
ljmp
cmp
es
loop
jo
decl
xor
and
lcall
dec
pop
jb
or
sar
call
scas
mov
sbb
dec
sbb
add
cld
ss
mov
outsb
sub
rcr
mov
jg
pop
lods
xor
jle
imul
mov
rcrb
mov
push
pop
xor
xor
sbb
adcl
cltd
fs
cs
movsl
scas
test
decl
jecxz
cmpsb
sub
test
test
xor
incl
ss
adc
shll
aam
dec
pop
jge
jb
mov
lahf
loopne
sub
scas
mov
sub
sahf
cmp
test
ret
jnp
mov
jb
test
push
ds
mov
add
push
mov
xchg
sbb
sbb
add
push
incl
adc
sbb
inc
dec
push
xchg
mov
mov
add
lahf
mov
lods
fmuls
mov
cmp
test
sub
mov
xor
clc
mov
cld
bound
cmp
jg
fimuls
mov
mov
mov
add
test
mov
jge
cmp
cs
nop
jo
jmp
push
sub
test
push
jmp
nop
imul
test
test
call
ret
ret
mov
popa
xor
sub
in
mov
jmp
pop
add
cmp
addl
mov
sbb
jle
test
cmp
adc
xchg
mov
ja
pushl
fs
jns
mov
clc
cmp
sbb
test
add
lcall
dec
das
in
sbb
pop
mov
xchg
jg
jb
into
mov
inc
add
cmp
and
out
jb
and
mov
lret
push
enter
mul
lcall
cmpsl
xor
mov
push
test
mov
das
inc
push
test
popf
mov
aad
pushl
repz
adc
cmp
sub
je
adc
loopw
rcrb
jg
mov
cmpsl
and
pop
or
lret
sub
mov
push
into
inc
dec
mov
mov
jb
mov
mov
jmp
mov
jge
pop
mov
jo
loopne
mov
lcall
int
mov
mov
push
mov
int3
fs
pusha
jb
push
lret
lcall
sub
arpl
stc
ljmp
repz
xchg
pop
mov
in
pop
xor
and
sbbb
ds
dec
jmp
mov
mov
jo
push
mov
pop
cld
ljmp
mov
idivl
jmp
lods
push
loope
fcoms
sbb
call
fdivrs
dec
xchg
sar
dec
and
fsubs
inc
and
xlat
add
hlt
shlb
xorl
sub
pop
aad
shr
lods
cmp
mov
mov
pop
loop
popf
daa
xlat
das
sar
shlb
cli
clc
lods
mov
and
call
jl
fadd
lret
insb
sbb
adc
lods
stc
in
les
and
fcmovnb
pop
lcall
mov
pushl
stos
jne
sub
mov
mov
push
mov
lea
jg
inc
xor
dec
mov
ret
push
dec
mov
rolb
ljmp
test
ds
cmp
dec
rorb
or
lret
loopne
push
pushl
test
repz
push
pop
cli
push
call
fcompl
add
daa
and
pushl
enter
lock
fisubrs
or
sub
pop
jp
pop
adc
mov
testb
fs
sbb
fcmovbe
cmc
fisubs
cmp
movsb
mov
std
xor
decl
jl
and
xchg
mov
popl
pusha
mov
push
sub
out
cmpsb
lcall
call
outsl
mov
sub
inc
rcll
incl
pop
mov
add
add
ret
test
xor
pushf
and
sbb
adc
decl
ds
sarb
fsubrp
idivb
stos
jge
jg
xor
push
xchg
mov
pop
jmp
fsubrs
jp
stos
in
mov
mov
test
loopne
or
mov
scas
inc
das
sub
int
jne
mov
mov
pop
mov
dec
fcomip
decl
mov
stc
in
sbb
add
inc
jnp
iret
cld
push
mov
jg
add
inc
jecxz
aas
subb
pushf
mov
pop
divb
test
inc
fcmovb
cs
int3
jbe
pop
mov
cs
lock
sbb
notl
cwtl
inc
inc
jge
xchg
push
xchg
data16
adc
jg
jns
fsubrs
xor
fstp
add
test
js
push
xor
cmp
fcoml
sub
in
adc
in
adcl
mov
inc
mov
add
xor
add
lds
stc
rcrb
push
ds
fcomip
adc
fnstenv
nop
out
jge
testl
xchg
rcrl
push
lods
mov
incl
mov
orl
popf
mov
push
cmp
pop
sahf
push
jmp
dec
mov
mov
fisubs
inc
nop
aas
ret
mov
lea
lcall
adc
lcall
sub
jle
xorl
xchg
jns
gs
nop
adc
decb
add
dec
lods
and
loope
mov
jl
xchg
mov
mov
mov
xor
cmp
arpl
das
cmc
jg
cs
cmc
mov
add
aas
xor
les
ss
pushf
das
adc
clc
ljmp
mov
fcoms
jns
add
ficoml
mov
f2xm1
roll
dec
cld
incl
cmc
imul
mov
or
xor
scas
cli
cmp
imul
mov
aaa
orb
sahf
aad
or
mov
mov
out
mov
mov
jb
dec
xchg
mov
leave
jne
sbb
mov
dec
inc
lcall
pushf
enter
or
inc
movsb
sub
push
lods
push
dec
or
je
incl
out
add
mov
cmpsl
cmp
shlb
sub
jb
mov
aas
and
mov
xchg
shlb
cltd
jmp
inc
xor
mov
mov
or
loopne
xchg
imul
sbb
bound
mov
xlat
cmp
jnp
das
and
fdivrl
xor
fsubs
jge
enter
jg
mov
js
shll
adcl
mov
les
std
ljmp
lea
ret
sub
sahf
pop
inc
iret
lcall
in
add
xchg
xor
int
sbb
loop
loop
sub
icebp
pop
sbb
into
xor
lock
lcall
and
lcall
sub
mov
divb
jl
ljmp
data16
in
pop
ljmp
cmp
inc
ror
pop
mov
call
movsb
dec
das
add
orb
xchg
out
clc
repz
cmp
inc
mov
shll
jmp
fucomp
jo
aad
pushf
mov
push
or
jle
and
ljmp
call
leave
test
lcall
aaa
ret
movsb
inc
jns
sub
sub
hlt
test
and
mov
mov
pop
ljmp
sub
les
inc
mov
call
pop
lods
fldt
mov
push
and
cli
add
cltd
push
xchg
jnp
adc
loop
lds
call
lret
mov
sub
add
sbb
call
and
incl
jo
inc
and
scas
hlt
xchg
pop
mov
fcmovne
xor
mov
push
imull
or
lods
cmp
lret
xchg
pop
ljmp
pop
loope
mov
mov
jl
pop
sbb
in
arpl
cs
sub
aad
jmp
xor
out
xchg
push
jg
int
jecxz
addl
jmp
mov
cmpb
jg
mov
cmp
or
sbb
pop
adc
dec
and
adc
add
cli
call
inc
sub
xor
fdivs
hlt
push
movsb
mov
push
shl
lds
add
das
pop
cmp
xor
out
mov
push
in
mov
add
fidivrs
pop
shlb
int3
in
enter
mov
sar
in
jmp
popf
push
add
mov
enter
adc
popa
add
mov
push
popf
jp
ret
cltd
jge
dec
cmp
jmp
ss
add
inc
mov
arpl
inc
mov
pop
hlt
fsubl
mov
data16
and
inc
push
dec
push
cmpsb
mov
in
repz
call
adc
in
ffree
je
push
repnz
int3
add
lcall
xchg
fmul
mov
add
lock
sub
cmp
jnp
mov
call
pop
ljmp
mov
or
shrb
pop
sub
pop
cld
decl
jne
fldenv
in
jl
sbb
pop
push
mov
inc
xor
loopne
pushl
add
jg
div
xchg
sbb
jp
xor
mov
ljmp
stc
lock
notb
imul
sub
push
jp
mov
pushl
mov
sarb
loope
push
ljmp
hlt
xchg
les
mov
popf
mov
lahf
mov
fisttps
das
xlat
pop
jge
dec
outsb
mov
mov
xchg
or
pop
push
add
fdivp
les
mov
nop
sub
enter
sub
in
mov
or
xchg
add
ljmp
and
cmp
or
ljmp
ja
jmp
pop
aad
dec
add
xor
nop
mov
jecxz
mov
fsubl
adc
les
movsb
inc
pop
sub
mov
pushf
lock
les
ffreep
adc
sti
ljmp
hlt
cltd
les
inc
aas
das
mov
push
pop
lods
xchg
incl
jno
jbe
mov
adc
xor
xlat
fwait
pop
cli
fimuls
popf
rol
jg
sub
insl
mov
mov
je
incl
cmc
mov
dec
xor
inc
push
add
std
shrl
cmp
jge
or
cmp
stos
push
test
pop
sub
mov
xor
lods
lcall
in
mov
cmc
mov
push
sub
mov
pop
pusha
lods
outsb
mov
pop
ljmp
incl
rol
sar
mov
lret
mov
fwait
shlb
test
das
fdivrs
xchg
xor
loope
mov
insb
cld
jmp
out
pop
push
scas
inc
ja
inc
fisubs
mov
mov
fwait
and
mov
jbe
ficomps
std
add
outsl
push
push
mov
add
dec
or
cmc
mov
incl
addr16
cwtl
adc
mov
daa
inc
xor
adc
mov
decl
push
stos
xchg
and
icebp
push
add
jecxz
jecxz
ljmp
mov
jle
insl
sbb
cld
aam
xacquire
ja
adc
inc
fldl
cmp
dec
pop
ds
dec
outsb
imul
and
lcall
bound
popf
test
incl
mov
pop
sbb
and
and
hlt
stc
sar
add
stos
loop
push
jg
cwtl
stc
js
push
lods
adc
mov
insb
and
mov
xchg
jcxz,pn
lods
decl
ss
inc
xor
lahf
cmp
jne
cmp
aas
cs
lods
js
enter
xchg
dec
ljmp
inc
xchg
andl
out
cmp
stos
out
imul
adc
xlat
popf
fidivrl
jg
decl
sbb
mov
icebp
insb
cwtl
lcall
jne
adc
mov
in
pushf
int3
xchg
aam
inc
imul
fstpt
popf
inc
cmp
xchg
das
mov
mov
dec
decl
lcall
inc
sti
out
cmpsb
lret
adc
rol
jb
call
cld
popa
rclb
xchg
xchg
in
scas
mov
cmp
lcall
mov
lcall
fsub
jp
jl
adc
cmp
push
push
mov
lcall
mov
test
ret
cmp
push
xor
sbb
rolb
ljmp
out
lea
jbe
mov
xchg
imul
int3
dec
add
call
jnp
or
mov
mov
xchg
and
add
sub
jo
sbb
pop
test
push
pop
ljmp
mov
mov
or
ret
mov
pushl
mov
shlb
fsubl
scas
cwtl
sbb
sar
out
movsl
js
add
jecxz
sub
imul
insl
js
cmp
jns
jl
iret
mov
dec
inc
xchg
je
xor
mov
add
sbb
jecxz
gs
jae
aam
jecxz
lock
push
mov
or
jl
es
mov
in
ljmp
std
ficompl
pop
pop
inc
xlat
and
arpl
pop
mov
jmp
pop
inc
inc
mov
push
sub
adc
mov
sbb
mov
je
nop
insl
adc
scas
pushl
aas
adc
lods
les
pusha
ret
sub
scas
jb
jle
loop
fwait
ret
mov
negb
incl
sbb
cmp
xchg
dec
dec
mov
pushf
lcall
xchg
add
xchg
mov
jmp
int3
lods
push
sbb
shlb
rolb
and
mov
push
insl
xor
mov
ret
dec
scas
jle
jg
pushl
cmpsb
fmul
lock
push
inc
inc
xchg
das
mov
push
adc
and
cli
sub
xchg
ja
data16
decl
fwait
lret
or
push
dec
lods
xor
test
ja
and
xor
mov
fidivrl
sahf
and
out
std
inc
les
cwtl
call
in
fistpl
js
xor
jno
pop
jl
sbb
push
mov
sbb
ljmp
int3
gs
jg
mov
and
sti
xor
jns
mov
lcall
aaa
fidivl
jnp
xor
test
inc
negb
aaa
and
int3
call
std
ljmp
jne
xchg
mov
stc
insb
adc
xor
xor
xchg
fxam
sbb
test
mov
aaa
std
pop
idiv
push
fldl2e
je
inc
add
mov
jno
fs
jmp
scas
mov
addr16
scas
les
ficomps
inc
cmp
add
es
out
dec
adc
daa
or
loopne
icebp
outsl
xchg
in
decl
out
in
fisttps
push
inc
fwait
xor
cmp
xor
or
ror
jg
sbb
inc
inc
mov
scas
and
daa
or
enter
hlt
add
dec
mov
into
pop
mov
sub
iret
lock
jmp
inc
mov
nop
pushw
pop
push
pop
add
jo
jb
mov
fnstsw
cmp
call
inc
jecxz
imul
pop
in
pop
adc
cli
xchg
stos
sahf
sbb
mov
jl
popa
jb
das
call
mov
mov
adc
es
aaa
dec
or
daa
test
call
sbb
adc
sbb
adc
shrb
and
loope
add
inc
cli
push
aas
inc
jb
bound
cmpsb
fimuls
daa
inc
cmp
gs
test
sbb
adc
stc
mov
ret
cs
xor
cmc
pop
ss
data16
pop
mov
xchg
cs
dec
loope
add
or
pop
dec
push
js
inc
mov
mov
lcall
pop
lret
pushl
ja
je
sbb
out
xor
xlat
adc
mov
in
scas
insl
inc
xor
jp
mov
mov
aas
jmp
mov
mov
jle
ljmp
jmp
iret
mov
jbe
mov
mov
xchg
inc
scas
xchg
aaa
cmp
jl
div
js
stc
outsl
imul
dec
push
pushl
mov
jb
fbld
pop
decl
ljmp
mov
clc
adc
cmp
dec
dec
push
imul
mov
adc
icebp
pushl
mov
sbb
xchg
mov
inc
das
loopne
mov
popf
push
mov
cmp
lcall
js
or
inc
mov
scas
mov
outsl
fiaddl
mov
or
ljmp
pop
lret
inc
pcmpgtd
or
mov
out
sarl
mov
inc
mov
fidivrl
inc
and
scas
jp
xor
scas
push
adc
shr
inc
aas
in
lret
mov
jecxz
sub
loop
xor
mov
insl
ficompl
xchg
call
inc
sub
mov
stos
addb
mov
inc
mov
call
or
ret
scas
into
sub
ss
mov
fisttps
lods
push
mov
or
scas
je
popf
push
xchg
mov
mov
xchg
lea
ljmp
in
sbb
pop
fdiv
pushl
jmp
aam
push
pop
stos
push
rorb
stc
add
incl
iret
xorb
sbb
clc
pusha
xor
push
call
or
mov
pop
and
leave
push
aam
jnp
cmpb
dec
or
ja
push
call
clc
imul
cmp
popf
adc
scas
lcall
mov
adc
inc
mov
sbb
addr16
inc
xchg
loop
std
mov
loope
loopnew
jg
mov
jle
movb
lret
mov
push
mov
call
sbb
push
mov
and
ret
push
out
loop
inc
jnp
ds
pushl
imul
jmp
pop
xor
mov
mov
shll
lret
shl
jmp
jae
mov
bound
push
lcall
ljmp
jl
aam
aam
mov
pop
cld
dec
insb
mov
pop
xchg
or
xor
pop
test
call
pusha
sahf
cli
mov
out
pushl
scas
sub
inc
pop
lods
sub
daa
cmp
xlat
decl
adc
pop
xchg
push
push
test
xchg
mov
inc
jmp
out
daa
fldt
inc
push
pop
movsb
xor
ljmp
clc
lcall
sub
insb
fcomip
add
test
mov
xor
jle
xchg
inc
fistl
mov
ret
daa
push
push
dec
cmp
add
xchg
mov
xlat
push
xchg
loopne
out
mov
add
mov
incl
dec
mov
xor
bts
fcoml
and
clc
cwtl
adc
sbb
lcall
in
je
cmp
lds
fwait
pop
jno
insb
jge
sahf
inc
ss
mov
das
dec
add
cmp
decl
stos
xchg
test
adc
lods
xor
inc
stos
icebp
and
cmpsb
movsl
and
incl
bound
dec
out
rolb
mov
cltd
ficompl
cmp
fdivs
xor
jecxz
stos
js
mov
push
push
pop
into
inc
mov
test
outsl
mov
mov
ljmp
sub
pushf
test
pop
mov
xchg
hlt
jmp
dec
add
sti
mov
mov
cmp
mov
lods
mov
prefetch
jg
ss
js
stos
fsubs
mov
hlt
dec
mov
js
mov
jge
lahf
loop
and
fildll
mov
inc
cli
fidivl
or
pop
lods
jmp
jae
mov
idivl
ja
lcall
hlt
cld
sub
jg
pushf
hlt
lahf
icebp
or
jg
in
jge
ret
mov
add
mov
fs
xor
mov
pop
cmpb
add
add
lds
xor
aaa
cld
dec
gs
sub
jne
ds
fldenv
adc
inc
jl
jp
loope
pushl
or
cmp
pop
ds
scas
jle
mov
sbb
jp
insb
xor
dec
inc
cmp
call
xchg
cltd
jg
cmc
cmc
sti
enter
xchg
iret
addr16
mov
jmp
pop
jno
ss
add
push
arpl
xor
add
loop
decl
mov
testb
lds
out
cmp
mov
les
xlat
call
push
push
stc
cld
std
sti
pop
cltd
and
in
fdivrs
popa
jno
insl
xchg
push
lcall
xor
lret
dec
jg
scas
cmp
ss
adc
ret
cmp
aaa
inc
lcall
ss
inc
push
addl
movsb
inc
out
mov
out
push
rolb
xchg
ljmp
stos
shlb
push
mov
push
pop
dec
shlb
int
pop
ret
dec
mov
pop
cmp
ljmp
in
or
ds
jne
in
call
mov
stos
mov
fcos
pushl
sbb
orl
out
pop
hlt
in
inc
out
out
jl
bound
stos
out
mov
jge
lret
aam
fidivs
cmp
dec
sub
mov
push
cmp
or
inc
inc
pop
mov
dec
add
ljmp
aaa
xchg
arpl
lahf
pop
aas
xchg
pop
add
dec
andb
jne
decl
cmp
mov
in
testl
mov
out
cs
loopne
mov
mov
sti
outsb
mov
push
jg
call
into
daa
ds
pop
stos
cltd
cmp
or
sbb
push
push
add
mov
call
xchg
jne
pop
outsb
mov
xor
pop
adc
and
hlt
sbb
test
icebp
adc
xor
sbbl
es
jno
jecxz
mov
divl
pop
dec
lock
addr16
movb
pop
and
pop
push
pushl
mov
and
push
and
xlat
pop
outsb
out
mov
lods
pop
mov
sbb
mov
adc
pusha
pop
in
and
fdivs
aas
xor
mov
mov
ret
orb
clc
xchg
mov
or
jnp
stos
or
in
sub
loopne
jle
push
pop
xor
inc
scas
pushf
lcall
and
dec
and
pop
jnp
add
jae
sub
data16
shll
mov
push
mov
or
data16
jg
xor
jmp
push
jb
or
out
sbb
xchg
ss
push
scas
push
push
push
dec
insl
rclb
ljmp
stos
cmp
xchg
lods
icebp
lret
jbe
pop
ja
std
inc
mov
clc
das
push
idiv
pushl
pop
sbb
lea
push
mov
ret
aaa
dec
pop
cwtl
jmp
pop
insl
inc
cld
incl
out
xchg
cmpsl
stc
aad
test
lods
mov
cmp
jle
aas
mov
pop
testb
sbb
loope
sbb
sub
inc
insl
xlat
adc
test
out
insb
fsubp
gs
test
push
data16
adc
or
in
dec
jae
out
or
loope
out
xor
das
xchg
std
or
cltd
add
imul
lcall
dec
inc
pop
outsl
stc
cmp
xlat
fldcw
xor
pop
jbe
cmpl
mov
lods
cmc
cmp
mov
in
in
inc
mov
jp
leave
xor
sbb
pop
popa
pop
cmc
sar
pop
jg
pop
dec
jae
imulb
adc
fcomp
push
jnp
push
into
add
lods
cmp
pushl
mov
out
adc
adc
cmp
mov
adc
jl
dec
repnz
fcomip
dec
ljmp
dec
jge
rolb
cli
lret
push
out
push
iret
pop
jmp
sti
sub
inc
fildll
mov
imul
push
sbb
and
mov
xchg
pop
sub
das
jg
sar
loope
std
jo
mov
xlat
mov
adc
pop
adcl
in
jo
cmpsl
and
cltd
cmp
jle
sbb
mov
jg
movsl
mov
idivb
push
and
divb
bound
cwtl
inc
lock
fists
cmp
lock
lea
in
in
add
push
pushl
mov
imul
xchg
icebp
cli
fisttps
xchg
mov
cwtl
sbb
lahf
adc
call
adc
cmp
jnp
dec
xor
sti
mov
out
adc
pop
mov
inc
xchg
xchg
mov
pushl
pop
dec
jne
out
pop
add
mov
sub
pusha
pop
adc
pop
insb
jl
je
pop
jne
and
loope
dec
test
jecxz
jp
mov
outsb
imul
push
lret
and
out
clc
decl
ja
out
mov
je
aad
lcall
xlat
xchg
mov
dec
aam
je
jecxz
inc
sub
lock
adc
inc
add
out
xor
adc
mov
loopne
out
mov
jo
aaa
jmp
call
test
inc
sti
dec
jb
sti
imull
sar
fdivrl
out
lret
jbe
push
push
or
in
and
xchg
adc
sub
sar
jmp
push
das
cmpsl
call
imul
mov
jp
mov
pop
bnd
inc
rcll
fcom
in
ljmp
xlat
mov
inc
fwait
cld
orb
xchg
inc
stos
dec
sbb
sub
jg
mov
fdivrl
aam
mov
popa
enter
loopne
sti
ljmp
lea
dec
push
mov
dec
sahf
cmp
inc
test
mov
pop
lcall
outsb
js
inc
cmp
ret
adc
ret
ljmp
dec
mov
and
pop
push
xchg
push
and
cmpsl
fiaddl
negb
rorl
das
test
mov
out
adc
cmc
loop
lcall
mov
cld
out
dec
das
nop
je
push
out
pop
repnz
adc
ja
jbe
ret
adc
xor
lcall
xchg
jne
ljmp
repz
shlb
xchg
sahf
push
push
sbb
xchg
jns
inc
ljmp
lret
pop
out
adc
push
push
and
push
jp
ds
dec
push
mov
call
inc
lcall
xor
scas
pop
sbb
mov
data16
sbb
pop
pop
decl
das
enter
fwait
subl
test
jbe
mov
sub
push
and
shl
insb
lods
imul
jb
pop
jmp
dec
lods
stos
mov
enter
repnz
or
call
call
add
push
std
aam
in
movsl
mov
movsl
pop
lret
loopne
out
cmp
push
fdivrl
test
ds
xor
sbb
clc
sbb
pushf
inc
int
test
mov
scas
mov
movsb
rcr
pushl
mov
pop
sahf
sbb
pop
or
stc
xchg
iret
push
hlt
add
sub
xor
addl
and
negb
cwtl
sbb
mov
inc
rolb
xlat
jmp
aad
iret
adc
fisttps
in
lret
or
ss
jmp
sub
pushl
cli
xor
pop
dec
ds
pop
sbb
lea
xor
mov
lahf
fs
push
inc
js,pt
jp
add
js
dec
loopne
decl
add
jg
jg
dec
xor
add
fs
iret
aam
negl
ss
decl
mov
push
pop
sub
pop
stos
cmp
xor
pushl
imul
fnstcw
sbb
int3
out
outsb
pushf
popa
jb
xchg
cli
iret
shlb
jmp
decl
shlb
adc
dec
add
mov
and
loope
in
lret
test
mov
loop
fcomip
and
add
jge
and
cmp
lock
jmp
jno
scas
andl
mov
fiadds
pop
inc
dec
enter
mov
ret
call
xchg
fiaddl
cmc
movsww
sub
adc
and
test
jg
mov
test
stos
push
cmp
es
stos
mov
fs
lcall
sub
xor
xor
js
dec
out
xchg
push
repnz
add
adc
cmp
add
jns
scas
mov
dec
test
incl
push
sbb
fs
test
adc
jg
scas
adc
inc
and
inc
sbb
mov
loopne
loopne
addr16
out
pop
and
dec
add
lcall
js
stos
jb
sub
addr16
dec
sbb
imul
imul
aas
scas
in
icebp
decl
mov
cld
cmp
jae
xchg
mov
fs
adc
dec
pop
fs
lcall
add
scas
in
loop
dec
pop
test
lcall
pop
cmp
popf
push
xor
rol
add
xor
int
ret
push
push
aam
icebp
cmp
xchg
jl
xor
push
mov
jl
bound
lods
push
leave
jle
arpl
jp
hlt
pushf
mov
jl
xor
bound
mov
inc
ja
mov
std
int3
dec
cmp
fsubl
aaa
add
sub
xchg
adc
pop
xchg
cmpb
iret
dec
lcall
add
repz
repz
jnp
outsb
jle
jle
repnz
jg
cmc
cmp
js
pushaw
sbb
dec
jecxz
in
cld
sbb
dec
rcrb
sub
mov
and
dec
mov
mov
add
out
sbb
clc
lcall
pop
icebp
push
and
jb
cmp
std
dec
or
push
pushl
sahf
jle
pop
sti
aaa
aas
mov
imul
cld
xchg
jle
or
sub
jmp
xor
mov
sbb
imul
scas
mov
sar
fwait
adc
xor
ljmp
jne
clc
adc
jle
scas
ret
sti
call
in
jp
mov
scas
jp
xchg
xor
lods
xchg
push
pop
sbb
out
clc
or
pop
lds
repz
cmp
cmp
ficompl
pop
add
or
pop
adc
daa
mov
out
lret
ret
aaa
lret
test
sub
xor
sbb
sub
pushl
sti
lcall
scas
mov
dec
jnp
sub
xorl
scas
call
incl
cltd
pop
scas
lock
dec
div
mov
push
lcall
fsubrl
pop
push
clc
pushl
in
cmp
ficompl
das
mov
push
loop
lahf
add
in
mov
mov
add
aam
dec
cs
and
inc
insb
mov
pop
sub
push
dec
mov
lods
pusha
repz
or
lcall
ds
aas
jb
scas
out
shlb
xor
bound
idivb
hlt
das
xchg
mov
lods
and
call
int3
jg
aaa
mov
cs
ret
bnd
pop
addr16
pop
jecxz
pop
mov
lcall
inc
lahf
mov
jne
pop
stos
xor
cmp
dec
dec
mov
fs
enter
dec
cmp
jg
dec
inc
adc
insl
ljmp
cmc
es
std
pop
addb
xor
fbstp
pop
jmp
and
mov
sbbl
jle
ljmp
rcrb
cmpsl
and
and
iret
sahf
xchg
mov
jae
pop
push
mov
cltd
dec
jg
stc
incl
addr16
sbb
dec
sbb
cs
mov
cwtl
and
test
ret
ret
je
dec
mov
jno
in
in
call
mov
jp
es
js
shrb
ljmp
mov
psubusw
push
mov
call
cmp
xchg
xorb
mov
lock
pop
outsb
push
cmp
fldl
insl
aaa
aad
push
je
sbb
movsl
pop
pop
jle
jle
push
in
jbe
in
hlt
ljmp
ds
sub
pop
pusha
cmp
inc
movsl
jne
inc
push
test
int
pop
mov
lret
jmp
stc
out
sbb
mov
jne
jbe
das
mov
push
xor
sub
cmp
lds
fisttpll
iret
ja
in
adc
fcmovne
mov
xchg
hlt
and
pushf
cld
jmp
push
scas
inc
pusha
adc
inc
jmp
add
sbb
add
cmc
inc
mov
out
sbb
pusha
clc
inc
call
xor
lea
ljmp
xchg
fistpll
fldt
inc
je
cld
and
mov
jge
decl
jo
push
ds
xchg
mov
xor
jle
push
imul
sar
incl
leave
xor
incl
lahf
pop
or
dec
outsl
cmp
mov
sahf
push
or
adc
scas
push
clc
xor
inc
push
adc
pcmpgtd
loope
call
jns
jle
or
mov
push
and
pop
adc
sub
sbb
jnp
pop
xor
jmp
push
call
jle
add
jae
cmc
insb
xchg
ss
loope
push
pop
xchg
mov
pop
mov
nop
xor
sbb
jmp
add
popa
mov
cmp
out
mov
incl
cmc
pop
fsts
and
addb
inc
push
jbe
push
pop
and
bound
lods
sti
scas
aam
dec
cmp
mov
test
sbb
push
xchg
inc
pop
sbb
adc
cmp
or
ljmp
rolb
cmp
or
mov
ss
sbbb
movsl
dec
cmp
jmp
jo
sub
imul
popa
dec
xchg
cmp
push
fsubs
lods
add
aas
fisubrl
adc
fdivl
adc
loop
mov
pushl
cmpsb
fucomip
pop
dec
loopne
xchg
sub
mov
subl
adc
jg
incb
jle
out
pop
out
pusha
bnd
repz
bts
and
mov
sub
xchg
dec
sub
pop
test
in
xor
decl
jg
std
mov
bound
iret
dec
iret
push
mov
repz
shll
or
cmpsb
decl
lahf
sub
loop
xor
pop
aaa
int3
cmp
xor
dec
push
mov
insb
mov
das
rorb
xchg
add
push
add
xchg
jbe
nop
dec
aad
inc
ljmp
in
xor
push
cmp
push
int
dec
in
jl
popa
scas
mov
jg
dec
loopne
and
cmp
popa
xchg
add
push
in
es
lahf
fdivrl
push
sar
test
cmp
call
inc
xor
jp
scas
hlt
aam
and
cmpsl
lret
cmp
lods
add
cmc
ret
mov
incl
jg
inc
inc
pusha
mov
mov
ss
mov
incl
jg
cmp
outsl
cli
or
in
sub
mov
subl
pushl
cmp
out
aas
pop
in
addr16
mov
mov
scas
xor
leave
pushl
lahf
add
mov
test
xchg
pop
or
pop
mov
enter
sub
aaa
std
in
or
jns
mov
aaa
mov
push
pop
adc
cmc
pop
test
cmp
pushl
xchg
add
pusha
into
loope
adc
sbb
sub
into
shrl
mov
jg
incl
pop
or
or
std
xlat
decl
lock
out
fsubr
js
adc
pop
outsb
arpl
xor
jbe
fnstcw
imul
mov
mov
bnd
mov
or
dec
sbb
mov
out
lock
push
push
daa
enter
ss
cli
ss
dec
filds
lahf
mov
jg
movsl
jmp
imul
push
lock
out
movsb
push
call
call
jp
mov
ror
popa
repz
ja
ret
jo
jg
cmp
pop
add
cmc
flds
pop
cmpsb
push
mov
jns
call
sub
and
adc
dec
add
outsb
ds
fstl
dec
imul
les
adc
jmp
ja
stos
rorl
int
inc
xchg
call
add
sarb
jb
xor
jmp
xor
xlat
insb
xlat
fidivl
jmp
les
mov
out
scas
lcall
js
lds
rcrb
xor
xor
jne
xchg
inc
adc
inc
lea
pop
sarb
push
pop
int3
or
add
cmp
sbb
mov
mov
testb
and
fstpl
lret
incl
jae
mov
mov
sbb
adc
addr16
lcall
mov
fisubl
xchg
in
sub
lea
mov
or
fadds
or
inc
xlat
push
in
sbb
jbe
stc
cmpsl
cmc
xor
je
and
adcl
mov
mov
jbe
cmp
mov
inc
xchg
paddusw
insl
xor
mov
cmp
xchg
call
loopne
cmp
negl
and
ds
lods
or
xchg
xor
pop
jnp
jnp
dec
fsubl
add
dec
sub
out
pop
aam
sub
in
rolb
jno
es
cmp
decl
jp
xchg
ja
sub
lock
push
fsts
stc
or
jg
sub
or
int3
or
adc
mov
in
push
imul
xchg
insl
fsubrl
clc
ljmp
jae
ret
adc
add
fwait
out
add
mov
jnp
xchg
sbb
insb
int
ljmp
push
enter
out
enter
sti
and
mov
lods
push
push
pop
cmp
mov
jmp
inc
mov
aam
cwtl
jnp
fisubrs
or
push
xor
sbb
jnp
loop
mov
lret
push
pop
fdivs
inc
sub
ljmp
mov
add
cmp
lcall
cmp
xor
fs
or
stos
jne
js
cmp
rorb
push
lods
dec
or
incb
cld
xor
lahf
adc
in
mov
and
sub
xlat
and
sub
in
lcall
add
jmp
shrb
and
mov
or
gs
mov
inc
pop
or
incl
push
into
aas
insb
adc
hlt
push
mov
aad
adc
push
and
fcomps
fstpl
mov
pusha
mov
int3
add
ljmp
or
push
push
jecxz
cli
rcrb
fisubs
outsl
sub
inc
loope
lock
stc
test
mov
add
jmp
outsb
fisttpl
mov
cwtl
test
jp
pop
fcoms
cmp
mov
in
xor
jnp
stos
call
in
fst
add
sarl
jmp
xor
test
testl
mov
iret
sbb
test
sbb
out
clc
inc
ljmp
dec
xchg
xor
lds
jne
outsl
or
int3
ja
jl
pushl
or
inc
and
jge
add
cmc
loop
cmp
cmp
push
adc
lcall
or
push
scas
cld
repnz
sub
cmp
cmp
js
xor
push
incl
pop
jmp
mov
es
frndint
enter
or
data16
jg
sub
jecxz
aas
mov
jno
std
mov
jge
pop
inc
adc
and
scas
sub
ljmp
cmpsl
xor
out
mov
mov
icebp
testl
call
clc
ds
pop
cmp
ret
fcompl
xor
jne
xlat
lret
inc
rcll
or
divb
mov
sbb
daa
fcmovbe
fs
jl
js
cld
bound
inc
jl
pop
cmp
adc
cmp
dec
sti
adc
in
ficompl
adc
xchg
jl
mov
or
int3
pusha
pop
iret
cmp
pop
subb
cmpsl
cs
rcrb
mov
popa
cmc
mov
pop
ljmp
jge
xchg
aad
and
in
jae
fdivrs
mov
xchg
jle
insb
ret
mov
mov
jmp
mov
adc
scas
pop
sbb
loop
xor
pushf
add
sahf
sahf
mov
jg
jae
into
rclb
add
rcrl
std
mov
incl
cmp
lret
pop
inc
jbe
xor
jg
movsb
jmp
push
cmpsb
aam
or
ds
jb
and
or
add
lcall
cmpsl
jl
xor
push
inc
loop
popf
or
fmuls
daa
xor
in
je
leave
jns
incl
repnz
or
cmp
xor
pop
fsts
jg
inc
xchg
int3
jb
lcall
jp
cli
aas
cmpsb
push
push
sub
cmp
test
ret
out
cmp
mov
in
jo
sarl
bound
sbb
lods
jnp
sbb
jl
and
xor
scas
xor
decl
dec
pop
iret
and
xor
fmuls
jg
je
call
cwtl
xor
out
mov
inc
dec
decl
lret
std
sar
sub
mov
mov
xchg
adc
xor
and
mov
ret
mov
ss
push
push
xor
dec
jle
lcall
test
add
jg
cltd
dec
rclb
and
lds
dec
pop
push
mov
adc
pop
or
mov
jae
mov
adc
mov
insb
xchg
enter
insl
subl
or
mov
jno
incl
pusha
mov
adc
iret
addr16
push
and
fst
jae
xchg
into
or
inc
jmp
dec
mov
into
dec
lods
adc
and
and
inc
pop
push
inc
jne
jmp
pop
inc
jb
push
popa
orl
inc
or
push
pop
clc
scas
add
int
cmpsb
jg
mov
stos
hlt
into
inc
pop
out
sbb
dec
push
mov
lcall
jbe
icebp
int3
jp
stc
jl
push
enter
xchg
xorl
pushl
adc
mov
add
adc
insl
addr16
das
cmc
cld
out
mov
push
mov
sarb
shlb
pop
pop
xchg
jbe
sub
mov
inc
ja
dec
push
incl
xor
sar
leave
xor
mov
stos
fwait
aad
lret
pop
jg
pop
add
ficoml
add
mov
mov
or
mov
inc
cli
out
scas
into
fs
lcall
jbe
jge
int
jg
ljmp
xchg
ljmp
mov
and
mov
loop
loopne
dec
lret
cld
mov
decl
jb
out
in
sub
mov
and
testb
push
incl
cmp
add
pushf
push
inc
xor
push
xor
push
and
test
mov
push
xchg
les
dec
gs
pop
cld
call
out
stos
mov
nop
push
push
in
xchg
sarb
ljmp
add
inc
shlb
pop
jns
out
call
ret
scas
push
cmp
xlat
xchg
xchg
andb
pop
testl
lcall
jmp
mov
out
mov
or
cmc
popf
xchg
add
call
mov
and
outsl
mov
dec
jge
sbb
cld
mov
adc
ljmp
fsubs
ljmp
insb
mov
daa
ret
lods
jno
ljmp
or
dec
scas
xchg
sahf
cmpsl
add
scas
in
ljmp
ficoms
int
and
adc
inc
cmpsb
xchg
cmp
sub
inc
movsb
and
mov
xchg
xchg
lret
add
jg
mov
daa
notl
sarb
pushl
dec
addr16
xor
inc
stos
sbb
push
xor
inc
aam
xor
in
imulb
cld
lret
add
in
sti
sub
aas
and
loope
into
lods
addr16
mov
pushl
lods
test
stos
rolb
lods
or
fnsave
pop
repnz
cmp
scas
jg
add
shlb
jb
xor
fisttpll
decl
jne
xchg
imul
push
lock
sbb
dec
add
inc
add
cld
and
enter
jmp
mov
fdivrs
pop
inc
sub
mov
int3
sarl
ficoms
das
xchg
out
inc
sbb
call
pop
cltd
fldenv
arpl
data16
ljmp
jmp
mov
shl
mov
sub
inc
push
and
mov
fwait
data16
jmp
fisubrl
push
enter
loopne
dec
xchg
bound
add
push
xor
jmp
jmp
incl
stc
and
icebp
mov
mov
mov
insb
scas
lret
jnp,pt
push
and
lahf
es
sti
das
xor
int
mov
jecxz
or
mov
test
ja
into
fimuls
sbb
iret
shrb
cs
aaa
pop
cmp
push
lods
psraw
and
lcall
push
ret
pop
cmp
add
rcrb
in
int3
shlb
popa
push
sub
jae
mov
xor
push
addr16
imul
add
cli
cmp
inc
rcr
inc
mov
scas
mov
dec
dec
out
dec
inc
fnstcw
lods
xor
aas
ret
pop
fcos
lcall
sub
inc
addr16
in
in
es
in
iret
jge
dec
leave
in
sub
mov
std
decl
push
call
push
int3
ret
int
sbb
call
jne
mov
pusha
and
pmaxub
inc
insl
into
dec
mov
xchg
ljmp
shrb
and
lret
out
dec
sti
xor
lods
into
mov
dec
js
lds
inc
sub
fiaddl
jmp
mov
adc
xchg
ja
aaa
dec
in
scas
jg
mov
pushf
mov
out
cltd
pop
fimuls
inc
jecxz
sbb
mov
lcall
cmp
dec
out
add
jle
add
sbb
pop
xorb
gs
fisubrl
movsb
ljmp
cmp
bound
dec
mov
repz
clc
or
das
imul
imul
es
in
pop
aam
push
bound
xor
mov
scas
scas
xchg
call
pushl
push
ljmp
cs
mov
fdivrs
jge
xor
mov
test
out
push
mov
fwait
push
jg
sti
jmp
movsb
ljmp
pusha
mov
jb
gs
jnp
add
mov
xchg
xor
sbb
xchg
test
jne
test
adc
and
mov
mov
cmp
lahf
icebp
dec
mov
mov
ljmp
cmp
lahf
repnz
decb
lret
mov
sub
sbb
lcall
call
inc
mov
adcb
call
jl
int3
je
addr16
call
loopne
leave
fs
mov
sarb
scas
dec
push
pop
push
adc
pop
and
and
rcll
mov
jg
add
cwtl
cs
lret
inc
lock
test
cmp
push
inc
sbb
andb
pushl
and
jo
jg
into
js,pn
cld
int
in
fnstcw
inc
xor
addr16
sbb
jmp
divl
scas
lret
outsb
gs
xor
int3
dec
idiv
xchg
test
ja
sbb
cmp
fcomip
dec
jnp
jp
xchg
push
mov
ret
pop
xchg
cmp
inc
sub
cli
lcall
dec
fmuls
push
and
jle
dec
and
lahf
push
adc
xor
xchg
dec
aad
arpl
xor
iret
leave
xor
add
pop
pusha
cmp
ljmp
test
xorl
and
jo
jbe
mov
lea
into
rcrl
ljmp
into
mov
lret
dec
cmp
popf
in
packsswb
std
xor
out
lcall
and
mov
push
insl
int
imul
and
add
call
and
xchg
sbbb
mov
call
mov
das
daa
std
mov
mov
shr
das
fs
mov
cmp
inc
sub
sbb
xor
fidivl
idiv
lcall
outsb
jo
xchg
les
sub
sub
das
in
xor
add
sub
mov
or
or
pop
xor
fbstp
mov
ja
repnz
inc
pop
jb
jne
int3
dec
inc
in
movsl
mov
fcoms
mov
xor
jecxz
adc
nop
call
sarb
mov
jge
mov
fbstp
pop
jl
jp
sahf
push
cmp
outsb
rorl
test
cmp
pop
imul
cmp
push
jo
arpl
mov
aas
fcomip
sub
movsl
dec
imul
pop
mov
stc
xchg
push
push
test
cld
incl
hlt
mov
rorb
mov
in
inc
arpl
popa
and
int3
mov
pushl
cltd
mov
or
sub
lret
jmp
decl
xor
es
stc
sbb
ljmp
xlat
je
clc
bound
cmp
jbe
push
stos
xor
imulb
mov
mov
xor
inc
push
jne
mov
add
into
fisttpll
stos
sbb
cltd
scas
sahf
lretw
cltd
loopne
rdmsr
jmp
push
sar
inc
test
sti
ds
fnsave
mov
mov
mov
jo
sbb
dec
aaa
and
sbb
cmp
call
pop
adc
mov
sub
xchg
scas
ret
adc
xchg
shrb
xlat
push
xchg
jb
sub
cmp
outsb
fdivrs
inc
jg
pop
xor
sub
ret
data16
cmp
or
insl
adcb
lahf
out
sub
lcall
rcrb
aaa
sub
fs
add
shll
pusha
stc
cmp
xchg
push
sub
pop
cmp
lret
add
mov
cmp
xchg
sbb
pop
pop
imul
or
sub
xor
popa
pop
adc
mov
fcomip
ljmp
pop
test
sbb
and
or
jmp
sbb
mov
pushl
sub
jns
cld
outsb
cmp
lds
daa
xorb
movsb
adc
xchg
mov
addr16
jmp
cld
xchg
inc
and
cmp
decl
rorl
les
mov
scas
add
clc
fildl
fsubl
xchg
cmp
stos
cmp
idiv
stos
incl
adc
add
loop
enter
sbb
cmp
ljmp
movsb
sub
rorl
cmp
mov
mov
fisttpl
push
mov
mov
shll
sbb
xor
ja
mov
xchg
mov
aad
ljmp
mov
mov
daa
xchg
lods
xorl
push
fnclex
outsb
jnp
scas
test
aas
notl
pop
cli
bound
mov
std
decl
in
lret
pop
xchg
les
fildll
mov
lcall
jne
mov
ljmp
out
jo
cltd
sub
movl
cld
mov
lds
divb
std
lock
out
add
mov
inc
out
jg
push
sbb
jno
adc
adc
xchg
movsb
mov
mov
mov
xor
push
mov
cmp
scas
pop
jnp
add
adc
je
mov
push
jg
js
inc
mov
shlb
jns
ljmp
add
mov
ljmp
mov
sub
mov
fwait
mov
ljmp
scas
mov
jge
mov
ljmp
pop
mov
enter
std
in
dec
add
pop
cmc
mov
enter
sahf
cmpl
decl
and
pusha
sbb
dec
or
mov
inc
mov
inc
mov
mov
lcall
cmp
ret
push
push
int3
cmpsl
adc
daa
into
mov
mov
fidivrs
pusha
pusha
ljmp
pop
decl
and
jno
inc
pop
shlb
data16
pushl
es
mov
push
cmp
iret
xchg
sub
xor
add
xchg
pop
imul
in
mov
and
inc
pushl
cmp
sub
jmp
ss
pop
insl
sub
icebp
or
and
lahf
push
cmp
inc
or
sbb
mov
sub
pushf
pop
sub
sbb
or
push
incl
mov
mov
dec
push
mulb
jbe
sub
pop
call
popf
ss
call
pop
xor
add
es
fcomps
call
cmp
jmp
enter
scas
xchg
pop
mul
sbb
push
xor
cmp
call
dec
and
inc
add
inc
loopne
mov
or
mov
arpl
negb
neg
pop
inc
jl
test
push
add
mov
testb
xchg
or
cli
inc
push
cmc
lcall
fistl
cmpsb
or
ja
cmp
xor
dec
xor
repz
cwtl
daa
dec
or
add
addr16
dec
dec
push
mov
ret
jns
lcall
fldl
daa
js
fdivrs
inc
xchg
xor
stc
and
sbb
and
add
pushl
subb
lret
push
arpl
or
mov
jmp
inc
xchg
outsb
call
call
pop
aaa
mov
sbb
push
jp
fwait
imul
jnp
mov
mov
add
xchg
mov
adc
push
imul
dec
sbbb
in
inc
movsb
imul
dec
mov
inc
pop
movsl
out
mov
out
pop
mov
test
push
lcall
sbb
int3
xor
pushl
pop
mov
adc
mov
sub
sahf
call
jp
aaa
mov
lret
mov
push
sub
push
or
data16
xchg
push
cmp
cmp
aaa
out
add
ljmp
sbb
push
cmpsb
xor
push
xor
and
cmp
add
movsb
into
cld
adc
movsb
pushf
lds
orb
outsb
jbe
leave
pop
xor
cmpsl
add
call
std
xor
repnz
ds
add
mov
loop
insl
std
mov
pushl
jge
std
pop
fs
or
pop
inc
dec
push
popf
or
ds
sub
jmp
jge
cld
lds
mov
mov
mov
std
jg
mov
inc
dec
lds
jl
imulb
jmp
mov
lret
mov
adc
pop
das
lcall
aas
pop
jno
pop
sub
mov
ljmp
push
xor
scas
cmp
lret
jmp
cmp
repz
push
add
dec
popf
inc
push
push
and
mov
decl
js,pt
stos
clc
cs
cmp
pop
mov
sub
and
nop
fcmovnb
rorb
ljmp
cmp
sub
faddl
mov
pop
and
std
scas
dec
sbb
xor
xchg
hlt
inc
imul
xchg
sti
xor
pop
push
sub
pop
mov
add
push
jne
inc
es
pop
mov
mov
or
and
add
test
xor
fsubp
jb
std
pushl
cwtl
xor
xor
xor
or
cmpsb
xor
arpl
inc
mov
push
pop
lcall
adc
rcr
std
jle,pn
mov
das
fistpl
pushl
sbb
jb
fdivrl
dec
push
push
jg
cmp
xchg
scas
cmpsb
cmp
ljmp
clc
ret
xchg
jb
and
pushl
xor
jg
push
and
stos
scas
jp
jg
pop
clc
adc
mov
push
add
imul
enter
shlb
sub
adc
jnp
pop
std
pushl
lock
ds
sbb
out
es
xchg
bound
xor
mov
cmc
data16
clc
push
or
mov
xchg
xchg
fcoms
and
mov
pushl
add
mov
dec
pop
fldln2
xor
xorb
jmp
shrb
adc
sbb
cmpsl
aam
data16
dec
adc
lahf
or
and
cmp
cli
pusha
mov
cmc
das
clc
mov
cs
mov
mov
ja
scas
or
inc
into
movsl
ljmp
xor
mov
arpl
in
cmp
call
pop
aas
jno
mov
inc
jns
pop
sbb
pusha
xor
mov
pop
pusha
and
in
outsl
mov
sti
cmp
data16
inc
sub
xor
in
jmp
loope
adc
jge
jmp
inc
adc
and
fsubp
int
dec
push
sti
pushf
je
xor
cld
insl
xchg
jl
mov
xchg
jg
sbb
insl
pop
push
and
push
xchg
cld
pop
cmp
xchg
fisttpll
cmp
push
xchg
jl
mov
mov
stc
xor
add
adc
das
mov
shrb
xor
push
mov
pop
lret
jmp
cmpsl
pop
sbb
add
clc
push
inc
mov
hlt
mov
mov
ret
arpl
and
mov
mov
int3
inc
adc
and
jecxz
mov
mov
outsb
jae
test
sub
mov
mov
mov
enter
sbb
gs
jmp
mov
dec
xor
xchg
popf
sar
stos
dec
mov
aad
jmp
cmp
jmp
in
data16
ja
pop
scas
sub
mov
nop
loope
and
push
push
js
test
cltd
jg
jmp
jae
mov
cmp
stos
test
inc
xchg
adc
outsl
xchg
addb
and
jmp
mov
xlat
lcall
addr16
mov
movsb
and
lret
cmp
fldcw
movsb
dec
ljmp
sarl
push
aas
push
fs
jle
cmp
ret
mov
bound
cld
incl
es
pop
xor
cmp
scas
mov
pop
shll
pop
jge
jl
pushl
add
jg
adc
and
movsl
pop
mov
mov
xchg
cwtl
scas
xor
inc
xor
rcrb
into
xor
mov
mov
and
push
pop
fnstcw
cmp
lcall
mov
lods
addr16
sub
xor
aaa
mov
mov
push
jmp
es
jge
test
xor
ljmp
repz
dec
or
mov
lahf
icebp
das
scas
scas
faddl
jg
add
mov
pop
mov
sbb
enter
push
and
mov
pushl
mov
push
jne
and
icebp
mov
mov
mov
adc
notb
xchg
or
fisttpl
lods
aas
jge
das
xchg
dec
je
call
repnz
mov
jmp
or
jp
mov
lock
mov
mov
ss
cld
inc
mov
insl
scas
jecxz
mov
pop
stc
add
cmpsb
sar
shl
ljmp
ljmp
lods
ss
loopne
js
in
sub
and
jmp
cmpsb
mov
ljmp
xor
enter
push
xchg
fists
sub
xor
lock
xchg
incl
lcall
cld
fdivrl
shrb
cmpsb
or
cmpl
incl
cmpsl
sbb
dec
int3
mov
sbb
sbb
jg
jg
or
add
cmp
inc
adc
jae
sbb
fistl
push
pushl
out
lret
dec
hlt
clc
sbb
pop
cmp
push
hlt
call
mov
add
into
mov
shlb
xor
clc
jmp
mov
mov
mov
sub
mov
mov
scas
sub
sbb
icebp
outsb
cmp
mov
or
mov
rorb
aam
mov
js
and
ret
test
and
iret
call
cli
jo
call
mov
das
jp
xchg
out
scas
xor
mov
adc
ljmp
or
xchg
es
xchg
inc
movzbl
sub
repz
cltd
and
into
scas
es
mov
stos
repz
call
and
fstl
ljmp
es
mov
or
ss
push
mov
xor
inc
outsb
stos
lret
aam
xchg
sub
loop
jmp
lock
adc
xor
cmp
lods
leave
inc
inc
stc
popa
rorl
mov
cmp
cwtl
xchg
adcl
mov
add
stos
dec
pop
js
mov
sarl
inc
aad
jg
cs
jmp
mov
loope
jmp
das
sbb
sbb
lods
add
sbb
je
cltd
inc
mov
pop
dec
hlt
out
sarb
pushl
adc
pop
xchg
mov
scas
notb
cmp
stos
sbb
mov
incl
stc
inc
adc
adc
aam
stos
jmp
jns
xlat
mov
jne
jbe
das
nop
sub
lcall
scas
push
xchg
movb
sbb
fcomp
repz
jg
ficoml
cs
mov
in
in
pusha
jp
push
ror
pop
bound
sub
out
mov
aam
push
push
push
test
lcall
stos
fwait
inc
aad
popa
mov
lret
sub
jne
add
sub
cltd
xor
out
mov
ret
iret
jecxz
jo
pop
cmp
subb
decl
ss
or
mov
add
cmpsl
shlb
push
xchg
ljmp
ljmp
outsl
gs
xchg
scas
xor
shld
shll
std
xorb
cs
mov
ret
scas
sub
or
inc
jnp
mov
push
cmc
cmp
push
std
out
inc
test
and
test
enter
scas
decl
sbb
dec
scas
sub
sbb
filds
andb
ret
pushl
idiv
lock
cs
mov
sub
mov
pusha
mov
lods
jg
nop
mov
dec
xor
mov
fstps
jae
mov
mov
lock
idiv
mov
into
rclb
mov
pop
mov
outsl
inc
je
mov
call
aaa
stos
xchg
dec
xor
and
mov
adc
push
in
fidivrl
pushf
jl
lods
imull
bound
jns
adc
lods
sub
repnz
adc
dec
mov
cmovo
fsubl
cmpsl
mov
cmpsb
push
cmp
mov
int
aad
dec
out
cmc
adc
lcall
add
mov
xor
add
sti
pop
mov
mov
pop
into
pop
sub
mov
mov
mov
sub
sbb
jnp
cmp
rcrb
push
mov
popa
imul
in
pushl
cld
or
sub
sbb
insl
and
adc
jmp
pop
test
test
popa
and
xor
dec
js
addr16
ja
or
popa
ljmp
and
xorl
decl
and
inc
ficompl
xor
cmp
push
mov
adc
lret
xor
ss
xchg
pop
sbb
inc
fsub
ljmp
decb
push
std
lret
dec
inc
inc
std
and
daa
or
mov
xchg
push
pop
into
mov
xchg
inc
sti
pop
sbb
arpl
stos
jbe
cmp
cmp
adc
mov
pop
xorb
in
inc
inc
sbb
pop
in
add
dec
ljmp
imul
cli
pop
movsl
sub
decl
outsb
sub
stc
cli
test
repnz
aas
add
mov
int3
testl
xor
leave
fnsave
xchg
mov
inc
mov
or
adc
push
cmp
rorl
sub
pop
aam
addl
mov
pop
scas
test
lods
les
and
xor
mov
jmp
adc
aas
out
test
in
jnp
sbb
push
arpl
jecxz
jmp
leave
pop
sub
ja
es
aaa
sti
xchg
lahf
inc
jmp
repnz
inc
jmp
sbb
cmp
pop
insb
insl
jg
popa
arpl
pusha
dec
or
sahf
pop
mov
lcall
xchg
pop
hlt
sti
es
lock
inc
lea
out
xchg
call
xchg
jmp
or
lock
ds
mov
adc
cmpsl
sbb
pop
les
inc
inc
pushl
pop
popf
movb
fidivl
add
dec
adc
push
test
push
in
insb
pushl
jle
fwait
rorl
outsb
jg
fisubs
sbb
out
shlb
and
mov
ljmp
ret
mov
mov
repnz
xorb
out
cli
push
mov
popa
push
push
jmp
jns
mov
xchg
xor
push
lret
es
scas
mov
add
dec
ljmp
or
adc
xlat
and
in
fs
mov
call
cld
in
lcall
in
nop
push
fnstsw
cli
fsts
out
lea
call
popf
insl
mov
fbld
jnp
sahf
sti
add
or
jg
dec
or
lock
mov
inc
cmp
inc
sbb
jge
ljmp
cmp
adc
jmp
loope
mov
mov
push
or
incl
test
cmp
incb
xor
inc
outsl
loope
mov
std
add
lea
cli
cs
sub
push
inc
or
scas
mov
jo
mov
jb
mov
popa
adc
add
lcall
iret
inc
adc
ljmp
dec
jmp
stos
adc
push
pop
adc
cmp
nop
jnp
push
pushl
out
inc
sbb
arpl
or
sbb
and
cld
lcall
add
dec
mov
movsl
jg
mov
xorb
or
test
inc
insl
call
pop
jb
lock
repz
xchg
cmp
cmp
cmc
cmpsb
jecxz
fsubrl
or
lock
sbb
incl
stos
ljmp
xor
push
addr16
aas
sub
sub
pop
add
jecxz
jb
movsb
adc
out
ss
inc
xor
mov
movsb
cmpsb
jmp
mov
cld
push
and
rcr
push
inc
jg
xor
bound
mov
mov
aad
mov
and
mov
mov
icebp
sub
sbb
dec
inc
inc
and
into
cmp
push
jg
lods
mov
inc
jmp
jnp
or
cmp
push
mov
call
mov
xor
idiv
add
jb
mov
fiaddl
cli
jns
ja
jmp
ljmp
dec
incl
xlat
add
call
jbe
mov
call
cli
cs
xorl
imul
mov
sub
pop
sbb
jbe
pop
in
aad
outsl
fnstenv
sub
cmp
mov
dec
vunpcklps
pop
inc
adc
xchg
enter
ss
lock
add
test
inc
mov
mov
inc
in
scas
push
scas
cli
call
jbe
fidivs
outsl
push
lds
sub
cmp
lcall
dec
xor
iret
arpl
cmp
jl
ja
out
push
add
sbb
pop
pop
inc
lret
pop
lock
mov
je
and
ljmp
pop
testl
mov
mov
jo
dec
xchg
mov
push
ja
pop
call
and
scas
inc
push
scas
mov
mov
mov
xor
inc
lahf
fs
jne
push
popf
mov
cmp
lret
and
push
incl
fsts
stos
sub
iret
jae
add
arpl
dec
inc
and
pop
and
imul
in
push
push
push
dec
mov
lods
jmp
push
aas
dec
ljmp
cwtl
or
jmp
lods
test
lock
sbb
xor
xchg
sub
pop
cs
mov
popf
dec
int3
sbb
out
fsubrl
stos
frstor
mov
pop
scas
sbb
cltd
add
jg
and
repnz
ss
lcall
dec
xchg
aaa
into
mov
aaa
subl
mov
push
decl
jge
adc
or
loop
fdivs
mov
mov
mov
js
fmul
dec
lea
inc
fsubl
pop
cmp
es
lret
cs
shrb
in
scas
scas
cwtl
ret
and
xor
inc
mov
mov
or
cmp
shrb
sahf
decl
xor
or
jp
mov
adc
cmp
cmp
jmp
int3
idiv
and
push
fdivr
into
out
xchg
arpl
popl
je
ss
mov
cmp
lcall
or
jp
pop
dec
and
dec
cmp
mov
cmp
dec
fiaddl
xchg
lds
out
pusha
jb
mov
divl
das
add
scas
mov
pop
xchg
mov
imull
xchg
ret
outsb
in
jp
iret
in
dec
jle
pop
out
clc
pushl
push
imulb
jns
push
pushfw
iret
push
mov
ljmp
fcmove
lahf
or
push
ja
jb
inc
out
push
xor
imul
insb
jae
cmp
outsb
adc
or
ficoms
mov
dec
insb
fwait
andb
or
and
sub
pop
mov
cmpsl
add
scas
sbb
add
cmc
arpl
jp
out
enter
inc
jle
xor
data16
cld
fwait
add
cmpsb
and
addl
mov
lds
je
xor
push
pop
push
clflush
pop
pop
fwait
adc
mov
pusha
jge
sbb
jae
sbb
xchg
lcall
cmp
stos
in
adc
je
mov
dec
cmp
cmp
fsubl
mov
in
mov
data16
and
repnz
fstpt
inc
lcall
xchg
rol
or
xor
int3
mov
ret
jae
cmpsb
cli
ljmp
loopne
push
add
stos
in
sub
js
insb
inc
jmp
lods
je
mov
outsl
jbe
xchg
ret
cwtl
cmp
ss
lret
jecxz
xlat
lret
ror
pop
or
adc
inc
and
mov
in
push
mov
mov
in
mov
rcll
pushf
ljmp
cld
xchg
cli
pop
outsb
mov
mull
roll
sub
sbb
push
cld
add
push
sbb
lea
jae
fwait
mov
mov
out
nop
cmpl
and
lret
jmp
sub
out
rcrb
cmp
pushl
ja
add
jo
push
mov
mov
repnz
hlt
jge
shld
jmp
push
mov
dec
add
out
cmpsb
ss
pop
sub
into
fs
xor
mov
sti
call
call
and
sub
outsl
and
scas
incl
jl
mov
inc
jge
push
mov
fisttpl
push
and
ljmp
mov
cmp
push
aam
call
incl
xchg
pop
pop
mov
lods
hlt
fs
mov
push
ja
xlat
sub
in
xchg
fiaddl
arpl
mov
pop
call
lock
mov
inc
dec
inc
out
adc
fcmove
out
mov
inc
add
pop
stc
sarl
test
inc
lcall
inc
std
adc
clc
inc
mov
ja
sarl
mov
scas
sbb
hlt
sar
mov
sub
fldcw
jg
jmp
je
mov
sahf
xorb
out
sbb
pop
fistpll
in
adc
xorb
lcall
jge
jne
mov
add
cmp
sub
lahf
and
sub
hlt
hlt
gs
push
mov
ljmp
mov
cwtl
mov
subl
jae
jae
enter
imul
cmc
fs
jle
or
dec
out
clc
pushl
fs
mov
fldenv
mov
inc
inc
pushl
sahf
inc
outsl
push
and
mov
lret
call
fidivrs
scas
mov
imul
mov
push
mov
cwtl
dec
in
mov
xchg
jg
pusha
or
mov
pop
lock
inc
fcmovnbe
cli
jae
imulb
inc
ds
gs
movsl
sub
scas
or
cmp
push
mov
out
int
mov
loop
bound
shrb
lcall
push
test
in
nop
mov
push
andl
mulb
mov
xchg
add
xlat
mov
mov
add
addb
and
inc
mov
push
bound
pusha
lret
or
or
xchg
dec
xchg
or
pop
cmc
mov
and
lret
dec
lret
scas
cmpsl
js
mov
out
jmp
out
cli
decl
add
jp
cld
out
jno
xchg
mov
fbstp
les
adc
pushf
andb
ret
add
leave
cmpsl
jl
pop
incl
dec
aad
ret
arpl
sub
je
inc
xchg
xchg
popf
add
out
sahf
mov
jmp
xchg
dec
jnp
das
outsb
sbb
in
mov
outsb
lods
in
mov
out
das
in
jmp
out
cwtl
cmp
xchg
mov
push
insl
fcmovu
and
inc
sbb
ret
call
pop
pop
test
lcall
cwtl
stc
scas
unpckhps
sub
in
aaa
jp
or
fcomps
inc
lock
rcr
pop
pushf
mov
xor
or
inc
rcr
int
inc
inc
pop
in
cmp
mov
and
std
dec
mov
in
add
lods
test
loop
push
sbb
xor
lret
cltd
mov
fs
pushl
cli
loope
lock
xlat
loop
mov
jmp
pop
gs
shl
inc
lret
adcl
push
xchg
cmp
or
scas
iret
xchg
xchg
loopne
or
in
jmp
xchg
push
cmp
mov
dec
cmp
testb
shlb
sar
pop
cmp
lcall
sub
push
dec
js
and
inc
jae
jle
imul
stos
mov
fstp
leave
cmc
cmp
leave
cli
fdivp
mov
or
cs
cmpsb
ljmp
nop
aam
dec
push
mov
popf
mov
scas
inc
fcoml
incl
sbb
lahf
jmp
fnstenv
cmpsl
push
jno
call
notb
inc
jnp
push
cmp
jbe
xor
ljmp
add
int
jne
stos
and
sub
adc
mov
faddl
lea
or
lods
mov
sbb
lock
inc
mov
mov
fiadds
aas
ret
cmp
xor
rclb
lret
bound
mov
pushl
dec
jecxz
push
push
sub
push
mov
jns
fcomi
sub
mov
sar
call
pop
ret
lcall
fadd
jbe
or
add
pop
adc
and
ljmp
dec
add
mov
clc
or
es
inc
pop
cmp
push
into
lods
fsubs
inc
or
test
cmp
decl
pop
mov
push
mov
lods
push
pop
outsl
out
push
add
les
adc
cltd
scas
dec
and
jmp
sub
jmp
inc
jp
lods
js
decl
movsl
or
int
mov
ss
pop
mov
or
ljmp
jle
push
fwait
pop
or
mov
je
mov
lcall
and
lods
mov
test
inc
je
cmp
cmp
lcall
or
and
lret
ds
std
mov
adc
adc
idivb
stos
jmp
pop
pop
dec
mov
jne
push
inc
sahf
inc
mov
insl
fiadds
ret
xor
ljmp
loop
sbb
push
mov
xchg
or
lcall
out
mov
mov
cmpsb
fs
insl
add
mov
repz
iret
pop
mov
je
les
in
mov
repz
and
mov
ljmp
shrl
xchg
push
inc
xor
outsb
pop
sar
or
mov
mov
xchg
xchg
xchg
xor
lcall
jl
jb
stos
mov
mov
dec
or
mov
jmp
push
dec
decl
lea
jae
add
out
mov
cwtl
push
push
cmpsb
push
into
cli
in
lahf
test
pop
pusha
jnp
mov
mov
xchg
mov
stos
jmp
inc
add
mov
push
push
test
or
rorl
mov
push
add
test
cs
push
inc
mov
mov
push
mov
push
xchg
ljmp
dec
inc
jg
pop
cmc
xchg
pusha
pusha
repnz
pop
mov
or
aad
out
ds
lcall
ss
mov
arpl
leave
pop
add
gs
lcall
pop
push
mov
out
scas
outsb
in
mov
test
shl
or
ds
lahf
xor
push
jl
push
mov
and
movsl
cmp
lcall
rorb
xor
cmp
mov
jo
fs
adcb
add
adc
add
cmp
mov
mov
pusha
adc
data16
mov
mov
popa
mov
xchg
jns
jae
iret
cmp
mov
or
divb
leave
xchg
push
mov
arpl
ljmp
rorl
xor
fs
mov
lcall
or
xchg
mov
sar
lcall
call
pop
mov
cs
and
cmp
fbld
sahf
mov
cmp
call
xchg
imul
mov
in
adc
pop
movb
lahf
aam
iret
inc
xchg
insl
test
jns
cmp
inc
jne
mov
inc
inc
incl
out
testb
call
fs
mov
inc
andl
xchg
outsl
xor
test
pop
cltd
mov
push
cmp
sbb
push
test
jmp
jmp
mov
jecxz
xchg
rclb
lret
dec
sub
inc
add
cs
int3
mov
push
es
jae
and
lcall
add
ret
pop
mov
dec
add
decl
cltd
jmp
push
repnz
mov
mov
lock
test
jl
iret
mov
test
movl
adc
scas
mul
xchg
cmp
inc
std
insl
aam
pop
cmp
mov
or
popa
xlat
into
scas
mov
cli
fcompl
jb
jge
or
push
orl
movsb
lods
into
hlt
ds
or
push
sub
dec
stos
and
dec
and
in
cmpb
or
xlat
cmpsl
jle
or
call
adc
adc
push
mov
stc
cltd
push
mov
and
mov
jmp
decl
lock
xor
fst
xchg
data16
xor
jmp
dec
mov
mov
movsb
iret
insb
clc
sahf
jge
aam
cli
sub
imul
xchg
pop
or
addb
push
hlt
push
jg
xchg
inc
mov
xchg
cld
sub
lahf
jno
xchg
enter
repnz
pop
nop/reserved
lcall
adc
data16
xor
mov
loope
ja
pushl
push
sbb
cld
jbe
mov
mov
mov
mov
inc
mov
inc
add
push
scas
loopne
inc
cmp
or
xchg
mov
outsb
int3
push
clc
call
xor
test
adc
adc
ficompl
cmpsb
xlat
xchg
or
ud0
pushl
jg
cld
popa
push
call
dec
adc
arpl
dec
outsl
mov
adc
jle
decl
jno
cs
out
jmp
scas
jbe
std
jmp
mov
andb
loope
ljmp
push
stos
lods
repz
aas
aad
jmp
cmpsl
jg
std
out
xor
pop
mov
add
pop
jg
pop
mov
clc
call
hlt
adc
xchg
adc
push
lods
cmpsb
cs
popa
imul
out
jnp
dec
loope
mov
sbb
roll
adc
lahf
jecxz
or
fs
lods
jg
mov
imul
adc
bound
add
stos
mov
jmp
inc
test
push
sub
outsl
dec
dec
je
outsl
into
sub
jg
bound
pop
cli
scas
pushf
mov
arpl
mov
cmp
mov
mov
decl
out
and
mov
addb
out
nop
out
mov
sub
xchg
das
dec
cltd
movsl
jge
cmp
lret
fcmovu
pop
imul
lcall
insb
xchg
sbbl
in
pop
enter
mov
jo
add
xlat
scas
in
fwait
inc
and
pop
stc
and
ljmp
jae
lods
ret
popf
and
and
decl
jb
mov
xchg
xor
xchg
mov
shll
push
fwait
int3
sbb
add
sub
xchg
loope
mov
jl
jge
and
add
lcall
pushl
stos
pop
hlt
xorb
pushf
leave
xchg
dec
inc
jp
mov
or
das
fidivs
sbbl
imul
pop
mov
int3
jecxz
dec
mov
mov
pop
imul
jbe
flds
jg
xchg
ss
ss
daa
xor
lcall
faddl
fs
mov
in
stos
sub
lcall
bound
pop
aas
add
push
inc
loope
pop
add
pop
orb
dec
inc
ljmp
dec
and
add
test
or
loope
sbb
pusha
dec
pop
jg
push
xor
fcomip
pushl
in
jp
jle
cwtl
sbb
sbb
lds
lods
rorb
cmp
decl
sarl
and
addb
ficomps
cmp
or
lock
pop
test
stos
pop
iret
mov
scas
stos
mov
push
leave
pop
pop
in
ss
call
mov
rcrb
lods
jae
mov
aas
movsb
cltd
add
arpl
leave
ljmp
aaa
push
ds
addr16
adc
jns
shl
cli
cwtl
scas
clc
mov
pop
mov
push
dec
pushl
inc
jecxz
stos
lret
idivb
outsb
addr16
mov
popf
shlb
out
lcall
pushl
mov
scas
int3
mov
xchg
in
mov
jae
jl
or
filds
jecxz
cmpsl
loopne
xchg
scas
hlt
inc
inc
aas
or
pusha
push
iret
xchg
call
jle
xor
pop
inc
jae
mov
push
out
arpl
mov
sbb
out
mov
push
test
inc
and
pushl
stc
and
or
rorb
cld
aad
test
jns
ret
jle
mov
cmpsb
mov
sub
mov
jno
xchg
mov
adcl
xlat
leave
aad
mov
loope
sbb
push
fmull
cld
incl
insl
push
mov
mov
stos
into
cmp
jmp
jg
add
fisttpll
sahf
mov
insb
subb
in
push
add
xchg
jecxz
adc
adc
in
daa
pop
ljmp
rcll
inc
jecxz
in
push
call
in
push
and
mov
int3
stc
sbb
push
ss
mov
xchg
sub
jb
push
mov
jno
loopne
sbb
pop
icebp
bnd
xorl
aas
xor
rolb
call
and
mov
stos
xchg
or
dec
imul
push
std
push
in
xchg
dec
dec
mov
add
sbb
sub
cld
lods
add
sbb
mov
dec
jno
sbb
mov
subb
adc
mov
ljmp
xorw
pop
add
call
or
jl
dec
sub
stos
nop
push
adcb
dec
ficoms
push
cld
fildl
incl
or
pop
mov
out
int3
fwait
testb
and
cli
call
pop
cmc
inc
in
jge
xor
cmc
call
cld
cmp
addl
pop
inc
dec
or
dec
loope
push
les
cmp
out
gs
dec
sbb
mov
fistpll
cli
push
jle
sub
gs
mov
pop
shlb
call
cs
cmp
mov
sbb
mov
idivl
and
mov
jg
xchg
stc
std
std
mov
fcomip
rorl
jmp
cmp
sbb
mov
in
sub
sbb
das
decl
add
cs
in
leave
fs
ficomps
movsb
test
inc
and
dec
sub
xchg
or
or
lods
pusha
bound
and
call
mov
and
test
mov
fisttps
add
cmc
outsb
xchg
out
mov
jne
lret
inc
std
aas
adc
push
cmp
testb
xor
loopne
xchg
rol
arpl
sub
lock
fstpl
mov
nop
scas
mov
jg
test
clc
xchg
cmpsb
fimull
out
mov
inc
loopne
mov
dec
sub
icebp
into
loop
incl
push
gs
popa
daa
jmp
imul
fldt
int
sub
pop
inc
xchg
das
lcall
outsb
sbb
cmp
inc
push
push
mov
fstp
addr16
jmp
jne
cmpl
xor
mov
push
out
add
mov
lret
mov
cld
insl
xor
loope
inc
sahf
add
mov
popa
pop
and
mov
out
and
mov
pushl
jl
or
xchg
push
test
or
cli
cmp
addr16
pop
xchg
in
rorb
and
push
je
je
jne
jbe
ljmp
out
sub
add
cmpsb
inc
push
rcll
xor
mov
mov
negl
mov
decl
cmp
xor
arpl
and
rcll
mov
lds
sbb
in
or
inc
jb
or
jmp
pushf
pushf
dec
pop
and
divl
aaa
pop
stos
or
pop
push
iret
xchg
repnz
fs
jmp
andl
sbb
lret
or
dec
pushf
mov
mov
pop
popf
sub
pushl
cmp
xorl
mov
or
das
sar
sbbb
jecxz
ds
mov
rcll
enter
enter
decl
mov
std
xchg
push
aaa
push
jle
xchg
scas
mov
in
and
stc
hlt
xchg
adc
hlt
out
mov
mov
enter
test
and
xor
jg
lock
fcoml
cmp
pop
jne
sti
addr16
loope
jmp
cli
aas
mov
lods
test
sbb
add
jl
gs
inc
mov
mov
lock
dec
or
inc
lea
jge
inc
fdivr
cmp
lods
fsubrp
sub
mov
add
pop
or
mov
movsb
jns
gs
call
xchg
lock
enter
jmp
or
popa
mov
jnp
imul
cli
mov
cmp
rclb
outsb
xchg
daa
repnz
cli
jns
cs
push
or
cmpl
push
mov
shrb
pop
cld
xor
pop
outsl
mov
imul
xlat
or
pop
jns
arpl
lods
out
test
fs
incl
call
bound
add
push
fdivr
mov
ds
data16
out
clc
jg
jbe
int3
sub
sbb
mov
jns
pop
mov
add
ljmp
add
cmp
sbb
gs
ret
push
mov
out
pop
add
jne
mov
push
push
iret
aaa
push
cmp
jecxz
pop
mov
lock
cmp
pushl
or
mov
call
pop
out
loopne
out
arpl
cmp
scas
je
lock
mov
test
jle
jb
lods
bound
jg
scas
lock
cmp
xchg
testl
mov
ret
shll
rorb
leave
aad
mov
aad
stos
out
cmpb
cmp
or
out
xlat
jmp
pop
and
fwait
pop
fsubrs
sar
out
push
mov
fimull
xlat
pushl
aam
xchg
dec
cmp
dec
push
mov
dec
in
test
inc
and
adc
fistl
xor
int3
jb
pop
jge
adc
jge
inc
sub
call
lcall
aas
push
pop
les
mov
faddl
mov
arpl
mov
lcall
subl
jne
adc
lds
pop
mov
popf
lock
dec
shlb
das
clc
pop
mov
inc
pop
clc
fmuls
jmp
adc
int3
lcall
mov
lods
mov
ljmp
dec
nop
pop
push
pop
out
aad
mov
nop
aam
xchg
loop
sub
push
je
mov
dec
and
decl
aas
xor
or
or
imul
lods
imul
repnz
sbb
inc
dec
xchg
pop
sarl
push
lret
and
push
cltd
push
pop
dec
add
idivl
sti
mov
xchg
cmc
xorl
mov
mov
push
movsb
jnp
notl
push
jbe
fbld
out
cmpsb
push
fisubrl
sbb
jne
xor
cld
ljmp
xchg
sbb
shrb
es
int3
jo
adc
dec
cmc
call
add
inc
mov
iret
inc
add
aad
cltd
mov
xchg
mov
pop
aad
jo
inc
enter
push
stos
jmp
es
cmp
xchg
lahf
je
pop
mov
inc
decl
and
dec
cld
pop
scas
xchg
or
int
adc
mov
call
lret
in
dec
notb
cmp
in
or
lods
push
mov
data16
pusha
pop
mov
fidivrs
loope
push
call
push
inc
lcall
stos
jae
xchg
jl
mov
pop
cs
cld
adc
and
scas
ljmp
jmp
jp
and
push
aaa
jne
pushw
add
addl
xlat
call
xor
sbb
nop
mov
push
lock
push
fcoml
fisttps
out
jg
xchg
scas
jo
xor
pop
test
mov
scas
sbb
jae
lock
out
cli
xor
mov
call
pop
mov
push
mov
jmp
jns
or
fadd
dec
sti
push
es
test
push
jmp
mov
movsb
or
and
jb
addr16
sub
pop
lahf
dec
mov
aaa
sbb
jmp
dec
xchg
and
and
mov
jbe
popf
movsl
mov
push
xor
test
sub
mov
adc
scas
push
fnstenv
mov
insl
adc
and
loopne
cli
jmp
push
inc
fwait
nop
add
mov
lcall
cltd
sbb
ljmp
xlat
scas
outsb
xchg
mov
cs
in
adc
push
loopne,pn
insb
popa
add
or
mov
lods
mov
aas
imull
adc
out
movsb
xchg
lock
call
cmp
cli
mov
arpl
rcrl
hlt
outsb
mov
call
mov
or
mov
pop
nop
jmp
decl
es
out
inc
ja
add
lret
movsb
mov
pop
and
addl
mov
ljmp
and
pop
xchg
sub
cmp
mov
jge
cmp
sahf
xchg
xchg
incl
pushl
sbb
lcall
call
sub
call
bound
stos
or
push
or
cmp
jnp
ja
ljmp
cli
lcall
cld
mov
cmp
in
cmp
mov
mov
jno
inc
lcall
cmp
push
sub
xor
cmpsb
sub
fiaddl
ljmp
cld
cmp
or
lahf
jmp
fcmove
cmpb
jnp
enter
dec
dec
lcall
xor
xchg
add
lods
push
push
inc
pushf
sar
jg
call
outsl
mov
push
pop
mov
popa
sbb
sub
jg
fwait
or
mov
loope
xlat
hlt
sarb
xor
jo
in
mov
stos
and
adc
loopne
inc
insl
int
lahf
xor
jle
stc
ljmp
scas
int
cmp
sub
enter
mov
inc
lock
scas
in
inc
nop
mov
push
jae
and
fst
hlt
xchg
inc
xchg
ljmp
shl
mov
lcall
loop
or
mov
mov
jb
push
in
xchg
xchg
gs
xlat
jne
aam
jae
and
xor
incl
pop
mov
fwait
ret
icebp
and
out
dec
pop
sbb
cltd
push
pop
imul
mov
push
dec
cmp
lcall
xchg
insl
xor
push
or
and
fisttpl
test
stos
clc
incl
outsb
xor
std
xchg
xor
inc
sub
ljmp
insl
lcall
mov
imul
mov
jmp
sbb
js
mov
out
xchg
clc
loopne
jg
or
clc
pop
cld
sarb
rclb
clc
js
adc
jmp
gs
dec
jl
pop
xlat
mov
les
incl
dec
lods
pop
aam
and
dec
int
lcall
mov
sarb
loope
push
mov
leave
leave
inc
es
and
mov
sbb
fimuls
adc
test
in
scas
call
aam
int3
fwait
jg
pusha
jb
js
or
aas
stos
mov
sbb
cmp
lcall
cmc
pop
std
dec
jl
or
push
out
in
repnz
mov
in
out
popa
lea
je
sub
adc
xchg
mov
or
jb
ret
jno
add
dec
pop
repnz
sub
xchg
and
xor
test
inc
pop
xor
loope
insb
jg
lcall
lock
or
mov
inc
adc
cmc
test
inc
xor
jmp
sbb
dec
push
fmuls
jle
push
aas
arpl
push
jne
jmp
xor
rorl
sbb
loopne
and
dec
push
arpl
ljmp
ss
cmp
psllq
and
jecxz
xor
into
and
jmp
sbb
mov
mov
out
and
xchg
inc
cmpsl
data16
icebp
cmp
add
dec
adc
add
popa
test
jge
mov
nop
pop
addl
das
jecxz
jg
add
hlt
pop
mov
pop
bound
inc
add
incl
cld
jbe
inc
in
xor
fadds
push
jae
movsb
mov
std
mov
ficoml
enter
sarl
inc
lahf
js
imul
incl
cwtl
out
rorl
jb
dec
or
sbb
loopne
rol
inc
inc
push
into
movnti
xor
xor
add
inc
lods
mov
mov
add
jle
out
fcoms
cli
sbb
dec
pop
test
std
mov
dec
push
stc
push
and
pop
mov
sub
int3
mov
in
movq
pop
in
add
push
push
adcl
fdivrl
in
sub
and
jbe
lcall
daa
into
rcll
sub
push
loopne
flds
lds
aad
jl
push
test
mov
push
les
pop
ffreep
cld
std
loopne
inc
jnp
push
push
lods
bswap
jb
jp
icebp
imul
scas
xlat
mulb
xor
test
jno
sub
dec
xchg
or
or
rolb
fisubrs
scas
dec
push
popf
cmp
int
inc
in
out
xchg
sarb
hlt
mov
sub
stos
cmpsb
mov
not
ficoml
mov
jmp
push
jle
fwait
mov
push
and
pop
scas
push
lcall
out
js
in
adc
jge
and
out
stc
and
stos
xchg
mov
mov
sub
pusha
aaa
xchg
sub
aam
xchg
jmp
mov
push
and
fwait
pushf
fidivl
add
lds
scas
sbb
std
test
pop
xor
fcoms
and
movsl
adc
incl
sub
and
in
inc
in
mov
jecxz
push
sarl
mov
in
mov
push
aaa
gs
jns
adc
pop
call
stc
test
cmp
leave
out
or
and
imul
scas
mov
jl
push
stos
into
pushl
xor
mov
adc
pop
inc
sti
call
ja
jne
clc
push
cmp
push
xchg
adc
popa
movsb
jg
imul
pop
dec
lret
outsb
lods
fcoms
xchg
ljmp
lods
sub
mov
in
es
lahf
sbb
mov
xchg
jg
out
mov
fildl
shll
loopne
xchg
mov
std
jbe,pn
adc
pop
stos
xor
call
icebp
ficoms
dec
push
adc
lret
into
test
js
jne
ror
cmc
and
in
call
lcall
cmpb
sbb
je
push
test
lret
aam
dec
dec
sbb
popa
inc
jmp
in
jl
cwtl
sahf
inc
incl
xchg
jns
stc
mov
add
out
in
sub
mov
inc
or
ljmp
or
lcall
pop
fcomip
jns
lret
fbld
pop
xchg
sbb
cld
les
sbb
sahf
ljmp
lcall
loopne
das
das
lret
shll
incb
xlat
mov
repnz
call
push
scas
push
icebp
adc
fdivl
jns
out
fildl
jbe
fsub
lcall
add
pop
push
push
out
push
sub
enter
mov
scas
mov
outsl
mov
decl
dec
add
iret
sub
xor
jbe
cli
push
or
stc
jmp
les
dec
test
jg
pusha
leave
xlat
add
mov
es
incl
es
mov
js
xor
jmp
enter
out
movb
decl
push
test
pusha
dec
incl
mov
incl
push
mov
push
or
push
repnz
arpl
mov
arpl
pusha
jp
mov
out
jb
mov
push
scas
add
call
sbb
or
lret
cmp
enter
jmp
xor
js
cld
test
leave
out
aam
dec
test
mov
xor
pop
add
ljmp
mov
mov
jae
scas
imul
out
dec
cli
sbbb
enter
cmp
mov
movsb
ljmp
add
int
dec
movsb
mov
decl
loope
xor
scas
scas
xor
jp
and
outsb
es
fdivrs
cli
push
out
push
jecxz
push
cmp
cltd
pusha
int3
push
mov
xchg
push
cmc
dec
jl
mov
mov
fwait
decb
jae
hlt
cmp
push
cmp
fildl
jle
inc
jmp
sti
movsb
inc
out
push
repz
and
scas
push
test
xor
sub
jnp
int3
mov
xlat
leave
mov
popl
das
mov
subl
pop
lwpval
js
std
cmp
jns
inc
repz
xchg
mov
add
adc
loopne
mov
jl
xlat
es
movsb
adc
pop
add
mov
das
mov
push
xor
test
mov
pop
das
decl
sub
push
ljmp
and
clc
cmp
mov
bound
dec
fs
aam
fucomip
xchg
mov
decl
sbb
sub
pop
bound
xor
mov
aas
mov
shrb
jl
jmp
adc
pop
sbbl
sti
mov
inc
push
mov
sbb
cmp
call
cmc
ljmp
inc
push
je
shll
out
push
lahf
cmp
insb
jb
stos
jbe
aas
or
jns
into
mov
or
repz
aad
cmc
adc
add
stc
dec
lea
push
sbb
jp
sub
out
push
add
repnz
ljmp
insb
test
fs
clc
add
ficoml
scas
dec
rclb
mov
pop
lock
sub
inc
jae
add
lcall
loop
ja
xor
out
sub
xor
and
mov
jle
rcll
scas
jg
mov
test
stc
aas
dec
int3
inc
mov
pop
repz
enter
mov
cmp
lcall
xchg
jg
in
in
ret
dec
xlat
push
xchg
dec
cmp
das
enter
jae
shll
mov
inc
add
mov
loop
js
cltd
es
cwtl
push
xor
dec
pop
pop
xchg
jp
add
int3
hlt
test
incl
adc
xchg
jno
leave
jmp
mov
jmp
je
push
pop
int3
mov
nop
push
lcall
and
lods
mov
popf
inc
push
cmp
jmp
cmpsl
add
fcoms
xchg
incl
mov
xlat
push
popa
repnz
push
leave
mov
cmpsb
jmp
in
rcll
pushl
sbb
xchg
xchg
ss
jg
imul
rcll
dec
repz
fldl
mov
push
clc
pop
ficompl
adcl
stos
bound
pop
idiv
call
movsb
add
ds
push
rorl
dec
loope
xor
sti
or
jmp
ss
add
fidivl
ja
adc
jle
out
pop
mov
std
xor
pop
xchg
js
dec
sub
lcall
push
mov
push
and
inc
mov
es
jmp
push
and
jae
jne
pushl
push
mov
mov
rolb
adcl
pop
xor
movsb
lock
cmp
pushl
jl
mov
out
xchg
sahf
push
mov
fidivl
pusha
aad
out
dec
aaa
fdivrp
lcall
aas
loopne
push
sbb
fs
push
enter
add
outsb
cli
cmpsb
xor
pop
mov
call
mov
aam
mov
testl
movsb
ja
mov
aad
fdivr
xor
jg
scas
mov
mov
sahf
jg
std
sub
mov
cmp
incl
jae
xor
lret
mov
pop
dec
test
adc
jnp
insl
pop
inc
mov
rcl
addr16
sbbl
pop
cmp
ljmp
dec
add
push
shll
jae
sbb
inc
push
inc
fdivrs
sub
fadd
mov
aas
jmp
xor
fcomip
aas
sbb
into
pop
into
xor
jae
sarl
pop
mov
scas
sti
ljmp
xor
xor
jae
mov
ljmp
int
mov
pushl
int3
cmp
cli
in
jge
pop
das
cmc
das
cs
ret
jge
sbb
add
decl
fs
xor
scas
test
xchg
jbe
pop
sbb
jns
fidivs
adc
test
fmuls
xor
mov
decl
scas
xchg
in
mov
das
cmpsl
enter
test
and
fnstenv
ficompl
xchg
jge
push
popf
scas
push
mov
imul
das
les
add
mov
mov
mov
ds
nop
or
dec
sbb
or
ret
xlat
ljmp
lods
mov
jg
pop
outsl
or
arpl
mov
frstor
cmp
xor
push
out
inc
inc
cmp
mov
pop
add
pop
pop
aas
es
sbb
lcall
call
adc
ret
shrb
and
xchg
xchg
aam
add
insb
add
cmp
mov
dec
das
call
in
cmp
div
fisubs
inc
mov
inc
pusha
imul
jnp
stos
scas
js
push
sti
pop
pop
push
add
loopne
and
jl
cmpsb
hlt
leave
out
nop
jle
test
call
push
sbbl
pop
xchg
xor
push
fbstp
ret
lods
rolb
fsub
jmp
leave
mov
cmp
and
scas
testb
mov
add
filds
lcall
push
mov
int3
jp
pop
push
inc
xchg
scas
cli
incl
pop
out
jnp
mov
mov
or
fistpll
incl
imul
lcall
push
loope
mull
cwtl
xchg
jge
jge
inc
xchg
mov
sub
cmp
mov
adc
dec
enter
or
fadds
inc
mov
scas
lea
jne
shlb
mov
inc
pop
fnstsw
incl
adc
out
in
loope
test
leave
push
roll
jmp
lds
fdivp
pop
jne
inc
or
ret
mov
push
outsl
dec
jmp
int3
test
cmpsl
push
push
xchg
dec
sbb
jbe
ljmp
lcall
mov
mov
cmp
sbb
fldl
jno
jge
ret
cwtl
test
std
decl
push
mov
mov
add
aaa
hlt
mov
int
clc
aad
cli
sar
call
xchg
shll
or
imul
dec
inc
movsl
xchg
std
lods
push
lods
and
mov
jg
add
jmp
inc
push
or
aad
sub
nop
loop
sub
cmp
and
out
pusha
jbe
mov
lcall
fcoml
mov
out
mov
pusha
into
push
xchg
fsubrs
add
lods
adc
sub
mov
mov
or
test
xchg
daa
clc
pop
ss
or
popw
and
decl
dec
or
jo
push
sub
movsl
stc
scas
sbb
pop
add
xchg
xor
dec
cltd
stos
adc
ficoml
jl
mov
sub
xor
adc
lds
jg
shr
jns
jmp
and
test
xor
xchg
lock
mov
mov
mov
dec
pop
inc
arpl
in
pop
push
sub
adc
push
mov
aam
add
ja
out
ja
push
mov
call
inc
insl
pushf
jno
xor
je
mov
lock
mov
jg
aaa
and
mov
xchg
std
inc
in
push
jb
sub
add
cli
das
insb
pop
mov
jmp
lods
adc
ss
pop
jne
cltd
sbb
lock
imulb
mov
mov
incl
or
fidivs
lret
in
sub
xor
push
xchg
inc
pop
pop
les
pushl
int3
cmc
dec
jle
add
enter
pusha
xor
movsb
mov
pushl
pop
ja
mov
pop
std
scas
mov
push
fs
mov
arpl
push
movsl
mov
decl
mov
xchg
pop
jbe
pop
dec
dec
mov
pop
int
cmpsl
ljmp
pop
and
xchg
add
pop
mov
xchg
orb
adc
dec
mov
jg
sbb
das
js
adc
int
mov
mov
add
mov
add
sahf
inc
lcall
mov
pushw
dec
adc
or
mov
fldt
ljmp
outsl
cmp
ret
xchg
mov
insb
ret
pop
push
movsb
pop
fsub
sbb
jmp
dec
jl
fildll
cmp
dec
xchg
ss
pop
add
addb
hlt
dec
jmp
dec
test
mov
inc
call
repnz
lds
dec
jg
lods
ljmp
mov
int3
mov
je
jnp
mov
or
sbb
mov
sub
mov
lahf
push
decl
cltd
push
or
mov
and
nop
push
mov
shlb
xor
idivl
stos
lret
stos
incl
int
popf
jo
bound
mov
jge
mov
cmp
add
decl
inc
scas
mov
jecxz
in
sbb
lret
out
sbb
mov
cmp
dec
jmp
mov
ret
pop
pusha
mov
je
scas
cmc
ljmp
dec
mov
jle
xor
xor
out
push
idivb
pushl
imul
and
jge
jns
and
pop
mov
hlt
into
or
lcall
sbb
mov
cmpl
push
movsl
cmpsb
data16
addr16
dec
adc
mov
outsb
xor
ljmp
clc
push
cmpb
loopne
in
push
sti
adc
lahf
stc
cs
in
decl
or
fcomi
sti
pop
mov
sbb
stos
in
mov
hlt
sbb
cli
pushl
or
gs
and
cli
dec
and
cmpsl
adc
ljmp
mov
out
movsl
cs
push
cmp
xchg
stos
loop
push
pop
cmc
out
xchg
aam
cmp
jmp
jle
addr16
mov
ss
icebp
mov
lcall
sub
and
aaa
xor
push
in
cmp
add
jge
sub
add
push
sub
mov
pop
popf
lods
hlt
scas
scas
mov
mov
movsb
adc
mov
push
lahf
scas
lret
mov
xor
mov
cwtl
push
addb
adc
incl
xlat
push
lret
ret
sub
js
mov
jno
pop
pop
es
test
insb
cmc
ljmp
add
dec
push
mov
mov
jno
cld
lea
xchg
pop
lds
mov
loopne
jg
out
ss
inc
mov
mov
pop
xorb
fst
mov
cmp
mov
ljmp
in
cwtl
pop
dec
movsb
jmp
popl
inc
jl
xchg
fldenv
lcall
or
repnz
sbb
pop
pop
or
add
xchg
jno
jge
mov
push
enter
test
mov
push
inc
dec
xchg
sbb
mov
ljmp
cltd
and
scas
out
dec
add
je
adc
mov
out
lcall
mov
inc
gs
adc
mov
xor
adc
dec
lods
or
lcall
mov
push
ss
xchg
and
push
xor
lcall
loop
repz
jmp
lea
stos
test
mov
jae
mov
shrb
scas
fisttpll
aad
or
lcall
xor
mov
inc
push
les
repz
sti
stos
or
add
lock
std
add
imul
pop
imul
rol
decl
mov
or
jno
xchg
jne
mov
sub
push
imul
or
cmp
insb
dec
adcb
dec
rcl
dec
xor
xchg
lds
movsb
outsb
xchg
push
out
fdiv
mov
dec
push
adc
js
cs
rorb
in
sub
call
jp
insb
int
dec
add
scas
test
fistpll
xchg
push
or
push
sub
dec
mov
sbb
lcall
insl
gs
xor
hlt
repz
daa
outsl
stos
cmp
xchg
xchg
sbb
push
and
call
push
mov
mov
insb
mov
lret
rcrl
inc
bound
insb
push
repnz
or
mov
addb
push
aas
add
xor
pushl
jne
jns
and
push
ret
push
hlt
iret
or
nop
call
lods
ja
mov
fwait
outsb
fcoms
mov
push
mov
fcomp
mov
test
popf
stc
mov
gs
dec
enter
mov
ds
lock
mov
mov
cmp
xchg
lock
mov
testl
andl
cmc
ljmp
movsl
mov
and
sub
mov
jmp
xchg
push
mov
cmp
mov
lret
sbbb
sbb
cltd
negb
pop
jmp
daa
xor
test
mov
daa
and
lock
xor
xchg
scas
add
enter
std
incl
divl
int
out
inc
scas
lcall
les
in
or
mov
pop
repz
repnz
clc
mov
in
test
pop
sbb
push
popl
dec
sub
aam
mov
enter
cli
mov
clc
cltd
mov
es
insb
lods
inc
scas
pushl
inc
fsubrs
adc
jne
and
test
mov
scas
leave
pop
cld
adc
jo
sbb
sbb
xchg
add
leave
mov
pushl
pusha
das
adc
insl
xchg
sub
lcall
xor
call
mov
add
add
pusha
xor
lcall
cmpsb
dec
lds
or
pop
repnz
sub
ror
loope
jmp
sar
lcall
cltd
rolb
xchg
or
or
call
mov
cli
mov
xor
test
cltd
mov
pushf
jge
and
decl
pop
mov
push
mov
in
js
test
adc
inc
fistl
sti
addr16
pushl
out
pop
sbb
das
js
xchg
adc
xchg
fldt
jmp
and
hlt
call
adc
cmp
pop
pop
mov
insl
lret
lcall
pop
nop
daa
fbstp
mov
mov
pop
ss
out
lods
pusha
dec
scas
stos
data16
adc
xchg
addr16
mov
xor
scas
mov
fcoms
enter
jmp
mov
push
js
sahf
notb
mov
push
into
icebp
das
mov
das
clc
jmp
jne
mov
mov
sbb
sbb
fdivrl
ljmp
mov
cmp
mov
mov
sub
test
cmp
clc
sbb
mov
xchg
sahf
fdivrl
and
lods
cli
ds
pop
js
and
jg
cmp
push
clc
in
lcall
push
sub
neg
push
mov
mov
push
js
ret
jmp
std
lcall
mov
hlt
push
lods
xor
inc
sbb
fwait
lret
mov
push
les
sahf
movsl
pop
or
hlt
or
xchg
xor
daa
ret
mov
insl
mov
xchg
mov
incl
and
xor
rcrl
pushf
stc
fldt
xchg
cmp
sub
pushl
ss
ffree
movsl
mov
sub
int
and
cmpsb
mov
jnp
lods
cmp
mov
xor
pop
dec
stos
rcl
and
xchg
mov
fiadds
lcall
mov
and
ret
mov
add
cmp
test
arpl
test
pop
jnp
dec
push
mov
testb
insb
jecxz
mov
incl
push
cltd
stos
lods
adc
mov
decl
mov
aas
xchg
mov
decl
xorb
or
cmp
and
mov
pushl
jmp
lret
and
lea
push
movsl
popa
imul
mov
cmp
and
lcall
scas
mov
inc
out
sbb
or
mov
push
jo
mov
mov
lods
push
jmp
add
mov
jnp
jb
pop
mov
adc
sub
call
aad
or
incl
int
fucomi
je
push
out
adc
dec
outsl
lods
clc
repz
dec
or
mov
or
outsb
cli
jmp
pop
stc
ja
dec
xor
sbb
negl
ljmp
test
outsl
and
jmp
loopne
in
cwtl
dec
mov
stos
arpl
and
or
jmp
jmp
mov
dec
iret
test
mov
fnstenv
xor
call
jmp
dec
lret
cmp
scas
int3
adc
cmp
mov
decl
lods
adc
push
mov
mov
ljmp
push
mov
mov
push
insl
and
sub
pop
jecxz
lcall
or
and
movsb
lock
add
arpl
iret
ror
test
decl
xor
xchg
repz
sbb
pop
stc
mov
mov
incl
jp
out
xchg
cld
xlat
add
lea
hlt
pusha
pop
ljmp
stos
mov
lods
aam
inc
mov
lcall
das
insl
push
adcb
inc
imul
push
inc
inc
pop
stos
sbb
push
in
decl
test
in
adc
es
add
ficoms
and
mov
int3
xchg
push
rclb
cmp
and
clc
and
or
into
lcall
outsb
xchg
ret
ret
sbb
push
and
mov
lret
jne
mov
sbb
cli
nop
and
mulb
xor
stos
mov
mov
adc
int
jge
cmpsl
in
hlt
scas
cmp
push
mov
dec
xchg
mov
ds
xchg
lock
mov
mov
mov
test
jo
push
sbb
lahf
std
fdivr
fsubs
cmovle
notl
sahf
sahf
cs
mov
icebp
inc
scas
dec
mov
mov
sarl
mov
decl
lock
add
pushf
mov
sti
rcr
mov
jb
cmpsb
inc
jae
xorb
lahf
push
clc
jmp
sti
cli
adc
xchg
push
add
mov
xlat
lea
mov
enter
loop
outsl
mov
cmp
popa
les
pop
icebp
cmp
add
bound
xchg
adc
pop
scas
mov
iret
fildll
fwait
sub
test
lods
jne
test
cmpsb
jo
sbb
xchg
jp
mov
inc
scas
mov
mov
insl
idivl
bound
idiv
pop
std
lcall
in
jnp
or
mov
cmpsb
inc
ss
neg
pop
cld
pop
pop
mov
cmp
ja
dec
into
cmp
cli
add
int
jo
je
jae
in
ljmp
adc
xchg
inc
adcl
xor
test
pushl
dec
out
aam
iret
insb
insb
pop
shlb
mov
pop
mov
inc
or
arpl
std
dec
jmp
pushl
outsl
push
adc
mov
mov
movsl
fcoms
sbb
fildll
pop
mov
pop
add
ja
cmc
or
push
mov
jne
mov
pushl
ss
scas
shrb
mov
pop
lret
into
mov
das
cli
lcall
or
add
inc
mov
mov
or
scas
cmpsb
fisttpl
mov
call
hlt
insl
sub
mov
mov
mov
rcl
jge
arpl
movsb
mov
lcall
adc
jmp
enter
inc
mov
jae
rsm
repz
pop
and
scas
mov
cs
decl
pusha
loopne
in
fldenv
and
xor
or
cltd
jns
ljmp
jmp
gs
sbb
add
sbb
add
sbb
jl
in
jmp
mov
jno
mov
and
jmp
pushf
movsb
cwtl
pop
pusha
test
cmc
mov
fmul
jbe
add
and
gs
subb
jmp
sub
push
std
or
xchg
cwtl
shlb
jns
and
jns
jg
test
das
sub
in
sub
jp
pushl
test
aaa
aam
into
and
sbb
shll
mov
or
aaa
cmp
xlat
mov
push
imul
jecxz
add
sub
das
clc
jg
jmp
jp
xchg
cmp
sub
out
insl
enter
jnp
mov
incl
inc
mov
push
les
stos
mov
cli
test
adc
lcall
adc
inc
lcall
dec
jp
jbe
pusha
sbb
dec
nop
call
cmp
inc
jae
lock
es
into
scas
out
and
mov
mov
sub
jge
cmpsl
mov
das
inc
or
cwtl
insl
sub
mov
pop
loopne
or
pusha
pop
nop
pusha
push
data16
pushl
repnz
aas
xchg
pop
sub
add
shrb
icebp
cld
das
mov
push
mov
lcall
push
push
cmp
sar
dec
xchg
cmp
sbb
jmp
sub
push
test
mov
inc
xor
xchg
cmp
shll
sub
es
mov
and
mov
adc
movsl
popf
xchg
ljmp
pop
adc
das
push
and
ljmp
imul
jbe
sbb
mov
mov
xor
inc
jmp
mov
xchg
rorl
cli
in
pushl
adc
repz
jle
insb
dec
sbb
test
inc
scas
jb
pop
test
in
pop
jnp
mov
adc
lcall
out
push
inc
cmp
xchg
push
inc
mov
test
ret
add
mov
loopne
cmp
rep
mov
lds
sti
xchg
push
fwait
imul
push
push
dec
jg
decl
or
and
xor
xlat
push
sub
sbb
mov
aam
xchg
pop
in
jg
fcmovb
jne
daa
aaa
lds
loopne
pushl
pop
es
ror
mov
push
lret
cmp
or
lcall
mov
cld
or
or
inc
xor
pop
repnz
out
in
pushf
cs
and
mov
jns
lcall
lods
enter
inc
and
ret
popf
in
mov
fcmovnu
rol
pop
outsl
mov
in
mov
imul
adc
mov
pop
call
mov
xor
clc
push
and
sbb
jg
lock
in
add
dec
push
imul
shlb
cli
repz
decl
add
push
push
out
in
sub
lret
push
movsl
or
push
test
ljmp
jmp
jb
popf
adc
jbe
fwait
or
es
icebp
jae
enter
ret
jmp
bnd
adc
iret
fwait
scas
dec
sbb
mov
jecxz
dec
mov
xchg
or
ret
clc
call
lods
cmc
or
int3
mov
add
repnz
je
mov
sbb
push
not
ljmp
mov
add
mov
fxch
sub
mov
lock
rolb
jg
cmp
sub
scas
stos
add
and
cld
and
idivb
shlb
adc
xchg
fs
inc
fisubs
sub
pop
xor
hlt
das
push
test
out
mov
mov
fistps
jecxz
sbb
push
mov
inc
push
add
mov
fsubs
cmc
outsl
cli
dec
or
stos
test
adc
push
add
ror
idiv
fists
mov
imul
jne
mov
xor
nop
fxch
and
push
jbe
leave
pop
fmul
xorl
dec
mov
xor
les
imul
out
clc
ljmp
fisubs
pusha
sbb
in
dec
setnp
es
pushl
add
mov
xchg
aas
mov
inc
inc
aas
cltd
iret
scas
cmpsb
or
mov
ljmp
push
xchg
xchg
add
xchg
movsl
push
push
outsl
add
stos
push
xchg
mov
insb
lods
pop
mov
mov
mov
cmp
mov
jne
or
adc
jns
mov
jg
ljmp
sbb
lret
scas
mov
cld
pushf
pop
sub
mov
pop
mov
testb
pop
push
enter
repz
jmp
adc
aaa
jae
data16
ljmp
adc
push
aas
mov
aaa
jo
push
addl
cmp
push
fs
enter
sbb
cmp
cmp
xorl
adc
int3
std
leave
icebp
ljmp
sarb
fcoml
pop
add
mov
aam
jno
lcall
outsl
mov
or
cmovne
pop
xor
mov
inc
cmp
sar
pushl
mov
mov
fsts
mov
mov
inc
push
jge
movl
pushl
jbe
mov
pop
jns
lods
ds
push
mov
pop
sbb
jmp
mov
adc
xchg
inc
in
pop
add
xchg
lcall
mov
adc
cmp
push
into
test
testl
fstpl
sub
push
fsubr
jnp
aam
pop
test
jns
dec
pop
lcall
call
and
pop
pop
scas
xor
shlb
pushl
loope
loope
sub
sahf
add
push
push
test
rcl
cmpsb
std
pushl
lods
sbb
inc
mov
xchg
push
mov
aas
fsubl
popa
cmp
jns
out
call
daa
cmp
cmp
sbbl
adc
out
add
sub
ljmp
adc
pop
mov
xchg
xchg
push
add
insl
sbb
sbb
mov
inc
pop
mov
ljmp
cmp
enter
mov
and
dec
xchg
stc
fsts
cmp
mov
shrb
fdiv
dec
mov
sub
pop
ret
mov
adc
fnsetpm(287
mov
mov
or
sbb
or
pandn
mov
jecxz
adc
rcl
or
mov
lcall
mov
cltd
das
stc
inc
cmp
dec
ss
ja
xor
lock
cli
lcall
mov
xor
mov
cld
std
lret
push
aad
scas
fdivrl
hlt
jmp
nop
pop
test
jle
adc
divl
jnp
mov
xchg
iret
call
inc
ret
lcall
xchg
inc
or
xchg
mov
mov
inc
rolb
push
sbb
daa
mov
or
mov
gs
movsb
imul
fwait
fwait
pop
mov
mov
gs
out
out
xor
jno
pushl
fs
sub
stos
mov
sub
mov
sbb
std
stos
lret
and
and
ljmp
jmp
push
loope
mov
add
lret
sbb
fwait
enter
hlt
das
mov
mov
mov
lret
sbb
sarl
jns
in
out
nop
cltd
lock
lcall
jo
mov
or
mov
pop
jg
aaa
mov
adc
cmp
out
cli
in
sbb
addl
stos
bound
inc
mov
pop
pushf
ss
push
mov
or
mov
cmp
cmp
incl
in
lea
mov
inc
push
sbb
arpl
xchg
push
mov
pushl
add
divps
out
mov
aaa
add
push
sbb
sti
jmp
push
mov
add
push
adc
sbb
sar
lcall
fwait
outsb
fwait
lret
add
cli
sar
adc
mov
std
push
inc
push
cmpsl
mov
ja
popf
pop
push
push
adc
scas
and
lcall
push
sahf
xchg
cwtl
mov
dec
xchg
enter
cltd
lret
inc
in
jg
add
xor
xlat
dec
sub
lcall
sbb
inc
lods
fimull
add
and
fdivp
in
mov
pop
sbb
pop
lcall
mov
cmpsb
pushf
push
hlt
sarl
xchg
add
lds
jl
leave
mov
fwait
sbb
sbb
fcomps
test
dec
ljmp
ljmp
fimull
mov
scas
bound
and
or
add
ljmp
ret
dec
adc
pop
out
mov
lcall
adc
faddl
fdivp
in
in
add
scas
loop
fmulp
rcrl
incl
mov
sbb
orl
adc
jmp
pushl
aam
jae
lea
inc
lret
movsb
out
push
mov
mov
nop
lea
decl
mov
loopne
mov
stc
dec
call
lock
lea
lods
mov
xchg
xor
pushl
adc
mov
imul
cmp
sub
pushl
lahf
jb
sbb
repnz
aaa
mov
ljmp
paddw
call
test
adc
mov
xchg
xor
movsl
shl
ds
in
mov
jl
adc
test
ss
fsubs
or
xchg
xchg
sbb
dec
sub
ljmp
fistpl
mov
leave
sbb
mov
sub
xchg
nop
popf
daa
dec
and
push
pusha
sbb
jg
ljmp
sub
push
cmpsb
and
sbb
inc
push
mov
cmp
lcall
xchg
and
add
std
xchg
jmp
dec
pop
inc
dec
xor
loop
pusha
ficoml
ljmp
je
outsb
mov
cmc
mov
mov
xlat
jmp
dec
aaa
adc
sub
mov
and
push
inc
ret
dec
mov
push
divl
int
inc
jge
rorb
ds
loop
nop
inc
outsb
into
adc
ljmp
mov
int
and
push
pop
or
mov
jae
pop
icebp
jmp
in
xchg
mov
mov
push
sub
mov
subl
fcomip
ljmp
hlt
ds
add
sub
xor
push
sub
add
fs
sbb
jmp
ret
dec
or
pop
loop
xchg
push
pop
daa
ret
lock
dec
stc
cmp
daa
push
pushl
jge
jns
push
sbb
ret
clc
js
ss
cli
jecxz
and
out
cmp
call
sub
pop
xchg
dec
lcall
mov
std
xchg
inc
ret
incl
movsl
fadds
daa
jmp
mov
sbb
push
and
ds
inc
xor
mov
mov
cmp
jne
mov
mov
xor
call
movsb
lcall
mov
add
push
jmp
mov
jne
scas
mov
jmp
sub
mov
iret
bound
xor
add
ljmp
cli
aaa
scas
or
std
fwait
mov
pusha
xchg
push
add
loopne
ljmp
mov
push
push
sbb
mov
mov
inc
xchg
jecxz
adc
gs
jbe
call
shlb
mov
lret
aas
insb
scas
mov
repnz
mov
push
mov
dec
lahf
or
iret
push
mov
sbb
or
add
mov
dec
add
insb
or
ljmp
xor
lods
cld
mov
cli
outsl
in
leave
jae
cmp
sbb
mov
jne
fbld
add
mov
into
and
pop
scas
lret
mov
push
lea
xor
pop
sub
das
or
arpl
sbb
and
fildll
sub
pop
lock
iret
mov
ret
sub
inc
out
push
inc
pop
lock
add
lcall
call
les
stc
gs
xchg
mov
repz
jmp
ja
add
jg
jmp
or
sub
or
adc
fidivl
test
adc
ljmp
jmp
cwtl
int
cmp
mov
jge
fwait
dec
pop
lret
mov
adc
cmp
dec
fstps
fidivrs
and
lcall
shlb
jns
sub
call
fiaddl
mov
and
scas
daa
dec
cmpsl
cli
push
in
mov
fwait
pushl
mov
cmp
scas
outsb
lret
mov
push
shrl
cmp
mov
lea
mov
push
push
int3
mov
xchg
insl
cmp
mov
pop
adc
lcall
out
clc
ljmp
dec
call
or
dec
pop
mov
sbb
cmp
jmp
sub
insl
cmp
test
aam
mov
mov
decl
jnp
shll
scas
xchg
std
lods
mov
ljmp
mov
xor
movb
dec
aam
xor
addr16
out
xlat
subb
lods
jecxz
pop
jg
call
movsb
dec
out
sbb
lret
pop
jge
or
xor
sub
jmp
add
insb
loope
ja
test
mov
es
icebp
frstor
and
mov
lcall
mov
pop
in
das
popa
in
mov
mov
sbb
in
jl
jmp
lcall
jae
or
pop
popa
out
and
sysenter
and
iret
dec
dec
seta
fldl
inc
push
and
leave
xor
test
push
adc
lcall
jmp
je
inc
inc
test
cwtl
daa
xchg
aam
divb
cmp
mov
filds
inc
loopne
inc
ss
gs
push
cld
mov
cmp
pop
xor
or
mov
pop
xlat
mov
insl
or
mov
cld
mov
in
inc
xor
mov
cmc
xchg
fwait
sbb
nop
imul
scas
les
test
jl
dec
imul
out
sub
adc
adc
fxam
gs
xor
add
cmc
push
imul
movsb
scas
std
ljmp
sub
in
xchg
pop
mov
movsl
sbb
push
insb
fiaddl
pop
pushl
lds
pusha
mov
lcall
sub
lods
ret
gs
fs
ljmp
lods
xchg
lcall
jno
popf
icebp
icebp
sbb
push
adcb
movb
popa
decl
fimuls
dec
mov
push
das
rorb
pop
inc
add
roll
repnz
adc
ljmp
cli
ljmp
dec
sub
mov
gs
xor
pop
mov
ds
jmp
mov
and
push
push
movsb
aas
xrelease
and
subb
sub
mov
mov
ljmp
jmp
pop
cmp
xchg
adc
adc
stos
mov
ss
push
ljmp
xor
inc
mov
scas
xchg
push
pusha
adc
inc
cld
and
cmp
repnz
clc
and
js
sub
pop
or
mov
inc
ja
ljmp
dec
sarb
push
inc
jbe
xchg
add
sbb
jmp
cmp
push
mov
lea
jmp
cmp
insb
sub
cmp
pop
jmp
shll
fimull
xchg
seto
incl
lea
pop
test
inc
lods
jno
mov
pop
scas
jecxz
dec
imul
sub
mov
pushl
push
sub
fbstp
clc
ret
pop
or
sbb
call
fisttpll
jmp
sbb
leave
pop
aad
xchg
incl
or
popf
scas
pushf
rolb
mov
jns
pop
imul
or
jl
mov
call
or
pop
jp
pop
nop
ljmp
aam
dec
arpl
jo
cmp
jmp
jg
test
stos
out
push
mov
pop
jg
clc
inc
jmp
mov
lcall
xchg
out
iret
repnz
and
cmp
mov
sbb
push
das
incl
cld
call
pop
dec
lods
aad
out
dec
xor
dec
jg
repnz
aaa
cld
decl
adc
xchg
or
cmpb
out
incl
jmp
and
out
sub
xor
std
test
cs
pop
xor
lcall
imulb
xchg
mov
pop
out
push
test
js
std
lock
scas
sbb
mov
xor
mov
lcall
sbb
sbb
testl
adc
in
call
rcrb
cltd
push
scas
nop
cwtl
mov
outsb
dec
push
mov
lods
pushf
pop
pushl
cmp
adc
fildll
or
outsl
ds
inc
xchg
or
cmp
incl
ja
movsl
popf
and
xlat
xor
fidivrl
mov
incl
daa
cwtl
xchg
mov
or
mov
call
add
hlt
push
loop
or
pop
add
push
mov
rclb
inc
sbb
inc
push
pop
jg
cld
ds
mov
pop
in
mov
or
adc
inc
pushl
mov
inc
jae
mov
pop
mov
mov
inc
aam
das
bound
jg
and
sbb
dec
ficompl
mov
xchg
or
sahf
xchg
cld
mov
imul
fisubrs
ljmp
jae
psllq
xchg
fiaddl
mov
popa
mov
mov
push
scas
orb
xchg
ljmp
or
jno
jl
jnp
jmp
or
inc
nop
rcrb
xorb
ljmp
mov
pop
pop
scas
fcompl
ljmp
sub
ds
ljmp
jg
negb
movsl
outsl
and
sub
or
incl
or
decl
ret
sub
xchg
jge
mov
in
cmp
jp
fwait
arpl
shll
sti
jno
bound
mov
ds
inc
popa
mov
push
cli
jg
cmc
mov
jnp
jo
push
mov
inc
std
add
daa
lahf
jnp
popl
or
pusha
fdivr
mov
xchg
add
mov
shll
xor
push
ljmp
xchg
or
jmp
rorl
inc
xchg
xor
fcoml
push
push
inc
mov
into
addr16
add
xor
inc
push
sbb
jae
dec
stos
push
xchg
std
sbb
rolb
leave
mov
jmp
inc
call
cld
stc
adc
pop
inc
dec
mov
outsb
inc
bound
sbb
jmp
ja
loope
sub
xor
jecxz
pushl
mov
push
cli
sbb
incl
int3
pop
jmp
mov
icebp
imul
and
and
add
mov
test
pop
mov
loop
es
inc
loope
mov
push
lcall
jb
aam
rcrb
arpl
iret
lock
xchg
int
fmuls
or
outsl
cmp
mov
cmp
fistps
pop
jg
push
lahf
ds
call
xor
fldt
dec
pusha
dec
pop
inc
mov
lcall
cli
jg
insl
push
mov
or
or
pusha
or
loope
sbb
mov
mov
cmp
or
jmp
mov
xchg
call
jne
or
cmpsb
repz
add
out
cmp
cmpsb
out
fstpt
fwait
push
out
imul
cmpl
and
pop
in
imul
fucomip
sub
shl
sub
xchg
js
or
dec
arpl
pop
stos
jno
pop
addr16
pop
cld
or
cli
dec
cmp
clc
sub
lcall
loope
dec
stc
fs
jg
fbstp
pusha
out
pushl
xor
stc
gs
sbb
call
push
in
sbb
mov
lahf
jno
enter
ja
sahf
popf
lock
std
push
insl
adc
cmp
incl
pop
ret
lds
or
jbe
je
pop
imul
jnp
push
shll
aas
xchg
mov
xchg
ss
sbb
je
jp
pop
inc
outsb
cld
test
dec
cmpsl
xor
imul
es
addr16
into
inc
xchg
and
fistl
xor
adc
pop
test
push
mov
add
add
adc
mov
shll
push
xchg
je
dec
push
mov
fcomip
dec
dec
or
push
lods
adc
push
and
call
test
jp
clc
lcall
fiadds
pop
loope
pop
aam
dec
jne
add
fscale
fwait
push
ljmp
push
outsl
in
dec
add
out
into
sbb
mov
pop
adcb
aad
fcmove
fs
pushf
pop
mov
lcall
lock
xor
fcmovnb
sbb
xor
pushl
jp
and
into
xchg
addr16
sar
mov
repz
es
dec
lahf
pop
pop
jp
xchg
ljmp
aaa
sub
mov
int
cmpsb
ss
adc
inc
mov
stos
decl
push
xor
iret
je
and
pop
out
sub
xor
ljmp
or
dec
mov
out
hlt
and
jmp
out
push
lea
jle
incl
mov
jbe
mov
sbb
or
jae
sbb
in
inc
arpl
mov
pushl
pop
sti
hlt
repz
fisubs
mov
jmp
out
xor
add
enter
ljmp
in
mov
xchg
dec
dec
inc
in
pusha
or
sbb
or
lods
decl
aad
inc
ret
cltd
mov
std
add
int
in
std
jg
mov
or
decl
in
xor
pop
ret
icebp
lcall
aaa
imul
str
mov
jg
call
dec
add
or
std
arpl
xchg
xor
data16
cli
lcall
popf
pop
dec
jne
shll
decl
add
xor
mov
jl
stos
test
data16
jl
lea
jle
aam
jl
subb
fninit
bound
mov
ret
xchg
shlb
add
pop
pop
fsubs
sbb
mov
js
ljmp
mov
pop
jo
out
xchg
sub
sbb
in
fnstenv
adc
in
outsb
mov
popa
mov
insl
cli
xchg
fidivs
mov
push
loop
xor
mov
mul
pop
pavgw
testb
sbb
mov
push
fldl
mov
sbb
push
jns
loop
mov
pop
test
push
data16
je
mov
das
adc
ljmp
insl
aad
loopne
xchg
scas
pop
add
or
inc
push
xchg
ljmp
jmp
popf
daa
cli
and
jae
dec
xor
sbb
mov
or
add
dec
mov
or
xor
xchg
jge
scas
je
iret
sti
push
or
jmp
fnstenv
pop
imul
pop
test
ljmp
cs
imul
ljmp
mov
and
popa
pop
fstps
js
scas
test
pop
pop
fstpl
xchg
andl
jmp
pop
cmp
xor
adc
cmp
jge
das
mov
aaa
sub
pop
je
ret
sub
jge
cmc
jg
or
mov
mov
addr16
insb
das
cmp
push
punpckhwd
dec
xchg
fimuls
out
shlb
jle
sbb
push
jecxz
add
or
xchg
jbe
iret
xor
jmp
pusha
scas
fisubs
adc
mov
jmp
dec
jmp
das
pop
fs
arpl
mov
sar
std
mov
inc
mov
sub
not
lret
cmp
push
sbb
jg
mov
out
xchg
stos
aas
jmp
jo
leave
and
jne
fistps
hlt
mov
lahf
xor
push
dec
mov
pop
mov
ja
ljmp
cli
jns
fildl
repz
mov
add
fwait
addr16
gs
arpl
lcall
pop
aam
jbe
push
lcall
push
or
aad
out
daa
jge
adc
fnsave
mov
imul
xor
aam
and
sbb
xor
incl
add
arpl
fisubrs
imull
or
sti
xor
fmull
in
lcall
sub
jbe
ds
adc
dec
push
mov
lahf
das
mov
lcall
aad
adc
fs
dec
cli
mov
jl
mov
subb
push
push
cli
cmp
jmp
adc
lcall
divw
push
pop
sub
sarl
repnz
aam
fidivs
cli
icebp
or
sbb
out
sub
es
aaa
dec
xchg
js
xchg
ljmp
sbbl
push
test
sbb
jg
mov
add
cwtl
xchg
xlat
out
push
cmc
push
or
call
and
mov
aam
insl
push
sbb
jmp
pop
pop
mov
mov
jnp
fsubs
scas
sub
push
cli
pop
popf
xor
out
scas
or
lods
flds
pop
mov
jb
stc
jp
lods
jp
out
dec
jne
std
sbb
je
sub
mov
or
stc
sub
leave
push
rcrl
adc
mov
scas
enter
ss
aaa
and
repnz
insl
or
inc
sar
call
into
loop
pop
ds
fnsave
rcrb
sub
jl
popl
subb
jmp
cwtl
es
fadd
repnz
fs
adc
in
pusha
stos
insl
mov
popa
out
add
cmp
and
jae
add
add
xor
scas
pusha
cmp
ljmp
xchg
std
dec
pop
ss
pushl
aam
adc
or
daa
out
pop
clc
xor
je
mov
cmpsb
lock
fisttps
mov
push
adc
cmpsb
dec
fbstp
adc
int
lods
dec
lret
std
mov
fmull
push
xchg
mov
rcrl
sbb
xor
push
call
push
dec
sti
daa
dec
or
pop
xchg
in
aas
or
fwait
pop
pop
out
inc
or
fiaddl
call
clc
lcall
popf
loopne
lock
sahf
or
fistps
loopne
imul
mov
jno
rcrb
cmp
push
push
sub
ret
jb
push
cmpl
xor
jl
xchg
ret
inc
mov
subb
push
loop
cmc
mov
pop
lods
pop
dec
sub
cmp
incl
jae
lahf
add
cmovno
mov
lret
xor
loopne
icebp
mov
nop
sub
js
fistpl
and
dec
sbb
push
mov
test
sub
mov
or
jl
dec
mov
add
fldl
int3
cld
pop
lcall
jns
sarb
mov
dec
js
ljmp
or
jb
jl
les
mov
xor
push
out
sahf
mov
aam
mov
dec
jbe
enter
stos
sar
call
add
out
dec
adc
jle
pop
fcompl
pop
sbb
mov
jl
jbe
incl
jo
rorb
pop
rclb
add
dec
push
cmp
insl
dec
jg
cld
rcr
cmc
jmp
xor
pusha
mov
lea
in
arpl
xor
xchg
and
call
lcall
mov
cld
pop
or
lock
fisubs
inc
sbb
popa
push
mov
jle
sbb
ja
loopne
pushf
mov
jne
cli
fisubl
sbbb
mov
call
inc
add
dec
push
and
mov
push
out
popf
sbb
mov
pop
ficoml
pop
test
loopne
js
jl
out
xor
mov
ret
push
xorl
dec
push
cmp
ss
fs
aad
movsb
hlt
aaa
lods
inc
pusha
mov
pop
xor
flds
dec
das
es
xor
pop
cld
decl
mov
push
loop
out
xor
mov
test
pushl
loopnew
cltd
addr16
pusha
lock
jae
inc
push
decl
jle
lret
sub
lcall
and
and
sbb
es
xchg
sub
pop
and
lcall
orb
in
int
lods
push
out
test
add
lock
incl
in
test
mov
xor
fmull
insl
jg
sub
call
xchg
scas
je
pushl
mov
mov
in
and
aam
repz
icebp
pop
int
repz
pop
sahf
clc
aaa
mov
std
add
imul
fbld
pop
push
in
sub
push
imul
or
pop
xchg
pushl
cld
incl
dec
push
stos
ja
hlt
xor
lcall
ret
jo
xor
inc
pop
outsl
decl
pop
dec
loope
sub
out
cwtl
push
dec
out
inc
or
mov
add
scas
jo
enter
jg
out
mov
xchg
xchg
push
int3
inc
push
jo
push
fistpll
mov
adc
sub
adc
imul
pop
clc
add
xchg
jns
incl
js
jg
cli
das
int3
sarl
cmp
je
cmp
gs
sbb
call
jmp
int3
mov
lret
or
std
jne
loope
ret
dec
gs
pop
cmc
gs
decl
or
das
mov
ret
pop
pop
imul
inc
test
xchg
imul
js
mov
pop
loope
idivb
push
adc
add
imul
call
xchg
dec
mov
or
add
sbb
imul
lcall
sub
loope
or
jns
je
jg
movsl
inc
jb
xor
add
ljmp
jmp
insl
adc
int3
jno
or
or
sub
push
mov
jb
in
xlat
jge
lahf
mov
sti
cmpsb
jb
imul
adc
jecxz
incl
cwtl
shrl
std
daa
ficoms
cmpl
sub
cmpsb
cmc
xor
mov
pop
sahf
cmp
daa
jbe
mov
add
out
pop
sbb
jge
cmp
rorl
and
cmc
mov
xchg
lcall
faddl
xorl
leave
shr
xor
int3
fldenv
das
and
mov
push
or
cmp
into
adc
std
data16
stc
cmp
xor
shr
sarb
in
inc
fsin
ljmp
pop
dec
cld
sahf
pop
ljmp
mov
movsl
shlb
pop
mov
dec
xchg
mov
or
pop
dec
pop
call
loopne
scas
into
shlb
push
and
pop
stc
sbb
dec
imul
call
data16
clc
push
shll
dec
scas
add
sbb
fs
jns
icebp
insb
lcall
call
pop
popa
data16
cmpl
sub
aam
ja
xor
jl,pn
cmp
outsl
mov
jmp
jmp
push
ljmp
adc
mov
xchg
lods
mov
pop
dec
cmp
push
pop
pop
rcrb
rclb
adcb
pop
scas
incl
cwtl
pop
stos
movsl
ja
inc
inc
in
mov
jmp
incl
jb
add
mov
test
cltd
sub
sbb
xorb
cmp
incl
pop
rcl
cmp
ret
mov
pop
or
push
imul
addr16
push
mov
push
inc
jg
ljmp
push
out
loop
adc
jmp
std
jmp
push
ss
jmp
arpl
jecxz
sbb
push
xor
push
ret
push
fidivs
mov
ficomps
jg
inc
add
mov
inc
movsb
xchg
xchg
ds
add
cli
test
jmp
ljmp
mov
cmp
test
bound
jnp
cmp
pop
into
testl
in
mov
dec
add
xor
cmp
shrd
aam
inc
mov
stos
out
in
or
imul
mov
inc
int3
jg
aas
sti
bnd
xor
psubd
push
mov
dec
aad
sarb
jmp
xor
lock
lcall
js
pop
fiaddl
in
xchg
adc
ficompl
add
xchg
mov
es
dec
in
jle
adc
fbstp
orb
shll
push
into
movsb
sub
xor
cwtl
std
int
ljmp
jg
mov
dec
ljmp
loope
test
xchg
cwtl
mov
pushl
inc
xor
or
pushf
fsubl
imul
into
ljmp
push
add
out
mov
mov
loop
cli
jmp
inc
sti
out
out
dec
decl
inc
sbb
fistl
mov
aas
add
test
jae
mov
ret
jge
and
inc
insl
lahf
push
lea
sub
push
dec
adc
out
arpl
xchg
js
scas
out
jae
inc
jne
xor
fdivrs
sar
fldl
aaa
std
jmp
ret
fyl2xp1
pop
nop
ljmp
loopne
jg
int3
and
adc
cmc
xor
leave
push
adc
mov
mov
mov
lock
test
ffreep
pop
and
push
sbb
push
mov
xchg
out
clc
inc
call
clc
lret
loopne
out
xchg
jp
sub
xchg
jg
sbb
movsb
out
bound
jmp
xchg
adc
lret
push
repnz
sbb
push
xor
inc
insb
adc
js
das
aam
imul
mov
lcall
shrb
bnd
push
jbe
scas
insb
imul
cs
jge
jg
inc
mov
je
jmp
nop
xchg
pop
pop
adcb
jle
jno
inc
dec
fidivrl
mov
inc
mov
inc
jo
shlb
mov
mov
nop
mov
xor
decb
inc
push
cld
or
sar
pushl
gs
lock
dec
in
out
cmp
adc
inc
push
neg
loope
xor
pop
aas
sub
jmp
imul
fs
loop
cmp
push
inc
add
sbb
lock
push
cs
call
xor
sub
push
push
cld
push
in
pop
test
push
insl
or
jg
sbb
sbb
jmp
gs
inc
mov
cli
adc
popa
jg
push
pusha
adc
scas
repnz
imul
sbb
call
test
movsb
in
inc
outsb
mov
test
cmp
sti
mov
mov
in
or
cs
jg
push
mov
es
scas
je
jmp
jb
cmp
ljmp
ror
and
push
outsb
dec
outsl
mov
data16
subl
pop
cld
popf
push
outsb
push
adc
rorb
mov
mov
inc
xchg
mov
repz
mov
lock
push
ss
subb
std
in
jno
inc
push
xor
cmp
stos
dec
int3
ds
iret
mov
jmp
in
fcomip
jp
popa
sub
pop
out
xorb
mov
loopne
ret
cmp
inc
imul
mov
cld
push
fwait
and
in
and
leave
cld
daa
data16
pop
test
xor
pushl
xchg
dec
std
lds
jg
gs
aas
inc
sub
shll
loopne
fcomip
lcall
adc
mov
xor
xlat
inc
xor
ljmp
cmpsb
mov
and
adc
loop
push
push
inc
pop
ljmp
outsb
and
ljmp
jmp
or
dec
mov
push
call
bound
cld
sarl
into
jp
int
or
es
push
stos
ljmp
enter
or
or
push
or
and
push
jmp
push
repz
lcall
cli
out
jno
call
test
sar
call
add
pop
or
push
push
mov
or
mov
jg
in
out
data16
pop
dec
xchg
inc
call
pop
repz
mov
add
idiv
pop
ror
lock
fldenv
ficomps
xchg
sti
in
enter
incl
shrl
sbb
and
das
cld
outsl
sti
cmp
fbld
imul
add
test
iret
das
adcl
call
stos
js
push
in
or
push
push
clc
aas
dec
push
inc
push
bound
aam
mov
xlat
cmp
cmpb
in
movsb
lcall
dec
xor
lret
cmovne
add
clc
adc
jbe
and
or
xchg
fisttpl
sub
out
call
dec
sbb
inc
ljmp
jnp
or
xlat
outsl
sbb
mov
adc
fcomi
cmpsb
stos
cmp
adc
push
incl
loop
xor
or
push
pop
scas
or
cmpsl
cmpsb
adc
or
std
and
cmp
or
push
mov
call
pop
inc
int3
push
cmp
jg
push
idivb
xchg
ljmp
fs
mov
xchg
push
addr16
das
iret
lds
stos
gs
xlat
hlt
mov
push
sub
ror
xor
push
adc
lock
incl
popf
clc
aad
and
repnz
sarl
les
stc
fistpl
push
and
out
pop
lret
or
das
mov
push
cmpsb
out
adc
scas
mov
imul
sbb
lock
inc
xchg
dec
mov
icebp
mov
xlat
loopne
xor
and
sub
rcrb
cwtl
pushl
std
ljmp
test
in
in
fisttpl
mov
and
cmp
jns
cmp
js
push
lods
xor
xchg
mov
dec
inc
mov
cmpsb
fstl
insl
std
jmp
dec
mov
xchg
fidivrs
mov
cltd
lahf
lds
lahf
leave
in
sbb
out
fcomip
call
in
hlt
xchg
xchg
es
enter
jb
incb
xchg
jg
decl
and
loop
jns
or
cwtl
inc
sub
add
sahf
mov
add
and
incl
lret
je
ja
and
cmp
sahf
jp
mov
and
aad
xorb
lcall
xor
xor
popf
sub
stos
and
dec
in
adc
and
or
mov
out
stos
xor
mov
push
out
fstl
pop
fwait
lock
imul
std
dec
push
mov
mov
hlt
sbb
jg
xlat
add
decl
jne
loop
popa
inc
std
mov
ja
mov
inc
insb
mov
mov
ljmp
xchg
movsl
push
sbb
lcall
ljmpw
ret
imul
push
sbb
clc
jge
add
push
call
std
pusha
mov
call
int3
sub
scas
cmpsb
sbb
cmp
jl
dec
jge
mov
lcall
push
sub
scas
xlat
mov
sub
imul
jl
mov
or
push
dec
add
and
xchg
pushl
xor
push
enter
xor
adc
clc
fs
out
cli
cmpb
pop
push
pop
and
cmpb
mov
lcall
mov
insl
xchg
inc
push
or
into
lret
inc
push
pop
and
mov
mov
and
sub
negb
int
ja
pop
ret
bound
mov
jge
mov
push
or
and
vpunpckhbw
pop
adc
decl
mov
pop
mov
dec
mov
jns
push
dec
in
mov
jg
scas
or
xlat
idivl
pop
mov
icebp
push
loop
push
orl
sub
and
or
mov
iret
push
fwait
pop
cmp
pop
lret
jl
push
dec
add
and
hlt
add
shr
xchg
add
fdivp
bound
pop
ss
lcall
jg
add
inc
sbb
pop
rorl
jo
add
ljmp
push
jmp
inc
int
dec
mov
out
js
xor
cmpsl
mov
xor
sub
pop
push
jmp
push
insb
mov
std
pop
outsl
outsb
nop
dec
push
lcall
sub
cmpsl
adc
call
jle
loop
inc
push
mov
sbb
stos
xor
mov
push
rcr
jnp
push
repnz
shll
xor
mov
ret
and
decb
es
inc
mov
mov
inc
ljmp
cli
jp
scas
mov
push
push
sub
cli
bound
testl
mov
dec
and
js
mov
jne
addr16
aam
out
sbbb
pop
mov
dec
pop
aaa
mov
gs
incl
clc
adc
and
in
cmp
xchg
jo
push
loop
or
outsl
ss
insb
imul
cmp
arpl
int
jo
adc
les
xchg
pop
jl
mov
xchg
mov
jmp
cwtl
insb
mov
fldcw
mov
leave
js
push
cld
add
sahf
push
pop
xor
adc
pop
test
and
stos
mov
lds
fcomi
and
jecxz
push
jns
sub
pop
sub
dec
out
jg
inc
adc
notb
addl
pop
add
xor
mov
jg
cmp
cld
adc
mov
cli
test
cld
xor
pushf
test
movsl
mulb
ljmp
fs
cmp
mov
push
push
and
jl
in
mov
push
dec
jp
or
add
insb
ljmp
mov
ror
pop
push
dec
or
inc
jle
cmp
aaa
sub
pop
jle
lods
out
pushl
adc
das
pop
jl
std
pop
fwait
ja
jecxz
pop
add
and
incl
push
daa
in
sarb
dec
lods
add
and
cmpl
pop
std
ljmp
imul
jnp
cltd
insl
or
in
jbe
and
push
push
int3
push
sbb
sub
jnp
icebp
jb
sbb
decb
xor
insb
test
xchg
xor
jg
incl
lock
into
test
inc
hlt
cltd
es
scas
aam
pop
decl
lock
inc
das
add
add
xor
inc
mull
push
lock
lcall
arpl
decl
mov
sarl
jb
mov
xchg
movsb
push
adc
bound
data16
fistl
xlat
jg
mov
out
je
out
lret
mov
or
sbb
jmp
out
and
xor
incl
inc
sbb
andb
lea
gs
ljmp
mov
adc
arpl
mov
and
push
mov
orb
arpl
arpl
cs
ljmp
dec
xor
inc
lods
add
or
lods
pop
orl
lret
inc
sub
mov
inc
pop
inc
fs
fdivrl
in
cmp
loop
jp
fsts
dec
in
call
and
and
push
sbb
repnz
push
in
xchg
ja
aam
jp
cwtl
dec
pop
inc
or
pop
hlt
jns
xor
mov
sub
call
fbld
es
inc
stos
xor
cmc
sbb
ret
sbb
jg
xor
dec
stos
in
mov
and
test
aaa
adc
lods
mov
aaa
fnstsw
sub
cwtl
push
roll
cld
out
sahf
sub
pop
fs
push
inc
mov
xchg
test
ljmp
xor
cmpsl
sub
pop
scas
ror
sbb
mov
push
mov
sahf
addl
mov
fstpl
into
clc
xor
insl
sub
insl
scas
push
adc
dec
ds
xor
push
je
shlb
iret
add
shlb
xor
pop
cmp
scas
rcr
inc
sbb
sub
roll
jle
decl
dec
push
push
mov
loop
and
pushl
rcll
js
mov
js
enter
push
or
js
and
inc
mov
fimull
jmp
popa
jle
pop
cmc
pushl
jo
aaa
testb
js
inc
shrl
into
fs
mov
call
sub
or
xor
cs
add
jecxz
dec
inc
or
incl
loope
mov
push
fcmovnb
sub
icebp
scas
push
ficomps
dec
flds
cmp
push
punpckldq
add
addb
ds
push
inc
incl
mov
dec
push
push
jle
mov
sbbl
push
cmpb
jne
cli
incl
mov
int
push
scas
aam
add
ja
sbb
ret
mov
dec
sub
jle
cmp
add
mov
cmpsb
pop
divb
xchg
movsb
sarb
add
sub
lcall
mov
mov
mov
sbb
mov
ret
test
imul
test
mov
shll
sub
mov
call
push
jge
repnz
lea
mov
cmc
adc
jecxz
lret
or
mov
call
rol
sbb
stos
out
js
aam
jmp
cld
jae
or
rcrl
xor
add
jbe
inc
mov
and
pushl
mov
mov
repz
mov
insb
pop
mov
sbb
or
xor
decl
mov
add
mov
lret
daa
mov
dec
xchg
cmp
lcall
aaa
or
dec
lock
out
cli
cmpsb
lds
insb
cld
xchg
jl
sahf
xchg
inc
ss
xchg
sbb
ljmp
adc
push
or
sbb
mov
cmp
idiv
ffree
inc
add
dec
incl
sbbl
xchg
mov
fimuls
pop
call
sub
push
and
sbb
cltd
push
sti
xlat
push
push
sub
lcall
mov
jp
je
add
scas
outsl
push
add
jg
push
mov
rclw
add
cmc
repz
xor
push
xorl
sub
jg
pushl
push
mov
mov
mov
mov
jnp
addr16
add
jg
in
mul
inc
scas
int3
xor
mul
mov
inc
sbb
or
sahf
cs
int3
push
mov
outsb
lcall
imulb
xor
cmp
cmp
mov
int3
add
mov
mov
jmp
lcall
and
call
rorb
popf
cmpsl
aaa
sub
and
adc
xchg
rolb
adc
sub
ret
test
jo
cmp
mov
mov
decl
int3
sbb
daa
cwtl
inc
mov
lahf
idiv
push
dec
mov
mov
cmpsb
ljmp
cli
add
mov
bound
push
dec
aas
aam
cmp
dec
jb
bound
imulb
cmp
push
lret
daa
add
jle
adc
jbe
stos
mov
push
and
lcall
xchg
leave
xchg
lret
aad
cmpb
jge
cmp
sub
pop
sub
xor
popf
test
add
mov
push
shlb
jae
pushl
sbb
and
pusha
pop
xlat
fcomi
sub
sbb
pop
and
lods
push
ljmp
pushl
adc
aad
fisubl
cmp
inc
cmp
loope
outsb
test
mov
and
pmulhuw
call
std
xor
pop
aaa
add
xor
xlat
cmp
push
cmpsl
test
call
movsb
xchg
push
cmp
js
pop
push
mov
and
insb
sub
jg
mov
nop
arpl
out
add
ljmp
mov
adc
lods
pushl
mov
enter
xor
dec
ret
pushf
xchg
or
call
xor
or
clc
fcmovnb
push
xor
es
aad
addr16
decl
mov
outsb
and
mov
fs
cmpsb
mov
mov
leave
bound
cmp
cmc
cmpsl
inc
cwtl
std
incl
test
inc
mov
adc
pusha
pop
enter
xor
push
aaa
and
aam
and
fisttpll
dec
mov
mov
sub
jg
nop
and
in
into
jnp
mov
adc
icebp
int3
dec
push
out
aaa
cmpsb
movups
jnp
jp
mov
mov
fwait
pop
cmp
addb
ret
das
in
stos
cmp
dec
xor
sbb
in
sbb
dec
pushl
stos
push
gs
xor
sub
xor
mov
xchg
sbb
or
outsl
dec
mov
sub
sbb
outsb
jl
loope
sub
cld
outsb
ja
or
scas
cli
dec
mov
sub
cli
mov
ds
cmpb
inc
ljmp
repz
lret
cli
cmp
dec
test
cmpl
pop
push
arpl
pushl
leave
inc
shr
mov
lods
mov
popf
mov
jmp
sbb
cmp
jg
push
xor
mov
hlt
push
push
xchg
inc
inc
mov
cs
jl
xor
rep
add
jg
outsl
mov
inc
aad
ja
loope
and
int3
jne
xbegin
dec
fldl
jbe
cmpsb
aaa
in
bound
push
jmp
pusha
sbb
lcall
sub
scas
xchg
insl
mov
adc
xor
outsb
aaa
aas
jg
sub
hlt
out
aaa
out
and
out
mov
pop
lods
xchg
inc
push
xchg
mulb
adc
lds
xor
movsb
js
insl
push
push
mov
adc
sub
stc
jle
mov
rorb
fs
xor
jecxz
dec
ret
scas
cmp
das
clc
pop
hlt
sub
inc
adc
cmp
pop
sbb
adc
sti
ja
sar
add
arpl
xchg
adc
push
lods
inc
xchg
cmp
cmp
jecxz
lcall
int
sub
sbb
inc
xor
sub
jle
xchg
or
push
mov
mov
pop
inc
loope
out
std
daa
push
sub
les
mov
std
cmp
jg
or
jbe
ljmp
mov
aam
gs
aaa
sub
push
push
push
test
lcall
rolb
mov
pop
mov
lods
mov
lret
and
cs
and
xchg
pusha
pop
mov
dec
cld
add
mov
cmc
adc
sbb
adc
movsl
ss
pop
loop
adc
popa
fldl
fstps
dec
repz
push
push
hlt
xlat
inc
jb
cmc
jo
mov
sbb
push
aam
movsb
mov
sbb
fists
inc
and
ds
repnz
daa
leave
push
pop
xor
in
push
inc
sarb
in
and
adc
jbe
insl
push
arpl
decl
jae
repnz
jl
xchg
cmp
cli
popa
xlat
rorb
data16
mov
stos
jb
jg
lcall
pop
and
mov
cmp
das
mov
test
xor
mov
stc
pusha
push
ret
incl
cmp
das
lock
dec
fdivrs
lea
lea
bound
pop
clc
mov
mov
ja
ds
and
cmc
test
push
sbb
or
cmp
loopne
mov
ss
and
gs
jmp
cli
gs
sbb
ss
xor
jg
cmp
jns
inc
push
mov
ds
mov
adc
sar
decl
pop
cmp
xchg
sbb
addr16
push
jne
add
jg
cmp
lret
out
lds
inc
js
add
int3
xor
inc
inc
and
test
dec
mov
xchg
je
shll
mov
js
int3
pop
push
xor
je
insb
loopne
clc
mov
push
push
inc
ds
lret
xchg
push
and
dec
loop
push
mov
push
repz
ret
or
sbb
ja
sub
push
inc
jg
push
popa
pop
sbb
decl
xchg
mov
loope
xor
push
daa
xchg
xchg
sbb
xor
shlb
jge
ret
cmp
dec
xor
push
outsb
cld
sub
es
int
out
push
cmp
stc
arpl
mov
or
add
xor
push
out
scas
out
incl
jg
dec
insb
lds
aam
inc
fldenv
and
pushf
jae
push
mov
mov
decl
adc
push
sub
mov
in
scas
adc
loop
dec
jp
mov
mov
jb
cld
pushl
jg
pop
xor
test
and
mov
cmp
jbe
hlt
decl
cld
decb
mov
leave
mov
filds
aam
sti
data16
outsl
js
int
mov
cmp
push
add
cltd
pop
sub
imul
inc
xlat
add
enter
ljmp
cmp
mov
enter
sbbl
outsl
jg
ret
mov
push
loopne
dec
rclb
test
sahf
rcrb
or
mov
push
or
sub
xchg
add
call
sub
push
inc
adc
inc
sub
sub
vmovaps
cmc
xlat
subb
pop
lock
jp
cmc
jmp
cmc
pop
pop
arpl
dec
or
pop
sbb
mov
inc
ljmp
inc
xor
fwait
les
pop
xlat
push
test
icebp
jne
inc
bsf
inc
lret
in
lods
inc
sar
lcall
les
xor
iret
cmp
in
insl
out
cld
mov
scas
jbe
std
inc
xchg
xor
std
push
mov
sbb
push
repz
xlat
div
adc
adc
ljmp
test
imulb
xor
pop
sti
jae
mov
add
pop
jmp
cld
call
mov
jmp
push
test
inc
leave
test
mov
out
dec
das
xchg
fsubl
fdivl
push
stos
fs
iret
call
fldt
pushl
pop
lret
cli
sbb
mov
adcb
inc
jnp
stc
pushl
sub
xor
hlt
adc
lret
or
imul
pop
scas
jmp
xor
push
scas
inc
sub
popa
mov
inc
add
fnstcw
sub
push
mov
mov
cmp
or
jb
jp
xchg
jmp
and
mov
mov
mov
or
xor
xchg
sbb
pop
jbe
jecxz
jmp
pop
and
jbe
push
push
push
sti
aas
adc
sub
xor
cli
filds
cmp
xlat
and
pop
scas
lods
adc
fdivs
addr16
ljmp
lret
lret
aaa
add
scas
cmp
cmp
iret
push
adc
call
lahf
std
icebp
inc
iret
test
push
out
mov
lock
mov
adc
adc
cs
inc
cmp
mov
icebp
repz
adc
fcomip
adc
jb
mov
xchg
aad
mov
cld
clc
stc
cwtl
iret
sub
inc
sub
fcomip
decl
pop
mov
mov
out
xchg
sbb
sub
mov
mov
call
push
add
add
das
cmp
sub
mov
sub
xchg
lret
pushf
pop
lock
incl
push
jns
jb
push
iret
out
pop
inc
xchg
adc
insl
inc
js
sub
cmc
jnp
jmp
nop
cmpsb
sub
data16
mov
mov
mov
jp
scas
dec
or
mov
cmpsb
sbb
mov
sbb
lcall
push
sbb
pop
push
or
lcall
sub
pop
adc
pop
and
testb
xorb
mov
mov
push
sub
push
xchg
xchg
or
pop
cmp
stos
loop
sub
imul
xor
mov
push
lret
lahf
lret
mov
rcl
and
and
insb
jo
xor
mov
fbld
movsb
push
shlb
push
push
mov
inc
cmpsl
jmp
fstpt
push
mov
mov
cmp
mov
in
inc
movsb
dec
dec
push
pop
fnstcw
aas
aas
ret
dec
cwtl
fucomip
cld
adc
adc
cmpsb
inc
shll
jl
push
call
outsl
hlt
mov
mov
daa
outsb
xlat
dec
sub
aad
call
das
jmp
testl
or
ljmp
adc
sub
inc
pushf
ficoml
sahf
outsb
js
ljmp
clc
inc
jecxz
cwtl
inc
lock
shl
fcompl
mov
push
jmp
mov
xchg
adc
lcall
dec
xchg
push
jb
jo
fidivrs
cmp
mov
std
mov
sbb
iret
lcall
fxam
out
xchg
jnp
jle
lds
push
pusha
pop
and
mov
ret
out
jmp
arpl
incl
cs
loopne
insb
jecxz
cmpsl
aas
push
scas
sub
sbb
add
cmp
int3
scas
cld
scas
push
call
pop
adc
in
jnp
jmp
test
mov
insb
mov
adc
ja
ret
and
mov
ljmp
dec
push
jle
out
sbb
inc
cli
mov
xor
imul
loop
push
fwait
adc
jmp
test
dec
xor
lock
sub
sub
out
mov
jmp
mov
fsubs
mov
das
fs
pop
pop
test
nop
cmp
mov
adc
sarl
pop
cmc
and
jae
mov
jmp
aas
jl
adc
or
in
sarl
jecxz
in
add
adc
or
add
sbbl
aam
into
lret
cld
jae
scas
jecxz
and
pop
insl
inc
cmpsl
imul
cwtl
jb
push
push
or
push
push
lcall
jp
dec
add
bts
ret
imul
jne
dec
sub
dec
out
and
stc
mov
xchg
sub
mov
loopne
lcall
sbb
incl
and
pop
push
clc
sbb
xor
pop
xor
mov
xchg
cmp
dec
or
fistpl
sahf
cmc
in
mov
and
mov
enter
jge
aad
iret
ret
xchg
call
loopne
lods
adc
sub
xor
gs
stc
scas
scas
test
movsl
xor
div
xchg
and
in
addb
jg
fadd
sub
xchg
lods
cs
outsb
push
pop
rorl
pop
add
insb
dec
fwait
push
or
xchg
clc
jmp
push
sbb
pop
xchg
mov
cmp
xor
mov
aaa
stc
sbb
inc
stos
repz
push
das
shll
movsl
mov
push
jbe
dec
inc
add
mov
dec
loope
and
add
jo
mov
stos
orl
decl
mov
mov
and
pop
movsb
mov
add
pop
in
rcrl
adc
mov
andb
es
decl
mov
xor
icebp
sub
repz
pop
cmpl
sbb
mov
or
mov
or
dec
pop
mov
adc
jle
lcall
fwait
ror
jg
mov
cmp
inc
pusha
jmp
xor
fisttps
pushf
outsb
int
dec
inc
adc
adc
daa
mov
gs
daa
jecxz
add
sbb
jg
jmp
out
and
leave
ret
mov
pop
clc
das
inc
aam
cmpsl
aam
in
dec
xor
test
hlt
pop
jnp
and
cmc
adc
inc
shr
xlat
push
dec
pop
sar
scas
add
mov
or
pop
ret
ss
mov
std
das
or
fld
ljmp
or
push
push
popf
push
or
push
push
dec
hlt
dec
out
into
pop
or
mov
jnp
lcall
jno
xchg
fisubs
and
imul
ljmp
and
and
ja
fnstenv
icebp
or
jl
ljmp
aad
inc
xor
pop
jbe
test
decl
add
bound
sub
add
sub
jg
pop
add
mov
pop
aad
push
sub
jb
mov
or
push
fimull
jl
in
in
add
mov
jmp
jb
mov
pop
int3
fbstp
pushl
sbb
addb
and
or
pop
xchg
cmp
jle
add
enter
in
arpl
fldt
cli
out
dec
mov
push
stos
xor
push
cmp
add
lods
insl
pop
push
ret
incl
testl
xchg
inc
sub
outsl
popf
adc
in
and
add
pushl
xor
cltd
or
pop
repnz
cs
adc
cmpsl
stc
rcrl
ljmp
adc
movb
xor
ljmp
subb
out
cmp
fs
call
mov
xor
decl
jl
mov
xchg
outsl
sbb
or
push
push
pop
lcall
and
inc
sbb
aad
xlat
pop
fistps
mov
cli
and
std
ss
sti
mov
imul
ljmp
cs
or
nop
cmp
mov
and
or
call
ds
sbb
lods
das
mov
inc
pusha
xor
add
sub
fsubrs
loope
mov
fnstsw
pop
mov
xchg
push
xchg
dec
sbb
out
pop
jns
cs
jg
mov
mov
sbbl
aas
mov
mov
push
fadds
and
jl
dec
add
popaw
popf
push
xor
jns
pop
xor
or
fs
incl
shll
insb
fnstsw
negl
call
dec
push
add
pop
mov
inc
repnz
outsl
clc
decl
sbb
fildl
shrb
push
pop
push
imulb
mov
lods
sbb
out
outsl
xor
dec
pusha
ret
repnz
cmp
jmp
xor
int
fisttpl
xor
inc
cmpb
sub
je
and
lcall
xor
rcr
pop
es
imul
adc
sub
push
fisubrs
addb
mov
mov
xchg
fs
inc
movd
mov
push
mov
cwtl
mov
inc
loope
dec
mov
jge
call
in
addr16
sub
mov
arpl
movsl
pop
dec
mov
les
fistpl
and
lods
sbb
lock
js
mov
lods
push
sub
cmp
dec
adc
pop
inc
cmp
decl
jne
aaa
dec
mov
cs
and
loopne
or
xchg
add
mov
xchg
loopne
inc
enter
pop
mov
jb
adc
imul
sbb
cmp
pop
shl
hlt
lock
test
fdivrl
pop
pushf
mov
int
mov
sbb
cmp
ljmp
dec
pop
adc
push
das
pop
inc
cld
push
test
call
mov
sbb
and
inc
out
jae
inc
clc
mov
cmpsb
lret
push
or
movsb
aas
xorb
cmp
std
push
loopne
sub
inc
fwait
or
bound
cmpsb
xchg
cwtl
sbb
call
test
dec
mov
shll
rcrl
mov
or
cli
aad
adc
push
jmp
fwait
sub
pop
sbb
xor
pop
cmp
test
mov
decl
inc
ds
sub
cs
jno
ficoms
pushl
mov
add
sarb
das
cmp
mov
and
adc
insl
lock
xor
pushl
xor
cmp
add
aas
shrb
dec
cmp
popa
scas
jmp
adc
cli
int3
adcb
ljmp
pop
sub
pop
sti
loop
fdivrl
and
or
push
or
cli
inc
adc
inc
adc
push
inc
fcompl
sbb
jmp
sbb
test
push
subb
enter
je
add
pop
jmp
and
mov
or
push
push
sub
or
jg
hlt
sub
jg
xor
addr16
dec
ljmp
icebp
pop
xor
dec
shrb
sbb
and
inc
orl
repz
jmp
decb
mov
or
mov
xor
jne
mov
outsl
icebp
push
enter
jg
call
adc
push
ret
push
mov
data16
arpl
out
inc
movsl
inc
adc
ds
xor
jge
or
mov
xor
sub
stc
incl
cmp
jnp
das
xchg
repnz
pushl
mov
xor
pop
and
xchg
jge
cld
mov
mov
adc
and
add
pop
xorl
adc
mov
rcrb
mov
stc
enter
loop
ficoms
mov
push
sub
ds
xor
cmp
push
dec
call
adc
sub
daa
xor
push
cmp
ljmp
xor
or
cmp
mov
adc
push
shlb
mov
dec
sbb
xchg
inc
pop
clc
mov
fadd
mov
jl
push
std
in
ret
adc
and
pushl
cld
hlt
cmpl
and
jp
aam
inc
mov
call
cmp
adc
mov
js
popa
pop
adc
arpl
test
jle
ret
mov
cmp
jg
decl
lods
jecxz
in
pop
inc
scas
jle
xchg
sub
shll
lret
ljmp
icebp
xlat
test
incl
cmpsl
out
xlat
xchg
or
mov
mov
scas
cmp
and
push
mov
leave
movsb
rcr
push
dec
mov
popa
cmp
decl
dec
pop
mov
in
aaa
adc
jp
push
test
and
and
inc
xchg
jno
push
sub
in
fdivr
jmp
fxch
mov
fimuls
leave
inc
mov
clc
push
mov
fildll
sarb
in
mov
mov
int
jmp
subl
jmp
jecxz
sbb
mov
pusha
fucomip
sub
pusha
mov
sar
push
test
enter
add
ficoms
mov
cmpsb
in
mov
sbb
push
mov
xchg
jne
jo
and
push
sub
adc
dec
insl
aam
imul
or
inc
xchg
jne
ljmp
sub
gs
pop
mov
pushf
lods
lcall
jecxz
jg
jnp
je
call
dec
idiv
loopne
adcl
movsl
cs
movsb
mov
fcmovu
inc
in
push
add
add
testl
mov
inc
pushf
pop
adc
pop
ret
xor
sbb
xchg
arpl
mov
lods
in
xchg
xchg
adc
push
fwait
sbb
or
push
movsl
lcall
into
jo
inc
pop
jp
jns
fwait
push
popa
jb
call
neg
xchg
dec
xor
jecxz
or
bound
mov
xchg
mov
lods
pop
mulb
push
or
push
jae
movsb
adc
rorl
xchg
cmp
repz
std
les
popa
int
sbb
adc
cld
mov
scas
cld
sub
push
sub
lcall
out
vmovsldup
mov
nop
das
les
rolb
divl
sub
push
imul
scas
push
sbb
cmp
inc
xchg
cli
scas
aaa
pop
dec
push
push
decb
and
scas
dec
imul
xlat
decl
sti
int3
cmp
insb
es
pop
sti
xchg
mov
jecxz
call
push
adc
and
sbb
cmp
jmp
lcall
pop
pop
in
pushf
cli
es
fs
mov
enter
xchg
into
mov
xor
ljmp
jmp
mov
daa
ss
mov
pop
call
pushl
push
mov
rol
and
fcomps
dec
sbb
or
lcall
pop
jb
and
imul
and
mov
pop
or
test
cmpsb
inc
out
sbb
sbbb
mov
pop
fimuls
adc
int3
ss
jp
or
int
xchg
inc
inc
inc
imull
push
jmp
mov
idiv
test
jb
aad
std
jmp
xor
dec
cwtl
pop
mov
loop
pop
sbb
or
sub
pop
aas
mov
push
call
xlat
cmpsl
pop
dec
icebp
xor
sbb
mov
add
and
sar
ljmp
std
xor
lret
maskmovq
mull
repz
ss
in
je
iret
and
or
cmp
sub
call
pusha
aad
aam
sbb
adc
jecxz
fistpll
pushl
and
xchg
leave
out
je
xchg
add
shrl
or
mov
fistpl
or
jg
add
sbb
rcl
mov
xlat
push
jle
loope
decl
or
push
popa
push
leave
mov
dec
or
dec
stc
mov
push
or
inc
adc
mov
mov
and
addr16
mov
or
cmc
int3
adc
jecxz
in
mov
dec
xchg
push
jp
jge
adc
test
mov
mov
imul
xor
aas
or
decl
and
ja
test
pop
adc
ljmp
cmp
lods
push
lret
rcll
imul
pop
iret
cltd
aaa
std
pushl
imul
xor
dec
sbb
lret
push
cmp
pop
imul
sahf
ss
testb
push
fisubl
dec
or
rorl
loope
jmp
scas
pop
movsb
inc
pop
imul
sub
push
adc
fwait
cmp
mov
xchg
out
sub
bound
out
jno
add
out
out
add
testl
movsb
dec
das
movsb
jecxz
testl
mov
inc
in
jae
out
jp
lahf
bound
mov
pop
in
stos
hlt
jnp
xchg
addr16
js
test
dec
in
shll
out
pop
and
dec
clc
aaa
and
aaa
jnp,pt
push
push
sbb
mov
sbb
adc
cmp
mov
jg
ds
jmp
push
out
je
pushf
nop
mov
mov
cwtl
shrb
mov
rol
cmp
sti
mul
mov
jmp
into
insb
popl
push
jg
cmp
or
imul
cmpsl
lods
dec
xor
shrb
push
or
or
data16
sar
jbe
mov
aas
sahf
popf
loopne
insb
clc
adc
jbe
ja
sbbb
jmp
sbb
outsb
sbb
aam
inc
sub
jns
xchg
jmp
xchg
inc
les
xor
ret
pushf
jecxz
xchg
push
jmp
cmp
jae
leave
lods
leave
test
lcall
cmpsb
cmp
enter
ljmp
jne
add
cmpsb
push
lcall
mov
jl
cmpsl
or
mov
inc
rcl
out
pop
testl
bound
fcoms
adc
xchg
lods
ljmp
push
push
push
mov
mov
sub
push
enter
loop
jmp
cld
mov
call
add
aad
cmpsl
data16
inc
sub
pop
dec
push
adc
inc
push
lcall
lods
mov
mov
mov
mov
or
into
xor
or
xlat
mov
adc
incl
and
pop
add
dec
push
shl
out
cmp
ljmp
rcrb
hlt
hlt
cmp
test
push
or
adcl
ljmp
outsl
push
or
ss
enter
inc
scas
mov
xor
xlat
sbb
sub
stc
mov
movsl
imulb
jge
stc
and
add
out
adc
sbb
xor
scas
dec
push
mov
cmp
adc
and
popa
sbb
sarl
push
xor
sbb
cmp
aam
pop
jge
xchg
shl
insb
call
std
rorb
iret
outsb
adc
shll
adc
cmp
scas
pusha
les
pop
lock
lock
xorl
adc
mov
mov
loopne
add
jno
decl
cmp
cmp
ret
leave
adc
mov
mov
mov
inc
mov
inc
lcall
dec
push
xor
cmp
or
and
pusha
xchg
mov
cmp
sbb
loop
push
test
or
adc
sbb
xor
mov
push
pop
mov
gs
cmp
mov
and
lds
roll
and
inc
adc
fwait
pop
cltd
xor
fs
pop
cmp
inc
test
filds
scas
push
adc
gs
cmpsb
dec
call
inc
mov
cli
dec
cmp
inc
ret
push
xor
lock
call
mov
jbe
test
fisubl
out
push
mov
clc
sbb
jle
push
loopne
pop
test
jbe
adc
mov
cli
clc
mov
adc
jno
mov
lahf
hlt
xchg
dec
mov
dec
push
in
push
out
mov
cli
cmpsb
push
or
xorl
mov
movsb
cmp
scas
out
inc
aam
fwait
cmp
loope
push
pushl
mov
inc
loope
mov
cmp
and
sbb
and
jmp
lcall
fwait
stos
xor
jg
aas
aaa
enter
or
xchg
inc
ds
movsb
xor
fidivrl
outsb
sti
ret
mov
test
sbb
mov
movsl
xchg
fdivs
xor
cmp
xor
sbb
pop
inc
cli
roll
dec
sub
sub
or
sbb
dec
bound
mov
xchg
test
adc
jmp
je
in
int3
lods
or
sbb
enter
mov
xor
mov
lds
jmp
popf
lods
inc
dec
insl
data16
and
ds
pushl
pop
popa
pop
adc
dec
mov
cmp
inc
add
lcall
xchg
in
or
repz
dec
and
fprem
pushl
jno
movb
sbb
xchg
sti
bsr
std
inc
inc
push
jl
popa
adc
mov
xor
sar
incl
movsl
std
pop
xchg
push
adc
adc
call
or
xor
imul
ljmp
adc
addr16
sti
xor
ss
insl
mov
movsl
adc
jle
inc
mov
jg
pop
inc
pushf
mov
shlb
lret
xor
and
cmpb
jmp
sbb
add
test
mov
pop
inc
adc
imul
sbb
mov
dec
mov
sub
dec
cmp
dec
adcb
outsl
in
mov
mov
mov
push
mov
fdivl
mov
mov
ljmp
mov
fs
mov
insl
xor
arpl
jg
out
enter
or
mov
push
sar
jp
jmp
cli
ljmp
out
jmp
cli
pop
jecxz
pop
dec
push
lahf
lods
mov
adc
out
clc
adc
inc
inc
inc
dec
xchg
jns
ret
adc
jo
lret
jmp
call
push
mov
xchg
out
test
cld
in
xor
or
movsl
movsl
mov
cmp
ret
inc
mov
sub
or
or
sarb
cli
movsb
loop
sub
fs
pop
xor
lcall
sbb
ljmp
arpl
and
push
pop
aad
xorb
idiv
push
adc
mov
fisttpll
int
mov
in
rolb
pop
adc
loopne
ret
pushl
aam
mov
push
sub
adc
ss
stos
lcall
jg
add
jne
stos
sbb
inc
nop
xor
adcb
lods
outsl
cli
fisttps
sahf
lods
leave
ljmp
adc
adc
std
incl
cmp
inc
arpl
mov
sub
and
or
rolb
xor
sub
ljmp
int3
adc
jbe
fcomi
inc
ljmp
les
inc
sbb
pushl
cmp
cmpsl
jl
fstl
ja
mov
jl
leave
pushf
push
clc
push
jg
cwtl
bound
adc
insl
inc
dec
scas
jbe
je
call
sti
call
adc
jns
lret
test
insb
cwtl
pushl
adc
das
or
and
sbb
shll
inc
out
shlb
add
cs
jmp
scas
push
mov
cmp
fldcw
scas
fdivr
pop
cmc
out
xor
jl
xor
mov
mov
jmp
daa
cmpsb
sbb
cmp
pop
dec
movsl
mov
jg
cli
jle
mov
inc
mov
stos
cs
pop
aas
push
mov
jae
das
jo
inc
inc
dec
shlb
ljmp
decl
push
sub
cmp
es
jno
loopne
or
call
cltd
jge
stos
sub
push
or
hlt
or
lahf
mov
insb
xchg
dec
out
clc
push
xor
mov
xchg
fnstsw
dec
mov
xchg
mov
mov
xor
sub
iret
icebp
mov
sbb
and
add
pusha
add
cmp
out
clts
sbb
divb
and
call
cld
incl
mov
fstpl
cli
jp
mov
call
mov
jp
push
cli
push
lcall
mov
dec
in
jno
pop
aad
xor
add
dec
aam
dec
lcall
push
inc
mov
mov
jmp
xchg
mov
inc
or
mov
jmp
dec
je
testb
scas
ss
inc
ror
mov
ss
call
loope
push
xchg
xchg
aas
pop
arpl
lods
jp
std
add
fisubrs
jmp
sub
movsl
add
sbb
inc
pop
jecxz
arpl
sub
or
out
stc
mov
jg
pushl
sub
dec
or
mov
std
out
xchg
fs
add
paddd
fistps
mov
xchg
xchg
sbb
jmp
jo
test
or
cmp
inc
or
inc
fimuls
pop
jo
lea
jnp
gs
ss
mov
aam
ljmp
fwait
pop
cmp
enterw
mov
cmp
xchg
movsb
add
pop
leave
xor
in
inc
push
inc
clc
jge
mov
ds
jge
mov
prefetchw
gs
decl
loope
int
fs
cld
sbb
popl
lcall
enter
jnp
add
in
outsl
cld
insl
outsb
lahf
jp
arpl
jno
xchg
testl
pop
cmpsb
mov
incl
cwtl
decl
cmc
or
mov
movsl
sub
cmpsl
js
jno
sahf
mov
ret
jns
pop
pop
cld
push
cmp
jmp
inc
pop
mov
fs
mov
int
dec
andb
hlt
jmp
or
sbb
or
mov
and
or
jmp
leave
out
or
popf
jb,pt
inc
mov
orl
in
cs
push
inc
or
pop
push
cmp
clc
incl
adc
test
mov
xlat
cs
lret
pop
inc
dec
ret
decl
sahf
test
jbe
mull
sbb
scas
pop
fsubrs
mov
test
decl
inc
sbb
cmpsl
imul
sub
das
xor
push
cld
lcall
dec
dec
cmpsb
xor
mov
and
bound
inc
imul
mov
push
scas
fsubs
or
sti
mov
clc
sbb
xchg
xor
lds
fld
fcmovne
arpl
outsl
ret
int
outsb
arpl
sarl
mov
pushl
mov
insb
push
in
pop
js
dec
in
ss
aam
pop
mov
xor
jbe
stos
mov
add
inc
inc
or
jge
or
into
push
pop
mov
jle
inc
pushl
jmp
or
outsb
mov
pop
inc
jmp
lods
bound
in
sti
pop
into
inc
into
hlt
lcall
and
push
sbb
cmp
add
add
adc
jmp
mov
mov
dec
lret
out
pop
out
cmc
es
adc
arpl
std
ja
lcall
fs
pop
shl
mov
clc
pop
mov
or
jmp
fldcw
push
push
jns
lods
ret
adc
addr16
sbb
addl
je
fidivrs
scas
or
incl
dec
andps
pop
push
arpl
xchg
dec
inc
jp
ret
jae
push
lea
mov
int
pop
cmp
or
sahf
xchg
std
sub
loopne
cmp
mov
mov
add
aas
mov
push
out
add
es
add
mov
or
roll
filds
stc
jg
xchg
lcall
insl
dec
jg
jo
shr
ljmp
fistpll
pop
mov
das
and
xorl
cmp
into
dec
push
insb
dec
out
xchg
call
mul
bound
sbb
incl
in
pop
inc
daa
mov
into
dec
push
aad
inc
enter
xchg
push
sbb
pusha
in
sbb
cmp
fstp
cmp
loope
pushl
rorl
push
stos
dec
push
xlat
push
sub
ljmp
or
push
sbb
bound
clc
mov
fs
add
fisttpll
negb
mov
push
mov
mov
inc
sbb
push
push
or
stc
cmpsl
cs
incl
jnp
jns
ret
dec
push
addb
jle
cmp
xor
js
push
loope
ljmp
filds
sahf
sbb
adc
aad
outsb
outsb
xchg
dec
test
cs
push
rcrl
call
mov
mov
movsl
fs
das
pop
insl
pop
jb
and
mov
jnp
mov
gs
scas
adc
dec
pop
pmulhuw
push
pop
int
adc
scas
xchg
adc
out
decl
stc
lret
xchg
aaa
out
lret
js
stos
mov
sub
js
mov
call
push
add
sub
push
repnz
mov
fstl
js
std
call
loope
shlb
mov
fs
dec
fcomip
mov
push
out
pop
sub
pop
mov
add
fs
xor
or
aas
lahf
dec
mov
xor
addl
loope
sbb
inc
and
mov
sub
mov
jne
call
aaa
or
mov
mov
mov
out
into
enter
xchg
or
mov
pop
mov
xchg
adc
push
pop
jge
dec
mov
xchg
xor
aad
xlat
cmp
stc
pop
push
mov
push
push
aas
scas
lock
inc
vpcomd
mov
mov
add
sub
lcall
fxtract
js
in
sbb
sbb
xor
pop
je
mov
jg
ljmp
xor
sub
in
lds
mov
mov
or
xchg
mov
call
into
in
mov
jmp
testl
and
test
popf
xor
ljmp
xchg
sar
daa
add
stos
call
scas
aam
fsubrp
pop
add
sti
sub
es
lods
sti
leave
std
mov
lods
pop
rorl
pushl
int3
cmpsl
jmp
mov
xchg
sub
or
movsb
aad
inc
repnz
xchg
add
mov
cld
lss
pop
lds
lret
xor
push
pushl
dec
mov
jecxz
ljmp
cmp
pop
xchg
push
movsb
incl
les
in
int3
mov
sbb
hlt
adcl
jmp
adc
cli
insb
xor
or
or
xchg
pop
sub
in
push
inc
fmull
inc
clc
jns
xor
cmpsb
mov
xchg
cmp
jecxz
jbe
jb
outsl
push
add
fs
xor
mov
mov
adc
add
and
scas
pop
sub
loope
add
jg
pushl
insl
imul
mov
xor
adc
in
push
pushl
inc
add
add
stos
es
pop
negb
out
pusha
sahf
sarb
add
mov
mov
std
inc
std
or
mov
push
jl
mov
mov
cmp
in
adc
scas
outsl
and
xor
xchg
js
push
jne
cmp
mov
mov
loop
das
cmp
fisttpll
adc
mov
je
std
fnsave
scas
clc
inc
cmp
je
loop
in
hlt
and
mov
aam
xor
sbb
fdivl
xor
mov
stc
adc
jo
sbb
pop
shrl
mov
ds
dec
pop
cltd
jbe
xor
pusha
dec
pop
jp
ret
mov
cmpsb
cmp
jmp
xchg
nop
cltd
stc
divl
mov
stc
sbb
pop
insl
test
push
jmp
pushl
xor
loop
ljmp
fs
bound
dec
ljmp
aad
cmpsl
add
fsubr
cltd
jmp
les
ret
sahf
sbb
fwait
popa
fmuls
insl
addr16
push
call
aad
inc
push
mov
test
dec
cs
movsb
fsubrl
icebp
fldcw
les
clc
fildl
jno
aas
imul
dec
push
jmp
ljmp
mov
js
outsb
add
pop
dec
loop
cmpsb
jmp
scas
mov
loop
pop
cmp
mov
ret
cmpsl
or
dec
decl
dec
adc
add
mov
jecxz
mov
pop
pop
ja
cs
decl
into
and
xchg
pusha
imul
add
cmc
aad
jne
push
icebp
pushl
out
add
lock
fcomp
in
mov
cli
cmp
cli
fcomip
loopne
cs
jno
adc
add
push
call
inc
mov
test
cmpsl
call
outsl
ljmp
push
ss
add
incl
cld
dec
jb
mov
std
aaa
sbb
cs
lods
mov
cmpsl
ds
ljmp
mov
mov
stos
adc
rcl
or
xchg
test
dec
and
das
mov
add
inc
add
push
adcb
jg
cmp
aas
jge
scas
pop
pop
xchg
dec
cwtl
jne
add
scas
loop
pop
xchg
nop
jle
jle
xor
aaa
and
sahf
in
imul
mov
inc
out
imul
into
cmp
imul
add
push
add
push
mov
or
cmpb
cld
jmp
mov
pusha
jge
mov
imul
lret
stc
add
mov
fiadds
out
push
mov
mov
mov
sbb
incl
xchg
mov
pushl
out
int3
pop
add
fstps
pop
inc
push
lcall
shll
inc
divb
fdivr
jmp
pop
jmp
add
cmp
add
imul
aaa
rolb
into
jl
adc
lahf
dec
mov
mov
out
orb
push
scas
addb
lock
stc
mov
out
decl
lock
xor
arpl
push
mov
test
add
and
out
cwtl
test
lea
mov
pop
cmpsl
bound
loope
je
lcall
movsl
mov
jl
mov
add
in
pop
jmp
mov
sbb
pop
xlat
call
ja
jae
mov
jl
inc
sar
dec
mov
data16
fildl
sbb
movsb
test
cmpsl
xor
dec
ss
mov
pushf
enter
gs
das
push
jbe
jns
dec
fmull
jmp
scas
clc
adc
jp
pop
repnz
mov
fdivl
sbb
bound
sti
cmp
mov
sbb
add
sbb
fdivrs
mov
outsb
mov
push
push
negb
jg
roll
xor
mov
mov
call
arpl
out
rcll
insl
int
and
scas
add
jge
scas
fidivrs
xchg
sar
in
ficompl
mov
adc
inc
popa
adc
out
clc
pushl
lods
pop
lcall
dec
inc
inc
test
stc
lods
ud1
decl
out
les
jmp
lea
jmp
addl
js
lahf
adc
pop
push
jecxz
jne
add
ret
inc
fsubl
mov
mov
jmp
jo
xchg
pop
add
mov
mov
add
jp
daa
mov
push
mov
mov
or
push
xor
xor
mov
call
loop
sub
jge
addb
test
lock
inc
popl
repz
repnz
or
sub
je
and
shll
add
incl
arpl
add
rclb
sbb
fs
jmp
fbstp
jo
aam
mov
fadds
xchg
pop
cmp
test
cwtl
call
sbb
and
int3
loope
iret
lea
test
fsub
dec
stos
mov
call
add
fldt
aad
bound
je
notl
lcall
cmp
jnp
ljmp
shrl
add
dec
popf
and
pop
lods
hlt
dec
pop
push
push
adc
mov
add
dec
adc
ds
jg
pushl
jl
cltd
push
inc
cmp
pusha
mov
notb
les
daa
adc
loope
insl
test
inc
dec
xor
fs
in
out
dec
and
movsl
das
push
icebp
mov
call
cli
lods
xor
ds
sub
or
add
dec
mov
std
andl
loope
int
or
cmpsl
push
dec
mov
mov
sbb
ljmp
cmpsb
insl
insl
dec
xor
enter
xlat
mov
pop
leave
pop
outsl
fistpl
aaa
add
mov
jnp
shrl
fs
pop
incl
out
out
std
fwait
xor
push
and
inc
in
cltd
mov
jecxz
incl
dec
xlat
fmuls
addr16
notl
inc
mov
mov
les
clc
ljmp
xor
shl
rorb
scas
pusha
aad
rcrl
sahf
pop
or
aas
xchg
add
jecxz
jmp
test
mov
sbb
xchg
out
enter
iret
call
cld
pop
insb
repz
add
mov
inc
jmp
pop
adc
outsb
mov
cli
adc
das
push
fistps
mov
mov
cmp
adc
test
cmp
fnstsw
incl
faddl
jg
add
lret
jmp
test
fisubrl
arpl
dec
outsl
imul
pop
dec
xchg
mov
dec
fsubs
ficoml
pop
pop
subb
lahf
dec
cmp
mov
inc
movsb
mov
or
ss
inc
into
aaa
fldpi
fisubs
dec
pushl
mov
movsl
out
and
faddl
push
pop
mov
xor
adc
lret
push
je
frstor
adc
gs
pop
insb
fnstenv
enter
xor
test
ja
call
or
decl
jbe
sbb
and
pop
cmpb
aam
popf
xchg
cmp
fwait
jns
mov
pusha
ffreep
adc
test
pop
mov
mov
push
inc
sbb
rorb
lods
cwtl
push
and
scas
inc
sbb
ljmp
push
xor
mov
xor
dec
push
stos
jle
mov
inc
inc
adc
jmp
inc
outsb
mov
mov
xchg
fwait
pop
dec
xchg
rorb
pop
and
add
add
gs
sub
pop
jp
frndint
lds
mov
jae
cmp
dec
dec
rcrl
insl
jp
test
ljmp
jl
in
loope
adc
dec
daa
int
lock
xor
fcmovnb
jmp
arpl
xchg
lock
inc
xchg
loope
pusha
mov
mov
mov
pop
and
incl
jecxz
cmp
xor
jno
pop
mov
jl
gs
nop
xor
rorb
jbe
mov
int3
pop
clc
jmp
pusha
arpl
push
in
cltd
jo
or
adc
mov
incl
jns
fdivrs
imul
outsl
arpl
mov
xchg
jnp
jae
pushf
js
test
mov
insb
xchg
rcrl
incl
int3
mov
jmp
fidivl
rclb
stos
adc
mov
dec
and
dec
jno
loopne
std
adc
mov
jnp
sub
xor
clc
xor
sub
push
jl
fiadds
dec
sub
adc
add
and
jg
pop
addr16
fimull
stos
lcall
pop
mov
mov
xchg
jp
jmp
lret
or
inc
call
mov
aaa
add
cwtl
inc
pop
int3
inc
sti
inc
or
in
cmpsl
std
pop
scas
insl
mov
pop
in
test
mov
mov
cmp
dec
rorl
push
xchg
sbb
adc
ret
lcall
popf
xchg
orb
lahf
and
mov
pop
aad
imul
sub
mov
inc
push
std
push
and
mov
or
decl
repnz
or
fsubr
movsl
fistl
inc
pushf
add
pop
and
cli
ja
stc
daa
loop
je
lahf
mov
loopne
jg
insl
nop
jmp
push
mov
cmpsl
cmc
cld
adc
hlt
mov
or
aaa
std
jl
iret
loope
push
add
int3
inc
emms
push
jmp
mov
sub
push
ljmp
pop
jnp
mov
mov
adc
outsb
mov
dec
mov
xor
mov
push
pop
pop
pushf
aas
inc
pop
sbb
decl
and
dec
push
and
push
jg
xchg
add
fildl
sti
enter
call
leave
xor
mov
arpl
fidivs
ret
ljmp
jmp
jge
mov
jnp
lds
int
and
lds
jge
mov
lcall
and
rcl
push
pop
cld
and
mov
jne
int
xor
add
jp
repnz
pop
xor
xchg
jmp
movsl
mov
fsubrs
or
ljmp
incb
mov
jmp
adc
sbb
mov
ljmp
pushl
ret
cli
imul
sub
imulb
cs
mov
addr16
insb
imul
jmp
stos
dec
push
fidivrs
xor
mov
inc
ss
pop
std
sub
dec
stos
hlt
jp
mov
jle
push
jg
or
cwtl
insl
pushl
cmp
loopne
mov
mov
push
push
pushl
jle
ret
push
sub
dec
jne
cli
xor
ljmp
stos
fwait
loopne
sbb
fstpt
pop
fnsave
jecxz
insb
sbb
adc
sbb
nop
push
sti
dec
repnz
cli
xchg
mov
sub
mov
push
punpckhwd
push
shll
jnp
pop
pop
movsb
popf
movups
std
lcall
push
lods
repz
and
push
fyl2x
push
cmp
dec
pop
das
jge
push
adc
cmp
xor
decl
sub
dec
dec
popa
ret
mov
ret
mov
pushl
clc
popf
fistl
inc
mov
pop
lock
push
add
sub
in
movsb
sbb
decl
mov
cmc
outsb
pusha
int3
xor
dec
xor
movsl
add
dec
mov
popf
test
fisttpl
fcoml
xchg
incl
arpl
cs
mov
loopne
mov
aas
xor
lds
mov
xchg
call
mov
clc
fnstenv
bound
roll
repz
adc
inc
out
xchg
push
mov
push
mov
or
mov
cmp
inc
mov
lahf
out
dec
mov
cld
ljmp
fs
and
test
fsubs
leave
or
and
in
add
add
lcall
cmp
in
jg
xor
cmp
mov
mov
and
js
in
aam
cmpsb
adcb
lods
add
add
push
je
lret
movsl
adc
imul
mov
push
push
out
jns
mov
and
aaa
aam
incl
sbb
aam
das
pop
fisubrl
jge
pop
pop
mov
add
cmp
push
mov
mov
jae
add
lret
pop
mov
add
pop
lcall
pop
mov
xchg
arpl
rclb
cmc
mov
mov
lret
lret
adc
mov
cmp
cs
psraw
enter
mov
sbb
ljmp
shlb
imul
mov
mov
fwait
add
test
or
jb
mov
es
mov
lods
xlat
sub
div
shlb
sub
mov
or
inc
popf
jb
push
cwtl
data16
decl
fnsave
div
lahf
js
int
mov
xchg
mov
xor
add
les
repz
call
sub
mov
movsw
jbe
ret
jmp
fs
std
call
lcall
mov
std
xor
xor
test
push
lcall
jae
std
incl
arpl
int3
pop
or
jle
arpl
inc
cld
xlat
ja
push
hlt
dec
inc
cltd
pushf
ret
decl
orb
push
push
cmpsl
pop
clc
adc
rcll
out
sarl
jg
dec
jb
aad
psrld
ror
fwait
jmp
iret
inc
sub
stc
jnp
mov
decl
mov
sbb
mov
cmc
sbb
and
out
cmp
push
pop
jnp
fstps
ret
inc
fsubs
pop
cmp
out
or
movsl
inc
outsl
add
cmp
pop
roll
cmp
cli
or
cmpsl
js
and
mov
std
scas
pop
pushl
xchg
fs
jge
pop
pop
xchg
lcall
mov
inc
cld
cmpsl
rcrb
rclb
lcall
inc
shr
jae
pop
xor
scas
repnz
fnsave
nop
push
popf
cli
arpl
std
adcl
or
mov
aaa
paddd
dec
add
sbb
mov
jecxz
mov
test
push
dec
cli
jbe
push
int3
jmp
fnsave
inc
fildl
sub
cld
pushl
push
adc
jp
int
or
push
cli
lock
sub
pop
hlt
ja
mov
xor
xor
xor
js
iret
xchg
pop
mov
cmp
xor
js
ljmp
std
jbe
mull
mov
mov
out
scas
jl
dec
scas
popf
rcrb
dec
add
inc
cmp
push
sbb
sarl
test
in
jo
ds
fistpll
jb
mov
dec
stc
test
es
or
pushl
repnz
call
pop
imul
sub
cmpsb
mov
scas
mov
pushl
loope
ljmp
test
call
cli
shll
xor
shr
pop
jb
int3
scas
insl
gs
or
add
or
aad
xchg
sub
mov
mov
xor
mov
test
lret
bound
arpl
fadds
cmp
cli
in
std
jl
and
add
jg
inc
arpl
add
and
cmp
dec
mov
mov
inc
cld
lcall
sti
sub
out
rcll
ljmp
movsb
mov
dec
cld
lcall
mov
daa
push
sub
inc
xor
incl
stc
xchg
fimuls
cmp
xor
rcrb
notl
lds
jp
mov
lea
arpl
jno
adc
xor
lea
xchg
lods
addb
scas
nop
sbb
pushl
out
fwait
pop
cmpsl
mov
xchg
dec
cmp
les
add
pushf
in
push
iret
inc
xor
mov
ret
jle
lcall
into
adc
call
cltd
sahf
or
mov
popa
fiaddl
notb
xchg
test
push
xlat
aam
xchg
int3
jne
js
jmp
test
cmpsb
call
push
mov
xor
mov
sbb
sahf
jl
loop
inc
cltd
jp
sbb
cmpsb
push
sbb
dec
loopne
loope
insb
push
insl
pop
or
ja
add
jmp
mov
adc
xchg
ljmp
pop
daa
clc
sbb
popa
and
ss
pushl
insb
mov
arpl
fiadds
mov
cltd
leave
xor
fcoms
bound
mov
lcall
scas
ret
jp
inc
cltd
jg
call
and
mov
mov
jle
mov
pop
mov
xchg
xor
add
les
sub
pushl
xchg
bound
xchg
sbb
jns
add
xchg
sbb
std
stos
lods
mov
push
call
cmc
sub
pop
divb
std
push
pop
scas
insb
push
imul
adc
aaa
cld
mov
sub
aas
repz
jp
aam
ret
cmpb
aaa
jl
incl
pusha
cmp
pop
movsb
mov
xor
pop
xchg
mov
call
leave
fsubrp
outsl
ds
jae
mov
push
fnstcw
push
test
cmc
xor
fdivrp
jmp
mov
fidivl
hlt
popf
outsb
fidivrs
scas
in
pop
adc
in
push
insl
leave
xorl
lcall
pop
iret
stos
xor
adc
insb
movsb
dec
push
loopne
and
mov
jbe
lods
scas
cli
pushl
sbb
xor
gs
push
dec
jge
sub
mov
sar
push
std
stos
push
aaa
gs
adc
xchg
nop
lods
mov
out
in
xchg
add
inc
mov
mov
outsl
insb
je
sub
jg
incl
inc
pop
bnd
cltd
xchg
repz
fs
sub
mov
mov
dec
mov
mov
cld
lds
test
jns
lret
scas
cli
int
push
jmp
jbe
daa
cli
shlb
loop
mov
dec
mov
cli
jp
dec
div
nop
inc
xchg
mov
divb
movl
sbb
mov
ret
mov
dec
test
ficoms
jp
pop
mov
add
jge
jle
xchg
in
das
ret
adc
sub
scas
mov
fsts
lods
fldl
pushf
xor
ljmp
test
stos
cmpsl
mov
int3
mov
push
fstpt
add
movsl
stos
loop
out
xchg
addl
call
push
push
popf
data16
repnz
or
mov
aas
sti
push
sub
push
jmp
jg
fidivs
ds
adc
out
xor
lret
cmpsb
sub
dec
mov
lods
cmp
xchg
in
mov
aam
mov
out
lock
pop
mov
xor
mov
in
pop
pop
hlt
xor
xchg
cmp
loopne
jp
test
lcall
or
and
push
outsl
xchg
mov
push
cmc
lcall
rclb
nop
sarb
and
cltd
mov
dec
enter
mov
pop
movsb
sarl
jl
pushl
and
inc
jge
pop
push
lods
lret
sbb
popa
int
push
add
mov
pop
and
ljmp
call
sti
cltd
stos
sbb
jg
ljmp
inc
push
stc
dec
xchg
jecxz
andb
clc
daa
jb
test
shrl
add
fcmovb
aam
sbb
ret
mov
add
dec
movsb
jg
cmpsb
popa
not
aaa
or
shll
mov
mov
decl
inc
ljmp
and
pop
cmp
out
test
mov
mov
push
mov
sub
mov
addr16
incl
lcall
jl
pop
scas
aad
jno
in
mov
and
or
clc
incl
andl
mov
adc
jne
jmp
sbb
add
in
jnp
mov
enter
xor
call
clc
orl
add
test
or
loop
add
push
fsubs
ljmp
pop
sti
inc
push
pushf
push
xchg
test
jl
dec
jo
psubw
les
xlat
popf
mov
pop
sbb
push
mov
sbb
pop
mov
pushf
shll
pop
movsb
call
jecxz
sbb
xor
jg
outsl
addb
push
xor
push
lock
add
stos
dec
sbb
leave
mov
out
inc
jns
inc
mov
jmp
idiv
lcall
pop
add
data16
xchg
loop
mov
jl
hlt
jb
js
stos
and
adc
add
mov
nop
in
adc
push
add
add
add
jmp
testl
add
add
sub
into
dec
cmp
clc
lmsw
add
xor
decl
insl
enter
mov
sti
popa
ret
push
mov
and
sbb
incl
jg
mov
addr16
bound
scas
mov
jb
arpl
mull
inc
dec
mov
repnz
sarb
dec
adc
push
dec
cmpsb
and
pushl
test
jo
inc
or
push
mov
stos
call
cmp
sbb
aam
ljmp
and
inc
xor
mov
idivb
push
mov
inc
add
jnp
push
enter
lock
jle
leave
inc
es
cli
dec
push
les
push
mov
neg
fldcw
clc
pushl
adc
pop
mov
fcomps
jp
mov
not
loope
scas
push
lock
push
shrl
outsl
repz
sti
test
fldl
mov
scas
push
pop
sbb
mull
std
lds
lods
sub
pop
decl
nop
adc
xor
popf
pushf
xchg
or
mov
mov
mov
ljmp
lret
push
ljmp
cli
test
dec
mov
cs
rorb
push
add
jg
sub
stos
cmp
popf
mov
ret
lods
mov
add
test
es
mov
add
xchg
into
fwait
cmc
loopne
cmp
cmpsb
in
addr16
incl
mov
fs
out
push
adc
movsl
mov
mov
call
arpl
xchg
cld
sbb
cmp
mov
insb
sub
orb
lods
fwait
ret
fldt
ljmp
lods
mov
inc
sbb
aas
shr
dec
xchg
dec
mov
pushl
xchg
mov
mov
jecxz
ret
lcall
pusha
fwait
jmp
mov
mov
cmp
jmp
mov
lcall
xchg
gs
dec
bound
arpl
push
adc
hlt
mov
out
stos
ljmp
pushf
pminsw
std
sub
ss
jns
mov
dec
pop
cld
incl
daa
push
adc
test
push
pop
lahf
xor
xor
clc
and
test
decl
sub
lock
fmuls
fwait
sub
jmp
push
rolb
mov
enter
mov
mov
incl
out
push
pushl
fidivl
nop
sub
lods
inc
ljmp
push
push
sarl
mov
push
sub
add
mov
ret
dec
dec
and
hlt
decl
jge
sti
nop
int
lea
cmp
and
dec
inc
rolb
sbb
loopne
push
pop
lcall
mov
rolb
mov
or
aas
inc
mov
xor
insl
sub
cmp
jne
push
aaa
fcmove
mov
push
repz
mov
test
lock
xchg
out
sbb
loop
pushl
mov
mov
jmp
jge
lcall
incl
cld
mov
fs
mov
mov
dec
fistpl
fwait
rcl
dec
leave
imulb
adc
push
sub
in
add
subl
dec
push
dec
out
lahf
insb
nop
jo
in
or
mov
mov
push
aaa
imul
add
ljmp
shll
dec
test
in
call
cmp
jecxz
out
call
mov
mov
bound
decb
sbb
arpl
out
pop
pop
mov
push
ljmp
mov
stc
addb
rcrb
jmp
rclb
adcb
mov
aad
test
jle
daa
sub
cld
cmpsb
mov
and
mov
jg
dec
pop
sbb
jle
dec
jmp
pop
lret
addr16
sarl
jle
inc
addr16
cmp
test
sbb
add
sbb
incl
pop
or
xor
dec
pop
xlat
cmpsb
daa
adc
std
mov
dec
movsb
pop
pop
into
xchg
dec
cli
mov
mov
ja
pop
mov
ljmp
fs
mov
rcll
lret
js
test
jl
xchg
xchg
dec
jne
ljmp
fistpl
imul
imull
clc
fwait
sbb
testl
popf
repz
aas
stc
mov
dec
clc
jecxz
pop
aas
cmpsb
xchg
cmp
mov
cmp
mov
mov
sahf
add
ds
ret
ljmp
cmc
push
mov
dec
ss
leave
adc
cmp
sub
jae
call
mov
sahf
sub
push
mov
into
inc
pop
lock
icebp
mov
pop
scas
mov
adc
jnp
push
insb
mov
ljmp
testb
pop
mov
icebp
and
cli
repnz
lcall
cld
push
sbb
jle
pop
push
hlt
push
daa
in
inc
fldt
pushl
mov
inc
lods
ret
mov
or
cs
push
mov
inc
in
ljmp
mov
or
sub
push
mov
pop
mov
pop
push
test
cmpsb
jno
fwait
cmpsb
incl
pop
xchg
ljmp
clc
mov
push
mov
rcl
adc
cmp
jle
sbb
cmp
dec
or
pop
stos
jne
push
xchg
imul
push
jo
push
add
mov
outsl
clc
dec
xchg
les
shll
enter
outsw
mov
sbb
push
loopne
cld
call
dec
push
sbb
in
jae
shrb
ljmp
aad
sub
push
mov
icebp
aad
jo
fildll
dec
dec
jo
imul
cmp
inc
or
rcr
repnz
fcomip
sbb
fisubs
arpl
ljmp
mov
push
in
movsb
push
sub
jns
cmc
decl
sbb
lea
jno
imul
call
adc
jne
jg
rcl
pop
and
scas
loop
push
mov
lret
das
out
shlb
es
pop
rorb
in
mov
sub
lcall
fisttpll
mov
ret
jg
imul
sub
sarb
outsb
mov
fsts
decl
dec
jle
xchg
sahf
mov
icebp
dec
sbb
xor
sub
pop
pop
daa
stos
and
mov
pop
jg
pop
cs
mov
sub
jg
ljmp
subb
mov
pop
cmpsl
lea
mov
ss
mov
or
push
or
sbb
push
in
loopne
dec
stos
mov
test
mov
ljmp
sub
push
cld
jmp
dec
je
inc
jb
mov
sub
inc
xor
mov
jge
mov
dec
mov
scas
ds
in
sar
test
scas
mov
mov
stos
add
pop
mov
cli
and
pusha
mov
shll
dec
out
mov
decl
outsl
add
jp
insl
lahf
loopne
sub
dec
push
lahf
lcall
jle
lcall
add
xchg
jo
addb
daa
xchg
mov
pop
lock
jmp
xchg
adcl
push
imul
push
xor
incl
dec
test
ret
and
mov
inc
jns
scas
scas
sbb
push
ljmp
ljmp
xchg
cmpsb
pushf
lret
in
ds
shr
adc
add
jbe
mov
ficompl
insl
test
incl
int
iret
or
iret
out
cli
gs
xor
outsl
lcall
adc
xchg
loop
js
push
push
pop
push
fisubrs
sahf
lock
jns
or
push
pop
or
cmp
call
cwtd
icebp
xchg
and
stos
and
mov
cs
sub
dec
mov
incl
and
dec
add
shll
xor
nop
pop
inc
ljmp
addr16
mov
inc
mov
mov
rol
or
es
mov
add
incl
sub
mov
pusha
sbb
out
cli
out
lods
movsl
pushf
push
cmp
adc
sti
pop
in
scas
jmp
and
xchg
mov
hlt
loope
out
push
sub
lods
iret
sbb
xlat
and
and
pop
xlat
pushfw
push
out
ljmp
pusha
xor
jecxz
mov
insl
addr16
lcall
jmp
pushf
stos
test
mov
add
stc
pop
mov
insb
das
stos
and
js
lods
pop
lock
cmp
mov
mov
or
scas
clc
call
fcompl
xor
testb
inc
mov
andb
popf
inc
dec
mov
jmp
dec
fstpl
lds
dec
lahf
incl
lods
in
xchg
and
push
adc
cltd
dec
pushf
dec
or
lods
mov
mov
out
inc
jns
push
stos
loope
push
pop
imul
jb
dec
rorb
call
pop
lahf
push
shrb
fsubrl
or
stc
loop
sahf
push
ljmp
mov
jecxz
dec
imul
rcl
icebp
popf
fadds
clc
adc
das
cli
xchg
lods
dec
sti
fisttpll
out
into
adc
xchg
sub
clc
cmp
dec
clc
jns
stc
mov
mov
mov
movsl
dec
int3
pop
xor
lret
cli
and
enter
cltd
or
in
add
out
dec
ljmp
clc
push
pop
cmpsl
ret
mov
lret
pushf
push
js
jno
sbb
jbe
sbb
jae
nop
or
lret
push
sub
scas
fisttpll
add
lcall
jbe
inc
push
movsb
into
or
mov
test
jnp
std
incl
push
loopne
push
scas
mov
ja
call
or
sar
mov
pop
cltd
mov
scas
daa
cmp
sbb
jg
lcall
pop
scas
mov
imul
inc
in
movsb
sub
icebp
sbb
sub
jmp
jo
mov
fidivrs
in
fstpl
out
mov
sub
xchg
dec
imul
adc
mov
cmp
pop
xor
or
mov
push
cli
jp
or
push
push
pusha
mov
pop
mov
inc
inc
cs
cs
dec
out
jle
inc
stos
cwtl
jnp
in
sahf
pop
cmp
jp
leave
scas
dec
cld
push
jo
pop
adc
xchg
lcall
test
out
leave
pop
outsb
pushf
insl
sbb
ss
ret
inc
clc
ret
inc
lcall
adc
push
loopne
shrb
in
mov
sbb
add
mov
pushl
xor
or
xor
push
ret
mov
mov
jp
jo
cmc
pop
into
test
cwtl
lock
jge
adc
and
mov
ret
pop
gs
pushl
aam
xor
int3
testl
mov
jle
xchg
nop
sbb
stos
sub
ja
lcall
aaa
xor
xor
in
inc
pop
nop
scas
jo,pn
xchg
dec
data16
insl
mov
mov
in
or
mov
sbb
pop
push
rcll
cmpsb
xchg
push
ss
add
mov
xchg
mov
pop
imul
divl
push
dec
push
mov
jle
mov
loop
push
js
jbe
insl
xchg
xor
fwait
js
add
sub
js
out
mov
fcomip
fsubr
inc
xchg
jbe
fimull
cmp
clc
ljmp
add
pop
add
insl
lcall
ljmp
nop
les
xchg
sbb
sbb
mov
or
push
lods
pusha
mov
scas
pushl
out
jb
scas
clc
cmc
xchg
pop
stos
inc
mov
pop
cmp
mov
cltd
decl
aas
cmp
or
loope
stos
cmpsl
pop
mov
fcoms
cmpsb
and
and
cmp
popf
mov
sbb
push
and
es
pop
ljmp
dec
mov
and
adcl
xchg
mov
lret
sbb
in
fs
inc
ljmp
nop
jl
aad
or
es
inc
pop
push
xor
out
lcall
and
jne
enter
lret
mov
pop
push
xchg
inc
mov
lcall
mov
dec
iret
imul
push
cli
add
fcomps
mov
fstpt
push
push
enter
addl
aad
mov
mov
movsl
shll
mov
inc
les
inc
std
xor
loopne
push
add
add
loope
pusha
pushf
xor
mov
adc
mov
lcall
sub
cs
out
sahf
add
ret
loope
mov
add
inc
mov
idiv
call
daa
movsb
aad
mov
in
push
xchg
les
pop
aaa
sub
push
mov
incl
popa
lahf
jge
mov
xor
loope
in
mov
hlt
or
pop
adc
xchg
sbb
push
mov
jbe
pop
cld
decl
nop
push
xor
push
loop
test
lds
imul
sbb
mov
inc
mov
in
mov
incl
xchg
gs
jno
icebp
test
jns
cmp
jmp
pop
jecxz
cmpsl
je
xor
cs
jmp
std
xchg
add
xchg
push
in
ret
das
sub
outsl
pop
push
pusha
mov
pop
cltd
xchg
bound
xchg
push
imul
and
test
test
ds
push
xchg
add
mov
leave
jmp
nop
aas
pop
fdecstp
shr
adc
sbb
inc
nop
xchg
clc
lock
pushf
mov
stos
imul
xor
xchg
cmpsb
and
pushl
decl
aaa
ja
or
mov
mov
lcall
in
jg
call
xchg
dec
adc
mov
pop
iret
inc
pop
std
sub
and
sbb
jl
fmuls
aaa
sbb
incl
in
jle
sub
ret
xor
decb
jmp
jno
into
mov
push
and
ret
mov
pop
mov
jg
mov
aas
mov
dec
jno
mov
daa
xor
push
pop
sub
sub
movsl
mov
xor
ja
insb
loope
mov
ljmp
mov
dec
xor
ja
pop
repz
push
mov
cltd
ss
lret
daa
orb
jmp
aam
mov
xor
popf
inc
iret
xor
jo
or
insb
mov
mov
imul
mov
dec
fisubrs
lock
mulb
jne
mov
jl
fsubrs
mov
pushl
call
xor
cmp
cmp
xor
or
push
repz
jno
daa
add
mov
cmpsl
aaa
or
jne
pop
int
xor
xchg
cmpl
push
mov
adc
fwait
xchg
mov
fyl2x
repz
stc
sbb
loopne
push
test
jg
aam
pop
mov
notb
mov
xor
loop
xchg
mov
ljmp
mov
fwait
jle
cmpsl
js
rclb
sarb
mov
mov
lcall
mov
cmp
cwtl
sahf
mov
mov
lcall
popa
icebp
aam
jne
pop
push
push
pusha
mov
xchg
notb
pop
iret
pop
or
xor
std
dec
sbb
shl
cmp
mov
daa
lret
nop
push
sbb
das
sar
push
icebp
xchg
xchg
clc
call
rcl
push
arpl
pop
out
pop
push
enter
decl
test
mov
mov
inc
push
test
sbbb
sbb
int3
fbld
call
sbb
and
dec
add
fildll
cltd
xlat
mov
sbb
roll
test
fisttps
pop
lcall
punpcklwd
mov
add
cmpsl
mov
fimuls
ret
xchg
sub
ficomps
jae
jo
call
dec
fimuls
inc
and
les
lea
xor
inc
popf
clc
in
push
stos
in
fcos
pushl
lock
scas
sbb
or
int
push
scas
out
bound
sub
outsl
insb
iret
xor
scas
and
enter
mov
into
fcmovu
int3
cs
inc
mov
jo
in
inc
mov
mov
out
mov
xchg
inc
hlt
jg
incl
pop
mov
out
xchg
fucomp
pop
cmp
cltd
imul
lcall
ljmp
inc
inc
xchg
mov
ja
fcompl
les
lods
loope
cmp
std
idiv
ljmp
mov
mov
xchg
imull
rcrl
repz
and
mov
insl
das
fwait
or
icebp
leave
mov
loop
ljmp
pop
popa
xchg
pop
stos
sub
cwtl
fisubs
adc
in
insl
mov
mov
lcall
insb
cmp
stc
mov
lods
ud0
mov
pushf
aad
pop
jo
adc
jbe
cmp
inc
rorl
pop
clc
incl
outsb
pushf
pop
shl
xor
fnsave
jae
dec
mov
xor
mov
jecxz
incl
xor
push
loope
add
jl
xchg
xor
xor
out
pop
sub
pop
loopne
push
les
dec
mov
jl
jmp
sbb
cwtl
gs
mov
pop
push
xor
push
sub
stos
pop
imul
scas
outsb
xchg
pushf
call
pushf
loopne
jl
pusha
sbb
rcl
das
add
lcall
adcb
mov
jmp
sar
cltd
jnp
loop
pop
sahf
cmp
pushf
mov
pop
cmp
cmp
dec
inc
movsl
rcll
xchg
xor
es
jns
dec
lcall
je
dec
insl
push
sub
pushl
mov
sub
into
test
mov
add
std
enter
add
rclb
xchg
jbe
sub
add
cs
push
sbb
mov
mov
xchg
xor
mov
jmp
hlt
jecxz
sub
jle
popf
xor
jnp
lcall
mov
mov
clc
incl
dec
cmpsl
lds
cmp
movl
inc
sbb
lcall
in
int3
mov
and
int
xchg
std
rolb
sub
mov
cltd
cli
mov
popa
gs
xlat
shl
loope
fisttpll
fdivr
aaa
adc
aaa
iret
and
cmc
fstpl
push
ljmp
ss
xlat
sbb
adc
and
out
std
subl
repnz
loopne
ljmp
xor
xor
and
insb
mov
and
sub
mov
sbb
fbld
jge
pop
std
jle,pt
xor
fwait
push
std
stos
and
sub
sub
mov
outsb
xor
or
ljmp
into
mov
movsb
push
lds
scas
sub
ret
ljmp
loopne
cld
pop
outsb
mov
lea
fcoml
jle
ljmp
out
xchg
push
mov
add
push
mov
xor
dec
call
lcall
add
inc
cmp
insl
mov
call
pushl
dec
lods
xor
xor
in
scas
fs
rcrb
xchg
push
jmp
bound
bound
scas
ljmp
pushf
pop
dec
in
andl
fbstp
mov
xchg
clc
cltd
adc
adc
cmp
filds
stos
or
test
jno
loopne
std
mov
test
in
mov
push
pop
push
notl
repz
inc
test
pushf
xchg
add
icebp
push
cltd
mov
mov
dec
call
in
rolb
sbb
shll
std
xchg
pop
adc
xor
inc
xor
mov
xchg
nop
and
jae
jl
stc
fadds
adc
call
in
lcall
xor
ficoml
jmp
cmpsl
cmp
mov
inc
mov
jl
clc
decl
addl
xor
inc
int3
addr16
mov
aam
pop
inc
inc
add
stos
incl
fildll
add
ljmp
sub
xor
jo
sahf
cwtl
sbb
test
shll
pop
bound
mov
pushl
mov
test
das
pop
sub
sub
jp
mov
mov
mov
and
mov
insb
scas
cmpsb
gs
hlt
ret
es
pop
pop
out
incl
ljmp
sbb
movsb
rclb
mov
mov
add
lock
mov
aam
or
mov
pushf
sti
scas
mov
imul
dec
sub
push
cltd
mov
cwtl
out
or
add
ljmp
jno
pop
xor
xor
mov
xor
mov
jmp
jl
stos
jmp
xor
int3
jp
leave
xchg
cmc
mov
pop
jge
into
or
jle
sbb
ljmp
add
aad
into
sub
test
stos
fwait
ja
push
and
mov
call
decl
xor
xchg
sub
les
mov
jbe
push
stos
sti
or
xchg
arpl
cmp
add
add
mov
insl
inc
mul
stos
andb
data16
cmpsl
out
lods
push
jmp
iret
into
ss
xor
mov
sbb
xor
pop
sub
pushf
dec
ljmp
mov
xor
ljmp
xor
pop
imul
sub
lcall
jl
push
ror
scas
push
dec
loope
jnp
lret
push
jl
mov
cs
jmp
sbb
dec
add
lock
jg
lea
inc
sbb
scas
sub
jns
and
fisubs
xor
mov
ljmp
xorb
aas
in
xchg
jp
je
sbb
fldenv
sbb
loopne
inc
mov
clc
cmpsb
test
bound
mov
jg
add
sub
jp
call
sbb
sbb
fnsave
mov
push
mov
mov
inc
jcxz
cld
cmp
xor
pushl
int3
cwtl
ret
mov
pop
mov
cmp
add
lcall
dec
lea
dec
lahf
imul
add
push
and
repz
pop
cmp
mov
jne
arpl
pusha
xor
inc
push
mov
xchg
jg
adc
roll
sbb
shl
add
aad
sbb
jbe
data16
sti
mov
cli
push
mov
or
sarb
nop
add
stos
decb
pop
clc
sbb
pmaxub
data16
dec
stc
addl
lock
scas
insl
mov
pop
cwtl
cmpsb
jno,pn
jbe
hlt
mov
xchg
or
pop
cmp
lds
xchg
cmp
stos
rcr
mov
movsb
cmpsb
ret
push
cmc
xor
pop
jns
daa
loop
jnp
in
push
cwtl
inc
sbb
shll
mov
lcall
push
daa
add
jns
mov
pop
pop
leave
add
xor
scas
ret
jno
cmp
mov
sbbb
add
adc
mov
jno
mov
in
cltd
mov
pop
js
dec
xchg
add
push
lods
xchg
inc
fcomp
mov
push
les
or
jbe
hlt
fstps
xor
pushl
cs
pushf
scas
cwtl
fstps
ficoms
cmp
and
fadd
pop
arpl
jmp
add
sbb
mov
cmp
sub
imul
mov
pop
sbb
mov
and
pop
mov
dec
insl
rclb
cmc
mov
popf
cmc
inc
mov
out
or
cmp
sub
jl
test
xchg
fistl
ficoml
jl
xchg
rorl
out
cmpsb
lock
out
cld
adc
pop
add
xchg
mov
sbb
incl
adc
shll
pusha
cli
add
into
mov
pushf
or
ljmp
pop
enter
mov
push
lea
mov
lea
mov
pop
mov
enter
repnz
dec
ret
cmp
lods
divl
mov
jmp
push
xchg
xchg
pop
inc
xchg
lds
xchg
push
jb
inc
mov
nop
icebp
pushf
test
pop
es
call
jge
push
orb
pop
outsb
loopne
int3
cmpsl
pop
sbb
push
icebp
jge
inc
sbb
jo
ljmp
pop
sub
popa
mov
inc
daa
aad
mov
xor
cmp
iret
call
xchg
out
popf
insb
cmp
mov
xor
stos
into
stos
xchg
pop
ljmp
push
jl
inc
sahf
ss
cmp
mov
fcomip
cmp
std
hlt
stos
pop
xchg
lea
mov
bound
push
sar
das
sar
adcl
fmull
adc
lcall
pushl
jbe
popf
jp
cld
hlt
mov
mov
add
aad
std
inc
pop
clc
sub
xor
int3
add
lds
test
mov
mov
mov
leave
jmp
jnp
nop
stos
lds
mov
je
ds
jns
jp
mov
pop
ljmp
scas
adc
mov
int3
stos
hlt
pusha
sahf
movsb
pop
mov
xor
incl
xchg
test
xor
jge
imul
or
push
mov
xlat
sbb
inc
adc
or
cltd
dec
sub
jno
adc
mov
hlt
cli
adc
mov
mov
cs
shl
mov
aaa
dec
ljmp
xchg
and
bnd
xchg
pushf
push
mov
mov
jmp
pushf
jecxz
cli
jns
js
wbinvd
mov
in
dec
push
cld
out
rolb
sahf
outsb
inc
fidivrl
pusha
dec
ljmp
in
incl
lahf
cwtl
mov
mov
or
lock
mov
arpl
add
adc
sti
fwait
call
jecxz
sti
xchg
cmc
push
or
fwait
popa
push
ret
loop
int3
sbb
lcall
mov
or
out
test
sub
push
jns
mov
xor
jmp
shlb
andb
mov
lret
mov
dec
sub
inc
or
incl
sbb
mov
das
push
cmpsb
xchg
adc
loope
lcall
call
adc
popa
and
jmp
mov
jmp
xlat
pop
bound
push
popf
into
lahf
shlb
mov
lret
push
decb
pop
push
data16
mov
jp
mov
ljmp
in
mov
inc
data16
mov
incl
add
cmp
or
out
or
jp
push
in
sti
loope
xchg
ret
cmp
sub
mov
xor
cwtl
jp
pop
iret
fidivrs
cmp
jecxz
xchg
cwtl
mov
call
insb
mov
mov
rcr
mov
mov
call
mov
dec
dec
leave
and
add
cwtl
push
inc
mov
outsb
into
or
jmp
inc
push
push
outsl
jecxz
fucomp
ljmp
jecxz
jle
test
fdivs
mov
xchg
and
xor
aas
add
in
loope
dec
jmp
add
sti
ljmp
addl
jnp
aam
xchg
jmp
sub
mov
imul
inc
test
adc
ds
inc
jbe
ficompl
fisttpll
lret
jb
lahf
icebp
rclb
push
dec
cli
lods
mov
xor
mov
sahf
xchg
cli
incl
std
pop
sbb
sub
das
or
push
dec
test
ljmp
es
out
shrb
pop
inc
call
push
out
sub
mov
jmp
fnstcw
cmc
ja
ffree
lods
mov
rorl
std
fwait
jp
test
push
and
clc
pop
add
ja
fwait
xor
mov
outsb
imul
lcall
xchg
stos
jne
rorb
sub
pop
lcall
mov
jns
loop
push
xor
int
sub
call
or
mov
js
and
popa
push
or
lret
cld
clc
lret
pop
cltd
mov
lcall
and
lcall
sub
je
fsts
lcall
mov
lcall
jns
add
lods
fwait
mov
js
js
jae
sub
dec
bnd
mov
lcall
jmp
flds
imul
pop
cli
jbe
movsb
jo
ljmp
roll
lcall
rep
or
lods
dec
adc
or
sub
xor
imul
adc
sti
push
xchg
cld
jb
jns
mov
call
out
inc
pop
cmp
call
loope
add
mov
decl
mov
ljmp
push
fcoms
mov
dec
xchg
inc
subb
push
roll
add
ljmp
xchg
mov
roll
orl
test
push
cmp
mov
and
shrb
pop
pop
in
decl
inc
push
sbb
es
scas
test
sti
out
mov
incl
mov
fidivl
cmpsb
jmp
outsl
int3
sar
fdivl
inc
add
cmpsb
les
xchg
leave
les
add
mov
xor
sahf
or
add
xor
inc
sub
std
jmp
jle
inc
iret
mov
cmp
mov
test
add
jecxz
call
fidivrs
xchg
arpl
fldl
pop
scas
mov
pop
mov
test
add
incl
movl
xorl
sar
sbb
mov
jge
lcall
cwtl
inc
pusha
push
fadd
and
and
test
mov
bound
lods
dec
and
lcall
pop
push
ljmp
fdivr
jmp
nop
sub
push
dec
xor
std
out
cmp
push
cltd
jle
daa
jmp
das
lods
cmpsl
jmp
icebp
and
fcoms
add
repnz
mov
in
aam
inc
jns
inc
cmp
cld
ljmp
stos
cmp
jo
xchg
sub
das
ret
mov
sub
mov
jp
or
ds
into
sbb
scas
adc
cltd
add
jmp
cli
mov
dec
inc
and
rcll
std
rcl
int
mov
clc
and
pushl
sub
negb
movsb
fisubrs
mov
divb
hlt
out
movsb
aam
ja
cli
xor
jmp
movsb
push
mov
and
adc
mov
daa
insb
cwtl
repz
mov
mov
pop
cmp
ret
repnz
int3
inc
sbbl
divl
xor
or
pop
subb
push
push
out
test
add
cwtl
mov
jle
add
xor
loop
hlt
ljmp
cltd
ljmp
push
psadbw
push
in
adc
mov
sbb
insb
xor
lahf
insb
inc
adc
decl
sbb
dec
aaa
adc
or
lods
push
add
clc
add
add
fdivr
call
movsl
sbb
pusha
xchg
sub
cmpsb
rorl
lea
movsb
movsb
out
cli
xor
js
pushl
cmpsl
movl
ljmp
cwtl
mov
stc
ljmp
push
xorb
and
jns
in
aas
push
mov
mov
add
rcr
stc
std
or
mov
push
dec
in
daa
js
mov
stos
mov
mov
mov
add
jle
aas
and
out
les
sbb
out
clc
cmp
test
pushf
jge
or
add
add
xchg
fnsave
mov
rorb
xor
push
cmp
or
mov
cmp
jnp
decl
jp
push
jmp
inc
cld
sub
xchg
inc
lea
js
jmp
dec
fidivs
bound
adc
cmpsb
test
jno
mov
push
add
lret
test
cs
pop
jae
sub
mov
pushl
mov
sbb
scas
pusha
sbb
movsl
fisubrl
fimuls
in
lcall
ficomps
cmpsl
loopne
xor
mov
out
cmpsb
call
cmc
stos
imull
add
pushf
mov
dec
je
xchg
das
mov
mov
push
pop
pushl
push
jb
scas
or
scas
xor
mov
gs
js
inc
std
decl
xchg
stos
jl
jo
ss
icebp
mov
pop
gs
inc
adcb
cmp
leave
dec
sub
jg
or
mov
and
mov
xor
fisubl
mov
repnz
popa
inc
incl
out
add
xor
ljmp
mov
aad
out
xchg
popa
rcll
jmp
leave
xor
aam
push
pop
inc
mov
insb
iret
movsl
jp
add
stc
pop
push
xor
xchg
pop
imul
sbb
dec
pop
add
mov
or
fsubrp
mov
into
push
xchg
loop
cmp
mov
push
adc
aas
add
outsl
adc
jecxz
add
scas
and
cltd
xor
popf
vandps
icebp
pusha
fs
mov
xchg
push
pop
scas
xor
inc
adc
incl
mov
test
enter
gs
lods
out
cld
cmc
scas
push
mov
pushf
in
scas
add
call
sub
sub
sahf
int
das
clc
incl
scas
fdivrs
imul
dec
ja
jg
nop
jnp
and
pop
hlt
pushl
mov
pop
clc
sti
adc
jge
jg
insl
fdivrp
xor
dec
xchg
xchg
xor
ljmp
mov
and
push
mov
xor
decb
fildl
jmp
scas
xor
mov
mov
mov
push
cld
repnz
cmp
call
es
dec
add
mov
jp
and
add
jnp
addl
je
mov
enter
ds
sub
jmp
call
ljmp
inc
cmpsb
fs
or
in
mov
add
or
adc
decl
or
daa
push
mov
xchg
add
mov
enter
loop
mov
icebp
or
imul
aam
mov
mov
aaa
cld
ljmp
push
int3
ficomps
cli
sbb
pop
incl
ret
sub
jmp
pop
testl
cmp
cltd
sub
popa
int3
adc
cmp
cmp
fdivs
push
jle
jne
xchg
aam
mov
lcall
pop
in
and
ljmp
mov
movsb
xor
out
cli
sub
jp
mov
icebp
ljmp
push
mov
add
xchg
mov
shrb
nop
addl
push
or
and
pop
neg
add
incl
xchg
mov
arpl
sub
in
sbb
cmp
xchg
ss
sbb
sahf
adcb
call
xor
repz
inc
mov
jecxz
repz
mov
test
adc
jle
pop
add
mov
aad
ja
push
divl
fnstenv
std
mov
not
push
in
add
mov
sbb
cmp
jnp
test
xor
mov
jnp
xchg
pushl
jmp
int3
jbe
mov
sub
push
adc
sbb
outsl
decl
gs
out
inc
loope
out
sbb
das
jg
fucomp
and
push
or
hlt
mov
lahf
or
loope
cmp
add
add
cmpsb
sub
jg
mov
clc
sbb
testb
fs
in
adc
shr
push
xorb
and
push
mov
popf
and
out
sbb
stc
ret
in
jb
incl
mov
mov
xor
test
stos
insb
enter
jp
aam
loopne
pushl
jne
sahf
jo
sbb
mov
push
add
push
fstl
stc
pushf
dec
in
decl
out
add
cmpsb
mov
sahf
arpl
cli
fidivs
sub
jmp
hlt
insl
mov
mov
or
mov
daa
cmp
cli
imulb
rorl
imul
sbb
in
fs
jbe
jmp
daa
mov
push
push
inc
add
es
jle
add
ret
xor
add
push
rcr
mov
mov
mov
push
out
mov
and
mov
jns
sti
testb
ljmp
and
cmp
call
dec
sti
sub
adc
fstpl
int
jle
incb
call
and
xchg
jle
add
test
adc
mov
xor
jl
or
into
cmp
sbb
outsl
cli
pushl
cmpsb
jecxz
out
loope
cmp
jo
clc
lcall
lcall
arpl
pop
cwtl
push
popa
add
mov
sbb
mov
jmp
shl
xor
clc
ljmp
test
xchg
xorb
add
mov
ljmp
cmpsb
or
mov
xor
xor
adc
lcall
xchg
subl
push
divb
mov
and
mov
insb
test
addl
mov
test
leave
out
add
inc
jg
jg
std
cli
jge
push
mov
xchg
xor
push
lret
out
mov
cmp
loopne
cmc
mov
jle
test
inc
jns
stc
cmpsl
cmpsl
lcall
or
data16
push
incb
cs
into
and
jo
inc
xchg
cmc
add
inc
icebp
pop
xor
push
jnp
push
decl
add
lcall
pop
mov
arpl
push
inc
jb
call
fs
dec
jl
and
pop
das
mov
scas
pop
ss
pop
ljmp
push
data16
push
and
push
std
mov
out
mov
leave
jecxz
ljmp
aas
ljmp
fidivrl
add
pop
push
add
mov
adc
xor
idivb
sub
jmp
jmp
adc
inc
add
adc
cwtl
insl
mov
fildll
dec
adc
scas
std
xor
pop
data16
jp
mov
fbld
pusha
cli
sbb
dec
lcall
lea
test
movsl
pop
fcmovnu
mov
sarb
incl
mov
dec
sub
xor
lahf
scas
ficoms
scas
aaa
jg
jmp
pop
add
and
push
pop
or
or
fimuls
mov
mov
fisttpll
dec
push
iret
adc
jo
pop
repnz
movsl
roll
fdivrl
push
mov
shrb
sahf
pop
into
nop
loope
popa
fstl
pop
lock
lods
jbe
lahf
and
loop
lock
pop
add
outsb
lock
jb
jmp
frstor
mov
lods
sarl
das
push
xchg
xchg
mov
movsb
inc
or
adc
int3
mov
call
cmpsl
dec
and
or
in
scas
ror
xor
pop
inc
sarb
pop
add
add
cld
hlt
mov
call
ljmp
fdivr
lds
int3
cs
mov
xor
gs
and
mov
push
ret
lret
in
pop
fcmovbe
sbb
test
pop
lcall
in
add
cmp
add
push
dec
pop
push
mov
mov
cs
fstp
das
mov
jae
dec
lcall
jmp
hlt
xchg
xchg
inc
lret
push
sub
adc
int3
jmp
sar
mov
ljmp
xchg
mov
cltd
sbb
scas
jecxz
mov
jbe
mov
fstl
ret
aas
mov
popa
jne
push
jns
decl
pushl
push
add
jns
xchg
mov
sbb
sbbl
ljmp
incb
pushl
fimuls
xchg
dec
dec
push
mov
pop
ds
xor
out
sbb
scas
pop
mov
lods
add
cmpb
dec
loop
mov
insl
aaa
jae
add
push
scas
repz
jns
insb
imul
mov
sbb
mov
jno
lds
cmp
jg
sahf
lahf
sbb
jnp
push
addb
lahf
jnp
rcr
xor
jo
daa
decl
andb
sub
sbb
lret
int3
pusha
std
jp
in
sbb
data16
dec
add
rcll
loope
lcall
pop
mov
mov
cld
in
cli
add
int3
xchg
mov
call
jnp
inc
xor
nop
jmp
xorl
pop
sub
sar
mov
loope
fs
add
xchg
inc
xchg
mov
jg
jmp
jae
push
inc
cmpsb
lret
pop
shr
pop
ficomps
outsl
sub
mov
mov
jg
push
out
adc
not
lock
mov
popa
stc
push
xor
mov
push
outsb
mov
add
daa
jl
inc
pop
adc
imul
xchg
in
xchg
mov
and
test
mov
int3
data16
repz
ds
push
ss
decl
lcall
outsb
and
fldlg2
mov
aam
xor
push
cwtl
outsl
je
int3
lcall
cli
testb
pushf
adc
push
sub
std
jl
lret
mov
clc
decl
hlt
add
icebp
push
mov
in
xor
jg
push
aam
adc
mov
fildl
loop
nop
lret
ljmp
bound
je
clc
cmp
orl
mov
sub
dec
std
ljmp
incb
stc
pop
push
xchg
loop,pt
jmp
dec
add
in
jl
ds
arpl
sub
mov
daa
into
or
clc
jmp
mov
mov
cmc
mov
pushl
js
std
cmp
les
mov
call
aam
pop
add
pop
jl
pop
mov
cmpsb
or
and
or
lahf
mov
jmp
jge
mov
push
sbb
sbb
dec
nop
in
andb
mov
add
and
popa
dec
push
out
push
test
add
xor
nop
pop
cli
stc
add
jns
icebp
scas
pop
jmp
jg
ret
xchg
rol
add
xchg
lods
decb
push
dec
cs
ljmp
mov
adc
sarb
push
enter
dec
fsubr
test
xchg
pop
cs
jns
lahf
popa
pop
add
ficompl
loopne
jp
jecxz
scas
test
jg
mov
xlat
arpl
jecxz
fbld
lcall
mov
jge
pusha
nop
std
pop
hlt
inc
xchg
test
jl
movd
outsl
mov
jg
cli
sbb
dec
add
bnd
call
xor
imul
adc
decl
sbb
sub
xor
popf
push
sti
mov
call
ljmp
sub
jns
gs
jnp
pop
mov
loopne
xor
mov
pop
rolb
movsb
roll
inc
clc
in
sub
jnp
pop
pop
or
push
add
sub
scas
clc
pushl
mov
push
jbe
aad
sbb
sahf
clc
add
aaa
lret
add
filds
inc
daa
imul
mov
jnp
das
mov
inc
ja
dec
scas
jo
inc
fs
cli
mov
shll
pop
cltd
adc
stc
notb
add
incl
sub
inc
add
push
hlt
push
inc
xchg
cmp
add
lret
and
mov
fwait
idivb
mov
jle
mov
adc
mov
mov
xor
icebp
ljmp
xor
leave
in
jno
dec
inc
lods
lds
lea
push
cmp
ret
cmp
jp
cli
fsts
andl
popa
mov
add
jmp
gs
add
ret
sarb
outsl
mov
mov
pop
pop
add
call
mov
aam
jo
mov
icebp
adc
scas
cmp
cmp
out
xchg
jnp
xchg
sub
mov
pop
push
lock
inc
in
idivb
fcomp
sub
jl
dec
push
mov
call
jle
mov
jg
mov
clc
mov
mov
sahf
cmp
jg
incl
and
add
adc
data16
decb
imul
rorb
dec
outsl
outsl
cli
ljmp
out
cmp
mov
mov
sbb
xchg
scas
clc
jmp
sub
gs
jmp
jb
cmp
inc
dec
push
movsb
fwait
ljmp
or
cli
jge
or
sub
loop
xlat
pop
add
and
test
sbb
push
decl
call
sub
xor
out
jp
mov
mov
shrb
lock
cld
mov
mov
mov
shlb
and
lahf
imul
insl
xchg
or
push
lock
jle
pop
outsb
dec
push
cmp
gs
addr16
cmpsl
in
stc
push
push
add
pusha
add
adc
js
mov
mov
or
sar
jne
xor
lds
dec
mov
mov
ja
inc
xlat
cli
test
sahf
in
push
aam
fs
push
lahf
mov
jns
sbb
push
jl
pop
insb
ljmp
mov
decl
jl
pop
add
add
or
decl
mov
push
insb
xchg
test
push
shlb
jge
fstpt
mov
hlt
lcall
fstpl
fbstp
or
pop
adc
sbb
pop
mov
inc
xchg
test
fldt
xchg
inc
or
mov
cwtl
cmp
jnp
ljmp
or
push
scas
outsl
add
jmp
dec
or
mov
inc
fisubrl
je
sti
xor
andb
cwtl
fildll
arpl
fmuls
jp
test
add
mov
lock
cli
xchg
popa
loop
jp
in
pushl
pop
aaa
stc
xchg
aaa
repz
int
addl
adc
incl
orb
add
in
out
xchg
test
or
jmp
pop
cmc
sub
ljmp
sbb
mov
mov
lds
jae
cld
aaa
sti
mov
std
ljmp
hlt
push
sti
outsl
in
loope
in
cs
jnp
xchg
sahf
add
sbbb
push
loop
ljmp
mov
push
lods
insl
aas
mov
cmpsl
pop
fwait
scas
cmpsb
add
outsb
div
inc
in
call
aam
dec
jl
call
add
add
clc
push
loop
decl
fcoms
jl
push
pop
cmp
int3
or
andl
cmc
mov
jmp
js
mov
sub
icebp
dec
fimull
sar
push
out
mov
xchg
pop
and
insl
int3
xor
cli
jmp
mov
call
popa
popa
mov
fdivrs
repnz
cld
out
adcl
fnstcw
ds
jns
xor
cld
decl
jmp
je
jno
std
pop
clc
push
out
or
call
add
xchg
jmp
and
jecxz
scas
adc
xchg
shll
in
mov
lea
decl
cmp
icebp
sar
mov
add
cld
dec
mov
test
in
mov
push
ds
pushl
cld
test
in
shll
mov
mov
insb
mov
mov
inc
mov
pop
loopne
mov
inc
int3
sbb
mov
cmp
push
push
call
sbb
or
mov
mov
incl
mov
sbb
mov
fdivrl
sbb
scas
inc
push
fs
push
adc
xchg
jmp
jg
pushl
pushf
dec
jle
dec
jle
aas
jo
cmp
fcoms
and
leave
xor
pushl
or
aad
mov
jo
leave
into
leave
or
scas
xchg
fsubl
pop
pusha
jle
scas
cli
pop
sub
repnz
sahf
mov
jle
mov
out
pop
push
xchg
inc
pop
jb
sbb
popa
es
adc
xchg
mov
mov
jmp
dec
xchg
nop
cwtl
ds
mov
addr16
inc
ret
jo
fldt
fsub
ljmp
data16
mov
jo
pop
sbb
sub
ljmp
call
lcall
cmpsb
divb
jmp
inc
js
cwtl
inc
cmpsb
mov
add
sbb
cld
mov
mov
js
push
pop
cld
in
sub
sbb
aam
push
push
cmp
inc
sti
test
loop
ljmp
add
aam
bound
aad
sbb
cmp
push
in
shl
mov
pushf
ja
sti
dec
clc
call
push
outsb
lcall
mov
mov
xor
jmp
in
or
cmp
hlt
lcall
push
push
push
shrb
pop
adc
ret
pop
sbb
out
cmp
pop
nop
fwait
jne
cmovae
cmp
clc
call
dec
push
in
lock
mov
mov
jo
jmp
rorb
or
and
orb
mov
mov
inc
stc
lods
pop
mov
pushf
hlt
push
int3
fnstenv
pop
std
push
mov
cmp
inc
cmp
ret
js
pop
js
inc
insb
push
push
mov
mov
mov
xor
add
fnstcw
sub
iret
pshufw
mov
or
mov
xchg
mov
mov
scas
sub
push
xor
addr16
leave
xor
push
rcr
jnp
call
loopne
sbb
pop
dec
push
pusha
jl
xchg
mov
movsb
pushl
shlb
cmp
xchg
mov
call
andb
dec
scas
out
adc
stos
xchg
inc
aad
into
or
mov
mov
sbb
jle
out
jg
decl
outsl
mov
cmc
add
sbb
mov
cmp
jge
push
pushl
mov
jecxz
lods
lret
cld
sbb
xlat
lds
jne
lcall
cmp
jmp
in
out
mov
xor
jae
push
das
lock
jb
lahf
mov
mov
rol
fldcw
sbb
mov
mov
out
xchg
cmpb
push
hlt
lcall
or
and
bswap
sub
test
pop
inc
xchg
pop
xor
je
dec
mov
xchg
mov
scas
cli
inc
in
and
fwait
mov
xchg
push
ss
call
ds
adc
and
rorl
push
xlat
sub
jo
dec
data16
jmp
dec
gs
subl
jae
loop
bound
jg
inc
push
ss
sbb
add
lcall
mov
dec
add
jb
add
scas
pop
pop
sar
jg
inc
cmp
mov
jge,pt
pop
jl
push
fs
fnsave
jno
xchg
outsl
jo
pushl
cmp
aam
loopne
push
pop
repnz
int
das
sar
das
mov
je
cltd
mov
push
sahf
lock
mov
fnstsw
test
ljmp
addr16
fdivp
push
mov
call
fwait
jnp
mov
cwtl
fstpt
mov
repz
lock
outsb
mov
test
out
pop
xchg
dec
dec
lods
lret
decl
mov
loopne
jo
sub
dec
inc
sbbb
test
cld
pop
xchg
jle
ds
stos
fucomp
addl
enter
mov
out
stos
pop
cmpsb
jo
pop
shlb
jo
outsl
scas
testl
ljmp
pop
mov
lock
dec
jae
out
cmpsl
pop
jb
lcall
mov
sub
mov
negb
push
shl
lds
je
movsb
ljmp
jl
dec
inc
cmp
dec
and
loop
rolb
jns
jbe
aam
lcall
adc
imul
jno
mov
mov
decl
jp
data16
stos
mov
add
push
pop
fisubrs
mov
sbb
aaa
cld
decb
jp
fdivs
scas
out
or
movsl
pop
out
mov
cld
ljmp
dec
xchg
ss
loope
iret
dec
jle
js
aam
cmpsb
fsubp
cwtl
xor
mov
pushl
inc
lods
sub
lahf
and
ret
insw
in
fs
fsubs
push
fsubr
xor
mov
cld
loop
mov
imul
inc
and
push
imul
pop
mov
or
mov
sbb
mov
xor
cld
ja
scas
push
lods
test
icebp
pop
mov
dec
jno
xchg
and
pushl
fnsave
scas
xchg
rcr
rclb
jge
mov
cwtl
mov
and
outsl
stos
mov
mov
mov
push
cmc
aam
test
add
rcrb
loop
lock
lcall
pop
sub
push
cmpsl
std
cmpsl
ljmp
mov
test
imul
lcall
mov
inc
int
mov
cmpsb
test
sbb
push
sbb
mov
mov
std
aam
imul
decl
imul
dec
je
mov
stc
or
push
out
pushl
movsb
cmp
shlb
call
adc
xchg
add
movsb
clc
out
les
sbb
sub
push
mov
mov
mov
mov
sahf
mov
mov
add
clc
jp
cwtl
cs
shll
xchg
mov
incl
jo
cmp
insb
mov
pop
mov
cmp
dec
mov
mov
call
fadd
jp
pushl
push
add
fs
cmp
in
cmp
popa
imul
push
call
sbb
mov
push
add
scas
mov
mov
hlt
inc
and
call
aaa
pop
push
movsl
scas
test
fsubrl
jmp
sbb
into
inc
scas
adc
scas
fs
scas
mov
mov
sahf
out
ret
push
mov
andb
jg
sbb
cmpsb
or
inc
dec
mov
sti
jo
mov
bound
and
mov
ficompl
repz
mov
arpl
or
or
pop
iret
push
lcall
stc
imul
or
mov
outsb
xor
sahf
cld
out
dec
cld
dec
das
sar
cmp
scas
repnz
ljmp
cs
sub
mov
jecxz
incl
imul
xchg
leave
in
loop
cwtl
insb
shlb
imul
fnstsw
ds
mov
insl
test
les
sub
or
sub
push
cmp
ret
jmp
movsb
or
lods
in
mov
shll
das
pop
lock
mov
sarl
push
aas
fiadds
mov
lock
fadds
imul
lods
mov
stos
push
call
cs
leave
insl
mov
mov
pop
cmp
mov
movsl
int3
aaa
jmp
mov
outsl
sub
dec
push
cli
aam
ljmp
pushl
inc
sbb
andl
ss
sbb
sahf
pushf
adc
jns
pop
lahf
flds
jg
or
add
std
scas
je
ret
push
sub
pushl
or
ds
aas
dec
imul
cwtl
inc
cli
jmp
iret
sbb
jmp
adc
mov
mov
ds
loop
jle
mov
mov
loope
push
push
and
repnz
test
sbb
lcall
enter
jae
fimull
ret
ja
ja
jbe
rcll
pop
cli
pushl
andl
shl
repz
cli
clc
incl
out
and
dec
mov
rclb
mov
xor
pop
or
dec
add
scas
stos
jecxz
cld
aad
inc
gs
push
mov
push
sahf
xor
popa
addb
jp
sbb
add
loope
cmp
fsub
je
js
sahf
mov
or
decl
iret
jae
in
ds
insb
inc
cmp
push
je
and
pop
in
test
filds
sub
ja
ficompl
fs
jae
arpl
leave
inc
dec
mov
adc
testb
add
jbe
call
js
movsb
and
ficoml
xor
cwtl
leave
sub
in
gs
idiv
ljmp
call
sbb
adc
dec
call
push
and
loope
sti
sbb
mov
fldl
push
adc
loop
dec
dec
jg
enter
cli
cmpsb
arpl
jg
jbe
mov
xlat
push
scas
fisubl
bound
call
std
jg
out
cld
in
mov
xchg
shll
shr
scas
fiaddl
or
sti
divb
lods
scas
scas
cli
outsb
sbb
sahf
ds
mov
idivb
outsb
in
scas
cld
imul
pop
cmpsl
sarl
scas
pop
js
mov
jle
incb
or
ficomps
mov
xchg
dec
in
mov
sbb
pop
rcrb
mov
lea
mov
icebp
aaa
dec
call
mov
fistpl
mov
adc
enter
mov
or
scas
lret
scas
xorb
adc
lods
test
add
mov
int3
mov
test
loopne
inc
call
mov
dec
add
xchg
xchg
mov
mov
push
mov
add
ljmp
pop
lods
adc
nop
add
sub
insl
push
faddl
cmpsl
mov
cld
enter
and
adc
sbb
or
les
pop
lods
sub
popf
fistl
out
xchg
scas
leave
sbb
cli
mov
mov
mov
sti
clc
ljmp
je
push
or
jle
repnz
mov
lret
dec
and
or
fsubl
scas
mov
push
lods
aad
insl
add
push
sbb
push
fs
lret
inc
aaa
jns
negb
jl
jg
xor
inc
movsb
cmp
movsl
data16
idivl
dec
aas
bt
adc
adc
loopne
pop
add
cmpsb
jmp
cld
cld
test
es
jmp
test
xor
pop
dec
push
cmpsl
sahf
mov
cli
inc
sub
fdivs
les
out
cli
pop
and
xchg
mov
js
or
sbb
mov
fs
pop
cmp
inc
pop
fadd
push
mov
lock
shr
cmp
imul
pop
bound
cmc
decl
xor
cs
add
decl
xor
or
push
add
add
aas
lock
stc
dec
ljmp
clc
xor
or
and
adcb
incl
mov
sti
test
push
cmp
dec
push
adc
pop
ljmp
jecxz
sub
sarb
add
cmp
lret
mov
dec
or
adc
int3
mov
pushl
adc
out
mov
scas
xorb
or
dec
in
push
dec
pop
addr16
ljmp
sbbl
xor
ret
mov
pop
cmp
xchg
std
add
orl
mov
call
imul
test
not
cltd
or
hlt
in
dec
pop
aam
xchg
sti
popf
sbb
lret
or
cmp
jmp
mov
dec
sahf
das
mov
mov
sarb
les
call
sub
push
stos
mov
pop
jmp
adc
pop
jbe
fcmovu
mov
cmp
push
out
mov
push
and
in
das
xor
sub
call
mov
mov
out
push
rcrb
adc
add
frstor
jb
jg
or
je
sbb
and
insl
movsb
lcall
sbb
push
loop
incl
add
pop
mov
push
jl
stos
les
test
xor
add
jl
add
mov
lds
repz
jle
ljmp
adc
dec
hlt
jo
jno
xchg
dec
outsb
lcall
sar
mov
mov
push
inc
pop
xchg
in
adc
inc
in
out
sub
mov
fisubrs
jb
incl
mov
xor
pop
add
xlat
lcall
pop
mov
sub
ret
adc
cmp
jg
lea
pop
pop
mov
or
and
pop
jmp
cmp
mov
outsb
jmp
imul
push
icebp
sub
nop
mov
sub
adc
and
ljmp
xor
fsts
xchg
sub
cmc
and
push
cld
mov
pop
loope
jecxz
rolb
loop
daa
dec
adc
ss
aas
jns
ljmp
jae
lret
ret
sub
inc
subb
mulb
outsl
xor
or
cmc
sbb
add
pushf
rolb
pop
add
adc
in
iret
test
dec
testb
pop
test
jp
das
mov
push
push
pop
ds
inc
js
dec
push
dec
pop
int
icebp
xchg
in
out
in
lcall
mov
inc
loopne
out
int3
stos
lea
xor
dec
incl
mov
adc
pop
ret
popa
mov
in
push
jne
xchg
daa
scas
adc
add
mov
push
mov
stc
sub
cmp
stos
inc
movsl
adc
xchg
xor
mov
clc
inc
mov
rol
rcrl
pop
adc
fsin
or
pop
push
jle
push
sub
mov
insl
mov
fmull
stos
push
aas
icebp
lds
jmp
and
mov
mov
fdivl
fcmovnb
sbb
sub
pop
bound
adc
ja
inc
push
inc
call
cld
and
imull
dec
inc
add
das
dec
or
or
push
dec
adc
push
jg
lret
lock
fildll
fnsave
xor
cmp
mov
iret
aaa
lods
int3
int3
cs
in
mov
lcall
xchg
mov
mov
aaa
add
gs
inc
or
jmp
add
incl
hlt
scas
push
mov
xchg
push
lods
jne
xor
or
ljmp
lock
inc
shll
orl
std
bound
add
push
push
mov
adc
cmpsb
lcall
ljmp
push
xchg
hlt
sbb
cli
sub
ljmp
cmp
jb
mov
orb
jne
mov
jg
sbb
gs
or
sub
inc
lahf
add
cli
repz
lods
jns
mov
gs
xor
jnp
and
mov
pop
shrl
pushl
adc
fidivl
icebp
jmp
pop
inc
cmp
mov
insl
or
mov
or
call
imul
jnp
scas
push
mov
jp
fbstp
add
idivb
cmpb
mov
xor
pop
push
lods
add
mov
ja
lods
push
jge
lods
xor
mov
shrb
inc
ror
cmpsb
mov
gs
pushl
adcl
push
or
xor
addl
lret
jae
jle
cmc
dec
sub
mov
push
ss
push
mov
repz
mov
dec
push
insb
arpl
jg
push
stos
mov
push
pusha
or
xchg
int
cmp
enter
lea
and
jmp
sub
sub
loop
or
insb
xchg
add
push
push
pusha
and
lock
arpl
shl
push
mov
mov
call
dec
adc
sbb
popa
enter
shlb
push
fdiv
hlt
fsubs
fldl
push
stos
pop
hlt
jmp
cwtl
add
gs
cli
aam
aam
pushf
push
popf
jo
xchg
sub
sbb
pusha
enter
add
int3
in
lcall
xchg
inc
sub
out
ss
mov
jno
nop
xchg
bound
pop
in
pop
clc
dec
pop
daa
popa
cmp
pushf
loope
test
test
out
ljmp
add
fbld
xor
inc
pop
push
mov
addb
aad
xchg
jl
xor
push
stc
mov
lock
push
cmp
shll
cmp
mov
jg
cmp
int
in
push
cmpsb
pop
call
out
stos
pop
or
or
into
adc
inc
call
pushl
xchg
inc
stos
dec
xchg
mov
repnz
or
cmp
mov
incl
fsubrl
xchg
insb
mov
inc
or
mov
lret
dec
cmp
xchg
mov
mov
fwait
shl
pop
add
pushl
lret
jb
cmp
scas
xor
jbe
imul
lcall
or
jnp
jecxz
es
mov
cwtl
xchg
and
adc
cmp
inc
daa
jb
incl
xor
int3
mov
add
imul
addr16
jg
mov
outsl
fcomip
dec
pusha
rcrb
mov
jg
inc
push
add
add
jbe
ficompl
cmp
ljmp
or
cmp
ds
div
xchg
sbb
pusha
pop
push
cwtl
add
out
and
ja
call
add
cli
inc
stc
int3
xchg
in
push
mov
gs
push
loopne
dec
dec
cmpsl
mov
sbbb
sub
int3
inc
pop
xor
and
mov
xchg
scas
mov
cmp
bnd
int3
fisubrs
xchg
push
jg
xlat
ljmp
and
mov
mov
inc
lods
loop
sbb
mov
cld
push
dec
mov
arpl
adc
aas
mov
ljmp
js
std
inc
or
out
lret
test
pop
jg
cmp
push
lods
insb
insb
sub
jmp
xor
stos
fcomip
pushl
int
daa
icebp
ss
fisubs
adc
jbe
dec
arpl
call
lods
rcr
jge
test
aaa
mov
or
inc
in
daa
sti
clc
shll
push
ljmp
mov
or
dec
lods
mov
addr16
lcall
bound
sbb
mov
or
ljmp
xor
add
adc
sahf
mull
mov
push
in
jne
pusha
sub
decl
add
pop
mov
cmp
test
inc
push
ss
js
js
adc
fdivrs
xor
push
mov
js
call
dec
shl
mov
mov
arpl
inc
imul
je
in
pusha
lret
mov
push
adc
dec
adc
adc
jne
pushl
cld
inc
xchg
lahf
jle
dec
pop
ret
lcall
cmp
fldenv
cmp
ljmp
lea
fadd
ss
movsb
in
and
jle
out
add
clc
div
jne
lcall
mov
into
fisubl
cmp
push
xchg
js
mov
jge
and
mov
mov
dec
js
ljmp
jle
mov
mov
xchg
xchg
test
mov
push
sub
pop
outsb
pop
scas
mov
xlat
dec
xor
stos
ss
decl
mov
es
stos
xchg
cs
jns
adc
push
lret
pop
lods
xchg
pop
mov
and
mov
inc
bound
sbb
pushf
bnd
push
mov
test
cmp
mov
gs
call
adc
insb
fistpl
xchg
push
cmp
mov
inc
nop
push
fsubl
fisubl
testl
push
loopne
push
dec
sahf
pop
mov
jbe
lods
jp
dec
cmp
pop
push
jno
ljmp
int
push
sahf
ret
push
popf
in
push
dec
push
cld
push
jmp
lcall
lret
jmp
mov
push
lods
pop
out
addb
fbstp
fbld
ss
sbb
and
fdivl
ds
adc
pop
mov
mov
pop
out
mov
cld
push
aaa
arpl
jne
xchg
push
stos
adc
call
mov
scas
mov
push
mov
bound
and
cmp
dec
mov
adcb
lcall
sbb
loope
test
push
mov
inc
test
int3
or
push
decl
add
stc
test
xor
lcall
sbb
and
inc
push
incl
movsl
das
and
ss
jg
jmp
mov
jb
pop
mov
incb
cwtl
stos
dec
pop
aam
add
cmc
jp
jbe
testb
mov
add
jmp
add
dec
inc
or
pusha
mov
add
dec
loopne
jbe
ds
sub
decl
dec
cmp
pushf
mov
jecxz
cli
jl
test
subb
fidivs
incl
xor
jo
cmp
out
mov
pushf
out
jae
inc
fdivrp
mov
or
xchg
es
ret
repz
lcall
fs
pushf
test
pop
or
xchg
stos
xchg
sahf
in
sti
shll
or
pop
add
dec
lods
sbb
fisttpl
cmp
mulb
mov
mov
jle
gs
mov
ljmp
ret
ffreep
mov
test
pop
ds
cli
xor
push
decl
xor
pop
adc
push
out
cld
and
jo
cmp
shll
cmp
mov
mov
hlt
cmp
fs
adc
in
add
and
or
mov
call
cli
sbb
mov
insb
outsb
mov
mov
mov
aad
gs
mov
or
leave
xchg
inc
ret
das
xchg
repz
incb
mov
gs
xor
or
push
pop
pop
fwait
ja
xor
pushl
les
imul
sbbl
mov
jmp
rcrl
xchg
xor
mov
out
push
add
inc
shlb
cmp
aam
inc
int3
xchg
incl
test
sti
icebp
cmp
adc
or
sub
fildl
xchg
rcll
call
std
mov
xor
jp
cmc
sub
jb
push
lret
les
push
lret
inc
jmp
decl
int3
jo
adc
in
xor
sbb
cmp
movb
xchg
test
decl
and
lods
mov
ja
jecxz
add
pop
pxor
jnp
lret
jae,pt
pushl
add
mov
cltd
or
push
inc
xlat
or
xchg
mov
incl
repnz
sbb
lcall
fdivrs
add
cmp
sarb
lcall
mov
orb
add
pop
sbb
mov
call
imul
sbbb
push
push
cmp
pop
loopne
adc
push
push
adc
out
int3
push
xor
xchg
mov
lea
pop
or
decl
bound
jbe
popl
pop
jno
ret
and
dec
mov
cltd
sbb
lcall
nop
mov
insb
pminub
push
es
jecxz
push
sub
and
call
push
ret
push
cmp
or
pushl
cmp
or
int
sbb
cmc
xlat
xchg
mov
dec
cmpsl
mov
ljmp
mov
nop
xor
faddl
pop
fists
or
cmpsl
sbb
mov
push
cld
adc
jo
je
add
pop
aad
test
mov
fcomip
pushl
loope
int3
test
imul
mulb
push
jo
rcr
dec
cmc
call
jae
push
sbb
jnp
sub
inc
sbb
enter
mov
adc
inc
push
outsl
clc
aaa
jns
ljmp
xchg
sub
in
adc
pop
push
cmp
cli
jp
pushf
movsb
jp,pt
sbb
in
loope
clc
in
sub
test
jg
mov
les
mov
jmp
pop
ret
repnz
adc
decl
or
test
push
pop
push
stc
cmpsl
dec
cmpsb
dec
sub
decl
and
push
lea
ds
std
lret
inc
add
xchg
insb
pushl
inc
mov
or
xchg
xor
pop
sub
rorb
out
pop
lds
pop
loopne
jmp
cmp
aaa
in
nop
pop
push
or
adc
and
lahf
mov
nop
push
xor
movsl
aam
and
mov
sti
jl
mov
jbe
jmp
xor
xchg
mov
or
ljmp
mov
sub
daa
rcrl
sub
mov
stos
scas
inc
lcall
cs
jmp
pop
int
scas
cmp
mov
or
neg
inc
out
loope
stc
sbb
push
ficompl
jp
adc
hlt
lods
sub
call
mov
push
insb
pop
in
push
std
ljmp
stos
or
stos
mov
cmp
movsl
or
lods
adc
jmp
xchg
xchg
inc
pop
test
hlt
adc
mov
dec
fisttps
mov
pop
cmp
adc
into
inc
push
iret
dec
add
out
cli
cli
mov
lock
movsb
jmp
inc
push
daa
loop
jbe
outsb
mov
lcall
cmp
xchg
jmp
pop
sub
arpl
ret
xor
leave
xchg
fcomip
lcall
add
js
jp
and
adc
cmpl
fistl
test
or
ljmp
std
push
jl
push
aam
insl
pop
jmp
adc
leave
in
add
sub
cmp
decl
enter
cmp
cli
jbe
clc
mov
pop
dec
dec
fsubr
mov
mov
mov
pop
pop
sbb
mov
ds
aam
lds
jge
std
jge
lock
inc
sbb
xor
xchg
sub
mov
sub
lds
xchg
add
push
xor
pop
jns
cld
dec
sub
je
lcall
or
mov
jl
or
sbb
cs
xor
cs
lock
test
mov
xorb
add
fbstp
jp
sbb
ljmp
xchg
aam
cmp
call
adc
adc
push
jb
mov
popa
or
sub
xchg
notb
lcall
mov
inc
nop
xchg
ficoms
add
ja
push
ret
xchg
cld
adc
jmp
hlt
mov
daa
cmp
mov
dec
mov
cmp
push
dec
popa
mov
sub
idiv
xor
sub
hlt
or
ret
push
stc
pop
jbe
mov
incl
ror
pop
xchg
imul
or
cmp
lahf
ret
fnstenv
pop
sub
in
cld
incl
cmp
mov
mov
mov
or
subl
clc
jg
aad
mov
out
icebp
xor
adc
pop
inc
cmp
push
std
pushl
cmp
loopne
rcll
xchg
lret
cmp
pop
sbb
xchg
lret
stc
decl
add
cmp
fwait
into
sub
mov
push
xchg
fdivrl
call
mov
push
or
iret
fsubr
out
mov
decl
and
movsb
mov
pop
fistl
ljmp
arpl
les
rolb
std
pop
lcall
int
pop
ja
lret
mov
sbb
lock
xor
pop
loopne
push
pop
popa
dec
add
adcb
mov
out
xchg
add
and
or
dec
int3
dec
jmp
leave
adc
fiadds
sbb
dec
clc
pop
mov
ret
or
and
add
stos
popa
std
lcall
aaa
addb
clc
ljmp
cmp
pushl
inc
mov
xor
cs
mov
andl
inc
push
adc
sbb
jns
xchg
js
ljmp
scas
mov
out
xor
xor
js
arpl
mov
inc
mov
outsb
notb
cld
adc
sbb
inc
mov
pop
incl
test
cvtps2pd
mov
sub
in
popa
ja
add
mov
mov
xchg
imull
mov
ficoml
movsl
arpl
decl
mov
decl
testb
inc
pop
inc
sbb
fcmovnu
icebp
rolb
or
adc
sub
pushl
addr16
das
nop
or
ret
or
push
pop
dec
sub
push
add
bound
or
sub
data16
cli
inc
xchg
imul
pusha
leave
fstps
decl
stos
gs
cmp
jle
lds
pushf
push
mov
fcomip
or
out
or
mov
ja
lods
pop
bound
dec
and
shll
adc
test
js
push
pop
or
cmp
daa
ds
jbe
mov
call
and
push
push
push
mov
jns
add
cmp
jnp
fisubl
pop
and
mov
jl
mov
xchg
mov
jg
and
cltd
cmc
sbb
incl
mov
push
xor
and
push
or
pusha
xor
sbb
subb
lcall
lds
lret
aas
mov
or
call
fnstenv
xor
incl
xor
aas
and
out
adc
pop
call
add
test
mov
filds
sub
call
push
scas
xor
cmp
add
incl
or
adc
ret
sarl
xor
push
push
fstl
sahf
imul
cmpsb
add
call
fidivs
add
nop
int
sbb
pop
pop
xor
xchg
mov
repz
lcall
lock
out
shrb
mov
push
or
jmp
icebp
std
in
testl
aad
iret
jg
mov
daa
mov
mov
adc
in
xor
and
mov
jmp
pop
push
jnp
rolb
inc
sbb
cli
or
test
aad
decl
sub
sbb
or
js
loopne
aaa
xchg
push
add
lahf
pop
fwait
sbb
xchg
cld
jg
push
add
or
rcll
cmpb
jg
into
push
push
mov
insl
add
jl
testl
mov
cmp
mov
sub
mov
ja
gs
push
repnz
mov
leave
inc
clc
idiv
sub
out
int
fmull
lret
imul
lcall
lret
stos
mov
ss
dec
stos
jbe
out
scas
cli
ljmp
psubusw
mov
imul
repz
sbb
sbb
test
mov
jl
fs
jne
lea
call
mov
test
mov
lock
mov
push
push
aaa
hlt
popf
fdivs
ficoms
add
js
sbb
fldcw
inc
sbb
sarl
jecxz
ficompl
dec
negb
ljmp
jmp
test
ds
and
in
ds
mov
xchg
enter
fcomip
push
cltd
sub
idiv
fisttpl
in
cli
outsb
int
or
inc
ja
or
xor
call
orl
inc
pop
adc
sub
call
std
dec
sbb
testb
popf
push
inc
in
mov
imul
inc
xor
sub
rorl
jnp
jnp
dec
xchg
clc
fldcw
add
xchg
xor
mov
pusha
ja
loop
xor
inc
outsb
pop
dec
xchg
cmp
jns
jne
decl
ja
adc
jmp
mov
imul
cmc
lcall
shlb
shr
addb
dec
rclb
mov
jo
fcomip
lcall
push
dec
ljmp
aam
push
jg
neg
out
cli
and
xor
sub
xchg
add
out
push
pop
push
cli
mov
lcall
lods
sbb
dec
jmp
or
shlb
push
int3
ljmp
jge
sub
fwait
push
and
ret
jp
ret
push
movsb
sub
mov
and
cmp
jle
or
shrb
jnp
mov
stos
clc
add
imul
test
fcmovnbe
lds
dec
push
xchg
sahf
sbb
jo
push
adc
and
in
inc
dec
out
clc
mov
into
sbb
add
ffree
loop
mov
push
leave
decl
ljmp
pop
push
pop
insb
xchg
out
mov
aaa
shll
jecxz
push
arpl
xchg
incl
pushf
mov
mov
pop
pop
mov
incl
decb
mov
pop
inc
mov
jne
mov
test
mov
push
sub
jmp
and
dec
mov
in
rcrl
iret
loop
cmp
into
int3
dec
sbb
jmp
jo
dec
pop
inc
mov
lods
mov
or
push
inc
push
sub
cltd
std
lcall
adc
les
push
pop
int
aas
pop
lods
xor
xor
dec
mov
push
adc
push
xlat
sbb
and
adc
ljmp
iret
lods
sub
or
cld
dec
outsl
leave
sub
test
xor
sub
push
cmp
dec
loop
inc
inc
clc
addr16
adc
cmp
lret
incl
mov
pop
xchg
nop
cld
dec
inc
imul
lret
mov
scas
std
pushl
std
adc
test
loope
push
inc
pop
iret
push
test
andl
orl
mov
imul
arpl
adc
movsl
push
mov
test
pop
lods
jmp
xchg
insb
xor
bnd
ljmp
sub
and
aaa
shlb
and
lock
pop
addb
pop
test
decl
jl
test
ret
xor
jge
std
mov
ja
push
pop
int
xlat
aaa
ret
notb
out
and
mov
pop
xchg
xor
add
push
mov
int
in
add
shrb
incl
inc
ret
fiaddl
jnp
in
nop
xor
call
loop
jbe
and
sbb
jmp
decl
push
add
push
mov
cs
add
sbb
mov
negl
scas
lcall
dec
std
sbb
out
xorl
inc
push
rorl
sbb
mov
decl
mov
pop
push
mov
mov
push
adc
mov
aas
sbb
sub
mov
jg
orb
inc
jge
pop
in
xchg
inc
mov
fcomip
ja
cmpb
mov
cli
sub
fistl
decl
xor
fbld
pop
stos
sub
xchg
sbb
dec
push
inc
lds
test
enter
push
pop
mov
mov
mov
inc
inc
push
push
inc
and
inc
stos
pushl
adc
lods
leave
push
sahf
mov
and
mov
decl
sub
cmp
inc
pop
pop
mov
in
loopne
dec
dec
adc
jmp
xor
mov
mov
ja
mov
dec
xchg
add
lcall
jecxz
mov
test
sti
jnp
mov
xor
mov
sub
and
stos
jbe
movsl
push
mov
subl
out
xor
jae
xor
incl
mov
popa
mov
and
lahf
adc
mov
jl
jno
mov
rcrl
pop
pop
test
sbb
subb
pop
lret
mov
or
mov
cmp
mov
lods
push
jmp
mov
ret
sbb
out
mov
call
mov
push
dec
push
jmp
mov
int3
in
loop
jp
imul
gs
cmc
stc
cmc
jns
inc
test
std
ljmp
nop
insl
sub
and
test
add
call
scas
cmp
test
decl
out
xchg
stos
loop
shlb
adcb
jl
jmp
sub
fisubrs
cli
cli
jecxz
nop
dec
and
cwtl
cld
sbb
mov
aaa
imul
mov
push
push
adc
incl
cld
cltd
dec
inc
call
jb
fs
cmpsb
jg
push
pop
ljmp
fcmovnb
pop
mov
pop
fidivrl
sbb
cli
or
mov
rol
cmp
lahf
js
mov
clc
adc
xor
adc
lret
movsb
sbb
cmp
test
mov
or
push
inc
pop
call
mov
aam
inc
push
push
pop
inc
inc
mov
hlt
hlt
sbb
cmp
cmp
dec
adc
jp
shlb
mov
sub
jge
mov
ljmp
jae
loope
jecxz
inc
or
bound
in
ret
out
dec
mov
call
fdivs
in
lahf
sub
or
lahf
mov
sub
mov
sub
ljmp
xlat
sub
repnz
ss
adc
adcl
fucomip
sahf
mov
mov
jp
scas
or
daa
cs
push
mov
cmp
cmp
mov
or
lods
lcall
cs
cli
jp
ficoms
adc
call
in
xchg
into
mov
or
addr16
rcrb
pop
call
lret
data16
cmp
add
mov
shrl
loopne
lret
push
or
xchg
inc
jecxz
std
ljmp
mov
pop
pop
jnp
scas
cwtl
cmpps
or
xchg
mov
ja
sbb
pop
and
dec
xchg
gs
mov
lock
cmc
or
pusha
or
or
jnp
pop
sar
loop
dec
or
sub
adc
incl
inc
xchg
imul
lret
inc
je
jle
sub
fisubs
pop
inc
bound
or
call
mov
push
and
psubd
cmp
xor
addl
cli
jge
and
fcoms
mov
sbb
mov
fs
pop
push
and
out
pop
jl
xor
call
xor
pop
jae
loopne
add
ss
test
xchg
ss
mov
ret
jmp
inc
pop
js
repz
sbb
loope
add
int3
xchg
lods
in
std
mov
jb
mov
call
ficomps
xorl
mov
xor
mov
jno
loop
lcall
clc
and
pop
scas
xchg
out
dec
mov
jl
jo
add
push
jnp
imul
mov
pshufw
sahf
mov
mov
stos
mov
enter
add
pop
xor
decl
dec
mov
outsb
pop
adc
psllw
add
data16
inc
or
sub
test
push
sti
out
fisttps
out
popf
sub
mov
shl
pop
scas
addr16
inc
mov
decl
lcall
push
aad
test
repnz
ret
ja
into
sub
jp
xchg
xor
ljmp
mov
mov
sub
adc
lock
mov
mov
ljmp
push
outsb
sbb
dec
adcl
in
mov
and
or
testl
clc
clc
in
xchg
cld
jmp
push
sub
xlat
andl
sub
pop
cmp
in
fs
cmp
sbb
jmp
jne
mov
lret
pop
dec
adcl
jb
inc
scas
sub
lods
lret
mov
cwtl
push
jmp
bound
xchg
out
fists
call
inc
mov
dec
cmpsb
imul
incl
mov
or
pusha
movsb
mov
inc
jns
hlt
xor
sbb
loop
pop
mov
fisubl
pop
testb
jmp
aam
adc
jg
and
mov
call
jns
stos
mov
jg
jge
and
test
sbb
or
push
jns
dec
jl
xchg
movsl
shl
xor
subl
lret
sub
inc
xlat
dec
mov
lock
in
jae
ret
scas
out
mov
test
rorb
or
mov
enter
jns
cmp
and
std
enter
xchg
mov
xchg
scas
dec
inc
jno
mov
subps
adc
ljmp
outsb
xchg
jo
insb
mov
push
xor
loope
jo
rcll
popf
xchg
and
mov
inc
test
xchg
dec
jg
das
sar
cmpl
lods
cltd
scas
sub
push
dec
lods
and
xchg
and
lods
sbb
and
test
cmp
outsl
outsl
out
movsb
jl
dec
popa
in
cltd
hlt
clc
daa
mov
insb
lcall
inc
jp
mov
aad
push
and
das
adc
and
ss
cmpsb
out
ss
add
call
push
outsb
dec
clc
or
cltd
js
aas
lods
fistl
test
push
fimull
inc
jbe
out
jg
inc
clc
outsb
daa
mov
and
movsb
adc
test
jg
call
pop
cmp
xchg
cmp
dec
and
add
mov
test
ret
ds
cmp
push
mov
inc
jmp
xchg
push
or
mov
subb
std
adc
aaa
lret
andl
call
push
mov
sbb
lcall
mov
jmp
mov
inc
ret
stc
int3
mov
mov
xor
sub
or
push
jmp
cld
mov
or
cmpb
xor
shl
les
pusha
nop
jno
pop
mov
in
sar
pop
lock
mov
mov
popl
enter
jbe
movsb
movsb
xor
dec
daa
ja
aam
fisttps
call
enter
repnz
xor
sahf
call
jmp
xchg
cwtl
and
adc
mov
out
jg
add
pop
fnstsw
cltd
decl
add
subl
ret
mov
or
sbb
add
lods
jns
push
push
pop
call
push
dec
sahf
dec
or
jo
pop
xchg
push
xor
xor
int
cmp
sti
mov
scas
adc
ds
nop
push
pop
je
lcall
pusha
fadds
or
or
mov
scas
repnz
or
decl
cmp
decl
fadds
mov
push
dec
add
bound
add
and
fnstenv
insb
mov
in
out
std
dec
xchg
loopne
lret
nop
btc
movsb
cs
lahf
bound
or
loope
out
xor
cmc
inc
push
cmpsl
clc
xor
jne
adc
xchg
push
and
lret
popf
decl
add
xor
dec
insl
mov
outsl
push
pop
cltd
inc
decl
xchg
fildll
jle
or
dec
andb
clc
ljmp
popa
xchg
push
fstpt
jo
pop
lahf
aas
jb
cmp
jg
or
adc
je
sbb
ja
subb
dec
pop
adc
decl
nop
xor
cmp
mov
ds
loopne
fidivs
movsb
test
aad
adc
mov
or
ljmp
inc
sbbl
mov
mov
mov
adc
adc
or
sbb
adc
enter
inc
mov
out
cli
push
jg
pop
xor
movsb
jp
inc
inc
std
inc
dec
cld
mov
xchg
or
incl
adc
imul
jmp
sub
mov
mov
mov
lcall
pop
adc
pop
sbb
gs
insl
dec
out
test
js
cld
popf
push
ljmp
out
clc
call
popf
outsl
mov
repnz
incl
sahf
xchg
xchg
mov
decb
or
xchg
cmp
gs
rdpmc
cmp
decl
cld
xlat
mov
lea
jae
push
popf
sbb
jmp
je
repnz
test
std
test
lock
xor
push
insb
xlat
push
and
xor
pushl
adc
loop
insb
lahf
pop
faddp
repnz
insl
mov
mov
xor
sbbl
test
xorl
push
pop
lds
and
pop
dec
fcompl
dec
jb
push
cmp
mov
pop
mov
lcall
xchg
jmp
xor
cld
push
adc
pop
jne
sub
xchg
and
cli
push
and
in
pop
rorb
sbb
lds
mov
pop
dec
movsb
mov
popf
push
sti
sub
mulb
or
lods
movsb
jnp
inc
xchg
decl
sarb
fnstenv
or
test
out
inc
push
jae
in
adc
cmp
pop
xchg
mov
adc
int3
mov
sub
inc
outsb
inc
or
cmp
and
xor
mov
iret
cld
dec
jb
jns
xor
jl
push
ljmp
jne
jno
lea
dec
lods
fsub
or
mov
call
dec
ret
sub
fdivrs
pop
adc
decl
icebp
ljmp
xor
mov
or
outsb
inc
sub
mov
mov
cmpsb
jl
or
test
std
daa
lods
adc
addr16
push
and
cwtl
add
or
xor
outsb
jg
outsl
cli
adc
or
cs
push
into
jge
sub
decl
jno
sbb
mov
je
loop
pop
lods
xchg
sarl
sbb
lcall
je
xor
decl
dec
dec
mov
mov
xor
lcall
stc
mov
jmp
ror
inc
dec
mov
orb
sub
lcall
xchg
das
pop
add
scas
test
or
or
shrl
mov
mov
out
jg
decl
jecxz
scas
adc
out
dec
nop
aad
jns
repnz
sub
mov
lcall
sub
insl
or
mov
pop
jne
enter
xor
mov
push
adc
sbb
adc
dec
jl
add
mov
or
or
cld
ret
add
int3
xchg
xchg
xlat
sahf
insb
test
jg
jmp
mov
mov
add
jae
xchg
fbstp
call
inc
std
pop
or
xor
or
mov
cmp
jne
xor
int
jg
lcall
loopne
adc
out
dec
xchg
iret
inc
divb
sahf
jl
aaa
adc
jmp
push
mov
lea
jmp
pop
or
call
ret
jno
inc
repz
xlat
pop
mov
sarb
pop
popl
push
jmp
clc
jmp
psrlq
cli
stos
cmp
xor
sub
movb
jmp
adc
movsl
addr16
pop
push
push
or
out
add
lea
pushl
fisubs
je
pop
test
xor
das
or
js
inc
negb
push
jo
lahf
in
stos
fcomp
subl
sti
out
adc
jg
fidivs
loopne
cmp
aam
lret
loope
cmc
scas
sbb
test
aad
cld
mov
decb
cmpsb
xchg
cld
push
push
mov
and
xlat
sbb
add
call
mov
jl
xchg
add
negb
out
ss
mov
lock
sub
inc
call
xchg
jge
lock
cli
ds
adc
adcb
decl
ss
jnp
jmp
sbb
jl
push
inc
mov
or
adc
or
repnz
in
mov
ljmp
sar
jnp
mov
cli
movsl
rolb
hlt
int3
xorb
stos
adc
ljmp
nop
aam
dec
in
adc
ret
or
mov
shrd
adc
call
xor
out
jle
mov
push
testb
mov
jo
pop
mov
test
pop
loope
sub
movsl
sti
outsl
mov
pop
fbstp
push
cmp
jecxz
mov
ljmp
inc
pop
mov
repnz
add
xor
push
lea
lret
pushl
in
pusha
scas
mov
dec
negl
pop
das
fcoms
lock
popf
jecxz
add
bound
ljmp
ljmp
scas
mov
insl
mov
or
lret
inc
xchg
arpl
repz
jg
ljmp
pushf
xor
sbb
xorb
adc
pop
mov
mov
pushl
pushf
test
inc
fnstenv
or
mull
in
inc
mov
xchg
icebp
mov
dec
add
adc
das
add
dec
add
es
decl
inc
jg
sbb
jne
cs
jmp
cltd
xor
sub
or
repnz
pushl
les
shll
jbe
inc
in
xchg
cs
mov
push
sbb
incl
pop
xor
add
add
cmpxchg
inc
iret
fsts
pop
mov
push
int3
dec
cmp
jge
adc
xchg
sahf
sub
lret
gs
push
adc
or
fldcw
lcall
cmp
add
jae
scas
pop
mov
leave
js
dec
sub
dec
mov
xchg
or
and
out
mov
scas
sbb
pop
pop
and
or
jno
add
cmp
mov
pushf
test
xor
mov
adc
popf
decl
cmp
dec
push
aaa
mov
int3
rorb
inc
or
int
pushf
scas
fcomip
int
sbb
ss
jo
into
int
jl
bound
push
rol
mov
mov
pushl
ret
xchg
push
fs
loop
mov
inc
xorl
into
mov
loopne
mov
pop
sbb
mov
jg
aad
cmc
in
mov
rcr
mov
pushl
pop
imul
mov
stc
fsubr
and
jp
pop
mov
imul
pop
add
call
fisubrs
icebp
add
out
inc
mov
mov
mov
dec
mov
adc
decl
cmp
jmp
popl
pop
fistps
inc
shlb
dec
or
lcall
mov
lcall
insb
mov
dec
or
mov
in
and
xchg
jbe
out
call
scas
cld
test
mov
test
mov
in
fnstcw
jmp
sahf
cmp
nop
into
repnz
and
add
sbb
fisttpll
mov
add
push
dec
cmp
test
add
mov
shrb
sahf
sbbb
fstpl
call
fadd
mov
rcll
inc
xchg
add
cmc
jnp
out
inc
dec
les
decl
and
jae
out
push
adc
scas
popa
sbb
lea
lcall
lods
or
pop
jbe
loop
test
mov
dec
mov
dec
mov
adc
pop
mov
add
pop
cs
pop
jns
sbb
enter
jp
mov
pop
cmpb
xor
jo
push
mov
pushf
pop
xchg
aaa
or
ss
shld
jp
mov
decl
test
js
cmp
jmp
jbe
into
int
das
pop
movaps
incl
cld
jmp
xor
je
daa
in
shll
int
push
outsb
inc
ljmp
jmp
outsl
mov
jno
or
pop
pop
mov
outsb
loop
lret
je
loopne
call
or
pop
out
ljmp
mov
fsts
call
insl
lock
insb
mov
repnz
cld
out
insb
jo
sub
mov
nop
movsb
and
ret
xor
mov
pop
push
movsb
push
arpl
ljmp
pop
in
test
push
pop
lcall
dec
jo
andb
in
or
lret
jmp
and
pop
in
roll
cli
adc
mov
xor
ret
cmp
mov
int3
andl
pop
mov
lds
fs
jmp
fcom
ljmp
mov
mov
jge
inc
repnz
nop
cli
xchg
lds
jnp
daa
movsb
mov
cs
dec
push
push
push
rclb
divb
les
add
pop
inc
inc
jae
adc
mov
or
hlt
jmp
lock
jmp
mov
incb
into
jns
gs
rcll
ret
fwait
mov
das
andb
loop
scas
xor
movsl
inc
sbb
push
lcall
and
mov
ds
xor
xchg
sbb
jl
and
jg
sbb
xchg
iret
aaa
sub
cmp
out
loopne
inc
dec
decl
clc
inc
ja
mov
sahf
mov
mov
incl
ja
outsb
ss
insb
xorl
mov
jp
or
xor
lcall
fnstcw
push
inc
negb
or
cmpl
out
sub
insb
dec
push
rol
cmp
mov
mov
cmp
test
cmpsb
ljmp
push
movsb
leave
mov
loop
xchg
fsubrs
lret
xor
mov
mov
cmpsb
xchg
daa
mov
sar
call
cli
push
aam
ret
dec
push
pop
mov
scas
hlt
cmp
sbb
jl
jg
ljmp
and
imul
add
ljmp
fistpll
call
lods
mov
dec
push
cwtl
add
nop
mov
xchg
and
dec
or
or
pop
call
cld
lcall
adc
adc
aad
xchg
imul
and
test
insl
jg
jmp
sbb
dec
shlb
clc
adc
lret
mov
inc
stos
push
jmp
push
xchg
and
xor
repnz
addr16
inc
sub
xchg
outsb
mov
jecxz
mov
out
pop
aaa
bound
inc
mov
and
adc
movb
pop
andb
dec
cs
ja
and
daa
in
and
decb
add
pushl
stc
shlb
ret
push
jns
divl
cld
call
jg
fisttps
ret
loope
rclb
sbb
push
lahf
jns
enter
fcomip
lcall
mov
dec
lcall
pushf
adc
jae
test
sbb
clc
add
insb
cmpsl
mov
lods
push
jnp
push
mov
mov
dec
lds
lcall
push
jo
mov
mov
xor
gs
out
inc
js
ljmp
sarb
pop
mov
dec
jl
or
pushl
adc
je
filds
push
inc
and
icebp
not
mov
scas
dec
inc
ret
mov
adc
add
inc
popa
fstp
loop
lock
pushl
cli
xchg
dec
jg
cmp
jecxz
leave
jmp
adcl
xor
or
mov
decl
push
ljmp
rclb
in
mov
mov
push
ja
ret
repnz
es
dec
fwait
scas
or
adc
lcall
testb
cmp
cli
jl
stos
lret
movb
jb
sbb
pushl
add
cli
aad
jnp
out
mov
bound
incl
in
xchg
frstor
jg
incl
aam
inc
sbb
jmp
in
xchg
push
loop
push
push
sub
jg
jnp
add
pop
jle
stos
mov
xchg
fidivl
aam
adc
lcall
ljmp
enter
sarb
jae
cld
arpl
mov
rcrb
bound
adc
adc
xchg
jmp
inc
data16
jle
mov
les
pop
mov
dec
incl
imul
inc
data16
ret
or
lcall
mov
add
es
mov
aam
xchg
iret
test
and
lcall
into
mov
aad
fiadds
mov
adc
inc
push
test
aam
sbb
xor
out
and
fidivrl
addr16
xor
sti
in
testb
test
mov
das
jp
pop
jmp
xchg
into
mov
test
jmp
jnp
sub
call
addr16
clc
and
lret
mov
ds
and
decl
lods
mov
lock
imul
push
sbb
dec
popa
lock
je
cwtl
cmpsl
test
pop
loopne
cmpsb
pop
js
and
sahf
xchg
insb
or
jge
add
mov
out
jae
jg
add
pop
sbb
std
xchg
or
aaa
mov
xor
leave
or
addr16
cs
mov
pop
push
xor
in
ja
jp
push
push
jge
jns
jbe
imul
xor
incl
or
pushf
mov
mov
xchg
push
enter
push
cmp
fisttpll
add
mov
pushl
add
popf
cld
cmp
fs
mov
jne
and
leave
fiadds
jmp
fs
insb
repz
and
hlt
out
out
pop
sbb
adc
jnp
pop
dec
outsb
cmp
loope
xchg
fcomip
inc
test
cmp
push
xchg
iret
push
inc
sbb
pop
sub
arpl
xor
lods
jmp
pushl
sbb
jno
vmread
addr16
pop
dec
out
mov
and
xchg
rcll
jecxz
icebp
lcall
out
adcl
jns
jmp
sbb
js
jecxz
lcall
adc
jo
scas
push
js
jo
push
dec
xor
mov
fsubs
fldcw
repz
bnd
mov
ret
xchg
divl
lret
ret
stos
fimuls
pop
mov
movsb
int
inc
hlt
and
int3
push
pop
sub
cmpl
movsb
or
call
scas
xor
pop
adc
pushl
and
jmp
dec
pop
pop
inc
add
jne
mov
js
je
push
std
jg
jecxz
and
dec
les
jae
add
andb
or
mov
test
inc
and
movsl
js
mov
mov
movsl
xchg
mov
cmp
inc
sub
aad
cmpsl
cmpsb
push
sub
adc
enter
scas
loop
cmp
inc
repnz
decl
adc
inc
aas
push
pop
in
dec
mov
pop
xchg
hlt
stos
push
add
and
pop
push
cmc
iret
inc
incl
push
mov
out
sahf
lock
sbb
xor
inc
cmpsb
test
add
sub
scas
pusha
fidivs
repnz
das
shrb
push
push
negb
popa
jl
out
adcb
adc
psrld
imul
pop
shlb
lds
jge
stos
loope
fistps
loop
mov
jmp
cmp
int3
fcmovne
xchg
fcmove
sbb
jp
push
add
stos
andb
lret
inc
jp
loopne
lcall
or
cmpsl
inc
sqrtps
outsb
in
scas
js
ljmp
ljmp
push
call
mov
pushf
rcr
stc
adc
decl
or
lds
jo
test
dec
push
mov
movl
decl
sub
jle
clc
cmpsl
dec
jl
mov
pop
fadds
imul
inc
cmp
xchg
enter
dec
xchg
insb
call
loop
jmp
sbb
mov
add
icebp
mov
loopne
cmp
fildl
sar
das
xchg
test
inc
mov
enter
sbbl
pop
loopne
js
xor
inc
std
sub
std
lods
insb
decl
lret
iret
sbb
mov
dec
adc
and
inc
cmp
mov
or
cmp
mov
inc
shl
mov
nop
jb
call
inc
xchg
bound
xor
push
push
jp
pop
mov
decl
inc
push
or
lock
xor
andb
fisttps
jl
es
mov
stos
bound
mov
sbb
push
xchg
xor
cld
scas
pop
mov
bnd
jae
pop
int3
psadbw
test
jg
dec
jbe
sub
and
push
arpl
lods
cmp
decl
mov
add
scas
das
aas
setb
addb
mov
push
jge
call
mov
xor
movsb
ret
push
adc
inc
cs
cmp
sbb
popa
clc
loope
clc
add
fdivs
and
push
mov
lds
stos
mov
repz
lcall
mov
xor
jne
xchg
in
mov
call
hlt
subl
jmp
outsb
adc
sbb
or
xorb
and
incl
or
mov
mov
testb
fwait
out
lcall
scas
out
fstl
call
mov
sti
add
sbb
decl
sbb
adc
pushf
push
in
enter
jo
add
dec
push
out
subb
jb
lock
adc
test
add
mov
fs
mov
in
sbb
cld
pop
mov
sti
ja
iret
and
nop
das
sar
jg
inc
pop
inc
icebp
js
jnp
adc
cltd
push
mov
loop
jmp
inc
sahf
into
xlat
xorb
add
xor
fs
lret
cmpsb
mov
push
xor
lret
mov
out
inc
push
xchg
cli
cli
adc
dec
dec
mov
push
pushl
ret
inc
andl
out
jmp
cmp
cmpb
mov
mov
mov
out
aaa
data16
inc
inc
mov
inc
stc
mov
test
pusha
xchg
bound
filds
loopne
outsl
call
fstl
sub
addb
jmp
push
ss
xor
mov
stos
rcrb
add
adc
in
mov
cmc
mov
insb
es
pop
imul
das
jmp
lds
cs
in
mov
sub
pop
sarl
fwait
add
adc
pop
mov
out
orl
jmp
xor
push
push
xor
loop
clc
jnp
rorl
jo
or
add
leave
adc
call
aas
pop
ds
jp
pop
mov
mov
lcall
iret
dec
mov
ret
jbe
das
inc
lds
inc
loop
mov
jo
insl
xchg
outsb
or
mov
mov
adc
ljmp
xor
fidivrs
popa
or
sbb
in
xchg
dec
xor
mov
and
pusha
incl
incb
test
push
or
push
push
ljmp
dec
mov
lods
jge
or
cmp
out
addb
dec
insb
je
sbb
jg
cmp
fbld
pop
fdivs
or
or
push
push
ljmp
in
lods
jg
stos
lock
enter
mov
cmp
ljmp
movsl
lret
push
cmc
xchg
pusha
pop
jg
mov
test
loop
repz
jl
and
pop
xor
lret
std
decl
ret
lods
scas
xchg
mov
jl
cli
mov
pusha
and
int
mov
pushl
xchg
mull
pop
aam
in
or
push
iret
mov
adc
xor
jae
mov
ljmp
fdivrl
xchg
xchg
rcr
shr
sub
popa
jno
scas
cmpb
mov
sar
jmp
adc
mov
pop
sbb
cmp
and
pop
rolb
xchg
cmpsb
jmp
push
pop
aad
xor
pop
sub
xlat
sub
pop
inc
fiaddl
or
lods
or
mov
ljmp
hlt
sahf
dec
mov
loope
cmp
rcrb
sub
icebp
sbb
push
inc
inc
out
cwtl
ficompl
incl
cwtl
loop
cmpl
dec
sbb
push
cwtl
in
adc
fdivrp
cmp
xor
incl
dec
inc
movb
sbb
out
aam
shll
sti
in
je
test
call
adc
into
je
pop
icebp
je
xchg
ret
fsubr
mov
test
data16
inc
sub
icebp
push
xor
mov
add
leave
fcoml
sbb
int3
or
push
sbb
sbb
push
mov
movsb
mov
cli
push
movsb
lock
les
mov
enter
mov
ljmp
lods
ret
mov
sbb
ja
xchg
xchg
xorb
pop
mov
mov
xchg
push
mov
inc
incl
mov
dec
repnz
sar
xchg
sub
mov
pop
test
mov
jmp
and
jno
scas
lods
fldcw
cmpsl
imul
ret
or
int
decl
mov
mov
xchg
movsl
lock
clc
cli
decl
mov
and
out
loop
sahf
jl
push
jge
stos
mov
cmp
dec
pop
xchg
movsl
jbe
sub
ljmp
test
jb
sub
in
je
test
das
push
xchg
das
insb
mov
adc
outsl
push
loopne
dec
rcl
mov
repnz
rcll
push
ret
push
jne
incl
dec
add
call
roll
xchg
leave
cld
pop
push
stos
rol
cld
psadbw
push
into
hlt
mov
pushl
xchg
cld
jp
cwtl
nop
orl
lret
mov
mov
or
call
xor
dec
fwait
dec
or
xor
cmp
inc
popf
mov
or
add
adc
inc
add
xchg
into
and
cmp
sahf
pop
movsb
dec
lock
mov
inc
notb
pushl
pop
mov
inc
sarb
jne
outsb
mov
and
add
xor
ret
jmp
int
xor
stos
std
dec
cmpsb
push
adc
sahf
mov
pushl
shlb
loope
or
mov
outsl
xchg
stc
lcall
sahf
mov
cwtl
or
xchg
cwtl
mov
in
adc
nop
sahf
repz
mov
xor
cmpl
jmp
pop
outsb
push
mov
sub
fs
mov
aas
rcll
cmp
add
aas
test
je
dec
push
leave
pop
loopne
mov
pushf
lock
push
ficoms
inc
ds
out
push
out
mov
into
lret
sbb
popa
rcrb
movl
ret
fstpt
dec
in
lcall
xchg
dec
in
xchg
es
jb
dec
ljmp
lcall
push
ret
fwait
lret
std
ljmp
scas
fimuls
or
shrb
adc
fwait
xchg
push
and
jmp
aaa
test
push
filds
inc
pop
push
push
xchg
cs
mov
shrl
in
push
subl
mov
scas
pusha
push
adc
lret
insb
loope
popf
and
sbb
sbb
loop
xchg
jg
sbb
scas
mov
inc
arpl
not
movb
mov
call
decl
jle
gs
int3
xchg
xor
iret
push
lds
aas
fmull
mov
jg
jg
bound
pop
scas
loop
cltd
mov
lea
push
sar
and
add
xor
add
pop
push
pop
fdivr
ret
mov
je
pop
in
push
aas
pop
push
fldcw
and
insl
in
je
push
rol
inc
mov
ljmp
cmp
rep
or
in
mov
fistps
sar
add
nop
data16
arpl
jmp
daa
std
aad
pop
sub
add
mov
adc
and
pop
cld
sahf
cmp
idivl
call
lea
aam
jge
imul
inc
fwait
add
decl
pusha
les
sub
orb
addr16
into
sbb
dec
mov
push
xchg
cmp
aas
push
call
push
cmp
sbb
jo
jae
dec
arpl
loope
mov
sbb
xlat
fsubr
leave
dec
pop
xchg
or
nop
jg
in
pusha
sar
decl
pop
mov
lock
in
enter
movsb
ret
incl
inc
dec
push
push
lods
in
xchg
movsl
pop
push
subb
dec
or
push
jle
movsl
daa
mov
lcall
iret
push
and
adc
test
inc
xchg
add
and
clc
mov
xchg
xchg
jns
ljmp
lcall
shll
fildl
int3
ds
pop
ret
addr16
out
jbe
mov
call
adc
sub
gs
call
dec
jp
cmpsl
gs
mov
test
ljmp
inc
into
add
lods
daa
iret
jne
push
add
lret
inc
push
decl
and
mov
adc
decl
jo
adc
fiaddl
das
push
mov
pop
lcall
pop
sbbb
jmp
sub
das
arpl
dec
rcrl
popa
push
push
out
jne
adc
xchg
decl
scas
mov
inc
ss
and
jecxz
xor
std
pop
dec
gs
inc
loope
jnp
sbb
lahf
ret
mov
mov
sub
push
bound
cwtl
enter
push
fisttps
ljmp
dec
pop
sub
pusha
popf
gs
rcrb
sub
sbbb
incl
adc
jb
jl
sub
fwait
cli
mov
cli
xor
sub
pop
lcall
add
clc
mov
movsl
int
push
js
or
push
stos
add
test
push
xchg
or
imul
pushl
fsubl
dec
loopne
stos
sub
sbb
enter
jp
nop
add
or
jb
xor
mov
scas
pop
cwtl
adc
imul
fcomps
pop
les
jmp
and
add
push
scas
cli
pop
lock
mov
cld
xor
out
shll
fidivrl
jb
jecxz
mov
push
add
call
dec
push
loop
fiaddl
in
pop
add
lods
movsb
cs
shr
test
mov
neg
adc
test
xor
mov
or
fimuls
or
fnstenv
xchg
in
nop
push
adc
or
bound
jg
xor
jo
cmpsl
movsb
or
mov
ljmp
clc
push
mov
pushl
cld
or
in
fistpll
pop
mov
lds
gs
rorb
mov
jg
mov
mov
mov
das
lret
call
cmp
inc
movsl
dec
pop
sub
aaa
xchg
fcompp
pop
int3
and
pop
ret
aad
adc
inc
pop
push
call
xor
xor
ret
and
sbb
ljmp
fcmovnb
mov
mov
int3
lods
repnz
mov
divl
lcall
mov
xor
jecxz
loopne
popf
jp
adc
rcrb
mov
test
call
pop
std
mov
adc
enter
xor
jo
dec
test
push
clc
rorl
xchg
ss
insb
std
ljmp
add
mov
adc
adc
in
int3
aam
push
leave
cs
test
decl
decb
shrl
push
ljmp
fidivl
inc
add
pushl
arpl
sub
mov
sbb
mov
xchg
xor
aad
push
in
test
push
iret
pop
push
push
daa
add
push
inc
adc
inc
aas
mov
es
mov
jbe
jl
inc
stos
adc
jb
test
es
cmp
in
rolb
ret
pop
xor
or
jnp
subb
fimuls
nop
mov
dec
mov
mov
inc
pusha
cmc
and
sub
scas
cld
cmpsb
mov
scas
scas
cli
jns
movsl
pop
mov
and
mov
cld
outsl
cli
jg
out
xchg
add
cld
pop
pop
jne
pop
sub
aas
enter
cmp
scas
jge
mov
notl
gs
sbb
sbb
cmp
daa
sbb
sbb
mov
cmc
incl
aam
std
bswap
sti
movsl
aas
mov
scas
into
jbe
xchg
fcomip
lcall
popa
push
cmp
inc
mov
mov
repnz
xchg
jg
inc
xorb
js
je
sub
clc
lcall
lcall
loop
sub
scas
mov
inc
ret
sbb
or
shll
clc
jg
test
mov
dec
xchg
sub
lcall
fdivrs
push
subb
call
rclb
pusha
xchg
das
out
cmpsb
fnstenv
dec
jg
or
jl
xor
lret
jno
mov
dec
ss
pushl
mov
lods
sarl
mov
popf
xchg
cmp
popa
mov
fs
cli
mov
pushl
scas
sbb
in
adc
pop
out
mov
or
leave
jmp
xchg
inc
pop
call
insb
mov
adc
jecxz
lds
add
inc
inc
jecxz
sub
jmp
pop
pop
push
push
ljmp
jle
loopne
outsb
cmc
dec
sbb
js
pop
test
jg
movsb
dec
arpl
ror
test
jp
sbb
popf
in
push
sub
xlat
mov
xchg
mov
cmp
outsl
clc
jg
gs
shll
inc
lret
inc
dec
adc
or
xchg
ret
pop
pop
push
mov
std
call
add
pop
adc
sarb
and
mov
sbbb
decl
jecxz
mov
sbb
stc
mov
dec
inc
add
fs
outsl
push
mov
ljmp
ljmp
xchg
lret
adc
cmp
lods
stc
and
mov
clc
push
out
jmp
jle
mov
imul
mov
test
and
lahf
cld
jmp
lcall
insb
cltd
inc
add
shll
fs
addb
data16
pop
lcall
mov
mov
mov
scas
movhps
jge
ficoml
stos
lcall
into
fimull
mov
mov
adc
jb
xor
mov
xchg
and
insl
call
loopne
cwtl
adc
pop
ret
add
pop
lret
jecxz
add
dec
jnp
std
incl
popa
lea
in
cli
andl
pand
xor
sub
lret
sar
xchg
xor
ficomps
leave
jle
xor
insb
xchg
cli
pushl
adc
push
inc
push
addr16
fwait
into
loope
movb
add
mov
jns
ret
mov
lahf
sahf
push
daa
dec
jge
jns
push
cmpsl
not
cld
push
dec
dec
in
or
call
cwtl
cmpsl
std
xchg
stc
mov
dec
test
stc
repz
or
js
dec
pop
decl
hlt
mov
pop
push
sbb
pushf
add
lcall
mov
jmp
and
xchg
sbb
in
mov
mov
in
in
mov
add
mov
sbb
pop
cmc
jp
daa
aam
pop
or
lods
dec
lret
scas
clc
jg
in
dec
aas
mov
dec
movsl
mov
jmp
mov
dec
push
mov
test
out
push
push
imul
int3
mov
call
cmp
popa
leave
or
add
aam
jecxz
mov
loope
call
dec
lea
shrb
push
fsubl
call
cmp
lods
push
mov
mov
test
out
fcompl
add
imul
das
cmpsb
decb
pop
out
fnsave
enter
aam
pop
adc
loope
lcall
int
test
pop
inc
dec
lock
add
out
and
mov
mov
ficoml
stos
lcall
dec
jns
sbb
mov
decl
dec
stos
sbb
rcrl
mov
inc
scas
incl
daa
test
or
out
add
in
dec
fidivrl
xlat
rcll
inc
pop
enter
lcall
mov
gs
cmp
xor
cmp
pop
popf
mov
cwtl
incl
mov
test
adc
inc
sub
js
pushl
enter
lods
dec
mov
jecxz
mov
not
les
cli
popf
sbb
xor
sub
orl
jp
jmp
lock
rclb
stos
das
push
ljmp
dec
push
adc
aad
fdivrs
shrd
push
ret
cmp
std
lcall
insb
test
pop
push
or
mov
pop
cmpsb
push
inc
movsb
test
push
xchg
jl
mov
loop
iret
jae
popl
bound
mov
push
lds
incl
les
jg
sbb
jne
push
jg
hlt
mov
std
pop
rcl
adc
ljmp
mov
cmp
scas
adcl
inc
and
into
jae
cwtl
add
inc
sbb
fwait
sub
and
adc
dec
mov
into
sbb
mov
and
add
push
push
stc
cmpsb
test
outsl
jmp
lods
mov
mov
int
mov
movsl
mov
enter
sub
mov
incl
jns
out
pop
inc
cs
mov
push
mov
lods
in
andl
xlat
mov
stos
cmp
cltd
fists
mov
cmp
lea
mov
inc
popf
or
and
rol
fadds
enter
and
nop
call
mov
das
mov
cltd
mov
out
enter
xchg
rcll
leave
icebp
std
dec
mov
mov
fstps
or
mov
int3
sub
fmulp
pop
cld
call
mov
pop
daa
out
lahf
sbb
dec
test
test
cmp
ljmp
xor
lods
dec
int
aad
outsl
lods
in
sbb
dec
not
jns
push
jmp
scas
dec
lahf
mov
cmp
dec
test
fidivl
decl
divb
xor
cmpsb
sahf
test
push
test
clc
mov
in
jmp
notb
add
push
daa
add
popf
sub
push
dec
push
mov
pop
loopne
adc
lea
pushf
sbb
enter
jecxz
inc
cmp
ret
adc
loop
mov
jae
outsb
jmp
jg
push
push
xor
jmp
cld
pushl
lods
mov
mov
sbb
sub
lock
mov
xor
stos
lcall
test
and
nop
dec
xchg
cmc
dec
push
and
cmpsl
mov
cmp
sub
mov
out
sbb
aam
mov
inc
sbb
or
pushf
sbb
push
dec
pop
cld
incl
push
aam
add
mov
lahf
std
push
movb
in
in
add
cltd
mov
in
jge
subl
mov
ja
int3
jbe
mov
mov
clc
outsb
in
nop
mov
cmp
addb
mov
das
mov
ljmp
cmpsl
push
in
out
cmp
push
fstps
roll
scas
pop
jnp
sbb
and
int3
fwait
cmc
cmp
mov
cmp
lods
xlat
bound
call
imul
mov
stc
xchg
int3
or
int
call
dec
jmp
ljmp
add
dec
and
adc
sbb
pushl
fisttpll
data16
adc
dec
clc
repnz
sbb
pop
mov
mov
test
testb
jecxz
sbb
pushl
incb
mov
fistpll
lods
mov
pop
out
mov
sbb
shrl
mov
in
imul
loope
jo
mov
in
xor
pop
mov
into
stc
incl
in
mov
fistl
movsl
mov
and
sahf
and
lods
js
loop
add
xorb
mov
sahf
lcall
add
mov
mov
sar
ljmp
fisttpll
ret
stos
adc
dec
and
insb
lret
xor
out
incl
pop
dec
adc
jle
popf
rcll
xchg
jecxz
gs
mov
decl
loop
dec
lahf
lods
mov
scas
sahf
xchg
cmpb
cmp
rcll
lcall
mov
mov
sub
lcall
pushl
cmpsl
ja
test
insl
insl
mov
xor
pushf
push
fcmovnb
repnz
sbb
scas
mov
ljmp
les
nop
sub
add
lcall
and
hlt
mov
push
loop
lahf
lea
shlb
test
ljmp
mov
outsb
sbb
and
lods
and
sub
mov
mov
jbe
into
mov
les
cltd
cmpsb
cmp
call
ficoms
cwtl
test
rorb
scas
ret
cmpsl
sub
lcall
lods
stc
scas
jg
push
shlb
add
int3
in
cmp
inc
push
sbb
adcl
sub
wbinvd
std
loopne
add
daa
or
mov
ljmp
incl
fistps
push
push
pop
sub
lea
mov
loope
aad
mov
hlt
inc
push
mov
mov
stos
jle
inc
fisubl
rol
push
icebp
data16
cmpsb
cwtl
adc
adc
xchg
es
fldcw
pop
or
outsl
arpl
adc
add
cld
xor
incl
fsubs
stos
cli
imul
inc
or
push
jb
push
lahf
mov
mov
xor
sub
pop
xchg
stc
insl
mov
sbb
cmp
push
cmp
jecxz
lcall
fisttpll
xchg
cmpsb
loop
push
fwait
mov
mov
pushf
cmp
mov
or
dec
mov
es
xor
lcall
push
mov
std
insb
xor
dec
and
std
pop
sbb
fists
sahf
bound
sbb
inc
cmp
incl
adc
scas
mov
dec
outsb
pop
test
call
inc
mov
mov
ret
subb
mov
ret
mov
jnp
call
jge
sbb
mov
adc
xchg
in
mov
push
in
mov
push
dec
mov
or
sbb
arpl
rorb
xor
xor
dec
bound
sub
lcall
pop
sbb
mov
int
mov
ret
lods
sbb
lcall
sti
mov
fwait
xchg
inc
jl
std
jmp
ds
mov
lds
or
pushf
stos
into
jp
mov
or
xchg
js
incl
loope
das
lahf
mov
adc
dec
jne
mov
mov
ret
ret
mov
cmp
cmp
aaa
xlat
sahf
dec
rcll
xchg
insb
mov
out
cli
mov
leave
sub
push
stos
lds
xchg
aam
push
mov
scas
mov
out
rcrb
adc
pop
dec
imul
jp
add
mov
mov
outsl
incl
push
lods
lcall
sub
mov
jno
mov
call
out
jmp
mov
iret
sub
cmp
xor
dec
inc
rcl
mov
xlat
dec
test
inc
std
ljmp
sti
and
jle
je
ret
sub
scas
inc
andl
mov
gs
loopne
call
pop
mov
and
and
mov
push
aad
call
loopne
scas
mov
adc
imul
cwtl
scas
xchg
clc
fdivrp
jg
jmp
mov
mov
cmp
mov
std
les
pop
xor
aas
cltd
cld
lcall
mov
stc
stos
or
fistl
lds
jg
add
scas
jnp
xor
outsl
movsb
jmp
ljmp
mov
cmp
or
scas
pop
je
or
sub
sarb
dec
jecxz
cmp
pop
push
inc
pop
fisubrs
fbld
adc
mov
mov
pop
into
or
jecxz
bound
clc
pop
cld
mov
sub
incl
pop
test
dec
in
rol
jnp
pop
or
insb
cs
ss
push
push
test
incl
cltd
mov
rcrb
mov
mov
rcll
das
xlat
fmuls
cmpb
push
ror
or
mov
pop
repnz
mov
fbld
loopne
mov
incl
dec
mov
sub
jno
add
bound
ret
pushl
clc
out
dec
lods
xchg
sbb
push
sub
hlt
cltd
sub
decl
cli
test
sub
xchg
xor
incl
iret
sub
outsl
mov
dec
test
enter
test
clc
cmp
fisttps
dec
mov
std
mov
sub
add
inc
sahf
mov
pop
leave
and
lcall
icebp
sbb
cmp
fdiv
pop
decl
and
cmp
outsl
pop
nop
es
inc
pop
es
int
lods
dec
mov
xchg
dec
xor
mov
pop
jno
out
mov
std
jmp
not
sar
mov
lea
pop
adc
mov
fildll
std
mov
xchg
in
pop
int
or
jmp
rcrb
adc
adc
in
ljmp
sub
mov
add
in
jb
push
mov
lahf
jg
add
gs
jl
sub
cs
das
sbb
cmp
push
jmp
mov
std
xchg
mov
lret
fdivr
andl
cwtl
add
loopne
and
mov
xchg
test
pop
sub
lret
mov
jl
sbbb
loope
outsb
icebp
lcall
sahf
movsl
adc
push
push
jns
cmp
push
cmp
pop
sbbb
xor
ds
fs
xor
add
mov
scas
mov
aaa
icebp
and
loopne
sbb
cmp
push
stos
push
add
fnsave
fistl
int3
push
push
lock
aaa
adc
mov
scas
test
scas
lcall
stos
sub
lcall
int3
lods
mov
mov
pushl
inc
mov
mov
in
push
cld
iret
insb
push
xlat
stos
mov
clc
xchg
mov
lea
mov
mov
test
mov
fnsave
inc
lcall
scas
testb
adc
dec
fsubrs
fcomip
pushl
stos
nop
mov
inc
adc
sahf
xchg
mov
cmp
sub
sub
push
sbb
jle
test
mov
leave
loop
sbb
ljmp
xchg
fidivl
test
aas
push
mov
jmp
jmp
ret
sahf
jns
pop
leave
into
mov
dec
mov
fmuls
cmpsb
push
push
push
clc
mov
jge
scas
push
out
cmp
mov
jb
clc
call
loopne
mov
popf
jge
jle
jp
pop
pop
stos
push
shlb
je
push
addr16
stos
loope
arpl
pop
sub
mov
jmp
push
shll
mov
lods
sbb
imul
mov
mov
and
out
ds
nop
test
sbb
xchg
mov
sub
ljmp
and
movsb
fdivp
icebp
sbb
jl
cmp
jbe
cld
out
mov
cmc
xchg
cmp
jmp
inc
les
dec
arpl
mov
icebp
movsb
dec
rcrl
push
xorl
mov
stos
and
in
and
xor
cmp
inc
test
out
iret
xor
push
jo
and
pop
lcall
sbb
notl
sub
dec
and
ljmp
test
inc
ds
ja
push
out
xchg
mov
cltd
cmp
lea
mov
cmc
data16
mov
mov
popf
mov
lahf
shrb
mov
mov
adc
mov
sahf
fnsave
pop
xor
clc
scas
enter
add
sbb
cmp
lcall
mov
sysenter
cltd
int
xchg
test
out
add
leave
sub
aaa
mov
pushl
dec
pop
out
mov
mov
jno
scas
mov
mov
leave
cwtl
dec
jo
pop
in
mov
in
mov
call
adc
lds
fs
mov
insb
pandn
jmp
jmp
mov
adc
jecxz
shl
jmp
test
imul
lcall
mov
int
jo
mov
out
mov
mov
push
bound
fbstp
jp
ja
loopne
cltd
stos
in
pop
cmpsb
mov
jns
jae
xchg
sub
cld
pushl
jno
scas
inc
mov
aaa
ret
shlb
test
mov
xor
sbb
mov
or
xchg
sahf
stos
mov
xchg
cmpsb
loope
jmp
sub
add
sbbl
or
lcall
mov
sarl
xor
inc
lock
mov
ficomps
pushf
mov
lods
popa
add
or
imul
in
lods
cmpsb
ljmp
fisubs
out
push
ret
mov
jbe
push
nop
mov
test
into
mov
mov
clc
mov
sbb
adc
lods
hlt
fcompl
mov
enter
loopne
dec
mov
adc
daa
adc
std
addr16
ljmp
aaa
jmp
or
push
mov
mov
inc
shll
mov
decl
pop
jle
mov
sbb
dec
sbb
add
incl
clc
xchg
loop
dec
cltd
and
mov
inc
xchg
int
cmp
cli
lret
jle
aas
repnz
cmp
push
mov
push
imul
mov
cld
jp
pop
xchg
inc
out
mov
pushf
xchg
mov
mov
dec
sbb
jne
mov
or
loopne
inc
jle
sbb
xlat
mov
loopne
call
sub
sarl
jno
and
repnz
pop
xor
add
mov
and
in
fidivl
cmp
jo
cli
shll
or
outsb
mov
sub
mov
mov
cltd
push
movups
xchg
insb
rolb
sbb
aaa
cmp
daa
jg
movsb
adc
insl
pop
pop
imulb
push
fst
jae
rorl
mov
aaa
js
insl
mov
add
les
pop
push
aas
popf
mov
xor
xchg
adc
pop
inc
pop
dec
cltd
scas
cli
pop
sbb
inc
push
pushf
mov
push
das
jle
mov
ljmp
mov
cmp
xchg
pop
and
ret
jge
jo
sub
dec
mov
in
push
imul
enter
push
cwtl
es
out
aam
out
lcall
out
sbb
jecxz
add
test
call
inc
faddl
std
inc
call
sbb
pop
jae
shlb
xchg
mov
imul
cld
stos
adc
cld
sub
imul
lahf
pop
mov
jg
sar
incl
jle
inc
inc
push
mov
sbb
pop
fxch
cmp
inc
addr16
es
and
xchg
aam
popf
push
add
mov
fcomip
imul
mull
mov
jae
out
cmp
clc
incl
add
stos
stos
pop
popf
pop
xchg
in
cmp
scas
dec
ljmp
mov
imul
dec
jp
addr16
fbld
mov
mov
fnstsw
jbe
jmp
int
sbb
pop
int3
fstpl
call
push
sub
adc
mov
popf
sbb
call
cs
adc
fisubrl
inc
ja
dec
lahf
scas
and
lahf
ss
cltd
push
inc
stos
movsl
pop
lock
pushl
or
push
add
add
mov
clc
out
adc
dec
sbb
out
sub
inc
scas
xor
cld
ja
push
ljmp
push
mov
inc
lods
pop
and
xchg
and
imul
shr
sub
stos
and
in
sub
mov
into
cmp
out
lods
and
mov
lahf
in
ljmp
push
lock
subl
cmp
fstps
cmp
call
push
fnstenv
scas
and
mov
shrb
add
mov
lcall
push
leave
mov
mov
test
in
mov
rolb
xchg
movsb
scas
scas
fidivs
stos
pushl
in
mov
mov
aad
shlb
cli
leave
scas
push
lds
adc
lcall
or
mov
pop
add
push
in
repnz
xor
stos
push
jecxz
test
jle
in
loopne
sub
pop
incl
cld
cmpsb
xor
mulb
movsb
cbtw
dec
lods
hlt
test
cld
add
test
subb
jbe
push
dec
fisttpll
sub
shrl
jp
sahf
mov
jbe
dec
nop
ret
mov
dec
dec
ret
sbb
sub
fmull
jg
add
arpl
adc
lcall
jmp
loope
test
lcall
cmp
shlb
or
and
sub
jg
pop
mov
lcall
stos
movsb
sub
call
xor
mov
es
xor
test
mov
adc
jno
mov
jbe
daa
fmuls
shl
adc
adcl
rcll
popa
xchg
lcall
mov
lcall
in
inc
add
fdivrs
sarl
jg
ljmp
inc
and
das
in
loop
icebp
fisubs
cmp
dec
rolb
dec
stc
dec
sub
or
push
pusha
add
call
mov
cmp
inc
mov
repz
sub
iret
cwtl
xor
jg
fdivrs
add
dec
lods
jge
pop
adcb
adc
shrl
fildll
pushl
stos
mov
aaa
lods
data16
mov
loopne
inc
inc
xchg
lcall
cmpsl
add
imul
jmp
cmp
cmp
pop
jnp
jns
shr
mov
mov
shlb
sbb
pop
addl
jae
es
leave
jecxz
lods
fucom
dec
sub
jg
in
push
pushf
push
pusha
pop
jae
int
cltd
or
sbb
divb
adc
cli
xchg
xchg
dec
ret
sub
cld
jg
lods
push
dec
mov
xor
scas
cmp
mov
dec
push
fisttpl
xor
stos
sub
sub
cmp
xor
loop
xor
xchg
fdivrl
inc
adc
ds
sbb
mov
test
pushf
lcall
mov
mov
mov
sbb
inc
cmp
addr16
mov
lahf
aad
loope
mov
sub
jg
mov
push
inc
sub
mov
xchg
scas
or
jbe
dec
cmp
ljmp
incl
sub
push
stos
fsubrs
sti
and
mov
test
std
decl
mov
sub
mov
mulb
mov
mov
pop
movsl
fcmovu
mov
jne
subb
call
sub
filds
ljmp
jns
adc
mov
cmc
ss
fldenv
mov
imul
xchg
mov
lea
mov
cmp
aad
lock
stos
mov
mov
xor
out
inc
icebp
lcall
lret
jecxz
dec
loope
into
push
sub
push
inc
or
xchg
nop
jo
push
ret
mov
inc
mov
test
push
jmp
enter
adc
add
pushl
xor
jne
dec
or
mov
push
push
and
add
out
push
dec
push
mov
cwtl
loope
mov
inc
xchg
fisubrs
sub
pushl
std
call
push
inc
mov
scas
testl
cmp
xchg
sbb
lcall
adc
inc
pop
aaa
and
sub
popf
lods
ret
aad
pusha
lret
and
or
ljmp
sbb
sete
roll
lahf
scas
sbb
popl
mov
inc
sub
mov
lds
push
mov
fwait
push
decl
adc
mov
cmp
mov
jmp
leave
adcb
shlb
loopne
or
aad
xchg
fistl
lcall
sbb
cmp
fisubrl
ss
mov
ss
xor
push
pop
lods
scas
ds
mov
cmc
nop
mov
outsl
add
sbb
xor
mov
fdivr
fcmove
mov
mov
call
push
xchg
lret
mov
and
jmp
ljmp
jmp
mov
out
fisttpll
xchg
mov
lcall
aad
xchg
lods
push
xchg
sub
cmp
enter
test
adc
loop
ss
fucom
jl
pop
xor
filds
stos
jmp
scas
xchg
scas
or
xor
repnz
xchg
lcall
lds
loope
sbb
into
lods
dec
cwtl
xchg
pop
xchg
cmp
sbb
dec
jns
lahf
sub
mov
push
mov
scas
stos
daa
lds
das
sar
movsl
xchg
cmpsl
repnz
fdivp
lds
cmp
push
aaa
push
popf
ljmp
adc
xchg
jmp
adc
mov
aad
xchg
ds
mov
and
fstpl
mov
aam
loopne,pn
inc
lcall
fcomp
xor
cwtl
loopne
dec
fcos
das
clc
fisttpll
xchg
mov
adc
mov
xchg
mov
push
sahf
movsb
mov
jmp
jmp
inc
das
flds
stos
cltd
insb
sti
ja
int3
mov
shl
in
mov
rcl
fsubrl
sbb
call
or
loopne
jmp
xchg
fdivrp
pushl
inc
xchg
sti
rclb
in
loope
push
push
nop
lock
mov
or
fdiv
pop
xor
aad
mov
out
dec
adc
cmpsl
mov
xchg
je
mov
and
inc
stos
inc
dec
rcrb
inc
sub
sbb
inc
xchg
in
imull
jns
jge
addr16
fldt
cmp
mov
xor
fdivr
out
inc
mov
inc
or
mov
scas
mov
loop
mov
mov
xchg
mov
cld
decl
pop
lods
mov
add
jle
fwait
into
fisubl
movsb
and
cmp
jmp
xchg
aam
mov
xchg
sahf
test
mov
in
or
sub
outsb
mov
inc
hlt
mov
sub
into
inc
inc
incl
fwait
mov
inc
fcmovnb
and
incl
and
lcall
scas
mov
push
mov
adc
incl
mov
cmp
sbb
push
jne
dec
lea
xor
ljmp
fstl
mov
bound
jmp
lcall
arpl
pop
push
gs
scas
sbb
adc
xor
dec
in
idiv
lcall
fstpt
movsl
mov
int
pop
nop
or
xchg
addr16
dec
fadd
ret
fcomip
inc
mov
in
subb
sbb
repz
clc
je
cld
mov
sbb
scas
and
mov
mov
dec
xchg
popf
hlt
sub
call
xor
mov
pop
inc
adc
xchg
pop
shlb
lods
inc
hlt
pop
mov
lcall
and
sub
loop
leave
lds
jl
mov
scas
stos
mov
pusha
mov
pop
cltd
push
push
sbb
imul
jmp
stos
loopne
pushl
test
pop
or
cmpsb
xchg
inc
sub
and
mov
decl
inc
mov
rorl
sbb
jg
dec
cmp
mov
decl
out
das
fnstsw
mov
xchg
call
scas
inc
int3
pop
stc
xchg
call
loopne
inc
add
xor
xchg
lods
jns
call
mov
adc
jmp
lcall
and
sbb
das
push
sub
mov
mov
mov
mov
lock
push
aas
adc
sub
movsl
add
pop
inc
clc
inc
roll
xor
std
clc
in
in
push
xchg
jl
mov
xor
fcomip
pop
inc
data16
lock
or
inc
outsb
sbb
out
sub
lea
mov
incl
sub
fsts
jae
xchg
jl
scas
sahf
mov
dec
cmp
aaa
sbb
decl
imulb
or
lods
out
pop
das
add
jg
jg
jnp
inc
push
mov
fsubrs
fnstsw
jg
sarl
clc
jmp
shl
xchg
mov
mov
out
jmp
lds
xchg
sub
test
loope
jb
adc
rcl
sub
xor
fisubrs
mov
sub
ljmp
mov
nop
ret
dec
lret
mov
mov
insb
add
rorb
push
sbb
jp
cld
ljmp
xchg
jb
add
stos
insl
add
pop
nop
mov
and
lock
stos
jecxz
push
mov
cmp
imul
and
xor
daa
or
mov
mov
ffreep
inc
jecxz
xchg
sub
testl
iret
cmp
shr
xchg
ljmp
mov
clc
pop
or
mov
pop
lods
sbb
add
adc
cmp
or
or
sub
testb
movsb
add
loope
shlb
aad
cmp
scas
push
lods
mov
pushf
fwait
lods
inc
and
nop
loop
sbb
adc
out
pop
push
push
jle
cli
stos
out
shlb
mov
sbbl
cwtl
loope
test
sbb
xor
mov
mov
call
ret
xor
je
ror
adc
cltd
jns
ljmp
aam
and
fcomip
jg
stos
lahf
dec
rol
xor
dec
fimull
outsb
int3
add
ljmp
push
pop
lea
jo
aas
ja
pop
or
jae
dec
dec
scas
call
sbbb
lods
push
ret
jg
pop
adc
in
int3
mov
insb
pop
lret
lret
in
das
push
sarb
inc
cmc
and
loopne
mov
mov
push
push
pusha
inc
push
sbb
mov
jl
cmovb
loopne
push
clc
out
test
mov
mov
decl
fdivl
jnp
hlt
push
test
call
ret
xchg
xchg
cltd
and
jmp
adc
rclb
and
push
arpl
lods
popf
faddl
adc
mov
lcall
ds
xchg
adc
or
adc
jecxz
incl
jbe
lret
push
dec
addb
sti
pop
pusha
mov
pushl
lahf
outsl
dec
add
in
outsb
fs
dec
scas
xor
ja
xchg
push
sbb
or
jl
jle
imul
or
fs
or
and
in
xlat
bound
and
push
call
daa
mov
xchg
stc
aam
mov
call
fdivs
sahf
pop
mov
jp
pop
lret
scas
add
icebp
jecxz
mov
stos
dec
sbb
add
inc
xchg
call
cmp
sub
cmpsb
lea
push
sbb
pop
mov
and
lods
fbld
leave
test
sub
lcall
push
in
insl
in
dec
pop
inc
sub
and
jg
decl
inc
filds
iret
sub
pop
mulb
add
and
dec
je
lret
scas
jecxz
mov
fisubrs
lock
ja
icebp
cmp
testl
push
imul
cmp
mov
push
push
and
fst
or
mov
into
clc
mov
mov
or
or
and
xor
pop
popa
call
incl
int3
xor
ljmp
subl
dec
loopne
cmp
mov
fcomi
jo
add
sub
and
fst
xchg
call
lahf
decl
mov
cltd
add
gs
les
call
mov
pusha
mov
je
adc
hlt
imul
mov
mov
fisttpll
ljmp
and
pop
push
mov
sbb
or
les
insb
cltd
mov
sbb
xchg
mov
adc
add
cmp
and
cmpsb
jle
inc
mov
xor
xchg
cmpsb
shll
lds
outsb
mov
rorl
inc
std
pushf
adc
out
or
jl
out
jle
sub
in
add
adc
inc
sub
ljmp
clc
mov
xor
jmp
lods
inc
les
jnp
decl
test
daa
lret
aaa
mov
fsubrl
cld
pop
loopne
xor
sbb
inc
in
sub
push
lods
mov
xor
mov
xor
mov
or
loop
and
sub
data16
stos
sub
mov
in
fstps
sub
mov
fcmovnu
arpl
xchg
fdivl
or
mov
sub
add
lcall
fcomps
loop
adc
xor
mul
xor
xor
cmp
ljmp
dec
clc
outsb
out
jge
shlb
cwtl
imul
cld
call
lods
out
sbb
jecxz
mov
mov
mov
inc
imul
rcr
jl
jne
arpl
incl
xor
movsb
mov
sbb
xor
in
inc
xchg
and
std
push
sub
ljmp
push
pop
les
cmp
or
out
adc
xlat
lds
jne
inc
mov
orl
jmp
and
or
cld
mov
popf
pop
nop
or
cli
lds
outsl
call
sahf
in
pushaw
jnp
jmp
mov
out
push
shrl
mov
mov
out
mov
fisubs
pop
adc
das
daa
xor
xchg
or
iret
fsubs
cmpsl
fimuls
lock
push
lahf
dec
jbe
fidivl
fstpt
loope
jbe
and
in
int3
test
sbb
pop
lcall
pop
jl
xchg
mov
xlat
cmc
ud0
scas
mov
or
decl
mov
fwait
mov
adc
rolb
or
inc
pop
mov
js
mov
repz
add
jmp
outsl
nop
xchg
repnz
popa
jnp
pause
or
xchg
sbb
test
jle
jnp
push
jbe
mov
in
mov
das
test
sbb
hlt
test
mov
ja
pushl
fidivrs
push
or
frstor
dec
cld
push
push
out
or
decl
lea
je
lods
sahf
repz
sti
mov
cmc
dec
mov
test
ficompl
mov
jecxz
leave
sbb
ljmp
fisttpl
mov
test
aad
adc
out
fnstenv
and
and
inc
adc
test
mov
xor
or
pop
std
ljmp
xchg
mov
fildl
mov
repnz
lock
incl
adc
in
lods
in
xchg
mov
xorl
jecxz
mov
loop
mov
add
push
push
mov
arpl
mov
inc
mov
cmp
je
inc
mov
add
cmpsb
mov
repnz
inc
adc
sti
gs
jo
sbbl
decl
jmp
push
movsl
jno
cld
inc
mov
std
mov
jb
lock
lahf
xchg
outsb
lea
mov
fcoml
mov
cs
clc
into
jno
or
dec
cmc
lods
fdiv
dec
xchg
or
jmp
adc
cld
mov
testb
mov
cmp
xor
fdiv
std
dec
aad
xorb
xchg
test
stc
cld
lahf
mov
dec
dec
mov
inc
jg
cmp
and
sub
scas
mov
sbb
jge
pop
add
lock
jno
lods
jl
ljmp
sar
jl
hlt
push
movsb
xbegin
mov
or
sahf
stc
dec
sbb
mov
lea
mov
dec
mov
fimuls
in
sarl
dec
popf
push
mov
nop
sarl
xchg
xchg
pop
or
xor
xchg
test
cld
test
mov
mov
mov
sbb
fildll
push
loop
test
mov
mov
xor
pusha
fucomip
cmp
cld
into
mov
pop
into
pop
pushf
loope
add
cs
inc
int3
sbb
fbld
cmp
fimuls
jmp
js
shrb
lcall
cmpsb
insb
stc
fbstp
leave
jle
push
mov
shrb
mov
mov
sub
loopne
pusha
mov
xor
cwtl
jb
incl
xor
mov
xor
xor
sub
mov
movsl
sbb
lcall
mov
jp
leave
mov
insl
bound
subb
xchg
ljmp
clc
and
movsb
mov
pop
mov
xor
mov
inc
movsl
push
mov
sbb
xor
int
int
sub
scas
cli
movsl
cltd
lods
pusha
scas
mov
out
sbb
lds
jecxz
jp
lret
mov
xor
cwtl
xchg
enter
dec
mov
js
mov
dec
into
addr16
xor
fdivr
add
test
dec
pushf
in
fistpl
cli
dec
push
out
sbb
ds
repz
mov
or
mov
sahf
push
xchg
imul
mov
pcmpgtw
xchg
fadd
and
jno
pop
testl
mov
loopne
cmpsl
lods
in
xchg
popa
jae
aad
rol
lret
mov
jbe
mov
fwait
inc
jns
ja
test
movsl
call
jo
dec
lcall
xchg
js
jecxz
fcomps
je
movl
clc
push
leave
xchg
lcall
popa
loopne
mov
mov
imul
int
or
inc
shll
decl
and
in
sbb
aam
and
outsb
stc
sbb
shr
mov
shl
push
jecxz
fdivrp
out
cli
dec
dec
test
dec
add
sbb
inc
mov
stc
mov
lcall
hlt
popa
and
adc
loop
lcall
negb
sbb
int3
mov
sahf
rcl
xchg
into
shll
stos
sub
insl
jge
in
sbb
fcomip
push
pushl
sub
loop
push
cs
push
in
cli
push
jns
sahf
flds
call
outsb
cmpsl
arpl
xchg
movsb
inc
gs
jne
add
fld
hlt
test
cmc
jmp
inc
jmp
mov
lret
mov
aad
add
imul
negb
cld
lcall
xor
leave
outsl
xchg
insb
mov
aad
mov
xchg
shlb
aaa
and
add
leave
decl
hlt
bound
lock
inc
sbb
lcall
sub
lcall
ret
scas
stos
mov
dec
repz
cld
pop
mov
ss
decl
out
mov
sbb
rol
pop
pop
or
xor
lret
aaa
push
lea
decl
aam
sahf
pop
sahf
enter
xchg
js
and
dec
mov
sti
iret
cmpsb
lds
dec
daa
hlt
ret
mov
add
addr16
je
or
incl
lods
jmp
and
pushf
rcr
rorb
dec
dec
mov
sahf
rcl
scas
xor
lods
std
test
sahf
cmpsb
stc
scas
mov
stos
fisttps
ljmp
rcr
mov
inc
lret
popf
jae
sti
loope
jg
int
mov
sahf
pop
fistpl
inc
call
mov
fsubs
dec
hlt
jge
or
testl
dec
sbb
outsl
clc
jmp
push
enter
fnstenv
loop
xchg
mov
push
dec
jge
add
mov
fstps
inc
add
stos
xor
xchg
jns
lret
xor
push
outsl
int
in
push
add
jns
lcall
or
mov
add
sub
pop
test
jg
mov
jae
pop
mov
mov
fimull
lcall
addl
cmp
add
add
ret
dec
pop
pop
push
push
shlb
sbb
jg
lcall
cmp
cmpsb
rcrl
mov
in
dec
cmpb
ljmp
lahf
adcb
gs
aam
outsl
ficompl
inc
lahf
jg
decl
sbb
scas
test
xchg
dec
adc
insb
lock
je
dec
loopne
push
jnp
stos
loop
sarl
inc
mov
sub
scas
test
stos
fisttpl
mov
mov
mov
clc
lcall
pusha
inc
leave
pop
sub
sbb
inc
adc
fidivrs
xchg
sar
dec
fcomip
inc
jp
insb
insb
das
pop
add
not
mov
or
jmp
mov
insl
mov
push
adc
cmpsl
mov
lods
dec
adc
adc
sub
mov
ja
mov
aam
fsin
cmp
out
test
mov
int3
jnp
imul
out
pop
jnp
lret
pushl
jmp
cwtl
add
jns
aad
outsb
ja
testl
lahf
cwtl
or
fstl
mov
ljmp
jle
in
sbb
mov
mov
xor
fs
push
ret
mov
pop
lret
lock
mov
cmpl
int
in
jecxz
data16
aaa
sbb
mov
or
loopne
out
in
cwtl
bound
stos
dec
adcb
cltd
fdivr
cmp
jl
sub
mov
jmp
jle
sbb
jecxz
add
mov
iret
daa
sub
aas
sbb
test
aas
lds
call
pop
add
decl
in
outsb
xor
scas
outsb
ror
jmp
nopl
jg
decl
fidivs
fs
andb
scas
call
cs
adc
mov
adc
or
mov
dec
cmp
out
adc
outsl
xor
mov
js
add
mov
ja
jl
mov
adc
loope
push
xor
pop
add
inc
inc
call
lods
movhps
ljmp
cli
std
sar
dec
stos
out
inc
cmc
pop
pop
fdivr
stos
pop
mov
pop
xlat
jbe
mov
inc
outsb
pop
loopne
pushl
insl
sarb
shrb
sbb
addr16
push
mov
test
scas
pop
call
outsl
xchg
imul
jbe
pushf
mov
lea
jl
in
pop
popa
add
cld
inc
dec
mov
jg
pusha
out
lahf
sbb
lahf
cmpsl
outsl
outsb
or
jg
push
jns
xchg
mov
cld
das
int3
fwait
xchg
jae
cmpsb
cli
and
lret
mov
decl
push
rolb
in
jbe
pop
push
cmpsl
dec
mov
mov
movsb
cmp
pushl
sub
fsubp
jp
loopne
hlt
mov
dec
mov
in
inc
push
cltd
decb
and
outsl
roll
insb
aad
mov
jnp
dec
fdivr
adc
dec
out
push
xor
ss
ret
test
fmuls
lods
sub
int3
cmovp
jg
js
push
jnp
mov
mov
dec
and
add
out
ljmp
jnp
add
mov
insb
cld
nop
enter
push
roll
push
mov
cmp
add
mov
mov
testl
jb
add
push
into
sti
sti
jne
and
dec
int
or
jbe
inc
mov
decl
adcl
sbb
pop
jo
pop
pop
pop
aam
in
pop
sub
cld
call
xlat
stos
inc
outsl
jp
pop
push
dec
pushf
pop
dec
and
xor
mov
pushl
push
jbe
dec
sahf
xor
sub
adc
es
inc
xlat
jp
stos
sub
out
mov
xchg
pop
jp
jle
lcall
andb
fstl
scas
not
int3
sbb
jp
xor
inc
mov
sbb
divb
cld
clc
jg
sbb
lods
lods
dec
cmpsb
xlat
push
shlb
and
cwtl
mov
sub
int
or
mov
pop
lcall
ja
ja
mov
imul
jae
insb
xchg
js
jnp
fcmovu
mov
jg
aaa
and
ss
jno
dec
push
inc
hlt
adc
test
adc
sub
out
lcall
xor
fstps
cmp
mov
mov
leave
negb
mov
mov
pusha
dec
incl
pop
leave
mov
repz
pop
xor
dec
cmc
jg
pop
pop
fucom
insl
popf
mov
ret
inc
cli
jp
mov
add
rclb
out
adc
inc
jmp
mov
idivb
je
mov
xor
inc
movsb
inc
push
xchg
jb
mov
or
fwait
scas
out
push
nop
cld
push
addl
stos
das
enter
fdivrp
cmp
cmp
lods
lock
int
jmp
test
shlb
outsl
lahf
mov
lea
cmc
ljmp
cli
mov
sub
int
insb
aaa
cmpsb
and
hlt
lcall
inc
into
cmc
js
mov
cmp
adc
ljmp
mov
adc
fidivl
xchg
ret
pop
nop
xchg
pop
lods
jae
ljmp
jb
andb
idivb
outsb
ficompl
stos
mov
push
in
pop
sub
cmp
out
sub
popa
lahf
pop
negb
frstor
or
pop
adc
cld
scas
dec
ljmp
loopne
push
push
dec
or
mov
enter
mov
outsl
std
pop
cli
pushl
sbb
push
addr16
jg
imul
mov
pop
sub
hlt
testb
mov
andb
cwtl
fidivs
fildll
ja
outsl
pop
mov
lds
into
sbb
push
mov
subl
sub
loopne
insl
into
inc
pop
ljmp
pop
mov
sbb
fildll
imul
jg
scas
adc
sahf
mov
mov
mov
sahf
mov
xor
fisubl
hlt
shrl
scas
mov
or
mov
mov
movsl
add
shll
loop
jae
xchg
bnd
scas
push
shll
das
mov
pushl
xchg
loope
and
scas
adc
std
dec
scas
lret
inc
mov
jne
or
mov
adc
pop
mov
clc
into
and
pop
mov
das
clc
pushl
mov
mov
inc
aam
repnz
in
adc
ss
mov
call
fistps
jne
fnsave
aam
push
test
hlt
daa
ret
mov
in
push
sbb
cmp
lea
mov
push
aam
into
mov
pop
pop
add
pop
mov
push
mov
lcall
std
pushl
leave
dec
mov
xchg
mov
inc
cmp
adc
jle
cltd
sahf
add
pop
dec
mov
xor
mov
cmp
mov
dec
lock
decl
stos
add
loop
or
xchg
enter
les
add
push
mov
fldl2t
pop
aaa
lock
pusha
xor
fs
stc
cmp
mov
lret
mov
fwait
pushf
and
nop
insl
shrb
xchg
pop
jecxz
std
lret
insl
sahf
mov
fld
push
testb
ja
jns
out
mov
aam
inc
mov
aam
ja
push
roll
and
incl
into
jmp
jbe
cs
inc
repnz
pusha
std
negb
les
mov
cmpl
jecxz
mov
and
lahf
mov
inc
in
ja
pop
lods
in
mov
dec
push
jmp
incl
jbe
into
sbb
and
negl
jne
add
mov
std
and
test
cmpsb
in
mov
add
inc
popa
fstpt
jle
ss
or
pop
dec
push
std
ljmp
jge
xlat
jmp
mov
mov
loope
mov
mov
add
pushl
nop
scas
push
cs
pop
lods
jno
jb
mov
decl
jno
pop
gs
mov
bound
sbb
int3
mov
inc
dec
pop
dec
test
mov
cli
mov
aad
inc
mul
mov
lret
cmp
mov
lcall
orl
mov
shll
mov
je
adc
push
fildll
mov
xchg
fsubs
push
ror
fst
mov
sar
cld
cmp
fstl
scas
jno
sub
cmp
jg
into
xchg
dec
stc
cmp
xor
jg
add
dec
filds
push
insb
push
mov
add
lock
or
sub
mov
inc
fimuls
iret
loop
or
mov
incl
incb
scas
push
jbe
xchg
cwtl
iret
pop
jno
pop
cmpsl
inc
or
mov
dec
pushf
insl
lcall
dec
subb
push
mov
mov
sub
cmp
ja
shlb
outsb
xchg
sbb
jo
xchg
sarl
ret
jmp
loop
jae
inc
test
jb
mov
lret
jbe
add
or
pop
mov
adc
jg
hlt
sbbl
xor
mov
mov
jle
xchg
xor
adc
decl
mov
inc
ljmp
comiss
ss
ret
mov
xor
jmp
xlat
loopne
adc
xchg
sub
sti
sub
les
aaa
ret
ret
aam
out
jp
adc
daa
leave
outsb
xchg
add
push
sbb
cs
jp
push
ljmp
scas
cmp
pop
xchg
jae
dec
shlb
adc
decl
scas
add
jecxz
mov
dec
aas
fwait
jb
iret
jl
nop
scas
inc
and
leave
push
xchg
cmc
incl
or
inc
jmp
aaa
push
ja
lcall
sti
in
add
sti
out
mov
push
mov
not
call
jecxz
adc
ds
scas
xchg
repnz
nop
mov
push
push
push
out
icebp
popa
xor
lock
xor
gs
cmp
aad
std
sbb
addr16
hlt
lds
cmp
das
mov
xchg
scas
and
jae
mov
fwait
scas
jp
xchg
and
lea
cli
decl
jb
loopne
stos
insl
test
imulb
pop
inc
daa
or
or
addr16
sub
jg
pop
loopne
mov
inc
mov
std
imul
mov
shlb
aam
dec
cmp
mov
insl
sbb
jp
call
lods
daa
xchg
rcr
test
add
mov
int3
movb
shlb
sbb
lcall
out
lret
nop
mov
out
insl
pop
popa
cwtl
enter
loope
dec
mov
pop
addb
mov
out
cmc
jecxz
cmp
pop
jo
pop
hlt
cmp
push
outsb
test
sub
and
mov
call
pop
rep
sahf
pop
in
inc
pop
int3
mov
lcall
rcll
mov
aaa
scas
fisttpll
movsb
mov
or
pushl
jbe
int
dec
loope
mov
push
loope
ret
mov
xor
jno
inc
jge
or
sarb
or
xchg
stc
insb
call
mov
mov
stc
ret
sbb
inc
in
push
stc
and
into
popa
pushl
xchg
data16
mov
jge
inc
loop
push
fcoml
fadds
ljmp
shr
push
push
mov
inc
icebp
jae
jle
ds
jge
mov
pop
cltd
negl
jge
mov
mov
pop
add
jae
dec
sbb
add
pop
stos
inc
dec
jnp
int
xor
mov
test
push
pop
jb
daa
xchg
lret
sbbl
insb
mov
and
stos
roll
in
loopne
sarl
push
lret
lea
dec
in
mov
data16
or
pop
cmp
clc
jg
repz
xor
cmp
mov
xlat
ljmp
loop
adc
sbb
repz
dec
cmp
out
xor
and
lcall
jle
mov
sbb
adc
arpl
in
pusha
mov
mov
mov
mov
pop
push
xor
inc
mov
imul
mov
push
data16
scas
fs
aad
cwtl
jecxz
lret
inc
jl
daa
jno
cmovl
lds
stc
rcrb
divb
or
add
mov
mov
subb
mov
jp
add
inc
stos
pop
mov
into
sbbb
movsb
xchg
push
xor
ljmp
cltd
jg
jbe
iret
xchg
lods
mov
bound
or
dec
mov
or
inc
insl
dec
pop
scas
adc
sar
fisubrs
adcl
call
fcom
xchg
clc
outsl
push
inc
aaa
idivl
das
mov
fidivs
adc
popa
daa
and
int
inc
dec
push
lret
and
ljmp
mov
cmp
adc
stos
lret
and
repz
outsb
cs
fnstenv
sarl
ljmp
dec
mov
adc
xchg
ficomps
or
mov
push
mov
aas
mov
xchg
xor
xchg
push
in
sub
das
movsb
addb
lcall
push
fs
or
xchg
je
test
cmp
clc
and
push
dec
xchg
push
dec
aam
scas
clc
bound
push
test
out
pusha
out
loopne
or
call
push
idivb
jne
movsl
inc
roll
xor
sub
ret
jmp
shl
mov
lret
dec
add
pop
adcl
sub
dec
pop
push
or
call
push
add
cmc
test
cmp
testb
ja
call
or
data16
sbb
stos
cmp
push
sub
ud0
sbb
and
out
fstpt
js
sahf
sub
test
pushl
scas
push
jp
out
bound
out
gs
pop
jl
inc
fisubrs
std
scas
and
xor
ds
jne
imul
call
dec
mov
inc
imul
sub
data16
pushl
mov
mov
cmp
loopne
add
outsl
xchg
lret
mov
sub
mov
fisubrl
pop
pushf
adc
jecxz
gs
mov
cmp
test
add
xchg
mov
stos
jmp
mov
jno
push
add
mov
movsl
nop
lock
popf
std
add
roll
fdiv
jp
mov
and
lock
inc
mov
ljmp
out
xchg
out
repnz
sahf
int
sbb
mov
testb
or
ja
shlb
lds
sbb
mov
adc
ss
jnp
stos
cmpsb
adc
xchg
xchg
into
filds
pushl
std
lcall
push
mov
ret
out
add
adc
mov
dec
lock
fisttps
test
repz
imul
jb
mov
and
pop
jno
das
stos
cli
pop
mov
or
inc
inc
fistps
inc
incl
cmp
inc
push
dec
test
hlt
dec
aas
addl
and
cmp
or
add
sbb
fdivl
sahf
xor
mov
push
jb
jp
pushf
adc
jg
xor
lret
clc
out
std
jge
sbb
pop
adc
stos
pop
mov
movl
push
xchg
push
fld
call
sub
fisubrs
lea
test
dec
mov
outsl
or
mov
jb
pushf
mov
pusha
xor
jl
mov
sub
sti
push
jbe
jnp
push
jl
jg
or
push
adc
aad
icebp
sti
xlat
dec
jp
fists
aad
negl
test
hlt
add
cmpsl
xchg
aas
loopne
add
mov
mov
add
cwtl
aam
xor
lea
cmp
mov
lods
xor
movsb
jne
push
add
loope
lcall
jecxz
and
xchg
sbb
adc
xchg
test
std
sahf
das
sahf
cltd
fcoml
decl
jge
popf
dec
fisubrl
dec
push
popa
call
xchg
adc
out
fmul
loopne
scas
clc
mov
or
sbb
enter
pop
jns
pop
mov
cmp
mov
into
test
out
cli
cmp
cltd
xor
xchg
icebp
lret
push
or
into
push
sbb
pushl
xchg
add
mov
outsl
sub
add
push
sbb
leave
cld
push
test
insl
jle
test
push
call
addl
cltd
pop
and
push
pop
dec
cmp
sbb
sbb
bound
adc
adc
sub
dec
cltd
lock
and
add
iret
cld
dec
addl
imul
mov
in
cs
push
cld
lret
or
mov
or
test
xor
xchg
dec
cld
inc
mov
pop
fadd
add
dec
inc
jg
subl
sbb
dec
mov
enter
rcrl
xchg
jg
mov
addl
loope
incl
dec
loopne
lss
imull
cld
push
adc
cs
cwtl
and
or
xchg
mov
inc
jecxz
add
lock
pushl
data16
sti
mov
mov
xchg
dec
and
or
loope
pop
add
push
jae
out
pop
push
lcall
jb
jae
sbb
cld
cmp
lcall
mov
incl
xchg
xor
adc
mov
jmp
cmpsl
and
mov
scas
jle
ljmp
test
jns
jbe
fldl
aad
fwait
repz
test
shlb
clc
cld
jo
test
bound
mov
loopne
stos
jp
jecxz
cmp
dec
add
loop
mov
xchg
pop
cmpsb
sub
call
push
fldlg2
sub
mov
mov
js
mov
mov
jmp
cld
decl
mov
xchg
popf
in
jle
lret
cltd
mov
negl
test
bound
inc
shrl
mov
add
pop
pop
dec
jnp
jo
decl
pop
or
cli
sbb
pop
mov
dec
and
int3
ds
cwtl
pop
ffree
decl
call
pop
je
ljmp
pop
pop
mov
jnp
dec
sbb
sbb
inc
lcall
xor
jmp
leave
xchg
jle
jo
sbb
mov
dec
repz
lods
loop
loop
ss
add
adc
call
test
jp
adc
adc
lods
and
neg
scas
jp
mov
jns
std
fistps
pop
cs
cmp
jo
dec
in
and
or
ret
fstpt
dec
and
cmp
jmp
lret
imul
popa
std
movsl
js
inc
loope
dec
mov
cwtl
shlb
sub
lret
pop
jb
cmpsl
xchg
rorl
fcomip
mov
dec
sub
test
push
cltd
push
jnp
pop
dec
cmp
lcall
add
cmp
cli
notb
mull
mov
scas
fisubl
push
test
xor
lcall
gs
sub
lea
xor
std
decl
test
jle
loop
mov
push
xchg
ret
fcom
mov
ljmp
inc
push
popf
mov
ds
cld
fildll
pop
xor
jmp
jp
testl
iret
jg
test
lret
inc
push
and
imul
dec
js
jl
jo
fcmove
push
das
aam
scas
xchg
shll
push
mov
xchg
mov
add
sub
xlat
movl
xchg
adc
dec
int
mov
cmpl
cmp
outsl
subb
and
nop
stos
push
pusha
enter
or
stos
adc
dec
sub
push
mov
insl
fs
add
jmp
inc
sahf
mov
decl
sub
ss
fidivl
cmpsb
fiadds
inc
mov
xor
outsl
push
pop
fs
aad
roll
xchg
fs
in
mov
mov
dec
mov
push
dec
cli
outsl
and
fadd
shl
dec
jb
jecxz
cltd
or
inc
dec
cld
xchg
ja
call
leave
loop
mov
or
push
mov
fisubrs
dec
fstpl
test
pushl
push
mov
aas
stc
mov
test
and
cld
cld
sbb
loope
test
cmc
cmp
loope
lret
outsl
dec
sub
stc
test
std
sbb
lods
dec
lcall
pushl
ss
jl
es
push
ds
pop
push
adc
mov
repnz
and
scas
ljmp
mov
outsl
mov
test
or
jge
jns
pop
and
mov
jmp
sbb
ds
xchg
push
push
adc
js
arpl
in
xchg
mov
jmp
and
adc
jle
subb
jb
into
or
enter
mov
scas
xor
mov
fimuls
jb
mov
dec
push
mov
decl
sub
fs
sbb
mov
adc
lods
loopne
add
in
cli
fistpl
cli
aaa
jo
jmp
adc
mov
xorl
adc
mov
in
jle
movsl
push
cmc
scas
push
xorb
pop
movsl
insl
std
cmpsb
push
mov
leave
xchg
out
andl
jg
mov
push
dec
jno
nop
andl
mov
push
pushf
hlt
jmp
sbb
pop
lock
mov
and
jnp
pop
dec
xlat
imul
je
movsl
data16
fildll
into
pushf
or
and
xor
xor
mov
xchg
fsubrp
cld
call
flds
fs
scas
push
sbb
test
dec
out
jmp
add
aad
lret
rcrb
in
xchg
mov
dec
loope
lahf
mov
out
xchg
or
pop
ljmp
pop
loop
dec
pushl
cmpsl
dec
adc
scas
add
sti
jns
mov
loop
mov
fcmovnu
test
sbb
sub
pushl
cmp
jnp
or
lret
push
mov
cld
pop
pop
mov
and
pushl
xor
dec
enterw
dec
xor
xlat
dec
cmp
mov
sahf
mov
in
pop
fstl
loope
xlat
sbb
dec
push
mov
movsb
dec
dec
clc
fisttps
or
scas
cld
jno
fimuls
out
inc
into
nop
adc
into
loope
mov
xchg
sti
ror
aam
inc
dec
sahf
or
incb
lret
hlt
int
lock
push
outsl
jmp
shlb
push
and
mov
sbb
aam
insl
dec
fwait
adc
stos
fcomip
mov
fdivr
mov
in
rolb
mov
call
into
pop
mov
mov
mov
mov
mov
xchg
sub
incl
sub
repz
sub
fldt
sub
in
jg
clc
sub
push
pusha
call
sub
sbb
sub
mul
sub
js
hlt
inc
jmp
lock
mov
sub
and
jp
or
lcall
inc
dec
loopne
fdivl
gs
stos
fistpll
ror
outsl
inc
inc
fbld
xchg
mov
sahf
add
jl
pop
inc
insb
cmp
sub
inc
repz
mov
mov
cmp
fidivrl
jno
mov
jb
addr16
ja
enter
leave
pop
pop
fwait
cwtl
int3
inc
add
mov
sbbb
rorl
jbe
cmpsb
lcall
sub
inc
add
nop
push
popw
mov
roll
pop
loopne
into
mov
xchg
add
inc
sub
loope
lret
cmp
mov
ret
pop
popf
test
jg
pop
sbb
lcall
into
outsl
fcomps
add
sbb
add
push
sub
mov
aam
das
xchg
xchg
fists
and
aas
ds
mov
dec
sub
movsb
call
cld
iret
mov
test
test
pop
push
in
xor
aam
or
xchg
in
nop
mov
sbb
jmp
jns
lret
sti
aad
aad
pop
lcall
sbbl
adc
jg
rcll
mov
decl
cltd
fisttpl
lret
ss
xor
pop
hlt
test
fisttps
out
imul
sar
add
dec
repnz
add
fisttpll
stc
dec
pop
adc
mov
loope
xor
ljmp
adc
loope
aaa
push
lret
and
aaa
pop
jecxz
sub
push
iret
pop
jecxz
std
decl
gs
scas
shr
sbb
loopne
subl
sti
outsl
pop
push
push
jbe
cmp
call
lock
push
imul
mov
xor
repnz
pop
dec
test
mov
jmp
adc
jo
loopne
ds
lcall
push
jl
subps
stos
lds
and
cmpsb
xor
cltd
loopne
adc
xchg
adc
dec
scas
sbb
fcomip
xor
subl
adc
mov
lods
aad
push
and
out
clc
lcall
fisttpl
loop,pn
cs
push
dec
ljmp
lret
jmp
jae
jmp
out
push
into
aaa
in
mov
xchg
jmp
sar
mov
aad
stos
mov
pop
test
mov
lret
fidivrl
repz
jecxz
int
and
daa
test
xchg
aam
push
cmp
cwtl
ljmp
fsubl
sbb
mov
aam
xlat
inc
push
mov
xchg
fisubrs
or
imul
adc
fldl
cmc
and
adc
imulb
call
std
ja
out
jmp
idivl
enter
ljmp
enter
lods
incl
cld
add
mov
and
je
and
sti
or
pushl
std
int3
push
mov
test
ffreep
pop
cmp
push
fistpl
or
mov
ljmp
pop
xor
jns
fs
jb
mov
or
sbb
add
mov
call
mov
sti
cmc
cmp
and
decl
daa
pop
or
xchg
adc
nop
xchg
mov
test
sbb
hlt
incl
out
mov
pop
pop
mov
inc
stos
sbbl
inc
pop
cmpsb
xorb
nop
pop
xor
xlat
popa
sbb
popf
mov
or
push
lcall
and
sbb
call
pushaw
mov
ljmp
arpl
popa
mov
jns
adc
ljmp
stos
cli
and
sub
fcomip
lcall
jg
fstps
lods
push
xor
push
clc
aas
mov
outsb
adc
pop
in
push
jnp
mov
xor
mov
nop
pop
into
mov
jno
cmp
ljmp
incl
adc
rcl
jg
fadd
int3
les
test
mov
xchg
or
cmc
mov
sub
jl
mov
lock
scas
dec
sbb
fcmovu
push
xor
decl
mov
sub
xorl
scas
jecxz
jmp
fcmovnbe
dec
add
insb
sbb
imul
xchg
inc
push
mov
loopne
push
mov
adc
jmp
cmp
xchg
daa
add
push
mov
test
lret
icebp
sbb
sub
jecxz
adc
andl
incl
popf
stos
dec
cwtl
or
and
sarb
and
es
jecxz
hlt
call
jmp
inc
mov
cmp
and
dec
gs
cld
adc
ds
add
mov
test
push
sbb
scas
scas
sar
decl
fidivrs
xor
ljmp
add
hlt
jg
lret
xor
in
mov
mov
ret
sbb
daa
cltd
bound
ljmp
or
or
jne
iret
imul
mov
cld
call
jl
test
jne
test
mov
xor
push
shl
lcall
inc
push
mov
lea
adc
jmp
decl
push
ja
pop
cmpsb
sub
xchg
mov
pop
mov
leave
add
and
es
add
jmp
add
shll
jl
dec
enter
lret
add
jg
inc
mov
mov
cmp
pop
dec
sbb
inc
or
inc
decl
xchg
adc
push
push
call
cmp
and
es
mov
repnz
cmp
decl
loop
inc
std
jnp
cwtl
inc
inc
or
lcall
fldl
mov
jg
in
push
fistps
push
mov
data16
andl
cmp
jns
xchg
ret
adc
repz
sar
xor
popf
cmp
mov
xor
xchg
pushl
mov
sub
adc
leave
mov
sub
sub
inc
insb
pushl
inc
in
xor
mov
andb
adc
gs
inc
jge
mov
mov
xor
or
movsl
cs
mov
imull
xor
aaa
cld
call
cld
fdivs
jo
xor
mov
pop
add
jge
jge
fsubrs
jg
inc
lret
xchg
subb
jnp
jmp
call
iret
cli
inc
test
cs
cmpsb
rcl
and
xchg
lods
or
sub
mov
or
ljmp
pop
std
mov
pop
xchg
mulb
push
pop
jno
add
inc
xchg
incl
ret
add
lea
add
popa
push
in
rcl
incl
xor
xchg
jp
lret
cmpsb
mov
stos
lds
adc
sti
insb
test
dec
aas
jmpw
and
decl
call
sub
add
arpl
adc
mov
add
inc
mov
mov
push
mov
and
cwtl
xor
into
mov
xor
call
cltd
ret
mov
sbb
pop
and
inc
sarl
loopne
push
xor
lods
mov
daa
fmuls
ljmp
add
xor
xchg
lock
pushl
mov
insb
sbb
fcoml
adc
jl
cmp
add
push
insb
add
dec
into
xor
sbb
shrl
push
jbe
nop
lret
xchg
and
decl
or
mov
mov
aaa
lods
mov
dec
les
cmp
and
rorl
das
mov
iret
jns
popf
gs
add
mov
fmul
adc
lret
xor
jmp
out
inc
int
test
push
insl
inc
call
jle
mov
push
mov
bound
loope
xchg
ljmp
sub
or
dec
jne
icebp
clc
stos
xchg
xor
push
loopne
jo
mov
andb
iret
and
decl
pop
xor
dec
sub
xor
xchg
adc
stos
jl
loope
decl
ljmp
adc
pusha
adc
jo
sub
and
mov
lcall
cli
add
jl
mov
adc
pop
add
adc
jg
jmp
lea
push
std
sbb
xchg
adc
pop
add
in
hlt
jb,pn
mov
scas
stc
mov
loop
pop
jg
and
add
mov
cmc
fistpll
shll
mov
incl
mov
jg
es
and
inc
inc
xlat
push
pop
cmp
insb
out
push
jmp
clc
ljmp
and
iret
push
pop
fimull
push
xor
push
xchg
jnp
ret
scas
pop
cmpsl
mov
movsb
mov
popf
push
and
pop
mov
mov
pop
inc
inc
insl
packuswb
jl
fists
xlat
cmp
es
cmp
gs
imul
sbb
add
mov
adc
int3
in
ja,pn
sbb
xchg
and
std
push
jne
mov
sub
cld
aaa
mov
mov
pop
ss
push
test
imul
clc
imul
dec
das
bswap
stos
sahf
loop
inc
sub
adc
fcos
ljmp
bound
xor
loopne
adc
mov
inc
push
data16
or
and
mov
cmc
jno
mov
dec
dec
scas
xor
arpl
into
ljmp
or
and
ret
sbb
or
fldt
icebp
dec
cs
in
ljmp
dec
add
xchg
sti
mov
push
testb
sti
pop
xor
push
cmpsb
decl
and
pop
add
pop
call
mov
cmp
mov
sub
sub
lods
pop
adc
dec
loopne
xor
das
inc
adc
in
cld
add
jmp
adc
or
pop
xchg
mov
pop
cld
mov
add
pop
mov
inc
push
dec
cs
ljmp
jecxz
mov
jge
hlt
loopne
mov
frstor
std
inc
adc
pop
mov
lcall
lret
and
insb
sub
lds
sub
pop
pusha
ja
jmp
mov
sub
sbb
call
jmp
popa
or
xchg
sub
jl
lret
into
inc
pop
lahf
xlat
aam
pop
std
cwtl
dec
sbb
add
mov
cs
push
test
daa
inc
mov
dec
stc
cmp
nop
or
scas
clc
ljmp
jbe
sbb
adc
sbb
fdivrl
ret
dec
xlat
lcall
decl
push
out
and
aaa
aam
fstl
sarl
pop
and
lcall
mov
ja
pminub
jmp
arpl
scas
add
bound
std
ja
push
lret
cmpb
dec
mov
pop
mov
dec
out
sub
add
pop
jae
lret
sub
and
mov
pop
test
dec
xchg
sbb
jmp
add
adc
movsl
sbb
add
incl
ja
ljmp
orl
pop
add
lcall
push
inc
add
xor
sbb
ljmp
mov
fdivrs
sub
dec
mov
test
pop
sbb
mov
push
cmp
lods
addr16
jp
xor
or
pushl
dec
push
fsts
inc
lods
jns
inc
divb
sahf
leave
adc
lods
cli
inc
cwtl
xchg
ret
jne
jg
inc
cmp
xor
addr16
rol
pop
outsl
leave
stc
xor
pushl
adc
scas
inc
or
sbb
mov
adc
cmpsb
imul
cli
jmp
cmc
incl
cld
cmpsb
lret
jle
jmp
add
inc
jns
pop
sbb
pushl
ja
jl
ds
jo
mov
xchg
mov
or
fistl
xlat
lods
sbb
lcall
aad
pusha
mov
push
gs
sbb
scas
jnp
enter
jp
jb
ljmp
clc
flds
dec
cmp
pop
or
add
mov
sbb
push
aaa
jns
adc
dec
incl
out
jbe
cmp
outsb
mov
jno
sbb
cmp
pushl
mov
mov
sbb
or
hlt
and
jno
xor
imul
sub
jo
and
pop
jo
xor
call
pushl
sbb
out
mov
cs
outsb
sahf
es
outsb
mov
and
decl
out
pop
sbb
xorb
cld
in
xor
jbe
les
ret
pushl
xor
cli
sub
xor
cmp
sub
xchg
out
mov
push
test
pop
lds
ljmp
cmp
mov
es
enter
lock
mov
test
sbb
fidivrl
sbb
ja
cli
fcomip
and
jns
cmp
xor
cwtl
sub
and
jmp
cmp
idivb
xchg
jno
and
loopne
mov
das
push
pop
subb
cmp
dec
jmp
xor
movsl
sbb
ljmp
push
test
sub
add
insb
dec
addl
or
xchg
jg
and
insl
xor
lret
sub
data16
call
xchg
push
mov
call
cmp
or
es
mov
aaa
fisubrl
sub
jmp
jbe
and
fwait
jle
mov
pop
shlb
fists
cmp
test
test
incl
mov
lds
jns
sub
push
daa
pushf
int
and
aad
or
pushl
xor
fldcw
xor
push
and
je
ds
xor
gs
fdivr
push
xlat
sbb
lret
test
movsl
int
sbb
pushl
or
and
mov
int
sub
mov
jb
inc
jg
pushl
int
daa
out
out
jb
lea
imul
fdivrs
pop
dec
rcl
aaa
or
xor
push
repnz
sarl
and
popa
jp
xchg
mov
fimuls
decl
push
and
dec
mov
mov
jg
jmp
or
mov
ficoml
pop
xor
adc
pushl
notb
es
iret
xorb
ss
call
and
loop
es
push
add
call
xor
xchg
and
mov
and
xchg
push
xor
xor
push
pop
and
test
and
xor
daa
sbb
loope
call
loopne
or
add
mov
daa
mov
rcr
aaa
inc
lret
mov
ljmp
mov
mov
pop
push
push
xor
inc
push
cs
ljmp
add
add
push
and
dec
xor
push
and
adc
pushl
mov
pop
das
leave
aam
lock
pop
and
inc
xor
pop
and
das
clc
ljmp
mov
mov
xor
or
mov
lret
inc
pushl
stos
sarl
test
jnp
xchg
mov
jb
scas
xor
dec
pushf
xor
push
shlb
push
cwtl
and
std
pushl
rorl
frstor
and
xor
cwtl
xor
jmp
jbe
xor
jb
xor
adc
adc
jmp
call
sti
and
rolb
ds
xor
nop
cmp
push
sahf
and
int3
dec
and
push
sub
mov
call
lret
adc
and
push
bound
sbb
mov
xchg
and
mov
movsb
jmp
and
xor
scas
and
into
and
jg
push
mov
int
arpl
cmp
ret
and
push
xor
jp
lcall
and
xchg
iret
and
add
icebp
xor
jb
cmp
lret
and
or
mov
jle
sub
dec
and
mov
es
loopne
mov
cs
sub
out
ljmp
shlb
clc
call
es
ljmp
imul
and
mov
xchg
pop
hlt
scas
sub
out
pusha
ret
rcrb
es
mov
pop
inc
sub
test
add
lcall
sub
and
imul
push
sub
aam
pop
es
jmp
mov
sarb
test
mov
jl,pn
pushl
sub
mov
out
xor
pop
and
and
mov
fidivl
pop
stos
cld
inc
and
xchg
out
and
jp
xor
push
and
mov
and
sub
pushl
mov
outsb
and
and
shlb
sub
add
es
and
push
pop
std
decl
push
daa
pusha
adc
cs
stc
sub
mov
sub
pop
and
hlt
ljmp
xor
xchg
sub
jle
data16
lea
lds
ljmp
and
push
and
movsl
mov
shrl
stos
xchg
fisubrs
lcall
clc
jns
mov
sub
clc
lea
rol
stc
das
fs
jmp
outsl
xor
jle
and
in
jo
mov
or
jbe
push
daa
lcall
loop
addb
sub
xor
sub
inc
xor
inc
sub
mov
mov
inc
test
sbb
repnz
pop
jo
dec
pop
push
xor
add
xor
dec
xor
popf
sub
ficoms
and
adc
add
sar
xchg
stos
sub
sbb
mov
mov
call
das
jecxz
ljmp
xchg
outsb
sub
sub
add
stos
sbb
adc
and
pop
sahf
sub
jmp
test
and
pop
mov
mov
mov
or
sbb
sub
sbb
loopne
ljmp
imul
call
pop
mov
xchg
idivb
and
fcomip
call
cmpsb
fimull
xchg
push
movsb
cmp
sub
jge
jg
in
jb
adc
sub
push
sub
pop
sub
icebp
lea
js
decl
loop
dec
popf
movsb
add
add
and
incl
sub
pop
dec
sub
popa
dec
sub
push
lcall
push
fnstsw
hlt
mov
xchg
daa
pop
xchg
sahf
mov
daa
pop
aas
scas
aaa
cld
outsl
push
mov
das
and
mov
inc
and
mov
outsl
ljmp
repz
add
push
sahf
pop
into
lahf
xchg
sub
dec
sub
pop
xchg
and
sub
lcall
sub
fisubrs
cs
sub
leave
jle
sub
mov
movsl
pushf
or
cmp
sub
cmp
ljmp
sti
sbb
mov
lahf
sub
mov
sub
mov
ljmp
aas
loop
inc
movsb
jg
or
sub
add
sub
add
sub
loopne
sub
fisttps
sub
in
and
in
lcall
jnp
sub
rcr
sub
loop
add
sub
cli
pop
sub
cmovbe
lahf
dec
fwait
add
aad
sub
sub
cwtl
cmp
inc
inc
pop
mov
pusha
sbb
pushf
push
pop
sbb
std
ret
pushl
outsb
mov
shrl
xchg
popf
into
sub
test
sub
jg
pop
stos
sub
jns
popf
sub
in
adc
sub
cmp
scas
clc
or
sub
cmp
and
out
and
orb
decl
or
fsubp
insl
sub
aad
sub
xchg
and
imul
sub
push
inc
dec
mov
or
les
mov
notb
push
jnp
and
inc
aam
mov
pop
sbbl
sub
insb
dec
in
push
add
ljmp
push
in
sbb
in
xor
dec
ljmp
js
andl
sub
incl
mov
dec
aaa
jbe
adc
ret
ret
pusha
mov
test
mov
cltd
dec
lcall
or
cmp
push
adc
adc
pop
clc
sbb
sbb
mov
or
mov
jno
mov
pushl
dec
in
pop
mov
sub
ret
shrl
add
cmp
or
hlt
pop
xor
sub
ja
jp
xchg
outsb
push
int3
incl
popa
add
inc
xchg
stc
ret
sbb
in
xor
fnsave
das
xchg
and
incl
adc
dec
push
sub
dec
cli
sub
std
or
or
xchg
fdivrp
fsubp
cmp
push
jle
sub
ds
lret
aas
nop
xor
sub
in
mov
ss
pushl
call
fcompl
xchg
imul
in
push
pavgw
inc
daa
fisubl
inc
icebp
pusha
repnz
call
clc
in
sub
mov
pcmpeqd
cmp
fimuls
addb
fisttps
inc
bound
pop
loopne
jp
lds
call
xchg
inc
pushf
rcrb
fwait
mov
lds
ja
pushl
cmp
push
xor
mov
push
ds
ss
lret
dec
mov
into
testl
inc
jns
scas
and
loopne
cmp
fwait
push
cs
icebp
incl
push
push
jecxz
push
aaa
mov
add
inc
mov
fbstp
incb
fidivrs
xchg
and
mov
dec
push
imul
adc
bound
dec
sbb
or
roll
stc
mov
cmp
mov
or
daa
xchg
je
aas
andl
ljmp
push
sti
lahf
inc
xchg
and
adc
gs
movsl
mov
and
movsl
pop
xor
and
incb
add
loopne
dec
adc
xor
mul
cmp
cwtl
push
pusha
xchg
or
pop
incl
cmpsb
adc
add
inc
add
daa
or
or
push
adc
push
lret
idiv
jg
inc
mov
jno
jb
je
stos
adc
fs
inc
cs
decl
xor
clc
add
call
mov
and
jmp
inc
nop
pop
and
js
inc
pause
call
adc
push
push
xor
cli
mov
jo
add
cmp
mov
mov
inc
adc
pop
call
mov
andb
leave
popa
cs
mov
jp
movsl
add
into
ljmp
clc
mull
jmp
stos
lods
push
xor
adcl
loope
out
inc
xchg
xchg
stos
adc
mov
shl
mov
and
or
mov
test
inc
adc
imul
mov
ja
and
iret
dec
xor
push
adc
push
or
xor
insl
inc
and
cmp
aad
outsl
mov
or
fnsave
adc
and
incl
xchg
adc
xor
inc
and
xor
sbb
das
cli
or
out
adc
sahf
mov
mov
jb
mov
cmpsb
and
cmp
sbb
into
and
lcall
and
scas
or
mov
and
out
gs
push
push
jp
repz
xor
add
push
lock
incl
data16
shl
adc
shll
inc
push
loope
adc
mov
scas
push
push
or
inc
bound
jb
mov
jne
and
pushl
inc
push
in
adc
mov
inc
mov
ljmp
out
cmp
add
push
push
push
imul
push
jmp
and
push
pop
data16
imull
ss
dec
push
sbb
outsb
fadds
jp
sbb
bound
lcall
repnz
cmp
jmp
sbb
push
inc
loopne
add
pop
xchg
dec
and
push
cs
test
adc
incl
xor
aam
sbb
fwait
sahf
ss
ljmp
jae
ds
jp
push
push
bound
pop
jbe
cmp
rorb
and
icebp
jge
mov
loope
incl
add
pop
mulb
xor
adc
or
inc
sbb
cli
jg
ljmp
add
jno
add
ss
loop
sbb
repnz
dec
cmp
call
mov
mov
dec
dec
xor
xor
call
adc
sub
or
lcall
jnp
addb
sbb
pop
je
push
insl
cmpsb
cmp
jbe
and
jbe
cmp
data16
inc
sub
mov
lcall
pop
adc
and
and
jg
test
push
push
outsl
mov
rcrl
pop
fs
inc
cmc
jmp
jecxz
and
negl
icebp
push
push
call
sbb
incl
adc
sbbb
pop
insb
clc
ss
mov
sub
jp
pusha
pushl
out
push
sbb
sbb
xchg
and
cmp
stos
and
jbe
cmp
mov
ss
rcrb
dec
clc
aaa
ja
and
add
jnp
stc
test
pop
and
and
mov
adc
insl
loope
incl
jecxz
cmp
cli
outsl
decl
mov
in
inc
aaa
mov
pop
rcrb
inc
call
std
repnz
sub
jmp
out
and
jmp
rcrl
dec
lcall
cmp
dec
pop
popa
xor
fcomip
pop
push
jne
aaa
pop
insl
push
imul
pop
call
aam
sbb
lret
mov
sbb
dec
or
jp
ds
dec
mov
movsb
outsl
sbb
cld
incl
lcall
cmp
mov
jl,pt
sbb
and
inc
push
push
sbb
outsb
fidivrl
pop
imul
dec
outsb
xor
add
ljmp
sbb
jecxz
sbb
icebp
nop
icebp
cmp
jg
xchg
out
icebp
jnp
cmp
dec
mov
cmp
jmp
sbb
pop
mov
jmp
ds
fndisi(8087
decl
mov
dec
ljmp
push
push
repz
shlb
push
imul
call
ret
fadds
jp
adc
sbb
cmp
push
cmp
decl
adc
and
mov
cmp
std
sub
pop
movsl
idiv
aaa
dec
aad
pop
jmp
xchg
cmp
loopne
mov
loope
out
sbb
mov
mov
push
aam
test
push
sbb
aas
sbb
cld
lcall
fs
cmp
incl
dec
push
sbb
push
cmp
add
lret
sbb
imul
insl
sbb
loope
cmp
jmp
loope
jbe
push
jle,pn
cmp
scas
sbb
dec
and
xor
mov
in
arpl
xlat
jne
stos
out
into
cmp
push
mov
lcall
cmp
test
mov
mov
xchg
add
sbb
lret
leave
sbb
repnz
mov
in
sbb
fistps
jns
mov
mov
fwait
jle
jg
sbb
dec
pop
sbb
mov
call
add
call
cmp
xlat
repz
cmp
push
push
incb
sbb
mov
sbb
or
jb
sbb
push
xchg
cmp
inc
jbe
mov
cmp
les
xchg
adc
mov
jae
and
push
aam
push
jno
rclb
inc
inc
dec
loop
call
mov
push
push
cmp
stc
dec
cmp
push
jo
adc
push
or
adc
sbb
les
orl
cmp
pushl
rol
jecxz
les
xor
sbb
test
ret
insb
mov
adc
dec
lds
add
adc
pop
mov
adc
push
inc
sub
mov
mov
das
fisttps
test
incl
cld
call
push
jb
in
push
push
push
imul
shlb
cmp
ljmp
outsl
xchg
xor
jne
test
add
mov
dec
or
incl
aam
mov
mov
jne
push
data16
pop
dec
outsb
sbb
jmp
push
mov
loope
rcrl
inc
idivb
mov
dec
adc
scas
sub
pushl
mov
cmp
stc
jle
xchg
outsl
call
hlt
adc
andb
xor
incl
or
std
adc
int3
mov
push
jp
inc
leave
loopne
std
push
pop
inc
mov
scas
jecxz
int3
add
pushl
inc
lahf
jp
sbb
out
inc
push
push
les
call
testb
mov
lds
dec
das
sar
negb
cmp
or
call
inc
pop
dec
out
shrb
lret
jnp
xchg
lods
mov
inc
cmp
mov
add
movsl
scas
mov
shl
sahf
decl
jo
fidivrl
stos
bound
pop
data16
jg
pushf
mov
incl
mov
mov
imul
xchg
sub
lods
lcall
cmp
adcb
or
fdivrl
adc
pop
cmpsl
lcall
xchg
popf
mov
scas
xchg
and
mov
mov
mov
push
mov
add
out
sub
and
add
ret
or
lcall
or
stc
inc
in
xor
arpl
in
lcall
cld
or
je
out
push
in
mov
or
lock
ds
cmp
fsubrs
mov
xor
mov
jg
out
xorl
in
test
mov
je
enter
mov
icebp
push
das
sarb
sub
lds
clc
xor
or
cmp
ljmp
cld
adc
fisubrs
andb
out
loope
mov
sbb
jg
mov
push
hlt
jp
mov
inc
inc
mov
das
clc
call
xchg
sbb
jb
pushf
test
xchg
icebp
insl
mov
call
icebp
mov
rcrl
push
inc
mov
lahf
imul
aad
inc
andl
shll
das
in
dec
sbb
je
inc
and
jg
add
mov
xchg
lea
adc
adc
jl
jle
incl
xor
xor
stc
insb
adc
loope
clc
shrl
cwtl
dec
mov
cli
ljmp
xor
imul
imul
nop
lcall
repz
repz
xchg
pop
mov
mov
xchg
jo
adc
jle
inc
adcb
out
incl
jae
aaa
add
cs
scas
dec
clc
add
push
mov
hlt
fsubs
push
lret
jmp
das
adc
fisttpll
sbb
mov
scas
xchg
adc
rcl
fildll
xor
jg
pop
push
subb
icebp
scas
adc
jmp
out
mov
les
stc
mov
dec
mov
pop
imul
mov
pop
cwtl
push
cwtl
sbb
out
out
es
int
pop
jns
sbb
or
loopne
push
ja
mov
insb
es
pop
fsub
xor
inc
test
mov
call
je
arpl
mov
jns
loope
stc
adc
pushf
add
mov
out
mov
out
dec
popa
outsl
rcll
loopne
incl
push
mov
ljmp
sbb
mov
lcall
sub
push
sahf
push
mov
std
add
out
lods
push
xor
cmp
mov
lock
adc
push
mov
add
repnz
adc
push
and
jg
xor
lcall
mov
pop
mov
call
test
mov
ljmp
jbe
sub
test
sahf
or
jne
insb
daa
sub
adc
sahf
std
out
fidivrs
decl
mov
jne
dec
shlb
loope
cli
cmp
lcall
push
rclb
jmp
jbe
ret
dec
push
push
ja
ljmp
les
or
pop
push
je
mov
jnp
add
adc
jmp
inc
sar
xor
jge
or
xchg
add
pop
pushf
cmp
pop
lock
push
or
jmp
out
shrl
or
mov
out
clc
ljmp
imul
jne
outsb
leave
fs
sarb
test
lahf
sbb
ljmp
mov
jae
and
fidivl
mov
mov
add
mov
out
pushl
je
dec
leave
push
out
pushf
mov
mov
inc
je
pop
out
sarl
incl
repnz
xchg
insb
or
js
out
dec
lods
dec
lcall
repnz
or
jb
mov
cltd
push
jge
mov
or
pushl
ljmp
shl
pop
dec
fidivs
or
cwtl
add
mov
cmc
or
lret
into
sti
pusha
adc
in
or
call
test
incl
imul
sbb
jb
push
in
or
outsl
into
sbb
lret
cmc
or
test
or
pop
jle
mov
test
shr
nop
cwtl
outsb
scas
lret
fdivl
fdivs
mov
sti
pop
lock
push
fwait
xchg
ja
mov
mov
lods
fmulp
jmp
cmp
inc
mov
out
mov
int3
push
sub
pop
in
in
shrl
testb
add
lcall
es
clc
loopne
addr16
aas
mov
jb
adc
sub
lcall
das
cmc
stos
dec
or
ljmp
adc
loope
jne
pop
aam
aaa
xchg
xor
mulb
cmp
mov
or
iret
jnp
insl
jno
fsubs
mov
push
adc
popa
jge
lcall
mov
out
jae
das
adc
imul
sub
jmp
mov
mov
jmp
subl
movsb
mov
jne
inc
pop
icebp
fldcw
clc
aad
lcall
jg
mov
lcall
shrl
mov
jecxz
jnp
pop
pop
loopne
cmp
jg
mov
dec
je
lods
in
add
cmpsl
xor
rep
aas
cwtl
adc
and
jp
or
jns
arpl
sub
xor
idiv
in
das
push
cmpsl
mov
in
ljmp
ljmp
jne
jl
jmp
xchg
jns
or
add
xchg
leave
add
ljmp
out
sti
jp
push
mov
xchg
xchg
mov
cmpsl
pushf
jp
lea
cmp
adc
movsl
popf
jne
adc
rorb
sub
aam
in
fstpl
push
jmp
movsb
orb
cmp
push
cmpb
xor
repz
cwtl
cmp
inc
cmp
pushf
pop
jae
xchg
imul
mov
das
fstpt
lea
xchg
or
push
jmp
into
and
scas
subl
or
stos
pop
fisubrs
decl
sbb
inc
in
enter
push
sbb
and
jle
jecxz
in
jmp
fs
jmp
dec
jo
push
sti
shlb
adc
pop
bound
mul
stos
std
ljmp
inc
js
sub
mov
sahf
sub
push
add
fisubrs
cld
lods
nop
int
jle
rolb
mov
in
mov
call
scas
add
pop
js
and
scas
jmp
mov
pusha
push
bound
call
mov
iret
ljmp
add
imul
xlat
out
fdivrp
incl
les
fldt
loopne
cltd
jnp
pusha
rcrb
sub
push
jb
mov
or
mov
cmpsb
dec
push
xor
cwtl
sub
dec
arpl
jg
inc
mov
mov
jle
pop
fsubrl
push
mov
cmp
xor
mov
incl
repz
data16
add
push
push
add
ud0
lcall
aad
xchg
add
xor
pop
jne
push
jb
outsl
paddb
adc
bound
xor
fcmovnu
jns
pop
mov
xor
pop
xlat
mov
in
loop
push
mov
leave
ljmp
adc
jg
add
std
imul
or
jb
xorb
lret
sar
pusha
int3
xor
repnz
push
pop
push
dec
or
ja
xchg
imul
aam
inc
dec
mov
int
movb
mov
and
das
sti
cmp
jge
push
cltd
fxch
inc
popa
jne
enter
fstps
pop
daa
cmpsb
mov
je
call
pop
inc
and
lods
outsl
scas
jno
fistl
fcomip
lret
negl
adc
jg
cli
dec
adc
mov
repz
das
jle
ljmp
xchg
outsl
incl
int
jp
cmpsb
scas
cmpb
push
pop
xchg
pop
dec
lcall
cmp
mov
sahf
in
pop
mov
xchg
cmpsb
pop
sbbb
or
loope
filds
decl
bnd
cmpsl
scas
gs
loopne
out
inc
mov
mov
subb
xlat
pushf
adc
hlt
fstpt
filds
push
push
jmp
xorl
ljmp
lret
fs
inc
mov
add
push
test
sub
jmp
sub
iret
out
mov
adc
mov
inc
bound
nop
jbe
jp
ljmp
mov
jl
cmc
lds
dec
lcall
imul
jns
leave
push
fldenv
bound
rcrb
dec
sar
js
push
mov
fnstenv
jno
add
adc
enter
push
sub
data16
mov
scas
mov
stos
pushl
incl
test
xor
mov
or
add
jne
sub
pushl
push
imul
fidivl
lods
add
mov
sti
and
dec
xor
decl
add
lcall
mov
cs
mov
push
jae
cmc
add
dec
jp
pushl
and
mov
xorb
mov
movsb
mov
pop
cs
inc
push
push
or
insl
popa
test
or
hlt
fdiv
js
xchg
sbb
cld
jmp
in
stc
pop
roll
subl
filds
adc
out
cltd
lods
pop
add
sub
and
push
or
pushl
std
fsubr
cmc
popf
negb
inc
pushf
add
mov
jg
lds
or
movsl
es
push
push
shll
gs
ds
fadds
adc
add
sarl
inc
imul
cli
and
enter
aaa
sti
add
jo
es
pop
ljmp
call
push
scas
cmc
fs
dec
sbb
sub
imul
cltd
pop
mov
jmp
movl
push
ja
mov
mov
lock
cmp
jmp
ss
sbb
je
in
cmp
sub
shl
lcall
mov
adc
sub
jnp
sbb
fldcw
les
mov
push
jp
incl
adc
jbe
repz
or
data16
popa
push
out
bnd
or
out
fstl
push
jo
call
out
push
movsb
add
xor
ret
jl
sbb
test
and
ljmp
addb
jge
sbbb
loop
or
add
xchg
into
dec
mov
push
fcmovbe
std
xlat
push
ds
fs
lcall
rcrb
sub
xchg
insl
enter
push
pop
jo
mov
add
xlat
jno
sbb
pop
cmp
clc
loopne
mov
jno
fildll
jmp
jae
subb
in
movsb
xlat
mov
nop
cwtl
mov
lock
mov
mov
xlat
daa
dec
into
loop
adc
fbstp
enter
pop
cmp
mov
outsb
jle
js
loopne
or
sarb
decl
jnp
stc
ja
pushf
adc
adc
or
mov
jno
push
xor
sti
div
ja
fisttpll
mov
add
test
mov
repz
or
push
mov
jns
sahf
mov
call
movsb
in
popf
dec
bound
lahf
lods
out
mov
imul
push
out
mov
out
add
inc
or
orb
fwait
add
call
cmpl
decl
jp
add
in
jb
stc
movsl
dec
jb
fwait
icebp
mov
sub
cmp
iret
mov
push
sbb
push
mov
fsts
shlb
sbb
outsb
pop
cli
scas
mov
jmp
dec
cmpsb
outsl
push
sbb
mov
cld
icebp
dec
decb
lock
cmp
mov
imul
jg
jns
scas
stos
xchg
sbb
jb
pop
pop
sarb
pop
mov
push
mov
in
iret
xor
xchg
mov
add
sub
jno
pushf
fimull
cmp
jne
dec
iret
mov
push
int3
iret
outsl
aas
imul
push
sarb
dec
imulb
cmp
pop
int
add
fidivrs
lods
ss
dec
int3
jae
push
stc
hlt
dec
cmpsb
pop
jp
mov
cmp
mov
mov
mov
pop
jb
jp
rolb
movsl
into
mov
lock
push
lock
cld
cmp
loop
adc
xchg
enter
fildl
insl
cmp
int
pop
push
and
insb
shlb
inc
xor
outsb
ret
loopne
cld
inc
je
mov
mov
jo
mov
mov
lods
mov
mov
push
int
inc
push
mov
mov
std
pop
push
mov
lds
jl
inc
sbb
mov
nop
sbb
insl
mov
mov
jns
push
loope
scas
mov
notb
or
fcmovne
insl
push
gs
mov
pop
les
mov
les
lods
clc
dec
out
scas
mov
push
mov
into
ficompl
sub
insl
imul
xchg
xchg
jmp
push
clc
xchg
movsb
adc
clc
in
imul
lods
mov
push
xchg
xchg
iret
push
lret
jnp
push
sbb
sub
push
dec
mov
into
mov
mov
mov
out
scas
mov
push
xor
insl
cmpsl
push
push
test
cmpsb
push
cmpsb
sahf
loopne
mov
or
idivb
push
cmpsb
mov
mov
push
jo
je
sahf
push
test
mov
push
mov
sarb
inc
nop
sahf
into
or
mov
push
scas
mov
lods
cmpsb
push
mov
or
mov
push
adc
mov
sub
cwtl
xor
nop
sbb
orb
movsb
inc
pushf
idivl
mov
imul
lock
sub
mov
pop
imul
pop
mov
xchg
and
xchg
mov
xchg
mov
xchg
clc
cmp
mov
std
push
mov
imulb
imul
outsl
ficoml
xchg
cwtl
push
scas
push
push
jbe
cmc
rorb
out
int3
out
in
testb
ret
mov
sub
or
mov
lea
xor
xchg
add
lcall
out
mov
push
cmpsb
mov
push
into
mov
aad
mov
xchg
idivb
mov
pop
dec
mov
pop
shlb
ss
call
cs
cmpsb
xchg
mov
jle
push
mov
add
push
shrb
cs
fcoms
nop
mov
out
push
mov
or
nop
adc
ret
iret
icebp
scas
cwtl
cmp
push
xchg
data16
cmp
push
ds
mov
out
jno,pt
mov
int3
jb
or
push
dec
mul
push
cmp
movl
call
sub
sahf
ljmp
ljmp
mov
shr
fisubrs
in
adcl
cld
xor
push
iret
mov
and
outsl
fcmovnbe
mov
ds
dec
push
dec
or
push
sub
jbe
push
ljmp
imul
mov
jbe
cld
movsl
push
push
mov
xchg
mov
out
imulb
es
mov
sbb
cmpsb
gs
lcall
mov
push
fbstp
cmc
cmp
cwtl
jne
shr
in
lock
xchg
testb
int
cmc
mov
movsb
dec
outsb
fsubp
divb
dec
scas
insb
outsb
test
cmpsb
mov
add
jae
mov
mov
inc
test
dec
mov
jo
mov
inc
xorb
cld
cs
lahf
divb
add
dec
mov
dec
mov
jg
outsb
scas
cmpsb
pop
push
inc
sti
ds
into
jle
xchg
jo
loope
mov
push
dec
repnz
lock
aam
add
cmovle
sub
xchg
lods
pop
mov
scas
pusha
sbb
leave
pop
xchg
fwait
dec
mov
jbe
out
mov
decb
push
pop
stc
dec
jp
ds
adc
jbe
outsb
in
je
adc
notl
mov
cmp
pop
mov
push
fsubrl
push
jbe
dec
fiadds
jbe
out
mov
push
insb
notl
push
leave
lcall
loopne
ficoms
mov
pop
push
rcl
xchg
mov
sarb
push
mov
mov
mov
sahf
mov
notb
mov
mov
mov
out
push
mov
adc
ficomps
dec
mov
data16
mov
insb
push
mov
cwtl
cwtl
jns
nop
fildl
dec
notb
jo
mov
push
jb
data16
dec
bound
add
inc
dec
divb
adc
in
xchg
outsl
fwait
add
aam
dec
jb
add
bound
std
mov
pusha
mov
cld
dec
inc
mov
jno
into
or
mov
test
add
movsl
leave
push
adcl
inc
mov
out
or
xorb
mov
push
add
mov
lock
ja
add
xchg
ret
xchg
test
pop
push
sar
ss
pop
mov
pop
cltd
push
mov
sbb
cmpsb
mov
mov
lds
out
lea
mov
pop
out
or
adc
ss
mov
imul
sti
dec
mov
shlb
lods
js
movsb
jge
jle
mov
xorb
outsl
add
push
dec
fwait
sbb
mov
xchg
mulb
add
lock
call
repnz
or
push
in
cmp
mov
outsb
mov
in
sub
or
fstpt
scas
popf
roll
mov
mov
clc
fbstp
add
jo
repnz
stc
dec
outsl
sar
lcall
lahf
out
mov
outsl
popa
xor
inc
mov
jmp
jge
cmp
jae
push
inc
and
js
mov
and
lock
call
das
addr16
sub
rorl
mov
push
add
jge
mov
inc
add
sahf
cwtl
dec
and
incb
scas
push
movsb
cmp
das
cli
xor
ljmp
jge
jle
fbstp
mull
sbb
mov
lahf
xor
insl
jne
stos
sarb
mov
rorl
paddsw
push
mov
daa
or
insl
cmpsb
cmpsl
incl
inc
lds
and
sub
pusha
shrb
decb
cmp
lock
sbb
dec
ret
sarb
pop
mov
push
xor
out
mov
inc
lret
inc
adc
jmp
push
dec
sarl
inc
cmpsb
scas
mov
notl
call
adc
push
xchg
fnstsw
sbb
push
and
pop
cltd
mov
in
mov
sbb
aam
popl
cmc
xor
inc
pop
pusha
mov
xor
testl
mov
push
out
jo
ja
call
lea
testl
ljmp
xor
dec
xchg
cltd
pop
sbb
dec
mov
cli
js
vmovsd
dec
test
call
inc
cld
in
sub
popf
or
jo
popf
std
mov
outsl
push
lahf
clc
jae
out
enter
mov
insb
jge
cs
lods
inc
mov
add
call
xor
das
mov
or
adc
jg,pn
add
or
push
mov
rcrl
repnz
add
stc
lahf
sahf
notb
imul
leave
push
or
cmpsb
cmp
mov
notl
lahf
bound
out
hlt
mov
xchg
or
mov
xor
push
mov
push
hlt
jmp
inc
push
orl
in
and
push
dec
ljmp
and
mov
add
in
add
int3
mov
inc
lods
cmp
ss
stc
imul
push
mov
push
jp
or
push
mov
add
test
decl
or
sbb
mov
push
push
pop
dec
sub
cmpsl
adc
outsl
push
pop
mov
add
bound
jp
cwtl
bound
loope
push
stos
cli
call
cwtl
sbb
shll
insb
sub
imull
mov
das
mov
pop
jecxz
xchg
mov
movsb
fdivs
push
pop
pop
mov
out
or
decl
gs
mov
mov
inc
jno
mov
pop
jae
cmp
stos
incb
les
mov
movsb
ds
test
xorb
add
add
jno
inc
mov
pop
pop
add
mov
push
pop
mov
clc
ljmp
add
mov
inc
push
push
mov
sarl
imul
add
ljmp
cmpsl
ret
add
clc
pop
mov
outsb
mov
mov
push
xor
cs
es
ljmp
sub
push
xchg
cmc
scas
mov
adc
pusha
jp
mov
mov
nop
mov
mov
hlt
mov
pop
ret
sbb
lea
movsb
dec
insb
mov
jg
stos
inc
dec
mov
xchg
push
cmp
sbb
cli
lahf
scas
addr16
mov
xchg
fwait
mov
xchg
repnz
mov
adc
pop
xchg
xor
pushl
decl
in
xor
and
ret
insl
push
xor
pop
or
sub
decl
fwait
test
lds
enter
test
loopne
adcb
fldcw
out
jmp
imul
cmpsb
inc
ljmp
ljmp
add
cs
inc
mov
pusha
out
jg
mov
scas
xchg
add
pop
movsl
dec
fldt
cli
and
addr16
mov
inc
mov
test
mov
jne
push
push
pop
push
mov
movsb
rol
cmpsl
int
stos
cmp
and
scas
mov
mov
adc
shrl
inc
cwtl
cmp
jns
stc
test
xchg
ret
push
lods
repnz
sbb
xchg
das
loop
loope
push
insb
clc
sub
jmp
out
push
push
lods
pop
xchg
hlt
pop
pop
and
les
test
ret
in
mov
aas
inc
mov
in
and
mov
bnd
push
dec
sbb
mov
cmp
xchg
jns
push
xchg
lea
cmpsb
popa
call
out
mov
lds
out
out
jno
mov
mov
femms
imul
dec
mov
in
xchg
jnp
push
cmpsb
lods
add
out
sub
mov
popl
hlt
xor
hlt
adc
jp
ja
loopne
call
movsb
pop
add
add
mov
decl
andb
xchg
fidivs
sub
pop
lret
mov
push
nop
and
or
call
cwtl
jmp
mov
adc
lret
lcall
lods
dec
ret
scas
outsb
cmp
adc
mov
call
jg
mov
pusha
test
lds
lock
or
ja
ds
fcoml
mov
decl
dec
hlt
push
rcll
subl
pop
dec
cmpsl
aaa
enter
ja
mov
and
jne
xchg
je
xchg
inc
scas
adc
mov
arpl
dec
outsb
in
jmp
pop
call
adc
pop
add
outsb
adc
stc
scas
data16
nop
aaa
dec
stc
jae
mov
fisttpl
sbb
inc
push
nop
insl
test
mov
or
add
pushf
pop
es
dec
scas
mov
xchg
std
call
add
movsb
jbe
mov
and
add
call
mov
daa
lds
ret
scas
dec
mov
xchg
add
pop
cli
lcall
mov
push
out
aad
push
mov
inc
jecxz
xor
punpckhwd
and
sahf
adc
fildll
ljmp
icebp
ret
mov
xlat
lcall
push
xchg
das
sahf
add
pop
mov
push
pushl
in
mov
std
call
inc
cmp
mov
add
add
xchg
mov
ss
lret
mov
out
test
divb
mov
pop
icebp
mov
lds
mov
xor
inc
xlat
mov
jmp
cmp
add
xchg
rol
dec
xor
dec
shrl
push
jmp
adc
or
lcall
mov
mov
scas
shl
lods
sbb
scas
sub
lcall
popa
ds
ret
cld
push
aam
pushf
loop
and
call
inc
ror
adc
test
mov
pop
or
mov
push
notl
mov
or
cmp
or
lods
or
mov
jmp
filds
or
not
add
push
lods
cmpsb
lcall
mov
jbe,pn
xchg
mov
lods
cmp
repz
out
mov
mov
rclb
cmp
mov
adc
cmp
mov
push
mov
mov
mov
mov
add
lock
push
mov
ret
mov
dec
arpl
mov
incl
negb
xchg
or
stos
movsb
cld
cmpsl
jecxz
ljmp
stos
cmp
push
rcrb
movsl
pop
ja
movsb
loope
addr16
imul
imul
mov
popf
test
mov
movsb
add
rorb
popf
call
push
jmp
adc
sub
out
add
add
push
insb
push
pop
cmpsb
dec
jecxz
cmp
xchg
add
or
xchg
data16
xchg
adc
mov
and
pop
repz
mov
stos
pop
movsb
and
jmp
pushf
test
pusha
scas
cmp
mov
mov
push
imul
loopne
jg
dec
jp
mov
lcall
add
fadds
jg
mov
fwait
jg
arpl
shlb
push
aad
mov
jecxz
shlb
sbb
lcall
ljmp
das
inc
addb
inc
jle
xchg
pop
jne
mov
or
adc
in
jge
push
xchg
push
mov
sbb
fimuls
push
subl
dec
jns
fstl
icebp
xchg
enter
mov
jb
enter
leave
xor
sub
aas
aad
fstp
repnz
jg
mov
fisubrl
or
mov
or
add
es
xchg
mov
mov
jl
adc
xchg
cli
xchg
push
ret
es
pushl
push
test
pop
call
xchg
lock
mov
pop
iret
mov
mov
sub
cltd
hlt
sub
dec
cmp
scas
bound
sbb
push
and
cld
xchg
and
mov
mov
jg
cld
mov
or
push
negl
je
jg
mov
and
hlt
std
mov
insl
push
test
call
in
out
clc
ret
scas
fcomps
sbb
pop
push
inc
mov
loope
jg
cld
repnz
pop
pop
adc
xchg
in
jo
shl
aaa
jmp
repnz
divl
int3
daa
cmpb
add
jns
jae
outsl
push
call
rclb
rolb
data16
and
fwait
sub
mov
jmp
xor
inc
pusha
inc
stos
out
push
nop
dec
pop
decl
imul
cmc
add
xchg
fbld
jnp
push
push
fadd
cmp
clc
mov
incl
cli
imul
xlat
daa
rclb
stos
hlt
adc
fnstcw
insb
pusha
shl
ja
fisttps
mov
rol
fldl
cltd
stc
add
leave
fsts
test
clc
ljmp
mov
inc
adc
lcall
xor
aam
ret
jns
push
jmp
roll
jnp
adc
pop
aad
xchg
jmp
jg
inc
add
scas
cld
movsl
test
rclb
adc
xchg
sbb
jle
aam
pushf
lea
gs
inc
mov
dec
addr16
jo
pop
call
clc
out
cmpsl
pop
push
push
pop
dec
ror
inc
xchg
insl
hlt
push
dec
popa
loope
call
stos
jno
test
movsb
cwtl
lret
xor
je
std
decl
mov
and
mov
push
lods
xchg
popf
and
lea
out
cli
ja
pop
out
fdivr
mov
fimull
lock
add
fists
pop
jo
pop
mov
mov
xchg
pop
xor
call
outsb
push
and
pop
xchg
movsb
mov
negb
lahf
xchg
clc
mov
push
mov
aad
push
fcomp
mov
aam
push
push
call
data16
add
iret
mov
xor
into
add
mov
and
lret
xchg
fs
incb
cmpsl
iret
jecxz
call
mov
push
sbb
cmc
aaa
push
or
or
and
xchg
aad
cmpsb
pop
mov
or
pushf
add
push
outsb
pop
dec
push
add
dec
mov
inc
pop
xchg
mov
cmpsb
dec
pop
mov
icebp
inc
sbb
mov
mov
pop
ret
jl
movsl
mov
scas
mov
add
sti
mov
push
push
push
cmc
mov
jo
orl
iret
es
mov
loope
push
xor
icebp
shlb
jmp
pop
repz
xchg
adc
fcomp
adc
cwtl
inc
mov
jl
mov
jmp
fmull
jecxz
dec
or
or
fisubl
mov
cmp
in
aaa
int3
rclb
cmpsb
push
mov
push
mov
jmp
icebp
push
cld
lahf
mov
loope
xor
dec
xchg
pushf
push
fistl
fwait
lods
mov
push
push
inc
sbb
xchg
push
test
hlt
sub
jbe
imul
xor
mov
lcall
scas
jecxz
dec
add
loop
enter
icebp
incl
jno
jp
dec
orl
nop
mov
or
sub
popf
push
pusha
dec
mov
add
xchg
mov
decl
sti
mov
and
mov
or
sti
sahf
gs
aaa
cld
das
xlat
lods
push
pop
sahf
testb
outsb
push
xlat
out
mov
xor
mov
jg
std
pusha
add
scas
push
aaa
mov
popf
jmp
fistps
dec
outsl
cltd
rcll
mov
andl
xchg
cmp
xchg
std
mov
mov
das
xchg
test
jp
jnp
jl
jp
repz
jae
scas
cli
decl
sahf
pop
push
mov
outsl
mov
xor
inc
jnp
sub
push
int
pushl
cld
inc
push
mov
adc
inc
cli
mov
addb
pop
fdivrp
lcall
jge
fdivrl
push
pop
xlat
adc
push
mov
or
stos
add
aam
mov
decl
push
inc
mov
ret
inc
mov
ret
in
mov
push
pushf
repz
lcall
pop
call
incl
sbb
mov
cmpsb
add
add
sbb
ss
cmpsb
pushl
add
push
std
add
add
jle
stc
rolb
push
add
call
add
jnp
dec
leave
rcl
fcomi
adc
jecxz
or
loopne
cmp
ljmp
popf
xchg
cmp
push
jmp
pop
sbb
adc
pop
jbe
mov
in
cwtl
jecxz
cld
lods
mov
pop
adcl
mov
loopne
jns
movsl
fcmovbe
lcall
fwait
xchg
mov
mov
std
scas
and
push
out
aad
stos
cwtl
mov
cwtl
push
fadds
pop
aam
mov
jle
xchg
fs
addl
mov
inc
jns
pop
push
xor
pop
cltd
dec
xchg
add
stos
pop
aam
call
lcall
pusha
jp
mov
xchg
rcrl
inc
loope
mov
hlt
xlat
pushf
in
push
xlat
leave
lcall
xchg
mov
mov
add
pop
cld
call
ret
scas
pushf
jae
fcmovnbe
fisttps
popa
leave
xlat
cmp
add
push
sbb
sub
test
push
xchg
repnz
inc
mov
xchg
nop
lcall
sub
shll
cmp
add
mov
popa
push
mov
out
fwait
pop
popf
cmpsb
iretw
stos
fwait
jmp
incl
sub
dec
push
sub
jne
int3
ret
push
roll
int
dec
lret
push
mov
or
incl
lcall
dec
ljmp
out
in
sti
shlb
lcall
insb
ja
and
jl
inc
push
dec
pushf
fstpl
mov
sbb
and
pop
fisttpll
or
out
mov
out
cli
pop
scas
out
negb
fdivr
int3
call
lcall
mov
mov
lcall
inc
sbb
adc
mov
out
mov
mov
pop
call
pop
and
aam
xor
lcall
rcrl
mov
lret
pop
loopne
xchg
mov
pop
dec
mov
or
jp
enter
icebp
incl
int3
push
les
fcom
mov
fiaddl
mov
xchg
mov
imul
fwait
lea
pop
xor
adc
ss
jno
pushl
int3
sub
outsl
mov
aaa
xor
push
xchg
add
push
push
in
lret
cld
pushl
insl
pop
rol
fldcw
fdivl
push
jb
icebp
es
call
dec
sbb
mov
adc
inc
loopne
clc
lods
inc
iret
dec
scas
sbb
incl
adc
out
sarb
data16
jbe
mov
decl
and
push
xchg
mov
sub
into
jns
lcall
jle
pop
insl
sub
dec
xchg
dec
mov
test
sub
fwait
sbb
jmp
pop
out
push
mov
pop
mov
sbb
inc
lods
bound
aad
jg
ljmp
add
xchg
add
roll
dec
andl
lahf
rolb
dec
mov
popf
pop
fs
xchg
pop
xchg
xchg
adc
cmp
mov
fisubs
jg
dec
outsl
xchg
xchg
pop
mov
xorl
cmp
dec
incb
stos
and
cld
roll
in
iret
insl
add
std
out
leave
jae
imul
pop
incl
ja
testb
add
insb
orl
addl
lcall
mov
jnp
push
xchg
dec
repz
jg
or
push
pop
adc
and
xchg
leave
mov
ud0
ljmp
out
push
repnz
into
jb
in
mov
std
repnz
mov
fisttpl
pop
mov
insl
lods
fcmovnb
or
pop
lds
int3
sub
imulb
jmp
ds
or
cmp
mov
idiv
into
aaa
mov
mov
popa
dec
insb
cwtl
mov
adc
jp
sahf
dec
push
clc
dec
cmp
cmp
in
movsl
hlt
jg
call
mov
mov
cmp
data16
mov
enter
ljmp
pop
leave
push
dec
add
dec
bound
xchg
add
cmc
lret
mov
and
fsub
fcoml
int3
mov
adc
mov
ja
out
dec
xchg
push
sbb
test
scas
fs
rdtsc
cmp
decl
lods
pop
adc
mov
out
push
mov
mov
int3
push
loop
lods
lcall
pusha
stos
mov
das
xchg
enter
jge
scas
lock
cmpsb
and
fs
gs
loopne
inc
jmp
inc
mov
xchg
xchg
out
pop
ret
adc
mov
and
mov
or
call
jns
xchg
mov
movsb
cli
int3
fxch
xchg
aaa
push
fsubr
in
jne
adc
sbb
xchg
stos
scas
pusha
add
lret
hlt
ljmp
mov
movsb
and
test
lods
xor
pop
add
daa
xchg
jg
lcall
add
dec
and
imul
movsb
js
fidivs
nop
mov
xchg
lcall
mov
and
mov
fwait
mov
int
into
jg
call
push
ja
jne
xchg
movsl
imul
nop
ret
push
out
mov
data16
test
inc
loop
cs
mov
out
les
jmp
loope
push
xchg
ds
insb
mov
pop
adc
inc
divb
jp
in
dec
fstps
jmp
iret
xchg
mov
dec
dec
lahf
sub
and
mov
jecxz
call
mov
stc
stc
popa
add
xchg
cmp
adc
mov
xor
push
fnstcw
push
les
cli
mov
sbb
loop
out
xchg
out
xchg
add
mov
decl
cmp
xchg
test
push
xchg
test
dec
clc
mov
xchg
dec
sub
inc
cmp
decl
xor
jecxz
fwait
push
push
int3
cmpsb
jns
fcoms
mov
lahf
and
stc
imul
jg
add
jmp
or
adc
mov
sbb
repnz
push
js
fdivs
cs
mov
into
lahf
fbld
xlat
inc
mov
adc
push
ficomps
ja
lcall
jae
dec
fstpl
dec
push
add
lahf
repz
incl
or
loop
fists
scas
insl
sbb
dec
lret
fcoms
mov
pop
push
rclb
decl
cmpsl
lret
add
pop
stc
mov
add
jp
pop
inc
mov
or
pop
pop
pop
mov
outsl
out
les
loopne
mov
stc
testl
adc
rolb
hlt
sbb
and
test
or
aad
mov
call
fistpll
dec
pop
mov
jb
rorl
push
stos
sub
lds
jmp
adc
imul
dec
pop
loope
aaa
fcompl
mov
mov
mov
icebp
pop
jg
mov
add
clc
jns
stc
jno
stos
mov
push
daa
adc
fimull
lds
sub
int
xor
add
mov
fmull
pop
jnp
test
inc
push
or
jp
add
mov
xchg
mov
mov
jno
fcmovne
xchg
test
das
cld
sti
test
inc
jmp
pop
lock
jg
dec
xchg
loop
inc
jnp
xchg
pop
cmc
popf
push
dec
pusha
pop
mov
decl
dec
pop
dec
cmc
mov
ja
nop
and
mov
xchg
push
jmp
call
in
stc
pusha
mov
push
cmpsl
orl
push
filds
mov
dec
popl
std
mov
jl
into
push
jmp
mov
inc
fnstenv
adc
xchg
sub
rorl
scas
inc
imul
scas
stos
or
cmpsl
xor
lret
push
loope
push
xchg
or
mov
or
outsl
cmpsl
adc
data16
sub
idiv
fcomip
std
pop
cli
xchg
and
mov
cltd
push
jne
jb
adc
dec
xor
pushl
int3
mov
and
hlt
sti
mov
scas
cli
mov
xchg
mov
sbb
and
sarl
push
xchg
mov
pushl
jg
test
ret
cltd
push
mov
add
notb
dec
in
ljmp
int
lods
push
aas
aam
movsb
xor
mov
mov
pushl
fcmovnb
sbb
mov
sbb
fbld
mov
daa
xchg
jg
enter
xlat
push
sbb
fldt
mov
aas
out
ficoml
sti
adc
inc
out
pop
or
sti
mov
pop
aad
sbb
xor
add
add
lods
pop
loopne
dec
sbb
icebp
sbb
decb
in
inc
ret
jmp
mov
in
leave
push
test
mov
xor
adc
jmp
sahf
jl
sar
call
sbb
aad
mov
push
jns
jecxz
push
mov
cltd
jns
pop
cmpsl
rorb
jp
fbstp
sbb
jg
dec
flds
mov
xor
jb
xor
add
xlat
cltd
or
es
popf
pop
call
inc
mov
pop
xor
mov
mov
push
dec
clc
js
push
loopne
mov
xchg
add
pop
adc
fwait
mov
xor
fdivrs
scas
jmp
mov
lcall
cmp
adc
fstpl
stos
std
in
mov
xchg
scas
pop
cmp
popf
lahf
adc
mov
dec
lahf
arpl
jmp
mov
movsl
adc
icebp
pop
scas
mov
test
shl
xchg
mov
pop
bound
incl
push
mov
xchg
push
cli
xor
sbb
mov
jno
xor
in
cmp
push
shll
cmp
mov
pop
xchg
cmp
dec
xor
mov
incl
adc
xor
aaa
mov
sbb
cwtl
sub
or
jnp
mov
jg
ljmp
xchg
loop
pop
sub
loop
aaa
cmp
pop
xchg
mov
ret
inc
cltd
mov
mov
mov
mov
repz
addl
push
pop
int3
call
fwait
ja
inc
xchg
inc
mov
xchg
pop
jle
or
pushf
jb
test
aad
jns
push
sub
jcxz
ret
cmp
jns
mov
jecxz
or
pop
sbb
pop
das
clc
pop
decl
xchg
jo
out
aad
or
mov
xchg
xchg
or
sbb
sbb
mov
inc
and
call
loopne
cld
shl
mov
sti
pusha
jbe
adcl
jno
dec
cwtl
test
cld
dec
fimull
out
aas
insl
add
aaa
shlb
pusha
or
int
pop
cltd
cmp
call
adc
push
and
or
mov
cltd
or
popl
mov
out
addr16
gs
or
decl
mov
lahf
loop
push
and
outsl
jno
or
sub
decl
scas
adc
sub
inc
hlt
iret
and
lcall
inc
popf
fwait
push
in
pop
fcoml
dec
loope
out
and
data16
stos
lcall
cmp
sub
imul
insl
outsl
fmuls
mov
jmp
loop
test
xorl
in
sbb
lock
cmpsb
add
nop
jbe
push
xchg
addr16
xchg
pop
add
pop
popf
andl
mov
mov
das
shlb
mov
mov
dec
mov
jge
dec
xchg
aam
or
cmp
push
pop
mov
xor
or
adc
repnz
call
out
inc
adc
sbb
imul
int
inc
mov
cmp
pushl
lret
ret
pop
stos
jae
bound
ficoml
push
push
icebp
mov
dec
mov
shrb
and
inc
dec
fwait
and
sbb
loope
push
add
outsb
or
outsb
jge
fcomip
push
popf
or
fdivrp
pop
mov
mov
movsl
jo
pslld
jg
testb
flds
mov
mov
xchg
leave
mov
jp
pop
mov
rcll
fisttps
add
mov
cmpsb
mov
call
outsl
sub
lds
lret
mov
xchg
les
mov
adc
popa
repnz
cmp
or
xchg
push
cmp
add
push
mov
add
dec
repz
sbb
xchg
inc
ljmp
stos
scas
sbb
pop
pop
pop
arpl
inc
cmp
out
das
add
insb
testl
adc
icebp
pusha
sub
arpl
ds
inc
mov
mov
jo
jb
ljmp
and
dec
scas
dec
aaa
std
fmull
push
fs
out
lods
clc
dec
inc
movsl
sub
cwtl
popf
mov
incl
mov
xchg
cmpsb
xor
pushf
sbb
xor
lods
movsb
enter
pop
cs
xor
sub
call
mov
dec
sub
ror
mov
mov
stos
adc
mov
cmpsl
insl
mov
clc
mov
mov
cld
pop
mov
mov
xlat
pop
movsl
pop
sar
call
popf
or
push
mov
leave
test
sahf
imul
mov
jg
mulb
das
js
mov
enter
fcoms
mov
incl
or
test
sahf
pop
pop
xor
push
imul
cmpsl
jno
sub
lock
scas
std
push
jbe
jg
lret
lcall
mov
push
les
lods
jp
mov
imul
call
mov
sbb
pop
cmpsl
cmp
lods
lahf
cmp
mov
push
pop
jmp
sahf
or
scas
stc
jmp
inc
pop
pop
xchg
adc
add
jmp
aad
ds
pop
push
mov
ljmp
xchg
push
xor
fisubl
test
cmpsl
shrl
and
test
jnp
bnd
mov
pushw
scas
insl
inc
pushl
fld
lahf
fdivrl
push
imul
cmpsb
adc
adc
xor
fstpt
ja
mov
pop
cmpsb
jl
scas
mov
pop
sarb
call
fyl2xp1
mov
xchg
test
mov
bnd
sub
in
mov
xlat
ds
add
dec
data16
icebp
ss
lret
hlt
pop
fisubs
fucomip
incl
data16
sub
or
and
or
out
pop
icebp
sbb
xlat
enter
adc
xchg
enter
call
fmuls
mov
aas
out
mov
xor
push
mov
add
fs
push
mov
push
mov
into
push
clc
movsl
pop
push
negb
lcall
xchg
movsb
inc
fs
cs
or
mov
aad
fcomps
lret
test
cmp
lcall
jl
cmpl
stos
imul
xchg
or
shrl
loop
in
repz
mov
jns
add
push
int3
xorl
add
push
push
ret
xchg
and
dec
jmp
cli
mov
add
rorl
test
and
push
pusha
sbb
mov
jp
call
dec
pop
xchg
push
sbb
insb
mov
arpl
outsb
out
repnz
lds
incl
sub
xor
xorb
push
loope
jo
add
rorl
inc
mov
je
mov
leavew
orb
adc
mov
fbld
mov
leave
adc
or
mov
pop
adc
pop
movsb
xchg
add
call
sub
cwtl
sub
subb
rcrl
jb
jle
ljmp
push
cld
shrl
enter
jl
rorb
into
aas
lock
pop
test
shl
test
fbld
push
push
enter
ficoms
in
inc
add
mov
jno
or
fs
push
scas
mov
jg
xchg
sbb
je
rorb
mov
or
adc
dec
insb
dec
push
insb
mov
popf
repz
std
mov
mov
stc
movsl
sub
xchg
xchg
je
dec
clc
aas
cld
jg
insl
push
adc
in
daa
ja
mov
js
or
outsl
movsb
and
jle
mov
test
or
movsb
jl
repz
xor
mov
add
imul
in
dec
cmp
jp
sti
shl
cld
xchg
and
in
dec
movsl
out
push
lcall
mov
ss
orl
adc
movsb
fwait
and
mov
lcall
ljmp
inc
fisttpll
jge
push
sbbb
cmp
xchg
pop
lret
xor
pop
jmp
int
sarb
and
pop
xlat
lcall
pop
stc
add
adc
and
mov
decl
loope
add
aam
mov
test
add
aas
xchg
aas
es
xlat
jl
cmp
inc
dec
nop
pushl
cmp
cmpsl
mov
scas
sub
mov
aad
aam
sub
inc
cmp
leave
push
std
outsl
cli
inc
mov
test
sbb
mov
and
ret
sarl
cmp
push
add
push
xchg
cli
mov
inc
xor
notb
mov
mov
mov
cld
int
loopne
adc
inc
lret
cmp
sbb
jo
cmp
cmp
inc
sbb
inc
add
scas
inc
mov
pop
inc
sub
push
ss
cmp
in
lods
mov
mov
cmp
cmpl
mov
mov
inc
test
pushf
ljmp
nop
loop
decl
cmpl
adc
fisubrl
popf
mov
lcall
cmpsl
xchg
add
test
xor
stos
test
ljmp
cld
mov
jmp
stos
push
mov
out
lods
xchg
cmp
lods
movsb
subb
mov
sti
in
or
push
scas
adc
scas
mov
inc
out
add
sbb
enter
loop
xchg
std
push
out
lods
mov
mov
or
or
cli
scas
test
add
push
andl
out
fidivrs
cli
lods
jns
dec
inc
adc
mov
dec
je
js
inc
scas
mov
lock
mov
push
jge
testb
ds
mov
pop
int
test
dec
mov
stos
adc
jge
adc
test
or
incl
in
pop
inc
jbe
iret
cmp
test
jg
in
out
add
int
adc
fdivrl
push
scas
lret
cmp
hlt
aas
mov
pushl
fdivr
jp
test
stos
stos
fadd
stos
pushf
mov
mov
scas
add
stos
test
dec
stos
mov
cmp
stos
adc
cmp
incl
fildl
loope
push
sub
add
stos
xor
cs
xor
xor
fdivrp
decl
cmp
stos
jg
lods
sub
lods
iret
push
lea
stos
movsb
hlt
ljmp
stos
cmp
sub
jg
push
stos
mov
stos
outsl
ljmp
dec
xchg
lds
lods
mov
cld
xor
lds
cmp
push
stos
enter
incl
stos
xchg
cmp
sub
lods
aad
sahf
lods
movsb
xor
inc
mov
xchg
stos
fwait
mov
mov
sarl
loop
cmp
push
stos
xor
mov
js
xchg
lods
das
aaa
test
mov
popa
iret
jns
in
or
cld
pushl
and
dec
fadds
jle
insb
jg
inc
cld
lea
mov
xchg
sbb
pushl
fwait
mov
jb
cmp
out
pusha
jmp
cld
cwtl
adc
dec
mov
jg
jmp
sub
movsl
mov
mov
mov
xchg
lret
pop
mov
decl
rolb
sarb
out
mov
xor
push
cmp
enter
mov
call
ret
aad
int
sub
jl
jle
add
mov
roll
cmp
push
rol
mov
mov
adc
jae
add
ret
bound
pushl
sub
lahf
inc
or
movsb
shrl
in
push
scas
sbb
movsl
movb
pushf
lret
mov
sahf
sahf
lea
repnz
nop
dec
inc
mov
ds
ret
cmp
mov
sub
xchg
dec
add
fld
sbb
pushl
gs
rorb
cli
les
pop
mov
push
scas
sbb
jno
sbb
ljmp
fs
mov
mov
sub
mov
adcl
jns
mov
or
xor
mov
push
lcall
cli
cmpsl
stos
sahf
test
inc
cli
xchg
sarl
lock
mov
neg
ret
inc
mov
icebp
jg
lcall
cli
mov
cwtl
insl
mov
cmp
cs
jmp
pop
sbb
mov
movsb
iret
xorb
sar
dec
loopne
lahf
cmp
mov
sub
sub
jbe
aas
aaa
xchg
or
add
or
push
cli
outsl
xor
aaa
adc
cs
sti
or
out
ds
add
mov
inc
xor
dec
mov
sbb
jl
cmp
aam
popf
jnp
jmp
lahf
test
dec
mov
mov
inc
mov
fdivrl
outsl
je,pt
mov
mov
cmp
inc
xor
push
outsl
lds
pop
xchg
mov
lcall
sti
mov
mov
es
jnp
cld
cmpb
aad
ret
mov
xchg
jb
addb
js
push
cmp
pushl
lahf
mov
or
ss
or
sbb
mov
bound
not
outsl
hlt
jnp
in
or
arpl
stc
incl
jl
push
jbe
sbb
test
adc
jle
sub
jns
imul
lcall
flds
adc
pop
sub
std
stc
add
sbbb
cmpsb
testl
xlat
insl
add
ret
clc
idiv
incl
insb
and
jp
sti
jns
sbb
or
jge
int3
lea
mov
dec
incl
or
pop
dec
sub
mull
pop
mov
stc
mov
xchg
cmc
std
jns
incl
mov
xorb
sub
dec
pop
popa
pop
mov
pusha
and
loop
or
jmp
inc
out
pop
cli
pop
stos
negb
jno
fisubrs
xchg
ret
and
pop
fsubl
cltd
jo
fcomip
xor
pop
jmp
test
cli
cltd
cmpsl
data16
add
bound
cli
and
pop
es
rclb
gs
out
xor
je
xchg
ret
and
pop
hlt
jecxz
incl
data16
xchg
neg
jbe
xchg
cmp
mov
and
popf
pop
add
scas
sbbb
dec
mov
mov
mov
or
loop
fdecstp
cli
pushl
jo
shll
pop
sub
fstpl
dec
add
pusha
push
cmc
jge
mov
jae
mov
cld
ljmp
loope
shr
xchg
xor
out
push
add
push
jl
lret
jae
push
jecxz
xchg
fs
loop
add
mov
decl
add
add
je
push
hlt
gs
dec
mov
dec
out
and
jg
sbb
aad
xor
pop
push
push
loope
jne
mov
or
std
lahf
lods
pop
mul
dec
fisubs
loopne
js
imul
jg
pop
or
cmp
outsb
pop
in
pop
xchg
idiv
gs
add
lcall
movsb
jmp
mov
cmpl
and
pop
sbb
or
mov
stos
ljmp
mov
rclb
jle
aad
fistpll
xor
xlat
inc
xchg
outsb
pop
in
into
cli
test
cwtl
stc
dec
sub
loop
mov
fcompl
je,pn
pop
push
fdivl
xor
test
notb
fsubr
dec
jp
adc
jmp
xchg
dec
cmp
sbb
xlat
jl
xchg
jo
ret
ss
ss
cmp
es
or
mov
xor
int
inc
pop
or
lcall
rcll
mov
shrl
add
das
ljmp
clc
clc
lea
hlt
xchg
mov
into
jg
adc
dec
push
add
clc
loopne
mov
jle
or
gs
dec
xchg
shlb
pusha
jmp
adc
lcall
adc
xchg
loop,pt
jo
ja
addr16
ljmp
loop
xchg
fcompl
jmp
or
jg
hlt
lock
or
push
stc
xor
pop
call
in
orb
inc
sti
sub
mov
shlb
clc
push
icebp
decl
inc
jl
in
fst
sub
jl
and
sti
mov
adc
sti
and
mov
mov
jl
dec
or
fsub
or
mov
jae
push
lock
mov
insb
repnz
in
cmpsl
mov
fs
jo
fisubrs
adc
inc
mov
pop
mov
xchg
xchg
lock
xor
fsts
sub
popf
push
xchg
into
call
pop
ret
xchg
mov
push
imul
jb
inc
jno
out
lcall
pop
jnp
and
notb
insb
mov
shr
or
cmpsl
insb
xchg
mov
mov
pushf
imul
call
jmp
inc
test
bound
and
aas
imul
lock
jmp
mov
clc
inc
bnd
dec
sbb
xchg
adc
pop
push
ljmp
loopne
negb
out
insl
sub
sbb
push
loope
jmp
and
arpl
xor
ds
push
pop
push
push
ljmp
and
stc
imul
add
xor
iret
int
bound
les
decl
inc
call
inc
out
decb
jne
in
fldt
call
cmc
insb
push
fs
test
cmp
sbb
pop
push
js
fdivrl
and
pusha
negb
mov
shrb
pop
jge
data16
shrl
shrb
subb
push
mov
clc
dec
loopne
cs
clc
push
sbb
popa
pop
xchg
push
mov
in
pushf
addr16
call
and
pop
out
or
add
rcr
jge
or
imul
pushl
out
sbb
icebp
push
neg
in
jbe
xchg
es
and
cmpsb
jecxz
cld
pushl
jg
out
inc
in
mov
lea
loope
addr16
je
rorl
mov
pop
cld
sbb
jns
jae
ficoml
cli
jl
jmp
xlat
xor
pop
ja
and
xchg
sbb
addr16
sbb
loop
ljmp
jl
pop
sub
mov
popf
movsb
adc
rcrb
clc
lcall
inc
pop
out
jb
fwait
and
std
in
fdivr
cmp
fdivrl
mov
frstor
nop
in
mov
adc
lock
decl
sbb
cmc
and
je
sbb
fsubl
xor
cmp
nop
out
jge
cmp
lcall
sbb
cltd
in
xchg
nop
push
push
call
outsl
xlat
adc
icebp
sub
xchg
push
or
mov
dec
sbb
dec
dec
fsub
xlat
xor
adc
outsb
ret
jle
pop
adc
fs
adc
test
mov
or
xchg
nop
negb
in
pop
pusha
mov
lret
sub
insl
and
ljmp
out
ds
jno
cmc
imul
addr16
cmp
and
adc
movsb
outsl
es
loopne
insb
je
in
push
or
call
cld
add
adc
sbb
bnd
loope
add
ljmp
jg
or
push
loope
push
in
movsb
jl
insl
call
testb
jecxz
xchg
outsl
mov
dec
pop
add
cmp
movsl
inc
add
mov
xchg
mov
jne
push
outsl
popf
hlt
lcall
or
adc
mov
js
fisubrs
vmread
lcall
pop
pop
sub
mov
adc
lea
jle
repz
jmp
clc
sub
in
dec
shlb
jmp
and
push
cmc
mov
cmp
inc
std
mov
fstl
jmp
sahf
cmpsl
decl
and
jno
add
jbe
pop
lock
mov
jbe
fcomip
call
mov
sbb
pop
sub
fbld
jnp
test
clc
jmp
cmp
out
sbb
adc
mov
les
adc
adc
dec
popa
mov
cmpsb
push
fcoms
pop
xchg
incl
std
push
insb
sub
sbb
outsb
mov
loopne
jmp
dec
mov
xchg
jb
scas
cmp
pop
adc
mov
subl
pop
ljmp
xchg
cmc
popa
sbb
shlb
push
insb
ss
hlt
mov
add
decl
pop
xchg
fstp
enter
mov
aam
je
call
inc
cld
cmp
lods
push
in
gs
pop
push
rclb
in
add
push
lcall
into
jne
fnstcw
std
js
xor
and
incb
dec
push
pop
sbb
cld
mov
stos
insb
mov
js
pushf
movsl
add
mov
lods
mov
loope
loop
push
mov
mov
ljmp
jmp
pusha
dec
frstor
inc
jne
lahf
xor
data16
xchg
dec
fidivrs
fsubrp
in
fldcw
jl
sub
sbb
lcall
repz
pop
lret
mov
gs
xchg
cmc
fistl
cmp
jp
loop
loop
pop
int3
push
xor
xchg
push
out
std
cmp
imull
out
xchg
fisttps
clc
insl
jge
xchg
les
imul
xchg
pop
and
loope
adc
bound
decl
clc
cmpsb
lock
loop
push
into
bound
mov
jb
mov
adc
stos
adc
out
sbb
jno
and
jp
pop
sbb
pop
and
negl
pop
sub
movsb
push
call
pop
xchg
mov
push
pushl
outsb
pop
sub
inc
sub
insl
add
test
pushf
data16
arpl
push
mul
icebp
cmpsb
dec
insl
adc
xor
outsb
loope,pt
out
fiaddl
out
pop
fsubl
jg
push
loop
pop
data16
push
mov
jp
movsl
int
stos
popf
dec
pop
fistl
push
sti
loop
cld
pop
push
dec
and
sub
jle
decl
lret
pop
sbb
push
rcl
cli
stos
sub
lcall
loopne
clc
mov
sub
jmp
lods
jo
and
call
lret
jg
add
pop
dec
jno
lods
mov
imul
cmpsb
jno
loopne
ljmp
inc
popa
or
stc
and
fcomps
push
jmp
sub
lea
mov
cmc
dec
or
es
cltd
sbbl
loopne
subb
pop
inc
sub
shl
push
xor
fisubs
xchg
clc
or
jl
imulb
jb
cli
fcomip
xchg
imul
cltd
in
je
cs
jbe
in
int
lcall
push
outsb
mov
ljmp
cmc
js
ja
push
cld
shrb
inc
pop
push
mov
stos
shll
mov
gs
pop
mov
dec
lahf
addr16
push
cld
jmp
imul
loop
jno
loope
in
fistps
dec
and
ja
fsubr
in
pop
pop
fisubs
arpl
leave
lahf
lahf
lea
int
fs
icebp
mov
cmpsb
xor
jmp
ljmp
aam
and
jb
sub
in
je
icebp
mov
pop
pop
jmp
jmp
mov
ss
es
and
jbe
sub
jl
mov
xor
sahf
mov
pop
addr16
fucom
cmp
pushl
and
lods
sub
fs
dec
in
sbb
jne
push
mov
push
enter
jae
js
das
shl
out
jo
xlat
js
vunpcklpd
pop
adc
xchg
sub
lods
push
in
jmp
push
add
push
movsl
jnp
loop
xlat
call
dec
fdiv
cmc
enter
je
clc
jg
mov
pop
mov
inc
idivb
and
mov
out
push
add
sbb
and
mov
or
out
lahf
add
mov
inc
sub
idiv
mov
decb
xor
cmp
push
jg
lea
fcomp
xor
or
and
jo
fs
ja
cmc
mov
pusha
push
nop
cmc
inc
outsl
lods
jge
adc
lcall
andl
pop
pusha
adc
clc
lea
and
popf
or
push
xorb
gs
jl
dec
mov
jg
jl
ficompl
cld
mov
xchg
mov
xor
std
cld
push
cld
add
fisubrs
or
shr
and
or
test
pop
push
les
clc
shl
lret
dec
decl
mov
push
jne
sbbb
xchg
lea
inc
in
xor
mov
out
aam
inc
push
jl
ljmp
movsl
jno
push
pushf
test
ret
loop
jne
das
lret
icebp
mulps
cld
and
mov
dec
ficompl
jg
insl
adc
test
xrelease
pop
mov
mov
push
call
icebp
daa
hlt
jg
aaa
mov
ficomps
jns
push
shl
or
push
bound
call
cmp
subl
out
inc
imulb
and
scas
call
enter
jge
dec
data16
sahf
add
sub
push
mov
mov
in
ret
addr16
sbb
lods
dec
mov
test
add
fucomip
subb
sbb
outsl
fwait
test
jmp
pushf
push
insb
mov
fildll
and
jmp
decl
inc
in
fstl
push
out
adc
jg
push
pop
pop
push
das
mov
xchg
je
pop
std
sti
and
jecxz
and
mov
pop
add
pusha
push
mov
decl
cs
add
jle
sbb
jae
jmp
adcb
cli
inc
pop
enter
push
test
dec
imul
rorb
test
adc
iret
pushf
push
out
es
push
scas
decl
pop
dec
lods
push
sahf
fmuls
insl
cld
lahf
xchg
push
test
push
pop
std
jg
incl
out
jmp
push
and
jb
push
jle
les
fs
sahf
hlt
mov
fwait
out
xchg
out
jo
sub
inc
in
jne
sub
icebp
out
lcall
ljmp
data16
imul
push
ds
ljmp
jp
decl
fcmovnu
or
test
dec
lea
mov
lret
sbb
add
dec
sub
push
in
xchg
mov
dec
shlb
add
push
sub
mov
dec
fmuls
ljmp
adc
inc
dec
mov
mov
push
cld
mov
mov
mov
mov
lcall
and
inc
in
xchg
inc
imul
mov
pusha
movsl
mov
pushf
lahf
inc
stc
jnp
aas
dec
arpl
loopne
adc
test
cmp
and
jmp
lock
and
bound
push
lcall
pusha
fistpl
push
decl
push
xchg
xchg
mov
insb
jge
add
adc
hlt
in
cmp
popf
cmp
jae
out
mov
mov
aas
push
negb
movsb
jbe
mov
fimull
ljmp
jl
js
aas
cmpsb
js
jmp
jecxz
shlb
pop
push
push
fisttpl
ljmp
repz
shrb
sbb
call
imul
out
inc
mov
idiv
jg
out
leave
xor
pop
dec
mov
fnstenv
cmpsb
push
scas
adc
call
pushf
aam
inc
ds
pop
inc
or
sub
pop
rcrb
xor
out
push
pusha
daa
sbb
inc
incl
push
call
bound
add
mov
inc
jbe
stos
in
ja
jb
aas
aam
cmp
mov
rcl
in
inc
es
daa
pop
enter
sar
out
sbbb
pop
fs
cmpsb
ja
ret
mov
in
into
popf
pop
insl
in
adc
shrl
mov
mov
pop
nop
sbb
adc
sub
xchg
adc
incl
es
test
aaa
std
ljmp
jnp
in
rcr
sub
mov
push
mov
pop
pop
jmp
dec
stos
lcall
mov
aas
aad
cwtl
int3
jno
fmul
add
fldenv
pop
clc
ljmp
sub
adc
repz
cmp
cmp
ds
test
out
pop
adc
cmp
pop
idivb
fmuls
push
mov
dec
rcrl
mov
inc
insb
inc
scas
add
pushf
lea
lcall
jmp
cmp
pop
stc
and
loope
xor
or
in
fs
pop
pop
add
add
lock
push
cmc
mov
mov
cli
jmp
shl
call
call
ficomps
adc
ljmp
pop
insb
out
out
inc
outsb
dec
mov
mov
cmpsb
push
movd
add
push
push
xorb
and
push
addr16
inc
add
je
add
sbb
rorl
mov
cmp
dec
and
ljmp
xor
int
test
cmp
mov
xlat
jmp
insb
int3
leave
dec
push
add
scas
mov
call
sub
push
jns
or
addl
ljmp
pop
cmpb
xchg
std
notb
addr16
mov
icebp
fwait
lcall
addr16
sub
in
out
jge
fmull
dec
sub
push
insl
fildll
or
test
std
push
arpl
test
in
lock
decl
js
sub
das
into
stc
sbb
add
call
test
mov
mov
sar
imul
cs
movsl
cld
jne
xlat
cwtl
in
fisubl
mov
cs
jnp
stc
stos
mov
scas
xchg
or
cmpsb
cmc
mov
movsb
loop
call
jecxz
test
nop
push
jne
sbb
rcrb
pop
add
push
insb
pop
or
mov
jmp
mov
jecxz
pop
loop
jae
loope
shrl
push
pop
rclb
mulb
fwait
inc
incb
bound
jmp
adc
mov
sahf
push
adc
push
inc
in
or
add
ja
jmp
mov
fdivr
xor
and
ja
clc
push
sub
push
and
jle
pop
mov
aad
xorl
ffreep
sahf
add
mov
loop
sub
lcall
fbstp
ja
in
fstpl
hlt
jne
and
mov
pop
bound
dec
jmp
pop
call
popf
je
mov
aam
bnd
insw
push
push
pusha
in
sbb
out
clc
lcall
and
fs
jp
mov
xor
dec
xchg
insl
gs
decl
std
movl
jb
pop
aaa
adc
fldl
mov
stc
mov
insl
mov
dec
sbb
pop
mov
mov
push
mov
stos
inc
pop
jl
push
int3
pop
lock
test
aas
lahf
jae
fistl
jl
out
call
int
and
stos
sbb
add
pop
nop
insb
fimull
lret
repz
test
lea
dec
jne
xchg
sub
sub
mov
dec
xchg
inc
into
pop
jbe
jle
sbb
fcoms
sub
fisttpl
jne
std
jb
mov
push
cmp
xchg
hlt
add
ficoms
push
iret
mov
fadds
loop
pop
push
dec
aas
scas
jg
cmp
jecxz
clc
lock
sub
inc
fmuls
jge,pt
and
pop
jmp
popa
je
cmp
sbb
repz
fbld
xor
int
jbe
cmc
fldt
lcall
and
hlt
pop
xor
clc
test
push
sbbb
adc
adc
call
xchg
enter
mov
sub
push
xchg
adc
jecxz
pop
cli
andl
fs
and
arpl
outsb
rolb
sub
sub
xchg
sar
nop
pop
dec
xchg
pushl
shlb
or
shll
xchg
jb
fidivs
dec
pusha
leave
aas
or
jmp
roll
mov
scas
inc
into
mov
je
mov
mov
decl
cli
adc
xchg
and
pop
int
push
divl
pop
push
popa
mov
xchg
repz
dec
pusha
push
adcl
lahf
dec
sbb
roll
in
pop
aad
push
shl
out
pop
mov
pushl
and
pop
das
and
loop
pop
js
pop
or
dec
movsl
jmp
or
fstpl
pop
into
clc
ljmp
fldl2e
jmp
sbb
es
xlat
cmp
push
cmp
push
pop
outsb
arpl
mov
call
push
fistl
dec
mov
mov
shlb
decl
push
mov
jns
jne
fisttpll
push
movsl
add
mov
push
neg
lret
pusha
out
imul
test
adc
adc
fcmovbe
leave
mov
aaa
adc
and
ljmpw
cmc
daa
test
test
in
push
push
dec
jae
rcrb
dec
cld
out
pop
mov
jp
imul
push
lcall
and
gs
into
gs
test
sbb
or
lret
in
fists
out
jg
jns
lods
fmull
push
jp
fucomp
or
and
repnz
je
dec
pop
sub
jno
fdivr
lcall
sar
cmp
addr16
les
loope
sahf
xor
popf
lea
leave
jecxz
jnp
faddp
fstps
lods
add
lcall
sbb
stc
jbe
add
adc
lcall
mov
mov
out
lcall
cwtl
out
test
nop
lock
addr16
push
xchg
jle
incl
shlb
int3
adc
nop
in
or
mov
popf
or
pop
subb
mov
fldcw
and
in
gs
jbe
jmp
xchg
jge
jbe
test
sarb
rolb
xchg
out
orl
jle
subb
push
jl
push
outsl
fcomip
push
add
lock
aam
loopne
xchg
jbe
push
sbb
adc
xchg
or
addr16
push
sahf
xchg
cwtl
int3
jae
push
sbb
shrb
jle
fistpll
xchg
xchg
push
test
out
ds
hlt
das
mov
push
push
insl
insb
mov
adc
pop
pop
icebp
fistps
jecxz
sbb
jo
push
pop
es
push
cld
pop
and
mov
es
jp
inc
push
into
mov
dec
icebp
inc
pop
std
dec
pop
jae
mov
mov
ret
out
daa
test
add
mov
pop
xchg
aas
mov
clc
aas
xor
ss
inc
xchg
sbb
jae
push
mov
cli
jle
fs
movsl
cli
jmp
sbb
ret
shll
xchg
jb
add
sbb
sub
cmc
lret
push
or
or
out
repz
pop
sbb
cli
ja
les
push
jecxz
cld
sub
mov
inc
add
ja
or
and
xchg
insb
enter
pop
jmp
mov
push
pop
xor
pop
cli
arpl
pop
jp
loop
fisubrl
fidivrl
nop
dec
decl
sbb
mull
push
enter
ja
sbb
clc
jl
roll
push
repnz
push
xchg
xor
mov
adc
call
div
rep
pop
hlt
push
ret
add
add
jecxz
test
incl
inc
lahf
xor
fisubs
clc
push
pop
lock
filds
fiaddl
xchg
cmpsb
dec
shl
fwait
or
add
jmp
jg
jecxz
aam
data16
and
mov
repz
add
cmpsb
adc
subb
popa
sahf
fwait
loop
out
test
cld
pushl
cmp
js
mov
sbb
hlt
scas
pop
rcll
stos
cltd
inc
jns
ljmp
mov
and
mov
sti
inc
sub
ficomps
shrl
in
jb
push
pop
and
ljmp
lds
xor
outsl
and
jg
movsl
and
and
xchg
push
xchg
ja
xor
stc
clc
inc
enter
xchg
decl
mov
int
or
gs
dec
xchg
pushf
push
lea
into
adc
push
decl
shlb
lcall
mov
lret
sbb
lret
lahf
dec
mov
out
clc
mov
pushl
cmp
add
lahf
imul
sbb
pop
or
and
sub
pop
test
xor
mov
jno
mov
dec
cmpsb
lcall
call
ljmp
pop
add
jge
movsb
sub
mov
sub
mov
xor
outsl
les
lea
add
incl
xchg
adc
movsb
sub
lds
ljmp
iret
sub
dec
lods
push
je
mov
xor
cmpsl
inc
scas
pusha
int3
inc
mov
lock
push
sahf
outsl
cli
jmp
mov
sub
add
fidivl
push
inc
sbb
mov
gs
pop
or
jbe
lcall
lods
pop
addl
jg
daa
xor
ret
sbb
fistpll
repz
jae
loop
xchg
mov
mov
jmp
ret
dec
pop
les
lea
jle
dec
les
pop
xchg
fcomip
or
sbb
dec
xchg
pop
mov
inc
outsb
sahf
jbe
inc
imul
jmp
loopne
push
xor
sbb
iret
sub
xor
mov
mov
addr16
idiv
ljmp
ds
sub
stc
pop
sbb
push
test
fabs
jmp
call
xlat
mov
pop
jg
and
or
dec
and
cmp
arpl
xlat
pop
lods
imul
mov
enter
jg
adc
pop
icebp
adc
imul
pop
mov
and
or
jb
pusha
sub
dec
aad
cmpsl
das
pop
jge
inc
les
std
adc
les
and
mov
inc
adc
loopne
push
push
bound
jmp
fisubs
push
mov
push
lahf
gs
mov
mov
gs
ror
push
cltd
je
push
jp
call
xchg
xchg
sbb
mov
mov
xor
in
inc
mov
out
and
sub
mov
jmp
mov
cmpsl
jmp
pop
in
popf
pushf
sbb
mov
and
mov
pop
xor
scas
lcall
xchg
fistpl
bound
hlt
pop
jp
les
mov
fimuls
adc
push
adc
dec
jle
jmp
xor
dec
xor
fwait
and
mov
push
add
and
xchg
fildll
mov
add
push
jmp
in
sbb
add
pusha
dec
xlat
push
aam
mov
ljmp
xchg
call
push
cmp
aam
rcrb
or
lock
xchg
and
push
aad
jmp
sbb
jne
push
jo
push
push
mov
ljmp
add
or
push
adc
aam
ljmp
sub
push
jp
jbe
jmp
sub
xchg
mov
jae
aad
adc
dec
aad
jg
ljmp
enter
dec
cltd
jecxz
dec
mov
dec
add
add
cmp
addl
jg
enter
adc
mov
inc
out
shl
add
or
cmp
push
int
fs
dec
and
dec
ljmp
add
je
push
sar
push
mov
daa
divb
loopne
sub
or
jo
int
jecxz
decl
idiv
sub
imulb
or
sub
cmp
mov
mov
mov
dec
sub
outsb
add
mov
rcl
insl
test
ljmp
inc
or
aad
rdmsr
test
ja
mov
rcrb
push
loop
jb
lret
jg
icebp
incl
jbe
mov
test
add
push
outsb
aad
imul
push
fldt
inc
ljmp
sbb
lods
inc
push
cmpsb
sub
adc
mov
gs
or
jmp
mov
rolb
or
pusha
scas
pop
insl
dec
xchg
scas
in
cld
jg
outsb
imulb
out
pop
push
stos
outsb
int3
cmp
call
lcall
dec
imul
out
cmc
imul
mov
out
call
add
jmp
lcall
imul
adc
in
hlt
sti
xor
in
in
mov
mov
out
xor
jle
pop
into
in
push
imul
mov
ljmp
insl
mulb
sbb
mov
icebp
shr
fcoms
jmp
or
push
jg
ljmp
mov
into
mov
jmp
cmp
std
jmp
ja
push
push
int
ljmp
in
lret
insl
lock
mov
cmp
in
test
ljmp
testb
scas
shlb
call
mov
js
inc
jle
rolb
sub
lcall
insb
nop
jp
leave
push
call
jno
xor
push
lcall
ret
insb
insb
jl
lret
push
jmp
bound
and
ljmp
pop
in
sub
lods
insb
cli
add
xor
push
imul
jmp
jnp
imul
in
and
mov
insb
loop
repnz
lcall
sarl
jle
call
ljmp
mov
push
fisubrs
xor
movq
mov
jns
vpackssdw
in
xor
jb
sub
sbb
dec
outsb
jmp
xor
imul
jb
data16
cli
ljmp
sar
mov
imul
mov
in
stos
jno
ljmp
stos
out
inc
jl
es
aad
push
mov
add
jle
lcall
call
cltd
inc
jmp
sbb
fsts
jb
xor
pusha
add
stc
sbb
test
call
rcr
jmp
xchg
mov
shlb
and
cld
pop
jbe
jbe
int3
std
pop
jg
pusha
mov
adc
roll
push
pushl
scas
mov
data16
decb
dec
push
icebp
lcall
loope
inc
decl
jns
in
push
shlb
stc
add
cmpsb
dec
mov
dec
sbb
stos
push
inc
xchg
jp
aam
ds
lcall
cli
lea
add
xor
dec
ret
in
subl
aad
ljmp
cmp
push
pop
jl
dec
or
clc
mov
sbb
jmp
lret
dec
test
push
pop
jns
enter
jmp
xchg
cli
cs
repnz
pop
adcb
fsubs
add
mov
iret
cs
cmpsb
sar
jmp
cmp
bound
pop
cli
push
mov
xchg
or
jg
pop
fdivrl
add
xchg
ss
shlb
lods
pop
jl
xor
das
incl
lods
add
jmp
lret
int
insb
mov
dec
mov
mov
jle
insl
jg
sbb
inc
outsb
outsl
mov
es
and
mov
out
ja
inc
pop
jg
stos
mov
ds
push
jo
jnp
enter
pusha
cli
dec
movsb
xor
jmp
add
jg
out
fdivrs
popf
jo
mov
push
jmp
inc
pop
loop
xchg
divl
ljmp
nop
adcb
xor
lods
testl
clc
incl
jle
push
jns
xchg
dec
lret
xor
fisubrl
ret
jmp
imul
mov
out
mov
in
jne
aam
push
push
fidivrl
pop
add
mov
add
cmpsb
push
xchg
pop
cli
xorb
sahf
jno
xor
jmp
imul
jl
ljmp
outsb
dec
in
lcall
shll
or
mov
cmc
hlt
jb
push
push
pop
in
incl
xchg
sub
pop
adc
je
cli
and
je
vpcmpeqb
push
ds
jle
orb
xor
jno
ss
call
mov
mov
not
add
mov
cmpsb
stos
loope
cli
jno
jbe
rclb
pop
mov
add
sub
xchg
adc
test
inc
out
or
sbb
fwait
cmp
orb
push
xor
and
incl
loop
inc
sub
test
lcall
mov
jbe
sahf
ja
push
lods
pop
outsb
jecxz
inc
les
xchg
adc
ljmp
push
add
arpl
mov
push
lock
push
in
sbbl
imul
ljmp
add
cmpsb
arpl
dec
div
jle
dec
push
sub
popf
in
shl
ljmp
xchg
jae
js
shll
mov
das
in
mov
incb
stos
lret
mov
mov
aam
popf
rcl
mov
mov
push
int3
push
lret
cmp
je
push
dec
jb
push
shrl
imul
stos
push
push
rclb
bound
jmp
xor
subl
rorl
je
add
das
jmp
stc
repnz
push
jp
sahf
mov
insb
xchg
sub
inc
mov
je
mov
arpl
decl
in
mov
xor
jp
stos
fsubp
test
addb
pop
pop
insb
fcomip
inc
sub
add
hlt
push
sti
and
jecxz
aad
or
jge
mov
lcall
movsb
outsb
pop
xor
adc
pop
data16
mov
or
jl
mov
fcomp
jecxz
popa
dec
int3
push
stc
mov
pushf
stc
int3
orl
addr16
lcall
orb
pushf
popa
orb
mov
inc
bound
jmp
fsts
push
je
cmp
mov
mov
je
fnstsw
repnz
mov
pop
xor
push
sbb
std
aam
jge
mov
and
fidivrs
mov
js
jp
add
outsb
pop
inc
dec
ret
cmp
pop
or
push
mov
in
or
decl
aam
jns
ret
mov
cld
push
pop
cmp
scas
pop
dec
in
hlt
adc
jg
decl
jge
xor
jge
repz
popf
pusha
jb
icebp
imulb
ss
jg
adc
and
ljmp
push
mov
loop
loop
cmp
or
pop
adc
sub
xchg
ficoml
jp
stos
into
pop
jb
push
clc
shlb
pusha
lods
sbb
mov
push
mul
imul
mov
loopne
pushf
js
jl
in
arpl
push
cmp
mov
dec
sbb
loopne
add
and
test
add
and
mov
call
inc
pop
ds
lcall
cld
stos
incl
xchg
adc
ja
add
call
call
mov
mov
add
xorb
ljmp
and
jle
mov
rcrb
adc
testl
sbb
jb
pop
cld
dec
ret
js
xlat
in
fs
call
push
pusha
push
adc
ljmp
call
or
xor
pop
push
mov
cld
mov
mov
clc
outsb
cmp
fld
adc
loopne
jg
jbe
ficoml
jmp
pop
cmpsb
xchg
mov
or
scas
mov
imul
shrb
fsubl
cs
fbld
std
cld
in
pop
testb
pop
int3
popf
lret
mov
lcall
jge
je
fisttpll
ret
inc
push
add
insb
pop
push
dec
mov
pop
add
imul
fcmove
mov
mov
fwait
pop
jp
jge
rcl
lcall
push
push
push
stc
mov
sbb
dec
push
mov
fcomi
jl
ret
mov
std
mov
call
decb
in
ret
fstl
dec
mov
repz
dec
fldt
dec
test
ljmp
mov
jp
repnz
fxch
mov
jp
cmp
and
js
inc
sbb
decl
insl
pop
lock
pop
repnz
data16
jp
jnp
dec
mov
scas
xor
lods
adc
cld
mov
fdivrp
ficoml
dec
jnp
lods
mov
jnp
jl
cld
fisubl
pop
jo
out
cli
push
inc
pop
xor
xchg
sti
add
jnp
jmp
jl
mov
xor
xchg
xchg
bound
pop
pop
sub
sub
jle
js
rcr
xor
pushl
std
jne
ljmp
mov
ret
lds
jnp
hlt
pushl
mov
fdivr
sbb
int3
add
das
jo
cli
fstpl
aam
lods
pop
mov
int
jl
jne
fdivrl
inc
dec
mov
push
mov
sti
xor
cmp
lret
dec
int
jp
mov
fldt
mov
sti
jb
ss
cli
lcall
cld
pop
xchg
in
cmp
adc
cmpb
rcr
stos
fsubl
jl
lret
or
sbb
sar
fdivrl
ds
cmp
movsl
sub
pop
mov
andl
nop
cmp
adc
push
or
rcrb
dec
fstl
inc
dec
inc
fisttpl
mov
jle
fcompl
shrb
loop
ds
fdivrp
pushl
pop
iret
mov
mov
or
pop
or
pop
loope
aam
mov
nop
repnz
lods
sub
insl
dec
jecxz
push
gs
or
lcall
xor
adc
aad
xor
fs
dec
mov
sbb
dec
jge
push
lret
outsl
jae
mov
sbb
fldcw
xor
jecxz
xchg
popa
adc
mov
test
sbb
lret
inc
sub
mov
mov
repz
out
lcall
xchg
push
imul
test
int3
fcoms
and
push
jle
mov
rclb
ljmp
daa
std
xchg
dec
and
or
test
xchg
sub
push
jae
mov
hlt
and
inc
mov
adc
inc
inc
das
xchg
inc
xchg
daa
cmpsb
lds
mov
sub
dec
loop
xchg
push
xor
cmp
adc
push
in
jl
loop
xchg
jmp
lret
xchg
pop
gs
or
movsl
push
mov
aas
jp
adcl
ss
addr16
or
subb
icebp
dec
fisubl
pop
call
sub
add
dec
sbb
xchg
or
and
push
sbb
add
jno
into
nop
repz
cmp
and
xchg
call
cmpsb
imul
push
mov
shlb
mov
fcmovnbe
xchg
and
fcomip
nop
pusha
fs
sti
xor
jno
lea
lahf
shr
in
adc
push
fs
dec
push
mov
dec
ja
fsubp
push
cmp
popf
mov
test
pop
aam
repnz
xor
pop
pop
repz
mov
xor
xchg
fdivrs
sub
pop
fistps
bound
aam
xchg
or
cmp
in
std
cs
push
cmp
xchg
lds
movsb
and
lcall
push
enter
push
push
or
addl
mov
nop
adc
mov
out
fmuls
hlt
fwait
cmp
nop
sarb
ja
mov
fildll
sbb
cmp
lock
xor
and
fcmove
leave
mov
pop
outsl
sbb
xchg
mov
aaa
xor
jmp
sti
sbb
test
xorb
inc
dec
bound
xchg
outsl
adc
push
pop
fwait
aaa
iret
xchg
jmp
add
push
xchg
push
sarb
rolb
das
jle
icebp
push
adc
jp
rcll
testb
pop
mov
cmpsb
mov
push
cltd
call
mov
repnz
lret
push
jo
notrack
repnz
sbb
test
jl
ror
subb
mov
add
popf
mov
hlt
and
mov
out
fisttpl
int3
ljmp
mov
lret
sbb
push
es
mov
push
or
and
jg
push
mov
mov
inc
sub
loop
jmp
xor
sti
clc
mov
shll
arpl
sub
push
add
ljmp
rolb
jp
sub
jno
cs
pop
add
sbb
xchg
and
adc
xchg
xchg
mov
inc
lds
mov
cmpsb
imul
and
jl
or
std
pop
inc
sti
shlb
test
loop
mov
inc
imulb
dec
xchg
pushl
mov
pusha
aad
test
xor
mov
fwait
xchg
test
or
sbb
adc
repnz
push
push
inc
jmp
jmp
out
clc
mov
pop
clts
pop
outsl
lock
hlt
mov
inc
scas
test
js
ljmp
sub
cs
xchg
mov
mov
pop
cmp
lock
pushl
xor
icebp
push
scas
sbbl
and
and
mov
js
mov
incl
pop
push
int3
inc
scas
pop
push
dec
add
jmp
jle
std
addr16
dec
loopne
fdivrl
dec
add
inc
outsl
sti
sbb
sub
jb
jge
cmc
fs
inc
pop
in
xchg
decl
mov
mov
imul
mov
bound
incl
std
imul
and
stos
mov
jl
sahf
mov
sub
ss
mov
pushl
cmc
fistpl
mov
sbb
cmpb
jbe
push
lds
lcall
inc
xchg
imul
subb
ljmp
scas
xor
incl
xor
out
or
sbb
mov
repz
loop
test
inc
incl
adc
insb
mov
call
lret
pop
rolb
movsb
loopne
inc
sub
stos
mov
movsl
jne
mov
lods
movsb
adc
mov
mov
lock
mov
xlat
dec
scas
daa
imul
sti
outsl
cli
sub
lea
sub
push
jmp
dec
jg
mov
adc
stos
popa
jmp
and
imull
int
push
jg
decl
insb
or
xchg
stos
je
dec
cli
mov
fadd
sub
sub
incl
jnp
pop
outsb
xchg
jbe
and
adcb
lods
jmp
jno
ds
icebp
mov
lcall
dec
and
inc
test
hlt
mov
xchg
mov
and
xchg
xor
dec
fistpll
es
incl
inc
push
adc
stc
jns
dec
mov
lock
or
jns
lret
or
jae
ljmp
imul
insb
adc
scas
in
dec
add
lcall
add
or
xor
into
adc
xor
or
jnp
ret
pop
popf
es
mov
push
lods
fcoms
shrb
pop
adcl
xchg
mov
jg
fidivl
sbb
inc
xorl
arpl
cmpsb
test
aas
push
insl
jne
repz
jg
lcall
or
sbb
mov
pop
movsl
stc
add
psubsb
push
fiaddl
add
push
int
ret
pop
xor
pop
scas
cltd
leave
fnstenv
push
sbb
push
dec
jnp
jb
jg
pop
jno
pop
jbe
pusha
cs
call
sbb
push
mov
adcl
jg
jns
dec
push
pop
mov
or
mov
mov
add
lcall
cmpsl
xor
aas
loopne
loop
test
lret
push
or
loopne
mov
fbld
push
les
je
dec
cmp
bound
dec
jecxz
xor
inc
rorb
cmp
mov
fstpl
or
daa
mov
xchg
stos
lods
sbb
ljmp
les
mov
stc
push
les
cmp
incl
cmc
sub
sub
jo
jmp
xchg
xchg
xchg
mov
dec
imul
cmpsl
stos
or
imul
xchg
in
pop
push
addr16
mov
outsl
push
inc
mov
sub
in
stc
mov
mov
mov
leave
and
fwait
adc
ret
push
sub
test
inc
jecxz
lahf
adc
and
and
pushl
test
and
adc
xchg
lods
mov
cs
sarl
mov
pop
rcll
and
aas
xchg
outsl
cmp
andl
decl
pop
adc
push
das
jp
shll
xchg
cltd
outsl
jne
jg
pop
and
push
mov
fisttpl
cmpsl
lret
jg
cli
and
jmp
pusha
adc
fwait
dec
push
push
test
sar
jmp
popa
js
jle
inc
jle
movsb
popw
fnstsw
add
mull
jbe
xor
call
icebp
call
pushf
push
xchg
movsb
mov
cli
and
jb
out
inc
xchg
push
mov
mov
decl
sbb
in
xchg
pop
dec
imul
test
lods
xchg
inc
push
fnstcw
sbbb
pushl
iret
sbb
lcall
xchg
stc
mov
call
mov
insl
jno
pop
or
int3
push
xlat
add
ret
xchg
jg
js
mov
mov
movsl
out
sub
add
sti
fdivs
repz
fs
clc
ret
xor
fsubrp
mov
out
jo
xchg
push
push
push
jns
xor
jne
sti
and
xchg
in
shll
jo
ljmp
mov
sub
in
clc
in
test
fists
and
loop
add
je
hlt
inc
xchg
jg
pusha
cld
cmp
jge
pushf
out
loop
fistpl
dec
fs
lods
decl
pop
insl
xor
mov
int
aas
pop
xchg
sbb
jbe,pt
and
movsl
popf
fcomps
sub
testl
repz
enter
pop
call
fisttpl
in
rorl
xor
mov
xchg
stc
dec
call
sbb
push
mov
loop
push
shr
mov
mov
xchg
pusha
mov
lcall
inc
shr
ja
xchg
add
push
popa
adc
pop
int
orb
idivl
cli
pushl
add
pushw
sub
bound
cmp
and
pusha
adc
jmp
push
add
jl
popa
xor
fwait
jae
mov
add
das
mov
dec
cmpsl
push
mov
cwtl
dec
repnz
push
repz
mov
stos
sub
das
lret
jae
leave
cmp
mov
pop
xchg
or
into
or
mov
clc
movsl
lret
movsb
mov
push
lret
pop
sbb
xor
call
fiadds
mov
adc
add
loopne
negl
adc
add
adc
call
popa
adc
sbb
pushf
push
jl
xor
ds
jmp
repz
shrl
cmpsb
mov
aas
cmp
and
mov
add
stos
aaa
mov
adc
jg
sbb
out
loopne
pop
xor
jp
xchg
inc
mov
sti
xchg
rcrb
xor
adc
lcall
mov
xlat
push
clc
shll
test
arpl
adc
ljmp
jg
clc
leave
or
inc
aad
mov
push
int3
jecxz
jp
or
ret
pop
cmp
int
push
std
and
test
outsl
lods
inc
std
stos
cs
aad
fucomip
mov
fdivrl
mov
adc
std
inc
hlt
cmp
push
ljmp
into
xchg
push
ss
insb
das
inc
add
aam
outsb
cwtl
and
decl
int3
cmp
inc
mov
adc
mull
xchg
inc
fsubs
pushl
outsb
into
or
lret
push
jp
push
push
jno
xor
mov
sbb
repz
xor
sbb
lock
lock
incl
nop
movl
loop
pop
sub
jge
ljmp
mov
or
jne
add
mov
jb
cmc
xor
cltd
xchg
fisttps
add
lcall
xor
pushf
fldcw
scas
mov
dec
mov
test
stos
jge
js
push
sbb
pushl
add
out
and
jg
push
mov
arpl
mov
dec
xchg
aaa
dec
fdiv
push
hlt
xor
out
lock
mov
pop
fiaddl
cs
pop
jl
dec
mov
dec
sub
push
out
and
jl
inc
insb
mov
cmp
hlt
aaa
xchg
fucomi
int3
bnd
decl
adc
mov
inc
shll
js
add
les
bound
mov
loop
test
decl
push
lods
out
out
mov
jno
out
and
pop
pop
push
out
mov
and
and
sub
inc
adc
mov
gs
int
mov
mov
cmp
addb
add
mov
lret
xor
arpl
xchg
jo
stos
test
fisubrl
test
pop
popf
in
jnp
out
pop
outsl
sbb
data16
cld
mov
outsl
cmp
movsl
ja
call
ss
lea
ljmp
sbb
xor
aaa
adc
fwait
mov
jo
push
push
test
jg
test
push
xchg
aad
rorl
pop
enter
sub
mov
dec
fs
pop
pop
xchg
pushl
jecxz
sahf
or
es
push
push
insl
push
push
sub
mov
xchg
and
push
mov
xor
cmp
mov
push
xorl
xor
fisubs
pop
xchg
jmp
loope
adc
push
jo
sub
cld
mov
pusha
mov
push
cwtl
in
adc
sub
push
push
mov
push
out
sbb
sub
out
cmp
vpmacssdql
lcall
jns
pop
mov
movsb
adc
cmp
push
test
jg
jns
dec
add
lahf
jecxz
adcb
lahf
xchg
pop
iret
jg
daa
sub
adc
les
mov
scas
lcall
jecxz
jmp
sub
repnz
mov
stos
push
movsl
dec
outsl
cmp
pop
cmpb
in
sahf
addr16
fistpll
xchg
push
inc
add
arpl
adc
aad
int3
or
mov
clc
ljmp
movsb
push
adcb
push
lcall
push
sub
insb
ficompl
aad
cmp
cmpsb
test
pop
dec
mov
dec
leave
cmpl
shl
fistl
jecxz
ret
dec
inc
ret
mov
lcall
call
in
into
stos
jnp
aad
pop
jbe
out
or
pop
jae
push
cmp
inc
aad
jbe
add
jle
mov
mov
sahf
mov
xchg
into
cld
je
lcall
decb
cmp
pop
xor
in
arpl
stos
mov
fisubs
xlat
into
push
pop
push
pop
pop
dec
and
adc
lcall
mov
inc
test
jge
sbb
mov
scas
pop
cmp
decl
es
imul
hlt
xor
jg
negl
xchg
lock
daa
inc
insl
fisubrl
fidivl
xchg
jecxz
mov
xor
xor
mov
jecxz
add
fdiv
push
xchg
jb
and
ljmp
sahf
int
sub
pop
xchg
jl
sub
aas
mov
shrl
pop
cmpsb
pushl
mov
clc
add
jae
shrb
fstps
js
std
imul
mov
jge
pop
dec
lock
cmp
decl
pop
mov
adc
pop
imul
scas
lea
aad
call
ret
xlat
shlb
outsl
mov
push
adc
iret
xchg
mov
fwait
fs
ret
ja
int
sub
iret
lret
loope
out
cmp
cli
stc
mov
mov
push
js
jne
xchg
clc
or
lods
mov
push
jmp
out
mov
repnz
scas
imul
sub
jae
sub
sub
scas
cli
loope
xor
jae
addr16
gs
mov
jae
jmp
daa
xchg
or
aam
in
push
decl
adcb
loop
cmp
das
sub
adc
sub
cmpsl
jnp
inc
adc
call
xchg
out
scas
fsubl
fstl
adcb
pop
lock
daa
mov
xchg
mov
or
std
addr16
sti
adc
jmp
mov
inc
mov
hlt
fcos
push
arpl
xchg
sub
test
into
xor
and
and
mov
mov
inc
sbb
sar
incl
and
je
ret
dec
jnp
daa
loopne
test
repnz
in
outsb
jg
insl
imul
dec
gs
out
addb
xor
lock
scas
call
sub
jne
arpl
out
dec
push
xorb
mov
sbb
in
sbb
sbb
ljmp
andb
inc
adc
andl
adc
pusha
fldl
test
std
pop
popa
rcll
insl
pop
jns
mov
push
aaa
call
aaa
mov
test
sbb
fisttpll
or
hlt
lds
fdivr
call
jmp
pop
test
test
pop
dec
and
fidivrs
int
push
imul
push
lods
dec
stos
in
fcomi
outsl
mov
mov
out
push
adc
push
inc
outsl
xchg
mov
ljmp
rorb
fwait
xchg
cwtl
and
pop
sub
and
jp
mov
or
scas
and
decl
fildll
cmp
xchg
adc
mov
jmp
mov
adc
xor
pop
pop
mov
call
cmp
xor
adc
inc
jae
or
jmp
cltd
js
mov
xchg
ret
arpl
aam
inc
dec
int3
and
push
dec
mov
daa
sbb
ljmp
xor
jmp
sbb
ja
test
mov
icebp
rorl
jmp
pop
dec
jnp
push
xor
leave
test
mov
ljmp
clc
movsb
lds
in
or
jb
jg
insb
aaa
out
stos
jne
pop
jo
push
jle
arpl
and
pop
mov
ljmp
lea
loopne
sbb
cmp
jle
mov
dec
fistps
icebp
cli
cmp
aaa
inc
cmc
shrb
jg
jge
fwait
into
push
addr16
pop
cmp
cmpsb
and
sarb
xlat
fstpt
mov
push
xor
jno
or
call
mov
andl
andb
decl
and
movsl
push
and
or
inc
imul
mov
shrb
add
push
jecxz
pusha
jecxz
dec
sub
push
lock
test
inc
and
xchg
clc
jp
jl
and
sub
loope
sar
mov
jecxz
icebp
push
xor
pop
and
inc
xchg
mov
xlat
fwait
dec
inc
popa
pop
nop
dec
sbb
test
xchg
add
jg
xchg
mov
jge
sbb
test
pusha
dec
in
jae
clc
fucom
inc
popa
sub
xor
in
movb
scas
add
xor
fsubr
cmp
sbb
incl
sarb
mov
pusha
xor
push
fs
pop
loopne
testl
lcall
int
roll
hlt
pop
in
movsl
ljmp
ss
mov
lret
or
decl
js
out
in
test
xor
cmpsb
mov
cmpsl
dec
cmp
fwait
and
rol
mov
rcr
xchg
cmpsb
and
loopne
mov
inc
into
addr16
cld
and
mov
push
shl
sub
or
or
jno
fdiv
add
aaa
shll
jl
incl
or
mov
divl
mov
pushl
fisubrl
jb
roll
mov
es
aam
fistpll
nop
or
jmp
dec
inc
adc
test
loope
aam
fildll
stos
je
xchg
inc
inc
mov
pop
and
dec
xchg
mov
lcall
movsl
cmc
ds
sbb
dec
or
sbb
aaa
ficompl
movl
lock
jnp
mov
fstl
int3
mov
pop
sbb
repz
shlb
dec
and
and
adc
call
inc
addr16
dec
add
sbb
fwait
adc
mov
insb
mov
out
pop
mov
out
repz
add
mov
pusha
das
mov
mov
dec
repnz
cmp
push
xlat
into
mov
enter
rorl
sbb
mov
inc
mov
decl
pop
lea
dec
hlt
lahf
inc
add
push
lcall
movsb
mov
sub
sub
cs
sbb
sbb
fimull
call
mov
addl
dec
lock
sub
mov
call
lods
aam
in
subl
icebp
lods
jmp
mov
push
mov
xor
in
jle
inc
adc
xor
and
sub
fwait
push
and
jmp
enter
sub
cmpl
ljmp
loope
cmp
jns
jp
ret
sbb
rcl
push
shll
out
cmp
jmp
repnz
pushl
sub
fwait
xlat
lea
pusha
xor
jns
push
cltd
test
rclb
rclb
es
scas
adc
out
aad
out
movsl
out
jge
cli
and
mov
sbbl
rorl
inc
xchg
and
or
in
movsl
fs
mov
flds
int3
ja
outsl
adc
das
adc
shll
jmp
adc
test
aad
adc
stos
dec
sub
adc
pushw
cwtl
aas
or
add
or
push
in
or
scas
sbb
aaa
test
and
incl
xchg
jo
sbb
not
test
ret
test
fadd
cmp
clc
sbb
cmc
xor
jbe
jne
pop
sub
xor
push
or
daa
inc
leave
fbld
xchg
pop
push
cmp
push
push
popa
dec
stc
test
push
jmp
aaa
scas
add
pushl
shll
lret
push
jo
jge
outsb
add
cmp
int3
xchg
xchg
push
bound
sar
cmp
pop
mov
dec
jbe
mov
cltd
lea
frstor
mov
pop
mov
dec
shrb
es
aas
push
inc
inc
xchg
fcmovu
movsb
aas
xor
aad
mov
pushl
push
in
pop
push
pushf
sub
repz
sbb
js
aaa
js
mov
sbbb
cmp
in
jp
inc
xchg
aaa
jnp
aam
insb
pop
stos
mov
cmp
adc
cmp
jge
outsl
mov
stos
jae
mov
or
jnp
inc
pop
xor
ljmp
orb
sbb
pop
in
and
dec
ljmp
cli
jmp
add
jnp
rclb
call
ljmp
loopne
call
jno
and
add
insw
arpl
aad
fistpl
xchg
enter
das
push
xchg
stos
ljmp
fs
std
or
push
xor
cld
adc
adc
ret
idiv
incl
pop
mov
aaa
inc
dec
hlt
sbb
fucomi
and
xor
push
jbe
notl
call
mov
push
daa
jge
mov
das
fwait
stc
dec
lds
pushl
cld
ljmp
adc
mov
imul
js
push
jb
ret
cmp
stos
incl
pushf
dec
aad
les
andl
dec
mov
pop
sti
dec
incb
xor
call
bound
rcrb
test
sub
stos
or
and
pushl
dec
dec
xor
ror
iret
or
ret
cld
jp
dec
push
sarb
stos
inc
ljmp
or
or
test
popa
in
mov
cmpsl
mov
ljmp
movsl
xchg
or
push
push
lods
leave
mov
inc
enter
insl
jo
sub
call
fimuls
mov
adc
stos
or
nop
imul
pop
into
inc
or
push
jge
pop
jmp
call
repnz
pop
mov
pop
lock
fnstcw
pop
jmp
scas
popa
sti
lods
stc
sti
xor
xchg
into
xor
jb
fildll
repnz
push
push
popf
jg
xchg
insb
js
cmp
dec
or
mov
pop
and
mov
xor
aad
fmulp
and
push
adc
lock
cmp
dec
jae
lret
push
out
mov
or
inc
lods
jae
push
mov
sub
push
bound
aad
and
jg
inc
mov
jb
adc
mov
les
pushl
push
xchg
bound
mov
outsl
aaa
cmp
mov
sti
and
mov
fisubrs
aad
add
or
fsubrs
mov
xchg
nop
push
nop
in
stos
lret
orb
pushl
movb
mov
sub
push
mov
ja
popa
sub
push
xchg
std
add
call
mov
mov
ret
sbb
fwait
mov
sbb
pushl
and
lret
mov
daa
out
in
xchg
mov
sbb
jne
insl
inc
pusha
es
je
decl
cmp
xor
imul
out
xchg
cmp
cltd
fbld
jg
xor
mov
mov
pop
loopne
aas
dec
rcll
push
sahf
push
into
jo
sub
cmp
mov
stos
sbb
xor
and
mov
sub
imul
clc
icebp
sbb
call
sbb
fmull
fstps
sbb
jle
pop
stc
xor
cmp
xorl
movsb
lock
adc
sbb
sbb
loopne
push
jecxz
pop
arpl
lcall
adcl
cmp
and
enter
ja
ljmp
adc
adc
dec
adc
ret
pushf
stos
jmp
pop
popa
sub
ss
mov
mov
xchg
jle
cmp
mov
std
scas
xor
cmp
cmp
xchg
xchg
insb
push
mov
mov
push
dec
ror
push
in
mov
out
aad
divl
ja
xchg
inc
scas
dec
jnp
decl
inc
pop
inc
push
jbe
add
rorl
dec
push
std
std
addr16
enter
mov
clc
int
push
lret
insb
rcr
xchg
xchg
ret
mov
dec
jg
or
mov
dec
fmuls
and
mov
mov
fidivl
push
mov
dec
push
lods
or
loopne
addb
jne
inc
xlat
cli
fstpl
fisubrs
incl
leave
andl
fiaddl
jno
jecxz
pop
pushf
and
js
sar
xchg
or
sub
dec
out
jl
or
call
fcmovbe
sub
das
sahf
les
mov
popf
test
in
push
lock
jmp
int
mov
or
out
fcmove
jg
pop
jge
in
fisubs
add
pop
idivb
das
sub
mov
sbb
lods
lret
jecxz
into
jge
negl
lcall
add
outsb
rcrb
adc
xor
pusha
mov
dec
pop
test
xchg
incl
push
or
push
pop
popa
aad
mov
fcompl
iret
mov
stos
cwtl
lods
stos
sub
pop
out
in
lahf
or
jg
pop
jo
pop
push
stos
in
cmp
enter
cmp
in
lods
mov
jge
mov
ljmp
fsubl
xchg
cwtl
popa
in
cmp
popa
add
pushl
adc
popf
test
movsb
repnz
jno
out
mov
ljmp
cld
das
popf
pop
leave
outsl
movl
jmp
ret
inc
jg
xor
ja
stos
push
mov
pusha
adc
inc
into
nop
out
loop
xchg
jg
push
inc
aam
xchg
leave
jb
ss
dec
pop
lret
push
sub
sbb
incl
cltd
clc
adc
neg
jo
mov
push
cltd
clc
out
das
into
xchg
sbb
push
lock
aaa
call
mov
inc
incl
mov
outsl
cmc
xchg
mov
fidivl
cmp
and
mov
adc
mov
ljmp
cmpb
adc
push
fwait
jno
jge
cld
pushl
call
out
ss
fwait
adc
lock
insl
stos
call
stos
xor
xor
cmp
xchg
out
aaa
outsb
inc
daa
jmp
call
mov
pop
or
inc
mov
xor
or
cld
mov
dec
icebp
dec
pusha
hlt
jmp
ficomps
inc
sti
scas
repz
xor
popa
and
idivb
add
xchg
push
mov
mov
mov
pop
loop
push
mov
aas
inc
adc
hlt
sarb
cmp
fdivs
sar
loope
mov
pop
hlt
xor
mov
shlb
sti
xor
rorl
dec
cmc
in
out
lahf
jnp
call
pop
mov
lcall
ljmp
in
fsubp
mov
pop
mov
mov
dec
jno
cmpsl
test
ljmp
iret
inc
movsl
punpcklwd
pop
adc
or
sarl
sti
cmpsb
mov
sub
push
cltd
cmp
std
aam
shll
incl
stos
fdivrs
or
rcrl
pop
jno
bound
in
pop
pusha
dec
pop
call
movsb
mov
push
mov
cmp
addr16
push
int
adc
sub
dec
cmp
sar
jmp
arpl
negl
gs
clc
xchg
sahf
push
jmp
add
testb
dec
fnstcw
jecxz
push
dec
fs
clc
dec
jb
and
cmp
lock
mov
into
clc
aaa
jbe
dec
shrb
jns
movsl
adc
loopne
mov
adc
das
fldl
dec
sahf
gs
lcall
fstpt
and
call
arpl
push
fsubp
ss
xchg
ffreep
stos
sti
mov
sub
sub
call
clc
mov
add
jne
adc
sub
fisttps
or
xor
sub
repz
and
cmp
mov
stos
push
add
insl
push
ja
stos
push
or
sbb
pop
lock
imul
mov
cli
push
ljmp
xor
mov
lret
pop
add
lcall
sub
jns
push
mov
fadd
loop
and
lcall
imul
inc
incl
scas
or
aas
nop
addr16
scas
mov
movsb
call
stos
or
sar
test
mov
aas
jmp
stos
push
xor
sub
mov
push
or
or
adc
and
out
mov
fdivrl
xchg
lcall
fistl
xchg
shr
add
es
pop
cmc
or
sbb
test
mov
ljmp
mov
out
popf
xlat
ds
mov
decl
cltd
mov
fcoms
cmp
scas
dec
push
mov
test
sbb
data16
aaa
decl
fcmovu
mov
mov
xor
jmp
leave
mov
ror
inc
mov
cmp
orb
mov
xor
add
jmp
push
sub
jb
sub
outsl
cmpsb
jge
adc
nop
add
into
pop
adc
xor
xchg
lcall
lret
mov
ficoms
roll
loop
inc
cmpsb
or
lds
cmp
jo
imul
jp
adc
xor
jge
xor
outsl
mov
or
add
in
jmp
lds
pop
mov
pusha
shrb
mov
fisubl
lret
adc
mov
loop
faddl
icebp
incl
sti
repnz
xchg
mov
imul
inc
cs
into
fwait
rorl
cmp
pusha
mov
xchg
jg
or
sub
or
addb
mov
call
mov
in
dec
sti
lock
mov
pop
jo
icebp
jmp
xchg
inc
lods
je
xchg
or
mov
and
adc
sbb
into
sbb
call
pop
adc
inc
ret
mov
pop
pop
out
xor
cltd
lret
rolb
add
ds
mov
pop
and
adc
mov
fiaddl
dec
sbb
lret
inc
lcall
bound
or
or
pop
mov
shll
hlt
out
call
inc
mov
jp
jae
dec
mov
inc
xchg
adc
in
mov
sarl
cmp
xor
imul
or
cmp
mov
rcrl
adc
and
cmp
cmp
incl
jl
push
dec
ds
jle
sbbb
jns
or
sbb
jno
sahf
sahf
ljmp
je
incb
test
mov
sbb
mov
fsubl
cmp
mov
outsl
mov
push
neg
sti
imulb
cwtl
mov
test
jecxz
push
add
cld
incl
fiaddl
aam
mov
pop
popa
push
pop
add
jg
and
mov
imul
xchg
cmp
ljmp
rol
arpl
insl
into
mulb
dec
push
xor
ljmp
andb
jns
mov
mov
mov
test
push
jg
stc
mov
stc
repnz
in
ss
jno
test
stc
mov
push
es
mov
lods
imul
mov
mov
push
jge
mov
outsl
dec
mov
cmp
pop
rcr
in
mov
mov
jl
xchg
add
push
fs
add
or
mov
call
jecxz
sub
sub
pop
xor
and
fbld
adc
pop
or
lcall
incl
pop
cmp
inc
outsb
mov
dec
push
popa
scas
mov
movsl
sarb
pusha
insb
push
pop
mov
jmp
out
scas
sub
shlb
inc
adc
mov
add
cld
mov
sub
push
dec
dec
into
jno
mov
decl
cmp
iret
nop
push
je
cmc
mov
outsb
in
inc
cmp
fcoms
mov
incl
and
inc
repz
mov
dec
stc
jne
les
mov
mov
xchg
ljmp
pop
push
dec
stc
repz
xor
ret
dec
adc
and
mov
mov
ljmp
jge
xchg
loopne
sub
xchg
addb
and
and
fld1
fbld
add
sub
mov
xlat
ficompl
mov
and
dec
shl
mov
ljmp
push
loope
movsb
add
mov
aam
jg
dec
fst
stc
test
sub
cmpsb
or
push
jecxz
outsb
clc
ljmp
call
dec
add
imul
std
mov
sbb
sbb
xor
mov
popf
jmp
mov
or
mov
dec
inc
mov
inc
sti
lcall
xchg
iret
movsb
xor
sub
stos
sub
add
pop
xchg
sbb
xor
cli
jmp
fdivrs
cmpb
ja
ljmp
lret
adc
push
repnz
and
push
or
andb
gs
test
in
mov
aad
ljmp
cli
jg
jb
add
sbb
notb
jns
shlb
jg
fwait
sub
ret
pop
les
cltd
push
mov
cmpsl
pop
and
or
jp
mov
mov
in
sbb
cltd
out
ret
out
adc
outsb
mov
out
cmp
adc
addr16
dec
fld
cmp
das
sar
ja
into
lock
adc
xor
pop
loop
data16
insl
in
jne,pt
adc
mov
or
stc
dec
popa
lahf
lea
xor
push
pop
cld
out
cli
inc
ret
push
je
shll
pop
xor
sbb
ret
push
clc
push
fdivr
jg
push
adc
xor
adcl
jnp
cmp
decl
std
ja
add
ja
test
cmp
mov
inc
xchg
test
test
or
push
add
ljmp
and
stos
repnz
es
incl
lods
mov
cltd
sarl
sub
mov
pop
decl
cmc
enter
stc
cmp
out
mov
ljmp
loopne
or
and
pop
hlt
shr
pop
mov
outsb
sarl
scas
loopne
ss
mov
lods
mov
imul
outsb
sub
lcall
cmpsl
outsb
in
mov
test
aad
fs
pop
or
inc
inc
fs
lret
lcall
outsb
outsb
adc
mov
in
notl
cmp
jecxz
push
push
imul
call
lock
leave
push
push
xchg
cmp
cli
jno
je
stos
andl
cmpsl
push
cli
inc
pop
loopne
fstps
fstl
xchg
fisttps
hlt
in
idiv
incl
movsl
adc
iret
cwtl
aad
xchg
or
jae
jg
mov
orb
cmc
call
pop
xchg
xor
or
ljmp
rolb
jecxz
pushl
cmp
sbb
insb
clc
mov
popa
hlt
sub
stos
inc
sbb
test
mov
jne
adc
jne
or
or
adc
jmp
fisubl
jo
cmpsb
mov
mov
movsb
jae
and
mov
mov
mov
mov
adc
bound
sbb
mov
pop
mov
sbb
imul
std
adc
nop
lret
iret
test
jp
subl
pop
jo
adc
lods
fidivrl
or
mov
addb
mov
and
inc
pop
jge
dec
outsl
test
add
sar
sar
jecxz
inc
sub
and
mov
add
scas
jge
aad
push
dec
add
incl
cld
sahf
sbb
enter
xchg
add
fcompl
mov
jp
insb
arpl
push
stc
popf
cmp
lcallw
jg
fdivs
mov
sar
dec
xchg
lock
fsubl
mov
inc
xor
daa
scas
clc
pop
pushf
and
lock
std
sub
fs
cs
out
inc
addr16
xor
add
and
sbb
xchg
push
xchg
pop
mov
decl
stc
arpl
mov
inc
mov
mov
mov
pop
inc
pop
jbe
in
mov
es
hlt
fst
push
or
ljmp
xchg
fdivrp
pop
insb
mov
test
mov
popa
cltd
daa
lcall
dec
dec
cmp
push
das
xor
jg
dec
pop
xor
xchg
lahf
cmp
dec
xchg
loop
dec
loop
jbe
data16
addr16
sub
icebp
stos
and
xlat
lret
dec
adc
or
ljmp
sti
jge
jbe
cld
xor
xlat
push
mov
cmpsl
negl
mov
negl
loopne
jge
incl
int
insl
push
pop
and
fwait
mov
mov
or
into
push
push
and
decb
fcompl
inc
push
hlt
out
mov
popa
sbb
test
cwtl
lret
aas
repz
leave
shll
out
mov
fs
jb
or
xor
lds
hlt
dec
dec
jge
mov
pop
mov
in
push
fstps
repz
adc
pop
insb
roll
mov
cmp
cmc
je
xchg
out
inc
int3
adc
sub
insl
outsb
jae
cmp
ljmp
pop
out
sub
pop
das
int
and
mov
inc
push
ficoml
call
std
lods
aaa
aam
outsl
cmp
mov
jne
push
sub
cmpsb
int3
daa
jmp
and
push
mov
jmp
push
xchg
xchg
lret
push
enter
data16
ficompl
out
sub
lcall
pop
in
and
jl
into
mov
nop
stos
jbe
mov
daa
repnz
loopne
jmp
mov
jecxz
out
xlat
xchg
sub
jg
fstpl
xor
lcall
or
lcall
push
out
cli
push
in
sbb
icebp
decl
mov
push
aam
and
adc
mov
sub
mull
pop
pop
rcll
jo
adc
out
and
shlb
cmp
mov
es
sti
cmp
jo
or
ret
xor
pushl
xor
xchg
arpl
clc
inc
stos
adc
js
outsb
xchg
push
incl
popf
iret
mov
nop
aas
lea
inc
dec
repz
xor
jb
mov
mov
mov
or
movsl
popa
and
xchg
push
sub
mov
jb
leave
sbb
ss
clc
test
lret
dec
in
jle
enter
daa
mov
jecxz
xor
data16
lcall
xchg
stos
mov
push
pop
popl
leave
mov
push
add
loop
cs
loop
jmp
cld
jmp
notl
sub
outsl
inc
push
or
jge
push
enter
mov
adc
gs
lods
ror
shl
out
sbb
xor
pop
das
cmpsb
xchg
fst
std
loop
dec
stc
roll
sub
xchg
call
fisttps
cs
cltd
ret
faddl
mov
rcrl
in
cmp
push
pop
lret
mov
xlat
fwait
adc
out
and
rolb
stc
ret
shll
arpl
inc
inc
pop
out
sbb
dec
add
dec
mov
incb
mov
lcall
xchg
pop
faddp
enter
scas
sbb
movsl
push
popf
xor
xorb
aaa
hlt
insb
decl
xor
and
mov
adc
lds
mov
sar
or
incl
xchg
insb
repnz
push
pop
jl
mov
and
ds
adc
add
lcall
pop
call
arpl
sub
jg
outsb
movsb
scas
ljmp
js
pop
and
jecxz
stc
out
ja
add
sbb
sar
incl
push
leave
jmp
and
xchg
test
or
sbb
jg
cli
test
and
dec
sbb
fdiv
inc
sti
add
pop
mov
out
cli
sub
jmp
movsl
jle
dec
cwtl
pop
cmp
inc
mov
dec
in
xor
pop
or
cli
call
lcall
mov
nop
sub
sub
adc
mov
lcall
mov
xlat
adc
dec
inc
push
pop
loope
cmp
notl
sahf
mov
xchg
ret
sub
fildl
in
dec
add
jo
pop
xor
jae
dec
push
lcall
xor
jp
dec
adc
dec
test
cmp
cli
cmp
fadd
leave
cmp
sub
les
jg
test
loopne
mov
pop
xchg
sbb
out
push
call
jmp
fnstsw
dec
adc
rclb
pusha
mov
dec
mov
testb
ljmp
mov
stos
aas
into
movsb
cwtl
mov
mov
pop
fucomip
mov
lcall
lods
add
pop
aam
gs
out
aam
mov
cld
lahf
test
lods
mov
loopne
fmull
nop
adc
pop
jmp
mov
and
sti
in
neg
scas
jp
dec
jo
mov
push
sbb
push
imul
ret
das
mov
pusha
jg
cli
dec
loope
ficoms
push
mov
push
cmpsl
dec
add
add
stos
mov
inc
jmp
cmp
xchg
addb
gs
inc
movsl
adc
mov
inc
mov
call
pop
and
jns
insb
sbb
movsl
xchg
or
lcall
ss
dec
decl
mov
std
xchg
int
shlb
jb
mov
in
ss
shr
sbbb
sar
std
bound
sub
incl
adc
pushf
stos
add
mov
dec
loopne
sbb
movsb
and
jecxz
push
xchg
jp
or
mov
call
cltd
adc
mov
das
sti
shlb
mov
scas
sub
std
stos
das
sarb
mov
lcall
aam
and
loopne
inc
cmp
mov
xchg
mov
call
xlat
and
cmp
cwtl
or
jle
xchg
inc
mov
mov
loope
sarl
cmp
jno
int
outsb
add
ds
mov
pop
mov
ror
aas
incl
dec
lock
mov
ss
inc
rcrb
outsl
adc
loopne
pop
dec
add
xor
inc
push
push
es
jmp
cltd
imul
lcall
xchg
mov
les
xchg
xchg
fstpt
into
je
jae
jne
xchg
xor
add
les
hlt
mov
pushf
mov
adc
jg
loop
test
ljmp
cld
outsl
push
repnz
loopne
push
jp
adc
or
loopne
xor
mov
ds
decl
or
xchg
mov
lods
jno
jns
lods
lods
xor
aad
push
sbb
push
mov
mov
arpl
adc
mov
sub
or
incl
shlb
jle
add
shl
int3
out
in
test
mov
popa
fdivs
mov
pop
sahf
stos
insl
xor
sti
call
or
push
sbb
out
push
roll
jge
sub
add
xchg
mov
sub
lret
loopne
pop
leave
sbb
dec
repnz
jl
rcrl
add
ljmp
mov
mov
xor
movsb
pop
cwtl
jmp
or
sub
mov
and
push
scas
pop
mov
add
jb
pop
mov
ljmp
sub
mov
fcomps
or
test
mov
dec
mov
andl
pushl
mov
jae
jnp
insb
adc
and
mov
and
pop
push
push
cmp
hlt
dec
mov
roll
xor
mov
packsswb
xchg
fwait
pop
xor
jmp
pop
pushl
cli
arpl
pop
lret
xchg
and
mov
popf
incl
lret
mov
fsubrl
pop
jo
ret
jge
ja
fs
jnp
cmp
sub
ds
or
incl
push
mov
cmpsb
movsb
mov
in
mov
orl
jmp
mull
xchg
cmp
mov
rorb
in
aas
cmp
mov
lods
lcall
sti
nop
push
inc
and
adc
shll
incl
pusha
test
fstp
push
mov
fidivrs
push
push
xor
pop
mov
rcrb
or
andb
sbb
cmp
mov
les
rorb
out
aaa
mov
xchg
inc
aad
call
inc
jmp
pop
mov
xor
xchg
lock
rcrb
test
fucomip
add
dec
imul
dec
adc
sub
inc
push
lock
pop
ret
scas
pop
mov
aaa
cld
cli
or
repnz
loop
push
dec
fwait
mov
pop
popa
fs
lahf
negb
call
xor
mov
arpl
jge
repnz
xor
les
xchg
dec
or
sub
aaa
clc
outsl
addb
lahf
push
jecxz
call
push
fdivr
jp
jle
and
jmp
fsubrs
es
mov
jecxz
test
ss
adc
pushf
and
ljmp
cmp
daa
out
popf
pop
pop
xlat
or
mov
or
call
xchg
jge
inc
pop
cwtl
out
ss
adc
jg
sbb
xchg
xchg
dec
cmpsb
xchg
fsubp
mov
push
lods
stos
jns
test
xchg
inc
pushf
into
movsb
fimull
sub
sti
cmpsb
inc
lahf
xchg
xchg
sbb
adc
jg
xor
mov
insb
pop
cmp
mov
add
pop
xor
fdivrp
incl
push
adc
mov
shlb
mov
out
or
clc
mov
push
xchg
xor
mov
or
mov
and
dec
adc
call
and
and
mov
jo
sub
jg
inc
cld
clc
xchg
sbbl
rorb
mov
fnsave
out
mov
and
ljmp
push
mov
lahf
fnstsw
sti
sub
out
sbb
loop
jne
in
movsb
pop
xor
cld
inc
and
hlt
decl
loopne
mov
mov
lock
mov
push
fcomip
test
push
test
push
repnz
mov
in
sti
pushf
imul
push
pop
sub
push
orl
add
lret
mov
into
dec
test
das
add
in
rcr
or
aad
dec
ljmp
sub
lret
scas
mov
sub
fdivrp
jg
inc
imul
pushf
repnz
sarb
lret
adc
inc
sahf
mov
mov
aaa
pop
mov
in
cmpsb
mov
cltd
adc
inc
addr16
mov
pop
sub
out
mov
rep
imul
inc
test
jae
dec
mov
loopne
lock
pop
shll
jae
daa
cmp
xlat
push
dec
cmp
std
mov
add
aad
testl
xchg
lea
jp
push
cld
mov
ja
decl
push
hlt
mov
inc
ret
out
mul
jae
popf
jbe
inc
pusha
add
clc
mov
push
mov
test
ljmp
pushw
push
mov
push
sub
sub
popa
cmp
xchg
sub
stos
dec
mov
call
xchg
popf
outsl
sbbl
pusha
dec
add
stos
mov
lahf
cmp
inc
pusha
adc
ljmp
add
dec
lahf
mov
hlt
leave
adc
icebp
imul
stos
mov
call
cwtl
inc
test
in
jge
rcr
orb
jmp
mov
das
popf
bound
xor
xchg
clc
cltd
in
pop
fisubrs
inc
incl
cli
cmp
jg
decl
outsl
dec
int
hlt
popf
lea
push
loope
cmp
movsl
dec
stc
xchg
and
roll
fcoms
push
pop
icebp
cmp
jb
pop
leave
dec
fildl
incb
jnp
in
lods
or
jbe
mov
lcall
fs
js
pop
leave
shlb
nop
lret
or
out
insl
call
sub
pusha
xchg
and
sahf
or
into
rolb
inc
out
sbb
inc
sub
stos
or
insl
fwait
adc
in
add
jne
pusha
dec
mov
xchg
filds
pop
into
lock
fsubrs
jp
shl
sbb
cmpsl
in
jns
lods
mov
pop
jno
sbb
jae
decl
fs
pop
andb
adc
clc
xchg
data16
lcall
lds
push
test
jo
and
mov
pop
ss
dec
mov
in
mov
ljmp
jbe
fldl
xor
cmp
sub
mov
shll
stos
insl
pop
cmpsb
dec
rorb
push
or
lods
clc
std
pop
lods
insl
outsb
push
ljmp
lea
or
andl
jnp
cmp
mov
push
mov
cmpsb
call
icebp
in
jae
fildl
push
mov
std
mov
pushl
pop
repz
test
outsl
ja
dec
cmp
adc
cmp
fsubs
lcall
or
lods
lahf
out
push
push
pop
mov
pop
xchg
sbb
push
decl
push
push
xlat
cmpsl
jg
push
jb
mov
shl
cld
xchg
pop
sbb
mov
lcall
dec
decb
call
sbb
aas
dec
cmp
sub
mov
or
mov
fisubrl
mov
test
popa
into
cmc
rorb
incl
mov
dec
push
inc
int
push
jge
xor
movsl
out
call
add
addb
xor
push
movsb
mov
xchg
stc
das
es
jmp
and
pop
andl
insb
dec
push
lret
sub
push
xchg
dec
lcall
mov
push
cmp
sbb
mov
out
hlt
mov
or
mov
loopne
and
cmc
ret
or
jge
lods
decl
lods
mov
sub
mov
cmpb
mov
gs
mov
and
in
adc
jg
mov
xor
pop
out
mov
inc
cmp
inc
and
popa
mov
mov
mov
push
js
jo
ficoms
in
incl
iret
sbb
fwait
and
push
pop
je
dec
and
fidivrl
rolb
cmc
data16
mov
sarb
jge
ljmp
add
jl
test
jle
push
mov
orl
out
pop
push
ljmp
inc
push
pop
fimuls
xchg
or
pop
call
outsl
fs
cld
sar
orl
cmp
lcall
dec
push
xor
or
test
stos
sbb
xor
push
mov
jns
jp
pop
jbe
sbb
or
clc
incl
outsl
ds
in
cld
data16
pushl
les
inc
pop
push
jb
loop
sbb
les
jmp
lahf
fucomp
enter
inc
jl
xchg
xor
sbb
imul
js
aaa
cwtl
xchg
dec
add
outsl
shll
sbb
cmp
dec
cmc
mov
fwait
jg
fcomip
call
lcall
mov
fildl
mov
jo
mov
je
xor
cld
mov
add
jns
pop
decl
outsb
and
bound
in
xchg
sbb
jnp
push
and
icebp
xor
in
mov
and
fs
cmp
xor
icebp
ljmp
test
mov
mov
icebp
cmp
mov
das
out
ljmp
add
and
mov
das
jns
pop
push
xor
and
mov
xor
int
pop
dec
dec
loope
cwtl
mov
fwait
pop
xchg
or
ss
daa
xor
mov
out
incb
sbb
les
loopne
mov
decl
mov
push
frstor
push
into
xchg
pusha
adcl
or
push
sar
mov
in
and
cltd
xor
and
sti
fs
sbb
pop
stos
out
cld
ljmp
lock
aad
sahf
lea
stc
cld
lret
cwtl
dec
repnz
sti
sub
jl
gs
movsb
dec
xchg
jo
jbe
adc
outsl
pop
inc
sub
pushl
int
or
inc
mov
pushf
je
je
test
fsts
out
outsl
mov
mov
xchg
sahf
in
xor
xchg
push
cmc
or
imul
arpl
insl
push
jmp
js
bound
subb
pop
clc
mov
call
decl
xchg
and
jns
dec
mov
movsb
xchg
in
std
and
cmp
call
fisttps
sbb
xchg
cmp
int
fldt
cmp
mulb
inc
jp
into
rcll
fsubrl
imul
testb
xorb
pusha
insb
sbb
decl
loopne
xchg
inc
cld
out
push
dec
mov
fbld
lret
std
xor
in
mov
cltd
jecxz
lods
or
add
mov
or
adc
repz
mov
pop
cmp
lcall
stos
inc
sub
or
and
mov
ljmp
cmp
and
rclb
jo
ret
rcrb
pop
lcall
arpl
cmp
xchg
lock
cmp
pop
jmp
mov
incl
scas
jecxz
push
add
pop
and
fs
mov
mov
xor
mov
cmc
aaa
std
ret
outsb
xchg
std
data16
mov
push
push
js
xor
call
mov
js
int3
add
ja
ljmp
cmp
js
mov
or
nop
iret
mov
stc
inc
xor
adc
push
cmp
lcall
and
aaa
push
xchg
test
mov
or
fs
in
mov
sub
fisubrs
inc
and
ret
into
mov
pusha
mov
test
mov
dec
lret
mov
push
or
icebp
fisubrl
addr16
ror
iret
inc
sub
push
leave
cmp
int
decl
lock
rclb
jg
and
iret
ret
or
pop
lcall
add
cwtl
movsb
mov
sti
push
fsubrp
sbb
mov
mov
sub
inc
sti
ljmp
ljmp
push
and
adc
fidivrs
jae
stos
in
sti
cld
mov
mov
mov
mov
adc
mov
lcall
je
bound
dec
aaa
inc
push
in
sti
int3
pop
dec
xchg
sti
xchg
loop
mov
js
sar
jo
sarl
incl
into
addl
push
sbb
pop
imul
in
pushl
and
lds
out
adc
daa
pop
lods
cmpsb
arpl
ja
mov
push
dec
add
inc
rclb
into
sbbb
push
mov
dec
adc
ret
rcl
scas
adc
jge
loope
adc
dec
jge
push
xchg
pop
mov
mov
cmp
movsl
dec
jg
sbb
mov
mov
mov
sti
int
hlt
jg
stos
in
and
pop
cmp
movsb
out
test
aam
cs
mov
mov
jnp
push
aad
mov
addl
outsb
adc
outsb
push
fsubr
decl
testl
mov
mov
stc
mov
push
xchg
mov
into
push
icebp
insb
or
lcall
pop
cltd
popa
not
cmp
jecxz
rcll
cmp
cmp
imul
cmpsl
inc
sub
mov
dec
inc
jmp
inc
sbb
or
xchg
hlt
je
fdivrp
pushl
movsb
cmp
std
adc
ret
test
in
jns
stc
stos
icebp
or
xchg
xchg
dec
cmp
stc
mov
push
lds
cli
cwtl
testb
jo
xchg
test
xchg
idiv
ret
stos
push
push
jns
cmp
inc
cmpb
ljmp
test
in
scas
sub
cli
inc
mov
fdivl
xchg
sbbb
push
imul
aaa
lods
jns
scas
sti
dec
mov
dec
outsb
js
mov
int3
pop
ljmp
repnz
inc
popa
ss
push
insl
sti
mov
jmp
inc
inc
dec
push
lahf
cli
int
ja
notl
leave
jmp
js
xor
sbb
fstl
cmp
xlat
enter
jl
push
cmpl
js
cmp
jae
fwait
mov
push
add
inc
mov
movsb
jmp
xchg
jge
cld
cmp
loop
mov
mov
ud0
and
add
and
js
and
in
push
inc
data16
scas
push
add
mov
out
mov
sbb
scas
imul
mov
enter
sub
sub
sub
lods
adc
xorb
incl
bound
xor
popa
fwait
mov
and
jns
enter
fldenv
jmp
push
add
jmp
fdivrs
arpl
mov
shlb
push
jecxz
xchg
xchg
incl
outsb
dec
jbe
lea
mov
and
mov
scas
pop
dec
lock
inc
out
loopne
fnstcw
adc
push
jns
sub
enter
lcall
pushf
jns
mov
jnp
daa
push
sti
call
xor
jns
ficoml
into
mov
scas
or
decl
sbbl
leave
mov
setbe
in
dec
push
push
lcall
mov
sbb
test
lea
cltd
mov
cmc
xchg
dec
mov
sbb
repnz
pusha
add
sub
gs
adc
fnstsw
dec
pop
fdivl
fwait
out
test
jmp
and
sub
and
sti
out
js
das
mov
fs
or
imul
hlt
pushl
push
dec
ds
insl
insl
test
mov
mov
mov
movsl
loop
decl
sub
rcrb
jae
pushf
cmp
cmc
mov
into
and
sarb
adc
xchg
jge
xor
push
cs
daa
mov
cmp
pop
push
push
jbe
mov
les
scas
pop
int
mov
mov
adc
mov
insl
adc
or
scas
repz
and
fwait
insb
scas
loopne
gs
xchg
push
sbb
aad
jle
sbb
mov
aam
shlb
cmpsl
sub
or
inc
push
rcrl
push
loope
push
ljmp
cli
mov
in
mov
mov
std
pushl
sti
movsb
jg
jp
hlt
leave
popf
aam
push
xor
lds
mov
pop
shl
orl
ucomiss
nop
cmpb
insb
pop
jl
call
inc
orl
lret
dec
fnstsw
push
sbb
out
xor
ret
data16
out
inc
add
aaa
sbb
add
nop
adc
xor
ret
fsubrl
dec
jmp
ficoml
enter
push
movsb
sbb
pop
inc
inc
in
aaa
jns
icebp
adc
adc
ljmp
or
imul
lods
shlb
mov
popl
push
imul
decl
cltd
in
dec
sar
data16
or
scas
hlt
cmp
rcrb
sti
push
out
in
xchg
aam
mov
jmp
out
lods
sbb
test
stc
or
push
rol
pop
pop
aaa
sub
imul
aaa
aas
jmp
jns
js
gs
push
out
jo
mov
cli
cmpsb
mov
xchg
dec
mov
pop
adc
fnstenv
xchg
mov
leave
jg
mov
mov
pusha
ja
sbb
mov
scas
push
arpl
inc
pop
or
mov
or
and
in
imul
mov
in
jle
loopne
pop
insl
popl
addl
das
icebp
mov
adc
mov
std
dec
cs
cmp
adc
mov
lcall
dec
mov
push
loop
pop
mov
inc
int3
push
adc
adc
ret
dec
sbb
js
xchg
pushl
jnp
jl
jecxz
or
sub
sub
fimuls
pop
push
aaa
mov
push
test
mov
loope
xor
xchg
cmp
jp
xchg
lea
sbb
decl
ds
jbe
mov
xor
stc
in
daa
and
out
pop
fs
test
jg
pushl
out
fdivrl
divl
loopne
adc
clc
mov
out
jbe
pop
pop
fldl
mov
sbb
pop
clc
sub
pop
sbb
rcrl
lds
lret
mov
cmpsl
mov
pushl
adc
sti
xor
push
bound
stc
mov
dec
pop
rcll
ss
out
add
decl
jg
lock
cmp
insl
nop
andb
sub
lcall
sbb
popa
mov
cmc
add
adc
out
jo
scas
sbb
pop
lahf
sub
xchg
inc
mov
gs
js
ja
add
mov
incl
and
js
movsl
pop
ret
popa
or
fcomps
mov
fucomi
pop
dec
lods
call
iret
cmpsb
sbb
sub
cmp
das
pop
pop
mov
addl
int3
insb
stc
pop
lods
xchg
mov
dec
mov
mov
jo
lret
loop
mov
inc
adc
adc
movsb
add
popf
mov
add
mov
outsl
sub
loope
sbb
je
cmp
aam
mov
decl
cwtl
test
neg
js
sbb
lods
out
pop
cwtl
movsb
cmp
or
decl
cmp
mov
xchg
push
xor
mov
mov
dec
clc
jg
push
pop
repnz
int
sub
out
jnp
mov
aas
dec
ljmp
fiaddl
hlt
fmull
mov
mov
add
mov
xchg
pushf
data16
mov
ljmp
lret
pop
into
add
mov
xor
cli
decl
adc
xor
loop
enter
sub
es
sahf
sub
xlat
in
out
mov
push
xor
mov
xor
popa
or
pop
add
jns
mov
test
add
fildl
jae
mov
jmp
jp
jmp
pop
dec
push
mov
and
and
cmc
xor
adc
cltd
ljmp
jmp
mov
int
pop
sahf
test
out
incb
pushf
and
jge
pop
fsubl
xchg
sbb
sbb
iret
rolb
lock
jp
scas
and
and
xor
in
push
mov
adc
xlat
aaa
lret
rcl
lds
sbb
sbb
mov
popa
jne
rcrl
pusha
shl
movsb
ljmp
jb
mov
incl
inc
pushf
repnz
fwait
sub
xchg
sbb
sub
jp
jbe
add
out
lret
ret
inc
mov
fdivrl
ljmp
jns
xchg
and
outsl
sub
shlb
sar
mov
and
shrl
pop
ret
push
fdivp
sbb
js
cmpsl
clc
lods
push
or
jle
movsl
pushl
imull
icebp
pop
push
add
outsl
mov
and
xchg
cltd
ss
jmp
inc
pusha
xor
mov
pusha
sbbl
add
lcall
pop
fadds
push
cmp
inc
insl
mov
mov
in
fdivl
inc
sbb
ljmp
dec
xor
test
or
outsl
jecxz
faddp
int3
test
aas
inc
lret
dec
sbbb
lcall
std
out
dec
pop
or
mov
sub
mov
adc
ljmp
js
mov
xchg
push
mov
in
lods
jno
in
mov
notb
insl
cmp
ljmp
std
xchg
lea
rcrl
lds
pop
enter
out
aas
sahf
imul
call
fcmove
jmp
orb
sub
push
or
sub
cs
mov
repnz
push
jno
xor
mov
stc
lds
repnz
aaa
stos
fs
mov
mov
inc
dec
push
fcmovbe
arpl
ljmp
lcall
jne,pn
movsl
pop
and
movsl
mov
xchg
fs
and
das
push
or
idivb
xchg
fcoml
sbb
xor
mov
and
jl
add
pop
test
push
jg
shll
jmp
dec
push
hlt
or
lock
cld
add
ffreep
mov
add
ds
add
jnp
adc
in
mov
push
outsl
imul
cmp
imul
shlb
cmpsl
int3
mov
dec
std
dec
adc
call
adc
jo
push
push
xor
sarb
cmp
hlt
and
pop
das
stc
ret
scas
sbb
sub
cmp
sti
lods
loopne
or
xchg
mov
ljmp
mov
or
xlat
mov
es
xlat
lcall
stos
cld
das
orb
sub
mov
insl
in
js
push
push
cs
pop
shll
xor
lret
div
or
inc
push
std
fists
ljmp
mov
fldenv
nop
xchg
pop
add
lcall
in
out
leave
pop
out
cmpb
bound
mov
sbb
push
push
mov
insb
lock
pushl
inc
xchg
loope
test
repz
and
inc
mov
decl
out
stos
xchg
mov
push
aam
xor
ljmp
pop
sbb
add
scas
in
nop
adc
stc
mov
jne
sti
xchg
adc
jmp
stos
mov
cmp
stos
sub
cs
cmpsl
clc
pushl
orb
std
mov
pusha
mov
aad
add
aas
test
push
fcmove
popf
jo
in
dec
out
or
mov
rol
cmp
cmp
mov
pushl
filds
repz
mov
inc
mov
ficoml
sub
and
les
stc
loop
in
inc
ss
adcb
icebp
je
in
cmp
or
cld
push
adc
clc
and
pushf
xor
neg
je
push
mov
fisubs
pop
das
iret
xchg
insl
xlat
push
xor
add
jg
and
negb
mov
push
xor
jne
push
std
jge
insb
cld
jno
or
jmp
sbb
lods
sub
ret
in
pop
imul
push
decl
jmp
jne
mov
scas
mov
dec
pop
jge
je
cwtl
sub
lods
push
inc
and
out
xor
push
jo
mov
xlat
push
push
inc
pop
loopne
or
dec
cmp
lock
or
call
add
outsb
sub
ret
lock
sub
jmp
pusha
jbe
scas
ljmp
or
mov
out
adc
and
ljmp
outsb
add
dec
scas
inc
shrl
dec
xchg
push
cld
add
push
insl
scas
push
ljmp
fs
mov
insb
dec
fdivl
fidivrs
sbbl
dec
sbb
fucomi
shlb
std
jp
and
sub
arpl
sahf
stos
fimull
fnsave
jmp
mov
push
cmpl
movsl
xor
ds
mov
test
sarl
dec
push
or
mov
or
mov
pushf
mov
pop
fdivs
mov
lcall
cld
gs
sarl
xchg
inc
mov
out
mov
mov
scas
iret
xlat
into
insb
push
add
fisubs
sub
pusha
loop
sbb
test
pop
ljmp
fwait
cmc
shr
loope
inc
in
pop
lea
inc
pushf
dec
ret
mov
mov
sub
and
adc
dec
jmp
jmp
loopne
out
in
dec
jle
nop
inc
push
mov
out
std
aaa
andl
loopne
or
ljmp
out
cmp
lea
fistps
call
adc
mov
xlat
fwait
dec
cmc
push
xchg
movsl
and
int
pop
xor
fstpl
lret
sbb
outsb
clc
repnz
jg
pop
sahf
mov
in
mov
inc
xor
mov
push
popf
and
decl
pop
lods
mov
les
bound
or
jmp
aad
bound
jbe
addr16
xor
mov
jns
dec
add
pop
xchg
fbld
sbb
repz
and
mov
dec
enter
mov
lds
lock
stc
inc
pop
enter
iret
sbb
faddl
sbb
cld
push
xchg
mov
das
jo
pop
and
xor
nop
or
testl
gs
scas
jg
and
ret
inc
sbb
daa
xor
ljmp
jg
ficomps
sub
faddl
mov
cmc
push
imul
xor
out
adc
rcll
sar
add
enter
cli
mov
pop
jl
dec
insl
xchg
andl
mov
loopne,pn
hlt
cmp
mov
cmovp
decl
dec
stos
cmp
lods
jo
aad
xchg
jnp
sbb
mov
aas
push
lret
mov
cwtl
loope
shrl
std
jbe
mov
into
mov
sahf
adc
jo
clc
inc
mov
lcall
fwait
cmpsb
sbb
outsl
cmc
leave
out
mov
popf
add
incl
je
das
xor
mov
cli
mov
cvtpi2ps
jo
jno
icebp
mov
jns
out
push
adc
dec
addb
cmp
xchg
pop
mov
jmp
inc
lds
ja
mov
add
subl
cmp
jbe
lcall
ljmp
jl
or
jecxz
rolb
mov
cmp
mov
fimull
cmp
jno
and
rorb
lods
jb
jl
cld
mov
mov
add
loope
push
adc
push
mov
xchg
cli
jo
adc
jg
sbb
cmc
lods
imul
inc
adc
mov
dec
jmp
inc
addr16
mov
or
mov
int3
data16
out
cmp
dec
test
push
jge
dec
mov
loop
mov
int3
mov
into
push
inc
or
pop
xor
pop
sbb
cmp
inc
movsb
mov
lcall
jb
das
mov
xchg
fisttpll
iret
mov
fs
cmp
mov
pushl
xchg
mov
mov
mov
sbb
xchg
dec
mov
sub
subl
jmp
push
js
xchg
jecxz
imul
or
int3
jb
adc
cmpsl
mov
pushl
xchg
notl
inc
ret
ret
icebp
aam
inc
xchg
int3
test
push
dec
pop
cmp
sbb
dec
in
and
in
stos
push
jno
loope
orb
ljmp
dec
loopne
dec
loopne
jne
xchg
xor
and
add
ljmp
jg
jno
rorb
ficoml
adc
dec
and
ret
xchg
xor
adc
call
fs
and
js
repnz
pop
ret
aad
mov
jbe
fsubrl
lds
insl
sbb
decl
mov
cmp
xor
ja
jmp
inc
mov
mov
lods
fwait
out
push
std
dec
cmc
or
jle
clc
pushl
mov
pusha
fstl
add
sbb
xchg
adcl
imul
imul
iret
inc
push
or
repnz
loope
pop
sub
aaa
cld
xlat
inc
sarb
pop
into
adc
test
dec
fmull
lock
jmp
aad
es
dec
fistpll
lods
sbb
sti
data16
loope
mov
rep
repz
rcll
xacquire
je
pop
pusha
scas
sub
cld
cmp
jge
xchg
xchg
sbb
cmp
jmp
cli
cwtl
add
pop
mov
cmp
ljmp
lea
cmp
dec
enter
ljmp
mov
daa
jecxz
data16
mov
mov
dec
mov
mov
mov
xor
xchg
xorb
push
shll
int
xchg
dec
xchg
dec
clc
xor
out
mov
mov
mov
or
adc
push
and
sti
movsb
mov
out
iret
dec
fisttps
dec
sbb
add
mov
jo
mov
dec
shlb
inc
adc
pop
fcmovbe
jg
mov
fdivrl
cmp
or
jg
test
sti
jb
fistl
scas
ljmp
inc
cmp
jmp
popf
pop
call
lds
lds
lods
mov
lret
adc
pushf
pop
jle
and
lcall
xchg
jno
in
sbb
aas
push
scas
cltd
sbb
xor
cmpsb
call
xor
fnstenv
mov
stc
leave
mov
jbe
push
out
xor
sbb
pop
adc
pushl
inc
fucomp
sub
loope
pop
inc
ja
mov
mov
push
rorb
out
xchg
decl
jle
repnz
cmp
inc
sub
je
nop
loop
mov
inc
dec
ss
mov
fldenv
push
scas
sub
jae
jp
and
ret
pop
push
fiadds
fwait
enter
incl
setns
lock
in
cli
jno
je
loopne
lods
lcall
cmpsl
sbb
lea
loopne
xor
inc
cmp
cmp
dec
xchg
leave
and
sbb
xlat
fprem
call
lret
mov
xor
or
push
in
incl
xchg
sub
xchg
dec
repz
mov
enter
sub
mov
pop
std
push
lea
dec
and
test
loopne
xlat
stos
in
xorb
std
mov
lret
ljmp
iret
scas
pop
or
lret
mov
push
and
mov
mov
push
inc
sub
mov
inc
not
int3
mov
add
mull
loop
pushf
cmp
js
sub
mov
adc
and
mov
addl
mov
fdivrp
aad
fldenv
cmp
mov
or
mov
mov
sti
add
arpl
add
lods
call
lcall
out
dec
rcr
fildll
inc
xor
fcompl
addr16
sbb
dec
fs
and
jnp
dec
jo
add
decl
filds
cmp
scas
pop
adc
cltd
lds
sub
out
xchg
mov
call
dec
sbb
jns
sub
xchg
cwtl
mov
dec
dec
out
cwtl
push
dec
fwait
out
andb
xchg
lcall
decl
pop
xchg
xor
shl
mov
xor
dec
push
sbb
icebp
incl
idivb
idiv
icebp
dec
xchg
mov
sub
pop
xchg
mov
xor
add
adc
pushf
movsl
aaa
cltd
xchg
adc
rorl
cmpsb
add
popa
xlat
repz
xchg
in
or
test
mov
pushf
insl
xchg
cli
mov
repz
fdivr
mov
mov
mov
jmp
test
pop
or
sbb
inc
cmp
outsl
push
js
xchg
mov
pop
mov
std
xor
cmp
inc
xchg
mov
push
decl
popa
mov
cmp
pop
adc
in
xchg
pop
or
mov
ja
or
ljmp
inc
jno,pn
subl
aam
stos
das
movsl
pop
xchg
dec
lods
cmp
in
or
decl
add
fisttpl
and
mov
insb
lret
iret
stos
jo
cmp
iret
pop
push
push
add
lcall
mov
push
add
sbb
xor
mov
or
insb
mov
lods
scas
pop
rcll
arpl
pop
mov
jno
sub
sub
xchg
and
loopne
lock
pop
push
lcall
ss
cwtl
dec
jnp
mov
rorb
adc
and
int
ret
pop
cmp
jle
and
les
jmp
sub
iret
les
loopne
or
push
cmpsl
and
pop
lahf
mov
ss
call
push
ds
loope
or
push
hlt
mov
jae
mov
das
inc
std
pop
mov
push
xchg
test
dec
aam
hlt
pop
cs
loop
and
jg
mov
push
pop
je
cmc
in
jmp
jmp
loop
dec
dec
test
aaa
stc
into
sub
mov
push
inc
lds
adc
aas
or
mov
add
in
cld
in
push
mov
insb
xchg
add
inc
outsl
cmpsb
fdivrs
stc
jmp
inc
mov
cmpsb
mov
movsb
add
sub
stos
scas
in
mov
lcall
jmp
xchg
jecxz
cmc
cltd
popa
sbb
ljmp
sbb
and
jnp
xor
divl
pusha
loopne
sahf
outsl
cli
inc
adc
stc
xchg
bound
lret
sarb
push
in
insb
push
rol
lret
in
inc
call
pop
ret
xor
jb
push
xchg
fsubp
fidivs
pusha
incl
push
mov
aaa
nop
add
adc
mov
or
js
sbb
mov
dec
lock
ficoml
jo
iret
mov
jg
cmpl
das
xor
dec
push
xor
lds
jno
mov
pop
add
pop
cld
decl
fbld
inc
jae
push
sub
hlt
inc
call
adc
lret
and
rcrl
shrl
loopne
jle
mov
mov
lcall
add
cmpl
test
jo
daa
shlb
or
dec
lcall
mov
fcompl
pop
and
lcall
int3
stc
stos
sbb
lds
imul
sbb
ficomps
or
dec
jmp
je
in
mov
fsubs
mov
test
push
xor
mov
insb
cld
scas
cli
jmp
pop
xchg
add
xchg
push
pop
into
xchg
mov
adc
outsb
adc
push
sti
jmp
jnp
sub
jns
push
push
cli
sbb
add
sahf
adc
sahf
cmpsl
xchg
call
dec
and
jg
es
loop
addr16
and
aad
mov
outsl
clc
outsl
and
into
pushf
fucomi
cmp
ret
mov
lods
hlt
mov
cld
decl
xchg
sub
int3
popf
push
push
mov
or
lcall
add
lea
xchg
mov
jnp
push
lcall
cmp
setb
jecxz
mov
cmp
sbb
xchg
adc
cld
ds
stos
inc
lcall
push
adc
add
inc
insb
idiv
call
push
arpl
test
pusha
daa
xor
mov
daa
and
adc
outsb
mov
and
aaa
adc
cwtl
pop
fadds
incl
popa
push
scas
inc
mov
xchg
rol
in
sbb
jbe
pop
movsb
push
incl
jae
jecxz
pop
daa
outsb
std
adc
dec
ret
sbb
lods
sub
call
xorb
xor
adc
push
sarb
imul
js
xor
xor
pusha
xor
ret
inc
sbb
xor
and
or
sub
push
inc
out
in
rolb
cmp
rorb
aaa
push
cmp
call
loopne
fmuls
jp
in
xlat
cmc
clc
push
push
mov
filds
in
sbb
xor
stc
fcoml
sub
mov
xchg
mov
lret
mov
push
push
xchg
mov
push
movsb
js
jecxz
ja
xchg
inc
inc
cmp
pop
mov
insl
fildl
into
pop
mov
fildll
ss
nop
jnp
mov
mov
pop
in
mov
dec
dec
test
cmpsb
pop
cmp
jne
sub
int
cmp
xor
add
fimull
movsl
jmp
call
jno
inc
hlt
shl
cmc
and
adc
inc
or
stc
xor
js
scas
add
mov
cmp
int
sbb
aad
adc
outsl
call
flds
sbb
sbb
fimull
movsb
nop
out
sbb
jnp
jbe
pushl
popaw
jmp
or
add
inc
icebp
inc
jl
sub
jmp
popa
sub
cmp
add
jno
cmpsl
mov
loope
incl
dec
hlt
pop
xchg
xchg
leave
outsb
icebp
adc
jno
xlat
aaa
into
dec
ret
cmp
sub
sbb
push
sub
jg
push
add
adc
es
jge
rolb
arpl
pushf
sub
inc
cmpl
sbb
push
mov
cmp
push
lcall
jo
cmc
sub
cs
mov
xor
lahf
pop
xor
fistps
or
fs
cmp
push
cmp
sbb
xchg
mov
stos
pop
pop
and
xlat
mov
std
xchg
adcb
loope
mov
fldl
lcall
inc
bound
mov
repz
sbb
xor
es
ds
sbb
std
inc
xchg
or
repnz
aam
sub
jmp
sub
mov
std
push
mov
cli
notl
pop
dec
mov
fwait
mov
fsubrp
adc
scas
bound
cmp
js
xor
mov
sbb
pop
add
sub
pushl
cltd
cmp
pop
icebp
scas
int3
lds
clc
shrb
stos
nop
adc
scas
sahf
decl
clc
adcl
push
push
pop
ss
hlt
dec
pushf
cmpsl
or
scas
or
or
rcr
push
inc
sbb
sbbl
sbb
pushf
test
inc
jmp
or
das
popa
test
or
divb
inc
cli
je
or
test
mov
push
sahf
and
sub
pushl
mov
lea
sbb
movsl
adc
mov
mov
xor
pop
push
adc
sbb
in
aaa
icebp
and
cmpsl
test
sub
in
or
mov
mov
jnp
mov
arpl
mov
cmp
pushl
push
cmp
sbb
jns
xlat
adc
fstps
loopne
xchg
pop
sub
jg
xchg
cmp
jno
movsl
scas
and
loope
push
xchg
push
sbb
outsb
mov
mov
enter
test
jmp
adc
adc
adc
mov
mov
ret
lcall
clc
call
popf
push
fwait
mov
nop
lret
ret
jmp
cld
cmpsb
nop
dec
push
pushl
cli
lea
inc
pop
test
mov
pop
fnsave
dec
aam
out
cmc
pop
mov
scas
fstl
aad
pop
and
js
decl
mov
mov
dec
test
cwtl
sbb
sbb
jbe
add
sbb
xor
icebp
leave
test
scas
mov
mov
out
push
sub
test
jmp
sahf
xchg
cmp
mov
jo
push
stos
push
sub
inc
cmp
dec
lea
adc
aas
pop
jl
xchg
inc
add
push
jne
jb
push
outsw
jb
mov
outsb
arpl
outsl
jne
je
xor
je
jns
adc
push
imul
sbb
jne
je
inc
jns
push
outsl
push
imul
int3
ret
cmp
fs
imul
sub
inc
js
push
dec
lahf
insb
outsl
arpl
fs
arpl
outsl
fcmovnu
outsb
addr16
gs
jbe
jb
push
arpl
outsl
outsb
xorb
jg
inc
imul
pop
xor
imull
insb
cmp
xor
jb
inc
imul
imul
rolb
cmp
add
push
imul
pop
out
adc
sbb
jns
xor
ss
sbb
lock
movsb
lcall
inc
dec
sti
insl
cli
mov
inc
outsb
jne
sub
xchg
mov
xor
xor
es
sbb
sbb
jb
mov
mov
sub
pop
adc
xchg
mov
xorl
addb
pop
adc
and
inc
jno
andb
inc
inc
dec
shrl
stos
add
mov
dec
stc
inc
adc
pusha
add
add
add
test
dec
and
add
lahf
push
mov
xchg
add
pusha
pop
outsl
and
andb
pop
inc
adc
add
add
add
lea
dec
push
out
adc
bound
sbb
nop
inc
inc
push
or
subl
stos
add
xchg
mov
sub
add
addb
or
push
shlb
std
dec
rorb
adc
xchg
mov
dec
pop
pop
adc
mul
adc
add
loope
jne
or
xchg
sbb
or
lods
mov
jle
bound
inc
es
pop
inc
pop
outsl
pop
jb
bound
mov
dec
adc
inc
xor
xor
and
mov
nop
pop
test
aas
in
and
xor
popf
gs
sbb
sub
insl
push
mov
xlat
jne
xor
es
imul
sub
stos
xlat
ret
push
int
shlb
mov
mov
scas
adc
or
pop
inc
add
shlb
mov
mov
jl
and
mov
xor
sarl
mov
mov
or
sub
je
test
es
and
ret
add
pop
cltd
and
cmp
orb
xor
inc
test
outsl
adc
add
mov
lea
lods
cmp
add
and
jo
sbb
incb
mov
ss
pop
add
add
mov
sti
mov
sbb
fdivrs
outsb
sarb
inc
dec
mov
xor
sbb
mov
and
push
add
and
loope
mov
push
mov
sbb
popa
mov
jle
jb
mov
rorb
inc
jb
inc
xor
adc
daa
pop
leave
leave
andb
mov
insl
and
and
lds
outsl
cmp
sbb
dec
jb
xor
dec
inc
gs
xchg
lock
push
push
dec
jae
dec
pop
push
mov
ficompl
out
push
inc
dec
xchg
dec
adc
lock
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fcoml
add
add
add
add
add
add
add
add
add
add
mov
add
rclb
add
add
add
add
add
add
add
add
add
fadds
add
movsb
push
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
sub
add
insb
pop
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
js
add
xor
inc
add
add
add
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
enter
cld
push
add
in
add
add
add
fadd
inc
add
popa
fiadds
cli
xchg
int3
aas
lea
int3
cwtl
loope
inc
pusha
inc
and
insb
lcall
adc
shlb
rcll
add
js
incb
xchg
push
fistps
push
ss
ficomps
loopne
nop
out
jae
or
xchg
xchg
std
and
xchg
lds
adc
inc
mov
jmp
xchg
jle
es
push
test
adc
mov
pop
xor
pop
pop
lock
pop
or
or
push
sub
xor
push
aaa
xor
sar
cmpsb
mov
out
add
fcmovne
pop
sub
jae
xor
cli
and
fcmovne
pop
fnsave
pop
aam
mov
inc
roll
pop
shrl
mov
mov
lock
push
adc
stos
or
es
movsl
lods
sub
push
xor
push
pop
cmc
lock
sub
push
and
mov
mov
jmp
inc
add
subb
orl
mov
sbb
lret
xor
lcall
push
jg
or
cmpb
daa
pop
push
xchg
inc
arpl
bnd
inc
sbb
sbbl
sahf
dec
adc
ljmp
in
scas
xor
jne
dec
test
jl
shl
test
popl
dec
ja
mov
das
sub
jb
sbb
pop
xchg
and
mov
into
fs
leave
fadd
xchg
outsl
imul
movsl
int
loope
push
into
dec
cld
mov
xor
fldt
loopne
enter
call
lea
dec
xor
test
push
add
in
sar
sbb
aas
cs
in
cli
dec
adc
push
cmc
jno
mov
sub
test
nop
enter
and
imul
mov
out
sbb
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
les
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
movl
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
lret
into
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
int
add
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
rolb
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
roll
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
aad
add
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
fadds
popa
fiadds
xchg
sbb
sti
lds
mov
inc
cmp
inc
push
jl
pop
test
adc
or
jecxz
cli
xchg
cli
jmp
push
je
mov
imul
ss
clc
outsl
fcmovnbe
dec
pop
push
out
sbb
popf
add
int3
inc
jb
fsub
jp
xchg
mov
add
ret
iret
push
xchg
rorb
and
mov
pop
or
hlt
movd
lret
pusha
in
lods
das
and
test
ja
xchg
sbb
rcll
outsb
and
lahf
js
inc
push
mov
jb
inc
mov
jne
dec
adc
nop
hlt
test
test
dec
insb
addb
pop
jmp
lock
lret
shll
sub
jnp
xchg
add
adc
dec
xchg
cmp
jae
es
repz
and
insl
pop
stos
xchg
test
les
push
pop
sbb
fucomp
and
jbe
test
adc
xor
lods
inc
stos
cmp
cltd
push
cmp
out
jg
mov
sti
inc
push
jnp
inc
lcall
sbb
inc
adc
inc
cmp
and
scas
inc
mov
cmp
inc
jne
data16
fsubl
and
cmp
or
shl
or
or
add
aam
mov
sar
out
ret
fidivrs
ret
enter
clc
aam
outsl
repnz
frstor
push
pop
mov
add
mov
int3
push
or
or
iret
jle
pop
cltd
xchg
add
cli
movsb
cmpsl
je
aas
add
inc
das
inc
scas
add
ror
call
je
and
test
test
lcall
lcall
pop
fs
repnz
aad
fcompl
sub
int3
repnz
js
dec
imul
lret
xchg
pop
push
dec
cmpsl
and
and
sbb
adc
mov
sbb
mov
mov
mov
les
mov
negl
sbb
fnsave
pop
pop
fisubl
lea
popa
stos
or
xchg
push
xchg
cwtl
sahf
cmp
mov
add
jo
sbb
into
loop
and
loop
pop
test
jnp
jae
adc
fmull
pop
dec
stos
lods
loope
xchg
sbb
mov
out
xchg
cwtl
int
xchg
ljmp
in
dec
call
add
test
or
stos
mov
sbb
jnp
nop
jbe
or
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
insb
inc
add
insb
inc
add
add
lret
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
add
imul
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
jne
je
jb
outsl
fs
insb
outsl
jae
inc
outsb
jne
add
push
gs
imul
add
