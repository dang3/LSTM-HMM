pushl
and
dec
imul
lret
push
xor
fsubp
mov
cld
in
cld
push
xor
decl
adcb
sahf
in
mov
mulb
sub
repz
push
adc
roll
xchg
xchg
cmp
xor
mov
mov
or
or
mov
or
jmp
das
adc
or
adc
sarl
mov
cli
incb
pop
mov
add
xchg
mov
pop
loope
testb
outsl
push
and
jne
jg
js
or
inc
and
out
rcll
push
xor
int
jl
cwtl
scas
call
movsb
shll
adc
insl
insl
jne
movsb
je
jge
call
incl
push
cmp
xchg
outsl
shrl
sub
pop
jecxz
je
mov
jae
xor
call
bound
std
xor
repnz
shl
jnp
xchg
in
push
test
cmp
imul
decl
lahf
movsb
cltd
cmpsl
xchg
jle
add
dec
jl
andl
and
dec
or
mov
stc
dec
push
test
daa
xchg
loopne
iret
and
jl
fwait
add
loopne
stc
out
decl
fucomip
mov
ss
inc
dec
outsb
orb
mov
push
xlat
aas
fiaddl
lock
sti
lret
inc
mov
arpl
xchg
jge
lret
int
adc
inc
out
je
ja
nop
mov
adc
mov
test
mov
hlt
sbb
cmp
jnp
loopne
xchg
xor
ret
cmc
xchg
pop
xchg
mov
push
xlat
jp
and
out
xor
imul
sub
push
lret
xchg
aam
cmp
outsl
ds
imul
or
and
incl
xlat
xchg
mov
mov
adc
mov
movsl
std
mov
inc
xor
aaa
dec
sub
call
mov
stos
loopne
bound
int3
inc
jmp
adc
cmp
or
cld
ljmp
and
leave
sbb
incb
xchg
int
loopne
lock
stc
call
pop
jo
xchg
jo
loope
jmp
leave
push
pop
fadds
cld
sub
aaa
sbbl
call
mov
scas
addl
pop
mov
stos
hlt
cld
in
call
adc
les
cs
mov
sub
test
addr16
frstor
out
jge
add
sub
imul
movsl
notb
xchg
pop
xchg
mov
mov
rorl
pop
inc
fwait
in
push
push
xchg
jns
jnp
adc
call
dec
mov
ret
ss
jecxz
jmp
mov
dec
pop
sbb
aas
dec
shll
outsl
jns
inc
mov
out
mov
imul
jl
movsl
lods
push
loopne
xor
jmp
adc
mov
and
jl
and
cmp
mov
stc
and
pop
add
add
call
lods
or
push
sbb
nop
fidivrs
addb
push
mov
mov
mov
pushl
arpl
arpl
in
fwait
popf
shll
incl
xor
adc
xchg
cmp
cmpsl
inc
pop
mov
xlat
fdivp
sbb
decl
pop
test
mov
fs
or
and
fdivrl
sbb
lret
mov
ljmp
lods
adc
fs
mov
xchg
mov
xlat
xlat
mov
inc
jae
add
std
pushl
sbb
sbb
mov
dec
fisttpl
loope
dec
int3
jbe
push
adc
loope
mov
shrb
xor
std
fs
test
jnp
hlt
sarb
pushl
add
add
pop
fdivs
sahf
cld
cmp
pop
jl
add
fsubrs
or
sti
pushl
adc
scas
inc
or
imul
jg
stc
test
or
faddl
or
add
sti
and
adc
sbb
aaa
push
insl
subl
jg
and
jecxz
out
jmp
lds
inc
aad
inc
loop
pop
ret
ret
outsb
outsb
pop
das
xchg
mov
push
cmc
inc
cmp
pusha
imul
cmp
movsl
pop
outsb
testl
inc
lret
idiv
outsl
adc
mov
inc
pop
push
sbb
idivl
and
mov
pop
loop
pushl
cmp
cmp
xchg
cmp
sbb
mov
fists
aad
cmp
lret
into
mov
push
imul
mov
lcall
movsw
push
and
and
xchg
aaa
movsl
movsl
xorb
ret
sbb
xchg
gs
and
mov
jp
inc
imul
cmp
movsl
idiv
fcomi
and
inc
cmc
dec
loop
aad
andb
cmp
jbe
jmp
cmc
lret
inc
movsl
sbb
cmc
aaa
sbb
jno
pop
data16
jnp
fbstp
outsb
cmp
shlb
pop
loopne
insl
outsl
jg
and
jno
cmp
and
outsl
jmp
das
sbb
push
cmp
maskmovq
idivl
and
sbb
loop
sub
getsec
jno
gs
aaa
imul
mov
into
push
lret
loop
push
outsb
repz
insl
aaa
rcrl
inc
cmc
sbb
pop
divb
gs
mov
testl
js
div
jno
mov
test
ret
jno
in
outsb
loop
inc
sbb
sub
loop
sbb
das
lret
jno
imul
loop
imul
loop
aas
in
mov
test
cmp
and
aaa
lret
adc
sbbb
xchg
insl
xchg
pop
pop
sub
iret
xchg
cmc
xor
es
leave
subb
movsl
pop
scas
lcall
decl
mov
dec
adc
push
adc
imul
movsl
into
cmp
in
pop
mov
cmc
mov
imul
ret
push
or
lods
jp
imul
sbb
mov
testl
push
or
shl
loop
push
mov
pop
sbb
jne
cmp
lock
je
loope
push
dec
and
inc
imul
inc
and
xor
dec
xorb
leave
pop
stos
int3
mov
ret
push
subb
jno
jno
or
hlt
data16
mov
or
decl
insl
test
or
mov
mov
insb
data16
mov
pop
jb
mov
loop
movsl
cmp
and
sub
xchg
push
jno
jno
and
lods
mov
pop
and
pop
out
mov
push
mov
es
inc
movsl
add
cmp
cmpsl
push
sub
insb
or
jno
ret
xchg
lods
xor
imul
and
cmc
cmp
xchg
xor
test
icebp
inc
das
inc
cmc
inc
xchg
cmp
push
cmp
inc
test
jmp
arpl
mov
das
js
into
and
lcall
adc
mov
sbb
imul
inc
jno
subl
xor
xchg
jno
into
ljmp
arpl
mov
cmp
jp
je
ret
das
push
and
inc
lret
pop
pop
subl
iret
and
mov
add
adc
hlt
dec
mov
adc
xor
cltd
xor
mov
inc
add
cmp
addr16
mov
xor
and
add
shlb
sbb
repnz
fisttps
sub
mov
pop
outsl
jg
adc
and
lock
push
ficoml
comiss
neg
or
dec
not
mov
in
mov
mov
sub
sub
out
mov
push
cltd
loopne
xchg
not
adc
pop
sub
add
xor
adc
fidivrs
jns
mov
pop
loopne
fisttps
sub
push
mov
addl
roll
sbb
gs
mov
adc
sbb
idivl
dec
nop
and
cmp
lds
sub
fisttpll
scas
or
sbb
mov
insl
mov
or
js
les
mov
lods
jne
sti
test
jae
and
adc
fstpl
jge
neg
and
imul
into
std
mov
sbb
push
in
str
xchg
je
pusha
popa
sbb
std
fxch
xor
mov
div
in
xorb
stc
cmp
jnp,pt
ret
ss
or
ret
sub
add
mov
sbb
adc
pop
inc
sub
pop
cmp
hlt
sahf
out
adc
aas
test
je
mull
insb
or
adcl
sub
out
lock
neg
adc
push
or
cmp
lock
add
or
dec
or
mov
cmp
rorl
dec
sub
imul
push
xchg
inc
add
xor
sub
push
xor
sub
mov
and
out
or
into
clc
incb
mov
mov
fwait
pop
fbld
push
sbb
mov
in
adc
mov
in
xchg
adc
cld
dec
adc
sub
inc
xchg
idivb
add
and
jecxz
push
das
inc
jecxz
icebp
adc
scas
sbb
adc
fildll
pusha
push
pop
rcll
or
fs
mov
mov
loope
sti
mov
shrl
pop
test
add
std
mov
and
loop
test
cmp
sbb
mov
and
rcl
dec
mov
sbb
mov
movb
add
frstor
sub
jnp
fmuls
xor
pop
push
idivl
xchg
test
add
fildl
push
push
and
cmpsl
xor
scas
std
rcrl
adc
sbb
and
cwtl
pop
and
mov
jp
lds
shrl
pusha
iret
mov
jl
mov
sbb
inc
insb
push
lret
jecxz
add
fistpll
pop
xor
jb
fimuls
dec
pop
mov
orb
pop
cmp
jg
out
sub
push
cmp
and
mov
call
add
jge
push
stos
shrl
test
mov
xchg
in
lret
inc
mov
jb
loopne
or
sub
inc
cli
xchg
pop
mov
jb
movsl
rolb
and
mov
sub
loop
inc
int
divb
cmc
pushl
mov
mov
and
lret
data16
cmp
sbb
subb
addl
pop
sub
pop
mov
mov
mov
insl
mov
andb
sbb
lret
and
es
and
push
dec
mov
cmp
mov
aaa
sbb
roll
es
jno
mov
outsl
shlb
or
push
lcall
pushf
inc
outsb
shll
mov
add
imul
mov
push
pop
popa
add
add
mov
sbb
adcl
mov
mov
push
inc
testb
sbb
xchg
fcmovnb
mov
gs
and
das
jno
mov
mov
push
mov
aaa
insb
xchg
in
cmp
xchg
push
imul
cmp
fistpl
fstl
jno
imul
cmc
mov
lods
sub
hlt
imul
dec
loop
inc
or
lods
inc
mov
push
adc
dec
popf
mov
loope
mov
mov
push
clc
addr16
jno
into
cmp
andb
ret
push
lea
ret
jl
fcmovnu
mov
loope
mov
xorb
jge
mov
gs
sbb
sbb
push
or
add
gs
xor
flds
jg
mov
push
cmp
xor
sub
arpl
dec
test
mov
cmpsb
lea
fiadds
xchg
pop
imull
jecxz
adcb
and
pushl
shrl
inc
sbb
mov
jo
mov
daa
fwait
add
mov
fnstenv
iret
jo
jo
inc
mov
dec
cld
mov
mov
jno
int3
pop
xor
scas
out
fisubl
push
sub
or
movzwl
andb
fisttpl
or
adc
test
push
push
test
les
mov
jmp
das
gs
bound
pop
fcmove
into
cmp
inc
es
scas
or
jno
fstp
xor
mov
aad
inc
pop
mov
cmp
adc
sbb
sbb
push
dec
enter
imul
or
lds
test
mov
pushf
sbb
inc
push
or
aad
pop
lea
pushf
mov
push
or
push
pushw
test
test
push
mov
mov
dec
or
mov
mov
lret
subb
ret
cmc
outsb
ljmp
in
ret
rcll
pop
les
mov
int
iret
lea
and
and
fdivl
rcrl
ja
cmc
in
shll
outsb
outsb
inc
cwtl
mov
data16
inc
adc
jmp
test
insb
jno
cmpsb
adc
gs
sbb
push
sub
loope
lods
jno
cli
push
aad
pop
daa
dec
aaa
pop
jae
lods
aaa
fstpt
vmovntps
xchg
mov
cmp
imul
sbb
je
lea
nop
lods
cmp
fisttps
cld
into
jle
or
xor
pop
xor
jnp
pop
into
push
mov
in
pop
imul
cmc
and
mov
inc
repz
mov
imul
mov
test
sarb
shrl
push
jo
aam
cmp
insl
inc
pop
cmp
shrl
out
add
iret
adc
jg
inc
mov
inc
add
inc
add
jp
xchg
stos
cld
add
xor
add
adc
mov
add
add
or
inc
dec
movsl
push
es
cmpsb
adc
aam
jmp
or
pop
or
imul
and
push
fidivl
jae
xlat
inc
out
inc
mov
clc
xor
mov
sbb
div
ds
inc
cmp
jmp
pop
fcomp
pop
test
inc
cmpb
mov
es
mov
fsubs
sbb
lock
cmp
dec
cmc
dec
mov
sti
or
and
add
stc
loopne
jae
adc
clc
add
sbb
sub
aaa
pop
subl
mov
sbb
xor
cmpsb
pop
pop
ds
sbbl
fadd
push
cwtl
test
xor
adc
sti
iret
pop
insl
xlat
jbe
xor
dec
rclb
or
inc
imul
inc
mov
iret
aaa
and
pop
in
popa
rorl
loop
int
cmpsb
mov
or
incb
cmpsl
ja
iret
jl,pn
jo
pop
and
loopne
push
xor
xchg
inc
inc
adc
cmp
xor
xor
outsl
sbb
dec
daa
in
mov
add
inc
shld
mov
or
aas
mov
sub
ds
mov
jns
data16
pop
dec
test
sub
inc
aas
mov
cld
lods
mov
sbb
cmpsl
in
dec
int
add
lods
test
insb
lret
inc
mov
or
ret
rolb
adc
fwait
loope
mov
int3
shld
out
lea
push
lea
push
xchg
cld
call
fsubs
push
lret
data16
into
sbb
add
imul
xchg
sub
js
int
lods
or
sti
mov
lods
insl
fists
out
rclb
andb
push
or
ss
xchg
adc
and
jg
sbb
add
test
fwait
pusha
leave
xchg
push
add
sbb
push
scas
push
xor
sub
cmc
ljmp
sbb
jns
and
sub
les
or
popl
mov
insl
mov
add
mov
adc
or
mov
push
inc
xor
daa
into
lock
stos
aad
mov
add
mov
pop
ss
xchg
mov
inc
stos
and
in
gs
outsl
lods
mov
adc
rcrb
cli
ficoms
push
lods
inc
orl
add
imul
mov
jl
push
add
jl
mov
fcmovnb
into
ja
das
push
push
into
jle
push
sub
sbbb
pop
test
adcl
inc
mov
add
add
bound
das
inc
popl
shll
sbb
sub
inc
insb
test
sub
pop
cmp
mov
cmp
sub
aaa
cld
lods
push
outsb
outsl
lods
ds
ror
and
inc
mov
cmp
imul
shlb
fmul
es
or
pop
enter
fildl
scas
negl
divb
loop
jne
lret
or
push
push
test
push
mov
rolb
mov
cmp
pop
push
sbb
sub
and
dec
insb
or
addb
arpl
shll
pop
aam
mov
sub
repnz
mov
test
jbe
daa
mov
or
jle
add
add
inc
jnp
outsl
inc
insl
and
mov
xchg
xchg
loop
outsb
dec
mov
jo
sbb
icebp
dec
pop
imul
aad
insl
sub
sbb
and
loop
das
adc
and
sti
xor
mov
mov
shr
lret
lret
pop
push
out
shll
push
cwtl
imul
ret
out
push
push
or
mov
push
xchg
push
mov
movsl
int
das
icebp
gs
rcl
pop
pop
movsl
cmp
repnz
or
inc
and
sub
mov
inc
add
push
imul
lret
sbb
or
sub
lods
adc
cmc
dec
pop
inc
ret
sbb
cld
aad
movsl
fdivrl
rclb
jbe
mov
andb
push
xor
dec
push
xchg
pop
mov
les
xchg
inc
pop
cmp
lods
xchg
add
mov
fisttpll
pop
sti
push
add
dec
sbb
daa
loopne
sub
or
aad
cmp
bound
pop
push
mov
test
jp
dec
sub
lods
adc
jge
sub
push
pop
call
cmp
out
test
adc
adc
loop
cld
cmp
mov
cmp
push
lods
popa
mov
fst
sbb
test
and
xchg
pop
leave
es
outsb
aas
imul
rcll
outsb
adc
xchg
xchg
and
mov
mov
pop
push
fs
pop
mov
es
or
pop
gs
ret
mov
imul
push
int
mov
cmp
or
push
push
cmpsl
cmpsb
into
xor
push
add
adc
push
stos
sbb
movsl
mov
mov
mov
sub
cmp
mov
inc
sub
mov
cmp
xchg
jbe
mov
cmp
adc
mov
inc
test
and
sbbb
pusha
sub
inc
mov
sub
ret
mov
mov
lods
xor
push
sub
imull
or
lods
and
fcmovbe
test
jns
cmp
inc
mov
xchg
pop
mov
jp
cmp
sub
cmp
test
mov
mov
arpl
aad
inc
imul
pop
fistpll
ljmp
push
insl
stos
aam
sub
sbb
test
adc
sbb
shlb
divb
fcomps
push
leave
add
sbb
pop
xor
push
sub
notl
fidivrs
leave
sbb
mov
mov
xor
push
sub
pop
loope
lods
sbb
outsl
xchg
xor
and
pop
test
push
lods
inc
and
mov
sub
and
pop
rorl
mov
mov
shlb
imul
cmc
lret
insl
xchg
pop
xor
mov
out
popl
push
xor
mov
sti
into
inc
sub
inc
add
stos
jmp
pushf
or
lods
aad
jl
inc
inc
aas
subb
pop
sbb
dec
mov
lret
int3
inc
loope
inc
pop
pop
insl
jmp
gs
into
stc
fwait
outsb
enter
rcll
les
inc
push
aaa
adc
mov
popa
dec
and
outsb
pop
mov
lods
inc
pop
nop
cmc
clc
fildll
sbb
rcl
outsl
popa
or
mov
mov
push
pop
sbb
loope
movl
cltd
cmc
xlat
daa
inc
test
sti
or
gs
pop
das
mov
mov
mov
rcl
and
insl
int
sub
mov
push
pop
lods
fchs
dec
cmp
dec
mov
adc
outsb
fcompl
cmpsb
fucomi
das
pushf
dec
jno
sub
int3
sub
xchg
movsl
pop
push
xchg
enter
movsl
outsb
push
inc
sti
imul
push
pop
scas
push
jmp
jno
inc
inc
add
mov
add
dec
add
xor
mov
push
sbb
pop
test
mov
adc
dec
pop
repnz
movl
mov
adc
xchg
pop
mov
pop
pop
popa
imul
jno
rcrl
mov
xchg
aad
lcall
inc
pop
mov
aam
in
outsb
jbe
mov
data16
in
push
pop
imul
insb
lods
in
ret
sbb
imul
sbb
sub
lods
mov
push
test
outsb
inc
fldt
adc
ss
sub
pop
xor
push
jbe
sub
and
aad
cmp
dec
xchg
clc
mov
test
dec
hlt
bound
or
arpl
mov
xchg
fstpl
xor
xor
ss
int
sub
loop
dec
movsl
addb
pusha
mov
daa
subb
lea
adc
pop
push
fcomps
arpl
adc
pop
mov
xchg
inc
dec
cmpsl
or
call
fwait
ss
je
mov
cli
andl
int3
ret
cmp
adc
sahf
inc
test
mov
or
dec
inc
leave
aam
lock
pop
push
stos
inc
sub
pop
lcall
and
clc
andb
sub
cmpsb
cmp
or
data16
pusha
adc
out
in
push
and
test
sbb
cmp
xchg
sbb
xchg
aad
inc
mov
repnz
or
lcall
or
inc
mov
ret
inc
das
adc
mov
lods
xor
ds
push
or
dec
mov
test
dec
ljmp
jno
lret
jo
mov
imul
inc
fistpl
frstor
mov
insl
jge
mov
add
push
imul
and
sbbb
lods
ret
mov
imul
inc
je
push
lds
inc
movsb
dec
or
mov
iret
dec
clc
das
call
jbe
imul
xchg
cmp
insl
sub
fs
sub
lcall
push
js
scas
dec
pop
mov
js
fildl
pop
mov
mov
cmp
add
outsb
and
into
inc
pop
lods
adc
test
loop
sbb
lock
shrb
mov
mov
push
xor
scas
andl
imul
jl
es
pop
aaa
xlat
pop
and
jb
dec
hlt
jl
out
outsl
lcall
mov
mov
rcr
adc
inc
sub
mov
daa
jb
sub
push
cwtl
mov
xor
add
lea
cmp
xor
orl
add
sbb
sbb
test
lock
je
ror
jp
xlat
fcompl
pop
push
addr16
push
cld
mov
icebp
adc
and
sbb
shr
or
xchg
aas
jnp
aas
adc
or
adc
in
sbb
fsubl
adc
int3
inc
pop
mov
lds
loopne
inc
dec
inc
or
pop
sti
stos
outsl
dec
in
xor
add
pop
inc
popf
push
inc
pop
aam
mov
dec
in
add
cld
pop
pop
faddl
xor
xlat
into
dec
or
inc
mov
jge
add
sti
arpl
cs
add
jns
mov
gs
fs
mov
push
iret
jmp
rclb
push
aam
fsubrl
add
and
mov
cmp
fs
sbb
xorb
sbb
xor
rol
xor
mov
ret
mov
in
cld
data16
scas
je
adc
add
mov
fsubs
popa
add
or
push
and
push
out
clc
pusha
lret
or
ret
cwtl
je
mov
dec
add
mov
leave
fdivrs
lock
js
outsl
cmp
call
pop
fimuls
inc
or
push
call
aas
insb
clc
mov
aam
pop
aam
aaa
into
addb
popl
push
xchg
adc
rcrl
filds
rolb
aas
mov
cmp
repnz
leave
add
nop
out
in
push
jmp
fdivrl
ds
or
ret
jge
dec
push
ds
push
inc
shlw
bound
or
ret
pop
inc
push
notl
rorb
add
pop
in
mov
pop
fcmovu
ror
mov
inc
addr16
pop
mov
xor
and
mov
cmp
mov
mov
sbb
addl
ret
xchg
sbb
lret
stos
pop
movsl
out
arpl
testb
mov
das
into
mov
xor
sarl
pop
xchg
jo
inc
and
sub
pusha
insb
insl
pop
pop
dec
mov
xor
cmc
lea
push
or
cmp
sbb
dec
push
sub
stos
and
addr16
pusha
gs
mov
rcrb
dec
inc
test
and
in
lret
pop
or
cmpsl
and
outsb
dec
gs
push
addl
jae
rcl
das
pusha
sub
lea
fisubl
nop
stos
jne
pusha
test
test
xor
testl
cwtl
jae
lods
xor
xor
rclb
dec
jecxz
pop
stos
insl
push
mov
testl
add
push
loop
aam
jmp
mov
add
mov
jmp
lods
cmp
inc
mov
mov
in
lods
pop
add
out
fcom
dec
mov
xor
shll
stos
mov
xchg
mov
push
call
test
sub
test
stos
push
sub
jns
mov
cmp
cli
jno
stos
aad
adc
cmc
mov
push
insl
sbb
sub
adcl
jae
jo
pop
pop
neg
and
roll
pop
ljmp
mov
add
add
add
add
sti
int3
or
ret
sbb
sub
inc
dec
mov
dec
pop
loope
pop
test
inc
movsl
jge
add
push
mov
mov
out
mov
inc
or
ds
into
bound
scas
rcrb
mov
clc
xchg
dec
xor
test
ret
les
mov
sub
loop
lret
icebp
sbb
sbb
ret
mov
aaa
mov
sbb
push
mov
xchg
xchg
rol
enter
sub
pop
push
fildll
movsl
xchg
push
mov
inc
lea
push
or
fwait
pop
mov
outsb
insb
es
mov
adc
shlb
and
and
pop
mov
decl
rorb
int
inc
out
xor
andl
mov
test
shll
sub
jae
aam
pushf
outsb
and
mov
insl
xchg
in
jb
nop
mov
mov
and
xchg
sub
dec
insb
movsb
mov
mov
inc
jnp
push
or
xor
rcrb
test
sub
aam
arpl
push
cmp
push
push
sub
mov
mov
jb
addr16
inc
negb
xor
pop
iretw
mov
adc
mov
mov
xor
jae
mov
sub
fistl
mov
push
push
push
inc
rcrb
cmpsl
aad
xchg
or
aam
add
xor
push
mov
xor
ret
cmp
pop
inc
pop
mov
mov
jg
ss
cmpsb
xchg
mov
lcall
sub
ret
loop
dec
movsl
or
xor
pop
cmp
and
es
ja
mov
cmp
mov
out
adcl
and
into
inc
sub
adc
add
sub
xor
xchg
dec
daa
stos
add
es
mov
cmp
dec
and
add
push
mov
loop
mul
subl
jae
or
sbb
mov
lods
aam
fdiv
add
mov
mov
push
les
adc
add
insl
and
cmc
mov
movsl
push
scas
push
cld
ret
cmp
xchg
push
pop
mov
inc
lea
outsl
pop
andb
push
data16
and
stos
sbb
inc
push
inc
mov
add
mov
shll
iret
and
mov
andb
jno
mov
xor
dec
push
pop
test
clc
push
cmp
cmp
inc
mov
xchg
test
push
loopne
fdivl
les
scas
ds
mov
and
xor
repz
imul
mov
das
xchg
sub
cmp
leave
mov
scas
add
xorl
inc
sub
dec
pop
popa
adcb
adc
push
and
movsl
mov
sbb
mov
push
or
inc
int
sbb
sbb
fildl
jo
mov
push
sub
cld
dec
mov
mov
lods
loopne
sbb
addb
inc
jle
mov
add
pop
xchg
xor
xchg
addb
cld
push
rcll
call
cmp
pop
cld
mov
insb
aad
pop
pop
loopne
adcl
imul
shrb
dec
lods
ljmp
add
leave
mov
mov
add
sub
in
pop
stos
fwait
mov
cmp
pop
pop
rorl
dec
push
nop
xor
mov
mov
push
inc
addl
push
pop
gs
movsl
fiaddl
adc
or
movsb
add
das
lret
es
push
mov
imul
or
popa
cmp
cmpsb
idivl
mov
jge
xchg
movsl
cltd
or
lods
sub
and
xor
aas
add
push
xor
mov
insb
shlb
jle
sub
mov
add
sbb
dec
and
test
lods
inc
stos
mov
ret
ficoms
push
pop
inc
fdivrl
mov
lea
inc
enter
or
loop
push
xchg
test
pusha
popa
jecxz
movsl
push
stos
addb
ret
lods
adc
scas
mov
lea
mov
push
insb
mov
ss
mull
xchg
jo
push
or
mov
jne
push
push
outsb
inc
ss
int3
outsl
divl
dec
enter
ret
stos
mov
push
das
pop
inc
mov
xlat
sbb
gs
pop
lods
push
push
inc
imul
mov
mov
push
adc
and
push
push
xor
mov
nop
aaa
push
shll
das
jecxz
test
clc
dec
ret
sub
inc
and
popa
lret
aam
sub
movsl
inc
aaa
imul
std
mov
call
movsb
or
jge
fucom
add
add
bound
mov
push
mov
loop
inc
rcl
mov
aad
push
xor
sbb
sti
mov
into
mov
in
fsubr
stos
aad
jg
or
and
insl
dec
xor
dec
in
push
push
inc
divl
lea
sbb
loop
inc
cmpsl
mov
push
inc
mov
sub
fiaddl
dec
ret
in
fmuls
and
lret
notl
mov
imul
rcll
divb
lods
lcall
stos
add
cmp
inc
mov
inc
mov
fmul
sahf
fmuls
mov
pop
subb
push
pop
sub
mov
xchg
jno
sbb
mov
mov
imul
lods
scas
jns
or
inc
mov
dec
divl
cmc
hlt
jno
aam
ret
mov
test
pop
hlt
add
add
fwait
cmp
jge
scas
lret
or
cmc
inc
or
mov
bound
std
rcr
xor
push
scas
sarl
cmp
add
call
sbb
or
and
cs
cmp
je
or
lcall
inc
arpl
leave
mov
js
fstpt
inc
mov
inc
mov
inc
xchg
push
js
insb
insl
mov
or
cmp
push
sbb
mov
cmp
push
fcomps
decl
xchg
pusha
sbb
ficompl
jb
pop
inc
out
push
xor
into
sub
test
imul
mov
or
scas
sbb
adc
das
push
inc
sbb
sarl
sbb
or
push
pusha
lods
outsb
lods
add
scas
xor
push
push
ret
cmc
mov
push
push
out
out
mov
popa
push
inc
ret
fildl
negl
aad
pop
addb
rclb
xchg
orb
stos
mov
insl
jle,pn
outsb
mov
sub
lret
xchg
fucompp
mull
adc
push
or
popf
xor
mov
mov
lret
fdivs
ficoml
sbb
ja
sti
es
lods
pusha
cmp
sbb
into
sub
imul
incb
pop
pop
cmp
mov
xlat
mov
push
ret
loop
outsb
movsl
push
pop
es
mov
es
out
and
data16
rcll
jecxz
mov
test
pop
xor
inc
mov
mov
sub
cmp
sbb
hlt
lcall
push
ljmp
lods
inc
push
cmp
int
imul
je
push
or
or
adc
pop
adcl
insl
sbb
lret
in
jl
push
xor
adc
push
sub
lods
inc
mov
xlat
inc
test
out
xchg
or
jb
inc
inc
xor
push
fwait
xor
push
sbb
xchg
jns
mov
xchg
xor
sarl
inc
mov
and
mov
xor
ret
movsl
adc
xor
and
add
xchg
in
inc
lods
push
fbld
lret
xchg
add
lods
imul
ds
cmp
cmp
fwait
testb
test
inc
jbe
inc
cmp
sbb
sti
cmp
xor
push
inc
rcrb
cmp
pop
lods
ret
push
or
dec
arpl
pop
mov
test
ret
sbb
mov
movsl
cmpsb
addb
inc
xchg
test
or
push
inc
lods
popa
insb
cmc
lds
dec
lods
push
rcl
pushf
pop
mov
sub
clc
gs
sbbl
inc
and
pop
cwtl
push
out
cmp
xchg
in
rclb
push
lea
outsb
dec
dec
inc
rcll
mov
cmp
mov
test
loope
sub
mov
dec
lods
loopne
sbb
and
mov
inc
loope
pop
lea
add
adc
sbb
mov
push
andl
xor
lods
insb
scas
incb
push
push
mov
dec
test
in
push
sub
jo
or
pop
imul
test
subb
idivl
nop
sub
push
inc
mov
fildl
test
loop
and
imul
mov
mov
cmc
mov
fisubrs
inc
adc
adc
jmp
outsb
sub
inc
dec
mov
push
pusha
test
repnz
push
outsb
int
mov
lahf
sub
mov
jo
mov
or
test
or
orl
gs
out
shll
mov
sbbb
inc
sub
jno
movsb
loopne
mov
and
xor
lcall
push
pop
pushf
fimull
mov
mov
inc
cli
mov
insl
mov
ret
pop
push
lea
adc
or
and
xor
pop
lea
mov
and
enter
lods
push
mov
push
mov
add
enter
rorb
inc
aaa
sub
or
out
stos
aad
ficompl
shlb
and
jo
mov
dec
add
jmp
pusha
jae
scas
cltd
es
pop
cmpsb
pop
test
or
push
mov
psubsb
xor
mov
stos
mov
sub
mov
rorb
clc
dec
inc
add
sub
push
lods
mov
cmp
fdivl
sub
and
in
shll
mov
mov
adc
push
cmc
aas
push
rcll
dec
cmp
and
pop
dec
or
outsb
push
inc
xchg
or
inc
test
rcrl
push
pop
aam
add
push
sub
jg
sarl
sbb
mov
jne
enter
out
pop
cmp
xor
fmuls
outsl
xor
push
and
scas
insl
imul
leave
das
mov
inc
stos
or
push
arpl
sub
sub
add
mov
push
push
stos
cs
es
push
movsl
loopne
sub
pushf
and
es
ja
orb
xorb
push
or
xor
or
sbb
push
cmp
or
lock
push
imul
add
mov
pop
inc
xchg
inc
lods
xor
inc
push
dec
push
push
push
cmp
pop
ret
xchg
or
test
mov
dec
les
push
push
test
rclb
xchg
loop
cld
movsl
aaa
push
jno
push
add
and
lret
les
imul
pop
inc
adc
xchg
sub
testl
fucomi
inc
aam
push
xorl
jo
sub
sub
and
push
movsb
xchg
xchg
xor
lea
movsb
mov
and
jecxz
jno
mov
test
loop
push
push
or
xor
or
adc
xchg
cltd
sub
push
jno
mov
outsl
jle
adc
test
xchg
jo
mov
push
mov
pop
xchg
data16
adc
aad
or
pop
sub
mov
adc
arpl
lret
aas
push
push
sub
out
ror
xchg
shrl
imul
xlat
rcll
push
sti
out
pop
cli
mov
or
mov
mov
or
testl
xor
sbb
add
imul
dec
sbb
test
cltd
movsl
nop
mov
mov
push
cld
dec
jp
xor
mov
movsl
jae
loop
movsl
push
in
or
push
pop
xor
push
addb
push
ljmp
out
aaa
fiaddl
sbb
pop
lds
ret
fsubrs
ret
rolb
adc
test
stos
push
test
pop
mov
inc
xchg
out
pop
xor
and
dec
push
sub
cmc
add
ss
movsl
out
mov
or
push
push
and
mov
andb
cmc
jae
push
or
mov
imul
adc
mov
inc
cmp
outsl
mov
mov
mov
dec
mov
cmc
roll
jne
pop
cmpsl
and
dec
das
lods
movb
adc
and
add
mov
push
push
mov
inc
jbe
outsb
xchg
pop
push
lea
mov
inc
lods
ss
sar
pop
lahf
mov
rolb
jo
ljmp
imul
push
arpl
lods
push
push
inc
fcoml
mov
pop
andb
fistpl
sub
es
push
pop
or
mov
mov
inc
mov
adc
jg
dec
cmpsl
loopne
out
inc
idivb
and
stos
jno
decb
adc
add
add
push
mov
adc
dec
cmp
add
rclb
shl
shlb
adc
movsb
clc
add
cmp
cld
or
add
mov
and
flds
dec
push
insl
xor
sbb
dec
adc
fiadds
add
fisubs
cmp
sub
fstl
xorl
add
mov
std
sub
sub
or
dec
xor
xor
subl
fisubrl
jns
inc
sbb
out
add
out
mov
inc
mov
clc
orb
xor
add
jnp
sarl
fistps
or
fisubrs
push
push
pop
mov
out
xlat
and
cli
cmp
gs
sub
scas
add
clc
sub
mov
adcl
jp
or
mov
fisttpl
mov
aas
sub
dec
repnz
pusha
push
xor
lds
je
add
xchg
call
xor
mov
push
movsb
js
xchg
push
pop
xchg
adc
cmpb
mov
stos
adc
shlb
call
mov
xor
aaa
jmp
cmp
call
xor
or
and
adc
les
loope
inc
xor
ret
repz
les
js
mov
cmpsl
nop/reserved
add
es
pop
cmp
push
and
test
loopne
es
mov
lea
icebp
push
dec
or
fdiv
and
incl
fcmovne
sub
mov
sbb
jg
mov
imul
push
std
jb
ds
rorl
loopne
push
push
push
adc
cmp
test
sub
scas
sbb
jb
mov
adc
inc
in
dec
iret
inc
loop
xor
sub
psubsw
and
arpl
es
xchg
sub
mov
add
adc
inc
sbb
arpl
lcall
mov
mov
push
ret
xor
push
mov
dec
mov
hlt
scas
and
push
aam
adc
mov
rcrb
cmpsl
test
aad
inc
movsl
jo
shrl
sub
cmpsb
sub
sub
mov
and
push
es
sub
cwtl
pop
or
cmpb
xor
push
sub
mov
mov
sbb
addb
inc
sub
je
lods
push
fs
xor
add
aaa
mov
lods
insl
fnsetpm(287
push
out
jno
push
sub
aad
cltd
xor
sbb
push
add
dec
mov
loop
xor
mov
adc
outsb
sub
fcoms
pop
rclb
rol
pop
addr16
push
xor
push
loop
inc
mov
dec
insb
shlb
mov
inc
lods
inc
sub
xor
icebp
jmp
mov
cmpsb
loopne
xor
mov
or
jns
xorb
pop
push
sbb
xchg
mov
cmp
sbb
xor
or
insl
inc
mov
jno
push
xor
mov
out
or
fs
mov
and
sbb
mov
cmp
lahf
sub
mov
push
push
pop
stos
xchg
xchg
mov
jno
inc
or
add
test
insb
add
insb
aam
popa
into
rolb
in
jns
sub
adc
scas
mov
mov
jo
sub
pusha
into
sbb
mov
subl
roll
das
je
jne
sbbb
xor
shrl
xor
add
jg
mov
push
filds
mov
inc
mov
imulb
lock
adc
gs
cmpsl
aad
or
clc
test
mov
inc
sub
mov
pushf
sub
inc
jbe
sbb
in
or
pop
sub
or
xchg
dec
xor
sub
inc
sub
pop
imul
pop
mov
popa
push
imul
test
outsb
jle
push
sbb
jae
dec
inc
and
inc
mov
sub
inc
repnz
imul
hlt
xchg
adc
add
cltd
jp
sub
add
lds
cmp
iret
xor
push
mov
test
mov
imul
pop
test
shl
sub
stos
cmp
sahf
or
outsb
jnp
sub
lret
sub
in
sbb
cmp
mull
push
sbb
jg
push
push
loope
in
sbb
dec
pop
shrl
in
jecxz
jle
fcmovnb
xchg
imul
imul
loop
pushf
gs
mov
push
call
ret
push
ret
sub
test
mov
aaa
icebp
cmpsl
aad
push
mov
popf
jmp
xor
mov
sbbb
test
stos
adc
xchg
mov
lea
adc
fwait
test
push
dec
jbe
mov
adc
adc
sbb
add
cwtl
push
int
imul
das
jp
cmpsb
ss
inc
mov
push
or
lea
push
xor
lea
jmp
loope
cld
repnz
inc
inc
mov
sub
lret
push
xchg
test
mulb
or
imul
mov
sbb
cmc
dec
sub
test
push
adc
pop
push
push
jmp
cmc
int3
xchg
dec
insl
aad
sahf
mov
xchg
inc
push
stos
inc
insl
in
ret
and
stos
call
cltd
mov
mov
xchg
and
inc
shrb
aad
mov
outsb
push
mov
sub
hlt
fists
inc
stos
push
testb
enter
sub
adc
mov
rcll
test
bound
insl
adc
dec
lods
insl
movsl
jne
jno
fs
lea
aad
fsubrl
push
mov
cmpb
call
pusha
mov
add
or
cmc
mov
jg
xchg
cmp
sbb
cwtl
push
push
stos
jnp
cmp
push
mov
xchg
cwtl
sbb
sub
jno
pop
push
dec
and
xor
mov
lods
out
xorb
add
cmc
cmc
lods
loopne
aad
jae
push
sbb
int3
add
stos
movsl
test
mov
add
cmp
dec
aad
movsl
mov
sbb
jle
adc
mov
insb
lods
mov
pop
mov
fcomip
mov
aad
mov
or
outsb
push
imul
aas
test
and
sahf
mov
mov
sub
pop
iret
nop
dec
inc
fsubl
leave
clc
insl
dec
test
or
aaa
mov
jecxz
inc
cmp
stos
add
es
call
in
cmp
ret
sbbl
xor
loopne
mov
mov
mov
xor
stos
push
sahf
or
es
inc
xorb
jg
movl
in
and
mov
adc
pop
sub
sbb
hlt
sbb
mov
and
in
add
rorb
add
pusha
mov
maskmovq
notl
push
adc
shl
inc
out
mov
inc
jns
push
add
mov
jle
pop
fbld
fdivrl
xchg
fwait
insb
sub
xor
lock
push
push
xchg
fmuls
xor
xor
test
lret
aas
pop
xchg
cmp
jbe
mov
enter
inc
js
int3
andb
pop
por
je
js
push
fistps
testb
ds
xchg
mov
mov
adc
xchg
sbb
sbb
and
loopne
cmovne
daa
cli
cld
subl
loope
xlat
mov
adc
sub
mov
sbb
faddl
je
stos
xor
sub
sbb
cmp
inc
aad
out
cwtl
jb
and
and
dec
jg
mulb
pop
jle
cmp
je
push
and
xchg
mov
repnz
sbb
cwtl
aad
lret
mov
inc
xor
dec
jbe
aas
add
cmp
inc
ret
mov
jo
mov
shl
mov
sub
faddl
ljmp
je
sbb
in
std
inc
lock
pop
or
sub
sbb
lret
push
mov
inc
push
imul
xchg
popf
or
dec
mov
or
popa
in
shll
push
push
push
xchg
mov
cld
push
push
call
and
lods
xor
pop
inc
and
insb
loopne
and
pop
shlb
mov
xorb
scas
and
enter
lcall
pop
cmp
iret
shrb
and
rorb
rorl
roll
inc
call
pop
jge
jge
mov
inc
out
das
mov
dec
xchg
les
xchg
jno
out
dec
or
add
hlt
movl
shlb
add
cmp
xchg
gs
ficoms
lods
orl
add
enter
test
and
push
xor
shrb
sti
mov
mov
nop
fistps
aad
jmp
dec
lcall
or
lcall
scas
lods
loop
dec
add
pop
sub
pop
aad
pop
xchg
imul
mov
dec
push
cltd
push
fildll
xchg
add
push
sub
aaa
cld
iret
push
xor
std
cld
loop
jge
iret
xor
int3
xlat
rolb
jp
stos
cld
inc
dec
mov
cmp
hlt
push
enter
cld
xor
insb
inc
fists
enter
sgdtl
fnstsw
adc
jne
cli
push
or
scas
enter
or
dec
lock
cmp
lods
or
cmp
ljmp
rcrl
mov
inc
cmpl
sbb
pop
cmp
dec
add
stos
enter
sub
lods
push
sub
call
sub
cs
pop
adc
adc
clc
cmp
dec
in
imul
aaa
mov
or
fstpl
and
pop
andb
xor
addb
mov
jbe
sbb
jns
imul
ljmp
daa
push
xorl
xadd
loope
xlat
adc
sbb
icebp
dec
mov
dec
mov
dec
jg
sub
add
lods
mov
aad
xchg
sub
jb
and
sub
mov
mov
outsl
pop
inc
add
push
in
negb
mov
aam
fdivl
xchg
dec
cmpsl
ss
cmp
test
mov
mov
cmpsb
mov
inc
stos
sub
out
ret
jo
loop
sub
or
push
and
pop
call
dec
and
add
lods
fdivs
add
add
aaa
in
push
test
inc
loop
mov
mov
fimull
cmp
nop
mov
cmc
movb
inc
jmp
inc
fdiv
into
add
ret
sbb
xor
in
xchg
call
jno
pop
mov
mov
push
aam
enter
push
test
inc
mov
inc
aam
adc
mov
pop
mov
or
aam
push
inc
xor
pop
test
imul
faddl
pop
jmp
test
lods
mov
adc
mov
into
aas
ljmp
sub
and
push
push
pop
sbb
cmp
dec
into
in
rolb
xor
mov
das
cwtl
or
imul
pop
div
and
shlb
and
cmpsb
adcb
mov
or
cs
mov
and
dec
mov
and
and
mov
insb
addr16
fdivrl
push
ss
xchg
scas
shrb
add
mov
or
fmuls
test
test
das
add
stos
add
xorb
xchg
cld
pushl
add
sbb
lods
cltd
sbb
ficoml
push
sub
xchg
jge
and
jno
and
inc
push
fsubrs
cli
push
loopne
mov
imul
sbb
adc
pusha
jnp
orb
or
mov
mov
js
push
push
cmp
and
and
inc
xor
test
push
stos
sub
mov
add
adc
movsl
xchg
dec
gs
mov
int
inc
or
lret
push
mov
ret
dec
jns
inc
mov
outsb
fisubrs
sarl
mov
jno
or
nop
fsts
mov
dec
push
loopne
sbb
lods
lods
shlb
mov
or
sbb
xor
push
divl
xorb
sub
jl
cmc
rorl
ljmp
int
mov
mov
mov
into
out
and
das
xor
add
inc
test
ret
jbe
pop
test
inc
lea
sub
cld
test
push
mov
adc
sub
adc
xchg
dec
mov
sub
mov
bound
sbb
xchg
mov
sbb
and
push
mov
push
add
movsl
jb
stos
out
les
ficoml
insl
lods
xor
insl
lods
rcrb
leave
enter
aaa
dec
lods
shlb
cmp
dec
mov
jl
ret
and
sub
inc
sub
ret
jp
push
sbb
cmp
add
lcall
add
fsubp
outsb
fdivrl
repnz
mov
cmpsb
incl
add
push
cmp
push
dec
and
mov
inc
mov
out
xchg
repnz
test
mov
push
bound
popa
jae
lods
sarb
outsl
imul
cli
mov
push
cmc
stos
stos
mov
orl
arpl
movsb
movsl
push
pop
inc
or
insb
test
lret
jo
pop
pop
mov
bound
mov
lods
push
pop
and
rcrb
idivl
add
lret
dec
add
lret
sbb
iret
xchg
pop
imul
jbe
mov
add
jecxz
inc
test
popa
subb
push
repz
adc
and
cmp
adc
lods
dec
mov
mov
shll
mov
pop
and
xor
lcall
inc
or
add
outsb
pop
add
insl
popa
inc
inc
lods
adc
sbb
mov
std
mov
icebp
movsl
insl
stos
mov
push
dec
xchg
pop
fldt
pop
out
inc
pop
leave
adc
rclb
sub
xchg
inc
and
outsb
adc
and
outsb
aaa
push
sub
or
push
lods
add
outsb
mov
sub
pop
sub
lret
divl
xchg
std
xor
push
push
jle
in
push
xchg
imul
pop
test
sbb
inc
insl
push
aaa
loop
xor
pop
push
xchg
sub
jne
jl
ss
pop
js
arpl
mov
into
insb
inc
fldt
jb
push
sbb
orl
xchg
mov
incl
stos
add
ret
push
or
jae
loopne
fcmovu
push
call
jns
mov
add
popf
push
push
lret
pop
mov
outsl
mov
mov
sbb
aaa
xchg
imul
test
add
lret
mov
inc
and
movsb
inc
es
rcl
mov
xchg
sbb
in
mov
aad
insl
lret
loop
sub
sbb
jmp
imul
testl
ret
pop
outsl
in
insl
dec
push
stos
add
es
popa
sub
fnsave
xchg
popa
stos
aas
cmp
cmpsb
pop
push
inc
mov
stos
push
gs
clc
jp
pop
or
mov
mov
xchg
or
lret
dec
les
inc
or
push
data16
mov
incb
or
pop
stos
mov
sub
sub
sub
test
mov
gs
push
sbb
xchg
imul
insl
push
xchg
push
pop
outsl
xor
rolb
imul
cmova
xchg
decb
add
addb
test
jge
dec
and
adc
jp
xchg
pop
jb
nop
ret
pop
cld
push
jmp
adc
mov
inc
mov
dec
xor
push
mov
in
jp
add
paddsb
mov
arpl
aam
inc
in
inc
add
sbb
ficompl
lock
int
inc
or
push
fisubs
cmpsl
mov
orb
sbb
mov
mov
pop
stos
outsl
mov
jns
dec
mov
mov
and
out
or
mov
pop
sarl
mov
add
mov
add
hlt
xchg
into
pop
mov
incl
or
pop
add
dec
jge
sub
cmp
aad
jg
outsl
je
les
and
stc
sbb
and
add
hlt
cld
adc
jp
add
push
mov
sub
cltd
inc
mov
rorl
push
sbb
movl
shll
push
push
sub
fdivs
lcall
mov
xchg
inc
inc
leave
sbb
xor
adc
pushf
push
add
push
sub
adc
mov
movb
stos
inc
wrmsr
jp
imul
pop
je
fsubr
fmull
sbb
pusha
pop
stc
mov
aad
test
or
mov
loopne
or
add
mov
xor
nop
nop
movsl
xchg
shrb
test
testb
cmp
hlt
fcoml
loop
inc
movsb
outsb
test
aam
lea
jne
and
andb
loop
add
add
jae
ret
test
lods
cld
add
inc
sbb
nop
sub
hlt
and
fdiv
mov
insl
mov
out
in
add
sbb
test
icebp
sbb
xor
xor
jbe
fimuls
fiadds
mov
lods
inc
pop
dec
jmp
add
add
or
data16
mov
loope
push
pop
push
and
sbb
xor
sbb
or
inc
movsl
lcall
mov
cwtl
insl
mov
hlt
test
test
fisttpl
fldcw
xchg
imul
push
sbb
in
je
test
arpl
adc
add
movsb
loope
lahf
or
gs
imul
scas
ss
push
out
and
aaa
jecxz
shlw
das
jbe
stos
addr16
xchg
scas
mov
adc
sbb
pop
dec
stos
xchg
loop
push
call
sti
adc
in
hlt
push
test
lds
aam
nop
sbb
mov
adc
push
test
push
mov
test
mov
inc
jle
xchg
add
repnz
test
aad
pop
subb
cmc
push
cmp
push
sbb
lock
inc
addl
cmp
xor
insl
pop
inc
popf
mov
inc
mov
in
xor
fwait
inc
and
shll
adc
cmpsb
stos
push
and
arpl
push
push
stc
out
cmp
pop
adc
push
xchg
mov
ret
mov
jo
out
mov
xchg
lea
fiaddl
out
fisttpl
dec
rolb
movsl
addr16
inc
pop
xor
push
stc
and
inc
mov
push
pop
dec
mov
push
stos
lods
jmp
pop
xorl
icebp
mov
lds
movsl
push
mov
fmull
push
push
pusha
mov
push
adc
mov
sub
subb
adc
push
adc
insl
add
les
mov
and
pop
dec
addl
sub
mov
or
or
sbbb
add
dec
xor
push
cmp
scas
sub
pop
mov
dec
inc
sub
add
jb
push
xor
add
and
das
test
sbb
test
jne
jo
stos
test
mov
aad
outsb
es
pop
cmp
imul
push
add
daa
das
or
push
lret
push
cmp
mov
mov
shrl
cmc
pop
push
sbb
and
clc
rol
inc
into
mov
mov
addl
or
or
addb
jo
gs
and
jge,pn
mov
sub
pop
lcall
aaa
call
push
sbb
in
out
mov
aas
rol
jmp
push
add
jge
sbb
fdiv
and
inc
mov
test
lahf
std
imul
jae
ret
jmp
pop
in
pushf
lret
mov
xchg
mov
pop
mov
add
mov
mov
push
mov
xor
cmp
add
insb
cmp
aaa
push
adc
mov
out
mov
dec
aad
in
and
mov
inc
push
test
mov
mov
xorl
and
cmpsl
push
loop
inc
lods
push
mov
adc
test
ret
pop
xor
int3
test
push
dec
push
stos
sbb
movnti
mov
add
adc
push
sub
jle
adc
dec
and
es
dec
div
and
cmc
into
adc
test
aad
mov
dec
pop
jmp
mov
mov
mov
push
mov
daa
push
inc
imul
out
sub
xor
in
rorl
movsb
push
push
pop
mov
pop
aad
mov
stos
and
test
lods
shl
pop
test
sub
mov
popa
sub
lods
xchg
xchg
and
das
push
call
dec
xor
lret
push
and
aam
iret
jns
push
sub
dec
mulb
aam
movsl
shlb
testl
movl
mov
inc
int3
mov
push
mov
jbe
loop
inc
movsl
push
arpl
mov
xchg
xchg
push
cli
xor
xchg
xchg
mov
imul
jno
mov
xor
aam
add
add
cmp
shlb
pushl
iret
and
stos
mov
shll
lods
repnz
mov
push
sub
xchg
ret
aam
test
fwait
sbb
mov
inc
adc
cmp
mov
pop
loope
addb
adc
xchg
outsb
mov
adc
sub
dec
pop
push
pop
mov
sbbb
push
push
aas
mov
aad
testb
inc
or
addb
mov
push
adc
rorb
lods
cs
ds
push
pop
or
out
das
xor
pop
mov
pusha
sub
lods
lods
sub
jle
mov
push
es
jo
sbb
mov
inc
sub
push
adc
mov
pop
add
push
sbb
add
out
mov
cmp
test
rorl
push
add
andb
fistpll
inc
ret
xchg
fcmovnu
inc
inc
aam
ret
shlb
pop
add
push
pusha
sub
sbb
inc
test
push
int
sub
test
add
jo
cmc
pop
inc
test
push
pop
xchg
stc
es
cld
mov
xor
push
dec
lods
adc
jae
imul
mov
dec
mov
adc
imul
push
add
out
push
inc
roll
xor
mov
pop
ret
int
ljmp
out
mov
inc
add
hlt
inc
rcrl
pop
sub
int3
inc
xor
mov
cwtl
add
fldt
cmp
mov
inc
je
fmuls
imul
or
ficoml
mov
fcompl
mov
push
mov
cmpb
adc
or
xchg
jb
adc
nop
and
pop
and
rcrb
dec
cmp
shrb
sub
inc
out
test
sub
pop
or
pop
lahf
push
fdivl
xlat
push
mov
pusha
push
cmpsb
push
sti
dec
and
addr16
sbb
iret
pop
inc
sub
fs
dec
rcll
sub
add
jle
adc
out
mov
lods
jg
or
inc
es
add
mov
inc
mov
aam
loop
mov
add
adc
adc
shrl
sub
mov
adc
cmc
push
dec
lahf
push
out
inc
cmpsl
pop
or
sbb
or
push
adc
and
neg
loop
xor
fs
mov
je
loope
rcrl
pop
flds
adcl
sub
dec
xchg
stos
sbb
xor
sbb
repnz
repnz
lcall
sbb
scas
adc
rorl
or
add
mov
fs
add
xor
int3
sbb
fistpll
add
and
loopne
sbb
add
and
insl
push
dec
dec
cmp
adc
jb
negl
fwait
test
enter
jmp
adc
loopne
adc
jbe
inc
or
push
mov
ret
sub
repnz
cmpsb
imul
orb
rclb
push
push
inc
add
rcr
repz
imul
xchg
sub
cltd
loopne
xchg
icebp
int3
enter
cmc
xchg
nop
pop
pop
cmp
cmp
xchg
or
jecxz
add
cwtl
lock
sub
adc
cmp
add
fisubrl
pop
mov
sbb
adc
sti
sbb
sbb
jb
dec
insb
hlt
dec
sbb
jg
repz
jne
and
dec
jmp
pop
ss
sbbl
push
jmp
add
jno
int3
lods
push
adc
pop
push
adcl
sub
push
test
inc
mov
pop
movsl
mov
negl
dec
mov
lods
push
rorl
pop
lret
rolb
add
push
and
rolb
insl
pop
aad
and
or
inc
xchg
adc
cli
not
mov
repnz
push
in
dec
mov
mov
ja
or
or
mov
rorl
test
sub
or
push
push
or
adc
adcl
mov
and
sbb
xor
xor
dec
insl
test
inc
push
cmp
aad
inc
or
push
mov
pop
imul
xchg
jle
adc
inc
stos
aaa
xchg
imull
push
push
or
call
addb
add
adc
lret
push
ret
pop
sbb
sbb
mov
stos
mov
mov
sub
mov
sti
es
out
add
pusha
cmp
mov
cmc
pop
add
xchg
inc
inc
xor
push
negl
dec
inc
adc
mov
inc
sub
sub
lds
or
sub
jecxz
subb
inc
sbb
pop
cmp
aaa
fcoml
xchg
inc
mov
and
adc
sbb
loop
and
and
pop
xchg
mov
push
sbbl
adc
adc
fs
xchg
add
dec
add
mov
mov
mov
cmp
fists
data16
dec
sub
jbe
stos
inc
mov
inc
add
filds
sub
out
nop
aas
roll
xor
pop
das
sub
adc
lods
cmp
inc
mov
adc
dec
adc
add
int3
popa
mov
adc
js
mov
add
sbb
lock
les
mov
les
add
mov
pop
les
pop
xchg
and
outsb
xor
outsl
add
inc
mov
cmove
es
sub
mov
mov
mov
lret
mov
inc
pop
push
pop
pop
cmpsb
and
js
addr16
adc
mov
or
mov
jmp
xor
mov
cli
mov
cmc
sub
sbb
fidivs
mov
gs
adc
lods
jae
lock
fcoms
dec
fsub
fwait
insb
pop
mov
or
or
xchg
mov
inc
fwait
mov
imul
mov
jne
dec
push
add
or
xor
test
jge
int3
pop
pop
cmp
adc
jo
out
mov
cmp
inc
dec
cwtl
adc
mov
dec
out
xor
push
or
and
mov
inc
adc
push
sub
push
das
leave
fwait
lods
or
call
fldt
dec
adc
jge
andl
test
cmpsb
js
add
add
xor
jge
cmp
dec
jl
mov
jno
adc
xchg
lock
loope
lea
ljmp
jns
sub
in
add
inc
mov
ret
scas
add
jg
fdivrl
pop
xchg
push
rolb
and
inc
sarb
hlt
arpl
or
mov
sbb
scas
bound
mov
les
adc
in
rcrb
add
pop
mov
or
mov
inc
pop
test
lock
ud2
and
stos
gs
aas
ds
sti
mov
arpl
adc
js
fdivr
pop
mov
push
dec
dec
cld
rorb
fcoml
pop
jno
rclb
lods
test
cwtl
clc
stos
mov
push
push
movsb
addb
arpl
shll
scas
pop
mov
xchg
fsubr
inc
push
add
int
sbb
loope
push
xchg
and
or
sbb
mov
sbb
jne
lods
and
mov
push
push
or
pusha
loope
push
lea
xor
sub
daa
add
cmp
sahf
loope
das
cwtl
mov
or
cmpsl
cltd
leave
sbb
or
pusha
daa
xchg
dec
xor
pop
or
testb
cmp
lahf
or
sbb
sub
imul
and
inc
add
mov
gs
mov
xor
lret
aam
inc
loop
sbb
fistpl
testl
jge
sub
mov
push
in
xor
pop
pop
or
cmc
xor
rcl
aad
pop
cmp
inc
test
push
adc
xor
sbb
lret
lret
sub
cmc
int
push
cmp
mov
addl
pop
mov
adc
lods
sbb
cmp
push
xor
ror
imul
inc
pop
mov
sbb
cmc
lea
inc
dec
mov
shlb
ss
rcll
push
xor
sbbw
mov
ret
mov
mov
inc
adc
subb
sub
into
cmpsl
sub
dec
inc
push
sub
adc
sub
leave
sbb
mov
jns
stos
adc
pop
lods
int
popa
mov
daa
in
int
push
and
mov
push
in
add
xchg
and
test
inc
cli
lods
shlb
and
and
inc
sub
rcll
rorb
mov
push
xchg
imul
xchg
es
jb
pop
fadds
lods
es
push
push
jecxz
and
test
mov
aam
sub
into
or
dec
aad
add
adcb
add
mov
das
jg
inc
popa
stos
or
sub
add
jmp
add
enter
stos
mov
jns
sbb
mov
ret
stos
add
mov
adc
or
lods
adc
sub
pop
mov
ret
push
movsl
or
sub
sbb
push
bound
xchg
aaa
sbb
inc
xor
int
pop
or
cmc
lret
mov
lods
das
inc
mov
mov
es
push
ds
mov
adc
test
add
lret
push
mov
xor
test
pop
inc
pop
add
inc
dec
pop
mov
xchg
cmp
ljmp
inc
arpl
dec
dec
adc
sub
lahf
mov
out
idivl
and
and
leave
out
xchg
bound
inc
jo
cmp
push
push
jae
dec
mov
pop
test
fisubl
lea
aas
sub
push
addb
xchg
sarb
xchg
scas
and
inc
shrl
insb
adc
xlat
sub
sbb
push
push
std
inc
push
in
test
sub
add
mov
out
or
and
mov
into
lods
dec
rclb
dec
inc
scas
mov
icebp
sahf
outsb
aaa
push
rorl
jne
ret
test
mov
das
inc
outsb
or
into
jecxz
movsl
xor
int
test
jo
sbb
mov
and
push
test
loopne
push
xor
popf
gs
jp
cs
push
js
cmp
or
in
fldl
imul
aam
inc
and
cs
sub
mov
loop
add
idivl
inc
pop
stos
mov
fstpt
cmp
jg
pop
mov
enter
push
out
data16
mov
je
mov
cmp
pop
mov
lret
je
or
push
cs
stos
push
adc
xchg
push
popa
mov
cmp
adc
pop
mov
xchg
jns
adc
lods
mov
insb
push
popa
test
mov
test
rcl
jbe
inc
sbb
and
add
stos
sub
push
fsts
lea
push
pop
shr
inc
sub
subb
push
ficompl
push
xchg
pop
mov
push
xchg
rcll
sub
jecxz
mov
xchg
sub
dec
rcl
push
sbb
xor
xchg
sub
and
push
push
mov
jle
and
inc
mov
sbb
jb
les
cld
pop
movsb
sbb
lea
xor
xor
cwtl
jo
and
xchg
pop
sbb
cwtl
loope
mov
lea
into
push
sub
rorl
push
sub
shrb
fcomp
loop
and
sahf
aam
pop
lods
add
movlps
repz
stos
aad
fcmovb
xor
dec
sbb
push
pop
outsl
notl
push
mov
add
mov
in
andb
aad
cwtl
inc
js
mov
cmp
cmc
movb
loop
xor
lea
aaa
out
jb
mov
mov
push
ss
sub
adc
or
pop
and
push
fiaddl
ret
sbb
scas
xchg
rorl
sub
jmp
jnp
lods
ja
loope
sbb
or
sahf
inc
idivb
mov
push
mov
pop
in
jmp
cld
insl
ss
pushf
dec
mov
inc
jb
fwait
or
add
sbb
imul
test
pop
movsl
dec
jl
into
daa
pusha
mov
jbe
aad
stos
adc
inc
push
loop
xchg
sbbb
lods
das
pop
xchg
test
push
in
push
int3
lea
insb
pop
push
in
mul
and
mov
adc
inc
mov
fs
rclb
jno
xor
loop
add
or
jg
rcrb
adc
test
add
or
iret
fistl
jne
test
xor
pop
test
stos
cltd
test
int3
adc
or
or
push
sub
lods
jne
mov
loope
aam
mov
mov
or
fcmovb
push
sub
jl
or
push
cwtl
aam
scas
cmpsl
imul
push
jl
push
mov
in
cmp
imul
aad
out
and
push
mov
mov
les
push
mov
movsl
mov
dec
xchg
addb
sub
xor
pusha
add
adc
subl
xchg
rclb
and
outsb
jbe
fstl
mov
push
andl
adc
lods
aam
sbb
push
mov
push
or
and
push
cmp
negl
xor
fs
sub
xchg
jp
inc
popa
mov
addb
adc
adc
mov
mov
insl
sbb
or
loop
filds
jno
imul
dec
ljmp
sbb
sub
xor
in
fildll
mov
mov
or
or
aaa
push
inc
sub
inc
incl
xor
dec
adc
cld
outsl
adc
into
cmp
inc
sub
add
cld
xchg
mov
push
sbbl
mov
pop
popa
xlat
dec
xor
adc
movsb
push
xchg
add
adc
add
and
in
xor
add
mov
lods
test
mov
rcll
imul
mov
adc
push
sub
sub
or
add
push
inc
add
jle
and
mov
aam
es
or
lret
mov
dec
push
xor
sbb
adc
mov
adc
clc
bound
or
sub
pop
xor
lea
or
into
addl
cmc
cmpsl
mov
add
and
fiaddl
into
sbb
pop
and
arpl
cmpsb
orb
rcrb
add
and
lods
xchg
sub
xchg
mov
lea
mov
lods
mov
mov
or
or
jbe
pop
addb
imul
dec
or
inc
fs
imul
inc
testb
or
push
mov
dec
aam
mov
lods
jmp
fistl
cmp
fwait
sub
pop
and
xor
loope
and
adc
mov
insb
push
inc
loopne
lods
adc
sbb
dec
push
jmp
shll
jo
adc
lret
adc
dec
push
pop
ret
cmpsb
shrl
xor
or
add
ficoml
test
cmp
scas
adc
and
lret
adc
sahf
imul
or
fistpl
mov
dec
ret
cmpsl
xchg
addr16
add
mov
popf
loope
xor
jecxz
jp
call
add
xlat
testb
sub
adc
dec
cmp
bound
mov
adc
sub
mov
and
loope
xor
fsubr
lea
xchg
cmc
dec
std
or
scas
cmpsl
scas
adc
imul
add
sbb
mov
notb
out
out
rorb
adc
popa
mov
lahf
adc
fwait
xor
cmp
push
subb
sub
pop
dec
mov
or
mov
inc
sarb
nop
insb
testl
jno
pop
fbstp
or
xchg
and
adc
faddl
push
in
jg
xor
lcall
test
jmp
rclb
cmp
inc
jb
sub
cmc
bound
mov
adcb
mov
cmpsb
repz
pop
jne
and
nop
or
nop
push
xor
outsb
aad
in
je
add
or
jp
cli
sbb
add
mov
mov
imul
or
jbe
inc
adc
sahf
fisubrs
xchg
mov
insl
or
out
cmp
push
insl
adc
mov
or
in
xchg
mov
xchg
aad
fistl
imulb
dec
fidivrl
cmp
test
pop
jae
and
enter
dec
sub
aam
in
ss
dec
jno
add
fistpll
enter
mov
pop
or
inc
push
jns
adc
xchg
mov
pop
inc
sub
test
adc
sub
jae
mov
rcl
test
fwait
push
inc
pop
insl
loopne
adc
mov
lret
xor
jb
and
inc
sbb
mov
inc
xchg
loopne
sbb
dec
sti
psllw
xor
les
in
std
ds
or
pop
mov
xor
sbb
mov
es
sbb
pop
in
dec
outsl
jo
push
bound
mov
cmp
sti
lret
stc
pop
xchg
mov
push
daa
pop
adc
inc
and
xchg
addr16
loop
push
adc
and
cmp
repz
or
adc
push
add
inc
pop
mov
add
and
mov
push
mov
mov
test
xchg
outsl
sub
test
aaa
cmpl
addb
rcl
sub
pop
or
mov
popa
or
xor
cmpl
enter
lds
imul
push
orl
test
loop
sbb
pop
imul
mov
cmp
add
aam
sub
cmp
adc
mov
adc
dec
mov
cmp
data16
xor
mov
loop
push
mov
push
aaa
fs
add
inc
adc
fnstsw
stos
inc
mov
push
outsb
dec
or
mov
sub
mov
test
fimuls
mov
dec
and
cs
insl
add
xor
inc
imul
addl
xor
adc
push
scas
pop
es
orb
lcall
pop
adc
fnstenv
mov
adc
into
add
and
pop
cmc
sub
sub
xchg
pusha
imul
push
sub
int
mov
notl
sub
mov
xor
pop
aam
mov
or
xchg
push
andl
insl
mov
cmc
imul
dec
loope
xchg
fst
pop
inc
outsb
cmp
movsl
pop
es
mov
imul
and
inc
inc
test
inc
cmp
pop
aam
add
adc
mov
or
mov
adc
push
rol
cmp
stos
inc
sub
inc
mov
ret
xchg
and
outsb
pop
add
pop
es
jle
data16
bound
and
and
adc
adc
outsl
or
iret
loope
in
inc
adc
test
or
fdivrs
out
push
mov
adc
pop
out
sbb
inc
je
in
dec
sarl
imul
clc
stos
or
adc
fisttpll
or
add
dec
loopne
add
rcrb
xor
jmp
sahf
call
cmpl
add
xor
add
add
rcl
jne
inc
test
lock
fwait
inc
pop
leave
sub
pop
xchg
add
cld
outsl
inc
push
jnp
xor
aam
dec
pop
ds
sbbb
add
sbb
flds
push
xchg
cmp
shr
dec
rcll
stos
repnz
dec
inc
and
data16
or
lock
dec
inc
popa
and
mov
add
push
lea
add
adc
sub
add
xchg
into
pop
nop
xchg
cmp
adcb
cwtl
jo
dec
pusha
push
fs
int
imul
and
sbb
and
push
lret
adc
add
pusha
adc
rclb
inc
dec
sbb
test
adc
push
fucomip
mov
pop
enter
mov
ret
loopne
or
inc
and
inc
dec
js
mov
sub
inc
add
pusha
xor
mov
ljmp
adcb
adc
repnz
add
or
pop
ds
insl
aad
hlt
arpl
enter
enter
pop
les
shlb
or
mov
jne
xlat
sahf
add
aam
arpl
fsubrl
mov
or
in
jo
xor
bound
fstp
add
incl
mov
cmpl
and
setb
push
add
ljmp
and
push
aad
adc
push
popa
mov
push
mov
mov
insl
aam
sub
mov
cwtl
ret
jl
push
cltd
sub
ljmp
mov
inc
xchg
or
imul
or
clc
pop
shrb
mov
gs
dec
add
cmp
fsubrs
addr16
sbb
add
cmp
addr16
ss
inc
addr16
es
pop
jle
subb
cmp
mov
aad
lea
xchg
inc
or
es
mov
push
jno
jno
pop
push
dec
loopne
icebp
or
call
inc
cmc
shrb
mov
sti
xchg
faddl
push
add
add
pop
mov
testl
dec
scas
mov
cmc
push
pop
ficomps
test
mov
insl
shll
roll
xchg
mov
fiadds
xor
and
into
or
out
fsubrs
xor
add
dec
mov
shl
fiaddl
lods
adc
stc
push
fmuls
je
fxch
insl
mov
aad
cmpsl
loop
bound
imul
inc
lods
push
push
add
sbb
je
rolb
sub
cmp
pop
adc
mov
std
and
ror
dec
pusha
mov
or
imul
sbb
sub
inc
mov
das
dec
dec
mov
out
and
mov
adc
shll
insb
insl
stos
jb
insb
out
call
fisubs
outsb
ss
inc
dec
sub
stos
leave
cmpsb
loopne
jg
leave
push
loopne
sub
add
mov
leave
divb
stos
mov
test
sub
insl
jno
inc
add
cmc
iret
unpcklps
lea
mov
xor
sub
and
push
imul
mov
lods
mov
subb
jno
mov
sub
mov
out
xor
lods
cmc
popl
fistps
xor
cmp
xor
sub
sub
mov
mov
lret
loop
adc
cmpb
xchg
mov
xor
push
and
push
subb
push
inc
imul
leave
scas
fisttpl
lods
mov
push
and
jb
or
push
lcall
das
sub
cmp
adc
hlt
inc
fildl
xor
aas
and
sub
test
outsb
aam
inc
pop
cmp
or
dec
adc
pop
jg
dec
and
sbb
mov
cmp
mov
cmp
out
mov
push
mov
sub
mov
frstor
xchg
das
adc
and
mov
ret
jmp
in
fcoms
adc
mov
push
xor
or
ficomps
iret
movsl
jno
int
dec
add
mov
shrl
sub
sbb
ficoml
mov
push
adc
ficoml
outsb
rcrb
xchg
push
aam
cmp
mov
sbb
mov
cmpsl
add
mov
and
sub
aas
ds
mov
aas
xchg
mov
jb
xchg
or
add
clc
mov
das
push
fists
ret
inc
push
and
mov
xor
mov
adc
idivl
jno
adcb
popa
mov
mov
neg
push
loop
push
movsl
aad
mov
push
pop
shlb
cmp
adc
mov
mov
int
push
andb
loope
xchg
sbb
into
inc
mov
mov
push
mov
popw
inc
mov
dec
dec
rolb
daa
mov
push
mov
cmp
pop
imul
xchg
push
aaa
or
popa
pop
movsl
addb
sbb
sbb
pop
imul
movsl
push
arpl
push
mov
xchg
cs
mov
dec
push
cmp
jmp
and
and
xor
test
push
mov
xchg
add
fwait
imul
data16
xchg
inc
shlb
aad
and
aad
movsl
mov
add
test
mov
and
jae
sbbb
inc
mov
xor
pop
push
test
sbb
inc
or
push
int
mov
cmc
add
rcll
addr16
mov
xchg
subl
and
lea
sbb
sbb
xchg
clc
dec
pop
mov
jp
pop
add
rolb
mov
sahf
sbb
mov
sbb
pop
sbb
mov
pop
sbb
and
sbb
sub
push
loop
aad
xchg
pop
fcoms
loop
in
out
in
inc
and
and
lods
jb
mov
pop
mov
dec
xchg
imul
push
cwtl
jo
fistpl
sbb
adc
sbb
push
mov
xchg
adcb
pop
out
sbb
outsb
jmp
lea
mov
mov
sbb
out
push
int
add
inc
ljmp
inc
addr16
push
popf
in
aas
lods
rorl
push
cmp
push
in
sbb
cmp
inc
sub
ret
cltd
push
movsb
movsl
jno
lods
xor
data16
fdivl
mov
push
insb
lods
jge
cmp
rcll
dec
cmp
ret
cli
cmovne
shll
pop
cmpsb
pop
jp
xor
lods
addl
inc
and
out
push
add
pop
mov
xorb
or
fcomps
adc
add
fsubl
lods
fadds
lcall
outsb
leave
sbb
push
mov
movsl
inc
sub
lods
shrl
sbb
or
inc
dec
repnz
and
adc
inc
adc
imul
icebp
addr16
mov
adc
add
adc
push
es
adc
adc
adc
xor
inc
mov
xor
push
sub
jb
push
mov
sub
sarb
and
and
push
mov
je
push
push
and
rcl
das
jnp
mov
in
iret
popf
xchg
scas
xchg
or
xor
adc
dec
divb
cli
movsl
into
icebp
and
sub
sbb
inc
fimull
push
sub
hlt
push
mov
inc
adc
sbb
jae
add
fcmovbe
adc
cmc
arpl
inc
push
mov
fisttpll
pusha
popw
inc
iret
cwtl
mov
fwait
aad
dec
in
push
ret
add
imul
into
sub
push
pop
mov
cmc
out
fisttps
test
cmpsb
push
aam
xchg
push
test
cltd
jo
cmpb
mov
or
cmp
xor
ss
insb
movsl
subb
cmc
mov
into
mov
inc
call
push
lods
rcrl
lcall
xor
data16
adc
lods
xor
sbb
xor
xlat
mov
es
stos
inc
pop
add
imul
stos
mov
push
pusha
data16
aam
mov
pop
jp
adc
fs
mov
sub
sub
pop
adcb
push
in
lcall
outsb
movsl
lret
push
push
xlat
imul
shlb
dec
jg
pop
adc
imul
lea
or
test
mov
stos
push
xor
mov
add
and
sbb
rorl
movsl
inc
imul
test
je
test
xor
incl
fstps
push
imul
sbb
mov
addl
rcl
test
jle
rclb
aam
push
sbb
push
xchg
sbb
add
or
sub
sub
clc
in
test
lods
and
ljmp
mov
in
dec
add
pop
lea
sub
xchg
add
mov
fcomps
aaa
jb
push
sbb
das
push
xchg
cli
cltd
adc
or
jp
insl
jae
ljmp
xlat
pop
sub
pop
sub
and
stos
xchg
cltd
loop
mov
leave
push
sbb
push
xor
addb
stos
pop
adc
lea
incb
push
mov
push
sbb
and
mov
dec
mov
sub
dec
cli
outsb
imul
pop
repz
inc
mov
imul
sub
add
mov
fidivrs
xchg
xchg
or
mov
sbb
or
ret
jg
es
rcrl
add
or
xchg
imull
xchg
aaa
lahf
mov
mov
outsb
or
push
sbb
into
mov
sub
or
or
jb
incb
mov
fildl
leave
pop
adc
loopne
movsl
stos
test
shrb
mov
push
lret
pop
and
pop
fbld
mov
push
cmpsl
outsb
sub
fcmovbe
mov
sub
mov
fsubrs
hlt
inc
loop
adc
or
stos
jne
push
cmpsb
mov
sarb
push
addr16
sbb
ficoml
shlb
and
arpl
ljmp
mov
roll
mov
aam
adc
adc
and
sbb
pusha
popf
sahf
xchg
movsl
xchg
or
mov
and
jae
xor
stos
in
test
sub
jne
jne
sub
loop
stos
inc
test
push
test
aam
xchg
into
repz
adc
pop
nop
mov
mov
mov
sub
xchg
test
sub
ret
test
inc
adcl
mov
inc
xor
or
pop
adc
lods
add
cmp
push
test
into
repnz
lods
pop
test
imul
rclb
dec
inc
mov
adc
ds
pop
test
jl
push
imul
mov
cltd
jno
test
insb
or
push
inc
add
mov
test
js
adc
xor
jmp
add
push
imul
or
and
xlat
push
test
fdivs
jns
push
mov
lcall
xorb
pop
push
and
xorl
jo
push
push
pop
pop
or
cmpsl
inc
subl
loopne
leave
or
movsl
inc
sbb
pop
push
push
pop
xlat
push
sbb
stos
dec
xor
adc
aam
add
in
add
cmp
orb
mov
push
fildll
xlat
xchg
push
adc
push
push
sbb
aad
mov
pusha
ljmp
aaa
aaa
outsl
mov
and
imul
add
sub
mov
sbb
das
mov
lret
sub
pusha
pop
and
push
fisubs
push
inc
fadds
cmp
jp
push
sub
dec
inc
not
imul
lea
adc
and
shll
sub
inc
mov
pop
fcom
sub
adc
call
jp
and
rol
inc
dec
xor
sub
jns
fildl
cmpl
in
adc
dec
pop
sar
pop
outsl
mov
mov
mov
roll
add
push
push
pop
push
pusha
dec
pop
sub
aad
test
push
mov
sahf
rcrb
pop
mov
dec
push
push
mov
add
fcompl
pusha
sbb
aaa
push
adc
inc
cmpl
adc
push
and
pop
imul
sub
pop
ret
filds
sbb
mov
push
dec
scas
je
add
push
add
loop
jno
inc
test
stos
icebp
xor
shrb
fldcw
push
push
cmp
dec
adc
fcoms
jb
cs
enter
aad
leave
push
test
mov
int
add
enter
sub
jl
add
sbb
in
jb
out
jp
mov
ljmp
push
cmc
scas
sbb
dec
pop
cmp
ljmp
inc
repnz
push
push
push
lods
shll
and
jb
or
cmp
inc
outsb
imul
sti
mov
push
inc
mov
push
or
cmc
shrb
xor
push
mov
test
cmp
mov
insl
or
pop
adc
insl
push
dec
and
popa
inc
push
mov
imul
addb
xchg
pusha
mov
loop
mov
shlb
push
mov
into
xchg
inc
xor
cmp
rclb
mov
inc
pop
out
and
pop
imul
and
ja
push
sub
test
or
mov
lcall
adc
sbb
mov
ret
insl
xor
lahf
xchg
idiv
xor
push
test
mov
lods
mov
push
imul
aas
xchg
in
add
enter
and
or
add
mov
push
inc
jae
mov
push
lods
dec
cs
popa
sub
add
outsb
sahf
aad
cmpsl
les
nop
jo
gs
add
pushw
out
or
cmpsl
inc
movsl
mov
xchg
cmp
sti
testl
je
inc
imul
loopne
or
jno
add
addb
sub
stos
add
test
cmp
cmp
cmp
mov
and
xchg
leave
lret
dec
inc
mov
popa
test
mov
lods
jl
lcall
lods
xchg
push
or
ljmp
out
scas
inc
rorl
adc
mov
aad
inc
andl
out
mov
push
push
sti
mov
stos
push
test
sub
dec
pop
es
mov
fidivrl
sbb
inc
lods
add
or
adc
movsb
xor
sbbb
scas
ficoml
or
sub
cwtl
sub
imul
push
mov
cmpb
loope
push
xchg
inc
inc
rorl
or
lcall
pop
jo
jle
or
jo
test
push
addl
or
cwtl
or
fwait
stc
sub
jge
cmp
sub
mov
das
rclb
cmp
and
gs
test
dec
jmp
push
pop
mov
mov
push
mov
sub
xlat
adc
loop
or
cmp
pop
sub
mov
add
jne
adc
clc
jne
adc
inc
loopne
mov
pusha
ret
roll
xchg
outsl
or
xchg
enter
xchg
sbb
stos
leave
inc
add
pop
and
add
push
gs
cs
push
pop
xor
push
sub
loop
adc
loope
mov
pop
ret
adc
mov
push
sub
das
xchg
jle
lods
push
leave
ficompl
mov
mov
cmp
punpckhbw
pop
decl
sbb
popf
push
imul
inc
inc
hlt
aad
xchg
movsl
xorb
loop
xchg
mov
lods
mov
outsb
aad
sti
and
cmpsl
fldl
rcl
mov
push
mov
stos
ss
xor
adc
push
mov
push
cmpsb
xor
test
cmp
sti
push
push
sbb
roll
mov
es
and
and
xchg
pusha
ret
xchg
mov
aad
test
inc
neg
insl
inc
insb
lods
inc
repnz
or
dec
fwait
arpl
and
addb
push
jmp
ljmp
inc
xor
add
or
aas
testl
lcall
pop
mov
clc
cmp
lret
sbb
cmp
mov
pop
mov
inc
lea
in
clc
pop
shll
push
cmc
dec
sbb
fdivs
fistps
lock
adc
adc
and
push
xchg
xchg
cmp
add
dec
sub
add
incl
pop
mov
enter
xchg
shrl
push
stos
push
test
mov
push
xor
popf
pop
inc
xor
mov
lods
and
pop
popf
push
stos
adc
xchg
fadds
shrb
stos
mov
mov
and
loopne
push
cltd
mov
fs
xchg
inc
leave
rcr
mov
jbe
lds
sarb
ret
mov
fwait
inc
push
shrb
xchg
scas
xor
into
ret
stos
dec
and
in
fnstsw
mov
pop
movsl
jecxz
cmp
and
push
and
push
dec
push
inc
aad
mov
sub
cmp
insb
rolb
loop
aad
inc
ficoml
sbb
lods
fcoml
inc
xor
mov
sbb
fildl
cmp
outsb
inc
mov
xor
les
or
sahf
adc
and
push
fldt
adc
xor
aad
inc
imul
inc
enter
xor
pop
dec
inc
add
xchg
ljmp
ljmp
pop
push
add
inc
mov
shrb
add
or
push
jge
pop
mov
fldcw
sub
xor
mov
lock
loope
dec
mov
cmp
push
lods
push
xorl
sub
andl
push
insb
mov
push
clc
adc
sub
imul
add
mov
sub
mov
shrb
cmc
fisttpll
mov
shrl
and
xor
sbb
aam
aad
add
lahf
shll
push
mov
sti
pop
aad
or
or
inc
scas
adc
xor
inc
xor
pop
aas
sarl
sbb
mov
lret
sbb
pop
pushf
mov
sub
outsb
ds
pop
and
lcall
test
pop
in
dec
jmp
test
xor
mov
add
out
sub
repz
test
pop
or
dec
pop
mov
aad
repz
shll
cmc
and
call
mov
lret
test
mov
inc
sarl
addb
fisubs
mov
push
stos
push
push
mov
insb
and
adc
push
xor
xlat
inc
aas
mov
test
fstps
repz
add
adc
inc
and
inc
mov
gs
xchg
jp
sbb
sbb
mov
add
ret
lods
inc
aad
push
jns
mov
les
adc
xor
push
lcall
scas
cmp
scas
sbb
jo
push
sbb
lcall
push
enter
fxtract
addl
or
je
adc
inc
push
inc
xchg
xor
nop
cs
imul
add
outsl
stos
pop
push
xchg
mov
ret
push
stos
or
push
inc
adc
sbb
push
sbb
insl
pop
pop
je
imul
imul
lods
insl
sbb
add
add
sbb
xor
pop
and
push
jo
mov
sub
das
rolb
push
push
push
lcall
lea
das
xchg
out
pop
dec
or
cmc
pop
sbb
pop
sbb
jge
fmuls
das
enter
fsubrs
push
adc
push
add
sub
mov
mov
popf
sbb
push
and
jg
call
and
aaa
or
or
push
shlb
dec
cmc
faddl
mov
sbb
inc
add
push
imul
ret
sbb
sub
mov
es
rcll
ret
sbb
mov
rolb
mov
sbb
push
insb
pop
jno
push
sub
lods
shll
adc
call
cmc
fwait
add
push
xor
gs
loop
push
sub
test
aad
push
pop
test
test
mov
push
cmc
jg
sub
shlb
loope
pop
push
sub
mov
sarb
pop
xor
sbb
pop
and
sbb
pop
xchg
add
test
pusha
imul
pop
dec
cmpsb
sbb
mov
jbe
aaa
push
sub
jo
in
adcb
dec
pop
hlt
pop
mov
test
hlt
adc
or
mov
pop
in
jge
test
add
test
push
mov
int
xor
pop
and
xor
mov
push
mov
xor
jne
push
hlt
add
add
and
rclb
popa
scas
add
loope
inc
sub
decl
call
cmp
jo
add
cmp
add
add
test
nop
xor
bnd
cmp
inc
add
rcrl
sbb
fcom
sub
pop
iret
mov
pop
in
cmp
xchg
sbb
fldl
or
aad
int
out
loope
sbb
pop
adc
add
outsb
inc
cmc
in
into
in
or
inc
je
push
outsl
or
scas
adc
xlat
sub
shrl
lret
xor
inc
dec
out
add
push
packssdw
push
aam
ljmp
sub
daa
xchg
add
jle
add
cwtl
push
aad
sbb
lea
jo
push
sbbl
pop
lret
inc
ret
enter
jg
and
loopne
jecxz
add
cmp
or
aam
add
incl
dec
mov
xlat
mov
adc
hlt
add
insl
adc
fdiv
add
and
push
out
sub
cmc
cmpsb
hlt
xchg
inc
dec
xor
cmp
adc
xchg
call
push
enter
mov
test
inc
ds
push
aad
pop
repnz
pop
lock
mov
out
xor
jb
mov
adc
xor
xchg
sub
sub
pusha
rcl
enter
cmpb
les
fidivl
mov
pop
jp
mov
neg
sub
scas
pop
add
pop
push
xchg
dec
sub
dec
lcall
aam
and
adc
xlat
sbb
es
aam
cmp
fadds
orb
sbb
cmp
pop
iret
ja
repnz
insb
mov
mov
cwtl
mov
cmp
push
sub
and
jbe
out
and
arpl
or
or
sbb
mov
adcb
sbb
stos
jp
daa
pushw
mov
mov
and
adc
xchg
inc
add
mov
mov
jg
negl
jne
add
jo
cmc
push
test
cmp
iret
add
inc
jnp
js
pop
mov
or
mov
sti
sahf
test
test
mov
ret
xlat
into
jno
adc
push
sbb
cld
push
sub
out
inc
xor
dec
or
movsb
push
sti
imul
mov
ret
rclb
es
das
add
movsl
int
aad
xchg
dec
add
and
sub
jo
sbb
dec
sub
nop
pop
mov
divl
movsl
or
or
pop
pop
push
test
and
mov
xor
mov
shll
and
mov
into
xchg
push
pop
mov
test
sub
add
cmp
mov
stos
add
sub
addb
das
shll
adc
cmp
add
push
enter
stos
push
push
jl
push
scas
fisubl
sub
orb
lods
jge
sub
push
pop
inc
addl
cmc
inc
add
pop
mov
add
jno
jp
pop
stos
mov
mov
mov
cmp
mov
pop
mov
hlt
push
inc
mov
mov
adc
aas
mov
and
dec
adc
cmp
inc
sub
repnz
mov
sbb
xchg
push
stos
add
in
cld
aad
movsl
push
dec
test
inc
xchg
push
inc
and
mov
in
enter
push
aam
sub
push
mov
or
push
add
mov
jae
out
and
imul
stos
adc
mov
lret
inc
icebp
sbbb
mov
imul
clc
imul
and
jns
test
add
pusha
inc
or
pop
inc
stos
push
add
push
imul
sub
stos
push
in
idivl
arpl
ljmp
dec
test
push
test
mov
sbb
mov
sbb
test
pop
mov
in
push
or
xorb
add
lock
and
aam
xchg
push
lods
mov
pop
iret
ja
xor
push
addb
mov
and
movsl
mov
add
jl
insl
or
jecxz
and
and
imul
push
xlat
ficompl
popa
test
add
push
jae
jmp
jno
push
inc
mov
rolb
ss
cs
push
jp
push
push
jae
cld
in
scas
pop
shl
add
ror
movsl
sub
or
sbb
sub
push
cmc
je
mov
repz
insw
push
or
rolb
ret
inc
jle
out
mov
push
int3
cmp
jle
add
outsb
inc
sub
inc
loope
pop
sbb
mov
lods
add
or
mov
lea
dec
aam
adc
push
jle
fiaddl
push
or
xor
fsubr
addb
jae
mov
push
sahf
mov
cmc
lods
push
or
adc
add
push
inc
and
push
and
mov
xchg
jo
ret
and
mov
es
cmp
inc
adc
push
roll
mov
lods
push
sub
fiadds
mov
push
inc
int
outsb
adc
adc
adc
lods
pop
gs
es
inc
mov
cld
mov
mov
fwait
jl
mov
lcall
push
jge
in
aaa
ds
iret
mov
shlb
xor
pop
rcll
andb
push
add
lods
add
aad
adcl
dec
mov
aaa
into
sub
lcall
add
cltd
stc
xchg
cltd
pop
lods
push
movsb
jmp
test
mov
std
push
adc
push
push
mov
push
or
clc
shll
sub
scas
hlt
insl
ret
xchg
popa
into
xchg
or
jno
jbe
mov
sbb
adc
les
dec
mov
push
scas
and
inc
insl
add
push
movsb
push
pop
inc
imul
and
jo
lods
and
shrl
shll
pop
cmpsb
dec
loopne
pop
inc
mov
sub
push
add
mov
roll
push
test
imul
push
sub
pop
fldt
mov
test
jb
imul
cmp
pop
push
push
sub
mov
enter
jle
inc
mov
aam
xchg
push
in
popf
in
lods
subb
aad
mov
insb
rcrb
sub
dec
bound
test
push
cmp
subb
xchg
sub
nop
sbbb
add
or
push
sub
loopne
mov
adc
fcompl
push
dec
das
pop
outsl
aad
ret
adc
rcl
mov
mov
cmp
filds
dec
andb
nop
es
daa
mov
out
lods
add
jb
incl
inc
inc
add
push
sub
ja
nop
sbb
std
xor
inc
add
pop
cli
mov
adc
mov
insl
mov
xor
mov
outsb
mov
push
mov
jp
cmp
sahf
sub
stos
pop
jg
mov
aad
orb
ljmp
gs
aad
push
push
sbb
loop
int
or
add
push
or
add
or
movsl
loop
jecxz
mov
fsubrp
push
sti
add
cmpsb
xor
addb
push
add
xchg
addb
fisubrs
xchg
rorb
mov
mov
das
push
push
dec
push
adc
push
push
mov
test
push
mov
fisubrl
pop
push
jae
imul
mov
ret
scas
push
andb
movsl
mull
push
ret
mov
or
mov
xchg
push
mov
mov
fisubrs
or
into
test
mov
test
in
or
lcall
mov
int
mov
jle
push
mov
inc
je
and
pop
cmp
mov
movsl
push
adc
outsb
rolb
dec
aad
clc
and
xchg
and
in
gs
add
outsb
mov
mov
push
in
dec
sbb
pop
insl
cmc
inc
add
faddl
adc
test
arpl
mov
sarb
or
mov
lods
ret
or
in
pop
movsl
pusha
test
mov
jg
aad
add
repnz
and
push
test
je
adc
mov
pusha
cs
or
mov
shll
dec
add
and
and
iret
mov
cld
mov
pushf
mov
cmp
mull
das
adc
push
loope
faddl
jno
jae
fdivrl
outsb
adc
xchg
push
and
js
add
push
or
movsl
ss
dec
cld
orb
sub
loop
mov
stc
fisttps
add
out
push
loope
pushf
xlat
repnz
pop
sbb
cwtl
xor
sbb
push
xorb
mov
sub
rorb
shll
das
push
mov
out
movsl
and
mov
adc
or
das
out
inc
stos
iret
hlt
or
push
jo
rorb
xor
lods
push
in
add
and
pop
or
xchg
and
and
mov
adc
cmpb
aad
xor
or
mov
mov
adc
dec
push
lea
outsl
dec
add
mov
pmaddwd
dec
push
fiadds
aad
shrb
fdivrl
inc
rcr
mov
mov
mov
and
adcl
popf
fwait
scas
jns
xchg
lea
nop
mov
sarl
mov
sub
insl
aaa
and
testl
stos
dec
rclb
mov
pop
int3
pop
mov
ja
hlt
or
mov
sub
out
and
add
dec
aaa
lcall
cld
pop
mov
mov
loope
inc
subl
xchg
call
sahf
leave
test
cmc
sti
mov
push
test
cmp
sbb
inc
inc
push
popa
mov
add
and
cmp
sbb
aad
lea
push
outsb
adc
xchg
lods
add
mov
imul
dec
push
sub
dec
push
inc
fs
les
cmp
push
popa
es
or
adc
lcall
push
jp
andl
push
pushf
cmpsl
je
jle
mov
mov
hlt
sub
lock
lcall
push
adc
mov
mov
sub
inc
aad
inc
inc
ret
and
lret
push
cmp
lods
rcrl
xchg
orl
pop
std
mov
lea
ds
push
stos
push
push
repz
mov
push
mov
fisubrl
push
xor
mov
fs
es
mov
and
add
inc
xor
lcall
pop
mov
out
mov
std
sti
loope
outsl
xor
mov
ret
imul
xchg
push
imul
inc
enter
xor
outsb
mov
sbb
push
pusha
std
push
rcl
push
scas
aad
add
and
or
cmp
jno
and
arpl
and
int
aad
test
sbb
adc
mov
ret
xchg
mov
cmpsb
and
mov
jmp
fisubl
sub
loop
fxch
adcb
movsl
dec
sbb
or
andb
cmp
mov
mov
test
aad
xchg
cmpsl
add
arpl
pop
mov
push
xor
stos
dec
sub
fiaddl
cmc
rcll
cwtl
and
imul
mov
test
mov
stos
inc
movsl
lea
into
sub
inc
sub
xchg
loope
mov
mov
mov
mov
jge
orl
scas
insl
sahf
jne
pop
mov
xchg
lret
ret
sub
ss
sbb
mov
das
sahf
ds
mov
testb
imul
add
es
addr16
xlat
push
sub
test
or
inc
lea
cmp
aad
push
adc
ret
ret
cwtl
cmp
inc
test
lretw
push
mov
out
cltd
pop
mov
inc
incl
cmp
xchg
test
push
inc
fcmovbe
aam
lods
push
outsb
sub
rclb
cmp
push
add
dec
adc
inc
test
xchg
test
rcl
test
lods
loopne
push
out
sbb
pop
add
mov
mov
loop
aad
jo
mov
jo
push
mov
push
cwtl
push
push
push
mov
iret
outsl
fildl
mov
outsb
xchg
and
push
mov
xor
cmc
adc
lahf
mov
dec
mov
sahf
cmp
xor
pop
mov
sbb
xor
pop
pop
mov
adc
mov
pop
aam
xor
xchg
pusha
sbb
cmp
das
and
sbb
cmp
add
mov
movsl
xchg
jno
adc
mov
or
test
insb
adc
repnz
movsl
fisttps
les
test
shrb
dec
push
cli
dec
test
xorl
enter
dec
lods
sub
or
xchg
dec
mov
fldt
outsl
lods
xchg
and
ret
mov
decl
jmp
andb
frstor
ret
mov
adc
fstpl
sarb
les
mov
lret
and
adc
test
mov
mov
into
mov
push
and
inc
pop
mov
adcb
movsb
cmp
pop
xchg
adc
mov
adc
mov
inc
imul
sahf
lret
aam
int
mov
jge
mov
lea
add
pop
orb
push
mov
orb
cmp
sub
xchg
call
orb
js
pusha
add
adc
ljmp
subb
dec
nop
inc
aam
push
jae
inc
inc
adc
mov
aad
xor
aaa
sub
push
inc
jecxz
push
push
testb
mov
das
sbb
push
xchg
mov
pop
push
dec
cmpsb
cmpsl
lcall
xor
iret
sub
cmp
xor
insl
cmp
idiv
sbb
or
imul
cmp
scas
push
push
cli
fildll
loop
push
or
dec
sbb
or
mov
or
mov
inc
fisubrl
mov
xor
addr16
sbbl
les
push
stos
sbb
add
ret
je
adc
sub
adcb
inc
mov
mov
push
or
xor
loopne
pop
jp
lock
fmul
test
out
sahf
pavgb
clc
mov
sbb
adc
adc
bound
out
mov
sbb
add
push
imul
mov
ror
xor
outsb
shll
mov
aaa
or
push
cmp
shrb
cmp
mov
sub
mov
sub
das
mov
mov
lds
inc
mov
pop
dec
fwait
inc
adc
in
jno
inc
sbb
push
adc
aad
sbb
push
cwtl
shrb
aam
fcmovb
push
mov
cltd
add
push
test
inc
push
inc
xchg
add
lea
loop
inc
add
jne
push
and
dec
mov
push
inc
stos
enter
push
pop
mov
cmp
subb
push
push
pop
rcl
ret
pop
mov
add
or
cmc
sbb
sarb
imul
inc
lahf
mov
inc
pop
test
cmp
cmp
mov
in
add
and
pop
mov
or
loopne
or
sbb
inc
movsl
ljmp
xchg
add
xchg
gs
or
pushl
inc
cmc
or
addl
stos
aad
mov
or
cmpsb
shrb
inc
push
insb
stos
fs
sbb
xor
push
movb
push
add
test
cs
and
test
push
call
jnp
bound
aad
xchg
pop
or
les
xchg
push
dec
adc
xor
das
pop
dec
movsb
push
sub
ficoms
divl
adc
xchg
fsubrp
push
idivb
xlat
mov
pop
pop
es
ficomps
mov
or
sahf
and
adc
fstpl
inc
mov
fs
int
cs
cmp
inc
movsl
or
sub
sub
pop
inc
loop
sub
test
inc
pop
or
rolb
addr16
int3
rorl
mov
dec
mov
mov
push
adc
sbb
push
roll
push
daa
xor
add
pop
cmp
imul
lret
sub
aad
inc
xor
mov
mov
pop
gs
sub
insl
cmpsb
adc
pop
mov
adc
insl
data16
nop
sub
mov
jno
push
mov
mov
clc
jno
and
xor
xor
fcmovbe
add
dec
leave
ja
inc
or
in
mov
adc
adc
ret
pop
jl
aad
add
xor
mov
je
shrl
into
jecxz
stos
lret
sbb
sbb
pushw
add
jo
push
loope
cmp
lods
cmp
xor
sbb
pusha
inc
movsb
push
out
mov
test
pusha
mov
ljmp
into
shll
std
push
insl
int
aad
flds
in
sbb
imul
test
or
pop
adc
js
jbe
stos
scas
pop
push
pop
mov
add
add
sbb
mov
cmp
insb
add
pop
insl
or
jne
dec
jp
fidivl
sub
mov
imul
mov
add
add
cmp
jp
repz
mov
mov
mov
call
loopne
sub
fildll
daa
push
xor
push
adc
test
pop
loope
sbb
push
testl
pushf
mov
xor
lahf
inc
xchg
or
push
and
sarb
ljmp
push
pop
aad
mov
aam
inc
pop
jnp
add
or
add
mov
xor
jb
out
inc
mov
mov
adc
fwait
cmp
sbb
int3
and
jb
add
xchg
push
test
xchg
aam
dec
xor
inc
xchg
sbb
inc
mov
daa
push
out
lock
scas
sahf
cmp
or
add
add
xor
and
xor
cmp
es
jmp
ljmp
lock
data16
ficoms
sbb
add
xor
scas
lock
mov
enter
test
sbb
and
sbb
adc
insl
mov
dec
sarb
daa
and
adc
add
and
cmp
fdivs
add
std
sub
mov
hlt
sti
mov
push
push
push
adc
sbb
mov
sub
adc
dec
scas
and
xchg
mov
scas
push
insl
inc
adc
sbb
mov
ret
and
adc
and
adc
cmp
or
adcl
add
sub
xchg
mov
rcll
xor
dec
mov
imul
sub
dec
add
outsb
mov
andb
lds
call
aad
mov
cmp
pop
mov
jg
jne
out
or
cmp
add
inc
dec
call
imul
inc
sub
lods
xchg
das
mov
mov
je
or
and
xor
inc
lods
inc
imul
cld
aas
mov
adc
fldl
test
rorb
test
mov
lcall
das
xor
push
das
push
sti
xchg
or
pop
test
adc
jge
scas
sbb
xchg
cmp
ds
inc
xchg
inc
mov
jge
adc
inc
loopne
ja
fisubl
xor
out
loop
cmpsb
pop
stos
inc
je
jge
sub
in
adc
inc
les
and
add
inc
in
adc
sub
lret
fs
subl
bound
xor
mov
dec
into
xchg
incl
rcl
test
jg
adc
inc
and
lcall
cmpsl
and
xor
fwait
or
adc
ret
mov
popa
add
sub
adc
pop
mov
into
test
fimuls
fmul
inc
arpl
shrb
jae
sbb
sub
pop
mov
ds
cmp
rolb
xorb
pop
fstl
sub
push
int
sub
sub
jb
or
xor
rolb
mov
add
sub
xor
addb
leave
loope
add
dec
dec
in
inc
lret
lock
inc
in
pop
adc
inc
and
or
or
ljmp
ficomps
or
adc
jg
shr
xchg
pop
adc
test
xor
clc
lock
push
push
jnp
addl
outsb
out
add
jl
clc
cmc
shll
adc
shll
pop
xchg
push
jae
add
adc
js
dec
dec
mov
cmp
js
testl
mov
xchg
sar
sub
mov
fdivs
cmp
loopne
mov
push
lock
outsl
xchg
and
clc
and
dec
inc
lcall
in
dec
inc
iret
aad
repnz
pop
inc
mov
clc
sub
sbb
mov
adc
jo
sbb
or
add
xlat
add
data16
xchg
inc
dec
sub
mov
stc
lea
cs
cmp
lcall
adc
cmp
in
das
loopne
fistl
stc
add
andb
or
fwait
xchg
adc
xor
lock
add
pop
push
jnp
into
add
xor
sbb
adc
out
mov
add
sbb
test
enter
js
pop
inc
adc
lahf
sbb
sub
adc
fmuls
mov
js
xchg
gs
or
add
movb
xor
pusha
js
or
popf
add
jns
fs
and
xchg
pusha
add
cmp
adc
and
addb
in
and
jo
jmp
sub
imul
jne
roll
mov
sbb
pusha
add
aam
lock
aad
sbb
aam
or
loopne
xor
mov
dec
xchg
fmull
hlt
test
xor
adc
push
push
push
in
mov
mov
mov
mov
in
fs
outsl
imul
scas
sbb
mov
ljmp
mov
clc
addr16
sub
or
cmp
mov
pusha
cmp
clc
and
cmp
shlb
in
sbb
inc
sbb
fsubl
mov
ret
in
cmp
mov
cmpb
xchg
testb
sbb
mov
ljmp
lds
inc
sub
push
stos
push
stos
mov
inc
mov
xchg
and
xchg
add
push
imul
mov
add
stos
pop
dec
or
pusha
lods
push
loopne
aaa
xlat
mov
inc
jne
loop
sub
loopne
andb
and
shll
sbb
push
mov
push
mov
aad
adc
or
jns
or
stos
add
mov
pop
imul
aaa
stos
push
sub
cwtl
jno
inc
push
mov
push
sbb
inc
adc
scas
xchg
mov
mov
pop
sub
push
rorl
nop
stos
add
movb
or
mov
push
not
pop
das
or
add
sbb
fcoms
sbb
adc
or
xor
and
sub
je
pop
push
push
cmp
jns
test
mov
ret
mov
sub
aam
dec
es
lds
cwtl
mov
stos
adcb
sub
iret
sub
sub
mov
adc
mov
sbb
mov
adcb
push
add
cmc
or
inc
sub
push
mov
add
mov
sub
push
test
push
out
push
dec
lds
jb
test
inc
mov
test
add
xchg
cmpsb
add
in
lcall
orb
push
gs
andl
test
xchg
push
clc
mov
pop
or
fists
cmpsb
dec
push
rolb
test
xchg
mov
sub
test
es
cmp
imul
jno
inc
test
sarb
push
sub
stc
popa
adc
inc
and
pop
imul
xor
rol
imul
push
jmp
xor
inc
aad
mov
cs
and
imul
sub
xor
pop
push
xchg
sbb
das
xchg
sbb
dec
std
dec
subb
mov
cmp
mov
push
mov
sbbb
sub
and
xor
push
xorb
popf
icebp
mov
xchg
mov
add
pop
subb
push
lods
setns
test
mov
xlat
push
daa
cwtl
inc
and
std
arpl
mov
ja
fsubs
jb
push
fsubrs
out
inc
imull
push
cmpsl
dec
sbb
sbb
inc
or
adc
lret
aam
jmp
out
sub
mov
je
jbe
inc
test
add
stos
sub
xor
mov
mov
ret
cmpsb
mov
cmp
cmc
push
jl
rcll
lcall
xor
fidivl
adc
pop
test
inc
cmp
gs
mov
imulb
cltd
loop
mov
inc
mov
out
movsl
jae
inc
rorl
pop
imul
inc
imul
movsb
loop
js
shld
jg
xlat
arpl
xchg
dec
notl
inc
sub
inc
pusha
sub
lahf
inc
inc
insl
mov
mov
adc
push
outsb
lods
adc
pop
adc
movsb
push
push
inc
and
push
mov
sbb
or
mov
mov
push
push
lods
push
pop
dec
enter
gs
pushf
or
inc
cmp
pop
or
push
dec
sub
jg
pop
push
mov
pop
fs
inc
jecxz
and
xor
inc
pop
add
movsl
cmp
mov
int
sbb
ja
fs
mov
add
test
jp
int
push
scas
imul
add
loop
sbb
push
aam
test
dec
sub
push
movsl
incl
movsl
into
add
pop
push
jge
dec
mov
push
in
das
mov
loopne
push
imul
jae
xor
pop
ljmp
out
pusha
aaa
loope
dec
push
and
cmp
mov
push
and
clc
testl
lcall
ds
movl
inc
sub
aam
xchg
mov
push
sub
dec
mov
pop
cmp
and
dec
adc
enter
andb
push
pop
fdiv
lret
mov
enter
add
mov
push
and
or
sub
movsl
push
aaa
cmp
stos
aam
push
sub
xorl
aad
pop
or
inc
lods
rcrb
pop
pop
mov
sub
mov
lcall
xchg
cmpsb
or
sbb
mov
jl
mov
mov
cmp
push
add
mov
arpl
mov
push
ds
adc
mov
movsl
add
push
ret
sub
icebp
shll
test
std
or
subl
loop
mov
mov
fimull
aaa
test
insb
movsl
jge
mov
adcl
cltd
enter
jb
lock
jmp
stos
xor
das
das
pop
arpl
mov
bnd
cmp
pop
lea
sbb
mull
gs
add
loop
data16
mov
inc
sub
push
push
pop
ficoml
imul
inc
sub
outsb
mov
dec
insl
inc
jb
mov
mov
add
lret
pop
imul
push
sbb
add
data16
test
push
fcmovnb
sbb
testb
shlb
icebp
cmc
fdivl
push
pop
sbb
add
sub
dec
mov
mov
sbb
cmc
mov
stos
push
mov
loope
cmp
xor
jle
sub
fs
aad
rcrb
mov
adc
sbb
roll
pop
aam
dec
sti
gs
xchg
mov
enter
push
add
push
mov
sub
add
cmp
xor
sub
vmovsldup
rorb
or
mov
or
jno
dec
adc
push
add
xor
add
and
call
repnz
mull
shlb
adc
xor
sbb
push
aam
mov
xchg
aaa
sub
cld
xchg
xor
mov
inc
add
sub
push
sub
xor
cs
cmc
mov
aad
push
mov
pop
leave
or
imull
fimull
icebp
inc
out
push
mov
scas
testl
outsb
movsl
lock
ss
mov
push
jo
stos
jg
inc
insb
movsl
push
prefetch
add
jae
in
fiaddl
inc
fimuls
inc
push
mov
xchg
cmp
jmp
inc
comiss
add
xchg
insl
daa
pop
sbbl
pop
inc
mov
sbb
insl
into
fs
push
mov
pop
leave
cld
inc
mov
inc
jne
cmp
outsl
inc
test
jno
fwait
test
pop
xchg
push
push
dec
mov
pop
out
addr16
adc
addr16
data16
scas
push
dec
gs
mov
push
fstps
mov
push
mov
cmp
mov
andb
xor
inc
pop
xchg
faddl
xchg
imul
mov
lret
push
gs
xor
or
cltd
add
pop
cmp
add
dec
dec
sbb
or
loopne
dec
scas
adc
inc
imul
pop
inc
imul
scas
sub
dec
int
add
or
dec
cltd
or
cwtl
addl
add
adc
addb
push
sub
mov
aaa
mov
ljmp
test
iret
sub
dec
into
adc
test
shll
push
push
jae
out
subb
and
das
and
scas
or
cmpsb
cmp
test
adc
mov
fistl
int
cmpsl
inc
stos
mov
out
adc
or
inc
shl
jns
aad
sbb
mov
push
mov
push
insb
fcmovbe
mov
popa
cmp
and
leave
inc
stos
add
pop
sub
lret
sub
mov
in
sbb
pop
aam
cmp
inc
push
adc
les
lahf
or
dec
data16
push
mov
inc
ror
shrb
push
lock
aam
inc
rcl
xchg
sbb
push
pop
leave
push
mov
adc
xchg
orb
ljmp
aaa
data16
scas
xor
pushl
mov
scas
push
sub
imul
inc
add
test
push
std
inc
jg
push
or
scas
mov
mov
sub
or
sub
add
or
push
dec
aam
iret
jnp
mov
icebp
xor
push
mov
ss
add
inc
xchg
dec
push
and
lcall
jge
xor
or
daa
aaa
into
mov
or
inc
sub
add
xor
je
ret
push
sbb
xchg
aaa
addb
or
cmpsb
sbb
push
adc
push
mov
jae
aaa
mov
aad
xor
sub
mov
incl
pop
jne
or
stc
in
sub
pop
aad
cld
sbb
sbb
adc
outsl
mov
test
lahf
cmp
shlb
sbb
inc
sbb
das
enter
pop
add
cmc
lods
pusha
push
shll
insl
imul
and
jo
cmp
scas
push
jl
pop
aaa
pop
outsb
cmc
scas
push
insl
mov
das
pop
rorl
lods
pop
mov
lods
shrl
mov
fldl
mov
aad
cmp
push
push
out
pop
add
in
add
dec
push
pop
mov
imul
push
test
mov
pop
inc
inc
pop
xchg
xchg
bound
adc
xor
cwtl
ret
or
xchg
cmp
iret
fmuls
scas
sbb
push
cmp
dec
mull
dec
mov
mov
xchg
mov
xchg
sbb
xchg
rcrl
push
pop
mov
shrb
inc
adcl
push
push
mov
test
dec
ds
divl
mov
pop
jge
pusha
ljmp
jle
xor
mov
mov
outsb
dec
xchg
xchg
or
insl
sbb
subb
inc
addl
jae
add
mov
jmp
and
lret
push
push
stos
xchg
outsb
push
sub
bound
lret
test
add
mov
lret
das
or
mov
or
xchg
js
out
jo
fcmovnb
sub
repnz
ljmp
xchg
out
push
scas
adc
jne
aad
inc
fistl
test
cmp
jo
dec
dec
jno
jbe
movsl
push
rorb
shrb
sbb
xor
xchg
sbb
push
insl
xor
pop
add
push
test
and
sub
test
push
adc
push
mov
stc
lret
inc
test
imulb
adc
push
jge
imul
or
mov
adc
jp
rcll
fs
add
aam
out
clc
pop
xchg
or
pop
pop
aad
dec
addr16
add
or
inc
mov
xchg
sbb
cmc
incl
inc
leave
rcll
cmp
cmpb
add
lea
test
aad
pushf
add
lea
adc
cmp
movsl
outsb
movsl
test
je
rcll
in
cmp
or
rcrb
std
xchg
pop
scas
or
sarb
jne
push
mov
pop
insl
or
pop
sub
pop
mov
fsubs
js
fsubrs
push
push
mov
test
ss
roll
jecxz
js
pop
adc
dec
data16
mov
popw
insb
mov
and
push
jno
adcb
rcrl
cli
xorb
jne
jno
inc
stos
adc
xor
add
xor
add
lods
aad
pusha
es
push
mov
push
add
aaa
daa
fwait
das
cltd
sbb
pop
stos
adc
adc
or
outsb
mov
lock
sub
dec
addb
mov
mov
test
xor
add
inc
xor
pop
stc
add
dec
inc
stos
lock
test
inc
mov
stos
dec
adc
mov
push
add
mov
stos
stos
inc
imul
out
or
or
sub
sbb
sub
xchg
insb
push
arpl
push
push
movb
test
push
push
lods
xchg
loopne
inc
mov
push
sbb
mov
push
inc
call
xor
in
lods
fiaddl
dec
xchg
xchg
push
push
stos
mov
imul
cmp
shll
mov
lea
mov
rcrb
outsl
test
push
mov
pop
add
test
inc
cmc
ljmp
inc
stos
cmp
movsl
out
cmp
dec
add
or
pop
cwtl
pop
subb
sbb
sub
aaa
and
mov
push
mov
add
lcall
mov
sbb
int3
ljmp
fmuls
sub
cmp
inc
hlt
xchg
ficoml
adc
aad
push
lods
mov
adc
mov
xchg
sub
gs
sbbl
pop
scas
adc
pop
pop
lret
movsl
sub
pop
lcall
or
ljmp
and
mov
movsl
cmp
push
fstps
test
and
mov
sub
es
push
or
aad
adc
push
lods
dec
xor
lock
jg
sti
pop
add
cmpsb
incl
dec
xor
lcall
hlt
jl
adc
andb
sbb
mov
sbb
ja
add
cld
mov
stos
sub
neg
dec
cmp
sbb
xor
pop
stos
fcmovne
push
addr16
pop
dec
mov
pop
movsb
mov
dec
outsb
insl
xor
push
cmp
mov
aam
add
sbb
adc
popf
pop
adc
std
ja
iret
movsl
sbb
aam
mov
push
mov
xor
repz
insl
and
popf
fstpt
inc
and
sub
outsb
add
push
adc
sbb
shl
push
addr16
xchg
cmp
sbb
cmp
dec
rorb
sbb
rcrb
adc
or
mov
push
aam
xor
pop
adc
lea
sbb
push
mov
pop
push
rcrb
lock
add
sarl
jle
mov
push
and
dec
dec
push
xor
mov
mov
xor
push
sbb
lds
pop
mov
mov
or
std
inc
xor
out
push
jb
cmc
push
sub
xor
fwait
sbbl
sti
lret
addr16
icebp
pop
fbld
out
adc
inc
dec
xchg
imull
add
sub
cli
sbb
and
out
hlt
dec
enter
sbb
xchg
dec
sbb
cmp
out
andl
jae
inc
sbb
lock
sbb
mov
push
sub
call
aam
adc
sbb
cmp
add
das
add
push
lods
mov
pop
fidivl
fbld
jmp
test
jbe
or
push
test
inc
pusha
inc
lret
mov
add
rcl
fidivs
xchg
dec
gs
daa
push
insl
push
ret
push
lock
pop
and
push
aam
flds
add
mov
insl
jmp
xchg
cs
dec
daa
fs
xchg
outsb
push
sub
rcl
push
add
orb
js
push
inc
mov
cmp
add
jp
test
xadd
mov
sbb
fildll
inc
movsl
repz
inc
lods
adc
push
or
push
cmc
das
add
sti
pop
int
xchg
shrb
pop
adc
xchg
inc
mov
sub
lods
xor
lods
push
adc
inc
pop
pop
andb
adc
mov
push
mov
cltd
adc
lea
insb
mov
pop
and
pop
push
rolb
imul
cs
insb
sbb
jae
adc
push
rorb
stos
pop
cwtl
aaa
mov
cmpsb
fmuls
add
cmc
xchg
or
add
adc
pop
stc
not
mov
inc
inc
push
jecxz
mov
mov
sub
addl
push
sub
push
mov
pop
dec
adc
adc
adc
dec
inc
or
scas
mov
lret
sub
dec
aad
dec
mov
lods
add
mov
adc
inc
pop
or
push
adc
aaa
cmp
push
lcall
add
orl
inc
inc
test
dec
or
adc
sbb
mov
push
jp
adc
test
adc
inc
mov
push
loopne
shll
sbb
inc
sub
push
push
test
inc
sub
and
repnz
mov
sbb
cmp
xchg
mov
daa
les
mov
or
mov
mov
ja
arpl
adc
ret
pop
rorl
bound
and
inc
daa
push
std
jmp
negb
pushf
cmp
push
shlb
push
mov
push
cld
push
insl
push
andb
xor
sbb
out
inc
jns
sub
push
dec
mov
int
js
jl
addb
push
mov
and
push
mov
or
inc
push
add
sub
pop
adc
sbb
inc
push
outsb
mov
inc
xchg
sbb
rcr
add
iret
outsb
imull
inc
test
xlat
outsb
add
and
sbb
lea
push
lods
andb
sbb
jns
mov
rolb
xchg
ret
aam
mov
push
inc
push
cmp
jno
or
cwtl
rcrb
mov
fadds
and
xchg
sub
insb
or
mov
nop
or
xchg
mov
mov
sbb
stos
xor
lcall
sub
out
loopne
fsubrs
dec
push
cmpsb
add
inc
lea
mov
lret
lock
mov
inc
push
or
and
add
sub
loope
jnp
mov
ja
inc
cwtl
ljmp
or
lea
test
push
ljmp
pop
push
jecxz
inc
cmpsb
ljmp
movsb
popa
dec
addb
test
movsb
mov
into
add
shlb
and
popf
pop
ljmp
cmp
leave
mov
sbb
inc
aam
lods
addr16
sbb
sbb
lea
add
adc
add
imul
xor
pop
cmp
adc
adc
xor
pushf
cmpxchg
push
inc
xchg
call
push
sbbb
xchg
mov
iret
mov
test
and
mov
cmpb
fxch
add
lock
push
mov
inc
sub
add
jne
and
push
mov
sbb
repnz
rorb
cmp
inc
xchg
pusha
stos
push
and
out
subb
insb
lret
push
mov
call
gs
imul
lret
loope
fwait
test
add
int
lea
rolb
push
sbb
adcb
inc
insb
mov
sbb
shlb
or
sub
arpl
add
outsb
pop
add
xor
aam
and
add
idiv
stos
adc
imul
and
inc
cli
loopne
sub
mov
lods
mov
inc
inc
hlt
xchg
and
jo
inc
mov
add
stc
lahf
inc
push
xor
push
cwtl
mov
push
mull
cmp
mov
or
and
aas
xchg
lcall
ret
sahf
popf
test
and
loopne
xor
add
fwait
notl
lods
add
shll
test
hlt
je
push
sbbb
add
lret
test
negl
insl
sub
mov
or
sub
mov
scas
pop
psraw
pop
inc
lods
adc
inc
xor
icebp
neg
pop
mov
sub
out
xchg
addl
push
data16
push
and
and
data16
sub
mov
aas
ret
pop
or
push
insl
or
lcall
inc
mov
popf
push
inc
pop
push
lods
xchg
test
arpl
pop
or
jecxz
js
lea
das
lea
push
nop
or
or
cmpsb
fwait
add
ds
push
cmp
inc
mov
imul
aad
mov
popl
dec
roll
add
sbb
xor
jns
adc
mov
mov
cmpsb
out
sbb
stc
mov
dec
and
sub
dec
bound
mov
xchg
cld
movsl
inc
mov
cld
xchg
push
cld
test
adc
subb
xor
movsl
das
iret
ljmp
xorl
inc
xchg
xchg
outsl
inc
mov
inc
and
adcb
push
pop
add
pop
movsl
sub
loopne
mov
dec
insb
fisttpl
lea
imul
lea
mov
inc
insl
push
cmp
inc
aad
push
out
adcb
push
push
jle
push
inc
fsts
inc
inc
adc
in
jg
out
lret
addr16
nop
roll
ret
dec
adc
outsb
pop
movsl
lods
add
add
lods
ljmp
insl
pop
or
and
push
fwait
das
sub
rcrl
outsl
lahf
mov
adc
inc
popa
and
inc
fisubrl
inc
sub
icebp
imul
dec
mov
jns
cltd
mov
stos
aam
lret
cmpb
add
in
roll
mov
mov
push
and
sub
add
inc
fldt
roll
sbb
and
stos
push
pop
cmp
fwait
mov
or
sbb
pop
lea
enter
sbb
jge
push
sub
and
pop
add
push
cmp
mov
push
jo
test
pop
jno
xlat
pop
xor
bound
inc
sub
xor
insl
rcrl
mov
mov
out
add
subb
inc
inc
pop
add
xchg
loop
dec
rcrb
adc
mov
sub
clc
sahf
adc
andl
xor
jns
imul
or
dec
lret
loopne
jbe
sub
jb
push
hlt
jnp
mov
mov
add
movsl
xor
test
ret
sub
xor
es
mov
xchg
push
mov
mov
jno
or
mov
jns
cmp
xchg
sub
sub
mov
loopne
cltd
mov
negl
orb
shrb
popa
rcrl
xchg
sub
mov
imul
out
cmp
gs
pop
add
es
lds
push
test
cmp
push
push
push
cmpsl
push
mov
stc
lods
xor
sub
ss
cmpsl
and
add
scas
cmc
leave
fildll
inc
or
sub
mov
or
dec
jb
adc
and
inc
imul
repnz
test
in
imul
add
push
sub
mov
scas
lods
add
mov
enter
mov
adc
mov
jecxz
or
mov
mov
aam
loop
loopne
and
cmp
inc
push
dec
inc
mov
test
push
push
or
arpl
loopne
out
xor
xchg
xor
xor
adc
or
adc
push
test
roll
add
insl
or
sti
mov
add
into
adc
lea
or
dec
lods
adc
or
inc
shrb
xor
out
mov
addr16
add
lods
inc
mov
push
out
dec
mov
ret
movsl
sub
dec
test
adc
test
push
mov
pop
push
icebp
movsl
mov
lods
fiaddl
mov
or
mov
xor
sub
dec
jo
pusha
sub
push
pop
push
pushf
call
mov
sti
inc
test
into
push
mov
and
push
fisubrl
cwtl
outsb
sub
pop
test
stos
adc
out
pop
jno
sub
inc
adcl
movl
inc
mov
outsb
push
xorb
das
xor
mov
pop
test
sahf
inc
gs
sub
mov
push
mov
mov
rcrl
cs
mov
jae
inc
mov
mov
andb
jle
push
test
imul
icebp
cmpsl
outsb
test
in
xchg
push
adc
push
repnz
mov
test
add
or
push
mov
mov
popa
mov
inc
in
add
mov
aad
jbe
out
push
ret
inc
cmpsl
insl
pushl
cmp
xor
add
mov
movsl
std
popa
add
and
adc
push
or
xchg
add
addl
shrb
mov
jae
lcall
mov
add
pop
call
lret
icebp
or
shll
test
leave
or
adc
sbb
xor
in
adc
sub
add
mov
add
xor
mov
jne
adc
jo
add
push
cmp
enter
mov
in
cmp
lods
sub
mov
das
inc
jnp
int3
sub
mov
in
push
sbb
nop
add
cmp
adc
push
aad
addb
ss
xor
mov
hlt
out
jle
cltd
das
push
adc
clc
stos
inc
dec
and
aam
and
sub
cmpsl
pop
mov
push
loopne
xor
push
lds
cli
fsubrs
sub
dec
push
sar
xor
sub
fildl
cmpsl
xor
and
push
or
mov
insl
imul
cwtl
lods
sub
mov
loopne
xor
out
inc
or
mov
mov
xor
sbb
fistps
adc
loopne
dec
add
adc
cmp
xor
loop
loope
loop
icebp
jg
loopne
test
add
cmp
add
or
int
cld
mov
inc
mov
sub
inc
sub
mov
xchg
sub
add
ret
push
icebp
cmc
mov
rsqrtps
and
inc
sub
aad
test
pusha
and
stos
mov
mov
hlt
sbb
insl
jno
subb
push
dec
push
je
es
cmp
subl
aam
notl
push
push
mov
popa
dec
push
fimull
add
test
push
sbb
into
aad
mov
setne
inc
xor
pop
push
sub
mov
or
push
leave
dec
gs
lods
inc
xchg
dec
aad
cmc
mov
jno,pt
and
add
lcall
popa
mov
movsl
mov
mov
push
inc
push
inc
sti
inc
mov
add
in
xor
jne
ficoml
push
xchg
stos
inc
insb
inc
cmc
xor
add
imul
xor
mov
aam
pop
outsb
mov
push
xchg
ds
jno
lods
pop
lods
push
push
jb
and
pop
or
xchg
add
add
pop
xchg
into
mov
adc
out
mov
lret
movsl
ljmp
pop
stos
ljmp
push
mov
inc
call
jnp
stos
mov
into
mov
push
add
sub
out
dec
dec
xor
push
xor
and
ja
lret
or
cmp
lahf
add
lcall
lret
test
jmp
shl
push
repz
imul
sub
jae
or
cwtl
adcb
sub
fisubl
pop
stos
ljmp
jb
inc
sub
pop
add
and
or
cmc
mov
add
push
cmp
sbb
push
mov
sbb
ret
insl
or
push
loop
inc
mov
mov
lcall
into
or
inc
or
int
rclb
mov
insl
out
sbb
enterw
push
mov
jnp
mov
adc
imul
test
jg
inc
lret
mov
inc
mov
aam
lods
inc
push
push
push
fwait
sub
inc
cmp
and
lret
xor
lods
jnp
pop
adc
mov
sub
imul
mull
int3
xor
outsb
ja
rclb
push
inc
fiadds
or
jb
push
jl
xchg
out
test
mov
mov
mov
mov
inc
jno
ficoml
inc
inc
xor
lea
xchg
or
imul
xor
lods
and
mov
sub
or
inc
in
lods
sbb
jno
xor
insb
sub
xchg
cmp
stos
mov
popa
jb
mov
adc
addb
test
mov
dec
sub
dec
pop
mov
dec
ja
mov
call
push
in
js,pn
inc
or
xchg
lea
outsb
dec
xchg
mov
stos
add
fimull
mov
data16
pop
fldenv
inc
mov
stos
push
cmpsb
mov
mov
mov
xor
imul
adc
cmp
loope
add
xor
sbb
xchg
dec
pop
mov
xchg
mov
push
lods
dec
jmp
add
push
adc
data16
inc
push
sub
push
jle
sbb
dec
sbbb
mov
pop
push
jp
testl
mov
sub
mov
xor
inc
test
adc
lret
cmpsb
dec
insl
sub
pushf
sub
adc
daa
xlat
repnz
pop
and
lcall
dec
insl
orb
ret
sub
cmpsb
mov
js
lods
inc
rol
frstor
pop
imul
inc
daa
addb
sbb
adc
and
test
push
sub
imul
in
pop
subl
or
mov
add
mov
ret
mov
or
cmpsb
pop
push
ret
outsl
lods
test
sub
pop
movsb
aam
sub
stos
pop
sub
fiaddl
aam
lret
outsb
cwtl
lcall
sbb
and
or
inc
push
pop
push
inc
and
out
cld
sub
das
loop
add
or
outsl
sbb
add
mov
clc
nop
mov
and
inc
push
push
hlt
mov
add
or
push
cmp
jne
xor
inc
mov
leave
pop
mov
rorb
mov
roll
cld
mov
adc
lods
dec
adc
push
push
insl
inc
lea
les
xor
addr16
cmp
or
pop
xchg
aas
ret
jge
pop
fadd
add
push
xor
and
repnz
lds
notb
dec
mov
xorl
aad
mov
jp
push
shll
inc
mov
ds
inc
xchg
and
testb
add
sbb
test
fadd
jle
sub
dec
aam
push
add
push
out
xorb
and
add
and
aaa
addb
out
add
add
xor
and
inc
repnz
addr16
xchg
adc
or
sub
popf
repz
sub
dec
idivb
lods
push
or
int3
cmp
in
mov
pop
mov
push
jmp
push
xor
aad
sbb
loopne
mov
and
jnp
rcll
es
daa
sub
rolb
int
xor
or
jae
push
popa
inc
adcl
je
mov
test
adc
push
int3
and
xor
sbb
and
xchg
cmp
popa
fdivs
adc
adc
add
inc
mov
je
fs
adc
adc
stos
push
sbb
and
dec
call
inc
sbb
lods
push
or
and
xor
mov
cmp
pop
sbb
inc
insb
and
xor
adc
int3
mov
fists
sub
aam
adc
dec
add
cmp
cld
add
in
jmp
neg
xor
and
shlw
add
sbb
out
or
add
push
add
add
shl
call
cmp
jns
int3
pop
dec
add
add
push
int3
mov
push
sbb
dec
add
inc
jne
mov
push
or
sub
mov
add
jae
call
and
cmp
sub
xor
lock
call
fisubrs
fdivrs
outsl
neg
inc
dec
aaa
aam
sub
loop
and
dec
lds
inc
stos
adc
jns
call
jbe,pn
cmp
inc
or
mov
mov
mov
pop
inc
cmc
or
enter
in
push
sub
xchg
fiaddl
notl
test
push
insl
std
cmp
mov
sbb
inc
test
or
mov
mov
push
subl
or
inc
pop
inc
and
sbbb
or
mov
jnp
or
cs
mov
push
sub
sbb
adc
das
clc
rorl
add
insb
test
xlat
sbb
inc
sub
pop
or
cmp
mov
dec
sarb
push
sbb
aad
push
rorl
jp
adc
push
mov
leave
cmp
aad
loope
ret
test
push
add
rorl
xchg
outsb
nop
sub
and
inc
mov
adc
je
test
addr16
cmpsb
cli
lret
adc
or
pop
addr16
sub
inc
lds
mov
or
cwtl
cmp
xor
cmp
gs
fmuls
cbtw
loop
mov
push
jno
sub
mov
data16
dec
mov
mov
fdivrl
dec
xor
jae
push
xchg
sub
xchg
push
mov
aam
jmp
cmp
fistpl
lods
xor
push
or
je
jl
test
inc
xchg
loop
popa
mov
cmp
addl
xchg
rcl
imulb
xor
je
or
mov
js
decl
nop
xchg
mov
sub
and
mov
xor
mov
cmc
ja
subb
inc
add
or
sbb
test
inc
test
mov
sub
inc
mov
ret
xlat
loop
mov
movsl
sub
popa
test
inc
mov
es
mov
ret
lods
inc
cmp
xchg
mov
push
lods
test
xor
mov
inc
pop
out
push
push
inc
inc
pop
dec
aad
aam
adc
mov
adc
js
push
scas
pop
popa
notl
xchg
movsb
pop
cmp
cmp
or
or
repz
gs
cmp
lea
test
and
movsl
pop
out
push
or
lods
imul
mov
jg
scas
cmp
movsl
mov
sbb
int
ret
into
inc
lods
fsubrs
sarb
es
add
sub
xor
or
roll
push
inc
mov
test
adc
outsb
push
sub
pop
fwait
hlt
push
mov
or
aad
inc
mov
lahf
sub
add
xchg
or
push
push
sub
cli
dec
test
rclb
lcall
xor
mov
xor
cmp
xor
nop
mov
mov
sub
or
enter
jmp
jo
popa
and
mov
xchg
mov
mov
inc
and
jne
aad
in
push
orb
mov
cmpsb
mov
xchg
adc
adc
mov
mov
outsb
dec
and
pop
dec
sub
stos
arpl
push
test
xor
sub
ss
push
adcb
push
test
inc
in
gs
mov
mov
sti
xchg
cmpsb
enter
push
mov
sub
jnp
push
jb
sub
inc
dec
cmp
pop
pop
test
add
in
sub
push
push
xor
aaa
nop
jmp
xor
mov
bound
xchg
mov
pop
mov
push
pop
ror
aad
out
mov
push
mov
cmp
test
xchg
push
mov
rclb
ret
dec
jecxz
or
sbb
push
xor
adc
rclb
cmpsl
pop
mov
jmp
fdivs
and
mov
and
mov
push
inc
push
lcall
jno
sbbb
inc
dec
jp
mov
mov
push
pop
add
cmp
subb
push
xchg
stos
outsb
mov
sub
mov
xlat
sub
ja
lahf
adc
cmp
add
push
push
icebp
pushf
imul
adc
jl
pop
insl
mov
int3
jmp
xchg
pop
sub
push
out
leave
push
sub
inc
mov
xor
stos
aam
push
inc
test
hlt
add
xchg
mov
fnstcw
sub
lods
push
test
cmp
xchg
mov
imul
js
adc
add
insb
cmp
or
lods
jnp
mov
or
jb
cmp
pop
mov
sbb
call
test
push
add
push
push
push
stos
leave
mov
jmp
fnstenv
je
xchg
push
clc
sbb
mov
xor
adc
fldcw
dec
add
inc
nop
cmp
out
sub
fcmovnu
inc
push
adc
daa
je
or
adc
add
insb
fsubrl
adc
arpl
push
aas
pop
das
pop
lods
jne
sbb
mov
int3
in
cld
or
jmp
xchg
clc
cmp
and
inc
xchg
pop
in
pop
inc
outsl
iret
push
add
adc
lret
add
inc
fistps
cld
repnz
jp
arpl
adc
and
call
sub
xchg
xchg
jecxz
sbb
adc
and
out
fiadds
jns
and
push
aad
pop
rcll
out
inc
js
out
lcall
mov
insb
add
sbb
xor
movsl
fcomp
add
and
call
fwait
icebp
ja
repnz
and
inc
jl
add
mov
call
xor
into
or
std
stos
or
notl
push
ss
jnp
out
ret
or
push
out
sti
je
sbb
sub
jne
ror
xchg
cwtl
test
inc
stc
and
mov
inc
inc
dec
sub
js
dec
loope
xorb
fisttpl
movsb
sub
sbb
adcb
bound
add
push
mov
ret
cmp
ja
loopne
cmp
mov
insl
das
aas
pop
ds
sbb
roll
leave
int3
mov
add
pop
pop
rorb
or
push
imul
aam
jg
pop
js
jno
adc
add
and
data16
into
pop
ficomps
pop
sbb
lar
test
push
mov
cmpsl
or
cmovo
sbb
xor
not
cld
and
push
push
adc
add
arpl
cmp
addr16
imul
mov
notb
push
adcb
mov
add
cltd
xchg
out
dec
pusha
fs
loope
int
hlt
and
xor
add
lret
jle
stos
jecxz
jle
mov
orl
or
test
adc
adc
dec
ret
loope
add
test
add
xor
call
inc
add
and
cli
jg
gs
xor
es
cwtl
test
sbb
mov
enter
add
inc
cmp
or
add
test
icebp
pop
mov
pop
mov
cs
and
mov
xorb
or
in
add
dec
inc
daa
mov
push
and
sub
push
push
orl
push
mov
cmp
adc
adc
mov
adcb
and
inc
or
js
rcr
sub
cmp
cs
mov
push
pop
test
push
sub
push
pushf
or
or
das
pop
mov
push
dec
pop
mov
mov
push
sbb
dec
aad
enter
fimuls
mov
notl
and
data16
xchg
cmp
cmpsb
outsb
add
aad
mov
jb
rorl
shr
fs
mov
jb
sub
xor
and
push
popf
fdivs
mov
sub
xchg
inc
and
mov
mov
pop
pop
xor
pop
and
lea
push
cmp
push
and
xchg
cmp
push
sarb
lock
sub
adc
adc
ret
mov
or
mov
adcl
xchg
and
das
jmp
ljmp
pushf
inc
mov
fs
sub
push
xor
jne
push
inc
cltd
sbb
inc
aad
out
icebp
sub
clc
shll
xchg
mov
and
inc
filds
test
xor
fldcw
mov
jg
pop
fst
loopne
inc
mov
insb
inc
stos
loop
mov
xchg
inc
ret
es
sub
add
mov
pop
sbbl
jb
push
push
pop
jo
fstpt
push
mov
or
push
or
cmp
sbb
add
mov
pop
push
push
mov
jmp
test
sbb
xchg
aaa
adc
or
daa
mov
aam
in
sub
mov
xor
pusha
xor
pop
mov
loope,pn
adc
fldenv
cmp
andl
mov
test
ds
lret
mov
pop
lds
or
test
into
xchg
add
or
mov
push
stos
aad
movsl
sub
push
pop
andb
lods
bound
data16
jmp
push
imul
dec
data16
aad
adc
lret
dec
lods
push
lahf
gs
or
mov
ret
sbb
test
fcomps
push
mov
cmp
adc
push
push
add
or
inc
xchg
stos
pusha
mull
dec
xor
push
mov
push
mov
push
pop
fidivrs
outsb
and
push
xchg
or
test
xor
aad
adc
pop
mov
push
aam
push
adc
inc
adc
or
ret
lods
rcl
pop
sub
lret
jg
jb
mov
nop
lahf
clc
int3
lcall
test
sti
mov
push
adc
pushf
mov
inc
mov
test
inc
dec
add
or
mov
iret
ret
inc
addb
repnz
leave
add
push
into
push
rcll
push
fiaddl
sub
mov
popa
inc
inc
movsl
enter
sbb
loop
pop
stos
xchg
stos
xchg
xchg
aad
pop
xor
push
icebp
inc
dec
push
movsl
mov
cmp
nop
sbb
add
xor
out
pop
insl
sub
mov
push
and
jae
add
adcl
outsl
aad
es
mov
add
stos
push
push
rcrb
sbb
xorb
je
lcall
dec
sbb
lods
push
pop
push
popa
jg
pop
imul
jo
pop
and
pushf
iret
popa
xchg
sbb
icebp
negl
sub
sub
add
mov
sbb
stc
push
dec
adc
inc
xchg
xor
pop
rorb
lods
push
daa
xor
adc
test
daa
push
push
mov
or
jbe
movsl
stos
pusha
pop
push
lret
shll
push
add
push
pop
or
aad
fwait
dec
push
add
es
mov
adc
mov
lods
pop
fldt
inc
movsl
mov
push
cld
mov
jno
sbbb
dec
jmp
stos
or
addb
xchg
out
lret
mov
mov
pop
or
xchg
and
sub
fisubrl
inc
insl
cmp
push
andl
decl
xor
ljmp
sarb
sub
pop
mov
stos
shll
pop
test
adc
pop
pop
xor
pop
loopne
xchg
ret
xchg
mov
sub
popl
inc
lea
and
out
push
ljmp
xor
sub
mov
add
or
test
inc
mov
imul
or
sbb
les
xchg
andb
inc
cltd
repz
push
popa
popl
inc
push
mov
push
pop
outsb
push
mov
xor
or
fwait
pop
mov
push
rcr
fwait
mov
push
xchg
stos
je
loop
and
inc
and
jae
push
sub
xchg
mov
add
ret
mov
into
mov
mov
jae
addl
imul
mov
dec
mov
mov
ror
sub
jge
push
mov
sub
fmuls
jae
aam
stos
or
mov
sub
lods
lock
sbb
xor
xchg
lock
mov
mov
mov
sub
aam
sub
into
push
xlat
xor
inc
or
add
xlat
push
mov
mov
jb
inc
sbb
push
mov
inc
adc
mov
cmp
dec
or
movsl
ficompl
mov
jmp
insl
or
cmp
bound
pop
pushl
pop
andb
sbb
repnz
imulb
out
es
xchg
or
dec
icebp
add
ret
sub
adc
and
into
cmp
test
cwtl
push
cmpsb
push
shrb
addb
dec
mov
xor
sbb
add
cmpsb
cmp
ret
movsl
loopne
push
aad
and
pop
hlt
sub
pop
cli
xchg
pop
mov
mov
cltd
add
dec
rcll
inc
push
pop
adcb
inc
dec
jno
scas
add
push
inc
adc
push
lods
and
inc
xchg
add
inc
imul
mov
mov
push
aad
cld
or
jae
subl
stos
and
rep
xchg
das
sub
mov
sbb
or
data16
ja
mov
sbb
nop
dec
sbb
adc
scas
lret
dec
aam
or
cmp
jp
aam
push
mov
sbb
nop
repz
mov
adc
push
sub
hlt
add
push
imul
sub
xchg
push
and
mov
cmpsb
dec
sbb
pop
test
cmp
sbb
adc
mov
xor
xor
test
pushaw
jae
repz
sarb
inc
push
ljmp
popa
ret
push
mov
loop
fcompl
inc
adc
inc
or
cmp
insl
mov
bound
sbb
adc
xor
push
inc
std
push
insb
pop
sub
fimull
mov
push
movsl
jp
mov
push
vpackssdw
xchg
dec
sub
popa
push
pop
imul
jo
push
cmp
xchg
mov
cmp
inc
dec
aaa
mov
scas
push
lcall
stos
shrb
iret
stos
xor
adc
movsb
xlat
xor
and
imul
lret
inc
test
mov
imul
inc
cmp
insb
adc
outsb
mov
mov
testl
pop
loop
ss
push
sub
push
pop
lcall
lcall
inc
rorl
pop
aad
mov
add
adc
add
leave
xor
inc
daa
sub
bound
testl
and
das
ret
stos
mov
xchg
loopne
rolb
dec
test
mov
sub
aad
push
push
xchg
xchg
jmp
sarb
xchg
cmpsl
lods
and
js
sub
add
jl
mov
into
push
sbb
cmc
mov
sub
mov
test
lock
jmp
cwtl
push
mov
mov
mov
push
test
inc
dec
inc
lods
cmp
not
xor
out
insl
and
or
jno
mov
mov
lods
jo
inc
jg
jp
dec
inc
add
lds
dec
and
imul
sub
xchg
sub
sub
add
gs
aaa
and
mov
inc
lods
push
add
movsl
push
push
push
pop
xchg
and
jg
jo
mov
fisttpll
push
adc
bound
or
sbb
pop
lock
xor
inc
inc
roll
jb
fsubr
dec
shr
bound
inc
inc
subb
pop
jo
or
sbb
sbb
add
stos
lock
pop
mov
xchg
fistpl
fcoms
add
dec
repnz
xchg
fmuls
addb
lock
cli
mov
mov
and
in
data16
and
repz
or
or
push
fisttps
movups
dec
adc
cmp
mov
or
ficompl
mov
dec
or
aad
push
mov
out
inc
cmp
add
ss
adc
or
inc
hlt
or
ljmp
fldenv
in
push
mov
inc
orl
xor
jnp
inc
dec
mov
lret
or
cmp
pop
xor
rclb
jg
shl
fsqrt
ss
mov
iret
mov
jg
dec
loopne
and
je
mov
into
fmuls
sbb
add
clc
inc
ret
inc
adc
leave
test
push
xchg
daa
mov
add
loope
in
sbb
aas
in
or
inc
js
pop
inc
add
or
stos
push
fwait
mov
or
pusha
sub
dec
adc
stos
js
rcrl
enter
pop
mov
push
mov
lock
sbb
pusha
add
push
sbb
jl
adc
sahf
fistl
adc
sbb
cmp
clc
fisubrs
ljmp
daa
and
testb
cli
dec
add
jmp
add
xor
sub
mov
enter
xor
jo
scas
sub
dec
xor
jne
stc
lcall
push
jecxz
push
loope
mov
daa
enter
fldenv
shlb
mov
mov
xor
enter
pop
bound
lds
inc
sbb
pop
and
dec
lock
inc
lock
inc
clc
jle
adc
add
loop
clc
or
mov
cmp
pop
mov
lcall
rcrl
xorl
adc
les
out
cmp
adc
int3
jecxz
mov
and
rorb
inc
and
cmpsb
dec
aas
push
pop
xchg
test
or
out
out
out
inc
adc
stos
aad
adc
ret
int
mov
push
mov
es
xchg
sbb
inc
icebp
and
inc
lods
xor
mov
push
aam
pop
cltd
push
xchg
or
xchg
subl
mov
mov
gs
sbb
mov
xchg
into
xor
dec
xchg
add
inc
mov
sub
rcr
mov
adc
lock
mov
mov
add
inc
mov
and
pop
jno
data16
dec
adc
sub
lcall
test
push
sbbb
push
outsb
xchg
inc
inc
loopne
sbb
push
aad
stos
push
lds
cmp
lods
gs
adc
add
add
fsubs
dec
xchg
mov
or
ds
mov
ljmp
mov
lods
xor
movsb
shrl
adc
lods
inc
push
push
pop
mov
dec
rolb
mov
aad
inc
xchg
push
popa
mov
sub
mov
sub
mov
xor
pop
aaa
mov
cmp
inc
add
sub
push
int
jae
fsubrs
inc
mov
sbb
and
and
dec
xchg
lea
mov
maxps
rcll
and
push
and
mov
xchg
push
imul
mov
shrb
add
adc
popa
test
push
cli
imul
mov
mov
add
push
or
jne
adc
xchg
inc
mov
xor
inc
cmpsl
loop
in
mov
push
sbb
inc
jo
invd
pop
add
jnp
push
call
add
das
add
adc
mov
aam
add
push
dec
adc
jle
incl
mov
pop
orb
fnstcw
rcll
fimuls
push
inc
push
outsb
add
add
mov
xchg
and
data16
jae
lea
xchg
or
adc
les
pop
mov
adc
ret
sahf
popl
sub
inc
add
nop
jns
imul
pop
cmpl
sub
push
mov
dec
push
jnp
add
sbb
movsl
xor
pop
push
xchg
stos
fists
jno
and
inc
imul
sbb
jno
sbb
cmp
push
or
pusha
sub
inc
aam
or
inc
mov
fimull
inc
mov
sub
pop
mov
subb
inc
mov
not
push
xorl
sbb
push
rcll
inc
mov
mov
or
adcb
inc
js
mov
sbb
mov
cmpsb
add
add
es
mov
aas
mov
mov
sbb
iret
mov
sbb
lods
sub
out
adc
pop
mov
inc
xchg
ret
rolb
mov
push
ss
stc
sub
lcall
mov
or
sbb
xor
adc
inc
adc
lahf
cmp
mov
push
pop
sbb
repz
push
xchg
xchg
loop
das
icebp
mov
sbb
add
enter
push
mov
mov
sub
jns
call
and
stos
jno
cmp
stos
out
pop
call
or
cli
jmp
mov
dec
cmp
test
sbb
and
andb
mov
mov
lods
xchg
incb
cmpsl
lock
nop
mov
repnz
test
push
sub
dec
push
sub
sub
jno
scas
push
sbbb
jnp
add
in
mov
push
xor
ret
and
cmp
dec
stc
cmp
xchg
pop
mov
cmp
jbe
push
gs
imul
sub
data16
mov
push
add
stc
or
add
sbbl
dec
push
imul
add
test
mov
mov
xchg
inc
add
inc
sbb
pop
sbbl
imul
push
insl
and
mov
int3
push
mov
fadds
sbb
fcmovbe
aam
mov
xor
jne
mov
rolb
sbb
pop
and
movsl
mov
push
lods
incb
inc
mov
push
pop
push
aad
push
and
push
lcall
inc
cmp
gs
xor
push
mov
pop
mov
mov
add
test
or
enter
mov
jbe
push
push
fstpt
sub
mov
add
mov
push
add
lods
push
ljmp
adc
mov
xchg
push
ficompl
adc
or
call
sbb
or
pop
xor
mov
testb
imul
sbbb
mov
fisubrl
pop
push
rcll
mov
dec
movsb
mov
inc
inc
inc
xor
push
sbbb
inc
rcl
and
mov
adc
cltd
mov
inc
dec
and
push
movb
fmuls
mov
into
push
push
dec
aad
add
mov
inc
jecxz
outsb
push
jg
test
rclb
dec
xor
mov
mov
push
ret
xchg
das
sqrtps
lcall
and
rcr
lods
sub
mov
pop
mov
pop
sub
adc
or
xchg
add
hlt
fnstenv
sub
movsl
xchg
clc
inc
push
test
aad
inc
daa
pop
push
push
orl
out
adcl
mov
cmp
mov
push
xorl
movsl
stos
push
inc
and
cmp
jb
xor
outsb
loope
mov
lret
cmc
push
push
adc
or
sub
adc
loope
popf
das
sub
or
fdiv
push
and
push
or
imul
xchg
lods
xchg
or
push
mov
lea
push
aaa
mov
push
pop
and
cmp
or
add
sub
adc
inc
fisubl
test
mov
or
lods
push
cmpb
and
dec
lea
aas
push
push
loopne
dec
cmp
jmp
or
jbe
push
pop
mov
dec
adc
subl
push
adc
jge
je
mov
js
push
rolb
mov
dec
inc
adc
stos
inc
aam
mul
mov
sbbl
add
and
dec
les
popf
cmpsl
cmpsl
mov
mov
push
push
mov
inc
push
addr16
xlat
rol
rorb
inc
add
ret
inc
incb
movsb
cmp
mov
adc
out
dec
inc
push
mov
jmp
shlb
or
dec
aam
loopne
pop
adc
xchg
xchg
fildll
ljmp
pop
xchg
clc
adc
adc
ret
pop
dec
les
add
add
mov
roll
jecxz
and
rclb
xchg
lock
loopne
jnp
add
mov
pop
add
adcl
lock
add
adc
add
mov
pop
nop
mov
addr16
pop
adc
ret
cmp
mov
mov
clc
dec
inc
push
test
pop
push
hlt
aam
clc
inc
fcomi
push
mov
in
xor
adc
and
lods
test
jl
jge
mov
lret
insl
pop
mov
push
and
pop
addr16
cmp
push
cwtl
aad
es
push
add
comiss
xor
call
add
jae
shll
lock
push
dec
mov
or
xchg
mov
pop
les
xor
add
inc
push
sub
or
inc
fsubrl
or
inc
int
sbb
push
dec
mov
mov
lds
lods
push
add
xor
stos
xchg
and
shll
pop
imul
adc
dec
aaa
and
and
outsb
stos
adc
dec
imul
xor
or
push
rorl
push
outsl
bound
loop
ds
cmpsl
and
sub
negl
and
mov
jecxz
inc
inc
roll
push
xor
cmp
sub
insl
leave
lea
mov
inc
mov
dec
stc
lods
jns
lea
leave
aaa
test
stos
pop
and
mov
xchg
imul
push
mov
sub
push
je
sub
push
in
je
xor
scas
mov
mov
inc
adc
ljmp
lcall
and
add
add
fists
test
fdivrl
das
inc
sbb
mov
push
cltd
test
push
xchg
lret
dec
inc
les
and
cmc
fwait
js
stos
inc
mov
push
mov
xchg
mov
mov
addl
test
sub
orl
sbb
pop
inc
and
pop
xchg
movsl
sbb
test
sub
pop
mov
push
push
add
and
dec
or
mov
cmp
mov
or
movl
stos
in
std
inc
shll
daa
and
add
push
jae
jg
insl
arpl
and
jne
mov
or
jne
push
inc
mov
inc
push
add
cmc
test
cld
adc
pushf
pop
cld
jp
or
or
cmp
mov
add
gs
xchg
ret
pusha
jne
inc
or
jne
or
jo
xchg
pusha
ffree
adc
push
pop
int
mov
adc
outsb
add
or
flds
inc
into
adc
inc
cwtl
push
push
mov
out
lock
lret
jle
pop
and
fcoml
imulb
pop
pop
sub
js
testb
add
xor
inc
and
lock
jmp
fidivrl
mov
and
and
mov
test
je
addb
jb
mov
adc
ret
add
and
loope
pop
push
jbe
in
data16
sub
or
aam
and
jo
mov
lods
cs
push
pusha
shl
inc
cwtl
push
inc
gs
mov
mov
cli
rol
or
int
or
dec
push
mov
adc
push
mov
popf
adc
sub
test
in
fnstcw
shll
sti
xchg
mov
in
and
mov
push
ja
xchg
loope
mov
in
test
push
mov
jne
mov
rol
divps
push
mov
mov
or
push
add
fwait
adc
fnstcw
inc
xor
inc
sbb
cmp
add
and
lock
add
add
sbb
mov
inc
jmp
dec
bound
loop
repz
xor
call
adc
loopne
xor
push
dec
dec
ds
xor
sub
inc
aas
jne
mov
imul
mov
clc
gs
sbb
add
repnz
inc
imul
inc
mov
dec
cld
or
jbe
add
mul
sti
arpl
mov
jp
rolb
mov
or
xor
cmpsb
cmp
scas
int3
pop
xchg
adc
dec
fstl
push
adc
mov
push
rolb
and
clc
pusha
dec
clc
daa
loope
fwait
xlat
or
inc
adc
mov
mov
icebp
cmp
test
test
add
pop
push
ret
adc
fnsave
inc
lds
aad
ret
xchg
lcall
call
pushf
or
jg
loop
rolb
add
inc
in
lock
mov
lretw
sub
fisttpl
pop
repnz
xor
pop
fsubrp
call
pop
pop
lods
addr16
xor
sub
leave
les
mov
mov
js
cmp
jmp
add
sub
pusha
xorb
gs
and
stos
mov
fldt
fwait
or
loopne
dec
clc
add
inc
push
or
xorb
pop
push
dec
sub
loope,pn
or
push
mov
ret
mov
aam
push
ljmp
dec
std
pop
test
adc
les
or
cmpsl
xchg
loop
dec
fstl
and
fldenv
xchg
jo
push
mov
add
xchg
lret
push
add
sub
sub
and
shlb
jne
ret
imul
call
fildl
mov
test
shll
mov
hlt
push
sbb
mov
lret
push
call
lcall
aaa
test
mov
adc
loop
popl
xchg
ret
inc
mov
mov
or
fldenv
decb
or
aad
jecxz
mov
sbb
stc
divl
setle
les
clc
sbb
xor
icebp
push
cmp
stos
xchg
enter
mov
xor
xchg
mov
test
stc
shrb
in
loop
inc
nop
jmp
cwtl
faddl
jb
add
add
fucom
or
or
fwait
pop
mov
jae
add
xchg
rorl
cmp
lds
push
mov
mov
in
out
orb
push
pop
mov
pop
add
inc
inc
stos
stos
call
or
andb
adc
lret
mov
movsl
dec
inc
xchg
or
and
add
test
xor
mov
rcrb
and
call
jno
add
jb
inc
sub
aad
inc
movsl
pop
pop
sbb
sbb
sub
dec
movsl
xchg
lret
aam
push
test
aad
xorb
sub
and
mov
cmp
cmp
mov
push
add
sub
in
pop
add
push
push
mov
fsubrl
add
bound
roll
inc
test
push
and
and
loop
addb
mov
add
js
sub
sbb
sub
or
scas
jo
adc
repz
add
sahf
cwtl
test
rclb
inc
outsb
push
test
adc
popl
test
mov
rolb
aam
and
in
or
pop
xchg
out
loop
or
jno
loop
ss
inc
adc
sbb
adc
imul
loop
pop
mov
test
sub
cmc
or
xlat
inc
adc
gs
mov
push
mov
mov
jae
enter
testl
mov
arpl
jno
or
mov
mov
push
cmp
adc
ja
xor
sub
xchg
push
outsb
mov
push
cmpsb
testl
pop
cltd
pop
sub
push
xor
adc
adc
insb
test
movsl
dec
jmp
dec
js
sub
mov
mov
sti
xlat
inc
icebp
push
mov
sub
ja
cmp
mov
mov
fstpt
test
leave
xchg
loop
xchg
test
lret
aaa
adc
jo
inc
out
xor
inc
push
stos
sub
push
sbb
dec
es
andb
cmpb
cmp
xor
mov
push
and
push
loopne
or
inc
push
mov
adc
mov
dec
push
sub
and
xchg
stos
aam
inc
rorl
and
fst
and
test
pop
das
mov
adcb
ss
inc
inc
mov
adc
mov
adc
and
lods
push
adc
pop
rcl
outsb
mov
push
push
adc
add
movsb
push
orb
xlat
jg
bound
lcall
shrb
test
mov
lret
fisubl
inc
movsb
movsl
add
adc
test
out
iretw
add
push
pop
push
and
jne
inc
or
pop
test
and
mov
sbb
dec
es
cwtl
mov
pop
sbb
imulb
mov
add
lea
push
sbb
out
movsl
rorb
push
and
or
mov
fldl
mov
xor
sub
idivl
push
testb
or
aaa
mov
aaa
aaa
scas
jle
stos
inc
or
xor
out
mov
aad
and
pop
fucomi
loop
mov
rcl
fcmovnu
outsb
xor
test
push
cmp
sbb
int3
lahf
inc
pop
jns
cmp
cmp
insl
cwtl
mov
push
mov
cld
sbb
shr
outsb
cmpsl
into
mov
lods
add
add
cmp
xchg
cmc
lea
push
xor
mov
sahf
cs
imul
mov
lret
shll
push
into
push
push
inc
dec
rcrl
push
inc
stos
mov
sbb
rolb
or
orb
cmc
divb
subl
lea
sub
jns
push
push
mov
xor
and
xor
xlat
inc
mov
inc
test
fld
or
jmp
pop
lods
aad
add
js
inc
pop
stos
push
aam
ss
stos
push
mov
aam
mov
push
or
xor
inc
mov
mov
cwtl
out
and
inc
rcr
push
fld1
jle
mov
xor
pop
ret
in
jb
lods
js
push
push
add
ljmpw
nop
divl
inc
leave
inc
test
aad
push
dec
xchg
push
rclb
push
mov
movsl
pop
mov
push
cwtl
mov
lcall
push
xchg
mov
xchg
add
cmp
test
pop
mov
cwtl
subb
push
mov
aam
push
fbld
icebp
lods
sub
out
push
push
pop
inc
dec
push
mov
push
cmp
add
jns
pop
inc
mov
nop
lea
cwtl
xorb
mov
test
pop
mov
aam
sub
fistpll
sti
mov
icebp
mov
inc
push
pop
inc
xchg
fisubl
jnp
jp
push
notb
imul
and
and
insb
sub
mov
lret
push
xor
lcall
and
pushf
fcomps
mov
outsb
pop
imul
adc
inc
or
jb
js
test
inc
push
mov
add
mov
pop
push
stos
sub
xor
insl
pop
push
shrb
gs
mov
aad
adc
insl
mov
lods
shrl
xor
test
outsb
jnp
insl
mov
inc
sbb
inc
pop
mov
fwait
cmp
adc
and
or
rcll
sbb
sub
mov
mov
inc
ret
lods
mov
fninit
mul
pop
jecxz
mov
lea
add
pop
inc
push
mov
or
cld
mov
test
or
rolb
aad
mov
add
mov
test
xchg
jl
pop
subl
cmp
mov
inc
mov
adc
rcl
xor
sarb
movsl
jno
out
sbb
dec
sbb
movsl
or
or
jmp
jmp
fildl
lods
push
pop
std
push
cs
push
sbb
and
sbb
adc
push
inc
fidivrs
adc
imul
push
das
add
cwtl
es
lea
mov
xor
jne
mov
imul
push
in
pop
mov
pop
sbb
and
xor
call
aaa
or
mov
sub
push
mov
testb
mov
pop
pushf
sub
daa
sub
test
shlb
dec
and
loop
mov
stos
repnz
test
sub
mov
add
dec
aad
mull
roll
adc
fs
xor
sahf
mov
daa
inc
xor
cmp
dec
sub
mov
es
jg
stc
ljmp
xchg
add
inc
cmp
das
test
jno
mov
bound
cltd
stos
mulb
add
inc
or
fwait
pop
add
xchg
jb
lods
call
aam
and
sahf
or
sub
fmuls
aas
into
lcall
mov
in
or
nop
xchg
stos
mov
push
in
push
out
xor
fiadds
in
test
int
push
mov
or
jne
jmp
mov
mov
mov
and
xchg
add
fsubs
jge
shll
fmull
shrb
mov
das
rorl
mov
adc
call
mov
fdivr
test
and
cwtl
pusha
in
pop
inc
pop
or
mov
and
cmp
adc
mov
cwtl
mov
push
jo
xor
and
cmp
and
push
cmpsl
insl
sti
pop
adc
popf
mov
out
fisubs
call
xchg
push
add
mov
push
pop
mov
pusha
xor
mov
cmpl
nop
mov
outsb
cmp
pop
pusha
out
or
rcr
inc
sub
push
xchg
cwtl
sbb
lock
scas
adc
pop
fld1
into
dec
mov
add
pusha
adc
mov
movb
pop
sbb
sub
pop
cli
mov
jge
mov
fwait
mov
push
xor
rolb
test
ret
xor
dec
jb
push
dec
inc
xor
add
addb
movsl
daa
or
aam
rolb
test
call
stos
pop
or
out
and
add
mov
cli
jle
add
mov
sbb
sub
push
adc
stos
aaa
adc
add
sub
or
lahf
in
add
shrb
sbb
inc
shll
add
adc
and
sub
mov
stos
mov
sub
adcl
push
mov
or
xchg
lcall
aaa
ljmp
sbb
pop
or
es
push
repnz
mov
push
add
adc
stos
inc
or
sbb
inc
pop
stc
addb
xor
and
test
pop
adcl
aad
xor
push
sbb
sub
sbb
push
push
adc
sbb
test
sbb
mov
mov
jne
rclb
cmp
pop
or
or
or
xchg
cs
shlb
jae
mov
test
adc
push
testl
call
mov
add
movsl
dec
inc
imul
mov
inc
aam
test
pusha
hlt
push
sub
pop
enter
xor
and
es
stos
sub
je
mov
or
mov
sub
mov
xor
push
mov
sub
or
jno
inc
imul
add
int3
add
sub
dec
mov
mov
inc
xor
data16
mov
and
cmpl
push
mov
stos
test
cmp
cmp
xor
add
mov
push
pusha
pop
dec
inc
mov
push
sbb
negl
mov
sbb
cmc
jp
lret
mov
cmc
sub
xchg
repz
inc
test
stos
and
inc
mov
jp
jp
mov
incb
push
mov
inc
sub
clc
cmp
add
int
adc
les
and
js
adcl
pop
std
dec
add
pop
cld
fists
add
jle
adc
aam
cmp
popa
outsb
sub
in
adc
inc
mov
andl
or
push
push
dec
inc
es
incl
push
xchg
mov
or
jne
or
mov
test
je
fisttps
mov
sbb
xchg
ficoml
shlb
pop
mov
pop
lret
in
push
je
or
xchg
mov
cmp
nop
mov
mov
cld
sbb
xchg
lahf
mov
das
mov
sub
outsb
lock
fildl
adc
sbb
imul
jae
ror
sub
pop
pop
inc
insl
gs
xorl
insl
jecxz
mov
mov
into
sahf
xor
and
push
lods
adc
add
xchg
jg
sbb
or
mov
pop
inc
xchg
or
lods
xchg
imul
mov
pop
push
jmp
xchg
data16
push
sub
pop
or
xchg
and
xor
push
dec
inc
add
roll
rcr
mov
mov
inc
mov
dec
das
std
and
inc
imul
or
adc
add
or
mov
mov
sbb
repz
xchg
imul
pop
sub
hlt
or
add
insl
inc
inc
retw
sbb
mov
pop
mov
sub
es
mov
adc
jno
ljmp
aad
loop
sub
mov
push
test
and
adcb
xchg
test
cmpsb
push
sub
push
test
push
and
mov
ret
push
xchg
inc
data16
inc
rcl
or
into
add
stos
out
add
inc
mov
sbb
out
stos
push
mov
in
push
inc
sub
mov
jl
sub
shll
pushf
stc
jg
xchg
shlb
mov
gs
dec
or
adc
dec
or
fdivs
pop
std
xchg
pop
fsubl
sbb
xor
xor
addb
rcrb
push
sub
inc
cltd
sub
pop
pop
test
fwait
push
cmp
mov
or
gs
jno
xor
ss
fsubr
ret
cli
inc
shrb
mov
fdivl
aam
adc
push
pop
scas
das
data16
imul
clc
xchg
das
fwait
mov
lea
lods
push
and
mov
aad
or
outsb
notl
lods
stos
pop
pop
jne
out
and
xchg
push
cmp
lret
xchg
lret
mov
inc
das
outsl
pop
pop
xorb
and
dec
add
lahf
push
pusha
push
loop
fs
movsl
mov
leave
dec
adc
addb
subb
pop
sbb
push
imul
cmc
std
ds
stos
mov
iret
daa
add
cli
mov
es
pop
xchg
outsl
pop
inc
mov
push
cmpsb
xchg
aas
sbb
loopne
fimull
push
fmull
push
add
sbbb
sub
outsb
lods
mov
data16
mov
push
ret
push
mov
xchg
rorb
push
stos
xor
cmp
sub
sti
or
or
test
push
aad
roll
mov
insb
lods
dec
in
cltd
stos
aam
dec
push
out
sbb
es
je
inc
js
pop
xor
leave
popa
sub
stos
lods
pop
orb
add
insl
adc
xchg
inc
loop
aad
or
mov
aaa
lds
int3
into
xor
mov
es
imul
lcall
std
xchg
inc
sub
insl
push
je
and
dec
pop
scas
pop
inc
inc
cmp
in
pop
cmpsl
ret
xlat
sahf
push
push
and
pusha
dec
adc
aad
and
mov
xchg
mov
imul
lea
pop
and
sbb
pop
imul
or
test
leave
mov
filds
push
addl
mov
or
mov
insl
rcl
jge
cmp
mov
movsl
enter
aas
mov
lods
adc
fisubrl
insl
add
std
dec
adc
inc
cmp
fsubs
pop
fistpll
imul
dec
mov
cmp
xor
mov
push
mov
lods
adc
gs
incl
filds
loopne
pop
dec
inc
pop
ja
add
ret
mov
in
push
aad
sbb
lods
xor
loop
jns
push
xchg
mov
sub
xor
adc
push
rep
cmp
sub
add
clc
inc
push
mov
adc
mov
loopne
xlat
mov
push
sbbb
adc
mov
or
mov
popf
pop
push
dec
inc
cmpsb
test
cltd
xor
js
xchg
add
fwait
gs
into
adc
inc
imul
mov
pop
inc
out
scas
lea
jo
loop
inc
movsl
xchg
rorb
xchg
mov
add
mov
pop
mov
sub
cmp
sbb
loopne
fwait
daa
jnp
fs
xor
cwtl
loop
lret
push
sbb
es
lret
mov
pushf
shrl
test
adc
xor
mov
inc
into
and
icebp
push
inc
stos
push
xor
loop
inc
mov
mov
xchg
and
pop
or
and
or
adc
add
pop
mov
jno
cmp
push
add
xchg
push
stos
jo
push
test
mov
rorl
movsl
sahf
aaa
sarl
outsb
lea
xchg
stos
mov
sub
out
rcrb
mov
inc
mov
popf
add
add
mov
jmp
divl
addl
mov
mov
into
jecxz
push
pop
mov
ss
push
inc
and
sbb
mov
push
imul
jl
sti
call
pop
mov
xor
cmp
add
mov
sub
sub
jo
in
fldcw
cmp
sbb
push
inc
int3
inc
cltd
and
adc
inc
popa
xor
test
push
inc
aaa
repz
rcl
dec
repnz
je
push
mov
fisubrl
pop
and
mov
cmp
push
adc
lods
test
rorb
lods
stos
aam
xchg
cmp
dec
daa
and
in
or
or
cmp
clc
mov
push
mov
loop
xor
ss
mov
or
inc
push
les
mov
mov
or
cmpsb
sub
mov
in
cli
lods
xchg
ficoml
rcrb
test
push
rorl
inc
stos
mov
ficoml
pop
sub
cmp
mov
mov
add
add
mov
push
xor
push
push
cmc
inc
imul
lds
pop
clc
jmp
loopne
ret
inc
rcll
test
mov
shlb
pop
es
inc
adc
and
push
inc
or
pop
lock
popa
push
jne
cmp
pop
lods
and
data16
push
cmp
bound
dec
add
dec
or
push
aad
mov
push
subl
aam
xchg
mov
lret
test
movsb
xor
orl
xchg
fs
cmpsb
cs
adc
sub
sub
fistps
fcoml
aad
cmp
dec
mov
cwtl
stos
stos
loope
pusha
push
addr16
lods
mov
insl
fnsave
shlb
push
test
sbb
call
cmc
jb
push
xor
ljmp
adc
test
dec
adc
inc
mov
or
mov
imul
mov
es
add
and
add
mov
push
into
xchg
rcll
subb
push
jo
push
xchg
xor
aad
inc
add
push
aam
and
sub
movsl
inc
stos
push
mov
jne
hlt
insl
mov
add
adc
cmc
je
add
xlat
push
ja
out
test
call
mov
pop
cmp
pop
push
xor
into
sbb
adc
xchg
dec
jno
aam
inc
mov
xchg
mov
mov
in
push
add
add
test
xchg
test
pusha
push
popa
xor
mov
mov
sbb
mov
sub
mov
xchg
stos
adc
test
push
push
xorb
imul
sbb
xorb
mov
mov
cmp
sub
aas
mov
push
or
push
fiadds
jae
push
jo
scas
inc
popf
sub
pop
pop
pop
loopne
push
lret
push
test
pop
arpl
inc
xor
dec
push
push
std
jmp
sbb
call
xchg
dec
fsubs
or
cmp
push
insl
lock
inc
add
cld
pop
or
jl
lds
fdivrs
pop
or
xchg
js
not
add
dec
insl
movsl
cwtl
or
sbb
loop
in
fxch
mov
pusha
je
push
lahf
push
mov
mov
add
mov
shll
imulb
mov
mov
jnp
test
fsts
movsl
inc
mov
mov
test
jp
inc
aam
sub
fiaddl
push
gs
or
inc
jo
stos
inc
subb
adc
sbbb
or
ss
dec
outsb
int
xchg
dec
and
sub
test
pop
pop
push
fisttpl
rcll
xor
and
push
pop
imul
cmp
jecxz
jno
sbb
xchg
adcb
out
inc
mov
testl
ret
push
add
insl
and
pop
pop
xor
cmp
pop
sub
jecxz
movsl
dec
rcrb
mov
pop
test
es
imul
or
sbb
push
loopne
pop
lret
push
push
pop
jmp
push
mov
lods
push
sbb
or
sub
jp
pop
push
or
pop
push
push
adcl
int3
jno
adc
or
xchg
sbb
sbb
loop
mov
jo
push
icebp
jecxz
push
mov
push
push
lret
cmpsl
imul
rcll
mov
inc
aad
int
cmc
push
inc
movsl
aad
xchg
popa
leave
rorl
mov
sub
push
mov
jns
push
stos
push
insl
incl
mov
push
arpl
sub
push
adc
push
push
addb
pop
push
xchg
dec
lods
add
rorb
gs
sbb
jb
mov
loop
sbb
ss
jmp
adc
movsl
push
bound
ljmp
jge
mov
inc
fidivl
adc
cmp
and
add
sbb
lods
sbbl
ret
pusha
iret
fidivrl
cwtl
and
mov
or
mov
pop
xchg
adc
rcl
inc
loope
pushf
int3
sub
lods
mov
mov
es
cmp
mov
sbbl
xor
push
mov
push
mov
pop
push
adc
aam
cmpsb
fdivl
mov
data16
imul
rcll
dec
or
push
add
lret
push
cmp
out
ljmp
mov
mov
and
sub
inc
lods
rolb
mov
out
and
push
sarl
xchg
mov
sbb
aad
push
sub
mov
xchg
adc
jne
xchg
movsl
mov
ret
pop
js
aam
rolb
movsl
in
dec
push
test
fdivr
or
add
sbb
push
lea
imul
cmp
incb
dec
insl
imul
sbb
or
pop
andb
jae
sub
push
inc
addl
cli
fbld
enter
es
outsb
pop
mov
scas
js
inc
aam
xor
xchg
xchg
xchg
cmp
loope
cli
cltd
notl
imul
inc
and
test
das
pop
fistpl
out
popw
inc
lods
lods
mov
cli
ljmp
jae
addr16
fs
push
pop
add
push
xor
lret
push
xor
pop
push
add
adc
mov
xor
inc
mov
push
and
test
test
xchg
lret
jl
mov
pop
leave
push
aad
inc
mov
jbe
lret
inc
aad
xor
int3
sbb
addb
imul
add
lcall
popa
sbb
inc
stos
push
adc
push
sbbb
xchg
stos
jne
aad
in
data16
mov
mov
push
subb
lds
popa
sub
jb
das
lcall
pop
movsl
out
mov
aad
or
in
or
aam
pop
xor
rcl
sbb
push
pop
inc
dec
es
push
imul
push
sub
sub
or
add
fdivs
je
push
aad
adc
adc
mov
fmulp
jecxz
push
push
loope
ret
lea
insb
dec
cmc
mov
inc
fstpl
subb
fcmovu
shll
xchg
push
push
push
out
inc
sub
mov
test
cli
cli
subb
inc
lret
add
mov
push
out
sub
mov
popa
push
adc
push
mov
add
push
pop
test
and
addr16
push
sub
adc
or
sbb
int
shrb
into
inc
std
int
inc
lods
loopne
mov
fcomip
inc
sar
adc
dec
neg
popf
repnz
outsl
xor
pop
js
not
inc
sbb
mov
lods
hlt
lcall
dec
insb
lret
jmp
add
ds
aad
ljmp
lea
push
roll
es
outsb
loop
ret
fstpt
inc
sub
dec
jge
push
fs
gs
xor
push
repnz
cmp
add
iret
sub
xchg
movsb
jb
inc
adc
and
call
imul
imul
or
pop
imul
add
or
mov
mov
sti
popa
lret
inc
imul
out
loop
mov
add
pop
mov
add
cmp
and
pusha
dec
sub
dec
jo
adc
jnp
jae
aam
xchg
stos
mov
sbb
adc
andl
lock
stos
into
icebp
and
push
or
dec
or
adc
and
jno
sbb
cltd
cmp
and
js
inc
arpl
pop
cmp
cmp
ss
fmuls
push
mov
sahf
and
or
movl
aaa
cmpsb
and
out
sub
xchg
and
mull
xor
lods
push
fmuls
scas
xchg
sub
inc
jl
cmpsl
mov
add
loop
xchg
lea
das
out
cwtd
pop
js
sub
pop
cmp
test
inc
imul
popa
push
and
adcb
aaa
or
das
inc
cld
mov
in
cmc
clc
iret
and
xchg
sar
push
inc
add
filds
jmp
add
dec
neg
dec
das
sbb
jge
mov
data16
jmp
test
mov
adc
pop
push
stos
inc
mov
sub
or
int3
pop
pusha
inc
pop
jne
stos
xchg
cwtl
push
add
test
or
cmc
ljmp
xchg
xor
lcall
inc
jle
mov
add
cltd
or
inc
adc
cmpsl
mov
imul
push
movsl
cmp
aam
or
xchg
pusha
and
js
addb
add
inc
lods
andb
jo
je
adc
cmpsb
push
in
jns
stos
or
stos
rolb
cmpsl
jg
cwtl
inc
adc
int
pop
add
add
addb
jp
rolb
sbb
push
add
adc
sub
push
aaa
mov
ja
in
mov
push
mov
jle
shlb
lret
cmpsb
sbb
aaa
pop
int3
test
or
movb
jmp
xchg
test
push
jo
lret
push
ret
fwait
add
int
mov
sub
xchg
add
sbb
xor
dec
inc
shrb
fistps
or
and
adc
adc
push
sub
pop
sahf
ror
aam
aam
adc
jg
pop
jae
inc
sahf
cmpsl
ja
push
mov
ja
es
and
sub
lods
and
mov
cmc
fildll
outsl
dec
mov
xor
std
inc
and
sahf
nop
or
aaa
and
sub
pop
mov
dec
xorb
fcmovbe
leave
cmp
stos
inc
dec
sbb
add
ljmp
rcl
mov
sub
ficoms
mov
jmp
sbb
mov
nop
and
sti
jg
pop
lret
inc
mov
mov
sub
xor
xor
xor
dec
or
fiaddl
aad
imul
jae
pop
cmp
scas
xor
push
insl
lods
fadds
pop
lret
pop
mov
xchg
and
mov
stos
aam
stos
pop
jb
popa
lret
aam
push
push
das
and
cmp
insb
or
inc
mov
sub
xchg
and
and
imul
cmp
adc
test
jmp
and
pop
dec
inc
sbb
movsl
jnp
data16
mov
push
mov
inc
pop
lret
out
adc
mov
imul
and
sar
cli
add
push
adc
mov
push
push
lods
pop
push
sub
ret
add
or
notb
push
enter
cmp
sub
inc
movsl
out
cmp
sub
cmp
inc
sub
and
add
cli
jno
mov
cmc
xchg
and
test
insl
stos
es
push
xor
push
mov
xorb
mov
mov
inc
mov
jg
push
les
add
inc
mov
push
sarb
lahf
jne
lods
mov
movsb
bound
mov
lret
lock
int3
popa
inc
cld
sbb
sarb
dec
imul
insb
aas
mov
sub
lods
xchg
daa
sub
or
mov
add
je
scas
jb
mov
mov
movsl
int3
addb
sbb
lcall
outsb
inc
mov
ret
add
xor
pop
fs
adc
call
add
lock
inc
cmp
inc
in
adc
std
daa
enter
mov
mov
mov
adc
adc
out
mov
popf
ljmp
xchg
mov
sub
mov
lds
pop
sub
or
xor
clc
mov
dec
adc
sbb
sbbl
loope
jp
das
or
sbb
pop
shlb
test
mov
mov
in
mov
mov
push
cwtl
mov
xchg
or
dec
test
int
adc
inc
rorb
loopne
cwtl
andl
push
add
xor
int3
sub
sbbb
mov
inc
push
inc
mov
inc
inc
mov
and
or
mov
testb
add
jge
xchg
xchg
add
js
cmc
test
inc
or
push
or
mov
stos
mov
lcall
lcall
sbb
add
shll
test
fildl
push
mov
mov
das
push
cld
fnstcw
mov
sbb
sbb
mov
mov
jmp
jl
push
cmpsl
xchg
or
mov
inc
sub
jbe
xchg
mov
xor
add
cmp
sahf
adc
adc
sbb
add
pop
rcrl
dec
rolb
arpl
fsubrs
mov
add
add
pop
sbb
nop
or
cvtpi2ps
decl
mov
cmp
jnp
or
mov
jae
rclb
pop
in
shll
loop
inc
mov
push
add
outsl
push
cwtl
insl
loopne
in
mov
push
loope
push
or
outsl
fmull
popf
pusha
in
pusha
push
adc
outsl
sarl
test
sbbb
mov
xchg
mov
inc
inc
adc
jmp
mov
insl
inc
test
add
push
pusha
push
idivb
inc
aaa
add
nop
sti
mov
pop
xor
jbe
push
fisubrs
or
and
test
push
inc
push
mov
xchg
lods
insl
push
outsl
std
inc
sub
jno
fisttpll
sbb
loope
adc
xor
cwtl
push
pusha
fcmovnbe
enter
clc
lock
xor
sub
push
push
or
mov
push
mov
pop
mov
add
mov
dec
mov
adc
mov
int
andb
cmpsl
lret
adc
mov
xchg
movsl
inc
xor
loope
and
ss
rcrb
xlat
mov
cmp
ret
in
lock
js
push
mov
adc
je
movsb
add
ss
rclb
imul
popa
xchg
dec
sub
fmull
add
adc
adc
movsb
cmp
add
xor
out
inc
repz
inc
cmp
mov
ja
add
sub
mov
ret
add
mov
sub
mov
inc
sbb
xor
clc
in
mov
clc
cmp
out
push
push
or
pop
xor
dec
shrl
pop
clc
xchg
stos
add
xor
cld
ss
inc
sarl
adc
mov
dec
ret
imul
scas
xor
or
ja
mov
clc
out
shufps
adc
and
mov
xor
lahf
push
jmp
inc
jne
leave
fs
mov
loopne
bound
int3
cmpb
das
jo
test
mov
and
fwait
jmp
sahf
test
cs
cmc
out
and
or
clc
int3
cltd
add
or
fs
pop
rolb
xlat
and
ss
sub
mov
mov
pop
mov
hlt
xchg
dec
add
mov
orb
sbb
sbb
dec
in
test
or
jne
cmp
sbb
lcall
cmp
stos
push
shll
jne
jno
in
push
hlt
nop
orl
mov
dec
sub
cmp
mov
jle
cmpl
arpl
add
push
js
mov
lock
push
sbb
dec
and
or
clc
data16
add
push
loop
sbb
ret
sub
int
mov
nop
mov
push
loopne
add
xorl
mov
or
pop
popf
adc
mov
scas
add
test
mov
cltd
sbbb
jl
inc
adc
das
push
cmc
pop
cmp
lock
lods
test
loopne
jg
xchg
mov
add
add
loopne
mov
ljmp
add
jne
inc
mov
xchg
sub
test
cwtl
shrb
movl
lret
out
pop
jo
mov
insl
adc
stos
add
inc
mov
iret
xor
sbb
push
and
add
add
mov
or
in
add
sub
sub
sub
pop
stos
push
inc
push
sub
test
in
mov
adc
insb
movsl
imul
and
xor
sub
push
and
mov
and
add
stos
push
inc
ljmp
inc
outsl
jae
sbb
fimull
or
cwtl
insl
loop
lea
and
fistps
mov
xchg
cmp
stos
adc
test
ljmp
pop
lahf
and
stos
mov
dec
push
ret
data16
das
sub
lret
xor
adc
inc
test
mov
adcl
push
xor
jns
and
in
or
or
or
push
je
aad
cmp
inc
adc
inc
add
adcb
cmp
sbb
and
pmaddwd
filds
sbb
je
aas
add
fidivl
into
les
sub
rcrl
roll
add
dec
add
lret
sbb
push
mov
push
inc
dec
xchg
cmp
xor
rcrl
test
add
pop
repz
sbb
cmp
add
lcall
inc
mov
sbb
clc
and
adc
push
in
pop
mov
pop
jne
loop
xchg
loope
push
and
ds
sbb
mov
stos
rolb
jno
push
lods
mov
daa
lods
push
or
lcall
imul
cltd
mov
inc
push
pushf
mov
push
adc
movsl
add
aad
or
jg
push
adc
add
mov
rorl
push
adc
xor
inc
hlt
mov
inc
out
dec
es
andb
push
xor
cmc
les
or
fcomp
or
and
mov
and
cmp
mov
jnp
test
inc
xor
aas
out
pop
mov
outsb
mov
push
mov
sbb
adc
xchg
mov
mov
push
push
push
adc
stc
mov
sbb
in
push
and
sub
inc
imul
in
mov
pop
push
shrb
adc
repz
and
adc
inc
daa
movsl
push
xor
cmc
icebp
jne
imul
mov
xchg
adc
jne
inc
mov
imul
andb
stos
adc
adc
push
mov
add
pop
sub
sbb
dec
movsl
inc
data16
mov
add
sbb
jno
mov
lea
sub
fsts
push
imul
jns
dec
lods
add
push
xchg
fmull
pop
and
adc
imull
lea
mov
mov
decl
fsub
loopne
mov
mov
int
mov
push
dec
mov
hlt
rcl
fiaddl
stos
sbb
int3
hlt
shll
adc
add
or
dec
lds
xchg
bound
push
inc
rorl
pushf
add
inc
push
pop
scas
sub
mov
cltd
mov
and
push
xchg
add
clc
xchg
add
sub
adc
mov
add
pop
fsub
mov
rorb
stos
scas
sub
in
xchg
pop
add
add
enter
cmp
aas
adc
jmp
lret
pop
and
leave
sub
mov
cvttps2pi
sub
faddl
shlb
xchg
mov
dec
sub
sahf
out
shlb
jns
xor
lcall
sti
mov
add
stc
shr
je
mov
mov
jge
roll
insl
mov
xor
in
add
mov
test
and
xchg
bound
int3
xchg
add
fsubrl
rorb
inc
in
lods
stos
add
fs
ljmp
add
cmp
xchg
xchg
mov
cli
push
pop
mov
or
and
adc
lea
mov
sub
orl
mov
jl
adc
andl
ret
adc
popf
inc
mov
cwtl
dec
inc
cmp
pop
rorb
lahf
adc
stc
test
negb
faddl
adcb
pop
adc
mov
aad
dec
ror
mov
stc
clc
pop
subb
sub
ficompl
push
inc
fsubrs
push
or
lret
and
shrb
enter
sub
push
inc
adc
add
imul
cwtl
cltd
mov
inc
fisttps
sbb
push
inc
xchg
in
and
pop
push
adc
pop
mov
push
xchg
cmp
jb
es
mov
dec
fsubs
sbb
add
cmp
fiadds
cmp
mov
push
dec
arpl
adc
mov
ret
adc
push
xlat
add
shll
nop
in
add
adc
ret
rcrb
jecxz
ja
pop
in
fsubrs
mov
icebp
xor
sbb
arpl
mov
push
adc
pop
mov
call
xchg
lret
jmp
sbbl
frstor
les
in
add
sarb
loopne
pop
ja
into
rcrl
aaa
imul
rcll
fcompl
add
fnstenv
or
pop
or
outsl
and
jge
and
adc
xorl
stos
lock
xchg
cwtl
xor
mov
mov
daa
test
mov
lret
movsb
pop
adc
cltd
loopne
dec
addl
jmp
push
test
dec
mov
and
pushf
orb
xchg
cli
cmp
icebp
hlt
fwait
push
add
ljmp
test
stos
cmpsb
int3
add
arpl
xor
pop
leave
das
jnp
das
or
push
mov
adc
sub
mov
adc
sub
xchg
test
mov
mov
gs
add
insb
mov
jo
jb
push
stos
cs
add
les
dec
cmp
mov
push
xchg
sub
add
mov
sub
movsl
adc
mov
into
add
test
xor
push
loop
lret
insl
jmp
add
mov
insb
mov
and
mov
push
push
sbb
mov
sbb
inc
mov
cmp
mov
mov
xchg
nop
mov
fwait
sub
fs
inc
cmp
mov
shrb
data16
mov
mov
add
xor
ret
pop
pop
aad
rcll
sub
xchg
lods
fisubrl
mov
push
test
push
popa
popf
adc
test
add
inc
sub
sbb
mov
pop
in
shlb
aad
mov
sbb
add
ret
imul
push
push
inc
push
mov
rorb
stos
dec
xor
aad
push
adc
push
push
dec
shrb
movsl
loop
sub
adc
lock
or
enter
inc
inc
mov
aad
sub
mov
add
and
inc
shll
xchg
cmc
mov
and
inc
mov
mov
lret
mov
movsl
mov
or
popf
adc
lcall
das
fisttpl
daa
cmp
pop
push
push
test
cs
and
cmc
out
xchg
lcall
fcoms
rolb
adc
inc
scas
adc
inc
mov
cli
mov
jge
int3
lahf
insl
mov
outsb
testl
gs
sbb
sub
mov
rcrl
add
or
xor
pop
mov
mov
sahf
sbb
sub
lea
sub
out
lret
sub
dec
push
push
insb
ret
stos
js
clc
outsb
das
adc
sbb
test
xchg
or
add
add
clc
pop
imul
mov
pop
inc
mov
insl
test
push
shll
mov
stos
inc
out
inc
aad
mov
movsl
ret
imul
ret
adc
sbb
mov
out
inc
lahf
mov
test
mov
pop
out
daa
aad
push
imul
push
repnz
inc
mov
push
movsb
or
and
subb
out
andl
mov
dec
icebp
push
add
out
into
push
xor
inc
sbbl
mov
lods
adc
andb
out
cmc
xchg
ret
push
mov
pop
sub
sbb
pop
sbb
pop
pop
inc
add
xchg
and
addb
or
mov
push
stos
insl
roll
cmc
mov
pop
dec
gs
push
mov
fmuls
lret
lcall
fisubrs
mov
sarl
cs
xchg
xchg
outsb
adc
inc
daa
inc
sbb
dec
lods
jno
arpl
bound
sub
xor
mov
adc
and
cmpsb
pop
mov
mov
adc
mov
sub
test
inc
out
mov
into
hlt
cmp
or
bound
in
pushw
sahf
fbstp
jbe
pop
mov
ja
test
jns
or
mov
dec
nop
je
imul
shlb
push
rolb
test
gs
xchg
out
jno
push
mov
orl
inc
jg
pop
scas
and
mov
sbb
dec
lods
and
out
push
dec
sbb
push
ss
xchg
xorb
inc
or
fimull
pop
lds
loop
aad
fimull
shll
test
es
loope
pop
sub
test
test
mov
mov
add
mov
mov
sub
sub
cmp
mov
mov
or
pop
mov
stos
iret
stos
out
push
push
stc
iret
mov
xchg
call
and
ljmp
jne
stos
mov
call
push
mov
orb
inc
cmp
test
push
or
mov
and
ss
lea
das
push
pusha
and
aad
aam
stos
enter
push
xchg
xor
scas
rcrb
fdivrs
push
or
lret
push
push
or
into
jg
adc
out
sub
mov
push
add
decl
je
adc
xchg
cmpsb
fs
xchg
or
les
es
sub
data16
inc
sahf
adc
cli
xchg
stos
gs
mov
or
or
or
test
fildl
adc
sub
fnstsw
imul
nop
xchg
and
or
inc
dec
sbb
xchg
outsb
add
shlb
sub
outsb
add
ret
addl
push
hlt
lahf
fwait
push
pop
sub
add
test
incl
lods
gs
das
xchg
dec
lods
pop
jne
push
sbb
mov
or
in
inc
fdivs
cmpsl
inc
mov
xor
jp
aas
gs
push
add
lods
push
jbe
fwait
shlb
xor
fwait
push
cmp
dec
or
or
aas
lret
aam
cmp
mov
add
jbe
xor
pop
orl
push
push
rcrl
lret
movsl
test
test
imul
mov
pop
test
adcl
inc
in
rcl
dec
cmp
push
pop
or
sbb
push
mov
outsl
add
or
push
addl
xor
sub
test
dec
lods
imul
aad
test
xlat
dec
cli
test
movsl
mov
adcb
cmp
mov
xchg
and
pushf
into
int3
ret
loop
sub
fwait
mov
repz
push
pop
pop
cli
jno
aam
push
cld
sbb
jle
daa
mov
mov
enter
push
sub
test
push
movsl
cmc
jg
roll
push
ss
in
pusha
imul
xchg
adc
loopne
out
xor
sub
outsl
mov
or
rorb
mov
jmp
stos
pop
sbb
bndstx
mov
mov
sub
cmp
std
mul
inc
add
add
fistl
add
push
stos
daa
roll
xor
shl
dec
cmp
in
shrb
mov
out
mov
js
push
leave
inc
aam
inc
out
xor
push
adc
adc
xchg
xchg
rorl
xor
and
xchg
lods
push
pop
add
xor
or
push
repnz
gs
inc
add
lcall
adc
add
shll
and
lds
js
mov
sbbb
int
xor
push
add
xchg
jnp
and
push
lahf
test
adc
mov
les
mov
into
mov
and
das
pop
mov
xchg
sub
out
push
jmp
and
push
sbb
add
and
aad
imul
fidivrl
fldenv
popf
dec
and
lods
mov
mov
aad
xor
dec
inc
lea
xor
push
rcrb
movsl
inc
fstl
cmp
mov
jno
gs
push
or
addb
push
xchg
subl
aad
ret
inc
mov
faddl
cmp
xor
int3
add
jns
ret
mov
das
stos
push
subb
in
inc
mov
adcl
or
push
shll
mov
dec
or
notl
dec
adc
js
bound
or
mov
lea
cmp
lods
xlat
xchg
jne
es
push
add
pushf
adc
and
or
iret
sbb
xor
push
movsb
cmc
jns
adc
bound
jbe
pop
xchg
mov
adc
ret
xor
inc
mov
jno
test
testl
mov
sbb
push
mov
test
into
push
or
mov
mov
push
movsl
insl
test
mov
imul
lock
push
mov
pop
int3
pop
add
inc
pusha
push
movsl
mov
cmc
push
mov
or
adc
les
imul
mov
rclb
out
inc
or
push
mov
mov
xor
testl
test
push
or
add
push
jmp
cmp
push
mov
mov
mov
push
push
mov
sbb
xchg
fildl
push
cmp
xor
cwtl
pop
pop
enter
xor
xchg
imul
add
xor
and
test
inc
loopne
lods
enter
xlat
pop
orl
lock
out
loopne
inc
lea
mov
jne
push
lea
push
add
aam
aam
mov
cwtl
or
push
stos
jp
mov
pusha
inc
je
mov
ret
push
icebp
imul
ret
jo
or
ja
fidivl
fnstenv
and
or
jne
fadds
mov
fildl
popa
shlb
pop
sbb
fadd
sub
jmp
mov
pushf
add
inc
and
dec
adc
cld
scas
xor
or
push
adc
mov
sbb
aam
call
rclb
fisttpll
jle
fsts
sbb
aam
mov
adc
xchg
ds
pop
hlt
jnp
lea
imul
leave
fiadds
hlt
pop
push
outsb
out
cmp
in
dec
js
sub
sbb
inc
shrl
add
cmpsl
movsb
in
repnz
jmp
int3
pop
adc
xor
jl
or
pop
cmp
clc
mov
ja
push
iret
dec
lock
pop
pop
in
es
iret
int
inc
mov
or
adcb
push
imul
repz
ljmp
stos
jo
add
add
xchg
ret
push
outsl
or
xchg
or
clc
add
cld
clc
adc
mov
in
sub
and
jmp
sbb
pop
stc
mov
sbb
jne
sbb
sub
les
js
adc
fwait
cmpl
and
sbb
and
jno
jb
sub
sub
add
rcll
pop
sbb
pop
push
adc
mov
add
xor
lock
push
hlt
add
sbb
sub
mov
inc
cmp
add
push
sub
push
fs
sahf
jo
jb
ret
push
mov
es
dec
pop
adc
sbb
add
or
adc
sbb
xchg
leave
push
sub
shll
fcom
push
leave
push
cltd
add
sbb
aam
sbb
fstpl
push
mov
mov
pop
loop
into
push
mov
imul
adc
imul
imul
push
ret
rclb
fs
js
inc
les
or
xorb
push
add
int3
mov
xchg
gs
cmp
test
test
das
push
sub
testl
ret
inc
add
stos
lcall
mov
sbb
push
test
adc
or
mov
cmp
add
mov
dec
adc
insl
or
mov
and
pop
push
jb
pop
xor
mov
mov
or
sub
int3
inc
cltd
in
lods
inc
aam
fstl
sbb
enter
fwait
jo
mov
sub
sbb
data16
add
push
cs
mov
sub
in
mov
or
fdivr
cmp
dec
push
xor
cmp
and
mov
sbb
xchg
or
push
imul
push
lods
dec
mov
mov
mov
mov
lods
test
xchg
div
adc
or
aam
sub
xchg
addr16
push
rorl
cltd
aam
push
mov
mov
push
cmp
ror
aam
sub
mov
mov
push
in
aad
push
test
mov
push
mov
mov
test
mov
stos
mov
dec
rcrb
push
mov
sub
sub
mov
popa
test
fisubrl
push
test
insb
lret
dec
inc
adc
add
roll
dec
add
data16
or
sub
push
lods
push
inc
pushf
movsl
mov
inc
int
cmp
add
stos
test
int
jbe
cmpsl
das
adc
adc
push
sub
mov
aad
mov
add
ret
popf
stos
push
xor
xchg
adc
dec
aam
in
xor
movsb
push
leave
addb
shll
jecxz
mov
mov
push
xchg
mov
aas
cs
mov
add
add
push
inc
fadds
pop
add
inc
sub
mov
adc
mov
and
fwait
push
push
mov
sbb
repz
dec
xor
dec
mov
sub
lods
inc
lock
dec
sbb
mov
fisttps
pop
cmp
outsb
xchg
mov
ret
mov
pop
push
lods
cmp
lret
lcall
add
nop
aad
and
subb
push
xchg
push
mov
mov
rclb
sub
mov
aam
cmp
out
inc
sbb
lods
adc
enter
adcb
pop
mov
pop
imul
int
mov
or
adc
add
add
inc
pop
inc
int
jg
loop
mov
sub
push
stos
dec
jle
and
xchg
push
orb
idivl
repz
sbb
sbb
adc
push
or
call
adc
cmp
cmp
subb
mov
pop
adc
pop
pop
dec
or
clc
in
push
add
repnz
jno
inc
test
inc
mov
stos
xchg
sbb
pop
nop
addb
ret
sbb
loop
jo
aaa
sbb
dec
and
sub
imul
push
jo
mov
dec
subb
divb
pop
dec
sbb
cwtl
add
inc
stos
mov
mov
mov
xchg
test
push
test
jge
xchg
mov
push
ds
push
inc
test
dec
mov
mov
gs
push
ret
sub
mov
xchg
pop
jae
inc
movsl
pop
add
mov
mov
movsb
inc
cmpb
rcll
insl
pop
sub
ret
inc
or
jno
inc
stos
adc
push
setp
dec
lea
mov
or
mov
insl
stos
mov
dec
subb
pop
inc
test
push
jns
xor
hlt
in
cmp
orps
push
stos
or
push
dec
pop
movsl
sbb
call
push
xorb
push
xchg
xchg
ds
in
ret
dec
sar
mov
cmp
jmp
int
stos
pop
aam
sbbb
push
in
pop
leave
lods
mov
mov
jo
sbb
push
push
psrlq
inc
sub
inc
adc
aam
inc
je
aad
popa
lret
and
push
stos
jb
xchg
stc
inc
movsb
push
pusha
sub
adc
fmull
push
imul
inc
mov
xchg
mov
cmp
adc
pop
add
outsb
push
int3
jns
add
pop
cs
mov
pop
adc
imul
mov
push
adc
jmp
fwait
lods
add
mov
inc
mov
and
add
inc
lods
shrb
xchg
sub
lcall
push
mov
add
fcomps
adc
xchg
add
in
test
jae
adcl
and
xchg
cmpb
inc
pop
les
negl
mov
xchg
sti
and
lods
add
notl
push
pop
xor
shll
out
adc
mov
repnz
subb
dec
gs
adc
or
pop
inc
jae
test
sbb
adc
push
mov
dec
xchg
and
push
sbb
jo
lahf
or
addl
xorl
enter
rep
loop
or
icebp
adc
mov
push
imul
nop
sbb
xchg
dec
jb
loope
push
add
inc
add
pushl
push
push
pop
enter
stos
fimull
sbb
sbbb
push
push
add
add
sub
inc
mov
jns
dec
push
adcb
dec
or
iret
pusha
adc
andb
add
and
and
xchg
dec
fsub
and
mov
in
outsb
dec
push
xor
test
mov
mov
test
mov
inc
or
sub
dec
mov
inc
popa
sbbl
cwtl
fcomps
mov
push
inc
pop
adc
push
sub
cmpsl
cmp
push
pop
sti
mov
ljmp
pop
mov
adc
rcll
lcall
sub
ret
or
nop
and
adcb
push
adc
andl
pop
adc
test
jle
icebp
adc
adc
sub
push
mov
xchg
adc
inc
stos
mov
inc
insb
jae
loopne
pop
imul
sbb
lret
adc
xchg
scas
cmp
mov
xor
mov
sub
lcall
push
pop
inc
sahf
xchg
xchg
lds
paddusb
scas
mov
fsubr
fsubrs
mov
mov
out
mov
popl
dec
aam
fistps
mov
push
mov
push
or
int3
int3
push
cwtl
aad
stos
add
xchg
mov
insl
sbbl
mov
mov
lahf
fs
xchg
outsb
adc
ja
int3
mov
mov
add
pushf
aad
and
lcall
ror
out
cli
mov
mov
cli
scas
push
sub
cmp
adcl
sub
sub
adc
adc
in
add
xchg
adc
adc
jae
mov
pop
pop
dec
out
stos
pusha
push
pop
fs
add
jo
lret
mov
cmp
xchg
data16
or
adc
int
xor
add
dec
les
iret
jbe
add
data16
mov
jg
add
add
add
push
rorb
ljmp
xlat
test
adc
call
jbe
js
push
aad
in
cmp
addr16
fsubrs
sbb
loopne
mov
sub
rcl
add
add
lea
js
or
sbb
cmc
test
jge
pusha
les
sbb
cmp
xchg
and
lods
testb
sbb
adc
andb
or
and
xor
test
loop
stos
cmpsl
xchg
cmp
outsl
mov
scas
sub
les
xor
sub
rolb
addl
xor
and
dec
lock
or
sub
mov
inc
jge
js
add
movsb
fsub
fstpt
or
in
cs
sub
push
or
pop
lock
pop
or
and
ja
shl
int3
xchg
pop
mov
pavgb
add
mov
jb
adc
repz
cwtl
sarl
dec
rclb
mov
adc
mov
dec
lock
mov
add
popf
add
push
pusha
add
shll
adc
mov
not
out
xchg
inc
shll
mov
push
incb
add
loope
mov
enter
daa
pusha
or
dec
sub
mov
add
cmp
push
add
mov
add
out
icebp
adc
adc
inc
lock
rorl
add
sbb
and
movb
push
push
sub
add
das
mov
add
add
push
xor
adc
shrb
inc
test
sbb
pusha
stos
divl
inc
push
mov
and
andb
push
out
jo
sub
add
sbb
push
mov
popa
pop
add
cmp
or
sub
rcrl
dec
push
pop
test
add
push
xchg
push
add
scas
ljmp
inc
pop
add
pop
test
movsl
jo
or
das
jp
test
xor
and
pop
push
add
jo
fsubrl
push
push
bound
push
xor
mov
jo
adc
and
or
dec
pop
insb
add
sti
addr16
sbb
mov
out
cmc
xchg
imull
fisttpl
jno
insl
addl
inc
addr16
or
push
scas
mov
rorb
pop
push
cli
outsb
test
lea
aam
sti
aaa
lds
adc
mov
mov
or
push
push
idivb
sbb
insl
lea
xor
cmpsb
sbb
jl
inc
cmpsl
insb
lods
insl
push
daa
imul
adc
and
stos
pop
ror
inc
and
mov
pop
subl
xor
inc
das
xor
test
adc
inc
add
cs
lods
mov
sub
enter
out
and
jne
test
mov
push
inc
subl
pop
lods
adc
sti
mov
sub
push
adc
or
cltd
push
adc
pop
adc
cmpsb
mull
cltd
mov
push
out
xchg
push
lcall
cld
xchg
call
pusha
int
in
mov
mov
in
or
and
ret
rclb
js
mov
push
mov
lea
inc
cmp
rcrl
test
mov
xchg
jecxz
mov
aad
ret
fnstenv
add
adc
xchg
rclb
lds
lea
sub
sbb
stos
loope
push
insb
and
jne
out
add
fst
pop
mov
mov
mov
inc
aad
and
pop
mov
call
addb
cmp
mov
adc
or
stos
adc
adc
xchg
and
aaa
mov
jbe
push
movsb
std
jmp
fwait
mov
add
or
test
sbb
xor
test
stos
arpl
sub
shlb
ljmp
jno
pop
rclb
aaa
and
mov
imul
lahf
test
mov
sub
lea
or
es
sub
or
aaa
es
aam
add
adc
test
dec
nop
mov
mov
push
pop
mov
inc
push
cmpsb
mov
movsl
mov
lea
xchg
adc
push
stos
dec
mov
push
add
imul
or
dec
rolb
insb
adc
mov
and
pop
das
xor
add
gs
ljmp
push
fnsave
inc
mov
adc
movsl
andl
pushf
les
clc
fadd
cmp
mov
mov
add
popa
sub
inc
xor
adc
rcll
popf
and
xchg
in
pop
cmp
adc
out
and
add
pop
lods
sub
push
add
loop
sti
jecxz
xchg
xor
pop
adc
mov
stc
scas
dec
dec
pop
inc
mov
mov
add
in
loopne
xorl
pop
mov
popa
or
jecxz
shrl
cmc
decb
add
out
mov
and
sahf
push
mov
dec
adc
adc
sub
shrl
dec
sub
sub
jl
dec
orb
in
sbb
outsl
mov
js
js
and
insb
inc
nop
repnz
subb
inc
fimuls
fwait
inc
es
push
hlt
aad
or
inc
mov
rcrl
daa
inc
adc
enter
and
dec
cmp
inc
mov
loopne
or
imul
xor
test
or
cli
mov
push
insl
jnp
stos
xchg
pop
add
push
addl
shlb
add
repz
mov
sub
test
push
jb
addr16
xor
rcr
std
fwait
mov
data16
ljmp
xchg
add
add
test
xchg
inc
hlt
test
test
enter
pop
or
sbb
mov
xchg
adc
dec
stos
addr16
sub
and
sub
lds
jb
cmpl
or
mov
jmp
inc
dec
push
jge
addb
mov
loop
xchg
cmp
pop
or
dec
mov
push
inc
pop
adc
sahf
imul
in
enter
sbb
sub
or
dec
inc
fcomip
add
cmp
sarb
ffreep
test
cmc
jg
adcb
cmc
lock
enter
in
fildl
mov
xchg
stos
inc
mov
mov
ss
jae
mov
inc
daa
pop
inc
cmp
movsl
mov
pusha
push
mov
movsl
cli
or
xor
push
dec
inc
movsl
pop
cmp
xchg
dec
mov
sbb
pop
rcl
inc
movsb
push
mov
push
fstpl
lahf
or
dec
ret
jecxz
add
out
mov
pusha
or
inc
inc
out
xor
sbb
push
movsl
popf
xchg
and
je
xchg
movsl
or
jg
cmp
jb
pop
js
cli
mov
dec
gs
xchg
xchg
xchg
ret
scas
or
hlt
fstps
arpl
mov
imul
xor
fcoml
bound
pop
dec
xchg
dec
lock
pusha
pop
mov
das
mov
not
jecxz
sub
xor
pop
pop
xchg
mov
jns
jnp
push
cmp
sahf
test
imul
lcall
pop
repnz
pop
mov
aaa
pop
push
pop
enter
lock
xlat
or
nop
or
fnsave
jle
loope
jae
lcall
inc
cmpsb
and
shll
jp
push
add
xor
xchg
cmovns
shr
mov
xor
xlat
dec
xor
jmp
sahf
or
sahf
pop
cmp
repnz
stos
xchg
mov
inc
dec
test
int
mov
push
xchg
test
adc
mov
clc
and
sbb
in
test
jmp
adc
notl
mov
fildl
push
jno
add
sbb
mov
xor
mov
or
xor
movsl
call
push
mov
push
add
push
cwtl
mov
in
fdivs
xchg
mov
push
push
push
dec
in
jbe
mov
pop
insl
loop
mov
pop
mov
out
outsl
mov
or
adc
cmp
repnz
lret
push
xor
jle
stc
inc
cmp
pop
ja
xorl
mov
and
push
loope
test
shll
push
sbb
mov
xor
aaa
mov
sub
and
add
cmpsb
mov
lret
sub
add
movsl
and
add
jp
mov
std
push
and
push
sbb
xor
not
lret
or
fstpt
pop
or
jb
rcrl
push
outsb
cmpsb
mov
test
mov
jbe
test
ficompl
arpl
inc
pop
aaa
push
fwait
mov
push
bound
add
inc
xor
jb
cmp
sbb
inc
mov
and
or
mov
or
shr
test
dec
add
cltd
push
push
addr16
pop
pop
cmp
mov
push
push
inc
inc
sub
or
pop
mov
fldt
into
sbb
gs
inc
cmpb
add
inc
lods
add
push
push
lret
mov
inc
icebp
ja
or
sub
dec
adc
sub
push
lods
insl
int
shrl
mov
add
jo
pusha
inc
lods
inc
imul
mov
andl
push
pop
aam
int3
inc
mov
pop
pop
rcll
gs
inc
xchg
push
lret
aad
aam
aad
out
incb
bound
push
outsb
or
push
repz
mov
add
adc
addb
and
add
shrb
aam
mov
outsl
dec
mov
pop
inc
cwtl
cmp
dec
ljmp
movsl
out
inc
jae
add
enter
xchg
lods
sub
dec
add
rcrl
inc
sbb
cld
xor
sub
ds
jo
cld
adc
inc
in
pop
dec
sub
mov
pop
cld
scas
call
sarb
jno
adc
int3
lea
inc
arpl
dec
rcr
push
andb
clc
sub
add
sub
cltd
fwait
loop
call
leave
cmpl
inc
fcmovnu
pop
adc
shlb
andb
pop
push
lock
fisubs
adc
lods
inc
add
hlt
xor
imul
cmp
add
xlat
mov
sbb
push
xor
mov
clc
outsb
add
nop
fsubl
andb
shl
test
mov
add
movsb
imul
ja
mov
mov
adc
push
add
xchg
add
fcomi
mov
jnp
mov
lcall
xlat
hlt
sbb
movsb
mov
add
popf
add
jnp
bound
sbb
push
repz
sub
into
inc
add
mov
push
mov
outsl
repnz
dec
dec
adc
cmp
push
fstpl
xchg
scas
std
jecxz
cmp
and
or
mov
divps
hlt
ficoms
push
loope
leave
andb
jne
pop
call
sbb
push
leave
push
inc
iret
inc
dec
rolb
aaa
in
movsl
shrb
enter
ljmp
add
mov
stos
outsb
ret
add
lock
cmp
or
add
sub
into
adc
imul
adc
push
mov
movsl
xor
sub
sahf
mov
xor
outsl
stos
imul
cwtl
sbb
sub
jmp
mov
outsb
outsb
jne
add
xchg
pop
clc
lods
fincstp
and
and
sbb
push
movsl
add
jmp
push
test
lea
push
outsb
pop
shrl
loop
cmp
xor
sub
mov
shrb
adc
leave
xlat
loopne
test
jb
xor
les
inc
inc
mov
or
mov
mov
ja
and
dec
sti
lea
mov
data16
andb
aad
rclb
lret
imul
enter
gs
jo
stos
and
movsl
mov
pop
add
mov
dec
jnp
mov
adc
mov
pop
lahf
xchg
sbb
and
mull
call
cmp
stos
pop
push
xchg
es
mov
push
sti
movsl
lods
mov
sbb
mov
je
cs
pop
adc
add
cmc
cmc
inc
popa
imul
add
aaa
cmp
mov
iret
andl
push
mov
mov
push
shl
sub
or
mov
and
sbb
test
mov
aad
lods
mov
pop
mov
mov
jnp
jo
push
adc
into
adc
adc
or
test
add
mov
loope
xchg
pop
and
mov
mov
mov
imul
lret
or
or
mov
shrb
push
mov
and
inc
test
lock
lods
inc
add
fildl
add
cmc
mov
lods
mov
stos
outsb
mov
sub
enter
mov
add
push
sbb
pusha
into
cmc
push
sub
adc
and
pop
imul
fsubrs
cmp
mov
mov
push
fidivl
inc
mov
cmp
xchg
orb
adc
cmpsb
sub
mov
xor
cmp
pop
push
fisubrl
add
mov
jne
loop
fildll
xchg
stos
jmp
inc
xor
push
push
push
mov
adc
push
push
fmull
jge
repnz
mov
dec
inc
nop
mov
ret
push
orl
.byte
pushl
and
dec
imul
lret
push
xor
fsubp
mov
cld
in
cld
push
xor
decl
adcb
sahf
in
mov
mulb
sub
repz
push
adc
roll
xchg
xchg
cmp
xor
mov
mov
or
or
mov
or
jmp
das
adc
or
adc
sarl
mov
cli
incb
pop
mov
add
xchg
mov
pop
loope
testb
outsl
push
and
jne
jg
js
or
inc
and
out
rcll
push
xor
int
jl
cwtl
scas
call
movsb
shll
adc
insl
insl
jne
movsb
je
jge
call
incl
push
cmp
xchg
outsl
shrl
sub
pop
jecxz
je
mov
jae
xor
call
bound
std
xor
repnz
shl
jnp
xchg
in
push
test
cmp
imul
decl
lahf
movsb
cltd
cmpsl
xchg
jle
add
dec
jl
andl
and
dec
or
mov
stc
dec
push
test
daa
xchg
loopne
iret
and
jl
fwait
add
loopne
stc
out
decl
fucomip
mov
ss
inc
dec
outsb
orb
mov
push
xlat
aas
fiaddl
lock
sti
lret
inc
mov
arpl
xchg
jge
lret
int
adc
inc
out
je
ja
nop
mov
adc
mov
test
mov
hlt
sbb
cmp
jnp
loopne
xchg
xor
ret
cmc
xchg
pop
xchg
mov
push
xlat
jp
and
out
xor
imul
sub
push
lret
xchg
aam
cmp
outsl
ds
imul
or
and
incl
xlat
xchg
mov
mov
adc
mov
movsl
std
mov
inc
xor
aaa
dec
sub
call
mov
stos
loopne
bound
int3
inc
jmp
adc
cmp
or
cld
ljmp
and
leave
sbb
incb
xchg
int
loopne
lock
stc
call
pop
jo
xchg
jo
loope
jmp
leave
push
pop
fadds
cld
sub
aaa
sbbl
call
mov
scas
addl
pop
mov
stos
hlt
cld
in
call
adc
les
cs
mov
sub
test
addr16
frstor
out
jge
add
sub
imul
movsl
notb
xchg
pop
xchg
mov
mov
rorl
pop
inc
fwait
in
push
push
xchg
jns
jnp
adc
call
dec
mov
ret
ss
jecxz
jmp
mov
dec
pop
sbb
aas
dec
shll
outsl
jns
inc
mov
out
mov
imul
jl
movsl
lods
push
loopne
xor
jmp
adc
mov
and
jl
and
cmp
mov
stc
and
pop
add
add
call
lods
or
push
sbb
nop
fidivrs
addb
push
mov
mov
mov
pushl
arpl
arpl
in
fwait
popf
shll
incl
xor
adc
xchg
cmp
cmpsl
inc
pop
mov
xlat
fdivp
sbb
decl
pop
test
mov
fs
or
and
fdivrl
sbb
lret
mov
ljmp
lods
adc
fs
mov
xchg
mov
xlat
xlat
mov
inc
jae
add
std
pushl
sbb
sbb
mov
dec
fisttpl
loope
dec
int3
jbe
push
adc
loope
mov
shrb
xor
std
fs
test
jnp
hlt
sarb
pushl
add
add
pop
fdivs
sahf
cld
cmp
pop
jl
add
fsubrs
or
sti
pushl
adc
scas
inc
or
imul
jg
stc
test
or
faddl
or
add
sti
and
adc
sbb
aaa
push
insl
subl
jg
and
jecxz
out
jmp
lds
inc
aad
inc
loop
pop
ret
ret
outsb
outsb
pop
das
xchg
mov
push
cmc
inc
cmp
pusha
imul
cmp
movsl
pop
outsb
testl
inc
lret
idiv
outsl
adc
mov
inc
pop
push
sbb
idivl
and
mov
pop
loop
pushl
cmp
cmp
xchg
cmp
sbb
mov
fists
aad
cmp
lret
into
mov
push
imul
mov
lcall
movsw
push
and
and
xchg
aaa
movsl
movsl
xorb
ret
sbb
xchg
gs
and
mov
jp
inc
imul
cmp
movsl
idiv
fcomi
and
inc
cmc
dec
loop
aad
andb
cmp
jbe
jmp
cmc
lret
inc
movsl
sbb
cmc
aaa
sbb
jno
pop
data16
jnp
fbstp
outsb
cmp
shlb
pop
loopne
insl
outsl
jg
and
jno
cmp
and
outsl
jmp
das
sbb
push
cmp
maskmovq
idivl
and
sbb
loop
sub
getsec
jno
gs
aaa
imul
mov
into
push
lret
loop
push
outsb
repz
insl
aaa
rcrl
inc
cmc
sbb
pop
divb
gs
mov
testl
js
div
jno
mov
test
ret
jno
in
outsb
loop
inc
sbb
sub
loop
sbb
das
lret
jno
imul
loop
imul
loop
aas
in
mov
test
cmp
and
aaa
lret
adc
sbbb
xchg
insl
xchg
pop
pop
sub
iret
xchg
cmc
xor
es
leave
subb
movsl
pop
scas
lcall
decl
mov
dec
adc
push
adc
imul
movsl
into
cmp
in
pop
mov
cmc
mov
imul
ret
push
or
lods
jp
imul
sbb
mov
testl
push
or
shl
loop
push
mov
pop
sbb
jne
cmp
lock
je
loope
push
dec
and
inc
imul
inc
and
xor
dec
xorb
leave
pop
stos
int3
mov
ret
push
subb
jno
jno
or
hlt
data16
mov
or
decl
insl
test
or
mov
mov
insb
data16
mov
pop
jb
mov
loop
movsl
cmp
and
sub
xchg
push
jno
jno
and
lods
mov
pop
and
pop
out
mov
push
mov
es
inc
movsl
add
cmp
cmpsl
push
sub
insb
or
jno
ret
xchg
lods
xor
imul
and
cmc
cmp
xchg
xor
test
icebp
inc
das
inc
cmc
inc
xchg
cmp
push
cmp
inc
test
jmp
arpl
mov
das
js
into
and
lcall
adc
mov
sbb
imul
inc
jno
subl
xor
xchg
jno
into
ljmp
arpl
mov
cmp
jp
je
ret
das
push
and
inc
lret
pop
pop
subl
iret
and
mov
add
adc
hlt
dec
mov
adc
xor
cltd
xor
mov
inc
add
cmp
addr16
mov
xor
and
add
shlb
sbb
repnz
fisttps
sub
mov
pop
outsl
jg
adc
and
lock
push
ficoml
comiss
neg
or
dec
not
mov
in
mov
mov
sub
sub
out
mov
push
cltd
loopne
xchg
not
adc
pop
sub
add
xor
adc
fidivrs
jns
mov
pop
loopne
fisttps
sub
push
mov
addl
roll
sbb
gs
mov
adc
sbb
idivl
dec
nop
and
cmp
lds
sub
fisttpll
scas
or
sbb
mov
insl
mov
or
js
les
mov
lods
jne
sti
test
jae
and
adc
fstpl
jge
neg
and
imul
into
std
mov
sbb
push
in
str
xchg
je
pusha
popa
sbb
std
fxch
xor
mov
div
in
xorb
stc
cmp
jnp,pt
ret
ss
or
ret
sub
add
mov
sbb
adc
pop
inc
sub
pop
cmp
hlt
sahf
out
adc
aas
test
je
mull
insb
or
adcl
sub
out
lock
neg
adc
push
or
cmp
lock
add
or
dec
or
mov
cmp
rorl
dec
sub
imul
push
xchg
inc
add
xor
sub
push
xor
sub
mov
and
out
or
into
clc
incb
mov
mov
fwait
pop
fbld
push
sbb
mov
in
adc
mov
in
xchg
adc
cld
dec
adc
sub
inc
xchg
idivb
add
and
jecxz
push
das
inc
jecxz
icebp
adc
scas
sbb
adc
fildll
pusha
push
pop
rcll
or
fs
mov
mov
loope
sti
mov
shrl
pop
test
add
std
mov
and
loop
test
cmp
sbb
mov
and
rcl
dec
mov
sbb
mov
movb
add
frstor
sub
jnp
fmuls
xor
pop
push
idivl
xchg
test
add
fildl
push
push
and
cmpsl
xor
scas
std
rcrl
adc
sbb
and
cwtl
pop
and
mov
jp
lds
shrl
pusha
iret
mov
jl
mov
sbb
inc
insb
push
lret
jecxz
add
fistpll
pop
xor
jb
fimuls
dec
pop
mov
orb
pop
cmp
jg
out
sub
push
cmp
and
mov
call
add
jge
push
stos
shrl
test
mov
xchg
in
lret
inc
mov
jb
loopne
or
sub
inc
cli
xchg
pop
mov
jb
movsl
rolb
and
mov
sub
loop
inc
int
divb
cmc
pushl
mov
mov
and
lret
data16
cmp
sbb
subb
addl
pop
sub
pop
mov
mov
mov
insl
mov
andb
sbb
lret
and
es
and
push
dec
mov
cmp
mov
aaa
sbb
roll
es
jno
mov
outsl
shlb
or
push
lcall
pushf
inc
outsb
shll
mov
add
imul
mov
push
pop
popa
add
add
mov
sbb
adcl
mov
mov
push
inc
testb
sbb
xchg
fcmovnb
mov
gs
and
das
jno
mov
mov
push
mov
aaa
insb
xchg
in
cmp
xchg
push
imul
cmp
fistpl
fstl
jno
imul
cmc
mov
lods
sub
hlt
imul
dec
loop
inc
or
lods
inc
mov
push
adc
dec
popf
mov
loope
mov
mov
push
clc
addr16
jno
into
cmp
andb
ret
push
lea
ret
jl
fcmovnu
mov
loope
mov
xorb
jge
mov
gs
sbb
sbb
push
or
add
gs
xor
flds
jg
mov
push
cmp
xor
sub
arpl
dec
test
mov
cmpsb
lea
fiadds
xchg
pop
imull
jecxz
adcb
and
pushl
shrl
inc
sbb
mov
jo
mov
daa
fwait
add
mov
fnstenv
iret
jo
jo
inc
mov
dec
cld
mov
mov
jno
int3
pop
xor
scas
out
fisubl
push
sub
or
movzwl
andb
fisttpl
or
adc
test
push
push
test
les
mov
jmp
das
gs
bound
pop
fcmove
into
cmp
inc
es
scas
or
jno
fstp
xor
mov
aad
inc
pop
mov
cmp
adc
sbb
sbb
push
dec
enter
imul
or
lds
test
mov
pushf
sbb
inc
push
or
aad
pop
lea
pushf
mov
push
or
push
pushw
test
test
push
mov
mov
dec
or
mov
mov
lret
subb
ret
cmc
outsb
ljmp
in
ret
rcll
pop
les
mov
int
iret
lea
and
and
fdivl
rcrl
ja
cmc
in
shll
outsb
outsb
inc
cwtl
mov
data16
inc
adc
jmp
test
insb
jno
cmpsb
adc
gs
sbb
push
sub
loope
lods
jno
cli
push
aad
pop
daa
dec
aaa
pop
jae
lods
aaa
fstpt
vmovntps
xchg
mov
cmp
imul
sbb
je
lea
nop
lods
cmp
fisttps
cld
into
jle
or
xor
pop
xor
jnp
pop
into
push
mov
in
pop
imul
cmc
and
mov
inc
repz
mov
imul
mov
test
sarb
shrl
push
jo
aam
cmp
insl
inc
pop
cmp
shrl
out
add
iret
adc
jg
inc
mov
inc
add
inc
add
jp
xchg
stos
cld
add
xor
add
adc
mov
add
add
or
inc
dec
movsl
push
es
cmpsb
adc
aam
jmp
or
pop
or
imul
and
push
fidivl
jae
xlat
inc
out
inc
mov
clc
xor
mov
sbb
div
ds
inc
cmp
jmp
pop
fcomp
pop
test
inc
cmpb
mov
es
mov
fsubs
sbb
lock
cmp
dec
cmc
dec
mov
sti
or
and
add
stc
loopne
jae
adc
clc
add
sbb
sub
aaa
pop
subl
mov
sbb
xor
cmpsb
pop
pop
ds
sbbl
fadd
push
cwtl
test
xor
adc
sti
iret
pop
insl
xlat
jbe
xor
dec
rclb
or
inc
imul
inc
mov
iret
aaa
and
pop
in
popa
rorl
loop
int
cmpsb
mov
or
incb
cmpsl
ja
iret
jl,pn
jo
pop
and
loopne
push
xor
xchg
inc
inc
adc
cmp
xor
xor
outsl
sbb
dec
daa
in
mov
add
inc
shld
mov
or
aas
mov
sub
ds
mov
jns
data16
pop
dec
test
sub
inc
aas
mov
cld
lods
mov
sbb
cmpsl
in
dec
int
add
lods
test
insb
lret
inc
mov
or
ret
rolb
adc
fwait
loope
mov
int3
shld
out
lea
push
lea
push
xchg
cld
call
fsubs
push
lret
data16
into
sbb
add
imul
xchg
sub
js
int
lods
or
sti
mov
lods
insl
fists
out
rclb
andb
push
or
ss
xchg
adc
and
jg
sbb
add
test
fwait
pusha
leave
xchg
push
add
sbb
push
scas
push
xor
sub
cmc
ljmp
sbb
jns
and
sub
les
or
popl
mov
insl
mov
add
mov
adc
or
mov
push
inc
xor
daa
into
lock
stos
aad
mov
add
mov
pop
ss
xchg
mov
inc
stos
and
in
gs
outsl
lods
mov
adc
rcrb
cli
ficoms
push
lods
inc
orl
add
imul
mov
jl
push
add
jl
mov
fcmovnb
into
ja
das
push
push
into
jle
push
sub
sbbb
pop
test
adcl
inc
mov
add
add
bound
das
inc
popl
shll
sbb
sub
inc
insb
test
sub
pop
cmp
mov
cmp
sub
aaa
cld
lods
push
outsb
outsl
lods
ds
ror
and
inc
mov
cmp
imul
shlb
fmul
es
or
pop
enter
fildl
scas
negl
divb
loop
jne
lret
or
push
push
test
push
mov
rolb
mov
cmp
pop
push
sbb
sub
and
dec
insb
or
addb
arpl
shll
pop
aam
mov
sub
repnz
mov
test
jbe
daa
mov
or
jle
add
add
inc
jnp
outsl
inc
insl
and
mov
xchg
xchg
loop
outsb
dec
mov
jo
sbb
icebp
dec
pop
imul
aad
insl
sub
sbb
and
loop
das
adc
and
sti
xor
mov
mov
shr
lret
lret
pop
push
out
shll
push
cwtl
imul
ret
out
push
push
or
mov
push
xchg
push
mov
movsl
int
das
icebp
gs
rcl
pop
pop
movsl
cmp
repnz
or
inc
and
sub
mov
inc
add
push
imul
lret
sbb
or
sub
lods
adc
cmc
dec
pop
inc
ret
sbb
cld
aad
movsl
fdivrl
rclb
jbe
mov
andb
push
xor
dec
push
xchg
pop
mov
les
xchg
inc
pop
cmp
lods
xchg
add
mov
fisttpll
pop
sti
push
add
dec
sbb
daa
loopne
sub
or
aad
cmp
bound
pop
push
mov
test
jp
dec
sub
lods
adc
jge
sub
push
pop
call
cmp
out
test
adc
adc
loop
cld
cmp
mov
cmp
push
lods
popa
mov
fst
sbb
test
and
xchg
pop
leave
es
outsb
aas
imul
rcll
outsb
adc
xchg
xchg
and
mov
mov
pop
push
fs
pop
mov
es
or
pop
gs
ret
mov
imul
push
int
mov
cmp
or
push
push
cmpsl
cmpsb
into
xor
push
add
adc
push
stos
sbb
movsl
mov
mov
mov
sub
cmp
mov
inc
sub
mov
cmp
xchg
jbe
mov
cmp
adc
mov
inc
test
and
sbbb
pusha
sub
inc
mov
sub
ret
mov
mov
lods
xor
push
sub
imull
or
lods
and
fcmovbe
test
jns
cmp
inc
mov
xchg
pop
mov
jp
cmp
sub
cmp
test
mov
mov
arpl
aad
inc
imul
pop
fistpll
ljmp
push
insl
stos
aam
sub
sbb
test
adc
sbb
shlb
divb
fcomps
push
leave
add
sbb
pop
xor
push
sub
notl
fidivrs
leave
sbb
mov
mov
xor
push
sub
pop
loope
lods
sbb
outsl
xchg
xor
and
pop
test
push
lods
inc
and
mov
sub
and
pop
rorl
mov
mov
shlb
imul
cmc
lret
insl
xchg
pop
xor
mov
out
popl
push
xor
mov
sti
into
inc
sub
inc
add
stos
jmp
pushf
or
lods
aad
jl
inc
inc
aas
subb
pop
sbb
dec
mov
lret
int3
inc
loope
inc
pop
pop
insl
jmp
gs
into
stc
fwait
outsb
enter
rcll
les
inc
push
aaa
adc
mov
popa
dec
and
outsb
pop
mov
lods
inc
pop
nop
cmc
clc
fildll
sbb
rcl
outsl
popa
or
mov
mov
push
pop
sbb
loope
movl
cltd
cmc
xlat
daa
inc
test
sti
or
gs
pop
das
mov
mov
mov
rcl
and
insl
int
sub
mov
push
pop
lods
fchs
dec
cmp
dec
mov
adc
outsb
fcompl
cmpsb
fucomi
das
pushf
dec
jno
sub
int3
sub
xchg
movsl
pop
push
xchg
enter
movsl
outsb
push
inc
sti
imul
push
pop
scas
push
jmp
jno
inc
inc
add
mov
add
dec
add
xor
mov
push
sbb
pop
test
mov
adc
dec
pop
repnz
movl
mov
adc
xchg
pop
mov
pop
pop
popa
imul
jno
rcrl
mov
xchg
aad
lcall
inc
pop
mov
aam
in
outsb
jbe
mov
data16
in
push
pop
imul
insb
lods
in
ret
sbb
imul
sbb
sub
lods
mov
push
test
outsb
inc
fldt
adc
ss
sub
pop
xor
push
jbe
sub
and
aad
cmp
dec
xchg
clc
mov
test
dec
hlt
bound
or
arpl
mov
xchg
fstpl
xor
xor
ss
int
sub
loop
dec
movsl
addb
pusha
mov
daa
subb
lea
adc
pop
push
fcomps
arpl
adc
pop
mov
xchg
inc
dec
cmpsl
or
call
fwait
ss
je
mov
cli
andl
int3
ret
cmp
adc
sahf
inc
test
mov
or
dec
inc
leave
aam
lock
pop
push
stos
inc
sub
pop
lcall
and
clc
andb
sub
cmpsb
cmp
or
data16
pusha
adc
out
in
push
and
test
sbb
cmp
xchg
sbb
xchg
aad
inc
mov
repnz
or
lcall
or
inc
mov
ret
inc
das
adc
mov
lods
xor
ds
push
or
dec
mov
test
dec
ljmp
jno
lret
jo
mov
imul
inc
fistpl
frstor
mov
insl
jge
mov
add
push
imul
and
sbbb
lods
ret
mov
imul
inc
je
push
lds
inc
movsb
dec
or
mov
iret
dec
clc
das
call
jbe
imul
xchg
cmp
insl
sub
fs
sub
lcall
push
js
scas
dec
pop
mov
js
fildl
pop
mov
mov
cmp
add
outsb
and
into
inc
pop
lods
adc
test
loop
sbb
lock
shrb
mov
mov
push
xor
scas
andl
imul
jl
es
pop
aaa
xlat
pop
and
jb
dec
hlt
jl
out
outsl
lcall
mov
mov
rcr
adc
inc
sub
mov
daa
jb
sub
push
cwtl
mov
xor
add
lea
cmp
xor
orl
add
sbb
sbb
test
lock
je
ror
jp
xlat
fcompl
pop
push
addr16
push
cld
mov
icebp
adc
and
sbb
shr
or
xchg
aas
jnp
aas
adc
or
adc
in
sbb
fsubl
adc
int3
inc
pop
mov
lds
loopne
inc
dec
inc
or
pop
sti
stos
outsl
dec
in
xor
add
pop
inc
popf
push
inc
pop
aam
mov
dec
in
add
cld
pop
pop
faddl
xor
xlat
into
dec
or
inc
mov
jge
add
sti
arpl
cs
add
jns
mov
gs
fs
mov
push
iret
jmp
rclb
push
aam
fsubrl
add
and
mov
cmp
fs
sbb
xorb
sbb
xor
rol
xor
mov
ret
mov
in
cld
data16
scas
je
adc
add
mov
fsubs
popa
add
or
push
and
push
out
clc
pusha
lret
or
ret
cwtl
je
mov
dec
add
mov
leave
fdivrs
lock
js
outsl
cmp
call
pop
fimuls
inc
or
push
call
aas
insb
clc
mov
aam
pop
aam
aaa
into
addb
popl
push
xchg
adc
rcrl
filds
rolb
aas
mov
cmp
repnz
leave
add
nop
out
in
push
jmp
fdivrl
ds
or
ret
jge
dec
push
ds
push
inc
shlw
bound
or
ret
pop
inc
push
notl
rorb
add
pop
in
mov
pop
fcmovu
ror
mov
inc
addr16
pop
mov
xor
and
mov
cmp
mov
mov
sbb
addl
ret
xchg
sbb
lret
stos
pop
movsl
out
arpl
testb
mov
das
into
mov
xor
sarl
pop
xchg
jo
inc
and
sub
pusha
insb
insl
pop
pop
dec
mov
xor
cmc
lea
push
or
cmp
sbb
dec
push
sub
stos
and
addr16
pusha
gs
mov
rcrb
dec
inc
test
and
in
lret
pop
or
cmpsl
and
outsb
dec
gs
push
addl
jae
rcl
das
pusha
sub
lea
fisubl
nop
stos
jne
pusha
test
test
xor
testl
cwtl
jae
lods
xor
xor
rclb
dec
jecxz
pop
stos
insl
push
mov
testl
add
push
loop
aam
jmp
mov
add
mov
jmp
lods
cmp
inc
mov
mov
in
lods
pop
add
out
fcom
dec
mov
xor
shll
stos
mov
xchg
mov
push
call
test
sub
test
stos
push
sub
jns
mov
cmp
cli
jno
stos
aad
adc
cmc
mov
push
insl
sbb
sub
adcl
jae
jo
pop
pop
neg
and
roll
pop
ljmp
mov
add
add
add
add
sti
int3
or
ret
sbb
sub
inc
dec
mov
dec
pop
loope
pop
test
inc
movsl
jge
add
push
mov
mov
out
mov
inc
or
ds
into
bound
scas
rcrb
mov
clc
xchg
dec
xor
test
ret
les
mov
sub
loop
lret
icebp
sbb
sbb
ret
mov
aaa
mov
sbb
push
mov
xchg
xchg
rol
enter
sub
pop
push
fildll
movsl
xchg
push
mov
inc
lea
push
or
fwait
pop
mov
outsb
insb
es
mov
adc
shlb
and
and
pop
mov
decl
rorb
int
inc
out
xor
andl
mov
test
shll
sub
jae
aam
pushf
outsb
and
mov
insl
xchg
in
jb
nop
mov
mov
and
xchg
sub
dec
insb
movsb
mov
mov
inc
jnp
push
or
xor
rcrb
test
sub
aam
arpl
push
cmp
push
push
sub
mov
mov
jb
addr16
inc
negb
xor
pop
iretw
mov
adc
mov
mov
xor
jae
mov
sub
fistl
mov
push
push
push
inc
rcrb
cmpsl
aad
xchg
or
aam
add
xor
push
mov
xor
ret
cmp
pop
inc
pop
mov
mov
jg
ss
cmpsb
xchg
mov
lcall
sub
ret
loop
dec
movsl
or
xor
pop
cmp
and
es
ja
mov
cmp
mov
out
adcl
and
into
inc
sub
adc
add
sub
xor
xchg
dec
daa
stos
add
es
mov
cmp
dec
and
add
push
mov
loop
mul
subl
jae
or
sbb
mov
lods
aam
fdiv
add
mov
mov
push
les
adc
add
insl
and
cmc
mov
movsl
push
scas
push
cld
ret
cmp
xchg
push
pop
mov
inc
lea
outsl
pop
andb
push
data16
and
stos
sbb
inc
push
inc
mov
add
mov
shll
iret
and
mov
andb
jno
mov
xor
dec
push
pop
test
clc
push
cmp
cmp
inc
mov
xchg
test
push
loopne
fdivl
les
scas
ds
mov
and
xor
repz
imul
mov
das
xchg
sub
cmp
leave
mov
scas
add
xorl
inc
sub
dec
pop
popa
adcb
adc
push
and
movsl
mov
sbb
mov
push
or
inc
int
sbb
sbb
fildl
jo
mov
push
sub
cld
dec
mov
mov
lods
loopne
sbb
addb
inc
jle
mov
add
pop
xchg
xor
xchg
addb
cld
push
rcll
call
cmp
pop
cld
mov
insb
aad
pop
pop
loopne
adcl
imul
shrb
dec
lods
ljmp
add
leave
mov
mov
add
sub
in
pop
stos
fwait
mov
cmp
pop
pop
rorl
dec
push
nop
xor
mov
mov
push
inc
addl
push
pop
gs
movsl
fiaddl
adc
or
movsb
add
das
lret
es
push
mov
imul
or
popa
cmp
cmpsb
idivl
mov
jge
xchg
movsl
cltd
or
lods
sub
and
xor
aas
add
push
xor
mov
insb
shlb
jle
sub
mov
add
sbb
dec
and
test
lods
inc
stos
mov
ret
ficoms
push
pop
inc
fdivrl
mov
lea
inc
enter
or
loop
push
xchg
test
pusha
popa
jecxz
movsl
push
stos
addb
ret
lods
adc
scas
mov
lea
mov
push
insb
mov
ss
mull
xchg
jo
push
or
mov
jne
push
push
outsb
inc
ss
int3
outsl
divl
dec
enter
ret
stos
mov
push
das
pop
inc
mov
xlat
sbb
gs
pop
lods
push
push
inc
imul
mov
mov
push
adc
and
push
push
xor
mov
nop
aaa
push
shll
das
jecxz
test
clc
dec
ret
sub
inc
and
popa
lret
aam
sub
movsl
inc
aaa
imul
std
mov
call
movsb
or
jge
fucom
add
add
bound
mov
push
mov
loop
inc
rcl
mov
aad
push
xor
sbb
sti
mov
into
mov
in
fsubr
stos
aad
jg
or
and
insl
dec
xor
dec
in
push
push
inc
divl
lea
sbb
loop
inc
cmpsl
mov
push
inc
mov
sub
fiaddl
dec
ret
in
fmuls
and
lret
notl
mov
imul
rcll
divb
lods
lcall
stos
add
cmp
inc
mov
inc
mov
fmul
sahf
fmuls
mov
pop
subb
push
pop
sub
mov
xchg
jno
sbb
mov
mov
imul
lods
scas
jns
or
inc
mov
dec
divl
cmc
hlt
jno
aam
ret
mov
test
pop
hlt
add
add
fwait
cmp
jge
scas
lret
or
cmc
inc
or
mov
bound
std
rcr
xor
push
scas
sarl
cmp
add
call
sbb
or
and
cs
cmp
je
or
lcall
inc
arpl
leave
mov
js
fstpt
inc
mov
inc
mov
inc
xchg
push
js
insb
insl
mov
or
cmp
push
sbb
mov
cmp
push
fcomps
decl
xchg
pusha
sbb
ficompl
jb
pop
inc
out
push
xor
into
sub
test
imul
mov
or
scas
sbb
adc
das
push
inc
sbb
sarl
sbb
or
push
pusha
lods
outsb
lods
add
scas
xor
push
push
ret
cmc
mov
push
push
out
out
mov
popa
push
inc
ret
fildl
negl
aad
pop
addb
rclb
xchg
orb
stos
mov
insl
jle,pn
outsb
mov
sub
lret
xchg
fucompp
mull
adc
push
or
popf
xor
mov
mov
lret
fdivs
ficoml
sbb
ja
sti
es
lods
pusha
cmp
sbb
into
sub
imul
incb
pop
pop
cmp
mov
xlat
mov
push
ret
loop
outsb
movsl
push
pop
es
mov
es
out
and
data16
rcll
jecxz
mov
test
pop
xor
inc
mov
mov
sub
cmp
sbb
hlt
lcall
push
ljmp
lods
inc
push
cmp
int
imul
je
push
or
or
adc
pop
adcl
insl
sbb
lret
in
jl
push
xor
adc
push
sub
lods
inc
mov
xlat
inc
test
out
xchg
or
jb
inc
inc
xor
push
fwait
xor
push
sbb
xchg
jns
mov
xchg
xor
sarl
inc
mov
and
mov
xor
ret
movsl
adc
xor
and
add
xchg
in
inc
lods
push
fbld
lret
xchg
add
lods
imul
ds
cmp
cmp
fwait
testb
test
inc
jbe
inc
cmp
sbb
sti
cmp
xor
push
inc
rcrb
cmp
pop
lods
ret
push
or
dec
arpl
pop
mov
test
ret
sbb
mov
movsl
cmpsb
addb
inc
xchg
test
or
push
inc
lods
popa
insb
cmc
lds
dec
lods
push
rcl
pushf
pop
mov
sub
clc
gs
sbbl
inc
and
pop
cwtl
push
out
cmp
xchg
in
rclb
push
lea
outsb
dec
dec
inc
rcll
mov
cmp
mov
test
loope
sub
mov
dec
lods
loopne
sbb
and
mov
inc
loope
pop
lea
add
adc
sbb
mov
push
andl
xor
lods
insb
scas
incb
push
push
mov
dec
test
in
push
sub
jo
or
pop
imul
test
subb
idivl
nop
sub
push
inc
mov
fildl
test
loop
and
imul
mov
mov
cmc
mov
fisubrs
inc
adc
adc
jmp
outsb
sub
inc
dec
mov
push
pusha
test
repnz
push
outsb
int
mov
lahf
sub
mov
jo
mov
or
test
or
orl
gs
out
shll
mov
sbbb
inc
sub
jno
movsb
loopne
mov
and
xor
lcall
push
pop
pushf
fimull
mov
mov
inc
cli
mov
insl
mov
ret
pop
push
lea
adc
or
and
xor
pop
lea
mov
and
enter
lods
push
mov
push
mov
add
enter
rorb
inc
aaa
sub
or
out
stos
aad
ficompl
shlb
and
jo
mov
dec
add
jmp
pusha
jae
scas
cltd
es
pop
cmpsb
pop
test
or
push
mov
psubsb
xor
mov
stos
mov
sub
mov
rorb
clc
dec
inc
add
sub
push
lods
mov
cmp
fdivl
sub
and
in
shll
mov
mov
adc
push
cmc
aas
push
rcll
dec
cmp
and
pop
dec
or
outsb
push
inc
xchg
or
inc
test
rcrl
push
pop
aam
add
push
sub
jg
sarl
sbb
mov
jne
enter
out
pop
cmp
xor
fmuls
outsl
xor
push
and
scas
insl
imul
leave
das
mov
inc
stos
or
push
arpl
sub
sub
add
mov
push
push
stos
cs
es
push
movsl
loopne
sub
pushf
and
es
ja
orb
xorb
push
or
xor
or
sbb
push
cmp
or
lock
push
imul
add
mov
pop
inc
xchg
inc
lods
xor
inc
push
dec
push
push
push
cmp
pop
ret
xchg
or
test
mov
dec
les
push
push
test
rclb
xchg
loop
cld
movsl
aaa
push
jno
push
add
and
lret
les
imul
pop
inc
adc
xchg
sub
testl
fucomi
inc
aam
push
xorl
jo
sub
sub
and
push
movsb
xchg
xchg
xor
lea
movsb
mov
and
jecxz
jno
mov
test
loop
push
push
or
xor
or
adc
xchg
cltd
sub
push
jno
mov
outsl
jle
adc
test
xchg
jo
mov
push
mov
pop
xchg
data16
adc
aad
or
pop
sub
mov
adc
arpl
lret
aas
push
push
sub
out
ror
xchg
shrl
imul
xlat
rcll
push
sti
out
pop
cli
mov
or
mov
mov
or
testl
xor
sbb
add
imul
dec
sbb
test
cltd
movsl
nop
mov
mov
push
cld
dec
jp
xor
mov
movsl
jae
loop
movsl
push
in
or
push
pop
xor
push
addb
push
ljmp
out
aaa
fiaddl
sbb
pop
lds
ret
fsubrs
ret
rolb
adc
test
stos
push
test
pop
mov
inc
xchg
out
pop
xor
and
dec
push
sub
cmc
add
ss
movsl
out
mov
or
push
push
and
mov
andb
cmc
jae
push
or
mov
imul
adc
mov
inc
cmp
outsl
mov
mov
mov
dec
mov
cmc
roll
jne
pop
cmpsl
and
dec
das
lods
movb
adc
and
add
mov
push
push
mov
inc
jbe
outsb
xchg
pop
push
lea
mov
inc
lods
ss
sar
pop
lahf
mov
rolb
jo
ljmp
imul
push
arpl
lods
push
push
inc
fcoml
mov
pop
andb
fistpl
sub
es
push
pop
or
mov
mov
inc
mov
adc
jg
dec
cmpsl
loopne
out
inc
idivb
and
stos
jno
decb
adc
add
add
push
mov
adc
dec
cmp
add
rclb
shl
shlb
adc
movsb
clc
add
cmp
cld
or
add
mov
and
flds
dec
push
insl
xor
sbb
dec
adc
fiadds
add
fisubs
cmp
sub
fstl
xorl
add
mov
std
sub
sub
or
dec
xor
xor
subl
fisubrl
jns
inc
sbb
out
add
out
mov
inc
mov
clc
orb
xor
add
jnp
sarl
fistps
or
fisubrs
push
push
pop
mov
out
xlat
and
cli
cmp
gs
sub
scas
add
clc
sub
mov
adcl
jp
or
mov
fisttpl
mov
aas
sub
dec
repnz
pusha
push
xor
lds
je
add
xchg
call
xor
mov
push
movsb
js
xchg
push
pop
xchg
adc
cmpb
mov
stos
adc
shlb
call
mov
xor
aaa
jmp
cmp
call
xor
or
and
adc
les
loope
inc
xor
ret
repz
les
js
mov
cmpsl
nop/reserved
add
es
pop
cmp
push
and
test
loopne
es
mov
lea
icebp
push
dec
or
fdiv
and
incl
fcmovne
sub
mov
sbb
jg
mov
imul
push
std
jb
ds
rorl
loopne
push
push
push
adc
cmp
test
sub
scas
sbb
jb
mov
adc
inc
in
dec
iret
inc
loop
xor
sub
psubsw
and
arpl
es
xchg
sub
mov
add
adc
inc
sbb
arpl
lcall
mov
mov
push
ret
xor
push
mov
dec
mov
hlt
scas
and
push
aam
adc
mov
rcrb
cmpsl
test
aad
inc
movsl
jo
shrl
sub
cmpsb
sub
sub
mov
and
push
es
sub
cwtl
pop
or
cmpb
xor
push
sub
mov
mov
sbb
addb
inc
sub
je
lods
push
fs
xor
add
aaa
mov
lods
insl
fnsetpm(287
push
out
jno
push
sub
aad
cltd
xor
sbb
push
add
dec
mov
loop
xor
mov
adc
outsb
sub
fcoms
pop
rclb
rol
pop
addr16
push
xor
push
loop
inc
mov
dec
insb
shlb
mov
inc
lods
inc
sub
xor
icebp
jmp
mov
cmpsb
loopne
xor
mov
or
jns
xorb
pop
push
sbb
xchg
mov
cmp
sbb
xor
or
insl
inc
mov
jno
push
xor
mov
out
or
fs
mov
and
sbb
mov
cmp
lahf
sub
mov
push
push
pop
stos
xchg
xchg
mov
jno
inc
or
add
test
insb
add
insb
aam
popa
into
rolb
in
jns
sub
adc
scas
mov
mov
jo
sub
pusha
into
sbb
mov
subl
roll
das
je
jne
sbbb
xor
shrl
xor
add
jg
mov
push
filds
mov
inc
mov
imulb
lock
adc
gs
cmpsl
aad
or
clc
test
mov
inc
sub
mov
pushf
sub
inc
jbe
sbb
in
or
pop
sub
or
xchg
dec
xor
sub
inc
sub
pop
imul
pop
mov
popa
push
imul
test
outsb
jle
push
sbb
jae
dec
inc
and
inc
mov
sub
inc
repnz
imul
hlt
xchg
adc
add
cltd
jp
sub
add
lds
cmp
iret
xor
push
mov
test
mov
imul
pop
test
shl
sub
stos
cmp
sahf
or
outsb
jnp
sub
lret
sub
in
sbb
cmp
mull
push
sbb
jg
push
push
loope
in
sbb
dec
pop
shrl
in
jecxz
jle
fcmovnb
xchg
imul
imul
loop
pushf
gs
mov
push
call
ret
push
ret
sub
test
mov
aaa
icebp
cmpsl
aad
push
mov
popf
jmp
xor
mov
sbbb
test
stos
adc
xchg
mov
lea
adc
fwait
test
push
dec
jbe
mov
adc
adc
sbb
add
cwtl
push
int
imul
das
jp
cmpsb
ss
inc
mov
push
or
lea
push
xor
lea
jmp
loope
cld
repnz
inc
inc
mov
sub
lret
push
xchg
test
mulb
or
imul
mov
sbb
cmc
dec
sub
test
push
adc
pop
push
push
jmp
cmc
int3
xchg
dec
insl
aad
sahf
mov
xchg
inc
push
stos
inc
insl
in
ret
and
stos
call
cltd
mov
mov
xchg
and
inc
shrb
aad
mov
outsb
push
mov
sub
hlt
fists
inc
stos
push
testb
enter
sub
adc
mov
rcll
test
bound
insl
adc
dec
lods
insl
movsl
jne
jno
fs
lea
aad
fsubrl
push
mov
cmpb
call
pusha
mov
add
or
cmc
mov
jg
xchg
cmp
sbb
cwtl
push
push
stos
jnp
cmp
push
mov
xchg
cwtl
sbb
sub
jno
pop
push
dec
and
xor
mov
lods
out
xorb
add
cmc
cmc
lods
loopne
aad
jae
push
sbb
int3
add
stos
movsl
test
mov
add
cmp
dec
aad
movsl
mov
sbb
jle
adc
mov
insb
lods
mov
pop
mov
fcomip
mov
aad
mov
or
outsb
push
imul
aas
test
and
sahf
mov
mov
sub
pop
iret
nop
dec
inc
fsubl
leave
clc
insl
dec
test
or
aaa
mov
jecxz
inc
cmp
stos
add
es
call
in
cmp
ret
sbbl
xor
loopne
mov
mov
mov
xor
stos
push
sahf
or
es
inc
xorb
jg
movl
in
and
mov
adc
pop
sub
sbb
hlt
sbb
mov
and
in
add
rorb
add
pusha
mov
maskmovq
notl
push
adc
shl
inc
out
mov
inc
jns
push
add
mov
jle
pop
fbld
fdivrl
xchg
fwait
insb
sub
xor
lock
push
push
xchg
fmuls
xor
xor
test
lret
aas
pop
xchg
cmp
jbe
mov
enter
inc
js
int3
andb
pop
por
je
js
push
fistps
testb
ds
xchg
mov
mov
adc
xchg
sbb
sbb
and
loopne
cmovne
daa
cli
cld
subl
loope
xlat
mov
adc
sub
mov
sbb
faddl
je
stos
xor
sub
sbb
cmp
inc
aad
out
cwtl
jb
and
and
dec
jg
mulb
pop
jle
cmp
je
push
and
xchg
mov
repnz
sbb
cwtl
aad
lret
mov
inc
xor
dec
jbe
aas
add
cmp
inc
ret
mov
jo
mov
shl
mov
sub
faddl
ljmp
je
sbb
in
std
inc
lock
pop
or
sub
sbb
lret
push
mov
inc
push
imul
xchg
popf
or
dec
mov
or
popa
in
shll
push
push
push
xchg
mov
cld
push
push
call
and
lods
xor
pop
inc
and
insb
loopne
and
pop
shlb
mov
xorb
scas
and
enter
lcall
pop
cmp
iret
shrb
and
rorb
rorl
roll
inc
call
pop
jge
jge
mov
inc
out
das
mov
dec
xchg
les
xchg
jno
out
dec
or
add
hlt
movl
shlb
add
cmp
xchg
gs
ficoms
lods
orl
add
enter
test
and
push
xor
shrb
sti
mov
mov
nop
fistps
aad
jmp
dec
lcall
or
lcall
scas
lods
loop
dec
add
pop
sub
pop
aad
pop
xchg
imul
mov
dec
push
cltd
push
fildll
xchg
add
push
sub
aaa
cld
iret
push
xor
std
cld
loop
jge
iret
xor
int3
xlat
rolb
jp
stos
cld
inc
dec
mov
cmp
hlt
push
enter
cld
xor
insb
inc
fists
enter
sgdtl
fnstsw
adc
jne
cli
push
or
scas
enter
or
dec
lock
cmp
lods
or
cmp
ljmp
rcrl
mov
inc
cmpl
sbb
pop
cmp
dec
add
stos
enter
sub
lods
push
sub
call
sub
cs
pop
adc
adc
clc
cmp
dec
in
imul
aaa
mov
or
fstpl
and
pop
andb
xor
addb
mov
jbe
sbb
jns
imul
ljmp
daa
push
xorl
xadd
loope
xlat
adc
sbb
icebp
dec
mov
dec
mov
dec
jg
sub
add
lods
mov
aad
xchg
sub
jb
and
sub
mov
mov
outsl
pop
inc
add
push
in
negb
mov
aam
fdivl
xchg
dec
cmpsl
ss
cmp
test
mov
mov
cmpsb
mov
inc
stos
sub
out
ret
jo
loop
sub
or
push
and
pop
call
dec
and
add
lods
fdivs
add
add
aaa
in
push
test
inc
loop
mov
mov
fimull
cmp
nop
mov
cmc
movb
inc
jmp
inc
fdiv
into
add
ret
sbb
xor
in
xchg
call
jno
pop
mov
mov
push
aam
enter
push
test
inc
mov
inc
aam
adc
mov
pop
mov
or
aam
push
inc
xor
pop
test
imul
faddl
pop
jmp
test
lods
mov
adc
mov
into
aas
ljmp
sub
and
push
push
pop
sbb
cmp
dec
into
in
rolb
xor
mov
das
cwtl
or
imul
pop
div
and
shlb
and
cmpsb
adcb
mov
or
cs
mov
and
dec
mov
and
and
mov
insb
addr16
fdivrl
push
ss
xchg
scas
shrb
add
mov
or
fmuls
test
test
das
add
stos
add
xorb
xchg
cld
pushl
add
sbb
lods
cltd
sbb
ficoml
push
sub
xchg
jge
and
jno
and
inc
push
fsubrs
cli
push
loopne
mov
imul
sbb
adc
pusha
jnp
orb
or
mov
mov
js
push
push
cmp
and
and
inc
xor
test
push
stos
sub
mov
add
adc
movsl
xchg
dec
gs
mov
int
inc
or
lret
push
mov
ret
dec
jns
inc
mov
outsb
fisubrs
sarl
mov
jno
or
nop
fsts
mov
dec
push
loopne
sbb
lods
lods
shlb
mov
or
sbb
xor
push
divl
xorb
sub
jl
cmc
rorl
ljmp
int
mov
mov
mov
into
out
and
das
xor
add
inc
test
ret
jbe
pop
test
inc
lea
sub
cld
test
push
mov
adc
sub
adc
xchg
dec
mov
sub
mov
bound
sbb
xchg
mov
sbb
and
push
mov
push
add
movsl
jb
stos
out
les
ficoml
insl
lods
xor
insl
lods
rcrb
leave
enter
aaa
dec
lods
shlb
cmp
dec
mov
jl
ret
and
sub
inc
sub
ret
jp
push
sbb
cmp
add
lcall
add
fsubp
outsb
fdivrl
repnz
mov
cmpsb
incl
add
push
cmp
push
dec
and
mov
inc
mov
out
xchg
repnz
test
mov
push
bound
popa
jae
lods
sarb
outsl
imul
cli
mov
push
cmc
stos
stos
mov
orl
arpl
movsb
movsl
push
pop
inc
or
insb
test
lret
jo
pop
pop
mov
bound
mov
lods
push
pop
and
rcrb
idivl
add
lret
dec
add
lret
sbb
iret
xchg
pop
imul
jbe
mov
add
jecxz
inc
test
popa
subb
push
repz
adc
and
cmp
adc
lods
dec
mov
mov
shll
mov
pop
and
xor
lcall
inc
or
add
outsb
pop
add
insl
popa
inc
inc
lods
adc
sbb
mov
std
mov
icebp
movsl
insl
stos
mov
push
dec
xchg
pop
fldt
pop
out
inc
pop
leave
adc
rclb
sub
xchg
inc
and
outsb
adc
and
outsb
aaa
push
sub
or
push
lods
add
outsb
mov
sub
pop
sub
lret
divl
xchg
std
xor
push
push
jle
in
push
xchg
imul
pop
test
sbb
inc
insl
push
aaa
loop
xor
pop
push
xchg
sub
jne
jl
ss
pop
js
arpl
mov
into
insb
inc
fldt
jb
push
sbb
orl
xchg
mov
incl
stos
add
ret
push
or
jae
loopne
fcmovu
push
call
jns
mov
add
popf
push
push
lret
pop
mov
outsl
mov
mov
sbb
aaa
xchg
imul
test
add
lret
mov
inc
and
movsb
inc
es
rcl
mov
xchg
sbb
in
mov
aad
insl
lret
loop
sub
sbb
jmp
imul
testl
ret
pop
outsl
in
insl
dec
push
stos
add
es
popa
sub
fnsave
xchg
popa
stos
aas
cmp
cmpsb
pop
push
inc
mov
stos
push
gs
clc
jp
pop
or
mov
mov
xchg
or
lret
dec
les
inc
or
push
data16
mov
incb
or
pop
stos
mov
sub
sub
sub
test
mov
gs
push
sbb
xchg
imul
insl
push
xchg
push
pop
outsl
xor
rolb
imul
cmova
xchg
decb
add
addb
test
jge
dec
and
adc
jp
xchg
pop
jb
nop
ret
pop
cld
push
jmp
adc
mov
inc
mov
dec
xor
push
mov
in
jp
add
paddsb
mov
arpl
aam
inc
in
inc
add
sbb
ficompl
lock
int
inc
or
push
fisubs
cmpsl
mov
orb
sbb
mov
mov
pop
stos
outsl
mov
jns
dec
mov
mov
and
out
or
mov
pop
sarl
mov
add
mov
add
hlt
xchg
into
pop
mov
incl
or
pop
add
dec
jge
sub
cmp
aad
jg
outsl
je
les
and
stc
sbb
and
add
hlt
cld
adc
jp
add
push
mov
sub
cltd
inc
mov
rorl
push
sbb
movl
shll
push
push
sub
fdivs
lcall
mov
xchg
inc
inc
leave
sbb
xor
adc
pushf
push
add
push
sub
adc
mov
movb
stos
inc
wrmsr
jp
imul
pop
je
fsubr
fmull
sbb
pusha
pop
stc
mov
aad
test
or
mov
loopne
or
add
mov
xor
nop
nop
movsl
xchg
shrb
test
testb
cmp
hlt
fcoml
loop
inc
movsb
outsb
test
aam
lea
jne
and
andb
loop
add
add
jae
ret
test
lods
cld
add
inc
sbb
nop
sub
hlt
and
fdiv
mov
insl
mov
out
in
add
sbb
test
icebp
sbb
xor
xor
jbe
fimuls
fiadds
mov
lods
inc
pop
dec
jmp
add
add
or
data16
mov
loope
push
pop
push
and
sbb
xor
sbb
or
inc
movsl
lcall
mov
cwtl
insl
mov
hlt
test
test
fisttpl
fldcw
xchg
imul
push
sbb
in
je
test
arpl
adc
add
movsb
loope
lahf
or
gs
imul
scas
ss
push
out
and
aaa
jecxz
shlw
das
jbe
stos
addr16
xchg
scas
mov
adc
sbb
pop
dec
stos
xchg
loop
push
call
sti
adc
in
hlt
push
test
lds
aam
nop
sbb
mov
adc
push
test
push
mov
test
mov
inc
jle
xchg
add
repnz
test
aad
pop
subb
cmc
push
cmp
push
sbb
lock
inc
addl
cmp
xor
insl
pop
inc
popf
mov
inc
mov
in
xor
fwait
inc
and
shll
adc
cmpsb
stos
push
and
arpl
push
push
stc
out
cmp
pop
adc
push
xchg
mov
ret
mov
jo
out
mov
xchg
lea
fiaddl
out
fisttpl
dec
rolb
movsl
addr16
inc
pop
xor
push
stc
and
inc
mov
push
pop
dec
mov
push
stos
lods
jmp
pop
xorl
icebp
mov
lds
movsl
push
mov
fmull
push
push
pusha
mov
push
adc
mov
sub
subb
adc
push
adc
insl
add
les
mov
and
pop
dec
addl
sub
mov
or
or
sbbb
add
dec
xor
push
cmp
scas
sub
pop
mov
dec
inc
sub
add
jb
push
xor
add
and
das
test
sbb
test
jne
jo
stos
test
mov
aad
outsb
es
pop
cmp
imul
push
add
daa
das
or
push
lret
push
cmp
mov
mov
shrl
cmc
pop
push
sbb
and
clc
rol
inc
into
mov
mov
addl
or
or
addb
jo
gs
and
jge,pn
mov
sub
pop
lcall
aaa
call
push
sbb
in
out
mov
aas
rol
jmp
push
add
jge
sbb
fdiv
and
inc
mov
test
lahf
std
imul
jae
ret
jmp
pop
in
pushf
lret
mov
xchg
mov
pop
mov
add
mov
mov
push
mov
xor
cmp
add
insb
cmp
aaa
push
adc
mov
out
mov
dec
aad
in
and
mov
inc
push
test
mov
mov
xorl
and
cmpsl
push
loop
inc
lods
push
mov
adc
test
ret
pop
xor
int3
test
push
dec
push
stos
sbb
movnti
mov
add
adc
push
sub
jle
adc
dec
and
es
dec
div
and
cmc
into
adc
test
aad
mov
dec
pop
jmp
mov
mov
mov
push
mov
daa
push
inc
imul
out
sub
xor
in
rorl
movsb
push
push
pop
mov
pop
aad
mov
stos
and
test
lods
shl
pop
test
sub
mov
popa
sub
lods
xchg
xchg
and
das
push
call
dec
xor
lret
push
and
aam
iret
jns
push
sub
dec
mulb
aam
movsl
shlb
testl
movl
mov
inc
int3
mov
push
mov
jbe
loop
inc
movsl
push
arpl
mov
xchg
xchg
push
cli
xor
xchg
xchg
mov
imul
jno
mov
xor
aam
add
add
cmp
shlb
pushl
iret
and
stos
mov
shll
lods
repnz
mov
push
sub
xchg
ret
aam
test
fwait
sbb
mov
inc
adc
cmp
mov
pop
loope
addb
adc
xchg
outsb
mov
adc
sub
dec
pop
push
pop
mov
sbbb
push
push
aas
mov
aad
testb
inc
or
addb
mov
push
adc
rorb
lods
cs
ds
push
pop
or
out
das
xor
pop
mov
pusha
sub
lods
lods
sub
jle
mov
push
es
jo
sbb
mov
inc
sub
push
adc
mov
pop
add
push
sbb
add
out
mov
cmp
test
rorl
push
add
andb
fistpll
inc
ret
xchg
fcmovnu
inc
inc
aam
ret
shlb
pop
add
push
pusha
sub
sbb
inc
test
push
int
sub
test
add
jo
cmc
pop
inc
test
push
pop
xchg
stc
es
cld
mov
xor
push
dec
lods
adc
jae
imul
mov
dec
mov
adc
imul
push
add
out
push
inc
roll
xor
mov
pop
ret
int
ljmp
out
mov
inc
add
hlt
inc
rcrl
pop
sub
int3
inc
xor
mov
cwtl
add
fldt
cmp
mov
inc
je
fmuls
imul
or
ficoml
mov
fcompl
mov
push
mov
cmpb
adc
or
xchg
jb
adc
nop
and
pop
and
rcrb
dec
cmp
shrb
sub
inc
out
test
sub
pop
or
pop
lahf
push
fdivl
xlat
push
mov
pusha
push
cmpsb
push
sti
dec
and
addr16
sbb
iret
pop
inc
sub
fs
dec
rcll
sub
add
jle
adc
out
mov
lods
jg
or
inc
es
add
mov
inc
mov
aam
loop
mov
add
adc
adc
shrl
sub
mov
adc
cmc
push
dec
lahf
push
out
inc
cmpsl
pop
or
sbb
or
push
adc
and
neg
loop
xor
fs
mov
je
loope
rcrl
pop
flds
adcl
sub
dec
xchg
stos
sbb
xor
sbb
repnz
repnz
lcall
sbb
scas
adc
rorl
or
add
mov
fs
add
xor
int3
sbb
fistpll
add
and
loopne
sbb
add
and
insl
push
dec
dec
cmp
adc
jb
negl
fwait
test
enter
jmp
adc
loopne
adc
jbe
inc
or
push
mov
ret
sub
repnz
cmpsb
imul
orb
rclb
push
push
inc
add
rcr
repz
imul
xchg
sub
cltd
loopne
xchg
icebp
int3
enter
cmc
xchg
nop
pop
pop
cmp
cmp
xchg
or
jecxz
add
cwtl
lock
sub
adc
cmp
add
fisubrl
pop
mov
sbb
adc
sti
sbb
sbb
jb
dec
insb
hlt
dec
sbb
jg
repz
jne
and
dec
jmp
pop
ss
sbbl
push
jmp
add
jno
int3
lods
push
adc
pop
push
adcl
sub
push
test
inc
mov
pop
movsl
mov
negl
dec
mov
lods
push
rorl
pop
lret
rolb
add
push
and
rolb
insl
pop
aad
and
or
inc
xchg
adc
cli
not
mov
repnz
push
in
dec
mov
mov
ja
or
or
mov
rorl
test
sub
or
push
push
or
adc
adcl
mov
and
sbb
xor
xor
dec
insl
test
inc
push
cmp
aad
inc
or
push
mov
pop
imul
xchg
jle
adc
inc
stos
aaa
xchg
imull
push
push
or
call
addb
add
adc
lret
push
ret
pop
sbb
sbb
mov
stos
mov
mov
sub
mov
sti
es
out
add
pusha
cmp
mov
cmc
pop
add
xchg
inc
inc
xor
push
negl
dec
inc
adc
mov
inc
sub
sub
lds
or
sub
jecxz
subb
inc
sbb
pop
cmp
aaa
fcoml
xchg
inc
mov
and
adc
sbb
loop
and
and
pop
xchg
mov
push
sbbl
adc
adc
fs
xchg
add
dec
add
mov
mov
mov
cmp
fists
data16
dec
sub
jbe
stos
inc
mov
inc
add
filds
sub
out
nop
aas
roll
xor
pop
das
sub
adc
lods
cmp
inc
mov
adc
dec
adc
add
int3
popa
mov
adc
js
mov
add
sbb
lock
les
mov
les
add
mov
pop
les
pop
xchg
and
outsb
xor
outsl
add
inc
mov
cmove
es
sub
mov
mov
mov
lret
mov
inc
pop
push
pop
pop
cmpsb
and
js
addr16
adc
mov
or
mov
jmp
xor
mov
cli
mov
cmc
sub
sbb
fidivs
mov
gs
adc
lods
jae
lock
fcoms
dec
fsub
fwait
insb
pop
mov
or
or
xchg
mov
inc
fwait
mov
imul
mov
jne
dec
push
add
or
xor
test
jge
int3
pop
pop
cmp
adc
jo
out
mov
cmp
inc
dec
cwtl
adc
mov
dec
out
xor
push
or
and
mov
inc
adc
push
sub
push
das
leave
fwait
lods
or
call
fldt
dec
adc
jge
andl
test
cmpsb
js
add
add
xor
jge
cmp
dec
jl
mov
jno
adc
xchg
lock
loope
lea
ljmp
jns
sub
in
add
inc
mov
ret
scas
add
jg
fdivrl
pop
xchg
push
rolb
and
inc
sarb
hlt
arpl
or
mov
sbb
scas
bound
mov
les
adc
in
rcrb
add
pop
mov
or
mov
inc
pop
test
lock
ud2
and
stos
gs
aas
ds
sti
mov
arpl
adc
js
fdivr
pop
mov
push
dec
dec
cld
rorb
fcoml
pop
jno
rclb
lods
test
cwtl
clc
stos
mov
push
push
movsb
addb
arpl
shll
scas
pop
mov
xchg
fsubr
inc
push
add
int
sbb
loope
push
xchg
and
or
sbb
mov
sbb
jne
lods
and
mov
push
push
or
pusha
loope
push
lea
xor
sub
daa
add
cmp
sahf
loope
das
cwtl
mov
or
cmpsl
cltd
leave
sbb
or
pusha
daa
xchg
dec
xor
pop
or
testb
cmp
lahf
or
sbb
sub
imul
and
inc
add
mov
gs
mov
xor
lret
aam
inc
loop
sbb
fistpl
testl
jge
sub
mov
push
in
xor
pop
pop
or
cmc
xor
rcl
aad
pop
cmp
inc
test
push
adc
xor
sbb
lret
lret
sub
cmc
int
push
cmp
mov
addl
pop
mov
adc
lods
sbb
cmp
push
xor
ror
imul
inc
pop
mov
sbb
cmc
lea
inc
dec
mov
shlb
ss
rcll
push
xor
sbbw
mov
ret
mov
mov
inc
adc
subb
sub
into
cmpsl
sub
dec
inc
push
sub
adc
sub
leave
sbb
mov
jns
stos
adc
pop
lods
int
popa
mov
daa
in
int
push
and
mov
push
in
add
xchg
and
test
inc
cli
lods
shlb
and
and
inc
sub
rcll
rorb
mov
push
xchg
imul
xchg
es
jb
pop
fadds
lods
es
push
push
jecxz
and
test
mov
aam
sub
into
or
dec
aad
add
adcb
add
mov
das
jg
inc
popa
stos
or
sub
add
jmp
add
enter
stos
mov
jns
sbb
mov
ret
stos
add
mov
adc
or
lods
adc
sub
pop
mov
ret
push
movsl
or
sub
sbb
push
bound
xchg
aaa
sbb
inc
xor
int
pop
or
cmc
lret
mov
lods
das
inc
mov
mov
es
push
ds
mov
adc
test
add
lret
push
mov
xor
test
pop
inc
pop
add
inc
dec
pop
mov
xchg
cmp
ljmp
inc
arpl
dec
dec
adc
sub
lahf
mov
out
idivl
and
and
leave
out
xchg
bound
inc
jo
cmp
push
push
jae
dec
mov
pop
test
fisubl
lea
aas
sub
push
addb
xchg
sarb
xchg
scas
and
inc
shrl
insb
adc
xlat
sub
sbb
push
push
std
inc
push
in
test
sub
add
mov
out
or
and
mov
into
lods
dec
rclb
dec
inc
scas
mov
icebp
sahf
outsb
aaa
push
rorl
jne
ret
test
mov
das
inc
outsb
or
into
jecxz
movsl
xor
int
test
jo
sbb
mov
and
push
test
loopne
push
xor
popf
gs
jp
cs
push
js
cmp
or
in
fldl
imul
aam
inc
and
cs
sub
mov
loop
add
idivl
inc
pop
stos
mov
fstpt
cmp
jg
pop
mov
enter
push
out
data16
mov
je
mov
cmp
pop
mov
lret
je
or
push
cs
stos
push
adc
xchg
push
popa
mov
cmp
adc
pop
mov
xchg
jns
adc
lods
mov
insb
push
popa
test
mov
test
rcl
jbe
inc
sbb
and
add
stos
sub
push
fsts
lea
push
pop
shr
inc
sub
subb
push
ficompl
push
xchg
pop
mov
push
xchg
rcll
sub
jecxz
mov
xchg
sub
dec
rcl
push
sbb
xor
xchg
sub
and
push
push
mov
jle
and
inc
mov
sbb
jb
les
cld
pop
movsb
sbb
lea
xor
xor
cwtl
jo
and
xchg
pop
sbb
cwtl
loope
mov
lea
into
push
sub
rorl
push
sub
shrb
fcomp
loop
and
sahf
aam
pop
lods
add
movlps
repz
stos
aad
fcmovb
xor
dec
sbb
push
pop
outsl
notl
push
mov
add
mov
in
andb
aad
cwtl
inc
js
mov
cmp
cmc
movb
loop
xor
lea
aaa
out
jb
mov
mov
push
ss
sub
adc
or
pop
and
push
fiaddl
ret
sbb
scas
xchg
rorl
sub
jmp
jnp
lods
ja
loope
sbb
or
sahf
inc
idivb
mov
push
mov
pop
in
jmp
cld
insl
ss
pushf
dec
mov
inc
jb
fwait
or
add
sbb
imul
test
pop
movsl
dec
jl
into
daa
pusha
mov
jbe
aad
stos
adc
inc
push
loop
xchg
sbbb
lods
das
pop
xchg
test
push
in
push
int3
lea
insb
pop
push
in
mul
and
mov
adc
inc
mov
fs
rclb
jno
xor
loop
add
or
jg
rcrb
adc
test
add
or
iret
fistl
jne
test
xor
pop
test
stos
cltd
test
int3
adc
or
or
push
sub
lods
jne
mov
loope
aam
mov
mov
or
fcmovb
push
sub
jl
or
push
cwtl
aam
scas
cmpsl
imul
push
jl
push
mov
in
cmp
imul
aad
out
and
push
mov
mov
les
push
mov
movsl
mov
dec
xchg
addb
sub
xor
pusha
add
adc
subl
xchg
rclb
and
outsb
jbe
fstl
mov
push
andl
adc
lods
aam
sbb
push
mov
push
or
and
push
cmp
negl
xor
fs
sub
xchg
jp
inc
popa
mov
addb
adc
adc
mov
mov
insl
sbb
or
loop
filds
jno
imul
dec
ljmp
sbb
sub
xor
in
fildll
mov
mov
or
or
aaa
push
inc
sub
inc
incl
xor
dec
adc
cld
outsl
adc
into
cmp
inc
sub
add
cld
xchg
mov
push
sbbl
mov
pop
popa
xlat
dec
xor
adc
movsb
push
xchg
add
adc
add
and
in
xor
add
mov
lods
test
mov
rcll
imul
mov
adc
push
sub
sub
or
add
push
inc
add
jle
and
mov
aam
es
or
lret
mov
dec
push
xor
sbb
adc
mov
adc
clc
bound
or
sub
pop
xor
lea
or
into
addl
cmc
cmpsl
mov
add
and
fiaddl
into
sbb
pop
and
arpl
cmpsb
orb
rcrb
add
and
lods
xchg
sub
xchg
mov
lea
mov
lods
mov
mov
or
or
jbe
pop
addb
imul
dec
or
inc
fs
imul
inc
testb
or
push
mov
dec
aam
mov
lods
jmp
fistl
cmp
fwait
sub
pop
and
xor
loope
and
adc
mov
insb
push
inc
loopne
lods
adc
sbb
dec
push
jmp
shll
jo
adc
lret
adc
dec
push
pop
ret
cmpsb
shrl
xor
or
add
ficoml
test
cmp
scas
adc
and
lret
adc
sahf
imul
or
fistpl
mov
dec
ret
cmpsl
xchg
addr16
add
mov
popf
loope
xor
jecxz
jp
call
add
xlat
testb
sub
adc
dec
cmp
bound
mov
adc
sub
mov
and
loope
xor
fsubr
lea
xchg
cmc
dec
std
or
scas
cmpsl
scas
adc
imul
add
sbb
mov
notb
out
out
rorb
adc
popa
mov
lahf
adc
fwait
xor
cmp
push
subb
sub
pop
dec
mov
or
mov
inc
sarb
nop
insb
testl
jno
pop
fbstp
or
xchg
and
adc
faddl
push
in
jg
xor
lcall
test
jmp
rclb
cmp
inc
jb
sub
cmc
bound
mov
adcb
mov
cmpsb
repz
pop
jne
and
nop
or
nop
push
xor
outsb
aad
in
je
add
or
jp
cli
sbb
add
mov
mov
imul
or
jbe
inc
adc
sahf
fisubrs
xchg
mov
insl
or
out
cmp
push
insl
adc
mov
or
in
xchg
mov
xchg
aad
fistl
imulb
dec
fidivrl
cmp
test
pop
jae
and
enter
dec
sub
aam
in
ss
dec
jno
add
fistpll
enter
mov
pop
or
inc
push
jns
adc
xchg
mov
pop
inc
sub
test
adc
sub
jae
mov
rcl
test
fwait
push
inc
pop
insl
loopne
adc
mov
lret
xor
jb
and
inc
sbb
mov
inc
xchg
loopne
sbb
dec
sti
psllw
xor
les
in
std
ds
or
pop
mov
xor
sbb
mov
es
sbb
pop
in
dec
outsl
jo
push
bound
mov
cmp
sti
lret
stc
pop
xchg
mov
push
daa
pop
adc
inc
and
xchg
addr16
loop
push
adc
and
cmp
repz
or
adc
push
add
inc
pop
mov
add
and
mov
push
mov
mov
test
xchg
outsl
sub
test
aaa
cmpl
addb
rcl
sub
pop
or
mov
popa
or
xor
cmpl
enter
lds
imul
push
orl
test
loop
sbb
pop
imul
mov
cmp
add
aam
sub
cmp
adc
mov
adc
dec
mov
cmp
data16
xor
mov
loop
push
mov
push
aaa
fs
add
inc
adc
fnstsw
stos
inc
mov
push
outsb
dec
or
mov
sub
mov
test
fimuls
mov
dec
and
cs
insl
add
xor
inc
imul
addl
xor
adc
push
scas
pop
es
orb
lcall
pop
adc
fnstenv
mov
adc
into
add
and
pop
cmc
sub
sub
xchg
pusha
imul
push
sub
int
mov
notl
sub
mov
xor
pop
aam
mov
or
xchg
push
andl
insl
mov
cmc
imul
dec
loope
xchg
fst
pop
inc
outsb
cmp
movsl
pop
es
mov
imul
and
inc
inc
test
inc
cmp
pop
aam
add
adc
mov
or
mov
adc
push
rol
cmp
stos
inc
sub
inc
mov
ret
xchg
and
outsb
pop
add
pop
es
jle
data16
bound
and
and
adc
adc
outsl
or
iret
loope
in
inc
adc
test
or
fdivrs
out
push
mov
adc
pop
out
sbb
inc
je
in
dec
sarl
imul
clc
stos
or
adc
fisttpll
or
add
dec
loopne
add
rcrb
xor
jmp
sahf
call
cmpl
add
xor
add
add
rcl
jne
inc
test
lock
fwait
inc
pop
leave
sub
pop
xchg
add
cld
outsl
inc
push
jnp
xor
aam
dec
pop
ds
sbbb
add
sbb
flds
push
xchg
cmp
shr
dec
rcll
stos
repnz
dec
inc
and
data16
or
lock
dec
inc
popa
and
mov
add
push
lea
add
adc
sub
add
xchg
into
pop
nop
xchg
cmp
adcb
cwtl
jo
dec
pusha
push
fs
int
imul
and
sbb
and
push
lret
adc
add
pusha
adc
rclb
inc
dec
sbb
test
adc
push
fucomip
mov
pop
enter
mov
ret
loopne
or
inc
and
inc
dec
js
mov
sub
inc
add
pusha
xor
mov
ljmp
adcb
adc
repnz
add
or
pop
ds
insl
aad
hlt
arpl
enter
enter
pop
les
shlb
or
mov
jne
xlat
sahf
add
aam
arpl
fsubrl
mov
or
in
jo
xor
bound
fstp
add
incl
mov
cmpl
and
setb
push
add
ljmp
and
push
aad
adc
push
popa
mov
push
mov
mov
insl
aam
sub
mov
cwtl
ret
jl
push
cltd
sub
ljmp
mov
inc
xchg
or
imul
or
clc
pop
shrb
mov
gs
dec
add
cmp
fsubrs
addr16
sbb
add
cmp
addr16
ss
inc
addr16
es
pop
jle
subb
cmp
mov
aad
lea
xchg
inc
or
es
mov
push
jno
jno
pop
push
dec
loopne
icebp
or
call
inc
cmc
shrb
mov
sti
xchg
faddl
push
add
add
pop
mov
testl
dec
scas
mov
cmc
push
pop
ficomps
test
mov
insl
shll
roll
xchg
mov
fiadds
xor
and
into
or
out
fsubrs
xor
add
dec
mov
shl
fiaddl
lods
adc
stc
push
fmuls
je
fxch
insl
mov
aad
cmpsl
loop
bound
imul
inc
lods
push
push
add
sbb
je
rolb
sub
cmp
pop
adc
mov
std
and
ror
dec
pusha
mov
or
imul
sbb
sub
inc
mov
das
dec
dec
mov
out
and
mov
adc
shll
insb
insl
stos
jb
insb
out
call
fisubs
outsb
ss
inc
dec
sub
stos
leave
cmpsb
loopne
jg
leave
push
loopne
sub
add
mov
leave
divb
stos
mov
test
sub
insl
jno
inc
add
cmc
iret
unpcklps
lea
mov
xor
sub
and
push
imul
mov
lods
mov
subb
jno
mov
sub
mov
out
xor
lods
cmc
popl
fistps
xor
cmp
xor
sub
sub
mov
mov
lret
loop
adc
cmpb
xchg
mov
xor
push
and
push
subb
push
inc
imul
leave
scas
fisttpl
lods
mov
push
and
jb
or
push
lcall
das
sub
cmp
adc
hlt
inc
fildl
xor
aas
and
sub
test
outsb
aam
inc
pop
cmp
or
dec
adc
pop
jg
dec
and
sbb
mov
cmp
mov
cmp
out
mov
push
mov
sub
mov
frstor
xchg
das
adc
and
mov
ret
jmp
in
fcoms
adc
mov
push
xor
or
ficomps
iret
movsl
jno
int
dec
add
mov
shrl
sub
sbb
ficoml
mov
push
adc
ficoml
outsb
rcrb
xchg
push
aam
cmp
mov
sbb
mov
cmpsl
add
mov
and
sub
aas
ds
mov
aas
xchg
mov
jb
xchg
or
add
clc
mov
das
push
fists
ret
inc
push
and
mov
xor
mov
adc
idivl
jno
adcb
popa
mov
mov
neg
push
loop
push
movsl
aad
mov
push
pop
shlb
cmp
adc
mov
mov
int
push
andb
loope
xchg
sbb
into
inc
mov
mov
push
mov
popw
inc
mov
dec
dec
rolb
daa
mov
push
mov
cmp
pop
imul
xchg
push
aaa
or
popa
pop
movsl
addb
sbb
sbb
pop
imul
movsl
push
arpl
push
mov
xchg
cs
mov
dec
push
cmp
jmp
and
and
xor
test
push
mov
xchg
add
fwait
imul
data16
xchg
inc
shlb
aad
and
aad
movsl
mov
add
test
mov
and
jae
sbbb
inc
mov
xor
pop
push
test
sbb
inc
or
push
int
mov
cmc
add
rcll
addr16
mov
xchg
subl
and
lea
sbb
sbb
xchg
clc
dec
pop
mov
jp
pop
add
rolb
mov
sahf
sbb
mov
sbb
pop
sbb
mov
pop
sbb
and
sbb
sub
push
loop
aad
xchg
pop
fcoms
loop
in
out
in
inc
and
and
lods
jb
mov
pop
mov
dec
xchg
imul
push
cwtl
jo
fistpl
sbb
adc
sbb
push
mov
xchg
adcb
pop
out
sbb
outsb
jmp
lea
mov
mov
sbb
out
push
int
add
inc
ljmp
inc
addr16
push
popf
in
aas
lods
rorl
push
cmp
push
in
sbb
cmp
inc
sub
ret
cltd
push
movsb
movsl
jno
lods
xor
data16
fdivl
mov
push
insb
lods
jge
cmp
rcll
dec
cmp
ret
cli
cmovne
shll
pop
cmpsb
pop
jp
xor
lods
addl
inc
and
out
push
add
pop
mov
xorb
or
fcomps
adc
add
fsubl
lods
fadds
lcall
outsb
leave
sbb
push
mov
movsl
inc
sub
lods
shrl
sbb
or
inc
dec
repnz
and
adc
inc
adc
imul
icebp
addr16
mov
adc
add
adc
push
es
adc
adc
adc
xor
inc
mov
xor
push
sub
jb
push
mov
sub
sarb
and
and
push
mov
je
push
push
and
rcl
das
jnp
mov
in
iret
popf
xchg
scas
xchg
or
xor
adc
dec
divb
cli
movsl
into
icebp
and
sub
sbb
inc
fimull
push
sub
hlt
push
mov
inc
adc
sbb
jae
add
fcmovbe
adc
cmc
arpl
inc
push
mov
fisttpll
pusha
popw
inc
iret
cwtl
mov
fwait
aad
dec
in
push
ret
add
imul
into
sub
push
pop
mov
cmc
out
fisttps
test
cmpsb
push
aam
xchg
push
test
cltd
jo
cmpb
mov
or
cmp
xor
ss
insb
movsl
subb
cmc
mov
into
mov
inc
call
push
lods
rcrl
lcall
xor
data16
adc
lods
xor
sbb
xor
xlat
mov
es
stos
inc
pop
add
imul
stos
mov
push
pusha
data16
aam
mov
pop
jp
adc
fs
mov
sub
sub
pop
adcb
push
in
lcall
outsb
movsl
lret
push
push
xlat
imul
shlb
dec
jg
pop
adc
imul
lea
or
test
mov
stos
push
xor
mov
add
and
sbb
rorl
movsl
inc
imul
test
je
test
xor
incl
fstps
push
imul
sbb
mov
addl
rcl
test
jle
rclb
aam
push
sbb
push
xchg
sbb
add
or
sub
sub
clc
in
test
lods
and
ljmp
mov
in
dec
add
pop
lea
sub
xchg
add
mov
fcomps
aaa
jb
push
sbb
das
push
xchg
cli
cltd
adc
or
jp
insl
jae
ljmp
xlat
pop
sub
pop
sub
and
stos
xchg
cltd
loop
mov
leave
push
sbb
push
xor
addb
stos
pop
adc
lea
incb
push
mov
push
sbb
and
mov
dec
mov
sub
dec
cli
outsb
imul
pop
repz
inc
mov
imul
sub
add
mov
fidivrs
xchg
xchg
or
mov
sbb
or
ret
jg
es
rcrl
add
or
xchg
imull
xchg
aaa
lahf
mov
mov
outsb
or
push
sbb
into
mov
sub
or
or
jb
incb
mov
fildl
leave
pop
adc
loopne
movsl
stos
test
shrb
mov
push
lret
pop
and
pop
fbld
mov
push
cmpsl
outsb
sub
fcmovbe
mov
sub
mov
fsubrs
hlt
inc
loop
adc
or
stos
jne
push
cmpsb
mov
sarb
push
addr16
sbb
ficoml
shlb
and
arpl
ljmp
mov
roll
mov
aam
adc
adc
and
sbb
pusha
popf
sahf
xchg
movsl
xchg
or
mov
and
jae
xor
stos
in
test
sub
jne
jne
sub
loop
stos
inc
test
push
test
aam
xchg
into
repz
adc
pop
nop
mov
mov
mov
sub
xchg
test
sub
ret
test
inc
adcl
mov
inc
xor
or
pop
adc
lods
add
cmp
push
test
into
repnz
lods
pop
test
imul
rclb
dec
inc
mov
adc
ds
pop
test
jl
push
imul
mov
cltd
jno
test
insb
or
push
inc
add
mov
test
js
adc
xor
jmp
add
push
imul
or
and
xlat
push
test
fdivs
jns
push
mov
lcall
xorb
pop
push
and
xorl
jo
push
push
pop
pop
or
cmpsl
inc
subl
loopne
leave
or
movsl
inc
sbb
pop
push
push
pop
xlat
push
sbb
stos
dec
xor
adc
aam
add
in
add
cmp
orb
mov
push
fildll
xlat
xchg
push
adc
push
push
sbb
aad
mov
pusha
ljmp
aaa
aaa
outsl
mov
and
imul
add
sub
mov
sbb
das
mov
lret
sub
pusha
pop
and
push
fisubs
push
inc
fadds
cmp
jp
push
sub
dec
inc
not
imul
lea
adc
and
shll
sub
inc
mov
pop
fcom
sub
adc
call
jp
and
rol
inc
dec
xor
sub
jns
fildl
cmpl
in
adc
dec
pop
sar
pop
outsl
mov
mov
mov
roll
add
push
push
pop
push
pusha
dec
pop
sub
aad
test
push
mov
sahf
rcrb
pop
mov
dec
push
push
mov
add
fcompl
pusha
sbb
aaa
push
adc
inc
cmpl
adc
push
and
pop
imul
sub
pop
ret
filds
sbb
mov
push
dec
scas
je
add
push
add
loop
jno
inc
test
stos
icebp
xor
shrb
fldcw
push
push
cmp
dec
adc
fcoms
jb
cs
enter
aad
leave
push
test
mov
int
add
enter
sub
jl
add
sbb
in
jb
out
jp
mov
ljmp
push
cmc
scas
sbb
dec
pop
cmp
ljmp
inc
repnz
push
push
push
lods
shll
and
jb
or
cmp
inc
outsb
imul
sti
mov
push
inc
mov
push
or
cmc
shrb
xor
push
mov
test
cmp
mov
insl
or
pop
adc
insl
push
dec
and
popa
inc
push
mov
imul
addb
xchg
pusha
mov
loop
mov
shlb
push
mov
into
xchg
inc
xor
cmp
rclb
mov
inc
pop
out
and
pop
imul
and
ja
push
sub
test
or
mov
lcall
adc
sbb
mov
ret
insl
xor
lahf
xchg
idiv
xor
push
test
mov
lods
mov
push
imul
aas
xchg
in
add
enter
and
or
add
mov
push
inc
jae
mov
push
lods
dec
cs
popa
sub
add
outsb
sahf
aad
cmpsl
les
nop
jo
gs
add
pushw
out
or
cmpsl
inc
movsl
mov
xchg
cmp
sti
testl
je
inc
imul
loopne
or
jno
add
addb
sub
stos
add
test
cmp
cmp
cmp
mov
and
xchg
leave
lret
dec
inc
mov
popa
test
mov
lods
jl
lcall
lods
xchg
push
or
ljmp
out
scas
inc
rorl
adc
mov
aad
inc
andl
out
mov
push
push
sti
mov
stos
push
test
sub
dec
pop
es
mov
fidivrl
sbb
inc
lods
add
or
adc
movsb
xor
sbbb
scas
ficoml
or
sub
cwtl
sub
imul
push
mov
cmpb
loope
push
xchg
inc
inc
rorl
or
lcall
pop
jo
jle
or
jo
test
push
addl
or
cwtl
or
fwait
stc
sub
jge
cmp
sub
mov
das
rclb
cmp
and
gs
test
dec
jmp
push
pop
mov
mov
push
mov
sub
xlat
adc
loop
or
cmp
pop
sub
mov
add
jne
adc
clc
jne
adc
inc
loopne
mov
pusha
ret
roll
xchg
outsl
or
xchg
enter
xchg
sbb
stos
leave
inc
add
pop
and
add
push
gs
cs
push
pop
xor
push
sub
loop
adc
loope
mov
pop
ret
adc
mov
push
sub
das
xchg
jle
lods
push
leave
ficompl
mov
mov
cmp
punpckhbw
pop
decl
sbb
popf
push
imul
inc
inc
hlt
aad
xchg
movsl
xorb
loop
xchg
mov
lods
mov
outsb
aad
sti
and
cmpsl
fldl
rcl
mov
push
mov
stos
ss
xor
adc
push
mov
push
cmpsb
xor
test
cmp
sti
push
push
sbb
roll
mov
es
and
and
xchg
pusha
ret
xchg
mov
aad
test
inc
neg
insl
inc
insb
lods
inc
repnz
or
dec
fwait
arpl
and
addb
push
jmp
ljmp
inc
xor
add
or
aas
testl
lcall
pop
mov
clc
cmp
lret
sbb
cmp
mov
pop
mov
inc
lea
in
clc
pop
shll
push
cmc
dec
sbb
fdivs
fistps
lock
adc
adc
and
push
xchg
xchg
cmp
add
dec
sub
add
incl
pop
mov
enter
xchg
shrl
push
stos
push
test
mov
push
xor
popf
pop
inc
xor
mov
lods
and
pop
popf
push
stos
adc
xchg
fadds
shrb
stos
mov
mov
and
loopne
push
cltd
mov
fs
xchg
inc
leave
rcr
mov
jbe
lds
sarb
ret
mov
fwait
inc
push
shrb
xchg
scas
xor
into
ret
stos
dec
and
in
fnstsw
mov
pop
movsl
jecxz
cmp
and
push
and
push
dec
push
inc
aad
mov
sub
cmp
insb
rolb
loop
aad
inc
ficoml
sbb
lods
fcoml
inc
xor
mov
sbb
fildl
cmp
outsb
inc
mov
xor
les
or
sahf
adc
and
push
fldt
adc
xor
aad
inc
imul
inc
enter
xor
pop
dec
inc
add
xchg
ljmp
ljmp
pop
push
add
inc
mov
shrb
add
or
push
jge
pop
mov
fldcw
sub
xor
mov
lock
loope
dec
mov
cmp
push
lods
push
xorl
sub
andl
push
insb
mov
push
clc
adc
sub
imul
add
mov
sub
mov
shrb
cmc
fisttpll
mov
shrl
and
xor
sbb
aam
aad
add
lahf
shll
push
mov
sti
pop
aad
or
or
inc
scas
adc
xor
inc
xor
pop
aas
sarl
sbb
mov
lret
sbb
pop
pushf
mov
sub
outsb
ds
pop
and
lcall
test
pop
in
dec
jmp
test
xor
mov
add
out
sub
repz
test
pop
or
dec
pop
mov
aad
repz
shll
cmc
and
call
mov
lret
test
mov
inc
sarl
addb
fisubs
mov
push
stos
push
push
mov
insb
and
adc
push
xor
xlat
inc
aas
mov
test
fstps
repz
add
adc
inc
and
inc
mov
gs
xchg
jp
sbb
sbb
mov
add
ret
lods
inc
aad
push
jns
mov
les
adc
xor
push
lcall
scas
cmp
scas
sbb
jo
push
sbb
lcall
push
enter
fxtract
addl
or
je
adc
inc
push
inc
xchg
xor
nop
cs
imul
add
outsl
stos
pop
push
xchg
mov
ret
push
stos
or
push
inc
adc
sbb
push
sbb
insl
pop
pop
je
imul
imul
lods
insl
sbb
add
add
sbb
xor
pop
and
push
jo
mov
sub
das
rolb
push
push
push
lcall
lea
das
xchg
out
pop
dec
or
cmc
pop
sbb
pop
sbb
jge
fmuls
das
enter
fsubrs
push
adc
push
add
sub
mov
mov
popf
sbb
push
and
jg
call
and
aaa
or
or
push
shlb
dec
cmc
faddl
mov
sbb
inc
add
push
imul
ret
sbb
sub
mov
es
rcll
ret
sbb
mov
rolb
mov
sbb
push
insb
pop
jno
push
sub
lods
shll
adc
call
cmc
fwait
add
push
xor
gs
loop
push
sub
test
aad
push
pop
test
test
mov
push
cmc
jg
sub
shlb
loope
pop
push
sub
mov
sarb
pop
xor
sbb
pop
and
sbb
pop
xchg
add
test
pusha
imul
pop
dec
cmpsb
sbb
mov
jbe
aaa
push
sub
jo
in
adcb
dec
pop
hlt
pop
mov
test
hlt
adc
or
mov
pop
in
jge
test
add
test
push
mov
int
xor
pop
and
xor
mov
push
mov
xor
jne
push
hlt
add
add
and
rclb
popa
scas
add
loope
inc
sub
decl
call
cmp
jo
add
cmp
add
add
test
nop
xor
bnd
cmp
inc
add
rcrl
sbb
fcom
sub
pop
iret
mov
pop
in
cmp
xchg
sbb
fldl
or
aad
int
out
loope
sbb
pop
adc
add
outsb
inc
cmc
in
into
in
or
inc
je
push
outsl
or
scas
adc
xlat
sub
shrl
lret
xor
inc
dec
out
add
push
packssdw
push
aam
ljmp
sub
daa
xchg
add
jle
add
cwtl
push
aad
sbb
lea
jo
push
sbbl
pop
lret
inc
ret
enter
jg
and
loopne
jecxz
add
cmp
or
aam
add
incl
dec
mov
xlat
mov
adc
hlt
add
insl
adc
fdiv
add
and
push
out
sub
cmc
cmpsb
hlt
xchg
inc
dec
xor
cmp
adc
xchg
call
push
enter
mov
test
inc
ds
push
aad
pop
repnz
pop
lock
mov
out
xor
jb
mov
adc
xor
xchg
sub
sub
pusha
rcl
enter
cmpb
les
fidivl
mov
pop
jp
mov
neg
sub
scas
pop
add
pop
push
xchg
dec
sub
dec
lcall
aam
and
adc
xlat
sbb
es
aam
cmp
fadds
orb
sbb
cmp
pop
iret
ja
repnz
insb
mov
mov
cwtl
mov
cmp
push
sub
and
jbe
out
and
arpl
or
or
sbb
mov
adcb
sbb
stos
jp
daa
pushw
mov
mov
and
adc
xchg
inc
add
mov
mov
jg
negl
jne
add
jo
cmc
push
test
cmp
iret
add
inc
jnp
js
pop
mov
or
mov
sti
sahf
test
test
mov
ret
xlat
into
jno
adc
push
sbb
cld
push
sub
out
inc
xor
dec
or
movsb
push
sti
imul
mov
ret
rclb
es
das
add
movsl
int
aad
xchg
dec
add
and
sub
jo
sbb
dec
sub
nop
pop
mov
divl
movsl
or
or
pop
pop
push
test
and
mov
xor
mov
shll
and
mov
into
xchg
push
pop
mov
test
sub
add
cmp
mov
stos
add
sub
addb
das
shll
adc
cmp
add
push
enter
stos
push
push
jl
push
scas
fisubl
sub
orb
lods
jge
sub
push
pop
inc
addl
cmc
inc
add
pop
mov
add
jno
jp
pop
stos
mov
mov
mov
cmp
mov
pop
mov
hlt
push
inc
mov
mov
adc
aas
mov
and
dec
adc
cmp
inc
sub
repnz
mov
sbb
xchg
push
stos
add
in
cld
aad
movsl
push
dec
test
inc
xchg
push
inc
and
mov
in
enter
push
aam
sub
push
mov
or
push
add
mov
jae
out
and
imul
stos
adc
mov
lret
inc
icebp
sbbb
mov
imul
clc
imul
and
jns
test
add
pusha
inc
or
pop
inc
stos
push
add
push
imul
sub
stos
push
in
idivl
arpl
ljmp
dec
test
push
test
mov
sbb
mov
sbb
test
pop
mov
in
push
or
xorb
add
lock
and
aam
xchg
push
lods
mov
pop
iret
ja
xor
push
addb
mov
and
movsl
mov
add
jl
insl
or
jecxz
and
and
imul
push
xlat
ficompl
popa
test
add
push
jae
jmp
jno
push
inc
mov
rolb
ss
cs
push
jp
push
push
jae
cld
in
scas
pop
shl
add
ror
movsl
sub
or
sbb
sub
push
cmc
je
mov
repz
insw
push
or
rolb
ret
inc
jle
out
mov
push
int3
cmp
jle
add
outsb
inc
sub
inc
loope
pop
sbb
mov
lods
add
or
mov
lea
dec
aam
adc
push
jle
fiaddl
push
or
xor
fsubr
addb
jae
mov
push
sahf
mov
cmc
lods
push
or
adc
add
push
inc
and
push
and
mov
xchg
jo
ret
and
mov
es
cmp
inc
adc
push
roll
mov
lods
push
sub
fiadds
mov
push
inc
int
outsb
adc
adc
adc
lods
pop
gs
es
inc
mov
cld
mov
mov
fwait
jl
mov
lcall
push
jge
in
aaa
ds
iret
mov
shlb
xor
pop
rcll
andb
push
add
lods
add
aad
adcl
dec
mov
aaa
into
sub
lcall
add
cltd
stc
xchg
cltd
pop
lods
push
movsb
jmp
test
mov
std
push
adc
push
push
mov
push
or
clc
shll
sub
scas
hlt
insl
ret
xchg
popa
into
xchg
or
jno
jbe
mov
sbb
adc
les
dec
mov
push
scas
and
inc
insl
add
push
movsb
push
pop
inc
imul
and
jo
lods
and
shrl
shll
pop
cmpsb
dec
loopne
pop
inc
mov
sub
push
add
mov
roll
push
test
imul
push
sub
pop
fldt
mov
test
jb
imul
cmp
pop
push
push
sub
mov
enter
jle
inc
mov
aam
xchg
push
in
popf
in
lods
subb
aad
mov
insb
rcrb
sub
dec
bound
test
push
cmp
subb
xchg
sub
nop
sbbb
add
or
push
sub
loopne
mov
adc
fcompl
push
dec
das
pop
outsl
aad
ret
adc
rcl
mov
mov
cmp
filds
dec
andb
nop
es
daa
mov
out
lods
add
jb
incl
inc
inc
add
push
sub
ja
nop
sbb
std
xor
inc
add
pop
cli
mov
adc
mov
insl
mov
xor
mov
outsb
mov
push
mov
jp
cmp
sahf
sub
stos
pop
jg
mov
aad
orb
ljmp
gs
aad
push
push
sbb
loop
int
or
add
push
or
add
or
movsl
loop
jecxz
mov
fsubrp
push
sti
add
cmpsb
xor
addb
push
add
xchg
addb
fisubrs
xchg
rorb
mov
mov
das
push
push
dec
push
adc
push
push
mov
test
push
mov
fisubrl
pop
push
jae
imul
mov
ret
scas
push
andb
movsl
mull
push
ret
mov
or
mov
xchg
push
mov
mov
fisubrs
or
into
test
mov
test
in
or
lcall
mov
int
mov
jle
push
mov
inc
je
and
pop
cmp
mov
movsl
push
adc
outsb
rolb
dec
aad
clc
and
xchg
and
in
gs
add
outsb
mov
mov
push
in
dec
sbb
pop
insl
cmc
inc
add
faddl
adc
test
arpl
mov
sarb
or
mov
lods
ret
or
in
pop
movsl
pusha
test
mov
jg
aad
add
repnz
and
push
test
je
adc
mov
pusha
cs
or
mov
shll
dec
add
and
and
iret
mov
cld
mov
pushf
mov
cmp
mull
das
adc
push
loope
faddl
jno
jae
fdivrl
outsb
adc
xchg
push
and
js
add
push
or
movsl
ss
dec
cld
orb
sub
loop
mov
stc
fisttps
add
out
push
loope
pushf
xlat
repnz
pop
sbb
cwtl
xor
sbb
push
xorb
mov
sub
rorb
shll
das
push
mov
out
movsl
and
mov
adc
or
das
out
inc
stos
iret
hlt
or
push
jo
rorb
xor
lods
push
in
add
and
pop
or
xchg
and
and
mov
adc
cmpb
aad
xor
or
mov
mov
adc
dec
push
lea
outsl
dec
add
mov
pmaddwd
dec
push
fiadds
aad
shrb
fdivrl
inc
rcr
mov
mov
mov
and
adcl
popf
fwait
scas
jns
xchg
lea
nop
mov
sarl
mov
sub
insl
aaa
and
testl
stos
dec
rclb
mov
pop
int3
pop
mov
ja
hlt
or
mov
sub
out
and
add
dec
aaa
lcall
cld
pop
mov
mov
loope
inc
subl
xchg
call
sahf
leave
test
cmc
sti
mov
push
test
cmp
sbb
inc
inc
push
popa
mov
add
and
cmp
sbb
aad
lea
push
outsb
adc
xchg
lods
add
mov
imul
dec
push
sub
dec
push
inc
fs
les
cmp
push
popa
es
or
adc
lcall
push
jp
andl
push
pushf
cmpsl
je
jle
mov
mov
hlt
sub
lock
lcall
push
adc
mov
mov
sub
inc
aad
inc
inc
ret
and
lret
push
cmp
lods
rcrl
xchg
orl
pop
std
mov
lea
ds
push
stos
push
push
repz
mov
push
mov
fisubrl
push
xor
mov
fs
es
mov
and
add
inc
xor
lcall
pop
mov
out
mov
std
sti
loope
outsl
xor
mov
ret
imul
xchg
push
imul
inc
enter
xor
outsb
mov
sbb
push
pusha
std
push
rcl
push
scas
aad
add
and
or
cmp
jno
and
arpl
and
int
aad
test
sbb
adc
mov
ret
xchg
mov
cmpsb
and
mov
jmp
fisubl
sub
loop
fxch
adcb
movsl
dec
sbb
or
andb
cmp
mov
mov
test
aad
xchg
cmpsl
add
arpl
pop
mov
push
xor
stos
dec
sub
fiaddl
cmc
rcll
cwtl
and
imul
mov
test
mov
stos
inc
movsl
lea
into
sub
inc
sub
xchg
loope
mov
mov
mov
mov
jge
orl
scas
insl
sahf
jne
pop
mov
xchg
lret
ret
sub
ss
sbb
mov
das
sahf
ds
mov
testb
imul
add
es
addr16
xlat
push
sub
test
or
inc
lea
cmp
aad
push
adc
ret
ret
cwtl
cmp
inc
test
lretw
push
mov
out
cltd
pop
mov
inc
incl
cmp
xchg
test
push
inc
fcmovbe
aam
lods
push
outsb
sub
rclb
cmp
push
add
dec
adc
inc
test
xchg
test
rcl
test
lods
loopne
push
out
sbb
pop
add
mov
mov
loop
aad
jo
mov
jo
push
mov
push
cwtl
push
push
push
mov
iret
outsl
fildl
mov
outsb
xchg
and
push
mov
xor
cmc
adc
lahf
mov
dec
mov
sahf
cmp
xor
pop
mov
sbb
xor
pop
pop
mov
adc
mov
pop
aam
xor
xchg
pusha
sbb
cmp
das
and
sbb
cmp
add
mov
movsl
xchg
jno
adc
mov
or
test
insb
adc
repnz
movsl
fisttps
les
test
shrb
dec
push
cli
dec
test
xorl
enter
dec
lods
sub
or
xchg
dec
mov
fldt
outsl
lods
xchg
and
ret
mov
decl
jmp
andb
frstor
ret
mov
adc
fstpl
sarb
les
mov
lret
and
adc
test
mov
mov
into
mov
push
and
inc
pop
mov
adcb
movsb
cmp
pop
xchg
adc
mov
adc
mov
inc
imul
sahf
lret
aam
int
mov
jge
mov
lea
add
pop
orb
push
mov
orb
cmp
sub
xchg
call
orb
js
pusha
add
adc
ljmp
subb
dec
nop
inc
aam
push
jae
inc
inc
adc
mov
aad
xor
aaa
sub
push
inc
jecxz
push
push
testb
mov
das
sbb
push
xchg
mov
pop
push
dec
cmpsb
cmpsl
lcall
xor
iret
sub
cmp
xor
insl
cmp
idiv
sbb
or
imul
cmp
scas
push
push
cli
fildll
loop
push
or
dec
sbb
or
mov
or
mov
inc
fisubrl
mov
xor
addr16
sbbl
les
push
stos
sbb
add
ret
je
adc
sub
adcb
inc
mov
mov
push
or
xor
loopne
pop
jp
lock
fmul
test
out
sahf
pavgb
clc
mov
sbb
adc
adc
bound
out
mov
sbb
add
push
imul
mov
ror
xor
outsb
shll
mov
aaa
or
push
cmp
shrb
cmp
mov
sub
mov
sub
das
mov
mov
lds
inc
mov
pop
dec
fwait
inc
adc
in
jno
inc
sbb
push
adc
aad
sbb
push
cwtl
shrb
aam
fcmovb
push
mov
cltd
add
push
test
inc
push
inc
xchg
add
lea
loop
inc
add
jne
push
and
dec
mov
push
inc
stos
enter
push
pop
mov
cmp
subb
push
push
pop
rcl
ret
pop
mov
add
or
cmc
sbb
sarb
imul
inc
lahf
mov
inc
pop
test
cmp
cmp
mov
in
add
and
pop
mov
or
loopne
or
sbb
inc
movsl
ljmp
xchg
add
xchg
gs
or
pushl
inc
cmc
or
addl
stos
aad
mov
or
cmpsb
shrb
inc
push
insb
stos
fs
sbb
xor
push
movb
push
add
test
cs
and
test
push
call
jnp
bound
aad
xchg
pop
or
les
xchg
push
dec
adc
xor
das
pop
dec
movsb
push
sub
ficoms
divl
adc
xchg
fsubrp
push
idivb
xlat
mov
pop
pop
es
ficomps
mov
or
sahf
and
adc
fstpl
inc
mov
fs
int
cs
cmp
inc
movsl
or
sub
sub
pop
inc
loop
sub
test
inc
pop
or
rolb
addr16
int3
rorl
mov
dec
mov
mov
push
adc
sbb
push
roll
push
daa
xor
add
pop
cmp
imul
lret
sub
aad
inc
xor
mov
mov
pop
gs
sub
insl
cmpsb
adc
pop
mov
adc
insl
data16
nop
sub
mov
jno
push
mov
mov
clc
jno
and
xor
xor
fcmovbe
add
dec
leave
ja
inc
or
in
mov
adc
adc
ret
pop
jl
aad
add
xor
mov
je
shrl
into
jecxz
stos
lret
sbb
sbb
pushw
add
jo
push
loope
cmp
lods
cmp
xor
sbb
pusha
inc
movsb
push
out
mov
test
pusha
mov
ljmp
into
shll
std
push
insl
int
aad
flds
in
sbb
imul
test
or
pop
adc
js
jbe
stos
scas
pop
push
pop
mov
add
add
sbb
mov
cmp
insb
add
pop
insl
or
jne
dec
jp
fidivl
sub
mov
imul
mov
add
add
cmp
jp
repz
mov
mov
mov
call
loopne
sub
fildll
daa
push
xor
push
adc
test
pop
loope
sbb
push
testl
pushf
mov
xor
lahf
inc
xchg
or
push
and
sarb
ljmp
push
pop
aad
mov
aam
inc
pop
jnp
add
or
add
mov
xor
jb
out
inc
mov
mov
adc
fwait
cmp
sbb
int3
and
jb
add
xchg
push
test
xchg
aam
dec
xor
inc
xchg
sbb
inc
mov
daa
push
out
lock
scas
sahf
cmp
or
add
add
xor
and
xor
cmp
es
jmp
ljmp
lock
data16
ficoms
sbb
add
xor
scas
lock
mov
enter
test
sbb
and
sbb
adc
insl
mov
dec
sarb
daa
and
adc
add
and
cmp
fdivs
add
std
sub
mov
hlt
sti
mov
push
push
push
adc
sbb
mov
sub
adc
dec
scas
and
xchg
mov
scas
push
insl
inc
adc
sbb
mov
ret
and
adc
and
adc
cmp
or
adcl
add
sub
xchg
mov
rcll
xor
dec
mov
imul
sub
dec
add
outsb
mov
andb
lds
call
aad
mov
cmp
pop
mov
jg
jne
out
or
cmp
add
inc
dec
call
imul
inc
sub
lods
xchg
das
mov
mov
je
or
and
xor
inc
lods
inc
imul
cld
aas
mov
adc
fldl
test
rorb
test
mov
lcall
das
xor
push
das
push
sti
xchg
or
pop
test
adc
jge
scas
sbb
xchg
cmp
ds
inc
xchg
inc
mov
jge
adc
inc
loopne
ja
fisubl
xor
out
loop
cmpsb
pop
stos
inc
je
jge
sub
in
adc
inc
les
and
add
inc
in
adc
sub
lret
fs
subl
bound
xor
mov
dec
into
xchg
incl
rcl
test
jg
adc
inc
and
lcall
cmpsl
and
xor
fwait
or
adc
ret
mov
popa
add
sub
adc
pop
mov
into
test
fimuls
fmul
inc
arpl
shrb
jae
sbb
sub
pop
mov
ds
cmp
rolb
xorb
pop
fstl
sub
push
int
sub
sub
jb
or
xor
rolb
mov
add
sub
xor
addb
leave
loope
add
dec
dec
in
inc
lret
lock
inc
in
pop
adc
inc
and
or
or
ljmp
ficomps
or
adc
jg
shr
xchg
pop
adc
test
xor
clc
lock
push
push
jnp
addl
outsb
out
add
jl
clc
cmc
shll
adc
shll
pop
xchg
push
jae
add
adc
js
dec
dec
mov
cmp
js
testl
mov
xchg
sar
sub
mov
fdivs
cmp
loopne
mov
push
lock
outsl
xchg
and
clc
and
dec
inc
lcall
in
dec
inc
iret
aad
repnz
pop
inc
mov
clc
sub
sbb
mov
adc
jo
sbb
or
add
xlat
add
data16
xchg
inc
dec
sub
mov
stc
lea
cs
cmp
lcall
adc
cmp
in
das
loopne
fistl
stc
add
andb
or
fwait
xchg
adc
xor
lock
add
pop
push
jnp
into
add
xor
sbb
adc
out
mov
add
sbb
test
enter
js
pop
inc
adc
lahf
sbb
sub
adc
fmuls
mov
js
xchg
gs
or
add
movb
xor
pusha
js
or
popf
add
jns
fs
and
xchg
pusha
add
cmp
adc
and
addb
in
and
jo
jmp
sub
imul
jne
roll
mov
sbb
pusha
add
aam
lock
aad
sbb
aam
or
loopne
xor
mov
dec
xchg
fmull
hlt
test
xor
adc
push
push
push
in
mov
mov
mov
mov
in
fs
outsl
imul
scas
sbb
mov
ljmp
mov
clc
addr16
sub
or
cmp
mov
pusha
cmp
clc
and
cmp
shlb
in
sbb
inc
sbb
fsubl
mov
ret
in
cmp
mov
cmpb
xchg
testb
sbb
mov
ljmp
lds
inc
sub
push
stos
push
stos
mov
inc
mov
xchg
and
xchg
add
push
imul
mov
add
stos
pop
dec
or
pusha
lods
push
loopne
aaa
xlat
mov
inc
jne
loop
sub
loopne
andb
and
shll
sbb
push
mov
push
mov
aad
adc
or
jns
or
stos
add
mov
pop
imul
aaa
stos
push
sub
cwtl
jno
inc
push
mov
push
sbb
inc
adc
scas
xchg
mov
mov
pop
sub
push
rorl
nop
stos
add
movb
or
mov
push
not
pop
das
or
add
sbb
fcoms
sbb
adc
or
xor
and
sub
je
pop
push
push
cmp
jns
test
mov
ret
mov
sub
aam
dec
es
lds
cwtl
mov
stos
adcb
sub
iret
sub
sub
mov
adc
mov
sbb
mov
adcb
push
add
cmc
or
inc
sub
push
mov
add
mov
sub
push
test
push
out
push
dec
lds
jb
test
inc
mov
test
add
xchg
cmpsb
add
in
lcall
orb
push
gs
andl
test
xchg
push
clc
mov
pop
or
fists
cmpsb
dec
push
rolb
test
xchg
mov
sub
test
es
cmp
imul
jno
inc
test
sarb
push
sub
stc
popa
adc
inc
and
pop
imul
xor
rol
imul
push
jmp
xor
inc
aad
mov
cs
and
imul
sub
xor
pop
push
xchg
sbb
das
xchg
sbb
dec
std
dec
subb
mov
cmp
mov
push
mov
sbbb
sub
and
xor
push
xorb
popf
icebp
mov
xchg
mov
add
pop
subb
push
lods
setns
test
mov
xlat
push
daa
cwtl
inc
and
std
arpl
mov
ja
fsubs
jb
push
fsubrs
out
inc
imull
push
cmpsl
dec
sbb
sbb
inc
or
adc
lret
aam
jmp
out
sub
mov
je
jbe
inc
test
add
stos
sub
xor
mov
mov
ret
cmpsb
mov
cmp
cmc
push
jl
rcll
lcall
xor
fidivl
adc
pop
test
inc
cmp
gs
mov
imulb
cltd
loop
mov
inc
mov
out
movsl
jae
inc
rorl
pop
imul
inc
imul
movsb
loop
js
shld
jg
xlat
arpl
xchg
dec
notl
inc
sub
inc
pusha
sub
lahf
inc
inc
insl
mov
mov
adc
push
outsb
lods
adc
pop
adc
movsb
push
push
inc
and
push
mov
sbb
or
mov
mov
push
push
lods
push
pop
dec
enter
gs
pushf
or
inc
cmp
pop
or
push
dec
sub
jg
pop
push
mov
pop
fs
inc
jecxz
and
xor
inc
pop
add
movsl
cmp
mov
int
sbb
ja
fs
mov
add
test
jp
int
push
scas
imul
add
loop
sbb
push
aam
test
dec
sub
push
movsl
incl
movsl
into
add
pop
push
jge
dec
mov
push
in
das
mov
loopne
push
imul
jae
xor
pop
ljmp
out
pusha
aaa
loope
dec
push
and
cmp
mov
push
and
clc
testl
lcall
ds
movl
inc
sub
aam
xchg
mov
push
sub
dec
mov
pop
cmp
and
dec
adc
enter
andb
push
pop
fdiv
lret
mov
enter
add
mov
push
and
or
sub
movsl
push
aaa
cmp
stos
aam
push
sub
xorl
aad
pop
or
inc
lods
rcrb
pop
pop
mov
sub
mov
lcall
xchg
cmpsb
or
sbb
mov
jl
mov
mov
cmp
push
add
mov
arpl
mov
push
ds
adc
mov
movsl
add
push
ret
sub
icebp
shll
test
std
or
subl
loop
mov
mov
fimull
aaa
test
insb
movsl
jge
mov
adcl
cltd
enter
jb
lock
jmp
stos
xor
das
das
pop
arpl
mov
bnd
cmp
pop
lea
sbb
mull
gs
add
loop
data16
mov
inc
sub
push
push
pop
ficoml
imul
inc
sub
outsb
mov
dec
insl
inc
jb
mov
mov
add
lret
pop
imul
push
sbb
add
data16
test
push
fcmovnb
sbb
testb
shlb
icebp
cmc
fdivl
push
pop
sbb
add
sub
dec
mov
mov
sbb
cmc
mov
stos
push
mov
loope
cmp
xor
jle
sub
fs
aad
rcrb
mov
adc
sbb
roll
pop
aam
dec
sti
gs
xchg
mov
enter
push
add
push
mov
sub
add
cmp
xor
sub
vmovsldup
rorb
or
mov
or
jno
dec
adc
push
add
xor
add
and
call
repnz
mull
shlb
adc
xor
sbb
push
aam
mov
xchg
aaa
sub
cld
xchg
xor
mov
inc
add
sub
push
sub
xor
cs
cmc
mov
aad
push
mov
pop
leave
or
imull
fimull
icebp
inc
out
push
mov
scas
testl
outsb
movsl
lock
ss
mov
push
jo
stos
jg
inc
insb
movsl
push
prefetch
add
jae
in
fiaddl
inc
fimuls
inc
push
mov
xchg
cmp
jmp
inc
comiss
add
xchg
insl
daa
pop
sbbl
pop
inc
mov
sbb
insl
into
fs
push
mov
pop
leave
cld
inc
mov
inc
jne
cmp
outsl
inc
test
jno
fwait
test
pop
xchg
push
push
dec
mov
pop
out
addr16
adc
addr16
data16
scas
push
dec
gs
mov
push
fstps
mov
push
mov
cmp
mov
andb
xor
inc
pop
xchg
faddl
xchg
imul
mov
lret
push
gs
xor
or
cltd
add
pop
cmp
add
dec
dec
sbb
or
loopne
dec
scas
adc
inc
imul
pop
inc
imul
scas
sub
dec
int
add
or
dec
cltd
or
cwtl
addl
add
adc
addb
push
sub
mov
aaa
mov
ljmp
test
iret
sub
dec
into
adc
test
shll
push
push
jae
out
subb
and
das
and
scas
or
cmpsb
cmp
test
adc
mov
fistl
int
cmpsl
inc
stos
mov
out
adc
or
inc
shl
jns
aad
sbb
mov
push
mov
push
insb
fcmovbe
mov
popa
cmp
and
leave
inc
stos
add
pop
sub
lret
sub
mov
in
sbb
pop
aam
cmp
inc
push
adc
les
lahf
or
dec
data16
push
mov
inc
ror
shrb
push
lock
aam
inc
rcl
xchg
sbb
push
pop
leave
push
mov
adc
xchg
orb
ljmp
aaa
data16
scas
xor
pushl
mov
scas
push
sub
imul
inc
add
test
push
std
inc
jg
push
or
scas
mov
mov
sub
or
sub
add
or
push
dec
aam
iret
jnp
mov
icebp
xor
push
mov
ss
add
inc
xchg
dec
push
and
lcall
jge
xor
or
daa
aaa
into
mov
or
inc
sub
add
xor
je
ret
push
sbb
xchg
aaa
addb
or
cmpsb
sbb
push
adc
push
mov
jae
aaa
mov
aad
xor
sub
mov
incl
pop
jne
or
stc
in
sub
pop
aad
cld
sbb
sbb
adc
outsl
mov
test
lahf
cmp
shlb
sbb
inc
sbb
das
enter
pop
add
cmc
lods
pusha
push
shll
insl
imul
and
jo
cmp
scas
push
jl
pop
aaa
pop
outsb
cmc
scas
push
insl
mov
das
pop
rorl
lods
pop
mov
lods
shrl
mov
fldl
mov
aad
cmp
push
push
out
pop
add
in
add
dec
push
pop
mov
imul
push
test
mov
pop
inc
inc
pop
xchg
xchg
bound
adc
xor
cwtl
ret
or
xchg
cmp
iret
fmuls
scas
sbb
push
cmp
dec
mull
dec
mov
mov
xchg
mov
xchg
sbb
xchg
rcrl
push
pop
mov
shrb
inc
adcl
push
push
mov
test
dec
ds
divl
mov
pop
jge
pusha
ljmp
jle
xor
mov
mov
outsb
dec
xchg
xchg
or
insl
sbb
subb
inc
addl
jae
add
mov
jmp
and
lret
push
push
stos
xchg
outsb
push
sub
bound
lret
test
add
mov
lret
das
or
mov
or
xchg
js
out
jo
fcmovnb
sub
repnz
ljmp
xchg
out
push
scas
adc
jne
aad
inc
fistl
test
cmp
jo
dec
dec
jno
jbe
movsl
push
rorb
shrb
sbb
xor
xchg
sbb
push
insl
xor
pop
add
push
test
and
sub
test
push
adc
push
mov
stc
lret
inc
test
imulb
adc
push
jge
imul
or
mov
adc
jp
rcll
fs
add
aam
out
clc
pop
xchg
or
pop
pop
aad
dec
addr16
add
or
inc
mov
xchg
sbb
cmc
incl
inc
leave
rcll
cmp
cmpb
add
lea
test
aad
pushf
add
lea
adc
cmp
movsl
outsb
movsl
test
je
rcll
in
cmp
or
rcrb
std
xchg
pop
scas
or
sarb
jne
push
mov
pop
insl
or
pop
sub
pop
mov
fsubs
js
fsubrs
push
push
mov
test
ss
roll
jecxz
js
pop
adc
dec
data16
mov
popw
insb
mov
and
push
jno
adcb
rcrl
cli
xorb
jne
jno
inc
stos
adc
xor
add
xor
add
lods
aad
pusha
es
push
mov
push
add
aaa
daa
fwait
das
cltd
sbb
pop
stos
adc
adc
or
outsb
mov
lock
sub
dec
addb
mov
mov
test
xor
add
inc
xor
pop
stc
add
dec
inc
stos
lock
test
inc
mov
stos
dec
adc
mov
push
add
mov
stos
stos
inc
imul
out
or
or
sub
sbb
sub
xchg
insb
push
arpl
push
push
movb
test
push
push
lods
xchg
loopne
inc
mov
push
sbb
mov
push
inc
call
xor
in
lods
fiaddl
dec
xchg
xchg
push
push
stos
mov
imul
cmp
shll
mov
lea
mov
rcrb
outsl
test
push
mov
pop
add
test
inc
cmc
ljmp
inc
stos
cmp
movsl
out
cmp
dec
add
or
pop
cwtl
pop
subb
sbb
sub
aaa
and
mov
push
mov
add
lcall
mov
sbb
int3
ljmp
fmuls
sub
cmp
inc
hlt
xchg
ficoml
adc
aad
push
lods
mov
adc
mov
xchg
sub
gs
sbbl
pop
scas
adc
pop
pop
lret
movsl
sub
pop
lcall
or
ljmp
and
mov
movsl
cmp
push
fstps
test
and
mov
sub
es
push
or
aad
adc
push
lods
dec
xor
lock
jg
sti
pop
add
cmpsb
incl
dec
xor
lcall
hlt
jl
adc
andb
sbb
mov
sbb
ja
add
cld
mov
stos
sub
neg
dec
cmp
sbb
xor
pop
stos
fcmovne
push
addr16
pop
dec
mov
pop
movsb
mov
dec
outsb
insl
xor
push
cmp
mov
aam
add
sbb
adc
popf
pop
adc
std
ja
iret
movsl
sbb
aam
mov
push
mov
xor
repz
insl
and
popf
fstpt
inc
and
sub
outsb
add
push
adc
sbb
shl
push
addr16
xchg
cmp
sbb
cmp
dec
rorb
sbb
rcrb
adc
or
mov
push
aam
xor
pop
adc
lea
sbb
push
mov
pop
push
rcrb
lock
add
sarl
jle
mov
push
and
dec
dec
push
xor
mov
mov
xor
push
sbb
lds
pop
mov
mov
or
std
inc
xor
out
push
jb
cmc
push
sub
xor
fwait
sbbl
sti
lret
addr16
icebp
pop
fbld
out
adc
inc
dec
xchg
imull
add
sub
cli
sbb
and
out
hlt
dec
enter
sbb
xchg
dec
sbb
cmp
out
andl
jae
inc
sbb
lock
sbb
mov
push
sub
call
aam
adc
sbb
cmp
add
das
add
push
lods
mov
pop
fidivl
fbld
jmp
test
jbe
or
push
test
inc
pusha
inc
lret
mov
add
rcl
fidivs
xchg
dec
gs
daa
push
insl
push
ret
push
lock
pop
and
push
aam
flds
add
mov
insl
jmp
xchg
cs
dec
daa
fs
xchg
outsb
push
sub
rcl
push
add
orb
js
push
inc
mov
cmp
add
jp
test
xadd
mov
sbb
fildll
inc
movsl
repz
inc
lods
adc
push
or
push
cmc
das
add
sti
pop
int
xchg
shrb
pop
adc
xchg
inc
mov
sub
lods
xor
lods
push
adc
inc
pop
pop
andb
adc
mov
push
mov
cltd
adc
lea
insb
mov
pop
and
pop
push
rolb
imul
cs
insb
sbb
jae
adc
push
rorb
stos
pop
cwtl
aaa
mov
cmpsb
fmuls
add
cmc
xchg
or
add
adc
pop
stc
not
mov
inc
inc
push
jecxz
mov
mov
sub
addl
push
sub
push
mov
pop
dec
adc
adc
adc
dec
inc
or
scas
mov
lret
sub
dec
aad
dec
mov
lods
add
mov
adc
inc
pop
or
push
adc
aaa
cmp
push
lcall
add
orl
inc
inc
test
dec
or
adc
sbb
mov
push
jp
adc
test
adc
inc
mov
push
loopne
shll
sbb
inc
sub
push
push
test
inc
sub
and
repnz
mov
sbb
cmp
xchg
mov
daa
les
mov
or
mov
mov
ja
arpl
adc
ret
pop
rorl
bound
and
inc
daa
push
std
jmp
negb
pushf
cmp
push
shlb
push
mov
push
cld
push
insl
push
andb
xor
sbb
out
inc
jns
sub
push
dec
mov
int
js
jl
addb
push
mov
and
push
mov
or
inc
push
add
sub
pop
adc
sbb
inc
push
outsb
mov
inc
xchg
sbb
rcr
add
iret
outsb
imull
inc
test
xlat
outsb
add
and
sbb
lea
push
lods
andb
sbb
jns
mov
rolb
xchg
ret
aam
mov
push
inc
push
cmp
jno
or
cwtl
rcrb
mov
fadds
and
xchg
sub
insb
or
mov
nop
or
xchg
mov
mov
sbb
stos
xor
lcall
sub
out
loopne
fsubrs
dec
push
cmpsb
add
inc
lea
mov
lret
lock
mov
inc
push
or
and
add
sub
loope
jnp
mov
ja
inc
cwtl
ljmp
or
lea
test
push
ljmp
pop
push
jecxz
inc
cmpsb
ljmp
movsb
popa
dec
addb
test
movsb
mov
into
add
shlb
and
popf
pop
ljmp
cmp
leave
mov
sbb
inc
aam
lods
addr16
sbb
sbb
lea
add
adc
add
imul
xor
pop
cmp
adc
adc
xor
pushf
cmpxchg
push
inc
xchg
call
push
sbbb
xchg
mov
iret
mov
test
and
mov
cmpb
fxch
add
lock
push
mov
inc
sub
add
jne
and
push
mov
sbb
repnz
rorb
cmp
inc
xchg
pusha
stos
push
and
out
subb
insb
lret
push
mov
call
gs
imul
lret
loope
fwait
test
add
int
lea
rolb
push
sbb
adcb
inc
insb
mov
sbb
shlb
or
sub
arpl
add
outsb
pop
add
xor
aam
and
add
idiv
stos
adc
imul
and
inc
cli
loopne
sub
mov
lods
mov
inc
inc
hlt
xchg
and
jo
inc
mov
add
stc
lahf
inc
push
xor
push
cwtl
mov
push
mull
cmp
mov
or
and
aas
xchg
lcall
ret
sahf
popf
test
and
loopne
xor
add
fwait
notl
lods
add
shll
test
hlt
je
push
sbbb
add
lret
test
negl
insl
sub
mov
or
sub
mov
scas
pop
psraw
pop
inc
lods
adc
inc
xor
icebp
neg
pop
mov
sub
out
xchg
addl
push
data16
push
and
and
data16
sub
mov
aas
ret
pop
or
push
insl
or
lcall
inc
mov
popf
push
inc
pop
push
lods
xchg
test
arpl
pop
or
jecxz
js
lea
das
lea
push
nop
or
or
cmpsb
fwait
add
ds
push
cmp
inc
mov
imul
aad
mov
popl
dec
roll
add
sbb
xor
jns
adc
mov
mov
cmpsb
out
sbb
stc
mov
dec
and
sub
dec
bound
mov
xchg
cld
movsl
inc
mov
cld
xchg
push
cld
test
adc
subb
xor
movsl
das
iret
ljmp
xorl
inc
xchg
xchg
outsl
inc
mov
inc
and
adcb
push
pop
add
pop
movsl
sub
loopne
mov
dec
insb
fisttpl
lea
imul
lea
mov
inc
insl
push
cmp
inc
aad
push
out
adcb
push
push
jle
push
inc
fsts
inc
inc
adc
in
jg
out
lret
addr16
nop
roll
ret
dec
adc
outsb
pop
movsl
lods
add
add
lods
ljmp
insl
pop
or
and
push
fwait
das
sub
rcrl
outsl
lahf
mov
adc
inc
popa
and
inc
fisubrl
inc
sub
icebp
imul
dec
mov
jns
cltd
mov
stos
aam
lret
cmpb
add
in
roll
mov
mov
push
and
sub
add
inc
fldt
roll
sbb
and
stos
push
pop
cmp
fwait
mov
or
sbb
pop
lea
enter
sbb
jge
push
sub
and
pop
add
push
cmp
mov
push
jo
test
pop
jno
xlat
pop
xor
bound
inc
sub
xor
insl
rcrl
mov
mov
out
add
subb
inc
inc
pop
add
xchg
loop
dec
rcrb
adc
mov
sub
clc
sahf
adc
andl
xor
jns
imul
or
dec
lret
loopne
jbe
sub
jb
push
hlt
jnp
mov
mov
add
movsl
xor
test
ret
sub
xor
es
mov
xchg
push
mov
mov
jno
or
mov
jns
cmp
xchg
sub
sub
mov
loopne
cltd
mov
negl
orb
shrb
popa
rcrl
xchg
sub
mov
imul
out
cmp
gs
pop
add
es
lds
push
test
cmp
push
push
push
cmpsl
push
mov
stc
lods
xor
sub
ss
cmpsl
and
add
scas
cmc
leave
fildll
inc
or
sub
mov
or
dec
jb
adc
and
inc
imul
repnz
test
in
imul
add
push
sub
mov
scas
lods
add
mov
enter
mov
adc
mov
jecxz
or
mov
mov
aam
loop
loopne
and
cmp
inc
push
dec
inc
mov
test
push
push
or
arpl
loopne
out
xor
xchg
xor
xor
adc
or
adc
push
test
roll
add
insl
or
sti
mov
add
into
adc
lea
or
dec
lods
adc
or
inc
shrb
xor
out
mov
addr16
add
lods
inc
mov
push
out
dec
mov
ret
movsl
sub
dec
test
adc
test
push
mov
pop
push
icebp
movsl
mov
lods
fiaddl
mov
or
mov
xor
sub
dec
jo
pusha
sub
push
pop
push
pushf
call
mov
sti
inc
test
into
push
mov
and
push
fisubrl
cwtl
outsb
sub
pop
test
stos
adc
out
pop
jno
sub
inc
adcl
movl
inc
mov
outsb
push
xorb
das
xor
mov
pop
test
sahf
inc
gs
sub
mov
push
mov
mov
rcrl
cs
mov
jae
inc
mov
mov
andb
jle
push
test
imul
icebp
cmpsl
outsb
test
in
xchg
push
adc
push
repnz
mov
test
add
or
push
mov
mov
popa
mov
inc
in
add
mov
aad
jbe
out
push
ret
inc
cmpsl
insl
pushl
cmp
xor
add
mov
movsl
std
popa
add
and
adc
push
or
xchg
add
addl
shrb
mov
jae
lcall
mov
add
pop
call
lret
icebp
or
shll
test
leave
or
adc
sbb
xor
in
adc
sub
add
mov
add
xor
mov
jne
adc
jo
add
push
cmp
enter
mov
in
cmp
lods
sub
mov
das
inc
jnp
int3
sub
mov
in
push
sbb
nop
add
cmp
adc
push
aad
addb
ss
xor
mov
hlt
out
jle
cltd
das
push
adc
clc
stos
inc
dec
and
aam
and
sub
cmpsl
pop
mov
push
loopne
xor
push
lds
cli
fsubrs
sub
dec
push
sar
xor
sub
fildl
cmpsl
xor
and
push
or
mov
insl
imul
cwtl
lods
sub
mov
loopne
xor
out
inc
or
mov
mov
xor
sbb
fistps
adc
loopne
dec
add
adc
cmp
xor
loop
loope
loop
icebp
jg
loopne
test
add
cmp
add
or
int
cld
mov
inc
mov
sub
inc
sub
mov
xchg
sub
add
ret
push
icebp
cmc
mov
rsqrtps
and
inc
sub
aad
test
pusha
and
stos
mov
mov
hlt
sbb
insl
jno
subb
push
dec
push
je
es
cmp
subl
aam
notl
push
push
mov
popa
dec
push
fimull
add
test
push
sbb
into
aad
mov
setne
inc
xor
pop
push
sub
mov
or
push
leave
dec
gs
lods
inc
xchg
dec
aad
cmc
mov
jno,pt
and
add
lcall
popa
mov
movsl
mov
mov
push
inc
push
inc
sti
inc
mov
add
in
xor
jne
ficoml
push
xchg
stos
inc
insb
inc
cmc
xor
add
imul
xor
mov
aam
pop
outsb
mov
push
xchg
ds
jno
lods
pop
lods
push
push
jb
and
pop
or
xchg
add
add
pop
xchg
into
mov
adc
out
mov
lret
movsl
ljmp
pop
stos
ljmp
push
mov
inc
call
jnp
stos
mov
into
mov
push
add
sub
out
dec
dec
xor
push
xor
and
ja
lret
or
cmp
lahf
add
lcall
lret
test
jmp
shl
push
repz
imul
sub
jae
or
cwtl
adcb
sub
fisubl
pop
stos
ljmp
jb
inc
sub
pop
add
and
or
cmc
mov
add
push
cmp
sbb
push
mov
sbb
ret
insl
or
push
loop
inc
mov
mov
lcall
into
or
inc
or
int
rclb
mov
insl
out
sbb
enterw
push
mov
jnp
mov
adc
imul
test
jg
inc
lret
mov
inc
mov
aam
lods
inc
push
push
push
fwait
sub
inc
cmp
and
lret
xor
lods
jnp
pop
adc
mov
sub
imul
mull
int3
xor
outsb
ja
rclb
push
inc
fiadds
or
jb
push
jl
xchg
out
test
mov
mov
mov
mov
inc
jno
ficoml
inc
inc
xor
lea
xchg
or
imul
xor
lods
and
mov
sub
or
inc
in
lods
sbb
jno
xor
insb
sub
xchg
cmp
stos
mov
popa
jb
mov
adc
addb
test
mov
dec
sub
dec
pop
mov
dec
ja
mov
call
push
in
js,pn
inc
or
xchg
lea
outsb
dec
xchg
mov
stos
add
fimull
mov
data16
pop
fldenv
inc
mov
stos
push
cmpsb
mov
mov
mov
xor
imul
adc
cmp
loope
add
xor
sbb
xchg
dec
pop
mov
xchg
mov
push
lods
dec
jmp
add
push
adc
data16
inc
push
sub
push
jle
sbb
dec
sbbb
mov
pop
push
jp
testl
mov
sub
mov
xor
inc
test
adc
lret
cmpsb
dec
insl
sub
pushf
sub
adc
daa
xlat
repnz
pop
and
lcall
dec
insl
orb
ret
sub
cmpsb
mov
js
lods
inc
rol
frstor
pop
imul
inc
daa
addb
sbb
adc
and
test
push
sub
imul
in
pop
subl
or
mov
add
mov
ret
mov
or
cmpsb
pop
push
ret
outsl
lods
test
sub
pop
movsb
aam
sub
stos
pop
sub
fiaddl
aam
lret
outsb
cwtl
lcall
sbb
and
or
inc
push
pop
push
inc
and
out
cld
sub
das
loop
add
or
outsl
sbb
add
mov
clc
nop
mov
and
inc
push
push
hlt
mov
add
or
push
cmp
jne
xor
inc
mov
leave
pop
mov
rorb
mov
roll
cld
mov
adc
lods
dec
adc
push
push
insl
inc
lea
les
xor
addr16
cmp
or
pop
xchg
aas
ret
jge
pop
fadd
add
push
xor
and
repnz
lds
notb
dec
mov
xorl
aad
mov
jp
push
shll
inc
mov
ds
inc
xchg
and
testb
add
sbb
test
fadd
jle
sub
dec
aam
push
add
push
out
xorb
and
add
and
aaa
addb
out
add
add
xor
and
inc
repnz
addr16
xchg
adc
or
sub
popf
repz
sub
dec
idivb
lods
push
or
int3
cmp
in
mov
pop
mov
push
jmp
push
xor
aad
sbb
loopne
mov
and
jnp
rcll
es
daa
sub
rolb
int
xor
or
jae
push
popa
inc
adcl
je
mov
test
adc
push
int3
and
xor
sbb
and
xchg
cmp
popa
fdivs
adc
adc
add
inc
mov
je
fs
adc
adc
stos
push
sbb
and
dec
call
inc
sbb
lods
push
or
and
xor
mov
cmp
pop
sbb
inc
insb
and
xor
adc
int3
mov
fists
sub
aam
adc
dec
add
cmp
cld
add
in
jmp
neg
xor
and
shlw
add
sbb
out
or
add
push
add
add
shl
call
cmp
jns
int3
pop
dec
add
add
push
int3
mov
push
sbb
dec
add
inc
jne
mov
push
or
sub
mov
add
jae
call
and
cmp
sub
xor
lock
call
fisubrs
fdivrs
outsl
neg
inc
dec
aaa
aam
sub
loop
and
dec
lds
inc
stos
adc
jns
call
jbe,pn
cmp
inc
or
mov
mov
mov
pop
inc
cmc
or
enter
in
push
sub
xchg
fiaddl
notl
test
push
insl
std
cmp
mov
sbb
inc
test
or
mov
mov
push
subl
or
inc
pop
inc
and
sbbb
or
mov
jnp
or
cs
mov
push
sub
sbb
adc
das
clc
rorl
add
insb
test
xlat
sbb
inc
sub
pop
or
cmp
mov
dec
sarb
push
sbb
aad
push
rorl
jp
adc
push
mov
leave
cmp
aad
loope
ret
test
push
add
rorl
xchg
outsb
nop
sub
and
inc
mov
adc
je
test
addr16
cmpsb
cli
lret
adc
or
pop
addr16
sub
inc
lds
mov
or
cwtl
cmp
xor
cmp
gs
fmuls
cbtw
loop
mov
push
jno
sub
mov
data16
dec
mov
mov
fdivrl
dec
xor
jae
push
xchg
sub
xchg
push
mov
aam
jmp
cmp
fistpl
lods
xor
push
or
je
jl
test
inc
xchg
loop
popa
mov
cmp
addl
xchg
rcl
imulb
xor
je
or
mov
js
decl
nop
xchg
mov
sub
and
mov
xor
mov
cmc
ja
subb
inc
add
or
sbb
test
inc
test
mov
sub
inc
mov
ret
xlat
loop
mov
movsl
sub
popa
test
inc
mov
es
mov
ret
lods
inc
cmp
xchg
mov
push
lods
test
xor
mov
inc
pop
out
push
push
inc
inc
pop
dec
aad
aam
adc
mov
adc
js
push
scas
pop
popa
notl
xchg
movsb
pop
cmp
cmp
or
or
repz
gs
cmp
lea
test
and
movsl
pop
out
push
or
lods
imul
mov
jg
scas
cmp
movsl
mov
sbb
int
ret
into
inc
lods
fsubrs
sarb
es
add
sub
xor
or
roll
push
inc
mov
test
adc
outsb
push
sub
pop
fwait
hlt
push
mov
or
aad
inc
mov
lahf
sub
add
xchg
or
push
push
sub
cli
dec
test
rclb
lcall
xor
mov
xor
cmp
xor
nop
mov
mov
sub
or
enter
jmp
jo
popa
and
mov
xchg
mov
mov
inc
and
jne
aad
in
push
orb
mov
cmpsb
mov
xchg
adc
adc
mov
mov
outsb
dec
and
pop
dec
sub
stos
arpl
push
test
xor
sub
ss
push
adcb
push
test
inc
in
gs
mov
mov
sti
xchg
cmpsb
enter
push
mov
sub
jnp
push
jb
sub
inc
dec
cmp
pop
pop
test
add
in
sub
push
push
xor
aaa
nop
jmp
xor
mov
bound
xchg
mov
pop
mov
push
pop
ror
aad
out
mov
push
mov
cmp
test
xchg
push
mov
rclb
ret
dec
jecxz
or
sbb
push
xor
adc
rclb
cmpsl
pop
mov
jmp
fdivs
and
mov
and
mov
push
inc
push
lcall
jno
sbbb
inc
dec
jp
mov
mov
push
pop
add
cmp
subb
push
xchg
stos
outsb
mov
sub
mov
xlat
sub
ja
lahf
adc
cmp
add
push
push
icebp
pushf
imul
adc
jl
pop
insl
mov
int3
jmp
xchg
pop
sub
push
out
leave
push
sub
inc
mov
xor
stos
aam
push
inc
test
hlt
add
xchg
mov
fnstcw
sub
lods
push
test
cmp
xchg
mov
imul
js
adc
add
insb
cmp
or
lods
jnp
mov
or
jb
cmp
pop
mov
sbb
call
test
push
add
push
push
push
stos
leave
mov
jmp
fnstenv
je
xchg
push
clc
sbb
mov
xor
adc
fldcw
dec
add
inc
nop
cmp
out
sub
fcmovnu
inc
push
adc
daa
je
or
adc
add
insb
fsubrl
adc
arpl
push
aas
pop
das
pop
lods
jne
sbb
mov
int3
in
cld
or
jmp
xchg
clc
cmp
and
inc
xchg
pop
in
pop
inc
outsl
iret
push
add
adc
lret
add
inc
fistps
cld
repnz
jp
arpl
adc
and
call
sub
xchg
xchg
jecxz
sbb
adc
and
out
fiadds
jns
and
push
aad
pop
rcll
out
inc
js
out
lcall
mov
insb
add
sbb
xor
movsl
fcomp
add
and
call
fwait
icebp
ja
repnz
and
inc
jl
add
mov
call
xor
into
or
std
stos
or
notl
push
ss
jnp
out
ret
or
push
out
sti
je
sbb
sub
jne
ror
xchg
cwtl
test
inc
stc
and
mov
inc
inc
dec
sub
js
dec
loope
xorb
fisttpl
movsb
sub
sbb
adcb
bound
add
push
mov
ret
cmp
ja
loopne
cmp
mov
insl
das
aas
pop
ds
sbb
roll
leave
int3
mov
add
pop
pop
rorb
or
push
imul
aam
jg
pop
js
jno
adc
add
and
data16
into
pop
ficomps
pop
sbb
lar
test
push
mov
cmpsl
or
cmovo
sbb
xor
not
cld
and
push
push
adc
add
arpl
cmp
addr16
imul
mov
notb
push
adcb
mov
add
cltd
xchg
out
dec
pusha
fs
loope
int
hlt
and
xor
add
lret
jle
stos
jecxz
jle
mov
orl
or
test
adc
adc
dec
ret
loope
add
test
add
xor
call
inc
add
and
cli
jg
gs
xor
es
cwtl
test
sbb
mov
enter
add
inc
cmp
or
add
test
icebp
pop
mov
pop
mov
cs
and
mov
xorb
or
in
add
dec
inc
daa
mov
push
and
sub
push
push
orl
push
mov
cmp
adc
adc
mov
adcb
and
inc
or
js
rcr
sub
cmp
cs
mov
push
pop
test
push
sub
push
pushf
or
or
das
pop
mov
push
dec
pop
mov
mov
push
sbb
dec
aad
enter
fimuls
mov
notl
and
data16
xchg
cmp
cmpsb
outsb
add
aad
mov
jb
rorl
shr
fs
mov
jb
sub
xor
and
push
popf
fdivs
mov
sub
xchg
inc
and
mov
mov
pop
pop
xor
pop
and
lea
push
cmp
push
and
xchg
cmp
push
sarb
lock
sub
adc
adc
ret
mov
or
mov
adcl
xchg
and
das
jmp
ljmp
pushf
inc
mov
fs
sub
push
xor
jne
push
inc
cltd
sbb
inc
aad
out
icebp
sub
clc
shll
xchg
mov
and
inc
filds
test
xor
fldcw
mov
jg
pop
fst
loopne
inc
mov
insb
inc
stos
loop
mov
xchg
inc
ret
es
sub
add
mov
pop
sbbl
jb
push
push
pop
jo
fstpt
push
mov
or
push
or
cmp
sbb
add
mov
pop
push
push
mov
jmp
test
sbb
xchg
aaa
adc
or
daa
mov
aam
in
sub
mov
xor
pusha
xor
pop
mov
loope,pn
adc
fldenv
cmp
andl
mov
test
ds
lret
mov
pop
lds
or
test
into
xchg
add
or
mov
push
stos
aad
movsl
sub
push
pop
andb
lods
bound
data16
jmp
push
imul
dec
data16
aad
adc
lret
dec
lods
push
lahf
gs
or
mov
ret
sbb
test
fcomps
push
mov
cmp
adc
push
push
add
or
inc
xchg
stos
pusha
mull
dec
xor
push
mov
push
mov
push
pop
fidivrs
outsb
and
push
xchg
or
test
xor
aad
adc
pop
mov
push
aam
push
adc
inc
adc
or
ret
lods
rcl
pop
sub
lret
jg
jb
mov
nop
lahf
clc
int3
lcall
test
sti
mov
push
adc
pushf
mov
inc
mov
test
inc
dec
add
or
mov
iret
ret
inc
addb
repnz
leave
add
push
into
push
rcll
push
fiaddl
sub
mov
popa
inc
inc
movsl
enter
sbb
loop
pop
stos
xchg
stos
xchg
xchg
aad
pop
xor
push
icebp
inc
dec
push
movsl
mov
cmp
nop
sbb
add
xor
out
pop
insl
sub
mov
push
and
jae
add
adcl
outsl
aad
es
mov
add
stos
push
push
rcrb
sbb
xorb
je
lcall
dec
sbb
lods
push
pop
push
popa
jg
pop
imul
jo
pop
and
pushf
iret
popa
xchg
sbb
icebp
negl
sub
sub
add
mov
sbb
stc
push
dec
adc
inc
xchg
xor
pop
rorb
lods
push
daa
xor
adc
test
daa
push
push
mov
or
jbe
movsl
stos
pusha
pop
push
lret
shll
push
add
push
pop
or
aad
fwait
dec
push
add
es
mov
adc
mov
lods
pop
fldt
inc
movsl
mov
push
cld
mov
jno
sbbb
dec
jmp
stos
or
addb
xchg
out
lret
mov
mov
pop
or
xchg
and
sub
fisubrl
inc
insl
cmp
push
andl
decl
xor
ljmp
sarb
sub
pop
mov
stos
shll
pop
test
adc
pop
pop
xor
pop
loopne
xchg
ret
xchg
mov
sub
popl
inc
lea
and
out
push
ljmp
xor
sub
mov
add
or
test
inc
mov
imul
or
sbb
les
xchg
andb
inc
cltd
repz
push
popa
popl
inc
push
mov
push
pop
outsb
push
mov
xor
or
fwait
pop
mov
push
rcr
fwait
mov
push
xchg
stos
je
loop
and
inc
and
jae
push
sub
xchg
mov
add
ret
mov
into
mov
mov
jae
addl
imul
mov
dec
mov
mov
ror
sub
jge
push
mov
sub
fmuls
jae
aam
stos
or
mov
sub
lods
lock
sbb
xor
xchg
lock
mov
mov
mov
sub
aam
sub
into
push
xlat
xor
inc
or
add
xlat
push
mov
mov
jb
inc
sbb
push
mov
inc
adc
mov
cmp
dec
or
movsl
ficompl
mov
jmp
insl
or
cmp
bound
pop
pushl
pop
andb
sbb
repnz
imulb
out
es
xchg
or
dec
icebp
add
ret
sub
adc
and
into
cmp
test
cwtl
push
cmpsb
push
shrb
addb
dec
mov
xor
sbb
add
cmpsb
cmp
ret
movsl
loopne
push
aad
and
pop
hlt
sub
pop
cli
xchg
pop
mov
mov
cltd
add
dec
rcll
inc
push
pop
adcb
inc
dec
jno
scas
add
push
inc
adc
push
lods
and
inc
xchg
add
inc
imul
mov
mov
push
aad
cld
or
jae
subl
stos
and
rep
xchg
das
sub
mov
sbb
or
data16
ja
mov
sbb
nop
dec
sbb
adc
scas
lret
dec
aam
or
cmp
jp
aam
push
mov
sbb
nop
repz
mov
adc
push
sub
hlt
add
push
imul
sub
xchg
push
and
mov
cmpsb
dec
sbb
pop
test
cmp
sbb
adc
mov
xor
xor
test
pushaw
jae
repz
sarb
inc
push
ljmp
popa
ret
push
mov
loop
fcompl
inc
adc
inc
or
cmp
insl
mov
bound
sbb
adc
xor
push
inc
std
push
insb
pop
sub
fimull
mov
push
movsl
jp
mov
push
vpackssdw
xchg
dec
sub
popa
push
pop
imul
jo
push
cmp
xchg
mov
cmp
inc
dec
aaa
mov
scas
push
lcall
stos
shrb
iret
stos
xor
adc
movsb
xlat
xor
and
imul
lret
inc
test
mov
imul
inc
cmp
insb
adc
outsb
mov
mov
testl
pop
loop
ss
push
sub
push
pop
lcall
lcall
inc
rorl
pop
aad
mov
add
adc
add
leave
xor
inc
daa
sub
bound
testl
and
das
ret
stos
mov
xchg
loopne
rolb
dec
test
mov
sub
aad
push
push
xchg
xchg
jmp
sarb
xchg
cmpsl
lods
and
js
sub
add
jl
mov
into
push
sbb
cmc
mov
sub
mov
test
lock
jmp
cwtl
push
mov
mov
mov
push
test
inc
dec
inc
lods
cmp
not
xor
out
insl
and
or
jno
mov
mov
lods
jo
inc
jg
jp
dec
inc
add
lds
dec
and
imul
sub
xchg
sub
sub
add
gs
aaa
and
mov
inc
lods
push
add
movsl
push
push
push
pop
xchg
and
jg
jo
mov
fisttpll
push
adc
bound
or
sbb
pop
lock
xor
inc
inc
roll
jb
fsubr
dec
shr
bound
inc
inc
subb
pop
jo
or
sbb
sbb
add
stos
lock
pop
mov
xchg
fistpl
fcoms
add
dec
repnz
xchg
fmuls
addb
lock
cli
mov
mov
and
in
data16
and
repz
or
or
push
fisttps
movups
dec
adc
cmp
mov
or
ficompl
mov
dec
or
aad
push
mov
out
inc
cmp
add
ss
adc
or
inc
hlt
or
ljmp
fldenv
in
push
mov
inc
orl
xor
jnp
inc
dec
mov
lret
or
cmp
pop
xor
rclb
jg
shl
fsqrt
ss
mov
iret
mov
jg
dec
loopne
and
je
mov
into
fmuls
sbb
add
clc
inc
ret
inc
adc
leave
test
push
xchg
daa
mov
add
loope
in
sbb
aas
in
or
inc
js
pop
inc
add
or
stos
push
fwait
mov
or
pusha
sub
dec
adc
stos
js
rcrl
enter
pop
mov
push
mov
lock
sbb
pusha
add
push
sbb
jl
adc
sahf
fistl
adc
sbb
cmp
clc
fisubrs
ljmp
daa
and
testb
cli
dec
add
jmp
add
xor
sub
mov
enter
xor
jo
scas
sub
dec
xor
jne
stc
lcall
push
jecxz
push
loope
mov
daa
enter
fldenv
shlb
mov
mov
xor
enter
pop
bound
lds
inc
sbb
pop
and
dec
lock
inc
lock
inc
clc
jle
adc
add
loop
clc
or
mov
cmp
pop
mov
lcall
rcrl
xorl
adc
les
out
cmp
adc
int3
jecxz
mov
and
rorb
inc
and
cmpsb
dec
aas
push
pop
xchg
test
or
out
out
out
inc
adc
stos
aad
adc
ret
int
mov
push
mov
es
xchg
sbb
inc
icebp
and
inc
lods
xor
mov
push
aam
pop
cltd
push
xchg
or
xchg
subl
mov
mov
gs
sbb
mov
xchg
into
xor
dec
xchg
add
inc
mov
sub
rcr
mov
adc
lock
mov
mov
add
inc
mov
and
pop
jno
data16
dec
adc
sub
lcall
test
push
sbbb
push
outsb
xchg
inc
inc
loopne
sbb
push
aad
stos
push
lds
cmp
lods
gs
adc
add
add
fsubs
dec
xchg
mov
or
ds
mov
ljmp
mov
lods
xor
movsb
shrl
adc
lods
inc
push
push
pop
mov
dec
rolb
mov
aad
inc
xchg
push
popa
mov
sub
mov
sub
mov
xor
pop
aaa
mov
cmp
inc
add
sub
push
int
jae
fsubrs
inc
mov
sbb
and
and
dec
xchg
lea
mov
maxps
rcll
and
push
and
mov
xchg
push
imul
mov
shrb
add
adc
popa
test
push
cli
imul
mov
mov
add
push
or
jne
adc
xchg
inc
mov
xor
inc
cmpsl
loop
in
mov
push
sbb
inc
jo
invd
pop
add
jnp
push
call
add
das
add
adc
mov
aam
add
push
dec
adc
jle
incl
mov
pop
orb
fnstcw
rcll
fimuls
push
inc
push
outsb
add
add
mov
xchg
and
data16
jae
lea
xchg
or
adc
les
pop
mov
adc
ret
sahf
popl
sub
inc
add
nop
jns
imul
pop
cmpl
sub
push
mov
dec
push
jnp
add
sbb
movsl
xor
pop
push
xchg
stos
fists
jno
and
inc
imul
sbb
jno
sbb
cmp
push
or
pusha
sub
inc
aam
or
inc
mov
fimull
inc
mov
sub
pop
mov
subb
inc
mov
not
push
xorl
sbb
push
rcll
inc
mov
mov
or
adcb
inc
js
mov
sbb
mov
cmpsb
add
add
es
mov
aas
mov
mov
sbb
iret
mov
sbb
lods
sub
out
adc
pop
mov
inc
xchg
ret
rolb
mov
push
ss
stc
sub
lcall
mov
or
sbb
xor
adc
inc
adc
lahf
cmp
mov
push
pop
sbb
repz
push
xchg
xchg
loop
das
icebp
mov
sbb
add
enter
push
mov
mov
sub
jns
call
and
stos
jno
cmp
stos
out
pop
call
or
cli
jmp
mov
dec
cmp
test
sbb
and
andb
mov
mov
lods
xchg
incb
cmpsl
lock
nop
mov
repnz
test
push
sub
dec
push
sub
sub
jno
scas
push
sbbb
jnp
add
in
mov
push
xor
ret
and
cmp
dec
stc
cmp
xchg
pop
mov
cmp
jbe
push
gs
imul
sub
data16
mov
push
add
stc
or
add
sbbl
dec
push
imul
add
test
mov
mov
xchg
inc
add
inc
sbb
pop
sbbl
imul
push
insl
and
mov
int3
push
mov
fadds
sbb
fcmovbe
aam
mov
xor
jne
mov
rolb
sbb
pop
and
movsl
mov
push
lods
incb
inc
mov
push
pop
push
aad
push
and
push
lcall
inc
cmp
gs
xor
push
mov
pop
mov
mov
add
test
or
enter
mov
jbe
push
push
fstpt
sub
mov
add
mov
push
add
lods
push
ljmp
adc
mov
xchg
push
ficompl
adc
or
call
sbb
or
pop
xor
mov
testb
imul
sbbb
mov
fisubrl
pop
push
rcll
mov
dec
movsb
mov
inc
inc
inc
xor
push
sbbb
inc
rcl
and
mov
adc
cltd
mov
inc
dec
and
push
movb
fmuls
mov
into
push
push
dec
aad
add
mov
inc
jecxz
outsb
push
jg
test
rclb
dec
xor
mov
mov
push
ret
xchg
das
sqrtps
lcall
and
rcr
lods
sub
mov
pop
mov
pop
sub
adc
or
xchg
add
hlt
fnstenv
sub
movsl
xchg
clc
inc
push
test
aad
inc
daa
pop
push
push
orl
out
adcl
mov
cmp
mov
push
xorl
movsl
stos
push
inc
and
cmp
jb
xor
outsb
loope
mov
lret
cmc
push
push
adc
or
sub
adc
loope
popf
das
sub
or
fdiv
push
and
push
or
imul
xchg
lods
xchg
or
push
mov
lea
push
aaa
mov
push
pop
and
cmp
or
add
sub
adc
inc
fisubl
test
mov
or
lods
push
cmpb
and
dec
lea
aas
push
push
loopne
dec
cmp
jmp
or
jbe
push
pop
mov
dec
adc
subl
push
adc
jge
je
mov
js
push
rolb
mov
dec
inc
adc
stos
inc
aam
mul
mov
sbbl
add
and
dec
les
popf
cmpsl
cmpsl
mov
mov
push
push
mov
inc
push
addr16
xlat
rol
rorb
inc
add
ret
inc
incb
movsb
cmp
mov
adc
out
dec
inc
push
mov
jmp
shlb
or
dec
aam
loopne
pop
adc
xchg
xchg
fildll
ljmp
pop
xchg
clc
adc
adc
ret
pop
dec
les
add
add
mov
roll
jecxz
and
rclb
xchg
lock
loopne
jnp
add
mov
pop
add
adcl
lock
add
adc
add
mov
pop
nop
mov
addr16
pop
adc
ret
cmp
mov
mov
clc
dec
inc
push
test
pop
push
hlt
aam
clc
inc
fcomi
push
mov
in
xor
adc
and
lods
test
jl
jge
mov
lret
insl
pop
mov
push
and
pop
addr16
cmp
push
cwtl
aad
es
push
add
comiss
xor
call
add
jae
shll
lock
push
dec
mov
or
xchg
mov
pop
les
xor
add
inc
push
sub
or
inc
fsubrl
or
inc
int
sbb
push
dec
mov
mov
lds
lods
push
add
xor
stos
xchg
and
shll
pop
imul
adc
dec
aaa
and
and
outsb
stos
adc
dec
imul
xor
or
push
rorl
push
outsl
bound
loop
ds
cmpsl
and
sub
negl
and
mov
jecxz
inc
inc
roll
push
xor
cmp
sub
insl
leave
lea
mov
inc
mov
dec
stc
lods
jns
lea
leave
aaa
test
stos
pop
and
mov
xchg
imul
push
mov
sub
push
je
sub
push
in
je
xor
scas
mov
mov
inc
adc
ljmp
lcall
and
add
add
fists
test
fdivrl
das
inc
sbb
mov
push
cltd
test
push
xchg
lret
dec
inc
les
and
cmc
fwait
js
stos
inc
mov
push
mov
xchg
mov
mov
addl
test
sub
orl
sbb
pop
inc
and
pop
xchg
movsl
sbb
test
sub
pop
mov
push
push
add
and
dec
or
mov
cmp
mov
or
movl
stos
in
std
inc
shll
daa
and
add
push
jae
jg
insl
arpl
and
jne
mov
or
jne
push
inc
mov
inc
push
add
cmc
test
cld
adc
pushf
pop
cld
jp
or
or
cmp
mov
add
gs
xchg
ret
pusha
jne
inc
or
jne
or
jo
xchg
pusha
ffree
adc
push
pop
int
mov
adc
outsb
add
or
flds
inc
into
adc
inc
cwtl
push
push
mov
out
lock
lret
jle
pop
and
fcoml
imulb
pop
pop
sub
js
testb
add
xor
inc
and
lock
jmp
fidivrl
mov
and
and
mov
test
je
addb
jb
mov
adc
ret
add
and
loope
pop
push
jbe
in
data16
sub
or
aam
and
jo
mov
lods
cs
push
pusha
shl
inc
cwtl
push
inc
gs
mov
mov
cli
rol
or
int
or
dec
push
mov
adc
push
mov
popf
adc
sub
test
in
fnstcw
shll
sti
xchg
mov
in
and
mov
push
ja
xchg
loope
mov
in
test
push
mov
jne
mov
rol
divps
push
mov
mov
or
push
add
fwait
adc
fnstcw
inc
xor
inc
sbb
cmp
add
and
lock
add
add
sbb
mov
inc
jmp
dec
bound
loop
repz
xor
call
adc
loopne
xor
push
dec
dec
ds
xor
sub
inc
aas
jne
mov
imul
mov
clc
gs
sbb
add
repnz
inc
imul
inc
mov
dec
cld
or
jbe
add
mul
sti
arpl
mov
jp
rolb
mov
or
xor
cmpsb
cmp
scas
int3
pop
xchg
adc
dec
fstl
push
adc
mov
push
rolb
and
clc
pusha
dec
clc
daa
loope
fwait
xlat
or
inc
adc
mov
mov
icebp
cmp
test
test
add
pop
push
ret
adc
fnsave
inc
lds
aad
ret
xchg
lcall
call
pushf
or
jg
loop
rolb
add
inc
in
lock
mov
lretw
sub
fisttpl
pop
repnz
xor
pop
fsubrp
call
pop
pop
lods
addr16
xor
sub
leave
les
mov
mov
js
cmp
jmp
add
sub
pusha
xorb
gs
and
stos
mov
fldt
fwait
or
loopne
dec
clc
add
inc
push
or
xorb
pop
push
dec
sub
loope,pn
or
push
mov
ret
mov
aam
push
ljmp
dec
std
pop
test
adc
les
or
cmpsl
xchg
loop
dec
fstl
and
fldenv
xchg
jo
push
mov
add
xchg
lret
push
add
sub
sub
and
shlb
jne
ret
imul
call
fildl
mov
test
shll
mov
hlt
push
sbb
mov
lret
push
call
lcall
aaa
test
mov
adc
loop
popl
xchg
ret
inc
mov
mov
or
fldenv
decb
or
aad
jecxz
mov
sbb
stc
divl
setle
les
clc
sbb
xor
icebp
push
cmp
stos
xchg
enter
mov
xor
xchg
mov
test
stc
shrb
in
loop
inc
nop
jmp
cwtl
faddl
jb
add
add
fucom
or
or
fwait
pop
mov
jae
add
xchg
rorl
cmp
lds
push
mov
mov
in
out
orb
push
pop
mov
pop
add
inc
inc
stos
stos
call
or
andb
adc
lret
mov
movsl
dec
inc
xchg
or
and
add
test
xor
mov
rcrb
and
call
jno
add
jb
inc
sub
aad
inc
movsl
pop
pop
sbb
sbb
sub
dec
movsl
xchg
lret
aam
push
test
aad
xorb
sub
and
mov
cmp
cmp
mov
push
add
sub
in
pop
add
push
push
mov
fsubrl
add
bound
roll
inc
test
push
and
and
loop
addb
mov
add
js
sub
sbb
sub
or
scas
jo
adc
repz
add
sahf
cwtl
test
rclb
inc
outsb
push
test
adc
popl
test
mov
rolb
aam
and
in
or
pop
xchg
out
loop
or
jno
loop
ss
inc
adc
sbb
adc
imul
loop
pop
mov
test
sub
cmc
or
xlat
inc
adc
gs
mov
push
mov
mov
jae
enter
testl
mov
arpl
jno
or
mov
mov
push
cmp
adc
ja
xor
sub
xchg
push
outsb
mov
push
cmpsb
testl
pop
cltd
pop
sub
push
xor
adc
adc
insb
test
movsl
dec
jmp
dec
js
sub
mov
mov
sti
xlat
inc
icebp
push
mov
sub
ja
cmp
mov
mov
fstpt
test
leave
xchg
loop
xchg
test
lret
aaa
adc
jo
inc
out
xor
inc
push
stos
sub
push
sbb
dec
es
andb
cmpb
cmp
xor
mov
push
and
push
loopne
or
inc
push
mov
adc
mov
dec
push
sub
and
xchg
stos
aam
inc
rorl
and
fst
and
test
pop
das
mov
adcb
ss
inc
inc
mov
adc
mov
adc
and
lods
push
adc
pop
rcl
outsb
mov
push
push
adc
add
movsb
push
orb
xlat
jg
bound
lcall
shrb
test
mov
lret
fisubl
inc
movsb
movsl
add
adc
test
out
iretw
add
push
pop
push
and
jne
inc
or
pop
test
and
mov
sbb
dec
es
cwtl
mov
pop
sbb
imulb
mov
add
lea
push
sbb
out
movsl
rorb
push
and
or
mov
fldl
mov
xor
sub
idivl
push
testb
or
aaa
mov
aaa
aaa
scas
jle
stos
inc
or
xor
out
mov
aad
and
pop
fucomi
loop
mov
rcl
fcmovnu
outsb
xor
test
push
cmp
sbb
int3
lahf
inc
pop
jns
cmp
cmp
insl
cwtl
mov
push
mov
cld
sbb
shr
outsb
cmpsl
into
mov
lods
add
add
cmp
xchg
cmc
lea
push
xor
mov
sahf
cs
imul
mov
lret
shll
push
into
push
push
inc
dec
rcrl
push
inc
stos
mov
sbb
rolb
or
orb
cmc
divb
subl
lea
sub
jns
push
push
mov
xor
and
xor
xlat
inc
mov
inc
test
fld
or
jmp
pop
lods
aad
add
js
inc
pop
stos
push
aam
ss
stos
push
mov
aam
mov
push
or
xor
inc
mov
mov
cwtl
out
and
inc
rcr
push
fld1
jle
mov
xor
pop
ret
in
jb
lods
js
push
push
add
ljmpw
nop
divl
inc
leave
inc
test
aad
push
dec
xchg
push
rclb
push
mov
movsl
pop
mov
push
cwtl
mov
lcall
push
xchg
mov
xchg
add
cmp
test
pop
mov
cwtl
subb
push
mov
aam
push
fbld
icebp
lods
sub
out
push
push
pop
inc
dec
push
mov
push
cmp
add
jns
pop
inc
mov
nop
lea
cwtl
xorb
mov
test
pop
mov
aam
sub
fistpll
sti
mov
icebp
mov
inc
push
pop
inc
xchg
fisubl
jnp
jp
push
notb
imul
and
and
insb
sub
mov
lret
push
xor
lcall
and
pushf
fcomps
mov
outsb
pop
imul
adc
inc
or
jb
js
test
inc
push
mov
add
mov
pop
push
stos
sub
xor
insl
pop
push
shrb
gs
mov
aad
adc
insl
mov
lods
shrl
xor
test
outsb
jnp
insl
mov
inc
sbb
inc
pop
mov
fwait
cmp
adc
and
or
rcll
sbb
sub
mov
mov
inc
ret
lods
mov
fninit
mul
pop
jecxz
mov
lea
add
pop
inc
push
mov
or
cld
mov
test
or
rolb
aad
mov
add
mov
test
xchg
jl
pop
subl
cmp
mov
inc
mov
adc
rcl
xor
sarb
movsl
jno
out
sbb
dec
sbb
movsl
or
or
jmp
jmp
fildl
lods
push
pop
std
push
cs
push
sbb
and
sbb
adc
push
inc
fidivrs
adc
imul
push
das
add
cwtl
es
lea
mov
xor
jne
mov
imul
push
in
pop
mov
pop
sbb
and
xor
call
aaa
or
mov
sub
push
mov
testb
mov
pop
pushf
sub
daa
sub
test
shlb
dec
and
loop
mov
stos
repnz
test
sub
mov
add
dec
aad
mull
roll
adc
fs
xor
sahf
mov
daa
inc
xor
cmp
dec
sub
mov
es
jg
stc
ljmp
xchg
add
inc
cmp
das
test
jno
mov
bound
cltd
stos
mulb
add
inc
or
fwait
pop
add
xchg
jb
lods
call
aam
and
sahf
or
sub
fmuls
aas
into
lcall
mov
in
or
nop
xchg
stos
mov
push
in
push
out
xor
fiadds
in
test
int
push
mov
or
jne
jmp
mov
mov
mov
and
xchg
add
fsubs
jge
shll
fmull
shrb
mov
das
rorl
mov
adc
call
mov
fdivr
test
and
cwtl
pusha
in
pop
inc
pop
or
mov
and
cmp
adc
mov
cwtl
mov
push
jo
xor
and
cmp
and
push
cmpsl
insl
sti
pop
adc
popf
mov
out
fisubs
call
xchg
push
add
mov
push
pop
mov
pusha
xor
mov
cmpl
nop
mov
outsb
cmp
pop
pusha
out
or
rcr
inc
sub
push
xchg
cwtl
sbb
lock
scas
adc
pop
fld1
into
dec
mov
add
pusha
adc
mov
movb
pop
sbb
sub
pop
cli
mov
jge
mov
fwait
mov
push
xor
rolb
test
ret
xor
dec
jb
push
dec
inc
xor
add
addb
movsl
daa
or
aam
rolb
test
call
stos
pop
or
out
and
add
mov
cli
jle
add
mov
sbb
sub
push
adc
stos
aaa
adc
add
sub
or
lahf
in
add
shrb
sbb
inc
shll
add
adc
and
sub
mov
stos
mov
sub
adcl
push
mov
or
xchg
lcall
aaa
ljmp
sbb
pop
or
es
push
repnz
mov
push
add
adc
stos
inc
or
sbb
inc
pop
stc
addb
xor
and
test
pop
adcl
aad
xor
push
sbb
sub
sbb
push
push
adc
sbb
test
sbb
mov
mov
jne
rclb
cmp
pop
or
or
or
xchg
cs
shlb
jae
mov
test
adc
push
testl
call
mov
add
movsl
dec
inc
imul
mov
inc
aam
test
pusha
hlt
push
sub
pop
enter
xor
and
es
stos
sub
je
mov
or
mov
sub
mov
xor
push
mov
sub
or
jno
inc
imul
add
int3
add
sub
dec
mov
mov
inc
xor
data16
mov
and
cmpl
push
mov
stos
test
cmp
cmp
xor
add
mov
push
pusha
pop
dec
inc
mov
push
sbb
negl
mov
sbb
cmc
jp
lret
mov
cmc
sub
xchg
repz
inc
test
stos
and
inc
mov
jp
jp
mov
incb
push
mov
inc
sub
clc
cmp
add
int
adc
les
and
js
adcl
pop
std
dec
add
pop
cld
fists
add
jle
adc
aam
cmp
popa
outsb
sub
in
adc
inc
mov
andl
or
push
push
dec
inc
es
incl
push
xchg
mov
or
jne
or
mov
test
je
fisttps
mov
sbb
xchg
ficoml
shlb
pop
mov
pop
lret
in
push
je
or
xchg
mov
cmp
nop
mov
mov
cld
sbb
xchg
lahf
mov
das
mov
sub
outsb
lock
fildl
adc
sbb
imul
jae
ror
sub
pop
pop
inc
insl
gs
xorl
insl
jecxz
mov
mov
into
sahf
xor
and
push
lods
adc
add
xchg
jg
sbb
or
mov
pop
inc
xchg
or
lods
xchg
imul
mov
pop
push
jmp
xchg
data16
push
sub
pop
or
xchg
and
xor
push
dec
inc
add
roll
rcr
mov
mov
inc
mov
dec
das
std
and
inc
imul
or
adc
add
or
mov
mov
sbb
repz
xchg
imul
pop
sub
hlt
or
add
insl
inc
inc
retw
sbb
mov
pop
mov
sub
es
mov
adc
jno
ljmp
aad
loop
sub
mov
push
test
and
adcb
xchg
test
cmpsb
push
sub
push
test
push
and
mov
ret
push
xchg
inc
data16
inc
rcl
or
into
add
stos
out
add
inc
mov
sbb
out
stos
push
mov
in
push
inc
sub
mov
jl
sub
shll
pushf
stc
jg
xchg
shlb
mov
gs
dec
or
adc
dec
or
fdivs
pop
std
xchg
pop
fsubl
sbb
xor
xor
addb
rcrb
push
sub
inc
cltd
sub
pop
pop
test
fwait
push
cmp
mov
or
gs
jno
xor
ss
fsubr
ret
cli
inc
shrb
mov
fdivl
aam
adc
push
pop
scas
das
data16
imul
clc
xchg
das
fwait
mov
lea
lods
push
and
mov
aad
or
outsb
notl
lods
stos
pop
pop
jne
out
and
xchg
push
cmp
lret
xchg
lret
mov
inc
das
outsl
pop
pop
xorb
and
dec
add
lahf
push
pusha
push
loop
fs
movsl
mov
leave
dec
adc
addb
subb
pop
sbb
push
imul
cmc
std
ds
stos
mov
iret
daa
add
cli
mov
es
pop
xchg
outsl
pop
inc
mov
push
cmpsb
xchg
aas
sbb
loopne
fimull
push
fmull
push
add
sbbb
sub
outsb
lods
mov
data16
mov
push
ret
push
mov
xchg
rorb
push
stos
xor
cmp
sub
sti
or
or
test
push
aad
roll
mov
insb
lods
dec
in
cltd
stos
aam
dec
push
out
sbb
es
je
inc
js
pop
xor
leave
popa
sub
stos
lods
pop
orb
add
insl
adc
xchg
inc
loop
aad
or
mov
aaa
lds
int3
into
xor
mov
es
imul
lcall
std
xchg
inc
sub
insl
push
je
and
dec
pop
scas
pop
inc
inc
cmp
in
pop
cmpsl
ret
xlat
sahf
push
push
and
pusha
dec
adc
aad
and
mov
xchg
mov
imul
lea
pop
and
sbb
pop
imul
or
test
leave
mov
filds
push
addl
mov
or
mov
insl
rcl
jge
cmp
mov
movsl
enter
aas
mov
lods
adc
fisubrl
insl
add
std
dec
adc
inc
cmp
fsubs
pop
fistpll
imul
dec
mov
cmp
xor
mov
push
mov
lods
adc
gs
incl
filds
loopne
pop
dec
inc
pop
ja
add
ret
mov
in
push
aad
sbb
lods
xor
loop
jns
push
xchg
mov
sub
xor
adc
push
rep
cmp
sub
add
clc
inc
push
mov
adc
mov
loopne
xlat
mov
push
sbbb
adc
mov
or
mov
popf
pop
push
dec
inc
cmpsb
test
cltd
xor
js
xchg
add
fwait
gs
into
adc
inc
imul
mov
pop
inc
out
scas
lea
jo
loop
inc
movsl
xchg
rorb
xchg
mov
add
mov
pop
mov
sub
cmp
sbb
loopne
fwait
daa
jnp
fs
xor
cwtl
loop
lret
push
sbb
es
lret
mov
pushf
shrl
test
adc
xor
mov
inc
into
and
icebp
push
inc
stos
push
xor
loop
inc
mov
mov
xchg
and
pop
or
and
or
adc
add
pop
mov
jno
cmp
push
add
xchg
push
stos
jo
push
test
mov
rorl
movsl
sahf
aaa
sarl
outsb
lea
xchg
stos
mov
sub
out
rcrb
mov
inc
mov
popf
add
add
mov
jmp
divl
addl
mov
mov
into
jecxz
push
pop
mov
ss
push
inc
and
sbb
mov
push
imul
jl
sti
call
pop
mov
xor
cmp
add
mov
sub
sub
jo
in
fldcw
cmp
sbb
push
inc
int3
inc
cltd
and
adc
inc
popa
xor
test
push
inc
aaa
repz
rcl
dec
repnz
je
push
mov
fisubrl
pop
and
mov
cmp
push
adc
lods
test
rorb
lods
stos
aam
xchg
cmp
dec
daa
and
in
or
or
cmp
clc
mov
push
mov
loop
xor
ss
mov
or
inc
push
les
mov
mov
or
cmpsb
sub
mov
in
cli
lods
xchg
ficoml
rcrb
test
push
rorl
inc
stos
mov
ficoml
pop
sub
cmp
mov
mov
add
add
mov
push
xor
push
push
cmc
inc
imul
lds
pop
clc
jmp
loopne
ret
inc
rcll
test
mov
shlb
pop
es
inc
adc
and
push
inc
or
pop
lock
popa
push
jne
cmp
pop
lods
and
data16
push
cmp
bound
dec
add
dec
or
push
aad
mov
push
subl
aam
xchg
mov
lret
test
movsb
xor
orl
xchg
fs
cmpsb
cs
adc
sub
sub
fistps
fcoml
aad
cmp
dec
mov
cwtl
stos
stos
loope
pusha
push
addr16
lods
mov
insl
fnsave
shlb
push
test
sbb
call
cmc
jb
push
xor
ljmp
adc
test
dec
adc
inc
mov
or
mov
imul
mov
es
add
and
add
mov
push
into
xchg
rcll
subb
push
jo
push
xchg
xor
aad
inc
add
push
aam
and
sub
movsl
inc
stos
push
mov
jne
hlt
insl
mov
add
adc
cmc
je
add
xlat
push
ja
out
test
call
mov
pop
cmp
pop
push
xor
into
sbb
adc
xchg
dec
jno
aam
inc
mov
xchg
mov
mov
in
push
add
add
test
xchg
test
pusha
push
popa
xor
mov
mov
sbb
mov
sub
mov
xchg
stos
adc
test
push
push
xorb
imul
sbb
xorb
mov
mov
cmp
sub
aas
mov
push
or
push
fiadds
jae
push
jo
scas
inc
popf
sub
pop
pop
pop
loopne
push
lret
push
test
pop
arpl
inc
xor
dec
push
push
std
jmp
sbb
call
xchg
dec
fsubs
or
cmp
push
insl
lock
inc
add
cld
pop
or
jl
lds
fdivrs
pop
or
xchg
js
not
add
dec
insl
movsl
cwtl
or
sbb
loop
in
fxch
mov
pusha
je
push
lahf
push
mov
mov
add
mov
shll
imulb
mov
mov
jnp
test
fsts
movsl
inc
mov
mov
test
jp
inc
aam
sub
fiaddl
push
gs
or
inc
jo
stos
inc
subb
adc
sbbb
or
ss
dec
outsb
int
xchg
dec
and
sub
test
pop
pop
push
fisttpl
rcll
xor
and
push
pop
imul
cmp
jecxz
jno
sbb
xchg
adcb
out
inc
mov
testl
ret
push
add
insl
and
pop
pop
xor
cmp
pop
sub
jecxz
movsl
dec
rcrb
mov
pop
test
es
imul
or
sbb
push
loopne
pop
lret
push
push
pop
jmp
push
mov
lods
push
sbb
or
sub
jp
pop
push
or
pop
push
push
adcl
int3
jno
adc
or
xchg
sbb
sbb
loop
mov
jo
push
icebp
jecxz
push
mov
push
push
lret
cmpsl
imul
rcll
mov
inc
aad
int
cmc
push
inc
movsl
aad
xchg
popa
leave
rorl
mov
sub
push
mov
jns
push
stos
push
insl
incl
mov
push
arpl
sub
push
adc
push
push
addb
pop
push
xchg
dec
lods
add
rorb
gs
sbb
jb
mov
loop
sbb
ss
jmp
adc
movsl
push
bound
ljmp
jge
mov
inc
fidivl
adc
cmp
and
add
sbb
lods
sbbl
ret
pusha
iret
fidivrl
cwtl
and
mov
or
mov
pop
xchg
adc
rcl
inc
loope
pushf
int3
sub
lods
mov
mov
es
cmp
mov
sbbl
xor
push
mov
push
mov
pop
push
adc
aam
cmpsb
fdivl
mov
data16
imul
rcll
dec
or
push
add
lret
push
cmp
out
ljmp
mov
mov
and
sub
inc
lods
rolb
mov
out
and
push
sarl
xchg
mov
sbb
aad
push
sub
mov
xchg
adc
jne
xchg
movsl
mov
ret
pop
js
aam
rolb
movsl
in
dec
push
test
fdivr
or
add
sbb
push
lea
imul
cmp
incb
dec
insl
imul
sbb
or
pop
andb
jae
sub
push
inc
addl
cli
fbld
enter
es
outsb
pop
mov
scas
js
inc
aam
xor
xchg
xchg
xchg
cmp
loope
cli
cltd
notl
imul
inc
and
test
das
pop
fistpl
out
popw
inc
lods
lods
mov
cli
ljmp
jae
addr16
fs
push
pop
add
push
xor
lret
push
xor
pop
push
add
adc
mov
xor
inc
mov
push
and
test
test
xchg
lret
jl
mov
pop
leave
push
aad
inc
mov
jbe
lret
inc
aad
xor
int3
sbb
addb
imul
add
lcall
popa
sbb
inc
stos
push
adc
push
sbbb
xchg
stos
jne
aad
in
data16
mov
mov
push
subb
lds
popa
sub
jb
das
lcall
pop
movsl
out
mov
aad
or
in
or
aam
pop
xor
rcl
sbb
push
pop
inc
dec
es
push
imul
push
sub
sub
or
add
fdivs
je
push
aad
adc
adc
mov
fmulp
jecxz
push
push
loope
ret
lea
insb
dec
cmc
mov
inc
fstpl
subb
fcmovu
shll
xchg
push
push
push
out
inc
sub
mov
test
cli
cli
subb
inc
lret
add
mov
push
out
sub
mov
popa
push
adc
push
mov
add
push
pop
test
and
addr16
push
sub
adc
or
sbb
int
shrb
into
inc
std
int
inc
lods
loopne
mov
fcomip
inc
sar
adc
dec
neg
popf
repnz
outsl
xor
pop
js
not
inc
sbb
mov
lods
hlt
lcall
dec
insb
lret
jmp
add
ds
aad
ljmp
lea
push
roll
es
outsb
loop
ret
fstpt
inc
sub
dec
jge
push
fs
gs
xor
push
repnz
cmp
add
iret
sub
xchg
movsb
jb
inc
adc
and
call
imul
imul
or
pop
imul
add
or
mov
mov
sti
popa
lret
inc
imul
out
loop
mov
add
pop
mov
add
cmp
and
pusha
dec
sub
dec
jo
adc
jnp
jae
aam
xchg
stos
mov
sbb
adc
andl
lock
stos
into
icebp
and
push
or
dec
or
adc
and
jno
sbb
cltd
cmp
and
js
inc
arpl
pop
cmp
cmp
ss
fmuls
push
mov
sahf
and
or
movl
aaa
cmpsb
and
out
sub
xchg
and
mull
xor
lods
push
fmuls
scas
xchg
sub
inc
jl
cmpsl
mov
add
loop
xchg
lea
das
out
cwtd
pop
js
sub
pop
cmp
test
inc
imul
popa
push
and
adcb
aaa
or
das
inc
cld
mov
in
cmc
clc
iret
and
xchg
sar
push
inc
add
filds
jmp
add
dec
neg
dec
das
sbb
jge
mov
data16
jmp
test
mov
adc
pop
push
stos
inc
mov
sub
or
int3
pop
pusha
inc
pop
jne
stos
xchg
cwtl
push
add
test
or
cmc
ljmp
xchg
xor
lcall
inc
jle
mov
add
cltd
or
inc
adc
cmpsl
mov
imul
push
movsl
cmp
aam
or
xchg
pusha
and
js
addb
add
inc
lods
andb
jo
je
adc
cmpsb
push
in
jns
stos
or
stos
rolb
cmpsl
jg
cwtl
inc
adc
int
pop
add
add
addb
jp
rolb
sbb
push
add
adc
sub
push
aaa
mov
ja
in
mov
push
mov
jle
shlb
lret
cmpsb
sbb
aaa
pop
int3
test
or
movb
jmp
xchg
test
push
jo
lret
push
ret
fwait
add
int
mov
sub
xchg
add
sbb
xor
dec
inc
shrb
fistps
or
and
adc
adc
push
sub
pop
sahf
ror
aam
aam
adc
jg
pop
jae
inc
sahf
cmpsl
ja
push
mov
ja
es
and
sub
lods
and
mov
cmc
fildll
outsl
dec
mov
xor
std
inc
and
sahf
nop
or
aaa
and
sub
pop
mov
dec
xorb
fcmovbe
leave
cmp
stos
inc
dec
sbb
add
ljmp
rcl
mov
sub
ficoms
mov
jmp
sbb
mov
nop
and
sti
jg
pop
lret
inc
mov
mov
sub
xor
xor
xor
dec
or
fiaddl
aad
imul
jae
pop
cmp
scas
xor
push
insl
lods
fadds
pop
lret
pop
mov
xchg
and
mov
stos
aam
stos
pop
jb
popa
lret
aam
push
push
das
and
cmp
insb
or
inc
mov
sub
xchg
and
and
imul
cmp
adc
test
jmp
and
pop
dec
inc
sbb
movsl
jnp
data16
mov
push
mov
inc
pop
lret
out
adc
mov
imul
and
sar
cli
add
push
adc
mov
push
push
lods
pop
push
sub
ret
add
or
notb
push
enter
cmp
sub
inc
movsl
out
cmp
sub
cmp
inc
sub
and
add
cli
jno
mov
cmc
xchg
and
test
insl
stos
es
push
xor
push
mov
xorb
mov
mov
inc
mov
jg
push
les
add
inc
mov
push
sarb
lahf
jne
lods
mov
movsb
bound
mov
lret
lock
int3
popa
inc
cld
sbb
sarb
dec
imul
insb
aas
mov
sub
lods
xchg
daa
sub
or
mov
add
je
scas
jb
mov
mov
movsl
int3
addb
sbb
lcall
outsb
inc
mov
ret
add
xor
pop
fs
adc
call
add
lock
inc
cmp
inc
in
adc
std
daa
enter
mov
mov
mov
adc
adc
out
mov
popf
ljmp
xchg
mov
sub
mov
lds
pop
sub
or
xor
clc
mov
dec
adc
sbb
sbbl
loope
jp
das
or
sbb
pop
shlb
test
mov
mov
in
mov
mov
push
cwtl
mov
xchg
or
dec
test
int
adc
inc
rorb
loopne
cwtl
andl
push
add
xor
int3
sub
sbbb
mov
inc
push
inc
mov
inc
inc
mov
and
or
mov
testb
add
jge
xchg
xchg
add
js
cmc
test
inc
or
push
or
mov
stos
mov
lcall
lcall
sbb
add
shll
test
fildl
push
mov
mov
das
push
cld
fnstcw
mov
sbb
sbb
mov
mov
jmp
jl
push
cmpsl
xchg
or
mov
inc
sub
jbe
xchg
mov
xor
add
cmp
sahf
adc
adc
sbb
add
pop
rcrl
dec
rolb
arpl
fsubrs
mov
add
add
pop
sbb
nop
or
cvtpi2ps
decl
mov
cmp
jnp
or
mov
jae
rclb
pop
in
shll
loop
inc
mov
push
add
outsl
push
cwtl
insl
loopne
in
mov
push
loope
push
or
outsl
fmull
popf
pusha
in
pusha
push
adc
outsl
sarl
test
sbbb
mov
xchg
mov
inc
inc
adc
jmp
mov
insl
inc
test
add
push
pusha
push
idivb
inc
aaa
add
nop
sti
mov
pop
xor
jbe
push
fisubrs
or
and
test
push
inc
push
mov
xchg
lods
insl
push
outsl
std
inc
sub
jno
fisttpll
sbb
loope
adc
xor
cwtl
push
pusha
fcmovnbe
enter
clc
lock
xor
sub
push
push
or
mov
push
mov
pop
mov
add
mov
dec
mov
adc
mov
int
andb
cmpsl
lret
adc
mov
xchg
movsl
inc
xor
loope
and
ss
rcrb
xlat
mov
cmp
ret
in
lock
js
push
mov
adc
je
movsb
add
ss
rclb
imul
popa
xchg
dec
sub
fmull
add
adc
adc
movsb
cmp
add
xor
out
inc
repz
inc
cmp
mov
ja
add
sub
mov
ret
add
mov
sub
mov
inc
sbb
xor
clc
in
mov
clc
cmp
out
push
push
or
pop
xor
dec
shrl
pop
clc
xchg
stos
add
xor
cld
ss
inc
sarl
adc
mov
dec
ret
imul
scas
xor
or
ja
mov
clc
out
shufps
adc
and
mov
xor
lahf
push
jmp
inc
jne
leave
fs
mov
loopne
bound
int3
cmpb
das
jo
test
mov
and
fwait
jmp
sahf
test
cs
cmc
out
and
or
clc
int3
cltd
add
or
fs
pop
rolb
xlat
and
ss
sub
mov
mov
pop
mov
hlt
xchg
dec
add
mov
orb
sbb
sbb
dec
in
test
or
jne
cmp
sbb
lcall
cmp
stos
push
shll
jne
jno
in
push
hlt
nop
orl
mov
dec
sub
cmp
mov
jle
cmpl
arpl
add
push
js
mov
lock
push
sbb
dec
and
or
clc
data16
add
push
loop
sbb
ret
sub
int
mov
nop
mov
push
loopne
add
xorl
mov
or
pop
popf
adc
mov
scas
add
test
mov
cltd
sbbb
jl
inc
adc
das
push
cmc
pop
cmp
lock
lods
test
loopne
jg
xchg
mov
add
add
loopne
mov
ljmp
add
jne
inc
mov
xchg
sub
test
cwtl
shrb
movl
lret
out
pop
jo
mov
insl
adc
stos
add
inc
mov
iret
xor
sbb
push
and
add
add
mov
or
in
add
sub
sub
sub
pop
stos
push
inc
push
sub
test
in
mov
adc
insb
movsl
imul
and
xor
sub
push
and
mov
and
add
stos
push
inc
ljmp
inc
outsl
jae
sbb
fimull
or
cwtl
insl
loop
lea
and
fistps
mov
xchg
cmp
stos
adc
test
ljmp
pop
lahf
and
stos
mov
dec
push
ret
data16
das
sub
lret
xor
adc
inc
test
mov
adcl
push
xor
jns
and
in
or
or
or
push
je
aad
cmp
inc
adc
inc
add
adcb
cmp
sbb
and
pmaddwd
filds
sbb
je
aas
add
fidivl
into
les
sub
rcrl
roll
add
dec
add
lret
sbb
push
mov
push
inc
dec
xchg
cmp
xor
rcrl
test
add
pop
repz
sbb
cmp
add
lcall
inc
mov
sbb
clc
and
adc
push
in
pop
mov
pop
jne
loop
xchg
loope
push
and
ds
sbb
mov
stos
rolb
jno
push
lods
mov
daa
lods
push
or
lcall
imul
cltd
mov
inc
push
pushf
mov
push
adc
movsl
add
aad
or
jg
push
adc
add
mov
rorl
push
adc
xor
inc
hlt
mov
inc
out
dec
es
andb
push
xor
cmc
les
or
fcomp
or
and
mov
and
cmp
mov
jnp
test
inc
xor
aas
out
pop
mov
outsb
mov
push
mov
sbb
adc
xchg
mov
mov
push
push
push
adc
stc
mov
sbb
in
push
and
sub
inc
imul
in
mov
pop
push
shrb
adc
repz
and
adc
inc
daa
movsl
push
xor
cmc
icebp
jne
imul
mov
xchg
adc
jne
inc
mov
imul
andb
stos
adc
adc
push
mov
add
pop
sub
sbb
dec
movsl
inc
data16
mov
add
sbb
jno
mov
lea
sub
fsts
push
imul
jns
dec
lods
add
push
xchg
fmull
pop
and
adc
imull
lea
mov
mov
decl
fsub
loopne
mov
mov
int
mov
push
dec
mov
hlt
rcl
fiaddl
stos
sbb
int3
hlt
shll
adc
add
or
dec
lds
xchg
bound
push
inc
rorl
pushf
add
inc
push
pop
scas
sub
mov
cltd
mov
and
push
xchg
add
clc
xchg
add
sub
adc
mov
add
pop
fsub
mov
rorb
stos
scas
sub
in
xchg
pop
add
add
enter
cmp
aas
adc
jmp
lret
pop
and
leave
sub
mov
cvttps2pi
sub
faddl
shlb
xchg
mov
dec
sub
sahf
out
shlb
jns
xor
lcall
sti
mov
add
stc
shr
je
mov
mov
jge
roll
insl
mov
xor
in
add
mov
test
and
xchg
bound
int3
xchg
add
fsubrl
rorb
inc
in
lods
stos
add
fs
ljmp
add
cmp
xchg
xchg
mov
cli
push
pop
mov
or
and
adc
lea
mov
sub
orl
mov
jl
adc
andl
ret
adc
popf
inc
mov
cwtl
dec
inc
cmp
pop
rorb
lahf
adc
stc
test
negb
faddl
adcb
pop
adc
mov
aad
dec
ror
mov
stc
clc
pop
subb
sub
ficompl
push
inc
fsubrs
push
or
lret
and
shrb
enter
sub
push
inc
adc
add
imul
cwtl
cltd
mov
inc
fisttps
sbb
push
inc
xchg
in
and
pop
push
adc
pop
mov
push
xchg
cmp
jb
es
mov
dec
fsubs
sbb
add
cmp
fiadds
cmp
mov
push
dec
arpl
adc
mov
ret
adc
push
xlat
add
shll
nop
in
add
adc
ret
rcrb
jecxz
ja
pop
in
fsubrs
mov
icebp
xor
sbb
arpl
mov
push
adc
pop
mov
call
xchg
lret
jmp
sbbl
frstor
les
in
add
sarb
loopne
pop
ja
into
rcrl
aaa
imul
rcll
fcompl
add
fnstenv
or
pop
or
outsl
and
jge
and
adc
xorl
stos
lock
xchg
cwtl
xor
mov
mov
daa
test
mov
lret
movsb
pop
adc
cltd
loopne
dec
addl
jmp
push
test
dec
mov
and
pushf
orb
xchg
cli
cmp
icebp
hlt
fwait
push
add
ljmp
test
stos
cmpsb
int3
add
arpl
xor
pop
leave
das
jnp
das
or
push
mov
adc
sub
mov
adc
sub
xchg
test
mov
mov
gs
add
insb
mov
jo
jb
push
stos
cs
add
les
dec
cmp
mov
push
xchg
sub
add
mov
sub
movsl
adc
mov
into
add
test
xor
push
loop
lret
insl
jmp
add
mov
insb
mov
and
mov
push
push
sbb
mov
sbb
inc
mov
cmp
mov
mov
xchg
nop
mov
fwait
sub
fs
inc
cmp
mov
shrb
data16
mov
mov
add
xor
ret
pop
pop
aad
rcll
sub
xchg
lods
fisubrl
mov
push
test
push
popa
popf
adc
test
add
inc
sub
sbb
mov
pop
in
shlb
aad
mov
sbb
add
ret
imul
push
push
inc
push
mov
rorb
stos
dec
xor
aad
push
adc
push
push
dec
shrb
movsl
loop
sub
adc
lock
or
enter
inc
inc
mov
aad
sub
mov
add
and
inc
shll
xchg
cmc
mov
and
inc
mov
mov
lret
mov
movsl
mov
or
popf
adc
lcall
das
fisttpl
daa
cmp
pop
push
push
test
cs
and
cmc
out
xchg
lcall
fcoms
rolb
adc
inc
scas
adc
inc
mov
cli
mov
jge
int3
lahf
insl
mov
outsb
testl
gs
sbb
sub
mov
rcrl
add
or
xor
pop
mov
mov
sahf
sbb
sub
lea
sub
out
lret
sub
dec
push
push
insb
ret
stos
js
clc
outsb
das
adc
sbb
test
xchg
or
add
add
clc
pop
imul
mov
pop
inc
mov
insl
test
push
shll
mov
stos
inc
out
inc
aad
mov
movsl
ret
imul
ret
adc
sbb
mov
out
inc
lahf
mov
test
mov
pop
out
daa
aad
push
imul
push
repnz
inc
mov
push
movsb
or
and
subb
out
andl
mov
dec
icebp
push
add
out
into
push
xor
inc
sbbl
mov
lods
adc
andb
out
cmc
xchg
ret
push
mov
pop
sub
sbb
pop
sbb
pop
pop
inc
add
xchg
and
addb
or
mov
push
stos
insl
roll
cmc
mov
pop
dec
gs
push
mov
fmuls
lret
lcall
fisubrs
mov
sarl
cs
xchg
xchg
outsb
adc
inc
daa
inc
sbb
dec
lods
jno
arpl
bound
sub
xor
mov
adc
and
cmpsb
pop
mov
mov
adc
mov
sub
test
inc
out
mov
into
hlt
cmp
or
bound
in
pushw
sahf
fbstp
jbe
pop
mov
ja
test
jns
or
mov
dec
nop
je
imul
shlb
push
rolb
test
gs
xchg
out
jno
push
mov
orl
inc
jg
pop
scas
and
mov
sbb
dec
lods
and
out
push
dec
sbb
push
ss
xchg
xorb
inc
or
fimull
pop
lds
loop
aad
fimull
shll
test
es
loope
pop
sub
test
test
mov
mov
add
mov
mov
sub
sub
cmp
mov
mov
or
pop
mov
stos
iret
stos
out
push
push
stc
iret
mov
xchg
call
and
ljmp
jne
stos
mov
call
push
mov
orb
inc
cmp
test
push
or
mov
and
ss
lea
das
push
pusha
and
aad
aam
stos
enter
push
xchg
xor
scas
rcrb
fdivrs
push
or
lret
push
push
or
into
jg
adc
out
sub
mov
push
add
decl
je
adc
xchg
cmpsb
fs
xchg
or
les
es
sub
data16
inc
sahf
adc
cli
xchg
stos
gs
mov
or
or
or
test
fildl
adc
sub
fnstsw
imul
nop
xchg
and
or
inc
dec
sbb
xchg
outsb
add
shlb
sub
outsb
add
ret
addl
push
hlt
lahf
fwait
push
pop
sub
add
test
incl
lods
gs
das
xchg
dec
lods
pop
jne
push
sbb
mov
or
in
inc
fdivs
cmpsl
inc
mov
xor
jp
aas
gs
push
add
lods
push
jbe
fwait
shlb
xor
fwait
push
cmp
dec
or
or
aas
lret
aam
cmp
mov
add
jbe
xor
pop
orl
push
push
rcrl
lret
movsl
test
test
imul
mov
pop
test
adcl
inc
in
rcl
dec
cmp
push
pop
or
sbb
push
mov
outsl
add
or
push
addl
xor
sub
test
dec
lods
imul
aad
test
xlat
dec
cli
test
movsl
mov
adcb
cmp
mov
xchg
and
pushf
into
int3
ret
loop
sub
fwait
mov
repz
push
pop
pop
cli
jno
aam
push
cld
sbb
jle
daa
mov
mov
enter
push
sub
test
push
movsl
cmc
jg
roll
push
ss
in
pusha
imul
xchg
adc
loopne
out
xor
sub
outsl
mov
or
rorb
mov
jmp
stos
pop
sbb
bndstx
mov
mov
sub
cmp
std
mul
inc
add
add
fistl
add
push
stos
daa
roll
xor
shl
dec
cmp
in
shrb
mov
out
mov
js
push
leave
inc
aam
inc
out
xor
push
adc
adc
xchg
xchg
rorl
xor
and
xchg
lods
push
pop
add
xor
or
push
repnz
gs
inc
add
lcall
adc
add
shll
and
lds
js
mov
sbbb
int
xor
push
add
xchg
jnp
and
push
lahf
test
adc
mov
les
mov
into
mov
and
das
pop
mov
xchg
sub
out
push
jmp
and
push
sbb
add
and
aad
imul
fidivrl
fldenv
popf
dec
and
lods
mov
mov
aad
xor
dec
inc
lea
xor
push
rcrb
movsl
inc
fstl
cmp
mov
jno
gs
push
or
addb
push
xchg
subl
aad
ret
inc
mov
faddl
cmp
xor
int3
add
jns
ret
mov
das
stos
push
subb
in
inc
mov
adcl
or
push
shll
mov
dec
or
notl
dec
adc
js
bound
or
mov
lea
cmp
lods
xlat
xchg
jne
es
push
add
pushf
adc
and
or
iret
sbb
xor
push
movsb
cmc
jns
adc
bound
jbe
pop
xchg
mov
adc
ret
xor
inc
mov
jno
test
testl
mov
sbb
push
mov
test
into
push
or
mov
mov
push
movsl
insl
test
mov
imul
lock
push
mov
pop
int3
pop
add
inc
pusha
push
movsl
mov
cmc
push
mov
or
adc
les
imul
mov
rclb
out
inc
or
push
mov
mov
xor
testl
test
push
or
add
push
jmp
cmp
push
mov
mov
mov
push
push
mov
sbb
xchg
fildl
push
cmp
xor
cwtl
pop
pop
enter
xor
xchg
imul
add
xor
and
test
inc
loopne
lods
enter
xlat
pop
orl
lock
out
loopne
inc
lea
mov
jne
push
lea
push
add
aam
aam
mov
cwtl
or
push
stos
jp
mov
pusha
inc
je
mov
ret
push
icebp
imul
ret
jo
or
ja
fidivl
fnstenv
and
or
jne
fadds
mov
fildl
popa
shlb
pop
sbb
fadd
sub
jmp
mov
pushf
add
inc
and
dec
adc
cld
scas
xor
or
push
adc
mov
sbb
aam
call
rclb
fisttpll
jle
fsts
sbb
aam
mov
adc
xchg
ds
pop
hlt
jnp
lea
imul
leave
fiadds
hlt
pop
push
outsb
out
cmp
in
dec
js
sub
sbb
inc
shrl
add
cmpsl
movsb
in
repnz
jmp
int3
pop
adc
xor
jl
or
pop
cmp
clc
mov
ja
push
iret
dec
lock
pop
pop
in
es
iret
int
inc
mov
or
adcb
push
imul
repz
ljmp
stos
jo
add
add
xchg
ret
push
outsl
or
xchg
or
clc
add
cld
clc
adc
mov
in
sub
and
jmp
sbb
pop
stc
mov
sbb
jne
sbb
sub
les
js
adc
fwait
cmpl
and
sbb
and
jno
jb
sub
sub
add
rcll
pop
sbb
pop
push
adc
mov
add
xor
lock
push
hlt
add
sbb
sub
mov
inc
cmp
add
push
sub
push
fs
sahf
jo
jb
ret
push
mov
es
dec
pop
adc
sbb
add
or
adc
sbb
xchg
leave
push
sub
shll
fcom
push
leave
push
cltd
add
sbb
aam
sbb
fstpl
push
mov
mov
pop
loop
into
push
mov
imul
adc
imul
imul
push
ret
rclb
fs
js
inc
les
or
xorb
push
add
int3
mov
xchg
gs
cmp
test
test
das
push
sub
testl
ret
inc
add
stos
lcall
mov
sbb
push
test
adc
or
mov
cmp
add
mov
dec
adc
insl
or
mov
and
pop
push
jb
pop
xor
mov
mov
or
sub
int3
inc
cltd
in
lods
inc
aam
fstl
sbb
enter
fwait
jo
mov
sub
sbb
data16
add
push
cs
mov
sub
in
mov
or
fdivr
cmp
dec
push
xor
cmp
and
mov
sbb
xchg
or
push
imul
push
lods
dec
mov
mov
mov
mov
lods
test
xchg
div
adc
or
aam
sub
xchg
addr16
push
rorl
cltd
aam
push
mov
mov
push
cmp
ror
aam
sub
mov
mov
push
in
aad
push
test
mov
push
mov
mov
test
mov
stos
mov
dec
rcrb
push
mov
sub
sub
mov
popa
test
fisubrl
push
test
insb
lret
dec
inc
adc
add
roll
dec
add
data16
or
sub
push
lods
push
inc
pushf
movsl
mov
inc
int
cmp
add
stos
test
int
jbe
cmpsl
das
adc
adc
push
sub
mov
aad
mov
add
ret
popf
stos
push
xor
xchg
adc
dec
aam
in
xor
movsb
push
leave
addb
shll
jecxz
mov
mov
push
xchg
mov
aas
cs
mov
add
add
push
inc
fadds
pop
add
inc
sub
mov
adc
mov
and
fwait
push
push
mov
sbb
repz
dec
xor
dec
mov
sub
lods
inc
lock
dec
sbb
mov
fisttps
pop
cmp
outsb
xchg
mov
ret
mov
pop
push
lods
cmp
lret
lcall
add
nop
aad
and
subb
push
xchg
push
mov
mov
rclb
sub
mov
aam
cmp
out
inc
sbb
lods
adc
enter
adcb
pop
mov
pop
imul
int
mov
or
adc
add
add
inc
pop
inc
int
jg
loop
mov
sub
push
stos
dec
jle
and
xchg
push
orb
idivl
repz
sbb
sbb
adc
push
or
call
adc
cmp
cmp
subb
mov
pop
adc
pop
pop
dec
or
clc
in
push
add
repnz
jno
inc
test
inc
mov
stos
xchg
sbb
pop
nop
addb
ret
sbb
loop
jo
aaa
sbb
dec
and
sub
imul
push
jo
mov
dec
subb
divb
pop
dec
sbb
cwtl
add
inc
stos
mov
mov
mov
xchg
test
push
test
jge
xchg
mov
push
ds
push
inc
test
dec
mov
mov
gs
push
ret
sub
mov
xchg
pop
jae
inc
movsl
pop
add
mov
mov
movsb
inc
cmpb
rcll
insl
pop
sub
ret
inc
or
jno
inc
stos
adc
push
setp
dec
lea
mov
or
mov
insl
stos
mov
dec
subb
pop
inc
test
push
jns
xor
hlt
in
cmp
orps
push
stos
or
push
dec
pop
movsl
sbb
call
push
xorb
push
xchg
xchg
ds
in
ret
dec
sar
mov
cmp
jmp
int
stos
pop
aam
sbbb
push
in
pop
leave
lods
mov
mov
jo
sbb
push
push
psrlq
inc
sub
inc
adc
aam
inc
je
aad
popa
lret
and
push
stos
jb
xchg
stc
inc
movsb
push
pusha
sub
adc
fmull
push
imul
inc
mov
xchg
mov
cmp
adc
pop
add
outsb
push
int3
jns
add
pop
cs
mov
pop
adc
imul
mov
push
adc
jmp
fwait
lods
add
mov
inc
mov
and
add
inc
lods
shrb
xchg
sub
lcall
push
mov
add
fcomps
adc
xchg
add
in
test
jae
adcl
and
xchg
cmpb
inc
pop
les
negl
mov
xchg
sti
and
lods
add
notl
push
pop
xor
shll
out
adc
mov
repnz
subb
dec
gs
adc
or
pop
inc
jae
test
sbb
adc
push
mov
dec
xchg
and
push
sbb
jo
lahf
or
addl
xorl
enter
rep
loop
or
icebp
adc
mov
push
imul
nop
sbb
xchg
dec
jb
loope
push
add
inc
add
pushl
push
push
pop
enter
stos
fimull
sbb
sbbb
push
push
add
add
sub
inc
mov
jns
dec
push
adcb
dec
or
iret
pusha
adc
andb
add
and
and
xchg
dec
fsub
and
mov
in
outsb
dec
push
xor
test
mov
mov
test
mov
inc
or
sub
dec
mov
inc
popa
sbbl
cwtl
fcomps
mov
push
inc
pop
adc
push
sub
cmpsl
cmp
push
pop
sti
mov
ljmp
pop
mov
adc
rcll
lcall
sub
ret
or
nop
and
adcb
push
adc
andl
pop
adc
test
jle
icebp
adc
adc
sub
push
mov
xchg
adc
inc
stos
mov
inc
insb
jae
loopne
pop
imul
sbb
lret
adc
xchg
scas
cmp
mov
xor
mov
sub
lcall
push
pop
inc
sahf
xchg
xchg
lds
paddusb
scas
mov
fsubr
fsubrs
mov
mov
out
mov
popl
dec
aam
fistps
mov
push
mov
push
or
int3
int3
push
cwtl
aad
stos
add
xchg
mov
insl
sbbl
mov
mov
lahf
fs
xchg
outsb
adc
ja
int3
mov
mov
add
pushf
aad
and
lcall
ror
out
cli
mov
mov
cli
scas
push
sub
cmp
adcl
sub
sub
adc
adc
in
add
xchg
adc
adc
jae
mov
pop
pop
dec
out
stos
pusha
push
pop
fs
add
jo
lret
mov
cmp
xchg
data16
or
adc
int
xor
add
dec
les
iret
jbe
add
data16
mov
jg
add
add
add
push
rorb
ljmp
xlat
test
adc
call
jbe
js
push
aad
in
cmp
addr16
fsubrs
sbb
loopne
mov
sub
rcl
add
add
lea
js
or
sbb
cmc
test
jge
pusha
les
sbb
cmp
xchg
and
lods
testb
sbb
adc
andb
or
and
xor
test
loop
stos
cmpsl
xchg
cmp
outsl
mov
scas
sub
les
xor
sub
rolb
addl
xor
and
dec
lock
or
sub
mov
inc
jge
js
add
movsb
fsub
fstpt
or
in
cs
sub
push
or
pop
lock
pop
or
and
ja
shl
int3
xchg
pop
mov
pavgb
add
mov
jb
adc
repz
cwtl
sarl
dec
rclb
mov
adc
mov
dec
lock
mov
add
popf
add
push
pusha
add
shll
adc
mov
not
out
xchg
inc
shll
mov
push
incb
add
loope
mov
enter
daa
pusha
or
dec
sub
mov
add
cmp
push
add
mov
add
out
icebp
adc
adc
inc
lock
rorl
add
sbb
and
movb
push
push
sub
add
das
mov
add
add
push
xor
adc
shrb
inc
test
sbb
pusha
stos
divl
inc
push
mov
and
andb
push
out
jo
sub
add
sbb
push
mov
popa
pop
add
cmp
or
sub
rcrl
dec
push
pop
test
add
push
xchg
push
add
scas
ljmp
inc
pop
add
pop
test
movsl
jo
or
das
jp
test
xor
and
pop
push
add
jo
fsubrl
push
push
bound
push
xor
mov
jo
adc
and
or
dec
pop
insb
add
sti
addr16
sbb
mov
out
cmc
xchg
imull
fisttpl
jno
insl
addl
inc
addr16
or
push
scas
mov
rorb
pop
push
cli
outsb
test
lea
aam
sti
aaa
lds
adc
mov
mov
or
push
push
idivb
sbb
insl
lea
xor
cmpsb
sbb
jl
inc
cmpsl
insb
lods
insl
push
daa
imul
adc
and
stos
pop
ror
inc
and
mov
pop
subl
xor
inc
das
xor
test
adc
inc
add
cs
lods
mov
sub
enter
out
and
jne
test
mov
push
inc
subl
pop
lods
adc
sti
mov
sub
push
adc
or
cltd
push
adc
pop
adc
cmpsb
mull
cltd
mov
push
out
xchg
push
lcall
cld
xchg
call
pusha
int
in
mov
mov
in
or
and
ret
rclb
js
mov
push
mov
lea
inc
cmp
rcrl
test
mov
xchg
jecxz
mov
aad
ret
fnstenv
add
adc
xchg
rclb
lds
lea
sub
sbb
stos
loope
push
insb
and
jne
out
add
fst
pop
mov
mov
mov
inc
aad
and
pop
mov
call
addb
cmp
mov
adc
or
stos
adc
adc
xchg
and
aaa
mov
jbe
push
movsb
std
jmp
fwait
mov
add
or
test
sbb
xor
test
stos
arpl
sub
shlb
ljmp
jno
pop
rclb
aaa
and
mov
imul
lahf
test
mov
sub
lea
or
es
sub
or
aaa
es
aam
add
adc
test
dec
nop
mov
mov
push
pop
mov
inc
push
cmpsb
mov
movsl
mov
lea
xchg
adc
push
stos
dec
mov
push
add
imul
or
dec
rolb
insb
adc
mov
and
pop
das
xor
add
gs
ljmp
push
fnsave
inc
mov
adc
movsl
andl
pushf
les
clc
fadd
cmp
mov
mov
add
popa
sub
inc
xor
adc
rcll
popf
and
xchg
in
pop
cmp
adc
out
and
add
pop
lods
sub
push
add
loop
sti
jecxz
xchg
xor
pop
adc
mov
stc
scas
dec
dec
pop
inc
mov
mov
add
in
loopne
xorl
pop
mov
popa
or
jecxz
shrl
cmc
decb
add
out
mov
and
sahf
push
mov
dec
adc
adc
sub
shrl
dec
sub
sub
jl
dec
orb
in
sbb
outsl
mov
js
js
and
insb
inc
nop
repnz
subb
inc
fimuls
fwait
inc
es
push
hlt
aad
or
inc
mov
rcrl
daa
inc
adc
enter
and
dec
cmp
inc
mov
loopne
or
imul
xor
test
or
cli
mov
push
insl
jnp
stos
xchg
pop
add
push
addl
shlb
add
repz
mov
sub
test
push
jb
addr16
xor
rcr
std
fwait
mov
data16
ljmp
xchg
add
add
test
xchg
inc
hlt
test
test
enter
pop
or
sbb
mov
xchg
adc
dec
stos
addr16
sub
and
sub
lds
jb
cmpl
or
mov
jmp
inc
dec
push
jge
addb
mov
loop
xchg
cmp
pop
or
dec
mov
push
inc
pop
adc
sahf
imul
in
enter
sbb
sub
or
dec
inc
fcomip
add
cmp
sarb
ffreep
test
cmc
jg
adcb
cmc
lock
enter
in
fildl
mov
xchg
stos
inc
mov
mov
ss
jae
mov
inc
daa
pop
inc
cmp
movsl
mov
pusha
push
mov
movsl
cli
or
xor
push
dec
inc
movsl
pop
cmp
xchg
dec
mov
sbb
pop
rcl
inc
movsb
push
mov
push
fstpl
lahf
or
dec
ret
jecxz
add
out
mov
pusha
or
inc
inc
out
xor
sbb
push
movsl
popf
xchg
and
je
xchg
movsl
or
jg
cmp
jb
pop
js
cli
mov
dec
gs
xchg
xchg
xchg
ret
scas
or
hlt
fstps
arpl
mov
imul
xor
fcoml
bound
pop
dec
xchg
dec
lock
pusha
pop
mov
das
mov
not
jecxz
sub
xor
pop
pop
xchg
mov
jns
jnp
push
cmp
sahf
test
imul
lcall
pop
repnz
pop
mov
aaa
pop
push
pop
enter
lock
xlat
or
nop
or
fnsave
jle
loope
jae
lcall
inc
cmpsb
and
shll
jp
push
add
xor
xchg
cmovns
shr
mov
xor
xlat
dec
xor
jmp
sahf
or
sahf
pop
cmp
repnz
stos
xchg
mov
inc
dec
test
int
mov
push
xchg
test
adc
mov
clc
and
sbb
in
test
jmp
adc
notl
mov
fildl
push
jno
add
sbb
mov
xor
mov
or
xor
movsl
call
push
mov
push
add
push
cwtl
mov
in
fdivs
xchg
mov
push
push
push
dec
in
jbe
mov
pop
insl
loop
mov
pop
mov
out
outsl
mov
or
adc
cmp
repnz
lret
push
xor
jle
stc
inc
cmp
pop
ja
xorl
mov
and
push
loope
test
shll
push
sbb
mov
xor
aaa
mov
sub
and
add
cmpsb
mov
lret
sub
add
movsl
and
add
jp
mov
std
push
and
push
sbb
xor
not
lret
or
fstpt
pop
or
jb
rcrl
push
outsb
cmpsb
mov
test
mov
jbe
test
ficompl
arpl
inc
pop
aaa
push
fwait
mov
push
bound
add
inc
xor
jb
cmp
sbb
inc
mov
and
or
mov
or
shr
test
dec
add
cltd
push
push
addr16
pop
pop
cmp
mov
push
push
inc
inc
sub
or
pop
mov
fldt
into
sbb
gs
inc
cmpb
add
inc
lods
add
push
push
lret
mov
inc
icebp
ja
or
sub
dec
adc
sub
push
lods
insl
int
shrl
mov
add
jo
pusha
inc
lods
inc
imul
mov
andl
push
pop
aam
int3
inc
mov
pop
pop
rcll
gs
inc
xchg
push
lret
aad
aam
aad
out
incb
bound
push
outsb
or
push
repz
mov
add
adc
addb
and
add
shrb
aam
mov
outsl
dec
mov
pop
inc
cwtl
cmp
dec
ljmp
movsl
out
inc
jae
add
enter
xchg
lods
sub
dec
add
rcrl
inc
sbb
cld
xor
sub
ds
jo
cld
adc
inc
in
pop
dec
sub
mov
pop
cld
scas
call
sarb
jno
adc
int3
lea
inc
arpl
dec
rcr
push
andb
clc
sub
add
sub
cltd
fwait
loop
call
leave
cmpl
inc
fcmovnu
pop
adc
shlb
andb
pop
push
lock
fisubs
adc
lods
inc
add
hlt
xor
imul
cmp
add
xlat
mov
sbb
push
xor
mov
clc
outsb
add
nop
fsubl
andb
shl
test
mov
add
movsb
imul
ja
mov
mov
adc
push
add
xchg
add
fcomi
mov
jnp
mov
lcall
xlat
hlt
sbb
movsb
mov
add
popf
add
jnp
bound
sbb
push
repz
sub
into
inc
add
mov
push
mov
outsl
repnz
dec
dec
adc
cmp
push
fstpl
xchg
scas
std
jecxz
cmp
and
or
mov
divps
hlt
ficoms
push
loope
leave
andb
jne
pop
call
sbb
push
leave
push
inc
iret
inc
dec
rolb
aaa
in
movsl
shrb
enter
ljmp
add
mov
stos
outsb
ret
add
lock
cmp
or
add
sub
into
adc
imul
adc
push
mov
movsl
xor
sub
sahf
mov
xor
outsl
stos
imul
cwtl
sbb
sub
jmp
mov
outsb
outsb
jne
add
xchg
pop
clc
lods
fincstp
and
and
sbb
push
movsl
add
jmp
push
test
lea
push
outsb
pop
shrl
loop
cmp
xor
sub
mov
shrb
adc
leave
xlat
loopne
test
jb
xor
les
inc
inc
mov
or
mov
mov
ja
and
dec
sti
lea
mov
data16
andb
aad
rclb
lret
imul
enter
gs
jo
stos
and
movsl
mov
pop
add
mov
dec
jnp
mov
adc
mov
pop
lahf
xchg
sbb
and
mull
call
cmp
stos
pop
push
xchg
es
mov
push
sti
movsl
lods
mov
sbb
mov
je
cs
pop
adc
add
cmc
cmc
inc
popa
imul
add
aaa
cmp
mov
iret
andl
push
mov
mov
push
shl
sub
or
mov
and
sbb
test
mov
aad
lods
mov
pop
mov
mov
jnp
jo
push
adc
into
adc
adc
or
test
add
mov
loope
xchg
pop
and
mov
mov
mov
imul
lret
or
or
mov
shrb
push
mov
and
inc
test
lock
lods
inc
add
fildl
add
cmc
mov
lods
mov
stos
outsb
mov
sub
enter
mov
add
push
sbb
pusha
into
cmc
push
sub
adc
and
pop
imul
fsubrs
cmp
mov
mov
push
fidivl
inc
mov
cmp
xchg
orb
adc
cmpsb
sub
mov
xor
cmp
pop
push
fisubrl
add
mov
jne
loop
fildll
xchg
stos
jmp
inc
xor
push
push
push
mov
adc
push
push
fmull
jge
repnz
mov
dec
inc
nop
mov
ret
push
orl
bound
jg
lods
push
scas
loopne
outsb
mov
push
ljmp
cmp
fisubl
pop
or
fabs
sbbb
add
jo
push
rcr
inc
jmp
das
xchg
dec
into
ss
sbb
inc
mov
mov
inc
sub
mov
adc
add
inc
push
push
cs
lcall
cmp
push
xchg
sub
les
mov
fiaddl
mov
lret
shrl
or
stc
pop
jne
add
inc
xchg
cmp
test
fbstp
das
xchg
fiaddl
mov
xor
jno,pt
stos
test
ret
mov
ret
or
jle
popa
shr
push
inc
xchg
inc
mov
push
filds
cli
pop
jle
addl
loope
cld
xlat
sbb
orb
mov
fldcw
stc
lock
cmc
push
xchg
pop
mov
push
inc
mov
push
mov
xchg
xchg
jl
rolb
shll
sub
aad
lret
lods
jb
lods
aad
ds
inc
sub
inc
cmp
movsl
adc
sub
jne
xor
sbb
cmp
adc
aad
inc
imul
push
dec
or
sub
lret
inc
mov
aad
push
and
xchg
pop
lahf
cmp
adc
mov
adc
inc
sub
sbb
sub
cmc
or
les
inc
or
inc
push
outsb
xchg
enter
add
jb
pop
dec
add
lcall
stos
mov
push
xorb
rcll
dec
movsl
or
inc
orl
test
rcll
mov
aad
adc
push
test
push
gs
icebp
pusha
jnp
mov
jno
inc
and
xor
sub
xchg
stos
cmc
mov
push
imul
jns
icebp
andb
xor
adc
popa
mov
es
push
pusha
mov
rcrb
jno
fs
adc
xchg
or
adc
mov
dec
lods
push
xlat
cmc
popf
outsb
add
mov
lea
stos
push
notl
sub
mov
push
aas
push
in
or
lods
push
push
and
push
xor
inc
repz
jg
push
lea
xchg
stos
push
adc
adc
fildl
inc
ss
sbb
ljmp
and
and
sbb
xor
int
loope
inc
fbld
and
cmp
adc
xor
jg
pop
insb
pop
xor
fcmovnu
sub
and
and
jo
inc
push
sub
clc
inc
movsl
pop
adc
mov
sub
or
jo
int3
cmp
lret
stos
mov
cmc
push
cmp
bound
pop
pushw
lods
and
and
xchg
cmp
jl
push
or
push
aam
sbb
push
push
mov
lret
inc
ret
lahf
add
push
push
push
out
or
mov
or
jns
xor
inc
test
xor
mov
xchg
pop
sbb
movsl
cli
aas
mov
cmpl
popf
add
add
push
add
push
mov
push
push
mov
add
popa
add
lea
cmc
inc
push
orb
xor
add
xchg
push
cmpsl
movq
xchg
dec
sarl
pop
or
ljmp
sub
push
or
pop
dec
xchg
and
and
pop
push
sub
push
push
sahf
sbb
loopne
imul
icebp
lretw
mov
cmp
into
testb
bound
inc
call
xchg
xchg
jle
sub
outsb
sti
call
imul
aad
push
fiadds
sbb
in
inc
xchg
das
mov
adc
in
jg
add
mov
outsb
kmovw
mov
test
andb
leave
pop
xor
inc
aaa
push
mov
mov
or
mov
pop
mov
push
icebp
ljmp
xchg
push
sbb
int3
or
bound
mov
test
int3
dec
sbb
sub
cmc
adc
pop
add
sub
xor
jo
mov
cmp
ret
fiaddl
lods
adc
sbb
mov
adc
sbb
mov
es
scas
dec
icebp
stos
mov
mov
cmpb
scas
sbb
mov
inc
mov
mov
add
aam
das
std
and
mov
shrb
imul
or
ss
mov
faddp
push
or
inc
mov
mov
mov
push
aaa
aaa
mov
sbb
mov
push
inc
cwtl
loope
push
push
push
pop
mov
pop
or
mov
adc
pop
pop
and
add
in
roll
addb
push
push
add
rcr
mov
adc
test
pop
fisubrs
fidivrs
add
testl
cmpsl
or
insb
push
or
cmp
push
test
ret
lret
sub
inc
pop
aas
pop
xor
rorl
test
lods
data16
testb
adc
inc
or
std
pop
lret
adc
sub
fs
cmp
xlat
movsl
pop
data16
popa
push
test
xorb
dec
mov
sub
jno
mov
inc
shrb
mov
xchg
lods
add
adc
test
outsl
mov
pop
push
sbb
movsl
xor
pop
addl
xchg
cmp
pop
ljmp
cmpsb
mov
mov
cmpb
push
jnp
mov
mov
or
sbb
sub
das
sbb
popf
pop
aas
mov
pop
mov
or
mov
sahf
and
and
push
lock
xchg
addb
jo
fidivrl
lds
mov
test
lock
adc
mov
mov
mov
and
pop
or
out
add
xor
mov
sarl
inc
push
call
cmp
fdivrl
add
pop
sub
add
pop
jbe
ljmp
addb
lock
sub
inc
sub
mov
fsubl
data16
dec
mov
xor
mov
adc
call
rorl
add
add
je
andl
jmp
lretw
sub
test
das
cld
movsb
inc
lcall
das
insl
pop
cld
rorb
ss
jge
sbb
xchg
loop
push
dec
call
and
add
inc
xor
bound
push
mov
mov
enter
cmpsl
add
sub
inc
jnp
je
add
out
sbb
adc
mov
adc
jle
xor
in
dec
fdivrs
stos
or
loopne
adc
aaa
in
mov
push
mov
mov
push
outsl
or
aas
mov
jmp
push
pop
cmp
scas
das
outsl
mov
mov
ss
or
adc
mov
inc
push
adc
mov
out
and
push
imul
mov
pop
adc
xor
je
pop
aaa
jg
int
add
into
add
repnz
add
xor
leave
pop
adc
fldcw
xchg
js
sub
jno
je
mov
mov
mov
fsubrp
mov
inc
mov
bound
call
fsts
cmp
and
sbb
mov
je
inc
cmp
and
int
out
loopne
repz
sbb
jl
mov
aad
add
call
je
ficomps
adc
jle
sbb
sub
cmp
pop
mov
cli
dec
inc
inc
shll
sarb
mov
push
push
inc
mov
aad
fiadds
aam
fiadds
fabs
test
inc
xlat
jle
in
dec
mov
pop
pop
add
aam
je
outsl
jmp
dec
adc
sub
lret
fnsave
into
pop
bound
pop
jae
jb
ret
cld
lock
loope
adcl
pop
xchg
je
mov
leave
sarl
std
sti
sub
add
loop
lahf
hlt
xor
pop
or
mov
sub
inc
imull
push
add
or
cld
stos
subb
pop
push
inc
je
jle
pop
inc
add
pop
shll
jo
fmul
cmp
sub
mov
xchg
jge
lds
test
inc
push
stc
push
aad
dec
cmc
mov
fisubs
je
mov
push
call
and
sub
jnp
negb
mov
or
adc
dec
mov
test
push
stos
imul
mov
in
pop
or
iret
add
dec
lcall
xchg
pop
push
mov
or
or
int
clc
ja
sbb
or
cld
movsb
dec
push
test
outsl
pushf
mov
enter
mov
mov
adc
scas
insl
pop
sbb
inc
add
mov
test
sbb
sbb
xor
adc
insb
add
jge
adcl
mov
jbe
sbb
aam
scas
jp
aad
mov
pop
inc
and
dec
adc
sub
cs
out
mov
rolb
lods
push
adc
inc
dec
leave
jge
inc
movsl
mov
xchg
flds
push
dec
mov
push
cmc
mov
ret
fcmovne
subb
jno
add
leavew
das
pop
push
sub
and
sub
jnp
dec
xchg
test
or
push
je
fsubs
into
rcrl
push
mov
pusha
push
loop
adc
outsl
enter
sub
arpl
and
pop
or
stos
push
scas
imul
sub
mov
inc
je
inc
addl
data16
addb
add
test
call
or
sub
sbb
push
call
mov
fwait
xor
test
shrb
sub
jge
push
sbbb
call
sbb
and
mov
test
sbb
mov
sbb
jl
into
fisttps
push
in
divl
adc
pop
imul
out
cmc
lea
or
inc
pop
fcomps
jae
sbb
sbbb
pop
addl
iret
lret
sub
rolb
push
sub
adc
mov
sbb
addb
mov
mov
not
push
push
adc
mov
push
and
xorb
sub
pop
xchg
pop
cwtl
push
add
pop
mov
orl
xor
test
sahf
call
or
mov
cmp
push
rol
cli
add
sub
and
aaa
das
sub
push
mov
inc
rcll
cs
hlt
push
shl
icebp
xor
adc
fs
sbb
sbb
mov
xor
scas
add
daa
sbb
mov
test
addb
adc
inc
test
sbb
mov
sbb
roll
inc
xchg
inc
cltd
mov
test
push
les
and
mov
imul
and
adc
inc
jb
in
cmp
sbb
stos
add
and
jmp
push
and
lea
stos
test
add
test
cli
lods
outsb
call
push
stos
push
imul
mov
sub
xchg
loop
xchg
push
and
mov
xor
enter
or
sbb
rcll
lahf
cmp
sbb
test
inc
mov
push
lret
add
insb
imul
mov
pop
xchg
repz
mov
movsl
ret
aaa
push
cmp
stos
mov
or
mov
out
lods
inc
push
sub
or
cmp
das
imul
popf
das
outsl
adc
sbb
adc
inc
loop
mov
push
inc
test
mov
push
or
inc
aad
icebp
and
push
push
imul
in
xor
out
dec
pop
stos
inc
shrl
mov
inc
pop
push
dec
pop
stos
jg
and
cs
mov
jg
imul
add
and
or
dec
mov
test
jns
dec
ret
gs
mulb
in
jp
jae
cmp
inc
add
insb
cmp
adc
cmp
ljmp
mov
push
test
mov
cwtl
sub
ret
pop
push
test
lea
add
jb
jb
inc
mov
inc
push
gs
push
addb
pushw
inc
adc
adc
rcl
pop
adc
push
push
lea
adcl
cmc
aam
mov
xchg
ret
adc
lret
mov
valignd
pop
sub
into
imul
pop
aaa
scas
mov
rcrb
jns
pop
or
push
jmp
jne
mov
push
aad
add
xchg
cmc
xchg
es
lods
shrl
hlt
jmp
test
rcr
mov
lods
ljmp
add
movsl
sub
rcl
xor
sahf
mov
scas
enter
cmp
lods
lahf
stc
mov
xchg
or
mov
cwtl
mov
or
mov
push
cmp
mov
sbbb
xchg
mov
cmp
cmp
pop
lea
sub
and
or
mov
jae
pop
add
adc
pop
push
adcb
push
hlt
nop
inc
push
jb
cmp
mov
push
scas
adc
cmc
mov
inc
test
pop
lahf
sub
adc
mov
push
scas
aaa
cmp
dec
cmc
out
xchg
push
inc
mov
jno
sub
cmp
xchg
out
push
add
jbe
add
and
xchg
xchg
out
adc
je
xchg
out
ljmp
sahf
inc
or
rclb
es
mov
je
test
es
pop
push
adcb
jle
stc
repnz
lock
sbb
js
adc
dec
aam
add
stos
aaa
pop
in
shl
pop
sbb
int
mov
sub
int
sbb
scas
loope
jle
pop
push
or
outsl
sbb
jno
dec
stos
push
mov
daa
inc
aad
mov
outsl
imul
sub
inc
add
inc
and
push
cmpsb
testb
adc
inc
xchg
jecxz
data16
push
loop
cmc
xor
adc
scas
test
push
cmpsb
sbb
push
lods
fs
lret
mov
sub
fsubrs
inc
fucom
pop
dec
lods
aam
lods
mov
add
inc
test
cmpsl
cmp
roll
clc
lods
inc
mov
mov
loop
jb
loop
push
xor
aad
sbb
cmpsb
pop
lea
jnp
xor
pop
adcb
adc
les
sub
inc
or
add
cmp
mov
dec
push
aaa
adc
inc
test
out
sbb
pop
add
hlt
hlt
mov
test
jle
pop
aad
nop
movsl
imul
pop
orb
add
fnstcw
cmp
push
sbb
push
cltd
cmp
pop
add
xor
mov
incl
sbb
mov
aam
inc
jno
add
jge
lret
lods
insl
movsl
pop
call
ss
stos
outsb
mov
pop
sub
pop
pushf
cmc
pop
push
xor
xchg
push
xor
push
push
aaa
sbb
lret
gs
aam
lods
and
pop
and
mov
decl
test
cmp
fisttpl
jne
lods
je
leave
mov
std
cmc
mov
imul
adc
in
push
mov
xlat
sub
mov
pushl
ljmp
cmp
test
mov
or
popf
enter
mov
sbb
push
add
push
ss
mov
sbb
jg
adc
ret
pop
sub
mov
push
push
lock
push
imul
rolb
ja
es
lods
loope
ljmp
dec
cmpsb
rcll
pop
aaa
cmp
adcl
lds
or
push
or
shll
push
into
dec
or
push
stos
and
lods
adc
mov
or
push
pop
push
or
stos
cmp
inc
push
sar
inc
mov
arpl
lods
pop
insl
and
push
js
xlat
int
in
push
mov
xor
dec
insb
and
push
mov
xchg
push
or
orl
testl
mov
test
andl
imul
aad
mov
cs
sbb
sbb
lods
outsb
aam
adc
fsts
in
cmp
or
arpl
movsl
push
imul
add
loopne
cli
in
imul
in
jb
mov
or
jne
fldenv
cmp
mov
add
pop
aas
dec
or
cmp
ljmp
jge
inc
xchg
adc
and
es
aam
stos
mov
in
inc
hlt
push
popf
subb
hlt
xor
fldenv
inc
lock
sbb
mov
cmp
add
push
adc
add
aaa
les
sub
int
add
adc
hlt
clc
inc
mov
stc
add
cmp
sbb
es
and
sahf
bound
inc
adcb
scas
mov
sti
sub
sub
sub
add
pop
mov
sub
adc
mov
sub
lea
cmovne
add
rorb
add
ret
pop
shr
jmp
dec
call
addb
add
mov
adc
xor
push
rcrb
add
sub
iret
cmp
scas
clc
imul
mov
stos
push
jo
adc
les
sbb
or
hlt
cli
std
stc
and
ljmp
daa
xchg
add
mov
add
roll
sub
mov
xchg
jnp
jb
pushf
addl
insl
dec
subl
pop
fdivrs
decl
xchg
jae
add
and
dec
aaa
lods
add
inc
mov
sti
mov
frstor
pusha
jg
lcall
sbb
cmp
or
push
push
mov
push
mov
adc
repz
subb
or
push
mov
xchg
mov
nop
jecxz
add
push
pop
mov
fiadds
fbld
daa
push
cmp
inc
das
push
inc
jl
mov
incl
add
xor
jbe
orb
hlt
adc
xchg
mov
mov
movaps
adc
repnz
or
push
sub
outsl
icebp
in
cmp
das
or
and
add
mov
fldcw
and
add
lret
push
xchg
pop
jp
xchg
mov
or
mov
and
xchg
fmulp
inc
and
aam
mov
add
jl
pop
mov
mov
ja
xchg
test
sub
jo
adc
sub
push
pushf
pop
xor
inc
xlat
in
and
pop
js
jge
push
aam
push
push
test
inc
loopne
test
cld
loop
add
cmp
data16
pop
mov
movb
or
pop
push
popa
adc
push
adc
and
inc
in
jge
std
inc
xor
or
and
sar
add
inc
ljmp
inc
push
out
test
pop
test
andb
push
mov
popl
fxsave
mov
les
jo
inc
aam
and
out
sbb
and
inc
sub
sbb
jne
sbb
xor
mov
inc
and
add
mov
rcrl
push
test
xchg
cmp
mov
andb
and
or
cmpsb
mov
push
xchg
or
mov
push
push
mov
add
jae
mov
inc
mov
push
cld
inc
cmp
mov
push
in
mov
stos
or
fwait
xchg
xor
adc
xor
sbb
adc
or
cwtl
cmp
adc
scas
push
mov
inc
loop
adc
adc
sbb
pop
fmuls
fs
data16
pop
stos
dec
inc
dec
divl
jmp
cmp
push
dec
pop
add
pop
add
and
dec
cmpsb
aad
push
cmc
inc
inc
pop
inc
xchg
mov
stos
push
lods
jp
ret
loopne
jo
xchg
push
fcoml
enter
popl
in
mov
mov
repnz
inc
cmp
cltd
xorb
inc
aad
mov
xchg
jno
and
push
xor
xor
aam
or
scas
push
js
push
and
adc
cmpb
or
es
rorl
scas
fsubs
push
insl
dec
adc
push
fsubs
mov
test
jle
mov
fistl
pop
dec
inc
xchg
sub
pop
pop
decl
xchg
jns
sbb
jmp
subl
test
add
sub
add
xor
mov
pusha
inc
adc
sub
orb
outsl
shlb
inc
arpl
inc
pop
sub
add
daa
add
sub
sbb
mov
testl
cld
cld
repz
mov
fiadds
xor
push
pop
and
leave
inc
insb
add
push
ret
ret
gs
ss
sbb
clc
xor
in
js
xor
test
mov
mov
roll
add
dec
xor
lods
testb
mov
std
and
addr16
mov
push
sarb
clc
push
pop
add
push
mov
sbb
aaa
mov
aas
ljmp
add
add
and
cltd
cmpsl
fs
clc
mov
dec
adc
inc
iret
enter
jnp
xlat
inc
or
sbb
iret
test
fldl
or
enter
stos
dec
ja
pop
inc
shlb
mov
aam
inc
mov
mov
inc
daa
jno
xorl
xor
xchg
sbb
mov
call
and
sbbb
xor
mov
rcl
repnz
or
lods
icebp
out
nop
mov
sbb
mov
sbb
icebp
loop
jbe
sbb
hlt
fsubr
lcall
sbb
mov
add
sub
js
push
or
jno
mov
jae
fsubr
aas
inc
ljmp
or
mov
orb
inc
xor
lret
push
mov
les
montmul
cmpsb
xchg
jmp
xor
loopne
cmp
dec
cmp
push
sub
lret
mov
mov
les
xchg
inc
and
push
outsl
popa
inc
nop
shufps
cltd
ret
add
pop
mov
aaa
ret
rolb
and
test
push
or
mov
push
outsl
clc
sub
dec
cs
bound
mov
call
push
cmp
cmovle
push
mov
sbb
dec
aam
movsl
mov
or
inc
lods
dec
add
or
mov
stos
add
addb
mov
push
push
imul
push
inc
loope
xorb
push
and
mov
inc
insb
push
sbb
pop
inc
sub
pop
push
sub
adc
add
jmp
jne
jne
popa
aaa
and
ret
mov
pop
inc
lahf
inc
push
xchg
sbbb
push
sub
lods
jo
and
incl
and
arpl
adc
mov
inc
sub
xchg
add
mov
xchg
cmp
adc
push
inc
mov
mov
pop
fdivl
inc
aam
push
or
pusha
mov
loop
adc
mov
pusha
sub
or
subl
pop
rolb
lods
sub
lods
mov
pop
mov
sbb
rcrl
in
testb
adc
push
mov
aaa
test
clc
add
add
push
pop
adc
add
movsl
add
sub
sub
dec
aam
or
pushf
imul
data16
sub
push
mov
mov
adcb
and
xchg
stos
sbbb
or
into
subl
inc
jno
decl
pop
sub
fimull
arpl
or
or
mov
nop
cmc
xor
addb
mov
pop
mov
jno
mov
dec
push
jb
dec
inc
addl
or
mov
pushl
das
loop
testl
push
movsb
adc
cld
adc
fldl
test
stc
and
outsb
add
push
test
rolb
mov
sarl
push
xchg
mov
enter
adc
push
lods
xor
and
inc
stos
push
sub
cmp
sbb
insl
sarb
pushf
sbb
inc
mov
xchg
sbb
inc
push
adc
lea
xor
push
mov
adc
mov
mov
mov
pusha
inc
push
das
pop
cmp
dec
add
mov
adc
and
inc
or
and
add
out
shrl
lods
push
rorl
sub
add
pop
cltd
and
inc
or
adc
sbb
sub
lret
cs
push
inc
adc
ss
imul
mov
enter
mov
addb
and
and
xor
push
rclb
sbb
push
sub
jmp
aaa
push
xchg
push
pushf
addb
cmp
sub
xchg
pop
ret
and
jne
inc
add
jle
push
cmp
shlb
lea
push
aad
in
xchg
push
dec
cltd
push
testb
lods
sarb
movsl
inc
test
loop
loop,pn
inc
cltd
push
push
mov
or
mov
notl
loop
int3
loope
lret
das
sub
mov
icebp
mov
aad
cmp
xchg
ficomps
and
int3
cmp
je
rcrl
adc
bound
mov
into
xchg
inc
xchg
mov
inc
lds
sarl
sbb
out
add
loopne
test
adc
pusha
sbbl
pop
inc
sbbl
inc
xor
pop
ja
loop
cmpl
adc
mov
loop
nop
jb
or
or
fistps
cmp
icebp
loop
or
and
stos
mov
or
mov
fsubrs
or
xorb
imul
je
and
pop
cmp
xor
adcb
push
adc
sub
mov
ficompl
sbb
push
icebp
es
jmp
mov
pop
aad
sub
jge
popf
add
inc
sbb
rcrb
dec
adc
ficoml
call
sub
xor
sub
inc
fildl
pusha
inc
orl
inc
push
or
rcl
imul
jo
jno
fmulp
stos
in
xchg
int
test
outsb
push
int3
rolb
mov
inc
adc
dec
and
into
mov
push
xor
mov
sbbb
hlt
fs
sub
xchg
or
subl
ret
adcl
les
clc
xchg
adc
out
lock
add
xor
xor
or
cmp
or
inc
xor
mov
mov
cmp
mov
pushf
popf
lods
push
nop
sbb
push
mov
add
nop
sub
xchg
add
xchg
and
adc
add
mov
push
dec
fdivrs
add
jl
je
fidivl
enter
xor
icebp
loope
ret
popa
sahf
push
stos
pop
pop
fadds
shl
mov
add
xor
in
sub
mov
orl
mov
mov
pusha
in
mov
mov
pop
imul
fnstcw
push
jae
xchg
sub
push
sbb
and
fwait
xchg
dec
add
mov
pop
insl
fisttpll
inc
mov
lock
ljmp
xor
and
sub
pop
adc
test
jp
fnstcw
xchg
mov
jo
fnstsw
sbbb
rorb
lock
mov
mov
and
mov
mov
adc
enter
shl
xchg
add
aam
add
ss
sub
bound
mov
sbb
cmc
addb
adc
adc
adc
add
scas
aad
sub
and
mov
push
int3
jge
xchg
pushf
push
daa
push
cltd
add
dec
jecxz
enter
ret
add
les
push
divl
call
xchg
stc
shr
push
sub
mov
jmp
testl
sub
push
les
jne
and
loopne
sub
mov
and
adc
sar
sub
xor
das
adc
mov
xchg
fsts
testb
icebp
mov
dec
shl
inc
lret
shlb
dec
cltd
call
mov
in
movsl
data16
add
rcll
or
into
int3
pop
push
loopne
rcrl
stc
sub
jns
and
or
nop
into
mov
fsubs
call
pop
lea
push
jg
popf
mov
fsubrl
cmp
xchg
dec
add
or
loop
test
sub
inc
and
lods
mov
dec
out
ja
int3
xor
xor
out
push
in
add
dec
and
mov
hlt
jb
add
popa
adc
test
mov
outsb
into
mov
lea
ss
mov
movsb
cmp
mov
xchg
push
or
test
or
inc
sub
or
or
mov
cmpsl
rsqrtps
pop
cld
mov
xor
push
sub
ret
in
mov
icebp
mov
aas
mov
cwtl
and
adc
inc
out
adc
jbe
aam
iret
fcoms
ror
js
cmp
enter
adc
pop
push
sub
add
cli
pop
sbb
pusha
ds
add
insb
loope
arpl
repnz
add
fldt
add
cmp
xchg
jns
in
sbb
aas
dec
pusha
inc
pop
xor
out
add
icebp
mov
jae
inc
sub
jg
ret
incl
adc
push
cli
and
cmp
out
fistps
adc
inc
ror
sub
fcmovnb
test
push
lcall
stos
inc
inc
enter
sbb
xchg
movsl
adc
mov
outsl
ret
rep
push
or
rolb
ret
insl
fsubrl
mov
ret
add
sbb
add
sbb
loop
pop
adc
jne
fsubs
mov
mov
jno
push
sub
push
sub
and
adcb
and
popa
cmp
pop
push
dec
xor
mov
push
dec
xor
and
outsb
sbb
test
inc
mov
push
stos
adc
ret
add
cmc
and
dec
sbb
xor
nop
stos
and
mov
mov
pop
inc
shll
mov
push
sbb
adc
mov
mov
aaa
add
pop
test
push
mov
mov
cmp
inc
add
mov
pop
push
aad
inc
mov
cwtl
aaa
adc
and
daa
pop
nop
xor
insl
scas
jne
xor
cmp
inc
sub
add
mov
test
shlb
xchg
lea
push
sub
jno
mov
or
push
and
pop
push
adc
lcall
inc
mov
and
cmp
mov
or
stos
inc
add
inc
sub
push
dec
mov
mov
jmp
loop
push
mov
das
ss
stos
add
adc
imul
pop
push
rcrl
ss
mov
sbb
mov
mov
test
and
outsb
jbe
push
shrl
lea
add
test
divl
pop
xor
outsl
or
imul
dec
movsb
mov
inc
test
or
loopne
dec
out
add
mov
imul
shrb
sub
es
aad
adc
lret
add
pop
pop
aad
or
sub
pop
push
sub
aam
cmc
adcb
stos
adc
imul
or
or
push
pop
xchg
sbbb
test
lods
mov
inc
aam
ret
pop
sbb
rolb
or
add
inc
inc
push
loop
insl
add
or
cld
aad
sbb
cmp
loop
lods
sbb
inc
inc
add
sbb
js
push
sub
lods
add
jmp
adc
push
aad
push
imul
add
push
lret
gs
insb
sub
test
adc
mov
push
sbb
aaa
dec
push
push
xchg
scas
adc
inc
mov
leave
inc
les
push
rclb
lahf
or
push
cmp
dec
outsl
adc
les
cwtl
testb
aam
add
and
test
xchg
mov
ss
or
outsb
lods
jne
jno
loop
insb
jmp
mov
imul
lret
jnp
sub
or
fnstenv
sbb
aam
add
cmp
push
into
orb
mov
mov
and
sbb
push
out
aad
push
push
push
cmpl
pop
loop
jmp
inc
cli
sbb
sbb
test
push
movsl
pop
ret
push
adc
add
int
pop
bts
movsl
clc
mov
mov
xor
shl
xor
add
xor
clc
dec
sub
mov
sbb
mov
push
shrb
addr16
or
push
inc
sub
pop
dec
pop
and
add
daa
in
icebp
cltd
pop
js
xchg
test
pop
adc
stos
outsl
cmp
movsb
sbb
xorl
dec
adc
mov
fmuls
in
cmp
test
push
in
sub
xor
jae
or
or
test
and
cli
push
push
mov
out
mov
mov
sub
or
adc
adcb
stc
cmc
mov
in
sahf
aam
inc
pop
int3
or
and
enter
popf
sbb
mov
pop
hlt
dec
repz
icebp
push
jb
aam
outsl
add
xor
mov
dec
add
or
orl
adc
cmpsl
and
push
cmp
sub
push
push
mov
or
rorb
push
xor
stos
jle
enter
sahf
or
das
push
std
xchg
in
sbb
pop
scas
clc
xchg
gs
nop
jae
int
sub
fildl
or
stos
xchg
adc
fwait
pusha
icebp
add
test
pop
cmpsb
dec
sub
outsb
aam
adc
inc
xor
xchg
mov
sub
xor
sub
mov
and
pop
xchg
dec
inc
into
hlt
adc
add
data16
inc
xor
mul
pop
fs
add
mov
enter
jo
cmp
cmp
cs
sbbb
pop
data16
add
xor
jae
popa
inc
jge
rol
mov
cltd
cmp
pop
cli
mov
cmp
xlat
adc
out
cwtl
or
dec
cmpb
jne
nop
ds
xlat
cmp
mov
pop
test
mov
fidivrs
cmc
mov
push
sbb
data16
or
adc
push
out
mov
cmpsb
test
sub
mov
xor
sbb
cmp
push
xor
dec
cwtl
push
pop
adc
adc
cmp
xor
inc
inc
sub
lock
mov
add
mov
mov
add
or
pop
clc
adcb
lret
adc
jno
inc
out
stc
jl
cltd
or
das
clc
cld
add
or
cmp
and
fisubl
sbbl
add
fldt
lock
inc
out
add
push
sbbl
and
rcrl
add
inc
jmp
test
xorb
sub
sbb
fmull
push
fstl
shl
iret
movl
push
decl
icebp
sbb
add
and
std
xchg
cmp
mov
movsl
inc
mov
and
lods
mulb
imul
mov
cmovno
clc
jle
stos
dec
xchg
pusha
sub
sub
in
mov
mov
icebp
xor
test
adc
inc
test
in
outsl
hlt
xlat
push
add
shrl
lcall
cmp
bound
mov
cmp
push
imul
push
lods
aaa
push
lret
fiaddl
sbbl
and
pusha
xor
xchg
daa
mov
cmp
popa
mov
inc
push
sub
jle
push
stos
pop
jbe
push
sbb
or
addl
mov
inc
sub
adc
insb
push
test
shrb
sub
adc
sbb
push
inc
mov
inc
imul
imul
andb
cmc
es
sub
xchg
fsubl
pop
add
bound
adc
mov
outsb
daa
lods
mov
add
into
insb
loop
sub
push
xor
mov
aad
sub
push
in
pop
cltd
or
shll
aas
mov
pop
add
cld
test
adc
push
sbb
stc
add
pop
mov
rorl
imul
mov
stos
inc
mov
inc
movsl
js
imul
mull
sbb
lods
inc
imul
loope
sbb
ret
push
cmpxchg
push
stos
mov
aad
popa
mov
pop
add
mov
aad
dec
push
push
imul
test
adc
aad
jo
imul
or
pop
sbb
push
push
and
rcrb
cmc
jmp
inc
insl
adc
test
addb
sti
sub
data16
addb
es
adc
inc
sub
imul
mov
and
clc
outsl
lea
hlt
in
mov
and
add
ss
mov
pop
filds
xchg
jle
jae
inc
mov
cmp
push
cli
rorb
imul
das
mov
mov
or
push
lods
inc
aam
sqrtps
push
pusha
xor
stos
or
adc
push
adc
jno
mov
lods
dec
in
xchg
addb
sub
fadd
mov
call
inc
adc
add
inc
insb
or
push
addl
pop
pop
pop
inc
test
push
xor
loope
xorb
adc
inc
push
in
inc
jae
test
addr16
scas
push
stos
or
aas
mov
inc
lds
es
mov
jb
jb
fst
adc
sub
scas
and
mov
aad
or
andb
jbe
insl
or
mov
inc
lods
ror
or
je
push
cmp
in
sbb
popa
adc
mov
inc
sub
insb
nop
push
or
imul
lahf
lret
sub
cmpsb
or
loope
ret
dec
push
add
test
add
add
mov
sub
xor
pop
push
cmp
mov
es
mov
inc
imul
and
dec
insl
es
imul
push
mov
es
xor
addb
and
or
mov
xor
loop
ret
lret
sub
xor
gs
mov
push
sbb
mov
sarb
or
add
adc
mov
sub
add
pop
aas
mov
inc
in
lcall
jl
into
jb
test
sbbb
xor
push
movsl
add
mov
push
jg
lcall
pop
jecxz
sub
inc
lods
pop
adc
or
adc
test
js
aad
push
push
pop
adc
push
jo
mov
sub
mov
cmc
aaa
cltd
pop
mov
pop
cmp
mov
insb
lods
adc
inc
pop
fwait
sbb
add
inc
lret
mov
and
mov
push
adc
mov
into
lods
testb
pop
dec
mov
mov
test
cmp
fstl
aad
bsr
pop
test
cmp
and
or
xchg
movsl
insl
imul
out
aaa
mov
cmp
sbb
cmp
movsl
cmc
lods
shrb
push
jne
add
imul
sub
movsl
mov
sbb
adc
pop
sbb
and
xchg
xor
cmp
sbb
rclb
lea
ss
in
aaa
pop
xchg
cmp
push
adc
insb
mov
stos
inc
jnp
mov
stos
xor
mov
push
imul
shrl
scas
xor
fnstenv
popa
push
jno
push
lods
push
test
xchg
push
adc
mov
movsl
fadd
imul
push
dec
clc
and
jmp
lods
adc
movl
es
or
add
decl
push
mull
cmp
push
xor
inc
sub
adcl
daa
adc
jo
bnd
mov
or
leave
pop
ljmp
or
sub
test
sbb
imulb
or
adc
sub
push
push
xor
mov
mov
add
cld
test
push
pop
inc
cltd
dec
jae
sub
mov
add
xchg
dec
adc
and
sbb
test
and
and
int3
out
add
inc
pop
add
scas
inc
into
and
sub
sbb
in
mov
pop
jo
sbb
lods
scas
add
inc
insb
inc
cld
in
fcmove
push
mov
mov
ja
inc
sub
sub
mov
xchg
mov
mov
test
cmpsb
jo
mov
or
fwait
mov
pop
pop
xchg
add
jb
aad
sbb
jno
sub
sbb
or
push
rcll
push
stos
mov
jb
das
repnz
aad
mov
movsl
jg
in
add
push
xchg
push
mov
push
aam
jns
loop
xchg
mov
aaa
push
lods
frstor
test
push
sbb
jnp
sbb
mov
pusha
mov
inc
inc
and
inc
mov
test
push
dec
movsl
outsl
mov
xchg
pop
arpl
int3
aaa
into
jnp
or
out
jo
lea
push
adc
jo
mov
sub
dec
pop
test
xchg
xchg
insb
adc
imul
xchg
jns
loop
stc
mov
popf
mov
pop
ret
xlat
testl
leave
in
scas
lret
fadds
ja
call
cmp
push
sahf
pop
lahf
rclb
xchg
addr16
je
pop
repz
xchg
mov
xor
lock
or
cmp
push
pushl
inc
es
mov
push
or
test
sub
inc
push
sub
andb
movsl
orb
test
loope
ret
jb
test
pop
cli
cmp
push
es
push
add
cmc
rcrb
outsb
add
test
xchg
push
test
fldt
inc
aam
push
es
xor
add
loop
mov
mov
mov
sbb
arpl
mov
lea
cmp
test
push
pop
imul
push
inc
adcw
or
jne
push
jo
mov
xchg
xchg
mov
jno
ret
add
pop
mov
es
loop
fldt
mov
mov
sub
jo
add
fcomps
sub
push
and
daa
in
mov
add
in
lret
je
lods
addl
into
push
sub
pop
jp
outsb
shlb
sbb
fidivrl
aad
mov
mov
mov
movsl
mov
int
mov
add
je
outsl
jb
add
call
push
push
add
shrb
jb
loopne
cmp
push
pop
stos
xchg
pop
imul
mov
fldcw
cmp
add
push
test
lock
sbbl
cmp
or
popa
andb
adc
sbb
decl
lods
mov
sbb
jbe
and
jbe
jae
rcrb
es
xchg
lea
icebp
push
orb
mov
test
cmp
or
push
insb
mov
sub
pop
jp
and
xor
jo
pop
jb
rclb
mov
sbb
or
mov
in
mov
addl
sbb
idivl
addb
adc
pop
or
test
es
add
push
scas
mov
sbb
stc
jno
shll
jp
or
insb
ss
cmp
pop
add
mov
outsb
xor
push
test
and
aam
inc
push
mov
aad
or
and
inc
insl
jae
sub
pop
dec
lret
push
adc
rorl
lods
inc
xor
mov
inc
sbb
test
sub
cmp
ret
push
dec
push
cltd
rcrl
sub
or
dec
lods
inc
test
ljmp
les
adc
mov
xor
xlat
call
neg
test
in
je
mov
adc
sub
sub
push
xchg
adcb
or
xor
inc
pop
sub
scas
and
dec
add
movsl
or
fcmovb
inc
lret
aaa
ja
adc
inc
and
xchg
fisubrl
ss
popf
push
inc
mov
pop
lret
xor
jbe
sar
cmp
add
pop
mov
xor
mov
arpl
inc
xchg
or
sbb
sbb
rcll
pop
dec
mov
in
adc
cmp
int
fucomi
push
into
adc
inc
mov
or
lret
push
daa
jp
sub
sub
mov
sbb
and
jbe
xchg
lret
shll
xchg
add
inc
lods
lods
sub
and
mov
mov
inc
mov
cltd
push
dec
out
mov
test
fwait
aas
inc
movsl
add
push
sub
jne
add
jmp
xchg
pop
mov
scas
sub
rorl
lods
rcrl
out
pop
jns
lods
aam
adc
js
cmpb
inc
sbb
imul
test
mov
mov
push
inc
push
mov
rol
pop
cld
jno
jb
and
and
push
pop
inc
sub
mov
add
lods
mov
subl
xchg
mov
inc
push
test
xor
xor
inc
inc
sub
sub
sub
mov
or
int3
mov
push
inc
insb
dec
mov
push
mov
push
imul
imul
adc
movsl
int3
xor
lcall
mov
mov
mov
or
add
movsl
or
add
pop
push
cmp
test
mov
xchg
out
rcll
addl
fcoml
sbb
outsl
imul
adc
cmp
sub
shl
sbb
stos
mov
mov
enter
add
and
add
adc
cmp
mov
cmp
jnp
neg
adc
mov
jg
add
nop
or
fidivrl
push
ret
sub
push
push
mov
adc
cmc
push
pop
testl
add
iret
inc
mov
popf
lcall
ret
inc
jl
dec
ret
outsl
aam
xlat
dec
sarl
add
sbb
cmp
push
sub
xchg
pop
inc
fcom
dec
add
mov
out
xor
xor
mov
push
mov
and
xchg
xchg
mov
mov
mov
add
add
and
dec
and
lods
cmpsb
cmp
loopne
add
inc
jno
cmpsl
imul
jg
test
sbbl
adc
call
negb
test
add
sub
jg
out
sbb
loop
out
add
call
push
mov
or
loopne
loop
outsb
adc
fiadds
lea
adc
or
cmpsb
mov
pop
adc
add
clc
insw
scas
lret
add
dec
add
adcb
aaa
xor
add
xchg
inc
in
inc
dec
jmp
das
roll
mov
addb
or
mov
mov
jg
pop
adc
jns
dec
fdivrs
loop
add
fistpll
dec
mov
call
add
lock
hlt
inc
andb
push
loope
add
lcall
and
add
push
sbb
jne
pushf
shlb
inc
xor
and
filds
ja
adc
sbb
test
sbb
jne
addl
inc
imul
popf
jb
add
and
lods
inc
mov
sub
rolb
pop
ret
pop
push
push
push
icebp
mov
js
daa
fisubrs
adc
pushf
mov
iret
imul
adc
xchg
out
push
insl
mov
inc
cmpsb
pop
lret
add
pop
test
mov
adc
test
mov
inc
push
jno
add
inc
mov
sub
xchg
xchg
ljmp
lods
push
and
xlat
jae
mov
xor
mov
push
and
aad
subb
push
mov
pop
dec
test
ds
mov
inc
mov
das
aad
enterw
mov
lds
sbb
insl
xor
gs
sub
xchg
test
mov
test
movsb
or
andb
mov
or
repnz
sbb
pop
or
fbstp
push
pop
or
xchg
aad
add
push
mov
adc
push
mov
in
arpl
lret
xchg
mov
and
mov
shlb
pop
addb
adc
stos
mov
mov
mov
add
xchg
xor
pop
push
dec
jg
sub
push
rcll
icebp
cmc
lea
pop
rcll
fsubr
add
mov
adc
lods
push
stos
adc
pusha
cmp
subb
outsb
xchg
inc
cmp
test
mov
cmp
inc
inc
inc
out
sbb
scas
xchg
and
jmp
data16
dec
inc
pusha
inc
aas
and
add
mov
sub
push
inc
pop
jge
enter
xchg
mov
int3
adc
dec
addl
mov
add
dec
sbb
add
cld
rcrb
mov
add
rclb
test
add
jge
ficompl
fsts
dec
sub
xor
insl
mov
sub
popa
sub
and
adc
nop
mov
popf
lods
mov
mov
and
sub
xlat
pop
adc
pop
inc
pop
mov
imul
cmp
fs
lods
add
sbb
xor
les
fiadds
addb
inc
shll
push
jle
hlt
sbb
add
or
sbb
dec
pop
sub
add
loop
and
push
pop
cmp
rol
inc
xor
jnp
pusha
mov
movsl
mov
rorl
mov
cmp
xor
sbb
adc
cmpl
fcoms
test
mov
in
adc
pop
cltd
jo
add
nop
rolb
dec
sbb
mov
sub
sub
add
mov
popa
push
push
mov
inc
xor
xor
fiaddl
add
mov
inc
sbb
inc
pop
xor
or
or
std
lahf
add
inc
dec
in
mov
imul
dec
or
and
inc
and
jb
lds
inc
push
jmp
int3
lods
push
cmpb
jae
insl
aam
add
pop
push
test
lods
lods
mov
cltd
stos
pushf
adc
lock
mov
dec
add
add
dec
inc
fistl
inc
xchg
stos
nop
orl
mov
dec
push
add
inc
cmp
mov
or
and
push
test
lods
mov
push
inc
mov
sbb
dec
cmc
or
aad
mov
outsb
rorb
test
stos
aad
xor
subb
xor
or
adcb
mov
pop
cmp
out
add
inc
lods
push
out
mov
inc
add
xor
add
out
shrb
or
cmc
mov
in
mov
push
lret
sub
xor
mov
movsl
dec
rol
fistpll
pop
mov
pop
imul
cmp
aaa
sbb
pop
mov
fstl
rcrb
jl
push
andb
fdiv
pop
lret
inc
lods
sub
loop
sub
add
mov
pusha
imul
cmp
and
rorb
push
lds
sbb
stc
ret
sbb
cltd
loop
xchg
mov
call
push
xchg
aad
fcomip
jmp
mov
mov
or
stc
andb
add
rolb
cltd
cwtl
inc
push
fcomps
inc
push
push
test
lcall
and
inc
lock
and
mov
push
jne
push
sub
fs
gs
stos
push
rorl
stos
inc
roll
or
fadds
pop
add
mov
popa
sub
push
xchg
dec
lretw
xchg
and
mov
or
sub
addb
jo
mov
pop
xor
sub
sbb
mov
lea
or
push
sub
mov
sbb
sbbl
xor
mov
subb
loopne
push
in
mov
pusha
das
push
or
sub
mov
rclb
cmp
movsl
lock
adcl
cld
test
dec
push
mov
pop
jmp
push
xor
pop
inc
imul
ficoml
mov
scas
or
mov
shl
sahf
jno
test
adc
mov
xlat
pop
or
sub
xor
or
dec
je
inc
xor
sahf
imul
sub
test
cmp
adc
dec
mov
inc
add
push
push
lods
or
xchg
sbb
das
imul
or
insl
test
inc
and
mul
dec
test
jg
sub
test
arpl
mov
inc
or
cmp
lods
push
mov
insl
or
push
test
adc
add
add
xor
and
lds
mov
sub
lea
outsb
scas
insb
xchg
adc
cmp
popf
call
addl
mov
add
out
add
bnd
mov
iret
dec
dec
adc
mov
xchg
test
adc
mov
mov
jne
inc
mov
add
insb
mov
sub
sub
das
lds
dec
pop
xchg
dec
insl
sub
inc
xchg
sub
xorb
dec
and
inc
rclb
shrl
cmp
lcall
mov
add
dec
adc
mov
enter
rclb
rolb
cmp
loop
stos
sub
pushf
jnp
fdivrl
mov
sbb
sub
add
adc
sbb
xchg
push
cmc
rcrl
pop
mov
mov
and
add
sahf
cmp
lods
push
imul
push
je
cmpb
pusha
outsb
mov
xchg
ficoml
inc
mov
pop
xchg
pop
push
ret
pop
aas
pop
insb
or
mov
push
in
icebp
mov
lods
aaa
js
loope
aad
xchg
cmp
push
mov
dec
push
insl
mov
mov
push
mov
push
mov
mov
cmpsb
fisubrl
test
loopne
push
std
pop
mov
lock
push
mov
sbbb
and
insb
filds
test
aaa
mov
push
and
inc
cmp
mov
push
cs
push
mov
test
xchg
sbb
push
cmp
mov
add
mov
stc
pop
mov
lahf
std
inc
cmc
pop
add
mov
mov
cmp
pop
adc
pop
das
jp
and
mov
sbb
mov
cmp
pop
pop
inc
repz
hlt
clc
adc
jne
jno
xchg
andb
inc
mov
adc
mov
mov
add
adc
xor
aam
jne
or
xchg
fsubl
cmp
in
sub
aam
xchg
jle
add
adc
loope
xchg
adc
pusha
or
push
inc
loope
xchg
sbb
sti
sbb
aam
jmp
push
mov
ret
int
adc
adc
mov
add
cmp
adc
push
cli
shl
add
or
andl
mov
imul
pusha
mov
inc
mov
loopne
adc
addb
cmpsb
mov
mov
test
outsb
je
dec
test
or
xor
mov
loop
insb
sbb
mov
fsubr
mov
dec
in
ja
or
lods
addl
stos
insb
xor
in
hlt
push
xchg
add
xchg
xor
pop
dec
add
or
adc
push
xchg
cmp
pusha
cwtl
rcll
fsubrs
pop
test
adc
inc
and
mov
ljmp
stos
stos
add
fdivp
mov
add
mov
ja
or
mov
cmovno
ja
sub
mov
push
les
jg
add
js
add
gs
imull
in
call
push
mov
clc
pop
adc
lea
pusha
and
cmpb
imul
push
jns
ret
sub
shl
or
pushf
add
xchg
or
mov
cwtl
push
adc
es
push
popa
loope
fsubs
lock
push
pop
inc
das
data16
and
std
mov
jne
ficompl
dec
sbb
inc
adc
ret
adc
mov
fnstcw
in
lock
xchg
int
jo
sbb
roll
and
xchg
cltd
or
das
add
add
cmp
cmpsl
sub
dec
pop
add
jge
xor
jae
xor
repnz
mov
rcl
push
shlb
and
clc
gs
stos
mov
loopne
aaa
pop
xor
xchg
push
xchg
adc
sbbb
shll
or
dec
notb
xchg
icebp
je
lea
push
sub
cld
lock
jle
mov
or
push
add
fsubs
data16
jne
outsb
int3
stos
pop
stos
mov
push
iret
sbb
mov
lcall
addb
data16
add
mov
insl
fistps
push
out
icebp
dec
das
or
mov
repnz
cmp
xor
sbb
pop
mov
aas
testb
cmp
out
add
cmc
inc
dec
in
add
lcall
cmp
ja
and
inc
or
push
dec
mov
and
mov
pusha
mov
in
andb
cmp
jmp
push
pusha
nopl
inc
xchg
and
cmp
and
movl
push
jnp
xor
mov
adc
jne
cmovns
sbb
mov
out
sub
pop
inc
dec
cmp
pop
adc
cwtl
mov
lret
xor
daa
test
pop
or
aam
sub
lcall
inc
mov
ret
push
cmc
ljmp
out
jnp
jecxz
inc
push
test
cmc
adc
or
push
cmp
mov
es
add
adc
lea
movsb
pop
or
inc
push
fs
add
and
sub
inc
mov
add
pop
push
mov
xor
mov
mov
imulb
rclb
mov
add
push
scas
test
loopne
sub
xchg
and
add
sub
rcll
pusha
stos
rcr
inc
pusha
jae
rcl
add
inc
imul
mov
or
roll
loop
iret
adc
sbb
lcall
in
inc
push
sbb
notl
sub
mov
lcall
adc
subb
push
mov
ret
sub
xchg
jae
ss
mov
pop
outsb
cmp
push
and
les
in
ljmp
rcll
dec
ret
add
adc
push
lods
push
mov
push
test
aad
sbb
rolb
imul
and
popa
xchg
inc
sub
push
stos
or
imul
jp
jecxz
inc
add
sub
mull
ret
lcall
mov
ret
cmp
inc
xchg
mov
pop
add
cmp
aad
fists
pop
mov
mov
test
cltd
xor
lods
adc
pop
pop
dec
sub
sub
inc
outsb
or
pop
ss
fldcw
push
decl
ja
ds
sti
adc
add
push
test
mov
pusha
sbb
aad
test
cli
aad
inc
lods
adc
insb
add
mov
mov
sub
jl
shrb
mull
imul
push
clc
arpl
mov
mov
xchg
imull
fs
aaa
negb
inc
push
sub
sub
push
aaa
cvtdq2ps
test
aad
mov
push
or
insl
fisttpl
cmpsl
xlat
cmc
mov
mov
daa
push
adc
and
addb
fwait
aas
inc
mov
push
push
ss
xchg
cmp
addb
mov
loopne
fcomps
stos
mov
fsubs
mov
ret
pop
adc
inc
adc
xchg
cmc
adc
xor
std
leave
aaa
jns
aam
cmpsb
sub
lds
in
adc
push
push
inc
dec
aad
sub
rcl
push
fmul
inc
cmpsb
inc
inc
xor
add
inc
mov
mov
push
fbld
lret
mov
test
scas
inc
subb
adc
push
xchg
xor
ret
fs
enter
xchg
sbb
lea
pop
dec
test
jle
lods
push
mov
in
push
test
add
push
xchg
xor
push
aam
add
inc
push
in
insb
lea
aad
push
test
fdivl
mov
mul
pop
xor
push
ret
adc
fs
outsb
xchg
daa
jno
and
lcall
add
out
or
das
daa
lds
and
ss
cmpsl
loop
mov
cltd
and
ss
push
repz
adc
pop
jle
xor
fstpt
push
xchg
subb
push
add
lret
sbb
aaa
dec
jns
push
add
mov
and
push
xor
jge
pop
mov
push
orb
xchg
xchg
or
lds
pushf
push
faddl
xchg
push
call
pop
inc
stos
adc
xor
push
add
sbb
es
lods
mov
add
xor
inc
insb
and
adc
rorb
or
jns
insl
mov
push
nop
dec
inc
push
add
mov
lods
test
cmp
sub
pop
xor
add
push
add
fildl
xchg
jno
jb
aam
inc
stos
sbbl
ret
push
fdivs
mov
inc
pop
cwtd
adc
push
insl
add
imul
cmpsb
je
filds
or
pop
stos
push
sahf
shll
pop
fisubrl
inc
movsl
pop
mov
xor
imul
inc
clc
call
push
jne
sbb
inc
notl
rcll
sub
inc
imul
mov
mov
scas
and
test
clc
aaa
sbb
imul
push
jo
cmp
add
mov
adc
mov
aas
sbb
fsubrl
lods
mov
mov
enter
mov
ret
push
mov
inc
imul
or
dec
fidivl
or
mov
adc
mov
lret
loop
jp
inc
and
nop
and
inc
push
xor
push
or
dec
push
sbb
hlt
orb
push
jno
xor
fwait
xchg
orb
out
lret
sub
shrl
inc
push
loope
add
jno
mov
push
sbb
pusha
mov
and
imul
xor
aaa
sub
movsl
adc
mov
bound
push
mov
shrb
arpl
xor
sahf
jno
mov
inc
mov
scas
neg
out
add
ror
jmp
cmp
push
jo
add
jb
push
sub
inc
into
dec
loop
push
outsb
sbb
inc
add
mov
mov
cmp
popf
outsb
lods
not
jne
sub
mov
mov
sarb
mov
pop
mov
mov
movsl
fwait
jg
stos
loopne
nop
repz
or
mov
arpl
imul
int3
mov
lret
xor
adc
push
and
mov
jl
sub
push
sbb
test
fcomps
out
outsl
cmp
push
jne
outsb
out
pop
insl
or
adc
add
xchg
cmc
shl
inc
lret
mov
adc
push
test
or
orb
stos
or
add
inc
and
adcl
pop
xor
xor
repnz
rorb
sub
sub
subb
sub
or
xchg
enter
scas
jbe
ds
imul
or
loope
cmpsb
push
mov
es
fsubrp
add
sub
cmp
fadd
in
xor
xchg
xor
lret
adc
add
lds
jae
sbb
and
lods
xlat
andb
or
sahf
add
adc
in
js
add
adc
xor
xor
add
enter
iret
mov
jb
dec
push
and
arpl
fldt
mov
stos
push
and
xchg
dec
push
pushl
mov
mov
aaa
add
sti
fnstsw
adc
inc
xchg
shrb
inc
mov
sub
dec
inc
dec
test
add
lods
in
push
lock
push
aad
add
push
loopne
loope
int3
jge
and
dec
lcall
sbbl
mov
aam
ss
aad
hlt
add
dec
add
inc
push
pop
or
sbb
daa
push
adc
xor
pop
idiv
stos
dec
sub
jo
xchg
cltd
mov
xchg
jl
dec
sub
push
cmp
inc
les
sub
push
cmc
add
insl
mov
in
mov
xor
xor
inc
les
add
pop
rolb
lea
or
add
mov
stos
add
test
rclb
pop
mov
dec
sub
dec
add
dec
loop
dec
cmpsl
or
or
add
subl
je
ljmp
fs
add
lock
je
sahf
sub
push
mov
adc
mov
rorl
mov
add
add
cmp
lock
mov
mov
and
add
dec
fs
adc
xchg
add
cltd
les
negb
aas
or
lret
std
out
push
neg
inc
and
jae
add
aad
nop
call
das
or
and
sub
lock
ja
push
aam
fimuls
xor
test
adc
cmp
push
pop
pop
sub
leave
sub
les
dec
clc
subb
adc
xlat
test
or
out
loope
popa
lret
mov
adc
ret
adc
cmp
sub
dec
pop
ret
jge
xor
and
xchg
rcrl
movsb
inc
adc
and
daa
sbb
loopne
sub
mov
adc
sbb
inc
lock
shll
cmp
cmpsl
push
mov
cmpsl
inc
jmp
sti
adc
jb
or
dec
inc
push
shrl
adc
and
stos
loope
sahf
mov
adc
test
inc
fwait
push
fwait
std
jmp
aas
dec
xor
mov
add
xlat
xchg
mov
add
movsb
jo
dec
pop
loopne,pt
ljmp
in
in
inc
loope
loopne
mov
ret
or
lock
sbbl
stos
lret
push
or
pusha
sbb
jns
mov
call
inc
xor
fistl
ret
xchg
fcoml
cwtl
js
or
or
fmull
mov
add
push
xor
xor
sbb
jl
mov
sub
icebp
mov
dec
cli
ja
lods
ljmp
xchg
cmp
cmp
lret
loop
aad
adc
cmpsb
sbb
mov
rcrb
mov
inc
lret
or
xor
data16
pop
sub
testl
jnp
push
push
sub
shrl
sub
imul
sub
shll
cli
adc
inc
xchg
adc
cmp
aad
jno
and
sbb
push
xor
inc
push
in
jne
inc
add
sbb
mov
adc
test
dec
loop
xchg
xor
xchg
ret
andl
inc
stos
mov
cmp
jecxz
frstor
push
cmpsb
or
movsl
fwait
mov
roll
lea
sbb
mov
test
mov
movsl
mov
lods
imul
jne
data16
test
in
inc
mov
push
inc
movsl
clc
add
test
sbb
jno
sbb
jge
stos
push
jne
imul
pop
push
xchg
mov
mov
stc
insl
jmp
mov
add
into
jns
test
stos
lret
jbe
mov
pusha
jno
pop
sbbb
int3
inc
jg
je
push
and
lods
inc
ss
xchg
inc
dec
add
xchg
mov
pop
imul
sub
mov
mov
js
lods
sbb
arpl
xchg
stos
mov
loop
das
ret
mov
fisttps
cmp
sub
rolb
loope
jno
test
idivl
jno
lods
sub
outsb
ss
sub
add
mov
mov
pop
sub
into
call
jae
add
jae
and
inc
lea
push
and
push
jo
dec
int3
and
mov
inc
inc
cmpsb
and
fdivrs
adc
sub
sbb
push
call
mov
mov
push
jecxz
pop
push
or
pop
mov
xor
push
fisubrs
popa
mov
mov
cmc
pop
push
movsl
cmc
lea
pusha
mov
pushf
sub
sbb
jb
and
movsl
arpl
dec
mov
mov
fldl
cmp
lcall
mov
or
or
mov
rolb
outsb
jg
or
cmp
test
pop
inc
add
cmp
cmc
add
loop
aas
add
mov
mov
sub
stos
mov
jecxz
add
mov
push
test
nop
mov
sub
mov
push
cmp
ret
popa
pop
add
aas
or
mov
fildl
movsl
hlt
or
lret
and
mov
fs
or
mov
mov
cs
andl
lea
mov
dec
mov
mov
in
push
cmpl
sub
movsl
add
jnp
subb
or
outsl
sbb
test
shlb
outsl
jnp
add
dec
loopne
push
sbb
cmp
mov
ficompl
rolb
cmp
inc
test
push
xchg
cmp
call
push
jecxz
adc
mov
mov
xchg
or
lods
mov
cltd
inc
or
mov
movsl
push
push
add
xor
jp
xchg
adc
pop
and
sub
insl
push
imul
add
xor
inc
and
ljmp
jge
xor
popa
xlat
lret
jbe
push
push
or
cwtl
sbb
adc
shrl
sub
gs
or
daa
lods
add
roll
and
imul
xchg
enter
push
adc
aad
sbb
mov
push
sbb
test
jnp
das
mov
mov
jae
loop
stos
fcoms
mov
pop
enter
outsb
push
lods
inc
mov
imul
mov
cld
aad
mov
shlb
insl
test
gs
cmp
loope
stc
test
es
test
movsl
mull
jg
push
mov
pop
dec
rcrl
xchg
jno
mov
xor
fildl
jbe
mov
lods
mov
jle
mov
movsl
stos
aam
push
jo
popa
push
push
imul
mov
mov
cmpsb
pushf
je
mov
test
add
mov
add
cmc
push
mov
in
xor
push
and
enter
sbb
fstpl
xchg
push
jo
jno
or
mov
xor
aaa
push
call
lods
ss
lret
push
push
push
push
sbb
call
cmp
dec
sbb
arpl
mov
pop
sbb
aad
out
aaa
in
mov
and
push
push
cmp
xchg
adc
pop
mull
adc
test
lods
push
jo
lret
dec
inc
into
mov
xor
mov
pop
push
cmp
push
sub
add
fmuls
leave
sti
hlt
add
or
lret
imul
pop
or
sub
orb
lret
mov
inc
sbb
stos
inc
adc
sub
repnz
insl
cmpsb
adcl
inc
gs
mov
add
add
loop
fnstenv
ret
mov
lcall
fdivrl
sub
inc
xor
lock
xchg
pop
xchg
mov
mov
xor
into
repnz
rorb
fidivl
or
adc
xchg
orl
pop
bound
and
pop
push
mov
jb
lea
push
push
push
pop
push
sub
aad
sbb
sbb
mov
cmp
dec
and
mov
jmp
sbb
pop
push
sub
aam
test
sub
lods
lods
xor
cwtl
mov
xchg
add
add
in
mov
js
cmp
add
lcall
popf
lods
mov
adc
pop
mov
cmpsl
or
inc
test
lods
mov
lods
ds
inc
std
lcall
lods
movsl
or
test
sahf
mov
into
cld
xchg
mov
inc
jmp
and
pop
xchg
mov
mov
sbb
mov
mov
sub
adc
cmp
mov
test
pop
add
pop
xor
sbb
push
test
and
aam
addb
inc
addr16
mov
adc
imulb
add
push
sub
sub
fmuls
test
inc
mov
dec
mov
or
in
add
mov
mov
sub
push
std
ret
push
adc
push
ficompl
push
in
sbb
jecxz
add
pop
dec
jg
pop
ret
xor
sbb
insb
push
jo
ret
pop
rcrb
sbb
or
push
xchg
mov
lods
push
jo
sub
movsb
and
mov
mov
aad
addb
ret
outsb
lods
add
inc
jo
lea
add
sbb
test
fistpl
ror
push
outsb
xchg
cmc
pop
dec
and
push
aad
bound
inc
fiadds
add
or
test
sbb
add
cld
mov
push
test
mov
xchg
int3
cld
fs
je
and
outsl
adc
add
ja
inc
and
or
ret
push
mov
sub
mov
std
aas
into
pop
roll
xchg
das
lods
mov
add
or
lock
push
jl
push
mov
push
dec
adc
movsb
or
stos
mov
ss
inc
mov
inc
jmp
add
in
add
cmpsb
pop
lock
sub
sbb
or
add
mov
lods
jle
adc
inc
or
enter
fiadds
and
and
adcb
push
mov
inc
mov
rorl
out
out
xor
rcll
scas
jl
add
stos
mov
xor
xchg
lods
sub
paddusb
jo
pop
adc
mov
stc
aam
aad
push
fadds
mov
add
push
add
mov
test
or
xchg
lret
es
repnz
mov
push
lret
iret
iret
sub
outsl
mov
push
xor
add
push
add
neg
ljmp
and
adc
cmpsb
jp
mov
inc
movl
movsb
rorb
mov
rorw
adc
rolb
adc
cmp
lods
stos
pop
mov
inc
cmpb
push
les
pushf
add
stc
pop
fidivrs
rorb
shlb
xchg
and
add
xchg
pop
add
jbe
pop
or
pop
cmp
cmpl
add
cmpb
int3
add
pop
add
and
xor
push
sbb
xor
add
sbb
int3
sbb
add
jge
repnz
sub
push
shlb
je
add
mov
gs
rcrl
loopne
fimuls
dec
or
mov
cltd
cld
rol
add
adc
enter
sti
dec
stos
sbb
adc
cmp
ss
sarl
push
shll
xor
cmp
adc
sbb
scas
cmp
dec
add
fstl
push
rorl
xchg
cmp
adc
adc
dec
loope
push
push
mov
test
sbb
adc
adc
cli
xchg
test
jno
xchg
sbb
or
add
imul
call
pop
rcr
add
mov
sub
cmp
cli
and
in
roll
js
add
lock
xor
and
sub
dec
shrb
push
push
pop
add
clc
arpl
test
loope
dec
sub
je
add
scas
xchg
push
in
lock
popa
push
jno
int
add
add
sub
dec
subl
and
mov
movb
dec
cmp
add
lcall
clc
aam
sub
add
adc
push
daa
sub
aaa
addb
dec
adc
push
mov
jb
movsl
jns
xor
adc
sub
or
outsb
pop
inc
adc
and
lods
mov
mov
js
or
ret
add
inc
fildl
sub
ljmp
pop
outsb
xchg
mov
dec
sub
and
call
sbbb
aad
dec
mov
cmpsl
aad
mov
in
stos
insl
dec
xchg
inc
pop
bound
test
jno
pop
add
mov
shll
pop
imul
pop
das
jns
jbe
adc
lret
lret
adc
cs
jb
push
inc
mov
mov
mov
lods
inc
popf
aam
mov
and
in
mov
xor
fidivs
rcrb
xorb
or
fisubl
orl
mov
cmpsb
aam
cmpb
pop
subl
push
inc
adc
fcmovb
mov
test
aad
push
push
mov
pop
inc
mov
inc
insl
int
inc
sub
pushf
test
xor
mov
push
jae
inc
fst
clc
lea
sub
fbld
test
test
stos
pop
sbb
or
cld
jb
push
xor
fwait
sub
inc
cmp
aad
adc
or
lret
ret
xchg
and
push
mov
push
shrb
ss
sub
jle
roll
stos
push
or
sub
inc
push
and
jmp
sbb
lods
xor
clc
inc
or
mov
and
lods
and
lock
dec
jo
adc
or
inc
inc
add
sbb
sbb
dec
loopne
xchg
sub
jne
aam
or
and
inc
mov
sbb
pop
adc
dec
sub
sub
adc
jo
das
inc
or
dec
mov
lods
fistps
mov
cmp
jnp
jnp
lods
mov
push
jge
dec
adc
sbb
lmsw
pusha
clc
or
push
adc
add
sub
inc
adc
cmp
cmc
lock
or
mov
int
xor
nop
add
mov
pusha
add
and
call
lods
inc
sbbb
pop
loop
and
das
cmpb
aam
mov
cld
sub
mov
jmp
push
adc
pop
mov
add
adc
pop
inc
stos
or
push
cmp
xchg
or
sub
mov
or
sub
out
pushf
xchg
xchg
adc
sub
sub
sbb
pop
inc
push
call
out
or
pushf
loope
add
adc
rorl
shl
cmc
push
mov
cmp
inc
inc
sbb
adc
popa
pop
inc
mov
fcmove
dec
mov
mov
mov
clc
rolb
or
mov
push
push
pop
lds
jp
or
movsb
xor
pop
call
pop
adc
sub
addb
add
pop
jp
and
sub
mov
dec
or
insb
frstor
mov
or
lods
inc
add
mov
sub
icebp
push
pop
fadd
iret
loop
es
adc
inc
or
adc
mov
and
imul
pop
int
push
push
out
fs
mov
mov
inc
mov
add
push
rorb
loopne
lock
pop
xchg
adc
mov
cmp
xchg
fisttps
xchg
jle
out
inc
outsb
pop
pop
aam
pusha
fistpl
push
mov
cmc
inc
adc
push
stos
and
push
lret
jno
adc
subb
hlt
adc
jbe
test
test
xchg
add
out
mov
shlb
sub
push
lods
add
or
or
enter
addb
rclb
ljmp
insb
divl
shlb
and
ja
aad
inc
cmc
roll
or
inc
in
stos
ljmp
dec
es
test
lea
adc
or
add
mov
insl
pop
inc
test
cmp
xchg
adcl
mov
or
jo
lcall
imul
mul
xchg
fidivrs
xchg
lret
xchg
adc
lods
mov
push
xorl
push
sub
aaa
inc
adc
jbe
xchg
loop
test
inc
or
mov
stos
mov
mov
xor
rclb
cmp
cmp
dec
mov
jbe
out
mov
lds
dec
xor
pop
lods
sbb
lcall
mov
rcr
push
into
vprotb
inc
test
push
imul
pusha
gs
loop,pn
lods
shlb
or
dec
inc
add
xchg
or
ds
push
push
insl
jae
push
cmp
push
add
cmp
adc
jo
push
jl
pop
hlt
mov
pop
lock
movsb
in
dec
or
rorl
jns
rorb
inc
jmp
pop
enter
aam
mov
or
cmp
mov
call
jecxz
add
adc
sub
or
sbb
insl
add
add
ret
out
pop
sub
pop
lods
xor
rcll
std
roll
fistps
jnp
mov
push
cmpsb
add
addb
and
sub
jo
adc
lods
call
push
adc
lret
mov
jl
xor
je
mov
ret
dec
inc
mov
add
push
xor
push
jecxz
sbb
xor
mov
jae
cmpsl
mov
pop
mov
inc
mov
inc
scas
mov
int3
or
cmp
push
mov
scas
mov
sub
aaa
xor
add
mov
adc
jge
xchg
add
push
push
or
add
dec
or
das
inc
push
enter
data16
push
lods
xor
jb
fmuls
push
or
fsubrs
push
roll
out
int3
into
sbbb
lods
les
pop
inc
shrb
stos
pop
rcll
lods
push
das
ljmp
subb
rcll
cmp
fs
mov
test
fldcw
cmp
mov
inc
or
xchg
aad
sbb
rolb
mov
mov
inc
rolb
gs
dec
fwait
mov
imul
in
roll
cmp
test
adc
inc
nop
ret
aas
pop
jnp
and
or
adc
fistps
dec
rolb
dec
subb
cmp
add
cmp
push
orb
decl
out
push
dec
test
fiadds
sbbl
scas
lods
mov
inc
mov
mov
sub
inc
cmpsb
cmpsb
into
mov
stc
xor
push
xor
xor
dec
pop
test
movsl
pop
push
repnz
push
and
push
push
cmpsb
inc
aad
test
fwait
xor
es
push
lret
test
mov
jno
mov
lea
idiv
imul
and
sbb
bound
addb
mov
test
xchg
orl
arpl
xchg
add
jno
mov
push
jae
aas
mov
das
sub
jo
jae
dec
add
js
arpl
inc
xor
sub
insb
push
xchg
mov
fisttpl
lret
dec
pop
and
test
add
mov
dec
add
mov
inc
inc
leave
mov
out
movsl
pushf
into
mov
and
mov
ror
fs
addb
adc
add
push
das
ss
xor
push
subb
pop
xor
inc
ja
leave
add
cmc
add
cmpsl
pop
sub
lods
mov
inc
test
loopne
movsb
cmp
leave
ficoml
or
sub
mov
and
lds
test
or
dec
xchg
loop
push
fmull
lea
movsl
xor
push
test
fwait
sub
fsts
js
shlb
jo
inc
and
andl
cmc
stos
lea
das
clc
fildll
ljmp
enter
add
add
push
pusha
push
clc
mov
cs
ljmp
xchg
out
push
mov
lods
mov
cmp
sti
inc
mov
push
andl
subb
mov
cmp
add
sub
add
movl
sbb
adc
aad
call
fistl
mov
pop
pop
cmp
andnps
aad
cmpsl
ret
fildl
repz
push
jo
jns
and
call
mov
xchg
add
inc
push
insl
ljmp
scas
mov
and
pop
rolb
test
xchg
xorb
push
fsubl
aaa
mov
aaa
add
inc
dec
cld
rolb
add
in
cmp
mov
add
jb
xor
sub
dec
inc
dec
into
stos
andb
mov
and
scas
mov
jle
loop
sbb
and
rcrb
xor
aam
add
mov
xor
push
push
adc
test
in
sbb
gs
imul
jp
inc
sbb
fisttpl
cld
sub
rcrb
push
clc
adc
jecxz
mov
sbb
sub
fisubrs
shlb
test
les
adc
sub
add
xor
fwait
inc
pop
sub
mov
and
inc
push
pop
push
adcl
lcall
shrb
push
call
dec
inc
pop
aam
or
add
inc
push
rcrl
add
cwtl
mov
jle
jecxz
pop
mov
lahf
xlat
loop
ret
testb
mov
repnz
push
and
cmpsb
jge
add
sub
out
and
cmc
mov
dec
hlt
inc
mov
aam
jbe
mov
inc
stos
sub
movsl
fcom
push
mov
data16
std
mov
add
ljmp
aad
push
and
add
imul
mov
add
pop
ljmp
fldt
mov
es
out
mov
subb
sub
inc
imul
cmpsb
and
mov
outsb
cmp
cmpsl
into
add
in
and
xor
mov
add
lcall
push
aad
jmp
and
inc
into
push
sub
push
aad
jnp
xor
inc
mov
mov
add
or
nop
in
inc
stos
sub
mov
push
xchg
addr16
stos
insl
mov
pop
pop
push
fst
add
pushf
cmp
aam
sbb
mov
data16
ds
int
or
sub
test
add
xchg
les
adc
shlb
push
inc
sub
adc
popl
int
scas
std
jmp
std
pusha
xchg
stos
sbb
inc
inc
pop
push
stos
sub
xor
inc
mov
push
xor
gs
in
push
mov
or
das
jp
sub
sub
cmp
test
push
pop
or
pusha
adcl
pop
lods
or
pop
sbb
fildl
cmp
bound
addb
jne
pop
lods
mov
jp
ja
push
xor
rorl
sti
rclb
pushf
sahf
aam
lods
jg
xchg
add
arpl
in
push
pop
insb
rclb
push
xchg
fisubrl
and
lret
adc
nop
inc
adc
das
das
push
jo
jge
or
dec
add
or
lea
adc
or
lret
adc
pop
aad
adc
add
push
into
mov
adc
pop
les
loopne
movl
rep
inc
adc
inc
xor
xchg
sub
push
cwtl
push
in
mov
mov
or
sbb
pop
mov
insl
icebp
adc
push
pop
add
lcall
popa
pop
push
icebp
in
xor
mov
out
nopl
cwtl
shlb
call
rolb
fsubrl
jp
rclb
decb
pop
xor
dec
mov
test
push
mov
dec
push
repnz
mov
or
mov
rolb
xchg
sub
xor
mull
ss
insl
psrlw
mov
adc
adc
pusha
push
add
xchg
scas
ret
repnz
scas
call
or
clc
fsubrl
push
cmp
and
stos
inc
sbb
push
push
sbb
fcoms
lock
mov
shlb
jne
push
scas
je
outsb
mov
fisubrl
lcall
cmp
das
mov
cmp
or
aas
inc
xor
and
lods
outsl
in
and
loopne
ficoms
pop
mov
fs
es
shlb
ljmp
add
mov
pop
mov
push
js
int
mov
call
add
and
adc
push
push
inc
int3
scas
sbb
adc
mov
adc
xor
cmc
add
mov
out
lret
push
pop
mov
and
mov
add
add
pusha
mov
inc
mov
pop
nop
insl
sbb
dec
mov
cld
adc
push
push
xchg
sub
std
or
jbe
orl
push
shlb
sbb
orl
fisttpll
xor
push
int3
popf
push
add
fsubs
mov
mov
and
and
cld
xor
call
or
adc
pop
or
mov
arpl
cmp
ficompl
mov
jle
pop
push
or
push
adc
fimuls
mov
in
push
xor
pushf
add
mov
mov
mov
or
add
pop
sub
push
pop
nop
leave
and
adc
cli
xlat
dec
add
add
inc
or
je
jp
mov
rorb
jne
fs
sbbl
jb
sub
pusha
loop
sub
sbb
inc
add
or
outsb
add
jl
jo
fsubrl
xchg
add
mov
jo
sub
cld
mov
addb
outsl
sub
adc
and
xor
in
cmp
hlt
add
js
dec
les
push
or
lock
or
jecxz
push
repnz
or
inc
jle
adc
add
pusha
adc
or
xor
icebp
adc
or
pop
cmp
mov
jno
push
sbb
or
int3
cli
fildll
push
sar
xchg
subl
push
lds
mov
mov
pusha
push
mov
adc
xlat
mov
mov
mov
stc
jg
push
jb
mov
sub
push
cmp
and
pushf
xor
outsb
add
and
and
clc
mov
or
insb
xor
dec
movl
add
or
add
mov
push
and
or
movsb
xchg
ret
test
lret
xchg
stos
std
mov
mov
les
sbbl
add
std
adc
mov
cmpb
pop
push
push
mov
inc
cmc
xor
mov
arpl
lods
das
xor
inc
lods
dec
mov
push
sbb
in
jae
aam
mov
mov
lods
add
add
sbb
xor
cmp
movsl
mov
add
fisubl
pop
scas
test
push
inc
movsb
pop
fs
sub
test
cmp
aas
jbe
fisttpl
mov
cmpsb
mov
or
and
clc
add
iret
lret
mov
inc
insb
sbb
adc
lret
aad
add
inc
xchg
imul
enter
cs
lods
lret
sub
mov
and
hlt
and
cmp
aad
push
sub
push
dec
mov
imul
sub
and
jns
push
mov
insl
clc
and
shlb
sbbb
push
loop,pn
call
cld
ret
push
subb
loopne
adc
js
and
and
jmp
and
push
inc
test
mov
or
mov
lock
test
stos
push
lret
inc
outsb
mov
inc
mov
pop
inc
sub
inc
inc
movsl
jno
or
mov
or
pop
lcall
adc
adc
dec
les
filds
mov
sub
add
lods
or
jns
mov
adc
add
aas
std
imul
adc
mov
rcrl
xchg
insl
inc
add
sub
dec
push
popa
mov
cmp
test
mov
fxch
inc
adc
or
ret
mov
and
ficompl
push
push
push
imul
jno
sbb
shrl
mov
mov
arpl
push
inc
data16
sbb
test
mov
or
ret
and
push
nop
sub
notl
push
adc
mov
add
adcb
stos
repnz
add
filds
sbbb
mov
rolb
and
jb
sbb
sub
jbe
mov
push
aad
das
inc
arpl
push
int3
scas
movsl
add
mov
mov
push
mov
inc
push
add
ljmp
aas
addb
mov
push
adc
roll
inc
mov
iret
pusha
clc
aad
sub
bound
out
and
ret
push
mov
mov
inc
js
pop
add
push
cmpsb
push
lds
es
adc
mov
pop
push
test
into
dec
and
lods
xchg
and
push
mov
push
dec
push
or
fwait
sub
dec
sbb
fiaddl
testl
jno
mov
subl
push
xchg
sbbb
adc
test
mov
rcll
sub
mov
jns
jg
ja
aam
addb
push
sbb
push
xchg
jb
adc
mov
push
jb
je
cmp
bound
cmp
push
push
shlb
or
aaa
mov
sbb
jno
push
lea
mov
lods
push
push
mov
call
adcb
int
pusha
sub
mov
adc
dec
lods
nop
lahf
push
rcr
push
sbb
int
pop
dec
shlb
sbbb
pop
sub
sub
add
aaa
or
stos
aam
cmp
xor
adc
and
les
stos
xor
xchg
shll
push
ret
outsb
jmp
movsl
push
scas
arpl
insb
loop
and
cs
pop
jg
xchg
xchg
inc
mov
test
or
bound
pop
sbb
mov
sub
add
mov
mov
lcall
sub
dec
cmpsl
push
fisttpl
scas
dec
lea
imul
mov
mov
inc
push
int
fisttpll
lods
sbb
test
mov
leave
xchg
imul
push
xor
sbb
mov
mov
stos
stos
sbb
push
lret
sbb
fwait
lret
pop
adcb
in
es
aad
test
mov
cmp
mov
mov
jge
aad
mov
add
inc
scas
cmp
stos
mov
adc
ret
imul
or
adc
rcrb
sub
xor
push
test
or
cmp
and
test
mov
addb
aaa
fs
xlat
divl
sbb
add
ja
adc
xor
cmp
mov
fucomi
fmull
adc
push
push
aam
repz
roll
add
sub
pop
cmpsb
mov
orl
mov
add
hlt
xor
inc
mov
add
aam
loop
aad
mov
in
or
sbb
mov
test
mov
push
push
mov
or
in
ret
sbb
push
inc
add
dec
push
mov
pop
or
or
pop
add
adc
subb
out
pcmpgtw
test
sbb
in
sbb
and
lods
adc
mov
sbb
xchg
addl
test
pop
inc
mov
push
shll
mov
mov
jecxz
xchg
sub
or
push
jno
cltd
jmp
or
mov
sbb
divl
push
mov
lods
push
xchg
xchg
mov
push
mov
xor
xchg
mov
mov
lea
push
push
and
gs
mov
iret
call
lahf
and
xlat
sub
push
mov
orl
jb
xchg
subb
mov
insl
mov
out
mov
push
imul
push
mov
das
fisttpl
mov
leave
adc
adc
mov
sbb
es
adc
add
out
cmp
sub
add
dec
rorl
addb
jae
xor
push
push
push
lods
or
shll
lea
test
imul
addb
bound
aam
xchg
mov
add
fldenv
mov
xchg
mov
inc
adc
out
dec
sub
inc
xchg
int3
mov
xchg
lods
fs
mov
fistpl
jno
into
stos
xor
rcr
fmul
push
xor
inc
xchg
mov
mov
adc
outsb
jg
push
sub
sub
push
pop
mov
test
loop
sub
or
in
push
movsl
sub
pop
mov
xor
inc
mov
mov
mov
sub
bound
push
cwtl
jne
movsl
inc
inc
mov
jbe
stos
imul
imul
loopne
dec
mov
cld
js
push
push
leave
call
sbbb
repz
inc
and
aad
loopne
stos
mov
sbb
aad
inc
add
add
sub
push
movsl
sub
test
ljmp
rcrb
push
add
inc
mov
pop
mov
xchg
mov
mov
xor
push
ret
cmp
pop
add
ret
or
inc
rcrl
notl
mov
push
sub
daa
mov
adc
pop
cmp
sub
mov
aad
cmp
nop
jmp
add
js
mov
mov
inc
jne
inc
mov
lret
lods
or
mov
push
sbb
movsb
pop
xor
aam
lods
pusha
leave
movsl
xchg
xor
fiaddl
repnz
pop
je
dec
mov
fs
aas
gs
jb
adc
mov
dec
mov
inc
or
in
push
imul
lock
hlt
mov
aas
xchg
ds
loop
nop
pushf
pop
mov
cld
ja
inc
and
xchg
into
mov
xchg
test
lods
and
push
outsb
lods
mov
rcr
sahf
jmp
test
push
push
imul
pop
movsl
push
stos
imul
add
aad
sbb
into
repnz
pop
lret
insl
cwtl
ret
subl
and
mov
aaa
xor
xchg
stos
push
popa
stc
daa
xchg
cmc
hlt
stos
push
jno
popf
push
xorb
arpl
addl
insb
lods
xchg
pop
xchg
pop
mov
sbb
xchg
popf
out
iret
xchg
inc
xchg
hlt
gs
pop
mov
sub
add
cmp
dec
pop
lret
jl
mov
and
hlt
imul
mov
mov
adc
rcrb
mov
and
in
jbe
inc
or
jg
sub
push
xchg
out
lods
pop
mov
lret
inc
test
sbb
inc
imul
fcomps
lea
outsb
sub
das
mov
enter
subb
js
cltd
push
mov
dec
jecxz
xor
sbb
imul
sub
or
cmc
mov
pop
stos
lret
movsl
push
add
les
mov
fbld
lods
xor
mov
movsl
aam
pop
mov
adc
push
test
add
add
xor
test
andl
in
ret
mov
fldt
lcall
jb
fs
pop
mov
insb
adcb
ret
ret
outsl
adc
push
sbb
stos
or
push
add
mov
push
or
dec
filds
call
mov
dec
sbb
xchg
sub
shlb
mov
adc
scas
stos
shll
and
cli
mov
push
inc
test
xor
mov
dec
mov
sub
lret
test
xor
inc
dec
inc
stos
push
push
test
mov
cmp
testl
mov
data16
sbb
aam
xchg
and
and
stos
mov
mov
test
filds
mov
and
aaa
repnz
insl
push
mov
cs
inc
rcll
inc
lea
test
dec
roll
pop
xchg
lcall
jmp
add
add
lods
adc
andl
mulb
pop
imul
ja
inc
sbbb
testl
cmp
shlb
jmp
add
jo
sbb
ret
adc
gs
das
enter
imul
negl
sub
mov
ss
or
lods
inc
cmp
into
adc
orl
lods
aam
or
js
movsl
jp
stos
mov
rorb
push
test
jecxz
or
xchg
mov
out
fimull
scas
adc
sub
lock
fimull
and
mov
xor
ret
push
cmc
pop
jb
jo
and
pop
test
mov
push
aam
xor
push
cltd
bound
test
push
ljmp
repnz
fsubl
sbb
add
or
pop
push
dec
leave
inc
dec
xor
push
mov
push
dec
sub
adc
not
pop
add
shlb
sti
mov
sti
pop
sbb
pop
aas
scas
xchg
in
lret
sub
andl
jns
rcl
test
das
add
lret
das
inc
movsl
enterw
clc
sbb
shrb
sbb
sbb
stos
icebp
push
inc
ljmp
pop
sbb
cmpb
push
cmpsl
outsb
and
data16
shrb
aad
cmp
push
xorl
lods
pop
pop
sbb
jne
cmp
int
add
jg
pop
push
lods
scas
cmp
push
push
testl
cmp
or
lods
inc
test
and
aad
mov
sbb
rorb
push
sub
add
push
or
fiaddl
sbbb
inc
les
sub
ja
es
nop
lods
enter
push
lods
sbb
rorb
aad
push
test
sbb
shrb
push
adc
mov
add
aad
dec
lods
adc
sbb
rcrb
stc
in
scas
mov
clc
imul
shrl
pop
mov
loopne
mov
data16
push
lret
and
sub
or
and
mov
mov
pushf
testl
mov
or
sub
jae
subl
inc
test
add
into
aad
sub
lods
inc
add
movsb
jl
or
add
mov
mov
inc
adc
mov
dec
daa
call
pop
push
mov
sarl
inc
rcl
and
aam
xor
inc
imul
jne
inc
or
adc
aaa
push
mov
xchg
aam
mov
and
mov
sbb
imul
push
mov
dec
sbb
or
add
shll
aad
add
push
arpl
inc
leave
push
xor
fnstenv
mov
add
mov
mov
jno
inc
push
push
xchg
xchg
push
push
mov
sub
xor
jg
jl
repz
adc
xor
xor
aaa
xchg
pop
addl
cmpsb
xchg
rcl
sub
pop
ss
push
test
sbb
add
jno
mov
push
sub
add
inc
pop
test
xchg
inc
add
sbb
mov
pop
xorl
xor
add
xchg
js
sub
add
adc
xor
sbb
cld
imul
sbb
add
add
or
mov
ret
inc
daa
push
xor
fidivrl
push
add
cmp
lods
test
sub
sub
push
jg
mov
adc
mov
subb
push
push
mov
mov
es
repz
sahf
stos
xchg
xor
push
add
test
nop
lret
mov
pushf
mov
or
cmp
das
enter
mov
and
cld
jg
inc
imul
mov
rcll
iret
jbe
mov
stc
and
outsl
shrb
insl
mov
imul
mov
dec
push
aad
jb
mov
lock
cmpsb
sub
cltd
sbb
das
and
shlb
xchg
push
adc
push
mov
mov
fsubrs
adc
sbb
inc
push
cwtl
add
clc
pop
addl
aad
mov
pop
loop
mov
sbb
mov
inc
add
or
mov
cmpsl
and
push
lods
data16
push
lods
sub
dec
push
inc
sbb
xor
test
imul
sbb
jg
pop
xchg
pop
stos
pop
sbb
dec
mov
push
loopne
mov
push
pop
and
adc
je
pop
jno
sbb
divb
pop
stos
fisubl
mov
mov
pop
xor
push
adc
add
mov
int
ret
mov
pop
imul
ret
sbb
and
or
and
inc
pusha
stos
aam
xchg
stos
add
lds
mov
das
mov
xchg
inc
sti
pushf
movsl
push
movsl
push
mov
pop
mov
ret
add
aam
mov
imul
fidivl
mov
mov
and
add
jb
imul
data16
mov
dec
adc
xor
in
and
dec
aaa
das
sub
lods
fstpl
add
inc
daa
sbb
ss
sub
imul
sbb
sti
or
pop
test
xchg
inc
push
cmp
mov
pop
outsb
idivl
mov
and
sbb
xor
xchg
loopne
sub
push
pop
inc
sub
push
stos
push
inc
mov
adc
add
jns
or
les
es
scas
mov
arpl
es
xor
popa
cmpsl
inc
lods
adc
add
mov
nop
jp
cmp
cmc
xchg
pop
imul
or
inc
movsl
test
addr16
pop
shlb
push
sub
mov
adc
sub
data16
pop
insb
sbb
cmp
adc
and
mov
sub
les
int3
sub
pop
push
mov
sub
pop
movsl
jecxz
hlt
xchg
fisubl
pop
jae
loop
mov
dec
or
inc
xor
sub
mov
das
or
ret
push
outsb
xor
popa
or
icebp
test
xor
shrl
adc
mov
mov
inc
pop
testl
mov
mov
mov
outsb
or
add
aad
push
loopne
xchg
movsl
and
shrl
pop
cmpsb
incl
push
popa
xor
lret
sahf
sub
add
fdivl
push
test
push
mov
lcall
inc
imul
push
sbb
mov
mov
rcl
pop
jo
push
and
mov
xor
adc
out
xchg
movsl
fcoms
pop
adc
fisttps
inc
or
mov
mov
movsl
push
mov
pop
xor
data16
xchg
sub
mov
bound
pop
outsb
andl
or
push
or
rcll
xor
inc
xchg
add
inc
adc
fs
sub
add
int
add
sbb
sbb
adc
or
sub
mov
mov
test
data16
adc
mov
loop
mov
lock
mov
jb
movsl
pop
mov
jb
pop
es
sub
xchg
mov
cmp
dec
dec
shlb
jle
insl
sbb
dec
cmpsb
mov
pushf
imul
inc
test
add
inc
sub
or
adc
add
mov
ret
add
sbb
adc
shl
push
inc
aad
mov
add
lret
inc
and
int
or
shll
mov
mov
aam
xchg
ret
lret
add
push
cltd
and
pop
mov
les
call
scas
cmp
aaa
lock
into
and
stos
addb
and
xor
popa
mov
andb
add
inc
jae
mov
xor
fsubl
and
push
jbe
roll
test
icebp
ret
test
add
mov
adc
inc
leave
cmpsl
sbb
cli
outsl
mov
daa
ljmp
inc
jne
or
xor
sbb
mov
mov
nop
dec
adcl
cli
and
xchg
inc
adc
mov
inc
dec
add
add
cmp
dec
push
add
adc
adc
or
ja
mov
repnz
mov
std
adc
mov
adc
dec
aad
lock
and
mov
adc
jne
in
ss
orl
aas
cmpsb
pop
lock
ja
mov
mov
dec
insb
mov
push
push
jo
inc
add
jne
pop
in
or
dec
mov
pop
stos
fimuls
xchg
add
xor
loopne
push
ss
mov
mov
xor
mov
shll
loopne
cltd
daa
sbb
stc
xor
push
cs
or
jbe
adc
sbb
mov
movsb
test
shl
ret
pop
xor
xor
mov
pop
or
daa
and
call
add
call
push
add
pop
inc
add
and
sbb
adc
push
aas
ret
testb
gs
ja
jns
cmc
jae
pop
jb
inc
test
push
int3
sub
pop
or
lret
daa
cmp
sub
cmp
sub
xchg
push
sbb
ss
out
or
or
inc
mov
mov
ljmp
push
daa
pop
mov
out
cmpsl
mov
orb
fldt
or
es
out
ja
imul
test
sub
inc
jge
add
sub
push
push
xchg
xchg
xor
ret
cmp
xchg
jb
ss
out
add
aad
pop
insl
dec
and
pop
sbb
adc
flds
arpl
shl
and
xor
add
repnz
adc
pusha
orb
cltd
sbb
sahf
push
out
push
icebp
aaa
adc
or
and
adc
jmp
mov
mov
shrl
and
or
fwait
push
lods
cmp
inc
adc
add
scas
or
add
rcrl
add
jge
loop
insb
repz
xor
int3
cs
shlb
popf
sbb
out
pop
inc
aaa
or
push
mov
insb
sbb
pusha
gs
mov
pop
shll
pop
cmp
and
cli
iret
push
or
sbb
addl
out
in
out
sbb
ljmp
push
mov
cli
dec
sbb
mov
push
test
pusha
imul
fcmovbe
sahf
jb
inc
xchg
fstps
cld
sub
into
or
mov
pusha
or
sbb
movsb
inc
lahf
cmpsl
lods
pop
mov
movsb
dec
mov
inc
pusha
daa
jmp
cs
loope
pop
test
sbb
rclb
sbb
mov
sbb
iret
cmp
movb
pop
popf
ret
xchg
in
or
pop
cmpsl
enter
cmpsl
mov
sbb
and
ret
jbe
xor
cmp
push
fsts
fcmovb
adc
movsb
int
and
clc
or
push
aad
mov
subl
and
mov
mov
insb
add
test
adc
jmp
add
mov
jp
adc
insb
sbb
cmp
and
add
lahf
and
fsubs
add
dec
int3
nop
sub
imul
adc
cmovle
fmul
inc
shlb
or
flds
jle
mov
sbb
cld
lock
test
in
jns
scas
sbb
and
repnz
fmull
and
mov
jmp
sub
sbb
inc
cld
lahf
dec
mov
aad
mov
and
mov
repz
jmp
cli
ljmp
cmp
mov
or
sbb
mov
xchg
insl
test
lcall
ja
jg
pop
xor
mov
repnz
xor
arpl
cmp
add
xchg
add
ljmp
fnsave
xchg
mov
fiadds
les
mov
sbb
inc
add
imul
cld
movsb
or
cmp
pusha
adc
inc
pop
rorb
in
xor
fmuls
and
push
leave
sub
out
sub
xor
or
xor
faddl
lods
pop
jo
imul
and
push
sub
mov
shlb
enter
test
mov
test
sub
shlb
xor
mov
and
lods
push
pop
adc
and
lahf
xor
jecxz
cmpsb
lea
adc
cltd
ret
ret
rorl
mov
jbe
xchg
push
rolb
stos
jecxz
inc
xor
out
cmc
nop
add
adc
add
dec
iret
lock
push
ds
sbb
outsl
push
sub
sarb
repz
repz
add
cmp
xor
aas
rcll
movups
dec
jae
add
push
lret
inc
cwtl
dec
ss
faddl
xlat
cmp
loopne
iret
movsb
imul
jb
push
insb
rclb
mov
scas
and
add
or
inc
aas
je
aad
mov
aas
jb
fsubl
test
and
jmp
mov
cmp
inc
je
cmp
lahf
push
je
xorb
adc
sbb
addl
cmp
test
ja
add
cmpsb
and
lret
add
sub
rclb
daa
adc
mov
inc
mov
add
bound
adc
aas
dec
int3
data16
jl
adc
sbb
push
push
shlb
fcompl
dec
enter
inc
add
mov
sbb
mov
sti
in
scas
in
jecxz
or
mov
sub
push
lock
mov
or
jg
fists
add
imul
out
fsubl
mov
fmuls
daa
xchg
mov
dec
cmp
aas
sbbl
xchg
and
add
dec
movnti
inc
push
xchg
mov
inc
inc
pushf
push
and
fistps
int
adc
mov
stos
test
add
and
mov
inc
push
out
test
lods
fsts
jl
icebp
push
lahf
shlb
in
loop
imul
inc
sbb
call
jl
inc
loop
ds
fsts
mov
icebp
jbe
leave
or
imul
adc
mov
adcb
ljmp
dec
jb
aad
pop
add
xor
and
sahf
cmpsb
sub
out
add
jo
stos
mov
icebp
cmp
xor
push
jbe
adc
push
or
loop
cli
jo
sbb
int
inc
inc
loopne
cmp
ds
fnstenv
test
ret
sub
or
js
subl
dec
into
sbb
sbb
daa
push
or
and
push
pop
cltd
ja
pop
xchg
jl
insb
loopne
adc
ja
popf
cmc
sub
and
shll
xlat
daa
xchg
and
xchg
ret
or
adc
cld
rol
push
popa
sarb
and
js
cmp
jae
mov
inc
icebp
adc
idivl
and
push
bound
out
xchg
ltr
das
aam
add
fcmovbe
rcrl
lock
int3
adc
jg
xchg
sbb
push
adc
cwtl
sbb
fldenv
das
add
mov
and
js
loop
leave
in
stos
fcoms
and
add
stos
or
les
idivb
jmp
out
push
push
push
mov
out
bnd
icebp
jnp
xchg
data16
iret
aam
sbb
xchg
sbb
add
pop
mov
fiaddl
iret
repnz
fimull
or
add
xorl
dec
inc
fistpll
adc
mov
fisubrs
arpl
inc
add
sub
pop
mov
lds
mov
ffreep
inc
and
pop
sbb
pusha
dec
in
mov
cltd
cmp
hlt
sarl
xor
push
mov
imulb
cmpsb
xchg
mov
adc
lret
dec
int3
sbb
sbb
or
das
and
push
xor
mov
daa
popf
inc
arpl
and
jne
pop
xchg
push
jns
or
inc
mov
test
fcoml
pop
pushf
dec
gs
stc
test
call
stos
aaa
in
call
fisubrl
adc
mov
jne
js
mov
mull
mov
imul
push
push
pop
or
xor
push
sahf
jae
loopne
xchg
cmp
imul
pop
fmuls
dec
daa
xor
cmp
inc
sub
shr
jo
and
filds
aas
mov
fstps
push
add
sbb
or
ja
sbb
cmp
add
xor
shrb
aaa
imul
jg
cli
sub
test
fwait
sub
popa
fidivs
aas
and
jle
nop
pop
ret
call
push
test
inc
sbb
arpl
and
pop
insb
icebp
stos
or
or
or
lcall
mov
outsb
mov
ss
dec
inc
inc
hlt
daa
xor
push
enter
adc
andl
jae
into
push
add
sbb
iret
add
or
test
ss
jae
test
or
xchg
xor
lods
ljmp
addr16
inc
mov
jb
and
and
insl
test
pop
or
jmp
testb
ret
cs
adc
dec
dec
pop
jp
icebp
pop
sbb
sbb
cmp
out
dec
push
faddl
inc
xor
into
daa
cmp
sbb
ret
jmp
out
sub
push
sub
sub
xor
and
rclb
push
or
mov
lock
xor
fs
xchg
aam
add
cmpl
push
sub
jmp
out
add
js
or
cmpsb
adc
xchg
inc
jmp
and
jmp
cs
addb
inc
movsb
testl
xor
daa
sub
adc
mov
aad
sahf
lret
pop
loop
or
lock
mov
jae
insl
fldt
mulb
dec
sarl
repnz
push
mov
insb
sbb
xor
ss
push
cmp
dec
sarl
lock
je
push
push
add
andl
jnp
inc
ret
add
addr16
cmp
inc
push
shlb
fucomip
add
fsubrl
outsl
ja
add
orl
jecxz
fildl
std
pop
idivl
jge
inc
jbe
les
cmpb
sbb
add
insb
inc
or
fildll
jbe
into
loope
dec
xor
xchg
movsb
js
sub
mov
jp
nop
dec
aam
add
xchg
mov
inc
sbb
ret
sub
pusha
flds
push
mov
sti
sbb
sahf
pop
leave
rorl
cmpsl
pcmpeqb
arpl
addl
movsb
mov
jmp
sbb
sbb
testb
es
mov
stos
push
pop
stc
fsubr
mov
int3
arpl
lahf
mov
push
add
lods
pop
mov
pop
adc
stc
rorl
and
cmp
cmpsl
ret
js
adc
mov
pushf
pop
nop
or
push
mov
cmc
iret
or
add
fiadds
scas
js
push
pop
push
ret
cmp
cld
sub
sbb
or
sbb
jge
test
mov
sub
adc
mov
test
dec
lds
lds
inc
insl
cmp
je
push
or
notl
add
daa
lods
enter
daa
test
insb
push
xchg
xor
testb
cmp
add
dec
daa
sub
xor
add
sub
cmp
mov
dec
enter
sbb
or
out
bound
into
mov
pop
lcall
and
iret
push
ret
mov
and
jb
insb
bound
test
decb
inc
or
es
jne
adc
mov
push
adc
icebp
shl
sbb
dec
dec
jb
ret
sti
jbe
xchg
jp
push
lcall
pop
enter
bound
xor
add
jg
xor
push
lds
mov
mov
push
imul
jno
mov
andl
add
adc
xlat
popf
pusha
or
sub
imul
adc
fidivs
pop
or
daa
pusha
inc
cmpsl
call
gs
mov
and
sub
je
shlb
mov
fidivrl
clc
xor
shlb
shlb
adc
cwtl
ljmp
jno
jmp
cmp
lar
pop
add
je
sbb
inc
xor
test
push
shll
test
jo
push
add
fimull
jmp
cmp
jae
lds
add
add
and
ret
es
dec
dec
push
cmp
jbe
jae
mov
push
call
fcomp
les
add
loop
xchg
sub
rolb
shrl
jge
sbb
dec
loopne
xchg
addl
add
inc
ret
call
dec
add
pop
pop
stos
test
adc
sbb
test
dec
sahf
rcrl
jo
adc
lock
ds
lea
add
jnp
add
sar
and
mov
movsb
sub
push
iret
push
xor
push
inc
pop
jmp
cmp
xor
daa
inc
sub
mov
jno
cld
add
pop
pushf
xchg
xchg
int
inc
cmpsl
add
int
inc
gs
js
lea
mov
dec
xor
xor
mov
nop
sbb
sbb
cmp
adc
test
adc
mov
xor
lret
or
sbb
test
inc
jno
mov
mov
pusha
popa
popa
pop
mov
lock
notb
xlat
ds
dec
xor
cmp
arpl
inc
jbe
inc
stc
push
lret
add
inc
sbb
cwtl
push
adc
fmuls
jecxz
bound
jns
or
inc
xor
or
push
sti
push
movsb
and
rcr
popa
rcl
or
popf
sbbb
test
lods
add
or
mov
adc
insb
mov
addr16
movsb
add
out
and
adc
xchg
adc
test
aam
add
test
test
cmpsb
imul
jg
jge
mov
fiaddl
or
aas
mov
mov
andb
push
push
out
addr16
mov
or
jnp
push
pop
xchg
push
popa
pop
dec
pop
or
jmp
dec
add
push
mov
mov
out
add
cld
jecxz
test
enter
or
cld
adc
lds
jb
dec
xchg
sbb
scas
jmp
testl
push
iret
inc
xor
xchg
jecxz
push
ficomps
jne
sub
cmc
inc
outsl
fbstp
testb
add
mov
lock
push
push
mov
sbb
xor
jge
jmp
cmp
push
add
push
inc
test
nop
sub
sub
test
in
negl
jecxz
or
aam
fsts
inc
push
loopne
pusha
sub
dec
adc
xor
shlb
push
xchg
or
popa
push
xor
fnstenv
rcrl
sahf
sbb
ljmp
loopne
sub
test
in
adc
cmc
push
cmp
mov
pusha
sbb
and
out
xchg
lahf
push
scas
or
cmp
jae
jmp
inc
std
adc
sbb
sarb
int3
mov
mov
test
adc
mov
cmp
add
mov
cli
sbb
cld
adc
adc
jmp
aam
sbb
lock
int3
adc
pop
fistpl
pop
lds
fildll
cmp
xor
lret
jno
prefetch
test
adc
mov
lods
push
loop
pop
or
movsb
lods
mov
sbb
cmp
cmc
es
xlat
orb
jp
mov
or
sub
xorb
call
cmpsl
inc
inc
loopne
jnp
and
roll
jo
sahf
jp
jne
out
shl
lds
jnp
jnp
int3
lcall
loop
jg
insl
cli
sub
push
or
out
sets
addb
mov
adc
add
fsubp
movsl
pop
bound
sub
adc
fdivrl
mov
test
add
xor
or
test
mov
xchg
dec
das
andb
inc
movsb
sbb
cmpsb
int3
aam
sarl
inc
add
loop
xor
sti
scas
push
scas
pop
mov
jp
mov
je
mov
cs
std
dec
cmp
add
and
pop
insl
fstps
mov
adc
sub
scas
stos
inc
ffree
adc
out
add
out
push
cltd
pop
fsubrs
add
gs
and
inc
mov
testl
into
mov
cli
xchg
mov
hlt
jg
mov
ljmp
mov
int3
fsubl
outsl
aad
punpcklbw
pop
aad
sub
jno
adc
ljmp
loop
jnp
push
jp
int
cltd
or
clc
sub
sub
loopne
mov
sbb
add
cmp
test
pop
clc
sbb
or
fcomps
add
and
dec
rolb
add
loopne
ss
sar
or
push
test
jmp
mov
jne
mov
ljmp
decl
xor
fldcw
mov
mov
adc
inc
and
insl
jnp
lret
xor
add
lahf
imul
mov
bound
jle
fsubr
add
jo
subl
shlb
jae
movsb
jns
or
cltd
and
daa
dec
pmuludq
xchg
mov
out
aad
idiv
sub
mov
mov
pusha
add
cld
push
shl
lods
rcrl
adc
cltd
fwait
cwtl
cmp
xor
adc
and
dec
sbb
rorb
in
outsl
enter
das
mov
push
mov
lcall
inc
jno
push
inc
rcll
mov
sbb
in
adc
xchg
cwtl
leave
add
rcr
push
mov
xchg
ret
xor
inc
dec
adc
pop
bound
sub
add
shll
jbe
test
loop
pop
and
sbb
in
add
cmc
adc
mov
loopw
adc
test
ret
push
add
call
into
gs
sbb
and
mov
add
add
cmc
mov
sbb
dec
adc
push
xor
push
or
mov
cmc
xlat
int
push
and
stos
or
sbb
add
stos
add
sbb
push
mov
push
inc
and
add
add
jo
sub
aad
mov
jno
hlt
push
sub
mov
xchg
pushf
push
and
pop
lds
sub
pop
add
pushf
outsb
test
movsl
imul
adc
push
mov
daa
push
loopne
or
and
adc
xor
mov
lea
aad
xor
push
lea
jns
pop
inc
mov
movsl
mov
or
mov
mov
add
cmp
push
imul
ficoml
lods
mov
mov
data16
adc
insl
fnsave
outsb
stc
lock
jmp
add
push
test
cmpsl
outsb
adc
movsl
inc
inc
hlt
das
inc
imul
add
ror
in
es
or
pop
push
sbb
push
inc
xor
data16
inc
pop
sub
into
xor
cmc
push
shl
mov
stos
inc
imul
bound
add
cmp
das
das
sbb
sub
push
dec
or
mov
or
adc
movsl
lahf
add
and
jmp
or
insl
popf
movsl
jne
mov
test
aaa
or
mov
popl
das
sub
cs
or
mov
or
adc
sub
jne
fimull
push
outsl
pusha
add
xlat
add
jg
cmpsl
adc
sbb
sub
inc
and
mov
mov
sub
cmp
cltd
push
and
xor
inc
adc
xor
ficoml
adc
adc
in
pop
cwtl
lcall
xor
dec
repz
sub
mov
cmpsb
lea
pop
sub
mov
leave
and
outsb
and
pop
sahf
sbb
inc
subl
mov
pop
negl
push
test
mov
out
mov
andb
pop
lods
insl
or
outsb
imul
cmp
fwait
ss
fcmovne
test
push
rorl
cld
mov
pushf
mov
push
sbb
cmp
lods
push
imul
ljmp
out
push
mov
inc
lods
mov
lods
pop
mov
ret
xor
outsb
aaa
pop
push
stos
xchg
subb
icebp
mov
push
and
mov
xor
rcrb
outsb
jmp
ret
mov
dec
test
dec
cmpsb
fs
dec
scas
sub
mov
inc
dec
add
repnz
xchg
add
or
inc
aaa
pop
rolb
sbb
cmp
inc
mov
insb
mov
add
mov
mov
inc
xchg
pop
mov
push
sub
mov
ljmp
fdivr
daa
jg
dec
test
test
std
insb
testl
inc
mov
push
jne
and
nop
cmp
mov
push
adc
out
inc
adc
jno
sub
sbb
cmp
and
in
cwtl
fistl
inc
mov
adc
push
or
mov
adc
xchg
pop
js
mov
lcall
sub
adc
sub
lods
mov
sub
ror
movsl
aad
adc
js
addl
mov
cmpsb
loopne
push
mov
rolb
adc
inc
fistpll
adc
movsl
test
mov
das
xchg
inc
test
and
inc
push
mov
xchg
dec
push
sub
or
adc
pop
shlb
ds
testl
push
movl
push
xchg
outsl
insl
mov
fnsetpm(287
inc
mov
imul
xor
and
sbb
stos
pop
push
mov
ret
xlat
mov
sbb
push
stos
push
xor
dec
movsl
pop
lods
mov
dec
fs
jp
inc
sub
adc
inc
scas
mov
dec
gs
or
dec
or
in
loop
mov
mov
das
xchg
pop
iret
das
add
mov
add
mov
push
cmp
dec
pusha
aaa
aaa
iret
sbb
test
mov
sub
test
xchg
pop
inc
dec
push
in
mov
push
push
loop
inc
mov
repz
imul
sbb
fistps
mov
cli
cmp
fwait
or
popa
xor
insb
cs
cs
adc
lods
mov
cmp
or
cltd
pop
imul
cmp
push
inc
dec
lods
sub
pop
xchg
in
adc
mov
pushf
cmp
pop
cwtl
aam
loopne
sub
andb
push
roll
arpl
das
and
shlb
sbb
adc
mov
outsb
mov
xor
sub
push
mov
pop
xchg
or
lret
xchg
mov
jmp
cmp
push
test
mov
ljmp
rcl
sub
push
push
jns
xchg
imul
pop
bound
mov
fstp
jo
lcall
shrl
lods
repz
into
dec
movsl
pusha
mov
adc
sub
pop
or
adc
add
dec
sub
adc
jb
mov
ss
inc
test
rcrb
int
inc
aad
sbbb
std
out
test
sub
sub
push
add
test
notl
dec
lea
inc
lods
push
orb
cmp
mov
xchg
stos
adc
and
movsl
push
xor
or
pushf
xchg
add
mov
xor
cmp
push
addb
and
mov
mov
mov
sbb
es
ficoml
add
dec
mov
lods
mov
push
fsubp
mov
inc
lea
or
or
sub
lahf
or
adc
loope
mov
andb
pop
jmp
sbb
lods
push
imul
jge
dec
add
es
outsb
push
adc
pop
clc
pop
int
xor
pop
xlat
mov
mov
mov
push
jg
jp
mov
aas
adc
mov
dec
mov
jnp
aad
scas
inc
dec
push
xor
adcl
in
inc
cmp
add
adc
push
pop
add
imul
sbb
add
and
loop
ret
or
andl
lcall
cwtl
stos
push
inc
aam
insl
inc
and
push
mov
div
in
mov
push
imul
jg
rolb
dec
cmp
mov
outsb
dec
ds
inc
sub
sbbl
mov
sub
jae
ss
nop
or
inc
xlat
aaa
mov
push
xchg
sbb
push
xchg
jo
pop
fmul
push
or
lods
inc
std
add
xchg
add
test
imul
adc
mov
mov
movsb
sub
xor
mov
loopne
fistl
mov
scas
push
inc
mov
test
adc
sub
lahf
or
adc
cwtl
cli
repnz
rcrb
push
test
test
gs
lods
push
push
push
or
xor
int
jecxz
xor
push
push
and
stc
sub
inc
xchg
addb
push
xor
sbb
mov
and
invd
ljmp
cmpsb
add
imul
cmpb
movsl
cmp
mov
xor
loope
inc
sbb
xchg
lret
dec
lods
int
cltd
jno
fsubr
aaa
push
add
mov
adc
or
out
push
lcall
xor
xchg
sti
cltd
bound
xchg
add
adc
dec
xor
ds
mov
dec
stos
ret
add
mov
push
out
sbb
mov
mov
mov
movb
add
adc
loop
mov
mov
pop
sub
and
mov
xor
je
call
fldt
rcll
scas
dec
sbb
imul
mov
dec
in
jo
out
andb
test
sub
pop
and
sahf
adc
roll
mov
adc
inc
inc
push
pusha
cs
and
in
add
js
jo
pop
orl
test
fdivl
add
adc
mov
add
mov
add
inc
sarb
and
rorb
mov
js
sub
xor
and
sbb
orb
gs
adc
ficomps
jo
stos
xchg
adc
pop
push
add
orb
fistpl
pop
xchg
hlt
xor
xchg
mov
adc
inc
mov
adc
hlt
pusha
inc
cmc
or
push
push
sti
lret
bound
fimull
jne
leave
ss
jge
jo
in
xchg
sbb
add
test
dec
das
and
cmp
push
out
dec
push
and
js
add
push
mov
cld
add
inc
or
adc
jbe
stos
push
jne
hlt
aam
loope
stos
inc
pop
bound
and
jae
and
add
pop
pop
call
mov
dec
nop
js
inc
dec
mov
add
lahf
and
out
int3
dec
add
inc
loope
and
cmp
mov
sub
jl
sub
les
or
out
add
and
icebp
daa
sub
lret
cmp
sti
roll
aam
roll
push
ficoml
and
push
add
mov
pop
iret
data16
push
add
ljmp
and
dec
xchg
and
and
mov
cmp
push
xchg
xor
cltd
roll
jae
add
hlt
mov
push
mov
jb
add
mov
aam
inc
sbb
push
and
or
fadd
test
jge
mov
dec
sbb
pop
sbb
movsb
mov
in
jp
add
in
and
lahf
inc
fadds
adc
mov
xchg
inc
ljmp
jmp
adc
xchg
lret
test
into
in
sub
aas
int3
push
dec
scas
push
mulb
rolb
and
sahf
dec
push
in
test
mov
dec
je
sbb
gs
adc
and
ret
in
or
in
movsl
and
movsb
sbbb
ss
sbb
lods
sub
add
imul
jnp
outsb
xchg
cmpsb
xchg
sub
ret
and
jecxz
out
data16
aaa
add
xor
sub
xchg
sbb
cltd
cld
or
sub
mov
scas
insb
jo
and
sbb
inc
stc
cs
xor
popa
rolb
inc
and
xor
jns
xchg
mov
jns
shll
adc
cwtl
sub
loope
dec
mov
in
or
sbb
cmpsl
mov
xor
dec
mov
out
push
jns
aas
adc
aas
jns
dec
adc
xchg
in
xchg
test
sbb
add
das
adc
add
add
sub
lock
xchg
mov
dec
cmp
cmp
jbe
jae
nop
leave
mov
or
arpl
aas
add
fiadds
sahf
xor
orl
xchg
je
bound
mov
mov
mov
inc
add
jl
pop
or
lods
xchg
push
in
mov
in
inc
in
adc
add
out
adc
lret
xchg
shlb
je
or
and
stos
outsl
inc
shll
lds
iret
daa
dec
inc
inc
aad
sbb
pusha
cmpsb
or
sub
or
pop
mov
nop
lret
sub
mov
push
ret
orl
sbb
pop
insl
or
sub
std
mov
leave
rorb
mov
pusha
sub
popa
orl
adc
imul
sbb
adc
push
push
cltd
ss
push
scas
mov
or
push
jo
adc
mov
mov
pop
jo
pop
sahf
mov
push
mov
xor
in
test
push
lahf
es
in
dec
mov
pushl
or
mov
stos
sub
add
mov
sub
cld
mov
fs
daa
js
or
mov
mov
push
fistpl
lret
sarl
and
addb
adc
pop
stc
push
sbb
imul
arpl
in
jecxz
xchg
out
sub
enter
and
or
inc
inc
jne
ja
xchg
inc
aam
push
mov
lret
outsl
aad
inc
mov
push
clc
icebp
sub
cmc
dec
movsl
insl
int
mov
outsb
enter
pop
push
insl
add
imul
test
mov
and
test
roll
mov
les
fldenv
cltd
aaa
lods
add
push
dec
mov
push
inc
inc
push
test
jp
push
sub
adc
mov
xor
push
pop
or
insb
add
ret
arpl
or
mov
sub
inc
adc
jp
pop
jl
lret
push
push
add
push
lret
out
mov
insb
js
and
add
jns
mov
outsb
inc
out
inc
push
mov
add
iret
outsb
pushw
mov
xchg
data16
outsl
test
xchg
or
mov
dec
pop
and
and
subb
test
and
shl
mov
dec
add
push
aam
xor
inc
push
xchg
and
mov
or
insl
inc
mov
mov
adc
sub
subb
into
lret
inc
mov
subb
or
cmp
cmp
add
inc
pop
inc
jo
dec
shr
imul
pop
sub
add
adc
popa
pop
mov
and
subb
das
test
rcl
push
fs
jbe
mov
sbb
imul
scas
data16
mov
lock
jg
add
daa
sub
or
push
out
lret
jb
shll
pop
imul
push
mov
cmp
xchg
outsb
pop
pop
or
aaa
into
test
cmp
arpl
lret
das
into
and
lcall
jl
orb
cmp
cmpsl
xchg
inc
jae
push
or
jo
out
cmp
push
orl
andl
lods
setnp
movsl
decb
push
push
mov
lods
mov
or
push
sbb
mov
push
sub
test
or
mov
inc
roll
pop
imul
pop
mov
sbb
in
fstps
sub
scas
mov
sub
mov
sbb
mov
inc
push
mov
or
lods
mov
dec
adc
das
test
fildl
or
mov
or
pop
shlb
inc
fwait
loopne
pop
adc
or
adc
or
pop
mov
mov
or
adc
cs
sbb
push
fwait
pop
inc
insb
inc
cli
jno
and
fadds
xchg
push
xor
sub
rcrb
js
inc
add
repnz
movsl
fsubrs
mov
fildl
scas
loop
in
xor
rcll
movsl
inc
mov
sub
mov
inc
sub
into
mov
and
adc
imul
or
sbb
mov
repz
enter
in
jl
mov
insl
add
adc
push
xchg
imul
ret
mov
subb
outsl
mov
push
and
or
loop
add
ljmp
pusha
and
and
pop
in
jo
ds
std
pop
rcrl
scas
jl
xor
cli
mov
inc
fsub
out
mov
sbb
int
ret
push
icebp
or
shrb
addr16
test
sar
add
fs
popa
mov
test
mov
push
inc
cmc
xchg
roll
pusha
pop
mov
xor
add
pusha
sbb
movsl
fstl
push
pop
mov
pop
and
cmp
pop
pop
nop
andb
adc
xlat
clc
adc
js
aad
jo
xor
push
sbbb
mov
adc
adc
xlat
pop
add
push
int3
lds
mov
or
jne
or
sub
jg
and
into
inc
sub
add
xchg
inc
fisttpll
or
mov
sub
xor
das
cmp
cmc
xor
addr16
xor
in
testb
add
cmp
push
mov
sub
fists
add
sbb
adc
faddl
mov
pop
cmc
pop
sub
sbb
mov
clc
pushf
mov
inc
repz
inc
and
push
popf
ror
pop
in
jne
js
rcrb
sub
sti
xor
out
pop
arpl
add
cmp
sub
lahf
cmp
stos
dec
hlt
je
adc
test
sbb
enter
xor
adc
xor
jb
cmp
jb
and
push
jbe
mov
sbb
lret
push
or
mov
pop
cld
add
addl
push
loope
push
shrb
nop
or
mov
clc
jnp
inc
xor
clc
xor
jg
sbb
ja
pusha
or
jb
popf
mov
rep
loopne
mov
mov
shrl
mov
dec
rclb
push
cmpl
test
stos
pop
mov
out
and
jo
subb
pop
add
sbb
inc
inc
cmpsb
xchg
pop
cwtl
sbb
add
scas
push
inc
mov
notl
clc
push
or
xchg
les
pop
xor
inc
mov
inc
stos
stos
push
jo
cmp
aas
jbe
pop
fld1
or
out
icebp
and
insl
jnp
and
and
ljmp
push
cmp
lret
test
or
rolb
xor
subb
testl
nop
andl
add
sub
loop
sub
mov
add
sbb
ret
addr16
insb
push
xorb
icebp
push
adc
cwtl
mov
pop
and
fisubs
xchg
and
lea
or
mov
push
mov
add
cmp
mov
inc
nop
and
stos
mov
mov
push
lds
cmp
fistl
das
jbe
add
rcrb
mov
adc
fiaddl
push
and
and
pusha
mov
mov
dec
add
sbb
cwtl
ret
xor
lods
mov
mov
lods
mov
or
cmp
and
mov
xchg
inc
mull
push
adc
push
mov
push
in
push
inc
jae
mov
adc
and
mull
pop
adc
sub
sbb
add
mov
mov
jno
push
jno
cmovb
test
mov
out
mov
shlb
dec
in
mov
pop
pop
pushw
je
sti
in
pop
popa
mov
sub
dec
mov
bound
push
subb
test
addr16
mov
sbb
mov
pop
and
inc
out
or
aad
adcl
jmp
jp
pop
bt
test
sbb
sti
jns
pop
jae
aaa
adc
or
adc
inc
inc
sub
aam
mov
mov
movsl
mov
jnp
xchg
pop
es
clc
rorl
int3
push
cltd
pop
adc
pusha
or
cmovle
or
or
fidivrl
cmpsb
xchg
lcall
add
add
xor
add
or
mov
adc
push
xor
xchg
cwtl
xor
paddb
push
ljmp
lahf
inc
pushf
jbe
arpl
dec
in
rcll
sbb
fsubl
movsl
or
adc
sbb
ret
je
jmp
mov
loopne
cmc
and
jo
sbb
test
add
rcll
xor
mov
mov
adc
fcoml
xor
pop
adc
aad
jne
in
jmp
adcb
push
mov
mov
sub
adc
rorb
add
sbb
fidivs
jb
cmp
jbe
jbe
fdivr
xorb
sbb
pop
testb
adc
ljmp
xor
aad
add
addr16
fistpll
loopne
and
imul
inc
les
push
sub
push
sbb
mov
or
pop
in
jae
test
mov
aas
gs
pop
sbb
xchg
cmp
cwtl
out
cmp
adc
dec
rcrl
xchg
mov
mov
xchg
adc
inc
inc
push
cmp
inc
xor
dec
inc
push
psubusw
ret
mov
outsb
pop
fadd
into
or
jne
jno
fs
sub
add
jp
js
adcl
mov
cmp
pop
das
adc
add
push
push
shll
outsb
insb
test
xor
cmpps
jmp
lods
fldenv
push
xchg
mov
xor
mov
xchg
adc
mull
xchg
push
cmpsl
push
sub
push
sub
push
sub
add
add
daa
stc
or
or
fmul
jle
pop
adc
sub
int3
lcall
add
sbb
push
dec
stos
loopne
xchg
cwtl
mov
push
cwtl
sub
es
hlt
mov
das
sti
and
stc
xchg
in
sbb
push
sub
xor
loop
je
jecxz
hlt
popf
and
mov
mov
mov
push
sbb
out
pop
clc
inc
or
sbb
test
sbb
push
cmp
xlat
pop
inc
cmp
xor
fisttpl
jge
push
shll
mov
mov
push
pop
adc
ret
mov
xchg
mov
faddl
aaa
pop
cmc
sub
push
cmp
mov
xor
dec
xchg
adcb
push
jns
out
add
jge
push
cmp
aad
pop
es
or
pusha
sub
stos
incb
cwtl
lret
roll
xorl
inc
push
adc
mov
lret
dec
push
inc
push
jo
add
mov
in
adcb
xchg
sub
outsb
jmp
and
cmp
pop
and
adc
inc
addl
pop
scas
and
insb
sub
movsl
add
add
pop
inc
xchg
test
test
out
cmp
leave
sub
sbb
and
adc
xorb
adc
mov
cmc
cmp
push
fcoml
andb
push
rcll
das
mov
push
sub
pusha
aad
sbb
ret
popf
pop
push
xor
pop
add
imulb
mov
pop
sbbb
rclb
jle
dec
inc
lods
push
sbb
arpl
pop
imul
jle
popf
je
inc
add
subb
les
xchg
jo
pop
pusha
push
addb
mov
and
add
add
test
jae
aad
mov
push
mov
push
es
push
shlb
lret
pop
mov
call
insl
push
popa
and
inc
dec
inc
and
and
imul
sbb
mov
loop
adc
mov
imull
add
inc
xchg
gs
add
lahf
ret
mov
sub
adc
pop
out
cmp
and
mov
mov
or
lds
lods
jo
jbe
or
test
mov
push
xor
add
movsl
incb
testl
mov
add
outsb
push
adc
dec
mov
mov
incb
jo
inc
ret
push
nop
popa
pop
sub
rcrl
or
add
insb
sub
rolb
sub
das
addb
cmpsl
push
mov
mov
mov
pop
cmp
pop
push
pop
add
push
fcoms
inc
jp
sub
cmp
ficoml
shlb
cmp
add
popa
lret
or
fwait
popf
mov
push
push
les
lds
inc
sub
ret
adc
push
and
movsl
xlat
sub
in
sub
dec
ret
jb
insl
inc
sub
pop
mov
rolb
and
lods
rorb
or
push
lods
and
mov
lods
insl
add
imul
fidivrl
and
push
popa
cld
or
push
jae
inc
lahf
out
add
adc
ljmp
and
lods
push
rcll
fisubl
mov
das
xor
lods
inc
imul
addb
pop
cs
stc
push
int
mov
add
adc
dec
pop
xchg
popa
in
mov
cmp
mov
pop
push
sub
movsb
stos
push
gs
movsl
or
addb
or
dec
add
cltd
into
push
ljmp
and
sub
jmp
xchg
cmpb
xchg
sbb
mov
andl
cmpsl
dec
adc
adc
in
sbb
xchg
inc
lods
adc
stc
test
rorb
fistps
xchg
inc
xor
imul
xchg
push
xor
mov
sysexit
adc
push
mov
cmp
decl
mov
mov
std
movsb
push
add
jp
xchg
adc
aaa
dec
repz
imul
fcomp
mov
aaa
clc
cmc
lcall
pop
sbbb
scas
stc
and
mov
std
adc
sbb
and
orl
push
jno
shl
out
adc
pop
add
das
sub
and
and
and
or
test
push
jns
cld
subb
adc
lahf
mov
mov
pop
add
or
pop
cmc
ds
ljmp
das
cmc
jno
push
or
insl
and
jbe
and
pop
into
movsb
pushf
or
adc
push
or
lods
xchg
mov
out
push
lods
mov
outsb
jb
mov
movsl
mov
lcall
cmpsb
aam
mov
push
subl
scas
xchg
xor
inc
dec
adc
rorl
lea
sub
imul
inc
dec
scas
dec
xchg
xor
inc
outsb
sbb
dec
movsl
add
mov
adc
div
inc
pop
push
inc
hlt
aas
lods
ja
test
sbb
aad
pop
fbld
insb
mov
inc
pop
daa
sub
adc
xor
xchg
data16
lods
loopne
aam
push
insb
mov
jge
insb
aad
jno
aam
pop
jne
addr16
jg
pop
mov
jo
test
mov
rorl
mov
mov
stc
call
out
push
sub
sub
lods
mov
lahf
adc
fdivrl
xor
jle
lds
data16
fstp
mov
insb
aaa
push
mov
movsl
rcl
test
push
add
xchg
cli
push
data16
add
xorb
add
ret
fildl
jo
or
push
push
xor
jb
test
and
in
or
stos
mov
mov
stos
adc
iret
sbb
push
movsl
or
call
dec
test
scas
adc
mov
inc
das
push
jecxz
sub
xor
sub
or
pop
sub
add
adc
mov
shll
dec
cmp
adc
mov
pop
addl
ret
pop
jmp
mov
loopne
insb
dec
rcl
add
adc
xchg
mov
ret
adc
sbb
xor
inc
xor
pop
sbb
sar
push
and
shlb
scas
sbb
and
mov
push
jno
and
or
xchg
fcmovbe
mov
inc
or
shrb
negl
loop
repz
pop
adcl
sub
sarb
push
pop
insl
adc
push
fcomp
mov
push
leave
pop
push
lcall
bound
mov
leave
push
add
push
movsb
jg
mov
test
aad
mov
shlb
pop
add
lret
shlb
push
and
jp
outsb
and
popf
cmpsl
sbb
repz
gs
jo
mov
lcall
psrlw
and
stos
test
sub
imul
adc
movsl
xchg
popa
aam
mov
pop
mov
adc
andb
inc
loope
xor
dec
popl
cmp
xor
mov
inc
sub
js
push
mov
sub
jo
mov
arpl
loope
fmuls
or
add
pop
xchg
aaa
sub
xor
movsb
jp
sub
jnp
stos
rcl
sbb
nop
testb
lret
test
popf
cmp
pop
divb
mov
xchg
jecxz
sbb
inc
xchg
imul
mov
imulb
nop
es
cmp
mov
cmpsb
sbb
push
mov
or
sbb
mov
xor
int3
add
popf
inc
or
adc
push
xchg
arpl
adc
adc
loop
sahf
push
sbb
sub
mov
adc
rcrb
add
loope
roll
pop
xchg
movsl
pop
insl
mov
mov
add
xor
shll
pop
adc
jle
jno
lea
in
in
sbb
pop
push
scas
outsl
test
adc
mov
inc
push
add
mov
and
gs
add
dec
dec
and
stos
ret
movsb
andl
test
and
add
gs
push
test
push
adc
inc
scas
pop
cmc
sub
adc
mov
pop
enter
and
mov
xor
adc
push
dec
sbb
jp
es
out
stos
enter
fldcw
dec
lcall
mov
stos
addr16
mov
into
inc
test
rep
insb
sbb
or
push
jae
ljmp
in
push
add
jo
mov
cmp
mov
aaa
insb
xor
sub
pop
rorl
mov
push
out
sbb
inc
sub
les
clc
cmc
mov
aas
add
test
lea
pop
mov
lock
sbb
add
fisubrl
fcomi
call
inc
daa
pop
cwtl
test
es
cmpsl
push
mov
xlat
mov
dec
inc
inc
outsb
repz
mov
es
sahf
cli
add
add
lcall
dec
test
push
fistpll
or
in
sub
pop
xor
jmp
test
data16
outsb
pop
adc
lods
lea
ret
repnz
and
add
xlat
mov
xchg
mov
test
push
mov
push
jp
sarb
push
rcrl
das
movsl
or
shll
cli
add
rcll
push
xor
mov
das
test
push
sbb
es
out
push
sub
sub
and
lret
xlat
mov
push
cmp
scas
mov
pop
imull
test
cmpb
mov
and
cld
inc
cwtl
xor
mov
cmpsb
push
and
push
push
movsl
push
mov
jno
and
or
hlt
mov
jns
sbb
pop
jmp
or
imul
sub
sti
es
sub
xchg
test
push
cmp
pop
mov
loop
call
pop
xchg
or
inc
loope
mov
loope
add
dec
les
push
mov
inc
rcrb
sbb
cmp
dec
imul
fbld
fwait
xchg
sub
nop
push
fisttpl
sub
jmp
imul
dec
jb
push
orb
xchg
push
stos
push
jb
push
sub
push
and
xchg
pop
pop
cli
gs
push
adc
adc
push
xor
inc
jne
mov
es
pop
push
sbb
add
stos
jbe
je
mov
test
adc
fildl
daa
add
pop
fsubp
xchg
sbb
xor
cs
ret
sub
adc
sbb
mov
inc
stos
ljmp
adc
mov
adc
jo
stos
test
imul
fdivs
cmpl
mov
ror
in
rolb
add
sbb
jbe
adc
add
stos
push
mov
les
or
dec
dec
inc
in
inc
xchg
test
mov
push
jno
shr
push
add
cmp
sub
dec
cs
xor
jo
jbe
scas
mov
stos
pop
push
xor
mov
stos
pop
ret
jg
mov
subb
lods
and
jns
push
insb
jae
adc
mov
mov
push
jle
data16
push
lods
inc
adc
jo
mov
insb
mov
pop
add
push
add
ss
pop
mov
or
gs
push
inc
fs
or
mov
xor
pusha
arpl
xor
sub
mov
jne
movsl
nop
test
mov
out
mov
cmc
push
xchg
or
stos
inc
fistpl
test
data16
inc
push
lcall
sbb
jno
push
sbb
loopne
gs
mov
imul
and
xchg
dec
mov
in
add
lret
pop
jb
out
das
out
inc
test
cmp
cmc
loope
mov
add
fists
stc
jno
rorl
inc
imul
std
mov
sub
insl
test
nop
aaa
stos
jo
add
imul
cs
push
mov
jbe
lret
mov
push
xor
mov
loopne
push
aam
sbbb
xchg
sbb
scas
pop
mov
test
pop
dec
push
and
pop
data16
test
popf
call
das
pop
xor
sbb
stos
mov
insb
inc
stos
add
add
aad
pop
push
das
data16
stos
xor
stos
jge
int3
aad
ss
iret
xchg
sub
nop
pop
cld
or
push
and
fbstp
mull
pop
xchg
pop
push
or
out
and
loop
shrl
mov
movsl
enter
fadds
jne
or
imul
inc
pop
gs
add
cmp
test
mov
dec
adc
or
into
rorb
sbb
sbb
int
movsl
sub
add
add
or
subb
leave
loope
mov
push
jae
push
jns
addr16
rcll
mov
xchg
fisubrl
dec
dec
mov
xchg
pop
ja
add
cmpsl
xchg
mov
cmc
aas
push
and
aas
pop
jp
xor
mov
movsl
out
insl
mov
inc
pop
mov
mov
mov
lcall
aam
or
inc
mov
and
sbb
push
and
sbb
das
stos
es
adcl
inc
imul
and
inc
push
jle
sbb
xchg
pop
test
push
test
sahf
or
lret
add
mov
loop
lds
jge
hlt
mov
ss
inc
scas
lock
or
mov
push
push
add
hlt
sub
mov
cmp
add
sub
dec
cmc
adc
add
pop
cwtl
lds
mov
jo
test
outsb
int
mov
aad
sub
mov
int
push
shl
inc
pop
pop
mov
inc
cmpsl
or
pop
enter
int
data16
loop
pop
push
xlat
or
cbtw
add
mov
mov
add
dec
inc
dec
add
icebp
rclb
cmp
sub
sbb
subl
push
push
xor
fstl
add
shrl
cmp
test
push
and
push
or
xor
repz
aam
andb
rcrl
into
imul
sub
sahf
add
cmp
add
dec
pop
or
les
and
cmp
mov
cmp
int3
adc
data16
add
scas
xor
iret
adc
cwtl
and
clc
and
sarb
xchg
xor
lods
rcl
fistps
sub
ficompl
mov
adc
es
out
cmp
enter
mov
fildl
pop
neg
fildll
add
mov
test
js
or
stos
test
int3
pop
cmp
nop
icebp
sbb
mov
add
sbb
push
lea
cmp
add
outsl
add
mov
ficomps
push
cmc
mov
fnstcw
jge
add
mov
adc
loopne
lods
loop
inc
jae
add
fildll
cld
popa
pop
xchg
jnp
aam
sub
mov
fsubl
sti
xchg
rol
rcrl
push
jnp
aam
sti
jp
sbb
loope
les
and
stos
inc
pop
js
das
dec
push
push
andl
dec
add
fs
xlat
xchg
cmp
aad
pop
pop
mov
fwait
adc
sahf
cltd
cmpl
mov
lea
add
cmp
xchg
les
mov
loopne
mov
add
sub
sbbb
leave
int3
sbb
and
repnz
iret
les
les
fdivrs
sub
adc
push
test
arpl
jb
lock
lcall
repnz
inc
or
in
xor
adc
sub
cmpb
test
xchg
insb
fwait
lock
sbb
test
pop
or
negl
inc
lock
ja
cmpb
mov
daa
cld
xchg
fidivrl
jl
ja
scas
shrb
push
cmp
imul
idiv
sbb
test
jge
cwtl
inc
inc
test
andl
jne
sub
pop
dec
orb
les
stc
loopne
sub
orb
xchg
outsl
sbb
fsubrl
add
aad
sub
sub
mov
orb
inc
lods
and
test
jne
jbe
mov
push
out
dec
ds
inc
xchg
mov
std
cmp
les
pop
stos
and
mov
insb
clc
inc
add
dec
gs
and
pop
xor
iret
rcrb
addb
jb
cmp
xchg
sub
cmc
out
stos
push
arpl
lds
jbe
add
addb
daa
and
pushf
add
outsl
ja
mov
shll
adc
and
jmp
aaa
adc
inc
lock
sub
dec
push
jge
or
pusha
sahf
xchg
or
lret
xlat
xor
jle
mov
and
jl
mov
repz
and
in
mov
mov
js
jle
insl
and
adc
jne
jo
cmp
sbb
je
sbb
mov
roll
add
add
mov
sub
rcrb
inc
sbb
add
jp
sub
adc
pop
aaa
rep
call
jo
popa
adc
xor
push
inc
pop
and
pop
clc
mov
sbb
mov
or
int
pop
stos
adc
push
jp
push
das
mov
loop
push
push
sub
push
mov
rcll
push
in
inc
pop
adc
imul
sar
adc
call
xor
idivl
adc
push
inc
pop
add
push
inc
xchg
mov
cmpsb
xchg
movsl
push
or
cmc
inc
mov
stos
adc
adc
sub
and
sbb
addr16
mov
movsl
aaa
mov
mov
outsb
jb
adc
mov
dec
sbb
outsb
jge
test
mov
adc
adc
out
std
dec
shrl
push
inc
add
mov
dec
sub
cmp
mov
mov
roll
mov
stos
ret
out
cmp
pop
pop
aam
movsbl
add
loopne
adc
inc
lret
jb
inc
insl
stos
lods
imul
test
push
push
and
mov
pop
inc
sub
xlat
cmc
push
in
jne
and
xor
sub
imul
and
push
push
mov
inc
xchg
fimull
out
xchg
sub
sub
and
pop
or
mov
imul
mov
push
adc
insl
xchg
add
loop
pop
inc
mov
test
insl
push
mov
bound
push
jo
sub
add
mov
test
sub
dec
cmpsb
insl
fimull
data16
cmpsb
inc
add
ficoml
notl
dec
sbb
cmc
es
fiaddl
fdiv
xchg
or
std
incl
mov
fdivrs
mov
and
leave
cmpsl
mov
cmp
cmpsb
mov
inc
fcompl
test
rol
mov
mov
adc
push
test
pushf
out
cmp
inc
in
in
lods
stos
test
mov
xor
das
add
sbb
sub
or
or
and
xor
in
sub
cmp
test
cmp
jae
sub
es
inc
test
sbb
inc
loop
mov
sbb
int
pop
out
insb
push
lods
xor
xor
push
dec
decb
push
mov
mov
sub
push
xchg
pop
sbb
cmpsb
por
aaa
cmp
imul
or
add
inc
sub
mov
sahf
mov
push
add
sbb
mov
lods
shll
divl
lcall
fiaddl
dec
fldenv
mov
inc
pop
shlb
mov
sbb
bnd
cmp
and
or
pop
dec
lds
lcall
scas
and
cmp
lret
inc
push
adc
into
and
sbb
jns
add
fisubrl
lcall
enter
add
loop
es
and
push
mov
add
xchg
cmp
repz
cmc
stc
xor
imul
test
add
dec
add
in
shrl
inc
add
cmp
push
addr16
mov
ljmp
pop
jbe
ljmp
mov
add
cmp
test
push
push
data16
inc
imul
lret
test
add
test
xor
decl
push
dec
pop
ret
push
das
sub
test
js
push
push
setns
or
inc
push
mov
sub
aaa
into
fwait
call
jae
xor
lods
sub
sbb
push
pop
stos
adc
mul
lods
adc
nop
cmp
dec
mov
gs
sbb
sub
cltd
sbb
sub
jbe
das
xor
add
xchg
xlat
fs
movsl
sub
test
sbb
mov
cmp
movsb
mov
cmp
mov
mov
or
aad
inc
imul
xchg
fisubl
jno
mov
and
lcall
cmp
or
lret
sbbb
mov
aad
add
loopne
mov
loopne
add
or
sbb
jl
cmp
push
cmp
add
pop
jmp
loopne
add
fisubrl
push
or
push
pusha
lea
mov
adc
inc
jae
imul
loop
outsb
insb
sbb
lods
add
inc
pop
test
and
movsl
push
xchg
mov
lea
push
inc
add
lds
das
rcrb
movsl
jecxz
aam
lods
test
clc
in
mov
cltd
cltd
loope
pop
inc
and
mov
mov
push
push
les
dec
aas
lods
push
fsubrs
es
or
add
stc
mov
add
push
shrl
mov
pop
jb
test
aad
xor
lahf
loop
and
add
addb
into
mov
or
testl
fimull
pop
adc
xchg
push
rclb
adc
ds
idivl
test
mov
xlat
andl
sbb
pop
ljmp
xchg
adc
lock
cmp
xor
pop
pop
dec
test
test
imul
inc
push
mov
push
inc
push
xor
dec
aaa
bextr
inc
iret
mov
sub
into
inc
sub
ljmp
sbb
jno
xor
lret
movsl
inc
fldt
into
or
mov
push
popa
sub
into
lock
mov
sbb
lods
in
lock
ljmp
subb
sub
dec
movsl
cmp
xchg
mov
sub
inc
mov
test
mov
pusha
mov
subb
xor
adc
xor
cs
mov
aaa
or
push
add
push
pop
adc
andb
aaa
stos
add
or
inc
orl
push
lret
dec
sub
ja
fadds
lea
mov
adc
orb
inc
add
das
std
pop
scas
test
jns
scas
loop
imul
les
dec
or
stos
adc
jecxz
pop
stos
rcll
leave
lret
mov
push
push
pop
imul
inc
or
nop
push
imul
add
lea
jg
imul
inc
and
and
dec
std
sbb
sub
mov
cmp
aam
sbbb
push
ljmp
inc
add
pop
jbe
ret
mov
jns
add
add
test
inc
fs
loope
aad
pusha
rorl
push
outsb
add
lea
fwait
testb
and
push
mov
add
sub
je
daa
popa
or
movsl
test
stos
mov
push
push
mov
push
push
add
rolb
mov
shrb
or
mov
push
xchg
addr16
inc
dec
add
cmp
stos
lret
mov
mov
insl
negl
rclb
sbbb
add
push
movsl
out
inc
sub
add
lret
mov
mov
mov
scas
and
mov
imulb
or
insb
sbb
mov
fisttps
lods
inc
subb
mov
mov
sub
mov
test
int3
or
push
and
jl
inc
int
adc
mov
push
imul
jl
int
mov
mov
xor
imul
dec
inc
nop
insl
hlt
and
xchg
cmp
mov
add
insb
inc
and
in
cmp
mov
mov
das
adc
pop
add
dec
push
clc
sbb
shll
sub
xchg
mov
mov
sub
cmc
in
dec
pop
inc
xor
aad
lods
xor
vmovapd
out
mov
test
mov
cltd
xor
sub
test
xchg
mov
sub
mov
les
mov
lods
cltd
mov
pop
push
push
shlb
aam
bound
gs
shrl
xchg
add
fwait
push
fisubrl
pop
jnp
inc
imul
pusha
dec
fstps
pop
stos
inc
sub
xchg
fs
mov
and
pop
mov
in
jl
or
xchg
pop
xor
insl
adc
add
mov
inc
mov
mov
stos
stos
pop
pop
push
adcb
inc
stos
push
jle
mov
out
and
mov
cmp
repz
sub
fisubl
mov
mov
jno
inc
int3
imul
sub
enter
es
loopne
test
dec
xchg
sbbl
movsl
add
sbb
pop
sub
pop
jle
inc
xchg
mov
rcrl
lea
shl
push
cmpsb
adc
adc
stos
movsb
lret
hlt
pop
jae
mov
pop
inc
sbb
dec
aad
xlat
inc
mov
push
aad
sub
pusha
loop
sub
mov
xchg
sub
cmp
jl
stos
mov
pop
adc
adc
mov
sbb
add
inc
sbb
and
add
mov
pop
dec
adc
add
add
negl
sub
push
outsb
sbbb
rcr
mov
mov
push
lock
test
xor
test
jmp
xorl
fmuls
test
lods
and
roll
and
sbb
pop
adc
add
cmp
add
mov
jo
enter
mov
or
pxor
add
out
adc
mov
rolb
ret
mov
inc
pop
lret
aam
mov
mov
adc
call
or
mov
adc
mov
jle
cmp
sub
cmp
cmpsb
xlat
sub
add
sub
add
xor
xchg
subl
test
sti
sbbb
dec
jecxz
ret
push
popa
and
les
dec
mov
in
mov
testl
andb
fwait
mov
cli
xor
jnp
pop
dec
add
jnp
flds
sub
das
add
mov
arpl
xchg
in
dec
adc
in
add
mov
dec
adc
dec
sub
adc
or
adc
pushf
hlt
add
push
inc
jl
lock
rcr
sahf
ret
cmp
stos
adc
ss
add
sub
add
adc
loop
sti
nop
fidivrs
pop
push
sbb
pop
rcrb
jno
fstl
jp
mov
push
imul
inc
push
pushf
or
mov
nop
add
outsb
adc
aam
outsb
adc
xor
mov
sbb
pop
aas
js
popa
mov
or
or
sbb
into
ret
andb
sbb
orb
fisttpll
stos
pop
imul
push
stos
cmc
js
mov
rorb
adc
sub
imul
mov
cmp
or
mov
pop
push
cmp
gs
push
push
mov
sbb
fidivrs
mov
sub
les
add
inc
jno
pop
mov
ret
fldt
in
adc
cmp
push
push
sub
test
push
inc
pushf
enter
add
push
fldt
xor
or
and
mov
add
pop
daa
cmp
mov
sub
or
aam
and
push
cltd
or
inc
or
inc
adc
or
lret
stos
or
jno
shrb
pop
jae
xorl
mov
mov
pop
out
pop
add
or
push
popl
lea
or
add
je
cmc
adc
cmp
ret
adc
xorl
imul
dec
xchg
jg
lret
andl
imul
addb
xor
hlt
xor
sub
scas
xchg
sbb
push
mov
inc
pop
xor
roll
outsb
ret
pop
push
test
ret
adc
ds
and
adc
add
pop
sbb
mov
push
and
push
ret
inc
ret
mov
gs
cmpxchg
cli
rclb
lret
dec
mov
inc
dec
shlb
mov
add
outsl
idivl
inc
into
das
test
jae
in
or
mov
sub
push
repz
add
lret
subb
fsubs
push
jo
aam
pop
imul
mov
sub
push
lods
push
fiadds
push
xor
or
lcall
jns
rolb
test
mov
inc
inc
inc
mov
or
xchg
int
or
rorl
rcll
mov
add
mov
push
pop
inc
sbb
jl
mov
test
or
sbb
insl
test
dec
jl
inc
jge
pop
add
sub
or
lcall
mov
ret
out
into
lods
mov
rdtsc
xchg
cmc
cmpsl
mov
lcall
stos
cmp
mov
insb
push
leave
rcll
jbe
loop
subb
test
dec
test
in
lcall
push
dec
xor
push
and
mov
adc
sbb
es
xor
inc
jno
mov
mov
inc
add
push
aad
jae
or
stos
push
push
dec
or
ss
mov
mov
push
add
add
or
test
sub
imul
in
dec
push
mov
xor
push
sub
cmp
lcall
add
add
mov
jmp
in
sbb
inc
repz
or
cmp
data16
inc
imul
push
xchg
and
ret
push
stos
sbb
sub
pop
adc
insl
inc
imul
and
test
add
stos
lock
loop
sbbb
mov
add
loopne
mov
inc
int3
jbe
aad
inc
stos
cld
repz
insl
push
xor
mov
inc
data16
push
ficompl
xor
push
cmc
sub
pop
flds
cmpsb
inc
mov
sbb
sbb
push
inc
sbb
add
jmp
lea
push
ljmp
sub
pop
xchg
xor
lret
pop
push
adc
xor
imull
shrl
or
add
sub
insl
test
movsb
sbbb
jl
sub
push
mov
xor
inc
pop
subb
adc
ret
push
ret
push
leave
cmpsl
and
or
add
cmpsl
ljmp
add
push
adc
mov
push
std
or
add
push
push
lods
push
xchg
dec
lcall
shlb
sbb
pusha
arpl
adcb
div
adc
repz
push
in
mov
jno
leave
push
add
adc
push
je
cmp
mov
mov
mov
fildll
add
inc
xchg
mov
adc
and
lcall
xor
xchg
inc
cmpsb
or
cs
mov
incl
or
mov
popf
rorl
movsb
pop
ss
rcrb
sbb
push
inc
addb
andb
rcll
std
mov
or
inc
pusha
mov
stos
mov
sbb
mov
mov
lcall
rcll
divl
push
add
pop
or
mov
clc
inc
add
cmpsb
loop
and
fwait
or
sbb
push
adc
mov
jb
repz
add
pop
xchg
sub
test
cmp
insb
test
adc
lods
push
mov
push
cmpsb
ljmp
inc
mov
das
das
cwtl
or
roll
daa
mov
sbb
add
push
adc
and
sbb
bound
adc
inc
and
inc
test
add
dec
test
xchg
test
movsb
jmp
mov
inc
lahf
push
push
mov
and
jb
lds
pop
adc
adc
and
jb
mov
cmp
push
movsl
pop
add
pop
push
sarl
jo
jl
scas
jno
dec
push
mov
stos
andb
fdiv
mov
or
adc
xor
shrb
lcall
popa
andb
loopne
dec
inc
loop
imul
xchg
mov
fcoms
add
je
lcall
es
sahf
pop
inc
jmp
xor
xchg
fwait
jno
or
aaa
jo
push
and
int3
insb
bound
pop
stos
cmp
or
les
mov
cmp
loope
das
hlt
inc
popf
out
mov
push
dec
adc
mov
insb
or
jmp
pop
mov
or
push
lods
out
mov
or
mov
shll
sub
popf
mov
and
mov
xor
push
adc
inc
mov
aad
pop
insb
lods
mov
stos
pop
movsl
sti
int
cmp
lods
xor
enter
sub
aaa
xchg
into
sub
insl
add
dec
stos
inc
push
pop
icebp
and
ljmp
and
xor
pop
xchg
mov
xlat
sbb
testb
and
nop
and
add
add
inc
adc
insb
movsb
lret
add
mov
push
sub
dec
lahf
outsl
imul
pop
inc
inc
adc
mov
out
fmuls
sub
test
test
add
mov
inc
dec
mov
mov
adc
and
fidivrs
pop
mov
sahf
aaa
sub
push
cmp
out
or
pusha
sub
xor
repz
es
push
push
adcl
subb
push
sbb
cwtl
xchg
adc
mov
and
popf
fldcw
add
sub
inc
mov
test
mov
mov
movsl
das
shrl
mov
mov
pop
aaa
push
inc
mov
rcrb
ss
mov
ret
sahf
data16
push
add
push
xor
or
and
sub
test
pop
mov
mov
push
jae
cs
jg
dec
pop
inc
aaa
lret
call
dec
sbbl
jmp
ficoms
mov
mov
std
cwtl
push
mov
push
jbe
dec
scas
sub
insb
test
mov
lret
das
mov
in
mov
lods
adc
mov
sbb
cmp
inc
aad
push
mov
pop
sbb
ljmp
movsl
pop
inc
push
or
inc
rcrl
adc
lcall
insb
outsb
jmp
dec
inc
test
jecxz
dec
lods
mov
inc
aad
test
sti
sbb
mov
jae
sbb
inc
fcompl
insl
add
xor
inc
pop
aaa
mov
push
lds
popa
sbb
push
sub
pop
out
cs
das
in
push
xor
dec
push
shlb
inc
mov
cmpsb
dec
adc
adc
sub
das
push
es
pop
push
inc
mov
mov
adc
xor
cmc
push
add
out
rclb
aaa
ja
add
cmc
lret
test
mov
pop
imul
inc
shrl
sbb
aam
and
xchg
mov
jnp
outsb
mov
inc
imul
xlat
push
cmp
xchg
call
push
add
xchg
test
test
aad
sub
xor
adc
cld
sub
cmc
xchg
pop
push
add
mov
lock
sub
inc
push
inc
lret
inc
out
dec
jle
or
sub
push
or
add
lea
incl
mov
inc
addr16
mov
xor
int
or
add
out
mov
push
cmpb
push
lret
imul
sub
push
test
push
ss
imul
and
mov
cmp
ret
adc
loop
cmp
mov
lret
rclb
in
add
movsl
inc
mov
jo
movsl
ret
push
xor
xor
xchg
fadd
inc
cmp
loop
jns
inc
insl
rorl
addl
out
or
push
int3
ss
cwtl
pop
push
mov
dec
es
xchg
adcb
stos
into
aad
movsl
mov
jae
sbb
aam
push
push
pop
sti
xchg
pop
sbb
imul
inc
mov
or
xchg
or
jns
outsl
push
shll
outsl
mov
mov
adc
int3
andl
in
add
call
mov
and
testb
inc
mov
pusha
inc
cwtl
pop
cmp
mov
stos
jl
in
add
pop
xor
stos
push
xor
das
xlat
mov
push
push
mov
loop
dec
popf
stos
xchg
fdivrp
inc
imul
pop
push
orb
inc
mov
inc
js
xor
test
push
insb
mov
sbb
adc
xchg
sub
mov
jge
mov
sahf
clc
mov
cld
ficompl
push
or
jecxz
mov
inc
and
push
mov
lock
pop
test
popl
mov
enter
ret
enter
mov
pop
insl
mov
inc
inc
push
cwtl
sub
dec
shrl
and
aam
imul
aam
adc
lret
add
inc
adc
pop
mov
push
push
mov
or
sub
lods
push
jo
sarl
mov
jb
test
sbb
ljmp
mov
push
and
inc
add
jne
pop
imul
push
or
subl
inc
imul
cmp
sti
jle
add
lods
cmp
imul
add
and
nop
adcl
xchg
loop
inc
enter
sbbl
adc
or
push
bound
or
movsl
stos
int
inc
ret
loop
push
ret
shlb
in
push
push
test
inc
imul
lods
cmp
pop
mov
adc
popf
pusha
and
test
mov
outsb
or
ja
push
push
push
pop
jmp
shlb
movsl
andps
mov
jne
imul
push
or
rorb
inc
stos
push
xchg
xchg
lret
push
sub
in
shrb
jl
imul
je
lcall
push
test
mov
cmp
inc
outsl
pop
mov
and
dec
add
mov
dec
jb
xorb
sub
pop
cmpsb
push
je
mov
xor
dec
popa
xchg
xchg
sbb
je
rorl
cmp
dec
xor
cwtl
mov
pop
xchg
inc
or
into
push
and
mov
or
cmp
push
out
mov
arpl
dec
xchg
subl
daa
push
orb
or
insl
lods
adc
mov
add
cmc
mov
insl
mov
adc
sbb
adc
and
inc
mov
mov
xchg
or
shll
push
bound
sbb
aam
mov
pop
pop
push
push
movl
lods
xchg
outsb
mov
popa
lock
push
movsl
inc
cmp
add
leave
xchg
cmp
push
inc
pop
testb
enter
ljmp
movl
push
xchg
ror
mov
js
pop
cmp
cmp
icebp
and
and
orl
push
test
sbb
test
test
pop
inc
imul
lods
insb
pop
fistl
adc
call
dec
push
push
test
and
jb
xor
inc
mov
test
pusha
aaa
in
fidivs
mov
add
in
push
add
sub
mov
mov
cmp
mov
lcall
cmp
mov
mov
mov
or
add
test
sub
mov
push
test
mov
lcall
jmp
or
or
aad
inc
push
aam
insl
mov
movsl
pop
aad
in
cmp
mov
mov
cmpsl
in
adc
xchg
fcomip
imul
into
scas
movsl
cltd
adc
test
pop
hlt
jno
jno
inc
test
inc
xor
mov
adc
and
adc
fs
stos
push
adc
jae
sub
xchg
mov
inc
mov
inc
rolb
push
icebp
xchg
or
dec
sbb
sbb
xor
pop
add
add
cmp
mov
je
scas
sbb
xor
cld
and
push
movsl
cmpsl
push
xor
rcll
sbb
sbb
xor
jp
xchg
sub
stc
push
cs
inc
pop
int3
inc
subl
xor
jb
xor
sbb
jno
pop
xchg
push
push
mov
call
xor
fnsave
mov
movsl
inc
imul
stos
sub
mov
jae
pusha
es
pusha
mov
mov
sub
test
jmp
into
or
call
inc
sub
inc
out
cmc
jae
mov
cmpsb
in
mov
int
cmpsl
jmp
adc
push
xor
jecxz
rcrb
push
insl
push
jnp
cs
mov
roll
inc
lds
je
mov
testl
ja
mov
movsl
cltd
sbb
push
sbb
xor
dec
lods
cmpsl
test
xchg
test
rcrb
cmc
push
das
adc
pop
mov
faddl
xor
sbb
gs
sbb
int
jno
stos
pop
push
or
xor
mov
fiaddl
and
push
mov
and
sub
imul
pop
int3
cmp
enter
inc
adc
loope
xchg
mov
fcoml
rcrb
out
add
inc
or
inc
fildl
ds
pusha
and
pop
mov
push
test
push
sub
inc
aas
gs
imul
adc
and
adc
lret
jecxz
mov
aam
lods
push
enter
mov
xchg
mov
mov
pop
jmp
subb
sub
adc
enter
dec
pusha
mov
aaa
push
xor
lods
dec
ljmp
stos
cwtl
push
or
mov
push
das
jecxz
push
inc
lods
icebp
mov
sbb
push
sbb
fiadds
pop
mov
nop
addl
lock
or
cmc
je
rolb
test
mov
mov
mov
test
sbb
insl
xadd
mov
imul
decl
inc
mov
loop
loope
xchg
aam
mov
push
add
or
inc
xchg
sub
cld
std
add
push
faddl
rolb
pop
mov
out
mov
lret
setp
test
push
sbb
xchg
pop
pusha
daa
xchg
orb
lods
mov
vpmullw
lods
int
xor
mov
or
or
in
lods
lret
add
clc
rcll
push
mov
mov
push
mov
es
aad
inc
xchg
arpl
add
aad
add
insl
push
jae
xor
inc
adc
stos
push
icebp
push
aam
xchg
xor
push
sub
cmpsl
or
add
sub
gs
lret
and
in
push
es
mov
lea
test
and
xor
jecxz
push
mov
cmpsb
inc
and
popf
mov
outsl
hlt
test
push
or
and
pop
es
inc
add
in
push
imul
pop
mov
mov
add
movsb
xor
enter
jmp
adc
inc
fadds
mov
xor
jno
arpl
push
cmp
push
aad
xchg
or
lods
or
sbb
pop
fiadds
dec
repnz
lods
push
movsl
inc
addr16
imul
loopne
das
loop
xor
push
jb
mov
nop
sub
popa
inc
pop
mov
or
add
push
and
push
or
es
out
sub
xchg
das
lock
push
andl
xor
sub
sahf
jb
ret
and
and
loop
pop
and
push
ret
jl
js
push
inc
inc
mov
xchg
add
cmp
repnz
roll
jecxz
mov
aaa
stos
into
mov
xchg
sbb
mov
ror
push
rorb
pop
push
jae
lock
and
mov
xor
sbb
lods
push
and
push
pushl
ss
pop
lret
mov
repz
sbb
add
fldt
xchg
subl
dec
inc
push
mov
int
mov
push
lret
or
dec
xor
inc
dec
int3
push
xor
lcall
fs
iret
or
or
arpl
push
inc
aad
push
insb
add
hlt
aad
cmc
cmpsl
push
fwait
shlb
sbb
fstl
lods
lret
addb
pop
cmp
sbb
outsb
xchg
subb
lds
test
movsl
rcl
add
xchg
sbb
cmp
sub
adc
adc
cmp
lods
mov
inc
int3
and
xchg
push
mov
sub
push
out
fdivp
pop
mov
rcrl
xor
xchg
pop
inc
loopne
mov
sbb
push
ror
push
adc
cmp
test
jo
out
sub
icebp
gs
cmpsb
inc
pushf
mov
cltd
push
data16
in
push
and
adc
mov
mov
inc
mov
repnz
adc
xorb
xchg
add
ja
mov
popa
call
cld
cmp
xor
push
xor
in
adc
push
or
add
jge
sbb
xor
out
push
push
push
mov
xor
jge
outsl
aam
xor
xchg
xchg
jmp
and
xor
scas
push
les
fs
aam
or
or
fisubs
add
push
xchg
ja
fsubrs
mov
pusha
iret
adc
push
dec
adc
add
mov
xor
inc
mov
mov
test
pushl
mov
cs
inc
mov
xor
mov
inc
adc
or
push
adc
repz
je
xor
mov
scas
push
mov
pop
adc
shrb
mov
adc
adc
test
sub
add
loop
das
or
inc
stos
subb
dec
push
pop
push
adc
dec
mov
and
popf
push
test
push
test
mov
mov
sub
push
out
mov
aad
xor
cld
fiadds
decb
mov
es
push
mov
popa
pop
mov
push
fiaddl
mov
adc
adc
jg
insl
sub
pop
cmp
push
push
imul
jmp
call
adc
outsb
icebp
imull
mov
push
test
popf
jl
jo
stos
shrb
inc
mov
adc
and
or
cmp
loop
mov
aad
and
orb
es
insb
pop
pop
leave
push
mov
add
mov
xor
addb
rclb
shrb
mov
fsubs
mov
movsl
inc
pop
push
scas
mov
mov
dec
fldenv
and
push
xchg
push
push
push
mov
test
test
hlt
gs
sbb
push
jns
decl
addl
jmp
pop
push
lea
or
movsl
lret
test
lods
inc
and
cmp
add
pop
mov
inc
xchg
push
mov
push
mov
push
push
rcl
sub
inc
cmp
inc
lret
sub
in
mov
mov
jle
inc
movsb
mov
push
pop
stos
xor
mov
leave
insl
cmp
lods
add
pop
mov
sub
jne
mov
stos
sarl
ss
inc
dec
sti
andl
aas
jno
cltd
sbb
adc
add
push
ret
mov
insl
sbb
and
xchg
or
in
subl
inc
mov
sub
mov
inc
out
ret
out
dec
insl
sub
inc
fsubrl
pop
push
gs
push
or
loop
push
pop
mov
xor
call
rcrb
test
dec
subl
add
mov
movsl
sub
les
add
mov
imul
xchg
cmp
std
push
push
push
add
push
or
sbbb
inc
jle
cmpb
adc
cmc
pop
pop
lods
mov
dec
fisubrl
pop
push
jne
xchg
mov
adc
and
inc
and
jle
pop
inc
sub
loope
xor
stos
clc
fimull
inc
xor
aam
mov
mov
loop
mov
or
pop
and
or
pusha
push
lret
mov
dec
gs
lods
add
ss
negl
mov
icebp
xchg
lock
roll
sub
push
data16
gs
xchg
sub
xchg
or
mov
pop
data16
inc
stos
mov
out
loopne
push
push
push
add
xchg
xorb
test
inc
xor
outsb
pop
or
subl
movsl
lret
push
or
stos
cltd
jo
xchg
movsb
and
xchg
aad
pushf
push
sbb
stos
sbb
xor
mov
push
sub
aaa
iret
aad
cmp
lods
aam
jp
leave
out
push
inc
mov
movsb
mov
mov
mov
pusha
pusha
pushf
js
push
add
inc
cmp
add
or
lret
mov
xor
mov
mov
call
and
pop
lea
sub
inc
xor
mov
xor
push
xor
aad
adcl
push
xchg
mov
push
lods
inc
and
je
mov
movsl
jno
test
enter
push
lea
mov
stos
shrl
lds
push
and
push
mov
cmp
lcall
adc
mov
sbb
inc
ret
mov
and
imul
pusha
imul
jb
inc
int
mov
push
pusha
sub
mov
push
pop
and
adc
dec
cs
and
cmc
and
adc
push
mov
mov
or
and
insl
or
stos
push
adc
mov
mov
das
aam
inc
push
push
mov
add
ljmp
and
or
inc
mov
push
lock
mov
mov
sarl
inc
int3
mov
call
dec
dec
jbe
lock
jns
and
sub
cld
adc
or
subl
xor
push
lock
jns
mov
jg
pop
cmp
adc
cmpsb
scas
or
xor
andb
sahf
sub
push
rcll
in
inc
push
xchg
jo
push
xchg
mov
mov
outsb
xchg
test
mov
sbb
stos
mov
mov
cmp
imul
xor
and
xor
lret
inc
stos
pusha
dec
bound
lods
add
subl
data16
sahf
sub
adc
sub
xor
xor
mov
mov
mov
sbb
push
loope
push
push
push
outsl
pop
pop
sub
inc
and
in
ss
adc
xchg
dec
cmc
pop
addr16
push
cmp
test
rcrb
aaa
sahf
and
inc
test
push
push
add
ss
rcr
mov
das
js
mov
or
adc
add
sub
sub
inc
inc
sahf
addps
inc
imul
lods
mov
xchg
insl
lret
sbb
adc
aad
push
and
sub
jno
sbb
into
pop
inc
test
mov
jbe
sub
adc
add
sub
mov
push
insb
or
lods
outsb
push
lods
ret
adcl
mov
filds
xor
push
push
jne
cltd
pop
jno
in
movsl
ret
jecxz
fistps
sub
imul
inc
sub
das
cmp
movsl
jb
sbb
mov
dec
inc
cld
lcall
je
cmp
pusha
ret
lods
dec
shl
or
push
or
out
add
mov
pop
rcrl
adc
mov
add
lds
add
gs
movsl
or
mov
aam
add
inc
in
inc
gs
inc
inc
or
cmp
scas
inc
in
aam
push
or
lea
jle
mov
fs
adc
cs
pop
addb
adcl
cwtl
push
inc
lods
cmc
in
pop
xor
pop
lea
jo
lret
ret
div
pusha
pop
mov
sub
lret
mov
in
es
jge
js
sub
adc
fcomps
daa
roll
add
and
jb
iret
data16
inc
insb
es
lret
adc
mov
or
fnsave
xor
inc
es
imul
xchg
inc
addb
pop
imul
test
das
push
or
es
push
out
sub
push
or
data16
cltd
push
cmp
or
add
mov
scas
push
pop
or
ds
fstps
movsl
test
push
sbb
cmp
sbb
aam
add
nop
imul
sub
cvtsd2ss
lea
es
pop
scas
mov
aam
ss
add
xchg
xchg
pop
and
jbe
inc
cltd
inc
int
adc
xchg
test
push
popa
lods
stc
andl
adc
ja
test
stc
pop
inc
pop
cmp
shlb
imul
mov
mov
and
mov
int
int
mov
loopne
stos
mov
icebp
insl
sub
xchg
lret
jge
cmp
push
jno
pop
add
loope
imul
sbb
or
push
inc
mov
insl
push
pop
leave
sbb
cmc
xchg
pop
inc
jge
jne
inc
into
push
rolb
add
adc
sub
cmpl
xchg
in
push
fs
std
add
inc
imul
mov
mov
and
loope
add
xchg
xchg
push
cmpsb
add
adc
les
sarb
inc
push
push
or
push
mov
jae
stos
lret
stos
xor
cmc
dec
xor
inc
jb
push
mov
loope
in
and
imul
mov
mov
lods
adc
pop
cwtl
movsl
xchg
loopne
xor
xchg
std
shll
add
inc
stos
mov
xchg
mov
push
sub
sbb
outsb
cmc
idivl
stos
inc
jmp
mov
ss
push
outsb
je
es
int
push
scas
clc
push
adc
dec
out
adc
pop
sahf
cmp
dec
mov
sbb
pop
imul
xor
jle
mov
mov
imul
bound
push
and
mov
aaa
dec
xchg
dec
push
stos
shll
imul
fisttps
sub
and
in
inc
pop
test
lock
rcr
push
xor
push
add
xor
mov
push
inc
push
jo
loope
cmp
push
aad
loope
pop
mov
aad
inc
test
mulb
or
lods
xchg
stos
add
cs
stos
stos
mov
jl
stos
popa
outsb
icebp
loopne
ror
lret
aad
ljmp
stos
out
sbb
lds
test
push
xchg
cmp
subb
mov
hlt
and
imull
pop
push
and
pop
aam
add
adc
adc
and
inc
inc
dec
ret
addl
push
push
call
out
cmp
push
sbb
push
test
jmp
cmp
or
lods
push
mov
mov
jb
insb
cmpsb
out
add
push
or
sahf
ror
shrb
sbb
mov
jb
or
sbb
into
std
adc
push
ljmp
and
or
pop
sbb
cltd
test
add
xchg
push
push
add
add
push
push
jb
push
pop
repz
jmp
adc
fdivrp
aad
push
mov
inc
or
outsl
gs
hlt
loope
add
cltd
push
cmp
nop
andb
jno
scas
add
loopne
mov
adc
stos
in
push
pusha
sub
and
pop
xor
inc
mov
inc
in
add
int
stos
push
mov
enter
aas
dec
sbb
inc
lock
jl
fldl2t
lcall
test
loop
jmp
inc
sbb
divl
dec
not
mov
mov
or
call
mov
add
adc
sub
ljmp
enter
movsb
adc
sub
jg
gs
add
adc
jg
cli
pop
cmp
out
xchg
dec
and
add
es
and
repz
sbbl
sbb
in
test
jnp
mov
push
sub
fidivrs
mov
push
aam
data16
es
inc
mov
xorb
push
mov
sbb
push
dec
mov
mov
sub
outsb
cli
sbb
add
imul
mov
sub
push
nop
cmp
rclb
add
stos
lret
push
test
test
call
imul
add
push
sub
mov
dec
add
push
mov
jp
adc
mov
dec
sti
cmpsb
mov
inc
inc
add
and
stos
xchg
mov
dec
test
bound
push
or
and
dec
ret
push
jae
test
icebp
pop
addr16
ss
cmp
adc
and
shrl
xor
xchg
rcll
jnp
jnp
push
inc
enter
mov
fidivs
and
and
fcmovnbe
imull
inc
out
inc
or
or
push
cs
mov
jo
push
mov
inc
arpl
push
mov
js
push
xchg
mov
inc
cmp
xchg
pusha
mov
add
push
mov
inc
inc
subl
je
sub
xchg
sub
mov
test
push
lods
lods
bound
test
mov
ds
fidivl
ljmp
and
adc
fisubrl
inc
lods
pusha
inc
adc
lods
mov
je
add
and
or
add
inc
xchg
xor
adc
pushf
mov
loopne
inc
xchg
and
dec
sub
sbb
dec
incl
cltd
inc
pop
aam
push
aam
icebp
fisttpl
out
out
test
andb
fstpt
add
ljmp
mov
ficoml
iret
lahf
push
repnz
pop
push
aad
cmp
daa
outsb
out
xorb
sub
mov
add
add
enter
jbe
pushf
enter
mov
sbb
pop
mov
add
pusha
dec
pop
aam
addr16
std
test
shrl
or
enter
push
inc
jg
negl
mov
and
inc
add
add
fwait
add
cmp
int3
repnz
mov
pop
f2xm1
or
mov
add
sbb
cld
pop
push
add
rorb
push
pop
ljmp
mov
loope
xchg
push
or
ret
mov
cmp
dec
pusha
enter
add
push
sbbb
sarl
out
add
in
flds
imulb
mov
adc
test
js
push
fists
lods
mov
or
dec
and
jnp
sbb
push
sbb
xor
aaa
jns
jo
mov
mov
xor
mov
fisttpll
jp
add
in
cmp
fs
arpl
push
iret
loopne
cmp
leave
mov
mov
mov
jae
inc
add
sub
arpl
int
in
xor
loope
and
addl
cli
push
out
loope
mov
out
scas
stos
fisttpll
adc
and
sarb
jl
and
adc
mov
and
xchg
leave
ret
and
xor
adc
lret
add
sar
add
in
lahf
or
addb
inc
or
mov
int
or
adc
mov
sar
push
je
outsl
jmp
push
xlat
adc
mov
add
imul
dec
dec
jb,pt
jg
lcall
mov
mov
ljmp
fnstcw
stos
mov
adc
push
sbb
xor
scas
jmp
xorb
mov
dec
inc
pop
fs
mov
std
mov
dec
imul
les
scas
cmpsb
push
push
mov
xchg
sub
xchg
push
inc
fmull
cmpsb
mov
jmp
add
stc
mov
jg,pt
into
je
aas
stos
jmp
sbb
shr
jns
ljmp
mov
mov
pop
je
add
vdivsd
jecxz
jb
push
add
call
repnz
xor
fidivl
mov
in
hlt
les
rorb
sub
call
ja
jnp
adc
sub
shlb
lcall
pushl
cs
call
inc
sahf
movsb
popf
and
mov
repz
aam
lods
jno
or
jns
cmc
or
adc
fdivs
add
inc
mov
scas
lahf
ret
pop
fucomi
dec
shlb
call
inc
pushw
aad
push
mov
popf
lahf
stos
jno
daa
xchg
add
daa
pusha
jmp
in
pusha
or
bnd
rorl
xchg
test
test
bound
or
into
or
dec
jle
sbb
jmp
fwait
add
xchg
aaa
dec
pop
sub
sbb
into
imulb
xlat
mov
mov
dec
push
cmp
imul
jnp
add
mov
div
fisttpl
push
fldcw
inc
and
jb
push
xor
mov
xchg
call
hlt
sti
inc
outsl
sahf
repz
js
stos
out
insl
jbe
repz
mov
decl
xor
push
inc
mov
jp
sub
push
adc
jnp
pop
cmp
call
idiv
sub
ja
push
jmp
push
andb
insb
imul
in
jl
xchg
insl
fldl
test
mov
pop
push
xchg
test
incl
scas
jecxz
orb
cmp
dec
dec
xor
idiv
xor
ljmp
arpl
and
add
clc
sub
mov
push
and
dec
imul
lahf
sub
imul
adc
add
incl
out
push
inc
inc
mov
mov
scas
je
insb
rcrl
and
and
cmp
call
mov
or
or
fs
push
jmp
inc
pop
xor
nop
and
loop
add
cmpsb
xor
decl
mov
pop
mov
xchg
es
jg
ret
mov
cmp
fdivl
scas
scas
sarl
sti
dec
lcall
pop
sbb
les
stc
pop
sbbb
cmp
ret
cmp
and
mov
add
inc
in
cmc
mov
addl
push
push
mov
jae
ret
lcall
lods
mov
std
add
ja
adc
lahf
lret
mov
lcall
hlt
jge
pop
in
aaa
loop
dec
jge
xor
adc
pop
pop
ljmp
call
in
orb
push
adc
jns
cmp
les
ljmp
xchg
jns
shrb
imul
cmp
pop
lret
mov
and
pop
int
mov
jmp
jg
jnp
or
sub
cli
mov
clc
stos
jnp
lods
pusha
jb
outsb
cmpsb
and
gs
call
cli
mov
movsl
fnsave
adc
test
sti
jns
sahf
pop
jl
xor
xor
incl
inc
mov
cwtl
jo
sub
jnp
xchg
cld
cmp
test
xchg
cmp
decl
pop
jb
mov
sub
inc
sub
je
and
add
call
test
cmpsb
or
jbe
and
push
push
push
rcr
lret
cli
sub
movsb
fwait
aad
cmpsb
call
mov
mov
divl
mov
ret
movsl
ja
mov
cmp
aam
mov
nop
xchg
sub
sub
cld
incl
frstor
xchg
popf
sub
mov
xor
dec
jl
and
push
push
push
lret
adc
mov
ds
add
and
cmp
fidivs
mov
mov
cmpsb
iret
test
mov
mov
pop
popf
in
push
xchg
ja
subb
decl
cli
fadd
pop
icebp
inc
imulb
jl
mov
into
jnp
push
jae
ljmp
and
sbb
das
xchg
push
test
xchg
mov
push
cmp
test
test
out
lcall
push
lret
fdivr
insl
dec
dec
movb
push
cmp
scas
in
sti
lock
test
nop
inc
push
push
push
ret
xor
add
decl
push
loope
sub
std
adc
ficoms
inc
popa
xchg
pop
movsb
std
je
int
lds
jmp
pop
outsb
inc
adc
pushf
sub
ja
xchg
outsl
nop
mov
in
andl
lods
jmp
push
xchg
outsl
mov
cs
aas
bound
xorl
shll
call
inc
xchg
rorb
push
mov
rcl
fdivrl
pop
dec
jg
decl
bswap
inc
iret
stc
mov
mov
adc
in
dec
or
jmp
sub
repz
loope
cwtl
int
inc
jo
mov
pop
movsb
cmpsb
in
xor
sbb
out
fadds
mov
out
pop
adc
loope
mov
les
cmpl
js
fisubs
lock
es
add
or
data16
call
sbb
jg
or
push
nop
cmp
mov
movsl
pop
arpl
dec
fmuls
jmp
aam
clc
inc
adc
inc
push
inc
jg
cmp
and
popf
cmp
push
movsw
xor
jmp
andl
pop
stc
push
mov
bound
add
sub
push
cmpsl
adc
dec
inc
sub
ljmp
push
jmp
xor
push
fwait
hlt
std
loop
xchg
sbb
cli
xchg
pushl
ja
and
dec
xchg
clc
mov
adc
out
or
inc
mov
imul
call
dec
mov
jbe
pop
lods
adc
add
shrb
cltd
iret
dec
loope
dec
mov
std
test
mov
sub
dec
insb
dec
lret
sbb
in
pusha
lods
enter
ds
out
inc
inc
mov
outsl
add
out
popa
xchg
lcall
repnz
jg
jmp
and
aad
push
call
sarl
sarb
jne
mov
adc
loope
out
inc
inc
push
ret
cli
insb
push
lods
outsl
movsl
iret
movsl
cmp
incl
add
xlat
jns
imul
mov
add
push
lret
add
je
std
nop
in
jg
call
fistps
int3
mov
mov
xor
in
call
ficompl
adc
js
arpl
daa
cltd
ds
lahf
popa
xchg
mov
das
data16
out
into
mov
sahf
addb
add
lods
inc
xchg
repz
adc
imul
inc
xor
jne
mov
sub
sbb
hlt
jle
sbb
mov
insl
xchg
lahf
sbb
jns
add
sbb
cld
xor
adc
jg
cmp
into
shr
in
sbb
sub
test
test
and
mov
add
adc
int3
mov
mulb
mov
test
jg
xor
nop
cld
call
js
cs
adc
pop
fstl
mov
inc
pop
fisubl
pop
xchg
sub
jmp
stc
dec
sub
adc
and
in
inc
cltd
fwait
jg
imul
scas
jns
push
push
mov
lds
sbb
orps
pop
mov
pop
mov
nop
jns
iret
adc
push
aam
scas
push
push
sbb
jmp
subb
int3
cmp
sbb
inc
lods
out
pushf
out
fsubr
jbe
inc
pusha
push
pop
sub
push
std
mov
pusha
cs
inc
push
pop
mov
repnz
in
add
xchg
test
mov
fmuls
out
pop
sbb
dec
sahf
popa
push
inc
cmp
push
push
addr16
and
aad
cmpsl
cs
jg
out
or
subb
jmp
inc
sbb
adc
repnz
mov
sbb
pusha
jns
sub
ss
test
iret
clc
in
repz
fisttpl
test
pop
sub
pop
scas
aaa
in
arpl
xlat
jge
cmp
daa
sbb
iret
ss
icebp
cmpsb
inc
pusha
fstpt
inc
sar
pop
pushf
push
mov
sti
fs
addl
pop
rcll
pop
mov
jge
mov
cmp
ret
cmp
jp
pusha
dec
and
ljmp
lock
pop
jbe
dec
test
cmc
fwait
aaa
pop
mov
decl
fisubrl
gs
insb
shrl
fcomps
cmc
cs
mov
xor
fldt
outsl
sbb
push
inc
pop
shll
pop
lcall
sub
jle
ret
decl
test
gs
mov
xchg
or
clc
mov
pop
xchg
out
mov
hlt
cmp
mov
pop
nop
sahf
outsb
add
dec
xor
mov
jmp
mov
movsb
cmp
ffreep
ret
mov
or
xlat
fs
sbb
dec
lretw
stc
cwtl
adc
incl
test
mov
out
xchg
lea
cmp
adc
and
int
out
mov
cs
call
cli
or
lods
aam
xor
jl
inc
pop
orb
push
cmp
test
push
pop
lods
out
std
sub
inc
sbb
cmp
jge
out
sub
adc
lcall
mov
inc
fcompl
jns
cmc
add
mov
xor
xchg
inc
int3
lret
clc
std
les
add
or
call
pushl
popf
gs
enter
adc
mov
sub
mov
rol
inc
repnz
orb
popf
insl
sub
rorl
nop
aam
pop
push
pop
ljmp
jno
mov
pop
fisubrs
fildl
out
sbb
testb
adc
push
fs
xor
pushf
pop
mov
sub
mov
mov
adc
in
out
jg
movsl
cmpsl
mov
add
lcall
inc
gs
dec
fwait
cmp
outsb
xadd
xor
mov
adc
ljmp
je,pn
adc
mov
movsb
mov
aam
arpl
cmp
jg
das
lock
lret
and
mov
cmp
sub
data16
daa
test
stos
inc
push
int3
lcall
inc
int
jge
mov
or
popf
outsl
sbb
cmpsb
sub
xchg
mov
sub
les
rcr
mov
jb
push
daa
sbb
xchg
pop
or
or
or
inc
dec
add
mov
shlb
fcmovnbe
outsl
std
push
jmp
jno
lock
push
push
std
jno
cmp
and
dec
fs
data16
and
sub
mov
cld
push
dec
fldenv
imul
mov
scas
lea
test
and
mov
xchg
outsb
jl
jg
lcall
or
xchg
fistpl
out
pop
paddq
sti
add
add
cs
pop
jmp
mov
push
loopne
cmp
lret
movsl
jmp
lahf
mov
mov
in
pop
mov
pop
mov
xor
mov
stc
inc
outsl
mov
rcl
je
jmp
inc
iret
clc
incl
leave
js
push
pop
xor
and
insl
dec
xchg
push
or
sbb
addr16
and
pushl
fcomps
push
xchg
cs
inc
xor
insb
sbb
cwtl
sar
mov
imul
rorl
sbb
nop
call
repz
sub
adc
jmp
fdivl
xor
add
adc
mov
jg
decl
mov
clc
push
mov
push
and
pushf
mov
ljmp
push
fisttpl
dec
xlat
fdivl
stos
and
push
loope
pushl
cltd
loop
mov
sub
mov
mov
js
xor
cld
cmp
fs
adc
out
and
cli
cmp
mov
jmp
aaa
hlt
rol
ss
lcall
test
outsl
mov
adc
aad
das
sahf
jnp
mov
icebp
dec
pop
inc
mov
xor
sar
or
inc
js
inc
aam
popa
mov
mov
aad
pop
xchg
inc
xchg
push
xchg
out
push
xchg
leave
mov
repz
sbb
and
stc
xchg
mov
divl
xchg
jmp
ljmp
add
repz
fisubrl
js
jmp
insl
xlat
in
call
mov
insl
add
lea
iret
lods
sub
subl
lcall
mov
repnz
in
dec
push
xchg
jle
pop
jno
ret
push
mov
hlt
call
dec
std
int3
jb
cmpsb
push
pop
popa
xchg
std
adc
dec
sbb
addr16
add
xchg
les
cld
jg
out
pushf
pop
jmp
adc
sub
popa
cmpsb
lahf
out
inc
dec
fdivrl
sub
lcall
shlb
out
add
mov
dec
lahf
enter
cwtl
stos
adc
and
inc
arpl
mov
push
mov
in
adc
int
ret
lcall
ficoms
ljmp
xchg
and
mov
shl
ret
push
jns
pop
lea
mov
das
push
loopne
mov
nop
dec
jp
mov
mov
inc
dec
or
xlat
xchg
fistpl
mov
repnz
rcr
mov
lcall
mov
dec
jecxz
rolb
into
fsubl
sarb
sbb
adc
cmp
pop
push
jb
sbb
call
jo
pop
push
cmp
or
dec
xchg
idiv
call
mov
js
or
addr16
or
pushf
stos
or
or
xchg
ljmp
cld
push
fst
rdmsr
add
cmp
addr16
add
jge
imul
mov
je
icebp
sarb
add
pop
dec
cmpsl
jnp
cld
add
ljmp
scas
aad
and
push
inc
mov
in
addr16
and
sbb
xchg
sbb
xor
fs
shll
cmp
jb
or
or
lods
bswap
sbb
push
dec
flds
jg
push
or
pop
pop
push
push
lcall
and
mov
mov
cmpsb
or
scas
icebp
lods
jnp
stos
test
jno
pop
mov
outsl
cld
jg
out
sar
push
push
mov
std
jg,pt
xchg
stos
repz
gs
pushl
cmp
shlb
dec
dec
ror
and
frstor
cwtl
push
inc
mov
lcall
cld
ret
loop
xor
sub
bound
xchg
incl
push
adc
cli
pop
or
or
sub
scas
xor
xchg
in
test
rcll
jp
mov
ljmp
stos
lea
cltd
pop
mov
lret
adc
lcall
xchg
pop
jmp
into
sub
dec
scas
or
das
pusha
lods
testb
xchg
jge
pushl
or
sbb
stos
enter
pop
cli
test
test
cs
loopne
jp
incl
test
mov
gs
int
sub
ljmp
xor
pop
ror
or
add
pushw
mov
sub
pop
popf
push
pop
lock
or
or
mov
sbb
dec
or
clc
inc
outsb
fsubrl
ficomps
dec
insb
mov
mov
std
inc
jae
fimull
sub
sub
mov
sarb
in
cmp
ret
xchg
mov
sbb
mov
fisttps
cmpsl
push
lret
hlt
loop
cmp
incl
xchg
dec
pop
ret
repz
insb
xor
fsubl
das
fwait
sub
enter
incl
or
dec
and
or
popa
sbb
rcrl
mov
cli
pop
ret
outsb
lret
add
xor
cmc
clc
ljmp
sub
ss
out
cmp
lods
adc
sbb
pop
lock
in
xchg
pushf
movsl
sub
and
mov
push
sbb
arpl
dec
pushf
and
jmp
pop
inc
pop
pusha
ret
mov
xchg
jo
lahf
inc
mov
cmp
fmul
mov
rorb
outsl
icebp
incl
stc
xor
add
mov
pop
add
ljmp
loop
int
dec
js
scas
js
fsts
mov
or
aas
lock
add
pop
adc
cmp
roll
jg
mov
scas
mov
popw
filds
insb
das
add
adc
pop
pusha
mov
cli
cmp
cmp
fidivs
aaa
lahf
cwtl
stos
mov
sub
aas
fs
lea
jnp
fucomi
call
rol
das
inc
mov
fisttpll
int
outsl
out
add
fs
lret
cmpl
decl
test
pop
movsl
jle
out
scas
sbb
jge
push
jb
popa
pop
pandn
ljmp
and
jl
aad
fwait
test
and
stos
sub
cmc
fistpl
pop
data16
call
call
mov
loop
xchg
out
and
loope
andb
das
hlt
pop
outsl
lea
jae
lret
cmp
push
push
pushf
and
sbb
jg
aad
std
pop
inc
adc
mov
call
loopne
iret
jg
cltd
xor
into
cmp
xchg
adc
xor
adc
pop
cli
movsb
mov
scas
shlb
pusha
and
sbb
mov
ret
insb
fisttpl
sar
xor
sub
imul
cld
incl
popa
shlb
mov
into
addr16
xor
idiv
sub
mov
sbb
outsl
cld
outsl
popa
jl
mov
xchg
dec
mov
sub
fwait
inc
xchg
popf
mov
sub
filds
pop
rcrl
out
loopne
inc
and
dec
mov
movl
pop
cld
js
lods
pop
mov
jle
mov
sub
mov
repz
jmp
scas
mov
jbe
sub
aas
xchg
out
adc
mov
mov
call
outsb
or
aam
in
push
dec
aad
mov
adc
push
lret
out
add
mov
xor
std
ljmp
cmpsl
adc
pop
jno
xchg
lods
sti
hlt
les
sti
js
fdivrp
ljmp
or
pop
aaa
push
dec
movsl
lret
rclb
lock
pop
inc
jns
loopne
jmp
je
fisubrl
push
cltd
cld
cmp
sti
lahf
sbb
inc
push
imul
lock
cwtl
lds
dec
or
push
sarb
adc
or
call
aad
jmp
lahf
jl
pushf
out
test
inc
cmp
das
aas
sbb
xlat
inc
arpl
sbb
xchg
xlat
xlat
and
pop
cld
ret
cwtl
lret
ret
mov
outsl
cld
mov
xor
dec
mov
outsl
std
jmp
sahf
or
xchg
scas
shll
pushf
inc
lock
movsb
filds
cmp
lcall
repz
mov
pop
bound
aaa
add
inc
xor
jns
rcr
add
data16
stc
dec
mov
fstl
xor
push
dec
pop
stos
sti
jg
xor
in
ret
xchg
fs
pushf
xchg
idivb
repnz
mov
mov
dec
jge
dec
push
mov
dec
sub
mov
shlb
mov
fstpl
pop
xchg
mov
cmp
jbe
xor
fdivr
lods
fst
shr
popa
xlat
mov
insl
test
sbb
and
push
mov
mov
imul
lcall
mov
jg
pop
xor
gs
repnz
mov
pop
rcl
cmpb
icebp
movsl
pop
push
in
lods
inc
lods
add
test
pop
jg
lcall
mov
push
push
lret
les
test
psubsb
ljmp
cmc
adc
and
sbb
jl
add
add
rcll
mov
jb
das
cmc
ljmp
and
insl
insb
jmp
shll
mov
cmc
add
call
mov
xlat
mov
arpl
shlb
imul
fwait
incl
cld
mov
push
xchg
pop
ficomps
cmpb
mov
and
push
imul
int3
mov
data16
or
mov
mov
adc
std
cmp
sbb
div
insl
cli
lock
xchg
mov
jge
test
push
mov
mov
das
ds
pushl
decb
out
jb
fildl
jle
adc
pmaxsw
icebp
cs
mov
inc
add
push
push
popf
jno
lods
add
incl
inc
add
or
or
mov
fsubp
call
push
lcall
add
xchg
rol
roll
adc
icebp
call
dec
sub
mov
cld
insb
ja
push
aam
out
sub
inc
les
filds
mov
loope
dec
out
pop
adc
mov
jo
mov
adc
mov
mov
mov
movaps
add
test
decl
std
inc
lock
lods
mov
push
icebp
ret
lds
xchg
jecxz
pop
cmc
aaa
loopne
jmp
mov
es
cmp
sub
cmovns
mov
mov
daa
aam
scas
aad
dec
ljmp
sti
dec
jb
mov
je
aam
ret
orl
add
ljmp
es
and
scas
es
sbb
xchg
inc
sahf
rolb
sbb
or
sti
loop
vmovups
mov
clc
pop
loopne
add
dec
cmp
test
add
hlt
mov
nop
lcall
or
fisubrs
cmp
loop
lea
jecxz
push
push
jge
repnz
decl
cmp
ficoms
inc
push
push
out
std
cmp
jmp
inc
push
addb
mov
jg
push
cmp
cli
add
pop
aad
jno
jge
and
into
mov
sahf
mov
incl
test
and
js
loop
pushl
inc
fcmovne
iret
bound
out
cwtl
sbb
jnp
mov
fisubrs
pushl
dec
setbe
push
dec
and
mov
xor
or
inc
pusha
testl
mov
das
mov
repnz
mov
push
pop
adc
fcompl
imul
jne
inc
jno
push
cmp
fidivrl
dec
xlat
enter
jg
ja
pop
dec
das
pop
push
and
add
aas
clc
cmp
sub
pushl
test
pop
ret
add
mov
stos
push
sbb
lret
sti
mov
fdivr
das
std
adc
mov
dec
cwtl
inc
test
mov
mov
lea
mov
jns
bound
jp
pop
mov
insl
leave
hlt
decl
jmp
fwait
addr16
or
add
inc
sub
test
pushl
out
iret
xorl
mov
inc
shll
jg
push
outsl
pop
pushf
inc
dec
nop
cli
pop
cli
mov
inc
push
insl
ljmp
int3
xchg
ja
lods
fldenv
xor
cwtl
into
cs
inc
adc
imul
jnp
bound
mov
mov
mov
jno
push
in
add
xlat
sub
cmp
sarb
dec
adc
sahf
lcall
clc
fwait
daa
mov
cld
lcall
jp
and
pop
inc
dec
mov
call
pop
xor
fsubrs
loope
sarl
xchg
das
dec
dec
add
ljmp
push
lret
pop
push
addr16
outsl
push
inc
imul
cwtl
aam
cmp
xor
sar
add
pop
mov
dec
lcall
inc
adc
mov
or
decl
fimuls
lcall
ret
adc
jl
dec
adc
lcall
aad
call
xchg
mov
add
mov
popa
test
push
ljmp
out
test
repnz
jle
pop
mov
xor
or
aaa
ret
sub
dec
or
mov
fwait
push
sbb
shl
mov
out
add
push
movsb
loope
fists
lods
scas
movsb
nop
call
xchg
xor
inc
sub
les
xlat
fcmovnu
mov
push
hlt
imul
incl
repnz
fwait
cmp
pop
lcall
mov
jno
or
or
pushl
mov
loope
out
dec
sbb
inc
je
ret
outsl
dec
std
dec
jb
mov
test
cld
push
push
fcmovbe
push
inc
adcl
mov
lcall
sbb
std
int
push
data16
and
fwait
sbb
lods
lods
inc
ja
stos
jnp
ljmp
es
mov
mov
in
out
push
in
jmp
out
ljmp
jmp
mov
rcrl
repz
xchg
pop
daa
ss
data16
call
jmp
xchg
aam
sbb
mov
and
or
and
fwait
das
cmc
mov
loopne
adc
cmp
clc
aas
nop
xchg
xchg
imul
jle
mov
sbb
inc
dec
add
rcrl
add
sub
es
int
mov
jmp
testb
fwait
xchg
xchg
inc
add
add
xor
inc
sti
cmpsb
ljmp
int3
cs
inc
push
add
std
pop
js
sti
push
dec
int3
xor
cmp
fnsave
test
jge
jg
lahf
push
mov
mov
xor
outsb
out
inc
ljmp
hlt
xchg
pusha
pushf
jecxz
pop
stos
fs
in
dec
ret
mov
sbb
fistpll
outsb
or
loope
xor
jg
mov
call
out
jnp
push
push
test
es
sub
inc
xor
sahf
adc
cmpsl
mov
push
dec
int
inc
jmp
xor
push
adc
sbb
lods
incl
cmpsl
es
dec
inc
hlt
adc
mov
dec
movsl
cli
clc
ljmp
shrl
cmp
and
dec
jo
pop
cmp
jae
xchg
arpl
jae
add
and
sub
xor
mov
and
or
xchg
nop
int3
cld
bound
loop
adc
addps
arpl
lcall
decl
out
push
inc
push
insb
gs
sbb
and
iret
xor
iret
and
decl
ds
jb
test
xor
dec
sbb
insb
mov
inc
xor
fmull
pushl
cld
popf
bndldx
ds
inc
dec
stc
mov
bound
mov
sbb
pushl
sub
xchg
shl
pop
sbb
jg
xor
imul
push
dec
cmp
aas
mov
ficoml
loopne
jbe
hlt
test
icebp
jecxz
dec
jg
push
sub
jg
add
nop
and
sbbl
les
bound
dec
sub
adcb
add
pushl
mov
pop
aam
enter
mov
call
les
sbb
inc
pushf
cltd
test
add
sub
stos
dec
shr
adc
clc
popf
test
pop
sahf
scas
push
test
sahf
test
xchg
lahf
inc
ret
and
dec
cmp
adc
push
mov
mov
sbb
xor
mov
mov
adc
inc
inc
pop
out
mov
mov
mov
jo
sbb
decl
sarb
outsl
fisubl
sarb
pop
xchg
pushf
mov
xchg
clc
mov
test
ficompl
sub
lcall
cmpsl
int
sbb
add
push
movsb
aam
inc
sbbl
clc
pushl
jno
or
push
mov
sub
xchg
mov
push
jmp
xlat
sbb
es
jns
inc
mov
imul
inc
and
cmpl
shlb
enter
sbb
incl
aaa
cli
pop
rcll
imul
pop
pop
js
in
incl
dec
xchg
popa
mov
aam
bnd
mov
rorl
clc
in
call
push
popf
lea
nop
jno
dec
push
imul
out
negl
sti
das
pop
iret
mov
jle
pushl
mov
adc
cmp
push
arpl
inc
arpl
fmuls
decl
insl
int
out
les
sub
xor
in
jg
cmp
lret
std
das
std
cmp
push
adc
inc
or
pop
mov
xor
and
lds
sbb
popf
psrad
pop
lret
inc
fistpll
cmpsb
and
cmp
mov
data16
xchg
cmpsb
jmp
hlt
and
fs
sub
sub
mov
insl
jae
lds
imul
pop
cltd
dec
push
rorb
cli
xchg
cli
addr16
stos
mov
test
lret
jp
cmp
lcall
jnp
push
jmp
sbb
mov
push
inc
stos
daa
daa
cmp
push
ljmp
xlat
fidivl
test
cmp
cld
call
cmp
xor
jb
and
lret
mov
add
fdivr
jg
decl
ja
mov
sbbb
fldl
inc
imulb
dec
std
fisubl
je
pop
xchg
sbb
roll
jl
mov
ljmp
cmp
dec
sbb
dec
push
shlb
and
cwtl
int3
lahf
daa
push
call
decl
jae
repz
pop
movsl
inc
std
jp
gs
adc
push
sbb
in
push
pop
ljmp
lods
inc
add
repnz
pop
dec
pop
aam
or
inc
inc
xchg
and
xor
incl
scas
bound
xchg
xor
xor
or
fiaddl
xchg
mov
std
outsl
cmp
jle
rorb
jmp
jmp
push
sahf
rorb
xor
mov
pusha
test
sbb
int3
lret
mov
ret
sti
adc
cwtl
bound
mov
mov
and
fbstp
sub
dec
sbb
repz
push
push
out
insb
dec
gs
stos
aad
stc
jg
cmp
add
insb
mov
loopne
push
add
ljmp
pop
loopne
sub
insb
das
fdivl
sbb
into
add
mov
cli
call
ret
cmpsl
cmp
ret
and
inc
dec
ljmp
jae
add
std
lcallw
test
aam
xor
incl
pop
test
or
test
add
lods
mov
rcrb
ss
pushl
push
xchg
mov
fistps
int3
imul
xor
jne
jl
bound
aad
sbb
sub
jns
and
sub
inc
lcall
mov
imul
ret
leave
push
clc
jle
dec
mov
leave
cwtl
cmp
push
ret
mov
movb
lcall
xchg
cmc
or
rorb
inc
add
filds
inc
mov
add
lcall
jp
sbb
test
in
das
fwait
add
pop
xchg
fdivp
lret
repz
jecxz
mov
lcall
sub
mov
mov
adc
jne
and
push
jmp
popf
lds
inc
call
xchg
mov
xlat
sub
ljmp
ljmp
nop
out
mov
pop
jno
outsl
test
shr
lret
pop
int3
push
add
call
stos
push
jae
repz
lcall
or
loopne
pop
add
or
add
jg
fldt
in
jno
add
insb
fwait
fwait
ds
or
imul
mov
mov
ljmp
inc
mov
mov
lds
int3
clc
call
ja
insb
jne
mov
mov
jb
sti
rorl
xchg
or
inc
xor
pusha
fistl
gs
ret
fcmovbe
std
icebp
mov
xchg
adc
mov
cmpsb
iret
sub
cmp
sbb
cli
jg
xor
stos
stc
jmp
insb
mov
out
fs
aad
in
lods
ret
fnstsw
add
je
inc
mov
fwait
jno
or
xlat
lea
ljmp
push
or
incl
mov
repnz
int
push
dec
pop
mov
sub
mov
mov
insl
inc
scas
lods
std
cs
incl
jg
repnz
ror
cmpsb
pop
rorl
xor
push
loopne,pn
inc
idivl
dec
mov
sbb
leave
push
jnp
dec
in
out
adc
rorl
leave
mov
sbb
inc
mov
hlt
fs
mov
inc
decl
cwtl
mov
repnz
dec
ds
outsl
pusha
in
jmp
call
notb
inc
cmp
jecxz
jnp
lret
or
push
xor
popf
xchg
mov
aad
loope
sbb
or
push
cmpl
scas
push
enter
cli
mov
mov
stos
pushf
fisubrl
test
or
jb
mov
repz
ljmp
mov
mov
ret
repnz
fst
xor
mov
popa
mov
bt
stc
bound
jge
mov
enter
fiaddl
fisubrs
sbb
adc
cmp
pop
lahf
iret
pop
popa
push
dec
out
xchg
loopne
mov
mov
leave
ljmp
cmpsl
out
popa
mov
lret
or
popa
es
adc
mov
ret
decl
mov
dec
xchg
push
sbb
loopne
cwtl
mov
xchg
stos
mov
ljmp
xchg
mov
fdivrs
jbe
pop
push
test
mov
call
jb
push
aam
testl
adc
inc
stos
cmpsl
outsl
ljmp
add
adc
addr16
scas
jne
es
jo
lock
push
imul
jmp
mov
xor
pop
jb
call
push
rorb
cmp
pushf
icebp
jl
adc
mov
daa
pop
or
decl
push
cmp
ret
xlat
push
xor
sub
or
decl
xor
popa
cmc
mov
mov
imul
ljmp
imul
jbe
sub
sbb
mov
mov
out
inc
push
into
or
sub
push
aaa
or
sahf
mov
dec
mov
sbb
cmc
in
icebp
jmp
mov
lods
jmp
enter
inc
fcoml
xchg
push
data16
mov
and
mov
push
adc
push
sub
inc
pop
scas
lcall
adc
leave
sub
or
cs
loope
jo
test
hlt
out
je
cmc
fstpl
push
decl
out
iret
addr16
push
adc
repnz
xlat
sbb
jne
add
inc
sahf
mov
outsl
aam
inc
clc
js
int
jp
das
push
mov
pop
popf
push
or
hlt
inc
decl
mov
decb
inc
and
mov
popa
fcoms
sti
rorb
incl
push
add
jp
mov
shr
push
ret
dec
divb
mov
inc
int3
imul
sbb
sar
fdivrs
dec
fnstsw
jecxz
mov
mov
ret
movsl
lods
sbb
jb
add
test
jmp
idivl
xorb
inc
sub
cmpl
and
mov
xor
push
mov
dec
fisubrs
int3
inc
stc
call
into
sub
cmpsb
mov
jg
pop
dec
lret
pop
mov
test
dec
jl
movsl
mov
into
out
int3
mov
adc
inc
in
cli
mov
notb
jmp
int
addr16
mul
call
cld
mov
rolb
faddl
jl
lcall
pop
clc
adc
adc
xchg
fnstcw
mov
incl
xchg
shrl
nop
pop
push
in
loop
cmp
xchg
test
ds
stos
stos
decb
mov
sbb
jg
test
lcall
sbb
sbb
int3
fucomip
les
pop
sar
in
mov
or
aad
mov
clc
lea
pop
push
xlat
pop
fsts
sahf
xor
je
sub
inc
jmp
movsl
ret
ja
mov
sbb
dec
test
mov
out
leave
push
shl
call
add
imul
bound
jp
or
inc
test
hlt
adc
lock
sub
jecxz
jo
add
push
pop
scas
sub
les
pop
jno
jmp
cltd
shrl
cmp
movsb
mov
mov
inc
inc
dec
adc
das
or
gs
adc
jp
fisubrl
lock
cmc
push
iret
jne
enter
lods
mov
aas
jo
add
push
xlat
addr16
movsb
add
loope
incl
push
mov
ret
lea
mov
call
incl
pop
and
mov
popf
push
stos
icebp
mov
jne
jb
sub
clc
cmp
add
jne
adc
cmp
ds
clc
pop
cli
push
icebp
mov
jae
inc
fs
mov
les
rcrb
fcomps
cwtl
jmp
ljmp
mov
aam
aam
sbb
aas
arpl
push
add
pop
loopne
das
aaa
call
sbbb
jne
popa
loope
xor
mov
adc
cli
decl
xor
add
aam
mov
jae
test
out
call
add
in
bound
pop
add
mov
xchg
and
pop
xlat
int
lods
call
std
push
dec
lds
push
cmp
arpl
mov
decl
out
lods
cld
pop
push
cli
aaa
mov
cmp
pusha
mov
outsl
dec
and
pop
cmpsl
fwait
push
mov
add
insb
leave
loopne
iret
out
lea
cmp
hlt
or
arpl
enter
popa
nop
popf
xor
dec
or
jle
pop
loope
sub
lcall
and
jg
inc
mov
or
cmpsb
adc
dec
jbe
and
push
loop
call
ds
adc
inc
scas
add
mov
jnp
dec
das
cltd
ljmp
outsl
mov
push
ds
out
les
xor
std
lcall
cmpb
aas
lahf
pop
push
push
xor
das
out
or
lock
ljmp
inc
shl
xchg
popf
xor
movsl
pusha
cmp
xor
cmp
gs
pop
call
out
iret
mov
test
repnz
icebp
ds
imul
daa
incl
cltd
lret
dec
fdivl
or
outsl
lahf
mov
incl
push
test
cmovle
sub
outsl
cld
scas
cmpsl
or
mov
nop
pop
dec
mov
jmp
add
and
js
mov
fs
test
lret
outsb
scas
call
and
call
push
les
inc
push
push
jbe
addr16
push
inc
or
jno
sub
decb
jo
xchg
xor
shlb
jge
push
ljmp
pop
inc
and
mov
pop
push
mov
jle
jmp
and
sbb
and
jmp
cli
pop
int
out
jb
es
hlt
inc
xchg
mov
inc
andb
pop
cmpsb
stc
inc
out
jae
push
decl
cmc
mov
jae
sbb
cld
xchg
inc
xor
cmp
cmp
cmp
jmp
frstor
sti
xor
je
add
outsb
and
inc
outsb
pop
or
mov
mov
xchg
push
cld
cwtl
fisubs
pop
add
mov
enter
xor
sub
mov
dec
and
xor
out
mov
call
jae
and
ds
stos
je
test
or
ljmp
mov
pusha
aad
movd
jle
je
pop
insb
mov
in
and
and
dec
cli
add
leave
add
mov
pop
fdivr
decl
or
and
mov
add
lret
add
js
shlb
dec
xchg
inc
pop
add
push
add
adc
sbb
rorl
cmp
pop
out
sahf
in
movsl
lcall
fildll
enter
shll
addb
popa
jmp
dec
test
cmp
or
jno
push
jo
dec
lods
mov
loop
lcall
jae
pop
inc
add
sti
push
scas
aad
adc
fists
mov
mov
shrl
lahf
loop
push
and
sub
xchg
mov
push
incl
pop
push
lock
in
jno
push
pop
jp
jg
mov
stos
xor
stos
jge
and
fsubr
sub
xchg
loop
add
mov
mov
jmp
pop
pop
ljmp
cmp
mov
fwait
jle
lock
sub
sbb
sahf
out
mov
and
mov
cmc
hlt
fstps
or
cli
sbb
call
mov
aad
inc
pop
rclb
lcall
inc
aaa
cmpsl
add
push
ja
rcrl
sub
mov
lock
jns
xor
mov
add
insb
sbb
fcoms
jge
fstpl
je
mov
hlt
sbb
call
sbb
ljmp
inc
pop
je
inc
std
movsl
in
jo
bound
dec
cmp
pop
mov
outsl
mov
adc
lcall
std
jle
xor
inc
jle
scas
jnp
test
into
cltd
repz
push
inc
into
call
jmp
mov
sub
sbb
cmp
es
jecxz
jmp
incl
decl
in
dec
test
aas
add
lea
sub
jmp
incl
adcb
ficoml
sbb
sub
mov
inc
clc
mov
sbb
and
inc
ljmp
xorl
xchg
mov
rcrl
jg
push
call
jg
arpl
xchg
mov
fwait
jp
pop
mov
push
loopne
xor
add
dec
xchg
les
in
dec
cld
movsl
pop
lret
cltd
lods
mov
daa
jnp
rcrb
xor
loopne
xchg
bound
cmpsl
into
mov
dec
cld
pop
mov
sbb
mov
mov
mov
dec
ds
fstl
or
outsb
push
adc
cmpsb
sbb
xchg
pushf
mov
inc
jbe
pushl
cli
int3
dec
pop
push
mov
cltd
pop
mov
xorl
mov
aam
rclb
decl
xchg
jns
rcll
cli
xchg
xorb
push
push
push
lret
in
mov
dec
sbb
xor
dec
cld
in
add
inc
data16
ja
in
inc
stos
lods
xlat
or
gs
je
push
fisubrl
sub
sub
or
fwait
push
or
adc
lcall
mov
aas
fbstp
jp
out
jo
aaa
cli
ret
dec
cltd
mov
cltd
pushf
push
sub
rcrb
incl
mov
fnstenv
test
xchg
dec
xchg
es
sbbb
pushl
xor
sahf
test
xchg
lret
arpl
mov
in
leave
lret
pop
loopne
xor
inc
je
loope
inc
dec
fbstp
int
mov
dec
leave
xor
int3
aaa
cli
push
cmpl
jl
inc
jno
mov
mov
jae
cmp
push
shl
ja
hlt
call
scas
movsl
aas
mov
nop
mov
cltd
pushf
and
addb
jmp
outsl
icebp
pop
cli
jmp
sbb
cmp
out
stc
sub
aad
or
jmp
sub
ret
es
pushl
sarb
mov
fs
jg
hlt
icebp
pop
sbb
loope
ficoms
dec
adc
aaa
dec
mov
jecxz
or
jecxz
lcall
push
lcall
jg
std
pop
in
rorl
mov
jbe
jg
ret
xor
cld
lds
gs
lods
sbb
jmp
add
sbb
leave
jns
sub
decl
push
pop
and
decb
mov
mov
jecxz
hlt
xchg
clc
jle
inc
cli
das
shl
stc
test
stos
out
out
xor
xor
mov
mov
fisubrs
and
sbb
test
in
lock
add
je
gs
incl
jb
aad
sub
dec
or
push
das
sub
cmp
sarl
outsl
lcall
cmp
fbstp
mov
or
mov
ret
mov
lcall
sbb
inc
mov
popf
xor
xchg
nop
xor
std
js
xchg
lahf
cltd
cmp
pop
insb
jg
fistpll
pop
mov
or
or
pop
mov
jg
pop
jne
dec
lret
pop
sbb
icebp
and
jp
sbb
mov
daa
mov
cmc
jae
sbb
pusha
mov
inc
or
in
test
fwait
push
rolb
out
cmp
jg
lcall
mov
inc
call
call
sar
call
and
fwait
push
sbb
test
enter
in
repnz
call
inc
jo
jmp
scas
add
pop
pop
add
ljmp
mov
iret
mov
inc
xchg
cmpsb
pop
lret
dec
or
xchg
dec
mov
push
sub
push
mov
addr16
sbb
pop
mov
std
cmp
jl
int3
pushl
fidivrl
add
loopne
cmp
cmp
call
and
or
sbb
add
ljmp
out
dec
outsl
hlt
or
adc
adc
shll
and
push
nop
mov
icebp
call
mov
jb
dec
push
xorb
pushw
orb
insl
repz
in
xchg
testl
leave
and
cld
mov
icebp
stos
and
cmpb
push
ja
pop
push
ljmp
sub
and
push
rolb
pop
add
test
add
cmpsl
pop
xchg
inc
mov
lods
stos
jbe
mov
stos
or
jg
fs
lea
and
xchg
pushl
sub
shlb
lea
rorb
inc
or
lret
fildll
or
push
sbb
sub
inc
call
mov
push
rclb
mov
and
sub
fstpt
inc
push
inc
mov
cmp
divb
or
call
dec
jg
outsl
in
push
and
cmp
jmp
insl
imul
push
inc
or
xor
orl
insl
imul
xor
inc
push
and
outsl
and
mov
ds
ljmp
inc
xorl
xor
andl
mov
dec
call
jne
push
jne
fstp
lcall
add
mov
lods
mov
pop
cmp
insl
mov
inc
iret
jns
mov
rclb
mov
and
inc
incl
pop
or
insl
lret
rclb
lea
pop
imul
add
out
loope
addb
or
xor
call
insl
popa
fistpl
or
inc
sub
pop
pop
pop
jo
push
inc
push
fs
imul
imul
add
or
call
dec
fldt
scas
inc
loop
add
push
add
xor
inc
or
call
mov
call
cli
lods
insl
lods
mov
add
mov
or
rorl
sub
inc
inc
xorl
push
and
shrl
inc
inc
mov
push
or
xor
jne
inc
mov
imul
mov
imul
add
add
sbb
add
imul
add
fs
pop
xor
xlat
mov
out
mov
cmp
imul
pusha
out
or
fistpl
fld
mov
mov
sbb
test
insl
aad
mov
cmp
jne
xlat
dec
jo
rcr
lea
mov
loopne
push
jnp
pushl
mov
and
push
rclb
inc
jae
int
and
jbe
pushf
imul
dec
ficoml
mov
stc
orl
mov
push
or
insl
lods
loope
inc
sub
test
shl
popf
cmpsl
je
cmp
sbb
in
cmpb
sbb
push
mov
mov
lcall
jne
out
outsb
mov
out
shll
scas
and
xlat
sbb
ret
add
mov
adc
pop
mov
push
add
shrb
out
push
call
or
imul
outsb
lcall
jae
or
add
cltd
int
mov
decl
inc
sbb
or
cmp
jg
xor
or
adc
int
dec
lds
mov
and
cmp
inc
in
imul
and
pop
dec
pop
sub
inc
rcrl
lods
mov
movsl
sbb
jmp
stc
xor
js
adc
mov
leave
shll
dec
and
sub
lea
pop
jae
orb
xor
mov
or
push
inc
sbb
cmp
jae
gs
mov
ret
fstps
je
xor
mov
xor
and
mov
sub
mov
rcrb
int3
or
pushw
lret
pushf
sub
adc
xor
xor
mov
pop
imul
fstl
subb
pop
inc
xchg
cmpsb
pop
xorb
dec
mov
dec
lret
stos
lock
mov
mov
js
pop
mov
test
lret
gs
jne
mov
push
cmp
mov
sbb
cli
aas
das
cmp
mov
insl
sub
mov
cmp
lock
test
call
push
add
or
or
and
add
add
loopne
jb
jnp
or
cmp
push
mov
push
mov
push
orl
dec
pop
fwait
imul
or
mov
call
sub
jne
cmp
push
xchg
jnp
mov
xor
cmp
in
call
call
das
insl
scas
lret
shlb
nop
add
fisubrs
subl
test
cmpsb
inc
shll
adc
jne
call
mov
push
jae
dec
and
xor
mov
xor
dec
push
mov
add
mov
and
je
fdivrs
inc
adc
pop
fistpl
stos
roll
or
xchg
addl
jge
or
movsl
add
pop
imul
insb
xchg
add
jae
xor
add
or
pop
orl
imul
and
mov
in
in
repnz
popf
lods
addl
call
data16
xor
cmp
add
inc
jae
xor
and
sub
xchg
add
sbb
pop
subl
or
pop
imul
cmc
inc
pop
je
sbb
sub
rcl
or
cld
push
nop
mov
push
inc
xor
popa
sbb
mov
fbstp
sbb
scas
call
xor
and
es
imul
push
add
add
xlat
addl
ss
into
mov
das
dec
or
into
mov
push
imul
loop
cmp
inc
or
mov
lret
je
sub
out
and
adc
call
push
and
mov
pop
mov
add
daa
scas
ljmp
lcall
test
lcall
lcall
inc
cmp
xchg
test
pusha
imul
adc
dec
or
pusha
stos
jl
xchg
push
cmpb
lcall
xchg
lods
cmp
pop
test
mov
dec
lods
lret
xchg
in
cmp
cs
mov
push
or
int
lcall
data16
add
scas
loope
jb
aaa
push
pusha
lcall
imul
adc
lods
aam
xor
inc
mov
addr16
fbstp
pop
push
cmp
jmp
orb
or
pushf
add
lret
xchg
mov
adc
out
int
mov
push
psrld
sub
cs
imul
fsin
mov
xchg
push
sbb
push
xor
pop
mov
cwtl
or
xchg
mov
rorl
pop
push
inc
int
inc
and
lods
imul
mov
sbb
push
or
mov
or
pop
add
lea
cwtl
pop
and
sbb
and
mov
ret
filds
rcrb
pop
rcr
push
jmp
aas
mov
xor
cmp
push
jne
and
rcrb
sbb
mov
test
int
mov
mov
xor
push
mov
cmp
jo
xor
sti
movsl
add
int
ja
dec
adc
sbb
mov
jo
ljmp
xor
and
dec
aad
imul
call
sbb
push
mov
lods
shrb
push
or
inc
rorb
xor
dec
sbb
pushw
add
sbb
adc
mov
mov
loopne
and
cmpsl
sbb
cmpsb
insl
mov
lods
inc
jp
mov
and
add
rolb
lret
rcrl
add
push
pushf
leave
inc
call
sbb
jo
or
out
sarb
into
loope
pop
add
add
sbb
cmp
ss
aam
scas
je
bound
lcall
lea
pop
adc
adc
cmp
fs
imul
xchg
je
xor
jne
xlat
out
sbb
bound
add
sub
stos
mov
shlb
push
pushf
xor
fwait
adc
inc
pop
popf
daa
rcrb
lods
sbb
xchg
mov
or
or
int
adc
inc
sbb
aam
and
into
cmpl
push
inc
mov
lcall
scas
stos
lcall
push
xor
inc
lret
pusha
sub
or
mov
push
leave
aad
inc
data16
add
sub
enter
idiv
jb
xchg
mov
shl
imul
or
jae
or
push
cmp
xor
iret
sub
push
jne
and
jp
dec
xor
xchg
push
xchg
push
cmp
add
call
mov
clc
jb
leave
mov
xchg
aad
xor
mov
mov
loop
inc
xor
jae
or
mov
and
push
push
aad
mov
mov
xchg
loope
pushf
mov
dec
pop
xor
mov
jb
lret
sarl
push
jae
jb
out
xchg
gs
jb
pushf
jae
push
fs
sbb
cltd
lcall
or
das
jo
add
cld
pusha
sub
pusha
cmp
add
xchg
push
mov
or
sbb
insl
add
push
int
outsl
push
cltd
push
loop
add
in
inc
ljmp
movsb
into
inc
xlat
insb
loop
je
inc
mov
pop
cvtps2pd
sbb
sbb
mov
push
loop
or
mov
cltd
dec
cwtl
cmpsl
push
shrb
test
jne
add
mov
jle
sub
cmp
dec
outsb
divb
icebp
push
cmpsb
out
adc
mov
and
push
pop
xor
orl
and
mov
lcall
jb
rolb
or
adc
and
rcl
sbb
scas
out
and
mov
lret
orl
adc
mov
data16
lret
or
cmp
xor
mov
adc
mov
mov
mov
ss
or
mov
ffree
add
faddl
sub
sbb
xchg
jmp
pop
jae
cmp
and
jb
sbb
rcrl
jae
jb
orl
je
and
xor
arpl
xor
push
xlat
pushf
rorl
cmpsl
icebp
sub
mov
arpl
imul
push
rorb
pop
xchg
xor
stos
mov
pop
int
add
rcrb
cmpsl
sarb
insb
fidivl
push
add
xchg
sarl
lds
jl
mov
dec
out
call
add
push
xchg
sub
dec
ret
add
xchg
sub
addb
icebp
push
push
pop
ljmp
xor
dec
mov
adc
add
xchg
rclb
lea
adc
inc
mov
sbb
push
mov
add
adc
ja
push
or
mov
ret
lods
inc
mov
or
add
inc
icebp
and
in
call
xorl
or
subl
pop
sub
mov
es
enter
and
sub
inc
pop
stos
jo
lods
adc
or
fstpt
and
sbb
loop
scas
mov
jp
movsl
rolb
inc
cmp
cmpsl
pop
orl
jmp
cmp
xlat
push
shll
mov
sub
or
add
push
mov
push
or
dec
inc
mov
lods
push
xor
ret
inc
pop
icebp
in
imul
sbb
ret
inc
sub
ret
movsl
mov
push
popf
sbb
imul
add
and
lods
xchg
add
and
loop
push
gs
insb
adc
push
lea
ret
pop
xchg
and
cmp
loopne
or
and
adc
sarb
addb
scas
std
pop
mov
add
mov
sbb
incl
mov
pop
mov
rorb
xchg
sbb
push
mov
fs
rcl
jle
add
test
sub
or
mov
pushf
imul
jns
push
inc
mov
add
mov
add
subl
test
pop
imul
repnz
xchg
bound
pop
cli
mov
inc
mov
mov
aam
jns
cmp
les
add
inc
imul
rolb
mov
lods
xor
add
mov
push
pop
test
imul
cmp
pusha
and
imul
ret
jle
xor
pop
out
jns
jmp
fisubl
rcll
mov
add
inc
sbb
mov
mov
cmp
xor
lock
push
mov
ss
cmp
pop
mov
push
push
mov
mov
or
add
or
dec
inc
inc
add
add
imul
insb
gs
bound
arpl
mov
or
jae
or
popa
jo
jb
or
ja
outsl
and
outsl
push
gs
jne
arpl
inc
gs
outsl
insl
insl
popa
sub
cs
adc
dec
inc
push
xor
insb
aas
fsubrs
inc
arpl
dec
add
insb
inc
jns
je
insl
lods
mov
call
gs
outsl
push
jp
jo
inc
lods
mov
adc
insb
jne
push
incb
data16
adc
in
insl
in
push
jb
xorb
dec
outsl
fs
jae
scas
sbb
dec
popa
inc
inc
inc
imul
jns
stos
adc
pop
mov
dec
outsb
outsw
std
jb
mov
cmp
je
jp
lods
insl
jp
cwtl
lds
inc
imul
outsb
jne
aas
mov
mov
fnsave
inc
js
push
push
jo
jbe
sbb
imul
arpl
insl
jnp
pop
pop
arpl
xorl
mov
imul
cmp
shlb
jbe
mov
push
andb
jae
inc
gs
pop
fcom
insl
mov
xchg
jb
outsl
in
inc
movsb
test
xchg
pop
push
imul
lock
jns
in
fwait
popa
or
jo
adc
sbb
je
cmpsb
xor
insl
or
xor
pushf
popa
inc
adc
jp
divb
jbe
adc
push
and
dec
adc
das
arpl
inc
jae
or
mov
push
loope
fs
es
popa
inc
flds
andl
je
push
outsb
ja
or
cmp
jp
lock
add
fs
mov
jecxz
shlb
push
pop
adc
ret
or
sbb
inc
sbb
pop
inc
jbe
insb
xchg
inc
adc
xor
lcall
ret
pop
or
fadd
jo
nop
push
int
lret
data16
mov
les
stos
xchg
mov
lods
hlt
imul
sub
dec
adc
test
arpl
popa
popa
bound
push
mov
dec
jns
add
outsb
into
adc
jno
or
dec
jo
loop
push
nop
into
mov
dec
popa
sub
push
mov
mov
dec
jae
mov
jne
sub
jne
push
pop
jae
push
jnp
lods
insb
popa
arpl
xchg
int
inc
faddp
js
lret
push
xor
insl
add
jp
lcall
dec
pop
xchg
adc
les
test
insl
int3
xor
jne
xchg
inc
inc
jbe
xchg
jp
je
lds
popa
addr16
xor
inc
scas
lret
jmp
or
push
add
mov
dec
leave
bnd
loopne
sidtl
add
add
rolb
jo
cmp
lock
or
jne
or
or
add
pusha
push
or
fcomp
mov
xor
pop
push
or
push
daa
sub
repnz
mov
outsb
add
sub
cltd
je
mov
add
mov
pop
imul
les
sbb
popa
or
add
sub
inc
shlb
push
mov
jle
xor
daa
adc
add
imul
xor
ret
cmpsb
inc
dec
cmp
pusha
add
les
shlb
jae
push
sarb
dec
dec
sub
add
call
add
add
add
add
add
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
test
add
fadds
add
sbb
add
add
add
add
add
push
add
addb
add
or
add
add
pop
ret
add
orb
add
add
add
add
add
loopne
add
or
add
xor
add
pop
add
subb
add
add
add
add
add
add
add
into
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rcl
add
add
add
add
add
add
pusha
roll
add
add
add
add
add
rolb
add
add
add
add
call
add
add
cmp
add
pusha
add
sbbb
add
pop
add
mov
add
add
add
or
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
loopne
add
lcall
add
add
add
add
add
add
adc
add
add
add
add
add
aad
add
add
add
add
add
add
add
aad
add
add
add
add
add
add
addb
add
or
add
add
add
add
fadds
add
add
add
xor
add
add
add
or
add
add
cmp
add
ret
add
add
add
sub
add
mov
add
add
add
add
add
add
add
out
incl
sti
jg
jg
out
fbstp
fistpll
add
out
sti
testl
out
incl
out
sti
jg
fstpt
sti
jg
fcomip
add
fbstp
add
sti
incl
out
fstpt
sti
testl
out
fstpt
out
fstpt
sti
testl
out
add
jg
out
sti
testl
out
push
add
sti
jg
incl
out
add
fistpll
fcomi
add
sti
incl
push
add
fbstp
out
pushl
out
jg
out
fistpll
jg
out
sti
jg
out
fstpt
out
sti
ja
out
fbstp
fcomip
add
push
add
push
add
sti
jg
pushl
out
sti
testl
sti
jg
fcomi
add
fcomi
add
sti
ja
fcomip
add
add
fcomip
add
sti
incl
out
sti
incl
out
sti
incl
sti
ja
out
sti
ja
out
pushl
out
fbstp
out
out
fcomip
add
fistpll
out
fstpt
out
sti
ja
out
incl
out
fstpt
out
fistpll
out
fcomi
add
sti
testl
fbstp
sti
jg
out
fcomi
add
add
fstpt
add
incl
add
fstpt
jg
out
sti
ja
out
sti
jg
push
add
sti
testl
out
fistpll
out
push
add
fcomi
add
incl
out
fstpt
pushl
fbstp
out
incl
out
sti
ja
out
fstpt
out
fistpll
push
add
add
fcomip
add
fistpll
out
fbstp
out
fistpll
fstpt
out
pushl
sti
jg
sti
ja
out
fcomi
add
fbstp
sti
jg
out
sti
ja
sti
incl
out
add
fbstp
fcomip
add
sti
jg
out
add
out
jg
incl
out
fcomi
add
fcomi
add
sti
incl
fbstp
out
add
incl
fcomi
add
fbstp
out
sti
jg
out
jg
out
sti
incl
fcomip
add
out
sti
ja
out
jg
out
fstpt
out
out
fbstp
add
push
add
fbstp
add
push
add
incl
fcomi
add
jg
out
sti
jg
out
sti
jg
sti
jg
out
pushl
out
fstpt
incl
out
push
add
incl
fistpll
out
push
add
add
pushl
jg
fcomi
add
fcomip
add
sti
ja
out
fcomi
add
sti
testl
out
fcomi
add
pushl
out
push
add
sti
incl
out
fcomip
add
sti
ja
out
sti
jg
out
fcomip
add
jg
out
incl
add
sti
jg
push
add
fistpll
out
add
pushl
fbstp
out
fstpt
out
pushl
out
jg
out
sti
incl
out
pushl
out
jg
fbstp
add
sti
incl
pushl
out
add
sti
jg
out
incl
fcomip
add
sti
incl
fcomi
add
push
add
push
add
add
sti
ja
jg
out
jg
out
sti
ja
out
sti
jg
fcomi
add
sti
ja
jg
out
add
fbstp
out
fcomip
add
sti
incl
out
fcomip
add
fstpt
out
sti
incl
push
add
add
pushl
out
push
add
pushl
out
fcomi
add
sti
jg
incl
out
add
sti
incl
out
fistpll
incl
out
sti
ja
out
fcomip
add
add
add
sti
jg
push
add
sti
ja
jg
out
sti
incl
out
add
push
add
inc
test
std
ret
insb
and
pop
or
cmp
mov
fdiv
lds
mov
loop
jb
mov
pop
jnp
sbb
cwtl
stos
jle
push
mov
out
xchg
jecxz
rolb
sti
aam
je
mov
mov
dec
push
mov
cmp
and
fnstcw
fdivl
loope
decl
jo
xchg
jns
ljmp
data16
push
sub
xor
and
or
jg
int3
cmp
mov
cmp
xor
test
dec
gs
daa
dec
push
push
cmp
test
cmp
sbb
sbb
add
js
add
cmp
mov
inc
and
ljmp
jae
mov
jmp
lea
jns
jmp
jmp
and
clc
popl
test
sarb
lods
divb
fcmovnu
mov
or
lahf
bound
lods
popl
adc
fcoml
xor
stos
mov
xor
sub
sbb
aas
sbb
leave
sahf
aas
aas
mov
pushf
jns
jns
movsl
add
xchg
loop
out
pop
test
push
mov
jl
mov
lock
sbb
jp
mov
inc
dec
sbb
lahf
dec
das
mov
lret
lcall
test
mov
xchg
mov
dec
pop
subl
daa
fidivrl
iret
jmp
lock
adc
pop
push
in
loope
ja
cli
xor
dec
pop
daa
sub
xlat
xor
pinsrw
adc
aas
mov
das
sbb
xchg
lds
xor
inc
dec
dec
xchg
jle
ror
cmp
add
jne
mov
cmpsb
cmp
mov
sete
dec
xchg
mov
icebp
pop
ds
in
mov
sbb
cmp
stos
jge
jns
arpl
sbb
jl
fisubl
rolb
cmpb
fnstenv
pop
xor
mov
mov
and
dec
out
xor
jo
lahf
aam
adc
je
cmp
sub
fisubl
xlat
movsb
daa
jo
cmpsl
xorps
call
mov
or
push
xor
jns
stos
cmp
inc
pop
pop
jle
les
xchg
xor
loope
fidivrs
sbb
mov
in
mov
inc
ret
daa
in
mov
outsl
daa
mov
sub
jne
xor
enter
aad
aam
add
xor
add
and
jnp
jmp
movsb
adc
adc
fistps
shl
sbb
movsb
clc
xchg
xor
inc
cmp
bswap
mov
sahf
ss
arpl
push
inc
lea
mov
cmp
xchg
mov
jb
xchg
test
sarb
add
sub
pop
mov
inc
mov
sub
call
jnp
lea
push
or
out
push
inc
fmul
lods
rorb
loope
pop
fadds
inc
movsl
xor
jp
pop
fbstp
cs
mov
xchg
aas
push
pop
sub
out
cmp
or
push
scas
xchg
cltd
cmp
xor
shrl
sub
incl
lahf
fisubrs
aam
or
in
mov
mov
lods
popa
pop
mov
ret
jl
adc
or
lret
fisubs
mov
sub
mov
and
out
pusha
mov
xchg
int3
inc
clc
enter
adc
push
add
nop
add
jl
add
mov
jne
cltd
adc
add
add
pushl
jge
cmpsb
cmp
mov
or
fsub
aad
test
aaa
gs
mov
ja
jb
mov
inc
jmp
outsb
outsb
nop
cmp
cmpsl
std
stc
push
sbb
xor
adc
shlb
adc
out
lret
mov
iret
pminub
xchg
push
add
push
mov
pop
arpl
iret
cmp
lods
mov
adc
sbb
cmp
scas
mov
pop
lods
and
mov
adc
mov
int
daa
es
aam
outsb
mov
les
pop
fwait
mov
cmp
stos
nop
xchg
cmc
mov
imul
pop
cmp
int3
xlat
lret
iret
loop
cmp
dec
push
add
clc
push
cmp
mov
pop
rclb
insl
sub
aas
push
cltd
aam
ss
add
dec
cmc
fbstp
jmp
pop
lret
pop
ret
rorb
mov
add
sbb
pop
mov
dec
arpl
jb
fidivs
push
cmpb
mov
lret
aam
rol
and
sahf
inc
jp
mov
daa
xor
mov
mov
jmp
fcomi
stos
dec
sbb
iret
into
mov
push
hlt
repz
mov
inc
pop
mov
xor
inc
jmp
ja
scas
cmp
push
cmp
xchg
mov
push
test
int
mov
sub
into
icebp
jecxz
orl
pop
xchg
ja
adc
jg
lret
jbe
or
inc
xor
mov
sbb
pop
out
enter
loop
push
and
adcl
inc
pop
popa
jl
mov
xchg
adc
test
lahf
lods
fsincos
popf
ljmp
add
mov
or
dec
push
mov
sbb
fucomp
loopne
lods
je
sub
mov
or
pop
cli
jl
inc
jo
inc
loop
icebp
jbe
fdivrl
xor
fwait
lahf
dec
cltd
ljmp
push
ja
or
divb
popf
fwait
arpl
or
mov
stos
mov
inc
push
sarl
ret
shll
jns
push
dec
xchg
lret
pop
mov
cmp
sub
mov
xchg
jl
dec
xor
push
mov
jno
or
xchg
xor
shlb
clc
pop
jne
call
ss
fbld
pop
and
fsubs
push
push
je
lahf
lods
add
pop
cmp
call
je
sbb
xchg
mov
sbb
loopne
lods
adc
mov
push
or
xor
lds
loope
inc
loopne
arpl
mov
aas
scas
popf
jae
movsl
pop
dec
pop
into
lock
clc
sub
inc
test
js
shrb
mov
mov
cltd
jmp
fistl
mov
xchg
lcall
pop
pop
scas
aas
cmc
inc
jge
scas
mov
jb
jae
fnstsw
aas
xor
fdivrl
loope
movsl
dec
jno
sbb
stos
xchg
dec
jno
pop
rcll
test
rcrl
and
xor
add
jle
add
sar
add
mov
je
push
add
inc
inc
push
jne
call
inc
incl
add
add
add
or
add
je
add
xor
push
push
mov
push
push
add
adc
add
clc
push
call
call
lea
inc
add
xor
test
add
mov
inc
inc
test
and
mov
je
xor
xor
push
push
clc
push
and
xor
rolb
dec
addl
add
push
call
adcl
add
inc
inc
add
inc
psubsb
push
xor
add
in
add
adcl
test
inc
call
call
inc
je
add
mov
mov
add
addb
or
clc
mov
invd
inc
mov
xor
push
clc
jne
add
mov
add
add
add
add
adc
add
clc
inc
shrb
test
add
jne
inc
test
add
push
or
rolb
je
test
or
and
call
inc
add
and
add
add
je
add
or
add
inc
decl
clc
inc
test
adc
add
test
add
je
inc
inc
xor
push
add
and
call
cmp
incl
add
mov
inc
push
add
test
jne
call
and
inc
push
or
clc
xor
sub
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
add
popa
add
add
imul
and
dec
add
arpl
add
add
add
add
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jb
jae
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
insb
add
add
add
add
add
popa
add
and
inc
add
add
add
add
sbb
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
data16
and
test
add
jns
and
inc
add
jp
jp
jns
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jns
jae
add
js
add
add
add
sbb
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsl
add
je
and
inc
add
imul
and
push
add
add
imul
add
jne
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
add
and
cmp
jae
gs
bound
and
and
and
and
and
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
and
and
and
insl
popa
outsb
imul
jb
imul
xor
ds
or
and
and
and
and
and
and
jb
jae
dec
outsb
outsw
and
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
and
and
or
and
and
and
and
and
arpl
imul
or
or
or
gs
gs
gs
jb
jbe
insb
gs
or
or
or
or
or
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
and
and
and
jne
inc
arpl
jae
cmp
jae
and
and
and
and
and
and
or
jb
jno
gs
gs
js
arpl
imul
insb
ds
or
or
or
or
jb
jno
gs
gs
jb
jbe
insb
gs
and
or
or
jae
arpl
imul
and
and
and
and
and
and
je
jne
je
outsb
outsw
and
and
and
and
popa
jae
gs
bound
add
add
fildl
add
add
pop
fildl
add
add
jle
add
mov
add
lcall
add
push
dec
inc
dec
xor
cs
dec
dec
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
