cmp
lods
aam
cmpsb
in
sarb
cmp
aas
mov
xchg
int3
adc
jno
clc
jnp
jle
lahf
hlt
cmpsb
mov
dec
and
mov
test
insl
sbb
pop
jle
sbb
in
pushl
es
outsl
push
xor
js
pop
in
addr16
cmp
leave
or
push
xor
fistl
xor
das
mov
test
stos
mov
dec
xor
push
divb
out
pop
mov
mov
inc
nop
push
scas
add
mov
lcall
or
mov
lcall
jo
push
lds
test
ret
dec
and
lret
bound
lcall
test
dec
pop
imul
jmp
mov
into
or
cmc
jl
dec
mov
push
pop
mov
lmsw
repz
dec
mov
fisttpl
loope
dec
shll
jno
push
movsb
cmp
mov
ret
lret
fnsave
cmp
inc
testb
ffree
incl
rcr
fiadds
mov
or
sbb
pop
sub
jne
andb
adc
jmp
mov
pop
sbb
dec
xchg
in
shrb
scas
lds
mov
hlt
test
inc
mov
test
aaa
insl
aas
sbb
lods
mov
orl
jle
mov
hlt
sbb
incl
adc
and
cmp
out
and
mov
ror
xor
stos
sub
movsb
inc
and
loop
leave
or
pop
jg
je
jp
sub
das
fimull
test
pop
outsb
rcll
aaa
push
fbstp
ficoml
jae
pop
cmpsl
add
jmp
lods
popa
and
lret
mov
inc
mov
andl
hlt
mov
in
lods
mov
pop
jb
daa
sub
mov
outsl
clc
jmp
xchg
shll
rol
sbb
xchg
push
push
int3
fcomip
mov
mov
lock
xchg
clc
mov
cli
xorl
lods
push
sub
push
ret
xchg
ljmp
mov
out
inc
in
pop
cld
xchg
mov
adc
push
loop
scas
adc
decl
jae,pn
inc
mov
adc
xor
test
sub
aaa
loop
mov
push
sub
popf
mov
scas
test
loop
dec
mov
ljmp
clc
decl
jae
xchg
adc
mov
loope
sub
lods
mov
lcall
clc
mov
xchg
mov
test
stc
hlt
je
jg
mov
testl
ljmp
call
dec
dec
add
lcall
fcmovne
test
fcomi
outsl
xchg
cmp
pop
jg
aad
je
cmp
gs
pop
inc
jno
incl
and
mov
or
sub
aad
xor
xor
lcall
movsl
push
inc
cmc
ljmp
mov
andb
adc
pop
xchg
ljmp
mov
es
js
outsl
cmpsb
cmp
std
imul
adc
cli
clc
cmp
lcall
adc
les
das
es
xlat
pop
cmp
rolb
add
and
sbbl
fdivr
mov
ja
sbb
pushf
loope
mov
fmul
or
sbb
fists
mov
add
xchg
push
mov
sbb
dec
jg
enter
fdivl
push
mov
int3
sbb
je
jle
mov
imul
incl
addb
fcompl
add
xor
or
mov
mov
icebp
repnz
jl
xchg
dec
inc
pop
dec
sub
outsb
jg
decl
mov
in
cltd
mov
cmp
test
sarb
mov
mov
mov
pop
or
cmp
bound
inc
int
jo
decl
into
push
jns
push
push
not
aaa
iret
adc
xchg
imul
mov
pop
lcall
jecxz
inc
scas
das
xchg
xchg
lods
mov
fistps
mov
movsl
cmp
cld
lcall
ss
mov
mov
sub
out
lcall
pushl
cld
adc
cmp
sarb
fimuls
or
mov
xchg
sbb
jg
cwtl
rorl
aaa
cmp
xchg
shll
jecxz
push
ret
or
stos
sahf
sub
les
aas
inc
dec
lret
pop
xor
sbb
mov
mov
add
cld
decl
cld
inc
les
inc
or
mov
ljmp
je
add
ljmp
push
je
pop
lahf
in
push
shld
out
clc
mov
stos
push
lds
nop
mov
cs
out
dec
sti
pop
addr16
mov
cmc
subb
movsb
inc
scas
lock
neg
es
sub
movsb
xchg
push
movsb
and
xor
fcoml
ficoml
mov
stos
loope
clc
pushl
dec
push
mov
loope
mov
dec
inc
sti
sub
mov
ja
dec
mov
dec
mov
in
jae
in
daa
cmp
dec
dec
push
mov
sbb
or
pop
lock
inc
or
rorb
mov
pop
je
call
cltd
and
mov
pop
imull
test
xlat
push
fwait
shrb
mov
xchg
cmp
jge
mov
and
and
in
dec
icebp
clc
cmp
push
lret
lcall
mov
add
xor
lcall
mov
sbb
push
cmp
mov
lcall
lcall
mov
or
xlat
or
xor
ret
out
mov
leave
cld
sub
mov
cmpsl
jb
hlt
add
jl
stos
ficoms
andl
pop
sbb
in
mov
iret
out
decl
jge
mov
jp
push
xchg
xchg
ret
push
mov
enter
pushl
addr16
hlt
dec
mov
fimuls
mov
xor
leave
cli
and
xor
ret
jmp
jbe
add
or
push
loope
push
xchg
outsl
stos
pop
mov
inc
push
loop
insl
into
cmp
lret
add
sar
stc
es
movsl
mov
or
clc
xchg
test
je
stos
jl
aam
jmp
xor
add
push
loope
repnz
sub
in
or
mov
dec
stos
fbstp
sbb
adc
fildll
lcall
out
jg
call
inc
rcll
sti
loope
inc
dec
mov
mov
icebp
dec
push
jbe
or
rol
ret
shll
call
scas
jg
push
adc
mov
jl
mov
and
dec
jecxz
mov
jg
test
xor
dec
sub
out
jg
xchg
cmp
adc
js
add
mov
mov
incl
add
mov
adc
call
in
jb
dec
xor
lcall
jbe
sub
mov
push
jmp
mov
subb
pop
hlt
pushl
add
cltd
xor
fs
push
cmp
rcll
lret
xchg
ljmp
cli
fildll
add
mov
dec
fstpt
enter
adc
outsb
enter
decl
pusha
jae
sar
jb
mov
xor
js
shrl
sbb
inc
xchg
cmpl
incl
sti
popf
dec
rep
or
xchg
rcll
insl
add
and
outsl
add
jge
icebp
mov
sahf
sbb
mov
sub
int3
pop
dec
test
sti
cmp
lcall
sbb
cmp
lret
popa
in
add
inc
jne
clc
ja
addr16
cwtl
mov
and
ljmp
enter
sub
add
andl
xchg
push
cmpsl
mov
jmp
cmpsb
xor
push
mov
mov
inc
ret
push
loope
dec
mov
lcall
pop
xlat
int
mov
fsubs
daa
in
jmp
test
incl
or
mov
in
jp
gs
fsubp
cwtl
andb
jp
pop
loopne
jl
insl
sar
fdivrl
pop
sbb
mov
rorl
cmpsl
das
pop
cmpsb
dec
add
test
and
rcl
call
or
lock
xchg
in
sbb
jno
js
xchg
dec
mov
push
repnz
adc
outsb
stc
inc
cwtl
cld
orl
mov
shr
add
or
cli
int3
decb
ljmp
sbb
jmp
add
rol
pop
scas
mov
notb
das
sar
lahf
add
xor
repnz
out
pop
pop
cmpsb
cmp
out
decl
call
out
jecxz
or
pop
int3
out
mov
mov
fdivs
lret
sbb
decl
imul
loopne
aas
cmp
inc
inc
adc
test
addl
jmp
pushl
pop
fwait
cmp
adc
fidivl
add
lret
sbb
inc
ficoml
jns
mov
rol
jno
fmul
mov
inc
in
or
jb
inc
incl
mov
ret
fldl
mov
xchg
rorb
dec
cmpsl
and
lcall
das
clc
inc
cmc
push
test
inc
push
fstpt
cmpb
hlt
loopne
mov
mov
pushl
xrelease
pop
xchg
les
leave
jae
sbb
sbb
ds
or
mov
mov
pop
movsl
mov
and
jne
pop
je
adc
xchg
lret
in
ljmp
je
cmp
push
arpl
out
hlt
cmc
lahf
pop
sub
add
xchg
jnp
pop
and
aas
mov
call
mov
mov
jg
or
mov
jg
dec
pop
push
das
ds
mov
int3
je
arpl
add
dec
lcall
call
mov
adc
stos
dec
dec
shrb
adcl
jmp
xor
pop
xchg
mov
mov
movsb
lret
push
out
sub
dec
adc
pop
cli
mov
ljmp
lods
sahf
adc
enter
les
and
out
imul
xchg
and
stos
sub
mov
outsl
jecxz
push
push
fcmovnbe
cmp
sbb
iret
jge
imul
fcomip
ljmp
adc
xor
adc
cmp
mov
jg
insb
hlt
stos
rorb
sub
or
push
cltd
mov
dec
cmc
add
lods
add
hlt
cmp
push
dec
cmc
cmp
sbb
pop
sbb
cmpsb
stos
push
test
loope
jmp
inc
cmp
test
popa
popf
sbb
clc
movsl
mov
xor
call
inc
test
sub
dec
inc
jb
outsl
mov
dec
sub
loope
and
xor
sub
mov
call
loopne
push
les
mov
add
cltd
cltd
inc
sub
pop
nop
mov
dec
sbb
decl
xchg
inc
xor
outsl
pushf
sbb
inc
sbb
std
push
pusha
bound
jns
jne
xchg
jg
lcall
loopne
aam
xchg
pop
cmpsl
js
int3
cmp
adc
adc
dec
and
cmpsl
and
incl
ja
fsubp
pop
xor
lds
dec
mov
mov
jle
mov
call
or
and
fcom
sarl
xchg
jl
and
scas
ljmp
and
sbb
push
bound
fistpl
inc
sub
ljmp
int3
sub
dec
addr16
and
inc
popa
jmp
pushf
in
lcall
cmp
mov
mov
sub
je
aas
jecxz
pop
jno
bound
or
dec
scas
int3
xor
fcomip
push
imul
mov
repnz
jnp
rcll
dec
test
rorl
push
pop
scas
cli
decl
dec
and
push
test
jmp
jno
test
push
jbe
or
add
call
push
sub
pop
push
in
cmp
fnstenv
clc
lea
pushl
scas
ljmp
scas
mov
mov
mov
or
decl
dec
or
and
sahf
js
or
xchg
xchg
sbb
dec
sbb
jnp
and
decl
leave
movsb
stos
push
in
hlt
inc
jnp
push
pusha
sahf
mov
inc
cmp
sarl
jns
mov
cld
jmp
and
xchg
mov
dec
or
ds
and
mov
or
dec
shll
adc
pop
dec
cmpsb
into
lock
adc
xchg
mov
cmc
cmp
addr16
fsubrl
ret
adc
dec
sbb
pop
cmpsl
std
push
dec
xor
lods
dec
dec
movsl
repz
in
mov
sub
jnp
push
dec
push
mov
push
gs
mov
sbb
xchg
aaa
out
clc
ret
and
mov
leave
gs
decl
movsl
imul
mov
pop
out
movsl
jns
mov
arpl
dec
xchg
cmp
mov
pop
loopne
xchg
adc
mov
jbe
inc
stos
movsb
or
std
jmp
cmp
mov
lea
inc
in
scas
js
and
ja
jl
jle
sbb
mov
fmulp
mov
cmpsb
mov
fnsave
mov
jmp
push
iret
jg
mov
imul
adc
cmp
pop
dec
aaa
pop
dec
stc
pop
adc
mov
lahf
cmp
and
xor
and
jbe
in
das
mov
inc
arpl
sbb
inc
jnp
cmp
sbb
mov
loopne
pop
ljmp
jno
sbb
pushf
xchg
cmc
xor
xchg
and
inc
cmpsl
cmpsl
push
ljmp
jp
jge
pop
fbld
mov
pop
adc
push
pop
push
mov
or
or
sub
sbb
icebp
jmp
call
loope
add
int
cmp
das
mov
in
lea
les
push
ljmp
jg
ljmp
xchg
add
cmp
pop
gs
rclb
inc
cmpsb
dec
jg
cmp
insb
loopnew
dec
sub
add
cwtl
mov
mov
ret
fsubl
cmp
jmp
cltd
xchg
stc
add
pushf
push
cmpsb
xor
das
clc
sti
std
mov
xlat
xor
call
ljmp
or
stos
and
push
scas
fstps
sub
sbb
mov
mov
pusha
sbb
fisubs
sub
in
xchg
mov
mov
int
cmp
fidivrs
mov
adc
out
xchg
sbb
mov
xchg
dec
pop
outsb
jbe,pn
adc
push
jns
in
fdivrl
fidivrl
jnp
out
pop
mov
loop
notl
subl
sar
sub
dec
push
mov
xor
ja
sub
mov
je
push
mov
mov
cmc
dec
mov
jae
stos
jnp
jbe
dec
mov
sub
subb
ljmp
pop
push
fmull
scas
lods
loop
fadd
or
mov
nop
push
sub
cld
call
lret
sub
xchg
xchg
add
or
movq
lahf
out
lea
jp
mov
sbb
xorb
shrl
sti
aas
dec
mov
incl
fsts
add
jle
push
lock
loope
sub
mov
and
dec
sar
dec
pop
dec
ljmp
mov
test
mov
mov
cld
xchg
icebp
sahf
lds
pop
inc
ret
lock
xchg
loope
adc
js
js
clc
sbb
es
call
inc
jp
jmp
imul
aad
hlt
shl
jp
xchg
push
add
lcall
cmp
dec
xor
xchg
inc
mov
mov
out
fdivr
scas
push
pop
das
cmp
adc
cmp
fsubp
xor
mov
dec
sbb
pop
outsb
dec
enter
ljmp
mov
mov
and
lret
pop
sbb
mov
sbb
out
pop
cmpb
enter
pop
sbb
mov
jmp
xchg
push
into
cwtl
pop
push
jle
or
fsts
inc
sbb
ljmp
sbb
mov
lds
out
leave
cmp
mov
pop
mov
test
in
lock
jg
cmp
push
jns
shrl
lahf
ficompl
xor
xchg
aad
pop
cmc
lcall
inc
es
lods
jp
pushf
cld
sub
jmp
add
cmp
call
sub
mov
mov
fistl
xor
shlb
aaa
push
cmp
mov
fs
inc
call
xchg
sub
adc
pop
aam
mov
insb
sub
push
mov
int
ljmp
in
mov
dec
ficomps
sub
mov
xchg
imul
ljmp
push
cmpsl
push
or
das
pop
into
int
subl
sub
cmc
pop
jae
mov
and
ds
mov
loopne
nop
movl
lds
cli
mov
out
das
or
inc
ret
test
mov
je
pop
lds
insl
push
mov
int
test
sbb
cmpsl
sbb
adc
mov
or
incl
fbld
inc
stc
xchg
mov
insb
push
xlat
out
dec
js
lahf
ljmp
out
xchg
lahf
mov
int
cmpsb
orl
out
clc
lea
push
adc
mov
cmp
call
sub
test
into
fwait
xor
pusha
mov
sub
and
cmpsl
dec
add
pop
lret
aaa
mov
sub
movsb
adc
and
outsb
push
daa
call
cmp
imul
cmp
push
mov
pop
in
jo
mov
xorps
je
adc
insb
xlat
cmp
ljmp
lea
das
lret
out
jb
pop
mov
xchg
fstp
pop
mov
cmpsl
fistpl
inc
test
cmp
pop
cmc
mov
cmp
loopne
divps
jle
outsl
mov
aam
sub
mov
mov
push
dec
sub
cmc
cli
cmp
push
and
mov
inc
sub
fsubrl
lcall
xchg
fimuls
outsb
adc
push
repz
imul
jns
mov
pushf
jmp
lret
cli
aad
inc
pop
cmp
mov
xchg
and
sbb
pop
push
out
nop
pop
fnstenv
test
mov
leave
jmp
xor
test
cmpsb
inc
repnz
test
push
jmp
pop
xchg
mov
cli
jae
imul
or
andl
test
push
test
clc
or
sub
imul
arpl
mov
or
pop
add
xchg
enter
ss
imul
lea
inc
inc
ss
repnz
jmp
out
push
imul
sbb
call
aam
out
lahf
ret
ret
xor
stos
cmp
mov
js
je
or
incl
repnz
pop
dec
mov
mov
mov
mov
int
inc
mov
pop
and
mov
es
insb
or
fcomps
jle
jb
aad
es
incl
mov
sbb
orl
jl
jmp
cld
leave
out
dec
pop
jnp
mov
scas
pop
mov
mov
stos
xlat
es
stc
jns
cs
jmp
jg
jmp
fsubrl
sub
insl
or
pushf
dec
sub
pop
ds
in
test
jl
adc
arpl
ss
aad
sbb
push
jg
dec
adc
xchg
les
pushl
cs
inc
adc
push
shlb
inc
ficompl
sbb
xor
imul
cmpsl
pop
push
dec
arpl
inc
pop
xchg
or
lock
cmp
orl
jmp
mov
rol
lret
call
mov
repz
xor
jo
xchg
and
and
push
mov
pushl
leave
mov
je
adc
lret
mov
mov
data16
sub
sbb
push
pushl
xchg
ss
cli
sbb
js
add
xchg
lock
xor
gs
es
incl
add
cli
aaa
sub
into
sbb
xlat
dec
je
adc
rcll
scas
clc
ljmp
jbe
scas
movsl
adc
pop
pop
js
mov
xor
loopne
cmp
repz
sub
pushl
dec
enter
outsb
mov
scas
xchg
inc
inc
fdivp
out
pop
lock
dec
pop
ss
call
call
xor
xchg
loopne
jo
scas
sub
iret
pop
jle
inc
push
jmp
or
outsl
push
xchg
pop
retw
nop
add
or
shrl
stos
fnstcw
outsb
decl
mov
xor
cs
xor
push
add
sub
loopne
aam
inc
add
fldt
ret
mov
mov
jle
mov
incl
orb
call
and
fisttpll
cmp
pop
mov
fisubrl
lahf
fildll
inc
sub
arpl
mov
mov
fbstp
mov
mov
cwtl
out
push
inc
mov
stc
ret
arpl
dec
jmp
decb
sbb
cmc
cli
push
mov
imul
mov
fnstcw
scas
std
imul
sbb
inc
add
sbb
cmp
movl
test
je
clc
jno
idivl
pop
cmc
dec
sti
imul
das
mov
pop
in
push
cltd
aas
or
push
cmp
mov
add
and
mov
cmpsl
nop
cld
jne
cmp
or
cmp
mov
xorb
push
push
scas
fcompl
mov
add
rcll
inc
mov
adc
shlb
push
push
adc
mov
inc
mov
or
add
jg
incl
idivb
rclb
adc
mov
nop
inc
ljmp
scas
stos
add
test
jne
jnp
sbb
loopne
inc
into
mov
lcall
pushf
pop
imul
mov
mov
cmpl
std
jae
mov
push
int3
ss
jecxz
daa
fisubl
out
push
mov
pop
jl
xor
lcall
call
nop
pushf
addr16
mov
sbb
jne
cltd
test
lcall
call
or
cmp
mov
cmp
data16
call
stos
movsb
data16
arpl
cmp
push
in
xor
movsb
je
and
fstpl
lcall
push
cmp
and
and
in
pop
leave
ret
imul
call
pop
sub
fisubrs
dec
pop
cwtl
mov
pop
dec
push
cmpsl
sbb
sub
dec
mov
jl
dec
add
ljmp
jo
cmpsl
outsb
pop
jbe
subl
mov
ljmp
popa
or
adc
adc
cmp
inc
enter
jbe
movsb
out
mov
adc
es
fmul
mov
inc
push
nop
or
xlat
pop
xlat
add
or
loop
adc
xchg
mov
push
xor
adc
mov
call
adc
outsl
sub
add
rclb
dec
pusha
and
xlat
sub
adc
call
mov
call
in
mov
lock
cs
jo
xor
jg
lcall
add
aad
push
mov
loopne
xchg
and
aaa
or
sahf
js
jb
ret
fbld
in
xor
lcall
ret
mov
cmpsb
mov
mov
insb
arpl
lret
inc
sub
fs
mov
inc
cli
sbb
pop
push
addr16
jle
dec
data16
mov
fiadds
pop
jmp
pop
mov
pop
into
or
mov
mov
sbb
jmp
dec
mov
test
fldt
pop
inc
ja
roll
in
ljmp
jmp
or
scas
xchg
sahf
inc
andb
mov
inc
fs
xchg
xor
cmp
or
fldenv
sub
icebp
xchg
ljmp
stos
test
bound
fs
jns
cmp
sub
ret
lcall
jbe
leave
jbe
pop
fs
dec
fiaddl
mov
mov
aaa
imul
clc
incl
jnp
mov
out
mov
xor
mov
cs
cmp
incl
dec
dec
stos
cltd
flds
mov
jmp
adc
xor
imul
and
incl
push
or
lcall
cmp
ds
jg
jge
jns
mov
pop
mov
lcall
shr
pop
outsb
sub
orl
fcmovnb
in
mov
gs
imul
mov
xor
movsl
dec
in
stc
ret
shll
push
mov
jg
mov
subb
cmp
jge
int3
repnz
mov
rorl
cli
clc
bound
push
add
dec
orb
and
push
xchg
push
and
jmp
in
push
movsb
fyl2xp1
mov
fsubrl
inc
xor
lock
inc
sbb
add
ljmp
sti
jo
lock
lods
pop
iret
ficoms
dec
xchg
mov
testl
test
cmp
push
jmp
imul
scas
add
fdiv
xchg
push
sbb
jge
push
or
jbe
fcomip
inc
and
out
dec
jmp
jg
cmpsb
cmpsb
icebp
push
insl
mov
fistpll
addr16
jmp
in
cwtl
adc
mov
jno
mov
dec
out
out
inc
ljmp
push
shlb
and
dec
dec
xlat
add
lahf
data16
jmp
je
out
fs
test
add
push
xchg
mov
movsb
bound
scas
pop
xchg
xor
add
cmp
lds
jmp
rcl
push
popa
mov
loope
cmp
dec
xor
adc
push
mov
icebp
icebp
and
in
es
add
lcall
loop
jge
mov
aam
hlt
dec
test
add
sub
call
lds
outsb
fld
adc
std
xchg
adc
mov
add
incl
addb
sbb
adc
cmp
cmpl
aaa
ret
ljmp
push
ret
popf
sub
fisttpl
jl
lcall
ljmp
pushl
adcl
xlat
js
test
mov
push
mov
adc
xor
or
lods
js
frstor
ss
xchg
and
push
cmp
sub
sbb
fidivl
rcrl
jl
inc
rep
mov
addb
add
add
sub
fisttpl
pop
adc
mov
aad
cmpsb
mov
repz
jne
xchg
pushl
jge
fcomi
jns
and
movswl
push
into
cltd
xor
outsb
add
mov
imul
mov
ja
jmp
xchg
inc
add
mov
mov
idivl
popa
jg
ljmp
mov
pop
ret
dec
jecxz
xchg
push
out
mov
cld
mov
das
xor
ficoml
dec
ss
pop
push
xchg
inc
ljmp
test
cmp
xor
or
or
push
aam
sbb
adc
inc
decl
fcmovb
adc
nop
push
inc
bound
push
or
clc
jmp
test
mov
xchg
mov
cmp
out
or
imull
cmp
pmulhw
add
sub
ss
aaa
push
ljmp
mov
insl
mov
xor
lods
iret
scas
dec
rorb
leave
xlat
sub
dec
inc
bnd
ljmp
pop
dec
stos
pop
jl
int
dec
inc
rcrb
enter
sub
push
jbe
imul
xor
inc
es
pusha
mov
mov
sub
jg
aam
and
rcll
sbb
filds
push
hlt
dec
jae
shl
int3
fidivs
jecxz
jle
gs
sbb
test
mov
jne
stos
pop
movsb
arpl
cmc
or
in
ljmp
sub
movsb
lret
decl
jmp
cmpsb
int
sbb
call
cltd
out
push
mov
push
xchg
pop
pop
lcall
inc
cld
jns
inc
roll
adc
xchg
test
jp
cwtl
or
xchg
call
subl
sbb
cs
cld
cwtl
cmp
push
ret
mov
or
dec
cmc
sbb
lods
push
repnz
push
mov
loop
mull
fdiv
inc
scas
scas
xlat
xor
decl
mov
lahf
std
adc
xchg
stc
in
pop
sbb
sbb
mov
pop
cs
mov
push
ret
lcall
icebp
or
jns
and
fiaddl
add
stc
int3
std
xchg
aad
dec
xlat
jnp
call
dec
mov
sbb
movsb
cwtl
call
aaa
jb
sub
lret
loopne
xlat
rcrl
xchg
stos
lods
or
scas
inc
shll
js
inc
fdivrp
sub
lcall
inc
mov
push
inc
inc
xchg
and
jmp
xor
or
and
in
test
mov
cmp
decl
sbbl
adc
add
aad
add
xchg
jno
pop
pop
incl
cld
pop
les
fimuls
jl
iret
or
movsl
aad
out
aas
loopne
jg
jmp
inc
cmpsl
pop
dec
xor
mov
mov
sbb
std
jmp
inc
into
push
cmp
and
and
icebp
or
into
ljmp
mov
icebp
mov
push
xchg
test
push
push
roll
ljmp
iret
es
jecxz
push
mov
in
xchg
cmpsb
out
fildll
mov
aas
ljmp
dec
icebp
mov
jbe
jle
mov
sbb
out
movsb
imul
sub
dec
dec
ljmp
jmp
inc
adc
mov
test
adc
subl
lcall
inc
and
in
mov
hlt
cmpsb
aad
jge
arpl
jnp
xor
lcall
mov
adc
enter
ret
daa
xchg
pop
or
ret
inc
sahf
outsb
stc
call
sub
sub
mov
imul
mov
cmp
sahf
mov
sbb
sti
ljmp
pop
ja
mov
cmp
data16
idivb
mov
out
repnz
loope
cmp
incl
out
in
jns
mov
sub
hlt
xchg
nop
pop
les
sarb
lcall
or
mov
sub
out
iret
dec
testb
call
inc
inc
xchg
aad
push
data16
pushf
es
mov
cmp
fs
lds
ljmp
sbb
ds
jno
sbb
imul
into
pop
mov
push
lds
xor
cmp
xchg
mov
mov
sub
cmp
mov
mov
or
mov
adc
pop
and
pop
push
adc
jne
inc
in
mov
addl
stos
xchg
inc
xchg
cltd
cltd
sub
out
shlb
movsl
test
dec
mov
idivl
out
mov
lds
leave
cmp
jge
gs
imul
fstpl
sti
cs
pop
in
imul
icebp
imul
mov
and
in
add
xchg
lret
outsb
and
adc
out
repz
sbb
adc
sti
mov
xor
addr16
out
stos
in
push
cmp
dec
cmp
mov
pop
pop
cmp
popa
inc
gs
sti
or
jno
jne
jns
jge
jne
ja
mov
lea
xchg
iret
sti
cs
or
das
out
sti
mov
or
or
das
rcll
or
inc
int
rcrl
out
sti
fcmovnbe
cltd
fnstenv
idivl
negl
push
in
mov
or
jg
pop
sbb
addl
or
ja
jbe
sub
or
cmp
and
and
or
mov
mov
cmp
cmp
sti
mov
dec
or
sti
sub
pop
popa
gs
xchg
idivl
movsl
insl
jno
jne
jns
jge
jb
jl
cmpl
xchg
in
mov
aaa
popf
adc
stc
fildll
mov
shr
push
jl
mov
push
leave
or
out
shl
aad
loope
idivl
in
jmp
pop
cmc
cmp
imul
add
or
mov
mov
or
cmp
mov
sbb
sub
sub
mov
push
cmp
out
mov
dec
sub
cmp
negl
pop
mov
lea
insl
jne
idivl
jno
jne
jns
jge
cmp
test
mov
movsl
out
sti
mov
adc
test
mov
mov
mov
movsbl
sti
cltd
lds
int
roll
aad
fcomip
jge
fsts
and
jne
das
jmp
or
icebp
cmp
or
pop
std
loope
jmp
testl
xor
ja
in
mov
cmp
mov
and
pop
xor
inc
loope
sbb
pop
fcomip
jge
dec
das
dec
or
push
movsl
pop
and
out
bnd
popa
imul
insl
or
mov
sub
addl
lea
jl
in
popf
or
lods
fbld
mov
mov
mov
xor
jge
movsl
rcl
push
loope
in
mov
in
inc
icebp
and
push
stc
sub
std
and
pushf
pop
add
icebp
dec
ja
in
and
sbb
and
and
ja
jno
xor
inc
inc
inc
sti
cs
mov
dec
imul
pop
and
pop
mov
pop
imul
jne
jns
jge
cmpl
xchg
mov
negl
out
cltd
or
test
pop
lods
int
mov
jge
rol
leave
or
sub
out
aad
fsts
in
mov
pop
mov
inc
cmc
or
out
std
cmp
popf
out
sub
push
xchg
or
popf
jmp
fnsave
jge
and
xor
pop
cmp
xor
rcr
idivl
and
dec
and
push
das
push
out
sub
das
gs
add
mov
push
jmp
jmp
sub
sub
mov
imul
or
pusha
or
sbb
or
decl
fsubrs
iret
mov
ss
mov
and
outsb
js
jp
movb
int3
ljmp
aam
dec
jge
mov
push
lahf
xchg
idivb
or
dec
pop
xchg
cld
fisubs
mov
ljmp
mov
scas
es
xchg
jmp
push
sbb
push
decl
aad
push
aam
stos
pop
adc
inc
sbb
mov
push
push
sbbl
call
mov
mov
mov
pop
xor
sti
or
call
andl
adc
les
xor
jmp
mov
push
add
jmp
in
ja
inc
pop
dec
shrl
or
dec
xor
pushf
shll
mov
decl
push
outsl
ficoml
mov
add
and
mov
int
jg
cmp
jmp
push
lcall
popa
push
xor
mov
pop
mov
mov
add
decl
loop
sub
push
cmp
cmpsb
cmp
mov
push
jb
cwtl
popa
mov
call
outsl
push
clc
or
inc
inc
pusha
ljmp
dec
imul
sbb
cmc
cli
xchg
hlt
sub
sbb
cmp
adc
xchg
jp
adc
cmpsb
jb
add
in
and
outsb
out
push
jge
mov
pop
push
sub
sahf
lahf
iret
stos
or
cmp
dec
add
jmp
incl
xor
out
push
sub
mov
loop
ds
pop
mov
test
push
push
jmp
pop
pop
mov
addb
adc
cmpl
imul
ret
dec
jmp
pop
shll
in
dec
jo
sti
scas
mov
fmuls
movsb
jge
std
loop
cmp
mov
dec
arpl
xchg
rcrb
xchg
arpl
ja
movsl
sub
add
insl
ds
decl
inc
and
sti
jno
sbb
sahf
push
sub
outsb
outsb
hlt
cmc
int
js
sbb
incl
add
mov
add
jl
push
sub
push
cltd
push
cld
push
xchg
mov
shll
fcomps
and
mov
arpl
sub
or
scas
pop
call
movsb
clc
in
leave
push
insl
xchg
inc
stc
jp
cmp
imul
dec
push
movl
incl
decb
add
pop
add
jns
inc
in
sub
jnp
shrb
call
cld
call
inc
in
push
fbstp
fisubs
das
add
in
cmc
add
div
fisttpll
aas
into
and
lret
jecxz
ja
mov
cmpl
or
adcb
sub
jmp
cmp
jmp
and
sahf
mov
stos
adc
and
fstpt
or
inc
xor
addr16
xchg
jnp
in
mov
addl
xchg
incl
push
cmp
inc
lock
pusha
pop
push
testl
decl
lret
aaa
and
xchg
mov
in
push
out
add
icebp
incl
inc
ficoml
outsl
adc
xchg
cli
fildll
pop
pop
sub
popf
jg
filds
ljmp
pop
xchg
cmp
xchg
sbb
and
repz
dec
std
out
stos
lds
nop
and
test
out
jle
movsb
xchg
test
je
ret
jmp
adc
shrb
imul
sub
js
mov
fcompl
stos
test
testl
je
pop
mov
notb
mov
xor
nop
cmpsl
dec
mov
inc
push
jae
push
popa
out
cmp
adc
enter
imul
fwait
aaa
nop
pop
sbb
out
ret
in
call
cs
rcll
jecxz
bound
aas
fwait
movsl
and
push
ja
cmp
mov
insl
mov
lock
lcall
fdivrl
mov
movsb
jnp
sbb
add
decl
inc
cmp
cmpsb
xor
mov
repnz
sub
push
aad
jmp
arpl
dec
xchg
mov
ljmp
popf
jns
mov
jo
ds
test
jmp
fisttpll
jae
sbb
jle
jnp
fstp
pop
xchg
sbbl
xor
cmpsl
sar
call
mov
mov
repz
test
loope
rorb
mov
sub
fcomip
ljmp
pop
xlat
idivb
in
pop
jno
xchg
sub
outsl
orb
pop
fwait
stc
cltd
sub
jmp
fs
push
addb
xchg
lods
mov
push
add
and
add
adc
adc
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
push
dec
sub
push
test
xor
push
push
leave
incl
in
call
add
add
dec
push
adc
and
adc
enter
inc
push
push
inc
push
repnz
jle
subb
inc
add
nop
or
and
and
mov
add
insb
adc
call
into
inc
fcompl
push
repnz
cmc
push
cwtl
andl
mov
inc
mov
cmp
dec
lcall
aad
mov
or
std
dec
pushf
push
mov
dec
xchg
jne
add
xchg
cmp
cmp
jbe
ljmp
add
and
pop
xchg
pop
and
test
stc
lea
scas
and
imul
decl
xchg
jbe
add
push
loop
jmp
pop
clc
add
sub
incl
lods
jmp
loop
repnz
lret
add
push
call
or
outsb
cmp
jne
bnd
add
iret
jmp
stc
sbb
sbb
out
add
jge
pop
and
cli
in
ljmp
loop
mov
add
out
pop
pop
loop
push
push
xchg
push
clc
pop
cmp
cs
decl
test
call
cli
test
in
ds
add
imul
add
pop
repz
outsl
dec
add
fiaddl
xor
insl
outsb
movsl
pop
mov
jg
in
mov
mov
into
add
adc
jmp
lcall
mov
or
add
dec
fidivrs
into
xchg
mov
jnp
jg
out
xchg
xor
pop
cld
or
out
cmp
dec
add
add
dec
enter
jl
out
inc
mov
enter
pop
mov
add
ss
sub
out
mov
ss
add
mov
inc
push
in
push
xor
add
mov
sbb
jmp
pop
push
jle
cmp
outsl
mov
mov
call
fdivr
dec
push
push
dec
push
inc
dec
ss
in
pop
dec
jecxz
pop
push
in
neg
sbb
loop
jnp
jbe
dec
fs
jne
and
incl
std
rol
jne
sub
push
test
pushf
inc
jne
xlat
push
push
mul
call
sbb
or
pop
dec
pop
out
push
push
loope
push
push
ficoms
inc
lods
movsb
inc
cmp
push
insb
pop
fldt
clc
dec
pop
stc
add
push
jg
xchg
dec
ss
gs
xchg
popf
sbb
jl
sub
clc
or
fmuls
pop
lock
pusha
push
loop
out
aas
inc
cltd
mov
pop
add
int
insb
inc
imul
pop
loope
pop
fcompl
xchg
stc
or
imul
or
loope
add
push
push
stos
outsb
mov
mov
outsb
outsl
clc
bndstx
jne
ss
mov
xchg
cmpsb
adc
or
imul
mov
call
imul
cs
or
push
cmp
push
mov
xor
add
xchg
push
cmp
and
inc
push
adc
adc
scas
imul
into
pop
inc
aaa
mov
cld
push
ss
ljmp
ss
mov
adc
or
push
push
or
mov
out
or
pandn
xorl
cld
cmpb
pop
test
pusha
out
idiv
jg
push
mov
add
jbe
loop
shll
into
jns
loopne
ds
mov
arpl
push
lret
int
inc
fs
add
mov
call
mov
incl
mov
ds
fsub
dec
cmp
push
xor
mov
cmpb
ljmp
pushl
mov
test
cmp
mov
push
xorb
pushf
aad
ljmp
shrb
mov
out
add
inc
cmp
or
push
jbe
fistps
mov
mov
lahf
and
mov
xchg
mov
lret
test
shrb
leave
outsl
and
sub
sti
pushl
mov
lods
mov
subl
push
push
arpl
lcall
insl
rorl
sub
rorb
jge
jle
cmpsl
xchg
bound
subb
cmp
out
loopne
or
mov
mov
xor
sub
incl
cmp
push
xchg
es
jmp
add
sahf
cmp
pop
jnp
loop
and
pop
decl
orb
mov
sub
mov
loopne
int
cwtl
lock
out
push
ljmp
je
loopne
mov
pushl
sarl
add
mov
jp
clc
jl
xchg
mov
das
clc
pop
jg
jo
dec
loopne
stc
pop
jmp
incb
sti
es
mov
fucomi
fstpt
push
outsb
adc
pop
loopne
std
add
add
pop
cmpb
dec
outsl
mov
or
mov
das
clc
cmp
imul
push
mov
xlat
fs
push
and
mov
int
pop
cmp
cmp
shr
cwtl
push
jecxz
push
mov
cmp
push
fiadds
sete
inc
mov
jns
inc
les
data16
mov
push
mov
inc
or
xor
jg
mov
mov
fidivrl
ret
inc
es
das
or
mov
xchg
mov
mov
dec
cmpsb
mov
mov
daa
out
decb
inc
js
mov
enter
mov
notb
aas
sbb
mov
push
leave
push
sub
das
add
sti
cmp
fistl
scas
lcall
mov
jl
loopne
int
xor
lock
addr16
push
in
jl
mov
mov
dec
mov
es
push
stos
mov
out
cmp
arpl
mov
mull
cmpsl
sub
adc
mov
clc
pop
outsl
mov
fcomip
js
mov
negb
in
pusha
pop
jae
push
rcl
call
testb
imul
jbe
dec
xor
push
cmp
xor
push
push
cli
pushl
popa
imul
cmp
dec
ja
inc
ja
push
jno
addr16
inc
xor
out
in
fs
aaa
dec
ja
xor
inc
push
inc
insb
push
pop
ja
inc
dec
push
push
inc
decl
incl
dec
jb
jae
push
outsl
pop
jno
push
inc
xor
jbe
js
inc
push
stos
pop
loopne
jns
and
xor
data16
inc
arpl
jne
jg
push
gs
lods
xor
inc
jb
jne
xor
mov
jbe
decl
insl
jne
pop
jno
dec
inc
jno
dec
gs
dec
gs
jno
inc
push
push
pop
dec
insl
push
insl
mov
ljmp
ss
push
jne
dec
fs
xor
push
xor
decl
cs
jp
cwtl
push
xor
dec
inc
inc
push
insl
js
addr16
mov
in
das
xor
xor
ja
jne
and
lock
push
push
push
inc
sti
mov
pop
dec
inc
dec
push
jae
insl
inc
shlb
jg
loope
push
dec
arpl
inc
js
inc
inc
clc
inc
push
inc
imul
sti
mov
push
push
push
ja
outsb
jp
jbe
push
rorb
ljmp
jno
push
fs
arpl
pop
pop
xor
sbb
dec
inc
int
testb
push
insb
popa
jb
dec
push
jne
outsl
push
rcr
imul
mov
inc
addb
push
push
inc
inc
dec
bound
dec
xor
orb
xor
push
xchg
and
stos
inc
push
push
sbb
push
and
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
adc
daa
mov
or
popf
xchg
inc
and
dec
mov
scas
cwtl
test
mov
shr
clc
or
push
es
repz
push
fs
fsubrl
pause
pushf
lods
mov
psrad
cmp
div
push
add
adc
ss
repz
dec
pop
push
mov
scas
mov
sahf
cmpsl
stc
add
adc
xor
jns
out
fs
cwtl
sahf
out
sahf
test
enter
cmp
sarl
sbb
dec
repz
repz
outsb
jle
mov
mov
shl
repnz
adc
xor
push
jns
out
fs
xchg
movsb
out
sahf
out
aam
clc
iret
repz
or
pop
cmp
repz
js
pushf
lods
repz
repz
out
sahf
out
es
cs
sahf
out
sahf
pusha
jb
xchg
movsb
mov
sahf
out
call
cmp
rcrl
ds
pusha
iret
repz
jo
xchg
mov
repz
out
or
sbb
out
sub
dec
pop
insb
out
sahf
out
nop
mov
jns
shl
repnz
adc
iret
repz
inc
push
fs
cmp
repz
cmp
out
or
sbb
cmp
insb
jl
sahf
out
mov
sahf
out
out
decb
sub
iret
repz
cs
pusha
jb
cmp
repz
movsb
mov
aam
lcall
push
es
sahf
out
dec
pop
push
sahf
out
sahf
mov
cmp
out
in
cld
push
sub
iret
repz
push
bound
iret
repz
xchg
movsb
mov
fsubr
stos
cmpsl
stc
cmp
or
sbb
sahf
out
out
dec
push
pop
push
insb
jl
mov
mov
shl
repnz
repz
adc
ss
iret
repz
push
data16
lcall
lret
cld
jns
cmpsl
stc
push
xor
xor
out
sahf
out
je
xchg
cmpsb
lahf
out
sahf
mov
fsubr
clc
or
cmp
repz
sub
dec
pop
repz
repz
mov
mov
xor
and
inc
push
data16
out
js
lcall
int3
fsubr
ja
push
and
repz
inc
push
data16
cmp
xrelease
stc
cmp
fsubr
cld
push
xor
sahf
out
sahf
xor
pusha
jo
jns
out
xchg
mov
xor
out
repnz
cmp
xor
je
cmp
repz
cmpsb
mov
jns
iret
repz
or
sbb
out
sahf
out
dec
pop
insb
jl
out
sahf
mov
cmp
repz
push
aaa
sbb
cmp
cmp
repz
pop
insb
jl
iret
repz
sahf
scas
mov
out
ds
push
es
jns
out
push
data16
xchg
out
sahf
out
mov
fsubr
iret
repz
cli
or
sbb
cmp
iret
repz
push
mov
stos
mov
jns
iret
decb
cmp
cs
sahf
out
sahf
push
fs
xchg
cmpsb
jns
out
mov
repz
repz
sbb
ds
add
cmp
pop
outsb
adcb
daa
inc
shrl
test
or
and
incl
push
lods
cld
lock
pop
xchg
repz
push
repz
lcall
out
adc
in
pop
pop
repz
call
icebp
push
xlat
shl
fists
in
out
push
icebp
fucom
push
repnz
incl
adc
and
mov
shl
fists
scas
xchg
repz
cmpsl
push
repz
mov
adc
cmc
mov
repnz
lahf
aad
sub
imulb
sahf
ds
adc
xchg
lock
in
not
repnz
outsl
xchg
repnz
addr16
hlt
outsb
outsl
push
hlt
sub
pop
push
fnstsw
lds
outsb
pop
aad
pop
push
roll
addr16
lock
imulb
icebp
in
cmp
push
push
negb
fnsave
aad
jge
xchg
repz
xchg
repnz
push
hlt
fnstsw
hlt
xor
mov
test
xchg
pop
push
hlt
insl
pop
aam
das
repnz
daa
into
mov
decl
mov
aad
push
call
pop
adc
push
scas
dec
icebp
mov
fdivr
in
jmp
icebp
fsubrp
xchg
cmc
lea
jmp
filds
into
lods
xchg
cmc
push
out
hlt
push
out
inc
lock
pop
lock
mov
repnz
jne
adc
mov
incl
scas
mov
aad
mov
hlt
mov
push
in
roll
cmc
scas
adc
cmpsl
add
mov
xchg
mov
add
aam
mov
out
inc
adc
jne
gs
cs
add
int
xchg
mov
push
gs
push
dec
pop
push
fsubrs
push
ss
sti
ss
push
cs
mov
ljmp
insl
inc
inc
sbb
push
into
pop
push
bnd
push
aad
das
adc
pushl
adc
out
aad
std
inc
rcl
push
aas
shl
mov
push
lods
pop
push
cmc
das
adc
shl
sti
jge
adc
into
push
xor
in
and
mov
lcall
and
fwait
out
mov
paddq
push
jle
aam
push
lock
call
mov
rcrl
int
xor
js
shrl
out
in
decb
scas
lock
or
push
push
xlat
rcl
push
fists
lcall
sarb
gs
ss
sub
shr
sub
loopne
clc
call
lahf
xchg
shr
xchg
xchg
shll
shrl
scas
idiv
pop
mov
xchg
pop
xchg
rcl
sahf
lahf
rcl
gs
xchg
shll
jmp
outsl
push
shrb
jle
rolb
mov
sbb
outsl
inc
insl
jle
dec
push
and
mov
push
rcl
mov
rcl
rcll
daa
xchg
xlat
and
in
and
push
es
adc
push
or
sub
push
mov
call
fsts
lea
adc
ss
jl
pop
rcl
mov
shll
xchg
fcomps
fmuls
cld
data16
pushl
ficomps
rcr
filds
ss
flds
push
xlat
cmp
xlat
adc
outsb
adc
push
cmp
xchg
into
scas
xchg
pop
jno
das
adc
adc
insl
xchg
adc
int
rcr
rcl
dec
inc
cmc
xchg
xchg
fdivrs
push
xchg
xchg
das
clc
outsl
rcl
in
sahf
lods
outsl
nop
fmuls
mov
fstpt
int
mov
push
inc
insl
outsb
sub
insl
test
ss
scas
push
push
into
pop
imul
adc
mov
daa
rcl
gs
rcl
xchg
es
lock
aad
push
push
pop
inc
incb
jbe
inc
adc
rorl
inc
test
stos
in
outsl
fadd
in
pop
pop
sub
mov
xchg
xor
jg
dec
push
fsubr
xor
popf
aas
pop
fcoms
sbb
cmp
adc
mov
out
cwtl
xlat
inc
xchg
dec
ds
fstpt
lds
std
adc
fimull
das
fmulp
xchg
fdivr
mov
lods
push
xchg
dec
jg
out
pop
xchg
push
xchg
dec
sub
ss
fbstp
push
sbb
xchg
jbe
jns
mov
fmul
push
aam
popf
cs
fdivr
dec
data16
es
rcl
sub
cld
pop
mov
aam
leave
xchg
sarb
push
xchg
std
in
sbbb
shlb
adc
std
ror
es
ror
mov
mov
icebp
xchg
mov
inc
sti
push
mov
xor
sar
jg
rorb
rclb
mov
iret
dec
inc
iret
mov
and
gs
xor
outsl
push
cmc
jmp
iret
fmulp
loop
loope
sarb
mov
ficomps
push
sbb
and
lods
push
and
sub
sar
in
sar
pop
hlt
in
mov
pusha
shl
mov
iret
test
loopne
pop
mov
jg
mov
into
adc
sahf
shlb
pusha
push
or
filds
rcr
mov
fisttps
mov
mov
std
pmaxsw
jne
pop
into
gs
iret
int
loopne
mov
outsl
push
add
iret
sbb
pop
push
aad
push
xchg
sbb
mov
sbb
fisubs
push
fdivrl
outsb
jg
xor
cmc
out
sarb
pop
into
inc
dec
mov
in
or
gs
xchg
mov
mov
iretw
pop
sahf
and
or
fcmovnb
pop
xchg
loopne
lods
push
jecxz
in
sbb
cmc
ds
into
mov
or
mov
into
sahf
arpl
into
insl
push
and
mov
int
jge
int
mov
fists
jle
lret
mov
arpl
in
and
outsl
or
push
jmp
jge
mov
ret
lds
sahf
mov
gs
std
xor
sub
insl
js
mov
aas
loope
mov
test
mov
push
cs
gs
xchg
and
push
mov
xchg
mov
into
out
and
lods
cmp
and
adc
in
imul
in
test
mov
out
jl
lahf
gs
cmpsl
and
into
fidivl
pushl
jmp
mov
sbb
sbb
jge
push
add
sahf
out
cmc
jae
into
cmp
jg
jmp
mov
mov
mov
fwait
daa
mov
decb
mov
mov
lret
sahf
aad
mov
fucomp
into
mov
jg
fldt
inc
push
out
sarl
inc
adc
mov
in
pushl
push
mov
mov
mov
xchg
dec
mov
ljmp
mov
in
outsb
mov
mov
pushl
pop
mov
xchg
sahf
jge
push
sahf
and
out
push
repz
or
pop
push
xor
decb
out
nop
mov
outsl
jbe
sbb
cmc
and
es
fdivrs
adc
lods
insl
out
pop
pop
fwait
inc
jne
pop
mov
jge
ss
fldcw
mov
gs
cwtl
mov
xor
xchg
fsubrs
jne
mov
xlat
xchg
push
sbbl
lcall
pop
mov
out
mov
std
pop
scas
in
jecxz
mov
scas
xlat
scas
push
push
scas
cmp
mov
lcall
insb
push
scas
fnsave
push
lods
inc
dec
push
scas
and
push
lcall
shrl
jge
xchg
mov
aad
xchg
push
push
pop
ss
sub
jle
out
adc
aad
mov
scas
mov
xchg
scas
in
mov
xor
sbb
xchg
push
popf
fsubs
fsubrl
mov
pushf
mov
movsl
pop
scas
pop
pop
test
push
sti
outsl
sahf
popf
sbb
pop
rolb
les
scas
in
push
outsl
fcmovnbe
mov
ds
cmc
jmp
xor
and
fwait
in
mov
xchg
xchg
mov
cmp
inc
pop
mov
cmp
mov
outsl
mov
in
scas
lea
xchg
adc
gs
push
scas
into
pop
adc
mov
daa
xor
mov
jbe
lcall
cli
mov
popa
pop
mov
inc
sbb
sub
xlat
mov
rcr
out
cmpsb
dec
mov
enter
clc
mov
and
cmp
scas
mov
dec
lcall
enter
lret
ss
mov
dec
mov
dec
mov
mov
mov
jmp
or
jecxz
ss
lret
add
mov
mov
dec
push
dec
outsb
cmp
mov
testb
jmp
out
lea
popf
imul
lods
lods
or
mov
dec
movsb
lds
int
mov
adc
push
push
mov
dec
dec
mov
xor
movsb
imul
jmp
mov
inc
in
lea
dec
test
or
sbb
idiv
dec
mov
incb
mov
inc
adc
scas
adc
test
pop
or
movsl
in
or
mov
inc
mov
orl
lds
mov
xchg
sub
incl
mov
wbinvd
mov
in
pop
mov
inc
lds
sbb
xchg
sahf
or
std
xor
inc
fs
mov
dec
dec
jbe
push
call
push
sub
scas
push
lahf
dec
xchg
xchg
or
mov
subl
sarl
test
dec
loopne
dec
roll
and
popa
jp
adc
cmp
xor
xchg
xchg
out
jecxz
enter
in
je
call
mov
pushl
iret
fistpll
adcb
iret
sbb
sti
aad
movsl
fwait
popa
std
push
dec
ljmp
inc
lock
mov
sbb
xor
mov
loopne
jno
jge
dec
jp
mov
xor
fcomip
jmp
cli
outsb
js
das
pop
lds
sbb
mov
jl
pushf
pop
fisubrl
jl
lcall
loope
test
rcrb
insb
je
add
jno
repz
dec
clc
mov
test
mov
or
push
add
jbe
mov
dec
subb
outsl
out
xor
cmc
xlat
mov
pop
daa
enter
cmp
xchg
xchg
incl
wrmsr
adc
subl
add
or
inc
aas
jb
idivb
shlb
cmp
push
lret
sbb
sub
psubsw
sbb
pop
jecxz
movsl
xchg
icebp
std
out
lcall
push
add
mov
in
push
ljmp
mov
push
ret
add
pop
test
into
ret
push
push
lret
out
popl
mov
sub
cmpsl
std
daa
push
ret
or
icebp
mov
lret
js
les
xchg
test
push
in
lcall
test
lahf
or
jne
leave
add
out
mov
in
out
mov
jmp
rcrb
inc
fwait
lret
mov
sbb
out
jg
and
roll
decl
inc
repz
filds
mov
xlat
incb
mov
shl
scas
andb
xchg
and
jle
push
xchg
aas
add
jmp
jg
xchg
sar
scas
inc
fwait
push
xchg
rcrb
aas
mov
mov
add
inc
outsl
in
inc
stos
sub
jg
test
insl
pop
inc
lret
pop
push
jno
add
push
outsb
rclb
push
or
push
cmp
pop
inc
mov
push
aas
dec
incb
xor
lcall
std
das
mov
scas
aas
addb
pop
inc
in
pop
inc
imul
decl
das
add
mov
pop
addb
pop
cmpb
add
cld
pop
lcall
out
incl
mov
mov
mov
into
cmp
sbbl
add
call
shlb
filds
mov
cmpsl
loope,pt
scas
jmp
adc
xchg
roll
lahf
add
xchg
jge
call
test
scas
push
xchg
testl
inc
clc
mov
xchg
jg
jne
adcb
outsl
inc
test
mov
std
xchg
das
adc
ret
jle
sahf
data16
addr16
mov
mov
ja,pt
pop
add
in
push
rcl
pop
mov
mov
das
clc
jmp
jg
cmp
inc
cmp
gs
out
pop
dec
sub
mov
jle
daa
test
aas
sahf
mov
aas
pop
push
adc
loope
pop
aaa
std
jg
add
mov
pop
cmc
add
jge
decl
cmp
incl
aad
or
filds
int3
pop
xlat
mov
jle
out
lcall
int
jle
in
cmp
fwait
sbb
fdivrp
mov
pop
push
cmc
jle
mov
fisubrs
sbb
jle,pt
aam
std
mov
shlb
mov
scas
cld
out
jg
adc
xchg
inc
mov
xchg
cmp
xchg
gs
xor
ret
ffreep
lds
test
jg
icebp
orb
out
in
pop
cmp
in
sahf
subl
sub
mov
adc
cmp
push
ds
mov
std
outsl
sub
xchg
sti
dec
aas
decl
jb
mov
das
js
fdivs
inc
pop
mov
mov
fxch
das
mov
cmc
movsb
adc
stc
dec
pop
inc
mov
aaa
xor
add
jae
jp
xor
mov
push
idiv
jnp
mov
lcall
fistpll
enter
in
cmp
int
aaa
cld
inc
out
std
popl
mov
popf
std
xlat
pop
in
jg
jne
cmp
mov
lcall
cmpsb
fucomip
scas
lcall
xchg
mov
cmp
lahf
jg
loop
roll
cmp
bound
std
ljmp
cwtl
dec
lock
jge
adcb
cld
das
cmc
cmpl
outsl
cld
test
ss
gs
out
jge
int3
pop
jg
jge
insl
aas
aas
pop
cmp
jno
pop
scas
fdivr
incl
jp
push
std
lods
lods
push
mov
nop
cmc
ds
decb
jmp
cmp
pusha
pushw
mov
mov
jle
jnp
mov
cwtl
jne
cmp
ficoms
fisubrl
std
fwait
adc
mov
push
jne
jge
xor
mov
out
cmp
in
xor
pop
push
pop
icebp
pop
jl
cmp
mov
in
jg
fdivrp
mov
mov
mov
cld
ret
mov
xor
mov
adc
xchg
jge
cmp
out
mov
sti
repnz
out
sbb
mov
mov
mov
xchg
loop
xchg
ds
popf
repz
fstpl
and
addr16
mov
add
pop
mov
cmp
insb
pop
std
lret
push
mov
mov
jl
in
jle
aas
ljmp
lds
pop
cld
jle
sub
mov
int
das
mov
jnp
cs
jle
xchg
cmp
les
mov
std
push
ljmp
cs
fisubl
mov
or
data16
sti
sbb
pop
mov
outsl
push
push
std
sti
jl
jp
ss
pop
cmp
mov
cli
outsl
cld
mov
add
jl
mov
mov
cmp
cld
fisubs
mov
add
mov
lock
cmp
jmp
cmpsb
cld
lcall
mov
mov
xchg
jle
cmp
aad
jl
cmp
cmp
enter
push
mov
push
jle
sbb
push
sub
pop
cli
pop
std
frndint
push
cld
jae
push
mov
aad
jp
jne
jl
cmp
mov
int
mov
inc
stc
push
dec
aas
mov
in
fs
jl
mov
pusha
mov
jnp
cmp
cmp
fwait
push
pushl
adc
shrl
pop
mov
jge
ss
cmp
test
scas
sar
push
add
mov
jl
pop
mov
cmp
cmp
cli
pop
sbb
xchg
imul
cmp
cmp
rcll
cli
jno
scas
mov
lahf
mov
ljmp
push
jl
jp
scas
cmp
xchg
jecxz
xchg
std
ja
push
pop
icebp
call
sti
js
xchg
mov
ss
addr16
jp
data16
mov
pop
jg
insl
cld
in
stc
scas
mov
aas
in
sahf
jb
js
outsl
jnp
cmp
test
cli
mov
daa
mov
dec
imul
pop
inc
jp
scas
aas
cmp
repnz
pop
pusha
cli
mov
stc
dec
jne
mov
pushl
pop
xchg
pop
js
and
cmp
lea
mov
in
sti
sbb
mov
leave
xor
negl
mov
cld
stos
push
cmp
pop
fistpll
test
adc
mov
pop
js
push
lods
clc
call
cmp
cmc
xlat
clc
adc
sar
mov
repz
mov
or
scas
lock
cmp
pop
hlt
or
cmp
cli
imul
popf
mov
push
cmc
xchg
jbe
xchg
jnp
std
lahf
cmp
cmp
testb
stos
loop
cli
movb
mov
cmp
insl
jp
mov
cmp
cmp
xor
rolb
xor
push
mov
jns
cld
decl
mov
daa
sti
mov
das
stc
jb
or
out
jp
in
js
insl
push
dec
mov
aaa
imul
cld
mov
das
sti
pop
cmc
pop
cli
fadds
sub
aad
jae
jns
cmp
ss
ret
cmc
out
stc
push
stc
shlw
xchg
mov
ja
mov
cmp
xor
cld
push
push
sar
xor
ret
js
pushl
aaa
inc
cmp
pop
std
mov
cli
push
push
mov
mov
add
xor
cmp
push
cmp
icebp
call
pusha
mov
cltd
call
aaa
cmpsb
dec
subb
jp
inc
push
cmp
inc
push
sti
dec
pusha
into
mov
decl
jle
ds
arpl
cmp
inc
inc
dec
in
inc
ss
pop
add
add
pushl
imulb
sarb
and
cmp
in
xor
xorl
add
dec
push
sti
pushf
lock
scas
cmpsb
int3
mov
aam
mov
mov
xchg
addr16
stc
pop
andb
es
lret
imul
incl
out
stc
int
mov
xchg
nop
fimull
and
jmp
rolb
pushl
iret
orb
adcb
inc
dec
inc
cwtl
call
outsb
gs
decl
push
add
fdivl
scas
pop
gs
pop
jecxz
xchg
pop
dec
mov
ljmp
dec
and
mov
test
and
loope
inc
loopne
mov
pushl
sbb
call
mov
and
fcmovne
cld
push
xor
es
insl
lahf
and
ret
dec
add
dec
cli
push
sbb
lcall
cmp
mov
dec
mov
push
dec
int3
ret
sar
je
adc
hlt
adc
mov
decl
and
icebp
outsb
es
test
add
sbb
pop
fucompp
fildl
sbb
xor
lea
sub
pop
push
lahf
les
call
xchg
dec
repz
fwait
test
into
xchg
js
jle
stos
or
pop
lret
xor
decl
movsb
mov
dec
adc
shl
ret
stc
xchg
sbb
std
mov
cld
cwtl
loop
inc
and
je
mov
aad
out
xor
sbb
adc
stc
and
sbb
stos
mov
push
js
sub
shll
stos
mov
pushl
dec
test
mov
loope
xor
fstp
dec
in
xor
js
lcall
push
sbb
iret
hlt
clc
cmp
cmpsl
push
mov
mov
xlat
scas
add
movsb
rcl
mov
insl
int3
fisubrs
mov
add
pop
hlt
xchg
imull
imul
pop
jnp
nop
add
jmp
sti
ljmp
and
push
push
fs
and
std
sbb
adc
ja
pop
rolb
mov
xchg
and
jae
pusha
enter
jbe
pcmpeqw
and
adc
pushl
jge
loopne
imul
fsubrl
jle
dec
cld
xor
dec
out
add
inc
ljmp
mov
rclb
dec
sub
xchg
mov
sub
leave
rorl
push
mov
push
lcall
das
cmp
fidivs
outsl
stos
or
xorb
dec
jle
push
stc
ljmp
sub
xchg
push
dec
sub
ficoml
popa
lods
inc
in
pop
jae
and
movsb
loopne
pop
sar
mov
or
or
lahf
add
adc
stc
leave
lahf
jnp
mov
stos
sbb
adc
test
mov
adc
inc
dec
andb
sub
icebp
or
stc
mov
ds
or
call
or
pop
repnz
lea
dec
hlt
lods
jne
pop
pop
sub
aad
jb
ljmp
test
in
outsb
xor
sbb
sbb
sbb
arpl
aad
sbb
jno
lcall
cmp
movsl
push
aaa
fcompl
push
mov
inc
inc
push
cmp
mov
add
mov
jp
rolb
add
mov
and
pop
xchg
or
and
mov
loop
mov
decl
mov
mov
movl
out
cli
negb
xchg
or
sbb
xor
inc
jecxz
fsubrs
sbb
sub
pushl
std
pop
stos
cmp
movsb
push
sqrtps
cmp
fimuls
dec
inc
sub
pop
dec
inc
pop
sub
fistl
lock
pushl
shr
xchg
xlat
ds
ds
mov
cmp
cltd
aad
aam
decl
mov
ljmp
sarb
xchg
ss
leave
xor
xlat
pop
or
adc
mov
sahf
imul
int3
mov
clc
mov
mov
inc
imul
dec
aam
dec
ljmp
push
sbb
adc
into
mov
lcall
outsb
mov
and
mov
lahf
jne
in
cmp
jnp
test
hlt
pushl
dec
int
shlb
out
ja
xor
mov
cld
xchg
cmp
call
ret
inc
xor
dec
into
mov
test
addb
jns
or
popf
mov
xor
imul
push
mov
mov
mov
enter
decl
fistps
pop
sbbb
xchg
jg
xchg
repz
inc
inc
in
mov
sti
pushl
xchg
mov
pop
pop
jg
adc
adc
or
dec
push
cld
ja
push
roll
mov
call
scas
dec
jmp
push
or
add
int3
push
mov
and
insl
mov
xchg
call
push
xor
mov
adc
xchg
mov
fldl
ss
pushl
aam
push
ds
mov
adc
xor
es
es
je
mov
cld
pushl
in
mov
lock
addb
or
fldcw
insb
pushl
inc
xchg
xor
pop
leave
xchg
cmp
arpl
and
test
jne
dec
lods
xor
nop
dec
roll
cmpl
cmp
fistps
outsb
cld
sbb
xchg
insl
pop
icebp
dec
xchg
add
imul
mov
jns
xchg
je
adc
lret
jmp
xchg
lods
xor
jmp
mov
pop
mov
aad
fcmovnbe
int
shlb
addr16
jmp
clc
ret
ljmp
push
adc
pop
int3
xchg
sti
sahf
adc
in
push
adc
and
pop
or
std
ljmp
sub
leave
mov
jl
shrb
rcrl
mov
pop
fcomip
push
cmp
sub
cmp
sbb
es
jp
je
incl
jle
xlat
test
adc
adc
out
or
inc
cmp
pusha
adc
sbb
int3
inc
cmp
pop
push
add
push
ljmp
pushf
mov
xor
pusha
jns
call
mov
xchg
and
jne
or
sub
mov
jo
loop
dec
in
pop
call
sti
in
popf
fwait
dec
mov
push
pop
xchg
inc
sub
rorl
js
or
xor
ljmp
leave
adcl
adc
sbb
adc
inc
push
std
arpl
ljmp
lcall
mov
inc
jmp
adc
rolb
fsubl
call
loopne
sbb
int3
pop
arpl
and
mov
jle
das
mov
jmp
into
jne
insb
movsl
andl
pop
adc
sub
loop
sarl
inc
xor
cmp
mov
subl
sti
add
or
mov
ljmp
mov
in
popf
stos
cmpsl
fcmovnb
test
sub
sbb
mov
stc
arpl
jg
call
xor
sbb
daa
bound
mov
out
or
outsb
mov
dec
mov
stos
mov
adc
add
dec
enter
cwtl
mov
adc
xor
jns
ljmp
pop
popa
mov
sbb
jb
addb
mov
insl
subl
cmp
int
dec
jmp
orb
in
inc
fyl2xp1
pushf
and
inc
mov
cli
push
sub
testl
mov
mov
clc
mov
scas
inc
aaa
mov
popa
mov
xor
ja
stc
addr16
mov
out
xor
mov
and
loop
sbb
mov
pop
stos
mov
scas
out
fldl
push
scas
fisubl
dec
scas
adc
lret
xchg
movsl
faddl
push
incl
add
cld
loope
adc
mov
fidivrs
mov
jmp
into
test
dec
jb
push
into
dec
jae
or
mov
add
inc
out
hlt
push
inc
mov
add
call
pop
outsl
ss
inc
mov
aas
cwtl
sbb
leave
pusha
lcall
je
push
adc
fisubrs
aam
nop
pop
push
push
ror
cmpsb
adc
int3
aam
inc
es
jmp
add
sbb
inc
enter
inc
fistl
inc
jp
mov
adc
ljmp
fwait
cs
inc
fists
add
xor
mov
sbb
idiv
das
clc
pushl
ljmp
sahf
in
repnz
ret
addb
sub
pushl
insl
movb
enter
mov
mov
cmp
xchg
cmpsl
cld
mov
ret
push
sti
icebp
and
call
stc
mov
xchg
shlb
movsbl
enter
cmpsb
mov
sbb
and
inc
inc
push
jecxz
insl
fcmovb
mov
idiv
dec
cltd
xor
shll
loopne
loop
sbb
sbbb
jmp
push
pop
lds
test
sbb
inc
scas
mov
dec
shrl
cmp
or
psrlq
push
mov
fnstcw
and
jmp
stc
adc
and
sar
fnstsw
jecxz
std
loop
data16
sub
mov
mov
call
icebp
ljmp
cmp
dec
xchg
in
lea
push
mov
sub
adc
jmp
mov
sbb
ja
sub
js
imull
and
push
aam
scas
movsb
push
mov
incl
cmp
lret
jle
inc
xor
dec
or
mov
mov
pop
or
xor
lcall
data16
mov
sahf
or
pop
out
xchg
add
jae
inc
mov
subl
and
cmp
push
add
cli
dec
pop
aaa
je
cmp
std
sub
orb
sbb
push
inc
mov
dec
xchg
or
pusha
sbb
pusha
adc
or
ret
jmp
jg
pop
adc
cwtl
sub
or
xchg
mov
push
xor
hlt
mov
mov
lds
xchg
cmpsb
out
insb
jnp
jns
fs
loop
int3
ret
and
or
jmp
arpl
das
out
fimuls
in
xor
mov
push
xor
andb
mov
and
cwtl
aaa
das
mov
aas
gs
test
ja
divl
repz
jge
cli
mov
or
cmp
shlb
lcall
inc
push
popf
adc
pushl
jo
ret
cwtl
jo
repnz
push
ss
lret
sbb
rcrb
pushl
ret
aam
call
test
xor
inc
sub
add
cmpsb
packsswb
mov
int
sub
ljmp
call
push
mov
jbe
decl
addr16
js
inc
rorl
test
mov
mov
mov
lcall
xor
imul
ljmp
dec
cld
ja
mov
ljmp
or
and
stos
rcl
mov
fs
lcall
decl
mov
lcall
shl
fisttpll
xlat
or
or
fisttpl
push
int
aas
cmp
jmp
or
mov
in
icebp
pop
inc
hlt
mov
add
jle
aad
in
es
sbb
fdivp
incl
dec
and
mov
pop
xor
xchg
inc
int3
lret
into
mov
and
int
vmaxsd
js
aaa
cld
fildl
dec
lret
cs
dec
rorl
in
or
push
lods
subb
ljmp
loope
bound
stc
mov
arpl
inc
mov
inc
pop
fdivr
fwait
mov
shrb
mov
sub
push
push
int3
fucomip
adc
sti
cmp
jl
test
out
cmp
loopne
ljmp
add
jmp
sbb
sub
imul
fldt
cli
cwtl
dec
cmc
mov
cld
push
js
mov
jle
xor
mov
in
mov
call
xchg
xor
pop
dec
sub
in
pushf
add
test
push
push
pushf
leave
arpl
jmp
dec
enter
je
stos
xchg
mov
push
les
outsb
sbb
call
ret
sar
inc
xchg
lea
cld
aaa
xor
cmp
les
lods
sbb
popa
fs
xchg
mov
xchg
pop
inc
add
mov
insl
in
xor
mov
pop
negb
add
cmp
mov
mov
pushf
or
fistl
pushf
pop
in
push
jne
jmp
movsb
mov
subl
inc
xchg
lcall
popa
movsl
dec
fwait
push
test
ss
jl
cltd
or
repz
sub
pop
xor
and
adc
cmp
jo
gs
filds
or
imul
mov
fisttps
mov
repnz
dec
inc
fucomi
inc
je
pushl
movsb
dec
fnstcw
push
mov
sbb
xchg
popf
fwait
nop
xor
cmp
test
popa
mov
jmp
push
insb
pop
xchg
lret
dec
fisttpl
inc
in
test
push
movsl
pushf
js
inc
jne
decl
pop
or
cmpb
xchg
xchg
test
out
outsb
push
arpl
ljmp
scas
mov
mov
add
xchg
fwait
push
mov
gs
jg
jp
movsb
fdivl
inc
xor
ljmp
sarb
cmpl
lret
cs
je
fcos
mov
fmuls
mov
pushl
mov
scas
mov
mov
popa
in
stos
pop
or
mov
adc
cltd
add
call
and
or
xchg
mov
addl
out
sar
jg
enter
add
sbb
or
out
iret
xor
popa
decl
jle
jne
dec
xchg
pushf
push
icebp
and
cmp
imul
out
sbb
loope
decb
adcl
fisubl
lcall
popf
shl
lds
xorl
jns
sbb
sahf
dec
xchg
mov
call
loope
aam
inc
sub
xor
push
inc
dec
idivl
jg
pop
rcll
jle
mov
les
outsl
fsubl
outsb
sub
ljmp
lret
sub
mov
sbb
adc
fcos
decl
popa
addr16
add
outsl
adc
fs
mov
repnz
sbb
dec
fwait
repz
mov
jp
ljmp
incb
lds
adc
cli
fs
stos
adc
push
repnz
out
clc
orl
mul
pop
push
fmul
mov
add
adc
mov
fs
out
xchg
push
rorl
mov
sub
add
and
outsl
mov
mov
loope
out
ret
adc
pop
test
fildll
outsl
xchg
pop
scas
imul
sub
jmp
xchg
movl
js
or
dec
cld
push
push
inc
scas
push
inc
push
pop
sbb
decl
add
mov
jmp
ja
cmc
fs
cmp
icebp
mov
ljmp
repnz
mov
test
mov
lcall
rolb
jge
pop
add
mov
push
int3
nop
pop
mov
sub
xchg
fldenv
aam
inc
out
clc
push
hlt
movsl
push
push
in
icebp
jmp
rcl
sub
enter
cs
bound
test
es
mov
jp
decl
dec
ds
mov
repz
subb
add
mov
pop
lock
cltd
sbb
in
pop
shlb
cld
xchg
std
cld
push
adc
pop
pop
cmp
cmp
add
mov
call
push
sub
jmp
adc
mov
shlb
pop
in
fists
ds
aad
clc
cmp
out
mov
push
mov
cmp
icebp
jnp
gs
pop
cmp
pop
cmc
sahf
add
mov
or
pop
or
test
jnp
dec
push
call
dec
mov
pop
stos
jno
xchg
fcompl
dec
rcrb
mov
xor
jbe
clc
decl
jno
fisttps
mov
sbb
cmp
mov
ja
pushl
xor
js
push
push
dec
push
adc
sarb
test
imul
incl
outsl
mov
stos
mov
pop
lods
loope
leave
movsl
jbe
aas
push
aam
mov
and
push
loopne
cmpsl
es
inc
add
adc
stos
test
mov
or
adc
cli
fcompl
mov
sub
clc
jp
inc
add
jno
add
jle
xor
std
scas
cli
call
clc
mov
lret
mov
fs
sti
xor
lcall
or
sub
cmpsb
xor
xchg
sarl
jg
jmp
pushl
mov
add
pushf
arpl
gs
test
push
dec
or
push
dec
pop
fidivrl
cld
test
add
lock
inc
pop
stos
xor
outsb
adc
mov
and
mov
xor
jbe
push
jle
fcom
push
jae
sub
pop
xchg
push
or
test
loopne
sbb
mov
outsb
mov
cmpsb
stos
xlat
lahf
lods
xchg
mulb
or
pop
push
outsl
loop
incl
sbbl
sub
inc
stc
ret
pop
adc
xor
mov
ss
ljmp
and
cmc
sti
jmp
mov
popf
cmp
sbb
jecxz
ljmp
push
adc
sbb
pop
repnz
sub
mov
in
xor
subl
jae
call
cld
sbbl
xchg
jne
pusha
movsb
push
mov
in
push
adc
lcall
stc
aaa
fstpt
pop
inc
sbb
xor
adc
add
cmp
call
xor
popf
sub
scas
push
das
int
ja
pop
cmp
test
mov
out
out
das
xor
movsl
je
mov
test
js
cs
incl
and
ret
mov
and
pop
dec
ljmp
cmc
pushl
cld
incl
int3
out
lret
mov
lds
jp
sbb
aam
dec
aas
int3
adc
js
ds
mov
enter
mov
push
jo
pop
and
lock
sub
jg
lcall
pop
cmc
cmp
inc
cwtl
lcall
dec
or
dec
adc
jnp
mov
or
inc
test
loop
out
sahf
inc
sbb
push
fs
sub
adc
hlt
lock
shl
incl
mov
incl
xor
pop
cmpsl
mov
dec
cmpsb
inc
adc
std
pop
ljmp
cmp
mov
jg
jns
push
pop
jge
pop
dec
daa
movsl
insl
adc
cmpsb
mov
fiadds
pushl
loop
js
scas
stos
int
mov
sahf
jbe
fnstcw
sub
push
inc
mov
insb
pop
aad
mov
jg
mov
cmp
cmc
je
rcl
aas
out
add
mov
add
out
adc
lcall
int
idiv
mov
xchg
rolb
push
iret
cmc
addl
shll
pop
dec
iret
and
scas
cli
cmp
test
sbb
add
xchg
jp
jns
lea
lcall
mov
mov
movd
xor
push
std
inc
js
jecxz
roll
inc
push
sub
xor
xchg
xchg
add
bound
shl
incl
mov
add
int
test
pusha
or
or
xchg
leave
pop
mov
sbb
mov
pop
fwait
add
insb
and
dec
push
inc
call
adc
cmpsl
mov
adc
and
ljmp
sub
subl
mov
push
ljmp
clc
std
adc
or
or
fdiv
sbb
dec
insb
add
jl
jg
and
jmp
fcomi
in
pop
les
xchg
jb
shll
push
arpl
push
cmpsb
inc
in
iret
popaw
pop
decl
dec
push
pop
mov
nop
pop
in
loope
fwait
les
xchg
popa
out
addr16
faddl
incl
sub
loopne
or
lods
lcall
sub
lcall
lcall
and
sub
xchg
pop
lods
xchg
andl
daa
inc
in
pushl
xchg
cltd
inc
jns
popf
push
and
push
mov
mov
lahf
add
in
cmpsb
sub
sub
cmp
pushf
daa
jge
cmp
in
jbe
dec
pushf
dec
mov
fwait
sub
xor
dec
sub
in
pop
jb
dec
data16
push
hlt
mov
lahf
lcall
jb
cmp
cmp
xchg
jecxz
in
mov
pop
mov
lods
mov
cli
call
inc
mov
cmpsl
mov
lea
mov
mov
mov
push
jmp
pop
push
fisubs
sbb
dec
ljmp
out
dec
cmc
xor
sbb
ja
jmp
cmp
mov
dec
jecxz
das
and
and
add
push
hlt
push
in
mov
xor
jmp
push
mov
test
adc
aaa
xor
cmpsb
add
fistpll
in
inc
mov
jmp
mov
sub
movsl
fs
jns
lret
imul
mov
or
dec
jp
orb
sbb
hlt
sahf
rol
push
pop
fwait
sar
jg
jmp
mov
mov
add
fists
mov
test
xchg
test
out
pop
push
test
incl
xchg
push
cmp
outsl
dec
cmc
ret
inc
sbb
sub
dec
pop
fbstp
pushf
push
and
push
and
xchg
decl
rcrl
add
inc
adc
decl
xchg
scas
int3
das
dec
push
mov
jns
cmpsb
xchg
mov
lcall
scas
out
enter
lea
sbb
insb
pop
or
or
cmp
fnstcw
xlat
sub
push
test
cmpsl
inc
decb
js
or
pop
push
imul
jecxz
cmpsl
nop
les
sbbl
aam
sub
fistl
mov
enter
add
sbb
out
cvtps2pd
hlt
adc
mov
jp
sub
inc
jnp
xor
jnp
out
insl
adc
jg
filds
lds
ljmp
push
inc
inc
mov
daa
dec
pop
inc
cmpsl
testb
jg
sbb
add
add
das
and
fcmovnb
adc
mov
xchg
nop
in
outsl
adc
je
pop
into
inc
leave
out
push
fldenv
or
clc
lret
inc
sub
in
adc
test
cmp
inc
dec
in
test
mov
jns
dec
mov
and
rcrb
shll
lods
lret
lock
and
shlb
nop
xor
pushf
mov
aam
mov
decl
mov
mov
mov
pop
and
push
jb
pop
addr16
jg
pushl
fdivs
mov
inc
or
aas
dec
adc
les
add
inc
push
pop
incl
push
icebp
xor
dec
jmp
pop
call
jle
clc
mov
add
cmp
ljmp
dec
lds
sbb
cmp
sub
das
das
push
test
jmp
push
mov
and
repnz
mov
dec
loop
leave
or
decl
lods
or
iret
pop
fwait
xchg
push
sub
pushf
in
jl
dec
nop
cmp
lcall
jmp
cwtl
cmpsb
stc
enter
bound
bound
js
imul
scas
jne
jmp
lret
leave
xchg
jno
lret
xchg
and
jge
popa
ja
int
sti
fwait
idiv
mov
ds
je
pop
mov
add
inc
add
xor
xchg
lcall
shlb
jl
pop
out
gs
dec
jecxz
dec
cld
mov
inc
mov
ljmp
mov
xchg
out
in
pop
push
sbb
ret
insb
xor
fwait
iret
out
mov
incl
hlt
inc
out
repz
jle
das
pop
and
add
ljmp
adc
ret
jge
loop
xchg
mov
jno
filds
dec
and
cmp
imul
mov
mov
pusha
xor
lds
adc
cmp
decl
dec
xor
push
ljmp
aas
in
xor
andl
xor
cmc
js
aaa
mov
lret
bound
stc
cwtl
in
jge
stc
in
adc
cld
add
adc
sar
mov
adc
cmc
fmul
push
adc
mov
mov
xor
bnd
jmp
push
stc
mov
sbbb
jns
ret
popf
orl
mov
jg
inc
inc
xlat
lods
fistpll
jmp
daa
gs
mov
xor
mov
jecxz
call
lods
mov
mov
into
sar
pop
jg
stc
xor
scas
add
sub
mov
mov
xchg
mov
lret
stos
nop
mov
addl
lds
clc
jge
mov
ret
adc
xchg
xor
aam
push
xchg
fstpt
lcall
push
inc
push
sub
pop
out
jmp
test
ljmp
push
xchg
mov
or
sti
mov
inc
xchg
ret
imul
xchg
push
mov
jmp
imul
sub
leave
subb
jp
mull
jb
js
jl
sahf
fstl
repz
dec
push
jno
data16
cmpsb
xchg
imul
mov
pusha
scas
adc
incl
out
mov
and
pop
or
push
xchg
in
sub
or
push
cmp
lcall
test
sbb
xchg
xchg
mov
stc
fisubrl
fdivl
jecxz
or
jmp
mov
lods
fnsave
jl
sti
in
xchg
pushf
ljmp
mov
shlb
xor
cmpsb
mov
pushl
cmp
lds
in
rcll
test
mov
push
out
and
ljmp
rorb
jo
inc
leave
imul
popf
nop
ljmp
jecxz
fisubrs
ljmp
xor
push
fiadds
rorl
lret
fwait
hlt
lcall
inc
scas
stos
push
test
gs
push
inc
push
movsb
int
test
mov
ja
cmp
or
cs
jg
jae
push
sub
out
movsb
mov
mov
push
mov
mov
push
mov
mov
sarl
nop
sbb
pushl
cs
inc
mov
mov
xor
xchg
or
cltd
sub
in
aaa
or
pushf
hlt
js
jmp
je
mov
inc
movsb
sub
push
jg
jmp
out
test
mov
sub
lret
fistl
ss
push
mov
pop
insb
aas
decl
mov
ficomps
lds
scas
outsl
dec
arpl
jo
gs
fdivl
aas
sbb
sahf
mov
xor
pop
jecxz
mov
lahf
fwait
imul
push
jge
sbb
jae
lock
movsl
rcrb
cs
sbbl
sub
test
add
imul
sbb
rorl
dec
test
es
lcall
cmpsl
sub
insl
lret
sub
lock
fisubs
lods
adc
xchg
jae
jo
mov
sub
jl
jl
mov
pop
jbe
and
inc
fbstp
ljmp
fistpll
nop
mov
inc
imul
lods
jo
pop
pop
icebp
dec
cld
test
popa
mov
push
into
jo
cmp
incl
push
pop
and
mov
mov
mov
test
mov
push
dec
push
sbb
adc
ljmp
mov
in
jae
lods
iret
mov
fisubl
pushf
jae
jge
repz
std
dec
xor
popf
sbb
lcall
jbe
andl
rorb
stos
ret
fildl
pop
or
lcall
cmp
jge
je
mov
push
cmp
mov
addr16
dec
notb
ljmp
leave
xchg
adc
sub
jbe
cs
jo
ja
popf
cmc
insb
pop
daa
call
enter
mov
movsb
lods
mov
inc
outsb
fs
add
jno
and
mov
fcmovb
ja
in
adc
sbb
xchg
mov
rol
or
data16
xor
les
incl
jbe
loope
leave
mov
mov
rcrl
dec
ja
and
mov
hlt
ljmp
xchg
loope
ret
aas
popa
scas
popa
mov
loopne
xchg
clc
xchg
es
inc
incl
fcoml
fsubr
or
sbb
repz
outsb
addr16
decl
mov
ss
mov
cltd
push
jns
xchg
pop
cmp
or
xchg
fxch
js
xor
lock
or
das
fcomip
lcall
out
inc
adc
lahf
data16
jp
in
push
push
cltd
mov
cmpsl
push
lock
stos
ljmp
nop
xor
lock
mov
mov
loopne
jb
lock
pop
adc
call
adc
das
fildl
pop
imul
and
cmp
clc
test
fildl
mov
mov
jmp
cmpsl
call
loop
clc
xor
mov
mov
cwtl
negl
enter
dec
pop
adc
jmp
incl
aad
jno
xor
lods
test
pop
cmp
or
mov
decl
cmp
outsb
bnd
setns
mov
decl
mov
xchg
add
stc
add
inc
inc
leave
fwait
cmp
add
push
dec
cmpsl
xor
push
jo
xlat
add
sub
js
and
call
lods
adc
pushl
cmpsl
pop
rclb
sub
pop
inc
popa
cmp
pusha
cmp
fcomip
push
and
out
cmp
loop
jle
fistpll
add
cmp
fwait
decl
bound
mov
and
sbb
cmp
icebp
fbld
jmp
mov
mov
call
and
imul
and
repz
imul
push
les
mov
cmp
push
cmp
fbld
cmpsl
dec
sub
cmpsl
pop
adc
rcr
repnz
sahf
and
loopne
lods
xchg
cmp
xchg
scas
push
cmpsl
mov
or
xor
sbb
mov
fldl
push
jle
push
mov
sti
popa
ss
imul
into
data16
push
ss
cmp
jge
cmp
dec
pop
movl
outsl
xchg
es
mov
incl
inc
fnsave
aaa
pop
fidivs
push
push
dec
sub
ss
cmc
jbe
mov
and
xor
insl
mov
jle
pop
mov
pop
pop
cmp
and
mov
filds
mov
loope
push
fidivs
out
pop
sahf
mov
mov
imul
pop
aaa
mov
pop
push
add
outsb
cli
push
aaa
push
loopne
xlat
ljmp
mov
arpl
or
push
fwait
pop
push
out
and
ljmp
clc
dec
repz
push
fimuls
xor
shufps
movzbl
paddd
sbb
push
outsb
dec
push
setbe
fmull
sbb
jno
push
cs
pusha
push
push
in
cmp
call
and
fimuls
push
popa
fisttps
jmp
sahf
mov
mov
or
mov
jle
mov
out
imul
outsl
decl
outsb
sbbl
xchg
sbb
jno
das
push
push
scas
rcr
stc
sahf
xchg
cmpsb
jmp
subb
or
leave
pop
ss
sbb
cmpsb
lods
fmull
push
in
loopne
or
ds
pushf
or
in
push
pop
pop
push
mov
push
push
cmp
mov
pusha
repz
pop
jl
sahf
mov
jbe
ss
mov
adc
in
decl
sub
pop
or
push
or
es
jg
add
add
or
pushf
or
insl
pop
or
cmc
pop
or
clc
in
or
mov
or
ficoms
lahf
or
outsl
xchg
pushf
lds
nop
pop
jbe
sub
orb
push
jo
jle
fmull
pusha
push
jbe
mov
pop
push
fisubs
sahf
or
mov
inc
push
out
or
aas
out
decl
scas
xor
sbb
popf
sbb
lock
jle
push
pop
or
cmp
aaa
sbbb
push
mov
sahf
sbb
popf
sbb
fldt
les
out
rcrb
sbb
sbb
call
ficomps
into
enter
outsl
lcall
inc
fwait
or
pop
scas
lods
pop
sbb
pop
inc
mov
or
in
sbb
fstpl
fidivs
in
sbb
jl
or
pop
or
cmp
push
mov
or
sub
or
or
sbb
in
mov
outsl
mov
sbb
inc
sbb
add
sbb
sbb
xor
sbb
insb
fistpl
push
hlt
in
mov
fisttpl
xor
jle
ss
aam
push
cld
dec
add
push
out
jb
xchg
fcompl
mov
xchg
es
add
push
pop
insb
or
inc
dec
sbb
sbb
stos
fisttpl
inc
fisttpl
dec
ficomps
or
ficompl
outsb
icebp
pop
pop
cs
jno
or
mov
or
or
fwait
push
bound
ljmp
mov
out
jbe
lcall
fcompl
add
mov
jle
pushf
sbb
cmpsb
mov
sbb
cmp
xchg
decl
mov
sbb
cli
ds
fidivrs
sbb
xchg
cltd
sbb
pusha
xchg
xchg
sub
inc
and
lock
mov
ficompl
ss
mov
fwait
dec
add
mov
mov
add
aad
imul
fstps
data16
ds
sbb
xchg
pop
push
lock
jle
push
pop
sbb
push
sbb
ficompl
mov
push
movb
xchg
jbe
jle
pop
mov
fwait
pusha
mov
push
cmpsb
jle
mov
fimull
sbb
in
jg
add
push
sahf
cmpsb
pop
sbb
sahf
pop
sbb
inc
mov
mov
xchg
fstps
scas
fcomps
negb
xchg
or
outsb
jle
insl
push
mulb
mov
add
mov
inc
push
mov
pop
sbb
push
pop
sbb
fcmovnu
fiaddl
sbb
fcomps
out
fldcw
insb
insl
roll
pop
testb
jo
fstl
jle
inc
into
into
dec
sbb
push
sub
cs
outsb
clc
sbb
pop
imulb
sbb
push
mov
sbb
outsb
push
outsb
xchg
scas
cltd
sbb
mov
call
cwtl
sbb
xchg
pop
and
jle
add
xchg
fcos
mov
outsl
lahf
or
lcall
xchg
sbb
lcall
ss
ss
sbb
jle
push
out
xchg
aas
pushf
call
cltd
jmp
imul
xchg
mov
xchg
xchg
dec
mov
jae
mov
sti
cmpsb
add
popf
xchg
fwait
push
ljmp
stos
mov
pushl
dec
ficompl
outsb
and
incl
fdivr
in
pop
cltd
cld
cmc
addr16
std
in
pop
adc
jg
ljmp
pop
cld
xor
dec
sbb
push
movsb
cld
std
and
adc
sub
push
fwait
adc
pop
adc
sbb
scas
or
fistl
adc
sub
lcall
mov
add
adc
or
adc
cli
fnstenv
jle
rcrb
push
into
mov
call
adc
aad
adc
out
sar
out
out
std
cmc
mov
xchg
std
lods
rclb
fcos
cmp
rclb
std
jecxz
adc
rcrb
fs
mov
mov
push
pop
sbb
dec
sbb
movhps
push
ljmp
ret
push
push
mov
test
insb
or
sbb
jl
stc
rolb
stc
js
mov
xor
cli
pop
push
dec
cli
fildll
sti
out
push
cli
scas
mov
fstpt
stc
out
dec
iret
push
ss
dec
mov
cmpsl
push
dec
cli
sub
xchg
or
iret
cmp
clc
daa
inc
int
outsl
cmp
adc
mov
scas
es
decl
stc
xchg
es
cli
into
decb
cli
push
testb
jle
clc
push
push
int3
stc
outsb
mov
mov
out
clc
es
ss
mov
sti
es
jmp
push
dec
sti
mov
lcall
decl
test
or
pushl
add
add
into
ret
add
cmpsl
mov
ljmp
sub
mov
inc
jmp
adc
add
mov
mov
call
or
mov
ljmp
call
push
out
bound
out
jb
sti
call
ret
out
dec
cmp
adc
in
arpl
jg
xor
mov
jge
jmp
dec
shll
out
sub
out
and
out
mov
mov
in
cmp
adc
or
sbb
cmp
outsl
cmp
ds
sti
mov
sbb
jp
mov
decl
out
in
out
fdivrl
out
in
in
cld
stc
in
hlt
mov
adc
jp
jmp
fmul
jl
test
cmp
cmp
or
fistl
push
xlat
xlat
shl
in
into
cli
jl
loopne
cs
mov
clc
iret
dec
std
mov
xor
stc
insb
rol
pushf
mov
call
inc
add
stos
add
fnstcw
imul
call
incb
gs
pop
insl
inc
std
iret
gs
xlat
jge
lcall
dec
shl
jg
push
jg
push
dec
ds
inc
in
pop
jecxz,pt
addr16
jecxz
aas
add
fnsave
add
aad
sar
in
jmp
fstl
in
dec
and
sub
and
in
inc
std
loope
cmp
loope
loop
call
mov
loope
adc
loope
and
stc
cmp
loope
jg
mov
adc
loopne
or
loop
dec
loope
ljmp
cli
cli
cmp
or
cmp
xchg
cld
loop
rcrb
loop
fdiv
jg
loop
decb
fcoms
mov
ljmp
incl
mov
out
xchg
or
or
stos
push
jg
or
movsl
sbb
jle
inc
mov
push
mov
or
outsl
xchg
push
or
outsb
adc
ss
mov
pop
push
aaa
pop
jle
negl
push
pop
mov
outsl
pop
or
mov
mov
outsl
add
push
addl
push
xchg
push
imulb
pop
out
idivb
addr16
add
aas
adc
or
pop
xlat
into
pop
xchg
pop
mov
xchg
or
notl
scas
mov
addr16
or
cs
aam
jg
push
push
pop
xchg
xchg
push
cmpsb
pop
push
push
das
dec
pop
ds
dec
push
into
das
inc
pop
cld
pop
testl
dec
pop
fcomps
testb
or
out
cli
inc
pop
and
inc
je
inc
cmc
and
inc
pop
repz
inc
sbb
adc
fistl
dec
push
iret
inc
vandnps
inc
mov
adc
out
in
xlat
hlt
insl
cmpsb
xchg
clc
mov
xchg
push
out
mov
push
inc
lea
sbb
adc
addr16
ljmp
xor
xchg
data16
repz
push
cmc
fisttpll
call
hlt
jge
aad
sbb
sbbl
testl
adc
in
pop
lock
call
stc
int
xlat
clc
mov
fdivr
gs
xchg
sub
stos
xchg
add
inc
into
push
cmp
clc
call
pop
push
adc
adc
cmp
aad
lock
jbe
xchg
mov
dec
sbb
ljmp
roll
push
cmp
dec
add
ficomps
cmc
add
daa
cwtl
decl
incl
push
call
hlt
fisttpll
push
rep
call
sbb
jbe
call
push
ss
rcrl
iret
xchg
fwait
xchg
sbb
push
cltd
ds
push
mov
jmp
int3
aam
frstor
jnp
and
je
add
jo
xchg
and
mov
sbb
aas
mov
hlt
or
jb
sub
daa
mull
aaa
mov
daa
xor
sbb
jae
call
pop
and
inc
mov
pop
push
xchg
fidivs
add
ljmp
stos
adc
aaa
enter
nop
push
pop
test
dec
fnsave
aas
jg
lock
push
xchg
es
hlt
mov
mov
test
incl
push
cli
test
add
pop
sub
xchg
push
xchg
jle
test
loope
and
inc
lock
incl
pusha
jo
add
imul
mov
jmp
dec
xchg
xchg
sub
decl
loop
icebp
daa
sub
lds
lods
mov
adc
cmpsb
cmpsb
inc
enter
lds
and
into
mov
inc
mov
mov
stos
sti
mov
dec
mov
mov
dec
test
cmp
xchg
and
dec
push
push
hlt
std
push
ds
jne
decl
es
and
mov
in
rclb
mov
jp
sbb
dec
pusha
divl
sar
ficompl
dec
loopne
mov
icebp
hlt
sub
xor
sbb
pusha
fisttpll
ljmp
push
add
adc
mov
sbb
lods
scas
push
cld
jno
gs
mov
pop
xorb
pop
and
in
mov
cmp
clc
lcall
ja
pop
xor
sbb
stos
ds
jne
loope
sbb
fcmovu
out
sarb
out
pop
scas
fwait
inc
ljmp
pop
out
and
inc
mov
mov
cmpsl
insl
mov
je
andb
pop
in
addr16
add
out
mov
push
sar
aaa
cld
push
les
push
jo
repz
sub
repz
ljmp
mov
cmpsb
mov
or
fs
loope
jl
scas
aam
popl
sub
sub
sub
ljmp
push
gs
cmpsl
shll
or
jne
outsb
sub
repnz
or
test
call
and
ds
push
push
fistpll
pusha
mov
js
lahf
push
repnz
and
decl
cmp
and
sbb
xchg
jae
push
inc
dec
and
push
in
shll
ljmp
push
js
iret
push
insb
out
jb
fstpt
mov
lahf
and
push
dec
push
sbb
or
adc
pop
loopne
mov
sub
sbb
cmp
pop
test
idiv
call
mov
nop
mov
stc
xor
or
xchg
add
inc
lock
mov
int
test
sub
push
push
push
push
adc
xlat
div
idiv
pushl
pop
mov
test
or
adc
cltd
pushl
mov
int3
and
sahf
test
and
mov
movsb
cmp
fwait
cmpsb
mov
insb
loop
call
add
in
ficoml
mov
mov
rol
sub
cmp
dec
pushl
lods
cltd
pop
adc
xchg
std
negb
insb
repz
addb
call
lods
xchg
sub
xor
mov
jmp
fwait
push
mov
int
mov
jmp
leave
outsb
push
hlt
add
cmp
lock
idivl
cmp
mov
adc
cmp
call
in
push
xor
jne
pop
les
std
cmp
dec
mov
xchg
movsb
mov
jle
jo
fwait
jnp
loop
int
fistl
enter
stc
sahf
pop
lcall
cmpsb
adc
test
jae
mov
inc
jecxz
jl
mov
adc
mov
add
ljmp
push
lret
shll
mov
inc
fcmovbe
or
push
stos
sbb
jg
mov
clc
pop
cmpsl
nop
jae
dec
rcl
arpl
ret
arpl
push
loopne
inc
icebp
jmp
pushl
insl
jo
lea
jno
xchg
ja
outsb
call
cmp
repnz
lcall
mov
out
pushaw
fsqrt
push
cmpsl
popf
adc
mov
bound
fdivrp
fistpll
outsb
into
pop
cs
push
cmpsb
push
fcoml
jmp
push
xchg
ret
dec
adc
cld
pushl
stc
dec
lret
ds
clc
rcrl
xor
inc
mov
repnz
pop
sti
mov
push
js
adc
out
push
mov
add
mov
cld
jg
std
xchg
adc
or
mov
lods
hlt
dec
aas
ljmp
ret
mov
fnstenv
test
jnp
shl
aas
push
mov
out
out
outsl
cli
mov
jo
sarl
popf
lods
pushl
cmc
cmc
or
test
dec
mov
xor
add
sub
into
in
call
ljmp
dec
rorb
pushf
mov
inc
adc
pop
and
ds
add
popf
xchg
inc
movsb
and
js
in
or
in
and
iret
mov
adc
jmp
loope
std
enter
call
mov
out
hlt
adc
loop
icebp
popf
mov
jg
pushl
mov
fwait
dec
cmp
mov
divb
sub
cs
inc
movsl
fs
das
shrl
xchg
inc
out
jns
ja
fs
jecxz
push
hlt
call
jl
sahf
lea
lds
scas
mov
add
add
insb
out
fstps
pop
pminub
xlat
push
les
stc
adc
fsubl
adc
mov
dec
loope
xchg
mov
add
scas
jmp
dec
test
std
in
nop
fisubrl
ror
mov
mov
inc
sub
aad
or
in
insb
lods
int
cli
mov
pop
cs
jb
out
lcall
push
dec
bound
sbbl
hlt
cmpsl
fs
cmp
xchg
int
xor
adc
popf
or
int3
movsl
lods
mov
pop
pop
inc
in
cli
mov
jmp
push
iret
imul
insb
cltd
outsl
xchg
pop
sbb
and
mov
jg
mov
mov
fadds
push
lea
ss
clc
mov
ljmp
mov
jge
lods
movsb
mov
orl
or
popa
push
xchg
pushl
xlat
jge
call
daa
or
cmpl
jp
je
out
pop
mov
jmpw
into
fnstcw
mov
dec
pop
sbb
inc
fucomp
dec
xchg
out
fadd
pop
pop
ror
adc
xchg
js
mov
das
test
jg
sbbl
cmc
push
add
in
dec
or
push
pushl
sbb
rorl
cltd
lret
data16
std
into
fstpt
jbe
fxch
fisubrl
call
cmp
out
inc
inc
outsl
cs
sub
lods
lcall
xor
ljmp
int
xchg
xchg
push
push
aad
pusha
sbb
pop
lds
iret
pushf
insl
add
pushl
push
pop
cmpsb
inc
pop
clc
xlat
add
pusha
adc
fstl
sbb
in
xor
cmp
call
fdivs
add
jno
fnsave
js
push
sbb
mov
cmp
inc
insl
addr16
in
pop
lea
aam
pop
xchg
out
dec
inc
ss
pop
bound
fisubrs
sar
lcall
ret
xchg
hlt
in
adc
cmpsb
pop
popa
add
mov
sti
aaa
mov
or
and
jmp
xchg
je
and
add
jae
je
mov
mov
inc
dec
inc
lcall
das
jnp
outsl
push
repz
adcb
in
neg
test
xchg
jge
decl
jg
shlb
icebp
ficomps
leave
cmpsl
in
inc
les
leave
dec
fsubl
sti
xor
lcall
stos
lret
test
jne
mov
mov
sub
push
lret
shll
push
mov
lcall
outsl
push
in
pop
mov
aas
dec
inc
ds
mov
mov
mov
sub
xchg
imul
pushl
cld
push
jl
jns
imul
test
mov
stos
pop
or
fisttpll
fcomip
lcall
jne
out
jo
inc
aad
xchg
mov
imul
mov
xlat
xor
cmpsb
xor
stc
xchg
in
icebp
lea
dec
push
ss
cmp
lcall
cmpsl
jmp
out
int
pop
roll
pop
sbb
inc
jb
popf
in
das
sbb
jbe
decl
sarb
add
shr
into
xor
cmp
das
lds
sbb
movsb
dec
fldt
cmp
pop
xor
lds
mov
mov
adc
les
mov
push
aam
jl
loopne
pop
push
cmp
cmc
and
hlt
adc
sti
cli
bound
dec
cwtl
push
js
lods
imul
sub
call
fistl
lea
push
push
pop
mov
icebp
pop
lea
add
testl
call
sti
ds
pminsw
es
int3
sub
xor
push
loop
jge
lea
nop
lcall
push
adc
lret
ljmp
cld
mov
out
dec
xor
cmp
dec
inc
mov
or
and
or
sbb
mov
rol
adc
mov
into
inc
stc
xchg
jno
imul
pop
in
mov
inc
push
add
dec
cli
jge
cld
mov
add
mov
loopne
adc
xor
scas
lcall
ljmp
add
jae
mov
adc
fnstenv
dec
stos
addr16
mov
jg
gs
mov
or
cmp
mov
mov
dec
dec
mov
xor
nop
adc
dec
sbb
mov
push
imul
pop
int3
aaa
imul
call
imul
ljmp
das
dec
aaa
pop
or
decb
mov
into
push
mov
shll
repnz
add
fisubl
scas
and
call
lret
jmp
into
gs
lods
jmp
ficoms
scas
sarb
xchg
es
cli
dec
sbb
xor
outsl
mov
mov
adc
cld
jmp
mov
ljmp
pop
cwtl
iret
popa
xor
addr16
adc
in
call
xor
imul
sbb
arpl
std
insl
sbb
out
mov
nop
fistpl
out
jb
inc
and
xchg
push
push
jb
test
push
and
sar
incl
jecxz
add
push
mov
push
and
push
clc
mov
adc
cmp
stos
lods
stc
jl
ljmp
mov
push
pop
cmp
mov
inc
jno
mov
push
sbb
pop
das
leave
xor
sahf
xchg
in
adc
icebp
jns
lret
vpmaxsw
les
push
popf
pop
cmpsl
mov
sar
xor
in
pop
mov
repnz
arpl
push
or
dec
jecxz
scas
enter
out
gs
ljmp
insl
sub
xor
mov
stos
adc
ja
sbb
dec
mov
sahf
mov
incl
inc
push
negb
sub
lahf
sub
xchg
mov
or
fbstp
pushl
mov
inc
cmp
cwtl
cmp
or
pop
mov
or
fdivs
cmp
pop
sub
in
mov
xchg
and
call
loopne
es
xor
dec
jg
call
leave
xor
push
xchg
mov
pop
inc
pop
rclb
sbb
xchg
imul
pop
daa
pop
mov
incb
push
cmc
sub
xor
ficompl
pop
dec
cmp
inc
fdivrl
pushl
arpl
pop
or
xchg
jno
das
mov
cld
pop
and
pop
or
aam
movsb
mov
mov
movsl
ja
adc
xchg
sbb
pusha
call
adc
lahf
popf
mov
xchg
and
js
sbbl
and
cmpsl
sub
jle
fcomip
mov
and
dec
xor
inc
and
outsl
jo
cmc
mov
mov
cmc
inc
mov
mov
xchg
aas
stos
inc
jbe
mov
call
ss
mov
loopne
or
mov
push
sub
jge
push
lcall
push
aas
or
sub
mov
mov
mov
pushf
into
mov
call
shlb
pop
sub
repz
leave
mov
push
mov
pop
ret
fdivs
call
inc
sub
das
inc
xor
aaa
mov
daa
cli
ficompl
jmp
rolb
mov
jmp
xlat
xchg
sub
les
add
push
stc
push
pop
sub
dec
inc
clc
incl
pushl
adcb
in
fldl
jnp
ljmp
cmc
fisttpl
cli
call
stc
dec
dec
mov
pusha
je
cmp
mov
xchg
pop
out
lret
decb
jnp
cmp
sti
rolb
mov
sbbb
xchg
sub
clc
fstpt
decl
out
xchg
cmpsb
scas
fdivl
scas
imul
cmp
fisubs
pop
setl
ljmp
adc
jle
in
daa
pop
aad
imul
xor
inc
jbe
mov
jbe
push
push
push
fistl
out
shrb
stos
icebp
je
sbb
lret
out
xor
fcomip
pushl
fnsave
xchg
xor
add
jge
and
inc
mov
mov
jmp
flds
pushf
pop
shll
cmp
sub
push
dec
and
pushl
mov
loopne
mov
and
insl
cmpsl
in
mov
imul
test
jmp
push
push
pop
xorl
mov
add
mov
jno
orb
sub
rolb
decl
xchg
mov
rcll
sbb
inc
xor
mov
test
jmp
mov
cmp
adc
and
dec
jl
and
pop
sbb
mov
or
xchg
add
scas
fisttpl
mov
out
aaa
ljmp
pusha
xchg
test
das
insb
xchg
inc
or
mov
addl
addr16
adc
xor
gs
jp
mov
adc
pop
mov
and
sar
cs
adc
xor
cmc
hlt
mov
pushl
lods
in
or
push
or
push
sbb
sti
or
call
in
xor
xchg
jmp
push
lret
pop
incl
int
sbb
loop
dec
enter
and
xlat
std
inc
add
cmpsb
shl
jp
jb
xlat
mov
xchg
jne
les
subl
pushl
ret
incl
sbb
mov
jle
lcall
jmp
shll
xchg
cmc
adcl
jle
iret
out
fisubrs
cmc
xlat
inc
xchg
jge
cs
sbb
test
cli
cltd
incl
xchg
cli
in
fbstp
jns
dec
mov
cmpsb
pushl
push
mov
xchg
popf
xchg
les
or
jp
rcrb
adc
mov
pop
incl
pop
mov
push
jb
ljmp
aaa
mov
idiv
and
das
mov
lcall
repnz
and
je
add
cmpsb
dec
addr16
out
pop
or
out
imul
call
jnp
addr16
push
test
imul
inc
aad
mov
xor
in
pushl
ret
scas
aaa
or
mov
insb
movd
aad
cwtl
cmpsb
int3
push
movsl
std
jg
ljmp
bound
mov
jle
data16
es
lea
mov
dec
pushl
cmc
xchg
jne
adc
daa
aam
adc
xlat
mov
fistpll
jge
xchg
mov
sbb
test
loopne
and
xchg
cltd
loopne
cmp
out
push
out
push
or
mov
lcall
loope
dec
sbb
stos
outsl
add
add
or
lret
push
cmp
mov
test
jno
inc
push
sbb
push
and
sbb
sub
cli
fists
icebp
lahf
or
popf
gs
inc
adc
jo
fsub
std
jne
js
mov
sub
ss
jecxz
fcmovbe
ljmp
push
jp
fidivl
xchg
cmp
mov
mov
cmp
mov
mov
mov
dec
pop
push
cmpl
add
cmc
ja
jae
push
cmp
jmp
sub
push
add
sbb
adc
loope
push
shrl
mov
jl
xorl
call
xchg
insl
lods
and
scas
and
negb
leave
stc
mul
pop
adc
idiv
das
clc
ret
testb
lret
cs
stos
jbe
and
cltd
or
ljmp
mov
mov
pop
imul
fdivs
cmp
inc
ja
and
scas
je
loop
decl
fs
push
test
pop
mov
push
jl
out
inc
mov
mov
mov
outsl
ret
and
call
imul
cmc
push
cmp
ds
repz
call
pop
mov
and
adc
or
pop
jg
in
ljmp
dec
inc
mov
push
jae
cmp
sbb
test
ljmp
call
shlb
mov
mov
mov
fisttps
lcall
cld
aam
mov
xchg
lcall
xor
call
cmp
mov
fsubrs
out
jp
addb
out
jb
pop
inc
push
inc
adc
xor
sbb
stc
sub
jmp
imul
add
sti
inc
clc
fucom
jmp
bnd
test
stc
gs
push
repz
jbe
xor
mov
add
pop
rolb
cli
mov
mov
push
stc
in
sti
ljmp
xor
pop
daa
xor
xchg
add
in
call
stc
mov
cmpsl
xor
sbb
outsl
in
jg
addr16
xchg
aas
clc
add
pop
jne
xor
jns
clc
fistps
cmpsb
xor
sub
cmp
xor
inc
mul
je
sbb
jbe
out
ds
shlb
xchg
shll
pop
inc
js
lcall
sub
pop
add
or
lcall
adc
mov
sub
cmp
inc
jno
mov
sub
cs
nop
sub
es
pop
or
ret
out
jg
loopne
xchg
sbb
scas
lock
sbb
or
decl
sub
cmp
pop
inc
repnz
pop
inc
divb
lods
ds
lock
cmp
push
ja
mov
xchg
pop
cmp
xchg
andl
inc
fidivs
loopne
cmpsb
lcall
mov
add
and
aad
mov
jg
repz
pop
xchg
ficoml
dec
imul
pop
add
cld
scas
mov
js
rcr
mov
push
outsl
lcall
out
xchg
mov
or
push
outsl
das
cli
incl
sub
or
les
mov
repz
mov
inc
dec
pop
stos
add
cld
mov
pushl
cmp
popl
or
test
add
mov
inc
hlt
xor
dec
fst
xchg
out
lds
repnz
xchg
test
xor
mov
pushl
push
shrb
loopne
adc
jns
add
cmpsb
ds
add
call
cmp
js
sbb
and
jb
nop
decb
cld
scas
fs
push
sbb
jmp
push
dec
sub
loop
std
xchg
mov
jo
cmp
sbb
int
jbe
or
pop
icebp
decl
cmp
iret
pop
cmp
mov
push
push
test
jo
sub
sete
pushl
outsl
sbb
movsl
xchg
sahf
cld
lods
sub
mov
jb
int3
pop
stos
lcall
pushl
cld
pushl
dec
cwtl
ret
arpl
and
xchg
sahf
pushf
mov
adc
and
fmul
jae
sar
pop
cmp
xor
push
mov
mov
xchg
pop
mov
xchg
or
push
dec
sub
mov
repz
int3
jbe
adc
jl
aaa
test
jl
test
jmp
or
test
ror
mov
or
mov
mov
sbb
mov
mov
cltd
xor
int
jns
add
sub
loop
lret
dec
aaa
inc
cmp
push
test
pop
sti
addr16
lcall
cwtl
adc
cmp
mov
or
dec
imul
fisttpl
test
and
mov
pop
inc
ljmp
xchg
stos
dec
cmp
pop
mov
add
test
or
sbb
leave
shr
incl
or
sahf
bound
mov
js
test
jecxz
cli
dec
jg
incl
ret
rolb
ljmp
lds
test
hlt
call
xchg
or
mov
leave
xorl
mov
out
dec
mov
jge
pop
mov
data16
jmp
inc
xor
cmp
cmp
icebp
jo
xchg
fldcw
call
pop
inc
lcall
jo
cs
adc
cs
lahf
mov
inc
into
fst
xchg
iret
stos
call
mov
jge
ljmp
incl
out
mov
jne
pop
push
and
ds
idivb
inc
fsubrs
inc
jge
jo
mov
decl
mov
pop
dec
cld
rcll
lods
rcll
out
enter
loopne
fldcw
adc
or
dec
insl
lods
or
lods
lods
je
jbe
dec
xor
or
cld
or
cmpsl
movsl
leave
xchg
pop
cld
call
jno
pushf
mov
cs
dec
mov
sub
fsubrs
and
mov
incl
jae
inc
outsl
sbb
fmuls
and
call
rcrb
and
push
mov
inc
dec
inc
inc
mov
pop
pushf
jbe
mov
sbb
sar
lds
psubb
loopne
push
sub
imul
mov
sub
ds
mov
call
bound
mov
dec
in
pop
loop
add
sub
stos
jne
mov
cli
push
ret
rcrb
fadds
lahf
sub
insl
push
mov
incl
pop
jle
pop
ja
sub
aad
mov
dec
pushf
out
xchg
and
sub
pop
lds
or
inc
movsb
jo
and
pop
jo
mov
fcom
mov
aaa
testl
mov
sbb
adc
mov
ja
test
pop
pop
repnz
xlat
and
adc
jmp
sbb
mov
ljmp
in
mov
sti
lret
addr16
pushl
cwtl
dec
jge
jns
fbstp
sub
aam
inc
push
sub
scas
jnp
lcall
mov
int
xlat
imul
pop
cmp
hlt
mov
add
sub
filds
pop
loopne
int
mov
nop
daa
mov
sub
push
jo
dec
pop
std
pushl
jge
xchg
andl
xchg
xor
jmp
mov
adc
dec
aaa
adc
das
in
xchg
pushf
jb
xchg
shll
and
and
add
push
cmpsb
sbb
lods
mov
lret
xchg
push
pop
imul
lcall
subb
add
in
fs
xlat
mov
jne
xchg
cmc
or
mov
pop
jnp
or
pushl
pmaxub
xchg
mov
cmp
test
int3
mov
pop
pusha
adc
xor
sbb
jmp
out
jmp
fisttpl
es
cmpsb
inc
fistl
or
pop
lahf
repz
cmp
das
sar
inc
cld
mov
sbb
xchg
push
jmp
pop
div
jns
mov
sub
cmp
jbe
cmp
push
mov
xchg
aad
mov
xchg
jbe
and
loopne
mov
in
xchg
sbb
and
sub
lea
cmp
fadds
xor
jle
adc
jne
and
lods
sbb
sbb
lcall
stc
pop
adc
add
je
mov
sti
cld
cmc
jns
fidivrl
cmp
lret
enter
sar
popf
sub
aam
jns
lods
mov
cwtl
les
call
push
xchg
aaa
outsl
inc
popf
stc
and
xchg
cli
leave
sbb
mov
int
jbe
inc
xor
jp
inc
and
js
adc
cmp
insb
cmp
xor
imull
mov
mov
pushl
pop
jns
lods
xor
pop
test
clc
lret
cli
dec
je
mov
mov
pop
jp
or
inc
xchg
cmp
cld
xor
mov
cmp
clc
mov
jne
pushl
push
adc
inc
cmc
xor
aaa
in
dec
cmp
in
and
mov
pushl
arpl
xor
sbb
sbb
adc
xor
push
divb
insb
int
jns
fdivl
int3
ja
mov
mov
loopne
xor
test
lods
cmc
ja
jl
jl
mov
mov
pop
cmc
mov
mov
ja
and
xor
mov
push
cmp
mov
inc
cmp
mov
in
jne
int3
pushf
ja
fcoml
xor
push
out
jnp
scas
add
nop
mov
lods
imul
mov
push
mov
cld
cmp
cmc
xchg
std
pop
mul
dec
cmp
je
ljmp
or
xor
cmpsb
mov
jp
add
mov
int
mov
push
jno
jle
jg
scas
dec
je
push
jne
inc
dec
xor
inc
fs
fstpl
mov
sar
push
lds
mov
insl
dec
mov
inc
inc
jae
cmp
and
pop
xchg
sbb
jg
push
dec
das
testb
add
int
jbe
adc
cmc
xor
scas
loopne
out
xor
pop
pop
mul
les
mull
fnstenv
dec
cmp
jb
add
fisttps
pushf
rolb
xor
ror
fdiv
loop
jg
mov
xor
mov
add
jbe
mov
jne
jge
jae
pop
mov
xor
cmc
hlt
cmp
ret
mov
jge
mov
inc
jge
icebp
xchg
xchg
xor
xor
hlt
jl
repz
ljmp
xorl
int3
push
jae
or
pushl
stc
mov
xor
je
repz
mov
lea
fisttpll
xor
pushl
lods
jnp
jg
inc
xor
mov
mov
pop
hlt
xor
xor
aaa
mov
jae
cmp
pop
pusha
lds
xorb
xor
rclb
xor
test
mov
mov
add
mov
or
xor
lahf
out
xor
call
jmp
addr16
bound
shll
pavgb
fidivs
in
out
pushl
dec
das
shlb
pop
mov
icebp
shll
mov
mov
out
jae
dec
mov
mov
cmpsl
lea
outsl
xchg
push
aas
cmp
iret
mov
jb
xchg
pushl
rolb
aas
pop
test
mov
out
repz
jns
add
mov
incl
shlb
xor
sub
out
cmpsb
repnz
js
pop
cld
ljmp
jno
call
sub
xor
gs
popa
fisubrs
push
es
jo
xchg
mov
scas
adc
inc
jno
and
push
repnz
xor
jb
lock
outsl
cli
fbld
mov
stc
inc
mov
mov
jno
xor
lcall
das
std
icebp
xor
sti
stc
sub
lock
sbb
mov
add
mov
xor
jb
test
in
gs
push
xor
out
shrl
lock
test
ljmp
stc
fcomip
mov
lret
cs
stc
xlat
lock
dec
shr
loope,pt
out
int
mov
std
jmp
mov
xor
jle
das
mov
imul
mov
sbb
mov
xchg
jo
xor
xor
pop
bnd
stos
decb
mov
out
mov
dec
push
inc
scas
rcrl
stos
data16
ja
inc
loope
xor
sub
xor
dec
icebp
test
inc
scas
daa
cli
mov
ljmp
mov
aaa
cs
xor
pushf
or
out
sub
loop
mov
mov
scas
mov
sbb
mov
xor
outsb
jg
out
outsb
sbb
or
cltd
lret
pop
xchg
sbb
out
sbb
in
mov
repnz
scas
adc
sub
adc
sub
je
xor
divb
icebp
xchg
ljmp
imull
sbb
jp
in
outsb
adc
push
sub
pop
jmp
lcall
mov
jbe
scas
fwait
repnz
mov
pop
in
outsl
jnp
insl
mov
sbb
mov
loope
lcall
scas
jge
shrl
decl
outsl
inc
loop
repnz
and
scas
sub
and
sub
ljmp
or
sub
insb
sub
test
fwait
js
stos
mov
dec
scas
scas
lret
adc
insl
insl
nop
bound
adc
aas
cs
cmp
cs
decl
lcall
lods
popf
or
scas
sbb
mov
insl
pop
sub
mov
shr
xlat
icebp
repnz
pop
mov
hlt
outsb
push
cmp
insl
push
cmp
clc
repnz
shlb
jmp
or
in
push
repnz
into
lcall
lods
insl
lret
jmp
sub
push
mov
and
xchg
dec
sti
scas
repz
or
repnz
sub
fsubrs
out
cltd
loope
mov
cli
jmp
jp
lods
jne
int3
lods
cmc
add
insl
jae
fisubrs
fwait
xlat
sub
outsl
clc
stos
sub
dec
fdivr
mov
lods
or
lahf
lods
cmpb
insb
jbe
xchg
call
lods
imul
subb
mov
in
fildll
pusha
push
outsb
lods
xor
stos
stc
fwait
jns
adc
push
push
sbb
mov
or
pop
out
mov
dec
stos
xchg
or
lods
fcomip
mov
fnsave
insb
mov
xchg
sub
pushl
aaa
in
dec
call
cmp
or
insb
and
mov
sub
popa
clc
sub
cld
jmp
clc
or
mov
mov
stos
mov
pusha
dec
ljmp
mov
sub
mov
ljmp
aam
insl
dec
mov
scas
ljmp
sub
sub
icebp
jmp
or
add
mov
or
push
cli
or
clc
push
push
lret
daa
outsl
ret
xchg
fsubrp
insl
lcall
fisubs
stos
pop
adc
aam
push
test
sub
jge
call
mov
xchg
jmp
adc
subl
clc
xchg
ljmp
sub
adc
js
jb
subl
jg
test
mov
test
ds
fisubl
ljmp
idivl
push
add
sub
cmp
push
leave
adc
push
nop
or
push
std
call
dec
push
stos
add
imull
mov
jg
jle
adc
call
add
jmp
test
test
imulb
test
imul
inc
lret
jg
call
sub
mov
lods
push
jb
enter
call
jne
addr16
leave
imul
mov
sub
mov
aaa
scas
call
jmp
subb
adcl
addb
fsub
xchg
je
mov
inc
xchg
inc
enter
xchg
addr16
mov
in
shrl
incl
out
push
cltd
call
mov
shlb
dec
or
sub
sbb
call
adc
push
call
icebp
and
jae
cmpsl
lahf
push
aaa
movsl
inc
mov
dec
fs
sub
jmp
and
bound
and
fistpl
out
enter
out
cmpsl
pop
mov
fildll
addr16
xor
ljmp
cwtl
adc
daa
sbb
in
and
push
in
and
test
call
fldenv
ljmp
shl
mov
jmp
xor
les
sub
in
pop
fbld
scas
lahf
mov
incl
enter
pop
and
repz
or
jmp
or
fsubs
shl
pop
xor
and
adc
loop
push
sbb
sar
jmp
add
js
pushw
xor
and
fadd
in
sar
jg
add
scas
mov
pushf
shlb
push
cmpsl
andl
pusha
call
out
daa
movsl
aam
andb
ja
gs
scas
pop
and
das
push
and
das
sar
insl
jecxz
out
in
pop
aas
jecxz
lahf
cmp
mov
outsb
xlat
call
out
sub
fs
and
jecxz
cmp
in
daa
adc
inc
add
test
sub
and
jle
std
and
lret
jnp
pmulhuw
xchg
or
loopne
frstor
xlat
jmp
pop
clc
and
cmp
loope
mov
fsubl
dec
lahf
scas
popa
int3
pop
mov
dec
xchg
shlb
out
and
out
clc
pushl
outsl
mov
loop
pop
mov
lds
mov
lret
popa
dec
ud0
decl
pop
and
xchg
fwait
and
ja
jecxz
push
outsb
loop
ja
mov
pushl
popa
jmp
cmp
and
inc
movsb
loop
xchg
popf
loope
test
mov
decl
pusha
loope
mov
test
and
or
jecxz
pop
outsb
loope
mov
mov
incl
popa
mov
mov
mov
inc
insl
loope
lods
inc
jecxz
cld
aas
mov
lcall
xor
mov
pop
popa
xor
pusha
scas
add
and
inc
and
fs
loopne
dec
mov
cmp
mov
ret
mov
xchg
add
dec
std
and
ljmp
push
loopne
lods
psrad
icebp
mov
inc
push
add
mov
call
and
in
loop
fs
adc
ret
mov
aam
lret
cmp
sbb
int
dec
cld
cmpsb
and
inc
loope
int3
mov
mov
in
xchg
popa
gs
jmp
loop
movsb
popa
data16
popf
and
jbe
push
or
mov
xchg
mov
pop
in
stc
xchg
pop
pop
pop
add
outsl
and
in
loopne
jecxz
loope
sub
mov
ret
mov
xor
pushl
and
pop
or
roll
sbb
dec
loopne
and
lock
sbb
jmp
outsb
cld
push
out
pop
lcall
or
sbb
mov
jecxz
loopne
aad
fisttpl
sub
inc
insb
inc
fwait
ret
adc
pop
sbb
aaa
dec
push
fnsave
push
aad
push
push
lea
aad
decl
push
in
iret
rol
sbb
nop
xlat
lods
das
push
dec
or
aam
or
int3
fbstp
int
push
mov
mov
jo
mov
xor
mov
out
pushl
test
icebp
jne
mov
push
mov
jno
bound
sbb
inc
sub
pushl
dec
out
repnz
scas
jb
pop
lods
icebp
push
adc
ds
push
in
and
jo
dec
sub
in
icebp
fwait
pop
cmp
insl
pop
out
push
xor
scas
pop
adc
idiv
ljmp
scas
or
and
iret
cs
xor
loopne
jno
repz
lods
loopne
loope
push
bnd
mov
sahf
movsl
add
pop
sbb
out
push
lcall
int
lock
adc
jg
jb
imull
pop
lock
mov
das
mov
mov
dec
push
ja
and
push
scas
lahf
mov
mov
jmp
jo
mov
and
pop
das
push
lds
inc
fwait
out
sbb
mov
clc
jmp
mov
insl
lea
mov
sahf
sub
sahf
pop
lahf
push
lea
out
lahf
pop
pop
mov
cmc
jp
sbb
stc
mov
js
sbb
cs
fstpt
std
or
jne
out
sbb
fisttpll
lods
mov
add
leave
insb
mov
lods
fisubrl
lahf
insl
repnz
in
in
mov
int3
scas
sahf
mov
lods
sbb
in
sbb
ljmp
mov
pop
imul
sbb
clc
scas
sbb
jne
outsb
sbb
jge
sub
sbb
jae
popf
gs
out
popf
in
lods
sbb
scas
popf
mov
outsl
pushf
jne
jg
sahf
sub
fldl
insl
scas
out
sbb
nop
scas
add
scas
xorb
outsl
add
cs
jg
incl
xchg
aas
sub
ds
xorb
out
add
xor
ljmp
andb
insl
add
add
addb
sub
adc
scas
pop
in
add
lods
or
inc
das
scas
add
push
outsb
cmpb
add
xlat
insl
orb
sub
adc
jmp
ss
outsb
add
fldt
jbe
sub
sbb
das
clc
call
in
add
out
add
push
push
or
jle
fcos
add
outsb
mov
cs
sub
out
xchg
lods
and
lods
add
mov
fwait
xchg
fsubrl
mulb
subl
jmp
mov
in
add
sti
pop
lock
add
bound
jle
sahf
xor
andb
add
dec
mov
push
fdivrl
mov
add
stos
scas
cmp
call
cld
push
or
mov
xchg
xor
in
add
or
lcall
into
jne
dec
xor
shrb
cmc
fsubrs
lods
lock
jg
shr
add
ljmp
fldcw
jle
stos
push
mov
test
mov
push
out
fmul
call
test
pushf
cmpsb
in
lahf
imul
ret
ljmp
sub
jp
add
ljmp
nop
test
popf
cwtl
insb
jg
or
sbb
fstp
inc
fists
cmp
hlt
out
mov
lret
in
mov
test
mov
ficompl
fisttpll
inc
movsl
fidivrl
bound
push
and
cmp
test
std
decl
pop
out
fdivrs
push
mov
dec
adc
inc
dec
cmpl
pop
or
lret
or
int3
test
cmpsb
lcall
addl
test
in
cmp
fwait
sub
jbe
push
inc
ljmp
lcall
inc
fwait
push
inc
mov
and
mov
inc
push
pop
cmc
js
call
push
xchg
clc
adc
cltd
sub
lock
pop
loop
mov
jmp
dec
pop
xor
cs
inc
cmp
mov
insl
mov
das
inc
sub
lret
jmp
movsb
loope
stc
push
hlt
pop
dec
sub
icebp
mov
addl
or
xor
outsl
mov
push
lcall
xor
fidivs
in
jno
aad
push
sub
imul
mov
xor
inc
jmp
decb
fwait
andl
push
outsb
imul
mov
inc
jmp
xorb
ja
cs
jmp
jle
insb
test
sub
out
popf
and
jne
inc
push
inc
jecxz
ja
pop
stos
idiv
ljmp
popw
push
int
sub
ficoms
sub
jbe
out
push
xor
pop
lods
div
ffreep
pusha
sarl
push
adc
les
cmp
xor
std
lods
es
jne
mov
and
ja
out
inc
mov
jg
jp
jp
jbe
divb
jno
ffree
test
and
cmp
popf
mov
shr
ja
fbld
mov
bnd
insb
decb
cmc
add
pop
jg
jae
xchg
lahf
insb
jbe
xchg
cmc
outsl
sub
addr16
test
jne
pushl
xchg
cmc
xor
test
jbe
push
imul
outsl
sub
addr16
mov
outsl
sub
inc
jmp
cmc
aas
ljmp
pop
test
mov
ja
daa
sub
cmp
ljmp
test
jne
push
insb
pop
push
push
cmc
test
sub
in
repz
ljmp
std
jp
push
stos
cli
jne
push
sti
cmc
out
sub
push
sub
xchg
call
stc
cmp
cwtl
jp
test
ja
jmp
sti
xchg
sub
es
sub
call
xchg
fcmove
out
fsubrp
jns
stos
sti
std
scas
stos
jnp
cmpsb
imul
scas
in
stos
pushl
insl
mov
sbb
push
lock
xchg
jle
pushl
insb
clc
mov
push
stc
mov
xchg
mov
fdivrp
lods
lcall
addr16
inc
outsl
imul
imul
jg
mov
jae
incl
stc
and
cmpsl
repz
outsl
push
cli
push
aas
sub
idiv
ljmp
repz
pop
call
stc
std
das
out
ss
test
pop
inc
pop
lock
aas
mov
pop
sub
pop
jmp
das
ljmp
cmpsl
cli
push
das
test
decb
es
jle
push
outsl
mov
pop
out
out
mul
test
mov
test
incl
test
jne
data16
fsubs
fst
es
fisubrs
out
jae
call
add
data16
fsubs
mov
and
repz
in
test
test
enter
lods
fimuls
jp
cwtl
data16
mov
addr16
cwtl
jle
mov
jp
test
repz
add
stc
sbb
push
out
imul
cld
cmp
addr16
push
jno
xchg
pop
lock
cmpsb
repz
pop
push
notb
idiv
sub
std
decl
outsl
out
inc
out
xor
push
test
pop
data16
lods
mov
sub
cmc
ds
jmp
insl
add
int
jle
jle
pop
out
pop
imul
das
addr16
jle
das
daa
jae
pop
call
cli
js
sbb
pop
sub
fwait
loopne
call
push
lods
sahf
dec
sub
mov
mov
mov
mov
jb
jae
data16
ljmp
mov
or
subl
test
mov
jbe
mov
pop
mul
mov
jmp
ss
iret
pop
arpl
adc
cmp
scas
aaa
ds
icebp
inc
clc
jg
jg
mul
repnz
scas
lret
xchg
add
repnz
sbb
sahf
pop
pop
fsubr
jmp
pop
pusha
out
adc
stos
sti
adc
xlat
into
lods
sub
leave
xor
ffreep
shl
mov
jle
cmp
inc
js
ss
movsb
add
sub
push
jg
mov
fistps
jbe
pushf
fwait
pop
jmp
push
jg,pn
test
push
dec
imul
out
lea
xchg
mov
aaa
cld
jp
inc
mov
gs
sbb
dec
xor
push
jb
sbb
and
mov
jecxz
ficomps
sti
shlb
jecxz
scas
filds
push
incb
jbe
cmp
ret
cmp
ss
mov
out
or
jg
adc
ja
stc
jns
decl
pushl
jecxz
pop
xor
aaa
sub
pop
cmpsl
xor
call
arpl
out
push
add
adc
push
or
repnz
dec
pop
jmp
aaa
std
das
cli
out
mov
fcmovnu
stos
jecxz
pop
cmpsb
call
dec
sbb
call
dec
test
filds
cmpb
ret
idiv
fildll
cmp
scas
push
outsb
mov
andl
jg
mov
fwait
and
hlt
call
sbb
push
outsb
jg
or
shl
es
lret
inc
arpl
incl
hlt
jge
cmp
inc
aaa
std
insl
pop
xor
sbb
ret
cs
in
dec
pop
loope
jg
int3
call
iret
pop
jle
shll
and
push
cld
call
out
repnz
in
out
pop
out
xchg
jno,pt
cmpsb
sarl
lcall
ss
lock
arpl
out
icebp
ds
and
in
cmc
mov
movsb
aam
mov
aaa
cld
fbld
sahf
scas
push
cmpsl
and
push
scas
mov
jle
std
in
mov
mov
push
cs
rcrb
cmpsl
push
ss
std
decl
sti
xchg
sarb
roll
lahf
mov
rcr
outsl
arpl
fldcw
fs
push
daa
sarb
push
in
stos
pop
movsl
push
ficoms
shrb
arpl
out
outsb
fs
out
fcos
or
out
push
pop
in
cs
jle
outsl
mov
mov
jle
arpl
aas
and
jg
in
push
out
cmpsl
sar
adc
arpl
xchg
mov
pop
and
push
jmp
adc
push
ss
shrb
movsl
shlb
lock
fs
and
rcr
fisttps
not
jecxz
lock
or
movsl
push
pop
out
out
gs
push
data16
ds
push
and
push
outsb
fsub
sarl
mov
fnstenv
jle
rorb
jg
ss
or
pop
xchg
enter
push
xchg
decb
cmp
popa
dec
mov
aam
adc
mov
jns
shll
rolb
pop
xchg
push
sti
jg
cmp
push
inc
or
adc
fildl
inc
fdivrl
ds
sub
mov
aam
bound
push
fs
pop
and
push
ss
sahf
das
in
jbe
jecxz
mov
cmpsb
dec
aas
movsb
outsb
pop
bound
push
push
fs
cmpsb
push
sbb
fildll
in
jecxz
ss
movsb
push
jmp
aad
ljmp
add
and
and
out
shll
cmp
fndisi(8087
push
cmpsb
xlat
adc
mov
push
jbe
gs
push
cld
mov
into
push
out
out
loop
out
shlb
shlb
jmp
scas
mov
and
pop
and
push
fistpl
in
cmpsl
loope
push
dec
sbb
out
push
pop
jecxz
adc
xchg
outsb
clc
inc
lock
sets
ss
mov
ljmp
sbb
pop
es
and
mov
xchg
subb
dec
jnp,pt
xchg
in
xor
or
ljmp
lds
es
test
imulb
mov
xchg
jge
arpl
mov
xlat
ret
xchg
std
lcall
lods
push
jecxz
jle
inc
xchg
lds
es
xchg
popf
jo
das
clc
jmp
xchg
inc
jo
sub
and
lret
int
loopne
ficomps
scas
inc
add
mov
mov
xor
adcl
in
decl
out
js
cmp
sub
jmp
and
test
test
inc
incl
es
cmpsb
jecxz
out
in
dec
pop
inc
jns
xor
lea
fisubrs
lcall
decl
inc
adcl
inc
xchg
popf
inc
mov
js
stos
lahf
jle
add
pop
inc
bound
xchg
lahf
mov
and
push
scas
jg
cs
scas
cld
loope
mov
mov
cmp
stos
lds
mov
int
and
inc
ja
aam
in
inc
cs
in
push
mov
ja
add
push
out
xchg
mov
outsb
incl
mov
aad
sub
push
js
jbe
xor
pop
pop
jns
and
dec
fdivrp
ja
sub
and
jbe
js
popa
loopne
adc
pop
mov
ja
jae
dec
bswap
sub
ds
pop
test
ja
daa
or
outsl
loop
out
sysret
jp
jle
inc
dec
sbb
jp
fcoml
xchg
aas
fimuls
push
loopne
std
jg
push
es
add
push
dec
les
scas
bound
push
jle
jp
lcall
jnp
je
pop
pop
jnp
rcrl
push
mov
push
scas
push
sbb
jg
jp
and
cld
push
testl
mov
sbb
pop
outsb
pop
into
pop
js
or
or
jg
aaa
pop
xor
inc
dec
jp
dec
loop
mov
mov
jnp
int
daa
mov
jns
cltd
and
out
inc
jnp
lahf
fisttps
push
push
push
mov
jmp
incb
pusha
xor
mov
pop
dec
pop
dec
jnp
sbb
sub
fisttps
jl
inc
and
into
cld
popa
dec
jle
xchg
stc
and
mov
or
cld
push
inc
jp
pushf
mov
jp
arpl
sti
leave
ds
in
mov
add
and
fstl
fisttps
pop
lock
dec
gs
sahf
sub
lret
je
push
pop
dec
push
das
push
aad
push
cmp
jg
decl
inc
je
jmp
add
sub
or
js
xchg
pusha
and
mov
call
cld
or
push
push
mov
fistps
es
cmp
outsl
pushl
cmpsl
mov
and
push
stos
dec
xchg
loope
sahf
mov
sarl
cmp
leave
je
pop
mov
stos
enter
fistpll
cs
dec
or
and
pop
lahf
das
out
out
jne
iret
lahf
sub
push
lret
mov
push
adc
or
aas
dec
jae
lods
loopne
testb
cmp
mov
jle
leave
jae
or
mov
cmp
das
es
dec
jne
xchg
pop
push
jg
inc
or
mov
rcrb
xchg
jae
jge
cmp
pop
dec
jbe
fwait
mov
aaa
mov
or
test
leave
jne
ret
adc
stos
fdivrp
pushl
and
and
jp
std
sub
pushl
or
add
xchg
mov
fistpll
fwait
lock
decl
jne
pop
sahf
aaa
mov
pop
sbb
mov
andb
cmpsl
dec
ja
scas
pusha
ret
lcall
push
stos
or
fstps
sbb
mov
push
pop
sub
sub
mov
inc
enter
pop
aaa
decb
in
sbb
jae
int
shrl
sub
mov
adc
mov
sub
jg
out
sub
jge
push
sub
lret
dec
dec
icebp
fisubs
xlat
or
setle
cmpsb
mov
dec
sbb
or
push
jle
out
outsl
jle
or
aaa
fsubrp
jle
cs
xor
sbb
jg
decl
out
dec
je
fcmovnu
xor
sahf
sbb
dec
jno
insl
pop
sbb
testl
sub
dec
jb
out
pop
decb
jae
cs
xor
mov
lcall
xchg
lea
mov
pop
dec
xorb
dec
mov
adc
inc
pop
jbe,pn
mov
push
pop
outsb
jge
loopne
push
daa
or
sti
sub
and
push
mov
pop
mov
pop
fistps
mov
or
xchg
in
es
sub
outsb
mov
inc
sbb
push
jg
call
ficomps
out
xchg
or
jbe
leave
cmpb
jg
sub
call
pop
mov
fcoml
pop
sub
pop
lahf
sbb
lret
jle
mov
in
call
inc
mov
sub
jne
mov
xchg
xor
popf
xor
incl
dec
xchg
mov
ss
and
fsubrl
cmp
ljmp
push
xlat
lret
jne
das
push
into
mov
push
xor
mov
sub
mov
loop
mov
sub
mov
aad
clc
lcall
pop
cs
sbbb
or
xor
or
in
sub
lret
sbb
out
mov
cmpsb
sbb
inc
cld
or
in
lcall
jno
sub
inc
mov
adc
in
decl
cs
or
adc
bound
sub
jge
sbb
sbb
mov
dec
arpl
fldt
or
sub
jle
mov
pop
mov
jo
sub
arpl
xchg
fstl
arpl
arpl
fwait
incl
or
mov
push
push
testb
sbb
outsl
stos
decb
mov
outsb
rcrb
fs
pop
jo
mov
cmpsl
push
push
xlat
dec
ds
adc
ret
outsl
js
add
adc
jle
sbb
lea
ljmp
cli
dec
bound
or
test
pop
sahf
out
fs
sbb
ss
dec
bound
aaa
or
decl
iret
cltd
push
sahf
das
into
pusha
jne
sbb
add
arpl
jmp
mov
mov
divb
and
out
in
fwait
into
popa
decl
lds
gs
dec
aad
fimull
clc
or
jbe
int
mov
mov
mov
push
loop
gs
into
cmpsb
out
gs
daa
lret
dec
lds
pop
cmc
xor
pop
sbb
push
pop
dec
fs
movsl
sahf
pop
jne
mov
nop
jle
pop
jne
pop
arpl
mov
lcall
into
addr16
addr16
imul
mov
data16
setns
cmp
pop
es
jg
add
push
scas
mov
inc
ficompl
jg
jg
or
sub
iret
gs
sbbl
push
dec
push
fdivr
jmp
ja
in
lods
mov
cwtl
sub
pop
scas
out
nop
arpl
lret
pop
out
sahf
sub
out
vxorps
jmp
int3
gs
pop
pop
sub
testl
decl
mov
push
into
pcmpgtd
aaa
iret
arpl
push
pop
ljmp
cs
sbb
jge
sbb
mov
fldcw
pop
sti
cwtl
dec
lods
shrb
roll
and
pop
sbb
mov
fcos
dec
xchg
pushf
lcall
cmc
lcall
pop
pop
mov
outsb
and
movsl
jno
das
push
mov
cmc
loope
add
pop
mov
adc
jmp
push
push
sbb
inc
insb
push
je
mov
call
out
inc
out
ljmp
push
mov
xchg
gs
inc
loopne
push
push
pop
xor
sbb
jo
in
mov
fiaddl
mov
js
jbe
jbe
mov
popa
repz
xchg
shrl
cwtl
jle
dec
ljmp
fdivr
or
adcb
out
shrb
sub
inc
repz
ficoms
pushl
inc
es
mov
mov
loop
or
or
js
add
cmp
push
push
fadds
aas
lcall
adc
imul
push
sub
fistpl
std
mov
inc
dec
loop
sbb
cmc
incl
push
pushw
out
es
int
jmp
ret
cmc
pop
sbb
pop
sar
incl
push
and
fidivs
scas
mov
sub
test
lcall
stos
lcall
fs
mov
lods
cmp
ljmp
mov
in
stos
call
fisubrs
movsl
stos
js
push
dec
adc
sub
incl
jae
mov
push
out
gs
mov
cltd
insl
push
mov
test
cs
insb
imul
xchg
mov
cmp
sbb
cwtl
sbb
mov
cs
mov
mov
ja
stc
push
insb
mov
ljmp
cmp
sbb
adc
xchg
nop
inc
in
cmp
ret
or
sbb
pushf
repz
pushl
and
jl
mov
push
xchg
fcomp
cwtl
fsubrp
pushl
aaa
or
loopne
push
push
popf
jns
dec
fstpl
mov
lcall
dec
cmp
xchg
xor
test
cmpb
xchg
sbb
lcall
or
lcall
enter
dec
dec
in
sbbl
popa
inc
test
es
int
inc
push
add
stos
icebp
pop
lcall
xlat
fwait
aas
negl
push
cmpsl
lcall
fldlg2
mov
pop
and
imul
jo
scas
xlat
sbb
jg
adc
xchg
sbb
add
pop
mov
xchg
into
add
aas
mov
mov
incl
fstps
adc
pop
push
sbb
lea
into
adc
xor
cmp
fwait
or
sub
jmp
jo
push
and
adc
sub
add
cmpsb
imul
fs
mov
outsl
push
adc
xor
les
sub
loopne
adc
jb
mov
out
push
fdivrl
sti
push
pop
mov
adc
or
or
out
add
dec
dec
adc
ljmp
clc
loope
jb
adc
mov
movsl
js
mov
mov
sub
jo
out
mov
out
xchg
push
mov
push
cmp
pop
mov
jno
mov
mov
fdivrs
out
xchg
push
push
movsl
push
cmp
ja
mov
jnp
push
inc
std
ljmp
xchg
ja,pn
adc
jge
in
pop
cmpsb
xchg
mov
adc
outsb
xor
jg
push
mov
xchg
aaa
push
cmp
xchg
fnsave
xchg
cwtl
jl
push
call
adc
dec
jg
cwtl
dec
pushl
add
test
xor
xor
add
xor
js
push
adc
inc
or
inc
in
or
test
fcmovnbe
dec
in
fldcw
out
mov
sub
adc
push
adc
push
sbb
lods
fcmovnu
xchg
std
jg
clc
repnz
into
movsb
push
ds
mov
pop
cld
incl
cmp
das
adc
ljmp
mov
pop
add
jle
pop
stos
or
mov
mov
mov
xlat
mov
lcall
es
adc
ficoml
lods
int
dec
push
fcomip
call
ss
or
sbb
aam
arpl
mov
adc
pushf
jg
push
xchg
mov
xlat
insl
mov
push
mov
gs
int
xchg
pop
imul
add
ss
fwait
mov
movsb
cmpsb
cmp
jae
push
sbb
xchg
idiv
jmp
es
push
dec
shrb
dec
cmpsb
loope
xchg
push
xchg
cmc
aas
xchg
ljmp
addr16
xchg
xchg
insl
or
inc
jo
add
aaa
int
rcl
sbb
decl
dec
inc
sub
cmp
push
adc
inc
xor
add
or
xchg
ds
into
ret
xchg
in
push
call
pop
add
adc
dec
push
xchg
rorl
test
jmp
nop
data16
rcl
sar
pop
lock
pop
mov
inc
ljmp
inc
xlat
push
daa
lret
xlat
adc
add
dec
and
xchg
xor
lds
push
xor
mov
adc
xchg
fwait
inc
outsl
mov
pushl
std
aas
xchg
push
orb
out
ret
lods
push
xor
jge
jl
xchg
inc
jle
addl
pop
pushf
adc
outsl
add
outsl
shlb
scas
inc
imul
jle
cmpsl
movsb
mov
pushl
popf
or
data16
dec
and
push
sbb
in
mov
sbb
pushl
pushf
push
add
xor
sbb
xchg
aaa
and
mov
fs
mov
mov
push
xor
ljmp
incb
mov
clc
outsl
mov
sahf
movl
out
mov
hlt
incl
out
cmpsb
mov
ss
push
xchg
into
aam
cs
aad
jbe
xchg
xor
lock
fidivs
push
push
lret
adc
vunpckhps
data16
sahf
mov
out
clc
call
popa
std
out
xchg
pushf
test
xchg
dec
aad
push
push
hlt
push
mov
or
incl
leave
rcll
mov
jecxz
int
lock
jmp
xchg
movsb
xchg
cmp
bound
pop
test
outsl
shll
mov
mov
push
xchg
lahf
jo
je
popf
clc
jl
mov
bound
jl
adc
xchg
pop
jecxz
aad
out
andl
mov
mov
cld
inc
jae
andb
jle
jmp
push
pop
and
pushf
or
adc
mov
jmp
or
inc
ljmp
pop
and
push
pop
repz
lea
push
mov
push
sahf
cmc
push
adc
jo
fistl
cld
in
inc
or
std
sarl
clc
push
sbb
sti
push
push
clc
rclb
cmp
adc
std
jecxz
inc
mov
incl
push
andb
adc
ljmp
pushf
add
outsl
call
sbbl
inc
insl
adcb
cmc
mov
test
mov
adc
sbb
aad
decl
xchg
dec
jne
push
adc
sbb
pop
adc
mov
shll
mov
rorl
pop
push
std
scas
push
push
rcrb
adc
xchg
in
test
call
dec
pop
jo
jae
pop
mov
scas
clc
decl
mov
pop
and
or
out
pop
out
mov
incl
mov
mulb
adc
xor
imul
push
add
and
ljmp
in
push
es
adc
das
adc
notb
inc
pop
fistps
or
cs
adc
mov
xchg
ja
leave
xchg
adc
loop
jo
mov
adc
cmpsb
mov
dec
dec
add
jno
mov
in
dec
jl
out
push
les
xchg
dec
out
sahf
addb
insb
sub
sar
lods
adc
test
cmp
xor
cmpsl
loope
jge
movsb
jg
incl
dec
popf
inc
adc
push
jb
mov
push
subb
inc
pushl
cld
jmp
fsubrl
into
jbe
insb
fnstenv
xchg
je
movzwl
push
cmp
cmp
dec
jnp
fiadds
push
dec
jne
push
dec
mov
aam
push
mov
popf
imul
in
pusha
rcll
ja
jo
dec
xchg
jno
and
mov
pop
std
incl
adc
adc
in
roll
outsb
sbb
mov
push
ds
jmp
das
push
dec
int
push
pop
mov
adc
decb
dec
sub
adc
dec
push
or
xchg
push
lcall
push
cmp
outsb
adc
adc
xlat
iret
cmpb
xchg
xchg
nop
cli
fucom
rcrb
scas
push
xchg
data16
daa
adc
xchg
and
call
cld
cmpsl
rcrl
out
sahf
cmpsl
sbbl
mov
pop
jno
test
pop
rcll
xchg
add
push
sub
push
ss
xchg
push
adc
ja
cmpl
pusha
shll
js
jle
lcall
cs
repz
std
stos
dec
or
cmpsl
adc
mov
incl
sub
iret
stc
insl
je
adc
subl
sbb
ljmp
insl
dec
dec
sti
mov
adc
pop
adc
je
sahf
xchg
sar
xchg
nop
push
fidivrs
idiv
xchg
jno
adc
jg
or
inc
divb
sub
clc
into
mov
iret
fs
hlt
call
cld
and
addr16
cli
out
adc
in
jae
sti
push
aas
cmp
xor
stos
incl
rcll
rorb
cmp
inc
mov
cwtl
adc
cmp
sar
push
lods
cwtl
cld
pop
cs
mov
das
push
push
jl
cld
mov
mov
mov
rclb
pop
stc
pusha
push
leave
out
mov
pusha
loopne
lahf
outsl
ret
jg
jp
push
sbb
xchg
cmc
push
scas
mov
mov
out
fadds
dec
mov
xor
adc
sub
add
push
les
fdivrs
or
dec
jg
test
or
push
jo
test
lret
pushl
stos
cmpsl
inc
pop
sub
mov
xchg
push
xor
out
dec
call
pop
cmp
or
sti
loopne
mov
pop
push
hlt
rolb
xor
shrl
lcall
cld
ja
iret
jl
sbb
inc
adc
aad
pop
dec
cld
aaa
rorb
pop
mov
inc
std
jo
cltd
add
xor
mov
xchg
push
push
add
mov
imul
dec
sbb
push
pop
mov
popa
repz
xor
jmp
pop
inc
lcall
stos
ljmp
out
xor
jo
stc
mov
popa
and
push
add
and
daa
stc
int
or
daa
or
xchg
xchg
add
push
repnz
call
xchg
movsl
je
rorb
sbb
pop
sub
cli
cmpb
lcall
cmpsb
lcall
adc
outsl
addr16
notl
lret
inc
test
xchg
out
cmp
cmc
fstl
jb
insw
clc
dec
repnz
adc
out
gs
clc
decl
and
mov
inc
ret
mov
imul
mov
add
in
ror
mov
xchg
out
inc
in
mov
negb
incl
insl
jne
inc
inc
mov
push
negl
add
or
cmc
dec
jnp
cmp
fldt
imul
push
pop
cltd
adc
sbb
inc
adc
fcomps
push
sbb
cmp
shl
movsl
call
add
lahf
cs
rclb
and
inc
insl
cmp
add
mov
mov
hlt
lcall
mov
loop
inc
push
mov
dec
testb
movsl
rep
and
add
jb
call
mov
mov
shl
orl
fwait
cmp
mov
dec
cli
ret
adc
lcall
roll
sub
jno
ret
push
fsts
mov
dec
fucomi
xchg
add
and
jmp
or
lods
mov
out
out
mov
jbe
test
rorb
or
jg
into
dec
lcall
lods
hlt
cmc
lahf
iret
insb
std
imul
gs
outsl
psrld
hlt
cltd
xchg
sub
ljmp
or
xchg
or
cs
push
das
outsl
add
mov
lret
push
or
lds
enter
mov
repnz
ds
sub
rolb
push
sub
ret
ret
sub
jmp
jb
scas
das
xor
aad
pop
lock
ret
int3
or
repz
stos
xorb
lret
mov
ljmp
fwait
repnz
scas
lods
incl
icebp
js
out
xor
add
push
dec
xor
out
clc
dec
xchg
inc
outsb
movsb
pop
cmp
jo
cld
inc
bound
inc
ds
sti
gs
or
jmp
fcmovnu
add
aam
repnz
xlat
mov
addr16
subb
insb
into
loope
adc
incl
pop
fwait
inc
dec
sbb
gs
dec
negb
cmp
aam
cmp
mov
mov
repnz
fstp
xchg
dec
in
mov
push
outsb
cmpsb
sbb
je
cli
fnstenv
iret
loop
ja
jmp
les
pop
mov
push
dec
mov
pusha
xchg
fldcw
sbb
loop
icebp
push
fimull
pushl
incl
test
inc
stos
adc
lret
dec
jne
outsl
scas
inc
mov
aad
out
jmp
xchg
mov
lcall
cmp
mov
push
push
je
jecxz
scas
cli
dec
or
add
incl
and
add
ss
pop
std
mov
test
sub
aad
pop
shlb
loope
decl
in
mov
xlat
cmc
push
jb
pop
out
out
inc
outsl
cmp
cmp
out
test
pushl
jle
jne
jge
or
scas
mov
mov
scas
les
sub
adc
mov
mov
mov
mov
sub
incl
pop
lods
cld
pop
int3
xchg
mov
ljmp
int3
ret
mov
into
pop
jne
in
push
outsb
dec
insl
out
ljmp
or
ret
dec
ja
hlt
adc
inc
xor
sbb
xchg
and
leave
aam
mov
jg
jbe
jo
call
movsb
pop
in
stos
xorl
cmp
jle
or
mov
or
stos
incl
lock
leave
mov
loop
mov
sbb
and
pop
lock
shlb
iret
push
sbb
in
add
and
insb
mov
dec
mov
jp
aad
add
sub
xchg
mov
push
sahf
cmp
mov
cld
jo
push
ljmp
inc
es
xlat
pusha
xlat
jge
roll
or
sub
push
sub
fistps
cmpsl
inc
sub
adc
xchg
cmpsb
add
adc
adc
and
incl
addb
mov
sbb
lods
mov
into
in
dec
pop
leave
lret
push
cli
pop
outsb
data16
xlat
comiss
insb
out
jg
lods
test
inc
shr
xchg
aam
out
jmp
out
xchg
jmp
jae
call
insl
data16
int3
pop
shrb
leave
lds
lcall
mov
jmp
mov
fldcw
xchg
dec
bound
mov
or
lods
divl
lcall
ret
sbb
and
mov
sbb
movsl
xor
pushf
xchg
gs
call
lock
push
pop
xlat
mov
loope
mov
pop
xor
pop
adc
scas
clc
call
xchg
scas
inc
rcrl
repnz
jecxz
jae
mov
xor
jl
pop
jmp
jmp
pop
jge
rorb
or
mov
or
push
sub
mov
pushl
mov
movsl
aad
cmp
ret
out
jnp
int3
mov
and
bound
dec
push
in
fstps
mov
mov
sbb
or
sub
lret
cmp
pop
pop
decl
xchg
test
fmull
dec
dec
loope
xchg
negb
add
lock
or
rorb
jle
mov
aas
cld
ss
decl
imul
dec
push
scas
test
lods
pop
and
jne
adc
incl
lea
lods
jns
dec
vaddss
adc
test
out
in
mov
sahf
mov
add
xchg
cmp
push
dec
shr
jp
aam
push
stc
incl
sbb
shl
xor
jne
notb
inc
out
mov
in
xchg
in
mov
xchg
mov
pushl
mov
rcr
loopne
sarl
test
mov
xor
std
lcall
test
test
mov
aad
mov
fbld
movsb
fscale
mov
repnz
xchg
scas
test
xchg
hlt
divl
call
test
stos
or
xchg
add
movsb
shl
fidivrl
inc
popf
lahf
inc
rorl
dec
pushl
adc
sub
ret
fildll
or
push
dec
and
aad
sar
fisubrl
lea
push
stc
mov
push
int3
ret
insl
out
aam
and
lcall
xor
pop
mov
cmp
loope
leave
mov
std
push
js
add
pusha
or
call
pop
sbb
mov
adc
and
push
pop
leave
or
andl
push
mov
cld
mov
ljmp
pop
cmp
movsl
jl
cmp
push
inc
mov
pop
ret
stc
mov
mov
cmpsl
mov
push
scas
mov
add
xchg
pop
lods
jno
mov
or
icebp
ljmp
bound
add
mov
ret
test
pushl
sub
ss
lods
leave
jne
jge
test
lret
mov
sahf
xchg
lcall
sahf
in
mov
xor
sahf
divl
push
aas
call
int
jae
mov
in
lds
ret
inc
inc
jbe
js
or
sub
sarl
pop
cmp
outsb
lock
add
adc
inc
pop
test
cmp
call
sahf
scas
pushf
push
mov
push
popf
xor
push
lret
mov
add
adc
jmp
mov
or
mov
sub
das
lahf
setns
xchg
xor
ret
jae
sbb
push
mov
or
fnstcw
lcall
inc
nop
ja
scas
js
lahf
shl
jae
inc
pusha
pop
js
dec
hlt
stc
sub
and
ljmp
jns
out
jno
xchg
gs
sbb
push
push
xlat
pop
sbbl
out
push
mov
lcall
dec
cmp
xchg
mov
mov
dec
mov
fdivs
nop
pop
sbb
loop
add
ljmp
mov
mov
xor
outsb
js
fsubl
cmp
jo
ss
lcall
adc
inc
jae
or
movsl
pop
adc
cmp
and
out
push
std
jle,pt
xor
inc
inc
jns
loope
pop
aam
pop
or
inc
mov
sbb
or
cmp
xorb
mov
test
xor
fisttpll
test
pop
fildl
cmc
fwait
lcall
or
call
push
mov
pushf
cmp
rcl
fisttps
pop
pop
cmp
mov
repz
fcmovnb
or
jg
cmp
sar
pushl
test
mov
cld
fsubr
mov
sbb
cmp
les
call
and
fwait
add
pop
int
xor
xchg
xchg
es
mov
lret
rorb
rcrb
das
mov
test
incl
cld
in
call
fsubr
jb
iret
inc
outsl
xchg
imul
pop
jbe
mov
mov
xlat
stos
mov
push
jg
pushl
or
call
xor
xchg
xchg
or
out
mov
aam
jge
std
out
loope
push
or
aad
std
sub
into
pushf
mov
xor
pushl
sub
jp
xor
mov
pop
pop
es
adc
cmp
lcall
dec
cli
jo
push
das
cmc
fldl
ret
sub
mov
movsb
pop
cmp
mov
push
xor
insb
or
add
cmpsb
add
mov
lock
xchg
movsb
mov
sub
mov
stos
adc
mov
mov
repnz
xchg
push
addr16
sub
fisubl
mov
int
daa
or
icebp
xchg
inc
mov
add
ljmp
jg
xchg
dec
push
divl
iret
scas
les
lahf
pop
ja
scas
xchg
js
push
int
ljmp
sub
mov
cmovp
mov
repnz
loope
push
push
cmp
stc
int3
pop
cld
cmp
cli
push
sbb
xor
dec
shrl
fiaddl
notb
or
jmp
outsb
add
lods
add
sarb
jp
cs
test
mov
test
or
orb
out
jns
insb
cmp
movsb
xlat
aas
add
dec
lock
ljmp
das
xchg
nop
aad
sti
lret
cld
jp
add
test
test
enter
fcmove
add
mov
adc
jle
scas
mov
imul
xchg
movsl
mov
mov
mov
add
xor
addr16
lcall
push
pop
cmp
lcall
xor
xchg
cmc
je
into
mov
divl
repnz
jle
pushl
xchg
mov
lock
imul
inc
push
stos
jle
test
ret
jmp
addr16
push
push
xor
mov
mov
mov
dec
repnz
cmc
jg
dec
mov
pop
test
mov
xchg
rcll
jecxz
ret
test
xchg
les
xor
and
push
push
inc
scas
dec
je
shlb
xchg
xchg
std
inc
add
pushl
lods
pop
out
das
daa
mov
stos
mov
mov
incb
pop
mov
mov
aad
inc
test
xchg
sbb
xchg
fwait
cmpsb
imul
call
jne
dec
sbb
jl
adc
push
xchg
lods
mov
ljmp
mov
adc
mov
insb
ficoml
ffreep
xchg
xchg
scas
push
cmp
sub
pushl
test
sbb
ret
ja
lahf
rcll
mov
xchg
pop
lahf
pop
jge
scas
sbb
inc
mov
leave
push
adc
addr16
sub
imul
inc
dec
ljmp
xchg
fdiv
ja
repnz
in
inc
push
inc
mov
jmp
ja
in
repz
pushl
cld
movsb
jle
xchg
adc
loope
stc
enter
push
rcll
cmpsl
push
mov
sbb
dec
inc
xchg
mov
dec
or
fimull
pushl
orl
fbld
test
inc
sub
arpl
cmp
dec
pusha
jge
jecxz
jbe
jno
les
lret
adc
dec
mov
ficoms
mov
jg,pt
adc
out
cmp
insb
pop
fldt
jb
fldcw
adc
jmp
and
mov
jg
sahf
cltd
mov
mov
push
sub
outsb
xchg
xchg
ljmp
pop
xorl
repnz
ror
shrl
sti
outsb
cmc
lahf
jecxz
pop
jg
std
loopne
fiadds
lahf
mov
lcall
cs
fbstp
loop
add
mov
cmp
adc
in
fistpl
pushl
cwtl
cmpsl
jecxz
inc
inc
sbb
cmc
pop
xchg
pop
idiv
data16
xchg
push
rolb
call
adc
inc
push
lcall
xchg
std
ss
xchg
fstpt
push
cwtl
mov
stos
xchg
xor
call
cmp
lea
cmp
cmp
pop
sbbb
xor
or
adc
push
add
jne
mov
negb
pushf
imul
jmp
xchg
ret
notl
xor
mov
jge
mov
stc
jp
xchg
cs
shl
adc
hlt
shll
inc
jge
call
sub
jg
or
sbb
in
dec
rol
jl
sbb
in
and
push
inc
mov
cmp
dec
fisttpll
adc
dec
das
cld
add
call
cld
mov
pop
mov
sub
mov
in
pop
rorl
cld
jg
out
incl
jl
push
mov
xchg
aas
jl
rcrb
or
in
sub
xchg
dec
aaa
jno
incb
dec
pop
sbb
cmp
dec
sub
push
mov
ljmp
jnp
das
adcl
cs
and
sbb
fildl
js
in
out
call
push
mov
andl
out
test
pop
lock
dec
ss
sti
js
push
xchg
push
jle
jg
mov
xchg
cmp
inc
push
std
stos
ss
addb
jns
xor
movsb
adc
or
in
adc
lahf
or
scas
nop
xchg
pop
call
dec
sub
in
dec
stos
push
fistps
jle
jp
xchg
mov
out
cmp
xchg
add
scas
dec
outsb
shrb
rclb
jmp
pop
mov
jnp
jmp
and
cmc
mov
inc
test
xchg
out
cld
jbe
sub
rcl
int3
push
popf
dec
idiv
mov
std
and
subb
mov
jns
out
adc
inc
out
jge
push
scas
add
mov
in
inc
jnp
mov
repz
imul
loope
cld
jg
lret
mov
xor
push
sbb
sbb
insl
aad
insl
aas
jge
aam
das
clc
ljmp
pop
jbe
pushf
jl
mov
mov
mov
iret
inc
mov
jg
idivb
pop
dec
mov
sub
mov
pop
jg
fiadds
ljmp
sarl
jb
fsubrl
push
jg
xchg
std
jge
xlat
or
push
cld
pushl
jl
bound
stos
mov
sar
add
inc
add
inc
inc
push
mov
sub
xlat
jg
int
pop
dec
fsubl
mov
mov
mov
sar
push
fimull
outsb
dec
pop
mov
jp
lock
lds
sub
imul
jmp
outsl
sub
test
jnp
jnp
mov
mov
in
stos
pop
hlt
test
sbb
fcomip
lcall
dec
cld
in
jns
xor
mov
repnz
xlat
jl
push
push
or
hlt
add
daa
fildll
popf
jl
xor
test
hlt
pop
aaa
decl
cltd
adc
fiadds
andb
ja
out
aas
jle
call
iret
jle
out
sub
lahf
std
adc
mov
mov
mov
movl
ror
out
js
jecxz
pop
stc
test
xchg
xlat
fists
cmp
scas
lods
sahf
out
popa
mov
fildll
decl
test
mov
jns
mov
xor
lcall
insl
sub
out
pop
push
xor
push
and
outsl
int
add
jge
subb
xchg
pushl
adc
xor
ss
out
in
push
xchg
repz
cli
int
push
lods
popf
inc
orl
ja
mov
mov
aaa
mov
push
fldlg2
xor
iret
and
mov
cmpsb
mov
fiadds
in
ss
cli
lret
sub
das
js
inc
ja
lret
cmp
xchg
jp
testl
mov
xchg
in
add
or
jo
mov
jnp
fsubrl
cli
sbb
ja
test
or
pop
ss
das
cmpl
inc
inc
addb
outsl
mov
xchg
test
xchg
pop
clc
pusha
cmp
jbe
jns
loop
mov
sbbl
jne
sar
mov
pusha
push
jl
or
aad
mov
jnp
jge
std
in
cmpsl
jnp
xor
mov
out
ret
pop
dec
xchg
xor
mov
scas
inc
shll
cmc
lahf
mov
cmp
pop
jo
shll
jmp
pop
dec
adc
aas
mov
dec
jg
test
xor
ja
xor
push
xor
test
jnp
aam
jb
dec
out
stos
or
mov
mov
mov
push
and
bound
aaa
xor
gs
pushl
push
jnp
lods
or
out
cmp
jmp
mov
push
aas
sub
jo
shlb
out
inc
push
sarb
lcall
orb
addl
iret
gs
cmp
jo
pop
mov
pop
adc
add
stos
lds
cmc
rcrb
push
pop
mov
jne
mov
and
mov
push
rcl
add
push
push
arpl
clc
xchg
add
test
out
and
mov
add
fcomip
call
xchg
nop
sti
mov
inc
mov
inc
insl
cmp
rclb
clc
jle
jne
js
js
xchg
inc
xchg
add
outsl
cmp
xchg
fcmovu
icebp
mov
lahf
jmp
test
aam
rcrb
sbb
fdivr
add
sbbb
xor
loop
cmp
decl
outsb
adc
cmp
inc
push
push
sar
jg
cs
es
out
cld
ds
inc
jnp
cli
cld
cwtl
jae
pop
scas
scas
mov
push
jae
cld
mov
mov
decl
in
test
cmpsb
cmp
idivl
call
fcmove
decl
in
inc
sub
mov
sbb
addr16
out
jp
arpl
test
out
cs
cmpsl
ljmp
mov
jl
lret
xlat
lods
xchg
cmp
imulb
rcll
scas
or
jle
mov
dec
mov
sahf
ret
cmp
jmp
xlat
icebp
push
mov
call
sbb
gs
jg
pop
jp
sbb
out
and
repz
sti
out
dec
jmp
fsub
mov
int3
ds
imul
jns
mov
and
push
push
cmpsl
lock
jmp
mov
and
lret
inc
adc
outsw
les
or
cmp
and
jnp
das
sub
lahf
xor
scas
jne
in
and
les
push
mov
mov
les
cmpsl
stc
and
shlb
cmc
xchg
jnp
or
add
roll
call
lods
dec
xchg
aaa
jae
dec
adc
iret
stc
mov
mov
ljmp
add
ds
in
popl
loop
je
pop
cmpb
aam
sbb
out
jp
stos
inc
pop
out
pop
mov
push
loope
jmp
mov
adc
bswap
mov
sub
cli
mov
je
sub
mov
repz
jl
xor
lock
xchg
push
pop
add
xor
add
in
ret
mov
ljmp
outsl
das
push
inc
adc
push
test
rclb
push
mov
xchg
pop
cli
out
sti
pop
cltd
imul
jl
js
in
outsl
jns
pop
lcall
call
test
mov
into
cmp
into
push
leave
scas
sti
daa
mov
vsubps
ljmp
mov
sub
stmxcsr
arpl
add
imul
mov
push
ljmp
cli
jle
nop
jne
rcl
lcall
add
iret
pop
add
js
pop
pop
mov
int3
popl
mov
test
cmpsl
insl
gs
jbe
cmp
ret
mov
xor
jns
repnz
incl
lcall
cmp
cmpsl
cmp
test
pop
fwait
into
ja
cmpsl
std
bound
sbb
js
cmp
bswap
sbbl
mov
int3
push
pop
lock
call
push
mov
rcll
jge
push
cld
push
jae
or
jmp
cli
repz
int
mov
cmpsb
or
clc
outsl
mov
out
loop
int
aas
imul
jmp
fdivrs
mov
and
pop
repz
sub
loopne
jmp
stos
je
mov
inc
in
sub
mov
in
mov
mov
mov
cs
mov
aaa
into
addr16
and
sub
pushl
inc
sarl
push
jp
aad
cmp
sub
pushf
mov
mov
incl
cmp
stos
mov
aaa
xchg
and
jmp
insw
movsl
sub
mov
lret
dec
cmp
mov
cmpsl
lds
aaa
shl
idiv
jmp
scas
push
dec
imul
mov
int
fistpll
aaa
lcall
and
jecxz
bound
cwtl
mov
sbb
jg
sub
cmp
adc
repz
clc
dec
insb
stc
jg
outsl
pop
lods
and
jmp
dec
jbe
and
icebp
icebp
ja
cmp
ljmp
push
imul
xor
clc
ficomps
xchg
inc
jbe
jle
mov
cmp
in
loop
sbb
mov
cmp
mov
cs
lock
and
jns
lcall
in
xor
add
mov
jne
mov
lea
test
sarb
js
mov
test
aaa
inc
jb
mov
fdiv
push
ds
scas
sbb
cmc
mov
clc
incl
jmp
sbb
add
lods
loopne
scas
and
incl
and
xchg
stos
lds
cmp
pusha
jge
pusha
pop
fwait
and
ljmp
mov
add
aad
frstor
mov
sbb
push
adc
clc
jmp
in
mov
add
add
outsb
inc
adc
and
out
sar
incl
outsl
ja
lds
push
inc
sbb
ljmp
push
mov
mov
idiv
pushl
not
jge
faddp
mov
mov
ret
xchg
loop
ljmp
js
jbe
cmp
dec
sbb
push
icebp
sbb
loope
mov
incl
stos
mov
mov
js
fisubrs
scas
xchg
out
cmpl
out
aaa
popa
scas
stc
lcall
mov
je
scas
lods
sub
fimull
mov
jo
adc
xchg
out
sbb
mov
jmp
inc
repnz
mov
loop
sahf
outsb
js
adc
fs
ljmp
inc
in
pop
dec
cwtl
jg
orb
dec
sbb
xchg
jbe
and
cmp
lcall
sbb
xchg
mov
cmp
xor
push
cmp
das
test
lcall
outsb
xchg
jno
sub
add
pop
jne
xor
cli
lahf
mov
cmp
call
sar
test
ret
mov
fucomip
loop
mov
ss
das
aaa
daa
mov
hlt
in
call
jle
testb
sub
push
mov
mov
pop
jb,pn
out
das
sar
int3
cs
das
jle
outsb
lods
es
mov
mov
lcall
add
xor
fmuls
stos
sti
ss
and
bound
push
addr16
fisttps
inc
dec
xchg
movsb
mov
add
lock
mov
jmp
add
push
jno
std
fdivrp
jg
incb
jmp
iret
mov
jae
shlb
pushl
pushf
push
sbb
scas
mov
and
popf
push
pop
jne
mov
mov
ds
mov
cs
shrl
mov
popf
add
dec
cld
sub
dec
add
mov
cmp
int3
outsl
cmp
imul
loopne
addb
aam
cmp
fucom
loop
mov
sahf
in
jo
pop
ds
jo
xor
xchg
pop
xor
push
imul
shlb
dec
stc
incl
test
push
ja
mov
adc
hlt
scas
cmp
add
icebp
ljmp
rcl
mov
xchg
mov
xor
mov
das
stos
daa
imull
jmp
sub
jmp
mov
aaa
jne
lock
in
sbb
imul
sbb
jg
and
xor
xor
movsb
mov
pop
and
fs
mov
ljmp
push
push
stos
mov
and
ljmp
mov
incl
xchg
mov
xor
aaa
stos
insl
mov
inc
rep
fnsave
iret
xor
sahf
ljmp
add
xchg
rolb
cmp
sub
jae
add
lahf
int3
stos
repz
mov
xor
push
cld
call
jne
push
mov
xbegin
adc
jns
and
hlt
jmp
or
test
mov
jge
hlt
inc
cli
stos
outsb
sbb
mov
lcall
push
sbb
xor
pusha
fisubrl
jle
push
hlt
das
in
outsl
xchg
repnz
add
xor
lcall
std
add
jb
push
jno
inc
jb
jle
lods
xorl
pop
cmp
sbb
iret
cmp
push
jne
in
sbb
out
push
jmp
jg
gs
mov
push
cs
cmpsb
push
ficomps
push
pop
lcall
push
push
cmp
cmp
jmp
pop
outsl
pop
xchg
xor
out
push
test
incl
cmpsl
fistpll
pop
lahf
adc
jne
jg
add
mov
mov
das
mov
out
mov
lahf
aas
dec
pusha
jg
jae
ficoml
mov
xor
jecxz
push
in
mov
mov
jo
and
pop
inc
fistl
xor
mov
xlat
stos
out
push
data16
das
and
movsb
imul
cmp
fxch
das
jo
ja
jg
ret
fdivl
test
ror
subl
aas
cmp
jb
aad
sti
adcl
xor
jno
repnz
jb
sub
repnz
inc
ljmp
gs
fnstsw
mov
cmp
lods
jns
xlat
cmpsb
les
and
shrl
pushl
cltd
stos
enter
xchg
out
mov
pop
xor
pop
xor
lret
inc
repnz
adc
push
jbe
lcall
stos
ror
imul
test
sub
cmp
adc
adc
cmpsl
jnp
fsubrl
incl
pop
sub
xchg
xor
shl
and
adc
and
stos
cli
mov
pop
rol
jmp
pop
popf
xlat
mulb
int
jae
outsb
out
shrb
dec
adc
push
xor
add
fstps
adc
ja
aam
push
shlb
and
ljmp
xor
rcrl
sbb
sbb
mov
xchg
mov
inc
dec
jns
mov
mov
dec
xor
and
lods
fdiv
fisubl
in
add
jecxz
add
jb
lcall
aaa
pop
stc
out
out
movsl
lods
fiadds
adc
ja
or
mov
push
jb
adc
jno
cmpsl
jg
in
lcall
out
xchg
bound
lods
dec
pop
or
pop
inc
cli
mov
or
mov
scas
jb
dec
mov
and
icebp
xchg
push
sub
xchg
mov
call
leave
push
mov
scas
scas
mov
adc
ljmp
xor
aad
imul
pop
lahf
out
xchg
outsb
mov
scas
mov
jae
push
inc
cld
mov
or
decb
lds
jbe
out
cmp
icebp
xchg
js
nop
pop
cmp
sahf
sbb
push
add
jl
or
repz
lock
shr
stos
test
popa
dec
mov
das
outsl
adc
pop
xorb
clc
push
cld
pop
bound
xchg
adc
cmpsb
push
lods
in
ss
adc
pushl
rorb
das
jo,pn
xchg
cmp
adc
loopne
popa
dec
lcall
std
or
imul
push
lcall
push
insb
cld
xchg
stc
pusha
std
inc
inc
adc
cmp
fs
mov
fwait
pop
sub
mov
mov
lods
mov
aaa
lret
lret
je
aad
int
mov
adc
sbb
sub
xor
loopne
push
push
pop
jle
aad
test
ljmp
sub
hlt
sbb
push
push
adc
fwait
lods
push
ja
mov
addb
adc
pop
scas
adc
jo
popf
or
adc
call
jl
ret
mov
cld
lods
std
xor
inc
outsl
and
xchg
hlt
in
push
xor
jle
cld
lcall
xlat
lret
ljmp
ljmp
sbb
std
call
outsl
std
jnp
push
std
stos
repnz
inc
jp
cli
push
inc
cmp
mov
fsubrl
pop
decl
call
xchg
mov
xor
dec
jno
adc
push
jae
decl
les
iret
rolb
mov
out
lds
clc
scas
push
mov
out
cs
lcall
sbb
cmpsb
mov
fimull
pop
fnstsw
call
sbb
ret
cmpsl
lods
decl
add
adc
fs
adc
sbb
add
cltd
mov
mov
ds
pushl
mov
xchg
push
xchg
out
std
xor
loope
movzwl
mov
xchg
sub
popa
mov
push
mov
lea
pop
xchg
jnp
adcl
pushl
outsb
lods
mov
popf
outsb
in
mov
cli
leave
adcb
jb
je
les
mov
aas
mov
cmc
inc
mov
daa
enter
mov
ljmp
cld
sub
out
add
and
jmp
cmp
sub
lds
insl
sti
cmpsl
and
jg
loopne
jae
xor
pop
push
mov
divl
out
xor
decl
cmc
adc
mov
pop
push
mov
pop
test
in
out
lods
inc
xchg
mov
xor
shlb
jae
cs
pop
inc
sub
sahf
cmpsl
pop
xchg
data16
ljmp
sub
xor
xchg
shll
cmpsb
xor
lcall
cmpsl
push
xchg
test
scas
cli
mov
adc
ret
cli
sub
add
in
lds
push
test
data16
cld
xchg
popfw
stc
pop
push
pop
cmp
push
aaa
cld
call
cld
in
testb
enter
pminub
daa
xlat
xchg
fs
incl
lods
mov
push
mov
xchg
cli
int
insl
and
pushf
push
and
lahf
pop
cmp
scas
clc
out
add
into
dec
sub
ret
das
mov
mov
incl
loope
sahf
push
aas
mov
sub
jno
jp
fildl
shll
mov
mov
insb
repz
mov
insb
es
fsubp
push
jg
lcall
jb
adc
push
cmpl
insb
icebp
shlb
jmp
sub
daa
push
sbb
or
add
adc
lahf
add
decl
jnp
cmp
sub
xlat
and
push
scas
mov
decl
stos
jns
dec
mov
icebp
cmpsb
data16
pusha
aas
sub
or
es
int
in
inc
ret
js
xor
call
adc
outsl
test
in
xor
and
jg
or
push
xchg
sbb
sub
aas
xchg
xor
sbbb
decl
adc
sti
adc
lds
in
sti
incl
lods
xchg
sub
adc
aad
push
repz
xchg
sub
das
cli
jg
stos
adc
jns
rcl
js
lret
cwtl
sbb
inc
icebp
lea
jne
mov
sub
stc
mov
lods
inc
jle
shr
sahf
movsb
mov
add
insl
jnp
fcomip
incl
lock
out
add
sub
lock
cmpsl
popf
dec
sub
jmp
das
mov
shrb
lahf
push
mov
mov
add
fidivl
insl
pop
fstps
jbe
arpl
mov
pop
jmp
cmpsb
in
push
aas
sar
xchg
dec
sbb
ljmp
push
outsb
push
call
mov
insb
xchg
push
adc
add
incl
inc
insb
cmc
mov
insb
push
sub
dec
dec
outsb
mov
das
push
jnp
imul
repz
mov
mov
adc
decl
ror
add
cmpsb
mov
das
jmp
scas
mulb
lcall
pop
pop
lock
jge
sub
pop
insl
pop
sbb
pop
jne
lret
insb
inc
pop
out
push
sahf
icebp
fcmovnu
cmpsl
inc
xor
lahf
mov
fwait
pop
fsubrs
movsl
push
insb
add
data16
fildll
cmp
lret
and
dec
xrelease
cmp
arpl
push
pop
xchg
shrl
mov
test
lock
inc
jne
stos
push
lret
mov
mov
stos
movsl
rcr
idivl
push
data16
test
dec
into
insl
lahf
test
imulb
jmp
cmp
lods
cltd
fdivrl
mov
movsl
xor
fistps
cli
icebp
imul
incl
filds
inc
push
int3
sub
push
data16
ljmp
jmp
push
ljmp
int3
stos
xchg
pop
cmc
cmp
imul
hlt
ljmp
cmp
das
sbb
inc
out
xorb
test
add
call
scas
xchg
cmp
xchg
pop
jmp
incl
xchg
inc
inc
xchg
xor
repz
xchg
xor
pop
outsl
jmp
ljmp
pop
stos
aas
sti
out
test
aaa
adc
mov
or
test
stos
mov
incl
xchg
pop
inc
insb
mov
sub
test
insl
or
ds
leave
add
incl
xlat
mov
add
xlat
test
jl
aam
les
sub
incl
and
test
js
pop
test
ficoms
sub
pushl
pop
pop
out
cwtl
cmp
and
data16
outsl
test
subl
incb
mov
lds
xchg
jmp
cld
push
les
jo
cmp
xorb
lcall
fdivs
fwait
in
out
orl
mov
cmp
cmp
call
mov
inc
sub
inc
push
addb
in
mov
rcrb
mov
in
flds
sbb
outsl
adc
push
sub
insb
iret
sbb
call
aam
mov
xchg
mov
push
das
mov
fwait
aam
and
call
xchg
jmp
movsb
divl
cmc
jb
xor
push
out
xchg
push
inc
fst
aad
jns
inc
xorl
fwait
into
mov
mov
fucomip
aad
ljmp
and
pop
adc
push
push
dec
jo
out
out
test
mov
ds
mov
stos
sbb
ja
mov
sub
std
adc
fcomip
fmull
add
mov
mov
fwait
data16
lock
int3
sbb
mov
iret
jae
jbe
and
out
dec
pop
pusha
sarb
push
in
push
stos
subb
jecxz
push
into
cmp
inc
xor
add
daa
outsb
or
sbb
rorl
jbe
idivb
pushl
mov
js
jno
ljmp
adc
outsb
sbbb
push
ljmp
push
ror
popf
push
mov
push
orb
xor
sub
in
cmpsl
push
jge
lock
pushl
mov
xchg
addl
ljmp
movsb
fsubr
sbb
jno,pt
out
ljmp
push
in
in
sub
xchg
int3
xor
and
ljmp
call
mov
and
add
jae
out
data16
ss
mov
push
xchg
mov
inc
jns
push
call
adc
cltd
and
xlat
mov
add
push
loop
add
and
mov
xchg
mov
inc
and
stos
pop
insl
jecxz,pt
inc
inc
addr16
test
call
jmp
testl
popa
jbe
test
sub
test
adc
loop
pop
aam
into
pushl
andl
test
cs
icebp
adc
nop
in
call
mov
daa
test
sbb
rclb
sub
cmc
xlat
ror
xlat
rolb
adc
lock
push
daa
jmp
clc
sbb
jge
inc
cmp
dec
cmp
push
loope
xchg
lods
punpckhwd
call
and
pop
fldt
jg
and
insb
les
loop
fidivrs
mov
insl
sbb
orb
call
sub
mov
mov
jle
ret
ror
fisubrl
jg
incl
mov
out
popa
in
xchg
and
test
outsb
out
and
imul
sbb
incl
mov
push
insl
jnp
cmp
mov
sbb
lods
fisttpll
dec
decl
sbb
mov
sti
cmc
or
jnp
adc
mov
dec
ljmp
mov
sbb
jno
data16
pop
mov
lods
int3
in
repz
pushl
cli
pop
outsb
mov
jge
mov
adc
ficoml
push
repz
push
mov
adc
in
ljmp
jno
pop
push
jno
out
incb
jle
daa
into
xchg
sbb
jmp
sbb
stc
add
bound
js
iret
or
inc
rorl
rcl
test
and
jmp
add
mov
enter
data16
out
dec
ljmp
xchg
and
jmp
mov
scas
outsb
divb
jge
xchg
daa
shll
xchg
pop
je
je
jg
lock
jmp
repz
sub
and
pop
popf
icebp
pop
out
std
pop
cmpsl
jl
movsl
cmp
fistpll
xchg
mov
das
addr16
daa
jnp
ds
push
push
in
nop
ja
jp
jmp
cmp
pop
pop
mov
loope
push
int
aas
mov
loope
sbb
jnp
ljmp
and
cmpsl
rcrl
push
test
push
jno
incl
in
test
push
movsb
jl
bound
jge
sub
push
inc
and
sub
pop
and
cmp
push
test
in
out
sub
mov
jmp
push
mov
pop
stos
and
xlat
fucomi
in
lcall
push
popf
das
dec
push
test
push
mov
dec
or
mov
mov
icebp
cmp
fcompl
pusha
adc
jnp
or
dec
fisttps
xchg
dec
push
ss
es
popf
pop
adc
or
popa
dec
movsl
ficomps
icebp
int3
cmc
lcall
pushl
mov
pop
daa
fistpll
sub
in
leave
fidivs
cmpsb
decl
arpl
outsl
xor
into
adc
xor
js
lret
and
mov
decl
aas
sbb
jns
in
lds
add
out
jne
xchg
loope
jo
pushl
push
shld
add
imul
pop
lds
mov
xchg
adc
jmp
mov
in
pop
test
call
xor
out
lret
negb
clc
iret
and
cltd
out
pushl
std
je
push
cwtl
push
fdivr
xchg
movsb
mov
sbb
cmpsb
jg
jmp
call
int
push
mov
leave
ret
or
push
out
sbb
data16
incl
xchg
arpl
ss
mov
pop
iret
cmc
scas
and
push
mov
jns
mov
call
aad
xchg
lahf
movsl
push
push
popl
je
jle
push
call
pop
loop
call
jne
or
ljmp
in
mov
decl
in
pop
out
sub
push
psubsb
adc
into
adcl
jmp
outsl
cmp
ret
jge
loope
mov
cltd
into
mov
and
sbb
and
pop
sub
and
call
outsb
lock
jmp
push
sahf
iret
daa
pushf
test
push
popf
shlb
decl
push
repz
mov
ret
fstl
mov
and
int
outsl
lods
ljmp
mov
jecxz
fldl2t
and
and
nop
nop
std
mov
in
mov
or
and
decl
stc
outsb
iret
shl
into
or
sub
cli
into
decl
inc
in
ret
and
lcall
in
adc
insl
scas
sub
jbe
ljmp
xchg
xchg
adc
incb
nop
lret
cmp
iret
movb
rcrl
in
rclb
sub
ljmp
std
test
push
xchg
ds
fucom
bound
xor
inc
scas
addr16
adc
dec
sub
jp
mov
scas
rclb
push
ljmp
mov
out
clc
fistpll
xchg
push
jns
rorl
mov
cld
incl
and
das
movsb
mov
ljmp
push
pop
and
icebp
mov
sahf
push
outsb
fdivrs
rorl
sar
out
xchg
sbb
or
lahf
decl
cmpsl
jnp
into
gs
cmp
xlat
and
hlt
lock
fildll
sar
sbb
xchg
fwait
pop
inc
mov
rcll
lcall
pop
jno
push
adc
push
pop
cmpsb
or
sbb
xlat
js
outsb
nop
or
jmp
loope
sub
or
push
xor
cli
in
mov
sbb
pop
jmp
and
xchg
bound
imul
push
filds
jecxz
popf
or
pop
dec
loope
lcall
cwtl
fwait
push
xchg
sub
ljmp
aas
push
cmp
pop
push
repz
mov
mov
push
or
incl
and
into
imul
in
in
mov
loopne
shrl
loope
call
pop
cmp
xchg
lahf
adc
xorl
pop
cltd
shlb
fldenv
mov
jmp
aam
add
push
xchg
mov
cmp
fnstsw
mov
mov
popf
out
lahf
out
or
fwait
inc
out
cmp
pop
cwtl
cmp
movb
mov
lcall
pop
sub
push
sarb
fbstp
repz
push
pop
loope
cmc
int
lahf
pusha
jmp
mov
pop
sbb
shrb
pop
inc
inc
jg
sbb
cmpsl
daa
mov
int3
pop
fnstcw
mov
rcl
pop
push
mov
clc
incl
and
xor
inc
outsb
data16
orb
leave
fs
xchg
and
addl
int
ret
imull
mov
mov
mov
xlat
pushl
ljmp
ret
jnp
inc
les
xchg
or
mov
sti
cli
es
mov
mov
add
dec
repnz
scas
mov
dec
pop
push
lcall
push
addr16
lahf
sbbb
mov
pop
cs
out
sub
loop
lods
lods
incl
enter
push
fwait
test
mov
mov
pop
sbb
ljmp
neg
sbb
mov
and
sti
repnz
scas
filds
or
pop
hlt
into
bound
push
push
cltd
and
decl
popf
and
dec
dec
lods
ficoms
sub
push
jmp
mov
and
xchg
fdivr
in
push
addr16
imul
inc
lock
dec
xor
lock
pop
push
and
cmc
sub
stc
jne
jo
test
test
aas
inc
fildll
sbb
popa
sbb
sub
adc
pushf
dec
arpl
pop
cmc
aas
mov
rcl
imul
dec
and
sbb
mov
lods
cmc
incl
sub
jbe
push
sti
aad
push
jge
sbb
scas
push
stos
sbb
lock
sub
fdivrs
dec
sbb
in
pop
addl
loopne
js
pop
imul
loope
dec
pop
pop
push
jns
mov
pop
sbb
pushl
mov
mov
push
fcmove
outsl
ss
push
dec
sahf
lret
fbld
and
dec
clc
stos
pop
rcrb
test
ljmp
dec
fisubs
push
popa
cli
xor
or
test
push
lcall
push
pop
push
xchg
inc
pushf
enter
mov
xchg
mov
cmp
push
out
mov
mov
cmp
addr16
and
push
mov
xchg
inc
movsb
sahf
ds
icebp
cld
push
dec
bound
aam
dec
lcall
or
xchg
mov
add
mov
pop
sbb
aam
mov
adc
das
shrb
out
clc
outsb
sub
ret
adc
aas
and
daa
sbb
jl
xchg
lcall
lcall
adc
mov
or
inc
pop
jne
mov
jg
pushl
mov
cs
shlb
jno
ss
adc
negl
call
rolb
mov
push
jnp
icebp
flds
ds
mov
out
xchg
and
lods
sbb
inc
idiv
sbb
jp
pop
outsl
xor
pusha
inc
push
pop
mov
mov
cld
cltd
ja
fnsaves
mov
cmp
mov
or
stos
out
jmp
jmp
push
adc
mov
pop
aas
outsl
pop
les
sbb
gs
in
and
xlat
lods
cli
in
jg
iret
aad
mov
ds
aas
cmpsl
pop
cmp
in
sarb
mov
addl
pushl
pusha
push
sahf
jge
sbb
jl
pop
ds
fcmovbe
shrl
add
ret
call
sahf
push
push
push
sahf
cmp
xlat
pop
mov
mov
test
sub
push
xchg
adc
or
push
cmp
mov
xchg
fs
lret
xor
xlat
or
ljmp
sbb
div
sti
xor
pop
je
add
push
lods
cmpsb
sbb
jbe
pop
movsl
clc
out
pop
xor
lcall
nop
jl
dec
jae
stos
fisttpll
pop
xor
decl
popa
std
cli
jge
pop
pop
xor
das
pop
sub
mov
mov
out
or
cmpsb
xor
sahf
out
xchg
lcall
call
stos
mov
outsb
shlb
jg
stc
adc
push
pop
fsubl
decl
enter
cmovb
out
xchg
xchg
push
mov
inc
arpl
incl
push
cmp
into
sub
sbb
adc
xor
sub
shl
push
pop
dec
mov
loopne
insb
lcall
movsb
sbb
dec
xchg
xor
daa
jbe
mov
pop
cmpsb
add
lcall
subl
decl
fs
out
je
xchg
lahf
mov
cmpsb
sar
movsb
jo
repz
pushl
fwait
mov
xlat
inc
insl
push
push
or
js
imul
aaa
ss
mov
xor
loopne
dec
xlat
fnsave
arpl
or
mov
xor
test
fbstp
adc
outsl
lea
xor
ret
xor
mov
lcall
add
sbb
cwtl
pop
addr16
lcall
or
xor
sahf
cmpsl
std
pop
cmp
xchg
shlb
outsb
ljmp
cwtl
mov
out
sbb
jecxz
mov
push
subb
or
notb
call
insb
sbb
decl
or
or
aas
adc
and
push
dec
pop
loopne
dec
pushf
inc
push
sbb
out
fistpl
jp
xor
lcall
pop
pop
xor
push
pop
sti
movsb
pop
cmpsl
sbb
xor
scas
out
add
fists
xor
pop
jae
jo
pop
and
out
xchg
xor
dec
mov
jmp
fbstp
pop
ds
inc
pop
int
pop
psubusb
and
shr
outsl
adc
ja
or
dec
pop
inc
cld
cmp
sub
out
clc
outsl
clc
sub
xor
into
jo
jp
bound
loope
out
mov
ljmp
add
pop
xor
mov
cmp
in
sbb
mov
xchg
pushf
fidivrl
data16
mulb
push
push
xor
out
jg
xor
pop
jb
cmp
xor
xorb
test
decb
incb
pop
fidivrs
pushl
aas
xchg
lock
aam
ficomps
out
cmp
mov
jmp
pop
aaa
cld
pushl
enter
xchg
lret
dec
mov
pop
pushf
mov
mov
incl
xchg
sub
frstor
xor
lcall
add
scas
xchg
xchg
mov
mov
inc
xlat
inc
adc
add
jno
jnp
imull
sub
xlat
lret
xlat
call
push
xor
mov
insl
pop
xchg
iret
lods
dec
lret
sbb
xor
xlat
xchg
decb
fnstenv
lds
push
call
inc
stos
lods
ja
xorb
mov
mov
sahf
sbb
xchg
sbb
cltd
pop
xchg
fidivrl
es
leave
mov
movsl
xor
sub
xchg
test
nop
popl
rep
dec
scas
cltd
je
daa
cmc
cmpsl
in
insb
xchg
repnz
push
mov
mov
daa
mov
fldenv
push
push
fistpll
out
jno
cli
ja
ljmp
push
aam
push
sbb
cmp
sbb
push
jl
int
fsubrs
ds
scas
lock
es
cmp
test
adc
pop
je
mov
fwait
daa
xor
test
jp
aas
sub
andb
cmp
sub
pop
or
sub
fs
inc
scas
push
ljmp
je
xchg
jp
mov
and
test
scas
cs
add
sub
sub
out
xlat
mov
lea
adc
popf
fisubs
xchg
sub
push
mov
xor
scas
fcomps
cli
dec
inc
sbb
jmp
call
jg
rol
jbe
lods
xchg
mov
sub
xchg
xchg
mov
mov
loope
push
aas
mov
adc
sbb
mov
mov
lock
outsb
jmp
dec
xor
pop
inc
dec
lcall
rcll
call
repz
mov
leave
jecxz
repz
decl
cs
das
xchg
lret
jne
inc
scas
in
sbb
call
pop
lcall
lahf
pop
jge
sub
inc
push
and
push
adc
dec
sbb
es
dec
adc
dec
insb
inc
incl
and
out
or
sub
test
add
sbb
jge
push
aaa
mov
adc
cmp
mov
loop
pop
and
into
pop
movsb
movsb
mov
insl
lods
ss
pushl
inc
sbb
inc
adc
sbb
xchg
dec
sbb
outsb
pop
pop
arpl
push
xlat
sub
out
jl
xchg
jmp
cmp
and
xor
mov
insl
dec
mov
adc
mov
call
pushl
std
ds
cmp
adc
sbb
mov
cwtl
insb
fldenv
sub
or
inc
loope
jp
xchg
sbb
ljmp
push
cld
jmp
dec
fdivr
xchg
jle
int3
xchg
mov
and
inc
cltd
and
inc
adcl
cmp
ret
adc
pop
pop
pop
xchg
pop
inc
cs
jg
push
cltd
mov
ljmp
push
nop
sbb
mov
and
mov
push
aam
jbe
lds
mov
sahf
int
es
lcall
fisubs
pusha
fbld
mov
cwtl
and
incl
mov
push
pop
and
jmp
and
push
cmpsl
push
enter
std
call
xor
and
fsubrs
xor
scas
in
out
fisttpll
call
adc
inc
nop
or
lcall
xor
lea
mov
and
sahf
ds
outsl
decl
cmpsl
out
jle
and
fmull
out
pop
sub
mov
pop
and
cwtl
sub
decl
cwtl
ja
imul
scas
lods
bound
in
divb
and
ret
pushl
adc
test
cmp
or
add
faddl
pushf
shlb
sub
lcall
rcrb
jle
lods
int
push
lea
jg
and
xor
ss
lret
call
mov
adc
mov
sahf
fisttps
repnz
add
lds
loop
mov
out
into
pop
fs
rol
adc
mov
ljmp
sbb
push
mov
cli
scas
push
jae
mov
and
in
fists
and
in
dec
mov
or
xor
sbb
mov
jmp
dec
mov
addr16
in
cwtl
adc
test
cltd
xchg
and
push
mov
shlb
dec
aas
pop
mov
or
adc
test
stos
xchg
pop
mov
ret
icebp
scas
inc
mov
push
xchg
cmp
fsubrs
mov
ret
pop
cmpsl
adc
mov
call
sub
push
push
sbb
out
sub
fcomps
fistl
push
pop
push
aas
frstor
fcomip
pop
lock
je
push
mov
sbb
xlat
pushf
mov
xlat
push
xor
out
dec
or
xchg
xchg
cmp
push
and
cmp
jbe
pop
decl
push
pusha
aam
movsb
ja
jae
cmp
fildl
fistps
dec
cli
pop
cmp
shrl
mov
test
cld
xchg
sarl
inc
lds
and
call
lahf
shlb
and
imul
add
lods
dec
int3
xor
dec
lea
ja
mov
incl
xchg
lret
sbb
and
mov
ljmp
ret
scas
mov
insl
out
ljmp
adc
inc
fdivs
mov
outsb
sahf
and
lods
shr
pop
ret
xor
inc
call
inc
and
dec
test
add
sub
push
adc
fistps
incl
out
aad
pop
mov
int
sub
inc
imul
in
clc
cmpsl
das
adc
add
loopne
call
xchg
adc
adc
jmp
mov
or
ss
xchg
xor
add
jecxz
xchg
fcomip
incl
mov
mov
pop
popf
out
sbb
inc
clc
mov
call
in
lcall
int
sbb
inc
ficoml
cmc
filds
scas
sbb
dec
outsb
mov
lea
mov
pop
test
test
insb
repz
xchg
int
sbb
cmpsl
push
push
mov
mov
sub
cmpsb
lods
scas
data16
aam
pop
sbb
inc
mov
insb
dec
adc
call
sub
das
mov
adc
mov
dec
pop
jecxz
xchg
cmc
testl
dec
call
cmp
ss
adc
and
inc
incl
adc
jbe
ljmp
lret
cs
leave
sub
mov
xchg
sbb
adc
and
movsb
sbbb
mov
pop
loop
test
lds
cld
cmc
sbb
ljmp
push
dec
sub
mov
stos
jo
nop
mov
movsl
sub
fidivs
xor
push
cld
je
test
out
adc
inc
xorl
xlat
int
push
push
or
scas
xlat
mov
inc
adc
jns
or
loope
incl
mov
jne
shlb
lods
xchg
ss
popa
mov
lcall
cmp
cs
mov
lahf
leave
imul
push
cmpsb
outsb
test
shll
out
xor
add
mov
push
adc
div
decl
push
mov
outsl
adc
outsb
shll
xchg
cmp
scas
cld
pop
mov
stos
or
add
or
arpl
lods
add
dec
pop
loopne
ret
lds
push
dec
inc
cmp
out
ljmp
clc
sbb
es
lods
lds
lock
dec
nop
push
push
push
xor
fcomip
ljmp
mov
out
and
mov
aam
lcall
into
std
xchg
xor
arpl
xchg
sbb
aas
roll
es
call
lods
pop
xchg
mov
xor
push
sub
pop
or
jg
mov
mov
data16
mov
fs
add
jmp
fisttps
cmpsl
push
sub
aas
ljmp
lret
inc
or
push
mov
nop
xchg
sbb
das
call
lods
outsb
xor
add
jmp
iret
jg
stos
mov
push
sar
bound
dec
sbb
fcomip
mov
outsb
sub
hlt
inc
adc
retw
fcompl
cld
jns
sbb
jle
mov
lcall
adc
mov
sub
lret
mov
adc
loop
mov
jmp
call
adcb
sbb
mov
adc
inc
dec
mov
fdivr
test
jns
sbb
lcall
cmp
push
mov
jno
iret
aas
adc
xor
sbb
xor
stos
repz
call
outsb
sub
test
leave
push
pusha
mov
pop
xchg
mov
pop
sbb
mov
ljmp
int
xchg
mov
outsl
mov
scas
dec
cltd
push
push
dec
scas
mov
clc
jmp
cli
jle
xchg
cli
je
push
push
fwait
jae
sub
cltd
push
fcos
lcall
pop
push
cmp
fnstcw
mov
mov
mov
push
in
andl
loopne
std
inc
test
clc
incl
cld
test
test
adc
lods
inc
nop
movsl
sub
mov
repnz
pop
inc
jo
out
pop
and
xor
stos
push
jg
add
cmp
sbb
insl
cwtl
lret
imul
ja
mov
cmpsb
add
cwtl
outsb
daa
ljmp
rcrb
cmpsb
movsl
push
pop
xchg
jle
mov
adc
in
and
arpl
xor
out
mov
out
sbbl
lods
rcrb
scas
test
add
xor
add
dec
pushf
rcrb
jg
lea
push
xchg
push
mov
int
icebp
lahf
nop
icebp
jl
mov
jb
fldt
cmp
insb
jmp
pop
iret
xchg
dec
sarb
cmp
pop
lcall
add
inc
insb
mov
xchg
out
addl
call
call
push
fwait
pop
cltd
pusha
cmp
cmp
pop
cmc
cs
lahf
cmp
add
cmc
rol
repnz
jge
lcall
sbb
cwtl
fwait
sbb
add
shlb
jle
adc
push
xor
and
push
push
loopne
adc
das
out
es
dec
adc
inc
iret
pop
test
decl
addr16
cmp
pop
dec
cs
and
xchg
pop
sub
dec
int
pop
flds
push
jp
xor
rclb
jno
into
out
mov
jle
add
movsl
pushl
iret
cmp
int
lret
xchg
ss
bswap
cltd
xlat
iret
sbb
mov
lea
in
faddp
add
inc
outsl
mov
push
mov
repnz
repz
incl
daa
inc
cmpsb
mov
cltd
add
pop
outsl
cmc
outsl
movsl
insl
cmp
ljmp
js
cmpsb
add
push
mov
xchg
xchg
jl
pop
xchg
jo
adcb
pop
adc
add
fidivl
jae
xchg
ret
outsl
mov
mov
pop
or
adc
decl
pop
mulb
ljmp
iret
xchg
shl
sarb
cld
call
es
jge
mov
mov
xchg
imulb
call
add
stc
imull
cmpsl
lea
mov
cs
adc
outsb
pop
call
pushl
fadds
push
mov
loopne
fsub
inc
imull
incl
int
loop
movlps
sub
adcb
push
dec
adc
xor
and
lret
cwtl
mov
repz
push
mov
mov
and
mov
jmp
and
cltd
or
out
sbb
adc
jnp
clc
jae
and
ljmp
pushf
push
cmc
adcb
mov
nop
cmpb
ret
sbb
rorb
aas
movsl
popf
in
or
inc
pop
xchg
push
pop
add
lea
std
push
dec
adc
pop
dec
cmpb
adc
push
mov
out
andb
lcall
push
decl
xorb
mov
xchg
mov
sbbb
mov
and
ljmp
fdivrl
in
lea
mov
mov
pop
orb
jle
lret
stos
out
mov
pop
in
les
push
xor
lea
mov
jl
cli
cmc
push
mov
pop
icebp
stos
pusha
decb
and
sar
push
push
bound
fs
fbstp
dec
iret
mov
xchg
data16
add
scas
fmulp
xchg
fiadds
sahf
scas
pop
stc
pusha
insb
adc
jg
xor
jp
jp
pop
lock
mov
aaa
pop
pop
cld
fcmove
adc
scas
inc
jge
mov
and
incl
xchg
imul
push
pop
lods
outsl
mov
xchg
lock
hlt
add
xchg
ret
or
pop
xor
or
fildl
sub
popa
add
incl
cld
fisttps
push
mov
xchg
imul
lcall
pop
cmp
decl
out
aad
orb
push
rol
gs
gs
pop
mov
pop
cmp
decl
aad
xor
xchg
xchg
jb
mov
dec
dec
push
test
pop
stos
jne
xchg
call
loopne
xchg
mov
jnp
fwait
vpcmpeqw
es
pop
or
adc
mov
xlat
jge
dec
in
int3
icebp
push
push
pop
je
cmp
aaa
push
pop
xor
add
cld
aaa
std
cmp
out
out
sbb
call
arpl
stos
int3
pop
dec
cmp
ljmp
cmp
mul
add
jmp
scas
mov
cmpsl
lret
add
xor
icebp
sub
mov
ljmp
out
jl
iret
bnd
int3
in
shlb
lret
xlat
cmp
test
icebp
push
loop
hlt
lcall
dec
int3
pop
inc
or
mov
insb
int
int
das
inc
push
and
addl
lcall
push
les
pop
dec
div
aam
inc
push
xchg
dec
pop
inc
lret
clc
lds
fldl
decl
testb
lods
rclb
mov
lods
add
mov
mov
scas
stos
movntps
mov
push
mov
xor
sarl
ds
lock
rcll
std
lret
shlb
pop
jno
imul
frndint
cmp
adc
icebp
in
xchg
mov
lret
adcl
sti
into
jne
testl
cmp
xchg
dec
cld
out
and
fs
or
or
cli
push
ja
nop
leave
cmc
gs
mov
and
jnp
scas
xor
aaa
mov
lds
jg
js
pushl
das
inc
aam
cmc
shl
popf
out
adc
cmc
and
adc
repnz
orb
call
repz
pop
leave
testb
das
mov
rorb
jno
in
inc
movsl
aad
mov
call
xor
sub
ret
lahf
push
dec
hlt
mov
add
pop
sub
hlt
movsb
cmp
cs
clc
adc
int3
scas
mov
incb
mov
aas
sbb
mov
dec
jae
in
mov
mov
subb
cmp
repnz
call
xor
pop
dec
fildl
dec
imulb
fisttpl
cmc
cmp
xchg
jae
push
dec
jp
ja
incl
je
push
repz
mov
dec
dec
cli
gs
push
sbb
jns
push
popa
lock
ds
lcall
das
add
dec
lock
nop
xchg
and
sub
outsl
cli
jmp
cmpsb
inc
ljmp
jl
fs
add
sub
call
xchg
out
or
popf
das
pushf
je
cwtl
fmuls
xchg
dec
or
or
fmuls
fwait
mov
jmp
outsb
jecxz
push
jne
fldt
cmp
test
pop
ss
push
aam
iret
pop
pop
dec
ret
mov
dec
test
btc
dec
add
dec
mov
es
inc
ficomps
dec
pop
mov
inc
in
jge
daa
subb
mov
int3
ffree
iret
mov
ljmp
fsubr
pop
mov
mov
dec
icebp
mov
xor
and
scas
cmc
pop
jmp
lcall
mov
push
fidivl
es
inc
dec
and
negb
mov
imul
sub
decl
xlat
cmc
scas
push
scas
sub
mov
idivb
aaa
mov
decl
mov
leave
pop
popa
jnp
hlt
xchg
inc
rcrb
rcr
jo
scas
lret
or
flds
add
jmp
push
add
mov
pop
mov
pop
and
sbb
lret
std
pushl
aad
xchg
roll
lds
popa
mov
fnstsw
lret
dec
mov
mov
sbb
ljmp
mov
pop
xlat
scas
dec
sub
fisttps
or
push
lret
shl
push
lods
push
mov
nop
das
xchg
lock
mov
cmp
dec
dec
ret
data16
mov
lret
jle
pop
enter
xchg
popa
cs
fmul
inc
popf
outsl
pop
lcall
and
or
ss
pop
loope
scas
mov
call
mov
push
lds
movsl
arpl
adc
lock
mov
lret
add
mov
inc
inc
insl
notb
push
mov
push
adc
or
dec
cltd
jae
jge
pop
in
jle
hlt
popa
andl
jg
and
pop
inc
adc
push
sub
bound
les
xor
push
jmp
jb
dec
push
and
push
add
int3
jp
dec
add
flds
int3
add
inc
adc
xchg
push
popf
cli
xchg
adc
addb
fs
out
fsubp
jg
enter
lods
fwait
in
daa
and
xor
xlat
inc
jle
and
test
gs
ljmp
gs
lret
jp
es
movsb
mov
ds
and
ja
aaa
std
incl
mov
shlb
insl
scas
lods
loopne
ret
inc
push
mov
out
test
ja
sti
inc
pop
fucomp
xchg
aam
or
jne
fsubrs
push
outsb
push
xor
rcl
clc
xlat
loopne
mov
xchg
inc
out
rolb
enter
push
inc
push
jb
insb
xor
jg
jmp
adc
sub
lret
cmp
jle
cmp
and
incl
fwait
sbb
push
cmp
ja
les
push
pop
jmp
pop
mov
leave
lds
and
ljmp
pop
sbb
push
cmp
cmp
roll
fs
mov
push
std
jg
xchg
pop
sahf
fmul
xchg
negl
test
push
in
mov
and
fcmove
pusha
adc
sub
jg
insl
push
lock
scas
dec
cmc
daa
dec
xorb
push
inc
pop
enter
dec
mov
leavew
cmp
cs
push
add
inc
pushf
mov
mov
call
call
inc
out
dec
mov
xchg
faddl
int3
stos
popf
jae
inc
jbe
stc
adc
inc
mov
cmp
push
xchg
inc
sub
rol
imul
fld
lds
sub
inc
inc
pushf
insb
dec
push
xchg
in
add
es
push
fnsetpm(287
fistpll
sub
jmp
les
cmpsb
adc
out
mov
add
leave
dec
push
sar
push
popl
std
out
cld
ret
bt
repnz
add
add
rcrl
fdivs
jmp
sub
adc
add
out
pop
roll
lds
sar
dec
loop
inc
fdivrl
ljmp
nop
imul
inc
inc
lcall
cwtl
sbb
pop
pushf
aam
mov
xor
pop
stc
fidivrl
cmp
int
inc
popa
pop
add
xor
int3
scas
and
imul
mov
pop
loopne
mov
jae
movl
imulb
xchg
dec
addr16
jg
pushl
lcall
inc
sbb
push
mov
xchg
std
mov
push
je
jbe
addr16
fsubrs
flds
orl
cmp
and
lods
ljmp
pop
xchg
outsb
add
adc
scas
daa
shl
mov
or
mov
and
ljmp
adc
gs
or
cmp
fwait
xor
test
mov
incl
fdivl
pop
sbb
fwait
test
add
jg
popf
negl
cmp
outsl
mov
in
dec
adc
repnz
stos
xor
inc
fucomp
sar
jecxz
les
inc
inc
loope
cmp
leave
xor
xchg
jg
mov
push
xor
hlt
cmpsb
popl
add
pushf
mov
loope
cmpsl
mov
fadds
jnp
mov
push
xor
faddp
cmp
scas
jmp
push
sarl
out
add
icebp
and
loope
push
pop
es
out
sbb
filds
xor
jg
jmp
ror
sub
pop
ss
add
add
mov
dec
scas
mull
jg
insb
xlat
fs
rcll
xchg
sbb
imul
fcomip
push
ret
jo
xchg
inc
push
mov
mov
sbb
dec
pushf
lds
incl
sti
dec
pop
les
popa
into
cmp
gs
xchg
dec
loop
aam
cld
add
ljmp
cwtl
out
xor
and
add
push
or
add
rcl
sub
mov
lds
sub
or
pop
shr
sbb
xor
incl
repz
loopne
pop
shrb
inc
mov
lret
aas
bound
push
negl
inc
jns
cwtl
push
ret
mov
sbbl
cmp
push
inc
enter
mov
jne
popf
mov
int3
jl
inc
mov
insl
pop
xor
std
std
dec
incl
insb
jge
in
jl
inc
out
add
mov
clc
jg
dec
repz
fists
loopne
adc
sub
add
arpl
out
scas
lds
jmp
lret
jl
jnp
js
pop
scas
sbb
cmp
inc
cld
jne
pop
cmpsb
dec
inc
jae
lcall
pop
sti
xchg
xchg
xchg
sbb
and
add
xchg
inc
sub
push
add
stos
cmp
jnp
test
repnz
rclb
mov
mov
pushl
jno
add
inc
into
nop
jg
lahf
aam
xchg
ja
jo
jb
insb
dec
stos
call
loop
add
mov
pop
sub
lods
ds
push
add
ljmp
xor
xchg
jne
dec
jg
ljmp
adc
push
add
xchg
movsb
pop
sub
lret
ljmp
lock
push
scas
scas
out
call
scas
push
push
push
ds
mov
ljmp
test
pop
cli
dec
cmp
inc
pop
icebp
jmp
fbstp
test
in
xor
daa
dec
mov
and
or
decl
pop
cmp
dec
jle
xchg
cmc
xchg
orb
add
jg
lock
adc
jg
cmpsb
ljmp
lahf
fsts
loopne
mov
xchg
lcall
mov
fcomip
xor
std
sub
daa
add
lods
adc
cmpsl
mov
sbb
jg
jnp
xchg
test
push
js
add
sbb
xor
push
push
or
lcall
idiv
call
int
cmp
adc
and
lods
andl
cs
or
sub
in
jns
cmp
data16
jmp
in
sub
mov
mov
pop
mov
call
cmpsl
sbb
addr16
adc
lcall
popf
xchg
ret
add
pop
cli
jg
xchg
hlt
pushf
and
out
jl
sbb
mov
mov
jmp
jne
pop
test
jmp
sbb
cld
sbb
notb
mov
popa
sbb
cmc
je
sahf
mov
mov
push
orb
cltd
cmpsl
adcl
push
sahf
mov
pop
mov
pop
fs
mov
add
push
mov
sbb
test
idiv
call
ficoms
jge
out
test
adc
es
lcall
lea
dec
decl
mov
std
outsl
outsb
mov
add
in
mov
xchg
jmp
addb
rcrb
or
mov
sbb
notl
jp
shl
mov
pushl
ljmp
push
int
shrb
jb
mov
jl
mov
jbe
inc
xor
jmp
decl
cmpsl
call
out
sbb
jo
mov
push
test
decl
in
pop
xchg
in
mov
sbb
cmpsl
cmpsl
or
call
call
clc
xchg
xor
cmpsl
ds
sar
push
jmp
call
jl
lret
sub
jne
cli
adc
ret
adc
push
jge
jae
es
shr
jg
call
or
xor
lahf
jns
push
adc
xchg
mov
jg
dec
lea
add
je
aaa
lahf
xor
jno
in
xor
loop
sbb
repz
push
jno
mov
or
outsb
leave
sbb
xlat
imul
mov
incl
pop
jle
xor
jge
icebp
push
dec
test
outsb
sbb
push
or
ss
into
push
mov
inc
inc
jnp
call
ja
neg
and
imul
sarb
push
rcrl
jg
mov
jge
add
scas
xchg
adc
cwtl
mov
jno
xor
adc
sbb
hlt
lcall
mov
das
jno
or
mov
test
mov
fdivrp
cmp
sub
movntq
out
mov
cltd
std
cmp
xchg
outsl
sbb
jg
jg
test
jnp
xlat
add
xchg
les
repz
jle
ljmp
gs
or
aaa
adc
cmp
cmp
lods
ss
les
incl
dec
scas
in
xchg
adc
jo
xchg
ljmp
lds
decl
jp
mov
jle
or
xchg
enter
adc
mov
outsb
sub
push
outsb
sarl
stos
outsl
adc
pop
and
xchg
fstl
insl
push
scas
decl
cs
mov
je
mov
scas
dec
pop
decl
xor
in
xlat
inc
dec
movsb
mov
sub
or
pop
add
call
pop
xchg
out
jle,pt
bound
pop
xlat
pop
in
push
xor
mov
sbb
repz
ljmp
test
out
inc
sbb
pop
inc
div
pop
cmc
cld
and
pop
xchg
adc
iret
cld
shlb
or
cmp
call
add
lods
push
jl
jb
push
pop
dec
insl
sub
jg
push
out
mov
sbb
les
dec
fisttps
mov
mov
cltd
shll
icebp
mov
pop
out
js
popf
repz
dec
lcall
ja
sub
push
xor
das
pop
ljmp
xchg
or
pop
cmp
fcomip
call
sbb
push
sbb
dec
push
gs
in
and
jb
cmp
add
jg
icebp
jg
lret
std
and
push
xor
insb
lods
inc
mov
mov
and
add
out
inc
stos
xchg
jle
imul
sbb
lods
xchg
sti
incl
mov
daa
push
insl
outsb
push
jl
dec
adcb
xchg
inc
mov
mov
dec
ljmp
clc
lcall
icebp
add
pop
insb
sub
pop
xchg
add
jmp
jmp
lds
push
add
jl
xor
hlt
sbb
cmp
jae
pop
fs
scas
adc
lcall
sub
add
cmpsl
clc
sarl
dec
pushf
in
mov
ljmp
push
repz
mov
gs
jns
cmpsl
in
sub
cli
call
ljmp
stos
cmpsl
lret
cmp
dec
fs
fnstenv
push
jmp
push
cli
mov
jge
lret
jp
stos
sbb
mov
call
pushw
pop
aaa
push
std
sub
push
imul
outsb
jg
xchg
cmc
cmp
mov
cli
add
cld
add
mov
std
xorl
cwtl
aaa
add
dec
int3
mov
add
dec
pop
aas
jmp
inc
test
push
push
ds
pop
cld
nop
scas
sar
ljmp
ja
jmp
loop
daa
ja
hlt
adcl
pop
xchg
fs
mov
aad
mov
cld
adc
les
popf
jl
pop
movsb
inc
or
inc
add
scas
mov
pop
cmpw
cmc
inc
insb
sbb
xor
jo
xchg
jmp
mov
jb
into
cmp
or
mov
in
xlat
stos
scas
sbb
cmp
push
std
dec
frndint
ja
and
cld
insb
or
adc
pop
and
inc
adc
fcomip
jge
lahf
sbb
out
mov
push
push
hlt
out
xor
cli
nop
cmp
sub
call
je
ja
adc
push
shl
jo
add
lods
mov
loopne
mov
roll
push
stos
inc
cmpsb
sbb
xor
xlat
add
cmp
ret
addl
insb
incl
mov
xchg
psadbw
jg
adc
fstl
cmp
inc
pop
repz
sub
inc
adc
cli
hlt
scas
xor
mov
adc
xchg
jo
lock
aaa
pop
push
cmp
cmp
or
std
mulb
call
je
sarb
ret
ljmp
add
ffree
push
sub
jb
pusha
jo
mov
fdivs
xor
loop
jns
or
cmp
xchg
cmp
mov
test
scas
das
ljmp
inc
jg
jmp
out
jmp
xchg
xchg
loop
mov
out
fwait
outsb
clc
call
outsb
call
mov
cmpb
and
rol
sti
jno
sub
pop
mul
mov
fcomip
lcall
repz
mov
jp
and
jbe
or
push
mov
lcall
sub
cs
xor
into
xor
add
fdivrl
push
pop
mov
decl
lcall
push
loope
notl
sbb
inc
stos
cmp
call
push
icebp
lea
hlt
jne
mov
in
outsl
fmuls
inc
cld
jno
mov
jnp
test
ja
scas
push
push
daa
jecxz
jns
insl
mov
pop
daa
adc
pushl
je
fcmovu
cmp
test
jge
pop
lds
ljmp
out
lods
dec
pop
fs
mov
and
fistps
movsb
cld
out
xor
jnp
jmp
dec
xor
repz
ret
mov
push
jns
xchg
and
jne
cmpsb
clc
es
ss
pushl
ja
add
xchg
or
fstl
loope
sbb
cmpsb
out
jecxz
jae
fcomip
incl
jmp
idivl
ret
lods
daa
mov
jge
das
clc
mov
mov
ljmp
stos
mov
ljmp
sarb
xchg
sarb
sbb
jge
enter
push
xor
jle
outsl
sbb
push
xchg
mov
ret
jecxz
xor
xor
decl
es
xor
xlat
outsl
xor
push
xor
xor
jmp
inc
pop
pusha
pushl
jae
push
cli
ret
divl
stos
adc
mov
jno
and
cmp
incl
cmp
xchg
mov
out
fidivl
lock
mov
in
xor
mov
xor
mov
inc
add
mov
stos
jbe
adc
adc
mov
add
scas
jnp
push
add
scas
ss
push
scas
cmp
in
ss
hlt
push
cld
lods
out
rolb
xchg
mov
stc
loop
jno
incl
inc
hlt
push
sti
fdivs
jg
mov
or
or
les
subl
jmp
jns
fstl
cmpsb
inc
mov
cmp
pop
in
pop
clc
je
fsub
fsubl
insb
jmp
sbbb
add
push
scas
xor
xchg
add
ja
push
pop
loopne
mov
jmp
adc
jns
xchg
adc
or
test
mov
cmpsb
pop
pop
pop
mov
hlt
rorb
lret
fdiv
repz
insl
dec
jmp
clc
ljmp
mov
mov
lods
pop
push
int3
cmp
add
std
mov
jmp
xlat
push
call
gs
cltd
jecxz
cmp
jmp
jge
mov
decl
mov
cmp
shlb
adc
js
imul
stos
cmpsl
mov
scas
clc
ljmp
scas
cli
jg
out
add
inc
xorb
xchg
lods
mov
outsb
ljmp
movsl
and
repz
mov
test
jg
mov
in
push
daa
or
loop
sbb
aam
test
lods
sub
roll
pop
and
fcomip
in
daa
jg
sbb
xchg
lods
cmc
ret
roll
test
fldcw
cmp
pushl
shl
push
sbb
jbe
xchg
aaa
fisubrs
stos
jno
pop
ljmp
lahf
ljmp
dec
pop
inc
and
mov
repz
out
cmp
daa
xor
lock
cld
push
test
mov
test
js
jbe
xor
pushl
jmp
cmp
aaa
out
icebp
jo
mov
sti
mov
sbb
lods
and
ljmp
cmpsl
ljmp
pop
stos
dec
push
je
xor
xchg
sub
xor
sbb
das
inc
out
out
ja
movsb
push
adc
cmp
jns
pop
in
sbb
sub
jg
roll
jl
add
mov
jmp
adc
in
stc
insb
and
icebp
aaa
add
fwait
pop
mov
jl
fstpl
jg
adc
call
lods
jp
push
jge
xchg
sub
mov
xor
mov
jle
call
pop
and
inc
scas
and
fsubs
lods
sub
xchg
mov
pushf
aaa
fnsave
cmp
and
flds
inc
or
mov
xor
hlt
stos
mov
ret
and
mov
idivl
cmp
lret
movsl
ljmp
scas
cmc
cltd
xor
xchg
movsb
cltd
push
sub
xor
into
dec
subb
mov
jmp
push
daa
sbb
insb
iret
aam
jle
cltd
sbb
dec
in
mov
ljmp
mov
push
lods
add
inc
out
push
xor
sarb
add
mov
jg
movsl
mov
cs
sbb
daa
and
sbb
lcall
ficoms
or
fwait
push
push
int
pop
pop
xor
cs
shll
decl
mov
lret
fwait
and
and
cs
movsl
out
rcrl
mov
cmp
add
jg
mov
xor
test
sub
hlt
fidivs
mov
not
call
push
stos
xor
das
and
cs
xor
fdivr
jne
adc
aaa
sbb
jg
scas
push
jbe
test
lret
push
fldenv
aad
dec
sar
pop
mov
lock
loop
jle
inc
out
lock
jmp
push
daa
push
xchg
sbb
ljmp
push
jg
jne
ficomps
call
cmp
or
jae
and
xchg
push
in
mov
mov
cmpsl
and
call
fs
inc
xchg
push
cmpsl
fisttpll
and
jg
push
cmp
push
cmpsl
xorb
mov
loop
sub
cmc
or
clc
rcr
call
mov
jmp
mov
fisubl
mov
imulb
add
ret
adc
decl
decl
push
loop
xchg
sub
jnp
mov
push
and
mov
imul
xlat
movsb
xor
add
gs
mov
xor
cld
xor
scas
push
sti
ss
out
xchg
push
dec
xchg
cs
push
push
ds
pusha
pop
test
cmpsb
test
sub
incl
outsb
pop
shr
cmpsl
or
pop
imul
pop
add
mov
xor
inc
outsb
frstor
jmp
gs
xor
or
cmp
hlt
jno
subl
mov
sti
mov
cmp
mov
aad
lds
or
inc
add
ljmp
js
iret
cltd
cmp
sub
test
cmpsl
xor
cmp
dec
push
icebp
dec
pushl
push
adc
popf
cmp
push
push
add
inc
jne
je
push
mov
stos
or
inc
imul
and
inc
adc
inc
jae
sbb
ljmp
pop
or
pop
gs
repnz
and
shll
pop
leave
jno
incl
xor
adc
add
cmpl
add
jp
mov
lcall
add
sbb
jg
out
dec
pop
mov
in
add
ljmp
je
ret
in
xor
inc
fisubrl
mov
xchg
mov
je
test
jp
jmp
jle
mov
push
std
inc
aad
inc
sub
nop
arpl
pop
mov
cmp
decl
jl
lret
cmpsl
mov
cmp
loope
repnz
in
xor
aaa
cld
mov
add
je
and
lret
xchg
xor
fistl
lcall
sub
and
addr16
dec
cli
lcall
lret
or
push
jg
add
hlt
ja
call
out
repz
mov
addr16
mov
aas
addr16
lock
jae
in
fstps
xor
adc
xorl
xor
cmp
add
mov
xchg
mov
incl
jbe
out
lods
ds
xor
mulb
pop
les
ret
repnz
pushl
rorl
int3
cwtl
jecxz
ljmp
and
fdiv
xor
pushl
js
jne,pt
out
lret
clc
mov
scas
enter
int
fdiv
cmp
sar
jg
icebp
lcall
scas
lods
je
dec
scas
leave
and
dec
adc
xor
push
scas
loope
scas
sahf
inc
cmp
outsb
sub
cmpsb
push
mov
test
jle
cmp
or
ret
test
push
xchg
enter
mov
cmp
xor
xchg
out
fidivs
mov
push
push
and
mov
inc
add
sub
sbb
outsl
and
loop
jae
testb
pushf
and
dec
repnz
repz
sub
ss
mov
mov
das
movsb
das
es
jb
rol
push
ficoms
xor
out
push
inc
inc
jmp
ds
add
inc
das
das
testl
cmpsl
popf
xor
loope
dec
push
popf
mov
fwait
cmp
incb
mov
dec
inc
js
mov
insb
push
test
or
mov
out
xor
mov
shll
mov
loop
clc
ljmp
movsb
test
xlat
xor
std
ret
sub
mov
mov
cwtl
jb
xchg
inc
das
mov
stos
inc
pushl
xchg
mov
push
xor
xchg
sub
mov
jnp
imul
xor
ljmp
es
push
addr16
jp
adc
rclb
ljmp
pop
push
xor
push
testb
cmc
adc
mov
dec
fcomi
push
ret
mov
cmpsb
cmpsb
insl
out
dec
dec
push
jae
js
sbb
mov
shlb
xor
mov
shlb
cmp
ss
dec
test
xor
icebp
and
icebp
lods
cltd
pushf
movsl
gs
pop
imul
outsb
out
jecxz
pushl
mov
mov
ljmp
pop
idivb
mov
enter
fimull
cmpsb
xchg
jle
in
push
cmc
lods
dec
adc
out
xor
daa
repz
mov
scas
sbb
push
in
movsb
ret
mov
lods
jo
ljmp
popf
xor
pop
inc
ret
mov
pop
mov
xchg
dec
add
ljmp
dec
sbb
add
inc
cmpsl
in
inc
cld
jecxz
mov
das
dec
dec
addr16
fwait
or
insb
shl
cmp
call
outsb
jg
sar
incl
jp
jne
outsl
xor
push
cmp
stos
sbb
in
addr16
sbb
pop
cld
pushl
mov
sbb
pop
icebp
fwait
imul
lcall
mov
mov
scas
das
inc
jnp
mov
mov
lcall
test
sbb
fisubrl
pop
loop
xor
xor
test
scas
fildl
pushf
cli
popf
cld
in
mov
sbb
out
cmc
jae
push
mov
jmp
adc
scas
inc
pop
xchg
push
flds
push
movsl
ds
popl
std
ljmp
xchg
lock
jnp
mov
fstpl
jns
push
xor
sbb
clc
stos
insb
adcb
mov
orl
inc
rol
scas
dec
push
scas
lock
push
cmp
filds
pop
scas
sbb
xchg
mov
popa
ficompl
cmp
pushl
cld
incl
push
in
jmp
jno
xchg
sub
sbb
or
pop
cli
pop
cmc
daa
cmpsb
imul
fs
sbb
sub
ret
fstpl
stos
pop
jo
adc
repnz
add
xchg
shrb
bound
cmp
add
and
outsl
lcall
sub
data16
dec
pop
mov
fistpll
sbb
lds
out
cli
insb
mov
je
sbb
ss
pushl
push
in
test
ja,pn
scas
xlat
mov
lods
xor
mov
out
sub
sbb
lcall
xchg
shrb
jmp
ficoms
scas
cmpsb
out
mov
outsl
daa
imul
test
loopne
fiaddl
xchg
sbb
mov
lods
sbb
sahf
fcoms
inc
sahf
aaa
cld
mov
inc
mov
stos
xor
andb
sbb
ljmp
sbb
in
in
push
adc
adc
inc
aam
addr16
cmc
in
insl
es
pop
jns
sbb
cmc
lcall
mov
bound
mov
lock
sub
sti
fwait
push
inc
out
jle
stos
test
fdivrl
les
outsl
sbb
repnz
xchg
call
mov
scas
or
and
jp
lods
fwait
jne
stos
xchg
jg
mov
mov
in
sbb
jae
push
pushf
cmp
scas
push
out
sbb
setae
adc
call
aam
or
mov
mov
adc
cwtl
mov
in
std
out
sbb
lcall
fstps
into
cltd
and
cltd
jecxz
cmp
push
addb
in
lods
movsl
lds
xchg
pop
imul
sti
decl
sub
mov
cmpsl
roll
add
lds
add
movntps
std
call
scas
sbb
or
mov
dec
xchg
sub
daa
sub
mov
cmpsl
andb
sahf
scas
incw
mov
lret
xchg
jo
xor
sub
mov
call
repnz
incb
fs
imull
dec
xor
mov
pop
jb
ds
dec
inc
xchg
mov
jge
jg
incl
xchg
rcrw
and
ds
loope
in
jge
scas
cli
outsl
jg
gs
ja
es
sub
sbbl
out
mov
mov
push
mov
in
out
jmp
inc
jae
add
and
std
pop
icebp
call
test
jl
insl
and
inc
hlt
cmpsb
jge
stos
popa
dec
sub
subl
jg
mov
lods
xorb
jle
pop
push
cmpsb
mov
xlat
insl
add
jae
pop
add
mov
add
mov
in
adc
cs
outsl
push
idiv
decl
jno
aaa
pop
into
gs
push
jo
inc
in
jle
xor
xlat
jnp
fimull
decl
outsb
insb
push
sbb
xor
sbb
cld
out
fnstsw
ret
sbb
mov
mov
jno
cmpl
cs
ds
jl
call
xor
pop
cmp
fdivl
outsb
gs
xchg
mov
addr16
adc
pushl
fstl
ret
sbb
fiaddl
push
fnsave
lds
xchg
test
sub
push
aaa
adc
add
addl
fwait
lret
add
fimull
fldcw
jnp
jg
cmpsl
sahf
jl
fldpi
jbe
stc
cmp
out
cvtdq2ps
mov
sub
or
cld
pushl
out
repz
faddp
mov
mov
push
rorb
push
loopne
stc
mov
decl
push
xor
mov
movsl
in
mov
and
std
lcall
imul
adc
fists
add
xor
pushf
mov
mov
dec
dec
repz
ljmp
and
add
lods
xchg
iret
fidivrl
dec
mov
pop
sub
pop
inc
pop
xchg
xchg
xchg
insl
xor
ret
cltd
cmp
cld
in
push
jae
dec
fidivrs
mov
jmp
add
jmp
mov
hlt
mov
add
inc
insl
daa
push
push
jne
lock
incl
icebp
mov
lock
cmp
repnz
jl
popa
push
push
stos
cmc
int
insb
jae
call
rcl
lcall
adc
add
sahf
sbbb
fstpt
cltd
add
test
loope
icebp
rcrl
pop
decb
fsubrs
push
je
popa
loopne
inc
xchg
jae
cmp
mov
out
jecxz
push
call
jae
mov
mov
icebp
pushl
cld
dec
cmp
pusha
mov
ds
mov
xor
xchg
sub
fimuls
sub
jne
sbb
mov
lahf
jno
pop
jle
sbbb
and
mulb
ljmp
and
imull
stc
test
pop
nop
xorl
ljmp
push
jl
insb
icebp
cmp
notl
xor
mov
or
lcall
jns
shll
sbb
xchg
push
xchg
lcall
stc
and
out
fsts
sub
push
fdivl
mov
stos
mov
imul
fdivrl
out
or
add
jmp
leave
mull
fildll
sbb
insl
out
sbb
dec
dec
imul
mov
inc
and
and
sahf
ljmp
pop
cmc
lods
outsl
jae
or
out
shl
mov
xchg
push
gs
xchg
pop
dec
push
stos
lcall
fisubs
inc
stos
movsl
sarb
repnz
call
movsb
mov
pushl
cld
xor
repnz
push
sub
shll
and
mov
in
push
mov
xchg
cmp
inc
or
adc
xchg
and
pushl
subb
jmp
hlt
cmpb
sbb
in
adc
loop
int3
and
and
push
js
xchg
lcall
adcl
cmpsl
pop
or
outsb
and
call
das
stos
dec
or
pushl
stc
das
rcr
sub
cmp
test
fidivrs
push
pushf
ss
mov
shlb
lods
test
rcr
js
ljmp
or
xchg
mov
std
bound
jne
cmovo
out
or
out
stos
sub
popl
mov
mov
ljmp
xchg
repz
call
mov
cmc
xchg
ret
and
pusha
lcall
inc
out
mull
fnstenv
jb
fucomip
or
xchg
ljmp
cs
cld
imul
sub
mov
std
decl
mov
sbb
mov
sahf
xchg
lcall
pushl
cmp
add
dec
or
adc
fbld
test
lcall
icebp
push
hlt
xor
js
sub
lods
addr16
cmp
inc
xor
push
in
mov
mov
jmp
lock
shll
daa
add
popf
inc
je
push
adc
or
jno
loop
ljmp
add
daa
xchg
cmpsl
loop
push
fisubrs
fstpt
pop
pop
popa
test
decl
imul
imul
lcall
call
lock
decl
sbb
xor
cwtl
mov
fcmovb
fxch
adcl
fistl
mov
push
pop
fsubs
lea
test
and
lock
icebp
fsubr
jnp
push
into
lods
and
fs
cmpsb
pop
inc
xchg
add
mov
push
mov
lret
mov
mov
and
arpl
inc
xor
push
ret
push
out
push
lea
dec
pop
in
lcall
sbb
fcoml
or
movaps
fsubl
mul
xor
add
dec
mov
jle
icebp
outsb
push
mov
xchg
push
mov
out
out
mov
push
call
pop
stos
fcmovnb
mov
mov
jno
shlb
sti
adc
xor
loopne
incl
loop
xor
cmp
cmpb
push
aam
jg
push
push
pop
stc
shl
jae
jbe
or
ljmp
hlt
cld
loop
sbb
fsubs
push
inc
and
and
or
push
call
inc
fistps
mov
aad
push
push
adc
nop
lods
lcall
mov
call
loop
cmp
xor
out
or
xchg
addr16
icebp
jae
aam
and
int
inc
lcall
aaa
out
popa
scas
movsl
mov
lock
xorl
pop
lcall
loopne
push
sub
xor
mov
out
mov
ljmp
shl
mov
jecxz
inc
pop
fistl
clc
jg
xor
push
out
add
arpl
nop
or
shr
dec
push
pop
mov
mov
inc
arpl
ljmp
inc
mov
or
aas
std
cli
mov
ret
addl
jge
pop
dec
cld
dec
mov
xor
lahf
mov
fcmovne
mov
xlat
repnz
dec
andl
sub
jmp
movsb
mov
cmp
cld
push
fucomp
or
pushl
add
adc
out
std
out
scas
dec
rcr
outsb
cmp
es
scas
mov
not
mov
lock
cwtl
push
fsubs
xchg
pop
out
ja
mov
cmpsb
adc
out
clc
pop
gs
fisttpl
lds
in
push
fists
fstps
cmpb
cli
incl
fwait
ljmp
js
mov
imul
imul
push
fdivr
adc
add
mov
gs
jmp
scas
and
ljmp
sbb
outsl
daa
jae
sti
stc
xlat
push
ds
dec
inc
add
cmc
pop
out
inc
cmp
ljmp
clc
lcall
arpl
dec
int
jge
aaa
lea
or
mov
xchg
mov
mov
scas
and
dec
insb
mov
cltd
bound
aad
scas
mov
jbe
push
sti
stos
and
in
loop
add
call
loope
ljmp
jb
cmpsl
pop
rolb
in
push
jne
fists
insb
xor
es
or
in
in
push
stos
jl
out
pop
adc
sub
imul
data16
mov
mov
and
outsl
repnz
push
jb
mov
shl
std
stos
pushl
inc
push
out
pop
mov
sbb
sub
je
decl
mov
push
push
jl
mov
sbb
xchg
scas
jg
jnp
test
ljmp
adc
cli
sub
stc
pop
jb
ljmp
out
scas
inc
pop
dec
inc
and
and
and
leave
dec
mov
fisubl
inc
adc
jb
decl
jmp
mov
insl
push
cwtl
aas
adc
push
repz
inc
pop
outsl
ljmp
movsb
jb
fcompl
dec
lahf
leave
pop
lret
push
ret
jo
or
lds
dec
sbb
mov
std
jmp
insb
out
les
aas
loop
mov
xor
pop
mov
movl
inc
cmpb
es
out
lods
cmc
hlt
jae
pop
lods
gs
popa
ret
incl
sbb
pop
insb
push
jmp
jp
sub
mov
mov
aam
or
arpl
mov
pop
add
push
stc
scas
dec
ret
and
in
in
adc
push
sahf
push
jns
mov
lahf
ficoms
jmp
cmp
call
mov
stos
jb
pop
shl
mov
mov
in
addr16
in
clc
push
jo
mov
sahf
enter
adc
push
pop
mov
inc
sub
jle
fistpl
cmp
jecxz
xor
inc
clc
jg
incl
adc
pop
out
fisubs
das
fs
push
popf
dec
or
ljmp
and
dec
add
jno
fs
pop
sub
ljmp
aam
inc
inc
pop
sahf
adc
and
xchg
lods
shll
mov
out
mov
push
test
push
scas
test
inc
cmc
or
jo
fs
inc
jmp
rorl
inc
fdivl
sbb
sbb
dec
stc
dec
cwtl
jecxz
xchg
insl
cltd
loop
mov
mov
pop
lds
xchg
cli
inc
jmp
xchg
jle
sahf
pop
jbe
mov
mov
int
push
push
lea
push
mov
jmp
push
ljmp
dec
cld
stos
inc
jg
aad
inc
push
addr16
call
jg
or
mov
cmc
ds
jg
les
out
cmpsb
shll
bound
daa
jmp
popf
mov
in
cwtl
arpl
push
dec
aas
arpl
jg
mov
loop
push
inc
sbb
outsl
cmp
pusha
lret
daa
jecxz
dec
lret
cmpsl
xchg
mov
push
jno
pop
push
stos
int
cs
inc
ficoms
enter
xchg
push
out
jecxz
xor
jge
adc
popa
insl
out
mull
xor
sahf
sbb
xor
mov
xor
pop
pop
mov
or
xlat
fisubs
stos
lods
les
or
push
cmpsb
xchg
insl
stos
scas
jecxz
bound
pop
sahf
or
popa
inc
clc
ljmp
jge
and
ret
sub
cmp
jge
jmp
xchg
mov
push
jmp
push
vmovq
sbb
push
pop
jle
cmp
mov
push
call
scas
cli
sbbb
lahf
ss
loopne
mov
shl
jecxz
in
ss
popa
push
ljmp
mov
mov
dec
push
pop
push
sar
fstps
push
xor
lods
xchg
test
push
and
xlat
fbstp
call
dec
in
aad
je
xor
daa
bound
dec
sbb
push
mov
fistl
imul
mov
push
out
ds
mov
popa
mov
loop
nop
test
xlat
lahf
roll
or
jg
inc
sub
out
pusha
mov
popf
lds
xor
iret
mov
pushl
lods
adc
mov
scas
cmp
and
mov
adc
jp
pop
bound
xchg
lahf
and
fisubl
subl
nop
adc
push
pop
push
push
sub
mov
sbb
call
pop
or
adc
xchg
jnp
push
out
loop
fstl
sahf
mov
aam
jg
jmp
shlb
pop
ljmp
jmp
cltd
popa
push
int3
cld
dec
pop
sub
jg
cmpsb
push
cmp
loope
mov
in
aas
test
les
xchg
inc
shlb
mov
sbb
push
and
outsl
sahf
pop
es
negb
mov
or
into
int3
sub
and
out
scas
xchg
pop
stc
movups
mov
imul
xchg
or
out
or
mov
cltd
xchg
notb
ficomps
incl
add
sahf
decl
mov
pop
adc
push
shrb
pop
shlb
sbb
fadds
xor
pop
movb
jge
mov
loopne
sbb
clc
jg
mov
add
dec
cmpsl
mov
adc
sbb
lds
adc
cmp
fsts
mov
pop
les
lock
adc
ja
pop
ds
mov
incl
pop
ljmp
outsl
sbb
lahf
sub
arpl
fstl
sub
into
push
pop
popa
adc
ds
aas
es
or
dec
cmpsb
dec
fistps
pop
les
sub
call
xchg
pop
fdivp
inc
xchg
jns
es
push
pop
test
mov
inc
jbe
dec
in
mov
aad
loopne
push
ljmp
incl
or
fildl
xchg
pop
mov
ficomps
gs
inc
jp
sbb
out
dec
lcall
pop
mov
mov
test
out
test
ret
pop
cmp
mov
cmpl
lret
fidivl
dec
mov
lcall
sub
inc
leave
pop
mov
push
adc
mov
imul
dec
mov
pop
sub
or
leave
mov
outsl
ror
dec
dec
or
pop
loopne
incl
dec
push
jne
sbb
push
lea
int3
in
sbb
andb
ljmp
adc
or
sbb
mov
fsubrl
rcl
add
jne
mov
cmp
jge
andl
sbb
fnsave
push
out
popa
scas
sub
daa
jp
mov
scas
add
lcall
pop
add
fldcw
pop
scas
fisubrs
mov
shl
fwait
xchg
and
pushl
push
pop
sarl
sub
push
out
xchg
mov
ljmp
inc
scas
clc
xchg
jp
pop
jb
nop
mov
inc
push
mov
cmp
sarb
ret
xor
fidivrs
imul
mov
mov
mov
aam
decl
or
cld
inc
shr
sti
stos
inc
sti
cmp
cmp
cs
xchg
test
sbb
movsl
push
push
gs
lret
mov
lods
jmp
cmp
int3
sar
in
into
fistl
shlb
or
push
or
jno
push
int
adc
rcrl
mov
ret
imulb
pop
ret
jmp
mov
mov
ss
addr16
dec
mov
fldt
push
stos
test
fisubrs
cwtl
sub
ljmp
out
das
push
mov
pop
jb
jmp
xor
sbb
mov
pop
push
xchg
call
insl
add
lods
mov
inc
sub
push
jg
mov
sarb
jg
mov
addr16
adc
sub
rclb
incl
xor
popf
push
dec
scas
cmpsl
fmul
push
es
xchg
lahf
sbb
fldenv
dec
js
pop
inc
mov
in
movb
test
int
lret
test
insl
sbb
scas
xchg
daa
lahf
inc
ljmp
popf
sbb
push
aaa
ss
jl
sbb
mov
add
push
xchg
into
pushl
push
repz
cmp
imul
pop
push
sub
cmp
sub
jns
jnp
aaa
movsb
fcomip
decl
fisttpl
xor
inc
or
jmp
mov
push
sbb
mov
adc
inc
pop
fld
loopne
outsl
sarb
dec
clc
inc
out
aam
enter
popf
lcall
dec
nop
vandnps
movsl
lods
cmpsl
incl
pop
mov
orb
inc
ds
out
lcall
ljmp
cli
inc
mov
ljmp
pop
cmpl
in
decl
loopne
xor
inc
lods
addr16
fbld
inc
outsl
xlat
cmp
cmp
pushl
scas
repnz
in
push
insb
mov
xchg
sbb
xchg
sbb
sub
mov
decl
js
repz
xchg
inc
dec
mov
adc
lahf
ljmp
fs
jo
idivb
cwtl
outsl
pop
lcall
loop
leave
xor
ja
incl
scas
std
outsl
xchg
subl
xor
pop
sub
or
cmpsb
sub
jmp
sti
push
xchg
je
sbb
jne
mov
js
fwait
rcll
pop
sbb
xor
sti
cmp
js
sbb
repz
arpl
std
call
pop
cmp
mov
test
nop
jo
pop
mov
outsb
andl
xor
cmp
pop
call
cld
les
fdivrp
dec
int3
mov
rcll
inc
cmpsb
pop
inc
sub
mov
cmc
jp
cmp
lcall
out
fdivl
or
cltd
sub
cmpsl
fidivl
mov
addb
pop
imul
loopne
pop
xor
dec
sub
scas
pop
pop
insb
cwtl
fwait
mov
sbb
ss
sbb
jmp
jmp
call
xchg
jmp
xchg
lcall
popw
in
outsl
pop
clc
cs
pushl
sar
test
test
mov
pushl
jno
jmp
outsb
adc
xor
ret
mov
add
aad
xor
decl
sbb
mov
sub
xor
ret
cli
pop
push
xchg
add
xor
rclb
inc
xor
add
sub
sub
mov
pushl
outsl
sbb
cmp
sub
repz
sahf
clc
jg
out
pop
mov
mov
cltd
test
shll
fs
incl
repnz
cli
std
push
jbe
int3
ljmp
and
aam
add
mov
pop
test
cli
jo
pushf
sti
inc
cltd
jg
lcall
and
jg
jg
lea
lock
test
loop
xor
fdivs
pusha
ds
ljmp
or
add
and
sahf
pop
mov
jle
imulb
sbb
lahf
sbb
icebp
aas
inc
lods
outsb
pop
shll
pop
call
xchg
mov
pop
cmp
jg
decl
out
jno
jo
shlb
adc
mov
aas
pop
in
mov
mov
lahf
sub
hlt
das
xor
sbb
fadd
cld
adc
bound
call
mov
xchg
pop
lods
cmp
out
nop
jl
push
dec
jo
daa
xor
mov
pop
cltd
pop
gs
incl
jno
aaa
pop
mov
push
and
cwtl
das
mov
mov
xor
xchg
push
lcall
or
fistpl
clc
jo
sysexit
cmp
lea
aaa
das
jo
mov
adc
sbb
or
push
lcall
push
out
daa
cltd
add
std
pop
test
lahf
pop
mov
jns
sbb
jge
inc
xor
sbb
and
xchg
repz
and
xchg
pop
pop
adc
aam
push
fildll
mov
mov
lcall
and
outsl
pop
fs
or
pop
push
xor
rclb
dec
xor
cld
pushl
decl
mov
push
loope
and
add
mov
push
mov
cwtl
jg
bound
sbb
sub
xchg
push
jbe
push
das
mov
rolb
das
pop
mov
int3
mov
xor
nop
adc
pop
loopne
xor
lea
call
mov
scas
mov
mov
loope
lds
sbb
xchg
enter
fdivs
cmpsb
addr16
test
adc
shrb
out
cld
out
mov
or
push
fstps
fnstenv
nop
xor
lret
xor
push
add
sub
fidivs
mov
pop
pop
dec
push
mov
mov
sub
push
jne
mov
popa
jge
jo
cwtl
mov
xlat
mov
inc
cmc
xchg
xor
shr
cli
mov
xchg
cmp
cmp
lea
gs
ljmp
scas
enter
aad
lods
mov
cmc
int3
xlat
clc
jg
xor
pop
jb
jo
mov
mov
in
mov
mov
cwtl
cmpsl
das
mov
sarb
pop
jno
mov
sahf
fiadds
xor
cmp
call
enter
int3
loope
jmp
lods
out
xor
loop
xchg
mov
mov
jmp
or
adc
lcall
push
adc
insb
and
out
sbb
mov
pop
fwait
adc
xchg
push
mov
inc
scas
subb
and
inc
hlt
sbb
out
jp
int3
scas
xor
lea
sub
test
xor
push
ljmp
mov
mov
idiv
xorb
imul
sbb
loopne
mov
mov
jb
adc
push
hlt
adc
dec
adcb
cmpsl
out
ljmp
lds
jb
inc
sbb
cmp
mov
sti
and
push
lods
xor
outsl
adc
mov
add
mov
aam
in
dec
xchg
ljmp
lods
insl
in
out
push
das
jno
pop
jno
xchg
repnz
cmp
pop
cwtl
sbb
fcomip
jmp
push
movsl
in
push
lret
pop
jle
jno
das
mov
lret
les
sbb
xchg
push
aaa
jo
cmpsl
mov
jle
fisttpll
std
jp
insb
jmp
decl
lret
add
dec
xchg
push
pop
sub
mov
push
gs
lods
dec
out
mov
mov
popf
out
lahf
xlat
int3
sti
mov
popl
nop
call
mov
int
stos
rol
in
je
outsl
jmp
jbe
xchg
lret
push
and
pushl
push
mov
jg
push
std
cmc
lea
pop
das
decl
xor
xchg
lret
jmp
cmp
push
push
pop
rorb
std
lea
mov
sub
and
pop
clc
data16
xchg
push
add
sbb
cwtl
nop
mov
mov
int3
dec
movsb
outsl
data16
dec
inc
out
xchg
dec
push
int
scas
jmp
jl
jmp
hlt
dec
call
icebp
push
push
jno
or
daa
jnp
push
test
dec
aas
stos
push
call
pop
mov
pop
jbe
xchg
call
lea
es
je
out
fiaddl
incl
mov
xor
lods
jne
nop
mov
and
push
mov
call
pcmpeqd
adc
jge
call
in
mov
sbb
jp
pop
inc
mov
lds
push
ljmp
movsb
fiadds
jg
call
mov
out
dec
jl
inc
lahf
ljmp
fdivp
mov
fidivl
pushl
decl
daa
shl
lahf
adc
cli
ds
inc
shl
outsl
cmp
jmp
call
pop
into
adc
js
xor
fildl
call
in
rcll
xchg
ljmp
pop
push
mov
push
cmc
mov
pop
ljmp
aad
out
dec
sbb
subl
loope
pop
movsb
dec
push
add
in
push
shll
push
xchg
sub
out
add
popf
pop
add
pop
adc
push
push
call
push
sar
add
adc
in
lea
pusha
or
notl
inc
push
test
jle
push
xor
adc
mov
pop
sbb
jae
adc
rorl
push
mov
popa
dec
and
jmp
out
push
mov
push
out
pop
andps
mov
cmp
incb
or
push
pop
xchg
jle
mov
jecxz
pop
in
push
idiv
call
push
mov
fstpt
push
ficoml
xor
jecxz
enter
ljmp
xchg
stos
or
mov
movsb
notl
test
push
push
ljmp
push
out
daa
or
adc
addr16
cli
xor
lret
push
in
daa
insl
aaa
cld
xchg
popf
cs
in
add
dec
jo
movsb
loop
inc
mov
push
push
adc
incl
jmp
mov
xor
or
js
mov
imul
lea
jp
jae
cmp
fsubs
jmp
fwait
imul
test
inc
popf
les
sbb
jp
adc
jo
push
mov
je
in
fldt
aaa
stos
or
scas
fcomip
xor
insl
dec
push
scas
inc
adc
scas
sub
decl
sbb
ss
lods
stc
sub
xchg
xor
adc
push
mov
pop
pushl
cs
push
shlb
xor
mov
mov
xchg
push
aaa
inc
lahf
mov
sub
jl
push
cmpsl
cmpsl
dec
dec
xchg
xor
and
ljmp
push
lahf
aas
jge
adcb
xor
cs
xchg
nop
ss
leave
mov
push
xchg
sbb
dec
mov
push
pop
adc
clc
cmpsb
iret
cmp
iret
xor
sar
call
lcall
pop
mov
ja
ja
lods
data16
test
cmpsl
pop
fwait
mov
xchg
dec
cmp
pop
xchg
ficoms
cmc
fdivrl
add
cmp
mov
and
adc
push
mov
mov
dec
cmp
fisubrs
ljmp
notl
ds
dec
sub
movb
pop
mov
jnp
mov
adc
mov
jbe
dec
cmp
scas
cmp
shrl
iret
aam
notb
xchg
cmp
pop
imul
mov
insl
shrb
pop
jp
mov
jmp
rorl
mov
in
cmp
push
data16
shrb
push
dec
cmpsb
cmp
scas
aas
sarl
cmc
bound
cs
mov
cmp
mov
xchg
jl
daa
xor
lret
xor
jnp
shrb
push
adc
and
xor
aaa
dec
es
push
stos
mov
out
adc
outsl
js
push
push
mov
pop
xor
fwait
cmp
sbb
iret
ret
decl
adc
jl
cmp
popf
cmp
add
mov
cmp
stos
dec
scas
pop
scas
adc
lret
mov
stos
add
dec
xchg
icebp
or
dec
inc
lods
xor
lcall
pusha
mov
and
ret
adc
mov
push
mov
int3
jbe
adc
cmp
push
inc
jle
pop
push
mov
mov
stos
lods
int3
push
lea
std
push
xchg
push
ljmp
lcall
nop
pushf
hlt
je
add
add
pop
push
xor
xor
jge
das
sbb
decl
leave
sbb
fnstsw
or
cmp
int3
js
dec
rcll
jg
ja
lahf
cmp
pop
cmp
xor
hlt
xchg
mov
pop
in
decl
mov
jmp
or
fisubs
ljmp
outsl
rcrl
lcall
or
ja
add
xchg
das
jb
ret
ret
ret
lcall
adc
sub
mull
fucomp
cmpl
scas
push
adc
and
mov
mov
jo
cltd
ss
mov
int
aad
dec
jl
and
sbb
movb
subb
mov
es
sub
test
ret
cmpsl
cmp
cwtl
sub
sahf
inc
mov
cmp
ds
ljmp
ret
xchg
pop
push
mov
pop
imul
sub
sub
xchg
xorb
movsl
fcomip
or
arpl
xchg
aad
mov
inc
insl
movsl
xchg
xchg
pushf
andb
lcall
add
orb
icebp
test
mov
adc
pusha
pop
xchg
pop
or
scas
fsubl
into
sbb
jbe
xor
inc
or
dec
jae
jmp
negb
xor
mov
scas
jno
daa
jbe
add
rolb
jb
xor
stos
xor
repz
je
rorl
outsb
lcall
incl
sub
jno
pop
xlat
or
ss
and
mov
incl
arpl
inc
lahf
cmp
xchg
or
test
xor
and
pop
mov
and
aam
mov
hlt
outsl
fisubl
mov
push
ret
adcl
sbbb
xchg
or
out
fisttpl
jmp
ds
int
dec
dec
arpl
xlat
sbb
enter
inc
dec
sbb
mov
ljmp
stos
test
mov
dec
stos
push
mov
and
das
fs
call
cmp
inc
roll
push
ret
or
rolb
imulb
push
stos
pop
lods
or
dec
ljmp
add
lahf
xor
mov
call
xchg
jl
sub
loop
mov
mov
dec
xor
mov
dec
pop
sub
ljmp
lret
lret
jmp
mov
cs
js
setae
jmp
sub
lahf
jl
fwait
push
ljmp
xorl
cli
xchg
xchg
sbb
lahf
dec
jg
ds
fwait
mov
adc
and
lea
mov
pop
xchg
cmp
decl
out
sbb
push
or
adc
scas
jmp
leave
dec
repz
add
ljmp
push
cs
add
int3
fildll
or
pushf
out
add
incl
popw
push
cmp
andl
rcl
pop
or
inc
movsl
sahf
aas
scas
test
fisubrs
lea
je
scas
mov
mov
inc
pop
imul
xchg
subl
sbb
adc
mov
push
test
mov
daa
stos
iret
sub
leave
cmpsb
adc
subb
ljmp
lods
add
xchg
xchg
sahf
pop
faddp
jg
scas
mov
xchg
lods
les
mov
pushl
mov
xchg
sub
add
insb
mov
dec
mov
aaa
call
cs
or
imul
adc
sahf
xchg
aam
out
mov
pop
add
pushl
fldl
setg
adc
add
xchg
testb
pop
repnz
outsb
add
jnp
dec
and
aas
jne
bound
cmp
and
jle
cs
ljmp
add
jge
gs
add
pop
xchg
adc
push
mul
aam
leave
or
cs
add
call
faddl
sahf
inc
or
repz
decl
cmp
cmp
inc
fimuls
lea
inc
jle
jg
mov
bound
add
mov
or
imul
cld
scas
inc
dec
shrl
and
adc
or
jmp
mov
and
mov
push
std
pop
shlb
inc
cmp
into
ds
xchg
xchg
hlt
jne
fistps
jl
loope
call
push
pop
inc
push
or
mov
pushf
aaa
movl
xor
ljmp
sarb
mov
testl
push
mov
aas
fs
add
mov
adc
outsb
push
icebp
ss
mov
in
mov
ljmp
mov
xor
scas
in
mull
lds
lock
mov
inc
imul
mov
pop
loope
call
jne
dec
outsl
xchg
sub
aaa
lret
cmp
ljmp
xchg
push
lea
mov
jecxz
fisubrl
ror
inc
xchg
js
mov
call
call
ja
mov
add
btr
pop
daa
jge
sbb
out
xchg
es
add
xor
jbe
std
in
xlat
mov
scas
je
cwtl
addr16
mov
mov
std
call
mov
xchg
adc
jbe
mov
in
scas
fwait
inc
jae
push
incl
dec
xor
push
xchg
or
clc
test
repz
inc
in
inc
gs
inc
ljmp
incl
rcll
imul
or
negl
aaa
cmc
inc
mov
mov
cmp
ljmp
mov
decb
dec
push
sub
or
inc
cmp
fdivl
ljmp
dec
in
push
add
nop
push
add
pop
jae
xchg
repnz
fmull
cld
cmp
push
std
pop
jbe
testl
lret
negl
dec
or
jmp
imull
call
and
adc
mov
pop
jp
sbb
lea
outsb
out
inc
cld
xor
incl
cli
js
int
cltd
dec
push
cli
aas
aam
divps
cld
jmp
inc
gs
push
fwait
dec
incl
add
sub
add
mov
sar
xchg
cld
inc
cmp
shll
mov
scas
movb
lret
sbb
mov
data16
mov
pop
inc
std
sub
xchg
sbb
sbb
cld
icebp
cmpsl
push
pop
inc
xor
popf
push
lea
pop
push
leave
sti
inc
xchg
roll
aam
dec
outsb
pop
dec
xor
insl
adc
cld
fcom
repnz
in
add
pop
std
call
out
pop
xor
pop
mov
push
shll
jge
mov
ljmp
repz
test
mov
ror
cld
shl
cmp
addr16
call
das
mov
repz
cmp
loope
sbb
rorb
aaa
pushf
cmp
es
add
ljmp
sbb
sti
jg
mov
mov
mov
stc
icebp
xlat
inc
jle
arpl
jg
jmp
pop
adc
enter
mov
in
filds
loopne
scas
outsl
mov
decl
push
and
or
pop
iret
fwait
ds
jp
dec
mov
shlb
push
mov
decl
cli
aaa
xchg
mov
fwait
or
filds
sarb
cmpb
je
push
sahf
stos
mov
outsl
adc
fnsave
incl
adcl
cmc
jmp
add
add
dec
cmc
fmuls
ss
sti
or
cwtl
pop
adc
out
mov
or
ret
pushl
mov
subl
sub
jo
pop
shl
hlt
icebp
outsl
pushl
cltd
popf
or
insb
mov
stos
das
incl
push
jmp
jecxz
imul
add
mov
xchg
jl
cld
mov
mov
mulb
jbe
mov
push
cmc
repz
mov
inc
xchg
aas
fcomip
jmp
lret
test
inc
out
mov
fiadds
inc
repnz
sub
fwait
ljmp
add
mov
shl
cli
mov
push
mov
vpcmpgtw
jge
out
movsb
mov
jmp
dec
jg
xorb
movsb
jae
dec
jbe
or
cmp
mov
mov
imul
pop
mov
jle
or
xor
clc
ljmp
dec
and
ret
js
aaa
dec
mov
inc
mov
decl
pop
incb
cmc
push
rcr
sub
or
push
call
pushf
adc
jg
shll
jns
std
mov
testl
cs
loope
jmp
icebp
jb
out
enter
inc
fistpll
sti
shlb
repz
pop
mov
fbstp
lcall
cmc
cmpsb
out
icebp
xchg
sbb
pmuludq
mov
scas
pop
dec
hlt
push
test
fadds
pusha
cli
incl
inc
xchg
cmp
push
add
incl
insl
je
inc
pop
daa
jg
dec
cld
cmpsl
add
pop
cmc
mov
pop
aaa
cmp
mov
pop
mov
xchg
lahf
xchg
lock
sub
decl
push
fists
push
repnz
call
roll
outsl
mov
insl
cmp
or
enter
fldl
xchg
push
xchg
iret
xlat
jnp
lcall
les
mov
cmpsb
pop
dec
add
pushl
sub
mov
inc
and
push
ret
cli
mov
sbb
xchg
push
shrb
xlat
xor
in
movsl
pop
pop
call
pushf
lcall
icebp
pop
jns
gs
cmp
push
shlb
xor
pop
call
jmp
aam
loop
adc
add
shrb
push
cli
sti
xchg
roll
mov
jp
jno
or
data16
lock
inc
ss
ret
mov
dec
mov
push
pushl
ljmp
aad
roll
roll
and
xchg
and
ljmp
push
scas
inc
shrb
push
sub
mov
push
dec
into
sub
push
push
addr16
les
inc
pop
cmp
dec
ja
or
ret
xchg
pop
fsubrl
sahf
add
call
pop
mov
dec
std
addr16
daa
scas
stc
sub
filds
outsb
inc
sarb
lcall
jmp
cmp
and
lock
dec
arpl
adc
lcall
shl
es
jne
inc
cmp
add
ret
mov
inc
ljmp
jle
xor
pop
mov
mov
call
push
xor
push
push
sub
push
push
and
call
jnp
cmpsl
xor
xchg
fldl
test
jno
mov
incl
shll
sbb
call
sub
insl
sbb
out
lds
test
pushl
xor
inc
and
cmpsb
push
in
aad
cmp
inc
aam
mov
xchg
xchg
push
sbb
mov
lret
jmp
cltd
add
call
pop
jbe
movsl
jae
mov
cwtl
iret
fcomps
xor
movsl
jmp
add
mov
xchg
repz
outsl
pushw
imull
and
paddd
bnd
jg
lcall
outsl
insl
inc
xor
pop
xor
out
hlt
adc
jb
mov
sti
ja
push
adc
xor
out
jg
fincstp
loopnew
xor
push
scas
jle
filds
movsb
mov
stos
xor
inc
shlb
ret
int3
in
adcb
add
jp
adc
icebp
sbb
ds
or
adc
or
rolb
sti
xorb
push
add
imul
incl
ffreep
imul
in
aaa
adc
or
push
push
or
add
push
xor
test
xor
lds
stos
and
outsb
cmp
xor
pop
data16
mov
pushl
dec
add
mov
fisttps
imul
repnz
jg
sub
fcmove
scas
sub
jg
lock
adcl
lahf
add
pop
ljmp
pushl
pop
test
lret
bnd
mov
sarb
pop
in
dec
push
imul
es
ljmp
pushf
loope
addr16
adc
inc
push
push
dec
das
and
sbb
bound
lds
es
and
cmp
mov
push
in
pop
mov
das
sub
les
movsl
clc
scas
clc
jmp
out
cli
cli
cltd
andl
push
not
gs
mov
iret
xorb
movb
mov
movsb
xchg
pushl
aas
jae
push
xlat
inc
mov
test
mov
sub
idivb
jmp
loop
out
cmp
mov
pop
jae
aas
aad
jl
sub
andl
decl
les
movsb
sub
cmp
or
xsha256
cmpsb
aam
mov
xchg
je
sub
jmp
lret
test
cld
ja
or
outsb
dec
lahf
outsl
xchg
out
sub
incl
inc
mov
sub
jmp
sbb
testl
push
jg
inc
xor
roll
mov
incl
neg
push
ljmp
stos
sti
sahf
jecxz
loop
cmp
out
das
jp
push
pop
jle
or
sbb
jp
ja
call
stos
mov
xchg
jb
mov
dec
mov
mov
aam
add
mov
les
sub
lcall
push
xor
decl
lahf
in
in
in
sbb
mov
rclb
jg
out
rcrl
out
std
cltd
daa
inc
repnz
mov
push
jmp
sbb
mov
push
leave
into
sarl
in
xchg
mov
ret
inc
cmp
jl
jnp
cmp
in
fdivs
rolb
mov
pop
out
dec
sub
ficoml
or
or
jg
test
adc
cmp
adc
es
adc
rcrl
orb
idiv
ljmp
inc
sbb
add
int3
cld
lock
pop
sbb
lock
pop
jl
decl
addr16
jbe
sbbl
inc
add
dec
lahf
out
cmc
in
jecxz
sub
ret
inc
jmp
cltd
adc
out
std
in
cltd
jns
inc
xchg
into
aas
lcall
dec
int
fwait
pushl
fidivs
mov
mov
mov
jg
fisubl
jmp
leave
sbb
mov
in
and
insb
jp
xchg
std
fnstenv
xchg
and
ds
push
incl
das
ret
fadds
lcall
rcrl
xlat
xchg
xor
inc
inc
sub
in
or
xor
cmpsl
mov
lcall
decl
jp
orl
mov
popf
pop
clc
cld
into
jns
cld
inc
orb
inc
mov
sbb
xchg
incl
push
repz
rcrb
sar
call
stc
pop
adc
test
xor
xor
mov
push
inc
dec
dec
js
popf
adc
xorb
ds
push
fistl
mov
pop
inc
es
stos
in
ret
inc
lahf
int
or
call
sub
nop
fstpl
imul
and
scas
stc
shlb
clc
call
sub
stos
aam
xchg
inc
ds
xchg
inc
repz
jg
aad
mov
xchg
addl
incl
int
xchg
int
orb
xchg
cmp
cmp
push
lcall
mov
cmp
inc
repnz
push
std
jne
and
cmpsl
mov
out
pop
cmpl
dec
mov
fists
gs
test
into
loop,pt
jmp
loopne
icebp
scas
stos
adc
mov
ljmp
push
insb
xchg
pop
pop
in
aad
sbb
adc
xchg
dec
dec
lahf
sbbl
out
mov
cwtl
push
mov
xchg
cmc
add
sbb
sbb
dec
stos
push
mov
cmp
xchg
call
sbb
inc
ret
pop
repz
ja
sub
fcmovu
stos
call
ds
lock
push
mov
xchg
add
mov
xchg
xchg
mov
jb
aad
lcall
pop
mov
sub
jg
iret
lcall
test
pop
test
push
inc
inc
push
add
into
loopne
xchg
repnz
decl
fiadds
add
subb
out
imul
cmp
lcall
ljmp
push
and
nop
jb
dec
adc
xchg
shrb
stc
mov
outsl
cmp
cmp
ljmp
sub
and
adc
inc
mov
imul
pusha
cwtl
jle
dec
mov
in
call
out
outsl
and
push
call
negb
sbb
pop
push
push
push
jo
inc
mov
pushl
insb
mov
xchg
fisubs
jmp
bnd
jle
cmp
sarb
xor
or
xchg
cmp
ret
gs
sub
sarb
cmp
call
test
mov
add
mov
sahf
mov
or
pop
or
jl
fimuls
stos
inc
sbb
sti
ret
cli
call
mov
push
jle
add
fsubrl
xor
popf
cltd
add
mov
xchg
pop
imul
call
cs
xor
add
inc
lret
clc
ja
lock
jge
clc
aam
jg
mov
lods
mov
shr
push
jno
inc
lret
pop
jns
imul
jg
ss
incl
inc
cmp
cmc
aaa
mov
testl
shrl
decl
fidivs
cmp
testb
dec
mov
cmpsb
xchg
int
jb
xchg
cmc
cmp
mov
ljmp
or
lods
in
nop
adc
fwait
dec
xchg
movsbl
mov
inc
jns
sub
push
sub
mov
decl
cmpsb
jno
cli
mov
shr
mov
or
lcall
stos
xchg
in
inc
xor
inc
add
dec
std
mov
dec
mov
xlat
mov
xchg
jmp
mov
sbb
mov
mov
xchg
inc
adcl
out
bound
push
adcb
ljmp
test
leave
enter
jns
clc
das
sbb
mov
adc
add
mov
mov
lcall
nop
push
add
jbe
dec
fistpll
in
roll
push
xorb
clc
xchg
cmp
adc
xchg
icebp
dec
bound
in
in
lods
jbe
stos
clc
test
mov
inc
jbe
add
dec
inc
jne
dec
in
mov
into
push
call
lcall
pop
cli
mov
adc
or
outsl
mov
int3
cmp
mov
stos
xlat
das
mov
jle
sbb
cli
call
pop
fists
cmp
dec
xor
lahf
inc
iret
pop
aam
or
daa
scas
clc
incl
insb
andl
xchg
jns
pop
aam
or
inc
outsb
call
cld
dec
and
aaa
movsb
sub
insl
int
cmpb
lret
das
ja
or
pushl
cmp
lret
lods
nop
and
imulb
lret
int3
lcall
push
mov
lods
sub
push
imul
adc
pop
test
cmp
popa
mov
cld
call
jno
xchg
pop
add
hlt
mov
fmuls
inc
mov
sbb
hlt
cli
dec
lahf
cmp
daa
stos
mov
or
jb
sbb
sbb
clc
pushl
xor
or
cld
popf
add
or
xchg
ret
je
adc
imul
adc
addb
mov
mov
cmpsl
cmp
cmp
aas
xor
add
ljmp
inc
dec
faddp
loop
notb
mov
push
jnp
shlb
incl
xchg
jbe
xchg
xor
xchg
fadds
add
inc
decl
and
ljmp
or
aaa
jb
aam
in
xchg
ret
xchg
pop
outsb
ljmp
or
in
cmp
push
repz
int
xchg
mov
fildll
mulb
std
icebp
test
inc
mov
int3
cmp
ljmp
scas
test
sbb
jae
inc
inc
in
dec
scas
cmp
and
aaa
out
jl
dec
dec
pop
mov
adc
jge
mulb
fs
push
mov
mov
adc
scas
shll
iret
or
mov
jecxz
cmpsb
pop
add
push
xor
sbbl
bound
data16
out
pop
sti
or
xchg
cmp
lods
adc
mov
sub
push
inc
cmp
mov
rcrb
aaa
jno
in
mov
xlat
pop
call
xchg
filds
jle
dec
dec
aas
cmp
ja
clc
adcl
std
test
push
sub
cmpsb
test
xchg
ret
ljmp
shr
repz
jg
out
lods
jmp
mov
pushl
pushl
lret
push
js
mov
frstor
insb
xchg
mov
inc
cmp
push
jl
cmp
test
push
out
inc
xchg
sub
fdivr
jns
in
jmp
sub
test
andb
imul
sub
psubq
xorl
cli
mov
ss
jnp
xchg
mov
subb
out
xchg
mov
or
mov
pushl
ljmp
mov
jmp
ret
jo
ja
pop
out
lds
or
pop
cmp
jns
dec
outsb
mov
adc
push
shrb
mov
adc
js
pop
idivb
fimull
jns
or
cmp
dec
imul
aam
es
ret
cmp
pop
sbb
out
into
push
sbb
jg
mov
jg
mov
fwait
adcl
les
imul
sarb
jae
decl
lock
pop
stos
pop
inc
stos
push
idivl
xlat
testb
mov
push
cmp
and
xchg
dec
jnp
mov
and
fiadds
xchg
loop
into
imul
aas
jp
inc
add
cmp
cwtl
dec
xchg
mov
jnp
push
lahf
jne
scas
add
call
dec
mov
sbbl
jae
jmp
sahf
mov
jge
cli
ljmp
inc
movsl
test
test
rcrb
repnz
ds
xor
aaa
push
mov
ljmp
es
sahf
scas
cmp
outsl
idivl
mov
cmp
fwait
sbb
fisubrl
mov
in
andl
push
mov
in
dec
sub
pop
add
lcall
mov
outsb
xlat
mov
mov
shlb
in
fisubrs
js
int3
popl
sub
movsb
insb
dec
jns
in
sub
out
aaa
cld
fistpll
gs
test
incb
jns
jne
imul
daa
jg
ljmp
mov
jmp
in
clc
out
sub
fsubrl
ljmp
aad
mov
inc
repnz
in
inc
mov
mov
repz
xchg
scas
mov
gs
clc
in
inc
idivl
mov
mov
jg
or
ja
int
jns
fbld
out
imul
out
pushf
sbb
xor
cwtl
lret
xor
fcomp
dec
mov
or
ja
xor
push
and
incl
cld
andb
mov
mov
std
xchg
cmpb
inc
jnp
xor
cmp
pushl
fs
push
jbe
sbbl
adcb
pop
call
je
mov
das
jecxz
lahf
lods
mov
push
push
xor
mov
cmp
jne
mov
je
mov
mov
add
or
jne
insb
fldl
xor
out
out
sti
and
jbe
ljmp
jno
inc
imul
inc
jno
mov
fnstsw
cmpsl
inc
gs
mov
fs
mov
ss
pop
loop
xchg
ja
cmp
mov
cmc
loope
lahf
dec
jbe
decl
je
cmpsl
jecxz
aaa
cmpsl
jbe
sbb
cmp
sbb
mov
fstpl
ja
sub
pop
loope
jge
inc
sahf
sbb
inc
cmpsb
repz
pop
mov
cs
sub
fildll
mov
and
mov
jne
aaa
ljmp
std
pushl
hlt
sub
aas
or
fistl
jno
je
mov
out
mov
call
std
xor
mov
pop
inc
lods
dec
cmc
jne
xchg
lods
fs
mov
aaa
out
sti
pushl
sbb
stc
mov
fistps
je
mov
daa
js
test
cmc
stos
imul
pop
out
mov
divb
jg
pop
push
inc
imul
xchg
call
sbb
icebp
jno
ljmp
aam
cs
outsl
mov
scas
or
cmc
inc
mov
icebp
lock
jmp
out
lock
outsl
adc
inc
add
jl
stos
sub
jnp
mov
push
cmpsl
xor
jmp
les
scas
jbe
xor
inc
pop
lds
jae
pop
std
xchg
lcall
xrelease
pop
jle
mov
jbe
in
sbb
xchg
inc
and
pushl
ss
xorl
xchg
cmp
shl
sbb
bnd
push
jle
or
sub
jmp
pop
clc
jb
das
lret
in
ljmp
int3
andb
xchg
lahf
pop
call
imul
jo
mov
fs
cwtl
sub
cwtl
and
xor
push
inc
mov
sub
sub
nop
lcall
je
fsubl
mov
mov
into
xlat
je
jae
js
mov
ljmp
std
inc
jmp
gs
xlat
cmpsl
push
imul
out
call
ds
push
jge
out
mov
cmpsb
sahf
mov
or
mov
sub
call
mov
xchg
jno
fildll
pop
ds
insb
aad
mov
pusha
cmpsb
ss
jmp
fwait
xchg
fsubl
sbb
fmull
jno
arpl
xchg
xchg
pop
pop
data16
cli
jg
pushl
ss
xor
xchg
outsl
std
shrb
lock
ljmp
rcrb
dec
jecxz
xchg
int3
cmpsb
ret
jo
ds
add
inc
bound
lcall
ret
mov
jno
in
pop
scas
std
mov
cwtl
insb
push
lods
aaa
xchg
aas
test
call
out
sti
sub
int3
pushf
das
push
cmc
movsb
ss
sub
inc
test
loop
jmp
daa
and
jmp
sub
out
mov
in
dec
xlat
out
sarl
and
enter
lods
lods
fdivp
push
lcall
testb
popa
clc
jbe
or
jo
ret
cmp
or
pop
sub
incl
int
cmp
sub
xchg
inc
stc
sti
jo
sub
sub
sarl
pop
cmpsb
sub
ljmp
loop
adc
and
add
lods
push
mov
push
inc
xchg
pushl
adc
mov
jno
popf
xchg
jbe
in
paddsb
aad
ljmp
shlb
xchg
inc
or
adc
cmp
in
icebp
sub
inc
or
mov
fnsave
jp
mov
es
sahf
mov
mov
stc
clc
fnstsw
decl
aad
daa
sub
pop
cmp
test
and
sub
data16
out
out
test
jmp
insw
rcr
cmp
ret
std
lret
jbe
sbb
jg
or
mov
repnz
xlat
mov
stc
pop
push
push
xor
jl
lret
mov
aad
call
movsl
pop
stos
lods
cmp
movsb
add
pop
jl
dec
and
stos
clc
jecxz
es
dec
jmp
pop
or
js
insl
pop
dec
out
push
lcall
aam
dec
xchg
pop
sbb
mov
cmp
sbb
subb
cmp
inc
mov
inc
jmp
gs
std
sub
scas
incl
sub
xchg
cltd
or
jg
repz
fistps
sti
mov
ja
scas
mov
add
inc
pop
or
and
add
sbb
adc
push
sub
das
xlat
jp
xor
decl
mov
pop
sub
cltd
xchg
adc
push
mov
push
mov
in
jo
mov
scas
push
xchg
lds
cltd
and
aaa
scas
pop
iret
arpl
xchg
outsb
sub
xchg
mov
and
mov
sbb
out
sbb
ljmp
and
ljmp
in
insl
pop
cmp
or
jb
sub
mov
enter
aas
out
xor
mov
push
call
lock
lcall
adc
lea
imulb
ljmp
mov
ljmp
sar
cmp
repz
dec
dec
mov
xor
mov
mov
xchg
lods
sub
cmpb
pop
clc
add
stc
xor
imul
mov
std
ss
std
dec
xchg
lods
xor
test
scas
or
mov
pop
sbb
pushl
or
cmp
dec
addl
pop
lret
inc
and
fnsave
cmp
aaa
std
jp,pt
stos
add
or
or
in
cmp
push
xchg
adc
dec
xchg
jp
cmp
fisubrl
sbb
push
repnz
push
or
loope
cmp
ljmp
mov
in
jno
neg
xor
pop
jmp
push
jge
or
pop
out
shlb
in
mov
push
pop
mov
cmc
into
in
inc
loope
call
xor
imul
and
nop
fucomi
cmp
jb
or
mov
ss
adc
mov
jmp
push
sahf
rcrl
sub
pusha
ja
cmp
les
jge
add
cwtl
mov
cmp
xchg
and
xor
adc
cmp
loope
mov
fstpt
mov
jg
push
mov
pop
je
je
lcall
cmp
sub
sbb
data16
repnz
xorb
cmp
dec
sub
aas
in
ljmp
jo
xlat
stos
int3
ss
push
mov
sub
inc
or
scas
sahf
es
cli
sub
mov
loop,pn
mov
call
xor
idivb
push
add
xchg
fwait
iret
cmp
push
mov
sbb
jb
push
xor
ljmp
out
or
push
out
ja
fistpll
pop
mov
pop
xlat
outsb
or
clc
xor
mov
push
push
int
icebp
in
cmp
mov
sub
sub
mov
sub
jb
jb
cmpsb
ds
push
out
cli
cmp
and
push
imul
cmpsb
insl
clc
rcrl
mov
stc
sub
ljmp
sahf
jle
loop
xchg
js
pop
repnz
sbb
icebp
adc
scas
or
mov
xor
xor
stos
pop
jle
or
pop
sub
or
call
cmp
mov
cmp
sub
cmp
inc
and
xor
cmp
jg
pop
push
mov
insb
push
test
xor
inc
ljmp
clc
pushl
xor
fcom
sub
clc
mov
stc
imul
sub
in
loopne
lcall
add
movsl
xchg
call
cmp
and
push
jmp
negb
mov
ret
lret
push
movsb
mov
jmp
jo
adcl
jae
xchg
xor
insl
mov
out
loopne
sbb
jl
fsubp
leave
pusha
popf
aam
mov
cmp
cmpsb
mov
push
iret
xor
es
icebp
cmp
and
mov
in
cltd
adc
sub
jne
call
sub
jecxz
enter
mov
js
mov
mov
xorb
stc
scas
lods
adc
loopne
data16
mov
inc
mov
push
call
jle
insb
jmp
in
adc
and
hlt
cli
ss
arpl
imul
das
rolb
dec
in
pushf
mov
inc
das
insb
loope
push
repz
les
mov
pop
and
mov
pop
mov
mov
ficompl
out
imul
or
rclb
or
ljmp
scas
clc
or
mov
orps
outsb
in
test
sbb
out
in
inc
cltd
and
incl
jns
pop
push
mov
xchg
stos
lahf
xor
popa
mov
mov
das
jb
jmp
jns
cmpsb
sbb
cmp
add
push
jg
in
sbb
and
xor
mov
into
push
and
mov
jnp
pop
fdivrl
gs
pop
mov
in
dec
shlb
outsl
mov
sbb
mov
push
and
stos
pop
sbb
call
xor
clc
adc
lods
cltd
clc
jo
incl
fwait
outsb
fdivr
cltd
rcr
mov
daa
jecxz
push
push
xor
pop
sub
xor
lods
push
dec
sub
push
insb
dec
test
xchg
fidivs
loop
orb
je
or
lock
call
push
arpl
mov
and
sbb
jbe
daa
std
int
mov
or
insb
test
pop
out
xchg
mov
xor
dec
mov
and
outsb
cltd
decl
int
add
in
mov
add
xor
inc
pusha
fs
subb
cwtl
cs
xor
decl
sub
pop
fdiv
fsubs
std
insb
rcrl
xor
jbe
repnz
movsb
icebp
jmp
jno
mov
lahf
push
pop
ljmp
cs
lock
ss
mov
mov
jecxz
xchg
jmp
fldpi
or
mov
lock
sub
mov
dec
popf
lods
es
call
loopne
insb
outsl
sarb
lock
das
and
add
dec
mov
jmp
test
rcrb
inc
mov
rcrb
movsl
lods
and
xor
mov
movsl
mov
and
stos
out
pushf
popf
xchg
in
jo
arpl
decl
fisubrs
rcrl
scas
lcall
mov
hlt
pop
and
cmc
lcall
repnz
ret
cmp
fldcw
out
jmp
xor
mov
pop
insb
ret
sbb
daa
decl
test
lcall
push
mov
cld
jo
jae,pn
mov
cmc
xchg
out
fdivl
pop
pop
scas
inc
fldl
pop
mov
push
adc
ret
lds
push
lock
sub
test
bnd
pushl
inc
mov
push
dec
and
insl
cmp
pop
lret
out
push
scas
loopne
stos
adc
pop
jg
pop
push
rolb
pop
icebp
lret
data16
jo
das
mov
mov
sti
cmpsb
aas
add
rclb
pop
push
notl
aam
add
and
pusha
outsb
sub
incl
out
add
scas
sahf
orl
push
jns
cmpsl
mov
sub
jae
sub
incl
dec
ss
ret
jg
ffree
rcl
icebp
pop
cmp
daa
outsl
insl
cs
add
call
pop
add
push
andl
popa
push
shl
sub
pop
ljmp
mov
outsb
sub
sbb
mov
xor
mov
inc
jg
fcomps
mov
fidivrs
sub
fcom
ja
push
pop
pop
and
pop
insl
std
fbld
add
mov
cmpsb
scas
and
jg
jmp
mov
out
popf
leave
sub
dec
gs
xor
popf
sbb
jmp
hlt
adc
and
call
pop
push
push
dec
add
test
decl
sbb
pop
inc
lds
nopl
cmp
pop
cmp
jle
ds
decl
stos
ljmp
push
es
adc
cwtl
dec
movsb
xchg
and
incl
out
popf
sbb
jge
movsb
sub
movsb
sbb
push
data16
pop
sub
pop
test
pop
push
add
in
fcomip
incl
lods
inc
loop
icebp
xchg
xchg
pushf
xchg
fwait
cwtl
aam
loope
out
pop
jecxz
insl
pop
cld
ljmp
sub
insl
cmpsb
std
ss
sub
loope
ja
add
imul
fildll
ds
ficomps
add
adc
pop
pop
mov
add
psraw
inc
test
out
mov
fsubrl
push
dec
pop
aad
adc
daa
push
adc
mov
dec
outsb
inc
aad
and
sbb
pop
and
cmc
mov
sahf
imul
out
push
dec
jg
adc
sub
fwait
test
mov
fdiv
add
aaa
std
decl
fisttpll
loop
std
bnd
push
push
cmpb
push
dec
cs
decl
out
push
fwait
je
ljmp
imul
mov
jmp
mov
outsb
ljmp
or
lcall
adc
add
test
push
xor
sbb
jmp
or
jb
fnsave
into
pop
popf
or
mov
sub
jg
inc
stc
sahf
push
ljmp
xchg
aad
push
pop
xor
xor
ljmp
mov
out
movsb
jnp
push
sbb
pop
movsb
scas
adc
add
out
mov
jmp
mov
pop
es
xchg
mov
adc
dec
fsqrt
iret
stos
cmpsl
xor
pop
scas
clc
jmp
les
scas
sahf
cmp
ret
hlt
shl
add
sbb
in
aad
es
stos
cli
out
je
in
loope
push
std
or
xchg
hlt
or
dec
pop
mov
sbb
ljmp
shl
sbb
mov
xor
pop
ds
cli
stos
test
in
call
inc
pop
pop
sbb
cmp
or
cli
cmp
mov
sbb
cld
outsl
push
jno
call
es
ret
add
xchg
xor
jae
fnsave
sbb
mov
into
aaa
aam
nop
cli
fiaddl
mov
ds
cld
and
mov
call
sbb
inc
xchg
push
cmc
fisubrs
mov
and
jo
dec
push
jno
out
call
cs
out
movsl
andb
push
cmp
pop
mov
aad
stos
loop
jg
out
jmp
popa
mov
mov
mov
cld
mov
xlat
sub
mov
out
jns
call
movl
call
and
scas
rol
jmp
lret
cmp
lahf
in
or
push
insb
and
cmc
lcall
sub
dec
mov
imul
push
xchg
pop
inc
jmp
fisubs
pusha
xchg
std
add
movsl
xchg
movsb
mov
daa
stc
shrb
incl
movsb
cld
mov
jnp
push
cltd
mov
lods
out
loopne
stc
test
xchg
fadds
shl
dec
stc
jne
sbb
push
in
jb
jge
sbb
arpl
push
xor
jmp
xchg
mov
out
lock
dec
cmp
repnz
lret
or
test
cld
fnsave
or
repnz
push
pushl
mov
cwtl
daa
jp
adc
push
inc
jb
sar
and
cmp
jle
int3
xchg
incl
insb
in
cmp
icebp
sti
cmp
mov
xor
inc
leave
gs
mov
add
mov
in
test
gs
sub
mov
and
jecxz
call
jnp
cmp
sub
push
mov
ret
jge
ud2
pop
shr
push
lcall
fisubrs
in
outsl
addr16
push
pop
cmc
incl
jge
mov
icebp
clc
push
test
or
lods
jecxz
dec
fadds
ljmp
shrl
sbb
clc
lahf
fdivrl
adc
push
fdivrs
bound
ljmp
xchg
sarl
in
mov
lods
popa
clc
std
or
aam
mov
lcall
out
outsl
clc
ss
stc
insl
pop
insb
mov
and
insl
je
push
outsb
xchg
and
jecxz
enter
mov
jge
es
aam
repnz
push
sar
ljmp
out
mov
pop
dec
mov
cwtl
dec
jo
pop
push
out
push
xlat
imul
scas
mov
loope
ret
jmp
xor
mov
dec
insl
push
in
jmp
mov
xor
int
popa
insb
unpcklps
cmpsl
lahf
sub
cmpsb
es
pushl
out
jbe
push
jb
mov
loopne
andb
imul
call
int3
jae
aad
imul
xor
nop
and
adc
ljmp
mov
movsl
repnz
ret
call
push
lock
pop
insl
adc
mov
sti
jmp
insl
jnp
aad
dec
cmp
adc
cwtl
imul
in
pop
push
mov
pusha
in
xchg
icebp
lahf
cli
xchg
adc
xchg
pop
xchg
xchg
lock
call
repnz
ljmp
fisubrs
add
push
or
mov
ffreep
add
cmc
mov
adc
and
inc
dec
fiadds
xlat
xchg
ljmp
shlb
daa
into
xor
jmp
dec
mov
add
push
add
loop
cmp
mov
jg
enter
cmpsb
outsl
lahf
jb
push
loopne
leave
sbb
jg
icebp
jmp
repnz
cli
pop
or
cmpsb
ljmp
outsb
outsl
push
cmp
pop
fwait
jnp
das
gs
add
shl
repnz
lcall
not
adc
jbe
outsl
into
rorb
inc
repnz
pushl
mov
out
inc
push
outsb
push
xchg
cmp
inc
xchg
das
ds
arpl
jp
xor
gs
jmp
fistl
adc
adc
sbb
and
arpl
sbb
arpl
xor
test
and
pushl
stc
push
mov
out
adc
xchg
ljmp
outsb
cli
sbb
fs
arpl
jle
loope
adc
rolb
addr16
jmp
sub
subb
mov
imul
cwtl
push
stos
fld1
les
fcomip
xchg
cmpsb
popf
mov
loop
jo
sub
adc
push
mov
fdivrp
push
xchg
mov
and
jb
mov
stos
add
scas
cmpsb
shl
mov
std
sbb
adc
mov
cmpsl
ja
sub
jmp
mov
scas
push
or
lahf
cmp
and
pop
addr16
cmp
lods
mov
lds
pop
das
imul
movsb
inc
sbb
out
or
mov
sub
adc
add
xor
push
mov
or
pop
xlat
xor
loop
incl
adc
mov
out
xor
xor
bound
movsb
jb
jl
jne
pushf
and
lcall
mov
out
and
lret
jo
loop
sub
add
sub
popa
lcall
hlt
incl
es
call
and
in
lcall
xlat
jb
or
jmp
xchg
fisubs
inc
shl
insb
and
xor
pushl
push
lcall
fisttpll
pop
ljmp
sbb
test
push
cld
mov
scas
shlb
xlat
ljmp
cmpsl
out
xchg
and
lahf
data16
in
mov
stos
pushl
outsb
popf
jae
jp
sub
xchg
sbb
mov
ljmp
fbstp
popa
pushf
call
push
ljmp
incb
jl
aas
mov
fucomi
jbe
pop
fnsave
jl
arpl
repnz
ret
push
inc
adc
jmp
ljmp
pop
jnp
ret
xlat
bnd
mov
ljmp
loop
and
sub
popa
jmp
pop
pushf
cs
mov
pop
pop
pop
outsl
das
out
not
cli
push
test
and
sbb
adc
sti
lcall
out
ss
out
fisubrs
jno
out
inc
xor
pusha
jno
inc
and
pop
mov
jmp
xor
jno
lcall
cmc
scas
xchg
cmp
sub
cmp
dec
mull
lods
loopne
fisttps
adc
imul
mov
sahf
hlt
sub
int
mov
sahf
xor
add
popf
fistps
sbb
jb
fstpl
je
jnp
call
dec
jge
jb
test
int3
sub
fimuls
push
je
outsb
pop
mov
xor
addb
jno
xor
inc
in
sahf
ret
ss
push
sbb
stos
dec
jg
adc
mov
jb
es
or
call
dec
inc
jo
cmp
dec
lahf
jl
cwtl
push
and
mov
fbstp
fcomip
aad
jne
dec
and
mov
add
je
jecxz
out
out
mov
stos
adc
ds
lret
cs
jmp
pop
ficoms
repnz
jo
imul
lret
ljmp
les
mov
xchg
dec
popf
sub
cmp
decl
lods
loope
inc
in
lahf
dec
push
jae
ja
cmpsl
xchg
idivl
pushf
bound
jle
jg
cmp
loopne
mov
push
mov
nop
or
lock
adc
pop
mov
push
pushl
std
inc
jb
mov
inc
mov
add
pop
out
pop
jb
push
in
mov
subb
loopne
incl
pop
out
xchg
mov
xchg
lret
inc
jb
int3
mov
out
xor
xchg
xor
pop
fbstp
and
jo
jne
outsl
cmpsl
insl
dec
jne
lock
decl
fmul
je
adc
sbb
adc
jb
popa
icebp
push
mov
lcall
pop
jecxz
out
cmp
test
fisubs
negb
add
cmp
movsl
je
jo
insb
push
xchg
movsb
loopne
push
push
xchg
pop
sub
mov
nop
ds
sbb
lcall
sub
and
inc
mov
pop
mov
stos
xchg
inc
cmpsb
stos
or
push
sbb
lcall
jo
sbb
lret
movsl
stc
xor
iret
dec
icebp
fcompl
cmpsb
jg
ljmp
cmpsb
aad
int
addr16
jae
leave
dec
mov
add
pop
dec
pop
inc
pop
enter
subb
xchg
sub
xchg
jg
push
in
pop
mov
push
pop
xchg
loope
mov
popa
rorb
and
dec
pop
push
aam
add
fcoml
add
pop
adc
jge
fstps
mov
pusha
push
mov
cmp
pop
sub
jl
inc
mov
sbb
gs
push
les
mov
in
leave
daa
mov
sub
sub
shl
mov
test
pop
ljmp
dec
int3
outsl
out
adc
ljmp
push
sub
mov
jb
pop
fstpl
jg
fcompl
test
cmpsl
push
add
in
or
add
inc
incl
in
mov
shll
arpl
push
add
sub
xchg
sub
push
adc
imul
call
iret
lods
addr16
decl
jmp
fistps
enter
add
loope
out
jg
add
int3
aad
jle
les
or
je
mov
push
lock
imul
pop
xchg
lcall
push
mov
aas
rcrl
aaa
and
popf
ror
mov
dec
sbb
ljmp
lret
mov
sub
fwait
sbbl
imul
xchg
inc
outsb
es
dec
decl
inc
cmp
rcrb
push
inc
fmull
pop
int3
ror
push
cmp
es
gs
pop
pop
jg
ret
out
ficomps
fistpll
into
pop
js
push
test
xchg
jb
fildll
and
in
call
push
adc
incl
loop
xlat
lahf
ja
faddl
cs
jge
scas
out
jmp
mov
inc
lods
je
push
pop
insb
jg
incl
in
aad
xchg
push
jo
lahf
push
iret
loopne
sahf
scas
ficoml
out
sub
repnz
incl
mov
jae
sub
cwtl
fiadds
mov
xchg
sti
push
push
adc
out
shlb
xchg
dec
cmpsl
sub
jg
xchg
lea
arpl
pop
cmpsb
adc
jnp
xchg
pop
push
shrb
push
push
xchg
sbb
addr16
movsb
rorb
shlb
inc
xchg
and
xchg
ljmp
jl
mov
mov
push
shlb
dec
sub
push
push
repnz
push
andb
push
pop
aam
ljmp
clc
xchg
push
test
ja
cs
aas
sbb
pop
cmp
sbb
lock
pop
mov
add
lret
out
pop
out
lods
jg
scas
cli
call
pop
pop
lret
adc
pushf
iret
push
fucomp
and
lods
daa
out
pop
call
test
add
push
in
sbb
push
decl
jmp
push
sar
iret
xchg
pop
dec
jl
xor
out
cmpsl
jno
call
sbb
push
push
dec
scas
push
xchg
cmp
aaa
xlat
in
cmp
cmp
cltd
sbb
test
rcl
xchg
outsl
arpl
mov
inc
mov
cmp
pop
cmp
cmpsl
out
dec
xchg
sbb
enter
outsb
std
push
cmp
sub
out
mov
xor
push
pop
into
add
dec
movsl
rcpps
xor
ja
out
in
cmp
addr16
mov
iret
cmp
cmc
sahf
rcr
push
je
push
clc
jo
popf
movsl
xchg
jecxz
movl
outsl
cli
mov
aam
sbb
out
sar
outsl
inc
pop
stos
mov
mov
and
lea
mov
pushl
pop
stos
aam
mov
push
into
xchg
pop
lahf
push
and
push
pop
pop
mov
fcomip
add
fucom
adc
mov
push
xchg
ljmp
xor
adc
jmp
loopne
and
cmp
dec
mov
mov
cmp
xlat
jmp
faddl
mov
push
and
sbb
jge
xchg
ljmp
pop
lcall
gs
mov
pop
scas
sbb
pop
adc
cld
cmp
cmp
xchg
fs
xchg
jae
inc
jle
test
aad
sbb
push
fimull
cld
ja
lods
push
pop
mov
clc
gs
and
jg
sarb
xchg
push
out
lods
pop
push
aad
adc
mov
adc
es
adc
sub
add
mov
aam
ret
mov
jecxz
sub
mov
inc
fsubrs
prefetch
arpl
xchg
push
imul
lret
fists
fidivl
jae
pushf
fldt
in
out
push
int3
dec
mov
lods
ret
ljmp
pop
mov
inc
imul
mov
pushf
rclb
fmuls
inc
mov
ja
mov
pushl
shrb
or
lods
xlat
aad
push
jbe
fcmovne
inc
push
inc
clc
xchg
ret
xchg
pop
ficoml
mov
std
jmp
sub
loop
add
inc
ss
dec
dec
mov
xor
pop
inc
test
ljmp
inc
incb
bound
flds
sub
add
orl
xchg
xorb
pop
pop
mov
aas
dec
and
jno
gs
mov
jmp
mov
mov
pop
repz
std
int
ret
flds
les
aaa
cs
inc
incl
es
dec
xchg
push
int
or
addr16
in
rorl
jg
mov
sarl
mov
movsb
cld
scas
out
sbb
test
lods
imul
mov
inc
xchg
mov
sbb
or
bound
andl
incb
fbstp
into
sbb
pop
dec
shrl
mov
loope
mov
mov
lea
xchg
dec
test
fwait
dec
nop
lahf
or
push
sub
int
mov
jecxz
inc
jbe
xlat
xor
in
sbb
jp
push
mov
mov
dec
pop
add
into
xchg
jecxz
pop
stos
xchg
sbb
pop
outsb
gs
push
jae
inc
aam
aad
jo
inc
pop
push
jg
jmp
xor
lret
bound
scas
pop
jae
fisttpl
shrb
ss
call
das
xchg
in
push
shlb
sbb
fcompl
into
jae
mov
cmp
imul
jmp
in
and
ficoml
pop
xchg
xor
cs
mov
mov
call
imul
out
inc
daa
mov
in
pop
out
mov
inc
lock
icebp
ljmp
fcmove
xchg
out
push
int
xlat
cwtl
popl
jecxz
pop
je
in
inc
sbb
xchg
fwait
lds
sbb
dec
or
iret
int3
inc
dec
scas
call
inc
into
jb
sbb
mov
dec
outsb
xchg
lea
jmp
gs
fsub
inc
jbe
lock
scas
push
xor
jp
or
rcl
pusha
dec
pop
add
add
push
dec
outsb
xor
dec
jmp
gs
outsb
cwtl
test
xchg
mov
test
addr16
out
inc
pushl
sbb
int
jo
mov
xchg
vpor
dec
les
inc
insl
in
lcall
jle
fmull
mov
aad
and
inc
cmc
fsts
push
test
call
icebp
mov
push
inc
call
ficoml
cmp
cmp
cltd
fcmovb
sbb
jle
pop
jecxz
jae
xor
call
add
data16
out
sbb
mov
push
lcall
lcall
cmpsl
pusha
jecxz
mov
mov
mov
xlat
xchg
jne
aam
popa
ljmp
pushl
or
cltd
inc
xor
xchg
rcr
pop
cmp
mov
scas
push
test
incl
ds
ret
gs
mov
out
adcb
inc
ljmp
std
dec
cmpsb
push
dec
ss
jle
xchg
addr16
mov
scas
jnp
push
sahf
lcall
or
call
sub
mov
jle
jp
decl
mov
xchg
ds
stos
daa
pop
dec
adc
push
ja
jae
les
decl
adc
cmp
cs
mov
mov
adc
test
sbb
xchg
mov
ds
jg
lcall
xor
pop
in
xlat
je
shr
push
jns
adc
clc
ljmp
cmp
mov
dec
out
popa
inc
sbb
iret
push
add
push
cld
bound
push
andl
jae
sbb
or
cmp
fisttps
out
and
decl
jae
out
ret
movsl
jae
inc
lock
pop
cmp
xchg
xor
pushf
cmc
insb
cli
mov
mov
shlb
into
cmp
pop
jle
cltd
fstps
rolb
sbb
rorl
es
sbb
mov
call
cmp
jnp
mov
sbb
loopne
lret
rcl
add
test
lcall
mov
sahf
bound
aaa
sbb
inc
in
xchg
cmp
jl
push
cmp
rorb
mov
ljmp
or
outsb
cltd
js
jecxz
mov
into
lods
push
jg
adc
sub
hlt
hlt
jg
hlt
repnz
pop
lods
fdiv
les
dec
cltd
mov
lcall
dec
push
xchg
lods
cmpl
sbb
xor
sbb
in
ljmp
mov
lret
pop
ds
das
or
push
jb
mov
mov
adc
bound
mov
shll
and
mov
roll
mov
push
insb
aad
mov
xor
cli
out
ljmp
jmp
add
xchg
aaa
daa
out
xchg
jns
sub
aaa
mov
mov
cmp
je
mov
jmp
dec
call
mov
gs
push
sub
pushl
or
xchg
repnz
pop
push
xchg
out
int
pop
repnz
scas
clc
incl
xor
xchg
stc
pop
cmc
add
sbb
and
xchg
xchg
jno
data16
mov
mov
push
das
in
push
push
jmpw
outsl
aam
fdiv
lds
xorb
aas
xchg
jb
add
ljmp
out
mov
fdivs
das
hlt
add
add
repnz
ljmp
mov
mov
adc
cwtl
pop
adc
adcb
cmp
lock
adc
mov
mov
and
out
lret
or
cld
pushl
test
fists
outsl
repz
outsb
push
sub
les
hlt
adc
aaa
mov
outsb
mov
insl
loope
jo
xchg
jmp
clc
stos
dec
add
jmp
lret
lods
adc
mov
repz
mov
xchg
hlt
jg
or
ljmp
test
dec
clc
lods
hlt
mov
in
aaa
xchg
cwtl
cmc
jns
jmp
lods
push
mov
inc
jbe
jne
outsl
mov
xor
xor
inc
call
mov
pop
in
hlt
mov
sti
call
movsl
xor
mov
mov
jle
xor
pop
ds
and
mov
pop
loop
outsb
shlb
mov
push
mov
mov
popa
xor
sbb
es
test
in
cmpsb
rep
cld
or
add
mov
lea
push
jge
call
lods
pop
mov
cld
pushl
scas
loopne
scas
test
scas
jne
sahf
xor
mov
cltd
negb
pushl
aam
mov
ljmp
and
xor
xor
mov
std
in
add
sbb
test
mov
mov
das
push
int3
mov
xor
setno
cli
xor
popa
daa
outsb
adc
fwait
jmp
sub
mov
jmp
sbb
add
mov
xchg
mov
mov
ljmp
jbe
sub
push
mov
xor
pop
into
outsb
and
pop
sahf
mov
xor
mov
mov
inc
and
xor
jmp
daa
jmp
outsb
push
push
lock
push
insb
das
sub
decl
test
add
add
inc
sbb
cld
mov
mov
clc
mov
jp
add
jns
push
adc
pushl
jbe
or
nop
and
in
or
fsubrp
mov
imul
or
mov
mov
scas
aam
pop
cmp
mov
xorl
fwait
das
fneni(8087
ret
ret
inc
sub
ja
xchg
xor
mov
out
dec
cs
in
adc
or
je
scas
in
mov
call
xor
stc
xchg
xchg
xor
mov
mov
pop
push
push
mov
adc
push
mov
or
fcoms
mov
cwtl
fisubs
xchg
xchg
popf
fists
rcrb
out
sub
push
xchg
mov
pushl
push
rclb
fsubrp
xchg
xchg
test
push
xchg
xor
jno
xchg
lds
lret
stos
rcll
xchg
xor
sbb
lcall
pop
push
or
add
out
add
mov
lds
out
aad
xchg
cmp
lock
in
cmp
fistpll
fstpl
xchg
mov
les
xor
xchg
lods
incb
enter
push
mov
mov
popf
cltd
add
cs
mov
jmp
les
lock
decb
test
lods
dec
inc
testb
xor
lcall
jns
push
xchg
into
adc
sub
add
insl
scas
rcr
mov
in
jge
nop
fnstenv
fdivr
jo
push
dec
push
loope
or
sbb
into
mov
lods
ljmp
iret
sub
enter
cmp
ds
mov
push
shrl
dec
jg
jmp
fldenv
jbe
push
shlb
add
pushl
jle
in
aaa
leave
movsb
dec
call
pop
jmp
and
inc
mov
rcrl
add
adc
jmp
adcl
out
shrl
and
jle
es
leave
cli
xor
inc
lret
sbb
mov
lcall
mov
or
test
aas
dec
ljmp
ja
orb
jbe
pop
xor
mov
jmp
and
push
in
push
push
rclb
push
loope
or
push
pop
push
cli
dec
mov
pop
sub
dec
xchg
push
pop
sbb
movsl
add
es
dec
aaa
mov
lcall
jg
push
lret
ljmp
mov
frstor
stos
in
ljmp
mov
call
pop
mov
test
xchg
lods
sub
aam
scas
les
jae
sbb
call
dec
and
cmpsb
imul
dec
pop
sahf
xchg
push
sub
adc
mov
adc
add
arpl
ljmp
adc
push
lea
sbb
xchg
dec
test
mov
test
add
cli
sar
clc
dec
fnstcw
inc
push
rclb
out
or
lcall
push
aad
inc
insb
xchg
sbb
xchg
sar
xchg
nop
push
push
mov
adc
xchg
xchg
incl
in
push
and
sbb
imul
fmull
push
sub
xchg
add
call
push
movsb
adc
mov
out
dec
shll
inc
and
dec
stos
flds
stos
mov
into
ljmp
jmp
cmp
out
rclb
inc
lods
jl
push
test
push
call
pop
mov
shlb
es
push
mov
fcmovb
js
xchg
push
shr
cld
push
or
aas
mov
iret
mov
in
cmpsl
mov
lock
mov
jb
push
push
adc
incl
outsl
test
dec
aad
mov
leave
cmpsl
das
xchg
rol
lcall
decl
push
xlat
lret
push
adc
mov
add
stc
and
pop
lret
mov
stos
jg
jno
out
aad
push
push
shrl
xchg
mov
stos
add
mov
lret
push
mov
mov
lret
dec
sub
test
inc
or
pop
cmp
lods
xchg
dec
or
push
dec
es
push
data16
dec
inc
cmp
ljmp
inc
sbb
xchg
mov
jl
and
leave
pop
sti
enter
adc
outsb
and
lock
shr
push
orb
ficoml
sub
pop
cmp
je
ds
push
shll
dec
rorl
lahf
sarb
push
dec
out
jg
lcall
dec
enter
xchg
fldcw
std
subb
add
or
inc
out
into
call
mov
pop
and
jmp
decl
orb
xchg
xlat
push
es
dec
pop
hlt
and
xchg
mov
incl
sahf
ret
push
adc
ror
push
jno
add
and
xor
ljmp
movsl
daa
cmp
shl
cltd
jae
fimull
and
pop
cmp
ja
ss
shl
pushl
mov
push
cmp
je
xchg
xchg
xor
xchg
pop
mov
loop
push
push
cs
leave
outsl
ljmp
mov
xchg
dec
js
mov
insb
mov
addr16
test
std
call
and
mov
sub
cwtl
sbb
lock
test
jb
mov
outsl
cmp
pop
insl
inc
push
imul
push
xchg
xor
lcall
mov
cmp
outsb
xor
push
inc
mov
pop
sbb
xor
pop
imul
cmpsb
dec
jne
ss
jmp
jle
lret
cmpl
negb
inc
jp
pop
or
cmpsb
lea
sbb
ljmp
xlat
push
jl
outsb
dec
sub
xchg
iret
pop
lock
jmp
mov
jne
xchg
lcall
dec
jge
add
pop
rclb
scas
cli
es
inc
fdiv
xor
xor
mov
jg
xor
mov
push
or
mov
pop
dec
mov
dec
dec
mov
decl
xor
push
or
aas
dec
mov
es
jnp
adc
cmc
mov
into
out
lcall
mov
mov
decb
jle
add
rcrl
loop
push
mov
addr16
or
dec
mov
xor
xor
decb
push
les
push
pop
adc
mov
in
or
ljmp
lcall
xchg
push
add
inc
add
mov
xchg
inc
call
inc
cmp
xchg
ds
jg
call
stos
syscall
loop
push
add
sbb
push
sahf
push
xor
scas
mov
push
lods
scas
or
sub
pushw
cmp
inc
add
stos
sub
jp
call
clc
pop
push
in
fstps
insb
jo
dec
adc
divl
xor
sbb
pushl
outsl
sub
repnz
push
inc
lcall
int3
or
push
and
add
push
fstps
add
push
adc
lret
les
inc
pop
popf
dec
nop
aaa
sar
sbb
pop
std
lret
frstor
dec
mov
cmp
xchg
pop
stos
outsl
push
mov
dec
mov
mov
pushl
pop
mov
mov
out
dec
xor
or
cmp
jg
xlat
xor
clc
cmp
jl
stos
lret
int
call
inc
test
sbb
ds
hlt
mov
or
decl
inc
sti
data16
mov
sbb
mov
lods
test
add
mov
mov
sti
aas
xchg
sahf
int
jle
add
imul
aaa
jno
dec
xor
jmp
outsl
dec
xchg
pop
inc
jno
in
cmp
mov
jle
movsb
imulb
mov
pop
call
ja
ljmp
divb
pop
xor
adc
sub
mov
je
test
lods
inc
cwtl
push
pushf
rcrb
xchg
fxch
pusha
sbb
jo
test
sarb
pop
inc
pop
push
adc
dec
movsb
insb
push
data16
lea
sti
lds
jns
enter
and
pop
fimuls
mov
idiv
incl
leave
push
mov
lret
sub
lea
inc
int
and
mov
out
ljmp
enter
lret
push
sub
push
sbb
filds
or
scas
sub
call
sub
push
out
imul
movsb
lcall
mov
ja
xchg
or
arpl
mov
outsb
mov
test
incl
add
ret
or
dec
or
push
ljmp
inc
mov
rcll
mov
hlt
or
shll
ljmp
sub
or
push
inc
int
lds
repnz
push
xlat
xor
push
sbb
scas
xor
test
sahf
add
stc
ffreep
xchg
mov
out
sbb
mov
mov
jbe
xchg
push
inc
inc
mov
cmc
call
pop
sbb
ficoms
jb
mov
jne
ss
icebp
lcall
or
mov
inc
pop
sbb
push
je
movsl
outsb
dec
lods
jmp
jno
ljmp
shl
lret
ror
out
in
ja
lea
cmpsl
fldl
mov
sub
pop
leave
roll
mov
jmp
jne
sub
dec
push
add
mov
scas
aad
push
imul
pop
xchg
data16
jg
jle
ds
lret
add
sbb
ljmp
cmp
incl
inc
add
lret
cmc
inc
test
pop
mov
cs
pusha
inc
sub
std
ljmp
lock
sub
or
pushf
sub
sbb
fdivrs
ucomiss
bound
sar
mov
adc
std
jp
cmp
int
xchg
in
notl
push
push
js
pop
and
mov
lods
scas
aam
adc
pop
mov
pop
rep
or
or
jno
add
ss
add
ret
hlt
lock
mov
add
xlat
or
jmp
push
adc
out
mov
mov
cmp
leave
jnp
jnp
aad
incl
cmp
add
mov
jbe
scas
push
in
sub
jge
mov
mov
jle
mov
jb
stos
push
pop
sar
pushl
cmp
arpl
nop
jns
sahf
adc
arpl
or
jnp
or
sti
test
lcall
lret
orl
push
test
add
test
rolb
divl
stos
inc
sub
lcall
das
loope
cwtl
bswap
int
iret
std
movb
lods
sbb
cld
xor
xchg
es
call
repnz
daa
ret
xorb
mov
addl
push
scas
lret
jns
mov
push
stos
lcall
dec
xor
mov
mov
aam
sahf
out
lds
decl
js
loopne
add
enter
jmp
add
lret
loopne
jl
lock
incl
mov
push
xor
dec
sbb
mov
std
fbld
xor
shll
add
pusha
add
add
xor
test
xchg
lds
mov
outsl
dec
outsb
mov
jl
jae
add
add
incl
aaa
jmp
or
cmp
lea
call
std
shlb
dec
icebp
or
cld
mov
push
dec
pop
dec
add
xchg
jbe
jge
ljmp
mov
addl
lods
sti
jno
js
xor
aas
sub
ret
pop
jbe
lcall
jmp
imul
mov
add
in
add
lcall
mov
jo
add
ret
xchg
inc
imul
dec
mull
push
out
add
ljmp
push
repz
mov
idivb
xor
rolb
loopne
test
mov
xchg
in
cld
in
add
clc
jmp
add
add
insb
test
or
pushl
jb
adc
adc
push
ret
jg
sub
or
jo
dec
movsl
or
mov
add
out
adc
jl
jg
cli
or
incl
or
inc
xchg
in
jbe
jge
mov
hlt
or
xor
push
cmp
xchg
dec
outsl
add
jmp
mov
adcb
adc
push
ret
mov
stos
ds
ljmp
in
int
cmp
call
aas
jns
outsl
sbb
xor
xor
dec
xor
jg
andl
out
xchg
rcr
inc
mov
aaa
out
aas
lods
xchg
add
jbe
push
std
lcall
or
adc
jo
movsb
popa
call
js
xchg
and
call
inc
adc
andps
out
sub
sbb
push
scas
mov
les
cwtl
lcall
inc
or
fsubs
loopne
ret
mov
push
push
setp
and
and
adc
inc
jle
pop
xchg
sbbl
xchg
fisttpl
jg
daa
push
jne
outsb
inc
lds
xor
addr16
jg
cmc
rolb
call
jmp
xchg
outsl
lahf
js
addr16
je
addr16
faddl
dec
inc
ret
mov
cmp
or
lcall
mov
cli
cmpsl
mov
outsl
xchg
or
shrl
jb
xchg
cld
mov
insb
mov
sbb
fwait
pop
mov
add
push
push
sub
add
aaa
push
mov
jne
test
decl
mov
push
cmp
pop
hlt
decl
test
addps
mov
jb
mov
inc
inc
lea
insb
mov
inc
aaa
ffreep
xchg
cmp
aas
sbb
out
iret
push
sbb
mov
jno
adc
xor
incl
fs
pop
imul
mov
out
clc
mov
repnz
enter
inc
repz
notb
xor
pop
lahf
mov
and
inc
inc
rclb
cmc
in
push
pop
or
jmp
ffree
clc
cmp
lret
inc
scas
mov
cld
lcall
mov
or
cmp
mov
mov
mov
mov
pop
pop
das
repnz
add
and
or
cs
aaa
popf
sbb
inc
inc
or
dec
stc
sbb
adc
sbb
xchg
icebp
incl
xchg
insl
xchg
cmp
mov
lock
pop
ljmp
push
push
hlt
xor
inc
add
inc
neg
mov
jg
andl
lcall
dec
pushl
lcall
clc
pop
push
stos
jbe
inc
fwait
int
popa
aad
popf
shlb
cmc
ljmp
jno
xorl
add
pop
mov
xchg
jne
outsl
jb
pushl
ffreep
lock
dec
xchg
les
jbe
jnp
outsb
mov
fadds
pop
mov
incl
pop
dec
outsb
jne
fistpl
lods
hlt
add
mov
jle
inc
xchg
out
in
insl
push
pushf
jne
pushl
mov
gs
cltd
or
push
mov
xor
add
sub
aad
fbld
cmp
popf
imul
cmp
add
repz
xlat
add
adcb
repnz
jge
clc
incl
jl
xor
pop
into
xchg
mov
lcall
ljmp
mov
mov
ret
and
push
and
js
pusha
fidivrs
incl
mov
fwait
and
xlat
test
jns
push
test
pop
jecxz
lea
sbb
inc
sbb
lea
cmpsb
aaa
sub
stos
fdivs
insb
or
xchg
mov
scas
cltd
push
addl
or
sbb
repz
lcall
lret
incl
add
fmull
add
pop
mov
fstl
or
fadds
movsb
rolb
sub
mov
ja
cmp
cmp
xor
out
popf
dec
sub
dec
sub
bound
aas
mov
jg
push
icebp
lock
mov
ret
hlt
incl
sub
lods
das
andl
mov
jmp
outsl
cli
scas
shlb
out
ljmp
std
loop
push
add
pop
jp
dec
sbb
inc
pop
das
cli
sub
imul
push
fst
movsl
hlt
mov
aas
imul
mov
outsl
gs
xor
gs
in
and
cs
lea
and
faddp
icebp
insb
mov
cli
js
mov
movsl
sub
jbe
les
jp
clc
dec
adc
jo
std
sar
mov
in
xchg
sbb
jle,pt
out
xchg
stc
lea
outsb
push
dec
xor
test
xor
in
mov
pop
mov
sub
cmp
imul
jg
call
ds
dec
dec
clc
xchg
jb
sahf
pop
push
call
and
test
jmp
jg
imul
sarb
and
jns
xor
add
mov
jg
jmp
sbb
ljmp
lock
cmp
cmp
aas
dec
pushl
pushl
pop
fwait
pop
ja
insl
pusha
cli
test
jp
dec
and
sbb
push
in
dec
movsl
jbe
xor
divl
pop
sti
std
cmp
int
pop
stc
in
and
enter
leave
loopne
mov
inc
cmp
push
mov
stc
or
adc
mov
push
jnp,pt
outsl
cli
ljmp
push
outsb
inc
test
xchg
jmp
inc
or
jg
adc
lret
push
inc
xor
sub
and
mov
adc
push
mov
decl
dec
sub
sbb
jne
jne
sub
es
cmc
push
cld
mov
test
lods
sbb
incl
dec
xor
mov
or
push
push
add
gs
les
daa
ljmp
jle
stos
xor
inc
sub
fidivrl
clc
pushl
jne
mov
mov
add
adc
sahf
fsts
out
repz
rolb
inc
scas
adc
mov
mov
xor
andl
test
mov
insl
incb
push
pop
decl
call
sub
cmc
cltd
inc
mov
pop
xorl
loopne
cs
mov
das
mov
sub
and
mov
out
jmp
and
ljmp
movsb
adc
dec
pushf
mov
jb
mov
cmp
fcomip
jmp
fucom
jne
mov
ss
fwait
sub
repnz
stos
lods
and
decl
adc
call
jecxz
lahf
lea
push
incb
cmp
call
andb
adc
sbb
ret
insb
flds
mov
pushl
lahf
xor
fsubr
mov
aas
mov
arpl
xor
es
dec
rcrb
not
xchg
push
sub
lret
pusha
aaa
jae
or
dec
scas
decb
int
in
push
push
mov
pop
mov
aam
es
ljmp
fildl
incl
mov
sbb
fcmovnu
jle
sbb
xor
cmc
jne
in
add
or
mov
sub
pop
adc
sti
mov
jne
dec
movsl
mov
xor
incl
xor
jg
dec
sbb
push
lret
sub
add
mov
or
incl
mov
sub
and
std
fcomip
shll
stos
mov
dec
jge
sub
das
aas
roll
or
adc
mov
dec
rorl
or
cmp
std
or
out
push
or
scas
scas
test
mov
pushf
ficompl
jmp
int
cmp
xchg
pop
call
pop
jbe
test
adc
mov
push
mov
sbb
inc
mov
shrb
jmp
sub
cwtl
cmp
cli
sbb
and
jg
cltd
out
sti
ljmp
sub
mov
xchg
faddp
xor
jne
inc
push
cli
mov
repz
mov
negl
push
scas
ret
das
push
xor
mov
scas
rorb
scas
jl
mov
data16
sbb
ljmp
mov
xchg
mov
mov
mov
mov
adc
scas
jge
jmp
cmc
xchg
das
out
lcall
decl
lods
cli
jno
mov
mov
lods
push
test
inc
xor
test
cmp
pushl
sbbl
jbe
jns
xor
stos
jge
ljmp
dec
aas
xor
out
hlt
pop
push
cmp
adc
jmp
or
shrl
cmp
call
xor
mov
jle
push
sahf
popf
pushf
sub
cltd
mov
daa
cld
int
inc
das
cmp
movsl
in
jnp
jle
int3
push
leave
scas
stc
add
jmp
fs
imulb
push
std
xchg
xor
dec
sbb
jp
mov
notl
stos
fisttpl
cmpsb
loopne
icebp
and
pop
xor
sar
mov
mov
sub
dec
icebp
hlt
jno
add
jno
xlat
cmp
mov
call
dec
inc
mov
xchg
xlat
mov
jg
push
movsb
dec
into
ljmp
push
inc
into
inc
mov
add
dec
in
xchg
loope
mov
cld
mov
xlat
mov
dec
mov
addr16
mov
xchg
and
adc
shrb
lcall
popf
adcb
sar
addr16
and
mov
mov
cmpsb
fcompl
jp
movsl
fistpl
or
arpl
shrb
mov
inc
sti
sub
cmp
push
cwtl
add
dec
inc
mov
sbb
pop
mov
pop
cmc
call
and
cli
pop
push
ljmp
jl
in
mov
jmp
xchg
push
data16
sbb
push
pushl
into
pop
pushf
xchg
mov
adc
and
int3
lcall
add
mov
movsl
scas
pop
jns
push
sbb
in
cmp
imulb
xor
out
cmp
lods
cli
inc
mov
sub
xchg
lret
scas
cmp
ljmp
sbb
sub
cmp
cmp
xchg
cs
decl
add
loope
sub
cmp
push
sbb
jns
cli
cmp
addb
sbb
incb
insl
in
add
add
inc
pushf
das
jle
push
inc
and
adc
xrelease
xor
mov
nop
jl
jl
jg
aam
ljmp
inc
mov
rclb
test
leave
sti
adc
lods
mov
or
hlt
cs
es
in
div
gs
sbb
sub
cld
jmp
stc
push
aad
jnp
je
call
xor
aam
cli
pop
sbb
mov
outsb
in
push
jge
mov
lcall
inc
jns
dec
das
jmp
rcrl
jno
sbb
xor
je
pop
subb
lock
clc
into
jge
leave
clc
sub
sbb
or
mov
push
ljmp
xchg
mov
pop
ds
mov
sub
mov
jmp
lcall
push
sti
xchg
dec
popf
push
jb
dec
jg
loop
pop
sub
sahf
jle
mov
push
cmp
in
adc
pusha
mov
mov
stos
adc
ljmp
mov
stos
std
mov
fbld
add
int3
add
inc
cmc
adc
decl
lret
out
sti
gs
cmc
repz
push
bound
int
repz
out
sub
imul
in
adc
xor
mov
sub
mov
loopne
ja
jmp
jmp
out
ja
sub
cmp
xsavec
idiv
mov
call
outsl
cmp
jne
nop
xor
jecxz
xchg
or
cmc
les
add
decl
stos
mov
xor
and
and
jp
fildl
call
inc
insb
jns
fs
jecxz
imul
ljmp
add
in
inc
jl
test
mov
mov
dec
sti
push
fdivs
jo
std
fdivs
sub
or
sti
hlt
inc
test
out
test
cli
jmp
ljmp
arpl
and
rorl
lds
les
adc
outsl
jl
and
push
notb
push
cmp
xor
xchg
mov
pop
or
les
or
pushl
je
subb
lcall
sub
and
pop
aam
xchg
and
in
add
dec
sti
mov
jne
cmp
sub
sub
fisttpl
les
mov
pop
or
jmp
jbe
fld
mov
divl
out
fwait
pop
ret
call
ss
pushl
std
xchg
mov
imul
into
scas
ss
push
cs
mov
movq2dq
aas
in
pop
fs
pushf
pop
pop
lea
push
jns
test
cmp
incl
xchg
sub
pop
and
test
inc
cmpsl
das
aaa
or
stos
in
incb
call
ljmp
and
mov
cli
and
jb
mov
pop
addr16
adc
sub
push
decl
and
or
xchg
jp
sub
xchg
mov
jle
std
incl
or
sbb
xchg
jp
mov
out
dec
bound
outsl
test
sbb
mov
push
xchg
mov
mov
subb
mov
or
push
add
cs
in
js
sbb
jl
ljmp
incl
call
in
clc
outsl
jo
insl
add
pop
icebp
iret
outsb
test
push
jnp
cli
ljmp
mov
push
jae
sub
aaa
das
scas
jnp
mov
ja
pop
push
inc
mov
out
jg
aas
out
mov
shrl
movsl
js
mov
inc
push
dec
add
jge
add
daa
incl
lcall
dec
fsubrp
dec
cmpsb
mov
aaa
ja
add
xorb
push
cmc
push
and
enter
inc
sbb
insb
sub
add
je
lds
push
sub
jmp
xor
in
lods
icebp
mov
imul
pop
fcmovnb
mov
icebp
call
popa
add
push
ds
jo
mov
jae
pop
add
xor
das
icebp
rcl
pushl
jae
movsb
clc
lret
xor
loop
pushf
xchg
jg
leave
pusha
push
ja
rcrb
jge
xchg
test
fistl
icebp
outsb
and
outsb
cmp
in
insl
jg
cmp
imul
add
add
inc
push
push
cmp
cmc
out
add
cmc
xorb
mov
xlat
scas
aaa
out
inc
hlt
mov
incl
loop
insb
jmp
mov
ja
call
fwait
addr16
add
in
lods
mov
stos
jmp
mov
cmpsb
ds
movsl
scas
ljmp
aad
inc
mov
addl
jle
mov
call
hlt
jp
dec
mov
add
mov
xchg
sbb
dec
imul
xor
loopne
int3
call
inc
mov
repz
mov
sub
sub
adc
repnz
sarb
sbbl
xor
pushf
ret
fsubrl
jo
into
jns
pop
loop
in
sahf
mov
call
out
js
or
jae
mov
bound
sbb
cwtl
loope
mov
ss
mov
cmpsl
test
jns
outsb
sbb
xchg
add
sbb
lock
es
incl
in
movsb
sub
sub
lods
mov
xchg
gs
sbb
jg
hlt
mov
fwait
push
outsl
js
jo
jb
sahf
scas
test
in
jmp
incl
mov
push
xchg
cmp
call
mov
out
push
aaa
inc
jge
idivb
inc
test
call
cmp
cmpsb
push
inc
mov
aas
int
notl
jns
jo
xor
outsb
fs
xor
mov
push
data16
imul
xor
mov
lret
inc
dec
fwait
and
gs
sbb
in
sti
fs
jns
rcr
int3
dec
imul
lcall
mov
das
sub
ss
popf
fstl
lds
add
ja
out
xchg
or
pushl
shll
out
sub
pushf
addr16
call
pushl
jne
out
shlb
shr
or
sti
adc
mov
cmc
or
push
push
decl
add
lods
add
mov
jp
sbb
lea
fs
pushf
popa
inc
ljmp
out
pop
adc
out
adc
and
aas
pop
jae
sub
imul
jno
mov
andb
cmpl
iret
test
repz
pushl
inc
imul
cmc
xor
mov
push
inc
mov
aad
es
cmp
jg
test
ss
outsb
es
push
into
or
clc
jmp
cltd
xchg
inc
add
fadd
es
imul
pushf
out
shl
icebp
int3
incl
xchg
mov
cli
jno
or
das
lods
mov
das
xor
js
clc
scas
not
push
ljmp
mov
incl
sbb
push
pusha
sbb
inc
fmull
mov
cmp
mov
ljmp
lock
mov
mov
je
enter
mov
pop
out
sbb
fs
lcall
out
insb
inc
vhaddps
js
pusha
mov
scas
cmc
cli
cmp
lret
loop
and
inc
daa
subl
scas
jl
xor
mov
dec
adc
jmp
push
mov
dec
shlb
test
jle
js
push
sub
adc
xlat
push
and
and
das
test
hlt
or
aad
and
loope
mov
pop
lcall
enter
mov
lcall
decl
xchg
outsl
scas
fwait
cmp
fsubl
jnp
or
stos
xchg
jno
clc
cmp
pushl
jno
mov
or
mov
or
call
out
js
mov
cs
push
ljmp
cltd
les
loopne
mov
insl
movsl
mov
mov
adc
mov
out
test
lock
ljmp
mov
in
xor
bnd
mov
push
fbstp
filds
imul
pop
lcall
in
xor
out
outsb
jmp
ret
mov
cmp
insb
lods
sub
xor
push
mov
push
jmp
mov
das
call
out
cld
jb
xor
mov
scas
jmp
dec
ret
das
cs
pusha
insl
xchg
cmp
adc
sbb
adc
clc
lcall
inc
loope
xchg
sub
pop
push
pop
cmp
jg
pop
add
hlt
subb
inc
xor
movsb
test
test
imul
ret
ljmp
mov
ss
movsb
xchg
lods
leavew
lods
sub
bound
inc
mov
icebp
mov
mov
ljmp
adc
sbb
mov
int
and
bnd
mov
stos
lcall
in
mov
add
push
mulb
hlt
out
mov
lock
add
pop
mov
test
add
fisubs
das
out
push
push
cld
loopne
dec
sub
iret
pushl
pop
cwtl
cs
fbld
gs
scas
cmp
push
les
daa
in
pushl
cmc
fcom
subl
sub
in
in
and
scas
cmp
xor
jb
add
ljmp
add
mov
mov
fisttpl
inc
jmp
icebp
hlt
leave
das
call
add
push
push
daa
fnsave
adc
mov
sub
hlt
add
xor
fcomps
lcall
jl
add
xchg
sub
and
jg
push
inc
push
int3
mov
xchg
adc
in
pop
pusha
repz
out
mov
cmpsl
sar
and
jmp
or
stos
scas
push
scas
pop
lea
ljmp
xchg
pop
sbb
cmp
jg
call
icebp
les
fs
repnz
cs
je
jnp
addr16
pushl
mov
hlt
xchg
loopne
and
out
and
and
jb
sub
adc
cmp
fnsave
lock
mov
call
lcall
int
cmp
dec
and
out
sarl
inc
lods
mov
movsl
cwtl
movsw
jnp
lcall
add
call
cmp
fdivl
jno
cld
cli
mov
call
xlat
test
sbb
and
test
subl
ljmp
cld
pop
sub
fnsave
fistl
jg
xor
xchg
push
cli
push
xchg
dec
xor
cmpl
mov
adc
add
adc
gs
sbb
jo
test
pop
sbb
mov
or
test
xchg
test
xor
mov
add
les
incl
jp
movsb
lret
mov
jbe
int
hlt
pop
mov
inc
sbb
mov
jmp
mov
xchg
xor
cwtl
cmc
xorb
test
out
lds
das
clc
ljmp
lock
fisubrs
fs
negb
vcvttss2si
nop
xchg
ljmp
xchg
mov
and
sub
insl
dec
push
cmpsl
outsl
scas
mov
xchg
mov
jmp
xchg
add
adc
movsl
sub
and
outsb
push
psubd
js
add
adc
mov
pop
mov
fsubrl
adc
pop
mov
mov
out
orl
into
push
pop
movsb
ljmp
cs
jp
jg
imul
out
adc
lds
in
dec
push
jecxz
mov
mov
fwait
sub
popa
inc
jl
lea
out
mov
xor
adc
incl
adc
into
test
push
add
pop
cli
test
testl
xor
push
out
in
cmp
adc
movsl
out
sub
mov
inc
aas
jnp
push
jae
ljmp
lods
ficoms
mov
sbb
jl
in
xchg
lds
leave
sbb
incl
rcll
push
scas
in
imul
das
cmpsb
das
mov
scas
mov
push
push
ret
out
dec
cli
ds
cmp
sahf
cmp
std
or
push
in
inc
sub
ja
cld
scas
lahf
xor
and
pop
stc
push
cmp
ja
aad
and
popf
int3
das
incl
cld
mov
aad
inc
pusha
pshufw
pop
out
scas
pop
sub
ret
call
pushl
fsubl
movsb
dec
cld
out
and
rcrb
dec
lods
stos
sub
inc
in
mov
sbb
inc
in
movsb
movsb
scas
mov
jg
or
mov
cmp
cli
and
or
movsl
lock
mov
push
push
std
mov
cmp
out
out
call
jns
ljmp
loop
jmp
pop
mov
jb
cmp
mov
jmp
lcall
inc
jbe
sub
pushl
and
sbb
incl
das
mov
inc
xchg
mov
cltd
in
in
pop
insb
add
test
mov
imul
xor
adc
cmp
push
xchg
cmc
je
or
and
adc
mov
rcr
and
add
cmp
sub
lret
pop
pop
push
mov
pop
lock
popf
ret
xchg
push
pop
push
push
xchg
jae
mov
call
js
cmp
gs
shrb
push
test
stos
mov
xchg
mov
incl
add
std
outsb
imul
mov
in
inc
add
jl
add
decl
push
addl
fcomi
jl
shlb
clc
inc
fistps
inc
decl
xchg
out
sbb
sbb
pop
adc
mov
jnp
push
negl
jns
popf
in
lods
push
int
aas
cltd
push
sub
fcmovb
and
hlt
inc
daa
xor
mov
add
incl
fdivrl
and
sub
jne
test
jle
jl
xchg
mov
icebp
dec
and
push
dec
into
push
mov
gs
sub
imul
mov
mov
sar
loope
lods
pop
and
js
repz
sar
inc
data16
test
xor
inc
sbb
fcompl
xor
aad
sbb
jl
addr16
clc
mov
in
sahf
mov
adc
ja
pushl
push
xchg
pop
pop
lods
je
in
imul
cld
decl
dec
xchg
xor
mov
mov
mov
pop
cmpsb
hlt
mov
ss
jno
int3
loopne
cmp
js
dec
mov
stos
aaa
xlat
mov
ds
pop
cmpb
adc
sub
mov
push
out
out
jl
decl
es
dec
cmp
fdivrs
addr16
mov
ds
jge
cld
cmp
pop
scas
pushl
push
testl
lret
cmp
cmp
fwait
jae
cmpsl
add
popf
lahf
in
test
cs
in
outsb
pop
mov
ljmp
jmp
inc
push
xor
popf
xor
sub
test
mov
jno
and
and
jo
push
ret
sub
mov
lock
rcr
loope
int3
push
imul
cmp
pop
or
pop
icebp
mov
sbb
mov
out
mov
test
mov
cmp
pop
scas
cwtl
mul
xchg
mov
sub
push
ja
loope
xchg
cli
pushl
mov
out
roll
jecxz
out
dec
and
in
sub
inc
ss
sarb
or
jmp
lea
and
cmc
push
xchg
pop
lcall
leave
scas
mov
scas
insb
stos
lods
sub
mov
cmc
pop
hlt
xor
fcmovbe
mov
iret
pusha
ret
lcall
ss
sarb
mov
test
add
popf
inc
popf
add
mov
mov
call
cwtl
xorb
cmp
insl
sub
and
mov
push
stos
data16
push
ds
jb
loope
cmc
pop
pop
fsts
xchg
jmp
test
fwait
mov
aas
subl
xchg
stc
push
ret
ds
decl
or
negl
out
stos
ljmp
dec
and
int3
mov
fwait
mov
out
leave
leave
mov
fsubs
pop
mov
pop
mov
mov
mov
scas
gs
data16
mov
mov
mov
rolb
ret
jmp
pop
jecxz
cli
test
pop
and
xchg
ss
push
mov
movsl
test
frstor
jmp
movsl
dec
and
sbb
push
inc
in
sub
xlat
jbe
fidivs
incl
add
je
add
sbb
xchg
mov
jmp
jo
adc
mov
xchg
pop
mov
add
xor
push
and
mov
fwait
push
lock
lcall
out
pop
ljmp
and
repz
mov
loope
xchg
mov
pop
sbb
es
fcomip
xchg
jno
in
sub
add
aas
push
fwait
sub
out
pop
mov
pop
sub
jg
incl
scas
ficoms
mov
mov
and
lods
xor
mov
repz
incl
jmp
or
sub
jmp
ja
test
push
push
jp
cwtl
outsb
or
jbe
cmpsb
ja
dec
ljmp
movsb
adc
jne
sub
jge
and
outsb
cmp
movsb
add
decl
into
jns
aas
xor
mov
xor
in
daa
fwait
mov
fistps
test
aad
ljmp
jo
lcall
and
sbb
fisttps
jmp
out
sub
les
imulb
loope
in
mov
jg
jecxz
inc
cmp
mov
pop
jl
sbb
outsl
push
shll
jo
or
mov
aad
and
insb
mov
sub
divb
lcall
adc
ljmp
cli
mov
jmp
sbb
stos
or
daa
inc
insb
cmp
repz
jg
daa
sub
incl
xchg
mov
push
iret
adc
push
and
or
cs
ljmp
sbb
sbb
fsubrl
sub
or
cmp
pop
cmp
adcl
jmp
out
push
mov
adc
sbb
add
out
adc
and
jmp
cmc
out
dec
xchg
ret
mov
dec
out
test
ds
pop
xor
xlat
aad
pop
stos
call
and
bound
push
xor
and
lods
notb
xor
cmc
dec
std
ja
lcall
xor
pop
lods
into
jmp
dec
fwait
dec
fsts
mov
and
jcxz
out
add
in
data16
bound
jmp
in
adc
test
jo
pop
sub
push
outsl
pop
fistps
push
pop
sbb
test
xchg
dec
clc
incl
lret
lods
or
cwtl
test
ret
mov
inc
push
push
ret
cmc
ljmp
or
xchg
clc
aaa
and
mov
movsl
pop
cmp
out
push
and
fmull
push
mov
fstl
mov
add
imul
xchg
call
std
push
mov
mov
push
mov
mov
negl
scas
sub
icebp
incl
repz
xchg
out
jmp
inc
jle
cmp
cwtl
jns
pop
push
out
call
adc
xchg
cmp
shr
scas
test
jne
and
xchg
add
xchg
sub
sbb
outsl
cmpsl
in
ljmp
call
lea
shll
mov
sbb
outsb
jno
imul
das
adc
test
and
inc
add
push
addr16
pop
push
repz
push
clc
ljmp
sbb
cs
movsl
cmpsb
add
fcomp
loop
shlb
xchg
push
cwtl
push
push
cmp
ljmp
out
in
xchg
popl
push
or
xchg
nop
popf
xchg
push
inc
mov
cmp
incl
sbb
xor
and
movsl
mov
in
das
leave
cld
lods
pop
ret
dec
pop
stos
sub
jmp
push
sub
adc
xlat
mov
cmc
out
and
xlat
push
icebp
jmp
cmp
sti
xchg
and
fcom
cmpsb
xchg
cmpsl
nop
push
and
scas
sub
gs
jg
cmp
xchg
mov
in
incl
xchg
adc
sub
fs
adc
xor
jns
sub
adc
lods
popl
into
mov
jns
jg
in
or
lea
rorb
push
pop
inc
pop
cld
ret
decl
out
xchg
push
aam
dec
pop
movsl
xchg
das
cmp
cld
cmp
arpl
imul
xchg
fidivrs
pop
or
push
jb
mulb
jle
push
sbb
stos
popf
xchg
popf
mov
xchg
test
ret
mov
mov
jecxz
cmp
mov
fnstsw
lds
adc
daa
repnz
out
out
lods
lahf
mov
das
xchg
push
push
jns
out
cmc
sub
mov
mov
movd
scas
in
mov
pushf
sub
sub
push
lea
lock
js
push
fsubl
cmp
movsb
dec
mov
push
bound
or
lea
sbb
int
fbstp
jb
inc
xor
aad
scas
mov
nop
mov
nop
adc
cmpsl
jle
mov
data16
pushf
mulb
dec
es
dec
cmp
aam
adcb
pusha
xchg
into
out
int
ds
nop
cmpsl
jmp
pcmpgtd
dec
dec
jmp
push
outsl
fiadds
mov
xchg
mulps
adc
insl
movsb
out
hlt
push
daa
lret
out
xchg
mov
addr16
or
fldl
ljmp
out
lods
mov
jle
scas
cmp
or
push
dec
lods
addr16
lods
adc
ret
push
pushl
cwtl
stos
and
push
daa
inc
loope
push
add
subl
lcall
push
mov
pop
shlb
jae
mov
out
out
adc
lods
add
jmp
in
ret
xor
int3
inc
mov
mov
popf
cmc
scas
clc
call
call
pop
mov
push
lds
cmpsb
rolb
loope
pop
int3
sbb
pop
arpl
add
lock
fisttps
je
sbb
mov
and
mov
cltd
sbb
jg
decl
jle
adc
fs
push
aaa
ljmp
push
sahf
fcomip
addb
pop
call
andb
rcrl
or
incl
pop
arpl
jl
in
push
pop
in
push
std
roll
je
clc
call
arpl
adc
andb
movsl
rcl
dec
arpl
decl
movsb
imul
in
push
adc
adc
add
ljmp
add
jmp
popa
xchg
test
and
sub
mov
js
jb
jno
adc
pop
pusha
adc
push
movsb
xor
pop
stos
scas
or
outsb
and
ljmp
in
arpl
in
sahf
add
pop
aam
fstp
jecxz
hlt
lods
push
int3
lods
jg
dec
add
jmp
jb
arpl
jl
mov
pushf
addr16
xchg
adc
mov
add
ljmp
orb
jmp
movsb
pop
fs
mov
lock
call
or
cltd
jecxz
gs
dec
js
cld
arpl
dec
scas
rorl
mov
ficompl
fsts
add
lds
jmp
mov
aas
ja
addr16
mov
cltd
xor
push
cmpsl
and
mov
inc
jmp
pushf
push
cltd
jne
jbe
daa
cmp
roll
and
xchg
xor
ret
popa
mov
lock
shrb
jle
jo
sbb
movsl
in
nop
in
aas
inc
sbb
dec
call
or
cltd
push
scas
cmc
movsb
aam
ds
movsb
clc
hlt
in
cmp
dec
mov
test
lcall
pushf
xchg
stos
or
repz
xlat
xchg
mov
xor
jo
sahf
icebp
imul
pusha
icebp
fcmovu
pop
jbe
ret
mov
sub
pop
cmc
jmp
push
pop
lea
loope
inc
jo
cwtl
mov
ret
sahf
xchg
out
adc
cmpsl
xchg
jnp
daa
and
sub
incl
pop
or
adc
popa
pop
fistpl
movsl
jle
sub
cmp
xchg
icebp
xchg
xchg
mov
mov
dec
xchg
xor
xlat
fimuls
in
pop
loope
mov
jg
jmp
lods
popw
in
sar
xchg
and
lods
stos
jno
popf
jb
iret
mov
adcl
int3
jb
shll
mov
jmp
jo
lcall
in
mov
sub
fdiv
divb
pusha
lea
pop
imul
fildll
int
shr
sub
sub
repz
ljmp
fucomip
and
mov
xchg
jecxz
xchg
lods
xchg
aam
mov
push
pop
adcl
in
loopne
sbb
sub
ret
push
add
fstpl
movsb
xchg
in
cmpsb
outsb
add
addr16
incl
adc
and
adc
cmc
lods
sub
ljmp
stc
xor
xchg
fdivrp
in
sub
push
mov
mov
call
jo
sti
jg
sti
out
jo
fcmovu
mov
fidivrl
inc
mov
jbe
push
cmp
jmp
sub
inc
sti
jle
ds
jnp
shrb
das
xchg
push
out
loopne
adc
outsb
jmp
sarb
loope
shll
stos
call
pop
pushf
scas
imul
push
pop
push
add
cld
das
or
cld
xor
cmc
outsl
cli
decl
movsb
lods
lods
push
arpl
and
xor
ss
je
idiv
outsl
clc
pop
push
fwait
xchg
sub
movsb
fcmovu
mov
or
lahf
js
out
insl
pop
negb
cld
jmp
xlat
iret
cmp
repnz
xchg
xlat
sar
sbb
test
jl
loop
addr16
pushl
je
ds
jbe
adc
pop
sbb
xor
movsl
scas
dec
out
sub
jg
ljmp
dec
sub
fdivs
pop
cwtl
xor
push
das
popa
loope
mov
mov
sub
ljmp
mov
pop
fisubrs
imul
decl
cld
cmc
jne
jl
cmp
lahf
jns
dec
adc
push
fisubrs
cli
push
jb
pushl
jae
jno
jp
inc
or
aaa
fsubrp
inc
adc
repz
adc
lahf
jb
ltr
jns
ljmp
xlat
xlat
sahf
addr16
push
xor
cltd
sbb
xor
pop
sub
scas
xor
out
xchg
sti
cmc
mov
stos
mov
adc
jmp
pop
repnz
xchg
add
into
jns
push
repz
stos
loope
jmp
call
mov
pop
cli
inc
xchg
pop
popa
adc
xor
fdiv
mov
lahf
pop
es
daa
mov
inc
pusha
jno
cmpsl
pop
idiv
jle
js
decl
xor
push
mov
cmp
or
ljmp
mov
lods
sbb
ret
pop
sbb
lods
jl
push
cmp
jg
push
lea
add
loopne
arpl
xchg
push
arpl
jne
outsb
inc
adc
mov
sbb
push
pop
js
int
clc
push
ds
aas
aas
xlat
pop
jnp
sub
pushl
das
push
daa
mov
mov
fldcw
pop
fbld
sub
ss
xor
pop
sbb
out
out
adc
mov
fisttpll
jle
test
call
div
xor
mov
sahf
fs
xchg
push
imul
pusha
push
push
pop
andl
leave
loopne
scas
push
aam
cmp
loopne
pop
sahf
fistpll
mov
fistl
rcrb
pop
adc
scas
jb
imul
popa
xor
adc
xchg
fwait
popa
ds
fcompl
pop
push
imul
aam
mov
add
mov
filds
popa
stos
mov
lahf
push
outsl
xchg
ljmp
call
rorb
inc
leave
pop
popa
test
loop
loope
gs
das
clc
dec
aas
adc
xor
insb
dec
pusha
fs
jb
jnp
mov
mov
push
ret
pushf
loopne
adc
mov
call
xchg
inc
cli
loope
cs
insl
mov
fucomi
stc
pop
in
es
jmp
add
push
push
loope
std
mov
fnstsw
addl
add
dec
lcall
call
sub
pushf
jmp
hlt
xlat
inc
stos
push
jne
mov
mov
faddl
sbb
fwait
imul
loopne
aaa
push
cmpsb
rclb
lea
add
mov
lahf
loop
je
push
xchg
pushf
data16
decl
lret
cmp
sti
pop
mov
inc
fstl
xor
push
dec
lcall
push
lock
gs
addr16
mov
out
lea
je
mov
filds
pop
clc
jmp
fisttpl
out
fstpl
in
outsl
mov
jp
cwtl
jnp
fdiv
cli
out
in
or
movsb
bound
pop
or
cmp
or
das
ljmp
out
movsl
popa
mov
cmc
das
jbe
push
daa
sahf
ja
jp
imulb
pop
xchg
sub
push
ljmp
lea
adc
mov
pop
mov
in
out
xor
jl
inc
aam
cltd
imul
push
cmpsb
push
testb
sub
pop
popa
mul
out
les
push
je
lret
inc
push
jg
add
push
setge
sbb
inc
cmc
scas
faddl
add
mov
incl
sbb
inc
ret
out
cltd
dec
dec
lahf
sbb
pusha
aam
scas
xor
sub
jg
lcall
aad
or
mov
adc
pop
mov
fidivrl
call
fwait
push
xchg
sbb
push
jg
add
mov
mov
jae
sbb
rorb
pop
lock
ljmp
clc
ds
daa
pusha
imul
pop
imull
lcall
scas
lret
jecxz
test
mov
cmc
mov
pushf
mov
jg
add
cwtl
add
sub
shrl
push
cmpsb
lock
call
jo
lcall
sbb
sub
popa
lods
insb
pop
jo
decl
sbb
xchg
jnp
push
in
pusha
rcr
cmc
pop
fldcw
pop
mov
rcrb
lods
popa
pop
xor
mov
aad
call
test
out
test
aam
xchg
and
lcall
inc
rcrb
das
cmpsb
out
and
out
cmp
mov
sub
adc
call
in
jmp
xchg
or
lcall
loope
adc
call
mov
push
lcall
cmp
sbb
and
jle
push
outsb
mov
adc
jg
xchg
inc
push
fistpl
ret
aam
inc
xor
pushf
sarl
enter
lcall
idivb
es
cmpsb
adc
cltd
fisubs
loope
sbb
pop
pop
daa
sar
lcall
jge
inc
and
inc
cmpsb
iret
and
lock
mov
mov
cli
pop
fcomp
cmpsl
push
sar
fcomip
jg
into
dec
adcb
push
xchg
popf
in
aaa
xor
mov
mov
lcall
cli
sbb
lds
jle
aam
jo
in
dec
add
lcall
insl
dec
lahf
fnstsw
std
out
nopl
mov
aas
mov
lcall
push
and
popa
rol
add
inc
rorl
or
repz
mov
push
test
or
xchg
cmp
cld
sbb
andl
or
ljmp
sbb
jb
arpl
push
jo
xor
xor
xor
jb
sbb
jmp
fldt
fnstcw
and
rcll
andl
mov
shll
outsl
gs
sbb
stos
mov
fistl
add
rorl
ljmp
push
test
sbb
fldl
and
cmp
mov
pop
mov
xor
mov
call
in
mov
push
mov
js
pop
sahf
mov
jo
and
mov
mov
aas
adc
pop
insl
and
iret
scas
out
or
jne
sbb
pop
dec
xchg
rcl
test
cli
jmp
mov
jge
mov
push
xor
inc
pushf
pop
jno
cmpsl
cwtl
aas
mov
xchg
out
xchg
adc
inc
cmpsl
lahf
rol
scas
pop
add
ljmp
dec
dec
adc
sub
sbb
sbb
sbb
lahf
jg
pushl
scas
lea
icebp
push
xor
es
lahf
popf
cltd
mov
xchg
xchg
push
xchg
add
mov
outsl
sbb
lea
cmp
movl
jns
mov
jne
inc
leave
mov
fstps
xchg
add
int
push
push
insl
in
nop
cmp
pop
lods
incl
jmp
shlb
movsl
cmp
aas
push
nop
cmp
mov
xlat
cwtl
cmp
push
call
insl
xchg
lret
inc
xchg
movsl
ret
lret
dec
fsub
lods
push
add
fists
imul
subb
push
not
pop
xor
dec
imulb
dec
xchg
shr
dec
adc
ret
sbb
jge
rclb
je
popa
pop
iret
mov
incl
aad
push
fisubs
stos
fists
dec
mov
scas
mov
mov
pushl
add
pop
xlat
mov
inc
xchg
adc
or
popa
lcall
into
ret
adc
mov
adc
loop
aad
jl
outsb
stos
push
jnp
mov
cmp
into
decb
jg
imulb
sbb
repz
pop
xlat
push
jle
rolb
inc
and
loope
call
push
fdivr
push
fsubs
inc
adc
loope
aaa
daa
cmp
xchg
lcall
push
addb
mov
pushw
js
ljmp
cs
cs
leave
pop
decl
into
dec
movsl
into
pop
cmpsb
xchg
mov
lret
adc
add
jle
ljmp
out
and
inc
jo
cmc
jns
in
fstpl
lea
mov
mulb
popa
outsl
js
aad
out
popf
andb
pop
aas
pop
xlat
mov
mov
sub
jl
lret
add
fmul
pop
test
jg
push
push
inc
pop
pop
leave
sbb
pop
and
test
call
mov
and
pop
sbb
loopne
and
dec
movsl
cli
movsl
push
insb
mov
fistpl
scas
inc
ljmp
jle
je
cmpsb
xchg
lock
pop
ss
or
lcall
stos
frstor
mov
or
or
lea
dec
jno
fimull
sbb
cmp
mov
daa
jle
sbb
xor
mov
popa
xlat
xlat
cld
dec
or
mov
aas
cwtl
jp
dec
insb
in
inc
rcll
movl
call
jge
cmovl
out
dec
fsub
cld
shll
stos
es
mov
push
std
xchg
nop
jae
or
clc
dec
decl
insb
insb
movsl
loop
jae
pushf
in
sub
fists
push
or
lods
jg
in
cmp
add
push
push
dec
pusha
pushf
xchg
movsb
or
ja
loopne
mov
fisubs
popa
sbb
test
or
dec
notl
mov
and
lahf
ds
aad
mov
push
sbb
ja
std
in
sub
mov
scas
mov
lods
int
clc
push
outsb
mov
mov
int
daa
dec
cltd
mov
lcall
add
insl
xor
test
lods
mov
xlat
xchg
mov
cmpsl
cs
and
add
cs
jg
pop
addr16
imul
and
nop
arpl
cld
add
ljmp
dec
dec
jp
mov
rcll
sub
sub
xor
xchg
jge
cmp
and
lahf
push
push
std
ljmp
xchg
adc
stos
pop
cmpsl
jl
mov
or
pop
push
and
das
jle
or
out
and
xchg
in
or
inc
sti
or
add
icebp
or
decl
pop
pop
movsb
outsb
mov
cmp
incl
addr16
xchg
int
sbb
lahf
sub
xchg
adc
mov
mov
cli
push
lock
incl
mov
or
cltd
cmp
mov
call
iret
jns
pop
loope
aad
sub
jle
xlat
adc
dec
mov
ljmp
mov
inc
sbb
xchg
pop
xor
cmpsb
jns
dec
in
fimull
in
push
xchg
ret
jg
dec
imul
sbb
addr16
cmp
sti
mov
fcoml
push
jae
xchg
rolb
push
stos
push
push
ljmp
in
mov
push
idivb
inc
fsubrl
mov
fnstenv
outsl
jg
ficoml
adc
xor
out
jne
sbb
or
adc
sarb
pushl
or
fs
movsl
imul
adc
jmp
sbbb
dec
and
or
push
xchg
jbe
pushl
enter
mov
outsl
inc
jecxz
cmpsl
rcll
sti
test
pop
mov
push
or
mov
adc
push
aam
filds
jge
fdiv
fwait
add
xchg
lcall
adc
jae
adc
sbb
cmp
sbb
call
dec
enter
mov
incl
mov
push
adc
mov
mov
or
pop
push
stc
and
pop
mov
push
ss
adc
add
push
jbe
push
dec
incl
dec
aas
xchg
push
fcmovu
xchg
add
adc
stc
push
hlt
insb
fwait
xchg
es
mov
mov
mov
pop
je
xchg
lods
in
imul
test
xchg
push
clc
clc
ljmp
or
mov
push
jbe
int3
pop
or
mov
adcb
inc
or
jle
mov
fldt
mov
pushl
sbb
push
loope
into
fmul
jl
jbe
mov
cld
jmp
fadds
cmp
in
inc
movsb
ljmp
push
pushl
fistl
or
lea
jl
push
adc
cmp
jae
ds
lcall
mov
push
fisubrl
cwtl
pop
dec
call
xchg
xchg
dec
lahf
outsl
cli
lcall
mov
rclb
inc
cli
inc
or
addr16
call
sbb
roll
xchg
mov
ret
inc
into
push
push
push
psubw
test
lock
push
jb
call
in
jge
push
inc
fldt
pop
push
jb
cld
pushf
rolb
dec
or
cmp
or
inc
adc
mov
push
lret
add
adc
inc
inc
push
popa
int
test
sbb
incl
xor
rcpps
sbb
jb
ds
fdivr
xchg
icebp
jg
fstpl
ds
lds
inc
cmp
shrl
add
push
movsb
lahf
mov
fdivrs
loope
jnp
lea
or
xchg
enter
push
jno
jmp
add
shrl
push
sbb
mov
add
stos
out
insl
mov
sub
push
lds
std
mov
or
sbb
lock
or
adc
decl
push
jb
scas
jo
ljmp
jo
adc
fldcw
xchg
out
call
sub
mov
add
test
dec
and
dec
xor
push
adc
outsb
jns
int
jmp
adc
or
push
mov
das
popa
push
cmp
enter
repz
ljmp
in
aad
das
add
ljmp
jl
mov
cli
les
mov
push
xor
xchg
imul
imul
decl
jne
pop
dec
outsl
xor
jno
lods
adc
push
sub
sub
cwtl
les
jno
repnz
add
fsubrl
repnz
decl
lock
inc
aaa
in
mov
faddl
ja
stos
les
decl
addl
ja
enter
cmp
jg
xchg
xorl
inc
rcl
in
jb
addb
fidivrl
sahf
imul
je
pop
mov
lods
adcb
or
fsts
add
or
inc
mov
mov
sti
out
dec
js
in
ljmp
lds
adc
lcall
jmp
cmp
jno
add
sub
mov
xchg
notb
jns
jo
mov
jnp
mov
pop
shrb
jg
mov
movsl
inc
out
xchg
mov
cmovs
jmp
dec
mov
sub
shlb
dec
loopne
pop
xchg
incl
rcr
test
out
mov
push
fisubs
stos
pop
dec
ret
sbb
daa
add
cmpsb
adc
mov
dec
arpl
adc
mov
leave
icebp
adcl
jle
in
push
decl
mov
out
pop
xchg
dec
and
xor
push
pusha
xchg
dec
outsl
icebp
outsb
pushf
mov
jp
adc
sar
ljmp
movsb
insl
mov
add
jg
push
pop
fimull
xor
add
inc
ja
gs
test
push
or
shl
leave
mov
ljmp
xor
xor
sub
adc
sarb
sub
out
mov
iret
call
call
xchg
sbb
pop
gs
ret
test
adc
pop
pop
mov
cmp
pop
fstpl
insl
addl
dec
push
out
pushf
add
fistl
mov
sbb
nop
pop
cmp
mov
dec
out
push
clc
xor
lret
adc
cli
call
rorb
int
xchg
pop
fstpl
mov
add
fnstenv
push
out
cmp
pop
stc
mov
ficoms
arpl
inc
add
sub
imul
decl
pop
jmp
jle
lret
pop
lods
outsl
inc
sub
pop
int3
out
lahf
adcb
arpl
cli
adc
movsl
lds
pop
adc
ljmp
bound
or
mov
out
cli
jmp
pop
cmp
pop
fsubs
mov
int
rcrb
movsb
cmp
ret
pushl
loopne
rorb
sbb
mov
and
dec
pop
push
shl
aam
ljmp
pop
lahf
movsl
insl
dec
push
adcb
sbb
jmp
out
add
jns
pop
fsubrs
shll
imul
pop
mov
mov
std
inc
nop
ret
mov
and
push
repnz
pop
ljmp
or
in
or
mov
add
inc
mov
aam
notl
push
fdivr
cmpsb
xlat
lods
gs
addr16
or
jne
mov
mov
lods
or
sahf
ficoml
jl
insl
inc
mov
sbb
xchg
ds
xchg
insl
inc
xchg
cmp
test
mov
fldl
addb
insw
outsb
cltd
push
push
sti
add
or
pushl
add
mov
inc
fwait
aas
or
adc
es
cmp
subb
adc
call
aam
lret
inc
ja
mov
pop
push
or
stc
jmp
push
es
out
push
pop
aaa
cmpsl
and
pop
xor
ss
fisubl
adc
out
mov
decl
inc
cltd
movsl
subl
repz
decl
jp
mov
adc
mov
mov
repz
aas
iretw
push
inc
mov
add
mov
in
jg
mov
or
ret
fcos
jle
jg
lahf
test
mov
aas
lea
outsl
sahf
mov
inc
xchg
jg
ret
aam
push
cmc
jg
in
jp
mov
js
ja
xchg
cltd
aas
sbb
lcall
fwait
lcall
ds
ret
outsl
jge
inc
pop
int
and
xor
decl
addl
jge
adc
aam
pop
and
ror
mov
fcmove
insl
incl
pop
mov
lds
adc
xor
pop
mov
mov
pop
dec
jb
adc
jmp
jno
mov
daa
std
dec
inc
ret
sub
int3
push
lcall
call
out
fiaddl
repz
rcrl
rcl
dec
push
xchg
add
jmp
clc
lds
push
xchg
mov
xorb
jb
fimuls
xor
aaa
pushl
ljmp
fucomi
mov
mov
outsl
mov
mov
add
xchg
jbe
and
scas
imul
xchg
insb
push
mov
adc
cltd
decl
shrl
mov
ljmp
fdivrs
add
add
rorb
loope
sub
pop
xor
aam
enter
repz
fcomip
stos
push
dec
cltd
inc
or
add
adcl
fcmovnb
outsl
clc
decl
jecxz
in
pop
loopne
adc
test
fldl2t
mov
mov
sar
xor
jb
outsb
inc
ds
jp
repz
fnstcw
incl
push
data16
ljmp
xor
in
out
xchg
pop
into
xchg
cmpsl
nop
lods
mov
cmp
icebp
cmpb
adc
jae
xchg
jmp
xor
jmp
out
pop
cmp
int
pushl
sbb
xchg
lods
movsl
mov
mov
push
push
dec
and
adcl
cli
rorb
pop
sub
ficomps
cmpsb
je
mov
sub
decl
lcall
inc
imul
push
xchg
test
shll
mov
mov
nop
cmp
mov
inc
jg
mov
dec
xor
add
dec
cwtl
int3
call
popa
jp
call
test
mov
dec
out
sub
mov
jbe
xor
movsb
rol
subl
daa
test
or
cmc
icebp
daa
adc
dec
xor
xchg
sub
xor
adc
call
mov
lret
outsl
flds
and
xor
das
shll
push
jg
sbbl
xor
int3
into
cmp
push
mov
xchg
orl
mov
int
xlat
jl
aam
xor
aas
mov
cmc
sub
pop
cld
push
fistps
push
popf
lds
popl
cmp
bound
push
icebp
jmp
pop
jmp
faddl
loope
jb
imul
jg
push
cmp
mov
das
fidivs
xlat
shll
ljmp
sbb
pop
pop
mov
dec
ljmp
cli
inc
mov
int
xchg
dec
rcl
inc
and
push
xchg
into
mov
loopne
jne
push
in
xchg
pop
fs
jo
lret
pop
pop
jno
not
shrl
ja
jg
mov
push
pop
pushf
xor
cs
and
mov
mov
decl
and
mov
inc
pop
stc
sbb
aad
sarb
popa
xor
push
mov
mov
xor
and
pop
sbbb
pop
mov
or
inc
sbb
clc
std
enter
out
dec
adc
mov
jg
out
xor
in
xor
inc
les
cmp
mov
cmp
mov
pop
fdivs
scas
cmpsb
mov
and
mov
inc
popf
mov
ds
xchg
pusha
cld
les
xor
subb
test
xor
mov
insb
sahf
popa
out
xor
jmp
push
xor
and
or
dec
mov
sbb
xor
pop
or
push
or
icebp
rolb
clc
sahf
test
testl
into
push
mov
roll
popf
imul
mov
push
ds
pop
mov
pushl
test
and
and
dec
sbb
les
xor
add
subb
xchg
mov
in
inc
sbb
inc
and
pop
stc
jge
ret
lcall
rorw
dec
shlb
dec
mov
push
push
outsb
xlat
adc
mov
xchg
test
and
cmp
mov
fcomip
jl
sub
ss
nop
mov
inc
inc
mov
adc
incl
cmp
bound
or
cmovne
shlb
mov
jbe
ljmp
addb
cld
test
jbe
fisubs
mov
negl
jg
das
xchg
adc
mov
sbb
outsl
loop
mov
decl
sbb
ds
sub
pop
or
popa
mov
ljmp
idivl
pop
cld
mov
add
xor
ljmp
mov
push
std
push
test
movl
nop
xor
dec
lcall
cmp
xor
outsb
out
jp
cltd
enter
or
mov
mov
clc
ljmp
rolb
fadds
inc
andl
incl
icebp
mov
das
dec
pcmpgtd
cmc
jle
pop
mov
jg
xchg
xor
test
fdivrl
aas
push
repnz
pop
mov
fistpll
fidivrs
dec
adc
pushl
scas
jp
lods
scas
leave
or
and
into
lcall
lcall
repnz
mov
insb
jne
or
aam
fisttps
jle
cmc
sbb
push
inc
xchg
stc
or
decl
dec
mov
cli
or
pop
inc
or
push
fcmove
or
push
call
loopne
sbb
and
inc
cmc
or
push
xchg
inc
fisubs
jmp
cwtl
enter
xchg
cmp
push
or
out
scas
cltd
mov
lcall
fcomip
aad
jp
or
lahf
enter
lds
rcl
add
insl
out
mov
ljmp
push
shl
incb
pop
mov
xor
out
test
std
stc
xchg
add
aaa
sbb
push
sbb
test
or
outsl
jp
in
push
xor
ljmp
test
mov
adc
es
enter
add
cld
cmp
iret
add
mov
inc
int
sub
sub
outsl
jg
push
adc
add
leave
pop
jle
xchg
pop
adc
jl
add
outsl
cmp
dec
jb
das
scas
cmpsl
xchg
ljmp
add
psrld
pop
cli
and
cmp
inc
pop
adc
lcall
pop
sub
xchg
mov
sti
xor
push
and
jo
xchg
cmp
push
lock
mov
mov
pop
sbb
or
cs
pop
nop
inc
pop
xchg
pop
jge
sub
mov
mov
leave
enter
test
nop
lret
push
sbb
lcall
call
lds
leave
mov
scas
test
movsb
sar
inc
adc
fstps
hlt
shl
mov
test
xchg
cmp
xor
ljmp
clc
lret
mov
adc
cmp
scas
dec
aam
sub
add
test
ljmp
mov
adc
xchg
cs
loope
or
cmpsl
nop
adc
out
cli
incl
jmp
jle
ljmp
call
call
call
cli
cmp
jge
jle
filds
or
cltd
sub
adc
popa
loopne
jg
push
ret
jl
sub
mov
clc
fisttps
push
inc
fadds
shr
jl
incl
aas
adc
stos
mul
popf
pushf
dec
xchg
mov
jp
or
add
notb
cld
or
push
inc
push
cmc
mov
xchg
push
scas
imul
ja
flds
mov
jg
lahf
fcoms
call
xlat
jp
rcrb
out
test
inc
sbb
adc
push
loope
sahf
jecxz
faddp
mov
pop
or
cmpsb
incl
gs
jl
pop
cmp
lea
sub
dec
pop
decl
cmp
and
pop
mov
int3
adc
sub
xlat
add
cld
iret
add
sub
aas
loopne
push
sbb
es
dec
sbb
push
lret
std
lds
insb
addr16
add
fs
inc
int3
pop
lods
rclb
push
out
leave
jns
test
adc
push
leave
push
les
mov
xchg
jmp
insl
cltd
mov
xchg
jg
adc
mov
inc
mov
push
loopne
das
jp
outsl
push
hlt
add
aas
rorl
inc
call
sti
xchg
pop
mov
dec
jns
fcoms
ret
sbb
mov
xor
xchg
jmp
dec
cmpsl
pop
stos
test
repz
inc
xchg
push
lods
or
pop
out
repz
rcll
loop
and
jle
call
aad
push
xchg
pop
xchg
dec
enter
xchg
lcall
pop
fwait
or
andb
inc
cmp
loop
jl
les
inc
imul
pop
adc
negl
jae
adc
jle
in
mov
ja
outsb
je
in
inc
notl
adc
mov
mov
add
dec
aaa
jg
mov
incb
icebp
ds
jbe
das
add
lea
imull
push
sar
mov
testb
cmc
adc
es
idivl
repz
cs
call
inc
or
xor
lds
pop
repz
push
adcb
sarb
xchg
mov
dec
hlt
fwait
mov
jp
repnz
add
fcmovbe
enter
mov
clc
adc
xor
mov
pop
call
xchg
pop
mov
push
inc
loope
test
pushl
stc
gs
call
cmp
cmp
pop
lock
cmp
push
fwait
nop
adc
jg
mov
pop
lcall
dec
lods
cmp
leave
and
loope
aad
clc
jbe
xor
mov
cmp
icebp
cmpsl
jecxz
mov
sahf
imul
add
inc
arpl
loop
push
ret
clc
stc
pop
and
and
scas
out
mov
ljmp
pushl
pop
sti
incl
add
pop
inc
sarl
adc
pop
pop
fcmovnb
mov
je
cmp
inc
or
push
test
mov
inc
jno
sahf
fimull
es
jns
sub
jns
inc
shll
dec
sub
pop
xor
cmp
jp
shrb
pop
adc
jb
inc
xlat
orb
pop
push
pop
sbb
in
subb
lcall
push
rcll
or
xchg
cmp
scas
jp
pop
mov
divl
pop
lock
or
jge
shll
ljmp
out
cmp
std
push
clc
inc
jmp
lea
push
ftst
push
out
imull
das
xor
lods
cmpsb
call
ret
push
or
arpl
pop
cmp
subb
insl
sbb
test
out
sub
incl
mov
xchg
mov
sti
pop
dec
xor
jecxz
cmp
je,pt
xchg
clc
or
test
dec
add
insl
bnd
add
insl
cmp
repz
dec
or
cld
test
inc
les
shlb
cli
xchg
movsb
push
or
loop
stos
and
mov
dec
outsb
cmp
cmp
sbb
jo
xor
fsin
repnz
stc
aas
mov
add
repz
clc
incl
xor
stc
xor
clc
inc
js
mov
shll
cmp
jecxz
jae
jmp
jbe
xlat
rolb
inc
loop
mov
into
cwtl
bound
cmp
jmp
pushl
in
cli
jbe
jp
xor
cmc
add
pop
jne
popf
pop
cmp
fldenv
cmp
lcall
mov
push
sbb
inc
mov
and
lods
sbb
and
mov
nop
mov
incl
insb
shrb
or
sub
test
cmp
inc
sub
mov
incl
mov
popf
inc
mov
scas
push
ret
bound
bnd
pusha
cld
ds
cli
mov
mov
push
mov
int3
repnz
fcomps
imul
pusha
pop
int3
test
xor
aaa
mov
cmp
je
das
sub
decl
lahf
pushf
test
rorl
icebp
jo
cmc
xor
dec
sbb
jmp
ljmp
jo
jmp
out
rcrb
pop
scas
hlt
pushl
out
fisubrl
push
sub
and
jle
in
out
insb
cmp
xchg
jbe
inc
xchg
aas
popa
addb
sub
jmp
inc
arpl
push
mov
cwtl
rorl
hlt
loopne
addr16
push
inc
sub
push
mov
dec
int
std
icebp
push
stos
dec
ljmp
push
scas
insb
xchg
cmp
push
or
xchg
js
pop
mov
ljmp
mov
mov
int
xchg
push
imul
or
or
arpl
jmp
push
push
push
loope
je
insl
mov
call
loop
mov
icebp
sub
push
cs
ljmp
lds
pop
ret
ds
pushl
sub
pop
call
xor
push
xorb
pop
push
aaa
xor
xchg
cmp
das
decl
lods
lods
pop
icebp
cwtl
pop
xor
sbb
shl
cmpsl
out
mov
jecxz
in
shll
push
lret
clc
or
pop
daa
gs
cmp
sub
sti
out
sti
push
loop
mov
lahf
pop
test
pop
loopne
mov
in
sbb
rcl
mov
mov
rolb
je
adc
call
je
clc
movsl
mov
clc
into
lods
jg
decb
sub
les
scas
insb
or
xchg
ss
addb
ljmp
into
mov
push
mov
insb
call
pop
mov
push
mov
shl
cmp
mov
out
sub
pop
cmp
popa
mov
test
lret
icebp
mov
dec
fcmove
into
lret
xlat
das
scas
dec
jle
and
loope
sbb
add
jae
ss
cmpsl
mov
mov
shll
jp
jnp
in
leave
lods
cmp
mov
sub
cmc
lods
clc
pop
addr16
shr
mov
cmpsb
call
mov
test
mov
cmp
in
mov
addr16
push
in
inc
lret
add
lock
decl
gs
xchg
add
xor
out
cmp
cld
mov
insl
movsl
dec
decl
push
fistpll
stos
and
mov
fldl
lcall
inc
pop
inc
mov
mov
int3
cmp
stos
lret
sbb
popf
xchg
and
fwait
lcall
dec
out
jl
ljmp
imul
sbb
incl
enter
mov
jo
in
dec
xor
imulb
pop
into
mov
fldl
lcall
data16
stos
js
adc
lds
imul
aas
out
sub
out
inc
aam
lcall
daa
movsb
iret
daa
in
loop
sar
addl
leave
iret
ror
gs
popf
dec
cmp
sub
js
fbstp
mov
outsl
stos
repnz
xchg
mov
adc
adc
sti
push
sub
lds
mov
ja
cmpsl
sbbl
ss
fbld
insl
jge
sbb
icebp
sub
loopne
or
ljmp
mov
rcrl
jo
cmp
loope
xchg
mov
fucomp
jne
hlt
scas
sub
in
jg
lret
cmp
movsb
mov
cmpsl
mov
dec
jb
mov
std
scas
jmp
inc
mov
inc
adc
xchg
sbb
mov
mov
jg
mov
ljmp
addr16
sub
xchg
pop
popa
pop
movsb
gs
in
into
pop
add
sti
mov
ljmp
cs
jp,pt
sbb
mov
addr16
adc
dec
push
repz
es
bound
jns
ljmp
aad
loopne
mov
sub
mov
cmp
sbb
filds
daa
mov
cwtl
lods
push
mov
adc
rcrb
mov
jae
pop
icebp
fsubr
mov
cmp
pop
aas
movsb
add
outsb
and
mov
dec
xlat
cmpsl
xchg
inc
shr
sub
mov
inc
add
push
adc
jg
mov
loopne
addr16
mov
mov
arpl
adc
sbb
push
inc
lods
int3
ljmp
lahf
xor
std
cwtl
mov
and
sbb
inc
cmp
dec
lcall
incl
sub
sub
cmp
mov
inc
push
shlb
out
clc
movsb
xchg
xchg
lahf
imul
push
cld
fdivrl
push
adc
mov
dec
lcall
ret
std
inc
andb
hlt
fldt
pop
bound
jg
call
int
push
jae
stos
into
sbb
ljmp
cs
jae
and
sub
out
cld
xchg
jmp
pop
out
gs
sar
jg
mov
jbe
insl
dec
sahf
lea
sub
jae
mov
lret
xor
imul
movsl
sbbb
sub
scas
cmp
decl
arpl
das
mov
sub
xchg
jp
cmp
fcomip
incl
fbstp
cwtl
mov
movsb
inc
daa
push
mov
aad
cmp
dec
jnp
jmp
jp
lret
sahf
mov
cltd
popf
add
mov
mov
int
add
mov
imul
push
sbb
add
retw
and
lcall
jb
mov
jmp
pop
cmp
sub
fcomip
mov
cltd
int
jbe
shr
cmp
test
stos
xor
or
imul
adc
mov
mov
lcall
subl
enter
adc
mov
cwtl
pop
inc
jae
pop
xor
push
inc
popa
clc
mov
sbb
xor
or
and
enter
pop
stc
ljmp
sahf
inc
int3
xlat
mov
pop
jp
out
push
and
imul
sarb
dec
ljmp
dec
sbbl
xchg
mov
cmpsl
pop
lahf
mov
jbe
insb
mov
decl
xor
bound
inc
aam
in
mov
cltd
xchg
lahf
out
xlat
int3
fnstsw
cltd
mov
push
push
sahf
movsb
cmp
adc
or
sub
in
sub
stc
cmp
lods
fst
pop
push
sbb
add
in
adc
inc
bound
inc
and
jnp
js
aaa
lcall
push
cmp
cli
pop
mov
sbb
ja
in
sub
scas
add
call
sub
mov
inc
lcall
mov
repnz
mov
xchg
jecxz
pop
and
jnp
mov
sbb
clc
jg
in
pop
mov
cmc
mov
pop
ljmp
jmp
lret
lock
stos
mov
pop
push
jg
pushl
fisubrl
push
ss
and
sarl
in
ja
call
sub
pop
adc
scas
mov
xchg
dec
mov
inc
mov
scas
mov
out
scas
aaa
add
xor
jle
clc
nop
test
xor
jl
adc
pop
or
js
jg
negl
popa
loop
xchg
mov
in
xchg
orl
xchg
test
stos
xchg
adc
hlt
ja
ljmp
pushl
fdivl
ss
sub
mov
xchg
or
into
adcl
ljmp
jmp
clc
mov
cmc
mov
ficoms
jmp
push
cld
and
sub
xor
xchg
mov
shlb
xchg
pop
pop
in
jne
jne
cmc
lods
jecxz
or
test
iret
sub
addr16
test
ds
cmp
jmp
dec
xchg
lods
xlat
js
inc
fbstp
sub
out
popa
xchg
lret
sti
movsb
inc
sti
xchg
ljmp
or
mov
sti
ljmp
mov
xchg
xchg
arpl
cmpsl
cmpsb
and
mov
cmc
xchg
pop
mov
xchg
loop
inc
pop
jns
cmp
xor
mov
subl
nop
xlat
inc
adc
sbb
sahf
mov
decl
js
hlt
in
ret
xor
mov
push
gs
add
outsb
pushl
shr
aam
xorb
ja
cmp
aas
cmp
dec
sbb
loop
ljmp
clc
or
aas
clc
out
sub
loopne
jmp
jg
daa
js
add
incl
out
or
lds
lret
and
pop
jg,pn
int
movsl
xchg
xor
es
lcall
xor
xor
aas
adc
es
sub
sbb
push
dec
jo
pushf
mov
mov
call
int3
cs
lret
enter
add
fistl
jecxz
jmp
xchg
jno
jecxz
fwait
xor
push
cmc
jo
mov
ja
xchg
sbb
mov
mov
pop
out
je
cmp
outsb
sub
sub
inc
scas
push
mov
jo
ja
jmp
neg
push
repz
push
jb
scas
add
mov
cld
gs
xor
jb
neg
aad
mov
fs
sbb
jb
shld
test
push
sbb
outsb
sbb
xchg
jg
into
clc
out
mov
daa
je
into
outsb
into
sbb
pop
pop
lcall
jnp
imul
jno
in
ficoml
fistl
mov
clc
jo
addr16
lcall
ret
push
les
push
aaa
add
push
or
enter
xor
mov
scas
and
mov
xor
sahf
lods
call
popa
lcall
test
sub
insb
pop
or
into
clc
pushf
gs
jmp
imul
push
push
mov
in
aas
jg
lds
out
dec
mov
sbb
je
adc
aas
insb
push
push
jb
add
fidivrs
adc
rorl
mov
notrack
fs
xorl
sub
lahf
dec
push
mov
enter
push
adc
mov
xor
push
sbb
popa
jg
push
jle
ljmp
repnz
dec
in
jmp
lea
adc
jmp
popf
jge
mov
jns
xor
mov
popa
inc
notb
dec
cmc
fdivp
inc
cmp
cmp
cld
push
cmp
mov
aaa
cmp
imul
push
dec
in
inc
lret
aam
sbb
add
daa
shll
arpl
pop
psubw
mov
incb
ficoml
sti
fstl
ljmp
cltd
scas
xor
rorb
popa
pop
or
pop
icebp
call
pop
xchg
out
add
imul
inc
jp
incl
mov
xchg
sbb
mov
int
mov
lods
mov
add
mov
mov
enter
jbe
push
imulb
cli
and
add
cmpsl
add
mov
call
jno
jl
sbb
outsl
cmc
fisubl
sub
lods
outsb
cli
jb
push
sarb
pushl
xchg
dec
insb
popa
dec
pop
push
hlt
mov
cmc
lahf
push
mov
push
sub
sub
sub
xchg
mov
xchg
rcrb
push
jle
ja
jecxz
jg
lods
cmp
insl
pop
jbe
dec
gs
les
add
mov
ljmp
pop
aaa
pusha
pop
cli
xor
int3
mov
in
push
inc
push
pop
outsb
fsubl
das
ljmp
mov
sub
cmp
mov
data16
divl
insb
movsl
imul
pushl
std
call
jmp
mov
imul
ficoms
mov
decl
xor
jo
iret
lcall
jp
or
scas
repnz
cmp
clc
lcall
movsb
push
jo
mov
test
push
pop
ret
inc
ja
add
cmp
inc
push
mov
shrb
jge
ja
xchg
xor
dec
jno
mov
das
testb
scas
mov
jne
jno
loopne
mov
stc
int3
lds
decl
adc
daa
ss
dec
mov
mov
cmp
xchg
pop
push
std
pushl
jno
nop
stos
mov
mov
push
stos
or
ja
mov
pushl
popf
fwait
sahf
jmp
mov
xchg
or
mov
mov
push
js
fst
icebp
decl
cmp
mov
pop
pop
outsl
cmp
fistpll
push
pop
outsl
adc
pushl
inc
dec
mov
push
jl
mov
mov
movsb
insb
lret
sarb
es
mov
lahf
pop
lret
test
popf
sbb
cmp
jmp
gs
arpl
push
arpl
mov
jmp
filds
xor
mov
mov
das
add
cmp
das
shrb
in
hlt
cmp
imul
pop
cld
jecxz
int3
lahf
and
cmp
aam
pop
fs
test
insb
std
jg
pop
into
adc
imul
push
pop
stos
and
jae
lock
ljmp
or
test
xor
mov
insb
jg
or
mov
aas
cltd
stos
in
stos
jno
sub
mov
decl
cwtl
lret
popa
outsl
add
cmp
aas
push
push
out
mov
or
dec
test
movsb
in
cmp
jg
bound
pop
lcall
inc
stos
aaa
sub
out
adc
push
cld
lret
mov
test
iret
out
enter
fs
ffree
outsl
fbstp
push
jno
mov
push
lea
dec
outsl
lock
incl
int3
divl
mov
aas
sbb
xor
sub
mov
scas
sti
mov
das
ss
aas
xchg
bnd
fwait
or
out
clc
push
xchg
cmpsl
mov
sub
call
mov
int
jmp
push
add
pop
shrb
cli
fldt
mov
xor
jmp
rolb
mov
adc
lret
int
outsb
mov
test
sub
scas
daa
mov
out
pushl
repnz
outsb
xor
or
fnstsw
mov
gs
decl
pop
jp
stos
cmp
es
cmp
pop
aad
xor
insb
stc
scas
stc
jecxz
inc
sti
mov
ss
call
stc
xor
sar
dec
loopne
pop
movsl
call
jg
lcall
push
jne
pop
pop
sbb
fdivs
pop
filds
ljmp
movsl
out
std
lods
inc
scas
bound
push
jmp
aad
aad
les
cmp
cmpsb
sub
dec
popa
mov
sub
rol
ss
xchg
loope
js
push
jle
outsl
lret
sbb
scas
daa
cmp
xor
pop
mov
clc
lock
pop
ss
das
sub
insl
fnstenv
popf
addr16
jmp
jge
test
sti
movsb
jle
xor
cs
xor
out
fsubrl
mov
aas
jmp
fisttpll
insl
xor
stos
ja
jp
inc
inc
add
fs
mul
xrelease
xchg
scas
fildll
mov
push
inc
and
popf
sub
aaa
push
mov
lcall
lcall
mov
fbstp
lds
pop
fcoml
decl
pop
pop
in
xlat
cs
pop
aaa
mov
repz
imul
xor
inc
jmp
xor
xchg
mov
mov
fsubr
cmc
ss
aaa
cmc
jge
data16
in
scas
jge
sti
sub
testl
ljmp
aaa
dec
and
in
jmp
and
insb
out
cmp
jb
les
xchg
scas
test
jg
ljmp
xchg
js
fisubrl
in
cli
test
sub
jle
scas
cli
sbb
outsb
es
sub
push
cmpsl
fnsaves
cld
call
lret
cmc
dec
xchg
scas
cmp
lods
or
inc
in
dec
test
out
push
or
cmp
xor
adc
push
mov
enter
cs
out
adc
ss
insl
mov
out
xor
aas
and
sub
push
xor
mov
sar
xchg
dec
ss
movsb
fs
pop
call
sub
jecxz
jbe
adc
lcall
sub
jmp
or
lahf
in
cmpsl
movsl
cs
add
mov
ret
aas
out
push
mov
pop
jne
mov
push
inc
lods
hlt
mov
stos
xor
out
ja
popf
lock
inc
test
les
out
fldcw
inc
cmc
xchg
out
insb
ljmp
inc
mov
lds
adc
and
scas
push
jb
paddusb
pusha
xor
xor
mov
push
call
adc
xor
call
mov
jg
jbe
push
sub
test
xor
lock
js
push
in
loope
xchg
stos
das
cs
lock
call
aaa
xchg
das
mov
bound
pop
scas
outsl
aaa
mov
ds
or
mov
lea
cs
fldt
inc
jl
mov
sub
push
in
mov
push
lods
dec
repz
inc
leave
xchg
dec
push
jo
push
jae,pn
aaa
mov
dec
cmp
iret
sbb
cmp
shlb
fildl
out
mov
out
pop
das
popa
xor
out
insb
sub
fbld
fildll
xor
mov
and
sbb
dec
scas
insb
jbe
mov
sbb
inc
xlat
ljmp
ja
sub
orl
add
andl
popf
sub
fnclex
movl
and
rclb
xchg
jb
ljmp
cwtl
jns
and
mov
ljmp
mov
or
popf
movsl
add
mov
cmp
call
lods
shlb
aas
repnz
mov
sbb
pop
nop
outsb
add
sub
or
mov
ljmp
push
mov
in
push
lcall
inc
icebp
push
insl
daa
imul
mov
mov
gs
cltd
sti
xchg
push
xchg
movsb
rcr
in
cmp
clc
cs
inc
outsl
cmp
xchg
icebp
cmp
ljmp
decb
xchg
neg
add
das
out
sub
out
jmp
hlt
out
and
xlat
inc
and
out
insl
jp
ja
jle
sahf
inc
dec
pop
aas
imull
adc
ljmp
inc
push
inc
lcall
push
mov
stos
les
lock
push
push
push
not
ljmp
data16
outsl
mov
dec
and
xchg
dec
ljmp
negb
ljmp
dec
sbb
mov
push
sub
adc
inc
jbe
outsb
jle
or
inc
imul
push
inc
add
dec
rolb
movsb
test
fimull
cmp
cmp
sar
jmp
imul
addr16
repnz
aam
cmp
pushl
pop
fiaddl
push
stos
in
fildl
mov
lret
adc
call
cmp
mov
push
notb
repz
cltd
js
mov
pusha
les
inc
rorl
in
mov
call
cmc
sub
mov
stos
cmp
lods
inc
dec
fsubrl
shrb
push
push
mov
jg
lret
out
adcl
add
out
mov
out
push
cmp
jecxz
jge,pn
xor
out
sahf
adc
lret
mov
out
and
mov
pop
shlb
sub
adc
push
fimull
mov
int3
mov
adc
push
and
scas
jnp
sub
sahf
xor
pop
and
aaa
fstpl
icebp
incl
int3
cmp
adc
icebp
and
sbb
lcall
scas
fldenv
adc
int3
std
popa
xlat
push
push
push
out
inc
dec
rclb
rcrl
stos
data16
sub
cmpsb
pop
inc
jp
ljmp
dec
stos
ret
scas
clc
lea
and
pop
mov
leave
sub
das
mov
inc
lods
imul
out
fisttpll
add
mov
cmp
pusha
cs
pop
sub
mov
call
sub
sbb
jns
and
add
cmpsl
dec
lret
and
adc
out
aas
mov
repz
stos
xchg
xchg
sbb
lret
jg
cmc
cmp
mov
cmp
ret
in
push
cmc
sub
stos
cmp
fwait
cmc
mov
adc
sbb
sub
sbb
pop
stos
sbb
call
cli
sub
mov
adc
and
xchg
mov
mov
addr16
lcall
out
cld
dec
sarb
add
data16
mov
dec
mov
jb
cmpsl
inc
cli
cmp
and
popl
aas
popf
jmp
cmp
stos
cmp
and
push
repnz
scas
loope
cld
cmp
pop
lret
xchg
cli
inc
pop
ljmp
rorl
outsl
sbb
xor
cmpb
cld
into
mov
or
xor
adc
push
repz
jecxz
adc
decl
mov
inc
sarl
daa
mov
mov
or
jmp
loop
out
movsb
sbb
sub
lret
push
outsb
call
or
jmp
pop
push
cmp
stc
cltd
imul
lcall
imul
cmp
mov
es
pop
aam
xchg
mov
movsb
mov
stos
cmpsl
fistps
ljmp
pop
adc
scas
sbb
data16
adc
nop
out
sar
dec
xchg
and
sbb
sbb
push
loope
or
mov
mov
push
pop
mov
push
out
adc
es
xchg
mov
cmp
outsl
addr16
decl
mov
ljmp
lods
sub
shr
out
xchg
ljmp
leave
sarl
sub
test
out
rolb
sub
and
sbb
cmpsb
pop
xlat
dec
push
in
or
xlat
xchg
xor
insl
add
sar
out
jge
inc
mov
pop
mov
lock
dec
pop
push
xchg
sub
je
adc
mov
decl
cmp
dec
mov
in
or
adc
add
jmp
out
dec
xor
and
mov
cvttps2pi
or
dec
and
jle
addr16
test
jl
andb
sbb
outsb
adcl
and
sbb
and
inc
scas
mov
jmp
leave
ss
inc
and
push
out
dec
sbb
add
jmp
pop
out
cli
push
es
add
mov
mov
cmpl
add
cmp
pop
mov
mov
mov
sbb
sub
add
cmpsb
dec
mull
xor
jmp
push
fwait
ljmp
cmc
scas
cmp
stos
int3
push
cltd
xor
pop
daa
sub
test
sti
cmp
call
fs
mov
xchg
ret
mov
out
fwait
or
scas
es
mov
pushl
sub
jle
outsl
scas
fs
mov
ret
pusha
daa
ljmp
out
rcl
jp
xchg
call
cmpsb
das
sub
lahf
cs
mov
xchg
loop
jb
mov
imulb
push
pop
or
lret
in
xchg
cmpsl
fidivs
gs
jle
daa
mov
xchg
sbb
out
pop
sbb
xchg
ljmp
push
adc
sub
es
cltd
call
dec
push
sub
pop
mov
xor
aad
call
mov
movsb
stos
xor
jmp
sub
add
out
cs
add
mulb
testl
ds
es
das
rcrb
ja
jmp
ljmp
out
sbb
shll
imulb
mov
push
mov
ss
and
fistpll
pop
loopne
mov
and
decl
inc
lahf
or
xlat
es
adc
add
push
fbld
fstpt
add
adc
mov
xorb
mov
insb
pushf
push
pusha
inc
int3
ds
fnstcw
lods
adc
std
incl
xchg
mov
sub
xchg
push
fsub
sub
int3
adc
sti
cmpb
mov
adc
jge
aad
loope
das
js
push
movsl
dec
mov
sarl
ds
cmp
jmp
push
outsl
or
ds
xor
loop
into
add
xchg
movsb
mov
or
push
lret
and
mov
addr16
or
adc
incl
and
mov
jp
daa
in
lds
faddp
ret
sahf
in
call
lcall
jecxz
jp
addr16
and
mov
in
mov
scas
into
clc
xlat
adc
cld
decl
pop
or
and
jae
jne
iret
test
aas
pop
fistpll
jmp
pusha
cmp
adc
jo
fsubrp
in
xchg
iret
out
mov
fld
jg
mov
mov
push
xor
aas
xchg
lcall
cmpsl
ss
imulb
daa
std
xor
in
and
mov
cmp
add
xor
addr16
or
sub
cmp
call
clc
mov
fcompl
hlt
jmp
test
mov
mov
mov
in
popf
icebp
fsubp
popf
mov
daa
add
mov
rcll
add
rclb
dec
inc
es
cmp
aam
cmc
int3
and
pop
mov
ljmp
repnz
rcr
shlb
test
add
jecxz
or
sub
push
popf
pushf
les
add
mov
xchg
fwait
inc
or
rolb
filds
test
mov
pop
xor
push
negb
mov
lcall
inc
movsb
add
jge
cltd
mov
notb
adc
xor
mov
sahf
mov
sub
or
push
out
and
popa
sahf
imul
xor
adc
popf
ss
jmp
rcll
loope
ja
pop
adc
std
xchg
jle
icebp
stos
add
dec
jnp
sahf
mov
out
cmc
data16
call
arpl
das
movsb
xchg
arpl
rolb
aas
loope
test
pop
mov
and
icebp
incl
sarl
das
dec
mov
pop
test
pushf
xchg
leave
sar
pop
mov
xor
fwait
movsl
pop
mov
imulb
fucomip
dec
daa
aaa
hlt
jg
and
push
push
int3
test
sbb
das
outsl
and
mov
inc
andl
cmpsb
adc
sahf
in
mov
jmp
loope
mov
inc
in
fildl
adc
sbb
adc
gs
jle
fistps
or
mov
add
mov
pusha
lret
test
lcall
xlat
mov
call
pop
cmp
ss
inc
fdivl
mov
loop
xchg
mov
loopne
ljmp
lcall
arpl
jp
and
in
mov
mov
fsubrl
xchg
cli
pop
xchg
nop
cld
push
aaa
jnp
outsw
fsubrl
pushl
ret
movsb
mov
popa
xor
lahf
fildll
aas
loop
push
dec
and
call
aaa
xchg
add
sbb
inc
xor
lock
dec
mov
lahf
mov
frstor
dec
add
and
or
fistpll
adc
aam
daa
push
dec
mov
scas
das
rorb
movsl
sub
xor
jle
pop
lahf
decl
mov
cli
jne
bound
mov
imul
cmp
add
pop
imul
call
fucom
xchg
out
pop
shll
mov
or
push
fcomip
push
inc
lods
add
fistps
pop
and
mov
inc
ret
push
int3
outsb
add
fiadds
or
and
lahf
loopne
into
sahf
stos
adc
lret
test
out
and
xchg
mov
insl
gs
push
loopne
sbb
imul
es
jne
xchg
shll
scas
or
and
pushl
clc
dec
adc
cmp
cmpsb
lahf
aad
sbb
cld
outsb
loope
jl
jl
push
outsl
movsl
inc
jg
lcall
xchg
data16
add
or
pop
dec
sbb
pop
mov
pop
mov
icebp
ret
call
decl
shl
sbb
xchg
pop
and
das
adc
xchg
mov
cmc
or
ljmp
cmpsb
into
pop
xchg
loope
or
aas
out
out
das
cmp
clc
ljmp
inc
negl
cmc
inc
xlat
sub
and
std
popa
xchg
repnz
fcomip
call
jmp
rcrb
sbbb
inc
ds
pop
xchg
pop
pop
push
lcall
xchg
push
fimull
fnstenv
mov
mov
in
cmp
pushl
in
das
cli
inc
xor
ja
cmp
int
and
mov
incl
ja
fwait
sub
add
sti
call
sahf
popa
xchg
jbe
pop
fidivrs
cmpsl
iret
xor
ljmp
mov
imul
lods
test
xor
push
pop
mov
decl
mov
or
mov
dec
in
pop
jo
sahf
popf
sti
mov
ds
decl
inc
loope
repnz
push
cmp
loop
gs
inc
imul
pop
hlt
or
lcall
rclb
gs
jmp
out
clc
lcall
jb
pop
mov
std
jb
pop
orb
mov
sbb
cmp
popa
fnstsw
cmp
test
negb
pop
add
bound
icebp
inc
mov
inc
lods
lahf
push
jo
mov
jp,pt
jbe
adc
pop
pop
hlt
sbb
xor
mov
iret
jp
arpl
pop
fs
mov
sbb
or
push
jae
jno
jne
bound
loopnew
jne
cltd
loop
mov
sbb
jns
jb
cmp
and
fwait
cltd
push
sbb
xchg
mov
xor
fmull
fdivrl
int
mov
movsl
push
or
aaa
cld
lcall
or
cmp
mov
dec
pop
mov
xchg
inc
stos
pushl
nop
fdivrp
in
pop
fbld
das
mov
stc
mov
ficompl
call
push
ja
xlat
loopne
push
add
sbb
pop
dec
pop
leave
cmc
int
mov
clc
ljmp
xchg
icebp
add
std
arpl
scas
pop
or
mov
pushl
cmp
sbbl
je
pop
clc
pop
add
cmc
out
inc
call
shll
les
lock
mov
subb
ljmp
cmp
jmp
cmpsl
int
dec
jae
jb
stc
cmp
adc
imul
cmp
add
or
andl
jge
je
dec
cmp
jg
idivb
loop
ljmp
cmpsl
sbb
xor
mov
jno
or
test
push
push
xor
mov
jg
or
into
clc
jg
push
cld
mov
jb
sahf
lret
repz
pop
jae
es
xor
mov
push
lods
ja
mov
out
dec
das
dec
mov
pushf
iret
shlb
lods
pop
mov
out
xchg
push
loope
je
cwtl
les
jbe
lret
mov
outsb
call
sub
loop
fwait
ja
jbe
jbe
sub
pop
cmp
popf
inc
push
and
mov
mov
lcall
out
loopne
decl
lock
or
mov
pop
in
popf
mov
mov
pop
clc
adc
or
jnp
xchg
and
cld
das
andl
ret
jl
lods
incl
sti
cmp
jne
dec
ja
push
nop
xor
add
call
adc
mov
incl
or
sbb
pop
fsub
cwtl
xchg
xor
sbb
cwtd
xchg
repnz
lock
sti
push
out
jg
loopne
inc
mov
jmp
and
cmp
cmp
or
stos
lds
daa
pop
push
mov
test
push
mov
test
mov
in
in
adc
mov
popf
sub
out
pop
icebp
push
jbe
jmp
sub
les
fsubrs
hlt
mov
sub
xchg
inc
jecxz
nop
rcr
jns
lea
cmp
shrb
adc
sub
or
stos
cs
xor
cld
fimull
out
call
aad
mov
mov
stos
xor
daa
push
mov
jmp
xor
loop
push
xchg
xchg
sti
mov
psrad
outsl
jns
xchg
xor
add
jmp
cmp
push
xor
xor
fcmove
repz
outsl
std
pop
aam
leave
or
imul
mov
add
stos
cli
push
sahf
sbb
jnp
ja
fidivl
aad
std
test
daa
fldcw
jle
loopew
push
shll
cs
imul
lret
movups
lea
pop
fs
popa
das
lea
mov
popa
jp
mov
adc
loop
icebp
fwait
and
in
push
idiv
pushl
jle
arpl
xor
push
orl
mov
pop
inc
lcall
cmp
out
aad
add
testb
fs
call
popf
add
stos
sar
cld
pop
sub
sub
mov
push
sub
js
mov
xor
sub
jg
sub
lret
lock
cs
xorb
push
push
popa
sub
xor
jo
mov
mov
inc
mov
push
push
xchg
adc
insl
subb
adc
jg
adc
fldt
inc
and
outsl
fwait
bound
es
inc
pop
bound
and
aam
and
cmc
insl
xor
and
ljmp
aas
out
add
out
pusha
in
iret
das
inc
xlat
imul
or
xchg
pop
call
sub
add
nop
jne
sbb
pushl
mov
inc
ror
push
sub
jp
sub
pop
lcall
mov
ljmp
jmp
cmp
scas
mov
push
add
loop
push
fsubs
jp
lock
incl
push
shrb
cmpsb
push
and
test
popa
or
jae
xor
adc
ljmp
test
jp
adc
push
imul
dec
in
lcall
call
shl
lods
cmpsl
leave
loope
test
jb
outsb
rclb
jg
lcall
pop
adc
jecxz
xchg
je
test
jg
mov
mov
loop
popa
lahf
gs
sti
pop
xlat
mov
pop
push
inc
movsb
scas
pop
hlt
call
aam
outsb
fninit
lds
pop
dec
jmp
pushf
gs
adc
inc
out
inc
dec
pop
addr16
rcr
aad
jg
inc
sbb
mov
xor
das
mov
adc
decb
pop
sbb
pop
pop
imul
lcall
sahf
adc
mov
es
es
and
push
pop
push
add
jg
fsubl
fadds
bound
out
sbb
push
lret
out
or
mov
jmp
jb
sub
xlat
pop
ret
ss
mov
cltd
ja
mov
fidivrl
ror
jmp
rcr
cwtl
popa
cmp
test
in
push
jns
scas
dec
pusha
outsb
pop
push
popf
test
fdivrl
mov
jmp
cmpsb
adc
lahf
cwtl
loopne
mov
outsb
jo
sbb
mov
call
or
mov
ficompl
push
fistpl
cli
sbb
test
imul
call
cld
out
int3
gs
adc
ficompl
xchg
jecxz
ds
add
pop
dec
cmpb
bound
cld
jae
shlb
gs
xchg
inc
mov
jle
mov
outsl
jae
jne
dec
test
pop
xchg
dec
cltd
sbb
pop
sar
jg
mov
xchg
test
adc
shrb
rorb
movsb
dec
jg
jmp
sub
in
scas
aam
rol
pop
xchg
and
adc
pushl
lcall
adc
out
sbb
out
pusha
ficoms
enter
jmp
dec
xchg
sub
scas
cwtl
data16
push
pop
jge
gs
sahf
jne
ljmp
inc
outsl
sahf
ficompl
xor
cmpsl
fmuls
incl
cltd
dec
dec
iret
xor
test
dec
cmpb
loope
xchg
ficomps
or
ljmp
adc
inc
jo
icebp
iret
dec
add
mov
add
test
cli
gs
jg
incl
cmpsl
shlb
mov
lahf
jae
xchg
int3
pusha
nop
nop
or
dec
xor
decl
cmp
das
inc
pop
andb
jge
sbb
or
mov
push
add
add
ds
pop
addr16
cld
dec
pushf
sar
pushl
cmpl
leave
test
and
sbb
pusha
imul
pushf
push
inc
fistl
fs
sbb
mov
add
sbb
je
or
mov
out
mov
stos
lcall
jo
cltd
ret
mov
or
fcomps
dec
call
pop
aam
sub
mov
sbb
push
xor
xor
cmpsb
out
subl
scas
jns
decl
lock
mov
shll
mov
cmc
sub
repnz
incl
ljmpw
jecxz
pop
scas
mov
inc
enter
xchg
push
pop
mov
cmp
nop
clc
fldl
cmp
jns
xchg
pop
push
lahf
sahf
mov
xchg
push
mov
lcall
pop
fnstcw
inc
adc
ficompl
dec
sbb
push
test
pop
pop
enter
pushl
out
pop
out
push
jo
clc
aas
or
in
fs
push
cltd
pop
loop
inc
pop
jb
into
mov
lods
mov
xchg
iret
pop
mov
int
adc
movsb
or
fcmovnu
mov
adc
pop
cwtl
lods
push
fs
lock
mov
adc
je
mov
pop
jae
fwait
orl
jo
cmp
movsb
in
movsb
in
aad
cltd
adc
mov
das
xor
loope
inc
dec
pop
lock
fadd
pop
repz
sbb
cltd
out
sbb
and
outsl
pop
push
xchg
and
inc
shr
mov
sbb
out
lcall
sbb
cmp
pop
aad
outsb
mov
lods
das
fmul
cmp
or
lcall
add
ja
ja
leave
leave
and
pop
loope
aam
outsl
adc
jl
in
addl
or
push
out
movsb
pop
in
aas
int
mov
cli
xchg
lret
rolb
aas
add
lcall
mov
pmaddwd
xchg
imul
push
pop
ss
into
pushf
jns
push
jne
lods
leave
pop
cs
dec
scas
or
orb
sub
pop
xchg
jnp
pop
dec
xchg
dec
test
out
xchg
shlb
push
fidivrs
or
dec
in
into
or
xor
mov
xchg
decl
mov
adc
roll
test
pop
jnp
xchg
lds
xor
sub
push
fwait
sub
mov
cmc
inc
adc
dec
bound
inc
in
sub
call
int
lret
adc
rcrl
mov
adc
cmp
clc
cld
jnp
std
sbb
call
popf
fwait
push
lret
xchg
ljmp
fmul
inc
jo
add
lods
outsb
and
stos
adc
sub
adc
ljmp
pop
push
xchg
jbe,pn
mov
push
xor
lret
insb
add
push
adc
shll
fldl
xchg
jne
dec
mov
dec
outsb
iret
iret
pop
push
movsb
inc
lods
cmp
cmp
popf
inc
cld
loopne
out
aad
jg
dec
adc
shlb
test
cmp
mov
in
cmc
mov
jg
ljmp
push
xlat
sbb
add
xor
repnz
mov
dec
adc
xor
add
jne
mov
dec
cmpsb
stos
repz
fucomip
ljmp
xlat
mov
in
out
in
inc
out
adc
xor
mov
xchg
xchg
sub
adc
loope
pushf
inc
ljmp
pop
inc
pop
jbe
insb
push
sub
incl
js
adc
sub
mov
scas
stos
push
and
aaa
inc
mov
ljmp
sbb
dec
xchg
xchg
and
sbb
pushf
sub
cli
lods
xchg
jecxz
in
std
outsb
aas
xor
push
inc
pop
cmpsl
repnz
lock
fildl
outsb
pop
cs
push
movl
incl
inc
cmp
mov
rolb
mov
ror
insl
adc
sub
jae
in
adc
es
jg
jo
ret
push
sub
inc
pusha
adc
xor
push
sub
fwait
addr16
jns
ljmp
clc
xor
inc
push
enter
or
push
mov
subl
outsl
fld
add
loopne
inc
xchg
inc
xchg
gs
fwait
dec
pop
enter
adc
pop
xchg
jecxz
cmp
jmp
xor
jno
bound
and
xchg
cmp
rorl
xor
jmp
cmpsb
or
daa
ret
push
push
insl
sbb
mov
push
xor
or
outsl
pushl
cld
push
and
pop
sbbl
push
sub
mov
adc
pop
xchg
fisttps
decl
adc
mov
cmpsb
es
into
sti
mov
jp
lds
rolb
lds
pushf
int
lods
shll
cmp
clc
mov
sbb
ret
jge
cs
stos
pop
sar
dec
stos
stos
in
adc
adc
bsf
pushf
rcll
push
cltd
pushf
lcall
or
and
push
popf
repnz
xorb
fsts
or
loopne
adc
mov
std
call
mov
imul
dec
jno
or
push
pop
inc
dec
divl
pushf
mov
lcall
cld
or
daa
sahf
and
push
xchg
imul
int
into
adc
mov
and
insl
xlat
je
into
int3
std
cmpsl
adc
movl
call
adc
cmpsb
dec
sahf
sahf
xchg
push
hlt
scas
test
xchg
out
clc
pop
xchg
lods
adc
jle
sbb
adc
daa
pop
mov
or
call
bound
adc
fcoms
or
gs
xor
incl
add
bound
adc
fdivr
call
dec
push
mov
nop
gs
xchg
mov
jb
push
sub
mov
call
cmpsl
push
cmp
nop
pop
out
pusha
sahf
sub
push
adc
les
dec
push
push
jle
fists
decl
stos
pop
pop
jl
pop
pop
stc
add
insb
cltd
push
nop
xchg
pop
mov
std
push
out
push
push
fsts
jmp
sub
push
int
mov
push
ret
loop
add
mov
clc
and
inc
adc
pop
mov
add
pop
mov
adc
into
inc
dec
imul
mov
out
pusha
out
adcb
mov
xchg
cmp
xchg
sbb
or
insl
dec
pop
rcrl
mov
dec
push
mov
inc
sbb
xchg
mov
xor
dec
xor
adc
dec
pop
jge
daa
sub
jle
push
jg
decl
jp
sbb
sub
or
sbb
fs
sahf
mov
decl
mov
xchg
inc
mov
push
sbb
inc
cmpsl
sub
dec
jmp
mov
fimull
mov
lcall
push
das
daa
movsb
clc
test
std
incl
jnp
xchg
dec
loope
call
adc
lods
movsb
and
dec
pop
sub
jp
out
je
mov
pop
jge
out
repnz
mov
hlt
xlat
es
iret
xchg
mov
icebp
inc
dec
data16
ret
push
push
adc
jb
inc
cmpsl
pop
push
fs
adc
sub
je
mov
xor
xor
sbb
jno
nop
mov
add
decl
adc
pushl
or
adc
or
pop
xchg
jle
iret
ljmp
inc
or
movzbl
rorb
insb
mov
sbb
or
imulb
lcall
jmp
addr16
xchg
inc
push
shlb
dec
inc
xchg
push
mov
mov
ds
std
iret
sub
sub
popf
inc
aad
cmp
aaa
push
inc
test
stos
stc
insb
test
push
jg
decl
mov
adc
add
xlat
rclb
add
fs
cmp
mov
mov
sub
ret
shr
cmc
shlb
incl
push
cmp
or
xchg
nop
mov
mov
push
ljmp
sub
repz
in
sarb
or
ret
and
incl
gs
popf
aad
adc
dec
add
inc
push
bound
repnz
ljmp
sub
in
mov
fsubrl
jae
repnz
dec
add
adc
xchg
pop
push
jge
gs
dec
xchg
sarl
or
pushl
sbb
inc
cmp
xchg
jle
push
into
dec
inc
ljmp
scas
rcll
cltd
or
or
adc
push
dec
ror
pop
loope,pt
mov
aad
push
adc
adc
sarl
sar
cmc
sub
mov
mov
popf
mov
dec
sti
gs
lds
inc
jp
decb
mov
decl
icebp
dec
adcb
das
std
dec
pop
shlb
or
cmp
incl
mov
cmp
jno
xchg
xlat
lret
out
sarl
mov
clc
call
clc
push
jl
add
mov
fnstcw
mov
xlat
mov
ljmp
testb
xor
mov
mov
sub
aad
mov
ljmp
or
cli
iret
add
imul
pop
scas
in
jg
ror
xchg
lcall
or
aaa
leave
stos
add
jg
in
ljmp
movsb
inc
jge
in
stos
in
lcall
dec
ljmp
push
int3
mov
cli
adc
std
arpl
das
dec
jns
das
and
jg
adc
aaa
and
pushl
div
xor
sbb
fucomip
xchg
fistps
cmp
es
cmpsb
int
mov
movlps
adc
jmp
push
imul
push
fistps
add
xchg
cld
sbb
pop
cli
mov
mov
push
mov
dec
in
int3
push
mov
or
inc
fs
mov
decl
outsl
sub
leave
jne
mov
jns
fildll
push
decl
lock
decl
inc
jle
scas
lock
sub
imul
outsl
js
or
jge
ljmp
push
icebp
addb
pop
mov
je
xchg
imul
jmp
lahf
mov
ljmp
scas
dec
sti
inc
repnz
repnz
or
push
data16
cmpsl
addr16
int3
outsl
add
ljmp
fmull
jp
aas
lret
int3
or
lods
jg
lock
or
jle
jne
mov
xchg
icebp
dec
outsl
sbb
jo
pop
test
std
call
pushl
jno
addb
push
pop
repnz
xchg
lods
cmpsl
and
nop
pop
push
jae
ljmp
xchg
shrl
movsb
hlt
push
out
nop
test
mov
cmp
jo
clc
call
jg
pop
pop
out
repz
mov
lea
mov
std
fists
lods
scas
pop
sti
xchg
lods
xorb
add
scas
hlt
out
lds
pusha
out
dec
jns
enter
jbe
add
cmpsb
subl
inc
in
loop
mov
scas
clc
mov
sbb
fwait
jmp
gs
lret
addb
leave
movsl
pop
push
incl
pop
push
pop
stos
pop
fmuls
adc
icebp
cmc
jmp
jb
imul
ret
jae
aad
inc
scas
cli
fwait
push
fsts
test
in
in
sub
mov
je
adc
sub
in
mov
int3
movsl
repnz
popf
cmovo
and
lcall
dec
jb
outsb
add
or
pop
push
sbb
mov
pop
loope
sbb
and
mov
into
sbb
mov
hlt
mov
aam
pop
lret
out
fstp
aas
jb
filds
cmc
mov
enter
outsl
ffree
sti
sbb
mov
loope
mov
out
sbb
push
and
insb
jne
incl
xorb
dec
xor
or
dec
fsts
in
mov
pop
mov
incl
lcall
mov
push
or
je
sub
jecxz
movsb
dec
incl
mov
fcompl
mov
clc
adc
xchg
jo
dec
subl
aaa
int3
lcall
cmc
pop
xor
call
inc
nop
mov
int3
dec
push
int
pop
fdivr
lcall
jnp
dec
enter
push
mov
lret
int3
and
les
stos
clc
xchg
out
cli
jp
mov
sub
push
lret
loope
lods
fwait
inc
mov
lea
mov
movb
inc
pop
xchg
imull
xorl
das
pop
jb
mov
inc
movb
cmc
decl
dec
incl
mov
xchg
mov
int3
dec
or
dec
xor
incl
or
popa
addr16
inc
negb
repz
pushl
mov
scas
fdivs
add
lds
add
inc
ljmp
loop
xchg
mov
xor
test
rolb
and
sub
incl
cmc
test
xor
mov
xor
sub
push
dec
jmp
add
fisubrl
fbstp
cmpb
in
or
cmp
mov
sbb
or
insl
mov
ljmp
fisttps
adc
cli
add
inc
pop
into
cmp
lock
jb
dec
cmp
push
dec
les
mov
cmpsb
xor
aas
ss
fisttpll
cwtl
dec
pop
punpckldq
mov
push
daa
and
dec
das
or
mov
das
lret
inc
lahf
repz
inc
push
bound
pop
mov
out
and
out
dec
out
scas
cmpsl
test
js
or
adc
xchg
movsl
mov
mov
push
and
imul
rcll
sbb
push
and
add
in
add
mov
gs
pop
pushl
fnsave
adcb
adc
lods
push
les
outsl
inc
out
aas
mov
mov
in
ljmp
sbbb
mov
inc
adc
mov
pushl
imul
sarl
sub
inc
fstpl
mov
rorl
dec
inc
notb
data16
cltd
mov
rcrb
shll
lds
andb
push
fdivrp
mov
lds
inc
sbb
test
shll
faddl
mov
pop
pop
lret
loop
inc
pop
cli
mov
decl
xchg
repz
pop
adc
or
shlb
pop
xor
dec
inc
sub
rorl
adc
jne
dec
lds
aad
cmpsl
xchg
std
outsl
cli
add
leave
sti
dec
js
jbe
pushf
cwtl
cmpsb
sar
mov
call
out
int3
sub
mov
inc
cltd
mov
lcall
out
mov
inc
add
inc
jp
push
loopne
push
dec
or
out
int
pop
fidivrs
jg
push
jl
or
mov
decb
jg
mov
cmpsl
dec
sbb
mov
inc
lods
enter
inc
push
add
pop
xor
pop
int3
das
sbb
xchg
cld
les
push
stc
add
mov
ret
xor
outsb
jne
xor
jle
lret
loop
fwait
xchg
lretw
xor
mov
adc
rep
popa
cmp
dec
call
sub
cmc
outsb
jnp
lret
roll
lcall
sbb
or
icebp
dec
stos
ds
inc
push
inc
xchg
and
xlat
mov
shll
jmp
cmp
sbb
mov
inc
xlat
dec
xchg
mov
movsb
xchg
inc
mov
or
cs
ljmp
adc
mov
cltd
in
inc
fwait
inc
xor
add
sti
ret
shrb
jmp
movsl
jg
ljmp
pushl
iret
dec
aam
mov
aas
jae
or
icebp
dec
mov
aas
lods
fcmovnbe
mov
fisttps
jns
mov
pop
fsubs
lret
call
test
dec
mov
loopne
rcr
xor
or
test
jg
pushl
sbb
mov
mov
pop
cwtl
aad
dec
cmp
sub
decl
adcl
push
pop
lahf
cltd
rcrl
lds
dec
cmpsb
test
push
sbb
mov
jp
jae
leave
int3
leave
ds
loop
ja
mov
push
incb
fistl
outsl
sahf
ljmp
mov
sarl
bswap
push
leave
sub
mov
inc
std
es
aam
movsb
aas
or
loopne
dec
adc
push
jge
sub
lahf
adc
jmp
stc
stos
mov
arpl
jbe
cmp
decb
fs
incl
sarl
mov
mov
movsl
ffreep
out
mov
sar
mov
xor
jae
jg
out
cmp
out
js
lds
mov
ror
test
decl
add
xlat
sub
fildll
popf
or
dec
sbb
cmc
sti
or
mov
jg
or
add
xlat
ds
xlat
push
mov
fisubs
or
fstpl
mov
arpl
nop
movsb
sahf
mov
mov
enter
pushf
mov
mov
incl
lret
push
jae
mov
mov
ret
mov
rclb
mov
cmp
jmp
enter
add
push
inc
cmp
xchg
int
in
sbb
push
scas
clc
pushl
jge
cmp
movl
int
inc
sbb
in
push
mov
dec
cmpl
mov
add
sti
subb
jbe
pop
fistpll
es
mov
fldt
add
call
inc
add
jg
cmp
inc
dec
add
in
push
ljmp
gs
and
push
cmp
or
adc
cmp
idiv
inc
inc
ds
cmp
mov
enter
out
iret
sbb
dec
adcl
lret
fbld
jl
loop
xchg
rcl
imul
dec
lods
cmp
push
fiaddl
cmpsl
add
loope
inc
test
insl
mov
pop
mov
outsl
add
jle
jle
inc
xlat
add
xchg
add
call
shr
mov
out
jl
das
inc
cmpsl
mov
jge
xlat
mov
incl
jle
cltd
daa
or
mov
adc
mov
lcall
ret
xchg
adc
das
sar
xchg
add
and
add
test
mov
insl
imul
mov
daa
xor
test
out
es
mov
inc
add
xchg
jbe
in
jmp
mov
mov
and
pop
xchg
xor
inc
repz
sbb
incl
pop
inc
inc
adc
xchg
aam
dec
and
dec
lcall
mov
imul
jmp
int3
adc
mov
jg
into
ficoms
or
das
pushl
jl
mov
push
sti
pop
cmp
jg
add
pop
ja
fucomip
push
jns
or
jg
mov
xchg
test
aas
inc
or
test
rcrb
adc
decl
mov
inc
icebp
pop
test
dec
pop
test
mov
es
mov
inc
mov
cmpsl
xchg
out
cs
fisttps
les
mov
ret
andl
pop
inc
xorl
popf
sub
push
das
pop
fisubrl
pop
adc
pushf
dec
daa
ljmp
dec
call
xchg
xchg
jns
cld
call
outsb
imul
fmull
cmp
mov
mov
test
pushl
out
xor
in
ds
sarl
adc
xor
cmp
cmp
movsb
mov
mov
add
mov
incl
in
xchg
test
popf
add
jbe
decb
jle
loope
aaa
ss
xor
mov
aas
xorb
incb
sar
inc
xchg
mov
shrb
add
sbb
jmp
aam
add
aad
scas
ret
sahf
push
outsb
ljmp
out
ljmp
ja
ficoms
jg
mov
ja
fisttpl
daa
jmp
decl
mov
inc
lds
adc
jbe
add
jbe
gs
outsb
mov
dec
test
and
pop
mov
pop
aaa
inc
mov
mov
inc
push
test
cmova
out
movsl
hlt
inc
daa
cmpsl
or
add
push
mov
mov
and
ljmp
mov
pop
inc
dec
insb
fwait
incl
ljmp
inc
call
cmp
rorb
sahf
adc
xor
inc
mov
add
add
mov
call
sub
lcall
lds
ss
int
mov
lret
jno
jge
inc
ljmp
call
xor
add
mov
fidivrl
stc
push
lds
clc
popl
ljmp
nop
mov
int3
lea
popl
out
cmp
jmp
adc
jecxz
mov
es
decl
xor
data16
dec
sar
lods
sbb
sbb
cs
cmpl
mov
jg
aad
fstl
jne
jle
fs
out
sub
test
sub
out
fstpl
incl
adc
fistps
js
ret
out
xlat
inc
sti
call
ss
std
fcomps
scas
int3
lret
jne
stc
dec
js
cmpsb
aaa
jae
fnstcw
sbb
mov
decl
lret
stc
dec
jp
inc
push
jnp
push
in
ds
xor
xor
loop
rorb
movsb
lahf
sbb
cld
call
add
jg
idivl
outsl
jbe
lock
dec
lods
sar
mov
cmp
rcrl
push
lea
adc
pushl
sar
data16
popa
int
add
mov
mov
xchg
inc
ds
decl
fs
ffreep
adc
ljmp
fistl
jb
les
movsl
inc
lcall
xchg
ds
loope
jo
sbb
cs
adc
xlat
lahf
aas
das
add
xchg
pushl
outsl
cltd
ficomps
test
sbb
inc
xchg
pop
push
xchg
fstps
testl
lea
adc
fstpt
xlat
fcom
xchg
adc
shlb
test
popa
cli
pop
lahf
ljmp
stos
in
mov
hlt
push
jne
xchg
push
mov
sbb
call
std
cmc
sbb
inc
rcll
jecxz
gs
lds
sbb
inc
lret
imul
xchg
pushf
xchg
jne
repz
lahf
rorl
lods
icebp
dec
insb
pop
jae
mov
decl
cmp
pop
jbe
jle
test
xchg
nop
stos
scas
shr
adc
xchg
imulb
mov
pushl
shrb
sahf
insb
es
or
leave
mov
push
out
loopne
jg
and
inc
out
xchg
sbbl
dec
inc
xchg
cmp
call
nop
outsl
out
outsb
leave
lds
stos
cmp
push
cs
call
mov
jg
adcb
js
aas
idivl
adc
mov
push
cltd
adc
scas
push
iret
add
xor
add
lock
dec
xchg
push
lock
add
add
out
and
pushl
lods
mov
fs
rol
xor
xor
dec
mov
add
or
add
mov
pop
ss
stc
sar
call
push
xchg
out
dec
iret
adc
scas
push
jne
jg
xchg
cltd
ret
xchg
data16
lea
scas
sbb
insl
cltd
push
xlat
incl
jne
sbb
inc
ja
inc
fsts
xor
xchg
xchg
mov
jno
mov
adc
sbb
imul
xchg
mov
pusha
and
call
cli
xchg
sub
in
push
dec
jle
mov
mov
add
xor
mov
push
adc
xor
jmp
xor
fs
adc
pop
adc
jno
cmp
mov
xchg
ret
ljmp
or
push
ja
hlt
leave
and
lock
call
mov
inc
xlat
adc
test
push
cmc
mov
sti
movsl
out
mov
jmp
xchg
sbb
std
mov
hlt
fbld
sub
jg
and
inc
jg
jae
jo
pusha
jle
scas
lcall
ds
jle
mov
out
lods
mov
sub
mov
dec
decl
jne
icebp
sbb
lahf
mov
jnp
dec
jge
push
outsl
and
xlat
mov
ljmp
pop
xchg
aas
add
outsb
dec
aas
jle
ret
lock
movsl
repnz
out
xor
jg
push
jge
out
loopne
inc
add
dec
sub
jg
pop
add
in
jle
mov
jg
jge
enter
dec
mov
inc
dec
mov
adc
jle
pop
in
dec
bound
ljmp
cli
aas
pop
mov
add
push
std
jns
ljmp
add
cmp
shrl
sbb
in
mov
incl
rcl
jg
movsb
repz
ret
pop
jne
and
and
xor
ss
xor
push
fildl
mov
jne
push
cmp
adc
aaa
and
outsb
jbe
cmp
decl
mov
ret
mov
xor
fistl
or
mov
out
or
incl
popf
jmp
andl
repz
jb
add
jo
scas
dec
jg
std
repnz
mov
mov
xchg
lcall
inc
dec
movsl
ja
fs
pushl
mov
add
mov
push
pop
incb
mov
lret
add
sarl
repnz
sbb
lahf
scas
addl
sbb
inc
enter
call
les
and
jne
nop
shll
loope
adc
jnp
jmp
into
lsl
sarl
aas
idivb
jae
mov
out
sbb
push
in
jmp
aam
fisttps
out
lahf
cmp
cli
fidivl
add
adc
icebp
mov
insb
mov
mov
xor
sub
scas
jne
scas
sub
sub
call
out
dec
xor
fmuls
mov
filds
fwait
aas
adc
int3
jae
push
cmpl
mov
into
les
adc
xchg
or
pushl
repnz
mov
ret
outsl
mov
or
repnz
or
in
decl
mull
jae
pusha
adc
jbe
sar
cmp
xchg
stos
mov
and
jp
pop
fdivs
inc
cld
jne
jno
mov
incl
xchg
jmp
ja
es
cmp
stos
mov
std
in
push
negb
xchg
xor
fdivl
aaa
cmpsb
rcrb
cmp
out
push
mov
outsb
jp
mov
pushf
ret
leave
cli
pushl
out
lods
mov
nop
test
sti
cmp
cmp
push
jo
pop
cmp
xchg
pushf
outsb
clc
ljmp
int
insl
je
iret
loope
xchg
xor
insl
inc
popa
mov
pop
subb
pushf
push
inc
fmuls
mov
xlat
lods
nop
mov
mov
ljmp
jo
xchg
jl
popl
inc
out
push
or
jb
jg
and
xchg
negl
je
icebp
jne
mov
ffree
in
xor
scas
jns
lock
insb
repnz
lcall
jp
jns
pop
outsb
les
mov
xor
insb
or
mov
out
cmc
inc
in
xchg
repz
out
pop
push
mov
cld
repz
mov
notl
sub
pop
push
mov
cmp
pop
mov
cmc
ljmp
lahf
xchg
sub
test
lahf
fidivrl
repnz
imul
and
ljmp
and
sub
mov
push
cmp
in
in
pop
inc
sar
outsl
negb
outsb
jb
popa
fcmove
xor
jmp
pop
ret
pop
in
mov
jo
loop
pop
pop
push
dec
adc
mov
fs
push
jno
scas
addr16
mov
jb
in
mov
test
movsl
loopne
or
cmp
mov
mov
and
ds
jne
inc
inc
jecxz
lahf
int3
inc
es
cmp
cwtl
jge
mov
inc
loop
mov
jecxz
es
decl
inc
out
lret
scas
ss
aaa
jmp
stos
push
aaa
xchg
dec
loop
popa
mov
lcall
addr16
outsl
jo
cmp
cmpl
xorl
lahf
gs
sub
dec
insb
rcr
stc
xlat
sbb
mov
push
std
mov
rcl
mov
pop
xlat
in
add
pop
mov
dec
inc
jg
incl
and
sub
cs
clc
out
push
fcomip
inc
out
scas
mov
cld
test
cmpsb
sub
pop
xor
sub
movsb
loopne
xchg
jns
jl
jb
aad
stos
adc
ret
mov
aam
ret
push
pushf
mov
cmp
pushf
outsl
call
lcall
scas
jp
jge
xchg
scas
mov
lods
stos
scas
dec
lret
xor
and
mov
dec
push
adc
dec
xchg
je
test
mov
in
mov
aad
fists
inc
sti
test
mov
sub
ljmp
js
subl
fdivr
loope
sbb
lea
shl
rcll
jmp
in
push
push
push
mov
cmp
mov
movsb
xor
adcl
add
gs
mov
inc
shlb
sahf
inc
jns
cmp
cmp
test
push
clc
mov
inc
sbb
mov
out
cli
pop
xchg
stos
add
push
stos
dec
mov
insl
fcomip
lcall
fcoml
cmp
stos
repnz
enter
jge
add
push
and
insb
loopne
loopne
fimuls
movsb
jne
out
cmpsl
hlt
jmp
inc
rcrb
xor
jns
jp
repnz
aam
cmp
neg
dec
in
into
jno
fildll
lods
clc
dec
inc
mov
nop
xchg
cmpsl
movl
cmp
mov
push
sbb
test
jbe
cmc
stos
dec
and
jp
dec
mov
int3
in
imul
cmpl
outsl
fs
mov
insb
push
fidivs
daa
in
sub
daa
mov
push
add
mov
push
jmp
mov
fnstcw
out
call
add
js
push
insl
mul
enter
fcom
xor
int3
jne
cmp
sar
call
xor
js
mov
inc
cltd
out
jmp
stos
pop
mov
xchg
test
stc
scas
popf
das
sti
and
cli
mov
sar
and
aam
cs
hlt
push
leave
sbb
mov
test
jmp
push
xor
out
jecxz
mov
call
xor
lret
mov
sarb
mov
cmp
scas
push
push
das
mov
out
add
iret
fs
stc
mov
and
dec
rolb
lods
rcrl
push
jb
cmp
xorb
xor
mov
xchg
mov
iret
xchg
jb
xchg
mov
xor
rcrl
incl
inc
add
xchg
inc
lret
ja
mov
xor
fldl
cmpsl
and
ja
cli
fistl
and
aas
mov
pushl
mov
inc
fisubrl
mov
ljmp
aas
sbb
cmp
pop
sbb
cmp
mov
enter
mulb
aam
ljmp
fcoml
adc
pop
push
test
adc
mov
imul
mov
aam
clc
mov
stos
push
neg
cmc
popa
jns
in
and
cmpb
fs
mov
push
shl
ss
aaa
shlb
out
sbb
aas
jne
cmp
divl
mov
lds
ljmp
mov
push
popa
jae
mov
out
fisubl
fiaddl
out
mov
jmp
mov
cmp
xor
xchg
scas
mov
cmp
mov
jp
inc
add
jg
ss
pop
push
ss
mov
andl
and
nop
pop
pop
lahf
sub
xchg
rorl
sub
decl
decb
jbe
sbb
scas
xor
adc
xor
mov
jmp
fidivrl
pop
add
sub
enter
adc
lcall
test
loop
in
sti
mov
dec
in
repz
leave
mov
jecxz
cli
sub
jmp
stos
les
das
sar
jecxz
mov
rorb
jp
pop
outsl
popf
js
lcall
lea
loop
pushf
jg
xor
movsl
or
lret
ljmp
sbb
nop
xor
fdecstp
push
je
lret
sub
xor
add
arpl
sbb
jns
addr16
call
push
lock
adc
mov
mov
int
out
adc
cmpsl
stc
les
adc
pop
ficoml
gs
call
sbb
mov
pop
push
dec
fistl
je
jne
or
fld
test
sti
push
loopne
mov
or
insb
das
clc
sub
sarl
mov
xor
jp
add
repz
hlt
repz
jb
lea
mov
push
inc
inc
jmp
inc
sbb
mov
inc
je
hlt
ja
xor
dec
leave
les
icebp
in
fnsave
inc
not
enter
scas
mov
addr16
add
out
mov
xchg
cmp
repnz
mov
repz
rolb
cmc
pop
rorb
jl
cld
jno
jb
jg
push
orb
pop
inc
mov
jbe
xchg
outsl
shl
cld
push
gs
gs
mov
mov
testl
cld
inc
xlat
push
pushf
add
ss
fisubrl
mov
test
xorb
incl
sub
icebp
lock
pushf
stc
scas
inc
adc
lahf
jb
sub
popa
outsl
inc
out
clc
jmp
cli
dec
jne
out
shll
test
pop
or
add
mov
push
ljmp
sbb
jne
je
ret
je
cmpsl
or
ja
int
lcall
push
pushl
xor
lds
pop
xor
or
test
jae
rcll
pop
pushl
or
jno
test
imul
or
loopne
ljmp
pop
stos
mov
iret
stos
decl
lret
cmp
mul
das
mulb
xlat
repnz
add
jmp
ret
push
cmp
scas
repz
pop
lock
mov
xor
inc
mov
ss
idivb
loop
dec
mov
mov
pushl
out
in
mov
inc
outsl
gs
rcr
mov
jae
sbb
push
ss
pushl
add
jne
cmc
jo
cmp
xchg
in
xchg
sub
mov
repz
cmp
mov
pushl
lock
cmc
add
adc
js,pn
push
mov
aaa
shl
int3
cmc
scas
call
je
lods
mov
push
popa
and
lods
lcall
lock
push
into
lcall
or
sahf
cmpsb
push
push
icebp
mov
ret
gs
insl
inc
pushl
mov
lcall
cmp
incl
mov
xor
repnz
cmp
imul
pop
cmp
repz
mov
push
lret
js
movsb
insb
and
cmp
es
incl
dec
ljmp
sub
mov
insb
xor
icebp
sub
jno
jg
out
dec
loopne
xor
lret
sub
fidivs
jl
scas
jne
pushl
adc
and
repnz
cs
mov
xor
inc
into
sub
push
xlat
pop
shlb
scas
scas
xor
fadds
jno
mov
sub
push
or
std
incl
and
cwtl
in
jo
cmpsb
out
shll
cwtl
loope
pop
xchg
add
sbb
sub
pop
hlt
or
data16
mov
add
aaa
cld
dec
out
je
pusha
les
aas
add
sub
loopne
and
pop
mov
scas
in
insl
out
push
cmp
push
decl
lcall
jle,pt
mov
data16
and
jmp
hlt
mov
xor
jmp
js
xchg
int
aas
bswap
mov
adc
out
xor
test
sbb
add
jmp
test
xor
mov
or
call
jmp
in
cli
gs
push
mov
aad
jo
mov
xlat
mov
call
mov
arpl
xchg
mov
lret
dec
pop
js
into
add
fs
test
sti
decl
call
cmc
and
paddw
xor
mov
js
jmp
scas
stos
in
test
outsl
scas
jnp
sub
mov
incb
mov
jecxz
mov
in
adc
fdivs
pop
idivb
xor
push
jno
call
pop
xor
decl
push
shlb
popa
nop
mov
xor
lods
xor
ffree
scas
cli
loop
and
mov
push
mov
in
pushl
fstl
jne
ljmp
fadds
int3
cs
pop
mov
cmp
in
push
xor
fwait
in
sub
jo
insb
mov
out
loop
incb
jmp
push
adc
in
mov
pop
neg
data16
fsubl
outsl
dec
in
jnp
sub
jg
push
push
push
fstps
imul
push
js
gs
lods
cmpsb
in
or
mov
xor
iret
cli
jmp
cwtl
mov
lock
outsb
lahf
xor
cmpsl
adc
dec
cwtl
mov
add
sbb
lcall
outsb
bound
loop
ja
mov
in
pop
jle
ljmp
pop
cmp
mov
or
mov
sub
insl
out
ficomps
scas
sub
mov
lds
push
pop
mov
sub
call
lcall
cmp
jecxz
lods
adcl
arpl
inc
xor
call
pop
in
cld
call
hlt
push
ficoms
sahf
es
cs
outsb
imul
outsl
or
xor
jg
or
hlt
hlt
aam
sub
rol
lods
push
sub
xorl
add
cld
cmovb
mov
push
push
jl
mov
cmc
pushl
imul
cmp
xor
push
mov
jle
mov
flds
aam
lods
cmp
pop
mov
repz
or
cmpsb
dec
movsb
sub
cmp
lcall
cmpsl
outsl
aas
jae
sub
aad
arpl
push
push
lahf
scas
shlb
jmp
icebp
sbb
jge
insl
sahf
outsl
mov
fiaddl
jno
push
pop
mov
sahf
push
pop
pop
in
imul
outsl
xor
pusha
in
cmpsl
test
mov
pop
test
jmp
sub
imul
pusha
xchg
insl
mov
popf
ds
cmp
ljmp
and
fcmovnbe
sahf
pop
mov
mov
lods
dec
gs
out
xchg
pop
adc
std
pushl
xchg
lcall
icebp
ljmp
in
repnz
add
call
dec
ljmp
sarl
mov
push
cmpsl
movsl
pop
mov
pushl
fstps
not
out
pop
pushf
ds
das
mov
xor
std
ljmp
inc
cmc
aad
cmp
ds
mov
scas
popa
test
push
movsb
dec
test
cmp
out
sarb
scas
mov
icebp
ja
rorl
ja
cli
dec
sar
hlt
mov
mov
jmp
jl
mov
call
push
xor
xor
aad
pop
scas
shr
mov
icebp
mov
xor
call
hlt
inc
sbb
fs
lock
mov
xor
fldenv
dec
pop
inc
jno
sub
and
shll
jno
fwait
jmp
in
jo
adc
outsl
mov
repnz
cmp
in
fisubrl
sar
xor
mov
out
gs
out
scas
mull
mov
ljmp
decl
inc
loopne
or
push
or
adc
sti
lds
imul
repz
xchg
jbe
dec
cld
and
pop
hlt
rcl
rolb
das
mov
mov
mov
scas
push
ljmp
cli
adc
es
xor
fstl
cld
mov
xchg
mov
pop
xor
jg
xlat
notl
cmp
pop
div
std
xchg
mov
repz
dec
sbb
lahf
mov
jge
mov
lods
pop
sub
jne
jg
aam
mov
scas
mov
or
mov
pusha
hlt
mov
mov
incl
je
cs
cmp
sbb
scas
mov
mov
pop
inc
lcall
cmp
xchg
push
push
xchg
sub
das
jnp
adc
in
push
push
stc
in
sarb
cwtl
jmp
stc
sbb
outsl
mov
push
pusha
lods
ljmp
in
xor
mov
jge
call
xor
test
cli
mov
mov
fimull
incl
hlt
repnz
mov
jp
dec
pop
mov
sbb
fs
push
jno
add
incl
or
xchg
pop
pop
jge
stos
incb
pushf
push
xor
jmp
sub
gs
mov
mov
mov
insb
mov
mov
xor
fs
jnp
cltd
mov
loope
das
xor
das
pushf
out
sti
mov
mov
ds
push
mov
call
sub
mov
repnz
movnti
mov
inc
imul
and
bound
fwait
mov
ljmp
mov
and
ds
adc
stos
xor
and
outsb
mov
jmp
cmp
hlt
and
mov
jg
pop
push
cmp
lret
out
or
out
mov
xchg
pop
xor
push
outsl
ss
jg
ret
adc
ljmp
decb
call
cmc
out
icebp
fadd
mov
aam
push
dec
xchg
mov
ljmp
cmp
mov
mov
push
xor
cs
xchg
out
outsl
daa
adc
lahf
jg
cmp
xor
inc
scas
jae
mov
lock
and
lcall
xchg
out
xchg
out
js
inc
mov
xchg
enter
inc
pop
mov
lcall
movsb
push
out
in
xchg
inc
sub
lds
push
inc
mov
shrl
xor
ljmp
stos
mov
cmp
mov
out
jo
fs
popa
xor
lods
popf
dec
jbe
ret
decl
cmp
mov
sti
leave
cmp
aas
scas
sub
arpl
mov
pop
pop
out
mov
outsb
das
sbb
dec
out
out
lods
xor
push
es
or
sti
pop
inc
pushl
or
ss
sti
cmp
inc
sbb
jecxz
fisttpl
movsb
cmp
sti
cmc
ljmp
fstpl
aaa
add
pop
stc
push
or
jg
out
push
movl
das
push
aas
scas
sub
jae
mov
cmpsl
ljmp
shl
mov
jp
adc
lods
mov
mov
out
lahf
pop
pop
stos
xor
sbb
loope
sbb
enter
lcall
jmp
mov
negb
test
imul
xchg
fmull
pop
push
lcall
sbb
mov
and
call
push
jbe
or
cld
mov
cli
insb
push
xor
cmc
fnstsw
je
mov
lret
mov
sti
mov
mov
xor
cmpb
sub
ljmp
adc
in
outsl
or
loop
pop
stos
cmp
jmp
xor
pop
fsubl
decl
andb
or
lea
xchg
sahf
push
adc
hlt
cmp
outsl
clc
ljmp
xor
xchg
sbb
or
fwait
adc
das
ss
sub
mov
lcall
mov
sbb
out
sub
sbb
inc
addr16
fstp
ds
incl
scas
sub
mov
imul
inc
mov
in
xchg
pop
mov
mov
add
pushl
dec
xor
xchg
fnstenv
mov
or
movsb
lea
nop
push
or
xor
ret
jmp
mov
outsb
outsb
stos
or
sub
cld
es
sbb
enter
sbb
or
sub
sub
outsb
dec
pop
add
cmp
and
push
xor
or
mul
mov
push
jecxz
sahf
ds
leave
icebp
call
lcall
aaa
adc
or
stos
jg
ljmp
add
pop
fwait
mov
lods
jns
sbb
inc
out
lret
push
pop
out
stos
mov
sub
inc
jbe
xor
filds
or
mov
in
ficoms
inc
sub
ljmp
mov
pop
mov
aad
movsl
xlat
sbb
cli
mov
sbb
out
decl
stos
mov
imul
xchg
sub
and
out
daa
out
incl
cld
ljmp
daa
add
xchg
lret
rcrl
ss
decl
lcall
fnstenv
cli
sbb
in
popa
lahf
xor
cmp
test
jb
decl
test
frstor
sub
pop
jbe
push
inc
addr16
adc
notb
xor
xchg
push
adc
pusha
jne
call
scas
arpl
push
sub
sub
sbb
std
dec
arpl
inc
pushf
lock
add
sti
push
imul
adc
loopne
push
daa
sub
fdivp
push
test
inc
pop
fistl
push
lods
outsl
cmc
sub
loop
add
push
clc
rcr
daa
inc
aad
and
jo
sar
xlat
xchg
mov
inc
and
fidivrs
lods
mov
sub
push
inc
out
ds
sbb
pop
sub
push
insl
adc
incl
sahf
or
les
push
pop
jp
pushf
push
cmp
sbb
sub
lahf
repz
jecxz
cmp
call
imul
sub
out
xchg
pusha
jp
adc
pop
out
xor
aad
call
mov
rcrb
add
stos
jle
ja
sti
sbb
sbb
icebp
sub
adc
test
repnz
ja
hlt
sbb
test
or
sub
push
call
incl
mov
daa
cmpsl
dec
imul
cli
pop
add
push
daa
adc
pop
mov
mov
test
xchg
mov
cmp
mov
sar
or
inc
inc
inc
pop
sub
lahf
or
jmp
les
out
sbb
out
cmpsb
or
rcl
push
incl
xchg
rol
fadds
pop
push
movsl
dec
push
imul
call
push
mov
mov
and
decl
mov
mov
or
lock
arpl
sbbb
ja
dec
out
clc
jmp
addr16
fdivl
push
sbb
es
inc
or
mov
push
sbb
inc
movb
repnz
or
lds
ljmp
sahf
jecxz
dec
cs
inc
push
outsl
rcrb
pop
cwtl
inc
enter
mov
inc
mov
jg
ss
cs
das
jle
sbb
cmp
sbb
mov
or
sub
subb
inc
mov
fcomip
incl
in
es
inc
mov
mov
and
jmp
ficomps
lret
inc
imulb
pushf
jo
aad
lods
mov
test
lods
xor
addr16
call
or
mov
sub
mov
in
xor
call
mov
mov
mov
push
mov
push
push
arpl
jg
lgs
popa
in
imul
in
mov
pop
mov
sub
pushl
loope
loop
push
lods
xor
jmp
sbb
push
das
data16
add
push
mov
ljmp
jle
xor
cmp
and
shlb
inc
data16
jg
add
in
mov
out
outsb
popa
cmp
mov
jg
fldcw
pop
popa
movsb
das
inc
sub
push
rolb
pop
and
js
mov
xchg
or
rcll
dec
sar
out
cmp
test
pop
lock
daa
and
hlt
bound
pop
push
bound
or
ss
popa
cld
jmp
adc
and
jecxz
das
insl
xlat
pop
out
xchg
xlat
ds
decl
push
push
insb
ljmp
loopne
xor
out
in
fsubp
cmp
out
mov
sub
imul
pop
xor
jo
sarl
mov
fcomip
lcall
lahf
push
ds
mov
cmc
push
in
jne
mov
das
clc
ljmp
xchg
sub
lock
mov
scas
jge
lcall
scas
in
jo
fdivrp
ljmp
outsl
movsl
outsb
mov
mov
pop
mov
mov
jae
test
sub
ret
das
and
xor
es
aas
xchg
sub
adc
aas
mov
or
xor
pop
cmp
xchg
loop
fldt
dec
shrb
das
push
out
fists
push
jmp
out
and
in
leave
daa
xor
mov
decl
lods
dec
movsl
xchg
jns
jge
bound
sub
out
and
loopne
sbb
cs
mov
mov
rcrb
pop
sub
out
lret
outsb
push
cmp
mov
mov
idivl
int
repz
inc
push
test
sub
mov
sub
cmpsb
loope
repz
daa
adc
mov
decb
dec
add
incl
int
les
jae
xchg
sub
add
sbb
rorl
jmp
dec
jne
loopne
outsb
bound
call
das
and
test
adc
inc
add
incl
push
lods
ljmp
mov
in
push
add
imulb
pusha
iret
jo
push
pop
rclb
test
jb
gs
and
decl
adc
call
aas
insl
aad
adc
imul
int
fistpl
in
and
loope
jmp
in
inc
sbb
and
loopne,pn
movsl
fbld
adc
roll
jle
ja
mov
xchg
jp
das
mov
or
jg
cmc
fidivl
loopne
adc
cmc
push
dec
sub
xor
ljmp
cmp
int
rcrb
mov
sbb
mov
scas
adc
out
pop
ret
subb
xchg
mov
or
sarl
sub
nop
mov
and
add
adc
outsl
js
pop
cmpsb
jno
jmp
xchg
cmp
pop
imul
mov
xchg
push
sub
arpl
mov
ds
push
sarl
xchg
cmc
jecxz
es
decl
or
jge
les
sti
mov
xor
fstpt
xchg
aad
or
jg
daa
pushf
enter
pusha
push
xchg
push
pop
mov
call
sbb
nop
xchg
es
repz
and
pusha
lret
in
out
loop
mov
cmpsl
and
lahf
push
imul
je
xlat
es
mov
sub
cwtl
lret
xor
xchg
mov
pushl
push
pop
sub
arpl
out
es
flds
decl
hlt
xchg
into
dec
sub
cmp
add
je
and
xchg
and
scas
dec
xchg
jne
xlat
mov
iret
rcll
push
mov
lcall
mov
add
insl
pop
fadds
xchg
jecxz
dec
mov
pushl
adc
adc
xchg
sub
push
adc
lcall
rcrl
lcall
adc
arpl
inc
lock
int
call
and
or
test
add
sbb
fcomp
jge
jle
in
enter
xchg
data16
adc
enter
shl
dec
fsub
and
decl
fsubs
mov
shlb
jno
and
and
jmp
lock
mov
mov
test
fisttps
arpl
adc
and
addr16
jmp
and
loop
clc
cwtl
mov
pusha
testb
xchg
out
andb
outsb
pop
mov
out
lret
negb
mov
sti
push
pusha
mov
incl
pushf
jg
pop
mov
mov
in
pusha
xor
sbb
inc
pusha
jl
dec
pusha
jecxz
stos
incl
in
pop
and
pop
fcomip
and
das
mov
ret
pop
sub
ljmp
or
and
popa
bound
and
in
jmp
cmc
call
xchg
lcall
pusha
sbb
xchg
and
ljmp
daa
outsl
stos
fwait
gs
fcompl
aad
aad
sbb
insl
psraw
jmp
repnz
sbb
test
add
mov
hlt
lret
xchg
sar
call
dec
jno
sbb
sbb
dec
test
inc
mov
fadd
mov
push
cmpsb
pop
lods
sbb
in
or
scas
imul
mov
xchg
push
or
andl
arpl
adc
loop
stos
jmp
sub
lcall
sub
pop
mov
or
outsl
clc
negb
jle
fcomp
popa
jg
sahf
mov
outsb
stos
xchg
ljmp
xor
push
mov
mov
mov
stos
ljmp
add
dec
sub
fmul
sbb
lahf
sbb
iret
add
cwtl
clc
pop
lock
es
dec
mov
hlt
mov
das
xchg
xor
loope
adc
data16
or
call
in
inc
and
ljmp
mov
xor
pop
xlat
ja
mov
sbb
pop
pop
stos
call
je
mov
enter
out
test
xchg
jle
push
lret
push
jge
scas
repnz
lahf
mov
push
jecxz
sbb
stos
filds
or
lds
adc
fcomip
jmp
aad
call
out
pop
lods
dec
xor
sub
mov
add
scas
loopne
mov
lcall
mov
cmc
out
adc
mov
adc
fildll
inc
mov
into
xchg
lahf
and
jno
fistl
nopl
shlb
fadd
adc
jmp
aam
rcr
pusha
add
inc
dec
mov
and
pop
stos
adc
sub
popa
or
ficomps
xchg
push
aad
push
mov
outsl
add
adc
dec
sbb
daa
fbld
push
push
push
or
sahf
pusha
xchg
jne
insb
mov
push
out
in
add
sar
call
sub
cmc
add
jge
inc
lahf
jle
xlat
lods
cmpsb
lret
add
jg
or
arpl
cmpsl
stc
inc
lahf
add
divl
outsl
mov
dec
jge
jg
fildll
test
data16
fsts
add
xchg
shll
jmp
sarb
and
xchg
sti
xchg
xchg
adc
pop
aas
enter
pushl
mov
fs
add
cmp
or
shrl
pushl
push
push
and
adc
xchg
adc
push
enter
jmp
xlat
insb
or
or
cli
xchg
mov
hlt
incl
push
fdivrs
lret
cmp
pop
pop
jl
ret
pop
into
and
pop
in
test
sbb
ljmp
push
add
fstl
mov
mov
call
cmp
incl
mov
sbb
mov
nop
ss
pop
mov
cmpsl
pop
push
out
push
push
jle
pop
jl
fiadds
popa
decl
rcl
movsb
subb
mov
testb
push
stc
mov
mov
pop
sar
lcall
mov
pushf
xchg
push
jle
in
imul
pusha
cmp
orl
dec
xchg
outsl
mov
jmp
mov
ljmp
fs
aaa
out
movsl
in
mov
push
jg
xchg
sbb
mov
push
fnstsw
xchg
outsb
jg
out
pop
notl
outsl
pop
sub
pop
pop
in
xor
in
adc
xor
sti
xchg
call
nop
pusha
loop
push
loopne
pop
xchg
dec
outsl
mov
out
inc
fdivr
lcall
out
dec
push
or
incl
jae
xchg
lret
shlb
or
and
sar
mov
pop
test
std
frstor
dec
xor
loop
ljmp
jg
cmc
out
sub
push
imul
ss
push
xor
jmp
push
aas
addl
sbb
lret
add
inc
xchg
out
outsb
pop
xlat
icebp
xchg
sti
fwait
push
inc
mov
cmp
mov
dec
jg
inc
adc
add
jb
movsl
xlat
adcb
mov
scas
out
push
movb
int3
jg
faddp
xor
pop
push
ret
pop
add
mov
jo
cmp
movsb
jne
push
cmc
or
jg
jbe
dec
out
mov
xchg
sbb
jo
jg
popf
subl
add
mov
xor
in
push
in
push
repnz
test
lcall
inc
pop
cmp
add
mov
ficoml
inc
pop
lock
ja
jl
push
xchg
xor
pcmpeqb
pushl
jbe
cmpsl
f2xm1
cmc
jp
outsb
loope
cwtl
push
aas
pushf
mov
int3
mov
fisttps
sbb
loope
idiv
jbe
ds
inc
mov
inc
in
jmp
add
mov
cs
pop
mov
cs
lcall
xchg
inc
in
mull
insl
xchg
xlat
fwait
hlt
lahf
ret
xchg
incl
xor
lcall
in
sarl
mov
rcrb
xchg
adc
push
xor
cmpsl
sbb
mov
repnz
ja
dec
sahf
xlat
and
or
sahf
jne
bound
pushl
and
cmpsb
movsb
fidivs
popa
cmpsb
xchg
rorb
sub
fbld
sbb
cli
adc
fists
shr
add
in
add
pop
fcoms
pop
nop
sub
inc
pop
ljmp
out
push
push
dec
orb
adcb
lea
pop
xchg
and
pop
pushl
daa
pop
adcb
dec
into
sbb
das
xchg
jae
lret
sti
repz
ret
or
bnd
test
pop
cld
scas
in
das
fnstenv
in
pop
jge
inc
jbe
mov
cld
call
jmp
les
out
mov
dec
test
jo
fwait
push
lcall
insl
dec
icebp
cmc
out
loopne
in
adc
cmp
std
dec
outsb
insl
mov
loope
mov
mov
xchg
inc
sub
xchg
popa
pop
test
mov
faddl
addr16
repnz
lahf
lcall
push
scas
push
mov
xor
jmp
cmp
jg
xor
daa
mov
out
push
xchg
dec
mov
frstor
jmp
mov
jle
mov
pop
imul
ss
fisttpl
pop
test
neg
loope
push
fidivl
sbb
pop
cld
adc
mov
push
mov
incl
jo
mov
ja
shlb
jno
inc
lcall
push
xorb
stos
sbb
mov
clc
inc
push
sahf
fwait
repz
xor
cmc
movsl
mov
bound
test
fistps
fsubrl
jle
and
out
inc
and
mov
add
xchg
cmp
incl
push
pop
aas
in
cwtl
call
cmp
inc
xchg
add
lahf
mov
pushl
lahf
pop
out
std
aad
fdivrl
mov
lods
lds
xor
leave
jle
xor
push
cltd
repnz
das
adc
outsb
inc
shl
in
push
dec
jge
loop
adc
push
incl
fwait
loopne
or
xlat
push
jns
xchg
inc
shlb
adc
pop
xchg
inc
out
cli
jmp
ljmp
neg
mov
fstps
adc
mov
xchg
pop
or
incl
adc
sbb
ret
jmp
xchg
or
test
or
mov
mov
jne
aaa
jge
sbb
lock
aas
pop
add
xchg
or
aad
dec
push
mov
outsl
fdiv
repz
mov
mov
cs
jmp
pop
sbb
cmp
iret
test
call
lcall
addr16
call
jb
pop
call
les
jmp
fildll
adc
shlb
adc
in
testl
mov
dec
sub
mov
sbb
mov
inc
movsl
pop
out
inc
sbb
movsb
push
call
mov
mov
dec
fsubrs
addr16
int
push
lods
imul
mov
add
lcall
mov
pop
fs
ljmp
sarl
add
pop
push
push
jg
jns
pop
paddw
jno
pop
jo
outsb
ljmp
sbb
mov
stos
mov
or
dec
and
sub
cli
pop
and
loopne
ljmp
dec
sub
lds
fndisi(8087
adc
shlb
sub
in
add
sub
mov
jp
add
mov
jnp
jl
imul
lret
call
stc
stos
loop
imul
and
pop
lcall
sahf
out
push
cli
jge
cltd
lcall
ja
bound
addr16
not
or
or
push
inc
push
jmp
fstp
mov
out
mov
vpsubusw
adc
leave
xchg
dec
fwait
stc
or
push
in
cwtl
popaw
xlat
inc
imul
sbb
notb
subb
pushl
arpl
jo
lock
fisubs
mov
stos
movsl
orl
jmp
rcrl
push
sbb
pop
jnp
jmp
dec
int
add
jmp
jmp
push
repz
call
jmp
lret
es
jnp
fsubrs
fimull
icebp
addr16
jp
push
jecxz
lea
aaa
push
fldl
mov
adc
clc
in
or
cmp
fwait
mov
das
push
and
rcrb
or
outsl
outsl
inc
out
rorl
cmp
and
cli
insb
rcr
cli
in
or
aad
dec
jno
clc
pushl
aaa
out
fsts
shl
out
sub
or
rcll
xchg
sbb
insl
shlb
imul
xchg
or
push
stos
xchg
icebp
mov
leave
out
sbb
or
decl
fcmovb
popf
aas
rcl
mov
pop
test
mov
in
pop
into
adc
arpl
or
inc
inc
lret
sar
ljmp
cmpsb
insl
lods
filds
imul
std
or
adc
push
outsb
rcl
pop
inc
sbb
jecxz
jg
or
lcall
loope
outsb
push
lcall
dec
sbb
filds
shll
aad
mov
shll
addr16
lds
loopne
dec
rcrl
decl
push
mov
nop
std
mov
xor
sub
sbb
xor
inc
jo
cltd
call
in
sarl
flds
ficoml
int
push
mov
jecxz
ljmp
sub
lret
filds
jl
decl
test
fbld
adc
mov
test
fisttps
dec
xchg
dec
rcr
and
loop
aam
int3
sar
dec
jg
data16
jp
dec
popf
mov
shll
xchg
call
test
mov
xlat
sub
test
test
adcb
push
rcrl
jg
pushf
leave
jle
jne
rcrb
mov
test
ret
sarb
rorb
jmp
out
negb
shl
imul
sub
rcrb
ljmp
xor
mov
jmp
inc
arpl
inc
jns
iret
sarb
and
sti
push
cmp
dec
movsb
inc
es
xor
mov
push
ret
jle
sbb
in
pop
jb
lcall
rcrb
adc
push
cmp
fdivrl
xorb
into
out
lds
fcomi
popf
dec
rcl
call
out
lahf
clc
cmp
nop
mov
iret
pop
idiv
push
mov
xlat
sbb
lods
das
jg
mov
mov
cmpsb
nop
dec
mov
sbb
xlat
xchg
lods
push
ljmp
scas
mov
xlat
and
lret
andl
cmpsl
sbb
test
test
mov
xchg
loope
fs
xor
add
jecxz
xor
adc
sub
ja
pushl
lahf
shl
jg
mov
jl
scas
pop
aad
sub
scas
mov
xchg
mov
sub
mov
push
dec
mov
cld
pushl
jno
bound
pop
cld
jb
inc
daa
repz
xchg
pop
mov
arpl
repnz
and
in
adc
mov
pop
or
pop
aam
incl
daa
or
jbe
mov
add
imul
pushl
xchg
push
adc
push
cmpsb
fs
ss
dec
in
cld
push
scas
in
adc
jge
decl
std
ljmp
loop
fcmovbe
sbb
and
pop
mov
fiadds
sbb
xchg
iret
sbb
mov
ret
hlt
daa
popa
rclb
mov
incl
ds
mov
sahf
mov
inc
stos
in
cmpsb
rorb
loop
stos
xchg
mov
add
lret
mov
ss
loope
in
lcall
outsl
nop
xor
mov
clc
stos
push
repz
mov
or
dec
mov
pushf
es
ljmp
inc
push
out
jbe
out
push
pop
fstl
call
jmp
iret
dec
jne
in
js
cltd
mov
iret
or
movsb
pop
mov
sbb
push
xor
mov
push
push
or
sarb
xchg
or
push
jle
add
sub
lock
ljmp
add
push
pop
iret
nop
xchg
divb
mov
addb
je
std
sub
hlt
ljmp
in
cmp
pop
repz
and
pushl
mov
pop
andnps
adc
push
fdivr
jno
push
shrl
lcall
and
fdivs
int3
stos
mov
dec
mov
arpl
push
xchg
xor
ljmp
scas
leave
in
mov
ret
mov
xchg
push
jmp
scas
mov
xchg
inc
test
push
mov
iret
lret
outsb
push
sub
das
clc
sub
pop
push
mov
jmp
sarl
sub
cltd
pop
xchg
sub
into
mov
data16
lcall
filds
insl
ljmp
mov
sub
cs
jmp
dec
repz
sub
jge
jmp
push
sub
push
idivb
loopne
inc
lcall
decl
insb
mov
ret
into
sub
mov
jp
aas
inc
push
mov
adc
mov
push
adcb
mov
decl
adc
push
notl
pop
mov
xor
xchg
fwait
je
ds
and
loopne
cmp
in
and
lahf
adc
dec
adc
mov
mov
pop
push
xchg
shlb
idiv
jmp
add
xchg
adc
jne
or
xchg
ja
out
pop
push
std
ds
call
and
daa
jb
sub
sub
ljmp
aam
xchg
dec
mov
xchg
push
sub
jae
mov
push
sub
loope
call
xor
cmp
das
cld
adc
ja,pt
inc
xlat
push
dec
jno
lcall
fwait
mov
dec
ret
test
sub
push
incl
adc
mov
es
clc
testl
jge
pop
lock
push
cmp
fnsave
mov
cmpl
cli
dec
sbb
aam
and
lcall
fisttpl
test
sahf
das
sub
cwtl
shrb
mov
clc
xchg
dec
jg
cs
jmp
popf
sub
push
xor
repz
stos
rcrl
pop
jle
fwait
xor
xchg
fcom
subb
das
or
stos
std
outsl
stos
out
je
aam
addb
in
mov
insl
out
pushl
inc
jne
mov
popf
dec
pushf
cli
lahf
lahf
in
add
aam
rorl
pusha
mov
incl
shll
or
cwtl
aam
in
aad
or
pop
pop
mov
jp
nop
adc
dec
cltd
gs
inc
jno
jle
nop
inc
cmp
jg
add
out
cmp
pop
rcrl
add
cmp
in
cltd
std
and
dec
hlt
jb
cmp
sub
push
ljmp
cld
push
dec
in
push
ror
dec
rcll
adc
sub
mov
je
push
or
test
cwtl
cmp
add
push
adc
mov
cld
inc
mov
movsb
pop
ds
xchg
adc
scas
push
sub
decl
cmp
or
fdivs
loop
sub
ffreep
mov
jbe
jg
xlat
nop
jg
aaa
push
and
push
int3
out
incb
cmc
sti
jb
cld
cltd
arpl
jnp
shlb
incl
inc
push
std
push
lret
inc
pop
or
push
pop
xchg
test
in
adc
es
xchg
add
fdivl
decl
xlat
sbb
mov
jo
add
out
sub
cmp
inc
add
pop
xchg
outsl
pop
push
loopne
or
pop
jne
add
ljmp
arpl
dec
fwait
sbb
mov
sbb
xchg
dec
sub
adc
mov
adc
or
jg
adc
gs
adc
inc
test
jg
call
into
into
test
in
cmpsb
sbb
pushf
test
aam
scas
lods
std
mov
lcall
jmp
jge
mov
jmp
andb
rol
mov
cmp
mov
call
leave
xorb
xor
jo
movsb
mov
adc
and
xor
test
inc
mov
mov
sub
into
dec
jns
scas
lcall
dec
mov
mov
test
add
push
add
cltd
push
decb
movsb
or
test
dec
inc
clc
mov
inc
pop
add
out
stc
xchg
sti
call
xchg
andl
push
mov
pop
push
in
push
incl
mov
shlb
mov
push
aam
mov
jmp
sbbb
cltd
jnp
push
clc
std
inc
mov
int
dec
xchg
xchg
cmc
xchg
sbb
stos
adc
lcall
mov
push
push
js
aam
jno
inc
add
sub
push
cmp
fstp
decl
mov
cmc
or
xchg
test
mov
sub
addr16
mov
and
xchg
jne
es
ja
jns
or
andb
roll
push
repnz
movsl
call
outsb
mov
mov
pusha
sar
jle
loopne
pop
or
sub
add
in
sbb
outsb
mov
decl
fdivp
orb
outsb
inc
push
lret
xor
jge
dec
xchg
andb
cmc
call
out
insb
mov
pop
ljmp
push
cwtl
xchg
jp
lcall
or
sub
pusha
lahf
sub
inc
in
lods
ja
jg
pop
imul
clc
ljmp
adc
mov
push
sbb
mull
lret
aas
fimull
jle
insb
inc
lods
fisubs
ds
ja
cmc
loop
std
ljmp
clc
pushl
mov
addr16
jae
ds
iret
sub
clc
lods
into
jmp
add
inc
lret
inc
lret
sub
xchg
dec
jne
in
rclb
mov
jg
xchg
outsb
pop
mov
add
stc
es
sub
lcall
mov
xchg
cmp
sub
je
pop
incb
rclb
clc
in
into
aad
test
outsb
jg
lcall
mov
stos
sti
and
jno
push
shlb
push
adc
ds
mov
aas
ds
mov
add
das
icebp
jl
jno
and
repnz
sarl
decb
mov
push
pop
inc
sbb
dec
rcl
inc
icebp
insl
int
dec
shlb
xor
sbb
rclb
jo
push
js
pop
dec
pop
jl
dec
jno
pop
adc
ss
jmp
mov
int
and
cmp
cs
scas
cld
mov
dec
out
dec
add
push
add
jp
dec
je
jno
sbb
cld
leave
lea
mov
sbb
pushl
andl
sbb
fs
rolb
sub
fs
outsl
in
ljmp
call
xchg
mov
jg
std
int3
inc
or
lahf
int3
jbe
mov
fldl
sti
mov
add
pop
xchg
in
add
lret
divl
dec
gs
in
inc
sub
add
push
inc
das
inc
push
es
push
data16
pop
mov
add
sub
call
cmc
push
rorb
inc
nop
ja
sub
pop
rdpmc
mov
lcall
out
sbb
aad
das
mov
jbe
pop
add
fwait
jb
mov
insb
push
je
call
jl
xor
ljmp
scas
fldl
and
mov
mov
add
add
xlat
out
mov
xlat
mov
incl
pop
idivb
iret
inc
jo
movsl
inc
rcr
flds
or
cwtl
and
jo
cmpsb
lock
jmp
fdivr
push
mov
in
jp
nop
or
sbb
cld
aam
sbb
leave
movsl
cld
sub
mov
jg
or
xlat
pop
sbb
scas
mov
cmpsl
xor
add
call
std
orl
orb
pop
sahf
into
pop
or
pop
xchg
jb
pop
lret
jmp
loop
inc
mov
sub
jp
outsl
adc
jb
jno
aaa
jl
mov
inc
dec
pop
aam
pushl
sbb
xor
mov
jbe
push
scas
movsb
jmp
or
popl
pop
pop
push
stc
iret
xlat
xchg
pop
sub
xor
dec
lods
dec
inc
decl
lods
out
push
arpl
pop
fcmovnu
push
adc
lock
dec
lahf
pushl
fists
cmp
sub
dec
out
and
push
add
inc
fimuls
push
push
scas
dec
hlt
in
pop
cmp
out
mov
inc
aam
outsb
inc
fldenv
idivl
dec
in
cmpsb
call
cmpl
mov
dec
aaa
add
in
jp
pop
pop
inc
fcomi
scas
mov
ljmp
outsb
je
jge
jbe
add
and
aas
fidivs
fmul
enter
testl
push
mov
scas
pop
out
add
in
aaa
adc
adc
jbe
dec
or
das
mov
fstpt
addr16
in
lea
jo
jg
inc
out
leave
cmc
inc
cs
or
pop
ret
jo
scas
incl
jo
dec
test
or
dec
xor
pusha
adc
push
aaa
mov
pusha
fcomip
imul
and
imul
lret
lret
mov
mov
cmp
aad
inc
stos
xchg
decl
mov
push
adc
mov
add
out
xchg
or
xlat
vorpd
mov
pop
xchg
jg
mov
or
out
scas
pop
push
push
je
and
dec
cs
les
inc
mov
jns
pop
pushl
jg
int3
pop
mov
loope
ljmp
out
int
dec
mov
cli
xchg
lock
jnp
pushl
fisttpll
outsl
andb
add
adc
fstpl
addr16
inc
mov
incl
mov
push
loope
ja
repz
push
test
xchg
jmp
adc
lret
sub
out
push
addr16
scas
aad
mov
mov
mov
dec
out
hlt
and
dec
sbb
sub
decl
dec
cmpsb
adc
mov
pusha
lahf
sbb
pop
inc
xlat
call
inc
lcall
xlat
or
mov
sahf
mov
push
sbb
xlat
pushf
sti
scas
push
lcall
or
out
mov
mov
pop
mov
outsl
mov
adc
dec
dec
mov
push
aad
ja
adc
add
in
add
push
lea
clc
inc
or
mov
pusha
jg
shrl
pop
jne
jl
test
mov
dec
rorb
jmp
dec
xor
scas
test
push
fnstsw
xor
sahf
pop
xor
decl
arpl
or
adc
cmp
or
insb
or
out
call
xchg
les
jae
xchg
mov
loop
xchg
fdivl
shrl
test
mov
loopne
sbb
dec
xchg
push
cmpsl
popf
push
push
in
sub
cmp
ljmp
dec
bnd
in
mov
je
ret
sub
sbb
repz
pop
cli
loop
jge
xchg
push
dec
das
idivl
in
pop
inc
les
mov
insb
mov
push
out
and
dec
mov
push
pop
dec
xor
add
loop
test
and
int
outsl
cli
lcall
lret
add
adc
scas
inc
popf
dec
dec
push
xor
dec
pushf
aad
in
jae
sar
push
sub
mov
push
and
aas
cli
mov
imul
xchg
call
inc
dec
loope
lcall
cmp
push
ret
dec
jmp
pop
sarb
pusha
call
push
and
out
add
lock
mov
dec
negl
cld
outsb
leave
pusha
test
shll
adc
rolb
fbld
nop
subl
inc
dec
mov
mov
xor
loope
leave
es
pushl
push
sub
pusha
jle
shrb
dec
sub
daa
pop
lcall
xor
jp
pushl
push
sti
jb
sbb
jo
jo
dec
sub
testb
out
movl
decl
aam
add
fbstp
xor
fnsave
hlt
stos
mov
fwait
ja
out
popa
decl
dec
in
mov
imul
jg
fbstp
inc
scas
int
out
incl
enter
mov
mov
test
jl
mov
or
enter
mov
ljmp
into
xor
ret
daa
fdivrs
sahf
outsl
ret
movsb
push
inc
leave
dec
pop
adc
outsb
push
inc
xor
lcall
lock
mov
outsl
mov
inc
pop
mov
add
incl
sbb
pop
pop
xor
inc
aas
cmpsb
dec
mov
pusha
stc
xorb
leave
out
nop
cmp
cli
stos
cmp
orl
loopne
clc
mov
xor
cmp
out
rorl
pop
pop
mov
mov
inc
dec
cmp
add
sar
xor
cmp
ljmp
scas
xor
popf
cmpsl
inc
mov
add
push
push
cmp
xor
pushl
sbb
mov
addr16
sbb
in
fwait
push
movsb
dec
fisttpll
ds
incl
cmpsl
movsb
and
dec
push
jg
stos
in
mov
sbb
ds
and
dec
jmp
xor
scas
pop
sbb
dec
lahf
imulb
leave
dec
push
xchg
xor
adc
jmp
pop
push
mov
roll
adc
mulb
sub
add
sub
jbe
ljmp
push
lahf
pop
aas
outsl
test
xorl
pop
mov
ljmp
das
mov
in
xor
stos
jmp
push
xchg
jmp
int
jno
aas
mov
dec
ficoml
jle
push
outsb
push
push
out
mov
adc
lcall
mov
xchg
sbb
and
sbb
xchg
push
aaa
adc
sbb
lcall
and
jae
or
pop
ret
adc
xor
lahf
xchg
or
ret
jmp
pop
and
mov
pop
out
mov
pushf
pop
cmp
inc
inc
inc
jo
inc
adc
fimuls
fistps
dec
lret
nop
outsl
sub
scas
lahf
mov
mov
ret
sub
adc
inc
incl
lods
dec
cmc
imul
sub
inc
in
xchg
ds
cmp
jnp
mov
or
outsl
jne
dec
dec
adc
scas
lock
arpl
mov
enter
xor
jno
ret
xchg
aas
data16
dec
pop
xor
adc
incl
push
or
out
movsl
test
dec
and
jmp
push
push
jp
sti
cltd
pop
inc
cmp
xchg
mov
adc
inc
inc
insl
das
mov
clc
inc
adc
sbb
std
les
out
mov
dec
es
adc
test
push
in
rorl
mov
lcall
push
jb
out
test
pop
or
pushl
lods
sbb
imul
xlat
cld
push
cmp
fistpll
data16
imul
cmpsb
add
movsl
xor
sbb
stos
jo
cs
sbb
mov
std
mov
ljmp
adc
dec
movsb
jmp
adc
pop
insb
push
jne
dec
jge
xor
test
orl
sub
inc
aam
xor
push
stos
repnz
mov
push
cld
lock
repz
xchg
or
nop
push
cmp
call
in
mov
cmpsb
pop
incl
adc
inc
sbb
lret
cmp
ljmp
in
jg
lods
call
adc
mov
mov
pop
out
mov
lcall
incl
sbb
rol
adc
aas
mov
fldl2e
jg
dec
test
jmp
cmc
aad
aaa
cmp
add
pop
mov
sub
mov
sbb
leave
push
mov
fistpll
aam
in
xlat
add
loopne
icebp
push
jne
es
lcall
cmpb
fdivrl
int3
call
xchg
push
mov
sub
pushl
sub
out
scas
jne
mov
mov
cmp
inc
adc
gs
ljmp
dec
adc
mov
adc
jb
inc
adc
dec
adc
pop
jl
push
std
incl
es
sub
loop
add
lea
adc
jmp
arpl
outsb
cmp
add
andl
pop
jp
pop
jnp
push
sbbl
pop
std
sbb
cs
mov
cli
es
mov
xchg
sbb
adc
push
inc
test
jg
mov
jne
fildl
out
test
rcll
jmp
adc
cltd
push
incl
es
test
cld
pcmpeqd
jle
addr16
int
dec
sbb
mov
fs
sbb
ljmp
in
add
pop
jae
mov
mov
call
xchg
stos
mov
cmpb
push
pop
ret
jmp
add
mov
test
cli
pop
fsts
ss
jb,pn
movsb
outsb
clc
push
xchg
jns
rolb
ds
aaa
jle
mov
outsb
cli
lcall
inc
add
jle
outsl
add
push
sub
js
mov
jnp
mov
test
scas
addb
ds
push
mov
lcall
mov
movsb
lea
inc
or
add
test
push
es
inc
mov
out
ds
xor
mov
push
add
jg
in
fisubl
adc
cmp
push
add
call
sbbl
loope
lcall
scas
sbb
cwtl
xchg
les
adc
test
clc
inc
testl
mov
mov
sarl
push
sub
pushl
jp
notl
lea
adc
inc
mov
mov
pop
sbb
ds
incl
sub
mov
scas
sbbl
cmp
call
into
cmp
test
incl
jne
xor
mov
mov
mov
data16
out
cli
pusha
je,pn
pop
scas
push
mov
mov
outsl
sti
iret
nop
mov
testl
dec
lods
xchg
sbb
bnd
xor
out
inc
adc
in
xorps
push
nop
cli
jmp
jae
out
in
jmp
in
popa
xor
daa
sub
call
cld
pushw
inc
fmul
ret
ss
cmc
dec
pop
loop
in
in
or
jp
mov
das
cli
decl
enter
pop
and
pop
sarb
add
test
decl
repz
shr
cmp
push
inc
fwait
rcl
mov
stos
xchg
inc
repnz
test
jmp
inc
mov
cmp
push
xchg
lea
pop
mov
jmp
jle
xchg
mov
cmp
mov
out
add
stos
jo
ficomps
imul
or
mov
js
cmpsb
decl
call
add
movl
clc
add
mov
cmpsl
jae
jmp
add
jp,pn
stc
push
jne
ljmp
add
roll
push
mov
sar
mov
mov
jmp
pop
mov
inc
aas
cmp
call
add
jns
gs
orb
pop
cmpl
adc
cmp
inc
js
push
outsl
cld
bound
pop
mov
stos
mov
xlat
jmp
test
daa
cmp
sbb
xchg
add
sbb
incb
aam
mov
sbb
or
xchg
jmp
mov
test
aas
jge
rorl
add
pop
pop
movsb
shrl
xchg
pushl
loop
cmp
bound
add
pop
jnp
pop
popa
daa
test
hlt
add
incl
inc
pop
xor
jle
imul
jg
jg
xchg
jp
mov
scas
cwtl
push
shrb
cld
jge
scas
mov
add
fldcw
pop
or
decl
and
mov
and
mov
out
cmp
lods
mov
jle
sub
test
inc
xor
mov
cmc
jne
push
lods
cmp
add
mov
aas
hlt
jp
aam
mov
in
icebp
sub
add
jl,pn
fisttpl
sub
push
xor
add
aaa
mov
stos
jmp
cmp
lods
mov
repz
mov
mov
cmp
repz
cmp
lret
int3
add
pushf
add
pop
fcomip
ljmp
mov
xchg
je
jbe
and
and
jp
aad
jecxz
push
insl
xchg
sar
pushl
cmp
inc
scas
ret
sub
xchg
mov
stos
mov
jl
dec
insb
push
cmp
jecxz
std
push
inc
test
lea
push
mov
jne
nop
pop
call
sbbb
inc
add
mov
mov
cmp
add
xchg
inc
imul
rorb
dec
jg
adc
leave
das
icebp
mov
pop
jne
push
fwait
stos
xor
out
add
lds
test
cld
in
loop
lret
jbe
xchg
push
xor
mov
or
mov
add
sbb
in
xchg
pop
jp
mov
mov
xorb
jae,pt
ret
fiadds
mov
dec
cmp
call
dec
loopne
add
add
mov
loopne
insl
push
loop
cmpsl
scas
jg
pushl
sbb
push
or
jno
lea
bnd
cli
push
repnz
cli
pushl
mov
xor
push
mov
mov
mov
push
lcall
sub
ljmp
aam
sbb
stos
cs
and
enter
adc
jg
es
clc
and
test
cwtl
iret
imul
inc
sbb
repz
xchg
ljmp
js
cs
add
inc
hlt
in
push
rorb
dec
rcll
jg
mov
adc
push
into
in
in
jnp
lods
aam
adc
jle
and
lcall
sti
mov
fwait
cmc
repz
pop
or
jle
and
neg
sbb
inc
repnz
call
iret
cmp
loop
addr16
pop
or
jmp
test
decl
or
hlt
repz
add
sub
fcomip
in
mov
jl
add
aaa
cld
decl
xor
aam
loope
lahf
cmp
fs
add
incl
inc
fists
inc
mov
clc
test
out
ret
cmp
decl
and
stc
mov
mov
pop
jns
div
xchg
clc
std
loopne
mov
sbb
sbb
clc
cmc
in
clc
nop
imul
push
aad
mov
shr
and
decb
stos
ljmp
in
leave
pop
bound
repz
lcall
and
adc
or
mov
mov
subb
addr16
lds
popa
pop
pop
jnp
loope
outsl
inc
xor
xor
cmp
fs
dec
sub
ljmp
mov
xchg
in
cs
jmp
pop
pop
outsb
inc
mov
fadd
mov
pop
pop
repnz
repnz
jmp
movntps
and
sub
movsl
mov
mov
das
mov
jecxz
and
jmp
pushl
mov
daa
push
lock
sub
xchg
ljmp
cli
and
mov
call
mov
jmp
mov
shll
iret
cmp
pop
pop
sub
adc
lcall
int3
sub
xchg
cli
icebp
pop
imull
pop
imul
jb
jns
nop
xchg
je
jb
cmp
sub
pop
mov
lcall
sub
fsubr
jge
shlb
repnz
ffree
mov
pop
cmp
repz
aas
out
adc
lahf
jl
pop
jge
xchg
inc
imul
push
and
mov
loope
inc
aam
jmp
add
cmpsb
and
jae
mov
cmp
jnp
stos
push
sub
add
dec
call
pop
scas
aas
scas
pop
mulb
lods
repnz
fnsave
sbb
fcoml
jnp
adc
les
pop
add
pop
jecxz
hlt
imul
mov
sbb
mov
inc
ljmp
mov
pop
sub
pop
ds
andb
loop
fsubl
out
das
fwait
fildll
mov
jns
jne
inc
dec
mov
sub
mov
jmp
xor
ja
cld
decl
mov
push
scas
gs
test
push
outsl
cmpsl
xor
shlb
imul
mov
pop
add
cmp
lcall
jnp
repnz
repz
jg
rcrb
adc
adc
lods
push
sbb
icebp
mov
nop
xor
in
lods
mov
daa
sub
sbb
dec
outsl
and
mov
ljmp
mov
or
push
jmp
add
sub
imull
popf
mov
out
dec
in
and
xor
cmp
shll
pop
andb
aad
mov
icebp
and
lods
jo
mov
mov
cmp
pushf
insb
scas
daa
mov
repnz
imul
ss
sti
lods
test
jmp
jb
jb
cmp
rorl
sbb
mov
inc
aad
pop
inc
pop
pusha
ljmp
insl
cmp
mov
sub
mov
pop
jg
decl
cmpsb
ss
xor
pop
testb
inc
mov
les
jle
sahf
jnp
push
decl
lock
icebp
sub
jbe
jbe
sub
imulb
cmpsl
fwait
adc
call
std
scas
shrb
aaa
xchg
into
sub
lods
mov
ret
xor
inc
jp
stos
fadds
xor
cltd
cmpsl
movsb
test
mov
mov
repnz
cmc
sub
cltd
aas
pop
inc
imul
dec
push
or
add
decl
dec
push
pop
into
out
mov
sbb
mov
loopne
hlt
clc
stos
xor
add
call
lock
fstpl
mov
push
subb
jo
push
cmc
lods
into
sub
pop
bound
add
mov
pop
jg
out
xchg
js
add
aas
and
push
pop
rolb
out
ljmp
scas
cmpsb
xor
mov
lret
in
dec
or
mov
jbe
ja
mov
jg
cmp
outsb
or
enter
pop
cmpsb
pop
int3
loope
jb
xlat
loopne
test
dec
ljmp
jl
and
arpl
xorl
data16
gs
adc
scas
sbb
push
push
xchg
cli
stc
cmpl
push
jle
mov
in
cmpsb
xchg
xchg
pop
dec
mov
outsb
xchg
mov
add
addr16
addr16
out
sub
inc
jmp
int
aam
iret
inc
out
inc
pushl
cwtl
adcb
lock
sub
in
xor
out
mov
xchg
mov
ljmp
jo
lods
sbb
pushf
sub
cmp
adc
mull
mov
pop
inc
sbbl
xchg
xor
xor
pop
data16
std
out
stos
xor
insb
fstpl
sar
lods
add
mov
jo
jnp
cwtl
lea
insb
std
fnsave
lock
xor
test
jg
jecxz
pop
in
addr16
outsl
fwait
push
mov
pushf
je
nop
dec
pushf
cmpsl
adc
sbb
mov
aad
pop
xor
sahf
scas
notl
sbb
jg
decl
xor
sub
lea
xchg
movl
inc
fwait
scas
lods
inc
imull
jle
jmp
outsl
adc
fists
mov
cmp
jmp
mov
mov
adc
push
xor
cwtl
jno
test
hlt
loope
pop
mov
or
cmp
adc
sti
lea
jb
out
decl
mov
pop
mov
pop
fsubrl
ss
dec
imul
cmpsl
or
cmc
mov
lock
jp
call
std
fistps
cmp
ljmp
cmp
and
ljmp
mov
jge
cmc
nop
test
int3
dec
scas
ret
call
jecxz
cmpsb
push
jb
pop
mov
lcall
mov
mov
jne
lock
jb
jp
pop
sbb
int3
pop
filds
call
and
xor
out
lret
cmpsb
xchg
insb
cmpsb
loope
outsb
call
clc
scas
outsl
nop
dec
jo
cmp
sbb
lahf
cmc
push
pushl
std
cmp
xchg
and
adcb
xchg
bndldx
insb
test
stc
inc
loope
call
sub
xlat
test
std
leave
sub
insb
pusha
rcrl
pop
xchg
mov
fcomip
pop
sbb
push
jle
movsl
pop
icebp
nop
mov
mov
cmp
fs
jg
shlb
pop
mov
xchg
lods
xor
or
in
cld
sub
je
test
inc
adc
loop
xchg
cmp
xor
call
mov
lods
dec
push
in
and
mov
mov
mov
repnz
push
ret
cmp
gs
add
xor
movsw
sub
icebp
cmpsl
xor
call
xchg
les
xor
ret
push
ja
bound
xchg
and
and
xlat
jmp
js
pop
xor
pushl
aam
and
fcmovnu
lods
in
into
inc
js
push
js
lea
mov
or
xchg
xor
jmp
js
in
sti
mov
push
fdivrl
mov
ss
xor
outsb
mov
jmp
jne
or
jg
inc
sbb
sti
mov
jecxz
dec
lcall
jne
sub
or
lods
addb
jg
cmp
cmc
fiaddl
pushl
cmp
bound
sbb
shll
xlat
lcall
out
cmc
mov
insl
dec
popf
std
pushl
imul
xchg
jl,pn
mov
mov
sbb
xlat
je
push
mov
mov
jg
jns
mov
mov
and
stos
data16
jb
repz
xchg
xchg
lods
xor
ja
scas
fs
mov
dec
aas
ret
out
cmpsl
jns
push
mov
adc
cli
fwait
clc
mov
test
pushl
mov
sbb
ja
sub
test
mov
cs
les
push
push
mov
xor
adc
pusha
inc
jo
cmc
jns
das
mov
loope
out
je
outsl
mov
icebp
jns
pushl
xor
mov
xchg
xor
addr16
fldcw
lret
ljmp
cli
jbe
outsw
jbe
sbb
mov
xchg
jb
ds
inc
ja
dec
xor
ljmp
clc
pushl
or
es
gs
mov
aas
dec
sbb
or
neg
jo
inc
lret
push
jae
xor
fimuls
push
imul
pushl
hlt
js
sub
pop
jecxz
fldl
and
pop
xchg
dec
xor
sbb
loopne
jmp
lock
icebp
sub
cmc
js
mov
push
shrb
outsl
ja
pop
scas
xor
sub
outsb
and
idiv
call
in
sub
out
out
mov
add
jbe
adc
jg
sahf
sar
fucomi
inc
dec
bound
cmp
xchg
out
add
andb
pop
mov
outsl
pop
cmp
icebp
test
mov
sti
jg
and
decl
jecxz
and
xorl
lock
push
pop
mov
inc
fistps
decl
add
and
pop
lahf
test
xor
notb
jne
pusha
jp
daa
mov
call
pop
ss
pushl
xor
lcall
xor
lcall
add
jo
loope,pt
jge
in
xchg
adc
sub
jae
imul
jmp
xor
mov
xchg
xchg
xlat
jle
std
adc
ja
fdivp
call
cld
sub
cmp
xor
testb
in
testl
add
lods
shrb
test
dec
loopne
pop
je
lods
mov
jmp
mov
dec
mov
mov
pop
xchg
imul
jg
cmpsl
cmpsb
mov
pop
mov
imul
out
das
mov
jno
hlt
push
add
jg
clc
mov
ja
mov
shll
jae
push
or
add
cmpsb
icebp
pushf
stos
push
jb
xchg
ljmp
hlt
jno
icebp
sbb
into
test
or
movsb
pop
mov
jne
ds
pop
jne
outsb
in
outsl
aas
fwait
or
fwait
into
aas
push
imul
stos
jmp
cld
idiv
xchg
sub
dec
mov
add
test
lea
pop
mov
mov
sub
lods
pop
inc
idiv
aaa
mov
cmp
jo
cmp
mulb
jo
jo
ss
out
push
or
inc
cmp
mov
outsl
sub
sub
call
jle
mov
cwtl
cmp
outsl
xchg
fwait
jb
jp
ljmp
mov
mov
xchg
cs
xchg
sbb
mov
cmpsb
jg
fildll
push
fisttpl
sbb
or
push
xor
jmp
sub
push
adc
out
dec
push
fistpll
or
int3
test
jg
mov
xor
xor
jno
sub
xchg
fs
add
out
call
xchg
or
clc
out
shrl
in
fsubs
pop
jbe
out
mov
fwait
les
incl
mov
out
ds
push
jo
sbb
aaa
add
lahf
lock
lods
dec
scas
pop
inc
jle
mov
outsb
jbe
and
push
std
push
jbe
jg
lcall
pushl
sub
ljmp
fildll
pop
fdivrp
jg
es
out
fistpll
ss
or
fdivrp
lcall
jb
xchg
xchg
insl
or
and
scas
repz
repz
aam
xchg
mov
data16
jmp
bound
sub
jb
in
insl
pusha
out
dec
scas
add
lods
xor
sbb
jmp
and
bound
xchg
sahf
stos
inc
pop
repz
fstpl
cltd
data16
nop
aas
popa
es
push
xchg
jo
shr
xchg
test
sub
adc
sbb
imul
pop
arpl
or
pushl
stos
ss
ret
loope
pop
lods
inc
js
into
incl
outsl
fmull
cs
in
in
sbb
rolb
inc
rcr
enter
mov
test
mov
scas
ljmp
sub
dec
adc
fmul
dec
sub
sub
pop
into
nop
mov
xor
scas
inc
decl
xchg
insb
out
push
sub
inc
test
ja
aas
in
pop
inc
lock
das
cli
out
mov
das
pusha
shlb
inc
add
push
push
pushl
in
out
inc
mov
sub
lret
adc
jno
or
mov
xchg
sub
decl
stc
aaa
out
inc
popf
xchg
push
inc
scas
mov
inc
lahf
and
cmp
push
call
incl
sbb
push
mov
dec
out
dec
in
inc
ss
mov
out
cld
into
cmp
mov
pop
mov
mov
push
xor
inc
outsb
mov
inc
shlb
mov
push
push
in
popa
outsb
inc
js
push
push
incb
pop
hlt
lcall
ljmp
jmp
pop
inc
mov
xchg
and
inc
jbe
mov
pushf
push
inc
jg
in
pushf
aas
inc
mov
es
inc
mov
sub
inc
push
mov
in
pushl
pop
icebp
sbb
inc
push
pushf
and
orb
xchg
in
call
icebp
ja
pop
ret
inc
out
ljmp
xor
ljmp
sbb
inc
jae
pop
mov
in
jns
imul
es
cmpb
ljmp
cmp
and
insl
inc
lea
inc
outsb
inc
negb
adc
ljmp
push
test
insl
and
lahf
imul
loope
es
aas
push
cmpsl
or
inc
out
pushf
xchg
jg
lods
jmp
mov
inc
je
in
addr16
dec
incl
outsl
loop
addr16
out
jnp
xchg
inc
mov
call
inc
sbb
mov
sub
or
mov
sbb
sub
cmpsl
test
test
movsl
in
xchg
jo
jne
ss
mov
and
jmp
push
inc
movsl
pop
das
out
minps
sbb
out
lock
insb
es
sti
mov
add
push
popa
in
sub
insb
and
pusha
ret
mov
jg
push
mov
push
fisubrs
or
jmp
fists
push
sub
jmp
addr16
mov
push
fimuls
jecxz
stos
push
in
lahf
scas
push
es
jle
mov
ss
fistpll
fnstsw
popf
cmp
adc
inc
dec
sub
cs
lcall
cmpsb
insb
in
pop
inc
aas
out
fnstsw
sub
adc
or
pop
pushl
outsb
lods
aaa
verr
push
dec
aaa
in
sti
pop
int3
hlt
decl
sub
add
clc
mov
in
leave
mov
ss
xchg
or
mov
mov
sar
jmp
fimull
dec
xchg
lahf
and
sub
hlt
loopne
incl
lods
ret
cs
sub
mov
mov
in
stos
imul
popf
jl
xchg
int
cmp
adc
dec
movb
shll
inc
daa
pop
sub
lret
pop
sti
in
cmp
pop
sub
jg
in
inc
cmp
pop
push
in
fs
mov
ret
aaa
fucomip
call
call
lret
cmp
test
cmp
in
inc
mov
fsubl
fdivr
jb
or
incl
sahf
inc
sbb
fdivrs
jo
ss
sub
cmp
xlat
test
pushl
mov
and
in
pop
stos
inc
xchg
push
inc
stos
out
in
loopne
out
xchg
sub
xchg
xor
sbb
ret
scas
cmp
adc
test
test
pop
or
imul
daa
fildl
ret
clc
pop
ds
push
cmp
pop
in
dec
push
and
sub
das
xchg
pop
mov
stos
jb
out
in
mov
call
lcall
ret
mov
adc
test
nop
pop
push
inc
stos
les
loop
and
cmp
xchg
les
pop
xor
pushf
addr16
call
mull
pushl
pop
mov
dec
mov
data16
adc
lods
mov
je
out
imul
dec
out
sub
imul
mov
out
fnstenv
inc
mov
addr16
jmp
ljmp
int
pop
add
sub
or
sub
lods
xor
xchg
xor
push
cmpsb
pushl
inc
lds
loop
lods
sub
mov
cmpsl
pop
inc
inc
dec
call
mov
adc
add
xchg
das
push
incl
push
sub
adc
mov
pop
push
nop
mov
inc
je
dec
inc
hlt
push
pop
in
adc
mov
inc
sub
andb
or
mov
sub
jmp
stos
xor
jge
push
std
cmp
sbb
adc
es
jmp
repz
xor
add
push
je
mov
mov
popf
inc
out
pop
push
jmp
cmpsb
xor
pop
insb
mov
inc
lret
dec
lret
aas
xor
cmp
sub
add
es
popa
rcrb
sub
pop
cld
dec
jmp
call
jbe
jnp
out
in
scas
and
popf
or
aas
mov
adc
and
into
call
adc
mov
inc
les
decl
cmc
inc
aas
fs
dec
mov
call
cmpsb
fdiv
mov
aam
jge
mov
js
std
sbb
mov
adc
lcall
cmpsb
jne
lahf
jne
shll
add
mov
sbb
xor
xor
lret
jg
cmpsb
fbld
and
fdivp
movsb
das
push
popf
sbb
mov
mov
mov
pop
push
inc
loop
aaa
mov
fildll
enter
mov
lds
inc
xchg
gs
outsl
clc
push
addr16
je
xor
rcrb
sahf
xor
adc
cli
mov
push
pop
icebp
cmp
sbb
push
jns
out
xor
ljmp
les
pop
xlat
stos
push
subl
icebp
adc
cmpsb
addr16
imul
or
ds
pushl
mov
xchg
jl
or
rcrl
sbb
es
add
call
lahf
lods
xor
outsb
imul
rclb
int
push
adc
jmp
sub
push
iret
cmp
cmp
int
dec
mov
xor
add
decl
push
int3
repz
sub
xor
fdivr
lcall
idivb
push
das
imul
gs
jae,pt
fcompl
xor
mov
fisubs
aas
cltd
les
test
push
xor
pop
sbb
jmp
cmpsl
adc
inc
stos
pop
test
test
es
jb
jl
arpl
push
pusha
add
call
pusha
push
scas
pop
adcl
cli
push
iret
mov
pop
mov
sub
jmp
call
test
fldl
sbb
cld
inc
dec
inc
sbb
push
or
jmp
mov
pusha
imul
je
loop
out
dec
mov
cmpsb
mov
and
cs
decl
xor
xchg
popf
aaa
sub
mov
xor
std
push
shr
lock
xor
cwtl
cli
arpl
shlb
jecxz
dec
cli
in
sub
push
repnz
cmc
pop
imul
fildll
stos
mov
cld
inc
std
jmp
shlb
jmp
push
mov
dec
ja
loope
call
push
mov
mov
daa
push
jae
and
scas
push
pop
cli
or
subb
call
dec
aaa
pusha
sub
lods
outsb
mov
xor
cmpsl
xor
fldln2
or
pop
mov
mov
fs
xor
imul
xchg
dec
cmpsl
cld
lcall
mov
cmpsb
mov
pop
pop
xchg
cmpsb
lods
jbe
sbb
mov
jg
add
insb
out
xor
xlat
jl
cs
add
lcall
scas
arpl
int
fldcw
ds
es
jecxz
sub
dec
fucom
xor
outsl
cs
sub
or
std
sub
inc
push
pushl
mov
in
sbb
decl
cmpsb
pushl
xor
push
jl
les
push
adc
fiaddl
sbb
sub
incl
sbb
pop
and
cmp
xlat
xor
mov
ja,pn
popa
scas
cmc
mov
popa
push
dec
sahf
mov
dec
lock
fstp
lods
popf
ret
xlat
arpl
das
and
jne
and
pop
sbb
inc
cmp
movsl
pushf
insl
sub
sbb
in
pop
ds
mov
lods
out
stos
add
ljmp
fstl
fs
inc
xchg
and
test
cmc
sbb
daa
mov
popa
mov
pop
adc
cmp
pop
fs
dec
lcall
popa
es
fbstp
fcoms
je
sub
mov
shlb
mov
mov
jg
lcall
lahf
and
jl
sbb
mov
movsl
clc
aaa
xchg
je
mov
fildll
pop
stos
sahf
and
cs
mov
outsl
jecxz
cmc
scas
jg
test
push
pop
jo
jg
xor
push
fdivl
pop
daa
mov
sbb
xor
outsl
loope
lods
dec
and
ljmp
adc
ds
xor
sub
clc
mov
pop
dec
cld
ljmp
outsl
inc
movsb
lods
test
enter
sar
push
dec
das
mov
cmpsl
popf
daa
push
mov
sub
cmpsb
outsb
mov
xor
fcompl
dec
pop
push
arpl
xor
push
xor
call
stos
ljmp
xor
fcoms
and
lret
out
or
ficomps
sub
jno
mov
jmp
jp
push
imul
or
out
sbb
xchg
nop
cmpsl
addr16
xor
mov
test
pop
sbb
pushf
sub
lds
push
shl
and
jmp
scas
xor
inc
movsl
cmp
cmpsb
aad
push
outsb
mov
insl
mov
lock
clc
cmp
dec
stc
push
and
jne
mov
jmp
jg
dec
sub
dec
cmpsb
sbb
cmpsl
sbb
xor
outsl
loop
lods
and
mov
mov
pop
movsb
xor
sbb
not
pop
int
fdivs
mov
mov
mov
pop
movsl
outsb
jne
rcll
ret
rolb
ljmp
mov
jmp
cli
ret
loop
std
mov
push
fcomps
pop
xor
mov
pop
push
cmpsl
jmp
sub
loope
enter
xchg
dec
dec
rorb
enter
shlb
jge
out
sbb
aaa
std
jmp
push
sbb
in
inc
push
in
cs
movsl
jno
mov
adc
mov
incl
data16
imulb
and
inc
push
mov
xchg
pop
and
mov
jg
and
jnp
cmpsl
mov
sbb
ds
arpl
mov
jge
out
add
or
sbb
ljmp
push
cmpsb
sbb
gs
add
pop
cmp
push
xchg
push
dec
sbb
pop
fildll
daa
lahf
lods
mov
mov
out
mov
fsubs
pop
testl
adc
cli
mov
mov
inc
push
ficompl
and
push
fistpll
push
or
sbb
es
nop
xor
cmp
mov
and
mov
subb
stos
cs
pushf
sbb
in
out
arpl
add
ljmp
mov
jne
mov
jbe
mov
xchg
mov
popa
pushf
cmp
call
dec
popl
not
lods
and
sub
pop
add
sub
ljmp
pop
lret
bound
outsb
adc
sbb
lret
sti
mov
rcrb
xchg
call
add
sub
rolb
sbb
sbb
in
fsubr
ljmp
or
and
ficomps
xchg
inc
arpl
and
pop
scas
mov
pop
xor
aas
fistpll
call
inc
test
sbb
sub
or
sbb
push
mov
in
dec
das
and
pushl
mov
insb
pop
notb
fiaddl
adc
pop
add
insl
sbb
outsl
das
into
call
jg
pop
xor
das
test
pusha
das
loope
adc
and
or
add
dec
loope
nop
lock
xchg
shrb
xchg
jns
jl
fistpll
jne
fstps
shr
pop
push
mov
add
jnp
push
test
imull
cmp
fdivrp
ljmp
or
insb
movsl
inc
dec
dec
mov
fisttpll
mov
mov
jmp
push
jecxz
lds
cmp
mov
ret
scas
movsb
imul
arpl
mov
loopne
sbb
sub
lahf
dec
sbbb
sub
adc
xor
incl
dec
and
adc
xchg
mul
sbb
bound
pushf
gs
outsl
push
push
mov
pushl
and
adc
adc
push
stos
out
inc
xor
add
or
xchg
xor
jmp
pop
adc
hlt
inc
hlt
xchg
ja
popf
jmp
rclb
push
cs
mov
fimull
pushl
call
mov
outsb
test
mov
fists
out
imul
mov
movsl
sbb
adc
ljmp
loop
in
sahf
pop
mov
xchg
insb
pop
std
jae
adc
inc
sbb
cmp
sub
mov
cmp
lahf
adc
inc
dec
xchg
sub
dec
adc
icebp
decl
fisubl
or
out
pop
cmc
ljmp
pushf
sbb
mov
test
lods
cmpsl
sub
dec
add
mov
mov
mov
mov
dec
push
xor
cld
pop
sbb
es
es
sbb
adc
jg
or
mov
xchg
mov
shlb
cld
sub
xchg
dec
cmp
xor
xor
push
out
lcall
test
sbb
rcr
aam
das
dec
mov
nopl
mov
adc
dec
pop
je
pop
int3
data16
mov
gs
pop
adc
push
cmp
iret
frstor
jg
lock
and
adc
fwait
and
pop
sbb
mov
and
mov
lcall
push
sub
in
jg
push
and
daa
bswap
xlat
xchg
dec
adc
push
adc
cmp
adc
pushl
scas
lret
popf
pop
and
dec
punpcklwd
repz
pop
mov
cwtl
inc
xchg
mov
inc
cltd
pushf
and
addr16
popf
mov
dec
adc
cli
pop
xchg
pop
mov
out
ret
mov
jle
sub
jne
sti
jmp
mov
incl
or
pushf
fldt
and
push
ffreep
push
fldenv
js
cs
or
ljmp
inc
and
mov
ja
mov
fmuls
sub
dec
lods
shl
decl
cmp
or
in
xchg
aam
movsbl
bound
pop
push
pushl
pop
cvtps2pi
popa
sbb
frstor
and
push
pop
ljmp
lock
add
ret
fstpl
dec
cld
xor
stos
lcall
push
jmp
call
cmpsb
lea
pop
cwtl
jecxz
out
cmc
and
pop
add
lcall
sbb
std
aad
and
xor
push
mov
fwait
pop
scas
push
pusha
cld
or
lcall
xor
jnp
loop
mov
adc
add
lcall
mov
cwtl
je
adc
and
xchg
idiv
jl
loope
imul
aaa
xchg
incl
cltd
mov
sbb
add
push
out
and
daa
imul
fcmovnu
lock
scas
jmp
shrb
sbbl
int3
fs
push
push
lcall
incl
rcl
sbb
mov
sbb
push
fsub
mulb
hlt
into
sti
pop
daa
xchg
dec
decl
push
cld
sahf
and
std
int
xlat
mov
incl
stos
out
test
xchg
cmpsb
std
mov
pop
das
bound
out
mov
std
jmp
or
rorb
xor
add
xor
icebp
incl
std
inc
adc
add
imul
stos
xlat
sbb
lcall
xchg
dec
push
cmp
xor
cmp
add
decl
ja
add
sahf
popf
fstl
popa
lcall
inc
inc
test
fstps
lcall
fldcw
cmp
pop
add
fstpl
fwait
subl
rcr
inc
sar
call
pop
or
mov
mov
imul
fnstenv
push
adc
pop
data16
fcomip
lcall
out
sub
das
shrl
inc
fsubrs
jp
clc
insl
xorb
pop
inc
xchg
pop
pushf
mov
es
insb
add
int3
cmpb
pop
incl
mov
fiadds
lds
sahf
xor
inc
out
add
mov
sbb
pop
ljmp
mov
je
push
lahf
add
mov
xor
mov
std
jmp
nop
add
adc
mov
sbb
push
movsb
lahf
lcall
in
dec
out
sbb
add
insb
aam
dec
roll
lds
loop
rolb
pop
inc
lea
lods
fsubrs
and
pop
negb
mov
jmp
gs
hlt
in
add
add
or
add
cld
pop
ljmp
cli
call
jl
mov
sbb
cltd
addr16
inc
cmp
xchg
push
and
cli
or
lcall
xchg
mov
push
sbb
sbb
orl
arpl
pop
jg
push
pop
es
decl
or
aaa
mov
mov
rol
mov
repz
nop
sbb
push
or
sti
xor
mov
int
lahf
loopne
jne
dec
jae
jl
ljmp
inc
push
push
add
test
iret
cmpsb
xor
add
mov
in
push
pop
jle
icebp
movsb
add
mov
cmpsl
mov
jl
into
lret
jb
pop
icebp
decl
xor
das
adc
movsl
stc
push
lret
addb
xlat
adc
push
test
es
jmp
and
aaa
lret
cmp
sbb
adc
xchg
cmpsb
xchg
test
outsl
sbb
stc
mov
inc
cli
fcomip
lcall
mov
cmp
fiaddl
xchg
jo
cmc
xchg
pop
sub
in
int3
test
jne
loope
pushl
add
shlb
dec
push
les
push
repnz
filds
fisttps
int
in
enter
and
fcomi
mov
mov
daa
sub
mov
and
and
sub
iret
inc
xor
ds
push
fdivr
mov
cld
inc
in
in
das
lahf
or
cmp
pop
adc
cs
xchg
les
adc
adc
xchg
neg
cmp
add
xchg
stc
inc
mov
lea
xor
fists
aam
cs
xor
scas
fs
addb
test
fcomip
fildll
fsubrl
out
xchg
out
xchg
pushw
sbb
loope
dec
sub
fiadds
mov
pushl
mov
cmpsl
xchg
xor
sbb
adc
lods
lret
out
push
test
pushl
mov
sti
inc
pop
push
jge
pop
test
cmp
in
cmp
out
add
ds
jns
sbb
adc
in
mov
fdivr
dec
mov
jns
jge
xor
and
in
cmp
cmp
es
add
adc
and
xchg
inc
lret
popa
call
jmp
xorl
ljmp
push
mov
cli
jg
jp
jmp
out
cmc
pop
int3
jbe
sbb
hlt
iret
sub
outsb
cs
cmp
pop
lock
rorb
pop
cltd
xchg
adc
push
sarb
fsubrl
adc
cmp
lcall
inc
lods
xchg
adc
insb
mov
or
xchg
pop
enter
idivl
push
mov
push
sub
mov
and
bound
ret
dec
aas
lods
movb
pop
adc
fcomip
scas
mov
jge
clc
out
gs
jo
ljmp
xchg
hlt
pop
adc
fistps
enter
jmp
sub
test
out
push
in
scas
xor
ret
daa
mov
add
lahf
xchg
jmp
sub
jnp
push
cli
xor
pop
mul
roll
cmp
jge
and
popf
inc
sub
in
stos
sbb
nop
loopne
jno
sub
hlt
cld
insl
decl
pop
mov
or
or
xchg
inc
xchg
mov
idiv
cmc
mov
enter
cmc
decl
jmp
or
mov
cmp
cs
mov
ja
mov
or
hlt
bound
mov
adc
xchg
sub
adc
inc
mov
incl
lret
mov
int3
pop
imul
test
popa
jge
and
pop
push
push
pop
sub
and
repz
addr16
es
stc
dec
rclb
outsl
cli
decl
or
insb
notl
or
sub
pop
pop
bound
in
cmc
cmpsb
in
inc
xchg
push
out
int3
lea
ljmp
addr16
outsb
mov
push
mov
test
sbb
jo
pop
jmp
lcall
push
mov
or
xchg
fdiv
cli
pop
outsb
ljmp
cmp
in
stos
cmp
xchg
fisubrs
add
ret
add
ja
push
pop
icebp
cmp
fdivr
lcall
xor
out
mov
cwtl
fsub
dec
in
mov
dec
push
lds
daa
or
and
decl
cli
xchg
inc
push
dec
test
lcall
iret
cmp
daa
sub
outsl
clc
pushl
cwtl
icebp
adc
out
pop
fs
aas
xchg
fwait
sbbb
daa
and
inc
gs
incl
xor
into
jb
pop
adc
mov
mov
push
scas
in
mov
adc
jl
push
pop
mov
mov
sbb
xchg
and
lcall
or
pop
jns
test
xor
imul
lock
adc
cmpsb
push
xor
jmp
out
mov
das
pushf
mov
jg
adc
inc
xor
les
scas
dec
enter
jg
lcall
push
pop
cmp
test
out
xchg
ljmp
outsb
aad
decl
inc
jae
xor
sub
cmp
pop
cmp
hlt
leave
sub
lcall
xor
out
adcl
adc
mov
pop
neg
adc
push
cmp
xor
das
pop
xchg
push
fwait
push
jno
or
je
inc
aad
pop
mov
test
mov
insl
push
dec
stc
push
icebp
push
pop
jo
es
repz
sbb
mov
inc
xor
dec
fcmove
ljmp
sbb
xorb
pop
pop
pop
jmp
jp
sbb
xchg
dec
inc
decl
add
push
push
xorb
mov
shr
mov
fisttpl
mov
aam
test
xchg
icebp
clc
popf
or
fbstp
sub
adc
mov
push
inc
add
lcall
adc
repz
sub
faddp
scas
mov
jae
sbb
testl
xchg
mov
int3
call
sbb
mov
cmp
fs
out
sbbl
xor
out
aam
cmp
xchg
pushl
dec
adc
inc
push
insl
in
inc
stos
fbstp
scas
int
adc
dec
inc
repnz
icebp
loopne
and
outsb
loop
loop
in
sti
pop
mov
cwtl
push
add
mov
pop
dec
dec
pop
cwtl
rorb
adc
jge
pop
pushf
call
incl
stos
push
ja
adc
sbb
adc
sti
das
stos
rcll
dec
xchg
fs
mov
in
jp
mov
not
test
mov
lock
loop
cmc
push
ret
dec
in
mov
xchg
xor
outsl
sahf
loopne
outsb
inc
mov
sub
fcomip
adc
stos
sbb
xor
imul
cs
inc
int
adc
xchg
lea
decl
scas
push
mov
mov
and
sub
cmp
lock
jmp
push
outsb
xchg
sbb
sub
aad
out
dec
mov
dec
fcmovu
gs
xchg
loopne
bound
push
mov
dec
insl
sbb
stos
inc
mov
dec
incl
les
lock
jbe
xlat
jge
daa
mov
inc
mov
incl
push
psrld
and
ret
je
mov
cs
aad
sub
dec
lods
lcall
loop
xchg
push
mov
pushf
and
out
cmp
shr
outsb
mov
push
sub
jmp
mov
nop
push
add
fistps
push
in
lods
add
ljmp
repz
lods
rcll
pop
fistps
sub
push
pop
jmp
cwtl
push
inc
call
cld
pushl
push
das
pop
sub
push
jecxz
inc
sub
addr16
dec
sahf
rcl
push
xchg
adc
jg
fisubrs
jbe
into
sub
push
sub
jge
sbb
dec
out
in
push
mov
jae
cmp
push
std
outsl
aam
scas
add
sub
adc
mov
push
aam
pop
jle
and
jo
shr
pop
daa
push
gs
mov
adc
int3
jae
push
push
pop
dec
ljmp
or
idiv
cmp
es
stc
xor
push
aam
fildl
jge
aam
pop
cli
ds
rcrl
lods
sub
ljmp
sub
mov
rcrb
or
shr
add
xchg
push
aam
call
mov
lds
rcr
jp
mov
adc
cli
rcrb
nop
rcr
insb
push
push
lcall
stos
xchg
sub
ss
push
push
cwtl
jno
lret
icebp
adc
test
call
jne
movmskps
lret
test
xchg
push
scas
shl
aaa
mov
dec
jne
mov
stc
xchg
xchg
cmp
stos
pop
adc
insl
cmpsb
iret
ret
in
adc
aad
andb
dec
jae
xchg
outsl
clc
cld
push
xchg
adc
cmpsb
and
xchg
clc
or
cmp
mov
daa
aaa
and
lcall
ljmp
lods
or
lock
in
iret
dec
into
sub
mov
xchg
xchg
sbb
aas
push
rcrb
aam
mov
add
rorb
inc
cmp
adc
jbe
leave
loopne
mov
popa
add
in
rcll
shl
out
shll
push
jl
cmp
out
cmovl
push
negb
daa
jb
push
test
mov
mov
iret
xor
jmp
lods
pop
or
fstps
pop
in
leave
adc
pusha
push
pop
or
or
ljmp
add
mov
mov
push
cmp
popf
push
fimuls
outsl
add
xchg
inc
cmp
lret
adc
cld
pushl
xchg
sbb
pop
das
inc
jnp
test
jg
inc
adc
and
int3
jge
jg
inc
xor
push
xchg
add
jl
fistpll
fmull
cmp
hlt
ss
test
cmp
mov
jge
pop
test
ljmp
into
mov
int
dec
mov
push
decl
insl
or
mov
jb
scas
push
scas
sub
mov
add
adc
cmp
pop
sar
jns,pn
shl
push
mov
lds
sahf
aad
lcall
adc
lods
fwait
xchg
mov
test
mov
push
mov
add
ljmp
rorb
jns
mov
xor
fadd
cmp
inc
insb
iret
scas
js
out
je
jns
mov
std
dec
dec
popf
inc
sub
clc
mov
xor
clc
lods
cmp
call
in
or
cmp
mov
in
scas
mov
aaa
jbe
push
jg
jmp
scas
or
nop
cmp
push
punpcklwd
test
int
std
or
lret
push
cmp
and
jge
lods
aaa
dec
xor
push
test
xor
add
adc
scas
mov
sbb
pushl
das
push
ss
mov
fisttps
ud1
push
js
lret
pop
rorl
or
int
mov
lret
ret
pusha
rcll
push
popa
xchg
xorl
sahf
and
and
mov
orb
and
pushl
rorb
ret
push
cmp
jecxz
adc
sub
aam
in
jae
or
sbb
mov
pop
in
sbb
add
inc
mov
out
push
dec
or
outsb
push
adc
bound
sbb
ljmp
pushf
push
inc
sbb
push
xor
rcll
mov
mov
rolb
insl
or
jg
icebp
ret
mov
sti
sub
sbb
pushl
mov
jb
push
inc
or
mov
ret
fistpll
decl
mov
daa
hlt
pop
jle
mov
ja
sub
push
cli
mov
cli
add
or
push
sub
push
repz
jmp
je
jmp
push
pop
repz
fisubrl
or
rcll
gs
std
lcall
fnstsw
test
das
xorl
sub
bound
das
sub
mov
push
out
outsb
adc
shlb
xchg
push
cmp
cmpsb
xchg
dec
and
iret
das
jmp
xor
out
cmp
or
push
into
jbe
add
push
push
xchg
xor
fwait
cmp
pushl
insb
push
fwait
lods
cmp
pusha
aaa
lds
xchg
out
pusha
iret
xor
fsubr
sub
sbb
ja
push
jmp
insl
dec
mov
mov
fsubrl
inc
or
cmp
test
fsqrt
jg
cmp
sub
lret
xor
fwait
jg
pop
stos
lret
dec
xor
arpl
cs
mov
mov
ljmp
nop
arpl
call
lcall
pop
or
das
fimuls
and
icebp
lcall
mov
pop
data16
mov
or
mov
jo
or
addr16
cmp
nop
pushl
adc
mov
adc
scas
leave
leave
xchg
and
sar
pushl
pop
mov
sahf
in
repnz
xchg
test
push
dec
jnp
out
arpl
addb
and
scas
xlat
push
ficoml
outsb
in
ds
xlat
mov
sbb
inc
clc
scas
out
movsl
sub
pop
push
test
je
cli
adc
jg
jmp
jbe
test
push
adc
ret
inc
cmpsl
mov
filds
insl
scas
inc
test
inc
dec
ret
xchg
or
jmp
fs
ret
inc
xor
scas
je
pushl
dec
arpl
jmp
arpl
adc
mov
stos
xor
lea
stos
and
and
xchg
imul
jmp
or
insb
scas
push
dec
mov
jp
or
aaa
adc
pop
add
mov
fs
fiaddl
and
into
inc
decl
lock
std
jp
pushl
bt
xchg
movsl
imul
call
pop
add
sbbl
leave
push
pop
sub
popf
sub
jl
jmp
or
push
push
cwtl
arpl
jmp
dec
pop
and
adc
mov
inc
and
decb
jns
int
ljmp
mov
cmp
incl
in
sub
xchg
call
dec
in
jg
mov
mov
sahf
sbb
adc
jns
fwait
sub
xchg
add
xchg
movsl
xchg
dec
pusha
stc
xchg
inc
outsl
fidivs
lods
push
sub
add
xorb
flds
xchg
pop
pusha
pop
add
mov
and
add
adc
xor
outsl
cmpsb
mov
call
adc
or
xor
cld
pop
out
mov
pusha
mov
push
das
rcrb
incl
and
push
sub
inc
arpl
mov
sbb
inc
push
add
pushl
out
in
sbbl
adc
jno
mov
nop
dec
stos
inc
out
call
xor
mov
addb
cmp
mov
sahf
xor
sbb
hlt
jmp
push
test
mov
addr16
addl
test
lcall
testb
or
inc
mov
aas
out
out
fisttpll
subl
roll
sbb
push
sub
ljmp
jmp
fcmovnb
add
adc
jbe
inc
insl
mov
xchg
pop
mov
fwait
mov
idivb
or
lahf
jl
inc
jae
jp
sbb
add
add
lcall
cli
int3
push
es
add
inc
rolb
cmpsl
sub
push
xor
std
cmp
inc
into
cmp
dec
int3
add
ja
xchg
dec
push
loop
movsl
xchg
rolb
jl
decl
hlt
xor
insl
inc
add
add
jg
xor
sar
ljmp
pop
xor
push
js
js
jb
pop
fwait
xor
test
decb
jmp
lcall
repnz
dec
jae
imul
iret
aam
xchg
sbb
mov
jle
cmp
std
scas
mov
fists
out
or
sbb
incb
xchg
xchg
inc
loopne
jne
jle
adc
inc
scas
dec
repz
enter
data16
int3
ljmp
aaa
xorb
or
jmp
call
jb
lods
ljmp
dec
or
add
movl
lahf
mov
daa
adc
jbe
add
ret
cmp
xorb
push
sbb
leave
lcall
cmp
cmc
outsb
xchg
dec
shrl
dec
and
mov
lahf
cmc
decl
subl
pop
pushl
xor
inc
mov
xchg
leave
inc
add
and
gs
inc
sub
or
fmull
cmc
push
inc
ret
mov
in
enter
xlat
lcall
loopne
xchg
mov
pop
mov
push
xchg
xchg
scas
push
add
aaa
jnp
jle
sar
clc
call
mov
out
inc
cmp
dec
xor
addr16
nop
push
xlat
xor
adc
test
lcall
sbb
sti
sub
sti
xor
out
sbb
lods
xorl
test
shll
xlat
enter
or
cmp
xchg
cmp
or
insl
movsl
int
lahf
push
jmp
and
adc
mov
push
mov
add
jle
or
inc
inc
mov
push
mov
jge
cwtl
cli
jge
mov
and
pushl
inc
lret
dec
jp
push
je
push
pop
or
in
data16
mov
addr16
xor
mov
jp
sar
nop
adc
add
jmp
ret
dec
add
cmp
ret
jns
mov
das
int
jbe
scas
sti
cmc
mov
xchg
adc
jecxz
clc
or
jnp
mov
pop
pop
ror
into
add
testb
pop
mov
pop
sahf
call
cli
mov
jl
cmc
xor
jne
pop
push
pushf
pop
and
pop
rorl
cld
nop
dec
dec
addr16
mov
mov
mov
repnz
js
out
pop
stc
std
fisubrs
mov
lret
jmp
jl
scas
std
xchg
inc
jl
push
or
in
dec
std
int3
lahf
mov
pop
lahf
mov
cld
jmp
decl
insl
lods
testb
stos
or
pop
jg
mov
adc
xchg
sub
call
mov
dec
jle
repz
adc
jbe
cmp
push
enter
mov
decl
cmp
incl
cli
mov
fnstsw
repz
out
clc
ljmp
cmp
mov
ss
sub
rcr
inc
cld
incl
mov
mov
pop
cmp
mov
aam
xlat
out
push
cmp
incl
sbb
adc
push
test
add
or
lock
fs
test
ljmp
mov
inc
add
add
sbb
xchg
xlat
or
enter
mov
mov
cmp
fimuls
in
xchg
lea
bound
js
incl
leave
js
cmp
lods
les
call
mov
jg
incl
rol
insl
arpl
popa
ret
cmc
int
outsb
test
mov
cmc
jb
jmp
daa
mov
cmp
mov
popa
dec
js
sub
mov
adc
add
loopne
xorb
and
aaa
lds
dec
addb
lcall
xor
push
pop
cld
sti
jo
xor
adc
add
decl
or
push
or
xchg
add
jp
mov
mov
mov
test
cmpsb
ljmp
test
rcll
or
jns
int3
divl
mov
push
test
push
jecxz
sarl
mov
adc
out
fwait
into
stos
sbb
mov
call
pop
stos
cld
dec
dec
jno
andl
inc
out
xor
xchg
inc
sub
push
mov
fists
in
push
mov
dec
rcl
leave
sbb
cmp
push
push
flds
xor
and
aaa
enter
fwait
test
lods
lock
call
pusha
mov
push
or
sbb
fs
insb
aam
sub
icebp
or
ljmp
sbb
mov
inc
xchg
jp
pop
xchg
in
movsl
jno
fs
cmp
decl
outsb
out
adc
mov
xor
xchg
ljmp
sbbl
mov
clc
jns
pop
scas
xchg
push
add
jge
mull
lods
ret
jb
adc
ljmp
cs
pop
pop
push
mov
xchg
mov
inc
sbb
or
icebp
daa
cltd
loopne
ljmp
add
jge
jmp
jg
adc
cmp
stos
stos
jl
test
add
test
std
dec
andb
incl
xchg
add
out
jo
rcrb
iret
lcall
mov
jo
pop
inc
xchg
inc
xchg
packsswb
mov
pop
aad
sub
enter
pop
jl
add
pop
call
out
dec
aas
es
push
in
add
fcomi
sub
daa
ss
jecxz,pt
mov
sbb
cmp
sbb
xor
adc
push
outsl
cmp
inc
pop
jns
outsl
outsb
ficomps
and
inc
inc
jne
cmp
xor
mov
cmp
ds
decl
les
roll
dec
cmp
orl
dec
mov
fimull
or
das
idivb
icebp
stos
std
ss
push
mov
add
sbb
or
xchg
and
aam
rcl
sbb
es
jmp
cmp
xchg
call
or
pushf
inc
andl
insb
dec
xchg
mov
jecxz
and
imul
nop
sbb
cmp
je
push
lock
testb
jg
int
sahf
out
movl
incl
das
fidivrs
sub
add
lcall
rcll
mov
mov
rcrb
xor
push
das
sub
mov
rcrb
xchg
mov
add
call
jo
test
insb
adc
push
add
testl
cmp
pop
rclb
jne
das
cs
cmpsb
mov
mov
cld
rol
std
pop
movsl
xor
inc
aas
mov
mov
xor
pop
outsb
xor
mov
push
daa
lret
add
jle
xor
jmp
out
add
arpl
ret
dec
test
sub
dec
add
mov
shlb
jae
scas
add
jb
adc
sti
inc
loope
add
fidivs
dec
data16
push
mov
call
mov
xor
gs
sahf
or
test
xchg
mov
sub
lcall
mov
ficoms
aas
and
nop
mov
sahf
dec
ds
fistpll
cmp
sbb
mov
lds
add
mov
nop
mov
arpl
sub
pop
mov
push
outsb
mov
repnz
cwtl
ljmp
aas
jae
cmp
aam
test
stos
repz
jbe
pop
sbb
incl
outsb
xchg
inc
sti
leave
add
ror
inc
lret
stos
pop
sbb
sbb
cmp
mov
ljmp
fs
mov
dec
repnz
enter
outsb
call
cmp
add
imul
xlat
std
jg
ljmp
inc
ja
hlt
imul
ret
int
mov
sub
mov
mov
sarl
push
mov
xlat
dec
jae
cmc
shlb
jmp
inc
jge
cmp
mov
mov
sub
xchg
mov
popf
sahf
ljmp
incl
iret
mov
subb
mov
pop
push
add
movsl
and
loop
ljmp
mov
sbbb
cltd
sub
cli
lock
adc
xchg
add
cmc
mov
clc
add
fdivrp
stos
xor
repz
ljmp
dec
jo
cwtl
fildll
and
sbb
sub
test
jno
popa
xor
mov
test
inc
int
dec
rorb
into
loopne
incb
ljmp
in
or
cwtl
jb
shrb
cmp
jge
mov
dec
pop
fstpt
jl
cltd
aas
jg
leave
jge
mov
xchg
ret
scas
shlb
lahf
and
testl
lcall
out
jecxz
daa
xorl
jg
jg
test
mov
andb
dec
scas
mov
mov
jmp
xchg
mov
enter
lcall
scas
jle
push
scas
xorb
pop
add
ss
dec
jle
cmp
jne
ljmp
sbb
orl
cmpsb
or
xor
sub
ja
scas
cld
push
mov
add
decl
xchg
outsl
pop
cli
pop
addr16
data16
pushf
sbb
shlb
sub
jg
xor
ret
push
scas
mov
xor
pop
mov
adc
repz
push
lods
cld
frstpm(287
xor
ret
xor
push
sbb
jb
jmp
or
das
sub
shrb
mov
and
vmovlps
fwait
cmp
ret
insb
inc
inc
pop
lock
jmp
ret
jle
leave
bnd
rcl
jmp
dec
fwait
add
daa
mov
mov
cmp
jl
xlat
shll
incl
cltd
cmp
out
addr16
call
adc
jmp
aas
pop
pop
inc
insl
scas
mov
scas
lock
iret
in
xor
enter
aas
sub
test
mov
push
call
fisubs
jmp
pop
jg
lret
dec
js
and
pushf
lock
jbe
scas
pop
mov
mov
cmp
repnz
scas
inc
outsb
sbb
jmp
les
dec
jbe
xchg
mov
out
movsb
pop
test
lret
add
aaa
cmp
leave
hlt
lcall
cmp
mov
rcl
sbb
imul
jo
add
mov
out
mov
pop
jne
inc
mov
adc
jmp
and
out
mov
in
add
frndint
jl
inc
mov
adc
bts
and
pop
xor
out
xchg
mov
lcall
mov
mov
cmp
in
push
adc
incl
imul
shrl
jno
icebp
icebp
mov
std
xchg
pop
mov
jg
mov
dec
or
test
decl
outsl
add
cmp
pop
aad
jle
notl
adc
sub
outsb
lret
and
inc
cwtl
cmpsl
ljmp
sub
sub
jae
or
leave
pushl
andl
je
incl
xchg
adc
je
or
xchg
mov
in
decl
adc
hlt
dec
inc
call
incl
dec
sub
mov
sbbb
push
out
or
adc
sbb
cmp
inc
cmovbe
add
cltd
jnp
jns
icebp
in
insb
test
ss
lcall
aaa
xchg
jbe
aas
cmp
jp
je
mov
aad
cld
sti
fbld
pop
loopne
rcrb
cmp
adc
ret
or
sarb
icebp
jmp
popf
cmp
ljmp
shlb
stos
lods
out
and
add
incl
ret
in
cmpsb
dec
and
jae
iret
cmp
test
js
or
adc
aam
add
sbb
ljmp
test
mov
xchg
cld
adc
mov
pop
enter
xchg
mov
ljmp
lcall
outsb
mov
pop
lea
fiadds
mov
push
lea
les
adc
subl
ljmp
lahf
idivl
adc
aas
jl
dec
adc
sbb
jb
cli
out
rolb
dec
xchg
pop
in
loop
cli
jnp
cli
add
mov
adc
ljmp
push
xchg
test
dec
inc
sub
cmc
out
xchg
cli
cmc
mov
testl
jge
mov
mov
xchg
icebp
xchg
mov
lock
fsts
dec
inc
enter
mov
lcall
adc
iret
push
sbb
cmpsl
ret
cmc
dec
pop
push
add
cmc
nop
push
cmp
add
call
jge
popf
mov
out
mov
add
cmpsb
xor
lds
sub
mov
adc
sbb
popf
ss
inc
mov
adc
ljmp
incl
sbb
int3
mov
bound
mov
jmp
jl
std
lea
cmc
fdivrp
fnsave
xchg
fidivrl
adc
jae
in
std
jecxz
mov
cs
ljmp
ret
loopne
sub
or
aas
cli
adc
jg
lcall
jo
jmp
sahf
stos
cld
sbb
push
push
mov
in
cld
mov
insl
sub
push
mov
sub
xorb
pop
cmp
mov
cmc
lods
lcall
mov
sub
in
jns
pop
popf
jb
xor
call
dec
mov
out
loop
and
mov
adc
cmp
pushl
push
jns
testb
stos
jle
and
or
lahf
adc
das
add
add
xor
xchg
push
inc
add
outsl
jnp
mov
ljmp
add
dec
jne
popf
cli
jno
jle
xor
dec
shll
mov
pop
xchg
in
mul
movsl
orb
insl
cmc
sbb
outsb
inc
clc
outsb
fistpl
inc
cmpsl
adc
clc
filds
stc
pop
mov
cld
inc
shrb
and
or
and
ss
push
ret
jp
imull
filds
out
cs
stc
ficomps
push
ds
out
aad
aad
nop
popf
decl
jmp
pop
push
xchg
out
inc
bound
mov
cmp
dec
std
cmp
pushl
daa
mov
aas
test
out
mov
out
movsl
je
mov
sar
pop
mov
js
xor
aam
pop
cs
std
push
jne
sub
data16
mov
ret
jnp
mov
cmc
inc
xchg
or
add
jg
out
js
test
jns
sar
pop
push
jno
xor
dec
repz
or
cmc
pop
std
lcall
test
ljmp
cld
sub
pop
lahf
test
decl
pop
enter
repz
cs
xchg
imul
loop
mov
lea
mov
lahf
add
bnd
mov
movsb
std
xchg
ret
addb
pop
cld
and
cmp
fnstcw
test
mov
call
lods
repnz
mov
aad
cmp
jmp
es
mov
rorl
or
ljmp
lock
or
xchg
add
mov
incl
sub
sub
out
pop
mov
das
sahf
mov
mov
decl
out
cli
or
pop
add
push
sub
icebp
aam
lock
decl
divb
test
adc
and
lds
ljmp
outsl
pop
rol
ljmp
test
lret
inc
sbbl
outsl
sbb
mov
add
shll
jno
lret
adc
jmp
in
js
lock
pop
les
adc
cmp
sub
cmp
jmp
or
inc
cmp
lcall
jb
loopne
js
mov
pop
ss
cli
insl
cmc
mov
scas
test
jg
aaa
pop
das
push
aam
movb
pop
incb
fldcw
dec
mov
out
mov
push
repz
push
or
dec
cmp
push
or
lea
sar
ljmp
out
push
cmpsb
push
or
mov
test
cmp
and
ljmp
or
js
lds
add
jo,pn
mov
call
sbb
in
push
subl
mov
sub
mov
cli
adc
mov
imul
sbbb
out
add
xchg
cli
icebp
cli
fnstsw
adcb
inc
loop
repnz
lods
ret
jmp
cmp
mov
in
dec
xchg
jae
push
jmp
mov
scas
hlt
in
into
insb
inc
inc
mov
test
dec
mov
add
lcall
ljmp
mov
jnp
out
inc
imul
jae
xchg
pop
mov
scas
xchg
lcall
fcomip
lea
idiv
xor
rol
hlt
cld
add
mov
out
outsb
decl
push
jg
aaa
aam
mov
cmp
scas
pop
push
loop
mov
inc
int
lcall
dec
mov
add
xchg
adcb
aas
mov
into
dec
fsubr
adc
pushl
xchg
mov
add
xlat
add
push
out
in
outsb
cmp
ljmp
mov
je
mov
mov
lock
cmpsl
scas
add
imulb
push
lcall
stc
std
shlb
in
stc
in
addr16
ret
pop
iret
or
inc
sub
or
call
loopne
stc
pop
jp
cmc
push
and
scas
movsb
fisubs
test
clc
mov
pushl
inc
cmp
xlat
pop
jbe
je
out
and
dec
jmp
and
std
mov
jle
cli
cli
mov
mov
push
mov
jbe
cmp
dec
push
xor
xchg
roll
xor
lret
data16
ljmp
clc
jns
xchg
push
jp
pushf
sbb
mov
stos
mov
mov
loopne
jp
in
cs
xor
data16
icebp
call
cld
mov
icebp
xchg
mov
loop
js
pop
pop
mov
add
mov
ljmp
mov
lret
xor
jb
jne
insb
add
and
jp
scas
mov
add
out
add
cld
pop
dec
fwait
jb
les
js
ss
cli
cmpsl
xchg
outsl
mov
mov
in
in
ja
in
cld
ss
and
and
jle
cmp
loop
les
sub
fistpll
nop
aas
out
jbe
gs
jg
aam
mov
mov
and
pusha
or
sub
shll
rcll
fcomip
push
repz
mov
fsin
in
mov
cmp
inc
call
std
js
xor
fdivl
outsb
dec
cmpsl
mov
lahf
pushf
sub
std
lock
js
lea
pushl
mov
sahf
mov
sub
jmp
cmp
addr16
push
ljmp
inc
mov
pop
pushl
mov
jne
or
insl
hlt
icebp
jbe
ret
mov
lcall
int3
jno
sbb
pop
lahf
mov
cmpsl
cli
cwtl
jns
sbb
lock
push
pop
lock
add
iret
clc
out
mov
push
cmpl
das
jg
dec
std
pop
clc
lcall
jo
outsb
out
adc
xor
call
jg
frstor
xor
cmp
push
adc
sub
pop
fcmovb
test
insb
mov
ljmp
push
test
ds
daa
cmp
sub
jne
lods
aas
ljmp
dec
sbb
into
pop
mov
repz
jle
das
icebp
icebp
sbb
sar
sub
cmp
fidivs
lock
cmc
jg
lcall
cmpsb
xor
mov
sub
inc
mov
outsb
adc
out
jg
js
jle
mov
cwtl
ret
ljmp
cmp
sbb
push
jecxz
dec
incl
jae
loope
mov
or
mov
pop
cld
and
leave
mov
div
ljmp
cli
add
and
aam
into
xor
push
fisubrl
adc
add
sbb
jmp
out
outsb
icebp
sub
stos
jge
push
out
xor
push
xor
mov
jg
cmp
ss
and
jae
mov
xchg
xchg
decl
incb
out
mov
or
and
dec
lahf
cmpb
es
decl
mov
faddl
push
xor
jmp
pop
les
pop
sub
push
in
xchg
add
jg
std
lahf
mov
sbb
call
lds
subb
jp
inc
test
cmpsl
testb
jo
stos
push
jno
stos
outsl
mov
repnz
add
push
mul
sbb
pop
xchg
pop
push
call
push
push
mov
mov
sbb
jg
call
push
push
pushl
lock
mov
jl
scas
cmp
push
movsl
xor
ret
fs
and
decl
xor
lock
adc
jns
es
mov
push
imul
out
popf
cmp
ss
test
xchg
and
lods
mov
es
push
mov
out
sub
bnd
and
leave
lock
mov
sbb
gs
mov
mov
cmp
cmp
sub
pop
mov
out
lods
jle
mov
sbb
jmp
repz
inc
push
insl
jmp
pop
xlat
mov
repz
jmp
jg
and
adc
cli
xchg
cmc
pushl
scas
jmp
inc
nopl
fs
addr16
out
std
jmp
sub
sbb
outsb
cltd
imul
negb
push
mov
adc
mov
xor
mov
sub
aaa
call
dec
pop
mov
sbb
call
loope
loopne
icebp
mov
out
jno
les
lods
test
mov
lds
ds
testb
sub
sub
cmp
test
lods
push
mov
mov
rorl
decl
mov
mov
xchg
mov
xor
push
inc
cs
in
stos
sbb
out
push
call
fcmovbe
lods
sbb
ja
les
outsl
int3
call
lcall
and
mov
or
or
mov
fsubp
shl
ret
lods
call
sbbb
in
jle
dec
sbb
hlt
insb
pop
lods
mov
fdivrl
faddp
mov
scas
cld
mov
incl
lcall
inc
lret
mov
enter
std
incl
clc
dec
in
std
mov
jmp
pushf
jns
mov
repz
ja
stos
xchg
jp
out
xchg
jae
jecxz
cmp
sub
xlat
xchg
sub
mov
ljmp
jl
stos
mov
mov
lds
xor
mov
ljmp
sub
jecxz
adcb
shr
fcoms
xchg
cltd
jae
mov
cmp
cmc
ljmp
test
adc
push
and
test
push
add
sub
call
push
sub
jo
sub
pop
hlt
pushl
sub
mov
mov
xor
mov
jmp
xchg
pushl
aas
dec
push
mov
in
adc
shlb
add
inc
insb
xor
inc
repnz
xchg
sub
dec
cmpsb
stos
jno
and
jg
pushf
pop
mov
push
test
ret
jg
pushl
push
xor
repz
xchg
in
insb
lea
loopne
sbb
insl
lret
jge
decl
imul
sub
fwait
lcall
pusha
cmpsb
adc
test
mov
fistpl
xor
pushf
pop
mov
imul
mov
mov
sbb
stos
sub
dec
dec
cmpsb
ja
outsb
outsb
add
xchg
in
fs
push
jmp
cmp
imul
pop
adc
test
jns
jl
ss
out
into
loop
jnp
cmp
incl
clc
jb
and
nop
aam
adc
mov
mov
test
mov
out
arpl
inc
call
int3
push
fidivl
xchg
int
mov
mov
sub
add
mov
cmp
aam
push
sbb
push
aad
iret
ss
repnz
out
out
fistpl
divl
mov
nop
aam
pop
or
xor
lods
xchg
addr16
lods
repnz
inc
jmp
cmp
call
jmp
ljmp
mov
mov
into
call
xlat
repnz
xor
mov
in
lds
call
jo
push
xchg
push
dec
dec
cmpsl
test
call
scas
repnz
cwtl
fildll
xchg
or
call
insl
cmpsl
dec
inc
pusha
add
xor
lods
repz
cmp
mov
mov
incl
inc
ret
out
rclb
and
dec
aaa
arpl
clc
jg
mov
icebp
std
mov
jmp
sbb
sub
dec
pop
shl
in
out
push
mov
insl
mov
adc
cmp
cmp
in
push
fwait
inc
ret
fisttpl
and
dec
xchg
cmc
aam
jne
stos
add
ljmp
add
pushl
push
cmp
xchg
mov
or
lds
cmp
pop
pop
adc
jge
push
xchg
lods
fwait
pop
adc
pop
mov
ja
clc
fstpt
cmp
cld
xchg
add
fisubs
pop
enter
inc
sub
pop
jg
mov
adc
out
adc
jae
mov
add
pushl
test
call
int
scas
pop
mov
incl
inc
sub
mov
outsb
add
stos
xlat
sti
xchg
ja
cmp
cmc
add
enter
shlb
mov
cld
sub
js
mov
jg
decl
arpl
mov
outsb
jg
adc
jg
scas
mov
pop
cmc
fstl
cmc
js
inc
add
add
mov
movsb
jg
int
orb
clc
ja
and
push
outsl
or
dec
adcb
int3
int
sbb
lods
jge,pt
sub
sti
ljmp
iret
call
cmp
outsl
and
loop
jle
ret
iret
mov
cmpsb
jl
pusha
jnp
repnz
jmp
ja
jb
aad
xchg
das
das
sti
fisttpll
cmp
cmp
pushl
pop
jle
out
push
and
dec
inc
cs
inc
cmc
addr16
add
out
out
dec
scas
xor
lock
insl
lea
push
insb
mov
rcrl
jae
mov
sbb
jmp
push
jge
xchg
pop
jb
lahf
pop
xchg
out
cmpsb
xlat
push
outsl
mov
add
jge
inc
xor
jno
xchg
das
add
fcoms
scas
jne
sub
outsl
clc
ljmp
movzbl
subb
mov
inc
repz
adc
in
pop
add
fs
ds
mov
cli
lods
mov
push
test
pop
push
xchg
xor
pop
fs
rcl
je
adc
mov
fucomip
jmp
hlt
add
imul
clc
js
out
or
decl
and
xlat
ret
out
sub
fmul
fnsave
imul
out
cli
pushl
mov
jg
in
aad
daa
jp
lea
lcall
repnz
sub
push
outsb
pop
rcll
inc
inc
in
insl
imul
fisubrl
push
aam
jmp
fnstenv
gs
xchg
jle
lcall
mov
into
add
out
jns
push
lcall
mov
xchg
push
and
sub
mov
movsbl
lahf
mov
call
add
stos
inc
xor
in
cs
and
jge
inc
mov
cmp
out
clc
push
push
xor
das
push
gs
push
mov
lcall
lock
in
into
pop
cmp
push
mov
mov
push
add
push
enter
push
loopne
xor
mov
adc
rcrb
lcall
dec
lods
nop
xlat
test
out
cld
mov
dec
cmp
nop
mov
sub
fcmovnbe
mov
dec
mov
mov
cmpsb
imul
push
pushf
std
mov
mov
ret
jg
or
pusha
mov
ljmp
mov
out
or
xchg
shl
push
push
sbb
adc
cmp
xlat
mov
and
ljmp
fidivrs
in
jo
dec
xchg
mov
sub
mov
sbb
rcll
fsubrs
data16
call
inc
cmp
dec
xlat
sbb
dec
mov
fwait
push
mov
stc
dec
pop
lahf
mov
push
in
dec
adc
sahf
xor
loope
cmp
xchg
lcall
jo
into
sbb
mov
mov
scas
rclb
mov
cmp
mov
mov
pushl
addr16
mov
mov
adc
insl
shrb
lods
in
aas
pop
and
repnz
pop
leave
push
mov
jo
ja
scas
movsl
pop
daa
mov
jno
outsb
rorb
insb
dec
das
pop
pop
jle
int
lock
cmp
scas
stos
push
mov
bound
add
xchg
cmp
xchg
sub
lcall
push
dec
xor
push
and
cmp
dec
ret
cltd
jg
push
and
ljmp
xchg
or
mov
stos
addr16
fiaddl
and
cmp
add
outsb
jo
outsl
push
incl
inc
or
popa
mov
mov
in
in
negl
cmp
or
sbb
sub
inc
sbb
fisubl
push
dec
popf
idiv
add
sub
stos
rorb
cwtl
push
pop
rolb
cmp
dec
out
dec
lods
int
inc
sbb
icebp
repz
mov
adc
mov
fs
jmp
push
mov
xor
pop
mov
les
xchg
or
decl
imul
xor
add
jg
in
inc
mov
push
jge
sbb
dec
gs
cmp
push
lret
sub
out
adc
sahf
rol
push
xchg
xchg
enter
rcl
cltd
lea
dec
sub
gs
pop
lcall
jecxz
jmp
out
sbb
sub
lahf
pushf
mov
cli
clc
cmpsl
push
sub
dec
pop
fwait
loopne
pop
push
jns
jmp
ja
loopne
in
in
dec
xchg
pushl
insb
insl
mov
or
subl
sbb
sub
xchg
mov
fwait
jmp
cli
rorl
lods
dec
adc
fldcw
sbb
das
dec
js
sbb
lret
decl
repz
shll
sub
das
pop
xchg
pop
cs
outsb
and
test
push
jb
out
ljmp
and
stos
jno
inc
or
test
adc
and
or
jg
clc
jg
inc
lods
xchg
negl
movsb
and
dec
lahf
mov
ret
outsb
xchg
ljmp
push
mov
inc
scas
in
mov
ja
popa
lods
test
pushl
insl
in
sub
xlat
sub
js
add
loopne
sbb
ljmp
ret
and
inc
lods
mov
fbstp
inc
das
and
decl
adc
mov
in
adc
lret
pop
fwait
mov
push
pop
lcall
adc
pushf
jno
cmp
mov
test
ret
stos
jo
insl
clc
cmp
jg
data16
pop
ffree
push
xor
sbb
jp
xchg
push
inc
fisubrl
fcoml
jo
adc
add
adc
jge
out
call
push
jae
dec
jmp
addb
mov
test
cwtl
addr16
ret
sbb
push
adc
mov
stos
frstor
imul
decl
lods
jb
mov
inc
ds
mov
daa
aaa
pushl
out
adc
xchg
or
inc
daa
inc
jmp
pop
filds
rorl
stos
outsb
pusha
ljmp
inc
push
push
repnz
xchg
ljmp
push
add
call
sub
data16
fsubs
inc
cmpsb
xor
ret
in
loop
mov
xor
loope
jno
addr16
mov
pop
add
cmp
add
outsb
add
jmp
xor
aaa
xchg
inc
pop
inc
xchg
lahf
ja
lret
adc
mov
cmpsb
jecxz
mov
addr16
sub
mov
jne
mov
dec
push
incl
pop
add
outsb
icebp
loop
ds
push
dec
jg
sahf
add
sub
test
inc
xor
cmc
dec
call
in
inc
xchg
xor
mov
adc
das
arpl
push
clc
push
xor
cmp
repnz
imul
mov
pop
dec
push
cmpsl
sub
cmp
bound
jge
out
cmp
mov
out
imul
out
subl
lahf
out
add
xchg
mov
repnz
ret
ja
dec
inc
and
inc
adc
clc
mov
fiadds
sarb
cmpsl
inc
pushf
arpl
aas
and
push
cmp
clc
cld
fisttps
add
mov
lock
es
pushl
cmp
fists
ja
xchg
dec
rcrb
stos
and
mov
call
lcall
and
cli
pop
out
cmpsb
shlb
adc
or
pop
cltd
mov
jecxz
and
cmp
mov
sub
aas
pop
jae
repnz
call
push
aad
mov
in
push
loop
mov
inc
cmpsl
push
arpl
cmc
aas
movsb
dec
sbb
and
test
into
fdivr
jmp
daa
inc
push
mulb
sub
int3
scas
fsubrl
push
cwtl
aaa
fimuls
mov
shrl
mov
mov
int
ret
cmp
add
lcall
insl
mov
add
and
push
jmp
std
aad
or
sub
mov
push
dec
cmp
add
cmpsb
movsl
cltd
cmp
nop
fisttpll
loopne
mov
cmp
jg
outsb
in
cs
pop
mov
mov
rol
sub
sbb
pop
dec
loope
decl
fcomps
ficomps
aam
leave
popa
aaa
cmp
jge
loopne
incl
ja
imul
pop
mov
push
push
fisttpl
cs
mov
cmp
and
stos
cs
insl
fsub
into
jno
pusha
or
xor
cmp
xor
sub
out
test
ljmp
iret
pusha
sbb
pop
mov
repnz
ss
sahf
icebp
xor
xchg
lcall
in
dec
xchg
fcoml
das
push
pop
or
push
fsubrs
and
adc
mov
jl
fdivrl
pop
xchg
fldt
jecxz
mov
jbe
jecxz
jp
aam
jl
fs
pop
icebp
call
addr16
mov
imull
test
push
jb
jbe
negb
adc
repnz
jmp
sbb
sti
test
movsb
jbe
lahf
sub
pop
addb
xchg
cmc
loop
jb
mov
dec
mov
adc
sbb
sbb
fadds
xor
push
jb
pusha
dec
fildll
xchg
scas
pushl
cli
dec
arpl
int3
xor
inc
xchg
dec
jecxz
mov
mov
jecxz
jecxz
jmp
sub
loop
pop
lea
mov
lock
adc
rcll
pop
lock
jmp
sub
gs
ljmp
xor
sbbl
push
ljmp
lcall
mov
mov
les
push
in
adc
xor
pushw
mov
clc
inc
arpl
sti
lcall
push
jl
pop
sbb
push
fdivrs
xor
lods
mov
pop
xorl
imul
insb
ret
scas
gs
ffreep
sub
adc
lcall
jne
or
dec
inc
jne
or
das
imul
movsbw
push
pop
cmpsb
cmp
sub
cltd
aaa
sahf
clc
out
clc
decl
dec
inc
dec
sub
xorb
je
test
inc
or
sbb
insl
arpl
mov
mov
add
jo
sub
outsb
push
mov
pop
shlb
and
cmc
stos
xlat
punpckhwd
mov
adc
loope
lds
push
jmp
pop
adc
mov
pop
xlat
inc
cwtl
sbb
cmpsl
add
push
stos
pop
rcrb
push
ficoms
lret
jns
faddl
stos
les
fisubs
movsb
jmp
fwait
int
sub
xchg
xor
std
lret
push
rcrl
jae
pop
push
sub
psrld
ljmp
bound
repnz
out
xchg
stos
push
loopne
ljmp
cmp
addr16
imul
cmp
call
fisubs
xor
negb
sub
inc
mov
frstor
mov
outsb
push
inc
mov
or
adc
pop
xchg
sub
lcall
jg
pop
xor
pop
cs
icebp
shl
fsubr
in
add
cmp
clc
lcall
cmp
mov
divb
pushl
out
outsb
dec
aad
and
out
jge
jne
popf
and
cmp
and
push
cwtl
fs
push
outsb
mull
sar
in
add
inc
mov
cmpsl
jmp
ss
out
dec
mov
addr16
test
jg
ret
out
iret
cmp
push
stos
sbb
sub
incl
fadds
push
jne
andb
xor
pop
cltd
test
lock
into
rcl
lahf
push
mull
mov
xor
cmpsl
jecxz
sub
xchg
in
out
xorl
movsb
popf
out
clc
add
not
in
sub
scas
push
jb
out
fildll
mov
lea
outsb
sub
mov
dec
sub
stos
mov
movsl
inc
lcall
lahf
sar
das
adc
sbb
ja
test
jns
mov
mov
loopne
out
mov
pop
insl
lods
adc
mov
out
loop
inc
push
xor
insb
js
out
sub
pop
mov
adc
icebp
xchg
pushl
cld
call
push
cmp
ja
and
inc
push
pop
pop
cld
loopne
mov
in
pop
incl
dec
lea
jns
xchg
cs
and
shlb
faddl
fsubrp
mov
movsl
incl
stos
jge
fdivs
inc
pop
mov
mov
cs
xchg
data16
pop
cmp
ljmp
clc
jmp
cmp
push
xor
xor
mov
mov
xlat
push
test
mov
jnp
mov
adc
scas
sub
ficoms
push
and
mov
mov
decb
and
icebp
inc
aam
call
push
inc
mov
xchg
pushl
pop
mov
out
cmp
ror
fsts
mov
xchg
push
push
iret
in
data16
pop
add
stc
jo
mov
mov
inc
and
adc
xor
xor
aaa
std
lcall
mov
mov
repz
pushf
cmp
fcomip
jg
imul
and
pop
repnz
mov
add
jmp
adc
push
in
into
pop
xchg
insl
mov
daa
loope
jmp
inc
cmc
ror
or
mull
repnz
aad
sbb
out
mov
jecxz
pop
lcall
push
mov
push
lcall
xchg
adc
mov
mov
jmp
loop
imul
cmp
jg
mov
mov
lods
sub
imul
aas
mov
lcall
push
xlat
sbb
jbe
fs
out
adc
jns
mov
adc
cmp
ljmp
push
sahf
mov
adc
ss
lahf
jae
outsb
xchg
mov
cwtl
ljmp
bound
call
scas
xor
ds
xor
jle
pop
mov
push
jp
sub
hlt
call
loope
and
stc
fwait
cmp
out
xor
xlat
lcall
movsl
lcall
ss
inc
enter
dec
jg
into
fs
cmp
scas
sar
lcall
adc
lods
mov
xor
sbb
scas
inc
loop
push
aaa
fnstcw
cmp
loop
mov
loop
cmp
or
push
xor
fbstp
clc
or
inc
filds
sub
pop
movsb
mov
xchg
arpl
cmpsl
jae
lahf
inc
cmc
lret
xchg
ja
push
or
ret
mov
push
mov
dec
push
sbbb
fcomip
ljmp
xchg
dec
nop
sar
ret
cld
mov
fnstcw
jg
lods
aad
mov
add
fidivrl
sub
imul
xchg
loopne
call
test
popa
lahf
lods
xor
adc
and
add
sahf
lcall
pop
adc
je
sbb
stos
jae
xor
shlb
push
xchg
jne
jle
or
decl
and
mov
fimull
lds
push
outsl
xlat
fs
call
pop
add
mov
nop
cmc
add
mov
add
mov
ds
mov
jbe
lahf
inc
jo
bound
adc
mov
insb
pop
inc
push
mov
fwait
mov
and
mov
and
jbe
mov
sbb
dec
or
inc
xchg
into
push
and
sti
jle
dec
sub
pushf
stos
push
push
cld
sbb
push
out
push
push
cmp
xchg
mov
outsb
push
xor
jg
je
fidivl
inc
mov
pushf
fdivrs
pop
inc
outsl
mov
inc
dec
lock
call
push
xor
mov
out
pop
outsb
cltd
cltd
js
cli
push
xchg
test
mov
call
adc
notb
pop
out
test
mov
push
mov
mov
adc
mov
mov
fwait
sub
js
mov
pop
adc
dec
fstl
mov
pop
pop
sub
dec
mov
das
sbb
lcall
ljmp
mov
cmp
cmpsb
in
pop
in
mov
pop
xchg
aad
ljmp
jbe
sbb
xor
add
lds
sub
in
mov
data16
lods
push
test
inc
ret
xchg
data16
jle
out
fdiv
iret
lock
das
mov
cs
adc
aad
mov
ret
ljmp
add
lea
ficoms
outsb
ss
mov
out
dec
cmp
cltd
cmp
lock
xchg
sub
out
pop
popa
fdivrp
mov
xlat
lcall
loope
adc
mov
fwait
cld
movsl
sub
jl
cmpsl
push
adc
incl
cmp
out
lahf
jge
xchg
fstl
movsl
sbb
fnsave
nop
lret
jg
xor
incl
insl
mov
ret
push
ss
adc
stc
and
nop
xchg
pop
add
jns
mov
incl
xor
adc
mov
jle
add
cmp
inc
pop
push
pop
mov
notb
ds
adc
mov
sub
and
lcall
ds
test
stos
insb
movsb
and
cld
ljmp
cmpb
mov
hlt
sbb
sarl
jg
repz
fistpl
lea
nop
adc
pop
sbb
pop
or
cld
jp
and
out
pop
sub
push
or
std
daa
negl
sub
mov
sbb
sbb
xor
lret
lcall
ljmp
add
ficomps
mov
sbb
adc
int3
add
fndisi(8087
xor
enter
icebp
jae
xchg
insb
lret
insl
scas
filds
xorl
xchg
sbb
call
test
jbe
sahf
mov
je
jg
lcall
xchg
cwtl
cmpsl
rorb
lods
mov
add
xlat
adc
pop
dec
add
and
add
mov
mov
andl
inc
gs
lock
scas
stos
push
fwait
pop
cltd
sbb
lock
mov
lcall
mov
pop
clc
lock
lea
add
cmp
das
xchg
jbe
sbb
mov
mov
call
mov
mov
lret
out
jge
pop
notb
pop
int3
call
std
call
popa
lret
adc
mov
mov
add
mov
pushl
fstpl
imul
loop
in
out
cwtl
imul
mov
add
jmp
out
icebp
sub
jmp
cli
xchg
adc
xchg
mov
out
in
mov
loope
xchg
push
bound
in
xor
inc
movsl
lcall
ret
sub
jge
popf
xor
rolb
hlt
add
add
in
adc
negb
jmp
cmp
pop
xchg
das
mov
sbb
mov
data16
stos
popa
std
fildl
lea
dec
test
addb
std
aas
sub
mov
xchg
fwait
sbb
pop
jns
sub
mov
cmp
dec
cmp
in
pop
push
pop
pushf
mov
sub
int
mov
cwtl
nop
cmp
or
pop
cmp
adc
lods
inc
inc
aas
or
push
or
xchg
jg
push
sbb
dec
dec
fldl
je
mov
mov
fdiv
mov
mov
fisttpl
out
test
sub
decl
mov
sbb
or
xchg
notl
sbb
and
cwtl
dec
xchg
mov
push
call
xor
fs
sbb
flds
mov
jmp
in
push
enter
enter
dec
inc
mov
pushf
xchg
push
xor
push
lahf
sbb
pop
insl
pop
inc
cmp
cltd
inc
sub
xchg
hlt
mov
add
push
or
jns
aaa
jbe
or
pusha
mov
xchg
call
inc
fisttpll
dec
imul
or
push
sbb
cmp
fldt
ss
xchg
inc
fdivr
popf
push
sbb
movsb
loope
in
out
cltd
mov
xor
mov
xlat
mov
push
setg
je
notl
fdivrs
cs
mov
loope
shl
pop
pop
or
aad
mov
mov
add
testl
fiadds
cwtl
xchg
inc
sahf
or
sbb
mov
roll
out
xor
push
cld
bound
fildl
out
rorb
imul
mov
rorl
call
mov
sbb
scas
xlat
mov
mov
mov
call
sbb
lret
jg
or
sbb
mov
stc
xor
fxtract
test
aaa
and
decl
mov
sbb
cli
incl
dec
daa
sbb
add
adc
xor
je
pop
push
jb
push
or
cld
lock
cmc
and
leave
push
and
pop
call
test
or
sbb
stc
and
mov
xchg
push
cmp
mov
mov
lcall
jge
mov
lods
in
test
lcall
lcall
ljmp
clc
push
inc
out
mov
dec
xchg
push
mov
or
inc
and
fwait
mov
divb
add
mov
or
mov
xor
add
push
lret
or
pop
stc
aad
xchg
test
mov
lea
jae
cmp
stos
sbb
mov
xchg
cmp
jecxz
jo
loope
add
cmp
mov
sbb
int
sarb
or
pop
and
mov
call
add
mov
sub
and
fildll
and
push
sbb
pushf
push
push
ja
adcb
mov
cmp
jae
es
sar
lcall
in
jp
std
lock
fcoml
out
pusha
sbb
fdiv
inc
inc
in
ljmp
or
sar
xchg
xchg
out
movsb
mov
cld
shr
jmp
cld
pushl
mov
mov
shr
add
movsb
movsl
adc
mov
pop
jno
popf
pop
test
mov
inc
push
jg
mov
xlat
jl
mov
inc
lods
xchg
out
and
negl
cmp
incl
mov
in
xchg
repnz
inc
add
jmp
xor
imul
out
sub
call
mov
pop
lcall
scas
xchg
pop
pop
xor
scas
imul
xchg
frstor
pop
lds
jmp
cld
insb
call
insb
or
hlt
xorb
imul
cmpsl
mov
idiv
lcall
int
cltd
push
fisubrs
xor
pushf
xchg
pop
push
pop
sub
out
bound
or
incl
xor
inc
xchg
xor
std
incl
lahf
test
mov
push
mov
fdivrp
fnstenv
pop
adc
incl
mov
add
or
roll
ss
pop
sbbb
add
ret
into
cmp
cmp
sbb
ds
insb
push
mov
jp
and
hlt
decl
pop
inc
or
aad
inc
push
pop
adc
sahf
pop
sete
scas
mov
out
iret
sbb
incl
jbe
lds
push
loope
ja
stos
mov
dec
out
in
xchg
sub
aas
int
jg
lcall
popa
sbb
imul
push
scas
xchg
push
mov
inc
scas
inc
mov
sbb
jmp
sbb
hlt
sbb
mov
xchg
adc
cwtd
dec
call
jg
add
mov
jle
dec
push
ja
lret
push
jl
pop
add
imul
push
cmp
aas
xchg
incl
inc
lea
sbb
cmc
ljmp
std
scas
fists
outsl
xchg
loope
sti
jno
adcb
push
arpl
push
xlat
lcall
add
sbb
add
jp
imul
ret
mov
jbe
bt
sub
mov
les
clc
incl
mov
rorb
push
daa
dec
jge
adc
call
imul
shl
xchg
shl
repz
lds
jmp
pop
pop
jge
mov
lcall
push
lea
lret
push
adc
mov
sub
jae
xor
decl
or
dec
stos
mov
adc
mov
inc
xor
and
loop
adc
cmpsb
and
xchg
incl
mov
sti
push
adc
xchg
fisubrs
cmp
pushl
mov
cmp
add
repz
xorl
adc
repz
ljmp
mov
shl
xchg
inc
lds
adc
jbe
lock
jb
mov
aad
icebp
xlat
dec
pop
xor
inc
data16
dec
adc
test
and
or
in
push
repz
pop
dec
clc
lcall
mov
sbb
cs
or
or
lret
xchg
pop
mov
call
cmc
ljmp
mov
xlat
stos
and
mov
cli
inc
or
push
decl
out
cli
call
xchg
add
mov
jg
icebp
jecxz
cs
add
decl
dec
push
jmp
mov
fcomps
cmpsl
shrl
in
out
jno
notl
jnp
push
pop
add
pushl
xlat
out
xchg
stc
rclb
out
enter
mov
mov
stc
jge
mov
ljmp
dec
push
popa
pop
push
or
sub
ret
jl
aas
mov
jae
mov
jb
and
bound
push
or
dec
inc
jo
lock
mov
hlt
ljmp
sub
test
jno
iret
xor
inc
out
pushl
mov
add
push
cmc
call
mov
bound
push
dec
dec
add
call
xor
out
inc
lret
das
push
sbb
or
cmp
insl
or
pop
adc
jmp
daa
sub
xrelease
xchg
jns
cwtl
push
hlt
cmp
adc
lcall
call
push
cmc
movsl
jne
or
or
add
cltd
push
cmp
ljmp
dec
fidivs
fildl
and
push
xorl
in
jmp
out
out
leave
fistps
xchg
push
mov
xor
fstl
fildll
xor
insb
cltd
icebp
jmp
mov
mov
inc
adc
psllq
ficoml
jo
xorb
push
xchg
mov
subl
push
icebp
loop
inc
pop
jo
enter
lock
fcmovne
jp
ljmp
jns
sti
js
pop
stc
insb
inc
imul
cli
inc
fs
in
repz
addr16
incl
icebp
jge
jmp
mov
jb
test
leave
inc
imul
into
lret
shl
xor
inc
xchg
xchg
pop
pop
lock
pop
mov
sub
jge
addb
movsb
es
incl
das
pop
add
push
jmp
add
filds
sbb
xlat
in
cmp
test
stos
ja
faddl
rcrl
into
pop
sub
lret
fiaddl
jg
test
mov
inc
push
insl
jbe
fs
out
pop
push
xor
mov
pop
mov
adc
roll
lcall
lock
push
repz
sub
test
rcl
cs
xor
scas
push
insl
xor
mov
pushl
xor
shl
test
idivl
cmp
sbb
fidivl
add
in
or
mov
inc
dec
sbbl
push
mov
outsb
lahf
add
in
or
das
jge
call
xlat
hlt
jo
out
gs
xchg
bound
add
std
mov
dec
ljmp
fistl
sbb
insb
mov
xchg
fsubrs
mov
stos
push
repnz
sbb
mov
add
outsb
aam
pop
notb
decl
add
cmpsb
sbb
stc
fists
mov
pcmpgtb
fbld
shll
lock
dec
xchg
iret
inc
decb
cmp
int
jg
lods
inc
rcl
add
rol
aaa
dec
adc
mov
adc
inc
sbb
shr
sar
add
insb
adc
adc
loopne
insb
fnstenv
mov
mov
xlat
xor
jmp
lods
rorb
dec
mov
and
or
cmc
jne,pt
fs
add
clc
in
jbe
lret
xchg
adc
cli
add
pop
sbb
lods
xchg
add
dec
mov
or
hlt
inc
gs
jg
flds
decl
test
adc
dec
bound
adc
xlat
sbb
leave
iret
fadds
or
push
inc
xchg
jmp
pop
pop
sbb
push
push
fmul
ret
mov
add
pminub
fistl
rorb
jo
add
outsb
sbb
pushl
jl
fnstcw
adc
dec
fdivrs
cs
addb
fistpl
out
les
push
fsub
pop
inc
outsl
call
adc
xlat
pop
adc
pop
pop
xor
pop
into
in
xchg
lods
jb
ficoms
imul
out
sub
push
fstpl
push
sar
int
test
sahf
fdivrs
mov
xlat
push
out
ret
push
in
into
dec
mov
rorb
mov
fcomip
dec
call
popf
fcomi
aaa
sbb
xor
and
sub
add
xor
dec
dec
enter
cmp
xchg
pop
push
inc
xor
dec
fnstcw
push
add
scas
aad
push
xchg
out
fildll
or
clc
shr
fistpl
pop
push
mov
lds
icebp
cmc
fwait
or
dec
sub
add
dec
mov
mov
mov
cmp
aad
jbe
dec
mov
subl
lcall
mov
mov
call
mov
int
xchg
mov
dec
aad
ljmp
jne
lds
fstp
icebp
adc
loopne
call
mov
mov
enter
cmp
std
xorb
je
negl
fistpl
mov
cwtl
insb
pop
ret
sbb
repz
cmp
cmp
int
ret
addr16
adc
fistl
sub
dec
mov
dec
loop
pop
dec
aam
mov
aad
xchg
adc
or
out
mov
iret
push
and
out
lcall
mov
es
test
mov
jmp
std
outsl
xor
in
push
fsubrs
insb
mov
xor
insb
dec
pop
xor
imul
add
incl
inc
lret
or
enter
aam
pop
cmp
xor
inc
stos
jb
cs
mov
shl
aas
and
cs
loop
push
es
outsb
add
sti
cmp
and
stc
aam
sbb
pop
sbb
push
adc
push
mov
or
insl
push
xchg
xor
dec
push
sbb
jae
inc
fdivr
pushl
ret
xor
addl
shll
adc
push
cld
decl
push
incb
imul
es
jg
pop
popf
mov
andb
popf
aam
mov
sub
mov
push
repnz
fs
mov
insb
push
push
icebp
jmp
cmpsl
xchg
xchg
pop
jg
xchg
cmp
dec
push
sub
cmp
imulb
mov
pop
jg
sub
adc
sbb
adcl
std
push
dec
shlb
and
fcoml
cmpsw
and
incl
push
xor
sbb
cmp
in
in
pop
mov
es
dec
mov
lods
mov
shl
xor
inc
and
inc
aam
int3
clc
call
sbb
adc
jnp
and
sbb
incl
stos
shlb
pop
shlb
pop
fwait
scas
orps
inc
out
mov
out
out
cmp
adc
cmpsl
mov
lods
mov
mov
inc
dec
shl
addr16
rclb
dec
pop
push
pop
mov
adc
jmp
test
cmpsb
nop
mov
cmpsl
fcmovu
cmp
and
sub
stc
loopne
pushl
xchg
mov
inc
cmpl
stc
inc
dec
xor
sub
jg
xchg
xlat
cld
push
std
das
sub
pop
shlb
out
mov
jl
pop
and
pop
orl
test
inc
inc
push
int
in
ja
sti
pushl
int3
iret
ja
aaa
cmpl
push
out
mov
subl
dec
jb
adc
cmp
nop
iret
or
or
pop
jae
test
pop
adc
shll
dec
jmp
lea
in
cs
lods
mov
sbb
shr
imul
dec
sub
push
adc
out
push
xchg
add
cmp
mov
lcall
pop
repnz
xor
mov
das
adc
rcr
cmc
aam
into
xchg
or
fistps
std
adc
sub
sub
fstl
out
mov
jle
decl
mov
ja
lock
jnp
dec
sahf
lods
push
and
mov
je
ret
decb
xor
xorb
push
fnstcw
add
inc
or
aaa
inc
pop
lret
xor
fimuls
sub
or
nop
scas
mov
fs
inc
mov
dec
mov
call
pop
movl
stc
fists
sar
pop
fs
notl
in
mov
dec
or
loope
mov
jnp
pushl
mov
hlt
fcmove
adc
mov
mov
mov
mov
stos
iret
and
dec
xchg
sub
or
push
lcall
nop
sub
bound
sahf
jl
dec
xor
sub
sarl
lret
ds
dec
outsl
and
cmp
ud2
jo
mov
lods
loope
ljmp
lds
pushf
push
sarl
sub
push
adc
out
incl
aad
bts
fs
pop
and
mov
jne
mov
in
decl
mov
sub
ret
jmp
insl
cli
leave
mov
stos
sbb
mov
call
xchg
divb
js
js
sub
add
in
rcrb
lods
mov
push
jge
in
mov
data16
cmp
lcall
mov
jbe
push
jmp
rorb
pop
mov
push
aas
jp
int3
inc
vpaddb
xchg
pop
mov
xchg
stos
pop
das
clc
inc
xor
pop
daa
or
rcrl
mov
pop
lock
xor
ljmp
jp
mov
add
xor
out
into
and
push
fwait
jmp
mov
sbb
roll
movsl
imul
push
add
mov
ljmp
mov
adc
mov
mov
ds
sub
cwtl
dec
dec
int3
scas
stc
movsl
cmp
jmp
add
pop
adc
dec
mov
mov
dec
mov
mov
pushf
ja
jnp
dec
lods
int3
jg
add
fisubrl
sbb
jle
xchg
popa
mov
dec
scas
call
xchg
cmp
mov
in
movsb
mov
outsb
stc
lods
arpl
push
jne
jmp
add
dec
sbb
jnp
fidivl
div
rcl
outsl
clc
std
les
lret
jl
sbb
mov
std
test
and
pop
dec
mov
cli
cmp
mov
call
in
xchg
ds
and
mov
notb
dec
popa
sub
add
fst
ret
insl
fldcw
ss
xchg
decl
hlt
frstor
loope
dec
mov
xlat
mov
mov
xchg
adc
mov
and
mov
outsb
mov
and
testl
ljmp
movsb
adc
mov
jl
or
mov
mov
inc
jns
xchg
pop
ja
inc
decl
scas
aad
pop
std
or
dec
loopne
jle
into
sub
incl
mov
scas
std
in
push
mov
iret
jae
mov
mov
jmp
fadds
xor
jne
lods
push
jg
jg
mov
push
ss
fdivrp
ret
cld
add
cmp
shrb
sbb
aam
sbb
outsb
mov
or
and
outsl
js
negb
jns
sbb
inc
fidivs
das
cmp
push
aas
sbbl
xchg
jnp
fdivr
fidivl
inc
ret
adc
sub
or
cmp
dec
mov
pusha
xchg
xchg
sbb
xor
jne
popf
enter
ljmp
addb
cmp
dec
sbb
adc
or
popa
mov
push
movl
ljmp
or
dec
mov
mov
pop
addr16
lea
pushl
int
sbb
push
pop
push
sub
lret
dec
adc
pushf
or
xor
xchg
popa
mov
mov
pop
xchg
or
mov
subl
add
push
insl
scas
fwait
mov
rolb
test
insl
test
jne
fs
ljmp
decl
adc
loopne
popa
outsl
inc
je
inc
push
sub
ljmp
sar
dec
ret
sub
ret
mov
jg
enter
movl
xlat
jle
add
clc
decl
fldenv
mov
mov
push
fcoms
mov
pop
sahf
jle
loop
pop
cmp
pop
dec
xchg
mov
xchg
and
and
mov
lret
mov
out
sbb
mov
inc
adc
aad
push
out
or
xor
leave
ud0
lcall
mov
ds
jl
sbb
jle
andb
andl
mov
popa
lret
mov
insb
mov
test
mov
mov
test
xchg
movb
fistpll
outsl
pushf
ss
aas
stos
ja
add
sub
dec
mov
icebp
dec
daa
outsb
xor
push
incl
cld
call
nop
sbb
movsl
adc
mov
mov
incl
inc
pop
in
xor
dec
or
bswap
call
mov
pop
into
dec
lcall
mov
imul
ret
xchg
in
inc
push
adcb
les
in
adc
xchg
jl
aaa
pop
jb
push
or
lcall
inc
rcrl
inc
add
mov
clc
int3
nop
stos
dec
iret
mov
xor
icebp
pop
lcall
ret
sti
lcall
lcall
cmpl
push
cmpsl
imul
add
xchg
cmp
push
mov
scas
cld
incl
pushf
mov
repnz
adc
mov
dec
jns
inc
fistl
jg
or
lret
add
icebp
xchg
add
lret
ja
aaa
jge
inc
dec
sbb
mov
in
or
fwait
pushf
stos
and
mov
fcoml
jle
inc
dec
and
pop
fcompl
pop
push
xchg
sbb
pop
push
outsb
fiadds
xlat
cmp
jb
pop
or
loop
or
inc
pop
xchg
andl
mov
push
adc
mov
aad
cmp
imul
nop
sbb
and
inc
incl
mov
in
xchg
movsl
sbb
push
add
jg
cmc
leave
add
and
jg
ja
jle
imul
inc
xchg
push
pop
sub
icebp
pop
movsl
cli
xchg
scas
jle
rorl
push
ds
inc
mov
scas
fwait
das
xchg
loope
adcl
cmpsl
inc
fiaddl
incl
adc
mov
fmuls
int
pusha
inc
mov
decl
int3
cmp
mov
cmpb
push
dec
loopne
adc
je
jmp
cmpb
push
ficompl
push
jge
testl
stos
mov
push
pop
pop
sbb
pop
shrb
leave
mov
jmp
cmpsb
jmp
mov
xchg
negb
loop
push
inc
add
or
lcall
xchg
inc
add
scas
sub
sbbb
dec
fstpl
into
mov
std
ljmp
mov
lea
leave
mov
and
mov
fmuls
clc
cld
test
cmp
loop
sar
add
mov
or
jp
mov
pop
data16
add
mov
test
jl
mov
pop
inc
ret
fdivrp
scas
clc
decl
mov
push
into
inc
mov
dec
push
push
dec
and
mov
mov
xchg
stc
fadds
jg
jg
cltd
xchg
decl
out
dec
mov
push
loop
insl
jecxz
or
lods
shld
mov
jl
inc
lcall
sarl
jno
pop
cs
adc
int
mov
mov
adc
or
or
xor
xchg
dec
in
add
xlat
push
mov
push
hlt
leave
jge
cmp
jno
outsl
pop
push
outsb
scas
push
and
jno
pop
adc
cmp
pop
or
xor
fwait
dec
in
ljmp
jmp
jecxz
mov
mov
pop
push
or
fstpt
testb
jne
decl
iret
jb
in
pop
mov
fstpl
jns
sub
mov
lods
out
clc
pop
pop
sbb
mov
in
xor
adc
push
mov
jp
jbe
das
inc
xchg
push
sub
lea
lds
push
in
jne
xchg
dec
mov
outsl
icebp
incl
dec
aam
gs
xor
xor
out
mov
fists
jnp
pop
enter
jo
std
sub
sub
inc
jb
dec
roll
call
outsl
ret
insl
pop
lahf
mov
xor
pop
dec
jne
std
sbb
popa
fnstcw
ljmp
outsb
ret
loope
sub
add
mov
push
stos
mov
sub
inc
loopne
ja
rolb
cmp
xlat
aaa
mov
mov
je
mov
decl
stc
outsl
dec
jb
das
mov
mov
iret
xlat
xor
adc
das
iret
pusha
push
clc
ljmp
lods
outsl
faddl
clc
pushl
mov
jo
in
test
jae
inc
mov
mov
decb
sub
add
rcrl
lret
into
popf
push
mov
mov
mov
das
xor
cmp
ret
test
mov
in
cmpsl
sti
dec
mov
bound
lods
incl
mov
call
mov
jo
les
outsl
dec
or
lock
adc
fiaddl
scas
mov
jno
imul
jg
jo
nop
dec
xchg
sbb
push
cmp
jp
cmp
inc
aam
jge
or
mov
jo
push
add
dec
jg
shlb
imulb
cmp
cld
movsb
pushf
mov
jno
mov
daa
out
fiaddl
cmp
mov
iret
in
cmpsb
mov
xchg
sub
loopne
roll
fcoms
jo
ficompl
jae
xchg
inc
in
divl
mov
mov
out
mov
incb
outsl
movsb
mov
pop
adc
jo
mov
rep
push
mov
jne
cmpb
outsb
bound
cmp
faddl
dec
in
inc
cmpsb
test
inc
subb
ja
or
xor
loop
outsl
scas
cld
das
mov
mov
int
xchg
jp
scas
out
ja
stos
incl
jmp
adc
cmp
out
outsl
push
xor
in
or
xchg
ljmp
jmp
ljmp
inc
je
jl
insl
mov
jno
rcrb
adc
sub
scas
movd
in
call
jmp
test
pusha
xchg
sarb
push
sbb
or
ljmp
sarb
aas
xchg
imul
pop
jo
push
inc
push
negl
mov
push
xchg
fdivrs
mov
mov
sbb
adc
sbb
mov
std
ljmp
out
out
inc
insl
lock
mov
mov
aaa
xchg
cmp
out
push
int3
jg
stos
push
cmpsb
xor
decb
add
add
inc
or
jg
dec
lds
in
fstpt
es
std
cs
xchg
fildll
faddl
rcr
jg
movsb
lods
je
fidivrs
jp
in
adc
shlb
mov
pushf
dec
cmp
in
inc
call
outsb
add
add
pushf
cmp
call
es
cmp
icebp
xchg
or
xchg
js
mov
cmp
cwtl
jbe
lcall
sub
adc
dec
test
sub
incb
or
lahf
fwait
jae
inc
mov
add
mov
pop
call
call
in
lret
inc
cmp
outsl
ja
decl
out
sub
add
lods
cmp
movsb
decl
lock
lods
lods
jl
int3
and
aas
xor
mov
cmp
repnz
xor
ret
cmp
xor
repz
cmpsl
mov
xchg
mov
xchg
mov
shll
push
or
fistpll
sub
shll
pop
ljmp
mov
push
mov
and
aad
jmp
push
push
sbbl
in
mov
das
into
mov
negl
imull
jne
ljmp
pop
add
adc
lcall
int
jae
adcb
and
xchg
xor
pushl
add
jle
fildll
xchg
and
ljmp
adc
jae
xor
xor
cmpsl
inc
insl
out
jg
in
nop
loop
bound
mov
es
das
sar
xor
daa
ret
push
mov
pop
mov
mov
xor
ret
jl
test
js
shll
pushw
out
rolb
inc
and
call
popf
lcall
les
fists
popa
std
jg
xlat
iret
mov
mov
and
jnp
jle
lock
jo
mov
daa
stos
ret
mov
push
incb
sarb
jge
js
push
sbb
mov
fisubrs
xor
mov
push
adc
inc
xchg
ss
cltd
xlat
jo
shrl
enter
and
xor
call
fwait
jle
sbb
das
inc
jmp
jle,pt
out
xchg
lcall
incl
inc
addr16
loopne
andl
repz
aas
loop
ja
jg
jl
add
xlat
int3
ja
push
push
ret
les
push
lods
cmp
movsb
mov
das
mov
lods
or
cmp
rol
gs
fwait
shl
and
in
lcall
mov
cmp
loopne
clc
test
xor
clc
insl
loop
inc
xor
in
dec
insl
mov
call
subl
or
fs
xor
decl
mov
js
and
dec
mov
in
jb
test
mov
out
xor
cmp
dec
mov
lock
lahf
shlb
lret
call
push
cli
jns
jle
inc
inc
dec
scas
xchg
jno
xor
scas
lahf
jbe
sbb
ljmp
add
add
lods
enter
cmpsl
mov
notl
jns
scas
or
and
call
jno
shlb
cld
in
cmp
decl
inc
xchg
scas
cs
pop
lock
xor
mov
incl
pop
fiadds
xor
stos
aam
pop
lds
xor
ljmp
cmp
mov
mov
xor
mov
decl
jmp
push
stos
shr
lds
mov
mov
addr16
pop
push
les
lcall
add
ljmp
lahf
xlat
sbb
ret
pop
jmp
mov
scas
lcall
mov
lds
inc
inc
sti
and
test
imul
xor
jp
stc
dec
pop
xlat
aas
or
sahf
popf
js
push
movb
rcll
out
xor
sbb
dec
sahf
and
lds
nop
outsb
scas
mov
mov
lods
icebp
ljmp
jb
shrb
notl
lods
shlb
daa
or
insl
in
stc
xchg
xchg
scas
mov
test
cmp
jno
shll
les
jp
test
sarb
inc
cmp
mov
xor
mov
jge
cmpsl
xlat
mov
rolb
cli
neg
fsubs
push
push
ret
dec
push
pop
push
ret
push
push
xor
pop
leavew
xchg
aaa
cmpsw
negl
pop
add
pushl
lods
icebp
lcall
movlps
adc
div
inc
out
jnp
mov
fstl
xchg
data16
mov
rcll
and
fildll
ljmp
mov
inc
mov
inc
and
scas
cmp
jmp
ja
clc
cmp
in
fwait
adc
xchg
cld
nop
nop
mov
inc
fnstcw
pushl
out
and
movsl
mulb
mov
adc
ja
repz
mov
inc
imul
mov
aam
jl
iret
lahf
shrl
pop
pushf
pop
popf
fdivrl
push
data16
ljmp
cmpsl
mov
jnp
cmp
xorb
mov
int3
jg
and
pop
call
call
fcmovnb
movntq
pushl
das
clc
xchg
add
inc
cmp
jle
jbe
nop
les
adc
addr16
in
dec
cld
pop
jmp
jl
adc
and
mov
outsb
pop
adc
repz
mov
mov
ficoms
sbb
incl
ja
outsb
mov
inc
mov
outsl
testl
insl
jne
xorb
sbb
pop
in
sub
and
clc
jmp
iret
jo
ficompl
xchg
ljmp
imulb
sub
int3
shlb
push
jo
out
cmp
stos
arpl
jne
mov
adc
fwait
jge
jmp
mov
stc
jle
sub
imul
xor
push
jle
xchg
stos
stc
iret
call
inc
xchg
push
mov
sub
divl
cmp
jge
push
jmp
aaa
jbe
hlt
call
in
push
push
jo
std
pop
add
mov
incl
ficoml
adc
sbb
add
out
cmp
xor
in
imul
xchg
sti
cld
and
scas
ja
pop
mov
lods
incl
lea
fidivrl
cs
call
mov
fnstenv
out
clc
jb
mov
inc
sti
test
subl
out
cltd
ljmp
mov
cwtl
shlb
mov
stos
mov
call
insb
addr16
out
mov
std
mov
mov
lfs
dec
in
lods
ja
jg
jnp
scas
cmpsl
xchg
push
jg
mov
loopne
adc
sbb
mov
mov
incl
sti
adc
repz
js
addr16
jg
fisttps
or
adc
cmpb
and
xchg
stos
push
out
dec
dec
and
jmp
cmp
pop
adc
subb
sub
movsl
adc
xor
incl
leave
sbb
in
inc
adc
bts
out
movsb
cmc
stos
mov
pop
popa
mov
cld
jmp
addl
jns
sbb
nop
xor
jns
sub
xchg
cld
pushl
inc
outsl
vmwrite
push
inc
jecxz
mov
mov
aaa
clc
pop
sbb
dec
cwtl
pop
pop
cmpb
mov
lahf
adc
jp
shll
call
loopne
fidivrs
sarb
jne
out
out
iret
fdivs
sub
jle
inc
es
fwait
in
jne
mov
push
insb
mov
xchg
dec
in
sbb
js
jle
jp
xchg
shrb
rcl
into
jbe
lret
sub
es
enter
push
inc
jnp
xor
out
mov
xchg
jp
push
imul
mov
cmpb
js
sbb
and
push
cmc
or
sbb
cli
outsb
fdivl
fisubrl
not
repnz
test
cs
mov
push
jo
cli
cmc
hlt
lods
aad
ljmp
ret
mov
mov
in
sbb
jp
push
mov
enter
inc
test
xchg
pushl
lods
int
das
and
mov
fwait
inc
dec
or
push
les
sarl
lods
jecxz
ss
das
cli
decl
out
je
jo
pop
enter
or
mov
dec
jbe
decl
push
jne
inc
insl
mov
lods
push
mov
je
mov
push
fisubs
fsubrp
loope
sub
ljmp
lcall
dec
outsl
ss
xor
clc
fistps
cwtl
jnp
sbb
mov
mov
dec
xchg
sub
pop
ljmp
or
ss
push
and
and
jg
jne
sbb
xor
jg
pop
rcll
ret
ljmp
jo
adc
incl
adc
pop
sub
pop
outsb
je
movsl
shrl
test
jmp
rorl
aaa
and
stc
popf
push
lea
std
or
data16
data16
sbb
inc
mov
divb
lcall
lock
push
jb
test
add
fs
pop
testl
or
and
and
pop
jg
sub
stos
cmpsl
adc
push
enter
test
subl
and
adc
movsl
icebp
push
sbb
out
cmp
je
cmpsb
aaa
mov
push
cmc
sub
daa
fildll
ret
insb
sub
or
inc
push
jl
decl
jb
in
xchg
add
enter
adc
pop
jle
mov
and
adc
sub
lock
arpl
cltd
test
lods
pop
jae
adc
adc
ljmp
clc
ljmp
and
movsb
lods
subl
insl
clc
jmp
cmp
pop
in
cmp
lcall
jo
adc
repz
andb
fxch
mov
decl
push
shrb
ljmp
xchg
and
inc
cs
adc
dec
shl
adc
sti
adcb
add
call
push
ss
pusha
add
and
pop
sbb
xor
call
lret
sbb
stc
cmp
jl
in
and
sar
adc
ds
jmp
mov
push
pop
xor
push
sub
out
jo
std
jg
jmp
mov
mov
cli
fidivl
sub
dec
sbb
adc
cmpsl
inc
xor
in
movsl
ja
test
repnz
add
pop
pop
pop
jnp
push
in
clc
jae
mov
push
pcmpeqd
xor
roll
push
or
sub
test
pushl
sbb
mov
push
mov
cmpsb
sete
clts
dec
adc
push
mov
jae
jle
jbe
xchg
jmp
push
adc
gs
mov
inc
outsb
test
push
push
out
cmp
xor
test
fs
xchg
xchg
cs
cmp
adc
sbb
outsl
or
incl
mull
sub
push
mov
enter
ja
lods
sub
call
loopne
pmullw
loop
or
pop
jb
outsl
les
mov
cmp
pushl
xchg
ljmp
adc
fistpl
pop
sub
and
jg
jmp
adc
xor
cltd
cmp
xchg
cmp
call
jno
std
inc
jmp
xchg
insl
adc
lret
pop
inc
stc
fistl
leave
out
dec
cmp
pop
push
and
dec
sub
loope
xchg
inc
negb
mov
mov
test
lret
shl
xchg
ljmp
mov
out
adc
jns
mov
jmp
dec
or
mov
inc
xchg
pop
mov
insl
or
cmpsl
jmp
inc
aam
stc
outsl
adc
lods
mov
xor
std
test
push
out
push
and
mov
adc
xchg
out
and
imul
in
mull
inc
aam
cmp
sub
les
stos
pop
pushl
shll
lods
push
xor
xor
and
roll
insb
push
mov
cmp
decl
insb
jo
push
jnp
aaa
mov
and
out
mov
dec
lds
ds
fcomip
push
jo
pop
mov
test
repnz
sub
leave
mov
icebp
pop
jl
inc
sar
notb
data16
ss
mov
pop
mov
pop
ljmp
repnz
xor
test
mov
ja
call
movsl
inc
scas
cmp
and
daa
dec
adc
lods
add
cli
sub
shlb
jb
stos
dec
fnstsw
cmp
add
out
mov
lret
or
icebp
insl
pop
fsts
arpl
or
ret
dec
jge
clc
out
cmc
xchg
ja
sti
jg
cmpsl
cmp
out
push
addr16
scas
insl
aas
mov
pushf
mov
es
decl
std
imul
sbb
lcall
xchg
outsb
pop
repnz
je
cmp
sub
clc
jl
lods
hlt
pop
cmp
jecxz
xchg
and
fdivs
mov
sub
mov
cmp
mov
out
scas
lret
add
cmp
pop
ljmp
pop
ljmp
mov
xor
data16
jmp
mov
or
pop
mov
jp
jbe
arpl
dec
adc
mov
and
lods
cltd
incl
mov
inc
outsl
xor
mov
stos
adc
jo
in
adc
mov
in
jmp
and
bound
sar
cmp
adc
mov
sbb
xor
dec
fdivl
and
cmp
andb
jno
jne
mov
decl
ds
adcl
sub
pop
not
outsb
adc
mov
mov
incl
in
cmp
pushf
pushl
xor
inc
sar
out
inc
jb
decl
pop
xchg
not
addl
lock
mov
jmp
ficoms
ljmp
mov
daa
jo
mov
ds
xchg
push
mov
cmpb
fdivrp
jge
hlt
push
push
mov
jmp
outsl
xor
or
cmp
sahf
insb
pop
pop
inc
push
mov
xor
icebp
inc
pop
jbe
insb
jp
das
mov
rclb
and
outsb
add
jg
sub
bndstx
scas
cmpb
cli
cmp
cmp
sub
cmp
lahf
jmp
sub
lock
mov
mov
fldl
in
cltd
sub
je
shlb
jno
inc
or
xchg
mov
jne
inc
hlt
call
and
ds
cmp
out
cmpsl
mov
xor
repnz
pop
insl
and
push
lea
shrb
jg
cmp
or
icebp
test
inc
mov
lret
dec
fdiv
sub
das
ds
or
jg
jg
jae
cli
jb
lcall
out
mov
fdivl
or
push
jb
fcomps
jmp
xor
and
mov
stc
jmp
fidivs
pushf
sbb
stos
lock
out
test
je
mov
xlat
pushf
in
pop
mov
sbb
scas
out
xor
rcrl
test
incl
rcrb
mov
adc
add
outsl
test
xchg
scas
imul
ljmp
ljmp
insl
push
add
add
cltd
pop
xchg
hlt
and
sub
jmp
cwtl
xchg
pop
je
xorl
imul
push
hlt
imul
scas
in
cmp
popf
cmp
testl
push
test
hlt
fwait
push
push
mov
scas
sar
lcall
jne
in
mov
das
outsl
addr16
loopne
push
xchg
les
nop
push
decl
push
jnp
loopne
hlt
je
fdivs
das
shll
xor
mov
movsb
jne
lods
repz
jmp
movsb
mov
shl
cli
cmp
jnp
popf
xor
in
add
pushf
push
mull
es
outsl
pop
or
xor
outsl
xlat
into
inc
pop
gs
cs
add
and
mov
inc
cltd
nop
insb
xchg
stos
scas
es
dec
fistpl
aas
outsb
popf
les
mov
ljmp
fs
std
push
pop
inc
inc
push
sbb
incl
xchg
das
jg
jo
lods
stc
mov
mov
mov
xor
lahf
cmp
push
js
aad
call
xchg
xor
out
pcmpgtw
push
out
inc
mov
sub
fidivrl
call
mov
push
test
mov
xchg
call
imul
pop
push
cltd
test
aam
xlat
mov
fsubrs
add
outsl
xchg
pavgw
or
jle
decl
xchg
jmp
push
xor
lcall
mov
in
arpl
testl
sub
or
incb
jmp
adc
ljmp
ljmp
sbb
lods
sbb
or
mov
in
pusha
aad
xor
xlat
in
jp
inc
bound
addr16
and
mov
fs
insl
and
sub
add
test
jmp
mov
insl
addr16
sbb
sub
adc
mov
sbb
icebp
dec
mov
cltd
aam
in
aaa
pop
mov
jmp
or
mov
fnstenv
fmul
outsb
pop
add
pop
xor
inc
negl
stc
add
push
fmull
loope
aad
ds
xchg
push
mov
into
ss
ljmp
sub
in
les
addb
test
test
stos
loop
sarb
cmp
repz
ret
lcall
into
insl
pop
sbb
cmp
mov
fwait
and
imul
in
loop
or
in
dec
lods
in
clc
jp
xor
jg
jb
jle
mov
inc
adcb
adc
mov
push
test
push
and
or
mov
sbb
aaa
rolb
mov
mov
push
jbe
in
aaa
fcmovne
xchg
adc
imul
xchg
jg
jmp
in
jge
and
jge
add
xchg
jmp
add
jmp
xchg
test
cmp
sub
fimull
push
in
lret
xor
loopne
incl
dec
icebp
mov
jge
inc
xchg
add
pushl
out
jbe
lds
cmp
sbb
jecxz
fcmovnbe
fldenv
add
mov
gs
mov
mov
jo
add
insb
cmpb
testb
jg
mov
inc
adc
mov
ficomps
in
pop
sub
jmp
loopne
push
xchg
flds
sub
cmp
push
xchg
xchg
or
cmp
aas
bound
out
adc
jg
cmp
lcall
xchg
and
lea
sub
dec
mov
orb
das
movsb
scas
xchg
in
stc
pop
mov
insb
mov
in
aas
adc
filds
cmpsl
xchg
addb
push
add
mov
push
xchg
and
add
in
xchg
decl
aaa
dec
cmc
addr16
orl
mov
jge
jne
mov
push
mov
sbb
push
imul
insl
xchg
cmp
lea
imul
and
ds
xchg
push
dec
insl
jg
push
aam
mov
sub
xor
sub
in
insb
outsb
inc
mov
ja
decl
or
repz
adc
mov
out
je
xchg
sahf
or
into
mov
lock
out
xchg
xchg
xchg
jmp
mov
inc
push
rclb
popf
sti
int
pushl
ret
or
inc
fdivrs
movsl
enter
dec
inc
leave
xchg
sbb
out
lret
test
lcall
movsl
or
jbe
js
cmp
cs
and
cltd
mov
sbb
xchg
add
fisttps
or
sahf
mov
fiaddl
stos
call
cli
push
cmpsb
sub
scas
scas
jb
cli
jle
add
jne
xchg
pop
xor
movsl
in
mov
call
or
cwtl
sbb
fcmovnb
stc
xchg
mov
repz
pop
test
xchg
shlb
sar
mov
mul
cmp
ret
sub
je
lods
jb
dec
divl
mov
cmc
loopne
pop
mov
xchg
ja
push
sub
imul
sub
pop
hlt
xor
or
das
lods
jno
sti
mov
lods
xchg
sahf
fdivrp
stos
addr16
sub
fcoml
gs
ja
mov
xlat
js
sub
lcall
sub
add
outsb
jb
sahf
cs
cmp
pop
jmp
aaa
js
ljmp
outsl
sbb
insb
sahf
sbb
insl
js
shrb
jns
incb
xor
pusha
lahf
add
jmp
repnz
sti
ljmp
fistpl
mov
mov
inc
stc
mov
jo
lock
mov
icebp
jae
sbb
mov
jbe
fstp
inc
leave
jae
ja
sahf
jbe
jg
in
hlt
fbld
push
pop
lret
lods
call
inc
sub
out
or
cli
lcall
and
pop
sub
popf
outsl
adc
xchg
pushf
xor
mov
adcb
test
mov
cmp
jb
hlt
sbb
and
sbb
shlb
inc
and
adc
and
pusha
jae
pop
std
xor
push
pushf
sub
mov
sub
mov
out
ljmp
mov
rclb
mov
or
std
ss
jo
cltd
sub
jg
lcall
push
movsb
aad
orb
xchg
repnz
jl
out
cmpsl
adc
fisubs
in
leave
out
mov
leave
sbb
out
sub
cmp
in
stc
out
outsl
pusha
mov
mov
push
adc
xor
daa
jo
jp
test
cli
pushl
adc
aam
xchg
mov
mov
enter
mov
or
sub
fnstsw
adc
pop
in
div
imul
loop
in
and
jnp
xor
jg
dec
mov
push
inc
and
or
repz
jle
leave
jecxz
loopne,pn
lcall
insl
pop
test
outsb
scas
hlt
jge
or
icebp
mov
jb
inc
cmp
lds
or
jo
sbb
mov
mulb
sub
mov
sbb
mov
ljmp
inc
fs
enter
test
out
icebp
xchg
push
movsl
ret
incl
jnp
and
pop
cld
jb
adc
test
jg
jne
xor
out
cmp
pushf
sti
aam
xor
daa
pop
dec
movsl
mov
jg
pushl
mov
stos
xlat
in
lds
jmp
je
stos
je
incb
clc
aad
pusha
add
mov
stos
adc
cmp
xor
scas
rorl
xchg
call
gs
push
cmpsb
inc
addr16
iret
leave
fxam
scas
cmp
fnstcw
mov
pop
mov
dec
cmpsl
lock
xchg
scas
cmp
loop
sub
in
movsb
sarb
pop
loopne
pop
sahf
jle
stos
add
int3
out
insl
push
cmc
pop
filds
mov
pushl
xor
outsl
cmp
dec
fidivs
push
push
and
pop
inc
push
inc
out
mov
ljmp
sbb
daa
in
jl
jmp
out
in
dec
test
push
jg
xor
mov
adc
mov
addb
jmp
xchg
mov
jo
stos
jbe
dec
lods
dec
fcomps
pop
test
test
push
int3
mov
add
fisttpll
ds
and
jmp
or
xchg
std
sbb
sub
insb
pop
dec
mov
add
test
jmp
loop
dec
movsl
dec
imull
cmpsb
dec
sti
jmp
add
inc
clc
inc
push
pop
dec
test
out
int
push
mov
xchg
stos
cmp
leave
pushf
mov
jg
fcoms
xchg
push
mov
dec
inc
ljmp
divb
pop
std
call
dec
jle
js
jbe
cltd
loope
not
push
push
pop
adc
pop
sbb
aas
iret
mov
repnz
dec
pop
xor
js
test
jg
adc
jg
rcrb
repz
movsl
test
cmp
loopne
mov
push
in
inc
jmp
pushf
cs
rcrb
pop
bound
cs
dec
test
push
call
sub
jg
mov
daa
add
in
xchg
fs
mov
inc
loopne
sub
jl
mov
ja
pop
mov
jo
jno
mov
movsb
mov
jge
or
out
and
push
mov
cmp
outsl
jno
jmp
mov
repnz
inc
icebp
call
sti
mov
cli
in
mov
fldt
lock
add
push
fwait
nop
lahf
mov
je
mov
mov
inc
clc
je
mov
sbb
lock
mov
jnp
out
xchg
xor
hlt
sbb
inc
or
mov
sub
cmpb
dec
imul
pop
sub
jnp
mov
fs
arpl
aam
push
in
pop
gs
jae
mov
incl
cmc
push
outsb
out
loopne
add
inc
das
aaa
xchg
mov
int3
sub
sub
repnz
adcl
cli
cmpsb
testb
inc
imul
push
push
and
aaa
aas
jl
mov
jg
xor
dec
shlb
sahf
mov
fcoml
fcom
ja
mov
decl
adc
cmpsb
dec
mov
loopne
sti
nop
into
jno
push
mov
mov
fs
cli
dec
and
cli
adc
mov
lcall
fs
in
dec
jno
push
and
dec
fildll
sub
cmpsl
jbe
clc
xchg
xchg
mov
add
push
sub
ljmp
aam
xchg
cs
xor
push
inc
pop
fdivrl
insl
into
sub
and
loop
xchg
out
add
mov
stc
in
push
or
lcall
push
out
adc
leave
fcmovnb
daa
jg
inc
ds
push
jne
inc
mov
xchg
leave
call
jmp
inc
cmpsl
xlat
in
les
cli
mov
movsl
push
ds
sbb
call
fs
push
push
les
inc
pop
and
xchg
and
add
push
xor
lcall
mov
mov
and
scas
pop
cmpsb
fsubrp
loope
mov
out
dec
mov
pop
or
inc
xchg
loopne
pop
icebp
mov
xchg
and
daa
and
lea
enter
push
out
and
cmp
leave
adc
aam
xor
shrb
mov
scas
in
mov
addr16
and
sbb
mov
jno
jecxz
xchg
cld
pusha
lcall
jne
mov
mov
dec
jg
cmp
popa
lcall
out
imul
stos
mov
dec
mov
mov
cmovo
push
data16
insl
decl
js
and
sub
loope
repz
push
and
lcall
std
jg
ficoms
mov
mov
add
dec
rclb
jge
inc
out
lcall
push
push
push
xchg
movsl
push
scas
pop
es
repnz
loope
subl
rcr
icebp
pop
jae
iret
jnp
pop
fsubl
scas
or
lcall
loop
shlb
in
cmp
cmp
lock
fldln2
add
jmp
jle
push
push
fisubs
or
ret
js
and
inc
jle
pop
fildll
add
xchg
or
mov
fucomip
popf
into
jg
ljmp
int3
mov
lahf
push
xchg
jbe
lahf
cmc
pop
pop
pop
sbb
push
cmc
test
data16
cld
cmp
adc
push
cs
shrb
ss
in
ss
push
mov
sub
mov
jmp
jg
dec
out
arpl
xchg
or
sbb
das
push
loope
xor
fcmovne
movsl
cmp
lcall
mov
das
out
loope
xchg
push
sbb
push
adc
mov
rcll
into
roll
pushf
popf
sbb
repz
test
sub
push
jae
loop
ja
das
subb
or
xor
aas
jmp
fdivrp
pushl
mov
jge
mov
jle
lret
dec
outsl
idiv
out
stos
xchg
fisubl
clc
lods
out
dec
jecxz
in
movsb
cmp
and
push
loop
xlat
push
cmp
pop
test
pop
shrl
scas
movsl
aaa
push
inc
sbb
test
aam
jo
and
decl
fisttpl
testb
cmp
ljmp
ds
sub
jmp
ja
pushl
sub
shlw
loopne
dec
mov
mov
fwait
inc
int3
sbb
push
add
mov
stc
dec
dec
fs
pusha
mov
pop
or
cmpsb
push
dec
push
push
lahf
lock
es
loopne
jmp
imull
test
push
out
filds
hlt
rcll
std
adc
jg
xchg
lcall
fbld
jbe
push
cmp
xchg
jg
jno
cmp
sbb
nop
pop
cld
sbbb
pop
pushl
xchg
in
inc
sbb
insb
mov
loop
mov
sub
cmp
out
lea
jl
jae
mov
ret
rcrb
or
mov
jg
imul
sbb
xor
data16
lcall
push
mov
mov
xchg
lahf
fmull
lret
jne
call
call
and
gs
pop
pop
pusha
imul
js
insb
push
sbb
hlt
jmp
xor
lods
aaa
pop
mov
pop
mov
gs
je
mov
jns
xor
loopne
decl
xor
leave
out
push
aam
rolb
es
aaa
fldl2e
push
aam
mov
dec
lods
inc
loope
test
dec
push
push
xor
fstl
cld
and
pusha
xor
lock
lock
stc
and
mov
aaa
call
out
mov
xor
movsb
cs
out
mov
pop
pop
loope
jmp
insb
pop
xor
fcoml
xor
fwait
das
testl
mov
pushl
mov
test
outsb
test
mulb
data16
mov
lcall
fisttps
sub
xor
mov
push
push
and
sar
call
or
lods
stc
adc
lea
or
in
or
sbb
lock
pop
xor
xchg
push
ja
xor
mov
fcoml
xor
std
sbb
incl
adc
push
and
or
shll
jo
push
addr16
pop
das
dec
enter
ljmp
clc
xchg
ss
fisttpll
cli
or
js
fldt
xlat
ret
das
popa
dec
dec
inc
bound
cmp
lock
lcall
scas
sarb
popf
ret
lods
sti
fnstenv
inc
sahf
insl
inc
sahf
and
lcall
mov
xor
mov
fnsave
dec
es
out
mov
call
popa
cltd
movsl
pusha
addr16
pop
push
pusha
and
xorl
les
pusha
dec
and
mov
xchg
lock
lret
and
nop
mov
das
jge
inc
stos
push
jb
jo
and
mov
popf
ds
cmp
xlat
mov
outsl
mov
ja
xlat
xchg
sub
sbb
sub
jg
ljmp
push
and
in
sub
adc
outsb
pop
cmpsb
sub
xchg
cmp
cmpsl
sahf
cld
aas
inc
loop
pop
cmc
mov
mov
xchg
pop
aas
aad
in
jb
loop
sti
mov
and
ljmp
jge
ss
les
cmp
mov
subl
shll
push
lods
sar
lcall
inc
push
cmp
aad
xchg
cwtl
cmpsl
mov
movsl
ficoms
jg
cs
xchg
mov
mov
sbb
add
aam
or
cmp
pop
xchg
pop
shl
jg
lcall
nop
out
ljmp
or
loopne
sub
or
movsl
push
test
mov
jmp
stos
pusha
inc
sbb
push
add
cmpsl
clc
pop
fdivrp
lcall
push
rcrl
inc
int3
fwait
mov
out
pop
bound
sub
test
jbe
mov
fwait
lcall
xchg
fildll
pushf
stos
outsb
rcl
or
mov
in
das
push
test
pop
xor
call
adc
sbb
ljmp
mov
push
cmpsl
outsb
ret
jl
cmpsl
add
jg
pop
out
xor
sbbb
aad
fmull
aam
add
xchg
xor
call
rclb
inc
adc
int
xor
sbb
ljmp
decl
sub
xchg
fnstcw
outsb
cmpsl
call
sbb
sub
iret
pop
push
jge
arpl
sbb
je
bound
or
mov
pushl
inc
inc
loop
loope
jae
push
mov
mov
pop
pop
fimuls
cs
shrl
mov
outsb
fwait
adc
ljmp
sub
cld
lcall
rorl
outsb
jns
xchg
cwtl
stos
mov
and
and
cwtl
nop
mov
adc
jb
fwait
xchg
stos
imul
movsl
or
jp
mov
sbb
and
jmp
dec
xchg
jo
or
and
mov
push
les
dec
inc
pop
sub
scas
es
sbb
dec
inc
enter
add
lcall
cmp
dec
mov
xchg
mov
and
fdivrp
call
test
adc
push
out
jecxz
inc
fs
adc
popf
fisubrs
xchg
in
sub
imul
cmp
jb
jo
ret
pop
mov
add
mov
and
call
pop
lock
push
xlat
xor
xor
dec
dec
aam
in
dec
inc
dec
lcall
mov
nop
mov
xor
fcmovnb
jmp
aaa
call
dec
clc
test
cmp
ljmp
xor
pop
sbb
push
movsl
daa
js
imul
jmp
and
xlat
popf
mov
aam
nop
push
test
pop
and
out
jo
out
sbb
cmp
mov
cwtl
fwait
sti
movsl
xchg
test
in
pop
and
xor
lods
ljmp
or
loope
fld
sbb
sub
jbe
leave
sub
int
and
pop
call
rcrb
popa
jle
mov
testl
lcall
xor
addr16
dec
daa
xor
dec
xchg
in
adc
outsb
sbb
pop
sbb
adc
outsb
enter
xchg
sub
movsl
cld
decl
testb
fisubs
mov
pop
push
xlat
sub
add
mov
and
and
stos
sbb
ljmp
clc
imul
nop
dec
pushl
push
xor
aad
loop
pop
pop
sbb
pop
sub
shll
mov
xchg
mov
adc
andb
xchg
lock
in
lcall
mov
xlat
or
xchg
push
push
push
pop
insb
jp
ljmp
xorb
dec
popf
push
mov
xchg
or
setge
fidivs
scas
lcall
jp
lcall
loope
ror
pop
gs
xor
sbb
stos
fsubrl
lret
pop
lods
scas
fisubs
sbb
mov
jle
xchg
cmp
xchg
adc
sub
idiv
decl
xor
scas
mov
enter
movb
aam
jne
pop
ret
lcall
daa
test
mov
mov
arpl
movsb
inc
inc
jno
push
ds
pushf
mov
lahf
dec
push
push
mov
das
mov
inc
in
idiv
lcall
rclb
arpl
pop
mov
cwtl
inc
iret
mov
dec
dec
jmp
lcall
les
cmp
inc
fcoms
cltd
pop
cwtl
adc
add
jo
sbb
ljmp
mov
bound
sub
pop
sbb
fmulp
mov
lcall
lcall
add
test
xlat
dec
shlb
cwtl
sbb
divl
popf
aam
das
add
incl
jle
dec
xchg
dec
mov
ss
jmp
cmovl
pop
popf
push
pop
lahf
and
loopne
push
pop
scas
aas
lock
incl
xchg
xchg
push
test
andl
fisubs
xchg
or
sub
adc
ficoml
icebp
cmp
test
cmp
jo
push
test
lods
push
xchg
xchg
mov
das
fdivrp
decl
decb
pop
sub
imul
mov
pop
aad
xorl
cmp
pop
int
adc
dec
dec
mov
ret
jo
pop
es
cmpb
push
mov
cmp
sbb
scas
xchg
xchg
lods
inc
mov
mov
xor
mov
add
rorb
clc
jmp
int3
push
adc
or
int3
test
lret
mov
mov
hlt
jb
dec
sahf
adc
jp
jae
jns
mov
push
mov
sarl
test
ljmp
mov
fcmove
ds
out
adc
pop
and
std
cmpsb
pop
xor
lcall
iret
ret
xor
movsb
das
inc
pop
push
adc
xor
daa
nop
pop
cmp
xchg
xor
shrb
or
cmpsl
int
fldl
push
dec
sub
and
ljmp
imul
add
sbb
inc
ret
fdivrl
pop
insb
cmp
push
pushl
pop
lea
aam
xor
adc
das
lahf
stos
cltd
inc
sbbl
in
and
lcall
insl
push
or
loopne
fstps
rolb
ljmp
push
xchg
flds
movsb
inc
xorl
dec
dec
mov
in
clc
fmuls
scas
aam
adc
decl
cwtl
test
dec
sarl
xlat
int
mov
inc
pop
nop
scas
sbb
call
sti
lds
test
out
nop
inc
sbb
lcall
adc
ret
dec
rorl
xchg
cmp
add
test
adc
adc
cmpsl
std
push
cld
bswap
sahf
fbld
jge
out
adc
das
cltd
adc
jg
ret
adc
fs
jbe
fmuls
ss
fiaddl
xchg
xor
lcall
adc
adc
es
out
pushf
jnp
pop
dec
jg
jg
xchg
es
fmuls
outsb
ss
adc
fidivrs
arpl
push
or
gs
lcall
int
shrd
out
das
rclb
jmp
or
cmp
mov
xor
out
clc
pop
or
sarb
push
xchg
mov
pop
add
movsl
push
adc
xchg
push
sbb
aad
adc
ljmp
cli
dec
pop
addr16
insl
scas
push
shl
cwtl
pop
testb
adc
inc
jle
jecxz
adc
jg
and
loope
adc
mov
add
lcall
mov
hlt
sbb
and
xchg
into
xchg
jnp
ficoml
sub
call
scas
scas
out
es
stos
mov
jge
lcall
out
jle
ljmp
push
enter
mov
inc
xchg
jae
icebp
ljmp
pop
xchg
push
mov
mov
mov
repz
or
sub
inc
mov
sub
decl
leave
cmp
jge
inc
stc
push
xchg
iret
dec
cmp
push
ss
mov
mov
cltd
jp
sub
int
mov
movsl
test
add
or
push
inc
rclb
fwait
mov
xor
enter
push
or
push
pushl
jmp
pop
add
repz
sysret
inc
add
dec
js
jno
cmc
lcall
int
ficoms
adc
aaa
hlt
and
enter
ret
mov
pop
xor
call
pop
lcall
dec
mov
push
pop
clc
fisubs
xor
iret
jo
mov
mov
jmp
jmp
pop
xor
ss
out
adc
cmp
mov
icebp
lcall
andb
inc
test
fbstp
sbb
push
xchg
xor
incl
scas
les
xor
test
cmc
decl
adc
xchg
mov
pop
cmpsb
jbe
pop
cmpsb
ja
aam
sbb
mov
das
pop
push
pop
push
lret
imul
pop
jmp
call
cld
outsl
xlat
xchg
pop
mov
push
and
repz
pop
xor
pushl
or
sbb
cmp
and
pop
cmp
insl
jne
pop
inc
out
push
lods
call
das
jno
iret
pop
fidivl
sub
push
lds
sti
jp
adc
pop
mov
loop
push
push
dec
sbb
std
push
dec
or
xor
adc
mov
sbb
push
lcall
lock
cmpsb
xor
roll
push
cs
push
adc
mov
idivb
call
xchg
negl
pop
jl
adc
pop
inc
xchg
cmp
shrl
mov
mov
imul
hlt
nop
push
xchg
xchg
jg
xchg
decl
loope
push
adc
mov
cltd
xchg
lds
jg
push
cmp
daa
scas
jg
xchg
test
roll
scas
mov
aad
adc
ret
ret
incl
out
addr16
mov
outsl
adc
pop
push
xchg
xor
scas
daa
subb
sub
adc
call
in
in
leave
xchg
mov
push
adc
aas
sahf
movsb
sub
or
push
mov
insl
es
cmp
inc
mov
push
and
push
pusha
cmpsl
notb
jg
fs
mov
jae
sub
cli
pop
xchg
js
sub
ficoms
es
jg
pushl
out
test
insb
je
into
inc
movsl
xchg
out
inc
ret
fwait
mov
cmp
jg
cmp
cmpsb
ds
sbb
incl
push
testb
xchg
xchg
dec
pop
or
adc
jecxz
sti
xchg
xor
outsl
or
jg
call
push
daa
gs
das
xchg
call
sub
outsb
push
aam
sti
mov
decl
or
outsl
rcrl
out
leave
push
leave
lea
xchg
addr16
adcl
dec
sub
xchg
rclb
mov
xchg
push
xor
mov
jmp
xchg
hlt
push
or
lret
ds
cmp
ljmp
gs
jno
test
xchg
xchg
cli
mov
shlb
stos
out
xor
pop
xor
insb
xchg
scas
std
cmpsl
sub
nop
mov
decl
imul
out
push
sahf
into
xlat
or
dec
mov
rcll
mov
mov
imul
dec
insb
into
push
fmul
xchg
adc
xor
pop
lods
inc
test
ljmp
test
mov
pop
ljmp
pop
dec
mov
mov
sub
and
scas
mov
iret
decl
scas
adc
fmull
outsl
mov
ljmp
pop
or
push
or
lds
ljmp
xchg
mov
pusha
mov
dec
push
add
xchg
ss
ljmp
inc
fcomi
movsb
data16
sarl
sub
adc
push
cmp
in
inc
cli
fiadds
add
xor
pushf
shl
adc
ja
pop
orl
ljmp
xchg
adc
xchg
push
push
lods
push
bound
jbe
jb
cmp
xchg
adc
sub
jmp
push
add
pushl
mov
adc
adc
jmp
mov
pushf
ret
insl
or
sub
push
dec
add
ljmp
sbb
jno
xchg
dec
lret
cmpsb
xchg
ja
mov
sub
push
xor
adc
or
inc
or
xor
sarl
cmpsb
mov
cld
jmp
iret
push
or
stc
mov
adc
aad
dec
lods
cmp
dec
or
inc
dec
inc
pop
inc
lret
fnstenv
icebp
or
aas
mov
sbb
lcall
scas
test
jle
push
int
jno
jo
sahf
shll
stos
and
iret
dec
loop
call
mov
das
into
add
and
outsb
xchg
jnp
dec
std
mov
ljmp
pop
shl
push
ss
stos
nop
lods
xchg
cmc
ja
jb
cmp
jmp
cmp
inc
adc
adc
mov
or
pop
jnp
fwait
ss
adc
lcall
sti
orl
shl
or
cwtl
loopne
ljmp
sahf
sahf
mov
data16
sbb
leave
outsb
std
jmp
jbe
mov
pop
fdiv
jp
xchg
xorl
inc
ficoml
ds
xor
and
dec
ljmp
fimuls
ljmp
cmpsl
push
cld
xor
popf
sbb
ss
aas
pop
add
push
mov
enter
jb
lock
ljmp
cmp
dec
push
jb
adc
and
mov
test
mov
mov
xchg
pop
icebp
cmp
psadbw
lahf
daa
pop
sbb
and
and
pop
pop
cltd
call
decl
stos
test
push
dec
nop
out
addr16
outsb
mov
pushf
xchg
pop
push
cmp
pop
cs
xor
xor
mov
mov
call
or
shlb
inc
xchg
je
push
mov
adc
movsl
lret
icebp
out
ficomps
jmp
adc
jl
lods
std
mov
repz
popa
mov
mov
clc
adc
jecxz
mov
pop
movsl
ja
lcall
notl
mov
int3
jle
dec
pushl
movsb
int3
lcall
mov
inc
loop
or
iret
xor
push
repz
fdivrl
in
test
push
subb
jge
add
jmp
pop
gs
mov
dec
jo
imul
shrl
sti
dec
dec
sub
icebp
lcall
jns
cld
push
xchg
and
insb
sub
xor
in
sbb
add
jno
cmp
lock
sbb
push
xchg
push
aaa
inc
mov
xchg
in
mov
xor
or
pop
push
nop
pop
out
xor
push
mov
or
ljmp
push
nop
jns
pop
mov
add
pop
and
je
mov
push
inc
fidivl
ljmp
out
in
and
ds
mov
cli
mov
jns
push
jae
push
cmp
fucomi
out
adc
ror
cmp
hlt
cmp
or
pop
popa
jbe
mov
lock
jg
ljmp
mov
jb
int3
divl
xchg
cmp
adc
or
mov
fsts
push
or
call
mov
repnz
std
jmp
out
pop
insl
sbbb
mov
mov
je
add
mov
addr16
cmp
call
data16
mov
jg
insl
cmp
sub
mov
add
addb
adc
or
xchg
fwait
jo
sbb
and
push
push
jl
outsl
add
push
rol
fidivrl
ljmp
out
mov
clc
cmp
mov
or
iret
inc
imul
subl
shll
ds
xchg
push
jmp
cmp
mov
cmp
dec
jne
mov
sub
xchg
movsb
mov
ret
mov
ljmp
sub
gs
loope
adc
xor
add
xlat
mov
shlb
xchg
or
and
ljmp
in
push
lods
subl
sbb
ss
or
in
loopne
popa
ficomps
xchg
and
jmp
or
push
cmp
jge
push
or
mov
dec
pusha
sbb
push
inc
or
nop
or
mov
loopne
inc
fs
inc
add
decl
cmp
enter
mov
jg
test
popf
xchg
fbld
stos
ret
pop
outsl
push
cmp
mov
in
or
mov
jmp
adc
push
clc
and
out
inc
popa
movsl
inc
xor
fldl
mov
call
fsubrl
cltd
je
imul
push
pop
inc
loop
push
mov
inc
pop
scas
adc
push
int3
push
xor
incl
sub
dec
jno
fbld
push
or
inc
push
xchg
jecxz
cltd
cwtl
jno
in
rcrl
loop
out
add
pop
jle
lret
mov
push
bound
inc
lahf
adc
scas
cli
jg
sti
sbb
mov
inc
inc
in
fsubr
inc
loop
out
mov
sbb
incl
in
inc
int
sub
xchg
push
pop
arpl
ret
cwtl
jmp
insb
clc
cld
pushl
loope
push
or
xor
sub
or
and
xlat
ja
push
out
shlb
add
sbb
cli
incl
subb
dec
mov
ljmp
xor
add
pop
sub
mov
mov
call
mov
add
fnstenv
push
pop
mov
out
mov
ljmp
test
and
push
dec
ds
or
or
pop
ds
fnstsw
sbb
aad
leave
shl
aam
insl
ret
and
inc
lahf
push
xorl
aaa
pushl
inc
dec
stos
jns
jae
scas
pop
or
push
pop
mov
icebp
sbb
dec
dec
es
adc
push
incb
adc
xchg
dec
pop
out
inc
pop
and
icebp
pop
mov
mov
inc
pop
pushf
fistl
pop
push
dec
inc
mov
pop
arpl
ret
test
inc
sbb
mov
inc
cmp
popl
filds
inc
pop
jno
mov
jbe
daa
mov
mov
lret
int
int3
js
shlb
rcr
add
lcall
lods
jbe
pop
jnp
bound
imul
pop
and
into
cli
test
fidivrl
decl
jg
mov
sbb
les
data16
xchg
xor
jge
inc
imul
mov
inc
outsb
ja
clc
out
add
lock
sbb
cmp
dec
incl
int3
xchg
popa
ret
dec
xor
add
cmc
aas
dec
enter
jp
int
lock
out
clc
call
add
cmpb
jmp
je
jb
out
imul
decl
ret
movsl
pop
mov
scas
lcall
lcall
inc
jge
sbb
stos
test
lcall
ret
in
add
in
aam
and
push
mov
pushf
addb
fcmove
or
lcall
jmp
push
mov
pop
dec
cmpsb
lret
fisttps
xchg
jb
xor
jmp
iret
jnp
mov
xchg
outsl
xor
sarb
loopne
ljmp
loope
sub
pop
mov
scas
ds
or
dec
inc
testl
test
pushl
sub
mov
push
jle
ss
fisubs
incl
out
mov
das
sbb
inc
aaa
ret
sbb
inc
cmpsb
leave
es
and
jge
sub
ds
mov
decl
les
or
and
pop
out
sbb
dec
and
call
pop
out
arpl
cmp
adc
orb
sub
mov
int3
in
lret
js
in
push
int3
or
stos
inc
add
test
cld
call
or
dec
ret
mov
gs
stc
lret
sub
test
mov
add
aaa
loopne
add
mov
sbbb
xchg
jno
cmp
inc
pop
test
std
add
mov
scas
lea
jns
mov
push
aaa
scas
scas
clc
decl
scas
js
push
pop
repnz
pop
cmp
ds
mov
and
pop
decl
sbbl
and
jle
sar
pushl
mov
mov
dec
cmpsb
and
mov
fldt
jge
out
mov
or
andb
cltd
add
cmp
push
mov
sub
jmp
dec
and
dec
push
js
xor
dec
xchg
loope
cwtl
inc
inc
lcall
leave
scas
push
leave
mov
xor
aaa
adc
popf
negl
stos
jge
rcrb
cld
mov
and
incl
cmc
mov
das
inc
cmp
iret
fnsave
rclb
xchg
lcall
or
test
xchg
imul
inc
hlt
push
stos
mov
roll
xchg
xchg
mov
ljmp
out
dec
cli
mov
mov
aad
push
mov
outsb
lahf
or
pop
cld
pushl
sbb
sbb
out
mov
test
mov
pop
add
out
xchg
xor
push
mov
dec
add
stos
int
xchg
mov
gs
sub
jl
mov
or
repz
call
das
sbb
outsb
adc
push
aam
sub
push
mov
xor
insb
cmp
test
xchg
stos
cmp
push
aaa
stos
mov
cwtl
dec
xchg
mov
mov
stos
fs
adc
ljmp
mov
mov
mov
pop
cld
mov
pop
push
xchg
cmp
out
repnz
ljmp
mov
aad
out
mov
inc
lock
lods
lea
mov
push
ds
jmp
out
lret
inc
sub
fs
imul
out
push
jp
incl
dec
inc
mov
scas
call
dec
imul
cld
push
loopne
cs
or
lock
test
xchg
sbb
out
mov
adc
jo
incl
xor
xor
pop
cmp
inc
stc
dec
scas
clc
push
sub
xor
xchg
push
stc
add
lcall
jmp
dec
cmp
push
fdivl
dec
mov
mov
jo
xor
pushl
in
and
pop
mov
or
testl
jg
or
das
xchg
decl
bound
enter
xor
int3
call
xchg
and
js
jbe
decl
push
lods
mov
jge
aaa
or
adc
or
fwait
xchg
mov
mov
and
pop
jb
cmp
ficomps
fdivr
ljmp
clc
loop
mov
cmpsl
pop
arpl
and
std
adcb
lcall
call
ss
dec
hlt
rep
xor
pushf
cmpl
gs
call
push
or
scas
outsl
int
fldenv
test
mov
mov
mov
push
pop
jp
jle
adc
xor
inc
ljmp
jg
incl
jg
sarl
into
pop
lcall
pop
and
jg
dec
hlt
jmp
pop
xchg
clc
data16
xchg
xchg
out
push
jp
push
inc
fisubl
fsub
jae
push
mov
cld
jg
add
lods
popf
mov
inc
lahf
push
repz
push
xor
test
mov
adc
cmp
hlt
lcall
inc
adc
dec
inc
int3
fdivl
pop
mov
fistpll
pmaxsw
adc
xchg
test
clc
outsl
out
fistps
xchg
dec
jne
shll
and
out
adc
push
push
mov
gs
testb
pop
addr16
outsb
mov
aas
cmpsb
cmpsl
xor
ret
call
push
lret
cmp
iret
int
pop
sti
mov
mov
mov
add
push
jl
xchg
and
movsl
das
pop
pop
cmpsb
lea
xor
adc
jb
inc
movzbl
insl
cmp
cmpsl
fdivrs
jle
ljmp
movsb
cmp
mov
popf
or
pop
inc
pop
mov
icebp
outsb
into
mov
ret
inc
insl
fisttpll
inc
enter
mov
pop
inc
cwtl
mov
xchg
pushl
test
mov
mov
pop
mov
jns,pt
inc
loopne
mov
jg
mov
lcall
pop
inc
xor
outsl
pushf
insb
sti
ja
dec
dec
into
pop
xchg
jb
xor
aaa
ret
adc
cld
or
dec
xor
out
xor
jmp
rclb
or
leave
ret
popf
fwait
adc
in
test
in
pop
inc
loopne
fiaddl
call
mov
jle
pushf
lret
push
mov
cmc
test
mov
lods
data16
fildll
jl
loopne
rolb
mov
add
lret
inc
pushl
lcall
daa
mov
sti
or
in
repz
mov
lods
xchg
fwait
mov
outsl
lds
mov
out
lahf
jp
and
jg
sarb
adc
adc
jl
nop
and
addr16
cmp
inc
inc
lea
incl
insl
pop
push
mov
das
jl
cmp
aaa
lret
and
xchg
jp
ljmp
call
pop
inc
ja
or
push
mov
jg
lcall
pushf
push
jnp
xor
adc
mov
mov
in
test
in
lcall
fs
cmp
pushf
popa
add
or
ret
xchg
ret
lcall
or
jl
bnd
mov
jb
mov
or
stc
or
mov
push
inc
cmp
lcall
pop
inc
lcall
lret
dec
jb
test
imul
cwtl
pop
rclb
lcall
or
pushf
dec
pop
jb
movsl
lods
dec
jg
repnz
mov
movsl
sub
sbb
call
rcl
inc
scas
cli
scas
add
test
xchg
pop
push
inc
lea
pop
xchg
test
ljmp
and
mov
repnz
lds
ja
mov
std
out
clc
mov
jle
and
push
jg
lret
ret
test
push
push
flds
add
adc
jmp
ljmp
outsb
bound
xchg
das
mov
les
push
gs
lods
call
out
int3
loope,pn
mov
lahf
add
out
enter
add
jecxz
call
loopne
mov
test
inc
dec
xchg
std
inc
mov
inc
and
pop
ds
mov
enter
aaa
jnp
loop
adc
xor
pushf
pop
pop
inc
notb
push
movsb
jg
or
divb
inc
adc
scas
lcall
cltd
jmp
and
jbe
xor
push
add
mov
jp
and
cli
imul
cmp
out
inc
xor
xchg
dec
xchg
pop
lahf
xor
pop
jle
gs
scas
cmpsb
test
mov
cmp
bound
xchg
lcall
xchg
mov
lods
mov
mov
inc
adc
lods
mov
pop
mov
add
mov
in
lcall
jge
cs
adc
inc
inc
adc
lahf
push
add
jne
jae
movb
pushl
es
hlt
dec
neg
xor
nop
repnz
pop
add
sbb
jne
mov
call
mov
in
jmp
mov
xchg
incl
xlat
sahf
mov
pop
lcall
fisubrs
mov
jmp
imul
push
loop
bnd
inc
xlat
inc
adc
xchg
push
add
popf
push
sti
or
rcll
test
jecxz
dec
inc
or
lcall
mov
inc
cmp
in
inc
les
test
xchg
mov
adc
and
aaa
std
push
inc
test
xchg
cld
dec
arpl
sub
in
sar
inc
js
adc
fimuls
insb
push
ja
adc
push
mov
inc
ljmp
test
pushl
std
or
stos
adc
stos
incl
jae
inc
adc
in
aaa
adc
pushl
lock
mov
clc
jl
aaa
test
cmp
pop
mov
pop
xchg
fwait
push
mov
std
sbb
and
inc
test
pop
cmp
mov
test
ret
ljmp
and
movsl
jle
jge
shll
push
aaa
push
out
pop
aad
andl
idiv
lcall
sti
data16
jns
notl
fs
cmp
push
push
inc
fisubrs
incl
fcoms
aas
cmc
adc
inc
js
in
imul
pop
sar
add
sub
push
mov
add
es
mov
jl
in
out
sbb
sti
mov
or
jmp
pushl
clc
int3
or
add
popl
sbb
data16
jge
mov
in
jmp
cmc
dec
cmp
fnstsw
sbb
inc
jg
imul
hlt
fcompl
decl
cli
push
jae
cld
adc
cmc
aas
push
xchg
clc
incl
pop
aas
jns
or
in
xor
jmp
fldcw
aam
inc
and
dec
pop
sbb
jl
stos
imul
mov
incl
add
das
iret
xchg
popf
and
xlat
lds
jmp
xchg
add
jp
lcall
inc
ss
jbe
inc
mov
out
cld
ficomps
ds
cmp
stos
cmc
push
jle
dec
pop
ret
cmpsb
jns
jne
sarb
pushf
cmp
fdivrl
fiadds
sbb
sub
js
lock
sahf
add
add
and
pop
xor
mov
rorb
lahf
ljmp
icebp
fbstp
popf
push
fcoms
ret
clc
mov
mov
push
cmc
retw
in
cld
sub
add
ja
pushw
aas
outsb
ja
call
in
mov
cltd
daa
add
sbb
push
inc
andb
sahf
mov
push
mov
icebp
xor
xchg
mov
in
stos
cmp
pop
stos
pop
stos
inc
cs
call
out
subb
mov
pause
jecxz
push
push
ret
push
adc
lock
test
js
sbb
orb
jge
shrb
mov
jge
ds
mov
out
into
std
jge
jne
mov
scas
icebp
gs
xor
cmc
dec
xorb
out
das
xor
hlt
pushl
or
dec
stos
xchg
jle
cmp
testl
mov
sbbb
xlat
incl
fsubl
aaa
cmpl
daa
dec
cmp
inc
call
cld
pushl
movsb
hlt
in
scas
mov
and
loopne
repz
mov
out
sar
incl
or
sbb
out
sahf
rclb
in
mov
les
lcall
icebp
xchg
outsb
repz
outsb
jo
das
add
mov
aaa
std
aad
ja
mov
mov
dec
dec
pop
lock
addr16
les
outsb
cmp
mov
pop
in
jno
mov
push
mov
sub
mov
sahf
mov
mov
dec
or
aas
hlt
push
inc
div
insb
push
hlt
jbe
ret
imul
ljmp
and
repnz
cmp
icebp
or
sub
lock
loopne
movsl
call
shr
lock
sbb
cmc
cmp
sahf
sub
cmp
pop
adc
ffree
mov
jmp
ja
mov
out
inc
push
in
fnstsw
mov
ret
sub
addr16
jo
imul
int3
mov
rolb
mov
aad
cmp
pop
outsb
call
push
test
jg
sti
xor
out
lods
push
cmpl
push
add
push
popa
in
out
lcall
xor
out
pop
mov
out
sbb
mov
mov
or
push
std
jnp
mov
mov
je
inc
xorl
sbbb
sub
pushf
fcmovnbe
sbb
inc
cmp
xor
scas
inc
xchg
xchg
jne
sarl
loopne
inc
jae
mov
test
ret
das
jo
jno
popa
ljmp
int3
jl
loopne
mov
out
fisttpll
imul
out
scas
jmp
shll
cmp
movsb
pushf
popa
cmc
xlat
sti
dec
push
fcomip
sub
dec
rcr
cmovno
cmpsl
outsb
insl
cltd
stos
sti
inc
jge
cmp
mov
test
in
mov
or
mov
outsl
insl
cmpsl
dec
rclb
decl
dec
push
rcll
rcrb
pop
in
imul
cmp
jmp
insl
xchg
outsl
add
lahf
jp
test
push
stos
cltd
ss
test
fbstp
lock
iret
mov
bound
das
shl
gs
jg
dec
fs
xor
cli
cmp
outsl
sbb
add
pushl
add
or
ret
xor
pushf
aam
fidivrl
js
cmp
and
mov
xchg
test
ret
out
ljmpw
xorb
outsl
push
aad
jg
inc
ss
pop
mov
or
sub
ljmp
or
mov
out
cmp
pop
jae
and
sub
lahf
mov
inc
inc
mov
and
stc
xchg
lods
dec
stc
adc
rol
dec
and
pushl
mov
mov
int
mov
push
stos
xchg
push
mov
imul
and
pushl
jnp
in
test
rol
cmp
and
push
inc
fidivl
dec
out
push
sti
mov
lcall
loop
fcomi
jno
mov
mov
adc
ljmp
mov
fucompp
mov
push
xor
ja
fiadds
jno
in
adc
pop
adc
call
cli
and
addr16
push
dec
pop
out
out
lcall
jecxz
pop
outsl
scas
decl
je
pop
sub
popa
jmp
pushl
push
es
adc
dec
movsl
mov
xor
iret
jo
shl
push
xor
dec
add
ljmp
jge
lods
mov
mov
cmpsl
pop
jecxz
adc
filds
push
loopne
inc
in
in
fists
inc
sub
incl
jge
std
mov
outsl
push
jg
movsl
pop
fisubrs
les
dec
xor
sbb
mov
jl
in
xchg
imul
rorl
lea
outsb
push
jmp
dec
mov
ljmp
adc
jmp
ds
mov
shlb
sub
inc
xchg
fsubl
push
incl
xchg
push
mov
jmp
in
scas
mov
mov
test
scas
mov
cld
das
cli
jmp
sti
sbb
je
mov
movsb
jne
cs
push
lret
mov
arpl
add
incb
out
test
iret
jmp
mov
pxor
and
jg
js
xchg
cmc
adc
sub
out
loopne
jmp
ss
sti
icebp
lahf
lret
jbe
pop
xchg
xchg
sbb
enter
notw
mov
cmpsl
dec
cwtl
and
dec
mov
adc
fldcw
jle
movsb
and
sbb
xor
dec
cmpsb
inc
test
inc
repnz
sub
xchg
addr16
and
hlt
test
das
xor
rcl
das
jnp
pop
xor
mov
jle
add
adc
mov
decl
pop
ljmp
test
popf
cltd
cmp
aaa
cmpsb
in
xor
fadds
or
jmp
pushl
add
push
push
push
inc
int3
out
mov
cmp
inc
xor
movsb
aas
data16
sub
dec
call
cli
or
ds
negl
sbb
mov
push
ds
ljmp
fmull
and
push
jae
lea
mov
jne
mov
incl
add
push
ds
push
mov
cmpsl
lods
xlat
negl
ds
xchg
dec
jae
incl
cmp
xor
push
jle
mov
jne
leave
fcoml
movsl
xchg
inc
out
out
jg
test
xchg
xchg
stc
fnstenv
out
mov
adc
mov
sub
pushl
mov
ja
loope
dec
sbb
jecxz
inc
cld
mov
incl
popf
xor
cltd
lahf
or
sbb
repz
jbe
out
outsl
hlt
or
fisttpll
nop
test
adcl
adc
dec
ljmp
xor
sbb
test
jecxz
cmp
push
std
incl
and
push
and
popf
cmp
aaa
inc
dec
aas
and
cmc
pop
daa
cs
test
stc
mov
push
cmp
lcall
push
inc
lds
out
or
cmp
jo
orl
psrld
cmpsb
mov
dec
sahf
in
push
cmc
scas
lcall
jmp
push
fwait
popf
aaa
insl
or
loop
dec
out
sbb
mov
ljmp
dec
mov
jmp
jle
pop
loop
cmpl
mov
sbb
fiaddl
jnp
jmp
call
lahf
cmpsb
sbb
cmpsb
in
clc
cmp
out
lahf
rcrb
add
ds
call
mov
xchg
sub
xor
xchg
jge
dec
ljmp
sbb
scas
cmp
std
dec
lods
mov
xchg
pop
fwait
lea
jmp
lock
call
mulb
inc
shrl
int3
fists
add
pop
out
sub
ljmp
jl
ffreep
jecxz
cld
cmp
lcall
ret
daa
cltd
push
hlt
jmp
loope
mov
pop
das
es
jmp
flds
das
lcall
into
fcomip
call
into
adc
jmp
jp
mov
sub
lcall
js
jge
and
jnp
adc
test
xchg
jns
push
xor
pop
cmp
dec
pushl
repz
loop
fdivp
push
shll
lods
add
sub
test
outsb
cmc
fcomip
call
push
jp
or
cmp
or
cld
or
shlb
or
mov
xchg
nop
jp
inc
int
cmpsl
lret
andb
test
pop
lcall
ljmp
cli
mov
lret
mov
add
mov
cmp
ljmp
xor
jge
add
loop
mov
push
cmp
sbb
gs
sarb
jns
sbb
in
je
or
cltd
sbb
mov
add
shll
jp
xchg
sti
dec
ljmp
mov
cs
int3
out
inc
in
pushf
inc
sub
lcall
add
xor
adc
pop
jne
and
pop
rcll
ret
imul
dec
test
stc
push
fsts
xor
pop
call
ja
pusha
and
or
add
outsl
jmp
cwtl
jne
into
das
mov
mov
out
nop
xor
and
push
dec
cs
mov
aad
cld
in
push
sub
incl
and
ret
sub
das
dec
mov
fwait
sbb
dec
scas
mov
xchg
jb
cwtl
lahf
jns
pop
hlt
pushl
ds
jge
jle
lock
addr16
cltd
dec
dec
mov
mov
mov
pushl
or
fnstenv
and
mov
cli
in
and
aas
je
mov
jmp
add
ljmp
bound
clc
scas
sub
jmp
sbb
mov
repnz
sub
xlat
jmp
imulb
lods
hlt
xor
mov
in
cld
pop
loopne
jmp
sti
xor
xor
or
xor
fsubs
call
cld
lods
insl
in
mov
sbb
daa
mov
jecxz
insl
pop
imul
push
add
lcall
in
ljmp
add
mov
pop
lcall
cmpb
frstor
test
cmp
daa
mul
cmp
rcll
movl
es
mov
xor
xor
imul
inc
lds
mov
cmp
mov
xor
mov
cmp
jmp
out
xor
fsubl
dec
add
xor
add
pop
popf
out
fisubrs
lods
ja
sar
cmp
jo
mov
xor
stos
popf
sbb
divl
es
jg
ljmp
or
sub
sbb
inc
push
jbe
add
cs
cmp
shl
and
call
cld
enter
adc
imul
lds
jo
mov
lcall
sub
mov
insb
cmp
jp
movsl
push
repnz
xchg
lret
rol
cs
jno
ljmp
xchg
imul
jno
clc
mov
out
repnz
mov
mov
xchg
cmc
push
rol
jl
mov
aaa
inc
mov
push
cmp
jg
and
out
sub
dec
mov
lcall
xor
push
and
pop
scas
clc
cmpsb
add
xchg
xor
pop
andb
and
cs
xor
aaa
scas
imulb
or
in
sbb
mov
sahf
sahf
sbb
lahf
cmp
filds
push
jge
cmp
sti
lock
popa
mov
clc
mov
out
jae
repnz
insb
adc
dec
stos
ret
xor
inc
ljmp
out
and
movsl
or
or
cld
stos
imul
cmp
pop
jb
cld
jg
stc
sahf
jno
add
enter
mov
rorl
in
loope
cli
lods
jle
sub
jg
sub
xchg
fwait
ret
mov
icebp
mov
add
xor
xchg
fdivrp
scas
xor
in
adc
mov
push
mov
cs
clc
repnz
xor
test
pause
shlb
and
pushl
outsb
movsb
and
jmp
adc
lods
dec
xchg
mov
loop
lea
mov
add
ljmp
fldcw
xor
xor
mov
or
push
mov
adc
lret
cmpsb
jo
ljmp
cmp
out
popa
test
dec
mov
cmp
fcmovnbe
lods
cmp
mov
test
es
out
mov
jg
add
inc
fiadds
addr16
iret
cmp
outsb
loope
ljmp
out
rolb
scas
daa
adc
sbb
in
xor
in
lret
push
pusha
scas
jg
jmp
int3
and
mov
ss
mov
sbbb
jmp
stos
idivb
loope
je
fsubrl
adc
shl
fisubrs
js
mov
in
outsb
shll
ss
lcall
xchg
daa
push
cs
inc
sub
mov
fdivs
mov
fisubl
sub
cmc
call
bound
lock
repz
cmpsb
insb
loopne
and
adc
push
mov
out
out
call
sub
mov
lret
andb
popf
jb
sbb
pop
adc
decl
sub
sbb
mov
daa
inc
cmpsb
icebp
call
test
testl
bound
call
push
ljmp
pop
lods
cmp
call
out
push
sub
popf
push
and
push
and
arpl
ljmp
dec
adc
scas
sbb
nop
push
aas
xchg
sbb
pop
repnz
faddl
mov
jl
dec
jmp
aad
pop
xlat
xchg
jle
xor
pushf
jbe
incl
jecxz
cmp
mov
aam
stos
jmp
pop
mov
icebp
pop
aam
in
adc
mov
sti
movsb
lods
fiadds
pop
add
out
push
fnstcw
sbb
and
sti
nop
shll
incl
add
lahf
outsl
arpl
sub
iret
mov
push
mov
daa
or
arpl
cmp
lret
lcall
aad
nop
cs
fimuls
adc
ljmp
pop
scas
cmpsl
lret
pop
es
mov
stc
cmp
popf
ljmp
cmpsb
sahf
dec
cmp
addr16
or
iret
popf
adc
pop
mov
out
jns
ljmp
cmpsl
lret
adc
jno
dec
mov
pop
push
xchg
cmp
iret
jge
xor
rcll
fdivrs
fdivs
outsl
adc
inc
in
frstpm(287
iret
outsb
test
ljmp
repz
xor
pop
cmp
push
xchg
push
xchg
stos
cld
xor
push
cmpsl
imul
ljmp
shrb
pop
jmp
out
nop
ja
sti
jb
nop
jbe
add
dec
scas
nop
adc
pop
fwait
decl
jb
mov
cmpsb
jne
cli
pushf
jmp
mov
lcall
lcall
xor
clc
cld
gs
or
ds
mov
adc
mov
xor
mov
pop
loopne
lahf
xor
stos
repz
cmpsb
cmpsl
and
jg
mov
mov
and
shll
enter
iret
and
outsl
cmpsb
stos
mov
adc
dec
dec
jnp
ljmp
mov
mov
xchg
sarb
scas
nop
addr16
jmp
lods
cmp
lret
mov
gs
and
rorb
mov
mov
sbb
xchg
jmp
loop
cmpsl
cmpb
pop
arpl
jle
dec
jmp
push
mov
jg
ret
mov
xor
jns
fstpt
cli
in
out
lds
loop
xor
sar
incl
inc
int3
cltd
sbb
imul
pop
mov
sub
jmp
xor
pop
ljmp
jne
out
popa
cmp
das
mov
ret
cmpsl
sbb
dec
fisubs
shr
fwait
inc
loope
sub
stos
inc
test
fists
push
fucomip
arpl
pop
es
or
inc
lods
push
pop
cli
cld
popf
je
add
fwait
push
and
mov
fdivr
pushl
scas
movsb
dec
aad
mov
and
push
fldenv
ljmp
inc
cli
xor
lret
jmp
mov
into
in
xor
ficomps
fdivrp
lea
rcl
sbb
push
mov
push
cmp
jmp
test
mov
jo
or
inc
mov
lret
pop
jns
and
loope
ljmp
adc
mov
inc
repz
fisttpll
push
outsl
ja
pop
cmc
jg
mov
pop
push
pusha
fiadds
mov
icebp
cmp
fidivs
js
es
xor
sub
call
sbb
add
test
outsl
idiv
pop
mov
daa
and
jo
pop
nop
lock
jmp
push
out
xchg
icebp
mov
sbb
add
fisubrs
stos
jmp
push
mov
jne
mov
sub
mov
scas
and
ret
inc
fwait
hlt
shll
sub
fwait
lcall
mov
cmp
cmc
dec
ffree
pushl
icebp
scas
cmpsl
mov
cs
jmp
lea
add
cli
jmp
lahf
es
pop
pop
out
pop
loope
std
cmp
add
ds
mov
dec
add
out
sbb
fst
movsl
test
or
jno
mov
ret
push
out
in
out
call
jecxz
inc
xchg
push
lcall
outsl
cmp
sub
jl
cs
sbb
jmp
mov
aaa
insl
es
push
in
stos
les
mov
inc
lahf
mov
aad
jg
jmp
dec
mov
aam
push
mov
scas
adc
daa
xlat
push
mov
jbe
fcomip
incl
pop
ds
daa
and
popa
cmp
or
mov
mov
lock
mov
outsb
scas
sub
sti
or
pop
add
sub
fs
shlb
mov
sub
pusha
mov
dec
fildl
push
mov
out
sti
aam
xchg
jmp
mov
mov
outsl
push
push
ja
or
sahf
fstps
scas
push
xor
lods
popf
cltd
ss
ljmp
mov
das
sub
pop
cmc
mov
sbb
xchg
das
sbb
shlb
cld
hlt
xor
in
das
adc
cmp
mov
and
jne
and
xor
bound
loope
pop
stos
test
icebp
inc
loopne
and
jg
sarb
sub
or
stos
aad
shll
flds
in
test
xchg
jecxz
sarb
cmpsb
ljmp
lods
mov
icebp
mov
mov
cld
int
test
or
stos
mov
jmp
shlb
pop
push
sub
inc
sub
cltd
adc
adc
pop
daa
and
mov
out
mov
inc
push
mov
jg
mov
sti
and
ljmp
xchg
fidivrl
movl
daa
mov
decl
cmp
scas
and
jge
cwtl
fldcw
fildll
lahf
inc
mov
jle
loop
outsl
sbb
mov
stos
mov
inc
popa
cwtl
nop
adc
ret
in
sarl
sahf
mov
dec
mov
ds
jg
jg
rol
fsts
aad
aaa
lock
rclb
mov
incl
shll
adc
jmp
inc
jmp
adc
sub
jbe
add
xchg
ja
ljmp
ret
xor
pusha
push
add
jae
lahf
jp
insl
jecxz
cli
out
xor
outsb
mov
xchg
push
sbb
pushl
mov
outsl
out
aas
subb
pop
and
sbb
aad
mov
ljmp
mov
ss
bound
outsb
sbb
jns
aad
jp
cltd
pop
push
fdivrl
out
std
incl
sbb
add
xor
test
mov
ljmp
pop
outsb
pop
xchg
jle
es
ljmp
push
sahf
test
xor
push
mov
push
cmp
jno
in
sbb
cwtl
outsb
cmpb
jmp
addr16
in
pop
and
adc
call
mov
fldenv
mov
xchg
xchg
xorl
xor
sub
pushf
aad
dec
cld
mov
xor
cmp
stos
push
sub
mov
mov
clc
push
mov
adc
push
ljmp
loop
xchg
push
in
testb
pop
cmpsb
stos
movsl
ljmp
lock
mov
jl
shrl
pop
dec
cltd
pop
lods
xchg
push
je
pop
stos
sbb
and
add
out
daa
jns
out
iret
pop
data16
jg
in
jbe
fs
jns
test
mov
jmp
jl
jns
push
jmp
jnp
push
jge
pop
cmp
lcall
adc
popa
into
imul
ljmp
xor
test
cmpsl
shlb
in
imul
out
push
push
and
popa
cli
cmpsb
dec
or
dec
or
jle
mov
sub
push
jmp
inc
sahf
out
mov
inc
lret
cmpsb
cmpsl
push
mov
jmp
adc
fisubl
test
movsb
adc
ja
std
and
call
in
fiadds
insl
in
dec
lds
les
das
lret
ds
addr16
cmc
cs
sub
sbb
ret
aaa
mov
call
lods
pop
jmp
xor
mulb
dec
dec
jbe
addr16
mul
outsl
cli
ljmp
scas
add
popf
xor
enter
adc
aas
mov
mov
push
test
mov
mov
adc
mov
jge
dec
clc
out
cmp
cmp
jb
mov
mov
in
les
adc
insl
jg
incb
jle
rolb
lods
add
push
movsl
add
sbb
incl
frstor
pop
sbb
ss
jbe
xlat
sahf
sarl
jg
rol
sbb
fisubrl
xchg
and
sub
ljmp
xchg
ds
in
dec
pop
cmp
jb
pushf
rcr
or
es
xchg
faddp
and
and
fisttpl
int3
jmp
mov
push
cmpsb
add
add
loopne
iret
call
xor
scas
test
lcall
xorl
repnz
sub
loopne
pop
stos
mov
jmp
sub
addr16
pusha
ds
push
or
jmp
jge
dec
push
incb
div
mov
jmp
or
push
push
rcl
lret
push
add
cli
pushl
cwtl
xor
out
jl
outsb
inc
loop
pop
mov
int
jl
mov
jg
out
ss
xor
sbb
sarl
addr16
or
leave
out
adc
pop
mov
jmp
pop
dec
xchg
stos
enter
push
insb
pusha
movsb
hlt
ljmp
add
es
sbb
incl
repz
call
mov
aad
imul
lds
pop
faddp
sub
dec
push
repz
dec
adc
xor
div
push
daa
fildll
sub
mov
scas
push
jns
push
setl
cmc
bound
fs
sbb
xor
sti
xor
mov
call
call
push
adc
dec
sti
mov
out
cmp
and
mov
das
and
fisubl
out
jmp
mov
pop
int3
adc
stc
fimull
xor
out
mov
pop
xorb
xlat
mov
std
lods
jmp
jl
dec
xlat
ret
cld
std
mov
mov
dec
push
mov
shl
xlat
push
and
cld
pop
sub
std
jg
sbb
out
jb
test
mov
cmp
out
int
sbb
sahf
lahf
mov
fdivp
sub
stos
call
pop
jb
and
and
push
fnstenv
xchg
cs
cli
fbld
loopne
lea
in
js
cli
jnp
push
movsl
inc
test
ljmp
lock
sub
stc
mov
and
and
das
ljmp
cwtl
and
dec
sbb
cmp
ror
in
sbb
xchg
dec
ret
das
sahf
rolb
decl
pop
int
fidivrs
sbb
loop
mov
lods
les
imull
roll
push
clc
push
int
into
mov
or
jg
mull
pop
mov
stc
pop
movsl
adc
loop
into
loopne
in
dec
decl
jp
jnp
lock
xchg
ss
xchg
insb
xlat
jns
loopne
insl
imul
mov
sub
popl
in
sub
inc
lcall
call
cmp
mov
bnd
fs
arpl
not
rorb
fs
ljmp
mov
pushf
jp
sbb
outsb
in
inc
and
pushfw
mov
movsl
or
jg
xor
loope
xchg
data16
and
inc
sub
in
or
pushf
cli
mov
clc
lcall
mov
dec
out
push
js
push
inc
out
adc
out
shll
into
mov
fstpl
sbb
cmpsl
xchg
daa
shlb
insl
pop
and
push
inc
add
test
test
insl
imul
fucomip
push
inc
and
mov
test
push
int3
sbb
jle
stc
cwtl
lds
test
out
inc
lock
std
cli
pop
into
out
and
mov
addb
call
pop
mov
loopne
and
call
mov
xor
mov
sti
ljmp
xor
push
mov
ror
inc
fwait
cld
jno
push
fimull
sub
xchg
decl
movsb
scas
mov
mov
mov
xor
mov
cmpsl
mov
jmp
scas
daa
pop
shlb
movsb
dec
mov
test
push
dec
imul
ljmp
cmpsl
gs
mov
mov
repz
and
icebp
or
push
pop
out
xchg
adc
sbb
inc
gs
jp
stos
sbb
mov
insl
ds
adc
clc
orb
dec
aad
and
xchg
test
incl
pop
fsubrl
cmc
pop
test
loopne
sub
pop
add
pushw
add
jno
test
in
xchg
outsb
jmp
or
std
call
loopne
lods
int3
pop
or
in
out
inc
dec
sub
fwait
jge
sbb
ljmp
jmp
stos
sbb
push
mov
pop
jbe
pop
in
roll
add
xchg
cld
into
in
xlat
push
outsl
js
data16
push
rolb
push
imul
jecxz
sti
lds
es
mov
popf
arpl
stos
jg
arpl
sub
ds
lods
out
bound
cltd
lret
loopne
out
call
mov
add
pop
pop
and
adc
sarb
sbb
dec
jmp
call
ljmp
pop
mov
outsl
bound
sub
lret
aaa
scas
xchg
enter
rcrb
loopne
in
inc
mov
in
cltd
pushf
mov
arpl
mov
and
mov
xchg
inc
mov
sbb
std
int3
dec
in
scas
pop
lds
dec
ss
in
les
add
pop
test
es
test
cmp
mov
dec
inc
jle
push
je
mov
shlb
cmpsb
mov
add
addr16
jp
in
in
jae
lcall
divb
or
bound
out
mov
push
mov
outsb
imul
decl
cmc
push
cwtl
mov
loope
jecxz
int
mov
in
inc
or
aas
gs
dec
aad
xchg
pushf
faddl
out
push
int
mov
icebp
les
mov
hlt
call
or
adc
addl
pop
mov
add
xchg
adc
clc
lcall
fndisi(8087
xor
sbb
imul
cmc
push
ljmp
dec
sub
setb
ffree
dec
mov
test
fwait
mov
aad
rcrb
shll
subb
sti
adc
mov
shll
sar
sar
and
int
mov
pushl
push
es
xlat
mov
jge
fisttps
adc
jo
daa
mov
sub
inc
js
xchg
mov
or
aas
mov
insl
fsubs
cs
in
add
cmp
icebp
stos
pushl
jmp
xchg
call
adc
ljmp
cld
incl
insb
pop
jmp
or
xchg
xor
adc
inc
loope
pushl
loop
loop
jo
lods
fcomi
mov
bound
lods
je
imul
inc
sub
cli
call
mov
movsl
rclb
fsubr
les
test
sub
fildll
scas
pop
adc
or
daa
movsl
test
sub
lcall
or
clc
lcall
jecxz,pt
push
fldl
sar
cmp
pushf
pop
cmpsl
rcrl
das
adc
popa
adcl
aam
mov
call
add
push
fwait
inc
jbe
es
cltd
test
sbb
sti
addl
ffreep
jns
and
pop
int
fcmovu
lret
fbstp
xchg
pop
push
sbb
or
les
lods
lahf
insl
xchg
push
addb
movsl
popf
ds
daa
push
sbb
lds
imul
addr16
iret
movsb
inc
sub
decl
roll
or
fidivs
xchg
fs
push
test
push
aad
pop
push
mov
xchg
cli
out
imul
cmp
mov
gs
ficoml
movsb
out
incl
pop
insb
loopew
push
stos
xchg
in
lock
push
insb
rol
adc
dec
movsl
push
addr16
jge
and
mov
push
lahf
push
push
mov
insb
js
adc
out
ret
jmp
ficoms
addb
push
das
out
loopne
cmc
jp
scas
ljmp
test
push
inc
das
sar
or
sti
xor
ds
stos
mov
sbb
out
mov
xchg
adc
popa
ror
cmp
adc
push
xchg
mov
push
or
cmpsb
loope
jp
lods
loop
lods
add
pop
aad
movsl
cltd
xor
decl
and
pop
pop
lret
inc
adc
imul
lock
ud0
call
fsubrl
lahf
lahf
mov
sub
push
cs
loop
push
jg
in
pop
call
lcall
inc
daa
mov
ficoml
and
adc
test
mov
incb
add
push
xchg
daa
pop
inc
les
test
decl
iret
loop
fsubp
ljmp
negl
cmpsl
movsb
dec
jmpw
sub
push
pop
ljmp
jb
ret
popa
adc
push
cmp
lcall
das
push
push
xchg
push
popa
mov
xor
cmp
xor
add
das
adc
sbb
dec
adc
mov
push
decl
pop
fs
mov
push
cmp
decl
xchg
adc
pop
aaa
push
push
adc
ja
lods
data16
call
subl
push
out
xchg
ljmp
fistpll
pop
shrb
out
jns
mov
sahf
cmp
xchg
call
fneni(8087
mov
sbb
into
test
ret
dec
cmp
mov
and
inc
cmpsb
clc
flds
pop
xchg
nop
fistps
xchg
fnstenv
dec
cli
mov
mov
aad
sbb
pop
jbe
push
je
adc
xor
push
fwait
clc
in
adc
and
mov
jmp
decl
cmp
xchg
mov
cmpsl
push
push
mov
jge
sbb
fs
incl
and
push
pop
in
jae
pop
ror
movsb
das
lahf
mov
adc
pusha
pop
dec
xor
call
and
inc
cltd
std
cmpsl
sahf
pop
jle
push
into
cmp
ljmp
sub
les
cli
int
fnstcw
outsl
cli
pop
lock
addr16
xor
pop
mov
jecxz
pop
out
xor
xchg
jg
cmp
jecxz
into
insl
xlat
and
xor
dec
mov
ret
mov
jmp
imul
pop
adc
xor
xchg
lret
dec
dec
push
imul
cmp
iret
pop
adc
fistl
xchg
repnz
cmpsb
ljmp
ja
das
scas
inc
add
dec
incl
test
rcrl
or
repnz
in
cmp
cmp
add
mov
sbb
fcoml
and
sub
and
ds
jns
jmp
lds
mov
shll
push
fcmovu
xchg
test
out
arpl
cmp
fstpt
cs
and
jbe
add
dec
xor
and
adc
adc
fwait
cmpsl
jecxz
ss
xchg
das
sbb
clc
test
rcrb
ss
mov
mov
fidivs
sub
push
scas
movsl
lcall
mov
pop
cmc
lcall
xor
jmp
loope
es
daa
xlat
pop
insl
adc
inc
rcll
or
pushl
jmp
stc
and
push
mov
imul
add
push
hlt
xor
pop
push
xchg
adc
popf
ret
decl
rcl
jge
xor
adc
push
mov
ljmp
xchg
fdivl
mov
mul
pop
lods
insl
cmpsl
pusha
push
test
and
xchg
imul
das
shlb
das
inc
les
arpl
lcall
addb
notl
push
pop
push
cmp
ljmp
or
mov
sarb
and
addr16
int
sbb
inc
fdivs
outsb
push
and
inc
and
pushl
nop
mov
inc
pop
push
jmp
cli
incb
stos
add
cwtl
push
or
ljmp
mov
xlat
scas
mov
test
in
das
lcall
call
nop
mov
cmpl
push
dec
ret
lcall
fwait
sbb
mov
shlb
mov
jnp
inc
pop
insb
sub
cmpsl
or
pushl
ss
sub
jno
imull
in
shrl
push
and
icebp
lcall
sbb
and
xchg
pop
je
pop
add
cmp
pop
out
adc
push
incl
out
cli
xlat
outsl
ljmp
out
ficomps
decl
sub
xor
inc
push
pop
dec
sub
pop
cwtl
in
jns
sub
jo
and
cld
mov
mov
mov
xchg
call
hlt
movlps
pop
xchg
dec
sti
out
xor
arpl
xor
decl
inc
mov
inc
mov
ror
arpl
pop
hlt
jmp
nop
pop
add
test
pop
sti
fists
sub
sbb
clc
fcomip
lods
pop
push
scas
in
inc
cmpsb
pop
lds
sbb
ljmp
fldt
out
popf
scas
sahf
pop
sbb
dec
sarb
dec
mov
mov
xchg
js
cwtl
sahf
xchg
ljmp
sar
cmp
movsl
insb
xchg
jp
lds
mov
hlt
cltd
and
cmp
inc
push
add
test
cld
incl
dec
pop
adcb
xchg
fwait
pop
jg
mov
cmp
push
sub
out
call
inc
push
xor
inc
mov
and
icebp
ljmp
pop
je
movsb
sub
es
mov
xchg
jno
dec
sub
push
sub
pushl
outsb
sbb
cmpsl
ljmp
cmpsl
das
inc
ret
pop
jg
out
clc
push
fld
cs
sub
pop
pushf
mov
das
pop
mov
pop
or
mov
popf
test
push
lcall
mov
shrb
data16
adc
xorl
push
lods
ljmp
iret
inc
iret
xchg
dec
in
xlat
icebp
cmp
movsb
jne
sub
pop
out
or
mov
pop
cmp
add
mov
ret
fwait
sbb
mulb
adc
ljmp
mov
fidivrl
cwtl
mov
enter
push
insb
in
mulb
ljmp
adc
ljmp
fldt
xor
sbb
mov
shrb
and
scas
aad
scas
sbbl
pushl
jae
jae
sbb
push
adc
sbb
imul
push
fadds
and
es
out
ds
movsb
sub
cld
xchg
xor
push
pop
or
jo
adc
pop
push
sbb
inc
call
and
test
inc
je
pusha
sub
mov
test
jg
fsubrs
data16
test
and
adc
call
cmp
or
and
movsb
sbb
inc
sub
lcall
stc
add
push
rcll
sbb
push
mov
sbb
fmul
and
sub
test
mov
pop
int3
mov
cmpsl
int
lods
lcall
movsl
jg
jmp
ficoml
cmp
xchg
lods
pop
mov
mov
ja
gs
xorb
mov
fsts
and
sbb
stos
xchg
jmp
ljmp
mov
or
mov
xchg
sarl
push
xchg
dec
jecxz
sahf
clc
jg
mov
mov
inc
addr16
pushf
or
ds
ljmp
pop
lcall
sbb
imul
mov
xor
out
mov
inc
mov
cmpsl
adc
mov
dec
movsb
fwait
cltd
fisubl
sbb
mov
clc
incl
out
pusha
jb
fmuls
out
push
adc
mov
push
and
fcmovnu
stos
pop
jp
lds
adc
ucomiss
scas
and
mov
data16
sbb
xor
xchg
push
pushf
jnp
cmp
aas
lahf
adc
push
lods
movsb
incl
sub
lods
mov
jb
aam
test
jbe
mov
orb
mov
fs
mov
ret
stos
in
lea
addl
incl
pop
sahf
fistpl
hlt
jge
jl
xchg
repz
and
mov
adc
pop
fcmovnb
pop
das
jb
push
xchg
daa
out
pushf
lahf
adc
fcos
decl
std
mov
rorl
add
mov
stos
fmuls
call
sbb
decl
mov
sbb
jle
rorb
xchg
test
lret
dec
and
repz
pop
fisttpll
icebp
sbb
jmp
in
rcrl
xor
iret
push
or
push
cmpsl
push
sbb
sti
in
or
mov
add
sbbb
ficoms
lea
pop
int3
js
psrlq
gs
inc
cwtl
icebp
andps
jno
or
je
cld
cli
nop
push
mov
push
sbb
dec
ja
ret
aad
mov
and
outsl
push
fbstp
or
fwait
clc
pop
or
data16
int3
inc
jns
mov
fcomip
push
pop
cwtl
lods
cmpsb
mov
pop
xchg
arpl
cltd
popf
xor
xchg
dec
push
test
mov
dec
inc
dec
mov
jl
fisubs
sub
jmp
jg
and
push
lcall
push
push
pop
adc
sarb
shrb
mov
cmp
push
lea
pop
aam
xchg
push
pop
mov
cmp
push
movsl
sub
outsl
fnsave
pop
sub
or
cmp
xchg
push
sahf
iret
in
jb
iret
add
sbb
jp
es
outsb
or
scas
popf
ljmp
sub
xchg
and
xchg
xlat
push
dec
int
mov
or
lcall
jp
sahf
test
add
cmc
out
push
movsl
fildl
fcomip
mov
mov
loop
mov
push
xchg
pop
and
dec
insl
sub
cmpsl
idivl
lret
mov
mov
pushl
jns
dec
int
or
jge
je
mov
int
jb
push
into
sub
fldl
in
call
lret
addr16
shlb
jle
dec
jne
and
cmp
ret
stc
lds
push
int
dec
adc
inc
cmp
jp
ret
sub
pushl
arpl
ret
pushf
mov
inc
scas
test
push
nop
mov
pop
push
enter
es
cmp
es
sar
insl
and
mov
push
jmp
push
push
push
mov
push
jmp
lcall
leave
fmuls
pop
cwtl
cmpl
pop
lret
out
movsb
add
popa
pop
lcall
jmp
push
mov
push
lahf
andl
out
lds
outsl
sub
aam
adc
stos
push
movsb
loop
repnz
mov
test
jecxz
and
int3
jmp
push
push
cwtl
adc
cmpsb
mov
inc
test
xchg
ljmp
adc
inc
push
dec
ret
outsb
jmp
xorb
gs
push
insw
sbb
in
in
jle
mov
and
pop
iret
mov
les
adcb
iret
jg
mov
aad
xor
sbb
pop
pop
fcoml
das
jl
movsb
pop
mov
addr16
xor
push
push
aas
xchg
inc
dec
pop
xchg
test
stos
inc
std
mov
mov
dec
bound
outsl
mov
cmp
sbb
incl
mov
jmp
sub
xor
push
sbb
rcr
push
mov
test
push
xchg
xor
lock
adc
add
dec
test
add
lds
mov
lock
ljmp
and
push
std
scas
sub
icebp
testb
aam
jae
sub
jmp
and
mov
data16
jge
into
add
scas
adc
pop
sbb
adc
lcall
dec
decb
xchg
jae
mov
nop
mov
mov
cld
aaa
push
xor
pop
out
cs
lods
mov
jg
nop
mov
xor
or
push
xor
mov
pop
inc
das
fsubrp
or
sbb
andb
std
push
or
fadd
loopne
out
fmuls
outsb
das
adc
fadd
int
jno
cmp
push
xor
mov
jle
lods
jnp
xor
mov
orb
xor
iret
leave
jl
xchg
push
jg
lods
pop
push
in
mov
pop
call
repz
xor
inc
sub
movsb
sbb
movsl
ljmp
out
nop
sahf
daa
xlat
shr
ffree
xor
mov
out
shl
push
cs
dec
test
mov
jl
xor
fnstsw
stos
add
jg
pop
cmc
cmpsl
in
xchg
mov
dec
into
lea
sub
jno
sar
aas
lds
jns
mov
sbb
lcall
pop
xchg
sbb
in
push
ljmp
pop
jle
xor
mov
pop
sbb
movsl
stos
hlt
adc
ljmp
xor
ljmp
loope
push
lods
adcb
out
in
pop
pop
call
cmpsl
rcll
adc
xchg
inc
sbb
add
xchg
pop
dec
jg
lcall
add
movsb
cltd
insl
lcall
xlat
jae
inc
loopne
and
decl
sbb
pop
in
imul
rcll
decl
xchg
pop
ret
pop
adc
sub
adc
add
in
ret
mov
vhaddps
sbb
mov
ljmp
incb
cmp
sub
out
sbb
push
jecxz
rorb
adc
stos
das
push
add
push
sub
pop
mov
shll
cwtl
adc
xchg
xchg
aaa
mov
aad
pusha
call
cltd
dec
add
adc
jno
sub
lods
int3
push
jle
in
stc
mov
mov
scas
rolb
or
xchg
scas
fcomps
dec
mov
push
sub
mov
test
mov
push
std
es
ljmp
push
sub
cld
jae
jmp
xor
test
and
sbb
push
push
lds
ljmp
cli
fwait
out
cmp
xchg
popw
addl
or
addb
inc
addr16
call
inc
inc
pop
rorb
imul
pop
div
and
vandps
mov
or
test
push
sbb
loopne
sbb
das
push
pushf
push
push
test
mov
icebp
and
xchg
mov
mov
popa
push
push
dec
cmp
push
xchg
mov
jo
sbb
mov
cmpsl
xchg
call
movb
xchg
dec
and
push
arpl
pop
dec
call
icebp
iret
fdivr
decl
lock
in
jae
aas
push
sbb
jg
out
jb
push
xchg
rclb
push
mov
cmc
sbb
mov
ds
je
dec
pop
incl
push
push
jl
inc
pop
adc
xor
push
inc
sub
mov
xchg
ds
push
xchg
fwait
push
inc
rclb
ljmp
sub
arpl
mov
sarl
dec
adc
pop
sbb
jg
mov
xlat
dec
cli
imul
fdivrl
into
push
bound
aad
cmovb
ljmp
arpl
into
in
pushf
addb
mov
pop
sbb
add
testl
call
popa
push
cmpsl
das
fsub
filds
and
or
push
xchg
decb
push
jecxz
push
xor
sub
xchg
adc
int3
cwtl
pushf
push
add
xchg
push
push
xor
or
push
mov
push
push
xchg
xchg
stos
mov
and
in
subl
cltd
into
add
xchg
in
call
add
xchg
aad
stos
mov
ret
mov
out
adc
cli
inc
arpl
jnp
mov
call
ficoml
push
cmpsl
mov
nop
sbbl
mov
pop
hlt
incl
es
lret
dec
sbb
leave
dec
or
dec
sub
pop
stc
repz
call
pop
push
sbb
adc
push
hlt
pop
and
jle
daa
jmp
sub
dec
push
pop
pop
adc
mov
lock
jle
ljmp
icebp
push
adc
dec
pushl
ret
int
daa
push
xchg
cmpsl
xlat
xchg
fidivrl
fdivrp
call
out
xchg
adc
mov
add
cmp
sbb
xlat
lds
out
into
adc
push
fcoml
inc
add
cmpsb
cmpsl
add
add
jle
cmp
cld
cmovns
sub
jecxz
jmp
rolb
scas
xchg
jbe
push
adc
scas
add
cmpsb
jp
mov
pop
icebp
decl
dec
push
call
movsb
or
insl
push
sub
mov
dec
idiv
incl
sbb
cwtl
pushf
and
nop
loopne
sub
test
sbb
add
and
inc
jmp
sbb
and
movb
or
dec
jne
in
aam
ljmp
mov
pop
or
mov
jecxz
and
negl
lcall
mov
push
cmp
ds
push
aam
jecxz
adc
pop
std
xor
scas
clc
decl
out
jnp
add
adc
movsb
outsb
imull
xchg
sub
in
call
testb
push
jle
dec
nop
sub
lea
arpl
lods
sbb
es
jmp
adc
or
test
int3
mov
mov
add
mov
inc
das
test
mov
cmp
clc
mov
out
mov
nop
push
add
loope
js
stos
xlat
leave
ljmp
sbb
xor
dec
insl
addr16
cmp
inc
bound
hlt
dec
out
push
mov
movsb
dec
rclb
inc
call
out
pop
sbb
scas
roll
adcl
clc
push
dec
int
daa
dec
into
and
shlb
fwait
add
decl
mov
jge
gs
xor
adc
daa
lret
das
cmp
outsl
pop
call
adc
fwait
dec
adc
pop
or
dec
lcall
push
dec
jle
xchg
call
xchg
adc
ja
pop
mov
imul
mov
ret
inc
in
push
lea
mov
es
repnz
inc
sti
lcall
lcall
cmpsb
mov
cmp
push
jmp
or
inc
xchg
adc
mov
and
hlt
push
data16
add
dec
lds
ljmp
js
xchg
jg
mov
sbb
rcrl
negb
repnz
outsl
es
xor
jle
lock
ja
jbe
cmp
loop
fwait
ds
dec
jmp
decl
pop
push
jns
xchg
and
fildl
ret
xchg
int3
cmp
push
cmp
jecxz
jg
daa
shrb
fldt
push
or
ds
leave
stc
pop
push
or
push
mov
push
cmp
dec
repnz
aad
add
mov
cltd
aad
jne
arpl
pop
inc
imul
mov
clc
ljmp
in
ds
dec
je
out
cmp
imul
jno
ret
mov
adc
mov
hlt
cmp
mov
cmp
icebp
adc
sub
ljmp
add
idivl
decl
lahf
xchg
mov
scas
incb
das
add
mov
jmp
jbe
push
repnz
or
pushl
sub
nop
jno
scas
dec
pop
lahf
inc
pushf
icebp
mov
hlt
add
dec
dec
decl
add
mov
lock
and
mov
pop
dec
lock
loop
decl
addr16
ja
outsl
inc
into
mov
shrb
in
push
jbe
push
inc
in
ljmp
outsb
fisttpll
sub
cmc
sub
loop
dec
sub
sub
inc
inc
sub
and
ffree
pop
das
cmp
jg
sub
test
sub
dec
subl
xorl
jb
xor
aas
sub
in
sub
mov
xor
or
lea
sub
call
mov
xor
call
aaa
sub
fdivrl
xor
clc
sub
push
stc
cli
mov
jge
mov
add
jg
cs
push
vunpcklps
adc
add
movsb
icebp
outsb
sub
mov
cmp
xor
sub
pop
imul
das
lds
rol
add
inc
arpl
aad
add
decl
sub
out
dec
out
outsb
pop
mov
and
jmp
adc
std
push
sub
push
int
mov
mov
and
mov
mov
adc
inc
dec
push
cmp
sbb
push
int
cmp
pushl
sbb
jp
jg
idivl
dec
lcall
cwtl
in
sub
fcompl
int
repz
fwait
out
cld
cmp
ljmp
sbb
fcoml
pop
jl
add
push
inc
jno
sti
adc
add
jg
lds
mov
fcmove
orb
clc
rol
mov
push
sub
cs
jecxz
lock
fistpll
lods
loopne
sbb
adc
fisttpll
fsubrs
mov
out
push
mov
ret
fistpl
push
lahf
mov
dec
fxch
loope
dec
jne
sahf
xchg
dec
xlat
lret
ret
outsb
cwtl
jnp
mov
mov
adc
outsb
sar
jg
incb
in
mov
mov
sarb
stc
shlb
fidivs
push
inc
loopne
mov
fwait
dec
fs
filds
cmp
cs
push
push
fildll
ds
cmp
sub
ljmp
mov
loopne
push
js
push
sub
fnstenv
mov
mov
std
incl
mov
ficomps
push
mov
add
xor
ror
cmc
out
aam
inc
mov
pushl
fstp
in
mov
scas
aam
push
rorb
mov
mov
out
push
enter
adc
mov
lret
imul
lcall
inc
scas
jnp
adc
dec
enter
sarb
movsl
or
sub
cld
lcall
into
sarl
sbb
jle
push
mov
shl
cmp
decl
push
sar
cmpsb
xchg
rorb
cltd
jle
xchg
mov
jp
dec
rcrl
pop
lock
fld
stc
pushf
notb
ficoms
dec
mov
shr
add
lcall
ds
push
cmp
adc
pushf
cs
or
or
fistps
sub
mov
xchg
inc
dec
imul
inc
call
inc
mov
les
cs
jmp
outsl
add
mov
push
faddl
call
lret
push
sahf
ss
lcall
jns
nop
aaa
lea
inc
pop
mov
ljmp
xchg
inc
stos
test
jo
rcll
movsl
cmpl
dec
out
cmc
cmc
or
loope
cmp
pop
or
call
std
adc
into
jmp
jae
mov
insb
push
push
inc
mov
testl
inc
mov
addb
movsl
fsub
xlat
adc
imul
and
js
call
jnp
lds
arpl
dec
or
jnp
xchg
fsubrl
test
cwtl
xchg
fs
mov
xchg
push
push
mov
jg
mov
lret
ret
adc
xchg
subb
dec
stos
mov
pop
bound
mov
adc
ljmp
add
mov
adc
shlb
add
test
hlt
cltd
movsb
lock
pushf
add
ljmp
adc
mov
inc
jp
enter
movsl
jmp
lea
fs
test
pop
add
lock
jmp
ret
call
pop
fcom
push
lret
loop
or
adc
dec
ret
mov
add
cmp
mov
dec
xchg
mov
sbb
fiaddl
mov
nop
inc
or
scas
enter
pop
lock
lret
mov
jge
pop
shlb
add
and
sub
lods
cmpsl
add
jge
movsb
dec
adc
push
xchg
fs
ret
ljmp
xchg
push
pop
mov
pusha
fimull
sub
aam
pop
out
outsl
add
mov
xchg
push
aas
leave
repz
mov
cmp
pop
mov
jae
nop
pusha
daa
scas
loopne
decl
add
mov
loopew
push
stos
insb
or
jle
add
and
mov
or
pop
mov
jmp
aas
je
or
mov
cmpl
jae
or
or
cld
inc
xchg
pop
inc
xchg
loop
popf
mov
adc
or
cli
jmp
in
scas
dec
lret
mov
sbb
xchg
add
test
push
fstpt
outsb
in
mov
jmp
mov
incl
push
pop
sbb
scas
aad
adc
lock
mov
stos
aaa
std
incl
imulb
mov
movl
push
xchg
cmp
dec
fwait
mov
sub
inc
sbb
ljmp
sub
dec
sub
outsl
pop
cmp
jae
cmp
mov
jae
dec
or
adc
jg
call
push
in
out
jg
mov
and
mov
mov
outsl
lret
cld
imul
mov
add
addr16
dec
xchg
mov
cs
fisubrs
stos
inc
out
leave
scas
je
mov
into
movsl
inc
lds
xchg
ss
mov
pop
pop
cli
orl
mov
sub
std
pop
aam
ret
jge
icebp
fimuls
lock
jg
lss
cmp
lret
mov
ret
in
and
call
inc
adc
mov
lret
dec
lret
mov
outsl
jb
ja
xchg
mov
jecxz
jnp
pop
ss
dec
mov
push
jmp
mov
repz
xor
xor
and
fsubrl
in
push
xchg
cltd
xchg
cmpl
test
call
pop
lcall
dec
cmp
jecxz
cmp
test
mov
xlat
pmaxsw
outsb
adc
mov
cmp
xor
repnz
ja
cmc
pop
jle
mov
shl
ljmp
cld
popl
das
or
scas
cmc
les
add
loope
push
mov
adcb
data16
fucomp
clc
mov
ret
push
inc
adc
leave
sbb
ja
cmp
xchg
das
add
pop
incl
jle
cmp
fiaddl
mov
mov
imul
lods
jp
ljmp
dec
mov
sub
jmp
out
inc
cmp
out
xchg
daa
xor
xor
daa
dec
mov
mov
xlat
or
fwait
andl
add
mov
sub
loope
cmc
sub
mov
lock
daa
loope
lods
and
pop
pop
dec
call
pop
icebp
lcall
add
fwait
dec
out
push
push
idivb
lahf
ret
and
xchg
scas
inc
scas
mov
call
inc
fsubrs
cwtl
or
iret
daa
cltd
call
and
ds
sbb
push
imul
and
adc
ficomps
and
cmp
decl
repz
mov
add
sub
test
pop
out
sbb
out
dec
adc
pop
xor
mov
loope
or
jmp
pop
shlb
pushf
sti
cmp
mov
and
int
fsubrp
loopne
cmpsl
xchg
jb
xchg
jns
sub
addr16
add
pop
sbbl
ds
mov
or
inc
jg
mov
imul
mov
sbb
adc
inc
int3
incl
add
or
in
ret
std
inc
and
sbb
add
cwtl
rcrb
loop
fidivs
adc
out
jg
xor
pop
rolb
mov
decl
in
test
addr16
mov
cmp
mov
inc
push
aaa
test
cmp
and
std
pop
adc
mov
adc
sbb
jle
shll
sar
ljmp
loopne
nop
jne
rorb
out
std
push
stc
push
cmp
iretw
mov
push
or
incl
lret
mov
or
ljmp
lcall
jno
lods
inc
sarb
jns
sub
add
inc
cmc
pop
adc
fxtract
decl
jnp
clc
adc
or
loope
push
rcl
mov
mov
add
inc
loop
aas
addr16
pushf
inc
cmc
mov
cld
jg
jnp
cmp
movsb
es
jl
sar
ljmp
clc
leave
fisttpll
pop
mov
cmp
imul
aad
and
pop
jl
dec
imul
xor
xchg
add
dec
fsts
dec
mov
cli
jmp
movsb
adc
pop
fs
and
jle
in
and
xchg
ljmp
and
mov
jnp
xchg
mov
mov
mov
daa
jne
ds
mov
adc
stc
cwtl
fst
jle
mov
shrd
mov
cld
shll
minps
jmp
xchg
lods
sarb
pop
jns
data16
in
pop
adc
mov
cmp
stos
aaa
sti
pop
incl
testl
leave
mov
les
push
hlt
add
ss
repz
les
lcall
daa
cli
add
imul
sti
xor
cmp
mov
mov
cmp
lcall
jg
cli
inc
mov
dec
icebp
movsb
xchg
lods
lea
movsb
ficoml
bound
mov
incl
adcb
cmc
adc
push
dec
pusha
scas
push
inc
loop,pt
lock
cmpsl
call
loopne
add
xchg
je
push
adc
ja
xlat
jle
cs
idivb
fistps
adc
push
mov
cltd
and
cld
mov
adc
jmp
mov
and
into
addl
sbbb
push
inc
xor
decl
sub
adc
jecxz
out
cmp
aaa
or
test
lock
js
into
stos
clc
rcr
and
push
sbb
ret
push
dec
loop
les
mov
mov
pop
imul
mov
xchg
das
add
cwtl
data16
xchg
mov
add
pop
lock
push
data16
jae
imul
stos
fwait
daa
add
cmpsb
add
push
and
call
inc
mov
lea
mov
mov
xchg
inc
add
fisttps
sub
ret
cwtl
inc
sub
out
test
cmc
cmpsl
dec
mov
mov
pop
push
jns
in
leave
out
cmp
sbb
xchg
int3
dec
sahf
insb
dec
xchg
mov
xchg
mov
jg
mov
negb
lods
sbb
xchg
aad
setp
jg
insl
or
aaa
or
cld
pop
push
pushl
dec
jb
push
inc
incl
lock
xor
hlt
test
mov
xchg
shrl
jnp
ret
push
les
aam
sbb
adc
fwait
cmp
fstl
mov
lahf
xchg
insl
add
cmp
sbb
lock
cli
call
subb
cmp
pop
pop
xchg
lds
add
mov
call
xchg
and
add
or
mov
cmpsl
out
test
std
orl
mov
rolb
add
pushl
sbb
repz
test
xchg
notl
repz
xlat
pushl
std
lcall
test
add
movsl
insb
xlat
scas
shr
scas
fiadds
mov
pushl
cmp
outsb
and
push
data16
jnp,pt
fs
lcall
scas
mov
call
jp
in
dec
out
dec
mov
xchg
xor
ljmp
push
fidivrs
out
ja
mov
in
pop
jae
enter
add
dec
dec
adcl
imul
jp
in
xchg
xor
shlb
pushl
ds
inc
cmp
jge
sub
int3
in
pop
mov
inc
outsb
mov
sbb
ljmp
inc
xlat
jnp
and
xor
dec
pop
sub
jge
das
test
out
sub
push
jo
xchg
aad
mov
mov
jnp
mov
mov
sub
inc
addb
jl
out
jle
rcl
inc
aas
or
les
push
fcomip
lret
sub
adc
loope
xchg
jge
out
jg
ret
and
clc
push
test
sub
xchg
insl
scas
push
outsb
mov
mov
mov
ret
sti
mov
push
testb
mov
jg
jg
jg
bound
push
cld
incl
add
ret
add
inc
fsubs
sub
subl
imul
mov
add
nop
js
ss
xchg
add
gs
mov
add
mov
and
pop
lock
dec
insb
push
pushl
out
test
nop
lods
mov
test
push
mov
sub
or
jmp
cwtl
es
orb
das
mov
sub
and
fadd
ljmp
clc
jg
push
mull
push
cmp
aad
fs
fstpl
in
in
inc
aam
out
pop
jmp
sub
sbb
mov
outsb
nop
push
pop
call
mov
pop
add
inc
out
into
cltd
mov
push
out
add
jmp
push
ljmp
mov
jns
scas
pop
mov
mov
shll
out
lret
jge
jno
les
ret
aaa
cld
push
jg
out
or
mov
in
push
repnz
mov
mov
dec
rclb
scas
scas
icebp
lods
pop
scas
mov
xor
nop
stos
and
fcoml
filds
xchg
mov
dec
xor
outsl
sbb
sahf
fnstenv
push
jge
jno
mov
call
cld
push
jno
test
mov
sarl
mov
fst
js
cmp
call
in
inc
cmp
mov
cs
mov
iret
pop
js
dec
lcall
mov
cld
pop
loopne
sub
subb
cmc
adc
in
mov
xchg
jg
sub
dec
std
cmp
mov
shl
inc
mov
les
xlat
mov
out
stc
push
cmc
jmp
cwtl
frstor
insl
add
lock
jge
mov
jmp
add
sub
lock
call
xor
mov
xchg
dec
aas
ljmp
filds
or
out
hlt
gs
sub
rcrb
mov
inc
lods
jp
pushl
imul
cmp
insb
fnsave
xchg
jbe
push
add
jbe
cmovne
xchg
icebp
ljmp
ljmp
mov
fsubrs
cltd
stos
and
ret
pop
mov
lods
ret
test
jne
ljmp
outsl
cmp
push
lds
ljmp
mov
loop
mov
jmp
outsl
or
and
inc
clc
aad
bound
ret
pop
cs
stos
outsb
cmp
mov
pop
and
push
scas
orl
inc
mov
decl
xchg
pop
cld
sti
icebp
adc
jns
daa
imul
movsb
cmc
pop
pusha
test
jne
mov
insb
idivb
pushl
addl
pop
push
cmp
or
out
jns
fs
adc
call
push
loope
pop
test
in
ficoms
outsl
inc
test
jne
mov
ja
adc
mulb
mov
xchg
das
jnp
ljmp
inc
push
bound
jno
daa
mov
sub
sbb
pop
ret
push
lahf
pushl
sbb
stc
push
cld
aaa
stos
cmc
cmp
icebp
pushf
jne
call
cli
inc
dec
mov
cwtl
insl
stc
jae
fdivrl
mov
shlb
cmp
mov
jae
jl
call
cld
dec
mov
std
mov
cld
and
sbb
in
mov
cmc
int3
push
popa
add
inc
xlat
pop
mov
addr16
sbb
push
xchg
mov
cmc
mov
in
mov
lcall
lcall
shr
add
movsl
add
in
std
mov
jmp
scas
fistpl
sbb
mov
imul
mov
outsl
and
aas
jg
jge
xor
in
xchg
ss
dec
push
mov
movsl
inc
outsl
ljmp
roll
cli
cmp
lods
push
clc
mov
jp
je
repnz
push
dec
lods
cmp
ret
imul
xor
add
outsl
mov
xchg
aas
cwtl
xchg
add
lahf
cmp
xor
ljmp
cmp
mov
stc
xchg
jno
and
pop
fnstcw
sub
jmp
negb
sub
mov
shl
outsl
sub
jnp
in
pushl
pop
jp
push
xchg
cmp
cmp
push
sbb
sbb
mov
jmp
pop
icebp
mov
pop
cs
mov
jns
out
push
mov
cltd
sbb
and
sub
push
lock
pop
xchg
notb
lock
pushl
cmp
je
add
mov
add
fistpll
lea
cld
decl
call
cmp
mov
mov
enter
dec
xchg
icebp
aad
add
sub
xchg
cmp
jg
inc
pop
aad
add
jo
pop
test
rcll
lcall
mov
xor
mov
mov
mov
in
into
cmpsl
cmp
mov
mov
cmpsb
adc
incl
xchg
call
sub
rclb
mov
out
loop
push
cmp
and
mov
cli
mov
push
cmpsb
mov
cmc
fldt
cmp
addr16
mov
ret
mov
stos
pop
hlt
imul
jp
aam
inc
xor
icebp
push
std
dec
insb
loop
adc
das
aas
xchg
sub
cmc
pop
aad
out
pusha
loopne
sub
stos
cmp
test
into
xchg
loope
push
cmp
inc
jmp
push
mov
mov
fs
pusha
test
push
icebp
out
daa
ss
cmp
xchg
push
inc
aas
and
push
gs
sub
pop
push
add
push
jmp
scas
mov
push
add
clc
xor
lcall
xor
mov
call
sbb
cwtl
xchg
ss
decl
pop
jno
in
sbb
insl
jecxz
clc
or
sub
incl
mov
aam
outsb
sub
add
mov
pop
cli
leave
or
push
aad
pop
pop
push
icebp
fmul
cmp
pop
xor
pushl
int3
or
scas
and
frstor
pop
pop
and
test
hlt
aad
daa
repz
mov
jbe
mov
shrb
jmp
cmp
aam
dec
pop
daa
insb
cs
ret
daa
push
cmpsb
push
rclb
pushl
adc
adc
add
and
pop
mov
aaa
pop
ljmp
scas
xlat
dec
dec
push
cmp
in
push
call
decl
lahf
sub
adc
adc
iret
enter
in
inc
push
sub
aaa
and
lcall
shll
imul
cmp
push
sar
and
shr
mov
ljmp
add
mov
test
jl
mov
and
out
decl
jmp
rolb
scas
xorl
pop
std
push
mov
leave
iret
ljmp
xor
cld
adc
je
fs
fnsave
and
cmc
ljmp
jns
int
dec
movaps
xchg
daa
cmp
and
ss
xor
es
pushl
and
das
lret
mov
jle
ljmp
xor
popw
jo
aad
lcall
sbb
jg
cmp
out
sbb
in
bound
pop
sbb
jmp
push
lods
ljmp
and
scas
cmpsl
fnstcw
sub
jp
dec
in
les
lods
adc
ret
sub
adc
sbb
jns
fisubs
pushf
dec
gs
decl
popa
xchg
cmp
mov
cmpsb
push
jge
sub
js
jbe
sub
push
std
decl
push
jecxz
or
sbb
jge
add
sbb
inc
jge
push
idivl
push
adc
std
cmpsb
imul
ljmp
movd
and
mov
dec
jnp
out
outsl
xor
sarb
and
lahf
add
out
pop
lods
and
call
movsb
pop
jae
dec
negb
push
dec
movsb
or
arpl
dec
lea
jmp
sbb
imul
ja
incl
xchg
dec
movsl
push
vpxor
nop
inc
push
sub
cld
pushl
sti
add
sti
outsb
enter
and
xor
loope
add
fcomip
call
pusha
cmpsl
xchg
mov
dec
repnz
dec
push
lcall
pop
das
pop
pushl
jne
fnstcw
cmpsl
xchg
pop
mov
sbb
xchg
pop
lea
leave
push
std
decl
sub
scas
xor
stc
cli
testl
mov
mov
ljmp
in
clc
push
cs
pop
and
hlt
call
push
sub
xchg
stc
into
outsb
cmp
xchg
shrb
lods
pop
decl
fstp
mov
dec
fistpll
cli
sbb
mov
cli
mov
mov
rep
or
aas
mov
cs
dec
push
add
dec
popf
idiv
cwtl
and
mov
mov
cli
xchg
or
test
incl
in
push
mov
out
aaa
push
pushf
lret
xor
push
in
dec
adc
decl
mov
insb
xor
sub
and
push
fisubrl
in
jl
in
and
cmp
daa
push
sbb
cmpsb
mov
stos
jne
and
dec
mov
mov
pop
push
fucom
dec
mov
iret
and
push
xor
je
loop
cmp
in
and
aaa
adc
inc
fstp
loop
ss
mov
xchg
je
mov
add
testl
jo
jg
cmp
lahf
cld
and
outsb
xchg
insl
ljmp
test
repz
outsb
aam
js
lcall
scas
es
clc
imul
leave
and
loop
ljmp
hlt
xor
cltd
adc
int
in
adc
sub
dec
in
daa
sbb
ljmp
push
loope,pt
ret
pop
ss
push
dec
shrb
out
pop
lret
mov
loopne
cmp
out
lock
xlat
out
dec
add
xchg
mov
out
test
imul
dec
cmp
ss
jb
dec
jne
repz
xor
cs
lcall
call
inc
scas
mov
movsl
out
fdivs
push
lcall
cmc
jne
sbb
je
lock
jae
test
xor
and
mov
push
jg
or
call
fs
xor
mov
mov
jb
sub
adc
lock
push
call
xchg
insb
ret
js
out
push
cmp
pop
sub
push
cmc
xor
pop
ffreep
cli
ja
clc
and
out
add
addr16
inc
cwtl
pusha
mov
imul
dec
cltd
pop
fdivrl
and
mov
bound
sbb
test
xor
cmp
mov
push
imul
loope
sub
out
mov
pop
aaa
pop
xor
incl
mov
stos
gs
ds
scas
mov
lods
mov
loopne
enter
sbb
push
cmp
outsl
test
icebp
mov
outsb
imul
add
jg
lods
xor
outsl
sub
adc
mov
push
aas
stos
test
push
in
ljmp
pop
pop
dec
and
cmp
imul
cmp
jmp
push
ljmp
ret
sub
adc
int3
jns
push
inc
push
add
gs
in
das
pop
pop
dec
iret
sbb
add
lcall
push
sahf
fucomp
imul
add
call
pop
inc
insb
mov
cwtl
xchg
mov
arpl
sahf
sub
add
iret
mov
addb
jg
add
das
aaa
mov
xor
in
cmp
aam
lcall
push
sub
lds
pushf
cmp
push
sub
decl
cmpsl
sbb
sub
inc
sub
sbb
lcall
jecxz
lock
jbe
pushf
sub
out
fcompl
scas
mov
inc
nopl
cld
or
shll
sub
fbstp
cmpsl
mov
mov
sahf
cmpsl
addr16
push
inc
gs
sub
ljmp
negb
in
fwait
mov
cmp
cld
adc
imul
adc
pushl
jnp
repz
add
inc
jmp
int
add
mov
push
jecxz
ljmp
out
mov
shrl
stos
mov
ljmp
test
out
pop
sbb
rcrb
xor
xchg
shlb
in
pop
sbb
fisubrl
out
xor
call
and
es
addr16
imul
cmpsl
xchg
xchg
pop
daa
cmpsb
pop
es
ljmp
push
jo
push
out
xor
sub
testl
data16
shlb
sub
and
lcall
jnp
pop
ss
ds
xor
jg
lock
shr
sbb
fildll
scas
cmpsl
jae
sbb
inc
out
ss
das
add
or
ljmp
inc
sbb
mov
scas
movsl
pop
into
mov
in
call
sub
cmc
sbb
in
mov
ljmp
xchg
out
sub
in
dec
pushf
inc
adc
insl
add
jb
jnp
jmp
fcomip
inc
sub
lods
cltd
push
ss
cmp
pop
data16
pop
mov
adc
out
shlb
movsb
dec
mul
sbb
and
and
das
push
mov
lds
in
loope
xlat
push
sbb
xor
inc
inc
hlt
pop
xchg
add
call
in
push
in
inc
lock
notb
jge
xor
movsb
cmpsb
imul
sub
lods
push
mov
add
pushl
mov
loope
and
pxor
scas
xor
outsl
push
push
mov
mov
fdiv
adc
loop
mov
sub
push
mov
cmp
push
or
pop
pop
test
ljmp
sub
mov
das
push
insl
scas
inc
cwtl
loope
xor
scas
jne
pushl
adc
scas
sbb
xor
mov
ds
insl
cmpsl
inc
fwait
adc
pushl
adc
jae
jle
inc
sub
in
pusha
push
sbb
lcall
outsb
out
xor
outsb
bound
dec
je
add
lods
add
mov
insl
call
push
xor
repnz
xor
push
mov
push
fidivl
shll
and
enter
add
ljmp
and
xchg
fwait
push
adc
cld
and
mov
pusha
fisttpl
decl
xchg
test
mov
mov
daa
imul
insl
pop
mov
incl
jmp
push
es
repz
movsb
out
pop
ljmp
sub
or
mov
and
sarl
fbstp
sbb
movsl
inc
pop
pop
add
push
inc
xor
lcall
mov
push
insb
popf
dec
mov
out
mov
call
push
scas
xor
nop
mov
es
sbb
adc
mov
xchg
lods
jl
xchg
sarb
jmp
nop
jmp
jecxz
ret
in
adcb
dec
xor
and
jbe
aad
lods
lcall
scas
lods
adc
outsl
outsl
cmp
push
mov
jg
sub
jge
cmpsb
divb
arpl
ljmp
xchg
in
imulb
loope
jo
xor
inc
lods
mov
jae
icebp
jmp
orl
push
daa
mov
and
jl
cmp
add
pushf
aam
push
mov
cmpsb
pushl
and
test
stos
and
dec
test
sti
iret
push
pushl
add
ffree
cwtl
sbb
pop
movntpd
call
jmp
pop
cld
cmp
add
push
sahf
scas
fdivp
movsb
pusha
mov
mov
mov
gs
lahf
lcall
pop
sbb
push
testb
xlat
sbb
incl
push
lcall
daa
or
test
imul
cltd
adc
incl
adc
cmpsb
mov
lock
fisubrl
mov
rol
clc
sub
push
xchg
in
or
xchg
or
mov
mov
jbe
push
xor
pop
mov
outsl
mov
mov
and
pop
insb
fcoml
aas
pop
imul
fwait
sub
push
mov
data16
push
adc
aas
fcomip
or
outsb
jno
int
cmpsb
fs
cmpsl
sub
jmp
mov
in
adc
test
dec
sub
inc
mov
leave
int3
cmp
cwtl
mov
das
das
sar
jmp
rclb
dec
es
and
das
or
jg
jmp
pop
and
sti
pop
sti
sbb
dec
sbb
out
and
in
mov
adc
decl
and
or
push
out
xor
mov
decl
mov
xchg
aas
movsb
xor
dec
dec
lods
scas
mov
mov
inc
test
mov
dec
movsl
test
xchg
sbb
xor
sub
xor
ret
inc
push
cmpsb
jmp
call
dec
cmp
xchg
adc
enter
call
ret
nop
adc
cmpsb
mov
loopne
sub
fisubl
inc
xchg
pop
shlb
enter
pushl
cs
inc
lahf
cmp
aas
pusha
cmp
push
popa
cmp
decl
das
insl
adc
das
adc
lock
icebp
cmovle
scas
ljmp
fisubrs
movd
outsl
movzbl
insb
adc
sub
sahf
push
daa
psadbw
pop
nop
clc
pop
cmc
adc
repnz
sub
jbe
imul
decl
fisubrl
out
sub
clc
in
out
add
fisubrs
in
ljmp
lock
out
icebp
mov
rsqrtps
sub
push
mov
mov
lods
scas
scas
negb
or
decl
shll
je
adc
xchg
call
js
xor
call
popf
js
into
subl
adc
lcall
or
sub
hlt
jbe
dec
leave
js
arpl
jle
in
xchg
fsubs
aad
pusha
rcl
out
out
gs
pop
inc
loope
mov
xchg
imul
add
jo
fwait
in
jp
fcmovb
pop
pop
loop
test
stos
pop
out
ss
xchg
pushl
and
adc
dec
xchg
sahf
fsubl
ficoml
push
jg
clc
mov
mov
ss
scas
xlat
mov
sub
mov
sub
shrl
xchg
mov
mov
add
test
bnd
in
jns
cmp
sub
repnz
jl
mov
je
jmp
and
jmp
inc
cmp
mov
insb
iret
mov
jg
cmp
mov
ret
in
and
adc
out
mov
and
stc
or
idiv
ficomps
and
cwtl
xor
fimuls
incl
lock
mov
mov
lock
cltd
jl
mov
lock
jg
adc
push
icebp
adc
daa
mov
decl
insb
mov
mov
loopne
je
pop
sub
pop
jb
sbb
mov
pop
ja
xor
xchg
xchg
inc
jnp
mov
sbb
push
cs
out
sbb
sub
cmp
repz
and
ja
cltd
add
cmpsl
or
or
jecxz
icebp
sbb
cmp
push
daa
mov
and
ljmp
pop
out
imul
xchg
loop
lds
jecxz
outsl
decl
inc
pop
add
movsb
add
dec
inc
xchg
aad
decl
ficompl
push
sahf
mov
push
mov
push
pop
mov
stos
add
mov
inc
shlb
mov
hlt
pop
pushf
in
rcr
hlt
add
ja
xlat
cmpsl
mov
cmpsl
pop
xchg
pop
adc
loopne
call
add
mov
aas
ja
dec
sub
mov
addr16
sti
add
incl
cld
lods
mov
xor
repnz
push
mov
jne
push
mov
jg
gs
and
popf
mulb
push
and
xorb
std
ret
js
xor
stos
aaa
je
mov
mov
xor
movsb
lock
incl
push
test
sub
ja
fstps
push
lods
mov
loop
in
add
cmp
inc
cs
jbe
in
push
inc
les
out
lea
into
sub
lcall
pop
insl
movsb
loopne
mov
lret
xor
mov
mov
out
mov
jnp
test
subb
mov
ljmp
test
mov
inc
mov
js
decl
mov
cmp
jmp
jnp
mov
mov
cmp
add
shr
adc
mov
mov
mov
shr
jb
jne
or
cli
dec
push
jbe
pushf
orl
xor
scas
dec
push
jle
cli
lret
fisubs
dec
lret
popa
jmp
cmovbe
fsubr
pushf
sbb
push
inc
push
push
inc
fnstenv
lret
dec
lock
cmpsb
std
fadds
aas
mov
lods
push
inc
lret
cs
sahf
lds
popf
ss
loope
ja
jmp
sbb
xchg
push
sub
push
dec
fsubrs
ret
das
sar
mov
sbb
jg
in
enter
jle
jae
shll
jne
inc
pop
imul
or
ror
lcall
decl
jne
cwtl
outsl
movsl
popf
mov
add
jmp
sbb
call
aad
fdivs
lds
or
jle
popa
xor
shrl
mov
push
pop
sbb
and
sub
lcall
fcoml
sti
scas
fcomi
lods
neg
fdivs
mov
inc
push
pop
lcall
call
insb
xchg
dec
and
dec
sar
mov
xchg
repnz
bound
push
mov
inc
stos
jno
jno
rcrl
dec
push
test
bnd
pushl
and
je
rorl
test
lcall
push
push
pop
adc
call
decb
fcomip
cmp
jp
push
mov
jbe
and
decl
mov
push
pop
adc
out
arpl
lods
loopne
and
add
lcall
inc
jecxz
das
xor
cmc
repnz
bound
out
inc
cs
push
push
loope
loop
loopne
sbb
jecxz
out
lret
fldl
ljmp
or
inc
mov
imul
aaa
jns
stos
insb
loop
and
in
push
rol
jbe
pusha
or
pop
mov
xchg
add
daa
aas
lahf
sahf
sahf
jns
mov
decl
adc
sarb
sbb
roll
cmpsl
push
aaa
es
lcall
daa
jg
pusha
cmp
bound
mov
shlb
addr16
pushl
xor
pop
cmp
ficompl
lahf
incb
lahf
cltd
lcall
cmp
jnp
sti
rorl
fcoml
cmp
add
mov
ret
or
outsl
fidivs
testl
mov
cmp
pop
cmpsb
outsl
insb
ljmp
mov
shrb
insl
mov
sbb
xor
xor
in
fndisi(8087
into
or
sub
into
ljmp
cltd
lods
pop
pushl
xchg
subb
adc
pop
loope
inc
insl
lret
imul
jmp
popfw
xchg
pusha
adc
sbb
jae
sti
dec
xorb
jmp
sub
lret
das
fs
mov
mov
sub
int3
popa
sbb
xor
xchg
mov
daa
sbb
jno
enter
sti
mov
push
sti
cli
jb
push
inc
mov
dec
test
test
jl
icebp
mov
pop
in
pop
cmp
add
sar
push
cmp
mov
or
shlb
outsl
pop
scas
adc
cli
cmp
jne
inc
sbb
jbe
jecxz
mov
gs
out
mov
add
inc
cs
sub
pushl
cld
inc
inc
loopne
dec
xchg
mov
jmp
sbb
sub
aam
xor
stos
jno
in
sbb
sub
mov
ja
outsl
jl
cld
and
lcall
loop
in
pop
push
sbb
sub
decl
xchg
mov
js
or
fsub
and
daa
push
cmpsb
xlat
and
mov
repz
std
out
and
pop
jb
shlb
sbb
jmp
dec
fs
mov
push
mov
adc
js
sbb
lcall
mov
icebp
cmc
sbbl
cmp
not
mov
lea
out
jecxz
ljmp
aas
jl
lock
je
push
lahf
xchg
and
add
mov
mov
loope
outsl
les
sub
fwait
mov
xlat
add
gs
inc
fmuls
sbb
lods
out
out
bound
insl
cmpb
adc
jg
negl
arpl
sub
push
mov
ljmp
sub
jl
iret
mov
jmp
or
add
lds
ret
cmp
jmp
movsb
cmc
scas
mov
mov
xor
test
sub
pop
jp
lods
sbb
dec
loopne
jmp
loope
mov
and
out
adc
xor
push
rclb
imul
mov
fildll
push
push
fs
ss
lcall
lret
outsl
lcall
pop
or
push
outsl
inc
cltd
gs
jle
sub
jne
push
scas
insb
pop
and
pop
scas
jne
push
mov
sbb
or
pushl
and
push
xchg
outsl
mov
cmpsl
pop
pop
fnstcw
push
jno
jb
call
sub
outsl
fsubrs
jnp
shr
lock
pop
jnp
lret
fists
inc
xor
add
jnp
aam
xchg
popf
sub
pop
ret
push
inc
pushf
std
and
mov
stos
and
inc
sahf
call
lods
mov
push
add
fildll
add
jg
out
adc
fiaddl
roll
dec
push
sub
lahf
test
jg
decl
inc
jo
lds
insb
lret
bound
in
mov
daa
addl
fiaddl
xchg
cltd
incl
cmp
push
out
scas
lahf
ja
ret
das
in
sub
fcomps
add
nop
loope
decl
mov
and
add
cmp
subl
cmc
xor
popf
xchg
inc
jbe
xchg
call
xchg
pop
test
outsb
addr16
inc
shlb
movsb
add
stc
add
gs
fcmovu
push
pop
pop
cltd
incl
dec
data16
lcall
call
mov
mov
push
shrb
ret
clc
jmp
loope
outsb
cwtl
fnsave
pop
jl
inc
adc
bound
incl
inc
leave
cltd
fldt
andb
ds
call
outsl
ljmp
and
xchg
repnz
loop
pop
jmp
decl
adc
push
mov
gs
and
jp
addb
cltd
adc
push
mov
out
pop
cltd
dec
pop
adc
pop
sti
lahf
jne
push
sbb
xor
clc
fcmovu
aad
leave
outsl
add
decl
leave
rclb
xlat
push
aad
fisubs
arpl
sub
jmp
ljmp
xchg
rcrl
clc
dec
mov
pusha
fcmovbe
and
sub
aam
enter
jmp
xor
out
xchg
pop
push
iret
icebp
int3
push
xchg
shlb
xchg
jge
jnp
xchg
jmp
dec
fstps
cmp
into
lock
push
sahf
mov
push
xchg
insb
xlat
fcmovb
push
fisubl
sbb
lcall
add
out
lds
push
idivb
insl
mov
outsb
sar
shll
jecxz
int
cmp
push
lock
lcall
adc
into
out
adc
rclb
pop
adc
repnz
ja
les
mov
mov
pop
movsl
jmp
push
repnz
adc
push
mov
pop
test
and
out
jns
xor
xlat
pop
dec
push
sbb
mov
ret
iret
jbe
xchg
cmp
cmp
and
mov
push
xchg
adc
jl
push
xlat
movsb
adc
imul
cld
cmp
arpl
scas
cmp
xlat
jno
cmp
sbb
hlt
jg
into
mov
dec
and
in
push
popf
adc
nop
sbb
fbstp
jle
bound
add
sbb
nop
xor
jno
xor
sbb
and
leave
or
loop
enter
pop
push
fidivs
sub
scas
std
sar
out
pop
fdivrp
or
ror
mov
add
pop
cs
lahf
ss
ljmp
js
popa
pop
out
pop
xchg
cmp
pop
incb
xor
push
out
cs
fstpt
pop
ss
add
mov
incb
push
bnd
inc
into
jge
lods
pop
jmp
pop
jbe
in
ds
lea
pop
pop
pop
mov
rolb
lea
jmp
pop
ss
jecxz
negb
pushf
rcrb
ss
popf
fisttpll
fwait
int
lcall
and
scas
loopne
sahf
dec
sbbb
popf
pop
ds
jg
call
fwait
and
push
lods
loop
xchg
cmpsb
mov
adc
mov
dec
jle
pop
xor
lea
and
imulb
pop
scas
inc
adc
jne
movsb
pop
lcall
jg
pop
push
pop
pop
mov
lock
adc
outsl
fcomip
faddl
loope
scas
cli
dec
aas
movsb
mov
mov
ss
ljmp
daa
and
mov
add
mov
lea
arpl
sub
pop
andl
loope,pn
fistpll
xor
mov
hlt
mov
pop
bound
xor
sbb
out
sbb
lds
loope
fisubrs
xlat
cmp
fbld
cmpsl
in
popa
mov
movsb
out
sbb
sbb
data16
mov
sub
mov
lcall
fs
aad
bound
xor
sbb
lods
sbb
jle
lahf
lahf
push
and
imul
popa
push
incl
xor
ss
jle
lret
gs
ljmp
cmp
lahf
fnsave
xchg
lahf
ljmp
pusha
mov
and
or
jg
in
lods
push
lods
pop
cld
in
push
mov
ds
addr16
das
cmc
outsl
pusha
inc
mov
aas
inc
jmp
push
in
std
pop
fcoml
push
fstpl
das
push
add
mov
popa
adc
and
popf
pop
and
and
das
sahf
sub
icebp
jg
mov
inc
and
push
push
loop
pop
mov
mov
out
xor
inc
dec
lcall
scas
and
fbld
push
mov
out
jecxz
es
push
push
ds
faddp
pop
xor
mov
decl
lods
fbld
and
push
add
scas
loop
cmpsl
mov
clc
mov
push
or
xchg
push
ss
and
pushl
std
xchg
and
out
scas
push
cmpsl
loop
cmpsb
scas
mov
and
pop
daa
xchg
pop
jg
lcall
sahf
pop
push
sahf
xchg
sbb
sbb
fisubrs
xchg
gs
pushf
leave
mov
mov
push
into
out
jb
jmp
loopew
popf
outsl
ficomps
inc
lahf
add
aas
pop
jg
das
jno
pop
pop
test
push
imul
loope
filds
jp,pt
aas
mov
xchg
push
pop
pop
cmpsb
sahf
pop
pop
mov
das
sbb
dec
daa
fisubrl
frstor
lcall
add
pop
mov
mov
push
pop
mov
out
jmp
sub
out
fildl
pop
fldl
adc
xlat
sahf
inc
cmpsl
fbld
xlat
pusha
push
daa
out
sub
jmp
dec
out
sbb
mov
movsl
out
jae
call
cmpsb
xlat
bound
mov
ljmp
mov
lcall
xchg
popf
add
lahf
popf
adc
xchg
pop
or
scas
bound
cmpsl
and
scas
and
xchg
or
aam
sti
daa
xchg
fistpl
cmpsl
ds
xchg
sahf
xor
outsl
pop
pop
scas
clc
xchg
and
xchg
dec
jle
lock
out
popf
cld
pop
add
pop
in
push
inc
out
and
out
loope
iret
push
fidivrl
fwait
std
push
jp
daa
pop
ljmp
es
aas
and
pop
loope
scas
pop
fidivl
pop
pushf
fsubrl
pushf
das
sar
out
pop
xchg
xor
pop
cwtl
scas
mov
xor
ret
loop
pop
loop
pop
fisubrl
mov
clc
or
push
pop
cmpl
test
pop
lcall
sar
push
call
dec
xor
push
pop
lock
mov
jno
xlat
loopne
xor
pop
mov
fadd
pop
clc
and
adc
xchg
fisttps
nop
clc
or
ljmp
sahf
sarb
lcall
pop
mov
or
bound
cmp
ds
jg
aaa
fcom
mov
sahf
cmpsb
inc
xchg
mov
call
sarl
push
sbb
cmpsb
outsb
fbld
fstl
mov
push
fldl
push
aas
pop
insl
mov
pop
sbb
imul
insb
loopne
fsubl
pop
jno
aaa
push
gs
inc
mov
test
pop
es
pop
test
xlat
stos
pusha
pop
sbb
daa
fistl
popf
sub
popf
sbbb
cs
dec
in
and
aas
imul
fnstcw
loope
lahf
dec
mov
pushf
dec
pop
out
inc
inc
fidivs
inc
rcl
pop
pop
fldz
sbb
out
popf
cmpsl
out
fsts
decl
mov
pushf
jb
fbld
xlat
pop
mov
scas
sbb
xchg
or
pusha
ds
fwait
mov
call
jg
lods
ljmp
pop
push
shrl
jg
adc
bound
loope
inc
fwait
adc
xchg
pop
dec
iret
jg
sub
repz
daa
xchg
in
push
jg
push
enter
xchg
ljmp
dec
dec
push
pop
call
sbb
outsb
pop
rcr
inc
fisttps
aas
fsubs
fdivr
out
popa
loope
lcall
jne
jo
pushl
push
xor
mov
pop
fdivrs
pop
lcall
cwtl
push
das
pop
xchg
jno
pop
fidivrl
sub
pop
push
daa
mov
pop
loopne
jp
fdivrs
jo
sub
cmp
mov
xor
pop
ss
sbb
mov
aas
loop
cmp
xlat
cwtl
pop
lcall
out
push
repnz
pop
int3
fcmovb
sbb
lock
fucom
xchg
fsubrp
arpl
ljmp
cli
pop
scas
cwtl
hlt
test
scas
pop
out
push
decb
cli
cld
mov
cmp
repnz
pop
push
scas
pushf
adc
sub
scas
push
mov
in
sbb
or
rcrb
fidivrs
cmpsl
sub
or
jmp
scas
adc
lods
ret
push
mov
push
push
scas
sbb
push
pop
sbb
ljmp
sbb
rcl
addr16
jmp
inc
pop
mov
pop
std
pushl
rcrl
jmp
scas
cli
daa
aam
das
inc
sti
out
clc
lahf
sahf
xchg
inc
pop
cmpb
mov
pop
push
mov
pop
inc
sbb
leave
xchg
das
fld
repnz
ficoml
stos
sub
lcall
jb
pop
and
pop
cmpsb
mov
sbb
jecxz
xlat
xor
fistpll
push
sub
pop
fwait
inc
ds
inc
lret
xlat
pop
inc
stos
fistps
stos
xlat
push
sub
pop
std
pop
sbb
pop
push
in
aas
jmp
fdivrs
mov
mov
fcmovnb
pop
ds
fldenv
sbb
jg
rclb
fbstp
scas
xlat
fdiv
push
pop
mov
pop
jns
jle
andb
lods
out
adc
cmpsl
push
lea
lcall
fadds
mov
lcall
xchg
and
sbb
fwait
decl
xlat
cmp
cwtl
shll
mov
mov
fldt
cli
fwait
sbb
xchg
addr16
sbb
add
call
decl
push
pop
push
fldt
pop
in
sbb
cs
push
sbb
jg
pushl
pop
xchg
insl
xor
cwtl
push
das
pop
xorl
das
sbb
or
in
jg
mov
and
pop
xlat
sbb
sbb
pop
cltd
adc
out
pop
xor
decl
out
sbb
add
sbb
faddl
xlat
fnstsw
fists
push
sub
hlt
lods
in
jg
lods
out
sbb
xchg
sbb
add
rcr
popf
fldenv
xchg
mov
scas
xchg
out
jnp
mov
in
fldt
sbb
jl
sbb
mov
fdivr
and
adc
scas
xchg
adc
sub
scas
push
xchg
pushf
jg
mov
cmc
jg
lahf
fcoml
inc
fwait
scas
lods
addr16
stos
je
push
cmpsb
cmp
pop
clc
fistpll
ret
push
mov
mov
ljmp
popf
fstl
ds
dec
push
dec
cmc
inc
push
inc
in
sbb
adc
pop
or
pop
push
in
push
adc
decl
popf
imul
mov
push
sbb
jbe
and
mov
mov
pushf
bound
xchg
push
pop
popa
cli
ja
mov
call
xor
jae
pop
sbb
ja
pop
pop
repnz
jecxz
pop
pop
lcall
adc
decl
push
pop
sub
adc
sub
out
aad
mov
out
push
push
pop
in
pop
ret
int
pop
inc
mov
push
lret
adc
jp
popf
ljmp
mov
scas
cmp
xchg
mov
xchg
pop
jo
sahf
pop
hlt
sbb
mov
push
scas
adc
loop
aad
and
xchg
lahf
std
jg
add
pop
xchg
lahf
pop
or
sti
mov
outsl
adc
addr16
xor
aad
sbb
bound
mov
sub
push
std
addr16
idiv
xchg
loop
aam
aad
aad
inc
aas
xchg
lsl
xchg
jecxz
pop
push
and
pop
das
sbb
stos
mov
pop
mov
mov
das
cli
mov
pop
xchg
icebp
mov
xchg
jbe
jl
shrb
pop
jl
es
push
sbb
gs
pop
fsubr
pop
call
dec
stos
ds
or
scas
clc
call
pop
fsubl
out
push
ds
sbb
mov
fcmovne
xor
in
mov
jge
and
cltd
xor
mov
xchg
cmp
push
push
and
movsl
fcmovnb
sbb
les
adc
push
pop
icebp
xchg
fists
scas
cmp
push
add
xchg
decl
fistpll
or
mov
fdivs
lahf
pushf
testl
xchg
frstor
cmpsb
push
cld
incl
bound
xchg
es
int3
lret
xchg
ficoml
lahf
fcmovnbe
xchg
xchg
pushf
cmp
mov
push
inc
hlt
leave
mov
jg
cs
push
mov
pop
loop
adc
fidivrl
in
mov
aam
xchg
movsb
jg
ja
lret
cmp
xor
aas
adc
fdivrl
xchg
les
push
fs
jno
ficompl
cltd
adcb
incl
cmp
push
outsb
movsb
pop
adc
push
mov
fsub
das
xchg
pop
ljmp
cs
addr16
push
call
cld
push
pop
aam
push
adc
adc
fdivr
outsl
jle
mov
out
fs
pop
pop
pop
sub
cmc
pop
sub
cmp
lods
mov
sbb
cli
out
add
and
out
xchg
mov
std
push
fcoms
cmc
fists
jns
cld
decl
cmpb
popf
scas
xchg
push
xchg
outsb
fdivrl
scas
clc
fbstp
lahf
adc
fcoml
loope
cmpsl
or
fwait
or
leave
test
shrl
in
or
sbb
outsb
adc
in
inc
mov
add
mov
stos
popf
ds
je
xchg
xor
push
aaa
in
push
sbb
out
clc
sahf
and
shll
adc
aas
xchg
adc
jg
sub
stc
and
pop
jl
lods
daa
adc
insb
inc
shr
popf
aas
and
loop
xchg
outsl
inc
pop
xchg
imulb
sti
mov
out
roll
pop
ror
sbb
xchg
push
pop
ds
incl
adcb
out
pop
aas
push
out
ret
fldenv
incb
inc
adc
out
shlb
mov
mov
out
push
sahf
in
out
and
decb
push
out
adc
fists
push
scas
push
jg
scas
cli
pop
mov
add
lods
xlat
push
mov
je
lahf
xchg
jg
call
pop
xchg
xchg
pop
movsl
scas
push
loopne
cmpsl
push
add
push
push
jg
into
lea
fsts
lahf
lcall
push
mov
incb
outsb
adc
sub
fdivs
scas
push
lcall
outsl
xchg
push
addr16
mov
inc
adc
mov
call
js
pop
aad
gs
cltd
jns
das
lcall
das
push
stos
or
aas
adc
pop
aam
pop
into
pop
test
sbb
loop
das
push
inc
out
loopne
mov
jne
adc
mov
icebp
mov
xorb
pusha
out
xchg
sub
ljmp
fiadds
push
das
xchg
adc
rcrb
fucomip
xchg
xchg
sbb
push
shlb
decb
mov
adcb
jle,pt
xlat
sar
out
mov
add
mov
push
imul
psadbw
lds
fstl
rol
pop
cmpsl
xchg
inc
scas
ds
xor
dec
inc
xchg
jbe
push
mov
xchg
pop
xor
hlt
xchg
fbstp
cmpsl
outsl
shll
das
into
sub
ret
jle
adc
mov
push
scas
pop
pop
pop
sbb
push
setns
ds
jmp
int3
loopne
xchg
dec
mov
xchg
mov
aas
add
idiv
jb
pop
push
decl
pop
jp
orps
jmp
es
shll
das
shrb
inc
nop
jmp
iret
pop
push
shlb
mov
bound
mov
outsl
daa
iret
ret
testb
pop
sbb
xchg
lret
xchg
aaa
sbb
mov
pop
push
cmp
out
adc
fwait
call
jg
push
mov
lock
push
jle
push
pop
cwtl
out
adc
dec
stc
out
xlat
lret
adc
iret
xor
jg
test
jle
xlat
xchg
repnz
fists
ffreep
call
fwait
mov
scas
adc
ja
adc
mov
mov
mov
cmpsl
lahf
xchg
mov
cmpsb
push
call
cmpsl
adc
dec
adc
jg
dec
paddd
mov
xchg
dec
push
cmp
push
cmc
push
pop
adc
clc
outsl
scas
rolb
dec
push
jbe
mov
jmp
out
in
xchg
fwait
lock
push
add
mov
inc
adc
sub
shl
pop
mov
jno
pop
xchg
push
cwtl
gs
push
out
daa
dec
popa
pusha
adc
inc
adc
addb
lock
sarb
mov
cs
lock
push
lods
cmp
dec
sub
ud0
xor
aad
loopne
mov
lcall
rcrb
loopne
push
mov
lea
movhps
call
xchg
rcl
adc
push
add
lock
jmp
push
add
out
push
mov
dec
pop
test
adc
clc
pop
and
out
scas
pop
subb
mov
push
lret
push
push
pusha
jg
pop
inc
inc
pusha
cmp
pop
xchg
shrb
rolb
out
shll
xchg
sub
xchg
sub
das
mov
sbb
xchg
iret
daa
and
insl
repz
mov
dec
jg
adc
push
push
jg
pop
or
test
ljmp
mov
iret
add
xchg
outsb
dec
xchg
call
or
push
icebp
call
pop
push
mull
rorb
into
jo
mov
cwtl
call
aas
push
push
rcll
push
mov
mov
stc
in
into
inc
pop
ds
mov
pop
xchg
mov
call
ficompl
jle
mov
adc
mov
or
rorl
stc
pop
push
ljmp
std
dec
mov
scas
cli
jg
xor
adc
mov
repz
incl
ficoms
popa
push
jecxz
scas
adc
cmpsb
aam
sar
jg
sub
int
pop
mov
nop
cmp
lahf
push
mov
sub
mov
jmp
aam
bound
lea
sbb
push
xchg
sub
push
ljmp
scas
jp
adc
pop
xchg
xchg
xor
lar
jl
pop
test
push
push
xorl
add
addr16
add
adc
mov
inc
shr
ds
xchg
arpl
push
dec
fisubrl
push
mov
adc
decl
test
add
sub
xchg
or
push
pop
icebp
scas
jp
jl
dec
adc
push
jge
das
adc
jl
gs
incl
shrl
pop
xchg
repnz
pop
xchg
gs
out
pop
int
dec
loope
fnsave
push
fisubrl
xor
dec
sub
rcll
xlat
xchg
hlt
out
xchg
dec
jne
mov
jno
lret
mov
iret
push
mov
xlat
nop
push
repz
pop
dec
mov
cld
jmp
data16
add
xor
or
dec
mov
mov
add
dec
mov
add
insb
cli
fbld
push
cli
jmp
adc
shll
mov
rcrl
outsl
movsb
in
or
add
sahf
and
stos
pop
dec
xchg
jmp
fmul
sahf
xor
lret
sub
inc
push
jg
inc
popa
stos
scas
push
push
and
inc
ret
fxch
sub
outsb
adc
jg
loope
fs
cmpsb
sub
add
jmp
mov
imul
or
movsb
js
add
xor
push
pusha
cmpsb
test
lods
fwait
mov
sub
mov
sub
pushl
rcrl
push
push
jno
maxps
lret
jmp
jmp
add
fildl
popl
mov
incl
popa
mov
lret
lret
mov
int
test
lds
inc
lea
adcl
sbb
sbbl
fwait
cmpsl
ds
push
add
fbld
push
inc
scas
nop
sbb
add
stos
popf
out
xchg
or
call
cltd
xor
imul
decl
mov
nop
add
popf
int
pop
xorb
fisubrl
cmp
dec
mov
incl
rolb
and
int3
insl
fwait
mov
jge
sbbl
push
cmp
fnsetpm(287
out
dec
outsl
dec
rclb
mov
outsl
sub
mov
std
mov
decl
popf
jo
sub
lcall
jno
rcrl
lock
ljmp
inc
jmp
in
sub
cli
cs
pushf
pop
fiaddl
jmp
mov
gs
dec
daa
xor
subl
push
test
and
in
fldcw
jle
mov
mov
ss
pushf
mov
cwtl
test
jg
incl
push
add
lcall
mov
xor
iret
stos
and
dec
mov
fimuls
loope
cmp
sub
int
rcrl
imul
lods
xchg
mov
ret
bound
jl
xchg
dec
outsb
sub
or
rorb
mov
mov
ljmp
mov
adc
jl
cmpsb
incl
push
out
jge
mov
add
inc
insb
les
jns
jmp
cmp
fmul
out
jg
loopne
call
xchg
addl
cmp
mov
in
jle
mov
idivb
jle
dec
pop
faddl
sbb
mov
jp
sbb
inc
pop
pop
ret
std
add
ds
aaa
push
xchg
sub
mov
das
cli
incl
pushf
ret
stos
test
loop
call
mov
or
fildll
lcall
and
leave
jg
push
add
je
jo
inc
adcb
mov
enter
mov
adc
push
cld
mov
iret
xchg
push
ljmp
sub
jo
push
cmp
pop
adcl
repnz
cmp
stos
mov
lahf
xor
jmp
mov
dec
adc
es
lret
cmpb
imul
loopne
jle
mov
icebp
test
jg
icebp
jg
fcmove
fstp
inc
push
push
mov
cmpl
outsb
dec
cmp
lahf
dec
mov
ror
mov
fdivrl
inc
add
incl
adc
sbb
pop
add
repz
fs
mov
jle
mov
pop
idiv
ljmp
iret
jne
inc
aam
dec
orb
mov
inc
mov
sbb
adc
call
jmp
mov
inc
ret
inc
jmp
stos
cld
repnz
cld
push
add
clc
mov
dec
xchg
sub
mov
jns
mov
call
dec
cmp
mov
mov
ljmp
js
decl
sbb
or
xchg
mov
test
push
inc
adc
lods
add
call
popf
mov
mov
outsb
add
fwait
push
insb
jbe
lahf
jmp
std
jle
push
lret
cli
push
lret
gs
repz
jae
dec
add
adc
mov
scas
cmp
ds
sub
idiv
mov
les
jae
xor
daa
dec
clc
push
cmp
xchg
jmp
xchg
aas
out
loope
lcall
mov
divb
add
push
xor
std
cmp
lods
jge
outsl
xchg
imulb
push
adc
ja,pt
out
jb
push
mov
testl
add
sti
js
fisttps
enter
lcall
jge
ret
push
jb
ret
cmc
jg
repnz
add
repz
cwtl
cli
xor
lcall
jbe
pop
movsl
push
test
xor
not
cltd
bound
cmp
js
pushl
xchg
cltd
outsl
jae
sbb
mov
adc
dec
jnp
js
loopne
das
push
inc
pop
jle
mov
jo
xchg
lret
call
in
cltd
into
ja
pop
shl
std
add
fiaddl
pop
mov
mov
ljmp
cmp
xor
jl
jno
pop
stc
imul
xrelease
clc
cmp
lcall
ds
psllw
sub
or
jp
je
inc
adc
dec
icebp
aad
repz
xchg
sti
test
mov
push
dec
jp
push
icebp
or
sbb
call
arpl
push
stos
push
rorb
out
xor
out
cli
inc
fwait
shlb
cmp
pop
add
jp
ja
push
lods
adc
icebp
xchg
push
ds
adc
ss
cmp
sti
leave
lock
inc
dec
mov
dec
loop
decl
inc
fmull
sub
or
cmp
fidivl
cmp
sbb
mov
mov
jo
arpl
dec
xor
jae
mov
js
divl
addl
cmp
fwait
mov
loop
in
xor
imul
decl
xor
pop
adc
lea
cmp
mov
faddl
jmp
ljmp
mov
push
repnz
mov
mov
aam
repnz
cmp
dec
xor
lods
xor
mov
push
hlt
js
leave
in
aaa
insb
into
mov
inc
jae
jmp
mov
pop
sti
dec
out
pop
idivb
aaa
mov
add
adc
mov
mov
pushl
popa
fs
insb
jae
fcmove
mov
add
xlat
xor
into
lock
pop
hlt
jno
in
pushf
decl
out
mov
je
repnz
and
dec
lds
cmpb
decl
or
int
clc
mov
fisubrs
pop
xchg
popf
ficoms
repnz
jecxz
inc
leave
jo
in
cmp
cwtl
int
xor
repnz
cmpsb
test
add
dec
pop
leave
cwtl
jbe
xchg
cmovge
test
push
hlt
mov
dec
jo
stos
pop
lret
sahf
test
jg
test
lock
or
enter
ljmp
push
repnz
mov
int
add
jecxz
aam
jle,pt
or
cld
call
xor
or
lret
mov
das
mov
mov
and
jg
sub
add
test
lret
pop
jns
es
sbb
decl
or
gs
xor
dec
cmp
sub
add
pop
mov
test
push
test
add
sub
rolb
mov
mov
pop
stc
inc
outsl
test
incl
cwtl
xchg
popa
sub
lds
imul
repnz
or
nop
nop
fisttps
cltd
cmpb
scas
test
in
mov
call
jge
mov
cmpsb
mov
and
rorl
ret
ja
push
ljmp
push
shr
sbbb
shlb
add
cmp
and
cmp
sub
fstp
or
pop
add
push
pop
dec
push
jno
aas
insb
mov
sbb
mov
add
xor
push
cs
enter
test
mov
push
aaa
insl
cs
mov
in
xorl
ja
push
mov
add
inc
sub
std
lds
stos
enter
cmp
dec
xor
push
jno
clc
pushl
xorl
dec
push
or
xor
decl
out
dec
mov
mov
sti
cmp
out
and
into
fiadds
jp
cmp
jecxz
out
jo
in
clc
test
leave
sub
std
mov
leave
stos
jnp
dec
outsb
addr16
ret
inc
js
flds
jmp
scas
adc
daa
add
jecxz
adc
xor
mov
jmp
icebp
sarb
pop
mov
sahf
add
jecxz
xchg
and
sti
xchg
or
decl
incb
adc
movb
jge
jmp
sbb
push
das
mov
outsb
jbe
pop
jb
dec
movsl
imul
rolb
pop
loopne
dec
pop
adc
das
nop
cmp
mov
push
xchg
mov
mov
ret
add
mov
fildl
fidivrs
jnp
lcall
mov
shl
mov
ds
sbb
lret
jg
adc
ret
cltd
mov
rcll
idivb
andl
sub
inc
in
fidivrl
or
insl
test
fadds
movsb
and
sarb
adc
xor
add
insl
lcall
mov
xlat
add
in
xor
imul
lcall
add
lret
sti
mov
orl
cld
add
fcomip
jmp
shlb
jge
dec
add
loope
push
mov
xchg
inc
outsl
adc
clc
jmp
jg
scas
outsw
clc
mov
inc
fcomip
mov
and
inc
mov
data16
das
inc
adc
pushl
add
xchg
push
andb
outsl
inc
sbb
pop
inc
lret
dec
xor
in
mov
or
mov
adc
xor
aas
mov
repnz
repnz
inc
mov
pop
xor
mov
stos
xchg
cmp
pop
sub
out
xchg
mov
aaa
inc
fwait
test
xor
out
mov
inc
jmp
mov
jp
xor
rcr
call
xchg
ret
insl
lret
cmp
push
sub
out
insl
cmp
add
aaa
filds
ss
cld
sub
fisttpll
jbe
mov
ljmp
scas
cmp
incl
addb
sbb
or
xchg
mov
add
xor
mov
std
xchg
xchg
push
insb
outsl
pop
scas
inc
leave
mov
addb
xchg
mov
mov
mov
mov
pushl
xchg
je,pt
mov
shl
lcall
jo
jo
xor
or
cmp
xor
outsb
add
push
into
sub
and
lcall
and
in
shlb
cmp
pop
das
xorl
pop
ljmp
lea
sahf
daa
test
sbb
das
sub
incl
iret
scas
addb
fstl
inc
xlat
insb
pop
les
lock
jmp
insl
push
ja
xchg
aad
loope
or
lea
sub
pop
jmp
fists
xchg
imul
xchg
hlt
inc
orb
aas
xchg
mov
fnstsw
int3
pushl
pop
lods
mov
scas
test
iret
jg
pop
inc
xchg
aas
sbb
mov
add
mov
add
mov
lahf
repz
sbbb
scas
mov
stc
in
push
mov
lods
xchg
adc
inc
imul
decl
orl
cmp
push
pop
inc
jno
cmp
and
and
push
ds
push
cld
xor
adc
jbe
nop
sbb
lret
jge
outsl
jmp
push
push
js
call
imulb
inc
dec
in
mov
sub
add
dec
lcall
or
les
in
das
lret
cltd
jne
test
mov
sub
inc
mov
mov
ret
dec
stos
lods
pop
xchg
es
mov
loopne
sbb
and
sub
sar
inc
jg
mov
subl
pop
mov
xor
out
pop
lcall
jp
mov
pop
movsb
leave
lcall
sub
mov
lcall
cmp
adc
push
stos
lcall
call
xchg
scas
add
lahf
aaa
daa
push
jle
adc
inc
xchg
fwait
cwtl
lods
stos
les
pop
cmc
ljmp
adc
cmpl
pop
mov
xchg
inc
mov
paddusb
mov
ljmp
or
and
pop
xchg
leave
push
into
xchg
inc
mov
int
mov
lods
lds
sbbb
jnp
inc
lret
mov
hlt
mov
push
mov
pusha
sub
push
mov
daa
adcl
mov
sub
sbb
jae
xchg
movsl
pop
add
xchg
in
iret
dec
sbb
mul
pop
dec
out
jge
xor
push
aas
adc
mov
adc
xlat
ret
out
ret
sub
sbb
stos
jo
in
sbb
jl
adc
in
outsb
dec
push
sbb
sbb
sub
xchg
in
add
enter
xchg
lea
pop
lahf
call
mov
jl
dec
ret
fists
mov
push
ljmp
pop
push
ret
xor
xor
les
add
jle
call
loopne
loopne
scas
inc
adc
pop
cmp
pop
mov
out
xchg
sub
adc
outsl
dec
xchg
in
inc
adcb
add
cs
fwait
xchg
popf
push
std
adc
das
call
cld
push
pop
jbe
ljmp
adcb
enter
jg
out
adc
sti
pop
xchg
xor
mov
adc
sbb
push
pop
push
inc
pop
inc
xchg
lods
pop
inc
adc
cmp
dec
xchg
aad
inc
pop
in
or
dec
cmp
xchg
and
das
xchg
cmc
jo
fsubp
inc
xchg
dec
leave
inc
adc
cmpsl
or
xchg
push
ficoms
cld
pushl
adc
popa
lds
adc
inc
pop
jge
dec
jle
or
in
jmp
add
std
mov
xchg
test
mulb
pop
imul
inc
inc
aaa
adc
outsl
cs
add
mov
or
test
push
xor
std
push
mov
xchg
gs
fstpt
mov
xchg
and
lds
int
adcb
xchg
mov
jmp
pop
ret
nop
fstp
add
sub
cs
ror
adcb
inc
or
mul
adcl
std
outsl
mov
jle
add
fdivrp
adc
or
fbstp
push
adcl
insl
jae
or
adc
std
xor
mov
mov
repz
mov
loope
decl
cs
adc
jne
shrl
imul
sub
sti
mov
aad
or
push
or
cmc
adc
mov
mov
mov
dec
lret
or
jge
or
orl
pop
mov
lds
in
jg
jbe
mov
mov
push
mov
cmpsl
push
or
decl
insl
cltd
adc
ds
adc
into
mov
inc
pop
and
aad
stc
mov
cmc
adc
lods
lods
int3
sti
lods
add
int3
and
push
inc
mov
mov
dec
lea
or
mov
int3
jg
xchg
or
fnsave
xchg
jp
jle
or
clc
pop
shll
sahf
into
or
xlat
nop
sahf
sar
incl
lods
sti
push
lea
jmp
adc
jbe
psrlq
xor
sahf
arpl
xor
jnp
push
xchg
push
call
mov
push
push
lods
dec
pop
fstl
dec
cs
inc
mov
add
cs
mov
and
or
ficoml
aam
and
dec
pushf
inc
cmp
mov
loope
lcall
push
sbb
js
mov
xchg
ss
rorl
mov
sub
adc
sahf
fsts
loope
or
and
pop
xchg
mov
push
xchg
or
inc
jecxz
call
imul
jne
cs
push
or
clc
lahf
pop
fmuls
mov
mov
pop
std
sbb
mov
lahf
add
push
lahf
sbb
inc
mov
mov
mov
aad
jne
cltd
or
sbb
add
push
aaa
add
outsb
jp
mov
add
mov
aam
jge
aad
dec
and
std
add
stos
jp
in
cmp
scas
lds
cmp
cmp
addb
insl
leave
cmp
mov
incl
std
icebp
cmp
popf
in
add
loop
pop
sbb
add
daa
sarb
std
jg
roll
addl
xor
movsl
mov
jg
jne
ljmp
jg
pop
incb
addb
cmpsl
inc
subb
add
xlat
sti
incl
add
mov
sbbb
std
jg
in
inc
sahf
jg
mov
ljmp
jecxz
cld
aad
jg
add
sbb
decl
xor
lods
pop
jle
dec
add
add
mov
into
jno
std
mov
std
incl
movsl
dec
add
inc
push
leave
or
gs
lret
stc
lds
in
ret
inc
adc
dec
jg
cli
fstpt
add
mov
les
in
test
jg
pushl
inc
jge
cmpsl
dec
fisttpll
add
jle
daa
sti
mov
cmp
mov
movsl
out
mov
popl
inc
mov
call
lods
add
in
jge
in
in
lds
xlat
mov
add
lret
dec
jle
sti
or
dec
mov
jle
push
cmc
inc
incl
into
iret
mov
lods
dec
jle
pushl
inc
dec
sbb
je
std
mov
lret
mov
cs
mov
jnp
mov
push
push
aad
cld
or
leave
enter
in
sti
sti
xchg
xor
add
jbe
or
std
aad
add
jne
adc
jg
dec
xchg
cmpsb
or
inc
in
push
add
stc
add
pop
pop
jo
in
sarb
ret
jae
pop
lods
dec
jle
dec
add
cmpsb
fstl
lock
xorb
add
incl
push
adc
rorl
mov
fsincos
sti
jg
mov
push
add
jp
sub
js
or
incl
ss
popa
aaa
std
std
xchg
clc
jl
cmp
mov
jl
cmpsl
mov
jl
lret
xchg
sarb
xchg
jl
out
outsl
cli
adc
stc
sti
cmp
mov
jp
cli
clc
pop
gs
inc
jmp
push
mov
js
sub
repnz
aaa
cld
cmp
clc
xchg
jl
sahf
jns
cli
ja
pop
cmp
in
cmp
decl
cmc
xor
mov
js
imul
push
jne,pt
mov
js
fwait
jnp
movsl
jl
fisttpll
imulb
ja
jmp
in
incb
stc
clc
popf
add
testl
push
fnstcw
jg
cli
int
push
jge
jbe
scas
pop
cmc
cmp
sbb
sub
cmc
outsb
or
jp
jne
lcall
mov
sbb
js
and
push
xor
lds
mov
into
aad
cli
jl
xor
cmc
jno
cmp
clc
jle
mov
jl
mov
out
cli
or
inc
orb
incl
insb
sub
popa
lret
ficoms
inc
mov
dec
or
or
xor
jge
cwtl
add
mov
xchg
fcoml
push
cmc
mov
push
mov
fsubrl
adc
pop
jl
int3
iret
in
push
test
pop
adc
pop
int
testl
ljmp
dec
adc
call
mov
fdivrs
das
cmp
sti
mov
enter
clc
incl
aad
adc
sbb
jns
loop
leave
fnsave
lret
inc
sbb
pushl
fidivrl
jno
lret
in
xchg
mov
and
pop
lahf
jbe
sub
test
es
pushl
xlat
adc
dec
js
fnstcw
aad
pop
mov
decl
cmp
loopne
imul
pop
ds
cltd
xor
adc
or
stc
arpl
push
xor
int
cmpsl
xor
mov
pushf
sub
fisubrs
push
rorb
mov
and
mov
outsb
jp
in
sub
inc
inc
and
xlat
pop
sbb
aaa
mov
sbb
and
enter
decl
clc
sbb
mov
jne
fnstenv
dec
aam
xchg
ret
mov
loopne
and
push
clc
dec
sub
les
leave
jle
lret
mov
enter
pop
add
negb
shll
incl
lret
push
ret
mov
leave
shr
aad
pop
xor
lea
cmpl
or
lcall
dec
ficoml
mov
mov
jg
cwtl
xlat
sarb
roll
cmp
mov
dec
fsubs
inc
jl
inc
enter
xchg
push
fst
jae
icebp
imul
daa
jo
push
xor
call
and
xlat
notb
mov
adc
inc
andb
cwtl
xor
test
dec
xchg
incl
lcall
lahf
std
divb
dec
dec
hlt
inc
mov
call
roll
aad
fldcw
ret
pushl
ja
push
sub
sti
push
mov
dec
cmp
pushf
icebp
shll
clc
int
sbb
add
fcomip
xchg
cmc
dec
vpaddusb
sub
push
cli
adc
ss
lcall
sub
aam
mov
movsl
ret
xchg
aad
ret
sub
jecxz
adc
dec
ret
mov
test
inc
lcall
rcl
mov
nop
mov
and
push
lds
dec
push
cltd
mov
sbb
pop
mov
call
mov
int
gs
aaa
add
ret
mov
insb
lret
dec
fildl
or
in
jae
add
test
dec
pmaxsw
insb
mov
push
pop
enter
mov
inc
std
decl
xorl
jecxz
sbbl
mov
mov
lea
pop
add
andl
push
dec
adc
jo
rcrb
dec
cli
xor
xor
fstpt
push
popa
cltd
jg
push
mov
add
dec
mov
outsl
std
rcrb
mov
or
sub
dec
push
std
repnz
xor
loopne
lret
enter
decl
loope
fisttps
cmp
push
pop
mov
push
loope
push
mov
jno
icebp
dec
or
jmp
jns
sub
mov
call
das
push
push
jmp
stos
ljmp
stos
in
mov
lret
dec
push
cmp
xor
dec
jecxz
mov
mov
mov
add
dec
movsl
js
mov
decl
push
enter
mov
dec
pop
jns
sbb
adc
adc
movsb
pushl
sub
nop
pusha
aam
incl
xorl
jae
imul
sbb
dec
inc
pop
or
out
insl
pop
rcl
mov
jno
loope
jl
xor
inc
mov
hlt
mov
mov
and
fstl
xor
outsl
cmc
xorl
decl
dec
psubq
pop
icebp
add
outsb
sub
repz
and
or
scas
ret
loop
xchg
incl
or
hlt
addr16
dec
push
inc
shl
lret
mov
roll
ret
jbe
ljmp
ret
je
inc
inc
mov
and
ret
int3
adc
les
and
lret
lahf
sti
out
push
inc
xor
push
rolb
fistl
lcall
les
jb
and
jg
inc
adc
sbbl
mov
enter
mov
cmp
in
or
stc
mov
xchg
pop
mov
jmp
inc
adc
loop
or
cwtl
pshufw
int3
sub
or
das
xor
decl
pusha
jl
data16
mov
inc
stos
int3
xchg
push
leave
dec
ds
sti
push
jmp
inc
fsubs
push
fmull
xor
cmpsl
push
pop
add
add
in
mov
shll
pop
jg
lcall
pop
out
mov
ljmp
pop
popf
mov
add
adc
mov
mov
jns
fcoml
std
dec
dec
sub
push
ret
mov
lods
push
or
rcll
dec
fmulp
leave
insb
in
inc
test
xchg
rorb
shl
fbstp
push
inc
adc
or
jnp
int
jge
je
js
xchg
imul
inc
int
scas
decl
test
dec
popf
pop
ja
rcll
test
cmp
je
sbb
call
stc
mov
mov
insl
push
out
jne
ljmp
out
mov
pusha
mov
mov
pop
cmc
decl
nop
inc
adc
fstl
mov
or
ret
leave
dec
sbb
outsl
ss
aaa
cld
cmp
push
dec
pop
jg
and
cld
inc
aas
pop
jge
mov
enter
push
lods
stos
das
xchg
ljmp
movsb
jb
and
mov
icebp
imul
incl
lret
je
jp
aam
jg
lret
outsl
insl
out
mov
cmp
jg
cmpsb
inc
test
aam
aas
jo
fldcw
out
jmp
sub
hlt
clc
jmp
add
rol
push
stos
out
rcl
push
inc
es
stos
pop
inc
jne
incl
outsl
mov
outsl
ljmp
test
test
fwait
out
adc
incl
ret
jno
push
aad
enter
mov
dec
jno
sti
ljmp
dec
adc
or
jns
add
in
pop
jae
mov
push
cltd
xchg
mov
ljmp
or
idivb
out
pusha
dec
jb
pop
add
sub
pushl
ret
lret
sub
xor
cltd
jp
inc
test
mov
and
ds
popa
cmp
test
incl
sar
xor
dec
mov
out
cmp
sub
ss
ljmp
push
inc
imul
add
mov
int
adc
mov
call
mov
call
addr16
inc
push
les
aas
inc
push
add
jmp
push
jbe
pop
or
ret
repz
jno
decb
and
dec
icebp
jmp
ds
dec
lret
aaa
pop
jbe
lcall
repnz
fistpl
out
xor
leave
stos
das
inc
add
adc
and
add
sub
ret
lret
mov
int
cmp
cmc
call
mov
and
imul
mov
mov
push
jo
ljmp
adc
je
sub
add
jne
add
leave
pop
movsb
insl
leave
pop
jl
and
cmp
insb
sub
sbb
inc
inc
jnp
sub
pop
mov
shll
das
pop
test
lods
pop
inc
insl
add
aaa
cld
ljmp
outsl
or
sbb
ss
mov
xchg
clc
stos
pushl
cmp
mov
and
sbb
in
sub
test
jnp
adc
pushl
add
or
in
into
cmpsb
mov
xor
sti
sbb
add
pusha
imul
es
test
ljmp
jg
or
sahf
sub
cs
or
out
repnz
push
push
mov
mov
pop
ret
mov
mov
adc
out
or
es
xchg
dec
push
mov
fucomp
insl
inc
pop
mov
and
mov
incl
fdivs
mov
xor
add
aas
out
mov
call
inc
xchg
leave
jg
cmpb
orl
dec
adc
jp
shrl
xor
lcall
xor
cmp
das
mov
mov
add
imul
mov
adc
pop
or
sub
push
les
data16
addr16
cld
inc
gs
and
outsl
mov
xchg
cmp
push
sti
sbb
cmp
aas
xor
or
push
cld
loop
cmpsl
aad
jge
push
xor
clc
mov
xlat
je
sub
xchg
and
das
ljmp
cltd
out
inc
push
add
inc
mov
mov
in
lods
sub
mov
shlb
jns
xchg
ljmp
shrb
or
jns
and
or
ret
and
mov
mov
dec
lcall
imul
cmp
std
xlat
mov
dec
xchg
push
movsb
mov
xlat
ljmp
mov
mov
jge
mov
jae
cmpsb
xlat
mov
fdivr
jg
mov
mov
fcmovnbe
gs
and
push
adc
pusha
andl
das
out
imull
jmp
mov
mov
and
xor
jmp
cmp
movsl
pop
sub
add
movsl
ja
jno
cmc
shrb
fsubl
outsl
jmp
mov
mov
sub
push
mov
pop
fadd
pop
cld
js
push
cltd
fdivrs
dec
in
jbe
hlt
dec
test
ret
mov
sub
clc
lds
stc
js
fdivrp
mov
ja
mov
int3
xchg
inc
test
mov
and
pop
sarb
lret
mov
pop
das
pop
ror
or
or
test
les
sbb
mov
mov
in
jb
jg
call
lret
mov
jmp
ds
mov
dec
jns
insb
push
sub
subl
add
ja
inc
dec
popf
stos
dec
dec
sbb
push
push
fisttpll
ljmp
xor
lahf
sarl
dec
fwait
xor
fwait
cmc
movsl
repnz
dec
inc
dec
shll
mov
mov
mov
xlat
pop
xchg
adc
fwait
push
adc
incl
shl
push
mov
cmp
add
jnp
int3
lret
add
adc
decl
jnp
decb
psubusb
std
out
in
imul
mov
enter
clc
ljmp
sbb
dec
pushf
cwtl
dec
dec
add
sbb
push
inc
mov
cld
add
call
rcll
xor
jae
cmp
push
sar
call
mov
and
mov
pop
aam
rcrl
movsl
pop
jb
call
arpl
adc
pushf
fadds
scas
mov
xchg
decl
lahf
lret
lret
out
xor
arpl
popf
xor
jno
or
loop
call
scas
pop
sbb
dec
enter
mov
rclb
scas
jp,pt
mov
add
in
sbb
pushl
clc
sbb
je
int3
sbb
cs
dec
cmp
dec
xor
cmp
imul
scas
sti
xor
or
push
sarb
into
xchg
push
xor
std
inc
shll
push
adcl
cmp
incl
into
push
push
cmp
or
dec
jg
outsl
add
sub
jg
adc
divb
stos
out
dec
add
fwait
xor
ljmp
call
clc
fwait
daa
outsb
or
test
jne
mov
cmpsl
lods
out
cmp
loopne
movsb
push
add
mov
sub
mov
cmpsl
cmp
add
mov
in
scas
pop
pop
and
jg
rolb
sahf
fcompl
mov
test
or
dec
outsl
or
mov
cld
jg
lcall
pop
ror
jns
dec
out
mov
dec
dec
call
lods
ds
pop
pop
sbb
pop
jge
insl
pusha
xor
push
hlt
pop
cmp
xor
insl
and
sbb
push
fmull
mov
lods
jo
xor
int
push
int
xchg
sub
fwait
enter
inc
xor
ljmp
pushl
dec
cmp
mov
cmp
popf
jle
insl
call
ja
addr16
or
dec
shl
in
idiv
pop
cmc
sarl
stc
or
repnz
into
mov
repnz
cwtl
push
push
sub
push
mov
ljmp
sbbl
add
cmp
and
decb
mov
add
push
and
jns
sub
jge
push
xchg
lods
sar
mov
cmp
repz
pop
lds
adc
jge
mov
mov
pop
or
pop
push
dec
insl
std
sbb
test
movsl
lret
sbbl
jl
pop
mov
pop
dec
xorb
dec
iret
inc
in
mov
jno
dec
rorb
cmp
push
gs
xor
sbb
dec
into
mov
int3
dec
jl
mov
leave
ret
pop
cmp
fs
in
cmpsl
out
lcall
inc
xor
inc
ljmp
pushl
adc
test
icebp
mov
mov
pop
scas
cmp
cmp
ljmp
aam
mov
mov
das
and
xchg
out
call
aas
mov
leave
or
nop
clc
call
ror
push
mov
mov
int3
insl
test
push
incl
movsl
bsf
test
test
xor
ret
scas
in
mov
lcall
mov
scas
mov
mov
sti
xor
nop
insl
push
or
std
ljmp
inc
call
fwait
inc
xor
jo
mov
add
pop
lcall
gs
jmp
in
dec
inc
sar
push
add
pushl
nop
fs
xor
sub
xor
mov
push
dec
xor
xor
dec
push
or
cmp
adc
mov
jmp
dec
dec
call
mov
enter
adc
dec
mov
and
push
loop
into
push
xlat
jg
pop
outsb
mov
cmc
inc
xor
mov
inc
testl
cmp
popf
pop
or
jg
les
iret
jmp
and
call
sub
out
enter
sub
pop
or
mov
sarl
sub
add
std
lods
lret
mov
push
sub
cmp
xchg
iret
xchg
sbb
sub
scas
test
mov
and
mov
inc
and
ljmp
sahf
lods
mov
aas
cwtl
mov
jae
sahf
jmp
cli
xor
mov
inc
daa
jae
mov
mov
fistpl
decl
dec
cli
lods
in
jl
pushl
incl
inc
xchg
cmp
mov
sub
or
bound
or
or
sub
clc
mov
data16
adc
movsb
sbb
ficomps
test
ja
or
mov
mov
mov
cmp
inc
or
jge
push
jmp
mov
clc
mov
xor
mov
mov
testb
icebp
lcall
cmp
insb
adc
and
add
test
fdivrl
mov
jne
into
cmp
xor
dec
mov
mov
ret
loop
jae
jl
cli
fldl
fidivl
dec
aas
push
std
xor
ljmp
sahf
mov
pop
xlat
jno
popf
mov
jmp
sbb
das
or
stc
cmpsl
add
stos
pop
nop
ja
push
sub
fidivs
lds
pushl
push
xchg
je
cltd
mov
insl
mov
xchg
popa
mov
adc
mov
mov
fldt
inc
dec
pop
movsl
int
dec
jmp
sahf
jecxz
icebp
ds
pop
xchg
add
ljmp
shlb
popf
xchg
stos
sbb
add
sub
or
sub
ljmp
clc
inc
into
mov
cmp
xchg
in
cmpsl
dec
rolb
fstps
ljmp
in
scas
and
adc
and
hlt
je
cmp
scas
in
cs
jge
rcrl
loopne
and
das
fdivrp
mov
add
add
and
jp
add
sbb
imul
mov
pushl
jns
cli
mov
mull
cwtl
cmp
fwait
sahf
in
ret
pop
jo
jle
in
call
ljmp
jae
push
mov
pop
push
xor
and
stc
dec
lods
push
jecxz
ret
cmp
outsb
mov
divl
fbstp
pop
jne
hlt
pop
adc
and
leave
cltd
cmp
and
xchg
sub
mov
push
mov
les
inc
leave
dec
dec
sub
add
movsb
mov
ffreep
and
stos
pop
or
sub
jp
icebp
or
sbb
cmp
mov
push
outsb
add
lds
div
rcrb
stos
mov
pop
and
icebp
push
out
int3
mov
lret
mov
fdivl
inc
lret
lds
sbb
push
clc
add
add
or
mov
decl
jbe
mov
ljmp
jp
mov
sub
xchg
call
lret
aam
ret
jb
test
pop
cwtl
jbe
sbb
adc
ljmp
decb
xchg
and
add
mov
lret
popa
loope
call
cmp
jge
movsl
cs
gs
arpl
sub
fucomp
sub
inc
cmp
stos
mov
mov
push
xchg
mov
mov
pop
test
sahf
add
aas
scas
adc
lcall
sub
xor
mov
daa
fwait
test
push
cld
jnp
dec
sahf
cmp
sbb
add
mov
cmc
or
mov
shlb
incl
xacquire
push
sbb
and
pop
test
scas
or
dec
fnstenv
sbb
lret
jle
xchg
mov
xchg
jmp
sahf
divb
xchg
lcall
lds
rol
orl
mov
icebp
and
mov
push
stos
add
or
outsl
ds
and
sub
mov
dec
cmpsl
ret
add
jo
jle
pop
call
jge
xlat
sub
lds
sti
adc
adc
setb
ja
shll
inc
sub
sub
andb
sbb
push
pop
xchg
pushl
or
or
mov
ret
xchg
or
sub
or
jg
aam
inc
lcall
test
xchg
cmc
incb
sahf
jl
ljmp
mov
push
jecxz
or
es
std
or
inc
pushf
repz
cmpsb
xchg
in
decl
popf
and
mov
pop
call
jecxz
mov
sbb
sbb
subb
push
out
push
and
jne
decl
mov
and
xchg
mov
movsl
popf
popf
mov
les
mov
pop
stos
fld
xor
jg,pt
xchg
jae
andl
je
jp
fs
rclb
xor
jge
decl
adc
push
std
aam
test
clc
test
incl
or
dec
and
pop
imul
xor
jmp
aaa
mov
inc
mov
loop
mov
mov
xchg
stos
imul
lods
jmp
dec
call
cmp
lcall
xchg
cli
sbb
or
add
adc
setbe
sub
sbb
inc
or
mov
outsb
stc
add
mov
cs
cmp
add
idiv
call
cld
pushl
or
lret
std
mov
fcomi
adc
mov
aad
subl
mov
xchg
fistps
mov
add
ds
cmc
call
test
mov
stos
cmp
xchg
cmp
fisttps
outsl
mov
mov
jecxz
ljmp
stos
loope
ss
or
loopne
or
push
push
cltd
mov
mov
and
jg
imul
cmpsb
setg
fwait
xor
xchg
addr16
aam
orb
jge
jecxz
xor
xchg
add
and
ds
stos
push
xchg
push
mov
faddl
and
call
inc
stos
in
push
or
scas
test
sbb
inc
sti
jnp
mov
or
adc
adc
mov
mov
adc
icebp
mov
pushl
cld
daa
es
jbe
scas
repz
mov
mov
add
pushl
mov
out
insl
adc
sbb
stc
movsl
sub
xchg
xchg
pop
mov
cli
jmp
mov
clc
mov
ja
mov
xchg
out
pop
xchg
adc
hlt
fwait
sti
add
jb
mov
test
sbb
pop
or
cmp
lret
inc
mov
or
mov
ljmp
inc
push
dec
jp
pop
mov
xor
xor
test
cmp
filds
xchg
xor
in
stos
xor
mov
mov
fwait
and
pop
cmc
pop
incl
test
push
sub
or
ja
popa
fs
xor
add
and
test
data16
out
pop
fldl2e
or
push
repz
mov
sbb
sub
add
add
add
mov
lock
xchg
jmp
lods
pushl
mov
or
xor
and
outsb
xchg
mov
decl
fwait
add
cmp
mov
jno
arpl
adc
aaa
cmp
mov
mov
les
ljmp
addb
inc
lock
jg
insb
scas
mov
jmp
bound
pop
mov
mov
push
je
ljmp
leave
inc
xor
adc
sti
sbbb
cld
lds
orl
mov
call
cwtl
cmp
add
outsl
das
add
call
and
test
and
pop
jl
xorl
adc
cs
ud0
call
testb
mov
jmp
sbb
mov
stos
adc
add
out
sbb
jecxz
jge
or
or
repnz
cld
mov
loope
jae
movsb
clc
xor
fwait
cmp
push
in
add
add
lret
mov
mov
jge
xchg
les
push
lahf
sub
outsb
mov
outsb
push
pop
arpl
clc
push
cld
xchg
mov
cld
xchg
pushf
push
mov
xor
cmp
fcmovu
xor
fwait
in
push
rolb
mov
lcall
jg
ss
call
popa
je
mov
sbb
pusha
imul
pushf
mov
call
jmp
lods
bound
jmp
jno
int3
jle
movsb
mov
jns
xor
shrb
push
mov
xchg
and
leave
sbb
icebp
mov
fists
jg
sub
loopne
loope
inc
xor
stc
xor
lcall
xchg
jle
push
or
sbb
and
cmpb
cld
gs
jle
cmp
xor
mov
stc
jle
test
aaa
adc
cld
addr16
frstor
sbb
int
enter
push
incl
mov
sub
mov
jl
fsubrl
push
jge
lret
sub
ljmp
mull
mov
pop
scas
xor
mov
lods
mov
lods
sub
push
std
pushl
adc
cmpsb
mov
cld
add
lods
decl
cmpsl
jnp
sbb
pushl
lods
fstpl
jle
lods
xor
nop
cmp
popf
jl
mov
ljmp
dec
aas
ljmp
lock
es
incl
rcrb
call
mov
add
push
add
imul
in
mov
ds
jb
movsl
add
into
and
jno
es
loopne
sub
aad
incb
fmuls
fcomps
movsl
xchg
sub
jnp
imul
pop
mov
add
scas
outsl
mov
sub
jmp
xlat
hlt
and
dec
lret
stos
int3
push
call
jge
xor
mov
pop
jbe
stos
out
ljmp
clc
ljmp
jo
xor
in
sbbb
push
daa
mov
mov
push
pop
jae
lods
xorb
jl
push
jg
cli
incl
fwait
xor
mov
cwtl
hlt
ja
pop
popa
dec
mov
push
xchg
lods
ja
xor
leave
fs
ret
jp
push
pushf
call
jne
push
fdivs
addr16
jo
hlt
pop
outsl
cltd
adc
xor
xchg
scas
mov
cli
jo
mov
jecxz
stc
and
mov
imul
sbb
cmp
jne
pushf
jo
das
decl
popf
xor
stos
or
xor
into
out
pop
push
sahf
fadds
inc
ja
dec
outsl
mov
decl
pop
push
pop
rcrl
push
sbb
iret
and
outsl
loopne
call
dec
inc
mov
iret
add
pop
pop
iret
notb
dec
data16
and
sub
adcl
dec
movsb
sarl
repz
call
mov
shrb
pop
push
mov
daa
sbb
pop
loopne
decl
jo
dec
push
push
shlb
push
mov
push
mov
mov
mov
in
iret
push
pop
into
ds
or
fbld
push
jbe
dec
xor
rcr
idivb
rorl
fstpl
mov
mov
shlb
pop
dec
cmpsb
scas
popa
iret
sbb
scas
sbb
push
mov
mov
in
xchg
fists
lahf
mov
das
clc
or
rolb
bound
scas
dec
push
xchg
mov
push
xchg
fimuls
sbb
jmp
lahf
sar
mov
iret
sub
and
xchg
bound
push
fisubrl
xor
lahf
arpl
addr16
push
inc
outsl
pop
jecxz
inc
and
jg
aas
and
in
fmull
pop
ss
sahf
dec
es
sahf
jle
pop
bound
sti
incl
inc
pop
dec
jbe
and
sbb
pop
fmul
scas
pop
fimull
jecxz,pt
daa
ljmp
pop
sarb
mov
jecxz
pop
and
lods
mov
lea
out
pushf
into
mov
in
aas
sub
mov
pop
int
xlat
push
arpl
fsub
popa
ss
fnclex
xor
ljmp
scas
popf
jecxz
lock
aas
pop
in
pop
push
fs
cmpsl
push
in
scas
loop
out
jecxz
idiv
lcall
cltd
arpl
scas
cltd
loop
pop
arpl
xchg
sbb
jecxz
xchg
dec
decl
test
cmp
jg
pop
in
push
shlb
lds
push
aas
lcall
outsb
mov
ret
idivb
mov
pop
bound
ret
mov
decl
mov
lahf
cmp
lahf
les
inc
lahf
mov
mov
movups
pmaxsw
xlat
repnz
ljmp
and
xor
push
push
and
iret
jne
enter
push
dec
adc
lods
inc
jne
popf
lret
jmp
mov
lcall
arpl
cmpsb
cmp
test
arpl
or
test
sub
dec
fsubrp
mov
ljmp
mov
inc
int3
inc
jle
push
fdivr
les
hlt
bnd
clc
push
mov
lock
ljmp
movb
xchg
lahf
int
in
outsb
mov
sbb
inc
sbb
xor
imul
enter
sar
cmp
decl
and
fwait
cmp
inc
pop
mov
aas
cltd
insb
push
add
lcall
mov
pop
inc
xchg
out
sbb
sub
lock
pop
push
shlb
add
cs
and
sahf
loope
push
sbb
jmp
rcll
push
and
cmove
nop/reserved
jl
cmc
mov
fwait
dec
push
dec
push
mov
test
cmp
stc
mov
mov
jp
adc
jg
stc
js
lret
outsl
enter
mov
cmc
out
jg
fwait
in
into
pop
and
in
xchg
push
push
repnz
add
mov
mov
test
cmpsb
pop
sahf
inc
daa
nop
pop
mov
mov
ficoms
jle
fs
or
pop
test
adc
lock
xchg
xor
outsb
fwait
jbe
mov
js
fcoml
jo
pop
fstl
hlt
add
pusha
pop
into
outsl
adc
lds
xor
cli
or
mov
daa
and
mov
incl
dec
fidivl
stc
mov
mov
fsubrs
jge
inc
dec
loope
call
call
jns
sub
lods
clc
push
push
out
mov
aad
decl
mov
jmp
rcr
inc
lret
xchg
xchg
andb
mov
adc
jmp
sub
ja
pop
fnsave
add
fiadds
test
push
fsubrs
jns
xchg
fildl
xor
in
cmpsl
in
popa
insl
dec
dec
icebp
cmpsb
ret
incl
pop
incl
adc
mov
repz
fs
dec
sti
cmp
aad
jecxz
or
xor
or
decl
mov
and
stc
fildl
iret
adc
lret
lods
cmp
in
aas
into
rcl
push
add
pop
mov
fnstcw
imul
mov
idivb
xlat
lcall
pop
shl
pop
inc
cmpsb
pop
rcrl
fnstcw
std
jg
inc
insl
xchg
popf
inc
data16
pop
shr
pop
inc
cs
rol
decl
rcrl
lcall
lahf
pop
ljmp
inc
pop
mov
add
outsl
sbb
int
jg
aas
fnstcw
cmp
inc
pop
jg
lcall
insb
outsl
sbb
fdivr
aas
fstps
pushf
mov
int3
pop
cwtl
shlb
aas
cmpsb
cs
mov
xor
pop
mov
xlat
mov
dec
call
pop
lcall
pop
shl
or
fs
sbb
pop
cmp
fists
in
jge
dec
pop
out
lcall
cwtl
jge
inc
add
sbb
fnstsw
lods
mov
pop
xlat
xchg
inc
ss
cltd
mov
sbb
sbb
pop
mov
cltd
std
cld
mov
scas
cltd
mov
test
jg
inc
sbb
ss
pushf
js
fstpt
mov
dec
mov
push
mov
outsb
jg
mov
adc
sbbb
fstpt
push
outsl
pushf
mov
outsl
push
mov
pop
lock
cmp
jg
pop
fildll
mov
or
mov
sub
mov
pop
outsl
mov
sub
sbb
out
fidivrl
je
popf
incb
cmp
ds
mov
xor
sbb
fnsave
idiv
das
fisubrs
fwait
mov
outsb
lcall
fsubrp
std
inc
ds
add
mov
out
jg
das
xchg
movb
cmp
out
cld
dec
fists
mov
push
xlat
adc
out
fidivrl
fmull
dec
jg
push
inc
mov
stc
sbb
pushl
push
cmp
scas
pop
mov
les
cltd
cmp
lcall
sahf
pop
mov
scas
xchg
sbb
cmp
mov
inc
and
jg
mov
push
call
inc
es
cmp
mov
jl
aam
jbe
mov
cmp
jg
mov
mov
push
pop
cmp
out
mov
clc
decl
mov
mov
xchg
mov
or
xchg
mov
sub
fisubrl
cmp
mov
mov
test
jg
ret
push
xchg
pop
push
push
cmp
pop
mov
aaa
ds
and
sbb
sar
ss
call
mov
mov
cwtl
popw
pop
jo
decl
je
lret
int
sbb
pop
fmul
fimull
sub
adcb
push
outsl
jne
int3
dec
pop
outsl
cs
sbb
outsb
aad
or
fists
gs
pop
jo
inc
add
add
sbb
vpshuflw
or
xchg
outsl
jge
xchg
sti
pushl
dec
jne
push
outsl
mov
jg
xchg
sti
jle
lahf
fldcw
xchg
lcall
outsl
xchg
outsl
insl
ret
cld
lods
cmp
xchg
outsl
std
ds
or
loop
pushf
jg
jg
jle
jo
addr16
in
outsl
push
outsl
dec
inc
adc
lock
ljmp
lods
in
pop
fsubrs
push
fdivr
das
cltd
jo
sarb
jno
inc
push
jno
push
sbb
push
cld
jo
dec
stos
lods
mov
jno
pop
push
mov
filds
cs
outsb
fiadds
pop
outsb
sub
loopne
add
pop
xlat
outsb
push
jl
pop
scas
xlat
jo
mov
scas
out
mov
pop
jb
jb
call
loop
int
adc
jb
stos
dec
mov
aaa
dec
mov
orl
idiv
jle
scas
mov
scas
sbb
mov
sbb
mov
or
or
adc
in
int3
scas
insl
mov
scas
mov
jg
dec
scas
mov
dec
data16
mov
sti
or
cmc
test
mov
mov
mov
test
call
sqrtps
sahf
daa
or
cmp
and
ljmp
in
mov
das
push
scas
or
pop
adc
int
sub
lret
icebp
decl
daa
sbb
das
aad
push
inc
push
push
std
sbb
sbb
pop
pop
jno
pop
jno
std
pop
rorb
jb
das
fnstenv
pop
aam
xor
jno
mov
outsb
pop
test
notb
fstp
pop
scas
mov
scas
inc
and
push
decl
and
xor
out
xchg
aad
insl
pop
mov
je
cwtl
xorl
out
clc
lcall
sub
sbb
jp
add
fwait
xchg
jae
fwait
rcll
push
jnp
sarb
sub
jne
sbb
sub
adc
repz
outsb
fcmovnbe
xor
repz
inc
inc
icebp
push
jl
mov
dec
aas
mov
in
jg
je
xlat
filds
xchg
jmp
ja
outsl
jecxz
in
push
push
insl
mov
pop
pop
mov
ja
add
and
push
int3
inc
cmpsl
jp
push
inc
bound
call
inc
push
addr16
sub
jns
xor
mov
repz
loopne
fninit
fwait
stos
xchg
xlat
aad
push
call
popf
jae
pop
out
pop
pop
pop
jae,pt
lcall
ss
and
push
lods
call
pushl
and
ja
shr
mov
ret
test
inc
mov
in
mov
data16
call
mov
cmp
add
movb
es
mov
inc
gs
popa
call
shll
addr16
xchg
out
lods
fwait
in
adc
cmpsb
cmpsl
je
test
les
insl
dec
fs
call
rcll
in
sti
and
mov
daa
pop
mov
ret
cmp
mov
inc
mov
jecxz
fs
add
xchg
pop
out
incb
call
and
dec
out
mov
and
mov
in
inc
mov
xor
bound
inc
xchg
dec
mov
gs
inc
adc
test
sbb
jmp
mov
jecxz
lds
mov
in
jnp
cmc
mov
ja
fildll
and
loope
jg
ljmp
adc
je
into
adcl
xchg
cmp
sbb
mov
mov
ffreep
pop
mov
jecxz
cmp
add
add
popa
or
xor
mov
sub
fists
rcrb
jno
mov
fwait
arpl
mov
dec
clc
call
rorl
shrl
adc
mov
add
fstpt
ret
pop
sub
lret
sbb
pusha
mov
fstl
xchg
jnp
adc
lock
mov
popf
xchg
movsb
inc
or
aaa
and
int
or
fmul
call
jbe
popf
repz
jg
sub
test
pop
nop
jae
sbb
push
call
xchg
ss
push
push
cmc
pop
bound
daa
arpl
mov
ja
or
je
andb
andb
lcall
lahf
in
sbb
mov
or
test
jecxz
call
sub
fdivs
fstpl
pusha
mov
xchg
sahf
decl
lock
mov
cs
lods
sbb
xor
jae
jne
xchg
push
xor
clc
ljmp
cmpsl
js
mov
xchg
jl
add
jmp
push
test
cld
out
frstor
into
fisttps
lahf
mov
mov
shr
fstpl
cwtl
jg
movsl
push
jns
fisttps
cli
xchg
sahf
xchg
push
push
mov
and
scas
pop
push
mov
pushl
pop
and
cmp
lock
fsubl
cmp
mov
push
xchg
pushf
pop
ljmp
pop
pop
into
xlat
fwait
scas
leave
fsubs
lods
cltd
decb
lcall
rcrb
out
inc
push
gs
sbb
call
flds
cmp
fisubrl
lods
inc
xchg
lcall
push
ret
call
bound
adc
cs
call
push
insl
xlat
xor
mov
xchg
lret
push
add
iret
push
jnp
ret
adc
lds
incl
push
inc
fldcw
lods
dec
pop
inc
adc
imul
inc
mov
repz
jmp
push
sbb
xchg
cli
fidivrl
pop
mov
lret
pop
sti
pop
iret
pop
dec
dec
ja
cli
pushl
adc
lret
fimuls
mov
jmp
cli
and
mov
mov
sbb
lcall
adcb
nop
aam
clc
fcoml
xor
xchg
jo
arpl
pop
or
aam
iret
aad
jecxz
ljmp
inc
and
pushl
out
sub
push
mov
in
adc
loopne
scas
xor
pop
ss
xor
dec
pushl
adc
out
and
mov
rcr
pop
inc
jecxz
mov
sub
lcall
mov
adc
repz
mov
enter
das
popa
faddl
mov
popf
in
or
jmp
movsl
pop
lods
and
sbb
aam
adc
pop
jnp
adc
sbb
xor
xchg
gs
push
cltd
pusha
js
adc
fcomip
pushl
cmpl
movsb
movsb
cmp
popf
xchg
hlt
repz
adc
outsb
jmp
and
cli
push
mov
fisubl
cmp
mov
popa
sbbb
clc
leave
pop
pushl
pop
dec
sbb
sti
mov
fucomi
mov
push
pushf
movsl
push
ljmp
jmp
mov
or
mov
imul
out
sbbl
ret
add
mov
ja
pop
mov
push
mov
das
outsl
cmp
and
inc
xor
and
push
dec
jmp
push
fisttps
pop
sub
pop
adc
xchg
xchg
in
mov
pushl
adc
imul
or
push
rcll
xor
cld
lods
hlt
xchg
dec
sub
adc
clc
push
ljmp
test
pop
xchg
loope
dec
cmp
out
inc
fwait
jmp
stos
dec
pop
mov
cmp
jg
ja
pop
sbb
iret
xchg
cs
fcomp
adc
xchg
fnstsw
call
ds
xchg
push
out
push
xorl
pop
jb
notb
shlb
jno
ljmp
and
ljmp
xchg
outsl
mov
cmp
and
outsl
wrmsr
jbe
dec
cmp
fldl
in
ss
les
xchg
popf
insb
adc
pop
orb
jmp
incl
mov
shrl
out
pop
jl
testl
sarb
pop
sbb
mov
das
sbb
iret
test
icebp
aas
imul
mov
js
sar
lcall
jmp
mov
pop
pop
push
fstps
xchg
xchg
jge
pushf
sbb
sbb
call
cmc
popf
push
cmpsb
lods
pop
push
lret
push
das
sbb
push
sub
or
add
cmp
mov
xchg
ja
jnp
xchg
jl
push
mov
dec
push
xor
sbb
fwait
in
pop
adc
ret
xor
call
mov
ret
or
lods
pop
mov
and
sub
filds
xor
inc
jns
xchg
push
mov
push
push
fidivl
jne
xchg
call
cmc
pushl
xchg
int3
xor
das
call
push
sbb
push
cmpsb
out
pop
sbb
jmp
ss
int
es
shll
xchg
loopne
xor
lock
call
push
sub
sbb
loop
xchg
mov
lret
lahf
loopne
incl
fmull
or
sbb
ljmp
push
add
ss
int
lahf
and
pop
sahf
aam
ljmp
adc
adc
or
fldcw
mov
xchg
sbb
incl
bound
pop
mov
das
arpl
mov
xor
out
adc
mov
xchg
out
jp
xchg
test
int3
xchg
fwait
aas
fisttps
mov
push
mov
mov
cmp
xlat
pop
bound
cwtl
out
rcrb
test
push
outsl
out
stc
pop
add
lcall
or
ret
cmpsl
lret
pxor
push
push
in
scas
dec
add
ljmp
adc
iret
mov
add
sahf
iret
or
mov
and
jg
pop
push
and
outsl
dec
xor
pop
cmp
adc
iret
cld
fbstp
insb
xchg
pop
mov
xchg
dec
out
push
jo
pusha
jnp
dec
cmpsb
mov
or
or
in
mov
scas
into
xchg
lahf
iret
nop
lahf
out
lahf
nop
mov
ljmp
jg
rcrl
pop
or
mov
out
nop
xchg
xchg
dec
scas
cmpsl
dec
jno
dec
jb
xchg
push
jnp
cmpsl
punpckhwd
jbe
xchg
out
push
jbe
mov
testb
mov
shlb
test
sbb
call
sbb
pop
shl
gs
xchg
enter
incb
dec
xlat
inc
xlat
dec
add
adc
bswap
mov
clc
push
and
shlb
outsl
call
dec
fstps
cmp
adc
jge
neg
stc
aad
cmp
lcall
mov
sub
sbb
dec
stc
cmp
pop
sub
add
or
decb
lahf
in
cmp
pop
cmp
sub
xchg
cmp
dec
jl
sbb
in
in
pop
cmp
jmp
ja
cli
ljmp
js
out
pop
pop
jnp
enter
or
in
lcall
inc
stos
adc
cmpsl
jmp
xlat
push
mov
cltd
out
xor
insb
cmp
decl
adc
outsl
lods
xlat
mov
ljmp
ss
mov
addr16
mov
std
call
sbb
sub
adc
mov
aad
jnp
into
inc
imul
xchg
fwait
inc
xlat
pushl
mov
popa
sbb
repnz
fcompl
mov
cmp
sarb
jmp
mov
mov
sbb
lds
decl
shll
push
xchg
mov
loop
lcall
dec
mov
mov
fcom
jmp
cmpsb
iret
sub
clc
and
push
shlb
mul
sysret
es
ljmp
rcll
jb
xchg
cld
pop
sub
mov
js
adc
jg
push
mov
mov
dec
xchg
push
movsl
inc
push
div
loopne
jnp
lods
adc
mov
xor
movups
sarl
xchg
xchg
lret
mov
and
dec
bswap
imul
decl
mov
push
enter
aad
mov
ss
pop
neg
or
incl
setnp
xor
je
mov
stos
ljmp
inc
lahf
adc
push
mov
scas
mov
rorl
cmp
andb
ljmp
ljmp
adc
push
enter
cmpsb
add
insl
rcrl
cmp
lcall
jmp
xchg
xorl
inc
movsl
xchg
sub
push
jmp
stos
adc
ret
push
sar
adc
jp
iret
bound
mov
stos
pushl
ja
imul
sub
push
movb
mov
fiaddl
loop
call
repnz
xchg
cmp
call
dec
cmpl
or
cwtl
dec
or
mov
enter
icebp
incl
pop
mov
jle
dec
out
out
dec
cs
rorl
outsb
call
std
ffreep
push
je
popf
out
dec
int3
lods
test
mov
mov
fdivrp
fiadds
out
dec
pop
add
mov
jae,pt
popf
test
lcall
jle
lret
out
sti
push
sbb
sbb
aaa
ja
sar
aam
add
aad
addr16
int
scas
cli
incl
push
cmp
dec
je
adc
repz
adc
pop
pushl
sbb
jo
fisttps
cli
aad
aam
insb
unpckhps
adc
adc
popa
cli
cmc
rolb
sarb
mov
imul
push
and
or
mov
incl
int
aas
pop
lea
xor
pop
outsb
icebp
dec
jo
lods
inc
into
movsl
jp
ljmp
mov
mov
in
aam
inc
lret
mov
pop
lds
pop
jmp
sub
push
adc
aad
or
xlat
pop
fs
lcall
push
ret
ret
mov
pushl
and
icebp
jb
pop
add
add
or
mov
dec
shlb
call
inc
fcoml
cmp
sbb
dec
iret
jge
jo
out
inc
mov
shrb
call
cmp
or
sbb
or
pop
dec
out
cmp
popw
dec
cld
scas
push
xchg
sub
fwait
jle
sbb
cmp
fs
lock
sbb
lret
jecxz
aam
pusha
dec
shrl
ds
push
in
push
and
incl
dec
lods
lods
ficoms
iret
push
insb
adc
inc
insl
shll
and
adc
aad
push
lea
insb
sub
inc
arpl
dec
loopne
add
sub
mov
jg
xchg
imul
ja
enter
mov
cs
mov
mull
jmp
cs
mov
mov
inc
std
sbb
jmp
cld
out
xchg
lcall
xchg
mov
pop
add
call
imul
mov
sbb
adc
sbb
mov
pop
rcl
xchg
leave
xchg
xorl
in
mov
incl
push
pop
sub
or
or
jbe
dec
adc
int
mov
push
je
jmp
cmpsb
push
adc
in
js
ja
fmul
dec
test
mov
xchg
mov
lcall
scas
pop
or
out
fmull
shll
je
lret
test
dec
adc
fistpll
pop
lds
mov
cld
mov
out
les
aam
jg
ja
sbb
inc
test
int
pop
dec
mov
cmp
sbb
lods
xor
xor
incl
mov
xor
cwtl
dec
test
stos
pop
icebp
ds
in
cld
cmc
adc
lds
addr16
push
push
push
inc
xchg
mov
xchg
cwtl
test
movsl
pop
jbe
je
lods
mov
fwait
dec
je
xchg
int3
jg
inc
rcrl
pop
repz
movsb
jp
push
aas
dec
mov
adc
fwait
jg
push
mov
jp
dec
out
push
rorl
push
mov
aaa
adc
lcall
add
daa
inc
xchg
sarb
aaa
dec
mov
jg
xchg
call
adc
pushf
dec
sbb
lahf
fldenv
in
mov
adc
dec
or
insb
sbb
call
push
ror
or
das
lret
out
lcall
aad
sbb
sub
dec
imul
or
xor
into
xchg
test
incl
cld
mov
add
ret
daa
push
xchg
daa
addr16
or
push
movsb
decl
punpcklbw
or
push
inc
push
bswap
movl
xchg
mov
sbb
jmp
ss
add
xlat
flds
lcall
leave
stos
std
jb
xor
cs
ds
out
lea
adc
jg
movsl
call
not
and
aam
inc
xor
aas
int
pop
add
lcall
push
pop
lods
adc
ficoml
hlt
fsubrl
imul
and
iret
inc
fcoms
fwait
jmp
rorl
lahf
adc
fs
insb
fcomps
mov
xchg
pop
rorl
nop
cmpsb
jmp
popf
out
mov
lcall
ret
xchg
stc
iret
mov
stc
jp
hlt
pop
add
pop
push
adcb
call
pop
and
shlb
inc
xchg
xchg
testb
xchg
add
adc
jmp
call
out
dec
lahf
dec
movsl
lfs
xor
xchg
scas
ja
cmc
lea
lret
sub
mov
mov
aaa
std
push
xor
add
insb
sbb
dec
and
int
je
into
pushl
and
mov
xchg
dec
mov
adc
sbb
or
rclb
add
pop
enter
aas
or
jg
dec
dec
out
inc
jb
cmp
scas
sbb
xlat
inc
std
and
mov
mov
inc
sbbl
jo
call
and
aad
rcl
nop
pusha
fsubs
xor
cmp
fidivs
dec
mov
cld
sub
ljmp
or
push
outsb
mov
adc
adc
rclb
pop
dec
lret
imul
dec
sbb
or
lods
fistps
mov
xor
daa
iret
dec
jge
nop
xchg
fldl
imul
dec
push
sti
in
xchg
mov
pop
leave
adc
lret
outsl
inc
nop
mov
xchg
push
call
and
inc
adc
push
movsl
repnz
mov
dec
jp
sub
notl
or
outsl
adc
mov
or
push
mov
jb
mov
movsb
rolb
scas
inc
pusha
inc
insb
dec
lret
xlat
adc
adc
out
hlt
mov
dec
out
les
sub
into
outsb
out
inc
lcall
mov
imulb
add
insl
iret
les
fcomip
call
sub
add
push
cmp
pop
sbb
orb
inc
sar
mov
loop
imul
mov
repnz
nop
jb
ficoml
mov
nop
cmp
lret
pop
xor
iret
addl
mov
ljmp
lcall
icebp
mov
pop
inc
outsl
cli
ljmp
rorb
jecxz
dec
into
add
sub
inc
cmpsl
jae
jle
mov
mov
dec
xorb
dec
sub
dec
lds
or
jl
lret
out
lret
pushl
dec
ret
loop
popf
adcl
je
inc
imul
pop
or
xor
ret
add
sbb
hlt
das
add
call
into
xchg
dec
jecxz
cmp
cmp
or
ljmp
loopne
add
andb
cld
cmp
dec
mov
jno
jne
pop
inc
ljmp
aaa
sbb
das
in
outsl
out
cmp
out
int
jle
orb
fbstp
pushl
jne
aad
xchg
into
pop
cmp
in
xchg
movsb
cmc
push
mov
test
adc
sti
cmp
sub
sbb
lds
push
imul
clc
adc
pop
icebp
call
mov
shrb
popf
xchg
loop
arpl
mov
xor
je
sbb
lahf
pushl
jle
stos
iret
xchg
addr16
push
mov
imul
mov
jl
cmp
cmpsb
pop
pop
mov
std
aaa
mov
stos
das
mov
out
lcall
fdivs
lods
pop
xor
lods
stos
int3
push
inc
jno
cmpb
mov
je
dec
movsb
mov
lcall
or
xchg
sti
or
in
int3
mov
int3
les
sub
test
in
inc
lods
mov
std
decl
or
dec
ljmp
xor
lret
loopne
fnstcw
xchg
jle
mov
jb
inc
lcall
or
pop
or
fists
xchg
popa
jns
jmp
pusha
mov
aas
daa
andl
inc
aas
and
lahf
hlt
inc
xchg
fiaddl
jmp
inc
xchg
add
scas
jp
aam
xchg
roll
arpl
cld
dec
add
push
mov
jg
mov
xchg
call
pop
mov
jo
mov
inc
in
xchg
lock
cld
decl
imul
arpl
add
adc
add
pusha
xor
js
cmpsl
es
clc
decl
notb
mov
or
inc
decl
cwtl
or
xchg
shlb
idiv
pushl
add
fisttpll
xchg
dec
mov
inc
mov
cmp
insl
inc
scas
std
cs
mov
pushl
xchg
adc
dec
dec
arpl
dec
mov
push
pop
xor
shll
xchg
decl
xchg
mov
xchg
mov
fnstcw
jmp
orb
js
or
cmp
decl
cmp
and
jg
add
pop
dec
push
dec
je
pop
adc
testl
stos
nop
ret
xlat
cwtl
lods
das
xchg
enter
loop
js
mov
idiv
lcall
jo
leave
fnstenv
push
mov
andb
divl
dec
adc
dec
sub
sbb
pop
xor
lds
out
ror
arpl
das
sar
mov
push
out
cwtl
dec
pop
mov
dec
push
addr16
repnz
jl
clc
jmp
xchg
es
mov
xchg
mov
sub
outsl
cmp
cmp
ljmp
negb
pop
add
icebp
lret
add
inc
mov
dec
adc
mov
jle
add
push
addb
push
xchg
dec
cmpsb
fs
call
in
jbe
push
mov
cmpl
cmp
mov
sar
or
repz
scas
lock
push
in
shll
cwtl
dec
icebp
mov
lods
inc
cmp
flds
sub
ret
les
mov
out
clc
push
jle
inc
add
lahf
loope
lcall
jo
test
add
or
jne
lcall
cmp
push
lds
adc
sub
roll
ret
loope
push
mov
decl
fs
mov
rolb
decb
adc
fimull
imul
add
pushl
insl
and
cmp
test
inc
jmp
insl
mov
jp
call
leave
and
scas
cli
cmpb
mov
insb
lret
incl
lahf
cmp
stos
loop
out
jecxz
pop
popa
push
rcrl
sbbl
dec
cmp
mov
mov
pop
rcll
inc
cmpsl
cs
mov
scas
push
addr16
cmp
ds
mov
iret
insl
addb
add
pop
xchg
push
mov
cmp
aaa
call
or
incl
loope
pushf
push
or
enter
int3
inc
and
lahf
cs
inc
test
decl
mov
pop
push
add
test
mov
inc
adc
mov
out
incl
jecxz
add
mov
add
jns
vpunpcklbw
shlb
loopne,pt
cmpl
jg
xor
add
push
daa
bound
movsb
xchg
mov
jg
cmc
push
sti
dec
and
lods
dec
mov
push
mov
outsl
xchg
cmp
movl
jmp
fisubrl
dec
cmp
sub
jecxz
hlt
or
enter
adc
movsl
jg
test
scas
lcall
inc
std
dec
mov
out
test
sub
outsl
int
inc
push
inc
xor
ss
arpl
xchg
rolb
inc
xlat
inc
cltd
jb
push
mov
lcall
mov
es
test
ret
test
mov
ds
push
mov
arpl
adc
das
mov
or
stos
pusha
loope
dec
sbb
pop
sti
inc
or
xor
add
mov
push
adc
lret
test
scas
jo
dec
fildl
inc
xor
call
jmp
add
xorl
test
aaa
fildl
lahf
decl
sub
inc
jp
and
sub
push
lds
and
mov
jnp
jg
mov
test
fcmove
ljmp
popa
cmp
mov
sbb
inc
mov
leave
js
inc
adc
aas
sti
xchg
jg
mov
inc
mov
addl
inc
es
cs
nop
rorl
lods
mov
ljmp
leave
mov
les
dec
idivb
cli
imul
dec
fs
dec
mov
fcomip
cmp
xchg
leave
aam
push
mov
mov
ret
cmp
leave
push
or
fimull
adc
jle
jp
int3
inc
mov
rorb
mov
nop
inc
mov
clc
or
adc
xor
jg
sbb
add
dec
lods
popl
jge
jno
jg
call
mov
mov
ret
add
mov
outsb
stc
inc
incl
cmpsl
dec
ljmp
data16
imul
xor
jne
decl
dec
and
sbb
test
or
add
into
aam
mov
inc
in
dec
mov
decl
push
adc
dec
jno
adc
push
cmp
xorl
cmp
int
xchg
mov
ja
aaa
aaa
je
mov
mov
lds
mov
cmp
orb
adc
jae
mov
xchg
cld
scas
cli
mov
int
arpl
mov
loope
lods
jp
sbb
sarb
test
repnz
call
out
pop
dec
test
cmp
xchg
cli
sub
dec
test
clc
filds
mov
add
xchg
aaa
dec
pop
cld
ljmp
mov
ret
aad
lea
dec
insb
in
inc
aas
inc
fidivrs
dec
add
jg
testl
outsl
mov
std
inc
dec
add
dec
fadd
scas
or
aam
scas
inc
cmpsl
lret
clc
jg
lods
adc
inc
test
dec
or
dec
les
jno
cmp
pushl
inc
xchg
or
repz
enter
lret
mov
mov
xchg
adc
inc
dec
repnz
ljmp
or
call
shll
out
cmp
xor
mov
or
lods
mov
int3
sbb
adc
push
fistpl
dec
jns
in
xchg
rolb
xor
roll
push
jecxz
jle
mov
push
incl
push
divl
aas
mov
add
arpl
mov
clc
jae
test
push
arpl
shlb
incl
enter
mov
adc
lret
std
add
inc
pushf
mov
pop
sub
push
test
dec
adc
sti
xor
cld
add
pushl
roll
mov
test
test
pop
sarl
cmp
mov
adc
add
or
leave
jge
jmp
test
popa
pushf
inc
outsl
enter
fildll
jo
movl
call
mov
cmp
inc
push
aad
cmp
stos
imul
sar
pushl
clc
jle
jge
dec
xlat
jle
lahf
ljmp
jns
pusha
xor
push
lret
dec
push
ffreep
jle
mov
sahf
dec
ja
decl
mov
jb
or
cli
inc
or
jp
mov
lret
jne
call
xchg
jmp
andl
ja
push
push
lods
inc
xor
roll
jmp
jmp
lret
decl
inc
xor
test
pop
mov
xor
rcrl
mov
or
xchg
ljmp
jmp
les
cltd
imul
dec
lea
dec
mov
shrl
incl
inc
stos
add
xlat
mov
lds
shlb
loopne
fists
repz
mov
aas
lods
aas
roll
xchg
add
sub
and
dec
das
jge
aaa
cld
sbb
dec
inc
xchg
jbe
test
inc
les
call
into
lret
add
mov
mov
mov
sbb
aas
add
pop
in
push
sub
aaa
inc
cmp
and
or
push
inc
call
sbb
cmpsb
add
jg
mov
mov
decl
xchg
jge
std
scas
ss
xor
into
scas
testl
jg
xorb
jnp
and
idiv
aaa
fldt
aaa
xorl
std
push
mov
sbbb
mov
and
outsl
xor
jle
aas
add
push
idivb
pop
mov
ss
jl
insl
daa
cmp
jg
inc
aaa
xor
hlt
std
neg
in
jg
pop
inc
jle
mov
jge
js
daa
jl
das
cmp
pop
std
lods
push
pop
mov
push
jge
pop
cmc
ss
mov
popw
mov
pop
out
push
icebp
mov
dec
out
cmp
pop
cmp
dec
inc
xlat
mov
testl
dec
jbe
std
jmp
jns
ss
jp
cs
cmp
mov
std
dec
mov
hlt
xchg
inc
fisubs
push
data16
ja
ds
xchg
fdivrp
fistpl
dec
jle
mov
cmpsl
mov
push
mov
aaa
dec
mov
inc
out
sti
dec
sahf
outsl
repz
std
ljmp
mov
outsl
js
push
xchg
jg
push
cmp
pop
inc
push
push
stc
dec
imulb
sti
push
es
outsb
mov
dec
inc
jne
ds
push
mov
aas
sti
aaa
dec
out
pop
cmp
ds
stc
cs
mov
mov
jne,pt
jbe
push
ficomps
aaa
adc
icebp
push
outsb
pop
cmp
cli
dec
daa
mov
mov
pushl
pop
inc
push
pop
cmp
pop
aaa
leave
in
out
testl
push
pop
fsubrs
ds
jnp
out
neg
je
xlat
ss
mov
ss
out
clc
push
push
mov
mov
jp
push
fidivs
xlat
xor
mov
push
push
cmpsl
testl
mov
dec
scas
ds
pop
icebp
ljmp
mov
xor
cmpsl
xor
push
in
or
jg
cs
cmpsb
popa
inc
or
xchg
jl
scas
loopne
sub
xor
xchg
dec
sahf
jg
xor
mov
scas
pop
jns
mov
addr16
inc
dec
xor
mov
sub
inc
idivb
xor
pop
mov
xchg
test
dec
outsb
daa
cmp
xor
ljmp
sub
jbe
testb
dec
mov
scas
pop
jbe
ds
ja
idiv
lock
cmp
push
cmp
pop
xor
das
push
pop
divb
data16
cli
pop
add
jne
jle
jns
out
cmp
scas
clc
push
sahf
pop
cmp
fdivrp
hlt
xor
decb
fbstp
xor
out
je
clc
int
xor
js
cmp
out
aaa
xor
stc
das
push
xlat
in
fstpt
xor
scas
mov
cmpsb
js
scas
push
fildl
es
clc
negb
add
xor
mov
cmpsl
jle
mov
js
ss
jg
dec
xchg
cli
xor
filds
xchg
icebp
xor
outsl
mov
out
addr16
mov
xchg
xchg
ss
sub
imul
xchg
fidivrs
adc
push
outsl
jbe
push
inc
je
aas
xor
xor
mull
subb
mov
out
cs
inc
ds
sub
ds
cmp
xor
jg
dec
rorl
das
out
into
mov
mov
sahf
pop
jae
js
clc
out
pushl
xor
pop
cmpsb
push
sahf
mov
cs
xor
out
inc
pop
mov
xlat
loopne
adc
jbe
xor
test
loope
mov
out
mov
mov
mov
fcmovnbe
jno
fbstp
xor
fisubrs
lods
repnz
xchg
out
mov
or
xchg
jns
push
sahf
jb
cs
xor
xor
ds
cmc
mov
mov
dec
jg
das
js,pn
inc
stos
push
xor
pusha
adc
fdivs
xchg
jg
push
data16
dec
mov
mov
pop
push
outsb
xor
incb
dec
das
out
inc
repnz
push
mov
push
cmpsb
das
cmp
daa
xor
das
lods
loop
test
incb
push
mov
push
xchg
daa
add
push
jne
inc
ss
cmp
xor
pop
icebp
jne
mov
es
mov
stos
loop
jbe
je
pop
mov
xchg
fldcw
pop
mov
repz
mov
mov
sbb
push
jne
xor
push
stos
mov
imull
out
push
aad
sub
pushl
push
in
jbe
cmpsl
into
aaa
push
cmp
xor
das
inc
mov
insl
sar
call
jb
inc
cmpsb
jae
into
scas
aaa
push
cmp
jg
mov
notl
lahf
bnd
mov
popf
mov
jo
jb
into
jbe
adc
loop
fstpl
stos
add
lock
pop
and
outsl
jne
dec
inc
xor
aas
sbb
stc
cs
mov
das
scas
push
lods
daa
out
das
je
gs
jae
xchg
aas
inc
std
outsb
aaa
add
cmc
push
incb
es
push
add
jo
pop
push
jb
lods
pushl
pop
inc
ds
xchg
push
and
ds
sbb
out
push
mov
push
pop
jno
cmp
xlat
in
add
xor
mov
xor
out
pop
push
mov
or
mov
pop
push
fbstp
push
cmc
xlat
add
lock
mov
into
mov
lcall
mov
jno
mov
xchg
cmpsl
hlt
push
push
scas
mov
imulb
dec
xchg
cmpsb
xchg
js
mov
xor
jbe,pt
test
sub
into
mov
xchg
inc
jg
pop
jge
xchg
aaa
pop
xor
mov
aaa
xor
ds
inc
dec
pop
sub
push
push
out
pop
ja
inc
cmp
das
push
in
daa
out
push
repnz
test
ds
popf
pop
pop
pusha
aaa
sahf
pop
jne
into
pop
mov
inc
push
adc
mov
ds
mov
movsl
push
push
adc
push
jne
in
jbe
fucomp
xor
mov
lock
or
out
push
xchg
in
xlat
mov
imul
push
pop
push
push
xor
mov
push
in
in
push
push
call
sub
push
mov
xor
scas
jb
fnstsw
xchg
sbb
hlt
xchg
lcall
ss
scas
je
add
cmpsl
into
mov
cs
fistl
mov
sahf
scas
push
gs
scas
push
sbb
je
incl
sbb
mov
push
jge
hlt
push
pop
sbb
mov
push
incl
xchg
push
gs
xor
or
aas
repz
adc
push
mov
mov
lods
push
push
sub
daa
outsl
push
outsb
das
jo
in
xor
push
insb
shll
push
std
ficoml
ds
sub
das
jb
sbb
incl
add
push
sar
sbb
mov
popf
out
mov
out
outsb
push
aad
add
push
mov
lea
stos
sub
sub
push
mov
cmc
push
jo
push
sub
dec
xchg
mov
push
lock
lods
clc
push
jne
repnz
lock
mov
cmpsb
adc
jle
push
add
push
out
xchg
dec
lods
mov
jg
test
mov
pop
xchg
int
insl
xchg
push
and
dec
mov
jne
xchg
stos
jg
jle
push
std
push
outsb
push
cs
push
xor
outsl
icebp
mov
shll
mov
in
inc
mov
mov
inc
and
gs
ss
mov
push
and
aaa
sub
daa
icebp
push
scas
das
mov
mov
mov
sbb
clc
mov
xor
das
sub
daa
inc
pop
push
icebp
pop
decb
jge
scas
push
int
push
out
jno
cmpsb
pop
jae
push
push
cld
inc
popw
xor
pop
mov
out
out
ds
mov
scas
ds
jb
pop
fidivs
push
xor
mov
xor
aaa
out
out
ds
dec
adc
xlat
scas
cmp
or
xlat
jo
mov
call
adc
add
xchg
xchg
or
scas
dec
push
jb
jo,pn
cmpsl
fcmovnu
punpcklbw
xrelease
dec
xchg
ds
pop
ds
xchg
outsl
push
incb
push
fcomps
xor
aaa
outsl
mov
xchg
repz
decb
ret
aas
xchg
dec
sbb
outsl
cmp
pop
sub
repnz
jns
loop
hlt
mov
decb
das
insl
push
push
lcall
dec
mov
push
pop
jge
repnz
ficomps
mov
insl
pop
or
shrl
insl
dec
outsb
dec
subb
fldl
sahf
sub
dec
push
data16
push
decb
mov
stos
dec
insl
push
xor
push
cmpsb
sbb
test
lock
data16
push
jne
gs
clc
mov
xor
dec
decb
incb
das
dec
out
dec
out
push
adc
sub
movsl
scas
inc
sbb
mov
sub
pop
push
out
scas
xchg
lock
decb
inc
fldcw
mov
mov
xchg
call
cs
movsl
ds
jbe
mov
push
mov
jo
sahf
jg
xor
sub
adc
push
decb
push
mov
push
in
mov
inc
outsb
mov
inc
out
mov
sub
jae
insb
sahf
ds
adc
ss
test
jo
xor
push
sub
jmp
mov
out
js
mov
outsb
sahf
pop
jae
addr16
pop
out
add
nop
popa
repnz
push
or
insb
push
push
lahf
cmc
ss
or
stc
daa
fcmovnu
rcrb
mov
call
cmpsl
mov
push
cld
rorl
js
jl
xor
fimull
rcrb
das
shlb
push
jg
fimuls
out
jmp
jbe
xorl
dec
adc
decl
mov
shlb
sbb
popa
mov
dec
dec
mov
sub
insl
ror
imul
mov
sub
pop
loope
aam
mov
call
adc
jb
arpl
dec
adc
ret
jmp
inc
cli
std
cmp
and
popf
fisttpll
mov
lods
test
add
icebp
ds
and
jnp
add
jo
sub
call
pop
push
insb
testl
lcall
cmp
pushl
sub
sbb
enter
fsts
or
rcrl
shll
imul
lahf
sbb
pusha
push
sbbb
inc
arpl
sbb
add
stos
loope
lds
cld
jmp
dec
frstor
xchg
add
popf
loop
mov
mov
mov
sub
mov
movsl
cmp
jmp
dec
dec
mov
mov
mov
push
mov
adc
mov
add
pop
inc
push
incl
lret
mov
mov
pop
mov
mov
roll
imul
jbe
jmp
fdivl
cmp
lcall
packssdw
cltd
out
inc
cmpsl
into
add
mov
ljmp
sub
jge
movsl
mov
fidivrs
popl
cltd
mov
out
test
cli
jg
ja
mov
push
nop
and
aam
cmove
outsb
pop
jne
roll
jmp
mov
and
adc
pushf
out
jb
movsl
sbb
arpl
xor
call
pop
into
cmp
movb
das
sbb
ret
push
dec
push
ljmp
and
adc
imul
lods
cmp
in
popl
push
ds
lcall
pusha
lea
sbb
iret
sbbb
and
push
sbb
push
aas
in
push
pop
sar
sbb
xor
push
dec
cwtl
sbb
mov
xchg
das
xor
push
psrlq
jp
mov
cmc
mov
ror
lcall
call
add
jmp
in
int
and
xchg
xchg
test
dec
in
dec
xchg
imul
mov
fstps
add
push
cld
add
xchg
repnz
mov
xchg
clc
aas
add
push
push
adc
adc
mov
push
mov
mov
call
cmp
call
loopne
add
into
scas
repz
adc
fistl
data16
pushf
call
jmp
jmp
mov
icebp
stc
mov
clc
call
mov
dec
out
jle
push
testb
arpl
mov
inc
cmp
outsl
cmpsl
xor
pop
cld
out
xorb
mov
not
mov
ljmp
loope
xor
mov
ret
gs
call
or
rcrb
ljmp
sahf
sbbl
and
lcall
pop
sub
cmp
push
sbb
dec
test
leave
sbb
pusha
mov
pop
pop
ljmp
ja
pop
addr16
outsb
pop
sbb
stos
out
push
std
fildl
jmp
adc
inc
push
mov
incl
fstpt
lods
adc
cmp
sbb
fdiv
lds
xchg
divl
cmp
xor
mov
xor
pop
movsb
mov
call
rcrl
iret
inc
test
push
lock
in
jl
ja
xchg
mov
pop
fcompl
sbb
dec
mov
data16
add
outsl
repnz
fiadds
inc
pop
xlat
jbe
add
mov
sub
cli
cmpsb
add
ljmp
mov
dec
inc
adc
jns
mov
fmulp
add
or
mov
adc
data16
outsl
movsb
cli
test
cltd
jp
and
lcall
and
fldcw
cmp
lea
push
fcomp
push
imul
dec
scas
sbb
loopne
cwtl
lcall
jmp
clc
cmc
mov
xchg
jae
stos
xchg
sbbl
loop
into
in
mov
mov
push
mov
dec
clc
jmp
pop
push
cmp
movsb
hlt
cltd
out
jg
mov
sbb
scas
adcl
inc
rorb
jecxz
dec
ds
cli
call
xor
stc
push
lret
push
mov
je
js
dec
dec
ret
xor
xchg
jb
outsl
shrl
xchg
cmp
idiv
pop
cmc
pop
pop
stos
add
mov
repz
add
incl
pop
idivl
in
mov
jecxz
push
popa
add
cwtl
clc
mov
cltd
jbe
push
call
mov
aas
in
jmp
mov
xor
cs
in
pop
iret
and
out
lahf
cltd
mov
pushl
cmpsb
add
mov
into
imul
inc
ds
ds
and
insb
lret
fisubl
lcall
sub
fcomps
repz
fisubl
or
int3
xchg
xor
jmp
or
loope
add
in
mov
mov
cmpsl
aam
lods
jle
test
or
cmpsl
fcmovne
cs
roll
mull
jp
lret
ljmp
arpl
pusha
in
mov
pop
and
call
and
in
inc
xor
cs
mov
stos
pushf
push
pop
sbb
and
and
out
sti
data16
lds
jbe
mov
lods
add
cltd
push
xchg
je
lcall
dec
cmp
lock
mov
cmp
xor
out
sbb
pushl
jle
cmp
pop
fldl
xchg
outsb
jmp
and
insl
mov
lcall
push
fmull
adc
shlb
movsb
js
cmp
and
fdivs
jb
mov
ret
repnz
gs
push
sub
mov
inc
dec
lahf
cmc
push
mov
into
cmc
xchg
ds
mov
pop
add
mov
in
loope
incl
sub
fisttpl
jbe
sbb
xchg
cltd
sub
cmpb
arpl
jmp
loopne
rorl
fnstenv
jp
inc
mov
pop
sarb
fisttpll
js
rorl
xchg
mov
aad
mov
push
call
push
in
out
adc
mov
mov
mov
jge
add
incl
insb
cmpsb
into
dec
pop
inc
mov
call
mov
push
jb
mov
mov
pop
das
cli
decl
ljmp
movsl
add
or
inc
out
roll
mov
ljmp
mov
mov
mov
fsub
sub
sbb
and
xor
in
xor
dec
xor
pop
sub
pop
icebp
decl
fsub
push
cmpsl
xchg
lock
loopne
scas
xchg
ret
outsl
pop
xchg
adc
jmp
jl
lods
xor
test
jg
int3
out
mov
sub
pop
adc
popa
int
cmp
inc
push
pusha
cmp
ja
jmp
xor
stos
in
add
sub
jle
fisttpl
ljmp
xchg
pop
push
or
arpl
cld
dec
dec
fdivs
jae
mov
insb
cltd
inc
mov
mov
mov
dec
aaa
nop
mov
icebp
aaa
bound
nop
cld
jg
mov
addr16
cmp
into
lds
push
mov
jmp
cmp
ja
add
xor
add
stos
adc
push
movsb
cmp
movl
cmp
mov
pop
xor
pop
out
in
xchg
mov
xor
mov
fucom
mov
fistps
mov
ljmp
jmp
lret
mov
cli
dec
fs
xor
inc
xchg
jno
ja
xchg
jnp
jno
stos
enter
inc
data16
vprotw
jbe
aaa
cmpsl
or
mov
sarl
fnstenv
mov
popa
mov
cmp
mov
shr
ljmp
cmp
test
pop
cmp
dec
jmp
test
cmpsl
add
test
add
aad
call
aas
insb
jno
inc
add
adc
ret
outsb
inc
arpl
add
fnstsw
and
mov
clc
orl
iret
or
pop
ds
ljmp
jp
ret
mov
jg
sub
inc
mov
fwait
pop
insl
pop
imul
xchg
lcall
js
bound
mov
jmp
ljmp
adcl
xor
cmp
xchg
dec
jp
pop
sub
int
fnop
sub
lock
enter
loopne
outsl
sahf
addr16
adc
push
and
jns
outsb
mov
jl
ljmp
xchg
sub
xchg
sub
andl
decl
cmp
mov
stos
cmp
mov
xchg
adc
adc
and
sahf
stos
shll
inc
clc
mov
xchg
or
dec
mov
aam
ja
call
mov
lods
mov
addr16
mov
jg
inc
faddp
sbbl
ret
aam
add
jle
pushl
outsl
frstor
xor
mov
mov
sbb
int
mov
in
pop
incl
mov
fdivs
dec
or
mov
pop
ja
jp
decl
orb
cs
in
lea
cmp
lock
mov
jg
cli
cwtl
outsb
inc
xlat
jl
loop
jecxz
xor
xor
addr16
add
xchg
jne
inc
mov
call
or
aas
inc
push
add
ds
sbb
mov
sbb
lret
decl
imul
lret
hlt
xor
jne
insb
jge
xor
mov
adc
clc
pushl
ret
xor
fs
mov
jle
in
repz
int3
pop
add
pushl
mov
lret
test
fistl
add
lock
push
movsb
and
in
mov
push
jg
add
sbb
fildll
into
stos
lret
mov
outsl
lret
or
jmp
test
daa
jb
ds
push
shll
andb
test
xchg
int3
adc
or
pop
aad
imul
add
or
xchg
sti
add
insb
pushf
jl
mov
dec
aas
test
xor
adc
mov
jecxz
pop
je
pop
incl
adc
subl
xlat
or
scas
mov
jo
pop
cmpsb
sbb
arpl
mov
sbb
mov
loopne
or
lret
sub
mov
clc
mov
cmp
push
pop
mov
call
xchg
decl
jle
dec
clc
push
loopne
sbb
push
lret
dec
xchg
mov
pop
xor
call
push
jnp
mov
adc
int
sbb
cmp
stc
clc
sahf
into
push
pop
push
jecxz
lds
call
cltd
pop
dec
rcr
icebp
pop
test
adc
mov
mov
pushf
out
jae
sbb
in
xor
fcomip
fmulp
push
rcrb
lds
ret
dec
jl
mov
xor
and
inc
test
adc
dec
rcll
xlat
sub
addr16
loope
dec
test
fidivrl
dec
mov
push
mov
xchg
sub
outsb
mov
mov
aas
lahf
fildll
es
ljmp
loopne
and
pushf
or
aam
sub
loop
decl
push
xchg
sbb
cmp
sub
ja
ja
sbb
jg
jmp
stc
and
inc
sub
push
shlb
sar
mov
xor
xor
sub
incl
pop
xor
lods
imul
in
data16
mov
addr16
or
inc
sub
daa
leave
xchg
cmp
sub
hlt
test
cmp
scas
or
add
or
in
pop
insl
sahf
mov
out
test
lcall
adc
mov
aad
inc
and
sub
jg
outsb
push
scas
cmp
mov
jl,pt
stos
lods
dec
mov
mov
sbb
jbe
mov
test
adc
or
jg
fists
mov
or
js
jp
dec
inc
lods
mov
loop
dec
test
mov
movsl
vcvttss2si
push
stc
pop
aaa
dec
lret
xorb
in
jle
lds
pop
pusha
cmp
movsl
mov
int3
mov
xlat
sarb
xchg
outsb
iret
mov
push
jecxz
and
cmpsb
notl
data16
pop
std
jmp
xchg
xor
insl
dec
lods
jae
scas
lcall
or
aas
inc
movsl
popf
sbb
fmuls
test
inc
cmp
das
cltd
add
sbb
movsl
lahf
dec
lods
adc
call
aad
loop
cs
lcall
xchg
dec
aaa
push
sbb
cmp
mov
sbb
pushf
adc
ja
push
adc
lahf
or
incl
int3
orb
mov
xor
pop
pop
mov
push
subl
cld
pushl
ret
mov
movsl
pop
mov
xor
test
das
pop
add
ret
jns
decl
insb
pop
cltd
iret
dec
cmp
and
mov
enter
lret
adc
into
sti
ljmp
xor
dec
lock
xor
rcl
cmc
stos
icebp
incl
lock
test
fsubrs
out
fbstp
dec
xchg
lret
push
dec
sbb
pushf
filds
test
push
cmpsb
mov
incl
mov
xlat
xchg
push
out
ret
adc
cmp
jno
adc
outsl
stos
imul
das
push
test
insl
imul
loope
or
or
sar
pushl
loopne
mov
jl
out
push
ljmp
outsb
lods
mov
in
xchg
mov
lahf
popa
push
ret
mov
clc
mov
sbb
test
pop
sub
insl
das
xor
in
inc
sub
decl
and
cli
leave
xchg
add
icebp
lods
fs
in
dec
les
outsb
outsl
mov
fbld
add
fisubs
fbstp
cmp
mov
cli
add
add
out
pushf
jnp
mov
pushf
cmp
test
fmull
fsubs
ja
mov
je
jg
je
jbe
jo
jns
jb
add
je
in
pusha
jb
push
imul
hlt
lea
jecxz
in
mov
shrb
dec
push
lcall
addl
rclb
into
cmpb
test
cmp
and
cmp
outsl
jg
and
adc
insl
cmp
stc
jbe
dec
sahf
dec
sub
adc
inc
cwtl
cmp
mov
movsb
push
mov
addr16
cmp
shr
frstpm(287
or
mov
sub
jle
sbb
push
push
cwtl
pop
mov
mov
movsl
fucom
cmp
sub
sarb
lcall
jae
je
sbb
sub
or
sbb
mov
cmp
sub
mov
out
xor
mov
cmc
jns,pn
push
mov
jmp
add
or
das
mov
popf
repz
inc
xor
adc
sahf
out
jmp
outsl
mov
rcr
inc
mov
dec
pop
mov
inc
scas
pop
mov
call
xor
push
insb
int
xor
lds
loop
daa
pushf
imul
shlb
pop
test
sbb
dec
daa
xchg
xor
popl
xor
stc
adc
sub
imul
shrl
int3
in
adc
adc
mov
ja
push
pop
dec
pop
xor
push
adc
adcb
cmc
mov
data16
jb
jnp
pop
cmp
pop
sub
fwait
jns
mov
fnstenv
add
movsl
and
jmp
ljmp
in
mov
orl
xor
and
inc
push
daa
lock
fwait
shlb
movsb
fs
pushl
sar
xchg
into
mov
rcrl
das
cld
mov
mov
jne
lds
inc
repz
call
push
das
adc
pop
gs
pop
repz
cwtl
stos
push
rcrl
sbb
out
mov
cmp
std
xchg
jl
push
ljmp
je
mov
push
mov
sub
cmp
jae
in
push
out
xchg
mov
xchg
push
inc
cmc
imul
and
into
sub
mov
jmp
outsb
inc
sub
aam
jmp
and
pmaddwd
push
add
inc
repnz
jb
inc
pop
mov
xlat
xor
or
push
xor
and
jg
dec
fucomip
jg
sbb
mov
int
pop
mov
and
scas
sar
decl
lock
pop
std
lock
or
addr16
jle
mov
ljmp
mov
fstl
call
loop
push
pop
insl
test
dec
adc
xchg
orb
sub
nop
rcrl
lcall
push
and
stos
adc
je
int
mulb
mov
in
and
mov
outsl
movsl
cmpb
fdivrp
sbb
mov
pop
popf
add
sti
mov
cmp
clc
mov
fsubs
call
sti
jb
pusha
mov
ret
out
mov
or
xchg
xor
ljmp
mov
mov
jbe
push
aam
das
xorl
mov
roll
pushf
das
xchg
xchg
or
push
fcmove
mov
sbb
xor
outsl
mov
in
daa
shll
call
fisubl
in
out
xchg
aas
mov
lock
mov
lea
je
lea
xchg
sahf
push
mov
pop
push
mov
sti
cld
repz
cmp
into
incl
dec
add
mov
pop
jl
cmc
cmpsb
stos
inc
and
mov
add
ret
sbb
out
mov
loop
push
out
in
inc
mov
addr16
call
sbb
hlt
jp
xchg
jl
xchg
sub
daa
js
sbb
incl
faddp
lahf
cli
mov
les
sbb
cmpsl
faddl
push
pop
outsl
pusha
lock
mov
and
jmp
cltd
mov
test
push
int
stos
ljmp
in
and
adc
cmp
icebp
enter
dec
lahf
lds
jmp
lock
jg
xchg
jge
mov
push
jbe
xchg
fisubrs
stos
flds
decl
jbe
fcmovne
jle,pt
out
cli
andb
clc
jnp
mov
lcall
fdivs
xor
jo
pop
adc
push
fs
cmp
rolb
sbb
mov
or
lcall
ss
cltd
jns
mov
das
push
stos
fs
std
jnp
adc
cmpsl
and
mov
test
mov
push
mov
and
mov
inc
fs
cltd
push
or
and
fistpll
arpl
push
inc
loopne
and
mov
aam
or
dec
je
or
nop
mov
lahf
xor
cmp
jno
jl
out
inc
rcl
call
pop
ret
daa
jae
or
sub
mov
lcall
xchg
jns
popa
xor
jg
adc
imul
popf
scas
rcll
add
decl
mov
fistps
mov
out
adc
inc
int
loopne
inc
sar
call
add
dec
cmp
out
popa
jmp
xchg
stc
in
push
add
push
mov
pushl
lcall
lret
mov
mov
dec
bound
adc
ja
pushf
mov
mov
xchg
or
clc
xchg
mov
xlat
jne
pusha
add
insl
mov
roll
clc
xchg
or
mov
mov
mov
loopne
and
cld
adc
test
mov
mov
movsl
aas
sub
rclb
mov
es
pop
int3
mov
sbb
pushl
shl
jg
mov
cmpsb
out
mov
test
inc
inc
dec
les
jge
pop
nop
or
or
ret
or
cmpsb
mov
sti
inc
cmp
jmp
sbb
jne
ret
fstpl
sti
mov
dec
testb
mov
jno
jle
mov
pop
out
and
jno
sti
xchg
movsl
repz
addl
jmp
add
sti
cwtl
leave
mov
out
dec
cmp
loopne
push
lods
mov
lock
cltd
jecxz
insl
jp
xchg
aas
pop
pop
lock
jmp
test
hlt
sub
rorb
dec
jle
jp
add
pop
icebp
filds
int3
sbb
xor
pop
jle
mov
add
pushl
fucomip
movsb
push
lock
movsb
jae
aam
mov
push
call
jae
jae
push
call
je
push
icebp
jmp
scas
pushf
xchg
dec
lret
xchg
test
mov
ljmp
dec
test
mov
push
push
fadd
movsb
add
inc
dec
decl
and
pop
mov
add
les
and
fbld
call
add
dec
sub
mov
xlat
sub
test
xchg
rclb
inc
mov
push
mov
loop
je
call
pop
stos
push
pop
ds
xchg
loop
mov
dec
aad
int
mov
pushf
mov
mov
lea
jmp
insl
fcoms
lret
outsb
mov
cs
mov
stc
outsl
sti
sarb
ret
dec
or
loope
adc
cmpsb
mov
inc
notb
das
movsb
sbb
cld
sahf
or
mov
mov
pop
icebp
dec
repz
out
dec
mov
cmp
lcall
pusha
test
pop
negb
jnp
or
les
test
mov
neg
mov
addb
push
cld
stc
push
out
mov
neg
lret
dec
xor
inc
cld
xchg
mov
xor
mov
mov
test
bound
imul
loopne
call
pop
sarl
sbb
bound
fdivrl
jmp
cld
call
and
fldenv
ss
pop
movsb
iret
jae
repz
std
cwtl
adc
sbb
jns
test
cmp
adc
and
jge
leave
pop
add
push
popf
mov
sub
dec
add
mov
loop
test
mov
adc
ljmp
mov
rcl
fldt
clc
stos
sub
mov
arpl
mov
adcl
popa
cmpsb
cmpsl
fs
sub
fs
inc
pop
jno
jmp
stos
jne
adc
sbb
cmpsb
fwait
push
jo
fdivs
mov
inc
jb
or
data16
jg
mov
jg
jl
push
inc
xor
mov
sti
repnz
loope
fxtract
sub
dec
mov
mov
mov
faddl
pop
and
adc
push
sbb
sbb
je,pn
jge
lods
cmp
call
jl
roll
push
xor
pushl
mov
icebp
pop
xor
sub
pop
scas
jnp
pop
pop
xchg
cmp
xor
fs
fldenv
lcall
lcall
xchg
test
fisttpl
lret
mov
lods
fildl
adc
or
popf
xchg
ljmp
jno
xchg
push
xor
mov
sub
insl
and
push
push
lds
inc
aaa
ljmp
cwtl
into
incb
das
imul
into
sub
jg
enter
cmc
arpl
fnstsw
addr16
jb
mov
pop
insb
out
lds
jmp
adc
and
out
lcall
xchg
sbb
mov
inc
in
push
cmpsl
out
or
pop
xchg
mov
add
dec
ret
scas
jecxz
negb
lcall
ja
out
movsl
sbb
and
xchg
mov
cmp
int3
imul
mov
dec
movsl
and
lcall
sbb
xlat
xchg
and
xor
pop
adc
jmp
dec
int3
das
jne
psubsb
int
insb
xor
pop
mov
lahf
stos
and
in
mov
pushl
sbb
push
arpl
fisubl
jg
and
fadds
cmp
lcall
dec
cs
insl
addb
mov
or
push
inc
adc
mov
push
jg
bound
jg
popa
pop
dec
testl
mov
int
mov
xchg
or
jle
xor
cld
mov
sub
icebp
pushl
mov
push
dec
popa
jecxz
adc
push
or
and
cmp
movsb
out
imul
fnstsw
je
jmp
fidivrl
mov
cmpsl
mov
inc
mov
insl
cmp
fcompl
fdivl
nop
ljmp
and
in
ds
mov
jbe
or
outsb
or
lret
jp
mov
lcall
sbb
sbb
pop
stos
std
xor
cltd
fcomi
orl
addr16
scas
inc
or
jg
and
pop
lods
in
andb
push
shl
cmpb
call
mov
cmp
lds
cltd
in
pop
sub
rorb
pop
cmpsb
jmp
push
out
cmp
mov
lock
movsb
cmp
dec
adc
test
jae
pop
push
xor
mov
xor
pop
pop
scas
sbb
sub
lret
imul
push
insb
loope
sbb
lcall
dec
ljmp
in
push
add
dec
mov
push
movsl
mov
mov
pop
mov
idiv
decl
loope
or
lods
push
aas
sub
sub
fcomp
jecxz
sbb
pop
lcall
lods
mov
gs
cmpsb
dec
mov
inc
add
lods
inc
inc
and
dec
sti
cmp
mov
ljmp
sub
ja
and
scas
ds
je
xor
gs
incl
in
not
out
pop
pop
sub
inc
scas
loopne
mov
dec
je
push
push
sub
lcall
mov
mov
mov
pop
cmp
dec
inc
mov
out
out
or
mov
rcr
dec
or
push
push
fmulp
int3
stc
add
call
orb
js
cmpsb
push
jne
push
mov
xchg
jmp
lock
mov
subb
out
cli
out
jnp
dec
inc
lds
inc
mov
cmc
push
or
and
incb
jmp
pop
mov
mov
adc
inc
push
push
cmpsb
popa
ret
jg
mov
fs
mov
cmp
jmp
xor
pusha
mov
loopne
test
mov
xor
pop
pop
jmp
mov
push
add
cltd
mov
and
jp
mov
mov
test
sub
cmp
jmp
inc
cmp
orl
andb
jne
test
test
push
lcall
or
push
test
out
leave
and
or
mov
popa
aaa
dec
pop
fidivrs
xchg
adc
incl
movsl
mov
sub
js
cs
cmp
je
cltd
inc
mov
hlt
mov
cmp
dec
rcrb
sbb
mov
xor
cld
inc
jmp
mov
push
inc
out
inc
inc
pop
inc
push
mov
adc
or
mov
in
clc
in
xchg
add
loope
mov
push
xchg
fdivl
jno
outsb
add
decl
inc
cmp
sub
enter
add
lcall
inc
fwait
adc
icebp
push
shr
sbb
jo
mov
push
mov
daa
adc
sub
sub
lcall
inc
dec
push
insl
push
ret
test
sbb
lcall
jl
hlt
cli
ret
pop
jne
incl
jb
sub
jb
shll
mov
jmp
mov
cmp
lods
scas
arpl
dec
or
jl
out
adc
jg
mov
dec
aaa
addr16
std
ljmp
cmp
ret
ljmp
xchg
cltd
xchg
or
xor
pop
mov
shlb
cltd
lods
popa
push
les
lcall
daa
rcrl
mov
cld
or
jl
incl
js
das
dec
sbb
scas
mov
dec
insl
fs
xor
xchg
or
lock
fcmovnb
subb
fdivl
test
mov
scas
and
dec
les
jg
mov
incl
ljmp
sti
xchg
aam
sub
sbb
loop
inc
loopne
call
cmpsl
iret
lea
xchg
fwait
mov
jl
mov
mov
jecxz
clc
jmp
cmc
xor
lret
sarl
jmp
add
sbb
cmp
mov
lcall
adc
cmp
imul
mov
sbb
call
andl
mov
pop
dec
sub
aam
mov
fcompl
cmp
shlb
ljmp
repnz
jge
cmp
sub
dec
xor
xchg
in
mov
icebp
pop
bnd
loopne
inc
and
mov
cmp
jg
iret
and
cmc
adc
jmp
hlt
mov
insl
adc
push
sbb
inc
fcom
hlt
imul
mov
shll
aaa
int
jg
incl
pop
test
push
lock
inc
clc
addl
jl
dec
mov
cmp
cmc
ljmp
mov
lret
aaa
push
shl
cmp
adc
fidivrs
lock
lods
push
jl
mov
fs
lock
cmp
cmp
fbstp
push
add
push
rorb
std
xchg
mov
icebp
or
scas
jns
pop
mov
add
call
and
jecxz
and
sub
pop
xchg
pop
gs
ja
insb
cmp
cmp
jg
decl
cli
or
inc
or
clc
mov
loop
ljmp
fwait
ds
xchg
lcall
xlat
xor
mov
aam
test
fisttpl
cmp
ljmp
stc
sbb
shll
pop
clc
lret
sub
pop
mov
xor
mov
mov
fs
dec
push
or
pop
sub
adc
or
xor
rclb
ret
mov
pop
mov
incl
fisubrl
ficompl
adc
sbb
jecxz
icebp
out
xchg
push
not
insb
push
adc
test
addr16
push
mov
imul
inc
xor
xor
sub
push
pop
mov
stc
fistpll
jl
or
mov
add
inc
mov
in
scas
fidivrs
xor
cli
mov
rorb
jge
push
incl
push
inc
pop
mov
sub
repz
iret
sub
push
clc
sahf
in
pop
xor
popa
loopne
push
xchg
clc
inc
mov
cmp
mov
decl
xor
rorb
push
xor
xor
rcr
iret
cmp
mov
xchg
pushl
jno
outsl
fimuls
rorl
int3
addl
insl
orl
mov
aaa
mov
jge
mov
lea
add
ret
ret
hlt
xor
pop
cmp
mov
call
or
pop
fisubl
stos
add
cmp
add
mov
sub
mov
cmp
and
lods
sub
dec
inc
dec
jg
es
or
mov
add
sub
adc
dec
mov
pop
repz
mov
cld
ljmp
int3
and
ret
jns
adc
mov
jg
or
lea
xchg
out
into
aam
in
cli
mov
jns
pop
enter
jae
mov
push
icebp
in
popf
mov
cmpsb
mov
addr16
test
inc
jg
popf
add
js
insb
sahf
mov
jne
jo
mov
into
outsb
fcoms
sub
push
out
cli
dec
adc
push
mov
psubd
movsb
imul
sbb
fistps
jmp
sti
imul
jge
xchg
roll
dec
mov
fwait
xchg
into
jb
lods
fstl
dec
iret
fsubs
imul
stos
negl
cmpsb
cmp
dec
sahf
out
hlt
clc
mov
je
mov
into
fucomi
rcrb
pushf
daa
iret
pop
cmpsl
push
jmp
mov
cmp
sti
and
mov
inc
and
repnz
incl
pop
stc
sbb
and
aas
add
ljmp
shlb
push
pop
mov
leave
adc
or
inc
mov
jmp
enter
pop
and
das
data16
mov
fwait
mov
jne
adc
sub
add
jg
ret
clc
sbb
bnd
addps
insl
lods
mov
idivb
mov
ret
cli
jmp
fwait
mov
cmpsl
or
cmp
shr
or
fbld
mov
rcrb
cmp
lods
out
lock
pop
or
and
pop
aam
inc
push
minps
mov
aas
mov
or
fistpl
into
outsl
pusha
pop
push
sbb
add
call
std
or
cmp
into
xchg
mov
mov
and
inc
ss
cmp
decl
lret
out
xchg
dec
add
fcmovnb
push
jo
subb
aad
arpl
sub
push
std
out
adc
arpl
fdivrl
add
movsl
cmpsb
sub
int
pushl
int3
cmp
popa
pop
dec
mov
xchg
jo
mov
enter
fadds
popa
xchg
xor
xchg
mov
hlt
push
inc
cmc
mov
mov
mov
and
hlt
mov
sti
js
xor
jge
xor
in
mov
lods
jge
stc
or
and
call
cmp
adc
inc
or
pop
ret
in
mov
insb
or
jo
push
das
gs
jns
xchg
jae
andl
jg
push
push
repnz
add
cwtl
fldenv
iret
mov
mov
lret
dec
xor
sbb
dec
xchg
fmull
in
ficomps
push
clc
pop
and
rcrb
xchg
pop
cmc
pushl
inc
std
icebp
fstps
inc
loopne
xor
push
push
pop
cmp
jg
jmp
loop
inc
loop
ja
hlt
test
push
std
scas
subl
aaa
lods
push
fmuls
int3
cli
mov
data16
popa
add
mov
adc
xor
ror
mov
mov
mov
daa
push
or
in
movsb
push
int
aaa
cld
cli
stc
pop
in
std
daa
jne
sahf
stc
lcall
addb
jecxz
nop
pop
adc
and
mov
sub
xlat
jge
sub
jl
sbb
pop
mov
mov
and
lcall
inc
ss
xor
fldt
out
mov
push
jle
insl
fidivrl
push
inc
cltd
or
fwait
mov
mov
or
cmp
dec
push
xchg
in
pop
sbb
clc
call
mov
mov
and
mov
rclb
call
incl
daa
push
sub
sbb
std
dec
adc
dec
hlt
daa
xor
sbb
clc
jge
movl
jle
stc
dec
push
fisttps
jmp
ret
inc
cmpsl
inc
push
adc
and
inc
adc
cli
std
mov
mov
inc
dec
add
scas
mov
jge
or
inc
jp
add
cli
pop
dec
sbb
mov
mov
and
adc
pop
outsb
mov
cmp
pop
pop
xlat
and
fdivr
into
or
pop
xchg
push
stc
and
js
ja
mov
push
sub
incl
inc
in
std
and
mov
and
repz
mov
dec
push
cmpsl
fcomip
mov
int
and
jno
push
sub
movsl
pop
push
cltd
jns
clc
mov
lea
icebp
scas
incl
sub
xor
insl
add
inc
bound
and
xor
ljmp
sub
push
dec
push
add
dec
ficomps
test
pop
inc
pop
push
and
cmp
or
shrb
filds
in
xchg
push
pushf
mov
pop
dec
enter
mov
push
mull
pushl
loop
out
loope
dec
push
fstpl
and
stos
cmp
xor
mov
mov
clc
in
push
mov
cmpsl
inc
jecxz
mov
ljmp
xchg
arpl
adc
add
clc
ljmp
xor
lahf
loope
or
xchg
in
mov
or
pop
pop
mov
jg
or
adcb
inc
popa
decl
adc
mov
sbb
je
add
sbb
dec
aaa
sub
clc
push
or
filds
or
popf
cmp
mov
dec
or
sar
decl
mov
adc
push
fdivrs
push
cltd
mov
mov
pop
sbbb
mov
cmp
xchg
fdivs
subl
cmp
inc
mov
xor
push
fstps
out
cmc
test
push
jmp
into
divl
push
mov
or
into
jbe
fdivr
roll
shl
cmp
mov
test
hlt
call
or
mov
pushl
sub
jb
cmp
mov
in
jb
xchg
jmp
dec
jne
inc
fdecstp
ss
fxch
rcrl
sbb
pop
imul
call
add
arpl
lcall
xchg
jl
ss
cmpsb
jnp
std
fdivr
call
sbb
mov
add
into
test
aad
cmc
dec
xchg
mov
add
dec
xor
daa
push
call
xchg
insb
call
arpl
xor
push
es
xor
dec
cld
sub
pusha
push
and
fnstcw
jg
fdivrl
xchg
xchg
call
add
jg
and
es
and
pushl
iret
les
jae
or
test
lea
jae
mov
and
decl
test
out
mov
jp
xor
sarb
nop
xchg
mov
outsl
lcall
jnp
add
mov
jmp
shl
adc
fidivl
scas
das
and
lea
sbb
pushl
mov
ss
xor
cmp
push
insb
jns
jnp
outsl
ss
aad
sbb
sete
and
fs
cmp
into
dec
mov
loopne
call
add
sub
mov
addr16
fwait
test
jmp
xchg
jmp
jno
cmp
adc
inc
xchg
ret
popf
add
lods
xchg
add
jg
pop
push
loope
cmp
hlt
call
outsl
push
ss
adc
adc
movsb
dec
xchg
test
js
pop
xor
xchg
imul
adc
stos
ret
ret
ljmp
adc
mov
nop
push
mov
cmp
and
stos
xchg
shrl
decl
adc
xor
aaa
cmc
push
inc
iret
stos
cs
push
in
repz
mov
negb
call
mov
or
adc
ljmp
out
gs
out
pop
cld
je
fcomps
out
sarb
push
aam
enter
pushl
call
lds
out
sub
enter
and
xor
sbb
incl
pop
pop
orb
dec
out
sahf
gs
int
int3
stc
push
iret
shl
shr
mov
idiv
jnp
xchg
movsl
iret
repnz
sub
das
inc
pop
in
bound
cwtl
fs
and
aaa
loopne
ljmp
push
mov
add
mov
incl
cld
cltd
inc
mov
out
pop
fsub
xlat
hlt
xchg
jnp
popa
push
xchg
iret
nop
into
cmpsl
add
cmp
mov
sbb
in
popa
sub
xor
dec
cmp
fs
jo
xor
cmp
incl
xor
pop
sbb
imul
or
or
loope
out
jge
cmp
mov
negb
in
outsl
inc
leave
sbb
mov
xchg
cmpsb
testl
call
test
icebp
mov
mov
in
rcrl
in
pop
in
repz
jg
fidivs
pop
lret
add
in
adc
jno
insl
nop
cmp
fmull
ljmp
adc
repz
fstps
push
lea
mov
les
mov
cmp
cld
call
mov
pusha
mov
stc
into
lods
es
mov
add
js
pop
outsb
xor
mov
and
cs
shr
outsl
mov
lea
cmp
xlat
cmp
ljmp
mov
in
add
fwait
ret
addr16
pop
loop
outsl
loop
pop
or
mov
jmp
mov
cmc
incl
sbb
inc
xchg
mov
sbb
jmp
add
out
int3
adc
je
add
int3
sub
mov
mov
psubsb
fs
imul
int
fdivr
pushl
sbb
fidivrs
xchg
inc
or
out
mov
pushl
push
cltd
and
xchg
sub
mov
and
dec
shll
cli
jae
pop
popf
pop
mov
ljmp
sbb
xor
jbe
xchg
in
call
orb
fstpl
lcall
inc
int3
push
xchg
cmp
mov
lahf
pop
jg
dec
push
mov
inc
dec
clc
lcall
pop
clc
stc
scas
rclb
pop
fidivl
pop
jbe
out
pcmpeqw
or
sub
aas
out
clc
adc
lret
incl
pop
gs
xor
adc
jnp
add
incl
clc
mov
push
cmp
push
out
sub
cmp
mov
push
jns
sbb
pop
dec
xchg
test
adc
int3
clc
fcomip
cmp
adc
scas
or
movsl
mov
out
cwtl
addl
call
push
sahf
or
cwtl
aaa
xor
sbb
addr16
sbb
pusha
leave
in
mov
je
ret
pop
fcomi
out
std
and
xor
push
mov
xor
and
xchg
ljmp
repz
insb
ficompl
add
std
mov
outsb
repz
out
mov
sti
iret
ret
fstl
mov
outsl
jns
sbb
add
dec
mov
mul
add
sbb
mov
jmp
fdivrs
xchg
dec
xor
xchg
sbb
movhps
mov
shl
js
jle
call
lret
outsl
fildl
in
imul
out
inc
jg
add
subb
xor
rcll
cmp
popf
mov
addr16
xor
insl
or
ljmp
outsl
sbb
imul
dec
out
pop
pop
hlt
loopne
jge
in
pop
je
dec
pushl
testb
arpl
or
add
addr16
test
jmp
or
movsl
dec
sahf
pop
xchg
loope
mov
shll
call
add
sub
and
mov
cmpsb
mov
xchg
mov
push
aas
fcoml
add
dec
lock
add
mov
push
pop
adc
out
ffree
pop
ja
cmpsl
decl
mov
ret
notb
mov
jmp
jbe
aam
addr16
and
cmc
sbb
pushl
test
lea
add
or
mov
and
incl
sbb
inc
jp
jg
sti
cwtl
or
sbb
dec
push
adc
mov
and
mov
dec
cmp
push
bound
fs
jmp
rcl
jl
pushl
lahf
jmp
fs
gs
into
cmpsb
cld
cwtl
mov
push
xchg
and
sub
mov
adc
test
jmp
insb
das
mov
cmp
in
or
push
fnsave
jae
mov
mov
ret
rolb
jle
lds
xchg
and
stc
dec
call
push
push
ficoml
push
push
and
in
sarl
xchg
decl
inc
mov
lods
mov
roll
adc
add
dec
xlat
pop
rcrl
decl
popf
stos
push
push
ja,pt
shrl
fisttpll
lret
leave
sbb
pop
sub
jmp
aas
js
adc
decl
mov
sub
cmpsb
mov
jle
imul
idivb
sar
lcall
mov
inc
mov
adc
mov
imul
sub
sarl
movsb
or
ret
mov
movsl
sbb
ja
ja
lahf
dec
push
sub
mov
in
dec
inc
pop
pop
rcrb
ficomps
mov
push
sbb
and
pushl
xorps
scas
mov
int3
stos
sub
pop
sbb
ja
cwtl
xchg
xchg
fcoml
mov
pop
in
cmp
aaa
push
jno
push
pop
repnz
sbb
leave
lret
movsb
xor
outsl
mov
sub
dec
cmc
mov
xlat
iret
xchg
sub
fidivrs
push
loope
jmp
inc
dec
pop
dec
rorl
idivl
add
test
pushl
and
es
pop
jle
lods
jne
mov
popf
inc
xchg
in
pop
ljmp
lock
adc
jmp
adc
hlt
add
and
dec
cmpsb
scas
paddb
lcall
sahf
lods
cwtl
push
and
cmc
cmp
ret
inc
jmp
jle
mov
fsubrl
into
ret
pusha
jbe
inc
or
adc
in
jns
dec
call
arpl
mov
pop
jg
call
popf
repz
xor
mov
mov
jae
sub
mov
fldt
aas
sar
xlat
stos
enter
jmp
insl
bound
aas
movsl
orl
xchg
jg
push
inc
or
outsl
or
push
mov
test
out
sbb
lcall
push
pop
push
cmp
clc
dec
pop
sub
nop
pop
mov
mov
cli
cmpb
test
lret
std
incl
jbe
pusha
aad
aas
xchg
shlb
fnstsw
sbb
xorb
mov
test
fcompl
sub
stos
adc
testl
push
xchg
ljmp
xchg
cmp
loopne
push
fdivrl
adc
mov
pop
or
scas
jp
test
mov
push
push
out
call
xor
adc
mov
mov
sbb
and
mov
rep
negb
xor
popl
call
movsb
cltd
xlat
cmp
sub
clc
inc
adc
ja
mov
push
sub
dec
xor
mov
mov
jb
nop
daa
jge
mov
stos
in
cmp
jnp
fmuls
in
ljmp
mov
dec
cwtl
push
pushf
push
les
cmp
stc
push
push
sti
roll
jge
pusha
sub
mov
sbb
sub
cmc
test
lret
incl
push
inc
movsb
lret
push
mov
mov
xchg
sti
sub
cmp
int
cmp
mov
fs
lahf
movsb
jae
mov
add
push
xchg
inc
fisubrs
sarl
and
mov
ljmp
dec
fs
pushf
repz
popa
in
mov
jnp
pop
rorb
and
add
outsl
incl
std
in
lods
mov
out
mov
or
mov
scas
pop
add
jmp
jno
aaa
mov
andl
or
inc
in
int3
enter
mov
mov
fmul
push
insl
inc
push
dec
push
sarb
push
cwtl
rorl
pop
or
dec
xor
arpl
ljmp
dec
xchg
or
inc
insl
sub
ss
xor
push
shrb
push
pop
cmc
pusha
adc
imul
cld
icebp
mov
sbb
bound
cltd
push
popa
out
add
pop
test
sbb
fsubl
add
outsb
mov
pop
fwait
sub
push
mov
sbb
outsl
xor
add
pusha
inc
xor
push
or
js
adc
mov
pop
and
shl
in
xchg
cmp
out
cmp
cld
fdivl
adc
in
pop
movsb
outsb
mov
sti
or
repnz
test
movsl
jg
orl
call
lret
fdivs
mov
stos
mov
fstps
fbld
fwait
bound
addb
xor
jae
stos
cmp
sbb
lcall
leave
cli
adc
es
les
loope
aad
inc
and
dec
ljmp
inc
jmp
jne
jo
fmull
push
xor
lds
pop
pushf
xchg
lock
call
mov
inc
out
xchg
iret
adc
push
add
sub
movsl
xchg
lahf
jmp
sub
pushl
shrb
ret
dec
orb
mov
lock
add
ja
fsubs
shll
call
pop
push
in
add
insb
movsb
and
addr16
xlat
rolb
add
add
in
sbb
decl
daa
xchg
pop
out
cmp
pop
push
out
xor
lea
mov
fcomps
mov
jmp
aam
lds
pop
les
div
outsl
and
jns
test
loopne
mov
decl
es
mov
push
sbb
mov
xchg
icebp
decl
test
scas
sub
lods
sub
adc
scas
jbe,pn
add
dec
loop
jnp
aam
test
aam
int3
adc
fsubrs
cwtl
cmpsb
jg
xor
mov
cmpb
out
pop
lods
push
mull
sbb
sbb
clc
mov
jp
inc
adc
flds
mov
pushl
inc
xchg
inc
push
fwait
jnp
sub
xchg
test
mov
or
iret
incl
xor
in
sbb
pushf
jnp
fmul
call
add
cs
scas
imul
xchg
cltd
clc
repnz
jae
std
cli
hlt
and
cli
sub
cmp
jp
dec
cmp
stos
dec
sbb
ljmp
cli
movsb
and
pushf
lahf
andl
hlt
mov
gs
and
lcall
add
aas
pusha
add
faddl
push
pop
add
test
mov
popa
aad
mov
ljmp
add
add
outsl
cld
lods
mov
adc
xchg
repnz
rclb
ljmp
mov
xor
ljmp
ds
sti
lret
je
jecxz
call
push
adc
pop
cmpsb
add
call
ja
and
shrl
clc
nop
or
mov
jg
das
clc
insl
fistps
in
sbb
in
movsl
mov
xchg
shll
mov
cmpsb
mov
mov
add
pop
aad
inc
idivl
orl
and
outsb
or
mov
dec
and
adcl
mov
dec
xor
xchg
push
ret
rclb
decl
fld
mov
testl
lock
icebp
jmp
shl
aad
cmc
ss
imul
ret
mov
and
test
call
xchg
sahf
call
add
xchg
push
add
test
add
lods
lcall
add
scas
sub
call
jp
xchg
fsubr
adc
nop
xchg
adc
push
cwtl
nop
mov
xchg
aad
ret
mov
cmp
clc
lret
jge
pushl
into
das
aas
cs
and
in
xor
push
inc
and
push
or
xor
repz
ja
rorb
rol
sub
mov
add
outsl
pop
pusha
scas
inc
arpl
test
adc
fsubp
inc
cld
inc
in
xchg
cmp
leave
cmp
pop
cmc
sub
ljmp
movsb
adc
xchg
ret
mov
and
jnp
mov
xor
pop
mov
aaa
and
ja
cmp
call
pop
mov
add
out
jae
add
or
and
mov
xchg
scas
sub
stos
or
sbbb
popa
mov
and
push
pop
pusha
jge
mov
outsl
xchg
out
sub
jp
jg
in
fs
fwait
loop
popa
mov
repz
jg
dec
mov
jae
sub
mov
pop
aas
dec
enter
test
int
push
sub
nop
ja
adc
xchg
mov
mov
insl
mov
pop
jo
and
mov
push
xchg
sub
lock
or
outsl
or
mov
dec
push
jecxz
dec
movsb
cs
fsubl
and
dec
adc
push
stos
aaa
or
xor
testl
ja
inc
adc
jp
inc
mov
or
hlt
data16
imul
sub
push
repz
call
xchg
adc
ja
xor
lret
inc
stos
es
int
lcall
or
rcll
aas
loop
adc
sub
adc
adc
or
and
jmp
mov
repnz
rcl
gs
jge
adc
je
xchg
sbb
cs
cmp
dec
mov
mov
xchg
sub
push
or
mov
xchg
repz
outsb
inc
mov
jmp
icebp
or
inc
into
stc
mov
popf
loope
insl
in
cmp
xor
repnz
ret
pop
xor
cmp
adc
test
and
cmc
xor
hlt
xchg
jge
pop
lcall
sub
fdivs
push
cmc
pop
or
lcall
pushl
sbb
mov
stc
add
pushf
int
and
mov
popa
gs
sarb
cld
push
inc
and
lock
inc
lret
inc
add
ljmp
adc
ret
mov
div
xchg
or
incl
lock
xchg
dec
arpl
sbb
cmpsl
inc
xchg
jmp
lahf
or
xchg
loopne
es
das
pushf
fcmovnbe
ror
mov
cli
mov
mov
add
ret
jo,pn
lcall
outsl
add
stos
add
add
dec
icebp
sub
jle
fcmovne
push
aad
xorl
lds
cmp
jne
cmp
aam
push
stos
shl
mov
cmp
adcl
out
xor
add
or
add
arpl
adc
adcl
xor
out
mov
das
push
ret
and
repnz
mov
int
pop
mov
sbb
push
mov
movsb
mov
push
test
ds
push
dec
lock
sbb
mov
inc
mov
pop
and
out
jle
sub
push
mov
jo
mov
mov
fcomip
jns
push
xor
push
arpl
xor
je
mov
jle
push
lcall
dec
daa
dec
mov
mov
sbb
add
pushf
dec
out
outsl
out
xchg
inc
dec
aaa
xchg
cmp
or
adc
rclb
ja
dec
fs
cmp
mov
sub
mov
shlb
shl
mov
sbb
mov
addl
adc
out
xor
jmp
out
adc
ljmp
aas
ja
lods
pop
scas
ljmp
call
pushf
inc
xchg
lds
dec
inc
adc
cmp
adc
dec
xchg
nop
inc
mov
mov
mov
out
jo
nop
xor
xor
mov
lods
das
loop
mov
loopne
inc
jmp
lds
adc
mov
xlat
xor
jmp
mov
data16
ret
pop
sub
or
dec
lcall
inc
add
inc
cmp
cmpb
jns
or
push
loope
sti
push
push
pushf
mov
in
sub
jo
lock
push
push
test
loope,pt
call
push
pusha
mov
out
les
xor
push
xchg
sti
push
mov
dec
fdiv
or
mov
jns
icebp
fcoms
and
test
ljmp
inc
jl
mov
mov
cmpsb
sbb
cli
cli
and
scas
cli
decl
mov
imul
cmpsb
push
ljmp
and
cltd
jne
clc
movsb
push
dec
jmp
jmp
inc
paddsb
out
or
push
test
inc
cli
mov
in
pop
insb
rorb
jbe
mov
out
test
mov
int3
pop
jp
sub
call
es
xor
push
mov
add
push
pop
sbb
cmp
movsl
push
xor
jge
dec
xchg
xchg
fildll
ljmp
sbb
pushf
dec
lret
cwtl
jae
popa
in
sbb
leave
mov
outsb
insb
test
aaa
lods
test
dec
lcall
leave
dec
sub
add
or
int3
data16
lods
sbb
insl
add
call
cmp
fwait
push
mov
adc
jge
std
pop
fisttpll
mov
jmp
xchg
clc
pop
fcmovb
lcall
mov
fildll
ljmp
test
mov
xor
jg
push
call
lods
or
pusha
sahf
int3
lahf
shrl
sti
cmpsb
mov
out
mov
inc
xor
movb
lock
cmp
dec
loopne
jb
pop
cltd
mov
sub
sbb
aad
sbb
adc
pushl
and
cmpsb
mov
add
incl
ljmp
rcll
aas
in
out
xchg
lret
inc
leave
mov
dec
xchg
xor
lcall
and
mov
cmp
addr16
hlt
aas
xchg
mov
dec
pop
push
lahf
imul
fsts
decl
jge
stc
mov
dec
jbe
xchg
aaa
fisubrl
xor
cmpsb
or
pop
or
in
jecxz
clc
or
fsubrs
shrb
icebp
subb
loop
or
iret
sbb
incl
push
sub
mov
mov
rol
movsb
clc
leave
inc
lods
aaa
or
or
push
xchg
repnz
call
repz
outsb
xor
cs
push
out
sub
movsl
lcall
sbb
ljmp
cmp
mov
mov
cmp
addl
xchg
mov
lret
pop
push
lods
jge
addb
loop
jecxz
nop
cmp
cmpsl
ja
jg
test
push
mov
cmp
dec
jb
call
add
inc
fs
subb
adc
mov
sar
pop
mov
or
test
nop
mov
roll
adc
mov
jg
out
fstl
adc
arpl
mov
add
mov
je
add
mov
addr16
test
daa
jmp
aam
jle
sti
mov
clc
bound
cmp
or
outsb
xchg
ljmp
testl
popl
or
mov
fadd
cltd
aas
cmp
mov
dec
adc
dec
jnp
cwtl
and
inc
add
dec
cli
add
ret
dec
loopne
insb
mov
incl
push
push
es
push
jo
lods
adc
ljmp
shll
popa
dec
sbb
jmp
test
cmpsb
cld
shlb
pop
ds
fs
and
push
sbb
push
or
fwait
jle
lods
xchg
bound
mov
lcall
mov
dec
mov
cltd
inc
and
loopne
js
mov
in
cwtl
mov
mov
push
xor
es
dec
pushf
incl
lods
lock
adc
push
mov
enter
aam
ljmp
out
bound
or
xchg
outsb
sti
sahf
cmpsb
mov
loope
inc
and
lods
addr16
cli
add
cli
inc
mov
fsubs
mov
pop
loope
xchg
imul
cmc
fdivr
incl
pop
xor
xchg
icebp
jg
xchg
or
mov
sub
daa
stc
fwait
in
jo
jo
sub
cld
scas
clc
nop
imul
mov
cli
jg
push
inc
call
pop
pop
xor
pop
pop
pop
mov
mov
dec
pop
ret
scas
mov
mov
add
dec
and
gs
mov
sbb
mov
push
push
repnz
push
shl
and
stos
mov
scas
inc
xchg
pushl
pusha
inc
dec
stos
or
adc
cmpsl
fistps
dec
jecxz
cmp
lahf
xchg
cmp
out
push
and
gs
mov
incl
mov
add
inc
jno
bound
call
std
xchg
fistl
add
sub
or
push
dec
jae
adc
xchg
decl
call
icebp
mov
fcomps
imul
xor
insb
jecxz
push
ss
mov
xor
xchg
aaa
mov
fistpll
adc
mov
jo
repnz
int
cwtl
push
ret
flds
pop
sbb
xchg
ret
dec
sbb
or
xor
movsb
movsb
cmc
inc
jb
mov
repnz
push
bound
pushl
std
shl
or
xor
mov
or
repz
decl
xchg
dec
mov
les
mov
nop
in
push
stc
addb
pop
hlt
in
negl
mov
xchg
xor
lcall
insl
sbb
jmp
sub
stos
sbb
dec
lods
lods
cwtl
cmp
jo
mov
incl
repz
mov
sti
cmc
jg
push
and
inc
jae
push
jno
out
xor
push
mov
fdivrl
jmp
sub
sub
sub
popf
mov
mov
push
add
pop
jno
aam
das
dec
shr
aad
inc
cs
dec
inc
hlt
das
cmpsb
lock
inc
and
xchg
add
lcall
test
cmp
push
ffreep
icebp
sub
in
jmp
call
stos
mov
sbbl
push
or
fucomp
jno
ficomps
jp
andb
ljmp
iret
aas
sub
inc
popa
lcall
inc
adc
jle
push
jg
push
loopne
add
dec
lcall
les
test
cmc
imul
inc
cmp
ss
cmp
ficoml
adc
or
dec
into
mov
sbb
test
xor
xor
pushf
ja
mov
imul
loopne
fdivrs
mov
addr16
push
mov
js
adc
pop
sahf
push
icebp
stos
mov
push
out
lcall
jae
daa
idivl
push
sbb
sbb
fsubr
xor
mov
and
in
inc
mov
loopne
lea
mov
pop
adc
or
adc
lcall
mov
in
jg
jnp
or
test
fcomp
or
pusha
add
mov
add
sub
fnstsw
outsl
fs
incl
daa
mov
leave
cmp
mov
ljmp
xchg
mov
stc
xchg
jmp
repz
lret
adc
sub
jns
mov
loopne
pop
fidivs
nop
sbb
call
mov
push
adc
xchg
or
cmp
mov
sbb
stc
cmp
mov
icebp
push
push
bound
hlt
jbe
adcb
sbb
cli
jg
test
sahf
push
ficoml
jmp
ljmp
xor
push
adc
lods
xchg
insl
push
cmp
add
mov
test
push
cld
lcall
push
cmp
xor
call
push
push
inc
les
inc
pop
fcomip
dec
test
into
xlat
adc
xor
push
mov
add
dec
or
pushl
push
sahf
adc
mov
into
rorb
dec
mov
cld
adc
or
test
mov
inc
mov
mov
int3
in
pop
sbb
mov
stos
push
and
or
pmaddwd
pushl
cmp
gs
xchg
push
xchg
scas
cmp
pop
mov
dec
rolb
mov
xchg
cmp
adc
mov
repz
xchg
int3
dec
dec
cmp
ljmp
xor
sbb
add
push
jg
mov
or
mov
ljmp
and
outsl
sub
lock
xor
jne
add
or
lcall
aad
adc
aam
daa
repnz
dec
fcomip
pop
fidivl
sbb
sub
lods
sbb
insl
mov
pushl
in
sbb
sahf
outsb
cmpb
cld
lock
add
mov
test
jp
movsl
lock
testl
rcl
decl
and
aaa
push
sbb
or
push
cmpsb
xor
mov
sbb
fsts
clc
scas
clc
lcall
mov
adc
pop
ss
and
lea
sbb
fcomi
ljmp
pop
dec
xor
sbb
rorl
aas
mov
jns
pushl
cli
mov
inc
pop
stos
mov
repnz
mov
xlat
rorl
out
loop
cmp
or
jae
mov
fs
fsts
inc
xor
gs
fmuls
dec
mov
cltd
sar
in
sarb
das
xchg
addr16
fnstcw
div
mov
adc
iret
and
pop
decl
nop
and
xchg
push
or
stos
mov
test
pop
cltd
sbb
push
xchg
mov
stos
xor
jle
sub
jg
jne
outsb
movsl
add
ljmp
out
xchg
ljmpw
add
dec
mul
pop
iret
sarl
movsl
sti
cmpsl
aas
lret
stos
pop
dec
or
jmp
into
fldcw
mov
pop
out
add
adc
filds
or
bnd
les
lds
shrl
jle
std
pop
hlt
decl
call
jb
aad
xor
cmpsl
add
out
or
mov
nop
mov
and
dec
xor
or
or
aas
popa
sar
decl
das
int
into
and
xchg
pop
cmpsl
lods
scas
or
inc
enterw
mov
add
xchg
jne
fldl
push
sub
cli
pushl
inc
fcoml
mov
mov
jno
jg
pop
jle
cmp
popl
cmp
and
or
inc
jbe
das
shrb
fcoml
sbb
sub
sbb
mov
mov
jmp
mov
dec
sbb
lods
outsb
inc
in
leave
jg
aam
mov
jl
mov
cmp
cmp
in
insl
or
fwait
adc
out
or
xor
mov
lods
push
mov
mov
outsl
rcrl
js
inc
pop
pop
lea
inc
xchg
sbb
cltd
sbbb
dec
mov
mov
lock
xchg
cwtl
into
js
cmp
js
hlt
and
xchg
cmpl
movsl
hlt
cmc
fistpl
inc
jmp
scas
nop
pop
pop
shll
call
daa
xor
lock
sbb
inc
push
sbbl
pop
into
mov
fnstcw
adc
and
cmp
xor
pop
clc
and
jg
mov
test
pop
into
xchg
mov
lcall
xchg
sub
and
stos
fs
iret
in
out
mov
mov
cld
iret
jl
jns
xor
inc
jns
cmp
stc
notb
xor
lret
xchg
add
sub
mov
push
jle
dec
sti
cmp
sahf
push
mov
rcrb
jmp
call
idiv
mov
push
insl
aaa
es
sub
mov
lret
stc
add
cmp
in
cld
cmp
push
repnz
mov
lcall
fdivs
push
es
jp
add
push
xor
or
inc
mov
jecxz
in
adc
xchg
inc
dec
and
push
call
movsb
loope
or
and
sbb
test
es
mov
cs
lcall
cmp
mov
mov
mov
leave
cwtl
test
dec
adc
rcr
cli
cmp
fidivrs
shlb
cmp
cmp
bound
sahf
adc
andl
imulb
push
xor
push
aas
loope
jp
rorb
lahf
sbb
mov
das
sbb
lods
xor
push
cld
stc
and
lods
sti
jne
icebp
jb
gs
test
sub
add
push
ljmp
mov
dec
ss
adc
mov
xchg
xchg
xlat
jmp
ret
jmp
push
aas
scas
les
cmp
cmp
fidivrs
incl
cs
mulb
loope
mov
rcrl
ret
jae
dec
aam
pop
mov
lock
out
mov
aad
bound
xor
jg
dec
and
pop
frstor
pop
jns
lcall
dec
mov
cmp
dec
or
cmp
pop
dec
out
mov
mov
push
or
ror
fiadds
lcall
adc
data16
int3
jnp
add
lcall
sbb
fnsave
insl
fisttps
insb
jne
mov
jl
out
nop
test
jmp
sbb
loop
rcll
pop
jne
sbb
cmp
outsl
add
or
dec
out
gs
jb
dec
sbb
mov
push
rorl
push
loopne
rep
xchg
inc
test
aam
loope
int
push
les
lret
shr
lea
xchg
shlb
adc
data16
in
or
mov
pushl
dec
aaa
mov
rorl
aaa
xchg
pop
add
lahf
pop
leave
insl
cmp
or
jge,pn
incl
xor
jecxz
insb
sub
pushf
lea
data16
outsl
repz
mov
std
pushl
fbstp
lock
hlt
rcrb
addr16
cmpsl
sbb
and
incl
stmxcsr
sbb
mov
xchg
jb
pop
and
mov
fsubl
data16
sar
cmp
sub
pop
cmpsl
je
int
cmp
lods
jg
into
sbbb
sbb
cli
shrl
mov
lcall
in
mov
push
ret
fsubrs
jecxz
mov
pop
out
mov
mov
lcall
iret
dec
sub
add
dec
lds
dec
dec
je
xor
cmp
mov
cmpl
inc
fistl
ljmp
or
cwtl
mov
outsb
out
cmc
adc
sbb
test
push
pop
mov
mov
out
sub
dec
icebp
pop
int3
sub
out
push
mov
xor
fsubr
xor
and
xchg
sbb
filds
inc
cmp
in
scas
movsb
lcall
pushl
imulb
insb
push
ficompl
cmpsb
add
pop
in
sbbl
repz
loop
std
fwait
test
push
mov
xchg
sti
inc
lock
sahf
pop
fwait
jecxz,pn
js
pop
fldcw
scas
inc
pusha
xchg
and
je
imul
jmp
cmpsb
dec
hlt
stos
lcall
fs
mov
or
leave
push
cmp
aaa
or
push
in
clc
call
incl
cmp
cmpb
cmp
xor
leave
inc
icebp
mov
and
dec
mov
cmp
or
jl
sbb
rol
sbb
jg
stos
mov
shlb
xchg
xchg
jne
insb
jb
iret
and
add
jmp
test
jns
mov
dec
mov
dec
mov
mov
sar
ljmp
xlat
add
cmpsl
mov
mov
das
leave
push
sbb
scas
fsub
mov
incl
pop
loopne
mov
xor
test
jno
push
jns
push
in
pop
xor
or
jmp
js
popa
mov
das
sub
negb
ljmp
dec
loopne
push
ljmp
xor
mov
pop
mov
ljmp
xchg
sbb
and
mov
cmp
pop
jne
cmp
jmp
push
sub
js
jns
push
jecxz
stos
das
or
int
push
adc
mov
sub
pslld
lcall
pop
hlt
mov
shll
fwait
push
sub
popa
cltd
out
mov
scas
jno
notl
clc
pop
hlt
test
mov
xchg
sub
imul
arpl
or
ljmp
jnp
sbb
outsl
scas
cmp
ja
jmp
out
xchg
xchg
and
mov
sbb
mov
icebp
popf
stos
mov
mov
out
incl
movsl
sbb
cmp
pop
add
adc
addb
incl
xchg
inc
sbb
sub
xor
jmp
mov
out
or
push
movzbl
insl
sti
gs
inc
push
shlb
incl
ret
cmp
shlb
test
mov
jb
mov
and
push
rcrb
pop
inc
dec
sbb
pushf
or
pop
inc
negb
mov
cmpsb
ljmp
repz
scas
shrl
je
shll
pop
push
mov
mov
loope
dec
push
sbb
inc
out
jae
mov
lea
xchg
dec
jmp
sub
pop
lcall
inc
icebp
rcll
clc
inc
lahf
fisubl
and
add
inc
out
lods
sbb
push
mov
aad
jne
xor
mov
mov
cmp
or
cmp
adc
std
push
sub
int
xor
mov
cld
mov
dec
mov
inc
xor
pinsrw
loope
jbe
sbb
pop
push
adc
data16
cmpsb
fbld
xor
or
or
cmp
add
decl
add
jo
pop
loopne
pushl
dec
xor
enter
push
addr16
cmp
jecxz
cmpb
jnp
push
call
jle
bound
and
scas
xchg
out
fistps
insb
rorl
ret
leave
pop
push
fs
lcall
dec
push
mov
test
cmp
notl
ror
loopne
dec
int
mov
xchg
arpl
ljmp
xchg
cmc
call
repnz
test
add
inc
push
sub
aad
dec
sub
aas
shrb
out
testb
movsb
xchg
mov
call
xchg
cmp
ret
pop
data16
inc
jmp
jecxz
mov
cmpsl
loope
std
int3
call
jle
ljmp
nop
mov
mov
cmp
sbb
lock
into
lret
bound
es
adc
iret
add
dec
ds
scas
mov
mov
fs
mov
inc
lcall
jnp
scas
fdivs
sbbl
int
rcr
cmp
cli
incl
pop
cwtl
pop
xchg
mov
in
test
sbb
mov
shll
cmpsl
jg
push
fisubrl
add
dec
push
test
mov
or
rcpps
mov
mov
negb
mov
mov
mov
test
jmp
stos
in
jge
cmc
mov
mov
add
test
movsl
or
out
pop
int3
dec
outsb
adc
adc
aad
jno
xor
add
inc
stos
inc
cld
xor
or
mov
jne
insl
out
cmp
in
add
sub
decl
or
pop
or
ja
sbb
inc
jno
dec
pop
mov
sbb
pusha
xchg
popa
adc
fcomip
lcall
out
stc
pop
fdivrs
mov
xor
mov
or
ljmp
sbb
mov
cmp
and
push
ljmp
dec
out
mov
imul
inc
jb
jg
fwait
hlt
cmp
mov
mov
iret
cmp
mov
test
mov
fnstsw
push
add
fistpll
xor
or
or
test
movsb
aas
and
subb
out
out
clc
inc
pop
inc
in
mov
sub
cmpsb
mov
dec
sub
xchg
mull
jle
sub
push
repz
data16
mov
cli
lret
xor
lods
sub
xchg
decl
int3
fistl
inc
into
dec
loop
andb
mov
call
scas
jle
gs
fwait
xchg
dec
xchg
sbb
and
sarl
cwtl
ljmp
adcl
sub
xchg
imul
sub
pop
mov
xor
das
and
incl
lret
js
lods
cmp
or
loopne
cltd
out
push
sub
pop
idivb
call
pop
sbb
in
mov
dec
mov
insb
stos
xchg
or
test
dec
fdivrl
mov
lret
jg
pop
cmpsb
push
mov
shlb
sub
mov
pushl
inc
xor
or
mov
scas
cli
decl
mov
jl
jle
jg
add
in
rcll
lock
les
push
cs
gs
inc
and
ljmp
mov
or
lock
inc
outsb
call
stos
mov
inc
xchg
movsl
lds
xor
push
rclb
mov
ss
shll
push
int3
bound
mov
decl
push
fcomps
pop
jl
div
cs
jecxz
insb
orb
in
inc
rorb
mov
outsl
xor
sbb
xchg
or
leave
push
dec
mov
rolb
push
push
pop
loopne
fisubrl
cmp
adcb
inc
push
movsb
stos
addr16
jb
popa
dec
pop
mov
dec
or
cmp
or
fistpll
push
jecxz
jae
fwait
shlb
cld
ljmp
imul
xor
sbb
add
je
lods
pop
ds
incl
jl
xchg
inc
data16
scas
shrl
xor
insl
shrl
das
daa
call
in
cmp
daa
dec
push
push
xor
test
arpl
add
pusha
out
pop
and
dec
ss
xchg
lea
mov
cmp
jmp
pushf
xchg
outsl
scas
inc
adc
push
enter
imul
dec
jbe
and
pop
jns
iret
push
pop
dec
cld
jns
lret
pop
out
jecxz
loope
popa
popf
ss
ss
mov
out
pushl
ss
cwtl
lds
in
mov
sbb
scas
test
dec
fidivs
std
sbb
and
jmp
and
repz
clc
inc
decl
pop
ret
jle
cmc
jb
cli
or
cli
cs
mov
sub
push
push
fs
mov
decl
test
push
adc
adc
lret
push
sbb
idivl
mov
enter
stos
loop
int3
jne
pusha
cmpsb
jecxz
mov
fdivrs
push
fcoms
jmp
jmp
ds
mov
add
jae
movsb
add
mov
ljmp
insb
adc
sub
test
xchg
sbb
shrb
cs
stos
mov
xchg
add
inc
dec
daa
inc
mov
push
lock
jnp
cmp
aas
dec
insb
out
lock
daa
pop
dec
lret
inc
imul
mov
sbb
jns
dec
test
lea
or
sub
jmp
addr16
xlat
push
ficomps
bound
fldt
lcall
push
jge
mov
nop
mov
sub
jns
rcrl
stos
jmp
test
xchg
mov
mov
jp
andl
ljmp
sti
xchg
xor
cmp
scas
ret
ret
fs
jb
sbb
sbb
push
jae
xchg
mov
hlt
pusha
clc
loopne
nop
lcall
andb
lcall
mov
lcall
sti
dec
dec
testb
and
jg
or
ds
mov
or
mov
pop
xor
mov
sahf
mov
jne
stos
mov
je
mov
cli
out
insl
imul
mov
lret
xchg
sub
fwait
mov
leave
jecxz
jo
leave
xor
lock
jb
int3
ret
push
dec
out
data16
fstps
xor
sbb
lods
mov
pop
xor
ds
sub
or
aad
push
rclb
dec
push
testl
ljmp
es
push
lcall
lcall
push
nop
push
ret
aas
jo
fisubs
fmull
xor
sub
xor
and
ss
fisttpl
add
xchg
testl
mov
fstl
mov
and
add
push
push
test
andb
incb
popa
adcb
movb
sbb
mov
push
mov
ret
loope
addr16
jne
sbb
pop
arpl
repnz
push
add
ljmp
jmp
cmp
sub
and
add
bound
mov
adc
push
jl
and
push
int3
mov
std
xchg
loope
push
add
call
call
mov
fadds
mov
sete
aas
sarb
leave
and
loopne
test
mov
jnp
mov
fisttps
dec
or
sbb
fisttps
dec
pop
xor
xchg
aas
jae
jnp
fs
jg
call
in
sub
jne
sbb
mov
in
push
neg
pop
mov
popa
mov
adc
jp
mov
cmp
stos
jg
add
jg
xor
jle
fsubl
mov
arpl
mov
ror
lds
xor
sti
or
and
cmp
dec
fisubrl
mov
iret
jp
adc
mov
dec
es
fidivs
rorb
mov
pushf
ret
push
flds
mov
jmp
or
xchg
lahf
movsl
and
pop
push
xchg
adc
mulb
sbb
inc
sub
lods
add
inc
mov
mov
sti
pushl
pop
inc
ljmp
mov
int3
in
out
add
xchg
and
cli
jmp
add
jne
jo
sbb
orb
sbb
push
aas
add
daa
add
inc
in
lock
dec
loopne
aas
mov
pop
ljmp
xorb
out
into
xor
dec
int
popa
and
mov
push
mov
xor
pop
ret
js
dec
inc
dec
sarl
mov
inc
xchg
push
mov
xchg
call
xchg
adc
push
mov
addr16
and
or
push
insl
or
push
mov
mov
jnp
pop
in
mov
lret
adc
pop
stc
inc
jmp
fwait
pop
loopne
jle
xor
daa
dec
pop
push
in
aas
sbb
mov
ljmp
jns
js
pop
mov
scas
cmpsb
js
mov
sti
xor
jg
aas
nop
adc
imul
ljmp
outsb
dec
xor
outsl
or
insb
mov
test
sbb
jno
pop
mov
decl
xchg
fisubs
fstl
xchg
cltd
call
popf
inc
popf
add
outsl
inc
dec
adc
pcmpeqd
pop
and
dec
xchg
mov
mov
cmp
scas
shll
and
pushf
ret
shlb
fwait
ud0
pusha
and
xchg
mov
sbb
ljmp
int
fdivrl
mov
cmp
out
mov
das
push
dec
mov
cld
imull
stc
jne
pushf
dec
jl
decl
inc
sbb
or
notl
sub
lcall
call
cmp
xor
std
out
jp
mov
hlt
call
int
nop
or
mov
shrb
test
pop
mov
xchg
adc
cmp
push
dec
push
mov
fbstp
adc
or
or
xchg
push
je
lretw
in
ret
rcrl
test
incl
pusha
cltd
std
gs
sarb
mov
ret
sti
and
inc
gs
js
jmp
ds
shl
cmc
xlat
mov
sbb
xchg
jo
mov
imulb
call
ret
mov
jno
jmp
xor
dec
rcrl
mov
xchg
mov
icebp
jae
test
outsb
rcll
adc
jo
push
stos
jl
adc
fists
jp
pop
pop
inc
sbb
inc
dec
lods
push
mov
pushf
mov
outsb
ret
imul
jmp
xor
jno
xchg
loopne
sbb
fsubrs
mov
fmulp
lods
idivl
js
sbbl
incb
dec
pop
mov
incb
adc
and
jmp
repnz
sub
pop
push
or
repz
sub
mov
push
out
sbb
hlt
fs
push
dec
cmp
rolb
mov
stc
xor
mov
and
aam
es
cmpsb
ror
sbb
incl
adc
inc
push
adc
cld
and
cmc
neg
in
stc
add
shl
ljmp
jo
das
sub
xchg
or
ljmp
ljmp
push
pop
xchg
aad
dec
jp
out
adc
fstps
cmpsb
mov
mov
repnz
sbb
cmc
ljmp
inc
outsl
fs
add
inc
out
sub
les
mov
aam
push
add
or
out
decl
jge
and
daa
lock
outsb
xchg
nop
lret
clc
xchg
jmp
mov
stos
inc
rclb
mov
jo
cs
cmp
andb
cmp
xchg
push
push
mov
movapd
es
adc
idiv
stos
subb
push
das
pmaxub
in
xchg
shlb
lea
stos
orl
shl
rcll
add
pushl
xlat
dec
and
dec
inc
or
pushl
ja
pop
dec
mov
and
mov
orb
out
and
cmovb
incl
not
repnz
sar
pop
adcl
mov
ljmp
incl
loopne
sbb
fmull
and
fildll
enter
aas
test
data16
push
pop
rcrb
add
in
out
cmp
sub
sub
ljmp
test
ret
fsin
sbb
fs
xchg
and
movsb
mov
jno
sahf
int3
add
bound
fnstcw
imull
je
xor
jmp
clc
mov
add
jge
pop
xchg
xchg
cmpsb
pushl
decl
aam
lcall
adc
out
call
subl
push
pop
lret
rolb
outsb
inc
test
mov
decl
jg
repz
sub
lea
pop
fnstenv
and
sti
cmc
cmc
mul
mov
jmp
xor
sbb
mov
dec
stos
arpl
je
loopne
dec
push
xchg
outsl
fnstenv
std
incl
pop
push
push
jnp
subl
push
jne
daa
pop
xchg
ret
push
mov
mov
or
std
loope
je
pop
push
lds
add
incl
ja
lea
mov
aas
mov
add
out
cmp
clc
push
js
ljmp
out
cltd
add
out
xchg
adc
lcall
or
test
cmp
ss
pop
xor
imul
test
iret
mov
pop
xchg
ljmp
or
pop
push
ret
adc
or
stc
in
or
dec
decl
adc
mov
aaa
fidivl
call
outsl
pop
lret
test
aam
test
lea
call
lcall
mov
test
ret
icebp
ljmp
xchg
or
out
fucomi
movsl
cmp
fs
xchg
dec
daa
lahf
lcall
rcrl
mov
adc
mov
xor
lcall
jb
loopne
dec
mov
test
movsb
or
mov
sub
xchg
insl
dec
dec
sub
fdiv
pop
add
fld
dec
insl
sbb
push
jae
and
pop
jns
lock
mov
mov
jg
jg
test
xchg
xor
and
out
hlt
jge
sbb
mov
fsubrs
mov
js
xor
subb
and
iret
add
sub
sub
pop
call
test
call
xchg
clc
or
clc
cmp
mov
loope
dec
push
jmp
sahf
mov
mov
push
ljmp
scas
mov
dec
mov
aas
jge
test
call
outsb
inc
inc
jmp
sub
ja
mov
int3
ljmp
data16
leave
jge
dec
shl
mov
sub
push
xchg
and
or
xchg
stos
test
mov
xor
cmp
in
mov
jg
andl
xor
imul
xchg
jg
rcll
popa
or
fld
adc
stos
or
stc
xrelease
imul
cwtl
imulb
loope
data16
mov
sbb
sbb
jmp
rep
out
inc
das
rcrl
pop
ja
mov
inc
push
hlt
cmp
incl
outsb
dec
xor
cmpl
frstor
or
push
push
ss
dec
mov
xchg
cmp
push
mov
in
movsl
int
rsm
pop
cltd
pop
sbb
roll
inc
dec
mov
xchg
sti
in
fs
test
aad
ja
test
incl
xor
ret
xlat
pop
int3
adc
mov
or
call
std
call
and
jns
loopne
mov
push
daa
aam
out
cmc
pop
decl
icebp
push
js
jo
movsl
popa
rcrb
movsb
jne
leave
ret
movsb
test
and
add
sbb
mov
loope
out
jb
push
sbb
aad
xor
push
push
cs
cmpsl
cmp
adc
call
test
lods
jns
test
xlat
into
dec
orb
incl
cwtl
pop
shlb
dec
jl
enter
xchg
decl
in
jl
shlb
inc
adc
pop
add
jle
xchg
int3
jnp
push
int3
leave
sar
xchg
stos
cmp
imul
inc
clc
xor
pushl
jo
sbb
lods
hlt
std
push
push
mov
lret
push
inc
adc
icebp
call
sub
inc
cmp
mov
push
xchg
jl
sub
sbbb
or
ljmp
test
add
adc
dec
lea
bound
aam
xor
jg
mov
push
das
iret
or
xorb
jno
sub
lods
pop
call
xor
cmc
rcll
pop
dec
imul
mov
inc
loopnew
mov
hlt
xchg
pushl
mov
and
pop
iret
pop
sbb
add
arpl
ljmp
and
setle
mov
cmp
lock
mov
movsl
imul
fadds
xor
add
jmp
out
movsl
xor
lcall
std
insb
test
enter
add
sub
dec
in
jns
in
jg
and
repz
jle
push
mov
pushf
enter
pop
jno
ljmp
add
int3
scas
data16
dec
sbb
push
mov
cmp
movsb
xor
aam
js
mov
adc
mov
xchg
cli
sbb
data16
push
int3
jecxz
stos
insb
mov
loop
fnstcw
stos
xor
ljmp
cmp
stos
pop
adc
int3
imul
inc
mov
mov
subl
cmp
mov
pop
mov
cmp
pop
mov
pop
add
jmp
dec
sbb
aaa
pop
sub
mov
fninit
sub
or
cmp
cwtl
xchg
mov
into
aad
lods
cmp
pop
hlt
mov
pop
and
ds
dec
lods
repz
test
dec
mov
or
cld
xor
sbb
lret
jg
push
jns
nop
mov
iret
pop
cwtl
push
imul
incl
sbb
es
ret
cmp
dec
or
test
jg
mov
cltd
cmc
aas
sbb
jg
push
inc
into
sub
pop
shrl
mov
xchg
lahf
fiadds
mov
push
sub
xchg
cwtl
dec
adc
aas
loop
fcomip
xchg
push
inc
cmp
lods
fbld
imul
pop
es
and
push
mov
and
sbb
jecxz
enter
mov
push
inc
dec
add
jne
incl
sbb
sub
movsb
adc
fistl
scas
loope
hlt
mov
daa
pushl
shrl
dec
bsf
sarb
inc
call
cltd
xchg
call
int3
stc
negb
mov
arpl
arpl
pop
xchg
xchg
rorl
xchg
inc
cmp
mov
fdivrs
in
pop
scas
jbe
loopne
cmpsl
in
stos
mov
lahf
pop
or
shll
inc
xchg
scas
push
push
mov
mov
aam
adc
mov
hlt
xchg
cmp
call
clc
xchg
jge
sbb
enter
clc
jo
les
cld
les
xor
cmp
inc
pop
das
pop
mov
cmp
pop
inc
scas
or
out
mov
cmc
jmp
mov
hlt
incl
mov
xchg
mov
dec
adc
mov
pop
data16
push
sub
in
int
pusha
mov
push
lock
jmp
push
ja
das
dec
sahf
fildl
or
idivb
arpl
aam
cmpsb
lahf
out
dec
sar
incl
sub
pop
add
sbb
push
cli
inc
lea
aad
pop
jnp
pop
orb
mov
hlt
cmp
pop
xchg
push
out
int3
sbb
rolb
mov
lcall
jle
adcl
or
das
repnz
sbb
lods
leave
adc
loopne
xchg
ljmp
out
stos
es
sti
inc
fs
stos
jne
adcb
jmp
cmpsl
jl
xor
sbb
mov
sub
pop
inc
std
out
jo
sub
popa
ror
mov
aam
incl
or
jg
and
pop
call
sub
imul
lods
cld
mov
or
call
mov
nop
inc
mov
jno,pt
pop
dec
jg
and
repnz
push
cld
lret
loopne
into
pop
xchg
call
aaa
jecxz
subb
inc
ljmp
into
xor
fisttpl
push
lock
dec
mov
ud1
jecxz
push
fisttps
mov
inc
jns
in
jb
popa
and
int3
out
pop
add
mov
ret
fwait
addl
xchg
sahf
cld
xlat
int3
jg
cli
jae
insb
orb
inc
dec
add
and
ret
in
xorb
js
pushl
cmp
mov
dec
pop
adc
dec
cld
fbld
scas
bnd
icebp
fsubp
mov
dec
mov
push
xchg
jmp
pop
lock
jge
imul
sub
xor
shr
adc
sub
je
clc
outsb
xlat
and
xor
ret
mov
in
std
jg
loop
add
loopne
inc
mov
stos
sbb
lods
cmp
xor
aaa
pusha
jns
out
outsl
rclb
sbb
cli
push
mov
in
pop
cmp
out
push
pushf
gs
loopne
mov
imul
cmp
mov
jb
sarl
cld
mov
mov
inc
in
mov
scas
fisttpll
test
lret
push
mov
inc
xchg
pop
pop
movups
cmp
ljmp
inc
mov
lahf
mov
adc
scas
es
adc
les
lock
rolb
push
jg
in
xor
pushl
sbb
jne
xchg
pop
imulb
jg
and
cs
cmpsb
jo
lcall
add
fmuls
roll
pop
push
and
or
lcall
xor
inc
hlt
add
mov
sbb
mov
lcall
sahf
lcall
int
push
adc
push
pop
xor
out
mov
and
inc
jg
jno
call
dec
xchg
jg
repz
not
nop
lods
arpl
jnp
repnz
mov
scas
cli
incl
inc
pop
xchg
fsts
aam
add
cmpl
pop
in
loope
push
xchg
xlat
mull
outsb
lods
les
mov
sbb
pop
mov
mov
mov
fnsave
inc
inc
sub
lock
ret
bound
or
xor
ljmp
pop
loopne
ss
int
std
ja
or
ljmp
sahf
cs
mov
loopne
dec
in
push
repnz
sti
and
cwtl
push
daa
sub
jle
nop
imul
dec
xchg
in
jg
inc
icebp
mov
ljmp
stos
xchg
testb
adc
out
pop
push
jae
cltd
adc
mov
jns
lcall
xor
push
or
enter
int
fisubrl
insb
leave
in
mov
insb
jecxz
call
in
clc
mov
inc
out
into
leave
dec
xor
into
decl
cmpsl
jge
movsb
fsubrl
stc
loop
xorb
mov
lock
stos
jns
sbb
or
test
push
cltd
xor
sub
mov
jmp
sahf
hlt
js
push
xchg
comiss
push
cld
jmp
subps
in
or
xchg
cmpsl
add
lcall
jmp
mov
mov
lahf
jae
testb
push
fldcw
xor
fistps
jmp
lock
add
fs
pop
bound
movsb
jo
in
rorl
pop
push
mov
orb
loope
pop
adcb
xchg
pop
jo
and
fsubrp
xrelease
sbb
in
pushl
test
jp
jecxz
jno
jmp
js
shll
stc
in
scas
bound
das
call
jb
scas
inc
pushaw
test
ljmp
push
cmp
add
cmpsl
nop
cld
inc
loop
or
or
lcall
xchg
decl
mov
fsts
jge
popf
sti
push
jg
pop
mov
sarb
jge
out
in
les
out
jno
ljmp
ljmp
pop
mov
mov
fnstsw
icebp
pop
jb
lods
xor
imul
call
je
fildll
add
fistps
mov
add
push
inc
imul
test
or
lcall
mov
cmp
pop
inc
aam
mov
out
cli
cld
incl
sub
cmpsl
sub
in
mov
push
add
and
jg
and
in
xor
out
mov
mov
in
incl
in
xor
adc
jmp
enter
mov
lods
icebp
mov
cmpsb
repz
dec
loope
bound
or
xor
icebp
mov
xchg
inc
mov
inc
sbb
dec
xor
push
mov
jl
ja
subl
faddl
incb
and
lcall
xor
cltd
sub
sub
mov
xor
push
popf
data16
xor
fcos
decl
ljmp
cwtl
mov
pop
mov
icebp
mov
xchg
icebp
mov
push
mov
pusha
sbb
lds
mov
rcr
jl
push
mov
push
bound
mov
mov
push
into
mov
mov
decl
jno
cmp
int
mov
xchg
in
and
in
cmc
fldt
loop
iret
ret
and
incl
icebp
push
insb
sub
repnz
xor
cmp
lock
sub
xchg
outsl
movsb
cmpb
pop
dec
test
or
cmp
cld
cmp
xor
lret
mov
aam
ret
pop
mov
ret
sbb
ljmp
pusha
mov
inc
jl
add
mov
cmc
adc
pcmpeqw
ljmp
or
and
outsb
mov
and
cmp
popl
das
mov
cld
call
cs
sti
rclb
aam
jg
cmp
faddl
ljmp
mov
lahf
ljmp
out
adc
inc
inc
xor
pop
in
aad
xchg
pusha
int
add
xor
push
inc
aaa
je
xchg
daa
pop
pop
xchg
ds
inc
jmp
sbb
jae
pop
xor
adc
adc
popa
and
cmpb
icebp
call
add
nop
movsl
xor
cmc
iret
adc
jp
cmovnp
push
jle
push
jae
lret
sbb
decb
shr
ja
std
out
in
jg
popa
lahf
popf
mov
in
pop
enter
test
pop
lret
cmp
lcall
call
lods
shll
pop
rcrb
das
push
aas
mov
mov
rcrb
fistpl
ljmp
das
in
add
insl
int
decl
ljmp
in
cltd
jne
sbb
idivl
cmp
xchg
pushf
mov
aad
lock
popa
adc
lcall
testl
ss
movb
pop
pop
shl
ss
jecxz
loopne
fstl
cld
in
mov
adc
lcall
mov
sarb
loope
jecxz
and
sar
cmp
jns
fidivl
xor
filds
dec
push
xchg
xchg
aaa
mov
pushl
insl
sarb
bound
insl
gs
dec
pop
popf
pop
pop
fs
scas
add
or
out
mov
test
ljmp
je
xchg
jno
cmp
dec
cld
jle
ds
jns
inc
test
test
jb
mov
and
pop
stos
clc
add
call
inc
loopne
jg
loopne
int3
mov
dec
pop
jle
cmpsl
ret
enter
and
shll
jb
or
mov
divl
or
lcall
les
fisttpl
in
mov
scas
push
mov
jo
push
sbb
incl
daa
nop
cli
xor
dec
cli
fidivrl
xchg
cmp
and
testl
push
adc
add
decl
scas
pushw
sub
inc
or
and
jmp
inc
rcrb
pop
imul
and
sub
popf
loope
dec
xchg
jae
aaa
aaa
stos
lods
mov
or
aas
pop
jbe
sub
ljmp
out
adc
icebp
fcmovnb
mov
jmp
es
call
in
inc
inc
fdivr
out
xchg
mov
shrl
push
sar
incl
into
popa
insl
or
and
mull
mov
ficomps
push
stos
testb
aaa
jl
stos
outsb
stos
out
sti
inc
aam
repnz
rolb
xor
ja
inc
cmp
idivl
lea
fcomip
ljmp
sub
fistl
pusha
loopne
sub
neg
fistps
decl
mov
out
ss
aaa
ret
add
lcall
cmp
pop
push
add
lods
pop
ljmp
xor
sbb
fidivs
jg
popa
lret
push
leave
push
inc
shll
mov
jmp
shr
daa
xchg
popa
popf
jb
push
ja
fstl
adc
sbb
jg
cwtl
lret
cmp
cmp
sub
imul
clc
inc
adc
mov
loopne
inc
clc
arpl
mov
dec
js
xchg
idiv
xlat
pop
cmp
pop
pop
ja
xor
scas
jle
lods
xchg
loope
out
addr16
sbb
incl
je
xor
icebp
dec
sbb
pop
ja
bound
mov
ffreep
dec
std
insl
je
inc
inc
push
cld
fsub
loopne
jge
pop
xchg
in
xlat
pop
xor
addr16
or
jg
push
nop
and
jb,pn
sub
test
icebp
mov
ja
xchg
in
sbb
and
jge
pusha
dec
mov
ljmp
fcompl
or
push
dec
pop
popa
inc
xor
push
and
cmc
adc
std
sbb
cmp
mov
pop
hlt
jmp
pop
fucomi
fistps
xchg
lods
ret
divb
stos
adc
pop
cmpsl
insb
mov
lcall
das
xor
mov
push
push
je
in
fsubs
int3
std
xor
or
movsl
or
dec
xor
incl
sbb
fcmovnbe
pop
dec
push
and
push
mov
es
sub
adc
test
and
orb
out
mov
ja
cmpsl
mov
incl
push
adc
das
loopne
mov
push
cmpsb
push
es
xchg
push
scas
xor
test
cwtl
xor
push
dec
repnz
daa
pop
pusha
cld
jmp
cwtl
mov
mov
mov
jg
cmp
andb
xor
or
inc
inc
inc
shrl
popf
xor
icebp
ljmp
or
fptan
push
mov
inc
mov
xchg
cmc
dec
push
inc
adc
fstl
fwait
shrl
add
inc
jl
mov
incl
pop
mov
xchg
arpl
jae
in
mov
sbb
sub
popf
pop
les
call
cmp
cmpsl
int
aas
daa
xchg
imul
xchg
cs
add
out
outsl
decl
adc
loope
outsl
imul
cmpsl
aad
mov
fucomip
and
and
call
add
imul
call
lods
pop
les
sbb
jno
fstpt
pop
mov
mov
fldl
or
inc
sbb
incl
mov
jne
push
loope
mov
xchg
popf
jp
out
pop
xchg
xor
clc
cli
mov
and
js
mov
dec
or
mov
dec
sbb
jmp
mov
imul
loop
jge
arpl
sub
stos
leave
push
aaa
lcall
nop
shlb
lods
clc
jns
not
sbb
mov
fsubrs
iret
sub
adc
jmp
lahf
adc
pop
insb
jle
lock
or
push
bound
sahf
scas
jl
sub
std
mov
loopne
mov
into
shlb
or
mov
stos
pop
ljmp
xchg
fldenv
jg
pop
add
fsubrp
mov
es
pop
test
xchg
inc
sub
jl
rcl
movsb
cmc
xor
or
and
scas
and
ret
out
cs
outsl
and
call
shrl
movsl
cmpsb
sub
pop
lcall
sub
clc
in
mov
lahf
loopne
repnz
mov
rclb
mov
ljmp
clc
sbb
mov
and
lods
dec
lahf
sbb
inc
loop
pop
pop
xor
adc
cmp
dec
lods
std
out
add
inc
push
mov
orl
xchg
test
es
loope
test
test
inc
scas
mov
dec
rorb
mov
jno
test
cmp
adc
aad
lock
in
pop
test
cmp
jg
cmp
mov
pushl
adc
out
xor
pop
shl
cmpsl
imul
push
jg
sub
sub
iret
cwtl
sub
pop
mov
outsl
push
incl
clc
pop
mov
je
adc
hlt
or
jmp
and
pop
or
jno
xchg
jnp
call
or
mov
repz
adc
ret
mov
adc
adc
dec
mul
sub
mov
das
test
jb
mov
pop
outsl
cmpsl
push
push
inc
pop
and
pop
fstl
inc
dec
xor
xrelease
mov
test
push
pop
sub
sbb
adc
mulb
cltd
sbb
fldenv
lret
sti
ljmp
les
lahf
jo
sbb
xorb
lcall
and
push
jg
jno
das
mov
movsb
pop
cmp
idivl
movsb
xor
xchg
or
pushf
movsl
jo
push
pop
arpl
lcall
movsl
lods
push
lds
cmpsl
adcl
pop
jge
fs
jmp
cld
cld
outsl
ljmp
jb
fildll
push
loopne
cltd
push
movsb
mov
into
mov
mov
push
popa
cld
push
jmp
insl
pop
enter
jne
imul
aaa
cmp
arpl
sbb
dec
push
add
icebp
and
mov
call
stos
xlat
insl
sbb
xchg
mov
cs
mov
inc
popa
push
sub
sub
call
jno,pt
scas
adc
jo
xor
pushf
mov
scas
sub
decl
push
int
or
jle
or
divb
aaa
inc
inc
das
jns
or
sbbl
std
push
ds
imul
adc
gs
cmp
pop
jns
stos
test
call
mov
repnz
stos
test
cld
sarl
adc
ljmp
lock
dec
and
mov
xor
xor
jmp
lret
mull
rorl
xchg
cmc
or
or
das
mov
mov
jg
push
aas
xchg
negb
in
clc
shll
add
out
mov
jecxz
jp
icebp
pop
test
iret
mov
or
add
test
jmp
in
lods
cmp
push
fsubs
sub
in
call
ja
xor
xchg
pop
ret
dec
inc
scas
xchg
mov
adc
cmp
pop
dec
dec
sub
jmp
sub
fists
shll
and
xchg
popf
scas
orl
dec
mov
movsl
sub
jns
jl
xor
jg
jle
dec
adc
or
pop
xor
jecxz
lahf
out
adc
fildll
cmc
scas
cmp
adc
daa
cmp
lods
add
adc
cmpsb
out
mov
ss
test
loop
cli
push
dec
adc
incl
ss
jmp
and
mov
jne
mov
stc
push
jmp
inc
cmp
mov
xor
xchg
push
enter
jo
decl
aad
mov
aas
xor
dec
mov
decl
faddl
loop
dec
fwait
mov
push
in
mov
shlb
leave
call
push
adc
cs
sbb
or
adc
inc
mov
ljmp
add
frstor
adc
rolb
scas
add
mov
aaa
lea
mov
das
iret
push
mov
imul
push
mov
movsb
pop
dec
ja
and
jg
mov
fdivl
pop
jle
shll
jns
mov
cmp
bound
jg
lea
jecxz
call
sbb
aas
pop
pop
ljmp
out
jne
fcompl
cltd
mov
pop
or
or
push
push
xchg
xchg
lcall
jp
loop
movb
lret
cmp
orb
pop
fiaddl
pusha
pop
movsl
or
int3
and
movsl
xor
mov
pushl
and
lods
xor
pusha
aaa
inc
mov
cmp
test
data16
fwait
cmc
sbb
lcall
mov
push
sub
push
into
cmpsb
pop
in
jb
cli
out
dec
mov
cs
jmp
mov
outsb
mov
jbe
mov
into
imul
cwtl
lcall
mov
aam
push
lock
pop
cmpsb
arpl
and
lahf
jbe
nop
je
movsb
out
push
jge
jmp
aad
mov
pushf
adc
jb
jbe
lods
mov
enter
push
jmp
aad
cmp
mov
cmp
inc
mov
dec
decl
cmc
xchg
loope
inc
ret
push
cmp
cmp
pop
dec
stc
rcrl
jae
pushl
aaa
mov
cs
jmp
ss
pop
xchg
add
mov
addr16
and
js
movsl
push
fs
push
loopne
rcr
aas
shll
call
dec
test
mov
shl
xor
gs
sti
aaa
fidivl
clc
sahf
in
loope
mov
cmp
int
pop
aaa
mov
aam
clc
stos
inc
roll
jb
sbb
jecxz
sub
das
int
xchg
imul
loopne
pop
pop
mov
fdivr
imull
mov
dec
stos
scas
or
int3
fs
mov
mov
or
sbb
pusha
xchg
arpl
jg
mov
push
or
incl
xlat
cmpb
add
repz
fadds
sahf
and
les
inc
data16
int3
decl
xor
pop
movsb
movsl
xchg
jl
xlat
in
imul
push
dec
mov
mov
or
dec
ljmp
mov
incl
jbe
dec
mov
lahf
sbb
mov
rol
mov
cmp
aas
sub
mov
call
loopne
or
adc
rolb
ds
and
filds
test
dec
add
jns
or
fnsave
mov
ds
push
and
mov
push
or
outsb
sar
stos
lahf
cmp
decb
xor
mov
insb
aaa
inc
dec
and
push
push
lods
xor
stos
mov
mov
fdivr
mov
aam
lods
call
cli
out
dec
movsb
ret
cmp
dec
pop
or
iret
mov
call
xchg
mov
adc
stc
lods
jae
xchg
movsb
mov
ret
mov
aas
mov
or
inc
xchg
pop
fmuls
jo
aas
imul
ret
mov
jns
jne
shld
call
lods
bound
iret
repz
adc
out
add
dec
mov
sbb
jle
mov
hlt
andb
stc
pop
add
inc
cmp
push
mov
in
lcall
adc
mov
popf
and
mov
aam
ljmp
dec
pusha
int
push
data16
test
imul
test
test
jmp
shlb
xor
or
push
mov
pop
sub
ljmp
and
or
and
movsl
cmp
push
or
ds
ja
std
fsubrl
pusha
repz
xchg
test
adc
xchg
cmpsb
shl
jmp
and
add
call
jecxz
leave
enter
scas
lcall
iret
inc
movsl
out
pop
push
push
fsts
ret
xchg
sti
sbb
xchg
clc
xchg
mov
ja
imul
les
loopne
notb
enter
pop
push
fildl
call
mov
jno
xchg
dec
mov
dec
sub
mov
imul
mov
sbb
notl
cmp
pop
aam
adc
push
lret
jge
add
sbb
call
pusha
mov
and
mov
bound
mov
xor
mov
and
pushl
addr16
das
loop
movsb
outsb
daa
mov
xchg
mov
loop
mov
lock
pop
mov
and
pop
adc
push
and
outsb
cld
push
cmp
lcall
and
test
add
push
fdivs
xchg
xchg
add
lcall
mov
cmp
lea
push
imul
stos
xor
std
testb
add
clc
out
mov
bound
adc
jg
shlb
roll
je
fdivrp
aam
push
aaa
orl
decl
xchg
fldcw
xchg
lcall
lret
adc
or
and
loopne
dec
lcall
sahf
cmp
jmp
call
jp
rorb
jnp
adc
jecxz
test
leave
mov
incl
push
pop
cmp
icebp
mov
sti
xchg
stos
dec
inc
jns
jmp
inc
sbb
bound
jle
rclb
insl
fstpl
inc
xchg
sbb
mov
incl
insl
lret
ljmp
test
pop
sti
and
loopne
ds
mov
push
test
pushl
cs
lods
mov
jecxz
mov
or
jns
je
push
in
js
ds
fmull
push
lods
push
mov
mov
dec
sti
call
jmp
dec
mov
pushf
mov
pop
cwtl
loope
and
dec
shlb
les
add
dec
movsb
mov
scas
repz
dec
aaa
xor
jae
sbb
xchg
ret
jb
dec
sbb
or
cmpsb
dec
clc
mov
sahf
sbb
mov
sbb
les
aad
out
stos
and
xor
jnp
movsl
mov
push
ljmp
icebp
in
out
cmp
fisubrs
push
xchg
mov
mov
dec
pop
cwtl
loopne
cmp
es
pusha
leave
mov
call
ljmp
call
pushw
cli
inc
mov
loop
jo
mov
ljmp
fdivrl
ljmp
in
adc
sub
adc
fs
ljmp
cmp
sub
out
adc
mov
sahf
pop
jb
mov
sub
rolb
leave
add
jg
mov
fdivs
incl
mov
sbb
inc
dec
jmp
loope
inc
xor
shll
cmp
call
test
cmpl
idivl
fwait
filds
inc
lods
sub
or
push
loop
pop
ss
cltd
decl
xchg
and
adc
push
xchg
je
pop
push
dec
iret
sahf
xchg
mov
and
push
sbb
pushl
std
and
scas
cmp
mov
shrl
lock
clc
xor
mov
mov
mov
hlt
or
mov
rclb
push
lea
out
in
cmpsb
adc
jns
mov
pop
leave
mov
lods
and
pop
test
mov
mov
mov
cld
aam
pop
dec
sub
adc
jae
or
call
adc
hlt
xchg
cli
inc
incl
jg
std
add
and
fbstp
mov
es
or
jae,pt
or
mov
push
leave
and
fiadds
std
lret
sarl
mov
inc
mov
lret
inc
out
icebp
adc
in
icebp
lds
iret
fcmovnbe
das
pop
clc
decl
dec
mov
xor
jnp
push
inc
ljmp
mov
mov
mov
xor
sar
incl
cld
jno
arpl
fwait
jb
test
shll
jns
fldenv
pusha
loop
inc
pop
mov
jno
mov
ret
cmp
jno
ljmp
dec
ret
insb
push
mov
mov
aad
mov
mov
pop
incl
push
pop
lds
addr16
inc
repnz
test
aaa
je
jl
adc
pop
es
push
and
out
in
jge
push
int3
shll
ret
pop
fisubl
ja
and
pop
insb
xchg
cmp
movsb
jae
push
adc
mov
fistpl
jbe
popf
or
sbb
xchg
pop
jno
cmp
int
aaa
and
fs
les
mov
lcall
leave
jecxz
add
insb
mov
mov
push
mov
cmp
lcall
push
jb
mov
sahf
push
jp
mov
inc
lods
data16
or
mov
rcr
cmc
call
stos
das
xlat
outsb
inc
add
daa
test
clc
dec
pop
xchg
loop
jg
mov
fbstp
outsl
fwait
or
imul
movsl
and
jnp
dec
mov
push
sub
push
mov
jmp
stos
sub
mov
inc
lcall
dec
xor
sbb
mov
bound
outsb
mov
outsb
or
cwtl
jg
mov
pop
push
xchg
xchg
sub
shl
jnp
test
arpl
dec
mov
iret
cmp
push
lcall
lcall
andl
mov
jno
xor
pop
rdtsc
test
jb
push
cmp
iret
xchg
ret
shrb
icebp
sbb
mov
or
cmp
icebp
adc
dec
and
pop
pop
pop
jp
pop
xchg
cmc
adc
paddsb
jmp
cmp
sti
bound
bound
push
cmpsl
push
pop
cld
fcmovne
xor
mov
jo
aaa
cmp
dec
clc
and
xor
cli
scas
push
adc
sahf
out
mov
addr16
inc
cmp
ret
hlt
incl
cld
rdmsr
ds
loopne
ret
or
fists
ret
push
loop,pt
aad
push
ret
decl
cmp
popf
pop
lods
and
movsb
mov
xchg
jecxz
and
push
mov
fdivrp
mov
stc
int3
stos
test
cmp
and
mov
cmp
loope
cmpsb
mov
dec
bound
out
lret
adc
jmp
cs
imul
fbstp
loope
sub
popf
andb
cltd
ret
xchg
inc
adc
in
pop
sbb
sbb
cmpsl
fstl
stos
hlt
fidivs
iret
mov
jmp
xchg
scas
or
mov
jae
cmp
dec
lret
bound
gs
std
cmp
call
insb
pop
jae
pop
ret
and
rcr
pop
aas
xor
sti
cmc
xchg
mov
jns
repz
jo
and
imul
test
xor
andl
call
cwtl
test
mov
xor
and
fldl
in
cmc
or
subb
sbb
lcall
xor
outsl
xchg
call
mov
sbb
std
or
cmc
int
jl
frstor
and
in
xor
repz
or
pop
mov
clc
call
mov
push
cmp
xchg
adc
and
mov
ret
mov
jo
bsf
movsl
jb
mov
lahf
daa
mov
jg
pop
out
adc
and
adc
addr16
insb
imul
dec
mov
fwait
jg
roll
jo
aaa
pop
rolb
out
jg
test
out
repnz
jo
cmc
ds
sti
sub
ljmp
and
adc
cwtl
dec
xchg
lock
mov
dec
jbe
jae
xor
rcll
add
cmp
call
cwtl
mov
ror
pop
fistpl
sub
scas
pop
and
jg
push
fildll
test
pop
ret
scas
imul
fidivs
or
jo
outsl
call
adc
mov
push
pop
js
lret
bound
loop
pop
jbe
mov
loopne
pushl
arpl
dec
lret
push
shlb
subl
mov
jmp
mov
mov
dec
cld
test
dec
call
out
sub
js
sarb
sti
push
fistl
cmp
push
shlb
imul
je
clc
mov
je
lcall
cmp
inc
leave
push
call
pop
ja
outsl
and
fs
inc
push
push
or
mov
jl
sbb
jns
clc
lcall
push
das
out
sub
fwait
aam
jo
nop
or
dec
lcall
mov
dec
cmpsl
andb
test
pop
mov
fwait
mov
hlt
dec
lret
aas
mov
dec
bswap
xorb
cwtl
ret
in
fs
jg
jae
pop
mov
cmp
inc
pop
mov
nop
imul
leave
das
loopne
inc
jp
dec
xchg
fwait
xchg
cwtl
or
cmp
add
xchg
test
lcall
jb
and
leave
iret
das
cltd
lds
dec
and
cltd
sbb
or
fwait
call
out
add
fldt
js
lret
rol
test
daa
pop
mov
stos
aaa
or
pushl
loopne
xchg
je
inc
stos
xor
ljmp
fstps
mov
xor
xchg
out
mov
in
cmp
xlat
cmc
bound
ljmp
pop
js
dec
xchg
dec
repnz
repnz
stc
rol
xchg
or
incl
mov
call
sbb
in
aaa
add
xor
push
push
out
icebp
sbb
cmp
lret
fidivrl
jbe
sub
jg
pusha
pop
dec
adc
les
mov
subb
mov
xchg
jmp
loopne
lcall
mov
push
mov
sbb
jo
mov
sub
pop
out
xchg
ds
mov
pushl
test
jge
addr16
jo
and
jbe
rorb
or
push
call
jg
inc
jne
mov
clc
rorl
enter
and
lea
sbb
sahf
jnp
aaa
pusha
sar
fwait
pop
imul
dec
rcl
sbb
adc
mulb
cld
mov
lock
add
mov
xchg
and
aam
hlt
loop
arpl
xchg
mov
xor
xchg
fstpl
jo
lds
ds
jns
push
pop
rcl
mov
mov
mov
loopne
ficoml
fdivrl
jb
or
movsl
imul
sti
xchg
mov
lods
cmpb
js
dec
inc
aas
xor
fisttpl
push
inc
mov
ret
cld
imul
mov
sub
or
ret
sti
movsl
adc
outsb
loopne
inc
and
push
mov
inc
lcall
xor
ja
mov
sbb
xchg
fcompl
push
jnp
mov
test
pop
adc
cmpsb
xlat
inc
fsubrp
add
je
jg
fistps
rclb
add
rolb
jne
jb
mov
adc
mov
call
sti
cmp
mov
or
lret
push
xorl
and
cmovns
cld
pop
adc
shlb
pop
test
out
lcall
or
sbb
fwait
call
pop
push
bound
add
xchg
dec
sub
jg
iret
sbb
xchg
sub
dec
fsub
xor
jmp
into
dec
scas
mov
dec
fs
sbb
lcall
add
mov
inc
and
out
add
sbb
jecxz,pn
ljmp
xchg
outsb
jp
mov
in
nop
add
fldenv
stos
std
icebp
sahf
in
pop
ljmp
insb
rcrl
xor
fsubs
add
push
in
insb
adc
adc
jge
xor
lcall
sbb
insl
mov
pop
cmc
push
gs
dec
mov
out
dec
lds
lcall
cmp
shr
xlat
out
call
add
mull
inc
out
xchg
ss
call
std
ljmp
inc
arpl
imul
jle
push
pusha
hlt
decl
jmp
xor
cmpsb
inc
jb
sbbl
xlat
decl
lock
rorl
jle
lea
aam
test
pop
fs
dec
lret
int
sbb
push
push
das
push
jnp
and
in
inc
int3
enter
pop
add
insb
push
loop
decl
nop
sub
mov
gs
hlt
mov
in
xchg
fld
pop
cmp
xor
pushl
adcb
and
mov
pushf
mov
arpl
dec
sub
aas
xlat
std
cltd
sahf
inc
dec
jecxz
mov
pop
daa
push
cmp
fadds
mov
fwait
stos
js
mov
or
bound
xchg
fnop
fcomp
ja
mov
loop
sti
mov
es
dec
inc
pop
arpl
or
jg
call
cld
pop
lea
or
inc
lods
lret
push
cmp
xchg
test
cmp
daa
mov
push
push
rclb
jno
fidivl
adc
fsubs
sub
mov
dec
into
dec
xor
hlt
in
or
mov
ljmp
icebp
xchg
in
mov
adc
cmp
or
dec
jg
jmp
mov
inc
cmp
add
xchg
and
mov
xchg
push
sub
out
ret
fcomip
mov
pop
push
leave
xchg
negl
or
xchg
pusha
xchg
stos
and
decl
xchg
push
jmp
xor
nop
int3
jg
inc
push
mov
out
jl
sub
jmp
sbb
movsl
fidivrl
pushl
add
dec
lcall
xor
jp
sbb
inc
int
cmpsl
adc
xor
mov
sub
lcall
inc
daa
add
mov
mov
ret
xchg
or
test
decb
sbbb
dec
jbe
stos
movsl
in
sub
sbb
jg
incl
pop
aam
or
in
sbb
jmp
mov
mov
pop
decl
mov
mov
mov
dec
movsb
xor
dec
aad
std
jo
fiaddl
out
adc
in
pop
mov
ljmp
mov
mov
xchg
xor
in
repnz
loopne
xchg
add
dec
icebp
pop
xchg
mov
jmp
mov
stc
xor
fcoms
cld
insb
mov
add
lret
jne
in
std
jmp
insl
mov
outsb
jne
aaa
pop
insl
in
insl
movsb
mov
lret
loop
add
sub
sar
decl
and
mov
sbb
fcomps
loop
test
xlat
jg
add
fs
inc
and
insl
sbb
sti
mov
lds
sub
mov
lcall
aam
call
int3
ss
pop
adc
aas
jmp
jno
mov
repnz
out
jns
and
lcall
iret
xor
push
cli
xchg
or
mov
jmp
sub
and
mov
mov
out
repz
fnstenv
jle
iret
mov
inc
jno
mov
out
mov
mov
push
lret
negl
lahf
sbb
mov
stos
cmp
sub
nop
fs
cli
sub
mov
cmc
lcall
lahf
mov
push
ret
xchg
nop
mov
das
xchg
jmp
mov
pop
loop
int3
testb
xchg
jae
push
inc
sbb
scas
fisubl
into
mov
add
mov
pop
sub
cmp
fdivs
pushf
fdiv
sbb
std
xchg
dec
addr16
jmp
inc
fistpll
fistl
cs
clc
ja
mov
dec
lods
enter
jbe
test
test
ljmp
jno
std
or
xchg
pop
dec
or
call
sbb
jecxz
ljmp
push
cmp
xlat
mov
sub
add
je
cmp
dec
pop
sbb
and
cwtl
ljmp
cmp
dec
imul
add
out
insl
rorl
inc
fcmovbe
pop
xchg
fwait
and
jg
and
lock
pushl
jg
jle
mov
call
movntps
in
add
sti
jp
fstps
aas
sub
ljmp
or
adc
pop
cld
jmp
lahf
sbb
nop
sbb
pop
test
mov
sub
fsubs
adc
jbe
movl
sub
mov
outsb
xor
test
decl
aad
ja
js
fcomp
dec
mov
arpl
fwait
pop
pop
and
or
jle
or
add
shr
aam
decl
cli
xchg
add
or
xchg
mov
lock
lahf
pusha
repz
push
xchg
dec
lret
xchg
pop
push
lfs
int3
dec
int
pop
stc
and
sbb
aad
scas
jo
adc
std
insl
aaa
nop
sar
sub
jge
push
jae
hlt
jns
pop
out
mov
xchg
mov
leave
adc
sar
push
leave
rorl
xchg
inc
sub
inc
mov
mov
adc
mov
mov
decl
mov
insb
movsl
ljmp
jg
add
movsb
lds
incl
cld
jmp
in
js
add
les
out
test
call
inc
or
jl
sub
int3
pushf
aam
xchg
lods
inc
fwait
lcall
dec
nop
pop
jle
in
pop
cs
xchg
and
or
cmp
shlb
pushw
call
mov
shll
mov
iret
imul
repz
cmp
ljmp
jmp
out
mov
xor
adc
xor
filds
bound
fiaddl
push
push
xor
pushl
pop
out
lea
xor
push
mov
dec
jle
jmp
sub
ljmp
out
pop
iret
lods
and
inc
push
mov
push
insb
xorb
pop
ja
xor
rclb
ljmp
inc
loop
adc
mov
loope
mulb
push
aas
sbb
cmp
cmp
pop
mov
dec
sbb
cwtl
outsl
xor
inc
cmc
decl
push
pop
dec
mov
fidivrs
loopne
sbb
mov
pop
push
jge
sarl
ljmp
jns
sub
ficompl
and
pushl
lret
mov
jecxz
test
fildl
and
in
fldl
out
sbb
decl
popf
out
cmp
ret
out
stos
jl
mov
aas
and
dec
xor
add
mov
scas
mov
cmpsl
ret
mov
ds
fwait
push
ja
loop
inc
jmp
adc
cli
mov
mov
cmp
and
pop
xlat
inc
mov
jle
and
shrl
insl
movsl
adc
jge
lcall
insb
jmp
dec
jb
movsb
sbb
push
arpl
cs
idivl
test
and
imul
sub
jmp
in
mov
cltd
sbb
push
cwtl
sbb
mov
rorb
cmpb
and
jge
push
xchg
inc
stos
mov
xchg
int3
mov
xchg
xchg
iret
mov
mov
mov
ret
lds
and
ds
cmp
and
jae
in
stc
cmpsb
ja
inc
clc
outsl
cli
jmp
mov
scas
imul
ret
mov
out
icebp
pop
mov
cmp
or
mov
repnz
jge
enter
jnp
fmull
scas
pop
cwtl
jae
push
ja
sar
pushf
inc
pop
pop
cmp
mov
rcl
pushl
jmp
cmp
xor
pop
divb
xor
stc
aam
push
lods
int3
sbb
fbld
fbld
shrl
btrl
pushf
out
jp
dec
into
hlt
xor
dec
push
dec
shrb
daa
adcl
xchg
gs
das
clc
push
pop
sbb
les
xor
sub
dec
mov
ljmp
stos
sbb
lret
dec
dec
mov
cmp
push
push
lods
cmp
jo
dec
incl
cmpsl
jbe
lods
repnz
jo
mov
mov
enter
jmp
cmp
es
mov
ret
jo
test
shr
sbb
mov
mov
js
gs
stos
dec
dec
sub
ljmp
pop
sbbl
test
das
cltd
stos
ds
rcl
adc
aam
inc
jb
js
cmpl
pushl
jb
and
test
std
out
jmp
push
jle
stos
aaa
pop
enter
xlat
mov
addr16
sahf
inc
icebp
pushl
js
jmp
shll
jmp
add
fistpll
test
mov
mov
or
and
movsb
mov
mov
sub
dec
out
pop
jmp
push
sub
xchg
inc
addr16
outsb
add
push
cmp
outsb
enter
fsts
pop
mov
insb
aas
mov
idiv
pop
cmc
decl
add
sub
shlb
stos
cli
cmpsl
lret
clc
decl
mov
addr16
mov
mov
pop
scas
fisttpll
out
mov
sub
dec
mov
test
sbb
xchg
rorb
mov
mov
jbe
xlat
and
mov
test
push
sbb
ds
ljmp
pop
lret
call
lahf
jl
cmc
sti
mov
sub
sub
or
pop
mov
inc
fcomip
jmp
xor
jns
mov
imul
aas
add
cld
lcall
or
test
jo
clc
lods
arpl
call
jg
lret
and
mov
inc
mov
pop
dec
test
mov
in
push
shl
xchg
xor
mov
adc
xor
into
dec
mov
in
arpl
je
mov
incl
popa
xor
xchg
iret
je
std
lret
in
aad
mov
inc
das
sbb
xchg
imul
adc
in
push
push
fimull
pop
pop
dec
ljmp
js
out
inc
dec
aas
clc
xchg
bound
pop
cmpsb
jmp
pop
push
inc
lds
cmp
fistpll
fs
incl
aaa
push
or
jmp
cs
out
loope
scas
aaa
mov
ret
das
sar
adc
lods
gs
test
mov
sbb
inc
add
jmp
sbb
movsb
lds
decl
out
mov
push
in
icebp
fistpll
pop
lahf
cmp
jg
roll
fwait
ljmp
ljmp
aam
xor
mov
pop
cmp
ljmp
mov
add
mov
fistpll
jp
jp
mov
rcrb
cmc
ja
pop
repnz
add
mov
jbe
lea
jo
mul
jg
cmp
movq
ja
scas
jecxz
sub
sub
js
clc
ja
jmp
push
sub
xchg
dec
fidivl
add
sub
mov
jno
fld
xor
stos
or
mov
xor
std
inc
add
scas
inc
dec
xor
fidivs
ljmp
sub
subl
sbb
outsb
pop
push
mov
push
xchg
xchg
or
and
movsl
push
clc
push
xchg
lret
push
dec
dec
sub
sbb
or
ljmp
pusha
jl
outsl
lds
mov
rol
decl
aad
jb
repz
adc
or
dec
mov
jecxz
ja
into
aaa
pop
js
stos
adc
fxch
repz
cld
fbstp
and
cmp
jb
and
jge
adc
std
lds
jmp
xchg
fcompl
lods
adc
in
jns
xor
out
cmp
mov
dec
ja
fisttpl
pushf
in
jbe
inc
aad
or
pop
xchg
scas
lcall
ljmp
jns
pop
push
out
ljmp
insb
fadds
cmp
enter
adc
stc
and
les
popw
pop
xchg
push
cmpsl
movsb
and
pushl
mov
cmp
dec
mov
dec
arpl
mov
ljmp
cmp
call
cmpsb
cmpsl
out
add
into
insb
out
cmp
call
cld
xlat
lcall
enter
pop
das
push
imul
sub
inc
sbb
bound
stc
clc
mov
jmp
inc
inc
shrb
sub
mov
xchg
lret
mov
ljmp
ja
fcmovu
aas
jle
or
ds
push
push
pop
sub
aam
cmpl
rcrb
push
incl
xlat
mov
loopne
and
xor
out
jle
push
imul
incl
pop
mov
xor
fidivs
inc
movsb
popl
nop
xchg
pusha
xor
lods
inc
mov
sahf
pop
and
jge
test
dec
popa
outsb
js
cmp
mov
push
sbb
std
dec
dec
xor
sub
insl
outsl
loop
testb
dec
repnz
mov
cwtl
cmp
hlt
push
pop
sti
jg
ljmp
js
mul
mov
dec
out
sub
add
dec
lahf
mov
inc
mov
push
leave
inc
jle
xchg
enter
sbbl
pop
or
mov
sbb
pop
enter
or
mov
sbb
pushf
mov
push
or
sar
lcall
jle
pop
xchg
xor
or
rcll
dec
loope
test
lods
idiv
cs
inc
jmp
mov
imul
and
inc
jmp
mov
dec
xchg
icebp
lods
aas
mov
jg
sarb
sub
mov
jne
push
cld
push
rolb
imul
mov
sbbb
insb
outsl
adc
pushl
lret
inc
sahf
cmovs
add
inc
test
in
iret
xchg
out
add
lea
lock
jo
icebp
add
mov
fcomip
jae
imul
call
outsb
call
dec
aad
out
dec
inc
ljmp
pop
jl
rcrb
clc
loop
hlt
enter
fnstenv
mov
insb
addr16
pop
jmp
in
movsl
adc
adcl
lret
lret
or
jnp
mov
mov
out
fwait
negl
ljmp
cmp
jle
decl
lahf
jae
inc
pushf
xchg
or
cmp
xchg
enter
out
hlt
test
adc
gs
jne
jg
push
sub
je
add
push
push
cltd
mov
pushl
data16
xchg
leave
push
cmp
addr16
xor
outsl
or
lcall
mov
push
rol
movsl
stos
dec
dec
jns
adc
push
dec
push
incl
aad
and
mov
sti
jbe
ss
jg
jbe
loopne
stc
loope
push
lock
mov
mov
jns
jne
add
lcall
hlt
rcll
adc
dec
xchg
hlt
loopne
out
sbb
test
xchg
xchg
lret
hlt
pop
sub
decl
icebp
dec
inc
xchg
fisubl
loopne
add
scas
lret
lret
push
adc
lock
pushf
lahf
sub
pop
test
xor
xlat
mov
ret
xchg
sbb
lahf
adc
lcall
or
lahf
cmp
lret
mov
repz
mov
mov
imul
jle
js
cld
and
or
mov
idivb
push
xor
cmpsb
stc
xchg
insl
cmpsb
rcl
jae
mov
addr16
dec
jb
stos
ljmp
aas
mov
outsl
mov
scas
out
jg
or
aam
mov
movsl
mov
or
mov
cltd
addr16
incl
fildl
cmp
loop
inc
out
xchg
gs
dec
mov
test
pushl
mov
push
xor
rcr
push
lret
rolb
sbb
jl
lods
js
lret
dec
jg
mov
inc
mov
lea
xchg
add
adc
xchg
sahf
data16
filds
pop
and
xor
xor
sub
std
in
xchg
push
aam
inc
int
fcos
lcall
mov
repnz
pusha
or
pop
push
mov
in
lea
sbb
jg
and
or
sti
call
add
sar
incl
aad
movsl
outsb
aaa
cmp
fldcw
jne
fnsave
mov
jmp
stos
negb
loopne
inc
clc
dec
dec
fdivrl
clc
aam
fmull
pop
mov
jle
notl
push
es
movsl
cmp
sar
mov
test
push
adc
sbb
inc
mov
into
daa
stc
pop
xchg
sbb
jmp
cmp
push
sub
cmp
testb
sbb
mov
imul
sbb
pusha
mov
ja
mov
mov
clc
and
imul
and
mov
call
cmpsb
loopne
jns
arpl
adc
stos
stos
mov
or
test
pop
lea
dec
call
ret
addr16
sub
lret
pushf
call
xchg
jmp
ljmp
insb
cs
stos
sub
fnstsw
mov
addr16
add
icebp
decb
inc
sub
fistpl
pop
inc
add
pushl
into
pop
repz
sub
jb
push
aam
and
xchg
out
in
pop
xlat
mov
inc
test
mov
ret
decl
dec
mov
ljmp
jo
icebp
cmpsb
jmp
incl
movsb
fbld
fwait
subb
adc
dec
mov
mov
ljmp
jne
stos
push
fsubp
mov
loopne
jge
lods
sub
popa
int
dec
mov
call
pop
scas
movsb
addr16
movsl
jnp
fistl
cmp
in
testb
add
dec
icebp
ficomps
xchg
cmc
aad
add
lahf
and
pop
scas
dec
sbb
dec
cli
sub
call
cmp
push
pushf
hlt
pushl
repz
mov
add
mov
lret
addr16
lcall
ret
nop
push
mov
outsb
push
jne
push
mov
ljmp
pop
fadd
das
sbb
pushl
jmp
das
movsl
xchg
push
fwait
inc
cmp
in
and
jns
lcall
repz
and
pushf
xchg
add
jle
xchg
pop
or
sarl
add
call
dec
incl
lds
adc
inc
in
inc
xchg
cli
lret
out
cmp
cmp
pop
mov
jg
inc
js
mov
sub
mov
cmc
jae
or
pop
test
xor
std
dec
inc
mov
jecxz
out
cwtl
xchg
add
mov
pop
ds
lret
in
mov
push
mov
xchg
push
pop
add
sub
jae
aam
and
adc
push
add
lock
in
fwait
push
inc
test
rcrl
pushl
jbe
xor
inc
xchg
inc
sub
imul
loopne
lods
or
or
mov
ljmp
shrl
or
jge
pop
jecxz
repz
nop
mov
sbb
inc
sbb
cmp
adc
xchg
call
add
xchg
jmp
inc
xorb
std
mov
in
dec
repz
in
movsl
xorb
push
cmp
stos
ss
jle
push
decl
lods
aad
sbb
sbb
sbb
sbb
les
mov
xor
jno
je
lods
pop
mov
ret
addr16
sbb
mov
sarb
popf
js
je
rolb
cvtdq2ps
ss
ret
rcr
mov
lds
lock
pop
mov
jge
jo
mov
ljmp
add
cmp
sarl
sbb
decl
or
in
cmp
imul
out
or
aad
xchg
mov
ljmp
push
aas
lcall
xchg
arpl
cmp
lods
push
dec
fadds
dec
lods
lahf
ljmp
cwtl
test
mov
adc
cmp
push
jb
popf
mov
bt
lahf
and
lcall
ljmp
mov
bound
adc
sub
cmpsl
pusha
es
pushl
sub
gs
pop
lock
cmpsb
inc
xor
movb
push
subl
cmp
cmp
push
cmpsb
shrb
out
fidivrs
and
fcomip
decl
dec
in
stos
scas
jne
lahf
cmpsb
fstl
sub
and
decl
xchg
fs
push
stc
add
or
sbb
adcb
ret
add
sub
mov
pop
lcall
repnz
mov
cmp
loopne
jns
jae
rol
xchg
sbb
mov
das
push
sahf
and
inc
nop
call
xchg
jecxz
jl
ja
inc
cli
jg
popa
mov
loope,pt
jecxz
loop
sahf
lds
ljmp
push
mov
push
pop
fidivrl
push
dec
mov
mov
lcall
push
fcomip
cli
sbb
mov
jo
fistpl
fcompl
pop
or
xlat
ficomps
inc
add
pop
sub
repz
clc
neg
outsb
mov
jmp
inc
mov
shrl
leave
xor
fs
jno
out
jge
icebp
cmp
adc
clc
out
test
add
push
jle
push
sahf
test
sbb
push
jg
or
jno
mov
or
sbb
outsl
cmp
mov
cwtl
mov
sbb
xor
pop
fmull
xor
call
rol
sbb
and
lds
dec
pop
sub
cmp
pop
pop
cmp
inc
mov
mov
jecxz
mov
mov
jmp
call
jns
pop
sub
inc
nop
dec
subb
call
pop
dec
mov
add
xchg
inc
sahf
mov
sub
jne
test
rcl
ljmp
add
mov
mov
jne
nop
mov
out
xchg
loop
jmp
mov
xor
pop
cmp
repz
mov
inc
push
lcall
push
adc
cltd
sbbb
icebp
mov
sbb
add
push
lret
adc
dec
adc
mov
lret
sub
jmp
inc
mov
cmpsl
imul
mov
movsl
lea
fildll
sti
pop
jle
inc
and
lcall
dec
cmp
lds
jbe
sbb
adc
sbb
xlat
in
push
xor
inc
pushf
cmp
clc
cld
lret
sub
push
inc
lea
add
jo
outsl
mov
lcall
imul
xchg
dec
pop
test
js
outsl
add
adc
shlb
sub
pop
std
lods
xchg
mov
cmp
adcb
fs
or
cmp
cmp
cmp
icebp
lret
push
mov
xor
pop
jmp
incl
xchg
push
dec
rcrl
jp
cmp
lret
sbb
cmp
lret
dec
xchg
aas
daa
mov
call
pushf
and
ret
xchg
mov
cmpsb
sbb
jb
out
mov
dec
dec
push
ljmp
lea
lcall
ret
iret
xchg
aas
or
orb
inc
inc
mov
xchg
mov
jbe
popa
leave
add
decb
into
in
jns
bound
mov
rol
imul
ficomps
cmp
lods
adc
ds
fidivs
js
jge
cmpsb
xchg
xchg
out
mov
add
negb
cmpsl
pshufw
mov
xor
pop
jl
cld
push
ljmp
shl
sub
or
adc
scas
into
and
les
iret
faddl
cmp
ljmp
mov
js
mov
push
fwait
push
lods
sub
and
aam
nop
mov
int3
sub
xor
mov
inc
push
sbb
adc
ljmp
faddl
push
sub
shrb
mov
aam
fistps
lods
nop
rcll
ljmp
cli
jns
pop
push
push
sbb
xchg
mov
mov
js
or
add
das
cli
je
inc
movsb
mov
push
cmc
loopne
sub
mov
pop
rorl
sbb
mov
pop
jg
inc
cld
rep
xchg
fildl
int3
divl
fadds
mov
and
push
and
cmp
scas
cmc
push
inc
mov
es
daa
lods
dec
mov
icebp
fs
sti
or
dec
push
or
pop
dec
adcb
fsubs
dec
or
inc
fcoms
push
cld
adc
cli
popa
pop
mov
outsl
clc
lds
and
or
movsb
sti
mov
xchg
incl
fcoms
jb
aaa
add
and
push
repz
test
jnp
jmp
dec
push
fs
dec
sbb
call
mov
pop
pop
mov
xor
fcoms
push
sub
insb
inc
fdivrl
loop
cs
dec
pop
loop
mov
insb
insb
inc
ljmp
incl
rorb
xorb
vmwrite
stc
dec
rclb
test
jg
jmp
fcomip
jmp
dec
xchg
loope
or
sbb
mov
adc
adc
or
mov
test
mov
push
scas
bnd
cmpsl
nop
mov
sar
push
or
sbb
jmp
push
mov
xchg
jo
ljmp
jl
jle
clc
scas
push
lret
test
inc
cmp
hlt
push
jb
js
adc
dec
pop
add
pushl
cli
out
ret
and
leave
mov
or
mov
sub
lahf
or
ljmp
lods
in
fnstcw
dec
sub
mov
stos
push
mov
dec
nop
cmpl
add
scas
lcall
xchg
hlt
inc
ja
xor
lret
mov
pop
test
aad
pop
mov
jmp
outsb
lcall
xchg
inc
jp
fwait
mov
sbb
push
dec
sbb
idiv
ljmp
cwtl
dec
inc
data16
sti
push
subb
cltd
pop
std
push
imul
popf
sbb
lcall
in
mov
fisubs
cwtl
not
fcmove
sbb
dec
jae
add
das
filds
push
dec
mov
jmp
mov
shl
movl
cmp
int
mov
dec
bound
cmp
lods
mov
hlt
inc
out
orb
clc
lods
pop
cld
mov
lock
lcall
enter
jbe
or
sbb
inc
xchg
add
clc
sarb
lret
sbb
jmp
xor
sub
bound
jo
outsb
adc
in
dec
mov
dec
movsb
ret
or
decl
in
sbb
popf
repnz
and
mov
xchg
cli
int3
pop
push
inc
repnz
int
or
pop
pop
insb
sbb
jecxz
js
into
cwtl
adc
out
call
pushl
sbb
sbb
sbb
and
out
loope
jg
decl
or
push
add
clc
push
xor
sbb
mov
cmpsl
jg
or
pop
sbb
out
mov
mov
call
xchg
jnp
stos
mov
hlt
std
or
dec
jno
mov
shlb
pop
decl
push
jmp
fstpl
iret
mov
movsl
outsb
into
mov
aam
mov
fcomip
and
add
jg
test
dec
in
or
inc
mov
dec
popa
inc
or
jnp
aas
or
xchg
dec
push
insl
dec
fwait
shll
jmp
aaa
or
lret
jecxz
mov
adc
hlt
cmp
push
lods
push
in
les
lods
stos
dec
cmp
push
test
int3
mov
jne
sbb
mov
push
or
fs
call
jge
push
mov
in
mov
mov
jno
insl
or
jg
das
xor
pop
test
fmul
lods
inc
xchg
test
pushl
lahf
xor
sub
inc
jne
dec
enter
adcl
and
sub
mov
pushl
adc
mov
push
cmp
out
loope
cmp
dec
mov
psrad
push
and
jmp
push
or
and
ds
mov
pop
lock
icebp
scas
add
sahf
int3
jbe
xchg
mov
xor
lcall
dec
popa
push
and
pop
pop
push
jmp
mov
cmpsl
stc
out
and
int3
cmpl
xchg
xchg
xchg
sbb
sbb
nop
incl
cld
pop
pop
call
test
or
mov
call
xchg
fsubr
or
arpl
push
jle
push
and
in
dec
mov
inc
cli
adcl
xor
je
lea
add
pop
mov
adc
icebp
ja
out
lret
pop
pushf
pop
and
mov
stos
mov
pop
dec
aam
inc
mov
shll
pop
push
dec
jmp
sbb
add
cmpsl
fdivrl
sbb
lret
xchg
mov
je
xchg
fldl
dec
pushl
dec
test
xchg
or
enter
push
outsb
add
lcall
clc
lret
sarb
dec
mov
idivb
sahf
stos
dec
js
lcall
lds
insl
popa
loopne
std
sub
adc
and
addr16
xchg
std
fildl
jae
or
js
incl
jecxz
adc
mov
mov
cltd
aad
in
sarl
int
or
push
mov
mov
add
repnz
gs
push
xchg
or
fstpt
ss
xchg
push
add
lock
lcall
jle
arpl
out
fs
cld
fbld
lock
jp
cmp
xor
jno
mov
mov
mov
pop
mov
bound
mov
test
adc
dec
mov
sub
lcall
mov
add
cmpsl
call
push
insl
sahf
dec
sar
aaa
fcmovbe
xlat
xor
xor
es
pop
add
inc
mov
xor
ret
fbld
ljmp
jl
push
xchg
rclb
loop
fs
mov
call
call
push
sub
push
mov
dec
aas
jnp
cmp
shlb
dec
and
lcall
cld
inc
movsl
movsb
adcl
shll
adc
pop
aam
fsubrl
cmpsl
sqrtps
push
pushl
push
jo
rcrl
je
adc
outsl
sub
add
incl
cld
ljmp
mov
test
mov
test
xor
pop
and
mov
xor
push
jg
movsb
add
jne
or
imul
sub
decl
pop
out
cltd
xchg
lock
sub
subl
arpl
lcall
popa
cmp
jmp
fistpl
dec
push
push
outsb
jle
out
cwtl
clc
scas
sbb
outsb
fwait
je
pop
cmc
pushl
push
push
out
cmp
shrb
mov
loopne
pop
ret
mov
cmp
and
sti
mov
out
cltd
jnp
movsl
adc
lcall
push
sub
push
sahf
adcl
push
xchg
sar
adc
fcomip
jg
fimull
lcall
aaa
adc
xchg
ljmp
mov
add
jl
cmp
scas
sbb
sub
mov
push
jo
punpcklwd
push
scas
mov
lret
clc
pop
mov
push
cltd
mov
outsl
out
decl
sbb
imul
xchg
orl
pop
cmp
mov
jb
ljmp
mov
dec
popf
ja
xor
daa
in
shlb
rcll
jmp
notl
sub
add
add
sbb
ljmp
std
clc
in
cmp
push
je
lcall
mov
movb
scas
movb
je
movl
add
rcll
add
inc
sar
ja
stos
or
sub
lret
sahf
fldl
push
rclb
repz
jo
xchg
daa
xchg
lds
mov
rolb
adc
out
test
shlb
add
ljmp
fcmovne
jecxz
cltd
sbbl
ss
jg
push
imul
idivb
jl
fildll
mov
ss
push
mov
incl
lcall
iret
out
int3
lcall
pushf
ss
int
aaa
repnz
call
mov
loope
add
mov
pop
mov
cs
icebp
inc
cwtl
jl
lret
jae
xor
test
pushl
dec
bound
push
insl
mov
or
mov
jno
xchg
adc
decl
add
jge
mov
es
add
mov
cmp
dec
mov
lcall
mov
jmp
dec
dec
dec
cmp
cmc
fdiv
xchg
js
ficoml
sbbb
or
mov
jp
ss
push
stc
fcompl
cmp
adc
mov
hlt
xchg
mov
mov
mov
dec
rcrl
rcll
lds
roll
xor
call
fcom
mov
or
xor
dec
jmp
jmp
jb
test
call
int
mov
dec
je
in
lods
fildl
inc
jbe
call
cmp
fisttps
sbb
fidivs
mov
pop
jbe
adcb
imul
das
mov
push
sub
lock
mov
jns
scas
mov
xchg
rcr
test
lcall
adcb
jl
jmp
enter
les
jnp
cli
mov
fldl
jmp
push
insl
dec
xor
incb
push
and
in
clc
push
push
pop
daa
sti
mov
addr16
sbb
push
adc
sub
lcall
and
sub
nop
out
push
loop
pop
insb
dec
mov
lretw
inc
test
idiv
mov
jmp
sub
adc
cmp
xor
outsb
pushl
je
jge
lods
dec
jb
cli
es
push
pusha
bnd
and
jae
cmpsl
push
fdivl
aam
sbb
sahf
xor
mov
fsubr
push
shll
xor
inc
dec
popf
xor
aas
jp
fstpl
xchg
sub
jo
mov
pop
jmp
repz
jg
in
push
xor
mov
or
xchg
inc
bound
movl
mov
std
jge
add
leave
cwtl
in
mov
xor
incl
inc
in
add
cmp
mov
sbb
mov
push
add
push
xchg
mov
lock
jo
sti
mov
or
add
mov
adc
xchg
decl
inc
mov
cld
cmpsl
sub
and
mov
inc
push
jle
push
shrl
test
push
out
lds
js
in
xchg
stos
addr16
and
cmp
dec
mov
mov
sbb
dec
mov
lcall
or
pushf
lock
mov
pop
dec
lahf
pop
inc
xor
lahf
push
mov
clc
ds
mov
xchg
test
das
add
push
push
and
pop
insl
std
push
incb
testb
mov
ljmp
push
add
mov
cmp
pop
outsl
mov
cmp
push
push
insb
fwait
incb
and
outsl
push
bswap
and
or
lcall
dec
movsb
arpl
sbb
cltd
mov
sbb
popa
jns
push
stos
cmp
loopne
inc
add
jg
int
incl
fisttpll
mov
add
ss
xchg
jns
xlat
inc
jl
imul
lahf
inc
dec
xor
xor
lcall
jg
sub
aas
jnp
sub
dec
int
jno
and
cs
leave
cmp
insl
daa
inc
pop
mov
inc
je
inc
aam
inc
lock
push
std
popf
cmp
out
mov
ljmp
mov
test
cwtl
outsb
int3
jae
inc
ret
pushf
test
jp
xchg
stos
dec
out
xor
test
or
outsl
xor
pushl
jp
dec
stos
shlb
repnz
mov
lock
lcall
fisttpll
jp
int
sbb
sub
sub
shl
fisttpll
bnd
aas
dec
sub
push
cli
clc
xor
mov
sbb
inc
mov
lcall
imul
incl
jbe
jo
mov
mov
fsubs
sub
decl
test
sbb
cmp
sahf
das
dec
jg
ljmp
imul
cwtl
xor
or
mov
ja
push
int3
lcall
dec
insb
xchg
dec
push
mov
stos
fildll
loope
vpmacswd
pushl
add
jb
xchg
mov
adcl
mov
sti
cmpl
inc
sub
divl
out
xchg
icebp
jmp
sub
mov
lea
shr
scas
mov
push
xor
sarb
fistl
call
push
ficoml
lds
sub
jl
push
jae
push
sbb
xchg
xor
ret
cs
repnz
shrb
sbb
cli
push
xchg
clc
pop
sub
repz
aam
in
lock
test
mov
push
rol
ret
fldl
add
sub
adc
cwtl
pop
xchg
repz
das
and
lods
arpl
iret
daa
pusha
cld
incl
in
movsl
loop
xchg
shl
fstl
test
mov
jg
lcall
or
cmp
push
dec
inc
decl
inc
inc
int3
adc
sbb
pop
dec
andl
addr16
mov
aas
int
inc
into
dec
hlt
addr16
movsb
out
stc
in
push
adc
inc
imul
xchg
mov
les
push
andl
adc
adc
push
mov
mov
lods
sarl
gs
cmp
movsl
add
outsl
loopne
mov
xchg
call
push
roll
lock
clc
add
sbb
out
mov
loope
jp
fcomip
jmp
xchg
int
adc
stos
inc
sub
push
push
movsl
push
in
push
popf
inc
idiv
fidivrs
jnp
or
jmp
pop
push
lock
mov
dec
mov
ja
sbb
inc
test
inc
shrb
test
inc
xchg
push
imul
dec
xor
fsubrs
imul
sbb
scas
xchg
call
cmp
sti
fildl
dec
mov
sbb
dec
and
ficoml
incl
or
mov
dec
mov
push
femms
push
ud0
call
test
dec
addr16
ljmp
movsl
and
push
ss
jl
mov
pop
je
decl
enter
mov
jle
push
mov
inc
push
ret
dec
inc
mov
gs
xchg
push
shlb
adc
xor
test
pop
mov
mov
subb
outsb
inc
and
jnp
bnd
fdiv
pushl
add
cmc
add
jo
jnp
mov
movsb
dec
add
movsl
or
out
arpl
sub
decl
pop
sbb
pusha
cmpsl
leave
jo
sahf
hlt
sbb
lea
out
call
cmp
fcomps
mov
test
mov
dec
sbbb
jbe
in
jg
cmp
shll
cltd
jge
mov
fcoms
push
rcrb
dec
jmp
adcl
pushf
movsl
ds
dec
movsl
out
xchg
sbb
imul
push
jo
cmp
out
ljmp
mov
and
mov
xor
cli
mov
aad
cmp
btc
jmp
sbb
mov
pusha
inc
je
add
mov
jns
lret
push
mov
mov
mov
xor
dec
xchg
dec
ret
mov
test
add
sar
call
sub
mov
pop
xchg
std
mov
xor
sbb
pop
dec
rolb
and
adc
cmp
or
push
icebp
xchg
mov
and
iret
call
jecxz
push
inc
xor
mov
in
dec
sub
adcl
pop
icebp
pushl
sbb
stc
ss
xchg
mov
out
jmp
cli
sahf
pop
cmp
arpl
or
lret
xor
sbb
pop
inc
ffree
in
fistps
cmp
jmp
add
pop
or
mov
or
dec
lret
dec
cmp
xor
mov
aaa
scas
mov
or
inc
mov
in
mov
ja
mov
xchg
aam
out
cmc
fcompl
clc
icebp
cmp
ljmp
sbbb
pushf
mov
push
gs
sub
push
mov
add
incl
fcoms
add
mov
jg
fsubl
bound
sahf
iret
jecxz
push
cmpsl
xchg
or
mov
lcall
in
insl
cmc
jbe
push
mov
push
sbb
icebp
xlat
test
insl
outsl
mov
jbe
not
xor
inc
mov
cmp
mov
mov
mull
arpl
gs
fsubrl
inc
stc
pushf
out
enter
cli
mov
hlt
test
clc
dec
jge
mov
stos
adc
fwait
mov
inc
stos
mov
pop
mov
call
divb
and
sbb
sub
jae
test
push
ljmp
ret
loopne
in
and
cwtl
xchg
jo
mov
and
jp
lcall
dec
cmp
xor
rcrb
dec
or
mov
mov
je
scas
dec
ds
cmp
divl
push
xchg
push
cmp
adc
into
or
sbb
or
jg
or
push
jae
jg
jne
ja
and
cmp
stos
clc
out
es
dec
js
movsb
and
push
popf
out
fdivl
pop
loope
sbb
push
jmp
scas
call
push
fnsave
sub
int
clc
repz
sbb
repnz
call
mov
insb
andb
dec
cmp
sahf
shll
decl
imull
mov
ret
add
sbb
fdivs
cmp
ljmp
jl
sub
dec
xor
cmc
rcrb
dec
out
es
mov
push
fdivrp
ljmp
xchg
cmova
adc
mov
cmp
dec
add
lods
sbb
out
aam
dec
fwait
jg
jmp
jmp
test
outsb
insb
scas
out
pop
in
out
dec
cmp
or
loopne
ds
dec
mov
dec
mov
mov
popa
add
aaa
jge
lret
in
pop
xor
sub
cmp
jl
ljmp
sbb
adc
js
mov
and
sbb
ljmp
call
sbb
fs
xchg
push
lds
push
int3
icebp
pop
aad
repnz
cli
test
lcall
sarb
pop
jb
pop
dec
sbb
aas
fnstcw
hlt
ss
dec
ss
sbb
incl
sbb
fsubp
cmp
sbb
xchg
out
mov
ja
sar
jp
dec
ljmp
enter
pushl
jmp
sub
dec
sbb
sub
dec
xchg
push
dec
mov
popf
push
cmpsl
ljmp
sub
sub
shlb
jmp
sbb
testb
es
mov
mov
cmp
decl
sahf
lahf
fisttpl
jae
push
mov
rolb
dec
inc
mov
scas
mov
adc
inc
adc
push
mov
call
movsl
hlt
mov
jns
cs
mov
push
and
xchg
test
hlt
in
js,pt
sub
es
stos
mov
ss
fists
ss
inc
jae
mov
fbstp
adc
sbb
aam
cmpsl
adc
mov
clc
mov
cmp
hlt
mov
ljmp
inc
repz
pop
and
jp
xor
xchg
add
push
movsl
adc
push
pop
sarb
call
mov
jns
jmp
ficoml
dec
test
inc
sti
xchg
jb
jno
xchg
decl
pop
imull
lret
xchg
int
and
mov
cli
nop
push
xor
sub
stc
mov
incl
cmp
inc
stos
lcall
loopne
sub
loope
xchg
inc
mov
jg
mov
sub
add
rclb
aam
std
push
rorl
scas
push
jge
mov
lock
inc
push
mov
or
xchg
push
out
out
and
pop
mov
loop
mov
jl
stos
or
decl
mov
mov
bound
mov
xchg
jne
movsl
xor
xor
xchg
sbb
in
jle
jmp
aam
outsb
cmp
test
gs
call
jb
sarl
cmc
pop
mov
addr16
out
xchg
jb
cs
bound
test
mov
dec
push
mov
cmp
push
lahf
sti
icebp
xor
cwtl
shrl
sbb
jns
sarl
or
sbb
lcall
push
push
sbb
js
repz
lods
mov
xor
daa
cmp
sub
test
inc
inc
dec
test
clc
mov
jnp
inc
and
mov
mov
call
in
in
sti
xchg
movsb
add
or
mov
pusha
mov
sarl
jp
incl
sbb
ret
push
loope
nop
fs
fsubrs
push
jne
add
ljmp
jl
cli
or
fisubrs
aad
dec
sub
push
add
push
mov
in
into
loope
pop
cmp
leave
and
imull
adc
fwait
mov
cmpsb
mov
out
and
dec
dec
fnstenv
or
std
adc
xor
js
cmp
dec
jp
mov
xor
fs
call
loopne
es
jp
cs
pop
rcll
mov
dec
push
icebp
decl
push
jle
mov
adcb
sbb
pusha
call
sarb
mov
out
lret
ss
add
not
fs
ljmp
jmp
cld
sbbl
lret
cmp
xchg
inc
pop
or
clc
jne
pushf
and
pushl
in
fwait
adc
aam
or
mov
adc
inc
and
push
dec
jecxz
sbb
popf
dec
sahf
call
imul
bound
inc
and
jg
rcr
pop
push
lret
jmp
jb
mov
dec
mov
mov
add
mov
mov
out
in
fcoml
mov
mov
mov
inc
inc
jp
mov
pusha
int3
sbb
jmp
jmp
cmp
xchg
mov
or
fcomi
lahf
add
or
mov
fs
xchg
push
scas
push
stos
mov
repz
add
ljmp
jne
inc
sbb
jle
fildll
or
js
loopne
xor
and
ljmp
call
mov
adc
pop
mov
jmp
pop
add
das
lods
ljmp
cmp
pop
pop
jns
sbb
mov
mov
mov
int
lods
ja
cltd
sub
lcall
push
cmp
push
fcoms
clc
cli
xor
pop
jnp
xor
xchg
mov
jmp
sub
insb
push
adc
cmc
sbb
mov
xchg
jp
mov
xor
lods
std
push
add
fimuls
cmpsl
out
pop
insb
inc
cmp
adc
call
test
xchg
cmp
orb
adc
out
mov
jle
xor
inc
ret
mov
cmpsb
enter
cmp
fldl
addb
sub
aam
hlt
jl
int
sbb
in
adc
das
jl
push
icebp
stos
xchg
addr16
jp
mov
or
pop
and
dec
mov
jmp
fsubrl
movsl
scas
loopnew
sub
call
je
cmpsb
dec
jle
push
mov
push
pop
xorb
adc
iret
jbe
fcomip
mov
out
test
lret
jns
scas
xchg
imul
xchg
pushl
jb
movsl
mov
out
pop
addb
push
loopne
cmp
push
outsb
lret
pop
hlt
std
lret
pushl
mov
add
popf
in
xor
lea
or
sub
sbb
sti
adc
jg
ss
fsubrs
sbb
js
pop
mov
test
xchg
cmp
push
leave
pop
xor
fs
ljmp
sahf
mov
adc
cmp
pop
adc
and
into
or
loop
jo
dec
sub
mov
movsb
fwait
mov
jge
test
inc
bound
movsb
out
push
cmpsb
in
jns
imul
loopne
sahf
jge
jl
incl
mov
scas
mov
movsb
imul
jp
pop
xchg
test
incl
arpl
lea
add
pop
mov
repnz
ss
cmp
and
and
popa
jg
test
loopne
add
cmp
sbb
lcall
pop
dec
pop
sahf
jg
nop
inc
adc
push
in
pop
test
add
das
cmp
adc
popa
mov
movsl
test
jo
dec
fcmovu
pop
ss
pop
out
ljmp
add
popa
push
sub
scas
test
mov
sbb
and
ficoml
xchg
sbb
out
sbb
movsl
inc
cmp
dec
data16
mov
decl
mov
out
push
adc
ljmp
mov
insb
and
test
push
mov
or
and
push
ds
xor
sbb
dec
das
mov
incl
push
pop
cmpsb
cmp
bound
and
pop
dec
jmp
inc
push
xchg
pop
loop
fdivrs
test
imul
imul
and
cmpsb
loope
mov
lock
add
push
jne
mov
std
pop
je
mov
cmpsb
insl
and
cmpsl
dec
mov
in
aas
pop
ljmp
rorb
in
addr16
popf
and
jnp
or
xchg
shrb
shlb
adc
jmp
inc
mov
jo
enter
sbb
jb
xchg
into
push
sbb
mov
arpl
mov
daa
bound
pushf
push
fstl
pusha
mov
std
add
rcll
jmp
iret
jecxz
lret
inc
xor
pop
mov
scas
insb
repz
push
push
sub
and
dec
sbb
rol
pop
mov
jecxz
decl
imul
shlb
and
repnz
faddl
mov
sbb
push
out
mov
mov
and
pop
mov
jmp
adc
mov
jl
lea
fisubrl
push
shll
sub
xor
cmp
xlat
mov
jecxz
rclb
cs
cmp
es
lahf
or
and
or
test
movsb
dec
rorb
lock
mov
sar
enter
xchg
inc
mov
inc
xchg
and
les
and
divb
clc
lds
ret
dec
and
imul
pop
cmc
jmp
mov
xchg
jae
mov
mov
xchg
jge
mov
jp
cmc
pop
ja
decl
xor
mov
sahf
add
fldt
sub
movb
jo
popa
out
xchg
std
popf
mov
and
fcomps
jg
nop
jl
mov
pop
cmpl
mov
arpl
jns
or
incl
sbb
mov
sub
imul
lcall
fxch
xorb
repz
cwtl
mov
sbb
cmp
mov
sahf
fdivrl
mov
push
pop
add
cmp
leave
inc
mov
push
shl
decb
pushl
or
push
jg
dec
imul
adc
pop
icebp
lret
inc
xlat
out
call
fdivrs
pop
sub
xchg
or
mov
jno
pop
icebp
jmp
mov
sarl
mov
mov
insl
js
jmp
mov
lret
bound
insl
push
ret
sbb
sbb
jno
inc
fsincos
int
incl
push
xchg
mov
out
or
in
out
testb
loop
loop
decl
pop
jnp
mov
ss
cli
ret
xchg
add
lods
xlat
push
out
leave
and
dec
rorb
in
adc
or
xchg
mov
sub
test
mov
jp
and
pop
push
xor
movsl
test
std
cmpsb
or
adc
ss
mov
mov
inc
stos
call
or
mov
loopne
cmc
sub
jmp
int3
or
mov
jmp
mov
in
pop
sub
int3
mov
xchg
cs
out
jge
xchg
mov
test
cmpb
mov
iret
shlb
cmp
push
dec
adc
mov
call
adc
cld
pop
out
rorb
les
fsts
rcrb
rclb
arpl
enter
in
sahf
mov
mov
mov
incl
pop
outsb
add
in
jmp
mov
call
mov
xlat
sbb
jle
sub
pushf
js
mov
clc
fdivrl
addr16
push
ror
add
js
lret
call
fs
int3
sti
dec
or
int3
in
out
push
mov
cwtd
adc
cmp
inc
lret
xor
and
ret
cmp
push
push
or
cli
ret
pop
cs
inc
adc
cwtl
jae
pop
es
cli
lcall
out
rorb
imul
clc
pop
mov
bound
lcall
je
pop
sbb
repnz
lcall
les
push
dec
sbbl
sub
pushl
enter
aas
jmp
movsb
sahf
outsl
shlb
and
pop
pop
out
lret
and
aam
and
loopne
push
sbb
cmp
ficomps
faddl
pop
push
sbb
jmp
push
jbe
xorl
idiv
imul
dec
pop
xchg
add
jb
fwait
sbb
inc
stos
adc
jmp
int3
push
rorb
inc
test
imul
xchg
in
and
mov
subl
sub
jne
mov
inc
or
push
xchg
call
pop
in
push
xor
jge
sub
stos
loopne
mov
mov
adc
jp
cltd
pop
xlat
or
and
mov
dec
mov
decl
pusha
mov
loopne
cs
out
clc
dec
outsl
jmp
mov
insl
mov
je
mov
ja
lock
aaa
cld
dec
incl
loopne
icebp
mov
daa
mov
cmp
xabort
push
outsb
sub
call
aam
lahf
out
sub
pop
xchg
js
repnz
loopne
dec
clc
pop
sbb
cmp
lcall
lods
outsb
movsl
popf
ja
lds
jp
adc
sbb
push
sti
or
push
adcb
sbb
test
call
lea
adc
dec
mov
lds
jb
jno
fstl
in
test
nop
bound
ljmp
adc
loopne
sbb
pop
pop
mov
or
cwtl
call
cmp
mov
cwtl
out
js
lret
lcall
fdivrl
nop
hlt
dec
imull
push
test
ret
push
add
push
mov
inc
clc
sub
push
mov
popf
mov
mov
loope
rcll
dec
or
popa
mov
test
pop
adc
incl
pop
cmp
adc
insb
cmpl
sbb
mov
sub
push
cld
incl
insl
sub
inc
test
mov
aam
push
xchg
cld
scas
sbb
cs
stc
adc
insb
or
pushl
loopne
pop
or
aad
mov
mov
shrl
sti
outsb
or
inc
sub
decl
incb
and
dec
out
jecxz
les
add
das
clc
inc
aas
loope
fdivs
cmp
add
sub
in
cmp
xchg
decl
push
movb
pop
imul
or
into
std
cltd
out
mov
adc
xchg
call
fwait
and
faddp
mov
jno
and
je
jns
mov
cmp
incl
cwtl
push
cmp
fsubrp
into
adc
mov
jg
orb
pushf
js
outsl
out
sbbb
sarb
enter
xchg
pusha
fdivrp
add
jbe
push
add
jnp
in
sub
jo
ljmp
call
push
dec
in
mov
test
mov
popa
cmp
mov
data16
popf
in
xchg
mov
dec
adc
in
lcall
cmp
xor
mov
push
inc
dec
cmc
xchg
ljmp
xchg
fstpt
iret
rolb
pop
adc
dec
rorb
cld
xor
mov
lods
outsb
sahf
inc
repnz
repz
shrl
incl
xor
adc
and
lret
inc
jg
mov
dec
cmc
lods
clc
scas
sub
mov
push
mov
jl
mov
les
sti
pop
outsl
sahf
adcl
in
xchg
jmp
pop
outsl
adc
cld
js
or
fdivr
jmp
xchg
push
mov
mov
or
mov
mov
stos
push
inc
mov
arpl
jge
or
dec
in
inc
sbbb
xchg
sub
adc
push
jge
xlat
cmpsb
pop
call
cli
inc
psubusb
or
push
cmpsb
call
or
out
cwtl
ret
ss
inc
push
inc
dec
insb
mov
push
cmp
adc
out
cmpsl
ret
icebp
mov
jg
add
mov
cltd
stos
imul
fs
pushl
xor
scas
lock
jmp
push
xlat
pop
inc
and
cld
push
popf
push
mov
xlat
fdivrp
jmp
arpl
leave
sahf
je
pop
fists
insb
aas
push
and
outsb
sub
ja
jmp
jns
lock
xchg
push
xor
dec
stos
in
dec
push
or
jb
pop
dec
inc
jns
pop
dec
sbb
mov
xchg
je
lret
movsl
push
mov
icebp
jg
outsl
scas
fidivrs
mov
es
outsb
xchg
xor
xchg
add
movsb
lock
decl
pop
cwtl
scas
ljmp
xor
cmp
dec
cmp
push
movsb
gs
inc
ja
cmp
pop
xchg
cmc
inc
inc
insb
or
fdivs
pop
push
push
cmpsb
and
mov
mov
lret
sbb
sbb
mov
incl
and
movsb
mov
cmpsb
jae
addb
aad
xor
cmpsb
imul
mov
test
push
and
xor
push
cmpsl
call
outsb
icebp
lahf
sub
sbb
adcl
xchg
xlat
inc
and
incl
fsubp
sbb
aad
mov
ja
xchg
fbld
add
int3
xor
outsl
mov
mov
enter
sub
cmp
lret
loope
adc
outsl
into
jl
popf
pushf
scas
fidivrs
xor
clc
incl
out
mov
sarb
lds
adc
out
mov
cmp
incl
insl
rorb
dec
mov
mov
arpl
and
inc
test
jno
cmp
int
out
clc
jl
imul
push
in
shr
mov
shll
adc
mov
ljmp
pusha
test
in
lds
mov
mov
cmpsb
adcl
xchg
mov
js
cld
pop
adc
adc
xchg
pop
imul
mov
aas
outsl
mull
xchg
push
mov
pusha
inc
pop
sbb
xor
cmpsb
lret
fdiv
cmp
sub
jae
imul
pushf
jno
pop
inc
sar
lcall
cmp
lret
adc
xor
sbb
add
jmp
push
inc
loopne
push
mov
sahf
mov
cld
push
sbb
dec
bound
jg
add
arpl
repnz
js
push
ds
lcall
loopne
into
mov
jns
les
adc
adc
push
dec
lock
ljmp
iret
mov
test
dec
xor
ss
out
lahf
pop
jae
xor
lcall
insl
lock
jns
in
mov
adc
xor
push
inc
jo
jae
fistpl
sarb
pop
jg
incb
push
push
pop
stc
popa
dec
push
mov
test
testl
xlat
lock
inc
push
and
add
dec
popf
mov
pushl
cltd
fldl2t
jp
adc
mov
decl
sar
insl
add
push
bound
dec
popa
mov
sub
call
shll
dec
repnz
test
lret
and
sbb
mov
addr16
push
or
jmp
jns
pusha
fistps
imul
inc
add
fs
mov
repnz
fldcw
mov
enter
sub
pop
loope
fimuls
push
test
or
pop
dec
jmp
sbb
xchg
dec
test
stc
mov
jle
mov
sbb
or
sub
dec
mov
rcrb
mov
cmpsl
incb
call
test
loopne
mov
or
xor
cmp
dec
pop
cld
inc
cmp
add
std
jbe
mov
into
adc
inc
jo
sub
push
in
out
add
stos
aam
adc
outsl
add
xchg
shlb
hlt
fsubs
push
out
cli
call
inc
push
xor
xchg
pusha
xor
loope
xchg
ljmp
pop
lods
adc
add
call
in
dec
aas
enter
dec
jle
mov
pop
mov
test
pop
sub
bound
clc
in
lods
jl
pop
mov
cmpsb
sbb
stos
movsb
push
xor
ss
and
add
pushl
call
out
test
jmp
xor
gs
push
test
test
pushl
add
and
test
mov
adc
stc
sub
shrb
loopne
fsub
cmc
push
icebp
ljmp
add
scas
movsl
dec
jl
rorb
jge
mov
dec
xchg
pop
jecxz
inc
mov
xor
out
mov
enter
out
push
lock
xchg
sbb
inc
mov
scas
clc
lcall
pop
std
sub
mov
cltd
subl
or
call
std
std
lcall
movsb
mov
aaa
out
loop
xor
out
clc
dec
pop
shll
xlat
dec
mov
push
inc
and
sbb
incl
sub
xchg
lds
sbb
out
das
in
adc
fcmovne
movsl
jle
cmp
stc
and
and
push
out
pop
imul
fisubs
shl
mov
mov
inc
test
lds
sub
push
and
les
stos
mov
mov
push
mov
dec
std
sbb
bound
ljmp
xchg
mov
pop
hlt
inc
fistpl
xchg
push
push
mov
int
jnp
dec
cmp
test
push
movsl
dec
dec
or
mov
push
call
aad
jbe
fwait
aas
push
mov
add
sti
and
scas
xor
mov
cs
sub
adc
mov
into
jno
inc
cmp
xchg
ret
push
push
sar
jg
call
pop
out
mov
fldl
in
cmpsb
push
mov
rcr
mov
nop
and
mov
incl
push
cmp
mov
xchg
aad
push
mov
pop
cmpsl
cmp
lea
push
mov
pushl
rolb
mov
pop
ret
cmp
gs
imul
movsl
pusha
test
inc
xor
sbb
or
mov
pop
adc
dec
testl
push
push
sahf
stos
cmp
test
sbb
rol
lahf
in
cmp
rcrb
dec
div
pusha
scas
xchg
call
adc
insb
xchg
xchg
xchg
and
inc
dec
fwait
shlb
mov
cmp
mov
xchg
pusha
aad
mov
inc
adc
mov
sub
dec
mov
or
xor
ljmp
scas
push
xor
cli
xor
mov
push
out
and
fstpl
jae
imul
das
push
aad
sbb
adc
fdiv
lds
in
stos
sub
insb
pop
sub
sbb
mov
xchg
and
scas
xchg
mov
add
dec
lea
incl
cmp
int
into
mov
mov
push
pop
adc
mov
imul
sbb
xor
and
and
leave
cltd
ljmp
sbb
sti
sbb
dec
cmp
jb
jne
sbb
inc
inc
aas
movsb
nop
sti
mov
cmc
fstps
push
xchg
in
cmp
jecxz
ret
lahf
movsb
idivl
insl
sbb
popa
push
test
ljmp
pop
insl
mov
mov
jg
dec
js
push
or
adc
jg
mov
mov
mov
xchg
fldcw
mov
nop
out
ljmp
inc
add
adc
je
or
sahf
sub
rorb
fcomip
incl
in
or
inc
out
inc
notb
imul
mull
mov
mov
push
icebp
incl
and
add
add
lods
jbe
cwtl
lods
mov
test
ret
std
dec
in
or
enter
or
ja
push
mov
decl
push
and
mov
fisubrl
mov
enter
xchg
mov
push
xchg
das
lcall
sarb
or
and
daa
or
sahf
mov
mov
loopne
call
sub
mov
push
sbb
lods
inc
pop
push
push
mov
mov
cmpsb
cmp
jmp
push
test
sbb
push
push
jecxz
jne
xchg
cld
or
stc
or
lods
lods
pushf
mov
call
push
ss
push
outsl
lods
lea
int
mov
fdivr
mov
dec
enter
in
mov
js
cmp
lods
fldl
shr
inc
pop
xor
dec
push
int
fs
mov
imul
addr16
fldcw
mov
ret
push
clc
ja
jmp
loop
and
sub
lods
adc
lea
or
or
cmpb
mov
insb
fmuls
xor
add
xchg
ljmp
add
movsb
mov
mov
cmp
mov
xor
incl
mov
pop
loop
out
dec
or
adc
imul
out
les
sub
fbld
push
sub
mov
push
jbe
mov
and
insl
aad
or
stc
jno
aaa
mov
fistl
inc
int3
mov
ljmp
frndint
sub
jp
inc
stos
pop
jecxz
cmp
or
push
inc
lahf
push
push
test
sbb
jmp
test
push
loope
repz
xor
sbb
adc
cld
shll
leave
mov
lock
sub
outsb
ja
iret
add
push
and
test
in
push
lods
lret
ljmp
push
mov
xchg
das
out
push
aas
xchg
or
push
push
mov
sar
int
mov
decl
and
enter
push
jno
cli
shll
pushl
fsubl
cmpsl
and
fisubrl
sub
lods
lcall
jge
mov
insl
fs
mov
in
jno
push
jl
cltd
add
int3
out
rcrb
dec
fdivs
cmp
lock
or
les
lock
and
sar
jg
dec
adc
push
inc
out
lock
jmp
mov
icebp
dec
mov
enter
lock
push
cmpsb
cmp
fstpl
jno
ljmp
call
cli
xchg
push
insb
lds
dec
and
cmpsb
mov
cmp
shlb
lret
and
mov
mov
inc
jecxz
sbb
aas
mov
pop
xchg
or
data16
test
popa
mov
xchg
nop
push
int
bound
jle
hlt
fmulp
cmp
dec
ficompl
pop
lock
lret
mov
sbb
stos
leave
cmp
iret
dec
js
jl
stos
sub
xchg
pop
jno
decl
repnz
lahf
or
and
ret
sbb
pop
jl
add
fucomi
addr16
mov
or
push
inc
sti
xor
pusha
mov
or
ds
push
mov
pop
stc
aam
lock
push
push
dec
fbld
dec
popf
dec
int
cmc
cmp
decl
scas
out
scas
mov
push
or
add
aam
push
aas
repz
gs
outsb
scas
xor
push
insb
nop
mov
fdiv
pushl
lock
iret
insl
xor
aas
inc
mov
js
sub
cmp
into
das
hlt
fldt
ljmp
mov
sahf
icebp
jp
cmpsl
dec
rcrl
lret
insl
jecxz
call
mov
and
push
in
jnp
cmp
mov
fsubrp
and
cmp
mov
cmp
add
xchg
aad
pop
sti
out
cmpsb
jae
jb
pop
in
mov
jb
stos
jb
outsb
cli
mov
push
out
clc
pusha
in
pop
cmp
in
pop
add
or
xchg
push
lcall
mov
icebp
stc
xor
repz
mov
iret
pusha
das
call
pop
xchg
jmp
cmp
dec
dec
or
mov
push
mov
sub
push
loop
dec
sar
inc
mov
sub
mov
movsb
sar
jmp
cmp
xor
xchg
imul
jbe
shrl
sub
pop
inc
fsubrl
decl
push
lods
scas
notb
mov
je
icebp
pop
mov
adc
cmp
or
cwtl
push
test
cli
mov
ss
testl
inc
sar
inc
xor
and
lret
ljmp
bound
sub
sahf
shrb
xor
xor
mov
call
outsb
outsb
ret
ljmp
pop
mov
mov
clc
icebp
out
cld
cmp
in
push
cmp
fsts
mov
sti
ss
out
cli
push
imul
jmp
test
mov
adc
lods
mov
jg
stos
dec
lods
imul
in
mov
decl
shrb
inc
inc
fidivrs
aam
mov
incl
mov
xchg
gs
dec
xchg
andb
lcall
negb
and
ret
sti
outsl
imul
lcall
sbb
dec
dec
into
and
shlb
lret
sub
cmpb
pop
jle
mov
pushl
add
jno
mov
or
cli
or
movsb
push
jmp
inc
scas
fidivl
adc
dec
mov
outsb
fisubrl
sbb
loop
ljmp
leave
xchg
dec
pop
fwait
leave
fdivr
call
jno
mov
pop
lods
or
cmp
ret
sar
ljmp
and
pop
rcll
pop
pop
les
shlb
xchg
sbbl
or
sbb
add
hlt
mov
int
movsl
movsl
clc
mov
adc
loope
ljmp
repz
sbb
aam
loop
cmp
sbb
dec
add
mov
add
dec
repz
stos
jp
fmull
jns
hlt
fldcw
sub
incl
enter
test
rol
xor
out
jae
cmp
dec
add
stos
mov
pusha
mov
pop
fcmovb
lods
jge
sbbl
and
lods
cmpsb
push
add
jo
push
lock
jmp
pop
mov
cmpsl
in
outsl
mov
ss
lock
lcall
xor
cmp
inc
in
pop
pop
lret
leave
test
and
stc
fidivrs
les
mov
or
or
mov
adc
lret
mov
mov
ljmp
or
loopnew
xor
test
loop
dec
fcomip
ljmp
mov
mov
mov
mov
jnp
mov
mov
ja
xchg
pop
jge
scas
inc
or
or
dec
dec
shld
pop
data16
int
sti
arpl
lea
jle
sub
mov
repnz
pop
or
mov
adcl
jle
stos
dec
fldt
mov
mov
cwtl
insl
je
mov
idivb
push
mov
jns
ret
mov
push
xchg
sbb
inc
sub
jecxz
fwait
inc
xchg
add
dec
pop
xchg
lcall
dec
testl
sti
addb
orl
inc
xlat
incl
nop
pop
cmp
push
inc
mov
rorb
sti
jg
push
jnp
xchg
sub
popf
mov
inc
cmp
mov
data16
jg
loopne
movsl
mov
lods
xlat
inc
add
lock
in
movaps
or
fisubs
repz
adc
pop
outsb
mov
cmc
or
jg
mov
dec
xor
cmp
bound
jg
mov
dec
cmp
imul
jecxz
xchg
sub
cmc
jmp
dec
or
fmull
cmp
xchg
pop
shlb
aam
imul
mov
inc
scas
clc
jmp
movsl
push
mov
imul
mov
adc
ljmp
and
xchg
icebp
and
pop
pop
sbb
bound
xchg
movsl
insl
scas
cmp
outsl
clc
inc
cltd
repz
xor
jae
pusha
out
mov
mov
adc
aad
push
test
std
pushl
mov
movsl
push
test
loope
mov
pop
cmp
popf
mov
mov
cltd
clc
xor
jp
cltd
xchg
packuswb
in
std
dec
mov
and
jns
negl
dec
adc
xor
pop
aam
jecxz
mov
inc
jecxz
jno
ds
jg
movsl
and
ja
sbb
in
jecxz
idivb
negb
sub
add
pop
dec
lcall
ljmp
loop
adc
adc
xor
xchg
pushf
sbb
push
cli
sub
imul
xor
cmp
test
mov
fiaddl
js
inc
pop
stos
stos
movsl
das
and
push
mov
outsb
addr16
xchg
in
das
and
add
push
xor
push
mov
decl
lock
test
bound
xlat
pop
cmp
pusha
xchg
lahf
arpl
xor
loop
sub
pop
push
hlt
call
push
out
sub
aam
int
arpl
aad
cmp
cmp
mov
loopne
loope
in
fwait
in
mov
mov
bswap
push
movsb
aam
in
cmp
dec
out
and
adc
movsl
gs
cmp
cmpl
add
decl
push
add
in
in
push
ss
ljmp
icebp
popf
pop
push
push
out
mov
aaa
or
inc
jmp
xor
lods
sti
fwait
mov
jae
pop
out
prefetcht0
mov
cli
adc
xchg
mov
in
pop
cmp
jg
imul
fldcw
inc
jne
xchg
mov
repz
jmp
pusha
sub
fcomps
outsb
das
inc
push
cs
sub
dec
out
dec
pop
sti
fnsave
jns
incl
and
dec
leave
ja
leave
mov
push
loopne
sub
test
or
cvtdq2ps
xchg
push
or
adc
dec
or
aas
jb
lea
loope
fists
inc
call
dec
jne
dec
lret
xchg
loopne
cmp
inc
psubusw
adc
xlat
scas
testb
stos
jnp
cmp
sub
movsl
fdivrs
xor
xorl
stos
cmc
rclb
cwtl
lret
jbe
sbb
call
or
out
adc
mov
push
arpl
pop
and
sbb
sbb
sbb
or
ss
in
push
add
mov
adc
mov
arpl
shll
dec
or
xor
cmc
out
add
mov
fisubs
mov
mov
leave
jno
in
pushl
or
jp
xchg
out
or
pop
pop
inc
mov
lea
push
xor
mov
add
mov
movsl
xchg
xor
stos
lret
dec
addr16
sub
cli
add
iret
test
sar
outsl
nop
loop
dec
cmp
stc
xor
push
jns
out
cld
cmc
mov
xchg
xchg
dec
loopne
clc
push
shlb
jae
push
cli
lret
jmp
xchg
insb
jl
in
insl
add
mov
addb
jg
imul
mov
fbstp
cli
mov
data16
movsb
repnz
fisubrl
cli
add
sbb
outsl
clc
jmp
mov
xchg
je
fdivr
ret
mov
pop
mov
sub
dec
pop
test
adc
cmp
sbb
pop
test
cmp
mov
add
in
add
inc
ror
mov
dec
pop
pop
and
call
jae
push
pop
xor
sbb
jge
adc
pop
lcall
into
fists
ss
fbld
sub
call
jmp
xchg
jo
jae
mov
adc
xlat
xchg
dec
scas
mov
inc
push
push
leave
push
sti
mov
js
xchg
cmp
in
nop
pop
test
cmc
xor
push
fld
mov
call
subb
add
jg
cmp
insb
bound
add
push
jp
mov
call
in
ss
xchg
negb
mov
pop
mov
sbb
loope
mov
push
mov
lcall
ret
bswap
jo
daa
mov
mov
cmp
sbb
pushf
dec
xor
jle
push
sbb
xor
mov
pusha
push
mov
or
push
cmp
daa
mov
nop
sub
inc
jns
loop
lea
inc
mov
add
mov
mov
lods
call
dec
xchg
push
les
dec
ficoml
or
decl
stc
fldt
test
int
fsts
jbe
mov
or
fstps
mov
dec
out
push
incl
adc
lret
mov
lds
add
sbb
in
push
je
mov
push
fucomi
and
xchg
fsubr
rorl
cmp
jl
xchg
mov
pop
jg
inc
js
dec
stos
rorl
popf
cmp
lcall
xchg
imul
and
pop
mov
and
push
inc
leave
pop
xor
jmp
and
pop
push
stos
sbb
lock
clc
mov
xchg
in
fcmovbe
adc
in
mov
jnp
es
andb
imul
addl
push
xchg
data16
js
or
jp
fbld
cmp
mov
push
in
mov
inc
pop
xchg
mov
adc
pop
jp
out
fiadds
dec
js
mov
push
fnsave
fisttpll
arpl
scas
cmc
loopne
out
in
arpl
andl
push
jge
cltd
repz
inc
push
push
xor
add
cmp
adc
loop
push
lcall
mov
sub
xchg
repz
in
popa
jbe
cmp
mov
ds
ljmp
lcall
pop
fwait
mov
mov
cmp
jns
mov
les
lcall
incl
popa
popa
dec
xor
into
or
pop
or
sub
lcall
sub
mov
pop
dec
daa
mov
fidivrs
enter
in
cwtl
adc
fcmovnb
mov
and
xor
jg
pushl
lahf
movsb
sbb
pop
mov
movsl
cmp
sbb
scas
shll
jg
call
jmp
subb
and
xlat
jmp
inc
jl
jp
out
fmull
and
test
cmp
xlat
dec
jge
or
fsubs
test
push
push
ljmp
jg
pop
seto
sahf
stc
into
and
dec
jne
leave
mov
inc
repnz
out
repz
loope
xor
sub
pop
aas
mov
les
sub
fldenv
jg
push
fwait
push
ret
mov
mov
cwtl
leave
push
sub
jge
xor
push
lock
enter
cmp
and
adcl
pop
fsubp
jg
xor
out
sbb
leave
cmpsl
mov
fcomip
pushl
arpl
fnstsw
add
adc
dec
jp
adc
enter
lock
test
pop
gs
cmp
sbb
push
insl
adc
lods
nop
shrb
fwait
ret
mov
incl
add
xchg
ljmp
in
sbb
lret
or
das
repnz
pop
dec
in
incl
cld
lcall
sbb
xor
es
sar
adc
imul
pushl
daa
rorb
push
jecxz
fwait
cmpb
cmp
ss
scas
in
in
loop
sub
or
inc
inc
sahf
fdivr
lcall
sub
cmpsl
sti
das
dec
pusha
inc
jmp
sbb
cmp
call
jo
aas
sbbl
mov
int
mov
leave
and
rcll
add
stos
cmpsb
sub
std
outsb
mov
aam
ficoms
dec
and
cmp
jg
or
rolb
dec
jns
or
push
dec
sbb
or
lcall
call
or
pop
mov
call
out
mov
or
jp
faddp
push
cli
popa
test
mov
jno
add
jnp
into
fwait
popf
mov
cmp
lods
decb
mov
outsl
nop
mov
and
or
adc
add
lods
arpl
jg
push
pop
mov
dec
pop
mov
stos
inc
scas
cmp
pop
lahf
xor
test
jmp
sbb
ljmp
mov
icebp
gs
or
je
and
stos
cmp
jmp
negb
in
loope
jmp
into
sbbb
dec
dec
lock
dec
push
insl
call
loopne
and
ret
and
mov
rol
pusha
and
xor
fisttpl
mov
jl
add
insl
cmp
mov
idivl
pop
cmp
inc
add
or
xor
fsubl
mov
std
cwtl
icebp
notl
adc
mov
cmp
xor
push
lock
mov
in
mov
in
xchg
mov
cmpsl
and
add
imul
sbb
pop
adc
pop
and
jmp
add
incl
cmpsl
nop
mov
mov
dec
mov
stos
push
xor
dec
imul
jg
fdivrs
push
ss
pop
popa
xchg
leave
movq
gs
inc
pushf
test
xor
sbb
xchg
push
or
dec
and
add
cmpsb
into
inc
pushl
cld
dec
inc
mov
xchg
adcb
and
and
repz
mov
incl
dec
les
cld
and
aam
cmp
dec
push
cmpsl
andb
jns
movsl
cmp
movsb
loop
out
sub
cld
ret
jle
xorb
mov
xchg
jb
out
inc
sbb
mov
mov
push
mov
int
cmpsl
xchg
lods
frstor
add
or
inc
inc
mov
pusha
in
loop
js
pop
lcall
adc
lea
push
adc
jmp
lods
dec
xchg
inc
mov
or
rcll
jne
fbld
jecxz
test
in
enter
mov
lds
rcl
decl
dec
test
repnz
icebp
sub
mov
add
aaa
dec
sub
ja
pop
sti
adc
fisttps
jge
push
popa
jg
stos
jns
cli
loope
jae
lock
jmp
jmp
and
lods
sbb
sti
sbb
dec
rcll
mov
loopne
jns
sahf
mov
aaa
dec
xchg
dec
dec
pushf
xchg
jle
clc
jo
ljmp
adcb
outsl
mov
sbb
aas
clc
pop
fmulp
cli
pushl
inc
addr16
xor
inc
xchg
mov
xchg
xor
call
mov
cwtl
cltd
outsl
into
shlb
mov
and
bound
or
dec
sbb
clc
rcr
inc
jns
mov
sub
mov
push
xchg
xchg
pop
pushf
daa
mov
lret
xor
in
decl
xor
jle
sub
sahf
loop
sbb
fistps
mov
cmp
mov
jg
dec
dec
cmp
pop
inc
dec
shlb
xor
sbb
dec
xchg
xor
ljmp
push
pop
sbb
or
pop
mov
out
fnsave
cmp
adc
call
js
xlat
mov
inc
pushf
mov
imul
and
lock
sahf
inc
and
push
push
xor
adc
fistpll
push
popf
test
cli
jl
pop
std
ljmp
or
pop
dec
mov
leave
jbe
cmc
cs
das
or
decl
mov
push
sti
push
andb
cmp
jg
imul
dec
loope
lret
xchg
fwait
movl
lret
sbb
outsb
call
jno
xor
xor
outsb
ret
insl
dec
dec
dec
xchg
cld
sub
call
std
cmp
inc
stos
xchg
adc
pusha
dec
leave
inc
or
and
cmpsb
in
clc
test
jmp
test
je
sbb
mov
xorb
mov
pusha
sbb
mov
inc
das
ljmp
xor
div
jb
inc
fiadds
and
and
outsb
sbb
lcall
jne
rclb
out
dec
test
add
sbb
sbb
or
cmp
push
addl
gs
push
test
sub
int3
pop
aam
or
sub
lcall
pop
test
sbb
dec
pop
cmc
je
mov
nop
and
mov
shll
push
ljmp
mov
cmp
dec
cltd
sub
add
lret
adc
in
pop
jp
call
add
add
out
or
out
push
popa
pop
adc
adc
incl
push
int
pop
sbb
jge
mov
shll
nop
sbb
subb
psubd
xchg
lds
inc
ljmp
cmpsb
scas
push
hlt
out
int3
fcmovb
sub
in
cltd
out
xchg
jge
popa
sub
push
aas
loopne
mov
jge
mov
sub
cli
data16
mov
ss
jmp
test
lods
dec
dec
sub
out
stc
cwtl
in
fadds
punpcklbw
mov
mov
push
imul
loope
mov
adc
mov
mov
lret
aas
sar
ljmp
pop
bound
fcmovu
xor
test
std
inc
fimull
mov
cmp
clc
scas
movsb
jae
loopne
incl
mov
xor
cltd
clc
in
or
and
jb
mov
test
or
inc
or
cmp
mov
out
in
decl
jno
imul
ret
movsl
adc
jno
test
dec
xchg
mov
jmp
mov
dec
lret
xchg
add
push
pushf
sbb
xchg
fildll
sbb
xchg
out
clc
jmp
or
xor
push
mov
scas
ret
arpl
mov
lret
push
inc
or
cmpsl
sbbl
jle
out
sbb
shl
test
mov
fdivr
ljmp
shlb
sbb
call
xlat
movsl
or
in
push
std
out
xchg
jo
in
jb
mov
sbb
cs
xor
adcl
sbbb
lcall
ja
aad
cmp
rsm
stc
sti
repnz
cmpsb
ficoml
shrb
aas
call
jp
dec
or
ja
jo
sub
add
jns
cmp
and
popa
addr16
call
sahf
mov
xchg
and
aam
lock
sar
push
popa
cli
pop
movsl
mov
pushf
push
jge,pt
mov
push
into
aaa
subb
leave
mov
test
jg
xchg
lret
mov
movsb
xchg
pop
push
xchg
dec
lcall
pop
orl
fnstenv
dec
aas
sbb
xlat
scas
pushl
pop
sti
mov
cs
cmp
ljmp
lcall
pusha
enter
xchg
icebp
mov
xchg
pop
add
stc
jb
call
push
jo
mov
sbb
mov
pop
sbb
push
sub
incl
mov
mov
es
scas
dec
or
dec
testl
jmp
push
je
dec
je
mov
mov
xor
shlb
dec
in
mov
pop
imul
or
repnz
imul
loop
or
bound
dec
test
mov
call
push
ret
aam
push
out
jns
insb
lea
fnstenv
push
je
sub
jbe
jg
push
add
aas
dec
xchg
cld
stos
mov
lods
or
ljmp
movsb
pop
outsl
mov
dec
mov
out
lea
test
and
pop
negb
je
and
icebp
pushl
mov
mov
cmp
in
test
inc
add
idiv
out
clc
decl
std
mov
push
cmp
aam
sub
out
lock
pop
mov
push
ja
cli
ds
sub
sub
pop
stc
hlt
xchg
testb
test
mov
add
mov
mov
stos
pop
xor
jg
lea
xchg
inc
and
cmp
outsl
xchg
rcll
mov
inc
pop
call
dec
sahf
leave
dec
loope
push
subl
cld
icebp
out
add
dec
clc
popa
lret
mov
pusha
shlb
imul
or
mov
sub
inc
out
cmp
shlb
push
lret
cmp
in
pusha
mov
incl
inc
aad
pop
mov
data16
sbb
es
push
int
or
decl
pop
test
xor
mov
jle
repnz
cltd
pop
inc
pushf
push
mov
int
decl
lock
mov
movsb
mov
and
pop
lret
js
dec
in
push
mov
lds
stos
fbstp
xchg
scas
enter
add
push
das
es
dec
enter
jmp
xchg
mov
insl
pop
fs
xor
lcall
xor
clc
les
imul
xchg
arpl
mov
jl
jg
jmp
xor
neg
push
inc
leave
dec
mov
push
adc
push
push
shll
dec
cmp
mov
mulb
dec
sar
dec
jbe
mov
cmp
lock
aaa
cmp
cld
jg
aaa
push
jle
push
xchg
int
clc
lret
into
pop
add
sbb
xor
loopne
lock
aam
daa
push
or
lock
push
ret
sub
loopne
js
xchg
inc
mov
jmp
hlt
out
out
lret
mov
jae
in
outsl
fs
xlat
in
faddp
jmp
push
jge
pop
add
incl
out
fildll
sti
dec
push
cmc
loop
in
movsl
sbb
pop
outsb
and
sbb
idivl
pop
and
mov
mov
dec
jmp
mov
mull
cli
or
lahf
movsl
inc
cs
fidivl
jp
mov
sbb
cli
in
mov
mov
bound
fcoms
or
call
mov
xor
ret
jp
dec
sub
mov
es
jp
imul
pop
xchg
je
add
sub
inc
or
add
jae
adc
call
fbld
ja
aam
pop
int3
ret
lcall
and
xor
mov
cmp
enter
dec
lea
and
sbb
add
cmp
xchg
les
out
ret
clc
call
mov
adc
mov
mov
or
cmpb
mov
mov
ljmp
push
inc
add
jae
lock
in
pop
in
mov
xchg
and
inc
mov
mov
push
add
pushl
lret
es
orl
jmp
scas
lcall
pushf
test
sbb
out
ss
loop
aam
xchg
xchg
adc
lcall
sbb
mov
cltd
add
fisttpl
sahf
push
pop
mov
daa
repnz
jae
dec
xchg
cltd
pushf
xchg
and
and
fmul
inc
jecxz
jb
or
divb
ljmp
pop
dec
fdivrs
cmp
jne
mov
mov
aam
mov
daa
xchg
jnp
adc
mov
jbe
pop
xchg
stc
and
lcall
ret
sub
inc
dec
in
jmp
ljmp
jp
pop
inc
mov
ret
jle
or
or
mov
decl
pop
add
repz
adc
addr16
lret
mov
fsubr
adc
xor
and
fldl
ret
loopne
push
add
mov
inc
and
or
and
cmpb
dec
push
and
push
stc
jg
push
adc
std
xchg
std
lds
fcomps
pushl
push
icebp
mov
gs
cs
mov
outsb
mov
cmp
rcll
and
incl
fisttps
xor
clc
mov
mov
lods
ja
dec
dec
das
push
jg
popf
sub
pushl
xor
xchg
loope
xor
push
inc
pop
dec
scas
fidivrl
jb
mov
xor
dec
mov
xor
pop
gs
out
aaa
add
inc
dec
push
adcb
cmp
push
xchg
mov
call
push
arpl
lahf
push
mov
test
jl
ljmp
mov
jne
pusha
xchg
push
adc
mov
popa
mov
fists
cwtl
fcomip
pushl
call
inc
inc
dec
mov
jbe
ljmp
jmp
mov
loopne
xor
loop
fbstp
lret
mov
push
pop
clc
jmp
fwait
xchg
or
cmpsl
test
adc
mov
jmp
push
jge
inc
add
fnstcw
sti
jg
push
pop
mov
jge
negl
mov
into
sbb
fs
mov
jmp
cld
and
mov
aam
sbb
mov
cmpsb
pop
or
jmp
inc
or
fbld
mov
into
xlat
sub
mov
inc
call
pop
mov
xor
push
es
lds
fistl
or
pop
loopne
incl
inc
pop
mov
xchg
ret
test
or
mov
sar
sbb
lods
lcall
call
and
xor
test
add
lds
xor
push
mov
mov
pop
rcrb
and
cmpsb
mulb
jle
shr
std
push
pop
ret
fsubr
mov
fistpl
subb
jl
incl
clc
in
push
insl
mov
or
fisubrs
das
daa
into
mov
sub
loopne
andb
push
pop
shrl
ja
aaa
mov
adc
mov
cmpsb
and
pusha
add
xor
ljmp
mov
dec
out
decb
aam
or
sub
pop
lcall
adc
mov
shr
out
inc
dec
sub
dec
gs
cmc
cmp
and
cmp
mov
call
xor
mov
repnz
aas
jbe
out
xor
bswap
aaa
int
inc
stos
dec
jle
nop
xchg
addl
scas
dec
cwtl
jns
xor
mov
mov
push
pushl
mov
jmp
lret
add
into
lock
pop
inc
jge
mov
filds
xchg
mov
call
xchg
out
and
and
adc
shlb
outsb
cmp
adc
mov
mov
push
hlt
movsl
lret
xchg
inc
push
mov
daa
stos
in
addl
jg
cmp
add
pusha
loope
add
mov
cltd
mov
es
mov
xchg
dec
insb
mov
data16
inc
sbb
shlb
loop
outsb
pop
lret
mov
sbbl
test
jg
out
mov
lcall
loop
inc
cmpsl
cmp
ja
decl
int
pop
push
popl
into
inc
fimull
sub
inc
pushf
and
pop
call
es
in
out
jns
arpl
sbb
daa
test
mov
jae
push
dec
repnz
pushl
subl
mov
fmul
jne
enter
hlt
cmpsl
loop
xor
adcb
push
enter
decb
mov
mov
int
and
mov
dec
jnp
popa
and
mull
test
pop
sub
cmpsl
push
mov
sub
loopne
incl
imull
adc
loope
dec
and
mov
xchg
pop
test
mov
mov
dec
mov
data16
adc
in
int3
sub
xchg
or
bound
std
jmp
push
in
jnp
add
dec
adc
std
push
and
mov
mov
jmp
ret
subl
mov
sbb
pop
arpl
loope
dec
sub
push
cmpsb
fwait
pusha
jecxz
add
dec
fistpl
ret
xchg
pushl
rcrl
push
insb
push
push
inc
rol
loop
fwait
adc
push
jl
aad
cmp
decl
adc
aam
cmp
mov
sub
xchg
in
aaa
xchg
rcl
jecxz
sub
add
call
xor
fs
aad
rolb
dec
sub
jp
cmp
jns
fwait
mov
xor
mov
call
adc
mov
movsb
sahf
mov
sub
imul
jae
stos
dec
mov
inc
mov
push
xor
out
push
stos
pop
jle
push
push
in
inc
sub
jg
mov
jle
sub
push
cmpsl
jle
pop
std
add
xchg
cmp
push
dec
xchg
and
jmp
cld
jg
sub
addr16
push
lcall
adc
and
repnz
push
daa
dec
in
data16
into
sub
jbe
xchg
ficoml
mov
ljmp
clc
outsl
movsb
out
add
inc
movsb
fsubl
pop
icebp
lahf
sti
test
movsb
scas
mov
inc
imul
add
push
aam
repnz
or
mov
int
sbb
imul
divl
xorb
cld
sub
lcall
or
incl
add
jbe
insl
jne
clc
mov
jg
pushl
xlat
cli
mov
test
push
jmp
arpl
sahf
or
arpl
dec
dec
int3
test
stos
test
fcomip
test
mov
and
out
jge
xchg
pop
dec
or
jmp
sahf
add
bound
cmp
cld
mov
sub
pop
pop
push
push
pop
js
decl
movsl
inc
insb
lock
pop
out
lea
ljmp
js
in
dec
jge
mov
push
into
mov
pusha
or
xchg
nop
adc
and
cmp
cltd
cmp
das
xor
pop
push
push
adc
test
sbb
out
adc
std
add
fisubs
outsb
and
jo
cld
xlat
push
xchg
test
mov
call
loop
dec
aam
sub
mov
cs
aad
fs
daa
lcall
fwait
repnz
ljmp
cmp
fbld
out
xor
je
dec
dec
or
dec
and
fwait
sub
push
fisttps
cmp
cmp
dec
sub
fnstsw
js
mov
mov
ljmp
stc
outsb
in
fs
ret
sub
jo
int3
int
sti
adc
mov
xchg
push
dec
fcmove
mov
jnp
ror
lods
sub
adc
add
js
movsl
add
xchg
fwait
sbb
cs
in
imul
inc
xchg
pop
pushf
inc
sarb
test
les
enter
pop
insb
xor
testb
popf
push
lret
xchg
test
cltd
fmul
ljmp
xchg
dec
and
mov
add
decl
bound
adcl
js
dec
sub
mov
loope
jmp
incb
cltd
cwtl
leave
es
and
dec
lock
hlt
loope
inc
add
lcall
arpl
fidivrs
or
rolb
out
movsl
xchg
adc
inc
xchg
iret
es
cmp
fsubl
add
pop
int
dec
xchg
fnstsw
pop
or
inc
push
sub
out
cmp
pop
xor
ljmp
das
jge
cmp
mov
xor
cwtl
push
sbb
sub
sub
xor
pushl
shlb
loope
rcrl
and
push
sbb
cmp
dec
iret
xor
mov
pushl
repz
jnp
call
and
scas
adc
lret
pop
adc
movl
lock
pushl
pop
in
and
test
lret
sbb
adc
incl
fcoms
shrb
cli
test
push
push
mov
add
mov
insb
fdiv
push
in
mov
out
sub
test
clc
sub
pop
dec
xor
mov
jo
or
mov
adc
dec
mov
mov
lahf
insb
push
push
sbb
popa
push
mov
mov
arpl
dec
add
lcall
mov
out
mov
popa
sbbb
pop
xchg
inc
icebp
mov
pop
mov
cmp
cmp
frstor
loopne
leave
ret
jnp
in
or
iret
mov
lds
cltd
fsubrl
lods
or
movsl
mov
sub
call
mov
fiadds
or
loope
das
shlb
pushf
sbbl
into
xchg
xchg
js
aam
mov
jno
sbb
imul
mov
int3
xchg
pop
popf
mov
inc
lods
push
jns
fcomip
repz
inc
mov
adc
sbb
aas
jg
or
adc
dec
lret
test
pushl
mov
xor
hlt
pop
push
adc
adc
pop
sub
stos
adcb
sub
sbb
push
jg
xchg
adc
or
insb
test
das
or
rorb
jg
inc
ljmp
xchg
daa
dec
add
sbb
push
jecxz
push
jno
pop
lret
rcrb
fdivrs
pop
mov
cli
fcmovnbe
call
jmp
xor
aas
jp
std
xchg
inc
inc
mov
mov
or
in
ud0
inc
lds
inc
repz
aas
pop
sarb
jb
fnstcw
pusha
jecxz
jnp
sbb
lcall
mov
push
jbe
insb
sbb
rcrl
mov
cmpsl
xchg
xor
sub
rol
sbb
pop
sub
pop
sbb
and
lods
xor
cmp
dec
cltd
shll
popf
push
rcll
jbe
xchg
insb
push
push
or
test
add
mov
cli
sub
sarl
lret
cli
cmp
ror
cmp
lods
test
push
add
hlt
push
int3
inc
cltd
add
out
mov
or
push
push
sbb
dec
or
add
lods
int3
lret
adc
stos
or
sub
pop
in
pop
and
mov
cwtl
sub
pop
push
push
xor
pusha
dec
or
jmp
ljmp
jmp
xchg
ret
fwait
pop
or
cmp
hlt
in
inc
loop
jmp
xchg
add
mov
loope
loope
mov
cmpsl
enter
sahf
dec
xor
or
dec
popf
or
jg
pushl
adc
or
adc
rcll
or
or
ja
ljmp
mov
xlat
mov
ds
dec
sbb
jno
mov
mov
mov
jmp
jo
jle
sub
bound
and
in
xchg
xchg
mov
dec
jmp
jbe
xor
push
sub
adc
mov
jle
push
and
cmp
stos
sub
cmp
aam
jo
xor
sbb
int
stc
mov
sbb
loop
jns
aaa
jbe
sti
mov
bound
inc
lret
es
mov
lea
mov
xor
sahf
test
lock
push
sub
roll
aad
jne,pn
call
inc
adc
xchg
lods
lret
sub
data16
out
xchg
in
ret
loop
je
sub
push
fdivrl
rcll
xchg
add
add
mov
out
aad
inc
mov
pop
xchg
fwait
das
dec
mov
pop
ss
jecxz
add
mov
mov
jg
pop
leave
andb
sub
mov
out
dec
inc
xchg
push
cs
or
or
jo
inc
xchg
mov
fldenv
shlb
pop
pushl
xchg
push
cmc
out
add
pop
push
or
sub
sahf
adc
popa
stos
dec
ss
mov
sub
xchg
mov
jge
sahf
stos
cmp
mov
mov
pushl
jge
push
sahf
in
sahf
xchg
andnps
je
push
cmc
dec
and
mov
sub
ss
vshufps
sar
add
inc
arpl
jp
cli
xor
lcall
scas
test
push
sbb
fdivs
rorb
ljmp
ss
into
mov
fcoms
arpl
push
sbb
leave
sbb
incl
adc
fs
xchg
adc
arpl
pop
push
mov
jmp
cmc
mov
xchg
in
mov
dec
insb
mov
cmc
or
aas
pop
mov
add
into
inc
cld
decb
sbb
mov
fnsave
dec
fsubrl
inc
incl
insl
sar
addr16
xchg
out
lret
mov
pop
iret
lock
int3
and
imul
pushl
sbb
inc
adc
scas
lods
push
mov
adc
in
or
mov
mov
addr16
imul
xchg
ret
adc
in
addl
jg
outsl
cmp
jae
das
push
test
mov
call
mov
push
xchg
jne
pushf
or
int3
imul
pop
das
jae
popa
jecxz
fs
xchg
std
mov
scas
clc
and
pop
loopne
incl
mov
in
xchg
adcb
xchg
xor
test
mov
pop
hlt
pop
and
push
inc
addr16
add
pop
pusha
popl
pop
lcall
mov
push
push
pop
xchg
push
fisubl
fcomip
sub
and
stc
dec
push
decl
mov
fiaddl
stos
mov
cltd
frstor
mov
stc
cmc
xchg
mov
pushl
push
jecxz
dec
sarl
mov
ds
sub
inc
icebp
push
sub
lock
decl
pop
push
adc
sarb
and
stos
xor
jge
fstpl
mov
pop
or
test
dec
fdivp
into
dec
mov
pop
sbb
enter
cwtl
pop
icebp
mov
loop
and
mov
decl
data16
out
testb
cwtl
push
popa
sub
ret
subl
shl
dec
mov
or
incl
addr16
mov
inc
mov
xchg
movsl
std
mov
sbb
xlat
lret
sar
decl
or
shll
bound
dec
xor
mov
or
lcall
sarl
xchg
jo
and
jp
icebp
stos
cmp
dec
lret
adc
scas
xor
add
ljmp
push
cmpsl
faddl
jnp
pop
dec
ret
sub
inc
pop
mov
jo
mov
mov
jns
cli
sbb
shl
and
inc
fnstsw
aaa
xchg
jle
call
insb
out
es
es
ret
mov
jne
cmpsl
inc
cld
add
fcomps
cmpsb
out
js
daa
icebp
out
pop
out
or
cmp
ljmp
movsb
sub
stos
push
xchg
leave
adc
scas
ret
pop
mov
pop
icebp
incl
subb
lds
xchg
adc
adc
addr16
push
mov
pop
sbb
sbb
and
gs
ss
leave
loope
imulb
test
dec
mov
pop
cmc
outsl
xchg
cmpsb
mov
push
xchg
sbb
decb
cli
outsl
cmpsl
imul
pop
dec
or
sub
mov
movsl
jge
mov
and
push
push
pushf
dec
xor
pop
ljmp
sbbb
mul
push
leave
pop
sbbb
movsl
push
pushf
jmp
cmp
daa
mov
jo
lds
jmp
pop
jb
push
lods
lahf
cmp
test
daa
pop
xchg
fisubrs
int3
push
push
push
push
sbb
mov
lock
sub
xchg
dec
mov
cmp
aas
fcmovnbe
jl
pop
or
pop
sti
enter
outsl
inc
inc
lcall
xchg
dec
add
lcall
adc
out
xor
dec
mov
movsb
mov
decl
mov
push
mov
mov
push
sbb
mov
aad
sbb
ja
add
inc
fs
mov
push
movsl
push
dec
jecxz
fsubp
dec
sbb
outsl
mov
insb
dec
push
in
lcall
jnp
cmc
mov
popf
mov
into
aas
ret
adc
fiadds
lcall
les
cmp
loop
dec
jp
loope
test
adc
fwait
inc
dec
leave
mov
popf
mov
inc
cld
mov
cs
movsl
cmp
jg
mov
icebp
mov
movsl
aas
mov
sub
push
repnz
jg
das
mov
ja
jg
ret
insb
or
and
pop
inc
xor
lcall
push
jnp
clc
push
mov
mov
aaa
push
cli
jns
icebp
inc
sbbl
lea
xchg
mov
fs
mov
inc
inc
loopne
xorb
add
fcoml
int
mov
mov
push
adc
in
inc
ret
lds
hlt
loope
scas
movl
stos
addr16
sub
lods
pop
cmp
dec
ljmp
sub
mov
add
jns
pop
in
cmp
pushf
leave
jecxz
inc
lcall
sbb
xchg
int
mov
jl
pushl
bound
cmp
push
call
dec
push
add
jg
fsubrs
jb
ljmp
add
jno
pop
daa
add
mov
rclb
decl
push
std
lea
cmpsb
movsb
cli
dec
mov
pop
sbb
mov
mov
xchg
js
fadds
out
lret
push
and
xor
push
das
sbb
idivb
cmp
jl
push
xchg
xor
ljmp
push
stos
or
addr16
jb
xor
jnp
or
lcall
sbb
cmp
out
mov
int3
in
push
pop
pop
int
cwtl
pushf
insl
or
pusha
ds
in
mov
jae
daa
jnp
jno
sub
test
cmpsb
fsubrs
lcall
fs
jmp
pushf
mov
pop
push
iret
push
pop
lcall
pop
xchg
jg
push
lcall
adc
xchg
cld
call
cld
cltd
cmpsl
shll
daa
xor
int
and
jb
adc
loope
call
mov
pop
adc
push
sub
imul
jp
jns
nop
adc
fwait
scas
imul
fbstp
mov
adc
sahf
jg
or
cmp
pop
stos
dec
or
jbe
in
pop
scas
adc
rclb
cld
lods
push
inc
cmpsb
hlt
out
mov
lea
jns
xor
dec
push
push
stos
mov
aaa
std
ljmp
mov
data16
repz
push
imul
push
das
shrb
push
cmpsb
jg
xor
inc
jecxz
mov
push
mov
push
aam
stos
fsubr
dec
and
add
push
notl
test
xor
ret
jne
fiadds
mov
and
call
xchg
fs
inc
cmp
mov
push
enter
and
jmp
dec
dec
stos
xchg
daa
fcomi
jge
imul
fwait
xchg
int3
mov
cmc
push
rorb
in
dec
test
out
adc
movsb
jg
pusha
mov
cwtl
sbb
xor
jge
adc
pushl
lret
les
sbb
cmp
movsl
inc
or
push
mov
lcall
add
adc
ss
jl
mov
cli
xor
bsr
out
mov
jae
ret
lret
rorb
jge
push
dec
dec
aam
fs
das
and
xor
xor
clc
pushl
data16
mov
std
aam
cmp
push
jp
xchg
cmpxchg
push
dec
leave
jle
dec
sbb
clc
sti
cmp
stc
or
in
fidivrs
ljmp
pop
inc
lea
es
jnp
fucom
mov
sbb
call
push
daa
mov
lcall
sahf
gs
iret
push
xchg
aam
push
pusha
inc
add
adc
mov
and
aas
xlat
call
pop
lock
sbb
mov
sub
lods
mov
mov
mov
mov
shrl
ds
sbb
out
push
aam
int3
mov
aam
jp
ljmp
dec
pushf
test
inc
mov
stos
mov
dec
fimull
lcall
test
outsb
lods
inc
andl
std
push
stc
adc
int3
mov
xor
push
scas
cli
mov
sbb
fisttps
lret
cltd
sbb
out
test
out
stc
sub
outsb
xchg
popa
or
outsb
or
xchg
inc
mov
dec
inc
adc
test
jg
jle
movb
rolb
mov
test
aas
pop
movsl
xchg
mov
fidivl
jle
push
and
insb
dec
mov
sbb
mov
ljmp
add
ror
or
ret
mov
mov
adc
call
pop
pop
stc
or
cli
xor
jmp
or
sbb
fwait
ljmp
pop
sbb
or
and
push
loopne
lret
into
mov
add
call
add
popf
pop
nop
scas
mov
push
cmp
xor
ja
jmp
fisubs
mov
repnz
ljmp
clc
pushf
fldl
dec
mov
into
mov
sti
test
hlt
jp
adc
sbb
es
pop
xchg
adc
call
test
cmp
popa
std
sub
hlt
adc
rcrl
decl
movsb
lods
fadds
dec
xor
insl
mov
cmpsb
cmp
sbb
sub
in
pop
scas
push
es
cli
or
jle
insb
into
jbe
aam
jg
lds
xchg
jb
popf
lock
loopne
add
mov
pop
std
in
decl
lock
xor
iret
stos
pop
cmpsb
cmp
fidivrs
int
arpl
pushl
push
fidivrs
insb
or
adc
je
adc
repz
incl
jl
add
mov
jg
stos
xor
in
push
pop
mov
lods
lcall
decl
clc
or
cmp
inc
cli
addr16
mov
jo
sub
push
inc
mov
and
mov
inc
mov
ljmp
fimuls
mov
jnp
or
xchg
imull
dec
arpl
movsb
popf
ds
dec
incl
jno
xchg
iret
mov
xchg
and
pop
adc
push
pop
pop
rorl
call
mov
inc
pop
dec
pop
aad
in
push
jne
xlat
test
inc
push
pop
add
iret
adcl
inc
lds
hlt
xchg
pop
xchg
lcall
arpl
mov
sub
out
pop
cli
cmp
mul
push
outsb
pop
popf
flds
jmp
mov
cmp
in
jmp
call
cmp
imul
test
mov
xor
cmp
scas
mov
popa
or
int3
and
xor
lock
push
xchg
sub
orb
pop
xor
ret
xor
sbb
push
jp
sbb
push
sub
mov
incl
pop
mov
xor
pusha
dec
lea
fiaddl
lcall
adc
mov
decl
or
pushf
not
sub
xchg
lock
fstpt
popf
inc
mov
fisubrs
fldcw
inc
pop
dec
xchg
push
cld
in
pusha
adc
cmp
mov
dec
pop
mov
adcb
inc
push
loop
subb
add
stos
dec
pop
pop
cli
lcall
push
ret
cmpsl
or
jb
incb
out
xor
pop
add
inc
inc
sub
add
and
or
push
inc
jne
lret
test
cmp
popf
sub
inc
popf
mov
into
and
jecxz
jo
inc
inc
clc
dec
jo
ljmp
adc
jle
repz
add
ret
lcall
movsl
mov
pushf
std
mov
icebp
sbb
lods
sahf
dec
mov
gs
cmc
add
ljmp
es
or
xor
adc
cmp
mov
cs
xchg
hlt
jbe
mov
mov
add
jp
cmc
lock
pop
popa
call
sarb
or
or
pop
push
mov
push
movsb
sub
scas
adc
mov
pusha
dec
cmpsb
out
fucomip
lcall
xor
lahf
out
loope
imul
pop
lret
push
sub
jg
decl
pushf
sbb
push
test
fisubl
xor
or
movsb
push
es
pop
pcmpgtb
and
sbb
jge
pop
loope
dec
jp
jae
cmpb
cli
or
cwtl
outsl
shrb
idivb
repnz
or
out
clc
add
mov
sbb
cmp
mov
fdivrs
mov
das
fildll
pop
aaa
xchg
xchg
out
mov
mov
sub
fucomi
mov
dec
sti
call
icebp
dec
aaa
sub
push
push
outsb
fwait
and
cmpsl
inc
jle
incl
arpl
cli
sbb
mov
cmc
jle
push
test
cmpsb
jp
adc
ljmp
ret
leave
cmp
cmp
adc
jmp
jmp
es
mov
test
shrb
test
pop
or
inc
aas
shl
push
cmp
sbb
shl
pop
cmp
mov
pop
shrb
dec
sarl
inc
jbe
rcr
repz
jg
and
pusha
add
popa
cmpsb
dec
addb
push
test
xchg
mov
imul
mov
jb
adc
int
pop
jb
mov
pop
ffree
fmull
jl
lods
out
pushf
fsubrs
into
fdivrl
repnz
dec
xor
aam
lret
imul
inc
mov
mov
push
lret
sar
mov
test
repz
lret
das
sub
stos
out
int
mov
cli
adc
cmp
push
cmp
aad
ljmp
ret
mov
fwait
mov
sbb
xchg
dec
adc
xchg
addr16
push
xor
jg
jmp
xor
xchg
inc
cmp
sub
loope
sti
push
inc
push
dec
stos
mov
jle
mov
mov
jmp
cltd
paddw
xor
mov
int
xchg
pop
push
inc
js
stc
fbld
mov
pop
mov
xor
call
test
popa
add
notl
insb
repz
sbb
mov
cld
subb
push
aad
fildll
cmp
dec
sar
pushl
jno
mov
ret
pop
cmc
adc
jnp
xchg
dec
aaa
cli
dec
fcomps
je
cmpsb
lcall
in
ja
out
pop
sbb
dec
insw
int
sbb
fcoml
mov
call
lcall
jle
push
rep
add
sti
lret
into
adc
jae
in
sub
pushl
cmp
fucomi
adc
adcl
mov
ret
pushl
mov
push
idivb
lahf
popf
je
cli
jl
lret
rcll
push
jae
js
lods
xor
out
cli
fbld
adc
imul
and
aaa
sarb
lret
shll
lcall
pop
ret
inc
stos
ja
aaa
mov
adc
mov
inc
enter
pop
push
mov
and
mov
xchg
push
jg
decl
dec
shlb
adc
xchg
pop
loope
mov
lods
cltd
lret
push
incl
stos
cmp
pushf
cwtl
fs
cmp
ret
jmp
adc
or
cmpsb
in
sub
or
jmp
xchg
inc
push
aaa
jecxz
dec
cmp
push
das
add
fidivrl
call
jl
or
fs
outsb
lods
mov
aam
lods
je
pop
pusha
cwtl
sub
imul
sbb
cmp
pop
loope
ds
xor
jg
sub
fildll
stos
fimull
mov
insl
cld
decl
call
push
inc
testb
test
jl
pop
es
mov
int
mov
ljmp
test
or
mov
scas
cli
incl
movq
xchg
ljmp
rorb
jecxz
cld
xor
pop
xor
mov
xor
lcall
inc
adc
call
push
sti
lahf
push
fnstsw
and
xchg
fidivrs
jle
adc
push
cmp
call
test
jg
mov
in
repnz
stc
arpl
inc
enter
jecxz
mov
pushl
dec
mov
adc
xchg
lcall
adc
les
roll
mov
pop
jb
jae
orl
lods
xchg
inc
push
stc
lcall
pop
xrelease
cli
mov
data16
and
enter
xchg
sbb
or
xchg
add
ljmp
jns
mov
mov
pop
test
rclb
jle
mov
sbb
dec
dec
leave
mov
cmp
add
in
dec
pushf
mov
xor
ds
mov
mov
add
ret
or
adc
loopne
pop
fsubr
adc
in
fs
or
iret
push
out
or
pop
jecxz
pop
hlt
cwtl
sub
loopne
fwait
sbb
cmp
lock
adc
mov
pop
rorl
xor
add
sarb
js
clc
cmp
push
and
outsb
or
xchg
pop
test
mov
push
movsb
cmp
aad
pop
and
pop
mov
adc
aam
fbld
adc
dec
cli
push
scas
xchg
push
fsubs
lret
pop
add
adc
jno
lret
incl
pop
mov
sub
push
jb
mov
pop
das
addl
es
cmp
sub
lea
std
jmp
xor
notb
outsl
jmp
sub
scas
test
mov
test
lret
ljmp
insb
inc
lds
aad
inc
shlb
popa
push
mov
pop
pop
rol
sarl
sub
cld
or
dec
out
sbb
pop
ud0
jnp
fiaddl
cmc
pop
sahf
xor
scas
sub
bound
mov
pushl
sbbb
test
xor
mov
add
jo
or
sbb
enter
out
adc
pop
pop
dec
jle
sub
inc
pop
xor
jle
out
mov
stos
sub
push
mov
mov
jmp
dec
scas
push
call
push
xchg
mov
and
fdivrl
into
inc
xor
jns
ljmp
icebp
xchg
gs
mov
jmp
jmp
lods
movsl
out
or
loope
add
outsb
incl
sub
push
push
xchg
les
test
inc
xchg
xchg
jo
lea
mov
arpl
aaa
leave
mov
in
jne
repz
neg
cmpsb
repz
cld
jg
or
or
call
sub
fldcw
add
clc
hlt
pop
punpckldq
xchg
sub
or
pop
inc
sub
into
pop
mov
je
ds
adc
out
cmp
hlt
jmp
sbb
xchg
and
jle
icebp
xchg
test
or
iret
std
sbb
aam
jg
dec
mull
adc
mov
jge
fs
out
aam
pop
mov
lds
shlb
mov
push
pop
mov
decl
ficompl
lods
loopne
jnp
push
sub
out
mov
jmp
sahf
inc
sub
inc
leave
dec
fidivrs
sub
insb
pop
lret
push
cs
sti
mov
orb
notl
cld
cmpsb
lret
ret
shlb
pop
fildl
js
cmpsb
sbb
or
cwtl
xor
in
jae
cmpl
call
cmpsb
inc
lods
ret
subb
outsb
das
push
cltd
xchg
fdivs
mov
fmull
in
dec
ljmp
test
cltd
dec
sbb
mov
divb
cmp
sbb
jg
push
cmpsb
test
xlat
ds
sbb
xor
lea
and
mov
stos
or
sub
loopne
jmp
das
sub
xor
jno
jnp
cmp
daa
fs
ds
clc
mov
sbb
mov
nop
mov
clc
fcomip
pop
std
outsb
out
mov
mov
push
loopne
sbb
test
and
sub
adc
push
int3
mov
push
adc
xchg
inc
lcall
test
cmp
push
push
push
push
ret
sub
hlt
mov
inc
fadds
imul
enter
jmp
xor
mov
psrld
pushl
or
sub
mov
imul
mov
arpl
sub
out
js
cltd
mov
xchg
cmp
incl
fsubrl
dec
xchg
pop
mov
xchg
lret
daa
mov
ljmp
dec
adc
push
adc
mov
cmp
test
or
leave
icebp
lcall
arpl
popl
mov
sub
or
ja
push
lock
mov
mov
xchg
fisubrl
pop
xchg
mov
inc
fidivl
pop
pop
sarl
inc
sahf
out
call
fdivs
push
jmp
hlt
jp
testl
xchg
incl
xchg
add
sub
dec
xor
jl
mov
pushl
mov
in
xor
mov
pop
xor
mov
ror
loopne
sub
jmp
sbbb
jnp
fdivs
mov
mov
dec
pop
sub
lcall
rcr
xor
jbe
jle
pop
in
hlt
popf
pusha
dec
push
jmp
mov
lods
flds
sub
sbb
icebp
jg
out
fs
cmp
ret
sbb
xchg
dec
sub
rol
shll
and
ljmp
mov
adc
xor
mov
cmc
sub
in
inc
clc
lcall
mov
or
adc
or
lock
shrb
ss
decl
addb
test
and
sbb
mov
xor
repnz
call
std
ja
hlt
mov
and
mov
push
daa
arpl
bswap
push
xor
pushl
std
movsb
lea
dec
sbb
out
icebp
sbbl
add
jae
sbb
xor
loop
mov
aad
fisubs
xor
cld
xchg
push
cmp
pushl
cmp
pop
test
lock
gs
jle
arpl
sub
jb
jg
jmp
mov
xlat
inc
mov
lods
das
mov
add
and
adc
dec
mov
mov
mov
fwait
hlt
sar
call
std
push
pusha
sbb
cmp
lcall
outsl
je
pop
ficomps
sub
sti
xchg
lcall
push
cmp
mov
cmp
xchg
lcall
in
adc
test
pusha
jns
pop
das
pop
icebp
cld
and
mov
inc
jb
inc
mov
decl
mov
xchg
shlb
jp
inc
mov
mov
mov
jg
jbe
dec
les
push
sub
popa
insl
inc
in
add
jl
jle
pushf
fldl
dec
xchg
lret
lods
xchg
mov
mov
fs
call
pop
or
ja
incl
mov
mov
in
fisubrs
fildll
adc
adc
mov
pushl
mov
rol
push
push
mov
bound
cli
pop
push
add
and
loopne
setno
cli
cmp
mov
test
cmp
cmp
lcall
fidivs
mov
bound
xlat
push
enter
out
idiv
jmp
jmp
sarl
mov
mov
std
aam
enter
fsub
push
sti
shlb
ljmp
mov
sti
pop
pushf
sbb
int3
shl
push
jle
addl
dec
push
leave
sar
mov
mov
or
mov
incl
test
sub
out
push
std
or
push
jbe
std
mov
sub
das
mov
cltd
lcallw
fwait
jnp
scas
mov
in
mov
sbb
call
and
mov
je
push
ljmp
or
cmc
push
call
cwtl
jo
outsb
cmp
and
jae
addr16
push
pushl
fs
mov
dec
aad
cltd
es
mov
mov
jl
stos
es
lcall
sbb
pushf
jg
insb
outsb
mov
mov
inc
push
test
loopne
clc
pusha
jmp
mov
cmp
fnsave
mov
mov
xchg
pop
pop
out
mov
dec
cmp
scas
movsl
jmp
fdivl
push
add
sbb
lret
dec
clc
out
enter
pushl
shl
test
xor
je
rolb
mov
xchg
leave
cmp
push
and
lret
xchg
jg
push
dec
push
mov
push
mov
cwtl
fwait
leave
test
mov
push
jge
mov
fisttps
call
je
out
fs
jns
in
std
fsubs
fisubrs
cmp
adc
or
pop
aam
in
ds
or
fistpll
jns
sbb
mov
pop
mov
ljmp
shll
nop
in
xlat
cmp
jmp
aas
in
xchg
pop
in
inc
aam
fsts
mov
dec
inc
dec
scas
hlt
jmp
adc
mov
repnz
imul
mov
icebp
or
mov
sub
lcall
add
pop
add
mov
call
jg
and
pop
fstpl
test
inc
out
mov
dec
lcall
in
ret
pop
xor
decl
imull
js
dec
xor
ljmp
clc
and
je
sub
dec
imul
xchg
inc
xchg
leave
test
jl
dec
mov
into
mov
in
and
jg
mov
mov
push
adc
and
ffree
xchg
mov
out
out
jecxz
adc
sub
mov
in
pop
aam
or
call
lods
addl
fnstsw
push
push
cmp
mov
cs
aas
cmp
cmp
add
jg
imul
mov
pop
jne
xchg
jbe
mov
inc
dec
push
cmpsl
ljmp
mov
sbb
fbstp
sarb
xor
jmp
iret
dec
pop
mov
mov
pop
leave
xor
lcall
sbb
ljmp
mov
push
loope
in
lret
or
xlat
repnz
call
enter
sahf
les
pop
cli
or
mov
dec
mov
add
lock
mov
pop
je
outsb
clc
pop
mov
scas
or
push
scas
ljmp
jb
notl
enter
imul
cmp
fnstcw
lods
shlb
call
ret
push
jmp
xorb
clc
daa
scas
jns
mov
insb
rolb
cltd
adc
dec
xorl
cmp
or
hlt
jg
jmp
push
sti
mov
repz
mov
jp
stos
sub
sub
push
cli
xchg
inc
nop
iret
outsl
push
push
jns
adc
pushl
in
push
jl
stos
xchg
sbb
xchg
cli
ljmp
test
cmpsb
pop
lds
or
mov
jmp
es
xchg
mov
lods
jg
out
iret
dec
lret
iret
lret
lret
cmc
mov
sub
cmc
inc
fsts
sub
inc
adc
ljmp
pop
cmp
adc
mov
sbb
mov
ret
and
push
cmp
jmp
fwait
jmp
cmp
sub
or
or
ss
mov
sbb
push
cmpsl
imul
jg
ljmp
jmp
mov
out
lods
cld
mov
imulb
out
lret
pop
mov
jg
add
paddusb
xchg
dec
inc
pop
lret
ljmp
outsl
lahf
mov
pop
in
outsl
iret
xor
jmp
btr
fildll
jle
add
cmp
cld
das
adc
out
mov
and
loopne
mov
push
ud0
incl
or
bound
and
les
ret
sbb
pop
sub
jge
aaa
sbb
aam
decl
movsb
cmp
aad
dec
ljmp
shl
aas
notl
mov
push
mov
xor
adc
sbb
cmp
scas
call
int3
imul
jno
shll
adc
jg
or
dec
fcoml
xor
lahf
ret
imul
xchg
pop
or
jb
mov
jmp
xchg
mov
sbb
addr16
aam
mov
pop
adc
mov
jmp
push
leave
push
jo
fsubrs
push
loop
loope
loop
push
lock
lret
loop
lods
pop
and
cmp
decl
imul
ret
pop
mov
cmp
aaa
mov
mov
pushl
sub
cmp
push
cli
adc
push
je
sbb
jmp
jae
mov
mull
pop
sbb
cli
mov
in
les
jb
add
jmp
movsb
xor
stos
push
add
jle
cmp
insb
in
pushl
xor
addr16
outsb
dec
in
mov
imul
call
lds
xor
pop
push
push
pop
jno
clc
pop
cmp
mov
add
ficoms
decl
iret
mov
popa
pop
add
dec
bound
cmp
mov
call
movsl
inc
push
icebp
inc
ja
xchg
and
fldenv
mov
inc
std
clc
pop
xchg
scas
popf
int
lret
pushf
decl
and
js
pushf
in
pop
mov
jge
pop
xchg
fldl
pushl
lret
mov
dec
in
push
or
xchg
push
dec
mov
and
cmpsl
and
jg
dec
jbe
fs
aad
aad
ret
movsl
xchg
je
outsl
xor
push
jbe
and
stos
stc
jl
push
int3
sub
lcall
pop
sub
jge
cmp
fwait
outsb
cmp
pop
dec
andl
dec
lds
incl
xor
sbb
pop
jne
loope
ficoms
dec
rol
ret
mov
int3
loope
push
xchg
pushl
insl
and
jbe
lods
mov
rcrl
cltd
mov
out
mov
loopne
out
cmp
dec
pushl
dec
fcom
pop
in
sub
xlat
ds
adc
repz
mov
popa
pop
movsb
xor
cs
cli
shl
js
repnz
fstpl
insb
add
mov
mov
mov
mov
xor
test
leave
imul
mov
cmp
pop
icebp
jg
sub
push
mov
and
sahf
push
add
jnp
mov
in
pusha
call
mov
xchg
cmpsl
pusha
daa
daa
mov
mov
popa
clc
mov
lcall
ja
mov
stos
jnp
je
dec
imulb
sbb
ret
cltd
pop
icebp
andb
mov
icebp
add
in
fsubrs
lahf
push
push
cmp
xor
ljmp
cmp
dec
aaa
aad
xchg
push
scas
test
adc
dec
mov
call
inc
mov
orb
inc
mov
or
inc
pop
sbb
mov
jns
test
filds
xlat
dec
pusha
sub
sbb
testl
inc
test
lds
dec
sub
lock
sarb
arpl
xchg
decl
push
mov
mov
xchg
lods
loop
in
mov
cmp
out
cmp
push
and
ds
mov
test
mov
mov
inc
cs
clc
pushl
imul
loopne
sub
xbegin
jg
test
mov
pop
mov
movsl
dec
and
inc
inc
sti
dec
dec
mov
nop
iret
or
sub
clc
adc
cli
cld
test
dec
add
add
addr16
in
push
or
adc
and
fcomip
jmp
aad
addl
and
cltd
jo
push
sub
je
mov
sarb
call
mov
mov
cmp
shlb
xchg
sarb
mov
cmp
jmp
imul
or
sub
or
lcall
lcall
add
pushf
sarb
scas
stos
sbb
or
insb
fisttps
sbb
outsb
ljmp
push
mov
adc
fildll
test
call
aaa
shr
popa
shll
sub
cmp
add
adc
test
add
sub
lock
or
or
push
xlat
inc
mov
lea
pop
pop
jg
jns
add
cmp
cmp
xchg
fidivl
outsb
lods
pop
test
inc
push
cmp
out
and
and
decl
and
aas
sbb
sbb
adc
jmp
ljmp
mov
or
pop
mov
fwait
arpl
add
into
cmp
inc
cs
jmp
xlat
mov
rclb
pop
adc
xor
pop
xlat
aam
xchg
popa
int3
mov
stc
pop
or
jmp
sub
popa
ret
inc
dec
shll
les
jmp
pop
sti
scas
scas
push
mov
or
imul
mov
inc
nop
hlt
jno
adc
xor
popa
push
in
sarl
cmp
icebp
rcrl
inc
jmp
leave
xlat
nop
repnz
dec
movsl
das
cli
decl
stos
cs
orb
shlb
sub
inc
arpl
and
pop
jg
ljmp
mov
mov
movsl
daa
shlb
push
fdivrs
cmp
lcall
and
fwait
xor
sub
sbb
ds
adc
sub
filds
mov
popa
mov
cmpsl
es
movsb
aam
mov
pop
mov
add
pop
mov
cmp
pushl
xchg
inc
in
xchg
pop
cld
movsl
ds
aad
ss
mov
and
fstpl
mov
call
jnp
int
xor
pop
in
cmp
sbb
cli
nop
push
std
jp
cmpsl
stos
xor
and
stos
or
dec
movsb
push
push
or
out
adc
and
push
inc
cmpsl
add
push
add
mov
lds
fnstsw
nop
pushl
lea
mov
imul
mov
sub
lea
das
xchg
inc
jmp
mov
adc
sub
pop
dec
sub
adc
nop
add
mov
movsl
lret
rcrl
loope
inc
sub
jnp
lock
fadds
mov
fiadds
cld
lcall
loope
nop
pop
sub
jle
nop
mov
add
or
lcall
mov
lret
mov
adc
add
out
mov
mov
pop
push
aaa
aam
cmp
jns
xchg
sub
xchg
push
jb
cmc
dec
jmp
and
cmp
or
jns
or
cltd
enter
xor
sub
lds
lods
incl
insb
xor
repnz
push
add
out
pop
cli
push
fmuls
lods
addr16
outsb
test
jmp
push
mov
dec
leave
xchg
mov
fs
ret
inc
scas
shr
and
clc
dec
ljmp
mov
xchg
outsl
sti
adc
pop
outsl
fadds
mov
mov
pusha
cmp
jo
shrb
fadds
push
lods
idivl
cli
ja
aad
jo
mov
mov
lcall
mov
shl
call
scas
xor
sub
stos
mov
stos
mov
sbb
aaa
in
dec
lock
add
sub
xchg
ljmp
add
stos
ret
xorl
pop
push
bound
adc
mov
xchg
cmp
dec
sahf
adc
pop
cwtl
test
jmp
mov
inc
mov
push
std
mov
sbb
inc
cld
cltd
xchg
sti
filds
add
adc
sub
test
cmp
mov
or
fwait
ja
sti
jmp
xchg
in
xchg
mov
std
popa
pop
mov
mov
cmp
mov
icebp
dec
js
bound
push
iret
adc
mov
fs
div
cmp
push
loop
scas
popf
in
call
call
adc
lock
test
push
mov
aaa
push
int3
pusha
fnsave
cmc
or
or
mov
and
cmp
jg
lea
cli
std
ljmp
xchg
mov
lock
dec
imul
jl
test
push
jge
lret
call
and
adc
sub
or
pop
sub
pop
inc
add
mov
dec
or
push
push
decl
add
nop
nop
adc
dec
punpcklbw
add
pop
jg
mov
or
pushl
incl
inc
outsl
insl
jo
jb
push
je
imul
gs
imul
popa
jo
daa
inc
push
jne
lods
shr
push
push
outsw
jb
popa
outsb
arpl
jne
inc
mov
xor
jb
jne
insb
push
jb
sbb
je
push
gs
popa
jp
imul
sti
jae
popa
fs
movsb
fs
call
je
jb
out
scas
insl
xchg
sbb
pop
imul
outsb
push
loopne
shll
and
push
inc
push
inc
je
loopne
mov
pop
inc
shlb
fs
jae
push
test
outsl
stos
dec
imul
mov
inc
insb
insb
sbb
imul
nop
adc
push
jns
xor
mov
outsb
insl
imul
pusha
fisttpl
add
push
inc
xchg
xchg
stos
addr16
jae
mov
sbb
add
mov
les
sbb
xchg
sub
add
aaa
inc
xor
mov
aam
mov
daa
out
add
dec
aam
or
sbb
push
movsl
mov
test
iret
jno
addb
imul
push
xchg
pusha
push
add
mov
sbb
test
mov
and
or
fbld
mov
lret
or
inc
push
outsl
add
and
push
and
mov
mov
or
sub
mov
inc
or
and
xchg
mov
mov
ret
sub
sub
pop
push
adc
adc
sbb
leave
test
mov
push
test
addb
cwtl
push
jno
add
add
lds
add
lds
mov
gs
adc
adc
loop
or
inc
shrb
push
stos
and
lea
mov
inc
sub
and
sub
mov
mov
cmp
and
and
xchg
sub
sub
sub
xchg
popa
popa
adc
push
and
sub
lods
mov
dec
mov
or
sub
mov
test
xlat
stos
mov
lods
jg
and
cmp
xchg
xchg
imul
popa
push
jns
fildl
push
inc
push
dec
add
add
jecxz
cmp
fildll
pop
loopne
popl
add
sbb
data16
cmp
adc
pop
add
lock
push
add
lea
imul
xor
xchg
xchg
jo
add
or
jg
je,pn
js
rolb
dec
lcall
and
mov
inc
shlb
fs
je
xchg
insb
sub
cmp
jo
bound
shrb
push
xor
add
lcall
ficompl
fnstenv
pop
push
push
add
in
in
jae
popa
lahf
push
nop
adc
sbb
out
and
add
loopne
mov
adc
cmp
pandn
lea
rorb
pop
dec
ret
es
adc
adc
orb
incl
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pop
add
add
and
add
pop
add
in
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
adc
sub
add
in
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
dec
das
adc
sbb
add
in
add
add
add
call
cmpsb
les
push
daa
xchg
jl
stc
xchg
movsb
addr16
jbe
inc
jae
loop
jmp
jo
jno
dec
xchg
cwtl
dec
or
bound
fs
mov
mov
dec
xor
lahf
insb
lret
rcpps
outsb
jo
pop
mov
xchg
ljmp
insb
jg
sbb
insb
loop
adc
shl
movsb
or
sbb
dec
dec
pop
sbb
test
mov
pushf
in
inc
add
imul
popf
mov
movsb
cmp
xor
es
pop
jle
out
addr16
inc
sbb
mov
jo
push
mov
mov
xchg
sbb
ret
sub
xchg
fidivrl
rcrb
xor
sbb
mov
pop
sbb
xor
mov
pop
mov
inc
in
xchg
adcl
cmp
scas
cmp
lret
push
and
lock
cmpsb
jo
xchg
test
je
inc
arpl
adc
xchg
cmp
jp
add
sbb
rol
push
hlt
xor
mov
cmp
scas
subb
insl
pop
popf
dec
icebp
ret
jle
pop
scas
cmp
test
rcrl
cmp
cmc
cmp
inc
pop
push
pop
jno
inc
push
mov
inc
push
cltd
js
push
ret
rcr
xchg
dec
icebp
dec
dec
scas
lods
scas
test
sbb
in
inc
packssdw
int
jns
cmp
push
sub
clc
int
arpl
inc
aaa
xor
jmp
mov
pushf
movb
clc
dec
xchg
mov
in
dec
sub
cmpsl
shlb
pop
shrb
push
cmc
adc
aam
daa
dec
xlat
cmp
fcomps
out
mov
dec
sbb
dec
mov
mov
jg
sbb
repz
test
add
cmp
jmp
daa
xchg
dec
and
sbb
incb
mov
pop
test
shll
xor
or
sbb
adc
push
divb
pop
loop
cmp
rolb
sub
push
rorb
stos
leave
xor
push
insl
movsb
outsb
xor
rclb
xchg
fstpl
xchg
loope
cmp
les
je
jns
push
ficoml
xor
mov
pop
pop
jle
dec
add
ja
lods
ljmp
stos
mov
fnstenv
insb
mov
push
pop
sub
fwait
stos
xchg
mov
pop
push
inc
lds
jns
xchg
jne
nop
xor
lods
add
dec
xor
pop
shlb
push
mov
xchg
inc
mov
and
pop
arpl
mov
pop
push
sbb
push
and
js
popl
xchg
cwtl
xchg
cmp
into
scas
jecxz
dec
jb
fimuls
mov
cs
jg
lahf
repz
xchg
mov
insl
cli
sbb
aas
rclb
cwtl
cwtl
xor
lock
jmp
ds
and
dec
out
and
lahf
sub
pop
lods
aas
leave
cmp
push
and
aaa
jno
fimull
leave
pop
test
scas
xor
or
test
mov
imul
std
xor
jnp
xchg
test
inc
ror
sub
xor
hlt
stc
popf
cmp
jns
fcmovnu
adc
jmp
sarb
pop
sub
lea
xchg
aam
adc
or
aas
ret
stos
xlat
lods
jnp
cmp
fcmovnbe
push
dec
xchg
add
xor
imul
jo
gs
inc
rclb
test
fldt
jmp
notl
mov
push
loop
inc
movsl
scas
mov
pop
shrl
add
mov
xor
shrl
ds
mov
adc
cmp
mov
pop
fcompl
gs
shl
adc
dec
test
mov
and
add
pop
lahf
popa
dec
jns
sub
adc
mov
in
xchg
or
imul
out
jg
aas
pop
movsb
mov
sbbb
mov
jae
cli
mov
cs
out
add
xchg
xor
movsl
movsb
aas
xchg
or
xlat
mov
mov
push
ret
leave
fsub
xchg
iret
jl
mov
subb
cmp
xchg
out
push
dec
jno
and
push
push
add
fcmovne
add
ljmp
push
sub
out
inc
jnp
mov
adc
jne
mov
int
ja
dec
xor
mov
mov
mov
and
pop
les
mov
push
mov
int3
push
fdivrs
xchg
adc
sbb
jle
and
aam
push
loop
es
cmpsl
mov
dec
andb
pop
int
jno
jne
hlt
or
xchg
popf
stc
push
mov
add
call
xchg
popf
ficompl
aaa
test
mov
test
inc
mov
jo
pop
je
adc
addr16
sub
lds
xor
adc
and
lahf
fildll
or
rorl
pushf
in
lcall
fcom
push
pusha
sarb
mov
mov
or
cmp
adc
xchg
push
addl
sbb
or
fiadds
hlt
je
ret
add
push
and
sahf
popf
leave
push
cltd
add
insl
fs
pop
sti
cmpb
into
dec
pop
hlt
jne
iret
pop
mov
mov
roll
xchg
out
adc
or
push
popf
inc
das
sbbl
fwait
mov
sub
xchg
pusha
jmp
aam
adc
cmp
pop
xchg
push
push
jae
xchg
xlat
xchg
loop
mov
adc
into
popf
mov
cmc
mov
pop
and
sarl
daa
and
mov
adcb
cmp
fscale
pop
inc
inc
lahf
add
mov
nop
enter
add
jmp
outsb
pop
sbb
lea
inc
fistpll
in
inc
xlat
inc
add
jg
push
addl
adc
loop
addb
or
jne
fwait
mov
pop
shrl
shll
andl
mov
sarb
cltd
ret
push
push
daa
pop
inc
push
sub
add
inc
sub
pop
push
inc
inc
adc
adc
in
cmpsb
les
push
daa
xchg
jl
stc
xchg
movsb
addr16
jbe
inc
jae
loop
jmp
jo
jno
dec
xchg
cwtl
dec
or
bound
fs
mov
mov
dec
xor
lahf
insb
lret
rcpps
outsb
jo
pop
mov
xchg
ljmp
insb
jg
sbb
insb
loop
adc
shl
movsb
or
sbb
dec
dec
pop
sbb
test
mov
pushf
in
inc
add
imul
popf
mov
movsb
cmp
xor
es
pop
jle
out
addr16
inc
sbb
mov
jo
push
mov
mov
xchg
sbb
ret
sub
xchg
fidivrl
rcrb
xor
sbb
mov
pop
sbb
xor
mov
pop
mov
inc
in
xchg
adcl
cmp
scas
cmp
lret
push
and
lock
cmpsb
jo
xchg
test
je
inc
arpl
adc
xchg
cmp
jp
add
sbb
rol
push
hlt
xor
mov
cmp
scas
subb
insl
pop
popf
dec
icebp
ret
jle
pop
scas
cmp
test
rcrl
cmp
cmc
cmp
inc
pop
push
pop
jno
inc
push
mov
inc
push
cltd
js
push
ret
rcr
xchg
dec
icebp
dec
dec
scas
lods
scas
test
sbb
in
inc
packssdw
int
jns
cmp
push
sub
clc
int
arpl
inc
aaa
xor
jmp
mov
pushf
movb
clc
dec
xchg
mov
in
dec
sub
cmpsl
shlb
pop
shrb
push
cmc
adc
aam
daa
dec
xlat
cmp
fcomps
out
mov
dec
sbb
dec
mov
mov
jg
sbb
repz
test
add
cmp
jmp
daa
xchg
dec
and
sbb
incb
mov
pop
test
shll
xor
or
sbb
adc
push
divb
pop
loop
cmp
rolb
sub
push
rorb
stos
leave
xor
push
insl
movsb
outsb
xor
rclb
xchg
fstpl
xchg
loope
cmp
les
je
jns
push
ficoml
xor
mov
pop
pop
jle
dec
add
ja
lods
ljmp
stos
mov
fnstenv
insb
mov
push
pop
sub
fwait
stos
xchg
mov
pop
push
inc
lds
jns
xchg
jne
nop
xor
lods
add
dec
xor
pop
shlb
push
mov
xchg
inc
mov
and
pop
arpl
mov
pop
push
sbb
push
and
js
popl
xchg
cwtl
xchg
cmp
into
scas
jecxz
dec
jb
fimuls
mov
cs
jg
lahf
repz
xchg
mov
insl
cli
sbb
aas
rclb
cwtl
cwtl
xor
lock
jmp
ds
and
dec
out
and
lahf
sub
pop
lods
aas
leave
cmp
push
and
aaa
jno
fimull
leave
pop
test
scas
xor
or
test
mov
imul
std
xor
jnp
xchg
test
inc
ror
sub
xor
hlt
stc
popf
cmp
jns
fcmovnu
adc
jmp
sarb
pop
sub
lea
xchg
aam
adc
or
aas
ret
stos
xlat
lods
jnp
cmp
fcmovnbe
push
dec
xchg
add
xor
imul
jo
gs
inc
rclb
test
fldt
jmp
notl
mov
push
loop
inc
movsl
scas
mov
pop
shrl
add
mov
xor
shrl
ds
mov
adc
cmp
mov
pop
fcompl
gs
shl
adc
dec
test
mov
and
add
pop
lahf
popa
dec
jns
sub
adc
mov
in
xchg
or
imul
out
jg
aas
pop
movsb
mov
sbbb
mov
jae
cli
mov
cs
out
add
xchg
xor
movsl
movsb
aas
xchg
or
xlat
mov
mov
push
ret
leave
fsub
xchg
iret
jl
mov
subb
cmp
xchg
out
push
dec
jno
and
push
push
add
fcmovne
add
ljmp
push
sub
out
inc
jnp
mov
adc
jne
mov
int
ja
dec
xor
mov
mov
mov
and
pop
les
mov
push
mov
int3
push
fdivrs
xchg
adc
sbb
jle
and
aam
push
loop
es
cmpsl
mov
dec
andb
pop
int
jno
jne
hlt
or
xchg
popf
stc
push
mov
add
call
xchg
popf
ficompl
aaa
test
mov
test
inc
mov
jo
pop
je
adc
addr16
sub
lds
xor
adc
and
lahf
fildll
or
rorl
pushf
in
lcall
fcom
push
pusha
sarb
mov
mov
or
cmp
adc
xchg
push
addl
sbb
or
fiadds
hlt
je
ret
add
push
and
sahf
popf
leave
push
cltd
add
insl
fs
pop
sti
cmpb
into
dec
pop
hlt
jne
iret
pop
mov
mov
roll
xchg
out
adc
or
push
popf
inc
das
sbbl
fwait
mov
sub
xchg
pusha
jmp
aam
adc
cmp
pop
xchg
push
push
jae
xchg
xlat
xchg
loop
mov
adc
into
popf
mov
cmc
mov
pop
and
sarl
daa
and
mov
adcb
cmp
fscale
pop
inc
inc
lahf
add
mov
nop
enter
add
jmp
outsb
pop
sbb
lea
inc
fistpll
in
inc
xlat
inc
add
jg
push
addl
adc
loop
addb
or
jne
fwait
mov
pop
shrl
shll
andl
mov
sarb
cltd
ret
push
push
daa
pop
inc
push
sub
add
inc
sub
pop
push
inc
inc
inc
fists
add
sbb
call
add
mov
push
and
pop
clc
test
sbb
adc
push
mulb
lea
push
rol
mov
cld
dec
fs
adc
and
sub
sbb
loope
push
jp
dec
push
in
dec
loopne
mov
jle
outsl
shr
add
outsb
lcall
lret
in
jge
sub
pop
dec
xchg
movntps
add
scas
or
sbb
mov
test
dec
pop
adc
mov
xor
in
ret
inc
xor
nop
loop
push
hlt
popf
jg
inc
sbb
imul
dec
inc
into
scas
add
rorb
pop
in
push
int
sbb
sub
xchg
jnp
sub
xorl
fcom
aas
imul
sbb
inc
push
xchg
loope
test
mov
adc
cmp
adcb
lods
mov
out
push
ss
dec
cltd
pop
xchg
xchg
outsl
das
scas
mov
jge
dec
adc
pop
inc
rclb
pop
push
cmp
inc
jecxz
jb
lret
cld
pop
scas
sbb
out
shlb
lods
mov
add
aam
fidivrs
adc
add
call
xor
jnp
xor
pop
push
inc
in
aad
test
shrb
test
lcall
sbb
lahf
mov
leave
xchg
icebp
pop
cwtl
dec
jl
mov
mov
stos
gs
sub
xchg
clc
sbb
mov
lahf
dec
rcl
dec
aas
in
cld
inc
lock
stc
jne
outsl
mov
loope
sub
dec
mov
xchg
dec
dec
mov
jae
leave
jge
push
or
pop
daa
inc
and
push
push
add
jb
imul
jb
insl
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
arpl
insb
add
popa
add
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
popa
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
adc
adc
adc
and
adc
xor
adc
inc
xor
add
adc
add
add
pop
xor
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jb
gs
xor
add
insb
insl
outsl
outsb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
imul
jb
je
arpl
inc
imul
popa
push
jns
add
