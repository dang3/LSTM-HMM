lcall
out
xor
clc
and
mov
sub
lock
dec
push
xlat
pop
jns
pushl
clc
imul
mov
jg
es
xchg
dec
testb
or
cmp
faddl
inc
adc
rol
sbb
bnd
outsl
and
inc
push
add
push
lcall
mov
cmpsb
stos
push
xor
fcomip
and
pop
sbb
xor
and
cmp
repnz
dec
fwait
xlat
das
xchg
into
jle
daa
xchg
xlat
punpckhwd
sub
ret
aad
sbb
aad
cmp
jno
insb
mov
mov
cmp
mov
xor
pop
adc
jge
fbld
pop
and
or
push
loop
add
cld
jnp
aad
inc
sbb
enter
xor
add
aam
into
in
pushl
xor
je
adc
je
mov
jbe
fldl
sbb
pop
or
incl
dec
push
inc
xchg
ret
shll
repz
stos
stos
rcr
adc
je
mov
rolb
jl
incl
pop
cmp
jae
cmp
pop
jle
test
jo
loope
js
ficompl
cmp
jmp
aad
add
cmp
lret
mov
lahf
xchg
movsl
cmp
shll
cmp
dec
imul
cs
sbb
mov
fwait
ljmp
cld
insl
mov
mov
popf
push
add
pushf
in
push
fdivs
negl
mov
inc
lcall
dec
insb
out
shrb
ss
orl
mov
push
in
push
fistpll
xchg
outsb
loopne
xchg
dec
out
push
aaa
cwtl
xchg
mov
lods
sti
dec
mov
cwtl
int
sub
xlat
call
jno
jbe
dec
add
dec
xor
movsl
lahf
jbe
popa
mov
xchg
dec
mov
ljmp
out
jne
stos
xchg
out
push
nop
std
pop
cld
jg
jecxz
pop
imul
adcl
push
les
scas
ret
popl
and
pop
sbb
aad
or
ljmp
imulb
pop
clc
adc
mov
sbb
rcrl
jmp
iret
inc
rorl
sub
sub
xor
test
insl
lret
data16
mov
call
dec
cmpsl
xchg
sarl
mov
addr16
popf
scas
adc
lds
out
inc
xor
sub
mov
in
sbb
incl
shlb
jb
in
mov
cmp
sbb
dec
gs
ss
push
ret
jbe
mov
sbb
in
mov
push
push
push
insb
ds
mov
fistps
in
add
mov
lea
mov
or
dec
pop
add
in
in
mov
sbb
in
bound
lret
inc
fstps
into
in
rolb
cmc
sub
dec
movsb
into
inc
mov
out
ret
or
lcall
mov
daa
mov
cs
loopne
mov
stos
xor
add
cmp
pushl
xchg
or
xchg
rorl
fiadds
pop
pusha
or
xchg
mov
int3
fiaddl
pushl
popa
fcmovu
mov
mov
xor
jo
cld
mov
xchg
mov
ss
imul
cli
mov
jnp
cmp
lods
and
jmp
popf
mov
pop
push
test
mov
call
imull
inc
dec
cmpsb
cmp
dec
shr
in
movsb
inc
mov
xchg
outsl
jp
pop
hlt
ljmp
xchg
push
mov
inc
cmpb
push
inc
push
sub
dec
jno
std
add
aaa
imul
into
cmp
pop
sub
cmc
cmp
movsb
out
push
jg
call
jle
pushf
jmp
sbb
rcrl
pop
cmp
jne
cmpsb
lods
jne
jb
mov
ss
cld
fcomip
dec
mov
adc
pop
jmp
lock
dec
fidivrs
cmp
inc
push
outsb
fmuls
push
aas
cmp
jnp
inc
cmp
cmp
sub
mov
adc
push
loope
call
pop
push
repnz
or
outsb
push
push
aam
decl
cmp
fmuls
mov
push
xchg
repz
or
pop
push
jmp
std
dec
sbb
mov
jl
xchg
push
mov
lock
push
xorl
jmp
test
mov
std
movsl
stc
pop
pop
push
mov
or
mov
addr16
jmp
pop
fwait
iret
outsb
mov
sub
je
lods
sbb
mov
mov
jno
cmc
ret
cmpsl
in
dec
insb
xor
sbb
icebp
mov
or
fwait
mov
mov
fdivs
sbb
je
jp
rclb
fists
mov
lock
sub
mov
pushf
jl
or
rcrl
inc
push
aas
or
pushl
xchg
ss
jp
pop
out
mov
inc
xlat
shrl
mov
xchg
dec
fidivrl
pop
aam
out
mov
cmp
fiadds
jp
sbb
xchg
call
cltd
lret
jge
push
lcall
jg
iret
sbb
add
rcr
ljmp
decl
xlat
aam
adc
or
or
call
mov
cwtl
fchs
push
and
std
test
jmp
in
jle
testb
and
cmp
pop
stos
mov
sar
fcomip
push
jg
pusha
adc
sub
fdivr
push
mov
hlt
pushf
shll
fxch
lret
sahf
scas
jmp
mov
or
bound
pop
jo
rcr
addr16
lret
add
jbe
mov
movsl
scas
sbbl
enter
lret
jb
loopne
mov
std
sub
aam
or
mov
std
mov
je
stc
mov
ss
inc
fcoms
mov
fdivs
clc
pop
shr
ficoms
mov
test
out
mov
or
call
cmpsb
cltd
fldenv
adc
mov
push
gs
sub
fnstenv
rorl
aaa
movsb
jmp
jne
pushf
dec
cmp
dec
ret
add
arpl
mov
mov
mov
or
jno
and
dec
lcall
inc
mov
movsl
push
jae
imul
fisubl
cmpsl
dec
push
lcall
cmpsl
push
and
dec
mov
mov
inc
jnp
lret
mov
cmp
push
call
dec
mov
jae
jbe
lods
xchg
gs
push
mov
movsl
cmpb
cmp
std
decl
les
xorb
hlt
ret
test
mov
push
lods
out
mov
lods
popa
mov
cmp
hlt
xor
orb
pop
stos
rorl
xchg
fmull
mov
sub
mov
out
mov
in
xor
rep
loop
pop
or
decl
pop
lods
lods
pop
jns
dec
jg
test
dec
mov
xchg
imul
inc
call
scas
divl
test
push
dec
mov
cmp
push
pop
xor
insb
lods
jno
popa
pushl
ret
or
sarb
jp
xor
shr
jns
pushf
mov
call
push
sahf
jo
es
movsl
icebp
or
dec
push
in
mov
push
or
leave
icebp
pop
adc
sub
test
ss
repz
fldenv
mov
out
repz
out
arpl
inc
xor
xlat
dec
pop
sbb
dec
dec
inc
rcr
dec
cld
ret
xchg
jp
jp
push
fisttps
aad
xor
cmp
adc
shrb
clc
lcall
das
enter
adc
and
jle
repnz
pop
cli
jns
jg
mov
dec
sbb
xor
shlb
push
sub
pop
ficoms
je
pop
mov
sub
clc
scas
cmc
mov
inc
fs
ud0
ljmp
std
adc
aam
stc
aad
pop
xchg
aad
andl
das
push
cmp
mov
fimull
push
or
add
movsl
mov
ljmp
stos
pop
scas
incl
dec
adc
xchg
sbb
inc
sbb
inc
sbb
in
push
aas
pop
insl
loop
cmpsb
incl
mulb
cmp
fidivs
insl
xor
pop
dec
xor
je
jmp
std
decl
lock
sbb
fcomp
inc
jbe
filds
cmc
dec
add
jne
das
stos
mov
lret
add
jg
push
lods
scas
out
mov
xchg
test
imul
lcall
outsl
jnp
pop
loope
rcr
xchg
in
xorl
mov
test
mov
out
push
test
cmpsl
lds
jbe
xor
sub
cmc
mull
sub
orl
scas
call
and
pop
sti
fcoml
icebp
pop
adc
jno
xchg
cmpsb
mov
xor
sub
out
testl
mov
mov
sub
sti
add
add
mov
lock
adc
cmp
mov
pop
mov
dec
mov
mov
iret
cmp
add
cwtl
dec
inc
mov
pop
sub
sub
int
jbe
int
dec
imul
inc
js
mov
test
or
dec
mov
idivb
je
rcr
add
movsl
adcb
imull
fbstp
jge
and
mov
push
adcb
dec
lock
inc
push
dec
inc
jne
cmp
pusha
mov
pop
mov
xor
push
push
sub
mov
lock
jno
and
jmp
add
xor
popa
or
adc
sub
sar
mov
xchg
and
or
fists
dec
loope
inc
add
dec
mov
out
adc
xchg
add
rorl
jne
mov
addb
cltd
rclb
mov
fstl
jne
jmp
sub
dec
scas
jmp
pop
movsl
adc
xor
add
addb
add
push
and
test
mov
inc
mov
std
push
andl
sub
outsl
jns
dec
or
sbbb
mov
inc
ret
adc
sub
ljmp
stc
sub
ja
test
mov
pop
or
xor
xor
push
mov
sti
xor
and
push
outsb
es
sub
jmp
fists
repz
mov
jmp
rcrb
in
push
fdivs
ret
sbb
and
das
cmpsl
dec
or
jmp
icebp
stos
push
addr16
pop
jp
push
dec
sbb
dec
adc
pop
inc
pushf
push
add
cmp
cmp
jmp
les
mov
adc
in
jg
xor
adc
push
enter
lcall
pop
xor
mov
add
divl
stos
mov
cmc
pop
imul
lcall
and
jecxz
xor
inc
gs
dec
cmp
xor
lods
popa
loope
pushl
add
and
and
fs
pop
pop
clc
mov
mov
or
popf
lret
sub
ja
shll
and
mov
xor
sub
push
imul
adc
mulb
cs
cmp
mov
inc
and
or
imul
sbb
add
and
cmp
mov
subb
andl
pop
pop
dec
faddp
aad
inc
jns
add
dec
cmp
lods
imul
xor
jo
and
imul
pop
aad
pop
mov
adcb
icebp
xchg
cmp
push
fildll
lret
adc
add
push
ret
bswap
testb
mov
jbe
stos
push
xor
xor
pushl
jmp
inc
jnp
inc
lods
outsl
mov
sub
mov
test
push
add
sub
mov
add
push
incl
test
test
and
in
repnz
add
cmp
enter
add
leave
subb
push
incl
jmp
xor
popa
adc
addl
mov
inc
or
add
add
push
and
fs
nop
orl
mov
adc
mov
add
jl
cmovo
push
and
mov
in
repnz
negl
push
out
jns
out
int3
loopne
or
jns
out
push
cs
pop
iretw
repz
je
nop
push
cmpsb
push
mov
repz
cld
or
sbb
jns
out
inc
push
insb
test
ret
repnz
repz
or
and
inc
pop
jbe
iret
repz
mov
lcall
push
cs
sahf
out
push
push
mov
mov
fsubr
clc
cmp
sarl
sub
dec
fs
repz
lcall
add
adc
sahf
out
sahf
xor
jo
mov
mov
fdiv
or
repz
rcrl
xor
pop
push
repz
jp
stos
ret
sahf
ja
add
lds
cs
jns
out
push
outsb
jle
sahf
out
sahf
out
in
cld
iret
repz
adc
and
inc
pop
insb
cmp
repz
xchg
mov
iret
repz
push
push
es
sahf
out
dec
pop
insb
jl
out
sahf
xchg
mov
jns
ja
mov
sub
push
out
sahf
out
je
lcall
shl
testb
push
cmp
repz
dec
fs
sahf
xchg
rep
mov
leave
out
fidivrs
push
cs
pop
sahf
out
sahf
je
mov
int
jns
clc
adc
and
repz
repz
fs
xchg
into
repz
movsb
mov
jns
mov
push
sub
sahf
out
sahf
pusha
jo
nop
test
xor
out
shl
lock
sbb
cmp
repz
dec
pop
jo
repz
adcb
out
cmp
clc
or
push
jns,pn
out
inc
push
fs
out
sahf
out
mov
fdiv
iret
repz
or
sbb
cmp
cmp
repz
mov
iret
repz
push
rclb
cs
sahf
out
pop
push
nop
lahf
out
sahf
test
out
adc
cmp
repz
xor
push
fs
repz
movsb
mov
iret
loopne
push
rcrb
cs
out
sahf
ds
fs
stos
xor
out
ret
add
adc
cmp
repz
inc
pop
push
repz
adcb
out
cmp
cli
adc
and
jns
out
dec
pop
push
sahf
out
mov
in
iret
repz
add
sbb
cmp
bound
iret
repz
nop
test
enter
jns
cs
push
and
jns
out
inc
pop
jb
sahf
out
sahf
cwtl
test
fsubr
cmp
sarl
and
push
push
sbbb
ds
in
adc
es
out
sahf
dec
fs
mov
jns
fcmovu
cs
repz
repz
and
dec
pop
outsb
iret
repz
test
out
ds
fisubl
push
bound
out
js
cmpsb
mov
sarl
fsubr
cld
adc
sub
repz
cmp
jo
sahf
cmp
repz
mov
sahf
cmpsl
stc
add
sbb
cmp
out
sahf
out
je
lcall
cli
adc
out
sahf
out
inc
push
outsb
jle
lahf
out
sahf
cmpsb
mov
fidivrs
repz
sub
dec
pop
repz
rep
xchg
iret
shr
add
push
cs
out
sahf
ds
insb
jl
pushf
dec
lahf
out
mov
fistpll
repz
cmp
cs
iretw
repz
jl
mov
cmpsl
stc
cmp
push
loope
sub
jns
out
dec
pop
je
pushf
repz
out
int3
fsubr
add
iret
repz
sbb
dec
pusha
jo
cmp
repz
test
shr
jns
out
clc
or
sbb
inc
out
sahf
out
outsb
jle
scas
int
jns
aam
hlt
or
sbb
iret
repz
inc
pop
outsb
jle
cmp
repz
jns
iret
cli
or
and
push
sahf
out
sahf
data16
xchg
lods
les
out
aam
hlt
add
adc
cmp
repz
inc
push
fs
repz
jl
movsb
mov
ficompl
add
push
cs
out
dec
fs
test
jns
out
into
in
or
iret
repz
sbb
dec
pop
outsb
test
repz
movsb
mov
out
in
add
sbb
inc
out
sahf
out
push
lcall
fsubr
add
adc
cmp
repz
pop
jo
sahf
stc
cmp
repz
in
add
out
sahf
cmpsl
sbb
cmp
sahf
out
sahf
jbe
xchg
cmpsb
mov
jns
jo
push
cs
out
dec
data16
sahf
repz
out
fsubr
add
iret
repz
adc
xor
jo
iret
repz
sahf
mov
jns
iret
repz
adc
and
out
sahf
out
bound
xchg
fsubp
jns
test
into
out
out
into
out
out
sahf
ja
xor
jb
out
sahf
mov
cmp
repz
adc
es
repz
repz
jb
sahf
scas
ja
ds
mov
icebp
push
sahf
out
sahf
and
dec
pusha
jo
jns
out
cwtl
test
shl
repz
out
adc
and
dec
iret
repz
pop
push
ds
repz
fsubrp
decb
repz
out
push
cs
pop
insb
out
sahf
out
xchg
mov
je
fsubr
rcr
sub
repz
inc
push
data16
xchg
cmp
mov
in
iret
repz
cmp
outsb
cmp
repz
pushf
lods
fdivrl
out
in
add
adc
cmp
jns
out
pusha
jo
xchg
lahf
out
sahf
lods
cli
or
cmp
repz
xor
jo
cmp
xrelease
imul
clc
and
sahf
out
sahf
inc
pop
jb
xchg
test
sahf
out
mov
stc
repz
rcll
cs
iretw
repz
jle
cmpsb
mov
out
cmpsl
stc
cmp
adc
sub
dec
jns
out
pop
insb
jl
lods
out
sahf
out
int3
fsubr
cld
iret
repz
or
and
dec
pop
jbe
iret
repz
movsb
mov
out
hlt
add
sbb
cmp
jns
out
fs
xchg
lahf
out
sahf
movsb
mov
fdiv
or
cmp
repz
xor
outsb
repz
repz
ds
fdiv
or
push
sub
repz
repz
push
xchg
scas
out
cmp
out
decb
lcall
cs
data16
sahf
out
mov
or
out
push
stos
fiadds
sub
repz
cmp
push
xchg
stos
ds
repz
shl
testb
jns
out
sbb
dec
pusha
jo
jns
out
cwtl
test
into
iret
sarl
hlt
or
and
dec
cmp
repz
jo
nop
mov
mov
in
add
out
sahf
cmpsl
adc
cmp
push
out
sahf
jp
lcall
jns
push
add
sub
repz
repz
push
nop
mov
mov
out
push
sahf
out
lcall
jns
out
je
pushf
mov
jns
popf
out
call
out
sahf
out
push
pusha
jo
sahf
out
sahf
xchg
scas
aam
hlt
cmp
sarl
sbb
inc
push
repz
repz
mov
iret
ret
clc
adc
sahf
out
sahf
es
push
data16
sahf
out
mov
xor
out
hlt
add
adc
iret
repz
cmp
fs
test
out
repz
in
or
push
iret
repz
sub
dec
bound
cmp
repz
test
shl
out
pop
idiv
or
dec
sahf
out
sahf
pop
insb
jl
pushf
mov
sahf
out
ret
repnz
cmp
rcrl
xor
je
repz
test
repz
or
iret
repz
push
data16
mov
cmp
fdiv
or
repz
sub
data16
cmp
repz
ret
clc
jns
cmpsl
stc
push
nopl
pop
out
sahf
out
sbbb
sahf
fsubr
push
adc
ss
repz
fs
movsb
stc
cmp
repz
adc
jns
cmpsl
and
inc
pop
jb
out
sahf
mov
out
idivl
adc
pushw
ss
sahf
out
sahf
pop
outsb
jle
stos
mov
shr
add
sbb
repz
repz
jbe
iret
repz
xchg
scas
aam
cli
repz
mov
xor
iret
repz
outsb
jle
cmpsb
mov
cmp
decb
adc
out
inc
pop
insb
jl
out
sahf
out
mov
iret
repz
add
adc
cmp
cmp
repz
jle
sahf
mov
ds
repz
loop
or
and
jns
out
inc
push
pusha
jo
out
sahf
mov
out
out
cli
pop
sbb
ds
sahf
out
sahf
insb
test
sbb
fcompl
sbb
push
sub
cmp
repz
jo
iret
repz
nop
mov
sahf
out
ds
sbb
cs
pop
jns
out
insb
test
out
ljmp
jns
out
inc
pop
outsb
test
mov
shl
clc
iret
repz
push
sbb
cs
pop
je
iret
repz
xchg
stos
rcl
lcall
sub
out
sahf
out
pusha
jbe
xchg
lahf
out
sahf
cmpsb
mov
push
cmp
repz
sub
dec
pop
repz
repz
xchg
mov
iret
lret
adc
push
ds
repz
data16
pushf
out
cmp
lods
mov
sahf
out
sahf
adc
cmp
jo
sahf
out
xchg
xor
out
repnz
sbb
iret
repz
dec
pop
jo
nop
mov
mov
jns
cmpsl
stc
or
and
dec
pop
out
sahf
out
jl
movsb
mov
aam
cli
adc
and
cmp
repz
pop
push
iret
repz
mov
in
add
out
and
sub
out
ficomps
push
jp
xchg
sahf
out
sahf
movsb
mov
into
fsubr
cmp
repz
push
and
cmp
repz
pop
push
iret
test
lcall
add
adc
out
push
sub
dec
push
out
sahf
out
jb
mov
mov
sarl
or
push
sbb
cmp
iret
repz
pop
insb
jl
repz
repz
lods
mov
ds
in
cld
or
jle
sub
repz
repz
pop
insb
jl
add
inc
sub
xchg
inc
add
push
subl
jl
jb
and
mov
stos
push
xor
sub
lock
xchg
inc
sbb
sti
int
subl
jae
push
arpl
jae
orb
clc
rcll
pop
fstpl
sub
outsl
fwait
out
pop
ret
int3
cmp
add
xchg
mov
aas
mov
pushl
cmpsl
pop
ja
sbb
add
enter
call
mov
xor
jmp
cs
xchg
sbb
inc
das
xchg
jae
icebp
push
in
mov
mov
call
lods
xor
insb
pop
cmp
dec
int
sub
xchg
aas
stos
in
xor
call
cli
lahf
inc
pop
pop
shrb
xchg
test
push
mov
popf
jb
es
fnstcw
inc
cmp
adcl
add
push
cmc
xchg
mov
xchg
test
and
adc
jmp
popf
xchg
mov
int3
pushf
leave
add
jae
mov
pop
mov
xchg
adcl
sbb
push
xchg
das
icebp
push
inc
mov
xchg
sarl
jge
cmp
pop
jp
push
das
shll
and
fwait
arpl
and
dec
ja
adc
ljmp
clc
lcall
cmp
adc
dec
or
mov
jo
mov
enter
lcall
rcl
lret
lcall
inc
jl
mov
inc
lcall
call
xor
mov
jbe
and
push
xchg
cmp
out
mov
aad
jmp
inc
nop
adc
pop
andl
cmp
fisubrl
incl
xchg
rcrl
sarl
mov
or
fwait
adc
push
lret
jl
xchg
ljmp
pop
mov
mov
popf
iret
cmp
pop
pop
aaa
clc
mov
imul
dec
cmc
lds
mov
fcmovnbe
into
out
dec
fists
jmp
push
sbb
inc
jp
sub
dec
inc
xchg
jp
inc
pusha
xchg
xor
prefetcht1
pushl
cmp
mov
mov
icebp
lret
pop
fisubl
xor
pop
adc
bound
imul
add
psubb
sub
ret
cmp
in
jns
cmp
sti
mov
test
hlt
inc
and
lcall
inc
jne
repnz
fsubs
fimull
dec
sub
add
and
push
incl
adc
enter
adc
pop
pop
add
jmp
adc
iret
lcall
addr16
pop
and
jl
lret
ja
dec
cmp
orl
jge
out
sub
jg
call
xchg
je
iret
jae
enter
pop
out
and
dec
and
push
out
mov
jg
inc
sub
mov
jl
pushf
jbe
lret
loopne
ret
lds
sbb
pop
jmp
cli
fcomps
dec
or
mov
push
fistpl
or
sarb
inc
lret
mov
dec
mov
js
push
jmp
scas
jg
jns
jns
cmp
insb
ret
jl
stos
jl
or
mov
xor
outsl
sub
inc
dec
jo
fildl
adc
mov
in
in
std
jg
adc
mov
mov
inc
mov
mov
mov
mov
adc
mov
testb
jge
inc
dec
add
mov
add
lret
cmc
adc
movsb
sbbb
xchg
pop
sbb
jns
sub
sub
imul
lcall
cmp
mov
nopl
clc
fisttpl
ret
dec
and
iret
incl
jnp
loop
das
fwait
xchg
or
mov
sub
mov
out
xchg
rcrl
pop
pop
stc
ljmp
fsubs
pop
and
sub
pop
inc
adc
push
sbb
rcl
adc
mov
mov
push
sub
adc
mov
xor
into
or
pushl
jnp
lret
lods
dec
sti
lcall
scas
mov
ss
or
stos
mov
lods
adc
lods
sbb
mov
aaa
fistpll
nop/reserved
mov
cmp
mov
mov
mov
dec
mov
pop
mov
dec
adc
gs
iret
xchg
pop
push
cmpsl
fistpl
daa
clc
adcb
scas
ret
adc
or
jge
popa
sbbl
into
stc
push
cmp
adc
xor
ja
dec
fistl
call
cld
or
mov
push
cmp
adc
leave
adc
iret
testb
xor
test
inc
enter
repnz
out
fistpll
xchg
sbb
lahf
rcrl
xor
or
ljmp
enter
lret
nop
adc
mov
sub
ficoms
xor
into
mov
mov
fldt
mov
pop
jp
test
fadd
jnp
push
sti
jle
adc
push
fcomi
imul
jnp
push
or
addl
pushl
xor
test
xor
setbe
mov
idivb
fisubl
dec
mov
testl
fwait
mov
repz
jle
xchg
into
ss
test
jge
fsubp
jg
xchg
adc
cmp
ror
jnp
lret
inc
mov
cltd
jle
lret
gs
mov
mov
pop
xchg
jecxz
dec
ret
bound
lret
push
dec
std
lcall
jb
mov
dec
insl
imul
insb
sti
jge
dec
outsb
hlt
fucomi
call
add
into
adc
jns
faddp
inc
xor
dec
push
xchg
into
and
cmp
and
mov
in
idiv
jg
xor
inc
push
xor
dec
cmp
int3
ds
ret
into
mov
adc
push
iret
es
inc
dec
repnz
dec
test
clc
iret
xor
mov
inc
push
ret
scas
jge
ds
sbb
idivl
xor
cmp
cli
lea
aaa
jnp
jae
mov
je
mov
push
add
xchg
rcr
inc
outsw
into
sbb
inc
pop
jae
sbb
jp
shlb
jp
cmp
lock
aas
add
mov
je
push
aas
scas
mov
shrb
mov
decl
clac
loopne
or
cmpsl
mov
mov
leave
divb
ret
adc
dec
cltd
xchg
mov
ljmp
icebp
aas
jp
test
int3
and
lock
jmp
nop
dec
andl
fstl
pop
adc
dec
and
cs
lret
das
inc
mov
ljmp
clc
ss
push
dec
inc
inc
jae
mov
lock
cmpb
fwait
adc
jnp
pop
push
sbb
fs
sbb
jae
sbbw
sti
lcall
inc
cmpsl
out
clc
jg
ja
imul
inc
jnp
clc
icebp
dec
and
icebp
inc
add
jle
push
daa
inc
out
cli
lea
dec
ss
sub
push
cmp
popl
incl
jns
scas
clc
fcomi
mov
xchg
mov
xor
js
testb
mov
mov
aas
loope
mov
ret
cbtw
mov
sbb
or
test
lret
popl
aas
mov
dec
enter
shrb
fdivrl
call
icebp
adc
push
daa
fildl
bound
push
jp
cltd
mov
adc
jne
inc
jmp
pushl
jns
negl
lret
lret
sarb
xor
add
mov
jg
adc
xchg
mov
mov
mov
cmp
repz
repz
sub
movsb
and
dec
ljmp
xor
test
popf
cmp
ret
inc
inc
add
sub
mov
iret
cmp
fildl
push
xor
das
dec
jl
addr16
xor
inc
loopne
out
mov
dec
dec
mov
cmp
lcall
dec
outsb
mov
dec
dec
push
ret
pushl
push
inc
out
xchg
in
inc
stos
inc
push
pop
mov
test
dec
popf
mov
ljmp
mov
test
push
lret
pusha
cli
mov
dec
or
into
mov
cmpsb
jp
mov
jp
enter
or
mov
idiv
ljmp
rcr
fsubrl
lahf
and
adc
ljmp
adc
push
adc
ljmp
incb
push
mov
stos
arpl
jne
cmp
lcall
or
popf
push
or
lods
jmp
adc
pop
fs
push
push
inc
push
push
xor
dec
jae
push
xor
jo
inc
pop
push
jbe
gs
clc
incl
inc
jne
gs
jno
bound
aaa
dec
arpl
push
push
js
bound
aaa
cmpsb
ljmp
inc
inc
push
jbe
dec
inc
data16
push
aaa
je
aaa
insb
pop
outsl
data16
dec
ss
call
addr16
addr16
insl
dec
jp
imul
outsl
data16
inc
inc
jbe
insb
xor
imul
inc
xor
xor
push
aaa
push
jns
jo
push
pop
inc
imul
dec
scas
dec
js
xor
dec
pop
push
inc
xor
jo
inc
jne
dec
ss
xor
ljmp
push
push
xor
jp
arpl
push
inc
cmp
xor
jo
jns
loopne
push
inc
push
jb
mov
jae
push
jne
jbe
jb
xor
xor
push
ss
in
decl
push
imul
outsb
push
jns
jae
jo
push
cmp
dec
inc
xor
jae
je
call
dec
insb
aaa
pop
push
outsb
outsb
bound
popa
jb
fs
outsb
jp
jp
inc
dec
jne
bound
or
call
sub
jo
insl
push
ja
gs
cmp
inc
dec
pop
icebp
pushl
push
outsl
popa
xor
push
je
cmp
inc
jbe
pop
insb
insb
les
mov
cmp
pop
arpl
sub
dec
jae
xor
xor
jg
xchg
dec
inc
cmp
push
add
push
jb
dec
ss
mov
jno
popa
mov
dec
push
jb
gs
xor
jo
adc
inc
add
stc
dec
mov
xorb
add
enter
add
imul
jns
lcall
jbe
ret
add
dec
push
in
mov
rcrl
sbb
add
lock
and
or
xlat
loopne
pop
enter
mov
int
or
adc
test
and
faddl
sarb
or
test
test
and
and
pop
sti
idiv
pop
cmc
inc
mov
jo
mov
mov
sub
outsb
sbb
jbe
push
mov
sahf
in
or
push
mov
adc
and
or
push
adc
adc
fnstcw
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
cmpsl
fldcw
mov
jle
xor
loop
fstpt
inc
xor
std
jbe
xchg
dec
dec
mov
push
fistpll
mov
subl
cmpsb
xchg
push
mov
les
and
or
push
std
adc
jp
fnstsw
push
daa
out
dec
fdivl
dec
push
popf
inc
faddl
ds
ja
jo
jge
js
rolb
aas
sti
jbe
adc
das
addr16
adc
cvtps2pi
add
sub
aas
lds
or
mov
inc
push
sbb
adc
loope
int
add
dec
jo
jmp
sahf
ucomiss
sub
loope
pop
xchg
loop
xlat
inc
aas
inc
add
fiadds
xbegin
jbe
xor
pushf
pop
test
outsl
outsb
push
cmp
insl
mov
sahf
outsl
and
inc
adc
es
popa
or
xor
cmp
incb
pop
scas
leave
les
push
push
push
mov
mov
pop
push
jo
out
ss
int
icebp
sarl
add
mov
nop
xor
fldcw
mov
jmp
lds
jns
sub
test
test
ja
je
fldcw
sti
fiaddl
das
jge
insb
les
cld
mov
or
dec
or
into
sub
lahf
mul
push
ja
push
jae
loop
pop
inc
icebp
dec
idivb
ds
mov
lds
lock
ds
imul
fstpl
mov
imul
gs
xor
cs
insb
pop
mov
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
pop
lods
jge
jbe
add
pop
jb
dec
outsb
outsl
jg
in
and
imul
jne
inc
jb
gs
imul
jae
or
jnp
mov
xor
inc
outsl
jne
fidivrs
jne
jns
push
outsw
jb
popa
outsb
arpl
div
fcmove
sbb
push
adc
sbb
jb
out
adc
popa
fs
fs
push
mov
xlat
or
add
cs
ds
notl
lods
fsts
dec
jmp
jbe
imul
dec
jne
mov
jns
sub
or
sub
movsb
inc
lock
pop
arpl
sbb
sbb
jb
jns
js
push
dec
or
mov
cmc
and
popa
divb
insl
mov
and
cmp
fs
jae
imul
ret
testb
hlt
gs
push
or
insl
in
inc
imul
mov
shll
and
inc
inc
mov
push
push
xchg
insl
mov
lcall
fs
jb
or
mov
inc
bound
mov
push
or
xor
lock
push
push
outsb
push
jo
jecxz
jns
xor
out
fwait
push
std
mov
mov
xchg
and
dec
data16
push
je
jnp
loopne
xorb
cmp
popa
imul
mov
jns
test
pop
pop
push
adc
push
jns
inc
or
push
inc
shl
xchg
xchg
jne
jb
push
gs
push
fisttpl
jae
int3
cs
mov
jae
fsubl
gs
outsl
mov
fsubrp
sub
je
inc
jbe
jo
popl
addr16
add
loopne
imul
movsb
outsb
mov
sub
and
outsl
adc
je
push
jns
cmp
icebp
pop
pop
aas
stos
lds
fwait
and
lret
cmp
mov
sbb
imul
mov
pop
cmpsl
pop
adc
andl
hlt
mov
insb
push
dec
bound
loop
scas
shl
jg
jo
pop
es
ret
cmpsb
sub
sbb
scas
cmp
mov
cmp
mov
push
imul
roll
xchg
mov
sub
mov
xchg
arpl
movsl
add
and
cmpb
mov
popl
pop
adc
sbb
mov
push
lods
adc
sahf
jae
shr
jl
jo
jae
inc
test
jo
rcrb
imull
daa
sbb
notl
cli
add
frstor
ljmp
in
ret
xor
mov
cs
mov
insl
inc
jo
loop
inc
mov
movsl
test
or
and
mov
jo
jecxz
mov
cmp
hlt
es
adcb
shlb
addr16
cmp
sub
lret
movsb
in
int3
orb
mov
flds
dec
push
xor
inc
imul
pop
inc
insb
js
fwait
mov
sbb
loop
mov
int3
idivl
pop
push
dec
pusha
xchg
xor
ja
sub
nop
cmp
jbe
js
jo
addr16
adc
lock
jecxz
outsl
mov
cmp
inc
inc
cmpsl
push
data16
jb
daa
orl
je
incl
jb
jae
ja
popf
into
inc
clc
push
push
or
push
or
shlb
in
out
shll
sbb
fcomps
mov
enter
fisttpll
sub
xlat
outsb
and
sub
adc
dec
add
add
bound
inc
sub
and
incl
adc
mov
or
mov
jmp
andl
inc
add
adc
adc
nop
inc
add
add
add
and
adc
subl
push
add
adc
enter
nop
inc
add
add
inc
push
add
add
and
adc
nop
push
add
add
dec
lcall
inc
or
call
mov
subl
inc
add
imul
or
xorl
and
sub
or
test
push
add
subl
inc
add
fs
add
nop
adc
inc
decl
and
nop
push
add
add
addl
and
test
pop
add
add
adc
shlb
add
push
push
incl
adc
enter
nop
inc
add
add
or
or
add
nop
inc
add
add
subl
inc
push
mov
test
test
adc
adc
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
inc
cmpb
incl
xor
dec
incl
pop
xor
xor
inc
mov
add
add
fnstenv
pop
add
add
std
in
outsl
incb
or
inc
call
add
mov
mov
addb
jg
mov
addl
incb
pop
push
add
cmp
divb
std
sub
sbb
cwtl
add
orl
roll
adcl
test
mov
and
jnp
cwtl
mov
scas
push
xchg
sbb
je
in
jmp
mov
subl
lds
fbstp
nop
fs
je
rorb
jo
incl
and
ds
add
roll
add
fistpll
jb
insb
rclb
shrb
and
loop
or
subb
push
incl
jg
pop
les
call
add
stc
and
mov
outsl
push
push
pop
add
sbb
or
shll
repz
ds
push
mov
das
adc
fildl
push
add
cmp
imul
dec
ret
stos
xchg
test
sti
sahf
jae
xchg
xor
icebp
fmul
mov
fld
or
loope
pavgb
stos
xor
dec
mov
gs
popl
mov
mul
jecxz
pop
push
jnp
lcall
push
fiadds
aad
pusha
add
das
inc
lds
sbb
pop
pop
loopne
aaa
cmpsb
imul
or
into
add
test
arpl
shrb
ds
push
sub
sbb
test
imul
add
dec
test
push
lock
pop
stos
pop
push
out
cmp
mov
repnz
or
pusha
push
dec
shrl
repz
insl
pop
movsl
pusha
or
int3
mov
shrb
add
mov
or
push
aas
mov
inc
mov
imul
test
sarl
js
mov
mov
ret
mov
lods
jecxz
dec
xadd
jmp
mov
out
dec
ret
insl
mov
fwait
mov
jno
imul
call
cmp
dec
push
jge
xchg
test
out
mulb
mov
sub
sbb
loopne
pop
lret
fidivs
insl
stos
push
pop
xchg
mov
sbb
mov
add
push
pop
out
lds
sbb
sbb
test
int
imul
xor
sub
cmp
clc
and
sub
stc
sbbb
idivb
pusha
mov
inc
add
dec
jnp
lods
loopne
fidivrl
rcrl
mov
xlat
sbb
cmc
or
out
pop
sbb
cmp
push
jne
cli
pusha
rcr
fidivs
or
add
arpl
mov
sub
lods
pop
jl
sti
rorb
lgs
imul
sarb
fs
cmp
loopne
insl
add
xchg
addb
dec
std
xlat
jmp
dec
imul
push
mov
mov
pop
sti
cmpsb
add
iret
mov
or
or
add
fadds
dec
or
pop
cmp
mov
xchg
mov
repz
sbb
movsl
sbb
sub
and
pop
or
shl
mov
je
stos
xor
mov
inc
loopne
outsl
sub
rorl
jmp
jl
jo
stos
pop
cmp
xor
xor
outsb
data16
add
sub
mov
popf
xchg
out
jnp
ja
push
iret
pop
fsubl
and
push
mov
pop
xor
pop
push
jae
int3
sti
xor
mov
ror
pop
lock
sbb
xor
inc
jns
xchg
in
mov
iret
lods
stos
add
mov
nop
test
lock
ljmp
repnz
fsts
sti
and
mov
fidivs
xor
jo
jmp
xor
mov
cld
int
lcall
aaa
xor
in
fwait
jo
sbb
mov
or
mov
jno,pt
test
or
lcall
inc
cmp
loope
mov
push
lahf
jo
xor
imul
jge
lcall
dec
pop
mov
jle
xor
leave
jnp
add
sar
adc
add
mov
ds
push
add
popl
cmc
scas
push
rcll
jbe
call
loop
addr16
fimuls
jno
cld
or
cmp
fnsave
add
inc
lock
push
enter
inc
hlt
ljmp
std
push
adc
sub
pop
cmp
incl
pop
ja
das
adc
testl
add
xor
in
fiaddl
sbb
mov
repnz
or
mov
lahf
jbe
add
jle
mov
xor
add
inc
imul
adc
pushf
aam
outsb
jbe
xchg
jo
and
popa
jb
xchg
in
je
lea
jo
mov
gs
mov
add
jb
xchg
je
insl
lcall
outsb
or
or
fdiv
inc
mov
addb
popf
add
ljmp
sbb
add
test
test
add
in
add
push
or
sub
add
scas
push
adc
fisubs
xor
push
push
aaa
cltd
outsb
decb
adc
push
push
aaa
sti
or
clc
js
cld
xor
jo
bound
add
adc
rolb
cmp
xlat
add
jecxz
lock
inc
add
add
test
sti
adc
and
add
gs
add
jne
lea
add
jb
xchg
add
jbe
insb
add
outsl
das
test
add
dec
add
ja
icebp
or
inc
test
dec
imul
xor
inc
jp
pusha
add
inc
jo
sti
shll
das
je
cs
testb
sub
and
add
adc
subb
mov
push
sub
fisubl
push
push
es
insb
mov
jge
cmpsl
add
and
dec
pop
loopne
xor
xor
pop
dec
or
or
or
add
pop
or
lods
movsb
add
jmp
push
mov
lock
mov
jne
mov
incb
add
mov
cltd
mov
lret
add
jno
add
add
in
fwait
mov
sti
les
xor
sti
add
xor
xor
add
outsl
pop
push
sti
inc
add
cld
add
xor
sbb
add
incb
clc
mov
mov
aas
xlat
lock
pop
xor
and
and
sti
test
cs
ljmp
aaa
add
cmp
mov
sbb
addr16
imul
jno
jae
jne
jbe
pushl
jns
mov
pop
pop
lahf
incl
testb
jge
incl
cld
pop
aas
mov
aas
add
in
lea
cmp
sbb
aas
sbb
xor
incl
sti
add
xor
rorb
or
push
add
add
or
bound
ja
ds
lock
sub
dec
lock
jbe
sub
mov
pop
xchg
mov
in
sbb
xor
mov
push
loopne
sub
mov
and
adc
rcrl
mov
and
sbb
xor
dec
inc
in
and
inc
sahf
mov
rcrb
lock
dec
jp
stos
cmp
lret
sbb
push
stos
gs
imul
in
jns
ljmp
mov
ret
js
push
mov
call
push
int
pop
inc
aaa
jg
scas
mov
nop
pop
sbb
dec
ss
mov
lods
mov
in
in
scas
cli
scas
mov
or
out
lods
mov
adc
repz
out
lret
add
hlt
cmp
ror
or
push
cmpsb
into
add
adc
cli
in
jecxz
pop
jl
mov
fld
pop
and
pop
nop
mov
jg
mov
or
mov
lret
jno
cltd
sti
repz
test
decl
push
int
mov
sbb
int
lds
mov
pop
xchg
out
clc
ljmp
loope
adc
mov
neg
out
mov
mov
out
std
sub
add
enter
shlb
std
xchg
or
arpl
decb
mov
shll
sbb
sub
mov
cltd
cmp
loopne
mov
jl
add
push
adc
sbb
addb
pop
jae
ficoml
mov
orb
add
add
mov
mov
inc
sub
sbb
push
push
or
call
xchg
adc
rolb
shr
mov
in
les
mov
rorl
add
add
pop
jnp
cmp
adc
add
jbe
cs
push
outsb
add
les
push
inc
scas
data16
cmp
sub
test
sub
dec
aaa
push
xor
ficoms
push
xchg
rorb
or
mov
push
mov
push
cmp
add
add
jae
push
adc
mov
push
add
pop
mov
xor
pop
stos
sub
rorb
xor
jmp
add
testl
aaa
roll
inc
sbb
add
add
add
out
push
lock
cmp
and
sti
pop
xchg
push
enter
add
mov
rorl
pusha
subb
sub
loope
add
inc
dec
shlb
push
mov
jg
fwait
and
add
mov
aas
mov
push
dec
jo
add
or
cs
adc
out
pop
outsl
cmp
loope
or
xchg
dec
mov
lahf
pop
mov
dec
mov
inc
stc
or
fdivrp
inc
sbb
sarb
add
mov
sets
pop
adc
adc
mov
rcrb
add
inc
fcmovnb
inc
dec
in
dec
sbb
add
pushf
cmp
lahf
add
push
adc
roll
jbe
and
aaa
rcr
sub
imul
das
sbb
add
push
test
in
loopne
cmpsb
rorl
fisubrl
ja
sahf
lock
shl
or
sub
fs
lods
mov
pushf
dec
mov
mov
std
in
mov
cmp
or
add
ret
loopne
loop
push
pop
repz
std
jle
jle
cmp
pop
loopne
mov
dec
add
lods
shlb
sub
stos
adc
mov
sti
dec
jnp
int3
out
nop
sbb
and
in
fldl
scas
xor
push
push
into
mov
sahf
lods
sub
cli
add
daa
call
and
jo
loopne
lcall
pop
fistpl
outsl
add
fneni(8087
sbb
add
fcmovb
int
xchg
test
cmp
loopne
outsb
popa
xor
jnp
mov
add
adc
js
or
push
xor
imul
push
stos
loopne
subl
xlat
push
pop
ret
dec
mov
adc
rolb
roll
push
outsb
add
insb
fistl
loopne
or
jp
cmovp
stos
mov
filds
gs
or
push
push
ljmp
stos
pop
xchg
ror
loopne
stos
pop
loopne
insl
xor
stos
orl
add
fnstsw
inc
cmpsl
or
loopne
stos
mov
lods
imul
lret
adc
adc
add
loopne
jmp
jp
pop
stos
repz
xchg
add
dec
or
add
insb
dec
add
ret
inc
sbb
outsb
mov
push
push
shll
addr16
loopne
jae
loopne
adc
imulb
push
pop
fwait
sbb
mov
or
add
sbb
cmp
dec
cmp
push
popf
or
stos
xlat
out
push
push
ficompl
fimull
pop
jmp
jo
loop
or
mov
xor
push
aam
jge
or
pop
dec
and
mov
aaa
or
cmp
loopne
sbb
dec
movl
clc
imul
sbb
mov
sub
addr16
testl
loope
fmuls
and
sahf
adc
jb
xlat
lods
mov
sub
xchg
or
mov
sbb
pop
xchg
dec
out
loopne
or
loopne
xchg
push
adc
jecxz
adc
sub
jg
cmp
int
and
scas
loopne
mov
add
jo
lret
jo
fldt
roll
or
or
jo
and
loopne
or
add
inc
pop
push
fwait
jno
mov
lock
jo
jb
mov
pop
xorb
push
lock
or
sarb
lods
xor
mov
lock
sarl
fdivrp
sbb
adc
out
lock
lock
inc
sti
es
mov
mov
dec
cmp
mov
aaa
sbb
inc
sbb
lock
cmp
imul
or
cmpsl
imul
and
mov
dec
jo
stos
mov
jecxz
sar
sti
or
inc
loopne
pop
inc
inc
shlb
push
movsb
add
jmp
push
nop
inc
imul
xor
or
jo
mov
jns
jbe
lahf
xor
sub
pusha
and
mov
cmovae
adc
xchg
xor
push
cwtl
jo
dec
push
adc
pop
cvtps2pd
add
adc
push
inc
stos
jecxz
mov
lock
xor
pusha
or
inc
add
pop
jbe
and
cmpsb
mov
xor
jns
outsl
push
pop
stc
imul
fwait
sbb
lock
mov
and
jmp
jbe
lcall
inc
jl
and
mov
das
popf
sbb
or
jno
test
xchg
lock
jns
icebp
xchg
add
xor
adc
adc
cmpsl
push
sahf
cmpsb
incb
repz
std
adc
mov
fildl
sbb
xor
add
fcmovu
sub
add
les
inc
and
fbstp
es
pop
int3
pop
add
divb
add
and
add
pop
add
repz
add
add
jge
push
add
dec
add
add
repz
inc
add
add
add
movl
inc
add
pop
jmp
pop
add
inc
add
add
bound
jle
push
jl
add
aas
push
add
add
add
adc
adc
aaa
or
pop
xor
sbb
cmp
add
in
das
add
ss
add
fadds
daa
add
add
and
std
incl
bound
nop
or
add
add
sbb
pop
add
add
adc
push
add
nop
add
cmp
add
arpl
lods
movb
add
nop
or
adc
outsl
mov
adc
arpl
add
add
mov
shll
push
add
addb
add
jp
pop
js
adc
xor
add
push
adc
sbb
pop
aaa
jnp
and
daa
adc
and
insb
adc
mov
insl
pop
add
or
add
enter
and
xchg
add
add
xchg
add
insl
mov
add
add
adc
add
add
add
add
pop
add
add
mov
push
fiadds
addr16
lock
outsb
fcoms
add
cmp
add
add
add
sub
add
add
or
push
and
mov
add
faddl
adc
adc
sub
aaa
sub
add
aaa
push
add
add
decl
add
pop
add
pop
add
fisttps
clc
xor
xor
adc
sti
xor
repnz
cld
int
cld
add
xor
mov
push
add
push
add
xor
jecxz
sbb
fists
in
push
add
ret
dec
add
adc
mov
xor
movsb
pop
cmpsb
xor
test
dec
add
xor
int
stos
dec
add
xor
scas
inc
add
xor
mov
cld
int
cld
add
xor
mov
add
xor
mov
aas
add
ret
cld
int
ds
xor
xor
add
cld
int
mov
add
adc
add
xor
add
ss
xor
int
xor
shlb
xor
xor
xor
xor
int
cld
int
fildll
add
xor
loop
sub
sub
pop
cld
add
xor
add
shrb
add
xor
add
es
xor
repz
and
in
xor
add
and
xor
add
and
jg
aaa
xor
sub
inc
add
pop
adc
add
and
jg
aaa
cmp
and
cmp
push
cmp
repz
jg
push
aaa
add
push
xor
sub
xor
jg
add
xor
adc
add
repz
sub
xor
sub
push
sub
je
add
adc
add
cmp
add
repz
push
add
push
sbb
inc
sbb
inc
jg
aaa
jg
add
inc
pop
add
dec
adc
add
aaa
adc
dec
adc
outsl
aaa
insl
adc
add
adc
push
push
add
sub
pop
push
stos
pop
push
push
adc
mov
mov
into
pop
push
push
adc
repnz
push
pop
adc
lods
cmp
pop
adc
cmp
adc
pop
imul
pop
adc
and
in
lods
jne
add
add
dec
push
add
incb
rcrl
and
adc
or
or
inc
push
pop
rcr
or
push
or
inc
push
or
mov
or
sbb
movups
push
jo
mov
xchg
adc
adc
push
sbbl
js
cmp
ret
pusha
xchg
mov
sub
callw
enter
xor
adc
xor
adc
xchg
ret
pusha
mov
push
xor
mov
jp
push
dec
adc
xchg
sub
inc
adc
mov
and
pop
movsb
xor
adc
dec
ss
dec
sub
push
test
insb
mov
dec
adc
and
dec
adc
sbb
add
data16
mov
cld
adc
sbb
sbb
dec
sbb
push
or
adc
add
lods
push
adc
adc
push
add
fwait
bound
bound
pcmpeqb
loopne
or
sbb
repnz
or
mov
push
insb
sbb
or
adc
add
sub
add
sub
add
mov
sbb
fistps
and
adc
xchg
pop
outsb
out
pop
mov
add
add
mov
stos
add
mov
mov
out
mov
push
pop
popl
push
pop
test
adc
ja
cli
outsl
dec
pop
lods
add
aas
dec
pop
scas
jle
scas
nop
pop
lret
mov
decl
nop
add
int3
add
int
pop
lret
addb
add
shrb
xchg
add
xchg
cmp
xchg
add
imul
cld
pop
xchg
add
pop
xchg
insb
pop
xchg
pop
pop
cwtl
cmc
mov
xor
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
in
cli
add
sub
mov
rolb
movsb
add
add
pop
movsl
xchg
pop
cmpsb
sar
incl
cmpsl
add
pop
test
es
test
add
pop
mov
sbb
mov
sbb
mov
sbb
rolb
pop
mov
sbb
mov
pop
mov
adc
pop
mov
cli
pop
mov
add
pop
mov
add
incl
rolb
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
movb
pop
movl
ret
pop
enter
add
mov
pop
or
pop
or
and
and
lcall
add
push
or
and
cmpsb
and
and
popf
and
sahf
and
call
mov
and
lods
and
and
pusha
and
and
sub
aas
or
pushl
and
shlb
aaa
or
or
xor
aam
xor
shlb
xor
jmp
sub
sbb
and
or
and
or
and
or
and
or
and
in
adcb
xchg
add
nop
and
and
push
and
mov
and
or
and
sbb
or
sbb
or
sti
in
or
sbb
push
or
and
or
and
adc
and
adc
mov
adc
mov
and
xchg
and
or
mov
and
imul
xor
or
or
mov
pop
or
and
pop
or
pop
or
jg
and
and
or
push
or
push
or
and
and
or
and
ljmp
or
or
or
dec
or
dec
or
dec
or
dec
add
outsl
decl
pop
and
pop
and
and
and
sub
inc
or
inc
or
and
pop
and
or
or
cmp
pop
and
or
xor
scas
xor
shll
or
and
das
or
and
or
and
mov
ljmp
sbb
and
or
and
or
and
push
daa
and
lods
and
and
retw
das
clc
mov
and
iret
sbb
scas
and
or
or
and
sbb
and
or
jg
mov
push
or
sahf
adc
arpl
adc
adc
gs
sbb
les
push
push
and
daa
or
mov
or
daa
in
outsl
es
inc
sbb
pop
popa
ljmp
es
ss
and
or
and
mov
cmp
nop
clc
pop
mov
push
or
or
cmp
or
or
mov
nop
and
or
xor
or
mov
movsb
and
or
sub
or
sub
out
rolb
push
or
mov
clc
call
and
or
add
sbb
or
add
sbb
add
call
add
push
or
add
adc
fildl
adc
add
filds
push
or
add
or
jecxz
or
insb
or
add
sub
add
or
push
jmp
mov
or
add
pop
or
pop
or
je
out
push
pop
jo
push
or
mov
mov
push
push
sub
push
or
push
push
or
push
call
femms
dec
or
adc
dec
or
adc
dec
or
adc
push
decl
pop
push
inc
or
sbb
inc
or
sbb
inc
or
sbb
push
push
sar
incl
pop
push
aas
or
and
cmp
or
pop
icebp
jg
cmp
es
cmp
push
ss
sub
xor
decl
sub
xor
cs
xor
xor
cs
xor
sub
cld
decl
xor
sub
ss
sub
cmp
cmp
ljmp
push
and
push
pop
or
inc
push
sbb
incl
sbb
inc
push
sbb
inc
push
sbb
inc
push
pop
or
dec
push
adc
decl
adc
dec
push
adc
dec
push
prefetchwt1
or
aaa
in
clc
or
or
lods
or
mov
aam
pop
push
push
or
xor
sub
mov
xor
pop
push
pop
jp
mov
aaa
xor
xor
xor
xor
mov
fstpt
xor
xor
xor
fcmovnbe
mov
xor
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
inc
xor
pop
mov
rorl
dec
xor
xor
xor
dec
xor
xor
xorb
push
xor
push
xor
push
push
lods
pop
xor
push
repnz
xor
push
xor
xchg
pop
xor
pop
xor
fdivs
pop
xor
xor
ss
sub
pusha
push
xchg
pop
xor
or
ret
shlb
loop
pop
mov
test
repnz
adc
push
and
scas
adc
mov
lds
jb
adc
push
lods
xchg
mov
mov
adc
mov
lds
loop
adc
mov
fadds
mov
and
mov
mov
je
fdivs
ret
insl
xor
push
adc
js
push
jg
rolb
xlat
push
test
xchg
add
roll
and
adc
lock
adc
cs
out
pop
add
lods
mov
push
add
push
add
js
pop
fwait
int
cld
and
mov
mov
mov
insb
and
and
and
and
xchg
and
mov
testl
cmp
repz
repz
out
cmp
in
in
add
add
fldt
sahf
out
lods
fsubrs
sahf
out
test
sahf
negl
push
rcrl
out
pushf
rclb
out
in
js
dec
fbstp
cs
insl
push
mov
cmp
lea
push
imul
fldenv
lock
repz
arpl
gs
cmp
repz
fisubs
popa
out
sahf
out
shlb
push
xchg
sahf
out
sahf
push
xchg
push
xchg
push
xchg
xor
out
push
xchg
push
nop
add
jns
repz
dec
push
sahf
dec
popf
sahf
out
sahf
dec
pushf
dec
fwait
dec
lcall
dec
cwtl
inc
js,pn
out
inc
xchg
inc
out
inc
repz
dec
dec
aas
ds
cmp
cmp
cmp
repz
xchg
xchg
repz
repz
test
iret
xor
xor
repz
jg
jle
repz
repz
jl
jnp
repz
sub
sub
js
iret
repz
pop
sbb
iret
repz
sbb
pop
out
jns
out
pop
adc
adc
mov
cwtl
push
mov
aas
mul
pop
jae
push
jnp
or
push
jae
and
insl
jle
cmp
mov
and
push
cmp
sbb
xor
or
add
push
lahf
pop
jle
fs
imul
cmp
jmp
xor
sahf
pop
add
or
std
nop
inc
std
daa
mov
in
inc
stos
je
incl
adc
scas
aaa
imul
mov
cmp
bound
cmpsl
ficoms
push
xchg
js
mov
ret
and
sub
mov
or
cmp
push
and
and
sub
orb
mov
aas
popw
sbb
mov
test
or
fwait
repz
movsb
mov
push
out
jns
sub
adc
cmpsb
add
leave
sub
push
dec
add
into
cltd
cmpb
movl
sahf
sbb
subb
mov
mov
or
pop
outsl
dec
data16
outsb
dec
xorb
mov
ss
and
xchg
mov
mov
push
mov
mov
mov
sbb
mov
xchg
xchg
dec
mov
cmp
mov
bound
mov
xor
fnstenv
sbb
aaa
and
jbe
imulb
sub
in
mov
test
lret
sahf
aas
sti
rorl
adc
mov
push
gs
inc
jge
push
xchg
movsl
jg
xor
mov
call
sub
mov
jl
sbb
mov
insb
xor
xor
imul
xor
lods
push
push
push
fisubrs
imul
pop
fistpll
imul
sbb
xor
xor
xor
xor
xor
xor
xor
imull
scas
dec
gs
mov
or
outsl
and
push
int3
pop
or
int3
xor
xor
xor
xor
xor
xor
pushl
xor
jne
rolb
in
pop
insb
jno
fs
div
ret
outsl
out
pop
jb
movsl
inc
mov
pushl
imul
xor
cmp
jo
ljmp
pushl
out
dec
pop
pop
adc
lret
ss
mov
ss
ss
ss
inc
sarb
lcall
daa
jl
in
sahf
sub
lods
xor
clc
sub
lcall
inc
push
jmp
xor
xor
ja
pop
cmc
push
mov
xor
push
arpl
out
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
shrb
test
inc
or
lcall
mov
aas
sarl
lcall
aas
in
cld
pushl
rorb
push
add
lods
out
jp
cmpsl
cmp
das
xor
or
pop
sub
icebp
xor
xor
xor
pushl
pop
xor
mov
cwtd
clc
jae
xor
xchg
xlat
xor
mov
jmp
out
dec
scas
inc
scas
pushl
and
lahf
xor
jl
jge
xchg
call
outsb
int3
std
push
cmpsl
or
or
dec
ret
loop
add
outsl
clc
call
ss
pop
shll
mov
mov
mov
mov
mov
decb
stc
lahf
inc
adc
ret
mov
fwait
push
sub
mov
inc
aaa
shlb
cmp
ljmp
xchg
cmp
inc
xorb
cmc
insb
push
sbb
clc
filds
adc
sbb
jg
incl
cmp
cmp
cmp
cmp
xor
mov
stos
lds
ret
stc
and
icebp
cli
add
add
sti
push
cmp
cmp
cmp
fidivrl
mov
push
cmp
jge
cs
loop
inc
jb
mov
cltd
add
ljmp
loope
test
jb
xchg
ds
ds
ds
or
sub
decl
lret
push
mov
add
js
nop
data16
call
xor
xor
xor
xor
xor
jg
xor
aas
inc
cmp
push
sub
cmpsb
outsb
ja
or
into
push
jge
out
cli
add
cmp
enter
icebp
cmp
cmp
cmp
mov
cmp
es
mov
std
pushw
sbb
arpl
cmp
cmp
cmp
cmp
cmp
cmp
out
pop
jle
repz
lahf
les
pop
fs
fldcw
sahf
out
daa
inc
lcall
aas
fdivrs
sub
sahf
add
xor
pushl
push
or
sub
sbb
js
sbb
bound
and
pop
je
lahf
xor
mov
xor
xor
xor
scas
or
push
mov
xchg
loope,pn
decl
or
repz
adc
jmp
push
pop
out
sbb
jecxz
push
pop
loopne
decb
cmp
sub
sub
ss
jg
xor
ret
cmp
cmp
idivb
aaa
pop
mov
aas
cmp
addb
mov
outsl
call
xchg
xchg
addr16
lcall
mov
cmpsb
cmpsl
push
test
scas
scas
dec
pushl
mov
inc
mov
mov
ret
cmp
mov
leave
lret
int
iret
das
call
rcl
sub
xlat
daa
fstp
fistps
loope
jecxz
in
out
jmp
out
out
invd
or
push
repnz
div
pop
stc
cli
sti
add
pushl
add
lock
add
inc
or
lahf
inc
inc
inc
mov
mov
dec
dec
mov
dec
dec
add
push
popa
sbb
cld
push
push
add
adc
xchg
xchg
add
xchg
sbb
sbb
xchg
and
and
xchg
xchg
add
xchg
sub
sub
test
xor
fidivl
loop
sbb
incl
andl
adc
std
fistpl
mov
pop
mov
sbb
orb
jg
lcall
add
xor
add
addb
lea
sbbl
movq
add
push
rclb
rorl
cmpb
push
jb
sbb
ret
add
or
in
jmp
mov
adcb
add
bswap
sbb
daa
rcr
sbb
dec
jecxz
les
add
dec
rolb
add
popa
add
in
mov
gs
fwait
insb
insb
sub
gs
je
lcall
inc
fwait
fs
imul
add
or
mov
inc
lcall
or
jns
adc
add
orl
lret
push
xlat
inc
xchg
cld
mov
aas
clc
incl
cmpsl
rolb
rclb
outsb
push
pushf
je
mov
push
push
shlb
cs
xor
aaa
mov
cmp
push
push
roll
add
dec
jae
dec
loope
xchg
jb
lret
add
add
or
or
fnstsw
rolb
fisubl
or
mov
inc
lds
mov
pop
sahf
inc
loop
mov
ret
sub
or
jg
outsl
clc
add
push
ficompl
rorl
rolb
fs
add
or
fmull
mov
xacquire
lret
inc
inc
xor
mov
sub
add
add
aad
add
ficoml
test
inc
xchg
dec
pop
loop
sub
dec
into
arpl
pop
push
outsl
loopne
je
push
add
adc
pop
mov
rorb
dec
nop
stos
add
add
add
outsb
add
cwtl
sbb
pop
mov
ljmp
cltd
add
pusha
push
gs
mov
mov
pusha
and
scas
xchg
std
nop
add
or
xchg
pusha
xor
jg
jb
sbb
je
jo
das
das
ja
jg
mov
je
cs
sbb
das
loope
call
sbb
lcall
gs
push
mov
pusha
or
mov
adc
mov
setae
popa
or
or
push
mov
push
add
and
in
jmp
lods
inc
inc
loopne
iret
xor
cs
xor
jl
add
arpl
popa
das
loop
outsb
inc
add
mov
lret
fbstp
push
jg
mov
push
dec
xchg
xorl
loopne
jle
mov
mov
mov
jg
fwait
andl
out
sbb
pop
jecxz
scas
mov
jae
je
inc
push
pop
test
pop
addl
cmpsl
loopne
shrl
xor
adc
push
add
cs
pushl
cmp
notl
std
jmp
sti
xor
jmp
add
sub
cmp
in
call
lods
lods
inc
hlt
popa
adc
and
enter
mov
sub
cli
cmp
and
xor
mov
cmp
add
incl
cmp
sub
sbb
sub
add
jmp
cmpsb
push
pop
sbb
pop
shlb
in
std
push
out
and
jmp
push
lea
out
shrb
stos
in
fistpl
xor
inc
mov
movsl
add
popa
or
testb
stos
lods
cmc
add
mov
out
mov
in
ja
pop
hlt
jo
mov
mov
dec
stos
mov
sub
cmp
ds
sub
pop
add
mov
fdivrs
das
cli
sub
outsl
test
sahf
jo
cmpsl
mov
decl
div
sbb
in
lds
pusha
push
addb
mov
insb
test
inc
fmuls
cmpsl
dec
and
push
pop
push
mov
loopne
jnp
outsl
jae
jo
arpl
mov
sub
frstor
adc
rcr
clc
or
jbe
in
sti
movsb
push
in
mov
or
repnz
add
mov
inc
sbb
push
je
add
gs
xchg
ja
jecxz
sub
ret
fwait
insl
cwtl
jo
popa
xorb
mov
jl
arpl
loope
into
and
js
sub
add
mov
das
jo
outsb
cwtl
mov
popl
mov
mov
jl
stos
mov
andl
mov
andb
push
cltd
xchg
mov
xor
pop
out
dec
and
mov
popl
ljmp
testb
clc
add
push
out
xor
push
pop
outsl
in
sbb
inc
add
scas
clc
mov
stc
add
shrb
mov
jbe
and
jne
xchg
xorl
clc
mov
adc
jg
inc
mov
dec
sbb
call
loopne
pop
inc
add
mov
mov
pop
cmpsl
inc
pop
mov
adc
scas
cli
adc
mov
xor
sub
scas
adc
mov
outsb
clc
sbb
push
test
scas
inc
movsl
or
push
push
ret
push
std
mov
or
sbb
sbb
pop
out
cs
hlt
in
stos
out
adc
loope
sbb
push
inc
or
mov
inc
mov
inc
push
cld
fistpll
movsl
add
push
out
add
inc
fdivl
jg
mov
xor
mov
leave
add
cmp
or
pop
rcr
or
add
clc
dec
push
mov
dec
add
adc
pop
sbb
pushl
sbb
mov
push
icebp
add
push
shrb
insb
cld
pop
call
push
in
or
inc
std
jmp
mull
loopne
div
mov
call
popf
and
xlat
int3
filds
ffreep
add
movsb
mov
mov
dec
in
or
scas
stos
cli
push
dec
mov
mov
pop
mov
incl
icebp
out
cmc
cld
lock
in
icebp
add
dec
es
fstpt
cmpsl
pop
dec
pop
mov
dec
mov
inc
dec
mov
orb
arpl
mov
or
cs
add
fistpl
loop
rolb
or
jbe
fwait
sbbb
mov
test
adcl
xchg
xchg
mov
incl
mov
xchg
cmpsb
add
pop
mov
je
aas
hlt
dec
dec
mov
cmpsb
jae
mov
push
add
mov
pop
add
cmpsl
pushl
aas
rol
adc
add
ss
loopne
and
aam
scas
mov
xchg
aaa
fs
mov
mov
mov
dec
pop
fwait
cmp
push
push
mov
xchg
push
push
inc
mov
shr
jg
xchg
sub
lock
sbb
add
loopne
in
adc
push
pop
decl
fcomip
filds
popa
mov
jae
xchg
or
add
incl
mov
test
lods
xor
jbe
mov
lahf
jno
inc
das
and
fwait
mov
test
xor
xchg
mov
adc
je
jle
sbb
add
push
sbb
scas
push
andb
mov
mov
das
out
fwait
hlt
jmp
ret
rol
aad
add
and
jecxz
xor
roll
xor
and
inc
xchg
imul
add
out
lds
sar
hlt
or
sbb
jecxz
sub
stos
decl
xchg
or
mov
jae
mov
mov
fbld
jecxz
loope
or
out
cmc
add
and
mov
jmp
and
add
adc
lret
xor
das
js
adc
into
mov
data16
xchg
ja
pop
dec
xor
add
inc
or
sbb
sub
hlt
in
push
or
adc
sub
icebp
or
jae
sahf
mov
mov
imul
mov
and
clc
xor
and
out
sbb
pushl
jmp
cltd
mov
jno
mov
pop
movsb
mov
inc
nop
lods
mov
mov
imul
testb
xchg
cltd
mov
std
sbb
imul
lock
btr
imul
pop
out
push
es
out
dec
mov
mov
fbld
je
addr16
adcl
data16
xor
push
std
pushl
jne
push
push
add
addr16
pop
cmpsl
push
test
mov
inc
pop
std
call
andb
and
jno
leave
adc
jge
cwtl
mov
insl
jb
or
pusha
pop
mov
dec
pop
inc
push
std
scas
pushl
test
aas
jo
pop
inc
push
arpl
mov
lock
call
mov
insb
and
dec
mov
add
rolb
fldenv
lret
and
fcomip
cmc
or
repnz
fs
add
in
jmp
or
pop
aam
insb
mov
imul
data16
xorb
cli
jg
add
sub
dec
mov
dec
dec
add
cmpsb
sbb
sbb
add
mov
add
scas
sbb
in
pop
icebp
ljmp
adc
das
cmp
push
shrb
ss
pop
jo
jle
mov
push
or
fidivs
add
std
adc
add
sbb
icebp
add
add
push
je
call
mov
jns
lahf
and
jno
jg
add
clc
jg
xchg
push
mov
cld
dec
xor
ljmp
cbtw
inc
mov
mov
in
jnp
lcall
ja
lea
mov
pop
dec
xchg
call
lcall
xor
xor
xor
fcmovbe
mov
jg
cmpsb
pop
inc
inc
mov
ja
lahf
add
xchg
stos
mov
lods
aaa
std
jmp
stos
mov
scas
dec
mov
add
mov
mov
mov
pushf
add
jg
mov
inc
test
add
pusha
inc
ds
jmp
shr
in
xor
bsr
clc
or
xchg
movsl
mov
inc
mov
and
mov
mov
cld
push
sub
test
repz
pop
or
dec
xchg
repnz
mov
lock
repz
cld
call
xor
call
add
jo
fldl
and
xor
stc
jg
mov
sahf
adc
push
push
in
cld
out
adc
in
cli
cwtl
call
add
ret
fadd
aam
xor
fmuls
fcmovu
xor
sti
mov
xchg
xchg
je
insl
mov
arpl
mov
in
jg
iret
rol
roll
mov
subb
pushf
cld
push
mov
stc
loope
mov
decl
fistl
test
jnp
ja
jle
rolb
or
data16
sub
decl
mov
jns
jp
add
xor
sbb
test
jnp
lods
mov
cli
pop
in
clc
add
out
adc
mov
popf
popa
outsl
ljmp
mov
adc
sub
les
sub
adc
or
or
add
fildl
sub
pop
cmp
sbbb
loop
add
sarl
cwtl
cltd
sbbl
test
pop
stos
movsb
dec
inc
push
jmp
repnz
mov
incb
pusha
xchg
cltd
test
out
pop
pop
and
ret
loopne
mov
incb
jecxz
ror
les
call
mov
cmpsb
pop
add
inc
xor
mov
mov
mov
je
mov
sub
pop
dec
mov
add
jb
mov
test
dec
fwait
push
and
adc
mov
pop
add
mov
mov
adcb
adc
ltr
ja,pt
add
dec
lret
jns
jl
jae
add
and
aaa
jle
in
cmp
mov
inc
outsl
push
adc
fs
cli
out
call
into
push
add
dec
mov
shr
add
add
decl
mov
or
push
ljmp
jmp
mov
aam
loope
mov
lods
inc
mov
add
sub
inc
ret
or
lcall
or
std
pop
cmp
loop
sub
rol
in
dec
sub
iret
iret
add
or
fwait
dec
dec
out
movl
ss
in
pop
mulb
sbb
adc
add
adc
cli
sub
sub
aad
lock
in
loop
pop
cmc
mov
repnz
jmp
mov
scas
cmpsb
mov
adc
jecxz
out
fwait
les
or
mov
mov
or
rolb
shll
rcr
outsb
mov
scas
push
aaa
adc
cmpsb
pop
enter
sbb
ljmp
insb
and
call
dec
mov
push
xor
enter
fdivp
clc
add
lret
aam
mul
hlt
add
ljmp
cmp
dec
dec
inc
cmpsl
inc
pop
jno
or
inc
add
decl
arpl
xor
ret
cmp
jo,pn
jecxz
fwait
push
cltd
push
mov
sarb
sub
sbb
dec
dec
inc
push
push
push
add
incl
incl
js
jmp
xor
clc
imul
add
pushf
in
shll
dec
and
and
das
movsb
das
jmp
out
into
or
clc
enter
fldl
loope
mov
jle
call
sbb
rol
data16
cmp
jbe
ss
push
dec
cmp
sbb
das
xor
aaa
sbb
push
shrb
and
ret
add
es
int
lock
pushl
xor
aas
fnstsw
and
mov
ja
aaa
lds
ds
shll
das
or
cmp
aaa
dec
lea
dec
mov
sahf
pop
lcall
mov
pushf
pop
push
push
mov
xchg
pop
adc
sti
dec
mov
sub
clc
cmp
aaa
les
and
aaa
orl
cmp
mov
mov
aad
xor
cmpsl
pop
mov
mov
das
cli
pop
cltd
scas
adc
stos
mov
mov
lahf
inc
mov
jg
mov
outsb
add
pop
addb
xchg
jnp
nop
add
leave
fildl
in
cs
jmp
add
pushl
cmc
daa
and
cmp
mov
add
decl
sahf
dec
pop
and
mov
insl
jb
xchg
movsl
add
aas
add
inc
pop
movsb
pop
inc
jne
jl
inc
inc
dec
std
mov
fwait
inc
inc
push
mov
push
push
sbbl
arpl
add
ficoml
ror
shrb
mov
ss
push
inc
inc
das
push
std
movsb
pop
push
push
scas
pop
xchg
push
dec
push
incl
pushl
call
xor
add
xor
loope
inc
mov
mov
push
push
clc
or
lea
jb
sbbb
xchg
popl
jo
fistps
add
stos
incl
lret
cs
cltd
lret
aad
movsb
jmp
xor
jnp
data16
inc
lcall
jg
test
add
orb
inc
add
xchg
mov
push
cld
mov
xchg
pushf
xchg
jle
test
sahf
mov
pop
cmc
inc
mov
lea
sbb
lods
mov
std
ljmp
mov
mov
mov
mov
rcll
inc
dec
dec
pop
push
inc
in
call
aam
mov
popf
mov
enter
sbbb
imul
jmp
nop
pushf
sahf
push
xor
cmp
jae
lock
pop
xchg
push
pop
push
mov
dec
pop
xchg
jge
cmp
pop
inc
pop
mov
or
mov
mov
inc
add
lahf
pop
push
dec
mov
mov
mov
js
jl
push
jle
adcb
add
in
mov
and
outsb
call
xor
rorb
int
das
int3
rcl
dec
into
daa
pusha
hlt
sub
daa
rol
int3
or
decl
insb
push
std
jmp
jmp
add
dec
pushf
dec
dec
pop
cs
mov
test
mov
pop
add
cmpsl
dec
pop
pop
stos
push
or
mov
std
mov
jg
iret
cmp
cmp
out
pop
mov
mov
push
jnp
push
insb
decl
arpl
or
sbb
or
unpcklps
adc
push
pop
push
cmpsb
adc
shrb
cwtd
rclb
xchg
nop
xchg
inc
xorl
incl
pusha
sahf
cltd
lcall
xchg
xchg
sahf
jns
scas
add
adc
out
add
pop
lcall
repnz
movsl
jo
mov
scas
push
mov
mov
cld
inc
inc
xor
ret
rcrl
std
add
and
into
les
add
and
es
popa
cld
call
xor
or
scas
add
call
cli
incl
mov
sbb
sti
out
mov
add
adc
jg
mov
cmp
add
mov
dec
or
incl
jg
testb
add
and
and
xor
cmp
mov
je
and
fdivrs
cmp
cld
xor
fwait
pop
jmp
ret
sub
dec
inc
inc
icebp
add
add
inc
pop
dec
jg
decl
push
cmp
cmp
popa
and
sahf
data16
xchg
nop
jnp
sti
push
cld
sub
test
jg
xchg
xchg
jbe
push
ljmp
mov
out
jmp
dec
cltd
loop
cld
sub
fst
test
subl
mov
pushl
add
stos
push
mov
cmpsb
mov
mov
cmc
mov
mov
pushf
push
stos
lods
fstl
add
push
std
in
sbb
inc
jle
je
mov
push
dec
pop
dec
fildl
xchg
fwait
insb
adc
sub
test
das
xchg
push
call
pusha
sbb
test
and
inc
mov
loope
mov
mov
cltd
pusha
dec
sbb
popa
add
mov
call
cmc
div
je
roll
mov
outsb
arpl
mov
add
inc
mov
sbb
or
mov
mov
rorb
cwtl
test
dec
decl
aad
mov
mov
xchg
arpl
push
cwtl
ja
jae
or
xchg
jg
lea
dec
mov
sbb
or
mov
inc
add
mov
add
push
stc
sbb
sbb
inc
loope
inc
test
int3
popa
add
aad
cmpsb
movsb
mov
scas
mov
loopne
jge
pushl
mov
imul
cmp
add
aas
es
and
cmp
loope
cli
sub
jl
in
pushl
fsubrs
sub
sub
xor
jnp
jg
jb
push
testb
push
inc
dec
mov
mov
call
or
les
jne
test
dec
adc
add
aaa
filds
mov
cmp
add
xor
cmp
jnp
add
jg
lock
loope
xor
test
pop
and
pusha
add
lcall
add
decl
int3
iret
add
and
inc
xor
movl
mov
xor
jnp
leave
cmp
aas
lret
gs
sub
fsubrs
das
xor
inc
inc
push
push
dec
repnz
das
sar
or
cli
bnd
adc
call
out
loop
jmp
jmp
icebp
mov
lods
sbb
mov
mov
rcrl
imul
ja
lret
dec
jg
pop
xor
push
outsl
arpl
cmp
mov
push
sbb
push
cld
call
mov
adc
adc
sbb
addl
pop
cmc
incl
jns
mov
imul
inc
xchg
mov
mov
pusha
push
test
packsswb
adc
jae
sarl
add
xchg
int
mov
fisttpl
into
mov
mov
in
sub
sbb
out
cli
cmp
aam
or
or
fcomip
sub
sbb
ljmp
mov
frstor
cmp
mov
or
fcom
iret
xor
mov
lods
cli
pop
mov
push
add
out
sbb
fwait
idiv
pop
sub
in
inc
or
nop
sbb
sbb
int3
pop
sbb
cs
add
ss
subb
lods
fimull
loope
in
fisttpl
ffreep
inc
xor
or
stos
call
xor
xchg
cmpb
fistl
cs
push
ljmp
mov
test
lock
mov
ljmp
pop
lcall
push
scas
pop
outsl
pop
sbb
sbb
mov
aaa
je
adc
sbb
pop
loop
clts
out
inc
xlat
add
test
sahf
mov
pusha
pusha
scas
pop
dec
inc
hlt
push
dec
scas
stos
cli
fcomip
mov
add
nop
mov
or
fisubrl
popa
mov
pusha
js
enter
add
imul
lock
mov
pop
call
pop
fsubs
or
pop
pop
mov
mov
std
sbb
call
sbb
pop
loopne
dec
pop
inc
cmp
and
popa
xchg
jle
jno
add
cwtl
gs
outsl
xchg
jo
inc
jg
jmp
in
sti
cli
push
mov
mov
dec
mov
mov
out
jg
ja
enter
mov
test
lcall
mov
jbe
lret
fwait
ljmp
jnp
sbb
or
mov
dec
add
or
dec
push
scas
push
push
ss
push
push
pop
cmpsb
pop
out
bound
adc
ljmp
push
insb
insl
outsb
nop
jo
add
je
jbe
js
add
mov
and
das
xor
lock
add
js
rorb
add
add
and
inc
inc
add
or
pop
inc
pop
loopne
or
or
lock
push
pop
pop
pop
mov
arpl
stc
xchg
imul
lcall
adc
nop
dec
aam
push
inc
inc
and
test
int
or
push
add
and
and
cmp
hlt
mov
inc
enter
outsl
cli
es
add
fadds
into
xchg
adc
mov
in
outsl
fdiv
add
inc
mov
add
push
icebp
pushl
jae
pop
fdivl
aaa
test
mov
insl
and
mov
mov
mov
nop
adc
push
pop
and
inc
insb
mov
gs
push
jo
subb
mov
es
popa
fs
bound
jb
jb
inc
mov
mov
inc
jb
popa
je
stos
push
mov
hlt
mov
pop
or
lcall
adc
nop
loopne
aaa
inc
push
jne
mov
dec
xchg
outsw
jb
push
xor
inc
sbb
push
jb
arpl
lods
je
push
or
fildll
jp
fwait
push
je
lea
add
clc
mov
dec
nop
rolb
xor
out
lcall
xor
outsb
fwait
insb
cli
adc
fs
mov
add
pushl
decb
ret
js
push
in
and
mov
jg
push
push
mov
inc
inc
push
inc
push
adc
insl
clc
icebp
or
mov
and
push
inc
dec
cli
pushl
push
inc
mov
mov
or
push
xor
dec
inc
inc
stos
adc
dec
stos
clc
outsb
xchg
lods
inc
push
lods
or
dec
dec
dec
mov
push
jg
out
xchg
scas
inc
push
or
mov
adc
xor
dec
push
inc
mov
inc
dec
pop
icebp
jg
mov
lock
inc
dec
icebp
add
stos
push
nop
cmpb
mov
push
dec
mov
add
dec
mov
aaa
flds
inc
xor
cmp
outsl
outsb
outsb
lcall
add
sbb
sub
arpl
imul
je
outsb
je
and
lock
xchg
push
mov
shlb
outsb
arpl
jg
adc
cmp
addr16
cmp
outsb
jg
ret
xchg
gs
add
jo
popa
insb
imul
decl
mov
bound
xor
lock
sbb
add
sub
add
mov
mov
jp
gs
mov
add
inc
add
call
sub
push
pushf
jno
or
and
mov
test
sbb
bound
push
jae
cs
mov
into
inc
addr16
push
inc
xchg
jae
dec
xor
add
add
xor
dec
fcoml
push
mov
jno
xchg
imul
push
pusha
xor
rclb
dec
fwait
imul
outsb
std
or
dec
mov
xchg
xor
cmc
adc
orb
mov
jbe
jmp
imul
enter
imul
cwtl
add
pusha
xor
xchg
dec
push
sub
mov
test
jo
mov
hlt
in
jne
mov
outsb
repnz
or
insl
popa
jo
out
add
inc
dec
push
mov
push
add
xchg
pop
jge
jae
loopne
pop
xor
icebp
add
xor
repnz
ret
outsl
fwait
out
jo
lods
imul
add
mov
jle
lcall
or
sbb
pop
sbb
mov
pop
mov
add
pop
loopne
jg
dec
jp
mov
pushf
imul
pop
mov
inc
xchg
sub
add
xor
xor
push
mov
push
lea
std
push
ljmp
add
aas
mov
xor
inc
mov
sub
aas
or
pop
addr16
jle
dec
into
adc
adc
jle
in
cli
das
xchg
dec
fcomps
and
inc
std
jnp
push
mov
xchg
rorl
and
test
jns
inc
jge
mov
jg
sbbl
add
xchg
push
xchg
or
xchg
jg
hlt
call
adc
push
repz
cld
xchg
jo
xchg
mov
lea
dec
lcall
jb
xchg
sub
shlb
mov
call
jno
xor
frstor
and
and
add
pop
cmp
es
jb
xor
inc
outsb
mov
adcb
or
xchg
ds
jns
xchg
jbe
add
insb
sbb
je
cld
add
icebp
imul
fs
insb
and
and
pop
add
fbld
imul
and
fbstp
mov
outsl
adc
or
and
add
mov
insl
imul
das
mov
and
shlb
pop
lock
call
fidivl
frstor
outsl
pop
insl
sub
mov
pushf
push
sbb
xchg
inc
mov
push
or
add
dec
pop
jge
add
mov
call
inc
adc
call
mov
inc
test
cmpb
ljmp
pmaxub
hlt
in
inc
nop
ja
stos
xor
sti
stc
inc
add
sub
add
jmp
pop
cmp
call
xor
cmp
mov
add
movsb
push
mulb
jne
xor
pop
ret
push
nop
in
jle
test
mov
sbb
add
add
pop
stc
dec
fimull
jne
fildll
jmp
sub
incl
add
and
call
dec
pop
sti
and
outsl
sub
jp
push
scas
iret
std
ds
leave
call
mov
roll
add
sbb
pop
adc
jo
fistps
in
addb
pop
fmull
shlb
and
mov
in
add
flds
lretw
mov
pop
push
clc
dec
enter
mov
cmp
mov
inc
inc
add
adc
ficoms
cld
lea
std
repnz
jo
test
or
jg
call
mov
sbb
mov
sbb
sub
pop
pushl
call
inc
xchg
sti
pusha
cmpb
push
test
cmp
ljmp
pop
mov
pop
ds
add
pushf
add
int
pcmpeqw
call
je
pusha
mov
pop
push
mov
xor
add
inc
insb
jbe
ret
cmp
or
add
jo
shrb
sbb
and
and
cmp
push
mov
ret
shl
fstpt
xor
mov
mov
faddl
push
lock
or
and
cwtl
scas
push
mov
add
outsb
aaa
data16
inc
dec
or
jne
das
lea
add
xor
stos
add
or
mov
js
push
inc
jg
divb
xor
inc
ds
ret
dec
add
push
fdivrs
imull
push
lea
push
sbbb
ljmp
and
mov
mov
or
sub
repz
xchg
add
fsubr
cld
or
jl
je
test
mov
cmpl
je
and
add
out
jecxz
lcall
mov
jmp
mov
ret
inc
cmpb
inc
adc
cmp
leave
cmp
or
je
cmp
jbe
addl
mov
decl
call
jne
adc
fistpl
inc
add
push
pop
fbld
rcrb
fbld
and
push
enter
ret
adc
sbbl
lea
push
cmp
or
das
mov
cmp
ret
test
mov
xor
jg
sub
pop
pop
ret
clc
add
mov
andl
shll
subb
rcrb
jl
les
push
inc
or
leave
push
add
push
les
btc
ljmp
nop
pop
adc
xor
out
jb
cld
aaa
push
decl
add
push
rorb
addb
mov
jb
ret
xchg
orb
outsl
in
rolb
mov
mov
pushl
mov
inc
inc
add
ss
adc
adcl
loopne
adc
pusha
outsl
adc
xor
clc
mov
push
mov
mov
push
shll
sarb
outsl
clc
fisttpl
mov
ret
mov
aas
cmpl
add
mov
call
and
call
shll
pop
sarb
aaa
add
dec
mov
mov
jbe
add
cmp
aad
pop
dec
adc
mov
ds
add
rcr
pop
pop
leave
add
pop
roll
push
push
in
pop
je
data16
rol
scas
mov
or
mull
frstpm(287
fildl
ss
ret
sub
push
fcoml
push
mov
outsb
clc
cmp
add
xchg
add
sbbb
dec
dec
je
inc
cmpsb
adcb
pop
push
lds
add
push
je
aam
push
loopne
clc
pusha
mov
loopne
cld
loopne
test
mov
pusha
outsl
sbbb
jg
insl
lock
sub
push
jne
and
and
inc
jl
movsb
jmp
inc
repz
cmp
or
cmp
add
je
jmp
pusha
cli
mov
ret
pusha
inc
sub
lods
add
pop
xor
decl
dec
sub
loopne
pop
pusha
jge
cmp
jmp
popa
inc
loope
clc
or
sar
push
pop
loopne
in
sbb
inc
pop
push
push
outsl
pop
mov
sbb
daa
loop
clc
fs
insl
ljmp
faddl
adc
pop
push
test
pusha
adc
jb
push
xchg
mov
andb
test
pusha
add
jp
das
pusha
add
xlat
call
and
adc
loope
loopne
push
add
add
or
pop
out
sbb
divb
pusha
je
push
ds
push
pusha
clc
pop
or
cli
inc
pusha
daa
dec
lock
jl
jae
ret
jl
test
adc
jbe
clc
fistpl
mov
inc
or
ljmp
or
mov
add
dec
dec
mov
or
ss
lcall
or
push
adc
jg
inc
jmp
add
repz
push
push
cmp
jg
je
add
aas
xor
mov
testb
and
mov
add
push
xchg
add
add
or
sub
or
cwtl
jg
add
sub
cmp
push
loopne
and
call
loopne
push
and
push
push
popa
push
ljmp
addl
xchg
inc
call
pop
push
push
jmp
inc
movsb
pusha
pusha
add
mov
add
push
add
loopne
loopne
pop
xchg
and
sbb
mov
idivl
in
aam
cmp
add
push
push
mov
pop
mov
shl
cmp
call
sahf
or
jg
add
jo
cld
ds
into
pop
add
test
cli
sbb
movl
ret
add
jae
jmp
pusha
mov
lock
call
xchg
add
ja
movb
push
or
jl
mov
pop
xor
add
verr
jne
pusha
inc
add
nop
call
sub
movsb
test
push
inc
pusha
pop
loope
pusha
dec
mov
or
in
or
lea
mov
mov
in
aam
and
int3
call
out
push
adc
or
jl
je
inc
aas
xor
add
xor
cmp
loope
ret
jge
xchg
push
loopne
sbb
push
pusha
test
jo
mov
fstps
ljmp
push
call
add
mov
loop
je
test
je
add
mov
jle
push
push
scas
test
call
roll
add
or
pusha
mov
icebp
cmp
test
mov
les
or
in
scas
call
adc
mov
add
call
xor
int3
ret
sahf
push
ds
xor
jle
mov
mov
fs
mov
adc
or
aad
in
pop
jle
mov
std
incl
push
popa
add
sarb
popa
add
dec
pusha
add
scas
clc
mov
pusha
das
push
loopne
mov
mov
in
divl
data16
mov
nop
adc
jp
out
cmpsb
mov
or
or
mov
add
call
notb
push
push
mov
mov
sub
mov
cmp
jmp
inc
jge
aas
std
push
hlt
add
inc
sub
and
int
incb
mov
add
das
sub
add
mov
sbb
out
xor
mov
js
jmp
fmull
push
fs
add
clc
scas
aam
inc
and
jl
adc
test
arpl
cs
xchg
push
mov
pop
add
ja
sbb
clc
scas
push
push
lock
fdivs
jne
mov
push
pop
or
push
les
jmp
es
mov
sbb
xor
mov
repnz
jbe
aam
fcomip
pushl
push
call
cmpl
xor
or
xor
cli
pop
cmc
cmp
add
test
adcl
lock
cmp
cmpb
je
lods
xor
out
sar
push
decl
xor
mov
push
aas
lock
adc
icebp
inc
cmp
xor
mov
cmp
addl
ret
and
mov
add
cmp
cmp
sti
ljmp
in
sub
lock
inc
lock
pop
jno
cmp
and
jmp
icebp
add
rolb
adc
xchg
add
pop
ret
push
enter
xchg
cli
cmp
jno
lret
adc
dec
add
test
call
jnp
inc
sbb
push
mov
or
adcb
mov
xorb
mov
lock
lea
out
push
out
dec
push
fs
adc
jb
inc
fwait
pop
loopne
jo
push
push
mov
sub
aaa
xchg
shlb
xchg
add
dec
inc
mov
insb
mov
int3
leave
inc
push
mov
and
push
cld
add
mov
loop
loop
sbbb
clc
shll
enter
daa
push
call
scas
push
adc
fwait
xor
dec
or
and
arpl
push
pop
pushf
dec
or
bound
inc
fdivl
insb
fcmovnu
dec
lea
push
mov
xor
les
jbe
lock
adc
or
cmpsb
mov
push
pop
ljmp
mov
ret
mov
push
dec
in
dec
push
or
mov
mov
ret
mov
push
lahf
mov
xor
mov
cmp
incl
jo
jge
add
mov
call
out
cli
outsl
mov
bndstx
inc
into
xor
pop
lret
dec
stos
or
sub
cmc
shlb
add
in
cmp
aaa
or
das
enter
jb
ss
call
push
push
or
or
fs
mov
push
add
add
push
or
rcrb
mov
mov
xchg
fs
mov
pop
cmp
xor
int3
adc
faddp
dec
ljmp
mov
mov
adc
mov
push
push
lea
decl
lods
mov
call
add
or
dec
and
xor
clc
xor
cmc
lock
cld
sar
loope
incl
mov
jo
jne
adc
adc
and
push
cmp
loopne
mov
mov
jne
add
adc
or
addw
add
xor
push
aaa
add
addr16
push
push
mov
outsl
ss
call
jne
hlt
jbe
mov
sub
xchg
scas
sti
dec
mov
jmp
xor
inc
adc
sbb
jo
idiv
xor
sub
mov
mov
push
mov
xor
adc
mov
add
add
add
cmpl
add
dec
jne
mov
lock
stc
add
sbb
dec
add
ret
add
jne
xchg
adc
xor
rclb
sub
or
sbb
fisubs
add
je
andl
or
inc
orl
cmp
mov
push
mov
nop
addb
ret
xor
pop
pop
jp
data16
andl
and
call
lock
xor
fdivrl
ret
mov
pusha
add
add
mov
pop
push
add
mov
pop
mov
jp
je
xchg
mov
mov
push
lcall
lock
ljmp
mov
add
shr
jb
jg
jle
add
and
pop
jne
mov
aam
je
mov
adc
adc
jecxz
mov
inc
cld
add
push
icebp
scas
add
ss
pop
jmp
xor
ret
aaa
or
lock
add
inc
jmp
je
xor
add
cmp
jbe
mov
jmp
xor
add
loop
cs
xor
jg
call
cmp
lea
loope
push
dec
add
hlt
and
mov
sti
ljmp
test
add
mov
or
sahf
ljmp
adc
push
jne
jae
loope
mov
push
mov
stos
push
push
add
or
xor
pop
popa
pushl
aas
jmp
or
or
testl
cmp
pop
je
or
mov
jb
je
pop
icebp
xor
sbb
scas
cli
aam
cmpsb
push
or
add
xor
js
call
mov
adc
sti
testb
xchg
or
jp
mov
je
or
inc
xor
sub
rorl
push
push
je
and
or
test
scas
aaa
sbb
clc
les
jmp
jnp
cmp
test
sub
or
fldt
shll
or
add
sub
repnz
mov
lcall
sub
inc
jecxz
outsb
inc
je
jno
incl
je
aas
icebp
push
imul
add
xor
push
mov
mov
test
dec
sbb
jbe
loopne
enter
mov
xor
adc
pop
sbb
sub
fildl
mov
pop
pop
xor
lock
xor
ljmp
shlb
movsb
xor
cmp
push
in
icebp
out
clc
loopne
mov
push
xor
adc
jbe
call
jbe
cmc
stos
add
or
xor
lcall
xor
mov
enter
lea
cmp
or
jmp
movb
clc
je
jp
jne
lods
call
or
push
mov
adc
stos
add
jae
in
inc
das
jb
xchg
ret
unpcklps
mov
incl
clc
call
js
decb
test
out
inc
fcmovnu
mov
or
je
jl
outsb
sub
mov
dec
adc
xchg
cmp
je
push
push
push
push
add
insl
mov
jb
rclb
jl
sbb
jno
fwait
test
mov
paddd
pop
test
ss
nop
call
jp
mov
sbb
imul
movl
and
insl
push
js
xchg
ljmp
movsb
and
das
nop
addl
shlb
xchg
cmpsb
sbb
repz
pop
push
pop
fcmovu
outsl
das
rolb
push
stos
mov
adc
fnstsw
clc
xor
jmp
js
int3
cli
andb
mov
andb
sub
stos
push
push
pop
cld
mov
sub
subl
inc
add
int3
sarb
rclb
cmp
cmc
add
jnp
sbb
cmp
push
dec
sbb
call
mov
sbb
and
mov
cmc
aam
in
pop
adc
hlt
fistps
push
push
sahf
sbb
cli
push
push
incl
mov
add
rclb
orl
add
ja
or
enter
cmp
fcoml
stc
mov
mov
ljmp
inc
push
leave
insb
add
inc
or
pop
push
add
add
inc
and
in
add
ret
pop
fldenv
cmp
cli
jmp
push
xchg
add
sub
ja
in
dec
call
sub
or
mov
mov
and
push
jne
repnz
mov
out
or
push
inc
jg
fwait
inc
mov
fcomps
shrl
xchg
add
clc
lcall
jp
je
adc
test
pop
test
fildl
shlb
pop
ret
call
cmpsl
ljmp
mov
mov
mov
lock
push
lea
xchg
loope
adc
add
roll
jg
adc
xchg
js
decb
ret
lcall
push
inc
in
push
push
notl
jl
inc
test
les
sbbb
add
jbe
xor
test
aaa
data16
je
push
std
adc
or
call
lea
dec
adc
cmpsb
sbb
jl
mov
add
jl
inc
scas
push
mov
sbb
into
ljmp
pop
add
insb
sbb
mov
add
or
flds
test
push
loop
xchg
xor
push
imulb
faddl
std
shlb
lcall
xor
push
mov
je
call
sub
cmp
sbbl
mov
jo
push
inc
pop
outsl
sbb
cmp
xor
inc
mov
or
rcll
sahf
mov
pop
lods
stos
push
push
cld
push
push
add
fildl
push
test
je
hlt
dec
xor
rorb
sbb
adcb
lock
fsubrl
loopne
in
mov
aam
mov
jne
out
push
shlb
add
inc
mov
dec
jmp
rcll
or
rolb
inc
sbbb
rolb
mov
or
push
inc
hlt
std
fwait
push
adc
cmp
inc
mov
mov
hlt
or
jo
add
pop
insb
mov
xchg
dec
pop
jb
add
call
mov
pusha
jle
push
out
pop
mov
add
and
mov
pushl
pop
sbb
insb
bound
insb
inc
push
test
push
call
add
pop
fiadds
add
mov
mov
mov
add
lds
aas
mov
idiv
or
pusha
pop
out
cmp
mov
and
inc
push
pop
fmull
popa
mov
xor
clc
aaa
inc
add
in
inc
call
jp
and
inc
lock
fucomp
sub
push
xor
loopne
sub
das
clc
pop
divb
rclb
jp
jne
inc
fcoms
ret
jge
lret
stos
push
push
fadds
jno
xor
adc
dec
add
or
or
mov
cli
mov
mov
xor
jbe
lock
or
add
add
adc
cmp
jbe
jge
lock
add
outsb
ds
mov
jp
test
or
cmp
add
push
push
mov
lret
pop
or
bound
mov
and
lods
dec
cmp
lea
mov
lods
sub
or
pop
jl
andb
push
mov
fiaddl
inc
cmp
sub
or
push
inc
cmp
add
inc
into
out
inc
or
pop
addl
test
or
push
es
sbb
mov
fildll
mov
fdivr
jmp
or
mov
arpl
imul
cmp
mov
mov
pop
or
mov
push
loopne
orl
inc
cmp
lea
jbe
clc
mov
call
xchg
or
jge
imulb
je
jb
ret
add
call
mov
pusha
pop
ss
scas
jl
pusha
mov
mov
add
jb
jecxz
sbb
and
xor
adc
or
mov
or
pusha
add
test
ds
mov
or
mov
push
sbb
push
sub
pop
sbbb
adc
loopne
and
adc
xor
pop
hlt
pop
shl
xchg
dec
lea
mov
jmp
ret
pop
inc
pusha
insb
mov
inc
fistl
sbb
mov
and
aam
push
adc
mov
mov
pusha
add
mov
add
push
jl
lea
loopne
mov
add
shrl
push
inc
in
inc
sbb
loopne
push
pushl
dec
js
fistl
push
add
pusha
add
push
pusha
or
pop
andb
mov
loopne
nop
out
js
inc
sti
jmp
aaa
xsave
imul
cld
or
sbb
mov
mov
je
and
jmp
outsl
add
popa
xchg
je
pop
add
repz
in
lods
push
push
push
std
mov
pop
cld
push
and
push
call
mov
cli
out
fcomps
push
cmovne
cmp
mov
jg
add
jb
hlt
mov
syscall
test
pusha
xchg
add
xor
pop
scas
push
add
xchg
jmp
out
les
adc
call
push
daa
fmull
sub
push
les
pop
sbb
mov
push
sbb
loopne
mov
jbe
clc
pop
hlt
test
stos
bound
cmp
adc
push
xor
hlt
scas
movb
popa
rcr
jl
or
mov
repz
inc
mov
subb
adc
push
dec
insl
ljmp
mov
pusha
out
adc
leave
dec
mov
out
int3
aam
bound
sbb
ljmp
inc
adc
mov
cmp
add
mov
repnz
jno
jmp
mov
dec
cmpsb
cli
mov
cmpsb
scas
inc
sub
pop
gs
jo
mov
hlt
pop
mov
jge
or
incl
add
scas
cli
mov
mov
cmp
jo
loopne
in
mov
jl
and
adc
sbb
mov
test
dec
mov
outsl
sbb
ds
rolb
sub
jg
xor
xor
inc
cmp
mov
xchg
jo
in
jle
add
je
push
cmp
push
std
fists
and
mov
jmp
xchg
test
std
ret
pop
jne
sbb
mov
adc
push
inc
add
inc
icebp
popa
add
gs
lock
dec
lock
push
pushf
and
into
dec
jge
cmp
mov
sub
aaa
es
mov
es
lock
push
jge
or
add
push
test
xchg
jo
or
std
mov
aaa
mov
nop
jo
and
lock
xchg
arpl
sahf
loopne
inc
sahf
je
push
inc
scas
call
mov
sub
out
mov
push
adc
mov
cmp
and
pop
mov
mov
call
dec
sarb
or
sub
add
pop
push
idivb
sti
je
add
pop
mov
mov
add
out
dec
movsl
pop
mov
mov
and
dec
sub
xor
les
push
movb
mov
std
dec
outsl
jmp
call
test
sbb
lock
and
pop
scas
out
push
inc
xchg
pop
jge,pn
sbb
rcr
cmpb
in
mov
lods
xor
testb
ljmp
sbb
in
lock
xor
and
sbb
inc
rolb
and
pop
push
call
xor
inc
insb
iret
mov
jo
xor
jbe
sbb
mov
or
or
shrb
jb
add
ljmp
and
adcb
sbb
mov
inc
push
cmpl
add
push
hlt
sub
jno
call
andl
cmp
fcmovbe
jo
ds
cmp
mov
fs
push
decl
and
mov
sbb
or
pop
mov
mov
sub
inc
push
jg
outsb
scas
push
andl
in
rorl
mov
jmp
xor
jo
ss
push
push
test
sub
add
sbb
orb
data16
ret
push
loopne
push
mov
mov
cmpl
shr
test
inc
ljmp
test
add
cli
sbb
push
and
outsl
adc
adc
shrb
xor
push
movsl
mov
jbe
xchg
sub
push
jb
cmc
jo
mov
fists
push
test
lock
mov
call
mov
repz
cmp
shlb
sarl
dec
cmp
cmpsb
jl
inc
fldt
cmp
jbe
addb
sti
outsl
and
sti
jne
mov
jle
jae
mov
aaa
or
mov
jle
clc
pop
ja
ljmp
lock
push
mov
mov
icebp
push
sbb
mov
daa
test
je
adcw
mov
loop
push
pop
add
mov
ret
and
pushl
mov
cmp
icebp
add
xor
mov
adc
inc
add
add
mov
or
and
add
pop
cld
mov
test
jo
cmp
jo
lret
lock
cld
jnp
pop
roll
pusha
sbbb
cs
cmpb
scas
or
push
sbb
inc
xorl
pop
cmc
push
dec
xor
mov
mov
push
sub
dec
mov
pop
and
push
insl
mov
pop
hlt
ljmp
push
and
xor
imul
addb
icebp
cltd
das
ljmp
xor
orb
js
xor
jmp
mov
cld
add
mov
add
inc
mov
sub
sbb
jl
add
dec
fstpt
jns
stos
in
push
dec
inc
jo
inc
jb
push
in
sub
xor
aaa
push
jp
popa
inc
push
sub
jb
mov
repz
jo
pusha
addr16
fs
mov
pop
pop
mov
sbb
sbb
push
mov
sahf
or
mov
xchg
loopne
pop
insl
rcrl
fadd
jo
in
test
add
cmp
popa
clc
lcall
mov
xchg
pushl
add
add
int
pusha
push
mov
inc
push
icebp
pop
push
lock
jno
push
sub
push
xorl
pop
cmp
cld
in
or
push
pop
push
icebp
test
cmp
jg
dec
rcrb
xor
mov
mov
es
jno
add
push
lods
add
and
out
repnz
aad
lcall
add
repnz
push
insl
sub
ret
adc
pop
adc
mov
mov
fimull
sbb
lock
fdivrl
mov
js
jl
mov
inc
adc
cmp
mov
loopne
outsb
sbb
test
inc
fwait
dec
adc
jl
in
jo
push
jle
test
daa
shl
in
aam
and
inc
push
call
mov
lcall
or
sub
subb
test
ret
xor
push
repz
mov
ja
std
leave
adc
pop
fnstenv
xor
or
icebp
js
add
subb
arpl
incb
xor
cmp
out
pop
or
je
or
push
cmp
orb
or
cmp
adc
xchg
cmp
clc
lcall
xor
xor
add
scas
xchg
mov
push
adcb
fisubl
aaa
add
adc
hlt
inc
fldt
pop
or
add
add
xchg
je
mov
test
cmc
pop
sbb
mov
insb
push
xor
mov
mov
add
or
inc
sbb
mov
push
test
xchg
stc
add
mov
mov
shlb
mov
add
shl
pushf
jne
ljmp
push
push
add
arpl
mov
ss
mov
or
outsb
stos
int3
les
xorb
mov
xchg
mov
and
mov
sbb
push
xchg
add
push
stos
jp
scas
jo
mov
pusha
nop
pop
imul
xor
sbb
fisttpl
jmp
inc
xor
add
sub
pushf
jmp
jle
mov
ljmp
sbb
add
jl
clc
sbb
jo
xchg
pop
imulb
testb
orl
mov
mov
push
mov
dec
test
cmp
or
dec
mov
add
cli
sub
adc
cmp
js
mov
mov
add
pop
rolb
inc
ljmp
pusha
stos
pop
jmp
jl
test
mov
cli
or
sub
sti
mov
dec
mov
lea
mov
mov
mov
jle
js
xor
or
jmp
adc
or
sub
adc
mov
mov
xchg
mov
sub
clc
out
cli
call
mov
inc
cli
jg
loope
cmp
ret
out
add
sub
add
sarb
or
decl
loope
and
enter
inc
adc
add
push
mov
adc
mov
pop
dec
testl
andb
adcl
sub
and
ficompl
mov
adc
rorb
mov
add
loopne
je
test
cmp
pop
push
ret
jmp
mov
adc
mov
aaa
adc
or
call
sbb
inc
hlt
imull
aam
cs
int3
or
ss
dec
jmp
xorb
push
pop
inc
push
inc
test
subb
push
add
lret
mov
adc
cmpsb
imul
add
push
addl
sbb
dec
adc
or
push
inc
fisttpl
or
xchg
add
inc
cld
push
stos
mov
ret
inc
call
call
adc
add
mov
bound
cmpl
jne
pop
jp
pop
repnz
mov
adc
mov
add
jle
test
stc
dec
test
jmp
aas
inc
fimull
lahf
data16
ljmp
pop
or
push
je
mov
add
xchg
fimuls
push
je
pushl
leave
rolb
or
sbb
sbb
xor
sar
sub
push
rclb
ja
xchg
sub
and
insb
cld
dec
mov
inc
fdivr
xor
ret
jbe
popf
xor
cmp
rolb
dec
fdivs
lock
sarb
add
sub
fsubl
mov
pop
jo
mov
lds
xor
ret
ret
int3
push
enter
cld
jbe
push
lock
test
or
dec
add
call
jo
push
fs
adc
push
cmp
push
push
mov
rorl
jbe
mov
repz
pop
idivb
push
fadd
lods
or
or
outsb
cld
ljmp
or
jmp
mov
mov
and
push
shlb
jno
rclb
mov
push
add
push
add
fidivl
testl
out
add
scas
mov
mov
cld
aaa
add
push
mov
lock
push
repnz
repz
mov
and
add
sarb
jbe
add
push
sub
mov
push
mov
add
fdivrs
inc
jl
jb
mov
lds
cmovns
movzbl
add
jmp
incl
push
xor
add
loopne
jae
cmp
ss
je
ja
or
sub
dec
loope
out
dec
add
jecxz
jle
in
xor
jmp
test
pop
lods
test
loopne
call
or
mov
mov
ja
xor
mov
dec
mov
mov
test
dec
fisubl
cwtl
jl
or
mov
adc
mov
push
push
lea
sar
sahf
inc
dec
mov
shrl
cli
pusha
sub
pusha
inc
jl
mov
xor
jb
loopne
pop
inc
adc
movb
movl
sbb
push
test
and
loopne
and
adc
sbb
mov
loopne
mov
pop
hlt
lods
mov
push
xchg
sub
pop
mov
lea
xchg
pop
or
loopne
je
lea
sti
cs
xlat
int
int3
jb
clc
mov
call
cmp
and
es
push
push
popa
fwait
sarb
clc
outsl
int3
fsubs
add
inc
and
and
push
loopne
sbb
pusha
pop
push
scas
jne
mov
test
xchg
adc
add
scas
dec
mov
test
jns
cmp
call
je
orb
or
cld
je
mov
sub
scas
ljmp
push
pusha
cmp
mov
adc
mov
adc
cmp
call
mov
pusha
sub
sub
test
add
lea
ss
pop
cli
lcall
mov
mov
mov
cmp
int
loopne
movl
movsb
cmpsb
xor
cld
pop
fcoms
loope
jg
push
xchg
mov
jge
and
testl
movsl
add
int3
outsl
fbld
mov
cmp
stc
loopne
inc
mov
mov
ja
sbb
jb
jecxz
add
loopne
gs
or
loop
or
pop
sub
arpl
sub
mov
out
rclb
sbbb
xchg
add
subb
lock
roll
pop
pop
adc
loop
inc
add
cs
pop
push
inc
ud2
mov
cld
sbb
push
or
mov
inc
std
push
dec
subb
mov
and
jp
je
fiaddl
adcb
pop
push
push
push
je
test
mov
loopne
movsb
lock
clc
out
mov
int3
test
jle
inc
iret
jne
push
andb
sbb
mov
insb
mul
es
add
loopne
or
mov
adc
es
testl
call
movsb
loopne
addb
pop
negl
or
jge
sarb
pusha
mov
out
mov
loopne
orb
decb
mov
dec
cmp
ficomps
and
bound
inc
sbb
sti
incl
jmp
push
add
popf
pusha
sub
pop
lea
loopne
mov
pop
loopne
rolb
sbb
pop
or
fdivr
mov
ja
movl
mov
test
inc
imul
imul
pusha
test
and
and
aas
cmp
sbb
xor
mov
xchg
mov
xchg
in
pop
int3
loopne
fdivrs
je
data16
pop
and
push
lea
or
sbb
cltd
mov
inc
lock
and
icebp
out
cli
shl
cltd
or
mov
mov
cmp
je
imul
jecxz
push
lods
aam
add
add
fcos
pop
cmc
mov
xor
data16
push
or
ds
pop
and
pusha
mov
mov
inc
jnp
add
add
insb
mov
push
mov
pop
mov
push
xor
push
push
lock
xor
cld
mov
dec
pop
mov
adc
sbb
jne
mov
fbld
add
jno
inc
decl
ljmp
cmp
inc
leave
xor
in
ja
in
mov
das
mov
pop
jecxz
inc
jle
mov
cs
lock
lock
adc
cmp
mov
push
mov
test
jle
inc
cmp
push
aas
or
inc
add
or
pop
dec
push
jg
jge
push
push
call
pushl
repnz
adc
ret
xor
inc
movl
or
xorb
lcall
jo
and
mov
pop
adc
jb
repz
test
or
mov
mov
loop
out
add
jae
jecxz
dec
jecxz
lret
jne
cs
mov
jmp
pop
lea
mov
jae
mov
cs
fsubrs
add
movzbl
xchg
add
adc
mov
pop
fildl
sbb
addl
sub
mov
repnz
push
mov
cmpl
xor
push
nop
lock
lea
inc
push
mov
sub
xchg
repnz
push
sbb
adc
mov
mov
hlt
outsl
insb
and
inc
lock
lea
push
push
dec
mov
mov
ret
sub
add
mov
inc
filds
es
dec
rcrb
fs
or
push
push
ljmp
mov
jo
stos
mov
dec
cs
dec
in
out
out
or
pop
pop
add
int3
jle
ja
lock
mov
mov
pop
jle
xor
inc
repz
push
push
je
pop
pop
cmc
cmp
cli
xchg
jp
and
xor
pop
call
xchg
add
pop
or
xor
pop
cmc
or
pop
add
mov
lcall
jb
mov
and
add
add
call
nop
jo
jecxz
mov
test
push
lea
fidivs
dec
xor
adc
nop
xchg
sbb
sbb
adc
cmp
or
jp
loop
arpl
jp
pop
div
jne
jbe
adc
dec
loope
pushl
je
jl
test
call
mov
mov
rorb
ljmp
and
call
decl
dec
lock
shr
adc
xor
dec
push
sbb
scas
add
or
xchg
popf
jno
inc
aam
mov
pop
cmp
mov
loopne
mov
xor
push
sub
mov
add
pop
sbb
adc
or
adc
push
fcoms
lock
xchg
mov
call
jle
sarb
test
test
push
lods
push
mov
aam
call
incb
dec
add
sbb
xor
xor
dec
mov
cmp
jg
cli
mov
adc
dec
lea
loope
and
and
test
mov
push
cld
push
xchg
xor
pop
dec
cmp
jge
cs
loop
test
add
mov
push
cwtl
mov
jns
ret
aad
int3
cld
cmp
pop
enter
xchg
aam
int3
idivb
jne
or
push
pop
pushl
push
call
jne
incl
add
icebp
add
cmpsl
xor
jmp
lods
add
and
pop
addb
or
subb
jl
in
cmp
addb
es
stc
pop
fidivl
inc
call
lea
add
add
xchg
fldt
aam
test
push
jl
cmp
jne
and
add
orb
std
scas
ljmp
test
repz
jno
jge
cld
jge
cwtl
mov
mov
cmp
outsl
fwait
ror
mov
push
lea
mov
or
fbld
popa
dec
xor
inc
clc
je
add
adc
inc
adc
outsl
pop
aad
fiadds
and
jp
lock
adc
add
dec
mov
inc
jb
jb
inc
fsubr
rorl
mov
and
fcomps
mov
or
fdivr
push
push
hlt
xchg
add
cmp
popa
ret
aas
and
sub
jne
mov
call
call
or
cld
lods
call
lock
push
lock
je
call
sub
xor
incl
xor
and
sbb
mov
mov
icebp
add
bound
mov
mov
push
add
mov
mov
js
jmp
xchg
jg
scas
pop
cmp
mov
cmp
scas
shrb
call
xor
mov
cwtl
cmp
or
sbb
cld
sbb
repz
lock
fsubr
arpl
je
jo
mov
jmp
adc
lea
call
es
jo
ret
xor
add
pop
jp
jne
jl
les
enter
ret
filds
dec
xor
outsb
and
jo
sub
xor
dec
clc
stos
int3
lods
loope
mov
add
xlat
mov
pop
je
mov
lock
mov
jg
or
jo
inc
ror
mov
ljmp
jb
push
pop
call
or
and
call
push
loop
je
jne
mov
mov
sbb
jns
push
loopne
sbb
push
pop
std
hlt
xchg
lock
gs
aam
clc
cmp
in
adc
xor
jl
rol
cmp
inc
push
jae
mov
push
mov
cmp
mov
jl
dec
cmp
lods
push
jl
scas
jle
sti
jecxz
xor
mov
mov
call
sbb
mov
xchg
cmpb
fwait
jg
inc
aad
jo
jne
jo
test
adc
psubsb
adc
pop
and
scas
daa
orb
shlb
lock
add
adc
je
cmp
cmpsl
mov
mov
pusha
lock
jnp
mov
jb
test
mov
call
jb
mov
push
push
xor
divb
cmp
test
push
jo
mov
and
pusha
add
cmpb
push
push
hlt
lock
add
fldt
add
lock
xorb
loopne
mov
mov
mov
ljmp
adc
andl
adcl
lock
jbe
and
sbb
lods
loop
lock
icebp
pop
push
push
add
sbb
sub
xor
jl
mov
or
xchg
jno
xor
sti
inc
out
mov
push
inc
or
je
js
cld
fbstp
cmp
nop
add
std
lock
aas
xchg
call
in
in
movsl
sbb
jg
add
pop
repz
aaa
or
in
add
cmc
test
adc
mov
jl
adc
xchg
and
cmp
aaa
loopne
ljmp
cmp
inc
mov
jl
subb
inc
xchg
adc
and
pop
and
je
clc
out
jo
mov
jmp
clc
xor
sub
ret
add
aad
pop
ret
xchg
sti
dec
movsb
pushl
push
stos
push
pop
pop
nop
cli
test
push
xor
pusha
ss
cmp
cli
mov
mov
jl
mov
mov
jle
imul
repnz
cmp
fisubl
mov
cmp
and
push
adc
jb
test
shrb
push
jmp
mov
pop
jmp
pushl
icebp
jbe
mov
mov
lock
sub
jbe
loopne
sarl
xchg
or
call
fildll
enter
fsubl
inc
fsubl
aad
push
loopne
or
in
xchg
push
and
outsb
lcall
aas
pusha
jge
cmp
andl
clc
mov
dec
or
add
cmp
pop
loopne
jp
adc
adc
hlt
addl
pop
and
push
add
repz
xchg
fistpl
xor
adc
dec
add
mov
test
in
inc
jge
or
cmp
cmp
std
or
rcll
test
popf
inc
push
ds
add
call
cmp
push
fildl
mov
mov
outsl
faddp
fldcw
adc
inc
or
test
xor
adc
jmp
push
mov
fmulp
mov
loop
jmp
push
jae
fbstp
dec
fimuls
scas
add
rclb
ljmp
test
pop
je
inc
lods
mov
mov
jl
hlt
jg
add
adc
sub
push
adc
mov
inc
or
int3
call
clc
mov
testl
mov
sub
cld
lock
addl
xchg
push
mov
jne
and
cmp
bound
rclb
mov
jbe
shl
inc
or
outsl
push
inc
pop
int
jmp
xor
mov
xchg
xor
pop
dec
cld
stos
pop
jo
xor
inc
xor
push
pop
dec
loopne
call
xorb
sbb
dec
testl
clc
pushl
or
push
sub
xchg
and
jp
sbbl
mov
sub
xchg
std
mov
in
mov
xchg
fstpl
frstor
pop
or
outsb
push
test
sbb
in
pop
push
jb
xchg
iret
and
loopne
pop
or
pushf
pop
data16
ja
push
pop
ret
add
mov
jnp
test
inc
pop
scas
mov
mov
jl
adc
add
xor
add
js
daa
pop
and
mov
add
sahf
loope
outsl
xor
test
test
add
sti
hlt
jb
out
div
dec
out
je
cmp
nopl
pop
push
filds
in
aas
test
cli
cmpsb
jge
jne
lea
outsb
dec
sbb
fwait
jbe
jb
jl
pop
call
scas
stos
cli
out
cmpsl
paddd
cli
jl
in
push
sbb
jge
fwait
xor
and
jb
std
subb
cmp
insl
cmpsb
scas
ficoml
out
adc
orl
pop
sbb
decb
decl
jg
aam
outsb
subb
in
sti
stos
pop
das
out
lea
push
push
das
add
loope
lea
dec
xor
mov
and
adc
jnp
test
sbb
test
cmp
pop
pop
out
aaa
or
dec
sarb
aaa
mov
jmp
and
jne
pop
jl
jbe
daa
push
hlt
scas
subl
ja
movzwl
jbe
xchg
inc
lea
mov
mov
jp
arpl
inc
jo
adc
ljmp
scas
push
jb
cmp
ja
testb
jne
sub
push
jae
adc
lea
in
pop
gs
inc
jb
cli
ss
dec
sti
punpckhdq
mov
mov
loopne
jmp
push
cmp
cmpsb
cltd
fiaddl
sub
scas
cmpsb
and
jg
mov
pop
inc
jne
cmp
ret
jne
jb
mov
loopne
cld
test
or
mov
pop
sub
lea
call
gs
mov
xchg
sbb
imul
add
mov
ss
pop
xchg
pop
in
pop
out
add
test
add
test
nop
pop
add
jl
mov
push
xchg
lock
push
mov
xchg
std
add
scas
mov
pop
imul
inc
cmp
add
fmull
pop
sbb
mov
push
decl
cmpsb
or
pop
mov
call
cs
mull
clc
in
jp
scas
push
adc
fbstp
notl
subb
fidivrs
push
jmp
push
cmpsb
call
test
fsubl
std
jg
daa
fmul
cmp
add
int3
mov
test
add
xor
mov
mov
add
sub
xor
pop
mov
icebp
addl
xchg
inc
scas
fldz
mov
outsb
xor
jle
shl
test
in
push
lods
movb
cmp
repz
clc
in
ss
scas
push
nop
je
call
adc
lock
mov
jne
jmp
xchg
add
pop
shlb
inc
outsb
fcomi
sub
jecxz
inc
sbb
scas
mov
xchg
sar
cmp
and
or
dec
add
sbb
test
push
cmp
mov
clc
sbb
add
int3
adc
xorl
adc
loopne
xchg
aaa
clc
test
or
cmp
add
mov
and
dec
push
ss
mov
int
jmp
je
inc
or
addb
jne
mov
jle
int
and
mov
daa
lea
jl
test
cmp
je
add
je
scas
cwtl
jecxz
push
inc
push
mov
es
lods
cbtw
loope
popa
es
push
mov
pop
mov
cmpb
adc
arpl
add
into
push
ds
divb
add
fadd
jb
ret
sar
hlt
cmp
es
cwtl
xchg
sub
fidivs
mov
pusha
xor
pop
adc
mov
mov
je
mov
sub
cmp
test
inc
adc
call
cmpsb
hlt
pushl
fsubl
pop
hlt
lcall
lock
dec
insb
in
pop
gs
push
imul
inc
lock
icebp
data16
pop
sub
lcall
call
rcr
xchg
inc
pop
sbb
xchg
add
gs
or
jo
mov
xchg
adc
outsb
mov
shrl
cmpsl
sbb
jmp
mov
cmc
add
lea
dec
emms
xor
mov
notb
hlt
or
jae
mov
in
stos
lock
dec
add
jns
mov
sub
sub
dec
jbe
or
in
jae
push
xchg
jo
pop
sub
mov
test
outsl
mov
pop
cmp
in
pop
xchg
movsl
into
push
in
cmpsb
sub
mov
je
test
mov
mov
call
stos
and
sahf
or
lret
lret
fdivrp
dec
add
dec
clc
inc
mov
in
cs
push
divl
ss
jge
lea
sbb
orb
mov
das
xor
push
into
lods
data16
call
and
push
or
orb
add
test
mov
jmp
push
dec
clc
cmp
push
cmp
je
cmp
je
cmp
or
pushl
fucomi
lock
jmp
mov
jmp
mov
jmp
mov
inc
je
xor
rclb
mov
cld
pop
clc
mov
call
movsbl
call
imul
fimuls
mov
mov
add
push
inc
dec
test
dec
or
add
into
pop
repz
pop
cmp
rorl
and
jg
outsb
sub
jns
xchg
testb
pop
je
subl
jae
call
decl
clc
add
shrl
lea
test
mov
push
mov
mov
call
fmuls
cmp
jle
sar
inc
in
clc
out
mov
int3
leave
mov
cmp
cs
fimuls
shl
cmp
mov
inc
iret
daa
xchg
int
cld
xor
in
mov
push
lock
jae
mov
push
sub
jg
mov
dec
in
out
jmp
lock
push
inc
mov
push
or
mov
sub
cmp
jbe
xchg
push
aas
fildl
dec
cmp
clc
decb
or
and
test
clc
pop
test
vmwrite
jo
das
sahf
pop
outsl
push
push
stos
adc
testb
mov
es
imul
fsubrs
mov
xor
je
ror
pop
inc
mov
js
mov
xorl
inc
cmc
push
call
scas
sub
cmpsb
or
add
xor
inc
sbb
pop
out
dec
pop
mov
jl
and
div
mov
ret
test
loopne
jnp
lret
mov
xor
jmp
testb
push
cwtl
loop
sbb
xchg
int3
xor
sub
fisubrs
ss
out
adc
jge
pop
pop
xchg
mov
mov
jmp
or
sub
dec
adc
fsubl
cmovl
xchg
test
add
fsubrs
inc
push
lea
jg
es
sti
pop
cmc
cli
movb
xchg
cmp
jne
std
and
jb,pt
adc
inc
mov
or
mov
sub
cmpsl
lahf
subb
adcl
push
cmp
lcall
jmp
test
shll
adc
mov
and
or
hlt
jecxz
cmpsb
push
xchg
sub
adc
das
rclb
test
je
cmpw
jae
xchg
and
aaa
insl
push
adc
dec
adc
cmp
rorl
or
pusha
es
mov
hlt
pop
test
cmpsl
push
ds
pushl
lea
push
push
jbe
mov
mov
jne
push
lea
sbb
jmp
mov
stos
sbb
dec
out
test
mov
inc
mov
cmove
or
sbbl
incb
mov
push
push
clc
sbb
testb
in
call
or
sar
mov
push
pop
sub
and
xor
pop
sbb
or
lcall
call
out
es
pop
into
into
push
call
adc
push
lds
into
jne
out
cmpl
push
or
push
iret
add
pusha
xchg
fadd
add
dec
lods
cmp
aas
clc
sbb
inc
or
push
call
ficoms
add
fmul
adc
sbb
mov
orb
cmp
xchg
lcall
mov
xor
lea
cmp
push
inc
dec
cmp
jbe
testb
rolb
sar
xor
fsubrp
fisubl
pop
icebp
mov
mov
outsb
clc
cmpl
js
adc
sbb
outsl
mov
shll
sub
add
push
push
in
mov
mov
mov
add
mov
push
in
push
dec
and
jl
jb
inc
sahf
push
xchg
sub
mov
sub
mov
and
decl
add
lahf
jecxz
imul
cld
jne
add
nop
jne
pop
xchg
inc
push
outsb
add
sbb
ds
add
xor
jbe
sahf
daa
jmp
call
add
ja
clc
push
pop
xlat
cmp
sub
or
or
in
mov
decl
insb
inc
enter
int3
jl
sbbb
sbb
xor
or
jmp
incl
inc
xor
push
ds
je
pop
mov
hlt
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
aaa
or
lock
sub
inc
cmp
jae
mov
jg
dec
push
mov
sub
or
push
jbe
hlt
dec
push
add
mov
jae
dec
mov
push
or
in
or
clc
add
add
imull
sbb
xor
or
test
hlt
outsb
lock
mov
fiadds
clc
stos
cmp
xchg
movsb
add
test
fiaddl
movsb
add
pop
sub
jne
std
xlat
xchg
inc
mov
add
cmp
jg
xchg
jb
cmp
mov
ja
lock
mov
inc
inc
add
enter
add
xchg
test
xor
add
add
rorb
js
je
cmp
add
mov
mov
je
test
push
pop
push
out
add
mov
add
enter
lods
div
push
jae
mov
add
inc
xchg
push
sti
pop
jnp
inc
adc
jmp
add
mov
jo
shlb
jle
mov
xor
push
mov
insb
cmp
sub
dec
fcompl
or
xchg
and
push
add
roll
push
jl
pushl
loop
cmp
cmpb
pop
or
inc
mov
mov
ss
push
cwtl
andb
inc
orb
push
call
cmp
lock
outsl
call
pop
mov
cld
jge
xor
ja
je
mov
push
mov
mov
inc
iret
out
xorl
sub
add
cs
adc
jo
ljmp
out
xorl
add
mov
pop
add
aaa
je
pop
pop
cld
addl
cmp
or
idiv
lcall
shll
cmpsl
xchg
dec
add
rcll
icebp
mov
in
add
mov
mull
sbb
addl
call
dec
fisttps
mov
fimuls
orb
jns
sar
insl
inc
ret
cmp
imul
mov
js
add
in
pop
and
xor
mov
mov
add
jp
mov
cld
incl
inc
mov
fdivrs
mov
add
je
add
jl
push
fisttps
or
call
imul
aam
adc
mov
sbb
or
call
jge
jmp
call
ret
pop
test
repnz
sub
mov
sbb
push
sarb
lock
mov
jmp
inc
or
push
clc
es
inc
in
push
push
leave
add
cmp
dec
ret
call
inc
rolb
pop
adc
and
rcrb
push
mov
aad
mov
jmp
push
add
mov
ret
mov
mov
test
add
imul
aas
icebp
scas
roll
mov
mov
mov
mov
mov
ret
fidivrs
sub
mov
or
call
adc
shlb
add
pop
mov
add
daa
add
fwait
xchg
jo
or
mov
lahf
mov
push
mov
clc
jg
addl
cmp
jge
or
push
mov
push
jmp
pop
mull
mov
mov
jbe
inc
pop
fs
sbb
sahf
and
add
mov
sub
imul
or
add
push
pop
or
add
scas
dec
bound
hlt
inc
out
fwait
lea
add
cmp
mov
sbb
xor
push
ret
test
popa
xchg
adc
out
repz
fildll
sbb
into
mov
cwtl
mov
test
std
in
cmpsb
inc
adc
out
push
sbb
xchg
add
pop
and
addb
hlt
add
loope
aad
add
mov
outsl
push
and
movsbl
lods
or
push
or
push
push
shlb
or
mov
faddp
pop
mov
mov
mov
addb
iret
sbb
cmp
pusha
xchg
dec
push
push
inc
adc
adc
pusha
add
inc
pushf
push
and
and
jo
xchg
inc
pop
incl
mov
add
cmpb
aaa
jmp
dec
add
leave
loope
lock
test
test
add
test
sahf
mov
outsb
adc
mov
ja
cwtl
push
inc
adc
ret
sub
pusha
bound
jmp
dec
pop
call
xchg
xor
pusha
mov
lahf
or
adc
dec
cli
aaa
xchg
dec
cmpsl
call
popf
rolb
add
jo
adc
mov
dec
push
bound
mov
fistl
repz
pop
hlt
mov
push
pop
sub
add
push
and
lds
loop
jo
shlb
push
inc
jl
outsl
and
push
xchg
je
mov
test
add
cmpsb
lock
clc
pop
mov
out
push
mov
xorb
outsb
ret
stos
fmuls
mov
push
pop
jp
jle
sarb
sub
jg
loopne
dec
pusha
pop
pusha
addr16
or
or
push
aas
clc
fistpll
pusha
xor
jge
jbe
pop
adc
or
cld
xchg
add
divb
mov
and
adc
loopne
pusha
push
sbb
inc
jle
mov
std
and
subb
clc
jg
sahf
gs
sbb
pop
fsubl
popa
aas
out
fsubrl
aas
pop
mov
or
mov
loopne
lret
call
jbe
push
or
pop
jp
push
in
outsl
and
sbb
pop
push
push
daa
adc
xor
pop
inc
sti
aaa
cmp
inc
and
push
pop
loopne
jp
js
sub
inc
xor
cmp
sub
cmp
orb
jnp
xchg
loopne
add
dec
mov
and
inc
clc
jb
pop
or
inc
jbe
pusha
pavgb
fisttps
popa
sub
cld
or
xor
pop
xchg
dec
adc
sti
jne
add
add
push
push
mov
int3
adc
idiv
jno
jo
or
mov
pusha
mov
push
test
push
mov
push
rorl
mov
or
dec
mov
mov
pusha
jbe
sub
sbb
rclb
dec
add
xor
leave
inc
push
or
or
es
or
lret
push
adc
into
pop
jae
in
mov
inc
jg
loopne
pusha
add
out
jne
dec
dec
add
push
xchg
mov
inc
cld
out
incb
add
je
or
add
das
pop
sub
in
les
cmp
push
inc
dec
push
or
pcmpeqb
cmp
sub
push
xchg
rolb
jb
scas
add
ret
je
gs
or
or
inc
push
fdivr
popa
enter
lods
fldt
push
aam
and
xchg
pop
add
lahf
push
push
hlt
or
push
popa
jno
mov
sub
fidivl
add
lods
pusha
dec
ljmp
inc
or
pop
ret
cmc
arpl
rcl
or
icebp
jns
mov
andb
ret
mov
pushf
std
cmpsb
inc
xor
pop
xor
mov
mov
push
xor
in
scas
aam
dec
jb
je
movsb
mov
xor
fidivrs
clc
jge
test
add
jo
shlb
ljmp
mov
lock
jb
mov
mov
movl
roll
subb
lock
out
mov
jb
and
or
vmwrite
cmp
or
lcall
cmpsl
mov
sarb
clc
jbe
je
xor
repz
call
out
push
cld
js
jbe
mov
jb
cmp
sub
xor
dec
xor
jo
leave
ret
xor
dec
xor
aam
cs
test
mov
and
rcll
jecxz
push
sub
rcrl
or
lock
cmp
xor
jne
incl
aaa
mov
pop
subb
in
jne
scas
push
add
mov
js
inc
ficoml
jbe
in
inc
orb
dec
call
inc
lea
cmp
fucom
cli
sub
mov
xor
call
inc
in
mov
xchg
incl
xor
pop
dec
jb
sub
sti
add
push
call
stos
nop
ljmp
or
ss
adc
mov
loopne
xor
and
and
jo
aad
daa
stos
hlt
call
pop
add
stos
push
add
mov
mulb
pop
sbb
nop
mov
jne
cmpsb
xchg
xor
or
loopne
clc
pop
inc
add
cmc
lea
clc
mov
inc
xor
mov
scas
xor
pop
dec
pop
inc
jl
dec
clc
mov
and
cmp
out
cmp
push
inc
mov
or
dec
add
add
aaa
cld
mov
test
adc
push
outsb
or
push
call
divb
cltd
adc
add
sub
cmpb
mov
jmp
push
leave
jmp
lea
jnp
or
xchg
jne
mov
adc
pop
je
cmp
mov
dec
mov
hlt
push
shrb
je
xor
xchg
mov
int3
leave
or
jo
mov
loop
js
and
push
sar
decl
pop
ret
xchg
in
clc
adcl
mov
popa
std
jg
mov
cmovs
push
adc
mov
mov
je
ljmp
adc
ss
xchg
add
pop
data16
mov
mov
dec
xlat
lcall
inc
dec
cltd
sarl
or
mov
sbb
sbb
push
mov
addb
out
lcall
rolb
mov
mov
pop
sub
dec
sbb
scas
call
lock
imul
sub
jo
jne
subb
scas
xor
pop
aas
fs
or
incl
je
jl
lock
add
jno
and
push
mov
ror
adc
insb
add
mov
add
mov
jo
dec
add
stos
adc
pop
fistpl
outsl
clc
adc
call
xor
add
sbb
pop
scas
mov
call
adc
rorb
jle
and
sahf
mov
addb
add
adc
jl
and
jmp
cmc
adc
mov
insb
call
mov
and
jo
push
xchg
pop
dec
aaa
call
add
nop
mov
addl
add
lea
pop
jmp
and
push
or
push
popa
fisttps
xchg
xchg
rdpmc
fcmovnb
pop
lock
jg
mov
fldt
mov
call
mov
fisttps
inc
mov
push
lods
add
xor
jne
lea
mov
icebp
adc
cmp
jo
pop
in
jp
add
pop
test
stos
push
pop
dec
push
push
mov
es
sarl
ss
mov
mov
push
jbe
in
jg
and
sbb
mov
fldcw
xor
adc
dec
and
sbb
mov
icebp
inc
call
and
mov
fwait
pop
jb
sub
xchg
add
incl
xor
mov
fistpl
push
test
pop
decl
mov
cld
xor
arpl
sbb
and
dec
xchg
inc
mov
inc
sbb
inc
and
or
cwtl
jb
dec
lcall
hlt
push
push
icebp
add
pop
sub
paddb
adc
xchg
sbb
pop
lock
stos
mov
jnp
sbb
pop
add
call
aad
das
pop
mov
stos
fdivrp
or
repz
jl
sub
or
rclb
jecxz
mov
mov
adc
xorb
cmp
add
movaps
mov
sbb
ljmp
inc
out
addl
testb
scas
jb
jo
push
push
std
outsb
loopne
push
mov
lock
cmpsb
dec
jo
mov
xor
mov
xchg
clc
inc
cmp
popf
and
cwtl
cmp
ds
pop
imul
into
lods
shr
ja
mov
je
add
sahf
push
sub
pop
mov
sub
sbb
lock
sub
sub
and
pop
lock
in
cmp
jl
cmc
pushl
icebp
sub
pop
int
adc
sbb
sub
adc
sarb
mov
mov
or
or
lcall
push
lock
call
add
jb
inc
pop
and
adc
mov
adc
sub
cmp
movb
add
sub
js
xchg
fs
mov
or
xor
inc
push
cltd
cmp
aaa
push
jmp
mov
pop
stos
cltd
push
adc
sar
xor
pop
cmc
add
int3
adc
pusha
add
test
jbe
push
inc
xlat
add
clc
lcall
std
add
mov
sti
call
shlb
not
pusha
xor
popa
aad
jp
pusha
or
xor
nop
je
aas
lods
mov
mov
push
jle
add
or
push
add
cmp
cmpsb
or
loopne
pushl
xchg
ds
push
mov
push
call
divl
sub
xor
in
add
shrb
fsubrs
lea
cmpsl
mov
gs
adc
push
add
push
mov
jp
jo
mov
pushf
lea
test
xor
xor
ret
call
jb
dec
mov
pusha
mov
fdivrl
das
cmp
test
orb
movsb
mov
das
shlb
stos
cld
xor
mov
sub
pusha
iret
cli
call
add
shrb
xorl
jne
or
into
loopne
mov
idivl
or
adc
xchg
or
xchg
add
incl
pop
mov
add
inc
add
orb
push
add
push
mov
dec
ret
ret
jmp
add
push
inc
or
lock
data16
jg
add
push
je
inc
cmpb
pop
pusha
jl
sub
dec
push
sbb
xchg
sub
call
cli
push
sub
adc
rorb
sbb
loop
ret
cmp
jecxz
sbbb
add
out
ret
jp
push
push
sub
push
dec
cli
cmp
pop
xor
inc
sub
add
loopne
cmpsb
stc
inc
jmp
push
pushf
xorl
push
jb
call
fmull
ds
ficomps
add
fsubrs
xorb
pop
push
sbb
add
movsb
xchg
mov
loope
sub
lret
inc
aaa
int3
js
pop
int
fs
fnstsw
scas
xor
add
jne
dec
decb
std
pop
dec
cwtl
orl
xor
jne
mov
das
cmp
push
cmpsb
ret
fcmovnu
adc
sbb
cli
add
or
pusha
sbb
test
pop
testl
pop
rcrb
shrb
scas
mov
jmp
lret
fadds
fcmovnb
mov
sub
pushl
lea
aaa
or
fiadds
sbb
and
mov
lock
mov
pop
lods
ret
hlt
aam
outsb
test
lcall
sbb
aam
arpl
je
sbb
jg
scas
cmp
mov
lock
cmp
andb
push
orb
or
add
nop
cmp
add
lods
or
sbb
iret
popa
es
andl
jb
add
inc
adc
pop
add
insb
int3
shll
mov
enter
mov
adc
add
rclb
or
xor
outsl
rclb
roll
mov
lcall
cmp
mov
sar
out
add
imul
mov
gs
je
xor
adc
rclb
les
les
jne
loop
cld
pop
or
inc
std
cmp
je
adc
cmp
shrl
test
pop
mov
and
dec
and
dec
xor
enter
push
cwtl
adc
outsl
pop
or
dec
mov
paddb
lock
psubsw
push
rorb
loop
push
fcoms
arpl
mov
jp
or
addb
xor
rorb
xor
mov
adc
adc
adc
add
popa
roll
pop
xor
cmpsb
pop
push
push
clc
jg
mov
add
dec
adc
inc
rolb
shl
add
cmp
test
xor
xchg
sti
jmp
incl
mov
roll
lock
inc
adc
mov
test
inc
xor
add
sub
pushl
leave
xchg
or
add
add
mov
test
leave
mov
test
stc
sub
outsb
jecxz
ror
add
and
xchg
jmp
cmp
sbbb
cmc
out
mov
data16
icebp
call
inc
je
iret
jge
pop
subb
nop
movzwl
subb
pop
dec
adc
aaa
pusha
divps
int3
rclb
mov
ja
aam
cmp
lea
call
js
loopne
jo
mov
jo
or
loop
ret
sub
loopne
add
jg
mov
pusha
or
jb
mov
lea
cltd
aam
sar
fcmove
cld
mov
cwtl
xlat
jae
add
cli
loopne
mov
adc
add
into
sbb
mov
lea
test
es
pop
aas
lods
add
lcall
inc
repz
xchg
shlb
xor
mov
cmp
mov
xor
xor
insb
dec
add
aas
cmp
nop
fildl
lret
cmp
or
cmp
into
call
adc
inc
and
pop
push
inc
je
and
rcrl
or
add
ret
gs
aaa
inc
mov
testb
jne
adc
mov
dec
adc
loope,pt
data16
enter
sub
es
fs
push
aaa
test
lea
pusha
jb
mov
stos
orl
shr
sbb
adc
outsl
nop
adc
adc
fcomps
xor
fisubs
jmp
jg
mov
sub
into
inc
jbe
dec
shlb
insl
xchg
inc
sbb
cmpb
mov
cld
loopne
or
or
std
loope
arpl
shlb
testl
or
mov
push
add
incl
movb
mov
icebp
xorl
ret
pop
hlt
dec
insl
mov
push
add
call
jg
aas
push
mov
and
rcl
add
add
cli
incl
add
loopne
hlt
jmp
mov
lock
and
outsl
decl
inc
xchg
leave
sbb
add
shl
mov
inc
int3
dec
insb
mov
add
push
mov
pop
xchg
add
inc
divb
sub
xor
mov
movsb
sti
test
call
adc
mov
or
dec
ljmp
and
push
mov
movl
and
mov
pop
pusha
jle
mov
adc
sub
fiadds
shrb
xor
pop
mov
pop
test
jmp
xchg
ror
cmp
jne
inc
fstpl
pop
pop
leave
iret
lea
aaa
int3
add
mov
mov
sub
clc
imul
add
aam
mov
dec
mov
mov
cld
sub
mov
cmp
and
rclb
sbb
add
popa
mov
cli
mov
mov
movb
lods
jg
mov
or
out
mov
add
testb
int3
je
dec
sbb
mov
sub
outsl
push
push
push
mov
or
imul
or
add
fucomip
push
or
xlat
call
xchg
push
test
ljmp
push
std
ret
dec
cli
test
loope
add
cmp
pushl
mov
das
adc
call
ja
call
and
call
test
ss
mov
call
sub
mov
adc
jb
outsb
lock
hlt
jg
hlt
mov
nop
je
je
loope
mov
jecxz
adc
xchg
js
imul
or
jne
js
push
lock
je
test
and
pop
and
cmp
in
push
mov
imul
pop
call
push
jp
jno
loope
pop
movsb
ret
push
mov
add
lods
push
xchg
xor
cmpsl
call
ror
rcrb
decl
push
scas
push
loopne
mov
adc
dec
pusha
pop
add
jp
decl
mov
jb
fs
call
jb
mov
in
mov
jne
nop
xor
xor
stc
xor
ds
out
ljmp
jb
pop
out
xchg
test
ljmp
add
adc
jb
enter
mov
add
cmp
call
add
adc
pop
xchg
dec
inc
ret
inc
inc
jecxz
rolb
add
fsubr
jle
loope
ret
sbbb
mov
das
and
stos
lods
adc
mov
mov
push
decl
xchg
mov
push
insb
std
xor
or
or
stos
sbb
decl
incb
inc
iret
xor
push
pop
cs
data16
dec
insb
jo
je
and
call
jl
cmp
mov
pop
pop
rorb
aas
add
outsb
loop
cmp
mov
and
push
adc
dec
inc
rorl
jno
in
inc
xor
call
insl
mov
je
sbb
sub
or
into
push
gs
aad
cmp
jo
test
rclb
sarb
sub
and
jle
fbstp
add
push
fiadds
in
test
lcall
stos
hlt
mov
pop
add
add
add
ficomps
mov
rcrl
dec
inc
xorb
push
push
push
pop
nop
add
jg
mov
xor
xor
push
push
mov
inc
pop
int
call
jmp
xor
xor
and
push
mov
jb
test
mov
xor
jge
rolb
adc
and
lock
dec
add
jo
xchg
jl
add
push
test
adc
ljmp
push
jae
push
add
mov
dec
xor
ljmp
and
add
add
mov
xor
add
add
inc
add
mov
cmp
cltd
in
pop
ret
or
inc
cltd
mov
inc
adc
add
ljmp
aas
mov
insl
call
xor
inc
xor
cmp
jle
cmpl
js
sar
decl
in
mov
lea
scas
call
mov
push
xlat
ret
aad
pop
mov
push
mov
mov
lret
ja
mov
cmp
and
jle
and
add
push
dec
and
pop
hlt
add
and
shl
lahf
pop
dec
lock
call
and
xor
adc
call
xchg
call
int3
pop
f2xm1
or
hlt
sldt
mov
sub
jo
or
mov
dec
or
jbe
mov
xor
aam
mulb
loope
jbe
jp
int3
mov
movsb
loopne
push
mov
or
mov
mov
sbbb
call
inc
xor
call
cmp
ret
lret
adc
push
mov
jge
das
jno
push
and
nop
push
lret
xor
test
sub
dec
push
addl
data16
inc
ret
addr16
cli
pushl
inc
cmp
loopne
push
add
add
aad
push
es
mov
pop
fs
jnp
test
add
inc
sub
push
ja
adc
mov
add
aaa
ud0
push
pop
and
mov
lret
enter
sub
aad
mov
rorb
push
test
push
cltd
xor
and
icebp
jg
pop
xor
mov
roll
test
popf
pop
push
and
movb
loope
add
inc
aam
test
xor
cmp
dec
jo
jo
pushf
pop
mov
movsl
pop
add
mov
inc
push
and
stos
es
lock
test
stos
xor
sti
add
xor
push
mov
push
icebp
lcall
enter
data16
lods
xchg
rorl
lds
fs
lea
pop
mov
stos
call
mov
mov
or
clc
mov
sbb
adc
pop
cs
or
popa
pop
sbb
push
mov
mov
decl
test
icebp
xor
jge
cmp
movl
or
test
jle
jo
je
clc
lock
inc
adcb
mov
mov
mov
out
sbb
pop
inc
insb
js
insb
mov
fisubrl
mov
xchg
xchg
sub
dec
fsubrl
jb
call
jne
xchg
or
in
sub
add
jnp
cltd
lea
and
inc
cld
fildll
cli
call
inc
testl
dec
jecxz
push
dec
loopne
xor
sbb
rorb
push
jbe
lret
mov
incb
push
mov
cmpb
mov
inc
test
push
int3
pushf
sub
push
scas
cmp
or
mov
add
xor
jmp
add
push
cmp
mov
clc
out
push
pop
pop
fbld
pop
clc
lcall
and
mov
and
adc
mov
push
hlt
inc
call
jp
jae
inc
int3
mov
cmp
lds
repz
mov
mov
cmp
push
push
aaa
lds
icebp
imul
setbe
push
xor
std
push
sarb
in
shlb
dec
mov
test
jno
pusha
cwtl
lcall
ret
push
add
sbb
add
fbstp
cld
decl
addl
ja
mov
mov
xchg
mov
mov
sub
pop
mov
aaa
lock
push
pop
lock
sub
lock
sub
daa
mov
push
jbe
int3
inc
xor
scas
sub
adc
add
and
aas
adcb
and
sub
add
test
add
push
ja
inc
sti
jmp
and
xor
fistl
fsubrs
adc
cmp
je
sbb
int3
ret
mov
fs
pop
mov
jmp
mov
xor
cmc
or
jno
outsb
or
jo
add
popl
xchg
xor
push
mov
in
jo
adc
adc
repnz
cwtl
add
xor
clc
outsl
fcoms
aam
or
lock
cmp
incl
add
push
lea
cmp
faddp
lods
leave
push
pop
ret
loop
fisubrl
xchg
imulb
shrl
negb
clc
sbb
add
push
test
call
mov
jo
jno
or
sbb
dec
outsl
lock
adc
iret
movsb
sub
jle
out
jno
fidivl
adcl
mov
fcompl
push
inc
pop
cmpsb
xor
mov
je
loope
data16
and
inc
adc
adcl
xor
pop
test
add
sbb
inc
lods
mov
les
or
or
mov
xchg
cmpb
call
xchg
mov
inc
pop
push
inc
jg
sahf
lods
push
mov
or
movsb
add
call
push
mov
jp
xorb
cmp
das
adc
mov
add
xchg
xchg
push
add
jmp
inc
loope
jo
add
or
fadds
sub
sub
cmp
add
mov
dec
inc
pop
add
xchg
les
fwait
ret
js
xchg
testb
mov
push
cmpb
dec
fs
pop
sub
test
jl
adc
je
and
aam
orl
jmp
lea
ss
cmp
out
mov
or
dec
or
push
sbb
or
pop
int3
push
add
divb
dec
sbb
mov
add
sti
add
cmc
jne
ljmp
aad
push
clc
stos
adcl
mov
sbb
xchg
push
push
out
test
cs
cwtl
cmpb
ljmp
and
aam
lea
in
push
stos
sbb
push
and
nop
out
xor
or
mov
ja
sbb
adcl
fldt
lcall
insb
add
add
mov
xor
aam
push
jbe
xchg
testb
push
push
fbld
les
push
aam
mov
movsb
outsb
cmp
repz
push
out
adc
int3
mov
stc
outsl
test
test
jbe
call
and
inc
inc
loop
xor
jb
add
call
dec
ret
out
cmp
and
push
call
add
push
add
je
jb
pusha
pusha
scas
rcll
add
mov
aaa
add
call
loopne
sbb
xor
ret
pushf
ss
adc
int3
jp
xor
int3
add
jp
shll
inc
push
xchg
sub
sub
jo
inc
cmp
rcll
shll
pop
lea
add
repz
pusha
push
out
mov
mov
add
inc
insb
jp
push
sbb
push
aam
add
and
add
mov
cli
jg
orb
mov
add
inc
add
add
sarb
jbe
xchg
add
scas
push
subl
push
ds
rorl
aas
xchg
les
mov
or
cmp
sbb
mov
pop
push
jmp
push
push
sbb
shlb
outsl
loope
add
addl
shlb
cmpb
jne
jbe
mov
mov
lcall
dec
fdivl
add
mov
mov
inc
dec
mov
jno
out
push
pop
enter
cmp
push
call
aas
shrb
adc
push
jb
aam
xchg
jae
mov
incb
shl
ret
rorb
aam
lods
adc
pusha
insl
cmp
scas
cwtl
gs
sbb
push
outsb
push
sub
xor
cmp
das
pop
cmpsl
rcr
insb
and
test
adc
fs
add
pop
and
jne
jne
mov
loopne
jo
dec
xchg
mov
mov
push
sar
insl
clc
call
dec
cmp
aas
inc
pop
inc
lcall
fs
roll
add
add
xchg
dec
jo
fcmovu
mov
cmp
mov
add
or
filds
movb
jmp
add
inc
push
ljmp
jo
mov
test
test
push
push
fadd
add
mov
cld
push
test
add
icebp
test
or
lock
pop
xchg
adc
pop
push
xchg
dec
cld
pusha
sbb
jmp
call
ud0
lock
in
sti
jmp
or
loopne
mov
adc
mov
jg
xor
jo
cltd
movl
fdivs
sbb
into
mov
scas
lea
scas
pop
scas
mov
insl
movsl
adc
dec
or
push
add
or
popa
add
mov
push
ljmp
pop
loopne
sub
mov
inc
and
pushaw
cmp
ret
inc
add
loopne
push
js
push
or
cmpl
call
daa
filds
mov
js
xor
fs
sbb
xchg
icebp
push
and
pop
inc
cld
jp
push
scas
adc
loopne
jl
cs
push
in
in
mov
scas
sarl
fucomi
push
or
mov
pop
punpcklbw
ret
add
je
fdivs
mov
xchg
cmp
jg
bound
call
sbb
sbb
push
shr
jl
mov
jmp
fneni(8087
add
icebp
inc
adcb
sbb
loopne
or
mov
jmp
pop
ror
fcmovb
incl
push
push
je
jno
mov
jb
jg
sbb
cld
sbb
push
lea
push
or
mov
xchg
call
addb
cwtl
mov
push
mov
sbb
adc
add
xchg
hlt
idiv
subl
pop
pop
loopne
mov
inc
cmpl
and
mov
and
push
push
and
push
cmp
call
sub
dec
test
xchg
enter
outsb
inc
and
je
sbb
push
inc
lret
mov
enter
cmp
mov
fs
fwait
lea
mov
andb
shl
mov
mov
sbb
adc
cmp
mov
cli
xchg
mov
pusha
push
repnz
imul
shlb
mov
bound
or
dec
stc
popa
es
push
add
cmp
dec
cld
push
std
adc
xlat
call
inc
clc
loop
aad
and
xchg
sbb
mov
cwtl
mov
sub
adc
jo
dec
loop
xorb
lock
fbstp
fsub
lahf
pop
in
call
pop
lock
rolb
test
jbe
push
bnd
add
enter
je
pusha
jno
in
add
popa
adc
add
inc
mov
out
test
je
test
xor
mov
hlt
lods
jmp
inc
or
mov
inc
out
jecxz
fdivrs
test
dec
and
mov
std
call
bound
add
mov
jl,pn
andb
jmp
mov
imul
scas
ljmp
inc
mov
jmp
mov
inc
mov
out
js
mov
sbb
js
mov
outsl
mov
add
loopne
cld
mov
rolb
jge
or
add
pusha
mov
movsb
enter
popa
in
sbb
leave
xorb
cld
into
call
outsl
clc
popa
outsl
xchg
pusha
sbb
fldenv
mov
fs
jbe
push
loopne
lea
std
cmp
mov
pop
cltd
and
jge
mov
or
cwtl
cmpsl
hlt
push
insb
sub
in
mov
sbb
push
sbb
add
je
mov
and
jnp
add
pop
imul
mov
jle
or
mov
dec
iret
mov
icebp
aad
icebp
call
jb
sbbb
je
call
pop
dec
add
add
jecxz
jg
pop
push
je
jecxz
add
adc
mov
mov
test
fistpll
jno
xchg
sarb
xchg
lock
sbb
xor
push
lock
dec
sbb
jns
mov
nop
lock
out
add
arpl
mov
jne
sti
mov
imul
sub
in
mov
pop
jl
add
sub
hlt
jo
mov
mov
lds
in
cmp
bound
mov
inc
hlt
or
decl
add
xchg
push
cmp
and
and
lock
mov
lock
call
push
adc
jg
dec
xchg
lret
pop
shl
jne
cmp
sahf
gs
popa
push
xchg
xchg
adc
mov
adc
inc
push
rcrl
or
xchg
dec
cmpsb
inc
sti
xchg
add
js
jbe
sub
fadds
jo
adc
jo
jbe
js
adc
fnstcw
xor
packssdw
xor
mov
lock
sub
std
mov
clc
sbb
cld
dec
fcoms
xchg
mov
cmp
cmp
push
pushl
sub
mov
push
mov
es
sub
mov
sahf
and
xor
cltd
xor
push
ret
je
aad
add
cmpsl
push
cwtl
js
mov
cmpb
sub
xor
push
push
lock
sahf
push
mov
push
or
jecxz
pop
stos
mov
mov
leave
jmp
insl
push
clc
mov
sbb
sub
jg
fdivr
adc
cmpsb
pop
jmp
stc
cmp
int
insb
pop
fs
mov
les
pop
cwtl
mov
pusha
decl
fwait
test
fwait
xor
inc
jecxz
add
lahf
lock
rcrb
adc
insb
push
push
cmp
ja
cmp
adc
sub
fdivrs
add
ffreep
call
jmp
add
fwait
mov
cmp
add
mov
jmp
or
test
or
or
stc
or
pop
push
jg
mov
pop
ret
xor
mov
daa
aam
push
std
daa
push
cmp
adc
xor
dec
add
icebp
inc
mov
nop
mov
mov
sti
je
push
xor
cmp
repz
dec
push
adc
scas
pop
loope
incb
mov
adc
lock
sub
mov
jb
xor
pop
jbe
pop
pop
jbe
lock
cld
mov
push
add
mov
and
jbe
mov
jno
iret
dec
je
or
aas
popa
jo
mov
in
lock
add
mov
dec
das
add
test
xor
incb
cld
mov
mov
xlat
adc
mov
jae
shrb
hlt
push
daa
push
pop
cmp
inc
add
xchg
inc
data16
mov
xor
inc
and
test
je
pushf
dec
push
cld
mov
mov
mov
add
mulb
shr
test
add
mov
fsubrp
cmp
jmp
dec
fsubr
pop
mov
jl
je
dec
std
or
popl
inc
pop
icebp
es
add
mov
and
ja
pop
adc
clc
push
cld
js
aas
add
cmpsb
jl
in
inc
les
pop
repz
add
adc
xor
pop
aad
xchg
lock
mov
or
lret
mov
subb
loope
push
mov
or
or
mov
inc
loopne
incl
jbe
cld
add
iret
jbe
push
jo
in
add
dec
test
std
out
push
mov
out
push
xor
xor
sub
std
ja
mov
jbe
cmp
cmpb
outsb
add
add
adc
inc
repz
mov
push
inc
push
adc
pop
je
test
loopne
mov
pop
dec
incb
jo
mov
add
or
jecxz
fsubs
fists
cwtl
push
fmuls
pop
call
mov
pop
rolb
scas
push
pop
inc
add
mov
and
aaa
ljmp
xorb
inc
jo
jmp
call
add
and
mov
add
lock
mov
add
push
jl
ljmp
adc
jmp
jo
jl
sbb
or
fwait
sub
scas
adc
add
jno
add
push
imulb
mov
fcoml
sbb
repz
xor
push
xchg
dec
cmp
adc
lods
mov
adc
or
pop
repz
ja
push
sub
sub
mov
adc
and
dec
aad
push
cli
and
xchg
mov
es
sbb
pop
shrb
fs
repnz
pop
jbe
ret
aad
and
xor
loopne
std
xor
jge
push
mov
jo
add
jl
mov
stos
add
in
mov
mov
mov
jmp
imul
cltd
filds
call
xor
sub
or
inc
testb
fisttps
xor
pop
xchg
out
pusha
xchg
imul
jb
mov
call
lock
ss
pop
mov
out
xor
cli
testb
es
cmp
clc
inc
xor
cmp
insb
adc
push
jbe
pop
add
clc
push
inc
data16
sti
push
pop
jmp
test
cmpsl
lock
ljmp
sub
mov
add
adc
mov
jmp
jg
loopne
mov
testb
add
inc
jne
out
jbe
fwait
jmp
xorl
test
push
push
add
neg
jbe
pop
ret
xor
push
pop
ret
idivb
dec
cld
mov
stc
mov
push
pop
imul
aam
and
mov
pusha
jg
into
shl
xor
push
add
add
call
dec
jmp
inc
push
push
pop
sbb
and
mov
mov
adc
fnsave
je
into
dec
or
adc
vmaxss
mov
ficomps
jo
push
xchg
or
xor
add
inc
pop
negb
mov
push
push
adc
not
add
adc
adc
mov
test
push
inc
jnp
sub
fdivl
rolb
mov
mov
mov
inc
bound
faddl
or
add
inc
mov
shll
mov
scas
je
and
fdivrs
out
les
push
inc
out
xor
rolb
es
push
stos
inc
call
mov
cmpsl
sar
pop
sub
sub
mov
and
cmp
add
stos
mov
mov
lea
mov
mov
bound
jmp
call
out
mov
pusha
or
add
ja
or
push
xor
inc
sbb
sbb
mov
fidivl
mov
orb
inc
jmp
movb
sub
es
out
mov
xchg
add
gs
fistpll
push
dec
add
out
icebp
jno
in
and
addl
aaa
ljmp
jo
and
xchg
ror
and
add
pop
cwtl
pop
aad
scas
lock
clc
cmp
mov
fdivp
xchg
inc
cmp
decb
clc
movsb
sti
push
je
mov
call
pop
sbb
add
cmp
lock
adc
cmp
cmovns
sti
push
scas
lods
or
push
shrb
pop
enter
inc
enter
or
pushf
add
cmp
jne
or
mov
call
pop
mov
adc
sbbb
test
les
sbb
sbb
jmp
dec
mov
mov
rcr
ja
dec
cmp
adc
mov
imul
and
add
cmpsb
rorb
inc
pop
add
movsb
mov
test
shlb
rolb
sub
rorb
mov
mov
int3
cld
pop
adc
ljmp
pop
lods
adc
or
dec
mov
jge
or
jp
rol
jge
loope
push
mov
icebp
push
pop
push
nop
roll
mov
adcl
cmpsb
repnz
jmp
repnz
jecxz
xchg
or
add
loop
add
cmpsb
cmp
inc
mov
loopne
push
pop
fwait
dec
loopne
imulb
sbb
mov
daa
testb
cmpb
push
popa
subl
fildll
or
mov
rclb
add
sub
loopne
inc
aaa
mov
dec
je
lea
je
mov
les
fdiv
add
cmp
add
filds
ss
sbb
push
jecxz
hlt
addr16
out
push
sbb
sub
mov
dec
fadd
or
pusha
cld
lcall
testl
pop
loopne
jbe
sbb
iret
ret
xchg
dec
ljmp
inc
rol
push
int3
aas
push
es
or
addl
dec
mov
mov
mov
lahf
scas
loopne
push
mov
push
xor
mov
out
fdivrs
call
popf
rolb
cmp
hlt
or
xchg
lds
push
and
leave
dec
mov
clc
daa
jb
std
rorb
or
pusha
push
mov
xor
jbe
jecxz
push
and
pusha
or
pusha
add
pushf
mov
incb
pusha
sub
pop
sub
loopne
and
pusha
pop
pop
and
adc
xor
outsb
pushl
das
add
sarb
inc
sub
pusha
cmp
outsl
outsl
and
int3
jp
loopne
or
bound
popf
xor
inc
ret
jae
dec
popa
add
jp
gs
mov
dec
push
push
roll
inc
jnp
loope
loopne
popa
inc
add
add
loope
add
lahf
loopne
xchg
and
cmp
jo
pusha
cmp
jp
std
aas
mov
in
and
jl
and
loopne
loopne
roll
sarb
add
cmp
push
mov
push
mov
test
jmp
pushl
cld
inc
jl
or
inc
pusha
add
flds
popa
push
out
push
clc
stos
je
js
bound
push
or
pusha
pop
add
punpcklwd
nop
mov
loopne
pusha
gs
pop
adc
push
fsub
pop
cld
dec
aam
mov
mov
fsubs
hlt
decl
xorb
data16
add
jp
jle
push
sti
lcall
pop
popa
add
and
mov
jp
xor
and
sbb
rorl
in
fs
jle
jl
pusha
pop
mov
lret
popa
das
fmuls
jg
movzbl
repnz
pusha
adc
add
cmp
loope
shl
ljmp
loopne
imul
pop
jbe
lods
cmpb
inc
push
sbb
jo
adc
pop
add
addr16
test
jg
std
sub
push
push
push
inc
ret
pusha
mov
cmpsb
js
movsl
cld
or
hlt
inc
dec
xorb
pushl
jmp
je
push
pop
fs
pusha
adc
sar
mov
dec
sub
adc
pusha
and
subb
add
pusha
push
push
jle
lock
add
mov
inc
pop
cmp
call
add
hlt
xor
mov
push
lea
mov
mov
loopne
push
in
add
lea
add
scas
push
xor
jl
jne
fs
in
sub
xchg
ror
notb
pushl
push
push
in
popa
jb
data16
inc
pop
pusha
and
jbe
lock
sbb
pop
call
and
loope
mov
xor
jmp
lcall
clc
jmp
addl
outsb
add
sub
ss
inc
dec
mov
add
adc
mov
sbb
push
jp
pop
dec
loopne
or
add
std
orl
js
inc
and
push
shrl
push
in
mov
push
inc
jmp
test
loopne
or
pusha
add
loopne
or
cli
pop
mov
adc
or
mov
add
faddl
xchg
inc
fdivr
push
ret
push
mov
and
mov
setne
dec
and
movsb
or
rol
incl
jle
jo
push
and
mov
cmp
movsb
sub
mov
add
outsb
or
add
cwtl
lea
in
fdivrl
pop
shl
jecxz
out
adc
cld
test
cmc
dec
mov
in
inc
loopne
ljmp
xlat
fwait
jne
mov
add
mov
loop
outsl
scas
jp
repz
icebp
adc
dec
mov
add
mov
jo
add
add
push
roll
mov
in
cld
inc
mov
mov
jne
mov
lret
jo
inc
adc
xor
jne
jo
cld
int
fists
scas
lea
scas
call
add
add
push
push
aaa
push
pop
add
stos
mov
es
push
cli
idiv
mov
cld
xor
mov
repnz
sbb
xor
and
cmpsb
sbb
mov
xchg
std
mov
adc
outsb
and
cmp
jp
mov
loopne
add
push
mov
xor
adc
ljmp
lock
push
fidivs
call
add
call
dec
pop
lock
dec
jmp
push
add
xor
pop
mov
inc
loop
bnd
fdiv
push
sarb
adc
rcrb
aam
mov
ds
mov
mov
lock
scas
sbbb
inc
js
lock
sbbl
lock
push
pop
inc
mov
scas
shlb
inc
inc
adc
inc
or
loopne
enter
lods
push
xor
or
jbe
add
or
sti
imul
insb
jno
adc
cs
pop
inc
sbb
mov
decl
call
mov
jo
repnz
call
add
movsb
icebp
fcoms
lock
shlb
outsb
jne
lock
pop
inc
pop
das
pop
data16
jo
jne
imul
cmp
daa
call
inc
aas
mov
push
mov
mov
sub
loopne
push
add
xorb
or
xchg
push
jmp
add
lahf
jl
je
and
testb
mov
in
sbb
or
push
adc
xor
fdivs
aaa
mov
mov
insb
add
jg
pop
shr
out
add
jo
out
push
mov
adc
jle
cmpl
xchg
inc
cmc
push
or
outsl
push
stos
loopne
call
in
jo
lods
ljmp
push
push
call
or
push
push
jb
push
je
sti
out
lock
call
mov
xor
push
cmpsb
lock
je
mov
adc
xchg
pop
sti
mov
cmc
cmp
xor
pop
jmp
fbstp
mov
xor
jg
adc
or
and
loope
add
pop
lods
fbld
or
loop
dec
or
cmp
test
add
xchg
xor
mov
scas
pop
xor
call
js
xchg
jne
mov
jnp
int3
and
dec
add
or
add
mov
repnz
adc
jb
icebp
add
cwtl
test
adc
jb
je
pop
mov
jmp
addl
cli
adc
repz
mov
repnz
jg
sbb
mov
pop
inc
mov
aas
repz
cmp
clc
jg
divl
sbb
sub
pop
out
loopne
rclb
mov
jb
test
movsb
in
aam
mov
jl
das
movsb
jmp
call
jbe
inc
sbb
jle
js
in
push
movsl
push
pop
fidivs
mov
je
jne
les
inc
mov
lock
test
sub
or
pop
or
pop
popf
adc
insb
xor
jbe
adc
negl
jno
mov
cltd
xor
int3
and
test
std
push
push
test
not
je
jecxz
test
jo
and
and
mov
pop
and
and
pop
mov
push
clc
shll
dec
fdivs
or
lock
xor
sti
xor
sbb
sbb
aam
xlat
xor
les
cmp
add
stc
xor
out
inc
cmpb
pop
jo
push
test
mulb
jg
wrmsr
inc
jne
and
lock
jb
and
add
jmp
jg
pop
mov
notl
test
xor
jne
xchg
aas
jmp
jo
sub
in
clc
outsl
mov
mov
adc
lock
push
test
cltd
data16
ret
xor
xchg
pop
lea
add
jmp
out
push
pop
inc
jbe
xor
ret
pop
dec
ret
out
das
push
shlb
adc
push
xor
push
jl
sub
clc
mov
inc
popf
inc
shll
mov
rorl
push
jp
lds
pushl
dec
or
hlt
jg
jg
inc
xor
add
or
push
decl
dec
lret
inc
ja
adc
es
in
mov
mov
push
jmp
cmp
rcr
push
orb
sbb
xchg
testl
add
into
test
sub
xchg
call
pop
ja
add
cmp
bound
scas
push
js
imulb
cld
jno
imul
adc
push
int3
rorb
pusha
mov
outsl
lea
push
outsb
gs
push
and
arpl
xor
add
sti
xor
pop
imul
adcb
fists
call
add
je
inc
fildl
inc
pop
jae
jno
ljmp
clc
mov
ljmp
test
xorb
loop
mov
xchg
lods
adc
add
sbb
and
scas
es
fsubs
hlt
insb
cmp
shrb
sub
push
jae
sbb
pop
pop
mov
je
incb
xor
imul
mov
or
call
adc
jb
push
add
and
sbb
jle
in
es
notb
call
push
incb
jo
xchg
push
xchg
sub
sarl
add
xor
add
notb
add
sbb
dec
jle
mov
mov
add
sub
sbb
dec
push
mov
add
sbb
jle
push
adc
test
jg
rolb
mov
or
fidivl
cmp
xlat
pushl
push
jmp
xor
in
fsubrp
xor
or
je
jmp
jg
pop
mov
jae
mov
mov
push
movsb
scas
je
js
loopne
mov
jle
jbe
int3
add
mov
shlb
mov
add
jg
cld
cmp
ja
loopne
jg
aad
pop
pusha
dec
dec
push
add
testb
mov
cmpb
pushl
call
xor
add
adc
sub
jp
insb
adc
dec
insb
push
mov
repz
xchg
hlt
fists
aaa
inc
mov
je
repnz
sub
sub
add
jle
mov
outsb
in
or
dec
sbb
mov
rcr
test
bound
nop
les
out
cltd
sub
cs
pusha
fldl
adc
xchg
jmp
dec
cwtl
mov
rcrb
jge
mov
popf
add
hlt
ja
or
xor
movl
dec
or
es
ds
cmp
add
lret
add
fs
jl
pop
jo
mov
inc
test
jae
adc
mov
add
mov
add
pop
jmp
fildl
adc
scas
push
mov
stos
lock
adc
mov
nop
add
pop
sbb
push
adc
fwait
fwait
adc
test
adc
jbe
sub
shl
scas
or
mov
sarb
out
jge
test
pop
lea
xchg
adc
inc
hlt
dec
add
popa
sahf
dec
sub
push
hlt
andb
decb
cmpl
addr16
and
cs
push
push
adc
ret
add
add
je
add
inc
addb
jle
and
ret
loop
add
test
addb
lock
jbe
mov
sub
orb
rolb
orb
loopne
jecxz
mov
pop
push
inc
decl
sub
mov
add
jge
ret
mov
or
cmp
lock
sahf
xchg
or
mov
scas
cmpb
mov
xorl
inc
das
mov
scas
inc
cld
inc
and
adc
std
jns
cmp
ljmp
inc
inc
push
cmp
push
cld
dec
add
fdivr
test
adc
add
sbb
pushl
fistpll
rorb
dec
add
or
mov
dec
jne
jg
push
invd
jp
add
jb
call
mov
push
ret
gs
ret
xlat
test
lea
push
mov
lock
dec
and
mov
imul
lret
jnp
inc
data16
rcrb
jg
push
or
cmp
call
push
cmc
sbb
pusha
andl
lock
dec
and
cs
orb
fstpt
fsubs
jle
dec
or
mov
loope
inc
lret
clc
out
ds
and
js
fimull
mov
and
les
and
jb
adcb
mov
dec
push
in
jbe
test
mov
mov
mov
push
xor
div
test
pop
pop
mulb
mov
mov
testl
fadds
sbb
add
sbb
jl
popa
mov
jmp
loopne
cmp
sarb
arpl
or
fwait
das
push
adc
je
xchg
ror
inc
sti
data16
aas
inc
or
rol
and
or
xorl
xchg
jo
aad
inc
mov
jmp
add
jmp
push
stos
ret
test
add
cmp
mov
push
rclb
or
out
xor
rcrl
aam
dec
cli
jg
pop
mov
stos
adc
sarb
mov
cmpsl
cmp
fbld
rolb
cmpsb
in
jmp
mov
loopne
int3
leave
cmp
lock
jg
dec
sti
nop
test
loop
cmp
mov
mov
negb
decb
ja
pushl
or
add
mov
jg
jbe
mov
call
pop
jle
push
xor
loop
incb
add
loope
dec
and
mov
or
xor
add
push
inc
jmp
mov
add
mov
je
sarl
and
fildl
push
jl
pusha
mov
jmp
add
add
or
mov
outsb
test
js
or
loopne
cmpsb
scas
testb
mov
je
jg
sbb
add
dec
lret
adc
jmp
mov
sbb
add
pop
lret
fs
cli
incl
mov
or
add
loope
test
stos
cmp
xor
or
insl
adc
jmp
jmp
inc
loopne
bound
fldt
leave
incb
clc
pusha
push
adc
in
ljmp
jg
lock
jmp
aam
inc
cmp
jb
cmp
mov
pop
js
or
cmpl
mov
mov
mov
or
popl
inc
inc
pop
jmp
lea
add
jbe
je
xchg
lea
rolb
mov
mov
mov
pusha
lods
add
rcrl
dec
add
loop
stos
lods
mov
cltd
adc
sar
faddl
sub
mov
jns
lea
jp
add
xchg
dec
xchg
outsb
mov
testb
aas
clc
popl
cmpb
add
loopne
movl
dec
jge
jle
xorb
ds
cltd
in
mov
cmc
jmp
mov
jb
add
je
xor
xchg
icebp
xorb
add
sub
adc
xchg
and
pop
mov
decb
popa
shlb
loopne
cmp
pop
mov
imul
data16
lea
out
and
hlt
jmp
pusha
xor
and
add
pusha
xchg
out
and
addb
push
je
inc
icebp
or
pop
add
cmp
jecxz
sbb
adc
xchg
loopne
call
repnz
int
inc
call
aad
loop
inc
inc
mov
ret
loope
jl
sbb
popa
dec
push
rcll
adc
lret
inc
daa
xchg
lret
repz
loope
inc
and
inc
push
shlb
lret
pop
sub
cmp
and
and
or
stos
adc
fs
testl
inc
pop
jno
jbe
or
sub
ret
or
pusha
dec
popa
aas
lret
aaa
xchg
lret
push
push
cmp
je
pusha
or
add
sub
shll
add
fbld
je
jno
dec
sbb
add
jge
mov
and
pop
adc
jo
cmp
xchg
xor
mov
in
arpl
or
push
pop
adc
imul
dec
movsb
xor
mov
push
out
jp
popf
lcall
mov
inc
add
icebp
dec
enter
std
aaa
jne
push
add
icebp
and
testb
clc
ffree
push
mov
dec
add
call
test
lods
lock
or
jno
ret
aam
mov
inc
add
push
xor
sub
fldt
xor
sbb
test
cmp
xor
add
addr16
adc
mov
cmp
ljmp
movsb
orb
dec
fst
or
and
lock
stos
fsubrp
jbe
dec
sbb
lock
mov
pop
xor
gs
subl
cld
pop
mov
jo
mulb
lock
adc
sbb
lcall
xchg
cmp
test
icebp
add
adc
and
dec
add
dec
cmpl
cmp
nop
stos
es
mov
xchg
add
fnstenv
insb
test
sbb
fildll
vmwrite
dec
xor
insl
loopne
rolb
add
fisttpl
popf
pop
dec
push
out
shlb
cld
enter
mov
notl
xor
lds
sub
jo
xlat
adc
or
inc
cmp
inc
sub
mov
call
jg
popa
jo
les
jmp
outsb
mov
cmp
outsl
push
cld
stos
pop
mov
jmp
testb
sbb
add
fldenv
cmp
push
aas
je
inc
ret
xor
and
hlt
cmc
add
adc
sub
and
add
hlt
cmp
push
dec
sub
mov
mov
sub
addb
inc
cwtl
add
xor
mov
mov
lock
mov
jle
sbb
pop
pop
and
jae
stos
and
sbb
call
and
sub
xor
or
sub
or
xchg
add
jne
rcrl
in
pushl
inc
add
mov
je
inc
insb
sub
ret
cmp
stos
insb
adc
push
push
cwtl
mov
xor
mov
xorl
jae
mov
add
jp
mov
mov
repz
pushf
jo
mov
mov
fstpt
cli
ja
mov
mov
sub
loopne
push
lds
loopne
loopne
lcall
leave
jmp
xchg
sbb
leave
push
test
das
sbb
mov
lea
inc
outsb
add
les
sbb
rorl
ss
push
into
add
sub
inc
mov
pop
sub
ret
dec
lock
adc
add
aam
movsb
push
call
mov
adc
inc
addb
cmp
lcall
outsb
cmp
setne
push
sub
ret
test
repz
dec
xor
add
jle
mov
inc
sbb
fs
inc
lock
stos
mov
test
and
or
adc
xor
pop
jnp
icebp
mov
inc
les
and
test
or
jl
test
icebp
or
ds
fildl
dec
pop
xor
add
sbb
decl
or
adc
or
xor
inc
idiv
xor
sbb
adc
push
aam
testb
add
lock
sub
pop
shlb
dec
add
adc
lcall
jbe
clc
dec
repnz
inc
neg
add
cs
adc
jmp
sbb
add
sarl
mov
sbb
jl
or
mov
push
add
dec
sub
cmp
and
and
je
cmp
je
ret
push
xchg
mov
cmp
cli
jo
lcall
pusha
pcmpgtb
mov
fdivl
adc
lock
mov
ss
xor
inc
push
lds
cli
fbld
mov
cmp
ja
ljmp
and
or
aaa
je
insb
nop
fists
lods
cmp
pushf
aam
cmpsb
pop
xor
subb
std
outsl
in
pop
xorb
and
cmc
adc
mov
jnp
jo
adc
test
pop
and
dec
das
push
jge
insl
mov
bound
adc
loope
xor
rol
shl
shlb
or
add
sbb
fwait
pop
orb
adc
push
sub
xor
add
repz
mov
xor
repz
xchg
test
xchg
or
shl
pop
cmp
push
xor
pop
push
cmp
pop
mov
add
shl
idivb
lock
mov
lock
pop
dec
jo
sbb
ljmp
jb
adc
xchg
popf
ret
add
jmp
test
insb
test
int
pop
mov
push
mov
or
jbe
repz
jnp
jb
or
add
jns
icebp
add
xchg
pop
lods
push
dec
xor
ret
std
jae
shl
ret
fcoml
mov
pushf
add
or
add
mov
rcll
push
dec
jne
push
jge
orb
inc
rclb
hlt
ret
inc
add
call
and
dec
jbe
ret
dec
ja
mov
add
jmp
jno
stos
rorl
xor
mov
nop
add
nop
ret
cmp
jne
inc
lock
add
je
add
add
clc
add
or
mov
mov
hlt
push
dec
fdiv
inc
adcb
stos
and
pop
inc
mov
xor
jo
xor
mov
leave
or
jo
sub
jbe
adc
cmp
jl
mov
push
or
clc
pop
mov
adc
mov
jnp
jo
add
data16
jle
mov
cld
nop
insb
inc
pop
cmp
sbb
rolb
mov
out
cmp
xor
out
add
adc
rcr
push
lock
mov
add
add
addr16
mov
jbe
jmp
incl
addl
lock
add
mov
cmp
gs
jg
add
xor
lock
add
ret
imul
clc
nop
pop
lods
push
jo
push
idivb
or
mov
imul
or
sub
jo
mov
sti
adc
or
add
lock
and
jmp
mov
cli
in
add
xor
cmp
jl
and
pop
mov
mov
fisttpl
mov
xor
add
mov
add
cld
fldcw
jecxz
mov
pop
cli
mov
adc
cmpb
adc
add
jl
add
add
push
cltd
dec
push
adc
in
jle
flds
adc
xor
jbe
int3
in
jbe
push
xchg
and
fdivr
sub
mov
adc
push
add
dec
or
jbe
pshufw
add
xchg
xor
cmp
scas
mov
inc
cld
sbb
or
in
insb
xor
dec
add
add
sarb
mov
add
addb
xor
add
pusha
jmp
int3
push
orl
adcl
jb
adc
dec
mov
push
mov
das
lods
adc
lock
bnd
ljmp
inc
jmp
add
lock
loope
xchg
add
movsbl
es
pop
push
addb
or
mov
pop
inc
push
sbb
fiaddl
jne
xor
orb
mov
jp
ret
jecxz
mov
mov
loopne
sub
jo
mov
sub
push
adcb
inc
dec
lock
inc
inc
cmp
stc
mov
imul
fimuls
add
in
jge
cwtl
adc
rclb
in
pand
loope
rolb
jl
lods
sbb
mov
cmp
jbe
adcb
push
pusha
imul
pop
add
adc
cmp
clc
adc
gs
dec
hlt
dec
mov
inc
jnp
pop
call
rolb
notb
mov
cld
stos
add
add
xchg
rorl
rclb
stc
jl
sub
mov
mov
inc
mov
ret
xor
test
or
xor
in
mov
sub
sbb
jp
adc
jl
adc
add
rolb
add
fiaddl
outsb
or
cs
inc
jl
call
mov
jbe
cmpsl
mov
cltd
mov
inc
movups
mov
adc
xchg
jge
test
pop
loopne
dec
and
push
and
mov
push
xchg
sbb
sbb
sarb
addb
loopne
daa
aaa
or
orb
jecxz
xchg
lcall
call
lahf
rorb
add
inc
out
sbb
outsl
clc
sbb
repz
cmp
or
lock
inc
mov
jno
movsl
ja
in
inc
inc
cmp
cld
adc
rcr
aaa
dec
sahf
inc
rcr
rorb
xor
add
out
jg
or
jp
cld
add
add
fcmovb
cwtl
cmp
mov
lock
adc
scas
shrb
ret
xor
ret
mov
push
incl
in
les
movl
lcall
add
scas
jp
popa
adcb
loopne
subb
jbe
dec
scas
ljmp
loopne
jg
sbb
cld
dec
xor
call
mov
sub
adc
or
repz
sbb
cmp
and
lret
sub
loop
cmp
in
js
mov
mov
push
mul
and
add
out
cmp
jle
popa
jnp
lret
enter
cltd
xor
inc
cmpsb
fstpt
mov
or
sbb
pop
or
inc
mov
sbb
ret
mov
out
add
jmp
leave
add
adc
mull
lock
pop
test
test
and
loopne
mov
test
pop
sub
jo
adc
pop
xlat
stos
or
jne
adc
les
ljmp
les
pusha
mov
add
or
push
or
ss
ret
cld
push
cld
or
lret
sbb
test
jmp
mov
or
and
xor
adc
pop
loopne
or
icebp
jg
icebp
adc
imul
imul
jmp
or
and
jb
sbb
dec
xor
mov
add
inc
pop
and
or
mov
rcrl
push
mov
lcall
loope
lret
pop
ret
cmpb
pusha
cltd
push
add
dec
pop
imul
push
pusha
mov
ja
mov
fs
int3
in
dec
sub
fwait
dec
loopne
xor
add
sbb
es
dec
loop
mov
push
push
pop
jg
push
push
or
adc
insb
cmp
ljmp
fs
bound
fisttpl
cwtl
push
cmpsb
lods
mov
mov
jg
mov
pusha
add
or
add
ret
cli
and
vmread
sub
clc
adc
and
adc
cld
loope
cmp
jo
fiaddl
push
pusha
int3
dec
in
arpl
call
jb
dec
jo
add
nop
jbe
lea
mov
xchg
es
jne
or
inc
fadds
and
je
sub
dec
sub
xlat
ret
in
dec
jnp
repz
test
inc
sti
add
dec
sub
jg,pn
mov
pusha
jmp
add
sarb
decl
inc
cmc
and
jmp
dec
cld
inc
movb
mov
mov
pusha
adc
inc
addl
mov
fistpl
and
cli
bound
call
pusha
or
arpl
std
pusha
mov
add
pop
nop
or
inc
jmp
cmp
popa
jl
jg
xor
mov
cmpsl
add
inc
fsts
mov
pushf
movb
sbb
add
mov
dec
push
bound
loopne
das
outsb
int
fisttps
mov
lock
sarb
add
mov
cli
fbstp
hlt
add
fwait
and
xor
add
sarb
mov
std
add
add
adcl
xchg
jo
mov
aaa
pop
pusha
lcall
add
xor
mov
mov
cmpsb
jle
or
add
inc
cmp
xor
ret
mov
icebp
inc
ret
jo
aaa
inc
add
mov
xor
inc
out
inc
and
mov
idivb
add
jmp
add
jmp
push
testb
and
jnp
mov
shlb
mov
mov
jg
dec
xchg
push
popa
dec
push
mov
jo
xor
jl
aaa
jg
add
test
dec
loopne
mov
adc
fisttps
lock
jle
adc
outsb
mov
call
ret
sub
add
add
add
pop
or
pop
jg
pop
jnp
lock
mov
jle
es
xor
xchg
in
push
jno
xchg
or
or
push
inc
adc
inc
xchg
mov
add
mov
insl
cli
cmpb
cmp
jae
test
jle
sbb
mov
sbb
push
jecxz
add
add
xor
jno
loop
filds
loopne
aam
push
mov
add
add
jmp
pop
inc
repnz
add
mov
cmp
mov
inc
xor
fwait
fbstp
sub
mov
aam
cmp
add
xor
icebp
lock
jnp
in
add
or
jo
es
push
adc
xor
push
icebp
xor
adcl
cwtl
jmp
mov
pop
hlt
cs
stos
je
rcrb
daa
jae
jo
jo
or
outsl
jg
adc
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
sub
or
cmp
add
jb
loope
fbld
jmp
xor
rorb
mov
fimuls
mov
mov
js
leave
fs
adc
sub
lock
mov
shlb
jo
adc
adc
adc
repz
notb
mov
push
jl,pt
call
lahf
mov
jl
cli
lock
rorl
adc
repz
xlat
add
in
jg
dec
test
lock
mov
pop
mov
pop
imul
xor
push
sbb
imulb
jmp
repnz
xor
mov
pop
mov
inc
mov
jmp
fnstenv
in
divb
jb
push
mov
push
push
mov
adc
fdivrs
sahf
jne
fsubrp
mov
jbe
dec
jge
mov
into
lea
mov
testb
call
or
adc
jmp
xor
adc
rcrb
das
cld
ret
lock
push
or
cmp
push
nop
adc
add
filds
xor
xor
pop
arpl
je
fwait
cmp
test
pop
lock
sub
jbe
push
outsb
fwait
scas
jns
jnp
cmpsl
sub
push
adc
popf
add
lcall
sub
repnz
add
popf
add
inc
data16
pop
popf
fidivl
jg
mov
jo
call
lods
cmp
jae
add
pop
add
les
adc
jae
xor
pop
icebp
clc
popa
orl
movl
add
and
jmp
xor
push
fdivl
mov
or
rclb
cmp
lea
xlat
mov
mov
lea
icebp
jmp
push
add
mov
xchg
addb
jle
fcmovnbe
or
sub
xor
cmpsl
add
add
pop
andl
jne
insb
imul
cld
lcall
or
xchg
add
ss
mov
jne
mov
and
mov
adc
xchg
push
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
mov
mov
inc
stc
cmp
add
cmp
jmp
push
jmp
clc
or
dec
dec
fistpl
incb
decl
std
lock
inc
fisttps
sub
mov
cld
decl
out
jo
or
adc
shr
insb
push
or
or
pop
orl
sahf
loop
cli
sti
mov
pop
xor
or
add
jg
inc
jmp
mov
std
call
mov
add
je
jmp
mov
dec
pop
mov
mov
into
nop
dec
xor
add
jno
jno
mov
rolb
int3
xchg
add
mov
and
gs
rclb
scas
test
add
mov
enter
and
sbb
rclb
mov
xor
les
xor
fistpl
jl
mov
add
loopne
inc
and
push
add
mov
jns
negb
inc
jo
xor
fildll
jo
or
pop
sbb
pop
lock
outsb
or
and
out
push
adc
hlt
and
out
jge
ficoml
or
pop
jo
add
ret
shr
loope
jnp
inc
lds
mov
enter
fs
sbb
jbe
push
and
fcoml
pop
negl
and
ficoms
mov
mov
and
dec
mov
add
dec
gs
adc
sbb
sbbb
loop
and
push
sbb
aas
repz
fistl
pop
jp
or
mov
inc
add
inc
push
jnp
js
jle
jae
push
jecxz
decl
les
and
add
clc
int
pop
dec
mov
lret
add
nop
fiadds
push
xchg
inc
push
add
incb
aaa
xor
xor
loope
je
sub
js
jl
mov
lcall
aam
add
mov
mov
ffree
inc
aam
jnp
jg
call
popf
shrb
bound
stos
cmp
pop
hlt
pop
push
fsubr
and
andl
xchg
fistps
icebp
addb
nop
add
call
clc
test
ja
andb
fldl
andl
test
xchg
jno
add
stos
es
and
inc
pop
pop
add
stc
inc
cmp
push
or
ljmp
out
movsl
incl
mov
adc
sub
addb
mov
mov
cmp
sbb
pushf
scas
call
mov
inc
rclb
mov
rcll
rorl
rep
or
orl
push
push
aam
dec
add
pop
je
or
rclb
xchg
mov
xor
fdivr
outsl
call
add
add
hlt
inc
add
cld
xchg
inc
add
shlb
addl
adc
stc
test
add
sbbb
add
and
pop
and
ret
je
adc
push
push
or
add
clc
outsl
clc
or
aam
xchg
pop
inc
inc
rclb
add
mov
rclb
sbb
mov
add
aad
inc
aad
mov
enter
pop
shlb
sar
clc
pop
push
push
add
push
sarl
adc
add
lea
fcoml
mov
add
adcb
mov
out
xchg
inc
and
jmp
js
rclb
cld
push
and
mov
dec
adc
shll
rclb
mov
aas
lock
xchg
rolb
rolb
sarb
pop
mov
bound
pushf
fdivr
in
push
xor
xor
cmp
sar
incl
adcl
dec
pop
aaa
xchg
sub
and
mov
stos
es
ljmp
and
pop
lea
lock
fstpt
pop
je
out
in
cmp
mov
out
dec
fcoml
push
je
ret
add
cmp
into
pushf
adc
pextrw
or
or
ret
push
jmp
ffreep
sub
call
adc
decl
loop
testl
jmp
mov
jmp
pusha
adc
jb
out
pavgb
sub
adc
mov
mov
dec
call
std
adc
loopne
add
and
mov
jecxz
push
xlat
loopne
xor
in
bound
adc
loopne
pop
cld
xchg
loope
jmp
adc
enter
xchg
add
pushf
fisubl
je
cld
pop
and
or
mov
pop
pop
je
jl
sbb
jecxz
lods
mov
inc
or
mov
pop
pop
push
popl
jo
sbb
dec
fisttps
lret
and
and
loope
xor
xlat
mov
adc
loopne
call
loope
inc
cmp
mov
mov
jae
loopne
mov
jp
addl
in
sub
mov
add
test
xchg
or
hlt
pop
push
inc
es
mov
add
clc
dec
pop
and
ss
cmp
lcall
insb
int3
loopne
add
xor
jl
pop
test
cli
or
call
pop
sub
mov
incb
cmpsb
pusha
dec
push
xchg
and
outsb
adc
popa
adc
roll
subb
dec
enter
ljmp
sub
icebp
xchg
loope
push
or
icebp
jnp
mov
mov
cmp
test
dec
and
xorb
adc
aaa
test
decl
das
xchg
sbb
sbb
addr16
push
jne
lods
sbb
mov
ljmp
pusha
movsb
loope
dec
sub
jecxz
pusha
adc
sub
dec
push
jecxz
pusha
mov
test
pop
lock
sbb
jmp
xchg
shr
push
push
push
lock
or
ret
loopne
sahf
loope
mov
je
and
xor
shl
inc
xchg
popa
add
push
pop
add
mov
or
xor
mov
faddl
inc
lods
daa
popa
dec
loopne
fs
fistpll
add
cmp
adc
xchg
cmp
aad
and
pushf
lea
cmp
ret
push
scas
hlt
add
outsl
stos
clc
call
mov
push
fsubs
inc
jmp
ror
fistl
das
loop
pushl
arpl
jecxz
cmp
pusha
pop
popa
cmp
shl
cmp
testb
jecxz
popa
mov
sti
pop
or
xlat
je
popa
pop
lret
push
sub
jno
jmp
or
and
in
and
loopne
leave
pusha
fwait
pop
ret
and
nop
movsb
stos
add
mov
pop
lcall
pop
fs
xor
es
ftst
repnz
xlat
bound
add
clc
pop
andl
mov
sub
fildl
pop
add
pusha
loop
clc
and
jo
sub
or
xor
mov
sahf
pop
sbb
jb
loopne
ret
call
ljmp
and
add
ja
mov
and
sbb
lea
cmp
inc
rclb
dec
adc
and
xor
sar
cmp
lock
pop
fst
pushl
adc
and
ja
addb
pop
mov
xchg
cwtl
hlt
das
mov
call
cmp
push
mov
push
mov
sar
ret
or
jo
adc
or
xchg
incb
push
xchg
mov
hlt
movsb
pop
loop
add
cmp
push
and
add
add
dec
jp
jno
mov
mov
jmp
in
cmp
sti
mov
lea
ss
mov
jp
push
dec
mov
sahf
adcb
inc
ret
or
test
add
xor
rcrb
add
lds
add
or
mov
mov
or
add
adc
jmp
or
nop
std
xor
or
jmp
or
lock
add
pop
add
add
add
jo
roll
nop
or
pop
inc
in
and
push
in
add
rolb
sub
jo
pop
fistl
jo
push
addb
push
jnp
sub
mov
sbb
inc
lahf
sbb
adc
inc
push
sub
or
incl
lds
xor
push
add
xlat
pop
mov
and
and
int
imul
push
jl
mov
cmpsb
imul
or
mov
xor
adc
push
push
fcoml
lock
dec
push
aas
int
pop
insb
test
std
xor
pop
aad
mov
sbb
cwtl
call
and
cmp
add
add
fsts
add
push
mov
addr16
loope
and
push
insl
xchg
mov
inc
mov
cmpsb
mov
mov
xor
add
xor
mov
into
mov
dec
repnz
icebp
das
sbb
push
out
dec
lds
out
repz
in
sbb
loope
and
add
and
fs
and
and
in
add
or
sub
sub
mov
add
das
add
sbb
cmp
xor
xor
adc
add
add
mov
fisubrs
dec
nop
mov
adc
mov
mov
push
insb
or
movsl
push
fiaddl
lock
or
adc
and
cld
inc
or
subb
je
pop
jo
pop
fistpl
rolb
jo
xor
cmp
xchg
xchg
pop
xor
outsl
loop
add
or
xchg
mov
sti
inc
jns
push
pop
or
adc
dec
ljmp
jmpw
fildl
mov
addl
or
mov
dec
or
push
sbb
or
and
fwait
add
loope
fcmove
cld
ret
dec
aaa
xchg
decl
jbe
add
mov
idivl
add
nopl
out
pop
pushf
inc
ret
stc
aam
jno
shll
adc
outsl
mov
jne
cmp
dec
std
mov
add
jge
push
jmp
inc
sbb
mov
hlt
push
aam
jbe
inc
add
movzwl
rcrb
cmpsb
inc
inc
adc
adc
and
aam
ret
sub
lock
add
mov
mov
mov
mov
dec
mov
aas
inc
lods
inc
push
pop
fisttpl
push
inc
lock
test
ljmp
or
mov
add
popf
cld
push
and
pop
pusha
loopne
jle
jp
ds
call
jp
orl
push
xchg
mov
and
add
and
mov
sub
push
pop
lea
jb
mov
scas
aaa
mov
out
rorb
pop
or
stos
inc
ja
xorb
sbb
mov
adc
pop
jo
or
or
call
sbb
pop
add
pop
sbb
or
fiadds
sbb
in
test
and
jp
mov
or
mov
in
jno
pusha
add
ret
lcall
sub
xor
lds
or
testb
ret
cmp
sbb
jmp
and
add
cmp
and
mov
sbb
jp
add
add
mov
mov
mov
mov
ret
clc
filds
add
push
sbb
scas
mov
add
xlat
call
scas
or
add
pop
lock
inc
jg
pusha
cmp
fnstenv
and
test
es
mov
jmp
je
int
outsl
push
rorl
mov
xor
xor
adc
sahf
dec
push
aad
sahf
cmp
or
jmp
mov
push
ja
mov
shrb
aaa
ficoml
std
mov
cmp
cmp
pop
mov
pop
push
aad
mov
or
mov
jl
push
mov
and
jp
xor
rorb
je
pop
xchg
repz
ret
icebp
stos
fidivrs
sbb
mov
sbb
add
pushw
pop
test
stc
jo
adc
cli
mov
hlt
enter
cltd
add
and
add
cld
mov
shll
testb
jbe
cmpsb
test
add
sbb
add
sub
mov
sbb
fdivp
add
mov
xor
dec
movsb
fdivl
mov
xor
add
mov
out
jmp
inc
xchg
call
cld
mov
cmpsb
jnp
jge
jl
mov
je
or
cld
mov
xor
rcl
add
mov
xchg
jmp
xchg
ret
push
push
jl
xchg
cli
mov
mov
cmpl
clc
out
xchg
jb
or
add
ret
jo
jle
arpl
testl
mov
mov
je
push
jp
rcr
push
or
push
cmp
es
inc
push
xor
fs
add
cs
mov
dec
push
pop
aam
insl
scas
jl
cmp
aaa
and
add
in
lock
inc
add
or
jbe
adc
push
clc
xor
xchg
clc
js
stc
jae
sub
dec
add
jmp
add
add
push
pop
push
mov
mov
sbb
pop
fld
lcall
xor
or
or
add
stos
jo
aas
mov
fdivl
jmp
push
loope
jp
mov
cmp
sti
push
jbe
jne
addl
adc
add
xor
dec
dec
je
inc
les
jb
mov
mov
jg
in
testb
addl
nop
push
dec
lock
jmp
fisubl
movsb
push
pop
outsb
cli
sti
cmp
rcl
xor
pop
pop
adc
jmp
cmp
pop
or
lret
push
scas
popl
popa
or
mov
add
pop
cmp
xchg
push
cmp
jae
dec
or
inc
rolb
mov
jae
lea
daa
cmp
mov
push
mov
add
mov
pop
push
jle
pop
loopne
add
mov
enter
jg
push
mov
mov
je
decl
fcmovbe
and
outsb
cmp
or
cmpb
jne
sbb
cmp
cmp
dec
fsub
outsl
cmp
add
mov
repnz
or
stos
in
jne
push
pushf
jne
cmp
sbbl
add
jge
inc
js
ss
popf
aas
add
fmulp
jbe
inc
les
cmp
jl
add
dec
mov
aaa
je
cmp
jb
jmp
aaa
dec
dec
mov
mov
and
mov
je
out
stos
test
sub
decl
fsubs
lods
jecxz
arpl
lret
jb
add
add
loopne
fs
or
out
or
push
mov
pop
push
push
inc
loop
pop
sbb
push
or
sub
notb
mov
xor
jle
out
cld
or
adc
nop
cmp
mov
lea
in
push
mov
das
je
cmp
jbe
mov
insb
mov
add
das
adc
push
jbe
fisubs
lret
test
or
mov
add
pushf
daa
mov
mov
lock
inc
loopne
lcall
cmp
outsb
test
jge
ja
mov
jne
adc
mov
cmpb
movsl
std
or
or
jne
outsb
cmp
pop
pop
xchg
dec
xor
dec
pop
dec
add
jbe
add
jl
mov
nop
adc
sbb
xor
jbe
pop
mov
outsl
outsb
mov
push
xor
repz
push
pop
ljmp
lds
loopne
hlt
pop
pop
shlb
add
xor
in
fimuls
push
and
jecxz
jle
xorb
or
sub
imul
loopne
sti
jmp
jmp
xchg
mov
jne
cmp
add
ffree
mov
pop
mov
mov
or
mov
adc
dec
int
mov
insl
faddl
xchg
jp
rcrl
test
fsubl
mov
jbe
in
js
arpl
dec
cmp
jge
pop
mov
nop
sub
sbb
cmp
jge
clc
outsl
adc
jbe
add
cld
push
pop
enter
xchg
pop
lock
adc
push
data16
push
ss
fs
inc
mov
inc
push
mov
mov
xchg
add
sub
jo
push
test
rclb
rcrb
push
and
dec
data16
jl
pop
push
add
xchg
and
xchg
int3
mov
inc
dec
lock
add
subb
inc
cmpsb
daa
int
mov
mov
cmpsb
adc
push
movl
std
es
mov
mulb
test
or
add
imul
mov
jle
xor
lock
ror
and
add
rorb
xchg
icebp
loope
cmp
add
adc
push
mov
push
lea
sub
xchg
and
idivb
decb
sub
addl
xor
jne
lahf
pop
movsb
pmaddwd
add
xor
repnz
and
xchg
cli
mov
je
shr
pop
inc
lds
sbb
mov
aad
or
mov
adc
roll
jle
das
push
dec
dec
movsl
add
movsb
std
mov
ds
pop
lret
clc
pop
jns
and
push
fistl
loopne
fstps
cltd
insl
lods
or
in
sahf
aam
incl
pusha
mov
pop
daa
jle
mov
mov
cmpsl
lcall
cmp
mov
sbb
js
rol
dec
add
test
mov
push
push
jbe
push
mov
inc
mov
jl
sub
es
fcompl
push
loopne
jge
jge
adc
mov
sti
xchg
add
loopne
sub
cld
lcall
aam
push
inc
jge
test
sbb
or
xchg
dec
push
cld
insl
test
sub
and
adc
or
ja
bound
sbb
dec
test
ret
mov
and
in
ret
in
sub
loopne
pop
jne
jmp
xor
loopne
lcall
dec
clc
cmp
jns
and
mov
add
dec
xchg
pop
jg
je
scas
pop
mov
pop
leave
jne
lods
mov
push
shll
jo
xlat
aaa
enter
repnz
ljmp
xor
ds
cmpsb
cmp
push
repnz
scas
sbb
ja
and
and
inc
imul
ljmp
aas
cmpsl
cmpsb
movsb
nop
popa
ret
push
jns
push
jae
ret
lods
jnp
daa
shll
nop
insl
mov
pop
popa
js
pop
std
and
std
jmp
out
adc
das
pop
in
sarl
call
fisubrs
nop
imul
mov
cmp
mov
out
xor
cli
rorl
inc
push
push
lock
aaa
mov
fmull
fsubl
popa
jnp
in
or
add
rcl
shrb
lret
mov
push
and
jl
push
sysexit
mov
push
xchg
or
inc
loopne
dec
xor
or
and
cmpsl
test
and
push
mov
or
inc
sub
push
push
push
mov
fcmove
cmp
jp
dec
daa
add
and
or
lock
add
adc
add
sbb
push
test
cmp
adc
push
dec
push
hlt
sbb
cld
jle
fsubrs
es
sti
insb
test
mov
mov
sar
fdivrs
pop
or
add
push
push
cli
push
movsb
sub
push
mov
add
jle
xchg
inc
push
inc
adc
jge
inc
lods
fdivrl
sub
pop
and
shrl
cmp
fs
sbb
aas
push
or
popl
out
push
ficoms
lea
pop
jnp
pop
xor
or
sub
add
push
mov
insl
inc
push
sbb
inc
pop
hlt
push
adc
sti
sub
aad
adc
and
add
aaa
push
clc
push
add
xor
mov
hlt
jmp
xchg
pop
jno
loopne
xchg
or
int3
js
int3
imul
outsb
jmp
divb
mov
notb
xchg
adc
ljmp
nop
add
icebp
jbe
mov
or
dec
and
repz
inc
mov
jae
mov
jne
orl
xchg
xor
adc
pop
je
jb
fcmovbe
cli
jmp
sub
or
push
sbb
xor
mov
adc
push
sbb
xchg
psubsb
add
daa
dec
lret
and
mov
imul
xor
jmp
ret
pop
je
daa
jg
inc
cmc
dec
push
xchg
inc
push
or
add
loopne
lea
push
mov
push
sbb
push
out
jle
push
lea
push
cmp
fcomps
dec
mov
subb
mov
jo
outsl
ss
fcmovb
inc
dec
stos
cld
ret
pop
call
push
cmpsb
test
sub
inc
loop
jbe
outsb
jnp
or
jb
mov
outsb
jns
icebp
rcll
add
fidivrs
xchg
aaa
ljmp
sbb
decb
mov
or
sub
mov
xor
mov
add
ret
das
push
jp
in
jecxz
enter
inc
pusha
xor
icebp
xorl
or
shr
or
lea
add
dec
push
push
call
xor
push
lods
lea
adc
pop
nop
xchg
pop
incl
cmp
je
movzwl
cltd
adc
mov
cmp
je
pop
jl
pop
mov
aam
push
dec
std
cld
js
add
fwait
jg
ss
add
lods
inc
jb
shlb
sti
or
add
inc
icebp
rcr
fwait
in
jmp
lea
cltd
cmp
mov
and
leave
adc
and
pop
jmp
aaa
cli
ja
add
lea
ret
pop
data16
mov
enter
pop
ret
push
jbe
mov
mov
scas
push
mov
pop
test
test
push
add
or
mov
xor
mov
es
mov
push
je
fiadds
pop
inc
cs
pop
test
cmp
xor
add
mov
rclb
mov
jge
or
test
cld
lds
daa
imul
rolb
adc
adc
es
cwtl
adc
jbe
outsb
es
scas
dec
jmp
pop
jne
lea
cmp
jmp
jmp
fidivrs
push
adc
in
ficoms
jmp
nop
out
xchg
and
iret
test
out
sahf
std
or
inc
enterw
mov
push
aas
add
outsl
and
jecxz
pushf
push
mov
movhps
pop
cmpsb
je
adc
sub
sbb
fistpl
push
sarb
inc
into
call
mov
fstpt
push
lahf
jne
popa
cmp
sub
push
rcll
fnstcw
sub
mov
in
mov
rcrl
addr16
arpl
popa
mov
or
fisttps
add
decl
rcr
ret
call
rorl
pop
pushf
mov
loopne
fsubrl
jne
icebp
orb
xchg
xchg
icebp
push
je
hlt
push
mov
jno
add
js
pushf
into
cld
push
and
mov
jl
addb
inc
pop
loop
les
out
ds
xchg
cs
dec
fsubrl
mov
mov
and
cmpsl
fistps
xor
jg
lds
call
cmp
scas
mov
in
pop
subl
outsb
inc
mov
fmull
dec
pop
push
inc
dec
scas
invd
lods
js
mov
js
adcb
subb
inc
popf
das
test
jg
fsubrl
inc
mov
xor
popl
xor
cs
test
push
mov
cmp
je
clc
rcr
mov
push
mov
jle
shrb
adc
test
aad
ret
mov
popw
sbb
mov
out
sbb
mov
pushf
pop
movsb
fsubrl
add
push
outsb
push
mov
dec
sub
fnstsw
cld
jg
popf
add
cwtl
push
jne
push
faddl
mov
inc
inc
dec
mov
ja
push
mov
dec
dec
inc
jp
pop
jg
add
adc
xchg
add
xor
inc
add
lcall
orb
fcoms
sti
push
cmp
adc
dec
mov
inc
test
and
sub
mov
loopne
sbbb
pop
mov
jo
cmpsb
sbb
push
or
jbe
sub
push
subb
jl
xorl
add
subb
shrb
xchg
call
jne
inc
cmpb
neg
in
and
lea
out
push
aaa
cmp
jge
push
fsubl
pop
ret
or
clc
xchg
or
js
je
xchg
addr16
mov
cmpsb
pushf
or
mov
aad
popa
daa
xchg
xchg
push
call
sbb
xchg
push
push
in
mov
sahf
lret
and
mov
rcrl
mov
or
sbb
push
mov
je
fcoml
push
inc
jge
pusha
lds
nop
loopne
cmp
xchg
xchg
hlt
cmp
je
int3
cs
icebp
pop
ja
les
or
push
push
mov
fstpt
aam
or
push
test
fsubrs
sbb
sub
xchg
push
push
loope
into
mov
push
push
rclb
data16
out
scas
dec
movsl
test
push
rolb
jo
add
mov
shr
push
sti
push
repnz
cmp
add
or
jbe
inc
test
or
mov
call
push
push
testb
je
out
add
push
movsb
cli
jle
push
add
add
mov
adc
push
adc
or
adc
in
mov
xor
ret
lods
orl
int3
inc
fadds
push
fisubs
pusha
cwtl
test
test
mov
out
mov
adc
add
lcall
push
ret
in
or
or
lods
mov
push
addb
add
or
mov
stos
clc
fsubrs
lret
aam
pop
lock
mov
scas
sub
into
inc
jne
inc
jo
mov
addb
push
add
inc
inc
shrb
mov
jle
imul
cmpb
push
add
add
dec
das
or
ficoml
push
push
xor
lock
lds
jg
xorb
add
addb
or
movsl
cmpb
stos
xor
dec
ret
or
add
jp
lcall
adc
push
cmp
adc
and
lahf
mov
push
addb
sub
loope
js
or
xorb
sbb
mov
cli
enter
addr16
lock
call
andb
orb
add
jle
sarb
test
adc
mov
push
dec
jl
dec
add
sub
mov
aas
pop
js
shlb
lar
rolb
psubb
lock
pop
jne
mov
push
pop
scas
int3
add
ds
mov
adc
cmc
out
push
test
out
pop
jne,pn
mov
data16
ljmp
and
fiaddl
or
lods
xchg
shrb
xor
shll
push
std
push
inc
add
adc
pop
and
sarb
pushf
and
gs
out
pop
adc
add
outsl
pop
rol
add
inc
mov
fwait
mov
add
lock
sti
je
call
aas
add
lock
add
insl
adcb
jb
aam
push
dec
fsubrs
add
xor
adc
lds
sti
push
add
es
outsb
push
fdivrl
out
inc
mov
add
xor
ret
dec
or
inc
fs
int3
adc
dec
inc
call
pop
pushf
mov
sub
rcll
adc
outsb
adc
aas
dec
sub
out
in
int
adc
test
out
dec
in
rolb
adc
rcl
ret
ret
adc
dec
push
roll
mov
out
pop
out
popf
stos
inc
dec
insb
shlb
arpl
push
icebp
idiv
je
push
adc
adc
push
or
xchg
ret
ret
loopne
add
add
cmp
js
inc
in
fildl
jbe
stos
xor
mov
std
adc
imul
or
mov
sbb
ljmp
cmc
cmp
mov
icebp
xor
and
cwtl
push
sub
test
stc
or
mov
inc
hlt
bound
test
pop
pcmpgtd
or
jmp
mov
sbb
dec
push
xchg
addl
arpl
pop
sti
cmp
std
pop
aam
push
mov
inc
and
dec
call
push
loope
js
adc
lret
aas
in
or
push
push
je
imul
std
xlat
and
inc
in
loopne
xor
or
fisttps
pusha
aaa
pop
mov
gs
loopne
or
loopne
out
push
inc
pop
sti
je
lea
mov
call
or
or
inc
sbb
adc
loopne
mov
pusha
arpl
sbb
cmp
inc
loop
xchg
lock
outsb
movsb
pusha
nop
inc
or
loop
pop
xchg
mov
shlb
rorb
sbb
mov
loopne
or
decl
call
add
mov
mov
lahf
push
mov
outsb
fldcw
test
rcrb
pusha
or
insb
mov
push
cmpb
cmp
loopne
or
lock
daa
xor
cmp
sbbb
adc
mov
cmp
jne
cmc
call
loopne
and
mov
xor
test
insb
cmpsl
or
andl
sbb
ret
idivb
pop
js
add
je
test
jbe
adcb
pushl
push
add
push
or
inc
push
cmp
sbb
adc
mov
push
push
cs
jmp
adc
fbstp
shlb
add
lods
cltd
inc
movsl
pushf
out
or
incl
mov
das
push
add
adc
xor
push
dec
and
cli
addb
fisttps
jb
and
pusha
scas
mov
idivb
xchg
loopne
call
bound
pop
loopne
mov
sbb
mov
roll
outsb
pusha
jle
pop
ljmp
mov
jmp
por
jl
clc
nop
add
sbbb
jbe
sbb
in
pusha
and
xlat
xor
mov
push
or
nop
clc
ljmp
lods
mov
loopne
mov
testl
or
cmp
and
sarl
push
icebp
call
lret
push
jp
jle
add
js
jmp
test
and
popa
push
addb
cmp
loop
movsl
push
sar
inc
iret
jge
je
mov
add
jg
jno
dec
mov
jge
adc
mov
icebp
cmp
and
add
inc
cmpsb
clc
adc
popa
outsb
les
fidivs
aas
shlb
cltd
data16
dec
push
add
sub
push
fisubrs
or
xchg
enter
bound
out
xchg
mov
inc
orl
cmp
ss
lock
cmp
cmpl
out
cmp
loopne
add
addb
jmp
cmp
add
or
jp
add
and
mov
ret
push
pop
mov
out
cli
ljmp
jne
xchg
and
dec
lea
inc
rolb
aas
movl
jge
jae
pop
cld
cld
jne
arpl
test
add
mov
push
call
inc
daa
mov
add
cld
push
pop
aad
mov
js
leave
popa
pop
xchg
inc
mov
mov
nop
push
pop
cld
pop
mov
cmp
adc
adc
dec
jb
ret
sar
inc
fdivl
or
cmpl
xor
cmp
dec
aam
or
pop
dec
loope
mov
ja
push
push
loopne
test
mov
test
xor
or
and
je
push
cltd
mov
iret
fimull
add
mov
and
xchg
test
test
sahf
mov
rclb
jg
adc
or
push
xor
pushw
inc
adc
and
jg
in
call
sarb
lods
push
add
lds
mov
call
inc
sub
filds
je
faddl
lock
push
lock
xor
mov
decl
in
sub
dec
lea
and
shlb
sub
mov
sub
inc
add
inc
sub
rcrl
or
dec
and
or
ss
ret
xlat
adc
cmp
clc
mov
add
push
jne
arpl
bound
sti
testl
add
xor
imul
jmp
je
daa
add
jne
mov
loopne
jg
outsb
test
jl
ret
inc
add
jb
add
or
dec
mov
push
das
add
or
cmpl
call
mov
xchg
cld
push
imul
fadds
loopne
or
incl
cmp
or
jno
inc
mov
clc
push
ror
leave
es
xchg
add
lock
lods
out
outsb
in
or
stos
add
or
in
iret
repz
push
mov
pop
aaa
cld
fbld
or
pop
cmp
subb
adc
mov
lcall
mov
int
sbb
jge
decl
and
jno
lret
mov
adc
mov
cmpsl
mov
idivb
mov
ljmp
push
jo
or
jmp
lea
add
mov
xor
pusha
dec
adc
inc
mov
das
push
enter
adc
lock
adc
mov
and
push
orb
fiaddl
ret
out
push
mov
jg
jbe
sub
data16
mov
push
add
movsl
cmpsl
pop
or
mov
push
jl
xchg
pop
mov
add
jmp
cmp
js
cmc
add
call
call
test
loope
pop
imull
pop
pusha
adc
pop
mov
in
sub
adc
jo
mov
pop
cmpsb
out
lcall
pusha
sbb
or
or
lret
dec
iret
xor
adc
add
push
xchg
hlt
outsl
add
mov
mov
xor
adc
xchg
and
xchg
call
test
push
xor
push
out
pop
lock
mov
jle
bound
mov
cld
mov
repz
lock
sbb
orl
neg
push
dec
lcall
xchg
jb
sub
jo
or
movsb
xor
jbe
mov
and
and
sbb
and
lahf
jne
push
adc
mov
jno
jle
pop
pop
dec
xorl
xor
or
sbb
stos
inc
xor
lock
addb
add
jo
add
outsb
int
sbb
jno
cmpb
add
add
mov
sbb
std
in
cmp
call
xor
inc
dec
shl
ja
cmp
adc
out
add
lock
jb
jbe
mov
dec
loop
inc
add
push
lock
add
and
push
and
sbb
or
js
pop
pushf
lock
mov
add
jo
adc
lock
sbb
shlb
push
jae
pop
pop
lock
mov
adc
mov
nop
dec
sahf
test
push
jge
or
out
xor
faddl
adcb
jg
adc
cs
call
pop
cwtl
leave
adc
call
or
and
fists
incb
pop
or
mov
mov
jg
pop
mov
or
inc
call
sub
or
jnp
push
lcall
sbb
ret
jg
pop
hlt
jg
adc
clc
xor
inc
les
add
sbb
mov
lcall
test
es
mov
lock
xor
push
or
xor
loope
add
cmp
mov
clc
jno
sbb
add
adc
lahf
jle
jl
hlt
jbe
clc
mov
dec
mov
add
pop
lock
and
mov
xchg
mov
dec
mov
ja
addb
jg
or
pop
es
mov
mov
leave
ret
or
data16
in
jb
mov
lcall
push
pusha
imulb
mov
pop
or
js
fwait
dec
in
pusha
scas
dec
inc
adc
add
cmp
lock
push
mov
mov
jge
jo
dec
adc
add
insb
mov
imul
add
cmp
mov
add
jp
leave
mov
in
call
pushl
mov
sub
jo
inc
xor
pop
pusha
sub
pop
push
cltd
or
cmpsl
outsb
or
fistps
mov
xor
stc
push
hlt
mov
shll
push
push
cwtl
push
mov
jae
in
fbstp
ss
pop
jo
hlt
mov
jo
sahf
cmp
pop
adc
xor
push
cs
add
pop
pop
lods
jb
lock
into
repnz
sbb
and
push
push
mov
aas
dec
decl
sbbb
je
jo
adc
dec
aad
or
jg
xor
jno
push
or
push
inc
ret
fidivs
push
sbb
jb
clc
add
sub
mov
sub
loopne
dec
cli
push
and
lock
jb
pop
jle
outsb
scas
mov
pop
push
pop
addr16
adc
cld
dec
loope
clc
pop
pop
pop
jae
push
xchg
and
jne
mov
inc
mov
adc
push
jmp
mov
pop
push
test
lcall
jle
loop
add
inc
inc
jno
mov
insb
inc
cmp
and
xchg
call
test
xor
xor
aaa
mov
or
xor
cmp
jl
mov
ja
je
and
jb
cltd
push
loope
outsl
pop
add
push
xchg
push
aam
mov
cli
or
xor
js
xchg
icebp
inc
adc
or
adc
push
je
ss
push
adcl
mov
inc
lea
inc
sbb
push
pop
xchg
int3
mov
add
push
mov
div
mov
pop
mov
add
andb
add
mov
das
xchg
mov
out
aas
add
or
adc
mov
jne
and
add
popa
mov
int3
jle
cmp
incl
iret
daa
dec
add
dec
jmp
lahf
add
or
fdivrl
or
inc
loopne
jg
dec
lock
ds
cmpsb
add
mov
decl
fsubp
add
js
pop
pop
fidivl
in
outsl
pop
pop
push
mov
inc
and
mov
inc
fnstcw
mov
in
call
in
test
daa
xor
jns
sub
stos
add
in
outsl
sub
ret
pop
pop
inc
add
mov
adc
hlt
jns
add
mov
xchg
sub
add
shrb
adc
jmp
clc
incb
popa
dec
pusha
add
or
xor
mov
fidivrl
cmp
pop
mov
mov
pop
cld
movsb
xchg
sub
jne
adc
inc
test
inc
repnz
jl
jg
fists
repnz
xor
pop
loopne
push
aas
mov
xchg
mov
mov
ds
adc
idivl
aam
mov
dec
sbb
imul
mov
sarl
rcrb
jecxz
loopne
gs
lret
call
xchg
jo
pop
xor
call
cmp
dec
std
test
push
push
adc
fsqrt
sbb
dec
inc
orl
in
clc
sub
shrb
mov
icebp
push
dec
lcall
test
jnp
fs
call
test
lea
test
pop
push
inc
or
bound
cs
sbb
decl
lock
xor
ret
add
nop
jp
adc
mov
or
scas
add
lcall
jmp
jb
xchg
add
sbb
dec
sbb
and
outsl
jne
pop
outsl
imul
jae
push
call
adc
inc
stos
sbb
hlt
scas
mov
js
and
push
and
cmp
dec
incl
add
ljmp
dec
rcll
pop
jnp
lcall
adc
push
add
fistpll
add
push
xchg
and
loopne
xchg
add
push
int3
mov
adc
in
fwait
xchg
call
add
aaa
jmp
rorl
mov
adc
cmp
add
jno,pt
arpl
cmpsb
iret
sar
iret
mov
mov
lds
cwtl
add
xchg
xlat
mov
fsubr
mov
aam
inc
mov
pop
sub
xchg
sbb
movsb
jge
dec
movsb
dec
popf
js
je
or
pop
mov
mov
jl
add
sahf
xor
daa
add
mov
ljmp
add
js
adc
je
push
ret
insb
rol
lea
fistl
aas
mov
cmp
mov
aaa
lods
shl
inc
outsl
mov
loop
cmp
pusha
icebp
jne
mov
ret
xor
lods
scas
fiadds
and
rcl
je
mov
jae
pop
push
lea
sbb
imulb
mov
jp
add
push
rcrl
test
test
and
cmp
inc
xor
and
loopne
adc
jmp
mov
test
cmp
add
dec
cwtl
push
lea
add
jb
arpl
push
cld
cmp
pop
addl
loopne
cmp
jle
or
fsubrp
insl
pusha
lea
and
mov
pusha
xchg
xor
sbb
jo
xor
lock
js
push
mov
loopne
loopne
dec
add
adc
lret
hlt
adc
mov
add
fwait
movsb
add
aam
lock
lea
add
push
popf
pop
cli
cmp
pop
dec
mov
js
adc
xchg
fs
and
sarb
ja
pop
jb
movsb
notb
jg
or
xchg
insb
sbb
cmp
jb
loope
or
ds
mov
test
cli
aaa
adc
push
push
fsubrs
rolb
loop
push
nop
adc
mov
xchg
sub
push
test
inc
add
jnp
add
dec
or
stc
loopne
pusha
sahf
pushl
or
add
cmp
out
les
div
mov
mov
incl
loopne
orl
ficoml
pusha
insb
add
sub
ljmp
xorb
fisubs
xor
out
int3
add
xchg
push
or
cmpsb
push
stos
outsl
mov
push
push
in
push
or
xor
fdivs
add
popa
pcmpeqw
clc
add
mov
mov
or
cmc
call
cld
or
sarb
mov
aas
and
pop
ffree
mov
pop
xor
pusha
and
popa
ret
and
push
sub
inc
sub
adc
scas
xchg
sub
xor
andb
imul
and
push
push
mov
mov
sbb
shl
sarb
mov
loopne
call
jb
mulb
add
in
addb
popa
enter
sub
adc
and
push
push
jnp
and
out
add
jo
adc
test
aaa
loopne
add
pop
loopne
aaa
shrl
adc
add
decl
jecxz
jge
mov
push
cmc
mov
jecxz
push
pushw
test
in
mov
enter
sbb
dec
inc
repnz
adc
add
or
and
enter
hlt
push
pop
lcall
loopne
push
lcall
adc
comiss
adc
call
mov
ret
outsb
ret
test
mov
test
inc
adc
dec
push
inc
push
adc
decl
jb
mov
or
loopw
cmp
cltd
popa
cld
mov
cld
bound
or
push
imul
ljmp
adc
fbstp
insb
jle
push
popf
and
rolb
fsub
in
pop
cmp
adc
jecxz
bnd
popf
shlb
jb
mov
mov
hlt
stos
mov
pusha
push
movzwl
cwtl
pushl
adc
pop
loopne
loope
add
or
cld
clc
fistpll
or
jnp
push
data16
sub
add
jbe
sub
xor
sub
das
and
call
cmp
xor
pop
hlt
jmp
xchg
or
add
add
clc
dec
in
jbe
adc
jbe
push
sbb
mov
call
es
call
cld
call
test
cs
dec
jne
jbe
inc
hlt
mov
lret
mov
mov
jmp
jo
jmp
mov
arpl
inc
ljmp
mov
fists
jmp
mov
std
jno
movsb
adc
push
adc
push
push
rclb
inc
hlt
sub
push
xor
scas
mov
inc
pop
jo
adc
repnz
add
je
mov
cmc
fdivp
scas
subb
pop
add
add
cs
xchg
add
mov
je
mov
mov
icebp
stos
jg
sub
mov
sub
rcr
xor
movl
or
and
stc
mov
adc
xor
add
jle
test
test
adc
xor
sub
or
dec
add
icebp
push
clc
dec
adc
fs
add
jl
mov
mov
clc
pushl
cmp
iret
or
mov
call
fidivs
scas
or
bswap
add
or
pop
icebp
or
push
jns
sub
lret
add
adc
cld
adc
pop
sti
outsl
inc
and
xchg
jo
mov
xorb
and
pop
pop
mov
cwtl
pop
push
fstp
jle
xchg
and
or
push
pop
jno
sbb
add
hlt
jne
pop
xor
sbb
pop
icebp
push
mov
fadd
sahf
xchg
lock
mov
dec
mov
and
jmp
fnstcw
push
adc
roll
push
fs
mov
adc
xor
sbb
sbbb
adc
pshufw
sahf
xorb
pop
mov
pop
adc
ljmp
movsl
in
icebp
adc
cmp
pop
add
jg
add
jo
call
data16
adc
add
mov
test
sbb
shlb
and
xchg
jge
xorb
jo
push
mov
shrb
xor
loop
subl
mov
mov
lock
mov
cmp
sbb
jle
sub
hlt
add
ljmp
jl
add
cmp
ret
add
ss
add
das
cmp
cmp
jne
push
pop
jno
mov
icebp
adc
orb
cld
lock
and
icebp
push
push
call
push
pop
add
std
imulb
loop
and
jne
push
mov
jne
add
scas
adc
into
adc
and
mov
add
mov
mov
adc
loopne
addb
pop
jo
sbb
les
pop
add
adc
jle
mov
pop
popf
sbb
inc
add
or
xor
add
or
sub
icebp
pop
sbbb
push
jo
jmp
cmp
push
or
sbb
testl
and
cwtl
jmp
mov
cmpb
cmp
mov
mov
and
and
notb
push
rorb
jne
outsl
xor
bound
and
or
adc
push
jmp
jno
movsb
mov
and
xor
mov
push
sub
sub
sbbb
pop
sbb
add
and
in
and
iret
inc
lock
adc
bnd
cmpl
into
or
push
cs
pushf
inc
test
xor
push
jo
sbb
rclb
loopne
jl
pop
adc
jmp
push
xor
icebp
dec
je
aad
lret
jmp
push
sub
push
mov
call
jl
es
or
das
cld
test
adc
jg
lock
jmp
mov
jg
push
mov
js
jne
jbe
jge
jmp
push
xor
into
call
jg
pop
hlt
mov
rorb
pushl
or
adc
les
sub
movsl
mov
add
fildll
pop
dec
outsb
ret
ret
mov
mov
xchg
inc
push
in
cmp
cmp
stos
and
sti
or
add
pop
and
jo
decl
xorl
outsb
add
add
push
pop
mov
or
test
mov
cmpl
inc
pop
loopne
cmpsb
mov
mov
adc
jo
and
dec
test
aaa
add
adc
das
and
sarl
je,pn
or
addb
jbe
fcoms
mov
je
jl
stos
mov
das
inc
pop
stos
push
inc
je
les
push
cmp
outsl
cld
push
xorb
xchg
add
call
push
xchg
je
jmp
mov
hlt
test
sarb
jecxz
aas
pop
fcoml
inc
and
je
mov
jmp
outsl
jmp
jmp
orb
fildl
push
lock
add
pop
mov
lea
mov
test
or
jb
sub
ljmp
jnp
xchg
mov
out
xor
repz
hlt
fdiv
popa
pop
dec
fisubs
test
shlb
gs
pop
pop
loopne
sbb
xor
inc
rolb
jecxz
fsubl
adc
add
adc
or
sub
jl
add
lods
push
sbb
xor
adc
mull
push
add
cld
mov
movsb
clc
icebp
pop
in
nop
jp
or
test
mov
cmpsb
inc
pop
push
out
pop
add
test
cmpsl
mov
push
in
lock
icebp
divb
push
mov
and
xchg
mov
jo
jge
sbb
jae
push
xchg
movsb
mov
in
push
dec
js
and
cmp
mov
test
scas
ret
mov
adc
mov
push
xchg
xor
xor
clc
jb
or
jno
mov
xor
xor
push
lods
push
xor
outsl
pop
xor
xchg
sbb
sar
fidivs
shr
enter
mov
jb
insb
lock
mov
adc
adc
lock
xchg
add
and
lret
lahf
sbb
repnz
inc
ret
fwait
inc
inc
insb
andl
js
mov
pop
mov
cmp
jmp
icebp
xchg
add
cmp
cwtl
insl
insb
mov
add
mov
sti
xor
and
inc
pusha
pushl
sarl
or
and
or
jb
repnz
cmp
int
or
pop
add
mwaitx
je
cs
and
mov
sti
faddl
pusha
or
mov
inc
sub
xor
mov
aam
ljmp
and
repnz
insl
mov
cmp
es
idivb
fimuls
rclb
mov
imull
cmovo
inc
inc
mov
test
mov
push
mov
sbb
dec
sbb
cmp
cli
dec
push
jmp
adc
sub
or
push
clc
and
mov
mov
aaa
test
jle
fistl
or
enter
fadd
wrmsr
call
inc
pop
ret
xchg
add
mov
sahf
fcomps
test
insb
dec
inc
sub
mov
ss
add
xorl
mov
sub
fcoms
push
push
popl
add
ret
mov
push
pop
push
dec
mov
pop
ss
and
stos
je
psrad
aam
das
je
pop
cld
imul
cmp
orb
imull
and
adc
out
sbbb
ret
loop
inc
out
dec
push
xlat
mov
mov
cmp
pop
pushf
mov
jnp
dec
mov
sbb
test
or
ss
mov
sbb
out
mov
add
dec
dec
cmp
bound
pusha
cmp
inc
sbb
adc
adc
clc
cmp
adc
inc
pop
jo
xor
inc
pusha
in
jl
test
fs
stos
fiadds
cmp
ret
adc
dec
add
jmp
mov
mov
cmp
jae
mov
jnp
jecxz
cld
repnz
jno
imulb
mov
dec
lret
xor
and
fmul
ret
je
jmp
cmc
gs
mov
sub
ret
out
push
call
push
adc
pop
mov
imul
enter
or
and
mov
sbb
cmp
push
or
cmp
and
or
or
sub
mov
cmpl
push
mov
inc
mov
shr
jbe
adc
xlat
mov
push
or
and
negb
cld
sarl
push
push
push
jbe
cmp
ja
fcomip
mov
je
add
jbe
mov
inc
in
lds
call
sti
jmp
xchg
cltd
jae
rclb
arpl
mov
loope
xchg
xchg
adc
cwtl
mov
sbb
call
jbe
push
std
mov
jl
push
mov
push
push
inc
inc
or
sub
shl
pop
dec
testb
push
pop
sbb
adc
add
push
loop
ds
jp
loopne
fidivrl
push
js
js
pop
lret
xor
mov
mov
cs
and
cmp
push
dec
xor
xchg
sbb
pop
jnp
nop
jo
cmpsb
adc
push
shlb
pop
pop
adc
push
bound
mov
dec
pop
popa
popf
push
jecxz
loop
inc
cmp
movl
add
jbe
add
mov
push
cmp
or
pushl
in
pop
in
push
or
dec
push
mov
add
adc
sbbl
add
jle
jp
fisubs
xchg
and
mov
ret
push
lcall
fisttpll
add
sbbl
push
push
cmpsl
aas
dec
and
xor
ficomps
push
push
mov
push
out
xchg
or
cmp
popl
push
addl
inc
mov
outsl
jmp
mov
lea
stc
mov
int3
int3
inc
fsub
loopne
loopne
sbb
jo
mov
push
mov
mov
out
cmp
rolb
enter
insl
imull
add
mov
call
add
push
scas
dec
lods
insb
sahf
in
in
mov
loope
inc
shll
mov
mov
int3
xor
xor
jo
push
push
pop
adc
js
test
icebp
jmp
cs
ss
sarl
adc
and
jmp
cmp
mov
shlb
iret
cmp
xchg
outsb
ds
sub
lea
or
push
inc
pop
mov
inc
cld
adc
outsl
jecxz
idivl
cltd
mov
sbb
out
std
sbb
lock
pop
sti
aas
push
cmovs
into
lcall
mov
jbe
daa
push
xchg
aad
lret
mov
mov
loop
test
cli
xor
shl
mov
sub
mov
je
xor
popf
xor
or
adc
nop
push
mov
dec
add
and
cmpsb
rorl
adc
int3
xor
pop
shlb
packssdw
jg
jnp
sbb
add
add
jbe
pop
les
scas
addw
sahf
pushf
inc
push
xchg
les
add
pop
repnz
ljmp
mov
rorb
movsl
lea
cmp
nop
call
mov
adc
inc
outsb
bound
mov
sub
ss
push
test
inc
mov
push
push
inc
xor
pusha
addl
ja
or
ss
pusha
das
mov
mov
scas
addl
lock
cmp
jg
in
fs
push
ljmp
rcrl
aaa
or
movsl
mov
dec
push
inc
inc
push
and
xor
ja
dec
mov
sub
and
jne
push
push
push
scas
mov
dec
bound
adc
adc
push
or
mov
push
outsb
movsb
js
add
adc
push
xchg
lods
adc
or
xchg
notb
xchg
ljmp
incl
pop
xorb
decb
pop
mov
ret
mov
xor
push
and
cmp
dec
nop
call
stc
ret
cmpsb
jne
add
pop
into
sub
je
mov
push
push
dec
cmp
add
dec
dec
fiaddl
push
dec
mov
call
sbb
stc
push
call
add
inc
adc
cmpsl
insl
and
out
mov
xor
pop
movsb
sarl
clc
inc
cmp
out
insb
sahf
cmp
adc
dec
out
push
je
xor
cmp
jbe
push
push
sti
mov
js
or
jmp
ret
lret
mov
lahf
fisubrs
jne
pop
js
pushl
jmp
mov
jbe
cwtl
inc
mov
pop
mov
je
jbe
xor
ficoms
lret
push
fadd
xchg
push
pop
cmp
pusha
mov
mov
jp
mov
jb
inc
scas
call
mov
es
and
je
push
sarl
mov
inc
incl
push
or
push
add
jmp
or
xor
adc
jl
fisttps
push
pop
je
push
mov
mov
mov
push
jl
inc
ljmp
cmc
cmp
jb
ds
jbe
mov
je
addb
mov
sti
sub
leave
mov
jmp
push
lret
and
xor
mov
mov
inc
int3
notb
sbb
jmp
movzwl
push
mov
push
daa
fcmove
push
adc
fiadds
outsb
push
jge
enter
out
shl
jge
dec
xchg
add
add
ss
jle
aaa
inc
ss
cmp
vmread
mov
adc
repz
test
or
rcrb
push
out
sbb
or
iret
or
cmp
adc
sbb
pop
jp
add
rcrb
push
jne
mov
mov
push
cmp
imul
sub
add
sbb
aaa
fwait
in
inc
mov
fldcw
sub
mov
ja
les
testb
mulb
add
jns
sbb
push
or
push
ljmp
mov
mov
fcom
in
stos
adc
mov
sahf
and
or
fmull
mov
js
dec
adc
rorl
into
pusha
mov
sbb
decb
ja
cmp
mov
cmc
mov
lock
jge
or
push
lods
in
xchg
hlt
adc
cmp
mov
ffreep
pop
adc
rol
sbb
stc
pop
daa
icebp
inc
ss
jl
dec
fiaddl
dec
call
jo
add
cmpl
jle
les
or
dec
clc
cld
inc
jmp
jl
loopne
jbe
xor
imul
adc
scas
push
in
call
mov
sbb
push
lock
mov
sbb
ss
flds
mov
sbb
es
cwtl
pop
in
jmp
push
aam
inc
sbb
jbe
addb
lret
incb
jb
add
lock
mov
cli
push
sar
inc
daa
cmpb
or
outsb
out
mov
test
add
clc
aas
loope
or
push
jne
rolb
fistps
jb
decl
xor
aaa
add
jbe
sarb
cmp
inc
sahf
loopne
or
add
push
aam
and
xchg
mov
data16
jmp
mov
loope
sahf
mov
xor
dec
aam
sbb
add
outsb
or
dec
rolb
add
in
es
in
sahf
sbb
fsubr
xchg
inc
xchg
out
movsb
lods
mov
or
inc
cmp
mov
outsb
mov
es
das
mov
and
dec
jo
dec
sbb
push
add
push
rclb
adc
pop
fnstsw
out
add
add
or
hlt
pop
in
push
xorl
lea
aam
push
ret
push
adc
lods
adc
shlb
sub
cs
shrb
pop
sahf
or
movsl
or
int3
cmp
addb
cmp
rorb
call
push
in
lea
roll
int3
call
and
data16
lock
lea
mov
jl
jne
mov
dec
push
dec
icebp
fwait
dec
pop
aam
cld
incb
push
jne
test
out
mov
cmp
inc
and
lcall
and
jo
jo
pop
mov
add
inc
mov
cmpsb
adc
cmp
aam
rcl
push
in
ss
mov
cltd
inc
jnp
mov
jmp
pop
mov
fwait
lods
add
icebp
pushf
std
inc
mov
adc
xchg
lock
sub
fmuls
je
stos
sti
je
repz
pop
ja
aad
fildl
push
inc
jmp
or
xchg
mov
inc
daa
test
mov
rol
pop
and
push
mov
inc
and
pushf
lock
or
mov
jle
call
outsl
and
clc
add
out
std
ja
lods
aam
call
popf
orb
add
shl
imulb
cmp
inc
in
out
mov
jl
rclb
jbe
dec
repz
push
jnp
call
xchg
xor
pop
push
leave
ret
int
pop
push
jl
lods
xor
fs
xchg
push
pop
sub
push
jmp
ret
dec
cmpsl
or
push
push
push
enter
cld
fimuls
mov
dec
add
leave
xor
push
dec
sub
add
pop
pop
dec
repnz
mov
in
aad
lods
test
xchg
fmuls
push
and
lock
pop
fs
and
mov
cwtl
adcb
icebp
jnp
stos
int
cmp
mov
push
hlt
outsb
push
cltd
add
test
push
mov
add
inc
ss
divb
jl
xchg
call
and
pushf
cld
aam
pop
cmc
int
sbb
pushf
call
mov
data16
repnz
je
push
in
xor
stos
in
jecxz
push
gs
pushf
dec
std
cmpsb
add
inc
pop
hlt
add
out
sarb
pop
sub
push
out
mov
jne
outsb
aam
lods
ficoml
mov
add
int3
rcrb
enter
ljmp
lods
lea
ljmp
add
repnz
aad
push
sbb
ss
jecxz
adc
test
mov
push
data16
mov
xor
add
fadds
sbb
decb
clc
and
lahf
and
cld
cmp
mov
aas
cmp
add
add
ds
cmp
adc
bound
mov
sbb
dec
mov
cmc
inc
scas
or
rclb
cmp
adc
cli
int3
push
push
add
lret
jb
testb
mov
sub
push
es
jmp
scas
inc
dec
dec
push
test
shr
inc
mov
adc
adc
mov
shlb
xchg
dec
movsl
xor
mov
xor
fdivrs
push
insb
xor
or
xlat
pop
aaa
cmp
scas
mov
lcall
call
mov
mov
or
add
pop
add
ret
push
push
mov
int3
outsl
or
inc
out
push
push
add
loope
jne
inc
call
scas
mov
je
xchg
data16
pusha
imul
cmp
inc
rolb
test
push
lcall
xorl
inc
das
in
cmp
mov
or
loopne
and
pushw
scas
jg
ljmp
cltd
pusha
lods
roll
call
dec
sbb
lret
aad
std
ljmp
cwtl
xor
or
push
mov
ficoml
cli
fmull
ja
mov
xchg
gs
mov
adc
sarl
rorb
xchg
sub
add
scas
ds
add
fsub
pusha
push
add
test
rcrb
movsb
inc
sbb
sarb
mov
add
imul
add
pop
lea
lock
adc
enter
jl
mov
shld
xor
stos
sbb
aad
aas
cltd
sbbb
loope
mov
pop
inc
dec
add
cs
xchg
cmp
lea
fcmovnu
fs
dec
sbbb
jge
cmp
jne
push
cld
je
jmp
out
jge
lret
inc
jne
es
cwtl
push
cld
or
insl
jno
push
in
push
hlt
dec
push
incl
push
cld
mov
imul
mov
pop
mov
xchg
cld
add
cltd
stos
cld
sub
popa
push
nop
stos
fsubrs
js
lcall
pop
cmp
loop
lods
pshufw
inc
nop
xchg
jmp
xchg
jb
clc
add
mov
add
add
aaa
cld
sbb
add
inc
call
out
pop
in
jmp
add
js
sbb
fdiv
cs
testl
sahf
jl
dec
in
jo
sahf
shrb
iret
pusha
loopne
ljmp
inc
hlt
mov
jl
push
jl
lods
sbb
push
inc
scas
adc
add
rcrl
push
inc
and
es
jmp
sbb
push
je
mov
push
mulb
in
xor
adc
or
daa
insb
mov
jge
or
or
call
leave
pop
jbe
enter
lods
dec
or
mov
inc
shrb
mov
ret
or
adc
fdivrp
hlt
sbb
in
push
enter
push
and
adc
mov
push
movb
repz
insl
push
and
fisubl
add
and
cs
popf
pop
xchg
enter
add
stos
mov
sub
rolb
mov
lret
mov
lods
inc
loopne
mov
movl
iret
adc
fldcw
fmull
ret
cmp
pop
jg
ret
push
fsub
push
adc
mov
out
stos
ja
jo
orb
sub
call
sti
push
mov
ljmp
ljmp
rcll
mov
inc
loope
pop
add
nop
cmpsl
jmp
aaa
hlt
push
pop
jno
inc
mov
clc
mov
je
sbb
adc
insb
push
decb
sti
dec
les
jmp
ja
push
push
sub
movb
shlb
xchg
xchg
lret
pop
cmp
mov
decb
test
and
clc
adc
call
jae
xchg
lret
int3
dec
pop
and
xor
pop
mov
lea
mov
add
int3
fstpt
pop
jmp
and
ret
out
pop
pop
int3
push
mov
loop
data16
add
add
pushf
or
fidivrs
js,pt
xchg
cmc
jb
mov
cld
xchg
sub
add
jne
bnd
jne
mov
mov
je
repnz
call
mov
fwait
int
inc
xor
add
push
mov
or
lret
mov
movsl
xchg
je
cs
dec
fs
pop
sub
test
pop
pushaw
dec
dec
or
dec
push
add
ret
cmc
lea
mov
cmp
testb
scas
popa
hlt
dec
mov
cmp
xchg
inc
add
das
and
fmulp
data16
add
sbb
add
jbe
fsubrl
in
mov
in
andl
sbb
lahf
pop
inc
and
mov
inc
xchg
nopl
nop
push
adc
cmpl
popf
ret
cli
stos
lock
mov
push
mov
mov
jbe
testl
cmp
push
insb
pop
jae
xchg
adc
push
ss
fwait
push
jecxz
jne
lock
data16
jp
xchg
sbb
push
or
pop
hlt
push
into
mov
jb
xor
push
rol
mov
ja
je
pop
clc
jmp
rcrl
movb
movb
sub
mov
iret
cmp
push
xor
add
cmp
and
inc
sbb
pusha
cld
enter
xor
mov
adc
enter
adc
cmp
mov
jb
shlb
jb
xor
rclb
test
mov
icebp
aaa
daa
fisttpll
sar
cmp
mov
push
sub
add
and
je
mov
fwait
jo
xor
jne
cmp
shr
cmp
mov
jmp
sbb
enter
incl
mov
je
outsb
or
ja
sub
add
mov
xor
nop
mov
add
shr
idiv
sbb
aas
add
xchg
test
xor
dec
push
or
push
cmp
mov
jb
add
inc
inc
popa
adc
stos
or
lea
fcoml
xchg
test
lock
ret
push
fmull
loopne
ds
jbe
stos
cmp
out
mul
sarw
lock
sbb
lcall
jl
add
xchg
push
fdiv
pop
lods
push
mov
test
insl
jp
push
into
inc
mov
cmp
dec
push
push
pop
xorb
data16
test
test
lds
imul
inc
lret
dec
push
push
or
push
push
push
faddp
xor
push
sub
sub
add
mov
mov
add
fdivr
inc
rcll
cld
or
int3
jmp
push
pushf
xor
push
psubsw
push
clc
out
pop
test
mov
cmp
xor
or
add
lahf
cmpb
push
call
inc
jmp
pop
es
mov
pop
lea
xchg
popa
mov
testb
or
adc
ds
add
jg
jnp
pushl
leave
jmp
shr
ds
je
mov
sti
xchg
add
ja
sahf
or
push
iret
in
or
pop
inc
or
jns
inc
sub
rolb
scas
ret
lods
mov
push
xchg
clc
jbe
push
out
addl
cmc
push
inc
pop
sub
xchg
decb
push
scas
cwtl
sub
mov
sbb
or
mov
cwtl
nop
std
or
dec
mov
mov
cltd
pop
and
mov
mov
push
ja
mov
bound
inc
repz
insl
jnp
add
loopne
outsb
pop
or
inc
lea
ja
push
jl
outsl
inc
and
inc
and
cltd
pushw
push
xchg
shlb
xchg
fcomps
inc
push
aas
add
cmp
pop
cmp
cli
mov
or
pop
push
sbb
pushf
inc
mov
push
insl
rcrl
sub
rolb
pop
aam
push
sub
repz
jle
pop
les
hlt
pop
mov
fildll
loop
adc
xor
scas
daa
sub
bound
sub
imul
inc
or
mov
fidivl
jbe
push
inc
dec
lahf
push
add
xor
call
outsl
sbb
lods
xor
xor
or
out
push
adc
in
push
call
ret
or
pusha
inc
pop
jbe
dec
sbb
in
xchg
shr
ljmp
sbb
icebp
adc
jg
inc
call
es
dec
outsl
push
fs
shlb
adc
rorl
ret
loop,pt
or
add
pop
cld
add
cs
rclb
inc
dec
inc
ss
xchg
testl
es
icebp
sub
push
mov
pop
popa
jl
jl
dec
nop
xchg
push
push
lea
mov
icebp
fstl
push
in
fsubrl
das
sbb
pop
push
jb
enter
das
add
es
push
das
int
jno
test
dec
inc
xor
jb
inc
fs
js
call
sub
mov
cmp
pop
push
jo
mov
jb
std
jle
cs
scas
xchg
mov
call
inc
push
in
mov
push
clc
cmpsb
mov
push
xor
or
mov
mov
dec
mov
dec
test
shl
mov
lret
xor
push
xchg
adc
adc
test
push
int3
and
ljmp
sub
mov
add
mov
or
scas
push
sbb
cmp
daa
hlt
stc
das
orb
inc
rolb
dec
pusha
divb
insb
jnp
mov
fiaddl
xor
jb
call
roll
outsl
pop
jl
shrl
in
adc
sbb
shll
out
mov
loopne
or
xchg
fcom
push
xchg
pushf
cltd
sbb
dec
dec
or
das
cmpb
sahf
mov
xchg
shrl
or
adc
xlat
shlb
stos
fistps
mov
out
lea
push
fnsave
call
movsb
nop
ds
cmpsb
add
roll
push
pushf
call
mov
sub
adc
xor
and
lahf
ret
cmc
sub
mov
in
mov
aaa
push
adc
or
and
ja
shlb
dec
xor
xchg
jle
cmp
push
push
add
xor
sbb
pop
or
mov
icebp
push
push
fldenv
pop
in
lret
clc
inc
insl
adc
push
js
sahf
aam
xchg
push
jp
add
push
xchg
in
cmp
ss
sbb
push
sbb
adc
mov
adc
mov
imul
out
add
or
cmpw
pop
cmp
dec
cltd
or
jbe
inc
add
lahf
sahf
les
cli
clc
add
jne
mov
dec
xor
clc
jne
push
rcr
sarb
xor
test
add
lea
inc
fnsetpm(287
mov
mov
xchg
sub
nop
aam
pop
insb
cmp
sbb
mov
sbb
sbbb
xchg
daa
xor
punpcklbw
adc
shll
lahf
sbb
dec
out
subl
popa
and
add
mov
push
in
aas
mov
mov
dec
xchg
mov
adc
test
cld
jp
lods
xor
js
sti
lock
push
mov
and
or
rol
ljmp
adc
adc
shrl
sbb
and
cmpsl
pop
sub
or
sbb
int3
add
jno
jmp
or
rorb
scas
or
leave
ljmp
jno
rorl
aas
xor
add
inc
push
or
repz
sub
pop
je
subb
sub
adc
or
shlb
inc
push
jp
repz
inc
add
fadd
inc
fdivs
lock
and
jg
add
xor
fisubs
adc
cmp
outsl
mov
stos
ret
loope
cmpl
jmp
int3
leave
and
movzbl
in
xchg
push
mov
sar
and
fwait
imul
inc
cli
or
lock
mov
fidivs
or
dec
pcmpgtb
fildl
cmp
adc
shlb
fimuls
lcall
add
hlt
lock
or
into
dec
imul
push
dec
cpuid
negb
add
lock
mov
lahf
shl
push
ljmp
andb
lock
adc
rorb
sbb
or
pusha
imul
pop
jecxz
sbb
pushf
test
and
xchg
adc
sbb
xchg
dec
lods
scas
push
mov
loop
cs
xchg
mov
mov
ljmp
imul
push
push
jmp
mov
scas
pop
mov
pop
add
or
iret
pusha
subb
jge
dec
fsubs
sbb
cmp
adc
cmpl
mov
jne
push
fdiv
inc
ret
push
add
mov
in
pop
add
mov
jne
cmp
leave
mov
adc
mull
fwait
add
iret
outsb
cmp
enter
out
test
mov
or
sub
mov
add
das
pop
shlb
add
sbb
sbb
sbbb
arpl
loope
xchg
rcl
rcll
shlb
cltd
jb
jno
decb
add
sbbl
pop
cmpl
dec
mov
cmp
xchg
mov
xor
push
mov
add
fisttps
add
shll
jp
and
or
or
mov
and
or
mov
mov
or
jne
stos
push
add
add
sub
pop
insl
std
std
dec
dec
jb
jmp
scas
je
dec
mov
adc
pusha
pusha
imul
hlt
into
sahf
out
jp
xchg
push
mov
and
or
out
shlb
rol
push
jecxz
jnp
movsb
or
push
pop
inc
loope
divl
dec
pop
pop
sbb
stos
xor
cmp
push
test
mov
push
sbb
fsqrt
out
mov
cs
dec
lahf
adc
mov
imul
sar
or
enter
push
or
js
push
push
idivb
or
jp
mov
lea
bound
push
inc
mov
pop
add
jg
fadds
mov
pop
push
call
jp
add
pop
pop
idivl
mov
adc
call
push
call
pop
jae
push
cli
push
scas
je
mov
jb
decl
push
push
cmp
inc
pop
adc
cmp
mov
inc
mov
rol
xor
in
lahf
inc
adc
rcl
cs
xor
pop
cli
out
add
add
data16
bnd
push
cmpsl
xchg
mov
addb
je
inc
divl
addl
pop
cmp
je
jl
or
mov
cmpb
jne
insl
call
push
bound
jnp
push
jl
or
adc
pusha
mov
stc
jp
data16
xchg
push
fsubs
sbbl
pop
movl
adc
add
push
inc
adc
add
mov
jae
push
mov
nop
iret
fisttpll
jl
jne
std
sub
daa
aas
cmpl
repz
push
test
daa
and
sub
ljmp
xor
aam
outsb
add
and
dec
mov
cmp
out
hlt
mov
sbb
pusha
mov
pop
cld
mov
xchg
les
hlt
jl
je
add
out
mov
or
pop
fistpl
dec
mov
mov
xchg
lock
jnp
pop
das
sub
add
in
push
xchg
addb
mov
inc
pusha
and
pop
inc
stos
push
aad
cwtl
stos
pop
push
data16
or
inc
adc
mov
inc
push
test
mov
add
adcb
incl
rolb
lea
mov
xchg
adc
nop
inc
mov
inc
jg
rclb
adc
cmp
add
pushf
mov
push
mov
outsl
xor
or
ss
ja
call
enter
sub
fcoml
jne
push
dec
sub
das
sbb
pusha
pop
xor
mov
jle
shlb
mov
ljmp
ljmp
mov
ret
loopne
mov
adc
add
cmpsb
mov
call
lods
inc
inc
add
sbb
incb
test
adc
xor
fcomps
add
mov
mov
out
cmc
data16
jb
mov
icebp
call
daa
ja
push
lea
les
mov
mov
jp
hlt
ret
mov
popf
icebp
add
popf
or
pop
and
jne
push
pop
mov
fsubs
adc
movsl
mov
jmp
sub
mov
mov
push
pop
xchg
insb
or
incb
push
and
decb
pop
lea
sub
sbb
push
call
push
aas
mov
push
sub
sub
dec
loop
sub
je
mov
dec
push
jbe
out
xchg
push
int3
clc
xlat
push
aam
jb
test
pop
sbb
cmc
movsb
or
add
repz
outsl
pop
icebp
push
stos
and
adc
push
scas
call
sub
mov
sbb
je
xor
mov
cmp
std
push
hlt
testl
sbb
mov
pop
or
ss
xchg
jbe
loope
aad
mov
push
mov
push
add
xor
pop
mov
mov
fsubrl
fidivs
push
pop
je
jbe
mov
ficompl
inc
sti
mov
dec
mov
fiadds
outsl
or
scas
xor
sbb
xchg
sub
pop
jne
test
add
adc
and
pop
repnz
cmp
jp
cmp
add
mov
fisttps
and
je
mov
ljmp
cmp
pusha
mov
push
xor
push
push
push
sbb
ret
into
in
pop
xchg
and
vmwrite
push
add
lret
mov
hlt
or
divl
mov
sub
xor
cli
or
lds
inc
loopne
mov
cmpsb
jle
pop
push
mov
cmovs
les
out
lea
adc
push
inc
add
inc
std
xchg
jbe
lcall
inc
adc
push
adc
lock
je
sbb
mov
stos
jmp
lcall
inc
fidivl
mov
cmpb
mov
sub
outsb
mov
jmp
push
or
mov
je
cmovns
shll
mov
sbb
dec
jae
jle
outsl
fists
cs
cmp
cmp
je
sub
push
daa
cmp
addb
mov
out
imul
sub
sbb
mov
insb
adc
fists
dec
in
ljmp
jmp
cmp
cmpl
stos
gs
sbb
cmp
insb
inc
test
daa
ljmp
ss
insl
jecxz
pop
cmp
sub
xchg
lock
fsubs
out
xor
push
pushf
xor
push
or
fsubrs
cmp
ret
sub
fldcw
fwait
push
jg
pop
jne
sbb
aaa
test
inc
cmp
or
loop
pop
pop
mov
adc
jecxz
fmull
shll
es
into
ds
cli
mov
je,pn
adc
and
idivb
push
and
xchg
adc
mov
sbb
or
pop
or
cmp
mov
lahf
test
inc
push
jb
jmp
mov
into
lret
out
pushf
out
xor
or
xchg
test
es
inc
cmp
rol
stos
cmp
lahf
push
les
ja
call
mov
sahf
adc
das
xor
mov
jbe
test
lcall
mov
ret
nop
sbbb
sbb
inc
mov
call
pop
test
mov
leave
mov
inc
push
mov
lods
insb
cmp
sub
inc
add
stos
xchg
dec
push
adc
das
cmc
push
test
mov
call
push
lods
push
adc
jecxz
ljmp
pop
nop
in
xlat
and
push
mov
mov
lret
xor
mov
stos
pop
add
mov
ret
ja
mov
jl
rclb
jbe
es
fs
insb
or
test
or
pop
mov
pop
cs
inc
loop
pop
push
clc
lea
mov
or
lock
mov
rcrb
outsb
dec
jne
cmp
xor
js
cmp
lea
adcl
dec
outsl
enter
adc
mov
lret
jle
es
decl
dec
ljmp
dec
xor
js
adc
rcl
pop
sahf
pop
call
push
inc
jl
push
and
mov
das
push
inc
cmp
jle
dec
adc
add
mov
bound
mov
mov
rolb
adc
mov
jb
add
js
and
cmpb
jecxz
in
ljmp
sub
iret
hlt
xor
mov
sbb
mov
xchg
jp
adc
push
neg
in
and
mov
and
clc
jl
add
hlt
roll
mov
mov
cmp
inc
inc
scas
cld
mov
adc
or
and
mov
push
xchg
add
cmp
or
mov
push
xor
call
jecxz
dec
pop
idivb
xor
dec
shl
inc
cmp
stos
dec
push
rorb
ret
enter
ds
sbb
xchg
insb
jae
xchg
js
cmp
addr16
xlat
xchg
ret
dec
pop
icebp
cwtl
rclb
outsb
adc
xchg
add
sub
xor
push
inc
mov
fcmove
sub
mov
cmp
jmp
adc
mov
jne
ss
out
xchg
lock
or
ficompl
inc
ss
or
cmp
clc
inc
out
filds
push
xor
lea
fadd
push
outsb
sbb
sub
xchg
xor
xchg
adc
mov
aam
lahf
jle
mov
jne
or
jo
cmp
je
mov
cmp
ret
je
and
jb
data16
fwait
mov
ja
cmpsb
jb
ja
adc
stc
add
inc
adc
xchg
adc
mov
lds
pop
add
aaa
into
lods
mov
js
mov
imul
cld
push
cmpb
jge
pop
push
push
call
test
add
mov
add
cmp
mov
add
out
dec
out
adc
outsl
je
jl
add
andb
sahf
movsl
xchg
lock
xor
or
movsl
jmp
nop
loopne
fs
ss
push
repz
add
mov
mov
hlt
mov
push
mov
add
fs
stc
jno
popa
xchg
push
test
lods
int3
adcb
ljmp
enter
push
rol
adc
jecxz
mov
es
xchg
idivb
add
push
push
jb
shr
js
dec
cmpsw
push
or
adc
pop
cmp
popf
dec
ret
inc
pop
adc
or
jle
lock
add
adc
sbbl
mov
cli
jle
cld
xor
xor
jl
inc
push
inc
fs
cmp
add
imul
mov
fs
push
pusha
inc
das
xor
xchg
add
das
and
inc
lahf
jle
cs
pop
mov
movsl
push
xchg
imull
add
stos
jl
add
idivb
lock
fcomps
xchg
cmp
into
push
stos
daa
or
add
stos
add
push
insl
ret
or
jno
test
lds
jmp
mov
subb
adc
andl
gs
mov
fwait
mov
shrl
jle
or
lock
imul
das
and
adc
roll
add
sti
cmp
jle
adc
mov
inc
jb
clc
flds
lods
out
xchg
hlt
inc
out
cli
sbb
mov
cmp
lock
adc
aad
dec
cmp
divl
ss
pop
jg
jo
sub
add
je
bound
enter
ret
mov
xchg
mov
fbld
je
push
inc
mov
sarb
mov
jge
addb
push
movsb
sbb
fs
clc
or
and
test
lea
push
dec
test
push
mov
loopne
stos
fmuls
cmc
push
rorb
or
xchg
leave
ljmp
lcall
fcoms
xlat
test
rorl
outsb
add
mov
rorl
mov
test
pop
or
in
mov
pop
popf
add
scas
lock
ror
mov
add
xchg
push
sti
mov
push
rclb
jl
mov
mov
pop
cwtl
jne
mov
mov
lret
ds
and
sbb
call
mov
pop
aaa
pop
int3
mov
jb
rcrb
xlat
sar
sbb
or
cmp
fldt
stos
enter
adc
stos
aaa
popa
rolb
add
loop
mov
dec
xchg
cmp
adcl
sub
jne
shlb
xchg
adc
mov
or
shl
outsb
or
xchg
cld
mov
nop
mov
adc
pop
add
adc
movsl
cmpsb
pop
shrb
nop
or
sbb
fs
dec
pushw
icebp
adc
cmp
push
mov
mov
mov
xchg
mov
stos
or
fdivs
push
adcb
fs
mov
or
pop
cltd
incl
sar
mov
jo
and
add
xlat
cmovo
fmuls
loope
push
xor
add
mov
push
mov
and
lahf
xchg
inc
dec
insb
or
loopne
push
or
mov
inc
rorb
push
sub
clc
dec
add
adc
sub
add
ljmp
jg
je
fcomip
repz
or
divb
mov
or
je
xchg
push
and
loope
stos
sub
or
loope
and
roll
push
jb
add
dec
push
sbb
push
push
ss
and
loope
sub
sub
mov
pop
pop
lock
loopne
cld
jge
leave
jp
shll
or
sub
insb
popf
mov
cmp
pushf
push
std
call
cmp
mov
and
and
loopne
ds
icebp
or
addl
scas
xor
call
cmp
jbe
inc
popa
mov
sar
pusha
adc
pop
push
ret
and
or
cs
sarl
ljmp
divb
dec
inc
add
das
inc
mov
repnz
mov
fldt
fists
inc
fcoml
pop
or
sbb
inc
es
pop
movsb
sbb
loope
add
mov
int3
xor
adc
inc
lds
jne
cli
dec
loopne
and
and
pop
mov
repz
outsb
jmp
mov
jne
push
pop
dec
sub
add
call
or
xchg
ljmp
pop
mov
scas
call
and
adc
in
in
inc
add
or
mov
cltd
add
lods
scas
jl
xor
sub
loope
std
jecxz
add
shlb
cli
clc
mov
shr
loopne
lods
xor
push
loopne
rclb
loopne
test
loope
adc
pop
inc
pusha
adc
lock
mov
mov
pop
pop
add
repz
jo
and
push
cmp
fwait
sbb
fs
pop
push
loopne
jne
xor
and
jg
test
pop
addb
pop
pusha
xor
dec
and
repz
push
scas
mov
and
js
add
jmp
or
cmp
dec
or
and
shl
nop
adc
jg
inc
insb
ljmp
rorb
sbb
out
orl
push
xor
inc
pop
adc
mov
daa
stos
addl
or
cs
adc
data16
mul
sbb
pop
lods
dec
mov
and
sbb
sbb
jne
push
cld
push
push
sbb
icebp
jecxz
pop
xchg
les
jle
add
cmp
loopne
andl
in
outsl
or
je
popa
mov
push
pusha
adc
lods
sub
in
mov
loope
js
jb
dec
push
roll
sahf
add
add
push
jno
into
fidivl
movsl
jo
popa
dec
ret
jle
lea
mov
les
cmpl
jg
xchg
and
rorb
pop
pavgw
fistpl
loopne
popa
inc
or
xor
adc
hlt
xor
add
pop
or
jle
or
push
mov
sarb
ljmp
push
or
repnz
idivb
dec
pop
out
cmpl
add
sarl
icebp
rclb
sarb
add
cmp
inc
das
push
xor
mov
loopne
adc
xchg
jmp
shlb
add
mov
call
lea
xor
or
add
jg
into
cwtl
mov
push
lock
push
test
sbb
movb
lock
or
and
lcall
aaa
outsb
mov
push
lea
and
call
sbb
int3
dec
mov
push
cwtl
and
movb
fisttpl
jbe
xor
sbb
pcmpeqw
add
shrb
adc
push
clc
jg
lods
cld
inc
push
push
in
pusha
or
pop
or
push
call
or
push
mov
or
pop
or
mov
addl
add
mov
push
sub
repz
push
dec
inc
inc
cmpsb
jo
xor
sbb
stc
movsb
aaa
xor
push
jo
mov
dec
nop
xchg
sbb
mov
stos
or
subb
mov
xor
jno
cmp
pop
shll
js
pushf
call
lea
pop
call
hlt
adc
add
ja
std
sbbb
add
xor
xchg
sub
adc
mov
jle
outsb
shrb
jle
cmp
test
push
push
or
adc
sti
ja
fcoml
pop
sub
jmp
rcr
add
jmp
push
mov
add
mov
ljmp
mov
or
xchg
push
lods
mov
cmp
mov
or
ret
push
push
test
dec
ljmp
shlb
push
nop
mov
and
lea
cli
mov
or
add
icebp
pusha
push
lahf
repnz
hlt
stos
sbb
and
add
incb
lods
jmp
dec
pop
shl
mov
mov
push
and
data16
pushf
and
int
jne
mov
push
fistps
aaa
sbb
add
or
aam
xor
jne
cmp
push
pusha
clc
icebp
cld
xor
sbb
lock
mov
mov
jmp
ds
jl
mov
icebp
pop
inc
add
je
je
cmp
mov
dec
or
pop
movsl
mov
xor
jge
jg
movsl
inc
mov
insb
pop
add
xor
mov
call
nopl
inc
jo
mov
push
xor
sbb
decl
or
or
add
xor
lea
idivb
fs
je
add
pop
mov
jg
xor
test
jle
xor
jb
mov
dec
incl
push
mov
aaa
add
or
jo
inc
xor
hlt
mov
sub
ret
xor
aad
jle
js
mov
sbb
je
sub
adc
pushl
jns
adc
jbe
jo
testl
and
mov
add
mov
xor
lock
add
andl
movsb
dec
shlb
pop
sub
or
xchg
in
test
hlt
aaa
sbbb
repnz
inc
shrl
call
ja
clc
and
ret
adc
xor
outsl
decl
or
inc
out
jg
inc
lock
add
sbb
jl,pt
xchg
adc
xchg
add
add
pop
jbe
fsubrl
cmpb
fs
cli
xorb
addl
or
ja
xlat
cmp
jne
push
loop
and
dec
xorb
pop
add
and
cli
jb
push
jne
ret
add
fildll
in
ljmp
and
adc
popa
mov
push
nop
or
shrb
and
sub
add
xchg
adc
xor
cld
push
push
test
test
in
pop
or
push
sub
fmull
inc
pop
and
cmp
push
aaa
call
jge
clc
adc
cmpsl
mov
call
loopne
mov
xor
repnz
fdivrp
lea
test
pop
push
in
cli
pop
and
cmovs
mov
or
dec
and
cld
jb
mov
jmp
push
cmp
in
add
xor
lea
shlb
fnsave
mov
rorb
shll
or
jb
orb
pop
push
cmp
add
out
adc
push
aaa
mov
mov
hlt
push
jbe
sub
inc
jo
push
divb
je
fsubrp
mov
adc
js
inc
add
add
je
sar
cmp
mov
pop
ret
xchg
cmc
xor
xor
mov
xchg
jno
psubq
push
adc
repnz
je
add
xchg
pusha
xor
sahf
push
add
das
sahf
jmp
clc
jmp
jo
je
add
add
int3
push
ss
mov
jmp
push
push
sbb
adc
adc
xchg
sub
in
aam
inc
mov
pusha
and
adc
push
ljmp
sbb
push
stc
or
loopne
push
data16
pusha
and
jbe
push
pop
jecxz
xor
je
lods
xchg
aaa
insl
cmpsb
xor
pop
add
xor
stos
hlt
xchg
xchg
adc
sbb
or
dec
dec
icebp
adc
cmpsl
dec
and
das
inc
mov
inc
inc
and
jnp
push
aam
add
add
call
push
je
add
lock
inc
cltd
shlb
dec
jecxz
bound
repz
or
adcb
cmc
fwait
clc
add
insb
push
fldcw
bnd
in
mov
les
xor
pop
push
jge
mov
xor
ja
prefetchw
or
mov
jmp
arpl
das
adc
jl
jmp
shr
pop
dec
jecxz
jo
fs
add
ds
and
dec
xor
mov
cmp
inc
xor
add
test
iret
add
addl
jmp
push
nop
push
mov
shll
add
fwait
aam
cs
jb
push
repz
inc
daa
mov
pusha
fiadds
add
test
loopne
repz
mov
inc
inc
sahf
out
fidivrl
xor
lods
int3
leave
xchg
div
lahf
rorl
aas
pop
je
cli
pushl
adc
and
mov
shll
xchg
mov
adc
dec
leave
or
test
ficoms
mov
test
rolb
test
es
jmp
aaa
mov
dec
push
mov
sbb
rolb
mov
sub
into
sub
and
data16
push
lock
lret
cmp
mov
jmp
push
scas
xor
mov
jl
pop
or
mov
lods
adcb
jb
and
jo
sbb
sbb
mov
test
outsb
or
pop
js
scas
and
or
inc
mov
xchg
bound
xorb
pop
clc
or
mov
cmpb
pop
mov
jmp
cmp
es
out
js
repnz
mov
jnp
sbbb
xorl
roll
bound
adc
pusha
or
pop
cmpb
aas
mov
loopne
mov
push
inc
test
add
dec
mov
xor
cmpsb
mov
cld
in
lret
or
sbb
ljmp
in
cmp
mov
and
repz
push
lods
mov
mov
inc
and
nop
sbb
dec
test
sbb
jle
dec
push
dec
les
mov
test
notb
sbbb
pop
ret
xchg
jbe
cmpsl
mov
jns
popa
aam
add
push
fimull
clc
xchg
and
sbb
stos
push
call
test
ds
fidivrs
lea
call
cmc
mov
outsb
mov
push
adc
push
call
cli
inc
xor
jo
out
outsb
ret
add
enter
hlt
sahf
inc
add
out
movsb
push
aam
test
xor
lret
dec
mov
lret
int
jl
or
xchg
or
inc
packsswb
call
les
jb
ret
xchg
or
ret
or
adc
sbb
hlt
orb
daa
les
cmp
sub
sahf
sbb
mov
cld
push
mov
imul
enter
and
xor
cltd
in
or
pop
je
sbb
adc
adc
dec
add
mov
ret
inc
jg
andb
adc
mov
ret
or
or
or
jb
lcall
cmpsb
mov
add
mov
cmp
add
jne
je
clc
cmpsb
mov
inc
mov
out
xor
testb
popa
xchg
in
mov
call
gs
inc
and
pop
stos
push
dec
sub
add
aas
add
mov
sub
lea
std
jg
inc
xchg
push
inc
cmp
pop
adc
mov
push
jb
add
les
sbb
pop
mov
xor
fmull
pushf
push
icebp
popa
push
stos
mov
ljmp
mov
mov
cmp
jne
cmp
dec
mov
jle
int
out
lods
xor
cmp
pop
cmpsb
aas
adc
lods
lock
mov
jmp
pcmpeqb
mov
idivb
test
dec
mov
add
and
ja
push
lds
sub
push
inc
inc
ret
hlt
pushf
mov
daa
cmpsl
outsb
add
push
clc
sbb
inc
cmp
mov
cmp
aaa
sbb
je
in
sbb
je
addb
cli
or
mov
mov
jne
sbb
dec
clc
dec
or
pop
cmp
or
jp
ss
test
popf
push
in
or
inc
pop
dec
sti
cmp
aaa
into
test
hlt
inc
pop
subps
test
sahf
push
jp
mov
mov
addl
or
push
jmp
inc
cmp
pop
cmp
test
dec
inc
enter
mov
sub
push
sub
push
call
inc
aam
xchg
hlt
loope
mov
fstpl
sub
data16
jo
outsb
ret
ja
aas
loopne
jbe
sbb
push
inc
les
sub
jmp
rolb
out
movsl
xchg
xchg
pop
mov
mov
dec
aam
pop
call
pop
fidivrs
sti
push
cmpl
push
aad
adcb
push
scas
call
cmc
mov
cltd
sub
lods
xchg
xlat
add
jmp
jl
push
jl
lods
scas
das
clc
push
push
push
out
jmp
std
inc
cld
arpl
mov
pop
fsubl
add
mov
nop
cmp
mov
js
call
rcl
xor
sahf
pop
test
pushl
xor
lock
imul
sbb
xorl
pop
dec
or
pop
popa
shrb
add
std
sbb
lods
jne
movsl
adc
outsb
pop
jg
lahf
imul
std
cmpsb
add
test
push
push
and
and
mov
js
sbbb
jmp
sub
jo
nop
insb
idivb
sbb
dec
dec
push
sub
sub
daa
pop
cmp
imul
push
mov
add
test
addr16
lahf
push
sahf
jmp
or
rclb
mov
aaa
xor
sub
lea
insb
loopne
xor
aaa
jle
into
fcmovb
test
std
ret
popa
pop
mov
inc
inc
sbb
les
lock
xor
stc
xor
mov
sbb
std
pop
dec
mov
xchg
adc
popl
adc
and
mov
push
push
or
pop
inc
stos
add
sub
out
mov
pop
pop
add
cmp
add
or
je
cwtl
cmp
pop
and
insl
xchg
cmp
test
mov
dec
add
jmp
mov
xor
testb
push
sar
xor
or
outsl
add
sub
or
mov
and
fwait
push
sti
lds
push
pop
shlb
fwait
pushl
jae
test
icebp
mov
xor
adc
roll
jmp
mov
jge
icebp
pushl
mov
movb
ret
add
inc
loopne
nop
nop
dec
cltd
cmp
mov
push
mov
jbe
ss
xor
notb
stos
cli
stos
cmp
sti
mov
mov
leave
std
push
std
jb
pop
movsb
pop
inc
ret
imul
cmp
cmp
arpl
mov
mov
push
mov
aas
rolb
iret
push
into
mov
dec
mov
insl
incl
mov
in
add
sub
stc
in
mov
mov
or
loope
mov
cli
ja
std
add
or
mov
jle
sub
pop
pop
mov
mov
andl
ja
shlb
push
ds
or
fiadds
xchg
cmp
jns
mov
in
enter
push
sub
test
push
xchg
clc
mov
mov
decl
adc
adc
add
test
jne
lock
or
fidivrs
ljmp
mov
stc
and
mov
rcrl
shr
or
gs
movl
std
add
cmc
jbe
inc
dec
add
loop
rcll
or
jne
outsl
jg
daa
push
dec
dec
cmp
scas
cli
jl
aas
mov
add
mov
ret
andb
into
add
into
jne
fcoms
roll
add
dec
push
dec
push
sbb
jmp
in
daa
mov
in
or
mov
mov
add
cli
xchg
cmp
cmpsl
push
or
mov
test
mov
jg
or
fbstp
xor
test
jne
cmpb
aas
push
mov
je
cmp
jmp
lea
ret
dec
ja
rol
pop
outsl
out
rorl
insb
sti
adc
stc
and
inc
shrb
dec
js
lds
loope
decl
mov
inc
cmp
jl
outsb
dec
mov
clc
mov
mov
aas
mov
add
sarl
push
push
cli
mov
push
or
call
loope
scas
testb
push
mov
lock
loope
hlt
jle
mov
jne
or
cmp
loopne
jmp
cmpsl
insw
lock
hlt
cmpsb
sub
and
push
xchg
movsl
jg
cmpsb
fdivrp
jbe
lea
jnp
xor
xor
das
jne
jno
cmp
adc
and
addl
adc
mulb
and
loop
fs
jno,pn
fsubl
ficoms
test
inc
cs
insb
into
pop
cmp
push
mov
insb
push
mov
push
test
icebp
aas
push
mov
mov
add
fcompl
data16
ja
add
push
add
and
adc
mov
or
out
loop
mov
cmc
outsl
xor
mov
mov
pop
or
pop
es
jmp
mov
daa
cld
dec
add
push
push
mov
mov
aas
push
dec
mov
jne
je
mov
sbb
sbb
push
push
push
push
and
ret
jle
sub
xchg
test
xor
dec
fsubrs
in
dec
cmp
pop
fldcw
or
shl
sbb
mov
push
mov
scas
and
push
pusha
cld
jl
aad
cmp
jg
dec
mov
mov
addb
mov
shrl
das
pop
div
int3
rcrb
inc
shlb
call
or
call
popa
pop
gs
or
enter
mov
jo
cwtl
mov
mov
pop
push
lock
adc
cmpsb
push
adc
lret
rolb
jecxz,pn
adc
push
mov
call
pop
or
ret
sti
mov
xchg
push
xor
dec
cld
dec
inc
gs
mov
rcll
push
ficoml
lock
nop
adc
je
add
adc
test
adc
xor
addr16
pop
push
mov
pavgb
mov
loop
cmc
call
pop
cmp
lock
rorb
push
ret
sub
jbe
mov
add
pusha
scas
ja
add
add
add
adc
mov
mov
test
mov
pop
or
pop
hlt
pop
xor
es
roll
xchg
push
add
movsl
xor
inc
sbb
mov
push
add
mov
push
add
push
inc
jb
rorb
pop
gs
es
add
adc
xchg
in
jl
add
cmp
push
fildll
test
add
and
or
inc
add
ss
call
pop
add
dec
das
mov
js
mov
xor
jecxz
and
push
rolb
cld
jmp
xor
jbe
inc
inc
add
out
fsubrs
or
or
dec
outsb
add
mov
loope
add
jbe
in
jp
addl
adc
test
or
or
xor
outsb
fs
xor
insb
xchg
loopne
cli
cmp
mov
sti
mov
mov
dec
cmp
and
outsb
xchg
and
ror
mov
mov
mov
insb
aam
mov
pop
adc
push
pop
xorb
hlt
out
push
fiaddl
mov
nop
mov
xchg
sbb
cmp
cmc
sub
jmp
ja
pop
mov
xchg
clc
jle
or
push
and
sti
lock
fimuls
rorb
popf
add
lret
shlb
jne
test
pop
cmp
shrb
xor
add
loop
mov
pop
mov
adc
pushf
inc
mov
pop
xchg
movsb
push
mov
daa
movl
std
mov
lret
dec
orl
sahf
test
out
fs
adc
decb
pushf
sub
mov
lea
nop
imul
adc
add
int
dec
mov
inc
cmp
pop
sbb
nop
sub
xchg
pushf
ljmp
cmp
mov
ds
pop
lock
scas
cwtl
ret
mov
fs
jns
inc
in
pop
pusha
or
test
cmpsb
call
inc
cmp
push
in
adc
push
addb
add
dec
imul
outsb
call
aad
js
sub
cltd
notb
icebp
dec
sbb
mov
mov
sub
movsl
fs
loopne
je
lock
xorb
sahf
daa
jo
add
mov
push
push
xchg
adc
mov
adc
mov
mov
cmp
cmpsb
xor
call
inc
mulb
dec
outsl
mov
in
sub
mov
cmp
adc
and
outsb
push
push
add
and
sahf
or
xlat
adc
sti
shrb
scas
lea
jo
mov
mov
sub
sbb
or
hlt
popa
sbb
xorl
out
xchg
add
lods
push
es
jnp
mov
push
pop
cli
jmp
in
sub
adc
push
push
mov
sbb
cwtl
adc
aam
test
pushl
ljmp
loopne
das
cmp
inc
xchg
jle
inc
in
push
mov
sub
add
adc
dec
sbb
pop
cmp
repnz
rorb
test
push
in
les
fdivl
and
jp
mov
sarb
dec
ljmp
ljmp
pusha
out
add
rolb
add
cwtl
pop
hlt
in
jmp
inc
adc
stos
ss
lret
in
cmp
cmc
xor
sbb
fmuls
xchg
les
jns
mov
lock
or
outsl
pushf
sbb
jle
and
adc
push
sbbb
insl
ss
stc
inc
dec
insl
dec
pop
cld
add
lcall
dec
adc
mov
sub
jg
call
sbb
or
das
nop
rolb
inc
testl
adc
pop
lods
repz
xlat
fistpl
push
es
subb
lahf
mov
xor
adc
cld
int
mov
rcl
subb
push
cld
ja
loope
push
fcoms
sbb
sbb
test
jo
jne
cli
cmp
pop
dec
and
pushf
and
add
push
push
add
jb
in
cld
mov
imulb
decb
in
push
leavew
sbb
outsl
mov
pop
repnz
lret
roll
pop
mov
adc
repz
add
mov
adc
lret
jo
shr
jbe
adc
add
repnz
rcrb
adc
pop
sar
fadd
lea
push
test
loopne
add
xchg
pop
stos
mov
repnz
sarb
inc
mov
sub
push
mov
mov
ljmp
call
addr16
push
sahf
add
adc
stos
adc
mov
jbe
mov
shll
xchg
mov
pop
pushl
and
es
pop
adc
rcrb
into
fwait
xchg
mov
pop
push
push
outsl
sbbb
sarb
or
and
add
adc
ror
and
inc
addl
shlb
push
js
add
add
jmp
mov
add
arpl
inc
lock
enter
stos
lock
sub
add
call
jo
adc
push
fucomi
adc
int3
stos
jp
aad
fildl
aaa
sub
repz
or
xor
inc
pop
mov
sbbb
cld
call
pop
test
inc
fldl2e
and
dec
add
es
sbb
push
add
pop
add
xchg
and
xchg
paddsw
aad
cli
notb
and
adc
jl
andb
sub
push
adc
inc
lock
into
jae
aas
addb
out
insl
add
pop
call
jl
xchg
mov
call
ja
mov
add
sbb
cs
jg
push
xor
mov
xchg
popa
add
mov
add
push
xchg
enter
adc
cli
pop
pusha
jno
sub
xor
mov
cli
add
addb
fmull
call
pusha
and
mov
add
loope
xlat
adc
and
add
dec
mov
xchg
fcoml
fdivrs
add
sub
xchg
and
sahf
inc
add
sahf
pushf
shrb
sub
test
add
or
mov
xchg
je
ret
mov
dec
push
pop
incl
and
cmp
into
lea
add
call
mov
jmp
or
add
inc
or
jmp
dec
incl
pusha
mov
xchg
xor
mov
add
cwtl
sub
dec
sahf
add
into
sbb
jg
pop
pop
jae
scas
or
insb
loopne
loopne
in
push
call
mov
mov
cld
loopne
or
popa
outsb
rclb
loopne
pop
ret
std
inc
xor
cmpsb
out
mov
inc
push
add
scas
sub
fcmove
cwtl
jmp
cmp
xchg
push
and
orb
xchg
xor
loope
loopne
jg
add
sbb
jne
bound
sbb
sahf
into
test
data16
add
lea
inc
fneni(8087
push
mov
mov
in
push
xchg
call
add
push
popa
push
test
punpckhdq
imul
dec
add
jecxz
leave
dec
xor
jne
fimuls
cmp
add
pop
mov
dec
adc
bound
pop
icebp
mov
add
add
idivl
ds
je
lea
add
je
add
testl
mov
add
add
in
sbb
insb
adc
in
and
loopne
lods
mov
dec
jl
arpl
lods
pusha
or
adc
es
sub
add
xor
push
inc
ret
cmp
pop
ljmp
cltd
push
aam
jmp
and
cli
mov
adc
popf
or
pop
jmp
je
hlt
mov
or
and
and
retw
loopne
adcl
sub
xchg
ret
mov
cmp
push
loopne
call
pop
into
and
sub
idiv
dec
in
sbb
call
or
or
or
fs
or
cli
and
fsqrt
into
subb
adc
in
in
loopne
das
mov
pop
pop
pop
in
push
push
xchg
nop
in
incb
idivb
or
fs
ljmp
cs
xor
xchg
mov
test
movsb
or
mov
clc
pusha
adc
mov
notb
xor
ja
data16
inc
dec
add
test
lods
push
int3
and
jl
or
inc
mov
pop
pusha
and
js
call
outsl
push
pop
inc
loopne
ret
jnp
jg
mov
add
mov
lahf
adc
pushl
add
push
push
xor
mov
mov
cmp
or
push
fcmovnbe
test
sbb
push
xor
inc
dec
xor
adc
cmp
sbb
xor
pop
jo
mov
push
lret
mov
je
cmp
scas
mov
lods
ds
ljmp
inc
shrl
das
adc
add
nop
outsb
sbb
xor
lock
fwait
mov
and
mov
mov
sar
xor
shlb
jecxz
jnp
lock
mov
add
pop
hlt
xchg
test
cltd
inc
or
hlt
ja
cmp
and
mov
push
adc
jecxz
cld
push
lock
and
xor
shr
xor
or
scas
mov
xor
sbb
lock
mov
pushl
fcomp
add
push
jno
pop
cmp
mov
jo
call
add
ss
or
xor
arpl
scas
scas
xchg
push
lock
lock
or
hlt
mov
add
out
call
xchg
push
ja
mov
pusha
jo
sub
lock
or
jo
cmp
and
cmp
mov
shlb
mov
adc
dec
and
add
in
jo
mov
data16
icebp
mov
mov
pop
call
add
xor
bound
jne
xchg
pop
xor
sub
sbb
lock
add
add
js
or
movsb
mov
repz
mov
jo
mov
ljmp
andl
adc
inc
push
push
hlt
sti
jg
movsl
add
xor
sbb
xor
or
jge
mov
inc
pop
jp
xchg
or
mov
adc
inc
fdiv
or
mov
or
add
xor
sti
jb
test
push
subb
dec
fistps
mov
test
pop
cmc
pushl
and
fs
jg
xchg
dec
dec
or
je
mov
cmp
dec
and
and
incl
push
push
cmp
lea
mov
mov
cmp
js
std
movsl
mov
test
or
pop
jno
in
push
lret
push
ret
adc
lret
and
popl
dec
jne
push
mov
sti
jg
mov
jmp
jnp
mov
or
sbb
insb
pop
mov
add
shrb
test
scas
add
test
add
mov
or
and
dec
mov
test
mov
stos
sub
fbstp
in
xor
repz
gs
std
out
push
cmp
fwait
lea
push
xchg
add
lods
lock
test
mov
mov
inc
mov
stos
cmp
xor
call
inc
scas
xor
xor
and
pop
push
clc
lcall
push
inc
push
adc
jne
popf
sti
add
add
dec
add
inc
and
addb
test
nop
nop
cli
sub
sbbb
insb
add
add
stos
lods
subb
or
push
fisttpl
mov
je
sbb
jbe
xor
jo
test
lea
xchg
scas
fdivrs
je
lea
lods
sbb
add
inc
cli
mov
add
repz
mov
add
or
or
out
push
add
mov
aam
push
or
icebp
cmp
pop
mov
or
pop
call
movsl
popf
add
or
or
mov
adc
cmp
xor
mov
aaa
sbb
pop
xor
push
pop
movsb
sbb
inc
push
adcl
cs
insb
mov
mov
pop
decl
push
ljmp
xchg
js
cwtl
test
test
out
jo
fs
aas
popa
sbbb
dec
fistl
dec
add
outsb
xor
loopne
inc
inc
adc
nop
jle
push
push
add
test
xchg
roll
pusha
push
test
movsb
jne
divb
inc
cmp
mov
sti
mov
ss
push
push
xor
add
xor
fdivr
cmp
add
mov
jo
pop
xor
add
loope
pop
inc
mov
int
sbb
pop
push
xor
mov
rorb
nop
inc
testb
add
jp
xor
xor
add
ja
adc
add
xlat
jno
ja
or
aam
xor
dec
mov
or
sbb
js
fildl
nop
and
xchg
divl
dec
xorb
inc
adc
or
sbb
bound
dec
adc
inc
or
xor
add
adc
rol
add
out
shll
add
pop
push
and
jbe
aaa
fidivl
stos
call
sbb
inc
mulb
incl
jo
adc
mov
sub
push
hlt
xchg
and
testl
mov
push
xor
mov
xchg
repnz
outsb
jne
loopne
pushf
xor
jbe
or
mov
jmp
pop
mov
in
sbb
leave
sar
mov
psubsb
push
jmp
sub
and
jnp
fisttpl
loopne
and
test
jb
out
xor
xchg
jo
clc
fcomip
outsl
push
push
call
jmp
adc
ficoml
jge
cwtl
xor
and
aaa
add
xor
not
xorb
jmp
call
sbb
cmp
mov
mov
cli
push
jmp
int3
std
xor
pop
outsl
xor
cli
mov
mov
sub
filds
clc
leave
push
mov
int3
or
sub
jo
add
mov
xchg
and
or
add
or
inc
and
add
popf
in
mov
aam
in
push
sub
mov
push
xchg
hlt
imul
dec
or
mov
pop
add
icebp
mov
call
sbb
xor
mov
jmp
xor
stos
dec
add
adc
pop
mov
add
sub
cmpsb
pop
xor
call
add
scas
in
rolb
daa
pop
adc
addl
xchg
or
xchg
add
push
jb
insb
mov
xor
lock
sbb
mov
push
stos
sti
ljmp
add
push
and
pop
mov
and
ficoms
mov
lds
ljmp
rcl
test
out
or
inc
adc
aam
outsb
loopne
arpl
jg
addb
mov
in
xorb
repz
add
mov
add
sbb
fiaddl
fsubrp
add
orl
les
ficoms
lock
jmp
push
repz
jl
mov
mov
imul
add
push
adc
lcall
or
add
fstpt
xorb
or
sub
incl
lods
arpl
adcl
xchg
je
and
add
addl
and
mov
arpl
xchg
sub
rcr
call
int
fsubrl
sti
add
jg
push
rclb
inc
ret
jnp
sub
pop
or
mov
into
pop
fcmove
daa
js
or
sahf
add
mov
mov
push
jbe
str
dec
ret
add
clc
decl
jo
push
or
mov
ret
sub
sub
iret
mov
sbbb
pop
push
push
sbb
push
sbb
sub
push
push
adc
les
and
or
sub
clc
jmp
sarb
jg
xor
xor
lcall
sub
cmp
es
xor
sub
adc
inc
sub
adc
adc
rclb
imul
sub
mov
sub
hlt
clc
shll
add
test
movsb
xchg
add
cli
in
call
mov
add
test
add
sub
or
push
mov
inc
in
add
sub
nop
adc
scas
push
sub
ret
dec
sbb
sbb
js
hlt
pop
and
or
and
cltd
rorb
add
cmp
hlt
push
movsl
ljmp
rcll
cld
je
fwait
dec
cmp
xchg
lock
cmp
fistpll
adc
mov
xor
and
inc
js
daa
addb
dec
push
lds
add
pop
rclb
rcrb
adc
rol
sbb
and
incb
mov
hlt
push
jl
adc
lret
movsl
add
cs
adc
add
int3
add
jle
popa
xor
sbb
aas
jg
sbbb
xor
bound
das
pop
jecxz
cmp
push
mov
popa
sbb
jp
js
loopne
sti
add
xor
sbb
aam
and
cmp
and
and
add
push
push
lock
add
enter
jp
pop
lock
add
fimuls
movsb
fldt
fldenv
or
and
sub
jno
pusha
mov
pop
mov
add
cmp
add
push
lea
pop
sub
fiadds
loopne
add
lret
or
mov
int3
nop
or
pusha
inc
out
push
popa
addr16
mov
dec
sub
pop
add
sub
xchg
clc
inc
push
bound
in
push
add
xchg
add
push
loopne
loope
push
ror
orb
pop
adc
inc
cld
fs
xor
je
push
jp
sub
inc
cld
mov
ret
add
add
and
iret
repnz
mov
jno
push
mov
outsl
mov
pop
jecxz
or
imul
sbb
add
sub
lods
mov
pop
and
inc
movsb
add
mov
jmp
push
adc
sub
roll
ljmp
dec
pusha
xor
and
jne
out
xchg
lret
call
test
mov
hlt
inc
mov
imul
mov
or
pop
or
push
adc
pusha
sub
clc
or
ret
adcb
pusha
push
xor
loopne
into
sgdtl
nop
push
hlt
loop
sbb
pop
adc
push
pusha
add
mov
add
arpl
mov
sbb
xchg
or
bound
and
or
add
out
loopne
push
insb
fldt
lock
sbb
out
data16
xchg
ret
or
fcoms
mov
sbb
shl
and
out
jae
pop
jl
loope
mov
ljmp
loopne
mov
mov
pop
mov
pop
loopne
js
aas
pop
ret
cmp
mov
add
xchg
cmp
add
and
xor
sti
and
xchg
out
mov
or
pusha
rorb
cmpsl
loopne
sti
jae
jle
cmp
add
cmp
lea
test
mov
es
hlt
add
into
loopne
push
enter
inc
movsb
mov
fimuls
clc
pusha
fisubl
cld
pusha
add
jecxz
push
mov
add
jo
or
and
jle
or
popa
xchg
and
fstps
cmp
fistpl
push
or
lea
or
pusha
pushf
popa
popa
lods
mov
inc
or
scas
insb
mov
pop
ljmp
stos
cmp
push
add
and
nop
mov
xor
popa
xchg
mov
popaw
es
mov
addb
les
mov
pop
loopne
add
xchg
lret
jnp
inc
data16
nop
sbb
movsl
enter
pop
dec
fists
inc
jne
punpckldq
mov
mov
outsl
sub
cwtl
loopne
gs
jne
add
jle
outsb
lods
popf
loope
pushf
jl
inc
mov
in
cmpsb
push
dec
ret
es
cmp
aas
add
xor
mov
clc
stos
jb
jmp
ljmp
or
jg
sbb
pop
xor
jmp
outsb
xor
or
int3
loop
test
lock
mov
adc
add
sub
nop
and
lock
cmp
push
push
jmp
xorb
xchg
pop
aas
xchg
aam
mov
divl
add
jp
adc
or
mov
ljmp
dec
pop
test
dec
sbb
sub
cmp
subb
andl
mov
call
push
cld
orb
in
xchg
fistpll
pop
and
push
rolb
inc
call
push
data16
fbstp
jo
push
je
lock
sbb
and
push
cs
scas
pushw
orb
mov
adc
jg
repnz
xor
push
popf
addb
inc
sbb
adc
outsl
shlb
add
push
ss
cmpb
jno
data16
sti
adc
popf
xor
clc
rcll
fisubl
scas
push
nop
jbe
inc
into
jp
insb
cmp
sbb
leave
and
fsubs
loop
in
or
test
out
xchg
jbe
cld
sbb
rcll
jmp
stos
hlt
das
xchg
fidivrl
or
push
lcall
mov
cli
arpl
xor
shlb
adc
push
ljmp
mov
inc
mov
scas
scas
xchg
addl
std
mov
adc
pop
add
mov
stc
jp
in
cmp
add
mov
mov
dec
mov
push
stos
filds
or
sbb
mov
mov
loope
jo
loopne
ljmp
mov
aam
test
mov
adc
cli
pop
cli
aaa
cmpl
mov
jg
lea
out
inc
dec
mov
mov
push
pop
inc
aam
xchg
rolb
icebp
sbb
aaa
lret
inc
call
or
adc
sbb
adc
xchg
and
mov
lock
rolb
and
and
sub
inc
adc
mov
mov
hlt
das
dec
pop
mov
call
xor
push
lock
push
add
adc
ss
icebp
pusha
xorl
inc
xchg
fdivl
inc
mov
mov
bound
pop
les
cmp
sahf
jle
rcrb
out
add
pop
hlt
popf
adc
xor
push
dec
jo
lock
inc
je
ret
xor
push
mov
call
jge
loope
mov
adc
jo
divb
aaa
adc
cltd
mov
stos
pop
adc
or
inc
mov
cmp
call
inc
lods
xor
xor
inc
ja
cmp
mov
jp
pop
lea
cmp
addb
add
fistps
call
sbb
call
sub
mov
jl
sub
lds
push
xor
jo
push
adc
xor
ret
dec
sub
popa
and
add
mov
nop
adcl
loope
ss
incb
add
dec
or
cld
sbb
lock
xor
push
jae
xor
inc
rcr
pop
xor
repz
insb
popa
mov
jb
icebp
push
mov
pop
mov
insb
add
aaa
add
loopne
sbb
mov
or
mov
mov
xor
fs
in
adc
mov
sbb
mov
add
sbb
outsl
clc
mov
push
xor
pop
adc
jo
xor
xchg
sub
add
lock
mov
inc
mov
test
sbb
jno
pop
adc
inc
repz
inc
xor
add
hlt
mov
lods
mov
push
inc
xor
or
push
pushl
sbb
clc
repnz
add
dec
pop
and
es
loope
xchg
scas
or
icebp
dec
jne
fmuls
mov
int3
xor
les
imul
or
cld
xchg
mov
loopne
push
clc
sub
push
mov
aaa
mov
xor
mov
leave
test
adc
jl
push
dec
sub
ret
inc
or
mov
mov
pushf
adc
lock
push
dec
stos
rclb
xor
out
inc
lock
or
stos
decl
xor
xor
sub
dec
rolb
jo
rcrb
adc
jo
xchg
aam
jbe
push
jbe
cwtl
adc
dec
filds
lods
jae
jmp
sub
cmp
sub
aas
nop
mov
mov
inc
mov
xor
stos
test
inc
jo
jg
jne
sarl
movsl
mov
mov
icebp
add
add
jo
dec
ret
pushf
xor
mov
xor
mov
jne
ljmp
inc
lock
in
xor
jo
frstor
or
mov
or
mov
addl
and
add
xchg
push
mov
mov
adc
sub
lahf
and
jo
divl
test
fadds
cmp
mov
add
xchg
adc
sbb
and
sub
rcrb
inc
or
andb
lcall
adc
fmull
push
push
mov
sahf
rcll
mov
inc
fs
inc
and
mov
stos
or
pop
pop
jl
and
push
pop
pusha
or
xor
inc
test
mov
adc
or
cmp
pop
cld
mov
jo
test
xor
and
pop
push
cmc
dec
mov
pop
mov
xor
adc
addb
andb
jg
xlat
loope
decb
cmp
xor
inc
jo
push
mov
in
or
pop
cmpb
int3
mov
andb
adc
clc
mov
mov
gs
jge
or
dec
aam
adc
das
mov
data16
divl
mov
push
call
xchg
addl
or
call
or
rolb
popf
mov
in
jle
je
lcall
adc
cwtl
xor
xor
push
mov
or
cmp
pop
lcall
cld
call
push
mov
cmp
mov
push
cmp
add
xchg
mov
bound
je
sbbb
mov
sub
inc
orb
mov
pop
dec
lea
enter
adc
push
sub
lock
clc
in
mov
test
mov
jge
fsubrl
mov
sti
ds
push
arpl
and
mov
add
mov
repz
test
dec
call
add
dec
push
add
jecxz
pop
flds
dec
mov
mov
add
imul
fmull
push
loopne
mov
mov
mov
pop
adc
or
aaa
cmpsb
lret
mov
pop
jb
sbb
and
cmp
test
es
mov
push
loop
clc
or
loopne
sub
dec
pop
repnz
loopne
sbbl
pop
xor
test
inc
add
mov
pop
xor
scas
dec
mov
push
les
mov
mov
pusha
adc
inc
inc
je
shlb
jno
add
jno
testb
clc
xorl
retw
outsl
outsb
push
insb
jp
sbbb
push
push
mov
push
push
xor
bound
mov
cmp
push
add
or
push
or
mov
int3
fwait
sub
inc
jbe
or
add
sahf
pushf
or
mov
js
sub
mov
push
incl
adc
mov
mov
adc
cli
add
adcb
inc
and
loope
inc
outsb
mov
ret
xchg
bound
pop
test
adcb
lcall
rorb
pop
lret
sub
sbb
sbbb
push
jmp
mov
mulb
into
adc
pushl
or
push
mov
lea
jbe
sbb
testl
test
decl
in
mov
mov
imul
addb
frstor
ret
mov
mov
movsl
stos
or
cli
rorb
lret
sub
mov
push
aas
adc
xchg
cmp
rolb
mov
js
or
xchg
je
and
push
mov
es
inc
pop
ret
das
call
or
or
jbe
lock
sbb
add
aam
mov
add
adc
or
xor
inc
dec
xchg
mov
mov
addr16
mov
fwait
cmp
adc
call
loope
test
inc
xchg
shrb
push
insb
scas
cmpsb
mov
lds
es
xor
mov
mov
jmp
dec
cmp
jle
add
inc
push
xchg
scas
push
push
dec
add
add
lcall
xor
rol
mov
jmp
aaa
mov
xor
lock
push
pushf
scas
lea
ret
mov
ja
inc
sub
loopne
cwtl
test
jb
shrl
and
les
test
clc
lock
in
or
xchg
cs
sub
cmpb
or
cmpsb
push
pop
jle
fucomi
and
das
inc
or
dec
dec
or
fcoml
orb
fildl
mov
shrb
push
adc
or
sbb
jge
jbe
push
cmp
adc
les
and
insb
jle
mov
adc
test
rorb
imul
push
add
pusha
popa
and
out
call
outsl
sub
ret
stos
cmp
or
mov
inc
or
dec
jae
cmpsb
jl
push
idiv
adcb
shl
sbb
dec
inc
xor
roll
std
scas
push
idivb
shl
jbe
mov
ss
icebp
mov
cmpsb
or
mov
incl
add
xor
lea
jl
dec
fnsave
or
out
out
push
movsb
call
or
adc
or
popa
cmpsl
cmpsb
lock
push
pusha
push
xchg
and
pop
lcall
xlat
sbb
xor
xchg
add
jae
adc
lea
out
xchg
loopne
lock
push
xchg
adc
leave
add
adc
mov
and
enter
cmp
fdivs
loopne
add
call
push
push
xchg
sub
in
adc
push
add
cmc
loopne
mov
test
test
jne
loopne
xor
dec
fwait
clc
jg
push
inc
and
ret
mov
push
lcall
cmp
push
add
ljmp
pushl
outsl
jmp
fs
leave
sbb
xchg
and
arpl
call
xor
xchg
ret
sbb
cmc
incl
xor
loopne
stc
cmpb
push
je
push
shlb
sub
xor
inc
sti
add
loopne
pop
and
loop
arpl
sbb
imul
cmp
pusha
jmp
jne
jbe
add
scas
fs
call
fisubrl
jb
cmc
inc
jnp
subb
add
test
mov
pop
pop
test
push
xchg
or
cmp
push
inc
ret
mov
jge
jmp
inc
pusha
mov
sar
pushf
icebp
js
mov
push
cmpb
dec
inc
pop
xor
mov
hlt
je
jmp
or
mov
loopne
stos
xor
xchg
dec
push
mov
jbe
test
xor
sbb
inc
je
fisubl
sub
mov
loopne
sbb
adc
push
cld
cmpl
lahf
in
call
push
les
add
dec
xor
push
push
push
loop
sub
pushf
push
add
add
xchg
outsl
add
pop
or
fs
push
push
test
mov
xor
pop
fdivrs
pusha
xor
inc
outsl
pop
or
clc
scas
mov
push
push
pop
das
loopne
loope
push
nop
gs
mov
and
mov
aas
push
pop
adc
fwait
mov
push
sub
hlt
loopne
sti
add
fs
push
popa
inc
ret
add
add
sub
je
push
pushf
adc
sub
movsl
pop
push
adc
xor
jl
mov
mov
sub
pop
ja
rolb
mov
inc
mov
addb
cmp
popa
jle
xchg
int3
xor
pop
jl
movsl
and
loop
inc
test
adc
push
ret
pusha
js
dec
or
xor
fistl
pusha
aad
loop
loope
adc
cmp
test
pop
push
ds
adc
dec
je
mov
inc
js
lods
or
out
les
sub
das
or
clc
mov
clc
je
adcl
inc
mov
adc
add
and
mov
je
loopne
mov
mov
ret
cmpsb
mov
or
xchg
data16
pop
sub
mov
sbb
add
adc
mov
pusha
mov
andb
inc
je
dec
ret
sarb
mov
adc
push
mov
ds
das
or
fisubrl
rorl
sbb
ret
scas
call
fwait
outsb
fdivrs
je
arpl
enter
and
loope
movsl
xor
js
pcmpgtb
mov
int3
je
or
xor
pusha
adc
outsb
inc
sbb
push
pop
mov
scas
cli
ljmp
lock
fidivl
and
add
bound
popa
add
or
xor
ljmp
js
or
mov
icebp
mov
mov
scas
mov
les
sub
push
cmpsb
les
jp
push
push
clc
scas
push
jo
pop
add
jle
and
repnz
inc
clc
test
add
xchg
xchg
xor
cltd
and
add
inc
add
fwait
jp
add
outsb
or
pop
dec
out
jp
cmp
je
or
add
mov
cmp
inc
pop
add
push
sbb
push
push
mov
sub
mov
mov
stos
inc
rclb
mov
adc
inc
loope
xchg
push
in
mov
js
dec
mov
add
push
jo
lea
jecxz
hlt
mov
mov
mov
ret
daa
shl
mov
or
out
jno
dec
test
dec
add
jp
add
mov
iret
call
ljmp
cwtl
jno
jne
mov
mov
cmp
call
inc
mov
or
jl
mov
and
mov
gs
sbb
sbb
or
decl
jmp
sub
pop
ds
jo
sub
xchg
cli
dec
push
mov
xchg
pop
push
test
mov
sub
lock
hlt
jg
mov
gs
mov
add
jne
mov
je
push
cld
loopne
mov
mov
adc
cmp
dec
pusha
aas
mov
mov
jo
ret
loop
or
xor
dec
jo
addb
xor
mov
lret
mov
xor
pop
dec
push
lcall
xchg
mov
or
out
mov
push
cmp
push
adc
cmp
incb
lock
or
sub
je
je
pop
xchg
cmp
ss
cmp
clc
mov
adc
cmp
cltd
stos
xchg
ja
adc
inc
nop
push
stc
mov
or
add
dec
insl
push
cmpb
int3
sub
dec
pusha
xchg
loop
sub
scas
xor
lock
repnz
popf
inc
lds
hlt
add
sbb
call
and
ja
add
pop
and
sbb
pop
rorb
repz
inc
sub
push
jl
sub
mov
divb
pop
aam
shr
add
sub
divb
fwait
mov
dec
or
aas
cmp
cld
movsbl
ds
pushw
pop
jb
cmpsb
cmovno
out
adc
sub
lock
jl
stc
jg
xor
push
pusha
or
sub
and
push
mov
xor
cmp
pop
pop
cmovbe
movsl
mov
clc
call
mov
lret
cmp
jbe
lcall
ja
adc
mov
cmp
jb
ss
or
incb
add
or
ds
stos
in
sub
into
sub
iret
enter
sarb
sbb
aas
inc
mov
and
cmp
pop
cmp
stos
or
in
outsb
test
hlt
rorl
lea
cmp
sub
mov
cmp
jb
cmp
lret
or
mov
aam
cmp
jb
mov
movl
jo
je
addb
push
cld
jmp
cmpb
dec
andb
xchg
pop
xorl
mov
xor
dec
lret
push
jne
scas
sub
sub
jmp
sahf
cld
inc
add
mov
jne
push
or
mov
pop
mov
clc
shlb
ret
stos
cmp
lea
shr
sbb
out
pushl
xor
mov
shll
ljmp
ret
xor
xchg
jo
or
mov
jo
loope
add
jb
loopne
jle
xchg
outsb
subb
decl
mov
int3
adc
mov
jo
sarb
dec
push
push
cli
lock
mov
gs
cmp
fwait
data16
loop
lods
inc
push
xor
jae
add
lock
es
xor
fadds
cld
fmuls
mov
rorl
mov
ret
pop
decl
or
shl
or
rcll
xor
ljmp
shlb
inc
add
pop
xor
add
adc
mov
add
fstp
sbbb
xchg
or
sar
pop
add
movsl
mov
adc
mov
dec
or
lahf
lock
adc
notb
rolb
lods
pop
add
inc
dec
jmp
add
or
mov
mov
push
sbb
cld
jp
sti
xchg
sarb
cmp
add
push
stos
in
cmp
in
or
or
insl
rcrl
jmp
in
in
xor
add
pusha
cld
rcrl
cmpsl
sbbl
mov
pop
mov
or
adc
fbstp
mov
pop
cmc
out
and
mov
call
or
mov
and
je
enter
adc
inc
or
ret
rorb
call
xchg
push
pop
movl
in
inc
push
push
call
jg,pt
cmp
xor
icebp
dec
hlt
pushl
mov
data16
clc
adc
cs
jge
test
adc
cmp
mov
or
lret
clc
push
sbb
and
je
into
call
mov
aad
mov
outsb
mov
cli
sub
cmp
hlt
lods
lods
gs
ljmp
mov
test
add
xor
push
cmp
mov
call
stos
xor
xor
pop
std
dec
push
sarb
in
pop
es
test
mov
mov
ret
sbb
xor
jl
or
pop
jb
cld
scas
push
lods
loop
add
lock
into
push
add
push
mov
jne
cmp
mov
or
loopne
ficompl
add
sahf
cmp
xorl
loopne
sbb
ret
sbb
cli
add
loop
xor
clc
frstor
push
jbe
mov
ret
in
jle
adc
or
cmp
sbb
or
pushf
aaa
ret
xor
add
icebp
lret
mov
inc
mov
frstor
loopne
mov
cmpw
jne
or
sbb
testl
or
add
cmp
pop
inc
shll
sti
lods
das
xor
jo
jg
jno
lret
add
xorl
push
lcall
std
sbb
clc
add
popa
add
push
push
dec
push
mov
jge
push
and
pop
mov
jp
xchg
jmp
xchg
nop
js
out
inc
mov
adc
mov
iret
mov
sti
cmp
jne
pop
ret
in
adc
push
pop
inc
test
ficompl
je
xchg
mov
call
aaa
fs
jp
dec
or
jle
sub
sbb
push
fcom
mov
rclb
push
adc
adc
in
push
js
push
fidivrs
add
fsubrs
or
pop
pop
pop
mov
neg
add
adc
add
sub
loopne
call
imul
pop
repz
lock
cmc
or
xchg
or
xchg
and
xor
sub
cmp
andl
cld
add
adc
clc
jb
subl
jb
inc
add
loope
rorb
iret
jno
adc
add
sbb
inc
lock
jb
sub
outsl
flds
rcll
call
push
mov
dec
imul
push
into
test
sub
fdivs
mov
cmp
mov
sbbl
sbb
xchg
or
loop
push
lods
packssdw
pop
test
jmp
or
xor
nop
clc
add
or
popf
cmp
inc
enter
std
incl
andb
push
arpl
sbb
mov
xorb
sub
xchg
je
imul
add
inc
inc
push
push
jbe
xorb
mov
into
popa
mov
mov
es
push
add
inc
push
call
es
orb
push
call
xchg
or
and
xchg
mov
movsl
rorb
sub
sub
decl
int3
push
cmp
xchg
mov
sub
mov
and
cmp
inc
inc
push
pop
mov
ja
mov
adc
jnp
sub
adc
shlb
imul
adc
scas
aam
popf
sub
cwtl
shrb
movl
rorb
pop
add
sub
lret
pop
lock
and
cmpb
add
xchg
xchg
add
mov
roll
xor
lods
ja
jb
and
add
test
enter
in
pop
dec
mov
dec
cltd
sbb
mov
ja
mov
inc
and
and
ret
and
stc
insb
ds
bsf
lretw
je
or
mov
cmpsl
lret
dec
mov
dec
jns
push
aaa
movsb
icebp
cmp
or
push
lock
sarl
rorl
lea
lods
add
pusha
sub
lcall
adc
xchg
leave
subb
adc
xchg
or
mov
shlb
sub
mov
adc
cmp
mov
fimuls
stos
in
call
mov
stos
jg
imul
sti
jl
xorl
lcall
push
std
ret
jmp
shlb
cli
adc
adc
adc
add
adc
pop
out
insb
pop
lea
adc
xor
ret
adc
divl
rol
fildll
rolb
cmp
jne
and
stos
mov
xor
in
leave
push
sub
jae
icebp
mov
xchg
rclb
mov
sub
lcall
pop
mov
fsubrl
enter
mov
xor
mov
add
inc
dec
mov
fists
xchg
jle
dec
cld
inc
push
or
loopne
jb
sbb
aaa
add
pushf
aam
mov
rcl
test
das
nop
fidivs
pusha
xor
in
in
in
outsb
lret
push
pop
bound
test
push
push
xor
xchg
push
fimull
ds
pusha
add
add
fiaddl
push
call
add
xor
inc
sbb
add
sbb
mov
add
test
pmaxsw
cmp
sub
pop
leave
test
bound
inc
sbb
je
pop
jecxz
lcall
mov
dec
inc
xor
dec
pushf
jbe
jmp
xor
pop
les
cmpb
pop
call
jp
sbb
and
outsb
cwtl
movb
lods
stos
cmp
ret
test
inc
clc
call
into
or
test
or
add
mov
mov
lock
mov
push
in
push
xorb
jle
jmp
pusha
xchg
out
cmp
mov
xchg
push
dec
fdivrl
pusha
add
or
jecxz
loopne
or
jne
sbb
mov
pop
add
mul
negb
pop
std
je
dec
outsl
or
je
loopne
mov
and
cli
ljmp
lock
aam
xchg
inc
adc
pusha
pop
inc
and
ss
cmp
or
lea
inc
xor
das
adc
les
ss
cmp
push
xor
aam
shl
imul
add
mov
jl
push
dec
cmp
es
andw
pop
sbb
adc
loopne
add
loope
daa
ret
adc
rorl
mov
lcall
mov
adc
in
cltd
inc
xor
sar
pop
sub
jb
inc
pop
pusha
inc
cli
adc
add
push
sub
nop
bound
xor
dec
and
les
movsb
adc
movsl
push
or
push
jb
rclb
mov
sbb
lods
sub
dec
xorb
push
scas
push
mulb
lock
je
adcl
jne
adc
adc
push
loope
rcrl
ds
mov
add
data16
shll
xor
and
sbb
pusha
std
outsl
cmpsb
loop
sub
and
add
push
add
pop
mov
mov
les
pusha
add
and
sbb
push
or
stos
and
xor
mov
pusha
mov
mov
or
push
and
fcmovb
xor
sub
jle
mov
add
pop
or
xchg
addl
jne
pop
cmpsl
stos
imul
je
aas
and
loope
ljmp
shr
jp
adc
roll
adc
add
je
inc
mov
push
dec
jmp
sub
push
dec
mov
mov
loope
ret
shrb
loopne
dec
adc
es
mov
sub
mov
and
xor
jl
adc
iret
aam
incb
movsl
scas
push
data16
jmp
mov
sub
mov
add
shll
lret
pop
dec
fisttpl
add
sub
bnd
mov
es
add
scas
stos
lods
subl
mov
jmp
dec
lcall
add
mov
and
jmp
mov
push
stos
dec
jo
stos
rclb
add
mov
dec
fcoml
jmp
adcb
stos
loope
cld
call
and
sahf
std
push
sbb
xor
inc
push
add
sbb
out
push
mov
jl
in
push
mov
lret
jg
idivb
pop
dec
inc
adc
test
lret
adc
mov
or
or
ljmp
fcmovnu
add
inc
or
nop
push
or
mov
stos
dec
lea
mov
pop
mov
outsl
sbb
and
mov
shlb
adc
add
dec
add
ja
lock
data16
xor
inc
sbbb
push
mov
add
jne
xor
add
and
decl
cmp
lock
cltd
imul
or
shl
add
xchg
cmp
add
insb
test
pop
adc
aam
jmp
adc
jmp
push
or
pop
setne
or
adc
rdtsc
adc
mov
mov
sub
jmp
lea
ret
or
sbb
or
cltd
orl
mov
xor
icebp
add
xor
and
ljmp
xchg
test
mov
mov
movsb
mov
aas
or
lret
add
data16
iret
mov
jmp
jo
ljmp
ss
or
pop
lock
jmp
jp
mov
or
jmp
or
loop
mov
sub
xlat
jb
repnz
dec
xor
sbb
mov
adc
stc
mov
idiv
xor
pop
xorb
incb
icebp
or
test
mov
cwtl
fptan
sti
data16
dec
idiv
push
xchg
mov
or
add
jg
test
pop
lock
stos
push
dec
jg
cmpsl
je
clc
inc
je
or
ljmp
and
aam
pop
add
je
mov
lea
add
das
pop
sub
mov
addr16
add
push
xor
sbb
xchg
jge,pt
clc
adc
add
adc
imul
loopne
enter
mov
push
test
add
sbb
adc
jmp
inc
and
xor
push
jmp
std
mov
and
jae
lock
or
jmp
ret
push
es
nop
add
jo
mov
nop
mov
jb
aad
call
and
shrl
mov
in
add
enter
icebp
cmp
sbb
inc
cli
pop
insb
add
jb
add
jne
addl
xor
mov
adc
repz
ljmp
add
mov
test
mov
add
push
es
mov
adc
imul
out
cmp
sbb
or
xor
jne
mov
or
aaa
repnz
divb
or
loopne
mov
lock
insb
jmp
lahf
lock
sbb
fwait
cli
imul
add
push
push
out
jmp
and
icebp
inc
cs
fs
rcll
lcall
pushf
and
mov
adc
idiv
popa
pop
push
xor
xchg
sarb
dec
mov
add
jb
jne
ret
push
sub
mov
xor
push
repz
push
lret
ljmp
add
jl
push
adc
ds
lcall
cs
adc
daa
hlt
inc
int
push
les
icebp
dec
fistl
repz
xor
and
push
cmpl
sbb
adc
dec
clc
xor
lret
fucomip
push
test
arpl
push
mov
sub
or
lock
mov
ret
repz
std
jmp
cmpb
lock
mov
mov
decl
push
repnz
inc
pop
xor
add
and
iret
sub
sub
outsb
push
jo
jmp
mov
test
inc
xchg
test
or
xor
push
rclb
outsl
pop
sub
jle
cmp
jl
idivl
cli
in
jp
jno
or
add
orl
jle
add
pop
and
push
inc
inc
jle
dec
aam
je
repnz
sbb
rorb
clc
push
or
and
xchg
xor
out
sbb
mov
push
std
outsl
mov
jno
cmpsb
or
push
and
or
fisubl
je
andb
jp
add
dec
dec
and
unpcklps
push
ret
cmpb
insl
outsb
pop
and
or
lock
mov
fdivl
push
imul
inc
ret
xor
stos
in
pop
aas
or
or
xor
nop
xor
lock
pop
xor
adc
lock
mov
dec
sub
js
js
ss
xor
ret
mov
jo
test
dec
mov
mov
add
sbb
imul
imul
stos
and
jno
div
dec
out
pop
mov
das
mov
je
inc
mov
dec
push
mov
push
or
jo
jno
dec
sbb
testb
loop
inc
and
sbb
push
push
xchg
jae
xor
fs
sub
cmp
xor
jae
or
adc
jg
loope
lods
mov
lcall
inc
sub
repz
add
addb
cli
adc
push
pop
mov
push
mov
aam
stc
mov
cld
add
sbb
xchg
pop
sbb
rcr
cld
fucomip
or
xchg
jo
shlb
pop
ror
inc
lret
fisubrl
pop
pusha
ret
mov
xor
cld
fwait
push
xchg
sbb
inc
cs
hlt
add
icebp
add
jg
in
push
out
pusha
shrd
icebp
sbb
inc
stos
ja
pop
or
pusha
jmp
mov
gs
nop
or
dec
ret
pop
adc
repz
icebp
add
clc
mov
lock
mov
sbb
mov
sub
stc
add
mov
jnp
shlb
inc
call
push
shrb
sub
mov
push
das
push
or
jmp
scas
add
fcompl
push
xchg
push
jmp
jmp
add
nop
repz
sbb
jmp
cs
sbb
repz
insb
mov
cmp
lret
mov
incl
add
test
repz
push
hlt
push
sti
dec
je
movsl
sbb
xchg
test
add
adc
mov
add
pusha
test
and
adc
rcrb
add
xor
inc
or
mov
inc
outsb
call
idiv
jl
add
and
pop
addb
outsb
je
stc
je
push
lahf
add
fwait
push
add
push
push
add
and
push
pop
adc
and
clc
sub
add
xor
add
or
push
scas
add
mov
pop
lds
sub
loop
adcl
mov
dec
jno
fdivl
xor
andl
js
and
cmovo
or
xchg
or
sub
daa
xchg
subb
icebp
jg
lock
test
push
movsb
or
fisubl
cli
cmp
mov
cmpsb
jns
lcall
test
or
ret
incb
lods
std
outsl
dec
mov
and
cmpsb
mov
xchg
sbb
mov
sub
adc
lock
xchg
pop
ret
add
xor
add
call
stc
rolb
movb
ret
dec
or
adc
sarb
push
dec
shlb
push
pop
sub
cmc
jmp
jne
xor
adc
sub
pusha
push
inc
push
mov
sub
outsb
push
sarb
std
ljmp
rclb
rorb
jne
rclb
shlb
fcmovbe
aas
push
scas
in
mov
sub
push
in
pop
popa
mov
dec
test
jle
adc
cmp
fucomi
ret
push
push
and
and
sbb
lds
jmp
mov
jnp
mov
ljmp
pushl
leave
mov
sbb
and
shlb
jno
loopne
adc
rolb
outsb
fisubrl
pop
mov
int3
lret
out
in
xlat
lds
or
inc
repnz
loopne
pop
sbb
ror
mov
push
cld
fwait
push
inc
pop
sub
jne
rorl
pop
test
incl
ret
sub
adc
inc
je
dec
mov
dec
rcrb
out
pop
mov
jg
shlb
inc
push
inc
arpl
arpl
lds
inc
loop
add
mov
das
add
jp
mov
sub
mov
movsb
xor
cwtl
xor
xchg
lods
loopne
daa
into
das
or
push
test
jmp
lock
adc
adc
repz
or
adc
fildll
sbb
jp
dec
je
loop
lock
hlt
loop
mov
ljmp
cs
sbb
cmp
pop
loopne
mov
je
add
js
push
jp
enter
or
mov
mov
mov
decb
popl
test
and
xchg
icebp
aad
dec
xchg
sub
xor
stos
mov
jbe
repz
push
push
clc
sub
mov
lcall
les
sbb
sete
das
sar
in
pop
and
push
cmovno
jp
iret
jmp
mov
inc
es
inc
call
inc
add
mov
mov
or
sbb
sti
mov
shll
cmpb
in
push
push
loop
or
add
pusha
mov
testl
sub
popa
or
icebp
je
addl
outsb
orl
sbb
add
and
fisttps
jmp
add
jmp
out
rcrb
nop
scas
add
aam
sub
cmpsl
cmp
xor
cli
or
push
lret
pop
int3
jne
xor
or
scas
mov
roll
xor
adc
xor
or
jg
insl
sti
cli
inc
gs
insb
leave
add
or
or
sub
or
sbb
add
pusha
xchg
repz
and
xor
adc
loopne
or
push
mov
jg
loopne
inc
lock
mov
adc
or
in
and
jmp
sbb
rclb
movb
repnz
push
mov
data16
je
out
push
sbb
add
jo
repnz
ss
inc
out
bound
loopne
ljmp
and
xchg
xor
les
pusha
mov
ret
adc
fdivr
sbb
loopne
fldt
shl
inc
sub
incl
fidivrs
jg
push
add
and
add
data16
mov
and
out
test
xor
rolb
add
testl
ss
je
mov
adc
into
loope
adc
lret
ficoml
sub
test
test
jg
shlb
dec
pusha
mov
cmovo
push
push
popa
or
mov
cmp
adc
jl
mov
sub
push
stc
test
mov
nop
loopne
bound
sub
or
cmp
adc
pop
adc
mov
xchg
icebp
or
mov
or
sbb
hlt
ds
cmpsl
pusha
push
lods
inc
fisttps
or
pop
pusha
stos
and
push
mov
movb
stos
in
cltd
lret
jae
pusha
add
add
pcmpgtb
sbb
mov
decl
sub
jb
lods
loopne
das
loopne
movsb
inc
pusha
or
xor
mov
rcrl
add
add
sub
cmp
or
dec
sarb
add
es
das
or
loop
or
add
ret
fistpl
clc
mov
js
outsb
cmp
cmp
xchg
fucomip
jmp
jno
adc
mov
adc
testb
ret
mov
xor
adc
adc
ret
mov
adc
mov
or
lock
lods
cwtl
popa
jp
mov
jno
jle
xlat
dec
add
or
add
jg
daa
cmpl
int
sbb
mov
or
sub
or
cmp
adc
cmp
mov
rcr
je
jg
mov
mov
je
push
lods
pushl
dec
div
cmp
cmp
arpl
xor
fdivr
ljmp
mov
stc
mov
xor
aam
sbb
xor
or
jmp
movsb
sub
push
push
xor
shll
clc
incl
jmp
mov
movaps
rclb
or
aam
inc
xor
notb
mov
cli
and
call
cmp
data16
js
outsl
in
into
jo
insb
xlat
lds
jo
cli
pop
mov
mov
pop
icebp
add
sahf
icebp
add
shrl
and
mov
cmp
notb
dec
inc
negb
inc
incb
jo
or
xchg
hlt
incl
jne
aas
ja
inc
add
and
cmp
adc
mov
inc
ljmp
or
mov
stos
pushw
jl
mov
mov
lds
sub
popa
inc
mov
imul
sub
outsl
enter
call
decb
leave
sbb
in
sbb
dec
jnp
imul
or
fcmovbe
mov
sub
aaa
add
pop
push
jno
xchg
push
add
dec
int3
fdivrs
inc
fdivl
add
inc
rclb
in
shl
push
adc
rcll
out
inc
adc
inc
push
stc
fwait
dec
sub
inc
push
jge
sti
fisubs
or
fcmovnbe
test
sbb
pop
int
push
adc
push
stos
add
push
into
inc
jp
add
xchg
jbe
adc
mov
not
mov
adc
xchg
add
int
ss
sahf
fs
mov
mov
add
push
dec
leave
sbbb
sub
and
pop
mov
adc
push
xor
icebp
fimull
xchg
pop
jb
adc
test
push
push
sub
sarb
mov
mov
jp
adc
call
clc
cmp
mov
sahf
call
sbb
pop
push
dec
sar
push
and
push
mov
test
rolb
mov
jb
mov
stos
pop
pop
jg
pop
push
push
cld
fbld
pop
jne
movsl
loopne
les
mov
and
xchg
rol
andl
jo
js
cmc
sbb
add
add
addl
fldl
jge
cmp
pop
fmuls
in
mov
push
pop
add
enter
test
fstpt
or
jbe
div
mov
xor
rorb
aaa
or
pop
jp
add
test
push
or
mov
push
jge
cmpsl
call
clc
push
mov
divb
call
dec
cld
mov
cmpl
pop
jle
mov
jo
adcb
call
add
cmp
jmp
ss
jl
push
adc
fildl
and
or
je
cmp
adc
jo
aam
push
rcl
test
cmp
jg
mov
jmp
out
lock
jg
or
xchg
add
mov
adc
pop
sahf
add
or
jno
inc
pop
and
mov
add
xor
push
mov
adc
pop
jne
popa
jae
pop
sarb
into
adcb
inc
ret
or
aam
clc
mov
dec
cli
fisttpl
ljmp
jo
adc
in
inc
xor
cmp
adc
lock
cmp
jb
leave
xchg
rolb
scas
insl
add
pop
shll
pop
xor
lea
mov
aaa
inc
xchg
subb
or
jbe
adc
push
or
test
push
inc
ror
dec
xchg
popa
inc
call
lods
pop
les
insb
scas
lea
pop
add
push
movb
push
hlt
out
dec
ret
in
jb
xor
bound
mov
jb
or
ret
jmp
clc
outsl
jg
push
or
mov
cs
lea
loope
ret
and
add
outsb
aam
les
shlb
add
orb
pop
sahf
int
pushf
stos
mov
mov
lock
push
dec
or
cltd
lea
or
setb
pushl
mov
jl
lea
movsb
xor
adc
dec
push
repnz
mov
ljmp
mov
sbb
push
movsb
lock
push
cli
lods
sub
call
add
sub
jnp
jb
data16
jl
aas
push
subb
or
jne
mov
push
jnp
les
push
cmp
push
dec
mov
pop
pusha
lds
roll
sbb
xor
js
mov
dec
lea
call
mov
cltd
xor
xor
adc
icebp
or
popa
mov
push
add
outsb
mov
xor
sti
and
stc
divl
addl
je
xor
push
shrb
xor
lock
and
mov
add
mov
pop
and
out
adc
mov
or
pop
inc
aam
pop
mov
dec
test
inc
jb
jle
push
push
lock
jo
inc
push
push
pop
movsl
mov
sbb
lods
jno
scas
and
sub
orb
lods
sbb
add
xor
inc
and
repz
push
popa
jb
xor
mov
push
jo
sub
or
xchg
sub
push
sahf
mov
test
pop
inc
mov
fimull
leave
test
int3
mov
jle
out
test
popa
add
sub
push
inc
nop
pop
jp
test
mov
xchg
and
clc
inc
push
or
dec
mov
shr
xchg
add
and
or
mov
mov
or
mov
dec
enter
mov
hlt
pop
test
pop
add
ds
adc
enter
fistpll
push
sti
je
pusha
jbe
incb
dec
in
push
adc
mov
cmp
push
push
je
xor
add
or
aam
in
adc
xor
xchg
mov
daa
push
inc
decl
sbb
or
int3
repnz
lcall
mov
add
cmp
bound
jbe
aam
js
fcmovbe
push
mov
mov
push
and
and
xor
rclb
incb
dec
loop
faddl
xor
add
fcoms
and
push
and
cmp
cs
pushf
xor
aaa
fbstp
repnz
inc
jbe
fdivr
addl
adc
jge
add
repz
add
inc
add
cmp
push
fcmovne
gs
nop
mov
inc
loopne
cli
pop
lods
add
call
cmpl
cmp
nop
les
xchg
add
pop
or
jae
rol
push
dec
rorl
fadds
dec
jo
xor
mov
movsl
add
inc
pop
aam
mov
pushl
pop
rcll
xor
je
and
inc
pop
pop
add
sub
or
add
in
cwtl
mov
or
outsl
adc
push
insb
jl
jecxz
pushf
aas
cmpl
adc
add
add
add
inc
rcr
lcall
in
insb
loop
add
cmpb
adc
xorb
sub
pop
jnp
jb
cs
push
data16
test
jne
call
xchg
or
cmp
rcr
nop
add
fildl
les
in
adc
pop
adcl
ret
adc
mov
xor
call
sbb
insb
add
xor
mov
sbbb
div
mov
mov
scas
ret
or
adc
cld
dec
loopne
push
jbe
push
jo
inc
rcll
mov
scas
adcb
icebp
inc
cmp
out
and
or
adcl
xchg
add
stos
fisubrl
push
jge
add
or
in
sbb
fs
mov
mov
adc
mov
push
int3
fistl
mov
xchg
adc
hlt
add
adc
pop
or
out
add
pop
loope
xor
mov
rorl
out
xchg
mov
xchg
xchg
popa
dec
add
std
je,pn
sub
mov
ret
mov
insb
fs
and
add
dec
or
push
adc
push
fists
movsb
clc
bound
pop
rcrb
adc
and
push
push
or
orb
or
and
xchg
cmc
jg
push
mov
push
push
pop
call
fildl
loopne
or
ror
mov
js
cmpsb
jmp
mov
mov
lea
addl
jbe
xchg
jo
decl
icebp
add
cli
add
jo
add
outsb
clc
jne
dec
or
xchg
fldt
pusha
test
and
test
adc
and
xor
push
inc
mov
pop
cltd
call
xchg
sarb
fsubp
xor
mov
push
adc
outsb
call
adc
jo
and
fbstp
push
mov
jne
loop
add
jmp
and
xor
ror
popf
ret
repnz
mov
movzwl
stc
and
popa
jo,pt
faddl
or
push
adc
xor
xchg
incb
mov
add
pop
call
jno
jg
cmp
jae
push
test
sbb
ret
or
dec
adc
add
xchg
inc
sti
jg
mov
pop
leave
jmp
xchg
ja
mov
cmp
sub
pop
mov
jmp
add
outsl
pusha
jg
test
or
movsl
cld
adc
outsl
push
loopne
pusha
dec
xchg
loopne
push
andl
dec
xchg
arpl
lcall
mov
add
adc
ret
inc
sar
in
cmpsb
mov
fsubrl
push
push
adc
nop
add
ret
jg
jmp
xchg
pusha
adc
bound
leave
add
jbe
jecxz
push
cmpsb
rolb
and
sar
xchg
mulb
scas
push
mov
mov
add
aaa
mov
dec
clc
ret
movsb
nop
loopne
cmpsl
lea
bound
sub
fildll
arpl
add
push
xchg
cmp
dec
push
rorw
cmp
xor
pop
or
add
loopne
push
lea
loopne
push
pop
pusha
imul
adc
and
nop
popa
add
les
add
subl
pop
scas
fidivl
sbb
or
call
sahf
nop
jl
subb
jl
jle
pop
sub
add
aad
sbb
popa
and
xor
orl
push
arpl
repnz
insb
outsl
or
mov
call
mov
pop
sub
ds
push
loopne
push
mov
add
loope
sub
mov
add
loopne
je
std
xchg
clc
or
adc
leave
ret
loop
cmp
pusha
hlt
dec
sbb
jl
cmp
cmp
loopne
mov
fsts
sti
add
sbb
pop
inc
jb
and
push
in
sti
cmc
out
adc
rorb
xor
jg
ljmp
loop
pop
cli
loope
xor
or
push
adc
sbbb
out
jne
popa
sbb
ljmp
sbb
lea
jne
mov
pop
add
jno
jmp
dec
test
fildl
jb
pop
loopne
pop
inc
add
mov
and
inc
mov
popa
xor
cwtl
das
adc
jle
pop
jnp
shlb
push
inc
adc
adc
pop
inc
mov
enter
inc
jno
cmp
jp
pop
and
sub
jmp
pop
dec
or
call
mov
sub
lea
cmp
fadds
push
add
add
test
aad
pop
add
xlat
jl
bound
sub
pusha
adc
push
jecxz
mov
xchg
cli
cmpl
and
jmp
inc
test
jo
mov
sub
cmp
decl
jle
lods
jl
add
add
cmp
cmp
cmp
popl
lock
popa
and
adc
mov
insl
sbb
add
pushf
sub
popa
ss
pop
pop
pop
cmp
ds
insb
cli
xchg
xchg
ret
scas
call
loope
xchg
sub
cmp
scas
and
jmp
cwtl
out
pusha
insl
sbbb
inc
pushl
add
call
jmp
jo
fmuls
pusha
add
adc
adcl
mov
inc
imul
or
movsl
or
decb
xor
pop
sub
mov
add
cmp
and
sub
sub
adc
repz
or
push
xor
ss
movl
adc
dec
data16
add
dec
push
lcall
rcr
rcr
add
mov
xor
dec
push
lea
addl
loope
pop
or
lcall
ljmp
push
es
icebp
in
inc
and
ljmp
cmp
mov
outsb
inc
jmp
sbb
mov
sbb
ljmp
inc
dec
out
rcl
shll
inc
in
out
xchg
inc
pop
data16
sub
icebp
fldt
loopne
add
clc
loopne
mov
adc
and
and
pusha
lea
jle
stos
ss
inc
pop
aam
test
mov
add
or
jle
jl
add
xor
ss
pop
or
xor
mov
inc
test
mov
rcr
inc
shlb
shrb
les
repz
sbb
hlt
mov
mov
xchg
jge
lret
ret
mov
call
ret
mov
mov
adc
mov
add
fdivl
add
mov
pop
movsb
sbb
lret
inc
adc
sub
cmc
adc
call
fcmovnb
and
jmp
inc
cmpl
push
jb
idivl
push
cmp
push
and
push
test
adc
jo
sbb
adc
cmp
and
pop
mov
add
mov
cli
in
and
fst
nop
mov
mov
cs
loopne
in
jmp
mov
mov
jnp
je
push
mov
jo
xlat
shlb
xor
mov
jo
jmp
dec
adc
adc
mov
out
xorl
xorl
mov
add
add
push
push
ds
lods
xor
mov
cltd
add
pushl
test
ja
dec
hlt
pusha
adc
lahf
mov
xor
loope
enter
inc
sub
inc
mov
mov
scas
andb
or
xor
inc
sbb
and
scas
lods
data16
pop
testb
sbb
cld
inc
or
loopne
sub
push
and
jg
xorb
repz
test
mov
test
test
sahf
inc
loop
or
or
xchg
cwtl
add
gs
jle
pop
push
add
js
adc
mov
mov
sbb
sbb
push
inc
inc
cmpsb
push
mov
mov
add
sub
std
sub
add
mov
out
add
call
add
das
int3
xchg
jl
xor
cmp
movsb
xorb
mov
xor
and
ja
dec
shll
mov
inc
testb
sbb
icebp
jb
in
mov
xchg
add
clc
pop
sub
fcomip
fwait
lahf
jle
clc
rolb
loope
or
cmpsb
adc
push
add
lock
out
insb
nop
decb
jno
call
push
add
or
dec
lock
dec
pop
push
outsb
mov
push
loope
loop
lea
stos
sub
cld
and
lods
mov
xor
dec
les
cmp
ljmp
mov
jmp
repz
cmpsb
mov
jbe
jg
stos
push
pushf
push
xchg
mov
push
ljmp
adc
popa
repnz
enter
adc
dec
daa
std
outsl
loop
and
jb
scas
jne
lock
push
xchg
aam
mov
push
pop
mov
mov
and
sahf
call
dec
cmc
outsl
ret
icebp
adc
ds
adc
xor
inc
pop
lock
cmpsb
push
je
sbb
lods
push
jo
dec
aaa
add
daa
inc
lods
jge
or
sbb
loopne
xor
inc
ja
xchg
jo
fistpl
mull
or
add
jmp
cmp
jmp
andl
test
fs
mov
push
and
adc
adc
push
incb
and
or
add
std
je
inc
xor
or
icebp
mov
das
add
icebp
jmp
or
or
lock
jmp
in
adc
pusha
inc
or
jmp
mov
sbb
push
dec
in
mov
add
mov
pop
and
movsb
cmp
or
das
jmp
and
pop
test
fsubs
xchg
push
or
add
mov
xchg
mov
call
xchg
inc
pop
leave
cmp
data16
fisubrl
jbe
jp
addb
add
rcll
push
xor
jl
sbb
jecxz
mov
mov
call
jo
mov
push
add
xor
push
in
imul
inc
sarb
lret
shl
sub
movl
or
inc
aaa
jp
orb
xchg
mov
add
push
push
std
dec
push
repz
add
add
add
pusha
in
call
add
or
mov
cwtl
pop
pop
mov
pop
insb
jg
icebp
and
cmpb
int3
add
xor
clc
sbb
pop
push
jo
mov
mov
or
push
fisubs
push
sbb
sti
or
add
icebp
push
decl
mov
aaa
add
sti
in
jle
loopne
aam
add
jl
test
sbb
or
mov
loop
call
push
push
mov
leave
es
das
mov
mov
add
jno
dec
or
loope
dec
push
stos
in
jg
std
inc
movsb
fs
push
jo
add
adc
cmp
mov
ficoml
and
sbb
insb
sti
add
loopne
xchg
adc
pop
inc
xor
sbb
call
mov
data16
adc
icebp
add
in
mov
inc
es
sarb
mov
adc
mov
push
es
std
adc
and
mov
stos
and
or
inc
idiv
cmp
add
jo
mov
mov
adc
das
sub
adc
mov
and
hlt
lock
bound
mov
mov
loopne
dec
push
dec
jge
xchg
push
xor
mov
lea
pop
sub
ja
movsb
inc
mov
add
or
enter
mov
and
movsb
loopne
cld
push
push
jo
jno
xchg
add
test
sbb
sbb
mov
aad
jae
pop
adc
inc
inc
xor
outsb
inc
add
cmp
xor
clc
jge
cmp
dec
stos
pop
out
jo
hlt
or
lods
jle
push
addb
mov
decl
pop
je
adc
mov
fiadds
cmpsb
push
call
jne
icebp
aaa
adc
xor
adc
push
sub
insb
pusha
push
adc
mov
cmpsl
stos
jo
push
jae
das
mov
jb
add
and
jge
mov
mov
test
push
mov
lldt
les
repnz
jo
in
mov
dec
fsubrs
jbe
sub
ret
mov
testb
push
pop
cmp
fidivrl
inc
xor
push
xor
es
mov
jo
or
push
or
jp
in
pop
sbb
and
push
push
add
mov
sarb
xchg
lret
test
popf
fs
xchg
push
lods
cmp
add
cwtl
xchg
hlt
pop
sbb
std
add
jne
lods
je
mov
mov
fists
jb
xchg
mov
add
xor
xchg
cmp
jb
mov
jne
jb
inc
or
addl
sub
or
sbbb
ret
scas
and
frstor
push
xor
lods
andb
dec
adc
in
and
pop
cli
ds
int3
adcb
hlt
fwait
push
aam
repnz
mov
fisubrl
sbb
jbe
xchg
inc
dec
add
mov
shlb
add
pop
adc
dec
in
rolb
add
rclb
adc
mov
stos
mov
fcmovnbe
cmpsb
xor
movb
je
out
out
ret
data16
cmp
pusha
inc
mov
jbe
int
call
cmp
push
pop
in
pop
rorl
mov
dec
ffree
xor
into
push
or
rclb
nop
fistl
jo
jns
test
cmp
sub
jnp
imulb
xor
imul
or
je
push
loopne
sub
sbb
pusha
jle
outsb
mov
add
mov
ret
add
shrb
pop
sub
and
mov
or
lahf
push
ret
cld
add
fiadds
sbb
mov
jmp
jl
sbb
rolb
inc
xor
sbb
icebp
mov
ret
inc
je
call
pop
shlb
inc
mov
imul
push
sub
adc
das
rclb
adc
scas
xchg
xchg
aas
sbb
xor
and
lock
pop
pop
and
or
pop
mov
inc
or
lds
shrl
testb
add
mov
mov
xor
jmp
sbb
rol
and
push
or
push
push
pop
lods
xchg
cmp
adc
test
cmp
inc
mov
push
push
shlw
push
mov
pusha
je
xor
push
mov
push
push
push
or
push
js
das
fadds
ljmp
pop
xor
cmpps
cmp
mov
outsl
lea
sahf
xor
sbb
sub
xor
push
leave
pop
adc
push
rcr
mov
lods
add
xchg
sbb
fs
inc
rorb
shll
jecxz
mov
outsl
pop
inc
in
push
push
stos
fcoms
fs
add
lret
and
add
popa
daa
lods
notl
stos
in
push
sub
hlt
fwait
lea
jbe
aam
cld
add
loopne
rcll
jle
mov
out
xor
inc
clc
pop
test
mov
mul
sbb
push
xchg
sbb
adc
add
mulb
pop
push
and
aam
nop
pusha
xor
push
mov
add
and
loope
mov
push
push
xchg
loopne
dec
add
cmp
lock
mov
and
aam
add
movsb
xchg
push
vmread
scas
cmp
and
sub
stc
call
mov
ret
aam
add
mov
add
xor
popa
popa
and
hlt
lcall
adc
loop
lea
cli
mov
and
push
loopne
decl
rclb
iret
loopne
loopne
add
je
and
mov
jle
cmp
aad
jb
popa
push
and
out
adc
or
loopne
loopne
and
pop
mov
mov
sbbb
movb
bound
mov
loopne
inc
mov
addr16
inc
add
in
xchg
sbb
test
push
vcmpsd
cmp
jl
lods
mov
lock
test
je
test
add
dec
sbb
and
cmpsb
test
and
push
ljmp
push
push
sbb
sub
xchg
xchg
fmul
ret
fiaddl
jo
push
xchg
es
xorb
push
dec
mov
rcll
fiadds
inc
ret
cmp
lret
adcb
loopne
loope
adc
jnp
cmp
fbstp
ds
popa
pusha
sub
jl
or
jne
mov
mov
mov
adc
sbbb
lock
dec
sbb
ret
adc
adc
cmp
add
cmp
ja
test
insb
loopne
add
decl
inc
ss
ss
nop
sub
xchg
mov
add
push
or
push
xorb
cltd
push
mov
mov
mov
test
ds
loopne
push
fdivr
jg
test
bound
leave
mov
push
sub
sub
sbb
loope
jae
outsl
pop
insb
inc
add
test
call
mov
lret
pusha
pop
mov
mov
push
loop
jmp
cmpsl
insb
stc
pop
mov
pusha
dec
push
jle
movsb
loopne
fcomip
cmp
je
jae
nop
cmp
pusha
pop
loopne
push
inc
add
mov
add
xchg
ds
leave
call
add
add
in
clc
divb
add
add
cmp
sahf
push
lods
or
sub
or
outsl
clc
outsl
add
call
and
je
popa
inc
daa
mov
test
lock
adc
sub
mov
test
ljmp
pusha
adc
loopne
fdivs
lock
outsb
dec
js
jecxz
loope
movsb
xlat
loopne
add
sbbb
mov
dec
add
push
mov
jg
dec
jbe
mov
pusha
push
in
loope
push
push
sub
and
ret
push
loopne
faddp
xor
sub
loop
xor
push
push
and
mov
pusha
and
aam
and
and
cmp
xchg
sub
ss
or
lods
pusha
dec
jp
inc
mov
cmp
dec
fdivrl
imul
pusha
mov
adc
scas
clc
lcall
loopne
call
sbb
sub
push
lock
decl
loopne
sbb
dec
push
mov
inc
add
ss
and
das
add
pushl
jno
mov
cmp
sarb
aaa
andl
mov
cmpsb
adc
loop
and
inc
or
adc
shrl
cmp
dec
shlb
mov
add
inc
jbe
jle
or
out
cmp
shrb
dec
mov
add
xor
or
mov
pop
fisttpl
repnz
or
sbb
jo
fiadds
xchg
sarb
adc
fdivr
shlb
push
cmp
mov
add
dec
repz
adc
mov
leave
mov
scas
daa
jb
sub
sub
push
les
push
mov
mov
or
cmpsb
fmulp
add
jo
and
xchg
outsb
data16
mov
or
cmc
cmp
jl
mov
lock
add
inc
or
hlt
or
scas
or
push
jge
sbbl
notl
pushf
pop
sub
jne
dec
mov
push
inc
sub
testb
aam
mov
jo
add
add
fsubrs
sti
mov
std
cld
loop
add
arpl
pop
lock
stos
dec
and
add
mov
movb
xorb
xor
sbb
out
or
add
jmp
sub
fcompl
sub
inc
inc
jg
jbe
and
jo
test
push
add
sub
ljmp
add
push
mov
ss
call
lea
outsb
cmp
jo
mov
or
add
mov
dec
nop
cmpsl
mov
addr16
test
jo
push
movsb
xor
arpl
out
xchg
adc
push
fisubs
inc
mov
xchg
push
mov
add
cmpb
daa
jg
xchg
ljmp
loope
call
push
pop
fscale
sub
inc
xchg
pop
shll
sub
xchg
loope
mov
pop
cli
cmpl
mov
adcl
push
es
push
adc
repz
adc
sub
add
xchg
add
or
mov
addr16
add
and
xchg
xchg
pushf
cmp
je
mov
insl
add
jle
jb
sbbb
and
and
mov
push
mov
ja
cli
aad
push
enter
adc
mov
ljmp
dec
sbb
add
dec
adcb
nop
aam
mov
and
and
and
es
mov
pop
add
push
lock
cmp
or
and
xor
repnz
js
mov
xchg
pop
inc
cli
scas
adc
lock
std
mov
shlb
nop
dec
cltd
ret
loopne
mov
pop
adc
or
adc
pop
lock
scas
and
pop
adc
sub
pop
add
mov
test
jmp
sbb
aas
insb
push
das
enter
lock
shlb
jmp
test
mov
xor
ret
incb
and
push
aas
pop
add
and
add
sbb
clc
push
inc
add
push
inc
fisttpll
adc
ljmp
inc
add
ja
idivb
mov
xor
jle
push
bound
scas
xor
mov
jne
sbb
test
pop
sub
pusha
lock
jmp
cmp
add
or
cld
popf
inc
pop
incl
push
mov
mov
ret
cwtl
inc
inc
xor
add
push
mov
add
xor
pop
pop
adcb
push
push
lock
ss
test
cmp
sub
and
loop
mov
out
or
jo
mov
in
add
fdivs
adc
jno
inc
adc
or
test
add
pop
sub
fbstp
xor
jo
push
pop
adc
testb
push
dec
rclb
xorl
sbb
outsl
lcall
lock
je
call
xchg
fadds
mov
int3
jge
adc
or
add
xor
mov
jo
adc
mov
xchg
mov
push
jo
decl
fcoms
add
add
movsb
icebp
pushf
xor
mov
dec
es
pop
jae
or
lods
add
or
xchg
push
mov
pop
pusha
sbb
outsb
sar
pop
pop
cmp
mov
call
add
xor
jp
jno
daa
test
std
ljmp
adc
ret
mov
add
push
adcl
adc
or
mov
jbe
test
jg
mov
movsb
test
push
mov
dec
mov
mov
int
pop
lock
insb
push
mov
shl
or
mov
stos
es
jb
addr16
xorl
cmp
jne
sbb
arpl
sbb
sbb
mov
test
aam
pop
or
or
lods
adc
movsb
jne
lret
jp
add
mov
sbb
or
mov
hlt
inc
call
rcll
jne
call
add
add
call
sti
add
or
jo
test
pop
and
mov
repnz
or
or
je
clc
push
pop
mov
movsl
add
inc
push
mov
sbb
lcall
call
test
inc
jne
xor
fwait
mov
inc
push
mov
dec
call
pushw
adc
and
push
add
je
xchg
cmpsb
idiv
and
int
and
jecxz
ds
lock
mov
rcl
mov
xchg
stos
fs
fs
jbe
aam
call
inc
mov
call
jo
jl
nop
pusha
jg
cld
stos
inc
ss
wrmsr
or
pop
push
icebp
ret
push
lock
add
ljmp
movl
add
and
pop
ret
pop
icebp
repz
stos
mov
icebp
push
or
or
push
cmp
push
mov
adc
idivb
push
add
adc
mov
adc
pusha
inc
fwait
lods
mov
or
cwtl
aam
xor
ds
cld
mov
inc
add
xor
push
or
stos
lea
push
push
outsb
jge
fcos
sub
stc
add
sti
push
cwtl
xor
je
mov
js
or
loop
mov
push
jmp
outsb
push
out
xchg
sbb
in
ljmp
sbb
ljmp
adc
or
fsubrp
push
fsubl
add
pusha
sbb
mov
enter
xor
xorb
in
ljmp
pushl
outsl
sbb
mov
or
adc
mov
stos
inc
pop
insb
dec
test
sbb
loop
ds
popa
std
add
test
add
jmp
and
or
loop
adc
orb
or
add
cmp
lods
das
loope
ljmp
and
jmp
xchg
mov
push
xlat
std
or
push
pop
and
mov
add
push
push
or
xchg
andb
inc
les
dec
dec
lahf
jg
push
inc
aam
call
add
cmp
cli
es
pop
enter
fbld
out
dec
pusha
add
cmc
test
ljmp
addb
inc
push
cld
sbb
dec
test
mov
scas
insb
xchg
dec
push
sbbb
rcr
jns
insb
adcl
sub
adcl
inc
int
cmpsb
jb
insb
cwtl
sbbb
aad
jl
sub
push
cmp
adc
xchg
andl
stc
sub
cs
xchg
dec
push
sarb
push
outsl
imul
adc
lret
subb
push
lods
or
fcomps
lcall
jl
rolb
sub
orb
jg
mov
jne
aas
rolb
dec
add
push
mov
push
mov
mov
clc
iret
xchg
ret
bound
mov
or
push
je
mov
int3
mov
jo
rorb
rolb
rclb
jmp
mov
adc
sub
pop
mov
mov
add
add
mov
icebp
add
pop
mov
mov
cmp
adc
xchg
xchg
or
ds
inc
xchg
lock
mov
inc
pop
pop
adc
pop
js
and
cli
inc
shlb
adc
enter
adc
outsb
sbb
call
add
cmc
sbb
notb
daa
outsb
adc
push
lods
ja
push
subl
jae
clc
push
fwait
int3
adc
mov
mov
stos
jecxz
mov
xchg
cmpb
cmp
adc
pop
push
push
incb
pop
push
sub
pop
and
pop
push
inc
dec
js
add
dec
or
scas
fs
test
jae
push
sarl
pop
mov
jg
das
insl
sbb
add
cmp
push
test
loop
mov
mov
push
or
icebp
pop
push
mov
arpl
ficoms
xor
outsb
jg
mov
xchg
xor
add
dec
mov
add
or
push
cmp
int3
sub
and
add
xchg
rclb
or
cli
mov
add
or
add
inc
jbe
pop
pop
dec
outsb
mov
mov
pop
xor
test
xchg
data16
cmp
dec
xchg
shl
sbb
add
jmp
imul
push
jmp
aam
adc
bound
sbb
or
int
inc
call
dec
jl
xor
push
push
in
fisttps
popa
hlt
cmpsb
sub
fucom
push
xor
sar
loope
xchg
loopne
dec
cld
testb
jno
dec
addr16
jp
rorl
add
and
test
push
and
data16
loopne
cli
and
clc
fwait
fwait
ss
mov
jmp
into
or
loopne
mov
stos
leave
sub
jl
ret
push
mov
jb
or
mov
mov
ret
call
ja
mov
fdivp
mov
loopne
outsb
leave
add
ss
jle
jle
gs
sbb
jl
add
fdivs
pop
js
jmp
fs
add
jle
call
stos
push
bound
inc
mov
mov
les
add
call
or
test
insl
dec
imul
add
lahf
shr
fsts
add
jg
dec
push
or
push
or
pop
cmp
dec
movsl
fildl
mov
xorb
sbb
pop
shrb
and
popa
xor
xor
push
mov
and
adc
jge
lret
jp
shl
ret
loopne
inc
or
mov
add
cmp
mov
call
pusha
jp
pop
or
cmc
jecxz
popa
outsl
push
jmp
mov
ds
and
xor
push
and
loope
outsl
xor
clc
mov
lret
aam
fmuls
cmp
aaa
add
arpl
mov
cmpsl
add
idivb
call
xlat
add
pop
loopne
in
adc
or
add
xchg
pop
xchg
js
cltd
test
jmp
popa
push
outsb
adcb
fstpl
add
mov
mov
ljmp
jno
fwait
sbb
adc
mov
xchg
dec
mov
mov
push
push
scas
fisttps
int
mov
or
lock
sbbl
hlt
notb
outsl
jl
sub
sbb
fdiv
pushf
and
adc
lret
fidivrl
test
dec
mov
sbb
mov
test
add
adc
jge
lret
ret
in
push
dec
push
or
xor
scas
xor
dec
clc
jg
adc
add
pop
mov
pop
sarb
sbb
jge
cmp
jp
loopne
and
repz
clc
test
jo
and
xor
jbe
in
push
jmp
out
xchg
add
or
jb
pop
cs
hlt
push
mov
jns
pop
je
loope
add
adcb
push
roll
in
cld
mov
lcall
fisttpl
lock
dec
or
jl
pop
mov
add
mov
mov
pusha
dec
hlt
adc
xor
aam
sbb
sub
loopne
testb
mov
pop
adc
inc
ret
ja
sbb
add
or
std
inc
inc
ds
push
pop
loopne
jecxz
aaa
add
stos
loopne
outsl
lea
pop
fmull
xor
add
test
call
fs
xor
dec
xchg
add
lock
add
pop
aas
je
add
dec
adc
add
jb
mov
lock
or
adc
mov
and
cmp
dec
call
add
push
clc
ret
ret
sbb
xor
or
push
std
push
nop
lock
lea
mov
xchg
adc
or
enter
add
lock
cmp
and
mov
inc
jo
rolb
xor
add
incl
cmp
sbb
lock
decl
out
or
add
sti
inc
add
mov
add
mov
clc
orb
shr
loop
mov
or
or
mov
loope
lcall
adcl
push
test
ss
push
mov
dec
add
cmp
push
mov
ret
outsb
mov
add
jo
mov
je
cmp
test
loopne
pushf
ljmp
cli
push
jb
test
rolb
mov
pop
je
popa
fistl
jl
in
add
ljmp
mov
add
or
mov
xor
xor
call
jg
push
mov
adc
add
lock
dec
insl
jmp
dec
push
push
je
insl
sub
mov
inc
inc
jbe
xchg
mov
fidivs
and
pop
push
adc
je
push
loope
sub
xor
andl
clc
mov
cltd
fimuls
pop
fists
jle
push
cmp
pop
fs
test
or
push
push
inc
pop
or
inc
shrb
mov
jo
push
jle
int
mov
test
rolb
lret
outsb
mov
sub
rcr
sbb
jo
pusha
test
mov
add
jmp
or
pmaddwd
mov
mov
xchg
sub
clc
clc
testb
jo
inc
xor
cmp
add
jo
push
insl
xor
lret
adc
fs
jmp
mov
xor
mov
add
fildll
dec
xchg
je
lock
int3
add
adc
add
and
dec
push
or
sbbb
add
xchg
adc
jo
addb
in
mov
mov
sub
cli
mov
jecxz
out
pop
test
ja
adc
rolb
xor
xchg
cmp
lea
mov
pop
or
hlt
add
or
push
mov
lcall
add
add
mov
ret
or
popf
add
xchg
adc
imul
mov
adc
pop
and
and
add
jno
mov
je
dec
loope
imul
lock
mov
popf
incl
mov
ljmp
inc
mov
jo
outsb
lret
icebp
movsb
call
adc
push
or
outsb
jo
xchg
cwtl
loop
rcr
mov
mov
add
sub
pusha
sbb
aam
std
jle
dec
dec
cmp
add
adc
push
std
outsl
push
push
mov
out
lea
mov
mov
pushl
fimull
icebp
inc
sub
or
out
mov
pop
sub
push
push
or
jo
jmp
mov
call
cmp
adc
push
dec
push
xchg
jle
mov
dec
std
aad
xchg
out
mov
adc
orl
sbb
out
add
mov
xor
xor
add
pop
add
fsubp
data16
les
sarl
jp
orb
int
testl
dec
add
pop
test
cmp
fdivrp
pop
jmp
xor
jbe
pushf
out
lock
call
add
fbstp
cltd
cmp
lea
dec
mov
xchg
sbb
jo
ss
shr
xor
mov
icebp
lret
xor
inc
pop
jno
add
and
xor
push
add
lods
mov
scas
les
inc
pop
shll
jmp
mov
xor
and
add
pop
xchg
cld
loope
stos
add
mov
into
push
pop
hlt
movsl
pop
sub
adc
mov
das
lock
ret
pushfw
aam
stos
add
jnp
inc
dec
stos
jg
pop
xor
int3
inc
mov
jb
shll
shrl
std
and
inc
adcb
and
dec
add
push
cld
fadds
clc
adc
je
xor
xor
xor
lret
mov
jle
and
call
and
test
add
or
fmuls
adc
fbstp
push
mov
dec
in
pop
adc
add
pop
pop
outsl
ljmp
jno
xor
aad
enter
pop
sbb
inc
movsl
fisubrs
je
and
sbb
or
push
and
xor
jo
icebp
sub
fidivs
adc
mov
cmp
out
fcmovnb
mov
xor
push
add
imul
aam
or
jae
repz
test
rorb
inc
cld
ja
sbb
ror
jmp
loopne
ss
mov
std
mov
je
add
cmp
push
adc
jo
pop
push
cmpb
or
xor
jo
mov
fidivrl
mov
out
sub
pop
cmp
push
dec
jo
adc
loope
dec
sbb
jo
jmp
mov
xor
push
jl
dec
pop
sbb
adc
cmp
jo
outsb
loopne
adc
and
xor
pop
and
pop
nop
sub
cld
mov
or
lock
je
in
xor
add
mov
pop
cmpl
or
add
sbb
add
cwtl
scas
incl
mov
xor
xor
mov
in
mov
jge
lods
lock
add
incl
xor
inc
push
push
into
and
loope
adc
outsb
push
mov
rcrb
adc
adc
je
stos
stos
xor
push
mov
test
imul
je
in
je
mov
adcl
cmp
mov
loop
pop
test
cwtl
lcall
scas
add
shll
pop
xchg
cli
lock
ret
clc
push
push
mov
push
mov
push
push
inc
or
sahf
adc
addb
cmpsb
std
add
scas
sub
add
fistl
add
xor
andb
add
jmp
rorl
test
jne
push
incb
subl
add
in
pop
lock
loope
and
lret
inc
add
push
mov
pop
daa
out
add
adc
inc
mov
adc
pop
test
cwtl
jbe
add
sub
push
fwait
popa
mov
add
push
lods
stc
shll
cltd
xchg
adc
push
mov
or
js
mov
add
inc
push
scas
cmp
jp
sbb
leave
cli
push
lods
or
les
fdivs
cmp
add
es
jo
add
lods
lcall
pop
or
jno
loopne
adcb
pop
or
int3
sub
inc
xor
lods
in
adc
push
add
shrl
stos
dec
std
push
cmp
call
adc
lret
lcall
fildl
mov
and
adc
add
lock
dec
push
pop
leave
cmp
inc
push
adc
divb
push
mov
clc
incl
popf
add
cmpsl
orb
cmpsb
add
aad
pop
pop
loope
push
lock
and
and
or
inc
mov
and
cmp
or
fiadds
push
jb
rclb
add
sbb
cmp
scas
xchg
shlb
inc
or
mov
test
adc
jbe
adc
mov
push
xchg
lds
push
push
testb
incl
mov
jg
cmp
shlb
rcr
add
mov
add
mov
add
pop
pop
lea
pop
lock
pop
add
add
add
rorb
and
js
mov
adc
scas
repnz
pop
sbb
jge
int
mov
cld
inc
jecxz
out
lods
xlat
ret
push
rolb
ret
jnp
js
inc
popf
roll
dec
iret
or
fwait
dec
and
add
loopne
test
lods
das
mov
xchg
rcrl
loop
fmul
mov
adc
xor
and
loopne
sub
add
insb
push
and
ret
imul
sbb
or
jecxz
sub
push
jo
or
ret
inc
and
inc
adc
loopne
fmul
dec
xor
pop
data16
mov
push
cmp
add
adc
lea
lahf
mov
lahf
call
lods
mov
ja
mov
es
sub
pop
and
adc
jbe
bound
arpl
or
adc
add
sbb
inc
ja
shlb
lods
add
iret
rorb
out
rorl
lods
adc
js
rcl
push
ljmp
leave
jle
push
test
scas
nop
xchg
or
shrb
inc
adc
mov
cmpsb
xor
call
and
enter
dec
lcall
and
sub
loopne
mov
movb
incl
pusha
xor
add
ja
xor
daa
lret
outsl
clc
mov
std
ljmp
inc
scas
loopne
mov
sub
inc
pop
add
mov
and
jne
hlt
pop
incb
mov
cmpsl
pop
mov
decl
cmp
or
xor
adc
pushf
fisttpl
ficompl
cmpsb
lcall
lea
sub
call
push
pop
clc
jp
xchg
push
fisubs
shrb
pusha
es
in
dec
xchg
scas
es
sbb
push
push
jg
imul
cmp
addb
addr16
dec
xchg
loope
insb
mov
aaa
sbb
add
ret
in
add
and
push
mov
pusha
sub
fisubs
rcl
inc
call
or
mov
lcall
pop
lods
int
stos
outsl
or
outsb
push
inc
test
repnz
gs
fsubs
lods
pop
cmc
add
and
jle
sbb
js
cltd
add
pop
push
imul
jne
lea
xchg
dec
loopne
fstpl
imul
pusha
bound
adc
dec
add
or
inc
pop
aaa
add
nop
cli
cs
or
push
adc
dec
adc
ret
gs
mov
pop
and
add
jg
std
adc
and
andb
pop
push
es
loopne
out
mov
pop
ljmp
inc
fisttpl
cmp
pusha
pop
das
sbb
lock
sub
int
push
inc
mov
add
inc
cld
into
cvttps2pi
xor
out
bound
mov
popa
cmp
jae
fistpl
cmp
inc
and
xchg
cmp
enter
int
dec
xor
adc
lea
pop
loop
push
pusha
or
xchg
add
adc
or
int
scas
xor
daa
jp
or
popa
inc
inc
sub
loope
pushf
ss
jb
adc
or
add
xor
cmp
lock
add
loopne
pushf
aam
call
sub
pop
movsb
mov
jo
xchg
or
mov
divb
sbb
pushf
sbb
add
adc
loop
loopne
fadds
orb
sbb
fnsave
jbe
in
bound
pushf
pop
inc
inc
lcall
jns
pusha
lahf
fsubl
loope
pop
mov
mov
mov
fadds
mov
loopne
lods
push
inc
arpl
push
mov
sbb
mul
mov
popa
push
in
and
cmp
xchg
loopne
ret
sbb
push
sub
jge
push
push
push
or
fildll
cli
xchg
loopne
xchg
push
call
sbb
and
decl
stos
adc
cld
enter
or
push
add
lds
mov
pop
push
inc
cmpb
add
or
adc
xchg
dec
enter
mov
sub
lock
rorb
inc
cmpsb
lret
add
inc
scas
mov
stc
cmp
jge
pop
test
lods
call
add
scas
sub
mov
cmp
pop
icebp
sbb
test
loop
adc
inc
mov
inc
pop
cli
add
mov
cmpsb
ds
push
xchg
inc
jg
and
mov
idiv
mov
fcoml
cmp
add
ret
adc
pusha
sub
push
xor
aaa
or
loopne
inc
hlt
xor
mov
mov
jo
mov
dec
add
and
xor
push
test
ja
stos
lahf
add
add
lret
dec
movsl
cmp
sub
push
jb
test
jg
test
push
mov
sub
sbb
dec
and
lods
call
mov
lcall
push
mov
inc
repz
add
jno
push
ds
add
push
jb
cmp
add
add
mov
rolb
nop
push
xchg
pop
mov
les
int3
xor
int3
call
and
mov
xor
leave
dec
add
or
lds
call
xor
and
addr16
or
out
int3
mov
sub
mov
sub
and
mov
mov
js
jno
shrb
mov
sbb
and
rolb
outsb
add
jno
ja
pop
and
sub
pop
cmpsl
lret
leave
jo
jno
in
lock
pusha
test
pop
mov
sbb
dec
and
popa
shl
mov
cmpl
dec
pop
mov
inc
inc
jo
loopne
dec
or
enter
jle
xchg
mov
pop
fs
adc
aaa
dec
adc
divb
or
cmc
sbb
inc
inc
test
mov
mov
mov
jl
btr
les
xchg
jo,pt
xchg
ret
add
pop
mov
mov
les
repz
xor
adc
inc
lea
mov
scas
push
and
mov
cmp
xor
lock
arpl
pop
divb
lock
and
pop
push
aam
fstpl
xorl
mov
inc
sub
repz
icebp
jo
push
sbb
aam
data16
jno
cmp
jl
and
inc
adc
cmc
call
fs
xor
mov
or
sar
pop
adcb
jb
inc
jno
add
clc
and
mov
add
das
pop
jecxz
adc
cmp
loopne
push
or
lret
orb
aam
inc
iret
jo
test
data16
jl
jo
adc
dec
inc
xor
movsb
cmc
jae
fcomip
and
ss
je
xor
mov
cmp
lock
pop
push
js
adc
cmpsb
rcrb
stos
mov
inc
mov
orl
pop
add
decl
cmp
dec
add
movsb
xor
ss
mov
and
inc
pop
mov
adc
xlat
js
dec
push
cwtl
mov
xor
add
push
fs
jmp
ret
mov
sbb
push
shll
cmp
jmp
xor
xor
xchg
fisttpll
push
cmpb
sub
std
lock
mov
xchg
or
mov
jmp
fs
mov
aaa
insl
in
cli
cmp
test
mov
iret
xor
lock
add
stos
push
or
mov
lock
adc
push
cltd
data16
movsb
divl
push
jo
and
es
add
dec
loopne
arpl
add
lock
cmpb
push
inc
das
cli
add
jle
add
mov
test
jg
push
lea
mov
xchg
insb
icebp
push
imul
push
add
lock
xor
xor
xor
ljmp
mov
daa
jecxz
inc
and
lock
call
test
ret
out
roll
jg
call
cwtl
mov
mov
or
xor
dec
lock
jmp
push
mov
sub
incl
mov
shl
lock
shl
daa
jo
sub
popa
jo
clc
jmp
xor
jmp
lock
cmp
mov
mov
pop
adc
bound
stos
fsubp
jo
jbe
pop
push
js
fldt
sub
inc
xor
sbb
jno
fwait
insb
push
xchg
pop
adc
adc
mov
and
cld
ja
mov
pushl
jns
ss
add
dec
int3
add
mov
pop
out
incl
lahf
mov
shlb
mov
mov
adc
dec
pushf
lock
jg
xor
jo
fildl
cmp
insb
mov
inc
pop
lock
ret
sbb
and
push
mov
push
cmp
push
dec
cld
cli
divb
pop
fucomip
push
push
gs
cld
fldt
enter
or
push
xor
and
push
stc
and
call
pop
push
pop
outsb
lock
or
xorb
add
ret
mov
test
jg
jle
mov
cmp
cmp
in
loopne
push
sub
xor
stos
fsubp
cli
push
mov
sbb
fwait
mov
sub
pop
or
xor
repz
loopne
or
stos
call
jmp
lock
pop
sbb
pop
pmuludq
or
rolb
xor
pusha
pop
adc
and
and
sub
sub
mov
ja
xor
sbb
das
incb
popa
fistpl
loop
pop
adcb
pusha
add
xchg
inc
mov
mov
mov
adc
sub
mov
cmp
jne
jg
fdivs
adc
popa
jnp
lock
in
adc
test
adc
lds
fs
je,pn
lods
lea
incl
fdivrl
xor
int
sub
mov
add
cwtl
adc
add
cmp
pop
dec
dec
cmc
inc
je
mov
das
clc
das
ss
jmp
jo
jecxz
je
in
jg
gs
jmp
cltd
stos
repnz
jg
fdivs
shll
add
ljmp
ljmp
mov
and
xorl
jo
lea
icebp
jbe
pop
call
pop
and
mov
test
mov
arpl
arpl
inc
xlat
iret
in
inc
jo
cmp
shrb
movsb
xor
cmpsb
inc
dec
mov
les
pushf
das
cld
xor
es
push
xor
xor
add
sbb
ret
ss
ss
int3
and
cmp
or
loope
arpl
repnz
mov
gs
filds
add
mov
mov
push
push
test
mov
jno
adc
test
add
ret
rolb
insb
fdivrp
push
add
push
add
inc
pop
push
or
test
rcl
push
test
add
fadds
or
add
inc
and
sub
daa
or
xchg
es
imul
je
xchg
push
pop
mov
scas
push
je
pushf
gs
mov
push
loop
rorb
add
push
jmp
push
add
test
jg
test
adc
add
or
incl
les
in
pop
add
adcb
jne
add
mov
sbb
mov
mov
nop
pushf
in
mov
add
test
in
fstpl
lcall
jnp
aaa
push
loope
sarb
subb
mov
cmp
clc
push
int3
rorb
nop
nop
mov
jecxz
shl
xchg
cwtl
inc
repz
adc
push
xorb
lds
incl
out
cmp
jb
lock
cltd
and
xor
aaa
sahf
cwtl
test
add
mov
sub
inc
in
lahf
push
cmp
pusha
push
xor
int
push
xchg
dec
jb
add
jbe
stos
jbe
xor
or
lret
sbbb
mov
inc
int3
sbbl
je
mov
fcmovu
mov
xor
shl
mov
add
cmp
add
pop
mov
shlb
fiadds
inc
xchg
add
inc
lods
adc
inc
movsb
inc
je
or
or
je
xor
idiv
mov
cmp
sti
cs
mov
ja
adc
add
push
and
les
push
mov
ret
fisttpl
dec
jne
jbe
add
rorl
adc
sbb
add
pop
rorl
into
jg
add
push
or
pop
fsubl
insl
cmp
mov
adc
inc
lret
adc
adc
test
popl
int3
rolb
inc
pop
mov
cmpb
add
mov
lea
jb
xor
add
or
push
push
push
push
jle
ret
add
push
mov
adc
addl
jne
adc
add
inc
mov
inc
xchg
jg
inc
xor
xchg
add
mov
pop
cmp
xor
fildll
sub
es
inc
xchg
or
dec
ljmp
cmp
sbb
adc
sbb
adc
xor
cmpb
dec
dec
ret
jp
cmp
xor
shl
decl
rolb
ret
add
mov
or
push
inc
adc
or
imul
adc
add
xor
aam
or
inc
lods
cmpb
cmp
pop
push
and
rclb
xor
call
add
test
mov
gs
in
ret
dec
clc
test
inc
repz
rorb
sbb
sub
lret
ds
add
xchg
fsubs
adc
add
mov
sar
and
shll
je
and
pop
outsl
mov
movsb
adc
in
xorb
outsl
lods
loopne
sbb
lock
data16
xor
sbb
cmp
lar
cltd
sbb
add
pop
arpl
and
jl
xor
xchg
xorl
out
mov
aas
cmp
add
jg
in
in
or
loop
mov
pop
loope
cmp
sbb
mov
adc
sahf
lret
nop
push
call
loop
adc
xchg
xchg
adc
popa
sub
mov
por
test
cmpb
cwtl
inc
or
mov
sbbb
ret
add
dec
add
sub
pop
rolb
adc
gs
mov
stos
lea
adc
and
sub
loopne
or
imul
sbb
add
fwait
push
mov
cmp
icebp
mov
call
add
mov
arpl
mov
or
movsb
sti
leave
shrb
or
movsb
and
mov
mov
loopne
repz
mov
loope
mov
and
loope
es
or
push
lods
add
fisubrs
subl
sahf
pusha
dec
scas
fadd
mov
jg
enter
popa
xor
movsb
in
bound
jb
aaa
lock
jl
jg
loopne
mov
xor
loopne
jne
xchg
push
dec
mov
jp
mov
cs
mov
pop
test
mov
loopne
call
dec
loope
adc
ret
das
cli
push
fcomps
fucomi
fs
adc
inc
pop
aaa
inc
pusha
push
pusha
pop
mov
mov
adc
sub
add
jbe
pusha
inc
add
adc
maxps
add
or
and
pushf
cmp
xchg
adc
test
lcall
aas
outsl
inc
mov
std
test
or
push
rcrb
push
loopne
adc
fs
and
cmp
and
movsb
sbbb
cli
inc
pusha
sub
xchg
lahf
mov
sub
or
stos
jle
add
loopne
adc
jg
inc
inc
jbe
jp
test
or
scas
loopne
test
ret
cmp
outsb
call
popa
sbb
or
or
pusha
jecxz
addr16
pusha
xor
pop
das
mov
and
jg
pop
sti
pusha
daa
or
push
pusha
xor
push
loope
pusha
cmp
adc
fbstp
pusha
xor
loopne
loopne
push
adc
in
inc
loopne
push
subl
add
popa
add
push
sub
push
add
scas
or
call
fsubrs
test
and
cld
out
shrb
shrb
inc
dec
ljmp
addb
mov
xchg
mov
in
add
sbb
xchg
inc
xorb
fdivrl
push
loopne
aas
adc
data16
cmp
or
movsb
and
mov
push
adc
insb
in
inc
xor
xor
adc
shlb
dec
fdivr
hlt
je
shrb
or
ret
ficoml
in
cmc
push
test
adc
idivb
test
push
aam
jb
in
jo
jp
push
loopne
aam
jo
mov
fdivrl
push
and
imul
pop
clc
or
clc
or
cmc
call
cmp
mov
int3
shrl
gs
rolb
add
aam
mov
addl
or
les
xor
test
call
rcll
nop
testb
test
aaa
inc
fdiv
add
inc
or
stos
xchg
addb
cmpsb
fmull
xor
sub
xorb
pop
sub
mov
es
mov
adc
roll
sub
shl
jo
call
cmpsl
or
push
inc
push
add
mov
scas
xor
mov
push
pop
es
xor
mov
sub
movsl
add
add
stos
dec
fadds
clc
mov
sub
pop
and
push
push
push
test
clc
lcall
je
scas
ret
push
aam
cli
jo
sub
es
pop
push
xor
pop
mov
jno
push
inc
test
cs
jb
cmp
sbbb
sub
adc
add
add
adc
add
or
jmp
inc
add
add
lock
jmp
pop
mov
ret
movsb
ret
sub
jp
xor
push
popa
jo
or
std
sub
popa
aam
push
int3
add
xor
adc
jae
adc
or
mov
mov
fs
mov
mov
stos
xor
faddl
scas
fdivs
cmp
adc
clc
xor
dec
and
dec
cmpsl
jmp
stos
sub
xor
xchg
jle
lock
push
test
cmp
dec
shlb
test
or
test
push
add
lock
cld
push
and
icebp
pusha
nop
sbb
outsl
cmp
loopne
or
add
pusha
je
and
sbb
pop
mov
push
push
jb
jo
icebp
or
cmp
jb
or
or
add
in
xchg
or
pop
loop
push
sbb
jl
sbb
icebp
xor
mov
adc
loop
push
repz
push
push
adc
cld
test
jae
push
mov
je
test
lock
jne
mov
divl
les
lret
sbb
and
test
push
push
pop
or
and
mov
out
rcrb
pop
mov
clc
jp
mov
lret
add
cmp
mov
dec
jg
push
std
int
jmp
mov
je
add
dec
sub
jmp
mov
xor
mov
mov
add
push
lret
test
jl
lcall
divl
rolb
mov
loopne
mov
jb
jbe
cmp
add
cmp
xchg
int3
out
add
arpl
lds
inc
fsubr
sbb
pushl
jo
push
pop
rcrb
jmp
lock
adc
and
cmp
loopne
arpl
sbb
in
lock
hlt
hlt
jb
test
daa
test
nop
dec
rcrb
mov
push
push
push
movsl
orl
or
push
mov
jmp
lock
add
clc
push
jo
and
sti
mov
cmp
mov
add
arpl
scas
rclb
ja
pop
fdiv
jo
dec
and
data16
mov
and
fiaddl
mov
dec
and
pop
push
aaa
xchg
mov
inc
push
fs
push
dec
in
adc
ss
adc
enter
mov
xor
orl
or
add
inc
xor
add
mov
jne
jg
add
je
das
add
cld
andb
addb
dec
sub
enter
pop
je
cmpxchg
and
push
inc
jne
leave
mov
inc
test
or
dec
lods
push
inc
or
sub
push
jo
jne
psubsb
adc
mov
mov
jo
cwtl
mov
mov
cmp
cld
jbe
sbb
mov
loop
inc
adc
xor
loopne
add
mov
and
int3
divb
or
ret
or
je
add
inc
and
outsl
and
pop
hlt
xchg
in
or
int3
leave
mov
adcb
ja
pop
inc
fadds
pop
inc
inc
xchg
push
inc
xor
inc
push
repnz
adc
add
jg
pop
fdivl
add
or
or
and
jb
lods
mov
xchg
lock
loopne
jle
lock
repnz
inc
aam
xchg
mov
loopne
add
addl
incb
decl
imul
bound
shll
pop
push
adc
scas
out
mov
call
xor
jle
rclb
lcall
adc
aad
inc
gs
lods
pusha
inc
xchg
dec
or
jmp
into
dec
inc
jo
mov
fisttps
cwtl
mov
pushl
push
add
inc
decl
and
pop
xchg
inc
add
sbb
mov
or
shr
pop
adcb
and
mov
mov
jmp
pop
jne
mov
cmp
repnz
inc
cmp
aam
adc
cmp
jne
cmp
sub
jl
add
jbe
push
add
pop
add
jo
inc
in
mov
inc
pop
sbb
jb
sub
movb
or
jp
jno
cs
add
add
adc
adc
jge
add
lock
lcall
cmpsb
les
mov
adc
pop
jo
push
xchg
push
sar
cwtl
cmp
mov
mov
negb
jae
and
jne
and
inc
inc
mov
ja
lea
cli
ja
push
add
jne
add
popa
pop
icebp
jbe
mov
mov
add
loope
cs
sahf
ret
xor
stos
pop
rolb
and
adc
ret
and
push
xor
add
add
push
pop
xor
mov
gs
cmpsb
rclb
insl
fiaddl
adc
adc
jo
pop
pop
dec
push
movsb
rcrl
imul
inc
push
lock
jp
call
lock
je
icebp
pop
xor
cmp
dec
test
xor
cld
or
mov
adc
rorb
jbe
ds
ds
ljmp
add
in
test
not
and
je
testl
cmp
jae
push
lea
push
mov
jno
int3
mov
or
loopne
dec
or
divl
add
pop
and
nop
pop
rolb
add
mov
cld
jbe
push
cld
or
mov
add
hlt
repnz
rol
je
inc
xchg
shlb
shrb
cs
inc
clc
pushf
adc
add
inc
lea
cs
and
add
repz
mov
mov
mov
xchg
push
bnd
or
and
add
jo
decl
lock
loopne
cli
or
jb
add
fs
and
push
push
push
dec
or
adc
clc
mov
sahf
xchg
fdivp
pop
inc
jmp
xorl
stos
jbe
pop
jb
pop
shlb
add
mov
cmp
mov
or
push
cld
push
out
dec
adc
pop
sarl
data16
xchg
dec
or
ror
nop
js
add
and
cmp
jae
add
adc
mov
call
xorb
cmp
xor
jns
xchg
xor
and
add
cmp
leave
xchg
lret
push
aaa
outsb
or
repz
sub
and
mov
jb
mov
or
imull
push
inc
mov
inc
subb
mov
mov
insb
jbe
pop
cwtl
int3
push
movsb
and
mov
xor
xchg
mov
sahf
subb
rol
addb
fs
clc
add
add
dec
adc
sbbb
lds
xchg
or
lock
scas
lret
mov
lret
test
je
xor
cmc
sbb
jb
sbb
or
push
mov
mov
push
push
cld
ret
add
or
jb
dec
push
and
lock
movsl
jne
and
bound
inc
inc
rorb
fisubrl
xor
not
jge
or
push
inc
rorb
lock
loopne
ficoml
mov
inc
add
out
add
or
dec
dec
xorb
adc
xchg
mov
mov
add
pop
push
pop
shlb
and
pop
mov
dec
incl
inc
iret
sarb
xorl
es
mov
push
xchg
inc
mov
jbe
pusha
dec
shlb
mov
ror
call
in
mov
shlb
or
mov
rcrb
outsb
fmull
cmpl
jmp
jp,pt
mov
jecxz
mov
icebp
add
je
pop
cmpb
mov
rclb
shlb
inc
fnstsw
and
lea
add
jno
mov
mov
movsb
inc
jmp
pop
mov
shrb
inc
popf
rol
lock
add
nop
in
into
pop
or
cmp
call
xchg
cmp
push
mov
sub
mov
hlt
mov
inc
push
jl
sbb
ret
fiadds
add
fisubrl
push
lods
call
cli
and
pop
fucomp
push
imul
adc
add
xor
and
add
in
or
shrb
into
cmp
mov
xor
shr
sbbl
push
faddl
push
or
icebp
mov
cmpl
ficoms
mul
outsb
loop
arpl
mov
add
inc
jmp
lret
lods
sbb
addl
adcb
fimull
and
adc
jo
push
and
mov
and
shrl
dec
or
iret
aam
out
icebp
mov
cmc
imulb
xchg
pop
and
ds
add
data16
dec
bound
adc
test
sbb
mov
add
jg
lock
sbb
std
rcrl
add
mov
std
push
push
out
pusha
or
arpl
lock
jge
rol
jmp
shlb
pusha
push
cwtl
add
loopne
dec
push
mov
add
or
mov
ss
cld
add
cld
add
pop
add
scas
pusha
inc
and
loop
sti
adc
or
sti
loopne
loopne
or
add
sti
sbb
add
jl
js
inc
mov
xchg
in
neg
mov
gs
inc
mov
fnstcw
mov
jbe
sbb
mov
add
jle
xor
out
and
loop
pusha
jne
and
arpl
pop
push
cltd
loopne
mov
ret
inc
jbe
xchg
aas
pusha
jl
and
sub
lret
adc
lods
or
or
cmp
shr
in
loopne
or
insl
sbb
dec
and
insl
cmp
mov
sarl
in
testb
or
or
cmp
jp
add
add
je
ret
add
aam
ret
add
or
add
test
adc
add
icebp
cwtl
fadds
loop
lret
nop
loopne
aam
xor
push
loopne
jo
push
popa
dec
inc
stos
pop
push
pop
js
jp
xchg
push
mov
ljmp
iret
xchg
std
fldl
add
repz
jg
xchg
adcb
xor
clc
pusha
add
test
outsb
pop
das
loopne
movzwl
mov
out
cmp
mov
mov
mov
hlt
jecxz
add
push
je
lcall
push
clc
ds
xchg
xor
jl
pop
lea
test
ljmp
cmp
jb
push
call
pop
fcomps
inc
test
das
data16
shlb
repnz
mov
adc
fdivp
call
sbb
aaa
ret
and
xor
adc
adc
or
in
mov
and
inc
dec
cwtl
outsb
mov
xor
fldcw
loopne
lea
rclb
ljmp
mov
in
pop
add
in
loopne
testl
or
shll
xchg
xchg
adc
and
lret
leave
dec
add
xchg
aaa
adc
pop
out
xchg
pop
dec
daa
cmc
dec
call
sub
pushl
jmp
adc
inc
adc
add
or
cmp
adc
pop
dec
mov
mov
push
pop
mov
roll
into
push
push
and
and
arpl
push
add
push
add
jge
adc
push
sbb
jmp
push
mov
sbb
cmpsb
pusha
ret
addb
sbb
mov
add
pusha
outsl
and
inc
mov
or
insb
push
adc
sbb
hlt
sub
mov
ss
lods
push
fdivr
add
sub
arpl
add
test
add
jg
loop
dec
in
push
loope
or
push
outsb
cmpb
aaa
std
fisttps
js
lods
jb
pop
cmp
xor
cmp
ljmp
and
test
jo
jo
test
jo
clc
jg
adc
jne
jo
xor
ljmp
pop
dec
sub
insb
fadd
adc
mov
js
dec
push
sbb
jbe
lock
fwait
dec
add
or
bound
ss
and
ljmp
pushf
or
cmp
jbe
lea
pushf
add
cld
adc
sub
es
inc
enter
jle
jmp
xchg
testb
inc
adc
bound
je
sbb
bound
js
push
pop
ja
xchg
mov
mov
push
xchg
push
or
dec
repnz
adc
jne
adc
mov
cmp
xchg
jl
adc
orl
ljmp
inc
add
int
cld
fcomip
mov
jl
cli
int3
mov
pusha
add
ljmp
mov
push
mov
mov
daa
xor
pop
xor
push
call
aam
mov
push
or
push
push
add
clc
ja
clc
outsb
rclb
cld
adc
pop
xor
rcrb
test
fstpt
and
daa
or
add
mov
xor
shrb
mov
mov
leave
lock
jmp
inc
subb
loope
lret
cmp
lock
lock
ja
jl
mov
les
inc
mov
push
mov
jle
or
jbe
sub
jmp
add
jmp
cmpsl
and
add
roll
test
dec
mov
add
inc
aam
inc
push
adc
mov
or
lods
adc
xchg
xchg
push
push
fiadds
jmp
js
mov
and
sbb
mov
jno
mov
shlb
xor
dec
add
repz
dec
add
push
je
add
lock
xor
mov
mov
xor
mov
dec
add
mov
test
scas
stos
adc
mov
push
mov
mov
inc
cmp
inc
cmp
xor
lea
pop
xor
lret
shr
add
hlt
pop
inc
ret
cmp
push
or
ret
add
xorb
sub
ljmp
pop
push
loope
xchg
add
movsb
pop
aad
sbb
mov
leave
fmul
jne
ret
je
push
adc
mov
or
adc
inc
sbb
insl
mov
aas
push
inc
mov
roll
add
cmp
or
icebp
push
dec
test
jo
push
data16
in
mov
adcb
push
out
xor
dec
add
sub
add
xor
nop
ficompl
or
ds
rolb
mov
mov
lcall
fcom
push
call
mov
mov
dec
call
or
cld
jo
pop
add
dec
lret
stos
shrb
sub
mov
push
cld
dec
adc
shlb
jns
pop
xor
xor
cld
cld
jbe
and
scas
sub
sahf
arpl
mov
call
push
or
shrb
cmpsb
push
sub
and
adc
or
lahf
add
xchg
repz
xchg
lock
or
rolb
nop
mov
cmp
sub
inc
add
es
scas
mov
adc
inc
shll
or
sbb
add
dec
add
cld
xchg
scas
xor
dec
jmp
call
add
inc
ret
push
pop
jo
xor
loopne
or
inc
clc
xlat
call
xchg
sub
lock
push
pop
repnz
mov
xor
fdivr
ror
clc
in
inc
insb
lea
test
cmp
cmp
inc
in
add
fwait
clc
xchg
or
fildl
dec
dec
ss
scas
sbb
jl
mov
in
mov
mov
lret
xor
push
ljmp
rolb
dec
es
mov
mov
andb
nop
test
sbb
cs
dec
std
outsl
and
es
dec
cmp
jae
inc
hlt
jecxz
mov
add
testl
jmp
add
jae
aad
in
push
mov
out
sbb
jmp
sbb
enter
push
outsb
idivb
inc
adc
lods
add
sbb
pop
nop
inc
xor
mov
push
jo
push
hlt
jo
add
xchg
jo
shlb
xor
push
or
or
or
cld
mov
inc
rolb
or
xchg
or
lock
mov
inc
jg
mov
data16
add
mov
and
ds
adc
in
mov
stos
aaa
ret
inc
jo
jno
adc
mov
mov
fmuls
test
mov
sub
rolb
inc
out
mov
mov
pmulhuw
dec
push
push
pushl
and
or
jp
inc
ret
rolb
rcll
mov
jo
add
xor
repz
and
push
orb
mov
jb
fcomps
push
xor
push
inc
jb
fisttps
add
cld
testb
aas
outsb
lock
and
cld
pop
and
add
les
pusha
dec
jne
mov
inc
cmpsb
das
dec
mov
fcom
mov
adc
add
mov
mov
sub
mov
mov
add
cmp
ja
rolb
inc
cmpsb
testl
pop
es
lcall
cmp
inc
push
or
mov
sub
dec
inc
or
sub
outsl
sbb
or
fsubr
and
and
mov
dec
test
sbb
ret
sub
add
cli
sub
outsl
jl
out
je
rolb
push
or
add
hlt
xor
or
icebp
jg
test
sbb
mov
test
ds
dec
add
mov
or
fcoms
subb
cmc
jg
adc
cmp
loopne
pop
cmpsb
ret
push
sahf
jo
and
xchg
inc
hlt
adc
decb
jo
jae
loop
and
or
jae
mov
add
push
aaa
je
cli
xor
jbe
cmp
xchg
ret
mov
movsb
or
jb
inc
add
add
ss
cmp
push
rolb
cltd
or
xchg
or
cmp
scas
sbb
mov
xor
cmpsl
and
xorb
ret
and
lds
sbb
or
push
lock
add
xor
dec
pop
and
jg
or
inc
jo
push
pusha
sbb
mov
test
jo
xor
lock
jmp
inc
pusha
dec
pop
and
stos
ss
and
adc
mov
aam
jbe
jmp
mov
shlb
add
cmp
rcrb
call
push
in
jp
or
inc
sub
ret
add
push
jecxz
mov
mov
push
dec
add
add
sbb
mov
loop
jmp
les
pop
shrb
fcomps
sbb
pusha
xrelease
addr16
or
test
sahf
dec
sub
add
adc
mov
mov
inc
cwtl
jb
dec
sahf
mov
dec
or
leave
je
mov
pusha
xor
scas
sub
add
imul
lods
mov
and
sbb
xchg
not
frstor
push
or
jnp
mov
aad
cmp
and
push
push
rcrb
jo
mov
sbb
movl
push
test
mov
lea
les
stos
frstor
xchg
stos
mov
call
insb
negb
or
mov
sub
notl
adc
push
fadds
call
xor
hlt
pusha
ss
pop
arpl
or
shrb
mov
push
movl
aaa
insb
test
xchg
inc
lock
inc
aaa
ror
addl
mov
cwtl
outsb
scas
mov
mov
mov
rol
add
xor
mov
clc
cs
add
inc
andb
and
mov
cmpb
mov
xor
add
sbb
aas
and
test
into
mov
sub
and
adcb
cbtw
inc
adc
adc
fmuls
pop
pop
sub
bound
adc
nop
push
lock
and
mov
and
aam
in
cmp
or
or
push
shrb
nop
rcl
sub
iret
jmp
test
xor
sub
sub
xor
rcl
lods
xchg
push
aam
mov
or
mov
mov
pop
mull
je
cmp
popl
mov
xor
or
pop
cmp
inc
mov
je
add
sbb
add
stc
or
jecxz
loope
sub
out
mov
fistpl
xchg
pushf
sub
rol
adc
dec
jmp
rcr
sbb
sarb
cmp
sub
mov
dec
rol
addr16
incl
shlb
mov
adc
mov
dec
loopne
jecxz
in
out
mov
les
jns
aaa
lret
inc
hlt
clc
mov
xor
mov
cli
clc
movzbl
loopne
mov
and
nop
clc
push
and
movsb
mov
inc
pop
cmp
rorb
add
mov
xor
faddl
lock
adc
cmp
sbb
rorb
sahf
xchg
enter
andb
add
rcrb
push
fadds
and
leave
cmp
sub
add
lds
adc
in
mov
inc
cmp
adc
sub
add
test
cmp
ljmp
das
push
adcb
and
push
loop
adc
xchg
test
or
inc
mov
sbb
into
jb
push
imul
and
xchg
push
jbe
cmp
shrl
mov
adc
cmpsb
rorb
pop
xorl
cmpsb
cmp
pop
jl
aas
mov
mov
and
xor
jp
adc
adc
add
mov
flds
cwtl
test
push
fs
loopne
aam
cltd
fcoms
mov
lds
or
cs
xchg
push
mov
mov
xor
add
cmpsl
repz
sbb
out
sub
into
cli
adc
fstpt
dec
pop
mov
mov
fbld
sbbb
mov
xor
inc
dec
mov
adc
js
sbb
xor
repz
jg
nop
pop
lcall
mov
aas
je
jnp
jnp
add
pop
adc
mov
hlt
inc
dec
adc
adc
hlt
loopne
lock
fbstp
ficompl
jmp
adc
pusha
push
dec
cwtl
fcomp
sti
sahf
stc
hlt
adc
and
pushf
push
test
das
iret
fbld
fsubl
popa
pop
stos
lock
scas
cmp
fsubrl
adc
or
or
stos
hlt
loope
fcmovu
pop
mov
cld
sahf
or
in
xlat
stos
in
rcl
stos
mov
mov
dec
int3
cmpsb
test
popf
xlat
sahf
adc
mov
rcl
dec
rcr
imul
loop
test
sub
push
mov
jnp
sub
ljmp
sbb
pushf
pusha
adc
push
enter
sar
jp
and
pusha
stos
push
incb
pusha
push
sub
add
js
jbe
loop
lods
cmpsb
pop
push
pop
mov
sbb
sbb
pop
push
ss
fimull
ret
mov
sarb
mov
loopne
shrl
add
add
xor
and
ljmp
xor
test
bound
addr16
add
jmp
arpl
mov
mov
add
push
lret
aad
adc
jne
jb
lea
call
lret
or
dec
cmp
inc
and
or
andl
inc
cs
xor
inc
inc
sub
push
in
aam
adc
loopne
inc
or
xchg
mov
cmp
dec
push
lea
movsb
mov
je
fcmove
sub
loopne
or
fistpl
adc
add
pusha
stos
mov
xchg
and
add
mov
adc
orl
add
pushf
and
pop
inc
sbb
repz
test
lcall
je
inc
push
sti
adc
xorb
insl
outsl
jg
and
and
add
add
loopne
sub
add
or
xor
dec
loopne
mov
pop
rclb
sahf
pop
dec
enter
sub
add
sub
int3
clc
int3
jo
imul
je
lret
push
and
cmpsb
test
push
or
fdivs
icebp
mov
or
add
or
jbe
mov
pop
push
jnp
ficomps
cmp
adc
lcall
and
xor
add
sub
aaa
pop
lcall
fbstp
jb
shlb
push
add
fistps
mov
add
jl
pushf
push
sub
rolb
cmc
pushl
jnp
or
dec
or
inc
adc
mov
sub
xor
cmp
xor
scas
data16
pop
cli
sub
xchg
mov
flds
fwait
cli
cmpsb
cmp
push
and
mov
lea
dec
add
xor
insb
test
je
testl
test
mov
cs
mov
mov
faddl
cmp
push
and
add
ss
adc
repz
and
cmc
sub
sti
mov
and
pop
jae
mov
lret
mov
and
aam
jp
add
pop
push
fisubrl
or
pop
rol
fcompl
inc
fdivl
or
fcomi
nopl
popa
xor
sbb
add
fidivs
push
sub
cmp
add
test
xor
pop
sbb
add
xor
xor
jae
in
shrl
xchg
call
rolb
gs
xor
mov
dec
add
stos
cli
sahf
add
dec
cld
dec
incb
inc
mov
add
into
sarb
mov
dec
add
inc
xor
sub
ret
jl
inc
pop
or
icebp
sub
or
notb
or
or
mov
ja
cmp
mov
mov
test
push
test
mov
test
andb
inc
xchg
mov
pop
add
ja
add
fisubrs
and
jno
dec
and
jo
outsl
mov
ret
pop
jo
loopne
sub
andl
nop
movsb
add
mov
mov
mov
daa
xor
pop
add
add
decl
sbb
inc
dec
mov
daa
dec
int3
call
and
adc
mov
add
les
push
ficompl
adc
inc
mov
fistl
cmp
pop
xchg
ss
adc
and
into
jb
add
push
push
pop
dec
push
xchg
and
pop
mov
adc
ja
data16
pop
fisubl
cs
mov
push
insb
cmpl
mulb
mov
nop
xor
cmp
cltd
mov
lret
nop
in
or
incl
sub
jo
clc
fisttps
add
or
mov
or
or
add
inc
inc
sub
add
cwtl
shlb
movsl
aaa
outsb
mov
sub
push
ss
ret
call
add
xchg
xor
jle
push
adc
mov
rorb
mov
mov
push
or
jo
push
sub
ljmp
fsubl
xchg
xor
mov
mov
xchg
cld
adc
mov
jo
add
sahf
aad
jne
scas
push
mov
xor
fildl
or
or
inc
sti
or
stos
pop
cmp
push
pop
jo
lods
mov
jo
fs
in
inc
adc
addb
lret
mov
test
adc
push
call
mov
mov
leave
lea
call
adc
mov
push
adcl
test
insl
or
jbe
jbe
mov
aas
shlb
jo
in
in
lret
or
cwtl
add
lock
test
test
adc
or
mov
pop
stc
mov
mov
and
adc
clc
push
push
xor
ret
jg
call
call
add
call
icebp
paddd
lock
call
inc
xor
jl
repz
or
call
mov
adc
sbb
aam
outsb
dec
dec
test
out
sub
cmp
mov
in
mov
lods
jns
or
shr
scas
adc
scas
inc
cs
mov
pop
sub
jle
lcall
call
es
test
je
push
mov
sub
push
pop
push
scas
push
ja
andb
addb
inc
cmc
pop
ret
push
add
cmp
inc
jg
sbb
stos
int3
lock
pop
push
rolb
jbe
mov
movsb
mov
push
adc
cmpsb
pop
mov
scas
mov
mov
push
xor
pop
adc
cmp
das
push
into
push
cmovs
lock
jne
mov
out
xchg
and
cmpl
or
pop
mov
xor
lea
mov
xchg
lock
inc
scas
cmp
adc
gs
icebp
push
xor
mov
fnstenv
mov
pop
mov
sub
int3
mov
out
jb
inc
and
or
push
enter
push
push
mov
mov
pop
call
call
sbb
loopne
loope
jb
add
push
mov
xchg
cli
sub
call
add
xor
fmuls
mov
add
add
gs
andb
and
out
mov
dec
scas
and
shl
fisubrl
push
push
scas
mov
push
mov
and
ret
xor
jne
add
inc
lods
mov
jmp
inc
in
aaa
pop
jg
xor
adc
and
cmp
ljmp
push
mov
out
mov
mov
inc
mov
or
scas
sbb
xor
mov
adc
add
scas
lds
js
mov
movsb
mov
mov
add
scas
push
or
xor
inc
ljmp
lcall
sbb
push
xor
or
fimull
testb
dec
in
push
dec
xor
mov
jp
jae
insb
loop
or
adc
jl
fisttpl
clc
cmpb
inc
jo
mov
or
shl
or
push
ja
xlat
mov
jl
push
shlb
les
or
enter
cld
scas
cmpsb
cmc
stc
cmpb
mov
lock
and
outsb
adc
sbb
fistps
cmpsb
cltd
idiv
nop
xchg
rcrb
xor
test
repz
cmpsl
sub
subb
sub
mov
sbb
outsl
mov
jns
gs
mov
sub
scas
je
mov
icebp
mov
incl
xor
mov
fs
bound
adc
pop
test
push
cmpsb
sub
fwait
inc
dec
adc
lret
mov
xorb
pop
sub
add
mov
data16
cmpl
mov
adc
pop
add
add
sbb
dec
fistl
push
push
aad
fadd
mov
dec
xor
inc
mov
mov
test
and
addb
ds
fdiv
add
addb
stos
ljmp
or
add
mov
cmp
xchg
push
push
sub
mov
enter
hlt
mov
mov
fucomip
cmpsl
ds
fidivl
pop
dec
insb
xchg
addr16
push
add
mov
loope
cmp
mov
or
sbb
and
es
cmpsl
or
mov
sbb
test
and
lea
insb
adc
call
mov
push
mov
inc
ljmp
int3
adc
mov
add
jl
sbb
xchg
fcoms
ja
jbe
int3
outsl
add
push
mov
cltd
arpl
push
dec
dec
test
aam
pusha
js
outsb
lea
xchg
inc
mov
shr
hlt
add
pop
iret
cld
cltd
add
add
adc
orb
mov
mov
dec
test
insl
cmp
sbb
and
jbe
adc
mov
xorl
loopne
enter
xor
stc
cmc
mov
push
outsb
add
loop
je
mov
mov
in
es
shrb
dec
dec
std
cmp
jae
dec
fdivl
jle
jl
push
add
mov
sbb
pop
pop
pop
lea
pop
fstps
pop
fsubrp
iret
add
xchg
mov
lret
dec
or
sub
hlt
je
imul
or
je
xor
pop
inc
inc
popa
sahf
mov
pop
je
or
xor
mov
add
bound
or
in
cmpsb
out
lock
push
push
add
outsb
inc
xchg
pusha
daa
test
jb
sahf
xor
or
lods
jge
push
in
mov
fst
and
or
jbe
mov
ljmp
or
cmpsl
pop
inc
arpl
push
add
cmp
test
mov
add
rolb
jecxz
xchg
or
jb
call
push
fsubrl
push
pusha
mov
inc
inc
jbe
data16
or
insb
std
adc
movsl
push
sarb
dec
pop
dec
nop
xor
cmpsl
or
mov
sbb
es
pop
pop
mov
lcall
dec
aad
push
adc
cmp
pushf
adc
enter
fisubrs
xadd
shrb
and
inc
out
sbb
ret
pop
jl
ret
lahf
xor
push
jne
add
xchg
adc
adc
dec
je
xchg
call
rorb
lock
xor
dec
loop
push
int3
adc
add
and
in
pop
adc
mov
mov
call
mov
push
inc
stos
popa
call
aas
rorl
add
data16
add
clc
mov
cmpsb
mov
outsl
add
add
adc
inc
add
xchg
jo
add
mov
sub
shrb
aaa
or
movsl
push
cmp
adc
and
or
and
mov
mov
shrl
add
sub
pop
sub
jg
lea
pop
adc
cmpb
pop
xor
adc
add
adc
jg
inc
inc
xor
rclb
jp
mov
push
inc
mov
es
mov
or
out
push
test
stos
xor
cmp
mov
fisubrl
fs
dec
fcmovne
sahf
or
and
insl
js
push
sbb
sub
push
inc
fs
adc
cmp
fmull
add
push
push
lock
daa
test
pop
mov
sbb
es
pop
mov
dec
clc
ljmp
loop
adc
add
dec
insb
or
add
xor
dec
pusha
dec
jp,pn
clc
inc
or
in
dec
inc
call
in
imul
xchg
adc
lea
xchg
xor
xor
dec
decl
test
icebp
sbb
lea
pusha
push
xchg
mov
jb
xchg
sub
and
add
nop
popa
add
lock
clc
mov
or
hlt
sbb
add
xor
scas
mov
jmp
mov
stos
lock
test
pusha
xor
pop
mov
call
adc
test
into
call
lret
adc
xchg
in
pop
lea
cmp
and
jo
pop
lcall
lds
sub
repnz
pop
ljmp
std
jmp
or
shl
add
sub
and
jmp
and
push
std
idivb
jne
pusha
enter
pusha
pop
cs
in
lahf
ljmp
or
es
fistps
loope
movsl
xor
testl
shrl
add
out
and
loope
add
dec
mov
inc
hlt
push
jl
pusha
push
jmp
test
cmpl
mov
and
mull
scas
pop
and
je
push
push
pusha
jb
push
dec
test
enter
orb
add
popa
and
sbb
divb
or
lods
push
loopne
sbb
xor
sub
and
out
shr
dec
add
loop
add
int3
jmp
pusha
sbb
rorl
dec
sbbb
lcall
pusha
sub
cmp
loopne
sbb
pop
inc
aam
add
enter
mov
dec
push
faddl
enter
sti
loope
shlb
mov
mov
and
lret
ljmp
fs
loopne
pusha
fwait
or
lds
int
movsl
lods
gs
leave
ret
loope
adc
or
push
hlt
and
fisubrl
daa
mov
pop
and
loope
fstpl
push
xchg
scas
std
dec
xor
rclb
test
ffreep
aas
or
notl
push
mov
xchg
cmp
xor
bound
ja
sarb
jbe
adc
mov
lods
add
es
mov
sub
imulb
jg
ss
popw
pusha
lods
clc
loopne
mov
popl
fdivrp
loope
adc
das
adc
push
inc
xchg
inc
push
inc
nop
nop
push
and
mov
mov
roll
mov
mov
push
aam
sub
jp
ljmp
xchg
mov
loope
push
jmp
cmpsb
push
push
nop
push
cltd
pusha
sbb
sub
and
mov
loopne
nop
pop
mov
outsl
pop
or
mov
movb
cmpsb
mov
push
mov
inc
insb
or
fs
and
add
scas
rolb
cmp
pusha
cmp
or
test
loope
roll
pusha
adc
xchg
loope
inc
sub
loopne
lods
add
jne
push
mov
mov
add
fwait
push
movsl
in
pop
inc
rep
xor
add
lock
mov
cmpsb
loopne
shl
dec
xchg
lock
and
xchg
push
inc
pusha
mov
sti
out
mov
or
sbb
add
or
inc
add
test
inc
push
mov
out
rorb
lock
jecxz
clc
cmp
mov
or
mov
mov
jp
adc
sbb
dec
idivb
mov
test
rorb
or
add
fwait
test
mov
or
pushl
sbb
sbb
adc
daa
push
shrb
push
mov
jl
xor
pop
imul
rcrl
inc
jmp
dec
adc
sbb
in
lcall
inc
or
hlt
testb
and
jo
adc
mov
lahf
add
stos
repnz
adc
lock
jno
mov
push
icebp
dec
mov
sub
in
xchg
sbb
or
pop
adc
sub
adc
adc
fnstenv
adc
xchg
jb
faddl
adc
test
push
test
mov
mov
je
adc
mov
clc
stos
xor
sbb
mov
push
xor
inc
pushaw
push
arpl
rcrb
nop
push
call
pop
sub
mov
cmp
push
pop
mov
sarb
add
xchg
adc
and
pop
or
roll
jne
push
mov
adc
sub
cld
jno
lods
jnp
stos
movsl
das
push
jae
mov
and
mov
sub
mov
call
call
clc
xchg
ljmp
fisttps
push
stos
sub
push
orl
jo
decl
xchg
lock
call
addb
jl
cli
mov
pop
repz
cltd
es
repnz
test
ficoml
adcb
aaa
jle
push
fidivl
cld
cli
lods
jmp
jo
and
xor
jmp
mov
lcall
lods
xchg
sub
cmp
push
add
jecxz
inc
or
inc
mov
push
mov
push
mov
adc
imul
lock
addb
or
or
xor
push
xchg
incb
scas
clc
xchg
sub
xor
bound
jmp
sub
and
imulb
cmp
lods
jno
sahf
sbb
or
fs
jp
test
or
ss
lock
das
sub
push
jmp
add
xor
or
pop
cmp
insb
enter
add
jg
cmp
je
add
outsb
lea
mov
xor
mov
push
sub
call
ljmp
xchg
enter
daa
add
dec
rcr
add
sbb
inc
cmp
add
inc
add
push
in
inc
sbb
add
xor
or
add
add
add
add
inc
sbb
pop
inc
lock
divb
jb
lea
and
inc
rclb
sub
push
push
jb
mov
jg
adc
lsl
adc
in
push
add
nop
adc
push
jle
sbb
adc
loop
sbb
je
inc
and
cmp
or
add
int
sbb
adc
jmp
je
rcll
sub
pushl
adc
roll
xor
call
xchg
call
shlb
add
ljmp
pop
imul
xor
dec
ss
clc
xchg
int3
lock
push
incl
lock
xchg
xor
xor
or
test
inc
aam
mov
pop
lea
xor
mov
adc
inc
sarb
clc
push
xor
add
xchg
add
lock
or
addb
rcrb
sbb
jo
lock
add
push
fsubs
lea
lcall
xchg
in
in
xchg
fisubrl
add
aam
sbb
mov
push
inc
subb
cmp
in
cltd
xor
lcall
rclb
jl
mov
enter
fsubl
pop
mov
mov
hlt
pop
push
in
or
push
call
pop
call
push
add
cmp
je
jg
hlt
call
push
mov
lock
or
and
mov
or
pop
push
pop
xchg
ret
and
in
aad
adc
cmp
ljmp
cmp
lcall
inc
ja
jle
mov
addl
mov
or
add
popa
sub
rcll
or
mov
stos
jle
mov
push
fidivl
mov
inc
jo
mov
sbb
xor
mov
mov
enter
xor
sub
inc
sub
pop
mov
and
and
int3
ret
adc
nop
or
sub
and
pop
xor
dec
cmp
adc
or
inc
and
dec
sbb
sarb
or
cwtl
shll
xor
call
lret
lock
enter
push
push
test
jo
mov
test
add
xor
lock
mov
and
pop
jle
les
hlt
scas
dec
lock
loope
and
mov
popf
inc
xlat
mov
cli
movsl
enter
or
xor
in
fsubr
mov
clc
mov
decl
push
fidivl
mov
inc
sub
or
dec
xor
jg
incl
es
jb
loopne
adc
inc
mov
xor
sti
clc
and
clc
inc
mov
clc
adc
xor
dec
xor
push
call
xchg
test
push
cmc
inc
hlt
hlt
lods
adc
push
cld
jecxz
inc
mov
xchg
bound
sub
mov
or
adc
sbb
pop
or
and
lahf
push
mov
cmp
test
add
pop
cmc
sbb
mov
shl
inc
jb
fcoml
sbb
mov
add
pusha
jecxz
xchg
or
in
or
es
in
aas
lock
rclb
jo
mov
and
adc
mov
repz
aaa
push
sbb
cld
xchg
lea
rcrb
mov
lock
enter
idivl
mov
mov
clc
cmove
xor
cltd
loope
mov
mov
mov
add
mov
les
addl
fildll
adc
sub
call
add
xchg
jg
and
mov
aas
lcall
loopne
sbb
call
xor
cld
incl
lock
jno
test
adc
xchg
add
inc
or
cld
es
add
shl
cmp
adc
add
and
pop
sub
add
sbb
jmp
fcmovu
inc
or
pop
in
xor
cmp
or
insb
out
je
xor
sbb
xor
mov
mov
daa
and
in
pop
jo
add
lock
jbe
or
les
mov
test
andl
fwait
add
jl
inc
push
mov
xchg
es
pop
cltd
cli
adc
push
adc
jb
push
jb
pop
ja
sub
les
cli
mov
mov
pop
std
dec
ret
pop
repnz
adc
xchg
push
stos
fsubr
inc
cmp
popa
push
push
mov
xlat
jbe
or
pop
xchg
fsub
cmpb
movb
jbe
sub
and
sbb
enter
jbe
xor
das
nop
sti
add
jbe
or
pop
sub
and
test
sbb
cmp
or
sbbb
add
mov
and
cmpsb
sub
mov
inc
ret
and
inc
xchg
jmp
subb
dec
and
push
push
ret
add
pop
cmp
add
mov
cmpsb
test
outsl
mov
fbstp
push
add
mov
es
mov
inc
sub
testb
or
xorb
push
mov
or
mov
adc
orl
leave
mov
pop
push
pop
dec
out
and
mov
es
rcl
add
fs
add
cmpb
inc
adc
adc
push
test
inc
and
inc
fidivl
mov
fcoms
int3
push
mov
scas
roll
movl
add
rolb
push
push
push
shlb
lcall
cmp
in
mov
addr16
adc
dec
test
or
rcll
inc
push
xor
inc
or
lds
loope
shll
push
test
sbb
push
dec
and
push
andb
lcall
rcrb
cs
push
cmpsb
out
jo
add
orb
test
into
add
add
aaa
sbb
jecxz
fildl
cmp
jbe
xchg
jne
test
push
add
push
adc
or
push
push
cld
xor
jne
xchg
push
movsl
cld
and
add
jb
lcall
in
fisttps
jo
xor
mov
rolb
ret
pop
adc
test
enter
shrl
push
xchg
in
lea
inc
sub
aaa
push
cmp
jecxz
pop
cmpsb
mov
fsubrs
lahf
mov
mov
addb
pop
mov
jl
fiadds
push
rcl
and
movsb
add
rorb
push
faddl
inc
cmp
xor
pusha
adc
mov
ret
or
dec
dec
sarb
adc
lret
or
sbb
mov
mov
jecxz
add
mov
add
ss
push
mov
shll
jbe
jnp
lahf
jl
ret
leave
cmp
pop
and
dec
incl
cli
jg
stos
xchg
mov
stos
cs
rolb
std
push
mov
xchg
dec
add
lods
add
call
add
or
stc
and
imul
xor
inc
clc
or
jne
je
cmpsb
incl
pop
pusha
daa
push
test
push
and
cmp
or
lds
mov
and
and
dec
sub
loop
and
cmpl
loopne
adc
add
test
sbb
loope
lock
push
mov
adc
push
mov
popa
or
xor
jl
inc
in
cmpsb
loopne
jno
xchg
or
enter
xchg
fs
jp
mov
or
decl
push
pop
mov
mov
and
mov
mull
push
and
fwait
inc
orb
sub
inc
inc
sub
mov
sbb
and
push
movsb
dec
jp
xor
fmulp
arpl
fnstsw
mov
aas
pusha
lcall
cmpsl
test
pusha
add
pushf
cmp
mov
or
adc
sub
mov
push
push
inc
or
add
sbb
or
or
in
clc
loop
out
push
pop
mov
cmpsb
sbb
sbb
loopne
or
daa
or
push
mov
int3
push
pusha
add
out
mov
sbbl
inc
jecxz
cmpsl
add
jb
icebp
pusha
jecxz
jo
cli
add
pop
xor
cmc
incl
add
jne
pusha
add
cwtl
test
dec
add
add
ret
add
dec
loopne
lcall
add
adc
call
cmp
add
lcall
xlat
loopne
orb
pop
add
dec
push
cli
sub
testb
mov
sbb
sub
or
add
sub
fwait
gs
clc
sarl
jge
xchg
and
into
pusha
adc
jp
adc
ret
mov
notb
out
adc
xorl
add
inc
scas
and
icebp
xor
mov
repnz
add
ret
sub
or
cmp
or
mov
adc
cs
pusha
add
pop
adc
lock
sub
push
je
sbb
jno
pusha
sbb
xor
call
mov
test
pop
dec
pusha
lods
loopne
lea
mov
mov
dec
gs
sub
pop
imul
mov
aam
lock
pop
inc
movb
cmpsl
sbbl
inc
jnp
mov
outsb
inc
repnz
xchg
and
loopne
inc
sub
jle
lea
xchg
loopne
out
adc
pop
idiv
cmpsb
adc
fs
and
pusha
mov
jp
ficomps
inc
push
add
rorb
int3
pop
and
std
xchg
rorb
cmc
and
mov
enter
les
and
stos
loopne
lea
outsl
push
mov
push
inc
lcall
enter
test
enter
mov
leave
inc
sub
xorb
pop
xchg
add
pop
pop
shlb
push
or
addl
mov
push
jne
les
cli
xor
dec
shlb
int
sbb
mov
mov
fistps
dec
or
jmp
sbb
xchg
mov
xchg
mov
lcall
adc
and
sbb
jo
mov
push
push
idiv
call
push
push
data16
pusha
stos
test
mov
popa
pop
push
and
ljmp
xor
pop
pop
cmp
pop
loopne
jo
lea
sbb
adc
jb
loopne
testb
and
jb
bound
cs
xor
adc
jo
cmpsb
xor
cmp
out
into
jle
xchg
jo
adc
inc
add
mov
push
and
mov
ret
adcb
out
push
movsl
das
mov
add
test
lock
sbb
mov
incl
and
inc
add
inc
and
or
call
rcll
adc
sbb
xor
std
lcall
dec
sbb
cmp
or
jne
mov
sub
mov
xor
add
or
mov
and
fcomi
mov
mov
or
dec
inc
mov
cmpb
std
mov
xchg
jl
call
mov
or
dec
mov
and
adc
adcb
pop
fildll
sbb
stos
or
cmp
ret
mov
push
lea
sti
mov
mov
adc
call
stos
cmp
jge
mov
ss
sbbl
cld
push
subb
and
stos
xor
lea
mov
inc
cli
or
mov
inc
aas
jne
test
cltd
push
test
jno
hlt
lea
jl
and
jo
pop
pop
mov
or
jb
jo
jbe
and
push
push
sarb
rcrb
jbe
incb
add
inc
incl
daa
in
iret
xor
icebp
inc
add
call
mov
lods
sar
addl
adc
xor
push
rdmsr
pop
xor
incl
out
add
push
idivb
inc
cmp
out
lea
or
push
add
or
add
sbb
push
sti
pop
stos
mov
js
jae
and
test
dec
cmp
mov
mov
sub
aas
and
jb
imul
fiadds
xor
jno
adc
jno
rorl
scas
push
inc
ja
jp
push
xchg
arpl
push
pop
or
add
dec
push
call
ret
decb
or
xchg
pushf
xor
cmp
int3
mov
push
push
sbb
mov
adc
mov
and
pop
loopne
adc
push
lock
add
lcall
movsb
adc
mov
sub
loope
inc
and
shrb
push
mov
mov
pop
xor
adc
add
sub
verr
inc
stos
int3
sbb
mov
dec
cmp
decl
lea
mov
mov
dec
sbb
xchg
ja
jb
mov
jl
sbb
cmpsl
jne
add
pushf
inc
test
jmp
test
test
xor
mov
sub
mov
mov
xchg
add
xchg
mov
mov
dec
sub
and
ss
add
into
sbb
xor
pushl
pop
mov
pushf
test
lock
cli
lock
pushl
dec
adc
mov
or
or
cmpsb
ret
imul
and
push
inc
pop
add
jno
mov
push
or
jo
jns
leave
hlt
push
inc
je
cmp
xor
add
or
leave
add
loopne
insb
adc
sub
push
xor
pop
or
icebp
aaa
adc
add
or
xor
repnz
pushl
jne
stos
xchg
and
call
lds
testb
mov
push
push
cld
cmp
pushf
sbb
adc
xchg
cwtl
mov
mov
pop
arpl
lds
cmp
mov
or
lea
adc
outsl
ljmp
ret
push
icebp
pop
cwtl
mov
ss
push
jno
test
pop
push
xor
cmp
mov
mov
xor
xor
dec
ret
aas
cmp
scas
outsb
add
xchg
adcb
inc
cwtl
jge
and
add
push
les
out
and
pushl
or
push
mov
jne
add
add
jno
mov
insb
mov
sbb
inc
and
add
inc
push
loopne
aam
adc
nop
dec
rclb
icebp
stos
add
cltd
mov
mov
decb
add
xchg
push
push
test
scas
push
fildll
and
jne
push
pusha
enter
adc
cli
or
nop
xor
jno
test
out
add
mov
mov
sub
push
xchg
in
arpl
sbb
jbe
inc
jl
jb
xor
mov
rclb
or
add
sbb
fcomi
or
xchg
or
sbb
popf
cli
das
push
jno
test
lea
xor
mov
lahf
or
and
pop
decl
xor
in
dec
mov
hlt
adc
add
clc
mov
bound
movsl
mov
lret
lock
mov
push
test
sub
jae
sbb
sbb
xchg
push
in
push
call
shlb
and
jg
push
hlt
push
cmpsb
aam
dec
jl
imul
xor
lds
jno
adc
or
loopne
xor
or
ja
xor
cwtl
jo
sbb
jbe
cltd
add
push
loopne
xor
adcb
add
lcall
shlb
lea
jb
or
pop
aaa
jge
cmc
pop
inc
mov
jle
mov
dec
call
pop
sti
jmp
mov
inc
mov
ret
mov
sub
outsb
adc
push
adcl
adc
pop
push
mov
ret
dec
pusha
xchg
xor
xchg
mov
roll
push
shl
add
adc
cmp
adc
sub
and
push
mov
push
adc
adc
icebp
dec
std
mov
add
dec
mov
add
add
cmpsb
xor
jg
push
add
or
xchg
mov
pushf
push
hlt
in
jp,pn
and
jle
aaa
lock
adc
sbb
mov
and
fwait
add
sbb
pop
pop
imul
mov
lret
enter
dec
sbb
pop
add
mov
orl
add
cmp
pop
out
add
pop
es
pop
and
into
lea
dec
inc
clc
xchg
clc
pusha
add
fsub
or
sbb
add
fisubs
adc
sub
repz
sbb
or
shll
and
xchg
jl
cwtl
imul
inc
xchg
sbb
or
outsb
dec
push
sbb
mov
ret
push
push
mov
lcall
dec
sub
fists
add
or
and
lock
mov
and
sti
test
pop
xchg
adcb
pop
out
push
test
call
push
mov
imul
pop
gs
mov
mov
es
push
fsubr
or
cmc
mov
xor
dec
call
push
lock
xorl
xchg
or
push
push
movsl
sub
std
push
and
inc
loop
jb
cmp
push
push
aaa
dec
nop
jge
push
xchg
sarb
hlt
or
loop
lcall
out
jno
inc
rorb
shll
loopne
subb
das
push
jb
and
shl
add
mov
in
mov
lcall
subb
je
shrb
mov
test
test
lea
jbe
sbbl
les
and
rcrl
and
inc
xor
into
push
lret
push
inc
push
xorb
call
ljmp
push
ds
pop
jb
orb
push
cli
nop
nop
or
push
rcrb
inc
addr16
fimuls
les
mov
and
sub
movl
cwtl
rcrl
xor
test
pushf
je
or
mov
mov
sub
or
inc
adc
outsl
enter
add
test
adc
fdivrl
cltd
rolb
fucomi
jle
or
movsb
iret
mov
add
not
lods
cs
push
stc
sbb
jle
pop
lret
and
mov
sbb
sub
inc
lcall
inc
mov
push
jb
rcrb
add
lods
jb
add
xchg
lcall
and
push
mov
push
pop
ret
xchg
adc
sub
lret
and
shrb
call
add
xor
add
adc
push
add
xchg
xchg
sub
adc
cld
cmp
push
mov
add
xor
add
xchg
and
cltd
cmp
je
mov
out
fdiv
add
insb
stos
sbb
cmc
cmpl
shlb
sbb
dec
incl
mov
mov
std
pusha
xor
rclb
mov
loopne
sbb
jo
xorl
sbb
int
add
imul
sub
pop
pusha
inc
xor
fcoms
sbb
fucomip
stos
add
sbb
call
add
aad
xor
scas
sarl
push
loope
add
xor
or
loopne
cld
pop
shll
nop
cmp
or
and
scas
mov
clc
sbb
adcb
pop
pop
out
test
dec
fidivrl
jne
pusha
dec
data16
mov
adc
popf
adc
push
jecxz
fsubrl
leave
cs
jecxz
in
in
loop
and
sbbb
and
add
mov
push
mov
push
test
add
push
lfs
mov
pop
daa
outsb
jp
xchg
fwait
dec
inc
mov
loopne
and
sub
les
cmpsb
dec
adc
cmp
pop
lahf
ret
pusha
or
sbb
adc
insb
mov
and
mov
incl
add
xchg
add
dec
mov
xchg
aam
rorb
xchg
dec
or
aaa
adc
pop
das
mov
pop
testb
je
aad
ljmp
pushl
cs
rcrb
jg
mov
jnp
jne
mov
xchg
cwtl
inc
leave
lret
cmp
nop
inc
pop
or
lods
xchg
andb
inc
add
outsb
mov
stos
clc
out
cmpb
mov
jg
cmp
js
lea
push
mov
add
cli
outsl
and
mov
loopne
lods
pop
cwtl
jp
add
cwtl
loop
mov
and
push
cwtl
mov
pop
enter
std
es
mov
push
mov
inc
sbb
push
mov
push
mov
mov
adc
popa
mov
loopne
hlt
or
lock
aam
out
sbb
orb
test
push
hlt
and
popa
arpl
ja
pushl
xor
cld
loopne
mov
pop
in
lods
jmp
add
in
inc
popa
ret
adc
sub
inc
addr16
sub
and
je
out
les
jp
jns
loopne
pop
call
add
lods
adc
pusha
lock
mov
jnp
mov
xchg
mov
push
ja
loopne
shr
fwait
out
mov
les
mov
pusha
aad
data16
adcl
adc
push
js
test
or
int3
add
push
xchg
in
test
sarb
add
push
jmp
mov
in
adc
jbe
mov
jge
pop
pusha
or
jle
push
xor
or
cmpsb
fs
pop
call
in
mov
je
aam
push
cli
sbb
push
or
out
pusha
add
add
and
stc
sbbb
lods
js
cld
jo
pop
ds
pop
inc
or
enter
xchg
mov
mov
add
pusha
sub
adc
int
cmp
es
fldenv
xorl
jb
mov
cmp
in
hlt
mov
pushl
into
fsubrl
lock
push
call
leave
loopne
call
jb
aas
inc
clc
lcall
add
push
mov
in
xor
lock
and
cmp
inc
sub
mov
mov
out
pop
jo
test
jl
jle
or
mov
or
xor
popf
mov
call
push
fstl
icebp
sub
ret
or
or
or
adc
cld
add
ljmp
in
cmp
ja
pop
sar
es
je
cmpb
or
cli
call
ret
int3
rolb
dec
inc
mov
outsb
lret
or
lret
push
inc
pop
das
jl
lcall
mov
mov
jecxz
xorl
js
push
lods
test
push
in
insb
add
xorl
xchg
fadds
out
inc
mov
movsl
xor
movb
xchg
sub
jg
or
out
clc
lds
dec
jo
andb
xor
fidivrs
icebp
add
test
jg
xor
xchg
mov
imul
lea
push
jno
in
mov
add
test
ja
inc
icebp
pop
jbe
pop
inc
push
or
pop
cmpl
jae
jo
repnz
mov
insl
xchg
out
aam
xor
iret
jo
adc
jo
loopne
out
pusha
fistps
add
jne
xchg
ss
rorb
dec
cmovge
jno
arpl
jge
cmp
cmp
mov
xchg
test
cld
shlb
adc
imul
cmp
mov
or
add
adcb
mov
imul
mov
jns
orb
add
sbb
pop
and
adc
dec
and
mov
insl
mov
jo
rolb
fmuls
popf
inc
inc
adc
xor
jg
add
adc
push
adc
movl
adc
or
je
mov
cmp
cld
push
aaa
or
mov
cmp
inc
test
incb
rcll
dec
dec
dec
sbb
jge
add
inc
mov
jp
je
push
cmp
pop
orb
jmp
in
xchg
lret
mov
mov
ret
nop
pop
hlt
mov
pop
add
inc
mov
xor
ljmp
add
cmp
mov
ds
add
adc
sub
lock
dec
imul
mov
movsl
incb
add
mov
incl
xor
jp
jo
call
adc
adc
inc
inc
stos
adc
add
fdivrp
push
xchg
push
mov
jb
xchg
pop
mov
pushf
add
xor
mov
push
sub
pop
push
jmp
xchg
mov
and
jo
push
xor
inc
pop
cli
mov
outsl
adc
loopne
js
push
or
jo
dec
add
sub
pop
add
lods
mov
repnz
jp
sbb
mov
lock
sti
pushl
nop
and
inc
lods
icebp
or
jl
mov
pop
jl
call
inc
scas
mov
xchg
mov
push
mov
fs
jo
clc
push
sub
jne
loop
cmp
enter
loopne
test
xor
ret
jle
movb
ret
movsl
out
adc
push
xor
sub
inc
push
pop
sub
mov
push
andb
xor
xchg
call
mov
sub
xchg
inc
clc
sub
xor
xor
dec
cmp
jnp
sbb
add
cmp
inc
shlb
cmp
mov
sbb
xor
lock
inc
and
sbb
sbbl
sbb
cmp
or
or
xor
mov
je
add
aad
mov
and
sbb
add
push
cmp
and
jbe
cli
mov
ret
js
ret
pop
test
out
cwtl
pop
call
push
lea
xchg
and
subb
adc
xor
jno
or
xor
jne
cmpsb
cld
jne
cli
sbb
sub
test
xchg
mov
shrb
cmp
pushf
cmp
push
sbb
mov
test
sub
push
or
sbb
cmp
outsb
outsl
incl
and
mov
inc
push
lock
or
xchg
test
fistpll
mov
lods
xor
jg
aaa
nop
pop
movsl
test
jo
nop
int3
inc
loop
cmp
mov
push
mov
jo
xlat
cmp
out
add
imul
jo
pop
and
repz
daa
or
test
sbb
add
jo
push
mov
jno
push
mov
push
xor
test
es
inc
scas
adcl
leave
add
icebp
mov
rolb
shl
lock
test
pop
cli
fistps
push
sbb
and
data16
jecxz
pop
adc
push
std
lock
sub
jmp
xchg
xor
pop
mov
push
push
add
or
pop
mov
jp
jecxz
inc
bound
lea
jae
sar
popf
jb
cli
inc
cmp
mov
clc
mov
adc
daa
mov
call
dec
loopne
xchg
aaa
adcl
or
inc
push
movsl
add
push
js
or
jl
xor
out
jg
add
dec
test
xor
cli
push
lock
push
xor
loopne
cli
aaa
test
dec
in
mov
xor
sub
in
dec
aaa
std
incl
sysret
icebp
pop
enter
or
inc
mov
scas
clc
icebp
fs
lcall
mov
add
push
dec
cltd
and
lret
ret
test
or
inc
mov
movb
jns
jp
jo
dec
and
lock
push
fdiv
push
add
mov
hlt
add
lock
mov
add
cmp
cld
mov
stos
icebp
pop
inc
ja
outsl
adcb
lock
mov
movsb
mov
push
and
push
cmc
pop
cmp
cltd
xor
xor
xchg
out
mov
pop
fcoml
aam
mov
or
push
ret
jbe
dec
jne
mov
mov
push
and
adc
sbb
add
out
fisubs
dec
and
add
loop
and
pusha
insl
jb
pop
testl
outsb
clc
mov
lods
push
and
push
inc
test
sbb
add
sbb
sbb
pusha
and
cmpl
out
add
inc
lcall
cmp
int
je
mov
bound
cmpl
into
dec
add
adc
inc
cmp
pop
clc
add
xorb
mov
nop
or
or
dec
jg
push
mov
call
jmp
xlat
add
movsb
ja
clc
jmp
in
adc
nop
rcrb
out
sti
inc
ret
mov
inc
xchg
jno
movsl
cmp
inc
pop
mov
cmp
jne
fisttpl
and
inc
or
or
inc
ja
in
fildl
or
insl
mov
mov
mov
jl
cwtl
or
cld
or
mov
mov
mov
mov
inc
in
or
mov
mov
cmpsb
mov
fwait
outsl
test
test
sub
in
lods
mov
jns
scas
mov
mov
rcrl
fwait
dec
sti
imul
mov
jo
push
mov
mov
ret
mov
sarb
outsl
sbb
push
mov
mov
insl
imul
push
mov
int3
mov
sarl
pop
rolb
xor
insl
sar
xor
ss
and
push
or
fsub
orb
fidivrs
int
dec
repz
xlat
outsl
sbb
std
mov
iret
fwait
dec
repz
dec
mov
pop
xchg
adc
sarl
out
mov
inc
popl
or
incl
push
or
aam
mov
add
shlb
mov
std
ret
aam
sahf
aaa
fwait
std
mov
push
and
push
sbb
dec
rcl
or
lock
fbstp
push
mov
inc
xchg
ret
jge
push
jg
repz
sahf
inc
push
xchg
shlb
inc
or
insb
fisubrl
stos
sbb
dec
push
mov
scas
mov
and
mov
dec
and
push
dec
and
sar
mov
loopne
fisubl
fnstcw
mov
sub
pop
jl
mov
inc
ret
or
sarl
pushl
andb
mov
inc
inc
lock
sarl
mov
loop
dec
dec
ljmp
adc
xor
adc
mov
inc
shlb
mov
add
inc
inc
xchg
ja
loopne
sbb
mov
dec
inc
inc
inc
mov
pop
popa
jg
decl
adc
jmp
bound
push
inc
mov
lods
mov
mov
push
or
or
push
push
cmpsb
push
pop
inc
cmp
inc
fsubp
or
pop
or
inc
dec
pusha
or
mov
pusha
inc
push
hlt
or
fs
fidivrs
cmp
aaa
or
mov
stos
andl
outsl
pop
add
inc
sbb
clc
adc
jecxz
je
sub
and
in
movl
sbb
jle
out
fwait
loopne
jbe
mov
mov
add
dec
jb
mov
sbbb
hlt
pop
std
aaa
add
daa
adc
pop
add
negb
push
daa
mov
sbb
testb
push
inc
jnp
rol
insl
inc
test
push
add
sbb
cltd
mov
test
ret
add
pop
inc
cmp
nop
mov
push
jmp
lea
popf
stos
inc
add
push
dec
adc
push
popa
xor
imul
jle
test
das
lea
lock
xor
cmp
lahf
adc
push
or
sbb
cmp
or
es
lea
bound
xor
fld1
push
popa
scas
je
add
divb
adc
cmp
sbb
call
jmp
sbb
adc
xchg
sbb
popa
dec
js
aam
and
push
push
sub
push
or
int3
loopne
jp
mov
loopne
add
jno
pusha
ret
mov
push
jecxz
mov
jmp
sub
lods
pushf
inc
sbb
sbb
outsl
xchg
mov
inc
mov
xor
or
inc
mov
rcrl
test
mov
push
push
add
outsb
roll
repnz
aam
jp
sbb
in
xor
out
push
jne
mov
mov
cmp
push
fcoms
push
pop
cs
in
sbb
mov
jne
mov
imul
mov
mov
mov
inc
fisttpl
in
adc
mov
in
fsubrl
cmp
nop
aam
or
and
add
inc
cmp
jo
push
dec
dec
outsb
mov
dec
cmp
ja
lock
and
cmp
or
or
pop
insb
stc
sbb
jle
cmc
or
mov
xchg
pusha
jp
into
push
xor
iret
sbb
xchg
adc
fidivl
push
xor
popa
jmp
sahf
scas
loopne
aam
push
loopne
pop
add
sbb
fisubrl
xor
pusha
loop
sub
lock
mov
push
jl
icebp
cs
fs
inc
lods
xor
filds
pop
jo
lods
mov
mov
call
sub
or
call
jge
lods
jo
inc
fwait
add
stos
mov
or
add
mov
cmp
bound
push
fsubl
mov
scas
jo
inc
adc
test
out
mov
nop
sbb
sub
or
or
or
rorb
add
mov
xor
test
sbb
and
inc
sbb
fsubs
sub
mov
jbe
std
sbb
cld
add
mov
or
dec
mov
imul
cld
lret
push
xchg
lock
xor
clc
and
or
mov
inc
loopne
test
loopne
sub
sub
mov
mov
push
rolb
and
outsb
cmp
jge
jge
icebp
outsl
jo
add
xchg
lret
or
jo
call
mov
icebp
shlb
test
push
je
and
decl
loope
call
mov
out
xchg
idivb
sahf
out
mov
out
cmc
sbb
mov
adc
pop
cmp
or
dec
nop
and
push
mov
mov
mov
mov
lock
inc
inc
push
pop
mov
or
push
mov
jmp
pop
mov
mov
data16
mov
addb
adc
adc
ret
out
repz
pop
gs
ret
test
add
std
jle
or
pusha
cmp
cmp
mov
add
stos
inc
add
mov
rorb
insb
add
inc
or
add
lods
mov
jmp
adc
rclb
sarb
gs
xor
in
sub
dec
xchg
add
push
pusha
and
add
add
popa
int
push
jle
pop
mov
jl
inc
mov
cmp
inc
pop
ret
jl
pushf
xchg
or
adc
mov
sub
cmp
ds
cli
cmp
mov
addl
mov
jo
mov
cmpsb
or
rorb
add
std
or
addb
mov
test
clc
testl
cld
pop
push
adc
lret
test
and
sbb
jg
in
and
add
mov
cmp
push
pusha
sub
and
pop
lods
lret
addl
divb
mov
leave
pushf
les
jo
add
es
mov
outsl
dec
push
sub
sub
cld
mulb
push
test
incb
push
iret
inc
pop
push
fcompl
and
pop
lcall
push
add
ds
jmp
mov
pop
aam
inc
add
rolb
push
nop
setp
add
and
scas
sbb
andb
in
xchg
ss
clc
sub
scas
repz
add
add
adcl
repnz
dec
nop
rorl
xchg
mov
decl
xchg
arpl
adc
mov
mov
test
and
addl
adc
addb
cli
jmp
cmp
pop
mov
dec
mov
xchg
lock
aaa
inc
cmp
lock
scas
push
rcr
sub
mov
int3
inc
or
jle
dec
pop
and
imul
sbb
lock
cmp
divl
lock
sub
push
xchg
stc
pop
ljmp
add
inc
push
xor
sbb
add
inc
or
sub
fwait
insb
insb
jb
enter
and
pop
ds
es
jbe
stos
loop
push
mov
mov
lock
lock
push
adc
add
mov
xor
icebp
inc
push
sbb
adc
sbb
loopne
adc
pushl
ljmp
faddl
cmp
cmpsb
dec
mov
push
mov
lock
rol
xor
mov
inc
incl
adc
lock
add
jb
dec
loop
mov
pop
xchg
push
jo
or
je,pt
icebp
outsl
jmp
and
xor
aas
and
rcrb
add
bound
pop
push
mov
jno
dec
jg
add
lock
adc
loopne
adc
scas
mov
bound
xor
ret
cmc
push
scas
push
push
movsb
push
icebp
add
mull
mov
dec
xor
or
jno
push
je
mov
adc
adc
xchg
sub
call
and
jb
mov
lock
or
addr16
push
lahf
add
pusha
ss
push
or
pop
inc
xchg
lods
xchg
imul
sbb
pop
sub
cmp
add
xchg
or
pop
cs
cli
cmp
mov
jo
popa
or
cmp
jo
fisubs
fmulp
pop
mov
cmp
mov
jae
dec
add
push
add
and
movsb
cmc
outsl
mov
jmp
push
or
xchg
orl
icebp
xchg
fs
or
adc
or
pop
std
adc
inc
icebp
pop
lods
pop
adc
push
inc
clc
call
xor
leave
ret
out
clc
fcomip
hlt
lcall
push
xor
ss
mov
pop
add
sbb
mov
add
xchg
fistpl
inc
cwtl
test
xor
add
sub
or
test
fisttps
shlb
add
push
jo
adc
mov
jo
aad
adc
xor
adc
dec
mov
sub
jno
mov
mov
mov
fidivl
and
addr16
push
js
or
mov
mov
dec
or
scas
cmpsb
sub
jmp
cmpb
pushf
pop
ficoml
call
fadds
add
push
rorb
add
fbstp
cld
lcall
popa
jbe
add
add
push
sti
dec
shlb
xchg
adc
jl
push
es
testb
adc
adc
pop
roll
lds
aaa
inc
xor
inc
xor
push
xchg
jo
add
aaa
push
incl
dec
bound
xorb
sub
rcl
test
inc
jg
addb
xor
mov
cs
clc
es
mov
mov
or
push
or
mov
cld
lock
pop
push
push
inc
sub
fcomip
xorl
sti
push
push
push
test
mov
or
sub
pop
adc
cmpsb
lret
je
add
cmpsb
out
inc
popa
xor
mov
mov
add
push
adc
adc
add
insl
xchg
add
cmp
pop
add
insb
es
addb
addl
sar
add
adc
loopne
repz
pop
icebp
nop
imul
pusha
clc
xor
inc
or
rorb
stc
aam
roll
fadd
mov
movsb
mov
jp
sbb
mov
js
dec
jmp
mov
push
push
es
add
inc
mov
mov
mov
push
add
xor
andl
jmp
cs
pop
dec
lret
add
hlt
cs
add
xchg
clc
imul
push
xchg
ds
jle
outsb
inc
mov
je
mov
cld
call
sbb
mov
xchg
adc
sub
dec
test
mov
xchg
adc
cmp
jp
and
sbbb
xorb
out
sbb
mov
hlt
cli
cld
add
orl
xor
pop
mov
add
imul
mov
inc
add
or
sar
xchg
test
imul
or
xchg
orb
inc
or
pop
mov
push
push
add
aaa
or
push
test
xchg
add
loop
inc
js
push
inc
cmc
mov
sub
inc
pop
sub
testl
roll
adc
es
or
add
push
mov
adc
push
sbb
adc
les
addb
sub
ret
ret
std
clc
or
shlb
je
inc
add
rcrb
adc
mov
push
cmp
testl
js
adc
cmp
out
fs
ret
fadd
push
mov
dec
or
shlb
movl
add
clc
shlb
inc
sub
sub
lds
cld
in
rclb
rolb
inc
ljmp
repz
xor
test
mov
add
sete
cmp
add
pop
je
mov
and
pusha
jmp
rclb
add
js
sub
testb
mov
xchg
shlb
jne
adc
or
pop
lds
rcrb
sarl
sti
sbb
adc
adc
push
xchg
push
push
or
dec
sbb
inc
pop
addb
fwait
sub
aas
add
in
es
jno
push
mov
rolb
dec
add
rolb
add
into
xchg
cltd
inc
pop
mov
rol
aaa
insl
scas
loop
and
mov
jge
inc
sub
pop
pushf
loopne
or
sbb
andl
aam
aas
inc
jmp
rcl
add
add
jbe
movsl
daa
pusha
test
and
cmp
mov
mov
adcb
sbb
pop
xor
mov
testl
shrl
shrb
xor
ja
pop
add
mov
mov
fdivs
das
mov
js
xor
and
scas
ljmp
jno
aad
dec
sub
jle
xor
push
adcl
mov
jne
inc
add
or
adc
outsl
stc
hlt
jl
addb
add
or
loopne
int3
or
loop
cwtl
adc
dec
call
loopne
push
lcall
push
lret
xchg
xchg
out
insb
and
jle
nop
adc
pusha
or
incl
sbb
ret
cmp
pushf
add
stos
movsl
lock
je
test
out
or
adcb
add
inc
fdivrl
insb
push
hlt
add
fs
push
push
loopne
loope
sbb
shrl
mov
push
push
pushf
loope
pop
sub
in
loopne
and
ret
cmpsl
and
xor
cmp
loopne
jb
sub
push
add
inc
js
cld
pop
hlt
mov
loop
add
bound
or
or
or
orb
test
fcomps
add
pusha
lods
nop
push
call
mov
adc
inc
mov
cmp
xor
add
call
or
push
or
xor
pop
inc
or
add
bound
mov
jbe
or
xchg
mov
nop
add
push
pusha
cli
add
cld
adc
out
std
inc
mov
shl
arpl
call
fs
sbb
sbb
sub
adc
shlb
daa
mov
out
into
ss
je
or
mov
mov
adc
pusha
lea
cmp
mov
testl
shrb
mov
aam
inc
or
mov
test
mulb
push
adc
dec
test
clc
repz
mov
and
lret
xor
inc
testl
movsl
and
pusha
cmp
mov
scas
xchg
push
mov
xchg
adc
pop
jecxz
pop
andl
jg
pushf
dec
loop
ds
xchg
aad
loopne
pop
loope
loopne
push
iret
cmpsb
inc
cmp
ljmp
sub
add
into
test
dec
mov
mov
je
inc
or
stc
push
loopne
pusha
dec
cmc
push
mov
cmpsb
fadd
sbbl
lahf
fwait
mov
jnp
xorl
push
inc
mov
add
jp
push
in
pop
mov
test
adc
pusha
sub
stc
and
or
scas
orb
push
jecxz
jne
pop
push
xchg
xor
sbb
int
adc
ss
and
xor
shr
jecxz
and
lret
je
adc
std
xor
adc
cmp
and
les
adcl
loope
sbb
jle
dec
pusha
adc
push
cli
push
leave
nop
ret
test
push
jmp
adc
insl
pusha
loopne
orb
pusha
flds
test
shlb
xchg
xor
bound
push
push
mov
cmp
out
or
or
in
xor
cmp
sbb
mov
xchg
inc
loopne
or
pusha
add
dec
adc
sahf
es
jg
dec
dec
out
add
add
jp
push
xlat
add
and
push
push
cmp
std
dec
jmp
sub
adc
sbb
adc
push
test
mov
sbb
in
sub
add
test
and
mov
daa
add
jne
sbb
lret
xor
or
pop
testb
xor
sub
fisttps
mov
imul
or
ljmp
mov
sub
mov
inc
add
imulb
mov
push
sub
stc
in
pop
sub
loopne
add
jg
test
mov
dec
das
dec
call
lea
adc
push
push
pusha
add
nop
adc
push
xor
nop
dec
mov
inc
in
jo
out
and
inc
clc
shufps
cli
dec
cld
adc
push
and
adc
push
jo
push
incb
xor
std
lock
test
xor
or
mov
out
add
push
jbe
cli
xchg
vshufpd
and
leave
jno
ret
inc
or
push
mov
mov
mov
lea
incl
fwait
mov
fmull
test
mov
sub
or
dec
inc
aam
and
mov
pop
sbb
in
pop
add
and
adc
aad
stos
sahf
xorb
or
mov
cmp
pmuludq
mull
add
leave
lods
mov
nop
jmp
andb
push
call
adc
mov
rol
lret
fsubrp
fldcw
cs
imul
push
clc
jmp
outsb
sub
push
pop
hlt
jo
nop
xor
push
dec
loop
rol
test
pushf
jge
hlt
xor
shlb
aaa
lret
push
mov
adc
ss
fdivrs
decl
inc
test
add
sub
mov
cmp
add
push
xor
pop
sub
xchg
inc
lock
stos
pop
jmp
add
and
xchg
mov
sub
mov
add
xlat
pop
mov
add
dec
pop
clc
subl
inc
pop
cmp
jmp
ss
dec
sbb
mov
movsl
popa
mov
xchg
mov
insl
je
xor
pop
bound
adc
xchg
mov
es
orl
or
push
xchg
add
sbbb
testb
jne
add
sub
xchg
addl
fisttpll
xorb
cld
fsubrs
sub
ret
mov
mov
pop
jge
jo
mov
and
add
and
sbb
push
add
sub
xor
xor
push
enter
mov
std
jo
jne
mov
call
loope
test
call
decb
adc
pop
lret
outsl
ds
add
pop
cltd
jb
testb
mov
dec
mov
dec
push
sbb
sub
xor
inc
fisubrl
nop
clc
or
mov
push
decl
ljmp
push
add
pop
mov
and
test
mov
push
outsl
push
es
test
jl
je
mov
push
sub
movzbl
add
lock
lods
add
push
add
or
lea
ja
sbb
lea
call
lods
cs
add
lahf
add
adc
mov
pop
lret
dec
mov
shlb
and
lock
dec
lods
popf
icebp
jl
lock
es
push
xchg
add
xorl
aas
pushf
push
pop
jo
icebp
dec
cwtl
xlat
pop
imul
in
add
xor
or
push
pop
aaa
call
test
andl
mov
jo
lret
mov
pushf
jmp
mov
cmp
fisttpll
and
clc
add
push
adc
or
out
rolb
and
xor
adc
pusha
adc
andl
jo
lock
inc
clc
cmp
dec
clc
popf
push
loopne
adc
dec
jbe
fdivs
mov
rorb
mov
mov
data16
or
lcall
enter
mov
movsl
rolb
mov
cmp
and
xchg
mov
cwtl
inc
sti
dec
sbb
call
ds
insl
loop
mov
repnz
sbb
or
ljmp
cld
int3
int
cmp
call
leave
pop
xor
jo
xor
inc
in
mov
add
add
xor
mov
jbe
movsb
and
je
adcb
mov
call
mov
inc
adc
fidivs
dec
mov
inc
aam
mov
pop
mov
add
je
and
mov
aam
cmp
push
or
cli
jbe
xor
and
push
jmp
inc
cli
dec
inc
mov
cld
fdiv
ja
lea
and
and
adc
adc
push
jle
fdivrp
inc
imul
add
push
pusha
mov
jge
loopne
hlt
add
mov
sbb
sbb
mov
sbb
mov
fstl
lock
xchg
push
shlb
sub
out
lcall
aam
ret
jb
cli
or
adc
insb
jl
inc
ss
jne
xor
ja
inc
and
mov
push
pop
imul
xor
sub
mov
lret
or
dec
lods
xchg
dec
adcb
adc
sub
movsb
push
mov
adc
call
scas
mov
mov
push
jb
out
adc
hlt
dec
lock
incb
add
hlt
xor
jbe
add
pop
lock
sub
idivb
or
xor
pop
and
push
push
push
fisttpl
aaa
push
shll
shr
sahf
mov
je
sbb
call
aaa
pop
test
push
lods
push
sbb
add
adc
adc
xor
sbb
push
test
push
lods
mov
icebp
divb
jno
inc
jns
adc
and
pop
jbe
cld
pop
dec
cmp
add
lods
addb
jo
cli
jmp
mov
imul
inc
mov
sti
outsl
cmp
repnz
jge
xorb
cli
ljmp
es
scas
add
ja
mov
adc
pop
and
dec
mov
stos
ds
add
push
hlt
adc
inc
jl
add
mov
pop
add
xchg
push
lock
testl
repz
pushl
or
clc
add
push
mov
je
dec
push
pop
cmc
das
sbb
ljmp
pop
mov
out
push
je
sub
jo
jb
int
mov
stos
push
pop
not
lret
sub
jae
xorb
lea
lods
bound
xchg
inc
js
cmp
add
dec
shlb
inc
mov
cmc
es
lock
add
inc
jb
aam
insl
mov
xchg
lea
cmpsb
ret
push
fmulp
shrb
inc
cli
jmp
jne
mov
call
mov
std
jmp
fcos
je
xchg
test
xchg
pusha
lret
insb
loop
out
sub
xchg
mov
scas
imul
mov
sarl
ss
sbb
push
push
je
or
jle
xchg
pushf
inc
jmp
sbb
xchg
xor
xchg
sbb
push
or
mov
mov
pop
notl
or
push
loop
or
loope
xchg
lods
xor
xchg
adcb
pop
lea
mov
jp
or
test
push
xchg
mov
add
and
pop
cmp
inc
ret
lea
or
repz
adc
fs
cli
push
xchg
sbb
dec
inc
and
mov
add
jnp
or
daa
mov
inc
and
enter
or
dec
nop
push
xor
into
ljmp
cmp
pop
add
push
dec
add
outsl
inc
xor
pushl
inc
scas
inc
add
mov
sbb
xchg
add
jbe
xorb
fildl
push
xor
movsb
or
int3
sub
add
add
mov
add
orb
out
nop
movb
adc
loope
cmp
adcb
nop
add
aam
mov
and
mov
pusha
rcrb
adc
stos
addl
je
and
lret
push
or
pusha
cmp
pop
inc
mov
jno
inc
subl
and
mulb
sti
add
int3
or
xor
cli
mov
cli
cld
iret
xor
mov
outsb
loop
data16
jb
inc
je
push
testb
jbe
movsl
push
aad
pop
add
outsb
sub
or
je
adc
dec
test
jb
pop
mov
push
lea
cmp
addb
sqrtps
repnz
dec
add
cmpl
mov
mov
imul
ret
out
fiaddl
push
frstor
hlt
sarb
adc
stos
push
xchg
xchg
xchg
into
int
mov
insb
cli
cmpl
dec
test
loop
sbb
adc
inc
clc
or
add
andl
lret
adcl
push
adc
pop
cmc
xor
scas
add
pop
repz
adc
jle
sbb
pop
mov
adcb
mov
testb
add
inc
movl
mov
inc
cmp
dec
mov
scas
or
rclb
movsb
push
push
sub
sbb
icebp
incl
adc
lret
pop
adc
adc
sarb
addb
xor
cmp
mov
sub
dec
in
mov
or
out
and
adc
sbb
cmp
add
pop
inc
and
data16
pushf
shrb
outsl
enter
js
decl
add
and
rolb
add
adc
pop
xchg
ret
adc
mov
cwtl
xchg
xchg
icebp
cmp
pop
movsb
roll
loopne
mov
arpl
cli
loopne
insb
inc
add
sbbb
fsubrl
nop
movsb
mov
incl
aas
movl
lock
ljmp
fdivr
push
sahf
and
add
xchg
push
loop
or
jo
mov
adc
ja
inc
pop
mov
out
add
push
data16
testb
lock
mov
fs
mov
mov
mov
pop
cmc
mov
or
add
push
rcr
loop
rcr
or
jne
sub
jl
inc
test
xorb
out
fbld
stos
ljmp
add
divl
or
xor
sub
fidivs
xor
aam
in
test
mov
mov
fcmovb
fdivrs
jg
lods
jg
roll
outsb
popa
mov
push
mov
adc
sbb
hlt
push
push
or
out
cwtl
jl
ds
jg
or
mov
push
push
adcb
pop
pop
movsb
ret
mov
addb
out
loopne
push
xchg
and
aaa
jge
fsubrl
mov
test
incb
xchg
lret
sub
push
mov
add
mov
sete
pop
shl
outsl
out
fmulp
add
aaa
jnp
andb
push
push
push
pop
test
test
jle
add
test
mov
cmc
fwait
test
xor
or
add
test
add
cmc
inc
xlat
cmp
or
bound
push
aas
and
pop
inc
scas
push
in
mov
mov
pop
cmp
cmp
outsl
add
cmpsb
pop
out
xchg
cmpb
pop
or
inc
push
outsl
mov
add
adc
jne
adc
xor
test
sarb
xor
mov
adc
push
call
mov
or
xor
hlt
or
jne
pop
add
sub
loope
jnp
mov
scas
add
add
sub
shll
xor
sbb
push
cld
outsl
and
insb
and
jb
add
loopne
test
jo
pop
add
xor
jbe
call
push
mov
andl
sarb
xchg
lock
mov
mov
pop
or
add
xor
push
cmp
lods
mov
push
lock
sti
push
loopne
mov
pop
push
je
ret
test
xchg
cwtl
loope
mov
test
adc
jp
sub
ljmp
loopne
jo
fdivr
jp
clc
fdivs
mov
push
ljmp
pop
loopne
popa
mov
das
sub
adc
or
lea
pop
rcll
sub
fsubr
sbb
push
or
jmp
adc
add
hlt
leave
or
fs
or
loopne
adc
inc
mov
adc
rorl
adc
or
les
add
mov
ds
sub
loope
daa
pusha
cmp
loope
xchg
mov
adc
ljmp
test
sbbl
add
inc
mov
or
adc
in
inc
or
xor
lcall
mov
cmpsb
sbb
scas
pushl
pusha
pop
xor
pop
pop
mov
repnz
out
cltd
pusha
adc
mov
stos
sub
jbe
mov
adc
mov
push
add
or
add
push
push
fs
mov
pushf
mov
inc
add
sbb
xchg
shll
add
push
bound
push
sbb
sbb
pop
adc
and
add
and
add
or
jo
clc
lods
cltd
hlt
insl
cs
sub
addb
outsb
rcrl
in
pop
cmpsb
lock
xor
push
aad
mov
imul
mov
xchg
movsb
imul
stos
xor
jl
js
scas
insl
pop
mov
test
cli
or
or
push
int
adc
std
or
add
or
out
shrb
add
dec
stos
sub
and
insb
jbe
or
imul
imul
xor
pop
jae
mov
int
in
push
lock
aam
or
insl
sti
fidivrl
add
push
movsb
mov
int3
push
das
jo
jo
imul
mov
mov
fidivrs
xchg
cli
sbb
movsb
pushf
xor
xchg
cwtl
nop
sbb
dec
subb
out
add
xchg
xor
jle
inc
dec
test
stc
sbb
imul
sbb
movsbl
aas
mov
ret
mov
add
cld
push
stos
lock
add
stos
stos
cmp
loopne
pop
xor
pop
pusha
add
loop
mov
mov
call
jge
fnsave
inc
jg
jbe
add
ror
cmc
add
fnstenv
mov
or
add
sbb
mov
adc
xchg
jo
aas
sbb
es
push
dec
aad
aaa
fsubrl
sub
daa
mov
push
sbb
pop
mov
mov
push
or
push
xor
push
push
ret
lock
or
jl
lods
jb
popa
jne
add
xchg
lock
mov
lods
adc
push
push
repz
ret
inc
in
scas
xor
pop
push
lock
push
mov
pop
cmpxchg
lds
pusha
rcl
push
mov
push
mov
pop
cmpsb
popa
mov
mov
jp
mov
mov
push
ja
or
test
pop
ljmp
push
lock
jns
lods
lock
jne
shll
bound
xor
add
test
xor
rcll
jge
add
jo
ljmp
add
fidivl
push
out
add
pop
sbb
arpl
ja
push
adcb
sti
andl
dec
es
imul
and
push
loop
imul
push
inc
cmpsl
or
leave
sbb
repz
pop
jo
out
sbb
nop
lock
xchg
mov
out
sbb
movsb
jo
imul
or
stos
mov
test
dec
jge
hlt
add
faddl
call
js
je
push
push
jo
scas
out
or
xor
mov
andl
pop
add
push
dec
lock
or
rclb
jno
add
stos
adc
movsb
jo
add
loope
push
sub
call
outsb
xor
out
pop
or
in
ljmp
push
add
dec
xor
mov
stc
test
sahf
imul
add
mov
imul
push
cmp
mov
or
mov
out
ret
loopne
xchg
sbb
mov
lcall
fwait
or
mov
dec
jl
mov
mov
xor
cmp
cmp
xor
pop
imul
sahf
or
lcall
cmp
jg
imul
stos
xchg
addb
and
add
ss
sbb
xchg
or
bound
rorb
stos
push
pop
fcmovnu
sub
push
add
stc
xor
cmc
adc
add
mov
in
cmp
xor
hlt
stos
aad
shll
sbb
add
stos
sbb
adc
mov
add
test
imul
popf
add
stos
cltd
adc
add
lea
test
jns
jne
add
ret
addb
add
lcall
sbb
lcall
lcall
jp
jb
lcall
pop
cmpsb
jns
cmpsb
pop
push
push
dec
dec
lcall
cmp
xor
cmpsb
jns
sub
and
cmpsb
jns
cmpsb
sbb
adc
or
xor
lcall
div
xor
rcr
out
push
ljmp
xor
rcl
ror
lret
fnsave
dec
ret
mov
mov
dec
cmp
mov
rcrl
dec
sarl
jbe
cmp
sarl
push
bound
cmp
rcrl
push
dec
dec
dec
sarl
xor
and
sarl
push
or
aas
dec
push
add
shlb
repnz
sbb
loop
fisubrl
cmpsl
imul
add
mov
js
das
les
mov
je
mov
mov
mov
cmp
stos
mov
mov
push
imul
mov
add
and
xor
push
sbb
mov
jns
cmpsl
sbb
xchg
cmp
aaa
xor
push
bound
xor
rcrl
push
or
sbb
ficompl
or
sbb
xor
shll
and
sbb
int
adc
or
xor
mov
push
decl
div
cmpsl
imul
and
inc
shlb
add
mov
xchg
js
pusha
xor
loopne
pusha
cmpsl
cmpsl
imul
sbb
lcall
xor
cmp
mov
adc
mov
add
mov
pop
add
cmpsb
add
dec
fcoml
fcoml
cmpsl
sbb
fcoml
cmpsl
push
sbb
cwtl
and
stos
movsl
mov
cmpsb
sbb
lret
jo
out
mov
or
mov
mov
mov
mov
or
mov
clc
xor
repz
dec
inc
inc
pusha
lds
pusha
dec
aas
je
iret
push
andb
sbb
push
stos
jno
mov
cmp
inc
sbb
clc
cmp
cmp
rcr
stos
in
push
jmp
fldln2
adc
aad
int
sbb
cmc
xchg
cmp
mov
stos
ret
test
addl
and
or
stos
push
and
fcomi
push
sbb
sub
add
int
and
add
add
xor
xor
aam
sbb
fwait
rclb
sub
aam
das
pop
movsl
pop
adc
sub
mov
pop
sbb
add
and
push
aas
dec
sub
xor
inc
shl
add
pop
mov
mov
add
pop
clc
adc
out
or
frstor
sub
sar
ret
dec
or
pop
loopne
sub
jb
adc
jo
ret
ret
inc
cmp
push
add
mov
std
xor
js
add
jne
fwait
push
xchg
cwtl
fs
test
sbb
adc
jae
mov
sahf
add
xchg
push
pusha
ret
call
out
xor
aam
and
call
fsts
or
dec
add
jne
call
cs
dec
mov
pop
mov
add
dec
or
xor
and
pop
das
add
insb
ror
push
pop
and
dec
js
std
and
xchg
add
cmp
fisubrl
std
adc
push
add
xchg
icebp
mov
cmp
call
cmpsb
and
outsb
push
adc
xor
mov
mov
outsl
xchg
add
bound
incl
pop
mov
fisttpll
mov
cmpsl
add
cmp
push
add
jp
jg
shll
jno
ljmp
imul
rcrl
in
or
lock
mov
add
popa
clc
adc
add
or
js
push
call
xor
jle
dec
or
dec
adc
lock
push
adc
add
adc
adc
sub
xor
xor
push
cmp
outsb
nop
xor
cltd
xor
cmp
call
addb
outsb
testb
add
push
xchg
repnz
call
stos
lock
or
sub
pop
mov
and
sbb
je
pop
or
fidivs
mov
mov
xor
jb
push
inc
jo
lock
and
sahf
sysret
and
mov
addb
insb
fstpt
fs
cmp
call
xor
mov
jno
std
xchg
mov
pusha
and
lock
cltd
movsb
insb
mov
fidivl
mov
cmp
and
jo
and
scas
push
mov
fadds
repz
pop
les
pop
call
sbb
outsb
push
loop
mov
in
sar
mov
xor
or
adc
pop
jo
jbe
add
adc
mov
cld
lock
add
sbb
push
sbb
inc
jecxz
push
cld
nop
call
jge
mov
or
or
jae
adcb
jg
jle
pop
cmp
xor
outsb
or
xor
cltd
xor
addl
ret
jbe
add
mov
mov
and
outsl
mov
push
lock
sti
cmp
es
loopne
xchg
andb
add
loope
xlat
icebp
and
ss
add
mov
stos
or
mov
cld
jne
jge
xchg
inc
orb
mov
xor
or
add
loop
adc
xor
sbbb
fcomip
repz
xchg
jno
xor
inc
jne
mov
movsl
call
test
out
cli
ja
jno
dec
adc
add
cli
jo
ret
mov
hlt
add
call
mov
loope
add
repnz
add
sbb
repz
add
push
xor
xor
xchg
jg
int
sti
jb
add
call
or
add
adc
xor
fisubl
mov
cmp
mov
push
mov
mov
pop
sti
push
pop
jno
imul
jne
push
mov
fs
push
mov
lahf
inc
xor
jne
mov
mov
orb
mov
dec
mov
adc
ds
add
repnz
es
push
aam
push
add
sbb
sbb
pop
cli
jno
add
mov
mov
xor
lock
push
shll
push
xor
sub
icebp
pop
imul
push
add
sbbb
sbb
mov
fdivl
inc
mov
and
movsb
outsl
int
fisttps
pop
cmpsb
fwait
lock
xor
inc
mov
pop
jl
outsb
push
add
xor
or
xchg
sub
stos
stos
sub
jb
shll
test
mov
and
pop
sbb
push
cs
mov
ljmp
je
sub
xor
hlt
add
cmp
cs
out
or
sub
jge
mov
push
icebp
sbb
pop
bound
rcr
mov
push
push
clc
jno
or
call
mov
push
pop
mov
jo
adc
or
clc
jbe
pusha
mov
mov
push
setbe
ret
or
pop
inc
add
mov
push
sbb
xchg
clc
mov
or
jns
jp
ret
cmp
jmp
clc
adc
push
jne
xlat
cmp
cs
js
jle
mov
jbe
cmp
sahf
cmp
jl
lock
iret
add
mov
adc
and
add
xor
inc
addl
call
add
add
ss
adc
int
cld
or
sbbb
outsl
pop
or
sub
ficoml
ret
fidivrs
mov
mull
test
cmp
sbb
out
leave
fidivrl
jae
or
iret
or
in
loopne
incl
inc
add
testl
mov
and
xor
insb
aas
decb
call
cld
cmp
shrb
add
addl
or
xor
add
or
aam
fisttpll
sbb
test
or
add
mov
out
add
inc
nop
xor
inc
and
and
ret
push
add
xorb
push
mov
je
fimuls
inc
xor
shlb
xor
push
mov
xorl
sbbb
adc
mov
mov
cmp
mov
in
cmpsl
je
adc
add
pcmpeqb
push
pop
js
jb
maskmovq
sbb
xchg
mov
inc
sar
cmp
notb
mov
ret
nop
je
ret
movsb
outsl
mov
outsl
push
cmp
movsl
je
ret
cmpsb
adc
ret
xchg
cs
stos
adc
ret
stos
je
negb
es
lods
inc
lods
je
ret
scas
adc
ret
mov
repz
adc
ret
insl
je
ret
outsb
or
outsl
hlt
ret
movups
pop
add
dec
incb
add
cmp
or
cmp
fstl
and
xor
push
mov
mov
pop
mov
std
outsl
dec
jge
lret
push
ret
inc
test
scas
xchg
mov
lret
inc
cli
xor
scas
rolb
mov
pop
sar
outsl
adc
mov
add
inc
mov
data16
inc
xor
icebp
or
rol
jle
aam
xchg
mov
sbbl
xchg
or
mov
ret
sarb
pushl
cmc
shll
bound
adc
rclb
dec
add
test
jle
loope
addb
add
es
dec
mov
sbb
cmpb
push
jne
push
add
imul
add
test
cmp
jg
orb
inc
ret
shrb
xorb
mov
shll
test
add
push
test
and
ss
or
and
cmp
push
fucomip
xor
xadd
and
push
ljmp
js
fnstsw
or
iret
shlb
mov
mov
pop
movsb
sbb
sbb
loop
jg
es
sbbb
fisttpl
loop
add
ljmp
stc
je
loopne
pop
inc
jg
inc
call
push
sbb
or
push
add
pop
mov
orb
jo
lcall
and
cmp
sub
mov
pop
cmp
inc
sbb
adcb
sbb
mov
xor
bound
and
push
ret
test
ljmp
mov
xchg
or
cmp
cmc
hlt
mov
bound
add
loop
pushf
mov
pusha
dec
ret
int
out
sub
mov
lock
fcmovbe
nop
or
idivl
sub
popa
lea
mov
jne
popa
add
mov
adc
pop
push
push
loope
adc
out
inc
out
ljmp
loopne
sbb
lcall
jle
dec
pusha
punpcklbw
clc
jle
mov
add
fs
imul
pop
popa
add
add
das
and
gs
inc
test
push
insb
add
adc
dec
movsb
call
mov
push
mov
add
fildl
add
and
adc
add
pushw
push
adc
sbb
mov
lcall
sub
adc
push
jge
fwait
aaa
xlat
pusha
add
shll
out
inc
cli
mov
mov
and
jbe
push
inc
dec
pusha
or
enter
fwait
dec
jo
js
cs
inc
mov
mov
push
outsl
jp
sahf
loope
and
js
adc
fwait
push
call
insb
lahf
outsb
stos
lcall
cld
push
or
or
push
nop
gs
add
adc
xor
std
mov
je
repz
adc
test
adc
jp
sbb
sbb
call
add
mov
mov
add
jae
xchg
xor
sbb
cmp
les
fldln2
adc
adc
popa
adc
loopne
call
jmp
add
and
pop
push
jo
jmp
xchg
fs
push
or
push
popf
jnp
xchg
imul
mov
push
shrl
pop
xor
icebp
lods
daa
and
add
cmc
arpl
adc
or
xor
dec
iret
fstpt
imul
fsubs
pusha
rcrl
push
pop
add
repz
outsb
testb
xchg
insl
stos
add
mov
out
mov
and
mov
mov
dec
jnp
sbb
jl
adc
pushl
out
rol
shll
mov
pop
mov
add
out
mov
stc
lods
and
int3
roll
stos
jmp
adc
es
pop
jg
mov
dec
rcrl
jnp
clc
adcb
push
push
scas
sbbl
popf
mov
rorl
pop
mov
aaa
push
jl
jnp
inc
pop
push
pop
stos
xchg
mov
cld
mov
out
repz
out
cs
xor
dec
pop
out
repnz
imul
mov
fcomi
add
mov
stos
and
lcall
or
and
jp
mov
jno
jg
addb
mull
out
mov
dec
push
mov
and
xor
cmp
pushf
addr16
cmpsl
xchg
leave
sbb
cld
imul
mov
pop
dec
cmp
jne
jnp
fwait
hlt
rcrb
shll
lock
pop
jmp
jno
ss
aad
xor
out
imul
call
psrlw
dec
or
push
and
mov
push
leave
dec
aam
lock
fstpl
dec
jo
mov
push
test
notl
enter
inc
out
cmpsl
enter
jo
shrb
imul
ds
add
incb
mov
imul
push
cwtl
push
rorl
add
and
out
js
or
jb
int3
xchg
je
push
sub
add
movsl
mov
add
xchg
jae
add
mov
data16
lcall
push
mov
imul
xor
pop
fsubs
xchg
fs
les
das
pop
pop
push
push
xchg
push
cmpsl
jae
add
sbb
push
sahf
mov
and
jb
fcomp
fadds
mov
arpl
inc
mov
and
mov
push
outsl
inc
outsl
mov
call
je
push
sbb
lcall
fwait
mov
jo,pt
add
push
mov
in
add
add
lcall
outsl
or
mov
dec
xchg
add
pop
ljmp
adc
xor
inc
gs
je
pop
mov
add
jo
mov
popa
sbb
out
add
sub
xchg
add
mov
and
out
test
nop
push
stos
fidivl
inc
jo
dec
pop
insb
mov
fcmovnu
jg
les
dec
outsl
push
jb
jb
inc
and
pop
fisttpl
jle
dec
sahf
outsb
fs
mov
inc
pushf
popa
sbb
add
mov
mov
lods
repnz
cmp
lcall
notb
outsb
mov
dec
or
xor
das
test
add
jb
adc
fistpll
imul
inc
mov
imul
dec
inc
adc
jo
loopne
mov
mov
mov
adc
sbb
add
pop
out
add
mov
test
jle
subb
xor
loopne
ret
jp
adc
or
lds
jb,pn
arpl
fwait
dec
mov
lock
adc
add
jbe
sub
mov
movnti
ret
arpl
add
add
pushf
mov
lds
stos
inc
cmp
inc
push
xor
xchg
roll
popa
das
add
cltd
gs
sub
mov
or
sbb
incl
push
mov
js
and
out
cmpsb
test
pop
sbb
push
inc
nop
jne
mov
mov
inc
pusha
or
push
loop
mov
les
icebp
xchg
in
add
jmp
add
insb
or
xchg
cmp
and
jg
dec
jo
mov
lock
in
add
sbb
fsubrs
je
insb
insb
inc
push
xchg
add
testb
jae
jae
int
mov
je
mov
add
xor
push
dec
lcall
ficoml
imulb
xchg
jo
subb
dec
add
adcl
enter
push
dec
xorb
or
xchg
std
negb
imul
jnp
nop
fsts
ljmp
adcb
push
mov
add
mov
ret
pushf
inc
xor
push
and
pusha
call
inc
pop
mov
adc
jno
cld
dec
mov
arpl
lods
test
aaa
int3
js
sbbb
outsl
insl
adcb
lock
sbb
xchg
xor
dec
cltd
cmp
add
xchg
push
imul
cmp
mov
xchg
inc
xchg
lcall
insl
push
fistpl
cmp
dec
inc
jo
add
and
jbe
insb
stos
mov
push
mov
lods
inc
adc
jne
xchg
xchg
pushf
insl
pop
mov
dec
movb
cmp
ret
mov
push
jb
js
add
sbb
mov
rcrb
pop
or
pusha
mov
sub
and
sub
incl
icebp
lds
xchg
or
push
xchg
out
arpl
shlb
ret
push
lock
sbb
adc
lds
dec
sub
mov
mov
lds
push
dec
sub
jbe
push
jge
adc
dec
and
add
xchg
test
dec
das
mov
and
mov
or
xchg
xchg
rorb
or
test
inc
mov
scas
mov
jae
push
push
rcrb
pushl
imul
cmp
imul
lea
shrb
jbe
mov
adc
call
sub
and
stos
cmpsb
push
mov
dec
ljmp
shrl
outsl
rol
add
mov
mov
mov
cmp
imul
push
popa
jb
adcb
dec
lret
cmp
shr
adc
pop
bound
outsl
sbbb
stos
test
push
mov
sahf
sarb
mov
mov
xchg
outsl
outsb
into
out
imul
push
outsl
mov
sarb
repnz
jo
mov
push
xchg
fs
xchg
jb
inc
loopne
loopne
loopne
mov
outsl
popa
dec
push
imul
addr16
sub
cmp
lcall
test
or
xor
loopne
fwait
inc
bound
jg
and
loope
insb
add
add
sbb
testl
popa
xchg
jne
xchg
push
insb
mov
cld
fs
mov
stos
gs
mov
and
lock
dec
bnd
sahf
loopne
clc
dec
clc
fbld
inc
mov
dec
lds
popa
add
aaa
add
cmpsl
loope
outsb
jb
jb
test
decl
fwait
adc
imul
sub
aaa
jmp
inc
adcl
mov
popa
imul
pop
popa
loope
out
push
out
es
push
jne
mov
orb
push
xor
inc
jb
fwait
mov
add
dec
dec
in
outsl
and
xchg
jbe
push
negb
popa
or
mov
scas
mov
loope
mov
mov
fs
js
outsl
imul
and
add
sub
data16
aas
loopne
int3
add
pushf
loopne
mov
push
add
or
loopne
jo
dec
dec
mov
bound
pusha
and
sub
pop
and
add
sub
mov
cmp
push
loopne
je
fbstp
loopne
add
insb
or
mov
mov
loope
push
popa
push
push
jae
andl
scas
adc
sahf
adc
mov
xchg
cmpsb
cwtl
loopne
add
jecxz
jg
loope
pop
xchg
loopne
mov
popa
ret
insl
add
ds
sahf
or
jb
outsb
sub
int3
mov
nop
xchg
pusha
ds
popa
clc
pushl
loopne
inc
xchg
cwtl
cmp
arpl
int3
add
out
dec
xchg
data16
mov
dec
sub
je
jg
or
add
rcrl
loopne
sahf
lock
loop
jb
stos
sub
xor
xchg
js
addb
pop
dec
xchg
jmp
cmp
mov
or
mov
daa
sub
dec
jae
lods
loopne
mov
or
popa
adc
cld
jmp
test
popa
add
pusha
leave
pusha
push
push
adc
sbb
add
add
dec
clc
xchg
in
fimull
add
cmp
popa
jae
inc
dec
adc
gs
lods
mov
jae
loopne
outsl
ja
jnp
mov
test
push
and
inc
add
push
dec
in
pusha
or
cld
outsb
fwait
outsl
add
push
push
gs
cmp
loopne
sti
mov
mov
pop
jl
xchg
out
adc
bound
dec
add
in
testl
divb
and
test
xchg
push
add
fs
and
mov
incb
je
mov
xor
mov
or
data16
pushf
ja
push
popa
cmp
pop
push
mov
outsb
or
fsts
push
cltd
stos
imul
mov
repnz
insb
add
bound
inc
shlb
mov
popf
and
mov
push
add
add
sahf
outsb
jae
lock
add
lcall
cld
lock
mov
mov
sbb
adc
mov
jp
shll
decl
mov
or
cmp
mov
aaa
sbb
xor
add
mov
push
or
test
cmp
inc
add
or
mov
fs
lock
jb
push
push
imul
cmp
push
add
ja
xor
add
mov
hlt
sub
jno
or
push
xor
cmp
mov
or
cli
push
sahf
fcomip
push
inc
sub
jns
add
gs
data16
xchg
nop
ja
sbb
mov
lock
inc
insb
sahf
test
cmovbe
cmp
mov
andb
push
push
popa
cmc
add
jno
fs
test
cmp
inc
cld
outsb
mov
sbb
mov
jno
xor
ss
mov
push
mov
out
jp
lock
add
dec
xchg
jne
sbb
xor
or
cltd
dec
inc
rorb
fwait
jno
xor
and
inc
fistps
fdivp
insb
addr16
push
mov
push
outsb
push
jo
add
add
mov
inc
ja
xchg
imul
lcall
mov
xchg
insb
xor
mov
fwait
jo
sbb
add
jno
xor
lods
xor
and
icebp
enter
mov
add
adc
jae
scas
cs
jae
dec
outsb
cltd
mov
sub
mov
arpl
jo
jo
test
movl
stos
mov
dec
mov
xor
sbb
addl
insb
outsb
mov
into
leave
hlt
es
xor
subb
push
mov
test
xor
aad
add
mulb
mov
lock
inc
inc
icebp
mov
sbb
adc
add
add
data16
jns
dec
inc
in
inc
add
dec
ss
pushf
jbe
mov
int
push
dec
cmp
add
nop
repz
mov
mov
add
adc
arpl
sbb
inc
push
sbb
mov
jae
push
sahf
add
pop
cmc
xchg
je
jo
dec
inc
bound
xor
dec
dec
pushf
add
stos
push
mov
and
cs
sarb
fcmovu
ss
rdpmc
or
sbb
inc
add
pusha
loope
fwait
or
in
xor
mov
test
outsl
mov
push
cli
add
or
sahf
mov
add
sbb
aaa
gs
mov
mov
lock
mov
inc
jp
jp
mov
jo
arpl
les
add
push
sub
je
roll
jae
pop
insl
mov
inc
pop
out
add
idiv
add
mov
mov
jp
jb
pusha
jae
pop
in
push
or
fs
insb
incl
shl
sbb
lret
lcall
sbb
and
xor
lea
test
xor
xor
or
mov
je
nop
repnz
or
imul
clc
fistpll
mov
xor
mov
ljmp
gs
cmpsb
outsb
fbld
xor
arpl
jo
mov
dec
xor
mov
pushf
jb
mov
call
inc
sahf
arpl
dec
rolb
test
fdivs
jns
repz
scas
jbe
incl
repnz
arpl
stos
jns
es
arpl
jo
mov
aas
add
adc
jg
mov
cmpsb
mov
mov
cmp
mov
shrb
fcmovb
mov
mov
imul
or
mov
push
xor
clc
stos
lods
loope
push
lcall
mov
mov
cltd
cs
xor
dec
mov
sbb
ljmp
lcall
adc
pop
test
cwtl
je
push
xchg
lock
or
cmp
js
push
mov
pop
add
jb
push
imul
gs
inc
insb
dec
in
push
icebp
stos
outsb
dec
outsb
jb
sub
xor
push
sub
popa
xor
cmp
jo
out
pop
fucomp
adc
lock
xor
test
mov
mov
add
outsb
jns
mov
xorb
repz
lods
push
adcb
cwtl
std
popf
and
and
xor
mov
subb
lcall
test
cld
lods
jne
inc
mov
dec
outsl
xor
into
jno
rep
ds
jno
and
jb
add
fstpt
shll
fidivl
xor
sbb
add
inc
jae
icebp
insl
nopl
outsl
mov
jo
xchg
jbe
aad
mov
add
ret
mov
mov
mov
mov
jl
cmpsb
and
inc
inc
inc
lods
test
andl
sbb
fmuls
mov
dec
push
dec
fstpl
ret
gs
arpl
add
adc
xchg
pop
out
test
xchg
outsl
or
scas
adc
sub
jo
lcall
or
movsb
add
inc
in
sbb
jo
fisubs
bound
fwait
loopne
imul
and
pusha
add
push
sbb
mov
jo
jne
lret
sub
xorb
fwait
push
std
jnp
sub
xchg
and
sbb
fiadds
stos
pop
add
aam
test
mov
testb
jbe
jae
jb
data16
mov
daa
inc
popa
xchg
fisubrs
outsb
adc
and
orb
add
inc
outsl
add
in
data16
call
xchg
subb
orb
fs
add
xchg
jae
adc
int
xor
call
lcall
clc
xchg
add
xchg
cs
pop
jo
adc
mov
push
dec
cmpb
add
pop
inc
push
jb
xor
lock
xor
test
push
inc
pop
mov
shrb
ret
add
insb
fwait
inc
aad
xchg
orb
mov
inc
insl
inc
add
push
nop
inc
jb
addr16
daa
rclb
jl
fwait
add
xchg
jne
shlb
sbb
mov
inc
fisttpl
sub
loope
or
movsb
push
push
loop
lcall
xchg
and
int
sbb
pushf
dec
push
ja
mov
dec
mov
loop
dec
addr16
shrl
adc
push
dec
inc
add
mov
push
rcrb
cmpb
mul
mov
insb
rolb
imul
push
and
mov
mov
add
add
movsl
sarb
mov
sub
shl
call
inc
fcmovb
mov
push
mov
mov
clc
mov
push
add
mov
xchg
lds
xchg
add
mov
sbbl
jae
inc
add
adc
sub
jne
or
cmp
pop
dec
outsl
add
adc
cwtl
jne
mov
inc
dec
sub
adc
cwtl
lods
rorl
mov
and
ja
nop
jb
sub
shrl
into
adc
sbb
xor
xchg
icebp
aaa
fadds
and
inc
xchg
push
mov
mov
lret
mov
js
sbb
ss
add
xchg
in
mov
xchg
inc
insb
or
inc
mov
cmp
add
sbb
mov
dec
pop
cltd
outsl
mov
dec
mov
fs
push
xor
int3
test
inc
mov
aaa
subb
mov
xchg
pusha
and
cwtl
cmp
inc
jbe
xor
lcall
daa
lods
lret
lods
daa
popa
cmp
xchg
jne
dec
lcall
ljmp
ss
dec
xchg
fmuls
cmpsb
sbb
or
addl
push
int
adc
mov
andl
test
adc
and
les
aaa
in
or
inc
mov
fimuls
push
jns
mov
sarb
lods
popa
xor
dec
in
add
add
or
pop
loope
data16
inc
pop
add
mov
cmp
pop
shl
add
mov
insl
call
imul
outsb
loop
les
and
insb
loop
loope
add
pusha
fisubs
loop
leave
and
push
adc
es
mov
lcall
xor
sub
sub
xchg
jo
and
push
or
mov
inc
push
cmpsb
push
sub
dec
cli
push
in
add
jo
inc
dec
push
push
mov
jne
sub
and
shlb
dec
pop
in
pop
lea
pusha
jo
out
add
sbb
xchg
mov
dec
push
add
push
mov
dec
mov
bound
adc
mov
pop
adc
scas
testb
clc
push
sahf
inc
jbe
xchg
lods
bound
pop
push
or
pop
mov
mov
add
lahf
pushw
lods
loopne
popa
movsb
xchg
cli
mov
add
dec
jp
xchg
lret
je
pusha
adc
bound
xchg
fs
loop
nop
xor
adc
insb
mov
incl
bound
dec
notl
jge
sbb
inc
fs
lcall
lock
lods
bound
cld
in
lods
loopne
push
andb
adc
jae
sbb
and
inc
fisttpll
rolb
out
fcomps
decl
mov
sub
and
outsb
cld
adc
fists
stos
insb
sub
popa
dec
fists
in
loopne
push
and
add
xor
outsl
outsl
xchg
imul
sahf
out
and
jbe
adcb
cli
ja
mov
dec
inc
stos
loop
dec
dec
mov
fidivl
jmp
mov
xchg
cwtl
fsubl
mov
inc
lods
push
mov
pusha
pushl
popa
add
popa
push
inc
push
or
dec
gs
add
xchg
pusha
ja
icebp
es
mov
jo
out
add
xchg
push
mov
jae
or
fdivl
mov
je
popa
cld
mov
jo
lcall
add
mov
push
pusha
hlt
add
idivb
add
ja
outsl
or
add
pop
ja
xchg
jae
arpl
icebp
jbe
out
mov
in
jne
pusha
jl
cwtl
jecxz
lock
xchg
ja
add
rclb
adc
inc
or
addb
cmp
rolb
arpl
sub
mov
or
xor
mov
push
std
cs
call
pop
gs
jo
add
repz
imul
and
add
add
rcll
inc
inc
mov
xchg
mov
xchg
sbb
xor
stos
mov
or
lret
push
mov
add
adc
push
push
push
xor
jbe
fisttps
lret
inc
mov
enter
mov
mov
scas
ret
jp
hlt
inc
adc
inc
imul
pop
mov
xor
add
adc
into
sbb
cmp
lock
cmp
sub
mov
pop
aaa
lcall
mov
out
addl
sarb
scas
sahf
xor
mov
adc
jmp
jg
cmp
cmpsb
xor
dec
pop
xchg
shll
loopne
push
or
lcall
or
imul
cmp
inc
ljmp
fiadds
popf
sti
jmp
subl
repnz
jnp
es
jg
inc
scas
pop
stos
pop
scas
adc
cmp
cli
inc
adc
aam
add
jmp
dec
test
iret
inc
cwtl
int3
xchg
icebp
cmpsb
scas
mov
repnz
sbb
cs
enter
mov
dec
dec
loopne
in
cld
inc
jmp
insb
cmp
inc
mov
push
mov
adc
or
lds
sub
bound
lock
and
push
add
aaa
popa
cs
mov
je
and
add
lock
clc
repz
fldl
xchg
jle
add
les
out
adc
int3
int
adc
mov
sti
aas
mov
or
mov
fs
mov
cld
call
cmc
aas
cmp
sub
out
loop
pop
dec
shl
aas
das
add
and
ret
fcomip
pop
and
aas
mov
ljmp
int3
scas
lcall
jle
inc
test
aad
xor
out
cmp
add
aas
rolb
ja
fwait
decb
mov
mov
aas
insl
les
mov
lcall
addr16
push
dec
add
xchg
aas
loop
add
jp
incl
roll
pop
aas
sub
das
stc
add
inc
std
inc
mov
jmp
jp
sub
subb
push
jl
das
fstl
pushf
add
int3
fcoml
incl
xchg
cmpl
inc
into
shrb
jge
xchg
mov
jg
xlat
cmp
mov
in
call
xchg
mov
mov
jne
fldt
cmp
jno
rcr
jmp
ljmp
xor
mov
pop
cmp
xchg
andb
adc
out
cli
xchg
test
adc
dec
in
leave
xor
push
push
add
imul
pop
add
add
ret
call
mov
xchg
cmp
mov
and
mov
gs
stc
aaa
adc
add
enter
or
jg
icebp
imulb
jns
outsb
andb
cmp
jp
or
popa
pusha
ljmp
fstpt
dec
or
push
adc
jge
add
test
repz
ret
add
xchg
daa
sti
or
push
mov
add
push
sub
lret
popa
movsl
outsl
insl
sti
adc
std
fwait
sti
add
or
jno
sub
pushf
sti
add
xchg
push
push
sbb
repnz
jge
jl
les
scas
mov
push
scas
test
fstps
sub
dec
mov
scas
cmp
xorl
testl
icebp
add
fidivs
dec
loope
std
decl
scas
cmp
or
pop
or
xor
lds
jle
pop
inc
or
mov
ljmp
paddd
or
addr16
mov
ret
movl
jecxz
cmpsl
fisubrs
sbb
aas
or
addl
push
mov
add
addb
add
push
push
filds
out
cmpsl
sub
pop
push
adc
pop
lcall
aaa
inc
aad
push
frndint
mov
inc
and
cmpl
add
repz
outsl
jae
ja
jg
outsl
lcall
xchg
test
inc
pop
mov
aaa
add
aaa
jmp
sbb
cld
in
outsl
mov
cmp
mov
cmp
int
insb
cmp
mov
imul
cmp
cmp
mov
cmp
int3
cmp
call
ds
fstpt
add
ret
ds
ds
push
mov
jl
adc
test
jae
cld
int
adc
push
mov
inc
les
xor
and
in
ja
int
adc
add
add
xrelease
jecxz
and
rcll
xchg
push
hlt
xor
ret
aas
fidivl
aas
fs
xchg
fstps
test
jae
int
cmp
pop
arpl
fcoml
mov
inc
aas
les
xor
mov
adc
or
aas
add
test
shlb
pop
test
or
sbb
and
sbb
lret
mov
mov
xor
insb
cld
xor
xor
imul
xor
lods
mov
push
pop
jb
data16
adc
call
fdivl
sbb
jb
jle
mov
sub
xor
mov
sbb
sub
cld
int
adc
xor
mov
pop
xor
jl
jnp
adc
int
mov
pushf
xor
int
push
fisttpll
int3
xor
xor
xor
sub
ret
xor
xor
dec
stc
fwait
mov
lret
xor
mov
pop
xor
fwait
mov
jnp
mov
pushf
xor
lods
dec
xor
add
mov
fdivl
sbb
in
xor
cld
xor
xor
or
xor
sbb
sub
lret
xor
mov
xor
pop
xor
scas
mov
add
xchg
andb
xor
int
adc
xor
xor
xor
or
cld
xor
pusha
xor
inc
dec
inc
adc
pop
adc
add
imul
mov
mov
adc
xor
xor
xor
dec
xor
inc
adc
jns
sti
insl
add
sbb
aaa
jg
xor
dec
stos
xor
insb
mov
or
jno
inc
test
push
repz
xchg
adc
xor
in
or
adc
mov
or
mov
sbb
sub
push
push
les
insb
pop
inc
adc
sbb
out
dec
cmp
adc
aas
pop
loopne
mov
push
les
adc
ja
in
pop
nop
loopne
pusha
add
test
dec
das
inc
adc
inc
pop
push
cmp
lea
insb
cmp
jge
inc
pop
popl
xchg
add
mov
adc
cmp
pop
cmp
and
ds
mov
adc
stc
aas
adc
lods
mov
push
fnsave
popa
inc
adc
mov
inc
mov
push
push
jge
inc
lahf
or
lds
xchg
adc
or
incl
add
xor
xchg
sahf
xor
ljmp
je
cwtl
xor
inc
xor
xor
and
and
mov
xchg
xor
pop
add
es
dec
xor
leave
and
xor
icebp
adc
and
cltd
add
or
and
ss
jmp
outsl
jg
sub
fidivl
and
in
push
ss
ss
fdivs
cmpsb
aaa
push
add
inc
adc
add
adc
push
cmp
add
cmp
mov
push
out
bound
xchg
cmp
mov
add
mov
cmp
push
cmp
mov
out
and
sarb
cmp
cmp
cmp
cmp
add
add
fwait
mov
cmp
jge
cmp
lods
add
cmc
or
sti
cmp
sub
mov
jns
pusha
ja
adc
inc
mov
mov
pop
je
add
xor
xor
xor
inc
or
loopne
mov
push
shll
fcomip
ja
into
cmp
cmp
cmp
cmp
cmp
adc
push
add
add
fists
leave
adc
cmp
je
add
jg
cmp
aam
cmp
push
pop
push
inc
sarl
das
iret
add
add
mov
ds
ds
ds
xor
xchg
scas
xchg
ds
loopne
xor
aad
adc
les
mov
aad
xlat
cmpsl
and
out
xor
popf
ret
add
lods
xor
xor
xor
xor
xor
xor
lahf
outsb
imul
lock
or
mov
or
cmp
sub
push
aam
outsl
inc
cmp
cmp
cmp
pop
cmp
lret
mov
nop
pusha
or
daa
inc
in
lods
xor
dec
xor
sarb
sub
scas
clc
mov
fcoms
test
lock
test
fcomp
enter
cmp
cmp
mov
cmp
adc
stos
js
cmp
sub
aas
fistpll
xor
rcr
jg
je
mov
pop
aas
pushf
and
mov
movsl
mov
pop
xor
xor
xchg
fidivl
rdtsc
cli
data16
xor
mov
xor
scas
divb
fisttpl
stos
xor
ss
or
pop
hlt
jg
or
xor
or
sub
and
mov
and
sbbb
cmp
lret
pusha
dec
or
fnstsw
push
cmp
and
out
or
fdivrl
mov
pop
je
nop
cmp
cmp
cmp
ds
mov
pop
mov
outsb
clc
aaa
lcall
xor
mov
clc
mov
xor
push
adc
rcrb
popf
xor
mov
xor
xor
andb
dec
inc
rcll
adc
std
dec
dec
mov
inc
insl
ss
push
divl
push
aaa
jmp
fwait
mov
aaa
aaa
inc
scas
aaa
pop
aaa
xchg
aaa
jne
aaa
nop
aaa
pop
aaa
push
cld
in
ljmp
mov
inc
nop
add
cmp
adc
or
out
jg
cmp
cmp
cmp
cmp
cmp
adc
jae
lret
cmp
cmp
inc
scas
cmc
cmp
ds
ds
adc
sub
and
adc
mov
inc
mov
inc
xor
nop
push
cwtl
xor
jl
push
enter
pop
cld
xor
push
xor
ret
xor
xor
cmp
test
adcl
mov
inc
mov
sub
testl
aaa
adcl
pushl
stos
mov
cmp
cmp
push
outsl
aas
cmp
les
popf
cmp
lds
mov
fwait
adc
into
adc
pop
cmp
cmp
decl
lea
lea
hlt
adc
dec
aas
jb
sbb
loop
jg
es
inc
xor
xchg
xor
nop
sbb
xor
scas
divb
bound
pop
sbb
sbb
pushf
ss
jg
and
jo
clc
sub
cmp
cmp
sub
sub
aas
and
add
subb
enter
push
les
cmp
cmp
add
xor
adc
xorl
jo
ss
mov
mov
cmp
cmp
sarl
imul
cwtl
jnp
inc
cmp
cmp
fistpll
mov
daa
mov
mov
sbb
jg
pop
shl
jo
add
push
mov
or
xchg
lock
mov
incl
xor
nop
pop
xchg
xor
pusha
and
adc
cmp
lcall
shlb
xor
xlat
xor
arpl
out
dec
out
adc
decl
lock
mov
ss
ss
ss
or
ss
rorb
fsubrl
adc
add
ss
ss
push
inc
les
aas
imul
mov
dec
lods
ss
movsb
ss
ss
adc
xor
xchg
outsl
mov
ja
adc
mov
mov
pop
aaa
hlt
aaa
getsec
add
mov
pushl
aaa
daa
aaa
aam
das
int3
aaa
add
aaa
aas
aaa
add
or
lods
aaa
or
movsb
push
sbb
aaa
outsl
aaa
mov
ja
sbb
sarb
divb
xchg
je
aaa
insb
aaa
xchg
aaa
ficomps
mov
scas
mov
aaa
insl
cmp
or
sbb
notb
or
jo
sti
xor
aad
inc
adc
ja
xor
dec
add
push
in
xor
cmpsl
pop
pop
pushl
add
enter
add
lods
push
in
adc
xor
xor
xor
cmpsb
scas
jb
and
dec
mov
adc
sbb
dec
aaa
pop
nop
or
imul
shr
es
cmp
xor
cmp
xchg
fidivrl
jne
lods
cmp
std
cmp
cmp
cmp
push
insl
cmp
cmp
cmp
cmp
mov
sub
aas
mov
cmp
xor
in
sub
rclb
loopne
xchg
jl
inc
shll
pusha
sub
and
inc
jl
xor
adc
das
push
jle
jo
xor
in
insl
xor
xor
xor
xor
rorb
inc
mov
sbb
jle
or
xor
add
out
mov
and
ss
adc
aaa
mov
jg
dec
xorl
loop
cmp
push
cmp
cmp
add
cmp
cmp
lock
xor
adc
cmp
cmp
or
push
cmp
cmp
std
pop
sbb
cmp
push
cmp
cmp
imul
mov
es
emms
call
clc
cmp
xor
sub
cmp
add
jg
ds
adc
add
les
pushl
add
std
xor
xor
jp
xor
jp
jg
sbb
inc
sub
mov
push
inc
xor
mov
dec
add
xchg
clc
add
and
rorl
add
jp
xor
call
xor
xor
adc
pop
rclb
jne
and
loope
jle
test
xchg
cmp
out
cli
inc
cmp
cmp
cmp
jp
push
push
cmp
cmp
cmp
and
cmp
cmp
cmp
into
ret
notb
inc
mov
xor
cmp
cmp
and
cmp
cmp
cmp
inc
mov
xlat
fstpt
inc
cmp
cmp
dec
cmp
loope
ja
mov
stos
xchg
aas
inc
aas
loop
mov
dec
pop
mov
jo
jg
movsb
xor
jbe
lcall
lock
xor
mov
test
or
add
imul
imulb
add
push
xor
repz
adc
cli
jge
outsl
xor
jmp
xor
loop
jmp
out
adc
loop
cmp
and
xor
xor
shl
pushl
arpl
xor
lock
inc
jg
incl
adc
into
adc
aaa
or
in
cmp
dec
fdiv
ja
cmp
cmp
cmp
cmp
and
loope
sbb
ljmp
xor
shll
sbb
fcmovnu
hlt
mov
mov
push
adc
sub
lock
jo
pusha
test
cmc
cmp
cmp
mov
push
cmp
sti
cmp
decl
cmp
xor
cmpsl
nop
cwtl
or
dec
mov
test
cmp
or
add
lock
outsb
aas
and
lock
mov
or
decl
mov
xor
dec
ljmp
xor
xor
xor
xor
lcall
dec
inc
in
fisubl
cmp
mov
mov
cs
cmp
cmp
cmp
icebp
idiv
subb
cmp
push
adc
jecxz
stos
decl
xor
lret
adc
mov
xor
fidivs
sbb
push
cld
aaa
cld
vcvtss2si
mov
pop
xor
icebp
mov
sarb
aaa
cmp
xor
fnsave
movsl
xchg
divb
test
cmp
sbb
fsts
or
cmp
jnp
decl
jbe
cmp
jecxz
add
or
cmp
cmp
test
std
pop
cmc
adc
cmp
cmp
cmp
jo
mov
inc
cmp
inc
sbb
sahf
repnz
aaa
jg
cmp
cmp
cmp
mov
xor
ljmp
cli
mov
sbb
into
les
ds
ja,pt
jbe
mov
xor
add
jbe
lds
jo
aas
test
aas
aad
nop
add
add
pop
push
xor
leave
xor
nop
jbe
xor
movsb
lock
inc
add
xor
xor
decl
xorb
xor
in
mov
stos
mov
popa
xor
rcll
insb
cli
fwait
and
xor
enter
mov
popf
out
xchg
pushl
test
xor
xor
dec
ss
push
xchg
mov
add
insb
test
jle
aaa
shlb
cwtl
rclb
cmp
incb
adc
cmp
cmp
cmp
cmp
cmp
jnp
sub
sarb
xor
cmp
adc
cmp
ret
push
fnstcw
stc
adc
sbb
mov
mov
cmp
cmp
cmp
fnstsw
mov
imul
cmp
loop
adc
cmp
cmp
mov
mov
push
cmp
xorb
cmp
pop
inc
mov
mov
enter
jg
add
ds
loop
js
xchg
xchg
push
aas
mov
lret
js
xchg
into
shlb
aad
movsl
pop
and
xor
or
xor
push
repz
adc
xor
into
out
fidivl
pop
dec
mov
fcoml
in
adc
xor
mov
sbb
nop
and
xlat
adc
xor
xor
imul
mov
adcb
outsl
jb
hlt
dec
jl
or
sbb
repnz
in
das
push
std
mov
xor
in
add
dec
adc
xor
xor
adc
xor
sbb
fdivs
adc
mov
adc
xor
xor
xor
mov
add
jg
sub
sbb
pushf
or
mov
xor
inc
add
add
imul
pop
adc
adc
fcomip
shll
lds
push
jbe
pop
nop
imul
pop
sub
jbe
ss
adc
je
addb
loope
mov
jge
mov
imul
aaa
sub
push
lds
xchg
clc
cmp
cli
jb
sbbb
cmp
cmp
fdivrs
adc
cmp
jg
aad
cmp
lea
pushf
cmp
lret
cmp
cmp
cmp
popf
cmp
cmp
cmp
xor
pop
cmp
cmp
fcoml
adc
stos
cmp
lea
mov
xchg
test
and
and
mov
sbb
cmc
aas
add
add
incl
adc
add
popf
jb
fidivl
pop
sti
sbb
dec
orb
dec
xor
xor
stos
or
fnstenv
adc
or
jbe
xor
nop
mov
xor
xor
or
push
data16
outsb
inc
push
dec
xor
inc
movsl
test
mov
mov
cs
xchg
xor
push
mov
xor
clc
mov
adc
xor
pop
cmp
movl
cmp
dec
insb
ds
lcall
cmpsl
shlb
adc
bound
lcall
xor
shll
inc
in
es
popf
test
cli
xor
inc
jp
pop
lock
xor
ret
xor
xor
xor
lahf
xor
xor
aaa
xchg
pop
push
cmp
cmp
fstpl
lock
cmp
dec
mov
cmp
into
aas
gs
std
push
adc
rol
mov
mov
mov
xor
cwtl
xor
arpl
ret
xor
xor
cld
in
mov
dec
adc
xor
xor
out
sub
xor
jmp
xor
stc
xor
or
add
sarb
sbb
loop
and
int
cs
sub
rclb
xor
lret
ss
mov
in
mov
fists
stos
ss
mov
push
mov
test
xorb
adc
jb
xchg
adc
jecxz
mov
dec
pop
rolb
outsb
mov
dec
cmp
cmp
adc
mov
es
cmp
xchg
cmp
cmp
mov
ljmp
sub
imul
repnz
pop
lea
adc
mov
cmp
sbb
mov
cmp
lods
add
dec
mov
and
les
and
clc
frstor
pop
and
cmp
mov
jg
xchg
out
test
cmp
out
pop
lods
sbb
ds
aas
xchg
adc
leave
test
cmp
xor
int
sbb
orl
push
pop
loopne
adc
cmc
xor
xor
mov
divb
mov
push
sbb
jg
sub
xor
cld
mov
cmp
cmp
cmp
std
cmp
cmp
and
push
ds
cmp
adc
cmp
cmp
cmp
cmp
xchg
cmp
mov
xchg
cmp
cmp
cmp
ja
fistpl
cmp
mov
adc
bound
mov
pusha
lea
add
cmp
call
pusha
sbb
lock
mov
adc
mov
jle
xchg
mov
sub
fcmovu
cmpb
pusha
cmp
imul
jne
outsb
aas
hlt
lock
mov
popa
incl
pop
aam
mov
add
pop
das
cli
stos
hlt
lods
xor
dec
iret
xor
ljmp
mov
rolb
repz
cmp
test
mov
aam
mov
cmp
add
loope
sub
cmp
loopne
scas
and
insb
mov
cmp
cmovb
mov
enter
cmpb
mov
arpl
mov
push
sub
inc
fdivl
xchg
add
insb
mov
xor
xor
xor
adc
xor
mov
daa
mov
and
or
aam
mov
cmp
mov
dec
adc
jg
pushl
fildl
mov
lret
aaa
xchg
aaa
pusha
aaa
mov
call
cmp
add
loop
sarb
aas
cmp
adc
jg
add
in
cmp
cmp
push
pusha
inc
adc
or
ret
add
and
fldt
in
cmp
adc
cmp
push
fists
loop
lcall
stos
mov
inc
cmp
cmp
cmp
and
xor
inc
and
cmp
cmp
cmp
adc
adc
fiadds
ja
mov
mov
dec
ds
adc
xchg
push
ds
outsl
mov
add
add
sub
mov
scas
sbb
inc
xor
lds
loopne
out
xor
xor
inc
jmp
mov
es
in
aad
roll
mov
push
lea
pusha
mov
pop
stos
push
in
adc
push
or
mov
jne
cwtl
cmp
cmp
fstpt
cmp
cmpl
fsubp
push
ds
aas
cmpsl
aas
test
aas
pop
outsl
and
mov
inc
hlt
xor
test
lret
xor
add
xor
add
stos
decl
and
in
xor
xor
xor
incl
xor
loopne
cmpb
outsb
pusha
adc
in
cmc
mov
stos
loop
and
xor
add
ss
jmp
inc
les
xor
mov
inc
cld
stos
sbb
xchg
aaa
cmp
in
out
jb
pop
test
and
mov
movsb
mov
pop
stos
aad
in
pop
cmp
cmp
stos
xor
mov
cmpb
loopne
mov
loopne
jl
adc
pusha
test
xor
pop
jecxz
cmpb
test
lret
bound
int
mov
xor
adcb
pushf
aaa
jge
test
les
sbb
std
call
cmp
cmp
data16
cmp
aas
and
dec
jl
cmp
loop
or
inc
loopne
jge
cld
or
fwait
aad
xor
aas
xor
cmc
xorb
mov
movb
xor
test
add
add
dec
mov
xor
cmp
cmp
cmp
push
inc
and
jb
stos
push
adc
repz
jle
xor
xor
xor
jg
lock
sub
fbstp
and
xor
xor
xor
in
outsl
clc
pop
mov
xor
push
cld
mov
xor
insl
jnp
xor
jg
jnp
mov
repnz
addr16
add
cmpsl
xor
or
mov
xor
mov
xor
fs
xor
xor
xor
xchg
pushl
stc
xor
xor
adc
sub
or
xor
jo
cmp
ret
incl
mov
push
xor
lahf
xor
jl
jo
jnp
jbe
mov
imul
pushf
xor
dec
xor
adc
add
idivb
inc
xor
xor
xor
adc
inc
ret
test
mov
xor
adc
fwait
cmpsb
outsb
imul
pop
xchg
insl
xchg
cmpsb
aaa
add
add
ja
loope
cmp
adc
cmp
loop
fsts
pushf
add
cmp
incl
cmp
push
dec
cmp
ds
ds
shl
push
sbb
sbb
add
cmp
or
fisttps
push
jno
add
sbb
nop
xor
jg
inc
inc
xor
xor
pusha
cwtl
aaa
sub
leave
aaa
pop
cmp
ja
jg
shll
add
jo
push
cmp
aas
test
mov
jmp
adcl
outsl
add
fdivs
dec
xchg
cmp
cmp
jge
xor
xor
xor
xor
add
add
xor
mov
add
mov
ljmp
pop
mov
push
aaa
lds
loopne
lcall
cmp
cmp
cmp
cmp
cmp
cmp
lock
sarl
cmp
pop
sub
or
and
int
xor
stos
scas
sbb
xor
push
xor
xor
xor
subb
jl
js
or
lods
aaa
icebp
sbb
shrb
outsb
incl
bound
cmp
mov
cli
lods
enter
cwtl
imul
adc
dec
mov
aaa
fs
mov
mov
xor
cmp
pop
cmp
outsb
clc
or
fidivrs
sub
pop
push
cmp
fbstp
cmp
add
cmp
stos
sarb
cmp
cmp
cmp
mov
push
dec
push
loopne
mov
out
cmp
cmp
cmp
add
push
nop
sbb
add
push
push
pop
outsl
cmp
cltd
ds
enter
faddl
aas
icebp
aas
cmp
js
aas
loopne
lea
icebp
dec
sahf
add
or
adc
test
incl
add
fcoms
xor
xor
xor
cld
out
dec
or
xor
addb
xor
xor
add
cmp
jl
or
cmp
lock
in
adc
mov
fbstp
adc
out
aas
pop
lock
mov
aas
pop
aas
sahf
adc
gs
insl
aas
mov
jnp
jle
imul
aas
push
adc
out
add
xor
sub
mov
and
cmp
push
rolb
cmpsl
xor
jg
test
addr16
mov
scas
xor
jo
sub
test
pushf
xor
sbbl
xor
jb
xor
dec
mov
popw
lock
pusha
ds
mov
push
fdivr
fwait
mov
xorb
jo
cmpb
aam
add
adc
adc
add
sbbb
xor
sbb
inc
mov
hlt
pop
adc
dec
rorb
push
adc
fidivrl
pop
xor
aam
sbb
sti
rclb
decl
adc
addr16
stos
push
in
add
ss
pop
add
jb
mov
pop
in
pop
mov
sub
lcall
arpl
aaa
push
test
adc
out
sbb
fistps
jl
aaa
and
xlat
sub
iret
aaa
xor
or
mov
ljmp
stos
aaa
pop
aaa
add
faddl
jo
incb
xorl
xorb
jno
cli
push
add
ud0
add
and
xor
xchg
dec
mov
xlat
ljmp
clc
stc
xor
mov
data16
sbb
xchg
insb
sbb
and
in
iret
xchg
insl
fisttpll
fadds
outsb
add
mov
add
push
cmp
mov
mov
xchg
jge
fs
and
inc
cmpsb
pop
lret
cld
popf
push
cmpsb
xchg
testl
xchg
jge
add
jae
pop
push
pop
jg
lods
lods
xchg
hlt
and
mov
xlat
sbb
push
jg
or
mov
pop
call
push
cli
or
outsl
jnp
inc
andl
test
enter
add
int
inc
mov
jae
mov
inc
jp
nop
rcrb
fwait
inc
pop
outsb
adc
incl
test
out
push
cmc
add
out
xchg
jecxz
outsl
pop
push
mov
inc
push
cmp
mov
rcr
pop
push
je
shl
jnp
loopne
into
mov
add
mov
cmc
jmp
sub
pop
lods
dec
mov
jle
test
testb
pushf
decl
loope
and
inc
ja
xchg
inc
mov
into
cmp
cli
pop
jecxz
fdivrs
test
push
push
outsl
mulb
popa
sbb
or
mulb
push
jbe
add
cld
mov
fwait
rcr
pop
jle
mov
lcall
adc
jecxz
cmpsl
ljmp
jmp
test
mov
xor
inc
inc
sbb
pop
jns
add
and
incl
mov
lds
push
inc
add
mov
lcall
inc
hlt
outsl
cli
or
pop
xchg
push
sbb
ljmp
and
mov
lahf
mov
repnz
and
ljmp
jle
divb
shl
jo
xor
out
repnz
in
sarb
push
repz
std
or
sbb
xchg
mov
inc
sbb
cmpb
enter
push
adc
popf
test
insb
xchg
mov
scas
clc
incl
pmaxsw
inc
outsb
jno
add
addl
mov
mov
sti
ja
cmpsb
add
and
int3
jno
jb
cwtl
pushf
xor
movl
addr16
test
aam
mov
loopne
pushl
xor
clc
and
mov
sub
cmp
dec
push
dec
popa
adc
xlat
pop
jns
imul
mov
jg
cmp
loope
es
xchg
dec
testb
cmp
incl
inc
adc
rol
sbb
bnd
outsl
and
inc
mul
incl
push
lcall
mov
cmpsb
stos
push
cli
mov
lock
pop
sbb
lahf
jle
xchg
and
cmp
jge
insl
dec
fwait
xlat
das
xchg
into
jle
daa
xchg
xlat
punpckhwd
sub
ret
aad
sbb
aad
mov
loopne
fwait
insb
mov
mov
movsl
sbb
hlt
pop
adc
jge
fbld
lcall
cwtl
orl
gs
cld
jnp
aad
inc
sbb
enter
xor
add
add
aam
into
in
jae
xor
cld
mov
cmp
mov
jbe
fldl
sbb
test
adc
push
inc
xchg
ret
shll
repz
stos
stos
rcr
adc
pushl
inc
rolb
jl
ret
pop
cmp
jae
cmp
pop
jle
test
jo
loope
js
jmp
ficompl
and
movb
cmp
lret
mov
lahf
xchg
movsl
cmp
jo
push
mov
ss
cmp
imul
cs
sbb
mov
call
mov
mov
jle
cmp
mov
or
in
push
fdivs
push
sbb
mov
inc
fwait
adc
or
out
shrb
ss
orl
decl
sub
fistpll
xchg
outsb
loopne
xchg
dec
out
push
aaa
cwtl
xchg
mov
lods
sti
dec
add
pushl
sub
xlat
call
dec
add
mov
xorb
jnp
mov
xchg
dec
mov
or
jmp
jne
stos
xchg
out
push
nop
std
pop
cld
jg
jecxz
pop
imul
adcl
decl
scas
ret
popl
and
pop
sbb
aad
hlt
jg
lods
dec
inc
rcr
clc
adc
mov
sbb
rcrl
and
dec
inc
rorl
sub
sub
xor
test
insl
lret
data16
mov
pop
dec
jmp
sbb
popf
scas
adc
lds
out
inc
xor
sub
mov
in
sbb
call
je
fwait
jb
in
mov
cmp
sbb
dec
gs
ss
push
add
jg
jbe
fistpll
cmpsl
push
in
mov
push
push
push
insb
ds
mov
fistps
in
add
incl
mov
into
dec
mov
or
dec
pop
add
in
in
mov
sbb
sub
aas
lret
inc
fstps
into
in
rolb
cmc
sub
dec
movsb
into
inc
mov
out
ret
sbb
decl
arpl
pop
mov
daa
mov
cs
loopne
mov
in
stos
xor
add
push
fcomip
pushl
xchg
or
xchg
rorl
fiadds
pop
pusha
or
xchg
mov
int3
fiaddl
pushl
popa
fcmovu
mov
mov
xor
jo
cld
mov
xchg
mov
ss
imul
cli
mov
jnp
cmp
lods
and
test
dec
xor
mov
pop
xchg
pushl
jl
mov
xchg
repz
xor
outsb
out
dec
cmpsb
cmp
dec
shll
in
movsb
inc
mov
xchg
outsl
jp
out
lods
js
sub
mov
js
pushl
sub
dec
jno
dec
shll
imul
into
cmp
pop
sub
cmc
mov
ja
out
push
jg
jle
pushf
jmp
sbb
rcrl
pop
cmp
jne
cmpsb
fbld
rorb
xchg
out
adc
pop
jmp
lock
dec
fidivrs
mov
cmp
inc
push
outsb
fmuls
cmpsl
jnp
inc
cmp
mov
xchg
cmc
jns
sub
mov
out
push
incl
sbb
mov
rcrb
push
repnz
or
outsb
push
push
aam
fnstsw
cmpsl
xchg
sahf
incl
mov
sub
mov
push
xchg
repz
or
pop
push
jmp
std
dec
sbb
mov
pushl
push
mov
lock
push
xorl
test
xor
addr16
push
xchg
mov
std
movsl
stc
pop
pop
push
mov
or
mov
addr16
mov
fwait
iret
outsb
mov
sub
je
lods
sbb
mov
call
jno
cmc
ret
cmpsl
in
dec
insb
xor
sbb
icebp
mov
or
fwait
pop
mov
aaa
sub
popf
je
jp
rclb
mov
insb
pushl
cwtl
lock
sub
mov
pushf
jl
or
rcrl
inc
push
aas
or
ss
jp
incl
pop
out
mov
inc
xlat
shrl
mov
xchg
dec
fidivrl
pop
aam
mov
cmp
and
fiadds
jp
sbb
xchg
call
cltd
lret
jge
fs
iret
sbb
mov
push
pop
add
rcr
ljmp
les
xlat
aam
adc
push
pop
jb
or
or
call
mov
cwtl
fchs
push
and
std
test
jmp
sar
or
fnstcw
mov
mov
mov
das
pop
xchg
shl
jg
pusha
adc
sub
fdivr
push
mov
hlt
pushf
sar
pushl
fxch
lret
sahf
scas
pusha
call
call
and
mov
in
lret
add
jbe
jmp
sbbl
lret
jb
loopne
mov
std
sub
aam
out
cli
decl
mov
fdivr
mov
ss
inc
fcoms
mov
fdivs
clc
jg
clc
pop
shr
ficoms
jo
test
out
mov
or
incl
cltd
fldenv
adc
mov
push
gs
sub
fnstenv
call
cmpsl
lods
rorl
aaa
movsb
loop
test
push
dec
ret
add
arpl
mov
mov
mov
or
pop
test
pushl
and
dec
inc
mov
mov
push
jae
imul
fisubl
cmpsl
dec
push
pop
xchg
cmpsl
push
and
jmp
dec
mov
mov
inc
jnp
lret
mov
cmp
push
push
inc
sbb
pop
pushl
call
lods
xchg
gs
push
mov
movsl
cmpb
push
ds
cmp
imul
mov
mov
sbb
mov
ret
test
mov
call
out
mov
cmp
push
into
hlt
xor
orb
pop
stos
rorl
xchg
fmull
mov
sub
mov
out
mov
in
xor
rep
jmp
sub
or
pop
lods
lods
pop
jns
dec
jg
test
dec
mov
xchg
imul
cmp
push
inc
aam
scas
divl
test
push
dec
mov
cmp
push
pop
xor
insb
ljmp
lock
jno
popa
data16
in
sarb
jp
inc
xor
shr
jns
pushf
mov
call
jo
es
movsl
icebp
or
dec
push
in
mov
decl
push
or
leave
icebp
pop
adc
sub
test
fldenv
mov
out
repz
lcall
out
arpl
inc
xor
xlat
dec
pop
sbb
dec
dec
inc
rcr
int
ret
xchg
jp
jp
push
fisttps
pushl
aad
xor
cmp
adc
shrb
movsl
das
enter
adc
and
xorl
repnz
pop
cli
jns
shll
mov
xor
mov
mov
ficoms
je
pop
xchg
sub
clc
scas
cmc
mov
loop
push
inc
inc
fs
movaps
adc
aam
stc
aad
pop
call
jp
push
cmp
mov
fimull
or
int3
mov
xor
movsl
mov
decl
and
jo
stos
pop
scas
and
fmul
dec
adc
xchg
sbb
inc
mov
inc
mov
jg
aas
pop
insl
loop
ret
jmp
data16
fidivs
insl
xor
pop
dec
xor
pushl
enter
out
stos
dec
push
lock
sbb
fcomp
inc
jbe
filds
jno
add
dec
inc
add
add
lcall
popf
mov
xor
fbstp
sbb
push
dec
lret
fldcw
test
imul
pop
xor
gs
adcl
sbb
xor
add
decl
in
lret
subb
cmp
xchg
push
pushl
icebp
add
or
shll
xlat
punpcklwd
dec
sub
dec
push
xchg
into
inc
sbb
scas
stc
cmpsb
jno
push
cmp
sub
adcb
or
mov
ljmp
or
mov
cmp
aaa
std
incl
lret
cwtl
pop
repz
mov
stos
add
sbb
clc
stos
sahf
stc
arpl
clc
ds
fs
or
xchg
mov
ja
jbe
test
lret
inc
push
jecxz
adc
ret
imul
mov
jmp
cli
push
rcrb
pop
mov
dec
mov
lds
mov
into
jns
lcall
mov
icebp
pop
movb
mov
xor
les
pop
inc
incl
mov
pop
mov
and
mov
mull
adc
lea
pop
incl
sbb
sub
cli
push
loop
int
ret
lds
cmp
pusha
gs
xchg
movsb
out
incl
sahf
jb
lock
pop
mov
jge
sbb
hlt
outsl
decl
xchg
xchg
push
out
sub
mov
mov
or
xor
outsl
cli
out
mov
xchg
icebp
sub
gs
dec
lcall
pop
cld
push
mov
inc
inc
pop
jl
and
iret
or
faddl
lds
loop
push
xor
xchg
dec
mov
nop
sub
outsb
jg
dec
mov
add
std
rorb
imul
cmp
dec
mov
int3
push
js
loope
cmpsl
pop
in
and
jmp
jo
cltd
fidivrl
add
mov
mov
jmp
cltd
jmp
call
push
dec
clc
sbb
cmpsl
int3
sarl
pop
cmc
jge
lcall
push
lock
std
push
jg
in
and
jmp
dec
mov
xchg
pop
fsubrs
roll
into
pop
xchg
lcall
rcrb
out
mov
stc
ficompl
jg
adc
lds
pushl
out
xchg
mov
in
cmp
sub
pop
mov
lret
jno
insb
out
xlat
mov
ss
dec
and
hlt
movsl
test
xchg
lds
sub
mov
jg
pushl
inc
repz
push
aad
cmp
cmp
xor
arpl
sub
popa
push
in
lret
in
outsl
xor
mov
jns
mov
cmpsb
ljmp
ljmp
ljmp
cmp
out
sub
ficomps
stos
pusha
subl
mov
imul
fwait
out
stos
test
lcall
cld
rcr
xor
sub
xor
into
cmc
xchg
movsl
mov
clc
adc
loope
call
cwtl
dec
std
insl
sub
fldcw
mulb
push
leave
inc
add
push
clc
inc
push
test
push
pop
loopne
inc
inc
loope
scas
lcall
jmp
push
push
inc
cmp
push
sbb
adc
lahf
inc
cld
decl
inc
push
push
mov
fdiv
jo
pusha
fnstcw
negb
shrl
push
xchg
dec
cmp
ss
decl
mov
stos
hlt
popa
adcl
push
repz
mov
xchg
ljmp
mov
mov
and
sbb
out
sub
push
mov
xor
xor
aam
dec
sub
in
adc
and
cmp
shlb
lcall
sbb
push
mov
pop
or
ret
cmp
lret
pop
sbb
std
dec
add
xchg
mov
push
or
test
jle
inc
test
lret
push
jne
incl
inc
gs
sub
imul
call
cld
ljmp
outsl
mov
repnz
stos
das
cli
scas
ss
inc
dec
push
cmp
push
mov
jmp
adc
shrb
mov
pop
popa
in
pop
lea
and
xor
jno
mov
jge
dec
cltd
mov
jae
mov
or
lds
lret
daa
pop
inc
add
pop
js
jle
sub
push
push
out
dec
rorb
dec
pushf
or
sbb
icebp
cld
fisttps
es
lret
test
adc
cmpsb
clc
imul
lock
incl
push
cli
cmpsb
aad
or
sbb
mov
xchg
xor
inc
shrl
loope
dec
fbstp
aam
rorl
out
sub
pop
bound
xchg
and
fisttpll
jg
leave
cmpsl
sub
xor
cwtl
sbb
mov
or
mov
rcrb
xchg
lea
xchg
xor
push
in
shrb
fmull
negb
pushl
jae
cmc
sahf
and
lods
hlt
fcmovb
jo
inc
push
push
les
incl
lea
ret
fidivs
lret
xor
inc
pop
pop
fidivl
lcall
xchg
in
dec
lock
jb
jmp
js
fcompl
push
or
fcomip
scas
jno
pop
mov
aaa
sub
lcall
mulb
icebp
test
sbb
add
cli
mov
daa
loopne
out
or
add
repz
add
push
std
enter
loope
repnz
in
enter
pop
sub
or
push
fadds
xor
outsb
lcall
call
mov
add
sbb
push
mov
mov
outsl
out
dec
sbb
jnp
jbe
cmp
jmp
addr16
jg
call
ds
add
sbb
lods
out
loopne
incl
popf
dec
or
mov
sub
lret
sub
movsb
xor
ja
or
jns
out
loopne
adc
pop
pop
jle
ljmp
fmull
xor
add
jo
inc
jmp
sbb
fwait
jmp
ss
repnz
sarl
das
xchg
and
enter
pusha
fisttpll
mov
pusha
daa
adc
xchg
sbb
xor
jae
fucomip
cmpsb
xchg
mov
aad
sbb
cwtl
mov
push
movsb
sarb
pop
sub
sub
in
ljmp
mov
sub
ljmp
rcrb
or
adc
xor
xchg
pushl
mov
stos
and
xchg
inc
fstpl
cmpsb
cmpb
inc
push
inc
push
andl
orb
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
add
or
mov
sub
popf
push
add
add
xchg
mov
adc
add
add
pop
cmpsb
adc
mov
pop
jb
jae
push
push
or
outsl
es
popa
or
lcall
stos
pusha
stos
or
dec
fdivs
adc
sti
fwait
int
push
outsl
outsb
xor
gs
outsl
jo
sbb
lcall
jb
insb
or
insl
jo
adc
aam
cmc
arpl
test
or
mov
gs
sub
mov
jae
push
scas
mov
andb
xor
outsb
insb
gs
test
insb
sbb
js
or
popl
fs
mov
dec
es
bound
jo
mov
lret
push
mov
pop
pop
inc
insb
and
js
or
insl
shlb
mov
shll
lods
inc
je
push
dec
push
adc
add
xchg
aam
inc
lods
call
dec
popa
ret
iret
mov
add
incb
fs
push
popa
bound
push
insb
add
je
addr16
jb
xor
push
popa
ja
arpl
push
xor
add
xchg
push
je
adc
mov
mov
mov
roll
cltd
pop
shll
lds
shll
inc
sub
or
mov
in
inc
lea
daa
add
ret
cmp
andl
push
lds
lds
shrl
nop
adc
inc
or
insb
movsl
add
sbb
push
add
inc
test
add
fs
and
nop
andb
mov
outsl
inc
xor
inc
scas
mov
mov
cmpsl
and
orb
sub
and
add
aad
test
inc
stos
add
pop
inc
adc
xorb
mov
sbb
mov
in
mov
xlat
push
add
adc
arpl
xchg
inc
xor
add
or
les
push
lods
sbb
lea
inc
jne
sub
and
scas
adc
cmp
or
stos
inc
cmp
adc
mov
test
and
xor
jge
imul
push
lds
adc
dec
mov
call
test
or
cltd
test
or
add
dec
shlb
popa
std
add
in
cwtl
xchg
mov
inc
inc
add
add
inc
xor
scas
mov
adc
xor
out
xor
sbbl
push
aaa
jmp
push
xor
add
or
add
inc
mov
mov
jg
mov
fildl
add
subb
jno
adc
mov
or
popa
jae
mov
add
cs
insb
xor
xor
mov
xor
sub
pop
pop
sub
adc
shlb
sbb
arpl
dec
add
inc
pop
inc
mov
in
push
adc
xor
adc
and
cmp
popa
mov
mov
out
stos
stos
inc
sub
mov
mov
mov
or
popf
or
mov
test
add
loope
loop
or
lds
inc
xor
imul
mov
push
inc
inc
test
pop
jecxz
or
pusha
pop
inc
shlb
bound
add
xchg
push
inc
add
or
popa
push
stos
pop
add
mov
sbb
sub
popa
inc
mov
ja
and
adc
lea
add
and
mov
sub
bound
and
inc
mov
ret
fsts
adcb
in
jo
or
push
xor
add
sub
mov
push
addb
call
adc
mov
es
sbb
mov
add
inc
push
dec
push
outsl
jmp
scas
jne
mov
mov
push
ja
and
popf
in
call
inc
stos
dec
cmp
inc
xlat
cmpsb
adc
adc
and
and
loop
push
jno
adc
arpl
int
xchg
les
and
sub
inc
mov
cmp
daa
mov
jne
mov
dec
shlb
rorb
adcl
add
mov
imul
sub
xor
outsl
insl
and
add
sti
adc
push
mov
nop
stos
adc
pusha
and
test
int
popa
add
push
push
mov
cmp
inc
mov
and
orl
jno
or
adc
adcb
pop
mov
sub
inc
addl
dec
or
rolb
inc
dec
push
jg
imul
stos
push
jnp
mov
push
ret
imul
add
in
and
and
pusha
push
mov
add
inc
push
xor
inc
inc
shrb
add
and
xor
test
and
jno
inc
bound
mov
sub
or
imul
inc
xchg
rcll
adc
jecxz
sub
in
push
mov
sub
sub
sub
push
or
movsb
orb
and
call
mov
rcll
test
push
test
sbbb
pop
sub
inc
push
mov
adc
push
gs
movsl
xor
mov
pop
aas
adc
mov
and
mov
test
add
xor
inc
sub
mov
add
xor
stos
nop
test
pop
and
add
or
roll
push
orb
ret
cmp
push
xor
or
add
and
pop
lcall
xor
test
test
outsl
lds
loopne
push
fldl
rolb
jns
add
pusha
sbb
imul
andl
push
sub
ljmp
mov
inc
add
loopne
xor
mov
aam
push
dec
add
mov
adcb
outsl
or
xor
les
mov
mov
loope
sub
ljmp
jecxz
nop
push
shrb
mov
push
cmpsl
inc
add
xor
inc
sub
lods
push
add
add
pusha
mov
cmpsl
xchg
push
add
addb
inc
sub
les
ffree
test
leave
sub
iret
or
adc
add
mov
or
add
dec
adc
nop
or
rorl
push
xchg
sub
push
pop
mov
out
inc
inc
shlb
pusha
adc
xor
and
and
push
mov
insb
adc
andl
add
repz
std
fistl
push
dec
add
add
es
popl
jnp
add
sbb
pop
daa
incb
mov
pop
and
ucomiss
mov
mov
cmp
lea
nop
sahf
cwtl
push
and
sub
pop
imul
jge
rolb
mov
add
inc
push
dec
xor
pusha
rolb
mov
and
aas
and
popa
cmpsb
mov
pushf
lcall
fs
add
add
rcr
dec
push
adcb
int
imul
loop
jo
jb
jb
fisubrs
clc
scas
stos
xor
add
add
and
add
add
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
movsl
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
cmpsl
inc
add
add
add
add
add
add
add
add
add
add
or
add
shrb
add
in
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
mov
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
mov
add
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
pop
add
add
add
add
add
and
add
in
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
and
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
daa
cmp
loop
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
sub
add
in
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
sub
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
xor
add
in
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
xor
add
in
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
cmp
loop
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
cmp
add
in
lock
lods
push
in
ret
cs
push
cmp
imul
stos
rolb
outsb
movsb
fimull
push
daa
test
addr16
sub
sbb
movsb
aaa
xchg
repnz
cmpsb
call
or
testl
lret
out
mov
shll
xchg
hlt
fimull
orl
sbb
enter
adc
cmpsb
or
mov
cmpsb
imul
xor
inc
mov
mov
mov
inc
jp
aas
inc
mov
pop
xchg
adc
add
add
cmc
push
inc
out
xor
outsl
mov
mov
dec
es
rclb
jnp
loopne
into
mov
repz
or
sub
pop
lods
dec
dec
pop
mov
jp
testb
movsb
loope
and
jg
sbb
cmp
into
iret
cli
pop
sbb
fadds
outsl
xor
frstor
sbb
pop
gs
add
cld
mov
pop
xorl
in
sub
push
xchg
jecxz
cmpsl
adc
ds
ljmp
mov
push
mov
sbb
in
jmp
inc
hlt
dec
int3
lds
push
inc
outsb
xchg
mov
add
inc
mov
clc
xchg
push
jecxz
mov
in
and
adc
mov
cs
cmp
insl
xchg
ja
divb
rcrl
mov
pop
gs
xchg
fincstp
mov
outsl
xchg
les
xor
mov
lahf
and
dec
in
pushf
leave
xor
xchg
mov
and
inc
sbb
lret
enter
push
in
inc
mov
rcll
inc
xchg
jno
xchg
subl
loopne
inc
ja
cmpsb
and
mov
test
xorl
lock
int
cmpsb
push
jle
ja
cld
sbb
jle
pop
int
fisubl
mov
inc
clc
test
fs
jo
cmp
and
push
je
fiaddl
shr
or
lcall
sub
mov
test
mov
add
sub
push
imul
aas
push
ss
mov
xchg
cmp
push
stos
int
mov
or
xchg
aam
jae
stc
pop
iret
icebp
out
in
cmp
mov
cmp
pop
scas
push
fidivl
mov
cmp
aaa
fnstcw
int
loope
lahf
rorl
sub
clc
arpl
je
xchg
sahf
mov
popf
and
out
fcoms
lea
push
loope
jmp
and
enter
add
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
add
add
mov
add
dec
mov
add
pop
mov
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
arpl
xor
add
outsb
jae
popa
jb
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
jb
outsb
jae
popa
je
dec
popa
insl
gs
add
addr16
jb
push
inc
popa
jb
push
xor
imul
