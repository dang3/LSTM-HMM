in
add
out
mov
add
add
add
mov
add
mov
add
add
pop
mov
add
add
xorb
add
add
add
mov
add
mov
add
mov
add
mov
add
add
es
add
mov
add
add
pop
mov
add
add
jp
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
fs
idivb
mov
cmp
add
fs
idivb
mov
cmp
inc
add
jb
mov
lret
adc
sub
inc
adc
test
aas
daa
xor
lret
lret
xor
lret
lret
inc
daa
xor
inc
subb
lret
pop
xor
sub
shr
inc
cmp
sub
sub
int
adc
lret
sub
out
sbb
inc
and
inc
mov
andb
mov
sub
lds
sub
dec
xor
aas
les
jo
add
stc
sub
cmp
fst
pop
fidivl
daa
out
mov
mov
add
sub
cmpsl
sub
sub
mov
xchg
inc
and
andb
xchg
test
add
int
inc
jo
xor
inc
add
sub
pop
sub
inc
mov
in
sub
or
sub
mov
inc
inc
add
sti
and
sub
mov
xor
xor
push
cmp
pop
lea
push
lea
or
add
sub
adc
sub
repnz
lea
add
mov
sti
xchg
sub
adc
mov
sti
push
sub
adc
fisubl
mov
inc
adc
adcb
adc
dec
das
int
sub
addl
jg
inc
sub
sub
sub
inc
adc
adc
repz
add
adc
adc
adc
inc
sarl
fstpt
jecxz
fstpt
fcompl
lea
xor
into
fsubs
xor
lret
ret
sti
cmpsl
sub
sub
inc
mov
inc
and
lods
jmp
cmpb
mov
add
xor
sub
adc
inc
mov
inc
and
lods
jmp
cmp
cmp
inc
mov
sub
dec
test
xor
decb
cmpsl
sub
sub
stos
inc
or
cli
sub
sub
add
adc
repz
xor
mov
sub
xor
xor
xor
inc
and
lods
in
subb
mov
sub
sti
subb
inc
mov
cmp
jecxz
sbb
or
int
xor
jecxz
xor
mov
sub
subb
xor
mov
test
pop
xor
jne
sub
int
int
jecxz
in
push
sub
adc
fwait
mov
sub
xor
hlt
jecxz
xor
subb
inc
mov
xchg
sub
sub
adc
cmp
jecxz
stc
adc
add
sub
lods
cs
and
inc
mov
mov
sbb
jecxz
aam
cmpl
adc
mov
and
or
or
sub
sti
jle
sub
subb
aam
inc
adc
adcb
mov
addb
andb
sahf
mov
bound
out
subb
sub
sub
sub
lods
icebp
cmp
inc
adc
mov
inc
mov
lods
jmp
cmpl
out
inc
les
in
xor
mov
xor
stos
xor
add
mov
sub
sub
bound
jb
lods
bnd
cmp
arpl
dec
sub
cmp
shlb
inc
rorl
sub
mov
adc
fstpl
cmpb
les
xor
mov
pushl
ret
sbb
jl
sub
stos
xor
stos
mov
inc
add
inc
dec
inc
mov
mov
lret
ds
lret
ds
mov
mov
and
aam
dec
cltd
mov
xchg
sub
sub
sub
stos
xchg
mov
sub
sub
sub
cmp
push
ficoml
cmp
sbb
fidivrl
sbb
mov
mov
sub
cmp
sbb
push
inc
inc
adc
sub
sti
add
sub
mov
sub
cmp
adc
insl
pop
sub
sub
ret
inc
stos
mov
inc
cmp
and
ret
cmp
and
mov
mov
inc
adc
inc
les
jns
sub
xor
sub
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
pushf
inc
les
inc
mov
into
inc
aam
inc
dec
xor
mov
sub
inc
sub
sub
sub
cs
bound
and
and
and
jb
mov
and
les
push
mov
enter
pusha
sub
lret
and
pop
inc
sub
mov
mov
mov
mov
inc
and
inc
or
lret
cwtl
pusha
sub
lret
xor
adc
inc
mov
inc
and
inc
or
lret
pop
pusha
sub
lret
dec
cmp
and
stos
inc
adc
nop
stos
inc
aam
sti
xchg
pusha
sub
lret
or
fdivrs
inc
sbb
xchg
and
inc
aam
sti
pop
pusha
sub
inc
adc
lret
inc
push
adc
sub
sti
cmp
sub
sub
xor
mov
sub
les
mov
mov
inc
les
mov
pusha
std
mov
sub
and
sti
lret
insb
sub
inc
sbb
sub
sub
sub
sub
inc
mov
nop
iret
mov
lret
jmp
mov
sarb
in
cmpb
cmpsl
xchg
sub
xchg
sub
sub
sub
stc
inc
mov
sub
adc
and
stos
cli
or
lret
xor
sub
adc
inc
mov
inc
stos
stos
shrb
lret
mov
mov
sub
sub
sub
sub
mov
idivb
inc
mov
lret
cs
inc
inc
mov
in
cmp
sbb
sub
sub
and
stos
rcl
sub
pop
inc
mov
inc
stos
stos
cli
sub
sub
rcrb
sub
pop
inc
mov
inc
and
cmp
sub
sub
pop
inc
mov
sub
lcall
and
mov
mov
and
subb
inc
mov
sub
fdivr
dec
cmp
sub
mov
inc
stos
stos
cli
sub
sub
rcr
sub
pop
call
aam
add
sub
fdivr
repnz
push
idivb
xchg
cmp
fadds
idivb
in
idivb
call
fdivr
adc
cmp
shl
cmp
enter
xchg
idivb
inc
mov
fdiv
cmp
nop
mov
fdivr
into
idivb
cmp
inc
mov
fdivr
lods
idivb
cmp
fdiv
cmp
fdiv
cmp
fdiv
cmp
mov
decb
fdivr
push
cmp
xor
shrl
idivb
push
cmp
push
mov
and
mov
movsb
pop
sub
mov
sub
mov
sub
mov
sub
inc
mov
inc
sbb
cmp
push
fidivl
inc
mov
inc
mov
cmp
or
mov
inc
aam
sti
leave
and
sub
inc
pusha
xor
mov
bound
mov
sti
sub
sub
inc
mov
inc
stos
xchg
xor
adc
inc
les
mov
stos
stos
sub
jp
or
sub
inc
sub
cmp
xor
std
in
sub
inc
ss
sub
inc
cmp
and
xor
fwait
and
mov
sub
sub
idivb
adc
popf
dec
and
les
inc
mov
aaa
popf
push
and
les
inc
mov
idivb
dec
sub
idivb
dec
sub
idivb
imul
idivb
jns
sub
cmp
mov
popf
ss
daa
sub
mov
sub
idivb
inc
adc
cmp
or
sub
inc
mov
lret
imul
cs
xor
lret
push
stos
inc
sub
aam
xor
dec
insl
sub
xor
stos
jb
hlt
sub
pop
mov
inc
mov
nop
daa
nop
mov
mov
sub
pop
sub
adc
inc
mov
nop
mov
jle
sub
xor
nop
mov
mov
inc
mov
sub
sub
sub
xor
inc
mov
inc
stos
inc
sub
aam
inc
les
inc
fildl
repz
sub
cmp
lret
lret
nop
mov
mov
sub
lret
push
xor
sub
sub
xor
inc
mov
inc
stos
inc
sub
adc
sub
cmp
mov
xor
mov
xor
and
xor
lret
jo
inc
mov
les
add
inc
les
aas
inc
sub
mov
inc
aam
cmp
inc
les
mov
inc
mov
xor
sarl
sub
sub
xor
adc
cmp
add
sub
sub
sbb
scas
sbb
cmp
inc
int3
cmp
adc
and
dec
cmp
sub
sub
fldt
xlat
fildll
sub
or
sub
inc
dec
xor
repz
in
xor
sti
inc
cmp
pop
xor
repz
roll
sti
cmp
sbb
mov
cs
adc
inc
aam
sub
add
add
sub
push
xor
or
xor
sbb
sub
sub
ror
inc
lret
nop
xor
int3
sub
lret
push
adc
xor
sub
sub
xor
inc
mov
inc
stos
inc
sub
aam
inc
mov
inc
sub
sub
sub
mov
inc
les
mov
sub
cmp
shrb
aam
inc
mov
xor
mov
inc
mov
inc
lret
mov
inc
cmp
inc
mov
pushf
mov
push
inc
push
mov
inc
pushf
xor
inc
mov
inc
dec
add
int
dec
call
bound
aam
add
xor
add
lcall
sub
xor
sub
sub
sub
sub
cmp
sub
xor
sub
sub
popf
inc
sub
sub
xor
sub
sub
xchg
mov
sub
sub
hlt
or
inc
mov
dec
cltd
lret
repz
cltd
mov
xor
mov
sti
cmpsl
sub
sub
fdivs
dec
xor
adc
jo
xor
dec
cltd
push
inc
dec
cltd
fiadds
and
cld
inc
mov
xor
cmp
hlt
sbb
jo
xor
dec
cltd
faddl
and
addb
cmp
and
xor
in
sub
cmp
sbb
dec
cltd
faddl
mov
xor
and
push
loope
cltd
push
inc
dec
cltd
fiadds
les
sub
and
adc
imul
dec
cltd
lret
cltd
sbb
mov
xor
sti
pushf
aam
dec
das
in
sub
sub
loopne
stos
stos
add
nop
stos
out
mov
inc
add
add
shlb
nop
pop
cmp
dec
xor
mov
xor
sub
sub
sub
stos
stos
std
cmc
sub
sub
cmp
dec
cmp
sub
mov
cmp
or
dec
xor
sbb
xor
cmp
adc
scas
cmp
inc
xor
xor
sbb
inc
mov
sub
mov
xor
mov
sub
inc
cmp
adc
sub
sub
sub
inc
mov
sub
jb
and
cmp
sub
ret
sub
cmp
adc
inc
sbb
add
xor
dec
inc
ss
dec
inc
mov
dec
cltd
mov
sub
cmp
dec
inc
aam
inc
shrb
sub
sub
cmp
mov
add
cmp
inc
mov
lods
jmp
inc
xchg
lcall
mov
push
inc
aam
inc
les
nop
pop
std
mov
sub
nop
stos
pushf
adc
call
cs
stos
out
scas
xor
aam
add
add
sub
nop
stos
mov
inc
xor
stos
adc
rolb
xor
adc
inc
lret
hlt
sbb
cmp
adc
inc
aam
xor
mov
cmp
or
and
dec
inc
shrd
inc
sub
sub
pop
xor
inc
dec
xor
sub
sahf
xor
adc
inc
aam
sub
sbb
sbb
sub
adc
scas
inc
lret
aam
xor
loopne
stos
stos
mov
inc
mov
inc
stos
xor
add
lcall
shrl
sub
inc
aam
xor
sub
sub
push
sbb
adc
nop
stos
stos
std
movsl
sub
sub
sbb
adc
inc
mov
inc
out
xor
es
xor
cmp
sbb
and
nop
mov
les
push
mov
and
dec
cltd
inc
mov
pushf
cmp
adc
xor
mov
mov
sbb
stos
sub
sub
stos
cmp
dec
inc
stos
pop
sub
dec
sub
xor
mov
inc
stos
stos
fsubrs
lret
stos
adc
adc
inc
les
mov
cmp
inc
mov
inc
aam
xor
les
cmp
inc
les
mov
and
sub
std
movsb
sub
sub
mov
inc
add
add
fcoms
cmp
add
mov
movsb
pop
sub
mov
sub
inc
fstpt
sub
mov
sub
pushf
and
dec
xor
sub
pushf
and
dec
xor
sub
sub
sub
sub
fimuls
fisubrs
sub
inc
lods
mov
pop
pushf
sbb
dec
xor
xor
inc
mov
inc
or
xor
lcall
incb
adc
cmp
repnz
cmp
cmp
mov
nop
stos
inc
jmp
cmp
out
mov
int3
cmp
mov
mov
repnz
mov
push
adc
sbb
mov
mov
push
lods
mov
push
hlt
idivb
sub
xor
stos
inc
aam
into
lret
cmp
sbb
inc
inc
sub
mov
inc
inc
lret
mov
mov
sub
inc
adc
sbb
int
sahf
adc
inc
lret
dec
adc
inc
shlb
jp
dec
cmp
inc
lcall
stos
inc
les
int3
inc
les
sub
sub
sub
sub
lret
lret
mov
inc
lret
int3
xor
sub
inc
mov
cmp
sub
shrb
adc
fdivr
adc
sbb
xor
dec
cltd
mov
nop
mov
mulb
cmp
inc
inc
dec
inc
mov
mov
inc
lcall
scas
xor
lret
inc
inc
stos
xor
mov
sub
inc
mov
inc
mov
push
int3
inc
mov
inc
stos
xor
xor
sub
inc
mov
sub
mov
dec
cltd
mov
pushf
mov
push
outsl
inc
xor
mov
inc
les
int3
inc
les
sub
sub
sub
inc
les
sub
fsubrs
lret
stos
dec
xor
inc
mov
andb
sub
fdivr
leave
and
sub
mov
movl
sub
jo
sub
xor
xor
mov
inc
les
int3
sub
inc
les
sub
fsubrs
lret
push
jp
mov
xor
xor
adc
inc
mov
inc
mov
push
popf
sub
sub
cmp
fsubrs
xlat
mov
sub
add
sub
xlat
inc
les
mov
inc
mov
cmp
sub
out
cs
stos
call
sub
inc
add
int3
ss
cltd
lods
push
rcr
nop
sub
cmp
iret
adc
mov
pushf
in
push
inc
inc
fidivrl
xor
xor
pushf
in
push
xor
push
in
nop
stos
call
sub
inc
add
add
mov
and
mov
cmp
jmp
rcrb
inc
adc
idivb
call
or
sub
sub
and
sub
insb
sub
sub
popf
xorb
sub
std
mov
and
inc
in
nop
sbb
xor
sub
dec
xor
and
nop
sbb
mov
sub
add
and
mov
sti
testb
notb
negb
inc
and
notb
negb
inc
adc
testb
notb
testb
inc
adc
testb
notb
negb
inc
and
notb
negb
inc
adc
testb
notb
testb
inc
adc
testb
mulb
xor
cs
add
sarb
xor
inc
and
nop
sbb
inc
mov
sub
testb
and
mov
and
nop
sbb
inc
testb
sarb
scas
notb
adc
nop
stos
add
nop
stos
stos
call
cmp
aam
add
testb
cmpsl
jle
sub
testb
sub
nop
cmpsl
and
mov
daa
or
sub
mulb
fmuls
mov
sub
mov
mulb
aam
inc
fsubrs
xlat
inc
pop
nop
daa
testb
sarb
sub
testb
sub
nop
shll
mov
les
call
or
sub
cmp
movl
sub
mov
int3
fdivrs
sub
cmpsl
and
loopne
sub
inc
sbb
cmp
cmp
in
inc
mov
sub
shl
inc
sub
testb
sub
nop
mov
mov
mov
xor
sub
or
inc
xor
sarb
sub
test
adc
sub
cmp
inc
mov
loopne
daa
or
sub
inc
nop
lods
nop
mov
sarb
call
inc
add
mov
sub
cmpsl
and
iret
daa
sub
testb
jle
sub
testb
sub
nop
mov
sub
mov
fmuls
mov
sub
mov
mulb
adc
inc
push
sub
sbb
nop
fdecstp
inc
inc
lret
sub
mov
testb
sub
nop
shll
mov
and
daa
or
sub
loopne
xor
stos
stos
add
nop
stos
out
mov
inc
add
inc
mov
dec
cltd
cmp
inc
sub
cmpsl
xorb
sub
nop
mov
and
aam
mulb
mov
subb
inc
mov
idivb
dec
cltd
mov
mov
nop
daa
fwait
and
mov
stos
call
mov
out
scas
xor
aam
add
dec
inc
les
cmp
adc
mov
xor
les
cmp
cmp
jmp
scas
inc
sub
inc
add
inc
inc
les
cmp
adc
mov
xor
stc
in
cmp
aam
add
add
mov
sub
mov
sub
inc
adc
popf
adcb
je
sub
push
adc
dec
xor
sub
sub
fadds
cmp
ss
mov
xchg
xorb
cmp
inc
mov
xchg
xorb
sub
inc
mov
nop
lods
xor
inc
sub
sub
and
mov
inc
aaa
xlat
fildll
sub
nop
lods
cmp
add
mov
inc
in
nop
fstl
sarb
and
iret
sbb
inc
aam
inc
in
nop
int
fldl
pop
sarb
and
je
sub
shll
scas
inc
aam
dec
mov
mov
inc
mov
nop
lods
nop
int
xor
je
sub
lahf
jle
sub
mov
inc
mov
pop
mov
cmp
cmp
sbb
sub
xorb
loopne
mov
mov
inc
mov
nop
lods
inc
xchg
ss
sub
cmp
adc
dec
das
push
loopne
mov
inc
add
add
mov
and
les
cmp
sbb
and
or
cmp
inc
les
aas
push
mov
cmp
les
sub
cmp
inc
les
aas
cmp
cmp
xor
xchg
rcrb
fdivrs
adc
or
sub
xchg
sub
mov
sub
sub
dec
xor
inc
mov
mov
sub
inc
mov
nop
mov
mov
lret
daa
sub
mov
sub
sub
sub
dec
xor
std
mov
sub
inc
adc
nop
sbb
adc
sti
and
and
wbinvd
sub
dec
xor
inc
mov
nop
mov
adc
loopne
test
stos
pushf
mov
push
jle
mov
nop
mov
je
sub
adc
jecxz
mov
ss
sub
xor
cmp
mov
dec
inc
mov
nop
mov
mov
mov
inc
or
adc
mov
roll
sarl
mov
add
mov
inc
mov
inc
sarl
ret
sub
nop
mov
mov
lret
or
les
nop
leave
xor
cmp
adc
add
inc
mov
inc
les
xor
lret
inc
mov
inc
adc
sti
xor
mov
inc
fistl
jle
sub
inc
sarl
ret
sub
dec
xchg
mov
lods
inc
les
nop
leave
xor
mov
adc
dec
xchg
mov
jl
dec
sub
cmp
inc
inc
mov
nop
mov
mov
cmp
sti
inc
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
inc
mov
nop
mov
dec
dec
xor
inc
repz
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
inc
jmp
mov
nop
mov
cmp
sub
nop
mov
or
sub
dec
xor
call
inc
sub
inc
add
add
or
sub
cmp
adc
adc
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
cmp
int
mov
or
mov
cmp
adc
or
cmpsl
adcb
fsubrs
xor
xor
inc
les
nop
xor
cmp
dec
das
mov
inc
in
std
dec
sub
sub
adc
inc
nop
mov
mov
sbb
sbb
xor
nop
nop
mov
lods
inc
les
nop
movl
mov
sub
sub
add
or
xor
nop
iret
sbb
xlat
inc
mov
cmpb
aam
inc
mov
inc
mov
fildl
and
mov
mov
mov
les
mov
xlat
subb
or
mov
roll
sti
inc
mov
nop
mov
roll
push
push
inc
mov
inc
mov
fildl
and
lods
xor
inc
mov
nop
mov
roll
adc
mov
roll
mov
fistl
xor
je
sub
mov
inc
mov
fildl
sti
nop
mov
mov
xor
sti
repnz
sub
and
sub
cmpb
nop
mov
mov
and
out
sub
nop
mov
xlat
fildll
sub
sub
adc
mov
dec
xor
call
sub
inc
add
add
mov
sub
mov
sub
mov
sub
inc
mov
cmpsl
adcb
je
sub
lods
sbb
insb
mov
xor
sub
inc
sbb
adc
inc
mov
mov
sub
mov
sub
mov
sub
inc
aam
nop
xlat
xor
sbb
insb
aam
nop
mov
mov
sti
nop
mov
mov
xor
sub
inc
mov
nop
mov
mov
das
adc
sub
sub
shrb
sub
dec
xor
inc
mov
cmp
repz
sub
cmp
and
mov
inc
les
nop
xor
cmp
pop
inc
les
mov
mov
sub
mov
lock
xor
mov
xor
inc
mov
cmp
mov
mov
inc
mov
cmp
ret
cmp
and
and
sub
flds
mov
sub
sub
add
cmp
leave
cmp
je
sub
mov
les
les
inc
in
nop
out
or
xor
dec
mov
cmp
push
mov
sub
inc
in
inc
mov
jmp
sub
sub
xor
sub
mov
xor
inc
adc
inc
mov
dec
xchg
les
mov
mov
pop
inc
mov
inc
xor
inc
mov
dec
xchg
les
mov
xor
jle
sub
cmp
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
mov
mov
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
sti
aas
in
sub
iret
rcll
sti
nop
movl
sub
mov
les
aas
mov
nop
xor
dec
mov
fisttpl
sti
inc
rcll
jle
sub
inc
les
nop
mov
movl
leave
mov
daa
sub
add
and
lds
sub
adc
sub
sub
sti
ret
and
sub
sbb
or
xor
jle
sub
nop
mov
mov
movsb
in
sub
dec
xor
loopne
out
scas
dec
sub
inc
add
sub
inc
or
stos
add
inc
mov
xor
fdivr
movhps
sub
push
inc
cwtl
inc
fildl
lcall
sub
lret
sbb
sbb
sub
xor
sti
mov
adc
inc
xor
lret
adc
sub
xchg
mov
stos
call
xor
inc
mov
add
aam
add
sub
mov
dec
add
dec
cmpsl
iret
idivb
sub
stos
aas
push
cmp
iret
adc
nop
mov
sub
sub
inc
xor
lret
cmp
shrb
sub
inc
add
inc
xor
dec
xor
sub
fmuls
mov
sub
xor
sub
sub
stos
push
mov
iret
insb
aam
fwait
xorb
sub
sub
cmp
and
nop
mov
mov
inc
xlat
and
dec
cltd
les
inc
in
inc
inc
inc
negb
cltd
cmp
and
mov
in
dec
cltd
pop
sub
inc
in
dec
cltd
pop
testb
push
sub
andb
nop
sbb
mov
cmp
sub
negb
sub
adc
dec
cltd
mov
adc
xor
cmp
sbb
sub
nop
stos
call
cmp
inc
les
sub
sub
nop
mov
les
dec
push
stos
add
aam
add
add
fadds
inc
mov
adc
nop
stos
std
mov
sub
subb
cmp
cld
pop
sub
inc
mov
inc
fsubs
mov
inc
cmp
sub
cmp
cmp
shrl
sub
cmp
pop
sub
sub
pop
sub
sub
sahf
sub
sub
loop
sub
cmp
es
sub
imul
cmp
sub
sub
inc
mov
lret
and
or
sub
sub
mov
sub
xor
inc
es
bound
push
out
xor
cmp
push
xor
adc
sbb
in
nop
loope
in
pushf
in
push
push
add
inc
aam
inc
and
dec
cltd
mov
adc
mov
inc
bound
aam
inc
mov
inc
aam
xor
xor
adc
mov
sub
cmp
and
sahf
sub
inc
mov
sub
and
adc
mov
cmp
xor
adc
inc
in
mov
in
mov
out
call
sub
stos
inc
mov
jns
sub
inc
movb
inc
mov
nop
mov
lods
inc
lods
mov
dec
lret
sub
sub
add
xorb
sub
sub
idivb
xor
mov
mulb
stos
idivb
sub
sub
mov
inc
sbb
lret
sub
sub
add
sub
cmp
stos
scas
aas
sub
sub
inc
aaa
lret
sub
sub
mov
add
sub
xor
nop
stos
fdivr
cmp
call
ds
sub
add
enter
inc
xor
stos
movsb
sub
sub
mov
ds
mov
sub
lods
sti
cmp
sub
scas
adc
sbb
out
mov
inc
add
sub
push
inc
stos
xor
inc
mov
inc
or
inc
lods
lcall
mov
sub
sub
adc
lcall
scas
xor
xor
aam
inc
scas
inc
aam
xor
mov
xor
sub
test
mov
add
inc
or
sub
inc
mov
inc
adc
xor
sti
inc
or
sub
repz
lret
movl
push
dec
inc
stos
cmp
mov
std
arpl
sub
cmp
adc
inc
mov
lret
adc
sub
jne
sub
sub
mov
sub
cmpsl
and
sub
cmp
sbb
adc
inc
mov
nop
mov
sub
jnp
jle
sub
lock
xor
mov
xor
inc
mov
cmp
sub
cmpl
inc
mov
cmp
sub
xchg
cmp
sub
sbb
pop
sub
sub
or
sarl
sub
dec
mov
cmp
sub
sbb
or
sub
mov
cmp
push
ret
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
sbb
sub
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
add
aam
sub
iret
mov
sub
add
jle
sub
nop
mov
lods
adc
inc
mov
aas
les
nop
mov
mov
inc
mov
ret
mov
inc
mov
inc
fistl
jle
sub
nop
mov
leave
inc
dec
inc
dec
sub
xor
mov
daa
sub
inc
aam
sti
enter
mov
sub
sub
push
sub
inc
mov
lret
or
push
inc
stos
mov
stos
adc
sub
push
inc
les
addr16
sub
jne
sub
sub
mov
sub
cmp
sbb
adc
inc
mov
nop
mov
sub
pop
insb
jle
sub
lock
xor
mov
xor
inc
mov
cmp
sub
arpl
sub
imul
inc
mov
cmp
sub
sbb
pop
sub
sub
add
sarl
sub
dec
mov
cmp
sub
sbb
add
sub
mov
cmp
push
fwait
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
adc
sub
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
or
aam
sub
iret
mov
sub
or
jle
sub
nop
mov
lods
adc
inc
mov
aas
les
nop
mov
mov
inc
mov
fwait
mov
inc
mov
inc
rcll
jle
sub
nop
mov
leave
inc
dec
test
sub
xor
mov
daa
sub
sub
inc
mov
xor
mov
mov
lret
or
sub
push
inc
stos
mov
stos
adc
les
sub
adc
int3
sub
std
stos
sub
sub
mov
hlt
push
sub
mov
mov
sub
cmp
sbb
adc
cmp
sbb
mov
cmp
xor
sub
lock
xor
mov
xor
inc
mov
cmp
sub
cmp
sub
inc
cmp
sub
dec
cmp
sub
sbb
mov
lods
xlat
fildll
sub
or
roll
sub
sub
sub
sub
add
fistl
sarl
sub
dec
mov
les
inc
les
inc
aam
nop
fldcw
or
xor
dec
mov
cmp
mov
sub
inc
aam
inc
scas
xor
xor
sub
xor
inc
cmp
nop
fldcw
sub
adc
inc
mov
dec
xchg
les
nop
mov
cmp
sub
sbb
push
nop
mov
adc
inc
mov
dec
xchg
les
nop
mov
je
sub
mov
dec
xchg
mov
xor
loopne
stos
test
mov
add
nop
mov
jmp
inc
xor
inc
dec
xlat
fildll
sub
lods
cmp
adc
inc
mov
add
or
aam
sub
iret
mov
sub
or
jle
sub
nop
mov
lods
adc
inc
les
aas
mov
nop
leave
xor
dec
mov
rorl
or
adc
jle
sub
inc
les
nop
mov
adcb
sub
xor
mov
daa
sub
inc
mov
xor
sub
lret
adc
sub
mov
cmp
sti
inc
mov
mov
fs
sub
loopne
mov
call
sub
inc
add
int3
inc
mov
xor
mov
sub
cmp
and
xor
inc
pop
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
mov
xor
sub
lret
sub
xor
sbb
cmp
and
inc
mov
lret
adc
sti
ret
sub
and
xor
mov
inc
les
cmp
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
mov
push
push
lea
call
mov
pop
leave
ret
push
mov
sub
movl
push
lea
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
cmpl
jle
movzbl
rcr
mov
mov
mov
movl
cmp
andl
adcl
lea
mov
movl
movl
mov
mov
cmp
mov
adc
mov
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
movzbl
or
mov
movl
movl
mov
test
jne
mov
cmp
movzwl
sbb
lea
mov
xor
add
incl
cmpl
mov
jb
mov
xor
lea
mov
test
mov
mov
sbb
mov
mov
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
add
mov
andl
movzwl
mov
mov
xor
lea
xor
cmp
jne
movl
mov
test
jne
mov
mov
mov
cmpl
jne
movl
cmpl
jl
mov
mov
xor
cmp
mov
movzbl
sbb
mov
mov
incl
shll
mov
movzbl
movzbl
and
mov
mov
mov
mov
movzwl
xor
mov
mov
mov
mov
dec
mov
or
mov
not
and
mov
movzwl
or
mov
mov
lea
mov
test
lea
mov
mov
mov
sbb
mov
mov
mov
mov
sub
mov
jmp
mov
sub
mov
mov
mov
cmpl
jle
mov
sub
mov
jmp
movzbl
add
mov
mov
or
mov
sub
test
mov
adc
xor
mov
cmp
mov
jne
cmp
jnp
mov
or
jmp
mov
mov
add
mov
sub
mov
mov
mov
mov
mov
mov
push
push
push
andl
subl
orl
push
push
pushl
andl
call
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
xorl
subl
mov
add
push
pushl
movl
cmpl
ja
mov
inc
mov
mov
sbb
mov
sbb
mov
call
mov
mov
jmp
cmp
je
movzwl
and
mov
mov
mov
xor
xor
add
xor
lea
div
movl
shl
mov
pushl
call
mov
mov
xor
mov
xor
xor
lea
xor
mov
cmp
jne
mov
xor
xor
add
lea
div
shl
mov
pushl
pushl
call
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
xor
lea
movl
cmpl
jb
xor
test
lea
mov
mov
movzbl
adc
mov
mov
push
xor
pop
div
cmp
jbe
mov
mov
and
mov
mov
xor
xor
lea
xor
mov
cmp
jne
mov
cmp
jne
lea
mov
jmp
cmp
jne
mov
test
je
mov
mov
sub
mov
add
jmp
cmp
jne
mov
mov
mov
orl
subl
mov
mov
mov
orl
addl
orl
lea
mov
call
mov
mov
jmp
mov
mov
imul
mov
sub
movl
cmpl
ja
mov
mov
sbb
movzwl
and
mov
mov
or
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
mov
movzwl
add
mov
mov
mov
test
movzwl
mov
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
push
movl
cmpl
jge
mov
adc
movzbl
sbb
mov
push
lea
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
cmpl
jb
mov
and
jmp
mov
sbb
mov
mov
adc
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
sub
mov
mov
mov
add
cmpl
je
pushl
pushl
mov
mov
pushl
call
mov
mov
test
movzbl
adc
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
movl
cmpl
jl
mov
or
mov
mov
and
mov
mov
xor
pop
subl
andl
add
pop
leave
ret
push
mov
sub
push
mov
movzbl
or
mov
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
push
movl
cmpl
jge
mov
sbb
mov
or
mov
mov
sub
push
mov
xor
mov
add
mov
movl
call
test
je
call
mov
mov
xor
mov
add
add
mov
mov
mov
shr
mov
movl
mov
movl
mov
test
mov
sbb
mov
mov
mov
mov
mov
or
xor
add
mov
mov
movl
mov
mov
or
movl
movl
movl
lea
mov
lea
lea
mov
mov
mov
xor
mov
lea
lea
mov
mov
mov
xor
mov
lea
test
lea
mov
mov
mov
adc
mov
mov
mov
add
xor
xor
mov
and
mov
add
sub
mov
cmp
je
mov
mov
mov
sub
mov
xor
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
add
movl
cmpl
ja
mov
add
movzbl
xor
imul
mov
mov
mov
mov
rcrb
mov
xor
xor
add
movl
xorl
add
imul
mov
mov
and
mov
movl
mov
mov
and
add
cmp
mov
adc
mov
lea
mov
mov
xor
add
incl
cmpl
jne
mov
movzwl
add
movzbl
xor
sub
test
mov
adc
sub
mov
mov
mov
xor
add
cmp
jne
mov
movzbl
xor
lea
mov
movzbl
xor
add
mov
jmp
xor
inc
test
mov
sbb
mov
mov
and
mov
lea
xor
imul
inc
mov
cmp
jne
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movl
cmpl
jbe
mov
xor
mov
xor
add
ror
xor
mov
cmp
movzwl
sbb
mov
mov
xor
lea
xor
mov
cmp
jne
mov
mov
add
mov
mov
mov
xor
orl
subl
add
imul
xor
mov
mov
xor
mov
addb
lea
mov
xor
xor
mov
sub
add
cmp
jne
mov
mov
rol
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
movl
movl
cmpl
jl
mov
mov
add
mov
sbb
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
mov
add
mov
mov
pushl
lea
push
xorl
call
call
test
je
mov
mov
xor
mov
addl
jmp
mov
cmp
mov
adc
mov
mov
mov
mov
lea
movzwl
add
mov
mov
mov
add
mov
mov
mov
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
mov
xor
add
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
call
add
pop
jne
mov
push
pushl
call
movl
ret
movl
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
mov
xor
add
leave
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
call
cmpl
jb
mov
push
movl
cmpl
jne
mov
rolb
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
mov
mov
sub
xor
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
andl
adcl
orl
call
lea
mov
mov
mov
add
movzbl
mov
sub
mov
mov
xor
pop
add
pop
pop
leave
ret
push
mov
push
mov
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
movl
cmpl
jle
movzwl
sub
lea
mov
mov
mov
or
lea
mov
mov
mov
and
movl
mov
mov
push
cmp
mov
sbb
lea
and
mov
mov
imul
imul
mov
lea
and
mov
or
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
cmp
jp
mov
mov
xor
mov
jmp
mov
mov
and
mov
mov
movzbl
sub
mov
mov
mov
mov
movzwl
or
xor
xor
lea
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
pushl
call
cmpl
jb
xor
mov
imul
mov
cmp
adcl
xorl
subl
and
mov
xor
add
movl
cmpl
jl
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
push
mov
push
push
pop
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
test
jne
movl
cmpl
jge
mov
sbb
movzwl
or
mov
sbb
mov
mov
push
push
lea
mov
push
pushl
pushl
call
add
mov
jmp
cmp
jne
cmp
je
mov
sub
jmp
mov
adc
mov
mov
or
mov
mov
pushl
push
push
push
push
movl
orl
pushl
pushl
call
add
dec
jne
pop
pop
ret
push
mov
sub
call
cmp
jne
xorl
xor
leave
ret
movl
lea
movl
mov
call
movl
mov
lea
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
call
movl
cmpl
je
movzwl
add
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
call
mov
cmpl
js
mov
or
jmp
mov
sub
mov
orb
mov
mov
mov
mov
mov
xor
mov
mov
mov
inc
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
cmp
mov
mov
sbb
mov
mov
sub
mov
movzbl
xor
mov
leave
ret
push
mov
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
ja
mov
xor
mov
not
mov
mov
add
mov
movl
mov
xor
add
mov
mov
mov
lea
push
mov
xor
add
cmp
movzwl
adc
mov
push
pushl
add
pushl
push
push
mov
add
mov
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
movl
cmp
movzwl
movzbl
adc
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
movl
cmpl
ja
lea
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
xor
push
mov
movzwl
ror
mov
add
mov
mov
mov
mov
xor
mov
mov
push
mov
rclb
pop
sub
add
cmpl
mov
mov
pop
jne
mov
cmp
orl
subl
sbbl
xor
add
leave
ret
push
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
movl
movl
cmpl
jbe
movl
movl
movzwl
mov
sub
mov
mov
mov
push
push
mov
lea
mov
mov
movzbl
sub
mov
xor
xor
mov
sub
mov
sub
mov
mov
mov
movl
mov
movzbl
movzbl
xor
mov
xor
mov
add
push
mov
mov
mov
mov
or
mov
orl
mov
imul
mov
movl
addl
mov
mov
or
mov
mov
mov
xor
lea
mov
mov
cmpl
jns
movzbl
rol
mov
jmp
mov
sub
mov
mov
sbb
mov
xor
mov
add
mov
xor
movzwl
add
cmp
ja
movl
mov
add
mov
mov
movzwl
or
mov
mov
xor
mov
add
mov
movzwl
cmp
jne
mov
mov
xor
add
imul
mov
movl
cmpl
jg
mov
mov
push
call
test
je
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
add
movzbl
movzwl
xor
push
mov
mov
xor
add
imul
mov
mov
call
test
jne
cmpl
jne
lea
mov
mov
mov
adc
jmp
mov
mov
sub
mov
mov
mov
adc
mov
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
mov
mov
call
test
jne
movl
mov
mov
xor
lea
mov
xor
xor
cmp
orl
sbbl
xor
xor
mov
lea
mov
add
movzwl
cmp
mov
jbe
jmp
movl
cmpl
jb
mov
movzwl
add
mov
movzwl
movzbl
sbb
mov
movzwl
mov
xor
mov
movl
mov
mov
xor
xor
addl
orl
lea
xor
mov
xorl
mov
movzbl
or
mov
mov
xor
add
imul
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
movzbl
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
movl
cmpl
jle
mov
mov
adc
andl
mov
xor
sub
add
movzwl
xor
mov
mov
mov
imul
mov
jmp
mov
xor
sub
add
mov
addl
test
mov
mov
sbb
mov
mov
mov
xor
add
cmp
je
addl
jmp
mov
mov
and
mov
mov
xor
lea
mov
jmp
orl
mov
mov
and
mov
mov
imul
mov
mov
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
cmp
pop
pop
pop
je
movl
cmpl
jb
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
mov
or
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
push
movl
cmpl
je
push
mov
xor
movl
mov
cmp
movzwl
mov
sbb
mov
add
movl
mov
mov
mov
xor
movzbl
movzwl
and
mov
add
mov
mov
mov
mov
cmp
jne
movzwl
movzwl
sbb
mov
jmp
mov
mov
adc
mov
mov
mov
xor
mov
mov
mov
mov
mov
lea
mov
cmp
mov
mov
adc
mov
mov
mov
lea
mov
mov
mov
cmp
mov
movzbl
adc
lea
mov
mov
mov
lea
movzbl
movzbl
xor
mov
mov
mov
movl
cmpl
jbe
mov
mov
or
mov
mov
lea
mov
mov
movzbl
add
mov
pushl
mov
mov
push
add
mov
push
lea
push
cmp
lea
mov
mov
mov
adc
mov
mov
mov
mov
movl
andl
mov
pushl
pushl
call
cmp
movzbl
sbb
mov
add
push
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
xor
lea
cmp
je
mov
lea
mov
mov
mov
xor
mov
xor
cmp
movzbl
adc
add
mov
movzbl
mov
xor
mov
mov
mov
mov
xor
add
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
mov
add
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
jmp
cmpl
jne
push
pushl
pushl
pushl
call
cmp
movzwl
mov
adc
mov
lea
mov
mov
mov
mov
mov
and
mov
mov
mov
add
movzwl
mov
and
mov
pop
mov
mov
mov
mov
xor
mov
mov
sub
mov
mov
mov
xor
leave
ret
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
lea
xorl
mov
lea
mov
push
lea
mov
push
lea
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
subl
push
push
mov
call
mov
pop
mov
mov
cmp
jne
mov
lea
mov
cmp
jne
movl
cmpl
jg
mov
and
mov
add
mov
mov
add
mov
jmp
cmp
jne
movzwl
movzwl
and
mov
mov
mov
mov
add
jmp
cmp
jne
movl
mov
mov
movl
jmp
cmp
jne
mov
add
mov
mov
mov
mov
cmp
ja
mov
movzbl
and
mov
mov
xor
cmp
subl
xorl
adcl
inc
xor
mov
cmp
jne
mov
cmp
je
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
mov
or
mov
mov
movl
cmpl
jl
add
xor
mov
mov
cmp
je
cmpl
jne
cmp
je
cmpl
je
cmpl
jne
mov
jmp
mov
addl
xor
add
cmp
jae
mov
mov
or
mov
movzwl
mov
dec
cmp
ja
mov
cmp
jnp
mov
or
jmp
mov
sbb
mov
mov
add
addl
mov
andl
xor
add
imul
movzwl
mov
lea
push
mov
xor
add
imul
mov
mov
add
push
pushl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
cmp
mov
sbb
mov
call
cmpl
je
movl
cmpl
jne
mov
mov
and
mov
mov
add
mov
mov
movzbl
xor
mov
mov
mov
xor
inc
xor
mov
mov
jmp
mov
mov
and
mov
mov
add
xor
mov
mov
cmp
je
xor
mov
mov
mov
sub
mov
add
mov
mov
mov
mov
or
mov
imul
mov
mov
mov
mov
mov
mov
xor
mov
imul
xchg
dec
dec
cmp
jne
mov
cmp
lea
mov
mov
mov
sbb
mov
mov
xor
lea
mov
add
test
mov
shl
mov
mov
mov
subl
add
dec
jne
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
movl
cmpl
ja
mov
call
mov
jmp
xor
pop
pop
pop
leave
ret
cvtdq2ps
and
sub
fldt
add
mov
in
inc
mov
repnz
inc
dec
adc
push
icebp
xor
adc
sbb
lahf
pusha
xchg
mov
lods
and
jo
mov
push
nop
adc
xchg
daa
xchg
cwtl
pop
and
test
xchg
outsl
push
pop
divl
jae
xor
dec
rclb
push
xchg
shlb
leave
xor
jge
pop
and
addr16
ret
pop
pop
dec
daa
divl
and
and
xlat
jb
imul
xchg
addl
adc
cmc
pop
lods
int3
jle
adc
push
arpl
mov
pop
std
xor
adc
lds
jg
dec
push
call
xchg
cmp
out
daa
addr16
add
xchg
outsl
mov
inc
mov
iret
adc
cmp
int
icebp
outsl
ljmp
movsb
adc
xchg
mov
dec
int3
data16
push
dec
repz
pusha
inc
and
add
push
inc
cwtl
ja
pop
and
sbb
int
mov
push
push
repz
sbb
lds
adc
sbb
orb
mov
bound
inc
mov
inc
jb
and
repz
aam
std
xor
movsb
dec
cmp
xor
jp
dec
scas
insl
jmp
pop
dec
add
cmp
icebp
inc
shl
xor
out
sub
orl
scas
inc
dec
insb
dec
xchg
outsb
adc
xchg
push
lea
add
dec
fldenv
push
ror
fs
fmulp
and
pop
jbe
out
in
pop
adcl
out
jae
fisubrl
fcomps
iret
incb
cmp
ret
sub
push
in
mov
ljmp
xchg
mov
xchg
addr16
mov
fsubrs
push
fcmove
xorb
aas
icebp
stc
jae
mov
adcl
jmp
xlat
xchg
roll
out
mov
mov
mov
fisubrs
push
cmovnp
push
mov
outsl
push
cmpsl
leave
sbb
int3
test
xchg
fidivrs
xchg
scas
stos
sub
aad
lods
cli
push
inc
or
mov
xchg
adc
dec
arpl
cmp
loop
push
jns
icebp
in
jae
cld
mov
cli
cmp
movsb
pop
dec
imull
and
call
add
pop
clc
imul
mov
xchg
aam
int3
dec
ret
mov
pop
sub
xchg
xchg
mull
mov
and
cli
inc
stos
jb
mov
add
mov
jg
sbb
add
lods
lock
lret
stc
sub
or
fwait
lods
cmp
imul
push
movups
ret
fldenv
and
dec
sarl
mov
sub
add
pusha
out
loope
ljmp
mov
sbb
into
cmp
inc
rol
out
mov
jp,pn
cmpsb
jns
xchg
daa
rcrb
pop
fildll
test
repz
sub
in
push
pop
scas
dec
and
push
les
push
stos
push
addr16
or
cmp
xor
sbb
push
ror
add
inc
push
arpl
add
jo
inc
cmc
jbe
roll
fsubs
mov
mov
add
push
inc
stos
in
cmp
mov
cmp
popa
shl
jae
push
sub
push
idiv
int3
xchg
xor
sahf
and
enter
cmpsb
push
add
sbb
mov
jp
jecxz
sub
sbb
out
fnsave
nop
mov
cmp
jne
lcall
fs
sbb
ret
cs
inc
pushf
fwait
and
xor
ds
xor
xor
xor
dec
dec
leave
inc
in
jns
pop
movsl
in
cmp
cmp
and
call
nop
mov
out
xchg
dec
outsb
dec
inc
cmc
or
pusha
test
rorb
jnp
mov
jp
imul
jmp
lock
mov
push
xlat
adc
push
add
and
daa
or
xor
adc
dec
out
pop
or
imul
cmp
and
mov
mov
popa
ret
pushf
stos
inc
sub
jge
pusha
js
sub
dec
mov
les
push
xchg
test
jbe
outsb
mov
in
outsl
push
iret
jbe
pop
cwtl
sbb
fildl
pop
arpl
sub
mov
mov
xor
movsb
out
mov
inc
mov
jge
lahf
bound
seto
xchg
add
pop
mov
mov
loop
xorb
popf
xor
imul
hlt
enter
mov
push
movsl
add
inc
int
fidivl
pop
shlb
jp
popf
je
inc
push
mov
orl
add
lret
cmp
jle
pop
adc
push
je
scas
gs
test
mov
int3
push
dec
add
lods
movsl
call
movsb
jg
sub
mov
icebp
and
sub
lcall
push
sbb
cmc
push
popa
cmpsb
mov
scas
jecxz
jmp
mov
mov
sti
dec
inc
popa
mov
adc
and
inc
xchg
xchg
mov
add
clc
loopne
in
movsl
and
icebp
add
cs
je
bound
push
ds
outsb
icebp
dec
add
test
jne
setnp
sub
cmpsl
popa
shl
jbe
fisubs
jg
jo
xchg
jmp
pop
jl
aas
ret
test
fs
scas
xchg
sub
test
xor
or
lahf
sub
push
dec
fidivrs
cvtps2pi
xchg
pop
jb
sahf
lcall
jecxz
hlt
jmp
mov
xchg
xchg
int3
xchg
xchg
ja
or
push
lret
ds
push
popf
mov
xchg
popa
int3
and
jg
lcall
inc
adc
lcall
lds
lods
jp
xchg
pop
popf
jle
cli
cli
inc
mov
iret
pop
inc
mov
test
xchg
fdivr
insl
scas
into
popa
ret
and
pop
insl
xchg
scas
mov
in
sbb
mov
sahf
lock
stos
dec
std
std
or
dec
or
jle,pt
mov
test
loope
pop
loopne
ja
cmp
aas
mov
and
movsb
jb
jo
xor
adc
xlat
push
cmpsl
sub
jecxz
xor
or
std
or
les
popa
test
les
add
sub
and
je
jns
sarb
aad
adc
push
mov
das
dec
cld
loopne
std
scas
pop
repz
jl
push
and
push
pop
imul
jo
mov
pop
jecxz
rol
lock
pop
fwait
push
pop
out
call
xchg
add
xchg
mov
add
int3
cmp
mov
into
jmp
sbb
xor
pusha
mov
jg
test
xor
push
outsb
pushf
add
mov
cmp
cmpsl
add
xchg
jbe
cmp
jnp
lret
inc
cmp
subl
mov
pop
xchg
mov
lods
aam
adc
dec
xor
prefetch
test
push
in
enter
movsl
idiv
or
xchg
or
dec
js
lods
adc
adc
jmp
mov
dec
pop
add
stos
data16
mov
pop
aas
dec
imul
xorl
adc
ret
stos
jmp
mov
xchg
outsb
pop
shrl
pop
push
lods
test
xchg
sarb
push
inc
sub
dec
pop
lds
ljmp
and
push
fwait
jne
out
cmpsb
sbb
iret
or
dec
imulb
and
and
pop
adc
dec
xchg
dec
push
cwtl
incb
loopne
call
xor
hlt
test
pop
ja
fdivrs
lods
lods
das
mov
sub
mov
out
cmc
pop
jge
mulb
jbe
pop
cld
cmp
mov
aas
loop
lret
jmp
cmp
add
sbb
cmpsl
add
push
mov
or
push
lret
or
jae
or
mov
jno
lret
outsl
inc
je
push
mov
push
inc
pop
fs
mov
pop
rcrb
inc
mov
and
xor
mov
lock
mov
dec
push
dec
jg
jg
test
into
or
mov
jo
sub
popf
out
lock
and
je
xchg
add
mov
sbb
fwait
dec
repnz
aad
int3
inc
scas
xor
cs
imul
roll
pop
inc
cmpxchg8b
push
mov
insl
cltd
in
xchg
imul
iret
mov
mov
push
inc
rcll
lahf
fstl
adc
or
sub
mov
loope
outsb
das
stos
daa
add
jnp
add
cmp
cmp
cmp
mov
movsb
lret
pop
mov
out
fsts
enter
push
enter
sbb
iret
cli
dec
jns
inc
or
loope
cltd
jne
jns
add
sbb
mov
sub
xchg
push
or
shrl
push
cmpsb
pop
mov
cwtl
push
xorb
inc
les
pop
xor
adc
dec
bsr
inc
pop
push
mov
fnsave
ret
das
inc
cmp
add
or
std
leave
sahf
cli
repz
add
ja
push
cmp
pop
popa
fildl
xchg
dec
retw
arpl
jge
mov
push
addb
or
loope
aam
mov
cli
jp
fldenv
out
mov
inc
lea
mov
shll
test
sbb
jnp
mov
mov
jmp
and
push
cmp
mov
push
fstpt
in
and
cli
mov
loopne
lretw
mov
mov
insl
mov
das
outsb
jge
sbb
repnz
int
in
push
rcl
cmc
arpl
out
push
lds
cmp
mov
shl
stc
dec
xor
pop
pop
addr16
cwtl
outsl
add
sahf
sub
dec
or
xchg
int
mov
push
mov
dec
popa
aaa
push
into
rcr
ret
stos
cmp
sti
rcrb
insb
cmc
mov
xor
jb
cmp
fldcw
mov
ret
loopne
scas
push
loop
arpl
popf
les
dec
mov
out
add
mov
xor
or
mov
add
xor
imul
ljmp
cmp
xchg
in
shr
mov
inc
aaa
imul
push
and
pop
pusha
nop
jle
mov
mov
cmp
rcll
mov
xor
lret
cld
mov
and
sarb
xor
push
xor
loope
and
ljmp
decl
or
pop
mov
xor
sbb
mov
push
gs
fiaddl
mov
add
push
push
test
cmc
sub
mov
dec
in
jge
movzwl
aaa
inc
sub
cmpl
dec
in
addr16
test
inc
mulb
or
or
insb
cmp
push
push
in
jmp
int
lahf
es
mov
shlb
mov
or
sbb
js
adc
stc
mov
outsb
push
mov
fwait
mov
neg
jno,pt
enter
lods
or
xchg
in
outsl
daa
sahf
add
sar
rcl
lods
scas
neg
sahf
fcoml
or
inc
ret
xchg
scas
push
cltd
xchg
and
pop
pop
test
inc
insl
dec
xchg
into
hlt
sti
sti
inc
cmp
mov
jnp
clc
imul
jno
sub
inc
mov
xchg
adc
mov
cmp
insl
and
pusha
dec
xor
and
xlat
sbb
call
fidivs
mov
or
cli
and
mov
pusha
fistpl
jmp
push
xchg
daa
out
or
mov
fwait
enter
mov
mov
push
imul
test
pop
pop
jbe
sbb
dec
addr16
shrl
mov
fisttps
xor
mov
scas
or
xchg
inc
xor
in
inc
pop
jbe
mov
sub
insb
outsb
xchg
adc
pushf
xchg
scas
and
xchg
cmp
or
add
imul
mov
mov
xchg
pushf
pop
cmpsb
mov
mov
adcb
cmp
andl
mov
add
lods
out
pop
mov
add
popa
dec
pop
mov
lods
dec
lods
sub
out
cmp
mov
mov
out
or
xlat
cmp
cltd
push
xchg
out
push
mov
in
orl
and
mov
jbe
enter
dec
sub
pop
neg
or
and
mov
ds
cmpsb
or
mov
inc
xlat
mov
cs
and
jns
mov
test
pop
cli
sbb
shrb
xchg
mov
pop
inc
push
or
stos
pop
jmp
popa
pop
sbb
cwtl
jp,pn
or
test
sub
jmp
pop
adc
cld
fwait
adc
mov
xorl
pop
cmc
sub
push
sub
inc
xchg
push
dec
push
dec
or
add
cmp
fildll
addr16
mov
push
cli
xor
aaa
push
add
pusha
dec
sub
mov
bswap
mov
add
je
outsl
mulb
incb
jg
push
jbe
vmread
pushl
xchg
pop
sbb
pop
or
xor
outsl
cmp
dec
dec
stos
mov
cmp
pop
in
mov
fidivs
sub
or
aas
mov
pushf
test
ss
dec
clc
mov
pop
sub
lods
cmp
cmpsb
mov
mov
and
imul
repz
mov
mov
ss
jo
adc
mov
scas
lcall
enter
mulb
mov
fwait
sar
adc
dec
fmul
push
xchg
sarl
adc
mov
test
jp
loopne
pop
mov
outsl
lds
and
test
mov
mov
shl
fldt
imulb
or
out
cmpsl
sub
fistpll
std
in
push
pop
inc
daa
and
int3
hlt
ror
push
xchg
in
dec
sahf
out
xchg
inc
scas
test
mov
and
jns
fidivs
dec
adc
popf
or
fdivrs
repz
mov
and
adcl
mov
out
imul
and
in
inc
xchg
add
cwtl
push
add
mov
stc
cmpsb
aaa
inc
les
inc
mov
mov
inc
ds
push
test
scas
and
lea
test
cmp
pop
test
hlt
and
pop
xchg
daa
xchg
lds
dec
in
ss
inc
or
jb
in
fwait
mov
in
pop
mov
pop
scas
sub
xor
jmp
gs
ss
and
mov
push
adc
ljmp
addr16
cmp
cmc
cs
pop
lret
sub
cmp
xchg
xchg
lods
mov
pop
jp
sub
and
scas
mov
repnz
jl
cmp
xor
jno
or
mov
xchg
into
clc
ss
das
push
inc
leave
lahf
lea
fdivrl
sub
int
pop
fs
daa
cmp
int3
test
sub
push
and
insb
inc
jnp
fcomps
pop
fiaddl
cmc
es
fidivl
loopne
sbb
into
adc
mulb
test
es
es
outsb
pop
push
out
jo
xor
xlat
mov
aad
ret
mov
fcmovne
xchg
cmp
clc
pop
lock
lcall
fists
sbb
mov
xchg
inc
cmp
mov
lret
jg
in
add
repz
inc
in
les
shll
test
or
lcall
mov
rcr
clc
fisttpll
pop
mov
mov
sbb
jge
nop
leave
je
jne
out
ljmp
push
dec
adc
xlat
dec
jecxz
movsl
lcall
push
pop
sub
je
ret
in
xor
aaa
aam
cmp
and
int3
and
adcl
add
push
cltd
add
std
pop
mov
add
mov
popa
pop
pop
cld
pop
mov
cmp
pushf
outsl
into
lods
enter
scas
mov
in
cltd
inc
dec
mov
jbe
lret
add
jno
xchg
repz
data16
and
adc
or
addr16
loop
mov
lcall
lcall
push
mov
cmpsb
jp
je
sbb
popa
sub
adcl
or
pop
mov
push
in
movsl
push
fcoml
add
fs
xor
sbb
sbb
arpl
outsl
adc
dec
out
or
push
inc
imul
jg
test
xor
jl
mov
call
ljmp
mov
and
les
xchg
sbbb
addr16
shlb
sub
popa
mov
es
or
sti
dec
dec
xor
mov
fsubrp
fidivl
and
movsl
mov
les
stos
xchg
push
jno
ret
mov
flds
stos
push
jge
inc
or
es
push
push
mov
push
scas
push
sub
test
daa
push
or
lods
push
push
jl
pop
icebp
sarb
xchg
ds
lret
xor
nop
jmp
stos
jo
xchg
fildl
dec
test
and
sub
lret
inc
cmp
mov
and
xchg
imul
xchg
mov
add
cmp
fiaddl
pop
push
xchg
pusha
pop
ss
xor
xchg
and
sub
int3
sahf
dec
dec
ja
lock
cmc
xchg
ftst
std
sbb
jecxz
mov
loope
jb
cli
cmpsl
lock
cli
mov
xor
xor
jg
add
jne
push
mov
push
mov
or
adc
or
mov
cmpps
lds
sbb
dec
add
xchg
push
ja
sub
mov
sbb
sub
ja
or
push
mov
sbb
dec
cmc
mov
jns
lcall
orl
pop
pop
fists
or
shr
jp
repz
dec
dec
sti
fcoms
fildll
lahf
mov
mov
inc
push
xchg
lock
mov
or
stc
iret
movsb
cmp
or
xchg
inc
cwtl
dec
inc
adcb
push
sahf
xchg
adc
push
ret
cltd
idiv
test
mov
aaa
mov
icebp
push
cmc
int
sub
orl
inc
and
fwait
in
mov
daa
mov
pop
sub
mov
out
adc
out
push
cwtl
xchg
fstl
mov
jb
jge
outsb
xor
jb
imul
rcrl
mov
fisubs
or
push
pushf
les
jg
xchg
cld
repnz
sub
je
add
pop
lret
xlat
or
mov
cmc
add
mov
adc
xchg
stc
in
mov
push
movsb
cmc
scas
fiadds
in
push
jecxz
cmp
ja
or
inc
je
in
push
clc
ret
sub
pushf
aaa
mov
pusha
fildll
mov
xor
fidivrl
ss
lds
push
fwait
sub
and
adc
in
addb
mov
xor
cld
xorb
outsb
or
dec
bound
aaa
pop
jmp
pop
push
xchg
inc
stc
stos
mov
mov
jnp
ja
sbb
sbb
iret
js
sbb
push
jmp
dec
rcll
ss
popf
or
push
xchg
js
add
jno
lods
and
and
adc
sub
add
adcb
cmp
into
jnp
cli
jg
iret
mov
cwtl
mov
inc
mov
push
int3
jl
mov
hlt
stos
push
adc
mov
jmp
push
aaa
pop
mov
decb
push
imul
inc
jg
sub
xchg
dec
clc
jae
nop
movsb
inc
outsl
mov
cmpb
ds
xor
sbb
push
sbbb
nop
fldl
fsts
addr16
push
aad
xor
lds
lock
sbb
lea
cmp
add
cmc
pop
sbb
mov
rorl
push
clc
jl
mov
add
fstl
stc
xor
inc
sub
std
xchg
fmull
data16
jge,pn
fisubl
stos
fildl
xchg
and
push
inc
sbb
add
insl
sahf
and
xor
xlat
add
popa
sbb
xchg
repnz
dec
pop
decl
ja
imul
fcoml
mov
cwtl
xchg
fcmovb
cmp
inc
ss
lock
add
sbbl
enter
xchg
addr16
pop
xor
pop
fidivs
and
pop
imul
outsl
and
shll
ret
aaa
or
xchg
push
fldl
stc
mov
pop
mov
push
or
jmp
ss
dec
loop
insl
leave
pop
into
fisttpll
test
roll
cmpsl
sti
add
jns
jo
aas
pop
pop
scas
mov
pop
sub
xor
addb
inc
hlt
nop
fidivrs
lods
sub
data16
mov
sub
aad
fdivrl
or
jno
lret
add
xor
or
test
rolb
lds
push
scas
out
es
push
out
dec
sbb
dec
push
push
jo
fidivrl
shl
mov
lahf
xor
xlat
fbld
imul
pop
sub
inc
cmp
hlt
loop
cmp
jecxz
and
clc
lds
jp
mov
add
lcall
test
push
bswap
cli
inc
ret
mov
in
pop
popa
mov
push
push
shrl
push
pop
loop
mov
insb
sti
fcoms
inc
jle
setnp
jae
xchg
adc
repz
in
sub
sbb
xor
hlt
insl
and
cmp
stos
and
sub
out
or
sti
mulb
lret
gs
jnp
imul
xor
pop
or
xlat
mov
test
popf
jecxz
pop
movsl
call
pop
dec
mov
push
push
pop
jp
push
loope
imul
repnz
es
mov
push
gs
inc
js
dec
mov
dec
mov
rcl
lcall
lods
adc
pop
loopne
or
dec
mov
add
ficompl
push
push
notl
fldcw
add
roll
or
ljmp
adc
mov
push
shlb
punpckhwd
jl
jo
and
inc
dec
outsb
jb
jne
test
jmp
push
sbb
pop
cltd
mov
das
nop
xor
dec
cmp
ss
cmp
mov
and
xchg
dec
inc
push
push
mov
add
fildll
dec
sbb
inc
cmp
pop
sahf
mov
lret
xchg
adc
je
jo
test
jp
jecxz
adc
sbb
jns
arpl
pop
xchg
push
mov
cmc
jge
jns
or
mov
sub
cmp
mov
cmp
vxorps
roll
pop
fisttpl
mov
syscall
leave
gs
test
and
fwait
push
push
push
add
push
pushf
jns
add
jmp
xchg
jo
outsb
push
add
js
data16
add
lds
cmc
movsb
cli
sbb
fadds
aam
push
xchg
cmp
sahf
stos
loopne
cs
mov
ja
pusha
adc
leave
xchg
sahf
push
mov
xor
jge
dec
mov
addl
and
iret
mov
subb
fcoms
jae
jbe
ss
cmpb
pop
shr
int
xor
cmp
in
sti
mov
mov
scas
dec
or
incl
insb
pop
negb
pop
fisttpl
lock
hlt
push
lods
repz
push
pop
les
mov
mov
push
outsl
push
cmp
mov
pop
mov
xchg
jmp
inc
jecxz
jnp
hlt
ret
xor
mov
sbb
mov
jne
jg
das
adc
lock
dec
lds
mov
mov
mov
arpl
ja
cmp
in
movsl
ds
hlt
test
push
test
int3
and
xchg
jge
push
cmpsl
jns
nop
js
push
outsb
ffree
sbb
or
dec
inc
lret
push
dec
into
popf
add
mulps
dec
jmp
jp
mov
sti
nop
xchg
test
adc
mov
loopne
clc
in
mov
jne
jo
outsl
adcb
cmpsb
fcmovu
inc
mov
sbb
ja
subl
popa
outsb
test
in
stos
les
int
aam
xchg
cltd
inc
out
outsb
orb
xlat
test
or
outsb
jns
frstor
movsb
mov
push
inc
cmpb
mov
and
mov
test
pop
xchg
inc
ljmp
and
jo
jne
push
fistps
mov
ret
stc
mov
bound
sbb
scas
pop
push
jle
cli
mov
cmp
mov
dec
jbe
adc
dec
aam
jns
xor
shrb
jbe
mov
rcr
and
movsl
add
insl
scas
mov
test
pushf
mov
ret
jl
js
std
cld
std
xor
jno
out
es
fwait
xor
out
mov
mov
in
sti
cmc
jle
or
xchg
rorl
leave
sbb
sub
or
jo
cwtl
leave
addb
das
inc
mov
jge
les
lds
jge
fnstenv
dec
push
aam
pop
movd
add
inc
imul
mov
add
out
aad
sti
rcr
sbb
mov
in
xor
mov
pop
jp
pop
leave
dec
and
mov
orps
add
inc
adc
ja
cltd
xor
pop
fsubrp
in
mov
das
or
cld
pop
adc
insl
fcompl
ret
sbb
in
lret
mov
fistpl
clc
aaa
push
loopne
dec
imul
ljmp
or
fwait
jno
sbb
es
fbstp
sbb
ret
pop
xchg
mov
mov
jns
sbb
pop
pop
imul
xor
pop
mov
sar
sbb
arpl
aam
mov
jnp
sbb
cmp
rol
mov
fisubl
in
aas
cmpsb
mov
and
sbb
mov
sub
out
out
ljmp
cmp
in
outsl
es
dec
clc
mov
loope
stos
xchg
mov
xor
insb
sbb
add
fbstp
test
int3
mov
neg
imul
es
sbb
push
rclb
pop
or
and
lea
outsb
or
sahf
and
push
or
loope,pn
add
jae
push
mov
es
imul
movsl
popa
adc
aam
pushf
popa
push
arpl
popa
adc
dec
arpl
jge
push
jno
sbb
dec
fcmovnu
fs
movsl
bound
jbe
lret
jl
cmp
cmp
cmp
mov
mov
aas
ret
and
xor
aaa
aad
leave
pop
and
in
mov
add
or
add
add
add
add
add
das
add
add
add
pusha
add
add
add
flds
add
add
add
add
outsb
add
add
xor
add
mov
add
add
push
add
addl
pusha
add
add
add
add
add
add
add
mov
add
xchg
add
add
add
add
cmpsl
add
jg
add
add
add
add
scas
add
add
mov
or
leave
and
pop
sub
pop
loop
mov
in
or
cmp
insb
jb
ja
roll
cmp
cmc
mov
mov
pop
xchg
push
dec
mov
ljmp
mov
lret
push
mov
jmp
cli
mov
adc
mov
jno
mov
les
les
out
lods
and
xchg
jno
loopne
clc
inc
mov
scas
popf
jge
pop
mov
js
adc
dec
push
stos
mov
adc
adc
mov
xor
xchg
loope
pop
fstps
jecxz
fmuls
xchg
add
inc
arpl
push
cmc
fstpt
pop
pop
clc
inc
dec
ret
mov
jno
in
adc
insb
adc
les
loopne
lret
push
sub
cwtl
xchg
mov
sub
rolb
mov
mov
push
jmp
xor
outsl
dec
xor
and
jmp
clc
mov
push
jecxz
add
mov
add
pop
or
int
dec
into
add
clc
adc
stos
xor
stos
mov
addb
inc
cwtl
out
and
cmp
jmp
mov
jo
aas
icebp
cwtl
xchg
mov
pop
mov
pop
sbb
push
andb
imul
cmp
shrl
scas
push
add
jg
xchg
inc
mov
scas
adc
jmp
inc
insl
insb
mov
lret
sbb
aas
inc
cli
fistpl
pusha
cmp
cmp
ljmp
push
cwtl
in
cmp
inc
lock
decl
clc
mov
lods
arpl
std
enter
adc
pop
xchg
cmp
sub
ret
push
sbb
cmp
jb
add
push
mov
adcb
fnstenv
dec
notl
fiadds
cld
movsl
push
lea
mov
es
dec
lods
testb
or
cltd
je
xchg
push
jmp
test
dec
sub
pop
cmp
ja
cmp
lcall
rorb
jp
out
pop
cmp
stos
sbb
aam
and
imul
jne
test
or
ljmp
fsubr
pop
add
fdivrs
adc
pop
or
or
cltd
enter
aaa
test
gs
add
sahf
lret
movsb
add
jnp
fidivrs
notb
or
mov
pop
in
sbb
shr
adc
std
add
mov
xchg
movsb
jg
mov
inc
dec
cmpsb
xor
shrb
ja
das
hlt
aad
and
pop
and
jbe
sub
es
dec
insb
sbb
lods
je
push
js
mov
push
mov
pusha
push
imull
mov
add
mov
xchg
add
push
add
add
xchg
add
add
push
add
add
push
add
add
add
add
add
add
add
add
movb
add
add
lahf
add
add
lds
add
dec
push
jge
add
add
add
clc
add
add
mov
add
add
add
add
add
rolb
xor
add
add
add
add
mov
or
add
add
add
add
lret
mov
mov
add
add
add
add
fs
add
mov
add
adc
add
add
mov
add
or
add
xchg
mov
add
adc
add
mov
add
mov
add
add
mov
add
mov
add
add
add
mov
add
mov
add
add
pop
mov
add
add
xorb
add
add
add
mov
add
mov
add
mov
add
mov
add
add
es
add
mov
add
add
pop
mov
add
add
jp
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
insb
outsb
add
insb
add
outsb
add
outsb
je
insb
insb
cs
insb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
outsb
fs
insb
outsl
jae
inc
push
dec
outsl
je
imul
outsl
outsb
add
inc
gs
jns
je
insl
push
imul
imul
jns
add
mov
je
push
add
or
dec
jae
popa
insb
imul
addr16
jb
jne
add
inc
add
outsb
arpl
dec
outsl
add
repnz
je
imul
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
insb
add
mov
dec
outsl
popa
fs
arpl
insb
gs
je
jb
inc
add
push
inc
outsl
jo
push
arpl
xchg
inc
gs
jb
jns
popa
jb
je
add
push
inc
push
imul
outsl
insl
push
outsl
imul
test
inc
jb
ja
fs
cmp
inc
gs
outsb
jne
je
insl
push
arpl
pop
inc
gs
imul
outsb
addr16
add
push
or
jae
jb
outsb
je
push
add
jp
inc
gs
imul
outsb
addr16
add
inc
pop
inc
gs
gs
popa
addr16
outsl
jae
or
dec
gs
push
outsl
inc
push
data16
add
pop
push
inc
push
gs
add
inc
push
xor
cs
insb
add
mov
inc
gs
insb
imul
cwtl
push
push
gs
gs
inc
insb
imul
inc
gs
push
fs
xor
push
add
push
inc
gs
gs
inc
js
outsb
je
js
outsl
imul
push
gs
dec
push
xor
movsb
push
push
je
jb
inc
outsl
arpl
inc
inc
dec
xor
cs
insb
add
outsl
pop
bound
jno
imul
jo
jbe
add
popa
push
jo
jp
inc
push
js
inc
dec
fs
jae
bound
jae
add
add
cmp
add
add
add
add
add
add
add
add
dec
mov
add
add
push
mov
add
mov
add
add
dec
dec
jp
xor
cs
add
push
dec
push
jne
inc
popa
imul
jbe
bound
pop
push
dec
push
inc
dec
inc
pop
add
addr16
jns
and
add
and
add
fs
imul
dec
insl
pop
je
imul
push
push
push
push
jno
push
push
dec
jne
imul
arpl
jns
outsb
pop
jne
push
add
imul
push
insl
jbe
addr16
bound
outsl
and
dec
fs
dec
push
jns
outsw
jne
add
push
jns
ja
outsb
je
dec
push
inc
push
popa
add
pop
je
insb
jne
push
jae
push
add
insl
jbe
and
push
outsl
js
jo
je
imul
.byte
js
outsb
pop
popa
add
outsb
imul
jp
jbe
push
je
push
arpl
imul
inc
add
rolb
rolb
rolb
add
or
push
add
add
cmp
inc
add
add
inc
add
and
cld
dec
inc
add
inc
add
add
ljmp
add
or
cld
fdivrp
push
push
push
push
push
push
push
push
dec
jl
inc
add
rolb
rolb
rolb
add
add
inc
add
inc
add
add
rolb
jge
add
rol
inc
add
add
inc
add
add
rolb
rolb
rolb
rolb
rolb
add
add
add
add
add
add
std
std
decb
std
repnz
pusha
std
idiv
xor
std
leave
cmp
into
std
dec
rcll
rclb
idiv
ss
std
decb
std
repnz
pusha
std
idiv
xor
std
leave
incb
std
into
std
dec
shll
shlb
idiv
ss
std
decb
std
idiv
arpl
lret
std
dec
shll
shlb
and
inc
aaa
push
ss
lock
std
std
decb
std
icebp
arpl
idiv
cmp
lret
dec
roll
inc
and
push
aaa
pusha
lock
std
std
decb
std
icebp
arpl
idiv
push
std
lret
dec
rcll
push
and
pusha
aaa
jo
ja
incb
std
std
popa
std
repnz
cmp
idiv
outsb
std
lret
std
dec
shll
bound
jno
jo
xorb
lock
std
std
popa
std
repnz
aaa
std
idiv
adc
hlt
std
dec
shll
jb
andl
xchg
lock
std
std
popa
std
repnz
std
lret
std
dec
roll
daa
nop
aaa
mov
pop
std
std
popa
std
repnz
lret
std
dec
rcll
daa
mov
lock
std
std
adc
repnz
insl
std
icebp
std
lock
shll
daa
mov
shlb
aaa
shlb
xlat
icebp
xor
std
adc
repz
std
hlt
std
dec
rol
rol
and
daa
shlb
loopne
out
incb
add
rolb
rolb
rolb
lds
gs
add
pop
fs
push
sub
inc
add
jne
add
fs
push
add
add
ja
add
pop
jne
adc
push
add
gs
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
jbe
test
test
mov
mov
mov
mov
adc
adc
adc
jno
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
jbe
test
test
mov
mov
mov
mov
adc
adc
adc
jno
inc
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
sbb
adc
adc
inc
adc
adc
add
add
dec
add
add
dec
add
add
dec
add
add
add
imul
add
add
inc
add
dec
add
push
add
add
add
add
inc
add
add
add
add
inc
add
out
lcall
les
cmc
out
ljmp
inc
add
out
incl
inc
add
out
incl
and
std
std
incb
add
add
xchg
add
pop
add
pop
add
or
and
add
sbb
push
sbb
insb
insb
push
arpl
add
add
std
arpl
repnz
adc
icebp
popa
std
idiv
pop
std
idiv
push
std
cmc
std
hlt
rcll
rclb
idiv
add
jne
gs
xor
add
add
add
jb
outsb
push
add
add
push
jbe
add
adc
xchg
or
add
jbe
add
add
add
add
add
outsb
add
add
add
data16
add
add
add
imul
outsl
addr16
add
jle
incb
pop
idiv
pop
leave
pop
adc
pop
mov
pop
sub
add
inc
add
gs
add
fs
add
add
adc
arpl
outsl
std
adc
imul
std
incb
add
std
adc
adc
and
and
std
std
adc
std
sbb
insl
std
adc
std
incb
add
add
xor
inc
add
arpl
jae
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
jno
pop
xchg
xor
add
xor
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
jmp
mov
push
xlat
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
add
add
push
arpl
pop
jns
add
push
jne
push
jb
jo
dec
insl
insb
imul
jbe
jbe
and
add
push
outsb
data16
jbe
jns
js
jno
push
inc
imul
push
jp
dec
insl
add
add
arpl
add
add
add
push
add
outsb
imul
je
jae
imul
push
jb
push
push
jbe
jns
insb
insl
push
add
jne
outsl
add
je
add
push
dec
insl
jno
push
add
insl
inc
pop
jp
jns
insb
inc
imul
jae
data16
bound
jae
add
pop
jbe
dec
jo
push
add
inc
jns
and
jns
outsl
inc
add
insb
addr16
js
popa
push
push
pop
push
add
imul
js
dec
push
insb
add
jb
jo
outsb
insl
dec
imul
add
fs
and
popa
pop
jns
push
push
push
je
jb
add
outsl
outsb
insl
insb
dec
dec
imul
arpl
and
js
add
je
jb
push
push
outsl
outsb
insl
dec
imul
add
imul
add
add
add
xor
mov
add
mov
sbb
int3
jmp
cwtl
push
mov
scas
mov
cs
push
das
inc
negb
pop
pop
shlb
mov
cmpsl
int
sub
cltd
add
sbb
test
inc
gs
bnd
push
or
and
sti
shlb
cmpsl
cmp
repnz
push
ret
or
push
out
out
pop
cltd
ja
daa
jne
mov
lods
push
popf
data16
int
stc
nop
adc
js
push
out
xor
and
pop
aas
js
mov
aam
insl
test
sbb
call
xchg
test
cmp
idivl
testl
adc
fs
cmp
cmp
or
nop
mov
filds
hlt
dec
add
loopne
mov
xchg
sbb
mov
cmp
inc
mov
repnz
insb
push
in
aam
xor
push
mov
aad
jb
add
stc
inc
pop
sbb
in
fwait
mov
hlt
rcrl
std
je
add
xor
cmc
fidivrl
cmp
adc
adc
jbe
je
xchg
mov
in
add
sub
ret
xchg
jo
jecxz
pop
mov
out
xor
mov
jmp
mov
out
jns
jnp
dec
in
lds
dec
mov
repz
adc
push
lahf
arpl
cmpsl
scas
nop
jb
push
push
iret
pop
xchg
sbb
imul
jnp
push
inc
sub
mov
jns
call
push
cltd
mov
or
imul
sub
cmp
out
and
jg
adc
inc
mov
in
pop
sub
cmp
push
add
filds
push
mov
sub
jl
sbb
push
js
imul
inc
adc
sbbb
scas
out
fstps
xor
repz
pushf
mov
mov
in
lea
lretw
fiaddl
jp
lea
idivb
ss
dec
add
add
test
cmp
insb
jbe
mov
xchg
inc
mov
out
sbb
sbb
insb
fnstenv
mov
xor
jp
sarb
and
xchg
lcall
adc
jecxz
movl
sbb
and
cmp
hlt
and
sbb
dec
or
pop
push
push
mov
and
jb
or
and
push
xor
sub
gs
cmc
outsb
loop
repnz
push
cltd
and
js
movsl
xchg
inc
aaa
sub
shlb
inc
xchg
push
xchg
sub
ja
mov
pop
iret
ficoms
adc
xchg
fiaddl
add
xor
xchg
add
pop
push
sub
adc
adc
push
push
sub
adc
std
dec
mov
pop
jmp
sub
or
jo
mov
push
loop
mov
adc
ds
dec
mov
jle
std
cmpsl
repnz
mov
add
pop
in
or
pop
insb
add
in
mov
andl
jo,pt
pop
add
sbb
mov
xorb
fidivrl
shll
mov
mov
aam
mov
ljmp
xor
and
in
mov
and
xor
movsl
add
jge
jne
nop
xchg
cmp
sub
xor
mov
icebp
lock
in
jmp
xor
mov
jge
js
push
or
adc
jl
in
cltd
cmp
sbb
fcoml
mov
mov
sub
and
or
mov
setg
ljmp
fs
sbb
mov
cmp
out
lahf
jmp
inc
test
mov
cmpsl
pop
pop
sub
push
xchg
xor
cld
es
aam
clc
cmpsb
lds
lcall
gs
and
into
jle
add
xchg
imul
and
loop
inc
sbb
mov
sbb
mov
ss
dec
add
mov
mov
push
in
fists
jo
add
pop
adc
outsb
cli
mov
jo
js
imul
xchg
pop
divl
and
stos
jnp
scas
pop
adc
mov
lcall
push
xor
fsubrp
dec
lea
test
cmp
pop
pusha
mov
push
mulb
cltd
inc
pop
test
les
hlt
pop
lods
push
inc
mov
and
push
dec
sub
sub
movups
inc
sub
lods
mov
inc
addr16
and
inc
mov
shrb
iret
int3
shlb
imul
shr
stc
arpl
je
inc
push
mov
lahf
es
cwtl
or
div
je
sub
push
fldcw
cmc
int
mov
movsl
nop
xchg
lea
scas
loope
icebp
cld
inc
testb
sbb
sub
mov
xor
and
dec
jp
fs
push
pop
js
inc
xchg
outsb
or
adc
imul
xchg
sub
mov
sub
mov
nop
inc
fsubrs
xchg
mov
jno
cltd
jae
and
xchg
cmpsl
mov
imul
pop
adc
xor
loop
daa
sbb
fs
shll
sbb
stos
in
sbbb
sbb
vmovups
pop
mov
inc
pop
lret
mov
cltd
in
hlt
mov
push
rolb
add
push
mov
addb
jg
fstl
mov
xlat
mov
lcall
or
arpl
std
push
mov
and
arpl
dec
push
je
inc
out
cmp
adc
xchg
push
mov
add
iret
mov
pop
pop
ret
mov
xor
pusha
cmp
std
lods
sbb
mov
adc
mov
xchg
in
pop
xchg
pop
xchg
cwtl
outsb
ja
mov
xor
jno
sub
sub
ret
xorb
mov
lahf
out
jmp
jp
xor
fadds
outsb
pop
hlt
inc
pop
mov
inc
push
xchg
xor
pop
and
cmpsl
ss
ret
fstpt
test
sub
xor
aad
divl
xchg
inc
adc
cwtl
xchg
sahf
xor
lods
test
jo
data16
xchg
inc
stc
dec
jge
popf
sbb
mov
pop
shl
and
punpckhdq
lahf
jno
insb
xchg
fcompl
push
dec
push
popf
cmc
pop
cmpsl
mov
sub
mov
iret
mov
das
sub
pusha
inc
sbb
je
aaa
sub
push
xchg
cltd
push
cmpsl
ficomps
adc
sbb
imul
lods
imul
lods
mov
cmp
lret
mov
push
sub
cltd
movsb
pusha
popa
mov
xorb
inc
test
fwait
rorl
lcall
sub
jno
cmpl
sahf
loop
aas
sbb
ret
lea
cli
cmp
daa
xlat
jno
fnstsw
push
cld
push
and
loop
sbb
sub
mov
or
add
scas
movsl
add
aaa
and
add
sub
mov
and
iret
and
js
mov
cmp
mov
mov
sub
jl
cmpb
dec
lret
add
mov
movb
int3
test
add
xor
aaa
call
movsb
adcb
xchg
pushf
inc
mov
and
and
mov
bound
xchg
cmp
sub
jecxz
dec
test
adc
fldl
jge
int
lahf
pusha
sbb
cmc
dec
mov
push
popf
insl
loope
sub
aas
nop
adc
dec
popa
mov
cltd
outsb
mov
lahf
adc
int3
xor
cmp
push
ds
pop
pop
pop
jnp
in
mov
xlat
in
popa
mov
in
xor
outsb
pop
out
xor
sub
push
pop
mov
aad
fildl
xchg
mov
cli
testl
fsubrl
xor
jge
jp
cli
nop
and
dec
add
stc
ja
mov
xchg
fidivrs
adc
loop,pn
mov
xor
push
stos
loope
fsubl
iret
mov
inc
fsubr
inc
in
mov
mov
xor
mov
inc
sub
xchg
xor
popf
mov
fistl
mov
icebp
xor
cmp
inc
mov
adc
or
cli
push
int3
fists
decl
mov
iret
sub
je
xchg
test
mov
icebp
adc
test
xchg
cmp
mov
mov
adc
roll
lods
movsb
insb
repnz
sti
imul
adc
push
mov
adc
les
cmpsb
repz
mov
sub
sbb
js
imul
dec
cltd
rol
scas
pop
cmp
fistps
mov
into
clc
adc
fcomps
popa
leave
in
call
rol
jns
push
ja
sbb
mov
fcoml
dec
test
div
jae
das
pop
and
pop
pushf
push
and
test
sub
jecxz
test
pusha
rcrb
mov
add
divb
xchg
dec
push
push
in
inc
sub
mov
cld
add
xorb
lds
into
jnp
pop
stos
ljmp
mov
or
push
dec
mov
push
jns
fcoml
icebp
sub
pop
lahf
push
enter
push
fisubl
xchg
popf
dec
jmp
cmp
dec
mov
insb
xchg
in
scas
add
scas
inc
add
roll
xchg
mov
ds
ja
jecxz
aaa
push
mov
add
pop
xorb
imul
subl
orl
jle
jae
out
cmp
xchg
xchg
add
popf
inc
repz
or
loop
jle
aaa
pop
sub
movsl
mov
pushw
lds
add
psadbw
sbb
inc
sub
aad
cltd
cmc
out
stos
movsb
push
xorl
and
cmp
mov
imul
xchg
sub
xor
movsb
or
gs
rcl
pusha
and
pop
in
inc
pushf
test
cmpb
lret
enter
jle
nop
insb
fstpl
add
pop
lcall
lds
and
xchg
sbb
popa
add
fistpl
loop
idivb
adc
leave
push
loopne
sub
ljmp
xor
rcl
xlat
mov
lea
int
mov
sbb
pop
out
test
xor
jp
int3
repz
into
repnz
jo
mov
scas
aam
adc
outsl
jp
sbb
push
int3
mov
fdivrs
mov
jbe
xor
data16
sarb
add
cmp
dec
sub
add
sub
and
push
stos
lock
inc
adc
jnp
call
jp
das
clc
mov
inc
inc
sbb
xchg
dec
loope
inc
push
cmpsl
mov
or
mov
sub
and
sbb
aas
sub
xlat
jl
aam
lock
xchg
outsb
fists
shl
test
and
and
mov
xchg
sub
mov
push
inc
ucomiss
cmp
repnz
or
sub
jle
mov
inc
sub
test
sub
or
dec
ljmp
cwtl
xlat
sbbb
push
add
push
dec
inc
adcb
ret
loop
pushf
outsl
sub
and
mov
jle
int3
insl
scas
and
aas
push
ljmp
roll
mov
inc
and
mull
sub
cltd
cltd
test
sahf
and
xor
stos
push
push
sbb
aad
and
mov
in
popa
sbbb
in
lcall
adc
xor
push
push
jge
mov
push
add
add
inc
and
fwait
imul
jle
sub
icebp
leave
mov
rcl
daa
pushf
cmp
test
mov
imul
inc
add
scas
fmull
xchg
mov
inc
mov
clc
inc
shr
lea
xor
cmp
incl
ret
rcll
and
mov
mov
pop
shrl
insl
push
data16
repz
xchg
in
sbb
push
add
gs
cld
pop
ret
hlt
fidivl
and
scas
adcl
push
ljmp
ret
mov
inc
imul
lock
movsl
cmc
xchg
jle
cmpsl
js,pn
xor
add
or
inc
inc
rcr
pop
cld
sbb
cmpl
jbe
mov
or
pop
xlat
out
in
ja
cld
lods
lods
call
jbe
push
iret
bound
arpl
roll
pop
aaa
sub
sub
xorl
dec
pop
pcmpgtd
xchg
mov
xchg
in
js
adc
repnz
jle
sbb
out
cmovl
pop
push
popf
cmp
dec
cmpsl
mov
sub
dec
or
mov
int
int
enter
ret
mov
adc
jae
jg
fildll
cmc
mov
xchg
mov
sbb
push
aam
sti
jo
mov
inc
mov
fcmovnb
test
mov
dec
pand
aam
lahf
pop
pop
xor
cwtl
mov
daa
pop
inc
push
adc
stos
fdivrl
sbb
out
adc
clc
dec
dec
cmp
dec
loop
imul
iret
sahf
dec
mov
daa
insl
or
adc
add
pop
sub
addr16
push
mov
pop
inc
aaa
fucomip
sbb
nop
dec
lods
outsl
jecxz
les
mov
cltd
stos
rcll
dec
jmp
in
insb
arpl
xchg
in
pop
cmp
test
xchg
dec
jecxz
pop
jmp
scas
ret
aaa
sbb
push
mov
ficoms
outsl
add
xchg
out
add
sub
sbb
test
jge
aas
xlat
loope
cmp
jno
lock
xchg
mov
mov
icebp
nop
jne
jo
mov
gs
mov
f2xm1
les
mov
pop
xchg
mov
push
jns
lock
sti
js
jo
xor
adc
mov
pop
mov
mov
mov
adc
aam
in
push
rcrb
in
add
and
and
mov
nop
lock
jmp
jbe
mov
aas
lret
push
cmc
mov
pop
or
dec
xchg
call
xor
inc
dec
out
ret
je
cld
cmp
mov
out
shrl
bound
pop
test
and
jo
lahf
insl
out
arpl
mov
dec
inc
loope
test
cmpl
bound
cwtl
dec
insb
pop
sbb
xor
push
cwtl
iret
push
adc
dec
jno
stos
nop
or
mov
adc
cld
iret
inc
repz
pop
jne
dec
testl
shll
push
pop
jo
adc
xor
mov
xor
fnsetpm(287
jo
ds
ds
loopne
jmp
insl
inc
out
and
xchg
sbb
aad
stos
sbb
adcb
xchg
enter
mov
in
out
movsl
push
cmp
pop
xchg
mov
aam
and
clc
imul
scas
outsl
xchg
cmp
idivb
rclb
incl
push
cltd
dec
jmp
mov
mov
pop
shlb
cld
jns
adc
pop
es
cmp
mov
lea
lock
add
mov
mov
mov
cs
add
daa
mov
xchg
shl
dec
iret
add
jl
xor
ret
mov
fisubrs
daa
and
iret
mov
jmp
mov
fsubr
clc
es
outsb
push
lods
push
clc
shrb
jecxz
mov
jecxz
mov
fbstp
cwtl
xchg
mov
mov
outsb
inc
cmp
fs
pop
add
sbb
and
pop
ret
jl
mov
sub
xor
pop
bound
jp
call
push
adc
mov
shlb
add
lret
cmp
loopne
repz
test
mov
push
jnp
sbb
mov
cmp
out
pop
or
and
jmp
or
sbb
orb
nop
lcall
dec
or
sub
test
adc
rclb
adc
movsl
jb
adc
cmp
les
cwtl
pop
fs
inc
fdiv
insb
mov
adcl
insl
in
std
pop
mov
stos
mov
aam
cmpsl
clc
stos
rcll
dec
dec
cwtl
lods
inc
and
xchg
xchg
icebp
imul
jmp
ret
pop
addr16
jl
jl
cmpsl
in
enter
repz
fwait
lock
daa
inc
mov
ret
mov
mov
push
and
pop
inc
jmp
lcall
inc
cmc
adc
jno
addr16
and
dec
hlt
or
sub
filds
xchg
push
or
mov
in
lret
mov
out
mov
outsb
or
movsb
shl
jle
mov
gs
dec
ja
xchg
pop
xor
mov
roll
jmp
mov
push
clc
rorl
sub
enter
add
or
sti
dec
js
mov
sbb
dec
xor
or
sub
mov
sub
mov
lods
push
roll
pop
pop
sub
stos
in
xor
mov
rcrl
inc
xlat
push
xchg
adc
pop
fisubs
jbe
cmp
clc
ds
xchg
sbb
mov
cmp
movsl
mov
push
pusha
pop
in
std
mov
int
xchg
dec
xor
mul
icebp
adc
cmp
fistpll
cmpsb
adc
movsb
gs
sti
xchg
jg
jnp
fdivl
divb
imul
xor
popf
adc
or
outsb
pop
add
jb
cwtl
das
loop
test
xchg
nop
inc
inc
mov
out
pop
rcrl
or
in
mov
mov
jb
cli
in
imul
lds
in
jge
shl
pop
mov
push
dec
loope
and
xor
xchg
pop
je
jbe
pop
rclb
lock
jo
ja
jmp
mov
andl
mov
push
inc
inc
xchg
push
mov
out
fcmovnu
lret
add
cltd
mov
jl
mov
mov
enter
jg
in
addr16
mov
insb
aas
mov
sub
sbb
mov
sub
lods
pop
ja
jbe
cmp
cltd
push
add
mov
xchg
xchg
adc
pusha
jae
sub
mov
in
sbb
arpl
push
inc
push
xchg
xchg
popa
xchg
not
fs
mov
push
push
mov
push
push
ret
xchg
push
je
push
add
mov
push
aas
js
stc
call
aas
fists
sbb
daa
push
fwait
lea
pusha
jo
insb
out
xlat
rcll
pop
gs
cltd
mov
dec
cs
repz
xchg
sti
pop
xor
xchg
mov
rcrb
mov
sbb
jnp
sahf
dec
lea
push
cmp
std
imul
mov
sub
sbb
int
mov
cwtl
jmp
lcall
fs
in
or
xor
mov
jmp
cmpsl
icebp
movsl
pushf
arpl
push
dec
mov
in
andl
lret
aas
aas
out
es
jp
aaa
inc
sbb
call
in
nop
xor
clc
dec
jae
movsl
cmpb
adc
insb
mov
ljmp
neg
lds
fdivs
dec
adc
mov
in
or
dec
insl
arpl
fcoms
dec
fisubrs
mov
bnd
sbb
mov
outsb
insb
mov
movsb
mov
cmc
fimuls
sti
js
shr
mov
mov
jnp
cwtl
cmp
fcomps
pop
fiadds
ljmp
xchg
sarb
adc
add
pusha
xor
shlb
jl
aaa
mov
fimuls
aam
out
jge
dec
out
je
daa
xor
jae
pop
subl
xor
pop
or
jp
push
fisttpll
pop
fwait
inc
pushf
shr
pushf
jne
sub
js
into
cli
pop
push
hlt
fcomps
ja
mov
add
dec
xor
mov
or
ret
or
and
adc
fiaddl
dec
xchg
jg
cs
mov
mov
out
jb
scas
out
iret
push
xlat
unpckhps
dec
push
sar
mov
sbb
mov
ja
push
jmp
and
popf
outsl
or
and
imul
cmpsb
or
cmp
jno
stc
insl
inc
pusha
test
loope
xchg
scas
push
ds
je
lods
sbb
push
sti
popa
sub
in
scas
fcoms
xchg
mov
out
add
cmpl
rolb
xchg
push
dec
frstor
xor
pop
ljmp
pushf
xchg
in
out
push
dec
lcall
fidivrs
sbb
push
push
addr16
stc
test
jae
je
outsl
mov
out
xchg
jmp
mov
cmp
popf
xor
sub
inc
jb
mov
mov
orl
adcl
addr16
enter
fisttpll
xchg
cmp
jge
push
dec
rolb
mov
adc
cmp
xchg
sub
sahf
pop
leave
adc
dec
shll
lret
das
repz
or
in
xor
push
and
add
jo
adc
mov
sbbb
enter
faddl
pop
test
stc
fldlg2
loopne
std
cmp
aaa
cs
sub
ret
xor
jbe
test
pop
std
lods
lods
cmpsb
lahf
xor
adc
ror
mov
sub
or
popf
mov
insb
std
mov
cs
faddp
push
daa
dec
jns
repnz
or
sbb
aam
stos
xor
xchg
fnsave
repz
xlat
dec
arpl
cli
loope
fldcw
push
push
cmc
jmp
mov
inc
fsub
xor
or
add
inc
in
test
dec
movb
sbb
jecxz
dec
xchg
nop
dec
sti
lock
pop
dec
dec
mov
mov
push
push
data16
sub
shrl
popf
lcall
dec
addr16
dec
in
jns
jp
inc
jb
xchg
in
icebp
mov
aas
jmp
scas
aam
pop
or
pop
pop
data16
mov
jle
std
loope
adc
or
adc
sbb
pop
ss
fbstp
rclb
mov
push
fisubs
or
rorl
movsb
xchg
pop
inc
aam
xlat
out
and
sti
jb
sub
mov
inc
dec
jle
jp
mov
fmul
mov
push
shrb
popa
jp
pop
outsl
or
pop
or
xlat
pop
cmp
mov
inc
xchg
imull
repnz
in
cmp
xchg
xlat
xchg
pop
out
outsl
push
jbe
pop
into
pop
shlb
cmpsb
sbb
add
imul
mov
mov
push
imul
xor
shr
dec
mov
mov
sahf
aaa
mov
lock
xchg
cmp
pop
ret
ret
push
lods
pop
sbb
lret
sbb
pop
sub
jno
subl
shl
scas
pop
loopne
cwtl
jp
sub
xchg
push
adc
jo
scas
mov
add
movsl
fnstsw
shll
xor
push
mov
or
add
push
cmp
or
jb
daa
inc
loope
sub
cli
xor
mov
sub
dec
pop
mov
xchg
lahf
call
rorl
out
jno
lods
push
adc
arpl
cltd
ja
jle
cld
mov
dec
stos
das
add
jbe
es
in
push
notl
mov
bound
shll
cmp
jbe
adc
loope
lods
xor
dec
out
push
enter
inc
pop
push
inc
dec
xlat
cs
xchg
dec
lret
clc
ss
mov
inc
mov
iret
ds
push
pusha
xorb
push
or
jo
sub
jmp
jb
in
lock
je
jns
leave
rclb
sbb
sbb
or
fidivl
or
loop
repnz
loope
outsl
sbbb
cs
push
sub
cltd
test
in
into
nop
data16
dec
pop
or
xor
push
mov
add
mov
sahf
loope
shrd
push
inc
sub
ret
lods
xor
pop
adc
dec
hlt
enter
scas
ljmp
out
or
shrb
je
aad
fbstp
popa
gs
lahf
xor
leave
xor
addr16
cltd
imulb
aam
adc
xchg
daa
ljmp
paddusw
add
jb
mov
cmp
mov
in
add
cli
loopne
or
mov
out
xchg
int3
ljmp
lea
popa
sub
dec
cli
inc
and
cmp
andb
out
scas
sar
hlt
int3
jo
jnp
xchg
add
mov
nop
pop
mov
in
ret
push
mov
xchg
inc
adcb
xor
jbe
pusha
icebp
out
xchg
dec
les
fstps
add
insb
fiadds
jp
cmp
outsl
cld
pusha
xchg
pop
jbe
mov
int3
mov
test
pop
pushf
ret
xchg
cwtl
ret
cli
adc
pushf
aad
mov
add
sub
and
addl
out
jbe
mov
push
subl
cmp
shlb
sbb
push
xor
sbb
pop
ljmp
fs
outsl
adc
lret
sbb
adc
inc
sahf
pop
shlb
in
sub
jbe
xor
insb
mov
loop
rol
out
scas
clc
in
cmpsb
push
iret
jmp
add
cmp
push
mov
lgs
bswap
out
shlb
mov
push
dec
jl
cli
xor
je
pop
rclb
ja
mov
mov
repnz
jge
lock
or
nop
push
das
add
add
push
cmp
dec
xchg
push
andl
pop
add
push
mov
adc
loope
cmpsl
test
popf
xor
lahf
cltd
and
push
fcomp
flds
dec
jecxz
mov
push
mov
testl
in
and
insb
enter
ror
loop
loopne
shr
sub
in
push
or
cmpsb
pusha
dec
fcmovb
inc
jl
mov
pushf
or
inc
jmp
push
popf
dec
sbb
jbe
icebp
hlt
add
mov
cmp
aad
icebp
ss
xor
scas
fsubr
inc
dec
cld
push
xchg
sub
popf
jo
sarb
into
add
and
or
cmp
mov
push
idivl
mov
lret
adc
sub
cmp
int3
mov
xchg
sti
in
jp
pop
mov
pop
inc
icebp
push
push
add
in
cmpsb
fdivl
dec
cmp
cmp
or
popa
roll
adc
inc
mov
nop
nop
cmp
lea
movsb
cmp
gs
test
cli
fnstenv
mov
jp
out
pop
stos
xchg
inc
adc
push
push
push
neg
pushf
sar
repnz
and
xchg
das
popf
cmp
fsubr
push
xchg
xlat
xchg
in
aam
inc
cmpb
ds
stos
dec
sub
stos
insl
pop
xchg
and
rcrl
ret
leave
push
shrl
inc
push
iret
ja
bound
aas
add
jl
mov
sub
cmp
dec
les
dec
push
and
xchg
scas
sub
sar
movsl
xchg
dec
inc
lds
cmp
stc
sbb
insb
stos
xchg
pop
arpl
inc
cli
adc
mov
sarb
inc
fnsave
jecxz
mov
cmp
push
dec
aaa
xchg
sub
call
shll
gs
push
int3
mov
mov
lods
repz
cwtl
xor
jo
add
mov
int
aam
rclb
xlat
outsl
and
sub
push
pushf
movsl
lahf
out
sub
sub
and
aad
cmp
imul
outsl
insb
lea
std
stc
addr16
and
std
repnz
push
das
test
lods
stc
or
cmp
loopne
ja
sub
mov
xchg
sub
or
xrelease
jge
push
lods
mov
fwait
xchg
push
and
std
fwait
mov
loop
xchg
lcall
fnstenv
add
dec
inc
pop
out
lret
inc
cmp
sub
pop
ljmp
out
movsb
idiv
lret
subl
cmp
dec
inc
test
push
aad
mov
pop
add
add
test
push
js
loope
xlat
adc
push
popa
cmp
mov
in
cmp
pop
adc
aam
xchg
inc
popf
js
cmp
cmp
lahf
xchg
sti
push
test
adc
stos
push
pusha
leave
pop
arpl
les
cmp
out
test
dec
adc
push
or
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
sbb
add
pop
add
add
add
add
add
add
jno
add
faddl
add
add
sbb
add
adc
add
add
xor
add
add
add
add
add
add
add
add
mov
xchg
add
add
add
and
add
add
add
add
add
add
or
add
add
add
lret
add
add
sub
mov
add
add
loopne
add
add
add
adc
add
mov
add
add
add
add
add
add
adc
add
add
add
inc
out
dec
lock
inc
mov
dec
mov
aaa
lret
out
inc
sub
sbb
jae
repnz
repnz
inc
xchg
sbb
cmp
mov
clc
sbb
pop
or
mov
ss
push
sbb
xchg
adcl
sbb
jbe
dec
cwtl
es
aam
push
sbb
scas
lret
xchg
sub
xor
jmp
add
jecxz
sbb
inc
xchg
xchg
jne
aam
mov
notl
cmc
popf
push
add
fildl
add
pop
add
int
movsb
rclb
mov
jnp
insl
pop
clc
ret
jg
stos
and
mov
jmp
mov
jg
stos
pop
nop
test
or
add
sbb
mov
dec
inc
inc
js
xchg
inc
roll
imul
das
jle
mov
dec
rolb
push
add
pop
dec
push
push
idivb
das
mov
in
adc
push
mov
push
pop
and
repz
jb
cmp
in
sub
xchg
xor
push
xchg
loop
fidivrl
mov
out
mov
push
fwait
xchg
nop
divb
into
jmp
xchg
jbe
adc
xor
daa
pop
mov
icebp
ds
cmp
inc
sbb
outsl
frstor
ret
add
shl
inc
and
lret
addr16
out
mov
and
mov
or
rclb
xchg
addr16
ds
push
push
shl
dec
dec
pop
or
pushf
movsl
add
jns
push
pop
inc
test
fwait
int
inc
sub
jne
popf
int3
push
insl
add
dec
frstpm(287
out
ja
add
insl
out
js
mov
mov
clc
mov
insb
xchg
xchg
mov
xchg
mov
or
jbe
lock
cmp
push
stos
int
mov
rorl
into
int3
push
sub
or
mov
jnp
push
xchg
adc
add
out
dec
cmp
ja
bound
push
rcr
shll
add
repz
push
pop
add
rcll
lock
adc
lcall
add
test
or
and
in
rcll
jnp
rorb
xor
cmpsl
cld
inc
adc
fiadds
ret
cmpsl
mov
add
push
dec
lahf
xchg
cmp
mov
pop
pop
iret
add
inc
mov
mov
push
movsl
sbb
test
sbb
push
dec
inc
inc
cltd
pop
add
in
pop
mov
lea
push
pop
cmp
in
leave
gs
inc
cmpb
sub
pushf
xchg
mov
in
test
ss
push
outsb
or
cmp
pop
cmp
inc
mov
mov
clc
arpl
js
push
daa
adc
es
inc
mov
imul
pop
sahf
dec
inc
popl
call
loopne
push
pop
loope
sbb
mov
loop
out
insl
dec
cmp
mov
jb
test
cmp
and
add
dec
mov
inc
dec
hlt
and
cmpsl
mov
adc
loop
ss
jp
cmpsl
cmpsb
push
dec
sub
xor
out
adc
dec
clc
iret
push
or
xor
xchg
je
inc
mov
jecxz
mov
or
mov
ret
lret
xor
orb
sbb
pop
cltd
mov
aas
mov
ror
jle
or
divl
ljmp
mov
jne
out
or
jecxz
sub
cmc
push
int
das
cs
mov
sub
subb
mov
xlat
ljmp
ljmp
pop
mov
cmc
ret
pop
in
jmp
adc
push
std
insb
call
dec
test
mov
pop
shll
adc
iret
pop
jno
jecxz
fs
rcrb
xor
icebp
or
and
inc
pushf
lods
mov
and
imul
aaa
outsl
jo
test
jbe
mov
cmpb
scas
ja
insl
in
xchg
push
ja
cmpsl
outsl
jge
inc
popa
pop
stos
ret
jge
sub
out
inc
push
cmp
cmc
out
enter
dec
pusha
push
test
into
dec
xchg
bnd
addb
sar
or
or
mov
rcrb
mov
inc
jbe
lcall
loopne
mov
ss
pushf
stos
je
cs
and
sti
daa
mov
rorb
add
data16
ret
das
mov
mov
dec
dec
pop
add
or
and
adc
dec
lods
or
or
mov
mov
fwait
pop
lret
mov
std
jge
cld
xchg
out
rcll
jno
movsb
ja
lds
je
shll
into
sbb
nop
test
int
scas
inc
lret
lock
movd
gs
pop
and
adc
test
or
jae
das
fcomip
xchg
pop
push
mov
cwtl
mov
fsubl
aaa
sub
xor
call
dec
xchg
xlat
sub
mov
inc
add
out
jecxz
push
gs
add
mov
fisttpl
or
or
hlt
sahf
sarb
repnz
xor
js
loop
es
out
aad
pop
loop
shll
pop
in
mov
dec
sti
mull
sbb
adc
loop
fdivrl
lods
xchg
lock
jp
ljmp
mov
jnp
jne
jge
push
adc
decb
xlat
out
sbb
adcl
jle
push
adc
cltd
jg
js
mov
jb
mov
dec
test
hlt
test
iret
inc
pop
fistpl
jle
xlat
fwait
in
in
out
ret
je
pop
pop
xlat
inc
shll
sub
and
stc
cmp
pushf
clc
dec
rolb
ljmp
loop
dec
jmp
push
sbb
cmpsb
bound
cwtl
cmpsb
inc
xor
ja
mov
push
mov
jge
add
and
inc
mov
ret
leave
dec
xor
daa
adc
or
aam
mov
pop
jmp
mov
cmp
call
movsb
out
cmpsb
mov
mov
in
faddl
lds
xor
repz
cmp
leave
gs
cwtl
pop
push
jmp
cli
push
cmp
jae
mov
daa
xchg
ret
mov
gs
xor
repnz
div
popa
ss
mov
mov
jbe
stc
xchg
jge
xchg
cmp
pop
loop
repz
jmp
xchg
mov
out
lds
mov
fistl
insl
daa
inc
lock
jns
sbb
mov
loop
jae
data16
shl
inc
cltd
dec
das
pop
adc
push
mul
int
pmaxub
mov
push
leave
sub
lcall
lods
lods
dec
adc
or
cld
cmp
out
add
pop
arpl
movb
jnp
mov
push
xor
mov
pop
cli
sbb
loop
icebp
mov
push
sahf
test
jbe
inc
dec
fisubrs
cmp
pop
sbb
add
or
divl
xlat
push
notl
lret
jns
and
xchg
pop
mov
stc
outsb
loope
aaa
loope
jmp
push
mov
scas
fcoms
sub
stos
xchg
and
add
xor
out
nop
repz
pop
sbb
dec
mov
inc
imul
xchg
inc
enter
fcoml
pop
xor
jno
inc
dec
iret
call
push
xchg
mov
push
dec
jns
insb
mov
leave
jno
sbb
int3
cwtl
lahf
cltd
popa
fcmovne
out
repz
xchg
cltd
mov
push
fdivr
test
popa
xchg
cmc
adc
jb
mov
dec
scas
and
daa
idivl
xor
push
mov
out
pop
xchg
push
inc
aam
sbb
push
test
jo
adc
repz
aad
enter
mov
es
clc
mov
fwait
shll
and
sub
jmp
cli
loop
std
push
fs
pop
movsb
xor
cs
sbb
jmp
outsb
mov
add
inc
pop
mov
fwait
adc
call
sub
rol
cli
pop
xor
dec
cmpsb
mov
mov
test
movsb
push
out
push
pop
pop
std
xchg
arpl
cmp
icebp
jg
dec
sbb
cs
jmp
leave
pop
out
loop
lock
and
inc
xlat
sub
daa
mov
inc
pop
out
mov
dec
inc
lods
les
pop
pop
aaa
aaa
mov
adc
xchg
pop
test
or
jmp
inc
and
ja
fiadds
dec
cs
insl
arpl
stc
nop
and
lea
mov
mov
add
pop
mov
jne
sbb
and
sub
xor
inc
mov
jbe
imul
push
rorw
aas
cwtl
imul
out
cmc
inc
insb
movsl
fnstsw
mov
lahf
loop
cmp
addr16
sub
mov
cwtl
out
add
mov
push
out
ja
xchg
or
cltd
adcl
cmp
out
ficompl
repnz
in
mov
sub
xlat
pushf
adc
xchg
pop
cmp
mov
fdivrs
jle
hlt
xchg
or
enter
push
les
dec
cmc
cmpb
xchg
jnp
mov
data16
pop
test
xor
rclb
adc
lods
push
pop
inc
iret
and
add
ja
pop
or
sbb
xchg
jo
inc
ja
push
mov
fistl
lcall
jl
dec
inc
leave
adc
pushf
idivl
fdivrl
movsl
push
cmpsl
inc
cld
out
push
xchg
push
push
out
xor
cli
popf
push
dec
shll
sbb
mov
inc
push
loopne
lret
push
je
into
jp
cwtl
mov
jmp
or
cli
out
clc
xor
cmp
or
inc
mov
daa
lods
xchg
push
dec
cli
push
cmp
and
test
dec
iret
dec
jno
cli
pop
mov
adc
xorb
pop
jnp
adc
popf
xor
lock
jb
insl
aaa
dec
idivl
xor
mov
cmp
dec
mov
rorb
push
mov
bnd
aam
fs
insb
js
orl
movsl
test
push
shrl
popf
sub
pop
fcomps
mov
mov
inc
pop
push
out
push
nop
adc
jle
mov
jl
in
xor
cmp
mov
adc
sti
mov
mov
dec
mov
pop
jno
mov
or
jp
lock
test
mov
arpl
cmp
dec
cmp
jecxz
dec
popa
sbb
sbb
mov
outsl
cmp
dec
shl
jmp
mov
shrb
into
popl
pop
jp
inc
test
push
xchg
jg
dec
mov
shlb
imul
inc
push
rolb
stos
push
into
and
lret
adc
push
sbb
or
jmp
jae
mov
mov
out
cmp
in
xchg
mov
popf
pop
jmp
and
jnp
movsl
mov
mov
mov
in
mov
or
mov
push
jnp
movsb
loop
orl
xchg
inc
sbb
mov
sbb
jb
mov
dec
mov
insl
add
inc
pop
add
cltd
daa
sub
mov
mov
jns
xchg
and
stos
jg
in
jl
aam
dec
iret
sahf
xor
addr16
iret
inc
leave
sahf
or
pop
xor
jle
mov
jo
xchg
les
out
add
add
xchg
add
xchg
popf
jp
jge
test
and
add
jbe
into
loop
shlb
xchg
out
or
ljmp
lods
xchg
mov
out
inc
enter
pop
mov
adc
lds
mov
pop
out
subb
ljmp
and
clc
pop
mov
ret
and
mov
sbb
insl
cmpb
std
and
dec
das
push
cmp
cmp
in
ret
shlb
push
adc
pop
xchg
movsb
je
mov
pop
shrb
push
add
pop
jmp
es
enter
leave
test
pop
push
mov
pop
jae
lcall
sbb
addb
and
inc
andl
push
repz
cmp
js
pop
lods
mov
mov
mov
mov
pushf
push
push
sti
popa
or
push
sbb
pop
sbb
push
int3
fcmovu
inc
dec
xor
jnp
dec
pop
pop
or
sub
push
js
add
and
shrl
xor
sub
dec
fisttps
popf
jo
fs
outsl
or
fwait
xsave
jecxz
fdivrs
mov
jp
dec
mov
push
scas
iret
xchg
push
sarl
xchg
mov
push
pusha
xchg
imul
pop
xor
je
push
jg
xlat
cli
scas
dec
fidivrs
sbb
pop
lcall
daa
jne
idiv
xor
es
scas
loopne
mov
adc
loop
aas
jge
dec
popa
add
xchg
pop
mov
out
stos
pushf
xchg
dec
aad
xchg
cmc
dec
mov
pop
add
adc
das
jb
pop
sub
xchg
inc
pop
imul
decl
stos
jno
push
icebp
sahf
mulb
jns
jno
outsb
sti
sbb
push
movsb
mov
pop
sub
movsl
bound
aaa
xchg
inc
add
xor
in
dec
sub
pop
jnp
or
addr16
mov
fcompl
cld
jo
add
mov
ficomps
fistpl
lcall
mov
dec
mov
pop
shr
xchg
jp
fcmovnbe
and
enter
or
add
enter
cmp
aad
mov
jb
xor
scas
cmp
mov
iret
aas
in
xor
inc
jle
test
jecxz
dec
push
lods
cmp
outsb
push
mov
mov
out
insb
xchg
and
mov
repz
fwait
iret
ljmp
sarb
adc
push
push
push
pop
fucom
nopl
mov
mov
cmpsb
insb
lods
dec
cld
xchg
inc
rcrb
push
jno
xlat
pop
call
es
enter
jge
addr16
jbe
incl
mov
pop
and
or
mov
cmp
cmp
cltd
adc
sbb
add
mov
js
dec
repnz
fidivrs
dec
pusha
adc
cmp
cmp
mov
inc
mov
cli
cmpsl
mov
adc
mov
push
mov
adc
or
dec
mov
xor
cltd
aad
xor
pop
and
or
arpl
sbb
dec
ljmp
in
gs
or
fldcw
aaa
stc
fwait
dec
pop
jnp
jo
push
mov
dec
outsb
inc
push
or
cltd
cmc
dec
leave
fidivrl
add
mov
adc
mov
pop
adc
mov
push
std
into
ss
out
repz
pop
jle
or
insl
ds
hlt
aam
mov
inc
sub
sbb
xor
call
hlt
gs
sbb
mov
out
ret
divl
mov
sub
cmpsl
stos
popf
xchg
or
ljmp
pop
and
arpl
int3
mov
or
push
and
mov
icebp
in
inc
jl
call
mov
pop
daa
cmp
sub
sarl
andl
sti
je
loope
es
cmp
pushf
xor
aas
sbb
mov
jp
push
mov
iret
jo
inc
jbe
rclb
outsb
xor
cmp
repz
ret
mov
mov
jg
vcvtdq2ps
xchg
and
filds
loope
movsb
xor
f2xm1
sub
mov
jno
test
xlat
retw
ja
add
adc
in
ret
pushf
jno
std
in
dec
push
jle
mov
add
fildll
xlat
dec
xchg
xchg
sbb
inc
push
or
xlat
adc
push
mov
mov
stos
sbb
in
ss
je
out
clc
sub
hlt
aaa
mov
icebp
lods
mov
sar
mov
lock
test
push
inc
sub
jnp
int3
mov
mov
push
ljmp
rol
xlat
dec
and
jp
fcomp
cmp
sub
outsb
aas
lret
xchg
mov
and
sbb
xchg
fldz
outsl
outsb
and
ret
adc
and
adc
negb
sbb
lock
cmp
jns
lods
flds
lret
lods
dec
fcmove
xor
mull
repz
mov
cmpsl
stc
scas
xchg
fdiv
mov
sbb
dec
add
in
shrb
push
cmpsb
sub
dec
mov
push
add
notb
push
or
mov
ret
leave
scas
sub
xor
sti
sti
shlb
sti
andl
dec
std
mov
movsl
dec
fistps
cltd
or
adc
fisttpll
adc
jb
dec
mov
mov
rol
sahf
sbb
xbegin
clc
lahf
imul
mov
inc
inc
lcall
scas
stos
mov
inc
loop
sub
and
xlat
xchg
or
add
dec
mov
lahf
jae
adc
cs
movsl
dec
add
mov
push
inc
cwtl
pushf
das
adc
dec
sub
or
jb
sbb
adc
lods
push
mov
fwait
adc
daa
jo
push
jne
repnz
jns
jp
cli
push
movsl
cmp
dec
fsubrs
iret
enter
xchg
lds
xor
sub
mov
data16
data16
aas
mov
bound
xor
jns
xchg
fdivl
out
pop
pop
mov
stc
out
jnp
xor
rorb
loope
shll
test
sbb
push
fimull
mov
push
jg
push
aam
test
and
loopne
stc
pop
dec
xchg
insb
cmpsb
loopne
and
push
adc
scas
cmp
rolb
test
mov
mov
sub
push
adc
push
aas
and
inc
scas
jne
pop
es
insl
jle
xor
adc
mov
lcall
in
loop
pop
jg
mov
mov
inc
fwait
test
outsb
sbb
imul
lds
cmp
ret
adcl
fdivr
mov
push
fst
cmc
rcll
push
jb
movq
icebp
mov
mov
mov
adc
stos
daa
imulb
xchg
add
pushf
clc
scas
out
mov
repz
shl
fwait
dec
lahf
aaa
icebp
rolb
mov
outsl
js
cmp
mov
add
and
in
push
out
push
mov
sub
lcall
and
xchg
hlt
dec
lea
sbb
imul
jae
inc
adc
sahf
ret
jnp
mov
test
or
ja
cmp
outsb
lock
arpl
ret
sub
in
push
loopne
push
mov
mov
scas
int
ljmp
fcomi
and
xor
push
ljmp
xchg
pop
pop
push
pop
pop
stc
clc
pop
mov
dec
es
lds
cltd
push
cmp
push
iret
repnz
out
mov
mov
repnz
cwtl
div
xor
mov
in
add
jnp
repz
ret
cmp
adc
ljmp
ret
jmp
sbb
cs
mov
mov
stos
stos
mov
aam
jae
pop
movsl
pop
flds
rcl
sbb
imul
mov
xchg
jmp
jno
add
jmp
addr16
out
pop
push
cli
or
sub
dec
sub
ja
pop
or
mov
lds
loope
aas
pop
movsl
aad
mov
pusha
clc
fwait
jmp
mov
mov
shrb
xchg
push
sbb
xchg
shll
mov
fmul
dec
sbb
in
and
movsl
dec
fwait
inc
mov
ja
sub
or
loopne
adc
mov
xchg
gs
cmp
loop
mov
jmp
add
shll
xor
cmp
std
pusha
adc
push
pop
lods
ss
cmp
inc
pop
jl
cmp
das
mov
jp
scas
jle
mov
xor
js
add
jno
call
xchg
sub
int
pop
aad
ja
in
or
push
push
mov
in
repnz
and
bound
xchg
mov
push
shlb
and
sub
pop
mov
outsl
orb
std
push
loope
insb
and
mov
insb
xchg
mov
imul
push
into
mov
stos
sar
mov
xchg
mov
imul
out
js
outsl
xchg
movsb
int3
xchg
and
cmc
add
adc
fiaddl
mov
push
dec
xchg
js
cs
inc
xor
leave
inc
push
outsl
cmp
pop
jno
sarl
aas
mov
shlb
pop
shl
and
inc
cmp
repz
cwtl
mov
hlt
sbb
add
lods
orl
shlb
ljmp
pop
mov
and
jne
inc
cmpsb
inc
sub
mov
fistl
dec
push
dec
pusha
and
dec
int
inc
mov
in
or
xor
repz
std
sarb
mov
fildl
fdivr
xor
nop
add
rcl
js
in
add
movsl
ret
fidivrs
pop
dec
jnp
xchg
int3
xchg
push
mov
xor
inc
popa
out
sbb
cli
in
inc
lds
jae
shr
fwait
out
jae
sub
dec
call
mov
mov
mov
xchg
xchg
into
rcrb
movsl
fbld
and
adc
jno
sbb
dec
pop
jp
dec
or
jne
out
mov
and
xlat
adc
popf
add
add
push
int3
or
mov
jae
sarb
jno
fisubrl
add
dec
jb
dec
ficoml
int
enter
insl
mov
lahf
cmc
std
shrl
cmpsl
fcmove
add
repz
bnd
int3
add
ss
xlat
pop
jae
jbe
or
sbb
loope
cld
pusha
repz
sbb
inc
stos
pop
aaa
ja
mov
cmp
push
and
int
nop
sub
mov
sub
pop
cltd
pop
dec
xor
lcall
inc
xor
outsb
push
or
vpaddw
cmp
pop
test
das
and
or
jae
cmp
mov
inc
cli
pop
das
out
loop
add
adc
mov
inc
lret
jae
inc
or
cwtl
in
lahf
cltd
inc
push
cld
fsubr
popa
cs
nop
sub
hlt
fsts
dec
jmp
adc
sub
push
and
repz
js
or
xorl
pushf
outsb
push
repnz
shll
cld
and
icebp
pop
ljmp
stc
cmp
dec
inc
test
mov
xchg
pop
sub
pop
addr16
test
insl
inc
lds
push
scas
mov
push
jb
cmp
out
ror
fistpll
mov
cmp
inc
or
cmp
mov
mov
or
cld
pop
mov
jb
add
fwait
mov
rclb
notb
jecxz
enter
push
movsb
cmc
add
lods
cwtl
dec
test
popa
addl
lds
aas
inc
mov
xor
leave
jecxz
push
sub
cmc
es
movsl
arpl
adc
ret
ss
jo
je
xchg
jne
dec
pushf
outsb
aaa
sub
clc
std
pop
cmpsb
inc
rep
lahf
bound
xor
jge
mov
xor
inc
mov
stos
inc
gs
sbb
jne
sbb
jl
mov
jo
sbb
mov
in
cs
push
arpl
sub
mov
jne
xchg
test
rclb
cmp
mov
es
popa
jle
jne
and
mov
pop
enter
dec
or
loope
outsb
jno
test
cmp
pop
mov
fwait
mov
out
test
xchg
push
mov
jb
pop
lods
pusha
and
xlat
jmp
in
sbb
scas
xlat
mov
stos
cld
cmpsl
pop
stc
and
loopne
xchg
adc
nop
jg
xlat
inc
sbb
lds
mov
lea
xchg
test
imul
repnz
dec
sub
movsb
cld
and
dec
push
pop
cmp
mov
sub
dec
or
push
sbb
xchg
push
dec
decl
fiaddl
aam
mov
mov
aad
in
cmc
jb
or
or
mov
enter
xor
scas
or
cmp
sub
movsb
or
movsl
sbb
shll
in
sahf
ds
sub
idivb
rolb
push
scas
ret
push
sbb
add
aam
ss
sub
orl
testl
dec
bound
es
mov
dec
cmc
pop
movsb
popf
lahf
dec
xor
mov
std
cmc
enter
mov
stos
cwtl
int3
iret
mov
or
fisttpl
mov
and
imul
mov
sub
jne
mov
cmp
pop
jnp
cltd
mov
adcb
or
sub
in
mov
loope
in
fisubl
xorl
imul
mov
icebp
ret
ss
jg
or
xchg
fs
cmpsb
xlat
sub
arpl
lea
jecxz
nop
sub
xor
jge
mov
mov
jo
mov
jge
inc
mov
pusha
and
jne
dec
pop
test
out
sub
enter
in
clc
addr16
fwait
xor
andb
mov
je
out
adc
sbbb
xchg
out
xchg
jnp
loopne
mov
or
xlat
in
sub
jae
pop
mov
mov
bndstx
dec
push
jp
in
sbb
outsb
out
popa
pushf
clc
int3
push
cmpsl
addr16
idiv
push
or
xchg
mov
pop
xor
mov
xchg
adc
dec
shl
sbb
lret
mov
push
popa
mov
inc
pop
dec
dec
and
mov
mov
mov
inc
insl
outsb
insl
push
cli
lcall
gs
dec
jne
mov
sub
xchg
add
dec
ret
mov
pop
pop
dec
loope
int
mov
iret
inc
pop
shr
push
mov
mov
mov
push
jg
hlt
sbb
add
test
mov
gs
out
sub
repnz
in
sbb
xor
lcall
pop
and
insb
hlt
fs
lock
sbb
rol
jae
inc
mov
xlat
inc
cmpsb
lods
sbb
adc
or
adc
pop
push
and
mov
int
jmp
js
dec
cmp
lcall
lock
outsb
arpl
push
fwait
jb
test
test
push
sarb
sub
mov
stos
leave
mov
ljmp
xchg
orb
int
or
cmp
adc
sar
loop
enter
aam
or
movsl
cli
xchg
xor
es
iret
adc
lcall
push
in
lock
mov
adc
dec
sub
fimuls
enter
push
push
mov
mov
cs
push
push
push
add
inc
pop
jmp
mov
xchg
outsl
shlb
subl
sbb
mov
imul
in
push
jp
and
daa
lret
scas
movsb
fdivl
push
or
mov
out
les
or
pop
sbb
jo
jb
lcall
cld
aas
push
add
and
xchg
push
xchg
xchg
cmp
jg
shl
sahf
mov
cmpsl
add
fmul
jo
xchg
aas
add
inc
fnsaves
cmp
or
outsb
inc
adc
rorl
dec
and
cmpl
inc
aam
xchg
out
inc
add
sub
push
scas
jmp
mov
xor
mov
pop
inc
adc
cmp
stos
std
js
lret
or
add
adc
sbb
cmp
add
and
fmul
movsb
test
mov
sub
add
sbb
stos
cmc
xor
sub
loopne
iret
inc
jb
push
add
mov
sbb
mov
fimuls
pop
outsb
inc
icebp
push
adc
pop
inc
popa
xchg
dec
into
jne
scas
outsl
test
inc
stos
jge
push
call
ficompl
shll
ficoml
loope
cmp
mov
cwtl
repnz
or
aad
mov
cwtl
cmp
imul
or
mov
push
ss
add
stos
add
lods
xor
sbb
clc
cmp
mov
fsubl
adc
out
add
push
sub
xor
mov
mov
aaa
cs
dec
mov
cmp
cld
add
add
sbb
adc
cmp
pusha
or
movsb
enter
movsl
and
inc
xchg
in
sub
cmp
clc
xchg
inc
add
stos
call
jl
jb
adc
adc
rorl
cli
mov
cmpsl
pusha
adc
lret
pop
inc
and
xchg
scas
daa
add
mov
cwtl
orl
cmpsb
sahf
imul
xchg
or
mov
pusha
push
js
in
mov
cmpsl
out
das
aaa
adc
or
movsl
lret
call
jns
sub
add
xorl
push
flds
xchg
cld
or
int
pusha
mov
ret
dec
stos
push
sub
lock
mov
cwtl
int3
jg
and
fmulp
dec
pop
mov
cmc
sub
je
jecxz
sub
shrb
daa
nop
pop
sub
pop
add
clc
add
inc
rep
lods
aaa
hlt
lret
std
jle
push
dec
mov
repnz
pop
push
jecxz
pop
adc
ret
dec
cld
movsb
sub
pop
push
mov
mov
jns
stc
sbb
adc
pop
pop
push
fldcw
inc
shr
inc
pop
les
inc
mov
sub
xor
jb
pop
mov
jg
rcrl
dec
in
test
push
sub
add
stos
mov
insb
mov
push
jl
cmc
stc
pop
mov
pop
mov
pop
push
add
lds
xchg
mov
sub
das
cmp
idivb
fstl
push
jno
stc
into
int3
test
jno
std
pop
out
loop
lret
aaa
or
pop
xchg
hlt
stos
and
sbb
rcl
push
sbb
int
inc
and
int3
test
xor
jae
cltd
jne
dec
mov
xor
jbe
and
push
jne
pop
in
inc
outsb
pop
gs
xchg
mov
pop
and
dec
mov
fs
jno
leave
popa
mov
in
aas
cmp
jae
out
jo
ss
addl
lcall
call
cs
rolb
pop
stos
or
xor
cli
inc
and
pop
aam
cmc
les
adc
pop
inc
sub
adc
shl
scas
fsubl
and
loop
sti
jecxz
cmp
or
add
add
add
add
add
add
pop
add
add
add
add
add
mov
add
add
add
add
add
add
add
testb
add
add
add
add
add
add
add
jnp
add
xchg
add
add
jb
add
add
add
clc
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
mov
jp
push
push
mov
lods
mov
pop
mov
mov
int
xor
jmp
pop
sbb
arpl
cmpsb
repz
cs
jg
scas
sbb
xchg
pop
pop
xor
xor
push
add
cmp
out
mov
jecxz
fcmove
lcall
adc
cwtl
push
pop
jnp
and
push
dec
insb
jmp
push
out
js
lret
or
insl
loopne
and
inc
int
fs
int
lret
pusha
fcomps
xor
and
xchg
aam
xchg
jmp
add
addb
sub
out
inc
adc
and
pop
imull
lds
xchg
inc
dec
mov
popa
repz
scas
test
sbb
push
cmp
and
sub
add
in
add
mov
fsubs
xchg
aam
lea
mov
daa
push
ftst
insl
add
cli
in
pop
out
jne
inc
add
dec
push
cmp
and
cmp
lahf
mov
xor
mov
shrd
flds
imul
imul
or
inc
mov
jg
les
movsb
cli
repz
cmc
cmp
fidivrl
pop
sub
mov
mov
outsb
stos
pop
jge
pop
pop
push
add
js
lods
mov
cld
xor
pop
xchg
sub
aaa
and
sbb
arpl
jb
scas
out
push
xchg
dec
mov
into
outsl
mov
xor
div
lret
test
mov
lods
fistps
shr
enter
pushf
dec
adc
scas
cld
out
nop
inc
xchg
xchg
push
mov
xchg
cmp
add
mov
push
mov
pushf
popa
int3
cld
pop
adc
rcrb
and
out
inc
mov
out
call
pop
aam
lahf
cltd
jo
and
cwtl
into
bound
arpl
out
pop
lock
movsl
or
and
push
and
test
test
dec
sarl
sub
push
sbb
jl
sub
mov
lea
int3
mov
inc
dec
notl
ficoml
dec
sub
jbe
push
adc
mov
pop
orb
ret
outsb
rol
inc
mov
mov
subl
or
xchg
jb
inc
fs
or
and
sbb
lcall
hlt
push
icebp
add
je
mov
int
filds
pop
dec
sbb
sbb
jle,pn
dec
shrl
push
lds
cmp
xchg
jge
cli
push
jg
xor
add
pushf
xchg
pop
mov
adc
outsb
mov
jne
mov
xchg
xor
jge
test
arpl
adc
xchg
push
mov
ljmp
jecxz
cmc
in
sbb
outsl
lds
xchg
into
mov
sub
pop
xor
pop
aaa
bound
addb
cmp
push
lds
or
xchg
enter
ficoms
jg
pop
stos
jbe
or
pop
xchg
stos
jne
sbb
push
mov
ret
add
ja
fwait
adc
hlt
roll
lods
lret
icebp
jnp
in
fs
imul
mov
aaa
sub
lahf
xorl
cmp
push
lods
movsl
in
rorl
jp
fisubrs
or
xor
mov
sub
cmp
fsubl
das
mov
or
inc
sub
jne
ret
movsb
add
fdivs
lods
mov
inc
sbbl
sub
jb
shlb
jg,pn
sarl
and
mov
pop
jmp
pop
push
add
dec
cmc
andb
jmp
xchg
xor
je
ficoml
sub
dec
fdivr
incl
bound
sub
ds
mov
cs
sbb
add
cmpsl
cli
mov
cmp
push
adc
cmp
movsl
mov
xor
inc
popa
jbe
mov
xor
dec
das
xchg
out
and
mov
scas
ret
sub
cwtl
inc
les
inc
iret
add
lahf
jns
cmp
ja
lds
out
cmp
fsubl
mov
inc
in
push
test
fldcw
xchg
fsubrs
int3
ljmp
xchg
xchg
mov
fs
das
mov
pusha
movsl
adc
push
ja
pop
adc
adc
je
add
adc
daa
xor
inc
cltd
cs
inc
repnz
xchg
arpl
fs
xor
cld
scas
adc
xor
pushf
andl
sub
je
push
out
arpl
mov
sub
mov
scas
fisttps
lret
and
insl
pop
sub
dec
mov
rclb
jecxz
push
insb
push
cltd
mov
popf
pushf
not
mov
sbb
cmpsl
sub
xchg
dec
pop
call
cmp
mov
add
in
jbe
mov
cmp
outsl
mov
sub
mov
cmc
testb
mov
mov
sub
push
mov
adc
mov
ret
imul
push
and
insl
test
outsl
pop
scas
inc
push
mov
cmp
adc
add
inc
lret
pop
aad
cmp
int
fsubs
bswap
sbb
cmc
and
sbb
ret
cltd
fistl
jmp
inc
pop
fidivrs
pushf
and
xor
mov
sub
movsl
push
add
cli
mulb
pop
xchg
fbstp
mov
sarb
movsw
loopne
std
mov
jecxz
push
js
ljmp
lahf
mov
pop
xor
mov
sbb
cmpsl
xchg
and
lock
call
popf
inc
stos
cld
hlt
mov
dec
xor
dec
mov
jge
sbb
sub
add
divb
dec
dec
mov
and
push
cmp
fisttpl
iret
in
rorl
fucomip
int3
inc
ljmp
das
sub
sub
mov
xor
adc
inc
fcoml
enter
mov
cltd
pusha
cwtl
push
test
push
mov
mov
jae
enter
xchg
push
mov
mov
sbb
adc
sbb
adc
mov
mov
inc
iret
js
rolb
orl
mov
imul
outsb
pop
adc
aaa
mov
mov
xchg
test
pop
in
pusha
pop
test
push
cli
adc
rcl
arpl
ret
aad
in
subl
movsl
icebp
insl
mov
xchg
jae
mov
cld
cli
insb
cmp
dec
int3
cmpb
cmp
les
pop
scas
cmp
int
adc
loopne
jne
cli
xor
jns
add
and
jg
and
arpl
pop
mov
pop
call
rorb
xor
mov
shl
cmpsl
jmp
mov
fs
jae
cmp
inc
pop
movsl
insl
loope
xlat
mov
jl
inc
test
cmp
inc
int3
jbe
and
jnp
movsb
pop
fcoml
dec
inc
shlb
lcall
sub
js
mov
jl
pusha
mov
outsb
jl
xor
fimuls
mov
mov
mov
push
mov
das
dec
mov
lcall
xchg
adc
pushf
loope
lcall
dec
popa
xor
subb
fisubrs
dec
inc
fcoms
mov
in
xor
repnz
lahf
mov
cld
xor
lods
mov
xlat
fiaddl
inc
sahf
in
jp
in
mov
inc
movsl
pop
test
mov
stos
ret
mov
sub
repnz
jg
sub
jmp
std
cmp
mov
adc
incb
lret
adc
or
xor
or
push
aaa
inc
cwtl
push
lcall
fbstp
aaa
out
stc
push
rcrl
fistps
mov
fucomip
out
add
ret
pop
ljmp
mov
or
sbb
fdivl
gs
mov
inc
leave
std
cmp
xor
inc
xchg
sbb
testl
mov
add
lahf
jb
add
jns
jae
mov
aam
aas
pushl
les
enter
aas
int3
xor
in
xchg
outsb
cltd
rorl
faddl
bound
and
cmp
popf
xchg
cmp
jno
ja
cld
lahf
cmp
bound
repz
cwtl
shrl
pop
jno
jns
fcmovu
shrb
xchg
adc
dec
mov
pop
stos
push
repnz
adc
ljmp
jge
xor
dec
mov
mov
movsl
mov
dec
or
pop
aaa
jne
xor
sub
ja
std
adc
aas
jle
inc
aas
mov
sbb
stos
std
ficoms
fildll
subl
push
repnz
sbb
je
push
and
testb
push
jae
filds
stos
clc
adc
add
pop
dec
stos
cmpsl
mov
add
in
and
fcoml
pop
and
mov
in
call
pop
xor
add
pop
ret
xor
cmp
jmp
popa
repnz
fwait
fs
stc
mov
je
lret
outsl
sbb
push
test
adc
xchg
es
xchg
arpl
sbb
xor
push
inc
and
inc
aad
fdivl
mov
xchg
in
pop
imul
jle
mov
adc
mov
push
jb
loope
mov
rcrb
pop
dec
inc
orw
dec
mov
pop
aaa
rcrl
adc
dec
mov
mov
xor
fidivl
pop
lea
call
inc
mov
ret
inc
in
aaa
fsubl
sbb
andl
or
xchg
stc
sbb
xor
lods
xor
mov
fwait
cmpb
fistpll
xchg
xchg
cmp
pop
pop
jns
icebp
imul
pop
scas
mov
testb
repnz
sub
pop
in
scas
fdivs
jbe
pop
xchg
jmp
aad
pop
inc
aad
andl
cmp
cmp
sub
push
rorb
xchg
jle
lcall
push
adc
call
stos
sub
cld
mov
jg
or
xchg
push
xchg
arpl
lahf
pop
dec
imul
pop
and
sti
adc
inc
lods
stc
idiv
xchg
pop
adc
dec
dec
sbb
push
dec
stc
push
adc
cmpsb
add
push
mov
cwtl
fdivrl
js
das
jb
imul
pop
aas
dec
mov
test
fists
sbb
or
mov
je
rorl
mov
jnp
cmp
xchg
sub
sahf
inc
out
xchg
test
mov
cmpsl
fistpl
fnstsw
jp
or
mov
mov
mov
lcall
mov
xchg
sbb
pop
clc
and
adc
ja
in
loopne
pushf
pop
mov
cltd
pop
shlb
mov
cld
dec
add
and
movsb
push
cld
fdivs
sarl
inc
cmc
pop
mov
les
and
mov
orl
push
add
loopne
fdivs
jecxz
shll
dec
xor
fs
jmp
addl
inc
lds
add
sbb
out
mov
pop
shl
lcall
repnz
andl
js
jmp
mov
push
imul
insl
push
cmp
xchg
ss
sbb
ds
lahf
and
adc
divb
loope
into
lret
xchg
push
pushf
dec
cmp
adc
lock
jl
ja
adc
fisttpl
fwait
sub
js
jae
push
sub
push
mov
jle
scas
push
xor
idiv
jmp
inc
cmp
sub
cltd
or
lock
sbb
inc
xor
push
ljmp
scas
outsl
lahf
ds
inc
shlb
mov
rcr
xchg
stos
xchg
fsubrl
mov
add
ss
adc
adc
xchg
jnp
mov
xchg
out
cmc
stos
lahf
hlt
xchg
icebp
ds
stos
shll
notl
dec
pop
aad
cmpsl
rorl
aaa
push
in
push
or
int
dec
fistpll
imul
cltd
inc
idiv
cmp
pop
mov
daa
xchg
dec
in
sti
mov
fistl
fistpll
mov
push
aaa
and
mov
lcall
xchg
cmc
andl
mov
dec
cltd
push
push
push
mov
rolb
es
dec
clc
dec
mov
ds
jnp
sub
add
mov
mov
dec
sub
xor
xchg
pop
add
test
sti
jmp
sbbl
sub
jmp
cs
aaa
mov
cwtl
dec
lds
mov
in
mov
xor
jmp
and
jne
sti
nop
std
add
imull
call
mov
mov
aaa
push
inc
sbb
imul
jl
lods
incl
xor
lods
popf
mov
cmp
xor
ljmp
xlat
xor
sbb
xchg
outsb
pop
and
dec
sub
cmpsl
add
and
xlat
ret
sub
fisubs
cld
dec
incl
mov
xor
jp
imul
mov
sti
inc
lcall
dec
mov
inc
stos
mov
jnp
aaa
mov
dec
insb
loopne
pop
mov
sub
pop
xchg
mov
xor
mov
pop
fcmove
mov
pushf
and
aas
xlat
out
dec
mov
int3
or
sbb
xchg
cmp
lds
gs
in
jne
xchg
push
or
aas
cmp
out
lahf
push
mov
mov
push
cmc
cltd
dec
mov
stos
or
pop
or
aam
loop
sub
cltd
inc
stc
jae
mov
shrl
push
sub
arpl
mov
pop
jns
or
popa
cmc
jge
sub
addl
aas
shl
cmp
push
lcall
sbb
in
adc
push
arpl
in
mov
dec
adc
hlt
mov
adc
sub
mov
fiaddl
push
cmc
sbb
inc
push
adc
decb
sub
lret
jg
mov
cmp
push
inc
mov
loop
out
outsb
outsl
mov
or
shrl
movb
sbb
xchg
add
pop
mov
leave
sti
and
add
cld
out
jnp
adc
inc
sub
es
push
dec
pushf
insl
cmp
ljmp
mov
mov
test
xor
out
push
js
bound
mov
push
ret
push
mov
in
push
bound
pop
repz
mov
arpl
xchg
aad
dec
hlt
cld
lock
loop
je
mov
test
fistps
sub
test
jg
popf
out
add
les
aam
pop
fwait
imul
push
negb
jb
sbb
into
mov
mov
add
push
daa
sub
test
push
sbb
or
xchg
cmc
pop
lret
push
add
push
movsb
mov
cmpsl
in
icebp
cld
fists
outsb
add
jmp
lcall
in
jmp
mul
jecxz
lods
test
stos
mov
push
inc
lcall
cmpsb
aaa
movsl
lea
dec
mov
xor
jno
lock
add
lcall
jns
ss
mov
mov
daa
int3
inc
and
mov
jae
push
xchg
inc
test
fsts
cwtl
mull
cwtl
out
or
test
imul
pop
xor
mov
push
xchg
xchg
addr16
mov
repz
mov
shll
pushf
push
lock
mov
and
shlb
jp
sahf
fsin
cmp
sub
mov
scas
insb
out
jle
jno
fucomip
and
adc
dec
mov
test
xchg
cmp
mov
xor
jp
out
add
xlat
std
scas
sahf
jnp
int3
jge
jno
pop
and
add
hlt
jno
stc
push
mov
add
mov
lods
je
aam
gs
scas
xchg
mov
xor
cmc
ffreep
push
mov
jl
pop
subb
or
mov
test
push
xchg
imul
stos
add
rclb
mov
fildll
call
jle
js
xor
jp
clc
push
arpl
inc
cmp
lcall
imul
push
or
xor
inc
inc
pop
or
in
insb
pop
mov
sbb
aaa
popa
cmp
roll
aas
dec
js
and
js
sarl
lret
aaa
aam
mul
pop
push
std
and
jl
jnp
mov
sarb
xlat
divl
pop
mov
cmovno
sarl
in
adc
and
xchg
or
cmp
fisubrs
fbld
adc
ret
hlt
push
mov
inc
in
push
cs
cmp
adc
jae
lock
jg
stc
mov
xor
add
cmp
int
mov
sub
cmpsb
fs
dec
int3
sbb
xor
mov
wbinvd
pop
fcomps
mov
mov
pop
pop
mov
in
loop
mov
xchg
or
jns
dec
inc
aaa
sbb
xor
sbb
and
imul
mov
lcall
into
push
mov
hlt
xchg
insl
rorb
cmpsb
loopne
or
pusha
das
mov
popf
test
shlb
rolb
add
lret
and
mov
in
movsb
dec
add
push
frstor
adc
cmpsl
outsl
sub
inc
sbb
inc
out
and
call
bound
push
cmp
inc
imulb
in
mov
stc
inc
loop
js
xlat
sbb
test
xor
es
mov
lock
dec
in
mov
xchg
cwtl
mov
cwtl
adc
cli
cmpsl
fcoms
push
jns
bound
lea
and
shlb
addl
adc
mov
pop
or
jnp
and
sub
adc
sbb
es
sbb
mov
adc
aam
mov
xchg
nop
sub
mov
mov
fbld
mov
mov
sub
mov
test
mov
mov
test
call
adc
pop
sbb
pop
push
xor
mov
add
xor
cwtl
iret
std
adc
mov
in
sub
stos
outsb
dec
push
fcmovbe
cs
mov
subl
repnz
outsl
stc
cmp
or
inc
sub
dec
movsb
jno
imull
insl
jp
lcall
inc
adc
cmp
adc
sub
ret
jmp
popf
push
adc
mov
stos
mov
inc
and
adc
in
push
mov
insl
mov
pop
ret
sub
push
lahf
sub
ljmp
test
nop
loop
subb
pushf
push
movsb
or
or
lret
mov
idivl
pop
mov
subl
negl
jmp
jb
adc
xorl
js
mov
lea
in
lods
fsts
hlt
and
and
xchg
sbb
cmc
xchg
incb
mov
and
leave
adc
in
dec
push
mov
mov
and
xor
sbb
sarb
sbb
jmp
dec
jno
addb
or
jb
inc
sbb
xchg
push
xor
mov
not
dec
cmp
mov
push
cld
cmpsb
and
cltd
lahf
out
jecxz
fcoml
add
in
push
in
shll
inc
cmpsb
in
pop
inc
call
cmpsb
pop
or
int
cmp
loope
stos
sbb
jne
insl
fdiv
push
sbb
push
jns
lods
jle
jbe
lods
jbe
mov
sub
jb
sbb
dec
pop
mov
mov
dec
gs
jl
push
jmp
mov
fidivrs
lret
mov
shll
pop
scas
clc
test
pop
pop
xchg
out
xor
and
push
aam
inc
push
sbb
je
or
std
dec
jmp
inc
in
add
insb
mov
mov
imul
mov
pop
sub
mov
shll
xor
jmp
pop
js
push
add
xchg
and
insb
cmp
inc
loope
insl
das
dec
cmp
les
outsl
xor
dec
and
xor
adc
outsl
scas
pop
movsb
bound
out
cltd
frstor
push
xor
cld
es
mov
xchg
mov
enter
cmp
jmp
pushf
pop
xor
sub
jmp
mov
xor
push
lret
divb
and
das
push
out
sub
mov
mov
test
enter
pop
rorb
cmp
dec
mov
inc
mov
divl
lea
sbb
cwtl
imul
pop
sahf
test
jl
aam
push
pop
outsl
out
dec
mov
sbb
jbe
fcmovnu
mov
stc
data16
mov
sahf
push
push
mov
adc
cwtl
adcb
fildll
sbb
xor
adc
jecxz
cmpl
sbb
shll
int3
shll
pop
shlb
or
dec
dec
inc
leave
or
hlt
scas
add
aad
stc
or
mov
clc
inc
fwait
mov
and
dec
jp
imul
aas
sbb
ror
adc
dec
jb
push
fstpt
add
cmp
cld
and
loop
mov
je
gs
mov
adc
rcrl
in
clc
jae
cmpb
xchg
sbb
push
imul
fcoms
inc
frstor
jo
or
out
orb
jne
adc
mull
test
out
cmpsl
rorb
in
imul
mov
lret
push
jb
lea
lret
cmp
lock
filds
cmp
repz
insl
stc
xor
dec
adc
cmp
cmpsl
shr
fsub
add
xchg
imul
sub
subb
mov
scas
out
adc
pop
into
mov
shrb
mov
clc
mov
test
or
in
xchg
xor
cmpsl
aad
mov
xchg
rcll
cwtl
das
lods
aaa
enter
lods
inc
mov
mov
sar
or
xor
clc
imul
cmc
les
sbb
mov
mul
pusha
xchg
inc
sub
dec
jbe
jmp
push
add
pop
xorb
cmp
aad
mov
imul
into
test
cmpb
loopne
lret
mov
xchg
addr16
xor
sbb
dec
inc
push
push
repz
mov
loope
loop
sbb
push
gs
xor
mov
popl
mov
pop
int
sarb
and
cmp
jb
es
jnp
inc
mov
in
mov
outsb
inc
lcall
lods
mov
and
lret
scas
pop
pusha
and
inc
aaa
subb
lods
xor
rclb
or
je
push
mov
jg
sub
pop
sbb
bound
mov
jecxz
sub
cli
aad
push
add
mov
ja
xchg
sub
fs
pushw
cmp
pop
and
inc
inc
pop
push
mov
add
lods
gs
sub
sbb
inc
stos
outsb
sub
pusha
movsb
pop
dec
xchg
nop
sti
orb
fistpll
mov
jge
cmp
in
adc
xchg
divb
rorl
jns
cld
pushf
pop
mov
stc
movsl
cs
mov
lods
xchg
ss
lret
pop
imul
and
idivl
mov
arpl
adc
jp
sbb
or
stos
int3
fs
jmp
cmc
pop
into
ljmp
ret
imul
adc
pop
bound
xchg
outsl
roll
cltd
cmp
cwtl
fcoms
out
mov
and
data16
cmpb
das
and
cmp
push
into
aad
popa
pop
loope
nop
sarb
mov
scas
imul
inc
sbb
mov
aad
jl
add
push
add
in
jle
scas
mov
sbb
xlat
sub
push
fistpll
bound
cmp
pushf
ret
and
iret
adc
xor
lods
jle
mov
insb
fxch
dec
inc
mov
mov
loope
xchg
add
add
mov
push
push
xor
jl
in
jg
outsl
sti
call
or
cmp
mov
add
sahf
push
cmpsb
or
popf
jge
sub
lods
outsl
mov
pop
inc
arpl
jge
jecxz
cld
mov
pop
and
or
push
bound
loop
jbe
jns
and
insl
sub
pop
insb
shrb
or
scas
in
inc
xchg
and
mov
outsb
mov
pop
mov
adc
pop
add
xor
adc
cmpsl
mov
dec
arpl
dec
dec
xor
mov
push
out
mov
fwait
insl
test
dec
push
ljmp
aas
shll
ja
cltd
jnp
scas
loopne
jb
cwtl
leave
movsb
jl
xchg
lcall
add
stos
enter
inc
sbb
sub
ss
lea
scas
ljmp
lds
aam
and
adc
mov
mov
lods
aas
mov
addr16
das
shl
push
ljmp
lret
mov
scas
in
scas
fsubs
pushf
clc
add
loopne
aaa
push
jno
rol
mov
js
add
lcall
or
push
ds
ja
mov
in
dec
sbb
test
pop
aad
stc
out
movsb
je
cwtl
je
cmp
aas
dec
in
xlat
dec
test
js
pop
xchg
mov
cmp
xchg
fimull
xacquire
fs
and
les
dec
cli
aam
xchg
jl
and
pop
add
les
lea
mov
xor
mov
sub
int
or
cmp
push
cld
js
mov
adc
movsb
add
cs
loope
push
imul
jno
ljmp
dec
loop
cmp
mov
orb
inc
ss
daa
mov
out
add
pop
cmp
adc
orl
filds
std
aad
ds
aas
out
loopne
sub
sysret
js
mov
stos
clc
in
push
pop
loop
iret
sahf
pop
push
movsb
and
lds
mov
inc
mov
cmp
or
out
jecxz
js
jge
fcomip
fldenv
adc
xchg
repnz
dec
lock
gs
clc
cmp
jbe
add
or
stos
mov
roll
sbb
lcall
cltd
cmc
push
inc
mov
sub
adc
mov
pop
movsl
or
add
mov
adc
xor
push
popf
sbb
xor
mov
inc
pop
fiadds
movsb
rolb
test
lock
cmp
cmp
mov
aaa
fsubrs
mov
stc
jne
ss
inc
mov
lret
shll
cmp
ljmp
add
mov
push
test
out
push
mov
shll
dec
lods
ret
bound
pusha
cmpsl
inc
inc
lcall
add
lock
lret
adc
cmpsl
mov
repnz
cli
lahf
int3
xor
insl
xorl
insl
stos
hlt
dec
xor
out
mov
jbe
pop
imul
jecxz
std
daa
mov
mov
xchg
ds
psrlq
insl
and
inc
mov
dec
mov
push
rorl
cmp
js
int3
or
add
xchg
mov
fcomps
sbb
mov
pop
scas
jne
push
dec
fdivr
jnp
into
out
mov
mov
dec
mov
pushf
xchg
jle
mov
push
jno
xchg
sbb
inc
daa
add
cwtl
in
lahf
mov
xchg
ret
inc
inc
aam
fiaddl
jno
xchg
fidivs
fcompp
inc
lret
outsl
pop
jmp
mov
jle
ljmp
pusha
idivb
pushf
adc
push
xchg
in
push
loop
outsb
or
dec
mov
sbb
lods
iret
sub
cli
jns
push
ljmp
mov
enter
jmp
pop
jle
add
sbb
pop
push
xchg
mov
or
sahf
push
pop
lret
jbe
xchg
xlat
fidivs
mov
ret
xchg
insl
int3
sub
hlt
cmpsb
arpl
pop
pop
aad
mov
iret
cmpsl
cltd
mov
or
push
add
dec
push
enter
push
mov
cmpsl
lds
inc
inc
adc
in
aad
push
frstor
imul
mov
or
push
ds
mov
fidivrs
clc
mov
mov
add
lea
rcrb
mov
icebp
xchg
jb
sbb
push
les
adc
cmp
cmp
clc
mov
xchg
addr16
fiaddl
inc
xorl
ljmp
bound
jno
ror
testl
mov
pop
cmpsl
inc
stos
lret
aaa
test
lcall
jge
cmp
cmpsl
sbb
lret
mov
or
push
daa
cwtl
push
adc
popl
cmpsl
dec
mov
jle
pop
ficoml
data16
shlb
pop
lock
xchg
and
sub
or
jge
mov
xchg
popa
mov
clc
sub
clc
leave
adc
jb
xchg
push
pop
jae
ret
mov
lods
repz
mov
adc
imul
mov
repz
mov
mov
lds
out
pop
das
jl
cmc
cmpsl
sahf
xchg
addr16
or
loopne
int3
adc
pop
xor
dec
jl
in
pop
dec
add
cmpsl
jecxz
and
scas
mov
lock
jl
dec
hlt
fsubrs
jno
aad
push
int
mov
loope
pop
ljmp
dec
fisubl
and
cmpsl
cmc
mov
shrl
test
push
movl
inc
pop
inc
adc
into
adc
test
mov
push
scas
push
push
adc
inc
jae
inc
push
adc
push
sub
xchg
mov
ret
xor
xor
mov
mov
lea
aam
push
and
push
xchg
xor
xchg
push
inc
xor
adc
loope
xchg
lahf
lret
mov
push
mov
shlb
push
inc
cmovb
rorl
fwait
dec
cld
mov
mov
aad
jae
lds
ret
jl
out
std
lods
push
and
imul
pop
movsb
int3
cmp
mov
addl
cmpsl
cwtl
adc
rorl
bound
aam
sub
test
cmpsb
mov
dec
roll
je
jbe
jnp
out
mov
jno
mov
mov
dec
sbb
push
ret
adc
xchg
jge
push
cmp
jle
sbb
adc
xchg
adcl
xchg
xor
cmp
push
dec
movsl
push
stos
push
pop
movsl
and
ficoml
lret
or
out
jge
out
mov
sar
test
adc
jno
cmc
out
test
int
nop
outsl
push
ds
jecxz
add
shl
cltd
add
imul
inc
xor
filds
in
fcmovnbe
lcall
adc
or
sti
stos
sbb
jno
into
jne
mov
mov
je
mov
or
jmp
lea
add
test
ljmp
fcoml
lahf
subl
test
pop
rorb
add
add
bound
add
add
add
mov
add
add
dec
xchg
add
cmpsb
add
add
xchg
add
add
add
add
add
add
add
cmp
push
push
rcl
jle
push
outsb
mov
mov
cmp
roll
stos
mov
xor
inc
pop
sub
mov
lret
iret
mov
mov
fucomip
in
xor
pop
xchg
pop
out
push
int3
mov
adc
xchg
push
and
repnz
mov
mov
bound
lahf
jmp
push
adc
and
mov
ss
push
fadd
adc
loopne
sbb
pop
out
test
dec
pop
jle
icebp
rcl
dec
inc
dec
or
add
xor
sti
xor
repz
cli
idivl
jns
cltd
mov
inc
jns
in
adc
das
repz
out
fldl
inc
pop
stos
shlb
inc
push
xchg
jne
sbb
mov
mov
xchg
xor
or
pop
and
addr16
push
mov
xor
mov
mov
bnd
decl
cmp
outsl
pop
dec
aas
cmpsb
in
cmp
mov
insl
pop
jae
xor
fsubrs
daa
jl
mov
inc
fnop
adc
or
int3
adc
fsts
cmpb
nop
fwait
xchg
xchg
push
dec
mov
fwait
pushf
or
pusha
push
rorb
les
stos
loopne
aaa
dec
sub
xchg
dec
jecxz
scas
sub
or
call
mov
inc
or
or
fwait
pop
out
lahf
test
test
mov
fiaddl
sub
xchg
sbb
lods
sub
or
sub
ja
iret
mov
fsts
je
imul
scas
cli
inc
sbb
mov
dec
icebp
jbe
call
or
aad
aam
push
mov
sub
inc
enter
adcb
xchg
push
hlt
cld
insb
or
xchg
jae,pn
test
or
shl
jp
mov
movsb
enter
outsl
xchg
push
lahf
pop
pop
sub
aam
dec
or
imul
cmp
test
mov
fimull
push
sbb
jmp
mov
fstl
sbb
dec
sub
icebp
jmp
repz
jb
push
inc
mov
lds
out
bound
inc
xor
in
lods
xchg
pop
aam
or
fsubrs
sbb
pop
fisubrl
aam
or
dec
adc
inc
btr
cmpsl
dec
and
pushf
add
fsubrl
mov
ds
mov
aad
adc
mov
cltd
aam
push
int
repz
xchg
or
dec
xchg
sub
cmp
lcall
aam
push
or
fdivp
push
not
add
shll
shrb
insl
dec
xchg
cmp
fsts
clc
mov
fldcw
movb
out
jae
iret
mov
cmp
mov
jo
cmp
push
out
jge
cmc
xor
in
pop
test
jle
and
popa
fs
xchg
pop
js
pusha
dec
sbb
mov
mov
lds
pop
leave
jne
or
push
mov
jno
in
adc
das
cmp
add
mov
push
jge
lods
pop
sbb
adc
pop
jg
lea
data16
mov
ficoms
sub
jae
nop
xor
pusha
mov
in
sub
and
pop
shl
lods
movsb
divl
das
insb
add
mov
sub
in
dec
dec
push
stc
xor
pop
xor
lcall
sbbl
jo
pushl
pop
pop
sarl
cmpl
rclb
jmp
loopne,pt
dec
adc
sub
add
jne
sub
rcr
jl
xor
test
xchg
das
insb
pop
icebp
jbe
adc
jo
sbbl
int
jne
add
dec
and
cmp
mov
inc
lret
and
and
adc
in
xor
les
popa
or
fiadds
jnp
sarb
adc
mov
cwtl
das
into
mov
jl
push
rep
loopne
push
cmp
loop
jg
ljmp
mov
out
push
leave
sbbb
insl
inc
xorl
xchg
cwtl
and
cmp
je
add
xlat
pop
jg
pushf
inc
aaa
pop
mov
loop
and
add
dec
out
sahf
shrb
dec
dec
lret
adc
mov
inc
jne
jecxz
adc
push
pop
aaa
adc
sbb
ret
xor
sub
hlt
andl
shlb
pusha
and
neg
shl
insb
std
cltd
pop
fwait
sbb
jp
mov
repz
push
mov
mov
loopne
sbb
fsubrs
fbld
push
mov
push
and
inc
fimuls
xchg
fcomps
cmp
cs
mov
shrl
push
leave
rcrl
sub
rcrb
negb
call
push
popa
xchg
sub
mov
imul
push
call
fs
push
mov
mov
cmc
sub
xchg
daa
jno
lret
or
in
push
mov
ljmp
or
pop
ss
push
sub
push
cmpsl
lea
leave
hlt
xlat
loope
xor
sahf
data16
nop
insl
add
aam
gs
add
std
adc
int
dec
aam
ss
in
xor
enter
test
add
pusha
js
arpl
sub
xchg
iret
stc
ret
js
ret
mov
shll
cli
push
shrb
dec
mov
imul
xchg
sahf
pop
push
insl
sub
movl
mov
js
or
mov
or
inc
xorb
decl
xor
jae
into
push
push
test
pop
imul
and
orb
dec
in
jbe
lahf
dec
sub
call
aaa
outsl
scas
lods
push
pop
and
jb
xchg
stos
adc
outsb
pop
popa
mov
and
lods
out
icebp
mov
inc
fmuls
fcoms
pop
mov
and
int
stos
enter
mov
jp
sbb
cmpsb
jbe
sar
sbb
xchg
or
lods
jl
das
aam
adc
jb
js
arpl
ljmp
dec
stos
sbb
call
pushaw
andl
repnz
mov
add
cmp
imul
repnz
aas
xor
pminub
lret
rcl
in
mov
adc
xor
je
xlat
loop
inc
sub
pop
imul
push
push
in
dec
jb
mov
or
dec
imul
pop
stos
push
xlat
test
aaa
pop
pop
insl
outsb
neg
mov
arpl
dec
fsubr
inc
push
test
mov
ja
rorb
mov
push
push
mov
jecxz
mov
pop
sbb
add
loop
pop
xor
inc
ret
push
lcall
cwtl
pop
adc
sti
shld
scas
or
push
movsl
sbb
jbe
mov
inc
dec
repnz
cmpsl
cmp
cmc
in
mov
adc
cmp
pop
pop
xchg
shlb
adcl
pop
fcoml
imul
int3
cli
in
inc
pop
popa
incl
mov
sbb
cli
inc
jg
ljmp
xor
mov
push
jmp
cli
lods
pop
cmpsl
xor
ret
xchg
mov
pop
jg
fsub
adc
fdivr
fiadds
mov
xchg
das
mov
das
cmp
scas
inc
mov
mov
arpl
fmulp
pop
and
inc
testb
cwtl
mov
mov
mov
repnz
push
aaa
loope
pop
push
arpl
std
mov
outsb
ja
and
cmp
int
testl
sub
jnp
mov
lds
mov
lcall
in
jno
imul
mov
lea
mov
rcl
adc
sti
add
test
dec
loop
ljmp
cmpsl
jg
ss
hlt
mov
repnz
cmpsl
pop
ljmp
jns
lds
xchg
jmp
dec
rolb
lret
mov
mov
inc
sbb
add
lods
jecxz
fdivp
lcall
and
jecxz
fidivrs
outsb
scas
nop
and
push
pop
and
or
xor
negb
mov
mov
xchg
test
cs
insl
or
push
das
sbb
aad
dec
lods
fmulp
add
xor
out
scas
mov
dec
pusha
out
leavew
ss
mov
js
aas
mov
add
pop
jno
sub
std
inc
adc
add
lret
or
cs
and
out
mulb
add
mov
ja
lcall
repnz
aad
loop
aas
mov
loopne
jg
inc
out
cltd
ror
cmc
or
mov
lds
fidivl
pop
test
data16
andb
cmp
movsb
mov
push
dec
xchg
into
and
sbb
pop
push
fucomip
cmp
dec
mov
jl
cltd
rcrl
jl
lret
stos
xor
inc
fcomip
stc
adc
sub
lock
ss
stos
push
lods
jae
adc
shll
movsl
adc
mov
movsb
dec
cltd
mov
cmpsb
add
repz
rorb
or
mov
lret
push
inc
xor
jne
les
pop
or
mov
mov
test
ds
jns
push
inc
pop
jle
add
cmp
roll
adc
aad
and
push
sti
loope
ret
ret
adc
cmp
in
cmp
jp
adc
cld
dec
inc
push
pop
add
xor
fildl
xchg
push
fcmovu
clc
gs
jle
pop
jns
push
aam
cmpsb
call
or
sub
inc
outsb
mov
cmp
jg
rcrl
mov
add
adc
xlat
push
or
movsl
lods
cmc
das
popf
xchg
pop
sbb
mov
cltd
push
es
jmp
imul
rorl
subl
and
pop
jg
and
jne
xorb
aad
lock
mov
sahf
push
fwait
out
sub
pushf
mov
fcoml
xor
jecxz
mov
sbb
dec
js
test
or
fmuls
inc
stos
aad
cli
xorl
test
pop
xor
es
gs
nop
ret
cmpsl
sub
data16
jp
pop
cmp
mov
mov
aas
or
sub
clc
test
pop
pop
cmp
sbb
clc
popf
sub
aam
in
out
nop
add
cmp
sbb
jno
add
mulb
dec
sub
push
sbb
js
push
and
pop
pop
or
push
push
pop
std
xor
jecxz
mov
sub
scas
xor
push
push
dec
inc
jl
pop
push
cmp
mov
jb
push
vminss
add
add
insl
push
shr
in
push
sub
push
or
divb
xchg
xchg
lahf
ret
int
js
xor
out
jae
cmp
sbb
xchg
movsl
adc
pushl
ret
lock
divb
pop
add
fnstsw
jnp
imul
pop
gs
scas
shlb
fnstcw
aas
jbe
in
bound
xchg
xor
stos
fdivs
adc
push
movsl
pop
divl
pop
jmp
mov
insl
gs
faddl
ds
fwait
into
fs
add
rcl
pop
shrb
mov
ds
hlt
mov
push
fiaddl
orl
cmc
mov
idivl
and
out
addr16
imul
aaa
push
in
dec
cmp
je
test
insb
out
rcll
xor
push
out
fldl
sub
inc
push
sub
daa
or
inc
psllw
jo
rcrb
cmpsb
movsl
into
das
rcrb
test
sbb
cmp
pop
sbb
sub
mov
sub
mov
neg
repz
push
call
xchg
leave
mov
pop
into
jmp
ds
mov
rcll
pop
sub
movsb
xchg
add
mov
icebp
sub
test
add
pop
enter
cwtl
adc
in
jnp
mov
rorb
inc
or
jg
mov
pop
jbe
dec
outsl
push
sbb
scas
fldcw
movsb
in
xchg
movsl
imul
push
cmpl
ljmp
push
movsb
aas
add
out
and
enter
inc
adc
xchg
ret
sbb
clc
lret
jmp
mov
sarb
negl
xchg
imul
mov
dec
rorl
mov
fs
sub
aaa
push
dec
xchg
adcb
adc
mov
adcl
iret
or
sub
pushf
pop
stc
cmp
xchg
lea
ret
pop
lock
mov
mov
mov
in
jecxz
mov
and
sub
jbe
add
xlat
shrl
imul
idivl
call
outsb
fnstsw
and
pop
adc
lahf
in
test
cs
movsb
push
fdivr
sbb
ret
stos
je
into
in
cmpsb
and
jmp
push
out
ffree
cmp
xchg
fisubrs
scas
pop
jbe
in
pinsrw
int3
stos
cmp
outsl
xchg
je
into
and
pop
stc
dec
popa
insl
fdivs
jge
rorb
pop
inc
daa
nop
icebp
jne
loop
aam
orl
jl
dec
xchg
loop
mov
pop
push
stos
addr16
cmc
bound
cmp
orl
push
test
mov
and
cwtl
ret
dec
add
inc
outsb
in
aas
decl
out
inc
adc
data16
pop
push
loope
rclb
lock
dec
mov
or
xchg
std
sbb
jle
mov
daa
movsb
imul
fwait
sbb
add
adc
cli
int3
jg
cmp
outsb
dec
pop
testl
int
shlb
inc
sbb
xchg
add
dec
rcr
xor
mov
movzwl
pop
pop
pushf
pop
xor
push
xchg
out
sub
pop
or
jns
iret
pop
sbb
enter
push
mov
insb
test
cmc
fstl
decb
loop
fsts
test
fbld
or
scas
jge
hlt
push
fcoml
sahf
lods
enter
mov
sarb
sub
dec
jle
test
bound
xchg
lock
in
mov
xchg
jge
jecxz
xchg
ret
test
xlat
in
test
sti
push
fxch
inc
xor
das
addr16
scas
sub
dec
xor
sarl
and
dec
js
xchg
dec
sahf
xor
mov
in
lods
mov
push
test
and
inc
inc
inc
out
jecxz
xor
or
sub
xlat
rorl
mov
mov
mov
jne
out
and
ja
sbb
inc
push
insb
icebp
or
mov
sarb
jo
nop
js
mov
outsb
jns
sarb
xor
mov
jne
or
mov
jne
popa
add
mov
lcall
push
sti
rcrl
add
cmp
popf
out
adc
xor
jo
ret
xchg
in
mov
daa
je
lahf
shlb
mov
pop
push
pop
push
loopne
add
popf
cmp
outsl
ret
rcll
inc
or
xchg
pop
xchg
enter
xchg
into
jne
imul
lds
sub
or
aad
stos
daa
jl
or
sahf
xchg
test
sub
jmp
sub
add
addr16
xchg
gs
iret
scas
jmp
xchg
pop
mov
adc
inc
and
xchg
inc
cmpb
xchg
sti
and
mov
cmp
into
shll
push
lds
pushf
pop
mov
jno
std
pop
cltd
mov
out
push
push
not
iret
xor
andb
std
and
movsb
inc
sbb
inc
fisubs
in
sti
cld
xchg
sbb
xchg
ja
rolb
mov
mov
inc
in
or
popl
scas
adc
cmp
push
int3
mov
inc
insl
mov
push
pop
xor
popf
pop
aam
mov
jp
or
cmp
push
insl
iret
adc
aaa
pop
sbb
push
sub
mov
sub
popf
mov
lds
test
aam
or
repz
out
aas
mov
push
xor
int
push
inc
sahf
dec
mov
pop
es
xchg
rolb
mov
insl
push
mov
mov
add
inc
mov
sub
add
push
out
lcall
jb
fistps
arpl
mov
and
jae
mov
lods
jb
add
add
inc
jbe
mov
mov
jg
out
sub
mov
sbb
repnz
mov
ret
mov
dec
mov
shrl
adc
jae
ljmp
mov
imul
pop
xlat
cmp
or
mov
pop
cmp
lds
imul
adc
push
std
outsl
stos
aam
shlb
leave
ljmp
ds
rcl
cmp
xlat
outsl
push
sbb
loope
cmc
cmp
mov
sub
fwait
mov
xchg
imul
leave
les
pop
mov
mov
xchg
push
xchg
es
mov
add
ret
jne
mov
in
ss
aad
pusha
add
xchg
or
ss
pop
mov
sub
mov
cli
scas
xchg
std
lods
mov
mov
jns
mov
and
ret
xchg
ja
or
and
jnp
adc
shrb
inc
das
or
out
cltd
cmp
fadd
in
lods
sub
mov
cmp
xchg
sbb
adc
cld
sub
rcl
fdivs
mov
add
mov
leave
jge
lods
inc
dec
adc
mov
loop
adc
imul
jb
lret
sbb
pop
sub
mov
lea
ss
in
cmc
out
sbb
shr
mov
fsubl
rorl
add
pushf
and
pop
imul
add
sar
ds
pop
or
xchg
fnstenv
enter
add
movsb
jmp
inc
adc
stc
mov
test
jb
add
ret
dec
jo
in
fldl
clc
push
cmp
cmp
or
dec
or
sbb
xchg
inc
mov
lods
pop
sbb
ss
jp
sub
scas
inc
cmp
xchg
outsb
mov
dec
mov
lret
sub
cli
push
xor
mov
int3
mov
das
mov
adc
pop
dec
nop
pushf
push
in
push
stc
lods
stc
xchg
retw
jl
pop
or
inc
repnz
mov
fnstenv
arpl
xchg
lods
pop
xchg
jbe
mov
sub
pop
in
push
jp
inc
add
xchg
mov
scas
test
or
sub
mov
xlat
pop
out
notb
orb
jp
out
adc
lret
inc
ljmp
les
mov
xchg
sub
and
repz
in
out
iret
or
xchg
add
dec
andl
das
orb
add
fmull
lahf
dec
or
and
cld
scas
test
or
hlt
sbb
inc
sub
mov
jge
add
sub
dec
mov
les
jl
test
inc
pop
and
mov
enter
and
inc
mov
add
enter
sub
cmp
dec
std
inc
rorb
xchg
jmp
xchg
out
mov
push
inc
imul
cmp
in
ljmp
mov
adc
enter
sbb
push
test
mov
cmp
ficoml
mov
mov
mov
test
pop
xor
push
pop
dec
int
ds
sub
push
add
push
int
lahf
push
dec
inc
aam
cltd
sub
and
or
cwtl
sub
xchg
xchg
dec
mov
cld
into
cmp
xor
push
pop
mov
fs
lcall
mov
xchg
push
mov
test
mov
fisttpl
mov
xchg
pop
fs
pop
cmpb
and
push
mov
lock
fstps
mov
mov
add
mov
jb
xor
add
out
mov
cld
call
push
jl
cltd
add
jmp
jns
dec
das
jb
sbb
mov
pop
pop
mov
sub
adc
add
insb
cmp
jnp
sub
lret
jb
pop
out
bound
sarb
loop
stc
pop
test
and
push
stc
xor
xor
das
pop
imul
mov
clc
add
sub
pop
shl
add
push
in
imul
cmp
mov
pop
in
ljmp
pop
jns
add
add
xor
imul
pop
mov
jnp
jb
add
and
out
jo
int3
dec
andb
outsb
mov
popa
push
lea
daa
shl
inc
andl
lea
lds
add
adc
int3
cmc
xor
jb
pop
rcr
adc
pop
es
roll
push
sbb
xchg
inc
cmpl
decl
mov
loope
aam
fldl
loope
pop
sbb
mov
fbld
mov
cs
dec
xor
jns
mov
xchg
cmc
xchg
aam
lret
ss
pusha
push
jg
mov
mov
insb
push
idiv
in
sar
pop
in
sbb
xchg
adcl
flds
push
mov
and
sti
int3
inc
leave
sbb
std
mov
adc
clc
mov
inc
sbb
dec
orl
mov
minps
out
cmp
das
pop
repz
add
mov
sahf
xor
and
jnp
out
jmp
jb
sarl
push
mov
or
xor
in
or
xor
sub
popa
outsb
nop
lds
ss
nop
pop
cli
sbb
or
je
ret
pop
fwait
mov
negb
movsb
daa
pop
jne
mov
ds
cmp
ret
mov
inc
jne
and
mov
dec
pop
pop
loop
or
xor
jmp
cmp
xor
iret
xor
inc
jb
push
inc
aaa
insb
scas
lcall
inc
inc
xor
add
pop
sbb
into
jg
ret
lods
js
dec
jmp
mov
call
push
jnp
das
and
add
je
pop
inc
mov
imulb
adc
cmpb
inc
or
addr16
sbb
push
push
xchg
bndstx
cmp
cmp
adc
push
mov
jns
data16
jb
sub
xor
shll
fistpl
inc
inc
add
movsl
jbe
jp
aas
cmc
fildll
push
loope
cli
xchg
call
into
pushf
js
shlb
icebp
jmp
jge
imul
cmpsl
setge
push
inc
fs
dec
inc
sub
lds
aam
adc
pop
mov
aas
es
aas
outsl
mov
jmp
and
fs
jno
sti
mul
push
popf
in
dec
rdtsc
adc
push
movsl
xlat
mov
push
sub
pop
leave
jg
lret
stc
bound
out
rcrl
stc
add
icebp
mov
cli
pop
mov
subl
add
cmp
and
sub
inc
jge
rorb
test
push
fnstenv
jmp
pusha
out
loopne
cmp
mov
or
lahf
pop
sbb
adc
sub
mov
xchg
mov
jo
add
sbb
dec
js
and
jmp
sbb
mov
jnp
sub
sub
mov
jecxz
lea
or
aad
pushf
data16
jne
and
loope
mov
xor
mov
and
les
pop
jp
inc
test
ret
leave
pop
push
cmp
sub
xor
xchg
add
jp
dec
filds
cwtl
mov
shrb
out
pop
dec
jno
ljmp
cmp
mov
mov
mov
and
je
movsl
fwait
out
shl
push
mov
push
and
fsubp
aas
jle
inc
cmp
sbb
clc
cld
xor
sub
das
out
cmc
dec
push
aad
in
ljmp
cmp
inc
push
dec
fsubl
mov
adc
popf
stos
adc
or
hlt
out
sub
loop
ret
out
mov
fidivl
push
jp
push
loope
gs
xor
rcll
mov
nop
jmp
add
in
setb
sub
sub
sub
dec
repz
sub
xor
rcrb
inc
xor
je
pop
nop
mov
cmp
lcall
pop
test
xorl
inc
movsl
jge
inc
xlat
sub
jnp
pop
jno
adc
lret
jno
test
das
cltd
jecxz
imul
out
inc
push
arpl
cli
aas
lods
lcall
xor
pop
notb
xchg
mov
imul
fs
mov
pop
pop
iret
cmpsb
or
adc
call
leave
ss
addr16
xchg
jge
mov
lahf
push
insl
push
pop
insl
jg
jecxz
mov
hlt
and
testl
stos
fnstsw
insl
ljmp
and
pop
fstps
mov
pop
mov
imul
in
lret
mov
int3
xchg
mov
lods
ss
fisubl
outsb
jl
xchg
mov
sbb
push
stos
xchg
ficoml
xchg
lods
aad
rorl
and
mov
les
outsl
mov
ss
xor
bound
mov
and
or
xchg
sub
filds
inc
and
ja
pop
ret
lret
push
xor
jnp
add
fstl
xchg
cmp
dec
sub
xchg
inc
dec
adc
loopne
daa
lods
lods
fmulp
sahf
pop
jne
adc
mov
or
mov
sub
xchg
and
inc
fisubs
xchg
test
pop
lods
and
cmpsl
push
pop
fwait
orb
xchg
outsb
outsb
imul
int3
fisubs
popa
mov
adc
neg
mov
pop
and
jo
ficomps
xchg
cli
popa
push
xchg
mov
cwtl
xchg
jecxz
cwtl
je
cmp
mov
inc
jns
mov
mov
xadd
iret
in
stos
int
xchg
mov
stos
jo
aad
in
jge
mov
xlat
fcomps
xchg
shll
and
sbb
xor
shl
call
stos
xchg
pushf
pop
push
add
mov
sbb
mov
jl
repnz
sahf
mov
daa
and
mov
jno
adc
lret
dec
iret
pop
cmc
movsl
sti
dec
mov
inc
jmp
test
mov
lcall
and
push
jmp
and
pop
cwtl
outsl
xchg
pop
add
mov
outsl
lahf
fadds
pop
popf
sti
leave
push
push
push
jnp
jo
jp
mov
adcl
mov
adc
ret
subl
mov
pop
xor
inc
xlat
cltd
jecxz
push
cmpsb
insl
pop
cmp
icebp
or
cmp
or
push
jae
sub
imul
out
insl
stos
jo,pt
xchg
cld
fisttps
mov
testb
mov
fwait
cld
mov
gs
es
outsb
sbb
add
hlt
push
mov
repz
mov
dec
fmul
inc
jl
jbe
bound
sub
lods
sub
xchg
lahf
int3
xchg
cld
mov
es
push
push
or
aaa
gs
fistps
inc
pop
jnp
dec
lea
mov
popf
inc
xor
push
cwtl
in
cmc
xchg
push
lock
sub
xchg
adc
test
ja
call
scas
out
push
adc
jns
jecxz
mov
or
es
add
jns
sub
out
mov
inc
xchg
dec
mov
mov
cltd
lcall
xchg
sahf
push
pop
bound
jnp
aas
aaa
test
mov
outsl
mov
jecxz
imul
cmovno
mov
jnp
adc
lahf
push
dec
aam
divl
js
jg
inc
pop
adc
fistpll
rolb
xor
notb
jns
cmp
out
adc
mov
stos
loopne
sub
or
mov
mov
or
cmpsb
ljmp
mov
and
negl
mov
push
fisttpl
xor
mov
fcomps
push
lahf
push
add
push
mov
push
lret
dec
mov
mov
mov
int3
cmp
xchg
xchg
dec
inc
lock
fsubrs
xorl
cmpsb
fwait
push
jb
cli
adc
clc
lods
cmp
add
aaa
cmpsb
mov
add
xchg
sbb
add
add
add
add
sti
add
add
add
rolb
add
add
push
jmp
add
add
add
add
add
add
jne
add
add
add
sahf
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
push
dec
add
add
add
add
add
add
add
xchg
add
add
add
out
repz
cltd
ja
clc
icebp
leave
push
cmp
arpl
mov
data16
scas
add
mov
sub
ss
stc
fidivrl
imul
test
inc
idiv
push
fs
sbb
hlt
je
mov
cs
mov
or
jno
adc
jle
je
mov
xchg
out
fs
jnp
shlb
push
or
mov
inc
jbe
test
insb
ds
push
mov
fdivrs
xor
xchg
hlt
and
test
cltd
mov
roll
dec
sbb
push
aam
in
cmc
jmp
add
dec
call
clc
lcall
addr16
push
push
lea
add
mov
imul
gs
outsl
cs
sbb
pop
pushf
jae
dec
push
inc
in
adc
sub
or
dec
adc
jnp
jg
cmp
push
add
icebp
fildl
lcall
test
lock
xchg
enter
lods
lods
fcmovne
add
xchg
mov
popf
movsl
int
daa
pop
push
arpl
fstps
mov
sti
fidivrs
dec
lret
adc
xlat
out
out
testb
into
scas
cmp
out
pop
mov
or
mov
insl
adc
add
add
sub
outsb
icebp
aad
mov
push
mov
ja
dec
fnstsw
xor
gs
xor
push
out
movsb
fidivrs
lods
movsb
lea
data16
xchg
je
xor
lock
clc
call
push
cmp
faddl
into
or
jns
cs
lods
dec
sbb
daa
fiaddl
lods
adc
sbb
jbe
leave
push
decb
jns
push
and
daa
test
cmp
jge
push
cmpl
icebp
imul
pop
mov
push
jmp
in
mov
mov
lcall
or
mov
ds
ljmp
or
test
sarb
out
cmp
add
aad
cli
xchg
jnp
je
sbb
mov
pop
imul
inc
imul
add
roll
mov
dec
hlt
in
test
cltd
in
icebp
mov
or
mov
out
adc
cmova
frstor
pop
mov
ret
sub
and
rol
js
xor
jmp
sbb
in
mov
scas
cltd
mov
outsb
orl
jo
inc
pop
test
fucom
enter
jmp
rolb
xchg
data16
scas
sbb
xchg
hlt
mov
mov
sub
pop
pop
lret
daa
lods
push
iret
ret
xchg
pusha
mov
pushf
jns
pop
adc
dec
inc
inc
and
lcall
cmp
movsb
xor
sahf
xchg
jae
push
movsl
sti
shll
pop
scas
mov
mov
test
dec
jmp
jl
ret
cmp
xchg
decb
jne
test
movsb
and
or
and
mov
cmovbe
jns,pt
pop
popa
iret
mov
lods
int
or
ret
pop
cmpsl
jmp
fprem
jge
sub
loopne
inc
push
sarl
pop
das
iret
add
push
xchg
clc
mov
stos
cmc
outsb
lods
push
adc
aas
pop
mov
fcomps
or
ds
lahf
jl
mov
or
jmp
mov
jbe
xchg
jmp
aam
mov
sub
aas
icebp
fwait
dec
mov
sub
insb
pusha
test
ficoml
xchg
pop
dec
inc
mov
sarb
sahf
or
push
outsl
fistl
decb
es
in
cmpsl
sub
add
loopne
pop
fidivs
pop
push
loope
sub
popa
into
xchg
adc
push
sti
xchg
sahf
dec
push
lock
add
cmp
adc
imul
inc
arpl
or
icebp
inc
xor
std
out
loope
inc
mov
mov
mov
or
mov
insb
mov
outsb
in
xchg
in
data16
jne
xchg
pop
leave
cmp
adc
fildl
sub
dec
mov
icebp
addl
imul
dec
cwtl
pop
inc
and
xor
subb
and
in
xor
in
in
mov
sbb
sub
ds
ret
add
xchg
jne
aaa
mov
jge
enter
dec
cmpsb
cs
fidivrl
cmp
lahf
sub
xchg
and
nop
or
fcos
pusha
mov
jo
cmpsb
mov
pextrw
jns
gs
mov
loopne
pop
xlat
adcb
nop
imul
fldt
pop
mov
icebp
jbe
jmp
pop
cmpsl
repz
sbb
adc
nop
push
fisttpll
push
int
bound
push
dec
test
or
mov
sbb
sbbb
pop
push
shrl
pushf
fwait
cmpsb
push
cmpsb
xor
push
dec
jl
push
push
push
dec
rolb
push
aas
cld
sahf
mov
repnz
loopne
lods
or
out
popa
pop
sbb
fcmovne
inc
jmp
sbb
xchg
and
leave
sarb
pop
dec
iret
imul
push
repnz
pusha
clc
adc
mov
fwait
cs
outsb
lret
aaa
or
out
pop
jns
mov
xor
jle
test
push
mov
push
ficoms
or
and
jecxz
inc
outsb
out
adc
pop
je
dec
je
pop
inc
inc
jge
dec
or
out
fistpl
lahf
in
xchg
mov
aaa
cltd
aam
fdivs
out
add
loope
jo
dec
dec
nop
sti
fstpt
add
shl
xchg
xor
xchg
cmpb
int3
jb
lds
sub
cwtl
jp
mov
fiadds
fstp
sbb
pusha
push
aas
pop
fidivl
adcb
dec
push
lahf
push
push
out
pop
ret
or
decb
rcrl
mov
arpl
push
insl
cltd
insl
pop
add
movsl
popf
mov
mov
push
inc
mov
roll
and
out
xchg
loope
dec
adc
sbbb
pop
xlat
idivl
arpl
popf
cmp
or
push
sbb
mov
lods
les
leave
imul
xor
daa
outsb
xor
lret
sub
or
es
dec
iret
ret
js
cmp
in
sub
dec
xchg
or
js
fwait
jp
xor
dec
jae,pn
mov
sub
dec
pop
jno
loop
adc
push
push
jno
fstpl
mov
loopne
adc
cmc
push
pop
leave
jnp
imul
add
sbb
dec
fwait
dec
out
dec
jb
mov
test
jnp
loop
push
xchg
popa
and
fcomps
xchg
jp
in
xchg
insl
dec
cmp
pop
shlb
xchg
and
imulb
jp
pop
ds
in
push
das
mov
ja
inc
xchg
or
or
ret
stc
insb
adc
mov
popa
or
xchg
cltd
mov
adc
adc
pop
iret
jne
sbb
inc
sub
outsb
and
push
es
lahf
sbb
xchg
pusha
xchg
dec
into
push
or
mov
adc
jg
mov
scas
dec
jle
xchg
lods
rcll
jb
aaa
popa
outsb
cld
mov
jl
lahf
sub
xchg
lds
mov
das
lcall
sbb
adc
pop
pcmpgtd
sbb
sub
dec
cmp
xor
xchg
out
mov
loop
mov
and
inc
pop
push
mov
sub
and
pop
dec
mov
in
jbe
inc
fidivrs
dec
mov
fdivrs
shlb
stc
mull
mov
push
cld
inc
cwtl
out
dec
int3
mov
dec
pushl
sub
lret
mov
dec
and
pushf
mov
sub
jmp
rcll
aad
or
fs
mov
pushf
pop
inc
dec
sub
cltd
pop
push
subl
cmc
mov
ja
dec
xchg
or
pop
test
jnp
mov
adc
addr16
addl
pop
and
and
out
int3
or
dec
cmp
mov
or
cwtl
mov
jns
outsb
daa
int
dec
xorb
dec
ja
repz
arpl
mov
daa
pop
xor
imul
cwtl
mov
xchg
ds
repz
lock
test
inc
lret
inc
aam
loope
jns
dec
pop
and
push
pop
iret
cwtl
mov
dec
in
add
xchg
sbb
repz
subb
rorl
sti
outsb
xlat
xchg
sahf
and
leave
hlt
push
out
cmc
xchg
iret
cmpsl
cmp
jns
orb
ret
mov
xchg
lds
dec
push
clc
jns
or
mov
mov
xchg
stc
mov
std
mov
fwait
popf
pop
add
bound
leave
pop
jb
push
inc
aam
cmp
call
sub
test
iret
les
pop
roll
imul
mov
push
arpl
in
filds
dec
sti
cmpsl
sub
in
sbb
je
sub
pop
adc
sub
cmp
mov
xor
add
add
fwait
ror
pop
les
dec
lods
pop
sbb
cmp
or
shrl
js
shll
inc
adc
arpl
mov
jns
stc
xlat
sbbb
outsl
pop
and
push
cmpb
fwait
cwtl
sbb
and
mov
sahf
cld
js
or
cwtl
push
push
push
mov
seto
fldcw
in
xchg
mov
jge
and
loope
sub
xchg
jb
xor
mov
push
mov
cmpsb
les
xor
out
pop
sbb
lcall
lock
aaa
cmpsb
cmp
sub
mov
sbb
add
xchg
out
push
test
and
xlat
int
js
ret
into
hlt
arpl
out
mov
dec
mov
in
gs
sbb
dec
leave
ss
addb
adc
inc
in
sub
mov
push
ret
mov
in
mov
mov
in
into
aas
pop
jmp
add
sub
inc
dec
int3
aas
xchg
jo
add
hlt
mov
shrl
jns
clc
add
mov
js
push
pop
mov
sub
push
sub
fsub
imul
iret
scas
shll
inc
and
jmp
das
mov
mov
cld
mov
adc
dec
push
mov
aam
and
push
icebp
cmp
dec
faddp
adc
pop
xchg
pop
and
rcrl
cs
in
dec
mov
adc
scas
movsl
adc
lods
sbbl
aas
enter
enter
xchg
not
fisubs
dec
and
outsl
shll
push
mov
push
and
std
dec
ljmp
lds
xor
mov
outsb
or
jg
push
outsl
sub
mov
dec
ds
jecxz
mov
push
scas
jb
imul
lret
bound
sub
sbb
aam
pop
lret
mov
inc
cmp
fistpll
fsts
fstpl
sti
and
add
ss
sub
add
testl
rcrb
mov
into
push
jno,pt
add
pusha
int3
and
mov
inc
xchg
cmp
push
mov
mov
mov
pushl
ja
add
pusha
jne
pop
les
adc
xor
pusha
outsl
push
in
mov
scas
mov
into
arpl
lock
push
cmpsl
mov
shll
pop
int3
sbb
xchg
dec
pop
push
adc
mov
out
fisttps
jne
and
stos
fsubp
in
fwait
divl
ljmp
lock
pop
sub
es
out
fidivrs
xor
insl
sahf
sti
push
fimuls
leave
pxor
sub
jle
xchg
dec
shr
dec
mov
xchg
gs
fstl
dec
mov
mov
and
jae
int3
push
out
js
or
out
jae
jbe
in
xor
cmp
jmp
mov
xor
shrb
dec
pop
test
mov
icebp
cmp
sub
sub
and
pop
xor
lds
push
push
sub
shlb
sbb
xor
xchg
cmpsb
out
stos
or
dec
add
mov
jns
sbb
cmp
add
movl
jl
fucomi
jbe
lret
fistps
push
jns
shll
xor
push
dec
lea
addr16
push
shll
or
fists
movsb
sahf
outsb
test
cltd
repz
and
pop
pop
aaa
xor
pop
hlt
cltd
in
lret
sbb
fsts
mov
je
push
jae
push
or
dec
xchg
push
hlt
pop
bound
cld
push
xchg
cmc
sbb
sbb
xchg
adc
int
leave
sbb
xor
fcoml
cmc
dec
jmp
push
mov
lcall
scas
testb
push
and
dec
in
cmpsb
push
sub
mov
ss
mov
movsb
and
and
cli
push
andl
xor
pop
lds
loop
loope
mov
cs
mov
comiss
and
mov
pop
enter
cmp
mov
inc
dec
loope
dec
jl
ja
and
call
fcomps
adc
lret
or
sti
jge
cmp
flds
je
inc
jne
adc
int
es
push
push
hlt
xchg
jmp
in
insb
cmp
sbb
loopne
sbb
insb
pop
cli
minps
pop
sbb
sti
xor
push
inc
pop
out
rcr
icebp
xchg
push
fists
mov
cmp
lds
mov
test
sbb
mov
xor
notl
mov
les
loop
shl
sub
sahf
adc
imul
push
mov
out
mov
inc
cmc
sbb
adc
js
loopne
push
lds
jo
lods
in
mov
in
fwait
daa
sub
jle
or
add
pop
fwait
dec
fidivs
sbb
adc
adc
leave
lea
adc
es
rcll
aad
mov
jecxz
mov
mov
enter
iret
adc
mov
mov
ja
and
mov
inc
stos
loope
jae
jmp
cmp
xor
mov
rclb
push
lret
add
ja
cltd
pop
mov
lahf
xchg
repz
ljmp
lock
pop
sbb
cmp
adc
jge
xchg
dec
mov
cmpsb
clc
inc
xlat
pop
jbe
insl
sarb
cmp
jns
jp
jnp
xchg
loopne
pop
fs
mov
cmpsb
sub
stos
adc
fstps
nop
add
adc
std
jae
mov
rorb
loopne
mov
mov
cmp
xchg
sub
imul
dec
push
push
mov
dec
inc
and
push
adc
pop
xchg
jle
add
push
inc
movsb
mov
in
movsb
sub
imul
out
mov
ret
fistl
addr16
rorb
jne
sub
mov
add
aad
cmc
jno
push
or
mov
inc
pop
adc
xchg
and
stos
imul
xor
repnz
into
push
fcmovb
inc
aad
xor
adc
pop
adc
flds
gs
loopne
bound
dec
lret
adc
cmp
xchg
and
aad
fcomps
ja
out
sbb
jmp
mulb
js
xor
aam
lds
adc
adc
ljmp
xor
sub
clc
push
in
cmp
loopne
in
ja
bound
inc
cs
fldl
sub
push
sub
rolb
sarb
cmp
rolb
push
adc
inc
outsb
ret
rolb
enter
mov
popf
aaa
push
cmp
vmaxsd
pop
add
xchg
sub
mov
xchg
adc
test
cmp
pop
add
mov
pop
lret
push
jl
push
cmp
inc
mov
cmp
inc
pop
loop
cmp
fs
xchg
outsb
pop
mov
icebp
and
enter
mov
mov
es
fidivrl
pop
push
shl
xchg
sarb
fisubs
mov
cs
sysenter
int
lea
test
mov
jp
sbb
call
addl
mov
rorb
pop
mov
or
pop
lock
ss
pop
cmp
add
mov
test
aaa
pop
lods
enter
xor
pop
xor
pop
je
cmp
pop
mov
nop
test
and
stos
push
fnstenv
push
adc
add
mov
lret
sbb
mov
fcomps
packuswb
xchg
xchg
pop
mov
sbb
sbb
test
scas
xor
int3
cltd
push
daa
cli
jns
dec
cli
xor
js
insl
cmp
jae
mov
xor
mov
dec
xchg
adc
repz
jb
xchg
ljmp
mov
lea
orl
mov
cmpsl
iret
es
jbe
fistps
push
dec
mov
inc
popf
hlt
mov
aad
xchg
sub
mov
mov
push
sbb
xchg
inc
aam
push
push
xchg
aas
rcrb
push
out
mov
ret
jmp
imul
in
push
jo
mov
adc
lret
shrl
mov
test
movsb
cmp
adc
xor
outsl
mov
jnp
xor
fs
fldenv
cs
mov
dec
lret
popa
adc
mov
mov
mov
jne
arpl
xor
popa
mov
add
shlb
push
int
push
push
adc
call
pushf
unpcklps
jae
sub
lock
mov
outsb
xor
movsl
jns
dec
dec
push
jb
out
mov
or
ja
xchg
dec
xor
out
or
push
mov
add
mov
cmpsb
and
ret
jbe
stos
dec
mov
pusha
movl
fnsave
push
into
loop
ffreep
mov
nop
fcmovnbe
insl
mov
cmpsl
push
push
sub
xchg
mov
add
out
push
inc
pop
xor
xor
icebp
xchg
push
pop
jp
push
lcall
sbb
mov
popa
mov
test
inc
movsb
test
std
std
jp
pop
repz
arpl
loopne
push
push
push
sti
les
insb
xchg
inc
mov
test
cs
pusha
jg
mov
xor
inc
or
cmp
idivb
sarl
out
lods
push
rcrl
daa
stc
fldcw
popa
les
adc
xchg
jbe
cmp
pop
scas
rcl
xor
sti
mov
gs
and
jno
fs
xchg
jns
into
outsl
push
loope
or
jnp
inc
stc
push
jo
lods
ror
cwtl
cmpsb
sbb
es
repnz
nop
out
in
test
cld
scas
sbb
push
flds
adc
call
jp
push
nop
inc
inc
mov
cld
push
notl
cmp
scas
sub
jl
mov
addr16
or
loopne
xchg
out
rcll
imul
hlt
push
cs
and
or
inc
jg
test
stc
in
int
mov
iret
cmp
idiv
sub
and
adcb
aaa
shlb
daa
mov
insl
mov
movsl
or
pushf
enter
xchg
cmpl
fs
shlb
dec
or
cmp
popa
xor
loop
mov
fs
cmp
xchg
mov
sti
stos
sbb
adc
call
lods
loope
fidivs
loopne
nop
xchg
xor
lcall
sub
cli
incb
mov
sub
test
scas
test
movsb
sbb
ja
pop
jne
push
mov
jmp
and
jae
hlt
sbb
xor
xor
imulb
lahf
dec
enter
rcl
sbb
adc
shll
xchg
outsb
add
mov
pop
dec
mov
sub
testl
pop
inc
ljmp
xlat
mov
jo
dec
jns
inc
popa
mov
in
scas
jne
sub
pop
dec
lea
mov
push
nop
xor
scas
cmp
xchg
pushfw
push
aam
pop
ds
repnz
je
xor
fstpl
pop
jecxz
pop
stos
test
popa
or
xor
push
in
or
mov
inc
fstps
lret
xchg
mov
iret
mov
in
sub
mov
movsb
insl
pop
jle
in
xor
std
inc
dec
jb
ficomps
enter
pop
xchg
lods
lcall
addr16
aas
xchg
stos
fwait
loop
dec
xlat
sarl
rorb
ds
add
out
dec
dec
jge
mov
imul
jb
out
fcomps
popa
or
adc
lcall
mov
or
cmp
ficomps
psrld
mov
and
push
cmp
add
das
frstpm(287
addb
sbb
stos
stos
stos
pop
repz
daa
push
lcall
dec
mov
call
lds
adc
and
xchg
mov
out
or
adc
ss
loopne
ss
repz
mov
icebp
or
pop
sub
mov
push
idivl
int3
push
jge
mov
sub
mov
aas
repnz
fnstcw
xor
mov
cmpsl
jae
loop
xlat
jns
jnp
sub
test
or
xchg
dec
xchg
adc
add
cmp
dec
aad
mov
aas
or
cmp
notb
movsl
and
and
mov
int
aam
out
cmc
loop
pop
or
sub
dec
mov
aaa
sbb
ret
fnstcw
shl
xor
fcom
jne
in
rcr
push
out
popf
sbb
add
stc
push
xorb
mov
repz
mov
xor
dec
pop
jle
stc
bound
jnp
lret
cmpsb
jo
test
jp
cmp
inc
dec
mov
mov
push
test
sub
jmp
pop
xchg
and
stc
or
and
mov
imul
mov
fcomps
dec
mov
mov
nop
or
icebp
cmp
cmp
lahf
xchg
roll
inc
cmp
lods
in
and
sub
push
data16
jle
cmp
add
mov
call
push
out
shlb
imul
test
inc
shll
inc
mov
pop
mov
or
xlat
mov
inc
push
add
jbe
mov
mov
movsb
xlat
cltd
mov
mov
dec
shll
sbb
outsl
or
xor
inc
add
in
mov
and
aaa
push
sub
sbb
push
jo
push
in
mov
cli
xchg
pop
cmc
mov
test
lock
xchg
loope
cmpsl
push
pop
lcall
sub
mov
cmp
or
adc
in
jge
push
lods
outsl
jecxz
mov
adc
repz
mov
outsl
ljmp
cwtl
or
dec
repnz
incl
popa
into
jg
roll
fisttpll
pop
sub
pop
or
inc
ss
call
mov
mov
xlat
fdivrl
inc
sbb
cli
fdivl
push
pop
inc
repnz
push
aam
and
mov
sub
cld
popf
sbb
ds
scas
xor
or
adc
jno
mov
mov
cmp
add
test
jecxz
cmp
outsb
mov
add
dec
xchg
jb
and
fidivl
jmp
mov
idivl
in
xchg
and
imul
inc
jge
iret
jnp
sbb
shl
arpl
shrb
cs
lea
cmp
sar
mov
jmp
or
popf
push
push
inc
xchg
stos
nop
xlat
stos
mov
xor
ss
dec
sahf
aam
repnz
sbb
movsb
inc
inc
push
xchg
mov
xchg
sti
sub
dec
shrl
inc
popa
cmp
push
ret
cs
shrl
movsb
dec
in
mov
jmp
jne
loop
ljmp
jae
fmulp
pusha
scas
push
mov
mov
movsl
mov
or
sbb
das
movsb
xor
iret
mov
pop
stc
adc
test
les
loop
mov
push
mov
pushf
stos
dec
clc
push
subl
mov
lahf
dec
or
cli
shlb
sets
fisttps
dec
pop
scas
and
push
ja
push
cmp
pop
push
dec
push
hlt
mov
xor
lret
pop
pusha
incl
add
mov
mov
pop
fcmovnb
hlt
sbb
push
fs
cmp
rcrb
mov
shll
jo
test
mov
xor
rcll
aas
popa
mov
jp
mov
mov
mov
test
push
push
jmp
sbb
xor
rcr
pusha
cmp
push
dec
pop
push
jns
mov
mov
fwait
jg
mov
mov
mov
dec
sarb
lahf
push
pop
dec
jne
pop
sahf
fldcw
add
test
neg
cltd
outsb
push
test
mov
std
mov
jge
dec
mov
push
orb
outsb
ret
out
adc
lds
xchg
cld
xchg
and
and
es
scas
sbb
and
dec
mov
das
leave
xchg
mov
sbb
dec
call
fiaddl
pop
fwait
sbbb
mov
adc
inc
aas
ret
bnd
sub
sti
mov
mov
add
lds
push
std
addr16
adc
xor
cmpsl
gs
sbb
mulb
clc
xor
mov
sahf
mov
or
pop
cmp
sub
push
gs
das
or
movl
test
rclb
shrb
out
or
arpl
fisubs
jmp
adc
push
xor
adcb
adc
xor
pop
pop
push
ret
jae
mov
fstps
push
dec
stos
lcall
add
jp
mov
pop
rorb
rcr
iret
jecxz
in
mov
cmp
cmpsl
and
or
cmp
paddq
fisubrs
push
pop
mov
jg
outsl
fadd
sbb
ret
pop
xchg
xor
mov
cwtl
imul
ret
mov
pop
dec
fwait
xchg
mov
out
leave
dec
movsl
jae
push
out
adc
and
sub
aas
jecxz
mov
cltd
fiadds
and
cmp
in
stos
dec
jo
push
scas
push
inc
cmpsl
pop
lds
ret
sbb
sbb
mov
fmul
sar
adcb
pop
xor
imul
movsb
adc
and
call
or
lret
add
int3
pop
icebp
mov
pop
fs
clc
jecxz
test
and
pop
decl
cwtl
cmp
sarl
popf
adc
aad
inc
subb
and
dec
dec
and
jbe
mov
notb
call
push
sub
mov
mov
adc
dec
hlt
test
ret
addl
jne
inc
lahf
mov
test
lea
stos
into
ud2
ljmp
dec
pop
dec
lock
xlat
mov
sahf
iret
sub
cmc
jo
loop
fdivl
pop
mov
mov
or
or
add
psubw
xor
push
xchg
mov
repz
mov
shll
cltd
sbb
sub
jge
clc
push
imul
cmc
pop
gs
enter
jmp
shlb
cmp
cld
push
fbld
jg
int
call
pop
int3
rcrl
pop
pop
dec
mov
jbe
nop
add
js
inc
jg
inc
inc
shlb
dec
add
lock
push
jecxz
in
or
hlt
xor
arpl
in
push
xor
arpl
incb
xor
push
mov
dec
xchg
iret
cmpsl
loopne
push
into
fldenv
cmp
insl
les
jae
ss
inc
cld
scas
mov
hlt
data16
idivl
pop
outsb
jg
add
jno
jo
call
mov
push
pusha
and
iret
mov
in
pop
xorl
xor
call
adc
xchg
sahf
out
cmp
jg
out
jp
sahf
sub
cli
dec
sbb
stc
mov
pop
rorl
add
fs
cmp
push
push
and
roll
iret
mov
pusha
mov
jp
xchg
test
mov
or
in
and
in
gs
push
out
mov
xor
adc
and
jb
or
sbb
or
test
inc
sub
repnz
pop
out
inc
js
cwtl
mov
popa
orl
popfw
dec
into
das
mov
dec
inc
outsb
daa
leave
jnp
add
dec
sub
stos
and
sti
jle
mov
lods
dec
popf
in
xchg
cmpb
jae
jbe
pop
xchg
inc
add
adc
sub
mov
ljmp
push
sub
aad
lds
jae
inc
dec
sbb
cmp
outsb
decb
or
push
icebp
add
xchg
cmpsl
adc
fwait
cmp
imul
and
pop
inc
and
mov
inc
adc
popf
jae
cmp
sbb
in
mov
or
and
roll
mov
sub
test
enter
lahf
std
xor
insl
movsl
popf
mov
or
mov
mov
sub
insb
pop
negl
lock
inc
shll
insl
mov
pop
inc
xor
stos
hlt
and
fnsave
test
popf
dec
cmp
push
xor
sub
out
testb
jge
ljmp
mov
add
jg
inc
mov
das
loope
mov
push
lods
mov
loope
push
test
push
scas
push
push
jno
clc
xlat
jl
dec
mov
jl
xchg
movsl
inc
cld
or
negb
mov
mov
int3
fisubs
jg
sar
push
and
gs
adc
pop
mov
mov
push
popf
lret
mov
xor
cmc
iret
into
mov
clc
rcr
and
inc
pop
sub
sub
sahf
inc
outsl
daa
rol
imul
fists
out
out
xchg
or
mov
scas
jnp
mov
cmc
jns
or
push
sbb
decl
inc
pop
fimull
dec
xor
insl
and
sbb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
cmp
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
roll
movb
add
sub
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
mov
add
add
add
mov
add
pop
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
add
addr16
inc
xor
jns
sarl
xchg
mov
mov
mov
out
jne
mov
add
dec
repnz
xor
inc
mov
adc
add
and
push
sbb
pop
push
jnp
orl
mov
stos
jnp
jo
popa
dec
push
or
jbe
sbb
mov
jecxz
dec
mov
dec
jmp
lods
test
pop
mov
or
call
push
push
es
je
or
xchg
mov
mov
adc
add
test
scas
sahf
sahf
mov
imul
fsubr
or
ror
mov
in
jl
idivb
gs
loop
shll
mov
add
call
pop
jnp
out
rol
or
mov
fsubrs
in
cld
mov
fwait
pushf
cmpsb
sub
add
lods
lds
insl
xor
faddl
gs
dec
push
mov
scas
inc
fwait
cltd
jge
loope
cli
aas
mov
jnp
sbb
ja
insb
pop
add
je
jo
mov
xor
pop
addl
scas
shr
xor
lods
mov
xchg
in
rcl
into
pop
push
int
mov
mov
sahf
out
xlat
xchg
mov
js
jae
add
repnz
adc
push
shrl
xor
jge
outsb
push
sbb
or
pop
mov
rcrb
dec
imul
or
iret
int3
js
pushf
ret
imul
inc
jo
mov
push
push
repz
pop
cltd
adcl
mov
mov
cmp
not
mov
lret
fcomp
test
cmp
xchg
dec
or
ljmp
test
push
dec
xchg
push
pop
lds
sbb
fwait
add
pushf
cmpb
mov
push
sbb
xchg
adc
xchg
loopne
popf
das
call
cmp
mov
cmpsl
jne
or
mov
in
add
mov
lret
int
adcb
shrb
or
xlat
jns
loop
insb
dec
xchg
cmp
testl
cmp
pop
sbb
pop
mov
mov
mov
loope
push
jecxz
bound
add
jns
sbb
pop
int3
lret
sub
lods
push
rclb
popa
sub
into
pop
popa
push
or
lock
xor
lock
sub
addr16
and
insb
loopne
mov
cld
xchg
sbb
movsb
imul
pop
push
xchg
or
out
ljmp
jno
xabort
dec
push
out
cmp
int
std
add
and
int3
sbb
or
mov
out
mov
outsl
dec
cs
xchg
or
xorb
or
mov
out
sahf
xchg
popa
or
subb
lea
es
dec
repz
cli
dec
cld
mov
fnstsw
daa
clc
into
and
inc
xchg
mov
mov
or
mov
adc
fiadds
sub
popa
fadds
movsb
push
shlb
and
dec
je
mov
inc
and
push
cwtl
lds
psubsb
test
shr
inc
cmp
adc
cmp
and
add
bound
shl
pop
fimull
imul
popf
jno
mov
loope
xor
push
mov
mov
out
mov
addb
in
fisubl
int3
outsl
xchg
push
dec
scas
push
sub
arpl
out
mov
into
lods
fidivs
div
mov
sub
mov
mov
and
jb
dec
dec
scas
mov
inc
and
cmp
aaa
stos
popf
pop
push
or
dec
inc
mov
cmp
testl
adc
jl
and
sbb
testb
popa
stc
add
jl
xchg
pushf
das
push
push
cli
rcr
pop
cmc
loopne
in
push
dec
fbstp
inc
pop
imul
or
push
mov
js
fwait
repnz
push
xchg
subl
ret
hlt
mov
adc
adc
push
mov
in
cmp
jmp
mov
sub
sarb
sbb
int3
inc
xchg
inc
or
sbb
and
jecxz
pop
sbb
xchg
push
cs
mov
jmp
inc
and
mov
insb
cmp
mov
test
sbb
jge
mov
les
pusha
lock
lea
fcmovne
gs
xor
fcomip
fdivrs
stos
xchg
push
addr16
mov
sti
mov
fcompl
lcall
dec
movsl
mov
stc
fcomp
lods
mov
or
aaa
mov
xchg
mov
std
iret
fdivrl
sbb
lods
adc
xor
incb
mov
fwait
cmc
fs
int
sbb
loop
and
xchg
inc
xor
cmp
or
dec
insl
lods
add
ss
ljmp
push
fildll
mov
jno
mov
push
int3
cmp
test
inc
mov
pop
pop
insb
mov
rolb
cltd
lret
mov
lea
inc
lret
cmpb
pop
in
adc
jo
jp
lods
xchg
sbb
xchg
cmp
shl
cld
pusha
jecxz
push
fcompl
outsl
jnp
aas
jp
popa
sahf
xchg
in
adc
shlb
cmp
ds
scas
imul
ret
jbe
cld
mov
xchg
clc
fisubrs
std
sti
sub
movsl
mov
insb
inc
int
lods
and
xor
cmp
mov
inc
out
aad
and
std
int3
mov
xchg
aad
sbb
test
addr16
mov
jns
pop
push
ljmp
cmp
pop
and
loope
call
and
cmp
pop
lret
mov
es
dec
or
imulb
pop
add
sub
push
hlt
pop
adc
xor
mov
adc
test
pop
add
mov
push
iret
mov
inc
jnp
loop
mov
and
jnp
sti
out
sbb
dec
std
hlt
jp
xor
sub
and
mov
dec
out
dec
sti
aad
xor
sbb
xor
add
in
mov
stos
push
xchg
mov
inc
in
stc
test
filds
nop
test
dec
lret
cmp
fistl
jns
les
in
in
loopne
or
cltd
inc
int3
lock
ja
rclb
cltd
shll
test
and
push
xchg
insl
mov
int3
into
adc
mov
cmp
mov
xor
add
std
fldcw
sti
mov
cmp
cmp
cmpb
sub
cmp
mov
jl
lock
rorb
xchg
jo
cltd
pop
cld
jl
sbb
and
out
cmovno
sbb
cmp
push
imul
xchg
cmpsl
add
adc
outsb
pop
mov
cltd
cmpsb
cmp
mov
jge
loope
jno
incb
dec
pop
and
mov
mov
xor
test
inc
or
inc
ret
iret
not
sub
pop
hlt
sbbb
pop
cmp
movnti
jg
addr16
cltd
add
xor
ljmp
fs
xchg
imul
sub
shll
inc
leave
pop
ss
xchg
sbb
lahf
pop
inc
rcrb
or
sub
xchg
dec
shr
fistl
sub
gs
das
sub
pop
lods
pop
inc
xor
pop
into
push
push
xchg
pushf
pop
and
push
andl
mov
and
das
mov
stos
ret
mov
inc
ljmp
pop
jbe
adc
push
sahf
mov
fcmovu
dec
xchg
pop
inc
jo
pop
ror
in
pop
push
mov
jns
out
loope
js
and
jge
out
pop
and
or
test
push
cld
jecxz
jne
add
inc
repnz
ret
push
sbb
or
testb
cmp
pop
inc
dec
mov
push
mov
cmp
movsb
lea
or
out
or
mov
push
dec
addr16
cwtl
and
mov
cmp
aas
push
ss
push
inc
xor
leave
popa
jae
jg
int3
lret
int3
jb
dec
dec
data16
pop
orl
xchg
repnz
pop
stos
clc
jb
movsb
mov
fldt
mov
push
sub
lea
sahf
jo
sbb
cwtl
sub
cmpsb
dec
and
mov
xchg
sub
lcall
jmp
loope
cli
xor
mov
sbb
pushf
sub
stos
mov
mul
or
push
and
sbb
xchg
out
in
neg
inc
popa
add
inc
mov
hlt
ret
adc
popf
xchg
sbb
sub
icebp
sbb
pusha
arpl
in
jmp
popf
lods
jb
enter
dec
das
jg
pop
cmp
testl
shr
lods
sahf
nop
aam
cwtl
dec
jp
es
dec
sti
stos
push
mov
loop
pop
xor
arpl
pop
cmpsb
dec
xchg
mov
and
sbb
jg
mov
ds
inc
inc
add
pop
inc
adc
cld
inc
enter
dec
leave
sahf
xchg
daa
jecxz
insl
xor
push
lcall
pop
jno
test
sahf
test
mov
push
adc
icebp
cltd
lret
imul
pop
shlb
je
gs
add
mov
pop
sub
cmp
loope
clc
ror
pop
cld
push
loop
gs
in
sbb
imul
pop
sbb
sub
sub
mov
shlb
and
hlt
push
enter
out
push
mov
in
push
mov
sbb
mov
ficoms
cwtl
push
xchg
mov
shll
loope
aad
lret
xor
cmpsl
sbb
fs
add
lds
dec
push
or
adc
mov
scas
mov
add
push
jno
sub
inc
inc
xchg
cli
inc
call
jp
xchg
enter
pop
andl
sub
gs
mov
jae
and
add
sarb
repz
dec
adc
test
xchg
cmc
insb
xchg
xor
dec
loop
xchg
cmc
insb
xor
pop
jne
fstpt
fnop
scas
push
cmpsl
insb
mov
pop
lods
rclb
push
inc
xor
int3
dec
jbe
hlt
add
in
popf
rorl
pop
sub
into
fldl
sub
test
sub
cwtl
nop
xchg
cmp
test
mov
bound
mov
addr16
out
enter
call
in
mov
bound
cli
mov
mov
mov
ja
int3
and
mov
lods
aas
sub
icebp
xchg
push
dec
xchg
mov
ret
bound
jl
sbb
push
lahf
int
sti
and
and
push
repnz
dec
mov
mov
stos
outsb
idivb
leave
cmc
cwtl
push
test
ret
inc
pusha
lods
out
and
out
bound
shrb
xchg
sub
repnz
pop
mov
mov
cmp
lea
insl
pushf
cmp
sub
xchg
mov
jmp
imul
ret
test
sbb
xchg
dec
lcall
inc
pop
add
mov
lods
jl
clc
cmp
mov
cmpsl
xlat
push
fisubrs
movsb
mov
test
mul
inc
and
adc
dec
sub
cmpsl
cwtl
in
jg
dec
push
fs
push
loop
movsl
cmp
xchg
cmp
iret
mov
mov
xchg
adc
add
mov
ds
imul
repnz
inc
popa
test
leave
jns
addr16
sub
inc
fwait
adc
cmc
cmp
or
adc
cmc
test
popa
pop
add
pop
pop
mov
inc
mov
cmp
push
xchg
sbb
and
push
xor
insl
in
pop
push
test
roll
pop
sub
xchg
fadd
dec
or
lea
mov
xchg
sbb
loope
pop
jg
cmp
shrl
jmp
pop
xlat
push
sti
ret
mov
push
mov
rolb
xchg
lds
lret
not
or
ss
je
cmpb
lcall
pop
enter
mov
jnp
xchg
or
cmpl
rorl
mov
lcall
mov
std
addr16
subl
jmp
pop
xchg
jno
and
xor
sbb
loopne
repnz
push
pop
fcoml
test
pop
shrl
fistl
or
cli
fadds
push
mov
bound
arpl
mov
sbb
and
cmpl
pop
dec
sub
in
cmp
add
cs
xchg
sub
mov
inc
daa
sbb
pop
icebp
pop
sub
ja
cmp
mov
adc
shll
push
lcall
hlt
mov
lods
mov
lret
xor
repnz
subl
jecxz
inc
cmp
punpckldq
enter
out
mov
movsl
xchg
xorl
arpl
inc
addb
outsb
aaa
cmp
lret
lea
loopne
sub
loop
es
xchg
push
cmp
adc
mov
sbb
or
ret
mov
jo
add
mov
mov
xor
push
insl
into
mov
xchg
add
push
in
mov
mov
sub
repz
mov
push
pop
dec
push
inc
mov
bound
xor
daa
or
mov
pop
adc
cmp
and
cmp
leave
les
mov
pop
mov
add
jmp
loop
test
cmp
mov
mov
inc
nop
ret
fsubs
popf
insl
inc
mov
adc
test
repz
lahf
mov
in
sub
push
mov
sub
sub
lret
jne
inc
xchg
jg
in
and
jl
cmp
xchg
aaa
or
add
inc
cld
scas
adc
dec
xchg
mov
inc
subb
mov
add
mov
push
stc
mov
aas
rcr
loopne
fistpl
mov
mov
es
and
jge
ds
sub
aam
inc
aaa
cld
das
adc
mov
jecxz
adc
cmpsb
or
mov
lea
and
cmp
sub
ljmp
out
in
scas
iret
cmp
pop
insb
and
lds
jecxz
jnp
jno
das
cwtl
mov
sub
jnp
mulb
or
mov
add
test
imul
dec
enter
add
and
enter
cmpsb
pusha
jne
stos
jbe
mov
xor
mov
sbb
imul
cld
ret
mov
push
push
scas
xor
adc
pop
jle
jl
ret
cmpsl
sub
mov
rorl
jecxz
sbb
or
xor
nop
adc
xor
dec
jns
adc
test
or
mov
hlt
ja
add
cwtl
mov
outsb
or
iret
bound
sbb
xor
pop
xor
inc
das
cmc
in
repnz
int3
xor
push
into
negl
sarl
repz
pop
addl
sbb
jle
es
stc
adc
xor
pop
mov
xchg
pusha
or
or
ds
imul
dec
pop
mov
jne
ret
add
or
repnz
inc
fcoms
rcrb
enter
mov
fdivl
push
out
das
js
int3
scas
sub
movsb
into
jo
loop
or
xchg
push
shlb
mov
or
in
lds
clc
pop
sub
outsl
icebp
imul
push
xlat
lock
mov
dec
scas
xchg
fisubl
cmp
loop
mov
icebp
or
cmp
ljmp
push
mov
sbb
hlt
pop
mov
shrb
jbe
mov
imul
mov
jmp
or
jmp
flds
mov
gs
push
adc
std
inc
pop
js
fimull
jnp
negb
pop
fucomip
mov
into
push
sahf
imul
cld
stc
sbb
inc
inc
mov
jmp
pop
xor
inc
ret
fidivrs
in
cmc
iret
call
cli
xor
add
add
and
lock
or
push
xor
or
jg
js
loopne
jns
pop
fstpt
add
adc
mov
cwtl
cmp
push
lcall
sar
call
mov
sbb
jmp
adc
mov
clc
into
enter
addb
mov
dec
imull
sub
xchg
xchg
xchg
mov
push
xchg
push
dec
adc
mov
mov
dec
pop
xchg
and
out
sahf
jb
pop
aaa
jge
scas
mov
sub
rcrb
in
cli
jns
xchg
ja
mov
mov
mov
adc
mov
cli
jne
psubsb
dec
pop
test
scas
lcall
cmpsb
aad
jle
push
sti
pop
sub
hlt
clc
sub
mov
push
ds
xor
test
dec
add
add
xor
js
sub
dec
sub
cs
xchg
fstp
out
or
mov
xor
fldcw
push
movsl
sub
sub
inc
js
loop
pop
add
lea
daa
fidivrs
rorb
bound
push
mov
fsts
or
dec
add
jmp
repnz
cs
xchg
lods
xchg
fdivrp
mov
inc
sub
call
inc
insb
popl
mov
pushf
inc
or
adc
or
test
sbb
push
fucom
in
js
lds
lcall
push
add
xchg
jae
dec
mov
loopne
imul
add
and
ljmp
mov
std
mov
imul
pop
and
sbbb
push
dec
add
aas
lea
cmpsl
imul
in
icebp
loope
cmp
and
insb
cmp
movsl
mov
mov
cmp
mov
aaa
aaa
sbb
clc
insl
outsl
dec
ja
sahf
xor
movsb
or
mulb
fists
les
pop
pop
ds
test
and
xchg
dec
xorl
or
push
dec
scas
mov
sarb
mov
and
test
ss
int
movsb
loop
cmp
ja
jae
out
stc
in
push
roll
ljmp
xchg
outsl
mov
dec
mov
xchg
lret
xor
or
lds
jge
xor
mov
movsl
dec
push
mov
lahf
les
inc
stos
mov
fdivrp
andl
inc
dec
test
adc
inc
pop
lret
xor
pop
push
add
cwtl
jo
mov
or
es
movsb
imul
jae
fucomip
inc
inc
daa
adc
addr16
cmp
shll
and
rcrb
adc
cmp
mov
test
mov
inc
dec
enter
sbb
aaa
sbb
push
into
clc
cmp
ss
dec
jnp
mov
sbb
fbstp
shl
fbld
sti
jecxz
int3
ret
jno
inc
sub
pop
jns
call
and
int3
cmp
pop
jno
cld
mov
lods
cmp
movsl
cltd
and
shrl
push
inc
hlt
xchg
vsqrtps
sub
in
andl
mov
cmp
js
mov
or
and
jo
jle
sbb
ret
stc
mov
add
cmc
sahf
hlt
cli
and
out
pop
sarl
out
fcoms
je
fcoms
ret
jnp
push
or
in
or
pop
xchg
xor
xor
enter
insb
lahf
fs
inc
int
dec
loop
pop
jo
cld
dec
into
ja
jnp
insb
fadd
or
sahf
push
adc
jbe
nop
mov
pop
jns
mov
test
dec
dec
sbb
ja
mov
loopne
jle
mov
outsl
lcall
adc
cli
dec
aam
in
je
mov
testb
ret
cmp
add
into
cmpsl
mov
or
xchg
in
pop
mov
pop
xchg
movsl
lea
add
es
sub
mov
outsb
lods
inc
xlat
lret
sbbl
push
in
adc
bound
mov
jl
push
inc
mov
dec
dec
mov
adc
xchg
int
sub
aad
int3
add
push
push
push
ficompl
cvttps2pi
jno
test
or
mov
cmp
aas
rcl
repnz
je
shlb
jge
orb
mov
jg
sbb
xchg
or
dec
pop
add
mov
aas
ret
pop
pop
add
lret
lcall
pop
adc
add
mov
les
and
mov
push
popf
pop
pushf
insb
dec
xchg
jbe
jl
es
je
mov
cmp
jne
inc
push
js
ds
push
push
int
add
xchg
pop
and
xchg
outsb
cmp
int3
push
mov
js
mulb
and
xchg
lods
push
adc
add
jae
mov
inc
test
rorl
in
inc
mov
mov
dec
fsubrs
pop
push
bound
cmp
sti
mov
fs
cmp
in
in
sti
lahf
stos
sbbl
sub
test
flds
leave
mov
nop
aas
fistps
cltd
lods
pop
adc
gs
xor
aad
jb
pop
insl
mov
ds
jmp
iret
sahf
mov
cmp
loopne
jns
mov
xor
push
aaa
dec
lock
aas
in
js
loopne
add
popa
cmp
dec
test
mov
jg
mov
jno
cli
jne
mov
mov
decl
jge
mov
clc
cmp
rol
sbb
out
mov
lock
jo
rolb
mov
jno
xchg
test
add
jae
scas
enter
inc
add
sbb
adc
sahf
or
inc
lods
pushf
andb
rolb
cmpsb
fcmovbe
xor
ds
in
add
aad
lahf
pop
and
mov
sbb
jecxz
test
add
or
flds
fisubrs
mov
and
cld
push
scas
and
orl
and
icebp
shr
lods
inc
push
push
mov
test
ret
rcr
dec
adc
mov
push
js
push
data16
das
js
jae
leave
pop
or
and
mov
xchg
dec
xchg
and
or
push
push
dec
stos
jle
or
fsubs
jne
mov
clc
dec
gs
shll
sub
cmpsl
add
addl
imul
imulb
lahf
repnz
loope
negb
cmc
stos
push
lcall
pop
shlb
dec
push
adcl
jns
lea
call
push
test
or
inc
dec
fistpll
inc
icebp
int
mov
mov
mov
movsb
push
push
addl
cmpb
and
pop
je
adc
mov
jbe
sbb
mov
push
lock
pop
cs
pop
test
inc
lcall
stos
jno
lret
arpl
mov
pop
cmp
and
ss
or
pop
cwtl
lods
push
sbb
inc
and
cmp
cmp
jmp
mov
test
lods
jmp
mull
cmp
addr16
jle
dec
inc
push
xchg
dec
aad
sahf
ljmp
inc
mov
cltd
hlt
mov
loope
xor
mov
mov
dec
loop
je
rclb
pop
cmc
push
pop
mov
sahf
stos
imul
adc
mov
rcr
xor
push
jb
ljmp
add
sarb
mov
push
mov
lods
jns
cmpsl
pop
fldt
push
and
add
bound
fadd
lret
icebp
mov
push
nop
mov
adc
loopne
mov
xchg
pop
cmc
add
dec
jno
jle
xchg
mov
xchg
jmp
and
shl
les
jbe
nop
fcoml
decb
xor
in
jns
sub
and
and
mov
adc
in
ja
or
add
add
pop
aad
mov
cwtl
push
ret
push
mov
imul
inc
mov
roll
shl
push
add
pop
shrl
fisttps
notl
xchg
dec
jns
clc
inc
outsl
stc
add
add
jge
repz
push
mov
arpl
adc
stos
iret
push
pop
pop
xchg
daa
cwtl
add
mov
push
jne
and
repz
cmp
lock
sarb
pop
xchg
push
rcll
scas
ror
sbb
stc
stos
cld
aam
jle
jmp
clc
or
jno
pushf
jnp
aas
xor
and
cwtl
jb
test
inc
dec
lret
outsl
shlb
out
xchg
jmp
ret
jg
push
insl
and
int3
nop
adc
stos
sub
cmp
add
sbb
mov
adc
cmp
push
in
pop
scas
pusha
mov
lret
inc
cli
push
lret
stos
shlb
shlb
inc
ret
sbb
sbbb
push
adc
xchg
pop
les
ja
or
dec
cli
jg
in
xchg
jno
add
pop
sbb
lret
xchg
mov
loopne
xchg
cmp
in
mov
js
pushf
push
iret
cmp
addr16
aas
jne
scas
adc
idivl
andl
bnd
add
add
jl
inc
dec
in
jge
es
push
cmp
cld
mov
xor
cmp
sub
push
inc
mov
hlt
push
adc
jb
fldt
jmp
and
scas
and
xor
sub
ljmp
pop
jno
ret
pop
add
inc
add
test
push
jp
sub
xchg
mov
mov
daa
outsb
add
shlb
shlb
inc
sub
add
push
ja
scas
pop
test
aas
push
mov
mov
sub
loope
xchg
mov
jle
subb
mov
int3
jmp
mov
dec
fmul
jle
xor
shrb
scas
ret
outsl
ja
je
inc
mov
rcll
sbb
fsts
lcall
call
jmp
jmp
adc
insb
loope
lret
pop
inc
fcomip
inc
mov
sbb
cmp
sub
leave
sarl
mov
les
add
mov
pop
jnp
test
inc
shl
imulb
jns
dec
jbe
popa
pop
cmpsl
das
sub
sbb
mov
jbe
jle
jl
xchg
iret
cmpsl
mov
dec
push
aaa
sub
dec
jmp
xchg
mov
xchg
xchg
clc
mov
stos
sbb
imul
lock
jbe
dec
int3
repz
push
push
pop
cmp
in
insb
fcmovb
or
mov
jne
test
add
xchg
adc
dec
xlat
in
push
popa
inc
popa
in
std
loop
mov
mov
and
in
loope
lcall
dec
nop
stos
out
xchg
mov
sti
add
xor
add
inc
add
mov
add
dec
in
mov
mov
mov
paddusb
testl
push
add
mov
scas
push
icebp
adc
pop
sub
xor
outsb
cmc
pop
xchg
mov
int
mov
sub
add
outsb
mov
mov
sti
adc
sahf
or
mov
mov
jle
fsubl
xchg
popl
jne
movsl
dec
in
call
mov
arpl
cmp
push
mov
fildl
jno
mov
fs
adc
pop
inc
pop
loope
push
jp
bound
ret
xchg
mov
mov
sub
dec
sub
stos
fcoms
mov
lods
mov
jno
mov
add
push
pop
add
sub
and
jb
imul
mov
sub
mov
fldt
fsts
mov
andl
sahf
cmpl
mov
test
scas
push
inc
stos
in
jg
fwait
loope
notb
cld
jp
cmp
out
mov
add
jle
into
jns
ror
clc
push
sbb
mov
aaa
movsl
push
pop
pop
xor
testl
jne
jns
push
das
xchg
push
adc
dec
incl
jp
sub
pop
add
cmpb
mov
cmp
sbb
xor
xchg
adc
push
sbb
inc
sbb
sti
cmpb
mov
bound
int
inc
cmp
clc
mov
mov
sub
add
inc
insl
push
jne
sub
sub
dec
add
es
nop
popf
dec
mov
cld
lods
out
lret
addr16
pop
cli
mov
fistps
leave
jecxz
push
mov
jbe
xchg
aad
jne
jo
fwait
inc
popf
xorb
ret
or
and
test
daa
lcall
mov
mov
sub
xor
outsl
sbb
test
pop
lcall
push
insl
jo
shl
bound
lret
addl
xor
test
adc
jnp
movsb
and
and
sbb
inc
rcrl
cmp
lods
xlat
mov
pushf
out
in
test
mov
push
push
lods
shrb
outsl
xchg
adc
adc
fxtract
jno
out
ds
enter
mov
rol
jbe
fnstcw
scas
ret
mov
jb
jb
cmp
mov
mov
mov
jne
sub
adc
filds
insl
loop
mov
dec
lods
sbb
jg
int3
dec
add
cld
add
add
add
sbb
add
jg
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
addb
add
add
add
pop
add
add
add
add
add
inc
cmp
add
add
add
add
add
add
movb
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
dec
add
add
add
add
add
add
or
add
insb
add
roll
add
mov
add
add
add
add
bound
add
add
add
add
add
add
add
add
dec
add
data16
movb
add
add
add
add
add
daa
add
add
add
add
jno
add
cld
add
add
add
pop
cmp
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
add
xor
add
add
adc
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
icebp
add
push
inc
add
or
cmp
sub
dec
add
add
add
add
lret
fcom
das
xchg
lods
add
add
pop
add
jns
add
dec
add
xlat
jno
xchg
add
sub
push
mov
insl
pop
jns
ja
push
outsl
popa
insl
ja
add
push
insl
jns
push
push
jno
jno
jno
push
imul
arpl
add
and
jns
addr16
insl
pop
popa
and
outsl
pop
push
jae
push
imul
and
jae
add
push
dec
add
inc
jne
dec
outsl
inc
push
jno
push
add
inc
push
xchg
push
adc
mov
add
and
add
pop
adc
pop
push
adc
in
adc
mov
adc
pop
inc
adc
rcrl
adc
aaa
sbb
add
dec
adc
fstpl
add
inc
adc
xor
adc
xlat
jge
add
imul
jo
adc
lods
adc
jo
adc
insb
daa
adc
xchg
xor
adc
mov
pop
adc
xlat
adc
add
add
cmp
add
adc
pop
adc
cmp
dec
jno
add
push
adc
dec
inc
adc
stos
jns
add
adc
mov
add
jle
add
dec
adc
jp
add
adc
add
add
das
adc
pop
push
adc
pushf
add
add
inc
adc
ret
add
push
adc
loope
adc
lds
adc
test
add
and
add
or
add
adc
add
adc
push
dec
adc
mov
adc
add
push
dec
add
popa
imul
outsl
dec
arpl
jae
push
imul
inc
dec
add
insl
add
jae
jns
dec
inc
popa
dec
insl
pop
jne
jno
jne
imul
outsl
popa
insl
ja
inc
inc
popa
insl
imul
arpl
imul
popa
push
push
insl
pop
and
push
push
and
popa
insl
gs
dec
inc
ja
jne
addr16
inc
ja
dec
pop
push
jae
inc
ja
outsl
add
jne
jno
outsl
popa
dec
and
addr16
popa
imul
insl
jns
dec
addr16
dec
imul
jns
ja
insl
pop
jns
ja
imul
inc
jne
insl
imul
inc
add
dec
gs
push
jno
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
pushf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
inc
pop
xor
aaa
pop
dec
push
dec
cmp
pop
cmp
pop
pop
xor
inc
dec
xor
aaa
add
xor
pop
cmp
pop
xor
add
inc
pop
dec
xor
pop
xor
xor
dec
add
xor
pop
inc
push
xor
xor
xor
inc
cmp
xor
pop
pop
xor
aaa
add
inc
pop
inc
xor
ss
inc
dec
xor
pop
add
cmp
aaa
pop
pop
cmp
pop
dec
pop
add
push
xor
aaa
push
push
dec
xor
dec
inc
push
pop
xor
pop
dec
push
pop
inc
dec
dec
add
dec
pop
dec
xor
pop
pop
push
cmp
inc
dec
push
pop
cmp
xor
inc
push
add
pop
push
xor
inc
pop
xor
dec
add
push
pop
aaa
inc
cmp
push
xor
pop
inc
inc
add
cmp
pop
cmp
push
dec
add
dec
xor
inc
inc
pop
xor
pop
push
dec
aaa
push
add
push
xor
push
pop
inc
xor
xor
inc
dec
inc
pop
push
dec
pop
pop
add
inc
pop
dec
push
xor
add
inc
add
pop
add
pop
add
pop
add
add
pop
add
pop
add
inc
add
aaa
add
dec
add
push
add
xor
push
add
push
add
pop
add
add
add
dec
add
add
add
inc
add
add
add
xor
push
dec
add
add
add
add
add
push
add
add
inc
add
xor
push
add
add
add
dec
add
aaa
add
inc
add
pop
add
inc
add
add
inc
push
add
add
add
inc
add
pop
add
add
push
add
add
add
dec
add
add
add
push
add
push
add
cmp
pop
add
add
push
add
aaa
add
add
add
add
pop
add
add
add
inc
push
or
inc
adc
test
mov
jecxz
fisttpll
add
push
cmp
jbe
pop
popa
push
gs
pop
addr16
addr16
fs
jns
imul
bound
ret
push
divb
inc
xchg
outsl
cmp
test
sbb
rcll
and
cmp
pop
xchg
insl
mov
pop
mov
jno
das
jb
insb
xor
mov
jp
or
and
lret
push
mov
pop
fwait
iret
adc
incb
cmpsl
sub
add
mov
xchg
outsl
adc
outsb
mov
jmp
stc
rclb
pop
daa
cli
adc
and
add
inc
dec
pop
icebp
out
fmull
lods
sub
cmp
repnz
out
into
popa
lock
dec
cltd
in
xchg
push
sub
pop
jae
inc
repz
add
popl
push
inc
in
scas
ja
cmpsb
mov
xchg
dec
sbb
dec
xchg
daa
je
push
dec
and
sbb
cli
dec
lret
sbb
inc
xor
or
jl
dec
xor
test
xchg
shrb
push
push
lds
mov
loopne
sub
mov
xchg
add
push
dec
jno
in
cmp
loopne
addr16
fs
xor
or
mov
xlat
out
lods
mov
and
ficoms
inc
fidivl
test
popa
in
sub
shll
and
xchg
test
inc
push
cmp
std
add
fsts
jp
pop
imul
test
adc
ficompl
mov
leave
shlb
imul
pop
dec
or
lcall
pop
insl
or
sti
xchg
mov
mov
add
jp
dec
stos
mov
mov
addl
shlb
push
int3
jbe
push
sub
rol
cmp
jp
test
sub
and
subb
xchg
je,pt
push
add
add
add
add
add
add
and
add
dec
add
addb
add
add
add
add
add
add
add
std
and
add
addb
cmp
add
cwtl
add
addb
add
add
add
add
add
add
add
cmp
add
mov
add
enter
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
mov
add
in
add
add
add
jo
add
testb
add
add
add
add
add
add
rorb
add
in
add
add
add
cmp
add
fiadds
add
in
add
add
add
sbb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
insb
test
mov
cmpsl
add
add
sbb
lds
pop
sbb
add
test
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
jp
add
add
sbb
pop
sbb
scas
jge
pop
sbb
pop
sbb
imul
sbb
pop
sbb
mov
test
sbb
pop
sbb
pop
sbb
pop
sbb
xor
pop
sbb
pop
sbb
xlat
cmp
pop
sbb
pop
sbb
test
test
sbb
pop
sbb
pop
sbb
sub
pop
sbb
pop
sbb
pop
sbb
pop
sbb
inc
inc
dec
testb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
in
and
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
lds
dec
in
add
dec
in
dec
in
dec
in
dec
in
dec
in
inc
jo
dec
in
dec
in
dec
in
dec
in
add
dec
in
dec
in
lahf
dec
cmc
dec
in
dec
in
dec
in
dec
in
cmp
dec
in
dec
in
add
dec
in
rorb
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
add
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
add
in
dec
in
push
pop
cmc
dec
in
dec
in
dec
in
pop
int
dec
mov
add
ffree
fs
cmc
dec
in
dec
in
dec
in
dec
in
mov
cmc
dec
in
dec
in
dec
in
add
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
cli
repnz
dec
in
add
dec
in
dec
in
dec
in
dec
in
and
cmc
dec
in
dec
in
dec
in
scas
xchg
dec
in
add
dec
in
dec
in
dec
in
dec
in
pop
pop
cmc
dec
in
dec
mov
dec
in
dec
in
add
dec
in
test
lcall
shrb
lods
je
pop
jbe
cmc
dec
in
dec
in
add
push
push
jg
mov
cmc
dec
in
dec
in
sahf
ds
dec
in
dec
in
add
dec
in
dec
in
dec
in
dec
in
xchg
mov
fisttps
dec
in
mov
add
cmc
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
mov
cmc
dec
in
dec
in
add
dec
in
dec
in
dec
in
dec
in
xor
in
std
sub
aad
mov
add
cmc
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
cmp
cmc
dec
in
pop
add
cmc
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
push
imul
mov
dec
in
add
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
add
dec
in
dec
in
dec
in
dec
in
dec
in
pop
sub
dec
in
push
pop
or
add
dec
in
dec
in
dec
in
mov
cmc
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
add
dec
in
mov
cmc
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
dec
in
push
test
add
in
dec
in
dec
in
dec
in
dec
in
shll
dec
in
dec
in
add
inc
dec
rorb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movb
add
add
movb
add
add
sbb
dec
pop
roll
add
sub
mov
add
xchg
icebp
cmpsl
pop
mov
add
movb
add
add
movb
add
add
movb
add
add
movb
sub
sbbl
movb
add
add
movb
add
inc
clc
sub
add
movb
add
add
movb
add
add
movb
add
add
movb
adc
movsb
push
rolb
add
jae
jne
add
add
movb
add
add
movb
add
add
movb
add
sub
movb
add
add
add
lret
ja
add
movb
add
add
sub
add
movb
add
js
fwait
add
jle
test
add
add
movb
add
enter
add
add
movb
add
add
jmp
cmpsl
add
movb
add
add
movb
add
add
movb
jnp
add
aaa
xor
add
movb
adc
add
mov
inc
add
movb
add
add
mov
dec
sub
add
cmp
shrl
mov
add
movb
add
add
movb
add
add
out
and
dec
cmpsb
adc
mov
add
movb
sub
add
or
add
movb
xor
add
add
pop
enter
movb
add
mov
add
movb
add
add
mov
rolb
rcl
add
add
movb
add
call
movb
add
add
movb
imul
add
add
movb
add
add
movb
add
add
movb
add
pop
jp
add
movb
sti
xchg
add
movb
add
add
cmp
add
movb
add
add
mov
add
dec
nop
dec
jae
add
movb
add
nop
movb
movl
add
add
movb
xchg
xchg
add
add
movb
add
add
movb
add
fsubs
je
add
idiv
inc
add
mov
sti
add
arpl
add
and
hlt
add
movb
dec
add
pop
fiaddl
sub
into
add
push
sarb
sahf
add
enter
adc
add
movb
add
xchg
aaa
pop
rol
cmpsl
add
sub
add
daa
ljmp
movb
add
add
pop
imul
movb
sbb
add
add
movb
add
add
movb
add
movb
add
add
rep
aas
add
movb
add
sbb
insb
into
cmp
add
add
movb
push
add
movb
popa
idiv
add
movb
add
mov
mov
add
sub
xchg
fldt
add
xchg
inc
addl
xlat
jmp
xchg
jge
add
out
dec
add
add
movb
add
pop
addb
add
add
movb
pop
mov
add
add
movb
add
ds
test
add
add
movb
xor
add
movb
add
add
movb
add
add
dec
sub
add
movb
add
add
movb
add
add
movb
add
movb
or
movb
add
add
movb
add
ret
add
movb
and
subb
add
add
movb
add
movb
add
cld
jno
add
movb
add
add
movb
add
add
movb
add
add
movb
je
movsb
add
jp
aad
add
add
movb
add
push
mov
add
movb
add
add
movb
add
add
movb
icebp
test
nop
subl
lock
movb
add
add
movb
in
sub
add
movb
add
add
movb
add
add
add
movb
add
add
movb
int
or
add
movb
add
add
repnz
sti
add
movb
add
add
movb
add
add
movb
pop
inc
add
movb
add
cs
add
movb
or
movb
add
add
add
movb
pop
incl
add
movb
add
add
movb
pop
and
add
movb
add
add
movb
add
je
dec
add
outsb
or
add
cld
mov
add
movb
add
add
movb
add
add
movb
add
add
movb
add
movb
add
add
movb
add
add
movb
add
add
movb
lret
add
xchg
pop
push
add
movb
add
movb
add
add
movb
add
xchg
push
add
mov
add
movb
add
add
movb
lret
adc
push
add
outsl
add
add
jno
bound
push
add
arpl
outsl
add
imul
jns
jbe
push
add
add
jb
ja
je
js
push
add
push
je
data16
ja
jns
adc
inc
add
arpl
je
add
jb
jne
jno
outsb
add
jae
add
add
insb
add
adc
dec
add
add
imul
push
jne
add
outsb
add
jb
popa
add
js
push
push
adc
push
add
ja
jns
insl
add
push
add
jne
outsl
add
je
data16
jno
add
sldt
add
insl
add
add
add
jb
outsb
add
bound
jae
add
add
outsb
add
outsl
add
push
data16
popa
add
jns
bound
imul
add
jp
insl
add
adc
pop
add
arpl
jae
imul
add
je
insb
add
add
push
add
insl
add
outsb
add
bound
adc
add
insb
add
add
add
imul
add
insb
add
jbe
imul
add
jns
imul
add
add
imul
add
jp
js
push
add
jns
jp
jbe
jae
add
jae
push
add
push
jns
outsb
add
add
je
jbe
imul
jns
add
jp
jne
insl
add
add
bound
adc
push
add
jp
push
add
ja
js
add
add
add
jbe
data16
add
add
add
add
add
add
add
adc
dec
add
jne
jno
jno
jne
popa
add
jo
jae
jp
je
insb
add
imul
outsb
add
jae
adc
pop
add
jo
ja
insb
add
add
bound
data16
jb
imul
add
jo
popa
add
add
ja
js
popa
add
jae
insl
add
outsb
add
add
arpl
data16
adc
push
add
imul
add
jne
add
insl
add
add
outsl
add
outsl
add
add
add
popa
add
jo
js
je
jbe
bound
add
jne
add
popa
add
adc
inc
add
jo
insl
add
add
push
data16
jp
imul
jb
add
add
imul
add
jne
insb
add
insb
add
jae
bound
jns
imul
jae
jns
imul
dec
add
jno
outsb
add
insb
add
outsb
add
popa
add
jbe
jo
arpl
imul
add
push
add
add
add
jns
jns
jbe
jbe
jae
jp
jp
je
push
add
jae
jbe
insl
add
jns
adc
push
add
imul
add
add
arpl
add
je
jb
add
jae
add
outsb
add
adc
pop
add
add
data16
add
add
add
js
data16
outsl
add
add
add
add
add
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
cmp
and
cmp
aas
ds
ds
ds
ds
ds
ds
arpl
imul
sarl
ds
ds
fidivrl
std
add
daa
aas
inc
aas
dec
aas
push
aas
cmpb
aas
sti
aas
add
add
add
add
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xor
push
xor
pop
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
pop
xor
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jne
xor
mov
xor
xchg
movsb
fbstp
sbb
aaa
dec
aaa
push
aaa
pop
aaa
insl
aaa
cwtl
aaa
ret
aaa
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
adc
sbb
daa
cmp
cmp
cmp
arpl
je
js
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
cmpl
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
outsl
cmp
mov
cmp
inc
ds
ds
test
popf
ds
ds
aas
pop
aas
test
mov
mov
xchg
aas
cwtl
aas
pushf
aas
cmpsb
aas
fstpt
add
add
add
add
xor
imul
jnp
test
mov
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
xor
cmp
popa
xor
xchg
xor
xor
xor
or
push
xor
xor
xor
xor
outsb
xor
jge
test
mov
cwtl
xor
leave
xor
xor
xor
xor
xor
xor
fdivl
loop
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
mov
lock
sbb
sub
js
jge
test
pop
aaa
mov
cmp
cmp
cmp
cmp
cmp
jp
cmpb
cmp
cmp
cmp
cmp
cmp
popa
cmp
cmp
cmp
sarl
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
ds
sbb
and
push
outsb
jb,pt
jge
cmpl
ds
ds
ds
ds
add
cmp
aas
pop
aas
imul
mov
mov
aas
lret
add
jo
add
xor
xor
dec
xor
imul
ret
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
xor
inc
xor
jb
jbe
ret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
push
xor
xor
in
lock
xor
push
xor
shlb
ss
ss
jne
mov
rolb
pop
add
add
xor
xor
xor
cmp
inc
xor
dec
xor
pop
xor
insb
xor
enter
clc
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
mov
xor
xor
xor
xor
xor
xor
xor
add
mov
add
mov
cmp
loope
in
jmp
cmp
std
cmp
or
or
sbb
sbb
sub
sub
cmp
cmp
ds
ds
ds
ds
ds
ds
ds
ds
jne
jns
jge
cmpl
lea
xchg
ds
ds
ds
mov
lods
ds
mov
mov
lds
leave
ds
sarl
