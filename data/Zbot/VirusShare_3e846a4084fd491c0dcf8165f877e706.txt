push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
call
sub
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
call
add
jmp
ret
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
lea
jge
popf
pushl
pop
dec
push
mov
call
jmp
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
xor
xor
add
cmp
je
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
add
add
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
call
and
add
in
add
movsb
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
and
add
and
add
and
add
and
add
add
adc
add
add
add
xor
add
aam
add
mov
and
add
add
and
add
add
enter
push
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
push
and
add
add
and
add
and
add
and
add
and
add
add
adc
add
add
add
xor
add
aam
add
mov
and
add
add
and
add
add
enter
push
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
outsb
fs
je
insl
inc
add
insb
jae
jb
outsb
inc
add
dec
add
je
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
aam
inc
gs
jb
jbe
push
jns
gs
add
inc
gs
jb
arpl
jae
gs
imul
gs
jo
jb
add
add
fs
imul
add
enter
jae
gs
popa
insb
jne
add
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
movb
gs
jne
jb
outsb
je
push
add
imul
je
imul
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
lock
imul
jb
je
arpl
je
push
gs
popa
jae
inc
jb
outsl
jb
add
push
gs
insl
gs
push
add
mov
jo
outsb
fs
push
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
adc
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
inc
inc
inc
push
push
cs
insb
add
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
xor
add
or
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
or
add
addb
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jge
add
jp
lods
lods
lods
add
test
mov
mov
mov
ret
les
int
int
rcl
shr
rcl
shl
rcl
shl
int3
int
hlt
leave
leave
leave
repz
in
mov
mov
lods
stos
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
rcl
sar
fdivr
xlat
xlat
xlat
xlat
xlat
aam
aam
rcl
sar
int3
int3
into
aad
aam
rcl
sar
ret
mov
mov
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
dec
lret
iret
rcl
aad
xlat
xlat
fcom
fdivr
aad
aad
into
int
dec
int
call
aad
dec
int
inc
rol
mov
mov
lods
std
cmpsl
cmpsl
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
enter
int
rcl
sar
xlat
call
fdivr
aam
aad
int3
into
int3
dec
lret
lret
dec
int
inc
rol
mov
mov
ljmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
arpl
imul
push
imul
pop
fs
cmp
sbb
femms
push
sub
sbb
aaa
cmp
and
adc
push
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
leave
enter
iret
iret
call
aad
call
aam
call
ror
dec
enter
inc
mov
mov
lods
scas
scas
jmp
popf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jle
jge
jle
jge
jo
jo
popa
arpl
push
push
push
xchg
cmp
cmp
inc
inc
inc
mov
outsl
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
lret
leave
lret
enter
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
lahf
aas
cmp
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsb
add
pop
or
jnp
nop
fcoms
addl
jnp
jp
outsl
jo
out
addr16
fdivs
je
jg
jle
jns
js
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
test
sahf
pushf
popf
decl
test
decl
xchg
xchg
lahf
lahf
sahf
sti
mov
cwtl
cwtl
mov
jp
js
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
pop
push
test
sahf
in
mov
incl
xchg
std
mov
jg
jno
jno
jae
jae
jg
jg
addb
xchg
pushw
cmp
cmp
es
cmp
movsb
mov
test
lods
stos
lods
sti
stos
lods
stos
stos
lods
lods
test
mov
cltd
xchg
xchg
xchg
decl
jg
jns
jns
jl
jnp
xchg
cwtl
movsb
movsb
movsb
scas
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
pop
push
femms
push
xor
inc
dec
imul
test
leave
lcall
out
fwait
lcall
mov
incl
mov
cltd
cltd
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
movsb
movsb
addr16
jp
scas
cmpsl
lods
add
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
sahf
sahf
sahf
std
mov
mov
xchg
in
nop
xchg
in
xchg
jne
or
add
inc
sub
sub
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
mov
call
lahf
lahf
jmp
stos
pushl
cmpsl
lods
mov
xchg
test
rolb
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
sahf
xchg
lcall
mov
call
nop
xchg
xchg
xchg
xchg
sahf
popf
pushf
movsl
movsl
mov
mov
xchg
cwtl
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pushaw
popa
popa
jne
jae
mov
lahf
orl
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
ss
mov
ja
mov
movsb
mov
mov
mov
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
cwtl
xchg
fwait
cltd
cltd
fwait
fwait
popf
lahf
sahf
sahf
mov
movsl
movsb
stc
xchg
cwtl
fwait
out
xchg
xchg
nop
xchg
xchg
les
cltd
lcall
xchg
cmc
mov
xchg
cld
xchg
jg
std
xchg
je
lcall
jmp
inc
jnp
mov
jns
mov
jae
mov
insl
ljmp
adc
lods
or
or
pushl
mov
mov
pushf
movsb
movsb
mov
add
mov
add
pusha
adc
mov
lcall
xchg
xchg
call
cltd
lcall
mov
pushf
lcall
xchg
xchg
call
xchg
xchg
call
cwtl
fwait
cld
cwtl
cltd
pushf
stc
sahf
lcall
popf
mov
xchg
push
xchg
pop
jle
cwtl
dec
js
fwait
cmp
insb
pushf
and
mov
adc
jmp
adc
lods
pcmpgtd
stos
adc
scas
adc
mov
push
mov
push
mov
insl
mov
fwait
scas
mov
scas
scas
scas
movsl
mov
mov
add
pop
pop
adc
mov
lds
sahf
call
sahf
pushf
jmp
movsl
mov
jmp
xchg
xchg
decl
mov
mov
mov
xchg
ja
cltd
jno
cltd
arpl
call
sub
decl
pop
decl
add
push
lcall
add
ljmp
pushl
sbb
outsb
mov
and
mov
pop
jne
rolb
ret
xchg
lods
mov
scas
scas
mov
sahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
shll
lcall
movsl
ljmp
cmpsb
cmpsl
ljmp
test
lcall
jg
decl
dec
jo
mov
push
mov
arpl
mov
popa
decl
or
incl
add
mov
push
decl
add
xchg
add
lcall
ljmp
push
outsb
pushl
sub
mov
sub
inc
sub
inc
sub
leave
xor
enter
movl
mov
mov
lret
movsb
dec
mov
movsl
mov
add
add
add
push
push
adc
test
mov
sahf
cltd
sahf
jmp
test
ljmp
lods
pushl
lods
lods
jmp
mov
mov
push
incl
pop
push
incl
add
addl
incl
add
add
xchg
add
xchg
add
cltd
add
lahf
add
movsl
add
scas
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsl
ljmp
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
push
decl
or
xchg
decl
add
popl
push
call
add
add
cmpsl
add
lods
add
mov
jno
ret
cmp
int3
inc
call
inc
mov
rorb
fmuls
fmuls
fisttpl
ficoml
call
xchg
mov
mov
mov
sahf
mov
add
dec
dec
adc
jnp
mov
test
lcall
test
pushl
mov
mov
mov
mov
mov
mov
mov
jmp
ss
decl
sbb
xchg
sbb
lea
pop
decl
or
mov
push
call
add
popf
add
mov
add
test
push
gs
and
mov
push
cwtl
call
push
cltd
fistl
fstl
ficomps
jmp
push
pushf
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
jns
sahf
cltd
lahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
je
nop
and
xchg
and
xchg
and
call
sbb
nop
or
call
add
lcall
ljmp
add
mov
fs
mov
xor
call
pop
cltd
fisubl
fisubs
jmp
bound
jmp
cmpsl
jmp
gs
jmp
addr16
ljmp
dec
mov
mov
mov
lahf
sahf
add
inc
inc
adc
jae
fwait
xchg
cwtl
call
lahf
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
xor
cltd
xor
xchg
daa
imul
xchg
or
xchg
add
fwait
add
mov
add
lods
add
mov
pushw
adc
roll
fsubrl
jmp
outsl
lods
jmp
jno
jmp
jb
call
jae
jmp
mov
out
jbe
out
jbe
in
jae
jmp
mov
mov
test
lcall
mov
add
add
add
jg
cmp
cmp
js
lea
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsl
jmp
cmp
xor
cltd
push
callw
add
sahf
add
movsb
add
test
add
mov
data16
mov
sbb
fsts
jmp
ja
call
jle
jmp
mov
out
cmpl
push
xchg
push
test
call
mov
mov
test
sahf
daa
lahf
mov
mov
add
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
pushl
outsb
mov
lcall
jmp
cmp
fwait
pop
call
add
movsl
add
add
scas
add
mov
fs
mov
add
iret
daa
cmp
movsl
ljmp
in
lea
push
pop
push
xchg
ret
xchg
push
nop
push
xchg
mov
out
pop
fnstenv
ret
clc
stos
stos
stos
mov
popf
popf
xor
pushf
sahf
add
add
add
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
inc
mov
ret
inc
ret
ret
inc
mov
jl
lcall
dec
cmp
dec
test
movsl
xor
lcall
add
mov
add
stos
add
mov
mov
add
enter
xlat
xor
mov
out
xchg
push
fwait
push
fwait
push
cltd
push
lcall
stc
pushf
lret
cld
sahf
int3
cli
lahf
into
cli
cwtl
leave
push
xchg
ret
fistpll
enter
mov
mov
nop
nop
add
add
add
aaa
add
cs
outsb
dec
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
sar
ret
mov
inc
enter
mov
mov
ljmp
push
xchg
movsb
sub
lcall
jmp
popa
pushl
add
rolb
dec
add
rorl
fiadds
out
lea
push
movsl
into
push
movsl
int3
push
test
sti
test
iret
sti
test
stos
iret
std
test
sar
negb
int3
dec
leave
int
mov
mov
sahf
mov
xchg
add
fwait
fwait
add
add
add
xor
add
sub
or
bound
push
xlat
jne
jo
mov
rol
rol
mov
ret
ret
inc
ret
ret
inc
mov
mov
ret
pushl
push
test
scas
push
mov
scas
dec
xchg
mov
add
mov
add
mov
arpl
mov
add
into
add
xlat
add
fists
push
popf
lret
lods
sar
cld
mov
sti
mov
cld
mov
mov
std
mov
std
mov
std
mov
mov
std
mov
push
movsl
mov
call
leave
int3
mov
mov
sahf
lahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
dec
dec
ss
outsb
mov
mov
aad
xlat
jmp
fcom
not
rcl
std
lret
dec
lret
lret
leave
lret
leave
lret
mov
jmp
push
mov
lods
jge,pt
sahf
push
popa
jmp
add
mov
fs
mov
add
roll
outsl
call
add
loopne
jae
jmp
jno
sti
lods
aam
cld
mov
fcos
std
mov
fdivr
cld
mov
xlat
mov
xlat
inc
mov
int3
jmp
mov
call
lret
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
in
pop
out
call
test
in
leave
fstp
fsub
xlat
fcmovbe
cli
xlat
fdivr
int3
rcl
mov
imul
jmp
add
mov
mov
add
lret
call
add
fldl
ja
jecxz
ja
out
xor
sti
mov
loope
inc
inc
loopne
inc
std
dec
fdivrp
std
enter
enter
leave
dec
loope
cld
mov
enter
sar
mov
mov
xchg
adc
add
add
std
incl
std
incb
std
add
div
or
out
in
pop
in
in
out
sub
out
in
dec
jmp
jmp
out
in
out
fcmovnu
fucomp
ret
stc
lods
outsl
xchg
test
ja
movsl
push
jmp
ljmp
add
mov
add
into
add
xlat
add
add
jmp
inc
pushf
cli
mov
loop
std
lret
dec
in
dec
jecxz
dec
jecxz
dec
jecxz
dec
loope
std
shl
dec
in
call
in
shl
cld
out
mov
fdivr
ret
ret
ret
cmpsb
cmpsl
mov
xchg
cwtl
add
add
add
incb
std
std
add
stc
testb
hlt
repnz
hlt
repnz
out
icebp
out
pop
out
repnz
cmp
in
out
pop
fsubp
loope
lds
xchg
sti
lahf
es
sahf
pop
pop
jmp
add
mov
data16
mov
add
roll
jb
fildl
jne
jecxz
jns
in
adc
pop
stos
sti
mov
cld
shl
shl
shl
call
out
shl
aam
std
fsub
call
call
fldl2t
shl
push
jmp
aam
dec
lret
lret
repz
test
xchg
xchg
xchg
and
xchg
cwtl
add
std
sti
add
testl
hlt
cmc
repz
aam
sarb
fwait
sbb
add
add
lods
add
mov
add
lret
add
rolb
jno
fldl
jne
call
sbb
cld
ret
loopne
std
fsubr
fucompp
std
fldpi
fucomi
std
fucomi
fsubr
fucomi
fucomp
fucomip
fucomip
fucomip
cld
shl
push
aad
out
fdivr
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsl
outsb
outsl
add
add
add
loop
add
enter
mov
cltd
repnz
and
mov
add
mov
arpl
mov
add
int
outsb
call
add
loopne
jae
ljmp
sti
mov
shl
fsubrp
std
fucomi
fucomi
std
fucomi
call
jmp
std
shl
cld
iret
loop
cli
shl
stc
int
clc
lret
test
lret
jmp
rcr
call
xlat
sti
mov
mov
cltd
fwait
lcall
cltd
cltd
add
add
rol
scas
mov
lcall
add
mov
arpl
mov
add
iret
add
fadds
jae
loope
js
ljmp
sti
xchg
cld
enter
lret
jecxz
cld
test
aam
hlt
mov
sar
icebp
mov
int
ljmp
ljmp
cli
call
cmc
fucomip
mov
mov
xchg
add
add
add
lret
add
shrl
loopne
xor
pop
ljmp
add
mov
add
dec
or
rorl
jbe
fistl
jns
loopne
cmp
dec
cwtl
jmp
mov
jmp
mov
std
loop
mov
cli
fnstsw
lock
int3
in
enter
iret
aad
loope
fadd
out
loopne
in
out
test
out
lock
call
leave
lret
push
lods
lods
lods
adc
cmpsl
cmpsb
test
mov
ret
mov
lahf
stos
aam
dec
jg
sahf
sbb
cmpsl
push
push
scas
es
mov
ja
mov
inc
xchg
ret
stc
lret
test
mov
out
mov
mov
lret
int
ror
lret
mov
iret
shll
aam
jg
fcmovnu
jb
fnstsw
gs
in
out
out
ljmp
sub
cmc
mull
icebp
lock
fstp
or
mov
into
add
add
add
sarl
mov
xchg
lock
je
ljmp
mov
sarb
stos
mov
les
rcrb
int3
jp
into
iret
addr16
rcl
push
iret
rcl
dec
aad
aad
rcl
xor
daa
fcomp
ficompl
fchs
fstl
fsub
loop
loopne
in
out
jmp
jmp
out
add
cli
cmc
add
cld
add
std
add
std
std
add
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
int3
ror
and
aam
iret
aad
adc
aad
or
aad
rcr
fadds
add
in
add
jmp
add
fcom
add
incl
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
mov
add
int
add
rolb
rcl
add
fcom
add
fcom
add
aad
add
fsub
add
aad
add
loopne
add
add
in
add
icebp
lock
std
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
ret
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
mov
aam
into
shr
rcl
aam
aam
sar
into
iret
sar
lret
int3
int3
stc
lret
lret
int3
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
leave
cld
ror
iret
xlat
xlat
call
xlat
aad
ror
sar
iret
int
dec
lret
lret
mov
mov
lods
stos
lods
icebp
cwtl
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jne
jae
gs
dec
dec
inc
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
rcl
call
rcl
dec
int3
lret
inc
sarb
ljmp
sahf
sahf
cwtl
xchg
xchg
jmp
jno
xchg
push
adc
add
add
add
add
add
jg
addb
jl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jno
jno
scas
scas
scas
pop
mov
mov
mov
mov
sar
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
cltd
cltd
add
popf
xchg
cltd
fcoml
addb
jnp
jl
js
jns
jnp
jns
jnp
jp
jb
jb
push
push
push
cmp
je
sahf
pushf
popf
mov
lods
lods
repz
lods
scas
sti
lods
scas
lods
std
test
popf
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsb
movsb
movsb
cltd
je
jae
adc
adc
add
add
add
add
outsl
insl
outsl
pop
nop
mov
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
outsb
orl
lcall
lea
call
sahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsl
mov
addb
add
add
add
add
pusha
or
scas
mov
cmpsb
lahf
mov
decl
call
lahf
sahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
push
outsl
imul
jle
subl
mov
std
nop
xchg
ljmp
sbbb
mov
mov
jnp
mov
scas
stos
insl
stos
stos
test
add
add
add
pop
or
mov
in
mov
nop
call
xchg
xchg
lcall
lcall
pushf
lahf
pushf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
imul
pushf
dec
jl
movsl
inc
js
scas
aaa
jbe
scas
sub
mov
outsl
ljmp
sbb
mov
mov
scas
mov
mov
add
add
add
add
popa
or
mov
call
popf
sahf
jmp
lahf
mov
decl
addb
xchg
jb
cld
xchg
popa
cmp
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
lcall
punpckldq
test
imul
mov
insl
pushl
sbb
jne
mov
test
scas
xchg
popf
sahf
sahf
adc
add
add
pop
pop
pop
or
stos
mov
stos
movsb
test
mov
cmpsb
test
stos
stos
stos
ljmp
xchg
cwtl
decl
imul
mov
pop
decl
or
mov
pop
call
add
cmpsl
or
pushl
sub
inc
sub
jg
enter
lret
xor
dec
pop
xchg
inc
test
mov
test
add
add
add
add
pusha
or
movsl
stos
in
mov
cmpsl
ljmp
mov
pushl
mov
decl
orps
test
push
incl
add
nop
add
xchg
add
mov
add
mov
insb
inc
aaa
cmp
inc
mov
into
inc
mov
roll
xlat
inc
xchg
flds
call
popa
popf
dec
cmpsl
mov
mov
mov
incl
add
add
pop
popa
pop
or
sahf
mov
ljmp
mov
mov
mov
ljmp
jnp
mov
call
pop
pop
decl
add
add
lahf
add
add
scas
add
mov
dec
xchg
fsts
fcompl
fistps
loop
mov
jmp
insb
cmpsb
dec
test
cld
mov
mov
cmpsb
stos
cmpsb
xor
add
add
dec
pop
jl
jl
pushf
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
imul
and
xchg
cvtdq2ps
xchg
add
popf
add
test
pop
ljmp
pop
addr16
xor
jmp
insb
stos
jmp
outsb
lods
call
jo
in
jae
call
test
mov
inc
cmpb
add
add
dec
dec
dec
pop
outsb
outsl
imul
test
fwait
cltd
xchg
pushl
mov
mov
mov
jbe
lcall
jne
popf
sub
xchg
or
pushf
add
mov
add
mov
gs
or
xchg
jmp
jns
jmp
mov
out
test
push
xchg
push
mov
mov
cmpsb
cmpsl
push
lcall
add
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
inc
mov
sahf
jmp
inc
cmp
sub
cltd
push
pop
jmp
add
mov
fs
mov
adc
fistps
out
nop
mov
push
xchg
push
xchg
push
cltd
enter
lret
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
ret
ret
pushl
push
mov
lods
dec
test
mov
add
add
mov
arpl
mov
add
fsubs
cmp
jl
push
movsb
int3
push
test
cli
test
sar
std
lods
iret
std
lods
sar
sti
cmpsb
int
out
leave
inc
rol
stos
test
sahf
or
add
add
dec
dec
dec
aaa
jae
jae
stos
test
int
lret
cmc
lret
int3
lret
lret
enter
mov
bound
mov
add
mov
gs
add
iret
add
fildl
jmp
xchg
sti
mov
mov
fdivr
cld
mov
xlat
mov
sar
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
or
rcl
dec
loopne
jecxz
loope
fadd
xlat
out
shll
cmpsl
jae,pn
movsb
push
popa
pushl
add
lret
call
add
loop
jnp
icebp
push
mov
sti
std
inc
dec
std
leave
loopne
sti
out
mov
leave
divb
popf
sbb
add
add
std
add
std
incb
jmp
in
sbb
jmp
xor
loope
loop
lds
mov
mov
add
mov
arpl
roll
dec
add
faddl
jbe
call
outsb
mov
std
std
shl
std
shl
shl
std
shl
std
aad
fsubr
aam
push
fcos
fcmove
sar
mov
mov
add
std
incb
std
add
cld
std
pop
aam
aam
mov
pop
mov
popf
or
ljmp
add
les
push
fiadds
jne
out
pop
mov
stc
mov
shl
fsubr
fsubr
std
fsub
cld
xlat
call
xlat
out
std
shl
push
enter
iret
aad
mov
sahf
popf
das
add
add
int
int
mov
arpl
lods
add
mov
add
aam
jno
loop
js
out
xor
sti
int3
loopne
stc
lret
fdivrp
test
xlat
repz
lock
in
in
vpsadbw
aam
in
fsubr
mov
test
add
add
add
aad
mov
jae
or
insl
inc
sbb
int
jl
xlat
sub
sti
loopne
pushf
clc
in
mov
out
jecxz
leave
jmp
fidivrs
int3
leave
ffreep
iret
mov
in
fcompl
out
call
rorb
mov
add
stos
stos
stos
add
xchg
mov
ljmp
xchg
fidivrl
jle
rol
stos
mov
lahf
mov
iret
mov
leave
jge
vpunpckhqdq
int3
into
pop
rcl
rorl
xlat
fdivrs
fnstsw
loopne
in
fsubl
loop
icebp
adc
in
in
or
std
incb
std
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
leave
enter
aam
rol
adc
rcl
or
loope
or
into
int
stos
stos
lods
add
std
incl
incb
cltd
cltd
lcall
mov
mov
int
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
mov
xchg
leave
enter
enter
sarl
scas
scas
insb
lods
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
mov
enter
sar
aad
aam
rcl
sar
iret
int
std
mov
stc
mov
mov
cmpsl
cmpsl
cmpsl
sarl
gs
push
pop
add
add
add
add
add
add
add
add
jno
jae
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
into
call
aam
dec
iret
into
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
jne
je
xchg
aad
jo
ret
arpl
outsl
outsb
outsb
jb
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
daa
and
add
add
add
jae
jb
popf
xchg
fwait
mov
xchg
mov
xchg
or
test
push
push
dec
inc
mov
pushf
into
movsb
movsb
mov
sti
xchg
xchg
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
sahf
pushf
cmc
cwtl
cltd
lcall
push
push
imul
jg
lea
xchg
testl
mov
mov
jno
mov
mov
stos
lods
scas
push
stos
lods
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
lcall
cltd
lcall
xchg
mov
loope
jne
out
nop
bound
std
fwait
inc
ja
cmpsb
cmp
sub
pop
jo
mov
insb
pushl
sahf
scas
lock
mov
imul
into
add
test
pop
scas
movsl
lods
test
sahf
sahf
lahf
jmp
movsl
call
push
decl
inc
jae
lea
push
mov
call
or
or
ljmp
and
mov
daa
jnp
les
inc
cltd
mov
mov
mov
test
add
add
popf
lahf
test
test
mov
pushl
xchg
decl
or
mov
push
decl
add
mov
adc
ret
dec
inc
mov
roll
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
xchg
xchg
xchg
test
mov
lods
pushl
mov
ljmp
outsb
call
sbb
popl
push
call
add
add
mov
push
xchg
fcompl
loope
mov
jmp
movsw
call
fwait
mov
mov
mov
cmpsb
test
pop
add
add
popa
arpl
mov
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
or
sahf
add
stos
add
mov
xor
call
jnp
push
jl
out
jge
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
arpl
jmp
add
ljmp
add
les
insb
fimull
in
mov
cmc
xchg
xchg
leave
push
xchg
jmp
cmpsl
inc
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
xchg
cld
rol
inc
ret
mov
xchg
ljmp
sbb
cmpsb
add
mov
fs
add
adc
in
outsb
lods
clc
cmpsb
int
clc
stos
iret
cli
lods
sar
sti
scas
sar
std
scas
sar
ljmp
fldenv
std
add
jno
inc
scas
mov
mov
aad
mov
aam
rcl
out
leave
leave
lret
xchg
jmp
add
ret
add
aam
jae
out
test
testl
std
ret
cld
ret
inc
icebp
mov
shl
test
dec
addb
add
in
in
or
jmp
out
outsb
fcomp
fisubl
mov
add
mov
add
fiadds
jbe
out
aaa
xchg
cli
scas
aam
std
iret
out
std
shl
shl
call
in
call
in
test
call
into
in
scas
lods
scas
popa
addl
add
std
std
add
incb
int3
int
sub
mov
add
mov
add
loop
jns
hlt
push
cmpsl
std
loopne
aad
std
aad
aad
cld
shl
sti
aam
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
scas
mov
cld
scas
add
mov
or
cmp
insb
lods
cld
out
mov
aam
ljmp
jmp
out
rcl
jmp
fcmovu
scas
push
fwait
cltd
lcall
add
add
mov
stos
xchg
dec
and
shll
lret
mov
xlat
mov
lret
adc
int3
outsl
fmul
iret
pop
fst
xlat
dec
in
fistpll
out
call
sbb
rol
add
mov
lods
arpl
lods
mov
ret
lds
sbb
bswap
int3
int
aad
aad
std
std
add
jg
std
std
add
add
add
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
xchg
cmp
and
daa
fldl
inc
pop
out
lea
dec
pop
cli
mov
out
addr16
dec
or
xor
or
pop
inc
push
inc
ljmp
jns
fs
inc
jp
xor
sub
add
push
nop
dec
push
test
xchg
and
insl
aam
fistps
dec
inc
hlt
push
lock
xchg
dec
mov
or
int3
mov
push
and
and
popf
cmp
aas
movsl
xor
xor
push
jle
mov
and
lahf
mov
mov
sub
xlat
adc
pop
cmp
push
int
mov
inc
sahf
xor
inc
or
movsb
out
dec
push
xlat
shll
add
and
dec
xorl
out
and
dec
cmpsl
lret
popf
aad
ret
fstpl
xor
ret
aaa
cmpsb
popf
jmp
push
add
xlat
idivb
cmpsl
xchg
jne
nop
cmp
mov
outsb
idivb
stos
mov
iret
movsb
cs
mov
stos
jmp
test
das
sub
mov
ret
jnp
shlb
imul
dec
pop
mov
xchg
jg
add
lock
pop
xchg
adc
pop
xor
sub
sub
lea
sub
aas
fists
cmp
xchg
add
into
repnz
les
shl
arpl
cwtl
push
jb
adc
dec
mov
mov
pop
mov
stos
mov
lret
jge
incl
xchg
mov
push
mov
add
add
xchg
xchg
sub
jp
ja
jmp
xchg
cmp
add
test
dec
xor
andl
das
cmp
sti
stc
push
lcall
lea
pop
jp
fwait
loop
jmp
std
loope
jecxz
stos
adc
std
xchg
push
mov
iret
clc
into
fldl
in
popa
sbb
aaa
fwait
insl
cwtl
inc
jmp
orb
and
shrb
repnz
inc
mov
daa
mov
pop
xchg
lock
mov
insl
mov
insb
orl
mov
nop
dec
dec
adc
or
scas
dec
inc
fwait
jns
lock
dec
jp
cld
mov
mov
out
add
repnz
mov
fs
inc
adc
inc
out
push
jnp
mov
lea
push
aas
mov
cmpsb
shll
or
cmp
mov
and
xorl
cwtl
cmp
sub
pop
jmp
pop
cmp
in
jo
jg
mov
cmpsl
out
faddl
jecxz
call
pop
mov
pop
cmp
insb
in
daa
jo
cmp
sub
mov
js
popf
pop
sarl
sbb
fdivrl
testb
mov
cltd
cmp
cmpsb
cmp
aas
stc
mov
dec
fsubs
sahf
jne,pn
adc
xchg
or
xchg
pop
iret
insb
out
sub
inc
adc
cmp
popf
out
jecxz
mov
cmpsl
mov
add
lds
in
outsb
fldl
pop
clc
add
repz
pusha
stos
daa
sbb
arpl
cmp
jno
dec
stc
pop
ret
pop
cli
div
adc
test
adc
pop
divl
mov
xor
iret
icebp
mov
adc
xor
loope
xchg
cli
outsl
ljmp
inc
sbb
js
xor
mov
push
dec
push
sbb
ret
out
sahf
int
xchg
test
adcl
insb
mulb
push
fs
arpl
aad
cmpsb
mov
jmp
dec
sbb
dec
add
mov
jo
pop
lret
jl
mov
mov
test
iret
xlat
inc
mov
lahf
jge
mov
adc
shrl
cmp
sahf
outsl
xchg
stc
das
test
cmp
xor
sarl
mov
mov
dec
test
imul
xchg
stc
cmp
sub
arpl
mov
xlat
mov
cmpsl
loop
out
mov
das
insb
mov
jp
decl
int
gs
in
add
mov
cld
call
test
pusha
data16
xchg
and
leave
jne
cmpl
lods
mov
push
adc
mov
mov
loope
adc
xchg
inc
jne
lods
loope
stos
lods
int
iret
push
fnstenv
fsts
lea
inc
xchg
cmpsl
xor
mov
cmp
mov
inc
hlt
jnp
xchg
icebp
cmp
inc
iret
cwtl
daa
mov
sub
push
push
jge
aaa
icebp
ss
mov
mov
mov
pusha
push
lods
in
sub
xor
in
pop
loop
out
int
push
cmc
push
out
dec
pop
repz
loopne
call
push
sbbb
cwtl
dec
hlt
popa
imul
mov
or
mov
inc
mov
in
les
inc
fsub
mov
push
aaa
push
cmp
mov
inc
rolb
or
test
xor
cwtl
int
in
push
adc
xchg
xchg
ficomps
xor
pop
push
jbe
imul
mov
push
inc
cwtl
cwtl
outsb
push
test
jecxz
xor
addl
repz
imul
test
adc
inc
xchg
jns
lcall
dec
mov
pop
and
in
jbe
stc
mov
stc
loope
or
mov
and
leave
fadds
fimuls
int
cmp
push
cwtl
dec
stos
pop
mov
mov
jmp
fmulp
sbb
and
push
scas
cmp
repnz
jmp
std
fwait
sbb
test
adc
psrld
sub
xchg
sbb
inc
leave
sub
test
adc
fidivrs
nop
popf
mov
fsub
stc
mov
mov
push
fbstp
dec
sub
xor
pop
pop
jl
sbb
mov
sub
into
sbb
int
dec
lods
adc
pop
mov
popf
and
or
cmp
stos
sub
imul
xchg
sbb
mov
imul
int3
and
cmc
ret
lret
xor
test
faddl
pushf
ss
popa
arpl
cwtl
mov
dec
jmp
jp
out
pop
int
inc
and
fwait
xchg
fstps
cmpsl
sbb
mov
rcrb
int
push
dec
adc
mov
dec
mov
cmpsl
xor
scas
stc
pop
ret
mov
les
mov
movsb
shlb
mov
and
xchg
les
hlt
mov
imul
fldcw
or
add
adc
rcll
cmp
inc
push
ss
add
in
mov
dec
stc
or
pushf
mov
push
sub
loop
pop
pop
cmpsb
mov
test
dec
aaa
cltd
int
add
shl
pushf
add
pop
jae
in
cli
push
jp
ljmp
jnp
aas
not
es
cmp
jl
lret
gs
outsb
and
mov
ret
mov
js
fcmove
push
mov
stos
jne
ret
lret
arpl
mov
les
cli
lcall
sbb
cmp
mov
inc
mov
sarb
inc
fimuls
cs
pop
pushf
es
orb
mov
lods
inc
and
daa
mov
jne
inc
fcoml
jmp
cli
test
or
sti
push
daa
mov
dec
pusha
inc
fcoml
mov
cli
jecxz
fdivl
cmp
stc
nop
ret
inc
ret
scas
adc
pop
push
ss
jl
mov
mov
addr16
xor
mov
inc
fmuls
fsubrs
imul
pusha
testb
pop
xchg
sub
dec
jge
xor
fwait
xor
dec
iret
data16
mov
test
cmp
and
push
idivl
inc
fisubrl
fbstp
mov
mov
mov
int
in
sub
push
jle
test
mov
sub
into
gs
mov
cmpsl
iret
hlt
ss
sub
cmpb
or
or
enter
inc
pop
pop
cmc
mov
lea
mov
sbb
cmp
cmp
sbbb
mov
outsl
push
loopne
hlt
mov
inc
adc
mov
lret
fucomi
dec
in
std
imul
std
xchg
and
int
std
push
push
push
push
in
push
icebp
jp
mov
out
xchg
shr
shrb
or
sbb
sub
or
and
mov
pop
loop
into
push
xlat
or
inc
dec
cmc
and
and
jae
test
mov
cmpsb
xchg
sub
inc
stos
inc
jns
scas
inc
sub
int
jle
out
and
add
jb
or
lds
mov
pop
cwtl
inc
fmul
cmp
imul
jl
mov
ficomps
ss
dec
arpl
mov
insl
mov
fdiv
mov
mov
nop
mov
fstl
scas
push
jle
scas
das
xor
in
adcb
and
aam
sbb
test
cmp
mov
pop
lods
testb
mov
mov
mov
cmpsb
movsl
ffreep
sbb
pop
fcmovb
pop
int3
sahf
pop
test
adc
sldt
ljmp
pop
hlt
or
aaa
into
mov
das
sub
or
cmp
inc
fsubp
pop
fbstp
mov
rclb
addr16
out
subl
hlt
mov
jl
adc
pop
repnz
test
fcompl
mov
push
lods
ret
daa
mov
mov
loopne
and
mov
mov
repz
sub
mov
jmp
mov
or
cmp
push
sub
dec
loop
mov
push
call
inc
xchg
mov
push
out
push
jmp
repz
sbb
sti
enter
sbb
jmp
lret
fwait
and
xchg
sub
inc
jl
xor
push
push
insb
or
lds
dec
out
jnp
dec
insl
out
shrl
mov
lret
mov
cmp
mov
mov
xchg
dec
xchg
ds
fidivl
arpl
pusha
or
jp
subl
test
sysenter
lret
cmp
jle
xchg
cmp
js
adc
jl
lret
inc
fdivrs
push
call
dec
out
dec
in
push
fdivl
add
cs
xchg
push
mov
pop
sub
repnz
sub
outsb
push
mov
dec
in
dec
sbb
cmp
fsubrs
pop
pop
icebp
dec
push
xor
outsl
jle
popa
adc
cmp
subb
jp
or
xchg
cmpsl
push
mov
or
loopne
stos
push
cmc
xchg
int3
xchg
cs
fists
test
jb
insl
jecxz
sbbl
jne
out
jb
insl
add
xor
push
sub
xchg
fwait
dec
aaa
into
mov
cltd
xor
outsb
inc
outsl
fsubrs
lret
in
cmp
das
jbe
mov
test
xchg
mov
fs
or
hlt
mov
scas
xchg
sub
sbb
jae
inc
add
jne
or
push
sbbb
xor
mov
xor
rdpmc
lret
add
cwtl
jno
lret
bound
xor
outsb
xor
cld
xor
adc
push
push
inc
xlat
inc
push
push
jmp
insl
add
sub
repnz
and
outsb
mov
aam
xor
bound
fidivl
ds
test
push
dec
xor
push
pop
push
fcomps
sbb
insl
das
mov
cmpsb
incl
lods
jp
jg
xchg
es
cs
shll
xchg
sub
cmp
push
push
out
ss
fs
rcrb
jae
push
lock
xchg
sub
ds
loop
aas
sbb
mov
sbb
es
outsl
rolb
cmp
gs
pop
and
insb
imul
pop
or
sub
outsl
je
nop
xor
dec
les
xor
xor
dec
jecxz
jl
mov
adc
dec
ljmp
pop
test
or
icebp
jg
fildl
and
out
push
cli
shlb
cmp
mov
adc
xlat
outsb
mov
outsb
rorb
jo
pop
mov
mov
cmpsb
cmp
or
icebp
mov
addr16
lcall
es
or
inc
jp
sub
push
sbb
data16
testl
cmp
mov
iret
add
lcall
ret
pusha
idiv
push
sub
inc
fwait
ds
addr16
pop
pusha
and
mov
inc
stc
ja
dec
in
push
adc
xchg
rclb
std
mov
or
add
test
jbe
dec
cwtl
push
cld
xchg
dec
cmp
outsl
push
je
push
fs
jge,pt
mov
and
inc
faddl
enter
and
mov
push
sub
pop
mov
inc
mov
xchg
imul
and
outsb
pusha
adc
data16
add
adc
test
xor
or
cli
xchg
loopne
mov
stos
test
outsl
mov
pop
lds
jp
and
out
add
out
cmp
mov
xor
xchg
xlat
outsb
or
testb
mov
pusha
imull
dec
or
push
pop
test
mov
push
xchg
idivl
ret
pop
mov
xor
sbb
test
dec
scas
sub
cmpsb
pop
shlb
enter
xchg
sub
jg
aad
shrl
notb
test
lds
out
jp
fbstp
fwait
aaa
into
or
adc
lret
xor
push
mov
dec
loope
push
movsl
cmp
movb
mov
inc
enter
imul
jge
fwait
xor
sbb
push
pop
lret
bound
mov
ja
test
mov
rol
pop
repz
fidivrs
sbbb
or
sti
xchg
repnz
hlt
mov
mov
add
xchg
cmp
jle
cmp
pop
push
int3
sbb
add
jb
shll
jecxz
int3
arpl
add
mov
xchg
sub
cmp
ja
sub
xchg
mov
sbb
inc
jne
test
nop
daa
push
adc
shrl
out
mov
mov
js
mov
inc
fmuls
std
xchg
pop
push
and
xor
jg
push
push
das
movb
sub
sbb
shll
imul
push
outsl
xchg
sub
xor
or
fsubrs
inc
in
test
fisttpll
pop
pop
xchg
sub
test
loope
jge
pop
mov
mov
adc
jg
pusha
testl
and
sub
mov
cld
sub
mov
hlt
dec
jnp
cmp
and
dec
outsl
arpl
xchg
outsb
cmpsb
cmp
adc
adc
inc
adc
ret
test
push
in
adc
or
ret
or
int3
mov
jo
js
jecxz
push
repz
repnz
mov
cmp
int3
mov
orl
push
mov
adc
adc
scas
adcl
fsubrs
test
lret
sub
inc
pop
loopne
and
loope
js
xor
into
psrad
cwtl
mov
fldl
add
push
mov
mov
add
sub
stc
sub
loopne
imul
xor
js
pop
lret
pcmpgtb
pushf
out
or
pop
inc
jno
nop
ss
test
pop
pop
hlt
jne
xor
mov
shll
push
mov
push
sub
mov
add
xchg
fidivs
js
dec
mov
es
jge
pop
fistpll
jo
xchg
sarb
jae
pop
std
xchg
pop
mov
adc
adcb
fnstsw
sbb
xchg
data16
dec
and
pop
cld
and
call
repnz
sbb
icebp
xchg
inc
loop
jecxz
xor
scas
sub
int3
out
imul
mov
jmp
xchg
dec
aam
xor
jle
outsl
jmp
push
add
jmp
xchg
sbb
pop
decl
push
mov
pushf
ds
mov
add
xchg
repnz
mov
mov
push
xor
rcrb
mov
hlt
add
jecxz
sbb
out
pop
cmc
xor
push
jl
mov
lock
ja
mov
dec
xor
mov
lock
push
cmpsb
jne
stc
popa
loope
sbb
jae
filds
xor
sahf
nop
sub
inc
bound
cmpsl
inc
xor
rclb
dec
mov
testl
adc
mov
pop
pop
jmp
mov
inc
jb
movsb
cmp
sub
push
test
mov
in
sbb
sti
xchg
sub
or
jge
sub
iret
mov
push
in
and
fs
daa
inc
jae
jne
sbbb
xchg
xchg
sub
fwait
mov
inc
sbb
mov
outsl
inc
fdivl
nop
jmp
ret
xchg
jecxz
mov
sbb
daa
mov
insb
mov
mov
fisubl
or
jb
adc
nop
daa
sbbb
stos
outsb
push
inc
ret
jbe
clc
mov
data16
lret
dec
xor
push
jle
fdivrl
and
inc
outsb
sub
sub
xchg
xor
cmp
sbb
xchg
sbb
in
cmp
insl
jae
das
mov
bound
lcall
adc
jne
movsl
jbe
mov
data16
push
icebp
mov
rolb
mov
shll
cwtl
rol
cwtl
mov
xor
lahf
push
ljmp
jno
and
adc
es
xchg
mov
ret
hlt
ljmp
dec
cmp
repnz
mov
and
movb
fisubl
dec
in
xchg
mov
imul
fdivrs
or
mov
cmp
popf
xor
pop
test
mov
push
mov
pop
fnstenv
add
jl
and
mov
add
test
and
cli
clc
aas
xlat
cmp
ret
rorl
jmp
mov
dec
imul
imul
push
cmpsl
ds
or
mov
mov
out
mov
mov
inc
or
aam
xchg
pusha
dec
in
mov
or
mov
or
cmp
out
xor
push
jmp
push
inc
fldl
cmpsl
jg
flds
shrl
idivl
sub
insb
mov
aaa
adc
loopne
push
mov
clc
cltd
cmp
xchg
inc
mov
pop
mov
adc
add
test
pop
xor
hlt
mov
or
aaa
popf
cld
js
add
xchg
pop
stos
imull
and
cmp
dec
pop
sti
int
paddb
dec
cmpsl
pop
hlt
call
fidivrl
cmp
xchg
jbe
jge
into
and
out
or
leave
subl
ror
and
mov
cmp
pop
pop
fwait
pushf
lret
mov
mov
xlat
push
fnstcw
xchg
cmpsl
xor
pusha
loopne
cmp
cmp
add
xchg
das
cmpsb
adc
ljmp
jne
push
andl
pop
sub
xchg
fmul
aad
lret
inc
jae
add
dec
lcall
into
pop
les
popf
bound
jo
mov
aas
mov
lret
dec
sbb
cmp
mov
mov
int3
jle
bound
shr
addb
divb
or
lds
ret
sahf
ss
rorb
add
mov
notl
fnstenv
jl
cmpsb
sar
nop
or
sahf
xor
sub
mov
adc
cmp
lods
outsb
fnsave
leave
push
in
stc
sar
adc
jo
dec
xor
mov
xchg
sub
mov
mov
repz
lret
insb
inc
and
push
addr16
mov
mov
pushf
xor
push
inc
xlat
aas
push
scas
inc
dec
pusha
dec
loopne
imul
adc
out
add
push
lods
subb
push
inc
leave
testl
pop
test
cltd
xor
seta
inc
jne
mov
aam
cmp
pop
mov
mov
ret
into
gs
mov
repz
stos
jne
mov
cld
call
int3
inc
mov
imul
sti
sub
data16
add
dec
mov
into
mov
inc
fmul
subb
pushf
jo
push
arpl
push
ffree
pop
iret
or
jae
sahf
cmc
mov
jecxz
data16
xchg
sub
and
xchg
jmp
mov
cltd
repz
pop
in
lds
xchg
or
mov
push
push
popf
inc
fwait
and
or
push
add
xor
push
loope
jo
icebp
mov
sub
and
dec
mov
push
imul
shrl
imul
mov
push
shl
out
xchg
bnd
add
scas
inc
push
sub
sbb
sub
fnsave
dec
lea
ret
mov
mov
shrb
mov
in
ss
mov
fists
mov
mov
daa
mov
ja
stc
inc
cwtl
cmpsl
ds
or
jns
pop
or
addl
sub
data16
mov
pushl
addr16
movsl
inc
filds
lcall
jg
arpl
int
daa
fstl
mov
mov
fists
xor
lcall
pop
lods
inc
mov
repz
inc
ss
loop
int
mov
sbb
out
mov
movsb
cmp
jge
fsubrs
lock
cwtl
das
hlt
sbb
out
mov
call
mov
cld
add
leave
gs
sub
insb
jne
fisubs
mov
lock
aad
jmp
jecxz
leave
iret
jge
shrb
jno
dec
mov
push
mov
aas
jmp
or
jg
pusha
imull
push
mov
lcall
fsubrs
repnz
in
xchg
sub
push
pushf
xor
je
xchg
loopw
popf
adc
dec
fistpll
adc
sub
dec
test
pop
pop
scas
je
pop
inc
xchg
arpl
pop
imul
pop
addr16
aam
fbstp
imulb
mov
mov
jb
xor
rcll
mov
data16
pop
out
roll
push
call
imul
jmp
mov
fcomi
ds
std
push
popf
iret
push
shll
lds
mov
adc
mov
test
cmp
stc
sbb
cmp
fldcw
cmp
cli
out
in
cmc
aas
in
add
out
pop
mov
pop
icebp
mov
clc
popl
jae
js
mov
in
ljmp
add
aad
push
mov
xor
jp
cmp
mov
pop
out
lea
sbb
xor
cmc
mov
xchg
jb
jmp
call
xchg
rorl
sbb
lret
dec
loop
imul
mov
lock
push
shll
cmp
push
lds
push
pop
lds
cmp
leave
cmp
cmp
or
js
add
jae
push
lea
mov
jns
jno
xchg
leave
pusha
ret
xchg
pop
repnz
das
xor
inc
xor
mov
mov
lods
inc
cmp
adc
jl
or
es
jmp
mov
or
mov
xchg
push
xor
xorl
or
fcom
int3
arpl
sub
cmpsb
mov
xor
jg
add
ret
add
lahf
movsb
xchg
inc
fsubr
repnz
dec
inc
sbb
jg
cmp
jo
fldl
sahf
push
aas
negl
std
push
repnz
sahf
mov
insl
mov
cmp
dec
loopne
mov
dec
push
mov
jnp
push
adcl
jg
inc
cmp
mov
popa
and
shll
xor
aam
push
xor
scas
push
lds
imulb
xchg
addb
or
icebp
push
pop
mov
cmc
jne
cld
cmpsb
call
pop
mov
mov
jecxz
jno
hlt
ret
mov
cmc
fstpl
jb
dec
inc
jne
or
mov
mov
adc
mov
nop
loope
dec
inc
insl
or
jecxz
js
jl
lock
cltd
xchg
sub
subb
fdivl
cwtl
jg
lret
lock
jb
in
cltd
sub
mov
dec
push
lret
inc
mov
arpl
aam
sub
pop
insl
rcrl
inc
jno
arpl
pop
mulb
push
xlat
jg
xor
in
pop
pop
cld
xor
dec
pcmpeqb
imul
xchg
mov
inc
pop
cld
rcl
cmp
cli
ret
cld
dec
cmpsb
adc
sbb
mov
sub
rol
daa
std
pop
lock
mov
adc
add
add
xor
scas
outsb
lods
mov
les
mov
and
xor
and
shr
or
xlat
movsb
dec
call
sub
pop
add
in
adc
into
stc
xchg
cli
in
pop
outsb
repz
adc
js
adc
fisubrl
sub
es
push
scas
xor
fbstp
pusha
js
insl
test
adc
insb
mov
fidivs
lock
jl
mov
rorl
push
jno
lahf
jp
mov
push
lret
mov
jbe
aad
out
mov
lods
push
add
jmp
lret
sub
pop
xor
add
paddusb
or
dec
mov
add
je
fs
or
fs
jl
fs
cmc
popf
mov
fscale
mov
sbb
lret
mov
cs
pop
test
inc
lea
hlt
and
push
dec
and
mov
stos
push
jo
imul
add
fnstsw
clc
stc
lods
inc
sub
xchg
dec
mov
scas
inc
inc
cmp
hlt
into
adc
ds
cmp
fdivl
hlt
imul
mov
fisubs
sub
stos
mov
sbb
stc
insl
sub
adcb
jle
adc
lret
add
stos
push
push
addl
sbb
sub
and
notl
xchg
inc
or
pop
outsb
cli
jle
push
push
add
pop
divb
ljmp
xchg
cmpsl
ds
mov
add
cmp
sub
adc
fildll
adc
aaa
shll
aas
xchg
jo
push
arpl
test
arpl
imul
adc
push
or
data16
sarl
mov
shlb
cmp
popf
xor
pop
jae
imul
xlat
das
cmc
push
push
in
aas
push
mov
inc
pop
pop
jecxz
ja
jp
mov
mov
call
lods
cmp
ja
mov
sub
lods
inc
fcomp
push
aaa
cld
and
pop
cltd
push
lahf
or
or
lea
cmp
jecxz
add
sbb
mov
sarb
out
mov
xchg
mov
mov
xchg
scas
pop
scas
sbb
mov
mov
ds
jb
push
adc
xor
arpl
mov
push
in
sbbl
inc
movsl
in
out
pop
inc
sbb
mov
aad
jecxz
dec
repnz
push
dec
clc
aad
sti
subb
test
cli
cmp
mov
pop
or
xchg
cmpsl
xor
fdivs
insb
adc
pop
mov
jbe
mov
jnp
ja
xchg
xor
jge
ret
mov
fwait
roll
push
fistps
mov
jbe
dec
stos
mov
mov
mov
and
fsubl
inc
fmulp
mov
fs
inc
fdivl
movsb
rcrl
div
cs
sub
mov
pop
dec
mov
mov
xchg
in
jge
mov
cld
jge
daa
test
cmpsb
loope
xchg
sahf
in
jle
div
out
pop
pop
pop
sub
rol
sbb
dec
inc
mov
lock
xor
std
icebp
mov
mov
stc
call
or
push
stos
xor
rcll
pop
push
call
fwait
or
cmp
dec
pop
pushf
les
data16
inc
in
jp
cmp
pop
push
cmp
cmp
sbb
mov
das
pop
sahf
cmp
xchg
ret
repz
mov
divb
fisttpll
mov
das
incl
popf
xor
jae
pop
sub
mov
mov
cmp
sbb
stos
repnz
out
pop
sbb
mov
push
xorl
mov
add
xlat
subl
inc
inc
fidivrs
sbb
mov
xchg
jecxz
or
xchg
ss
jecxz,pt
sub
dec
pop
insb
sarb
jb
sbb
cmpsl
push
fistpll
push
push
lcall
les
add
mov
xor
inc
fstpt
push
pop
xlat
mov
or
and
mov
fdivp
arpl
fisubs
sub
jp
jmp
cmp
inc
testb
xor
push
lods
loopne
shrb
dec
loop
repz
sub
loopne
inc
clc
dec
inc
stos
xchg
and
sbb
nop
mov
add
mov
push
xchg
sub
and
insl
or
cmp
xchg
enter
push
mov
pop
dec
fisttps
xchg
cmc
clc
mov
jge
sub
inc
inc
xor
stc
mov
ja
adc
push
pop
dec
loop
push
push
aam
jbe
sub
cmp
loopne
in
dec
add
adc
scas
add
xor
or
pop
in
out
sub
and
outsb
lret
insb
aaa
dec
popa
pop
xor
adc
imul
nop
jb
lea
adc
stos
xchg
sbb
aaa
enter
xchg
repz
sbb
aam
ret
and
cmpsb
add
mov
or
push
jbe
or
push
xchg
js
cmp
push
lcall
nop
mov
lods
pop
xchg
xchg
testb
jno
jns
dec
in
loop
ljmp
jp
adc
out
std
decl
popa
mov
sub
sbb
xlat
xlat
out
shl
mov
lret
push
add
out
clc
push
or
mov
push
jb
pop
repz
ss
sub
jle
xor
negl
add
sbb
cmp
imul
inc
jl
mov
cs
or
cltd
pop
jle
aam
pop
sub
pop
insb
das
stos
xor
push
pop
inc
jns
cli
pop
add
cmp
inc
adc
subl
jns
jae
imul
cmc
outsb
lcall
push
decb
out
out
cmc
gs
jbe
out
nop
out
or
cs
adc
bound
imul
jnp
lcall
or
jmp
outsl
lods
xchg
xchg
shll
scas
push
and
pop
cmc
daa
addl
stc
mov
imul
cmpsl
sbb
mov
push
pop
sbb
mov
lds
out
movsb
pop
sub
xchg
mov
stc
fcmovu
push
pop
cmp
cwtl
repz
inc
add
ja
fs
jmp
mov
in
sti
push
ror
test
cmp
mov
js
mov
cmc
sbb
unpckhps
ret
mov
icebp
jle
inc
pop
mov
sub
loope
out
sahf
push
inc
bound
stc
sub
pushw
xchg
iret
sahf
lock
call
push
cmp
jbe
in
sbb
mov
sbb
push
mov
and
lea
dec
rcr
add
ja
jo
gs
jg
push
sub
inc
movsl
jp
pusha
mov
adc
aad
push
dec
addr16
lea
jns
shlb
mov
sub
mov
enter
or
test
das
call
inc
addl
in
inc
sbb
loopne
push
jg
lods
xchg
add
call
inc
mov
mov
ficoms
rolb
pop
or
jo
mov
les
shrb
fistpl
fwait
push
out
int3
sbb
stc
push
pushl
aas
sbb
pop
cmp
subl
daa
pop
sub
mov
pop
aam
movsl
aaa
int3
loop
pop
repnz
or
jl
pop
int
cmp
fmuls
or
inc
int
or
pop
sbb
pushf
and
das
loop
scas
dec
clc
pusha
adc
cmp
imul
lods
aaa
popa
out
in
icebp
or
jp
fsubl
add
mov
sbb
mov
stos
ljmp
add
push
clc
test
sub
test
pop
imul
fcomp
ds
xchg
div
arpl
scas
cmpsb
lahf
out
loope
dec
xchg
sub
inc
out
cmpsl
sbb
aam
aam
xor
es
xchg
or
int3
cmp
add
clc
add
jp
lcall
fidivl
cmpsb
jp
aas
hlt
ds
movsl
outsl
adc
imul
test
dec
in
cmpsl
xchg
xchg
mov
jo
aam
adc
std
mov
xchg
dec
mov
add
sub
cmpsb
lods
rcll
push
ss
mov
push
ja
in
add
pop
mov
outsl
std
jg
andb
mov
popa
or
and
ret
test
jmp
js
movsb
cltd
and
jp
in
insl
movswl
mov
cmpsb
mov
adc
loope
cmp
stos
insb
dec
mov
pop
pop
push
mov
mov
adc
insl
mov
mov
ret
push
fwait
or
cmpsl
inc
sub
pusha
loop
push
arpl
adcb
divb
pusha
loope
mov
cmp
dec
add
adc
nop
and
xorl
xor
xchg
cwtl
cli
cmp
or
stc
insb
add
fidivrl
mov
xchg
test
icebp
xor
push
imul
mov
push
mov
mov
insb
lret
iret
xor
sti
pop
inc
ja
lods
push
jmp
pop
imul
loop
jbe
test
cmp
mov
out
repnz
sbb
rcrl
or
xor
dec
jge
adc
out
adc
insb
js
pop
out
xchg
lcall
outsl
mov
sti
stos
lea
pop
mov
mov
addr16
imul
pop
arpl
add
push
xorb
add
dec
sub
sbb
jmp
push
test
inc
xor
cmpsl
popf
xor
mov
pop
xchg
adc
add
push
sbb
movsl
roll
cmpsl
pusha
jg
mov
cmc
push
mov
adc
xchg
jge
cld
es
das
popf
xchg
inc
mov
mov
push
adc
clc
jns
adc
dec
push
xor
bound
lcall
movb
mov
mov
xchg
dec
test
xchg
add
out
mov
in
and
mov
ja
xchg
arpl
out
imul
dec
cmp
into
pushf
nop
out
cmp
jg
aam
out
push
ret
scas
out
imul
int3
add
jl
pop
fbld
jp
insb
das
push
sub
inc
ficoml
out
push
in
jo
cmpsl
mov
sbb
jge
mov
and
aas
sbb
dec
aas
pop
lret
sbb
inc
sbb
jno
xlat
jo
push
adc
arpl
or
out
es
ljmp
jne
outsb
lret
push
pop
pop
sbb
std
stc
sub
xchg
cmp
add
mov
sarb
loope
add
repz
and
sub
cmpsb
mov
fsubrs
xchg
adc
push
or
cmp
lcall
mov
add
pop
imul
xor
and
pop
in
sbb
popa
dec
mov
lret
add
xor
xchg
lret
clc
jb
pop
hlt
jp
addl
jns
fs
jmp
add
fucomip
push
jo
and
scas
mov
jbe
pop
xchg
add
sahf
xor
push
fmuls
xchg
add
test
cmp
testb
vpaddusb
stc
loop
inc
ret
jmp
mov
test
ss
mov
pop
ret
mov
out
add
mov
in
ljmp
das
mov
std
xlat
mov
mov
or
xor
fldcw
push
jl
cmp
mov
push
call
inc
push
rol
ret
pop
dec
mov
jnp
into
mov
jge
dec
sbbb
repz
test
out
es
es
fadd
das
pop
inc
add
mov
xlat
inc
jecxz
js
jae
fistpl
mov
adc
pshufw
pop
cmpsb
xlat
in
bound
mul
mov
sub
sbb
and
mov
inc
shlb
inc
sub
es
dec
cld
pop
lock
cld
mov
push
mov
and
push
sbb
inc
adc
lret
xchg
xor
add
pop
mov
add
or
in
aaa
imul
test
hlt
sub
pop
cwtl
ds
pop
xchg
pop
stos
sbb
lods
sbb
sbb
pop
icebp
iret
andl
sub
test
add
bound
inc
lcall
dec
lahf
xchg
mov
je
mov
or
cmp
pop
inc
popa
test
ljmp
xchg
cmpsb
enter
xchg
xchg
lcall
test
cmpsl
or
fcom
xor
mov
jnp
sub
push
movsl
leave
push
xchg
dec
jl
jge
addr16
int3
xchg
sbb
lods
add
cltd
pop
xchg
sub
cwtl
das
imul
aas
jle
pusha
jo
sbb
sub
aad
fucom
mov
test
add
xchg
mov
mov
mov
xor
jno
je
jo
dec
popf
test
mov
popf
push
lahf
ss
fsubrs
lods
les
cmp
push
jle
mov
cmp
add
dec
xchg
sbb
dec
sbb
add
jo
and
sbb
fwait
xor
mov
cmp
jb
pop
xchg
sub
jecxz
and
add
retw
leave
sub
sub
sbb
leave
jecxz
sti
ret
sub
sbb
jecxz
push
data16
lds
pushf
gs
test
cmp
adc
pop
andb
cltd
push
mov
cmpsl
arpl
dec
loop
nop
lods
inc
add
out
test
xchg
mov
xor
enter
sbb
lcall
sub
xchg
insl
pop
lock
inc
push
out
popf
out
sub
shlb
mov
dec
xchg
into
and
pop
cmp
push
pop
mov
iret
cmpsl
fnstenv
leave
push
outsl
incb
outsb
jecxz
push
popf
das
add
push
out
push
mov
or
jno
jb
cmp
dec
in
pop
call
test
add
shrl
pop
pop
cmc
imul
fnsave
push
ljmp
pop
mov
cmc
mov
ret
lock
jecxz
outsb
add
or
pop
push
cmpsb
sub
adc
mov
mov
sub
push
stos
inc
js
adc
fldt
aas
adc
fwait
push
mov
and
loop
dec
and
mov
insb
xchg
sub
xlat
pop
movsl
cmp
clc
push
jmp
xlat
outsb
shl
or
jecxz
jl
xor
push
xor
push
push
fidivs
mov
cld
xchg
fdecstp
in
mov
dec
iret
fwait
mov
jb
jns
cmp
and
jno
push
ljmp
push
in
jp
movsb
cmp
pop
repz
lahf
pushf
xor
adc
lahf
xchg
repnz
xor
mov
fdivr
adc
pusha
notl
inc
and
xor
xchg
dec
mov
sub
xchg
sub
add
in
test
fnstenv
into
in
cmpl
out
inc
fidivrl
lret
sbb
mov
xchg
push
and
pop
cmp
xchg
nop
daa
lds
xor
jg
out
daa
dec
pop
int
aaa
call
rorl
ret
inc
mov
mov
mov
iret
rclb
stc
fidivs
bnd
and
insl
mov
cmp
scas
rclb
daa
and
test
or
nop
jne
stos
push
sbb
inc
fistl
and
push
cwtl
sub
test
pop
pop
out
push
dec
imul
and
xchg
sbbl
pop
in
push
jle
jge
add
bound
push
lods
out
push
popf
outsl
dec
int3
jo
sub
sbb
push
shll
test
jmp
dec
mov
std
push
xchg
xchg
sub
enter
pop
test
in
lods
mov
or
into
lds
mov
loopne
dec
call
or
pop
ja
popf
jo
pop
fsubrs
test
ds
in
sbb
mov
add
and
pushf
pusha
in
cmp
das
and
add
cwtl
sbbb
mov
ds
sbb
pop
ljmp
xchg
ret
repz
inc
fmuls
push
sub
jmp
std
inc
fsubrl
pop
jb
cmp
test
pop
imul
lret
and
and
jbe
enter
push
lods
jns
sub
sahf
mov
sbb
dec
push
ret
xor
ja
les
sti
cmp
leave
jns
sub
or
fmuls
jp
stc
orb
enter
xor
data16
mov
test
pop
ror
add
lock
leave
inc
fdivr
mov
xor
cli
mov
push
cs
ret
cld
and
test
lock
sub
mov
insl
pop
and
mov
jge
jnp
out
in
xchg
jo
test
cmpsl
inc
cwtl
ret
dec
mov
lock
mov
int3
out
jns
sarl
mov
jl
repz
out
ret
lret
setp
adc
repnz
add
aaa
jp
push
fsub
inc
les
sub
and
xor
push
pop
and
mov
dec
lret
cmc
jp
fucomip
or
repz
mov
jg
push
xor
dec
sub
rorl
inc
jo
das
outsl
xchg
lea
nop
or
je
adc
and
jmp
fstp
movsb
ret
push
enter
add
cmc
lods
jae
and
cmpsb
cmp
mov
add
lahf
out
adc
or
xchg
loop,pt
add
sbbb
add
jg
shlb
add
add
ds
xchg
mov
cmp
mov
push
push
andl
pop
test
and
jns
or
mov
scas
mov
add
iret
repnz
push
mov
icebp
cld
and
push
call
das
mov
adc
mov
ret
addr16
inc
lods
in
sub
cwtl
fsts
jmp
or
mov
xlat
es
mov
adc
ljmp
inc
clc
popf
arpl
aad
push
cmpsl
pop
imul
movb
repz
sub
loopne
adc
cs
movsl
sahf
cli
jne
in
push
jmp
sbb
mov
fildl
xchg
test
sub
pop
cmp
fdivrs
fnstenv
xor
lret
mov
js
xor
push
mov
mov
enter
xchg
mov
daa
mov
test
ja
mov
fildll
push
jl
cmpsl
sub
arpl
std
jnp
out
stos
and
or
jne
das
cmpsl
sbb
and
stos
inc
cli
outsl
mov
mov
out
xor
repnz
ror
faddl
aad
pop
fadd
mov
jecxz
mov
or
mov
push
mov
sbb
cmpsb
insl
sbb
xchg
xor
jb
mov
mov
les
mov
idivl
sahf
test
or
pxor
sbb
cwtl
fs
and
stos
jne
sbb
inc
xor
jl
fnstenv
popf
dec
aad
or
adc
lock
les
inc
aaa
ret
hlt
pop
int3
push
arpl
xchg
mov
dec
or
cltd
pop
lahf
rclb
imul
lods
lret
leave
xchg
out
cmpsb
in
lret
jle
loope
mov
jg
add
in
mov
sti
add
shlb
mov
mov
mov
loopne
pusha
adc
push
lcall
outsl
mov
pushf
mov
aam
adc
pop
cmc
daa
std
jecxz
das
dec
jl
jnp
add
cli
jno
cld
popa
sbb
int3
add
sub
jle
addr16
jl
aaa
into
sbb
pop
mov
cmp
addr16
movsl
movsl
pop
repnz
adc
movsl
fstpt
loopne
cmp
in
jmp
mov
ret
loop
cmp
xchg
shlb
lahf
das
daa
add
mov
push
mov
inc
flds
test
enter
inc
inc
sub
lds
mov
pop
xchg
daa
mov
pop
inc
pusha
negl
lahf
cmpb
stos
mov
sub
cli
aam
push
ss
bound
popa
mov
clc
and
xor
jno
jno
pusha
xchg
inc
fsts
addb
xor
adc
pop
jmp
or
lcall
and
inc
cli
arpl
les
out
push
in
lods
push
jb
or
aaa
dec
fbstp
testb
push
push
call
std
movsb
or
cmc
dec
pop
push
jmp
xor
push
dec
out
adc
mov
icebp
sub
push
ljmp
adc
cmp
dec
loopne
pop
push
call
fldt
test
mov
lds
out
or
fwait
lcall
out
inc
es
xchg
jbe
out
mov
test
xor
jmp
push
arpl
imul
fs
jp
jns
pop
fwait
es
cmp
out
test
lret
loopne
xor
mov
fnsave
into
jmp
pop
scas
rorl
lcall
mov
or
js
push
jmp
cltd
insb
add
imul
add
cmp
hlt
mov
hlt
mov
outsb
add
sarb
mov
mov
adc
outsb
mov
data16
rcl
xchg
sub
repz
mov
sub
jge
sbb
lods
pop
lahf
aam
loope
pop
mov
add
aam
push
fsubrs
dec
inc
xlat
imul
fwait
xor
das
jno
mov
mov
push
cmp
imul
xchg
mov
in
orl
fnstcw
push
mov
repz
fstl
lcall
addr16
sbb
mov
mov
mov
jo
push
mov
ret
fnsave
xor
jecxz
cld
xchg
dec
add
out
imul
add
frstor
and
mov
mov
mov
fadd
mov
pop
stos
sub
ja
mov
push
add
mov
or
out
mov
sub
push
or
mov
xchg
sbb
subb
movsb
cmp
dec
fmul
add
arpl
into
imul
stos
mov
aad
mov
ss
fiadds
pop
sahf
cld
cmp
jbe
fisttpl
test
pop
leave
sbb
xchg
mov
lcall
filds
mov
adcl
push
scas
clc
adc
push
xor
dec
mov
inc
out
mov
mov
xchg
aam
xor
leave
push
shlb
test
jns
cs
cmc
mov
imul
inc
and
aaa
leave
mov
das
mov
loope
pop
jne
adcb
inc
mov
add
pop
movsl
cmp
xchg
mov
add
mov
jbe
outsb
call
dec
leave
push
movsl
cmp
jge
outsl
ds
inc
mov
insl
lea
push
cmp
je
stos
into
gs
mov
push
xor
aad
pop
push
in
repnz
lea
jo
aas
dec
pushf
in
divl
mull
mov
sub
ds
and
iret
gs
xchg
jp
int3
lret
sub
addr16
lret
insl
and
push
cld
xchg
cmpsb
mov
mov
ss
out
aaa
into
xchg
popa
xchg
jns
mov
call
es
sub
mov
push
mov
push
jne
enter
js
mov
movsl
lret
js
jmp
rclb
inc
lods
loopne
sbb
adc
dec
cmp
sub
mov
leave
enter
call
outsl
cmpsb
push
sbb
pop
xor
jno
pop
jecxz,pn
xchg
push
negl
add
lods
xchg
rorl
inc
jle
sub
xchg
insl
sbb
gs
cmp
repnz
stc
dec
mov
sub
add
mov
xchg
add
iret
jno
pop
std
xchg
dec
xchg
fsubr
lret
lods
sahf
pop
jbe
test
out
xchg
lds
les
mov
ja
xor
aas
sbb
jp
jno
mov
cmp
sbb
inc
lds
pop
jge
fistps
cwtl
pop
and
idivl
jb
cmp
out
xchg
mov
pop
mov
add
cltd
lods
mov
xor
iret
mov
xor
rcl
insb
add
in
in
push
repz
or
stos
ljmp
jo
into
test
pop
mov
pusha
and
xchg
scas
popa
stc
jbe
inc
test
mov
fstl
add
out
xchg
lods
or
add
inc
jecxz
imul
mov
hlt
ja
inc
xor
out
dec
pop
lcall
cli
call
or
jb
enter
add
daa
jge
sarl
xor
inc
inc
lcall
dec
out
pop
jb
test
cmp
push
pop
mov
cmpsl
mov
shl
pop
add
ljmp
js
pop
dec
adc
mov
add
and
add
adc
pop
sbb
pop
imul
jnp
hlt
push
das
mov
out
in
fdivrl
jge
inc
fistl
leave
imul
push
dec
mov
adc
leave
mov
xor
lcall
rcll
mov
mov
dec
mov
mov
mov
fcom
mov
push
stos
insb
push
dec
lret
lock
cld
lcall
rclb
mov
fwait
dec
aas
mov
mov
out
sub
fildll
inc
dec
mov
push
in
std
push
jo
push
and
jb
test
pop
inc
or
jnp
and
lret
inc
cwtl
das
ja
or
mov
jnp
pop
test
dec
fstl
nop
popa
data16
xchg
mov
cli
in
xchg
jg
test
lods
mov
std
cmpsb
stos
mov
mov
lock
adc
jp
cmpsb
mov
dec
and
imul
rorl
inc
mov
xchg
mov
adc
imul
lods
sbb
les
scas
jge
jo
pusha
cmp
out
das
cmp
or
xchg
jg
add
mov
xchg
jns
jns
fidivl
in
jae
pusha
rcl
mov
xor
fs
arpl
cwtl
loope
push
add
inc
xor
clc
pop
adc
test
xchg
mov
adc
scas
sahf
xor
iret
inc
cmp
pop
in
xchg
cli
mov
sbbl
cmp
pop
and
mov
loope
inc
lcall
ret
push
shl
in
jno
lcall
push
push
das
repnz
mov
mov
sbb
icebp
sbb
dec
loop
cmp
lret
lcall
wbinvd
add
push
jns
fadd
test
orb
nop
fnstenv
xchg
sub
in
cmp
aas
inc
adc
pop
adc
mov
jge
pop
xor
cltd
mov
lcall
cmpsl
mov
sbb
and
jno
push
pop
movsl
les
scas
and
movsb
push
cmp
xchg
jo
lret
xchg
aad
pop
cmpsb
sbb
or
push
loopne,pt
dec
aas
jge
xchg
lea
xchg
jne
popf
xor
xchg
adc
mov
divb
lea
sbb
fimuls
sub
pop
test
jg
jmp
arpl
pop
cmpsb
mov
or
xchg
ret
pushf
ffreep
sub
cmp
bound
jbe
cmc
out
notb
or
js
lret
mov
push
call
out
mov
loopne
xor
xchg
out
dec
adc
mov
mov
fsts
adc
and
adc
movsl
xor
iret
cwtl
pop
push
push
loopne
cmpb
gs
popf
popa
rorb
test
mov
mov
jmp
out
mov
mov
pop
jno
lock
iret
add
xorl
sahf
cmpsl
inc
push
push
jae
mov
movsb
stos
xchg
loop
ret
insb
scas
inc
sahf
insb
or
arpl
int3
mov
push
mov
cmp
jl
sbb
cmp
lcall
lock
jae
xor
cmc
mov
fistpll
loope
or
dec
aad
aad
or
jae
xchg
inc
inc
movsb
cmp
and
dec
mov
jo
xchg
push
mov
pop
jno
sub
aam
jbe
in
xchg
pop
push
addb
inc
pop
icebp
jae
stos
fsubrl
ret
cmp
aas
sbb
jo
repz
loope
adc
cmp
jbe
fidivs
push
sub
xorl
jo
enter
into
adc
shl
imull
cmp
mov
or
push
cltd
fmulp
push
inc
imul
pop
xor
je
mov
sbbb
int3
or
push
mov
sub
mov
dec
dec
xor
push
add
pop
loopne
loopne
int3
in
cmc
repnz
push
lret
and
or
jae
sbb
cmpsb
mov
fidivrl
push
jne
mov
jnp
xor
arpl
push
outsl
pushf
mov
sub
sub
jb
test
dec
mov
js
pushf
sbb
sbb
sbb
mov
icebp
shrl
or
addb
sub
int3
pop
int3
stc
imul
fs
adc
pop
adc
sti
pop
adc
cltd
imul
fwait
add
aam
mov
ficompl
mov
or
hlt
and
jl
adc
add
inc
dec
lcall
push
sub
ja
jno
jbe
or
inc
sbb
std
sbb
sbb
je
hlt
shlb
inc
xchg
mov
shl
fwait
or
mov
pop
fsubrl
inc
adc
mov
jno
xchg
sbb
lret
fdivrs
dec
mov
or
mov
xchg
mov
jae
sahf
push
xchg
add
sbb
sub
inc
mov
je
xlat
cmp
xor
out
ljmp
jno
sub
in
sub
add
lcall
pop
xchg
mov
push
cmp
mov
and
push
ficomps
lds
int
ljmp
icebp
and
add
sub
mov
mov
push
push
iret
bound
sub
outsb
sub
ret
ret
xchg
add
push
das
mov
and
icebp
mov
sti
mov
popf
add
jmp
cmc
push
fstl
inc
fxch
sbb
movsl
and
jno
pop
inc
sub
jbe
lods
push
adc
imul
out
lcall
and
pop
clc
insb
fisttps
cmp
mov
negl
aaa
into
dec
test
adc
mov
sub
add
repnz
and
push
in
bound
jp
imul
mov
mov
inc
push
push
adc
mov
roll
and
xorl
cmp
fdivrl
lea
xchg
pop
ret
test
stos
flds
adc
and
lock
aam
adc
inc
int3
xlat
xor
or
push
test
lret
leave
mov
dec
sbb
lcall
outsl
in
loop
add
pop
repnz
cwtl
cltd
push
addr16
or
dec
xor
inc
or
mov
cmp
sub
xchg
add
adc
out
sbb
adc
lods
sbb
aas
ret
mov
movsl
iret
dec
repz
rolb
call
loopne
outsl
jmp
add
mov
shrb
dec
in
in
dec
lock
jle
imul
pop
adc
jmp
pusha
inc
lret
jae
es
push
lods
orb
cs
cmp
mov
leave
outsb
add
aaa
xor
cli
mov
loope
xchg
inc
cli
adc
shlb
mov
mov
test
mov
rcll
xor
push
mov
jo
adc
push
push
outsl
jl
mov
xor
or
mov
in
mov
testl
mov
fcmovnbe
test
mov
mov
pop
aad
and
cs
jbe
adc
cmp
mov
test
popa
sub
cmpsb
cmp
xchg
imul
jg
imul
mov
mov
rcrl
les
mov
sti
mov
mov
jne
pop
mov
xchg
xchg
into
inc
jns
scas
stos
push
xlat
sub
xor
push
or
mov
sub
jge
sub
les
xor
push
cmp
xchg
call
aam
outsl
push
jl
sbb
std
call
loope
ds
lcall
fwait
inc
cmp
insb
bound
rcll
mov
fstpt
fsts
into
and
pop
ret
sub
add
int3
orb
fisttpll
filds
addr16
dec
iret
scas
jge
lods
cmp
ss
cmpsb
cmp
dec
pop
mov
mov
sbb
mov
jg
shrl
ljmp
ficoms
out
test
fbstp
imul
adc
add
jle
popa
cmp
cmp
xor
sahf
out
call
sahf
adc
ss
xchg
or
sub
push
rorl
cmc
pop
daa
xor
jecxz
mov
push
add
das
xchg
inc
dec
inc
dec
adc
cmp
fldcw
mov
lcall
or
inc
int3
jg
jmp
add
mov
mov
rcrb
push
in
dec
loope
jne
jmp
cld
xchg
es
cmp
lods
ljmp
adc
dec
shrl
cmc
sbb
cmc
dec
movsb
cmp
stos
mov
movsl
xchg
dec
pop
lds
hlt
aad
mov
jb
xchg
loop
adc
jbe
mov
add
sbb
loopne
xchg
push
jle
mov
cmpsl
lods
sbbb
mov
and
test
cmpsl
jno
aad
hlt
scas
fucomip
sub
xor
fwait
mov
aam
or
imul
lds
xchg
push
dec
outsl
daa
loop
mov
cmp
mov
jno
sbb
sbbl
pusha
call
ljmp
push
in
cld
pop
aas
xor
aam
aam
xchg
mov
mov
cmp
test
jbe
enter
jae
sbb
sbb
popa
mov
js
ljmp
lock
shrb
xlat
mov
fcmovnbe
pop
aas
xor
cld
mov
sub
inc
mov
std
and
or
in
xor
lods
scas
xchg
js
negl
sbbb
xchg
ss
loopne
sbb
cmp
mov
or
mov
mov
adc
lock
mov
jns
xor
xor
jnp
lret
out
inc
js
gs
loop
in
pop
lret
xor
stos
shlb
fdivr
das
andl
lock
loopne
push
mov
push
into
imul
cmp
xchg
or
cmp
js
outsb
xchg
loope
fiaddl
pop
or
enter
in
pop
mov
mov
ficomps
xor
lret
daa
in
pop
lods
adc
es
cli
div
test
scas
inc
push
leave
jle
xchg
fidivl
aad
aaa
popf
xor
movsb
fsubr
aam
mov
inc
and
sti
stos
outsl
sub
or
sbb
mov
cmp
int3
xor
sbb
mov
push
popf
xor
sub
cmp
fwait
mov
dec
lds
sar
out
sub
insb
inc
cltd
mov
int
jmp
jns
dec
mov
adc
pusha
and
or
gs
sahf
mov
jmp
push
jmp
xchg
dec
jmp
fwait
or
dec
divb
sbb
movsb
mov
mov
inc
clc
pop
or
std
mov
jle
mov
sbb
mov
fcoml
call
cmp
jno
push
imul
cmc
pop
sbb
sarb
pusha
pop
lock
out
les
adc
sub
cmp
repnz
cwtl
das
lods
dec
add
xchg
xor
decl
pushf
add
sub
dec
out
fcomp
jo
mov
cmp
pushf
daa
leave
stos
loop
and
mov
and
nop
sbb
outsl
add
sub
and
lcall
pushf
aad
arpl
dec
ljmp
xchg
mov
and
icebp
mov
sbb
mov
ret
sti
mov
repz
mov
inc
aam
pop
addr16
cld
adc
mov
sbbw
push
pop
je
jp
mov
and
lock
jle
pop
mov
mov
fnstenv
inc
pop
pop
sahf
lods
push
into
roll
lahf
inc
shrb
icebp
pop
cld
stos
movsl
dec
push
cs
scas
inc
jno
sti
rcr
insb
xlat
and
outsb
adc
pop
bound
arpl
xor
in
rcl
shl
mov
cmp
mov
sbb
mov
mov
xchg
cmp
fistpll
je
ljmp
push
aas
inc
pop
mov
xchg
nop
xor
mov
xlat
test
test
or
orl
negl
push
pop
xlat
xor
jnp
les
movsb
loope
add
stos
test
popa
bound
or
les
pop
dec
ljmp
sti
shrl
test
stos
and
inc
gs
mov
test
mov
andl
mov
daa
lret
stc
test
ret
outsl
ret
aas
xchg
imulb
sti
pop
imul
lret
cmp
lahf
cmp
or
and
push
inc
and
xor
leave
mov
ds
pop
mov
mul
jnp
lcall
shrl
dec
jecxz
mov
xchg
ficompl
mov
xchg
xor
mov
cmp
sbb
mov
call
adc
pop
imulb
xchg
mov
adc
cwtl
jns
add
jno
fcoms
dec
cmpsl
int
rcll
dec
push
xchg
lret
lret
fidivl
imul
fsubrp
xchg
aas
fwait
mov
sbb
or
jecxz
mov
dec
mov
mov
stos
cli
inc
inc
mov
add
or
js
adc
stos
or
leave
pop
add
xchg
mov
and
push
pop
ds
outsl
jnp
sub
sub
jbe
ja
mov
mov
ljmp
mov
out
in
cmp
push
jle
movsb
rorl
enter
stc
test
mov
jmp
pop
dec
idiv
or
mov
imul
cld
daa
in
into
fsubs
mov
sub
add
fisttpl
lret
sbb
aas
cmp
and
rcl
push
adcb
cmp
pop
imul
call
push
mov
test
xchg
add
dec
aaa
loopne
xor
mov
ret
pop
insb
addr16
jo
adc
mov
sbb
and
ljmp
cmp
push
shrb
mov
int
in
ljmp
outsb
mov
out
sbb
stos
sti
or
out
loop
push
add
aam
mov
movsl
mov
add
sub
jge
int3
dec
dec
gs
xchg
sub
inc
adc
dec
stos
jl
js
cmp
mov
cli
test
push
lods
lret
pop
xor
aas
adc
push
push
pusha
xlat
cs
xor
outsb
test
mov
sbb
movsb
sub
sub
add
aad
dec
xorb
mov
pushf
mov
aas
shrb
sti
mov
mov
in
push
ret
inc
hlt
test
jae
push
mov
xor
popl
push
or
je
test
test
xlat
clc
lahf
ret
mov
push
sub
fldcw
into
mov
mov
call
push
movsl
push
pushf
lahf
cli
adc
sti
jl
clc
inc
xchg
push
stos
sbb
scas
call
push
sub
fbstp
sbb
xlat
jns
lods
addb
jns
lcall
adc
int3
and
push
lcall
mov
push
dec
icebp
lods
push
inc
xlat
inc
fists
jmp
sti
and
jb
mov
sbb
jb
push
or
scas
stos
cli
lea
aaa
push
ss
inc
inc
insl
sbb
stos
andb
jl
mov
xor
adc
sti
insl
outsl
shl
mov
mov
mulb
lock
adc
inc
bound
dec
adc
jne
jo
insl
mov
mov
inc
push
dec
pop
sbb
cld
push
je
std
repnz
out
and
jecxz
mov
push
popf
and
xchg
push
pop
pop
mov
and
nop
movq
fimuls
loope
out
dec
notl
fldt
int3
fwait
push
jmp
xchg
fisttps
sub
loope
jbe
xor
outsb
or
xor
push
and
push
cmp
jb
std
push
xor
fmul
sub
mov
out
adc
mov
cltd
arpl
stos
jno
jl
lret
jns
adc
loopne
or
aaa
and
mov
mov
aam
and
lds
push
mov
subl
and
repz
push
pop
pushf
jg
das
cmp
fiaddl
outsl
nop
pop
stos
mul
jle
sbb
dec
xor
stos
or
aad
pop
jle
mov
dec
or
out
les
rcrl
daa
pop
cmp
push
das
inc
sti
or
pop
pop
dec
mov
fst
arpl
cmpsb
setle
loopne
out
into
rolb
jns
add
dec
xchg
xchg
fisubrl
arpl
nop
sub
in
sti
xor
sub
test
aad
fldl
mov
pop
scas
test
mov
es
outsl
mov
add
xchg
stos
or
fucom
adc
mov
xchg
daa
jg
test
pop
mov
test
fidivrl
mov
push
pop
xor
addl
jecxz
pop
xor
int3
inc
mov
and
and
adc
push
jl
cld
rcrl
pusha
inc
cld
bound
add
stos
adc
cmc
cmc
push
fisttpll
fisttpl
mov
movsb
mov
test
push
xor
xchg
bound
mov
filds
loop
jb
das
mov
repz
lcall
jmp
aaa
scas
call
and
cmp
idivb
xor
add
aam
sbb
mov
int
mov
lods
ljmp
daa
mov
or
inc
inc
arpl
push
repnz
enter
movsl
cmp
jle
mov
jns
dec
jmp
cmp
imul
sub
inc
adc
xchg
sbb
stos
adc
xor
int3
jno
jns
fwait
push
stos
xor
and
or
and
and
push
push
xchg
mov
rorl
pop
and
xchg
sub
iret
sti
enter
sbb
insl
incw
lods
mov
mov
mov
push
xor
cli
inc
pusha
rorb
popa
clc
ret
dec
in
mulb
add
repz
loop
or
cmp
jp
inc
pop
sbbb
jno
sbb
and
sub
es
sub
cmp
xor
imul
xchg
and
dec
sti
mov
and
subl
shll
or
push
mov
add
xor
sub
rcr
or
mov
mov
mov
stc
add
jae
cmp
dec
test
hlt
in
mov
aad
cmp
popa
mov
jnp
pop
mov
fmul
adc
repz
or
stos
push
jmp
repnz
hlt
mov
ljmp
test
arpl
fstps
mov
sbb
insl
inc
jecxz
push
lcall
insl
xorb
adc
sub
cmp
mov
sti
push
ret
add
xchg
test
icebp
and
inc
incl
jg
cmpsb
and
inc
loopne
xchg
lahf
scas
addr16
lock
out
mov
xor
jecxz
shll
mov
or
cmp
dec
fldt
xchg
sub
pop
xor
push
sub
cmp
rol
adc
idiv
jae
int
or
movsl
push
sarl
addr16
inc
add
das
shrw
dec
and
rcll
mov
mov
stc
cmpsl
inc
pop
fstps
sub
popa
inc
popf
leave
int
fldenv
aas
sti
fadds
frstor
jb
xor
gs
arpl
mov
bound
xor
jbe
outsb
add
test
fimull
or
lods
movsl
je
mov
in
test
pop
push
xor
sub
fistpl
mov
fidivl
outsl
out
sub
nop
stos
cmp
loopne
sbb
daa
sub
jp
sub
xchg
adc
daa
cwtl
addl
cmp
ja
jns
sub
and
dec
aaa
sub
pushf
mov
xchg
nop
aad
stos
in
into
fcompl
int
lcall
push
lds
dec
dec
mov
cmp
fistpl
add
sub
ja
sub
dec
push
sub
xchg
les
cmp
jmp
aas
pusha
mov
pushf
xchg
adc
cmpsb
mov
aam
rorl
loop
xor
enter
ja
mov
insl
cmp
xchg
ret
faddp
iret
jg
insb
aam
lcall
mov
sbb
sub
pop
fwait
adc
cli
adc
inc
adc
loop
notl
jo
sbb
lock
out
xchg
jecxz
mov
idiv
xchg
mov
daa
lret
mov
fnstcw
push
lea
bound
lcall
mov
jmp
cmp
push
xchg
cmp
dec
loop
adc
out
push
push
sahf
xor
inc
xchg
mov
popf
dec
cmpsb
inc
aad
mov
pop
into
sbb
xchg
in
mov
push
popf
pop
mov
les
jne
jecxz
cmp
into
adc
dec
pop
add
mov
jae
mov
iret
jmp
adc
jno
inc
push
mov
sbb
pop
xchg
imul
jo
mov
out
jl
mov
jg
pop
inc
xchg
mov
sub
mov
inc
sti
mov
or
push
nopl
xchg
in
movsb
cmp
mov
mov
adc
mov
mov
or
loopne
mov
sbb
cltd
inc
mov
jp
adc
jnp
mov
or
and
mov
stos
jp
dec
fwait
int
into
rclb
xlat
divb
lds
inc
push
out
push
sub
jecxz
xchg
sub
jecxz
add
in
les
add
xchg
lcall
stos
pusha
scas
std
adc
xchg
mov
and
loopne
ja
push
movsl
xor
push
or
cmp
xchg
and
stos
and
pop
insb
cmc
out
daa
add
add
push
ja
movsl
rol
in
dec
repnz
sub
es
sahf
jns
xchg
sbb
dec
sub
cs
push
inc
loope
lds
mov
sbb
cmpsb
arpl
sub
push
mov
shrl
out
lods
mov
vmovmskps
or
xor
daa
bound
mov
loopne
pop
xchg
push
repz
aas
mov
jo
pushf
rcrl
lahf
jo
mov
ljmp
jle
add
repz
outsl
in
jbe
push
stc
and
cmp
mov
sbb
popa
js
fcomps
xchg
cmp
mov
jge
das
and
lea
scas
scas
jb
xchg
int3
fldt
push
in
xchg
mov
cmp
test
pop
inc
ja
push
mov
pop
incb
and
loop
lods
adc
insl
jg
pop
addr16
jp
adc
imul
mov
into
fs
cwtl
dec
or
sti
icebp
mov
and
std
or
insl
or
lods
inc
cmp
and
lret
bound
adc
std
shll
repnz
dec
mov
push
and
add
daa
xor
pop
fdecstp
sarb
and
out
push
sub
pop
lea
sub
mov
xchg
mov
ret
sbb
jne
loopne
leave
cwtl
cmp
call
push
and
mov
mov
orl
and
lcall
es
xlat
mov
cmc
test
jnp
test
clc
mov
push
mov
shr
out
ss
push
loopne
sbb
cmp
ret
fildll
and
add
iret
mov
not
in
adc
imul
jbe
pusha
cmpsl
lods
pop
imul
add
push
mov
push
repnz
dec
loop
das
jmp
test
push
pop
xor
dec
dec
jbe
sbbb
fcomip
stc
std
loopne
mov
sahf
ja
jmp
pop
out
or
bnd
ds
ss
clc
inc
and
inc
push
push
mov
jp
pop
les
inc
mov
push
scas
mov
aad
mov
pop
shl
cwtl
xchg
int3
mov
mov
sub
je
in
scas
xchg
mov
hlt
in
lds
sbb
inc
in
dec
mov
test
xchg
aas
push
adc
push
cwtl
add
and
push
mov
mov
push
mov
std
movsb
inc
pop
push
mov
push
dec
sbb
sub
popa
jnp
les
das
mov
arpl
dec
mov
mov
sbb
sub
stc
or
adc
popf
mov
pusha
into
sbb
xchg
fmuls
dec
cmp
dec
fcmove
sbb
push
dec
mov
shrb
jmp
mov
push
mov
shl
sub
aas
jmp
or
and
inc
test
sbb
cmpsb
ret
push
xorl
jae
or
mov
mov
rorb
add
dec
fldt
dec
xchg
jbe
insb
mov
mov
jg
xor
xchg
mov
mov
mov
rcr
or
test
popa
sub
int
mov
les
and
fwait
push
inc
mov
enter
hlt
mov
leave
pusha
xor
lods
cld
fcoml
into
mov
cmp
lock
in
gs
xor
adc
into
imul
mov
pop
dec
pop
es
pop
flds
hlt
mov
push
or
jle
pop
mov
pop
andb
cmp
dec
nop
daa
cmpl
xchg
add
inc
inc
sub
push
repz
sub
sbb
popf
adcl
test
or
pop
jl
add
dec
mov
jecxz
cmp
sbb
cmp
sub
scas
add
xchg
inc
inc
andl
xor
popa
add
das
fbstp
sbb
iret
sbb
rol
jo
mov
stos
xor
push
mov
in
cwtl
stos
in
cwtl
xor
into
lock
mov
das
arpl
dec
test
push
mov
pushf
or
ss
jge
mov
xchg
mov
popa
cltd
ret
xorb
dec
xchg
pusha
cmp
addb
pop
push
mov
jbe
add
in
xchg
loop
and
pop
insb
add
sub
mov
jg
or
scas
xchg
jle
stos
sub
icebp
das
ficompl
lea
notl
pop
test
sbb
mov
xor
insb
clc
jae
mov
jbe
sub
mov
mov
inc
imul
adcb
in
pusha
pop
mov
iret
mov
outsb
test
jl
dec
ss
in
add
push
lods
pop
cmpsb
sub
aas
push
stos
fwait
ja
mov
pop
push
ret
out
adcb
repz
ja
mov
mov
out
pusha
cld
xchg
cmp
adc
aaa
fwait
insb
adc
inc
scas
add
push
xchg
cmpsl
pop
fld
push
sti
mov
filds
js
lret
sbb
mov
gs
inc
popa
xor
dec
and
stos
inc
in
jge
fcomi
stc
fisubrl
jns
cmp
sub
and
or
cmp
lods
movsb
add
xchg
call
pop
loope
jecxz
or
mov
cmc
shrb
or
ljmp
mov
push
add
arpl
jns
enter
fldpi
adc
mov
dec
xor
jl
pushf
sub
sbb
cmp
push
adc
mov
shrl
and
sbb
xor
aaa
push
adc
sarl
aas
adc
int
ficoms
popa
stos
mov
push
mov
and
out
jmp
sbbl
mov
fldl
dec
cmp
scas
out
cmp
nop
jmp
add
lahf
out
test
test
popa
pavgb
fwait
outsb
lods
mov
xchg
mov
ret
jno
mov
or
dec
aas
into
jbe
jle
in
sub
mov
jnp
lret
ss
lock
mov
outsl
adc
sti
push
add
fwait
out
mov
lock
mov
jge
push
mov
out
lds
cwtl
ret
outsb
and
mov
dec
in
inc
push
xor
jmp
decb
push
sbb
fpatan
add
sub
and
jbe
jmp
icebp
push
out
out
jb
xor
mov
or
xor
sbbl
xor
in
mov
mov
into
lret
arpl
into
cmp
push
cs
popf
aas
lahf
xchg
mov
out
pop
and
xor
jnp
rcrb
stc
addb
xchg
pop
int
cwtl
adcl
push
sbb
stos
push
mov
jmp
hlt
pop
jno
and
push
xor
hlt
pop
out
pop
lods
push
jmp
sub
pop
test
or
hlt
and
jnp
out
jecxz
mov
in
jecxz
imul
ret
rcr
mov
out
movsl
pop
or
xorb
mov
and
fwait
outsb
sub
add
and
mov
inc
loopne
pop
add
sarb
loopne
jmp
or
testl
lcall
arpl
sahf
inc
xchg
adc
push
jne
xor
scas
mov
negl
pop
fisubrl
mov
and
xchg
add
mov
stos
notb
neg
jo
sub
sahf
lret
lret
aaa
fsubrp
setg
cld
rcr
or
decb
dec
fldt
lret
cmp
cld
sbb
push
jge
shll
xchg
notb
hlt
sub
out
in
leave
mov
pop
pop
sahf
nop
or
dec
out
insb
jge
aam
roll
add
cmpsb
sub
aad
mov
inc
lea
sub
dec
xchg
push
jo
xor
mov
mov
sti
and
pop
pop
dec
cmp
jge
lock
mov
xchg
dec
test
pusha
adc
xchg
in
aaa
or
repnz
scas
pop
je
xchg
sub
es
sbb
fstpt
mov
insb
sbb
add
adc
xor
xlat
mov
cs
fiaddl
sub
jmp
lods
popf
jmp
sbb
push
dec
mov
lcall
and
into
data16
mov
fstpt
push
add
rolb
inc
jnp
jecxz
aaa
inc
mov
xchg
sbb
inc
pop
jmp
mov
stc
sbb
stc
inc
neg
sub
popf
and
int3
and
inc
in
lret
push
sbb
fs
cmpsb
enter
in
jnp
and
mov
cltd
pop
fwait
xor
adc
sub
insl
fwait
jno
or
pop
jle
lret
cwtl
and
sbb
or
or
icebp
mov
dec
dec
aaa
jle
lods
adc
mov
jecxz
add
xorl
push
in
push
pushf
jne
push
jne
sbb
sub
mov
iret
push
dec
shrb
xchg
insl
or
fidivs
add
or
dec
inc
stc
or
aam
enter
dec
jnp
shll
pop
cmp
sbb
push
movsl
sbb
pop
jbe
mov
mov
jno
jbe
cmp
cltd
pop
aaa
pop
das
xchg
cmp
adc
sub
stos
pop
arpl
and
jae
mov
cs
add
sbb
pop
and
cmp
push
mov
fld
pop
fstps
pop
mov
sbb
stc
or
inc
mov
sbb
xor
or
mov
test
dec
insb
and
cmp
adc
lret
repnz
push
aas
push
in
mov
scas
push
aaa
mov
ret
sti
cs
fisubs
pop
repz
lahf
bound
lea
push
inc
outsb
adc
fisubl
ret
dec
mov
dec
dec
dec
ss
movsb
loope
or
inc
movsb
stos
cmp
add
inc
xor
push
clc
dec
jae
out
jle
stos
mov
dec
pop
inc
ss
ret
lock
push
push
jbe
and
pop
and
and
cmp
add
sub
mov
and
mov
test
aam
dec
mov
inc
aas
lock
xlat
pusha
movl
aas
ljmp
testl
pop
push
jo
mov
sbb
push
scas
mov
shl
data16
in
icebp
arpl
jge
daa
mov
rorb
ret
mov
out
out
jne
fidivl
dec
aam
lock
mov
sbb
or
es
mov
int
or
cmc
sbb
push
mov
cmp
inc
sub
pop
lret
arpl
add
pop
popf
cli
into
cmp
loope
in
cltd
xchg
out
mov
lods
je
jge
fildll
lret
mov
cmpsb
cmp
inc
lods
mov
ficoms
mov
lea
in
mov
jne
ljmp
jno
shlb
movsl
in
add
fldenv
xor
test
mov
or
sbb
mov
nop
mov
cld
xor
test
pushf
pop
xor
mov
adc
negb
add
sub
repnz
ja
jns
xchg
je
test
mov
xchg
test
test
lods
jmp
fbstp
sarb
std
fwait
xchg
push
js
adc
mov
inc
jbe
jbe
jno
xchg
cwtl
cmp
out
ds
jo
xlat
out
insb
jne
fsubl
inc
mov
xchg
insb
or
ret
sbb
push
cmpsl
jge
cmpsb
cmp
jle
fucomp
inc
fistpl
scas
push
or
xlat
data16
lcall
es
fstl
aaa
testl
loope
lods
cmp
std
lfence
in
fwait
ret
repz
ja
sub
mov
adc
jne
add
movsb
sbb
pop
jo
pop
mov
push
pop
dec
subl
xor
mov
push
sahf
dec
mov
adc
out
in
sbb
sahf
insb
ret
les
fcomps
jle
mov
int
std
adc
loop
ljmp
dec
mov
mov
pop
fwait
jbe
or
es
fsts
jmp
into
rorb
pop
xor
cmp
test
dec
mov
sub
test
add
mov
push
or
jg
sbb
add
sub
or
and
mov
dec
daa
and
ljmp
jle
lret
sub
xor
cmpsb
pop
dec
outsl
repnz
sbb
js
rorb
push
pushl
or
mov
call
or
cmpb
dec
out
int3
arpl
lcall
xchg
in
push
or
mov
bound
dec
jmp
push
sbb
or
or
imul
popf
stos
cs
idivb
xor
decb
mov
js
int3
xor
movsb
stc
cmp
cmpsb
mov
loop
pop
mov
cmp
nop
cmp
mov
aam
pusha
dec
sub
mov
mov
cli
sti
xchg
mov
rcrl
scas
cmp
inc
outsl
xchg
push
push
push
movsl
mov
mov
mov
fimuls
jae
stc
xchg
jae
mov
mov
comiss
mov
js
pop
mov
mov
cmp
jnp
aad
mov
xor
push
in
mov
fdivl
sti
hlt
insb
push
frstor
add
std
popw
rol
out
shrb
sbb
cmc
cmp
lock
mov
jg
addr16
xchg
add
add
inc
adc
pop
xor
pop
jae
in
rcll
cmc
add
xchg
test
int3
pushf
mov
outsl
stos
jle
push
mov
and
stos
mov
jne
je
cli
lret
mov
hlt
in
mov
sahf
sub
jnp
les
loop
sbb
inc
and
or
add
mov
loope
or
add
sbb
mov
inc
lods
pop
pop
jb
mov
test
out
push
aas
inc
outsb
mov
into
adc
cmpb
mov
fucomp
xor
and
xchg
inc
mov
or
gs
xchg
sbb
xlat
sbb
mov
movsl
mov
stos
pop
ret
out
xchg
push
je
mov
jmp
outsl
xor
cmp
mov
fldl
add
add
and
jnp
dec
pop
mov
inc
cmp
cmp
pop
pop
push
cmp
shrl
out
aas
adc
popf
out
xchg
jmp
and
fistl
mov
cmpsb
push
adc
pusha
jmp
call
pop
push
lahf
mov
icebp
mov
and
aad
cwtl
stos
fcomip
ja
clc
sbb
cli
leave
sbb
mov
sbbb
push
cmpsb
popa
dec
in
jl
cs
mov
ss
dec
aam
sbb
fistpll
mov
sbb
pop
nop
mov
jnp
ss
insl
push
mov
nop
daa
aad
mov
ds
push
mov
mov
popf
push
test
mov
mov
push
loopne
addb
mov
scas
pop
mov
mov
and
ficomps
movsl
dec
femms
movsl
cmpb
cmpsl
and
mov
ret
cmp
adc
mov
pop
push
jg
cmp
scas
cmp
push
cli
adc
aaa
sub
dec
imul
negb
jecxz
pop
insl
push
jmp
cwtl
pusha
jle
in
cmp
jecxz
push
imul
movsb
cs
sub
mov
out
addr16
in
adc
insl
adc
lret
xchg
mov
stos
es
fnsave
popf
xchg
sbb
iret
jbe
xchg
sbb
xor
inc
xchg
idivl
xor
int
rcrl
push
test
lods
adc
into
data16
rorl
push
mov
lahf
lods
and
pop
sub
out
icebp
sahf
pop
das
or
repnz
mov
adc
inc
insb
xchg
lods
popf
push
adc
push
cli
pop
xchg
loop
xor
lods
call
lea
add
filds
adc
es
das
push
popf
dec
cmp
dec
lods
mov
inc
jo
loope
pop
push
lret
das
sti
andl
js
sub
test
push
pop
addr16
mov
xor
jle
bound
sbb
dec
dec
pop
loopew
adc
mov
mov
push
mov
and
jae
lcall
dec
push
add
ds
loopne
in
adc
fisubrs
ds
inc
les
add
mov
cltd
mov
iret
dec
lock
mov
inc
std
out
xor
jg
insb
movsb
mov
or
arpl
jbe
add
xor
sbb
jbe
adc
dec
and
and
hlt
test
sarb
dec
mov
pop
sub
xchg
rolb
sahf
in
rclb
ficomps
add
and
sub
aas
add
dec
mov
js
out
push
shlb
daa
fdivrl
pop
outsb
lahf
out
add
andl
jne
rcr
xchg
ss
ret
out
mov
sbb
pop
xchg
dec
sbb
sub
nop
pop
sub
cmc
jno
dec
je
xchg
mov
push
idivl
xor
pop
inc
lea
mov
lcall
fdiv
and
xlat
jb
test
mov
jmp
aam
mov
pusha
push
movsl
xchg
mov
test
movsb
or
loope
movsl
mov
jle
dec
addb
fucom
fimuls
push
ret
stos
out
in
cmpsl
bound
daa
sub
push
ret
fs
jecxz
mov
int
test
lock
push
mov
inc
mov
in
fdivl
imul
pop
loop
ret
mov
or
int3
fmulp
ljmp
lods
mov
ret
mov
faddl
sub
icebp
cld
push
and
xchg
pop
subl
insl
aam
mov
jecxz
jg
pusha
xchg
dec
add
cmovnp
je
cmp
jb
lcall
xor
dec
popf
inc
lds
aaa
sti
jp
cwtl
jmp
out
add
dec
rcl
jnp
push
mov
pop
push
or
cmp
sahf
push
lock
inc
daa
clc
rcl
or
in
cmp
icebp
inc
mov
sahf
aad
fstps
test
mov
in
testl
sub
mov
dec
sbb
leave
sbb
dec
fidivrs
mov
jle
out
cmpsl
shl
inc
fxch
imul
push
sub
loope
and
pop
dec
ret
pushf
pop
sub
rclb
mov
andb
insb
sbb
pop
andb
jl
ss
push
mov
ss
ss
pushf
std
leave
dec
cld
or
cld
hlt
daa
in
stos
dec
push
adc
insl
jge
mov
or
ret
mov
jmp
or
adc
or
and
fwait
pushf
sub
sub
or
imul
inc
push
test
jbe
stos
xor
call
lahf
ss
sbb
dec
and
lds
lret
jp
lret
push
imul
fstps
xchg
xor
in
jnp
mov
repz
icebp
adc
mov
push
pushf
fidivs
jmp
jnp
pop
mov
fisttpll
into
push
insl
or
pop
mov
inc
cli
mov
dec
popa
jg
mov
fdivs
lahf
xorl
sub
sub
jecxz
cmp
iret
dec
sub
adc
inc
rolb
sub
lock
inc
test
mov
mov
sub
push
push
lcall
mov
mov
aaa
shl
cmp
cld
aaa
push
aas
lahf
cmc
dec
out
pop
pushf
cli
rorl
jl
ja
jmp
popa
test
or
mov
mov
scas
pop
lret
sub
int
jb
andps
std
test
outsl
popa
adc
inc
dec
mov
movsl
lds
mov
aad
pop
lods
inc
jbe
jne
cs
fldcw
sbb
popf
or
pop
sbb
mov
lcall
test
repz
jp
iret
jno
inc
or
xchg
mov
clc
pop
out
cmp
xchg
adc
pop
mov
add
mov
ror
data16
adc
in
loopne
shr
sbb
cmp
push
mov
fdivrl
mov
push
loopne
test
adc
bound
mov
lcall
mov
ljmp
imul
jl
add
pusha
jne
mov
mov
lret
add
insl
sbb
xlat
xor
scas
inc
pop
movsb
cmp
das
in
stos
adc
imul
fnsave
loope
cs
inc
xchg
xchg
sub
in
cmpsb
pop
jbe
rolb
mov
mov
mov
xchg
add
or
push
stc
popa
mov
adc
in
mov
cmp
pop
das
mov
pop
negb
es
jbe
int
pop
shll
mov
sbb
jae
lds
push
popa
int
repz
enter
inc
lock
aad
rcr
out
or
pushf
ljmp
jb
dec
xor
push
mov
out
push
and
popa
int
aas
sub
adc
popa
mov
pop
cli
aas
pop
repz
fidivs
jge
mov
out
pop
hlt
andl
or
inc
push
pop
pop
std
ret
sub
push
jb
aad
sbb
aas
out
push
xchg
pop
in
xor
nop
icebp
xchg
jns
rcll
mov
arpl
jg
or
xchg
add
lret
xor
hlt
stos
push
nop
insb
mov
or
sub
rep
pop
mov
dec
xchg
shr
arpl
inc
xchg
mov
dec
loopne
aad
mov
lret
addr16
xchg
stos
inc
lods
sub
pop
mov
push
call
xchg
jmp
out
imul
lock
jns
jge
cmc
push
inc
cmp
or
pop
mov
cmp
iret
xor
shrb
xor
xchg
push
scas
ret
jns
in
ja
repz
lds
cmp
jp
adc
mov
add
fildl
movsb
dec
into
lea
inc
into
cld
std
sarl
xor
addr16
jb
jno
pop
adc
sbb
lds
cli
cmc
shrl
or
mov
je
sar
out
clc
rcr
push
insl
jg
wrmsr
dec
dec
cs
fnstsw
imul
mov
insb
popa
clc
lea
jg
gs
cmp
sub
sub
xchg
mov
mov
or
inc
in
lock
lahf
ret
sub
add
inc
push
add
pop
pop
subl
cmc
and
cli
aas
push
pop
insl
push
mov
mov
push
mov
sub
pop
add
sbb
call
jb
mov
cmpsb
pop
add
lea
mov
aam
pop
ret
sub
in
xchg
dec
mov
out
bound
test
jbe
adc
jbe
shll
outsl
cmpl
enter
xorl
dec
lret
adcb
cmpsb
mov
and
shr
mov
outsb
jnp
ljmp
imul
push
clc
cmp
nop
jmp
cmpsl
clc
insb
neg
pop
pop
addb
adcb
in
sbb
add
xor
push
sbb
inc
int
mov
shrb
test
fucomi
and
arpl
hlt
outsl
mov
adc
aam
cmc
inc
movsb
scas
in
icebp
inc
inc
fbstp
stos
aaa
xchg
rolb
push
cmp
sub
iret
xorb
adc
dec
adc
sbb
jo
int3
mov
sbb
in
dec
std
sub
mov
mov
sbb
repnz
call
mov
test
xor
cli
xchg
inc
fisubl
nop
fdivrs
subb
shrl
jo
and
test
stos
je
jb
scas
jno
fstl
testb
leave
lret
aad
hlt
sub
and
popl
jne
push
or
mov
ficoms
sub
xchg
dec
mov
dec
ljmp
out
cmpsl
mov
or
negl
loopne
xor
jle
repz
cmpsl
mov
neg
mov
popf
iret
test
jmp
xlat
cmp
xchg
cld
dec
jp
insb
and
fbld
mov
adc
movsb
fcomps
sub
or
inc
xchg
iret
push
jae
xor
mov
ljmp
push
sub
mov
cmp
cmp
pop
dec
xor
cmp
shrb
cmp
dec
mov
cld
out
rcrl
and
movswl
dec
and
push
test
or
fcoml
std
pop
fists
std
cltd
sbb
xchg
in
pushf
imull
rcrb
lret
scas
jbe
test
jno
lea
cmp
shlb
jns
cmc
sbb
sbb
dec
loopne
testb
mov
cmp
lahf
arpl
and
adc
ss
push
sti
imul
and
inc
out
inc
lods
adc
push
bound
in
mov
mov
inc
dec
pushl
dec
and
aaa
into
xor
push
cwtl
and
dec
ds
jne
pop
sbb
xor
jl
pop
jno
jo
xchg
loope
inc
cli
mov
adc
mov
je
ljmp
xor
adc
sbb
pop
shrb
int3
inc
mov
pushf
arpl
cmpsb
cld
push
add
sub
ds
outsb
sahf
mov
pop
push
jp
mov
aad
inc
pop
fdivs
and
lods
icebp
inc
xchg
out
lcall
add
or
and
jle
xlat
aad
push
pop
clc
mov
xchg
pop
sbb
lcall
adc
jl
mov
sub
nop
xor
repnz
cltd
out
sti
inc
push
faddl
sub
cmpsl
insb
in
cmpsb
outsl
outsb
js
lcall
sub
and
movsb
sbb
pop
ljmp
xchg
jae
cld
jl
popf
mov
ss
ret
jns
inc
adc
popa
jbe
frstor
add
ret
fistps
into
stos
dec
loope
sub
out
inc
push
jmp
cmp
leave
add
js
popa
jecxz
ljmp
inc
inc
imul
fs
scas
add
nop
stos
and
push
leave
push
testb
or
idivb
mov
gs
jg
roll
or
pushf
mov
push
sub
aad
xchg
push
fucom
push
in
fs
mov
int
divl
jmp
filds
loop
sbb
movsb
cs
push
mov
xchg
rol
test
add
jnp
out
js
pop
aam
mov
sub
dec
sbb
xchg
push
cltd
and
jp
popf
or
mov
pushf
imul
push
pop
imul
sarb
sbb
xlat
mov
mov
jmp
mov
jns
mov
movsb
popa
mov
cmp
xchg
jbe
outsb
imul
clc
icebp
dec
mov
cld
out
movsl
outsb
jae
loope
xchg
ror
jne
add
cld
mov
pop
cmpsl
ret
lds
iret
jnp
cmp
repz
bound
loop
adc
mov
out
mov
ret
add
push
loope
and
mov
adc
push
push
addr16
jmp
popf
je
xor
push
je
imul
xchg
xor
testb
ja
mov
jno
sub
jno
mov
repnz
lock
or
cmpsl
inc
fadd
xor
loopne
nop
jnp
ret
cmpsb
push
addr16
cwtl
jb
add
gs
jae
pop
pushf
mov
cmp
leave
out
pop
in
push
dec
xchg
and
loope
inc
mov
dec
sub
adc
shl
xor
aam
push
cmc
and
loope
inc
fcomps
mov
mov
push
or
dec
push
and
mov
les
faddl
fcoms
mov
or
or
mov
push
fstl
imul
sub
outsl
add
loopne
pop
fimull
xchg
aaa
iret
sbb
es
pop
adc
aaa
roll
adc
rcll
xlat
and
in
pop
add
loop
xchg
test
sahf
push
fscale
inc
stc
fistl
rcll
dec
mov
inc
outsb
in
lods
outsl
pop
or
sbb
cmpsb
mov
mov
sbb
mov
cmpsl
inc
mov
mov
dec
dec
pop
jbe
or
iret
cwtl
das
in
fdivl
out
into
fucomip
lods
dec
xchg
movsl
fidivl
scas
push
imul
icebp
std
xchg
fists
sub
sub
push
add
mov
lcall
inc
mov
cltd
lods
mov
xchg
cmpb
or
dec
fdivl
stos
mov
fsubs
gs
cmc
stos
popa
je
xchg
lret
stos
andb
pop
loopne
ja
dec
test
std
xchg
adc
mov
mov
jbe
sbb
dec
lahf
mul
xchg
jns
push
seto
dec
dec
lock
aas
pop
ds
cmpsb
cmp
cmp
mov
decb
sti
dec
jecxz
push
fstpl
cmp
rdpmc
jecxz
test
inc
fimuls
dec
in
sbb
testb
push
rclb
adc
sti
add
mov
jge
mov
pushf
mov
cmp
std
in
jle
stc
mov
out
mov
mov
mov
mov
or
push
cmp
push
popf
push
or
out
pop
in
in
adc
mov
push
andb
push
and
std
add
mov
into
daa
mov
inc
push
add
or
mov
and
mov
cmovbe
es
movsb
inc
and
nop
data16
dec
add
push
sbb
jb
mov
cli
sahf
add
add
gs
and
lret
xor
pop
sub
sarl
sahf
xchg
pop
dec
cmp
add
negl
es
bound
jnp
mov
int
xchg
pop
outsb
mov
jo
mov
fwait
cmpl
aad
or
sahf
mov
jmp
sub
add
arpl
add
or
cmp
sub
jmp
mov
inc
dec
fmuls
adcl
pop
push
ljmp
push
rcll
je
test
jae
xor
int
iret
les
mov
test
xchg
push
and
jno
xchg
sbbl
movsl
gs
jp
pusha
inc
mov
jne
stos
mov
stos
jmp
xor
sbb
in
enter
push
aad
je
cmp
jo
ja
mov
mov
sub
aam
or
push
call
test
outsl
push
push
arpl
push
pop
lea
fsubl
mov
cmp
inc
cmp
dec
mov
in
mov
arpl
sub
stos
cmp
mov
add
dec
mov
xchg
test
ss
out
push
mov
xor
jmp
inc
push
jnp
aas
and
int
cmp
rcl
jp
jmp
int3
faddl
ret
outsl
cmp
in
test
add
nop
loop
pop
lock
add
xchg
pop
std
jae
lret
int3
push
pop
push
ficoml
mov
mov
mov
or
out
add
loop
adc
mov
ret
mov
dec
dec
jp
xchg
les
adc
jno
lcall
mov
inc
jne
and
std
xchg
and
test
dec
stos
jmp
pop
lods
test
lret
sti
jne
imulb
dec
loopne
add
mov
aas
mov
inc
aad
adc
pop
inc
sbb
jge
es
add
imul
repnz
pop
cli
in
mov
dec
loop
adcl
and
mov
call
inc
jns
jmp
and
lret
out
std
jnp
pop
mov
movsl
int3
jp
inc
cwtl
adc
push
cmpsb
lods
sbb
ds
test
xor
push
cmc
loop
add
std
adc
jl
xchg
xchg
jle
cmpsb
sti
loop
sub
test
and
nop
pop
rolb
cmovle
aas
add
aam
pop
adc
cmovp
jo
mov
add
out
xchg
add
repz
or
enter
jge
popa
xor
sbb
iret
push
mov
cmpsb
cmp
pop
imul
test
sarb
mov
sub
ret
dec
dec
orps
push
in
push
mov
adc
or
adc
xchg
jno
mov
test
sub
push
or
cli
cltd
dec
fildll
das
cmp
push
movsl
and
or
imul
cmpsb
jmp
insl
sub
push
mov
out
xor
pushf
and
es
mov
mov
cmp
push
mov
mov
jp
inc
mov
stc
dec
or
iret
sbb
shll
jno
inc
lret
dec
pop
std
gs
sahf
or
pop
outsb
test
and
mov
testl
inc
popf
lods
mov
flds
jne
and
inc
dec
imul
enter
aaa
into
pop
in
mov
in
and
push
adc
pop
popf
out
jecxz
scas
adc
and
and
sbbl
xchg
pop
lahf
ss
out
js
mov
ss
imul
xor
fdivl
cmpsb
mov
fbld
repz
inc
mov
int3
xchg
sub
or
or
out
loope
or
shlb
and
into
dec
xchg
lahf
aam
bound
push
mov
mov
pop
inc
adc
bound
test
aaa
or
xor
xor
movsl
fstpt
cld
xchg
lea
push
sbb
push
sbb
jg
scas
inc
lret
and
push
in
leave
pop
clc
sbb
out
pusha
fninit
inc
pop
or
and
jp
rorb
sbb
ds
lahf
in
sub
std
loop
bound
loop
mov
xor
imul
cmp
or
test
sub
mov
nop
dec
fdivs
mov
cli
sahf
push
cmpb
pop
mov
fxam
lds
inc
mov
mov
mov
adc
xor
pop
lea
dec
icebp
mov
test
cmp
jno
push
jecxz
push
sahf
or
and
pop
add
xor
jno
int3
xor
mov
inc
adc
jl
out
enter
ss
test
pop
xchg
pop
sahf
ficoms
adc
sbb
cmp
mov
scas
pop
xor
and
push
lods
push
add
adc
outsl
sbb
mov
jmp
or
sahf
sbb
jbe
inc
stos
loop
repz
lret
xor
subb
push
push
push
in
rcrl
xor
subb
leave
pusha
add
push
sarl
jb
imul
lds
cli
xchg
inc
mov
sbb
jp
clc
aam
out
add
jg
cmp
or
sbb
aam
sbb
fisubs
mov
outsb
adc
insl
mov
bound
inc
lahf
push
mov
push
lods
aam
out
xchg
dec
and
iret
repnz
lret
add
cltd
jg
testl
jb
sub
clc
xchg
pop
adc
xchg
loope
std
inc
mov
push
loop
fnstenv
lock
fucomi
testl
push
shll
mov
int3
or
sbb
mov
pop
leave
pop
in
mov
xchg
jl
loopne
sbb
dec
inc
jmp
xchg
cmp
mov
lds
or
pusha
pop
inc
sbb
sbb
imul
sbbb
sub
xchg
push
das
data16
dec
push
and
lods
sbb
jnp
cmp
addr16
push
fsubr
dec
loopne
push
in
ja
lea
dec
cmp
fcomps
outsb
adc
mov
std
je
imul
test
push
push
sub
and
ds
andnps
jge
jb
inc
and
xchg
add
mov
addr16
in
add
aas
daa
sbb
int3
cmp
js
dec
xor
cmp
add
jp
jns
in
dec
js
subb
es
loop
mov
pop
int
ds
out
cmc
push
and
xchg
push
cmpsb
sbb
jmp
inc
cmp
push
data16
dec
and
ss
mov
lods
add
xor
sbb
jg
sub
mov
sarb
lods
test
pop
mov
pushf
arpl
jmp
enter
inc
mov
pop
iret
das
add
and
add
jnp
js
push
test
xor
lods
cmpsb
sti
jmp
ret
push
std
fsubs
pop
lods
mov
mov
push
pop
cmp
sub
sub
popa
rclb
adc
and
leave
jecxz
pushf
out
test
push
lret
dec
inc
scas
movsb
sub
mov
sub
shl
mov
call
push
mov
pop
mov
add
cmp
adc
jle
mov
xchg
sti
add
pop
pushf
and
scas
mov
insb
loop
jns
sbb
adc
insb
dec
xchg
sub
xchg
inc
xor
pusha
ljmp
js
push
jmp
jg
cmp
cs
xor
jbe
test
inc
and
addr16
dec
inc
cmc
adc
add
sub
sbbl
xchg
movsb
jno
shrl
jge
sbb
iret
push
testb
pop
pop
dec
andb
arpl
fstl
pop
iret
pop
mov
mov
jne
mov
mov
enter
int3
mov
jnp
cmc
pop
jle
xchg
sub
push
std
loopne
in
pop
xchg
and
inc
mov
jns
cmpsl
lock
xchg
cmpsb
cmpsb
out
aas
push
xor
insl
in
test
arpl
inc
enter
frstor
mov
jle
addb
or
push
in
je
cmc
xchg
psraw
call
xor
loop
push
pop
or
xchg
xor
mov
mov
movsl
ficompl
jo
pop
stc
nop
dec
les
fsub
movsb
jp
sti
sti
pusha
mov
fsubrp
push
ror
pusha
sub
xor
adc
repnz
insb
in
or
js
mov
jle
mov
repz
mov
xlat
mov
add
xor
jmp
push
stos
inc
es
xchg
out
test
xor
mov
mov
jmp
push
or
lock
imul
dec
popl
add
jnp
mov
inc
fsubrl
or
test
int3
pop
mov
lods
push
clc
iret
xchg
int3
das
push
cmc
jl
or
xchg
sbb
subb
fsubs
addr16
loope
pop
ds
and
sbb
lcall
lea
xor
cmpsb
pop
lock
test
dec
or
push
lret
bound
test
addr16
fsubrl
lcall
cs
xlat
popa
orl
xchg
nop
push
dec
adc
in
lock
fucomp
repnz
stc
nop
je
cmp
push
jle
lcall
shrb
in
add
adcb
push
mov
dec
test
popa
sbb
lods
sub
fmuls
or
pop
inc
aad
xchg
and
into
adc
jl
stc
aaa
jbe
xor
or
rsqrtps
jne
lods
pop
movsl
jne
cld
pop
cmc
stos
fisttps
or
mov
pop
mull
jge
pop
cmp
imul
leave
xchg
addr16
sbb
jae
ljmp
pop
xchg
outsb
rorb
xor
mov
ficoml
int
or
aaa
push
or
pop
fwait
pop
jl
fisttpll
push
into
xadd
xchg
pop
lea
fwait
mov
or
mov
cmp
sbb
xchg
xchg
sub
ret
adc
or
jnp
add
mov
jne
cltd
cmpsb
inc
xor
mov
adc
inc
mov
or
arpl
pusha
cmp
into
push
jle
aam
fsts
adc
mov
mov
xchg
xor
arpl
mov
daa
mov
popf
cld
js
fbld
mov
testb
mov
cmp
mov
pop
ficoml
arpl
hlt
mov
add
push
mov
pop
xchg
dec
test
lret
cld
jbe
adc
test
cmp
xchg
jbe
les
les
bound
insl
cltd
aad
in
mov
ret
hlt
inc
divb
push
ss
push
and
push
add
sbb
popf
in
rclb
sti
out
cmp
notb
jge
jp
adc
lcall
push
xchg
xchg
shll
mov
ss
cmp
andb
daa
scas
std
push
inc
inc
and
movsb
adc
inc
pop
inc
sahf
adcb
xor
adc
inc
jg
adc
xlat
in
enter
mov
call
or
nop
inc
xchg
fistl
lds
sbb
sahf
xor
fistps
inc
push
xor
fsubrl
lock
mov
int
andl
push
test
leave
push
arpl
cltd
xchg
js
mov
xor
iret
fimuls
mov
jo
push
sbb
dec
fidivrl
rep
inc
and
sub
xchg
test
xchg
dec
in
arpl
pop
pop
lea
cs
sbb
mov
push
fstps
add
stos
imul
test
mov
add
pop
ljmp
push
in
in
sbbl
jae
or
inc
lock
popa
outsb
aam
iret
cmpsb
push
imulb
add
sub
and
aaa
dec
ficoml
add
repz
mov
shlb
cwtl
aad
out
pushf
jg
or
popa
nop
jo
dec
xchg
jno
loop
int
pop
adcb
sahf
cmp
aaa
mov
mov
lods
and
lcall
fnstcw
cmc
push
dec
pop
push
jmp
stos
lds
icebp
stos
fisubl
jnp
xchg
and
or
and
lods
inc
idivl
jge
popf
lret
xlat
add
fwait
xlat
or
pop
pop
jae
add
jmp
cmc
and
cmpsl
sbb
sti
in
sub
jl
or
div
mov
sbb
aas
xor
jo
cmp
ret
sub
into
psraw
lock
lods
xor
loopne
push
cmpsl
aas
lds
inc
std
aam
lds
add
jge
test
repz
adc
mov
pop
mov
mov
pop
sti
inc
leave
out
imul
cld
xor
jo
das
push
setae
sbb
mov
pop
ljmp
mov
jmp
sbb
test
and
push
aaa
xor
inc
pop
inc
in
rorb
jo
scas
fnstenv
inc
jle
pop
sub
add
jnp
mov
testl
mov
mov
pusha
push
leave
push
lds
cmc
ss
push
push
pusha
pop
in
mov
nop
data16
push
mov
aaa
test
mov
loopne
pop
pop
pop
das
fidivl
mov
xchg
das
xlat
pop
orl
pop
sbb
mov
jl
stos
mov
inc
pop
testb
js
movsl
sbb
pop
add
cmpsb
inc
jo
mov
js
sub
xchg
leave
xor
bswap
popf
push
out
push
insl
aam
cld
xchg
cmp
fs
hlt
fistps
in
xor
loopne
dec
std
add
repz
sub
xlat
out
push
into
mov
add
and
jns
xchg
inc
add
cmp
xor
fcmove
adc
jecxz
loop
lods
cltd
das
adc
into
xchg
aaa
sub
push
mov
adc
rol
hlt
rcrb
dec
hlt
mov
je
ret
icebp
ret
dec
xor
sbb
cwtl
lret
or
and
cld
push
dec
nop
cmc
pusha
insl
sub
dec
inc
mov
leave
aam
out
jp
sub
cmp
loopne
mov
xchg
xchg
imul
test
fnstenv
in
orl
cld
pop
dec
data16
cmp
das
aam
push
mov
push
jle
sub
xlat
mov
mov
ftst
push
pop
in
cmpsl
loope
rcpps
testb
sarb
sbb
mov
aaa
addr16
lcall
test
repz
fists
and
mov
clc
fs
jne
adc
movsl
push
mov
movsl
ret
sahf
jg
push
negb
mov
pop
mov
lods
mov
lret
mov
mov
fs
outsb
inc
inc
pop
getsec
jmp
stos
cmp
xorl
lcall
cmp
sbb
test
mov
pop
jnp
add
inc
pusha
das
lahf
notb
or
and
jno
and
xchg
xchg
mov
inc
jmp
repz
xchg
mov
rorl
mov
inc
sub
aaa
mov
test
lret
enter
sub
fsubl
adc
add
lret
adc
xchg
inc
jmp
pop
inc
mov
add
ffree
pop
push
int3
imulb
adc
jp
int3
mov
in
repz
gs
int
xchg
sbb
dec
mov
jmp
jo
lds
sti
test
inc
lret
mov
cld
gs
aam
aam
out
xor
ja
test
jmp
in
xrelease
data16
mov
pop
out
test
stos
arpl
dec
pop
dec
push
scas
push
call
nop
in
outsl
push
rcll
shl
pop
fldenv
xor
pop
imul
das
mov
and
dec
jae
out
imul
shlb
in
lock
mov
pop
in
clc
or
mov
and
push
rcll
pop
aam
mov
sbb
sub
test
pusha
das
mov
sbb
jle
jmp
mov
out
mov
mov
mov
shlb
cld
mov
leave
sub
mov
repz
aam
sti
adc
mov
push
cli
imul
aaa
xor
push
and
adc
pop
je
hlt
push
movsl
and
lret
sti
sahf
outsl
jmp
add
add
aas
mov
cmpb
and
ss
test
xchg
rcll
in
adc
dec
in
stos
imul
fsubr
js
mov
js
jmp
mov
adc
aad
ret
lret
mov
dec
call
out
fs
inc
xor
mov
or
int
jle
inc
in
test
lret
sub
push
std
dec
push
hlt
out
push
push
leave
cmp
ja
or
lahf
mov
mov
xchg
inc
xchg
pop
and
out
ficomps
outsb
cmp
das
adc
add
jb
lret
cmc
jmp
push
daa
cwtl
push
mov
pop
add
mov
mov
test
dec
sbb
shl
rorl
jns
mov
xor
movsl
in
inc
inc
add
aad
loop
mov
aad
mov
push
aad
pop
cmp
dec
ret
popa
cmp
pop
xlat
lcall
xor
lock
fiadds
es
jl
mov
add
and
or
imulb
aam
insl
push
xchg
jnp
mov
outsb
push
xchg
repnz
add
std
jo
scas
aam
pop
icebp
repz
add
add
sahf
pop
sahf
mov
inc
inc
sbb
dec
fistpll
mov
movsb
nop
xor
fcomps
gs
push
fisubrs
test
jno
rorb
mov
clc
adc
or
dec
les
insl
outsl
cmp
lret
out
mov
or
push
push
inc
int
sbb
shr
rorl
or
cmp
jecxz
and
in
jae
das
push
popa
fsubrl
lds
stos
dec
enter
aad
and
in
inc
dec
jg
cmp
dec
or
dec
cmp
cmp
jg
loop
decl
sub
ja
push
nop
das
mov
xor
mov
or
loop
add
inc
jo
insb
mov
xor
sti
or
adc
lcall
cwtl
mov
adc
sti
pop
mul
mov
aad
adc
test
mov
popa
or
cmpsl
xchg
mov
daa
jnp
pop
sbb
sti
mov
inc
insl
fmull
or
jne
divl
mov
out
fwait
inc
popa
es
mov
jg
push
sub
push
xor
pop
idivl
cwtl
mov
fidivrl
mov
pop
sti
dec
or
pop
mov
int3
push
pop
mov
adc
xor
addr16
mov
out
sub
fists
or
stos
mov
in
test
std
xor
jp
shrb
push
mov
imulb
movsl
cmp
ds
loopne
stc
adc
clc
sahf
inc
insl
add
mov
push
push
popf
sbb
jb
sub
xor
or
dec
dec
or
out
push
subb
inc
das
sbb
int
and
addb
mov
aam
or
in
in
loope
pop
les
cmp
pop
fldt
mov
sub
out
push
lods
cmp
dec
or
imul
or
mov
mov
add
sbb
sbb
push
cltd
push
jbe
mov
aad
inc
cmp
stc
or
push
dec
or
movsl
int
inc
imul
popa
insl
movsb
mov
jno
dec
jb
enter
into
cmp
cmp
xchg
add
in
mov
mov
or
and
cltd
loope
out
sarb
adc
xchg
imul
lock
fbld
adc
je
popa
push
iret
gs
into
sbbl
push
mov
push
mov
iret
ficoml
and
out
inc
mov
mov
decb
mov
ss
push
outsb
rcr
sub
popa
xor
lds
iret
ds
addr16
sbb
aas
inc
loop
cmp
cmc
push
xchg
add
sub
dec
aaa
into
sub
inc
popf
jle
cli
or
dec
or
fnstsw
mov
and
inc
sti
daa
push
jecxz
jl
push
je
sub
test
adc
push
movsl
unpcklps
xchg
das
sub
cltd
jno
mov
jmp
call
push
fsubrs
call
add
dec
insb
xchg
ds
mov
rcrl
outsl
dec
test
cmp
in
push
add
add
push
mov
push
clc
cwtl
test
add
xlat
bound
cld
cmp
test
push
mov
jl
sub
or
or
xchg
mov
daa
jl
cltd
jg
mov
add
imul
ds
mov
je
cmpsb
xchg
push
pop
sub
add
rcrl
lea
fucomip
ljmp
fisubrl
incb
stos
sbb
adc
push
mov
xchg
inc
gs
stos
pop
bound
les
divb
push
or
push
int3
sahf
cmp
pop
in
add
jae
pop
and
negl
pop
xor
add
push
adc
cwtl
pushf
cmp
pop
mov
dec
leave
test
cmp
insb
dec
inc
mov
inc
in
pushl
cmpsl
into
or
aad
add
sub
stos
cmp
in
pop
adc
sub
mov
xlat
inc
sbb
outsl
dec
ja
cmp
xor
movsl
sub
jns
lcall
dec
sub
in
gs
mov
jg
mov
in
in
inc
cld
fwait
hlt
subb
sbb
xor
fisubrl
fs
out
neg
add
xchg
outsb
add
mov
cmp
add
mov
and
jecxz
and
pop
in
or
inc
cmp
add
test
push
data16
adc
movsb
jnp
mov
sahf
ret
cmp
lds
orl
xchg
lods
mov
pop
in
xor
cmc
pop
icebp
fldcw
jno
jbe
imul
dec
mov
in
inc
mov
dec
repnz
adc
push
out
xchg
dec
cmpsb
xchg
adc
fwait
mov
int
xchg
inc
scas
and
cmpsb
lock
int
inc
clc
sbb
sbb
in
xchg
sbb
inc
setbe
add
in
cmc
adc
adc
loopne
inc
jae
sti
xchg
mov
loopne
or
lahf
cmc
pushf
es
mov
int3
cli
ljmp
or
cmp
sti
push
xorb
sbb
mul
imul
push
mov
xchg
aad
rol
aam
sbb
inc
jmp
nop
dec
inc
or
aaa
jecxz
mov
add
and
rorb
mov
push
lods
ss
fldt
inc
cmp
ss
js
or
inc
mov
push
call
cmp
jno
xor
xchg
inc
add
bound
scas
int
push
jae
imul
mov
mov
mov
xor
mov
cmpsb
dec
into
popa
xor
fidivrs
and
pop
adc
popf
mov
mov
mov
sbb
mov
xchg
push
pop
mov
loop
test
mov
aad
fdivrl
scas
and
push
adc
jl
in
sub
dec
popf
insl
inc
daa
scas
jno
inc
mov
das
mov
lcall
pop
lds
call
out
dec
data16
outsl
cmpl
cld
cli
test
push
lods
cmp
loopne
push
adc
aad
ficomps
push
add
sub
push
and
jmp
int
and
mov
xor
mov
dec
adc
repz
cs
adc
or
ret
sub
mov
pushf
outsb
movsl
jno
mov
xchg
sub
adcb
mov
loopne
adc
push
rcrl
mov
jo
pop
cmp
loope
push
xor
aas
mov
int3
mov
or
enter
dec
stos
ret
sub
arpl
repnz
call
fcomps
lahf
mov
sbb
push
nop
cmp
or
add
jl
add
xchg
cwtl
mov
in
das
addr16
push
xor
mov
imul
sub
dec
jge
mov
push
mov
mov
loope
sbb
sbb
push
cmp
add
sbb
ja
out
mov
cmpsb
mov
mov
jns
bts
adc
lds
add
in
inc
pop
scas
std
xor
les
ljmp
pushf
jg
inc
pop
adc
mov
loopne
and
jg
mov
out
add
push
daa
adc
lods
cmp
mov
out
mov
popf
mov
hlt
pop
mov
popa
lock
lahf
mov
movsb
sbb
cmp
mov
rcr
fmull
loop
dec
dec
jl
jnp
cmp
sub
mov
lods
imul
push
lods
xor
or
xchg
andl
xchg
ss
jae
or
sbb
aas
stos
in
repnz
lcall
rolb
jl
mov
or
push
dec
push
js
les
mov
mov
pop
cwtl
pop
xchg
lret
jbe
or
roll
xchg
jl
inc
sub
push
fistpll
mov
pop
js
mov
sbb
push
outsl
sbb
into
pushl
mov
mov
mov
add
js
sub
je
pop
mov
sbb
pop
jg
aam
ds
push
shld
ret
sub
insl
push
inc
inc
fidivl
loope
std
dec
mov
xorl
add
movsl
mov
adc
sub
lds
mov
stos
cmpsl
push
stos
pop
ret
clc
int3
es
sbb
sub
test
cs
out
popf
fdivs
pusha
mov
loop
cs
adc
int
pop
out
pop
scas
sub
jbe
or
mov
sbb
jg
mov
xor
xchg
jge
and
adc
cltd
pushf
stos
rcl
test
adc
jg
rolb
push
xor
mov
mov
loopne
or
dec
xor
mov
adc
xlat
sub
pop
aad
nop
push
sub
ror
add
in
push
xchg
inc
or
mov
sub
mov
shl
jge
pusha
in
adcl
popl
pop
fidivs
pushf
cmp
sub
mov
negl
mov
mov
lock
cld
loope
outsb
cmp
sbb
adc
xlat
movsl
ja
stc
push
repz
xchg
cli
dec
dec
mov
lock
jnp
inc
stos
lcall
pushl
pop
xchg
out
aam
push
or
mov
fsubrl
aam
sub
divb
out
std
sub
jne
jns
lock
lcall
and
data16
inc
lods
dec
xchg
fidivs
cltd
mov
push
call
sbb
outsl
push
movsl
ficompl
fs
mov
in
xchg
je
movsb
jno
mov
testb
jl
mov
in
movsb
sbb
lret
or
dec
in
sub
sarb
mov
cmp
cmp
ja
jle
mov
pop
mov
sbb
clc
and
xlat
xchg
sbb
lods
adc
sbb
in
daa
and
add
data16
inc
scas
inc
xor
aam
pop
loope
fucomp
enter
fmuls
mov
pop
jmp
jp
sub
xchg
popa
push
popa
or
push
int3
mov
sub
dec
dec
loop
jbe
mov
dec
imul
sbb
jns
xchg
cmpsl
ds
pop
inc
lds
fadd
mov
jmp
mov
dec
scas
sbb
and
stos
sub
pop
int3
cmp
ljmp
out
sub
or
xchg
outsb
add
or
xor
pop
cmp
push
hlt
or
mov
push
xor
and
js
push
outsb
add
mov
cs
inc
and
iret
jmp
add
adc
cltd
mov
mov
fwait
pop
sbb
jns
jno
adc
dec
cwtl
stos
jge
sbbb
jnp
andl
jl
hlt
aad
ret
ret
push
push
sbb
add
insb
jecxz
and
imul
pushl
es
je
mov
lods
lods
repz
dec
mov
add
sub
jns
popa
stos
add
push
pop
pop
ljmp
iret
rorl
adc
pop
cmp
fcoms
adc
cli
int3
arpl
repz
fcomi
sbb
test
shufps
adcb
push
pop
mov
xchg
jl
mov
push
dec
ds
cli
into
xchg
or
in
or
sti
sti
push
dec
sub
hlt
data16
sub
js
pop
or
adc
lcall
jnp
inc
mov
jbe
add
mulb
jp
rcl
out
push
xor
sar
or
ret
jo
rolb
push
cs
das
add
lods
mov
aam
push
push
loop
lret
xchg
push
ljmp
call
jle
push
pop
sahf
test
pop
hlt
pushf
and
push
add
into
movsl
js
in
jne
loop
push
push
or
mov
popa
pop
rolb
add
cmc
inc
repz
rcrl
test
dec
xchg
pop
fldt
mov
ret
out
gs
pop
jg
sub
cmpsb
dec
mov
inc
mov
mov
inc
xlat
repz
mov
pop
add
in
cmp
in
cmpsb
push
jecxz
mov
fidivs
mov
add
or
mov
imull
movsb
push
sub
inc
or
inc
fisubrl
test
mov
movsl
inc
adc
push
ds
fs
andl
ret
inc
aam
outsl
adc
repz
push
sub
and
std
push
jle
int3
and
nop
sti
and
xor
pop
ret
out
inc
std
clc
lods
sbb
mov
xor
lcall
dec
inc
mov
arpl
sahf
imul
subl
ficompl
add
mov
pop
lret
jno
pushf
mov
dec
and
mov
sti
push
cltd
xor
lret
or
mov
and
cs
lods
shlb
xchg
jle
outsb
adc
mov
sbb
addl
cwtl
scas
and
cmp
inc
inc
nop
lahf
mull
inc
add
jbe
loopne
mov
notb
sti
mov
lds
add
aaa
sub
int3
orl
push
test
lcall
jge
stos
xchg
and
dec
loop
xchg
ljmp
push
cwtl
or
test
and
scas
push
mov
daa
add
adc
or
les
or
int3
mov
xchg
aad
fmull
fs
push
stos
cmpsl
mov
inc
stc
repnz
dec
aas
sub
das
pop
stos
leave
add
popf
xor
pushw
sub
sbb
xchg
outsl
pop
xor
pop
mov
jge
scas
lock
addl
or
ds
imul
test
in
inc
dec
dec
or
in
sub
add
jl
sbb
lret
popa
je
xchg
adc
call
and
jmp
ret
mov
cmpsb
jmp
xor
jo
subb
lea
fidivs
in
jne
lea
xchg
xchg
dec
repz
in
push
xor
mov
aad
sub
jge
pop
cmp
mov
mov
fmulp
gs
movsb
pop
mov
in
test
rol
scas
imul
fisttpll
mov
sub
xchg
mov
enter
mov
adc
call
xchg
bound
adc
lret
pop
scas
pop
jge
in
lods
xor
sub
jp
stc
je
adc
sbb
pop
jmp
mov
push
adc
or
cmp
sbb
gs
adc
or
mov
mov
repnz
cmp
cltd
mov
insb
mov
scas
out
dec
or
add
mov
add
stos
mov
in
clc
mov
fsubrs
xlat
in
outsb
in
fwait
imul
aas
dec
xlat
and
add
outsl
mov
dec
fbld
je
iret
lcall
sbb
push
jp
lds
push
dec
popa
in
sbb
ficoml
arpl
mov
enter
int3
adc
mov
stos
adc
mov
sbb
xor
mov
rcll
sahf
xor
movsb
testl
push
cwtl
xchg
imul
jno
xchg
mov
push
movsl
xor
cmpsb
addr16
ljmp
xchg
or
mov
movsl
cmp
cmc
sbb
mov
imul
adc
push
adc
dec
fmull
fidivs
in
pop
dec
loope
cld
xchg
lcall
cs
icebp
push
mov
scas
jae
iret
sbb
adc
xor
jge
xor
ret
movb
pop
leave
shll
mov
add
mov
jo
cmpsb
xlat
cwtl
clc
test
je
stos
jns
fucom
sbb
ret
xchg
or
js
inc
sbb
push
pusha
int
sub
sbbb
ret
pop
sbb
mov
ret
xchg
push
adc
in
imul
aad
in
mov
add
cmp
cmp
inc
stos
jnp
inc
popf
scas
popf
rolb
imul
mov
push
sbb
xlat
mov
fstpl
sub
xchg
add
dec
and
aad
aas
push
iret
dec
xlat
das
add
sbb
adc
out
pop
addr16
dec
add
leave
sbb
es
xchg
fiadds
shl
push
bndstx
sub
test
cmpsl
mov
fldcw
and
mov
ss
cmp
dec
pop
mov
std
add
outsl
push
imull
insb
jmp
jo
repnz
out
mov
stos
push
loopne
or
push
cmpsb
cmpsl
lea
nop
mov
loopne
es
pop
adc
aas
push
lahf
iret
sarw
ljmp
lds
inc
decb
mov
sahf
hlt
sub
cmp
fnstenv
push
and
orb
xor
push
xchg
xor
in
or
sbb
dec
or
sti
hlt
mov
sbb
outsl
mov
sub
pop
rorl
notl
cmp
out
aas
cmp
fucom
fdivrs
mov
pop
or
fildl
ljmp
mov
je
sub
rorb
loop,pn
pusha
in
jae
push
push
or
add
pop
xchg
pop
insb
mov
sahf
xor
aas
and
test
or
test
popa
xor
outsb
xor
stc
push
mov
in
or
into
dec
dec
mov
lds
loope
jmp
out
daa
popf
xor
cli
fadd
rcl
mov
push
xchg
clc
jns
fidivs
pop
xor
inc
sti
std
loopne
arpl
jns
mov
outsb
mov
mov
dec
mov
or
insl
or
xchg
sub
pop
xchg
daa
mov
imul
push
fstps
decl
stos
mov
mov
xor
loopne,pt
ss
mov
sub
es
xchg
jle
dec
in
push
out
jl
xor
xchg
inc
divb
push
call
inc
mov
test
push
pop
inc
in
jl
les
xlat
outsb
mov
pop
idivb
pop
jge
rol
les
mov
repnz
sbb
jp
arpl
js
or
mov
cli
xchg
cs
jge
repnz
popf
leave
test
push
leave
sbb
add
dec
in
inc
lock
imul
jge
loopne
mov
fildl
out
pop
sbb
adc
lcall
push
or
test
push
adc
mov
repz
fnstcw
or
nop
push
push
xor
lcall
adc
lock
stc
test
xor
mov
fists
push
pop
inc
fisttpl
loope
lret
stc
push
loopne
add
pop
mov
pop
mov
sbb
jns
call
in
xor
adc
ja
sti
js
mov
fists
jp
xchg
mov
hlt
scas
fldl
movsl
push
sarl
insl
lcall
test
int3
sbb
pop
scas
das
cmp
jg
sbb
jge
cltd
push
jmp
sarl
mov
aad
pusha
ss
push
mov
movsl
cltd
xchg
push
mov
ljmp
jb
imul
mov
aas
sbb
aaa
loope
push
out
mov
icebp
ret
cmp
ja
dec
aas
xchg
adc
push
lods
mov
pop
std
cld
shrl
dec
arpl
pop
cltd
inc
push
xchg
xchg
xchg
jl
lret
mov
sub
popf
ret
mov
movsl
push
fiaddl
cs
jns
ret
push
out
dec
pop
inc
push
xor
mov
or
lock
mov
xor
sti
out
add
pusha
sub
shl
insl
sub
pop
push
cmpsb
jmp
hlt
sbb
fnstenv
mov
negl
jge
out
pop
popf
jge
cli
adc
in
int3
fidivl
popf
inc
cltd
pop
adc
je
les
mov
imull
push
xchg
or
inc
add
cltd
xor
loope
mov
dec
sbb
movsl
ljmp
out
push
leave
cmp
fsubrp
inc
test
push
aam
notb
lds
imul
sbbl
mov
lret
mov
test
in
std
imul
nop
cli
inc
ffree
adc
fildl
xchg
lret
xor
lret
and
fsubr
push
dec
dec
pop
inc
cwtl
sub
leave
cmc
data16
popa
dec
add
nop
and
dec
fnsave
imul
adc
pop
out
movd
das
xchg
adc
outsb
out
das
imul
fldenv
fs
xchg
mov
mov
into
cltd
scas
aas
push
sub
jb
add
or
xor
xchg
aam
mov
cwtl
outsl
fdivl
lea
out
test
mov
int3
in
xchg
add
mov
scas
sbbb
adc
lret
inc
popa
mov
shrb
sbb
dec
mov
lods
cmpsb
push
jae
je
mov
adc
jp
out
test
mov
loopne
mov
sub
dec
sub
ret
pop
jo
add
mov
sub
mov
out
ficompl
hlt
mov
jne
ss
je
aas
shll
and
xchg
data16
cs
adc
mov
inc
loop
cwtl
lock
lea
jmp
out
add
inc
scas
adc
gs
shl
mov
fisttpl
dec
idiv
jmp
and
test
call
sbb
push
sub
mov
xchg
lods
cmc
and
sub
ds
dec
mov
ds
pop
sbb
mov
js
mov
and
stos
or
fdivrs
and
add
or
pop
fs
sbb
andb
or
jae
jb
pop
aam
push
movsl
fcomps
jnp
jnp
popa
mov
repnz
sbb
or
push
jmp
lds
mov
mov
jns
mov
insb
add
sbb
cwtl
mov
push
in
jnp
add
mov
xchg
idivl
mov
icebp
cmp
and
mov
jns
sbb
mov
fnstenv
jae
in
fs
adc
ss
into
sbb
pop
repz
sub
cmp
add
rcrl
mov
jg
loopne
and
mov
fsubr
vmaxss
mov
push
fcoms
pop
lret
or
mov
pop
mov
jne
push
addr16
jb
cltd
scas
cwtl
das
and
call
test
cmp
rcrl
cmpsl
jne,pt
push
in
lods
ret
mov
loop
or
lcall
ds
xchg
mov
pop
sti
loopne
pop
shlb
or
xchg
dec
insl
add
nop
cmp
add
ljmp
dec
es
add
pop
cmc
iret
sbb
popa
lea
in
jne
cmp
stos
inc
decb
int3
pop
inc
fcomp
sub
push
fs
sub
xchg
xchg
cmpsb
cld
and
or
sarb
sbb
mov
xchg
dec
sub
daa
fisttpll
lds
mov
aas
es
inc
aaa
sahf
dec
dec
mov
testl
stc
popa
adc
dec
xchg
inc
faddl
sub
inc
adc
aaa
jo
scas
adc
jo
mov
clc
daa
aas
mov
stos
addl
add
cmpsb
jne
sub
mov
jno
sahf
call
jecxz
and
mov
jmp
pop
sahf
mov
pop
cmc
inc
insb
mov
pop
fsub
jns
mov
aaa
inc
fs
xor
cli
add
mov
add
push
jge
mov
mov
ja
mov
jo
jb
sbb
das
jne
incb
pushf
sub
xchg
sub
std
aas
out
loope,pn
mov
jp
sahf
imul
arpl
call
mov
clc
xlat
outsb
ljmp
pop
mov
jl
movd
and
jmp
xor
mov
rcrb
mov
pop
and
and
sub
lock
or
mov
push
pusha
inc
pop
sarl
aaa
stos
push
mov
pop
and
jbe
lret
mov
push
lret
cmp
lods
lcall
or
mov
xchg
jecxz
inc
adc
testb
push
adc
pop
int3
cmc
arpl
jge
and
xchg
mov
daa
mov
shlb
mov
jns
push
cmpb
test
repnz
lret
mov
frstor
add
and
js
mov
stos
xchg
add
fwait
xor
add
es
jo
test
inc
cli
cmpsl
mov
mov
les
mov
cmp
mov
and
push
xchg
push
add
xchg
cld
mov
test
inc
and
adc
mov
popa
popl
adc
pop
push
mov
test
dec
jo
lret
mov
mov
leave
jge
movsb
mulb
jb
into
fs
push
imul
fcmovnu
mov
fcomip
les
pusha
jne
pop
adc
pop
call
fistpll
xor
pushf
xor
aas
adcb
mov
cmp
stos
push
cmp
faddl
popa
hlt
imul
in
pop
xchg
sub
and
and
sbb
dec
call
push
pusha
cmp
sub
fbstp
adc
out
xlat
ljmp
push
sub
xlat
dec
pop
and
inc
loopne
loope
inc
pop
sahf
inc
sub
js
add
adc
aaa
cs
or
mov
rcrb
jp
xor
nop
out
push
pop
sub
ret
push
je
cmp
out
dec
lds
hlt
inc
xchg
loope
negb
pop
pop
adc
aam
mov
inc
fidivl
adc
mov
adc
xchg
outsl
iret
mov
shr
pop
and
xor
jl
and
scas
mov
xor
pop
push
iret
loop
xchg
pop
cmc
lds
jl
clc
test
cli
xchg
mov
les
adcb
xchg
dec
clc
fs
repnz
sbb
pop
dec
bound
lea
js
scas
mov
jle
cmpsb
cmpsl
ds
sti
push
leave
stc
cmc
adc
in
repz
mov
mov
cmc
mov
mov
sbb
adc
movsb
cmp
mov
adc
repz
lods
and
push
push
add
and
loop
fcoms
mov
pusha
insl
xor
jmp
lret
adc
rclb
lcall
fldt
push
pop
inc
cmpsb
mov
enter
out
mov
push
scas
push
lea
data16
aam
cmp
outsb
out
adc
in
mov
aaa
mov
fimull
or
out
jae
jmp
inc
dec
mov
jne
lods
jg
aaa
addr16
addr16
loop
ljmp
mov
incl
fstp
cmpsb
jne
lods
in
and
mov
lret
jns
add
or
loope
popf
loope
jmp
out
xchg
lods
jge
ja
leave
mov
xchg
and
cmp
inc
inc
sbb
jmp
sbb
mov
lcall
add
mov
dec
cmp
jle
shrb
pop
sarl
fdivs
pop
cmp
scas
sub
cli
pop
push
or
xchg
mov
roll
push
sbb
sub
fstpl
mov
and
scas
mov
jb
xchg
lds
jp
cmp
push
pop
popw
mov
das
add
std
push
loope
sbb
xchg
or
pushf
outsl
add
stos
add
push
sbb
insb
hlt
loop
pop
adc
pusha
adc
cmp
stos
jle
loop
mov
ret
repz
xchg
adc
mov
ljmp
push
out
adc
xchg
cwtl
jecxz
shlb
and
xor
loopne
cmpsb
mov
sub
cwtl
lret
sub
xor
dec
lcall
loope
das
cmpsl
cmp
jb
enter
outsl
and
xor
jne
push
pop
cli
movsl
add
lds
call
cld
nop
xchg
xchg
or
lahf
iret
pop
adc
xor
int3
arpl
test
mov
bnd
sbb
in
xchg
jae
rorb
movsb
push
mov
mov
xor
scas
mov
cmp
int3
in
mov
or
insl
sbb
out
test
cli
or
frstor
mov
xchg
push
sbbb
lahf
mov
dec
dec
mov
mov
mov
fwait
ret
gs
test
scas
add
sbb
imul
add
adc
test
inc
shl
fbld
mov
xor
bound
fnstenv
cmpsl
insl
movsb
mov
addb
test
dec
cs
pop
pop
outsl
loop
cmc
push
add
or
mov
icebp
push
or
jne
add
pop
loopne
inc
dec
imul
push
jle
ret
inc
mov
pop
mov
mov
sti
call
and
outsl
mov
or
sub
or
sarb
mov
lcall
push
ss
lods
pop
movsb
jnp
sbb
std
xchg
sahf
test
out
std
xchg
mov
lcall
in
les
mov
inc
add
and
pushf
aaa
cmc
aaa
iret
cli
xor
repz
sbb
shrl
mov
or
lock
cmp
movsl
hlt
mov
mov
mov
imul
and
ljmp
testb
je
jge
pop
loope
and
jl
push
pop
out
dec
aas
jne
mov
inc
push
and
and
add
add
xchg
dec
jb
out
call
ret
aam
cmpsl
pop
scas
fsts
jo
pop
mov
enter
xlat
or
sub
mov
jge
sub
mov
cmpsb
xor
aad
xor
test
mov
inc
hlt
stc
pop
jno
fsubs
pop
or
shll
jge
out
divb
or
aas
pop
ja
lret
pop
xchg
dec
xor
mov
fidivl
mov
mov
clc
inc
dec
sub
cmp
les
sbb
sub
sbbb
lods
mov
je
push
mov
loop
jns
mov
jns
pop
insb
bound
cmp
lds
mov
sub
mov
js
mov
mov
jmp
cs
sbb
dec
add
testb
ficoms
fadd
cmp
cld
xchg
adc
sbbb
hlt
add
pop
sub
mov
adcl
cwtl
cmp
cmpl
pop
lea
jbe
neg
xchg
andl
xchg
jl
cwtl
int3
insb
cltd
pop
cld
and
mov
lret
shlb
gs
mov
pop
inc
popa
mov
cmp
dec
in
decb
sub
mov
push
mov
lahf
or
add
shrb
aaa
jne
insl
ret
je
cwtl
fwait
test
inc
stc
push
insl
lods
add
dec
mov
adc
pushf
sbb
popa
divl
cmp
in
sub
ja
sahf
ret
pop
fidivrl
mov
cmpsb
inc
lret
pushf
add
jecxz
push
stc
adc
jecxz
push
lret
outsb
mov
push
pop
ret
repnz
cs
iret
mov
add
out
out
sti
dec
loop
xchg
ss
mov
pushl
enter
sub
mov
ret
pop
mov
dec
leave
test
lea
jl
xlat
scas
in
test
fsub
add
or
pushf
mov
sarb
inc
push
insl
pop
data16
push
adc
jmp
lock
sub
mov
insl
xchg
cmp
mov
mov
and
psadbw
rolb
lahf
imul
xor
xlat
repz
jae
movsl
jnp
adc
xor
pop
clc
or
test
stos
add
dec
pop
adc
movsl
inc
push
repnz
jb
cmpsb
pop
sahf
dec
add
ror
mov
pop
jbe
mov
movsb
cmp
jge
add
mov
loop
cmp
pop
lret
data16
movsb
mov
ja
mov
pop
nop
mov
fcoms
or
sub
gs
or
jb
jbe
std
dec
roll
fisubs
rcrb
js
mov
xchg
inc
cmp
mov
pop
mov
add
pop
push
push
iret
pop
add
jb
outsl
jle
lcall
movsb
dec
enter
lods
adcb
lret
inc
in
aaa
and
stos
fidivrl
mov
inc
xor
insl
inc
fcompl
nop
fidivrs
imul
mov
mov
stos
inc
sti
pop
js
movsb
sti
sbbb
push
cs
cmpsl
dec
jmp
daa
or
insb
or
mov
add
sbb
push
or
mov
movsl
sbb
push
ret
pop
test
popa
clc
hlt
add
push
mov
notl
mov
pop
sbb
shr
loope
addr16
data16
aad
arpl
push
popf
sbb
daa
ds
sar
cmp
subl
pusha
mov
and
dec
or
loope
ds
cmp
rcrb
cmp
push
out
push
jne
addr16
xorl
xor
hlt
mov
pop
mov
cmp
sub
cmp
sahf
movb
imul
mov
cmpsl
xchg
sub
sbb
cwtl
aad
pop
mov
xchg
adc
fsubrp
cmp
push
cmp
xchg
pusha
dec
mov
repz
adc
adc
nop
addr16
shll
sub
push
mov
negl
mov
sub
imul
arpl
push
or
lret
pop
sbbl
xchg
sti
ret
outsl
dec
fisttps
or
in
and
ret
xchg
jl
jmp
fs
inc
movsl
ret
mov
mov
gs
mov
cwtl
fwait
inc
gs
out
pop
jmp
mov
inc
pop
mov
mov
add
xchg
jns
jl
or
adc
inc
or
xchg
mov
inc
ss
push
or
ljmp
inc
push
in
loope
xchg
sub
jno
or
mov
les
std
dec
push
rcll
aam
mov
dec
xchg
ljmp
add
cmpsl
dec
idivb
cmpsl
ds
jno
test
iret
mov
scas
inc
inc
pusha
scas
call
pop
cmp
sbb
in
std
adc
mov
lods
inc
out
sub
or
push
ss
xor
push
mov
mov
jge
and
xor
sbb
inc
xor
les
aam
inc
sahf
imul
loop
and
mov
xchg
outsb
sub
adc
shl
dec
inc
cmpb
cltd
xchg
add
jne
or
push
mov
dec
xchg
xor
mov
nop
cmp
scas
dec
mov
lea
or
adc
movsl
or
mov
outsl
push
or
ret
popf
fldl
addr16
lret
pop
sbb
xchg
sub
and
jle
ja
and
mov
ja
orb
mov
push
jl
sub
sub
ret
je
xchg
sub
and
jp
lods
push
cltd
pop
jbe
add
cmpsb
push
aad
pop
push
gs
lds
pop
mov
shlb
cs
jo
iret
scas
xchg
test
int3
xchg
gs
sbbb
ficompl
dec
pop
testb
xchg
flds
mov
in
in
jecxz
lods
mov
fisttpl
loopne
and
xchg
sub
imul
loope
loopne
or
repz
or
fwait
popa
inc
ror
in
inc
stos
shll
adcb
adc
jbe
nop
push
dec
sbb
mov
inc
cltd
xchg
in
cmp
xchg
clc
fsubrl
xor
push
incl
cli
scas
mov
push
mov
xchg
dec
iret
aam
add
inc
push
xor
jecxz
add
scas
xor
dec
jb
mov
inc
xchg
sbb
dec
cmpsl
dec
movsl
int
mov
jecxz
mov
jge
xchg
icebp
loope
inc
popa
xchg
mov
int
inc
rorb
push
sub
bound
sbb
dec
xor
cmpb
jecxz
aas
fdivp
pop
xor
add
mov
imul
xor
outsl
scas
inc
mov
testb
push
mov
and
sbb
mov
mov
push
jns
jg
sub
pop
xchg
dec
icebp
rclb
ljmp
push
movsl
add
dec
inc
jp
lods
loope
popf
push
gs
js
ds
pop
cltd
aad
or
sub
cmp
pop
jecxz
push
loopne
and
imul
test
arpl
xchg
adc
cltd
or
mov
loopne
add
sbb
test
dec
cs
jecxz
lods
pop
xchg
or
mov
data16
arpl
jns
xchg
push
jne
dec
pop
jne
cmpsb
mov
mov
xorl
jmp
inc
push
sbb
adc
jno
jle
fisttpll
and
fmull
in
fsubrl
repz
and
dec
rorl
pop
sti
xor
mov
scas
push
daa
dec
lea
lret
lock
push
adc
pop
xor
pusha
jnp
inc
imul
xchg
test
add
adc
jbe
mov
call
mov
push
data16
dec
arpl
mov
dec
cmp
test
loopne
loop
pop
adc
addr16
jnp
lds
inc
iret
add
outsl
int
in
into
jae
in
sbb
inc
and
cwtl
and
aas
mov
out
mov
repz
outsl
stos
movsb
sbb
in
mov
cmp
add
loopne
or
dec
stos
cwtl
insb
dec
push
fidivrl
mov
rorl
scas
adc
add
lret
add
push
lods
sub
icebp
sub
pushf
loop
mov
addr16
pop
sbb
pop
leave
sub
lods
test
ret
movsl
xor
push
mov
push
in
inc
out
bound
xchg
fldl
mov
cmpsl
jne
aam
inc
data16
mov
outsb
push
jecxz
or
leave
cmpsb
aam
shl
ret
dec
jge
xor
dec
aam
addr16
xchg
loope
or
imul
outsl
cmp
sahf
mov
movsl
lock
pop
cmpsl
mov
repnz
push
imul
fyl2x
aad
es
add
cmp
rcll
mov
xor
popf
mov
enter
dec
in
loopne
inc
jecxz
insb
rcll
push
call
loope
mov
cli
faddl
mov
inc
push
cwtl
sbb
aad
push
pop
ljmp
push
in
dec
imul
popf
mov
shlb
cltd
lods
bound
js
je
inc
gs
mov
int3
and
dec
lods
sub
xchg
add
insb
inc
xlat
jno
sub
daa
inc
std
xchg
arpl
mov
pop
or
inc
push
xchg
xchg
and
movsl
sbb
push
cmpsb
mov
lahf
push
or
ret
jb
fwait
cmpsl
sub
jcxz
cs
popa
mov
jp
mov
enter
mov
sahf
jge
and
xor
jnp
sbb
jecxz
jns
pop
lods
lea
mov
clc
mov
fldenv
push
mov
btr
jns
mov
ret
shl
mov
stos
fisubs
mov
sti
mov
cld
xor
mov
outsl
loop
adcl
test
orb
mov
in
lea
push
leave
sbb
dec
fcomi
dec
cmc
mov
in
ficoms
mov
pop
mov
dec
xchg
jns
bound
add
int3
das
jo
add
cmpsb
rorb
mov
testb
aad
cwtl
cmp
test
mov
ret
dec
mov
test
xchg
add
sub
jo
aaa
mov
ljmpw
test
test
push
mov
int3
and
faddl
jae
int
fst
mov
inc
in
je
sub
popa
push
outsb
lret
lcall
adc
dec
add
mov
xor
jg
jo
lock
inc
inc
xor
xchg
xchg
pusha
add
daa
jnp
add
fmulp
ja
jg
mov
fmull
push
decb
cwtl
out
mov
imul
push
and
mov
cld
dec
sub
or
in
test
outsb
outsb
sub
pop
and
bound
mov
int3
test
push
in
xchg
inc
fdivs
adc
xor
insb
scas
xor
dec
mov
inc
out
imul
arpl
adc
push
dec
and
sbb
and
dec
test
sub
jns
inc
dec
push
fstpt
bound
jmp
or
clc
add
movsb
idivl
and
subb
add
sub
fstpl
lcall
xor
inc
out
adc
xchg
inc
dec
mov
jnp
idivb
dec
test
or
cmp
jb
sbb
stc
mov
in
jne
fwait
push
xchg
aaa
inc
mov
test
mov
xor
xchg
mov
sarb
inc
ficompl
push
loope
pop
push
cmp
push
push
daa
popa
mov
add
pop
mov
data16
xchg
shlb
outsb
cmp
mov
int
push
mov
push
xor
sub
cmp
mov
dec
movl
cs
add
sbb
in
imul
mov
push
jge
pop
jbe
mov
into
mov
cs
dec
dec
jmp
imul
push
in
mul
add
or
mov
movsb
inc
sub
push
xchg
jp
mov
push
les
nop
rolb
test
mov
mov
call
daa
scas
hlt
and
sbb
mov
ret
pop
inc
mov
stos
cld
aad
sbb
inc
pop
nop
or
mov
inc
or
outsl
mov
lds
mov
jp
cmp
aad
jmp
mov
loop
xchg
test
movsl
addr16
in
shld
cli
lret
stos
pop
mov
aad
stos
jne
jae
in
enter
outsb
test
stc
mov
ljmp
insb
add
dec
jecxz
push
xchg
popf
aas
push
icebp
pop
mov
call
cmp
pop
xor
test
and
cmpsb
add
adc
mov
push
mov
cltd
mov
sbb
push
and
aam
jecxz
arpl
fisubl
lods
das
fwait
xlat
cmpsl
lds
aas
mov
lret
out
mov
push
jmp
mov
jo
cmp
pop
jo
rorl
push
pop
pop
mov
lock
cli
test
mov
sbb
lahf
divb
decb
out
enter
ljmp
mov
jmp
scas
fcompl
add
test
dec
insb
test
outsl
cmc
adc
mov
inc
inc
movsb
int3
xchg
popa
jb
jno
iret
mov
ja
cmpsb
ret
mov
jecxz
imul
jl
push
sub
sub
gs
xchg
push
mov
push
jno
mov
and
pop
cltd
add
xor
or
cmp
inc
outsb
repz
ja
dec
pop
or
out
imul
loope
mov
mov
or
inc
push
push
mov
subb
xor
xchg
icebp
pop
int3
sahf
adc
sub
mov
jae
jg
fists
sbb
xlat
xchg
ss
mov
cmp
lahf
add
shr
and
sbb
test
movups
push
fldenv
cmpsl
fsubs
add
mov
pop
mov
lahf
je
mov
push
jae
adc
adc
into
int3
jnp
mov
repz
mov
loopne
mov
pop
add
test
lret
loopne
shl
jne
dec
repz
xchg
in
sub
cmp
es
add
jae
sbbl
mov
les
mov
out
loop
into
or
mov
xchg
cs
lahf
xchg
xor
jg
test
fimull
or
rorl
ret
cmpsb
and
fbstp
inc
sub
shrb
int
ret
incb
inc
enter
pop
push
push
cli
mov
push
nop
push
jp
and
mov
lret
stc
leave
adc
jns
xchg
push
ret
push
repz
dec
shll
adc
cmp
in
subl
les
aad
or
arpl
jae
and
xchg
ret
add
jmp
in
xchg
cli
lret
xlat
sbb
in
fwait
push
mov
in
xor
cmp
push
nop
adc
mov
or
cltd
addr16
and
inc
adc
push
push
sub
es
std
rclb
and
push
test
sbb
nop
aad
cli
mov
rorb
xor
add
repnz
insl
jge
jl
cmpsl
test
push
ds
je
cmp
scas
icebp
into
add
icebp
shlb
add
shrb
daa
cli
push
bound
fnsave
flds
cmp
jle
imul
adc
inc
int3
cltd
and
movsb
inc
call
add
adc
lret
jg
adc
loop
in
push
mov
frstpm(287
mov
mov
fwait
jle
mov
rcrl
add
and
scas
inc
test
xchg
push
and
xlat
insl
ds
lret
in
hlt
mov
cmp
sub
loopne
jle
mov
push
xor
xchg
sub
jl
lret
jb
in
add
xchg
push
mov
shr
jo
fsts
sarl
mov
mov
sbb
fcomps
jg
fisttps
jnp
adc
and
sahf
mov
push
roll
insb
fnstenv
mov
gs
pop
test
jne
ss
pusha
inc
jg,pn
ss
xchg
out
jne
les
pop
testl
daa
ror
incb
xor
pop
stos
roll
push
hlt
in
push
xor
cmpsl
fstpt
xchg
out
mov
mov
mov
int3
xor
js
lea
mov
sahf
sub
cmp
popf
inc
pushf
mov
push
and
rcl
ja
pop
int3
mov
jle
cs
ret
add
aad
xchg
movsb
sbb
fsts
ljmp
rorb
or
orb
xchg
insb
iret
xchg
lock
xchg
dec
scas
push
mov
xor
int3
add
es
test
fincstp
cmpsb
outsb
loope
pushf
pop
mov
gs
mov
sahf
jle
mov
or
mov
xchg
cld
and
xor
xor
out
xchg
repnz
add
sub
mov
out
xor
mov
imul
fiaddl
stc
push
mov
scas
testl
hlt
lret
and
mov
mov
mov
bound
sbb
sbb
mov
lods
add
or
mov
mov
cmp
outsb
mov
mov
bound
shrl
das
clc
and
ficompl
pop
aaa
xchg
in
jg
push
fidivs
ret
stc
mov
ret
xor
mov
cli
movsb
cmp
adc
add
in
xchg
add
aad
cmp
pop
leave
movsb
mov
pop
mov
xchg
mov
pop
in
inc
sub
pop
and
inc
sahf
xor
and
mov
xor
stos
or
test
sbb
jbe
leave
cmp
in
insl
pop
bnd
xchg
sbb
jp
cmp
push
cltd
mov
or
dec
pop
in
into
ljmp
lock
int3
dec
adc
and
sub
aaa
sahf
fisubs
inc
push
xor
in
cmp
cmp
pusha
testb
lods
adc
pop
cltd
jp
fdivl
sbb
mov
out
sbb
ret
sti
push
in
insl
pop
cltd
enter
mov
dec
pop
add
xor
aad
lea
and
and
dec
outsl
lods
and
out
lret
std
xchg
sub
shrl
mov
push
in
in
les
sbb
insb
add
jg
cmp
adc
adc
pop
dec
popa
xchg
mov
or
pop
mov
cmp
push
roll
por
mov
es
pop
shrb
mov
inc
sbb
shlb
sub
inc
scas
xor
push
out
pop
pop
or
jno
rcl
mov
jno
xor
movsb
mov
add
sbb
pop
nop
inc
orb
ljmp
jmp
mov
jp
outsl
mov
dec
test
ret
add
xchg
sbb
mov
mov
jp
mov
inc
fldl
int3
xchg
sub
scas
mov
loope
cmc
mov
into
sbbl
cli
gs
sbb
lret
xchg
adc
mov
fisttpl
pushf
jb
sbb
mov
jne
lret
mov
push
push
mov
mov
xchg
adc
clc
pop
fdivl
std
testl
pop
rcrl
push
notl
imul
xor
test
xchg
sbb
lea
add
cmp
and
stos
or
dec
in
dec
movsl
ljmp
es
sub
lea
inc
push
cli
mov
roll
inc
pushf
lcall
inc
inc
fimuls
cmp
in
fisubl
pop
xchg
in
push
in
xor
mov
or
pop
cmp
stos
stc
jo
push
cltd
xor
lret
or
sbb
les
or
into
mov
sbb
dec
out
push
adcl
or
lods
jbe
inc
leave
inc
mov
dec
mov
and
cli
jmp
mov
xor
xor
jge
cmpsb
sub
dec
insl
cmc
jnp
lea
pop
sbb
clc
xchg
jne
mov
loope
les
jno
adc
adc
or
fs
mov
xor
stos
dec
fbstp
bnd
dec
push
data16
daa
add
ret
popa
jbe
push
pop
and
aaa
jae
pusha
inc
inc
sbb
sbb
dec
dec
decl
dec
cmp
sbbl
mov
jnp
mov
jp
jo
cmpb
leave
mov
pop
lock
dec
icebp
pop
testl
lds
cltd
sbb
adc
jnp
ss
in
decl
dec
pop
pop
pop
nop
push
js
lahf
es
pop
popa
fmull
std
push
inc
cmp
popf
xchg
sti
xchg
rorl
out
mov
addr16
movsl
sbb
push
xchg
scas
fadds
sub
add
int3
test
mov
je
mov
xchg
and
push
xchg
inc
sbb
mov
sti
jno
sub
orb
add
mov
shll
imul
cmp
xor
aas
xchg
dec
in
in
push
push
push
ds
mov
pop
mov
fldt
sub
and
push
frstor
mov
jae
mov
filds
xor
or
mov
fcoml
scas
or
jp
or
mov
inc
popf
jne
xchg
mov
dec
testl
push
lds
and
outsl
stc
nop
mov
subb
cmp
test
mov
jo
jne
das
mov
insl
sub
outsl
xor
xchg
subb
mov
das
inc
cltd
jle
lret
gs
jge
inc
leave
pop
daa
cmp
fs
cmp
imul
ljmp
loope
ficoml
or
insb
sub
mov
stc
and
cmp
mov
mov
popf
out
std
xor
dec
mov
or
hlt
push
pop
fdivrl
pop
addb
sub
lcall
rorb
push
movsb
mov
adc
std
mov
push
sbb
add
testb
mov
or
dec
xchg
inc
dec
push
lahf
scas
addl
sub
in
movsl
inc
dec
aam
arpl
jnp
clc
test
stos
sub
push
add
dec
dec
jle
out
xor
daa
or
cmp
aad
dec
mov
mov
sbb
ret
or
repnz
or
gs
push
call
mov
pop
ret
cmp
fcomp
dec
inc
mov
mov
pop
lret
es
sarb
mov
inc
inc
mov
xor
sub
pop
loop
xor
jge
fidivrl
sub
sbb
inc
xchg
fdivrl
in
xor
or
jge
aad
fs
xchg
mov
xchg
mov
push
sub
test
es
mov
sbb
dec
in
rcrl
jle
ljmp
xor
sub
adc
outsl
sbb
inc
outsl
daa
inc
pushf
fstl
call
ljmp
xchg
mov
in
test
imul
fidivrl
sub
xor
call
gs
push
std
aas
adc
sub
popf
push
into
mov
push
sbb
test
pop
jge
cltd
sub
sahf
cmp
add
jmp
ficoml
loope
dec
dec
pop
mov
fsub
sbb
rorb
jle
jl
popf
mov
jns
xor
mov
cwtl
out
sub
pop
xor
cld
pop
inc
mov
faddp
sti
mov
mov
test
and
enter
or
mov
jge
outsb
test
push
cmp
dec
imul
addl
and
xchg
lret
leave
mov
fildl
loopne
hlt
or
sbb
movsb
pop
or
inc
fistpl
filds
mov
jp
enter
dec
mov
icebp
jle
push
push
popa
mov
push
push
xor
out
pop
adc
arpl
cmp
push
fdivl
lret
jle
xchg
nop
mov
hlt
inc
int3
scas
jecxz
sarb
outsl
jnp
in
cs
popa
xchg
repz
mov
lock
add
add
insl
sub
loop
sar
pop
hlt
sub
xchg
add
jnp
inc
mov
jmp
sub
jmp
movsl
mov
mov
in
or
ja
imul
mov
cld
sbbl
lea
stos
xor
movsw
aaa
shll
addr16
cmc
mov
loopne
add
add
dec
add
out
outsb
shr
mov
pusha
jne
push
sub
mov
daa
sti
push
pop
add
or
dec
pop
loope
xchg
push
jo
addr16
ret
pop
daa
and
insb
fadds
pop
mov
cmp
outsb
jnp
into
push
dec
mov
enter
addr16
cmpsl
rorl
mov
nop
adc
shl
mov
scas
lods
jmp
scas
cs
mov
adc
inc
xor
loopne
out
xchg
clc
xchg
lock
ficompl
jb
jmp
lret
fldcw
out
push
sbb
adc
call
sbbl
mov
mov
dec
pop
adc
cmp
stc
ret
ja
push
in
jp
mov
push
bound
std
jecxz
iret
dec
cvtps2pi
xor
jmp
scas
xor
popf
lods
push
push
xor
aam
in
sub
dec
pop
jbe
mov
in
adc
sar
inc
sbb
push
push
lcall
iret
or
xchg
cmp
cmp
xchg
call
and
or
cs
or
es
out
jle
xor
pop
test
inc
bound
cltd
cld
sbb
movsl
lds
inc
outsb
adc
frstor
jmp
xor
push
adc
arpl
jmp
aas
sbb
pop
lret
sub
fwait
mov
and
inc
sbb
incl
lea
xor
stc
pop
in
jbe
push
nop
push
sbb
js
ja
stc
popf
cmp
lcall
cmpsl
es
xor
mov
jg
movsb
mov
mov
into
mov
add
push
push
arpl
xchg
xchg
mov
cmp
or
push
push
popa
cmp
add
pop
jb
int
mov
les
inc
lret
jno
test
jno
and
data16
inc
mov
je
sbb
call
sbb
inc
jae
mov
or
jcxz
test
and
fsubrs
stos
xchg
insb
and
stos
mov
mov
fcomp
pop
in
addb
mov
pop
push
pop
test
pop
movsl
adc
call
and
sub
ljmp
mov
push
sbb
xor
sub
cli
imul
adc
mov
pop
or
or
movb
bound
xchg
fucomp
repnz
sub
mov
push
es
push
mov
add
inc
jae
adc
dec
es
mov
add
add
repnz
push
dec
pop
add
cmpsl
ja
sbb
cli
xchg
pop
and
sbb
cltd
mov
xor
xchg
es
lret
pushf
orb
pop
in
cmp
les
es
push
cmpsl
inc
hlt
or
dec
lea
ret
push
icebp
mov
int
add
add
xchg
sub
es
mov
jle
sti
xchg
shlb
leave
pop
or
lahf
in
sub
push
pop
lret
xchg
xlat
fstps
mov
fwait
int3
xor
jge
pushf
mov
in
or
push
dec
pushf
je
add
mov
ljmp
popf
add
or
jecxz
insl
cltd
or
ljmp
mov
ret
xchg
testb
ss
dec
cmp
or
insl
adc
add
fistpll
inc
shlb
inc
push
cmpsb
icebp
mov
test
or
push
xorps
jnp
call
or
cmp
mov
cmp
lahf
push
jae
fidivl
std
leave
enter
mov
and
xchg
push
xlat
jmp
push
shll
add
cmp
pop
and
dec
cwtl
or
jo
mov
pop
loopne
cwtl
adc
shrb
fidivrs
jp
out
repnz
adc
movsl
push
pop
gs
or
sbbb
mov
mov
ds
faddl
imul
aaa
pop
jp
push
pop
jmp
jle,pn
outsl
sub
sub
xor
scas
dec
dec
dec
ljmp
stc
jae
push
push
sub
sub
inc
lret
lea
adc
scas
dec
push
andl
lret
add
imul
pop
cwtl
cmp
xchg
cld
mov
orb
push
ret
arpl
ret
push
and
or
fiaddl
push
jge
fisttpll
add
outsb
pop
jnp
mov
ja
xor
insl
add
mov
test
lcall
sbb
or
js
adc
sbb
sbb
leave
arpl
cmpsl
in
rcrb
ljmp
pushf
popa
dec
mov
xchg
std
mov
sbb
insb
mov
mov
imul
fdivr
daa
or
mov
int3
pushl
push
jbe
js
std
lock
jp
add
and
cmp
shlb
push
pop
test
sub
jmp
pop
ja
repz
adc
js
push
imul
repnz
lods
jl
subl
inc
fdiv
jb
into
and
xor
out
push
cwtl
fs
pop
cmpsl
shrb
jmp
push
dec
ret
or
mulb
pushf
sbb
jge
inc
xor
mov
inc
mov
add
inc
loope
lahf
or
mov
mov
fnstenv
push
adcb
push
arpl
add
mov
jle
bnd
stos
iret
xchg
xor
mov
data16
xchg
adc
fisttpl
sti
jp
dec
arpl
out
ds
cmp
ret
outsl
pop
das
xchg
pop
pop
inc
mov
mov
nop
daa
ja
pop
cli
outsl
inc
stc
popf
cmc
cwtl
mov
ret
mov
mov
lods
shl
push
inc
inc
pusha
jns
ja
xchg
jle
jle
fdivrl
xchg
sbb
mov
leave
or
testl
fidivl
adc
and
pop
inc
xchg
pop
imul
xchg
insb
jp
cltd
sub
sbb
mov
xchg
sub
add
and
mov
ret
cmc
and
xor
pushf
cli
mov
inc
jecxz
mov
lret
push
jge
xchg
dec
loope
jns
aaa
scas
mov
cs
mov
or
lret
fs
loop
or
out
mov
addb
inc
or
add
xchg
loop
in
popa
mov
scas
outsb
xchg
cs
inc
aam
jne
sub
cli
sahf
ss
test
subb
dec
repnz
sbb
repnz
aam
lcall
sub
loop
xor
xorb
lcall
and
popa
inc
and
scas
inc
out
jb
mov
and
dec
loope
ret
shll
fdivp
nop
std
cmp
hlt
add
cltd
loopne
pop
sub
push
cmp
mov
sub
daa
punpcklwd
fisttpll
xor
jnp
xor
out
sub
pop
shrl
sub
xor
inc
lcall
sbb
out
xchg
lods
add
push
imull
jbe
sbb
imul
dec
lock
xchg
mov
sahf
jb
aam
xchg
and
mov
sar
loop
adc
pop
xor
imul
add
rorb
loope
int
rcr
stos
loopne
push
js
jno
ja
lods
cmpsl
ret
dec
add
push
xor
addr16
cmp
mov
bound
repnz
ja
inc
and
repz
jae
fsubrs
pushf
adc
mov
and
xor
cmpl
out
xor
mov
mov
cmp
sbb
jbe
fucomip
sbb
iret
push
aaa
dec
in
inc
jae
mov
outsb
mov
xchg
xchg
clc
movsb
insl
sahf
test
mov
icebp
adc
loop
stos
jb
cltd
loopne
inc
inc
xor
gs
adc
push
cwtl
xor
xor
bound
and
adc
je
js
imul
xchg
push
mov
loope
mov
pop
sahf
inc
lods
idiv
mov
inc
inc
imul
lcall
mov
mov
mov
sub
dec
push
xchg
xchg
sub
push
fidivl
ds
xchg
sub
leave
mov
jge
and
push
insl
pop
mov
loopne
sbb
sahf
mov
out
adc
xchg
jmp
test
pop
icebp
mov
mov
leave
push
sbb
mov
dec
xchg
xor
ljmp
push
mov
fildll
dec
ficoml
ja
popa
aaa
mov
dec
inc
sbb
iret
cmp
jle
divb
dec
ja
inc
and
dec
mov
jb
xor
push
and
daa
mov
nop
or
mov
rol
jb
pop
scas
out
xchg
fmulp
inc
or
add
push
pop
je
mov
sti
mov
xor
push
and
cmp
dec
push
rcll
cmpsb
sbb
mov
roll
push
dec
js
adc
inc
popf
mov
dec
and
dec
pop
add
divl
divb
mov
push
loop,pt
mov
nop
sub
sub
pop
push
mov
inc
pushf
cli
and
dec
outsl
mov
push
movsb
jmp
clc
scas
pop
nop
je
daa
daa
adcb
dec
int
ficoml
mov
sub
xchg
and
pop
jns
ret
sub
mov
mov
dec
xchg
mov
pop
es
push
cmpl
idiv
xchg
pop
insl
jle
scas
sbb
ljmp
and
popa
push
outsb
stos
dec
in
xchg
test
mov
xchg
cmp
lea
inc
aaa
xchg
cmp
sub
iret
push
stos
inc
mov
test
mov
movsb
cmp
sbb
jne
sub
addr16
rclb
add
pop
fiadds
pop
pop
push
adc
je
movsl
lock
andl
cmp
das
movl
sbb
jbe
cmp
sub
and
cmp
js
mov
popa
stos
adc
in
and
call
test
pop
orl
int3
movsl
and
xor
je
popl
fs
cltd
sub
repnz
pop
movsl
sub
add
inc
mov
fistpl
or
dec
sti
inc
pop
shlb
cmp
fs
es
inc
enter
xchg
cmp
roll
cmp
mov
mov
sbb
aam
mov
jmp
cltd
mov
es
cld
in
cs
pop
outsb
fstpl
push
mov
das
rcrb
cmp
add
jo
or
xchg
sbb
mov
mov
fistpl
and
or
sub
jmp
or
cmp
inc
xor
and
movsb
fnstcw
jmp
imul
lahf
inc
pop
jge
rclb
push
inc
mov
pop
push
aaa
ficoml
push
xchg
popf
xor
in
adc
mov
insb
ss
xchg
jmp
push
repz
push
adc
mov
ret
inc
cmp
roll
mov
mov
sub
xorb
xlat
aaa
mov
jne
adc
jb
test
stc
nop
movsl
cmp
sub
lret
pop
xor
adc
and
dec
jmp
enter
lahf
popa
dec
ds
daa
inc
lea
mov
out
cld
out
sub
pop
ds
sub
mov
jle,pn
pop
repnz
inc
and
jns
or
add
sub
pop
mov
fucomi
insl
leave
xchg
push
or
scas
pusha
mov
inc
push
mov
jecxz
and
xchg
xchg
ja
sub
push
orb
out
jg
xor
ret
dec
cmpsb
das
add
pop
ss
or
inc
sub
fiadds
out
out
adc
imul
push
inc
mov
mov
or
std
xor
push
std
jmp
das
mov
xor
cmp
fisttpll
mov
out
pop
adcl
sub
jbe
test
inc
jnp
arpl
orb
pop
cwtl
das
mov
testl
aam
enter
or
and
pop
aaa
in
in
xor
test
jne
push
push
fwait
aaa
dec
cmp
jne
mov
movsb
loope
fcoms
lods
inc
adc
dec
shll
shl
insl
mov
push
jecxz
loop
sub
xlat
mov
mov
jecxz
inc
test
shrl
jns
shlb
repnz
sbb
lcall
dec
hlt
dec
add
in
lock
mov
cmpsb
cmp
in
push
aaa
mov
add
rcrb
jne
push
mov
lret
clc
mov
cmp
mov
pop
fucompp
scas
cmp
cli
movsb
xchg
xchg
adc
sbb
int
cmp
mov
imul
lock
sbb
jb
in
sahf
mov
mov
es
pop
mov
xor
jmp
xchg
fimuls
lahf
mov
fsubl
dec
sbb
ss
mov
mov
jo
add
fwait
mov
push
lds
push
xchg
movsl
mov
call
test
andb
lret
push
cwtl
outsl
pop
add
xchg
and
xchg
rol
inc
cmp
insb
shlb
push
fbstp
push
add
adc
cmp
and
push
jecxz
leave
out
sbb
mov
ja
add
mov
enter
jmp
aaa
sub
outsb
jns
mov
mov
or
insb
pusha
nop
and
mov
loopne
sub
subb
adc
mov
sub
pop
jge
int3
and
inc
xor
push
pop
or
push
outsb
sub
ret
testb
pop
xor
push
es
adc
and
sub
rcrb
mov
xchg
mov
pushf
movd
jns
inc
scas
std
adc
mov
lds
xchg
push
dec
cmpsl
iret
cmc
and
scas
push
adc
lods
leave
xchg
lahf
inc
xlat
shlb
scas
mov
sar
stos
inc
xchg
ja
stc
pop
mov
pusha
in
in
add
mov
and
cmpsb
mov
int
dec
inc
loopne
or
jmp
pop
sub
in
std
xchg
ret
into
jmp
rcrb
or
jp
cmp
sub
shrl
dec
lods
mov
fildll
stc
pop
stos
mov
lahf
xor
mov
or
lret
ret
fistps
ds
aam
popa
inc
pop
mov
leave
and
dec
jae
xchg
mov
shrl
sbb
mov
dec
ljmp
lret
jb
pop
sbb
push
aas
ret
ljmp
jb
and
xchg
jb
movsb
repnz
outsb
popf
das
pop
stc
inc
push
and
jp
jbe
stos
test
cmp
or
mov
js
cwtl
call
push
rcrl
insb
cmp
sub
sbb
pop
les
dec
push
sbb
push
imul
mov
push
loope
dec
cmpsl
cmp
inc
sub
mov
jge
sub
int
lock
repnz
mov
fdivrl
outsb
fidivl
cmc
aaa
mov
xchg
inc
pop
mov
mulb
xchg
cmpl
in
and
push
fsubr
pop
movb
lcall
mov
cs
pop
flds
pop
cmp
inc
fidivl
imul
ljmp
push
test
in
rcll
mov
loopne
jge
push
inc
push
and
dec
mov
xor
push
mov
dec
lcall
je
insb
call
jno
or
sahf
cmp
and
loop
mov
sbb
sub
xorb
decb
ss
cmpsb
out
aaa
fstps
test
cld
cmp
dec
pop
in
test
out
scas
pop
sbb
aaa
sbb
add
adc
adc
mov
sub
mov
xchg
inc
repnz
and
xchg
mov
add
js
sub
dec
add
fisttpl
rclb
imul
filds
into
push
fs
popa
adc
loop
mov
push
les
sbb
cmp
push
sub
mov
add
mov
hlt
push
mov
push
lahf
testl
pop
jno
ds
pop
in
shl
sub
aaa
scas
pop
xchg
stos
add
cs
cs
xor
or
xchg
jg
add
cmp
scas
ret
xchg
pushf
fwait
shl
or
mov
jae
nop
rcrl
mov
pop
js
aaa
push
jb
or
outsb
rolb
inc
mov
inc
or
iret
mov
push
pop
sub
scas
in
fisttps
add
inc
int
in
dec
xchg
dec
mov
in
sbb
jne
cmpsb
sub
push
jo
lahf
into
insb
mov
iret
out
jg
mov
sub
fmuls
sub
mov
into
gs
cli
xchg
mov
fcomip
enter
cmp
xchg
dec
adc
mov
int
and
push
inc
jb
mov
ljmp
add
xchg
dec
sub
dec
xlat
fnstsw
cltd
outsb
mov
jp
mov
fisttpl
aad
xchg
inc
sahf
cmpl
dec
adc
je
mov
movsb
xchg
mov
add
xor
test
stc
jo
add
ret
push
cmp
cmp
or
cmp
mov
jl
orl
test
test
scas
inc
pop
aad
fisttpll
stc
inc
inc
fists
mov
inc
data16
notl
lds
lods
add
and
icebp
aam
add
jmp
lock
out
xchg
jno
mov
andl
sbb
lahf
out
add
pop
mov
add
cmpsl
pop
sti
push
or
jp
sbb
push
jae
sub
inc
pop
hlt
fmulp
es
int3
jg
das
inc
cli
imul
jp
or
fsub
adc
mov
push
sahf
push
sbbl
mov
enter
mull
data16
ds
xchg
dec
sbb
pop
repz
jns
sahf
pop
jp
push
aas
adc
jb
xchg
pop
std
adc
popa
sub
xchg
and
and
pop
loope
sahf
push
ret
add
and
xchg
xor
test
xchg
push
jno
rcl
out
notb
and
add
decb
lcall
push
jecxz
icebp
daa
ret
pop
adcl
push
ret
out
lret
xlat
cmp
pop
out
idivl
adc
les
loop
imull
inc
jl
mov
sbb
ds
and
dec
cmp
sub
aam
stos
jmp
fsubl
lock
js
mov
fistl
or
cmc
xor
xor
es
push
out
outsl
push
pop
inc
mov
fsubp
add
test
test
jo
scas
sub
xor
nop
push
xchg
fwait
jbe
sub
cltd
or
jo
cmp
push
test
push
xchg
lods
in
dec
pop
xchg
mov
ds
push
add
shlb
les
jae
ja
les
test
push
scas
xlat
dec
jecxz
sbb
dec
pop
push
push
sub
and
add
jno
pop
lret
sub
push
push
call
add
icebp
fnsave
popf
push
stos
ret
or
popa
adc
sub
mov
inc
push
mov
popf
jnp
aaa
mov
add
lcall
inc
outsb
push
push
les
das
lea
lahf
fwait
repnz
pop
jns
mov
jae
lea
in
pop
pop
xlat
fstpt
push
mov
mov
rorl
dec
gs
lock
mov
repz
xchg
rclb
mov
push
outsl
dec
mov
cli
jecxz
jae
or
dec
in
in
fyl2xp1
inc
in
test
pusha
jo
mov
call
or
jae
addl
or
mov
and
mov
mov
xchg
cmp
pop
mov
inc
cld
mov
fninit
mov
fstpt
addb
pop
xchg
test
xor
cmp
mov
hlt
or
and
jnp
jp
lret
xchg
sub
aaa
dec
into
fstpl
mov
sub
xchg
fcmovnu
das
mov
xchg
sub
jns
stos
mov
sub
subl
dec
pop
and
sub
pop
and
movsb
fstpt
dec
pop
imul
mov
rcr
sub
cld
test
in
dec
or
push
xchg
repz
add
fsubs
test
test
jb
pusha
jge
mov
cmc
cltd
into
mov
pop
ss
stos
mov
sahf
pop
lret
xor
outsl
jns
jb
fimuls
mov
push
imul
out
sbb
add
movsb
pushf
mov
fstpl
popf
mov
jb
xor
movsl
out
jp
daa
inc
add
adc
pusha
add
xor
sarb
test
mov
mov
fsts
arpl
sub
lcall
jae
push
pop
repnz
push
mov
in
or
jnp
inc
sub
mov
push
xchg
frstor
xor
inc
popa
pop
push
test
inc
mov
sub
imul
lods
pop
fcomps
xchg
jne
fwait
leave
pop
int
sti
out
sub
in
jp
cld
nop
daa
das
outsb
test
cmp
lcall
pusha
in
add
rcrl
sub
jno
in
cltd
int
lret
push
jmp
pop
sub
movsl
adc
into
or
in
xorl
or
cs
ret
mov
rorl
push
out
mov
pop
inc
inc
xor
jbe
inc
dec
sub
fidivl
ret
faddl
ja
and
jnp
adcb
lds
movsb
shl
jmp
fs
xchg
jmp
adc
loop
push
outsl
cltd
xor
adc
sbb
fwait
scas
cmpsl
sbb
leave
xor
js
std
and
pusha
or
adc
out
lds
push
test
loope
adc
inc
cmp
push
sub
dec
pop
clc
mov
int
fs
out
cmpsb
cmp
jg
inc
inc
cld
adc
int3
mov
repz
push
and
and
push
lods
jmp
pop
mov
cmp
and
cld
loop
or
lea
daa
frstor
stc
jo
aaa
shlb
push
fnstsw
clc
loop
or
movsl
lock
xchg
xchg
jge
mov
add
mov
mov
gs
fs
dec
inc
dec
dec
in
add
jno
insl
ja
push
cld
inc
xchg
mov
movsbl
push
pushf
fstl
pop
arpl
mov
inc
out
mov
dec
test
andb
push
jnp
push
sbb
iret
xor
stos
mov
push
pop
es
test
nop
inc
out
or
or
mov
add
adc
pop
mov
icebp
inc
and
fstl
shl
push
inc
test
push
jne
enter
gs
xchg
cmp
sub
shlb
ret
shll
loope
test
dec
leave
icebp
pop
mov
pop
adc
cltd
icebp
pop
or
insl
aad
aas
pop
and
inc
fdivl
jmp
lock
pop
push
ljmp
cmc
pushf
stc
sbb
sti
jl
jno
inc
xchg
adc
ljmp
aas
popf
lea
xchg
stc
adc
sub
xchg
dec
xor
das
pop
sbb
mov
push
mov
add
cwtl
jo
sbb
mov
ret
outsb
mov
test
out
cltd
mov
jb
push
mov
mov
std
test
mov
push
sbb
mov
and
loopne
push
cmp
adc
cwtl
sub
je
mov
mov
mov
mov
stos
loope
negb
pop
mov
adc
int
inc
inc
cmpsb
rcl
pop
xor
push
movsl
sahf
or
iret
cmpsb
jge
push
cmp
mov
test
xor
incb
push
mov
xchg
push
sub
mov
movsb
repnz
enter
xchg
adc
dec
testb
pop
insl
out
mov
mov
sub
xor
fildll
imul
sub
dec
or
xor
mov
icebp
enter
cmp
mov
ja
and
je
insl
scas
adc
clc
std
dec
test
dec
push
js
aas
mov
fnstenv
testl
in
and
xor
stos
dec
lock
rorl
push
sbb
add
movsb
xor
pop
out
mov
loope
pop
push
dec
mov
xor
sub
and
stos
pop
adc
int
jne
lods
cmpsb
xchg
pop
repnz
dec
movsl
and
sub
aas
ret
inc
sti
mov
ja
insb
jg
mov
test
ror
mov
push
sbb
scas
sbb
js
push
xor
pusha
adc
js
sub
jle
imul
xor
pop
adc
popf
xchg
leave
pop
dec
mov
mov
lret
ss
insl
inc
test
add
cltd
ret
cld
int3
fidivrs
xchg
push
stos
lods
xor
sub
xchg
xor
pop
lods
mov
add
shll
mov
xchg
inc
rcrb
cmc
mov
mov
mov
pop
jne
jae
sti
jb
nop
xchg
jmp
mov
jbe
mov
insb
ret
xlat
xchg
test
in
call
push
js
sub
push
in
jno
and
insb
add
int3
add
addr16
fldt
inc
mov
jb
push
js
adc
test
mov
push
stos
imul
add
sub
jns
cmpsb
cmpsb
std
mov
scas
mov
repz
jmp
mov
sub
outsl
cli
adc
sub
cmc
push
int
xchg
inc
faddl
int3
decl
lock
and
adc
nop
int
ret
jnp
dec
dec
dec
jmp
std
xlat
cmp
sti
xchg
mov
jle
jb
jl
mov
lcall
pop
lods
add
push
jb
cld
sub
jg
pop
enter
clc
insl
int
lcall
mov
rcrl
repnz
mov
jae
inc
pop
inc
xchg
popa
clc
out
pop
fwait
orb
hlt
sahf
jmp
rclb
icebp
sbb
sbb
int
je
push
insb
mov
jne
fldenv
addr16
ljmp
stos
mov
sub
stc
pop
cmp
fimuls
stc
inc
inc
jecxz
jmp
push
lods
jb
cmpl
pop
jg
out
mov
push
mov
and
sbb
inc
rcrl
in
ds
xor
add
movsl
fiaddl
test
add
aad
pop
mov
and
mov
das
xlat
leave
xlat
lea
int3
mov
iret
mov
and
push
jl
test
insl
scas
test
ja
xor
pop
sahf
icebp
adc
xor
dec
push
cmp
xor
xchg
sub
cmpsb
adc
pop
add
sbb
es
outsb
fnstsw
ds
jo
sbbl
jp
lret
push
fsubrp
repz
dec
enter
push
sbb
cmp
daa
outsl
gs
cmp
jmp
xor
test
cmc
outsl
jb
movsl
and
or
xchg
out
ret
dec
and
popa
mov
clc
lea
lcall
gs
pop
xchg
mov
sbb
subb
mov
cwtl
mov
mov
leave
mov
int
sub
dec
adcl
pop
jns
mov
pop
push
jmp
cli
loope
inc
lea
ja
sbb
fwait
mov
lcall
inc
jno
repz
xchg
sub
lea
mov
loope
mov
inc
pop
xchg
xorl
cmp
repnz
inc
notl
lds
cmc
xchg
dec
gs
mov
push
out
xchg
mov
dec
xchg
sbb
orb
mov
out
jo
inc
fiaddl
xchg
pushf
pop
call
inc
sbb
ljmp
scas
mov
xlat
mov
mov
inc
xlat
repz
mov
stos
pcmpgtd
sbb
mov
icebp
sbb
or
cmp
mov
add
or
popf
xor
mov
lret
lds
push
leave
sbb
add
test
inc
jecxz
mov
int
outsb
jle
repnz
lods
scas
mov
sub
dec
push
loope
mov
or
add
repnz
fdiv
dec
rclb
mov
mov
push
and
cmp
mov
dec
cmc
addr16
jb
jmp
js
adc
mov
mov
je
pop
loopne
orb
loop
cli
inc
movsb
add
iret
dec
jmp
mov
add
ror
mov
imul
andb
jb
or
into
mov
sbb
ja
jecxz
add
aas
add
sbbb
and
cmpsb
fists
rorl
fsubr
xchg
mov
incl
jmp
xchg
adc
sub
xchg
adc
cmpsb
mov
rcrb
pop
push
jne
rorb
dec
add
and
push
push
out
sub
pusha
cmpsb
outsl
push
push
popf
sbb
int
mov
je
les
and
int3
and
push
sub
shlb
xor
or
sbb
insl
jl
pop
pop
pop
push
ret
fcomip
xchg
jge
inc
lahf
test
push
cwtl
pop
outsb
mov
fnstcw
xlat
mov
lods
lea
dec
loope
pop
or
stos
icebp
insb
adc
imul
frstor
sbb
inc
jb
mov
push
pop
fstpl
loopne
ds
xor
stos
lock
cmp
or
fstpt
sbb
test
sbb
adc
popa
mov
mov
push
loope
or
dec
pop
jmp
xor
hlt
negl
inc
inc
rep
in
xchg
xor
lret
hlt
lret
push
adc
inc
adc
and
in
pusha
and
xor
sarb
sahf
add
cli
jge
lcall
dec
mov
popa
or
and
cs
push
dec
jmp
or
std
imul
inc
or
jno
push
or
cmp
mov
scas
and
inc
sarl
sbb
cmp
add
push
shlb
mov
jle
lea
mov
xlat
testb
or
out
dec
sub
shll
std
xchg
popf
or
and
daa
cmpsl
add
pop
std
xchg
dec
mov
jg
sbb
sbb
adc
hlt
icebp
or
xor
outsl
cltd
mov
mov
mov
and
lock
xchg
adc
mov
neg
mov
xchg
adc
xlat
sbb
dec
insb
xor
dec
scas
inc
cli
repz
cmp
sub
push
in
nop
iret
or
jb
inc
push
mov
jge
stc
fwait
sti
fistpl
jne
in
pop
adc
or
idivl
out
sub
aas
in
arpl
lea
sbb
xor
mov
outsl
jecxz
add
xor
stos
and
xchg
ds
pop
fwait
cmp
pop
jns
pop
movsb
test
shlb
dec
enter
add
icebp
mov
mov
repz
scas
and
movsl
std
sarb
sbb
xor
pusha
jne
je
ljmp
js
lods
fcomi
jge
cwtl
lods
sbb
push
cmpsl
pushf
pusha
stos
mov
pop
data16
cltd
jb
pop
cmp
imulb
pop
mov
cmp
mov
mov
add
lret
rorb
push
out
mov
sbb
stos
mov
out
test
mov
xor
bound
jp
mov
mov
inc
data16
cwtl
gs
pusha
lock
imul
test
mov
jnp
add
or
notl
jmp
in
dec
std
lock
arpl
inc
ljmp
adc
xchg
lcall
pop
xlat
mov
out
popa
or
clc
inc
sbb
push
xchg
add
cmpl
push
data16
mov
push
dec
add
pop
mov
jo,pt
shl
xchg
push
js
ds
sub
frndint
cld
jmp
and
pusha
negl
lret
adc
das
pop
cmp
je
mov
hlt
or
decl
loopne
dec
loope
in
fsubp
push
imul
push
dec
xchg
popf
xchg
xchg
sub
test
sub
xchg
fbstp
sti
mov
cli
test
lret
or
test
xchg
push
push
out
mov
outsb
sub
jne
inc
stos
sbb
int3
mov
outsb
mov
fnsave
popl
test
inc
mov
adc
dec
mov
mov
or
and
sbbb
shl
jns
inc
sbb
addb
call
sar
push
sub
les
xor
test
adc
cmp
loop
and
fcomps
jns
jnp
cld
lods
and
or
cmp
cmp
das
ja
mov
jo
mov
xchg
and
xor
bound
sbb
adc
dec
lahf
scas
inc
shll
lods
lcall
mov
add
dec
add
lods
sbb
cld
adc
cmp
push
repnz
test
lock
cmpsb
sub
repz
push
sarb
scas
repnz
push
mov
mov
jg
fiadds
ss
pop
adc
loop
jmp
not
inc
or
pop
jns
mov
pop
mov
add
cli
xchg
mov
das
stos
ja
sbb
add
cmpsl
mov
and
in
dec
adc
clc
aad
xchg
mov
aad
repnz
jno
and
idivb
imul
das
mov
sbb
cltd
lret
mov
out
je
and
xchg
cmp
aaa
mov
in
test
jp
or
pop
jae
andl
push
je
hlt
push
add
push
cli
inc
ss
outsl
out
bound
mov
in
aaa
and
inc
pop
sbb
repz
cld
in
popf
mov
push
pusha
mov
ds
adc
mov
cli
pop
out
test
add
adc
mov
inc
fcoms
sbb
xchg
or
ja
mov
add
ss
out
ret
or
jns
push
stos
ret
jno
mov
mov
in
nop
out
sti
pusha
and
daa
mov
fidivrl
inc
fsubrs
bound
pop
adc
lods
or
sub
or
cmp
in
test
and
gs
stos
shll
mov
pop
add
movsb
js
shl
fidivs
cld
xchg
ljmp
dec
outsb
lock
adc
xchg
add
daa
outsl
incb
and
jb
pop
add
sbb
fs
cmp
inc
jl
or
and
jg
pop
leave
sar
lods
add
es
pop
cmc
mov
xlat
and
push
fimull
and
test
adc
jg
adc
in
or
dec
mov
rcl
jl
and
mov
cmpsb
mov
adc
rclb
push
or
je
je
cmc
jb
aam
cmp
loopne
in
cmp
dec
pop
sub
hlt
sbb
cmp
es
sbb
ss
dec
aaa
mov
into
rclb
js
shlb
outsl
clc
ss
mov
out
je
pop
or
lcall
cmpsb
sub
or
out
mov
insb
dec
mov
xchg
out
psubusb
fwait
aad
pushf
hlt
jmp
cwtl
call
pop
mov
clc
xchg
adc
ss
mov
int
jne
lods
into
inc
int
jb
imul
jne
sbb
xchg
xlat
or
mov
xchg
push
mov
sbb
loop
stc
icebp
cmp
ss
jmp
es
push
cld
cmp
das
mov
imul
orb
sbbl
das
test
shll
fldt
leave
and
mov
movsl
lea
cs
add
jbe
scas
cmc
cmp
cltd
std
jle
push
cmp
les
jmp
sbb
sbb
cmp
dec
stc
addr16
mov
push
and
inc
cs
push
je
push
and
cltd
xchg
mov
xchg
push
push
pop
or
cmp
sbb
jp
cwtl
enter
xchg
xchg
je
cmp
pop
mov
xchg
movsl
mov
jne
jmp
nop
insl
cli
ss
out
mov
jb
test
pop
stc
icebp
sar
rorb
dec
inc
and
fistpl
push
loopne
xchg
sbb
div
push
jns
enter
iret
add
jnp
and
movsl
cltd
enter
cwtl
sbb
dec
jg
mov
xor
mul
mov
andl
sbb
mov
loopne
and
mov
test
sub
mov
pop
sahf
push
call
and
nop
push
test
and
mov
mov
dec
push
shl
out
push
mov
cmp
pop
js
outsl
cmp
pusha
fistpl
aad
ret
jle
jg
out
or
popf
or
aam
or
in
xchg
data16
lds
repnz
jmp
leave
sbb
or
movhps
shlb
cmp
xchg
das
out
push
push
ljmp
ret
mov
hlt
lret
cli
jmp
imul
push
ss
mov
jns
loopne
pop
adc
pop
lcall
stc
adc
hlt
xor
mov
mov
xor
rol
icebp
mov
pop
lahf
push
jmp
insb
fwait
stc
mov
sub
stos
fidivl
adc
dec
and
jle
and
cwtl
sbb
jl
xor
sbb
std
lret
sti
sbb
lea
repnz
ret
or
shl
imul
mov
mov
imul
lock
rcrb
sub
jge
and
vpunpckhqdq
scas
enter
lret
lock
xchg
add
push
sahf
push
repnz
cmpsb
and
fcoml
sbbb
lret
inc
int
mov
outsb
jno
js
out
push
sbb
sub
pushf
clc
icebp
add
out
in
jge
pop
cli
insl
sub
pop
hlt
js
xor
jl
in
sub
test
sub
stc
std
test
ljmp
fwait
rcrl
fcmovu
mov
lret
jle
and
outsl
fcmovu
jb
mov
jle
add
adc
inc
and
ss
adc
and
mov
orb
mov
mov
push
mov
mov
lea
jmp
mov
adc
add
syscall
push
shlb
pop
in
dec
mov
pop
push
and
fldl
lahf
fildll
pushf
enter
icebp
pop
pop
xor
xchg
lock
scas
imul
fists
xchg
sub
pop
aam
push
pusha
aad
jbe
in
pushf
dec
xchg
xchg
sub
call
cmp
sub
pop
dec
xchg
subps
inc
sub
push
lahf
dec
iret
data16
add
xor
inc
lret
cmp
inc
fwait
sbb
push
stos
push
inc
cltd
or
fstpl
push
inc
fildl
notb
mov
add
repz
cmp
mov
js
negl
and
fwait
ss
sbb
les
js
mov
ljmp
test
mov
imul
aam
stos
imul
cld
sub
fisubrs
xchg
fistpll
divb
fcomps
mov
cmp
inc
xlat
inc
pop
popa
jnp
xchg
pop
lret
push
jecxz
and
sub
sti
hlt
cmp
ficoml
daa
jp
loop
pushf
jns
push
popf
sbb
jbe
test
mov
cmp
xchg
test
sarl
mov
in
insl
or
mov
pop
jle
push
sub
repz
jmp
icebp
pushf
or
push
ljmp
lock
jo
sub
dec
outsb
mov
push
inc
ret
rcrl
xorb
and
fisubrl
repnz
out
cmp
mulb
repnz
or
or
cmc
push
cmp
shl
or
push
pop
dec
cmp
jle
lret
jecxz
mov
xchg
test
leave
or
pop
enter
cmovb
sbbb
shlb
loopne
aam
sti
mov
pop
mov
inc
jp
loopne
push
jp
mov
jbe
push
imul
pop
or
sbb
scas
fiadds
or
xor
push
push
sti
xor
mov
fists
push
mov
popf
das
inc
hlt
push
xchg
in
mov
lahf
jg
dec
push
lahf
pop
fs
std
xchg
inc
and
inc
in
adc
int
das
xor
mov
popf
lds
sub
out
arpl
jno
adc
xor
stos
dec
pop
clc
ja
inc
fst
or
sub
addr16
jns
mov
or
jge
cmp
inc
outsb
or
shr
xchg
stc
fisubl
add
mov
adc
out
aam
add
es
test
adc
cmc
in
imul
pusha
movsl
push
jbe
adc
mov
and
mov
dec
dec
inc
sub
mov
daa
mov
das
push
fs
out
js
xchg
xchg
loope
incb
leave
ret
add
mov
cmp
or
call
xor
in
pushf
inc
push
fldenv
std
sti
lret
fildll
outsl
aas
adc
dec
mov
xor
rorl
icebp
cmp
xlat
sub
stos
sub
imul
push
movd
pop
repz
daa
cs
add
decl
pop
and
xchg
popf
int3
arpl
sub
add
ja
inc
xor
adc
stc
popw
sub
mov
jns
and
sub
popa
xsha256
cmpsb
xchg
jecxz
in
clc
divl
xchg
mov
scas
fnstcw
inc
or
pop
jmp
loopne
cmc
push
shlb
data16
mov
pop
push
sbb
sub
inc
orb
dec
mov
js
loop
jg
cmp
test
sbb
js
or
mov
frstor
sbb
sub
test
outsb
or
cltd
clc
in
inc
rcll
mov
fnstcw
in
push
fdivrs
fstps
mov
hlt
pop
push
test
and
lods
hlt
lret
dec
cmp
dec
jne
fcmovnb
sti
push
js
popa
lods
adc
or
xor
hlt
call
stos
aaa
sbb
jle
shr
incb
cld
cld
sub
decb
arpl
dec
pop
add
mov
cld
gs
mov
popa
inc
sbb
int
mov
sbb
adc
int3
aam
or
aad
push
inc
fadds
insl
sahf
or
popa
cmp
mov
leave
leave
cmp
inc
repz
out
mov
or
cmp
xchg
mov
cmpl
testl
loopne
mov
sbb
or
sahf
and
test
dec
fldt
mov
jns
fisubl
insl
les
dec
dec
ret
repnz
pop
popa
sub
add
cmp
and
fidivs
adc
mov
ficoml
cltd
fildll
mov
insl
add
inc
pop
imul
cmp
scas
push
mov
in
xchg
stos
push
sub
sub
js
insl
mov
fxtract
dec
sti
imul
daa
adc
jmp
mov
inc
arpl
mov
repnz
cwtl
icebp
or
xor
jno
push
cltd
and
mov
les
iret
mov
lea
call
xor
test
aas
adc
ret
or
push
mov
fcoml
sbb
mov
hlt
and
push
or
add
and
adc
loope
int
ss
movsl
sbb
xchg
push
inc
testb
inc
leave
push
add
or
ss
mov
idivl
nop
lods
mov
daa
mov
sbb
addr16
push
shll
add
inc
cld
jae
insb
xlat
into
pusha
clc
mov
cmc
xor
inc
mov
xor
or
pop
loopne
inc
mov
insb
daa
lods
movsb
mov
sbb
lret
negb
cmp
inc
stos
inc
xor
mov
push
push
sub
negl
dec
cmp
cmp
jge
outsb
push
adc
xorb
xchg
mov
mov
pop
push
insl
inc
dec
hlt
jns
test
sbb
xchg
add
inc
mov
out
lods
cmp
and
push
mov
pop
jle
stos
add
jmp
push
xchg
add
sahf
cli
mov
sub
jle
pusha
lock
mov
push
or
push
call
mov
or
mov
push
sbb
push
or
xchg
pop
xor
pop
out
adc
mov
repnz
lds
in
pusha
lds
mov
mov
xchg
sbb
xor
push
or
cmp
pop
inc
repz
ds
test
lahf
cmpsb
sub
pop
enter
pop
mov
lods
dec
mov
jmp
mov
inc
push
cmc
mov
cmpsb
in
pop
jl
push
call
std
pop
mov
fnstenv
lods
fiaddl
in
add
push
add
cwtl
pop
in
lock
shll
into
mov
push
ljmp
cltd
xchg
sbb
dec
and
hlt
mov
lret
adc
dec
add
push
cwtl
jp
or
aam
pop
inc
jg
pop
in
enter
xor
icebp
mov
nop
scas
inc
ret
repnz
scas
push
fisttpll
and
pop
mov
xorb
imul
mov
xor
test
xchg
inc
leave
fs
sub
std
packuswb
add
ss
cs
pop
xor
outsb
roll
lahf
mov
frstor
inc
in
fsubrs
xchg
in
add
mov
imul
test
mov
mov
mov
loop
lds
cmpb
data16
lret
xor
lcall
js
push
and
pop
jo
inc
xchg
sbb
mov
mov
mov
rorl
pop
cmp
dec
and
mov
xor
psrad
sbb
pop
adc
push
sub
mov
xorl
adc
adc
and
mov
mov
test
mov
or
adc
das
shrl
jecxz
imul
fwait
cmp
xor
test
into
stos
bound
xlat
int3
pop
fbstp
pushl
or
in
adc
clc
imul
stos
add
ja
shl
inc
fnstsw
pop
sub
lods
dec
add
cmpsl
lods
mov
push
mov
movsb
and
adc
jecxz
loope
test
adc
or
rorb
dec
add
fistpl
mov
jae
iret
ds
js
in
inc
jne
in
sbb
fisttpl
inc
xchg
pop
add
adc
push
sub
sub
jnp
mov
imul
sbb
dec
dec
shr
test
xchg
mov
xor
mov
cmp
out
push
push
xor
movsb
lret
out
jnp
pop
xor
jecxz
data16
repnz
arpl
test
repnz
adc
pop
push
aam
xor
sub
dec
mov
xchg
jl
ljmp
sub
xor
pusha
hlt
xchg
cs
int
into
mov
add
dec
popf
fidivrl
dec
stc
push
or
or
shll
push
cwtl
das
dec
mov
daa
stos
in
dec
pop
int
loope
addr16
pop
xchg
xor
push
test
leave
rorl
jbe
iret
clc
dec
iret
xchg
aas
xchg
inc
lock
arpl
je
sarb
mov
adc
repz
mov
sbb
clc
xor
jne
fldenv
repz
pop
xchg
jl
cld
cmp
pop
sbbl
les
pop
mov
xor
jg
pusha
stc
das
test
fstpl
call
cmp
mov
nop
xchg
dec
mov
jb
out
cmp
pop
imulb
sbb
xchg
push
cwtl
push
lods
lret
inc
add
inc
mov
mov
in
mov
lcall
or
jle
jl
in
clc
pop
mov
or
push
shlb
cld
and
push
in
adcl
sub
rorb
cmp
add
inc
pop
sarb
xchg
sub
mov
pop
out
mov
jns
les
mov
adc
cmp
pminub
cwtl
pusha
inc
sti
ja
call
and
test
loopne
cltd
pusha
cmpsb
in
inc
dec
lea
pop
mov
mov
stos
leave
pop
icebp
jo
cmpl
stos
lahf
mov
test
push
jb
pop
imul
mov
or
xchg
add
and
dec
push
stos
inc
fcmovu
mov
hlt
clc
mov
cmp
inc
testl
or
into
imulb
push
xchg
mov
dec
in
push
mov
in
mov
pop
notl
sbb
dec
push
cmc
xchg
mov
mov
imul
add
ret
fwait
jmp
sub
adc
add
cmpsb
lret
mov
sbb
test
push
out
inc
rorl
lea
xchg
sar
ret
outsb
and
stos
std
pop
push
jb
sbb
adc
scas
shrb
sbb
xchg
jge
push
les
cmc
pop
push
scas
add
adc
lret
jp
loope
jecxz
adc
xchg
push
repz
and
xor
jecxz
jmp
das
jmp
mov
dec
aas
mov
mov
jecxz
aaa
push
add
lret
mov
jmp
leave
add
jnp
mov
jg
into
adc
mov
aam
and
rclb
sahf
bound
mov
cmp
test
rcr
lea
inc
jp
pop
imul
incb
sub
call
and
loope
jmp
and
fwait
popw
sbb
fidivrl
leave
into
std
xlat
fsubr
or
mov
jle
xor
aad
mov
add
inc
sbb
dec
mov
pop
or
das
push
sub
dec
jo
jmp
pop
add
dec
mov
add
push
add
mov
pop
stos
inc
dec
dec
xchg
sbb
jns
xor
jecxz
out
and
aad
psubq
gs
mov
dec
xchg
stos
and
xchg
lret
mov
lret
popa
es
jge
inc
pop
daa
mov
sub
lea
mov
mov
jl
cmovs
jle
sbb
jnp
and
lods
xchg
xor
mov
sub
push
mov
je
das
es
jno
push
or
pop
pop
add
mov
lea
mov
enter
in
xor
iret
loope
ljmp
les
cld
into
mull
shlb
daa
lods
mov
xor
fwait
gs
mov
mov
pop
pxor
fadd
pop
mov
mov
cli
loope
clc
hlt
jecxz
pop
ret
pop
repz
es
jnp
xor
cmc
mov
mov
xchg
movl
sub
stc
push
in
sub
js
xor
jne
mov
test
and
fdivrl
xchg
movsl
cmp
push
mov
aas
out
push
or
mov
ficompl
ror
fiadds
shr
xor
movsb
daa
shlb
imul
sub
or
sbb
push
sbb
mov
mov
sub
je
clc
es
pop
lds
and
rclb
fwait
xchg
das
inc
aad
aad
gs
jns
jp
ljmp
in
dec
push
jmp
jnp
jo
push
mov
mov
iret
pop
xchg
enter
rol
incl
roll
rol
out
push
out
pop
ret
push
insb
icebp
mov
popf
pop
loop
xchg
lahf
push
adc
dec
loop
mov
jl
mov
xor
jnp
in
lods
xor
movsl
inc
inc
stos
jae
inc
inc
in
xchg
mov
push
mov
sub
mov
cmp
push
pop
hlt
pop
das
test
pop
popf
cmpsb
and
lods
jle
sbb
or
cs
lahf
sti
lret
mov
call
mov
pop
xor
mov
test
sti
jbe
mov
cmc
mov
out
fstl
add
pop
push
lods
or
sbb
stos
outsb
push
jp
dec
add
dec
adc
je
jnp
cmp
mov
das
lods
jge
sbbb
ljmp
ret
adc
scas
call
dec
mov
sub
loope
loopne
into
cltd
test
test
scas
sbb
mov
outsb
in
push
stos
xchg
xor
dec
inc
movsl
sbb
sbb
cmp
jae
cltd
xchg
inc
test
bnd
cld
lds
pop
test
mov
add
adc
lret
subl
mov
int
bound
sbb
or
jno
inc
push
xor
aad
jns
or
ret
sbb
xchg
std
shl
push
ret
inc
arpl
xchg
inc
cld
cli
mov
pop
inc
ljmp
in
out
insl
cmc
inc
cmc
push
cltd
shlb
flds
adc
add
stc
je
xlat
mov
out
popa
rorl
cld
xchg
test
fmuls
inc
sbb
out
or
cld
push
imul
fistpll
inc
ret
ficompl
cs
ret
mov
inc
and
loopne
rol
push
int3
repnz
andb
std
insl
add
je
inc
sub
and
mov
jle
mov
movsb
cli
test
pop
adc
push
mov
dec
push
mov
mov
insb
das
and
ljmp
jae
sti
out
lcall
adc
inc
sbb
sbb
mov
cmpsl
adc
lcall
mov
dec
dec
cmp
movsb
mov
mov
push
cmp
lcall
daa
lcall
adc
insb
rorb
and
push
pop
mov
push
insl
and
mov
add
stos
fs
and
popa
aam
scas
lds
dec
and
lret
cmpsl
mov
insl
xchg
dec
inc
sbb
fwait
sub
fldt
pop
dec
add
fisubrs
mov
inc
mov
pop
sbb
pop
xchg
icebp
xchg
cmp
pop
lods
mov
or
icebp
xchg
incl
mov
loope
dec
in
lods
or
sbb
paddq
mov
sbb
jmp
lods
test
pop
mov
xlat
push
adc
iret
lock
xor
jecxz
xchg
sarb
sti
and
xchg
lcall
mov
andl
lahf
xor
fstl
scas
shll
rdmsr
mov
jmp
iret
popa
inc
out
imul
fs
jle
divl
adc
mov
pop
call
mov
sub
ja
lahf
scas
jb
sub
data16
clc
mov
and
adc
cmp
jle
fisubrl
dec
das
inc
fcmovbe
dec
pop
sub
mov
sub
lea
add
xchg
mov
aas
in
mov
jp
loope
lret
dec
adc
idiv
out
popf
aas
add
pop
pushf
pushf
pop
ljmp
insl
sub
push
jno
inc
push
jmp
push
xchg
add
fisubrs
xchg
sub
aas
dec
pop
nop
push
xor
adc
jae
ficoms
ljmp
jmp
push
testl
in
nop
addr16
insl
jnp
out
cld
stc
pop
sub
xorl
int
cmp
add
pop
pusha
ds
pop
hlt
rcrl
pop
adc
push
xor
xchg
push
xchg
lds
jo
adc
and
cmp
sub
adc
dec
pcmpgtw
add
in
mov
sub
arpl
rcrb
pop
inc
xor
arpl
or
xchg
xorl
in
enter
js
and
jmp
sub
out
ficomps
and
push
outsb
mov
dec
mov
or
xor
ret
pop
call
or
daa
dec
sub
mov
adc
jg
dec
das
xchg
nop
dec
dec
lea
xchg
pop
out
jl
aaa
divl
lds
push
xor
lods
lret
xchg
rorl
xchg
dec
into
and
pop
test
mov
clc
dec
or
inc
int
dec
mov
dec
xor
push
aad
and
add
pop
loopne
mov
insl
sbb
nop
pop
test
ret
in
imul
enter
addb
mov
push
icebp
loopne
rclb
fcomps
ja
addb
xchg
dec
inc
imul
stc
dec
dec
mov
call
int3
arpl
fsubrs
push
pop
fsub
jl
lcall
sbb
shlb
imul
outsl
rcrl
pushf
or
lcall
push
inc
test
fcomip
aaa
in
xchg
adc
dec
das
add
shrl
xlat
xor
sti
push
dec
xor
push
movsb
pushf
negl
outsl
jmp
pop
scas
shll
imul
pop
or
adc
aas
xchg
lcall
data16
hlt
enter
loope
and
inc
push
in
push
dec
push
inc
ret
mov
xor
mov
mov
jns
stc
mov
sbb
xor
sbb
jmp
test
out
sahf
mov
les
stos
out
repz
push
sahf
fcom
xchg
sub
cli
jge
leave
test
mov
ljmp
aam
movsl
icebp
xlat
cmc
or
adc
insb
idiv
mov
jmp
inc
dec
popf
sti
push
rep
xchg
hlt
mov
add
xchg
sub
enter
mov
cld
xor
mov
push
mov
add
xchg
sub
pusha
out
std
aaa
xor
push
or
push
xchg
sub
xchg
testb
jmp
sub
pop
outsb
in
fwait
sbbl
xchg
sbb
js
ljmp
pushf
testl
jg
lds
cmp
mull
inc
bound
jle
loopne
mov
xchg
das
fsts
cltd
ficoms
pushf
inc
push
lds
pop
loop
call
les
xchg
xchg
sub
inc
gs
inc
mov
xchg
in
sti
push
push
rcrb
dec
inc
add
xchg
mov
pop
xor
lret
xchg
fiadds
xchg
sarb
xchg
leave
xchg
push
cmpsl
mov
push
repz
loopne
mov
mov
and
and
arpl
push
flds
pop
add
inc
push
cmp
scas
push
xchg
pop
int
hlt
mov
push
cmpsl
inc
mov
sub
xor
cmpsl
pop
ficompl
pop
enter
cmp
add
dec
loop
mov
sub
add
stc
or
insb
fsubl
jp
xlat
dec
popa
push
xor
repz
jne
roll
pop
add
popf
cmpsl
push
add
sub
out
sub
mov
lods
jae
mov
fildl
cmp
movsb
mov
add
and
stos
push
sub
jle
pop
mov
out
add
sub
inc
cmpsb
popf
cli
pop
jmp
push
adc
loope
jns
out
sub
jge
mov
stc
mov
dec
outsl
sbb
jne
lds
cwtl
jl
xchg
mov
sti
xchg
sar
jp
div
cmpps
dec
shrl
mov
mov
aaa
shrb
cmp
xor
add
mov
pop
cmp
and
clc
pop
mov
inc
jecxz
test
mov
lock
gs
cmp
and
arpl
outsb
lahf
sbb
push
js
or
mov
xor
inc
mov
scas
and
in
mov
mov
cmpsl
int3
fisubrs
jbe
fwait
sub
dec
cmp
mov
and
cmc
mov
sarb
xchg
icebp
sub
call
scas
push
cwtl
lds
std
aam
xor
mov
add
jae
fdivs
jne
test
mov
jae
mov
sbb
stos
inc
inc
dec
dec
movsl
outsb
sbb
inc
in
leave
cmp
mov
sahf
and
scas
push
xor
je
insl
gs
into
mov
pop
push
sub
mov
stos
inc
out
iret
mov
jge
movsl
aas
iret
lret
les
pop
leave
test
sar
adc
testb
aaa
fsubrs
xchg
lock
xchg
loop
mov
add
xchg
negb
sub
clc
pop
jae
sub
cmp
nop
and
in
mov
out
cwtl
jne
lods
sub
push
bndstx
jb,pn
sbb
push
out
jl
cltd
pop
inc
popf
jne
ljmp
lfs
std
movsl
mov
pop
imulb
push
push
fbld
test
jmp
mov
sub
fisubs
notl
sti
out
sarb
jne
and
bound
xor
lods
repnz
cs
push
mov
push
and
adc
xchg
test
clc
fsubrs
clc
dec
pop
sub
fs
sub
mov
mov
dec
mov
arpl
mov
push
jp
sbb
cmpsb
push
and
cmp
adc
pop
insl
sarb
push
popa
or
pop
xchg
push
pop
out
jae
lret
orl
stos
test
popa
rcll
rol
test
repnz
dec
and
adc
rol
xor
clc
aas
fbstp
pop
das
push
fisttpll
push
sahf
mov
or
into
jle
fstpl
dec
jns
inc
sbb
and
sbbl
dec
cmpsb
dec
in
insb
mov
ja
and
or
mov
fcomip
mov
push
lods
lret
push
mov
test
xor
loopne
aaa
popa
fsubl
push
and
mov
lahf
xor
sub
fs
cld
pop
add
into
cltd
sub
ficoms
in
test
dec
cmpsb
or
xchg
jge
stos
sub
orl
xchg
mov
movsb
mov
iret
pop
inc
adc
stc
jl
in
push
adc
add
cli
xorb
aaa
pop
lcall
insl
je
cmp
jno
mov
addr16
lret
dec
mov
dec
mov
movsl
add
mov
mov
aam
fwait
stos
fldl
sahf
mov
in
rcr
sub
mov
push
lds
sub
mov
pop
call
les
popa
cmp
cmp
mov
scas
mov
fisubrl
mov
test
pop
jb
ja
jg
dec
lea
add
pop
test
cld
mov
cltd
mov
das
lds
fisttps
dec
jge
xchg
adc
or
mov
xchg
loope
je
or
nop
enter
push
in
incl
loop
es
or
ja
jno
push
stos
cmc
decb
lret
and
adc
pop
mov
xchg
sbb
adc
pop
stc
xlat
inc
movsb
adc
mov
cltd
and
dec
mov
xor
mov
sub
int3
lahf
xor
mov
jae
and
adcl
cs
cmc
sub
sarb
push
movsb
lret
rcrb
add
mov
in
icebp
xchg
mov
pop
push
fstl
jge
fs
xchg
sub
out
out
leave
inc
aad
aaa
call
roll
add
or
dec
xchg
mov
rorl
jecxz
movsl
cmp
loopne
ss
mov
icebp
lcall
mov
and
fldl
and
lret
pop
pop
cmp
fsubl
data16
insl
rorb
ficoml
inc
popa
clc
jbe
mov
int
cli
test
adc
lcall
lahf
addl
daa
in
mov
inc
test
ja
push
insl
mov
jle
jmp
push
mov
cmp
mov
dec
out
dec
jecxz
cmpsb
or
add
outsl
lods
jb
mov
xchg
inc
adc
sub
inc
in
inc
addr16
test
adc
gs
sbb
mov
cmp
incb
push
mov
cltd
push
or
mov
jno
sbb
cmp
imul
xlat
add
push
pop
orb
int
ds
addr16
or
ljmp
dec
cmp
xchg
jp
popa
rol
inc
packsswb
loope
mov
inc
or
and
loop
js
iret
ret
inc
xchg
jg
fnsave
push
mov
mov
addr16
mov
rol
stos
lret
sbb
jns
cmp
imul
add
adc
sbbl
insl
xor
repz
or
inc
ds
mov
cmc
jl
shrb
or
jg
jle
inc
stc
aam
lock
add
lock
inc
fcmovnbe
int3
lahf
cli
fidivl
andl
or
sbb
nop
fs
push
jp
xorl
push
movsb
ret
enter
sbb
ret
lods
mov
xor
pop
push
cmp
push
xchg
bound
icebp
xchg
mulb
or
xor
xor
jecxz
add
aas
sbb
in
push
mov
pop
push
lds
xor
xor
xchg
xchg
or
mov
inc
inc
push
repz
je
inc
loope
pusha
fildl
xchg
jb
aaa
inc
dec
out
sbb
dec
movaps
or
test
mulb
xchg
lret
xor
nop
xchg
pop
out
and
int
cmp
in
popa
inc
fsts
pop
out
dec
test
sub
dec
outsl
scas
and
pop
pushf
sbb
hlt
add
push
lods
insb
leave
push
out
stos
divb
push
lret
jne
std
jno
adc
sti
xchg
mov
xor
sbb
and
test
inc
jecxz
sbbl
call
mov
xor
and
cmp
xor
orb
xchg
and
mov
xor
jb
inc
mov
movsl
adc
ret
push
inc
push
lods
insl
fadds
int
xor
cld
out
and
xchg
mov
aad
push
repnz
and
adc
xchg
jp
leave
mov
add
push
dec
loope
cld
pop
mov
insb
lret
enter
inc
pop
add
mov
mov
cmpsb
mov
inc
lods
jbe
inc
lods
das
test
mov
ret
dec
insl
ds
movsl
dec
in
ds
insb
pop
mov
inc
popa
in
pop
ljmp
mov
cltd
push
clc
stc
vpandn
fnsave
mov
mov
loopne
push
popf
cmp
mov
fcoms
mov
in
dec
out
xchg
push
or
or
mov
adc
dec
repz
cld
jp
sbb
cwtl
adc
or
push
mov
mov
mov
shrl
or
loopw
shl
jo
out
cmp
hlt
inc
daa
mov
push
in
ljmp
push
mov
and
lahf
add
daa
das
mov
adc
imul
movsb
ja,pn
mov
mov
fmuls
or
out
cli
jp
lahf
iret
pop
movsl
into
test
mov
shl
cld
in
cld
jg
mov
fsubl
dec
gs
adc
adc
and
pop
mov
sti
pushf
in
stc
repnz
aas
filds
les
rcrl
sbb
pop
jb
movsb
repz
jns
sub
or
rorb
in
mov
push
pop
dec
xorl
fwait
pop
mov
jbe
xor
pop
jge
aad
leave
call
mov
jge
mov
xchg
out
pop
push
int
mov
push
or
in
mov
jmp
sub
and
outsl
fistpl
shl
in
jle
fsubp
cmp
jge
pop
push
inc
mov
dec
jnp
loopne
pop
cmpsb
jle
into
sub
cs
ret
jo
shrb
js
adc
sbb
loopne
insb
repnz
in
test
lret
mov
pop
sub
repnz
cmp
outsb
stc
xchg
faddl
mov
sahf
addl
enter
and
and
add
sub
bound
and
test
in
popa
xor
cmp
or
mov
hlt
jo
and
adc
scas
inc
jnp
test
xchg
movsb
out
fisttps
popa
cld
mov
lcall
hlt
rcll
add
fiaddl
lock
movsl
mov
push
je
fstpl
leave
jbe
arpl
lcall
insl
stc
push
mov
dec
xchg
icebp
mov
stos
adc
push
cmp
sbb
lahf
repz
mov
jns
ljmp
shll
aam
inc
xlat
outsb
jne
arpl
inc
les
push
jo
lods
jecxz
jbe
xor
jnp
daa
lods
bound
and
cmp
xchg
jmp
shrb
jle
jbe
divl
inc
dec
push
popf
das
out
out
and
xor
xor
in
pop
push
dec
popf
loop
cmp
push
scas
scas
cmp
mov
arpl
cmp
das
sub
mov
jne
dec
addr16
cltd
imul
sahf
jg
mov
jmp
cld
xchg
scas
adc
add
and
push
loope
push
and
adc
imul
test
scas
xor
sbb
adc
xchg
stos
inc
dec
addr16
negl
push
xor
shrl
xor
icebp
cmpsl
and
dec
mov
pop
shrl
add
ja
sbb
mov
es
subl
lcall
pop
icebp
mov
xchg
sub
cmp
sahf
sub
cmp
scas
xor
daa
mov
mov
fnsave
sti
cli
pop
fldt
pop
sbb
cmp
jns
je
cmp
sub
imul
xchg
mov
repnz
pop
incl
mov
jno
outsb
out
inc
fcompl
pop
sahf
pop
ficoms
push
jl
mov
sti
xor
lret
jmp
pop
mov
cmp
sahf
es
cmp
out
and
loopne
repnz
or
stos
inc
jle
in
icebp
hlt
rorl
add
pop
hlt
push
jg
pop
es
sbb
loope
insl
cmc
pop
stos
pop
movsl
dec
pop
jne
jnp
dec
cmp
dec
ret
jp
mov
xchg
cmpsb
movsb
cmp
mov
test
cmp
pop
inc
mov
rcrb
and
mov
dec
xlat
mov
fldl
scas
or
shr
lods
add
adc
mov
shlb
test
mov
add
push
adc
xchg
sbb
ds
inc
mov
orb
pusha
stc
in
inc
movsb
daa
je
ret
cmp
bound
aad
mov
mov
sti
xor
dec
push
mov
cmc
or
cmp
repnz
jnp
sub
mov
sbb
popf
add
movsb
cmpsb
rclb
mov
jno
mov
xor
sub
fmuls
xchg
jbe
xchg
test
std
xorb
in
adc
repnz
dec
imul
jnp
daa
xchg
dec
or
or
cs
pop
sub
mov
mov
mov
jp
repz
ds
jns
div
popf
cmc
sbb
jne
push
xor
jmp
inc
inc
sbb
int
out
jl
and
mov
dec
lock
inc
and
pop
mov
dec
mov
lcall
fdivr
decb
int
inc
fldl
iret
dec
popa
aad
inc
push
add
fidivs
pop
cmp
pop
adc
xchg
shrl
je
pop
xor
jne
rclb
loope
ds
lock
cmp
xor
ljmp
inc
and
sub
mov
sub
mov
mov
push
jmp
push
or
pop
roll
sub
and
in
cmpsb
pop
mov
cmpsl
test
jmp
pop
into
cwtl
push
ret
fisttps
inc
fldt
fisubrl
dec
bound
movsl
add
ja
in
cmc
out
movsb
les
mov
jns
push
xor
cmp
dec
test
add
pop
or
aas
push
int
data16
addr16
mov
int
ds
fisubrl
add
cli
into
fsubl
sbb
pop
xor
or
addr16
mov
add
jnp
xchg
loope
ja
fsts
xchg
push
test
pushf
add
sbb
jl
xsha256
cmpsb
push
sahf
andb
mov
leave
push
std
enter
dec
in
and
mov
jmp
sbb
xchg
cmc
sub
cli
push
stos
xor
outsb
cs
pop
pop
cli
sbb
mov
xlat
add
repz
mov
or
jno
loop
inc
mov
adc
jno
push
sbb
outsb
fstps
dec
std
pop
jp
cmp
sub
dec
dec
nop
lahf
mull
aaa
jg
jne
shl
and
fstpt
sub
nop
push
dec
out
fdivrl
dec
or
cwtl
cmp
pushf
mov
rcll
mov
dec
adc
mov
mov
xor
add
jno
hlt
mov
fdivrs
push
cmp
int
fwait
jmp
movsl
mov
leave
jecxz
dec
es
rclb
repnz
mov
pop
cmp
dec
call
les
sub
add
loop
ja
cmc
or
cmp
scas
lret
xor
adc
inc
jnp
cmc
push
mov
mov
int3
sbb
jno
sti
pop
in
mov
jg
push
in
adcl
mov
mov
sbb
out
pusha
and
inc
in
test
add
fnstcw
pop
and
dec
out
and
and
inc
pop
or
in
fsubl
pop
and
leave
je
leave
shr
add
test
xor
stc
shrd
cmpsl
push
ss
cwtl
pop
mov
rol
outsb
mov
pusha
enter
sar
mov
into
andb
ja
mov
popa
in
jnp
push
mov
xor
dec
fsubrs
pop
push
divl
cmp
mov
mov
lods
test
xor
cmp
jno
adc
mov
mov
movsl
xchg
fmuls
movsl
sahf
shrb
ss
or
mov
and
repnz
int
dec
pop
xchg
fidivrl
cld
fsubs
xor
gs
repnz
test
lods
jbe
adc
rcr
test
cmp
pop
adc
subl
ret
hlt
sti
sbb
fstpl
xchg
arpl
jp
sbb
fwait
int3
inc
jbe
arpl
adc
icebp
aad
jns
arpl
mov
cmp
out
cli
adc
push
inc
cmpsl
xlat
icebp
imul
sub
mov
pop
cltd
icebp
cli
pop
adc
adc
mov
imul
lods
in
sti
aad
jne
sbb
sub
mov
or
sbb
pop
jge
sub
mov
insl
cld
mov
lcall
aaa
mov
sub
pop
fcomip
fidivrl
out
xchg
popf
insl
sub
lea
add
mov
js
push
pusha
xlat
add
mov
xor
or
adc
push
ficoms
mov
aas
dec
fs
in
mov
pop
mov
loopne
mov
repnz
shl
pop
pop
mov
inc
in
xchg
jg
shlb
mov
or
ret
js
cmp
push
iret
daa
push
std
and
bound
out
mov
dec
insb
pop
push
mov
icebp
inc
pop
test
outsl
xor
inc
fsubl
mov
sahf
inc
fidivl
pop
popa
adc
mov
mov
cmp
pop
jbe
shll
jnp
shr
sub
cmp
das
imul
hlt
shll
adc
loop
add
jmp
mov
pusha
mov
nop
dec
push
mov
xchg
test
pop
hlt
or
leave
adc
jnp
fidivrl
dec
or
sti
loopne
lods
lahf
stos
hlt
ror
outsl
push
add
cmp
inc
lea
dec
pop
out
js
lds
mov
mov
pop
inc
or
pop
insb
ss
and
arpl
cli
xchg
cs
cmp
popf
xchg
inc
dec
jbe
pop
fs
push
cmpsb
das
in
test
bound
xchg
xchg
lea
mov
add
in
push
or
or
mov
add
int3
push
stos
shl
push
pop
xlat
cmp
fldt
mov
lea
xor
ficompl
fs
repz
mov
inc
stos
mov
pop
dec
sbb
sbb
jno
test
push
xlat
inc
fwait
dec
pop
dec
cmp
imul
sub
jge
mov
in
xlat
ljmp
push
jmp
inc
sub
sti
xchg
jb
ret
cli
mov
dec
mov
adc
sbbb
push
movsb
pusha
fistpl
dec
mov
adc
leave
fwait
cmp
inc
insl
mov
sbb
int3
adc
push
cwtl
shrb
push
pop
mov
dec
inc
decb
sbb
imul
or
adc
mov
push
mov
test
and
pop
xchg
or
inc
jnp
push
std
and
jle
hlt
jbe
cs
jl
push
sub
loope
inc
popf
xor
sub
inc
ss
xor
and
test
xchg
subl
fcomps
das
mov
inc
aad
jmp
and
push
imul
out
hlt
pop
mov
jecxz
shrl
mov
jge
or
jae
sub
inc
mov
setge
mov
jmp
lret
jae
xor
mov
enter
and
test
mov
push
mov
push
ljmp
jb
mov
es
lcall
sbb
inc
lock
ljmp
xchg
sub
pop
int3
imul
mov
cmp
push
cmp
scas
inc
jns
jl
push
push
push
dec
adc
sahf
inc
repnz
mov
mov
outsb
movsb
ja
aaa
adc
cmp
pop
fidivrs
int3
push
mov
push
testb
hlt
add
sub
mov
add
sbb
mov
shlb
shlb
pop
push
cli
jp
adc
push
leave
pop
adc
shl
testb
repz
add
jne
dec
data16
mov
and
sbb
xchg
lock
nop
cmp
lret
or
sbb
mov
pop
jge
xchg
and
pushf
xor
inc
push
movsl
dec
jns
add
jmp
andl
jge
jns
nop
daa
mov
and
sbb
push
or
inc
mov
mov
fldcw
adc
cmpsb
mov
fsubl
add
jp
lahf
jo
popf
loope
cwtl
push
stos
lea
add
sbb
fmul
inc
lret
bound
push
or
mov
pusha
pop
xchg
adc
push
jge
sub
and
and
ret
test
outsb
mov
cld
sub
test
fstps
sub
lods
jge
pop
icebp
in
fidivl
xor
into
mov
lret
jg
adc
faddl
ret
push
dec
out
subb
movsl
insb
xor
ret
fistps
add
or
add
stc
cmp
xor
cltd
xchg
mov
xor
add
cld
push
jle
cld
and
pop
out
pop
mov
les
pop
pop
loopne
bound
cmpsb
push
loope
xor
sbbb
jnp
jnp
popf
test
cltd
pop
mov
inc
push
jns
mov
xchg
push
stos
push
sub
cmp
cmp
or
push
add
xor
mov
add
addr16
mov
xor
jle
adc
pop
xchg
xor
hlt
hlt
test
popl
or
dec
shlb
inc
subb
stos
dec
push
xor
sbb
andl
adc
xchg
sub
fsubs
sti
push
call
jnp
fidivs
lds
xor
mov
pop
xchg
sbb
add
pop
xchg
push
mov
jae
ret
fcomps
divb
aad
or
repnz
mov
add
cmp
out
lcall
aas
jg
lahf
ss
pushf
or
pushl
mov
jb
mov
sbb
adc
divb
jns
ss
pushf
mov
xchg
or
jbe
in
xchg
jno
idivl
arpl
push
inc
mov
xchg
fnsave
push
xchg
cmpsl
lahf
and
test
shll
addb
les
mov
mov
xor
lea
cmpsl
lods
mov
test
test
mov
add
xor
cmp
pop
cmc
mov
jmp
xor
jmp
xchg
push
and
dec
in
jg
mov
push
ret
test
or
rorb
xchg
mov
fiadds
or
xlat
insb
jl
mov
ds
lahf
sub
fcoms
jge
ds
adc
sub
jns
jecxz
fcompl
cmp
and
or
out
cmp
push
pop
pop
lods
rolb
test
loope
adc
inc
dec
nop
push
call
dec
or
stos
pop
mov
mov
cmp
push
jne
movsb
cmpsb
adc
clc
adc
ss
ljmp
push
js
sbb
fstps
pop
lock
jmp
stos
stc
cmpsb
negl
add
sub
je
aaa
sbb
lret
xchg
add
push
xor
adc
cmc
xchg
out
lods
xor
gs
nop
dec
les
fimull
mul
mov
testb
sub
xchg
in
je
fnsave
xchg
xchg
and
test
fwait
insl
dec
mov
loopw
out
jle
xchg
into
data16
sbb
std
fsts
pop
movsb
push
inc
pop
pusha
mov
mov
sti
and
inc
data16
or
test
push
xchg
loopne
jp
mov
lods
in
in
and
dec
push
stc
mov
fmulp
and
sbb
cmp
dec
pushf
jno,pn
inc
call
scas
sahf
mov
push
sbb
cltd
mov
out
mov
jge
pop
mov
mov
lret
rcr
outsl
imul
lret
jne
dec
mov
push
cmp
sbb
test
cmp
jb
movsl
mov
sub
adc
xor
call
int
mov
cmp
dec
frstor
or
mov
int
enter
dec
mov
jo
scas
sub
sbb
lcall
add
andb
bound
shl
leave
sub
nop
pop
cli
xchg
lret
outsl
ret
ljmp
shll
pop
insl
jle
fistl
mov
push
mov
roll
adc
out
pop
loop
cs
dec
mov
sub
ss
shrl
inc
ss
xchg
jle,pt
stos
mov
ret
cld
xchg
cmc
lods
rorb
sbb
xchg
jnp
push
lods
jno
jge
push
roll
xorb
sbb
mov
rorb
imul
sub
push
adc
in
fstpt
popf
fadd
dec
cmp
push
icebp
popa
pop
xchg
xchg
adc
outsl
mov
subb
kmovb
dec
cli
or
pop
xchg
cmpsl
jp
jae
dec
insl
add
jge
jbe
adc
cmpsb
in
lcall
ret
dec
lock
and
popf
add
xchg
and
ja
inc
lret
adc
add
xor
push
icebp
and
sbb
pop
popl
mov
xor
mov
call
iret
push
int
das
mov
sub
fnstcw
shlb
mov
out
inc
stos
xchg
xchg
scas
mov
scas
xor
loope
xchg
xchg
jno
pop
rorb
shl
ret
pop
xchg
loope
stos
out
jno
adc
aad
out
js
movsl
mov
pop
ja
add
mov
mov
xchg
call
gs
mov
icebp
rorl
or
jne
daa
cmp
xchg
pop
out
repnz
negb
xchg
or
jge
arpl
popf
and
lods
fwait
repnz
stc
test
arpl
test
test
imul
xchg
and
es
add
enter
cmc
xchg
and
lea
cmp
in
test
shlb
add
or
mov
push
xor
shll
outsl
insb
aam
push
fcoml
rcll
mov
mov
scas
fchs
mov
or
mov
shr
dec
fwait
or
mov
fcomps
jno
cwtl
fcomip
add
xchg
mov
enter
mov
sbb
iret
jle
imul
xchg
mov
out
inc
test
inc
mov
adc
pop
adc
dec
aaa
call
clc
cmp
jecxz
mov
dec
add
jb
lea
movsl
je
xchg
sbbb
xor
lret
jmp
mov
pusha
or
pop
xchg
scas
iret
ret
sbb
cmpsb
adc
mov
xchg
xlat
xchg
sub
mov
insl
in
mov
enter
adc
cmp
js
inc
fbstp
out
dec
pop
and
push
xlat
push
pop
sub
call
push
or
test
mov
scas
rorl
movsl
add
mov
mov
pop
cmpsb
pop
das
mov
movb
lea
cmpsb
cmp
jecxz
vandps
sbb
pop
in
and
fwait
mov
int
inc
aas
les
fsubl
movsb
xor
adc
subl
and
int3
cltd
addl
scas
push
jmp
jp
popa
adc
xchg
push
dec
cmc
push
mov
testl
lret
dec
pop
mov
icebp
or
jp
push
dec
cmp
call
int
adc
lds
mov
fistps
in
in
popf
push
enter
dec
es
add
inc
movsb
mov
decl
and
xchg
btc
push
and
push
sbb
in
test
daa
ja
pop
sahf
dec
sbb
jecxz
mov
adc
enter
mov
mov
xor
mov
dec
pop
mov
xor
sbb
mov
or
test
ds
xchg
loop
cvtss2si
sbb
repnz
push
jno
clc
cmc
arpl
dec
movsb
inc
lea
pop
adcb
add
pop
cli
pop
inc
pmovmskb
jle
mov
dec
hlt
xor
outsb
ljmp
nop
push
push
jno
aad
std
andl
cld
sbb
testb
rorb
icebp
mov
cmp
adc
cmp
mov
repnz
jmp
dec
popa
pop
insl
xchg
push
and
aaa
sbb
addr16
sub
outsb
or
outsl
cli
or
scas
inc
push
pop
jmp
in
adc
add
stc
nop
inc
jmp
add
inc
lock
lret
iret
mov
movsl
call
xchg
lock
sbb
inc
inc
mov
movsl
data16
xchg
dec
int
jmp
ljmp
and
js
lret
stos
inc
pushf
adc
dec
jo
incb
scas
pop
mov
sub
or
icebp
sub
jmp
sbb
jne
mov
inc
fnsave
dec
in
push
adc
push
int
cmpsb
js
cltd
lea
pop
ljmp
jno
into
xlat
ja
lahf
mov
out
pop
nop
in
repnz
dec
jmp
lcall
or
and
loope
pop
xor
stos
jnp
in
daa
int3
mov
cmc
nop
dec
mov
movl
sub
fbstp
nop
jmp
add
outsl
xor
mov
dec
bswap
fsts
imul
sbb
pop
pop
test
sahf
sub
test
hlt
jno
nop
mov
xchg
jg
stos
sbb
bnd
xchg
pusha
inc
pop
aaa
int
cmpsb
push
jbe
mov
shrb
data16
call
add
adc
icebp
aas
seta
add
mov
out
and
xchg
adc
ja
outsb
clc
ljmp
adc
ljmp
outsb
mov
jo
in
ja
outsb
test
jnp
mov
hlt
mov
jb
jmp
or
arpl
test
fnstcw
xchg
mov
mov
aad
into
repz
in
sahf
loop
call
or
sti
stos
js
sbb
outsb
mov
movb
adc
into
xchg
fidivs
aam
fisttps
jb
aam
mov
loopne
dec
dec
cmp
cmpsb
jecxz
mov
dec
sbb
pop
mov
jne
inc
fldt
cmp
adc
popa
add
rcll
daa
rorl
or
lahf
sbb
std
jg
adc
sbb
call
addr16
popf
outsl
xchg
shrl
insb
pop
adc
sub
cmp
xchg
pushf
or
pop
out
clc
imul
aad
outsb
jmp
jo
mov
data16
sarl
and
stos
jge
cmpsl
or
pop
jno
popa
cli
pusha
xchg
jns
int3
add
push
push
jb
cs
lds
sub
fists
jb
inc
pop
sahf
sahf
add
outsl
adc
xor
mov
jb
insb
cli
insl
jp
adc
and
loop
adc
push
mov
and
cld
sar
sub
leave
sti
sbb
stos
and
out
clc
pusha
mull
ret
jle
push
inc
fwait
xor
out
lahf
mov
inc
push
pop
xor
repnz
sbbl
pop
lods
mov
mov
push
jmp
inc
scas
imul
daa
sahf
xor
sub
int3
in
in
test
xchg
mov
pop
dec
rclb
ret
dec
fsubrp
fadds
lcall
test
lcall
test
inc
stos
cmpsb
hlt
inc
pop
lret
lret
mov
out
pop
cmc
popf
das
pusha
xorl
or
cmp
mov
stos
xchg
aas
std
lods
dec
xor
adc
mov
jmp
jle
mov
neg
mov
sti
iret
cmp
sbb
mov
push
in
xor
lods
sub
sbb
jns
and
in
imul
jo
pushf
gs
inc
fimuls
add
lock
and
test
adc
outsl
xchg
js
push
mov
imul
fbld
jp
mov
jge
fnsave
sahf
jno
sbb
ret
ret
or
push
cmp
imul
aas
rolb
movsb
pusha
sbb
inc
or
cld
pusha
adc
bound
sbb
mov
in
movsb
mov
aaa
stos
push
jge
addr16
adc
cli
test
in
add
in
cmp
jge
mov
fbstp
loopne
dec
sahf
and
lret
shlb
jl
xor
xor
mov
jle
or
xchg
das
aas
loopne
fwait
pushf
xor
adc
dec
out
arpl
dec
dec
testb
push
xor
in
mov
repnz
icebp
mov
sahf
push
xor
out
insl
fcomi
cmc
popl
push
pushf
addr16
sbb
dec
xchg
push
call
lahf
fucomp
dec
mov
das
les
dec
arpl
mov
fcmove
inc
xchg
push
cwtl
ret
jmp
cmpl
inc
mov
movsb
nop
ficomps
adc
iret
data16
mov
sbb
loopne
arpl
loop
mov
in
pop
xchg
nop
pushf
jno
mov
lea
call
sbb
pusha
mov
sbb
jnp
daa
jno
xchg
in
lods
pop
mov
in
scas
jmp
ja
and
and
cmp
loope
test
sub
int3
lea
cmpsb
insl
push
xor
fcompl
mov
xchg
mov
call
xorb
mov
repz
jne
outsb
mul
js
cld
sbb
fld
dec
clc
jae
push
jmp
into
jns
enter
dec
fstps
dec
fwait
jp
flds
jmp
adc
shrl
rolb
notl
bnd
xor
andb
xor
dec
xorl
aas
arpl
jns
jle
pop
lcall
notb
mov
lods
xor
mov
pop
lds
lret
jb
bound
inc
dec
jecxz
push
int
fnsave
lods
inc
test
popl
int3
push
push
push
js
js
xchg
add
lods
fnsave
movsl
jae
adc
mov
xchg
or
pop
pop
fdiv
cltd
adc
cmp
mov
sub
mov
adc
out
fbld
into
cli
in
cmp
adc
cmp
bound
cli
int
adc
and
add
bound
ret
xor
test
mov
aas
fmuls
mov
repz
pop
and
xor
jge
sub
maskmovq
inc
inc
and
adcb
pop
lea
out
lds
cmp
loope
arpl
sbb
icebp
inc
subl
mov
add
or
sub
and
ficoml
je
lock
dec
scas
lods
xlat
jne
lock
and
ss
push
sbbb
fcompl
sub
in
imul
daa
and
stc
cmp
cmp
insl
sub
mov
sbb
pop
call
lock
pushf
adc
lret
push
bswap
lea
jno
mov
or
movsb
xlat
leave
test
or
or
sbb
shrl
mov
push
mov
jnp
push
xor
out
mov
ret
jne
decb
cmp
and
rorb
popf
ds
adc
arpl
sbb
jl
sti
pop
aaa
sub
sub
xor
add
push
xchg
adc
addr16
jne
mov
add
xchg
sub
pop
jp
aad
pop
mov
adc
sbbb
out
std
cmp
mov
pop
hlt
pop
mov
or
enter
cmp
pop
mov
shlb
mov
in
movsb
int
jecxz
add
shrl
mov
and
lret
xchg
mov
sub
jg
push
sub
hlt
xor
add
push
es
xor
in
es
mov
pusha
dec
shr
mov
jp
aad
cmpsb
les
xor
scas
mov
push
scas
in
mov
stos
inc
pop
stos
mov
je
enter
sub
insb
push
sub
adc
xor
in
push
orl
xchg
das
sbb
lock
movsl
cmp
dec
pop
idivl
pop
movsb
scas
push
fisubl
adc
sub
cli
mov
jl
ljmp
xchg
shll
push
mov
repnz
mov
mov
fisttpl
sbb
aad
aas
mov
jge
imul
andl
pop
adc
push
jns
mov
jecxz
stos
push
adc
pop
jle
mov
in
das
kmovw
push
dec
jmp
stc
lea
jge
xor
cmpsb
or
enter
imul
xor
rol
fiadds
mov
cmpsb
mov
fucomp
sbb
out
cmp
mov
ret
xor
or
pop
pop
iret
cmp
or
pop
inc
xchg
push
and
icebp
js
ljmp
lods
mov
subl
adc
add
and
xor
test
cli
mov
cmp
dec
jne
adc
xor
lcall
aam
push
push
imul
mov
sub
jns
and
mov
addb
jne
push
mov
xor
sbbb
je
push
fildl
mov
jmp
repnz
sbbl
sbb
jnp
pop
or
mov
lock
loopne
lds
btc
rol
or
rcll
or
pop
dec
mov
or
add
pop
enter
enter
pop
hlt
or
sbb
cs
mov
fsubrs
dec
pop
adc
adc
pop
sbb
push
pop
or
jmp
nop
shrl
mov
in
jge
or
push
cmp
mov
fcomps
pop
mov
sbb
mov
testb
and
cltd
lock
je
pop
push
iret
cmpsb
jl
les
sub
or
xchg
test
xchg
jmp
or
jns
and
divl
outsl
mov
insl
lret
pop
jne
sbb
lea
add
repz
sub
and
mov
push
cmp
test
jecxz
inc
or
jge
outsb
outsb
rcll
push
xlat
mov
mov
scas
loop
sbb
rclb
mov
testl
push
sbb
loopne
inc
pop
jg
ljmp
in
xchg
test
mov
xor
lcall
int
stos
shrl
and
ficompl
cmp
iret
addl
inc
pop
fcmovu
pusha
jl
xchg
add
mov
mov
fdivl
and
mov
jmp
or
in
or
insb
add
rorb
aam
bound
or
inc
pop
std
in
fidivs
and
xlat
mov
inc
out
or
or
fsubrs
mov
addr16
adcb
cmc
push
or
les
mov
pop
jl
or
mov
or
enter
scas
mov
shlb
dec
notl
dec
dec
push
sahf
test
push
loopne
mov
jmp
or
mov
gs
lret
dec
dec
cmp
jne
jno
lret
push
jmp
fisubs
mov
sarb
imul
sbb
loop
dec
loopne
bound
fs
into
mov
adc
cmc
sbb
inc
call
popa
fcomps
outsl
addb
add
test
xchg
xor
das
or
and
jmp
inc
adc
into
fs
and
sbb
and
mov
clc
ret
hlt
sbb
inc
and
ds
ret
bound
cmpsl
xchg
and
js
clc
fdivs
adc
push
push
push
cmpsl
or
jmp
adc
jb
sahf
cmp
xor
leave
cmp
pop
hlt
js
mov
xchg
jnp
push
inc
pop
mov
icebp
test
rorl
and
push
test
jns
push
incb
fldenv
and
or
fisubrs
and
cmp
mov
stos
push
and
aad
push
push
stc
xchg
xchg
repz
adc
mov
lods
inc
scas
sbb
ror
inc
lret
lock
scas
inc
mov
dec
or
mov
sbb
enter
ds
pop
jo
inc
pop
pop
jne
mov
inc
sub
mov
in
pusha
rcrl
ret
in
leave
fnsave
jmp
xor
pop
jmp
inc
or
shrl
lods
call
insb
arpl
outsl
adc
cmp
pop
sub
aaa
into
and
adc
jbe
mov
sbb
mov
pop
imul
aas
cmp
sub
rcl
jbe
dec
sub
dec
sbb
repz
call
icebp
stc
nop
and
gs
pop
scas
das
dec
jl
fwait
jl
jg
adc
xor
call
sar
sbb
add
cwtl
fwait
cmpsl
leave
add
sar
fcoml
rorb
dec
popa
mov
add
sub
inc
dec
cmp
dec
push
xchg
jle
js
stos
jnp
lret
mov
sbb
aad
in
clc
or
pop
inc
das
je
popa
and
add
xchg
and
bound
arpl
sub
sub
push
stc
xchg
jb
in
sarb
cmp
cmp
shl
cs
pusha
pop
pop
hlt
mov
cmp
mov
lahf
in
sbbl
mov
imul
or
popa
ja
mov
test
inc
fldenv
in
stc
jns
in
lcall
pop
lds
sarb
jmp
ret
pop
aad
cmp
jp
pop
incl
xchg
lret
jne
jle
push
sub
jno
icebp
fstp
push
test
js
or
sub
sbb
pop
int3
pop
and
inc
mov
loope
xchg
gs
bound
out
jne
and
dec
outsl
lret
adc
dec
data16
cmp
xchg
imul
stos
ljmp
mov
outsb
push
mov
gs
imul
cmc
jnp
push
lods
jmp
or
sbb
stos
pop
cltd
mov
and
add
push
xchg
adc
pop
daa
push
xor
loopne
repnz
std
jns
and
lcall
mov
ja
mov
andl
pop
fwait
test
shl
das
jbe
in
jnp
mov
cwtl
mov
out
in
jmp
and
mov
cmpsl
inc
pusha
clc
mov
adc
lods
jg
out
xor
inc
inc
int3
or
add
dec
add
xor
and
jnp
mov
jne
xor
jae
or
loop
mov
daa
xchg
lock
sbb
jp
xchg
sub
lds
mov
jp
mov
dec
jg
mov
jp
es
std
xchg
adc
jmp
popf
xchg
aas
push
mov
arpl
mov
add
rol
fdivp
inc
pop
div
cmp
cmpb
dec
sub
xor
std
sahf
aad
in
mov
pop
jge
adc
jmp
int
and
movsb
movsb
add
xchg
add
mov
je
test
or
out
scas
add
jge
sub
sub
imul
sbb
gs
inc
adc
pop
sub
or
stc
push
pop
jle
sbb
cmp
sub
xchg
pop
out
mov
and
xchg
and
xchg
lcall
add
xor
cmp
adc
popl
adc
lock
and
lahf
js
jmp
mov
fstp
push
mov
sbb
insl
and
imul
lods
test
fisubl
jo
sub
hlt
cmpsw
mov
out
xchg
fistl
inc
fnstenv
push
push
repnz
test
dec
jecxz
mul
inc
pop
ja
test
cmpsb
data16
in
and
testb
push
lret
aam
icebp
mov
data16
adc
or
lahf
mov
scas
pop
cmp
ss
cmpl
sbb
xor
xor
jge
call
fs
adc
aas
cwtl
enter
xchg
in
div
mov
cmp
icebp
adc
cwtl
mov
dec
rol
push
out
push
outsl
pop
out
inc
ret
mov
and
arpl
sahf
push
in
xor
call
nop
push
xor
popa
and
adc
xchg
push
adc
mov
movsb
jb
pusha
nop
out
pushf
roll
jnp
dec
mov
cli
sbb
out
shrl
icebp
orb
bound
xchg
mov
outsb
nop
test
in
movsl
push
mov
sub
jmp
push
sarl
push
push
outsl
loop
aam
jl
in
push
gs
sti
data16
fdivs
pop
add
sbb
push
lret
addr16
jne
or
and
inc
mov
push
lea
out
sbb
stc
popa
icebp
adc
sbbl
das
or
lret
das
push
xchg
pop
sub
ror
mov
andl
lea
std
add
and
adc
out
movb
aam
pop
aam
lods
pop
cmp
cmpl
cld
lcall
in
das
cmpsb
mov
outsb
roll
jle
xchg
orl
hlt
mov
lds
clc
subb
dec
into
es
std
pop
lods
dec
movsl
push
and
loop
fsubrs
sbbl
lock
push
lret
pushf
mov
adc
cmp
cltd
bnd
nop
pop
xchg
fwait
test
push
sbb
fwait
rolb
xchg
jbe
sub
movsb
bound
repz
ret
hlt
sbb
mov
enter
mov
mov
pop
stc
add
imul
cmp
jmp
jbe
jecxz
sarl
jle
mov
xor
mov
jo
aam
xchg
mov
mov
or
cmp
loopne
dec
insb
shr
push
pop
sbb
repz
pop
xor
pop
xor
les
push
push
jmp
xor
rolb
and
sbb
out
jecxz
cld
outsl
xor
imul
je
dec
arpl
push
jo
dec
dec
sbb
call
movsb
clts
xor
jmp
mov
cmp
xchg
xor
or
xchg
push
pop
xlat
mov
jp
loop
dec
mov
test
and
jmp
and
inc
sub
pushf
sbb
push
test
imul
repnz
mov
andb
pop
jp
sub
dec
mov
je
aad
jnp
sbb
pop
js
les
movsb
and
outsl
jmp
jae
push
stos
subb
sbb
stos
dec
push
icebp
enter
outsl
ss
out
mov
lret
inc
aas
ss
bound
lock
jge
ja
adc
cmp
rcl
cmpsl
loopne
or
cmpl
xchg
fs
sbb
push
jmp
add
fdivs
inc
xchg
push
mov
mov
push
sub
test
mov
arpl
cmp
pop
jno
popf
or
inc
movsl
cmp
push
in
jne
adc
clc
es
sbb
mov
dec
jl
jo
mov
repz
add
sbb
cwtl
mov
out
xchg
jge
inc
or
mov
push
mov
cwtl
pop
les
sbb
push
pop
ljmp
mov
lds
out
mov
leave
sub
mov
in
adcl
jmp
jecxz
ja
mov
lock
pop
scas
cmc
cltd
fildll
fs
xlat
push
imul
outsl
pushf
aas
cs
mov
sbb
mov
jb
test
sub
adc
pop
xchg
cmp
mov
xor
gs
or
cmpsb
bound
dec
daa
lret
lds
das
mov
loop
adc
stc
stos
loop,pt
out
stc
mov
pusha
ret
pop
aaa
push
aaa
mov
mov
mov
push
sahf
push
jo
jnp
xchg
pop
loopne
inc
pop
in
push
cmpsb
xor
ret
mov
jge
sub
lret
fsts
add
loopne
cmpsb
and
mov
pop
xchg
popa
dec
dec
dec
dec
addb
rcll
rol
jmp
nop
std
icebp
movsl
std
nop
gs
pop
xchg
inc
gs
cmpsl
pop
jo
call
ja
testl
aaa
xor
movl
mov
mov
push
icebp
xor
push
xor
mov
cld
and
sub
hlt
push
lcall
clc
in
sbb
adcl
push
sbb
xrelease
push
repnz
adc
or
cs
call
cmp
stos
mov
stos
ret
push
sub
dec
aad
mov
pop
mov
xchg
lret
cltd
mov
out
inc
mov
in
das
jecxz
pop
outsb
xchg
xchg
jle
and
dec
push
imul
lret
pop
movsb
aaa
iret
test
mov
int
enter
push
add
fwait
das
jmp
xchg
jp
loop
mov
adc
push
sbb
addr16
jae
sub
int3
arpl
mov
popf
icebp
insb
popa
orl
or
mov
jg
sub
sti
mov
das
and
rcrb
adc
sbb
fcompl
imul
imul
mov
jle
idivl
lock
jb
push
xchg
add
call
ljmp
insb
mov
adc
pop
lock
inc
pop
out
xor
mov
cmp
inc
shlb
pop
pcmpeqb
xor
imul
lods
fcoml
dec
dec
fld
cmp
sub
sarl
add
adcl
or
pop
lock
inc
push
test
loop
gs
out
out
xchg
int
mov
arpl
cld
lods
dec
or
jle
sub
rcl
sub
in
repnz
mov
and
sub
jmp
xchg
cmp
sub
adc
pushf
and
popf
push
adc
and
sbb
sbb
mov
lea
jg
cmp
jnp
xlat
sbb
ljmp
jg
nop
push
inc
repnz
lret
imul
mov
mov
or
adc
pop
inc
hlt
sub
scas
fcoms
or
pop
lock
sub
loop
mov
xor
fmulp
or
test
aam
mov
mov
or
adc
hlt
and
mov
mov
lret
cltd
int
add
mov
andl
out
stos
ds
pushf
sbb
stos
cmp
add
sbb
pop
or
xor
cwtl
cmp
stos
pop
das
and
xchg
pop
in
pusha
sbb
and
icebp
mov
rcrl
xchg
xchg
pop
mov
sbbb
jp
rcll
cmp
ljmp
lods
iret
out
and
adc
mov
pop
rcl
mov
stos
outsb
in
mov
lods
pushf
push
aaa
lods
pusha
decl
inc
pop
loopne
pusha
xchg
push
and
insl
stos
jo
daa
xlat
incl
inc
xor
xlat
dec
push
sub
inc
jge
popa
lcall
xchg
insl
xor
clc
and
sbb
push
fwait
xlat
xchg
nop
shrl
sbb
icebp
xor
mov
fisttps
je
outsl
mov
daa
cmp
mov
fiadds
push
addr16
mov
sti
mov
add
cli
lret
stos
push
and
stos
inc
and
ja
mov
dec
sbb
dec
adc
push
popa
pop
cmpsl
mov
xchg
mov
lods
add
out
sub
mov
or
mov
inc
int
jmp
int
call
pusha
sti
ljmp
iret
ds
mov
push
fdivr
pop
jnp
push
addr16
jg
lods
lods
aas
mov
inc
sub
sub
roll
mov
lods
push
push
ljmp
nop
cli
insl
jmp
ret
lret
pop
scas
mov
test
fisubrs
mov
adc
jge
fldcw
push
mov
cmp
imul
insl
scas
inc
lahf
xor
cwtl
push
mov
arpl
test
and
or
pushl
mov
loop
jg
pop
loope
mov
adc
rep
cmp
xor
jge
aaa
aas
adc
fdivrs
push
insl
into
outsl
push
sbb
fs
jo
sbb
mov
fistpl
or
rorb
stos
sbb
cmpsb
cmp
mov
std
sarb
loopne
movsb
cmc
and
imul
sbb
lahf
rclb
adc
ss
std
cmp
mov
sbb
lcall
push
fisttpl
rol
jbe
jge
lea
dec
jp
xor
in
cwtl
pop
hlt
and
fcom
lods
in
cmc
adc
inc
push
and
outsb
repz
inc
mov
and
popa
xchg
xor
imul
fcmovnb
in
lods
pop
push
mov
cs
ljmp
or
mov
mov
outsl
dec
or
and
sbb
repz
jle
clc
in
dec
xor
adc
pushf
out
jle
das
fcmove
sub
rcll
xchg
mov
sub
insl
sti
pop
cltd
pop
sub
ljmp
inc
std
idiv
mov
pop
jg
ja
jb
and
dec
stos
xchg
dec
dec
mov
jno
cld
ja
adc
fistl
out
push
push
mov
sbb
out
mov
jbe
adc
add
test
imul
cli
aad
hlt
mov
test
test
ret
mov
clc
push
out
cmpsb
std
dec
or
xchg
jmp
jns
dec
or
sub
insb
movsb
ja
mov
xchg
adcb
rcl
sbb
xchg
cmpsb
pop
shlb
mov
inc
mov
iret
cmc
push
fbld
and
out
jns
aad
ficomps
mov
and
enter
mov
ret
sahf
xor
dec
nop
inc
loopne
mov
shll
inc
adc
shl
mov
mov
aam
pop
and
in
std
jnp
or
stos
add
mov
cmc
pushf
lods
jge
aad
into
and
push
js
jbe
xchg
jp
mov
mov
insb
mov
mov
imul
pop
call
sbb
jecxz
xor
mov
loop
push
xchg
jp
and
lods
mov
push
push
incl
and
mov
add
add
push
jmp
in
push
hlt
dec
int3
ficomps
xchg
inc
or
pop
cmc
cmp
fisttps
out
push
mov
pop
inc
xchg
jns
sti
mov
sub
iret
jb
cmp
mov
jl
jl
sti
test
stc
xchg
lea
or
gs
lea
mov
mov
ficompl
pop
pop
lea
test
xchg
aam
pop
fildll
sbb
adc
hlt
pop
cmc
mov
push
jl
xchg
add
mov
outsl
ljmp
and
adc
adcb
icebp
mov
sbb
lea
cltd
mov
aam
push
cli
dec
testb
scas
fistpl
pop
in
jb
repz
add
sbb
cli
pushf
push
arpl
mov
and
push
xchg
repz
fnsave
mov
or
or
mov
subl
loopne
xor
dec
addr16
and
mov
lock
xchg
scas
push
into
xchg
arpl
dec
cmp
and
jbe
mov
roll
push
xlat
sbb
dec
in
cmp
mov
jne
pop
in
test
js
sub
pop
sbb
popf
mov
mov
pop
inc
sub
test
mov
sub
in
enter
mov
out
aas
sarb
cmpsl
out
mov
std
or
cltd
pop
stos
cmp
jle
cmp
sarl
sub
ljmp
mov
or
sub
jne
mov
add
jb
jl
std
xchg
mov
dec
or
lahf
dec
pusha
popf
jg
push
and
xchg
call
sbb
roll
lock
dec
cld
xchg
fidivs
ficoml
cmpsl
mov
sbb
push
insb
fucomip
popf
aaa
jo
popf
in
jl
scas
lea
fdivs
sbb
sub
cld
pop
aaa
cltd
mov
cltd
aas
xor
sti
stos
lods
jo
push
mov
mov
push
sti
out
inc
mov
test
xor
inc
shr
fwait
cli
dec
loope
test
pusha
orb
out
xor
and
dec
addr16
repz
or
dec
std
into
xor
sub
cmp
div
dec
mov
ret
lcall
jne
mov
out
into
imul
lods
xchg
repnz
add
fwait
cmpsl
repnz
sub
fwait
push
and
test
mov
adc
int3
pop
rcrb
inc
mov
insb
repz
pop
add
mov
stos
pop
ret
push
jno
or
outsb
jl
es
xor
cmpsl
push
xorl
lcall
mov
lods
aad
mov
sbb
inc
movb
or
test
lods
int
or
mov
add
pop
jae
push
mov
jne
lods
aad
faddp
and
out
jg
push
cmp
lcall
call
rcr
out
mov
or
gs
notl
xchg
xchg
in
xor
push
js
or
sar
add
test
adc
push
sub
lahf
arpl
aam
push
test
xchg
mov
int3
fstl
cli
or
dec
lahf
push
stc
les
inc
sub
inc
pop
rorb
and
lock
push
or
sub
mov
fisttps
and
sti
sbb
shlb
mov
xor
jbe
int
mov
mov
add
negb
mov
sub
fwait
ja
xchg
add
xor
inc
xor
cmp
enter
adc
stc
inc
stos
dec
sbb
lahf
mov
rorb
or
fnstcw
je
cwtl
pop
fwait
xlat
push
mov
xchg
sub
or
mov
stos
push
mov
ja
frstor
sub
je
sarb
test
hlt
iret
cmpsb
mov
mov
push
inc
daa
imul
or
dec
add
adc
sub
bound
fmull
dec
push
mov
rol
dec
pop
and
xor
pushf
repz
stc
test
xor
cmpl
pop
inc
inc
das
jle
mov
mov
stos
or
cmp
cmp
mov
fistps
ljmp
scas
hlt
cmp
shrb
imul
adc
mov
cs
imul
iret
or
dec
out
mov
or
lahf
xchg
cli
sahf
xchg
daa
in
aam
out
in
popa
inc
mov
in
stc
push
imul
push
in
rorl
mov
pslld
dec
push
les
cmp
inc
mov
sarb
xchg
in
or
mov
fcompl
cmp
in
pop
addr16
das
aaa
fcoml
call
inc
out
mov
and
aam
scas
mov
add
stc
lock
clc
lret
adc
mov
sbb
test
int
out
fldt
arpl
mov
hlt
xchg
imul
mov
or
push
mov
mov
dec
movsl
repnz
hlt
sbb
xlat
cmp
hlt
jne
leave
adc
or
vpshufd
mov
inc
sub
imul
nopl
lods
cs
loopne
dec
xchg
mov
and
mov
jbe
jmp
test
push
push
cmp
lods
pop
addr16
jg
iret
mov
sbb
faddl
push
in
enter
push
jmp
and
add
leave
test
xor
sbb
jmp
xor
push
cmc
xor
movl
rcrl
sbb
adc
and
pusha
lret
lock
dec
pop
or
ja
and
mov
xchg
test
push
cmc
dec
jno
imulb
mov
sbb
dec
or
xlat
arpl
in
pop
pop
cwtl
mov
pop
dec
mov
mov
jmp
sbb
adc
scas
fiadds
push
fsubs
dec
cwtl
test
dec
cmpsb
inc
int
xor
or
xchg
ja
mov
rorl
pop
and
test
mov
mov
jmp
in
ret
addr16
adc
int3
ret
out
scas
mov
add
scas
push
aad
mov
jmp
orb
add
repnz
xor
rorl
loop
and
sbb
mov
pop
imul
sbb
xor
ljmp
push
pop
sub
into
rol
lret
dec
dec
push
imul
pusha
jmp
xlat
imul
dec
aam
out
pop
inc
int
push
inc
inc
push
rclb
jb
into
push
lahf
sbb
inc
cld
movsb
sbb
push
les
mov
test
mov
jmp
mov
push
cwtl
fs
add
jg
or
and
scas
pop
pop
xor
sub
mul
lea
lret
mov
mov
sahf
push
xlat
iret
xchg
aaa
lock
sub
arpl
cmp
push
jmp
stos
adc
nop
add
mov
and
mov
cmp
pop
daa
js
lcall
stc
mov
cmp
cltd
es
inc
pop
push
mov
and
es
add
adc
jb
and
fmull
fildll
into
data16
or
fistps
mov
inc
push
ret
popa
shll
stc
inc
xchg
pop
insl
dec
jns
stos
lods
adc
mov
adc
negl
enter
arpl
imul
repnz
fdivs
mov
shl
xor
jmp
dec
or
dec
pop
inc
cmp
and
and
inc
inc
fcompl
fs
inc
jle
mov
loopne
pop
adc
jp
clc
sub
leave
pop
dec
xchg
cmp
xchg
sub
mov
popf
mov
jmp
sbb
subl
fwait
push
out
test
insb
out
ljmp
ljmp
push
outsb
jl
sbb
enter
sub
pop
mov
clc
xchg
push
int
xor
sahf
mov
fisubl
push
cltd
bound
xchg
mov
aad
mov
fisttpl
push
pop
hlt
cmpsl
aas
cmp
and
jnp
in
jmp
jno
punpcklbw
pop
ja
jne
das
fwait
test
dec
jl
shrb
push
sbbl
pusha
lods
enter
clc
push
loop
mov
xor
ljmp
add
daa
imul
int
dec
cmpsb
xchg
mov
or
and
addb
inc
sbb
sbb
add
jne
inc
and
lods
fdivr
and
add
imul
sti
pop
cmp
and
push
jae
sbb
shlb
into
cmpl
inc
mov
loope
mov
pop
mov
mov
mov
add
mov
mov
adc
mov
rolb
out
mov
xchg
add
sbb
mov
out
fists
neg
inc
clc
mov
lock
jae
dec
mov
inc
fadds
lock
and
aam
push
pop
ss
xlat
xor
dec
add
jmp
sti
mov
bnd
and
fst
xchg
aam
or
mov
xchg
je
sub
outsl
mov
push
out
rcrl
and
shrl
mov
clc
stc
or
dec
push
fisttpll
popa
iret
inc
dec
jecxz
or
mov
inc
push
mov
mov
js
into
outsb
ret
scas
insl
rclb
mov
imul
xchg
mov
adc
lret
stc
loop
lret
ja
jb
adc
xor
into
jns
mov
ficoml
push
xor
idivb
add
test
jecxz
mov
dec
mov
or
sti
fsubrs
sub
sbb
jp
sbb
leave
pop
xor
push
inc
pop
repz
dec
adc
iret
jecxz
into
and
push
cwtl
shr
xor
mov
add
clc
dec
movsb
xchg
jne
movsl
testb
jg
sub
push
inc
xor
mov
bnd
ret
push
ret
adc
inc
pop
aas
adc
nop
cmp
and
sbb
pop
scas
in
loop
mov
adc
imul
push
xchg
daa
add
stc
jno
adc
daa
inc
pop
pop
testl
leave
loopne
cmc
push
push
add
test
sti
or
add
pop
cmp
cmpsb
dec
mov
aam
jmp
pop
or
cmp
scas
add
out
test
ss
mov
icebp
sahf
jae
pop
mov
jl
lods
cmp
cmp
jecxz
es
pop
fwait
xor
in
xchg
xchg
int
cmpsb
in
fstps
mov
pushf
cmp
sbb
mov
fimuls
mov
xor
push
out
dec
cli
jmp
sub
cmpsl
shll
pusha
fcmovb
or
sub
mov
or
xchg
mov
xor
xor
movsl
std
enter
sub
ljmp
adc
fmulp
inc
jecxz
test
mov
mov
inc
js
jo
xchg
pop
jb
add
repz
stos
inc
inc
push
jns
inc
test
or
popa
sub
cs
adc
xlat
or
inc
pop
popf
or
dec
jnp
fsub
shr
push
cld
mov
cs
cmp
shll
mov
dec
sub
xchg
pop
cmp
lahf
pushf
inc
cwtl
sbb
or
cmp
popf
push
xchg
lcall
add
push
sub
loop
mov
movb
loopne
fwait
mov
add
fsubrl
xorl
xor
ret
popa
push
mov
pushf
jnp
insb
add
sub
mov
imul
hlt
sti
addr16
mov
in
clc
adc
fdivs
xchg
pop
jecxz
adcb
jg
lock
mov
bound
loopne
int3
pop
fildll
dec
es
testb
adc
push
xchg
inc
ror
fadd
out
jl
push
push
dec
lea
loope
call
lahf
dec
pop
jno
sti
push
push
movsb
push
repz
xchg
xlat
pop
imul
inc
gs
mov
inc
mov
sbb
mov
ja
pop
notb
lahf
pop
addr16
fsubr
mov
sub
or
jb
mov
sbb
lret
sub
repnz
movsl
cmp
fdivrp
shrl
mov
cmp
push
jmp
mov
pop
and
mov
cmp
imul
sbb
xor
xor
std
leave
jmp
vpunpckhdq
adc
adc
test
les
imul
jmp
out
or
pop
mov
cmpsl
add
pop
pop
pop
adc
mov
insl
lahf
sbb
fs
std
or
inc
out
ret
fdivs
pop
mov
xor
dec
sarb
in
test
pushf
add
jo
mov
testl
pop
dec
jbe
jle
loop
sub
or
repz
push
dec
iret
lds
fidivs
mov
mov
and
or
cmp
movsb
cmp
adc
iret
shll
ficompl
xchg
push
hlt
xchg
sub
mov
cs
out
xor
cmp
jp
test
rclb
lret
xchg
adc
sahf
mov
cmpsl
push
loop
adc
and
pushf
xor
in
je
xchg
xor
sub
pop
loope
fldt
fidivs
decl
or
mov
xchg
or
pop
aad
clc
mov
subl
xor
and
inc
inc
jns
jbe
adc
popf
xchg
mov
rcrl
add
std
and
dec
jmp
in
jmp
and
pop
test
or
mov
int
lock
fucomip
fnsave
int3
inc
sahf
syscall
pop
mov
loopne
out
fisttps
mov
outsb
enter
mov
xor
repnz
sub
sub
mov
repnz
sahf
xor
out
mov
pop
rolb
js
in
jbe
mov
cli
jnp
dec
mov
sbb
in
jno
sub
lcall
mov
out
xchg
out
mov
pop
add
mov
dec
xchg
mov
xlat
dec
mov
sarb
mov
inc
sbb
mov
xor
outsl
inc
mov
cmc
inc
xchg
scas
xor
inc
inc
mov
jns
sbb
lds
mov
jae
cli
repz
dec
imul
in
push
pop
jl
std
mov
pop
mov
fidivrl
adc
test
iret
xor
push
aas
rcr
inc
lcall
inc
cwtl
ja
jle
add
jl
loope
popa
ss
dec
sub
mov
cltd
fsts
pop
hlt
push
rol
xchg
es
and
dec
sbb
mov
imul
imul
xchg
xor
pop
or
loope
sub
mov
arpl
mov
insl
clc
add
ss
adc
mov
out
mov
ljmp
loopne
lahf
adc
gs
ljmp
mov
imul
fwait
sbb
jnp
mov
jmp
mov
dec
jle
es
xchg
hlt
mov
jl
lcall
inc
xor
push
mov
bound
mov
mov
ds
pop
cmp
insb
sub
and
or
je
dec
ficoml
scas
sub
filds
mov
and
insl
xchg
add
hlt
fucomi
xor
into
jnp
outsb
jno
mov
dec
scas
mov
push
jno,pt
or
xchg
dec
insb
scas
mov
pop
inc
fisttpl
mov
xchg
mov
std
push
out
outsl
and
mov
mov
cmp
mov
push
lcall
js
lods
sahf
aaa
data16
aas
shll
aas
testl
or
stos
push
xor
dec
in
inc
fsubs
cmc
hlt
pop
scas
ret
test
or
push
cld
push
in
dec
in
arpl
nop
adc
pop
lret
mov
aad
incb
stos
pop
xor
jbe
sahf
sbb
mov
jno
fdivrl
pop
jns
jmp
hlt
jg
inc
mov
push
and
testl
mov
push
sbb
fisttps
dec
inc
out
testl
sub
jl
adc
and
mov
fisttpll
add
fstl
adc
xor
pushf
sub
rolb
mov
push
or
mov
push
xlat
pop
add
gs
out
mov
leave
ljmp
cli
add
and
push
sahf
adc
imul
pushf
xor
arpl
cmpsb
repz
popf
xor
push
fdivr
test
fidivs
push
dec
dec
fisubrs
and
das
lahf
cmp
or
pop
mov
xchg
fimuls
inc
test
mov
mov
jmp
adc
sbb
pop
int
push
jge
mov
xor
jmp
mov
xor
or
outsb
adcb
jmp
jo
sub
loopne
es
cltd
leave
pop
cmc
stc
icebp
outsl
and
xchg
jl
dec
shlb
lea
jge
mov
and
mov
sub
cli
or
stc
pop
jmp
xorb
xchg
test
sub
adc
mov
ja
into
loopne
push
adc
xchg
ret
mov
std
std
inc
pop
fadd
jg
stc
in
xor
jmp
test
clc
lods
xchg
inc
stos
in
jmp
push
lods
sub
mov
in
and
int3
fidivl
and
clc
push
in
enter
mov
xor
insl
adc
pop
icebp
leave
ficomps
paddusb
iret
push
enter
ja
in
push
add
jb
aad
dec
nop
xlat
stc
nop
leave
movsl
cmp
ds
mov
push
negb
pop
int3
int3
stc
ss
in
mov
adc
xchg
lar
imul
xchg
cmp
dec
push
xchg
inc
jg
inc
pop
add
and
mov
lods
xor
fnstenv
inc
mov
cli
lods
sub
xchg
es
rcll
repz
mov
in
adc
inc
fxch
es
rolb
cld
jp
pop
scas
jge
dec
in
in
or
mov
xor
fucomp
popa
fldenv
ds
mov
test
and
stos
data16
stc
insl
arpl
into
mov
call
push
push
jb
jg
fnstenv
rcrl
std
cs
push
int3
pushf
dec
sbb
shrl
fisubs
outsb
roll
jl
mov
repnz
inc
mov
clc
out
pushf
sbb
or
or
insl
adc
mov
xor
flds
les
and
lds
pop
in
fsubr
mov
iret
incb
push
xor
adc
into
sub
lods
push
pop
inc
jmp
inc
inc
pushf
jae
pop
inc
mov
cli
sarl
sub
lods
push
sub
jae
pop
fwait
arpl
imul
das
mov
in
push
pop
mov
test
xor
add
mov
adc
jnp
sub
add
lret
orb
cmpsl
inc
test
push
js
mov
negb
js
pop
or
or
push
lock
pop
cwtl
cmp
sbb
jns
push
sbb
and
mov
inc
push
push
jle
inc
jg
xor
aas
addl
mov
pop
scas
sti
xlat
pop
cmp
into
adc
mov
xlat
in
xor
nop
mov
pop
push
stc
leave
mov
cmpsb
pop
repnz
sbb
cmp
mov
lcall
negb
jmp
andb
cmc
out
aam
int
mov
or
inc
xor
lret
jnp
xchg
lret
cmp
or
sbb
adc
mov
lcall
xor
jg
es
xor
ss
jge
xor
jp
dec
push
cmp
fistpll
add
mov
scas
mov
xorb
fsubrs
mov
jle
and
fs
sub
push
ret
dec
into
add
add
cmp
outsb
popa
mov
xchg
jle
int3
outsb
out
fldl
les
cmp
dec
mov
fsubrs
sti
scas
cmp
std
orl
inc
pop
mov
pop
icebp
stc
and
mov
mov
cmp
scas
and
inc
xor
mov
fisubs
aad
mov
dec
testl
push
aas
mov
mov
scas
add
and
pop
cmc
push
mov
xlat
or
mov
lcall
push
test
sbb
jmp
movsl
test
sub
pop
push
cwtl
xor
lods
filds
insl
mov
add
inc
ss
adcb
icebp
dec
inc
jmp
sub
decl
fcompl
mov
insl
or
and
lahf
shlb
fwait
out
lcall
stc
test
enter
insl
jg
adc
mov
jg
negb
or
or
sbb
cmp
jae
cwtl
xor
xchg
fnstenv
xor
mov
fisttpll
stos
push
inc
sub
and
call
jl
sahf
or
lret
xor
xor
inc
fbld
fsubrl
lret
aam
testl
xor
and
lahf
sub
xchg
mov
mov
ja
mov
int3
mov
subl
inc
lea
loop
cmp
mov
mov
ss
inc
in
cmpsb
sub
pop
xchg
inc
mov
or
iret
cmp
jle
out
sbb
shlb
dec
mov
mov
mov
fiaddl
mov
in
pop
pop
test
mov
inc
mov
sub
repnz
ss
dec
iret
and
in
push
or
add
mov
dec
rdmsr
mov
sbb
mov
fmull
push
loope
test
aas
push
icebp
fs
jb
popa
adc
dec
popa
push
mov
sub
push
dec
or
mov
xchg
or
xor
push
repz
and
add
dec
mov
dec
push
xorl
xlat
jmp
mov
pop
push
xlat
ss
sbbl
subb
mov
sub
sbb
pop
lret
pop
lods
cmp
mov
xor
popa
adc
ret
repz
insl
pop
inc
cli
mov
fisubl
or
pop
out
test
call
lock
in
out
adc
push
in
xor
or
insl
cmp
cmpsl
out
cli
popf
cld
adc
and
inc
fdivs
shlb
int
fsubr
shlb
out
negl
dec
in
jbe
cmp
inc
scas
jns
mov
jl
fdivrs
lahf
mov
sbb
test
mov
add
push
xchg
xor
sub
out
lret
cmc
adc
cmpsb
xor
jne
pop
out
in
mov
iret
enter
cli
sub
mov
lods
cld
ja
mov
push
inc
jno
ja
rcl
mov
push
subl
or
adc
jb
lcall
push
lcall
stc
or
shrb
push
sbb
jl
jb
icebp
imul
cltd
xor
sbb
ret
mov
push
cmp
ret
dec
stos
pop
lcall
jns
dec
in
ja
inc
pop
mov
jb
dec
test
xor
and
fwait
xor
pop
jmp
daa
ret
sub
xlat
scas
cmpsb
hlt
fidivl
inc
sub
lret
int3
jge
fsubl
pop
jg
dec
out
stc
mov
pop
cld
dec
shrl
jge
ret
adcb
sub
aad
test
rcll
fsubs
repnz
fidivl
rcr
mov
jnp
enter
dec
fsub
add
out
inc
jbe
jecxz
cmc
sbb
adc
xlat
xor
jp
fnsaves
test
xchg
add
dec
and
jbe
cmp
mov
xchg
inc
shl
mov
sbb
adc
into
sub
or
and
lock
int
dec
mov
mov
xor
mov
int
scas
ja
mov
fstl
movsl
cmp
mov
mov
adc
out
and
andb
out
xchg
add
dec
and
pop
sbb
pop
inc
pop
cmp
or
stos
dec
in
or
iret
test
scas
xchg
jle
ss
fcomps
cmp
adc
xchg
sub
pop
cs
repz
cmp
fxch
fisubs
mov
sbb
imul
lock
sti
into
jbe
aas
and
xlat
push
push
or
mov
add
in
clc
and
stc
xorl
insb
jcxz
imul
jae
aad
sbb
inc
std
repnz
xor
and
dec
shlb
enter
rclb
out
pushf
test
sub
jno
lea
mov
or
lcall
stc
and
insl
push
and
jmp
or
xor
jno
lock
daa
pushf
and
movsb
add
sub
cwtl
or
mov
xchg
dec
dec
pop
xor
push
insl
inc
inc
mov
fsubr
sbb
jl
cmpb
lret
dec
out
call
mov
into
xor
repz
jno
adc
loope
sbb
push
call
xchg
lret
cmp
ds
pusha
lret
mov
jns
call
addr16
sbb
sahf
dec
xor
leave
push
aam
insl
push
xor
jb
sbb
push
or
outsb
loope
mov
inc
sbb
mov
out
es
rorb
adc
dec
pop
sahf
shlb
xor
dec
pop
rorb
pop
mov
add
inc
dec
dec
fstl
push
sub
jge
imul
cmc
mov
cs
or
popa
pop
jnp
movsl
jo
mov
stos
xor
inc
cld
jmp
pushf
mov
shll
addb
es
pop
movsb
push
aad
test
cltd
dec
mov
xchg
rcr
push
insb
or
xor
roll
cltd
add
xlat
imulb
dec
jnp
int
sbb
push
mov
mov
mov
clc
test
mov
pop
and
mov
sub
cmp
insl
adc
sbb
push
or
xor
sbb
mov
pop
mov
mov
imul
js
cld
insl
sub
daa
pop
xor
push
pop
fisttpl
mov
mov
sbb
jbe
cmp
push
add
stos
fstp
sbb
rorb
jns
cmp
sbb
jbe
mov
mov
lret
les
sbb
add
mov
xor
sub
ss
sbb
or
inc
cmpb
or
stos
and
iret
pop
xchg
sub
jmp
inc
mov
mov
mov
mov
stos
loope
les
pop
ds
in
out
dec
mov
repz
insl
sahf
stc
lock
mov
gs
jecxz
push
lret
cld
pop
jo
or
ss
xchg
push
mov
mov
dec
jle
sub
cmp
test
jne
pop
repnz
cwtl
scas
inc
push
sbb
into
and
lret
jo
fldcw
out
insb
es
jl
jo
xlat
imul
divl
dec
and
les
and
pop
stc
mov
sub
daa
xchg
arpl
ret
sub
int
pop
insl
lea
pushl
mov
aam
inc
cwtl
cld
stc
call
cmpsb
dec
pop
iret
mov
aad
sub
fmulp
cltd
lock
rcrb
xchg
add
repnz
ret
xchg
inc
mov
or
fwait
mov
add
xor
push
mov
dec
mov
pop
mov
xor
xchg
aas
add
fwait
data16
cmp
shrl
pop
hlt
fstpl
cwtl
loop
push
nop
imul
insb
or
mov
sbb
outsb
pop
mov
adc
sbb
mov
in
loop
push
je
outsl
xor
mov
lcall
stc
test
jl
sub
popa
jb
outsl
popf
lods
push
xchg
pop
mov
ficompl
dec
stc
cmp
or
pop
jns
cmp
rclb
push
sbb
mov
rcll
cmp
in
add
fsubr
inc
aad
cmpsb
rcr
popf
sub
dec
aas
add
gs
push
addr16
push
aam
push
jbe
mov
jmp
cmp
int
pop
adc
lds
ss
cli
scas
dec
fmull
push
mov
adc
in
mov
popa
cwtl
xchg
mov
and
pop
lcall
rep
lods
mov
icebp
fstpl
js
xor
jb
pop
repnz
clts
ds
pop
xchg
cs
jp
sub
jge
loopne
lcall
dec
push
xchg
orb
add
cwtl
push
xchg
jge
hlt
adc
sub
pop
pop
cmp
add
leave
inc
ds
pop
xchg
rcrl
sub
incl
pop
shlb
jmp
add
xchg
ror
orb
test
std
cltd
inc
dec
sti
jp
or
sub
in
js
imul
stos
in
idivl
sarl
lock
cmp
pop
aam
daa
pop
ret
ja
pop
imul
je
dec
cmpsb
fistps
or
adc
fwait
sub
dec
sbb
stc
pop
xor
cwtl
or
mov
mov
dec
mov
rclb
push
jecxz
or
call
icebp
ljmp
push
dec
jl
mov
mov
inc
pop
scas
loop
in
lds
icebp
push
imul
repz
repz
outsl
sub
mov
aad
and
aam
xlat
xorb
adc
cmp
cwtl
dec
and
cmp
insb
inc
out
inc
push
rcll
jno
lcall
stc
and
and
cmp
stos
mov
je
inc
cmpsl
mov
rcr
fwait
test
stos
inc
repz
or
and
outsb
pop
movsb
sub
jle
insb
inc
sbb
inc
sahf
pop
imul
nop
adc
jb
cld
lea
pop
ljmp
jno
lea
cmp
xchg
mov
fisubrs
jge
int
out
es
ds
ds
test
or
jne
jge
inc
test
jmp
jl
cmp
scas
out
pusha
inc
rcrb
add
mov
or
inc
fstps
xchg
les
cmp
cmp
arpl
or
hlt
icebp
iret
lret
fiadds
movsb
mov
shll
loope
and
insl
mov
je
push
outsb
jp
enter
jbe
aas
shlb
dec
pop
or
and
jmp
mov
pop
or
mov
mov
jmp
adc
daa
cmp
jp
fldenv
leave
imul
repnz
test
lcall
add
jns
and
lds
mov
push
xor
push
das
shlb
mov
xchg
stos
jge
loopne
lret
sub
jae
mov
cmpsb
sbb
shl
std
xor
sub
inc
mov
pop
stos
and
cmp
lret
roll
inc
pop
imul
pop
ret
bound
pop
scas
in
hlt
dec
fwait
add
shlb
cmp
xor
mov
ds
lea
shrb
jle
fsubrs
inc
mov
data16
dec
inc
inc
fldenv
out
pop
or
mov
push
mov
cmpb
mov
pop
lods
outsl
jbe
sbb
sub
dec
shll
jb
stc
sbb
pop
push
pop
or
add
adc
sarb
push
and
push
addr16
popf
mov
jmp
test
sub
leave
xorl
push
pop
push
push
add
das
scas
fwait
sti
mov
cmc
dec
push
push
fists
or
xchg
push
mov
cmp
mov
jle
dec
loope
add
iret
loopne
lret
mov
arpl
into
repnz
ficompl
sbb
inc
andb
gs
inc
fiaddl
pop
inc
fsubrs
jge
pop
mov
push
ja
sbb
out
xchg
sbb
rcr
in
inc
jl
cmpsl
mov
cwtl
mov
xchg
test
dec
or
imul
in
daa
adc
fldt
stos
ljmp
mov
cmp
adc
pop
jne
jl
cmc
and
mov
jg
cld
push
test
jl
popf
xor
in
pop
clc
mov
add
mov
ror
cmc
movsb
pop
cmp
outsb
inc
ficompl
mov
xor
lods
faddl
add
sub
pop
dec
rorl
xor
in
mov
mov
xorb
cs
jmp
enter
mov
lcall
pop
pop
xchg
adc
popa
xor
inc
mov
push
lods
out
or
mov
fdivs
inc
lcall
and
mov
dec
cwtl
decb
pusha
jle
out
lods
or
dec
mov
push
or
out
out
jmp
inc
inc
mov
push
shrb
rcl
jb
negb
push
adc
mov
rclb
sbb
adc
cmpb
ja
hlt
cmpl
push
popf
pop
dec
popf
inc
xor
jns
jecxz
lds
fidivl
into
iret
mov
aam
das
lret
inc
inc
std
xchg
add
orl
sahf
push
loopne
clc
cmp
mov
xchg
dec
sub
out
and
outsb
sub
loopne
or
sbb
fidivrl
pop
lret
popa
jnp
push
sahf
lods
inc
or
push
cmp
mov
or
jo
aad
mov
out
push
sbb
loope
mov
pop
add
sbb
push
push
pop
js
fwait
test
lock
sub
lock
das
xchg
lret
dec
dec
dec
enter
icebp
adc
inc
movsb
mov
mov
dec
fimuls
mov
mov
bound
push
xor
nop
xor
std
inc
mov
sahf
push
arpl
test
test
dec
adc
cmpsl
pop
das
or
divb
push
jecxz
movsl
test
je
leave
jmp
xor
xor
insl
push
mov
or
sub
lahf
call
mov
mov
dec
push
aad
stos
sub
xchg
fiaddl
and
scas
adc
jmp
fsubs
gs
mov
xchg
pop
shll
lret
pop
mov
bound
fsubs
jno
dec
adc
enter
ret
mov
jl
sbb
testb
cmp
and
xlat
pop
lcall
negl
imul
xor
in
xorl
push
jnp
or
int
and
and
jle
add
push
dec
fidivl
fisubl
jmp
movsl
cmp
push
push
mov
push
jg
add
sbb
cmp
es
cmpsb
cmp
mov
cmp
inc
inc
daa
adc
mov
jne
xor
adc
dec
icebp
mov
stos
insb
ficompl
mov
dec
pop
scas
push
pushf
loop
or
sub
arpl
jmp
jp
xchg
repz
out
movb
cmp
sub
or
cmc
dec
xchg
push
bound
inc
mov
fs
cmc
jne
dec
push
nop
jnp
lock
and
in
push
mov
cli
pushf
lret
adc
ljmp
mov
xorb
mov
lret
cmpsl
orb
add
stos
xchg
or
cmpsl
dec
mov
sub
sbb
aad
test
push
pop
pop
imul
and
xchg
and
cmpl
mov
js
xchg
stos
das
jge
fcoml
rorb
imul
inc
dec
dec
insb
cld
imul
lods
hlt
sbb
pop
mov
jmp
mov
outsl
push
std
mov
jp
es
aaa
fnstsw
push
pop
push
fwait
xor
ja
mov
inc
pop
dec
jge
jne
and
addr16
leave
faddp
push
mov
imul
mov
inc
inc
insb
addr16
sahf
insb
mov
andb
daa
mov
xor
and
pop
mov
mov
insb
iret
out
pop
pushf
cmovns
insb
hlt
xor
daa
scas
or
leave
cli
push
or
jae
sbb
jno
insb
data16
test
test
or
cld
push
pop
xchg
loope
adc
mov
lods
mov
scas
sarl
or
es
inc
or
mov
push
sub
pop
xchg
fisubrl
jb
fcoml
punpcklbw
jo
or
imul
iret
cmp
xchg
push
outsb
xchg
jge
daa
mov
lods
cmp
outsb
add
cmp
xchg
mov
push
xchg
nop
hlt
push
lods
and
and
insb
xor
mov
imul
and
movsl
das
dec
mov
adc
aam
mov
inc
inc
data16
mov
xor
adc
cmp
repz
push
xorb
shll
cmp
or
cmp
adc
or
xchg
dec
scas
pop
mov
stos
hlt
lcall
aaa
nop
test
ljmp
and
cmc
mov
and
cmp
movsl
and
insl
jge
sarl
add
ret
pop
pop
lock
stc
into
enter
cmp
mov
mov
in
jg
ljmp
sbb
mov
cmp
jae
pop
icebp
fwait
mov
mov
mov
js
loope
popa
clc
jno
loope
adc
push
in
test
ret
mov
pop
out
push
push
aam
jo
push
push
inc
into
incb
and
sub
repz
and
mov
insb
imull
addb
add
sbb
xor
sub
addl
sti
das
sar
push
outsb
sbb
sbb
imul
aad
inc
mov
pop
stos
pushf
stos
test
mov
ficoms
push
out
scas
repz
hlt
mulb
cs
xchg
mov
xchg
xor
push
hlt
das
movsb
nop
mov
sbb
ret
dec
aad
pop
cmpsb
cmp
cld
cmpsb
clc
ja
nop
inc
jp
icebp
mov
test
adc
mov
adc
mov
lret
jae
mov
and
sbb
jge
inc
sub
clc
cmp
mov
movsb
jge
cmp
add
or
dec
push
mov
addr16
mov
jae
and
into
ficomps
cmc
lea
sti
lea
inc
leave
cmp
addr16
or
push
jp
cwtl
stos
pop
xor
hlt
add
push
push
movsl
jg
inc
and
add
jb
mov
inc
xor
int3
pinsrw
pop
dec
push
cs
out
pop
out
popf
ljmp
cmp
adcl
and
pop
repz
and
cmp
jp
dec
out
xor
clc
and
mov
xchg
mov
out
lahf
imull
pop
or
jnp
int3
mov
add
mov
sti
adc
movl
shl
scas
iret
push
sub
adc
shrb
lods
aas
pop
repz
mov
pop
dec
leave
adc
push
jl
je
lods
sbb
outsb
push
mov
jnp
sbbl
movl
mov
sbb
xor
mov
dec
outsl
jnp
das
cmp
ds
jno
pop
repz
lahf
dec
fcompl
orb
mov
stos
cmpsl
pop
popf
inc
mov
das
or
iret
jnp
sahf
call
call
fld
sub
xor
nop
mov
push
imul
aaa
jae
gs
cli
ret
or
push
fisttpll
xor
mov
in
pop
aaa
insl
into
or
or
add
pop
and
mov
jne
push
push
popa
pusha
sub
outsb
leave
movsb
push
push
xor
bound
push
cltd
jl
sub
xchg
pushf
je
iret
mov
xchg
popa
cltd
mov
stos
lock
cwtl
gs
jecxz
movsl
mov
jnp
pop
cmpsb
int3
mov
jns
xchg
in
hlt
mov
inc
cmp
cmp
adc
sar
mov
inc
xor
mov
mov
or
pop
in
push
aas
testl
mov
jae
cwtd
cmpsb
mov
cmpb
ljmp
nop
dec
mov
scas
cmp
mov
movsl
pop
push
loopne
fwait
daa
cmp
push
mov
push
jmp
out
cli
leave
inc
pop
add
in
pop
push
roll
xchg
ja
sar
adcb
xchg
and
enter
lea
rcr
xchg
mov
adc
or
jbe
sahf
mov
push
lea
sbb
stc
adc
fsubrl
xchg
cmp
mov
dec
stc
out
out
or
out
xor
lahf
gs
inc
int3
pop
inc
sbb
fimuls
mov
push
or
das
mov
push
in
mov
xchg
out
dec
ret
das
mov
add
into
mov
cld
jle
mov
aad
aad
pop
les
arpl
and
mov
je
popa
and
adc
aad
or
add
adc
ds
pop
mov
les
mov
mov
push
mov
ds
mov
lea
sub
int
sbb
movsb
jg
inc
and
imul
loopne
pop
pop
lcall
stos
cmpsb
pop
mov
cmp
inc
std
xchg
shll
add
jae
shld
push
mov
xchg
pop
xlat
xchg
mov
test
lret
mov
punpckhdq
lods
jmp
cmpsb
mov
cmp
pop
loop
xchg
in
sbb
xchg
pop
scas
or
push
push
nop
out
cwtl
sbbb
scas
sub
cmpsl
pop
inc
stos
xchg
jl
mov
lahf
cmp
pop
loopne
cmp
orl
in
int3
push
jmp
push
jno
bound
je
cmp
cli
jno
icebp
out
xchg
sub
test
iret
pop
xchg
int
es
data16
and
mov
adc
and
aad
out
jl
or
adc
dec
sahf
add
or
jle
repnz
mov
jb
pop
dec
enter
dec
sti
enter
mov
sbb
sub
repz
mov
adc
lret
mov
sbb
jge
iret
add
leave
test
mov
sub
enter
sahf
popa
pushf
dec
sub
jnp
outsb
mov
mov
mov
xchg
ret
cld
loopne
cmp
sub
test
xchg
push
scas
shlb
or
icebp
xor
pop
mov
sub
ret
inc
mov
jl
jmp
or
or
xchg
sub
and
cmpb
iret
xor
mov
std
in
xlat
icebp
test
popa
and
lods
inc
fcmovnu
and
cmp
aaa
push
push
adc
movsb
cmp
ja
mov
jecxz
pop
repz
jbe
cmpsb
clc
gs
fbstp
js
jno
cmpsb
push
loope
out
pop
dec
mov
outsl
xor
sbb
into
pop
mov
in
and
scas
push
cmp
pop
xchg
leave
cmp
push
cmp
mov
fstl
fidivrs
sbb
mov
jns
mov
push
push
loopne
std
pop
jbe
ficoms
jo
mov
xchg
lahf
xchg
repz
add
rol
pop
sub
rorb
arpl
add
icebp
mov
cmpsb
aam
int
mov
sti
jecxz
pop
sbb
jmp
ja
ljmp
adc
pop
fnstsw
dec
mov
jbe
jecxz
pusha
pop
cmpsb
lock
movsb
rclb
les
fcomps
jbe
stos
out
lret
and
lock
xchg
and
out
ret
repz
jae
cltd
fs
add
inc
rorb
lcall
push
jns
pop
shl
mov
call
sti
lret
mov
data16
mov
sti
call
sti
addr16
nop
add
add
in
stos
xchg
das
repnz
jne
adc
ss
test
lods
jbe
jmp
movsb
push
fdivrs
pop
pop
outsb
adc
add
push
mov
mov
mov
jmp
xor
stos
mov
les
lea
or
movsl
insl
dec
scas
ret
js
lret
adcl
push
call
pop
lea
lcall
push
sub
inc
push
call
xor
out
sbb
dec
mov
sub
mov
sbb
inc
pop
shl
es
hlt
mov
cmp
push
icebp
ret
test
dec
ja
shll
jns
mov
lods
pop
icebp
mov
pop
push
pop
push
mov
jecxz
mov
push
xor
cltd
cmp
dec
fnstcw
imul
aad
mov
faddl
mov
repz
cmc
dec
xor
mov
lods
pop
mov
jne
stos
mov
data16
jmp
jmp
push
jno
xchg
sbb
pop
mov
cwtl
add
pop
js
mov
testl
lcall
mov
arpl
inc
inc
inc
cmc
mov
mov
les
aad
mov
cmp
test
jg
mov
into
fs
jl
clc
ljmp
push
imul
xor
sub
mov
adc
mov
divb
push
ret
jno
xlat
insb
popa
out
push
xor
scas
jo
pop
fsub
dec
add
pop
jecxz
cmp
xchg
in
sub
xchg
xor
fwait
and
clc
lock
lret
pusha
inc
push
repnz
push
movsb
test
iretw
nop
pushw
mov
out
sub
adc
scas
xchg
je
mov
sub
mov
mov
je
add
call
mov
scas
bswap
aas
push
or
inc
push
inc
mov
xor
mov
xchg
ja
loopne
loop
aam
cwtl
nop
int
fnsave
popa
es
xchg
mov
lret
lock
jns
adc
adc
out
fdivrl
rcrb
mov
jle
mov
pop
cmpsl
sbb
mov
stc
pop
mov
fwait
fs
adc
outsb
je
mov
push
lcall
arpl
insb
adc
shll
pop
aad
testb
xchg
lea
lods
push
xchg
cmpsl
fdivl
ss
out
orl
adcb
dec
icebp
je
xchg
add
xchg
cmp
lcall
shrl
test
push
mov
dec
movsb
cmc
jne
gs
jmp
ljmp
lahf
mov
mov
push
fistpl
sbb
fcompl
add
push
mov
sub
loop
add
mov
mov
ss
sti
call
push
dec
push
insl
mov
scas
cmpsl
or
jne
enter
mov
pushf
in
icebp
out
and
inc
xchg
dec
sbb
aas
adc
pusha
out
jle
and
and
push
sahf
loopne
cwtl
pushf
mov
dec
pop
rolb
xor
sbb
pop
xchg
mov
xchg
jnp
mov
int3
lods
decb
lods
inc
xchg
jne
dec
scas
stos
xchg
lret
sbb
in
sbb
add
jae
bnd
and
in
addr16
jno
hlt
mov
movb
ret
clc
ds
cld
xchg
push
xor
sti
test
repnz
aas
push
stos
dec
jmp
pushf
dec
xchg
fsubrp
lret
xor
xor
mov
hlt
insl
adc
jle
mov
scas
xor
test
add
sti
inc
je
outsb
lods
jle
sbb
add
fwait
in
lds
lahf
cmp
es
aas
loop
lods
jl
test
dec
in
mov
dec
imul
ja
pushf
cmc
mov
movsb
push
js
push
add
jl
ret
lds
enter
cmp
pop
lds
xchg
outsl
xchg
mov
cltd
jo
testb
clc
adc
movsl
enter
mov
xchg
mov
add
pop
jb
sbb
sub
mov
les
mov
dec
sub
pop
insl
js
fdivrp
pop
insb
sbb
pop
cmpsl
sbb
int3
pop
mov
xor
jmp
iret
insl
les
inc
test
ret
repz
ret
jno
pop
enter
or
cmp
mov
test
xchg
push
repz
pop
movsl
cld
or
cli
int3
mov
rcr
mov
cmpb
jns
pop
stos
loop
cltd
sub
mov
mov
adc
movsb
push
into
imul
pop
rol
aam
addl
aam
enter
pop
loopne
cmp
and
imul
fildl
mov
mov
aaa
les
xchg
mov
mov
out
mov
testb
test
sbb
ds
filds
lret
inc
add
inc
mov
xor
sar
fnstsw
pushl
sbb
pop
loop
jns
popa
lods
data16
call
sub
bound
sbb
push
and
mov
add
hlt
adc
incl
sbb
sub
mov
mov
push
add
lds
std
add
and
dec
jge,pt
cld
xchg
out
adc
sub
cli
stos
int
and
xor
lahf
cmp
jecxz
dec
dec
out
xor
enter
fsubrl
mov
jecxz
mov
jg
fwait
adc
leave
push
out
shlb
shl
frstor
xchg
adcl
sahf
lea
icebp
and
push
adc
jae
and
fs
sub
adc
pop
jl
cmp
ret
cmp
mov
push
movsl
inc
out
lcall
leave
out
jns
push
mov
push
daa
fists
xor
push
jnp
inc
fcoms
xor
scas
mov
cli
xor
sahf
xor
cmp
cmp
btc
pop
icebp
cmp
lahf
mov
and
xor
ja
or
and
aas
pop
inc
daa
outsl
out
mov
out
cmp
out
pop
jns
ds
pushf
add
mov
mov
lea
jle
pop
fnstcw
xchg
popf
xor
das
repnz
ja
mov
rorb
cmp
xor
lods
repz
aad
lahf
or
mov
movsb
and
nop
xchg
xchg
clc
rorl
and
sbb
lds
pop
mov
ror
ja
add
lret
cwtl
push
ljmp
jno
xor
aam
xor
arpl
loopne
or
das
xor
push
loope
inc
dec
outsb
loope
ljmp
in
cwtl
jae
push
pushf
test
mov
imul
lock
orb
adc
and
pop
lret
andb
repz
or
test
inc
or
addb
push
xor
jmp
xor
sbb
adc
xchg
ja
insl
out
sub
mov
jb
pushf
arpl
cmp
testb
mov
movsl
in
pop
push
shrb
lods
dec
ss
test
insl
popf
adc
mov
dec
sub
out
aam
sub
mov
mov
std
dec
or
cmp
mov
aas
dec
arpl
sbb
add
into
fsubl
unpcklps
mov
inc
add
loopne
aaa
push
and
sahf
cli
daa
pop
mov
rcr
out
mov
adc
repnz
add
push
pusha
ret
mov
outsb
js
lret
incl
inc
cmp
mov
push
cmp
jmp
or
jno
add
xchg
jmp
lock
cmp
out
xor
mov
sub
pop
movsb
adc
jnp
dec
lods
xchg
out
mov
push
sti
xchg
xor
sub
fdiv
jecxz
push
mov
out
mov
ret
ss
dec
mov
push
hlt
lcall
sub
repnz
negl
xchg
xchg
sub
mov
out
push
insb
adc
push
les
insl
icebp
cmp
into
cmp
mov
into
jae
icebp
lret
das
sti
or
out
fcmovb
mov
out
mov
mov
ss
cmp
shll
insb
shr
stos
rcrl
sbb
pop
xor
or
inc
push
call
xchg
in
mov
mov
push
outsl
mov
mov
push
mov
pop
jecxz
fcoms
ljmp
gs
xchg
sub
cmp
jo
inc
aas
lea
jno
in
movsl
les
pusha
push
int3
fidivrs
jb
hlt
sub
xchg
addb
sbb
adc
sbb
xor
jmp
xor
icebp
and
jb
and
xor
fs
inc
daa
shll
jb
xor
shlb
dec
movsl
inc
rclb
repz
adc
jmp
addr16
xchg
pop
dec
dec
sbb
scas
cmpsb
cmp
or
mov
push
mov
pop
cmp
ret
or
jae
das
push
and
test
or
movsb
loope
aad
mov
mov
aam
mov
sbb
mov
jae
xchg
and
into
adc
cmp
push
psubusb
pop
sti
icebp
lea
mov
pushf
xor
and
pop
fucomi
iret
into
xchg
sub
add
stos
push
leave
fisubl
pop
inc
add
sar
xor
iret
cwtl
push
jo
push
or
pusha
bound
cmp
inc
stos
nop
ds
adc
fnstsw
sub
mov
sub
push
mov
loop
movsl
push
test
jb
fbstp
pop
mov
cmpsl
ds
sub
repz
pusha
ss
int3
and
adc
stos
jbe
mov
dec
test
stc
dec
adc
sbb
repnz
xor
or
jle
hlt
sub
mov
mov
pop
repnz
pop
inc
and
in
jecxz
inc
in
xor
jb
dec
imul
daa
adc
adc
dec
into
or
in
adc
cmp
inc
or
cmpsl
shrl
jo
nop
clc
or
inc
mov
aaa
int
or
scas
cli
iret
insb
inc
jno
movsl
pop
jbe
or
pusha
xor
mov
popf
adcl
inc
addr16
arpl
mov
or
cwtl
xchg
xchg
mov
rolb
popf
pusha
es
lahf
testb
call
pushf
dec
cmpl
xchg
test
cli
lds
dec
sbb
cmp
add
sbb
aam
sub
jge
loop
inc
dec
push
imul
cmp
das
test
add
mov
in
aad
jl
push
inc
pop
inc
add
int
bound
mov
inc
in
test
dec
push
test
cltd
mov
andl
dec
mov
xor
lods
pop
cmp
pop
jle
sub
shll
call
dec
add
xchg
xor
cmp
sbb
xchg
adc
sub
jmp
loopne
jnp
mov
das
or
or
jnp
rolb
xor
inc
decl
lea
push
and
jecxz
inc
sub
push
je
rcr
or
sub
jecxz
pop
mov
pop
fldcw
in
ret
cltd
repnz
dec
scas
outsb
addb
leave
mov
cwtl
jnp
add
insb
xor
out
xor
jp
add
fwait
rcl
stos
sbb
pop
testb
push
sub
adc
cltd
jp
lret
popf
outsb
sub
inc
dec
popf
cmp
sub
inc
pop
insb
rcll
mov
and
fisubl
dec
xchg
xchg
hlt
hlt
cmpsl
shll
adc
push
fwait
mov
icebp
push
mov
mov
popf
test
mov
outsb
call
push
cmc
mov
sub
scas
mov
ret
mov
jo
movsb
pop
imul
mov
xchg
adc
add
add
and
pop
add
mov
mov
pop
out
test
jbe
lcall
mov
push
inc
mov
ret
out
sarl
aad
or
ja
or
mov
xchg
es
push
mov
ficompl
inc
xchg
ljmp
sub
bound
stc
nop
mov
lods
sbb
fbstp
pop
inc
push
mov
pop
xor
xor
mov
aam
dec
xchg
pop
daa
arpl
cmc
enter
in
test
adc
and
outsb
in
dec
fs
andb
hlt
and
pop
cltd
cli
inc
outsb
ss
int
inc
jb
in
les
test
cltd
xchg
push
das
xor
cmc
dec
shll
jnp
imul
mov
out
push
fimuls
lock
sbb
sub
xchg
insl
add
add
and
outsb
loope
dec
xor
cmpsb
inc
bound
les
les
lock
dec
loop
das
adc
scas
inc
test
loope
rcl
pushf
mov
loope
sub
push
cs
adc
cmp
sub
fnstenv
mov
xor
xchg
pop
icebp
shl
mov
out
js
and
cmp
pushf
cmpsl
mov
mov
out
sbb
repz
dec
jb
loop
aaa
fadds
shl
cmp
add
mov
sub
ret
xchg
xchg
popf
dec
loope
cmpl
push
add
sbb
mov
dec
das
fcoms
test
imul
test
pop
aaa
out
sub
outsl
dec
xor
jecxz
insl
dec
lds
jmp
pop
or
rolb
jp
mov
roll
and
pop
push
xor
mov
lahf
mov
xchg
lea
es
inc
jp
int
xchg
ljmp
mov
or
stos
push
inc
pushf
out
movsb
jns
ror
mov
mov
sbb
mov
frstor
pushw
mov
mov
in
negl
mov
cmp
inc
mov
cwtl
subl
cmpsb
les
jne
into
fs
cmc
int3
push
sarb
es
xchg
cld
dec
repz
cmp
fwait
jne
push
sub
or
push
or
adc
fldt
push
jns
adc
inc
pop
xor
xor
cmp
add
stos
in
dec
out
sahf
data16
lock
stos
add
sub
repz
ja
inc
push
call
or
mov
sub
lret
adc
add
jns
jmp
or
inc
lock
adc
add
dec
adc
lea
fnstsw
insb
cmpb
in
add
push
jo
je
jg
lret
mov
les
jecxz
daa
out
cmpsb
repz
imul
test
shll
lret
fstpt
sbb
aas
cmc
imul
or
sbb
sub
pop
push
mov
jbe
rcll
add
jge
cmp
insl
mov
divl
stos
in
sub
lods
movsl
cmp
cmp
mov
stos
push
sub
xchg
sbb
adc
lods
adc
cmpb
jle
sub
out
mov
mov
add
or
jae
mov
nop
sbb
xor
dec
negl
rcrl
les
lahf
movsb
and
ret
inc
sub
test
inc
ds
fldl
and
repnz
dec
fs
and
dec
outsb
xchg
cmp
int
xchg
ljmp
imulb
or
adc
fdivl
xchg
xchg
pop
in
sarb
pusha
adc
imul
xor
sbb
stos
jp
mov
lea
dec
pop
lods
sbb
or
mov
fsubl
sbb
fsubrl
rorl
mov
inc
xchg
add
sub
push
and
ds
cmp
cmpsb
popf
lds
aaa
adc
add
adc
aas
int3
out
mov
xor
pushf
pop
data16
inc
sbb
dec
outsb
mov
outsl
mov
fldenv
scas
add
pop
mov
push
mov
pop
shll
das
bound
es
xchg
adc
sbb
leave
jo
pop
iret
xor
cmp
je
inc
test
xchg
stos
inc
ret
pop
into
jecxz
push
enter
test
and
iret
xchg
mov
xor
int
xchg
repz
dec
mov
sbb
push
xor
push
jmp
lea
push
jne
and
pushf
lret
js
outsl
push
vandpd
sub
cmpsb
mov
sahf
cmpl
test
enter
jne
sbb
test
repz
cld
sub
arpl
rclb
lds
sti
xchg
lcall
xor
dec
shlb
test
or
popf
repz
adc
aam
movsl
icebp
or
rcll
xor
jecxz
fisttpl
mov
jge
sarb
adc
imul
dec
pop
in
fidivrs
test
imulb
adc
mov
je
cwtl
addb
mov
pop
or
orl
and
pop
cmp
int
ja
jo
or
test
jp
inc
popa
add
lret
jne
push
cmpsb
movb
pop
lret
pop
push
push
mov
aas
inc
cmp
gs
cmc
mov
pop
adc
sbb
jns
shll
enter
xchg
jmp
dec
loop
scas
lret
xchg
cmp
push
and
pop
lds
jle
pop
fisubs
idiv
mov
push
push
jg
sub
lcall
pop
leave
jo
or
ret
cmc
push
bound
imul
inc
xchg
cli
jae
sarb
cs
mov
add
pushf
push
dec
loop
fadds
frstpm(287
je
repnz
xchg
fwait
dec
fidivl
sbbb
aas
mov
imul
sub
and
sbb
testb
sub
mov
popf
push
jmp
fwait
clc
inc
bound
std
lods
jmp
fidivs
and
mov
xchg
fs
or
out
jl
jle
enter
ret
out
rol
sarb
das
imul
shlb
mov
out
push
mov
pop
dec
dec
pop
lods
push
aam
dec
in
loop
icebp
movl
stc
and
mov
mov
and
adc
push
xchg
xchg
pop
mov
add
popa
roll
hlt
stos
outsb
mov
adc
inc
rcrl
testl
loop
or
arpl
xor
jl
dec
pop
mov
xor
inc
popl
ss
ljmp
mov
dec
mov
cltd
xor
cltd
xor
sub
sbb
in
scas
dec
pop
sub
sar
rorl
add
int
push
push
test
lcall
add
jne
popf
pop
jae
xchg
call
push
mov
in
dec
adc
lds
jge
lcall
push
cltd
sub
cmpsb
xchg
mov
lahf
ror
jb
push
mov
cwtl
aaa
fwait
add
std
js
pop
out
mov
scas
subb
test
cs
xchg
add
dec
cmp
cmp
mov
cmp
pop
lods
mov
sbb
repz
cld
outsl
pop
lahf
sub
sarb
sub
mov
xchg
sub
xchg
daa
mov
aaa
popa
mov
or
sub
pop
dec
sbb
outsl
adc
mov
outsb
in
push
pop
and
dec
sub
mov
jg
adc
mov
sub
mov
and
and
test
jg
addl
mov
movsb
cwtl
or
mov
jb
xchg
sbb
mov
rol
mov
or
xchg
dec
cld
lcall
in
inc
lcall
js
popf
lret
pop
test
iret
push
sbb
aas
push
push
test
sbb
loope
and
pop
jb
inc
cwtl
lock
dec
out
inc
add
out
dec
dec
xlat
xor
and
dec
scas
loopne
jno
jecxz
out
xor
cmp
cmp
xchg
lods
sbb
xor
jne
push
mov
jmp
push
sbb
mov
push
sbb
add
xchg
sub
dec
jmp
push
js
in
dec
fwait
xchg
or
push
cltd
sarb
cltd
mov
mov
int3
rclb
cmp
outsl
jbe
adc
testb
jnp
clc
sub
mov
lahf
test
sbb
idivl
jge
push
aad
hlt
shlb
or
or
and
cwtl
fimuls
mov
cltd
xor
push
js
xor
or
push
xchg
fcoml
outsl
adc
push
inc
push
xor
xor
and
add
pop
pop
adc
jns
xor
push
adc
pop
add
sbb
loop
inc
mov
in
insl
icebp
in
adc
test
fisubl
lret
jae
mov
xchg
ja
aam
addr16
sbb
in
movsb
rcrl
pop
lahf
shrb
rolb
enter
mov
rorl
add
daa
mov
mov
movsl
adc
adc
add
mov
cmpsl
out
cwtl
xor
sbb
mov
pop
ss
jb
cmp
lahf
std
dec
inc
cmc
rorl
repz
mov
pop
mov
add
subl
mov
jb
cmp
nop
adc
sub
fs
ljmp
push
push
jne
mov
or
and
int3
xchg
stos
jbe
jecxz
and
mov
xchg
xlat
inc
out
test
fists
cltd
sub
and
in
arpl
ljmp
shrl
push
fsubl
mov
mov
dec
mov
pop
and
pop
and
pop
lea
sub
stos
push
das
cltd
or
into
andl
movsl
pop
jg
or
cmc
mov
bound
pop
fsubl
mov
popf
fstp
iret
data16
shl
filds
inc
xlat
dec
insl
push
out
arpl
cmp
inc
fsubrp
sub
adc
jns
mov
fimull
iret
sub
jb
pop
out
je
mov
popf
jno
aaa
ficoml
fs
mov
repnz
xchg
pop
adcb
sub
imull
enter
add
mov
loopne
ds
sbb
scas
pop
insl
push
mov
mov
aam
stos
dec
iret
inc
enter
lahf
push
dec
and
adc
jecxz
xchg
enter
insl
test
sbb
sarl
pop
lods
rcr
xchg
dec
mov
or
push
push
jns
fs
sarl
mov
repnz
cmp
or
pop
fisttpll
enter
cmp
push
pop
mov
fucomi
ja
sbb
jbe
sbb
push
outsl
push
cwtl
pop
mov
ss
mov
xor
jno
outsb
and
lahf
fcomp
sbb
aam
test
fucomp
test
adc
push
scas
ss
jbe
jae
std
sbb
dec
aas
sbb
in
jl
js
mov
testl
sbb
add
in
andl
push
or
imul
fnstcw
add
pop
xchg
adc
les
sti
lock
and
idivl
xor
dec
mov
xor
mov
filds
test
push
adc
inc
ss
inc
push
sbb
push
cli
rcll
es
mov
stos
ja
mov
sbbb
js
add
mov
lock
add
call
jle
dec
dec
dec
lahf
jno
shrl
not
jae
xchg
sub
jle
movsl
xchg
cmp
push
mov
insl
push
fstps
push
int
cmc
idivb
adcl
test
or
jp
bound
xchg
aaa
push
mov
xor
mov
imull
stc
or
loope
cmc
divl
enter
mov
fistps
vandnps
daa
dec
ret
lcall
sbb
dec
rcll
popf
push
call
pop
sub
cmp
adc
cwtl
sbb
leave
sub
pop
ds
mov
out
iret
jl
lea
jbe
lods
fyl2xp1
nop
or
or
adc
sbb
xchg
push
out
js
jns
inc
dec
add
mov
outsl
push
sbb
push
or
mov
cld
sbb
jne
sbb
js
jecxz
std
nop
jg
int3
fs
and
xor
add
mov
orb
xchg
jnp
push
sbb
clc
aaa
incl
mov
lock
sti
stc
push
adc
mov
shrb
jne
and
xchg
fsubs
adc
imul
sub
imul
in
shll
js
andl
cltd
sbb
lret
lret
not
rorb
imul
jl
or
mov
cmpsb
adc
add
mov
loop
mov
pop
dec
shll
ret
mov
cwtl
das
test
add
mov
lret
lods
inc
cli
scas
fists
in
mov
int3
out
xchg
and
into
xor
cmp
inc
clc
and
pop
roll
movsb
pop
cmpsb
mov
test
flds
and
rorl
mov
rol
fildll
ret
and
xor
and
out
inc
hlt
xor
fildl
push
mov
daa
xlat
sub
adc
lahf
sub
xchg
mov
dec
pop
js
ss
dec
movsb
add
cmp
fwait
insb
sub
pop
in
sti
fs
in
dec
popa
movb
sbb
dec
mov
test
iret
shl
popa
jle
lret
jg
inc
fistl
hlt
xlat
xchg
add
pop
push
jecxz
inc
daa
xchg
mov
rep
xchg
pop
mov
ret
xchg
add
shrb
inc
lds
pop
jp
push
push
in
cmp
ds
add
mov
addr16
mov
in
or
cmpsl
jle
pop
push
jne
fiaddl
dec
sbbl
dec
loop
dec
jle
ja
and
in
xchg
in
fbstp
imul
in
push
dec
xchg
push
fsubrs
mov
pop
outsb
std
sub
inc
add
shll
sbb
jb
jecxz
mov
dec
and
push
inc
jmp
mov
inc
pop
aad
lds
insb
jb
xchg
add
pusha
xor
xorb
xor
jmp
lods
pop
and
nop
lods
call
loope
push
dec
fmuls
fiaddl
mov
std
lods
inc
xlat
dec
lods
aam
mov
sub
lods
cs
repz
mov
scas
aam
sti
or
rorb
arpl
or
xor
jmp
xchg
repz
mov
outsw
mov
ljmp
test
cmp
pop
pushf
loope
mov
test
es
pushf
scas
mov
scas
inc
pop
jp
inc
out
or
mov
out
xchg
adc
pop
test
lret
mov
cmp
pop
lret
cld
mov
push
jp
addl
loop
cwtl
stos
mul
je
inc
adc
push
loope
es
xor
xlat
arpl
push
jno
lods
xchg
sbb
mov
jl
mov
loopne
dec
xchg
mov
add
fidivrs
sbb
je
adc
movsb
and
sti
shlb
add
xchg
add
call
imul
leave
xor
dec
out
lcall
add
inc
ret
mov
sub
cmp
push
jge
push
inc
jge
xchg
aaa
xlat
hlt
xor
lea
add
cmp
das
push
sti
cmovs
mov
add
fidivl
push
or
ds
inc
dec
mov
cmp
inc
cld
sti
add
jnp
xchg
jne
inc
add
push
out
stc
xchg
mov
add
add
cwtl
mov
or
sti
es
aam
pop
scas
xor
or
sbb
add
out
xchg
pop
xor
mov
test
add
aaa
inc
inc
jb
jbe
lods
sub
cmp
jbe
das
fsubrl
sub
shll
inc
add
in
test
sahf
dec
loopne
call
mov
das
insl
sub
mov
or
sbb
dec
rcrb
jle
mov
pushf
out
dec
adc
iret
in
rcrb
push
outsl
or
push
jle
xor
sub
pop
xchg
pop
lock
std
pop
mov
test
xchg
cmp
cwtl
pop
cmp
dec
in
pushf
arpl
or
pop
cmpsl
pop
and
enter
mov
sarl
adc
pop
movsl
sbbb
xor
pop
xchg
mov
aaa
mov
in
add
das
ss
clc
sub
push
push
repz
daa
mov
dec
or
push
outsb
pop
adc
shrl
int
insl
mov
push
mov
jge
sub
cmp
and
mov
adc
mov
addr16
xchg
rclb
sbb
pop
cmp
cmp
ret
enter
insl
les
lret
cmp
aaa
into
or
lods
and
mulb
pop
test
arpl
sub
subb
cmp
push
sub
pop
mov
and
pop
outsl
loop
out
cmp
jge
aaa
adc
mov
lret
xchg
sbb
cmp
addl
int
xchg
mov
idivb
cmp
in
mov
test
xlat
xchg
or
fwait
dec
push
fcompl
nop
jae
jnp
mov
rcrb
nop
pop
mov
lock
gs
mov
push
sub
xor
mov
dec
and
mov
je
lret
xchg
arpl
pop
push
xchg
push
jne
in
add
xor
xchg
xchg
cmpsb
sti
adc
xor
jne
outsb
sub
or
add
mov
mov
push
pop
mov
dec
fistpl
sti
push
addr16
je
jg
ret
sbb
jns
xchg
add
cmpsl
xchg
mov
lahf
cld
push
or
les
fstps
lea
or
loop
lds
cli
cs
xor
push
inc
add
jge
mov
fiadds
push
pop
in
stos
iret
data16
or
movsb
ds
test
jl
xchg
addr16
lock
push
pop
cwtl
repnz
lock
xor
scas
lcall
push
jmp
jge
mov
frstor
outsb
push
dec
push
lds
aas
pop
pop
adc
add
dec
pop
pop
nop
ja
stos
or
mov
jle
inc
enter
je
bound
jge
aas
daa
inc
or
lock
push
jmp
adc
push
cld
mov
repnz
cli
pop
movsb
inc
daa
mov
add
mov
imul
leave
repz
dec
subl
sbb
cmp
out
or
cmc
jno
mov
xchg
and
mov
iret
mov
mov
push
ljmp
mov
sbb
xor
and
repnz
test
fcompl
fisubs
clc
fdivrs
leave
mov
mov
pop
push
and
in
fsincos
and
icebp
mov
cmc
push
adc
aaa
pop
out
int
adc
xor
xor
movsl
dec
lods
push
lcall
mov
inc
jne
test
pop
mov
jb
or
in
xchg
sub
shr
repnz
xchg
div
lret
clc
adc
jo
cld
pushf
mov
adc
ljmp
stc
adc
or
hlt
adc
jge
xor
test
sbb
cwtl
bound
cld
sbb
sbbl
cmp
cmp
in
xor
ficomps
add
test
mov
push
jae
cmp
xchg
insb
sbb
xor
push
mov
adc
pusha
jne
rcl
push
mov
or
test
mov
mov
inc
jno
cmpsl
ret
rcll
ja
fs
lock
push
xchg
and
lds
push
lods
jge
xor
mov
fs
pop
stos
mov
rcll
add
sbb
shrb
inc
or
or
call
mov
and
sub
inc
push
std
pop
insb
inc
or
test
jb
mov
fldt
inc
or
daa
stos
and
gs
inc
ret
ret
outsl
push
and
xor
rorl
pop
ljmp
call
xchg
insl
and
cltd
xrelease
cmp
mov
mov
rcrl
cwtl
xor
loope
movsl
mov
scas
add
mov
jl
pop
mov
push
cli
and
arpl
pop
dec
mov
ficoml
repz
dec
ret
lahf
push
sbb
xor
sbb
repz
movb
movsb
mov
sahf
ss
mov
jmp
mov
add
inc
aad
mov
add
imul
inc
or
inc
mov
addr16
arpl
je
lods
lds
shrl
push
les
mov
sbb
fwait
add
pop
decb
sahf
incb
insb
jmp
xchg
call
mov
dec
shrb
repnz
pusha
mov
jo
xchg
aaa
xor
jae
mov
aad
mov
sbb
stos
inc
or
push
sub
daa
aam
jg
mov
lods
jno
push
mov
aam
gs
jb
arpl
and
aad
outsl
pushf
jne
mov
out
lds
xor
subb
sbb
push
outsb
inc
dec
fs
rcrb
fstps
xchg
popf
xor
sbb
ds
or
xor
fldcw
adc
adc
push
lret
mov
pop
push
ret
xor
insb
hlt
pop
xlat
lcall
imul
sub
in
sub
sub
mov
nop
sub
in
pop
shl
add
scas
dec
mov
sti
mov
dec
gs
mov
in
repnz
lahf
or
sahf
cmp
sbb
sbb
gs
popf
jmp
inc
mov
jmp
cwtl
xor
cmp
sub
mov
fistpl
sbb
jae
cmpsb
mov
push
push
es
sub
mov
and
fldenv
mov
gs
inc
inc
aam
loope
adc
and
jb
and
add
xor
loop
sahf
mov
mov
ljmp
call
lret
and
or
pop
mov
push
in
mov
fsubl
push
out
jbe
add
in
jne
dec
daa
jno
out
out
stc
pop
dec
mov
mov
mov
je
js
pop
lods
lret
mov
popa
push
int3
and
divb
or
lret
ja
mov
enter
xchg
dec
pop
lahf
int3
std
cld
pop
xor
dec
shlb
ret
jg
adc
jle
aad
lds
xor
mov
loope
pop
fnsave
jp
inc
lock
scas
push
fmulp
xor
das
jne
xchg
sbb
inc
sub
pushf
insl
jno
sbb
inc
fsub
inc
push
cmp
cmp
inc
dec
xor
xchg
xchg
mov
aas
and
fisubrl
pushf
inc
fsubr
out
xchg
popa
cmp
je
xchg
mov
cld
mov
call
mov
push
gs
repz
loopne
push
push
mov
gs
imul
xchg
add
xchg
adc
xorb
xor
sbb
lcall
gs
push
ret
loope
mov
mov
pop
xlat
test
mov
idivl
inc
loop
mov
jbe
xor
test
lret
sbb
add
scas
fisttpll
jo
dec
outsb
aad
cmp
icebp
inc
pop
cli
push
rcl
or
sub
inc
dec
mov
ficomps
fdivrs
or
gs
mov
in
int3
sbb
pusha
jmp
inc
jecxz
jg
dec
fldenv
adc
cmpsb
mov
or
inc
and
add
mov
insl
pusha
cmc
scas
push
cmpsl
fs
dec
dec
bound
jnp
jae
mov
jae
sbb
mov
test
xchg
fbld
mov
adc
in
mov
push
push
and
cmp
push
test
ret
push
aad
stc
outsl
orl
hlt
mov
cmc
adc
into
and
cmpsb
cs
fmul
lret
popa
arpl
jg
pop
sbbl
out
push
cmc
or
inc
fcompl
rorb
das
outsl
mov
dec
loope
aaa
cltd
lock
pushl
adc
outsb
sbb
inc
or
lods
cmp
pop
aas
pop
or
cs
pushf
out
lea
xchg
mov
add
jecxz
bound
into
sbb
sub
das
scas
incb
test
pop
fs
inc
js
adc
lret
outsb
sbb
ds
mov
inc
xor
adc
cmpsl
shl
out
arpl
dec
push
cmpsl
push
sarl
nop
xchg
ljmp
mov
and
scas
aaa
push
jp
push
in
hlt
and
addr16
nop
fldenv
or
push
popf
fsubs
add
sti
stc
and
es
pop
filds
inc
mov
fstps
fcoml
add
pop
hlt
dec
and
sub
jnp
out
in
ja
rcrb
and
iret
dec
and
scas
sbb
xchg
out
cmc
inc
add
add
movsl
mov
xor
mov
mov
ficoml
jg
mov
icebp
adc
pop
push
out
aas
xlat
inc
popf
mov
inc
jmp
iret
nop
sub
loopne
sub
out
cmp
sbb
andb
scas
aaa
sbb
and
mov
pop
ds
jae
sub
push
xchg
int
ret
ja
clc
push
pop
mov
cld
arpl
inc
sbb
int
mov
lret
cwtl
pop
loope
lods
sbb
sahf
dec
loop
dec
xchg
mov
fldcw
or
cmp
pushf
adc
in
jne
in
sbbl
mov
mov
jecxz
sub
ficomps
nop
sbb
push
pop
std
push
mov
cmp
cmp
je
jae
cmpsl
out
or
push
out
sub
hlt
fidivl
pop
jecxz
lret
icebp
icebp
sub
daa
jmp
pop
dec
fisttps
push
addr16
sub
xchg
mov
jo
jecxz
xor
pop
inc
lods
dec
mov
fidivl
mov
inc
fmuls
adc
pop
cltd
cmpsb
cmp
test
movsb
mov
mov
mov
movsb
mov
inc
icebp
icebp
sbb
sub
dec
sbb
clc
add
cmp
das
inc
pushf
imul
orb
pop
xor
mov
and
add
pop
das
mov
ret
scas
jp
shrl
cmp
cmp
in
pop
cmp
rclb
push
mov
dec
jnp
rcrb
or
icebp
jecxz
imul
imul
movsl
inc
ficompl
das
push
mov
cmpsl
mov
scas
mov
sbb
xchg
fidivl
inc
ljmp
pushf
inc
icebp
adc
mov
mov
daa
jo
fwait
das
and
pop
xchg
gs
movsl
cltd
fcompl
inc
adc
cs
loop
jle
and
cmp
test
lds
les
xchg
negl
lods
mov
and
pushf
cli
jns
mov
add
outsb
rclb
stos
and
call
jne
cvtps2pd
sarl
pop
lods
pushf
dec
rcll
ja
in
fisubrl
loopne
and
jo
test
and
dec
jmp
jmp
fidivl
pop
fbstp
movsb
inc
lds
repnz
jge
pop
fbstp
mov
std
es
mov
and
and
icebp
mov
cmpsl
cmp
inc
nop
in
idivb
jne
inc
cmp
andb
pop
js
fwait
sbb
pop
lret
mov
mov
stos
out
xor
pusha
add
dec
repnz
imul
cwtl
fwait
aas
lret
push
inc
int
sub
push
loopne
test
sub
iret
xor
pushf
lods
in
dec
mov
stos
cmp
adc
cltd
iret
sti
cmpsl
mov
mov
sti
mov
mov
push
loop
or
int
int3
daa
outsl
jnp
int
andl
insb
cwtl
inc
xchg
sbb
scas
sbb
das
out
loop
ljmp
mov
sahf
fsubr
iret
pop
push
mov
inc
ljmp
xor
cwtl
loope
int3
push
call
into
push
mov
mov
mov
mov
push
stos
mov
jo
mov
fbld
or
or
or
imul
inc
lods
out
cmpsl
sbb
sbbl
add
ds
jb
inc
sub
adc
js
inc
ljmp
call
mov
dec
jbe
lret
popa
dec
jae
sbb
out
insl
sbb
insl
subb
jmp
out
jg
mov
dec
pusha
or
or
jnp
mov
inc
loopne
rcll
lret
lds
xor
jmp
scas
in
ja
cs
push
inc
pop
fdivrs
xor
sub
push
mov
aas
cmpsb
pop
addr16
sub
mov
mov
mov
int3
rorl
sub
push
shrl
bound
inc
push
lahf
mov
lret
pushf
fnstsw
test
push
jno
shrl
lea
adc
sub
push
pushf
add
int3
mov
push
enter
add
negl
pop
inc
fidivrs
aas
jp
ss
andl
inc
andb
daa
lcall
pop
outsb
imul
pusha
mov
fucomip
mov
sub
xor
inc
ror
movsl
inc
sub
mov
mov
push
jno
cmp
jnp
push
mov
inc
loopne
icebp
mov
cmp
push
adc
out
xchg
inc
stos
inc
icebp
adc
mov
inc
in
rcr
testl
push
mov
cmp
aad
ret
or
ljmp
mov
sub
lahf
enter
les
mov
pop
cmp
daa
notb
int3
mov
cmp
or
iret
pop
cmp
xor
loop
pop
fcomps
inc
pop
cmp
add
shll
shrb
cmp
cmp
fdivrs
imul
pop
sbb
les
hlt
lret
test
ds
frndint
sbb
fsubrl
fistpl
xchg
xchg
mov
iret
lds
notb
jo
push
ljmp
lock
mov
pushf
mov
jmp
fs
loopne
cmp
cmp
jmp
pop
lret
pop
dec
mov
jbe
mov
leave
mov
mov
mov
mov
adc
ret
pop
push
pusha
fistpl
es
repnz
imul
daa
fadds
imul
and
fwait
iret
xor
add
shl
jb
dec
es
xchg
jge
dec
jp
mov
sub
or
pop
and
inc
js
cli
clc
xchg
jle
mov
call
shrl
push
inc
jg
unpcklps
mov
adc
jnp
mov
les
scas
ljmp
push
repnz
ficompl
pop
jecxz
dec
and
sbb
push
call
sbb
inc
movsw
or
cltd
addl
mov
push
mov
dec
out
xor
mov
in
std
sub
sub
ds
sbbb
lock
mov
mov
add
sub
clc
imul
cmpsl
jbe
aas
std
aam
out
pop
pop
push
scas
xchg
jo
mov
psubw
jge
push
or
mov
repz
jecxz
je
inc
enter
add
cmp
push
dec
push
in
stos
sub
push
or
rcr
mov
add
ret
lods
mov
enter
sub
ds
fbstp
fidivs
pusha
dec
or
idivl
adc
cmp
sbb
xlat
dec
repnz
sbb
es
push
out
dec
jbe
movsl
dec
hlt
xchg
mov
enter
inc
inc
fdiv
in
rol
pusha
test
adc
push
or
lock
pop
fmuls
ficomps
stos
and
mov
push
mov
jmp
aad
mov
xor
or
shll
loop
insl
mov
les
cmc
jmp
or
ret
and
test
push
fidivl
add
icebp
shlb
add
add
shl
ret
sbb
add
pop
fcoms
dec
push
lahf
add
loope
sub
cld
jae
dec
int3
push
pop
xor
push
cmp
ja
push
and
je
adc
leave
jg
push
add
jg
jmp
inc
test
and
test
lcall
pop
lds
insb
cmc
rcrb
or
push
daa
and
lea
or
pop
hlt
test
fwait
xor
mov
mov
out
sahf
mov
dec
sar
mov
mov
inc
pop
mov
mov
xlat
and
les
std
jno
enter
adc
adc
bound
loopne
addr16
mov
pushf
cmp
divb
pop
sbb
add
and
shrb
jbe
sahf
push
xchg
push
jge
jae
stc
and
rcl
imul
bswap
rcl
mov
fmuls
mov
lahf
mov
in
add
sub
xchg
push
add
cwtl
and
jp
mov
sbb
add
or
sbbb
andl
and
cmp
and
jmp
xlat
cmp
jae
sbb
push
sbb
lcall
out
jmp
jg
xchg
notl
mov
mov
inc
mov
aam
sub
ljmp
mov
fdiv
inc
sbbb
adc
cltd
and
add
lods
scas
jmp
icebp
popa
lahf
hlt
sbb
mov
mov
jne
dec
arpl
ficoms
pushf
dec
or
jns
xchg
pop
fwait
xor
and
pop
repnz
dec
or
jecxz
pop
repnz
mov
loope
inc
nop
mov
fcomip
sbb
mov
xchg
sbb
cwtl
jae
fadd
rorb
fisubs
mov
add
cmpsb
inc
movsb
pop
in
push
test
scas
inc
push
movsl
jno
pop
out
js
aam
push
add
inc
adc
test
iret
dec
lret
push
shrl
das
push
repnz
aas
fcoml
mov
test
push
inc
push
xor
into
ror
repnz
or
movsl
push
lret
xchg
in
adc
mov
and
add
lea
pop
ds
pushf
js
mov
dec
fdiv
andl
pop
sub
in
lcall
xor
pop
sti
fwait
push
repnz
pusha
test
int
aas
mov
je
dec
mov
add
arpl
push
insl
bound
jns
lea
fsubrs
jge
nop
std
insl
enter
imul
pop
dec
and
das
mov
leave
fsubrs
lea
dec
sub
test
mov
test
pop
cmp
and
or
mov
ret
sbb
inc
mov
push
inc
mov
lods
fisubrs
mov
les
insb
rolb
mov
mov
pop
cli
sbbb
aam
mov
cmpsl
outsl
sbb
pop
dec
fxch
loopne
int
mov
inc
adc
sbb
inc
cmpsl
adc
mov
jbe
ja
adc
rclw
cwtl
inc
in
out
cmpsl
mov
insb
cmp
popa
mov
pop
pusha
aas
pop
adc
subl
mov
rolb
ret
sbb
dec
outsb
stc
jl
and
andl
mov
and
xor
fnstenv
in
pop
mov
dec
sahf
out
icebp
add
add
ret
xor
pop
pop
add
jbe
stc
and
inc
ds
xchg
push
xchg
mov
sbb
test
sub
xor
inc
pop
out
std
repz
bound
test
sbb
adc
sahf
lods
popa
and
jno
es
rcrl
scas
sub
jle
add
bound
mov
shlb
mov
andb
sub
lods
popf
into
jb
ficoml
lret
movsl
and
andl
fwait
cmpsb
mov
ret
leave
pusha
pop
or
xor
es
leave
jo
jae
cmpl
outsb
add
or
aaa
or
sbbl
adc
scas
lods
mov
adc
enter
loopne
sub
insb
movhps
or
sub
cmp
dec
scas
mov
add
xchg
pop
sub
jg
sub
xchg
insb
push
xor
xor
lods
andnps
lds
or
mov
cmp
mov
or
sub
out
cmpb
mov
leave
xchg
jb
stos
std
addr16
lret
inc
inc
cld
ss
mov
lock
pop
es
jbe
pop
jmp
sub
sub
lahf
test
call
or
data16
dec
shrl
lea
lods
and
fwait
out
leave
stos
jmp
push
adc
inc
imul
cmp
add
cs
stos
lcall
cltd
sub
mov
outsb
jle
rorl
mov
data16
or
push
cmp
mov
xchg
ret
jb
dec
cwtl
or
stos
mov
dec
sub
cmc
test
aas
inc
pop
scas
decl
jb
xor
adc
add
mov
jge
cmp
mov
into
dec
add
rorb
mov
mov
jecxz
xor
xchg
fldcw
movsl
xor
in
jb
ss
sub
mov
push
loopne
pop
loopne
out
aas
adc
loopne
mov
xor
arpl
aaa
insb
xchg
push
jp
int
xlat
lret
sbb
outsb
lods
jno
aad
outsl
daa
movsb
dec
dec
iret
jb
cs
leave
int3
push
xchg
sub
sbb
lods
dec
push
sbb
jae
and
loop
cmp
pop
or
repnz
sub
ja
call
in
hlt
out
jg
add
mov
js
ljmp
jns
mov
push
out
jae
mov
cmp
mov
mov
mov
dec
xchg
sub
pop
xchg
dec
clc
outsl
ret
mov
ret
pop
xor
scas
jae
mov
repz
mov
iret
pop
mov
mov
xor
mov
inc
jl
and
adc
inc
or
push
lock
jp
sahf
adcl
jae
add
xchg
mov
out
dec
mov
rclb
adc
aad
mov
loop
xor
mov
adc
test
in
xor
xchg
dec
mov
fsubrs
sbbl
sub
fwait
sbb
cltd
gs
sub
push
mov
jne
test
ljmp
mov
ja
sub
cmpsb
bound
cmp
les
test
repz
pop
xlat
gs
xchg
outsl
daa
aad
jnp
mov
scas
xchg
dec
aad
push
and
movsl
in
xor
mov
pop
mov
adc
mov
xchg
shlb
xlat
push
and
stc
pop
loop
jae
icebp
daa
sbb
or
fistpll
push
jbe
add
sub
imul
cmp
and
aaa
mov
add
out
cli
repz
fstpl
movsb
cmp
xchg
cmp
stos
cltd
mov
add
add
mov
fs
jno
inc
sub
ljmp
fwait
ss
push
and
out
xchg
mov
push
dec
in
push
lods
pop
loopne
cmp
out
rcrb
dec
ja
test
dec
cwtl
aad
mov
pop
mov
pop
loopne
test
and
ret
pop
fisubrs
push
les
and
xchg
mov
pop
sub
arpl
xor
rorl
add
ret
inc
and
ret
pop
pop
aam
and
lds
iret
or
jecxz
xor
jle
adc
popl
pop
icebp
lret
adc
xchg
cmpl
jbe
sub
pop
lods
mov
lahf
aas
addl
jle
inc
ds
scas
outsl
adc
jno
leave
je
movsl
cmp
sbb
push
aad
sbb
or
fsubrl
push
dec
loop
mov
inc
xor
xchg
pop
cmp
subb
xor
add
inc
in
es
xchg
push
hlt
data16
js
push
and
push
xchg
dec
push
test
loopne
mov
loopne
ja
out
cld
pusha
test
bndstx
mov
scas
fisubs
dec
iret
data16
fwait
int3
or
je
push
sub
in
mov
fidivs
mov
outsb
add
or
insl
adcl
jecxz
push
push
testl
and
and
sbb
or
mov
dec
mov
and
mov
aad
cmpsl
subl
mov
pop
in
imul
shrb
sbb
jmp
push
mov
push
bound
mov
and
inc
hlt
xchg
pop
xor
mov
test
mov
out
sti
jp
loope
mov
fldt
jg
int
in
lds
popa
dec
push
mov
pusha
push
dec
dec
fadd
xor
in
stc
scas
and
cli
mov
inc
imul
mov
es
orl
pop
scas
xchg
xor
fisttps
push
aaa
push
cs
dec
in
lock
call
mov
or
stc
or
notl
adc
pusha
mov
movsl
dec
div
test
out
mov
xor
out
daa
push
jb
clc
xor
stos
cmp
movsb
jns
inc
stos
out
jno
jne
fsubp
addr16
addr16
lea
lea
xchg
push
stos
and
xchg
sbb
cmp
das
adc
int
adc
outsb
adc
cmc
pop
lret
mov
testb
mov
in
xchg
ret
fdivs
popa
sub
repz
push
and
adc
sbb
cltd
test
or
cmp
cmp
sarl
jns
loope
js
push
lds
mov
shr
fldenv
cli
push
ds
outsl
js
pop
mov
outsb
add
jecxz
and
mov
mov
or
iret
mov
cld
inc
aas
jns
clc
mov
cltd
push
frstor
sbb
xchg
imul
pop
jbe
mov
scas
dec
mov
jno
mov
mov
icebp
jecxz
xchg
and
xlat
in
in
mov
xchg
call
ficoms
xchg
and
movsb
ret
call
lock
andl
lock
and
popf
or
int3
push
jmp
push
and
dec
es
xchg
lret
sbb
rcll
mov
add
xchg
cs
stc
je
mov
jnp
mov
mov
fpatan
sbb
inc
stos
add
push
mov
mov
or
in
dec
dec
imul
xor
nop
je
sbb
lods
hlt
mov
or
mov
xchg
and
xlat
xchg
adc
out
xchg
test
push
mov
fcmove
pop
add
adc
inc
data16
pop
mulb
lret
es
adc
xor
rcr
cld
cs
jne
dec
aas
cmp
out
test
in
xchg
mov
xor
pop
pop
mov
into
cld
xchg
cltd
cmp
dec
sub
xchg
daa
add
xchg
pop
nop
and
push
mov
mov
stos
rclb
daa
sub
lods
sahf
pop
inc
fstps
or
lea
pop
out
mov
fwait
es
fwait
push
or
pop
inc
push
push
push
arpl
adc
sbb
xor
scas
stc
cmp
std
sub
faddl
js
xor
rol
out
hlt
pop
movsl
or
aam
mov
lods
imul
mov
sub
daa
xlat
pop
nop
fwait
xchg
int
ret
mov
mov
pop
mov
push
push
mov
jo
pop
testb
jge
pop
mov
and
lods
mov
xchg
or
loop
movsl
adc
jge
lret
aad
dec
mov
lcall
ljmp
ds
orl
cmp
mov
pop
in
cmp
pop
or
insb
jecxz
xchg
add
roll
sub
jge
xchg
inc
and
jge
pop
fsubrs
pop
mov
scas
movsb
rsm
mov
pop
movsb
cli
test
or
scas
std
fucomip
rolb
cs
lods
cmp
pushf
adc
sub
enter
sti
nop
adc
pop
xlat
xchg
insb
sub
sahf
pushf
lock
dec
in
imul
pop
mov
insb
lods
cli
enter
lds
adc
pushf
sub
pop
mov
je
xchg
add
in
pusha
notl
adc
sbb
adc
jne
popf
xor
cwtl
jb
push
loop
adcb
pop
adc
aaa
out
and
mov
or
ficoml
xor
addb
loope
pop
sbb
imul
out
lea
add
inc
pop
mov
int3
arpl
cmp
das
addr16
enter
daa
pop
ja
push
pop
inc
adc
std
std
push
das
loopne
scas
and
sbb
adc
mov
lods
andb
jecxz
fwait
gs
out
xchg
mov
aaa
sti
outsl
iret
inc
lretw
dec
orb
ljmp
pop
out
loopne
and
shr
addl
xchg
push
pop
dec
out
sbb
inc
jbe
clc
cs
pop
pusha
sbb
aaa
mov
xor
push
add
cmpl
dec
ds
pusha
rolb
sarl
mov
leave
loop
aam
fsubrs
push
adc
stc
pop
scas
ljmp
mov
fidivrl
or
inc
sub
into
mov
test
mov
fisttpll
fldcw
xchg
pop
lock
mov
mov
pop
dec
pusha
or
rcrl
mov
adc
push
lcall
popa
push
push
xchg
mov
push
repz
loopne
xor
stc
adc
sub
pop
aad
shl
inc
jns
pop
stos
fs
gs
enter
mov
dec
dec
dec
or
lea
adc
addl
lods
push
fisubrl
into
test
cmp
insb
js
pop
mov
sub
mov
scas
out
xlat
stc
pop
pop
test
rep
cmp
adc
je
adc
psubusb
loope
ret
sub
xor
mov
addb
aam
add
pop
mov
xor
push
adc
mov
and
inc
shrl
mov
cmpb
rcl
mov
daa
jmp
insl
sub
pop
xor
out
jo
daa
shll
mov
mov
dec
cmp
fimull
xchg
pop
hlt
mov
mov
xor
imul
test
addb
out
xchg
adc
sub
dec
fiadds
cld
outsl
sbb
gs
sbb
mov
pop
add
out
out
fisubl
jecxz
push
cld
xchg
and
inc
xor
xor
dec
mov
mov
cmpsl
call
es
push
pop
inc
sbb
push
push
mov
pop
in
es
mov
lods
out
adc
jmp
jp
icebp
mov
int3
imul
xchg
lods
pop
mov
sbb
clc
sub
iret
jg
push
jp
mov
mov
inc
in
mov
adc
sahf
push
ret
sar
test
enter
outsb
add
add
jmp
fimull
cltd
iret
mov
scas
fcoml
in
push
pop
ss
add
inc
or
push
inc
adc
ficoms
cmp
cmp
pop
pop
lock
xor
ljmp
mov
andl
cmpsl
pushf
inc
mov
or
cld
inc
lret
int3
mov
or
mov
imul
sbb
and
into
das
shlb
mov
outsl
xorl
sub
mov
xchg
push
aas
cwtl
or
mov
testl
add
pop
stos
fisubl
enter
mov
popa
cs
shll
test
and
cmp
mov
jle
std
aam
mov
sub
dec
js
add
in
aaa
or
xchg
mov
add
add
test
add
cli
pushf
pop
addb
lahf
outsl
daa
xchg
pusha
ret
rcll
lea
xchg
cmp
xor
ja
add
sbb
sti
cmpsl
cmp
pop
ljmp
mov
ret
js
or
or
adc
adc
add
fwait
insb
push
sub
je
test
movsb
cmp
movsl
push
enter
or
ds
push
cwtl
push
data16
cli
adc
push
ja
aam
inc
or
scas
add
lods
cmpsb
xchg
mov
and
xchg
mov
js
cmp
ds
lock
pop
sbb
mov
mov
addl
cmp
mov
push
sbb
out
cli
popa
push
gs
add
scas
jg
sbb
popa
aaa
js
arpl
enter
add
pop
adc
lea
xchg
xor
clc
ljmp
jg
or
mov
repnz
push
mov
mov
pop
addps
repz
jb
or
push
sbb
jmp
aam
movsl
stos
jp
or
xchg
icebp
or
aam
dec
push
inc
or
add
push
mov
in
cld
fs
std
rclb
mov
and
mov
sbb
js
je
inc
xchg
lret
bound
int3
in
xor
arpl
test
sbb
repz
shlb
les
shll
mov
or
sub
pop
pop
movsb
push
aas
mov
mov
mov
mov
fwait
mov
pushl
jne
dec
sbb
or
aas
mov
in
mov
jp
into
jne
sbb
les
lret
xchg
and
mov
inc
and
out
insb
add
fisttpll
and
js
cmp
mov
inc
jne
out
rcrb
cld
jae
pop
or
adc
mov
push
and
andl
lds
push
sbb
dec
sti
push
push
dec
bound
sahf
xor
fidivrl
xor
jnp
inc
iret
push
jge
cmp
jg
iret
in
inc
or
aam
push
or
cmc
shr
cs
pop
loopne
lds
cmp
iret
xchg
push
pop
push
mov
hlt
xchg
and
int
in
push
push
xorl
adc
jle
pop
jmp
xor
inc
dec
mov
lods
push
test
mov
fimull
xchg
mov
lods
cli
insl
sbb
add
sbb
and
push
adc
insb
dec
xor
inc
lcall
and
fcomip
cltd
xor
out
inc
xchg
push
inc
mov
scas
lcall
cli
das
out
inc
sbb
dec
add
xor
or
sbb
sub
cmpsl
fwait
xor
outsl
imul
and
test
jns
inc
fwait
xchg
repnz
pop
and
mov
shrl
add
ja
lods
mov
dec
jle
mov
fwait
or
das
ja
dec
adc
inc
add
dec
inc
and
jmp
dec
fs
xor
out
insb
and
inc
xlat
mov
push
popa
sbb
icebp
es
hlt
pop
shlb
mov
out
lea
mov
scas
xchg
hlt
stos
push
dec
jl
jmp
outsl
lods
dec
ret
mov
gs
imul
lcall
mov
sub
mov
fdivrs
xor
icebp
sub
push
lock
inc
xchg
push
out
fists
outsb
add
inc
cmc
mov
cld
or
scas
jns
inc
push
repz
jge
dec
lahf
or
mov
dec
lahf
iret
lods
sub
jne
inc
xor
and
adc
mov
mov
push
insb
jl
repz
outsb
aad
mov
push
xchg
decl
jb
or
fnsave
xlat
ljmp
call
aam
adc
scas
lret
cwtl
aam
push
mov
or
push
dec
mov
lods
inc
or
shll
iret
jecxz
mov
push
lret
les
arpl
mov
mov
pop
inc
jbe
mov
aad
rcrb
aaa
aad
xor
adc
add
ljmp
jno
push
movsb
stos
pop
sub
test
js
adc
push
sahf
jno
fdivs
rol
fadd
xor
and
lods
mov
push
inc
dec
xor
shrb
cmc
mul
push
fcmovne
mov
inc
jns
out
adc
xor
addl
int
mov
fwait
popa
loope
clc
adc
repz
add
dec
lock
ret
pop
ds
das
addr16
pop
push
push
jl
mov
scas
cld
push
cmp
adc
fimuls
test
or
ret
xchg
cmp
fiadds
or
popf
inc
cld
sub
xchg
xlat
imul
in
in
xchg
mov
icebp
seta
cmpsb
int3
leave
push
pop
and
faddl
inc
daa
lret
xor
pop
mov
adc
daa
stos
test
xor
or
push
inc
jle
mov
out
mov
cltd
sbb
sbb
aas
ss
add
in
negb
loop
pop
mov
xchg
imul
dec
add
bound
orb
dec
xchg
test
sbbb
rcrl
imul
xchg
subl
nop
pop
adc
mov
leave
dec
cmovb
mov
add
or
push
and
mov
inc
or
adc
das
roll
add
test
jecxz
rcrl
sbb
fwait
sub
mov
xchg
lods
sub
push
sbb
mov
test
cmc
popf
push
les
sub
lods
adcl
mov
lcall
push
loop
leave
int
out
andl
pop
imul
sbb
lods
lret
add
ss
pop
jb
mov
add
es
test
xor
addb
fcompl
loopne
aas
mov
add
es
mov
jle
add
or
jmp
cmp
lods
fmull
in
addl
add
push
rcr
jne
jmp
movsb
mov
gs
test
aas
pushf
sbb
jne
mov
pop
frndint
sbbb
lret
mov
sub
mov
mov
or
jle
mov
fldenv
je
test
lahf
mov
jl,pn
sbb
inc
xchg
jne
adc
cmpsl
out
aas
add
mov
inc
ja
ljmp
dec
sub
add
in
xor
pop
fsubl
mov
ja
mov
push
sbb
and
xchg
ret
fwait
pop
add
les
sub
mov
push
sbb
fcomi
inc
ljmp
cmp
pop
clc
sbb
adc
test
dec
lock
imul
pop
push
mov
lock
inc
vcomisd
fwait
mov
push
popf
mov
fwait
aas
push
jno
jl
js
shlb
xor
jnp
aas
mov
xchg
push
fsubl
and
jmp
pop
cmp
fwait
pop
adc
mov
sti
xchg
xchg
xor
sar
sbb
lods
xor
insb
mov
push
mov
pop
push
nop
cmpsl
mov
push
push
stos
mov
ret
xor
scas
push
out
test
sbb
mov
jp
jnp
mov
pop
popf
or
mov
scas
data16
mov
cld
add
lods
ficompl
sub
hlt
inc
data16
lret
cmp
ljmp
mov
jmp
lea
testl
jo
insl
stc
ds
xor
shrl
sub
lds
cld
outsl
add
dec
bnd
jae
sub
sbb
into
pop
mov
xchg
mov
ja
jno
mov
aas
dec
add
cmp
xor
dec
jg
cmpsl
pop
mov
adc
pusha
xchg
sub
scas
out
imul
add
xor
rcl
add
mov
inc
mov
fstps
or
fidivs
adc
sbb
jg
sti
xor
and
or
lock
jb
fildll
mov
out
jae
int
or
je
popl
cmp
fucomip
pop
xchg
xchg
sbb
in
cmp
xchg
jnp
pop
mov
imul
or
les
jg
jnp
int
xchg
dec
outsl
push
rorl
lea
cmp
lcall
lds
mov
repnz
ss
sub
adc
mov
inc
cwtl
lods
jg
imul
popf
mov
sbb
mov
int3
imul
repnz
push
pusha
int3
dec
insb
cmpl
in
mov
push
int
ljmp
jge
or
push
xchg
sahf
cmc
jle
lahf
pop
lock
xor
pop
push
popa
ja
jg
in
mov
dec
jae
cmpb
scas
lcall
pop
loope
ret
add
jle
dec
test
and
inc
repz
mov
adc
mov
je
in
xor
jmp
stc
je
fsub
cmc
pop
push
add
fsin
test
aaa
repz
dec
sub
inc
repnz
mov
shrb
aam
xchg
repnz
pop
xor
adc
mov
ja
xorb
aad
xchg
pop
sub
mov
das
xchg
jno
popa
and
or
adc
xchg
out
cmp
sub
fs
js
inc
cmp
shr
fdivrs
sbbb
xchg
add
cmc
ljmp
mov
ja
dec
lret
clc
jg
and
cld
fwait
movsb
cmpsb
rcrl
lock
insb
jae
cmp
out
ficoms
cs
pushf
ret
inc
jne
add
iret
add
cmpsl
shrb
out
adc
outsl
js
gs
sbb
or
fldt
add
nop
andb
out
cmc
mov
dec
sbb
sti
mov
mov
adc
icebp
inc
pop
insb
dec
sarb
aam
mov
jg
shlb
inc
popa
enter
mov
mov
mov
fidivrl
mov
pop
push
mov
mov
insb
repnz
shl
pop
dec
mov
cmp
inc
fnsave
test
out
sub
add
loopne
dec
icebp
adc
inc
addr16
jge
mov
fsubl
cli
push
adc
dec
inc
rcr
push
pop
mov
jg
arpl
in
rolb
sub
icebp
clc
adc
mov
fiaddl
dec
fdivrs
mov
cmc
mov
mov
loopne
adc
jb
outsl
fs
stos
push
jmp
mov
subb
sahf
movsl
xchg
cmpsl
pop
out
pop
cmc
push
ret
or
fwait
lods
mov
push
mov
and
mov
pop
cmp
xlat
sbbb
test
or
xor
push
outsl
push
repnz
mov
jp
adc
jnp
xor
and
jl
das
scas
ret
mov
fbld
inc
cmpsl
inc
cmpsb
and
sub
xchg
mov
leave
push
sahf
and
fstps
out
adc
dec
out
add
into
scas
pushf
dec
push
xor
addl
sbb
mov
jns
mov
orb
jl
mov
pop
sub
xchg
mov
sub
pop
stos
out
mov
loopne
loopne
lea
mov
in
sbb
dec
pop
rcr
repnz
xor
adc
sbb
sahf
push
dec
mov
xchg
imull
imul
sub
inc
test
dec
movsb
std
jp
fsubrp
mov
adcb
mov
movhps
loop
cmp
fsubr
rcr
faddp
cmp
fbstp
je
pushl
sbb
sub
sub
inc
mov
or
dec
xlat
addr16
outsl
ret
mov
popf
xor
lea
fcmovnb
nop
lods
xchg
iret
inc
push
mov
cmpsl
negl
or
xchg
icebp
sub
dec
and
sub
icebp
pop
cmp
ss
std
outsl
je
pop
in
mov
or
out
cltd
xor
mov
mov
adc
push
test
or
lret
xor
jmp
mov
pop
add
fs
mov
pop
mov
inc
xor
outsl
mov
scas
call
mov
ljmp
inc
sbb
popf
imul
ficoml
or
rol
mov
in
divl
add
jb
mov
ss
fcmovnu
xor
psrlq
icebp
or
leave
and
es
push
test
xchg
cmp
or
divps
xchg
cmp
add
fisubrs
out
cwtl
pop
xlat
lods
aaa
sahf
bound
in
repz
iret
push
cmp
call
mov
lods
sti
lcall
cwtl
mull
lcall
lods
lea
sub
mov
shrb
jecxz
or
mov
mov
lret
mov
mov
mov
fisttpll
adc
inc
pop
dec
lahf
pop
mov
repnz
jle
xor
sbb
popl
and
adc
in
lret
ds
out
xchg
jg
das
mov
pop
xchg
jle
scas
mov
jl
cld
push
push
push
sub
and
jno
test
jp
cmp
or
push
cmpsl
in
or
jae
cs
popf
mov
xchg
fwait
pop
cmp
jl
mov
fsts
mov
data16
pop
hlt
popf
pushf
js
mov
lods
mov
repz
enter
rep
insl
sub
ljmp
xchg
divb
mov
sub
sbb
int3
out
imul
lds
and
mov
or
mov
imul
jne
call
add
lods
icebp
adc
stc
popf
sbb
jb
stc
insl
fwait
sti
les
push
out
out
add
subb
or
sahf
or
xchg
cmc
jg
mov
aaa
into
cltd
sti
imul
sub
xchg
stos
leave
jmp
into
xor
scas
nop
jg
inc
pusha
sub
or
pusha
cmpsl
ds
out
sahf
xchg
xchg
dec
mov
scas
ss
xor
test
sbbl
cld
data16
and
add
movsl
xchg
jns
out
movsb
icebp
ds
add
push
push
adc
fidivrs
sbb
pop
pushf
xor
fwait
xor
mov
fstl
cmp
inc
xchg
xlat
mov
in
mov
into
xchg
fimuls
dec
sbb
jmp
and
lcall
gs
fs
pop
inc
add
cmp
or
jo
stos
ss
loope
lahf
sbb
test
cltd
imul
sub
mov
ljmp
ret
les
fistl
cs
dec
dec
cld
inc
dec
data16
cmp
mov
cltd
cld
insl
adc
mov
cmpsb
fwait
xchg
mov
add
dec
pop
xor
ja
dec
push
in
jecxz
sbb
cmp
arpl
test
sub
push
mov
jge
and
pop
xchg
jg
adc
test
dec
cmp
push
movsl
mov
ja
lea
in
jmp
idivl
sbb
push
add
inc
pop
pushl
push
in
pop
dec
movb
jae
int
lret
push
or
dec
jge
mov
xchg
hlt
dec
dec
leave
pop
sti
shrb
call
sbb
xor
sarl
sbb
push
lea
inc
lret
push
out
add
jmp
sbb
push
jge
mov
into
rcrb
fiaddl
repnz
ds
loopne
fs
jge
jg
jmp
pop
shrb
aad
sub
mov
adc
pop
shrl
jmp
out
push
stos
fcoml
orb
push
test
sub
cmp
mov
bound
xor
dec
icebp
inc
dec
mov
aad
add
pop
testl
fnsave
push
xor
xor
aad
ja
xchg
sub
adc
jae
addl
pop
mov
mov
mov
iret
jnp
add
jo
or
dec
fisubrl
jge
sbb
adc
lds
dec
xchg
div
xchg
stos
push
cmpsb
mov
cmpl
hlt
add
fs
pop
ret
repz
mov
or
jle
xchg
dec
adc
jns
popf
jge
rcl
fidivs
scas
mov
outsb
test
jecxz
adc
loopne
adc
adc
inc
aaa
jge
or
sub
push
aad
jno
jnp
fnsave
or
cs
outsb
mull
scas
pop
mov
aam
pop
jb
andb
jle
jg
lret
fwait
mov
add
js
inc
mov
push
nopl
icebp
mov
lock
xlat
stos
push
xchg
rorb
test
push
or
jne
inc
xlat
push
fwait
pop
imul
pop
cmc
sub
pushf
sbb
ret
or
sbb
sbb
ret
bound
mov
pushf
out
inc
out
lret
cwtl
das
loopne
xchg
dec
repz
jnp
fstpl
les
arpl
mov
or
dec
aad
jae
push
push
cmp
sbb
mov
jl
out
icebp
add
popa
sub
scas
xchg
mov
out
xchg
subb
push
int
inc
push
sahf
aad
arpl
out
inc
pop
pop
addr16
mov
push
imul
jbe
xchg
jp
adc
in
ja
test
lret
pop
sub
outsl
push
sti
outsb
out
xchg
inc
xchg
lea
xchg
insb
fisttps
scas
and
in
sbbb
xor
mov
and
xor
sbb
mov
push
or
ret
std
outsl
push
cs
dec
push
sti
lea
xlat
or
mov
clc
cmpsl
xchg
xlat
push
je
js
cltd
sub
lcall
cwtl
xchg
sbb
int
push
cli
ret
sbbl
iret
int
pop
flds
fists
push
add
cmpsb
out
jbe
sub
stos
mov
mov
roll
jl
aaa
jne
rcrl
aas
dec
cmp
mov
repz
adc
dec
insl
ja
cmp
dec
add
adc
mov
xor
ret
jbe
sbb
shlb
bound
test
xor
test
pop
sahf
iret
fwait
cld
pop
xor
and
leave
mov
das
test
into
lods
jmp
ror
popf
icebp
cli
repnz
gs
int3
xor
push
sbb
or
dec
loop
push
leave
je
iret
imul
scas
xlat
pop
mov
in
sar
rolb
aad
adc
add
and
and
test
decb
sbb
sub
sti
push
popa
jle
inc
mov
lahf
mov
mov
das
and
jl
loope
jbe
movl
dec
inc
sbb
xchg
popf
fsubrp
sti
mov
das
sbbl
mov
clc
push
mov
outsl
bound
adc
fldenv
pop
rcrb
jmp
int3
xor
push
inc
push
cmp
xor
rolb
cmpsl
pop
mov
dec
int
cmpsb
shrl
jl
es
nop
mov
sub
pushf
outsl
sub
shrb
sbb
sbb
das
loopne
and
arpl
lahf
ljmp
jg
push
movsl
mov
pusha
les
es
cmp
in
inc
push
outsb
shll
repz
mov
ja
loop
push
aam
mov
test
xor
xchg
push
jg,pn
sahf
dec
in
ret
and
int
notl
sub
das
pushf
sbbb
in
mov
mov
in
rolb
adc
push
lret
andl
jae
jp
inc
jne
das
fcompl
xor
cmp
jnp
addr16
push
sub
imul
pop
shrl
and
clts
jae
pop
xor
xchg
out
inc
dec
mov
sbb
inc
shll
push
jge
call
or
loop
sub
mov
pop
repnz
add
negb
fdivrs
loope
push
jnp
sub
sub
lds
pop
lret
pop
cmp
mov
sbb
cmp
ljmp
and
pushf
das
jge
subl
and
pop
insl
cli
aas
xchg
pop
dec
pushl
rorl
test
cmpsl
xor
add
enter
dec
out
cmp
jecxz
stos
repnz
outsl
push
and
lea
xor
insb
ljmp
bound
ret
fwait
adc
add
inc
ficoms
out
inc
test
cmpsb
test
in
jge
push
cmp
mov
adc
loope
fmuls
bound
out
adc
push
mov
ja
mov
sbb
xor
xchg
cmpsl
xchg
fldt
arpl
es
dec
gs
cmpsl
and
lret
xlat
test
mov
and
cmp
outsb
cmp
cmpsb
clc
stc
dec
data16
inc
mov
testl
xor
push
jecxz
xor
xor
dec
bound
addr16
lock
push
into
fisubrs
inc
ja
jbe
xchg
dec
xchg
sub
insl
jmp
sub
lcall
movsl
sbb
dec
xchg
sub
jo
imul
les
mov
dec
xchg
imul
jbe
jmp
and
insl
jl
cmp
push
ja
cmc
mov
call
shrl
lea
sti
rcpps
push
mov
or
aas
or
sti
stos
stc
scas
ret
mov
std
fstl
lret
xchg
fbstp
adc
dec
rorl
mov
fdiv
call
or
lret
imul
sbb
push
or
or
aad
insb
jl
jg
cmpsl
jl
roll
sub
push
cs
repz
fimull
push
push
dec
mov
clc
adc
leave
xor
push
incl
push
add
rorb
std
mov
lock
mov
mov
and
mov
dec
fidivs
xor
sti
into
adc
aad
adc
jo
and
sahf
popa
inc
imul
sub
dec
mov
in
cmp
push
str
out
adc
cld
inc
or
notl
mov
xor
mov
push
pop
hlt
stos
aaa
cs
jnp
out
or
mov
jns
testb
fdiv
ja
leave
sbb
enter
repnz
dec
push
mov
mov
push
sbb
int
ljmp
clc
pop
mov
adc
add
scas
xorl
jge
lock
dec
sbb
stc
lock
sbb
push
jno
pop
push
aad
data16
in
test
fidivl
xchg
test
xlat
mov
xlat
repnz
pop
and
mov
pop
std
pop
hlt
jg
sbb
xchg
jb
add
pushf
sub
sbb
sbb
daa
push
cmp
inc
jecxz
insl
add
addl
dec
mov
fldcw
lret
xchg
sbb
xchg
out
icebp
xchg
push
divb
push
and
and
out
pop
icebp
dec
mov
cmp
mov
stc
outsl
daa
lcall
dec
add
cmpsl
in
jecxz
mov
insb
les
loop
test
jge
mov
push
fcoms
mov
mov
aas
xlat
ljmp
mov
add
xchg
and
and
shll
add
inc
pushf
jmp
inc
fidivs
js
mov
push
movsl
sub
jns
jl
jmp
lock
shrb
xor
mov
push
and
loop
rcl
jnp
clc
es
xchg
stos
das
dec
adcb
lcall
push
clc
mov
rclb
adc
jge
fnstsw
stos
mov
cmpsb
mov
iret
mov
xor
cmp
sbb
inc
shr
stc
pop
aam
lea
repnz
aam
xchg
or
aas
add
lds
jnp
stos
stos
cwtl
imul
and
loopne
imull
lds
adc
jg
jge
push
shrl
loopne
xchg
jo
mov
rclb
pop
adc
fdivrl
aad
xor
out
cmp
daa
dec
fucomp
sti
push
insl
pop
lock
lret
test
mulb
xchg
xchg
cmp
jmp
cli
popf
jno
xchg
push
mov
push
cli
add
lods
addb
cmpsl
or
mov
sbb
mov
jecxz
inc
add
imul
add
push
jb
sbbl
cmp
mov
lcall
mov
pop
inc
lea
mov
enter
xlat
or
xchg
test
xor
adc
cmp
inc
pop
je
and
jge
sub
lock
movsb
push
adc
into
xchg
cmpsl
stc
inc
out
imul
leave
pusha
mov
rorb
dec
fisttpl
iret
mov
or
adc
dec
xchg
stos
mov
loopne
push
imulb
arpl
pop
push
push
rcrl
xor
imul
fisubrl
aas
lds
out
cli
shll
inc
shrl
and
jg
scas
mov
and
jl
ss
mov
push
leave
out
call
mov
shlb
sbb
cmpsb
fs
xlat
cmp
jl
pop
pop
xchg
jnp
inc
bound
jns
test
pop
xchg
or
scas
xorl
sbb
adc
lcall
sub
leave
movsl
pop
std
mov
je
in
insb
adc
push
mov
inc
mov
sbb
or
decb
jecxz
mov
xchg
popa
lods
outsl
rcrb
push
fcoml
push
shrl
es
xor
pusha
push
push
add
jg
insl
pmaxsw
into
or
das
test
ret
int3
aad
ljmp
out
popa
movsb
pushw
add
int
jo
pop
sbb
and
jns
add
je
pop
into
mov
stc
fwait
testb
cmp
pusha
test
mov
cltd
push
ret
cli
adc
imulb
mov
loop
xor
test
test
dec
aas
add
lods
sbb
adc
add
fsubr
adc
leave
pusha
cmc
xor
es
mov
shrl
cltd
outsb
mov
pop
and
adcl
mov
out
testl
push
or
andl
popa
pop
mov
and
jns
add
mov
pop
and
mov
dec
push
mov
dec
cld
push
fsin
js
xor
mov
sbb
insl
sahf
push
cltd
pusha
cmp
or
mov
rcrb
gs
outsl
sahf
or
sub
xchg
pop
adc
test
push
daa
sub
jl
cmpsb
lods
or
xchg
pop
cli
loopne
insb
mov
dec
push
lcall
push
test
jecxz
data16
das
cli
cmpsl
jo
iret
je
add
bound
pop
mov
pop
lahf
lahf
cmp
add
mov
test
cld
or
push
dec
sub
fsubp
lea
add
mov
iret
int3
mov
xchg
xor
fnstcw
pop
or
dec
jno
addl
jbe
or
int3
addr16
pusha
icebp
pop
int
dec
pop
xchg
adc
dec
xchg
dec
fsts
aam
pop
dec
add
xor
clc
dec
dec
cwtl
loop
and
dec
push
xor
in
popa
dec
out
sbbb
pushf
xlat
ja
mov
jecxz
enter
xchg
pop
int3
out
fsub
decb
js
cmp
sub
push
aas
decl
loopne
in
cmp
fwait
add
scas
out
mov
jb
inc
xor
ja
dec
in
aaa
stc
andb
fwait
out
lcall
xchg
adc
mov
movb
pop
test
mov
sti
add
insb
std
jb
sbb
call
xchg
movsb
shll
or
mov
push
and
pusha
add
cmpl
adc
aas
mov
bound
push
mov
add
clc
outsl
cwtl
gs
stc
cmp
xchg
divl
andl
je
mov
jb
sub
je
sbb
popa
xchg
push
mov
xlat
fsubs
pusha
inc
jge
cwtl
mov
filds
insl
mov
shrb
cmp
xchg
dec
je
je
add
dec
inc
cs
loop
sbb
dec
jecxz
insb
add
loope
ret
mov
jl
loope,pt
xchg
push
aas
mov
iret
jle
test
sbb
loope
imul
pop
inc
inc
xchg
fs
jecxz
sub
cmp
pop
out
add
fucom
gs
jb
add
icebp
lods
cmpsl
sbb
xchg
sbb
test
cs
outsl
mov
gs
push
imul
xor
inc
fisubl
addr16
pop
add
cmp
stos
and
cld
mov
sbb
mov
addr16
daa
pop
hlt
mov
adc
mov
inc
cmpsb
push
mov
jns
js
call
js
mov
out
ficoml
add
mov
push
ror
sbb
pop
jo
loope
cmp
loopne
loopne
sub
dec
lret
mov
dec
aam
les
mov
hlt
jl
add
rol
orl
shrl
xor
adc
icebp
mov
jns
in
cli
lds
mov
pushf
in
aam
xchg
xchg
enter
in
add
add
or
aaa
xchg
daa
push
movsb
in
push
les
lds
loopne
call
movsl
cmp
mov
ret
jbe
adc
in
std
mov
pop
mov
fwait
popa
or
enter
shrl
mov
or
movsl
sub
imul
shlb
cmp
aad
stc
icebp
lret
sbbl
stos
in
and
hlt
push
outsb
mov
pushf
mov
and
and
enter
ljmp
xchg
shl
push
lcall
sahf
push
cwtl
lock
and
lret
filds
sub
mov
push
loope,pt
adc
mov
insb
fisubrl
cmp
inc
stc
add
inc
and
daa
fnsave
lods
loop
dec
lret
and
addr16
push
or
mov
les
cmpsb
fiaddl
pusha
ss
aad
imul
sub
jns
add
leave
mov
insl
push
push
adc
leave
sbb
roll
ret
sbb
jns
sbb
cmp
xchg
jbe
fistpll
mov
mov
movsl
sbb
fisttpl
push
and
stos
adc
test
in
pop
outsl
inc
pop
cmp
pop
fistl
jae
mov
loop
out
sti
lret
out
stos
pusha
imul
adc
lods
mov
jl
loop
pop
cmp
and
push
adc
adc
fcom
add
mov
adcl
xchg
mov
jno
jle
loopne
sub
scas
out
stos
xchg
int
cmp
ja
or
dec
verr
roll
sti
adc
adc
dec
jae
push
jnp
dec
lds
aaa
push
mov
lret
xlat
xor
cmpsb
mov
dec
cs
add
and
dec
aas
mov
add
idivb
cmpsb
ret
xchg
xor
inc
pop
loopne
cmp
dec
mov
mov
jge
leave
mov
mov
fwait
push
adc
jnp
cltd
xor
je
add
movsb
and
mov
je
out
test
dec
shl
sbb
dec
add
and
mov
rclb
push
adc
imul
mov
sbb
aaa
fisubl
movsb
sub
sub
sub
xchg
scas
mov
mov
or
cltd
bnd
mov
sbb
scas
xor
cmp
push
jbe
outsl
ret
xchg
cmc
push
lea
loope
push
lods
mov
lahf
xor
rcrb
out
xor
push
or
imul
fildl
fisttps
xor
jp
xor
aad
insb
cld
mov
adc
and
inc
mov
int
cmp
cmp
test
or
sbb
dec
cmpsb
mov
inc
xchg
clc
iret
pusha
jno
int3
arpl
sbb
or
xor
push
xor
pop
mov
jno
inc
inc
aad
in
xorps
push
push
adc
push
addr16
subl
pop
push
pop
pop
insl
fiaddl
mov
jmp
ret
pop
inc
stos
mov
jns
jle
sbb
add
pop
loopne
and
add
andl
xchg
mov
jp
cmp
cmp
xchg
inc
xchg
cmc
ss
push
mov
sarb
mov
cmp
pop
xchg
loopne
std
icebp
cld
xorb
pop
cmp
loopne
scas
jno
xchg
pop
lret
imul
cmp
dec
push
in
or
sbb
out
dec
test
fldenv
or
jmp
mov
psubusb
mov
mov
cli
cmpsb
xchg
dec
adc
and
pop
mov
adc
imulb
xchg
or
push
je
cwtl
pop
mov
movsb
sbb
das
pop
mov
and
cli
push
sub
subl
fnsave
fs
ret
xor
pop
mov
popl
scas
scas
addr16
nop
add
sub
loope
xchg
in
push
xchg
mov
sbb
test
jg
pushf
sbb
sbb
adcb
cmp
jmp
fnstcw
imul
mov
xchg
imul
frstor
in
out
popa
inc
push
rorb
xor
lret
mov
aas
mov
pop
in
pusha
inc
bound
mov
lret
add
hlt
movsl
xchg
and
sub
movsb
ja
cs
sub
mov
lret
jecxz
or
lock
aad
test
scas
cmp
in
push
mov
or
test
pop
aad
mov
sub
push
adc
js
icebp
enter
fildll
es
movsl
scas
inc
push
pop
ret
je
cmpsl
outsl
mov
fbld
xorl
push
jne
pop
iret
push
das
pushf
lock
jnp
cmp
neg
jp
lock
cld
shr
pop
cli
push
cmc
cmpb
insl
sti
icebp
or
les
insb
inc
dec
mov
fwait
add
jb
movsb
push
push
mov
les
pusha
mov
sub
shl
fmuls
dec
and
inc
loop
fstp
lea
pusha
add
nop
sub
mov
aaa
out
dec
sbb
sbb
dec
pop
pop
xor
in
outsb
pop
popf
mov
popl
ss
out
or
fsts
popf
cmpsl
jae
test
adc
in
jno
addl
call
ds
aad
ljmp
xor
xchg
add
lds
aaa
jbe
out
xor
fisubrl
mov
push
addr16
fadd
xchg
stos
js
dec
popa
ss
push
cmp
xchg
mov
fsubrl
xchg
add
shrl
sbbb
or
push
cmp
addr16
cmp
adc
ret
jne
pushf
jg
dec
enter
loop
test
pop
fildll
push
popf
jo
push
ds
mov
int3
in
pop
lds
ljmp
or
mov
mov
enter
call
fdiv
and
je
loope
pop
adc
sub
mov
pushf
andb
jmp
fpatan
xor
scas
lds
add
mov
dec
lret
sti
push
lcall
push
shrl
dec
insl
xor
nop
negb
je
inc
in
xor
xchg
add
mov
or
adc
inc
xor
pop
and
sbb
cmp
test
jne
fldl
outsl
jo
fwait
push
fcoml
shll
mov
cmp
shrl
add
sub
shll
jno
cmpsl
mov
outsl
mov
ret
and
and
push
mov
adc
sub
xchg
cld
dec
popa
inc
cmp
repz
outsl
push
push
mov
jne
inc
out
loope
loop
push
out
roll
add
adc
pop
and
mov
scas
jle
pop
xor
out
jp
daa
inc
jecxz
inc
xchg
insb
gs
jae
rol
jnp
pop
mov
inc
push
addr16
out
cmp
inc
ret
cld
fcomi
push
lods
ret
xchg
adc
pusha
mov
inc
mov
sti
cmp
rorb
shl
icebp
push
adc
sub
stos
in
out
rcrb
xor
daa
jbe
push
sbb
or
xchg
mov
adc
mov
jne
cmp
mov
xor
add
aam
stos
outsb
aad
imul
sbb
mov
sbb
push
mov
jae
sub
cmp
ds
fwait
push
call
xorl
aam
rcrl
add
popf
add
jae
cmp
fisttpll
ret
mov
repnz
mov
push
lcall
adc
imul
out
addl
dec
stos
jmp
pop
call
mov
repnz
adc
jbe
add
mov
fcmovnbe
insb
or
rcrb
shll
inc
ss
cli
fnstenv
dec
xor
add
bound
cli
xchg
jecxz
inc
push
xlat
dec
out
inc
stc
push
je
mov
test
js
xchg
incb
mov
sbb
sub
jnp
lock
shrl
and
or
and
les
les
pop
sub
push
adc
aas
lods
imul
adc
inc
push
xor
jne
les
in
pop
jle
mov
sti
out
mov
dec
add
ljmp
inc
push
movl
xor
pop
in
xchg
mov
scas
test
add
mov
pop
fistpl
cmp
jne
gs
pop
fxch
add
sbb
dec
mov
cld
sub
and
stos
test
pop
out
test
sub
test
fwait
das
lods
add
fsubrp
jo
sbb
mov
test
fwait
popa
fwait
cmc
pop
xchg
push
push
lock
mov
hlt
lret
cmp
jle
jb
jno
out
and
xchg
xlat
cmp
stc
setle
lods
mov
sub
mov
adc
push
mov
mov
outsl
cmp
xor
fsubrs
adc
call
add
push
adc
fisttps
bound
mov
dec
mov
mov
mov
mov
fsubrl
stos
in
mov
js
xchg
lcall
int
inc
xor
add
sbb
sarl
and
adc
jnp
mov
fcomps
push
sub
pop
fcomi
xor
sahf
jns
pop
push
adc
and
testb
xor
inc
es
xlat
shrw
add
dec
dec
lods
inc
arpl
mov
push
sarl
enter
or
sub
pop
jle
repz
xchg
mov
leave
shlb
push
mov
sbb
adc
ret
test
rolb
or
in
cmpsl
ds
add
vpmuludq
daa
repnz
shl
pushf
movsl
vmovshdup
mov
sbb
ds
jmp
jbe
loopne
cmp
repnz
add
aad
sub
pop
pop
mov
es
das
shl
add
fadds
pop
dec
rolb
jbe
push
dec
andb
shlb
pusha
dec
andb
daa
or
lods
xchg
add
adc
aad
stos
fldcw
aas
in
dec
scas
push
mov
fs
xchg
jp
xchg
mov
or
jno
pop
jecxz
es
add
std
xchg
jne
jmp
fdiv
call
mov
add
sahf
xchg
fs
fcmovnu
jno
cmpsl
xor
shrb
cmp
mov
cmp
and
xorl
mov
sub
jp
jmp
fldcw
out
out
stos
mov
lods
sahf
shrb
adc
mov
push
test
test
push
out
leave
inc
adc
test
bound
adc
sub
mov
jge
lods
stos
jb
stos
push
hlt
mov
dec
data16
push
pop
pushf
xor
add
xor
popl
pop
aam
add
xor
xchg
shll
sub
aam
daa
js
push
sub
mov
fadds
push
jns
pop
jge
sub
cli
aam
int3
add
pop
dec
push
loop
pop
imul
js
cli
movsl
and
jne
sbb
pop
inc
and
cmp
push
mov
xchg
adc
ja
aad
add
xchg
mov
pop
add
add
mov
pop
rcr
mov
inc
outsb
add
add
push
dec
call
mov
jmp
andb
out
sbb
lahf
cli
shr
xchg
mov
pop
sub
das
dec
repnz
add
sbb
xor
xchg
pop
fildll
flds
jno
pop
ljmp
inc
xchg
mov
dec
fstl
and
jl
xor
xchg
jbe
fistps
daa
inc
sbb
sti
inc
cld
stos
out
cmpsb
lock
cmp
cmpsl
or
push
aaa
adc
jno
popf
sub
clc
or
les
idivb
push
add
sbbb
pop
rcrl
xor
cmc
loop
sub
rcrl
mov
add
push
outsl
push
and
and
or
mov
lret
bound
pop
into
test
inc
mov
dec
pop
cmp
mov
pop
es
cmp
jns
sbb
push
mov
test
or
aad
push
jl
cmp
pop
mov
outsl
cs
pop
insb
insb
mov
xchg
rorb
fiadds
daa
cmc
arpl
or
xchg
mov
xchg
loope
and
mov
std
or
nop
adc
nop
cld
push
dec
mov
xor
es
incl
mov
and
outsl
aam
adc
dec
xchg
add
mov
push
mov
cmpsl
imul
or
mov
je
or
aad
bndstx
hlt
lea
or
push
ds
rol
push
jmp
pop
push
popa
aad
mov
movsb
mov
sub
popf
jne
cmpsb
daa
movsb
sahf
jo
mov
fdivrl
vpackssdw
push
cmp
adc
mov
addl
ret
push
fisubrs
jbe
mov
sub
cwtl
in
js
or
loop
mov
in
dec
jle
mov
push
or
push
dec
pop
xor
inc
movsl
lock
pop
repnz
idivl
shrl
adc
jge
movsl
sbb
dec
mov
push
dec
xchg
add
jae
daa
xchg
cwtl
test
scas
push
scas
in
pop
in
shll
sbb
int
mov
inc
sub
scas
xor
pop
lods
mov
ds
loopne
xor
dec
out
jecxz
in
sub
lahf
addl
adc
jbe
nop
pop
jbe
setbe
fmulp
xchg
sub
jo
add
xor
jge
pop
imul
xchg
nop
xchg
mov
out
jecxz
sbb
cmp
repnz
mov
arpl
addr16
das
push
mov
mov
test
dec
rol
in
cmpsl
out
mov
ret
mov
sbb
sbb
cs
insb
popf
stc
divb
lods
hlt
out
sub
xchg
insb
adc
cwtl
jge
movsb
mov
mov
dec
or
jnp
jp
lret
mov
mov
jbe
cltd
stos
inc
adc
cld
adc
fmull
xor
xchg
adc
inc
dec
pop
mov
movsb
adc
push
icebp
add
adc
add
lret
and
jmp
rclb
call
adc
daa
lods
insl
push
pop
xor
ljmp
cmpsb
mov
xor
in
or
cmpsl
clc
jmp
adc
stc
and
popa
arpl
addl
sti
adc
cwtl
mov
jge
jmp
shrl
mov
or
sub
daa
mov
loopne
es
and
xor
xchg
js
jnp
and
jl
movsl
mov
sbb
mov
ljmp
test
popf
jl,pt
setge
xlat
inc
and
sbb
loope
shrb
movsl
xlat
call
out
les
ja
jb
add
mov
push
pop
in
nop
ja
je
mov
jecxz
xor
pop
dec
sbb
jns
cmp
imul
aas
rcr
lods
orl
fs
loope
or
cmpsb
push
xchg
sbb
mov
dec
xchg
int3
int
lea
loope
fstpt
cld
dec
les
test
aaa
test
mov
adc
jae
js
add
inc
dec
cltd
movsb
jp
loop
add
lcall
outsl
rorl
mov
arpl
fmuls
add
push
ret
scas
adcl
dec
out
jle
popa
xor
adc
adc
pop
pusha
jl
mov
and
lea
sti
mov
jge
cwtl
scas
and
out
cmpsl
jmp
sbb
mov
flds
jmp
out
leave
sahf
jg
pop
cmp
leave
and
in
in
dec
stos
stos
inc
sbb
sbb
mov
imul
lock
bound
dec
in
lods
inc
push
mov
insl
jns
mov
adc
jp
fstl
mov
andb
adc
add
pop
fsubl
lret
pop
cmp
xor
mov
sbbb
cmp
jge
icebp
movsl
pop
dec
mov
mov
adc
and
dec
loopne
pop
inc
arpl
test
sub
loopne
rcrl
rorb
push
or
cli
fcom
and
cmp
cltd
cmp
xchg
push
fsubr
mov
mov
inc
push
mov
outsb
pusha
imul
mov
jg
mov
aad
out
push
or
lods
adc
fs
mov
push
sub
xchg
mov
in
mov
mulb
add
and
mov
js
test
lahf
jae
loop
push
stos
test
lds
mov
fs
jo
pop
aaa
jbe
ds
add
pop
mov
adc
and
adc
mov
fnsetpm(287
ret
loopne
and
imul
dec
imul
mov
fisubrs
pop
ret
nop
jnp
lcall
mov
addr16
push
shl
mov
ficoms
push
aas
mov
mov
mov
lret
imul
int
out
inc
mov
xchg
or
aaa
sahf
xor
cmpsl
orl
test
jbe
cmp
iret
popa
in
enter
in
mov
sub
mov
pop
dec
js
jo
push
push
jp
pop
push
rcrl
fnstenv
sbb
insb
mov
fiaddl
mov
mov
lahf
inc
mov
outsl
adc
inc
push
fs
dec
push
lods
enter
ror
jle
xor
rcrb
lods
fnstsw
mov
pop
fwait
sub
cmp
ret
inc
ds
ds
xchg
rcll
inc
int
dec
cli
lret
or
pop
mov
test
fcmovbe
pop
add
sbb
push
lahf
lods
lfs
in
sub
dec
movsb
roll
push
push
movsl
jl
cmp
xlat
mov
xlat
jp
test
inc
std
adc
lret
mov
pop
outsb
pushf
xor
es
inc
push
in
ja
leave
pop
es
mov
cmp
mov
pop
push
sbb
sub
xchg
sub
jae
dec
push
popf
mov
mov
inc
fcoms
xchg
mov
sbb
jle
jno
bound
and
rorb
cld
push
ljmp
or
lods
fldenv
lret
aam
arpl
inc
les
jae
jmp
jnp
xor
call
mov
fsubl
fdivs
arpl
insb
cli
jp
and
test
shl
mov
mov
cltd
inc
les
hlt
js
and
sbb
mov
mov
xchg
mov
or
mov
fsts
mov
mov
dec
and
or
and
popf
xchg
test
ljmp
jge
jl
in
mov
shll
cmp
inc
push
test
hlt
ja
sbb
push
lock
xlat
lcall
lods
loopne
test
ret
xor
into
adc
fsin
fwait
and
in
adc
jno
pop
lcall
fistpll
cli
adc
ret
dec
or
rol
inc
mov
aaa
into
push
test
mov
in
nop
inc
mov
xor
scas
cmp
loopne
fadd
fst
lds
int3
push
lret
popa
push
sub
cmp
add
repnz
jmp
or
pop
in
jp
push
push
xchg
jb
fnsave
mov
push
cmp
ret
jge
test
xlat
pushf
iret
fxch
clc
xchg
nop
fistpl
cmp
push
imul
mov
inc
loope
and
mov
faddl
pop
sub
pushf
xor
lods
cs
imul
lods
or
sbb
or
les
outsb
add
xchg
out
loop
mov
pop
repz
shl
adc
jle
add
adc
dec
push
in
cmp
insl
imulb
sbbb
push
cmp
cwtl
push
add
jg
sbb
notl
jp
xchg
xchg
jmp
adc
in
inc
mov
inc
popf
pop
or
dec
mov
xchg
jmp
xlat
push
pop
roll
fdivrs
xchg
int3
insl
pop
stos
dec
cli
lahf
mov
pop
or
push
pop
fxch
jecxz
mov
inc
fldcw
sti
inc
fiadds
sbb
repnz
xchg
out
or
adc
clc
je
sbb
or
xor
jp
and
aas
shl
iret
ss
push
inc
leave
loopne
jecxz
push
mov
jmp
shrb
jp
cs
aam
leave
and
and
xchg
mov
dec
call
add
adc
lcall
sbb
into
in
aas
daa
pop
fwait
pusha
lea
data16
sub
mov
jmp
fsubrp
add
push
jno
and
add
mov
lret
subl
imul
movsl
rsm
mov
icebp
sbb
ret
clc
aaa
mov
movsl
cmp
iret
andl
in
mov
xchg
fistl
inc
out
stos
sub
fldt
cmp
pop
push
aas
cmp
cmp
lea
cs
add
pop
cmp
jns
sub
insb
add
into
inc
bound
cmp
xchg
ret
jns
and
aas
push
inc
in
dec
jno
rep
inc
xorl
adc
fidivs
popf
or
xchg
mov
fwait
add
jns
adc
pop
std
pop
push
lods
arpl
popf
fbstp
outsb
and
or
dec
add
in
mov
stos
insl
or
inc
inc
cmp
push
push
les
mov
sub
ljmp
mov
pop
lock
rol
imul
add
cmc
idivb
les
shlb
jns
mov
cmp
iret
data16
xor
dec
xchg
clc
xchg
adc
cmp
jnp
inc
cmp
push
push
inc
repnz
lods
mov
iret
xchg
andb
shrl
out
inc
dec
push
cmp
xor
mov
mov
sahf
mov
push
pop
loop
pop
lock
in
scas
add
out
adcb
clc
cmc
jecxz
sbb
cmc
xlat
or
mov
test
mov
xchg
sub
loope
cmp
sbb
test
mov
rcrb
inc
adc
jnp
in
insb
push
xor
repnz
pop
mov
cmp
pop
mov
adc
je
iret
push
mov
data16
insb
push
mov
mov
shrl
push
xchg
or
jp
nop
mov
pop
jg
insl
or
icebp
xchg
mov
pop
pushf
scas
mov
outsl
mov
cli
mov
repnz
subl
push
jns
fwait
mov
mul
dec
out
loop
movsl
mov
mov
push
fucomi
enter
cwtl
mov
mov
incl
xor
dec
sbb
ficoml
push
lods
scas
ljmp
jl
cltd
std
stos
popf
push
mov
or
xchg
fcoml
inc
pusha
pop
scas
out
gs
cmpsb
arpl
mov
pop
cmp
lds
fcoms
mov
out
fadd
pusha
mov
sub
fisubrl
mov
ja
jle
pushf
out
ja
rorb
inc
mov
fidivs
and
fisttpl
xchg
and
sbb
scas
lock
sbb
pop
cmc
cmp
sub
add
mov
enter
mov
aaa
jp,pn
sub
dec
mov
insb
jbe
in
xor
inc
mov
push
jecxz
add
call
orl
jno
dec
xchg
test
push
loope
pop
push
pop
dec
xor
out
and
or
lea
xchg
jns
hlt
pop
je
mov
jae
adc
push
lahf
and
andb
cltd
fwait
jns
icebp
push
push
mov
aam
in
nop
std
nop
daa
daa
je
daa
mov
sub
cwtl
std
stc
or
stc
pop
imul
nop
aaa
sarl
aas
or
test
cmp
aam
ss
sbbl
xor
pop
xor
mov
rorb
out
jno
dec
sub
inc
add
lcall
std
in
test
jno
mov
dec
add
lret
leave
enter
das
cmp
add
mov
cmp
stos
or
jae
test
fiadds
sbb
and
mov
icebp
mov
pop
fs
pushf
xchg
xchg
pop
mov
xchg
adc
lea
pop
lock
ds
dec
push
inc
scas
xlat
push
lods
repz
xchg
push
lock
mov
sbb
pop
jecxz
or
test
adc
das
push
iret
repnz
arpl
fcomps
jns
in
popa
adc
sbb
fadd
and
je
xchg
arpl
mov
jl
fwait
fwait
rcrl
push
fmul
cmpb
fildll
add
push
stc
pop
and
jle
xchg
stos
pop
pop
ret
dec
movdq2q
cwtl
popf
lods
leave
notl
clc
fcomps
or
shrb
das
mov
and
add
push
xor
mov
gs
push
mov
add
jne
sarl
sub
gs
jns
leave
mov
pop
lds
push
sbb
dec
test
pushf
loopne
xchg
cmp
mov
cmp
jae
pop
cmp
addr16
mov
frstor
stc
mov
pop
lcall
in
ret
and
sti
xor
jnp
icebp
pop
fcomps
inc
sub
test
cmc
pop
arpl
jecxz
mov
notl
daa
loopne
ja
jmp
cld
inc
push
iret
es
out
lods
inc
movsb
or
mov
lret
jns
aas
mov
cs
repnz
add
push
cld
push
imul
ret
add
ja
out
inc
lock
int3
cmp
mov
xchg
mov
xchg
adc
lret
add
sub
iret
pop
cmpsb
push
ds
data16
hlt
jae
mov
in
int3
push
add
jae
pop
je
aam
out
ficompl
mov
loope
cs
repz
lea
pop
mov
dec
scas
out
iret
movl
cmp
fisubrl
xchg
mov
mov
mov
sbb
mov
fwait
arpl
sbb
sub
inc
inc
dec
sarb
inc
pushf
jb
pop
adc
cltd
and
pushf
sub
aad
xchg
lea
outsb
aaa
and
jns
sbb
cmp
std
lods
test
push
out
neg
adc
imul
fisttps
mov
daa
pop
xor
xor
enter
mov
lock
jg
pop
loope
dec
lods
js
mov
in
ss
cmp
jmp
xor
sarb
mov
push
sub
xor
pop
cmp
and
subb
xchg
testb
shr
icebp
das
and
pop
cmpsb
mov
pop
adc
mov
jp
shl
cmp
cmpl
dec
in
lods
add
sub
lock
dec
pop
add
jno
lea
mov
pop
pop
icebp
cmp
stos
jl
mov
movsb
cmc
xor
fs
dec
sub
loop
mov
and
aas
mov
or
add
rolb
rcrl
or
movsb
mov
or
stos
imul
mov
mov
inc
xchg
cmp
lea
sub
flds
mov
mov
test
mov
in
push
lret
aam
jge
xchg
xchg
mov
fs
lcall
pushl
insl
push
repz
lods
add
lahf
xor
mov
adc
stos
xor
pop
add
push
mov
adc
pop
add
cwtl
ss
lods
popa
pop
xchg
mov
mov
jno
push
xor
ret
sub
movsb
push
and
sub
fnstcw
sub
push
test
jns
xchg
in
fptan
add
aam
push
and
xor
mov
sti
out
je
pop
ffree
pop
inc
pop
movsl
jp
in
sbb
push
lcall
jne
out
lret
fldenv
loopne
fwait
and
and
pop
fs
fisttpll
call
les
inc
clc
jnp
push
aad
cmpsb
popa
repz
fs
in
idivl
ret
xor
jmp
sbb
mov
test
imul
insl
ja
cmp
lret
stos
das
adc
mov
adc
push
jg
mov
jle
adcb
sbb
push
push
js
ret
flds
out
repz
and
pushl
mov
icebp
insb
repz
adc
push
push
movsb
dec
insb
imul
fists
xorl
push
mov
movsl
mov
adc
pop
stos
xor
lods
push
mov
and
push
mov
mov
mov
mov
pop
add
cpuid
enter
adc
stos
sbb
mov
xor
dec
mov
push
fsubl
fildll
jl
ja
jmp
lea
lret
sbb
stos
cwtl
das
fucom
mov
mov
ret
adc
out
jns
stc
or
aas
arpl
test
je
mov
addl
dec
std
xchg
mov
pop
sbb
inc
mov
push
int3
cmp
cld
cmp
cwtl
push
scas
in
mulb
jb
shlb
ret
push
sarb
std
and
jge
int
mov
jge
dec
scas
add
je
insb
add
psubd
sahf
lods
mov
leave
mov
and
cmp
mov
adc
mov
cmp
and
fdivrs
lret
inc
decb
repnz
not
in
fcmovnb
adc
xchg
ja
arpl
adc
stos
inc
or
insb
jle
xchg
sbb
sbb
lea
dec
add
add
pop
mov
jnp
jl
mov
inc
pop
mov
xchg
sbb
xchg
addr16
pop
repnz
cld
inc
jp
mov
inc
out
out
jg
pop
inc
into
and
jl
sbb
pop
imul
mov
jb
je
dec
mov
clc
lahf
ss
push
in
aas
dec
sbb
lea
adc
leave
incw
movsl
add
loope
pushf
mov
ret
lret
sbb
inc
mov
add
lea
xlat
in
out
movsb
sub
js
inc
popf
aad
sbbl
andps
cmc
sbbl
cmp
inc
mov
mov
call
sbb
cmp
sbbb
les
cmp
cmp
cmp
push
push
dec
outsb
sub
shr
fisubrs
bnd
and
sbb
fnstenv
js
nop
stos
pop
cs
pop
push
mov
testb
adc
pop
dec
dec
int3
rcrl
bound
mov
lods
scas
or
sbb
pushf
aas
popa
sarl
mov
jg
pop
iret
es
dec
fcomps
lods
mov
mov
mov
stos
xor
sarl
adc
call
and
or
sub
push
outsl
dec
dec
ds
jmp
loopne
lds
jbe
and
mov
mov
add
andb
or
outsl
bound
mov
mov
push
jbe
fldt
cmp
mov
adc
cwtl
pop
cmp
icebp
aad
movsl
jae
cs
dec
sub
fs
int3
dec
int3
cmp
mov
lods
inc
clc
sarb
push
mov
aad
arpl
push
and
pop
out
mov
and
int
or
xchg
les
shr
leave
lds
mov
mov
or
sarb
sbb
adc
push
scas
icebp
out
loope
pop
or
test
push
push
adc
ds
les
imul
fimull
and
popa
xor
imul
lods
mov
add
cmpsl
shll
mov
jne
or
bound
mov
fdivp
dec
add
rol
push
push
xchg
cmp
inc
sub
lods
jg
fistps
cmp
push
dec
pop
bnd
jmp
movsl
push
aad
jl
int3
jp
shl
mov
add
cmpsl
jmp
adc
in
xor
iret
fs
test
orb
sub
icebp
ds
scas
push
and
inc
lcall
repz
adc
scas
inc
fcmovu
sub
es
fildll
or
ror
mov
les
cmp
hlt
xchg
negl
mov
in
bound
test
push
hlt
std
aas
cs
mov
add
pushf
lahf
cmpsb
dec
xchg
popf
add
xchg
stos
jb
pop
das
dec
in
jp
and
xchg
lods
inc
insb
ffree
pusha
sub
dec
jg
call
pop
gs
clc
sbb
lea
imul
int
div
add
and
adcl
sbb
orl
add
mov
mov
xchg
call
je
mov
into
enter
popa
mov
sarl
stos
jns
xchg
fdivl
dec
jg
insl
and
push
stos
in
sbb
pushf
aad
ret
xchg
sub
movsl
mov
rclb
outsl
je
sbb
adc
mov
popa
or
aam
scas
dec
adc
scas
jl
add
jno
dec
movsb
mov
in
xchg
loopne
mov
popf
and
xchg
mov
sub
adc
sbb
aas
cmp
insl
inc
and
jb
icebp
js
fmul
mov
ret
out
aam
xchg
mov
inc
and
xchg
cwtl
inc
and
mov
ljmp
or
fidivl
ljmp
jb
mov
mov
mov
adc
push
imul
shll
mov
in
push
mov
movsb
push
cmp
std
mov
fdivl
jmp
or
mov
dec
mov
andb
mov
aam
loopne
pop
mov
ret
jecxz
or
lds
aam
xchg
cld
mov
mov
mov
dec
mov
addr16
rcr
mov
push
inc
mov
add
xor
daa
roll
xchg
stos
xchg
push
sbb
jnp
aas
xchg
rcrb
add
int
enter
cmp
xchg
pop
ljmp
sub
ja
mov
push
mov
mov
cmpsb
and
call
or
jge
push
mov
shlb
mov
imul
mov
pop
jns
js
xor
mov
in
mov
not
divl
inc
movq
lods
gs
dec
jae
add
out
inc
aad
fisubrs
xorb
scas
imul
outsb
or
xchg
add
es
test
pop
mov
sbb
mov
imul
inc
dec
mov
xchg
and
addr16
sahf
add
sti
jne
loop
nop
les
or
cmp
inc
fcompl
negl
mov
cld
clc
and
jns
fdivrs
push
call
mov
pop
add
add
lock
jb
out
shrl
pop
sbb
cwtl
dec
outsb
pop
pop
lret
xor
ret
dec
out
adc
or
xchg
push
pushf
jae
xchg
add
xorb
shrl
iret
inc
jns
cmp
xchg
jle
add
addr16
mov
stc
or
mov
iret
std
cld
dec
cmpsb
lock
pushf
lods
fcomi
sbb
imul
in
out
or
pop
stos
pop
repnz
jne
mov
popa
pop
movsb
adcb
out
hlt
sahf
clc
and
sahf
xor
lret
dec
inc
in
dec
not
daa
add
nop
dec
dec
nop
imul
out
pop
xchg
jmp
loopne
out
ds
mov
cmp
lcall
add
inc
jp
ljmp
je
sub
inc
movsb
ja
sub
jle
icebp
or
sub
icebp
bound
test
addr16
popl
mov
lods
adc
data16
imul
pop
idiv
inc
das
mov
add
adc
push
jl
pop
fiadds
andl
pop
sub
cmp
cmp
ret
adc
or
jecxz
push
aam
call
movsb
mov
xchg
push
push
sbb
jns
sbb
addl
jbe
fs
mov
sti
popa
xor
sbb
mov
int3
popl
dec
xchg
int3
pop
sahf
std
fldenv
jg
push
pushf
scas
test
imul
sub
mov
sub
sbb
es
aam
sbb
cmpsl
xchg
insl
mov
enter
rcrl
lds
pop
je
out
repz
xchg
je
ljmp
aas
in
mov
aam
icebp
movsb
dec
dec
loop
jmp
push
push
push
mov
add
scas
and
test
mov
or
and
mov
std
xchg
sbb
pushf
cltd
xor
cmp
mov
mov
cld
sub
test
jle
jle
xor
xchg
ja
adcb
add
movsl
stc
jb
sub
or
xchg
call
or
push
in
mov
inc
fsubrs
jno
mov
adc
addb
out
addr16
cmp
cmp
dec
shl
out
pop
pop
aam
or
arpl
adcl
movsb
into
movsb
mov
outsl
pop
or
test
add
add
pusha
inc
ficoml
push
popa
mov
inc
js
and
ss
or
push
dec
rcll
test
daa
into
notl
mov
sbb
iret
nop
jb
mov
mov
mov
mov
inc
ffree
clc
push
jge
outsb
fs
lahf
push
and
xchg
mov
pop
push
fdivp
push
xchg
gs
gs
shll
rcr
roll
add
push
out
add
dec
dec
or
in
les
les
pushl
mov
cmpsl
ljmp
or
jo
xchg
lock
mov
xor
mov
and
popl
repz
push
mov
cmc
test
dec
outsl
xchg
fpatan
enter
sub
adc
adc
jno
outsb
pushf
outsb
pop
nop
lahf
stos
sarl
mov
mov
xor
jb
xor
push
fs
cli
cmp
lods
and
push
ret
lcall
es
add
clc
pop
jno
lcall
push
inc
in
int
adcb
mov
mov
std
dec
mov
dec
push
sub
out
pop
sbb
push
pop
sbb
and
leave
cmp
in
mov
cltd
add
movsl
and
sub
sbb
mov
xor
in
adc
or
in
ss
mov
out
push
movlps
js
mov
loopne
outsb
pop
xlat
lret
xlat
sub
sbb
push
lcall
dec
add
push
sub
loop
ja
mov
xor
lods
enter
testb
mov
repz
stos
fdivrl
rcr
punpcklbw
sbb
add
cwtl
inc
loop
ljmp
sub
inc
pop
out
inc
iret
out
jne
in
sbbl
repnz
or
scas
rol
sti
addr16
sbb
mov
into
jns
fbstp
pop
cmpsl
mov
dec
scas
jno
ljmp
inc
pop
loopne
mov
ja
pop
fidivrl
and
sahf
fstpt
into
sbb
lods
add
push
ficomps
out
xchg
aad
or
cltd
xchg
popf
out
notl
fsub
sbb
sarl
cwtl
scas
mov
xor
lret
sbb
and
xor
mov
fs
popf
cmp
testb
and
mov
dec
jnp
jns
cld
pop
dec
scas
add
adc
loope
adc
sbb
aaa
mov
sub
pop
outsb
mov
sti
pusha
and
jne
fidivs
xchg
inc
int
lods
ljmp
je
jp
push
lds
or
shrl
fiadds
xchg
push
push
push
movsl
dec
lahf
pop
mov
lods
add
fldz
not
sub
xlat
test
divl
add
xchg
mov
push
dec
pop
cmpsl
sbb
xor
add
cltd
sti
jno
mov
bound
ud1
or
xchg
xchg
add
or
and
repnz
scas
dec
push
push
sti
bound
cmp
sbb
fs
dec
pop
mov
xchg
cwtl
int3
das
aad
aam
popf
out
xchg
add
subl
in
cmp
out
jp
mov
jp
inc
inc
mov
lods
mov
pop
lods
mov
add
ds
jo
or
cmc
das
sub
cli
movsl
ja
adc
pop
push
testb
sub
xchg
nop
mov
or
jae
dec
cmp
rorl
fs
mov
and
mov
adc
xor
push
test
push
rcr
mov
in
push
inc
cmp
sub
cmp
mov
out
jb
sbb
inc
dec
mov
sahf
imull
pop
lds
pop
jb
pop
test
int
mov
fbstp
lods
inc
cltd
jnp
negl
lret
jp
dec
push
incl
xchg
xchg
mov
jg
aad
sbb
sub
jecxz
mov
inc
sahf
cmpsb
stos
jmp
xchg
adc
dec
xor
sbb
repnz
dec
xor
enter
popf
sbb
dec
and
shl
xchg
cs
leave
push
add
pop
lock
repnz
inc
cmpsb
and
jecxz
xchg
xchg
adc
bound
xchg
aas
jge
push
push
push
adc
jp
sbb
xchg
das
movsb
cmp
xchg
imul
cmp
scas
test
jnp
jae
orb
scas
ja
mov
lds
add
mov
pop
cmp
adc
movsl
fisubrl
rclb
in
mov
mov
mov
pop
mov
push
xchg
cmp
outsb
push
aam
and
push
mov
or
stc
pusha
dec
cltd
dec
adc
mov
jno
or
dec
sbb
mov
adc
pop
and
xchg
or
in
movsl
cmp
sub
inc
aam
in
out
leave
shrl
imul
pop
add
sub
xor
outsb
daa
bnd
shrb
pop
imul
push
loope
adc
mov
or
loop
enter
xor
movsb
fbstp
bound
inc
je
dec
aam
test
dec
xor
in
jl
sub
int
xchg
fldl
psllq
dec
ds
stc
jp
loop
sbb
lea
push
fisubl
dec
enter
lds
pop
and
sbb
dec
loop
call
cmp
addr16
test
jno
xor
es
ret
lret
pop
jg
pop
dec
test
mov
fsubl
mov
add
hlt
sub
sub
notb
ljmp
sbb
add
ja
mov
or
scas
les
lods
sbb
mov
jl
insb
out
mov
or
fdiv
mov
popf
out
mov
ljmp
int
fwait
and
stos
mov
shlb
or
in
xchg
test
ss
xchg
sbb
xchg
or
imul
xor
roll
cmp
mov
sarb
add
sub
lcall
in
jp
cmpsb
xchg
xchg
pop
or
roll
xor
adc
sub
push
xchg
negl
shl
dec
mov
movb
dec
pop
es
cld
aam
cs
cs
subl
int
mov
mov
dec
mov
sbb
jns
pop
repnz
andl
xchg
pop
ljmp
mov
rcrb
aad
mov
mov
push
jg
jp
ret
adc
inc
fnstsw
incl
mulb
dec
pop
pop
cmp
in
jp
ss
mov
cwtl
mov
lret
sbb
js
stos
cli
and
mov
jp
stos
stos
out
xchg
inc
sub
jb
fistl
push
adc
pop
data16
xchg
test
mov
popf
mov
inc
test
scas
mov
std
push
inc
mov
stos
shlb
inc
xchg
jbe
int
divl
shrl
xor
movsl
jp
pusha
or
les
mov
jo
push
push
clc
fdivl
sub
inc
stos
idiv
sub
fcoml
dec
jmp
dec
ljmp
test
test
sub
push
notb
mov
inc
bound
mov
gs
sub
jg
cmp
mov
mov
imul
addb
leave
in
mov
push
inc
sbb
cmc
enter
push
bound
pop
stc
testl
andl
lds
cs
addr16
push
sbb
xor
dec
movsb
jecxz
test
rorl
jl
das
mov
xchg
sahf
or
insl
cmp
ret
ja
stos
xor
je
dec
fidivrl
pop
sbb
fidivrl
loope
jb
pop
add
out
pop
sbb
in
cmp
dec
dec
stos
rorb
into
mov
loope
xchg
push
rcl
addl
lret
push
xchg
pop
jg
mov
and
pop
cmp
aaa
outsl
cmp
xor
dec
sahf
xor
sti
lcall
jecxz
jge
cmc
out
lea
jp
jecxz
xorl
jno
les
push
adcb
jl
dec
faddl
push
sub
mov
aas
out
loop
xlat
dec
in
xchg
ret
scas
fisubl
in
adcb
mov
inc
and
mov
int3
movsb
stos
std
lock
xor
xor
xchg
pop
mov
and
or
mov
mov
pop
push
insb
add
xchg
stos
mov
xor
dec
sub
addb
jno
mov
std
movsl
add
push
mov
je
cmpsl
xlat
jbe
xor
cmp
pop
movsl
mov
repnz
dec
call
xchg
filds
mov
xlat
insb
ficoms
mov
pop
mov
test
scas
fsubrp
jle
inc
mov
adc
lahf
push
ljmp
jno
mov
pushf
or
lea
cmp
sub
loop
es
or
and
js
xor
mov
addr16
leave
leave
dec
movsl
sbb
mov
dec
stos
and
cmp
inc
push
fsubrs
fnsave
mov
scas
fcmovbe
shr
pop
mov
movsb
repnz
inc
jnp
mov
dec
xchg
dec
jo
test
mov
inc
negb
push
sub
and
nop
mov
dec
fdiv
mov
jecxz
jecxz
mov
xlat
sbb
mov
push
bound
mov
ds
mov
xchg
jnp
fdivl
jmp
cli
or
cmpsb
aad
fsubl
sbb
aas
mov
pop
cmp
xchg
jmp
or
mov
imul
adc
sub
or
loop
cmp
adc
mov
pop
sbbl
dec
mov
mov
mov
push
cmpsb
out
xchg
sbb
fidivrl
or
nop
inc
in
inc
aad
fnsave
mov
lds
dec
pop
cltd
pop
in
daa
inc
cmp
dec
or
daa
adc
xchg
sbb
adc
outsl
fisttps
and
rcr
cmpsl
insl
adc
shl
jns
jmp
cmp
stos
pop
or
sbb
data16
fildl
xchg
or
mov
aas
arpl
lock
xor
loop
cmp
adc
notl
cwtl
fdivp
inc
xchg
mov
sarl
std
pop
daa
or
cltd
cmp
dec
add
pop
int
lea
adc
lock
sub
out
aad
shll
int3
test
xchg
fidivrs
push
lea
gs
sbb
lds
xchg
jle
push
inc
xchg
inc
add
jno
test
jmp
bound
push
adc
sti
adc
inc
cli
rcrb
lods
mov
add
shrb
xor
jno
in
jb
pop
loop
sbb
xchg
test
movsl
or
add
add
dec
push
xlat
addb
std
mov
sbb
test
mov
dec
adc
mov
jns
rorb
adc
push
insl
nop
mov
fdivrl
jbe
gs
push
xchg
sub
arpl
movsb
lcall
jp
idivl
aaa
js
in
and
mov
jp
outsb
shrl
dec
cmp
jle
aam
adc
inc
repnz
sub
add
dec
xlat
fisttpll
xchg
ret
mov
vaddss
cmp
repz
push
hlt
loop
pop
clc
mov
sub
mov
lock
mov
sub
add
pop
xor
xor
movb
dec
mov
stos
in
push
lods
ljmp
and
jnp
pop
clc
inc
popa
sti
add
fwait
adc
insb
cltd
test
ljmp
inc
pushf
or
push
mov
add
popf
stc
sbbb
jg
adc
loop
dec
mov
aam
fldenv
js
daa
xchg
xchg
jb
lea
mov
pop
out
in
jns
aaa
clc
rol
sbb
cmp
shrb
out
inc
mov
and
mov
lcall
popa
sub
pop
mull
popf
mov
pop
dec
inc
inc
jmp
out
mov
les
or
jo
lahf
mov
jp
ret
mov
dec
in
aad
mov
out
clc
or
mov
and
addl
dec
pop
dec
sub
dec
cmp
loope
movsl
dec
fidivrl
andl
inc
movsl
adc
xchg
adc
dec
pop
mov
xor
sti
dec
in
out
adc
inc
inc
out
jbe
nop
jl
test
and
mov
pop
ss
cmp
push
pop
out
call
adc
inc
popf
xor
xchg
js
pop
aas
lea
mov
sub
or
xlat
and
movsb
cmp
pop
adc
sbb
and
cmpsb
fwait
cs
shlb
int3
sbb
mov
cmp
sahf
stos
inc
pushf
outsl
iret
std
int
jne
mov
rcll
sub
inc
and
fistps
mov
mov
and
adc
inc
stos
arpl
aad
add
cmp
mov
mov
add
aad
inc
icebp
pop
testl
jbe
outsl
gs
sub
push
fisubl
cmc
mov
les
jb
aam
jns
push
jno
mov
rcrb
nop
mov
aad
inc
lcall
je
mov
les
in
jb
xchg
ret
add
std
ret
mov
setno
mov
sti
rol
shrl
shlb
out
cmpsl
leave
test
fbld
push
lods
mov
pop
jns
sub
push
icebp
inc
xchg
dec
int
clc
mov
or
movsl
push
and
sahf
iret
xchg
inc
xchg
icebp
sub
dec
ret
adc
outsb
adc
push
push
test
or
xchg
inc
pusha
or
sub
mov
lahf
fidivs
fadds
es
mov
mov
es
lea
add
or
jge
test
ss
xor
xchg
add
mov
or
push
js
add
push
ja
xor
fcoms
test
addr16
popa
inc
jne
ficompl
mov
dec
pusha
sbbb
add
jb
lods
mov
xchg
je
imul
aaa
cmp
push
into
out
mov
out
cmp
test
xchg
repz
std
js
imul
clc
pushf
lea
dec
mov
dec
aad
cmpsl
lret
add
fbstp
aas
fsubr
push
add
sbb
sbb
pop
jne
sbb
bound
mov
repnz
cmp
sub
xor
lcall
hlt
mov
jo
mov
xchg
lahf
mov
sbb
ljmp
adc
call
cmp
xlat
shlb
js
mov
jg
or
dec
adcb
lahf
adcb
fistpl
testl
or
cmpsl
std
fists
scas
bswap
stos
adc
lea
pop
or
and
add
mov
mov
pop
sub
cmc
add
in
mov
sti
cld
insl
push
mov
and
mov
jae
or
push
daa
mov
pop
scas
fimull
ja
fisubrl
pop
mov
inc
out
sbb
ds
movl
and
xchg
imul
out
inc
jecxz
pop
pop
xor
lret
mov
xchg
xorb
mov
mov
fistl
aad
push
popf
add
mov
jb
outsl
mov
mov
mov
xor
int3
in
push
scas
push
inc
pushf
and
and
pxor
xlat
push
sbb
xchg
sarb
mov
add
lret
jmp
sbb
data16
jb
mov
lods
ret
xor
outsb
ret
mov
imul
add
mov
fistpl
dec
pusha
int3
and
adc
lods
add
cmp
in
xchg
decb
xor
out
or
jl
xchg
js
sbb
mov
xchg
mov
loopne
dec
sbb
test
sbb
ja
mov
mov
xchg
sub
sahf
sub
js
sub
pop
mov
xchg
mov
jge
out
sub
aam
pop
push
imul
sub
dec
mov
pushl
and
xor
mov
test
pop
xchg
dec
mov
movsl
cmp
fbld
push
scas
mov
lock
inc
ja
cmc
sbb
dec
test
xchg
popf
sarb
hlt
test
fwait
push
adc
repz
dec
out
subb
xchg
loope
lods
nop
xor
repnz
xor
dec
dec
push
push
adcb
loopne
sarb
mov
mov
mov
jne
push
lret
push
sub
sbb
aas
and
repnz
jmp
or
lcall
in
jmp
pop
dec
dec
xchg
mov
xchg
cmpsl
xor
outsb
addr16
repnz
pop
out
enter
cmp
add
cmpsb
sti
stc
call
xchg
fildll
fistl
shlb
or
jmp
mov
mov
push
std
adc
mov
je
cmpsb
in
xchg
jge
leave
push
test
lock
lds
popa
enter
insb
ret
adc
popa
adc
in
in
scas
mov
addl
push
xchg
or
sbb
daa
inc
fdivrs
mov
xchg
loopne
ja
bound
insl
jge
stos
dec
fnsave
xchg
fcomip
xchg
icebp
pop
push
adc
inc
orb
hlt
ret
in
mov
pop
mov
jg
cmp
xor
jmp
lock
mov
xor
cmp
aad
jno
adc
cmovb
jmp
mov
shrb
or
stos
xlat
push
xchg
pop
in
loopne
mov
mov
pop
repnz
cld
sub
dec
psllw
sub
iret
mov
pop
xchg
cmp
and
jge
das
xchg
popa
jns
mov
xor
dec
add
int
jbe
pop
cmpsb
les
mov
jmp
out
jb
fcomi
ljmp
loope
cltd
cmp
mov
mov
mov
jge
lods
push
in
jne
ja
push
sbbb
out
or
repnz
push
in
out
int
or
arpl
divb
mov
push
call
add
fwait
repnz
mov
outsb
call
and
mov
sahf
les
cld
movsl
xor
sbb
pop
dec
adc
cld
mov
adc
nop
mov
jb
push
fcoms
cli
daa
mov
popa
arpl
lret
mov
ror
lods
test
mov
xchg
out
xor
daa
push
add
sbb
out
cmp
pop
mov
in
cwtl
mov
fldt
aaa
into
and
push
xchg
inc
xor
push
clc
in
dec
movsb
das
outsb
lret
mov
aaa
sbb
adcl
jns
lods
xor
iret
inc
fnstcw
stos
lcall
xor
adc
mov
jmp
cld
jbe
cltd
das
insl
sub
fcmovb
inc
or
fwait
lret
stos
mov
add
ret
divb
sbb
inc
mov
mov
ret
mov
adc
nop
lds
and
cmp
pop
push
mov
sbb
sti
scas
xchg
mov
cmpsb
hlt
adcl
xor
push
mov
or
cld
fst
dec
xor
cmp
mov
mov
adc
sub
hlt
jne
gs
jae
mov
pop
lods
lods
mov
leave
or
fistl
insl
mov
adc
fwait
aad
arpl
cmp
lods
in
mov
cltd
ret
mov
iret
neg
pop
xchg
adc
jns
push
das
ljmp
dec
pop
dec
fisttps
add
outsb
fwait
test
mov
mov
mov
or
ljmp
shlb
sbb
inc
fsubp
mov
mov
out
jne
push
sub
fsubrp
jb
testl
mov
adc
add
sub
mov
jmp
push
and
in
inc
mov
js
pop
xchg
dec
cmp
loopne
xor
jb
cmp
and
fildll
roll
repnz
xchg
push
or
divb
lcall
dec
mov
shl
pop
pop
cmp
lds
xor
sbb
cmc
push
mov
mov
mov
push
dec
sub
cmpl
xor
stos
adc
or
aaa
mov
out
repnz
adc
outsl
lea
dec
aam
mov
mov
add
sub
xor
sbb
xlat
and
add
mov
and
xor
sti
lret
jno
push
out
push
stos
mov
jp
xchg
push
fcomps
dec
das
idivl
scas
cmp
hlt
mov
fnsave
dec
fbld
loope
pop
rcll
andb
sub
ficoml
cwtl
adc
push
mov
mov
and
xchg
ljmp
cmp
mov
jns
jno
adc
mov
sub
pop
lods
xchg
aas
or
js
mov
sub
push
mov
add
jl
xchg
inc
and
shlb
xchg
leave
pusha
or
insb
shl
jg
jnp
popf
push
sti
nop
repnz
push
ljmp
xchg
hlt
ss
fsubl
jge
imul
cld
je
int3
repnz
inc
fstpl
mov
stos
push
dec
lcall
jbe
push
xchg
adc
inc
or
sub
or
adc
cmp
clc
pop
leave
cmp
out
xchg
pop
push
inc
data16
xchg
mov
mov
stos
sti
aam
xor
ja
mov
push
jp
adc
mov
ss
inc
sti
incb
sahf
lds
mov
jnp
dec
dec
les
das
repnz
push
shl
xchg
mov
cltd
adcl
fwait
les
int3
jl
push
fcmovu
mov
je
cld
popa
or
sbb
movsb
lret
data16
scas
mov
xchg
mov
repz
hlt
cltd
mov
iret
push
addl
arpl
sbb
add
sub
dec
pop
pop
imul
cmp
mov
repz
icebp
cwtl
lods
and
stc
pusha
repz
mov
add
adc
xor
adc
mov
stos
adc
mov
xchg
lods
inc
ret
mul
pop
in
lret
arpl
push
pop
mov
pop
mov
inc
test
andl
inc
sub
dec
pop
mov
dec
mov
add
sbb
push
push
ss
mov
and
adc
mov
mov
pop
adc
push
out
sti
sub
mov
mov
lea
ljmp
mov
shlb
mov
xchg
add
cmpsl
sbb
ds
arpl
inc
data16
iret
aad
sbb
dec
xor
and
in
rcrl
cs
cvttps2pi
cmpsb
jb
call
mov
inc
aas
mulb
lds
jae
pop
test
jmp
jg
cmp
add
jno
push
push
outsb
add
xor
aaa
push
adc
loopne
fidivrs
gs
push
mov
pushf
push
leave
cmpb
sub
cmpsb
sub
jg
lock
push
cmp
cwtl
jmp
std
fwait
in
je
mov
rcrb
sahf
test
jl
push
and
inc
pop
sbb
cmp
xor
stos
inc
gs
mov
mov
jb
mov
cmp
dec
lock
popa
mov
decb
insb
out
inc
cs
xor
sbb
popa
imul
mov
mov
mov
dec
mov
lahf
ss
inc
push
xor
jge
popa
into
shr
inc
in
inc
out
mov
dec
push
movsl
jp
fiadds
fadd
sbb
outsb
push
or
stos
cmp
mov
mov
or
jno
inc
xchg
mov
pusha
push
js
xor
xchg
into
push
cld
bound
mov
cwtl
mov
dec
jle
mov
push
xchg
inc
pop
mov
lods
jge
in
jns
cmpsl
mov
mov
mov
inc
mov
push
lret
fnstsw
mov
push
sub
jl
sbb
in
mov
test
add
adc
xchg
pop
dec
repz
adc
xchg
mov
dec
add
inc
int3
shrl
enter
loopne
xchg
cmp
or
fnstenv
adc
mulb
xchg
adc
ficomps
fstl
fcmovb
mov
pop
in
mov
ljmp
sub
cmp
ret
lods
dec
add
inc
sbb
cld
pop
faddl
mov
sub
xchg
mov
fsubs
pop
xor
jle
pop
mov
push
push
pop
pop
js
mov
jle
adc
pop
push
lret
hlt
xor
mov
sahf
pop
mov
ss
add
imul
mov
je
or
sbb
mov
adc
mov
cmp
push
notb
aam
jnp
sbbl
dec
pusha
sbb
mov
aad
int
sub
daa
aaa
iret
adc
les
insb
mov
cmp
sahf
sub
stc
dec
shlb
popf
dec
inc
or
jge
mov
xlat
dec
fs
or
pop
adc
es
add
loope
sbb
mov
mov
fs
ljmp
adc
gs
int3
fidivrl
xor
xor
pop
push
cmpsl
add
stos
jne
repz
fistl
lret
adc
stos
add
pop
hlt
loop
test
into
rcl
push
cmp
cvtpi2ps
popa
popa
xchg
stos
data16
popf
lret
xor
sub
fstl
inc
push
push
cmp
sub
push
insb
cmp
out
pop
and
add
jge
daa
hlt
mov
mov
scas
inc
sbb
lds
lea
outsl
sbb
xor
mov
ds
int3
mov
cmp
ret
mov
and
lcall
test
dec
inc
loope
lock
inc
lods
jge
lahf
cmp
mov
jbe
xchg
inc
or
enter
rcrb
mov
push
rcll
sub
mov
fcoms
lret
or
dec
cmpsl
xchg
sbbl
dec
inc
jbe
xchg
sub
popl
fsubrl
movsb
imul
daa
sub
pop
jno
jno
xor
and
jg
les
adc
rorl
out
jae
xor
scas
sti
push
dec
push
push
xchg
cs
mov
ljmp
cmp
lahf
fs
jmp
fwait
adc
xchg
test
inc
outsb
pop
addr16
sub
fstps
aam
jno
sbb
dec
cmpsl
loope
clc
lds
cmp
aam
adc
xor
mov
and
sti
or
inc
pushl
cmpsl
faddl
pop
or
pop
es
std
aad
lcall
in
std
mov
push
data16
push
subl
pop
jecxz
lea
inc
push
lock
cmpl
dec
shl
sbb
xlat
scas
inc
popa
movsl
xchg
test
xor
sub
decb
xor
add
scas
dec
repz
push
lea
and
sub
mov
adc
add
aaa
push
or
sbb
jbe
cmp
ja
aas
mov
mov
inc
push
jb
sbb
ss
sub
lcall
jnp
adc
stc
inc
aas
out
stc
cltd
insl
xor
fidivrs
mov
adc
mov
neg
mov
lretw
push
lods
adc
lds
fdivrl
cmc
out
add
addb
roll
push
mov
aad
cmp
int
movsb
sbb
je
adc
or
fsubl
mov
xchg
push
mov
inc
lahf
jmp
and
jns
jno
inc
and
xchg
cmpsl
pop
icebp
inc
xlat
cs
bound
leave
mov
out
mov
in
ds
mov
jnp
mov
popf
sbb
inc
pop
icebp
nop
inc
jmp
push
ds
xchg
cmp
cmp
cmc
popf
xor
sub
jb
loope
ljmp
mov
lds
jecxz
fwait
cwtl
popf
repz
xchg
test
jecxz
push
add
movsb
sub
mov
mov
sub
jg
leave
mov
jge
jnp
and
pop
xor
jecxz
mov
insl
and
xor
div
mov
mov
adcb
sub
lcall
push
shrl
pop
lds
dec
ljmp
xor
inc
push
dec
loop
inc
aas
xchg
test
jg
ds
fildll
push
xchg
add
aam
adc
sbbl
cmp
loopne
add
push
mov
bound
jmp
xor
and
push
sub
mov
leave
fadds
leave
sahf
add
pop
out
inc
mov
dec
and
pushf
or
mov
mov
xor
mov
out
enter
cmp
pop
cltd
sahf
cmp
mov
xchg
mov
or
xor
xlat
cmp
cli
fwait
add
out
xor
adc
mov
push
sti
clc
in
lret
repz
push
jnp
mov
fidivrl
xchg
or
in
add
lods
sub
fistpl
sahf
sub
insl
sub
fstpl
punpcklbw
inc
adc
fisttpl
fimuls
lods
adcb
or
in
xchg
out
xchg
divl
lret
mov
mov
stc
pusha
and
jmp
xlat
mov
mov
lfs
pop
push
fnstenv
out
mov
clc
xchg
loope
mov
sarl
dec
add
shll
push
push
cmp
shlb
insl
sub
mov
lret
or
dec
push
decb
xchg
sub
outsb
ss
pop
insl
inc
fcomps
xor
cltd
and
out
push
fdivrl
add
mov
lcall
or
add
and
xchg
and
jmp
shlb
gs
out
lds
gs
ss
pop
cwtl
inc
push
data16
push
test
pop
jne
push
out
push
xor
push
sbb
jge
dec
pop
lods
mov
ja
icebp
push
jmp
aad
or
je
pushf
sub
lods
test
shlb
xchg
addr16
mov
mov
out
push
leave
mov
lret
cmpsb
adc
mov
push
in
out
sub
out
lds
mov
dec
dec
je
or
sahf
inc
arpl
or
fucomp
jo
and
stc
inc
push
push
cmp
sbb
dec
scas
mov
loopne
inc
push
mov
mov
jp
test
add
outsl
leave
mov
ss
dec
add
push
pushf
aas
mov
sahf
inc
mov
pop
cmp
xlat
mov
int3
jmp
jo
cld
xor
dec
loopne
mov
ss
pop
repz
adc
mov
xchg
cs
out
bound
pop
lret
and
push
mov
mov
pop
pop
mov
insl
or
push
push
ss
mov
pop
int3
lea
fmul
rcl
xor
adc
xchg
jl
add
dec
jp
mov
pop
lcall
or
lcall
sub
or
dec
fisttps
push
subl
jmp
sbb
leave
add
adc
sbb
imul
dec
xchg
add
sub
add
hlt
xor
jno
std
nop
adc
and
push
subl
xorb
daa
or
xchg
cwtl
dec
push
mov
lock
out
cmpsl
fldl
test
rcrl
mov
xchg
mov
xchg
ds
cmpsl
stos
inc
jmp
and
enter
cltd
test
aam
test
shrl
js
and
inc
jg
loope
and
add
jae
inc
jno
in
sahf
inc
fmuls
into
ja
add
insb
js
xchg
xchg
pop
mov
and
popa
add
pop
xor
pop
sbb
jge
mov
stc
xor
bound
mov
lret
and
cli
mov
and
imull
sbb
in
jge
aad
jp
inc
pop
aad
nop
adc
shll
mov
inc
inc
popa
in
add
inc
pop
shrl
jae
xrelease
xor
adc
or
push
leave
int
cli
ss
push
lcall
ljmp
push
adcl
sbbb
out
inc
mov
xor
push
dec
push
out
jae
mov
fildll
sbb
orl
dec
mov
repz
int
or
push
scas
iret
jae
fstpt
mov
cmc
sbb
pushf
mov
dec
or
lcall
ja
int
push
fidivrl
mov
sub
xor
test
xchg
inc
pop
insl
out
cmc
daa
inc
cs
repz
rclb
jecxz
scas
lods
inc
aam
mov
jnp
cwtl
gs
pop
xchg
pop
enter
dec
fs
sub
js
jl
leave
xor
sub
jge
call
dec
jge
jle
sbb
outsl
mov
sahf
stos
mov
mov
mov
out
leave
mov
cmpsl
test
mov
or
cmp
dec
mov
fnstsw
shrb
es
mov
dec
shll
popf
loope
xchg
scas
dec
dec
add
mov
xchg
pop
negb
cmp
ss
clc
jns
push
push
scas
inc
adc
xchg
leave
popf
add
jne
sahf
xchg
arpl
mov
clc
dec
pop
dec
mov
out
rclb
fnstsw
xchg
pop
out
frstor
loop
push
sbb
mov
sub
clc
add
sbb
mov
jmp
nop
rorb
inc
stos
es
ljmp
push
ds
fldenv
xchg
addr16
es
fbstp
cltd
inc
in
mov
into
dec
dec
adc
or
sub
not
xor
paddw
sub
enter
psubsw
inc
rcll
add
adcl
and
inc
sbb
outsb
psubsw
imul
push
adc
mov
out
xchg
js
in
adc
fmul
repnz
push
push
fldl
pop
nop
adc
xor
aaa
jb
xchg
inc
fldt
ss
cmp
cmc
and
popf
stc
push
inc
popf
stc
inc
inc
push
mov
loop
inc
push
pop
jmp
shld
lock
jne
repz
jbe
adc
cltd
stos
call
or
mov
in
pop
popf
xlat
outsb
into
js
leave
stc
out
cmc
xor
daa
xchg
pop
push
add
mov
pop
fisubrs
int
dec
repz
rcll
add
lret
sub
mov
mov
pop
push
dec
dec
lods
std
cltd
sub
mov
pop
shlb
popf
or
mov
ss
in
clc
adc
lret
gs
dec
xor
addr16
and
out
mov
cmp
pushf
add
mov
jae
mov
cltd
pusha
xor
xchg
lock
sbb
out
sbb
clc
int3
shlb
mov
inc
xlat
aam
lret
cmp
mov
mov
loop
push
mov
xchg
xchg
and
outsl
daa
ds
pusha
test
fiaddl
dec
push
aam
sbb
mov
push
add
pop
mov
sbb
inc
lods
icebp
mov
dec
xchg
jae
add
mov
nop
cwtl
mov
xchg
pop
arpl
push
dec
out
xchg
or
movsl
ljmp
aas
leave
out
jecxz
jmp
out
sti
pop
push
or
fnstenv
into
and
inc
scas
lods
inc
lcall
add
cmp
loope
and
and
jne
pop
shl
test
cld
push
sub
inc
fimull
inc
popa
jge
popa
mov
scas
stos
negb
cmp
icebp
jb
lods
xor
cltd
cmpsl
ds
mov
inc
fsubrs
jno
mov
or
push
mov
pushf
adc
movsb
lret
add
out
das
cwtl
gs
dec
int
loop
mov
pop
loop
sub
and
ss
jge
fdivs
push
or
xchg
mov
xlat
test
xchg
imul
mov
into
fwait
pusha
arpl
xchg
hlt
lds
xlat
sbb
imul
sub
loope
sub
imul
or
test
xchg
hlt
mov
in
int3
arpl
adc
ss
ljmp
push
aaa
push
jne
imul
xor
dec
xorl
dec
dec
jns
jmp
or
add
out
jge
pop
add
xchg
mov
inc
cmp
dec
mull
lea
int
dec
stc
es
and
rcl
test
aaa
aam
add
pop
jg
mov
out
sbbb
adc
cmp
cld
adc
fwait
xchg
out
sub
pushf
daa
adc
out
sub
mov
jne
push
dec
jb
gs
xchg
push
pop
sub
incl
push
adc
push
flds
out
mov
imul
sbb
movsb
das
cmp
mov
insl
xchg
in
shl
mov
cld
lcall
in
ja
fisubrl
adc
pop
and
inc
rcl
dec
call
jne
and
repz
mov
pop
in
aas
rcrl
outsl
movsb
arpl
sub
cmp
cld
int3
nop
daa
or
mov
mov
pop
scas
icebp
mov
and
cmpsb
ss
and
fdiv
push
jmp
loop
inc
xlat
dec
pop
outsl
push
mov
jb
sbb
nop
movntq
aad
sbb
icebp
je
movsb
rol
mov
and
int
xchg
push
push
sub
ja
mov
imul
clc
jecxz
add
add
or
add
js
pop
aaa
das
repnz
cs
insb
sub
sub
cmc
lret
cmpsl
stos
inc
xchg
imul
xchg
xchg
ss
xchg
dec
addr16
pop
shrl
push
inc
sbb
push
xor
stos
pop
inc
aas
aad
adc
les
adc
aaa
push
pop
push
nop
bound
imul
in
dec
filds
aad
stos
clc
inc
fmul
jl
call
or
fs
mov
enter
pop
jmp
mov
jecxz
jno
mov
sti
push
mov
jmp
mov
shlb
in
fstpt
lahf
aas
mov
and
lcall
lods
dec
xchg
ja
test
cmp
mov
xchg
mov
ja
add
pop
lock
mov
xchg
in
and
repz
lret
inc
push
mov
jecxz
mov
rolb
push
mov
dec
jmp
loopne
sub
popa
sbbl
sub
repnz
xchg
jns
in
in
stos
loopne
divb
fadds
daa
cmpsl
dec
mov
sbb
lret
or
mov
mov
dec
out
sub
push
jmp
pop
xchg
sub
aam
jnp
adc
insl
jge
and
add
sbb
adc
pop
cli
cs
inc
aas
adc
jo
mov
mov
andl
std
add
test
ret
outsl
das
sub
or
cmp
in
xchg
jnp
out
jecxz
mov
mov
addr16
loopne
push
repnz
outsb
in
cltd
data16
test
mov
mov
mov
cmp
dec
dec
mov
push
test
pop
xchg
sub
xchg
andb
mov
test
jns
es
add
and
pop
pusha
ljmp
mov
call
mov
xchg
stos
cmp
idivb
cmp
jbe
in
jg
push
imul
enter
mov
mov
or
and
mov
cmp
sarb
sbb
movsb
sub
cmp
xchg
jle
jnp
ficompl
pop
sbb
cs
int3
or
outsb
imul
test
clc
dec
xchg
outsb
dec
or
lds
fwait
xor
sbbb
add
xchg
sub
popf
inc
test
xchg
xchg
orb
pop
xor
mov
sbb
jno
in
and
roll
mov
or
rorl
je
sti
es
aaa
add
xlat
xchg
int
lock
inc
jb
mov
stc
push
sbb
inc
loop
fidivs
dec
rcrl
data16
add
sbb
push
test
clc
icebp
push
sarb
andb
inc
mov
and
push
stos
inc
mov
popf
stc
leave
mov
adc
and
loopne
addr16
and
cmpsb
push
dec
loope
dec
daa
jmp
mov
lahf
data16
cmp
inc
adc
movsl
cltd
push
pop
sahf
andl
leave
xor
sbb
sbb
push
fldz
mov
mov
shr
push
nop
pop
dec
mov
cmc
push
cld
mov
rcrb
loopne
notb
push
in
andb
add
xchg
aaa
mov
pop
mov
push
xlat
hlt
or
shll
dec
out
ljmp
push
inc
xchg
push
or
js
pusha
jns
xchg
pop
add
pop
bound
mov
daa
cmp
imul
pop
cmc
ds
xchg
adc
jl
and
or
stc
out
mov
mov
pop
jp
jg
push
xchg
rorb
push
push
mov
mov
jno
cld
movsl
lds
mov
adc
in
mov
arpl
push
ret
pop
dec
test
mov
cs
jbe
dec
insl
lds
cmp
fistpl
imul
and
arpl
cltd
mov
aam
ljmp
sub
mov
cmc
mov
imul
out
or
cmpsb
arpl
xlat
xor
xchg
dec
mov
pop
out
sbb
enter
adc
jge
cs
popa
imull
sti
jbe
xor
push
shr
cltd
add
in
pusha
mov
xchg
sbb
mov
out
lea
adc
push
cs
xorb
cmp
scas
push
jle
jmp
pop
pop
jne
in
pop
jge
scas
in
ljmp
lea
mov
nop
pop
and
sub
addl
mov
clc
mov
push
jbe
cmp
cli
push
jmp
push
add
int
mov
push
aad
rcrl
xor
push
lea
stos
jno
rorb
and
loope
mov
mov
icebp
sbbl
jp
sbb
adc
cmp
or
loope
cmp
mov
iret
insl
shlb
or
xchg
xchg
ja
arpl
mov
movsl
mov
add
jns
mov
mov
mov
adcb
sub
movb
cwtl
sbb
lret
mov
bound
add
xchg
and
or
sub
nop
clc
cli
inc
adc
and
xor
pop
adc
mov
daa
sub
dec
in
jge
mov
loop
jp
pusha
inc
lock
aas
add
psubsb
mov
sbb
cmp
add
xchg
pop
mov
cwtl
je
jp
jae
movl
outsb
pop
adc
adc
dec
aaa
popa
fucomp
cwtl
and
cmpb
xchg
cld
push
jne
push
and
bound
jbe
aad
xor
mov
leave
movsl
pusha
adc
inc
xchg
xor
sarl
pop
ret
pop
leave
add
dec
pop
push
mov
jae
jns
into
mov
hlt
and
lods
adcb
add
and
lods
out
dec
aas
clc
mov
lcall
adc
lock
jno
ret
in
dec
testl
lret
loop
pop
insl
xor
loope,pt
xchg
add
and
outsb
test
ja
leave
popa
mov
rcrl
push
cmpsb
cmp
xchg
popa
inc
fcoml
enter
jecxz
inc
xor
sbb
lcall
scas
testb
popf
inc
mov
fs
cli
stos
test
lock
add
pushf
pop
adc
add
jns
xchg
push
movb
dec
shlb
negb
dec
pop
aam
cmp
stc
cmpsb
jns
push
in
stc
outsb
sbb
pushf
test
ljmp
xchg
add
adc
movlps
in
gs
xor
decb
dec
lahf
add
es
and
fwait
mov
je
aam
sbb
lock
test
mov
fnstsw
sbb
mov
pop
mov
cmpsl
out
adcb
sbb
mov
ja
loopne
cwtl
cwtl
negb
inc
mov
lret
and
cmp
je
rolb
repnz
xor
mov
jl
bound
fcmovnbe
rorb
jge
or
mov
push
jge
add
and
lock
or
jnp
in
sbb
fnstenv
fisubrs
sbb
cmp
mov
add
lods
mov
mov
add
aam
cmp
fwait
clc
push
mov
stos
mov
sub
add
test
das
lahf
fstpt
mov
cld
es
or
push
insl
mov
push
lods
std
lods
or
push
cmp
and
inc
push
or
adc
or
test
pop
cmc
mov
push
adc
pop
add
fs
and
lea
mov
fidivrl
mov
arpl
lods
cmpsl
jl
mov
xor
sub
push
sub
std
xchg
sahf
jnp
mov
or
pop
and
mov
mov
sub
jle
sbb
pop
sbb
addl
inc
pop
sbb
push
enter
mov
ret
andl
out
adc
jb
inc
cmc
push
test
faddl
enter
mov
inc
jecxz
sbb
adcl
ret
push
sub
fsubrp
or
jge
mov
dec
addl
mov
mov
xchg
push
in
loop
pop
cmc
mov
add
add
or
xchg
add
mov
test
xor
dec
outsb
int3
inc
push
push
rorl
leave
jnp
push
popf
mov
push
inc
sti
xchg
pop
xor
pop
mov
js
cmp
stos
aad
fistpll
add
xor
pop
in
cwtl
pop
sti
inc
add
add
enter
and
mov
lcall
add
nop
pop
cmp
xor
jb
shlb
test
repnz
and
psadbw
or
stos
and
push
out
push
fnstsw
frstor
jbe
or
out
xor
test
inc
in
xchg
arpl
mov
pop
int
pop
inc
je
xchg
jmp
dec
push
mov
xor
lret
mov
push
es
mov
dec
aaa
pop
push
gs
dec
pop
inc
gs
dec
es
mov
out
push
sbb
adc
jnp
ret
pop
mov
ds
sub
ds
inc
dec
mov
cli
push
aad
in
in
push
repz
mov
int
or
cli
or
fsubl
push
loope
insb
sub
xor
out
add
cs
push
inc
bound
in
pushf
push
in
mov
adc
mov
xor
sub
insb
mov
clc
cs
imul
inc
cwtl
incb
add
adc
test
mov
ljmp
in
inc
or
scas
pop
pop
adc
scas
dec
mov
add
ljmp
jge
jecxz
jne
mov
adc
mov
xor
pop
popa
or
pop
mov
cltd
sub
mov
nop
pop
cs
cmpsl
pop
push
sbb
mov
imul
and
arpl
subb
clc
test
jge
jp
or
imul
sbb
mov
test
inc
loopne
mov
mov
cmp
into
repz
cld
sub
daa
arpl
stos
call
pop
fmul
sbbl
or
mov
mov
lahf
push
lahf
std
je
cmc
xchg
adc
rolb
pop
mov
jecxz
dec
xchg
add
dec
cmp
inc
jge
pusha
fildl
xchg
pop
jbe
iret
xchg
sub
mov
push
push
and
dec
and
xlat
inc
pop
xor
clc
sub
cmp
addr16
nop
xor
loop
sub
inc
dec
xor
xor
xor
xchg
dec
outsb
cs
lods
pop
iret
outsb
lods
cli
cmp
cmp
cmpsl
aad
scas
jo
icebp
mov
fs
adc
enter
dec
loopne
int
inc
sbb
inc
das
in
test
cmpsb
imul
or
shll
shrl
cmp
in
out
bound
cmp
add
or
add
push
imul
push
inc
mov
and
aaa
inc
pop
xor
std
jp
sbb
jbe
popf
mov
in
leave
push
out
ret
pop
and
push
push
repnz
pop
hlt
lcall
orl
add
gs
repz
sub
lock
add
push
mov
dec
gs
aam
lcall
andl
imul
ret
sbb
xor
ja
out
and
rcl
aam
and
pop
ss
inc
jmp
xchg
mov
std
in
push
push
hlt
pop
dec
inc
pusha
out
test
leave
or
adc
dec
add
out
les
sub
rol
repnz
xor
test
push
test
push
xchg
jmp
mov
mov
cmp
ja
movsb
faddl
xor
addb
icebp
mov
pop
mov
jno
push
aas
fwait
jbe
movsb
xchg
or
sarl
adc
aaa
jmp
jg
push
icebp
mov
and
ret
inc
test
pop
fwait
push
jnp
xor
imulb
mov
dec
jno
mov
pop
lahf
push
flds
push
fisubrs
test
lret
in
push
aam
sbbb
jle
fwait
dec
adc
mov
push
sbb
into
cmp
xor
loope
jo
std
xchg
into
ja
pop
xor
xchg
xor
and
lods
insl
jl
lea
pop
sub
pushf
enter
cmp
repnz
xchg
xor
test
push
popf
push
scas
xor
push
jp
enter
ds
popl
pop
sbb
pop
test
push
mov
fwait
mov
cmpsb
xor
mov
push
pop
cmpsl
les
lock
dec
or
and
sub
test
mov
sarl
mov
fwait
mov
into
movsl
out
jg
test
push
mov
xchg
out
fcomip
mov
in
push
adc
and
out
test
and
xor
cmp
jmp
stc
pushf
push
mov
mov
and
pop
rcrb
lods
push
mov
incl
push
mov
adc
push
sbb
cmp
sub
sbb
push
or
mov
mov
xor
fisubrs
mov
jbe
fadds
mov
testb
push
and
dec
fisubl
jg
fisubrs
jbe
push
xchg
xchg
jg
mov
popa
pop
mov
sbb
and
inc
dec
or
mov
push
cmp
mov
xchg
int
lds
mov
das
or
out
push
es
xchg
cmpsl
shll
mov
mov
dec
pop
test
or
mov
add
sub
xchg
gs
outsb
dec
mov
aaa
dec
inc
push
inc
fisttps
popa
cmp
popf
inc
push
sub
mov
cmc
jle
in
push
jmp
mov
mov
mov
sbb
xor
jmp
pop
mov
jmp
arpl
push
jbe
jno
test
mov
loopne
or
addr16
outsl
dec
lret
movsb
sti
sahf
xchg
cltd
adc
dec
movsl
lahf
stos
mov
lods
inc
pop
rorb
lcall
sub
fsts
cmpsl
add
pushf
sbb
mov
in
imul
sbb
int
dec
jmp
and
sbb
inc
inc
repnz
mov
jo
pop
xchg
mov
cmpsb
in
negb
popf
push
sub
lea
sub
leave
xchg
bnd
aad
je
stc
or
std
loop
lods
ljmp
mov
adc
lret
pop
add
lock
jmp
xchg
pop
call
add
fldl
jmp
out
dec
dec
test
pop
insl
stos
push
arpl
out
mov
add
xchg
mov
dec
std
sti
xchg
xchg
sbb
push
ret
mov
mov
mov
sbb
into
loope
insl
ss
mov
cs
lock
lods
adc
xchg
jne
and
ret
rolb
fdivrl
pop
imul
icebp
mov
rorb
shrl
xor
imul
pop
mov
xchg
and
fdivs
sbb
addr16
lock
test
scas
inc
xor
aam
push
mov
aaa
call
xchg
mov
out
xchg
add
cmpsl
lods
jno
clc
pop
cs
rclb
push
push
xor
scas
pop
clc
sbb
sarb
adc
daa
mov
mov
pop
xor
ds
subl
cmp
jno
sbb
sbb
mov
int3
mov
xchg
ret
adc
push
popf
sub
lidtl
and
pop
pmullw
cmc
inc
cmp
mov
mov
ret
mov
addr16
call
add
imulb
loopne
lahf
mov
shlb
push
push
les
xchg
movsl
adc
adc
jae
sub
insb
sbb
dec
or
xor
ret
pop
inc
push
jno
jle
icebp
es
add
dec
es
cwtl
das
cli
xchg
cs
xor
lahf
movsb
mov
shlb
push
sub
xchg
mov
ja
sbb
aad
mov
pop
inc
fs
pop
inc
xchg
lret
andb
and
fldl
imull
loopne
lea
cli
daa
inc
shlb
icebp
loope
and
adc
sbb
leave
and
mov
iret
lods
test
test
mov
jge
pop
cltd
into
sahf
adc
lret
sub
test
adc
sub
push
fadds
cltd
jecxz
inc
mov
push
cli
or
sub
scas
jns
inc
jmp
mov
fldenv
cmc
sahf
test
ror
jnp
mov
mov
xchg
pop
and
lcall
sti
aaa
push
mov
leave
cmp
inc
and
mov
lods
mov
push
push
repz
fs
xor
in
jmp
dec
adc
ja
in
xchg
adc
stos
cmp
pop
jmp
fists
jg
add
xor
shrb
push
flds
and
fnstsw
sub
pop
xchg
xchg
xchg
pop
stc
cmp
mov
mov
popa
jno
sbb
push
jo
push
add
sbb
push
in
mov
cld
outsb
push
sub
nop
mov
mov
sahf
andl
scas
push
sub
adc
xor
out
test
popa
in
push
jae
pusha
fpatan
int3
andb
int3
fnstcw
xchg
sub
add
lahf
dec
sbbb
test
mov
ja
std
push
push
xchg
dec
cmp
xor
arpl
fsubs
adc
jo
loope
jbe
jg
lcall
addr16
push
mov
mov
push
iret
add
jne
fmulp
js
es
and
bound
and
mov
les
pop
out
push
pop
mov
mov
mov
push
je
push
jo
test
insb
xchg
mov
lods
ss
push
movsl
test
lret
sub
sub
push
ss
andl
or
mov
push
mov
or
jp
xchg
mov
leave
divb
cli
iret
arpl
jae
ret
subb
or
and
push
push
sbb
cmp
ret
pop
fnstsw
in
int3
lret
mov
inc
xchg
fisttps
mov
loop
ljmp
fildll
pop
ret
push
push
xor
dec
clc
fs
outsb
mov
jne
int3
repnz
push
cmpsb
mov
cli
jno
sub
in
faddp
xchg
sub
or
enter
cmp
dec
dec
adc
xor
add
inc
xchg
gs
xchg
cli
out
addr16
adc
incl
out
imulb
nop
jo
add
and
fidivs
addr16
mov
inc
xchg
mov
sub
mull
ja
xchg
hlt
dec
popa
add
mov
faddl
int
aas
adc
jo
mov
cmp
out
jno
mov
push
test
call
dec
lfs
lahf
in
add
xchg
ljmp
mov
inc
mov
pop
add
dec
cmp
push
mov
fwait
jle
mov
mov
insl
lods
stos
pop
sub
mov
push
movsw
or
mov
cmpsb
sub
add
pop
jle
inc
test
nop
jg
inc
inc
mov
pop
jg
jnp
push
xor
jl
jle
lods
mov
stos
adc
and
andl
les
in
out
movsl
loope
pusha
add
imul
jmp
imul
cmp
xchg
and
sbb
cmpsl
jl
dec
sbb
inc
add
repz
sub
nop
aam
push
fcompl
pushf
cli
mov
or
fsubrs
push
imul
mulb
dec
jne
jmp
out
xchg
mov
and
repnz
xchg
fcmovnu
stc
outsb
push
jl
aaa
imul
cmp
leave
mov
adc
sti
jp
iret
movsb
mov
sub
cs
iret
gs
das
mov
jb
cmp
mov
int
dec
and
das
inc
pop
pop
mov
mov
mov
add
dec
jno
sarb
push
je
add
out
xchg
push
push
add
ljmp
and
pop
push
ja
stos
imulb
imul
lret
fsubrl
lds
jg
pop
daa
inc
cmp
xchg
adc
sbb
pop
hlt
mov
sub
xchg
dec
stos
cli
and
push
pop
lock
je
sbb
data16
outsl
xchg
mov
mov
push
adc
or
xchg
mov
xor
xchg
jge
aas
cwtl
fnstcw
pop
fs
mov
shll
addb
sahf
inc
push
dec
outsb
xor
push
mov
fstp
jno
inc
ss
mov
xchg
jp
sub
dec
icebp
dec
fmul
out
sahf
sbb
stos
add
cmp
sti
mov
lahf
sub
lds
push
xchg
xchg
call
ret
aaa
mov
lock
arpl
jmp
mov
addl
push
push
insl
xor
les
mov
insb
add
rcrl
dec
adc
jmp
fdivrs
test
push
fwait
data16
into
sbb
and
repnz
es
or
in
lahf
loope
mov
xlat
xor
fcomi
jge
sbb
sbb
or
pop
xor
movsl
mov
pop
das
jle
xor
xor
push
or
stos
nop
imul
shll
mov
dec
data16
sbb
enter
shlb
dec
jb
pop
mov
jno
addr16
push
add
in
cltd
sbb
pop
test
cmp
and
xchg
bound
dec
data16
lods
sub
mov
xlat
fiaddl
sarl
fadd
jg
scas
cmpsb
and
mov
movsl
insb
stos
mov
out
incb
rsm
pop
je
sub
mov
xchg
in
aad
cmp
xchg
jge
addr16
pop
push
lcall
cwtl
das
or
or
push
stos
mov
fdivl
fisubrl
int3
in
arpl
aad
repnz
mov
xchg
scas
mov
cmc
cld
jno
cltd
pop
mov
jg
scas
stos
pop
mov
xor
out
push
jmp
mov
inc
push
pop
pcmpeqd
sahf
lods
push
xchg
xchg
cmp
jmp
xor
fwait
sbb
or
jmp
mov
divb
call
mov
xor
jmp
xchg
add
add
jno
cmp
mov
or
fs
push
and
cmpsl
ds
daa
jg
test
adc
jge
mov
jno
xor
shr
jge
les
daa
add
popf
cmp
scas
inc
dec
adc
push
push
push
or
and
push
mov
dec
mov
mov
or
xchg
pusha
cmp
xchg
mov
clc
enter
hlt
jmp
cmpsb
lock
xchg
jns
lret
addr16
xor
xchg
cmp
pushf
mov
sub
pop
int
jns
lcall
dec
pop
pushf
xor
sub
push
stc
icebp
rol
mov
into
push
imul
sbb
adc
or
and
fadds
std
jbe
bound
pop
enter
aam
cmp
stos
ret
insb
test
rclb
mov
cmp
pop
inc
loope
jl
cli
lods
int3
arpl
sbb
jae
ljmp
xchg
stos
flds
mov
stc
inc
shll
clc
dec
addb
jno
and
rcrb
inc
mov
or
stos
pop
dec
fidivrl
dec
ret
sub
inc
movl
jl
xchg
mov
or
and
stos
cltd
cmp
dec
or
sub
sti
mov
aas
rcrl
fmuls
sbb
into
xor
out
cmp
inc
xor
mov
cmpsl
mov
out
repz
cmc
jae
pop
jl
push
push
mov
and
in
daa
cld
mov
enter
cmp
rcll
shrb
scas
jb
xchg
jbe
popf
xchg
call
and
push
js
mov
pop
testb
xchg
ja
and
repz
cld
push
js
fidivl
jp
fbstp
sub
outsl
mov
dec
pop
icebp
inc
cmp
sub
and
repnz
and
ret
fnsave
pop
popl
sarl
movsl
jo
movsl
data16
sub
sbb
xchg
sub
push
xor
inc
pop
push
jp
into
xchg
stos
xor
push
rcl
ret
cs
ret
cltd
mov
dec
dec
sbb
pop
push
inc
sub
adc
int3
inc
inc
pop
lock
cld
push
adc
imul
add
mov
fwait
push
std
sbb
xor
in
push
cmp
stc
sub
mov
divps
xchg
sbb
jae
shrl
jecxz
mov
incl
ds
addr16
push
adc
dec
jbe
stc
inc
in
rcr
adc
jns
add
scas
or
notb
mov
xor
insb
addl
ljmp
or
jns
xchg
lea
and
popa
mov
je
jb
dec
jecxz
adc
lds
xor
ret
push
mov
inc
shll
out
pop
and
sub
out
enter
test
mov
sbb
mov
and
repz
enter
imul
mov
sahf
lcall
mov
xchg
clc
sbb
movsb
mov
pop
adc
nop
push
push
mov
fs
xchg
popa
sub
and
es
stos
test
push
and
sahf
add
lds
sbb
jno
imul
movsb
and
movsl
push
sti
push
add
push
push
cli
mov
jle
clc
aas
sub
sbbb
int3
pop
cmp
and
inc
push
mov
mov
addr16
outsb
mov
and
dec
mov
jnp
push
mov
rcr
lods
inc
sarb
inc
pop
fstps
test
sub
mov
lret
negb
inc
cmp
xor
in
shr
stc
adc
fwait
mov
cmpsl
inc
enter
jmp
cmp
xchg
bound
push
xor
xor
pop
jne
dec
mov
jp
fsubs
dec
dec
in
pushf
ret
addr16
and
je
dec
inc
test
lea
adc
test
hlt
cld
sub
shrl
repz
sub
pop
int3
mov
insb
cltd
inc
xlat
into
xchg
movsl
repnz
push
sbb
inc
arpl
stos
xchg
int3
sarl
pop
inc
fwait
add
fiadds
mov
fnsave
xlat
outsl
test
mov
xor
cmpsb
dec
and
mov
xor
fcmovu
dec
inc
push
jmp
sbb
xchg
mov
arpl
cltd
test
pop
cwtl
xchg
sbb
and
scas
pop
mov
xor
das
dec
push
jne
cmpsl
push
pop
mov
les
and
int
mov
pop
and
pop
mov
inc
imul
lock
dec
iret
test
inc
inc
test
mov
iret
mov
les
loop
lret
mov
add
pop
call
cmp
in
push
call
jmp
jns
adc
jo
xor
mov
mov
ret
sub
push
xor
dec
shl
add
decl
push
leave
push
scas
mov
shr
or
test
xor
push
sbb
jae
mov
inc
mov
mov
shrb
and
adc
sub
ljmp
mov
mov
test
ret
js
push
scas
lock
icebp
push
imul
and
divl
mov
out
inc
push
xor
je
adc
adcb
push
adc
mov
jge
inc
sar
pop
in
lret
fwait
mov
or
cwtl
jbe
test
xor
sbb
clc
push
mov
xor
js
push
roll
int3
sbb
pop
std
dec
pop
and
lea
dec
push
loop
sbb
mov
mov
xchg
loopne
ret
frstor
sahf
in
and
lods
mov
pusha
add
push
mov
sbb
mov
icebp
inc
jle
and
scas
mov
popf
nop
mov
inc
fidivrl
dec
add
lea
int
test
jne
push
sub
inc
rcr
mov
pop
in
or
push
xchg
sahf
xor
outsb
xor
sahf
push
mov
push
inc
push
daa
jnp
daa
outsl
add
in
cmpsl
test
daa
or
or
popa
pop
pop
popf
test
aam
inc
imul
cmpsl
pushf
mov
or
mov
ret
pop
cmp
imul
pop
and
or
in
leave
into
mov
pop
push
mov
fstps
movsb
std
stc
mov
and
or
fisttpll
enter
add
mov
jno
pop
ja
sbb
inc
xchg
fstp
jo
pop
mov
rorb
xchg
and
lods
outsb
out
sti
xchg
aad
rorb
movsl
inc
fcom
daa
push
je
call
inc
aaa
cmp
ret
and
mov
xchg
sahf
pop
pop
inc
lret
cld
and
cmpsl
cwtl
es
dec
mov
sahf
inc
rcrb
lds
sub
mov
pop
pop
lahf
lock
outsl
sbb
repnz
xor
inc
pop
mov
imul
xor
add
iret
inc
inc
mov
xlat
lcall
pushf
xchg
push
out
jle
mov
inc
lods
cmp
adcb
dec
cmpps
js
pop
pop
xor
mov
cli
pushf
cmp
jmp
and
cmp
and
dec
pop
mov
add
and
in
mov
es
iret
mov
mov
jae
cmp
les
pop
in
shl
ret
fmul
mov
jnp
lahf
xor
add
dec
inc
repz
fwait
sbb
push
stos
pop
adc
mov
ds
arpl
ljmp
cmc
jns
push
dec
fisttpll
addr16
mov
sbb
stos
insl
xor
push
std
mov
in
enter
adc
push
int3
jno
or
inc
xchg
or
out
push
insl
pushf
adc
push
or
into
pop
pop
xchg
scas
lret
movsl
mov
and
and
sar
or
cld
ret
outsl
and
xor
popa
xor
mov
and
cmp
push
es
adc
notb
and
vcvtps2dq
pop
jmp
rcr
cld
outsb
cmc
mov
mulb
xchg
in
mov
sarl
dec
seta
sbb
pop
inc
lcall
rsqrtps
mov
sbb
cmp
push
inc
out
xor
adc
sbb
xchg
call
add
lods
jne,pn
xchg
inc
jg
jge
int
shl
loopne
testl
push
cmp
jo
jnp
loop
fistpl
scas
test
inc
adc
dec
xchg
push
jne
mov
popa
hlt
rcrb
ds
test
xor
insl
or
xor
jmp
rol
repnz
repnz
and
pop
push
sbb
jae
mov
jl
movsl
rcrl
cmpsb
cmp
lods
jo
inc
in
cmp
sub
aad
lock
xorl
lret
and
jnp
imul
subl
fmull
das
pop
mov
pop
jp
or
mov
mov
mov
push
mov
pop
mov
xor
jns
pop
stos
stos
sub
sub
jmp
mov
cmp
xor
imul
into
or
scas
cmp
test
sahf
inc
shll
addb
subb
arpl
out
ja
inc
fwait
adc
ss
mov
das
pop
cmpsl
and
stos
in
inc
and
adcb
lea
cld
out
mov
adc
fwait
sub
cmp
popf
jns
dec
or
icebp
sub
in
xchg
add
xor
dec
subl
lock
scas
std
xchg
pop
fwait
sub
outsl
and
cltd
lret
cmp
cmpb
jb
das
cwtl
loope,pt
call
dec
aam
inc
mov
in
xchg
stos
aaa
mov
stc
arpl
jl
push
push
clts
sahf
dec
ss
jbe
sub
push
hlt
inc
out
xchg
sbb
inc
out
mov
insb
test
mov
or
mov
push
sbbl
sbb
lahf
lock
cmp
mov
lock
adc
insb
aam
cltd
and
cmc
push
mov
ss
cmp
inc
push
jae
pop
divb
sbb
ret
xchg
mov
pop
sbb
dec
sub
mov
mov
xor
mov
out
dec
cli
mov
mov
cmc
adc
mov
cltd
adcl
inc
pop
mov
cmpsl
call
or
iret
mov
fimuls
add
outsl
mov
adc
out
cld
dec
popa
cli
push
outsb
push
and
icebp
xor
inc
lock
fidivrs
in
add
pop
aad
jl
jae
cltd
sbb
pop
inc
lea
cmp
in
mov
mov
popa
into
gs
jp
jbe
adc
fwait
xor
push
xchg
jle
clc
and
mov
fildl
nop
stos
lahf
lock
cmp
arpl
sub
js
scas
inc
loope
xor
in
xchg
out
add
xchg
call
mov
jbe
mov
std
push
frstor
push
ljmp
daa
js
jno
lret
cltd
xchg
lds
cmp
in
lods
fwait
hlt
mov
int
aam
jg
iret
in
arpl
mov
push
sub
fld
fisttpl
xlat
mov
or
scas
das
decb
mov
sti
cwtl
sarb
lea
inc
xor
in
sbb
outsl
ljmp
enter
sbb
mov
popa
push
andl
ficoms
test
dec
push
imul
cli
jne
das
js
push
testb
scas
hlt
pop
test
add
fs
xchg
sbb
scas
mov
jnp
sti
mov
mov
sbb
pop
pop
lret
jb
icebp
daa
fstpt
lods
push
testl
dec
aaa
loop
mov
dec
dec
aas
cmp
mov
xchg
dec
xchg
dec
dec
ficoms
inc
enter
imul
mov
or
mov
push
jecxz
pop
jl
jbe
sub
outsb
stos
test
add
push
orl
popa
das
imul
jnp
mov
mov
insb
sub
push
loope
out
scas
add
lcall
lret
daa
daa
in
outsl
sbb
call
xor
dec
sub
mov
sbb
xor
call
stos
icebp
push
add
mov
fildll
fisttpl
or
lret
loop
add
sub
or
mov
add
int
adc
jl
divl
add
iret
and
pop
push
lock
mov
lahf
pusha
adc
sbb
imul
bound
jl
jmp
or
imul
cwtl
aaa
or
sub
out
stos
mov
bound
mov
jge
mov
mov
jp
popf
push
mov
inc
or
dec
loope
push
fnstenv
js
adc
push
push
mov
lea
fsubs
mov
mov
pushf
scas
fisubl
enter
dec
push
sub
xchg
fidivl
out
hlt
push
pusha
and
cwtl
iret
rorl
subb
lret
mov
bound
xchg
pushf
inc
daa
outsl
icebp
pop
push
pushf
jb
pop
cs
popf
mov
nop
pop
cmp
cmp
push
stos
or
daa
sub
lock
cs
std
xor
test
mov
loop
stos
lcall
cmc
aaa
pop
aas
mov
pop
push
daa
inc
cmp
call
pmullw
sahf
and
mov
sub
inc
rol
sti
dec
rcrl
pusha
data16
test
mov
dec
and
sub
fstpt
lahf
leave
mov
sub
repnz
enter
jp
mov
cmpsb
jg
or
dec
push
sub
jle
xchg
add
das
std
jge
xor
bound
ret
mov
mov
add
fisubrs
xchg
data16
lret
adcl
xchg
nop
ret
popa
and
pop
lock
mov
popa
dec
or
jg
push
mov
xchg
repnz
lahf
pop
cmp
dec
mov
incb
cmc
mov
xor
jl
inc
add
arpl
out
cli
std
aam
es
or
hlt
jns
sti
sub
cmpb
ret
sahf
dec
sbb
insb
xor
sbbb
lahf
sub
cmpsb
mov
loop
pop
stos
insl
mov
push
call
out
lret
jo
jb
lea
or
jle
fnstcw
test
lods
mov
bound
jae
lret
cmpsb
jo
mov
enter
xor
movsl
mov
mov
mov
rclb
movsb
addr16
jbe
push
jecxz
sub
shlb
dec
pushw
push
or
add
stc
je
ds
xor
mov
dec
lock
sbb
adc
dec
je
cld
imul
push
cmpsb
iret
adc
push
push
cmp
inc
repnz
stos
jl
test
jne
leave
mov
lret
in
enter
out
ficompl
xchg
rclb
pop
loopne
es
inc
std
ret
in
jecxz
orl
das
daa
ljmpw
xorb
push
or
mov
rcrl
scas
jle
fcmove
es
mov
stos
jmp
adc
testb
sti
xlat
adc
or
test
dec
test
mov
sahf
xchg
out
push
insb
cli
xchg
inc
jb
lret
pop
push
sbb
and
pop
cmp
fnstenv
jecxz
inc
fldl
mov
cmp
pop
cld
push
loopne
mov
push
xchg
add
mov
pop
sahf
and
movsb
jns
dec
and
test
ret
andl
xchg
add
lods
pop
popl
lods
xchg
add
lods
pop
popl
lahf
xchg
sub
mov
mov
pop
arpl
sbb
cmpsb
cmp
lcall
stc
into
icebp
and
push
and
fldl
out
xor
mov
in
jp
out
mov
mov
fwait
jo
shlb
sbb
pusha
lcall
pop
mov
mov
mov
les
pop
mov
jno
insl
and
pop
cmp
scas
mov
jne
adc
add
repz
jo
gs
movsl
addl
xor
out
mov
mov
dec
add
push
or
int3
pop
testb
in
mov
jae
dec
loope
out
pop
fnstcw
imul
and
push
loope
push
nop
mov
inc
out
push
testb
sbb
js
into
pop
pop
test
jne
out
inc
cld
andb
cmp
mov
fstp
jb
or
sub
test
pop
lahf
push
mov
filds
and
push
xchg
call
jae
clc
mov
add
mov
mov
sub
mov
test
std
jno
data16
dec
in
fwait
jno
sub
hlt
xchg
loopne
jae
addr16
sahf
mov
lods
arpl
hlt
aad
es
cld
xor
and
push
loopne
aas
repnz
mov
mov
pop
pop
xchg
add
shll
xor
fsubs
out
cmp
inc
push
es
fucomi
mov
mov
pop
in
std
xchg
and
outsl
cs
push
jp
or
sub
mov
mov
test
cld
int
shlb
fwait
mov
test
lods
xchg
dec
push
ret
xor
into
xchg
rclb
movsl
add
dec
clc
iret
lret
pop
sub
xchg
add
sahf
adc
orb
pop
mov
adc
adc
cs
int3
frstor
jl
test
scas
adc
cmc
adc
inc
cmp
xor
dec
incl
jb
jb
fwait
mov
scas
xchg
je
adc
mov
jle
movsb
fistl
sti
je
inc
fistl
cmp
mov
xchg
ljmp
dec
shll
sub
lods
cmpsl
inc
sbb
mov
cld
lods
ljmp
jbe
movsl
stos
mov
mov
lods
das
xchg
jae
cmp
xchg
adc
jmp
mov
xlat
imul
sub
adc
sub
jmp
out
and
pop
cld
jb
sub
push
les
inc
js
or
out
iret
pushf
jno
test
notl
clc
adc
out
cmpsl
fcom
inc
sub
imul
xchg
mov
lea
pop
insl
ja
std
cld
sub
ja
jbe
dec
pop
push
pushf
testl
add
scas
das
add
iret
sub
mov
mov
pop
sahf
pop
ret
mov
add
mov
cmp
js
jp
mov
mov
cmp
into
lods
je
insb
push
hlt
mov
mov
je
cmpsb
addr16
insl
movsl
cld
push
lods
out
cmp
test
cmp
iret
lock
scas
mov
cmp
les
xor
mov
mov
xlat
repz
cmpsl
movsb
insl
test
cmp
add
xor
xchg
xchg
sub
xor
movsb
jbe
jl
cmp
pop
mov
cmp
loop
mov
add
rorb
test
push
and
rcll
or
cmp
call
dec
and
mov
jno
jmp
jmp
jge
imul
jno
fnstsw
aam
ds
iret
adc
lcall
push
out
push
out
xchg
sub
mov
shlb
add
shrl
fnstcw
test
ret
mov
and
xchg
mov
inc
pop
sub
fnstenv
out
or
sub
jecxz
sarl
xchg
jno
lds
mov
mov
cmpsl
cmp
push
aam
push
or
jg
jl
xor
mov
aad
scas
pop
jecxz
cmp
lcall
bound
jge
sub
movl
adc
or
call
cli
cmp
sbbl
data16
js,pt
in
and
lods
fs
and
mov
jb
and
jnp
push
mov
jp
stos
mov
sbb
int
jg
or
push
dec
repz
fs
mov
popf
mov
in
rol
aad
mov
inc
fwait
clc
hlt
and
xor
dec
out
push
xor
pop
dec
sbb
mov
pushf
sub
cmp
jbe
cmpsl
lahf
jnp
int
pop
popf
inc
outsb
add
sbb
pop
iret
dec
cltd
jb
pop
and
rcr
jns
xchg
cmp
stos
jne
in
inc
push
add
xchg
pushf
push
mov
int3
out
dec
movsl
jbe
or
mov
loop
mov
ret
pop
stos
push
aam
pop
cmp
sub
xor
mov
jl
in
daa
test
dec
blci
mov
xchg
mov
fldl
fwait
inc
sbb
cmp
pop
mov
lret
xlat
xchg
in
rol
in
mov
data16
xchg
pushf
dec
jecxz
jle
repnz
call
jns
mov
xchg
jb
add
mov
loopne
out
cmp
mov
js
nop
orb
or
jmp
mov
push
jb
cmc
mov
out
xor
frstor
data16
or
or
xchg
icebp
lea
lahf
loop
mov
cli
mov
pop
pop
icebp
jno
jl
daa
jo
cmp
repnz
add
mov
clc
and
outsl
popf
popf
inc
ret
dec
fcoml
lret
cmc
pop
pop
rorb
jmp
cs
xchg
push
repnz
fiaddl
or
adc
push
lret
fwait
mov
rolb
inc
cwtl
add
or
cmp
mov
fwait
gs
popf
and
pop
mov
mov
mov
outsl
sbb
cmp
lods
cmp
loopne
push
add
jl
stos
mov
fistpl
setg
sub
jp
icebp
pop
jnp
push
lcall
aas
lock
jmp
cmc
cli
shl
dec
outsb
adc
xchg
and
sub
test
or
out
xchg
add
xchg
add
ficoms
sti
sbb
mov
insb
ja
shrl
cwtl
orb
rcrb
fisubrs
jno
xchg
sar
jmp
fsubs
sbb
pop
xor
daa
add
sbb
out
xor
mov
icebp
pop
fsubl
adc
adc
cmp
add
and
inc
addb
ljmp
and
lret
iret
sub
and
mov
test
pop
sarb
dec
loop
lods
dec
pop
das
test
subb
sbb
mov
mov
push
pop
testb
lcall
and
and
testl
mov
fidivrs
cld
dec
sbb
push
je
sub
insb
xlat
xchg
pop
or
jge
pop
lahf
and
or
mov
mov
add
mov
xchg
add
xchg
arpl
adc
mov
popf
stc
psubusb
add
nop
test
jecxz
leave
mov
inc
mov
pop
mov
lahf
lcall
sbb
imul
push
mov
out
push
xchg
jns
mov
mov
fcmovnb
leave
adc
cmp
xchg
aad
or
jo
xchg
sahf
push
push
push
dec
in
das
aam
adc
xchg
fs
les
repnz
sub
mov
call
jno
popa
jnp
and
adc
or
or
ja
sbb
dec
data16
inc
mov
adc
insb
lahf
ss
push
movsb
push
data16
enter
in
inc
test
cmc
xor
mov
adcl
mov
outsl
adc
scas
push
jb
cmp
mov
cs
int
add
lret
push
pop
movsl
mov
fsub
mov
movsb
cmp
rorl
add
fwait
sbbl
cli
pushf
cmp
test
xchg
mov
popa
or
adc
add
loop
add
xchg
lods
mov
xchg
outsb
sbb
add
push
push
mov
cmp
stc
pop
hlt
dec
and
enter
xor
mov
pusha
test
sub
pop
and
rcpps
xchg
mov
dec
push
sahf
andb
mov
rorl
std
xchg
rorb
outsb
jl
insb
xchg
sub
adc
test
sub
ret
push
pop
hlt
fisubl
pop
mov
data16
ljmp
push
xor
or
mov
add
pop
jge
inc
push
inc
push
in
push
insb
mov
xor
xchg
and
cmpsl
shll
outsb
sub
push
repz
or
ds
sbb
lcall
mov
xchg
popf
add
std
add
outsl
adc
icebp
mov
mov
lods
jle
ljmp
scas
sar
stos
and
lods
mov
js
ljmp
xchg
aas
test
ss
out
daa
bound
movsb
cmp
pop
add
xor
cmc
mov
push
popa
or
fwait
jbe
rcrl
push
lcall
or
ret
das
shrl
fsubr
ret
outsb
filds
push
jb
hlt
push
xor
stc
and
jge
pop
out
push
scas
push
inc
test
movsl
xchg
mov
repz
cmc
decl
jbe
pcmpeqb
jno
and
fidivl
adc
insl
mov
aas
fstl
fcoml
sub
das
push
mov
pop
lea
inc
or
js
add
xchg
adc
mov
xor
mov
push
sahf
or
and
lea
cmp
leave
xchg
insl
cmc
nop
cmpsb
adc
dec
mov
repnz
add
arpl
jge
xchg
mov
ljmp
mov
push
push
adc
or
imul
adc
xorb
les
push
cmp
xchg
rcr
ficompl
lcall
je
and
pop
jb
aad
push
cmpl
sub
fsub
mov
movsl
or
aad
mov
or
adc
inc
dec
gs
mov
mov
test
jle
outsl
push
xlat
adc
xchg
aas
or
leave
arpl
jle
repnz
sbb
scas
outsb
mov
pop
js
xchg
inc
icebp
xor
pusha
mov
ret
adc
or
inc
push
nop
out
in
repz
aas
mov
movsl
movsb
inc
scas
lea
dec
inc
xchg
jg
pop
cmpsb
push
push
jnp
testl
ret
jmp
pop
insb
cli
aad
inc
mov
jns
jecxz
mov
or
jb
shll
and
inc
and
pop
lods
adc
das
sbb
cli
mov
lock
rorl
push
mov
out
mov
mov
pop
or
stc
nop
add
xchg
pop
push
lods
jmp
sbb
nop
xor
lea
scas
xor
sub
lods
jo
lret
testb
test
outsb
mov
inc
test
jnp
fidivrl
movsl
pusha
adc
cmp
jne
rep
sub
sbb
xor
xchg
roll
scas
sahf
xor
pushl
aam
sub
scas
and
loop
inc
add
xorl
fucomp
cmc
sbb
sarl
pop
push
xchg
dec
inc
icebp
cwtl
cmpl
in
aad
push
outsl
adc
mov
movsb
xlat
push
cwtl
inc
xor
test
std
xchg
in
test
or
popa
enter
mov
push
push
xor
dec
add
xor
xchg
pop
fdivrl
push
mov
jae
mov
xchg
dec
lret
or
int3
daa
add
inc
pop
push
cltd
std
fldt
dec
in
mov
mov
sub
insl
sbb
pop
insb
sub
or
xorb
xor
inc
pop
xor
jb
mov
sbb
jnp
mov
xchg
std
xorl
sar
cmp
xor
push
add
xchg
ret
push
ds
pop
push
or
sbb
repnz
imul
cs
lahf
add
shl
adc
mov
push
mov
daa
dec
push
jno
pop
jp
sbb
and
repnz
jecxz
cwtl
mov
test
xchg
or
jb
mov
jg
clc
lret
cmc
push
cs
mov
ljmp
or
ja
xchg
sub
dec
int3
cmp
test
in
push
mov
add
jo
sbb
or
lods
ljmp
pushf
inc
and
scas
mov
mov
push
push
xchg
jo
test
or
mov
mov
imul
lock
notb
cmp
std
scas
addb
mov
mov
jle
xor
dec
cmp
repnz
in
test
into
xlat
push
push
int3
lret
push
sub
ds
shl
pop
scas
daa
push
inc
scas
int
inc
int3
pop
lods
ss
fnstcw
popf
adc
pop
pop
push
jo
loope
enter
xor
out
notb
fnsave
movsb
jo
dec
bnd
cmp
out
xor
lcall
bound
or
cs
pop
je
mov
pop
and
mov
test
call
jae
or
dec
and
or
xor
adc
or
jnp
push
inc
jp
inc
movsl
push
inc
xchg
pop
and
inc
sahf
cmpsl
repz
xor
addr16
das
jae
in
popf
cmpsl
or
popf
pop
jae
sbb
and
je
add
or
jmp
inc
add
push
cmp
mov
stos
inc
fidivl
dec
jns
out
cmpsl
and
mov
or
xor
and
push
out
andl
orl
or
push
jb
aaa
push
insl
insl
fadd
sub
sub
mov
in
cli
push
in
loop
mov
shlb
rclb
pop
dec
jle
scas
shufps
lret
ror
mov
sub
sub
push
insl
cmc
aaa
lcall
test
rclb
icebp
dec
adc
pusha
lret
xlat
fistps
rorl
push
inc
sub
mov
push
int
je
push
cld
push
int
daa
or
hlt
hlt
leave
fcomi
cmp
das
mov
dec
fnstcw
push
push
leave
data16
fidivrs
mov
cld
sarb
mov
jl
cmpsl
mov
shll
pop
sub
imul
popf
mov
push
std
sbb
int
xor
mov
add
in
gs
test
jb
pop
mov
pop
jg
push
arpl
xor
and
mov
shl
aad
fadd
push
pop
hlt
sub
push
fisubrs
negb
mov
stos
inc
decl
test
cmp
ret
in
or
aad
js
push
testb
iret
mov
idivl
mov
jne
fwait
scas
rorl
mov
push
or
andb
ss
out
xchg
jnp
dec
aaa
push
repnz
jle
or
pop
sub
imul
mov
push
cld
rcrl
mov
leave
dec
in
mov
adc
fstps
fs
ret
cmpsb
ret
or
aam
inc
pushf
cli
inc
push
inc
faddl
daa
arpl
pop
cmp
push
stos
lcall
testb
mov
dec
test
pop
daa
lret
xchg
out
sub
adc
jge
je
dec
sbb
or
in
cmp
js
in
nop
mov
mov
cld
cmp
in
ret
in
pop
mov
mov
repz
lods
pop
sub
das
arpl
sbb
inc
pop
shlb
add
cmp
cmp
std
or
pop
cmp
xchg
aam
fidivl
jg
cwtl
daa
add
and
dec
bound
rcrb
jbe
outsl
pop
jno
stos
scas
mov
lds
mov
in
or
jmp
mov
pop
jo
or
mov
add
daa
in
push
test
and
les
ss
jb
jg
sub
sub
push
xchg
ljmp
dec
xchg
sub
mov
mov
imul
cmp
adc
sbb
mov
or
testl
pushf
fstpt
dec
adc
sbb
arpl
fdivs
cmp
imul
adc
push
pop
jno
push
xor
push
std
addr16
ja
and
inc
test
xor
lods
push
test
mov
mov
mov
sbb
mov
lock
sub
xchg
jle
iret
stos
mov
cli
xor
mov
push
sbb
mov
je
push
outsb
filds
pop
in
inc
jge
cmp
mov
loopne
icebp
push
sub
jecxz
das
dec
fdivl
inc
rolb
push
ljmp
inc
stos
int3
sub
ds
out
mov
scas
mov
cwtl
int
jle
adc
jno
sub
rcll
out
into
and
mov
rcl
add
out
test
sub
and
sbb
out
stc
xchg
aas
dec
in
and
inc
insb
add
lret
sbb
push
xchg
inc
in
std
jb
sbb
inc
mov
push
lods
or
or
pop
xor
xlat
outsb
inc
loop
popa
jo
push
mov
push
mov
arpl
cwtl
and
mov
sub
pop
in
mov
lahf
pop
jmp
es
mov
dec
lahf
add
iret
loop
push
xor
xchg
nop
mov
xor
add
xchg
jo
test
push
and
add
scas
test
xor
fcoml
jbe
mov
mov
lcall
push
shrl
mov
lods
sbb
sti
cmp
icebp
aaa
lock
xor
xchg
jo
int
out
jl
xlat
or
jp
int
mov
das
mov
test
cmp
dec
push
mov
jle
jp
pusha
not
inc
inc
cli
cwtl
mov
mov
cld
aam
lock
xor
dec
pop
mov
adc
cmpsl
pop
es
leave
jo
out
aad
push
push
jle
bswap
cwtl
lods
push
dec
repz
push
outsl
adc
cs
jecxz
in
push
cmp
ljmp
xchg
test
jnp
loopne
in
pop
push
or
adc
mov
cltd
lods
repz
push
mov
je
or
cmc
mov
pusha
adc
test
mov
push
je
cmpsl
cmp
and
leave
decb
adc
lcall
jne
or
lahf
xor
scas
lret
popa
mov
mov
pop
push
enter
push
jno
and
add
in
fdivrs
popl
mov
dec
mov
testb
push
xchg
cmpsl
lahf
outsb
cmpsl
scas
sbb
out
outsb
in
rclb
cltd
xor
adc
dec
in
add
mov
push
rclb
cmpb
test
sbb
or
addl
cli
jno
mov
shll
push
repz
pop
xchg
loopne
stc
adc
sbbb
sbb
push
jp
lahf
and
lcall
jns
xlat
pop
jecxz
movsl
mov
insb
outsb
mov
lea
mov
or
adc
push
mov
popf
cmp
cmp
push
push
adc
adc
mov
repz
insb
aam
outsl
dec
or
jg
or
push
push
call
in
in
dec
xor
or
sahf
clc
jmp
mov
jge
stos
test
xchg
dec
or
lcall
push
mov
sti
lds
out
fs
ljmp
mov
repz
mov
int
cmpsb
loopne
outsb
push
repnz
sbb
push
mov
cmp
fcoms
push
inc
pop
push
xor
inc
int3
sub
js
xchg
cmp
xchg
mov
mov
addr16
or
lcall
lahf
sub
mov
add
cmp
lea
mov
push
loope
test
jnp
cltd
push
push
push
inc
mov
pop
sub
mov
jmp
sbb
add
leave
jnp
jnp
cltd
mov
lret
push
js
push
mov
mov
insb
aam
or
data16
arpl
unpcklps
out
movsl
push
fsubs
pop
in
sub
shll
or
xor
test
int
mov
loopne
shll
mov
inc
call
jb
cmc
or
sbb
movsl
dec
bound
addr16
stc
or
sti
sahf
jp
ja
pop
out
cmp
cmp
or
jb
sub
push
mov
sarb
loopne
push
lahf
lods
aas
push
test
lea
push
sub
mov
inc
call
or
xchg
out
inc
inc
mov
roll
sub
sahf
fidivs
add
pop
mov
xchg
pop
mov
sub
and
hlt
pop
inc
jmp
push
dec
testb
xorl
sbb
mov
dec
mov
jge
mov
jnp
mov
js
testl
ret
insl
pop
mov
and
add
imul
outsb
add
pop
mov
jp
lods
or
dec
jno
cltd
jl
cmpsl
inc
lret
sub
mov
hlt
and
xor
ja
adc
fisubrl
ret
iret
popa
outsl
adc
ss
xchg
in
or
faddp
arpl
xor
test
out
cmp
cmp
push
js
lret
or
hlt
xchg
daa
mov
pop
jecxz
popf
xor
in
cmp
aam
gs
leave
arpl
mov
gs
insb
sub
sbb
sbb
cmp
loop
cmc
mov
adc
in
xlat
mov
loopne
jge
push
mov
subb
aas
xchg
add
cmc
dec
lods
mov
ret
inc
fcomi
push
sbb
inc
lcall
push
jge
inc
mov
jnp
scas
iret
mov
push
bound
add
sti
jp
lret
xor
add
arpl
lods
push
ljmp
mov
jge
test
dec
push
xor
aad
pop
and
int3
cmp
outsb
subb
sub
addl
push
sahf
push
or
add
test
mov
in
xor
leave
and
je
xchg
stos
sub
dec
xor
dec
es
sbb
stc
movsb
pop
mov
loopne
es
xor
cltd
std
mov
jg
jle
lret
aas
loop
or
addr16
pop
jecxz
scas
mov
mov
hlt
outsl
jge
xchg
mov
jo
lcall
inc
arpl
movsb
out
test
dec
jae
mov
adc
mov
push
out
xchg
push
inc
jae
xor
out
pop
pop
ljmp
xchg
dec
sti
or
sbb
jecxz
dec
ljmp
loopne
cld
inc
in
pop
sbb
xchg
jmp
in
mov
mov
aaa
cmp
adc
pusha
jnp
sbb
outsl
fbld
enter
dec
imul
movsl
stc
ja
sub
icebp
movsl
push
pop
mov
pusha
mov
pop
jnp
inc
dec
cmp
pop
push
outsl
xchg
mov
imul
js
sbb
pop
cmp
cmp
data16
mov
inc
out
jae
pop
lret
ljmp
nop
xor
mov
ret
fbstp
dec
cmp
jae
mov
loop
and
stos
mov
push
sub
gs
cmp
les
inc
pop
ficomps
sarl
dec
xor
adc
jp
leave
xor
inc
adcb
mov
sahf
imul
pop
aad
dec
repnz
cmp
pusha
jno
jb
or
adc
jbe
jae
xor
pop
mov
jns
push
lcall
outsb
and
outsl
nop
lods
fbstp
sbb
enter
stos
nop
inc
mov
rol
movsb
mov
out
push
jle
push
xchg
xor
pushf
and
mov
cltd
jo
pop
out
xchg
sbb
testl
lcall
lret
inc
scas
hlt
inc
push
data16
adc
jecxz
jno
pop
mov
push
fs
inc
pop
xchg
push
in
pop
adc
or
adc
inc
cld
dec
or
inc
cli
cmp
pop
repnz
popa
mov
pop
movsb
int3
xor
sahf
push
in
mov
adc
enter
inc
int3
mov
jle
pop
push
fs
test
imul
ja
lahf
push
mov
sbb
and
jne
or
adc
test
nop
imul
je
sahf
push
andb
loope
mov
cs
movsl
sbb
test
xchg
test
push
xchg
out
fwait
es
inc
out
test
in
xchg
pop
out
mov
mov
lods
push
push
cmp
jl
pop
insl
or
aaa
jbe
sub
mov
dec
jno
dec
mov
push
sub
dec
fs
in
xchg
imul
xor
stc
and
jl
jge
cmp
inc
inc
ds
or
xchg
decb
cmpsb
das
mov
outsb
jp
es
lock
inc
xlat
test
int
pop
xchg
imul
inc
nop
add
ret
popf
cli
js
mov
ret
bound
ret
fs
cli
mov
pop
inc
lds
sti
movsb
xchg
lods
fdivrl
imul
cmpsl
mov
divb
adc
clc
push
cmp
roll
and
and
std
and
add
add
les
and
mov
fistpl
cmp
iret
cmp
fwait
loopne,pn
loopne
mov
in
fildl
inc
fwait
mov
loope
push
sub
mov
fwait
pop
fnstsw
fdivl
test
add
jbe
push
cmp
lcall
and
sbb
pop
push
andb
and
cmc
xor
xlat
xchg
test
xchg
sub
xor
in
and
cld
outsl
ffree
dec
xlat
pop
jns
dec
lods
lcall
repnz
adc
adc
and
sti
jnp
sub
inc
fsubl
jbe
pop
mov
ret
ljmp
push
mov
mov
pop
dec
add
dec
les
and
push
mov
pushf
repnz
insb
in
sbb
or
popf
lea
sub
push
sub
pop
push
jno
mov
jle
andl
dec
xchg
arpl
cmp
push
ljmp
lcall
push
and
popa
dec
and
cmp
add
call
int3
test
fwait
adc
push
data16
adc
adcb
aas
test
cmc
adc
adc
push
add
int3
jg
insl
jge
bound
xchg
rolb
xchg
cltd
call
xor
mov
dec
rcr
lods
mov
fstpl
mov
fdivrl
call
lds
jne
rclb
xchg
pop
in
mov
lods
fsubrs
test
aaa
pop
negl
xchg
jl
sub
push
sbb
and
pop
test
dec
mov
lahf
jb
push
xchg
out
mov
fwait
mov
add
push
cmc
mov
cli
call
mov
ficomps
pop
cmp
adc
add
ja
push
add
ror
push
mov
and
pop
sbb
sub
std
inc
stos
fstps
repz
fsubr
mov
add
and
out
inc
add
lea
sub
fadds
inc
bound
inc
or
xor
xchg
pop
pop
xor
mov
and
je
cs
push
lods
xor
and
jmp
pop
in
loop
popa
add
clc
add
out
test
cli
sub
js
test
shrb
jbe
stos
push
inc
jbe
and
fdivl
mov
lahf
xor
es
add
and
xlat
pop
je
inc
cltd
jg
cmp
xchg
dec
pop
int3
mov
add
out
lods
stos
addr16
stos
add
stc
lret
inc
cmpsl
jns,pt
xchg
jl
fiadds
cmpsb
shlb
jecxz
or
mov
jnp
or
sbb
xchg
pop
dec
add
and
cmp
jge
adc
and
outsl
push
mov
inc
push
rorb
inc
add
pop
ljmp
call
lods
sbb
pop
pop
adc
in
cmp
cmc
mov
cmp
ja
push
loopne
lds
mov
xchg
repnz
lcall
or
in
incb
pop
jp
insb
stos
add
xchg
pop
sbb
fdivrl
push
loope
ja
adc
mov
or
add
pop
cwtl
cli
aas
cmpsb
sub
fdivrl
outsl
daa
cmc
adc
fisubrl
shlb
add
popa
xor
and
jmp
cmp
mov
inc
mov
and
aas
adc
adc
lcall
leave
cmp
sbb
jmp
jp
xor
jp
adc
sub
jnp
and
fwait
movsb
bound
jl
out
iret
test
xchg
pop
aam
pop
lahf
mov
dec
push
js
xor
cmp
dec
enter
repz
sub
sub
fwait
xchg
or
nop
negb
cmp
cltd
movsl
xchg
stc
sub
pop
jecxz
aad
cwtl
sbb
mov
cmc
mov
mov
ror
pushf
jg
lock
push
popf
inc
lahf
push
fcoml
adcb
dec
mov
mov
mov
or
sub
fdivl
or
ja
mov
nop
out
js
pop
sbb
or
xor
cmp
jle
addl
icebp
sbb
cwtl
ja
out
xchg
and
inc
sbb
repz
push
jp
mov
loopne
adc
add
imul
and
ja
add
pop
insl
and
loope
or
mov
icebp
add
aas
popf
sbb
push
dec
imul
mov
cmpsb
adc
aad
mov
jecxz
test
sub
and
lea
xor
push
or
mov
pop
out
cmp
lret
call
cmpsl
mov
pop
cmp
rolb
aas
dec
nop
lea
jmp
sti
inc
and
sbb
imul
inc
popf
outsl
jmp
leave
inc
jo
xlat
popa
ja
ret
test
clc
jp
int
lret
cmpsb
pop
outsb
fsubrs
ret
ret
pop
insb
jno
pop
nop
xchg
rcll
mov
fcompl
sti
fdivs
and
cmpsl
pop
mov
loope
call
movsl
jno
js
sbb
add
pop
test
outsb
scas
into
das
xor
push
xor
int3
inc
aaa
clc
stos
push
inc
mov
out
cltd
push
das
mov
sub
xor
jl
sub
insb
xchg
stc
or
mov
call
sub
js
loopne
and
push
mov
or
or
ret
pusha
or
mov
leave
pop
or
push
jle
jecxz
xor
lea
push
sbb
lock
pop
addr16
cmp
jno
xchg
pop
rcrb
iret
daa
aaa
movsb
cmp
jns
popa
mov
out
xor
sbb
cs
jno
mov
je
push
test
jmp
xor
dec
push
mov
movsl
popa
xor
ds
jae
out
shl
sub
out
sub
sub
xchg
push
xchg
insl
loopne
xor
fwait
repnz
jg
mov
pusha
sub
lock
call
mov
ljmp
nop
mov
mov
fwait
roll
loope
add
loop
and
mov
mov
ja
or
or
inc
dec
pop
dec
rcll
mov
fld
pop
or
cmp
lahf
daa
ljmp
dec
in
cmp
xor
mov
out
stos
jae
mov
cwtl
inc
ficomps
ss
pushf
jb
iret
ss
adc
xchg
sbb
push
sbbl
inc
mov
mov
xchg
adc
inc
jp
sar
xor
lret
xor
inc
and
sub
sub
lea
dec
dec
cmc
scas
xchg
xchg
cs
cwtl
cmc
jo
in
mov
pop
dec
pop
xor
xor
shl
add
mov
cmp
sbb
jo
andl
add
lods
xchg
mov
mov
inc
adc
leave
pop
cmp
out
xchg
add
inc
sbb
xor
in
test
mov
sti
add
call
inc
clc
clc
jl
inc
push
push
jo
ffree
loope
sbb
lret
aas
fsubrl
call
in
xchg
push
aaa
adc
leave
sbb
in
popf
add
loop
push
es
mov
fisubs
inc
addl
push
mov
ss
sbb
loopne
data16
and
jg
arpl
lods
inc
add
pusha
mov
aad
push
icebp
pop
xchg
and
outsl
testl
jb
push
test
xrelease
mov
sbb
mov
mov
mov
in
loope
and
jae
aas
jnp
pop
mov
inc
jo
lea
fs
sbb
xor
jbe
repz
push
mov
push
in
mov
je
ficoml
mov
andb
jge
adc
sub
or
inc
push
or
lds
jmp
repz
nop
xor
push
shll
out
xchg
xlat
pop
xor
rcll
cmp
call
mov
sbb
aam
aam
repz
cs
fwait
xor
and
bound
push
les
xchg
jns
jnp
push
outsb
or
or
cmpsl
cltd
push
add
mov
push
and
iret
lahf
jge
loope
fcmovnu
jge
paddw
mov
aam
inc
cmpl
call
jmp
mov
jb
lods
aaa
mov
pusha
icebp
mov
xchg
sub
clc
div
jl
push
andb
and
adc
pop
lcall
dec
pop
call
cmp
nop
lods
pop
mov
repz
inc
pop
mov
mov
lret
sti
rolb
jp
mov
mov
ret
aam
xor
int
lahf
fidivl
movsb
in
cwtl
pop
jle
xor
mov
and
and
ljmp
and
in
jns
push
inc
call
ret
cltd
popa
movb
incl
push
pushf
insb
aaa
jge
lods
or
cmp
pop
imul
sar
inc
mov
aad
into
xchg
xor
sbb
xchg
in
mov
and
lret
jb
cmp
clc
scas
mov
dec
push
jnp
int3
call
add
push
lods
mov
es
notl
mov
ljmp
mov
test
or
dec
out
jnp
insl
dec
ljmp
lcall
mov
inc
and
or
inc
push
cmp
dec
shll
cmp
cmp
cld
add
aaa
iret
mov
cmp
lds
mov
xchg
jmp
iret
jns
xchg
mov
adc
or
cmp
mov
bound
sbb
xchg
jp
mov
sbb
add
insb
xchg
inc
fidivl
test
mov
jecxz
mov
lods
push
pop
stos
cmp
xor
popa
fwait
adc
fiaddl
pop
mov
mov
pop
xor
jns
out
push
or
fisubs
fdivrl
aas
icebp
inc
pop
pop
cmp
ds
imul
sbb
movsb
or
pop
inc
push
mulb
jecxz
xchg
aad
roll
mov
icebp
lret
mov
mov
arpl
arpl
mov
aam
jmp
stos
mov
sbb
ds
fwait
cs
ljmp
xor
or
repnz
add
dec
xor
push
push
lea
mov
xchg
adc
xor
adc
cmp
into
lahf
addr16
in
jg
bound
add
mov
pusha
ljmp
sarb
sub
jmp
pop
cmc
cmpsb
ret
aas
arpl
cmp
les
fstl
mov
dec
hlt
sub
test
mov
xchg
xlat
adc
push
es
addb
sub
divl
fnstcw
add
cmp
adc
ret
pop
sub
mov
bound
mov
cwtl
aaa
mov
add
jnp
lret
pop
cmpsb
push
outsb
pop
inc
loop
push
cmc
mov
or
jg
mov
pop
cmp
mov
cld
jo
sub
dec
movsb
dec
setge
call
pop
mov
inc
sub
pop
negb
xchg
movsl
cld
push
pop
loopne
pop
cli
xor
sub
adcb
test
and
and
pushf
dec
xor
push
jb
mov
cmp
or
ret
xor
lret
dec
out
dec
addr16
push
mov
addr16
insl
int
dec
das
hlt
test
inc
jns
push
cmp
push
divl
or
jp
xchg
pop
mov
jmp
cmp
xor
sbb
sub
or
mull
xor
in
xchg
dec
lea
cmpsb
rorl
stc
cmp
adc
ljmp
sub
xchg
lock
jge
jne
mov
push
das
push
adc
cmp
mov
dec
mov
movsl
lds
mov
fldenv
add
test
shr
sbb
lea
nop
mov
aam
cmpsb
sbbb
add
fs
fidivl
in
xchg
call
ljmp
cs
xor
pop
dec
repz
clc
insl
jecxz
xchg
push
mov
dec
fistpl
xor
dec
push
jnp
and
stc
inc
les
pop
popa
fcoml
addr16
mov
scas
shll
lds
jo
loopne
ss
xchg
cmpl
sbb
pop
sub
push
jg
fldcw
xchg
pop
scas
out
mov
push
mov
cmp
cmpsb
cmpsb
scas
xor
jae
jno
sub
mov
out
adc
mov
data16
adc
add
cmp
inc
jo
cmpl
aas
aas
out
fdivrs
pop
aad
aam
adc
nop
or
out
in
into
pop
sub
push
jmp
jmp
aaa
insb
dec
repnz
lods
inc
push
push
pushf
mov
cld
pushf
subb
dec
pop
shll
enter
clc
fldenv
adc
test
fcomp
addr16
lods
push
lahf
test
mov
outsb
mov
xlat
mov
push
mov
stc
nop
push
arpl
add
mov
add
test
std
jb
in
jp
mov
pop
lock
sub
cmp
dec
or
stc
int3
out
or
mov
punpcklbw
xchg
hlt
sub
scas
mov
sbb
dec
outsb
daa
loope
jnp
sub
pop
mov
cltd
mov
inc
loope
jp
iret
iret
cmpsb
jnp
add
dec
mov
mov
sahf
or
movq
cmp
pop
mov
jbe
out
addr16
imul
repnz
add
lea
dec
mov
mov
popa
pop
movsl
popf
arpl
sbb
int3
inc
test
in
imul
cld
and
scas
fs
orl
push
pop
push
inc
adc
or
popf
pop
mov
fidivl
mov
stc
inc
cmpsl
inc
xchg
fidivs
jmp
add
stc
sar
push
sub
cs
cli
enter
and
pop
cmpsl
push
xor
repz
mov
push
or
sbb
mov
icebp
rcll
sbb
xchg
inc
out
call
dec
lea
jp
or
orb
sub
fwait
push
jmp
jecxz
out
clc
mov
mov
xor
lea
loopne
jb
ja
dec
test
cmp
inc
jge
fdivrl
test
cmc
mov
xchg
shrl
mov
repz
sbb
jmp
aaa
inc
cmpl
pusha
ljmp
add
fisttpl
rcr
mov
pop
aam
loop
jno
dec
imulb
xchg
add
sub
movsl
cmp
adc
add
mov
mov
push
pop
cmp
or
pop
fnstsw
xorb
out
push
in
lea
add
push
lea
cmc
pop
mov
push
repz
test
pop
jle
jae
adc
sbb
outsb
jg
or
into
enter
arpl
push
outsl
sbb
rolb
jno
out
movb
mov
sbb
leave
popf
divb
rorb
sbb
jle
inc
mov
shr
cltd
dec
lock
into
or
sub
push
or
in
and
mov
fwait
sbb
add
stos
sub
mov
pusha
ja
arpl
notl
xchg
lret
les
pop
cmp
addb
mov
jnp
xchg
mov
movsl
sbb
es
fisubrs
jmp
pop
cltd
mov
or
es
pop
mov
in
pop
cmp
jge
jle
movsb
aaa
jle
mov
arpl
push
popl
inc
dec
xchg
mov
push
pop
outsl
outsb
push
inc
ret
push
add
je
dec
divps
test
push
call
adc
xor
jmp
xor
shr
shll
dec
faddl
dec
ss
push
pop
icebp
inc
cmp
loopne
pop
adc
mov
or
jbe
and
mov
inc
rolb
mov
jnp
xor
cmp
inc
sbb
inc
int3
push
sti
inc
out
aaa
ret
popf
stc
imul
cmp
mov
dec
cmpsl
out
idiv
jle
sub
hlt
inc
pop
ret
jae
mov
test
add
push
in
pop
scas
push
adc
jl
mov
fbstp
jecxz
jb
sub
jb
add
adc
inc
cltd
data16
je
adc
push
jmp
add
mov
aad
ret
shl
call
inc
addl
outsl
loop
insb
pop
adc
pop
in
nop
repnz
in
stos
mov
mov
mov
mov
in
mov
jnp
pop
xchg
jnp
lcall
sbb
mov
xchg
popf
lods
test
dec
out
aam
jae
notl
mov
inc
insl
jbe
test
xchg
ret
sbb
and
pop
or
jno
test
and
pop
or
fs
adc
in
add
lret
xlat
mov
fldt
lret
xorb
mov
je
or
xchg
cmpl
icebp
insl
pop
sbb
fldt
push
sahf
aaa
movsb
shll
je
xor
xchg
icebp
push
xlat
sub
and
push
sub
jmp
fldenv
enter
jbe
add
adc
fcompl
fdivp
and
stc
nop
push
inc
int3
jle
loope
mov
lahf
sbb
bound
jne
push
sub
jns
mov
sub
daa
mov
mov
into
aam
cmp
or
test
sbb
or
js
mov
ja
inc
add
xchg
mov
adc
cmpsb
mov
inc
fldl
fs
test
rolb
rol
xor
andl
test
pushl
lods
in
dec
jne
cltd
mov
mov
add
cltd
test
shl
inc
or
adc
cmp
xchg
pop
cmp
test
shufps
or
repnz
loopne
dec
and
pushf
nop
mov
mov
lods
sub
sub
pop
jle
add
jecxz
inc
test
cmpsl
or
aas
push
and
sub
pop
xchg
xlat
jecxz
aad
in
ds
lcall
adc
addr16
xchg
cmp
cltd
cmpsl
pushl
adc
xchg
sub
pop
loop
mov
xchg
decl
and
or
cmp
sbbl
insl
std
pop
mov
push
sub
fdivrp
xchg
push
inc
dec
ljmp
push
stos
lea
sub
incb
rol
push
mov
int3
inc
jecxz
pop
fbstp
add
mov
aad
call
mov
jne
jbe
mov
stos
ja
push
cmp
push
repz
ret
jae
frstor
ja
adc
stos
pop
mov
gs
call
pop
imul
add
movsb
jmp
or
jns
int3
push
mov
fisubrl
push
imulb
scas
enter
dec
ds
in
aam
ljmp
das
ss
inc
daa
dec
dec
pop
jge
rcrl
lcall
pop
add
xor
mov
sbb
or
push
cltd
push
jae
jo
mulb
or
test
leave
fs
int
pop
ss
push
call
sti
sbb
xor
es
cmp
cmp
mov
xor
pop
xor
jmp
ret
out
test
mov
push
std
lea
das
or
sbb
scas
ljmp
pop
mov
mov
xchg
or
scas
push
inc
jge
in
jae
pop
mov
mov
cmpsb
cmp
add
adc
or
adc
mov
or
dec
outsb
adc
fsts
push
jne
lea
lahf
xor
mov
mov
in
jg
mov
aaa
pop
sahf
pusha
rorl
jl
jnp
pop
inc
rolb
xchg
pop
popf
cmp
mov
repz
push
stos
sub
sub
and
clc
out
rolb
andb
push
lcall
popa
add
mov
std
loopne
flds
shlb
rclb
sub
dec
mov
inc
inc
movsl
adc
fists
cmp
dec
mov
fsubl
xor
mov
sub
fldpi
cmp
shlb
mov
inc
jmp
inc
lahf
and
sahf
xor
js
sub
sbb
movsb
pop
sbb
push
loop
jne
repz
iret
pop
sbb
adcl
mov
notl
xchg
adc
and
pop
or
ret
sti
out
jle
imul
fwait
xor
mov
push
cwtl
xor
iret
xlat
int
sbb
test
lcall
loop
aaa
sbb
popa
push
fisubrs
outsb
ljmp
dec
stc
add
rorl
or
rorl
repz
mov
dec
and
fsubrs
push
jnp
sti
jbe
movsl
mov
lret
and
mov
add
inc
dec
mov
ja
mov
mov
add
stos
cmp
mov
lahf
jb
add
and
repz
scas
cmp
les
push
ret
fidivrs
add
ja
pusha
fwait
es
andl
stos
sub
fildl
je
dec
pop
js
pop
pop
cmp
and
xchg
mov
mov
out
sbb
push
pop
popa
pop
ret
loopne
enter
sub
mov
call
sbb
arpl
push
jp
rorl
mov
out
loope
xchg
cld
mov
push
adc
cmp
sahf
mov
pop
popa
cmp
jecxz
stc
pop
xor
mov
out
hlt
sbb
lea
jecxz
sbb
and
stos
mov
in
inc
jo
jae
ja
and
sbb
add
adc
xor
adc
mov
ret
das
int3
mov
xor
loopne
rcrl
imul
jl
jmp
add
xchg
pusha
mov
popf
test
adc
fisubrl
mov
ret
hlt
push
adc
jb
inc
jbe
out
setle
dec
rorb
xchg
mov
sub
fnstenv
lea
incl
pop
inc
xchg
imul
sbb
aas
enter
mov
arpl
inc
not
cli
jge
mov
jb
inc
sbb
movsb
test
jecxz
lcall
cmp
fs
and
test
mov
jne
xchg
inc
xchg
fmuls
jno
int
jp
xor
xchg
push
movsb
lcall
addr16
jmp
jae
out
xchg
or
out
enter
sub
mov
or
inc
shlb
mov
pushf
xchg
dec
loope
call
push
insb
jmp
mov
inc
inc
incb
xor
push
inc
add
push
movsb
ret
int
inc
push
ja
repz
mov
xor
out
stos
outsb
cmp
iret
and
imul
mov
gs
aad
into
pop
addr16
xchg
xorb
sarb
daa
pop
sbb
sti
dec
mov
loop
hlt
inc
lods
ficomps
mov
push
dec
out
sarb
fisttpl
xor
add
scas
sub
xchg
dec
sub
sbb
xchg
add
scas
and
and
bound
aaa
or
mov
adc
inc
jo
stos
mov
scas
in
and
notb
lcall
sbb
rol
int3
repz
adc
popa
stc
jecxz
inc
sub
iret
roll
or
fmulp
sub
xchg
jg
imul
mov
sbb
scas
lahf
stos
nop
xchg
shrl
leave
fxch
inc
cltd
xchg
jb
cmpsl
sub
mov
ja
test
fldt
fadds
xor
das
and
shlb
pop
xchg
in
xor
sub
fwait
and
and
mov
imul
and
lahf
stos
aaa
dec
push
inc
in
les
rolb
adc
dec
pop
insl
loopne
sbb
xor
xor
dec
mov
xchg
sti
ja
les
ja
shrb
jl
inc
push
je
mov
cli
xchg
stos
inc
movsb
cli
ja
outsl
dec
enter
sarl
stc
sahf
dec
sti
inc
cmc
mov
xorb
push
addr16
pop
mov
dec
sub
xor
scas
push
push
and
out
mov
xchg
mov
lods
dec
out
add
xchg
fld
test
mov
xor
jo
cmp
dec
push
mov
push
mov
push
inc
jp
xor
mov
dec
mov
or
xlat
pop
sbb
xlat
or
cmp
mov
popf
stc
add
cmp
lds
sub
fsubs
pop
jae
add
push
pushf
stos
adc
and
mov
pop
fidivl
push
sub
push
fdivs
imul
in
or
bound
mov
jne
es
and
je
cmc
daa
xchg
repnz
icebp
sti
lds
and
adc
cmp
mov
inc
jecxz
cmp
fbld
in
dec
adc
pop
sar
adc
rcl
pop
mov
js
das
stos
and
cwtl
je
dec
into
out
loop
inc
adc
jb
movsl
rcrb
aam
adc
jo
and
cmp
fs
mov
lcall
sub
cmp
imul
testl
cmp
subl
mov
fisubrs
sahf
mov
and
mov
inc
inc
cmpsl
inc
lods
in
xchg
rcrb
mov
mov
xchg
cmp
xchg
notl
pop
lret
add
adc
mov
jmp
lret
arpl
xchg
mov
cli
xor
xchg
adc
subb
add
in
pop
cmp
xacquire
cwtl
jae
mov
mov
sub
mov
aas
popf
mov
mov
push
icebp
in
push
dec
inc
cmp
pop
mov
adcb
jne
and
jne
cmpsb
xchg
mov
xorb
fs
pop
or
ds
imul
push
sub
fistps
mov
mov
loopne
mov
pop
push
test
sbb
cpuid
xor
call
neg
mov
sbb
jno
imul
nop
repz
jp
mov
mov
push
cmp
faddl
cmpsb
cmp
int3
test
or
test
mov
cmc
int3
mov
add
cwtl
test
push
xor
push
push
shll
push
loopne
sbb
adc
and
xor
adc
or
shl
mov
pop
clc
sub
dec
pop
iret
leave
jl
jne
mov
roll
daa
pop
pop
test
push
stc
add
add
sub
xchg
pop
inc
add
dec
mov
jno
pop
fdivrs
loop
add
pop
jbe
sub
dec
fisttpll
iret
sbb
xchg
sub
je
shlb
addr16
push
cmpsb
xchg
push
popf
xor
movsb
jo
add
lcall
sub
xor
and
inc
adc
in
dec
sbb
adc
xchg
scas
testl
cmpsb
cmp
mov
shl
repz
in
sbb
push
data16
out
xchg
daa
insb
cld
daa
pop
repnz
sub
mov
lea
jmp
pushf
sub
sub
adc
icebp
cmp
push
jg
adc
jge
hlt
fiadds
dec
cwtl
push
sub
lods
insb
cmp
lret
cmp
int3
fs
lea
stos
push
repz
ljmp
js
xchg
pop
xor
popf
mov
push
mov
jg
mov
hlt
sbb
stos
jmp
jmp
cmp
stc
sub
loopne
sub
addb
shll
sti
mov
adc
push
bound
push
mov
and
adc
sbb
push
stos
dec
lea
out
scas
or
add
xlat
sub
adc
nop
adc
mov
loop
js
jp
xchg
popf
and
sbb
mov
call
dec
cmp
subb
cltd
test
outsl
rol
mov
loop
shlb
xlat
cmpsb
dec
out
and
cli
push
sub
dec
mov
push
mov
fwait
mov
mov
jns
adc
lret
dec
and
or
pop
lea
pop
adc
xorl
rol
pop
ret
fldenv
push
sub
movsb
jl
test
lods
inc
inc
pop
fldt
inc
push
fisttpll
adc
stos
insb
mov
inc
push
shlb
jo
xchg
sub
jns
mov
rcrl
subb
pop
ficoms
xor
mov
incl
adc
jo
int
jp
mov
and
lods
lods
push
mov
push
int
je
mov
in
cwtl
je
cltd
iret
cmp
inc
and
data16
xor
dec
sbbb
popl
sarb
lcall
inc
mov
scas
sarb
mov
pushf
loopne
rclb
loopne
cmp
in
mov
inc
jnp
jbe
movsb
out
out
mov
cmpsb
jne
lock
lahf
and
xchg
push
int
mov
into
jns
lods
outsl
mov
mov
jg
dec
aam
push
ja
addr16
dec
hlt
cmp
pop
ds
cmp
push
mov
cwtl
shl
psadbw
xor
test
sub
cmp
push
add
ljmp
mov
movsb
rcrb
nop
fidivrs
popa
cmp
daa
pop
jb
inc
mov
add
popa
lahf
cmp
stos
mov
fldenv
sbb
pusha
cmp
bound
pop
aaa
fwait
aas
adc
dec
mov
lock
sbb
gs
push
imul
push
jge
sbb
lahf
pusha
add
fnsave
test
jae
mov
mov
xor
adc
orl
xchg
mov
into
addr16
jmp
imul
add
sub
fstl
lret
mov
xchg
dec
les
xchg
dec
in
testl
pop
ljmp
jmp
xchg
fiaddl
shl
adc
or
sbb
in
in
enter
xor
popf
ljmp
and
mov
imul
int3
adcb
dec
mov
add
adc
enter
ficoml
cmc
es
lret
leave
xchg
sbb
push
fisubl
inc
xor
dec
xchg
dec
pop
xchg
mov
xor
rorl
nop
and
leavew
add
push
xchg
sbb
test
jecxz
dec
pop
dec
jbe
out
imul
mov
pop
lods
or
leave
arpl
xor
shll
ljmp
adc
inc
leave
mov
cli
xor
mov
inc
stc
cmp
pop
cmpsl
adc
push
push
push
roll
and
xor
stos
xchg
loope
cli
scas
fwait
mov
stos
and
push
push
notl
rol
dec
adc
jb
add
mov
clc
iret
insl
jo
mov
sahf
inc
and
sbb
repnz
or
repz
sub
add
add
inc
out
jp
mov
push
xor
aam
sbb
imul
push
inc
mov
ret
repz
stos
mov
clc
sbb
lds
repnz
lods
insl
jg
xor
jnp
fdivl
lods
loope
scas
sub
sub
les
jp
out
sub
in
clc
push
out
psubq
pop
mov
cmp
cmp
loope
repz
cmp
pop
cmpsb
mov
dec
inc
bound
xor
or
int
clc
fs
adc
lock
or
rcrl
sbb
jmp
sub
xchg
test
hlt
arpl
shrl
jmp
jge
push
cwtl
mov
pop
adcb
mov
xchg
pop
and
in
xchg
sbb
jns
mov
pushf
insb
ss
adc
fucom
mov
mov
mov
aas
std
shl
add
or
mov
ret
fisubl
repnz
or
lods
mov
inc
xor
pusha
mov
mov
push
xor
pop
dec
dec
fnop
out
cmp
dec
stos
jno
push
mov
add
outsl
jns
lahf
fcmovne
clc
fnstsw
jae
in
xchg
iret
std
lods
adc
lcall
sbb
mov
leave
cmp
mov
leave
lods
jge
dec
and
adc
bound
data16
jg
scas
dec
fildl
hlt
mov
mov
fsubrs
lea
xchg
test
push
pop
lock
lahf
adc
jle
jmp
lret
lret
xor
xor
xor
mov
dec
lahf
xchg
mov
lcall
pop
jg
into
enter
in
mov
jo
iret
sbb
push
push
stc
and
inc
push
std
adc
nop
lcall
scas
rcrb
jno
mov
movsb
xchg
adc
sbb
pop
adc
add
icebp
nop
cmpsb
add
mov
xchg
cmp
lock
data16
mov
loopne
mov
add
and
pop
popf
aas
pop
dec
mov
std
out
sbb
repz
adc
push
pop
imulb
sub
repz
and
loope
pop
bnd
or
mov
pop
lock
jl
daa
sub
xchg
out
jo
xor
pop
mov
lret
cmp
pop
fdivl
cmpsl
lret
sbb
pop
loopne
inc
mov
mov
rcl
xchg
jp
add
cwtl
mov
mov
jb
jne
pusha
ret
xor
shlb
shrl
lcall
push
inc
insl
outsb
xchg
sbb
mov
outsl
dec
pop
xlat
sub
mov
mov
mov
outsl
adc
adc
push
pop
fwait
or
xor
mov
or
lret
add
xchg
push
cmp
jecxz
push
ljmp
insb
lea
stos
outsl
and
or
pop
out
outsl
push
lea
jb
sbb
mov
and
xchg
xor
inc
jne
inc
cmp
push
loop
pop
cmp
nop
jmp
mov
popf
sbb
stos
in
shl
add
sub
or
or
fcmovb
mov
jle
outsl
dec
push
adc
mov
cli
lcall
mov
ljmp
test
pop
lret
mov
pop
cmp
cs
inc
pop
pop
les
not
rorb
mov
pop
sbb
clc
mov
fistl
insl
mov
add
xor
repnz
lcall
into
mov
or
mov
sahf
iret
gs
fisttpl
sbb
jecxz
mov
xchg
addb
cmp
mov
mov
rorl
mov
out
and
sbb
aaa
pop
pop
neg
inc
or
mov
add
xor
and
jl
jae
icebp
pop
jmp
rcl
add
pop
hlt
or
popf
dec
adc
fstpl
lahf
push
pop
cmp
test
and
pop
cld
adc
push
lds
ret
and
add
test
out
mov
mov
dec
mov
pop
xchg
adc
rclb
scas
nop
jns
in
jae
pushl
sbb
notb
jns
mov
mov
mov
pop
jae
mov
pushf
add
ja
cmp
cmp
fidivrl
scas
std
int3
dec
outsl
dec
mov
dec
pop
fldt
mov
mov
and
adc
out
push
push
popf
push
dec
mov
aad
popf
lods
aaa
dec
aas
inc
cmp
jmp
fs
sti
in
pop
and
lea
or
jle
das
ret
leave
pusha
jg
dec
push
mov
fwait
and
jo
jb
out
jge
je
jg
mov
movsb
dec
ljmp
sub
or
in
cmp
jl
movsb
pusha
add
out
fwait
cld
dec
in
xchg
pop
push
in
jmp
mov
gs
std
clc
pop
fidivs
int3
xor
inc
mov
mov
repz
icebp
add
inc
sub
mov
xor
inc
push
in
cltd
inc
dec
push
fsubrs
decl
adc
dec
cli
ss
mov
push
inc
add
mov
movl
cmpsl
rorl
ja
into
rcrl
jecxz
sbb
lock
es
dec
sar
mov
sub
rol
inc
out
fnsave
ror
mov
ficoml
lods
xchg
sub
sahf
dec
dec
xchg
mov
xchg
popa
fwait
cmp
dec
sbbb
scas
push
add
xchg
sub
sahf
xor
rcr
ljmp
dec
pop
cmp
cmp
pop
cli
dec
pop
imul
push
cmp
push
rcrl
push
sub
cli
xchg
dec
fimull
cmpxchg
rcl
xchg
fsubrp
repnz
call
xchg
lret
cld
divb
push
xor
mov
mov
test
fstl
nop
out
mov
xor
jmp
push
dec
xlat
jns
dec
cld
in
lods
sub
push
in
and
lock
mov
add
pop
cmp
mov
pop
dec
popa
pop
jbe
inc
test
mov
fwait
mov
sahf
push
push
stc
outsb
adc
out
xchg
in
push
xchg
sub
or
int3
jmp
faddp
sbbb
sbb
fucom
dec
aam
mov
xchg
add
dec
shlb
xor
fimuls
pop
loope
push
mov
out
call
stos
test
je
inc
cmp
jp
jns
dec
fwait
pop
mov
iret
cmp
push
cmc
push
inc
fildl
sub
es
xchg
xchg
or
cld
int
sub
xorb
call
das
push
jle
push
xor
lahf
add
sbb
push
xchg
fdivs
popf
stc
fwait
sub
jns
insl
adc
popa
cltd
xor
jns
mov
or
jmp
daa
repz
xchg
jnp
jno
xor
jmp
pop
lea
clc
xchg
ljmp
mov
jns
or
in
test
add
mov
push
fwait
cmp
xor
cmpb
mov
add
lcall
cmp
repnz
inc
aad
and
lock
xor
int3
aaa
push
mov
dec
cmpsl
mov
dec
std
jge
in
jb
in
out
adc
imul
mov
jl
and
sbb
outsl
popa
mov
mov
in
lods
mov
ret
mov
sub
sahf
popf
adc
adc
cs
and
outsb
inc
rcrb
jbe
nop
aas
push
dec
shll
jl
jmp
sahf
and
test
xlat
dec
mov
push
loope
cwtl
adc
and
mov
ja
cmp
mov
push
andb
mov
insl
andb
loop
inc
test
jno
cld
stos
inc
aas
mov
mov
rorb
aad
imul
out
and
xor
adc
lahf
push
or
xchg
les
mov
aam
sahf
aam
sahf
fsts
je
loop
mov
out
fstp
dec
divl
addr16
xor
or
aas
aaa
into
jo
insb
fildll
bound
xchg
psrad
sbb
lea
lcall
inc
pop
and
mov
pop
hlt
or
and
inc
test
jle
ja
fnstcw
jno
push
cwtl
adc
orl
mov
ljmp
cltd
js
push
mov
and
loopne
adc
cltd
and
std
mov
and
mov
lds
faddp
xor
leave
insb
mov
loopne
push
out
add
add
cltd
mov
push
push
out
push
movsl
out
aaa
mov
ljmp
mov
or
bound
imul
nop
lods
inc
sub
or
adc
and
aaa
mov
ljmp
pushf
rep
mov
orl
adc
int
jmp
mov
cwtl
cmpsb
sub
push
adc
dec
or
stc
test
cmpsl
dec
rcl
stc
pop
icebp
xchg
dec
pop
dec
rcrb
repnz
aas
dec
imul
dec
aas
add
mov
cltd
ficomps
orb
daa
pop
cmp
vfrczps
dec
in
add
inc
mov
out
jge
leave
push
jp
scas
outsl
dec
xlat
push
cmp
sbb
pop
in
sub
ja
cli
es
incl
repz
jmp
fldl
mov
mov
or
addr16
pop
add
fs
cltd
fwait
mov
in
std
add
pop
pop
scas
mov
xchg
ror
mov
xor
pop
stc
lea
mov
mov
jne
fwait
das
mov
mov
mov
test
fdivrp
cmp
outsl
xor
cs
jge
mov
adc
popa
fistl
mov
inc
loop
or
mov
out
jge
test
mov
je
call
or
mov
into
pop
adcb
push
int3
repz
jns
fsubl
jne
out
shll
scas
mulb
xor
ret
dec
outsb
mov
mov
fdivr
imul
pop
rcl
jns
cmpb
stos
mov
mov
jns
ss
and
mov
inc
push
in
shll
mov
divl
inc
xchg
mov
outsl
pusha
negl
lock
and
mov
and
jbe
cmp
scas
std
cltd
cmpb
xor
xchg
fisubrl
mov
loop
je
outsb
cmpsb
sbb
in
int
sti
cmp
cmpsb
in
cmpsl
inc
push
lds
addr16
mov
out
cmpsl
decb
jg
int3
jo
call
add
xchg
lcall
out
leave
xchg
lcall
out
adc
xchg
leave
ret
outsb
fwait
hlt
ljmp
lret
mov
push
or
mov
mov
lea
rcl
imul
push
in
sub
xchg
notb
mov
iret
mov
call
xchg
nop
aas
outsb
ret
mov
lahf
fnstcw
dec
ljmp
pusha
sbb
and
cmpsl
movb
fistpl
pop
cltd
mov
in
sbb
jo
sub
xchg
dec
or
cmpsl
push
call
xor
outsl
push
sub
mov
or
jne
leave
push
aaa
mov
cmp
and
das
rolb
mov
inc
cmp
pop
push
js
int3
arpl
xor
push
mov
test
in
ret
and
int3
jge
lods
out
test
adc
inc
push
cmp
mov
mov
adc
insl
and
mov
pop
fnstenv
xchg
or
aam
negl
lds
daa
fs
and
arpl
shl
adc
loop
push
mov
cmp
ficoml
xchg
push
pop
shrb
ja
mov
inc
arpl
movsl
push
add
jp,pn
ja
pop
in
pop
dec
inc
sub
adc
test
inc
loop
in
mov
add
mov
fsubrp
lds
lahf
cs
imul
fldt
cmp
das
sub
sti
enter
out
fs
xlat
or
mov
std
mov
or
imul
and
adc
jg
mov
sbbl
test
sbb
dec
jb
fcomi
movsl
xlat
adc
negb
and
shlb
movsl
es
jle
and
push
xlat
addl
xor
xlat
incl
mov
ret
je
mov
jecxz
hlt
pop
sub
cmp
sarb
imul
aam
shrl
fnstenv
mov
xchg
insl
stc
movsl
mov
adc
xchg
daa
scas
xor
std
fiadds
or
ljmp
imul
data16
insb
inc
mov
insl
shl
cld
fwait
bound
dec
ljmp
xor
out
cmc
jne
cmp
sub
inc
outsl
cwtl
adc
mov
ss
mov
push
cmp
std
pop
out
inc
pop
cmp
jbe
adc
push
mov
dec
enter
and
jg
mov
insb
pop
xor
cmp
pop
add
and
push
jmp
cmp
add
stos
mov
loopne
je
ss
fiadds
jle
mov
gs
and
cmp
movsb
fwait
add
mov
inc
cmp
xor
xor
in
call
addb
int3
adc
cmp
idivb
mov
or
pushf
stos
mov
sti
jne
mov
test
jl
and
pop
mov
inc
jecxz
jno
adc
mov
dec
std
mov
movsb
add
clc
test
push
mov
mov
leave
adc
add
icebp
mov
sub
mov
sbb
jne
dec
out
call
mov
jmp
adcb
xor
fisttpll
pop
mov
sub
stos
and
in
lret
dec
mov
lods
inc
sub
adc
popa
dec
push
mov
mov
mov
xchg
in
sbb
and
jl
out
orl
enter
pop
stos
out
pop
dec
subl
jo
add
lea
lret
xchg
dec
aaa
gs
jmp
pop
fdivl
ret
mov
mov
pop
stos
ds
sub
in
insb
sarl
jbe
adc
inc
fsubrs
mov
aam
aaa
lret
cmpsl
sbb
and
inc
adc
jno
xor
dec
jnp
mov
cmpsb
dec
movsl
pop
xchg
cmc
dec
push
ja
sbb
xor
movsb
fwait
sti
mov
lock
rorb
ja
or
bound
nop
push
out
les
cli
cld
in
xor
ret
fbstp
sbb
or
fdivl
lahf
ds
out
fwait
xor
notb
xor
jbe
cltd
fstpl
rcrl
addb
mov
or
cmp
sar
jb
sarb
bound
test
sbb
and
bound
insb
mov
mov
mov
jg
xor
enter
gs
cmp
dec
pusha
cs
stos
aam
movsb
inc
push
xorl
sti
sbb
arpl
mov
aad
lds
jg
test
or
test
mov
cli
push
andl
adc
inc
imul
ret
fisubrs
sahf
add
fimuls
fdiv
mov
sar
popf
lods
inc
lock
jb
lret
sub
inc
enter
iret
inc
adc
push
and
ljmp
inc
pop
add
sbb
lock
outsb
aad
pop
sti
imul
mov
dec
test
sbb
std
push
cs
add
stos
hlt
cmp
cltd
add
pop
insb
xor
and
push
out
xchg
fdivs
sahf
sub
xor
xchg
jns
mov
jecxz
push
mov
outsb
cmp
jne
jecxz
pop
pushf
and
movsb
sahf
cli
jmp
jo
sub
push
jp
mov
push
mov
imul
hlt
movsb
test
xor
push
xorl
enter
push
xchg
pop
mov
push
pop
dec
decb
add
and
pop
cld
leave
out
addr16
mov
dec
sbb
xchg
jmp
popf
xchg
xor
mov
xor
mov
lret
xor
and
push
fisubs
mov
pop
or
cwtl
or
mov
lahf
inc
std
insl
inc
scas
fs
or
cmc
mov
or
pop
inc
out
jnp
or
inc
cmpsl
xchg
sub
add
pop
sbb
add
jnp
push
cmpsl
cmp
push
xchg
into
cmp
ja
ret
sub
inc
jno
dec
add
hlt
in
das
cmp
ss
add
mov
mov
xor
call
ret
ljmp
push
ficoml
add
nop
cltd
push
sar
cmp
push
xchg
cwtl
dec
add
add
adc
dec
or
int3
dec
xchg
inc
sbb
in
fisubrl
in
mov
in
cmp
out
and
ss
stos
xchg
lcall
sbb
adc
sahf
pop
arpl
and
cmp
lds
mov
cmp
mov
clc
push
shr
notl
fdivl
shrl
pop
insl
and
and
loope
imul
add
inc
mov
jmp
sub
cmpl
test
lahf
or
enter
cmp
cmc
inc
sbb
dec
aam
adc
ss
push
jle
adcb
leave
jl
xor
inc
outsl
repz
enter
clc
cmpl
xchg
in
aad
les
inc
shrb
pop
or
insl
inc
daa
addr16
fbld
add
clc
in
sbb
jne
jle
aaa
in
adc
cmpsb
sbb
cmp
push
inc
lahf
push
ss
movsl
repnz
mov
mov
add
pop
push
ret
test
outsb
in
xchg
fisubs
mov
outsb
iret
sbb
mov
lret
andb
xchg
mov
add
dec
shll
dec
movsb
enter
daa
outsl
enter
lret
jg
push
xchg
sbb
sbb
push
cmp
scas
sti
insl
add
sub
lret
jns
sub
inc
sbb
dec
cltd
pop
jbe
xor
fcmovnbe
mov
stos
xchg
pop
sub
lds
aas
push
fcmovnbe
insl
or
lret
out
pop
int3
lahf
sub
xchg
xor
adc
and
pop
adcb
stos
xchg
fisubrs
mov
inc
sti
cmp
push
idivl
mov
subb
mov
jns
mov
imull
packssdw
loope
and
mov
nop
xchg
js
dec
adc
xor
add
popa
cmp
sbb
cmp
loop
sub
incl
in
mov
not
cmp
lea
xor
aaa
rcrl
xorl
push
movsl
icebp
fnsave
dec
fnstcw
aas
aam
fnsave
adc
inc
mov
leave
jns
inc
mov
inc
xchg
ljmp
imul
orb
aad
mov
leave
movsb
stos
ficompl
test
testb
add
cmpsb
data16
notl
xor
inc
push
std
jb
test
xor
inc
or
repz
vcvtps2pd
int
xor
mov
adc
in
test
cltd
mov
les
mov
xor
add
test
cld
mov
int3
jo
lods
aas
xlat
roll
mov
add
ds
and
pop
shrl
dec
cmpsl
lods
push
xor
lock
xor
adc
jns
and
outsl
inc
cmp
cmp
cltd
rcrb
jl
into
shrl
dec
mov
es
sti
mov
xchg
xor
xchg
sub
sahf
xor
mov
test
mov
cmpsl
ds
sbb
lds
push
jb
leave
ret
hlt
xchg
sbb
mov
vpmullw
add
adc
add
sbb
dec
mov
sub
add
js
jnp
into
les
dec
rolb
dec
pop
ljmp
pop
in
repz
pop
mov
add
sbb
pop
in
add
adc
pop
or
sarl
rorb
push
insl
inc
sbb
pusha
jge
mov
test
daa
lcall
sbb
loop
jg
push
insl
cwtd
dec
je
sbb
dec
inc
movsb
jecxz
mov
lods
cmpsl
and
mov
push
cmpsb
lcall
ja
cmp
mov
shll
data16
aam
std
in
test
in
data16
in
adc
cmp
mov
sub
sbb
and
mov
push
js
lods
xchg
xchg
and
nop
orb
shl
jnp
jge
jne
mov
mov
adc
je
repnz
mov
insl
cmpl
lahf
pop
ds
scas
rclb
popf
jne
push
sub
movsl
mov
jg,pt
call
jbe
push
cmp
jge
sbb
mov
cs
insl
mov
repnz
test
pop
nop
mov
mov
mov
fisubrl
adc
stos
mov
sub
lahf
dec
loope
in
xchg
fnstsw
mov
xor
cmp
mov
add
push
cltd
mov
dec
sub
dec
stos
iret
add
popf
shll
in
stos
push
gs
push
inc
leave
xor
xor
int3
movsl
fbstp
push
gs
shlb
lods
ljmp
scas
fimull
stos
adcl
jg
jne
xchg
fnsave
mov
jle
cli
pushf
loopne
mov
pop
loop
xchg
out
xchg
mov
pushf
ds
pop
sbb
mov
repnz
data16
aad
sar
dec
mov
mov
repz
sub
pop
fnsave
push
call
cmp
outsb
andl
sub
or
mov
xchg
mov
negb
pop
dec
ja
outsb
push
addr16
nop
adc
les
xchg
pop
ret
out
iret
fs
lods
pop
cmpsl
dec
sbb
cmp
nop
sub
mov
out
fstpl
mov
mov
xchg
or
mov
arpl
shlb
xor
outsb
mov
sub
fwait
cwtl
daa
icebp
push
xchg
cmp
push
mov
ljmp
jnp
test
sbb
out
por
insb
inc
neg
out
arpl
leave
adc
mov
cwtl
jnp
cmp
jmp
sbb
sub
leave
pop
arpl
loop
jecxz
cmp
mov
push
fwait
sbb
scas
sbb
cwtl
dec
es
shll
lret
xor
popa
clc
adc
adc
inc
ret
jne
add
jecxz
pop
xor
in
leave
loope
jb
adc
xor
lods
add
shll
and
nop
push
pop
in
add
aam
xor
fyl2x
loope
cmpb
mov
push
mov
xor
pop
hlt
pop
push
xor
rolb
and
pop
push
dec
dec
lcall
insb
scas
mov
les
mov
jbe
out
int3
or
mov
fldcw
test
addb
icebp
popf
popa
or
push
mov
cwtl
in
jns
push
pop
mov
mov
mov
xchg
inc
xor
rcrl
ret
lahf
xchg
mov
pushl
daa
shlb
call
adc
loope
cmp
ret
movsb
pop
jno
pop
inc
mov
dec
icebp
popa
fadds
xor
push
adc
stc
int3
aas
subl
add
or
sbb
and
xchg
inc
je
stos
mov
add
adc
mov
xchg
jp
pushf
jns
movb
sbb
ja
xchg
test
scas
jbe
fucomi
xchg
mov
roll
jbe
icebp
or
ja
push
xor
push
in
sbb
test
sbb
mov
repz
add
pop
xchg
test
cmpsl
adc
pusha
pop
iret
xor
xor
inc
lods
sahf
inc
fcomps
cmp
loope
call
movsl
xlat
xchg
sbbl
jne
jo
call
cwtl
dec
outsl
adc
mov
xlat
xchg
pop
outsb
mov
jns
cs
aam
std
push
jp
dec
and
inc
scas
push
mov
call
pop
in
addr16
xor
cmp
sbb
adc
add
adc
inc
add
es
xor
push
js
adc
or
aaa
pop
fadds
jo
dec
dec
loopne
xchg
call
int
fidivrl
pop
jns
jnp
insl
jg
pop
xlat
cld
or
bound
sbbl
jg
fmul
in
mov
pcmpgtd
sbb
test
arpl
push
sub
rcrb
and
pusha
pusha
mov
sarb
xchg
js
jge
loopne
mov
lret
cmpsl
jp
xchg
pop
lret
in
imul
mov
loop
ss
imul
sub
loop
inc
and
cmp
into
leave
cli
cmp
ljmp
lods
rcr
div
push
mov
xor
sti
ja
inc
insl
add
faddl
pop
cmpsb
mov
adc
scas
ret
jg
jb
xchg
adc
cli
pushf
push
iret
jge
mov
rclb
jb
je
lods
jbe
xchg
pop
add
pop
mov
mov
add
add
ss
aad
popa
pop
movsl
jg
gs
adc
ss
inc
scas
fwait
cmp
push
adc
push
inc
jmp
flds
lods
mov
push
cmp
arpl
jmp
add
in
lahf
push
scas
cltd
popa
icebp
test
enter
sub
clc
movsl
in
or
loop
or
adc
xchg
adc
sub
jnp
aas
mov
jecxz
ficoml
push
int
pop
std
subl
rcl
repnz
fs
sti
cmpsl
sysret
mov
mov
test
or
and
mov
mov
adc
std
mov
xor
icebp
fstpl
aam
xlat
jno
shl
fcomps
dec
scas
cmp
inc
inc
pusha
push
sar
push
pop
imul
add
cmpsl
dec
pop
mov
lock
fs
inc
lods
rolb
ja
decl
cmc
cwtl
pop
outsb
dec
rcll
ss
push
cwtl
push
jae
lret
xchg
lret
or
adc
mov
jge
repnz
lcall
out
pop
mov
mov
in
push
insb
ret
divb
in
ss
dec
popf
in
aam
lahf
adc
sbb
pop
in
ss
ss
or
imul
hlt
mov
dec
clc
sahf
in
inc
out
inc
mov
push
pop
xor
into
dec
cmp
push
lret
jp
push
fwait
sub
aam
imul
dec
mov
das
je
jno
rcrb
lret
mov
cmpb
mov
int3
les
rolb
adc
sub
dec
mov
xchg
lcall
popa
int3
xchg
callw
mov
cmpsb
repnz
cltd
dec
testb
pushw
inc
pop
iret
pop
loope
xor
xlat
shl
mov
lds
rolb
jg
lds
sbb
fnstsw
std
and
sub
sti
push
mov
imul
dec
dec
xchg
sub
loopne
lds
into
addr16
and
inc
adc
scas
xor
lahf
add
imul
lret
shrl
movb
data16
aad
mov
ds
jbe
or
add
pop
and
sti
shlb
xchg
lahf
insl
jge
push
or
jl
push
xlat
jl
mov
or
sbb
xor
lods
add
xchg
ss
fdiv
mov
mov
mov
pop
cli
or
jge
hlt
lcall
jbe
test
cli
xor
sbb
nop
mov
and
cmp
test
fsubl
add
test
lods
dec
movsl
push
add
shll
xor
ljmp
xlat
or
or
pop
fistl
je
mov
sub
mov
dec
mov
adc
popa
hlt
pop
popa
sbb
pop
enter
andl
inc
stos
das
out
inc
xchg
inc
add
adc
pop
mov
in
mov
inc
adc
pop
sbb
pop
cmp
fbstp
add
inc
sahf
xor
and
loop
sub
outsb
decb
xor
mov
or
cmp
filds
sub
jge
je
movsb
pop
test
sar
in
scas
and
cmp
fisubs
ret
fdivrl
fisubs
lret
lret
pop
sbb
adc
es
sub
jle
mov
aam
jle
jbe
dec
push
mov
push
into
adc
jecxz
adc
xor
mov
push
xlat
mov
paddq
sbb
addr16
cmp
mov
sub
gs
mov
outsl
push
adc
popf
jmp
out
mov
popl
sub
sub
push
mov
push
jg
xchg
ds
or
cmc
mov
loop
cwtl
bound
jnp
dec
cmpsb
jo
pop
inc
or
or
out
test
aaa
or
push
add
std
adc
lds
sti
xor
adc
adc
ljmp
inc
xor
fcompl
xor
jle
and
dec
out
adc
gs
shrl
mov
in
sub
icebp
cmp
cmp
cmpsl
inc
mov
and
dec
sbb
push
adc
fadds
str
fistps
aas
dec
mov
push
jl
xlat
mov
sbb
arpl
jg
push
popf
fstl
jecxz
inc
cmp
cmp
movsl
idivl
xorl
and
push
push
adc
dec
arpl
sti
or
out
sbb
xchg
ror
dec
cmp
sbb
jo
mov
add
aas
test
jne
out
jmp
jno
mov
mov
sub
sub
lock
out
cmc
adc
mov
pop
out
cli
ret
pop
sub
in
jge
shl
js
stc
lea
sub
adc
das
or
imul
icebp
fnstcw
out
cmpsl
stos
popf
int3
std
and
mov
xchg
jb,pn
mov
into
fisubrs
incb
jge
sti
mov
decl
lods
neg
rcrl
fs
stc
test
inc
call
addr16
aaa
in
lahf
xor
loopne
jle
ljmp
nop
in
or
mov
add
mov
xchg
inc
cmpsl
lret
pop
das
push
js
mov
fdivl
leave
imulb
repz
insl
popf
jp
mov
pop
cld
rorl
call
sub
std
out
shlb
nop
jl
sahf
sub
or
jle
imul
shl
ss
cli
inc
and
push
and
add
cmp
fldl2t
imul
sub
xchg
sub
push
cmc
bound
movsb
dec
psubb
mov
sub
inc
out
mov
addr16
pop
sub
mov
ljmp
adcl
fcompl
lds
jecxz
mov
push
sub
aad
shl
xchg
adc
inc
test
xchg
xor
push
jle
cs
lahf
xchg
push
sub
aad
cs
and
cmpsl
add
ret
and
push
cmpsb
fisubl
cld
jge
loope
push
or
adc
dec
add
popf
xor
jo
xchg
popf
add
pop
or
mov
hlt
je
add
xchg
cmp
out
push
or
pop
sbb
popf
mov
mov
jecxz
daa
mov
xchg
lds
int3
loope
lds
xlat
and
enter
sub
mov
push
jo
insb
and
or
jmp
sub
lret
sahf
lods
imul
adc
mov
sti
adc
pop
sahf
and
sbbl
cltd
pop
arpl
lods
push
int
js
cmp
sub
mov
xchg
add
jg
into
mov
insl
imulb
jmp
stos
fbld
fnstenv
int3
fcoml
adc
rcrb
add
add
scas
rcr
sbb
xchg
cmovbe
loop
cbtw
lods
push
add
in
xchg
outsl
loope
mov
imul
repnz
scas
popa
jl
or
push
mov
pop
add
jge
xchg
mov
test
shl
xor
lock
pop
jb
roll
dec
sbb
das
push
fs
test
data16
ret
mov
and
cmp
cli
inc
xchg
mov
or
call
or
ljmp
mov
scas
or
rorl
cmp
insl
repz
lret
push
mov
push
or
or
jle
cld
jge
or
push
inc
push
push
jg
xchg
add
xor
lock
pop
push
lods
subl
bound
nop
call
aaa
ljmp
addb
pop
dec
xor
pop
icebp
fcomps
pop
enter
imul
andl
push
lret
xchg
dec
sbb
push
sti
addb
adc
loope
pusha
pop
stos
out
test
jne
movsl
mov
or
out
sub
lret
test
repz
push
shll
and
jle
and
shlb
test
hlt
push
pop
cmc
out
sub
mov
dec
dec
pop
andl
in
cld
pop
imul
sbb
cmp
sbb
ffree
out
push
int
pop
lcall
cmp
pop
fidivrl
fucomp
jg
push
xor
pop
xor
xor
mov
lret
daa
mov
lods
stos
nop
out
adc
jbe
mov
inc
pop
bound
mov
dec
rep
aaa
sub
leave
xchg
je
jno
ret
sub
in
push
cwtl
pusha
outsb
mov
and
and
fisttpll
cld
jg
scas
ret
cmp
ret
mov
fnstsw
imul
inc
mov
loopne
inc
cmp
mov
dec
inc
mov
xchg
sub
sbb
mov
pop
scas
inc
test
jge
and
xor
das
fdivrl
adc
inc
ljmp
movsb
push
mov
adc
ds
sub
mov
hlt
mov
fwait
pusha
lods
int3
inc
adc
push
cwtl
sbb
in
int3
loopne
aad
push
jl
popf
and
push
and
pop
les
sub
cld
mov
div
iret
data16
out
test
outsl
and
mov
ds
inc
fcomps
and
ret
repz
cmc
or
jmp
mov
js
pop
sbb
and
jge
pop
ss
cwtl
das
ret
cmc
shrl
out
loop
loopne
in
sbb
pop
xchg
mov
sbb
scas
jecxz
fs
out
xchg
es
sbb
ljmp
imul
cld
pop
jae
js
xchg
fwait
addr16
repz
jp
jne
movsl
ljmp
and
negb
mov
sbb
ret
std
arpl
push
adc
dec
aas
fnsave
jnp
test
or
dec
and
mov
loopne
and
sbb
in
mov
fsts
and
add
loope
gs
scas
les
adc
and
inc
in
lret
sbb
xor
inc
inc
out
inc
lahf
std
mov
sub
mov
xor
xchg
xor
call
mov
lods
add
push
test
mov
jl
mov
pop
mov
add
lahf
negl
loopne
std
or
xor
cli
nop
sbb
dec
cmp
pop
cmpsb
adc
sahf
mov
jge
push
mov
fstpt
adc
les
push
das
sbb
test
cwtl
sub
dec
add
fucom
mov
ret
dec
xor
hlt
dec
addb
subb
xchg
dec
add
jmp
test
fistl
out
dec
xchg
xor
outsl
into
ret
jg
xchg
stos
imul
adcb
mov
cmp
mov
hlt
jno
and
jo
or
insl
pop
pusha
push
lods
sbb
mov
xlat
jno
lds
mov
lret
icebp
bound
sub
jae
sub
loop
arpl
test
es
mov
imul
pop
or
xor
aaa
into
mov
add
lods
jns
push
xchg
stos
jmp
test
xchg
pop
movb
enter
push
bound
inc
icebp
xlat
cmp
mov
subb
pushf
sub
dec
sti
movsl
xor
pop
add
shr
daa
mov
pop
inc
inc
fdivr
stc
andl
dec
jmp
xchg
and
xchg
shrl
fs
sbb
les
fdivl
jne
mov
and
push
xchg
bnd
movsb
mov
mov
and
cwtl
push
lea
xor
loope
cwtl
orl
dec
loopne
and
stc
push
sbb
test
or
jle
in
mov
push
mov
repnz
add
xor
mov
cmc
fistpll
pop
push
addr16
call
fwait
jbe
push
fnstenv
in
push
or
mov
nop
cmp
inc
jp
jb
pop
jno
pop
inc
pop
imul
fbld
mov
pop
das
cmovno
inc
out
test
stos
aas
cmpsl
xchg
js
pop
xor
sbb
xor
pop
lret
int
lahf
fistl
adc
xorb
jl
sub
jno
lahf
sbb
fildl
pop
call
fs
pop
fisubrl
xlat
lods
sarb
xchg
adc
sbb
cmp
add
adc
leave
test
jbe
cmpsb
decb
mov
popf
iret
sarb
mov
loope
mov
inc
and
sbb
popa
mov
sub
pop
inc
jg
jle
sbb
inc
ret
lcall
lds
mov
push
out
sti
cmc
sub
dec
mov
adc
lahf
mov
paddb
fs
and
ds
xor
mov
ret
cwtl
out
insw
cwtl
push
out
sbb
xchg
pop
inc
adc
dec
aad
and
sub
mov
cltd
add
adc
adc
mov
or
loopw
in
xor
repnz
push
jo
mov
fstpt
add
cmp
fisttpll
and
sbbb
push
add
enter
frstor
fiaddl
mov
rcr
xor
repz
push
adc
xchg
mov
adc
mov
sbb
jecxz
sub
jge
mov
or
sub
mov
adc
loopne
jne
ds
mov
pusha
popa
je
jbe
cmp
sti
fdiv
ss
inc
fadd
call
ds
and
aam
cmpsl
mov
ss
xchg
stos
aam
xrelease
push
aad
dec
mov
jg
pop
lahf
je
loope
push
aam
dec
and
xchg
aaa
cltd
mov
repz
cli
inc
sbb
add
lock
mov
punpckhwd
push
and
aas
dec
fs
int3
arpl
lahf
jns
lahf
sahf
push
or
mov
dec
and
xchg
cs
sahf
jle
movsb
arpl
test
testl
je
mov
inc
mov
movsl
testb
push
outsb
stc
ret
push
pushl
push
dec
mov
and
addr16
mov
ret
xchg
call
inc
das
insb
stc
mov
jmp
mov
jmp
sbb
jg
mov
sub
mov
mov
mov
pop
adcl
int
or
rcrb
int
adc
fwait
jbe
jbe
jo
jbe
or
popf
or
pop
das
xchg
mov
sub
jecxz
je
loopne
test
insl
loope
pop
fnstsw
xor
mov
sub
jne
or
notb
imul
sub
inc
bound
les
ds
aas
jns
push
cmpsl
test
mov
xchg
sbb
jne
lock
mov
call
dec
and
mov
pop
xor
fsubs
js
jmp
or
xor
inc
inc
push
dec
dec
mov
jg
sub
repz
subl
sbb
sbb
pop
xor
jns
xlat
mov
arpl
fisubrs
jp
scas
mov
inc
or
sbb
lods
adc
adc
lcall
loope
daa
mov
fwait
aas
xchg
and
insl
sbb
mov
jge
test
cmova
outsb
stc
fcmovnbe
lds
sub
fists
bound
ret
aaa
stos
mov
pop
jmp
xor
scas
xchg
shl
iret
push
cwtl
mov
roll
out
lds
sbb
ljmp
in
fistpll
push
imul
inc
cmc
sahf
insl
rorl
int
push
dec
hlt
push
xorl
xchg
jle
std
xchg
adc
or
xor
mov
sbb
xchg
loopne
cmpps
icebp
mov
lea
adc
sarb
xor
xor
aad
inc
stos
shl
jbe
sub
dec
add
adc
lods
and
add
jae
dec
xor
dec
sbb
cmc
mov
mov
mov
aaa
sub
and
std
popf
les
rolb
in
shr
add
pop
sub
out
jne
mov
mov
pop
out
ljmp
push
jl
popl
mul
frstor
inc
pop
das
fwait
inc
inc
mov
sbb
pop
add
nop
xor
imul
ret
ret
ja
sbb
shlb
les
sbb
mov
push
iret
cmpsb
mov
aad
dec
mov
add
and
outsl
mov
add
loop
dec
sub
cmpsl
dec
cmp
mov
lahf
movsb
stc
xchg
xor
iret
loopne
xlat
daa
loopne
and
dec
vmaxpd
mov
sub
add
repnz
insl
stos
test
pop
mov
out
lret
scas
and
mov
push
fidivl
test
mov
mov
lcall
and
scas
call
test
sahf
sub
sbbb
dec
lods
inc
jle
mov
add
pop
pushf
inc
or
adc
insb
aas
jno
inc
lods
inc
pop
xor
aaa
dec
inc
jno
test
add
mov
xor
roll
stos
fnsetpm(287
dec
jne
pop
pop
stos
xchg
test
bswap
pop
dec
testl
inc
scas
inc
insb
add
int
repz
mov
subl
dec
out
mov
mov
xchg
adc
pop
inc
jl
jno
shll
inc
rcll
mov
test
adc
jbe
enter
mov
arpl
idiv
test
or
dec
sbb
aam
add
xor
sbb
dec
repnz
adc
in
jl
mov
sub
adc
stc
movsb
or
mov
fbld
add
into
cmpsb
hlt
mov
pop
nop
pop
sub
sbb
xchg
fmuls
push
out
test
ds
inc
movsl
cli
test
mov
inc
in
pusha
in
orb
dec
test
adc
bound
and
mov
call
inc
pop
mov
mov
xchg
fstl
jnp
pop
push
sbb
imul
cmp
xchg
mov
outsb
clc
adc
inc
mov
loop
sub
aas
add
sbb
adc
or
mov
dec
pop
adc
add
jecxz
xor
fdivrs
aaa
pop
lock
xchg
or
shrb
call
int3
in
jge
test
add
or
and
xchg
movl
push
shrl
xor
pop
xorb
sub
dec
mov
in
cmp
popf
in
mov
mov
dec
sub
imul
arpl
jge
icebp
insb
mov
pop
enter
test
imul
mov
inc
int3
xor
in
fcoml
push
pop
filds
subl
pop
xchg
sub
mov
push
loope
rolb
push
rorl
dec
push
add
inc
shrl
xor
out
dec
and
jnp
movsb
pop
scas
pop
sbb
mov
pop
int3
addr16
sahf
das
cmp
scas
loope
cmp
lods
mov
pop
stc
and
jmp
loop
dec
mov
mov
les
pop
repnz
shl
sbb
insb
push
mov
mov
scas
call
daa
daa
loopne
pop
xchg
pop
lret
ret
test
sarb
or
jo
cmp
in
neg
pop
leave
or
mov
mov
fsubrl
jge
outsl
ret
pop
push
mov
mov
xchg
and
or
cmc
adc
lret
sbb
xor
mov
and
jb
jbe
cmp
push
mov
mov
dec
sbb
sub
cwtl
xor
mov
cli
xchg
jbe
clc
je
xchg
sbb
enter
outsb
mov
imul
repnz
lds
mov
gs
test
add
or
mov
pop
cld
xchg
mov
sti
sti
sbb
faddl
outsl
sti
js
pop
mov
sbb
or
inc
pop
es
arpl
les
or
mov
in
adc
sbb
and
mov
sti
add
rdmsr
fdivrl
cmp
ficoms
arpl
mov
popa
cli
inc
ror
push
iret
int
std
ja
das
pop
xchg
nop
pusha
lock
xchg
sbbl
mov
cmpb
xor
loop
jge
or
test
mov
inc
jle
mov
daa
push
ret
add
inc
pop
and
sub
sub
xchg
cmc
mov
mov
fcomi
or
lcall
leave
sbb
incl
rorl
inc
fadds
cmpsb
pop
xchg
dec
pop
mov
jge
pop
push
test
andl
cmp
test
lret
ret
scas
jmp
aaa
cmp
or
cmp
sub
scas
shr
xchg
jmp
call
fcmovnb
insl
push
stos
inc
xlat
sbb
shl
lcall
cmp
and
ja
dec
rcl
jns
lods
lods
adc
int3
dec
sub
mov
adc
rcrl
and
sti
or
rcll
and
xor
cmp
out
jae
jge
add
inc
gs
xchg
push
enter
adc
lret
enter
and
popf
inc
aas
push
or
pop
imul
fucomip
lock
add
and
pop
inc
pop
call
sti
gs
sarl
mov
push
outsb
mov
jle
subl
ljmp
pop
out
push
mov
xchg
fistpll
adc
pop
ja
and
xchg
push
aam
jecxz
or
sub
jg
mov
rclb
scas
push
test
out
and
inc
sub
jle
jnp
jge
cmp
mov
dec
jae
out
cmp
sub
lahf
pushf
jg
cs
js
mov
clc
adc
mov
pop
das
xor
ljmp
lock
jmp
sub
dec
std
or
ret
jle
sub
and
mov
xchg
mov
adc
lret
mov
or
mov
imul
fs
pop
xchg
dec
xchg
jo
mov
sub
shl
cmp
scas
sahf
pusha
pop
add
or
in
mov
sub
mov
hlt
in
addb
add
es
jl
sub
pop
mov
push
pop
leave
es
js
lods
mov
into
nopl
iret
push
mov
sub
cmp
or
push
push
and
sub
jae
sub
movsb
ret
push
repz
pop
addl
mov
push
leave
mov
fldt
pop
push
lds
cmp
subb
imul
cli
xchg
lret
es
or
add
sub
scas
dec
jge
sub
xchg
cs
lahf
adc
push
push
rcll
cmp
outsl
sarb
pop
jge
movsb
cmp
sti
movsb
in
in
cwtl
das
pop
mov
orl
scas
ja
andb
jecxz
push
pop
add
dec
mov
aad
sub
pop
insb
and
pusha
sub
mov
jg
cmp
movsl
xchg
mov
mov
aam
lret
das
cmp
push
add
sti
push
sahf
into
in
jbe
or
outsb
imul
cmp
rclb
xchg
int3
and
ss
int3
adc
push
ljmp
pop
stc
repnz
mov
stos
jbe
fstps
ds
sbb
icebp
and
scas
pop
fadds
out
es
divb
or
jbe
iret
cli
mov
call
aas
and
pop
lods
cli
dec
mov
addr16
lret
push
pop
mov
stc
out
ljmp
pop
mov
push
xor
and
mov
jecxz
mov
or
jmp
nop
sbb
mov
in
daa
mov
inc
test
repnz
add
out
ret
out
aad
mov
and
cmpsl
out
in
jmp
pop
sbb
mov
gs
and
loop
adc
int3
ja
ljmp
je
jp
sbb
pop
ds
ljmp
mov
test
push
sarl
mov
es
xor
xor
outsl
scas
and
sti
mov
xchg
jno
popa
mov
mov
test
outsb
fwait
add
shlb
das
ret
ret
popf
out
inc
mov
pop
int3
daa
xchg
or
leave
scas
jmp
dec
lock
dec
mov
nop
out
inc
mov
push
leave
int
mov
iret
push
sub
out
push
pop
mov
pusha
test
jns
pop
xchg
outsb
xchg
mov
sbb
sarb
mov
hlt
push
pop
out
adc
repnz
and
jle
cltd
or
lret
cmp
imul
iret
dec
jg
dec
mov
lcall
mov
sub
cld
sub
sbbb
subl
pop
xchg
cmp
int
ljmp
pop
adc
inc
cmp
mov
xchg
jge
push
addl
cli
pushf
xor
push
pop
push
and
push
mov
loop
mov
adc
test
dec
mov
sub
inc
lock
repnz
jle
xchg
mov
mov
cmp
add
cmp
push
and
sbb
inc
int
dec
in
push
jae
iret
sub
sahf
adc
mov
jp
jle
scas
mov
movsl
imul
out
push
imul
dec
cwtl
lods
jnp
xor
es
call
xor
push
xor
lods
mov
addb
jg
xchg
mov
sarb
inc
adc
or
je
xchg
fmull
jge
arpl
pop
clc
mov
mov
and
lahf
ret
sbb
test
or
inc
cld
mov
in
pop
xchg
jge
and
lea
into
sub
cs
cmpb
cmp
jne
stos
jecxz
sbb
inc
loope
out
push
and
push
push
mov
xchg
add
lahf
clc
jno
adc
negb
popl
cmp
cli
daa
popf
shrl
jo
xchg
shlb
add
nopl
ret
fdivrl
dec
mov
fwait
jl
outsl
sub
pop
cli
and
sti
arpl
pop
icebp
popa
inc
add
or
xor
mov
pop
popa
fnstsw
xor
xchg
mov
adc
loopne
xchg
xchg
or
or
fisubl
mov
and
lods
inc
jp
dec
loope
imulb
or
push
int
loopne
xor
mov
es
cmp
ds
pop
push
in
nop
dec
mov
jae,pt
jnp
rcll
bound
xlat
xor
int3
popf
stos
fs
jne
andl
jge
iret
xchg
adc
or
lcall
stc
lea
push
lods
or
nop
dec
pop
test
cmpsl
adc
pop
xor
cmp
pop
inc
cwtl
push
inc
jle
js
pop
add
sahf
outsl
mov
jg
jbe
xor
dec
std
jo
or
rclb
mov
push
scas
push
icebp
movsl
fsubl
sbb
shrb
add
int
ds
sti
and
jo
inc
addb
mov
inc
test
sbb
jno
xchg
test
or
xchg
lcall
cmp
push
outsb
add
push
and
in
jns
jnp
dec
adc
mov
sahf
jmp
clc
or
in
dec
mov
ret
aaa
inc
sbb
add
lock
pop
jae
gs
push
and
jl
sahf
pop
pushf
pop
cmp
test
loop
pop
int3
mov
test
xchg
icebp
clc
adc
in
and
aaa
add
cmpsb
xor
loopne
push
fcomps
frstor
in
mov
lods
xchg
push
sub
lahf
roll
mulb
mov
out
bound
mov
cmp
test
jg
mov
adcl
arpl
pusha
and
aad
mov
cld
and
loopne
mov
sub
rcl
aas
dec
add
rclb
inc
pop
out
adc
insb
sbb
mov
jle
aas
dec
cmp
pop
pop
hlt
mov
lea
fsubl
int3
inc
sbb
mov
fwait
lcall
fsubp
add
mov
xlat
dec
dec
int3
sbb
inc
lret
sub
cmp
sbb
mov
mov
cli
loop,pt
data16
rcrl
repnz
mov
and
scas
inc
adcb
cmpsl
mov
jg
mov
fiaddl
jl
incb
xchg
ficoml
xlat
ret
adc
movsl
dec
add
sbbl
mov
add
fs
xchg
repnz
push
outsb
daa
adc
or
jl
and
mov
push
jle
fistps
push
enter
xchg
and
adcl
aaa
or
call
cmp
xchg
jb
sahf
stos
sub
sbb
xor
mov
cli
push
pop
pop
rol
rol
or
or
adc
fwait
jbe
jae
out
xchg
adc
lea
mov
cmpl
mov
push
adc
lock
notl
sbb
js
incb
arpl
xchg
push
insl
dec
in
inc
pop
cmpsb
mov
in
push
jl
outsl
pop
jno
jns
xlat
cmp
jl
jae
push
and
or
sbb
jmp
inc
sahf
inc
incb
inc
xor
insb
std
lret
inc
and
or
out
cs
inc
jbe
sub
adc
popf
jne
sbb
push
xor
jge
ds
imul
or
lcall
mov
xchg
mov
xchg
xchg
inc
sbb
cmpsl
cmpsl
js
out
mov
mov
add
jne
xchg
pop
adc
fistpl
pop
dec
push
icebp
adc
and
idiv
jg
fld
hlt
adc
movsb
pop
push
loopne
sbb
stc
mov
fnstenv
jl
mov
enter
jle
shll
orb
test
dec
xchg
fstps
xchg
sahf
loopne
cmp
jg
cmpsl
repnz
xor
and
cmp
pmaxub
shll
enter
mov
insb
dec
out
xchg
inc
jnp
loopne
mov
inc
sub
bound
sbbb
std
or
out
add
or
out
in
loope
mov
jle
mov
ds
add
or
out
jge
outsb
dec
ffreep
js
lret
test
add
test
aaa
mov
push
mov
add
sbb
fmulp
nop
bnd
mov
pusha
fists
pop
lcall
ja
pop
cmp
cltd
sub
push
jbe
loopne
sub
js
mov
ljmp
ds
fistpll
ss
daa
in
jg
fdivl
lds
cli
inc
or
rorb
std
add
mov
fnclex
push
push
out
jno
jmp
int3
adc
test
jns
dec
jp
es
insl
enter
mov
loope
daa
mov
push
inc
stos
enter
inc
inc
fidivl
ret
or
bound
jle
jo
cmp
icebp
movsb
fcoml
mov
push
mov
movsb
sahf
dec
notb
jge
repnz
test
mov
inc
scas
cmp
mov
push
fcoms
scas
inc
and
dec
dec
scas
xor
mov
subb
arpl
iret
mov
dec
in
mov
call
fs
inc
loop
cli
mov
mov
push
push
adc
lods
mov
cli
mov
rcrl
mov
sub
mov
mov
ret
in
jecxz
mov
fwait
sub
mov
mov
or
es
jns
insl
aam
imul
enter
sar
hlt
fldenv
repnz
in
dec
and
notl
cmp
xchg
push
xor
push
cmpsl
cmp
aad
rcrb
mov
cmp
ds
or
into
xor
das
push
jb
pop
jbe
ljmp
lret
cmc
nop
push
xchg
popa
clc
shlb
cld
sbb
dec
cld
mov
out
jl
test
xor
jg
mov
dec
sahf
mov
push
fldl2t
jg
clc
popf
cs
jmp
or
jg
cli
jo
scas
add
adc
mov
imul
adc
outsl
adc
mov
cmp
stc
push
mov
je
push
jb
jno
pop
scas
pop
inc
loope
jb
enter
mov
fimull
in
daa
lods
mov
jbe
shl
stos
inc
inc
icebp
and
pusha
adc
mov
jb
inc
out
pop
mov
xchg
cld
stos
rcll
mov
lods
add
aas
or
dec
push
sub
les
rcrl
ss
cmpsb
xor
incb
ss
fildll
mov
inc
stos
cmp
mov
imul
repz
cmp
push
das
lret
xchg
dec
sub
ljmp
xchg
or
jns
cmpsb
rcrb
fsubrs
or
dec
cmp
fldcw
aaa
mov
or
cltd
mov
ljmp
cmc
push
dec
leave
jge
aad
sti
jle
mov
in
push
mov
push
xor
push
xor
mov
xor
and
test
popf
or
pop
pop
jp
jecxz
sbb
cmpsl
sub
cmp
fs
es
pushl
push
dec
push
lock
mov
inc
test
mov
adc
add
test
call
pop
xchg
or
cmc
push
mov
fisttpll
mov
mov
mov
roll
mull
lret
push
pop
cmc
inc
sbb
pop
outsb
and
popf
push
bsf
jp
and
out
pop
sbb
xchg
cwtl
into
xor
dec
and
pop
sarl
adc
fildll
or
sbb
and
in
pusha
cmpsb
xchg
das
fdivrp
imul
or
fwait
or
and
cmp
mov
fdivl
les
cmp
and
cmpb
pop
jmp
lret
sub
shrl
jbe
sub
fbstp
sub
fs
jle
xchg
mov
sbb
jg
sbb
out
pop
mov
in
push
jnp
cmpsl
ds
pushf
sahf
or
ja
mov
fcomp
into
int3
jne
or
leave
les
cmc
mov
repnz
add
sbb
sbb
clc
or
pop
xor
push
push
xchg
mov
dec
and
adc
sub
mov
test
mov
mov
push
xchg
loopne
inc
daa
lea
pushf
aad
std
dec
or
dec
repz
xor
call
adc
mov
test
sbb
xchg
jle
pop
mov
aaa
or
int3
movsl
xchg
ds
repz
sti
xor
andb
cmp
aam
lcall
mov
mov
mov
jp
cmp
jns
xchg
fstpl
xchg
insl
dec
inc
and
lret
mov
dec
popf
aad
dec
sub
xchg
jo
inc
data16
or
in
cmpl
roll
sbb
sbb
pusha
jl
sub
outsb
adc
test
test
enter
insb
call
sub
cs
aad
mov
xor
push
mov
imul
sbb
and
leave
outsb
add
mov
xchg
mov
push
movsb
xor
loop
cmpsl
sbb
jl
xchg
cli
push
popf
xor
mov
adc
cmpsb
ds
xchg
hlt
enter
adc
mov
leave
or
lock
loope
sub
push
jmp
in
in
sbb
pop
sahf
movsb
iret
cmp
scas
loop
popf
or
fnstcw
fs
mov
repnz
push
lds
testb
fnstenv
dec
pop
fmul
xchg
mov
dec
adc
hlt
lods
int3
arpl
test
jne
jbe
or
test
and
cmp
pop
lock
mov
aam
outsb
fdivs
fsub
adc
mov
inc
push
push
dec
imul
cmp
xchg
and
xor
ja
xor
push
push
cmpsb
scas
ret
lret
les
into
and
out
xchg
lods
pop
sarb
xor
push
sti
push
fisttpl
pop
xchg
dec
push
fnsave
pushf
sub
cltd
clc
cmpsl
push
stos
pop
or
xor
fmull
fmuls
insb
xchg
mov
xor
test
bound
xchg
jo
push
cmp
imul
lods
push
sub
imul
cmp
in
jmp
lret
cltd
and
jns
out
leave
xchg
mov
sub
xlat
fwait
hlt
mov
or
test
shll
loop
jl
std
mov
cmpsb
cmp
cmp
aaa
je
mov
lds
in
ljmp
pushf
insb
mov
mov
lret
shll
jmp
mov
jae
hlt
ja
add
sub
testl
and
cmp
in
faddl
jmp
xchg
scas
or
pop
jg
adc
xchg
add
fdivs
jae
ljmp
iret
or
mov
nop
xchg
add
mov
sbb
push
cmpsb
std
cltd
mov
mov
inc
test
andl
or
or
and
sub
daa
add
pop
sub
loop
clc
rorb
pop
inc
inc
mov
add
dec
call
lea
jae
sbb
in
cmpsb
fldt
xor
jbe
movb
mov
imul
aaa
xchg
jmp
lahf
push
push
subl
inc
cltd
movsb
jp
cli
or
inc
sbb
push
add
fldlg2
mov
mov
popf
pop
mov
fadds
sbb
push
push
lock
fsubrs
dec
sti
jbe
fcomip
mov
mov
test
dec
jne
inc
lock
daa
dec
sub
sub
fidivs
or
dec
lret
popa
push
test
cmp
ljmp
adcl
cld
adc
in
stc
icebp
adcb
adc
or
and
nop
imul
shl
repnz
hlt
cmp
pop
cmpl
push
jl
test
push
xchg
into
sub
call
adc
bound
mov
arpl
into
xor
sti
movsl
std
ret
lahf
filds
mov
inc
insb
jmp
js
xchg
pop
cmp
pop
cli
mov
dec
jbe
rcrb
js
mov
add
mov
idivl
ljmp
adc
pop
dec
sbb
fwait
int
and
fucomi
dec
out
mov
mov
xchg
adc
iret
push
ds
stc
or
nop
stc
xchg
shrb
not
pop
mov
clc
cmp
int3
jo
sbb
or
push
or
in
insl
or
movsb
or
jecxz
in
or
shrl
call
popa
sbb
sub
fisubrs
sbb
pop
mov
jg
into
mov
subl
sahf
mov
hlt
push
xchg
add
bound
ja
mov
hlt
mov
xchg
inc
incb
mov
shll
sbb
es
les
dec
pop
jne
aas
pop
imul
push
jae
fstpl
mov
insl
jp
xor
mov
mov
out
cmp
out
dec
sbb
pushf
fsubp
inc
popf
testl
jb
outsb
out
orl
cmp
fdivrs
test
jbe
out
mov
cmp
fnstsw
out
or
sti
xchg
or
cli
enterw
fwait
or
movsb
dec
scas
jo
mov
dec
lret
stos
insl
mov
fimull
xchg
clc
adc
fucomip
pop
xchg
pop
mov
insl
nop
or
push
jbe
pop
adc
or
inc
sbb
cmp
insb
push
adcb
or
cmp
mov
test
cmc
movsb
stos
sbb
jmp
lret
sub
and
lcall
push
mov
adc
scas
inc
cmp
jnp
sub
movsl
jg
mov
pop
add
int3
mov
data16
leave
rcr
insb
xlat
sub
push
fabs
outsb
sub
test
inc
xchg
inc
or
lret
jne
mov
push
outsb
mov
lods
in
mov
xor
jge
xchg
mov
adc
adc
inc
addl
jecxz
sar
xchg
pop
out
shlb
pop
stos
stos
xchg
in
pop
jbe
or
and
les
sub
cmp
xor
mov
sarb
mov
iret
pop
lret
cld
cmp
aad
mov
jg
andl
cmp
out
dec
fcomp
into
mov
jbe
cwtl
inc
stc
mov
pop
je
pop
push
xchg
push
inc
mov
sahf
jle
fwait
jo
pop
sbb
push
jnp
dec
lds
mov
pop
inc
inc
adc
std
icebp
les
push
xchg
mov
fwait
movsb
jbe
enter
mov
iret
xor
out
xchg
neg
mov
jnp
jb
enter
lods
push
jge
jp
add
rolb
push
sub
push
in
lock
mov
lods
lret
xchg
data16
xchg
jecxz
pop
mov
push
mov
frstpm(287
push
dec
mov
xchg
sub
inc
lds
dec
fucomip
push
mov
mov
test
enter
dec
out
xchg
add
test
movsb
mov
enter
cmp
pop
mov
jbe
imul
add
sub
scas
sbbb
bound
add
sbb
jnp
inc
test
outsl
hlt
stc
orl
mov
push
in
or
in
nop
add
data16
fistl
jp
xor
repz
xor
mov
or
sbb
stos
jns
xor
push
cwtl
pop
enter
mov
xchg
pop
xchg
adc
mov
adc
push
out
daa
mov
int
aad
stos
mov
xchg
fiaddl
dec
fcmove
out
xor
addr16
and
int3
stos
test
cli
mov
mov
enter
addr16
scas
mov
xor
lret
das
jb
leave
bound
xchg
mov
push
add
jo
orl
pop
mov
mov
dec
pop
shlb
inc
mov
add
dec
loopne
push
das
imul
mov
das
call
mov
inc
imul
je
sub
mov
into
and
xor
mov
shl
add
sub
dec
cmpsl
aam
mov
adc
jo
das
cmp
push
bound
push
inc
inc
xor
lods
in
add
arpl
popa
mov
fsubp
addl
push
lods
pop
xor
mov
lods
sbb
into
iret
test
fcmovne
fnstsw
sar
je
or
shrb
hlt
mov
sbb
adc
jnp
jae
pop
dec
adc
push
shll
std
mov
xor
jnp
mov
lods
shlb
ljmp
cmp
ret
fsubrl
pop
lret
fstpl
push
cmpsb
dec
cmp
xchg
repz
pop
xchg
sub
je
xchg
cmc
cmpsb
inc
sti
roll
add
pushf
outsl
popf
sub
mov
out
lds
fdivr
cmp
sahf
lea
cltd
dec
pop
lds
stos
push
inc
xchg
sbb
mov
mov
sbb
adc
int
sbb
xlat
jns
insl
push
movsl
pop
insb
jl
rorl
mov
sahf
in
decb
inc
adc
pushf
dec
loope
test
pop
ja
push
je
push
js
push
mov
fnstcw
mov
shlb
xchg
cmp
push
in
sub
mov
mov
mov
shl
adc
mov
cltd
arpl
out
adc
iret
fld
jns
scas
mov
jb
bound
xor
daa
sahf
sbb
inc
cmc
inc
jne
pop
xorl
addb
jns
cmp
or
and
out
pushf
sub
div
mov
and
mov
and
push
mov
in
adcl
xchg
add
mov
bound
lahf
adc
xchg
mov
xchg
mov
push
movsw
or
sbb
lahf
insb
aam
pop
xor
xchg
sub
mov
mov
cvtdq2ps
lcall
cmp
sti
rep
std
pop
adc
sub
adc
adc
in
out
mov
outsb
cmp
and
gs
xor
in
rol
cwtl
pop
cmp
adc
push
xchg
stos
push
inc
roll
jb
lret
test
xor
pop
jno
xchg
xchg
xchg
push
rorb
sbb
pop
imul
sbb
in
shrl
movsb
sti
inc
and
aam
pop
mov
adc
cmp
out
mov
pop
mov
xchg
jno
mov
or
sbb
inc
hlt
dec
adc
push
adc
sbb
sti
int
je
loope
lds
stos
push
call
sbb
adc
int
das
add
inc
cld
arpl
cmpsb
dec
xor
rorb
push
popf
lea
jmp
pop
lea
sub
repnz
dec
cmpsl
jo
sub
cltd
adc
or
push
ljmp
jno
repnz
fdivrl
fnstcw
int3
insl
in
cltd
inc
mov
push
mov
dec
ret
lret
xchg
mov
pop
xlat
je
cmpsb
dec
dec
subb
mov
push
shlb
into
sahf
and
out
rcrl
out
jnp
out
lods
jecxz
inc
mov
pop
mov
jmp
dec
push
mov
iret
fldcw
fcomp
push
sub
call
mov
in
mov
adc
jnp
stc
and
ret
loope
cmpsl
imul
jle
sub
test
movsl
or
mov
adc
adc
mov
arpl
inc
xchg
in
clc
dec
mov
xlat
out
arpl
out
xlat
divb
xchg
rcr
cmp
je
mov
ss
sub
pop
repz
loop
or
mov
shll
add
lea
ljmp
test
push
or
shr
out
xor
cmp
lahf
sub
movsl
sti
decl
fldl
aad
pop
jmp
es
shl
and
xchg
and
cld
lahf
testl
mov
pop
fwait
aas
sti
cmp
mov
in
fistps
neg
fucompp
inc
addb
mov
cltd
imul
into
xchg
leave
dec
mov
jecxz
testl
or
nop
rol
mov
imul
std
xchg
push
call
cld
pop
ficomps
jns
ret
mov
gs
pusha
lds
arpl
dec
adc
ja
jg
mov
mov
popa
sbb
ret
cmp
in
xor
shrl
xorb
dec
dec
sarb
sub
pop
jge
cmp
arpl
pop
dec
mov
shl
fists
pop
str
into
lret
jl
outsl
push
testl
push
rcrl
mov
cmp
sub
dec
sub
xchg
cmc
or
mov
jno
bound
push
test
jmp
daa
sbb
xor
insl
rol
repnz
sbbb
fnstenv
mov
sbbl
jecxz
jno
mov
shrl
js
and
pop
push
mov
jl
add
fsubrp
fxch
mov
jnp
repnz
test
mov
jmp
pop
pop
cmp
cwtl
outsl
sahf
mov
sbb
jnp
xor
jecxz
ret
add
cs
ds
pop
adc
jb
testl
and
pop
idivl
les
mov
or
ss
stc
or
in
push
cli
cwtl
sub
jmp
push
xchg
mov
iret
loope
shlb
test
jg
mov
pop
out
imul
pushf
cltd
and
xchg
add
test
fldcw
fnsave
mov
fmulp
adc
decl
cld
cli
inc
inc
lcall
and
out
ja
in
sub
sbb
xchg
inc
or
mov
cmpsl
ds
sarb
pusha
mov
std
cmp
inc
movb
jge
jno
push
cs
sub
jb
inc
sahf
cmpsb
test
or
hlt
adc
mov
cmpsb
int3
insb
sti
lock
lea
stos
cli
dec
and
dec
fdivl
mov
cli
pushf
jo
cmp
clc
shll
dec
cmp
popf
test
push
adc
mov
das
lock
lods
dec
dec
jno
imul
or
dec
fmuls
test
push
pushf
jp
dec
sbb
enter
fs
gs
cmp
and
push
pop
fmul
cwtl
mov
cwtl
jmp
add
push
jecxz
xor
xor
shrl
daa
flds
int
dec
pop
repz
or
and
pop
adc
lret
in
or
push
or
xor
ja
cmp
jae
mull
mov
shll
xchg
xor
sub
adc
inc
popf
out
adc
popa
jnp
insl
xor
inc
and
mov
xchg
in
mov
sahf
divb
ret
pop
data16
mov
sbb
imulb
jge
cmp
mov
hlt
lods
xor
adc
lahf
jnp
clc
pop
in
lods
dec
inc
sub
push
cmp
inc
adc
push
icebp
xor
idivl
push
mov
add
xlat
mov
pushf
jae
dec
cmpsb
ss
pushf
arpl
adc
sub
mov
push
movsb
cwtl
pop
ret
enter
dec
repz
add
imul
std
cltd
adc
in
test
mov
xchg
out
insl
lret
sbb
or
js
aas
repnz
xchg
add
es
movsb
jecxz
cmp
mov
inc
or
mov
add
inc
imul
sti
push
sarl
fildl
mov
mov
adc
mov
and
sub
inc
push
mov
jns
xor
xchg
inc
sbb
inc
and
push
fs
xchg
lock
mov
xor
cld
lcall
in
or
jge
push
push
pop
fsts
outsl
adc
fcomps
pop
dec
push
jae
insl
sbb
test
inc
js
lds
aas
dec
cwtl
out
std
out
aam
lcall
leave
imul
aad
icebp
mov
lock
push
scas
cmp
inc
je
popa
test
xchg
add
mov
clc
sahf
mov
clc
ja
dec
popf
inc
cltd
imul
ljmp
xchg
xchg
xchg
lahf
call
fcompl
and
inc
arpl
push
or
mov
leave
data16
xchg
or
lahf
fmuls
lahf
leave
scas
dec
ljmp
adc
jp
scas
lods
pop
int3
or
or
mov
push
imul
bnd
out
mov
sbb
mov
xlat
cmp
pushf
out
pop
rcrb
and
sti
mov
fstpl
cli
dec
sbb
cmp
add
es
fistpll
test
call
and
mov
bound
std
test
insb
cli
decl
ja
dec
out
stos
mov
fsubrl
lret
fstl
xlat
adc
out
sbb
fs
es
aaa
fiaddl
mov
cmp
inc
popf
cmpsl
push
imul
sbb
into
test
mov
or
insl
adc
xor
xchg
cmp
jb
xchg
pop
in
clc
mov
add
mov
outsl
dec
loope
or
in
mov
inc
mov
and
icebp
mov
mov
xchg
das
in
pop
lock
icebp
out
jle
mov
jbe
and
xor
test
in
or
inc
mov
movl
and
movsl
push
aad
mov
xor
dec
push
stc
popa
sub
dec
lcall
dec
in
adcl
sbb
jge
xchg
pop
inc
mov
das
adc
and
pusha
popa
mov
pop
inc
aas
aad
mov
sub
ds
mov
cmpsb
jbe
out
xlat
inc
mov
ret
and
inc
xor
xchg
call
cmp
add
xor
sbbb
jae
xor
inc
xor
jmp
arpl
loop
pop
xor
cmp
push
inc
xchg
fstpt
adc
cmp
lock
jg
jle
cli
pop
out
inc
add
cwtl
mov
and
out
inc
das
insb
cmp
sub
nop
pop
mov
popa
mov
add
jle
les
pop
mov
les
in
les
stos
mov
jb
inc
mov
dec
scas
xchg
insl
stos
je
out
jns
ljmp
push
fcoml
dec
movsb
jne
cli
cwtl
mov
sbb
or
and
pop
and
adc
dec
inc
pop
pop
addl
cmp
call
sbb
subl
cmp
jecxz
lea
stc
adcl
sbb
inc
mov
inc
enter
shl
mov
jnp
daa
test
dec
pop
xlat
lods
jg
cmp
xor
pushf
push
lock
in
push
xchg
sub
pop
sbb
adc
adc
dec
repz
rorl
fwait
adc
test
cmp
insl
mov
lds
rclb
inc
push
out
sub
xchg
ss
inc
imull
fcom
and
dec
and
jg
aaa
add
mov
sbbl
inc
pop
test
mov
dec
and
xor
dec
dec
std
out
and
and
arpl
cwtl
pop
pop
and
sub
in
push
dec
out
jmp
sbb
or
faddl
sub
repz
and
call
jne
in
das
pop
mov
add
data16
stos
inc
jmpw
xchg
mov
mov
loop
mov
xor
mov
cmc
pop
pop
cmp
scas
jle
sbb
mov
pop
mov
xchg
popa
aas
rcll
ds
in
notb
testl
popa
push
enter
cmp
fsubl
fstpt
pop
arpl
push
lret
mov
or
cli
test
aas
jl
xor
cmp
test
add
sahf
call
dec
jg
mov
push
mov
cwtl
aaa
jbe
ds
mov
scas
push
mov
cmpsl
xor
mov
adc
fsubrs
mov
imul
sbb
jnp
mov
imul
shll
xor
mov
sbb
add
addr16
and
mov
push
leave
mov
mov
stos
jns
push
les
mov
sbb
inc
add
xchg
adc
inc
movsb
repnz
mov
fadd
push
mov
sub
xchg
inc
loopne
push
xchg
mov
pop
cli
cmp
aam
inc
cli
mov
stos
xchg
pop
js
adc
inc
push
push
in
outsb
push
out
in
mov
jo
cld
leave
int
icebp
push
es
int
cmp
scas
mov
xor
jno
cmp
setle
jl
sub
jmp
es
insb
cmpl
test
sbb
mov
jle
ljmp
insl
sahf
sbb
adcb
jge
cmpsb
das
push
push
add
int3
sub
popf
pop
cmpsl
outsb
cld
loopne
pop
movsl
or
cmpsl
test
fmulp
popa
dec
fwait
add
mov
cwtl
push
jno
cmp
or
stos
mov
jg
inc
insb
inc
test
mov
je
adc
and
arpl
sbb
cmpsl
inc
dec
inc
inc
dec
fnstenv
pop
sar
adc
xor
out
cs
lret
pop
pop
iret
dec
mov
dec
xlat
ret
jnp
cmp
mov
sbbb
les
adc
mov
add
jg
aam
fs
icebp
push
std
adcl
mov
mov
sbb
lret
pusha
cli
gs
xchg
sbb
dec
xor
sbb
push
pop
sub
ret
dec
dec
pop
jecxz
add
xor
push
js
fcmovnb
cmpsb
les
jno
sbbb
or
aas
int
clc
loope
and
dec
dec
xor
sbb
sbb
mov
dec
inc
mov
lret
out
mov
pop
xchg
popf
push
or
stos
xchg
inc
sbb
std
or
cmpsb
sub
insb
and
mov
roll
test
cltd
andb
out
repz
sbb
inc
into
push
rcl
xor
outsb
jecxz
lea
ret
cmc
xchg
shl
mov
cmp
inc
lock
scas
imul
xor
cmp
fdecstp
jae
out
aaa
lahf
in
jecxz
sub
sub
and
sbbl
jg
andl
rcrb
jmp
pushf
gs
mov
in
jg
loope
iret
lds
subl
fcoms
dec
stos
repz
lock
test
adc
pop
pop
lock
insb
add
sbb
cmp
subl
add
mov
lahf
fiaddl
push
xor
jmp
lock
in
outsb
iret
loopne
xor
pop
call
cmpsl
jge
mov
dec
aad
insl
rclb
mov
shr
xor
stos
or
movsb
cmp
pop
ret
push
lods
mov
sub
pusha
daa
outsl
rcrl
push
cmp
repnz
gs
xchg
xchg
adc
mov
fdiv
sbb
insb
mov
lcall
sub
jle
pop
dec
pop
cld
lock
push
icebp
cmp
xchg
aas
and
inc
fwait
aad
pushf
popw
push
sub
mov
mul
fnsave
and
shrl
push
sbb
xlat
sarb
push
jecxz
into
mov
push
xchg
fcoml
jp
stos
and
loop
fsubs
inc
xchg
hlt
xchg
sahf
xor
fsubr
lret
mov
mov
scas
shll
jno
and
lods
push
sbb
aad
push
mov
pop
out
movsl
jle
dec
test
in
push
mov
push
fdivrs
sar
movl
sbb
xchg
imul
out
mov
dec
sbb
jb
dec
in
fwait
aad
dec
ret
sbb
imull
inc
loope
mov
sub
aam
push
mov
ss
popf
outsl
dec
dec
push
jge
xchg
push
js
fyl2xp1
mov
xor
into
test
or
ret
outsl
and
fists
cmc
arpl
inc
sbb
cmpsl
fcomip
jl
shl
jle
cmpsb
mov
xor
jno
call
ljmp
jb
mov
jne
jg
sub
pop
push
xchg
xor
loopne
sbb
test
inc
jnp
cmp
jb
sub
cltd
pop
test
push
mov
shll
movsb
dec
scas
push
mov
fsubrl
push
jo
sub
cmp
dec
inc
cmp
mov
lcall
pop
std
xchg
mov
sbb
xor
push
rcl
ss
dec
pop
xor
mov
fcmovnbe
jo
or
xlat
push
jmp
sub
pop
and
insb
rorb
faddp
cmp
faddl
sbb
dec
pop
faddp
pop
lret
notb
xchg
jbe
and
mov
mov
push
inc
enter
xlat
push
pop
rol
sub
adc
inc
dec
xlat
pop
jnp
sbb
pop
jle
pop
jno
fmull
adc
inc
mov
inc
rcrl
fildl
imul
dec
push
out
cvtdq2ps
mov
mov
dec
sbb
xor
xchg
and
icebp
sbb
mov
inc
or
jns
inc
aam
sbb
nop
ficoms
neg
int
sbb
data16
es
test
xchg
and
mov
test
das
cmp
mov
pusha
lret
js
sub
outsl
hlt
push
icebp
or
inc
leave
rcrl
mov
test
xchg
sbbl
sub
and
into
inc
sub
in
push
xchg
mov
xor
subl
cmc
int3
loopne
mov
pop
arpl
shl
sub
push
inc
adc
jnp
loopne
xchg
rcrb
mov
add
mull
jbe
je
inc
nop
adc
movsl
or
fsubrp
xchg
xchg
cmp
repnz
pop
iret
pop
xor
jno
imul
ds
pop
sbb
shlb
and
call
mov
adcl
jae
inc
pop
or
cmc
popf
hlt
or
mov
push
popa
inc
push
into
icebp
and
jo
cmpsl
push
lods
out
inc
dec
mov
js
add
cmp
pop
lods
mov
cmp
mov
outsb
test
push
ret
push
fldt
dec
mov
xchg
mov
xor
mov
lret
or
or
push
adc
fstpl
test
or
in
mov
push
jmp
push
mov
jecxz
rcrl
test
pop
push
cmpsl
inc
gs
sbb
rcll
movsb
jmp
inc
jbe
fimull
out
push
cmpsb
xor
mov
inc
icebp
inc
jg
sub
pop
and
mov
push
hlt
pop
xor
test
ja
add
and
mov
lods
jg
mov
adc
aaa
std
pop
je
adc
cmp
pushf
fistpll
cmp
jge
inc
push
stos
les
push
or
jns
mov
call
mov
loope
cli
loope
sub
stc
idivb
imul
push
outsb
les
xor
xor
add
mov
stos
mov
dec
fs
inc
add
stc
test
popf
xor
cmp
sti
cmp
pop
push
lods
fcmovne
icebp
mov
inc
pop
ljmp
sbb
rorl
dec
mov
jmp
cmpsl
mov
mov
pop
jo
aas
dec
inc
stc
xor
stos
es
aas
rcrl
or
sbb
sbb
adc
or
std
pop
scas
mov
pop
pop
cmpl
inc
test
dec
sbb
lret
aad
addb
mov
dec
mov
loope
nop
scas
cmpsb
js
out
scas
test
scas
pop
lret
movsb
jns
jmp
fldl
rcr
dec
popa
std
inc
mov
jge
sbb
outsl
popa
or
push
cld
imul
fisubl
jle
jne
inc
sub
or
sahf
or
xchg
int3
cmp
insl
cltd
imul
or
std
jle
push
enter
fcompl
aas
psubd
stos
sub
mov
push
xor
sub
mov
xor
int3
xchg
sbb
lahf
mov
mov
dec
xchg
mov
je
cmp
test
sarl
loopne
or
cmp
lea
cmp
add
fidivl
jg
cmp
push
cmc
mov
ljmp
fisttps
and
inc
mov
shrb
int3
out
dec
mov
fsubrl
jb
stc
inc
xchg
sbb
lcall
jne
in
test
aas
ret
push
xchg
dec
push
rdmsr
push
and
movsl
mov
xchg
fs
inc
pop
stos
jbe
loop
in
fsubs
sbb
int3
mov
mov
mov
fnstenv
mov
push
add
xchg
test
and
mov
movsb
push
and
repz
push
inc
jae
or
pop
leave
or
nop
orl
jg
cmp
fcompl
outsb
add
nop
xchg
fcoml
cli
adc
imul
xor
repz
fsub
adc
xchg
leave
adc
push
pop
mov
ret
iret
xchg
xor
out
mov
movsl
sub
pop
jbe
fisubrs
sub
push
mov
test
or
pop
mov
hlt
sbb
shl
or
jns
out
mov
es
in
inc
mov
test
dec
mov
fnsave
inc
sahf
dec
adc
call
int
fcomi
sub
shl
jge
scas
xor
or
pushf
dec
or
fcomip
pop
xor
push
adc
out
mov
cmp
mov
stos
xchg
outsb
push
xor
in
bound
sub
divb
jo
cmpl
sub
stc
dec
cmp
add
jmp
popf
cld
xor
incb
stos
hlt
or
mov
xchg
aad
inc
dec
stc
mov
ret
nop
mov
jg
mov
ds
popa
adc
jb
cltd
pop
adc
roll
gs
dec
nop
cmp
test
nop
pusha
popa
or
cmp
xchg
push
dec
cltd
and
mov
cs
insb
add
outsb
ret
ret
jg
test
scas
push
repz
jne
xchg
sti
push
inc
dec
xchg
xchg
pop
insl
jecxz
inc
cwtl
mov
adc
xor
jle
mov
stc
sarl
push
sbb
in
adc
cmp
test
addr16
je
and
push
xor
cmc
repz
sbbl
jne
inc
xor
clc
or
das
or
xchg
or
pop
fadd
sbb
sub
pop
sub
imul
jp
mov
stos
push
xor
pushl
mov
loop
xor
lahf
mov
inc
out
xchg
add
into
jns
mov
jns
dec
pop
and
sbb
push
dec
xor
bound
ret
js
sub
je
or
lret
lock
rcrl
shl
insl
dec
es
loop
add
cmp
and
xchg
push
in
mov
mov
in
aad
and
lds
pushf
popa
icebp
movb
cmp
xor
and
iret
mov
xchg
scas
ficompl
and
mov
mov
mov
pop
aaa
or
lock
push
and
nop
cli
popl
aaa
mov
ja
pop
mov
pop
lock
sarb
sub
cmpsl
mov
lahf
sub
add
push
mov
sbb
mov
sbb
push
xorb
mov
test
mov
inc
add
mov
fs
xchg
stc
stc
aaa
imul
mov
bt
or
rcrl
shrb
sti
popf
int3
xchg
xchg
fucom
pop
outsl
mov
loope
arpl
fimull
adc
das
dec
sbb
rcl
jge
lods
cmp
and
xchg
dec
mov
mov
mov
in
add
hlt
shlb
and
sub
imul
push
and
xor
popa
cmp
lods
add
lock
out
lret
test
cmp
push
push
adc
pop
xor
andb
pop
xlat
cs
faddl
dec
add
add
lahf
out
and
gs
pop
xor
xchg
fisttpl
nop
mov
mov
mov
jg
or
sbb
xchg
jns
lods
pop
sbb
sub
lret
and
dec
add
dec
inc
add
les
sub
mov
cmc
sub
inc
xchg
add
dec
enter
test
shll
dec
insl
pop
inc
pop
shll
subb
push
in
in
rcrb
dec
mov
ffree
fcoms
pusha
aaa
ret
add
jmp
sbbl
hlt
push
call
xchg
xor
lcall
jle
cli
lahf
in
sub
sub
iret
mov
jbe
out
test
push
mulb
aas
stc
pop
repz
rorb
adc
mov
sbbl
shll
or
jns
jne
dec
in
loopne
out
inc
ljmp
mov
sti
aas
mov
hlt
xlat
inc
stc
aam
mov
and
insb
xchg
sub
and
pop
pop
in
mov
xor
jmp
call
cmp
mov
ja
in
sbb
jmp
mov
pop
inc
jne
pop
cmpsl
fs
cmp
repnz
pop
xchg
mov
xlat
loopne
push
psubsb
mov
lea
inc
lcall
addr16
xor
loopne
mov
sub
inc
je,pn
xor
push
mov
cmpsb
mov
mov
dec
pop
das
dec
jle
mov
movsl
push
jnp
outsb
ret
repz
sub
and
out
mov
inc
scas
das
fistl
scas
insb
shrb
inc
pop
lock
mov
add
mov
gs
outsl
out
les
loopne
inc
test
icebp
jne
insb
pusha
sbb
fwait
enter
test
dec
pop
pop
loop
sub
sub
dec
ds
ja
fnstenv
sbb
mov
adc
xchg
adc
xor
mov
shlb
popf
in
mov
mov
fidivs
jbe
arpl
test
push
jecxz
out
sbbl
xchg
sbb
xlat
out
and
adc
mov
pop
lock
mov
pop
lahf
push
inc
sbb
or
fcomps
add
cli
adc
sub
lret
push
pop
jl
mov
sbb
cs
aas
push
shl
inc
frstor
repz
repnz
fnsave
testl
fnsetpm(287
push
lods
push
in
fisubs
xlat
push
test
push
sbb
js
movsb
cmp
pop
ret
outsl
or
pop
iret
fwait
xor
jl
movsl
or
sub
fadd
stos
xchg
ret
and
and
ds
aas
pop
sbb
jge,pn
cmpsb
stos
cltd
aas
adc
mov
out
leave
cs
call
jecxz
jge
loopne
jae
add
sti
sti
mov
call
cmp
push
add
dec
xor
jecxz
mov
dec
mov
cmp
movb
jle
scas
mov
inc
sub
cmpsb
push
aaa
cs
test
and
add
inc
xchg
and
shr
repz
cmpsb
mov
mov
sbb
pop
aam
subb
adc
sbbl
aam
cld
jae
mov
call
shr
sbb
mov
lcall
iret
inc
cmpsb
jne
jecxz
scas
push
jecxz,pt
mov
lock
add
sar
xchg
loopne
add
mov
sub
divl
frstor
mov
roll
pop
outsl
sbb
cmp
lea
push
test
mov
dec
jns
dec
inc
lcall
in
jo
int
push
xchg
push
jno
mov
inc
cmpsl
jge
das
pop
sbb
fidivrl
outsb
stc
cmp
mov
add
ljmp
test
dec
dec
addl
das
sub
je
loopne
cltd
push
inc
add
cmp
jle
aaa
enter
shlb
mov
inc
lcall
xor
cmpsb
adc
adc
pop
pushf
cmc
addr16
push
mov
pop
mov
test
cmp
mov
loop
mov
sub
jnp
sub
pop
dec
repz
lahf
adc
mov
jbe
or
or
std
push
xor
lods
pop
sub
subb
cmpsb
cmp
adc
les
or
sub
test
xchg
mov
aam
mov
push
add
inc
pop
xchg
sbb
mov
add
test
iret
data16
pop
jp
stos
mov
mov
paddb
mov
int3
fiadds
and
out
inc
rcrb
inc
jl
jmp
ljmp
pop
and
push
jge
push
scas
mov
loope
mov
rcr
les
lcall
cmp
push
add
sbb
xchg
sub
hlt
imulb
ljmp
popa
int3
shlb
jae
lods
cltd
pusha
xchg
adc
xchg
and
imul
adcl
movsb
sbbl
cld
lcall
in
xchg
xchg
mov
pushf
sbb
pop
icebp
es
dec
or
push
sub
pop
insl
je
sbb
or
std
sub
lea
jp
mov
enter
mov
loopne
enter
je
sub
mov
sbb
lods
cld
pop
sahf
mov
mov
cmpsl
aad
add
jge
repnz
ds
or
pop
xchg
lods
mov
xchg
cs
out
test
repnz
cld
cmp
lods
jmp
jno
popf
mov
scas
adc
pop
jns
lret
cmpsb
cmc
cmc
sarl
add
mov
and
mov
in
shrl
into
dec
shrb
fstpt
mov
lret
lret
xorb
inc
cmp
xlat
fcmovne
leave
push
nop
loope
stos
fistpll
sub
sbb
std
or
sub
setb
enter
inc
repz
aam
cmpsl
mov
jp
negl
fnstcw
std
jo
jae
sbb
dec
push
lea
or
xchg
lret
pop
sub
sub
or
mov
mov
or
in
fdivl
pushf
pushl
es
jg
mov
xor
mov
dec
movhps
aad
out
jae
loope
mov
or
int
lcall
loope
xchg
mov
jmp
and
lock
cmp
xlat
shlb
cmp
fdivl
jmp
lahf
jmp
shlb
scas
fwait
lods
subl
stos
fsubs
scas
jno
divb
push
and
icebp
adc
stc
rol
aaa
cmp
xchg
fcmovnb
loop
cmp
gs
fwait
out
sahf
xchg
and
mov
jge
inc
stos
xchg
in
sbb
push
ja
jno
icebp
movsl
pop
cmc
arpl
movsl
push
fisubrs
hlt
or
inc
mov
jns
xlat
shlb
sbb
jp
cmp
lods
out
out
fwait
bound
movsl
out
loop
xchg
mov
and
adc
or
mov
xor
fidivs
shl
mov
pop
jnp
sarl
push
inc
loope
adc
dec
loope
xchg
push
sarb
xor
insb
sbb
sbb
jle
cmpsb
and
pop
adcb
mov
loop
mov
push
out
jo
out
xchg
inc
mov
cltd
das
inc
cmpsl
mov
cmpsl
clc
jo
pop
subb
mov
add
cmc
or
adc
push
jb
cmc
dec
pop
push
fs
inc
movsl
std
jb
cltd
fbld
insb
mov
xchg
dec
bnd
aas
shl
mov
arpl
in
cmp
roll
in
sub
les
xchg
jl
pop
out
pop
sbb
dec
sub
cmp
aaa
dec
xchg
icebp
and
jbe
jbe
xor
dec
loop
rcrl
cmpsb
jle
sbb
aad
shrl
shlb
mov
cld
cmp
fsubr
inc
xchg
pusha
fsubr
push
addl
fs
out
dec
pop
jecxz
out
mov
inc
loop
pusha
or
jg
mov
imul
mov
sbb
xor
mov
jg
sub
mov
fidivl
out
xchg
les
sti
data16
cmp
cltd
or
push
je
stc
sub
jg
cmc
lea
in
jo
into
xchg
fsubrl
adc
es
add
and
negl
je
movsl
jmp
inc
lock
cwtl
push
add
insl
or
pop
xor
push
in
pushl
lahf
jbe
adc
jecxz
push
mov
sbb
cltd
or
mov
ja
jmp
pusha
mov
sbb
cli
sbb
push
and
dec
movsl
rorl
ret
jp
add
xchg
or
lret
pop
jne
das
push
pop
mov
adc
ret
mov
xor
sub
les
mov
decb
inc
fiadds
xor
inc
lahf
cwtl
popf
or
fwait
pop
sbb
xchg
mov
repz
lcall
insb
imul
jnp
sahf
xchg
sub
lret
into
sub
jmp
stc
or
es
lock
jae
dec
pushf
push
add
pop
es
adcl
jno
outsb
push
xchg
iret
pushw
mov
jge
mov
add
xchg
clc
mov
lods
scas
jo
aam
js
mov
loope
fidivrs
dec
pop
sahf
jl
mov
mov
shl
ficoml
loop
mov
fidivrl
ss
push
mov
loopne
jb
outsl
ret
fists
sar
repnz
cmp
mov
and
xor
mov
cmpsb
xchg
inc
pusha
or
and
aad
aas
dec
xchg
dec
insl
add
mov
xor
daa
adc
pop
je
out
cld
xor
sbb
push
mov
mov
push
and
psllq
out
movsl
add
jge
int3
testl
dec
arpl
test
stc
sbb
loop
aaa
into
imul
std
cltd
push
insl
lret
push
stos
adc
divb
push
xor
push
and
shll
sti
pop
pop
imul
fs
mov
or
mov
cli
xchg
jae
negb
int3
stos
cltd
subl
fwait
mov
pop
adc
adc
adc
out
fildl
jo
data16
ret
enter
adc
lea
sti
xchg
pop
mov
jmp
pop
outsl
mov
adc
add
orl
jo
push
push
mov
adc
mov
fs
rclb
lret
pop
mov
push
jmp
push
pop
lock
xorl
push
adc
push
mov
lods
cmp
mov
out
adc
lret
bound
cmp
xchg
fsubs
or
popf
inc
nop
out
pop
inc
and
jb
aam
and
fiaddl
out
xchg
push
or
es
and
scas
inc
dec
orb
push
push
in
adcl
xor
in
loope
out
dec
jmp
add
sbb
xchg
outsb
hlt
lret
loope
or
ret
mov
sub
dec
mov
outsl
daa
fwait
jbe
inc
fisubl
xor
repnz
xor
mov
stos
mov
sbb
jmp
testl
push
inc
or
js
scas
mov
aad
mov
sbb
clc
out
rol
lds
shll
add
adc
and
fcmovnu
aad
push
leave
mov
enter
and
hlt
iret
repnz
pop
mov
sub
jbe
stos
test
insb
int3
dec
int3
fiadds
sbb
imul
adc
daa
mov
cmpsl
xor
sbb
mov
stos
xor
push
push
add
push
shl
enter
mov
insb
jo
mov
shlb
cmp
jl
pop
cmp
cmc
sbb
ds
push
mov
and
stc
push
sbb
sbb
dec
sub
loope
int
lea
daa
cwtl
dec
lods
jmp
iret
imul
shl
and
cltd
pushf
out
inc
push
enter
adc
mov
pop
push
add
fdivs
cmpsb
ds
dec
pop
dec
jne
push
push
movsl
hlt
fdivr
out
xor
add
add
sub
test
jb
push
xorl
pushf
jg
or
out
adc
cmc
or
call
fmuls
out
jmp
out
out
xor
xchg
push
push
adc
in
mov
nop
xchg
pop
scas
lret
data16
clc
cld
pop
cmp
lds
mov
mov
cmc
or
je
paddq
lret
hlt
in
test
mov
insl
cmp
popf
push
shrl
jno
js
xchg
mov
lret
aaa
fldenv
inc
fidivrl
push
xor
or
mov
fmuls
jmp
pop
cmp
or
inc
es
sbb
mov
inc
pop
jns
mov
into
clc
pop
or
push
fisubl
pop
imul
mov
lret
movsl
repz
jl
cltd
sub
sti
ds
cmp
adc
mov
and
and
add
cli
addl
jns
test
sub
sub
sbbl
jnp
inc
loope
push
sub
dec
pop
sub
mov
sbb
or
mov
jmp
int3
xchg
push
mov
dec
lret
mov
mov
pop
testl
jg
lock
adc
xor
sbb
psrlq
dec
dec
sbb
clc
gs
loopne
je
inc
scas
clc
repnz
movsl
fisttps
jbe
xchg
pusha
dec
fisttpl
cmpsl
into
loop
mov
aad
sub
xor
jns
push
push
mov
cmp
aad
das
outsl
in
push
xchg
push
es
inc
mov
loope
call
and
rorb
outsb
push
mov
dec
pop
loope
popa
iret
lcall
push
fidivs
cmc
mov
ret
fdivrl
repz
xchg
sub
dec
sbb
mov
cwtl
sub
mov
jmp
fs
cmp
scas
stc
je
jnp
jg
xor
jg
pop
mov
mov
bound
sub
pop
mov
add
es
sbb
cmovb
stc
and
xor
mov
dec
xchg
push
add
fsubrs
mov
push
and
mov
dec
and
mov
data16
mov
lea
jns
xchg
js
rorl
jo
hlt
pop
push
mov
inc
cmpb
lret
xlat
cmp
mov
xchg
push
mov
mov
mov
jecxz
xlat
jmp
cmp
sti
mov
adc
push
sub
loope
sti
push
scas
mov
inc
jno
cmp
jae
fadds
cmp
icebp
inc
add
inc
mov
sbb
int3
mov
stos
lds
pop
lea
sbb
add
mov
adc
test
sub
clc
pop
call
into
bound
in
lds
imul
popf
std
imull
gs
mov
roll
int3
xchg
xor
mov
jecxz
push
inc
mov
lods
iret
inc
push
jbe
clc
xchg
in
stos
push
sub
dec
daa
clc
clc
add
test
iret
pop
mov
sarl
pop
xor
inc
lock
push
icebp
movsl
jb
xlat
loopne
ficoml
or
xor
jp
dec
cmp
xor
pusha
xor
push
push
in
cmp
adc
int3
js
xchg
adc
je
dec
xor
xor
fisubrl
push
movsl
sub
test
xchg
loop
je
movsl
pop
in
test
shl
cmpsb
jg
and
mov
mov
jbe
mov
pop
inc
adc
xor
xchg
aam
dec
push
mov
mov
test
mov
jle
data16
test
or
adc
lcall
repnz
mov
jae
ljmp
ficoms
or
jbe
mov
loop
or
sub
add
push
pop
stc
sub
incb
add
adc
js
dec
adc
adc
scas
stos
push
push
out
jo
pop
out
into
add
push
jne
mov
dec
dec
add
in
dec
dec
hlt
xlat
popa
dec
dec
push
sbbl
fcoml
or
rorb
jns
icebp
roll
mov
mov
rcl
mov
fmull
jmp
pop
cwtl
jl
shl
pop
lahf
daa
divl
sub
xchg
scas
fldcw
fs
jbe
ja
cmp
sti
les
in
clc
pop
in
and
cmp
jb
sahf
outsb
pop
aaa
sbb
mov
inc
xchg
ja
in
jl
add
gs
or
inc
das
lcall
pusha
outsb
addr16
push
test
xchg
out
addr16
repnz
popa
lret
and
push
in
xorb
dec
pop
clc
sub
mov
enter
fsubrp
or
sbb
lock
cmp
adc
adc
test
pop
jae
aad
xor
cs
aaa
mov
mov
jne
cwtl
decl
icebp
add
popa
negl
fbstp
adc
out
sbb
orl
mov
aad
mov
sahf
fwait
adc
pop
movsl
iret
data16
jge
nop
inc
ss
call
or
jmp
pop
xchg
add
mov
ficomps
mov
rclb
cmpsl
or
mov
mov
xchg
mov
fstp
and
imul
or
adc
jecxz
pop
cmp
jl
rorl
or
jl
lea
pop
lahf
cwtl
and
js
cmp
test
xchg
incl
xchg
sbb
dec
repz
add
dec
xchg
pop
xor
popa
loop
pop
cltd
cs
data16
mov
in
pop
int
add
xchg
lods
fldt
sbb
sbb
in
data16
pop
lret
mov
dec
cli
imul
fisubs
cwtl
jl
leave
es
add
dec
dec
andl
xchg
mov
cmp
pop
test
pop
sbb
pushf
call
and
fimull
insl
add
shl
mov
push
jg
cmp
fs
stos
inc
add
clc
adc
and
and
out
push
adc
lahf
mov
repnz
and
ljmp
inc
popa
gs
cmc
pop
int
mov
inc
jae
mov
scas
or
and
ficoml
xchg
or
fistpl
fistpl
inc
pop
es
in
aaa
push
cli
lds
subl
repnz
or
inc
mov
mov
loopne
and
push
push
or
sbb
adc
pop
cmp
ret
jp
xchg
call
inc
loopne
fadd
addr16
in
mov
mov
ljmp
jp
push
out
and
sbb
rcrb
fisubl
shrb
lds
lods
pop
jmp
cmpsl
dec
jecxz
cli
testb
test
adc
fcoml
std
mov
jo
push
xchg
inc
push
dec
mov
and
ret
pusha
mov
fadds
inc
cli
dec
sbb
sub
pushf
cmp
pop
in
repnz
aam
and
in
mov
fdivp
xor
lods
jb
mov
jg
sub
enter
add
dec
add
xchg
sub
cltd
lret
jp
lcall
pop
popa
dec
aam
xchg
push
popw
out
iret
xchg
addr16
mov
pop
adcb
imul
call
popf
outsl
add
fnsave
cmp
cmpsb
std
xor
negb
into
xchg
mov
mov
and
cmpsl
sarl
lods
dec
fbstp
into
repnz
or
loopne
dec
sub
das
pop
mov
dec
mov
mov
lcall
pop
sub
xor
sbb
les
cmpsb
pop
or
mov
push
pop
xchg
lods
movsb
addr16
pop
call
mov
and
paddq
test
lods
inc
popa
pop
cs
pusha
cwtl
scas
pop
add
pop
mov
push
mov
sbb
sarl
mov
mov
pop
or
mov
push
or
aad
lea
xchg
inc
fstpl
sbbl
addb
cmp
sbb
mov
scas
fsts
enter
push
scas
in
jp
ja
shrb
push
repnz
push
adc
insl
xchg
add
dec
cmpsb
fs
sub
not
repz
jg
fwait
sti
adc
and
dec
jp
dec
and
popf
push
pop
hlt
js
testb
repnz
mov
roll
into
loope
mov
pop
loop
out
pop
xor
sub
pop
stos
bound
addr16
shll
or
cmpsl
sbbb
jl
outsl
mov
and
push
or
mov
hlt
xor
aad
mov
neg
popf
mov
popf
test
outsb
xchg
fwait
sti
xor
mov
or
jecxz
inc
mov
shll
cmp
mov
cmp
gs
xchg
pop
rcr
mov
mov
out
ja
jnp
dec
xor
pop
loopne
cwtl
rcl
sbbl
lret
pop
mov
sub
les
dec
dec
data16
int
adc
sub
mov
adc
in
out
adc
cmpl
call
xor
outsl
lret
insl
add
cmp
insb
ss
sub
cmp
mov
pop
lret
cmpb
xor
hlt
popa
jns
int3
mov
push
fdivrl
js
sub
test
pop
es
push
aam
icebp
ret
call
je
fs
in
add
mov
andl
mov
sbbb
push
mov
inc
mov
faddl
or
or
stos
and
pop
push
lret
cli
nop
negb
scas
dec
imul
pop
mov
rorl
push
shll
or
loope
jnp
out
lea
mov
mov
xchg
mov
jg
std
nop
fcoms
popa
sahf
bound
in
xor
sub
push
shr
addr16
sbb
stos
jl
cmp
mov
jg
in
sub
fucomip
xchg
mov
inc
pop
and
lahf
inc
cmp
or
mov
repz
or
xlat
inc
mull
clc
mov
shl
jbe
mov
dec
lock
fdivr
addr16
add
jmp
or
push
jg
rolb
leave
inc
add
jns
cwtl
cmpsl
hlt
repnz
sub
jge
mov
inc
jns
xchg
mov
sub
xchg
adc
rorl
es
mov
jecxz
dec
daa
es
push
sub
cli
push
insl
cmp
popf
adc
repz
mov
fidivrl
lods
ja
xchg
push
and
or
sub
das
cmp
add
sub
mov
jns
sub
xchg
sar
int
dec
loopne
sub
jbe
jp
xor
pop
cs
lcall
aaa
mov
cmc
popa
das
inc
arpl
push
mov
push
fildl
cmp
notl
dec
xchg
lret
mov
push
sub
inc
ss
fldenv
and
pop
cltd
jge
lds
cmp
lods
mov
inc
push
in
stc
dec
fdivr
lea
into
das
cmp
enter
testb
shll
xchg
mov
or
xor
in
imul
scas
xor
fdivrp
add
in
jae
adc
add
xor
xchg
gs
sbb
cmpsb
dec
loop
cld
sbb
rcrl
or
pusha
mov
rclb
add
orl
adc
imul
dec
or
mov
bound
dec
lret
xor
push
jo
scas
inc
push
xchg
dec
pop
xor
test
sub
mov
je
mov
sbb
imul
mov
popf
xor
mov
aad
sub
cmc
mov
jae
les
notb
dec
or
fdivr
adc
push
lret
ss
cmpb
and
imul
cli
mov
fisubl
mov
icebp
gs
mov
inc
dec
lcall
pop
sbb
orl
push
and
cmpsb
stos
dec
std
cltd
call
mov
std
sti
imul
adc
nop
gs
mov
out
shll
adc
mov
mov
rcll
and
in
call
push
sbbl
sbb
imul
inc
imul
call
mov
mov
mov
mov
callw
mov
repnz
and
sti
xor
adc
adc
lds
inc
mov
mulb
lcall
jge
or
stc
icebp
inc
sub
iret
pop
sahf
add
dec
or
mov
adc
lock
lds
ja
cmp
push
sbb
jb
scas
cmp
cs
std
inc
mov
mov
or
mov
mov
adc
sub
pop
push
insl
dec
sarb
es
add
es
andl
into
mov
cmc
xchg
mov
out
test
fstpl
fwait
mov
shll
ds
sub
es
dec
push
jmp
or
and
dec
push
outsl
lock
sbb
daa
inc
dec
mov
pop
scas
aaa
add
or
nop
loop
mov
lock
adc
push
stos
cmp
bound
das
adc
inc
aas
xchg
jns
mov
jg
sbb
push
push
ljmp
ja
aas
and
outsl
sbb
xor
stc
push
imul
scas
jno
push
push
mov
and
daa
sub
push
daa
mov
adc
mov
call
cmp
xlat
dec
fdivp
mov
cs
loopne
in
adc
sub
adc
mov
xchg
xchg
leave
pusha
mov
mov
gs
and
aaa
fadd
inc
dec
xor
xor
and
inc
fs
insb
jns
inc
fbstp
pusha
or
mov
loopne
sub
iret
jecxz
stc
fistpl
test
xor
sahf
xor
xor
sbb
inc
dec
in
gs
sub
insb
mov
incb
mov
mov
jno
jg
je
push
fildll
jge
lea
imul
jns
scas
mov
lods
mov
in
inc
mov
fidivrl
shll
add
xlat
out
aad
test
pop
addr16
xchg
or
xor
subl
push
lcall
jmp
mov
pmulhw
je
add
sbbb
add
shlb
jmp
mov
jns
fs
dec
data16
rorb
outsl
iret
test
fs
push
pop
scas
jb
outsb
daa
xchg
sbb
mov
pop
xor
aaa
mov
dec
cmpb
outsb
cli
push
mov
jo,pt
adc
xchg
pop
cmpsb
xor
roll
dec
iret
inc
xchg
push
and
mov
out
push
push
sub
in
jno
popa
inc
fidivs
loop
sbb
movsb
cld
adc
test
sub
jae
cmp
rcrl
int
das
dec
push
dec
cmp
and
push
imul
arpl
hlt
hlt
xor
dec
shr
mov
leave
jae
inc
sub
mov
mov
stos
jge
cltd
xor
enter
repz
lds
loop
mull
sbb
push
push
mov
jmp
xor
ss
or
mov
sahf
xor
fistps
add
xchg
sar
sub
jne
scas
out
mov
les
mov
jl
daa
mov
cmp
mov
nop
inc
punpckhwd
in
sbb
adc
cmp
in
xchg
push
push
insl
rorb
mov
test
lods
adc
lret
fdivr
dec
in
ss
xchg
and
add
mov
mull
imul
adc
in
addl
xlat
mov
ret
jecxz
sarl
movsb
out
test
push
jge
mov
or
and
shlb
ja
mov
ds
fbld
insl
jecxz
sbb
pop
insl
adc
xchg
push
aam
and
sahf
pop
and
mov
jbe
add
loope
add
adc
stos
and
ficomps
jge
pop
cmpsl
and
cmc
push
sub
pop
es
lret
xlat
sti
xchg
or
movsb
mov
mov
cs
rcll
shl
pop
test
xchg
add
stos
aas
xchg
sub
mov
dec
les
std
pop
jle
imul
sub
icebp
xor
pop
pop
test
test
shlb
shlb
cmpsb
and
test
mov
jb
shll
cltd
push
pop
fsubp
sub
and
adc
int3
dec
fs
inc
sbb
inc
pop
rcr
addr16
es
lods
jle
rolb
sub
xor
stos
je
dec
cmpsb
iret
scas
inc
stc
rclb
xchg
int
ret
jle
outsl
test
iret
sbb
adc
mov
inc
xor
leave
mov
data16
pop
cmp
shl
sar
nop
pushf
or
dec
cmp
cmp
shrb
adc
or
cs
push
stos
or
jbe
jge
push
add
test
enter
or
jne
or
nop
aas
ja
and
or
mov
and
sub
mov
mov
xchg
push
jmp
inc
mov
dec
in
insl
adc
loope
leave
dec
and
lcall
test
sub
fbstp
xor
mov
movsb
inc
popf
aam
fs
push
out
imul
jnp
mov
adc
pop
pop
jle
xor
add
incb
inc
inc
mov
int3
adc
push
jmp
adc
test
ret
into
sbb
lds
sub
and
mov
mov
ffree
pop
push
pop
pop
adc
ljmp
data16
pop
push
dec
shrb
aaa
xor
lcall
pop
and
mov
aaa
out
sub
push
xor
pop
cmp
mov
adcl
pop
loopne
test
xor
andl
cld
mov
scas
sub
adc
gs
pop
lahf
sbb
adc
lcall
mov
shll
xchg
fldl
sub
fnstsw
push
movsl
das
push
mov
ret
rcrl
imul
pop
dec
pop
jecxz
jge
sbb
mov
xor
pop
mov
pusha
icebp
mov
call
add
in
frstor
dec
pop
lock
jns
mov
in
adc
push
andb
clc
adc
adc
stos
mov
adc
adc
cmp
lahf
or
jns
shrb
pop
mov
out
cmpsl
mov
cmc
mov
or
nop
mov
push
sbb
sbb
mov
adc
lret
cld
mov
adc
mov
push
stc
in
adc
jo
xchg
jbe
dec
aas
xchg
fnstsw
out
ds
jb
push
mov
test
cmp
gs
add
jb
js
sub
pop
mov
int3
cwtl
out
sbb
test
scas
out
jg
lret
into
lcall
clc
and
inc
jmp
jmp
adc
mov
in
inc
fisttpl
cmpsl
xor
push
or
or
fstl
orl
ja
inc
xchg
cmp
call
mov
les
adc
pop
push
bswap
jbe
push
jmp
shlb
shr
andb
push
or
out
add
jnp
jmp
adcl
mov
lods
std
inc
mov
insl
adc
and
clc
pop
outsb
pop
jmp
xchg
iret
push
push
and
pop
in
insl
xchg
mov
loope
push
mov
dec
fisubl
and
push
pop
mov
add
mov
push
lock
mov
test
add
fnstcw
arpl
xchg
dec
ljmp
pusha
sbb
jnp
aaa
cmpsl
call
ficompl
aaa
dec
sbb
les
es
adc
cmc
xlat
adcl
and
jns
jae
les
pop
xor
stc
or
loopne
mov
xor
and
in
jmp
mov
leave
inc
leave
not
cmp
mov
stos
mov
leave
push
jo
push
xor
fstps
mov
fwait
sub
sbbl
or
out
popa
inc
pop
mov
enter
call
popa
mov
rcl
add
fnstenv
inc
sub
xchg
andb
or
push
pop
loopne
sahf
xchg
jb
mulb
loopne
dec
and
dec
mov
in
test
les
pop
mov
xor
fs
addl
dec
adc
lods
sbb
fwait
sbb
adc
push
jb
hlt
sub
dec
int
into
arpl
mov
adc
in
les
outsb
mov
pop
aad
sbb
sbb
int3
sbb
push
cwtl
mov
push
divl
pop
mov
adc
adc
xor
bound
mov
into
and
in
xor
dec
mov
pop
ror
jle
or
loope
popf
icebp
lahf
mov
popl
push
out
sub
addr16
xor
in
loop
cmp
hlt
rcll
mov
outsb
add
push
ss
icebp
addb
cmp
sub
mov
testb
lock
inc
shlb
fwait
je
xchg
pop
sahf
les
idivl
push
add
xchg
xchg
popf
jb
in
rolb
loope
idivl
mov
jecxz
xor
repz
ds
lods
lret
and
int
pusha
xchg
mov
dec
loope
pop
fucomi
xchg
js
mov
jo
iret
popf
cli
shlb
mov
adc
sub
in
sub
inc
mov
xchg
push
pop
adc
xchg
mov
sub
sbb
lods
dec
out
mov
xor
mov
jecxz
fisttpl
cmp
xlat
stos
cmp
aaa
lret
rcr
or
mov
fnstenv
enter
lock
lods
dec
xlat
fisttpll
jp
inc
push
fucompp
or
cwtl
pop
push
sub
pop
or
aam
jo
cld
pop
jbe
test
mov
sub
adcb
out
xor
scas
js
and
mov
lret
and
push
call
xor
cli
pushf
out
inc
lea
push
ljmp
jno
sbb
mov
jnp
sbb
ds
mov
ja
xchg
test
pop
dec
ret
add
xchg
pop
cltd
pushf
out
adc
iret
xlat
dec
adc
dec
in
cld
pushf
fwait
adc
mov
ds
stc
ss
cs
rcll
cld
loope
mov
jle
arpl
decl
xchg
jl
jmp
mov
jmp
out
cmpsb
cmp
pushf
xchg
sbb
adc
or
andl
xchg
push
jmp
dec
imul
and
mov
jmp
fsubs
xorl
push
sub
inc
xchg
scas
jne
xchg
insb
incb
jecxz
mov
into
scas
jg
cwtl
sahf
sub
dec
cmp
pop
scas
daa
js
jl
int
popf
jnp
les
or
mov
push
jl
lea
shrl
arpl
ret
adc
fs
xlat
ss
lahf
testl
movsl
dec
inc
in
dec
cs
js
repz
pop
lock
xchg
adc
or
imul
out
movsb
mov
mov
lods
mov
mov
sub
jecxz
inc
xlat
xchg
fdivl
cmp
loope
bswap
or
inc
mov
inc
adc
mov
inc
sbb
sub
fsub
fisubrl
mov
xor
iret
add
adc
inc
and
mov
jge
lahf
hlt
sub
cmp
cli
or
aam
cmc
add
cmp
push
jns
mov
push
in
call
sbb
push
jns
sahf
mov
xchg
repnz
xchg
test
ficoml
xor
scas
out
js
shrl
sub
and
pop
xchg
cs
jb
hlt
lret
sahf
clc
insw
sbb
fs
push
negb
int3
mov
jp
outsb
jl
fwait
scas
push
rolb
test
test
pop
push
cwtl
aam
add
insl
add
mov
xchg
cmc
lock
jmp
bound
inc
fidivs
imul
jne
push
fwait
shrl
dec
sbb
xor
jno
jae
call
adc
or
jnp
inc
xor
ljmp
sbb
or
xorl
cld
push
adc
insl
addb
int3
arpl
imul
test
in
pop
negb
das
cmp
popa
add
mov
xor
mov
jns
in
test
inc
ret
enter
xchg
adc
mov
pop
addr16
mov
popl
jg
and
jnp
jbe
push
jb
aad
insb
nop
mov
sub
sbb
hlt
cli
cmp
fsubp
fstpt
test
mov
or
mov
in
adc
vcomisd
decb
pop
jl
dec
and
outsb
add
fbstp
and
push
stos
inc
cmp
stos
lahf
imull
xchg
lahf
dec
enter
jo
add
cwtl
inc
les
mov
jecxz
push
xchg
dec
sub
ljmp
ret
xor
add
loopne
andl
or
inc
jmp
xchg
xor
sbb
pop
sbb
iret
dec
insb
xor
sbb
int
sahf
cmp
imul
in
in
push
lcall
loopne
in
adc
pop
adc
add
ret
push
mov
sub
xchg
mov
out
rol
inc
jg
lods
push
ffreep
jp
sub
add
sbb
pop
push
stos
std
sbb
sbb
icebp
mov
mov
mov
cli
cmp
repz
and
loopne
push
lret
mov
imul
cmp
movsb
les
sti
xchg
pop
fidivrs
add
cmpsb
insl
or
push
push
dec
sbb
jnp
jnp
mov
call
ror
inc
sbbl
lock
outsl
imul
dec
stos
cmp
std
mov
out
cmpsl
shll
and
xchg
dec
lods
divl
pop
sub
int3
jbe
mov
out
adc
clc
imul
das
addr16
xor
inc
and
in
loopne
pop
adc
xchg
lods
push
sbb
mov
cmpsl
ja
and
jno
and
jg
fcmovbe
clc
or
in
imull
jge
jl
bound
and
jmp
mov
call
cmp
subl
xchg
mov
sbbb
popa
test
popa
orl
sub
mov
roll
or
xor
push
push
ret
adc
lcall
pop
addr16
in
fdivl
or
seta
dec
lcall
and
mov
shr
inc
fadds
hlt
addr16
rcrl
cwtl
scas
and
fwait
mov
inc
cmp
fistpll
lret
xor
repz
in
adc
or
xchg
in
push
mov
out
popf
push
arpl
and
inc
popf
ret
in
imul
popa
cmp
test
sahf
sub
mov
popf
mov
shl
je
mov
sti
mov
pop
sbb
jbe
cmp
jnp
je
adc
xchg
adc
dec
sbb
je
inc
pop
loope
jno
xadd
push
out
sbb
outsl
pop
lock
bound
movsb
in
inc
cwtl
xor
call
leave
mov
rcll
xor
add
das
mov
dec
add
push
popf
and
ja
xor
test
cmc
mov
mov
xor
sbb
sbb
negl
imulb
adc
inc
bound
sti
rcll
notl
mov
cmpsl
ret
pushf
in
inc
test
sbb
or
aas
pop
and
dec
add
xor
adc
push
test
cltd
xor
mov
inc
rcll
lock
popa
enter
movsl
pop
mov
mov
hlt
call
cli
cmp
mov
mov
lods
xor
mov
jl
and
mov
test
cmp
ret
addr16
mov
js
mov
lret
inc
andl
imul
lds
test
add
loop
icebp
mov
adc
inc
mov
jns
lock
push
adc
xor
data16
es
push
xor
stos
jecxz
and
jp
ss
mov
out
inc
fdivl
insl
and
hlt
or
popa
clc
inc
jno
cmp
mov
fsubl
dec
jge
test
xor
jp
dec
xchg
jg
call
mov
mov
test
xor
and
and
pop
cmp
fcoml
inc
xchg
ja
cmpsl
mov
loop
daa
lea
mov
jbe
ficoms
loope
sbb
push
xor
cmp
dec
inc
int
jb
sub
pusha
loope
jns
andb
and
xchg
inc
inc
aas
xchg
repnz
push
sbb
fnstenv
push
pop
popa
mov
fucomp
lahf
dec
push
mov
out
jbe
cld
loopne
ja
int3
rclb
cltd
sbb
rcrl
stos
mov
test
test
out
stos
inc
push
mov
xor
mov
pop
cmp
nop
sahf
xchg
out
dec
mov
and
call
shrb
aad
or
or
es
xchg
add
pop
mov
cmpb
fmull
and
ds
outsl
rep
ss
adc
shrb
cmpsl
pop
add
aad
sbb
pop
xor
push
stc
sub
stc
aam
cltd
and
pop
mov
negb
dec
in
xor
mov
imul
mov
pusha
lds
xor
and
xor
sub
pop
outsb
inc
call
imul
mov
mov
movsl
mov
mov
dec
popa
stc
mov
push
icebp
scas
sub
cmpb
stos
enter
clc
mull
dec
pop
dec
mov
outsb
cmc
scas
mov
stos
push
movsb
and
xchg
vcvtsd2ss
lock
or
fs
push
adc
or
cmpsl
pushf
mov
push
sti
imul
lds
imul
cwtl
cmc
and
ss
test
jg
in
std
xor
mov
mov
incl
test
insl
or
add
pop
jbe
jmp
and
idivb
daa
inc
sbbb
add
xchg
adc
lods
xchg
shlb
lret
sub
bound
push
test
call
adc
mov
inc
repz
repnz
sarl
add
inc
sub
pop
dec
and
jge
dec
pop
push
aam
stos
jg
cmp
cmp
out
xchg
jno
pop
enter
add
fstpt
int3
mov
xchg
xlat
lods
orb
ja
or
cmp
mov
test
adc
out
scas
addr16
cltd
inc
es
scas
add
and
jbe
aas
loop
mov
inc
mov
gs
pop
pushf
sti
clc
xchg
jg
loope
jp
cmc
dec
in
push
jbe
inc
push
and
stos
outsl
outsl
test
sahf
and
cmp
mov
sbb
or
jge
adc
fwait
pop
js
scas
mov
in
push
jle
xor
xor
ret
jge
mov
repnz
and
fcom
cmp
inc
add
push
xchg
push
lock
inc
mov
inc
in
pusha
jnp
push
enter
jae
mov
popa
dec
roll
pop
xor
mov
lds
and
in
sub
das
xchg
mov
jle
sti
sub
or
inc
icebp
dec
aas
or
rolb
sbb
xchg
test
mov
pop
pusha
leave
jmp
cmc
pop
mov
mov
mov
push
int3
ret
iret
insb
jmp
xchg
ss
mov
daa
mov
and
cld
push
loopne
cmpsl
and
mov
pop
xchg
and
xchg
push
sub
push
out
orl
incl
jle
xlat
lock
mov
shlb
ds
gs
test
shl
test
fwait
das
addb
das
jbe
xchg
aam
jmp
jo
jmp
fcmovnbe
int3
jge
jbe
and
mov
arpl
mov
daa
fdiv
jnp
icebp
insb
add
icebp
add
stos
push
popf
xor
pop
mov
xchg
mov
rclb
jmp
imulb
in
jp
push
ret
lock
inc
push
and
shl
pop
addb
insb
loope
clc
xchg
xor
mov
add
loopne
push
and
icebp
js
adc
push
push
call
mov
pop
mov
mov
out
xchg
sbb
sarl
mov
adc
clc
addr16
pop
sbb
jmp
das
mov
jp
jmp
testl
frstor
cmpsb
imul
pop
repnz
adcb
movsl
or
sub
mov
ret
jge
stc
movsb
lea
pop
fwait
sbb
adc
leave
rcl
popa
push
lcall
and
enter
loope
sbbb
out
cmp
mov
dec
xchg
inc
inc
lret
aam
jp
jg
lret
inc
movsl
jmp
cltd
dec
stc
dec
xlat
pop
in
sbb
cmp
enter
cmp
aas
mov
push
jle
enter
dec
nop
inc
lcall
mov
addr16
lods
sbb
mov
ljmp
pushf
push
mov
enter
pushf
adc
icebp
sub
jle
fwait
add
mov
jg
cld
cmpsb
call
and
sbb
outsb
xchg
aas
cs
bound
mov
pop
sub
aas
push
pop
in
push
popf
xchg
jno
push
sub
pop
leave
fistpll
jb
out
add
lods
pop
movsb
pop
jns
push
jl
subb
lcall
imul
cmp
mov
rcr
xchg
daa
mov
push
in
in
cmp
pop
dec
mov
mov
push
es
pop
fiadds
sub
in
lods
stos
cmp
ja
mov
xor
orb
lea
or
daa
insb
fcompl
jns
popf
dec
fstpl
sub
sub
jno
arpl
fs
pushf
and
lods
lahf
test
jb
cmp
sub
pop
cmpsl
and
pop
xlat
mov
pop
fldl
dec
out
popa
or
sbb
xor
or
cmp
cmpsb
shll
mov
lods
mov
fldenv
jmp
jbe
sub
lahf
das
xchg
mov
movb
jns
push
mov
addr16
call
push
xchg
cmpsb
cmp
bound
xchg
add
mov
in
sarb
push
lods
cmp
mov
enter
incb
sub
pushf
push
fyl2x
lahf
xor
mov
loopne
in
pushf
fstpt
cli
mov
rcrl
loope
and
pop
mov
decl
sub
and
push
xlat
ds
or
das
imul
out
fstl
loopne
jmp
xorl
es
fdivs
or
pop
cli
xchg
inc
fmulp
cltd
pop
inc
push
arpl
int
push
cltd
push
inc
inc
add
fists
test
mov
js
fisttps
xchg
pushf
dec
dec
sti
cmp
jae
pusha
push
cmp
fdivl
dec
in
sub
mov
push
jl
dec
ja
xor
xor
or
lds
jp
test
mov
enter
jl
inc
fistpl
lahf
les
dec
std
xlat
imul
imul
insb
push
inc
pop
inc
test
push
pop
imul
fwait
mov
xor
mov
mov
outsl
sub
pop
dec
pop
lock
or
jb
arpl
or
fnstenv
mov
jp
mov
int3
pop
sub
movsb
inc
adc
outsl
out
jnp
das
mov
jae
mov
or
idivb
inc
popa
push
adc
or
cltd
sub
lcall
push
mov
lret
xor
loop
cltd
inc
iret
pop
lods
mov
pushl
addr16
cwtl
idiv
shl
scas
mov
xor
loop
mov
movsb
fcomi
pop
fs
xchg
orb
sti
push
ja
fwait
mov
inc
std
iret
pop
sahf
stc
push
or
pushf
add
adc
mov
scas
add
cmp
jg
xchg
sbb
shlb
scas
xlat
sbb
cmpsb
dec
jmp
push
aad
push
sti
xchg
mov
pop
stos
jl
enter
outsb
jl
clc
mov
inc
call
enter
mov
jle
pop
jne
lahf
pop
mov
jmp
inc
and
mov
sbb
hlt
notl
xor
xor
fnsave
andb
mov
popf
adc
sub
leave
and
fcom
pop
das
cld
int3
adc
cmc
adc
jns
cmp
xchg
jb
rclb
insl
mov
sahf
scas
out
or
aaa
push
push
scas
mov
out
out
cmpsl
pushf
cmp
mov
mov
mov
xchg
pop
push
jnp
mov
mov
add
pop
setnp
ljmp
movsb
test
stos
cmpl
jb
sub
jnp
femms
daa
mov
xchg
test
jne
lock
pop
push
mul
xor
mov
ret
inc
jl
pop
out
and
add
inc
test
lcall
mov
outsb
mov
sbb
aam
mov
dec
and
shrb
push
mov
xor
ss
jo
or
negb
jne
add
js
std
fdivrl
arpl
jge
test
pusha
pop
pop
ret
loopne
push
mov
test
xor
mov
push
adc
xchg
xor
cmpl
aas
iret
sarb
or
lock
inc
add
stos
hlt
mov
stos
std
mov
repz
cwtl
dec
int3
test
pop
adc
mov
std
adc
nop
adc
aam
iret
into
mov
decb
mov
cmp
fisubl
mov
mov
pop
add
pop
xor
test
inc
adc
scas
ss
mov
mov
ret
lcall
mov
push
dec
jecxz
movsb
sub
sub
push
test
out
imul
adc
cmp
into
test
scas
dec
repnz
add
lea
xchg
incl
adc
sub
mov
dec
add
cmp
cld
add
sbb
and
movsl
mov
addr16
sbb
rcrb
push
movsl
lret
sti
pop
jae
scas
mov
pop
jnp
push
mov
cmp
pop
outsl
loopne
dec
cld
mov
fwait
sahf
mov
pop
movsb
add
je
jmp
dec
sbb
or
in
shlb
ss
test
iret
pop
pushf
sbb
pop
mov
sbb
in
lds
dec
insl
icebp
mov
mov
repz
xor
pusha
andb
inc
sub
xchg
divb
ja
sahf
or
enter
cmp
mov
bound
in
test
out
outsb
inc
fwait
pop
or
je
sti
xchg
xchg
mov
imull
push
insl
adc
add
mov
cltd
movsb
mov
fsubr
or
add
push
fbstp
push
ret
jns
jp
adcb
sub
rorb
inc
jns
pop
mov
pop
push
call
adc
mov
mov
pop
in
gs
jae
inc
test
adcl
inc
fidivrl
inc
inc
pop
mov
cmp
and
xchg
cmp
push
shll
sub
test
icebp
stos
mov
adc
setle
pop
scas
mov
inc
sub
pop
inc
fstpt
cltd
test
iret
divb
jno
cmp
sbb
jnp
movsb
jl
add
repz
fnstenv
cmp
testl
stos
int3
mov
in
push
mov
cmp
loope
dec
in
mov
imulb
mov
call
les
xorl
cmp
hlt
js
adc
lods
jg
or
test
lds
pop
cmpb
inc
popf
shrb
orl
or
aas
pop
push
in
ja
mov
sub
je
mov
xchg
xor
or
mov
lods
call
ret
inc
inc
xor
jns
dec
and
mov
push
lock
mov
shlb
rcl
and
cmp
jns
add
mov
loopne
xchg
and
lock
shrb
imul
xor
clc
fstl
cmc
scas
pop
scas
test
sub
test
mov
int
loope
aam
dec
lret
sbb
xchg
jae
shr
xchg
adc
or
out
xchg
mov
ret
pop
int
in
jle
pop
out
jmp
push
jbe
andb
mov
sub
xchg
cmp
fdivs
jbe
clc
xor
ret
cmpsb
xlat
aad
cmp
lods
inc
dec
add
enter
pop
gs
lret
jmp
sub
mov
pop
pusha
inc
add
out
rolb
jg
inc
mov
and
lret
dec
js
sbb
cwtl
inc
gs
data16
xor
sub
rclb
add
mov
aad
aas
aad
sub
dec
sar
cs
add
adc
dec
in
mov
push
mov
iret
ds
mov
jne
jge
jae
sub
pop
imul
jecxz
jae
popa
push
je
scas
test
pop
xor
xchg
push
and
jae
lods
mov
les
inc
push
std
incl
jnp
bound
cmpl
mov
dec
pop
push
mov
test
sub
stos
sbb
imul
inc
mull
dec
pop
sahf
adc
jge
fs
notl
ja
and
jno
jno,pt
sbb
sahf
mov
ds
cld
rorb
push
cmc
sub
dec
jle
sub
jmp
or
jle
ss
lcall
jb
lods
jne
push
sbb
fsubp
mov
shrl
mov
into
lahf
mov
arpl
test
add
add
or
out
adc
dec
adc
sbb
mov
cmp
sub
pop
outsl
inc
or
add
mov
mov
pop
mov
sbb
in
sub
jg
push
repz
movlps
sbb
and
daa
addr16
or
js
aaa
mov
pop
add
xchg
add
aam
push
push
and
jle
jbe
fistl
jae
lods
mov
les
jp
lods
movsb
sbbl
dec
push
push
clc
or
cmp
xchg
jo
std
cmp
and
iret
pop
sbb
mov
pop
gs
adcl
fbstp
jne
mov
out
pop
lahf
hlt
inc
pushf
sub
sub
cs
jnp
cmp
test
mov
fcmovnu
jo
pop
cmp
mov
push
mov
out
xchg
pop
popa
fsubrs
idivl
push
xchg
pop
xchg
lods
mov
push
pop
inc
pop
rclb
adc
dec
nop
cs
shrl
sbb
mov
int
pop
mov
outsl
xor
enter
pop
insl
cltd
jae
jmp
cli
fists
lea
jp
xor
cmp
sub
push
mov
mov
adc
jge
inc
jne
push
add
fimull
ljmp
data16
mov
out
jo
and
enter
ss
clc
pop
out
inc
pop
test
xchg
imulb
movsb
push
sub
lock
inc
out
push
dec
pop
nop
mov
movsl
jl
jp
xor
add
jne
or
inc
nop
mov
lcall
inc
std
in
das
loop
mov
add
mov
jo
rcl
mov
fdivrs
xchg
pop
test
lret
sub
mov
leave
mov
les
jmp
xlat
call
or
mov
outsb
lea
ret
push
dec
stos
cmp
jge
adc
ss
lods
dec
clc
or
mov
mov
or
push
mov
sbb
dec
xor
lcall
cltd
aam
je
mov
pop
push
jb
add
fwait
sbb
andb
fildll
imul
and
mov
add
fistpll
sbb
and
outsb
sbb
ret
and
pop
jmp
and
jge
mov
pop
xor
push
push
mov
hlt
icebp
aad
push
mov
xor
sub
sub
push
pop
jecxz
ds
cmc
arpl
jb
xchg
xor
loopne
inc
popa
testl
stos
sbb
mov
and
and
fldt
xchg
xor
aam
jmp
loope
and
xor
or
clc
or
sub
in
insl
jg
cltd
cmp
fwait
xor
lcall
shl
mov
and
test
shrl
mov
pop
jne
repz
pop
sbb
cmp
sbb
pop
stc
inc
outsb
test
pop
rolb
mov
vmovq
cmpsl
mov
fnstcw
dec
inc
push
int3
movsl
icebp
fs
popa
sbb
xchg
int
pop
cmp
mov
pop
inc
aad
cld
xor
ret
cld
jb
push
arpl
outsl
loop
cwtl
shr
mov
loopne
dec
in
gs
out
ret
mov
inc
fisttpll
dec
in
test
loop
cltd
push
lahf
ss
lahf
ss
add
je
push
jmp
je
or
in
mov
adc
push
mov
sahf
xor
adc
fsubrs
fcompl
mov
adc
mov
xchg
inc
faddl
dec
and
les
cmp
dec
adc
jg
and
jno
lock
push
sub
cmp
sub
fbstp
sbb
xor
cmpsb
lret
shr
dec
jp
lret
and
xor
pop
cmpsb
pop
inc
inc
pop
movl
and
mov
popa
jmp
jmp
push
sub
add
cs
shr
xor
add
pusha
fs
mov
push
mov
lds
mov
loope
ja
inc
mov
adc
mov
xchg
fisubs
in
jle
jp
ds
int
adc
sbb
std
pop
cmc
cmpsl
pop
fildl
inc
insb
or
in
cmpsb
and
in
addr16
mov
push
out
push
xchg
cmpl
inc
fisubl
sbb
add
mov
mov
pop
outsb
lahf
adc
loopne
xchg
js
repz
sub
inc
cld
push
fldcw
inc
and
lret
or
mov
cmp
test
fwait
test
pop
pop
mov
cltd
jo
aad
pusha
sbb
scas
cltd
push
mov
cmp
xchg
insb
icebp
aam
add
fstpl
fimull
sub
pop
push
stos
fisubrs
pop
jne
mov
repz
fs
lock
dec
jmp
jg
clc
cmpb
jmp
leave
cmp
cli
bound
dec
mov
ret
xchg
pop
mov
push
negl
xor
ljmp
iret
dec
cld
fldcw
mov
xor
jl
mov
test
loope
add
pushf
sub
push
jle
add
es
clc
xor
loopne
hlt
push
jg
push
xchg
add
mov
jl
and
lods
cmpsl
sbb
mov
in
outsl
loopne
cwtl
sub
mov
mov
popf
movsl
inc
je
jne
or
sub
dec
mov
fst
sub
fcompl
into
xor
leave
leave
shlb
and
inc
adc
imul
pop
dec
hlt
int
mov
sahf
call
jle
mov
aas
test
jl
and
dec
out
icebp
out
push
mov
cli
pop
shl
or
mov
xchg
lret
cmp
insb
stos
sti
rcl
imul
call
cmpsb
ret
jnp
in
adc
icebp
stos
pop
push
pop
sahf
test
add
jle
cld
es
test
out
les
or
jnp
imull
scas
dec
add
sahf
aas
or
jb
adc
cmc
int3
icebp
sbb
sbb
xor
test
clc
bound
ret
sbb
inc
popa
ret
xor
fidivrl
addb
adc
mov
mov
fs
jb
bound
mov
dec
stos
mov
aas
mov
sub
insl
xor
jno
adc
cmp
aas
dec
ds
xor
dec
adc
gs
aam
xchg
call
mov
imul
jecxz
inc
in
jne
inc
test
scas
dec
dec
out
jnp
xor
call
and
push
sub
ds
xlat
jmp
testl
mov
mov
es
scas
lret
jbe
test
add
nop
dec
and
xchg
inc
ret
sti
jle
mov
and
jae
in
sub
gs
in
scas
xchg
adc
repz
mov
cmp
popa
add
insb
or
nop
and
cmp
mov
rcll
adc
fbstp
pop
and
mov
xor
push
jbe
add
cmpsb
test
idivb
pop
pushf
popa
rol
mov
adc
jo
dec
out
lcall
mov
jo
sbb
movsb
xchg
mov
xchg
mov
xchg
sbb
push
dec
in
xor
imulb
sbb
mov
push
imul
mov
or
popf
jle
into
pop
xchg
sub
push
jle
mov
push
es
and
popf
lods
xchg
jle
cld
mov
cli
rcll
add
jo
xchg
gs
adc
out
dec
sbb
mov
in
jne
sbb
in
test
pop
cmp
or
sub
jl
and
shlb
out
sub
push
out
fnstcw
in
push
push
jo
inc
popa
add
xchg
xor
lea
add
push
nop
dec
mov
push
cmp
adc
insb
stc
out
pop
std
mov
adc
mov
xor
cld
sub
in
out
out
sbb
sbb
ss
fistpll
lea
js
fldenv
jnp
pop
rorl
jno
repnz
ret
push
call
movsb
cmp
xor
xchg
push
ret
fbstp
mov
jp
push
mov
mov
inc
out
testb
push
lods
dec
sub
imul
jp
jmp
add
dec
inc
cltd
xor
mov
and
pop
std
xchg
mov
push
cmpb
inc
test
jg
aas
imul
sub
daa
daa
and
in
loopne
stos
mov
jae
jbe
int
mov
mov
ret
jno
jns
inc
popa
popa
imul
xchg
cmpsb
mov
push
scas
jp
lds
pusha
jg
out
es
fdivs
jmp
sub
xchg
mov
and
fs
xchg
push
xchg
cmpsb
adc
push
lock
adc
or
pop
adc
mov
and
adc
push
mov
sub
pop
sbb
inc
movb
cmp
xchg
push
movsb
and
ljmp
imul
dec
and
popa
mov
sbb
xor
adc
inc
fdivl
xchg
lcall
xor
mov
pop
sbb
das
add
fcmovu
lods
lods
jecxz
js
push
add
cmp
insb
cmp
adc
pop
out
int3
ret
psrad
fcompl
lds
pop
add
les
adc
or
fdivp
cmp
enter
pop
ret
pop
imul
adc
mov
push
push
daa
les
sub
pop
in
jle
fadd
pop
adc
lahf
mov
add
push
insb
fs
outsb
mov
fisttps
and
cld
xor
inc
shlb
loope
lods
xchg
mov
push
mov
push
je
and
mov
or
xchg
faddl
jp
pushf
mov
cmc
ret
lods
inc
mov
sarb
or
cwtl
xor
inc
pop
push
inc
loop
daa
push
hlt
fst
fdivr
add
loop
js
fidivrl
ret
js
call
cmp
dec
push
pop
push
jno
and
xchg
scas
into
std
xchg
out
outsl
mov
mov
les
adc
xchg
lods
add
dec
test
ja
ds
xor
div
aas
sbb
xlat
push
push
cmp
stc
fwait
dec
insl
adc
repnz
or
fwait
std
test
subl
pop
insl
sarb
imul
imul
sbb
lods
adc
fwait
jmp
xchg
mov
loopne
mov
jle
pop
xor
or
shlb
dec
je
arpl
or
mov
jp
or
cli
pusha
dec
addl
loope
lret
push
out
jne
cli
nop
xor
jbe
push
inc
add
mov
and
fsubrs
mov
add
xchg
mov
pop
lahf
andl
adcb
ret
shrl
int3
xor
or
mov
fnsave
loopne
jnp
scas
inc
hlt
mov
shrb
lcall
xor
mov
mov
jne
das
cmpsl
add
mov
sti
fiaddl
iret
push
xor
xor
mov
dec
jbe
fiaddl
push
mov
int
pop
cmp
mov
call
cmp
xchg
or
fnstsw
push
out
insb
imul
push
sbb
sti
subb
or
aaa
mov
fidivl
arpl
or
jmp
xchg
mov
sub
lods
cli
lcall
xor
mov
iret
or
or
rolb
call
or
les
je
addps
pop
sbb
test
ss
popa
fucomp
jp
repnz
sub
hlt
add
das
ret
repz
pop
loope
pop
imul
movsb
inc
subl
dec
loop
add
popf
mov
pop
sbb
cwtl
repnz
cmpsl
mov
dec
lret
test
lret
sti
fidivrl
pop
clc
pop
popa
dec
push
enter
and
test
jge
mulb
xchg
mov
push
cmpsl
sub
dec
cs
andl
push
fdivl
andl
addr16
decb
ljmp
jg
out
pop
stos
jbe
jne
addr16
lock
adc
test
mov
icebp
in
in
and
and
lahf
mov
xor
adc
push
dec
jo
cmp
xchg
sbb
cmp
mov
popf
lods
imul
jmp
mov
fucomp
or
mov
jl
lds
icebp
sub
outsl
mov
mov
nop
popa
dec
sub
imul
push
or
imul
mov
fnclex
adcb
and
or
cmp
fwait
xchg
dec
out
xchg
dec
xchg
adc
popa
pop
fwait
xchg
insb
loop
sbb
pop
push
mov
nop
push
cli
xor
jns
sbb
mov
sbb
sub
inc
adc
mov
cmp
dec
ds
out
add
cmp
xor
inc
and
mov
stos
add
adc
add
movsb
in
adc
cmpsl
and
pop
mov
stos
test
pop
subl
and
lds
lock
dec
cmovge
jns
and
add
lods
mov
jge
dec
jmp
daa
and
jmp
or
test
cmp
rclb
pop
sahf
push
or
pop
mov
cmp
push
sub
fprem1
inc
loope
jns
pusha
add
adc
lcall
cltd
jle
lcall
mov
aaa
mov
inc
movsb
test
imul
inc
xor
add
es
shll
loopne
clc
in
xchg
loop
int
je
jmp
notb
push
mov
dec
push
and
cmpb
sbbl
adc
int
dec
jecxz
cld
fs
xor
out
nop
xchg
pop
outsb
inc
sbb
cli
sbb
inc
fdivr
xor
or
pop
inc
fmuls
mov
mov
mov
lods
cmp
mov
aad
cli
jo
movsb
stos
xor
jecxz
cmc
sbb
je
xchg
sbb
iret
inc
dec
or
test
ret
pop
stos
cmpsb
pop
push
adc
outsb
xlat
ficoms
and
std
pop
enter
jae
pop
movsl
cmp
mov
push
sbb
aam
pop
dec
cmpb
stc
pop
rcll
mov
jno
or
test
pop
fwait
or
mov
lock
xor
jne
adcl
rcll
sub
sbbl
nop
mov
pop
mov
sahf
push
leave
cltd
fsubrs
add
add
push
fisubl
jne
pop
ret
sub
sar
into
pop
loop
adc
dec
adc
jne
sbb
cmpsl
xchg
or
jo
cmp
or
add
test
lds
rolb
push
xchg
pop
sbb
add
xor
inc
sub
sbb
mov
mov
push
aam
fldl
imul
sbb
xchg
mov
in
divb
inc
fbld
add
pop
jmp
mov
idivb
fisubs
xchg
in
out
xchg
stos
jo
lahf
stos
xchg
test
lds
enter
dec
fldt
sahf
mov
sub
aaa
mov
mov
aas
lock
cmp
push
sbb
mov
push
xor
push
into
mov
stos
push
insb
jns
ret
sub
pop
mov
cmp
imull
cmp
aaa
ja
pop
mov
les
adc
lods
inc
jo
lahf
xor
or
mov
daa
jae
loope
mov
scas
mov
rorl
vunpcklps
sub
xlat
aad
repz
insb
dec
shl
jo
sbb
fwait
stos
aaa
push
out
fs
loopne
sbb
jge
push
lds
add
subb
mov
jae
mov
jae
pop
shl
sbb
jg
adc
ret
or
mov
sbb
or
xchg
mov
sub
mov
fwait
call
xlat
pop
add
hlt
int3
mov
cli
fldt
push
jb
cld
jae
test
loopne
cmp
movsb
pop
ds
lds
pop
popf
stos
jg
aad
dec
movsb
jne
in
insl
cld
jne
xchg
sbb
adc
xchg
into
jnp
dec
push
lock
test
loop
int3
lcall
outsb
add
rcrl
add
jo
and
fstpt
mov
hlt
rcl
repz
inc
jmp
jmp
push
sahf
adc
push
mull
xor
push
add
mov
out
lea
push
add
jo
dec
push
inc
ds
mov
or
jno
cmp
sub
ficomps
sub
push
adc
pop
jne
adc
addl
pop
nop
inc
jae
test
xchg
sub
dec
sbb
inc
dec
sbbw
mov
movsb
cmp
mov
rclb
add
xor
xor
xchg
cmp
sbb
jmp
insb
inc
lock
or
push
popa
sahf
or
stos
push
scas
mov
fidivl
subb
pop
mov
movb
adc
cmp
and
in
jle
push
aam
call
jno
fldt
fwait
mov
mov
add
xchg
dec
adc
lea
mov
xor
sub
inc
iret
js
jo
scas
jmp
xor
xchg
or
fs
rcrb
jl
mov
shll
ja
cmp
mov
test
and
pop
push
out
push
je
and
jo
jb
sbb
clc
negl
in
inc
and
aas
mov
push
data16
sahf
call
jg
stos
jne
fsubrl
mov
data16
je
xor
pop
pop
scas
jge
dec
hlt
test
inc
loope
jbe
das
jns
fsubrp
mov
sub
scas
xchg
push
dec
pusha
inc
gs
xchg
arpl
out
push
inc
int
orl
cmp
jmp
or
mov
mov
push
ds
cmp
insb
imul
mov
shrb
add
shl
es
fmuls
xchg
or
or
shl
pushf
and
jge
sub
scas
ss
jnp
mov
jle
pop
out
and
sarb
mov
mov
pop
aad
push
cli
sbbl
or
or
cmp
push
into
pop
test
popa
jno
mov
xor
inc
mov
bound
mov
jnp
testb
das
adc
pusha
mov
push
mov
lahf
inc
addr16
xor
addr16
cmpsl
pop
outsb
fldpi
out
xchg
out
lds
mov
dec
inc
ja
cld
test
jecxz
pop
fidivrs
shl
leave
jbe
test
sub
cmp
sub
je
add
inc
mov
js
pushf
and
ljmp
dec
and
mov
push
mov
out
dec
sbb
sub
imul
and
stos
cmpsl
jp
imul
mov
arpl
push
xor
nop
mov
mov
xor
imul
andl
mov
push
dec
cmc
sarl
jl
in
inc
les
hlt
cmp
mov
or
push
add
xor
out
adc
lods
inc
test
lock
or
mov
ret
testb
mov
popf
call
xor
pop
inc
aam
das
movb
in
xor
aam
adcb
xchg
xchg
add
jbe
jle
dec
inc
fisttpll
mov
pop
imul
testl
mov
js
cld
lret
xlat
and
push
ss
jl
push
scas
sbb
in
out
ss
lahf
mov
mov
xor
push
or
sub
sub
frndint
lret
mov
in
jno
inc
popf
lds
add
fsubp
cmp
fwait
sarl
sub
sub
mov
pop
push
repnz
pop
mov
sbb
int3
jno
mov
out
ds
clc
push
pop
jne
push
sbb
cmp
in
testl
pop
inc
xchg
incl
mov
dec
hlt
cmp
ljmp
out
les
mov
and
cmpsl
mov
loopne
dec
sub
ja
sar
aam
add
shl
ds
pop
movsl
lods
out
inc
imul
pop
iret
test
into
outsl
aad
int
call
xlat
addr16
xchg
push
xor
push
icebp
shl
outsl
shl
xchg
hlt
jmp
stc
xchg
push
movsl
add
pusha
jl
jnp
leave
xor
or
mov
xor
aam
in
test
loop
repz
adc
mov
les
add
jecxz
xchg
mov
enter
lock
fisubrl
adc
icebp
add
xor
int3
mov
inc
or
fnstcw
jmp
jne
cmpsb
enter
cld
into
or
dec
icebp
sti
das
shlb
sbb
push
mov
jae
xor
xchg
inc
push
pushf
add
mov
pushf
shrb
arpl
and
ss
out
push
fs
inc
pop
push
dec
das
jp
mov
cmp
sub
xor
nopl
test
mov
mov
mov
ds
pop
push
push
enter
lds
pop
pop
jne
cmp
nop
movb
idivl
sub
sbb
mov
aas
sbb
add
les
test
iret
lock
xchg
add
fwait
cltd
and
outsb
and
loop
sub
mov
rcl
sub
xchg
xor
and
sub
dec
das
jp
pop
cmp
push
insb
xchg
xor
mov
fs
sbb
fimull
lods
jnp
xchg
popf
or
pushf
in
aaa
call
adc
adc
inc
aas
mov
mov
or
mov
jmp
push
dec
icebp
loopne
xor
rolb
pop
mov
lcall
cmp
popf
call
cmp
ficoms
insl
cmp
cmpsb
cmp
fmul
xchg
push
xor
cli
adcl
mov
xchg
jo
ret
adc
stos
jno
ds
lret
inc
mov
mov
xchg
cmp
xlat
xor
mov
roll
loope
fnstsw
and
neg
push
jge
test
push
pusha
xlat
jle
cmp
xor
add
mov
outsb
imul
inc
stos
mov
icebp
repnz
iret
fisttpl
faddl
mov
and
popf
xchg
fwait
sub
lods
and
and
inc
mov
push
rcl
cwtl
push
mov
xchg
xchg
out
bound
icebp
lret
outsl
pop
adc
test
ret
scas
imull
lods
push
adc
or
stc
pop
ljmp
add
ja
outsb
in
sbb
ljmp
rcrl
ja
sbb
inc
sbb
lcall
mov
sub
push
lock
push
test
mov
fwait
rcll
aaa
scas
rorl
sbb
test
mov
jae
icebp
rolb
ror
lcall
mov
add
sub
xlat
outsb
js
nop
mov
je
adc
jge
call
jecxz
dec
sti
push
cmp
or
cltd
cltd
cmp
scas
or
add
sub
sti
fimull
sbb
push
xor
dec
in
pusha
mov
into
enter
test
je
loop
decb
cmpsl
pop
mov
lcall
out
cmp
mov
adc
xor
cmp
xlat
fstpt
jb
scas
mov
les
loope
sbb
xchg
test
add
xor
mov
fnstsw
nop
push
fidivs
mov
aad
ret
sbb
movsl
out
push
and
push
lahf
test
adc
xchg
mov
inc
jns
xchg
testl
aaa
in
push
imul
add
sti
push
out
fucomi
pop
jne
adc
stos
hlt
mov
fwait
xchg
scas
arpl
insb
push
fsubl
arpl
into
gs
xor
push
mov
shll
fisubl
cmp
jle
ja
or
inc
inc
sbb
cli
push
out
cld
shrb
pop
push
stos
push
pop
jnp
sub
mov
adc
int
or
cmpsl
das
pop
xchg
pop
clc
jae
jecxz,pt
jo
cli
test
jns
into
push
or
mov
mov
sub
push
orb
add
testl
pop
divl
lret
shr
mov
adc
and
outsb
test
mov
hlt
repnz
mov
mov
mov
jmp
inc
fisubrl
inc
inc
jae
pop
aam
out
jg
xchg
cld
in
lods
lahf
stos
pop
testl
into
pop
mov
jnp
push
mov
inc
arpl
jo
je
pusha
lods
xor
cmp
or
mov
or
loope
and
xchg
bound
adc
rcrb
addr16
test
fucomp
ja
push
out
test
push
in
adc
outsl
push
push
sub
or
adc
xchg
cmc
and
cmp
jle
daa
sub
bound
adc
js
sub
cmp
andl
lret
repnz
rcl
xor
xor
and
or
inc
stos
movsb
push
arpl
lret
mov
fildll
xchg
pusha
sub
dec
out
cmp
into
sub
clc
xor
xor
push
xchg
mov
in
lret
jp
xchg
xor
sbb
xchg
out
mov
xchg
sub
cmp
add
les
lahf
sub
testl
xchg
push
push
divl
cld
mov
sbb
jge
sub
inc
ret
pop
loopne
xor
xchg
aaa
inc
sbb
xchg
and
add
push
mov
aad
jecxz
dec
sbb
push
add
out
and
out
loopne
loop
cmp
fstpt
loope
mov
push
sbb
mov
or
aas
add
and
sub
adc
pop
mov
addr16
adc
mov
scas
sub
adc
xor
cmp
sub
mov
fcompl
mov
mov
int3
inc
andl
stc
je
or
sub
sub
lret
jns
arpl
sbb
data16
ror
es
movsl
std
popf
sub
imul
mov
ds
cmpsb
les
aas
or
xchg
pop
or
je
leave
and
push
fsubl
and
sbb
pushf
and
fdivl
push
ljmp
and
and
insl
lahf
jg
cmp
sub
aam
ret
andb
jo
call
jae
out
insb
mov
jmp
or
aam
dec
aas
xor
shlb
hlt
mov
sbb
sbb
in
stos
insl
fisttpll
mov
push
or
sti
test
fimull
add
cmp
lret
data16
xchg
push
lahf
jbe
sahf
shll
or
push
jl
cmp
imul
clc
jl
and
and
pusha
push
push
cmp
or
int
pop
mov
adc
and
clc
sub
pop
dec
mov
fmulp
add
popl
bound
aaa
xor
mov
jns
xchg
test
adc
sub
movsb
adc
mov
jl
xchg
mov
pxor
dec
in
pop
scas
push
sub
and
and
xchg
pop
pop
setne
lea
mov
int3
test
push
inc
push
loopne
or
popf
cltd
test
jecxz
add
rcrb
andl
sbb
or
incb
adc
lret
pop
sbb
je
adc
mov
and
in
std
shll
push
aam
dec
addr16
ljmp
out
addr16
shrl
mov
and
fildl
inc
cmpsb
sbb
out
loope
pop
xor
movsl
mov
ja
push
stos
lret
adc
xchg
repz
or
movsl
jp
sbbb
xchg
cmpsl
ret
mov
adc
mov
in
mov
xor
mov
sbb
pop
push
lock
xor
test
scas
insb
mov
push
insb
rorb
xchg
adc
and
jmp
int3
add
xchg
lds
xor
stos
ljmp
jne
xor
mov
and
ret
or
cmp
rcrb
dec
shlb
cmp
add
pop
imull
xor
les
mov
gs
gs
cmp
sbbl
cmp
lahf
jp
add
adc
sbb
pop
sub
mov
jns
stc
fmull
stos
push
fiadds
xchg
aas
fs
sbb
or
cmc
mov
fldcw
lret
mov
add
pop
les
or
adc
mov
loopne
pop
dec
rol
shll
outsl
inc
pushf
push
inc
and
jno
xor
popa
cld
push
fs
fisubl
push
bound
outsb
xor
add
mov
adc
ja
cmp
jb
dec
pop
repnz
and
in
or
sub
dec
imul
mov
mov
xor
adc
mov
push
in
mov
and
cmp
scas
dec
lods
and
rcrl
jns
inc
push
arpl
jb
inc
fcmovbe
xchg
imul
test
mov
xchg
inc
xchg
mov
les
mov
push
scas
lds
cmp
dec
pop
sub
iret
rorb
jnp
and
cmc
sbb
insb
pop
out
push
fsts
mov
mul
sbb
and
outsb
scas
mov
lret
adc
jb
mov
fcmovnb
pop
xor
das
ret
pop
ficomps
push
and
mov
es
adc
adc
loopne
mov
jecxz
and
in
testl
das
add
enter
inc
loop
mov
xor
rcrl
pusha
jno
lret
add
dec
loopne
pop
lock
int3
add
mov
out
mov
or
lret
sets
fs
into
or
or
out
mov
push
push
inc
fmulp
and
lock
mov
imul
mov
popf
out
lea
push
mov
sub
sub
sbb
shll
stos
inc
and
inc
leave
repz
jge
jnp
xor
jns
sub
and
aas
mov
or
js
inc
ja
daa
mov
inc
stos
and
mov
imull
mov
jns
sub
clc
xchg
push
inc
test
sarb
mov
and
mov
cmc
cmp
mov
mov
cmp
imul
mov
pop
inc
loopne
adc
mov
clc
shrb
pop
call
sub
outsb
adc
jl
popf
scas
adc
mov
lods
and
and
testb
jns
mov
xchg
xchg
and
push
jge
dec
mov
ljmp
xchg
bound
fwait
les
rcrl
std
and
or
or
dec
mov
in
mov
int
jnp
arpl
es
mov
call
push
add
xchg
mov
repnz
addr16
mov
stos
out
add
dec
imul
push
xor
rcrb
lds
idivb
mov
fs
jnp
mov
mov
test
lret
push
pop
js
ss
cmp
fidivs
sub
aaa
push
add
sbb
fucomip
add
jno
jae
pop
imul
pusha
fidivs
inc
jae
lahf
mov
aam
negl
mov
cmp
aaa
stos
mov
inc
icebp
xchg
fildll
shrb
lcall
mov
sub
sub
xchg
inc
push
cmp
outsl
or
imul
xor
sbb
dec
jnp
dec
fcomps
mov
dec
mov
adc
mov
jl
imul
push
xchg
add
icebp
push
sbb
mov
mov
or
mov
std
pop
movsl
and
cs
icebp
loope
mov
jae
das
out
fwait
dec
cmpsl
shrl
and
out
push
std
rcrl
sub
push
adc
or
or
sarl
mov
test
mulsd
fidivrl
push
movb
add
cmp
in
ret
arpl
and
shr
jne
xchg
int3
cmpl
scas
push
aam
popf
stos
lahf
xor
fidivl
or
mov
roll
sub
push
jl
cwtl
aad
sti
jg
push
push
adcb
sub
mov
fldt
les
mov
push
leave
pop
out
mov
cmpsl
ds
jbe
add
es
sub
mov
stos
inc
stos
hlt
out
test
int
pushf
incb
sbb
jmp
push
cltd
outsb
add
movsb
in
sbbl
jmp
outsb
add
adc
sbb
mov
add
jne
in
test
stos
outsb
add
lret
sbb
push
in
sbb
outsb
add
inc
add
stc
xor
hlt
or
xchg
add
adc
into
adc
lea
xor
inc
repnz
mov
inc
xor
imul
in
ja
pop
fld
mov
xor
jno
aam
cmc
mov
xchg
cld
or
cmp
stos
mov
push
jns
and
test
aaa
push
je
mov
ljmp
sub
mov
shll
aam
xor
sbb
push
cmpsl
and
adc
stos
cwtl
lea
lahf
mov
mov
test
fdivs
pop
push
les
pusha
jmp
mov
inc
xchg
mov
xchg
jl
jo
mov
out
fisttps
xchg
inc
push
mov
sbbl
dec
pop
xor
push
clc
push
push
loop
xor
mov
rcrb
scas
iret
aaa
flds
bound
out
fisttps
fwait
mov
mov
das
dec
in
jl
enter
mov
push
or
addr16
pop
scas
faddl
mov
mov
pop
shrl
inc
jmp
aad
mov
add
xor
or
mov
inc
repnz
frstor
dec
cmp
mov
pop
lods
dec
add
mov
adc
daa
fwait
or
mov
adc
xorl
push
repnz
jge
ja
adc
and
adc
js
mov
and
fcomps
or
imul
pop
xchg
mov
scas
mov
sahf
enter
lahf
jne
pop
pop
xchg
fmuls
jecxz
jmp
sbb
es
les
shr
pop
mov
lret
push
int
push
xchg
iret
push
adc
sbb
das
add
test
xchg
sub
and
xchg
aam
mov
lahf
shll
push
xor
stos
pop
push
stos
sti
adc
loope
xchg
ret
push
mov
addr16
jne
pop
data16
adc
mov
sbb
filds
adc
adc
popa
jle
cmpsl
in
xchg
notb
mov
fstp
jbe
int
jl
sub
iret
ljmp
push
inc
xchg
adc
mov
shrb
lcall
mov
push
fldt
mov
jle
nop
mov
shll
dec
inc
inc
sbb
lods
cmp
dec
sbb
push
and
push
xorb
cwtl
adc
mov
mov
mov
stos
fidivl
push
movsl
adc
xor
inc
or
xchg
aam
push
or
xor
add
andl
subb
push
mov
jmp
cmp
push
push
lret
ss
dec
pop
stos
inc
jle
in
xor
mov
xchg
imul
cmp
inc
adc
jns
mov
arpl
dec
mov
icebp
jno
sbb
aaa
jae
loope
stc
inc
jae
popa
imul
add
xchg
nop
mov
mov
sarb
add
xor
ds
or
mov
cli
mov
imul
int3
daa
dec
jmp
test
imul
fbld
add
sti
and
in
or
add
in
icebp
test
pop
sbb
mov
cs
add
mov
imul
fisubl
mov
jno
inc
add
mov
sub
add
xchg
cld
mov
shlb
add
mov
add
mov
rcr
xor
out
jns
daa
sub
lcall
jbe
stos
mov
scas
dec
jbe
cmpsl
loop
sub
sbb
in
sarb
add
dec
cltd
dec
int
cmc
aam
daa
cmp
in
jnp
add
add
sbb
outsl
mov
dec
lret
adc
sbb
dec
add
mov
xchg
lods
dec
jp
jge
addb
cmpsb
jmp
aam
inc
mov
push
mov
aaa
push
lods
xlat
insl
sbb
imul
nop
push
fistps
sub
pop
aaa
aam
mov
popf
jp
shrl
lock
aaa
jns
stos
and
test
scas
jg
jo
loopne
xor
addr16
gs
js
mov
sbb
ds
xchg
arpl
jecxz
ret
leave
jecxz
cmpsb
test
and
arpl
popa
and
mov
out
add
mov
stos
sbb
je
sbb
pop
lcall
cltd
std
scas
mov
push
jno
std
mov
je
mov
sub
jmp
and
loop
push
adc
mov
les
and
and
roll
vpunpckhwd
lock
pop
xchg
imul
xor
in
and
sub
xor
cmp
or
inc
add
movsb
inc
jp
mov
movsl
lds
les
fwait
jle
inc
loope
push
adc
jae
insl
loopne
sbb
shll
push
inc
mov
bound
outsl
inc
mov
ret
fwait
aaa
shlb
mov
out
test
or
adc
xor
out
lds
testb
imul
cmp
and
lods
inc
decl
xor
xor
imul
loopne
xor
and
in
stos
jns
test
scas
push
fildll
and
lods
push
out
cmp
push
sahf
cmp
bound
cld
mov
popf
and
mov
xchg
sbb
sbb
mov
lret
popa
or
cs
icebp
mov
mov
sub
jp
sbb
in
popl
cmp
push
and
mov
cmp
sub
push
out
jb
lods
push
loopne
in
js
pusha
test
fidivl
xor
jg
mov
pop
inc
gs
lods
add
mov
movsl
add
xchg
push
xor
push
jmp
mov
add
mov
sub
fsubr
inc
xchg
imul
insl
mov
pop
leave
xchg
mov
jae
jns
xchg
sub
mov
mov
enter
in
sbbl
add
cwtl
icebp
arpl
push
shrl
fsubp
andl
mov
lds
lahf
add
stos
in
jae
or
sbb
in
aas
mov
icebp
je
mov
xchg
test
or
out
ljmp
mov
push
xchg
sub
iret
outsb
jl
sbb
mov
cs
fldenv
and
mov
pop
jg
sti
xchg
adc
sub
sahf
xor
mov
sbb
mov
out
inc
add
pop
rcl
dec
fstpl
fbstp
out
loop
lock
loope
outsl
jnp
aas
loopne
cs
and
enter
xchg
dec
out
in
xchg
cwtl
push
icebp
insl
out
mov
pusha
out
add
fs
aaa
pop
pop
loop
adc
ss
loop
and
lahf
xchg
inc
or
jg
or
sarb
lahf
popf
pushf
rorb
mov
ret
cmp
jnp
daa
xor
mov
mov
mov
push
pop
nop
icebp
int
test
sbb
ds
ret
mov
dec
dec
cmp
xchg
nop
mov
sbb
loopne
xchg
outsb
cmp
add
test
mov
xchg
aaa
dec
or
in
mov
sub
lahf
mov
loope
dec
mov
push
mov
or
xchg
jp
jae
insl
in
test
push
dec
xor
in
lahf
mov
filds
jmp
adc
jecxz
int3
mov
cmpsb
cmp
clc
jns
pop
and
std
mov
sarb
sub
shll
bound
mov
ljmp
mov
xlat
xlat
xchg
fistpl
pop
jmp
shrb
jl
jecxz
mov
movsb
sbbb
out
repnz
mov
outsb
pop
lods
pop
iret
push
xor
lcall
notl
sti
sbb
jmp
or
mov
cwtl
xor
cli
inc
arpl
sub
push
std
push
inc
fildl
jo
es
cmpb
into
shll
mov
insb
shrb
repnz
loopne
dec
xchg
imul
adc
pop
cmp
stos
mov
in
mov
sub
outsb
lahf
inc
push
xchg
push
inc
cmc
and
mov
add
cmp
fs
xchg
dec
mov
jnp
stos
aas
add
xor
sub
outsl
sub
icebp
adc
add
pop
jbe
inc
popa
xor
or
in
inc
xchg
mov
pop
pusha
das
xchg
xchg
cmp
xlat
mov
or
xchg
arpl
bnd
call
in
xchg
mov
inc
loope
adc
int3
aad
jmp
push
mov
test
icebp
imul
in
add
adc
add
bound
push
imul
mov
mov
push
enter
adc
negb
test
adc
call
in
sbb
sbb
add
and
clc
mov
test
cmp
push
insl
stc
ret
push
bound
mov
push
nop
daa
dec
sub
mov
fisubrs
add
cmp
aas
outsb
cmpl
pop
fdivrs
jae
jmp
pop
out
xchg
outsb
rorl
repz
cltd
dec
fs
int3
cmp
lea
pop
fs
stc
popf
jle
inc
push
add
sarb
xchg
add
jnp
xchg
dec
inc
test
in
fmuls
and
sub
aas
pop
in
mov
dec
test
outsl
pop
push
das
sahf
clc
add
jmp
adcl
pop
mov
push
aas
aas
sub
push
pop
pop
inc
dec
or
lea
scas
in
test
adc
cmp
add
push
loope
jno
and
xchg
aad
mov
lret
jns,pn
cltd
sub
xchg
cmp
jmp
mov
je
test
and
int
sbb
loop
push
popa
xor
sub
lods
push
adc
cld
ds
imul
push
call
dec
sbb
repnz
and
inc
leave
xor
test
ret
iret
add
pop
les
mov
ss
dec
arpl
pop
inc
lret
sub
mov
es
scas
or
sbb
test
imul
scas
mov
add
mov
mov
and
mov
sub
mov
rclb
push
jg
sbb
sahf
mov
sub
faddl
sub
xchg
cld
dec
sbb
sti
into
out
pop
sub
jmp
sarl
cld
inc
push
pop
inc
cmpsl
andl
pop
mov
push
cmp
aad
cltd
push
sbb
adcl
inc
or
pusha
fcomi
mov
test
es
push
sbb
inc
jno
xchg
pop
in
in
enter
cmpb
mov
in
xor
jbe
inc
push
in
push
xlat
out
inc
pop
push
sti
ja
fists
or
mov
add
jge
sub
xor
xchg
jnp
dec
adc
outsb
inc
outsl
aam
movsl
insb
xor
clc
push
aad
adc
jbe
sub
lock
inc
push
pop
push
jmp
jp
movsb
or
int
fisubs
ret
arpl
les
dec
push
insb
test
sub
or
je
lods
add
das
jne
and
lock
lea
adc
or
out
shll
adc
cli
into
pop
jo
hlt
pop
shll
repz
cli
test
aaa
pop
cwtl
ja
fnsave
mov
addr16
nop
test
iret
push
fcmove
addr16
popf
xor
jb
add
or
xlat
jnp
iret
lahf
rcrl
cs
xchg
stos
test
cmpsl
jecxz
sbb
repz
sub
ds
xchg
pop
lret
jg
push
xchg
scas
mov
notb
cs
xlat
outsl
enter
fwait
test
es
subl
mov
jns
inc
ds
sub
cmp
xor
push
inc
add
scas
inc
push
and
movsl
and
xor
fsts
sti
xor
add
subb
outsl
fs
sub
jae
pop
andb
jle
jle
data16
mov
sub
vpmulhw
mov
mov
push
inc
cmpsl
pop
push
nop
add
inc
add
dec
lea
insl
and
loop
inc
sub
lods
in
call
jge
in
cmp
pop
or
mov
push
inc
sbbl
jg
push
iret
das
movsl
sbb
lret
out
or
add
xchg
fisttps
sbb
call
pop
add
mov
and
and
dec
mov
rorl
xchg
cld
jo
pop
push
call
aaa
test
adc
xor
lea
subb
sbb
xchg
mov
imul
mov
pusha
adc
in
pop
cmpsl
pop
add
cmp
add
inc
test
cmp
xlat
pop
cmp
xchg
lret
js
cld
xor
xor
push
mov
xchg
push
icebp
inc
mov
inc
mov
mov
and
loop
xor
out
pop
pop
lods
push
push
sub
bound
lret
add
jno
inc
lcall
popa
scas
ja
pop
out
insl
xor
mov
sbb
imul
or
add
jns
or
add
mov
stos
adcl
fidivrl
adc
add
mov
out
and
cmp
jge
mov
mov
lcall
out
lods
mov
lods
fwait
or
cli
and
repnz
add
mov
sub
out
mov
dec
push
mov
into
arpl
ljmp
out
rcrb
lahf
mov
fdivrs
or
je
loopne
mov
ds
mov
inc
sub
sbb
gs
jae
sbb
fsts
lahf
mov
je
and
jb
inc
add
jbe
out
test
inc
add
xor
jbe
fildl
inc
xchg
movsl
shll
push
mov
movsb
sub
xchg
in
test
jo
popl
cmp
ret
stos
or
in
mov
int
jp
loopne
cmc
mov
iret
jno
mov
add
sbb
sbb
jg
insb
mov
mov
mov
int
shlb
stos
adc
or
inc
push
dec
nop
xor
testl
sub
test
cmp
pushf
inc
xchg
ljmp
fwait
ljmp
mov
shll
pop
rcll
aas
mov
test
inc
jge
test
jp
pop
pop
xor
xchg
add
mov
mov
aaa
test
stos
or
or
jo
xchg
arpl
push
pop
pop
repnz
xor
add
imul
lret
jl
mov
repz
inc
js
andb
pop
sub
lahf
pop
dec
fldcw
mov
xchg
call
add
xor
jns
pop
push
add
scas
lods
fnstenv
sbb
adc
rolb
in
loopne
sbb
dec
nop
cmp
fwait
insl
mov
sub
and
aaa
fs
lcall
shlb
movsb
mov
jne
mov
adc
int3
xchg
or
stos
popf
jg
repnz
lcall
pusha
imul
push
daa
outsl
jnp
js
in
je
mov
lahf
roll
in
mov
pop
inc
jge
inc
xor
sti
movsb
push
mov
pop
add
daa
mov
vmovupd
ret
dec
sbb
stos
js
lret
repnz
fmuls
dec
lods
mov
xchg
rcl
or
push
fsub
xchg
out
fimull
pop
sub
dec
ds
das
mov
add
in
mov
jl
sti
loope
add
dec
mov
add
lock
mov
jecxz
xlat
sub
jecxz
sub
inc
xlat
stos
pusha
in
xchg
lret
pop
cmp
fldt
dec
sbb
add
mov
jae
push
add
or
in
ljmp
outsl
and
and
fldl
dec
jns
int
out
adc
mov
les
pop
aad
movsl
sub
vpsllq
xor
add
hlt
inc
insl
add
scas
repnz
into
stos
sub
stos
adc
call
sbb
in
std
jae
add
ret
xchg
and
pop
jle
inc
icebp
adc
or
pushf
out
aad
hlt
push
sbb
insb
sti
fidivs
or
std
or
mov
mov
ja
frstor
dec
push
jge
jne
movaps
jp
dec
popf
lods
inc
or
xor
xchg
xor
dec
test
sbb
insl
pop
push
jne
insb
jne
mov
shl
imul
adcl
sbb
jnp
lock
pop
leave
mov
push
xchg
mov
cwtl
inc
jge
in
addl
je
push
aad
jmp
inc
dec
jmp
or
mov
mov
outsb
mov
popw
jg
mov
mov
ja
scas
cmp
enter
jle
imul
mov
pop
repz
clc
test
jno
imul
adc
fldcw
mov
adc
add
scas
lods
or
adc
clc
xchg
dec
ficomps
in
jmp
iret
stos
or
add
roll
xchg
outsl
mov
loope
rep
daa
mov
cmp
std
mov
fs
xlat
mov
ljmp
mov
les
pop
es
call
push
negb
mov
sub
mov
mull
jb
in
push
push
mov
fisubrs
fsubrs
push
popa
stos
jp
data16
cmp
xchg
sbb
jge
mov
stc
mov
inc
xchg
lds
or
cmp
mov
fs
sbb
fcomps
mov
sub
sub
idivb
adc
xchg
sub
push
sub
inc
xor
inc
ljmp
sub
adc
dec
push
scas
mov
lahf
ss
xor
scas
add
cs
xor
stos
sbb
push
pop
ss
mov
fsubl
dec
push
lock
cmpsb
jle
fwait
lea
push
imul
les
mulb
mov
in
inc
pop
scas
mov
push
scas
mov
lret
dec
sahf
insl
enter
mov
lcall
jmp
push
lods
xchg
mov
movsl
fcomip
aam
mov
adc
loopne
xchg
or
jle
cmp
mov
call
in
aam
dec
mov
lea
fstpt
add
sti
xor
loopne
pop
and
jecxz
daa
xchg
fisubl
cs
xor
mov
mov
imul
int
add
adc
jp
cmpb
pop
pusha
scas
inc
add
adc
cmp
ss
incl
fnstenv
shrb
push
jns
mov
cltd
andb
adc
sbb
push
movsb
pop
sub
in
add
shrl
test
loop
and
popa
aam
out
mov
push
shll
pop
cmpsl
xor
imul
sub
das
jp
insb
aaa
xchg
rclb
dec
ss
mov
mov
shl
inc
sbb
scas
pop
into
sbb
test
cmp
adc
sub
push
pop
outsb
xchg
call
cmp
push
jno
push
mov
cmp
push
shll
adc
push
call
in
loope
push
stos
sbb
mov
and
out
fnstenv
imul
xor
pop
xor
decl
xchg
hlt
mov
pop
push
rorl
ljmp
and
addl
in
iret
lods
fs
fisttpl
mov
mov
div
ret
fildll
fidivl
add
dec
ljmp
movsb
out
cmpsb
jno
sarb
rol
repnz
pop
mov
adc
inc
pop
les
and
jae
adcl
sbb
fs
push
jb
push
jmp
loopne
push
out
lds
aad
nop
xchg
or
cmp
add
push
adc
hlt
stos
cmp
loop
cmp
add
jmp
aad
dec
enter
pop
jecxz
out
loop
scas
icebp
js
shl
lds
popa
insb
test
cmp
lea
push
inc
mov
sarl
arpl
ret
push
mov
and
mov
dec
mov
xlat
push
inc
lods
xchg
dec
aam
dec
pop
loop
cmp
dec
hlt
fcom
mov
push
iret
xchg
mov
pop
mov
rol
ret
xor
sarb
cld
inc
sti
mov
fs
rcrw
jmp
stos
sub
cmc
enter
mov
add
mov
adc
sbb
pop
dec
dec
mov
dec
and
push
xchg
add
scas
inc
orl
jne
repz
cmpsl
xchg
pop
insl
and
leave
pusha
stos
inc
out
dec
adc
ret
xchg
cmc
fwait
loopne
lock
js
mov
imul
dec
adc
ret
gs
xchg
shrb
add
cmp
mov
push
xor
pop
addb
shll
sub
pop
cmpsl
out
adc
ret
jnp
pop
nop
xlat
nop
out
adc
sbb
inc
push
pop
call
sahf
ret
and
outsl
pop
push
shll
call
mov
mov
insl
xchg
fldt
bound
out
adc
jo
lea
mov
mov
insb
push
ret
inc
fistpl
jnp
loopne
cltd
adc
xchg
mov
ficompl
jnp
fbld
outsl
iret
dec
or
inc
cmpsl
out
sbb
sbb
mov
hlt
test
fsubrl
jge
stc
lock
daa
jb
cwtl
jne
xchg
data16
clc
loopne
sbb
mov
mov
jmp
insb
xor
add
es
fidivs
mov
mov
jg
lcall
loop
fwait
cmp
push
add
sub
mov
loop
idivl
cmp
aaa
or
repnz
jle
pop
mov
pushf
cli
mov
stc
lahf
and
xchg
dec
cmp
jl
arpl
jg
mov
pop
in
scas
inc
ffreep
fnsave
int
xor
test
push
dec
cld
xchg
jle
mov
stc
mov
test
stc
das
sub
repz
push
jmp
sub
cmp
sub
mov
dec
in
pop
jecxz
mov
movsl
xchg
or
add
movsl
cmp
clc
and
add
into
gs
icebp
xor
in
mov
inc
sub
dec
out
dec
cmp
mov
imul
add
aad
xchg
mov
dec
test
xor
pop
stc
pop
sbbl
sbb
jp
lods
mov
or
hlt
mov
cmpsb
cmp
cwtl
pop
les
xchg
popa
mov
insb
xor
popf
adc
inc
mov
push
in
xchg
sbb
dec
shrb
inc
lahf
icebp
aad
daa
mov
repz
scas
adc
movsb
sti
addr16
sub
mov
or
push
in
xor
je
mov
add
cmpb
mov
add
lock
push
scas
inc
push
mov
fs
filds
adc
cwtl
pop
and
popa
push
jns
mov
jae
jg
into
or
fisttpll
cs
loop
sub
subb
jne
fldenv
push
mov
inc
mov
fs
pushf
sbb
pusha
dec
nop
pop
icebp
shrl
loop
nop/reserved
lret
cmp
xchg
insl
sub
mov
fcmovb
pop
or
ja
sti
pop
fnstenv
sbb
sub
test
ss
faddl
adc
arpl
out
mov
sbb
fnstenv
sub
out
xchg
ret
or
das
push
push
and
dec
pop
ds
jo
adc
mov
es
adc
nop
inc
daa
lods
inc
pop
arpl
scas
xchg
jp
bound
mov
int
es
push
pop
jbe
mov
scas
lods
stos
nop
daa
loopne
loope
push
add
in
and
loope
xorb
cmpsl
mov
es
idiv
nop
and
add
dec
inc
pop
hlt
je
sub
enter
out
es
test
stos
arpl
in
fwait
orl
mov
xor
movlps
dec
das
jno
pop
imul
adc
int
clc
cli
pop
inc
faddl
mov
jecxz
xchg
jb
add
leave
into
gs
add
imul
push
testb
mov
pop
out
icebp
mov
cmovnp
cmp
xchg
sub
pop
sahf
xchg
dec
popf
mov
fidivl
icebp
arpl
sbb
scas
dec
inc
fwait
xor
testl
in
call
jl
cmp
pop
imulb
xor
adc
lahf
cmp
inc
fsubs
dec
loop
shll
add
xor
arpl
pop
jmp
inc
sbb
cmp
repnz
cmp
sub
mov
adc
lock
xor
sbb
in
sbb
or
and
ljmp
loop
insb
add
jne
insb
out
xchg
push
mov
mov
cmp
xchg
data16
mov
out
or
jg
xor
adc
call
xor
test
insl
add
mov
clc
call
xor
pushf
push
mov
push
call
xor
mov
loope
pop
adc
shrl
or
gs
leave
pusha
push
mov
dec
out
stos
inc
cmp
rcrl
dec
out
scas
dec
loopne
adc
insl
inc
inc
test
lods
or
xor
dec
aas
push
call
add
mov
je
xchg
sub
stos
inc
fcomp
adc
std
xchg
js
out
or
sbb
adc
fldl
mov
jae
push
dec
sbbl
int3
in
add
nop
daa
push
dec
xchg
jl
push
lods
add
orb
cmp
xchg
sub
mov
mov
pop
int3
arpl
jne
jo
mov
push
stos
mov
mov
fbstp
xchg
or
cld
xchg
push
xor
mov
scas
inc
std
mov
pop
cmc
pop
cmp
mov
mov
testb
ret
repnz
sub
jmp
pop
rcll
add
scas
pop
sbb
dec
iret
mov
mov
sub
repnz
in
fcompl
sub
xchg
pop
movd
in
jb
and
popa
cmc
jb
sub
push
jmp
xor
in
push
mov
pusha
notl
cmp
xor
popa
xlat
in
sbb
inc
xchg
jns
cmpsb
cmp
fucomip
data16
and
addr16
ret
xchg
inc
fcmovnb
xchg
ss
out
int3
arpl
add
pop
ds
xchg
fidivs
lcall
sub
push
pop
ss
mov
iret
mov
fldenv
mov
push
das
inc
xlat
pop
js
cmpsl
test
into
data16
sti
iret
add
push
sbb
pop
test
into
leave
pusha
cld
mov
repnz
movsb
cmp
jbe
mov
xchg
enter
mov
or
sbb
cmp
insb
das
cltd
push
dec
loopne
mov
icebp
mov
adc
xchg
dec
cld
repz
insb
shlb
dec
int
cmpb
lock
sub
cmp
mov
mov
mov
js
cltd
insl
add
push
cli
xchg
aaa
push
jno
test
insl
sbb
dec
loopne
add
lock
insb
xchg
or
xchg
xchg
sub
inc
pop
scas
js
sub
nop
test
push
fstl
int
jb
ja
xchg
scas
mov
mov
bound
pop
ret
mov
pop
scas
pop
or
cmp
int3
jne
jp
xchg
outsb
add
sub
push
in
and
jb
insl
sbbl
out
clc
ljmp
dec
xor
jns
jge
lds
and
adc
xor
in
gs
jo
push
ret
test
adc
aaa
push
xor
push
adcl
popa
add
ja
pop
and
push
push
jns
daa
scas
jb
or
leave
xchg
lods
cli
sbb
lods
dec
sbb
dec
dec
outsb
inc
push
mov
shrl
notb
inc
fildl
aad
dec
sbb
xchg
imul
mov
rolb
add
aas
xor
push
xlat
out
xchg
out
xchg
test
or
mov
es
lahf
ss
push
lds
fwait
xor
mov
sub
clc
pop
lock
inc
sub
add
lret
add
cld
testb
sub
pop
repz
nop
and
ss
dec
mov
jp
shrl
fwait
cmpsl
shll
xchg
clc
icebp
mov
mov
mov
dec
pop
sahf
jle
push
popf
aaa
cltd
jge
iret
push
outsb
add
pop
mov
pop
loop
cmp
inc
movsl
jnp
out
in
mov
sarb
adc
mov
add
out
movsb
cmp
fcomp
inc
out
ja
fmull
xor
inc
fdiv
adc
jae
sbb
adc
pop
sarb
adc
pushf
push
or
push
cmp
mov
out
or
cmp
stos
pop
ret
outsl
jp
aaa
mov
xchg
push
jge
dec
lea
mov
in
inc
or
pop
ljmp
popa
notb
insl
movsl
lcall
push
out
sbb
and
inc
cmp
call
pop
mov
mov
push
jbe
insb
mov
add
push
jae
push
testl
sar
or
push
loop
push
out
xor
xchg
pop
lods
mov
std
jo
out
xchg
mov
pop
arpl
cmp
mov
data16
cmp
outsb
cwtl
cltd
je
fiaddl
jb
enter
std
jmp
and
cli
les
shlb
dec
loopne
and
sub
and
push
add
add
jmp
lds
outsl
fidivl
stc
dec
aad
lret
in
cmp
pop
xchg
sbb
xor
call
scas
add
add
out
ja
sbb
int
je
sub
cld
jne
mov
xlat
adc
inc
fadd
push
mov
pushf
ret
es
lods
mov
mov
int
xlat
ljmp
loopne
dec
push
call
add
in
sbb
pushl
sbb
push
inc
fwait
sbb
mov
out
push
into
stc
mov
push
or
xchg
sub
push
jl
pop
out
aaa
dec
mov
push
push
addb
inc
test
daa
xor
rorb
outsb
mov
aas
mov
mov
pushf
jo
std
inc
or
xor
push
add
mov
and
push
out
and
std
into
push
fistpll
lret
ffree
sbb
loopne
jne
je
nop
out
popa
mov
jmp
popa
clc
inc
or
mov
cmp
test
mov
add
addl
jecxz
jae
or
xor
jmp
push
imul
test
pop
jb
xorb
inc
or
testl
or
dec
lcall
scas
cmp
js
adc
pop
jb
popf
nop
cmp
cmpb
or
hlt
out
xor
fcmove
inc
fisubl
aaa
xchg
stos
jne
add
cltd
hlt
cli
cld
das
int
pop
lds
ljmp
adc
dec
cwtl
jmp
mov
fucomp
adc
mov
sbb
fldcw
sbb
adc
leave
jno
out
xchg
fisttpl
iret
pusha
cwtl
fstpl
jnp
adc
imul
ss
add
stos
mov
fiadds
xchg
bound
data16
addb
jge
jmp
popa
mov
loop
dec
in
add
movsb
ds
nop
call
sbb
mov
mov
repnz
out
and
cmp
xor
fdivs
adc
push
fwait
test
or
or
out
and
cmpl
ret
pop
mov
ret
fdivl
je
test
test
fmull
sarb
orb
and
lods
addl
aaa
in
fsubs
inc
mov
fistpl
push
lret
inc
enter
enter
mov
int3
lret
mov
fs
mov
push
leave
lret
mov
stos
xor
or
dec
mov
xchg
xor
lods
pop
repz
mov
cmpb
dec
bound
adc
aam
in
cwtl
pop
mov
stos
mov
or
mov
mov
jecxz
jne
gs
add
das
mov
sahf
sbb
sub
cmc
mov
adc
bnd
cmpsb
pop
mov
dec
sub
fmull
or
into
test
jp
or
xchg
test
xchg
mov
sub
dec
dec
lds
fisttpll
dec
cmp
jge
test
adc
ljmp
xor
jl
xchg
jbe
push
push
mov
stos
xchg
jae
stos
jo
cmp
jbe
mov
ja
into
scas
xchg
aad
mov
sub
cmpb
dec
mov
cmc
push
pop
iret
insb
mov
pop
call
jnp
adc
aaa
dec
adc
lods
dec
push
and
inc
jo
or
and
loope
jb
cwtl
push
in
adc
jne
and
cmpsl
out
cld
jl
aas
dec
mov
ficoml
xchg
mov
and
adc
pop
add
test
adc
mov
inc
or
jmp
cmpsl
clc
sub
popa
int3
inc
pop
hlt
inc
mov
ss
sahf
aad
test
flds
sbb
stos
add
or
jae
jae
gs
pop
inc
push
shlb
sbb
sbb
test
sbbb
leave
subb
aaa
icebp
stos
cmpsb
push
mov
lea
sub
mov
jno
fisubrs
ret
shlb
in
fnsave
sub
xchg
in
mov
insl
cwtl
or
xorl
lahf
ja
cli
sbb
adc
xchg
arpl
xor
shrb
sbb
daa
jle
ret
dec
jae
notl
mov
cli
movsb
andb
jecxz
mov
add
aam
js
shl
mov
mov
or
push
and
mov
pop
mov
mov
ds
pop
mov
call
movsb
jp
xchg
mov
xor
popa
mov
inc
shl
cmpsb
cmp
das
out
pop
call
dec
cld
or
push
push
lods
and
jg
inc
loop
fcmovne
push
in
out
rorl
pop
inc
lahf
movb
sub
pushl
scas
bound
or
adc
in
pop
stc
cmp
and
aad
stos
test
sbb
cmc
xchg
mov
xchg
sti
mov
adc
roll
cmpsl
test
andb
dec
mov
lock
push
popf
or
fmull
adc
in
xchg
xchg
push
adc
addr16
and
lock
jg
push
std
push
push
lock
rcrl
pop
pop
repz
push
mov
repnz
jo
fwait
mov
and
cmpsb
imul
xchg
pop
xor
mov
movsb
push
in
pop
loop
and
push
rorb
xlat
push
fbstp
jo
mov
push
addr16
jg
sub
and
jno
xchg
imul
pop
out
add
mov
rcrb
add
repnz
lcall
jae
out
shrb
mov
adc
mov
adc
fldl
xchg
lods
pop
sub
mov
dec
jb
jae
and
mov
push
subb
dec
inc
mov
mov
popa
in
sub
addb
dec
in
xchg
sti
xchg
lds
cs
dec
movsl
fiaddl
push
aam
cmp
inc
movsl
test
ja
xchg
dec
loop
test
mov
sub
and
int
lcall
rorl
push
dec
sbb
stc
mov
mov
in
bound
or
push
mov
sub
mov
arpl
xchg
and
stos
jle
sub
mov
fcompl
out
in
xor
ror
or
mov
fsub
sub
mov
call
add
ljmp
in
and
adc
jne
pop
shlb
dec
push
loop
lods
lds
dec
arpl
jbe
fbstp
stos
pop
jne
pusha
fwait
mov
mov
add
or
sbb
or
cwtl
mov
daa
or
decb
or
call
xchg
mov
popl
std
les
mov
shrb
mov
xor
je
fistl
ss
xor
jno
add
das
mov
hlt
sub
sbb
push
jecxz
push
testb
in
mov
jg
mov
fldt
xlat
in
mov
sbb
mov
rcll
inc
lea
repnz
push
pop
jne
mov
pop
ljmp
push
loopne
push
push
rcrb
sbb
dec
loop
dec
xlat
jo
rorl
les
xor
popa
ljmp
xor
cld
test
sub
rcrl
mov
pop
iret
mov
repnz
movsb
cwtl
jns
sbb
push
mov
and
inc
mov
xor
push
test
cmp
push
mov
xor
inc
mov
cmp
stos
insl
mov
push
mov
fsubrl
insl
xor
xor
lahf
movsb
insb
fldt
push
fnstcw
cmp
mov
test
int3
sbb
or
mov
jmp
inc
mov
and
arpl
dec
mov
test
adc
fcoms
orl
lds
fcmovu
and
out
leave
jae
sti
fidivl
into
sbb
movsl
scas
and
or
jb
les
int
mov
and
insb
xchg
or
sbb
nop
xor
cs
adc
bound
fdivrs
pop
out
cmp
cmp
adc
xor
cwtl
xorl
xor
and
cmp
xchg
fdivs
mov
mov
xor
xchg
mov
or
push
inc
cmpl
jnp
jecxz,pn
cmp
xor
adc
cmp
out
and
inc
adcb
mov
push
and
mov
bnd
orb
mov
cld
mov
jmp
fwait
xor
push
dec
ss
mov
inc
jno
jne
popa
je
pop
xor
mov
repz
stos
pop
mov
andl
ficoms
jo
push
and
aaa
cmp
jns
push
aas
cmp
inc
jnp
ret
ss
es
lret
push
cmp
and
imul
mov
scas
data16
xchg
mov
xchg
jp
repnz
xchg
mov
mov
scas
int3
jo
add
shl
ret
cli
xor
into
cmp
inc
popf
lahf
push
adc
adc
sub
jno
mov
into
xor
stos
mov
or
xor
mov
add
dec
and
jo
mov
outsb
inc
or
addr16
inc
xchg
sub
out
push
or
test
pop
push
scas
popl
cwtl
jne
iret
mov
dec
jmp
shrb
dec
insb
xchg
mov
push
jbe
push
inc
and
push
dec
cmp
popa
inc
or
gs
inc
cmpsb
xchg
jnp
movsb
call
ljmp
cli
std
xorb
rcrl
subl
pop
cmpsb
movsb
mov
push
call
xchg
iret
ss
push
outsl
mov
lods
aas
in
adc
and
imulb
mov
mov
dec
mov
sbb
pop
mov
cli
push
mov
loope
pop
lret
mov
mov
mov
in
cmpsl
popa
shr
cmp
mov
xchg
jg
or
in
in
mov
negl
div
leave
xor
std
pop
cmp
push
les
cltd
adcb
jae
xchg
stos
lds
adc
gs
outsl
xor
sub
pop
loop
mov
jmp
ds
cmp
push
orb
and
jle
cld
xor
out
xor
dec
out
das
rorb
pop
ret
aad
dec
and
sub
pop
push
cmp
push
outsb
jno
jo
push
icebp
sub
nop
jns
sbbb
std
cs
xor
pop
hlt
sbb
mulb
ret
xlat
push
xor
cmc
mov
fldl
ss
mov
sub
insb
mov
push
shrl
clc
fidivrs
lock
fsts
push
inc
xchg
mov
hlt
jns
mov
add
xchg
push
addr16
mov
add
leave
inc
scas
out
popf
jmp
es
add
notb
jnp
add
ja
fisttpl
cmpsl
imul
lock
outsl
push
cmp
mov
xor
outsb
mov
jb
cmp
outsl
in
dec
call
fisubrl
fdivl
neg
nop
ret
dec
pop
fcompl
hlt
test
push
in
lahf
xchg
sbb
xchg
push
mov
cmpsl
push
imull
stos
test
mov
mov
xorl
add
out
rcrl
and
divb
inc
xor
mov
pop
stc
adc
lret
ds
jle
adc
fidivs
mov
js
and
adc
test
popa
fsts
js
mov
dec
xchg
cs
pop
push
mov
inc
inc
leave
pop
jbe
dec
xor
lret
fldl
cli
sbb
xor
cmpb
sbb
addr16
mov
ret
or
aam
jo
adc
mov
sbb
aaa
notl
lahf
pop
pushf
and
jle
test
mov
popf
xchg
fs
adc
xchg
fldcw
xchg
cli
pop
mov
push
or
dec
ficoml
fdiv
and
inc
mov
and
bound
bound
inc
jo
sbb
aaa
pushf
outsb
mov
sub
adc
sbb
das
repz
jnp
mov
mov
lock
mov
ret
jmp
test
push
xor
sbb
sbb
outsl
js
inc
jl
dec
inc
dec
rcll
jo
mov
xor
bound
mov
ret
sbb
popf
rclb
adc
repz
inc
fimull
lret
sub
xlat
sub
fldz
sbb
into
sbb
popf
and
and
outsb
and
mov
pop
push
push
pop
pop
bound
dec
inc
sub
fildll
inc
int3
aam
out
xor
jmp
or
jnp
push
popf
cli
pop
outsl
mov
sbb
into
mov
push
movlps
dec
iret
mov
out
stos
fcomps
repz
mov
mov
and
xor
adc
add
enter
sti
cmp
sbb
push
fidivs
fadd
and
mov
call
pop
jp
int3
inc
mov
mov
gs
scas
nop
aaa
cwtl
das
xlat
call
push
ljmp
add
add
sub
ret
call
scas
mov
mov
sub
xchg
dec
dec
xlat
cmp
jge
or
jecxz
xor
das
xchg
xchg
add
and
and
rorl
and
inc
in
mov
mov
sti
mov
mov
sbb
ret
dec
mov
sti
lds
fidivl
fucomi
stos
fs
js
test
lods
pop
lret
push
out
fists
sbb
movsl
imul
out
lahf
mov
fsts
dec
shl
cwtl
mov
mov
addr16
outsb
or
dec
js
jo
cmpb
xchg
push
push
jmp
clc
out
inc
test
insb
mov
add
inc
mov
in
dec
push
push
int3
fbstp
add
cmpsl
fdivrs
repz
mov
adc
jg
gs
and
jbe
je
push
pop
outsl
fadds
sbbb
dec
inc
mov
add
mov
sbb
pop
lock
pusha
test
stos
cli
cs
js
push
stos
jmp
scas
pusha
clc
into
mov
loope
jb
ds
repz
pusha
orb
cmp
xchg
mov
cld
pop
lods
mov
repz
ljmp
cmpl
daa
scas
insl
test
movhlps
or
xor
ror
push
ffree
fadds
mov
gs
mov
xor
repz
popf
xor
push
mov
cmpsl
xlat
out
push
pop
mov
inc
or
mov
push
jge
mov
cld
cmp
mov
fisttpll
cld
into
aaa
or
pop
xchg
aam
pop
loopne
mov
mov
xchg
mov
adc
mov
in
dec
in
ret
mov
jmp
adc
iret
add
mov
call
mov
movsb
fadd
rclb
pop
lret
cltd
xor
movsb
sub
sbb
les
mov
adc
repz
inc
out
xchg
rcr
in
pop
lds
stos
xchg
push
and
enter
test
push
push
enter
inc
or
cmc
xchg
and
ret
mov
scas
js
sarb
push
mov
jmp
aaa
mov
icebp
cld
xchg
and
push
popa
dec
xchg
jnp
das
daa
fdivl
mov
int3
sub
cld
cmp
push
jmp
sbbl
adc
jle
push
popf
cmp
gs
mov
jno
and
je
xlat
inc
mov
stos
jecxz
sub
cmp
jne
adc
sbb
jb
jne
inc
daa
dec
adc
scas
cmpsl
ficompl
add
les
adc
scas
push
adc
cmpsb
pop
push
shrb
gs
or
xor
gs
dec
mov
lea
inc
or
cmp
movsl
xor
imul
and
leave
fdivl
mov
insl
mov
adc
pop
lock
addb
dec
mov
hlt
shll
enter
in
mov
pop
cli
dec
in
xchg
incb
jge
int3
mov
lret
sub
out
arpl
add
jle
out
les
add
lods
in
dec
lds
xor
mov
scas
jno
xsha256
cmpsb
push
add
push
ja
js
jnp
les
xor
lock
push
mov
mov
into
jmp
movsl
sbb
loop
lds
xchg
mov
sub
hlt
xlat
ss
jmp
cmpsl
pop
jecxz
xor
xor
notl
into
gs
mov
mov
or
pop
add
cmpl
insl
lahf
xor
xchg
sub
push
es
or
dec
nop
out
sub
in
jo
add
push
push
aas
repz
jmp
inc
xchg
push
mov
xor
aam
cmp
fists
mov
xchg
stos
nop
sub
fwait
xchg
imul
negl
mov
enter
inc
int3
mov
sti
sub
iret
adc
fstp
and
add
push
clc
xor
push
fisttpl
cmpsb
pop
mul
mov
xlat
mov
call
or
and
lods
imul
decb
adc
call
mov
sti
push
mov
add
xchg
outsb
add
int3
mov
jp
and
out
call
pop
pop
mov
mov
jo,pn
imul
adc
insb
outsb
stos
outsl
cmp
xchg
popf
xor
in
adc
call
in
sbb
loopne
repz
sti
xchg
adc
psubb
add
mov
mov
movsl
movb
in
xchg
mov
mov
fbld
popa
cmp
pop
mulb
mov
fidivrl
loop
mov
xchg
xor
add
xchg
mov
sarl
push
orl
push
jb
push
stos
xlat
adc
cmp
and
ja
pop
dec
adc
es
sahf
arpl
imul
and
pop
push
stc
inc
jl
dec
outsl
push
adc
bound
pop
pop
sub
or
popf
jae
sub
mov
jnp
ss
enter
push
lret
cmp
iret
pop
sahf
jno
add
sub
fs
cmp
or
insb
xchg
and
pushf
inc
add
jge
out
xorb
sbb
adc
stc
inc
xlat
das
rolb
jecxz
rcl
out
je
movsb
sbb
cli
cmp
js
sbb
xchg
jmp
mov
lods
jnp
lahf
xchg
into
call
push
shll
jl
xchg
dec
loop
enter
call
mov
xchg
test
mov
lods
xchg
fnstenv
dec
ret
jge
push
and
jecxz,pt
jno
aam
dec
pop
sti
outsb
inc
sub
add
or
sub
popa
clc
pop
cltd
mov
pop
pop
inc
cmpsl
jo
imul
repnz
jne
mov
inc
add
cwtl
push
dec
in
mov
sub
xchg
mov
shl
add
daa
jge
inc
les
enter
inc
lods
shl
push
in
scas
imul
mov
fmull
arpl
dec
fdivr
aam
xor
sarb
or
insl
movsb
fdivs
mov
jno
outsl
mov
outsb
out
neg
je
mov
and
pop
subb
jns
cltd
inc
out
xchg
rcrl
add
pop
pop
icebp
repz
int3
fadds
test
mov
cmc
imul
loop
in
test
fiadds
or
cwtl
mov
cld
popf
mov
mov
psllw
in
leave
aad
mov
rorl
cmp
lds
imul
push
jl
adc
pop
inc
xchg
lret
push
es
add
pusha
push
sub
sub
out
xchg
mov
sti
das
mov
icebp
rorl
fsubs
and
jne
xchg
pushfw
mov
push
popa
pushf
lods
jbe
test
cmc
pusha
cmpsb
int
pop
lret
dec
out
xor
mov
in
into
mov
cli
daa
mov
mov
mov
shrb
inc
frstor
sbbl
mov
lahf
ss
sbbb
cwtl
mov
aaa
pop
jmp
jb
jnp
push
lods
ds
nop
jo
fdivl
xchg
pop
scas
ret
and
xchg
push
in
int3
adc
ss
ljmp
jno
mov
fisttpl
or
mov
lret
bound
aam
addb
into
gs
daa
pop
sahf
pop
mov
and
mov
cld
pop
sub
sbb
inc
fsubp
outsl
adcb
add
xor
sahf
xor
xchg
mov
jb
cli
rclb
stc
nop
out
dec
fidivs
nop/reserved
shlb
int
repz
in
cmp
jbe
jae
cmp
xchg
sub
lods
scas
inc
fistpll
sub
into
xor
in
addl
or
addr16
sub
mov
fldt
mov
iret
sub
sbbb
andb
mov
sbb
mov
aaa
push
ljmp
stos
cmp
fdivl
nop
sbb
push
loop
int
jae
mov
xor
jmp
lds
into
testb
in
dec
fsts
or
xchg
sub
jg
arpl
shr
addl
or
jmp
or
cmp
inc
pop
sub
lea
arpl
dec
scas
dec
insl
sbbl
xor
lahf
ss
test
adc
cmp
data16
clc
rcrl
cli
xchg
in
dec
fbstp
or
std
xchg
adc
stos
inc
movsl
xor
arpl
jecxz
testl
push
pop
in
ss
sub
pop
cmp
push
push
in
test
outsb
add
rcrb
adc
mov
mov
loopne
push
adc
std
xchg
push
cmp
rorb
out
adc
cmp
pcmpeqd
stos
bound
in
mov
in
stos
adc
call
mov
push
mov
ficoml
mov
incl
sub
fs
iret
js
inc
stos
lock
into
movsb
dec
loopne
jge
in
inc
sti
add
bound
fnsave
scas
mov
push
filds
fsubrs
inc
dec
std
xchg
jle
mov
xchg
lahf
sbb
mov
fstpt
or
add
into
rcl
push
lock
andl
mov
imul
loopne
mov
xor
arpl
dec
mov
xchg
dec
mov
and
int3
ss
mov
add
push
xchg
outsb
jae
xchg
scas
adc
mov
in
jl
in
inc
sbb
xchg
jno
mov
loope
add
jmp
mov
mov
xor
jns
dec
sub
outsl
subps
ret
dec
aad
adc
test
push
nop
xchg
sti
pop
out
inc
shll
xchg
out
xor
cmpsb
cs
cli
ret
add
aam
pop
inc
jecxz
push
pusha
lods
add
ljmp
cmp
test
mov
add
and
xchg
mov
xchg
mov
jbe
add
movsb
shlb
xchg
mov
adc
or
xor
out
adc
icebp
mov
push
pop
les
leave
dec
push
add
arpl
sbb
adc
js
dec
adc
mov
and
int
jo
cmc
sbb
or
cmp
sbb
jae
dec
orb
ja
mov
cmp
das
inc
mov
js
adc
jnp
sbbl
jle
in
test
mov
pop
jl
or
adc
aam
cmpsl
stos
aad
and
sarb
stos
push
sub
outsl
xchg
mov
pop
xor
outsl
or
aad
test
mov
or
xchg
nop
jmp
in
dec
or
xchg
sub
shr
dec
movsl
xor
xor
pushf
or
aam
stc
mov
cltd
mov
pop
dec
fildll
push
imul
sbb
mov
xor
pop
mov
ss
pop
mov
dec
cmpsl
xor
or
jg
jl
outsb
ljmp
cld
movsl
es
leave
dec
xchg
inc
jp
hlt
cmc
in
iret
jb
sub
jb
aam
xor
loope
cmpsb
add
scas
aam
adc
xor
mov
jo
lret
iret
mov
cmp
cmp
repz
rcll
dec
es
push
in
ds
in
xchg
fstp
jge
test
sub
sbb
mov
lea
cmp
dec
test
jnp
data16
sbb
or
adc
in
add
push
call
pop
sub
jle
repz
in
insl
add
mov
xchg
cld
dec
xor
cmp
stc
nop
lret
sbb
pop
mov
jecxz
clc
and
roll
repz
lcall
in
pop
scas
adc
lods
inc
mov
push
popf
add
jg
mov
push
mov
add
mov
dec
push
call
mov
testl
fs
arpl
push
adc
sbbl
lcall
xchg
push
pusha
sub
xchg
jb
repz
in
imul
leave
cmc
sbb
faddl
dec
cltd
add
lret
mov
cmpsl
into
mov
sbb
divl
and
das
jg
ror
xor
dec
in
or
cwtl
and
hlt
pop
mov
test
jl
xchg
mov
enter
cltd
jns
cmp
scas
xchg
loope
mov
jno
cld
pop
lahf
jo
sbb
test
sbb
fdiv
loop
mov
out
or
sahf
repnz
mov
cmp
outsb
imul
mov
insl
mov
pop
mov
sarb
icebp
cmpsl
imul
ret
repz
add
sub
jnp
sub
arpl
inc
cmp
cmp
xlat
jle
push
aas
cmpsb
imul
add
ljmp
sarb
jmp
iret
xchg
sub
ds
pusha
hlt
lahf
repnz
jno
push
jle
faddl
es
or
dec
mov
int
inc
out
jmp
insb
mov
imul
es
ret
cmp
nop
negb
shrb
out
cmp
ss
jmp
cmp
dec
mov
push
inc
out
shrb
jmp
cmp
pop
out
cmp
dec
cmp
nop
stc
lahf
lret
jmp
mov
gs
test
ja
icebp
insb
and
mov
sub
sbb
push
dec
adc
pop
stos
das
stc
pop
or
and
adc
das
aam
cmp
stos
xor
push
leave
xchg
xchg
push
mov
lret
mov
test
ficoms
sub
loope
in
jae
or
jg
nop
pop
add
adc
fldl
iret
sub
xchg
sbb
mov
sbb
mov
dec
bound
ret
rolb
dec
push
mov
lods
fwait
aaa
cltd
sbb
movsb
sub
dec
adc
adc
pop
clc
gs
cmp
mov
and
xor
mov
xchg
jo
out
ret
jne
call
add
es
mov
cmc
inc
clc
data16
jecxz
pop
dec
add
shll
sub
add
es
xchg
sbb
mov
int
pop
fcmovnu
je
fiadds
sbb
stos
sbb
and
cltd
xchg
inc
popl
shrb
outsb
loopne
mov
movsl
stc
sbb
int3
dec
xor
test
xchg
inc
in
dec
jbe
imul
and
dec
push
mov
dec
mov
stos
mov
or
lods
pop
mov
sub
clc
mov
cmp
dec
test
stos
cmp
mov
and
mov
lods
cs
shrl
stos
js
sub
or
sub
pusha
lods
std
pop
mov
sub
imulb
cmp
or
dec
mov
test
call
hlt
xchg
mov
mov
mov
mov
mov
cmpsl
cld
pop
test
lods
cld
push
push
add
mov
clc
pop
and
fs
jae
sbb
and
pop
scas
sub
pop
sub
sbb
insl
and
outsb
out
aas
or
insb
repz
mov
stos
mov
mov
fs
jb
imul
mov
inc
rclb
mov
scas
pop
sbb
cli
pop
loop
mov
stos
inc
jno
popl
fisubrl
stos
iret
or
movsb
lea
outsl
call
sarl
sub
mov
nop
or
ret
pop
mov
loop
cmp
cli
pop
mov
movsl
mov
pop
aaa
movsl
jnp
ds
pusha
arpl
pop
jmp
icebp
push
add
lods
sub
cwtl
jge
lds
and
push
cmp
sub
xchg
lret
xchg
inc
leave
shlb
lahf
in
adc
sub
clc
jb
movsl
shrl
mov
sarb
aad
dec
fwait
lds
cmp
bswap
dec
and
sub
out
loopne
leave
scas
sub
inc
jnp
lahf
pop
xchg
inc
xchg
lds
mov
mov
mov
rolb
shll
mov
pop
lret
xchg
addr16
inc
or
pop
push
int3
mov
push
decl
mov
sub
xchg
inc
mov
and
scas
mov
cmp
subl
data16
dec
pop
or
add
pop
loopne
sub
dec
or
sbb
add
pop
mov
lods
in
test
leave
pushl
cmpsb
xor
scas
in
addr16
out
sub
cwtl
pop
mov
mov
xor
inc
sahf
cmp
and
jo
idivb
movsl
jns
ljmp
push
sti
stos
sub
push
iret
add
loope
mov
cmpsb
jns
imul
ja
cld
inc
cli
pop
mov
mov
popa
idivb
mov
pop
mov
incl
les
loope
cmp
jle
loopne
mov
mov
pop
mov
incl
inc
shl
cmp
and
pusha
idivb
lock
and
xchg
ds
push
pop
add
inc
adc
xchg
cmp
pop
add
aas
mov
dec
xor
imul
pop
add
push
or
jecxz
addr16
cs
mov
cltd
inc
add
push
cmp
fildll
dec
adc
sti
fs
ljmp
xchg
cmp
sub
cwtl
mov
outsb
add
fidivrs
mov
loop
je
ljmp
int
mov
sbb
imul
jb
pop
cmp
mov
cltd
mov
rol
pop
cld
and
dec
push
push
cmpb
pop
imul
in
push
or
lods
sub
push
test
inc
mov
daa
sar
scas
aas
and
sub
and
rorl
mov
les
cli
out
xchg
dec
in
int
movsb
movsl
xchg
inc
mov
das
lods
add
sbb
mov
add
fucompp
pop
les
add
xor
inc
roll
xchg
testl
ficoms
into
jne
and
sub
jae
xchg
aas
punpckhdq
test
movsb
cld
pop
mov
mov
xlat
in
mov
sahf
cmp
scas
sub
jns
jae
pop
inc
adc
push
jbe
sub
cmp
rcll
push
pop
dec
push
or
mov
mov
sahf
cmp
mov
pop
mov
popf
aaa
inc
scas
mov
inc
or
loope
mov
mov
cmpsb
xor
aad
jo
in
push
jo
add
lods
jle
and
jb
xchg
ds
xchg
or
ret
jmp
testl
inc
fldenv
or
stc
insb
pop
sub
inc
jge
add
xchg
jmpw
repz
sub
int3
nop
les
mov
rcll
mov
adc
mov
addr16
jae
push
cmp
mov
mov
mov
sub
and
scas
cmp
int
and
mov
sbb
and
pop
add
enter
mov
test
loop
add
aas
cld
or
cmpsb
daa
xlat
test
shl
lcall
hlt
fstps
mov
test
mov
or
add
push
cmpsb
sbb
lea
mov
inc
adc
lods
jnp
lgs
les
push
dec
loop
fdivl
out
mov
cmpsl
sub
test
shll
add
inc
and
push
cli
lahf
jg
mov
mov
mov
sbb
xchg
xor
imul
out
ds
lods
xor
cs
pop
out
ja
test
notl
xor
jmp
cmp
rcll
vphaddbw
cmp
sub
repz
adc
leave
addr16
mov
sub
test
mov
inc
out
in
add
int3
arpl
into
xchg
loop
mov
xor
movsl
sub
and
mov
sbb
outsb
or
les
pushf
push
test
mov
mov
xchg
imul
dec
sub
ret
flds
ret
lods
orb
mov
push
jmp
mov
dec
or
pop
test
mov
adc
subl
mov
jne
in
shll
mov
imul
in
insl
mov
mov
aam
inc
xchg
xchg
mov
cmpsb
cmc
sti
jecxz
mov
adc
and
or
mov
movsl
sub
or
iret
xor
in
add
push
cld
mov
push
rcrl
outsl
push
loop
jp
xor
or
mov
pop
jno
cli
adc
test
insl
adc
loop
add
push
sub
pushf
scas
push
add
testb
pop
cmp
or
out
imul
fidivrl
pop
loopne
icebp
mov
push
inc
lock
xchg
movsl
leave
pusha
out
stos
inc
and
mov
ret
xor
push
mov
lods
or
jge
in
jae
outsb
mov
lods
add
pop
add
lea
mov
fstl
mov
mov
sub
icebp
fidivrs
pop
loop
lds
push
pop
mov
inc
xchg
orb
mov
jecxz
sub
movsl
aam
pop
stos
xlat
jge
pop
push
or
push
adc
add
inc
arpl
or
sbb
sbbl
xchg
cmp
mov
inc
or
popf
sub
sub
fildl
or
pop
test
pop
int
cmovo
test
mov
sub
shlb
fstps
add
xchg
sbb
push
ret
jmp
std
arpl
mov
mov
xor
sbb
out
jae
dec
mov
xchg
push
ret
xchg
add
sub
mov
in
in
cmpsl
sub
jge
ficoml
dec
adc
out
rorb
pop
sahf
cmp
mov
ja
dec
sbb
lret
sub
xchg
in
je
into
xor
add
sub
popa
pusha
idivb
scas
sub
repz
add
jecxz
call
nop
daa
xor
pop
pop
push
pop
add
mov
enter
mov
or
cmp
sub
dec
push
ja
pushf
jp
cmp
lods
xor
xchg
aaa
push
xorl
inc
cmpsl
push
pop
std
cmpsb
jmp
xor
mov
insl
in
xchg
ret
sti
rcrb
sarb
add
not
xorb
cwtl
pop
insb
rolb
and
sahf
cmp
mov
sahf
cmp
inc
call
fwait
int3
out
push
push
sbb
push
out
xchg
mov
adc
xchg
cmpl
cwtl
fimuls
sub
sub
and
mov
std
mov
outsb
in
cli
repz
inc
jp
dec
pop
out
add
push
out
lret
jbe
cltd
and
mov
inc
mov
xlat
push
cmpsl
push
out
xlat
xchg
pop
cmc
xabort
mov
pop
jo
cld
call
outsb
hlt
mov
pop
add
test
push
adc
data16
mov
sub
movsl
jno
hlt
data16
inc
adc
stos
ds
mov
scas
pop
outsl
call
jne
popl
imul
ret
xchg
xchg
adc
dec
rol
cmp
cmpsb
in
outsl
and
or
pop
pop
add
jg
jb
adc
orb
jbe
ret
lds
lret
jmp
xchg
lods
icebp
jnp
inc
mov
inc
adc
fistpll
pusha
mov
jne
mov
push
in
add
sti
push
jns
cs
arpl
cld
and
je
push
mov
jo
sbb
lret
gs
pop
xchg
loopne
mov
mov
jge
mov
fsub
mov
push
mov
test
in
xchg
loopne
pushf
ds
sti
fdivrl
addb
mov
stos
dec
mov
inc
adc
inc
clc
pop
es
or
fidivrl
aaa
into
insb
stos
push
call
mov
stos
push
jp
clc
popa
pop
imul
ja
in
jbe
gs
xor
in
outsl
xchg
cmp
sbb
rcl
jg
add
jno
cmpsb
mov
inc
aas
fwait
adc
popf
sub
test
lds
mov
and
cmp
push
mov
movsl
or
mov
jbe
not
jno
jge
adc
out
pop
sar
test
popf
and
cmp
inc
add
lahf
or
sti
je
adc
push
mov
push
stos
rclb
mov
addb
nop
clc
lcall
ljmp
push
push
mov
xlat
pop
adc
lret
scas
xchg
jl
push
mov
mov
scas
test
cwtl
fucom
jo
ret
lock
xchg
paddsb
pop
jecxz
sbb
pop
stc
ret
xchg
push
test
xchg
out
cmp
inc
sti
xor
or
dec
or
sub
push
lret
sub
inc
mov
dec
pushf
or
push
adc
test
dec
rcrl
fidivl
mov
lds
sub
sahf
inc
lret
mov
sbb
popa
jns
add
arpl
inc
or
jmp
mov
mov
add
clc
loop
mov
lods
lcall
and
test
xchg
cmc
nop
inc
adc
fwait
aaa
cs
jecxz
inc
ss
jb
mov
push
movsl
mov
mov
fsubrs
xor
lea
mov
scas
push
xor
cwtl
int3
test
xor
push
mov
adc
pop
push
inc
fldl
sbb
mov
mov
cli
pop
xor
sub
lods
dec
lods
add
add
adc
add
inc
lea
in
mov
mov
imul
add
mov
fisubl
imul
and
sbb
call
imul
push
adc
sarb
inc
xchg
inc
in
je
sub
ret
mov
pop
lahf
inc
movsb
cmp
outsl
xchg
mov
inc
repz
das
mov
in
pop
ds
jmp
out
cmp
mov
popa
in
mov
lret
xchg
pusha
leave
cs
jbe
cld
rorl
setno
jnp
pop
xchg
cmp
push
ret
mov
xor
cli
mov
loopne
dec
fnstsw
insb
sti
pop
ret
test
pop
dec
lret
mov
fimuls
xchg
jbe
or
popf
jo
mov
fnstenv
pop
add
cmpsl
lods
xor
int
lea
lret
xchg
sbb
dec
orb
negl
in
jmpw
jno
and
xor
mov
sub
fs
repnz
inc
ret
push
loope
lds
push
inc
push
mov
dec
mov
into
sbb
mov
imull
xor
out
cli
push
jg
das
lods
leave
data16
adc
sbb
xchg
cmpsl
into
in
insl
lret
or
xor
cmpsl
lods
dec
lods
or
xchg
xchg
repz
jle
sahf
cmp
inc
adc
test
int3
adc
aaa
pop
adc
gs
mov
mov
dec
push
or
mov
ret
repnz
pop
sub
xor
clc
adc
cs
xchg
out
inc
rcll
roll
pop
negl
mulb
xor
inc
mov
loopne
mov
push
rcrb
mull
xchg
insl
pop
pop
cli
add
pop
les
pop
mov
push
iret
mov
add
mov
mov
mull
sahf
jmp
jbe
xor
scas
or
imul
mov
mov
stos
pop
sti
das
lock
sub
je
lds
popf
idivb
sbb
mov
mov
pop
dec
and
push
cs
ljmp
jne
jae
push
clc
add
push
lcall
xorl
ljmp
and
push
mov
jne
xchg
aaa
test
mov
loopne
inc
ret
mov
sti
adc
mov
mov
sbb
pusha
xchg
lock
int3
stc
lods
sub
adc
cwtl
stc
push
rorb
rolb
divb
mov
divl
stc
pop
aas
mov
mov
bound
and
sbb
dec
or
scas
pusha
add
mov
and
sarb
adc
js
xchg
jmp
jg
pop
jmp
mov
push
lcall
pop
add
int3
xchg
ds
lea
xor
mov
enter
mov
or
and
lds
jmp
sti
pop
rcll
jnp
loop
ljmp
adc
stos
xchg
dec
or
jle
andnps
add
or
hlt
pop
icebp
push
xor
je
inc
adc
push
sbb
inc
cmpsb
xor
dec
cmp
inc
mov
mov
rclb
in
aam
push
mov
ljmp
addl
sub
mov
and
cmp
repz
movsl
or
lds
push
aad
jmp
filds
outsb
icebp
xchg
or
and
ret
es
repnz
jno
lds
mov
sarl
sbb
xchg
and
push
aad
popa
outsl
inc
fistpll
jns
mov
aas
fnstenv
subl
enter
and
test
aam
xchg
mov
pop
lret
test
subl
dec
push
imull
cmpsb
in
out
cmp
cmp
sub
jl
or
lds
inc
adc
mov
cmpsb
int3
mov
push
add
fisubs
mov
inc
add
xor
pop
sub
orb
hlt
popa
mov
out
sbb
lds
outsl
inc
sbb
sbb
jle
cmp
das
mov
mov
lret
test
stc
jne
clc
pusha
lock
fwait
sbb
int
mov
scas
sarl
mov
imul
test
andb
bswap
std
cmp
call
push
cltd
out
mov
pop
ret
leave
mov
test
cltd
ds
jl
push
and
push
lds
out
push
inc
in
test
mov
insl
gs
addl
lcall
mov
and
cmpsb
mov
sbb
lock
and
rep
out
ret
pop
lret
sbb
imul
adc
shr
fsubrs
hlt
xchg
add
xor
or
js
popf
inc
shrb
push
incb
pop
add
jno
jp
xchg
popa
popf
inc
cmp
xor
aaa
or
call
lcall
int3
mov
lods
xchg
pxor
loop
mov
add
movsb
mov
sahf
cmp
pusha
push
cli
mov
mov
inc
adc
cmp
scas
out
cs
sub
dec
or
sbb
sahf
add
xchg
inc
clc
sub
pop
gs
jno
cmp
jg
pop
mov
pop
mov
inc
jno
dec
push
inc
jo
inc
fistps
jp
push
pop
repz
push
insl
hlt
adc
fldl
test
mov
int3
xchg
sub
sbb
fstps
adc
add
lea
push
outsb
hlt
pushf
lahf
cli
pusha
rcrb
ret
fs
aaa
jne
dec
scas
insl
out
jge
sub
into
sbb
lds
pop
adc
inc
or
inc
dec
pmulhw
popa
in
push
repz
mov
out
fnstcw
jmp
xchg
shrb
subl
mov
ss
pop
inc
sub
xor
pop
add
push
mov
lods
mov
fldl
fiaddl
adc
or
sbb
mull
mull
sub
cmp
dec
insb
and
xor
stos
mov
imul
push
je
or
mov
lret
ret
mov
pushf
inc
sub
mov
sahf
rorb
or
mov
call
and
imul
and
jne
pop
into
mov
stos
sub
jns
lock
mov
pop
stc
loop
in
push
add
int3
jl
mov
dec
cwtl
pop
insl
mov
jmp
dec
iret
xchg
fcompl
and
vprotq
sbb
mov
push
inc
or
in
aad
or
add
movsb
daa
test
xor
shlb
cltd
xor
dec
xlat
daa
lret
add
out
jno
daa
mov
fdivs
cmp
cmpsb
xchg
mov
pop
add
sub
cmp
inc
mov
mov
out
insl
pop
icebp
jge
push
xchg
lahf
inc
nop
xchg
lahf
lcall
les
xor
and
imul
andps
xchg
loope
xchg
push
leave
adc
sbb
sub
push
xor
pop
fwait
pop
mov
mov
cld
stos
inc
sbb
mov
in
jbe
push
cmc
jo
jbe
push
mov
cmp
and
mov
stos
push
cld
aad
dec
add
lods
sub
insl
jecxz
cld
pop
cmp
flds
fchs
insb
int3
pop
outsb
repnz
cltd
inc
out
push
flds
insb
dec
ret
lea
lods
loop
aam
mov
jns
jno
sub
mov
lcall
mov
cmpsl
out
lahf
ss
cs
in
insb
stc
sub
add
in
xor
fmul
and
imul
add
pop
mov
lock
orl
adc
imul
scas
sub
pop
sti
das
jne
adc
fcom
adc
or
aam
out
loop
icebp
sbb
scas
mov
fldl
adc
lods
inc
or
negl
pop
lea
stos
xor
daa
jl
or
ds
pop
jns
dec
ret
movsb
lahf
xlat
jl
mov
jnp
repz
or
icebp
push
pop
lcall
in
movsb
fimull
xor
adc
fnstcw
cwtl
inc
jb
lret
xchg
shrb
hlt
pop
xchg
cmp
in
push
xchg
out
pop
fisubs
mov
movsb
iret
mov
stos
sub
mov
mov
ds
jbe
shlb
dec
sub
mov
test
inc
jb
mov
aas
cwtl
xor
rcll
sub
js
mov
pop
mov
lods
faddl
fcoms
push
mov
stos
fnstcw
into
aad
out
ret
movsl
sub
jnp
aad
scas
imul
sbb
aam
out
stc
pop
mov
mov
push
push
std
orl
dec
imul
mov
sub
inc
or
or
mov
cmp
cmpsb
test
fdivrl
mov
push
imul
lock
pop
popa
out
outsl
mov
push
ja
shlb
stos
lock
movsl
dec
or
mov
dec
xor
sbb
call
sbb
mov
es
aaa
je
fdivl
insb
ss
inc
cli
xchg
jae
xor
jle
dec
push
push
jo
sbb
mov
jge
or
outsb
std
dec
pop
add
iret
xchg
adc
and
in
cmp
xchg
push
sub
daa
cltd
lods
sub
push
and
push
loope
jp
nop
sub
ret
jns
cwtl
stos
in
dec
bound
nop
sub
fadds
or
inc
or
push
mov
pop
into
lea
stc
sahf
ds
sbb
sub
int
dec
cmp
stos
leave
pop
add
test
movsl
notb
and
out
or
mov
arpl
mov
jbe
push
hlt
out
icebp
mov
jbe
pop
fstpt
daa
lea
xchg
mov
ss
mov
lods
negb
mov
cmpsb
mov
fadds
ljmp
add
or
cld
push
insl
icebp
lcall
cmpsb
mov
sbb
mov
and
ljmp
adc
fisubrl
and
dec
movsb
cmp
mov
and
aad
cmpsb
sbb
inc
imul
mov
add
enter
out
adc
inc
ud0
fnstcw
jg
add
ds
movzbl
ja
gs
xchg
sarl
ret
mov
cld
mov
fsub
and
xchg
fbstp
mov
lcall
in
jmp
dec
pop
push
sbb
rep
cltd
cmp
lock
lea
and
cmpsl
rclb
xchg
bswap
popa
inc
hlt
loope
sub
call
sbb
mov
inc
or
orl
pusha
in
test
loop
rorb
aad
out
mov
xor
popa
add
loope
ja
cmovp
test
divl
mov
inc
adc
mov
adc
xor
outsl
sbbl
mov
xchg
cmp
pop
aas
movsb
mov
inc
or
mov
rorl
inc
push
scas
xchg
or
repnz
dec
or
movsl
fwait
jae,pt
add
sub
xor
enter
jae
dec
in
xchg
mov
insl
out
jbe
sbb
adc
jnp
inc
mov
mov
sbb
push
cmpsl
sub
or
stos
das
hlt
pop
mov
stos
jmp
push
push
jae
test
mov
cmp
mov
aad
insb
insb
stc
pop
insl
js
movsl
adc
ljmp
push
push
jle
push
jne
jecxz
xor
cmp
sub
adcl
mov
inc
lods
xchg
sub
jbe
adc
mov
aad
xor
mov
sub
mov
cmp
ret
daa
rclb
push
adcl
push
cmp
roll
and
mov
gs
std
movsb
das
mov
out
scas
xor
loope
adc
fdiv
dec
push
inc
or
fs
xchg
loope
sbb
sahf
inc
jg
jno
add
add
push
icebp
xor
insb
decb
jne
shr
jl
sbb
mov
insl
dec
bswap
sarb
subl
roll
outsb
jg
in
push
jne
shll
enter
rcrb
lds
shlb
pop
pusha
push
in
nop
pop
push
add
cltd
fpatan
ljmp
cmp
outsb
out
test
cmc
orb
orb
mov
in
jnp
xchg
imul
xchg
and
sbb
and
dec
out
stos
mov
out
imul
dec
iret
data16
into
sbb
xchg
mov
sub
mov
lods
daa
test
out
jb
xchg
gs
lahf
jmp
repz
push
jecxz
mov
mov
mov
lds
sysret
cs
repnz
jne
ficoml
fimuls
stos
daa
filds
adc
es
rclb
mov
lds
mov
inc
adc
lods
int3
xchg
push
pop
shlb
scas
cmpsb
xor
push
add
es
adc
and
aam
scas
int
xchg
fyl2x
arpl
add
data16
pusha
jmp
ret
xchg
add
pop
xlat
sub
loopne
add
hlt
bound
lret
cli
stos
add
xlat
mov
cs
movsl
mov
push
xlat
jge
fcomp
test
rcl
iret
add
lods
pop
cwtl
inc
fnstcw
or
dec
enter
mov
int3
xchg
or
jp
in
and
test
les
lods
jnp
scas
xor
mov
jg
cmpsl
adc
icebp
stc
aam
loopne
in
stc
arpl
into
loope
pop
das
out
jo
dec
into
popl
stos
xor
xchg
nop
cmp
adc
pop
push
dec
cli
fs
test
insb
push
lcall
jo
out
jo
push
jae
push
dec
adc
test
mov
lea
stos
cmp
xchg
dec
stc
fildll
test
mov
aaa
add
pop
and
jnp
popa
cmp
repz
adc
fidivl
lods
test
mov
or
data16
pop
mov
lahf
cmp
lods
movsl
ss
out
sbb
movsb
mov
cmpsb
stos
cs
movsb
xor
or
push
outsl
jmp
or
mov
rorb
hlt
sub
xchg
pop
adc
pop
add
aam
or
lret
sbbb
xchg
nop
daa
leave
sbb
sbb
cmp
lods
push
ja
into
mov
sbbl
pop
cli
pop
cld
test
xchg
push
roll
movsb
add
pop
test
fnstsw
sahf
jb
aaa
movsb
sbb
inc
mov
std
scas
push
arpl
cmp
sub
sub
and
push
cmpsl
xchg
mov
dec
and
sbb
mov
jb
sbb
mov
cmp
test
mov
jle
in
test
cld
sti
xchg
xor
xchg
cmp
adc
loop
xor
aad
js
stc
pusha
cltd
imul
dec
add
adc
popf
in
je
pop
push
sti
call
stc
sahf
inc
xor
ja
and
or
cli
fcoms
pop
lods
aam
insb
mov
xchg
mov
cmpsb
fst
ja
adc
repnz
out
jle
xor
mov
pushf
shll
mov
push
stos
jg
movsl
lret
out
out
out
jno
jge
shlb
sbb
pop
inc
or
sub
jno
push
sbb
mov
cmp
mov
int3
insl
pop
daa
lods
push
out
push
cld
roll
and
lds
lret
push
cltd
push
adc
mov
jmp
mov
xor
jae
mov
pop
cld
add
xchg
outsb
pop
and
adc
dec
pop
cli
hlt
out
and
ljmp
mov
adcb
scas
call
xor
cld
sbb
fildl
adc
data16
push
sti
pop
clc
sub
in
out
outsl
lods
repz
cld
ds
orb
xor
jp
sbb
pop
arpl
mulb
es
test
cmp
sarb
cmpsb
sub
scas
sub
test
stos
sub
cmc
lock
das
out
ljmp
shl
mov
mov
test
mov
scas
ret
xchg
xor
sub
push
insb
inc
jg
fidivl
xchg
mov
movsb
push
mov
aas
cmc
and
mov
mov
inc
fsubrl
popa
sub
xchg
pop
arpl
lea
orl
jmp
jo
xchg
test
cmp
ja
pusha
ljmp
in
jne
ljmp
push
jo
dec
repnz
gs
addl
pusha
ljmp
scas
xor
fmull
repz
xor
sub
les
add
test
rclb
movl
push
mov
clc
insb
add
xchg
cmp
dec
mov
jge
pop
icebp
sbb
js
insb
repnz
pop
and
xchg
sub
ja
mov
adc
shrb
jmp
mov
mov
xchg
fisttpl
movsl
or
pop
repz
adc
dec
loope
xor
push
dec
mov
imul
movsb
cmp
lret
ret
adcb
mov
loope
push
aam
lds
es
jecxz
lds
add
lret
mov
std
imul
push
mov
lds
xchg
cs
popa
mov
xchg
pop
add
out
and
cmp
adc
lods
vmaxpd
xchg
decb
mov
xor
push
push
addb
dec
cmp
insl
mov
cmpsb
cmp
fisttps
pop
jnp
adc
into
push
xor
sub
xchg
and
push
mov
imull
sub
and
icebp
pop
sahf
test
punpckhdq
pop
and
jl
fbstp
leave
xor
imul
xchg
movsl
or
sub
pop
loope
adc
jle
loope
xor
xor
push
dec
mov
fcmovnbe
insb
or
repz
ret
adcl
js
shrl
movb
xchg
mov
ret
sbb
add
lret
cld
addr16
icebp
cwtl
sbb
js
jmp
pop
mov
ret
in
cmc
pop
mov
xchg
push
add
in
and
aaa
mov
adc
cmp
pop
jl
nop
cld
dec
jecxz
mov
xor
dec
push
addb
pop
rcrl
outsb
mov
cmpsb
cmp
fiadds
pop
jns
adc
int
xor
sub
xchg
pop
movsb
dec
out
inc
push
mov
imulb
sub
mov
jnp
pop
icebp
push
popf
test
punpckhwd
pop
and
in
jne
mov
adc
shrb
jmp
lock
fmuls
movsl
or
sub
pop
loopne
adc
jge
loope
xor
incl
xchg
sbb
or
movsb
cmp
enter
adcb
mov
loope
dec
shrb
movb
call
push
ret
repz
add
leave
mov
sti
pop
icebp
xchg
sbb
aas
dec
mov
pop
mov
ret
hlt
pop
mov
nop
adc
shrl
and
repnz
mov
adc
cmp
vminss
sti
dec
jecxz
mov
xor
dec
push
jg
mov
pop
rclb
outsb
mov
cmpsb
cmp
fldl
pop
js
adc
int3
push
xor
sub
dec
out
aas
push
mov
cmc
insl
add
xchg
cmp
ret
dec
mov
jp
pop
icebp
adc
ss
push
mov
jl
fnsave
xor
imul
lock
xlat
push
movsl
or
sub
pop
fistpll
adc
lods
xor
incl
xchg
push
fcom
insb
or
cmpsb
sub
mov
ret
pop
stc
jle
test
sbb
jns
shrb
movb
add
push
rcrb
icebp
je
add
mov
stc
fs
repnz
sbb
adc
insl
pop
lahf
or
jnp
pop
mov
mov
add
loope
and
xor
aas
call
or
cmp
jl
stc
dec
in
scas
lcall
add
and
push
xlat
outsb
xchg
cmpsl
and
lds
adc
lret
enter
cwtl
sbb
dec
out
cmp
insl
add
nop
cmp
and
pop
repnz
jns
in
pop
pop
mov
jl
lcall
and
mov
aas
imul
pop
hlt
mov
fnstsw
dec
loop
xor
add
xorl
push
aad
or
cmp
pop
mov
clc
jl
test
sbb
jp
into
das
ljmp
popf
and
push
mov
insb
add
mov
mull
repz
sbb
adc
imul
popf
pop
cltd
xor
mov
mov
mov
add
inc
lods
aad
fbld
mov
xor
adc
cmp
jge
mov
dec
in
lods
fwait
xor
dec
insb
add
mov
and
push
fsubrs
out
test
and
pop
je
adc
sub
xor
jge
add
sarb
and
and
mov
jbe
pop
repz
jp
fs
pop
sbb
ds
jo
mov
or
aam
pop
in
mov
mov
inc
xlat
rcll
cmpsl
add
pop
cmc
mov
fstpt
js
jecxz
cs
cmpl
insl
push
jno
mov
lds
adc
dec
int3
xor
std
push
cltd
fwait
push
dec
out
mov
insl
add
push
aas
aas
ret
mov
cmc
pusha
pop
hlt
xchg
push
stos
inc
dec
mov
adc
imul
xor
mov
mov
pushf
inc
stos
insl
frstor
mov
xor
test
aaa
mov
jle
mov
dec
in
lods
pushf
xor
inc
insb
add
mov
and
push
fsubrs
out
test
and
pop
jae
adc
sub
xor
jl
add
iret
cmp
mov
lock
add
mov
fistps
xchg
stos
inc
leave
xor
arpl
enter
cwtl
das
mov
out
outsl
fdivs
fwait
ret
imul
mov
mov
inc
xlat
data16
cmpsl
add
lds
jl
or
dec
jecxz
sub
push
sti
cmpb
dec
rcl
insl
add
es
mov
lds
adc
dec
lret
xor
cld
imul
out
mov
insl
add
or
mov
hlt
pop
pop
hlt
nop
adc
jnp
jecxz
enter
lcall
push
mov
pushf
aas
stos
insl
fsubl
mov
das
mov
fsub
push
adc
mov
jle
mov
dec
in
stos
pushf
xor
inc
insb
add
mov
and
push
fsubrs
in
test
pop
movsl
testb
clc
adc
sub
leave
jnp
add
into
cmp
mov
out
outsb
add
mov
ficomps
xchg
stos
inc
enter
jmp
cwtl
das
mov
out
outsb
xlat
mov
or
aam
pop
loop
mov
mov
inc
xlat
rcll
cmpsl
add
lds
adc
jbe
jecxz
sub
xor
push
cli
jg
dec
mov
mov
dec
rcl
insl
add
cmpsl
mov
ret
hlt
js
test
inc
lret
sti
push
dec
out
mov
insl
add
or
cmp
pop
pop
hlt
adc
inc
inc
mov
adc
addr16
lcall
push
mov
pushf
ds
and
cs
fsub
dec
adc
xor
push
jle
mov
dec
in
stos
pushf
xor
inc
insb
add
mov
and
push
fsubrs
in
test
push
movsb
testb
notl
sub
xor
jp
add
int
and
and
mov
jae
pop
repz
xchg
stos
inc
das
jp
popa
call
cwtl
das
mov
out
insl
mov
or
aam
pop
loope
mov
scas
xor
rclb
cmpsl
add
lds
jl
or
jecxz
sub
add
jle
dec
mov
mov
dec
rcl
insl
add
mov
rol
repz
test
inc
leave
xor
cli
add
dec
out
mov
insl
add
or
cmp
mov
repnz
pop
hlt
mov
stos
inc
inc
scas
jnp
loope
enter
lcall
push
mov
pushf
cmp
pop
and
sub
dec
adc
xor
xor
rcll
adc
and
insb
add
mov
and
dec
fsubrs
jmp
aas
sbb
ds
pop
jo
adc
daa
xchg
in
les
leave
jns
add
int3
aaa
and
pop
mov
aad
inc
mov
jb
pop
repz
jp,pn
pusha
out
pop
sbb
out
insb
aad
dec
pop
mov
mov
loopne
mov
scas
xor
arpl
adc
mov
lds
jl
or
movsl
sub
add
jge
dec
scas
sbb
insl
add
ds
and
mov
lds
adc
inc
enter
data16
dec
mov
insl
add
or
cmp
pop
hlt
lea
stos
inc
inc
scas
jnp
loopne
enter
lcall
push
mov
pushf
cmp
insl
fstps
mov
sub
inc
fsub
dec
adc
xor
jle
xchg
dec
in
test
xor
inc
insb
add
mov
and
dec
fsubrs
ljmp
aam
pop
outsl
cmc
adc
es
in
ret
inc
xor
js
add
lret
and
push
mov
aad
aas
mov
jno
pop
repz
stos
inc
lds
enter
cwtl
das
mov
out
imul
dec
push
lea
mov
fbld
mov
lods
xor
into
adc
mov
das
push
aad
adc
jae
in
sub
add
jnp
dec
lods
sbb
insl
add
sahf
and
mov
pop
icebp
je
test
inc
xor
mull
lcall
and
pushf
or
cmp
pop
cmc
mov
stos
inc
inc
lods
jl
fbld
pop
xchg
add
jge
push
mov
pushf
cmp
and
sub
adc
xor
jle
test
dec
out
cmpsb
pushf
xor
inc
insl
add
stc
mov
and
dec
fsubrs
jmp
testb
repz
and
in
ret
leave
jbe
add
leave
xor
outsb
add
mov
ficompl
or
jnp
pop
in
pop
push
sbbb
imul
add
mov
frstor
mov
lods
das
inc
xlat
pusha
int
test
sbbl
push
sarl
jb
in
es
jns
dec
stos
pop
mov
dec
int3
insl
push
inc
pushf
pop
cmc
mov
pop
out
jb
stos
mov
les
enter
fwait
xchg
push
push
out
mov
mov
lcall
and
pop
pop
testb
jge
frstor
pusha
xchg
fwait
xor
mov
jle
push
mov
popf
cmp
mov
sub
adc
xor
jle
sub
out
movsl
pushf
xor
inc
insl
add
clc
mov
and
dec
fsubrs
call
testb
repnz
and
xor
jne
add
enter
gs
aas
mov
fstps
or
jnp
pop
jecxz
pop
adc
ss
push
mov
mov
fsubl
mov
stos
cs
xlat
pop
int3
adc
mov
xor
dec
sarb
jno
in
and
insb
add
js
dec
stos
push
mov
dec
lret
insl
std
imul
pop
out
jno
stos
mov
ret
xor
hlt
bound
xchg
adc
and
cltd
push
inc
fdivs
mov
pop
testb
jge
fsubl
pusha
xchg
std
fwait
xor
mov
jle
push
mov
popf
cmp
and
mov
cmc
mov
lods
inc
dec
adc
das
pushf
xor
int
jle
sub
out
movsb
pushf
xor
inc
insl
add
idivl
and
dec
fsubrs
out
inc
sbb
pop
insb
icebp
adc
and
xor
je
add
xor
mov
sbb
mov
insl
fcomps
or
jnp
pop
loop
pop
adc
cltd
xor
shll
fwait
mov
mov
stos
sub
adc
mov
xor
dec
sarl
jo
in
and
xor
insb
add
ja
dec
test
lret
cld
push
cmc
mov
pop
in
jo
stos
mov
ret
repz
add
xchg
adc
out
mov
mov
cwtl
add
mov
jmp
pop
testb
jge
fistpl
pusha
xchg
cld
fwait
xor
mov
jle
dec
mov
popf
aaa
mov
and
mov
cmc
mov
stos
inc
dec
adc
cs
xor
int3
dec
jle
sub
pushf
xor
aas
insl
add
idivb
and
dec
fsubrs
out
inc
sbb
pop
imul
stos
and
xor
jae
add
xor
mov
sbb
mov
insb
xlat
pop
hlt
or
jnp
pop
loope
pop
adc
xor
shlb
fwait
mov
fisubl
mov
test
lret
sti
jle
cmc
scas
sbb
dec
sarb
outsl
dec
in
and
add
jbe
dec
test
mov
inc
leave
insl
sti
addr16
mov
pop
in
outsl
adc
aas
shll
repnz
add
xchg
adc
inc
mov
mov
xchg
add
fdivs
push
pop
testb
jge
ficompl
pusha
nop
sti
fwait
xor
dec
mov
popf
mov
and
mov
cmc
mov
stos
inc
inc
adc
sub
dec
jle
sub
out
mov
insl
add
cmc
mov
and
dec
fsubrs
in
inc
pop
pushf
testb
out
adc
and
leave
jb
add
lds
and
sbb
and
pop
hlt
pop
lea
adc
enter
cltd
xor
iret
mov
add
aad
push
fldenv
mov
test
inc
xlat
pop
leave
adc
scas
sbb
dec
iret
jl
add
in
and
add
jne
dec
cmpsl
adc
insl
cli
test
sbb
mov
pop
jmp
adc
shlb
icebp
pop
add
nop
adc
inc
mov
mov
xchg
add
xor
mov
jmp
or
adc
pop
leave
pusha
cli
fwait
xor
out
jecxz
mov
popf
xor
push
and
xchg
cmc
mov
inc
adc
sub
xor
lret
adc
sbb
pushf
xor
cmp
mov
and
inc
fsubrs
in
inc
push
fwait
testb
out
adc
pop
mov
jl
inc
xor
jno
add
les
and
pop
cmpl
mov
mov
push
pop
hlt
push
mov
adc
enter
cltd
xor
into
mov
add
aad
push
fsubs
mov
cmpsl
sub
pop
enter
jl
cmc
lods
sbb
dec
into
jl
add
in
and
add
je
dec
cmpsb
adc
insl
stc
gs
mov
pop
ljmp
jge
mov
add
adc
inc
mov
mov
xchg
add
xor
pop
testb
jge
fcomps
mov
fwait
xor
mov
jle
dec
mov
popf
xor
xlat
outsb
rcll
mov
and
inc
inc
adc
sub
jle
jle
dec
out
mov
insl
add
repz
and
inc
fsubrs
jecxz
inc
adc
ss
pop
push
mov
jl
aas
xor
jo
add
ret
das
and
push
cmpb
mov
mov
imul
stos
inc
mov
fmulp
pop
adc
xor
mov
incl
insl
push
and
cmpsb
sub
pop
adc
stos
sbb
enter
adc
imul
pop
fwait
xor
insl
add
jb
push
movsb
adc
mull
inc
xchg
sbb
lea
enter
adc
pushf
or
jle
mov
add
call
fbld
push
xchg
add
xor
testl
pop
lret
negl
loopne
mov
sahf
xor
and
lea
cmpsb
inc
fcmovbe
inc
adc
je
popa
clc
sub
jg
jl
push
out
sahf
popf
xor
cmp
insb
icebp
mov
and
inc
fnstenv
loope
inc
adc
enter
adc
jge
cmp
add
or
push
call
pop
loop
push
adc
inc
xlat
mov
lea
rcrb
add
jl
push
fmul
pusha
push
js
xor
lret
mov
pushf
mov
xlat
outsb
push
aam
mov
movsb
es
fcoms
adc
test
lret
cld
imul
dec
mov
mov
and
ret
fsubrs
popa
stos
inc
xchg
push
testl
lcall
lret
push
popf
mov
and
fstpl
pop
xchg
incb
das
mov
and
addl
jle
aam
lret
bound
lods
jmp
push
jp
or
int
es
and
adc
jb
stc
sub
pop
jnp
push
out
popf
sahf
xor
push
mov
and
fildll
pop
fs
mov
flds
or
and
adc
xlat
scas
xor
and
add
jl
push
fcmovne
popa
or
jle
mov
xchg
aam
jns
hlt
cli
mov
test
dec
mov
or
xor
lods
repnz
push
cltd
sub
jg
out
sbb
lds
insl
jg
out
out
cmp
or
cmp
out
jle
and
inc
mov
subb
cli
mov
fildll
inc
mov
jl
mov
sarb
jae
mov
movsb
add
pop
daa
cmpsl
adc
scas
in
pop
outsl
js
in
push
xor
ds
xchg
push
notb
shl
imull
loop
int3
ret
shl
repnz
fldt
sub
subl
subl
xchg
mov
fisubrs
pop
inc
ljmp
fs
mov
jl
fwait
addr16
inc
dec
das
adc
mov
push
movsb
movsl
addl
imul
cmpsb
out
push
rcll
and
mov
mov
mov
fs
movsl
stc
cmc
cmp
insl
mov
inc
divb
incb
orb
ds
shrl
adc
sbb
push
xor
call
cli
xor
mov
xor
push
xor
inc
inc
pop
push
pop
leave
adc
aad
sbbl
in
sbb
and
jp
data16
xchg
lea
es
int3
pop
mov
dec
int
cmpsb
mov
inc
pushf
outsl
sbb
loopne
loope
mov
ret
pop
jg
test
pop
pusha
mov
outsb
shl
es
aad
scas
mov
stc
mov
lods
inc
jl
add
out
dec
fdivrl
popf
int
cmpsl
outsl
insb
cmp
dec
sbb
ret
js
xchg
xchg
stos
fsubrs
hlt
dec
testl
jnp
dec
or
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
ja
jnp
sbb
sub
pop
add
cmpsb
dec
shrb
outsl
mov
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
jnp
push
mov
shlb
cmp
sbb
dec
clc
orb
or
mov
scas
out
sub
inc
jg
mov
cltd
jp
inc
cmpsb
loopne
and
fidivl
dec
mov
aam
xchg
add
adc
in
and
xchg
mov
ss
jne
enter
pushf
lock
inc
insl
out
mov
aam
stos
push
cltd
sarl
pop
inc
out
jmp
flds
xchg
movsb
shrl
pop
mov
sub
and
mov
push
cmp
outsl
loope
gs
ret
cs
out
xchg
and
inc
cmc
fwait
and
out
movl
inc
fnstsw
dec
xchg
int3
and
imul
pop
cs
inc
sub
or
fs
js
in
mov
test
or
insb
mov
mov
in
dec
int3
jp
imul
out
mov
xrstor
dec
bound
lcall
adc
sarl
push
mov
cwtl
aam
push
mov
or
xchg
or
jle
jns
in
test
and
out
sub
or
dec
pop
inc
and
cltd
xchg
js
loopne
mov
lea
mov
cwtl
pop
out
sbb
push
in
jle
jo
daa
in
out
push
pop
out
push
scas
lods
push
mov
lret
jg
int
loope
cs
mov
cmp
mov
jmp
scas
cmp
fisttpll
xchg
inc
lds
sahf
add
sar
inc
outsb
pop
or
lahf
add
dec
xchg
pop
jnp
push
in
push
in
imul
pop
nop
cmp
pop
ljmp
ss
or
mov
push
iret
mov
int
jle
ret
mov
jae
es
shlb
pop
xchg
iret
xchg
sbb
dec
adc
sarl
