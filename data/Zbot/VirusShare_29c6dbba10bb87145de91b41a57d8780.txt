push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
lcall
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
xor
mov
mov
pusha
call
add
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
jmp
ret
mov
sub
sub
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
jge
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
incl
inc
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
push
and
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
add
shlb
add
add
add
call
and
add
add
and
add
add
add
add
pop
and
add
add
sub
add
inc
and
add
add
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
add
ljmp
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
push
and
add
and
add
and
add
add
add
add
push
and
add
and
add
and
add
add
shlb
add
add
add
call
and
add
add
and
add
add
add
add
pop
and
add
add
sub
add
inc
and
add
add
add
add
add
add
imul
jb
je
arpl
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
imul
outsb
je
outsl
insb
add
add
popa
jo
gs
jb
jns
aam
inc
gs
jb
jbe
push
jns
gs
add
fs
imul
add
out
inc
gs
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
insb
jae
jb
outsb
inc
add
dec
add
popa
insb
dec
outsl
arpl
test
inc
jb
popa
je
inc
jbe
outsb
je
add
xchg
add
je
jne
jb
outsb
je
push
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
jbe
je
push
jb
imul
push
add
dec
jo
outsb
dec
jne
gs
add
data16
je
je
dec
popa
outsb
fs
add
push
push
je
imul
inc
add
roll
dec
gs
jo
jb
add
aad
inc
gs
gs
inc
imul
dec
inc
dec
xor
cs
insb
add
add
je
push
outsl
outsl
insb
add
aaa
add
ja
push
fs
jae
push
arpl
add
inc
gs
push
gs
inc
js
outsb
je
add
jae
push
push
popa
je
add
jns
inc
gs
push
jns
push
imul
insb
outsl
jae
push
push
popa
je
add
add
je
push
outsl
insb
outsl
jb
add
ja
push
popa
arpl
jb
jne
add
inc
gs
imul
gs
add
jl
inc
gs
push
gs
dec
gs
imul
gs
imul
gs
add
xchg
dec
jo
outsb
push
push
popa
je
add
push
dec
inc
dec
inc
cs
insb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsb
pop
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jnp
lods
lods
stos
add
test
push
mov
mov
mov
lret
int3
int
rcl
in
rcl
shl
rcl
shl
int3
int3
int3
hlt
leave
enter
leave
leave
out
mov
in
mov
mov
lods
stos
stos
lea
fwait
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
not
rcl
cld
fcomp
fdivr
fdivr
xlat
xlat
aam
rcl
iret
dec
into
into
aad
rcl
sar
ret
std
mov
mov
lods
iret
movsl
movsl
mov
dec
das
das
xor
add
add
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
lods
sbb
mov
jnp
mov
sar
leave
leave
lret
ror
aad
aad
xlat
call
fdivr
aam
int3
int3
into
dec
int3
into
call
aam
dec
int3
int
rol
mov
mov
lods
std
test
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
or
inc
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
call
rcl
call
fdivr
xlat
fcom
call
aam
dec
int
dec
lret
leave
dec
into
int
inc
rol
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
imul
ds
inc
sbb
movntps
sbb
xor
ss
aaa
cmp
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
enter
iret
iret
sar
aad
aad
dec
ror
dec
leave
leave
inc
ret
ret
mov
mov
ljmp
movsl
mov
xchg
cwtl
xchg
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jl
jge
jle
jno
jo
bound
mov
cmp
cmp
mov
jo
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
leave
dec
lret
enter
ret
mov
mov
ljmp
movsl
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
aas
ds
push
push
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsl
add
pop
or
jnp
mov
incb
jp
idivb
jmp
jo
out
push
data16
je
jg
jge
jp
js
arpl
inc
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsb
lcall
xchg
incl
test
xchg
xchg
xchg
sahf
sahf
mov
ficomps
xchg
jle
jns
pop
das
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
incl
xchg
std
mov
jle
jb
jno
jne
jae
jge
jg
addl
push
cmp
ss
jg
cmp
mov
test
lods
sti
lods
stos
lods
lods
stos
lods
test
stos
std
movsl
mov
lcall
xchg
js
jp
jl
jns
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
cmpsl
out
scas
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
mov
or
or
dec
insl
imul
xchg
lcall
out
cltd
fwait
fwait
stc
nop
xchg
std
mov
mov
xchg
mov
lcall
test
ljmp
mov
mov
mov
mov
std
mov
mov
mov
jnp
or
add
add
pop
pop
adc
cmpsl
scas
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
sahf
pushf
pushf
std
movsl
movsb
mov
out
xchg
xchg
xchg
in
nop
in
test
push
jne
femms
dec
add
inc
or
or
sub
es
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
mov
call
mov
test
stos
cmpsl
lods
pushl
cmpsl
lods
mov
xchg
test
std
ret
mov
mov
ljmp
sahf
adc
add
add
pop
adc
mov
jmp
pushf
cltd
lcall
mov
nop
nop
call
xchg
xchg
sahf
sahf
popf
movsl
movsl
movsb
test
mov
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
je
mov
jg
orl
int
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
jbe
mov
cmpsb
mov
mov
mov
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
popf
decl
xchg
xchg
call
xchg
xchg
call
xchg
xchg
fwait
lcall
lahf
lahf
lahf
mov
movsb
movsl
stc
cwtl
cwtl
lcall
xchg
xchg
les
cltd
cltd
in
xchg
xchg
out
mov
nop
stc
xchg
test
std
xchg
jb
fwait
addr16
lahf
pop
cmp
dec
cmp
inc
jnp
mov
jp
mov
je
mov
outsl
ljmp
adc
lods
or
stos
or
mov
jge
mov
mov
stos
pushf
mov
movsb
movsl
add
pop
pusha
adc
mov
jmp
xchg
xchg
call
lcall
sahf
sahf
lcall
cltd
cltd
call
xchg
xchg
xchg
xchg
xchg
call
cwtl
cltd
cld
cwtl
xchg
popf
stc
mov
xchg
pushf
cld
popf
mov
xchg
push
xchg
pop
jle
xchg
dec
jp
lcall
popf
push
imul
mov
adc
adc
lods
adc
lods
adc
scas
adc
mov
imul
mov
insl
mov
cltd
scas
mov
lods
scas
scas
mov
mov
movsb
add
pop
pop
adc
mov
mov
sahf
call
popf
jmp
mov
mov
call
nop
decl
addb
js
lcall
xchg
dec
jnp
xchg
cmp
call
pop
pusha
call
or
call
add
fwait
add
mov
adc
stos
sbb
mov
insl
pushl
pop
outsl
mov
and
and
shll
inc
inc
cmp
xchg
lods
mov
scas
lods
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
shll
lcall
movsl
jmp
cmpsb
cmpsl
ljmp
cmpsb
cmpsl
lcall
jle
decl
inc
outsl
decl
sub
mov
pusha
decl
or
push
incl
add
lea
push
decl
add
fwait
add
sahf
add
test
pushl
sub
mov
sub
inc
sub
inc
sub
jle
cs
xor
dec
scas
inc
mov
mov
movsb
movsl
mov
add
add
add
add
add
push
adc
cmpsl
scas
ljmp
lahf
jmp
test
lods
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
addb
test
push
incl
add
mov
push
decl
push
call
add
lahf
add
movsl
add
scas
adc
mov
cmp
dec
cmp
int
test
sarl
mov
sarl
mov
sarb
mov
rorl
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
mov
cmpsl
cmpsl
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
and
incl
adc
mov
pop
incl
or
xchg
push
decl
add
popl
push
call
add
mov
add
lods
add
jo
ret
cmp
int
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fisttpll
ficoml
call
test
std
mov
mov
mov
mov
mov
add
add
add
inc
dec
adc
jl
lahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
cmp
lea
pop
call
sbb
mov
pop
decl
push
decl
add
popf
add
add
cmpsb
add
test
pop
pushl
es
int3
dec
mov
aad
xchg
call
push
cltd
fsts
fstpl
ficomps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
jns
lahf
lcall
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
nop
pop
arpl
xchg
and
xchg
and
xchg
and
xchg
sbb
xchg
or
popl
push
call
add
mov
add
stos
add
mov
fs
mov
xor
fisubl
fbld
loopne
mov
jmp
cmpsw
jmp
test
push
test
call
test
mov
cmpsl
test
mov
sahf
mov
add
add
add
inc
aas
adc
jp
xchg
cwtl
call
lahf
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
cltd
xor
cltd
xor
xchg
sub
cwtl
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
adc
rolb
fsubrl
jmp
outsl
lods
jmp
jno
jmp
jb
call
jae
in
jne
in
jne
out
jne
out
je
jmp
xchg
mov
cmpsb
cmpsl
lcall
mov
add
add
add
add
ds
outsb
js
lea
popf
pushf
lcall
mov
mov
mov
mov
mov
movsl
lods
lcall
jo
mov
aaa
je
lahf
xor
cltd
sbb
call
pop
lcall
add
test
pusha
pushl
add
mov
sbb
fistl
jmp
jbe
call
jge
in
cmpb
repnz
push
cmpl
call
mov
mov
test
cmpsl
popf
pushf
popf
daa
mov
mov
add
bound
add
xor
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
ret
mov
jmp
cmp
movsl
inc
jle
mov
ss
cltd
sbb
xchg
add
popf
add
add
stos
add
scas
add
add
mov
add
shll
cmp
ljmp
out
mov
push
nop
ret
nop
ret
xchg
ret
push
xchg
xchg
mov
out
mov
inc
ret
lods
lods
stos
mov
pushf
pushf
xor
popf
add
add
add
inc
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
mov
jle
lcall
dec
jg
stos
dec
cmp
xor
popa
lcall
add
cmpsl
add
stos
add
mov
mov
add
movl
mov
out
mov
out
xchg
push
fwait
push
lcall
negb
lret
popf
int3
sti
lahf
int
cld
sahf
into
cli
cwtl
leave
push
xchg
sar
mov
dec
mov
mov
mov
sahf
mov
xchg
add
add
add
das
sub
outsb
push
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
mov
inc
mov
vshufps
mov
mov
ljmp
xchg
movsb
sub
cltd
or
sahf
add
add
lods
add
mov
arpl
mov
add
enter
rorb
je
fiadds
out
lea
push
movsb
int3
push
movsb
int
clc
cmpsb
int
cld
test
cld
cmpsl
into
sti
test
sar
stos
iret
std
test
push
popf
jmp
mov
lret
std
mov
mov
mov
xchg
xchg
add
fwait
cltd
add
add
add
sub
inc
inc
inc
bound
push
xlat
je
jb
mov
mov
ret
mov
ret
inc
ret
ret
enter
rol
mov
cmpsb
jmp
push
mov
scas
dec
xchg
lahf
sbb
pop
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
loopne
jge
out
pop
cmpsl
push
popf
leave
cli
scas
aam
cli
mov
cli
mov
cli
mov
cld
mov
std
mov
cld
mov
cld
mov
std
mov
std
mov
push
movsb
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
add
dec
dec
outsl
outsl
outsl
mov
xlat
jmp
xlat
test
int
dec
lret
lret
lret
leave
lret
mov
lods
jmp
push
mov
stos
jge,pt
mov
add
lods
add
mov
mov
add
roll
outsl
call
add
loopne
jne
call
jae
cli
lods
sar
cld
mov
mov
std
mov
cld
mov
xlat
inc
mov
lret
call
lret
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
xor
add
pop
or
movb
loop
out
jmp
test
in
leave
fsub
fcmovu
xlat
fcmovu
cli
aad
xlat
std
into
rcl
mov
push
cmp
sub
mov
add
mov
mov
add
lret
call
add
fildl
jne
jecxz
ja
out
xor
cld
mov
std
loopne
std
inc
loopne
inc
dec
fdivrp
dec
std
enter
enter
lret
cld
mov
lret
lret
into
mov
mov
xchg
adc
add
add
incl
std
incl
std
std
add
div
or
out
jmp
jmp
out
sub
out
in
dec
ljmp
xchg
out
call
aad
fstp
jmp
mov
xchg
cmpsb
cmp
mov
add
ljmp
add
mov
add
int3
add
xlat
add
loopne
ja
call
inc
popf
sti
mov
loop
cld
lret
jecxz
std
into
out
dec
jecxz
std
int
dec
loop
dec
loopne
shl
call
jecxz
call
in
std
shl
sti
ret
out
mov
fdivr
ret
cmpsl
cmpsl
mov
xchg
cwtl
add
add
add
std
std
add
incl
idiv
clc
add
repz
repnz
push
out
repnz
out
repnz
cmp
out
in
pop
loopne
loopne
les
xchg
sti
sahf
and
jmp
add
add
mov
data16
mov
add
roll
jno
fiaddl
je
in
jnp
in
push
jl
negb
cli
mov
dec
in
std
shl
shr
shl
call
in
aad
fsubr
call
out
std
fldl2t
cld
shl
push
aad
in
fcos
leave
lret
leave
rep
stos
stos
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cli
add
std
stc
add
cld
cli
add
cmc
repz
aad
xor
jae
negb
add
test
pop
ljmp
add
ret
add
leave
add
roll
jno
faddl
jbe
out
ja
in
sbb
cld
fld1
std
fldl2t
fucomi
std
fucomi
fsubr
fucomi
std
fsubr
fucomip
std
loopne
fucomip
aam
push
ret
jmp
rcr
call
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loop
add
mov
cwtl
repnz
jmp
add
mov
add
int3
add
add
fiadds
je
jmp
sub
cld
shl
jmp
lock
std
fucomp
std
fsub
cld
in
cld
shl
cld
shl
cli
shl
clc
iret
fdivrp
stc
int
push
ret
aad
out
mov
jmp
rcr
call
xlat
sti
mov
mov
cltd
cltd
lcall
fwait
lcall
add
add
aad
rol
adc
scas
xchg
lcall
add
mov
mov
add
rolb
outsl
fadds
jae
loopne
jp
call
aaa
xchg
sti
cwtl
sti
leave
loopne
sti
int3
loop
sti
test
sar
repz
into
push
mov
int
call
mov
sar
ljmp
imul
cmc
loopne
fucomip
mov
mov
xchg
add
add
add
into
int3
add
sarb
mov
add
test
pusha
pushl
add
ret
add
dec
push
jno
rorl
fsts
js
loopne
cmp
jmp
scas
lret
mov
out
std
loope
ret
cld
fbstp
neg
mov
lret
ret
int3
in
leave
rcr
fmulp
xlat
shl
xlat
fadd
out
loope
jmp
out
icebp
out
out
popf
ljmp
push
stos
lods
lods
adc
cmpsl
cmpsl
cmpsb
add
ret
mov
ret
mov
lods
aam
dec
cmp
cmpsl
sbb
lods
es
mov
jns
mov
inc
xchg
ret
push
mov
leave
arpl
hlt
rorb
mov
mov
leave
lret
int3
rcl
lret
mov
iret
shlb
fcom
aad
fcmovnu
fidivl
loopne
gs
in
out
call
xor
div
mulb
icebp
icebp
lock
fstp
or
mov
int
xchg
add
mov
sarb
mov
test
test
xchg
ljmp
mov
sarb
mov
ret
mov
cmpsl
enter
leave
ret
into
leave
int3
jp
into
iret
addr16
rclb
rcl
dec
aam
aad
aam
aam
fcmovu
daa
fcomp
fistpl
fcmovu
ficoms
fsub
loope
in
call
lock
add
cld
cmc
add
std
cld
add
incl
std
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
leave
xor
into
lret
daa
lret
rcl
and
rcrb
iret
rclb
iret
aam
or
xlat
push
rcr
xlat
add
fcmovnu
add
loopne
add
in
add
jmp
add
xlat
aam
std
std
add
mov
add
ret
les
mov
mov
mov
push
ret
or
leave
movb
enter
int
add
aad
add
aam
rcl
aam
aam
add
aam
add
fabs
add
aad
add
loop
add
fsubp
add
in
add
icebp
repnz
std
incl
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
mov
mov
mov
ja
test
dec
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
push
mov
mov
jmp
aad
cmc
rcl
aam
ror
into
cli
int3
int3
int3
stc
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
rcl
aad
call
aad
dec
ror
dec
iret
into
dec
lret
lret
mov
mov
stos
stos
stos
icebp
cltd
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
jae
je
gs
dec
dec
inc
cmp
sub
sub
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
lret
rcl
sar
rcl
aam
int3
lret
int3
inc
mov
rol
pushl
stos
test
xchg
xchg
cwtl
jmp
jo
xchg
push
adc
add
add
add
add
add
addl
subl
imul
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
pushf
pushf
call
xchg
lcall
xchg
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
pushf
cwtl
cwtl
fcoml
addl
jmp
jp
sarb
jnp
jnp
jnp
jae
je
push
push
push
cmp
aaa
pushf
sahf
sahf
mov
scas
scas
repz
lods
scas
sti
scas
scas
lods
std
test
test
sahf
pushf
pushf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsb
cmpsb
cltd
jae
je
adc
adc
add
add
add
add
outsl
insl
insl
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
outsb
orl
cwtl
repnz
xchg
xchg
std
mov
call
sahf
popf
ljmp
scas
std
mov
scas
mov
mov
mov
cmpsb
movsb
cmpsl
pop
addb
add
add
add
popa
or
lods
mov
cmpsl
lahf
movsb
decl
mov
call
lahf
lahf
sti
mov
cwtl
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jge
subl
mov
lcall
mov
pushl
pop
mov
jge
mov
scas
lods
insl
stos
stos
test
add
add
add
pop
or
mov
in
mov
nop
call
cwtl
cwtl
lcall
lcall
pushf
lahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
imul
pushf
dec
jp
movsl
inc
js
scas
aaa
jbe
mov
jae
mov
outsb
ljmp
sbb
pop
mov
scas
mov
movsb
mov
add
add
add
popa
pusha
popa
or
mov
in
mov
cltd
lcall
mov
mov
decl
orl
cld
cwtl
pop
cmp
dec
jp
nop
cmp
nop
daa
push
lcall
punpcklwd
test
ljmp
pushl
sbb
mov
and
pop
nop
mov
lods
lods
xchg
lahf
lahf
popf
adc
add
add
pusha
popa
popa
or
lods
mov
stos
mov
mov
ljmp
test
lcall
pop
jns
mov
imul
mov
pusha
incl
or
mov
push
call
add
cmpsb
or
jae
mov
sub
jge
leave
das
cmp
lret
pop
xchg
inc
stos
mov
mov
mov
cmpsl
cmpsl
test
add
add
add
pop
or
movsl
test
test
cmpsb
jmp
scas
mov
mov
mov
mov
mov
cmpsb
xchg
mov
decl
adc
xchg
push
incl
add
add
xchg
add
lahf
add
add
mov
insb
inc
aaa
test
lret
call
inc
mov
roll
aad
xchg
call
arpl
stc
mov
mov
movsl
mov
std
add
add
add
pop
or
sahf
mov
ljmp
mov
pushl
mov
stos
call
pop
arpl
nop
sbb
mov
pop
decl
push
call
add
add
scas
add
mov
dec
nop
fcoms
fcompl
ficomps
loope
mov
fisubrs
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jl
fwait
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
insb
call
adc
xchg
add
popf
add
cmpsb
add
scas
add
mov
xor
jmp
outsb
stos
jmp
jo
call
jo
out
jno
call
cmpsl
mov
shll
addb
dec
dec
dec
pop
insl
outsb
insb
bound
cwtl
cwtl
pushl
mov
mov
mov
jne
lcall
ja
pushf
sub
xchg
or
pop
jmp
add
mov
fs
or
call
inc
xchg
jmp
js
jmp
mov
push
test
xrelease
fldt
mov
push
cltd
cltd
lcall
sub
push
push
push
dec
pop
addr16
xchg
mov
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
sub
cltd
pop
pop
jmp
add
mov
gs
mov
push
jbe
fistps
in
xchg
sar
xchg
cwtl
push
cltd
push
lcall
clc
cwtl
jmp
lods
mov
stos
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
pushl
push
mov
lods
dec
cmp
pop
push
sahf
add
pusha
pushl
add
leave
add
and
push
mov
into
clc
test
cld
stos
sar
std
stos
sar
cld
lods
sar
sti
cmpsl
int
out
leave
dec
mov
test
or
add
add
dec
push
push
aaa
jb
jae
test
int
out
into
int3
cmc
lret
sti
leave
leave
lret
leave
enter
mov
stos
pusha
mov
stos
inc
jg
mov
add
mov
fs
add
int
insl
fiaddl
jne
jmp
xchg
cld
mov
std
mov
fdivr
std
mov
fdivr
mov
sar
jmp
lret
rol
scas
scas
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
loopne
loopne
fstp
fadd
fcmovnu
fcmovu
aam
fsubr
mov
mov
cmpsl
sub
jmp
popa
mov
add
xlat
add
or
lock
mov
cld
loopne
std
std
loopne
std
enter
leave
fdivrp
std
lret
loope
sti
out
mov
lret
divb
sahf
sahf
sbb
add
add
incl
incb
jmp
in
sbb
in
jmp
jmp
out
xchg
mov
mov
mov
add
mov
inc
add
int
insl
fildl
jne
jmp
insl
mov
std
ret
std
iret
out
shl
shl
std
aam
call
cld
aam
push
enter
int3
sar
mov
mov
add
incb
std
std
add
std
pop
aam
push
mov
pop
xchg
sahf
or
pusha
pushl
add
rolb
jo
fiadds
jbe
out
and
cld
shl
std
fldl2e
fsubr
std
xlat
jmp
std
fsub
sti
shl
push
fdivr
loopne
xlat
sti
mov
popf
popf
das
add
add
int3
into
into
or
fs
lahf
adc
add
mov
add
aad
jb
loop
ja
out
xor
cli
int3
loope
clc
leave
cmc
fsin
repnz
aad
repz
out
sar
in
sar
in
aam
ljmp
ljmp
test
add
add
add
aam
mov
jb
push
gs
mov
insl
inc
sbb
int3
and
xlat
sub
sti
ficoms
clc
jecxz
mov
out
jecxz
leave
jmp
fidivrs
lret
sarb
in
fistpl
in
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsb
les
xchg
mov
fidivrl
jle
rol
stos
mov
mov
ret
mov
lret
insl
aam
int
ror
rorl
fcomp
cmp
fnstsw
das
in
frstor
in
repnz
jmp
or
std
std
add
add
add
std
std
add
mov
outsb
scas
mov
scas
data16
mov
mov
mov
xor
mov
aam
mov
rcl
or
loopne
or
int
add
incl
std
std
add
add
add
int
pextrw
or
int3
int3
int
lods
lods
stos
add
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
cltd
lcall
ret
enter
mov
ret
ret
mov
scas
mov
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
std
rcl
sar
into
iret
into
std
mov
mov
test
jg
sbb
push
add
add
add
add
add
add
add
add
jb
jae
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
int
inc
enter
mov
lcall
mov
push
add
add
add
add
je
je
xchg
adc
outsl
jo
popa
popa
popa
mov
data16
outsb
outsb
outsl
jb
popa
popa
cmp
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
xchg
lds
jae
es
pop
add
add
jae
jb
pushf
xchg
fwait
mov
xchg
xchg
mov
test
addl
push
push
push
inc
mov
popf
into
movsb
movsb
movsb
in
mov
xchg
xchg
decb
lea
scas
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
test
cmpsl
cld
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
cltd
lcall
push
push
push
imul
jle
lea
xchg
notl
mov
pushl
xchg
mov
stos
mov
test
stos
stos
add
add
add
test
lods
cld
xchg
xchg
xchg
call
cltd
fwait
lcall
cltd
lcall
mov
loope
jne
out
xchg
arpl
std
pushf
inc
jbe
cmpsl
aaa
jne
lods
sub
mov
jno
mov
insb
pushl
popf
scas
lock
mov
imul
int3
add
xchg
pop
scas
cmpsb
lods
test
sahf
popf
sahf
jmp
movsl
movsl
call
jl
mov
xchg
inc
jb
mov
imul
xchg
adc
xchg
or
mov
sbb
mov
and
jp
lds
xchg
rcrl
subl
jae
push
mov
movsb
test
ljmp
mov
lcall
sub
decl
or
xchg
push
decl
pop
jmp
adc
shlb
call
inc
mov
inc
call
push
xchg
dec
cltd
mov
mov
mov
movsl
movsb
movsl
push
add
add
push
push
test
lahf
mov
pushl
mov
mov
call
pop
pop
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsw
call
pushf
mov
mov
mov
cmpsl
cmpsl
test
add
add
bound
adc
sahf
pushf
lcall
mov
mov
lcall
xor
cwtl
and
xchg
push
pop
lcall
add
mov
xor
jmp
outsl
lods
jmp
jp
out
jl
out
jg
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
ret
mov
fs
movsl
inc
jle
lahf
and
pop
ljmp
add
les
insb
fimull
in
mov
cmc
xchg
xchg
enter
jmp
cmpsb
mov
movsl
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
inc
mov
cwtl
ljmp
sbb
cmpsb
add
mov
arpl
ret
call
adc
in
outsb
lods
push
cmpsb
into
clc
stos
sar
cld
lods
sar
cld
scas
sar
cld
lods
sar
jmp
enter
rcr
cmpsb
cmpsb
ds
incb
xor
jo
inc
mov
mov
rcl
mov
aam
rcl
out
lret
enter
mov
jmp
add
add
aad
jb
out
test
stc
pop
mov
cld
rcr
std
ret
inc
icebp
mov
ret
cmpsl
cmpsl
dec
addb
add
in
in
or
jmp
in
outsb
fcmovu
fldenv
mov
add
mov
add
faddl
jbe
lock
std
iret
out
dec
in
shl
aad
call
in
hlt
enter
enter
scas
lods
popa
jg
addb
add
std
std
add
std
std
push
lret
int
sub
lahf
sbb
lods
add
mov
add
loope
js
cmc
push
cmpsb
inc
loope
std
aad
aam
cld
shl
std
shl
stc
aam
push
xlat
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
add
push
rorb
cmp
out
mov
aam
ljmp
jmp
out
rcl
ljmp
scas
vsqrtsd
add
add
pushf
stos
xchg
and
push
mov
ret
int3
int3
ja
mov
xlat
mov
lret
int3
outsl
xlat
int3
into
pop
dec
jecxz
loope
out
out
out
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
rol
sbb
bswap
int3
int3
or
aam
push
std
add
jg
incb
lods
std
add
rol
std
incb
std
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
cwtl
and
pop
xor
or
mov
xchg
aam
in
adc
out
push
sbb
rcrb
je
jae
mov
add
dec
arpl
mov
and
or
in
adc
cli
repnz
jle
or
ds
sbb
inc
add
shll
mov
iret
cld
cmp
outsb
pop
xchg
mov
push
sub
pop
sbb
nop
sub
dec
cltd
dec
adc
ds
inc
jnp
mov
je
pop
or
dec
lret
in
lcall
mov
ja
pop
sub
mov
xchg
and
mov
aas
mov
jecxz
add
repz
pusha
movsb
out
pushl
das
pop
sub
inc
add
out
dec
fstpt
ret
call
xchg
sbb
in
pop
mov
mov
pop
jne
test
pop
or
popa
mov
jns
loope
push
xchg
sub
ficompl
in
cmpsl
fs
dec
jecxz
insl
cmp
roll
mov
pushf
push
cmp
xchg
adc
daa
push
jle
popf
dec
popf
xchg
xchg
xor
jae
cmp
mov
shll
out
ret
inc
add
cmc
xor
sbb
adc
jmp
fisttpll
mov
mov
jne
loopne
sahf
mov
shrb
and
cli
vpshufd
xchg
mov
scas
fiaddl
call
aas
or
mov
cmp
sub
push
je
cmp
notb
sahf
ja
xor
fists
das
nop
jge
cmp
sbb
stc
and
pop
in
adc
lcall
lock
adc
push
add
adcl
xor
cs
aas
lret
mov
jmp
cltd
mov
mov
push
rolb
pop
stos
in
xchg
mov
xchg
mov
cmpsb
and
and
mov
and
cmp
xchg
jo
in
add
call
mov
cs
push
andl
push
jb
jbe
fwait
adc
or
inc
subl
cltd
ds
lods
fs
shl
fs
mov
fcomps
jl
add
js
fwait
cmpsl
xor
lds
iret
cld
pop
fwait
inc
dec
imul
jmp
lods
jmp
pushl
xor
insl
out
dec
sub
mov
mov
movsb
lods
in
rorl
ret
sbb
mov
add
add
push
les
xchg
pop
insb
lret
inc
js
mov
pushf
dec
or
and
cmc
mov
xchg
sub
fcomp
dec
mov
sbb
jne
jle
and
cltd
cmp
loopne
push
cmpsb
mov
sbb
mov
out
lea
aam
out
lcall
and
dec
or
test
cwtl
cmp
movsb
push
add
je
pop
adc
shll
test
xor
daa
fsub
cs
negl
mov
fmuls
push
xor
sbb
stos
ficompl
jmp
adc
fsubrl
sbb
xor
cmpsl
jbe
xlat
cmp
inc
js
negb
outsl
adc
pop
test
push
add
push
hlt
xchg
push
aas
push
xchg
flds
push
fsubrl
das
cmpsl
dec
add
iret
jno
and
call
daa
pop
dec
adc
cs
xor
pop
inc
fsub
loop
dec
pop
int
iret
xchg
cmp
cmp
inc
cld
xchg
ja
inc
fidivs
ror
add
cmp
fidivl
pop
adc
cmp
pop
cmp
das
movsl
stc
rcrb
pop
or
pop
sub
test
mov
inc
jmp
fldenv
xor
fcompl
fwait
sbb
lret
xor
int3
mov
scas
sub
cld
pop
cwtl
subl
out
dec
into
ds
inc
nop
inc
jle
outsb
cltd
and
lock
add
push
push
repz
fiaddl
mov
shll
inc
xor
ljmp
pop
cmpsl
cwtl
sub
xchg
mov
cmp
test
mov
adc
cs
test
push
ret
bnd
inc
loopne
rolb
pop
push
push
roll
js
and
pop
das
push
xor
out
cld
cmc
pop
and
nop
cmp
jle
lahf
mov
ja
push
cmc
pop
mov
push
mov
jl
xchg
and
xchg
cmp
xor
push
lret
scas
rcrb
xor
add
push
adc
mov
push
dec
out
mov
pop
xchg
ss
pop
sti
push
sbb
or
dec
in
push
cld
adc
cmp
sbb
sahf
sub
inc
add
or
es
adc
ficomps
pop
ret
in
adc
sub
fprem1
jl
movsl
fistpll
sbb
cmpsl
dec
pushf
jg
add
test
xor
scas
push
loop
out
or
xchg
jp
or
shrb
or
add
movsl
rcrl
sub
jmp
cmp
lahf
sarb
imul
in
mov
out
nop
adc
addb
cmpsb
cmp
subl
popa
jle
daa
loope
inc
fstl
pusha
xchg
jge
leave
insl
xor
pushf
dec
adc
cmp
pop
cmc
addr16
out
inc
dec
sub
cmp
adc
jecxz
push
repnz
iret
insl
shr
cmp
mov
mov
orb
mov
jbe
test
cmp
jne
insl
cli
cld
xchg
in
loop
sbb
pop
lock
int3
sub
cli
out
inc
fisttpll
cmc
divl
call
mov
xchg
push
rolb
rorl
fildl
loope
js
mov
fdivs
or
dec
dec
or
mov
arpl
outsl
iret
mov
add
lock
lods
and
xor
jae
movsl
cmp
xchg
popa
clc
lds
jg
sbb
into
gs
ds
xorl
push
mov
loopne
jo
in
mov
movsl
push
or
test
mov
cmp
stos
pop
ret
mov
mov
cmp
add
clc
add
xchg
movlps
cmp
test
dec
adc
popf
scas
pop
and
jne
outsl
xor
insl
sahf
xor
push
cwtl
cld
lcall
dec
mov
nop
aas
mov
pop
scas
xchg
cmc
hlt
mov
mov
int3
in
adc
ss
mov
dec
in
stos
nop
daa
fnstsw
insb
add
scas
inc
xor
int3
arpl
movsl
ljmp
clc
or
mov
filds
cltd
adc
and
and
pop
jae
pop
cmp
outsl
daa
test
dec
dec
insb
pushf
pop
aaa
xchg
mov
pop
jge
dec
inc
cmpsb
mov
aas
push
mov
sbb
lahf
imul
mov
jo
xchg
movsb
stc
nop
xor
sbb
pop
pop
ja
mov
pushf
ljmp
jge
repz
cmp
out
cmpsl
dec
in
popf
dec
rcr
mov
aam
jl
jns
cmpsl
inc
clc
sahf
lock
xlat
mov
call
out
and
mov
aad
lret
idivb
sub
xchg
dec
pushf
xor
push
popf
call
or
outsl
and
lea
lea
clc
fists
adcb
out
leave
sbb
xchg
push
out
cmpsl
mov
add
sub
mov
adc
popl
mov
enter
xor
and
out
or
jmp
pop
cwtl
jo
lret
mov
sbb
aas
lods
inc
jno
pop
mov
adcl
sub
sarl
into
gs
dec
loope
xchg
in
add
push
or
and
lds
sbb
jle
push
out
push
mov
or
sub
mov
pop
sbb
leave
and
mov
push
call
out
mov
inc
in
adc
orl
testl
pop
mov
mov
fstpt
out
and
ret
add
or
xchg
popf
xor
cmp
std
xchg
or
mov
decl
and
pop
movsb
cmp
and
lahf
jo
ret
popa
cmp
outsl
sbbb
pop
adc
xchg
and
fidivs
ret
cmp
cmc
cmp
call
into
lcall
loope
mov
xor
lret
in
out
mov
sub
add
outsb
add
sahf
jnp
pop
test
je
xor
cmp
inc
sub
push
or
mov
pop
mov
out
call
cld
mov
and
or
inc
jo
xor
popf
xor
push
ss
add
arpl
fsubrl
or
lods
sbb
fmull
mov
movsl
pop
das
nop
inc
jo
xorl
leave
pop
inc
xor
push
sub
dec
rolb
das
pop
xchg
dec
jecxz
jl
loope
outsb
lcall
aaa
push
jmp
and
xchg
or
push
aaa
mov
mov
or
out
scas
xchg
fcompl
inc
dec
jl
cmp
es
inc
jge
clc
outsb
loope
xor
dec
loopne
mov
dec
jecxz
sub
xchg
gs
cmpsl
inc
pop
out
cmp
test
dec
es
gs
or
inc
jle
stc
outsl
in
mov
xchg
cmp
add
and
xchg
lcall
daa
push
or
cmp
jbe
cmp
hlt
mov
outsb
stos
inc
pusha
mov
stos
inc
repz
mov
adc
js
ss
push
cmpsl
push
jmp
push
cmp
stos
mov
cmc
ror
mov
mov
fistps
pop
repnz
gs
adcb
add
pop
lds
mov
cltd
sub
stos
fwait
xor
cltd
insb
mov
jno
addr16
insb
add
cld
xchg
cmp
dec
push
shrl
scas
addr16
lcall
sbb
stos
mov
je
mov
mov
xor
aad
adc
sbb
pop
scas
in
jp
pop
nop
xor
mov
jne
imul
lahf
mov
mov
ss
hlt
popw
nop
daa
xchg
or
dec
loopne
shrb
lds
inc
push
jmp
fcoml
into
dec
ja
sbb
pop
enter
testb
shrl
or
dec
cmp
xsha256
cmpsb
xchg
shll
push
daa
mov
in
out
scas
inc
cmp
test
dec
bound
aad
xor
cmp
icebp
icebp
movsl
cmp
adc
push
sti
cmpsb
xchg
sub
xchg
popa
clc
fistpll
add
movsl
lret
fnstenv
dec
lea
insl
sarb
fwait
xor
jne
jecxz
fidivl
add
dec
jbe
mov
loop
ror
or
inc
fstps
into
gs
jg
lods
stos
push
push
jmp
je
or
fs
shlb
shrb
xchg
sti
xor
pop
out
mov
xchg
sub
sbb
and
movsb
shlb
mov
jg
mov
mov
cmc
shlb
loop
mov
or
mov
or
mov
jnp
mov
testl
shrb
rolb
mov
xlat
arpl
popa
pushf
clc
scas
inc
ljmp
out
jl
sbb
js
xor
jge
ret
mov
insb
add
sub
aas
out
adc
shl
mov
cli
popf
xor
stos
ret
pop
mov
push
insl
add
mov
addr16
push
push
lcall
fisttpl
xlat
cmp
enter
shr
and
lods
sti
add
in
inc
out
test
sub
addr16
aad
adc
adc
movsb
aam
call
mov
pop
sahf
lret
xlat
ss
imul
popf
xor
cmp
mov
out
jmp
sub
sbb
mov
adc
gs
lds
xchg
cs
sbb
mov
pop
lret
and
fsubrs
fnstsw
mov
cmpsl
es
out
add
aad
stos
and
mov
imul
dec
fidivl
push
pop
nop
daa
push
stos
and
fs
xor
xor
lods
pop
sbb
fwait
hlt
stos
ds
popf
repnz
cmp
xor
lods
shlb
and
iret
aam
loopne
gs
jp
out
scas
inc
xor
dec
loope
lds
jns
test
push
sub
cltd
xor
inc
fdivs
add
iret
xor
roll
gs
arpl
mov
jl
mov
push
cmp
test
add
mov
scas
inc
xor
sbb
aas
pop
hlt
mov
push
out
xlat
rcll
ret
and
jecxz
repnz
test
pop
cmc
clc
out
sahf
xor
jp
in
orl
inc
push
mov
sbbb
aad
fwait
sub
sbb
jns
xlat
xchg
sub
fsubs
or
shlb
add
shlb
mov
out
aam
jle
test
std
stos
movsl
push
sarl
out
test
lret
mov
fisttpll
into
dec
inc
fidivrs
adc
ss
xorl
jecxz
xchg
adc
repz
les
orl
sub
icebp
jne
int3
arpl
pop
stc
nop
ds
jl
push
into
mov
nop
xchg
sarb
jmp
je
outsb
add
ss
xchg
cs
aas
popa
clc
mov
push
popf
in
rcll
ret
xchg
shl
sub
je
mov
inc
or
mov
pop
icebp
jp
inc
fldenv
jae
or
lods
inc
mov
rorl
ret
push
ja
dec
lods
out
aad
pop
mov
ret
ljmp
pop
jge
ljmp
hlt
lods
inc
sub
jbe
movsb
fidivrs
add
mov
mov
flds
sahf
lret
and
frstor
pop
out
push
fidivs
jns
or
and
fbstp
cmpsb
and
xlat
add
xchg
xor
inc
test
ja
scas
inc
repz
fwait
mov
push
jmp
mov
sub
nop
jne
mov
fsts
out
push
and
push
movups
insl
popa
jnp
mov
mov
arpl
and
sahf
pop
pop
scas
mov
mov
icebp
and
mov
mov
ja
fidivl
cwtl
test
xor
dec
mov
xor
mov
pop
xor
hlt
mov
fwait
jno
incl
sbb
jnp
cmc
mov
popf
push
cmp
test
sti
xchg
jnp
hlt
pushf
test
push
jb
xchg
dec
testb
rolb
mov
shll
paddusb
nop
orl
xchg
movsb
imul
mov
cmp
jmp
mov
xlat
and
addr16
dec
jecxz
mov
jle
repz
movsl
and
mov
sbb
shlb
lods
inc
outsb
cwtl
pop
repz
int3
arpl
subb
mov
subb
rcrl
xchg
sub
mov
loopne
roll
mov
aaa
out
test
pop
mov
push
jae
mov
out
into
fcom
ret
pop
ret
andb
jnp
mov
hlt
cmp
ret
jo
mov
rclb
push
ljmp
pusha
neg
push
add
mov
ficoml
pop
arpl
dec
loop
test
sbbl
pop
scas
enter
push
jmp
sti
xchg
stos
fisubs
in
lret
inc
fcmovu
or
stc
xor
lods
nop
push
jp
test
push
fnstcw
cmp
insb
mov
in
add
xchg
sub
or
jp
xchg
sub
mov
sbb
std
xchg
or
fnstsw
sarb
sarl
xlat
push
hlt
jl
leave
std
aam
lret
test
ret
mov
inc
stc
and
leave
xor
or
mov
shufps
inc
in
clc
lock
cmp
xor
sbb
sbb
mov
int3
lock
ret
mov
shl
fadd
cltd
mov
or
and
xchg
dec
sbb
rorl
push
sarl
xor
sub
jl
movsb
cmp
and
xor
inc
cltd
pop
xchg
push
call
movsl
imul
fmuls
adc
bts
and
jno
inc
mov
and
mov
inc
ret
sub
xor
dec
dec
lods
inc
jge
push
lods
fs
mov
inc
outsl
mov
lods
cwtl
jle
cld
and
adc
adc
mov
in
mov
scas
sarl
adc
cltd
xchg
test
aas
fdivrl
pop
inc
xchg
cmp
mov
push
jecxz
nop
daa
or
fdivl
mov
pop
loopne,pn
aas
mov
ffreep
sub
xchg
shl
pop
int3
or
cmp
add
dec
fidivrl
int
sbbb
out
xchg
xchg
mov
loope
movsl
mov
jl
push
decl
ret
aam
shrl
jmp
jle
jo
in
jg
lods
outsl
out
add
loopne
imul
les
mov
jge
pop
repnz
call
aam
repnz
mov
jmp
jae
fidivs
imul
pop
sub
arpl
ret
rcrl
sbbb
hlt
outsl
mov
imul
mov
mov
dec
mov
call
dec
xor
pop
push
sbb
dec
dec
int3
rcrl
test
mov
ret
loop
mov
leave
add
ja
into
gs
fiaddl
add
lret
lods
inc
in
sub
roll
out
test
shlb
add
popa
clc
push
fwait
or
daa
ja
repz
movsb
jns
jp
lcallw
call
loope
xchg
imul
aaa
push
popf
cmpsl
lock
decb
inc
cmp
js
clc
push
add
xchg
push
pop
cmc
inc
and
ret
lret
bound
or
lods
push
daa
shlb
jne
in
inc
push
lods
js
push
and
fs
xor
fstps
test
inc
stos
inc
arpl
ja
and
mov
lret
scas
inc
repnz
call
push
pop
mov
ljmp
mov
in
fisttpl
leave
in
jnp
jb
lock
popf
clc
idivl
inc
pop
jge
shll
and
dec
out
ds
cmc
movsb
les
jg
leave
mov
fbstp
pushf
fnstenv
subl
in
or
pusha
pop
mov
ds
mov
mov
mov
push
or
jnp
movsb
cmp
ret
jne
shl
mov
sub
xchg
sub
dec
add
mov
fists
xchg
inc
add
fnstenv
adc
int3
inc
mov
fwait
loop
jge
stc
dec
xchg
cmp
pop
or
push
leave
xchg
int3
arpl
adc
cmpl
xor
cmc
lods
inc
out
mov
jne
fwait
xor
xchg
lea
in
mov
push
or
jnp
js
jne
lcall
iret
add
adc
mov
mov
push
push
fsubl
int
data16
mov
decb
push
jge
insl
xchg
mov
cwtl
and
fnsave
mov
divb
push
ljmp
or
pop
pop
cmc
mov
stos
inc
int
push
call
lock
outsl
xchg
dec
mov
inc
jmp
inc
fimuls
rcrb
ret
jnp
push
inc
and
cmp
jb
or
lock
inc
daa
mov
add
sub
and
adc
push
jb
sbb
push
aad
mov
sti
inc
or
les
sub
test
mov
scas
inc
push
es
xchg
xchg
push
movsb
test
mov
lds
sti
mov
les
cmc
out
loop
mov
fldenv
in
add
outsb
xor
push
mov
push
mov
fnstenv
sub
pop
popa
testl
arpl
fstl
xor
repz
inc
fidivs
sub
adc
popa
clc
inc
xor
or
sub
cmp
push
and
cmp
inc
sahf
stos
inc
shlb
icebp
inc
icebp
test
mov
rclb
and
inc
ret
movsb
adc
add
mov
mov
mov
das
lods
inc
jae
dec
loope
xchg
scas
inc
daa
jns
scas
cmp
aas
pop
pop
dec
in
sbb
pop
adcl
cmp
pop
orl
add
sub
les
hlt
stos
inc
mov
sbb
call
or
fsubl
ret
cmp
aad
mov
sbb
sub
ret
cmp
orl
or
jb
push
jmp
xchg
xor
and
mov
test
lret
ds
xor
mov
push
mov
push
std
push
in
add
add
and
inc
ret
xchg
cmc
bound
cmp
jnp
test
lret
ljmp
jo
insl
out
xchg
shlb
repz
into
push
and
and
mov
push
cmp
arpl
fiadds
cltd
movntq
xor
jae
testl
testl
stos
jl
mov
loopne
dec
in
add
stos
test
sbb
stc
push
ja
enter
inc
jmp
push
movsl
cmp
push
xchg
pop
pop
icebp
insl
mov
or
or
mov
sahf
dec
dec
loopne
adc
mov
aaa
cmpsl
xchg
push
stc
xor
ljmp
je
cmpsb
sbb
xor
inc
fstpt
dec
jb
cmp
adc
mov
fnstcw
add
and
pop
outsl
sbb
xchg
jnp
arpl
and
insb
add
adc
test
je
or
adc
lahf
dec
fidivl
or
cmp
ficoml
and
in
roll
sbb
sub
imul
pop
hlt
add
imul
xchg
loop
out
sahf
ds
lidtl
and
mov
inc
jp
xor
decb
fnsave
ja
test
jnp
cmp
int3
arpl
mov
push
jecxz
cmc
mov
jae
pop
fs
cltd
xor
dec
ffreep
cmpsb
and
adc
dec
loope
ljmp
cltd
mov
std
dec
call
pop
mov
stc
and
jmp
pop
inc
xor
cmp
enter
mov
or
push
pop
sub
fs
jns
je
gs
fs
mov
jb
lcall
pop
aad
adc
cmp
test
cltd
shrl
sub
jb
ret
xchg
add
adc
outsb
xor
sub
mov
xchg
pop
and
push
out
addr16
ret
mov
mov
fistl
fwait
sbb
les
jecxz
mov
push
sub
lea
sub
mov
sub
lods
dec
leave
pusha
jle
arpl
mov
dec
inc
fnstsw
add
jb
dec
in
mov
enter
adc
loopne
push
aam
outsl
push
rcll
inc
inc
push
cmp
dec
cld
std
xchg
lock
mov
mov
sbb
daa
dec
or
cmp
testb
sub
mov
pop
std
xchg
aas
mov
cmc
popl
rolb
dec
mov
mov
pop
iret
jle
add
inc
jo
fbstp
xchg
xchg
push
and
cwtl
nop
imul
clc
and
repnz
div
xchg
sbb
lea
mov
adc
movb
add
pop
fidivs
xor
jle
lock
daa
inc
leave
popa
clc
cli
bound
rcll
test
pop
and
ljmp
cmp
xor
orl
out
dec
sbb
push
jnp
inc
cmpsl
xchg
dec
shrl
clc
jne
frstor
or
xlat
rcl
cmp
ret
cmp
hlt
fcmovnu
cmp
cmpsl
daa
fcomip
in
cmp
hlt
insl
es
jns
xchg
dec
push
cmp
xchg
inc
mov
dec
mov
mov
push
into
mov
stc
sub
jnp
call
call
scas
popf
test
pop
dec
mov
mov
dec
sarb
ret
ds
shrb
shlb
cmpsl
dec
filds
imul
dec
sar
pop
and
pop
scas
inc
mov
push
popf
pop
lds
js
sti
imul
popl
adc
pushf
mov
js
lock
mov
and
ja
arpl
xchg
sub
aas
xor
sub
dec
imul
cmp
and
push
insb
push
mov
push
sub
data16
and
push
xchg
inc
int3
sub
inc
mov
inc
pop
jl
fs
cmp
push
scas
in
inc
mov
sbb
pop
mov
leave
jg
mov
fstp
jo
mov
ret
pop
adc
out
pop
xchg
sbbl
xor
adc
lcall
xor
pop
xlat
push
pop
cmp
mov
clc
jnp
fidivrs
mov
pop
or
mov
dec
mov
sub
pop
int
popl
fnstenv
add
fcomps
push
aas
ljmp
or
inc
pop
mov
fbstp
shll
cmpsl
mov
fsts
out
jl
fdivp
outsb
in
lahf
push
pop
loop
dec
mov
stc
repz
jnp
aam
pop
ss
push
mov
xchg
mov
cli
pop
aam
gs
mov
iret
or
and
lds
test
or
mov
dec
jmp
or
xor
fldl
mov
daa
cmp
jo
std
jle
aas
outsb
mov
cltd
or
sbb
rol
jns
shrb
rclb
mov
js
ffreep
aaa
jecxz
mov
cltd
cmpsl
loop
adc
movsb
iret
jp
xor
fldcw
loopne
xchg
fstps
mov
insl
stc
lahf
and
loope
ficoms
mov
movb
pop
sahf
xchg
pop
mov
pop
push
jle
pop
xchg
call
pop
pop
ror
fists
addb
jle
test
add
into
jl
add
fistl
and
or
mov
xor
repz
xchg
int3
je
arpl
inc
pop
icebp
aaa
jge
in
dec
mov
in
push
lods
lds
mul
jns
dec
xchg
sub
sahf
xor
outsb
mov
mov
imul
dec
sbb
repnz
or
jle
mov
scas
cmp
iret
cmp
pop
rorb
pushf
pop
adc
inc
mov
mov
testb
or
push
adc
aam
subb
mov
lock
insb
mov
dec
jmp
mov
in
vxorpd
push
xorb
push
jecxz
movsl
pushf
test
aad
fisttpll
daa
testl
ds
ds
movsl
cltd
adc
jmp
loop
sub
lods
pop
in
imul
dec
inc
fstpt
pop
aad
mov
fsubs
adcb
stc
pop
shll
lock
in
adc
pop
test
add
xor
test
loopne
inc
sub
inc
mov
mov
push
jmp
mov
inc
stc
movsl
sbb
add
outsl
nop
daa
mov
lcall
dec
rorb
inc
mov
gs
andl
dec
sti
inc
inc
or
fisttps
in
pop
dec
and
mov
xor
fidivl
push
push
lret
mov
mov
mov
push
mov
lcall
push
imul
pusha
fsubl
mov
out
imull
pop
jae
jecxz
jmp
xor
push
inc
popa
es
pop
push
xchg
loope
mov
add
cltd
das
cmp
outsl
mov
ljmp
enter
cmp
mov
ret
movsb
sbb
dec
and
mov
lret
clc
ret
hlt
sbb
addb
xor
xchg
xor
jb
test
inc
xchg
popf
dec
lahf
mov
cli
aad
pop
pop
jp
adc
movsb
and
in
scas
stc
lcall
inc
imul
mov
jne
outsl
lock
popa
dec
je
insl
add
xchg
push
xchg
xchg
outsl
orl
jnp
scas
mov
xchg
out
xchg
inc
mov
sarl
pop
pop
lret
mov
cmp
lods
pop
repz
fcoms
cmpsb
std
jbe
icebp
jle
and
dec
mov
mov
repz
ret
dec
jne
or
insl
insl
sub
xchg
iret
ja
and
add
clc
and
in
movsb
mov
ds
int
leave
adc
mov
inc
and
cs
or
and
leave
xchg
jle
push
jae
push
repz
jbe
sahf
mov
gs
inc
xchg
mov
sbb
inc
sbb
out
xor
pop
pop
sahf
lea
and
dec
xchg
sub
imul
xchg
add
dec
cmpl
int
dec
xchg
inc
add
in
imul
dec
mov
push
sub
test
xchg
push
mov
lods
mov
sbb
dec
mov
enter
adc
dec
sbb
mov
arpl
call
fstpl
scas
iret
mov
hlt
mov
pop
ljmp
inc
out
bound
vxorpd
jnp
ret
lock
push
xchg
into
sub
mov
in
fcomp
dec
jg
xorb
mov
cmpsl
xchg
sbb
out
jle
mov
jae
cld
negb
call
cmp
rcrl
lret
sbb
mov
rcll
mov
mov
sbb
outsl
ffreep
adc
push
and
fldenv
fs
xor
cmp
lods
cmp
mov
cmp
cmp
xor
inc
or
push
mov
into
jmp
mov
xor
jnp
push
push
int
test
mov
sbb
test
and
mov
cmp
test
fs
in
push
lds
mov
icebp
add
aaa
jmp
pushw
cwtl
adc
ret
fnstenv
adc
loope
push
xchg
sub
pop
in
addr16
les
adcb
sahf
enter
mov
pusha
inc
jnp
in
add
pop
out
iret
nop
popa
jp
repnz
out
xchg
mov
jo
aad
pusha
addr16
push
iret
sbb
jnp
or
int
aaa
int3
jle
jne
adc
stos
inc
xchg
out
xor
sub
les
dec
sub
adc
mov
lahf
sti
jge
adc
mov
push
pop
push
ret
cmp
xchg
scas
sbb
lock
mov
inc
mov
cmpsl
dec
popf
xchg
mov
adc
aam
mov
adc
sbb
add
pop
xchg
xchg
into
arpl
add
jbe
pop
adc
jbe
jl
test
dec
mov
imul
or
add
rcpps
test
cmp
stc
aaa
into
sub
xlat
mov
aas
out
push
dec
hlt
xchg
sub
imul
pop
push
int3
mov
xchg
jo
loop
imul
pop
push
xorl
inc
sbb
repnz
js
inc
adc
add
dec
adc
mov
lds
das
xor
int
addr16
in
xor
fsts
lds
sbb
icebp
mov
sub
cmp
pop
in
mov
jo
jno
and
add
xor
aaa
xchg
jg
leave
pop
in
sbb
pop
pop
push
mov
pop
test
leave
pusha
arpl
gs
dec
lea
mov
imul
cmp
and
push
jno
shrb
test
adc
xor
pop
scas
sbb
jnp
repz
fwait
pushf
mov
shll
lahf
ss
hlt
cmp
push
and
sarb
adcb
xor
mov
movsb
sbbb
dec
fidivrs
cmpsl
push
cmpsl
mov
lods
mov
inc
scas
inc
or
int3
xor
jae
jp
jle
sub
dec
arpl
cmp
mov
dec
ret
xor
push
or
jge
mov
lds
pop
add
lret
or
mov
mov
add
mov
pop
out
xchg
shll
mov
lock
adc
fxam
inc
cli
adc
jno
cmp
hlt
dec
icebp
movsl
pusha
mov
add
xor
or
int
arpl
lock
es
int
cmp
xchg
pop
call
out
cld
xchg
je
add
dec
cmp
push
in
test
jbe
int
dec
xor
xor
lcall
test
stos
cmp
imul
dec
mov
popf
dec
int
lcall
addr16
test
mov
mov
rcrl
xor
sub
sub
mov
mov
les
mov
call
test
push
push
mov
xor
cmpsl
insl
or
jns
cmpsb
cmp
mov
cmpsb
das
mov
mov
int
sahf
aam
jns
adc
popf
int
cmp
mov
movsb
dec
mov
seto
pushl
mov
int
push
out
pushf
mov
into
and
mov
fxch
jecxz
hlt
mov
sahf
test
mov
or
pop
les
adc
jo
fadd
push
stos
jg
fnsave
shll
fldl
addr16
dec
mov
adc
fidivs
xchg
sbb
lods
dec
cwtl
cmpb
outsb
ret
cmp
lods
mov
das
cltd
jg
mov
cs
adc
or
cmp
addr16
sbb
jbe
dec
or
ret
jae
or
add
pop
sbb
addr16
ss
test
pop
out
add
mov
xor
cmpsb
int3
mov
in
test
out
test
shl
movsl
pop
iret
fs
lods
jbe
mov
int3
jb
ja
mov
mov
in
cwtl
not
cmp
pop
sub
test
push
fbld
pop
add
mov
imul
stos
adc
or
inc
or
ss
push
pop
inc
mov
xchg
xchg
add
and
sub
movl
push
into
clc
xor
jbe
scas
push
or
add
insb
and
lahf
sbb
shll
testl
stc
push
xchg
sub
mov
sub
jle
addr16
fists
inc
mov
in
stos
lret
mov
aam
stc
stc
in
mov
and
inc
nop
cmpsl
push
ret
bound
pop
icebp
fldt
jb
mov
insb
adc
mov
push
dec
addr16
rcrb
jp
rcrl
loope
sub
jle
insl
pusha
sbb
jle
outsb
or
mov
adc
popa
aas
jmp
cmp
aas
rorb
testb
jb
les
xchg
fstl
sub
aas
sahf
sti
and
cmp
dec
enter
or
jno
sbb
add
sbb
idivl
inc
sbb
sbb
dec
sbb
sbb
fisttpl
dec
mov
dec
xor
xor
insb
inc
inc
pop
ret
mov
shlb
lea
xlat
sub
aaa
into
and
stos
gs
push
adc
cmpsl
mov
add
jmp
fidivrl
fidivl
mov
movq
rcrb
mov
mov
push
push
xor
xor
jnp
leave
push
ljmp
test
cld
cmp
adc
pop
ret
mov
pop
adc
sub
lahf
frstor
push
cmc
mov
inc
das
lods
movsl
xor
push
bswap
int
loope
adc
xchg
in
jns
xchg
mov
pop
fucomi
mov
jp
dec
jae
adc
mov
aad
test
scas
pop
and
mov
pusha
in
movsb
lret
int
rorb
jbe
adc
in
test
pop
mov
rorb
jae
pop
repz
xchg
pop
adc
inc
call
cmc
xchg
sbb
f2xm1
inc
jnp
loopne
mov
jmp
cs
cmp
fs
jo
inc
mov
ret
loopne
ljmp
push
repz
jns
adc
mov
add
lock
push
dec
scas
adc
xchg
icebp
xchg
xor
scas
xchg
add
add
xchg
aas
arpl
data16
loope
pop
test
insl
jp
incl
sahf
into
jecxz
inc
adc
add
stos
popf
push
js
mov
sbb
out
jo
scas
psubd
loopne
nop
or
cmpsl
push
mov
test
into
orb
sbb
inc
or
dec
cmp
push
push
sub
xchg
ret
repz
lods
or
js
ret
sbbl
xchg
mov
jp
mov
sub
add
shl
testl
sub
or
lret
adc
fs
das
addr16
mov
add
push
mov
test
sub
pop
mov
mov
test
fsubrs
cmpl
rorl
call
movsl
push
bnd
pushf
adc
in
inc
in
jae
pop
popf
dec
cltd
sbbl
out
push
fucom
pop
fsubrp
stos
lea
fisttpl
call
add
cs
dec
out
lcall
and
mov
or
pop
ja
pop
mov
pop
int
dec
dec
inc
stos
aas
and
aaa
mov
hlt
int
dec
pop
sub
test
inc
andb
xlat
popf
mov
je
test
lahf
xor
rolb
cli
cmp
aad
xchg
cmpsb
es
sub
mov
mov
outsb
dec
in
imul
dec
loope
sub
pop
sti
sbb
inc
cmp
adc
hlt
or
dec
std
sbb
sbbl
add
or
popa
dec
xchg
add
inc
ds
add
sbb
jbe
and
pusha
icebp
adc
xchg
je
clc
mov
sub
sti
mov
mov
lods
stos
cs
dec
aas
gs
sub
jns
cmpsb
pop
fstps
mov
imul
mov
int3
push
ror
sub
ficompl
insl
das
rcrb
imul
cltd
sub
lock
or
jne,pn
mov
inc
js
and
loope
leave
stc
xchg
mov
leave
jnp
mov
add
mov
pusha
inc
addr16
jae
stc
loop
in
shlb
fdivr
ja
xchg
popf
ja
shl
mov
xchg
mov
add
inc
nop
mov
adc
add
repz
mov
add
hlt
add
pusha
clc
add
lcall
xchg
sbb
jae
shrb
xchg
inc
out
test
and
jmp
push
add
jl
and
pop
pop
inc
xor
sbb
jge
cmp
pusha
and
cs
mov
push
and
jno
fldt
xor
rcrb
daa
jns
jae
lods
mov
dec
outsl
imul
cli
fbstp
insb
std
add
gs
sbb
xor
cwtl
das
inc
out
pop
fcompl
stos
inc
xchg
cmp
insb
sub
pop
shl
mov
cwtl
ljmp
lods
iret
sbb
cmc
movsb
enter
mov
out
fdivrs
out
xor
pop
popf
add
loopne
jp
test
sbb
inc
jge
fwait
ja
es
lea
fidivs
mov
inc
sbb
xchg
mov
pop
call
clc
in
movsb
out
jbe
sub
mov
cmpsb
push
loop
xor
fcoml
mov
adc
inc
call
std
mov
push
lea
lret
cli
add
mov
test
jmp
sahf
leave
daa
xchg
sub
sbbl
aaa
inc
fiadds
aas
arpl
sbb
ds
mov
ret
incl
movsl
out
lods
mov
jb
mov
fisubrl
lock
jmp
call
addr16
sarb
nop
dec
mov
cmpsb
pop
adcl
movsb
mov
out
call
mov
mov
jo
outsl
mov
sub
push
adcl
loopne
sbb
add
fnsave
xchg
addr16
movsl
or
hlt
or
add
pop
jnp
cmp
push
je
loope
xor
mov
sub
push
js
je
mov
add
insb
js
call
insl
xor
mov
and
jnp
or
leave
cmp
std
aad
lds
mov
jge
pop
arpl
testb
pop
cs
ja
dec
adc
jns
and
addr16
inc
mov
std
mov
ja
xlat
test
aaa
jle
subb
sbb
aam
sbb
insb
icebp
out
sti
aaa
pop
sub
and
jmp
in
mov
pop
pop
add
jno
sbbb
data16
cwtl
cmpsb
lods
inc
pop
out
dec
sbb
mov
test
sbbb
cmpsb
scas
inc
mov
fldt
ret
subl
shlb
popa
cmc
dec
pop
xchg
sbb
dec
xchg
mov
aas
repz
xchg
mov
fimull
repz
lock
sbb
push
mov
adc
jne
mov
jno
adc
cmp
cmpsb
cmp
mov
xchg
jns
jne
fistps
xchg
sub
in
cmp
sbb
ds
in
outsl
cmpsl
shlb
nop
je
ret
test
xchg
sub
dec
or
jg
mov
imul
or
adc
in
adcl
insl
clc
insb
ljmp
nop
clc
aaa
pop
xchg
xchg
cld
dec
sbb
es
mov
xor
mov
mov
or
pop
and
mov
subl
adc
push
inc
aaa
add
push
and
test
cs
mov
leave
jecxz
loop
dec
repz
ja
sbb
addr16
cmc
cmp
mov
push
push
or
or
fadds
pop
adc
push
mov
ja
mov
fistps
jecxz
xchg
insl
push
jns
jae
ret
mov
inc
jle
cmpsl
cmp
cmp
jecxz
fistpl
nop
lods
mov
or
cmp
pop
jne
dec
sarl
adc
mov
jg
es
arpl
adc
push
push
stc
mov
fsubrp
xor
cmc
ror
xchg
leave
mov
negl
push
gs
test
adc
cmp
nop
push
pop
mov
pop
xlat
repz
inc
sub
popf
or
dec
das
test
mov
inc
and
pop
test
repnz
aas
popa
mov
inc
mov
add
push
adc
test
aad
mov
out
aam
push
les
jp
std
or
mov
mov
xchg
test
in
mulb
mov
pop
inc
mov
cli
and
sbb
repnz
pop
cmp
mov
cmp
test
std
mov
cltd
data16
xor
jae
js
push
and
in
int
jg
and
dec
push
jbe
lahf
cmpsl
jae
jg
rolb
iret
addb
mov
push
cmp
add
xorb
push
sub
sub
mov
int
jnp
lcall
fldl2t
stos
hlt
sbb
mov
shll
test
fsubr
dec
movsl
add
sub
adc
mov
inc
mov
mov
test
pop
pop
in
adc
push
xlat
inc
fmuls
xor
nop
and
push
sbb
xchg
pop
xor
out
dec
or
cs
jl
pop
push
ss
sarb
test
pusha
jb
jge
jl
lock
aam
data16
mov
hlt
call
dec
xor
push
pop
mov
or
insl
inc
pop
rcll
cmp
call
test
cmp
les
jnp
add
int
or
sbb
push
jae
das
lret
adcb
and
mov
inc
pop
int3
mov
call
or
push
dec
push
fnsave
iret
bound
loope
nop
ret
repnz
enter
push
xchg
das
adc
adc
cli
xchg
pop
rolb
xchg
scas
cld
mov
dec
dec
insl
add
repnz
fistpll
jo
sbb
testb
rorb
loope
mov
jle
sti
mov
push
ret
pushf
outsb
xor
int
push
jb
mov
pop
in
lods
and
and
mov
aad
jns
sarb
sbb
fdivp
cmp
push
hlt
pop
lods
inc
dec
or
lret
ficoml
push
outsl
push
or
push
jle
fsubrp
test
inc
insl
xor
inc
dec
push
mov
rcrl
shll
dec
mov
cltd
aad
icebp
xor
arpl
cltd
jb
jb
fdivp
mov
mov
pop
xlat
mov
push
mov
data16
or
mov
and
adc
inc
xchg
xchg
add
lret
addr16
sbb
push
je
mov
and
andb
ficoml
in
mov
and
mov
fs
push
fwait
ss
scas
jae
arpl
inc
movsb
sbb
andb
sbb
and
scas
sub
push
rcll
notb
inc
int
xchg
xor
mov
mov
sbb
subl
cmp
and
jno
lahf
jmp
jno
rorb
sub
sbb
out
and
pusha
std
jae
faddp
dec
out
push
into
lods
or
out
and
cmp
das
mov
add
inc
fs
or
cs
shrb
mov
fwait
pop
rolb
inc
adc
mov
std
inc
stos
icebp
popf
iret
xor
jg
int
or
aad
and
rorb
negb
imul
adc
sbb
and
mov
and
adc
push
adc
jg
sub
je
jnp
lea
cmpsl
rorl
int3
mov
gs
cmpsb
arpl
jae
xor
lds
cli
jmp
jl
fiadds
add
jb
add
pop
aam
cltd
and
pop
add
push
lea
pop
pop
faddl
jp
pop
jo
push
in
pop
cmp
ljmp
lock
cmc
btc
xchg
pop
dec
ror
ret
and
and
mov
arpl
xchg
and
pop
rorl
mov
xchg
dec
or
fisttpll
sub
sub
sbb
sub
movsb
andl
cmp
testb
arpl
in
repz
gs
inc
les
test
arpl
shrl
or
sti
push
mov
clc
stc
test
xor
popa
push
popf
jg
in
gs
test
inc
test
stos
inc
and
inc
inc
lahf
push
push
add
mov
mov
mov
test
xor
xor
dec
sub
add
inc
sbb
es
push
sub
in
sub
mov
ret
dec
fists
inc
pop
dec
xor
in
test
mov
fisubl
or
xor
aad
jnp
jno
cmp
dec
inc
jl
out
push
setl
xor
mov
push
pushf
mov
mov
adc
call
sahf
in
mov
sti
mov
fiaddl
int
cmp
pop
bound
mov
jne
mov
mov
push
test
mov
js
jbe
shrb
add
dec
sahf
imulb
lods
sub
cmp
xor
test
rorl
test
loopne
push
adc
shll
add
xor
rorb
sbb
xchg
sbb
inc
inc
fs
arpl
lret
mov
pop
imull
sub
cmpb
aad
les
xor
dec
inc
pop
sahf
jae
or
stos
mov
stc
push
lods
sub
jbe
xchg
int
inc
js
xchg
sub
lcall
add
jl
xor
and
cmp
pop
iret
pop
or
cs
push
lods
aas
sbb
lods
inc
lret
lds
adc
cmp
fimull
int
insl
sbb
addr16
cmpsb
xchg
repnz
jno
jns
inc
stos
push
sbb
fs
cltd
mov
inc
sahf
jbe
incb
xor
dec
cwtl
xchg
push
and
push
test
push
fidivl
int
jo
and
dec
out
testl
inc
dec
inc
fstpl
mov
jle
dec
popa
jl
adc
mov
xchg
ss
int
das
mov
push
mov
decl
xchg
xchg
sahf
and
xor
xorb
out
daa
xchg
dec
pop
into
push
leave
jmp
in
fiadds
shl
out
dec
or
cmp
xchg
adcl
sub
js
lds
mov
test
aad
fwait
nop
xor
cwtl
xor
xor
imul
std
mov
in
xor
add
imul
push
adc
sbb
sahf
ret
dec
pop
outsb
add
les
les
scas
aaa
stos
sub
and
cltd
call
xchg
push
testb
and
mov
jbe
outsl
jmp
cwtl
fdivl
xchg
lret
dec
inc
in
or
aam
lds
jp
pop
repnz
popf
jecxz
mov
sbb
or
jae
push
popf
or
mov
push
jno
sbb
jae
mov
push
in
add
mov
fcomi
cmp
dec
loopne
pop
cmpsl
lock
icebp
adc
in
arpl
sub
add
xlat
outsb
xor
pop
hlt
xchg
iret
fdiv
icebp
mov
adc
adc
jbe
test
mov
cmpsb
out
rcrl
subb
lcall
gs
in
in
push
stos
cmp
shll
hlt
push
pop
test
in
inc
xor
aas
xchg
testl
and
push
mov
push
add
pop
icebp
js
es
js
nop
dec
fmulp
mov
push
outsl
xor
adc
aam
arpl
sub
pop
sahf
cmc
lea
aad
xlat
call
daa
mov
ficompl
mov
scas
loop
pop
mov
ret
jp
mov
pusha
loopne
rcrl
in
ret
ret
adc
jecxz,pt
imul
inc
jno
leave
jmp
or
mov
inc
fdivrl
jae
imul
inc
movsb
aaa
std
lods
mov
push
mov
jmp
sahf
inc
push
orb
in
in
in
cmpsb
xchg
cmp
jle
push
stc
sbb
test
fisttpl
mov
or
repnz
ds
adc
pushf
data16
test
je
mov
cli
push
mov
cwtl
and
fisubrl
sbb
cs
rcrl
fisttps
bound
sbb
sbb
add
int
mov
movsb
out
and
mov
xor
inc
daa
mov
sbb
xchg
dec
sbb
dec
std
jmp
mov
or
inc
xlat
ja
mov
scas
adc
mov
iret
rorb
and
push
push
fwait
aad
add
pop
push
cwtl
and
mov
cs
xchg
inc
cmp
and
cmp
xchg
pop
or
pop
sarb
add
sbb
outsl
inc
ss
jne
xor
ret
pop
mov
push
outsl
sahf
fsub
ja
sub
xchg
mov
movntq
out
adc
je
inc
dec
jae
out
xchg
daa
lcall
sbb
icebp
mov
and
rcrb
aas
adc
jb
pop
aaa
jg
in
andb
push
fdiv
xor
cmp
push
rcrb
dec
adc
push
jne
xchg
push
and
or
popa
inc
xlat
mov
cli
popf
out
inc
push
dec
movsl
dec
bound
mov
adc
pop
xchg
mov
shll
or
test
push
add
jp
je
fwait
xchg
sub
scas
pop
repnz
xor
adc
ds
dec
cld
xchg
jle
aas
jg
dec
sbb
or
lock
movsb
push
push
push
jns
dec
enter
stos
pop
frstor
push
imul
pop
cmc
fstpl
arpl
xchg
int3
add
xor
movsb
mov
inc
ljmp
stc
mov
loop
out
roll
stos
mov
sbb
stos
fidivrl
dec
lret
shl
cli
push
frstor
jmp
or
out
jb
push
test
xchg
ss
cmp
pop
mov
adc
insl
mov
jae
repnz
sbbl
stos
mov
mov
push
xlat
insb
push
mov
repz
dec
mov
cmp
push
mov
and
inc
leave
stos
in
jb
daa
mov
sti
dec
inc
push
sbbb
inc
xchg
lret
xchg
test
jnp
sub
mov
or
into
push
cmp
jo
pop
stos
int
repnz
daa
push
in
ljmp
mov
adc
lret
add
iret
push
outsb
mov
cwtl
das
dec
lea
pop
call
jnp
pop
aaa
push
sahf
aas
scas
dec
lock
adc
sbb
mov
inc
inc
shlb
jno
lret
insb
jle
cld
xchg
sub
nop
ja
into
lds
fdivs
xlat
pusha
outsl
and
xor
mov
and
in
insb
sub
pop
pop
mov
addr16
ljmp
cltd
adc
sti
out
int
cmp
aas
cs
out
cld
pop
push
rep
lahf
ss
cmp
loope
mov
out
out
adc
nop
leave
adc
or
hlt
enter
dec
pop
scas
and
mov
frstor
int3
loopne
adc
jns
test
ljmp
mov
popa
mov
pop
sub
xchg
lahf
sbb
ficoml
push
dec
je
out
in
imulb
popl
cwtl
movsb
clc
or
lret
lods
loop
and
ret
hlt
mov
outsl
enter
mov
cmp
fldenv
dec
lock
das
insl
gs
mov
mov
dec
mov
inc
mov
pop
int3
xor
or
psrlw
add
pop
imul
mov
sbb
dec
dec
xchg
js
jns
enter
jge
cltd
int3
lret
mov
jge
mov
adc
iret
pop
adc
rcrl
mov
imulb
and
icebp
je
gs
out
inc
pushf
jmp
sub
push
or
push
fsubrp
xor
scas
mov
xchg
test
mov
out
cli
lret
push
sti
inc
xchg
inc
in
add
insb
out
insb
xchg
cmpsl
xchg
dec
xchg
sarl
cmp
fmull
sti
pop
lods
repz
sar
sub
cmpsb
pop
add
out
mov
or
ficomps
mov
jl
pop
jns
or
fcmovne
mov
dec
int
jae
sub
pushf
cmc
sub
inc
adc
nop
jp
icebp
lods
sub
sbb
push
dec
in
cmp
cmpsb
push
dec
and
enter
mov
mov
and
dec
mov
repz
or
nop
daa
aad
scas
xor
sub
insb
aaa
stos
push
ljmp
dec
lcall
js
mov
das
xor
jae
xchg
mov
add
sbbl
or
xor
rcll
sub
cs
mov
push
mov
push
in
and
adcb
or
sub
pusha
imull
mov
xchg
jne
test
sbb
adc
mov
push
jl
xchg
xchg
repnz
lcall
inc
mov
pop
sub
and
mov
ret
bound
movsl
out
xlat
jle
test
pusha
arpl
lcall
lods
jns
pop
cli
ljmp
in
in
push
inc
jno
dec
sub
aad
xor
lock
cmp
ret
loope
arpl
dec
or
repz
stc
xor
or
xchg
or
pop
adc
ss
mov
dec
test
push
and
repz
jne
iret
arpl
lods
or
mov
into
cmpsl
pop
movsl
cld
cmp
jp
enter
xor
cwtl
arpl
lcall
pop
rcll
pusha
testl
push
pop
xchg
push
in
std
and
xor
inc
addr16
cltd
mov
insl
sub
mov
lods
data16
xchg
popa
or
cwtl
repz
dec
sbb
dec
mov
cld
fisubl
sub
pop
repnz
cmpsl
sub
mov
cmc
in
or
insb
enter
cwtl
jmp
dec
stos
movl
lret
xor
test
rol
inc
out
mul
fwait
jbe
pop
ss
fcmovnu
jo
out
add
fyl2xp1
sub
inc
cmp
sti
sahf
xor
pop
iret
fdivrs
dec
pop
fdivrs
inc
mov
sub
aad
push
push
push
cmp
fstps
cmp
insb
pop
stc
scas
in
add
jl
push
xlat
xorb
or
push
gs
ja
mov
sbb
cmp
adc
xchg
mov
in
js
mov
fsubs
mov
and
lahf
fs
enter
popa
jmp
fsubs
xor
cmpsb
clc
leave
test
jo
inc
jl
dec
mov
decl
scas
fadd
fs
inc
lods
addl
xor
adc
pop
repz
jp
xchg
in
dec
mov
mov
sbb
pop
sbb
mov
test
ret
hlt
mov
mov
mov
push
gs
ss
adc
jmp
jp
sub
mov
xchg
cltd
push
jle
mov
jae
mov
lods
mov
cs
cmp
sti
sub
or
adc
dec
xor
cli
lahf
test
pop
xor
xor
out
shl
nop
or
ret
add
pop
and
mov
fldt
cmp
test
rorb
imul
push
push
lds
mov
adc
adc
loopne
xlat
popf
dec
out
div
jo
lods
repnz
sbbb
adc
sub
sub
push
cmp
pusha
push
inc
cwtl
mov
or
xchg
andb
xchg
or
mov
pop
mov
or
stc
aas
lds
xchg
dec
cmpsb
dec
push
fsubrl
rorl
mov
or
fwait
test
subb
incl
mov
add
sbb
arpl
mov
rorl
add
in
jae
pop
lock
xchg
or
sub
icebp
xchg
subb
mov
pop
mov
jp
stos
sub
mov
mov
inc
push
push
stos
push
jmp
add
mov
adc
pusha
adc
and
cmp
push
leave
ss
jae
inc
movsl
scas
mov
xor
outsb
xchg
nop
mov
cmpsl
push
sub
mov
cmp
ss
inc
dec
pop
jl
mov
and
dec
jp
mov
xor
push
insl
call
mov
pop
pop
push
add
inc
push
xchg
or
popa
push
xchg
xor
mov
outsl
and
push
nop
popf
ds
jl
aas
scas
addr16
jns
inc
rclb
cmp
and
mov
lret
inc
xchg
daa
xchg
jo
mov
xchg
das
push
adc
int
pop
rcrb
add
inc
out
mov
dec
bound
or
adc
cmp
in
or
out
test
inc
fidivl
mov
repz
dec
pop
andb
movsb
pop
and
std
xor
cmp
pop
push
test
pop
adc
adc
lea
gs
mov
mov
fbstp
addl
pusha
std
mov
pop
xor
xchg
test
push
ljmp
out
push
sub
lret
cmp
dec
int3
fs
mov
mov
sbb
dec
mov
mov
inc
xchg
sub
cwtl
out
shl
fisttpll
cmp
lret
lock
xchg
xor
push
out
jp
inc
lret
not
or
enter
icebp
mov
ret
xchg
mov
or
xchg
sarl
pop
ljmp
xchg
lcall
add
adc
cwtl
mov
xchg
mov
jns
xchg
xor
mov
insb
xor
das
repnz
in
sbb
jno
cmp
popw
xchg
dec
dec
lret
push
or
cmpsb
mov
loop
in
das
pop
sub
add
jl
aam
fildll
lcall
pop
aad
loope
and
ret
cmp
cmc
dec
ds
and
lock
iret
and
in
or
inc
fidivl
mov
stc
dec
mov
cwtl
push
js
push
out
sub
inc
fmul
jl
outsb
mov
das
nop
inc
cli
roll
loop
mov
enter
sti
xchg
pop
mov
sbb
push
inc
fmuls
mov
add
pop
notb
or
xchg
cs
fwait
jbe
bound
or
lods
lret
int
add
push
fstp
jmp
insb
mov
aas
scas
or
sbb
cmp
mov
negl
test
add
fistl
sub
pushf
xor
int
jecxz
lods
enter
popf
pop
notb
cmp
iret
test
jae
push
xchg
imul
jne
mov
iret
inc
movsb
in
ds
adc
push
std
push
lea
or
cmp
imul
pushf
pop
mov
dec
call
mov
lds
dec
add
mov
add
add
sbb
pop
and
push
test
inc
fnstenv
push
sti
add
sarb
jb
stc
call
jmp
rcrb
mov
pop
jae
jl
cmp
xchg
mov
dec
mov
fstl
mov
xor
inc
xchg
ret
les
dec
mov
mov
imul
jae
cs
mov
mov
fsubr
int
add
lods
mov
jmp
inc
inc
je
loope
jno
fsub
dec
mov
and
mov
out
sbb
push
cwtl
test
cmp
xor
ret
xchg
xor
fisttps
jns
push
popf
xor
add
mov
sub
mov
shrb
jb
lock
repnz
and
jge
adcb
jnp
jmp
ljmp
insb
lea
cmp
or
xchg
pusha
cmp
and
mov
cmp
or
rorb
sub
cltd
pop
dec
mov
xchg
rol
lods
push
dec
pop
ret
fists
sbb
inc
fstl
loope
push
mov
sub
or
daa
push
ljmp
inc
dec
xchg
stc
ret
pop
scas
cmp
jnp
addl
test
pop
stos
push
fwait
adc
std
daa
adc
fildll
int
xor
popa
subl
jl
push
mov
aas
mov
pop
mov
mov
push
stos
jle
xchg
test
test
sti
mov
xchg
inc
int
ret
or
das
dec
push
aam
xor
fchs
adc
sbb
cmp
test
inc
rcrb
jae
aas
pop
mov
push
inc
ss
inc
xor
xor
push
or
sub
xchg
sub
cmp
ret
int3
pop
les
mov
adc
mov
push
out
jmp
in
adc
adc
adc
and
jne
dec
jp
cmp
and
out
cltd
jo
or
pushl
imull
scas
inc
test
add
das
cli
xchg
xchg
mov
fdivs
outsb
out
repz
negl
sub
inc
cltd
push
lds
xchg
adc
lret
ds
adc
ljmp
stos
inc
push
rorl
and
movsl
push
mov
fwait
inc
leave
pop
mov
mov
xor
test
mov
push
movsl
addr16
xchg
arpl
or
add
adc
outsb
aas
mov
push
sti
push
ret
lcall
jmp
scas
test
pop
cli
jno
add
js
test
pop
dec
push
inc
fwait
jg
out
loopne
adc
outsb
inc
fisttpll
mov
cmpsl
mov
dec
xor
ds
gs
add
mov
iret
and
push
sbbl
ret
pop
pusha
shrb
popf
mov
inc
dec
cmp
dec
std
sti
xchg
repnz
outsb
mov
ss
pop
mov
pop
sbb
jo
sub
add
hlt
xchg
cmp
push
jl
cmpsb
add
jno
fists
push
test
pushf
xchg
testb
enter
cwtl
aad
inc
push
outsl
jns
mov
mov
outsb
nop
ja
xchg
or
mov
inc
dec
push
jne
lcall
jg
testb
repz
dec
add
psllq
cli
dec
cmpsl
lcall
repnz
xchg
adc
clc
in
sub
pop
cmpl
ds
out
dec
ficompl
mov
call
leave
arpl
call
call
or
pop
sub
fsubrs
test
inc
mov
lods
mov
les
sub
sbb
ret
imul
jns
outsl
push
adc
mov
outsl
lahf
fstpl
dec
idivb
and
jmp
insb
je
nop
ficompl
mov
enter
xor
test
push
or
jmp
fcompl
mov
subb
lods
mov
inc
test
cmp
inc
cmpl
out
inc
sub
int3
es
mov
mov
cmp
mov
sub
xchg
mov
dec
dec
in
and
fcoms
arpl
aaa
or
nop
leave
mov
iret
mov
mov
xchg
lods
push
test
jge
out
ret
test
mov
fbld
mov
imul
stos
mov
push
outsl
loopne
aam
or
js
test
push
shl
xor
int3
mov
mov
outsb
adc
lods
pop
repz
mov
jo
mov
inc
mov
or
call
movsb
cmp
xorl
cmpsb
mov
push
and
jno
push
sbb
mov
mov
rcll
je
arpl
sub
inc
pop
in
mov
sub
fsubl
lds
jmp
inc
std
dec
adc
mov
movsl
lds
mov
mov
or
push
cwtl
sbb
sbb
insb
mov
ret
repnz
push
jae
lcall
aaa
je
xlat
xor
sub
das
imulb
clc
inc
lret
sub
cltd
inc
xchg
popa
mov
inc
sub
imulb
into
jle
cld
outsl
enter
jp
into
adc
xlat
add
jl
in
icebp
pop
add
jno
inc
test
mov
xchg
inc
push
loopne
jae
ljmp
lea
or
adc
sub
arpl
bnd
int3
add
rcrb
lds
push
xor
cmp
js
xchg
jne,pn
aam
faddp
cmpb
lret
sbb
mov
push
aam
push
fcomps
mov
jle
in
push
cmp
mov
sbb
jno
mov
adc
mov
ss
jno
movb
daa
lds
lcall
sarb
cmpsb
and
addl
cmpsb
fwait
jbe
repz
gs
cmp
aam
pop
xchg
sub
mov
or
cmp
loope
scas
aaa
jb
pop
test
push
pop
cmpsl
leave
cmp
jecxz
inc
xchg
cmpsl
ds
sub
adc
test
mov
ficoms
xor
xlat
push
sub
jmp
repnz
add
cmc
mov
jne
xchg
in
cli
rcrl
shll
cmp
add
mov
sbb
cmpsb
sub
pushf
sub
int
test
sbb
xor
mov
outsb
in
movsl
adc
add
jne
addb
adc
mov
imul
lds
xchg
mov
and
xchg
push
or
stc
adc
pop
xchg
scas
mov
fwait
sbbl
movsl
and
mov
pusha
xchg
jb
dec
pop
adc
es
sar
xor
insl
andb
push
fsin
repnz
jbe
pop
and
ret
mov
popa
and
orl
adc
and
cmp
int
push
mov
push
pushf
and
int
adc
addr16
mov
mov
or
mov
push
and
sti
das
leave
lds
push
jmp
xchg
cli
jmp
daa
stos
lret
adc
ljmp
xlat
mov
dec
imul
and
movsl
sub
mov
ret
cmp
jp
jns
cmp
inc
push
jnp
jge
inc
pop
notb
pop
dec
and
imul
pushf
mov
sbb
test
and
xchg
mov
leave
in
stos
arpl
dec
sub
pop
neg
jg
cltd
call
cmp
inc
pop
pop
or
sub
sub
cmp
pop
inc
dec
aad
or
out
aaa
into
fdivrs
lahf
mull
jge
fistpl
pop
push
add
and
lock
mov
mov
rcrl
sub
shr
es
mov
out
dec
loopne
adc
ljmp
cmp
dec
inc
jle
sbb
ljmp
sbb
gs
js
xor
fisttps
fnstenv
fidivl
or
mov
test
ret
xchg
pop
fadds
mov
mov
adc
xor
jl
movsb
mov
mov
int
push
mov
add
xchg
sub
add
sbb
arpl
fiadds
xor
je
mov
leave
icebp
pop
in
bound
into
lahf
mov
push
in
gs
sbbl
ficoms
dec
scas
das
scas
inc
mov
mov
cmpsb
mov
das
inc
cld
xchg
jb
jecxz
ds
fsubrl
pop
loope
push
jnp
pop
pop
sub
fmull
enter
pop
scas
movsb
pusha
pop
mov
clc
jo
xor
sub
aas
pop
jmp
mov
xor
popf
adc
fwait
inc
inc
xchg
dec
sbb
and
imul
pop
daa
jge
push
pop
icebp
int
stos
inc
fnstcw
jbe
leave
cld
shrb
jne
daa
jmp
adc
cwtl
xchg
xor
js
xor
daa
pop
inc
pop
lahf
stos
xor
mov
xchg
xchg
sti
rolb
sub
pop
test
push
mov
jbe
and
ljmp
es
stos
adc
cld
sub
lock
lcall
les
dec
xchg
sbb
mov
loope
mov
sti
push
js
stos
mov
hlt
xchg
push
das
iret
aas
mov
push
mov
xor
xlat
std
add
sub
gs
jg
add
sbbl
gs
mov
xorb
lods
inc
loop
lea
mov
sbbl
icebp
into
gs
test
outsl
or
scas
cmp
test
pop
add
pop
mulb
jecxz
enter
test
fwait
mov
sbb
fadd
adc
aaa
dec
aam
lret
jnp
or
int
push
pop
icebp
inc
mov
decb
xchg
mov
adc
pop
push
je
xor
loopne
aad
ds
jp
xor
cs
add
inc
xchg
xchg
push
in
ss
xlat
mov
ljmp
mov
or
fsub
jle
adc
subb
fnstsw
adc
xlat
std
jge
pop
lcall
js
adc
jge
push
scas
fs
loopne
fstpt
or
mov
and
inc
push
mov
lods
cli
movsb
or
addb
dec
xchg
add
adcb
out
pop
hlt
and
shl
inc
jnp
jne
cmp
or
iret
push
inc
loopne
lock
add
push
sahf
xor
dec
and
fcomp
mov
mov
push
out
es
jl
adc
push
dec
inc
push
repnz
aad
cs
pop
jmp
scas
add
iret
in
adc
jo
test
cmp
mov
cmpb
ljmp
mov
rorb
xchg
mov
dec
dec
sbb
in
in
mov
cmp
adc
sbb
lret
and
or
xchg
dec
inc
fsubr
push
arpl
push
fdivs
add
and
or
xchg
jl
enter
push
adc
or
ljmp
jo
xchg
adc
pop
pushf
adc
xchg
push
fsubs
js
xor
push
rorb
sub
jbe
int3
aad
push
pushf
jmp
outsb
imul
cltd
push
hlt
adc
shll
push
imul
js
jle
push
enter
mov
cltd
test
xchg
ja
xchg
add
aaa
test
adc
cmpsb
test
or
push
and
adc
movsl
mov
adcb
movsl
in
gs
filds
addl
cwtl
incb
jle
mov
aas
adc
xchg
mov
inc
fstps
fcmovne
leave
mov
push
and
fwait
add
pop
push
xor
jg
dec
dec
test
popf
psrlq
mov
outsl
addl
inc
pop
mov
aas
or
shrb
fistpll
mov
les
std
push
xchg
ret
xchg
stos
imul
adc
mov
mov
inc
data16
mov
cltd
leave
jae
jp
sbb
and
pop
dec
or
hlt
xchg
jnp
inc
fmuls
pop
mov
aaa
rcll
cli
and
cmpb
les
scas
xchg
pop
inc
imul
sub
jg
adc
out
test
lret
js
cli
jns
stos
addr16
call
scas
data16
mov
daa
outsl
in
cmc
mov
push
push
gs
cmp
lret
mov
pop
lods
fstps
aas
pop
xor
or
addr16
or
pop
add
scas
push
cmpsb
in
inc
fs
jne
mov
das
call
and
iret
cld
sbb
push
outsb
xor
xlat
jns
jns
loope
lahf
sbb
xor
aad
movsl
inc
pop
xor
or
shlb
mov
push
mov
outsb
adc
lahf
mov
mov
adc
cs
xchg
jmp
xchg
mov
inc
repnz
sbb
or
add
sub
mov
fistpll
push
add
jle
mov
add
aad
adc
mov
sbb
daa
mov
lahf
in
inc
dec
mov
js
in
mov
ja
sarb
push
fdivrs
out
cmp
jae
loopne
stos
roll
xchg
jp
imul
jnp
sub
cmc
add
xor
mov
orl
jecxz
js
push
or
daa
lods
mov
ret
xor
push
inc
push
or
xor
testb
mov
int
sti
js
xchg
stos
ret
cmc
mov
frstor
mov
jecxz
insl
sti
repnz
icebp
pop
lods
jmp
add
int
push
aas
cltd
andb
lahf
aad
fimuls
mov
cli
xor
insb
add
pop
cmp
in
jl
jle
lret
mov
in
call
das
inc
ja
lods
pop
stos
and
sub
mov
xchg
mov
cs
divl
in
mull
or
pop
dec
inc
xor
and
shll
jnp
std
sahf
push
mov
jp
out
scas
call
add
scas
mov
sbb
iret
push
jp,pn
dec
test
push
jecxz
pusha
hlt
insb
sbb
int
cwtl
and
test
fimuls
jecxz
pop
stc
int
pop
sbb
pop
cmp
xchg
dec
decb
cmp
mov
dec
ficomps
mov
stos
xchg
and
jne
mov
cmp
add
mov
sbb
rclb
ffreep
mov
lret
mov
call
pop
fcmovnbe
sbb
cmpsb
fistps
mov
sbb
lret
insb
rcll
mov
repnz
mov
jle
mov
add
bound
push
mov
imul
mov
push
jae
arpl
aas
loope
lock
inc
add
or
cld
movsl
xor
rcr
out
sbb
pop
scas
add
into
xor
cmc
mov
inc
sbb
nop
dec
movsb
cmp
test
push
xor
jnp
add
fidivrs
aad
gs
mov
inc
pusha
add
adcl
dec
imul
xor
xchg
add
out
xor
xor
mov
inc
pop
xor
push
inc
aas
xchg
movsb
jbe
jns
xchg
sub
mov
add
add
dec
out
adc
fdivrl
push
xor
and
fdivl
inc
pushw
push
and
cmp
test
fidivl
cwtl
pop
ret
cmpsl
add
into
adc
mov
pop
inc
and
xor
sti
lods
leave
movsb
inc
push
and
pusha
mov
cmc
enter
ds
push
sbb
out
push
ss
loopne
cmpsl
popa
xchg
cli
fistpl
ss
sbb
dec
sub
dec
jb
pusha
pop
sbb
cwtl
sub
mov
aad
loope
cmp
out
xchg
popf
rol
repnz
cltd
inc
hlt
inc
pop
pop
xchg
and
call
or
test
imul
jg
mov
xor
xor
prefetch
dec
mov
jle
add
out
ja
in
stos
xchg
jle
and
loop
pop
out
test
dec
std
or
inc
or
jnp
mov
imul
mov
dec
and
out
cmpsl
inc
out
les
sub
xor
mov
fsts
mov
inc
je
out
jecxz
into
ffree
add
mov
add
push
mov
and
loopne
dec
loop
cwtl
das
dec
push
mov
int3
mov
jge
and
rcrl
imul
xchg
cli
js
pmaxub
mov
jp
jp
xor
test
sbb
shrl
xor
std
inc
pusha
ss
pop
scas
stc
mov
ss
shrb
push
hlt
push
and
sbb
xor
xor
cli
push
fstl
jns
ss
addr16
je
fst
cli
and
push
fisttpl
loope
pop
cmp
fwait
sti
push
nop
mov
shll
mov
rcr
out
cmp
lcall
sbb
xor
pop
scas
fisubrs
mulb
adc
inc
jl
mov
xor
pop
jns
std
out
lds
icebp
cmp
and
jg
adc
movb
sbb
into
xor
jnp
mov
mov
sub
mov
loope
leave
pop
imul
data16
mov
xchg
jo
xchg
adc
fsubrl
dec
xchg
lcall
decb
fistps
or
jecxz
divb
inc
add
lock
cmp
and
dec
and
mov
icebp
ljmp
xchg
nop
popa
mov
fcomp
inc
in
push
dec
pop
repz
and
lock
ss
inc
test
rol
sahf
and
sbb
or
jecxz
jmp
push
inc
leave
adc
lcall
aad
test
fcmovnu
call
inc
cmpsl
loop
js
cld
mov
mov
xchg
shl
enter
lea
and
enter
and
clc
xchg
icebp
fcmovnb
fcomps
mov
xor
test
shr
sarl
and
popf
sti
dec
leave
fnstcw
popa
cmc
mov
out
push
dec
out
ficoml
xlat
sbb
scas
mov
and
stc
xchg
jle
adc
mov
imul
rcll
gs
popa
xlat
xlat
mov
or
adc
sbb
lcall
addr16
aaa
pop
mov
jp
cmp
aad
adc
cwtl
mov
into
mov
scas
inc
mov
rorb
add
jae
push
mov
jle
insb
mov
dec
ja
mov
ror
add
test
ss
jo
mov
cmpsl
pop
ret
out
push
and
mov
adc
mov
icebp
dec
xlat
cmp
aam
mov
pop
mov
into
in
fistl
lock
and
inc
add
lds
inc
addb
iret
and
push
out
ja
or
ja
imul
push
mov
jbe
imul
loope
xor
push
dec
leave
out
test
jge
or
cli
ja
or
push
fstps
ss
sbb
add
mov
push
je
xor
jns
aad
dec
sbb
push
mov
jno
sub
adc
iret
lret
insb
cmpsb
in
in
dec
in
out
and
js
inc
pop
rclb
jle
dec
scas
jl
fistpll
shlb
xor
ret
fs
cmp
rcrb
out
pushf
or
xor
pop
out
dec
pop
loop
push
xor
fstl
inc
adc
adc
pop
mov
test
mul
mov
cmp
pop
lahf
sbb
fmul
cmp
and
out
push
std
mov
fsubrl
addr16
leave
mov
inc
test
aad
mov
xchg
loop
and
xchg
push
push
xor
loop
sub
xor
dec
push
les
ljmp
adc
sbb
fldl
inc
or
push
fiaddl
cmp
sub
jbe
pop
insb
sub
cmp
push
sbb
jle
dec
cmp
in
add
or
xchg
or
les
pop
notb
mov
lahf
jecxz
push
out
pop
repnz
pop
cmp
arpl
sbb
pop
scas
stos
xor
push
add
dec
sbb
dec
sub
sbb
and
push
insl
jg
add
sub
jmp
daa
daa
jge
jno
ds
mov
dec
pop
push
and
or
adc
test
push
mov
icebp
out
arpl
xor
sbb
dec
scas
inc
pop
pop
push
sbb
sub
dec
mov
icebp
jecxz
xchg
sub
inc
popa
cmp
pop
loop
inc
lock
addl
dec
and
mov
stc
nop
jl
sub
or
es
cmpl
test
mov
in
inc
lock
dec
cmpsl
sub
test
and
inc
mov
mov
fs
loop
add
jge
dec
pop
lret
in
cmp
jno
mov
push
and
jo
dec
xchg
pop
rcrb
fwait
xor
and
mov
cmpsl
hlt
push
es
daa
or
shll
push
js
or
daa
sub
xor
rorb
insb
mov
lahf
in
int
ljmp
pushf
cli
and
stos
test
adc
xor
pusha
fstpt
add
mov
fistpl
mov
or
imul
jle
rolb
mov
jb
xchg
mov
scas
ret
push
adc
bound
rcll
ss
jbe
xchg
inc
and
xchg
jae
pop
test
out
mulb
and
mov
or
aam
and
cmc
push
mov
fisubrl
orb
icebp
and
mov
push
jmp
and
cmp
lcall
pop
fdivrs
pop
pop
xor
mov
jae
xchg
dec
icebp
lods
mov
lods
loop
xchg
inc
ds
mov
xchg
adc
mov
cmp
cmp
mov
jnp
jae
test
or
cs
xchg
shlb
pop
add
and
fsts
adc
jbe
gs
cld
jle
pop
pop
sbb
cmp
xchg
add
pop
dec
outsb
add
or
stc
mov
lock
push
movsb
mov
jge
stos
scas
xchg
mov
enter
mov
sbb
or
jmp
mov
mov
ret
imul
or
cmp
pop
js
rcl
test
repnz
and
sub
fcoml
mov
fisubl
nop
pop
loop
or
jl
shll
xchg
inc
loope
scas
dec
out
mov
push
adc
gs
aaa
or
push
mov
ss
sbb
movsl
out
psrad
adc
fcmovb
imul
or
in
jno
inc
inc
fs
pop
xchg
imul
jmp
fs
xor
xchg
imul
icebp
rdtsc
enter
dec
nop
and
xor
inc
in
das
and
fwait
push
push
pop
hlt
adcl
call
push
aas
xchg
int
jo
cmp
imul
ret
pop
mov
add
fsubs
or
es
fs
and
push
xchg
or
inc
lcall
and
imul
loop
scas
xchg
mov
sti
and
mov
jns
in
mov
icebp
sub
jmp
stos
inc
jl
mov
rcl
leave
fisttpll
push
popf
adc
mov
push
leave
imul
xchg
movsb
dec
pushf
sti
repnz
mov
mov
call
test
rcrb
mov
push
inc
mov
testl
cltd
mov
mov
fistpll
fs
arpl
cmp
xchg
icebp
nop
pop
and
sti
jecxz
test
mov
pop
popa
cmp
mov
fcmovne
sub
mov
xchg
mov
cltd
sub
lcall
and
or
sub
mov
add
fidivl
lods
xchg
inc
jne
ja
inc
loope
insl
mov
and
icebp
movsl
lea
ret
sbb
int
andb
pop
xchg
loop
push
leave
cltd
inc
add
mov
in
and
xchg
daa
jnp
adc
out
mov
cmp
adc
add
imul
mov
cmc
mov
push
fs
mov
add
mov
gs
out
into
lahf
lock
dec
hlt
and
pop
sbb
rcpps
and
fisubl
lret
pop
repz
rclb
lods
add
and
xchg
loopne
inc
pop
mov
sub
inc
lcall
filds
xor
push
idivb
sbb
jmp
insl
cmpsl
sub
lret
imul
mov
ds
xchg
cmpsl
inc
lds
or
les
xchg
mov
popa
dec
in
sbb
in
inc
xorl
lahf
jae
cltd
es
inc
xlat
out
jmp
sbb
pop
aaa
int
add
and
rorl
iret
pop
bound
jno
add
add
jmp
jbe
test
push
sbb
push
stos
in
xorb
ljmp
push
and
sbb
inc
inc
mov
add
lcall
mov
movsb
jbe,pt
or
shll
loop
lock
xchg
mov
xor
popf
and
and
xorb
das
mov
add
add
and
sahf
fimull
jl
inc
je
outsl
xchg
sbb
test
push
sahf
leave
mov
push
sub
dec
popf
xor
mov
add
mov
sub
jo
inc
mov
mov
xchg
cmp
adc
pop
jno
sbb
jecxz
out
dec
inc
pop
sub
loope
setbe
jmp
mov
lret
das
fldenv
ds
lret
xchg
add
pop
or
cmp
int3
xor
jb
xlat
cmpsl
and
imul
idivb
xchg
cmp
add
mov
enter
in
nop
jecxz
lds
and
mov
movsb
cmp
and
inc
hlt
mov
push
movsl
aas
mov
xor
lds
cmp
push
aam
add
iret
cmc
xchg
sub
mov
adc
mov
inc
mov
xor
aam
lret
xchg
dec
fisubl
dec
hlt
xchg
je
push
pop
js
out
jno
daa
jp,pn
mov
aam
push
jo
mov
movsl
dec
mov
push
cli
add
pushf
jmp
and
xor
cltd
push
fisttpll
xchg
dec
dec
popf
sarb
jl
scas
inc
ficompl
push
das
mov
cmpsl
addr16
and
or
push
jp
mov
sti
xor
sbb
repz
jmp
mov
sbb
adc
pop
test
sti
aas
jmp
or
bnd
mov
mov
test
jne
stos
xor
dec
dec
stos
xor
adc
es
pop
sbb
aam
inc
nop
inc
mov
out
or
mov
fwait
xor
jmp
jl
or
fisubrs
test
xchg
cmpl
push
jmp
mov
fisubrl
dec
or
shrb
mov
clc
daa
outsl
rclb
adc
sub
mov
mov
testl
jb
rcl
cwtl
out
repz
dec
test
ljmp
lds
ja
dec
hlt
xchg
sbb
or
push
mov
cmpsl
aaa
roll
movsb
sbb
pop
fs
xor
or
sbb
sub
iret
push
aam
stos
xchg
inc
inc
pop
cld
fistpll
insb
mov
fistl
mov
push
call
cmp
flds
neg
jo
cwtl
xchg
add
js
shlb
icebp
mov
push
ja
jp
minps
and
cmpsl
rclb
shrb
stos
dec
addr16
or
xorl
mov
mov
out
mov
int
hlt
mov
test
mov
js
sahf
sub
mov
pusha
ja
imul
sub
push
les
or
in
jmp
ret
pop
data16
xchg
gs
adc
inc
pop
xor
mov
dec
aam
fs
sub
gs
xchg
inc
mov
jae
mov
out
mov
movsb
xchg
sahf
push
jg
mov
lods
filds
lock
fdivrl
in
or
dec
movsb
dec
mov
rorl
xchg
push
lods
pop
enter
and
hlt
jge
pop
push
lret
les
dec
shl
push
loop
inc
enter
movsl
sbbl
xor
loope
mov
das
fisttpll
cmp
aas
mov
add
es
sti
cli
inc
ficompl
push
nop
adc
js
popf
dec
jg
adc
mov
pop
mov
cli
mov
movsl
iret
xchg
mov
and
xor
pop
xor
push
mov
mov
mov
mov
pop
jns
movsb
sarb
aam
jg
mov
rol
and
andl
out
jo
dec
adc
mov
shl
inc
testl
sbb
mov
daa
add
test
xor
adc
jle
cmpsb
scas
or
aam
hlt
mov
mov
cmp
imul
mov
ror
add
sarb
jg
and
into
orl
pop
popl
mov
mov
cmc
pop
jbe
arpl
or
fs
cmpsb
sub
ja
jnp
push
inc
stos
push
push
inc
int
xor
scas
xchg
push
fistpl
test
inc
idivl
add
std
movsl
sbb
shlb
fcomi
es
xor
fldenv
shrb
inc
mov
and
inc
es
push
inc
add
decb
decb
and
pop
andnps
stc
arpl
lock
rcll
ret
repz
dec
in
inc
cltd
stos
jbe
imul
xchg
sbbb
mov
jo
jg
or
mov
add
nop
shlb
and
xchg
das
and
xor
push
pop
sub
dec
jbe
dec
test
lock
dec
push
int3
add
aaa
shrl
xchg
cmc
mov
int
das
clc
out
ljmp
lods
stc
ret
outsl
movsl
pop
cwtl
inc
inc
divb
add
dec
sbb
inc
jns
push
sbb
ret
aas
pop
and
repnz
mov
daa
mov
xchg
xor
mov
push
leave
push
push
mov
push
mov
jmp
mov
fbstp
xlat
pop
xor
push
fldt
iret
lea
pushf
xor
jp
inc
mov
add
add
or
cmp
shlb
pop
or
dec
lret
popa
jl
stos
inc
xchg
sbb
adc
out
lea
cwtl
orb
and
mov
mov
xor
ja
lds
lock
cmp
imul
sbb
bsf
mov
stos
mov
mov
jo
dec
pop
inc
bound
ss
cld
jae
sbb
mov
pop
push
sbb
ja
add
xchg
inc
stc
xorb
mov
xchg
sub
in
orl
cltd
sub
enter
cld
pushf
lcall
lds
lods
adc
int3
jg
and
xchg
cwtl
int
add
adc
mov
push
mov
sbb
ret
jne
push
inc
into
ljmp
cld
cmp
jb
and
adcb
mov
sbbl
xchg
sub
icebp
pop
cs
fsubp
mov
nop
lods
pop
push
mov
aas
mov
adc
jmp
cwtl
stos
outsb
dec
inc
bnd
rorl
aaa
daa
mov
es
ss
je
ja
add
add
sub
fidivl
mov
movsb
pop
cltd
orb
dec
inc
jecxz
pushl
fsubl
mov
scas
or
imul
popa
in
xchg
mov
ret
outsl
mov
mov
xor
leave
int
mov
add
mov
test
push
fsubrs
jle
sub
pop
test
pop
rcl
xor
fstpl
mov
xor
out
push
imul
push
jle
ret
pop
std
xor
inc
and
push
gs
repnz
inc
scas
jne
push
fmul
test
mov
fcomps
pop
int3
and
sub
dec
decb
mov
adc
sub
fs
repnz
mov
jg
inc
sub
push
cmc
pop
sarl
xlat
idivb
insb
inc
cmp
loope
jle
cmp
fisubrl
sub
cli
ljmp
jno
mov
rcrl
mov
scas
rcl
and
cmc
sub
scas
decb
movsb
inc
loopne
test
scas
inc
sahf
lods
jno
jbe
cld
adc
jno
sub
xchg
mov
repnz
sbb
or
idivb
fbstp
xchg
jno
clc
or
cmp
mov
es
insb
xchg
mov
and
int
lock
testb
sbb
dec
mov
mov
pushf
adc
push
jno
out
sub
loopne
mov
call
sbb
bound
cmp
push
mov
push
pop
mov
fdivl
cmpsl
stos
lret
mov
popa
jp
out
addl
insb
fsubrp
clc
cld
mov
add
fnsave
push
and
mov
out
jle
mov
fstl
or
pop
and
ja
sbb
adc
pop
bound
scas
mov
data16
out
xor
sub
push
movsb
xchg
push
mov
insl
sbb
rol
push
add
popa
test
pop
popf
int
icebp
jmp
add
mov
insl
pop
add
cmp
data16
push
xor
mov
icebp
ja
movsl
int
mov
cmpsl
sub
loop
fwait
outsb
dec
fistpl
stc
pop
push
imul
add
mov
sbb
insb
sahf
or
jae
sub
mov
aaa
xchg
lds
fdivrl
pop
jg
push
mov
cmpsl
int
add
mov
push
mov
mov
shr
pop
dec
and
dec
in
adc
jg
cmp
xlat
popf
lods
shrl
mulb
pop
imul
aas
push
mov
bnd
adc
mov
inc
ret
ret
mov
lahf
mov
sub
push
das
addr16
rcrb
sub
das
rol
insb
repz
mov
and
push
loope
aam
inc
repz
add
fidivl
and
dec
loope
mov
and
stos
mov
insb
fnsave
sbb
sahf
test
aaa
add
out
sti
popa
inc
cld
inc
and
daa
xchg
adc
jp
dec
nop
pop
hlt
mov
cltd
daa
lcall
dec
mov
int3
add
dec
testb
or
iret
fcmovne
lahf
pop
ja
mov
pop
push
mov
fidivrs
adc
pop
adc
verr
inc
pop
stc
push
inc
adc
cmp
jl
in
dec
and
dec
push
jle
scas
les
lret
mov
aad
adc
aaa
inc
push
sbb
inc
or
push
nop
and
fcoms
sahf
mov
lds
and
and
cli
movl
fldl
sbb
divb
scas
pop
outsl
enter
fdivrs
inc
sbb
js
and
and
outsb
sbb
std
popa
jg
mov
mov
test
add
fcomip
cli
jmp
and
inc
ret
adc
andb
mov
dec
xor
fldenv
cmpsb
fnstenv
add
mov
lahf
hlt
aad
out
pop
fwait
test
pop
add
mov
push
pop
mov
xor
and
sub
loopne
xchg
data16
xor
fnstsw
jbe
subl
ret
fisttpll
pop
lds
cs
pop
jmp
dec
arpl
mov
push
hlt
cmpsb
mov
inc
clc
jae
mov
push
test
mov
mov
push
add
andb
lcall
pop
sbb
sti
es
shrb
repz
insl
fcoml
xchg
mov
in
fsubrp
adc
aas
cli
out
push
cmp
push
dec
pop
dec
xchg
mov
mov
push
ja
dec
or
push
mov
jne
xchg
inc
sbb
sbb
push
inc
sbb
cmp
outsb
test
stc
movsl
andb
add
aaa
mov
scas
and
pop
pop
jecxz
cld
das
xchg
sbbb
mov
sub
inc
pop
jnp
push
divl
fstpl
mov
pop
push
inc
daa
inc
js
jno
stos
dec
push
arpl
shl
pop
push
xchg
lods
xor
insb
inc
gs
popf
pop
xor
sub
xchg
pop
enter
push
add
push
loope
js
inc
repz
and
shr
fiaddl
inc
fmull
mov
rclb
mov
in
add
push
mov
flds
pop
ljmp
inc
out
lret
xchg
fisttps
test
add
fmuls
movsl
sub
inc
sub
push
mov
pcmpgtd
push
lcall
je
and
mov
mov
loope
jo
dec
sbb
jb
sbb
push
jnp
in
das
lds
leave
sbbb
gs
xchg
inc
and
sbb
data16
pop
repnz
jne
les
push
inc
insb
aam
cmp
pushf
pusha
inc
xor
jb
pop
hlt
je
push
dec
int
jnp
out
xor
rcr
pop
bound
xchg
rcll
jl
fildll
xor
xchg
lcall
cmp
fadds
add
iret
xor
int3
xor
mov
in
sbb
loope
jp
mov
cmp
ja
sahf
call
imul
cmp
scas
push
dec
sbb
sti
jbe
pushf
in
popa
dec
ret
sarl
mov
mov
cs
pop
movsb
pop
movsl
dec
xchg
add
dec
sahf
xor
sahf
cmp
jle
sbb
lock
mov
ja
mov
adc
xor
repnz
or
adc
lret
movsb
mov
and
fwait
pop
lret
mov
cmp
xchg
push
test
pop
shlb
movsl
ljmp
dec
xorb
ret
jns
pop
stos
aad
ret
jb
lods
add
lret
xchg
and
ljmp
out
jns
jp
cmp
cmpb
or
jecxz
aas
out
repz
popf
nop
adc
xchg
jl
ficompl
hlt
mov
lret
lcall
mov
loopne
cmp
and
popl
inc
fstpt
in
add
fcmovbe
bound
cmp
leave
sub
lods
sub
push
adc
dec
fwait
add
xchg
pop
xor
icebp
cmp
push
cmp
pmulhuw
scas
cmp
cmpsb
sub
pop
jno
fadds
sbb
mov
mov
xchg
xchg
dec
rol
jno
xor
popa
sbb
cltd
imul
mov
loopne
xor
mov
incl
and
dec
sub
pop
cmp
xor
fcompl
subl
push
dec
rclb
ficomps
mov
jecxz
mov
or
add
mov
addr16
int
mov
lds
cmpsb
or
bound
cltd
mov
jae
scas
insb
adc
sub
out
xlat
sahf
xor
faddl
adc
inc
pop
and
pushf
and
scas
js
push
lret
xor
cmp
sbb
dec
andnps
xchg
pop
dec
cltd
jmp
mov
pop
leave
pop
push
add
push
inc
pop
fildll
push
call
push
int
or
icebp
nop
mov
adcl
xor
mov
pop
cmp
dec
dec
dec
jbe
sbb
movsb
lahf
les
jl
movsb
lods
sbb
jecxz
ja
inc
out
sub
or
xchg
sub
sti
movsb
add
jecxz
movb
inc
xor
ja
mov
sarl
mov
sub
pop
mov
jle
insb
aaa
pop
fisubl
xchg
insl
insl
sbbb
out
test
or
mov
jl
rorb
and
sahf
jmp
leave
das
cmpl
nop
bound
inc
ret
js
into
add
pop
push
mov
in
pop
stos
lret
stos
adc
cmpsl
jmp
arpl
mov
aad
out
stc
out
iret
mov
jg
test
sahf
push
cmpsb
jmp
in
sbb
lea
xor
jne
fcomi
iret
mov
xchg
cmp
dec
cwtl
test
sub
aad
mov
outsl
mov
fst
insb
push
mov
push
mov
dec
mov
pop
insl
aad
nop
addr16
in
sbb
sbb
negb
mov
fisubl
mov
shrl
push
test
xchg
jl
fisttpll
cld
jp
cltd
xor
cmp
imul
lret
popa
shlb
cmp
loopne
in
test
pop
fbstp
out
lods
and
inc
adc
js
scas
fldl
pop
jg
add
xchg
repnz
xchg
pop
sub
leave
adc
rcrb
test
decl
in
stc
xchg
lret
dec
fldenv
movsl
sub
xor
je
daa
push
and
test
das
mov
add
std
js
cmpsl
fsts
jnp
mov
push
and
adc
jno
dec
arpl
mov
fs
mov
stos
das
cmp
inc
fmulp
xchg
cld
xchg
bound
in
jo
sahf
pop
sub
out
cld
adc
ds
sarl
lds
ljmp
xchg
mov
mov
sbb
add
out
outsl
cmpsb
xor
test
xabort
and
mov
negl
out
pop
adcb
outsb
sbb
fcomps
movsl
mov
addl
adc
ja
cmc
dec
pop
dec
jle
dec
jecxz
test
ret
imul
sbb
lods
inc
sti
hlt
mov
sub
dec
push
adc
mov
ss
popf
xchg
jp
push
icebp
popf
popa
jne
cwtl
iret
mov
clc
or
adc
orl
mov
or
dec
sub
mov
idivl
mov
add
ljmp
sbb
icebp
outsl
andl
pop
repnz
add
mov
fwait
pop
mov
xchg
out
mov
push
add
out
cmpsl
pop
jne
add
clc
xchg
and
cli
cld
mov
mov
mov
outsl
cltd
data16
mov
mov
jmp
scas
stc
outsl
jnp
sarb
orl
fcomps
repnz
in
stos
pop
adc
enter
stos
jmp
cmpsb
mov
je
std
adc
scas
push
jno
arpl
jge
lods
inc
pop
shl
or
stc
dec
in
xor
lods
inc
xchg
mov
int3
loopne
add
xor
jo
push
or
sub
sarb
fidivs
jle
arpl
stos
jle
addr16
pop
rcll
inc
loope
pop
push
push
fiadds
mov
dec
add
notb
xor
xor
jl
and
test
jg
xchg
mov
mov
ss
ja
cmp
sub
jge
daa
inc
jae
xor
adc
or
stc
lods
push
cld
scas
mov
mull
xor
jnp
out
addb
lea
stc
sbb
lcall
dec
ds
add
lods
ds
xor
icebp
ljmp
dec
mov
and
ret
xor
ljmp
repnz
shlb
cwtl
sahf
in
mov
mov
fisubrs
xchg
mov
push
cwtl
movsb
fldenv
jmp
es
jbe
leave
imul
inc
jne
push
call
lcall
cmpsb
in
pop
fstl
xchg
jp
clc
popa
adc
inc
scas
bound
xchg
or
inc
mov
push
inc
in
pop
pop
jae
push
insl
iret
pop
dec
mov
cmp
aad
pop
pop
mov
xchg
mov
mov
rol
xlat
inc
mov
test
jmp
gs
in
sub
cmpsl
xchg
lcall
jle
in
pop
inc
mov
loop
mov
and
pop
insb
jecxz
mov
inc
popa
inc
push
int3
ret
dec
mov
shlb
pop
push
mov
add
inc
xchg
ja
sahf
sub
mov
lea
xchg
mov
push
fnsave
push
push
mov
mov
mov
jp
stos
call
adc
std
push
inc
xor
dec
loopne
adc
addr16
int
add
lods
dec
xchg
lock
pusha
stos
in
adc
inc
outsl
inc
fs
repnz
xor
das
cmp
rclb
or
shlb
or
mov
arpl
and
xchg
add
nop
mov
pop
call
add
pop
sahf
mov
pusha
push
push
adc
mov
decl
jl
rcl
fdivrl
arpl
mov
xlat
pop
dec
or
rcl
test
repnz
mov
xchg
jnp
jp
lods
mov
scas
xor
push
hlt
mov
ret
js
push
lcall
mov
adc
or
mov
fwait
jecxz
fwait
popa
stos
lock
shr
mov
mov
lret
jp
inc
mov
stos
dec
push
ret
inc
sbb
xchg
pop
push
jp
mov
xchg
leave
addr16
adc
jg
inc
push
out
sub
cmc
xor
cli
out
sarl
sub
inc
popa
adc
and
andb
jge
add
mov
xchg
jne
mov
adc
pop
cmp
lahf
pop
jge
push
jo
sub
stc
aad
xchg
lods
jo
js
rclb
ja
sub
and
loop,pt
popf
push
xor
jno
or
pusha
incl
sub
dec
mov
popa
rcrl
inc
test
push
aam
mov
pop
lcall
cmp
mov
add
arpl
mov
imul
icebp
pop
aaa
rorl
test
jae
mov
inc
xchg
das
cmp
popa
xchg
shrl
mov
mov
push
sbb
fwait
bound
push
sub
int
cwtl
sub
add
pop
lcall
mov
xchg
mov
sbb
or
pushf
inc
cmp
jne
jecxz
xor
cmc
jne
jmp
xchg
pop
inc
dec
pop
xchg
mov
push
ljmp
jb
mov
fsts
fnstcw
scas
fst
pop
xor
mov
popa
les
je
adc
mov
push
in
push
ret
xorl
xchg
mov
mov
add
mov
lea
movsl
xchg
mov
xor
stc
cmp
jecxz
cmp
add
push
or
pop
insl
lods
jge
mov
leave
scas
cmp
js
mov
mov
daa
clc
dec
add
cmpl
mov
add
and
insb
lock
xorb
ret
mov
ror
inc
shlb
cmp
lret
jecxz
and
scas
xchg
jno
out
icebp
enter
aaa
repnz
dec
mov
and
push
pop
sub
subb
fsubs
push
dec
mov
pop
inc
insl
testb
lret
mov
popf
jecxz
mov
cmpsl
nop
mov
jbe
push
lcall
pop
add
fldl
jmp
cmc
dec
lods
mov
sbb
xor
add
mov
lret
pop
fcomps
dec
mov
mov
xchg
jae
mov
cmp
xor
mov
rol
in
push
pop
xlat
sub
test
cltd
jae
sub
pop
shlb
cmpsl
xlat
into
cmp
ret
cmp
push
imul
lods
stos
mov
leave
inc
fsubl
leave
out
dec
xor
jge
stos
scas
movsl
push
lret
mov
scas
dec
mov
fimull
addr16
sub
stos
jl
aam
lret
dec
cmc
loopne
mov
or
cmp
cmpsb
xchg
ja
lret
jo
xchg
xchg
arpl
cs
xlat
fs
mov
inc
xchg
inc
fmul
iret
std
sub
mov
daa
leave
es
nop
jmp
dec
adc
mov
stc
nop
pop
xorb
sbb
movsl
dec
popf
add
iret
test
lret
adc
push
cltd
mov
mov
sub
lods
daa
cmpsl
out
je
xor
jmp
push
dec
pop
orb
into
jns
inc
out
mov
scas
jno
clc
and
push
jns
loopne
mov
sub
add
fcmovnb
test
inc
cs
cwtl
lret
jecxz
jecxz
push
dec
push
std
mov
clc
mov
mov
jno
pop
bound
lret
ret
ljmp
sub
mov
ds
ret
in
push
dec
dec
adc
dec
test
sub
sbb
movsb
mov
inc
cld
fbstp
insb
icebp
arpl
push
cmp
mov
scas
rcll
push
cmp
xor
std
sbb
dec
adc
dec
fs
mov
xchg
out
incb
cmp
mov
push
cmp
push
push
psrlq
sbb
das
mov
popf
stc
addr16
pop
sahf
popf
sbbl
mov
lds
push
call
mov
in
stos
cltd
xchg
out
add
add
jmp
aaa
inc
push
leave
and
xor
jbe
sub
xor
dec
dec
cmpsb
push
stc
or
test
stos
lahf
dec
jmp
jmp
and
inc
inc
mov
and
in
dec
push
lds
add
or
sub
jmp
or
push
mov
les
fadds
mov
rol
imul
push
xchg
inc
jmp
das
mov
dec
pop
jp
pop
sub
dec
cmp
inc
or
test
mulb
or
aaa
mov
dec
mov
inc
push
pop
jmp
xor
push
stos
cmp
adc
inc
dec
imul
pop
adc
push
jmp
xor
imul
scas
push
pop
xchg
das
loope
scas
xchg
icebp
popf
scas
lods
or
sub
or
fiadds
rcrb
push
dec
das
xchg
jne
subb
jns
push
jp
lahf
jmp
cmc
mov
addr16
stos
inc
sbb
dec
popa
xor
push
pop
xchg
push
sub
int3
pushf
or
adcb
mov
movsl
in
stos
push
icebp
xchg
cmp
ja
pop
sub
imul
add
aad
ficomps
push
mov
arpl
testb
pop
icebp
push
aas
inc
ds
sbb
mov
jle
stc
mov
jge
repnz
cltd
roll
xchg
xchg
pop
mov
popa
in
sbb
js
jno
sub
ss
repnz
sti
repnz
les
dec
lods
movsl
and
and
adc
movsb
in
mov
xchg
lds
outsb
xchg
ret
pop
in
hlt
mov
push
bound
test
test
cwtl
aas
add
arpl
lret
push
and
or
mov
and
mov
shrl
pop
imul
fldl
jne
clc
push
lahf
fldt
sbb
fists
push
fxch
stos
inc
lods
sub
test
add
cmp
inc
push
lea
lcall
jle
mov
cmp
es
mov
and
mov
jns
sub
sbb
std
xchg
cmp
jl
std
frstor
sub
ret
push
mov
inc
js
cmp
inc
stc
dec
pop
scas
cmc
int
pop
into
add
inc
pop
imul
jns
mov
lock
mov
cmpsl
pop
rcr
mov
popf
push
scas
mov
ss
inc
inc
jnp
xor
cltd
mov
insl
scas
jmp
mov
jp
sub
mov
js
xor
cmp
adcl
sbb
loop
lea
imul
popf
pop
test
fdivrs
pop
mov
and
ret
ficompl
xchg
adc
lea
jp
outsl
lods
imul
xchg
push
fnsave
es
sbb
aas
imul
mov
push
rcl
lret
mov
loope
stos
shlb
pushw
pusha
pusha
pop
out
ret
fwait
jmp
mov
imull
mov
test
inc
fldl
call
xlat
mov
xchg
inc
fadd
inc
lea
xchg
jo
lret
mov
mov
sub
inc
pop
ret
mov
jb
jge
push
xlat
mov
stos
pop
dec
aad
cld
push
outsl
loopne
jge
clc
fsub
sahf
or
rolb
dec
out
into
push
jae
mov
jle
inc
hlt
popf
xor
test
xor
stos
pop
cmc
fcompl
dec
push
iret
jb
ret
mov
jge
mov
imul
mov
inc
idivb
jb
xchg
pop
call
pop
lahf
int
or
andb
cmp
idiv
push
adc
jg
addr16
shll
xor
loopne
rclb
fbstp
inc
imul
pop
jne
jnp
push
scas
pop
jecxz
outsb
mov
rcl
or
movsb
ljmp
es
inc
lods
inc
jne
or
xchg
iret
sub
add
pop
adc
repnz
aas
mov
in
lods
inc
and
aad
pop
scas
xor
lahf
cmc
inc
das
pop
pop
cmc
inc
nop
xor
add
jbe
aad
sbb
mov
mov
fs
addl
cld
cmp
shrl
pop
pop
aam
and
fsubrl
jb
push
mov
insb
rorb
cli
mov
and
mov
xchg
shll
les
jns
lock
imul
adc
vcvtdq2ps
shll
mov
fldl
repnz
or
cld
out
shrw
icebp
adc
leave
fsubrp
jne
data16
inc
xor
lret
orb
ljmp
jo
sbb
cmp
loop
or
lods
pop
cmp
mov
jo
xor
mov
xor
push
notb
nop
cld
lcall
in
fs
push
jno
add
pop
lock
and
mov
inc
add
ss
mov
push
mov
or
stos
outsl
aad
loope
addr16
loop
jl
dec
sub
add
les
fs
cmovns
jbe
mov
dec
sbb
jge
sub
ret
sub
adc
mov
sub
xor
shlb
dec
cmpsb
push
xchg
and
sub
fistpll
insl
xchg
mov
icebp
push
test
xchg
dec
sub
ret
sub
test
push
sbbl
pushf
ret
lcall
pop
outsl
pushl
mov
add
sub
sahf
pop
sub
dec
loopne
sbb
xor
pop
out
insl
inc
ss
loop
mov
aad
mov
cwtl
xor
xchg
sbb
stos
cmp
mov
lret
mov
dec
mov
aas
sbb
ret
nop
aad
icebp
xchg
push
aam
jecxz
rorl
inc
sahf
push
and
test
xchg
ret
in
popa
dec
mov
sbb
jo
xor
adc
lcall
xlat
stos
mov
loopne
in
out
sub
inc
mov
sbb
or
mov
xor
inc
inc
stos
call
icebp
add
sbb
dec
pushf
xor
inc
insb
loope
ficoms
sbb
outsl
into
movsl
cld
cs
addb
jns
lds
out
outsl
nop
dec
sbb
leave
jns
cli
test
sub
pop
push
bound
clc
pusha
imull
xor
xchg
vlddqu
shr
insb
sbb
inc
lahf
imul
rcl
pop
inc
add
pop
test
jge
lock
xchg
adc
push
and
xor
mov
aam
mov
popa
out
pop
repnz
adc
sarl
daa
mov
xchg
stos
int
xor
scas
and
xor
pop
mov
jg
fldcw
fnsave
mov
pop
xchg
adcb
loop
dec
pop
sub
mov
inc
dec
pop
fisubrl
imul
imull
les
cltd
into
data16
pop
pop
sahf
movsb
cmp
xchg
add
fcompl
add
mov
adc
call
push
mov
fcmovnu
lea
cld
pop
xchg
ret
mov
pushf
push
push
shlb
outsb
add
je
fisubl
jae
mov
addr16
movsl
push
out
scas
dec
dec
test
mov
inc
jmp
sub
mov
pop
mov
dec
mov
jecxz
ret
pop
cltd
mov
inc
mov
sub
adc
push
pop
mov
lock
xchg
adc
lods
loope
mov
aas
pusha
xor
aad
mov
or
stos
mulb
sbb
sub
imul
pusha
jo
cmpsb
outsl
or
mov
xlat
xchg
bound
adc
cmp
xchg
mov
mov
enter
adc
mov
insb
sbb
dec
lret
je
cmp
in
out
jge
negl
popf
je
rcrb
test
adc
out
scas
dec
notl
jnp
je
add
es
dec
sbb
into
mov
pushf
dec
out
pop
lock
out
subl
loope
negl
negb
cmp
cmp
movsl
out
in
add
test
hlt
adc
jle
cltd
xchg
mov
stc
xchg
outsb
jle
sbb
cmp
ret
cmp
jp
outsl
cmp
movl
lods
jg
lcall
sub
mov
in
sahf
or
loop
mov
lret
in
lea
xchg
xor
or
aaa
ret
push
aad
icebp
sbb
fnstenv
out
not
pop
add
jno
daa
dec
sbb
hlt
out
sahf
or
mov
in
enter
imul
jae
fmull
adc
jns
fsubl
scas
push
pop
in
rorl
out
sti
push
mov
je
std
inc
shll
xchg
pop
jl
mov
mov
ljmp
mov
sub
sub
xor
fnsave
cmpsl
dec
pop
mov
and
sub
dec
repz
mov
movsb
cmp
inc
push
lret
pop
push
xor
andb
and
divb
jno
adc
adc
inc
xor
mov
sub
dec
cltd
movsl
push
jmp
out
outsb
into
aaa
cmp
cmp
out
lret
sbb
in
pop
adc
imul
mov
test
ljmp
mov
dec
lds
sbb
inc
adc
rcl
jno
mov
mov
movsl
cld
inc
add
jp
dec
aad
cwtl
jl
out
xchg
push
add
inc
repz
pop
fisubrs
xor
call
call
pop
push
jl
enter
lret
outsb
or
dec
popa
and
xchg
loope
int3
add
xchg
jnp
and
or
lods
xchg
dec
or
lahf
pop
add
stc
je
sbb
iret
mov
stos
imul
adcl
inc
sbb
addr16
rclb
lret
icebp
insb
ds
xchg
pop
mov
add
iret
cld
sub
mov
lahf
sbb
mov
ret
repz
or
sahf
imul
mov
shl
lock
jo
push
xchg
mov
enter
dec
sbb
mov
xor
xchg
adc
jns
push
xchg
outsb
mov
jmp
and
adc
imul
sub
inc
pop
out
aad
or
outsb
scas
loope
push
dec
or
sub
jmp
cs
pop
pop
cmp
jle
mov
push
or
push
out
sbb
adc
jb
ss
test
mov
stos
test
cmp
es
aad
add
push
fs
sub
cld
mov
jb
pop
daa
mov
out
inc
push
mov
xor
fwait
std
insl
imulb
push
test
jno
fsubs
push
adc
je
jg
rcrl
and
inc
and
stos
fidivrl
xor
mov
push
jns
jp
ja
test
adc
mov
pop
lahf
sub
lret
cld
xchg
push
xchg
in
es
fwait
push
sbb
jmp
mov
push
jnp
jb
xchg
scas
xor
loopne
dec
cmp
cmc
dec
in
jns
pop
and
testb
adc
das
adc
fdiv
sbbb
std
rcrl
std
pop
mov
icebp
xchg
daa
fwait
negl
inc
repnz
adcb
inc
mov
popa
pop
scas
xchg
xchg
das
adc
mov
cmp
sbb
inc
lcall
test
movsb
repnz
andb
sub
int3
mov
dec
sub
loop
fbstp
push
rolb
std
pop
hlt
data16
lods
icebp
fidivl
into
pop
out
sub
fwait
add
jbe
mull
mov
inc
shll
jbe
out
or
add
in
push
mov
in
and
jae
cli
xchg
aad
int3
and
pop
movhlps
movsb
je
pop
adc
push
pop
stos
jne
fstpt
jno
or
bound
or
dec
aam
xchg
mov
imul
data16
jmp
lods
lcall
add
mov
sub
test
xor
jmp
ficomps
call
sub
jl
sub
cmp
test
inc
jp
adc
pop
jnp
jnp
sti
and
sbb
pop
pop
cmp
aas
push
sub
dec
xrelease
stos
xchg
xchg
pslld
sub
mov
jno
out
push
ds
and
xor
pop
push
xchg
ret
rcr
cmc
mov
mov
inc
je
lods
or
inc
cmp
inc
flds
pop
push
mov
fnstenv
rolb
and
testl
popa
jo
xor
push
in
cld
mov
nop
xor
idiv
sbb
mov
stc
ljmp
sbb
call
lahf
sub
ret
pop
jne
imul
rclb
dec
data16
sub
pop
es
add
dec
ret
and
or
addr16
jbe
inc
sbbb
iret
sbb
shl
dec
shll
imul
inc
cmpsb
push
inc
dec
scas
or
cmpsb
jg
xchg
sbb
jmp
rol
imull
push
stos
inc
filds
lods
sarb
cmc
push
subl
add
imul
sbb
shl
jg
dec
cltd
add
outsl
push
sar
pop
insb
repz
adc
gs
rep
test
add
push
push
sub
add
ja
pushw
inc
fnstenv
xor
orb
or
sbb
fisubs
sub
fcoms
add
jae
sub
bound
inc
mov
cmp
mov
movsl
dec
adc
inc
je
lods
inc
sub
fmulp
xchg
subl
mov
jle
ficoml
push
rclb
testb
mov
push
je
adc
push
cmp
jns
rcrb
cmpsl
jmp
test
jno
sbb
inc
push
fisttpll
cltd
cld
push
mov
mov
xchg
push
jb
test
push
push
sub
mov
arpl
jns
shlb
xchg
or
jnp
fidivs
fsubrs
pop
lock
ret
add
push
repz
iret
mov
lret
mov
xchg
aad
mov
lock
fnstcw
fisubs
xchg
test
mov
ss
imul
sbb
pop
cltd
xor
dec
mov
popf
add
dec
jle
sbbb
mov
gs
mov
mov
lret
movsl
aas
push
sub
jns
adc
fsubr
inc
xchg
and
ret
xor
loope
inc
push
lds
out
out
inc
fwait
outsl
cmp
mov
dec
push
out
jge
inc
data16
jbe
jne
das
addr16
pop
mov
in
jo
cmp
call
xor
xor
movsb
inc
mov
sbb
sbb
xchg
dec
pop
xchg
cmp
dec
jp
dec
sub
jp
add
stos
pop
ja
int
xchg
hlt
fiaddl
insl
jne
dec
cmpsb
bnd
aas
mov
cld
xlat
in
pop
aad
sub
lods
jno
adcl
and
add
mov
mov
mov
mov
mov
push
jbe
arpl
mov
dec
scas
mov
pusha
in
out
cmp
fisttps
mov
xchg
adc
ret
mov
push
fcomps
lods
fcomip
aam
push
ljmp
lock
lret
jo
lcall
fimull
push
repz
adc
lds
mov
jo
cld
pop
cmpsl
mov
mov
lock
sahf
ret
clc
pop
push
out
sbb
jnp
pusha
lds
push
test
data16
inc
ss
shl
cmp
stos
repnz
pop
add
ljmp
push
sub
sub
pushf
in
or
mov
mov
jo
call
stos
inc
ss
repz
adc
js
repnz
dec
jae
cmc
add
dec
add
pop
jp
pop
fistpll
add
push
push
fstp
std
addr16
mov
adc
jb
add
push
xor
lock
aaa
mov
push
jmp
cmovbe
adc
cmp
jmp
lcall
in
dec
mov
mov
or
pushf
xor
jecxz
pop
outsb
js
sahf
or
sub
cltd
leave
movsl
sbb
lods
inc
gs
sub
in
dec
mov
loope
jecxz
cwtl
mov
add
mov
fsts
leave
add
adc
sbb
adc
dec
pop
sub
fdivl
scas
inc
fstpl
enter
inc
push
fs
adc
arpl
jecxz
sbb
mov
es
lea
xor
xor
mov
dec
pop
mov
xlat
mov
jno
cmp
cmp
imul
popf
shlb
scas
data16
jbe
arpl
adc
cmp
in
ret
push
sti
leave
test
sbb
and
mov
push
mov
mov
lds
jb
insb
sbb
repz
in
into
xor
stc
or
push
js
in
into
xchg
mov
mov
mov
in
clc
mov
es
push
fbld
pop
and
shll
mov
fstl
and
cmp
jmp
mov
add
add
mov
add
scas
cmp
iret
lret
add
clc
jb
jno
mov
jb
arpl
lahf
push
cmp
or
pop
mov
pop
mov
insb
cmp
mov
fistpll
fdivrl
add
mov
fisttpl
sti
push
fdivs
inc
jae
cmpl
lods
in
ss
fisubrl
pushf
cmp
xchg
iret
andb
sub
add
dec
pop
jo
das
push
mov
movsb
push
and
mov
xor
ss
xor
or
mov
imulb
or
mov
insl
int3
lret
enter
inc
test
dec
mov
pop
and
fdivr
fbld
xchg
xchg
add
jae
mov
mov
and
xor
je
mov
cmp
out
push
lds
std
fnsave
push
sbb
insb
add
cmc
jl
cmp
movsb
push
mov
sub
stos
in
jno
fwait
les
cmpl
push
in
addr16
mov
add
dec
mov
fxch
out
data16
cmp
pop
pop
ret
cld
shrl
dec
or
lret
mov
pop
stos
ret
pop
int3
push
dec
das
xor
lret
sbb
dec
inc
loop
loope
dec
cmp
xor
cs
inc
push
scas
sti
int3
pop
fs
add
xor
test
shrb
jbe
add
inc
fisubl
dec
dec
add
test
test
es
push
push
call
jns
outsl
sarl
mov
dec
and
dec
dec
lret
outsl
rolb
rorb
aas
orb
cmpsb
inc
and
mov
psrlq
sub
xor
addl
jg
shl
pop
mov
cmp
stc
or
pop
cli
push
int3
ss
loope
ljmp
repnz
out
or
xor
mov
dec
fstps
mov
pop
sbb
dec
xchg
sbb
adc
or
sbb
sahf
cmp
push
jmp
jo
or
mov
incl
shll
push
pop
icebp
add
das
inc
and
fnsave
jnp
mov
fstl
cli
pop
dec
mov
jecxz
push
push
inc
call
push
xchg
dec
int
inc
xor
clc
in
in
test
or
pop
pop
mov
or
testl
jle
add
ror
jp
or
cmpl
into
call
dec
shrb
pop
inc
cmpsb
add
jecxz
inc
or
movsb
mov
lea
xchg
xchg
sub
mov
mov
int
out
fcomp
xchg
mov
or
xchg
out
xor
test
push
out
stc
lret
jb
push
or
jnp
int3
jg
movsl
je
add
mov
enter
fmul
mov
xchg
outsl
arpl
sbb
dec
mov
cs
jnp
mov
fsts
jo
push
xorb
out
xchg
sahf
in
ret
mov
jnp
push
jbe
adc
aad
xchg
jg
mov
or
fisttpl
sbb
ja
adcl
adc
xor
lods
fstpl
sbb
xchg
xadd
testl
daa
in
loopne
xor
inc
loope
or
dec
lock
or
mov
inc
push
mov
fsubrs
aaa
mov
or
ret
mov
mov
movaps
mov
sbb
xor
dec
ret
lahf
inc
aas
dec
mov
shlb
dec
and
enter
push
lahf
addr16
jno
rcrl
jns
or
or
int
ret
adc
addb
dec
movsl
out
sub
xchg
adc
movb
xchg
add
fidivs
addr16
xchg
inc
icebp
hlt
cmpb
es
xor
cmp
pop
lret
in
loopne
js
sti
inc
adc
sbb
shrl
incl
add
sbb
inc
test
mov
dec
cmpsl
pop
stos
and
clc
cmp
add
jno
mov
gs
and
dec
fildl
add
inc
cmpsl
mov
addr16
es
pop
pop
inc
dec
aaa
xlat
shll
mov
dec
cmpsb
mov
lods
xchg
hlt
sub
aaa
mov
rcl
pop
jmp
imul
call
jb
inc
xchg
xchg
add
dec
test
in
fs
out
xchg
mov
mov
movsb
mov
pop
push
push
mov
repz
sbb
lcall
dec
fbld
loop
mov
shll
jbe
jecxz
stos
adc
lods
ror
add
popa
mov
inc
push
add
and
mov
mov
out
rolb
or
add
push
adc
pushf
in
pop
xor
aas
lds
out
push
cmp
mov
movlps
push
cmp
movsl
sub
daa
mov
repz
jmp
ret
ret
mov
arpl
add
xor
push
inc
pop
or
xlat
mov
les
aaa
leave
in
mov
push
or
mov
outsb
ret
movsb
xchg
mov
addb
add
cmp
add
mov
imul
push
mov
mov
ljmp
push
hlt
adc
add
xor
pop
nop
fidivs
cmpsl
fcompl
js
push
out
add
xchg
data16
jle
mov
out
adc
movb
dec
fbstp
xchg
fnstsw
jmp
mov
push
rcrl
or
jnp
scas
cmc
mov
push
sub
push
gs
addb
inc
out
in
inc
fnstenv
test
das
cmc
frstor
lcall
daa
arpl
mov
loope
leave
xor
test
push
xor
das
cmp
push
jl
in
loopne
jle
subb
jne
sahf
outsl
daa
lahf
repz
xchg
cwtl
pop
push
mov
jle
je
insb
sarb
push
in
fs
popf
sbb
xor
mov
out
fcomip
aas
cmp
cmp
add
or
mov
pop
scas
inc
sbb
hlt
fcmovnb
stos
xchg
inc
or
jno
fbld
loop
loope
adc
andb
xchg
xchg
cmp
add
xlat
sub
mov
cmp
fnstenv
sbb
ljmp
divb
dec
insl
lret
xchg
insb
leave
mov
int3
xchg
daa
aas
mov
mov
mov
gs
cmp
jl
jne
inc
dec
out
push
fs
inc
out
std
loope
fnstenv
cmp
add
out
cwtl
xor
xchg
cmp
aas
loope
jecxz
fs
inc
push
dec
mov
nop
mov
or
sub
pop
test
mov
lds
inc
ljmp
loopne
fcomi
sbb
icebp
dec
push
add
pop
hlt
dec
xor
cmp
cmp
sahf
inc
xor
loope
in
adc
ret
cmp
jecxz
mov
sub
mov
scas
mov
push
les
cmp
add
mov
push
aaa
mov
pushaw
ss
mov
andl
inc
stos
in
test
out
jo
sar
dec
lods
imul
lods
test
dec
repnz
test
xor
push
xchg
cld
adc
mov
lret
ja
mov
inc
cltd
loop
leave
mov
push
stos
and
mov
pop
adc
inc
jecxz
jo
jae
jl
in
std
stos
mov
or
cwtl
mov
ljmp
jp
add
adc
aad
scas
jbe
es
js
and
cld
cltd
insb
cs
popa
add
sbb
out
popf
mov
repz
sub
pop
jae
push
dec
mov
xchg
stos
mov
aam
xchg
outsb
and
inc
fcmovnbe
pop
dec
mov
ljmp
xor
sbb
push
xrelease
dec
mov
imul
dec
or
inc
pop
lds
imul
popf
outsb
jbe
insl
push
or
rorb
aad
or
bound
shl
mov
xor
push
imul
daa
mov
or
cmp
pop
mov
test
xchg
adc
sbb
jo
ret
pop
stc
scas
fisubrl
sbb
jle
or
mov
push
pop
mov
shrl
add
icebp
popa
ds
xchg
push
aad
popa
jp
push
and
stos
cmpl
shlb
xor
fs
movsl
push
mov
aad
ds
addl
das
insb
out
or
pusha
sti
cmpsl
jp
pop
insb
movsb
and
dec
add
sub
cmp
js
mov
pop
inc
inc
adc
sbb
xchg
and
push
sahf
adcb
mov
fmull
pop
test
lock
arpl
int
lods
adc
mov
rolb
push
jns
daa
and
daa
mov
dec
test
movsl
xchg
jmp
popa
ss
aas
out
and
fsubrp
jg
outsl
clc
xchg
sbb
jl
inc
jle
outsb
mov
adc
mov
add
les
fwait
fwait
shll
out
adc
jl
xor
ljmp
out
addl
inc
pop
shll
and
testb
repnz
and
fwait
mov
loope
inc
xlat
aam
adc
bound
mov
inc
sbb
test
xor
inc
sub
mov
xchg
cmp
push
adc
lcall
aas
test
dec
dec
xor
fdivs
enter
imul
xor
adc
or
mov
in
sub
lea
and
inc
pop
leave
dec
add
jle
out
adc
insl
sub
lret
addr16
data16
test
sub
sub
and
fsubl
addl
adc
xchg
jb
lcall
and
add
sbb
sub
jge
mov
lret
outsb
ja
cmp
push
daa
aas
cmp
repnz
adcb
push
stos
mov
push
lea
testb
mov
bound
mov
je
sbb
jae
movsl
fmuls
loop
hlt
dec
pushf
adc
lods
mov
iret
pop
jg
subl
iret
pop
jg
jo
ljmp
jno
lea
mov
xor
in
add
sbb
xchg
pop
lret
push
cmp
jne
jecxz
roll
cmp
fsubr
stc
lret
add
fucom
repnz
daa
mov
lahf
sub
mov
lahf
orb
xchg
cmpsb
jle
cmc
xchg
xor
loop
movsb
enter
decb
fnstenv
pop
mov
out
lods
mov
cmp
divps
fnsave
ds
pop
mov
push
push
stos
xlat
mov
push
cld
cmp
pusha
mov
test
inc
xlat
mov
xchg
fldcw
push
dec
sub
and
loopne
outsb
stc
or
inc
subb
add
mov
ja
dec
and
or
sub
lds
iret
push
outsl
add
xor
mov
jno
push
call
sub
inc
aas
into
ds
lea
and
sti
stos
in
and
cli
dec
addr16
and
gs
mov
hlt
or
bound
and
jne
iret
fildll
adc
inc
mov
jl
shl
aaa
sbb
movsl
iret
aad
sub
jp
or
and
and
push
dec
shlb
or
and
sbb
andl
out
sti
cmc
aaa
lret
sbb
push
daa
pushf
dec
dec
and
loopne
pop
cwtl
daa
jl
imul
sub
pop
lret
jb
arpl
test
dec
mov
push
std
lods
cmp
shl
dec
lods
pop
enter
xor
adc
in
in
mov
mov
insb
sbb
vpcmpgtd
jle
xchg
aas
fdivl
aaa
ja
aad
lea
subb
add
dec
dec
imul
cwtl
incb
inc
sbb
mov
cmc
sbb
out
pop
out
mov
mov
jmp
fcmovnb
in
xchg
ss
xor
xchg
shlb
inc
jo
fildl
mov
cmpb
fmuls
xchg
pop
mov
mov
jb
mov
cmp
jbe
fdivrs
mov
or
popl
sub
pop
fiadds
pusha
fidivrl
lret
loop
cmp
xor
cmp
data16
jno
push
jae
outsb
adcb
div
mov
and
jmp
popa
inc
dec
pop
xor
jb
cmp
xor
loopne
and
push
mov
cmp
add
pop
cmp
push
movsl
imul
fimuls
pop
pop
push
mov
mov
aaa
push
or
sti
repz
add
mov
loopne
and
mov
jb
pop
cmc
aad
push
cmp
lcall
dec
and
jecxz
push
ret
mov
je
or
sar
rorb
fldcw
jecxz
out
dec
mov
and
adc
pop
testl
add
adc
cs
fcomip
sbb
mov
pop
or
pop
fdivr
jb
clc
mov
subb
lock
sub
xor
xor
cmp
shlb
xchg
sbb
in
aam
add
jecxz
cs
lcall
roll
sub
cld
outsl
enter
loope
add
push
popa
xorb
popf
or
xor
ljmp
lock
mov
cwtl
cmp
in
mov
mov
adc
mov
test
fdivp
sub
mov
pop
xor
loopne
sti
lcall
in
fsub
and
insb
js
xchg
pop
pushf
mulb
lods
jl
jle
bound
aaa
popa
xorl
enter
aam
xchg
icebp
js
ds
fsincos
lret
sbb
push
daa
js
or
add
ret
cmpsb
mov
imul
lahf
adc
inc
mov
decl
stos
cmp
jae
push
cmpsl
xchg
pop
push
sub
or
cmp
fidivs
fs
sahf
and
arpl
and
sahf
cli
dec
cld
imul
cld
iret
in
pushf
mov
aad
mov
hlt
imul
js
sarb
iret
mov
jle
leave
inc
fwait
aaa
scas
push
cli
mov
repnz
xchg
inc
ficoms
shrl
mov
sbb
in
jle
lret
and
inc
out
inc
xor
loopne
jge
fnstenv
pandn
les
xor
jne
mov
loop
and
jnp
pop
cmp
push
out
aaa
and
inc
or
scas
lcall
popf
fsubs
or
xchg
cmp
mov
adc
mov
pop
int3
arpl
cli
adc
shl
xchg
jo
out
mov
sti
enter
xchg
jmp
add
rcrl
shlb
mov
insl
data16
mov
adc
mov
fwait
jmp
mov
xor
and
mov
mov
icebp
and
sub
add
popf
andb
xchg
add
cmpsb
pop
xor
sbb
jl
and
je
mov
lods
mov
and
xchg
out
jno
xchg
jecxz
jae
enter
mov
push
insb
add
in
bndstx
loop
xchg
pusha
mov
cs
sub
cld
jnp
into
mov
ffree
pop
fisttpl
xor
pop
lock
ret
pop
cmp
lahf
hlt
cmp
pop
mov
mov
inc
popf
stc
inc
jg
inc
cltd
xchg
movsl
xchg
and
push
jnp
dec
cmpsb
and
mov
dec
iret
cs
lret
int
imul
sbb
lcall
jo
pop
pop
bound
xor
fistpll
dec
nop
push
nop
cmpsl
dec
cmp
xor
or
xor
shl
sbb
mov
stos
dec
js
ja
sub
setp
sub
scas
cltd
outsb
mov
aas
jae
test
scas
push
cmp
or
mov
xlat
dec
inc
stos
dec
clc
lds
movsl
mov
mov
cld
push
push
cltd
mov
fstl
xchg
arpl
or
sub
jns
loopne
pop
sbb
and
xchg
cli
mov
sbb
mov
call
imul
inc
cmp
or
push
push
add
mov
sbb
into
enter
sub
imulb
mov
jnp
int3
call
in
push
push
adc
sub
mov
loop
mov
ret
repz
jnp
cmp
in
pop
testl
add
push
scas
insb
int
in
ljmp
and
ss
sahf
mov
in
mov
cmc
mov
xchg
dec
pop
cmp
sahf
inc
or
cmp
js
cs
in
push
or
xor
xchg
add
adc
outsb
shrb
or
into
insl
or
push
or
mov
xor
cs
data16
add
pop
ljmp
daa
mov
lea
adc
nop
mov
push
movsl
stos
mov
incb
and
roll
pop
push
pushf
xor
inc
xor
cwtl
movsb
mov
and
je
adc
jmp
aas
adc
jne
push
scas
jge
and
fdivl
mov
dec
in
arpl
pop
dec
insb
add
jb
fwait
mov
adc
push
adc
and
push
lret
jp
movsb
xchg
sbb
or
and
lahf
sub
test
jmp
and
add
repnz
pusha
cmp
xchg
mov
cmpsb
mov
sbb
repz
pop
aad
cmp
jno
imul
sar
nop
add
pushf
mov
inc
lret
int3
arpl
rorl
dec
hlt
int3
mov
push
sub
pop
or
test
ret
das
cmp
dec
pop
lahf
shrb
dec
fisttpll
arpl
lock
in
fs
dec
jnp
repnz
insb
sbbl
dec
cmpsb
xor
in
scas
xchg
cmp
inc
ret
hlt
fs
mov
ret
mov
pcmpgtb
aam
or
jmp
xchg
sub
sbb
in
dec
sbb
ret
fcoml
dec
pop
std
push
mov
ficoml
adc
lea
xor
ja
or
xchg
movsb
int3
adc
pop
mov
push
imul
fsubrs
mov
jno
je
std
lods
push
xchg
into
data16
repz
lock
xor
lock
sbb
mov
out
hlt
sbb
push
mov
ljmp
sub
push
push
adc
or
mov
test
pop
popa
aas
or
jecxz
and
lret
cltd
hlt
xchg
push
imul
xor
test
loop
mov
sbb
jb
pop
add
dec
push
push
jp
jmp
cmp
aas
dec
cmp
aas
mov
mov
enter
cmpxchg8b
iret
call
or
out
sahf
pop
scas
pop
sub
insb
dec
add
sbb
push
movsl
insb
sti
dec
fildll
aad
cli
xchg
add
cltd
repz
mov
pop
in
cmc
sub
addr16
or
std
push
out
add
lret
adc
mov
mov
cwtl
or
stos
out
sub
fwait
sbb
in
addb
jnp
inc
push
cld
cmpb
push
jge
sti
out
jb
add
and
cwtl
imul
outsl
ret
cltd
mov
test
arpl
add
dec
inc
fists
ljmp
xchg
ljmp
and
in
fwait
movsb
lret
cli
xchg
push
stos
xchg
pop
push
lods
dec
fldt
push
test
and
push
jle
adc
outsb
mull
push
inc
push
xchg
sub
mov
xor
jge
gs
lds
mov
je
jecxz
ficompl
lahf
les
adc
aas
in
cmp
mov
bound
mov
push
sub
stc
jmp
out
mov
xlat
repnz
push
pop
jecxz
cmp
mov
repz
xchg
shlb
daa
bound
mov
insb
aam
adc
int3
xchg
cmp
call
add
pop
lock
movsl
mov
mov
std
adc
xchg
push
ss
push
in
jne
add
mov
adc
mov
out
push
testb
ficoml
jns
call
cli
mov
adc
insl
rorb
fcoml
xor
cmpsl
testb
inc
es
in
jb
adc
mov
in
out
dec
inc
cmp
lods
je
jecxz
cmp
jo
nop
xor
idivl
jmp
insb
daa
imul
mov
fidivs
push
sub
xchg
mov
adc
or
das
push
mov
in
adc
xlat
xchg
aad
inc
lcall
gs
jnp
cmpsl
test
push
push
mov
jns
leave
pusha
push
and
mov
push
sub
lea
xchg
pop
push
mov
xor
lods
scas
out
xchg
fstps
sbb
fstpt
inc
sbb
insb
xchg
pop
xlat
stos
xlat
popf
icebp
or
mov
dec
out
repz
scas
xchg
adc
stos
adcl
aas
lea
sub
pop
inc
lret
and
repz
jno
ljmp
out
test
mov
pop
rcrl
in
stos
jecxz
sahf
xchg
movsl
mov
ror
or
lock
dec
inc
pushf
adcl
and
ds
aas
fimuls
pop
aam
mov
ficompl
mov
lock
lods
add
sahf
lock
fdivl
mov
movsl
sub
lds
jnp
stos
pusha
xchg
divl
shll
mov
push
ja
xchg
bound
adc
sahf
inc
ja
inc
ss
frstor
dec
test
shll
aam
mov
lods
rolb
sbb
xor
xor
xchg
imull
pushf
daa
jp
pop
xchg
shl
mov
sbb
shrl
mov
imul
mov
sahf
add
pop
push
sti
inc
pusha
sbb
pop
stos
push
or
pusha
cmp
mov
rorb
outsl
mov
dec
mov
xchg
or
adc
pop
sbbl
xor
cltd
mov
in
adc
bound
push
in
loopne
cmp
adc
add
dec
loop
jecxz
adc
imul
fstpt
mov
dec
imul
jmp
fstpl
mov
mov
mov
int
jae
fbstp
dec
ja
dec
test
mov
cmc
pop
dec
movsl
mov
mov
cmp
int
imul
mov
pop
adc
out
out
dec
or
cmp
lods
xorb
lea
pop
fwait
test
adc
nop
jmp
xor
pop
jo
add
cmp
jno
es
jmp
push
and
push
pusha
outsl
insl
fnsave
mov
popa
and
scas
dec
out
or
jp
aad
mov
push
shll
lods
mov
mov
flds
std
fdivrs
stos
push
ret
adc
shlb
orl
pop
imul
loope
push
shl
push
dec
lahf
jl
pop
mov
dec
es
lods
sbb
mov
cli
mov
subb
lods
rcrb
repz
xchg
xchg
aaa
push
lcall
outsl
mov
notb
push
dec
pop
lods
repz
adc
and
inc
add
pop
cltd
icebp
adc
sahf
lods
inc
shll
in
pop
lret
push
push
add
gs
sbb
mov
movsb
mov
addr16
push
xor
lcall
xchg
clc
jae
jge
mov
and
or
lea
and
adc
sub
data16
std
sub
or
push
and
in
into
shll
jle
inc
mov
sbbl
xchg
imul
es
clc
or
stc
cltd
inc
scas
adcb
in
test
mov
or
jns
dec
pop
and
xlat
fwait
sti
out
pop
cwtl
jnp
xor
fs
pop
sub
stos
mov
and
ret
hlt
lock
je
jl
into
and
cli
arpl
in
dec
sub
iret
cmp
scas
pop
fs
les
add
push
popa
mov
xor
test
movsl
mov
fmul
fisttpll
stos
rcll
and
jns
mov
stos
inc
cmp
scas
inc
mov
pusha
int3
push
mov
adc
xorl
test
inc
fistps
pop
js
jae
jo
add
pop
add
push
cmp
and
popa
add
sbb
cld
mov
cmp
cli
push
pop
js
aad
popa
movb
ss
adc
pop
aam
aaa
mov
outsl
inc
test
mov
popa
aam
fdivs
stos
jns
lret
lret
add
fistpll
fdiv
incb
inc
pop
or
push
push
jns
mov
out
nop
and
int3
xor
xor
clc
xchg
or
stos
sbb
cmp
test
lea
fs
pop
mov
test
sub
dec
pop
pop
popa
mov
sub
mov
mov
adc
mov
jbe
in
xchg
sub
std
aam
bound
jge
scas
shrl
sbb
mov
scas
out
xchg
sub
or
mov
sub
lahf
stos
xchg
inc
cltd
in
icebp
cmp
mov
inc
leave
mov
mov
test
popl
aas
fisubrl
imul
pop
scas
nop
insl
mov
sar
dec
mov
dec
push
inc
fiaddl
push
outsb
movsb
loopne
push
mov
inc
fcoms
push
sarb
pop
adc
adc
lods
jne
ss
mov
xchg
cmpsl
and
ret
sahf
inc
mov
insl
mov
aad
mov
jbe
mov
arpl
aam
sub
daa
push
add
cwtl
repnz
idivl
dec
mov
sub
and
pcmpeqb
orl
or
cmp
xchg
repnz
inc
enter
push
fsubl
xchg
jmp
pushf
cmp
adc
pop
leave
mov
and
pop
add
adc
jns
jl
popf
xor
inc
jnp
xor
fnstsw
mov
pop
loopne
ja
mov
mov
jbe
stos
add
push
daa
mov
mov
lcall
jae
mov
out
fs
dec
shll
pop
into
and
and
xor
fsubrp
popf
pusha
pop
not
sbbl
push
insl
sbb
jp
cmp
lock
add
lods
or
mov
pop
loop
add
and
shrb
pop
or
add
lock
dec
dec
mov
test
fwait
xlat
icebp
xchg
xchg
out
shrb
imul
scas
or
xlat
icebp
lahf
jbe
sbb
fdivrl
sbbl
mov
enter
out
test
lret
iret
loope
mov
pop
xchg
sbb
mov
mov
mov
pop
pop
inc
clc
inc
clc
and
mov
dec
dec
repz
movsl
jmp
mov
pop
add
test
lret
inc
cwtl
mov
adc
cmpsb
dec
outsl
filds
int3
push
xor
xor
addl
scas
xorl
jnp
lret
fsubrs
add
sub
shlb
popa
aam
push
or
adc
aas
fisubrs
roll
ja
mov
popl
sub
xchg
push
testl
pop
push
mov
movsl
icebp
rcll
or
xchg
imul
das
outsb
mov
sub
enter
pop
sub
loope
std
notb
scas
int
push
scas
pushf
out
dec
pop
lock
fsubrs
mulb
daa
sub
sbb
shl
xchg
sub
fists
ss
sbb
dec
fisubs
and
js
fwait
pushf
fsubl
into
adc
shr
cmp
sbb
les
call
mov
fwait
insl
add
hlt
ja
aad
fisubs
push
mov
mov
icebp
mov
cmp
int3
jo
mov
std
mov
ret
cmc
pop
adc
xlat
jmp
pushf
pushf
jnp
cmp
jmpw
sbb
cmp
dec
arpl
add
jns
pop
adc
je
dec
test
push
push
pop
rolb
shll
sub
lahf
push
clc
inc
pusha
sub
ljmp
das
mov
movsl
fcompl
xor
cltd
je
xchg
jle
mov
jl
insl
push
imul
mov
loope
sub
shl
mov
xchg
pop
scas
mov
nop
jmp
adc
lahf
add
pop
pop
mov
into
pop
fistps
pop
lds
add
add
fildll
and
pop
pop
mov
cmp
adc
cmp
pop
pop
push
inc
and
mov
mov
xchg
into
pop
jne
mov
daa
rcll
jecxz
mov
xchg
push
inc
or
cmp
pop
roll
insb
mov
inc
mov
jne
stos
add
mov
push
pcmpgtb
int
aas
mull
test
adc
xor
divl
mov
lods
mov
and
stos
jecxz
fsubl
cmp
dec
stc
loope
out
addb
in
in
pop
lret
dec
xchg
call
nop
imul
ret
sbb
bnd
inc
mov
addr16
icebp
addr16
mov
std
mov
inc
daa
mov
jo
push
imul
das
fcmove
xlat
scas
inc
nop
sub
add
mov
movsl
or
gs
and
dec
jg
dec
xchg
inc
xchg
aam
ret
push
ja
cmp
dec
cwtl
fnsave
inc
insb
call
ljmp
fildll
outsb
jnp
fdivrs
fisubl
aam
loope
mov
stc
insl
insb
pop
add
inc
dec
jno
or
jnp
jns
xchg
push
loop
lea
scas
push
push
sbbb
add
es
xor
mov
cmc
test
add
shrb
xchg
mov
add
or
ljmp
pusha
andb
and
lret
pop
fs
bound
sub
sbb
cmc
lea
inc
inc
inc
in
or
push
xchg
iret
jo,pn
sbb
fwait
cmpsl
test
lods
in
movsb
popf
lcall
inc
arpl
pop
mov
ljmp
arpl
add
adc
leave
out
jle
and
hlt
mov
push
jp
loop
lods
dec
push
addr16
add
add
hlt
fistl
test
stc
jne
lahf
and
orl
divl
or
and
xchg
jo
enter
ljmp
into
cli
inc
sbb
xchg
lods
mov
cmp
out
pop
outsb
or
fmuls
enter
call
push
out
adc
sbb
outsb
imul
pop
cmp
add
jnp
push
jno
fxch
scas
out
out
andl
outsb
sub
pop
inc
jns
shll
fbstp
add
addb
testl
popa
jns
repz
jg
cli
mov
stos
sub
call
es
ret
dec
lret
insl
rcl
adc
shr
imul
icebp
inc
jmp
or
mov
add
jae
cwtl
push
push
lds
push
cmp
adc
xchg
popa
stos
lds
js
dec
sbb
sbb
cmp
shlb
mov
call
xchg
loopne
movb
stc
orl
stc
or
int3
xchg
push
sahf
loopne
out
out
sub
pop
cmp
decb
outsl
sbb
fcomip
push
or
call
xor
inc
sbb
pushf
stos
mov
int
repnz
cmp
ret
popf
int3
jnp
or
mov
dec
cmp
cmp
push
inc
jns
out
adc
dec
mov
cwtl
mov
cmp
into
rclb
cmp
gs
or
jecxz
and
mov
popf
or
push
lds
dec
fcmovu
inc
inc
pop
cmp
and
icebp
les
insl
out
mov
scas
lret
insl
or
call
sub
mov
or
mov
xlat
dec
mov
pop
hlt
xchg
ds
aas
lods
mov
aam
dec
jns
mov
in
enter
fimuls
test
mov
shll
fcomps
sarl
in
inc
popa
pop
stos
stos
in
pushf
pop
into
stc
mov
addl
js
xchg
das
cmp
xlat
jmp
lcall
dec
add
mov
cmc
cmp
inc
stos
leave
pop
andl
sub
cmpsb
fimull
fs
fistl
sub
loope
stos
lock
mov
bnd
daa
mov
scas
out
out
push
aad
test
inc
or
leave
int
lods
aam
test
insb
mov
sub
mov
loopne
mov
cmpsl
mov
inc
inc
dec
in
sbb
aam
inc
imul
iret
cmpsb
dec
iret
mov
incl
and
js
push
sub
pusha
pop
add
pop
cmp
daa
clc
lods
pop
loopne
int
ja
inc
mov
jmp
iret
or
adc
dec
inc
fidivl
stos
leave
mov
sub
and
jb
push
test
add
test
adc
rorb
pop
xchg
jb
or
jmp
cmp
mov
mov
adc
repz
jbe
lret
addr16
inc
data16
cmpl
adc
sbb
test
aam
mov
aam
mov
lods
mov
inc
xchg
sub
std
popa
cld
cmpsb
and
push
push
pop
and
xchg
in
lods
pushf
popa
mov
inc
adc
iret
xchg
jo
add
adc
es
xor
push
adcl
inc
jno
jbe
orl
test
aad
jno
pushf
dec
mov
loope
mov
adc
lods
cmp
leave
imul
mov
lods
fcmove
sbb
inc
es
cltd
cmpsl
loope
fsqrt
stos
dec
dec
in
cmp
xchg
insl
xchg
mov
xchg
mov
lds
mov
sub
or
insb
and
dec
loop
shr
clc
sbb
cmp
ficompl
jbe
push
cmc
xlat
sbb
repz
insl
jnp
addr16
xchg
mov
mov
lods
adc
pop
cvtdq2ps
or
pusha
js
ja
inc
insb
inc
xor
jmp
mov
pushl
xchg
adc
movsb
dec
push
cmpsl
ret
mov
ja
mov
fsubrs
in
aas
mov
xchg
aam
dec
dec
ljmp
lret
hlt
jno
xor
sub
pop
pop
outsl
add
mov
or
sbb
fdivs
or
cmpsl
aaa
mov
nop
pop
mov
or
cmpps
shrl
pop
sbb
mov
ja
inc
adc
jae
stos
jb
inc
add
lods
je
pop
adc
imul
adc
mov
aas
stc
jno
sub
dec
add
sbbl
lods
cli
and
sub
lret
dec
dec
aam
mov
mov
cs
ficomps
je
jg,pn
in
push
inc
jne
mov
fxch
ffree
add
or
loope
mov
mov
mov
cmc
mull
in
mov
leave
cmpsl
in
pop
lret
stc
je
mov
ret
icebp
adc
ficoml
aas
pop
daa
inc
mov
popa
cwtl
adc
cld
cmpb
and
mov
mov
lret
pushf
aam
push
xor
pusha
incb
das
xor
pand
dec
xchg
nop
repz
sarl
cmpsl
ds
cltd
mov
push
sub
sbb
pop
ret
mov
jmp
pop
out
mov
mov
dec
dec
js
loop
stos
inc
aam
and
xor
sarb
das
test
jns
repnz
sub
sbb
or
nop
adc
mov
xchg
sti
or
xchg
lcall
icebp
in
dec
cmp
xor
imul
xchg
imul
jl
cli
xchg
add
imul
sbb
out
mov
cmovs
int
mov
xchg
lret
icebp
adc
jecxz
dec
mov
shl
push
pusha
nop
popa
jg
stos
cltd
les
add
fisubrl
and
mov
shlb
lods
adc
mov
imul
movsb
adc
or
xchg
mov
ss
cli
movsl
call
inc
xor
in
push
sub
push
ja
inc
popa
gs
and
int
sbb
push
xor
shlb
dec
inc
push
std
dec
mov
push
test
push
enter
cli
sbb
push
in
mov
sub
shrl
xor
pusha
test
test
in
pop
hlt
das
xchg
mov
lret
xchg
pushf
rol
and
and
push
cltd
jmp
ljmp
ds
mov
repz
pop
inc
inc
sub
jecxz
call
add
test
inc
and
adc
fidivs
mov
push
enter
or
push
cmp
mov
mov
mov
jmp
popa
fwait
aas
xchg
in
mov
dec
aaa
xchg
clc
sub
jge
sbb
iret
add
ja
addr16
xchg
dec
mull
cmpsb
test
sti
inc
ds
fistl
pop
dec
mov
sbb
jle
out
movb
arpl
cmp
jle
or
sub
pop
insb
icebp
dec
sbb
call
or
push
mov
adcb
int
mov
cs
gs
push
insl
add
and
xchg
xchg
mov
inc
andb
in
call
fld
xor
jg
movsl
mov
jl
arpl
push
pop
push
sbbb
fists
mov
cmp
xor
xchg
mov
popa
mov
rolb
enter
jle
jae
inc
inc
xlat
xor
adc
lret
insb
xor
dec
in
jmp
cli
enter
adc
dec
into
dec
pushf
cli
push
repz
inc
adc
int
out
in
jl
xchg
mov
dec
jecxz
andb
jle
fldl
repz
je
cli
xor
in
aam
repnz
out
fcompl
stos
lcall
push
add
adcl
jmp
jns
inc
or
in
ljmp
ss
lods
test
inc
sbb
hlt
adc
daa
outsl
stos
popa
jns
sbb
ficompl
pusha
xor
lods
xchg
rorb
cmp
adc
or
repz
negb
in
daa
lret
lcall
cmp
xchg
lods
mov
mov
cld
clc
sub
push
into
insb
arpl
xor
xor
mov
push
dec
dec
or
xchg
out
cwtl
and
repnz
insl
in
cmp
jne
in
notl
xchg
xchg
sub
pop
aas
push
or
cmpsb
push
mov
scas
cmp
cmpsl
sbb
xor
scas
mov
xchg
fcoms
jg
pushf
lcall
mov
test
pop
loop
adc
fidivrl
sarl
outsl
push
push
push
and
jne
push
das
cmp
insb
insb
and
xlat
add
ds
dec
sbb
dec
mov
xchg
mov
jns
sbb
popa
pop
aaa
into
sub
xchg
rorb
cmp
movsb
ss
pushf
jae
stos
cmp
pushf
and
cs
sbb
ds
mov
add
dec
lods
popf
testl
pop
aad
or
andb
push
outsb
sub
dec
call
push
dec
fdivl
rcll
mov
inc
push
outsb
enter
jb
fwait
mov
ljmp
shr
push
ret
hlt
rorb
add
lods
mov
outsb
loope
sbb
xchg
out
mov
iret
aaa
fimuls
lock
push
sub
hlt
pop
daa
hlt
lods
hlt
sub
ja
fnstenv
inc
or
mov
outsb
mov
or
xor
jbe
mov
xor
push
push
popf
fwait
xor
loopne
cmpb
push
pop
jnp
mov
pop
out
or
aad
mov
daa
push
or
les
mov
adc
lods
mov
xchg
sbb
add
push
test
nop
stos
negl
in
loop
push
push
mov
test
sbb
push
mov
push
pop
or
push
mov
fmull
enter
int3
shr
jb
ret
pop
push
jmp
out
shll
shrl
xor
adc
ror
test
adc
xor
arpl
call
cmp
mov
xchg
push
mov
sub
pop
cmpsl
and
mov
jno
push
loope
inc
shll
daa
cli
and
gs
scas
pushl
aaa
rcll
add
mov
push
lret
cltd
jl
push
jne
or
fbstp
push
test
movsb
and
outsl
aas
push
adc
xor
dec
pop
push
loopne
or
or
push
add
popa
les
mov
jp
or
in
pop
mov
cld
sub
inc
cltd
aas
loop
cs
pusha
pop
sub
loope
push
dec
in
pop
movups
imul
cmpsb
arpl
dec
shrb
mov
rclb
or
stos
sub
ja,pn
in
sub
loop
les
jp
imul
insl
shrb
shll
aaa
xchg
inc
ret
lods
ficompl
test
sub
dec
cltd
or
js
jge
cwtl
push
ja
or
inc
ds
jecxz
dec
adc
mov
push
sub
cwtl
mov
pop
jecxz
dec
dec
je
pushf
ret
xchg
popf
mov
ljmp
pushf
mov
xchg
bound
andl
imul
imul
lods
out
xchg
test
mov
popa
mov
inc
xlat
or
jno
pop
lock
inc
xor
aad
arpl
outsb
sbb
mov
mov
mov
add
mov
aad
das
mov
stc
xchg
inc
arpl
aaa
inc
push
xchg
shrl
adc
push
jno
in
xchg
mov
loopne
adc
and
insb
jl
fst
stos
fimull
mov
xchg
and
gs
cmpsl
stos
xchg
and
in
clc
out
cmpsb
imulb
jbe
sub
rcrb
aaa
and
in
xor
mov
mov
cmp
int
lods
mov
mov
pop
adc
std
sbb
lods
push
cmp
mov
decl
insb
push
sahf
loopne
mov
sbb
jl
hlt
inc
cmp
mov
sub
jp
pop
lret
inc
int3
pop
test
mov
add
mov
pop
adc
addl
fstps
inc
xorl
pop
inc
adc
popf
mov
fsubl
inc
test
jmp
in
in
inc
mov
push
cli
sub
add
pusha
das
inc
cmp
dec
dec
push
mov
icebp
cmpsb
dec
adc
sbb
push
out
jae
jno
push
mov
or
xor
outsb
aas
push
sub
cmp
pop
das
test
out
cld
inc
xor
cmpl
push
or
dec
add
cmpsl
dec
add
lds
pusha
loopne
cmp
out
push
adc
pop
cmp
adc
jge
cwtl
cmp
push
enter
sbb
jg
rcrl
sahf
push
shl
je
add
or
mov
add
sub
cwtl
push
xchg
test
fldl
hlt
data16
loopne
mov
dec
rcl
movsb
mov
iret
insb
jo
push
sub
lahf
test
arpl
enter
mov
cs
mulb
mov
bswap
inc
mov
xchg
popf
mov
jne
enter
cli
scas
mov
pop
pop
ds
push
test
loop
ret
roll
sbb
movsb
add
das
gs
stc
adc
push
xchg
sbbb
or
pop
mov
dec
jmp
inc
sbb
pop
jne
aam
gs
mov
ret
pusha
sbb
push
xchg
mov
test
rcrb
add
imul
lret
mov
jnp
fcoms
mov
jecxz
movsl
fdivl
jl
or
mov
or
pop
add
adc
or
xrelease
sahf
in
jns
or
inc
bound
mov
mov
lea
push
jg
in
test
cli
filds
dec
lcall
xchg
lret
lahf
ss
mov
add
lea
aam
push
add
test
js
aam
jl
xor
xchg
or
push
mov
fidivl
mov
dec
add
and
inc
push
cmp
aas
fisttpl
cmp
insb
jge
xchg
inc
scas
stc
shrl
sti
into
push
insl
pop
out
jle
add
test
out
dec
sbb
dec
push
mov
les
mov
sbb
test
mov
jno
mov
xchg
cmp
fildll
ret
dec
jp
scas
ljmp
lock
loopne
inc
fsub
sahf
das
inc
mov
cmc
ds
cmpsl
fcmovu
jno
enter
mov
sahf
outsb
jg
aas
sub
div
loope
push
xchg
sub
ss
cmpsl
pop
xor
mov
jae
push
test
dec
test
call
xlat
pop
fbstp
fs
xchg
adc
jbe
aas
jo
jl
jp
cmp
jecxz
subb
push
or
stc
scas
push
ds
xchg
pop
test
das
enter
dec
fs
aas
rol
dec
pop
loope
scas
add
inc
scas
mov
pop
and
stos
adc
loopne
stc
imul
push
or
push
adc
jns
sbb
push
sarl
andb
sbb
or
fwait
test
push
mov
pop
mov
ja
imul
xchg
scas
mov
adc
lds
and
mov
or
mov
dec
data16
mov
cld
lock
pop
call
cmp
outsb
lods
inc
mov
test
add
push
fdivs
push
jmp
jb
xchg
fs
dec
mov
mov
leave
jmp
pop
xchg
mov
cmp
or
dec
jns
xor
popa
xor
inc
adc
add
fidivl
cld
xlat
mov
outsl
cld
pop
orb
xlat
mov
mov
push
insl
push
dec
or
loop
jne
add
dec
mov
out
fmul
test
jecxz
insl
and
sbb
lret
and
lods
lods
lea
mov
dec
enter
fwait
gs
clc
rorb
jns
or
scas
adc
adc
mov
cltd
scas
inc
adc
sbb
jb
fsubrl
ret
lret
stos
stc
mov
rol
pop
frstor
ret
loope
sub
dec
xchg
je
pop
push
jb
or
andb
notb
cmp
cli
dec
mov
popa
or
lock
jmp
rcrb
lods
dec
aas
lds
and
mov
insl
mov
or
mov
xor
shll
jp
or
jmp
pushf
pop
mov
push
mov
jmp
cli
ljmp
or
es
insb
xchg
push
jae
shl
fwait
mov
repz
lods
and
pop
mov
dec
xchg
jo
push
push
out
mov
mov
loopne
fs
sti
xorb
pop
add
dec
cmp
xchg
mov
mov
ficoms
shlb
mov
imul
test
xchg
or
xor
js
push
out
pop
lock
out
movsl
cmp
mov
dec
adc
shrb
out
push
adc
roll
addr16
jnp
lods
aas
sbb
mov
loopne
imul
stos
jae
loopne
push
cmp
fsubs
mov
dec
jge
negl
fimull
nop
xchg
xchg
sub
popf
cmp
inc
sub
sbb
mov
lods
dec
inc
sub
adc
fwait
pushf
es
dec
xchg
xor
xchg
xchg
cmp
push
rcrb
aam
repz
fcoms
add
leave
push
xchg
xchg
push
cmpsb
jae
aad
jp
shrb
and
cli
xor
xchg
daa
inc
pushf
enter
push
xor
mov
out
das
sbbb
inc
dec
sub
mov
fstpt
dec
dec
jae
adc
and
das
pushf
add
or
pop
mov
xor
jecxz
in
mov
push
or
popa
stos
int3
aad
ljmp
mov
dec
sbb
sarl
pop
add
dec
mov
enter
sahf
scas
je
jmp
jle
mov
jno
jnp
xlat
repz
mov
dec
fisubrl
adc
mov
or
leave
mov
lret
pop
or
lcall
push
scas
int
loopne
push
fwait
sub
cmp
xor
sbb
incb
rorl
inc
mov
push
popf
xor
adcb
sub
adc
mov
bound
sbb
inc
xchg
test
ret
add
fists
orl
push
loopne
icebp
dec
outsb
cmpsl
sti
push
fistpll
add
jo
jo
xor
cmp
loop
push
sbb
pop
repnz
adc
cld
pcmpeqd
mov
inc
out
out
loope
pop
loopne
in
adc
cmp
ja
popf
lods
std
pop
push
sbb
addl
or
add
cli
or
xor
mov
cmp
adc
push
jcxz
js
pop
and
mov
mov
shlb
cmpsl
pop
inc
es
inc
mov
dec
mov
rorl
mov
imul
fnstsw
int
call
adc
jl
sub
mov
js
cli
and
fsubs
push
adc
dec
imul
sbb
cmovbe
push
cmpsl
jl
pop
push
lea
shrl
rcrb
lea
stos
sub
mov
mov
dec
push
sub
lahf
add
sbb
or
sub
jl
jnp
repnz
jmp
cs
and
jne
fs
test
cs
fiadds
jl
mov
jl
sub
std
mov
push
jecxz
jns
push
test
and
pop
xchg
stc
xchg
cmp
xchg
sub
subb
inc
adc
jecxz
mov
jle
mov
aaa
lret
and
push
jp
dec
addr16
pop
sbb
inc
in
in
mov
push
adc
jbe
movsl
stos
jne
in
into
fisubrl
cwtl
or
mov
sbb
lea
ja
push
and
fsubrs
pop
or
and
lock
mov
ret
sbb
lods
jmp
icebp
pop
mov
add
jns
into
or
icebp
gs
mov
das
add
rcll
xor
test
les
mov
mov
or
mov
dec
xor
add
mov
iret
mov
incl
sbb
pusha
xchg
jbe
push
aam
out
xor
hlt
popa
adc
test
aad
aas
xchg
add
pusha
sahf
push
push
icebp
fsubrs
cmp
cltd
push
mov
jle
jmp
adc
dec
ds
mov
dec
add
pop
scas
mov
mov
ret
or
rclb
push
lret
pop
cmp
add
and
arpl
mov
inc
or
dec
push
push
nop
loopne
jmp
dec
pop
push
test
dec
sbb
add
dec
inc
jne
xchg
cmp
test
faddl
cli
sub
in
push
jne
jns
mov
mov
lret
jmp
rorb
test
jns
fwait
push
sub
sbbl
push
scas
or
mov
adc
xor
cli
xchg
cmp
sub
cmp
and
mov
nop
cmp
imul
dec
cmpps
popa
sahf
cmp
sbb
int
mov
jae
movl
mov
and
inc
cmc
xor
sub
dec
in
sub
pop
es
sub
xchg
cmpsl
mov
shr
cmp
cmpsb
pop
cltd
sub
mov
shrl
pop
hlt
jg
ljmp
dec
inc
dec
outsl
fsubl
mov
add
push
cmpsb
or
into
dec
sub
mov
pop
ljmp
out
cmpsl
popa
pop
pop
push
sti
dec
push
ret
outsb
int
jo
jle
push
enter
xor
popf
xor
mov
into
lret
cmp
mov
sahf
sub
mov
outsb
push
loope
iret
shll
ds
jo
out
test
jne
cs
jo
fdivrl
mov
mov
sbb
in
lcall
leave
jecxz
call
pushf
repz
sahf
pop
mov
pushf
add
sbb
test
or
dec
cmc
mov
push
adc
sub
mull
or
sub
sbbl
and
mov
stos
cltd
imul
sub
mov
lock
push
outsb
ljmp
test
push
fnstenv
leave
fidivs
sarl
dec
jge
add
mov
imul
imul
push
sub
pop
cli
nop
bound
clc
xchg
fmulp
mov
mov
add
xlat
fadd
adc
and
out
cld
xor
mov
jbe
fsubl
cmp
mov
bound
sbb
iret
lahf
cmp
lret
in
lret
popa
jle
stos
fld1
push
jmp
dec
cmp
mov
mov
sbb
lcall
popa
lods
in
scas
arpl
pop
stos
jae
call
sbb
cld
jns
aad
aas
cmpsl
xor
mov
adc
ret
sbb
int
sub
mov
dec
mov
mov
int3
js
push
xlat
dec
mov
fcomp
aad
sub
push
lods
ss
xchg
bound
leave
int3
pop
jl
xchg
sub
jns
push
and
mov
int3
sub
test
add
shll
xchg
lods
leave
dec
popa
push
jno
test
in
push
aas
flds
push
popa
mov
sti
aas
cltd
je
cmpsl
xor
fstpt
insb
in
dec
xor
push
pop
sub
dec
in
xor
insl
sar
mov
mov
les
test
in
test
push
inc
cmpsl
outsl
push
cmpl
imul
add
add
sub
add
push
mov
rcrl
sbbl
scas
jecxz
in
fs
xchg
mov
psubb
pop
lods
stos
xchg
fistpll
pop
push
test
add
sbb
push
pop
or
mov
mov
inc
hlt
imul
or
dec
in
or
mov
insb
add
xchg
pop
adc
stc
punpckhwd
pop
rcr
mov
fisubs
xchg
jl
out
nop
imull
cmp
lret
add
mov
out
stos
dec
sbb
fsubr
pop
stc
jle
and
pop
cmp
out
push
mov
push
nop
fidivs
fdivrl
or
sub
ficoms
int3
push
jae
es
and
jns
int3
movsl
pushf
lcall
jne
adc
and
sti
subb
idivl
pop
sbb
movsl
roll
ret
ffreep
outsl
fiaddl
shrb
sub
xchg
in
call
xor
mov
enter
xchg
call
leave
and
mov
fidivrl
cmpsl
dec
push
push
out
ds
inc
mov
adc
inc
cmpl
ror
push
and
mov
movsl
in
clc
xor
mov
loopne
inc
rclb
mov
cmp
pop
test
inc
lea
jne
pop
inc
jmp
xchg
inc
sbb
push
in
rcl
cmp
sub
sub
ret
pop
xchg
dec
cmp
mov
jno
nop
mov
lcall
leave
push
mov
jle
in
ret
nop
insb
filds
push
push
or
or
jo
pop
in
pop
fdivl
aas
mov
jb
cli
xchg
sbb
push
ljmp
pop
or
adc
js
stos
push
cmc
xlat
push
adc
or
stos
rcr
fistpl
or
mov
cwtl
clc
mov
call
xor
gs
jnp
inc
push
add
movsb
arpl
test
fidivrs
loop
jne
inc
les
jbe
xor
leave
loopne
pop
push
push
adc
mov
mov
push
mov
test
adc
test
dec
sub
or
xor
das
hlt
cmp
push
push
ds
pop
notb
rcll
nop
imul
add
jno
out
int3
push
cwtl
orl
or
arpl
xchg
jl
and
xor
sub
xchg
mov
or
lock
mov
push
int
sub
fisubrl
adc
mov
push
mov
mov
les
jb
in
cmp
data16
adc
push
loope
and
shr
cli
mov
xor
mov
mov
jo
or
imul
mov
cmp
fnsave
cwtl
imul
adc
testl
push
sub
iret
loop
cli
xor
push
test
inc
movsl
cmp
pusha
stc
rolb
gs
sahf
je
or
cmp
sti
popf
xor
lahf
sub
mov
dec
fldt
das
lret
mov
fstpt
in
add
scas
push
rcr
dec
mov
add
add
mov
sbbb
insl
nop
sub
pusha
xchg
jno
je
jb
jmp
jmp
fwait
inc
in
adc
jmp
jbe
lcall
mov
imul
push
cmp
ret
fistpl
sub
mov
std
lea
shlb
add
iret
xchg
aam
mov
lcall
cld
adcl
cwtl
pop
adc
cmp
inc
jae
jmp
mov
out
pop
push
inc
aas
in
cli
push
das
in
fldl
lret
fmul
iret
cmc
loope
cmp
fiaddl
sub
in
mov
les
stos
in
je
cmpsl
cmp
dec
loopne
jo
jmp
jmp
xor
mov
dec
data16
imul
inc
aas
inc
std
xchg
arpl
sti
cmp
jle
test
rol
sbb
push
ret
push
mov
mov
jo
ret
and
mov
scas
xchg
lret
cmp
or
sahf
push
jns
cld
push
test
adc
addr16
xor
mov
pushf
pop
mov
sti
loop
push
rep
pop
push
test
popf
xor
pushf
popf
or
cmpsb
nop
daa
flds
xchg
sub
pop
cmp
mov
adcb
xchg
ret
dec
faddl
mov
sbb
lret
cmp
stos
stos
mov
mov
ljmp
lcall
mov
aaa
push
pop
sbb
lcall
repnz
push
mov
int3
xchg
mov
cltd
sbb
inc
test
mov
xchg
adc
add
mov
test
loopne
jmp
out
out
pop
aad
lds
nop
into
xchg
dec
addr16
mov
ds
mov
pop
popf
into
in
jmp
xor
lea
and
sti
jg
rclb
pop
jp
push
loop
aad
incl
sub
adc
xchg
pop
in
mov
scas
pop
fnstenv
jecxz
pop
rcrb
pop
pop
lahf
mov
fsts
and
pusha
cmc
inc
mov
jge
dec
pop
hlt
adc
ss
push
adc
popf
pop
mov
pop
aaa
xchg
jle
push
pop
jecxz
mov
icebp
fldcw
or
pop
sti
stos
jle
pusha
mov
rorl
xchg
mov
lock
cmpsl
sahf
lods
mov
mov
mov
push
xor
jbe
mov
arpl
lock
mov
pop
push
adc
rclb
sarb
fbstp
scas
ljmp
test
mov
popa
fwait
add
cmpsb
xor
in
inc
in
jl
xor
sub
lock
sub
daa
and
pop
xor
jb
mov
xor
or
push
ficoms
cmc
lea
xor
sub
imul
rcl
jne
arpl
outsl
mov
pushf
add
bnd
outsl
cwtl
das
cli
dec
sbb
shll
aam
xor
xchg
sub
call
scas
push
shll
test
cmp
sbb
pop
rclb
nop
out
push
cmp
call
icebp
jg
mov
xchg
add
adc
aas
lods
pop
movsl
dec
fwait
enter
add
push
or
scas
pop
inc
pushf
pusha
inc
mov
mov
sbb
inc
popf
jae
sbb
mov
jp
sub
out
cmp
lods
inc
icebp
lret
xchg
push
gs
in
ja
xchg
mov
aad
das
bnd
cld
outsl
aaa
movsb
gs
fldl
test
adc
inc
loope
popfw
lods
mov
stos
cmpsl
adc
shll
outsb
add
pusha
xlat
adc
popa
ja
shl
xor
rorl
lahf
rcr
jle
adc
and
mov
push
shlb
jo
cwtl
das
sbb
dec
cmp
pop
xchg
cltd
push
inc
sarb
in
nop
jae
push
pop
rol
fmulp
test
insb
jg
cmpsl
repz
push
xor
arpl
mov
lcall
std
mov
jmp
scas
inc
insb
or
adc
and
mov
cwtl
or
fucomi
lret
nop
cmp
nop
gs
pop
repnz
adc
stc
push
pop
jo
sbb
xchg
iret
lods
aaa
hlt
fdivp
push
cltd
xlat
ja
icebp
mov
xchg
adc
mov
scas
ret
fdivl
mov
pop
out
fbstp
pop
out
mov
mov
ret
pop
push
sub
loope
jmp
dec
push
lds
mov
shrl
add
ds
mov
fst
loop
ljmp
lock
ljmp
lods
add
les
into
ja
xchg
test
cltd
push
fistpl
dec
adc
jae
stos
cld
cmp
cmp
xchg
xor
xor
repz
es
fidivrs
lods
cs
add
jb
mov
loope
pop
pop
roll
repnz
push
out
cmp
inc
lcall
shlb
push
pop
out
mov
add
jbe
pop
and
iret
mov
test
inc
je
xchg
scas
lods
inc
fisubrl
inc
popa
clc
jne
aad
imul
pop
insb
mov
je
cmpb
leave
fiaddl
jns
sbb
pop
adc
adc
insb
dec
mov
mov
bound
add
fprem
dec
test
adc
push
and
lcall
jbe
xor
mov
std
xor
jmp
jg
les
in
out
inc
xchg
dec
inc
divb
add
sbb
aas
repnz
adc
subb
stos
ss
ds
xchg
fdivrp
xchg
adc
and
hlt
in
sarb
clc
or
mov
jno
outsb
sbb
ds
sbb
out
inc
in
sub
inc
fisttpl
lret
add
les
mov
mov
or
or
or
push
adc
cmp
pop
insl
adc
mov
xlat
popa
adcl
pop
ljmp
pushf
cli
cld
pop
mov
mov
decb
imul
mov
xchg
scas
add
mov
cmp
xchg
fs
push
jne
movsl
fnstsw
pop
mov
imul
jae
mov
clc
or
addl
lock
aaa
in
das
jnp
imul
or
push
daa
out
in
xchg
push
pop
push
mov
hlt
mov
pop
jecxz
ret
xchg
inc
mov
fistpll
push
test
pop
iret
lcall
out
test
lret
mov
push
xchg
add
cmpsb
jae
cmp
dec
in
aad
dec
gs
cmc
mov
or
mov
pop
mov
dec
sub
shlb
and
je
pusha
and
inc
xor
mov
cmpl
or
fldcw
mov
in
jae
les
gs
negl
test
cwtl
xor
xor
cmp
push
jb
mov
or
jnp
sahf
je
xor
pop
sub
sub
mov
scas
fwait
xor
repz
cwtl
scas
sarl
inc
lahf
mov
mov
fmuls
sbb
movsb
ja
and
jp
lret
push
call
jle
repz
add
icebp
push
das
cmp
and
jmp
inc
call
push
jmp
sub
cmp
fnstcw
jb
das
cmp
mov
out
popa
mov
popf
mov
xchg
sub
and
mov
mov
or
movsl
cld
mov
mov
xchg
test
loope
mov
mov
stc
cltd
sub
xchg
lret
mov
sahf
push
mov
or
add
data16
mov
mov
shlb
dec
xchg
pop
mov
xchg
das
test
dec
pop
out
add
pop
mov
shrb
lea
cmc
push
sub
imul
outsl
dec
movsl
push
mov
clc
loop
enter
les
mov
sbb
or
icebp
nop
cmp
push
imul
mov
lods
pushf
mov
iret
push
add
sub
jo
pop
ret
add
mov
push
cmp
inc
dec
xchg
enterw
ds
and
or
sbb
inc
fsubl
iret
mov
xor
cs
push
idivb
rolb
pop
shl
inc
and
pop
cmc
cmc
push
dec
lock
sub
jecxz
and
shl
mov
pop
sahf
ret
hlt
fisubl
movsb
xchg
stos
cmpsb
mov
in
adc
pop
pusha
mov
xor
or
and
lods
mov
mov
lret
mov
popa
ret
push
jno
call
test
scas
mov
lods
aas
jge
adc
mov
mov
outsb
sbb
addr16
testb
pop
in
xor
cmp
inc
stc
nop
jae
cmp
bound
fldcw
in
jnp
mov
lock
push
add
or
in
mov
xor
inc
push
xlat
bound
lods
xor
xor
cmp
insl
cmp
cltd
int
mov
or
push
lret
cmp
push
pop
dec
xlat
hlt
lds
aam
andl
dec
jnp
inc
sbb
adc
sbb
pmaxub
ror
cmp
int3
push
das
xchg
popa
mov
cmpb
sub
dec
arpl
ret
fsubl
out
adc
inc
inc
in
jecxz
fs
adc
dec
loop
pop
cmc
mov
gs
out
push
jecxz
mov
pop
lods
and
inc
push
sbb
pop
clc
adc
sbb
mov
ds
push
add
std
dec
mov
jnp
rcrl
lods
dec
sub
pop
fisubrs
sub
xor
mov
hlt
xor
popa
sub
push
notl
push
add
out
push
fcomip
enter
insb
adc
addr16
cmovge
fwait
in
mov
call
xor
sub
mov
scas
out
scas
pop
adc
imul
inc
bnd
sub
jno
mov
jl
test
push
or
inc
test
aad
test
test
iret
jge
inc
xor
xchg
roll
mov
pushf
sarl
cltd
xor
das
cli
stos
ljmp
lock
and
adcl
or
dec
dec
sub
xor
in
out
pop
push
pop
inc
lods
ds
lea
jae
out
sub
gs
cmpsb
rorb
out
sarl
test
ret
xchg
or
sbb
mov
inc
jmp
mov
xlat
faddl
testw
jge
cld
xchg
out
push
inc
and
test
out
sbb
pop
flds
das
pusha
cld
mov
fwait
idiv
pop
je
or
popf
xor
in
mov
inc
jmp
int3
imul
cltd
inc
add
sti
lods
lock
nop
loope
aas
adc
repnz
cmp
xchg
clc
xchg
add
test
add
inc
in
xor
adc
rol
mov
fnstcw
cmp
push
arpl
or
dec
test
xchg
jb
xlat
aam
mov
push
pop
dec
rolb
jae
sbb
push
out
fidivrs
mov
push
mov
xlat
sub
fwait
or
ret
dec
dec
outsb
sbb
pop
push
dec
pop
push
dec
and
or
xchg
sub
lds
mov
pop
mov
addl
test
xor
push
xchg
pop
out
subb
xchg
das
sbb
cmc
call
pop
cmpsb
and
fsubs
xorl
rorb
and
jp
and
and
push
push
subl
andb
adc
adc
mov
lea
loop
xchg
jnp
add
lret
imul
inc
xlat
push
mulb
lods
jno
jne
sti
out
shll
add
pop
jno
mov
sbb
dec
pop
dec
sub
add
fnstsw
jns
mov
sub
jecxz
testl
pop
mov
insl
mov
imul
mov
push
movsl
call
push
daa
aad
add
sbb
mov
mov
pusha
das
add
mov
inc
divw
int
sahf
cmp
xchg
clc
and
or
inc
pop
cmpsl
les
sub
pop
mov
sub
add
ret
sarl
pcmpeqw
das
add
notl
les
testl
aam
jmp
xchg
mov
xor
mov
sbb
outsl
mov
push
pop
mov
outsb
sbb
repz
mov
sarb
pop
mov
fld
or
mov
cmp
dec
jnp
jns
call
les
insl
scas
outsb
pop
pushf
fcmovu
das
mov
dec
cs
jns
cmp
jne
cmp
iret
jecxz
xor
out
fcompl
or
inc
lea
pop
add
push
or
cltd
adc
push
dec
test
orb
shll
xchg
jb
mov
xor
jg
fsubp
cmp
rcrb
scas
addps
orb
or
push
mov
push
xor
push
jmp
sbb
jp
xchg
cli
ret
add
push
rclb
xchg
out
inc
enter
push
popf
iret
sti
dec
loope
jo
ret
insb
xor
pushf
pop
call
rorb
inc
xlat
add
xchg
loop
adc
sbb
dec
or
mov
add
leave
jb
and
sbb
xor
mov
test
incb
cmp
and
dec
add
dec
adc
mov
xchg
adc
ss
cmpsl
sti
cmpb
ret
mov
lods
std
mov
dec
cld
lods
nop
cmpsl
jne
gs
xchg
xchg
pop
enter
and
popl
adc
in
shrl
jl
rorb
adc
out
addr16
pop
icebp
mov
jns
rcr
lcall
sbb
stos
imul
daa
add
sti
push
lock
push
xchg
rorl
and
or
test
sub
and
dec
push
jmp
shll
out
adc
insl
mov
insb
add
imul
add
je
and
adc
pop
loope
negl
add
push
ss
mov
lahf
andl
push
mov
push
or
mov
jl
mov
sub
inc
and
add
fwait
mov
cltd
daa
cmp
lret
push
jp
ljmp
lret
add
adc
pop
rorl
mov
sub
xor
fdivrs
dec
aas
inc
shrb
and
inc
cld
popf
out
fldt
jae
push
jno
add
scas
mov
xchg
mov
or
xchg
rcrl
or
pop
ficoms
jno
or
jb
xor
outsb
cmpl
shlb
mov
push
dec
popf
hlt
and
adc
ret
je
jb
mov
xchg
mov
mov
lods
push
adc
mov
fstpt
jbe
xlat
pop
mov
roll
cwtl
popa
add
cmpsl
bound
in
pop
int
rcrl
stos
test
repz
loope
cld
mov
sbb
cltd
inc
stos
pushf
out
dec
cmc
adc
jp
adc
bound
push
mov
pop
xchg
pop
push
test
scas
add
fmuls
movsb
js
icebp
repz
or
popf
push
jb
mov
pop
aad
lea
lret
push
stos
ja
cs
mov
imul
sbb
add
lea
mov
js
xchg
jg
jno
mov
jo
cmpsb
sbbl
pusha
fcomps
or
cmpl
arpl
adc
into
mov
dec
and
scas
or
mov
fwait
inc
pusha
add
push
push
sub
jecxz
das
icebp
dec
outsl
cmpb
add
xlat
outsb
sbb
xor
inc
cmc
mov
mov
mov
lea
adc
mov
push
pop
movsb
outsl
fsubl
outsb
adc
xor
fisttpll
lcall
jmp
pop
lods
push
and
mov
rcl
shl
test
mov
daa
jl
jle
nop
pop
std
ljmp
and
ret
dec
pushf
push
mov
int
loop
out
dec
pop
mov
cmp
dec
mov
outsl
imul
adc
mov
outsb
pop
popl
dec
jb
xchg
mov
xchg
lock
out
dec
shlb
sahf
subb
dec
sub
daa
pop
pop
sbb
inc
cmp
mov
push
cmp
je
mov
ljmp
jge
xchg
jnp
fisubl
xchg
dec
in
add
test
aam
xchg
mov
aam
scas
movsb
lock
out
cmc
sahf
out
popa
or
enter
shrl
mov
fs
loop
lret
ss
pop
push
cs
lods
cmp
sti
cmp
pop
je
mov
dec
pushf
jns
adc
add
jecxz
pushf
arpl
push
repnz
lds
dec
js
push
aam
lock
shlb
xor
push
adc
repnz
sbb
fldt
sub
scas
inc
data16
jp
fcomps
sub
inc
stc
pop
cmp
outsl
xchg
jno
movsl
sub
into
outsb
mov
imul
rol
int
jg
aad
pop
lods
jns
pop
insb
fmull
xchg
negb
aad
push
lret
aaa
orb
mov
cltd
sub
and
cmp
aas
ds
push
inc
mov
cwtl
lahf
mov
mov
idivl
pop
test
mov
and
leave
lods
fnstsw
jp
jns
inc
push
pop
cmpsl
push
push
js
jb
int3
jne
cmc
shlb
shlb
xchg
sbb
mov
cltd
and
and
jnp
stos
mov
lret
addr16
scas
mov
stc
or
fs
call
testb
or
sbb
fcomp
jae
mov
shr
push
cmp
jmp
dec
jg
xor
or
cwtl
and
cmp
jmp
inc
gs
pop
imul
add
xchg
mov
in
das
repnz
icebp
sbbb
loop
ds
push
repnz
mov
popa
mov
fdivrl
and
test
cmp
sbb
xchg
and
push
xchg
fstpl
pushf
mov
xor
cmp
cmp
cmpsl
pop
xor
js
out
call
push
in
notb
push
inc
mov
xchg
and
adc
ss
dec
mov
cmp
out
pop
in
jmp
sahf
mov
jbe
adc
pop
xor
inc
jno
nop
jnp
adc
xchg
mov
mov
jl
jnp
sbb
rorl
dec
lahf
data16
lock
push
xchg
inc
arpl
pop
into
cmp
ljmp
out
sub
dec
xlat
out
in
out
sbb
cmp
in
inc
add
xlat
fdivl
fs
insb
sbb
mov
cmp
into
leave
hlt
jbe
xchg
sub
pop
push
pop
mov
sub
mov
ret
stc
popa
test
sub
imul
inc
cmp
out
add
cmp
pop
and
out
jns
pusha
enter
jno
xchg
mov
mov
addr16
sti
mov
decl
test
adcl
in
neg
call
les
push
loope
call
mov
add
popf
mov
aad
push
hlt
xchg
push
in
movb
rolb
jge
dec
mov
test
lret
inc
lret
push
inc
jmp
fimuls
jmp
repz
lock
mov
jecxz
aas
lods
adc
mov
lock
xchg
mov
in
sub
imull
repnz
push
jg
jnp
or
cmpsb
xchg
lods
push
test
gs
push
mov
fistpll
popa
mov
fisubs
lret
test
fnstenv
repz
daa
mov
push
test
pusha
mov
push
mov
data16
mov
sub
ficoml
test
cs
iret
mov
add
shl
cli
push
sub
in
orl
jg
or
cmpsb
or
hlt
loop
inc
enter
push
cmp
scas
xor
sub
push
jmp
out
insl
outsl
sub
sbb
sbb
mov
lea
mov
sahf
sub
sbb
sti
pop
sahf
sub
jp
lret
pop
pushf
sbb
cmp
gs
or
jecxz
add
insb
add
lock
xchg
sbb
insl
adc
push
mov
fistps
lods
dec
add
xchg
and
pop
mov
inc
jge
shll
cmp
ret
outsb
mov
addr16
ret
inc
sub
or
add
dec
pop
outsb
pop
in
and
xchg
mov
push
inc
inc
mov
sbb
in
lahf
mov
mov
mov
or
xor
and
add
mov
popf
sbb
jmp
sub
push
jge
mov
popa
loopne
test
xor
mov
sarl
call
in
pop
pop
stos
add
mov
cmp
and
add
test
mov
sbb
pop
jno
pop
sub
sbb
std
insl
out
xchg
sub
dec
pusha
insl
add
je
insb
xor
outsb
adc
or
jbe
jnp
pop
mov
and
inc
notb
gs
cmp
pop
lods
inc
sub
xor
lret
adc
pop
push
pop
test
adc
push
int3
dec
inc
and
jno
into
and
fwait
mov
xor
sub
lcall
pop
lahf
pop
aaa
nop
xor
shrl
loope
push
and
cwtl
push
aaa
cwtl
dec
push
lret
out
cld
cld
xor
inc
adc
mov
mov
cmp
cmp
lods
sub
dec
pop
out
inc
sub
stos
jne
cltd
test
fmul
push
adc
icebp
sub
addb
loop
and
out
insl
mov
dec
lds
repz
lahf
push
iret
movsl
pop
mov
test
or
cs
xchg
xchg
pop
repz
or
dec
imul
mov
repz
pop
movsb
pop
lds
dec
dec
lahf
jae
push
movsl
add
inc
mov
ret
pop
mov
sbbl
mov
ficompl
inc
mov
add
lahf
mov
and
push
inc
mov
push
stos
xchg
enter
xor
push
jne
pop
xchg
lret
sti
repz
sub
and
mov
mov
sahf
movsl
in
aam
ja
ds
movsb
jg
xchg
lret
dec
mov
jne
dec
imul
xchg
std
adc
push
pop
imul
cmp
notb
orb
pusha
mov
loope
test
mov
jo
loop
mov
cmc
mov
sub
in
dec
and
in
sbb
insl
push
and
pop
lds
xchg
xor
inc
ljmp
push
sbb
xchg
outsb
inc
xor
iret
mov
push
ja
sbb
rclb
add
dec
in
shlb
xchg
adc
jmp
add
in
cwtl
incb
or
into
mov
or
dec
jg
out
outsb
inc
mov
int3
repnz
xchg
mov
add
clc
push
jge
push
mov
fmul
pop
int3
sub
sahf
push
sub
mov
sbb
jecxz
cmp
mov
fsubl
popa
cltd
aas
or
ret
sbb
and
fsubs
jle
jmp
mov
fdivr
roll
mov
mov
pop
mov
cmp
add
jl
add
rolb
push
sub
cmp
icebp
es
sub
mov
xchg
daa
mov
lcall
stos
cli
xchg
sbb
push
arpl
xor
fwait
sti
test
mov
sbb
add
std
in
incl
sarb
inc
popf
inc
jo
sti
jmp
in
inc
repnz
inc
out
enter
xchg
js
mov
into
push
data16
sub
fisubrs
loop
das
stos
xchg
add
sub
push
xchg
enter
mov
arpl
rcr
mov
mov
in
pop
adc
adc
gs
fcoml
cwtl
inc
push
push
pop
out
mov
jg
adc
insb
mov
push
clc
es
cmp
pop
cmp
cmp
jne
pop
cmpsb
push
mov
and
pop
jg
fnstcw
loope
jae
lret
movsb
push
xchg
test
pop
sbbl
and
lea
push
push
je
xchg
push
or
sbb
jecxz
adc
fdivs
stc
sbbb
push
pop
sahf
fsts
cwtl
push
inc
ljmp
xor
dec
clc
adc
push
std
xchg
lds
mov
xorl
or
test
xchg
mov
jb
xor
cmp
mov
and
andb
jecxz
mov
lods
and
xor
loop
testb
or
and
jo
adc
mov
aad
out
hlt
jg
fists
mov
inc
mov
test
in
jl
nop
ja
xor
stos
xchg
push
xchg
add
jge
push
imul
bswap
sub
lods
pop
sahf
fisttpll
and
cli
insl
inc
mov
cld
gs
leave
enter
mov
jne
cmc
pop
jae
push
popf
out
add
dec
sbb
out
jb
adc
test
mov
mull
ret
cs
mov
mov
loop,pn
xchg
data16
jnp
mov
sbb
fcoms
cmp
xchg
adc
adc
out
bound
jno
dec
sub
mov
imul
aad
leave
xchg
jge
call
dec
bound
sbbl
out
mov
mov
sub
mov
lods
stos
jbe
adc
fldcw
popf
jbe
sub
xor
stos
dec
movsb
out
adc
and
dec
lea
out
adc
and
data16
jo
mov
notb
xor
sub
cmp
jecxz
clc
xor
loope,pt
mov
int3
cs
enter
mov
add
add
xchg
xchg
mov
test
aas
xor
cmc
enter
xor
inc
dec
mov
sbb
jle
add
xor
outsl
ss
inc
jne
leave
jb
addl
push
fadd
inc
push
cmp
call
aad
sbb
mov
mov
xchg
push
mov
mov
pop
rolb
add
fisubrs
cmp
scas
rcrl
dec
or
jle
call
dec
cmp
out
xchg
in
mov
test
lret
mov
push
jns
loopne
aam
stos
loopne
shll
mov
out
sub
inc
dec
inc
fstl
pop
int3
mov
lods
ljmp
scas
add
bound
push
and
fucom
xchg
xor
jg
mov
mov
push
rclb
shl
cmp
jecxz
cmp
nop
cmp
rorl
lahf
mov
or
xlat
pop
push
popf
dec
jge
adc
push
in
and
test
in
pop
fsubp
sbb
sbb
add
pop
jbe
inc
leave
pusha
js
out
xorl
movsl
inc
sbb
dec
sub
pminub
iret
cmpsl
sarb
pop
mov
scas
push
les
cmp
aad
push
pop
pop
mov
ja
mov
sub
mov
jp
fstps
rcl
sbb
lret
jl
add
inc
sbb
push
xor
sahf
pop
sbb
scas
pop
cmp
subl
cmc
in
or
lret
sbbb
out
int
mov
adc
jne
fnsave
and
int3
sti
xchg
push
mov
sbb
popf
and
std
jno
sub
jl
outsl
out
daa
xchg
sub
or
dec
cmpsl
rorl
pop
stc
jle
xchg
mov
std
cmpsl
clc
bound
rclb
std
aam
mov
pop
test
push
sub
cmpb
or
nop
cmc
and
pop
dec
in
mov
mov
mov
iret
orb
stos
xor
inc
cld
mov
das
inc
jno
arpl
sub
mov
jae
aas
mov
sbb
pop
xchg
mov
cltd
cmc
dec
xchg
insl
nop
notb
scas
mov
hlt
push
bound
mov
dec
shll
pop
out
cmp
rcr
mov
mov
inc
push
mov
pop
movsb
xchg
dec
mov
jbe
mov
fs
movsl
push
push
ficompl
das
or
jmp
jae
lods
in
test
lahf
and
movsl
icebp
adc
xchg
mov
repz
pop
mov
inc
push
push
adc
ficoml
stos
or
out
pop
lds
sub
jmp
xchg
lods
pop
loopne
popf
sbb
in
popa
and
insl
lock
inc
testl
mov
in
jmp
pop
pop
stos
jne
popa
movsb
rclb
push
mov
clc
pop
adc
dec
nop
imul
dec
inc
mov
ficoms
cmp
negb
popf
jno
pop
jge
iret
cmp
test
mov
push
mov
push
pop
out
imul
das
stos
sub
pop
stc
cmpsb
add
jbe
shr
add
push
je
inc
push
jge
add
imul
fwait
sti
mov
push
mov
mov
push
add
mov
fwait
lods
lea
pushl
jmp
and
jg
nop
pop
data16
push
out
push
nop
getsec
jge
and
xorl
inc
xor
mov
sti
shlb
jmp
in
or
push
adc
movl
aam
push
icebp
adc
test
push
inc
adc
enter
sub
lds
cmp
jle
test
push
loop
push
movsl
sti
xchg
add
popa
stos
inc
or
arpl
lock
fisubrl
lret
cld
xor
je
mov
inc
ljmp
sub
pop
push
mov
es
outsl
test
jae
push
cmp
out
sub
dec
mov
add
lock
int
fwait
adc
aam
xor
pop
cmc
xchg
mov
dec
out
outsl
xchg
lods
mov
int
mov
fmuls
pop
cmp
stos
inc
cmp
out
jmp
test
mov
fdivrs
cmp
ret
add
loope
pop
and
shll
xor
mov
or
lret
lcall
test
cmp
hlt
jg
jge
adc
mov
test
push
lahf
inc
fisttpl
or
inc
inc
push
jmp
fwait
xor
pop
repnz
les
repz
cs
or
push
and
adc
jmp
or
imul
andl
push
stc
out
loop
lret
xor
add
cmp
and
or
stc
lods
push
add
popf
or
fs
imul
xor
js
stc
inc
adc
sahf
xor
out
mov
js
sbb
into
push
movsl
mov
xlat
in
shl
out
mov
xchg
scas
fs
xchg
dec
xchg
pop
ja
push
scas
fistps
pop
mov
add
aas
sbb
jne
insl
mov
popf
sub
jmp
nop
add
insb
cmp
sbb
mov
dec
mov
dec
cs
out
mov
xchg
add
rcll
inc
mov
jo
es
sbbl
inc
stc
dec
imul
sub
mov
mov
jl
rcrl
add
fwait
push
fsubrs
hlt
test
jne
xchg
clc
imul
mov
in
cmp
in
lods
pop
loopne
or
shll
pop
inc
push
pop
jp
pop
nop
xor
stos
mov
dec
xor
lcall
aam
fisubl
pushf
popa
mov
adc
add
cltd
cmp
out
pop
in
clc
mov
fcmovne
stc
sarb
rolb
push
add
es
outsb
and
loope
repz
in
cs
mov
les
repz
dec
dec
cmc
loop
pop
adc
jge
enter
in
pop
add
mov
sahf
and
das
fidivrs
and
dec
inc
in
lcall
dec
rcll
lods
inc
sub
jp
inc
xor
mov
sbb
mov
pop
and
jle
imul
xchg
add
pop
dec
jb
dec
repnz
cmp
and
jne
cld
fistpl
xchg
mov
or
and
mov
push
arpl
pop
pop
cld
push
jg
rcl
imul
iret
addr16
sbb
mov
imul
push
xor
jae
ljmp
nop
mov
dec
xchg
out
add
xchg
andb
dec
or
cmpsb
loopne
pop
lahf
sub
mov
fsubs
mov
pop
mov
xor
or
xchg
cmp
jge
mov
mov
mov
jge
push
gs
jmp
jmp
xor
and
jmp
mov
pop
add
andb
movsl
aas
push
push
jae
aaa
hlt
inc
dec
fcompl
sahf
pop
pop
jg
lcall
push
bound
addb
pop
out
push
shl
subb
in
mov
mov
pop
sahf
cmpsl
es
insb
mov
bound
std
xchg
hlt
aas
out
inc
cmp
push
fcomps
inc
pop
dec
push
push
shlb
push
mov
imul
sub
jne
jo
xchg
fcomps
cmpsl
outsl
xor
popf
jle
les
add
mov
rorl
mulb
imul
ret
repz
jge
cltd
shlb
shr
std
add
dec
bound
inc
or
sub
cli
mov
dec
fisttps
outsb
mov
pop
cmc
mov
dec
rcrb
lds
subb
fldl
pop
jo
out
jne
sbb
mov
insb
and
mov
test
mov
xor
lret
inc
adc
jae
es
lods
popf
out
fistpll
and
rclb
test
ja
repnz
test
pop
xlat
jmp
adc
jecxz
enter
in
rorl
add
cmpsl
repnz
ret
push
pusha
sub
cs
jnp
mov
pop
adc
nop
out
pop
xchg
cltd
pusha
daa
inc
mov
xchg
hlt
shrl
repz
dec
fstpt
adc
and
movsl
cmp
fwait
shlb
ds
out
jp
call
loopne
nop
inc
inc
lods
add
sub
xchg
sub
aad
daa
mov
xor
fldt
mov
jg
arpl
jmp
adc
and
add
fistl
es
or
addb
imul
cmp
aam
mov
es
gs
int3
or
pop
daa
mov
sub
pop
jne
sbb
xchg
inc
xchg
ljmp
loope
insl
daa
mov
lock
shrl
push
mov
dec
xor
addr16
jmp
sub
jo
push
int
jle
lsl
push
add
and
pop
sub
sbb
test
dec
scas
adc
and
or
lods
inc
pop
xchg
mov
inc
or
jb
fmuls
aaa
adc
mov
test
je
stos
inc
scas
sbb
stc
adc
or
or
flds
or
or
dec
xchg
out
loop
cmpsb
xchg
mov
into
jp
arpl
in
pop
test
lods
xor
mov
xchg
adcb
popl
insb
jecxz
jmp
push
sbb
xor
and
movsb
jnp
push
mov
xchg
cmp
dec
push
cli
notb
cltd
test
pop
fs
sti
pop
pop
xchg
xchg
adcb
test
hlt
fld1
pop
inc
fwait
push
push
popf
xchg
push
aas
pop
or
dec
pop
daa
or
xchg
mov
iret
movl
jp
cmp
jg
pop
mov
mov
push
fst
imul
push
bound
mov
push
ljmp
popa
lock
sbbl
sbb
lret
pop
cmp
mov
cmp
cmpsb
mov
scas
shll
cwtl
inc
hlt
ss
shll
sahf
xchg
outsl
ss
xor
jae
int3
js
mov
fcomip
xchg
cmp
fbld
mov
and
jne
mov
inc
inc
dec
sarl
and
sbb
mov
cwtl
shll
mov
xlat
out
xchg
cmpl
mov
lods
test
lahf
addl
cld
pop
fcomi
subb
jmp
aad
inc
mov
loopne
icebp
pushf
insl
push
out
hlt
xchg
scas
pmaxub
dec
ds
pop
mov
loopne
push
mov
dec
scas
out
adc
xor
push
inc
pushf
ret
mov
push
repz
lahf
xchg
inc
push
in
dec
out
jae
out
shrb
ljmp
jno
test
push
xor
sub
jecxz
mov
imul
out
cmp
in
push
test
mov
push
cmp
xchg
fdivrl
in
dec
ss
jle
pop
lock
xchg
add
gs
movsb
push
shlb
into
jnp
mov
xor
dec
sub
xchg
add
lret
loopne
outsl
cwtl
aas
pop
imull
mov
mov
cmc
add
jge
jmp
movsb
push
shrl
mov
sarl
pop
cmp
add
jae
mov
cmp
cs
pop
push
jb
xchg
lcall
js
push
push
dec
outsb
lock
pop
jmp
loope
dec
lahf
iret
pop
insl
scas
xor
dec
adc
sbb
imul
ds
push
xchg
inc
cmpsl
arpl
std
shll
xlat
dec
push
and
sub
lods
insb
add
xor
mov
inc
insl
lcall
scas
arpl
xchg
mov
mov
sbb
sub
and
aam
lds
adc
mov
xchg
jb
xor
jle
outsb
jae
mov
hlt
mov
lcall
clc
sub
and
add
push
rcll
sub
mov
mov
xchg
icebp
inc
sti
push
mov
push
ret
je
in
and
xchg
fdivr
push
push
sub
push
sahf
pop
pop
dec
add
out
bound
mov
and
jmp
test
in
mov
and
mov
shlb
xchg
dec
jo
mov
mov
xchg
loope
pop
pmullw
cmpsb
cmp
lahf
outsb
ficoms
mov
mov
mov
xchg
enter
jl
popa
xor
push
and
or
es
test
dec
cmp
jnp
add
pop
xor
fsub
cmp
pop
push
call
or
mov
cltd
sub
ja
push
vprotd
int
int
shlb
jmp
dec
mov
cmp
cmp
sbb
xor
insl
xlat
outsb
lahf
scas
pushf
repnz
cmc
dec
ret
xor
es
mov
lods
jmp
scas
mov
push
xor
jge
lret
mov
rcrl
into
mov
push
jmp
or
and
dec
sldt
cmp
dec
ds
out
inc
sbb
pushf
stos
outsb
adc
hlt
cmp
add
add
pop
mov
ret
divl
pop
cwtl
sbb
inc
xor
jo
xchg
out
adcb
jl
clc
cmp
pushf
sub
lea
out
mov
mov
dec
loopne
and
jge
iret
inc
inc
xor
mov
iret
loop
fs
pusha
dec
movsb
push
std
xchg
fisubs
pop
sahf
cwtl
lds
mov
std
and
push
jge
adc
push
in
jb
dec
rorb
jne
mov
dec
dec
adc
cmp
inc
jge
sbb
mov
xor
inc
pop
mov
dec
inc
mov
inc
or
or
adc
lahf
das
adc
and
imul
inc
loop
adc
push
inc
imul
out
push
dec
mov
aaa
cmp
xchg
xor
cmp
xchg
lods
insb
cmpsb
dec
push
inc
dec
in
fsubrl
int3
pop
insb
jl
inc
mov
xor
mov
std
sub
inc
test
or
and
test
xchg
aas
icebp
or
roll
dec
push
cmp
jae
movsw
and
out
cli
dec
in
and
sbb
xchg
inc
data16
adc
addr16
lock
inc
fldenv
jnp
lret
testl
mov
in
test
scas
inc
leave
pusha
js
lahf
push
lcall
jmp
out
sub
sbb
movsb
outsl
push
inc
and
jnp
lods
mov
cwtl
call
and
jbe
and
add
xor
sbb
sbb
sbb
inc
imul
shll
in
cmp
sub
das
push
lret
repnz
jg
jo
jns
xchg
and
sti
clc
lret
sti
sbb
mov
jae
mov
hlt
xchg
cmp
lds
pop
in
push
xchg
push
call
int3
imul
sub
xchg
sahf
mov
rorb
or
jle
ds
xchg
daa
cmp
pop
scas
ret
lcall
ret
jle
test
sbb
ss
jle,pn
sbb
push
vxorps
adc
mov
shlb
mov
xor
test
mov
sarl
iret
push
movsl
or
xlat
cmp
xchg
scas
sbb
or
loopne
mov
sub
cmpsb
sub
jmp
add
or
sub
pusha
in
jecxz
xor
jg
lahf
adc
xchg
xor
or
pop
jno
cs
xchg
mov
add
cli
in
stos
jp
jne
cmp
sbb
iret
push
cmpsl
je
ljmp
inc
aas
cmpsb
les
xor
xlat
dec
mov
cmc
mov
push
popf
popa
jb
repnz
push
and
or
dec
fwait
jns
mov
lds
rorb
adc
aaa
out
xor
xchg
cmpsb
cmp
jmp
cmp
mov
mov
mov
or
notb
sub
and
cmp
cmp
add
jle
xchg
dec
leave
jo
and
xchg
cmpsb
out
inc
cmpb
lods
mov
insl
lods
pop
fdivr
or
xorb
dec
out
jge
insl
scas
xor
ficoms
jbe
ret
cmp
jecxz
adc
lret
std
sahf
and
pop
dec
pop
inc
and
cmp
es
pushl
out
ljmp
into
pop
mov
inc
dec
cmp
push
mov
js
fcoms
mov
ss
shlb
sbb
call
sub
imul
push
xor
sahf
mov
add
daa
jmp
push
mov
cli
jne
mov
and
pop
lea
mov
cmpsb
sbb
push
mov
pop
xor
arpl
mov
dec
mov
cltd
push
out
sbb
lahf
testl
xchg
aam
inc
int
or
jecxz
jp
mov
mov
scas
add
mov
pop
push
push
lcall
fs
js
xchg
test
fisubrs
movl
ds
inc
inc
int
pop
aaa
pop
orl
pop
loop
jne
pop
stos
std
lock
mov
push
dec
mov
sbb
inc
jl
into
shlb
aas
mov
sub
int3
orl
enter
movsl
sbb
test
je
or
clc
adcb
push
mov
hlt
xor
push
sub
xchg
in
icebp
dec
push
loope
sbb
mov
jne
adc
sbb
ficompl
xchg
test
aad
movsb
add
jne
push
cmc
int3
jnp
mov
mov
pop
jb
mov
cwtl
inc
and
or
clc
jl
popf
data16
mov
mov
andl
negl
mov
fstps
xchg
mov
cltd
jns
fwait
sbb
sbb
ja
xchg
cs
mov
sahf
imul
clc
sub
out
xchg
roll
loop
mov
cmpsl
and
jae
dec
add
pop
mov
cmp
xor
mov
push
nop
call
rorb
sub
push
push
mov
int3
sbb
rolb
mov
mov
movsb
test
addr16
mov
out
jne
push
aaa
subb
dec
clc
inc
subl
and
lahf
stos
call
and
mov
lcall
js
adc
and
and
je
and
and
addl
cmp
js
sahf
aam
fmul
loop
hlt
dec
adc
popf
test
jno
add
push
cs
repz
inc
ss
movsb
pop
test
xchg
sub
mov
leave
xor
jne
mov
imul
jge
out
rolb
xor
push
ret
push
nop
fildl
mov
sbb
push
xor
dec
jp
in
add
mov
mov
ja
scas
inc
push
popa
dec
jmp
stc
int3
loopne
sti
push
inc
sub
mov
or
sarb
xchg
test
add
cmpsb
movsl
or
sub
mov
dec
scas
pusha
gs
or
mov
push
mov
and
fsubr
dec
inc
imul
loop
dec
push
jle
inc
dec
or
adc
mov
movsb
sahf
lods
mov
dec
jecxz
cmp
push
sub
sbbb
mov
ret
jg
mov
outsl
push
rcrl
insb
pop
sbb
jp
fnsave
imul
mov
dec
pop
js
cmpl
pop
lock
and
adc
xchg
insb
rorl
xchg
cmp
add
in
jl
cld
lds
in
jge
dec
icebp
mov
xchg
call
addb
xor
mull
sub
arpl
incl
xor
inc
mov
xchg
mov
sarl
sti
call
iret
jbe
enter
andl
lods
pop
fsubr
jb
mov
inc
dec
pop
int
cmpsl
cmp
aad
inc
lahf
div
ret
sbb
sbb
pusha
les
ret
jno
pushf
xchg
imul
cmp
push
pop
lret
and
in
push
fnstenv
cmp
leave
xor
or
test
in
mov
xor
push
fbstp
xchg
inc
jmp
xor
adc
dec
cmp
je
loopne
mov
pop
xor
sbb
or
test
mov
popf
sub
mov
aam
push
aas
mov
insl
in
and
sbb
mov
mov
add
mov
xor
lret
push
mov
bound
mov
sti
loope
jmp
push
push
out
jg
and
fdivs
sarl
cmp
popf
xorb
mov
lret
jp
pop
push
lods
sbb
sbb
imul
jge
mov
cmp
adcb
mov
mov
or
sbb
icebp
lcall
push
stos
jne
push
lods
divl
lods
add
push
cmp
out
mov
ffree
frstor
stos
push
std
decl
daa
fisubrs
cmp
mov
mov
cmpsl
pushf
in
test
push
lahf
add
sub
pop
fidivs
cli
loop
fidivrs
dec
pop
movsl
imul
outsb
das
inc
pop
mov
loope
sahf
in
pusha
push
mov
mov
stos
push
jno
mov
inc
jle
out
ss
mov
sbb
xchg
cmp
les
hlt
psrlw
mov
mov
shrl
mov
insb
xchg
enter
jo
es
incl
daa
jle
xor
push
cltd
pop
push
pop
loopne
sub
cmpsl
sub
jg
inc
push
pop
shr
inc
inc
in
jno
xchg
mov
fyl2x
adc
sub
fidivs
pop
xor
mov
dec
in
sub
fcmovnb
cs
sub
dec
icebp
insb
div
mov
push
movsb
imul
decl
adc
mov
roll
jnp
dec
jmp
fists
adc
or
test
jb
mov
cmpb
mov
orb
inc
sub
sub
and
aaa
pop
pop
insl
mov
mov
pop
es
cltd
enter
insl
or
add
sarl
icebp
in
out
gs
vmwrite
inc
shrl
dec
xchg
jle,pn
int3
fbld
mov
or
jg
push
sub
mov
xor
sub
scas
xchg
outsb
push
jl
add
roll
popf
ret
ljmp
pop
movsb
jno
mov
int
xor
gs
xchg
hlt
leave
leave
scas
ds
in
push
adc
shrl
and
lcall
in
or
jl
or
out
jp
into
push
add
es
jno
hlt
adc
fstpl
sub
sahf
adc
leave
lods
sbb
dec
xchg
cmp
in
shrb
daa
jo
mov
pop
pop
xchg
adcb
inc
adc
lret
fdivp
jp
adc
incl
pop
fwait
cmp
jbe
std
insl
add
std
mov
sub
pop
mov
pusha
insl
ficoml
xchg
mov
aam
jg
push
xor
inc
push
mov
jns
push
enter
shl
mov
mov
fists
lods
ret
jne
cwtl
push
dec
fadd
ds
jmp
inc
add
mov
push
jmp
xlat
jbe
and
in
push
repnz
cs
or
push
mov
sbb
xor
testl
cmpsb
sub
test
add
daa
xchg
jg
adc
xlat
mov
lock
pop
xchg
inc
fstpl
frstor
adc
inc
imull
movsl
lods
ljmp
mov
inc
pop
jbe
xor
dec
pushf
stos
and
push
jo
fists
notl
rcr
icebp
pavgw
mov
xor
jns
xor
ljmp
adc
dec
pusha
dec
mov
popf
inc
jno
cmpl
jo
push
aam
test
testl
out
pop
cmpsl
stc
fdivs
or
testb
sub
insb
js
push
lret
xor
or
pusha
repnz
lahf
bt
cmp
dec
add
add
test
mov
lods
inc
and
inc
cld
cmp
lret
push
pop
les
sub
pop
test
cmp
sbb
mov
adc
loop
ljmp
cwtl
mov
inc
stos
pop
jle
leave
sub
mov
fs
jmp
cmc
jo
mov
sub
daa
sarl
and
xchg
mov
xchg
mov
dec
cltd
daa
lcall
adc
inc
fildll
inc
and
cwtl
scas
popf
pop
jmp
insl
mov
rorb
pop
push
cltd
std
push
jl
pop
and
sti
out
pop
add
cmpb
or
scas
loopne
push
insb
dec
jne
mov
in
xor
mov
pusha
cmp
ret
sbb
lahf
jb
shlb
ljmp
fstps
ja
test
rcrb
xchg
jo
cmp
popf
mov
add
fcmovbe
and
lock
out
jg
adc
sub
push
mov
fistps
mov
ds
outsl
enter
mov
cmp
in
sbbl
int
mov
cmpsb
mov
fstpt
rcll
loope
xchg
hlt
call
daa
dec
addr16
cmp
enter
in
insb
sbb
add
clc
mov
pop
and
loop
ss
sahf
mov
sti
dec
pop
sub
repnz
cmp
iret
push
cwtl
add
mov
movb
aad
dec
mov
cmpsl
adc
pop
rcll
outsb
into
in
hlt
lret
data16
out
dec
insl
push
xlat
mov
rcr
pop
inc
mov
adc
hlt
cmp
jnp
or
test
mov
jnp
cmc
xchg
fcom
ds
adc
ret
lcall
or
int3
sub
mov
dec
fistl
xchg
and
imul
in
xorl
and
xorw
insb
enter
push
popf
inc
sbb
inc
jmp
js
dec
ret
repz
in
cltd
mov
sbb
mov
js
outsb
orb
cld
outsl
js
cli
jne
push
xlat
insb
push
mov
xchg
xor
ds
popa
adc
aam
test
cmpsl
daa
ljmp
dec
cs
addl
das
in
test
jge
inc
mov
xor
mov
int
or
fcompl
mov
lahf
and
hlt
lret
xlat
aam
test
int
xorb
loope
pop
sbb
jg
pop
data16
pop
mov
mov
mull
jl
ja
addl
mov
push
ffree
xchg
add
mov
ret
imul
xchg
fcomi
adc
shl
shlb
jae
inc
and
call
loope
jbe
hlt
sbb
in
mov
ret
and
int3
in
daa
lret
leave
pop
push
mov
scas
arpl
jno
push
imul
jne
sub
cltd
pop
jle
cmpsb
jle
je
xchg
jns
inc
test
dec
pushf
sub
call
xor
fwait
outsb
inc
dec
sbb
xchg
mov
sub
cmp
push
sub
adc
insl
fmul
push
jo
into
cmp
and
inc
jb
xor
shrb
test
add
sbb
push
shrl
popa
shlb
mov
adc
sti
push
insb
sbbb
ret
cmp
imul
mov
aas
outsl
repz
das
mov
ds
cmpsl
lea
repnz
adc
aad
sub
std
mov
sbb
xchg
out
scas
fiaddl
dec
cmpsb
cmp
lret
shr
jns
xchg
arpl
and
subl
dec
test
jo
cmpsb
pop
call
xchg
jecxz
lea
je
out
xor
push
loopne
movsb
mov
clc
fdivr
and
and
mov
push
loopne
adcb
or
lds
in
jnp
jge
cmc
mov
jge
test
pop
out
and
dec
and
adc
lds
fs
pop
jmp
mov
gs
ret
loope
mov
cld
sub
jb
adc
ljmp
ljmp
jge
lods
and
rcr
jl
cmp
je
xchg
lods
out
pop
imul
out
hlt
mov
repz
test
xor
fsubrl
testb
sbb
orb
push
inc
movsl
or
and
mov
xchg
jno
repnz
or
push
loopne
xor
xor
and
or
mov
cmp
xorb
jmp
xchg
mov
mov
loop
mull
and
arpl
stos
xor
js
ds
xor
jp
xor
sub
rclb
push
sbb
mov
dec
or
dec
test
xor
repz
fwait
pop
out
mov
mov
sti
adc
ret
cmpl
fisubrl
jno
ljmp
out
inc
int3
add
cmp
sbb
jg
stos
xchg
pop
dec
push
jo
ret
repz
dec
xchg
mov
push
cmp
repnz
xor
inc
cs
aam
test
mov
inc
cltd
mov
and
loopne
rcll
mov
fwait
cmp
xchg
pop
inc
lahf
jo
xchg
popa
aaa
dec
lcall
leave
mov
mov
loop
fildl
sbb
lock
and
movsl
xchg
lds
xchg
and
enter
icebp
lock
adc
vpunpckhwd
adc
sti
fwait
pusha
test
shlb
mov
insb
idivl
cmpsb
and
and
dec
out
mov
cli
test
adc
decb
inc
addr16
nop
mov
icebp
aam
mov
data16
push
inc
sub
les
mov
imul
lods
ret
imul
xchg
and
outsl
fucompp
mov
clc
loope
lds
xchg
inc
and
add
jno
mov
daa
jne
xchg
mov
arpl
mov
in
in
add
mov
scas
out
loope
cmp
adc
pop
out
lahf
data16
fstp
lods
popf
popa
cs
sbbb
jb
sub
out
xor
jne
or
les
sub
sub
or
mov
loopne
dec
mov
xor
shrb
add
scas
mov
mov
repnz
jl
pop
dec
adc
shl
or
rolb
shr
iret
mov
cmp
fstpt
lretw
sbb
movsl
dec
daa
arpl
mov
lods
pop
mov
push
xchg
out
out
dec
sbb
outsb
std
lea
push
inc
and
inc
push
mov
cmpsb
sbb
testl
add
pop
mov
add
fistpll
push
subb
xor
and
out
push
push
int3
mov
push
adcb
lret
jb
jno
and
std
mov
fwait
xor
cmpsl
push
mov
add
insb
loop
xor
add
or
mov
push
je
pop
xor
xchg
adcb
push
js
jp
lock
jae
outsb
rorl
cwtl
stc
subb
jae
xor
sysret
xchg
or
dec
jb
sub
enter
out
dec
jo
xor
add
mov
ret
xchg
imul
into
shrl
pop
andb
xor
outsb
xchg
jg
adc
cmc
loopne
mov
or
enter
fisttps
mov
lods
outsb
lret
outsb
shrl
sub
fwait
insb
mov
xchg
jb
inc
mov
shrl
and
pop
xor
push
inc
push
jbe
fwait
lock
insb
add
loope
fcmovb
mov
dec
add
pushf
push
adc
outsb
mov
dec
int
mov
sbb
imul
pop
inc
mov
inc
rorl
imul
adc
add
pop
mov
in
sarb
xor
pop
les
mov
lds
test
in
mov
hlt
mov
loopne
sbb
data16
loope
mov
mov
and
xlat
mov
shrb
aam
xchg
add
cmpsl
sbb
or
into
bound
repnz
push
arpl
lahf
pop
pop
xchg
cmpsl
incb
add
cmc
popf
pop
sbb
or
mov
gs
add
outsl
out
fwait
push
std
dec
jns
mov
jg
sbbb
push
sub
lahf
std
pusha
and
jg
fs
add
lods
push
jb
xchg
jp
lock
leave
cld
push
popa
xchg
cmp
cmp
loope
pop
rcrb
mov
in
add
dec
in
or
cmp
sti
jecxz
add
mov
add
mov
arpl
ds
cltd
sbbl
shlb
scas
stos
inc
loope
sbb
pop
lods
enter
xor
fldt
mov
push
mov
dec
mov
test
aad
sub
sub
sub
cmp
xchg
sahf
les
or
add
pop
sbb
mov
ja
mov
cmp
bound
cwtl
scas
mov
int3
or
dec
ja
shlb
cs
inc
mov
xchg
loop
mov
sbb
mov
lcall
cmp
dec
addr16
inc
xchg
jb
dec
xor
xchg
or
test
mov
divsd
les
inc
xlat
imul
and
mov
and
mov
jmp
sahf
xchg
mov
out
mov
xchg
scas
sti
xchg
fdivrp
mov
imul
lods
rcll
inc
dec
aaa
mov
out
insb
add
xchg
insl
jno
dec
pop
call
rcrl
call
mov
andb
xchg
xor
mov
lods
decl
push
arpl
xchg
adc
in
test
jne
aas
xor
aam
sbb
mov
sbbb
push
add
push
add
es
popa
movsl
sbbl
mov
rcl
adc
jle
jle
arpl
stos
push
sub
iret
leave
lcall
adc
add
add
sub
insb
hlt
pop
jo
dec
and
testb
jg
test
addr16
or
addr16
insl
jnp
adc
xchg
rorl
push
mov
sbb
xchg
test
cmp
loop
dec
cmpb
cmp
loope
in
xchg
pop
in
sub
cwtl
test
and
xchg
push
and
pop
mov
sahf
out
mov
cmp
not
mov
mov
push
std
pop
ljmp
jne,pt
test
fmuls
add
scas
mov
sub
rcrl
add
mov
iret
push
cmpsb
js
arpl
aam
loopne
mov
fs
fadds
cltd
jb
repnz
xchg
and
dec
dec
adc
jle
mov
aam
rcll
cltd
mov
xchg
push
sbbl
xchg
xor
sub
mov
xor
push
push
inc
pop
cld
outsb
stc
cmpsb
mov
push
mov
outsb
mov
pusha
testb
or
call
inc
dec
repnz
jecxz
nop
in
pop
out
out
pop
cmp
lods
fmul
pop
sub
pop
xchg
mov
jo
pop
mov
stc
in
mov
fstp
hlt
mull
lods
fucomp
shrb
sub
inc
test
ja
movsb
lods
mov
xchg
pop
out
adc
in
sub
movsl
popf
jns
repz
loopne
call
cmp
pop
cmp
pop
movsl
ret
adc
mov
adc
sub
cmovle
or
out
jecxz
jmp
addl
icebp
popf
and
push
xchg
shrl
xchg
xor
mov
lcall
adc
cmp
mov
push
sub
outsb
cwtl
or
clc
sub
dec
fistpll
push
mov
or
lret
jb
add
mov
loopne
pop
pop
lcall
sub
mov
pusha
in
inc
adc
xchg
mov
add
cld
xchg
imul
mov
cmp
push
mov
movsb
cmp
mov
push
addr16
jno
pop
push
lcall
mov
imul
push
push
sbb
repnz
sub
or
int3
lea
jae
aad
adc
out
pop
testb
cmpl
inc
dec
xchg
std
mov
mov
xchg
jmp
mov
sarl
stos
test
in
test
mov
out
sub
push
or
dec
pop
fistpl
es
pushf
push
jo
mull
hlt
mov
cmp
sahf
pop
out
xchg
push
inc
in
mov
sarb
lret
lock
adc
add
mov
orl
xchg
es
mov
divb
dec
fs
pop
sub
negb
arpl
cmp
and
sbb
fistps
or
sub
mov
test
test
mov
mov
icebp
sbb
mov
push
mov
jbe
std
fistpl
movsb
dec
shr
das
loopne
xchg
aas
cmp
xor
outsl
push
add
inc
mov
movsb
rcr
aad
dec
pop
add
xor
xchg
adc
ret
mov
jl
outsl
xor
mov
mov
sub
sbb
mov
loope
hlt
in
cmp
pop
pop
aam
xor
pop
je
push
xchg
add
xchg
and
aad
in
mov
xchg
fisubs
xchg
lret
push
and
xor
mov
fsubrl
addr16
pop
dec
lock
mov
aas
aas
cmp
add
loop
dec
adc
sbb
cmp
jne
outsb
daa
pop
jbe
cmp
out
inc
adc
fcoms
ret
push
rcl
mov
out
mov
mov
pop
xlat
mov
mov
movsl
xchg
add
test
mov
dec
push
in
pop
test
adc
mov
jb
aaa
sub
or
jl
cmpl
jo
mov
pop
cmc
xorb
xchg
mov
cmc
into
fistl
xlat
cmpl
ss
jb
pop
in
sub
psubw
ss
cmp
lret
repz
or
test
dec
pop
and
inc
stc
cmpsl
push
out
faddp
mov
jb
jno
out
sub
lea
int
fidivl
jecxz
jbe
scas
dec
aad
dec
rcl
sbb
mov
outsb
ds
cmc
or
sub
ja
sub
xchg
lcall
mov
cmp
dec
cmpb
push
cmpsb
pop
lcall
stc
mov
mov
int3
out
pop
cmp
jns
pop
movsb
jne
push
clc
sbb
cwtl
adc
daa
outsl
insl
jno
ja
pop
into
mov
xchg
mov
cwtl
pop
repz
ljmp
xchg
and
mov
test
enter
shrb
lock
pop
fcom
lds
push
jnp
xchg
mov
scas
pop
ret
cmp
jnp
lahf
or
in
or
aaa
adc
mov
pop
mov
movsl
pop
mov
clc
out
sub
int
addr16
les
lcall
shlb
push
out
xchg
add
cmp
cli
mov
cmpsl
mov
mov
faddl
cmpsb
lds
popf
movsb
mov
cmp
sbbb
fs
out
fcomip
xchg
cmpsb
shlb
aaa
or
mov
cli
cmpl
fsubrs
imul
popf
pop
cmc
sbb
or
notl
fwait
jb
rcl
in
dec
stc
stc
lahf
in
fs
mov
popf
lods
ja
or
xchg
mov
xchg
jno
jns
sarl
adc
push
sbb
pop
push
mov
adc
outsb
mov
lahf
je
adc
jae
jp
inc
pop
cmp
add
or
imul
mull
push
lcall
ja
mov
push
push
cmp
mov
inc
xor
fildll
ret
rcr
insb
rorb
jp
mov
mov
cltd
cmp
sarb
jle
js
fildl
cltd
sbb
sar
cli
xchg
sub
push
cld
mov
rcll
sub
cltd
pop
lock
cmpsb
jl
mov
rcl
push
add
pop
lret
stos
xchg
push
push
aam
cmc
aas
xorb
mov
cld
jecxz
vminps
jge
cmp
test
push
fs
add
stos
inc
sti
and
and
leave
adc
cld
mov
ljmp
adc
jle
pop
mov
or
jno
inc
cmp
jb
in
xchg
aad
push
aas
sbb
inc
inc
jp
sub
outsb
mov
shlb
push
jle
xor
icebp
in
push
mov
cmp
outsb
inc
pushf
mov
iret
dec
sub
push
mov
xchg
fidivrl
mov
mov
fstl
pop
mov
jl
decl
mov
jnp
aas
and
jns
sub
ss
aaa
pusha
test
popf
cmp
pop
and
sub
popa
jle
jecxz
xor
inc
data16
dec
push
lea
loopne
ret
call
ja
dec
sub
mov
imul
inc
rcrl
leave
pop
jp
daa
mov
mov
clc
xchg
outsb
push
aam
xlat
mov
cmc
mov
andl
push
inc
push
pop
inc
daa
outsl
jne
mov
incb
or
stc
out
bound
popf
mov
ss
xchg
scas
mov
fcmovb
lds
int
aad
inc
test
aas
popf
cmpsl
scas
fildll
push
popa
adc
mov
icebp
xchg
call
sbb
and
mov
scas
pop
ja
fs
jb
js
push
dec
mov
rcll
hlt
shrl
xchg
dec
loope
lcall
outsb
fwait
shll
es
dec
movsl
xor
push
push
insb
sub
leave
cmc
test
mov
xchg
inc
loop
loop
ss
jo
xchg
adc
mov
stos
outsl
out
xchg
mov
nop
ss
mov
jle
imul
and
rcl
cmp
scas
ljmp
enter
cltd
lock
dec
sbb
not
std
xchg
add
adc
push
sub
xor
jne
cmpsl
pop
mov
fnstcw
lret
or
sbb
ret
pop
sub
jle
dec
nop
pop
or
push
xor
in
sub
jnp
sub
push
xchg
add
mov
lods
xchg
mov
xchg
dec
adc
mov
xor
mov
jmp
cmp
and
insb
je
dec
adc
jmp
jmp
test
jo
jbe
imull
je
cwtl
pop
push
add
mov
xchg
adc
out
std
hlt
int3
cltd
push
jnp
test
push
adc
xor
lock
and
xchg
push
inc
pop
lock
lret
push
cwtl
sbb
sub
inc
scas
adc
adc
popf
push
stos
in
clc
pop
std
adc
sbb
xchg
shr
inc
into
pop
dec
cwtl
push
inc
mov
dec
pop
xor
xor
out
imul
out
mov
inc
popf
push
fs
and
or
and
fimull
pop
pop
mov
jg
lds
loope
push
stc
mov
mov
cmc
mov
sub
push
mov
inc
xchg
and
lods
ja
roll
dec
mov
push
pop
jg
xchg
sub
mov
xor
or
jge
cld
lcall
push
sub
bound
pop
outsb
cwtl
dec
lock
frstor
pop
sbb
mov
xlat
mov
push
sub
icebp
je
adc
mov
cs
pusha
fstpl
push
inc
sti
fwait
jb
dec
mov
je
mov
pop
sbb
fsubrs
leave
orb
aas
in
push
jb
adc
nop
pop
movsl
rcrl
jnp
mov
loope
mov
cmpl
xchg
mov
ret
sahf
adc
xlat
and
lahf
and
jno
xor
fwait
lods
jae
jbe
mov
ret
xchg
adc
sahf
pop
ja
ret
call
loopne
test
mov
ljmp
lds
test
fwait
xor
or
inc
cmp
imul
in
xchg
stos
jg
adc
mov
and
push
aam
cmp
mov
mov
sbb
add
jmp
clc
mov
sbb
cli
mov
mov
cmp
stos
dec
adc
cmc
jae
push
int
test
mov
cmpl
mov
mov
arpl
dec
and
inc
inc
nop
adc
int3
adc
dec
jne
add
and
adc
repz
ljmp
lock
scas
repnz
jle
inc
push
or
fcmovnu
adc
pop
shrb
pop
xor
aad
dec
mov
subb
lret
cmp
xor
fists
sbb
mov
fnstcw
pop
test
or
pop
cmpsl
xor
push
fwait
shll
es
filds
mov
mul
add
mov
and
icebp
aas
bound
test
jb
xchg
cmpsl
ret
mov
mov
xchg
add
lcall
xlat
arpl
lods
mov
fidivs
jg
xchg
xchg
push
dec
xor
sbb
mov
mov
sbb
adc
out
popf
sbb
shl
inc
xchg
and
jbe
adc
add
mov
sti
jns
out
jns
sub
xchg
das
lret
or
fimuls
sqrtps
fbstp
cltd
dec
push
cmp
shlb
add
clc
cltd
xor
xchg
or
mov
test
inc
rcr
and
sub
insl
mov
sar
jl
cld
inc
aaa
push
subl
in
loopne
xchg
cwtl
mov
cmpb
std
cmp
rcrl
push
lea
and
xchg
in
push
sbbb
testb
pop
dec
sub
sbb
fnstcw
inc
inc
push
popa
in
jbe
dec
mov
loopne
and
retw
xchg
data16
insb
fbstp
pop
cmc
sbbl
dec
push
in
mov
push
iret
cmp
add
adc
push
mov
daa
and
adc
outsb
pop
mov
xchg
and
jle
orl
fxam
loop
add
lret
popa
std
jb
outsl
push
int3
arpl
out
pop
xchg
push
aam
lods
pop
into
mov
sbb
test
aad
push
mov
inc
shl
sti
test
repz
fwait
cmp
testl
xchg
cmpsb
les
inc
mov
pop
ret
call
adc
cmpsb
je
popa
jmp
mov
aam
xchg
and
inc
ret
push
push
ficoml
pop
xor
jns
add
cmp
clc
add
test
icebp
lds
push
cli
dec
popa
sub
repz
push
int3
cmc
mov
xchg
scas
call
mov
jmp
add
bound
mov
pop
lock
xchg
aam
inc
sub
fisubl
lret
cld
ljmp
push
adc
jb
mov
shl
cmpsb
mov
arpl
imul
xchg
mov
pop
adc
inc
ja
fwait
icebp
call
and
sbb
shrl
pop
adc
add
jbe
lea
jne
and
fidivs
cmc
jecxz
sub
add
shll
sub
adc
mov
push
stc
jo
adc
andb
push
fists
xor
pop
out
pusha
mov
cmp
fadds
push
mov
test
and
scas
fstl
xor
xchg
jb
adc
cs
fs
rcll
movsl
scas
lret
fucom
xchg
test
ja
cli
out
fsubrp
jg
inc
pop
stc
jl
lahf
scas
pop
sub
push
xchg
jo
cmc
leave
mov
outsl
cmpsb
rol
push
xor
shrl
pusha
cmp
pushf
mov
repz
in
jg
mov
int3
ficoms
test
xchg
push
sub
cmp
sbb
call
dec
bound
ret
xor
outsl
scas
ja
jns
push
and
aas
dec
shrl
dec
or
repnz
lret
pop
fwait
movsl
test
mov
inc
cltd
nop
sahf
pop
subl
loopne
in
movsl
pop
adc
xor
xor
cmp
ret
add
push
je
fcomp
lret
stc
addr16
dec
mov
cmp
hlt
loop
aad
mov
pop
imul
bound
mov
into
add
ljmp
inc
cmpsb
in
xchg
jbe
dec
adc
in
int3
sbb
cltd
icebp
push
imul
adc
push
cltd
push
inc
dec
adcb
jmp
pop
js
sbb
sti
leave
int
cmc
jp
rcrb
std
mov
push
fsubrs
icebp
stc
adc
and
or
cwtl
adc
lods
stos
add
lahf
les
jnp
sub
xchg
pushf
cwtl
cmpsl
mov
jp
pop
int
cwtl
outsb
sbb
inc
mov
pop
loope
stc
mov
mov
cmp
aad
les
adc
pusha
fmulp
fsts
outsl
jp
push
mov
insl
sbb
sub
mov
and
outsl
sub
mov
fidivl
mov
jbe
mov
in
cli
xor
add
and
loopne
lahf
idivl
sbb
xchg
sti
xchg
les
shlb
sub
sti
xchg
repnz
movsl
out
jbe
inc
das
sbb
movsb
or
movsl
sub
push
push
fisubl
dec
lds
pop
dec
pop
xchg
into
cmp
ret
popf
cld
sbb
mov
add
inc
jl
jne
xor
cmp
cmpsl
inc
pop
pop
cwtl
stos
dec
jns
push
addr16
test
mov
ds
sbb
lcall
adc
or
lea
add
push
push
mov
sbbb
test
dec
add
roll
sbb
orb
dec
daa
rolb
sbb
ss
gs
je
xchg
cmp
pop
bound
xchg
xchg
inc
call
and
push
movb
test
shlb
das
mov
sti
fs
stos
xchg
mov
and
add
adc
mov
mov
sbb
lcall
cmp
cmp
int3
orb
dec
in
or
cs
inc
xchg
add
lret
jno
push
scas
hlt
jg
lret
xor
loop
mov
in
subb
lea
loope
lea
cmp
push
fimuls
push
mov
fucomp
pushf
sar
or
or
mov
in
inc
sarl
xchg
sub
fimull
cli
ljmp
sbb
cmp
pop
mov
stos
hlt
inc
mov
pop
xchg
fidivrl
out
jb
test
sub
les
fcmovne
mov
outsb
add
mov
jne
jo
inc
inc
mov
or
cltd
in
into
sbb
push
cltd
aaa
push
add
cmp
movsb
scas
xor
fistps
sbb
test
and
pop
popf
add
fsubl
les
fsub
sub
test
test
inc
xchg
sub
xor
ss
xor
ja
jb
ss
andb
mov
imul
inc
loop
and
xchg
push
call
add
pop
out
aaa
push
roll
push
ds
imul
repnz
and
cltd
dec
ret
xor
push
pop
xorl
mov
xor
lds
dec
pop
jno
pusha
inc
jb
out
xchg
xor
es
dec
xchg
adc
xor
dec
mov
ss
fists
mov
jmp
je
and
dec
dec
xor
dec
mov
notb
out
pop
shl
xchg
out
je
mov
divl
mov
push
jne
bound
jg
cmp
push
push
js
jns
pop
cmp
sub
addr16
sahf
xor
movsb
push
push
pop
push
lea
adc
nop
dec
and
rolb
movsb
mov
cmp
mov
into
mov
and
pop
or
sbb
pop
int
adc
push
aam
lahf
imul
fiaddl
mov
pop
pop
hlt
insb
sub
xor
notb
mov
ret
cld
out
mov
sarl
sbb
ja
cmp
sbb
aas
jg
or
daa
movsl
stc
inc
mov
pusha
or
dec
fwait
xchg
pop
test
mov
jae
shlb
and
in
jl
push
adcb
mov
sahf
hlt
idiv
or
xlat
pushf
dec
outsb
pop
iret
push
mov
nop
push
and
pop
pop
xor
daa
push
dec
adc
jo
sahf
pop
ret
or
cld
sahf
xchg
mov
inc
jle
sbb
repnz
popf
cmp
in
pop
jge
jecxz
movsb
sahf
fistps
stc
inc
fbstp
fldt
sbb
insb
cli
movsl
cwtl
inc
fcmovne
dec
sti
jbe
arpl
nop
cmc
jmp
xor
jbe
push
mov
or
push
shl
pop
add
xchg
push
push
mov
add
and
xchg
cli
adc
nop
loop
dec
out
addr16
mov
inc
dec
dec
or
std
lds
sub
popa
xchg
xchg
stos
pop
mov
shl
jns
and
or
outsl
cmp
imul
sahf
mov
add
inc
cwtl
push
cltd
bound
lret
adc
stos
pushl
aad
cwtl
xchg
jle
fnstsw
xchg
ljmp
mov
mov
push
inc
sbb
cmp
add
lea
xchg
lea
xor
mov
xor
fldenv
jns
dec
idivb
sahf
mov
adc
ljmp
insl
ss
enter
pushf
call
lods
inc
sbb
and
lods
inc
imul
fistpl
or
cs
shlb
fisttps
adc
xor
sbb
iret
add
mov
lret
mov
sub
dec
mov
cwtl
int3
repz
dec
cmp
sahf
subb
push
cmpsl
dec
cmc
and
cli
shlb
push
cmp
xchg
frstor
lea
lods
mov
cmp
ljmp
imul
xchg
jmp
iret
xor
pusha
jg
les
jg
lea
movsb
mov
ret
inc
sbb
test
and
outsl
mov
jo
add
insb
mov
or
std
sahf
jp
lret
fidivl
pop
sbb
add
push
movsb
mov
xchg
out
ret
jp
cmc
je
mov
scas
add
cmpb
imul
fstpt
pop
dec
pusha
mov
imul
xchg
lds
fdivr
jnp
bswap
faddl
mov
cli
aas
pop
xlat
outsb
mov
fcoms
mov
jle
cmp
jl
xchg
imul
sbb
mov
push
pop
cmp
jno
mov
dec
adc
mov
outsl
out
data16
scas
and
push
fistps
ja
in
mov
scas
jnp
inc
xor
iret
dec
test
dec
arpl
dec
push
mov
insl
add
fstps
daa
ds
lea
mov
dec
jmp
mov
ds
fldenv
or
mov
push
mov
test
arpl
daa
xchg
adc
push
sbb
dec
lret
scas
mov
imulb
cmpsl
shl
loope
neg
mov
js
test
test
jnp
add
inc
add
cmp
lods
test
lahf
ja,pn
push
jmp
shlb
fdivl
pop
jl
rep
jge
into
aam
add
fldcw
jnp
pop
push
fildl
ja
sbb
stc
pop
cwtl
xor
sbb
mov
mov
gs
negl
mov
mov
pop
add
cmpsl
movsb
push
jge
movsb
xor
sarb
outsl
call
sub
push
bound
in
scas
and
fsubrs
sar
sarl
cmp
mov
jge
ljmp
push
mov
sbb
cmp
ds
je
cmpsl
or
sahf
popa
mov
dec
pop
dec
std
sbb
inc
fmul
movsl
sbb
js
data16
adc
push
rcrl
mov
jmp
pop
xor
loop
push
popf
mov
rolb
iret
cmp
sbb
js
inc
jb
popa
out
jmp
ficoms
add
jbe
inc
dec
mov
out
dec
aaa
xchg
loop
or
data16
sub
into
jns
sub
mov
inc
push
xor
xor
cmp
faddl
sub
adc
xor
inc
icebp
push
ret
push
ret
sub
mov
xor
add
inc
mov
sti
out
add
inc
dec
pop
jne
lock
mov
mov
cmp
stos
out
xor
pushf
xchg
vmwrite
jp
lcall
test
out
xor
nop
xchg
je
jecxz
enter
lcall
push
add
movsb
enter
nop
mov
in
push
adc
daa
push
movsl
clc
xlat
js
jne
lods
test
add
int3
and
adc
push
cmp
arpl
ret
je
pop
xor
inc
call
sbb
jns
lods
mov
loope
fs
adc
movsl
sbb
ljmp
enter
and
mov
scas
inc
push
ss
xchg
mov
jns
adc
dec
cmp
addl
sbb
xchg
adc
in
adc
aas
in
jno
out
ss
lods
mov
dec
adc
jg
jbe
xchg
pop
imul
dec
jo
js
insl
mov
mov
mov
inc
adc
sbb
pop
mov
mov
fstl
dec
rcr
and
jge
lcall
mov
gs
mov
fmuls
jnp
mov
repz
add
jmp
scas
test
mov
dec
mov
sub
sub
mov
cli
fdivrl
jne
stos
cmpsl
sbb
ret
fisttpl
mov
cld
pop
int
jb
shll
clc
mov
push
repnz
mov
pop
push
xor
sar
jo
loopne
cmp
dec
rcll
mov
or
shrb
add
push
scas
cmp
xor
cs
xchg
setno
int
add
sbb
sahf
mov
or
push
xor
sbbb
fwait
js
mov
push
fbstp
jecxz
mov
js
jns
jo
cmpps
sbbl
xor
in
mov
mov
popa
clc
inc
push
cmp
mov
push
xchg
aam
inc
fsubr
lcall
mov
ja
mov
pop
scas
sbb
insl
sub
jb
mov
std
imul
push
jne
cmpsb
das
ret
xor
xor
in
push
sbb
arpl
icebp
les
hlt
push
out
mov
push
bound
xchg
xor
rclb
mov
imul
in
mov
mov
mov
adc
dec
out
mov
pop
adc
sbb
sarb
inc
xchg
xchg
stc
scas
inc
in
or
cwtl
dec
mov
ret
jl
dec
in
jb
xor
adc
scas
mov
mov
test
jb
sbb
pop
or
outsb
jle
es
xor
ss
out
lods
out
xchg
mov
mov
shlb
sub
and
push
jmp
pop
inc
out
jno
push
sbb
mov
mulb
sub
jmp
adc
ljmp
lcall
add
adc
cmc
pop
lods
cld
sarb
cmp
push
hlt
test
in
jnp
inc
mov
mov
movsl
cli
pop
mov
outsb
movsb
fbld
lock
mov
mov
mov
sbb
lds
and
sti
roll
mov
je
das
jmp
mov
movsb
mov
dec
pop
mov
sbb
fst
clc
xchg
or
jl
xor
ret
pusha
pushf
jns
mov
int3
xor
clts
stos
jge
test
lret
and
sti
add
cwtl
push
popa
loope
imul
lret
and
ud0
aaa
in
movsl
push
jmp
repz
adc
or
push
out
mov
hlt
dec
lds
pop
imul
or
inc
jge
data16
iret
dec
pop
mov
leave
sbb
lds
stos
or
mov
xlat
cmc
int3
xlat
inc
gs
cmp
andb
rcl
inc
pop
jae
dec
pop
in
sbb
test
bound
inc
sbbl
data16
mov
jbe,pt
sub
in
inc
or
add
imul
or
jb
insl
mov
cmp
lahf
adc
in
sbb
mov
cmp
mov
sub
jge
ret
mov
or
lahf
pushf
lret
and
es
mov
rorb
in
aas
repz
pop
dec
xchg
xor
sahf
dec
jnp
outsb
andb
mov
and
lret
mov
sti
nop
adc
xor
add
jmp
hlt
adc
ror
sub
loope
dec
mov
add
mov
aam
in
push
addr16
sub
jl
arpl
lds
adc
adc
int3
xchg
xor
out
pusha
mull
and
js
arpl
jg
adc
jae
std
das
addl
ss
and
pop
outsb
les
loopne
sbbb
push
jns
dec
push
mov
and
popf
stc
or
pop
dec
adc
into
gs
push
imul
addr16
fstl
mov
cmpsb
mov
push
cli
out
sub
mov
insb
pop
jle
daa
cmp
outsl
ret
pop
sub
xchg
insl
aam
xchg
cmpsl
cs
loopne
imull
rcr
xchg
jno
js
mov
lcall
push
cwtl
sti
lret
pusha
or
lret
ficoml
adc
sbbl
mov
repnz
pop
xor
add
scas
cs
xchg
mov
inc
pop
insb
loope
ljmp
sbb
pop
inc
jbe
xchg
push
push
add
mov
mov
push
cmp
icebp
movsl
cmp
test
mov
in
imul
iret
dec
fldt
roll
inc
add
sti
movsb
jmp
cltd
scas
xchg
out
dec
dec
roll
nop
cmc
inc
dec
lock
stos
and
mov
mov
pop
ljmp
int
sbb
push
out
xorb
or
or
adc
pop
mov
add
jmp
test
inc
mov
mov
mov
or
aam
int3
fsubs
dec
mov
and
jae
les
popa
push
into
adc
movsb
jl
or
js
and
mov
outsb
imul
iret
rcl
and
andb
push
push
add
fidivs
xor
jge
push
cld
andb
inc
sbb
scas
inc
clc
adc
out
jnp
fnstsw
mov
pop
repnz
sub
insl
pop
pop
les
clc
or
mulb
pop
mov
mov
sbb
outsb
fs
push
gs
xchg
scas
pop
mov
cmpsl
or
out
jne
and
pop
ja
fs
rorl
inc
pop
add
sub
dec
xchg
mov
jle
cld
dec
mov
mov
adc
ss
cltd
jne
divb
inc
fcmovb
stos
xor
push
outsb
popa
xor
nop
cmp
imul
jo
das
divb
add
ljmp
cwtl
fsubrl
xchg
cmp
in
imul
cmp
pop
lods
or
mov
mov
cmp
mov
jmp
hlt
mov
ret
fdivp
and
xor
test
cmc
xchg
mov
adc
out
or
outsl
imul
andl
or
mov
dec
push
lea
lcall
xchg
lds
lret
decl
sbb
mov
cs
gs
gs
loopne
xor
xor
fwait
in
push
ss
movsl
cmp
ss
push
mov
jne
fstpl
out
call
repnz
sbb
adc
mov
sbb
ret
loop
adcl
pop
and
fiadds
push
mov
sub
cmpsl
sub
stos
inc
div
mov
pop
in
stos
inc
inc
or
mov
cmp
mov
fldl
movsb
mov
aaa
push
pop
adc
mov
xor
mov
sahf
test
push
movsl
jecxz,pn
adc
lahf
stos
clc
push
sub
repz
lds
test
icebp
fmull
popf
imul
xchg
push
sub
push
cmc
pop
std
xchg
add
shrl
out
pop
jne
mov
or
in
cs
sbb
movsl
icebp
cld
ret
dec
out
mov
rorb
add
mov
dec
mov
lock
mov
xchg
sub
loopne
out
adc
mov
inc
in
add
cmp
or
int3
mov
or
dec
mov
ds
cmp
aas
and
xchg
andl
and
sar
dec
das
jecxz
scas
sub
stos
mov
scas
stos
push
test
stos
fs
daa
mov
test
pop
cli
xchg
xor
and
jno
imulb
pop
arpl
jmp
adc
sbb
xor
mov
out
std
or
aam
rorl
mov
push
imul
add
mov
jge
out
pop
lret
das
mov
movsb
xor
pop
shl
pop
pop
sub
mov
xchg
mov
pop
fists
cmp
inc
or
push
dec
mov
mov
rorb
mov
mov
negl
jbe
pushf
or
fwait
imul
jne
popf
xchg
xchg
in
aam
rclb
mov
jl
cmp
icebp
xor
ss
push
mov
mov
insl
xchg
pushl
push
push
sub
loop
pop
dec
jns
jnp
jns
mov
rorb
movsb
daa
mov
stos
jbe
adc
push
inc
jae
loop
out
fidivrs
ja
ret
pop
sti
fadds
cmc
push
or
in
jnp
popa
int3
out
xor
insl
les
or
cmpsb
or
outsb
xchg
sbb
pop
fisttps
inc
lret
sti
outsl
daa
scas
lcall
and
arpl
fsubrs
add
inc
xchg
mov
out
iret
data16
popl
pop
lret
cmp
jne
ficomps
and
loope
clc
or
inc
rolb
push
mov
or
pop
push
fnstcw
dec
mov
xor
rorb
sub
cmp
jle
fists
mov
clc
add
or
stos
jg
xchg
and
bound
int
ja
or
push
inc
dec
ds
in
mov
or
xchg
cmp
out
xchg
movsl
add
je
je
xor
push
xchg
add
fld1
arpl
out
xchg
inc
lock
bound
bound
cld
rol
xor
cli
lods
test
js
js
and
and
je
cmp
jnp
push
out
fdivs
das
mov
imul
mov
xchg
lcall
cli
ret
ja
ss
movsl
nop
aas
dec
pop
outsb
and
push
sarl
and
pop
adc
int
out
je
mov
jbe
enter
push
out
pop
cmc
pop
xor
mov
add
fistps
or
cmp
mov
push
pop
ds
sub
gs
rol
pop
lods
js
add
imul
fnstenv
sub
xchg
fdiv
and
push
adc
dec
pop
inc
sub
pushf
xchg
imul
in
dec
jg
mov
nop
into
lret
pushf
mov
jnp
repnz
jb
pop
sub
insb
and
aaa
out
xchg
stos
fisubs
xchg
xchg
sbb
outsl
out
inc
xchg
xchg
push
out
js
fildl
push
ret
mov
fiaddl
xchg
push
inc
or
cmp
and
repnz
mov
int3
imul
fidivrs
pop
push
fiaddl
mov
push
mov
ret
lds
dec
jb
or
or
pop
push
in
or
into
out
add
pop
int
aaa
dec
pop
imul
outsl
pop
xchg
inc
fnstenv
jne
add
push
cmp
jo
jle
sub
jae
sbb
jns
add
cli
push
mov
adc
cltd
xor
shrb
stos
adc
imul
addl
push
jge
sub
pop
aaa
add
lahf
daa
loope
xchg
push
cmc
ds
jo
sub
clc
mov
cmp
push
mov
mov
pop
push
movsl
cmp
cli
iret
aam
cmp
pop
shl
in
push
adc
fwait
xchg
scas
pop
ffree
or
in
sub
les
mov
scas
add
bound
and
mov
mov
xchg
imul
lds
inc
ja
dec
xor
add
jg,pt
jnp
fstpt
lcall
pop
pop
popa
or
outsl
mov
or
xchg
xchg
mov
das
stc
nop
scas
orb
sahf
inc
dec
mov
mov
cltd
adc
aaa
jp
imul
add
xor
cmp
pop
in
negl
das
push
adc
inc
out
sub
cs
cltd
jbe
add
test
iret
mov
xor
sbb
xor
pushf
or
nop
add
insl
add
mov
fdiv
jg
lret
fidivs
rorl
test
lods
mov
movsl
sbb
or
pop
jg
lret
fwait
rcrl
aam
lea
repnz
mov
notl
sub
pop
enter
mov
dec
mov
or
sbb
scas
inc
test
shr
lds
aaa
pop
dec
mov
cmpsl
ds
in
nop
int3
cmp
nop
shlb
jg
out
xchg
pop
mov
mov
inc
pop
hlt
jno
pop
mov
or
inc
fbld
rcr
push
lret
fildl
shlb
adc
fnstenv
rclb
cli
jp
mov
mov
and
cmp
je
ja
xchg
shl
adc
adc
addl
sbb
sub
jl
imul
loop
pop
das
outsb
or
push
lcall
xor
stos
jmp
or
cmc
inc
loopne
and
std
sbb
sbb
xor
ja
in
xchg
decl
subb
push
push
pinsrw
js
dec
pop
shll
mov
pop
inc
and
out
test
sbb
push
dec
push
fcompl
push
inc
sar
fdivs
dec
inc
stos
jg
stc
popf
jl
leave
je
and
xor
es
xor
pop
mov
mov
push
mov
mov
sub
fidivrs
jnp
nop
push
or
data16
loopne
mov
adc
jno
mov
jmp
sbb
call
out
and
fcompl
sahf
sub
insb
ret
mov
or
ficoml
sub
lcall
xor
xchg
inc
pop
outsb
test
testl
lahf
inc
lea
scas
or
stos
push
pop
cs
inc
mov
jp
dec
pop
jp
push
lcall
inc
xorb
pusha
in
aam
xchg
push
pushf
xor
mov
add
cld
icebp
push
int3
mov
add
sarb
inc
sub
cmp
push
icebp
test
pop
jo
cmp
int3
out
jg
loopne
adc
gs
ss
stos
and
cli
fdivr
mov
mov
ret
outsb
stos
test
jbe
aaa
out
in
dec
test
add
pushl
cmc
mov
pop
stos
and
loop
cmc
arpl
dec
push
add
sahf
inc
sub
gs
cmp
rolb
jb
mov
xchg
xchg
xchg
sub
and
add
pop
addl
adc
repnz
dec
xor
loopne
pushf
popa
pop
aam
add
aaa
jb
test
pop
adc
xchg
xor
lods
aas
aaa
jge
jecxz
adc
mov
sub
cmp
inc
pop
test
ret
jmp
imul
ret
fsubrl
fbld
pop
std
xor
outsb
dec
aas
jg
jge
jno
adc
xchg
outsb
sub
xchg
adc
pop
lock
sti
pop
jnp
out
sub
mov
dec
repz
shrl
sub
and
sub
rorl
dec
xor
lods
cmpsl
fldenv
jmp
into
ss
js
sbb
jge
pop
repz
adc
push
add
dec
cmp
aaa
mov
loope
in
lea
jb
scas
mov
shrb
and
sbb
ljmp
test
mov
outsl
xchg
cltd
xchg
lds
xor
fdivs
mov
dec
cmp
xchg
loopne
cwtl
pushf
loope
out
jne
out
xchg
push
inc
xor
jmp
mov
bound
adc
test
push
dec
lock
dec
aas
xchg
sbb
addr16
pusha
clc
sbb
sbb
sbb
insb
cld
adc
mov
jg
push
push
out
outsl
aad
push
outsb
add
in
push
fcomps
ljmp
mov
mov
xchg
mov
in
loop
rorl
push
das
shlb
push
pop
cmpsb
icebp
fwait
push
loope
das
loopne
stos
js
dec
push
test
cmp
loop
inc
fstpt
sub
push
cltd
mull
insb
or
xchg
add
repnz
cmp
xor
bound
outsb
sub
mov
fbld
pop
mov
testl
stos
sbb
pop
lret
leave
and
push
cli
xlat
outsb
and
push
leave
and
sbb
push
sahf
notl
push
pushf
outsb
mov
sahf
inc
jns
or
addl
add
jl
push
outsb
add
sub
shl
imul
inc
xchg
cmp
cmp
jo
xor
xor
inc
lret
test
jmp
sbb
add
mov
lea
jmp
inc
add
leave
xor
in
in
push
ljmp
outsl
daa
mov
out
jge
pop
jne
inc
cwtl
das
jb
cmp
pop
shlb
sbb
mov
jbe
cmp
sbb
cmp
push
jno
adc
xor
popa
add
or
and
adc
add
inc
push
rorl
test
repz
faddp
cwtl
jg
inc
mov
push
mov
lea
scas
pop
mov
pop
mov
sbb
dec
fistps
jns
dec
clc
inc
movsl
cmp
repnz
dec
push
outsl
jl
jp
test
mov
ja
and
movups
adc
lcall
aam
subl
leave
xor
xor
push
call
dec
lret
mov
bound
cmc
flds
pop
inc
jae
jle
cmpsl
pop
in
gs
sub
je
sub
pop
jo
cmpsl
sub
mov
xor
mov
push
jo
cmp
pop
jmp
sub
je
sbb
stc
or
stc
and
xor
jbe
test
sbb
scas
decl
and
fdivrs
les
pop
hlt
and
pushf
xor
int
pop
mov
mov
mov
imul
addb
js
pop
cmpsb
aad
jp
cmpsl
inc
mov
jbe
mov
jae
subl
and
inc
push
dec
idivl
xorl
cmp
leave
jae
and
lret
jecxz
inc
cmpsb
mov
int3
mov
inc
dec
dec
or
insl
test
cmp
sub
jbe
sub
push
cmpl
scas
add
sub
adc
push
mov
xchg
aas
ret
pop
or
jmp
mov
dec
cmpsl
addr16
test
movsb
clc
data16
push
inc
fsubl
ficoml
cld
out
sub
testb
aam
lret
outsb
outsb
mov
int3
push
adc
ret
cwtl
sub
aad
dec
mov
cmp
rorl
dec
mov
cmp
aad
push
imul
cmpsl
scas
scas
xor
stos
jae
adc
out
mov
into
dec
in
cli
imul
addr16
lahf
xchg
sbb
push
sbb
addr16
dec
pop
cltd
cmp
dec
sbb
insb
dec
in
lret
xor
daa
mov
adc
in
mov
nop
loopne
fnstcw
shll
rcrb
movntps
lret
sub
and
fsubr
jge
dec
gs
movsl
test
pop
add
mull
dec
out
jns
inc
nop
aaa
pop
xor
pop
loop
loopne
cmp
fcomip
adc
addr16
push
adc
in
sarb
xchg
loopne
enter
lea
mov
push
jmp
jnp
mov
leave
sub
xchg
js
mov
add
dec
lcall
mov
jb
lahf
dec
movsb
inc
xchg
and
out
lret
bound
push
mov
add
and
stos
loopne
mov
inc
pop
cmpsb
mov
mov
adc
xchg
push
stos
cmp
fstps
mov
cmpsl
xchg
outsl
mov
sbb
pop
add
xchg
jecxz
test
stos
stos
stos
inc
xchg
stos
pop
lret
or
aad
inc
mov
lock
add
sbb
xor
repnz
mov
mov
push
inc
jmp
or
icebp
xchg
icebp
and
xlat
jns
dec
adc
in
sub
shll
repnz
push
call
lahf
pop
xor
xchg
dec
je
xchg
lret
lret
jbe
les
mov
inc
mov
jecxz
sbb
inc
jmp
mov
daa
int
mov
insl
adc
jno
xchg
xchg
cwtl
fidivrl
lcall
pop
xchg
xchg
xchg
into
das
cmc
rcl
pop
leave
pop
mov
rcrb
lret
and
and
hlt
adc
jb
lock
push
int
adc
pop
cmc
in
hlt
dec
jl
aad
jp
sub
jns
inc
dec
incb
iret
push
jb
lds
andl
xchg
add
cld
mov
repz
and
cmp
enter
test
mov
mov
jno
sbb
roll
mov
into
cltd
std
lret
into
stos
dec
outsl
sbb
insb
imul
mov
lock
insl
and
das
lahf
mov
mov
bound
mov
and
fcoms
int3
push
cmp
test
sarb
iret
gs
lret
sbb
xor
out
jb
dec
mov
dec
out
movsl
ds
out
xchg
xor
inc
test
test
push
add
cmp
push
mov
push
push
mov
pushf
xor
mov
push
inc
xchg
out
mov
movsl
mov
ror
and
push
imul
icebp
sti
es
js
and
and
gs
mov
add
pop
pop
mov
loopne
insb
mov
inc
in
adc
jge
sbb
lds
mov
dec
adc
add
jns
xchg
pop
sub
movsl
and
cmp
sub
mov
int
aad
out
pop
xchg
test
sub
and
pop
sti
daa
adc
add
adc
pushf
inc
scas
imul
pop
sahf
inc
pop
pushf
jmp
scas
mov
test
pop
adc
pop
imul
adc
sbb
mov
out
mov
int3
lock
lods
test
dec
cmp
insb
fildll
out
les
push
jmp
ss
jmp
jae
mov
cmpsl
or
fidivs
jp
mov
testl
pop
std
jo
test
hlt
mov
xchg
xchg
add
adc
cmpsb
and
cmp
mov
cmpb
or
sbb
mov
inc
adc
jp
nop
xor
xor
aad
fwait
mov
popf
hlt
mov
inc
subb
xchg
cmp
int3
pushl
iret
fstpt
scas
dec
mov
outsb
stos
addr16
popf
mov
pop
adc
test
push
pop
mov
jmp
test
push
jg
lods
popa
inc
sub
or
ret
add
mov
inc
bound
ljmp
pop
popf
sarb
or
ret
sbb
xor
jmp
fsubs
or
lahf
cwtl
dec
mov
loopne
mov
add
sbb
pop
scas
inc
mov
jp
mov
inc
lods
gs
fnstsw
lods
inc
notl
xor
sub
xchg
lahf
inc
rcll
push
mov
stos
pop
inc
gs
pop
jo
dec
sub
sar
outsb
mov
adc
outsl
into
inc
mov
fsubrp
mov
and
dec
iret
or
sahf
daa
filds
scas
inc
jbe
adc
cmpsb
loopne
scas
dec
add
test
cs
in
outsl
addb
mov
and
cld
mov
das
mov
leave
inc
lret
call
call
or
add
cmpsb
in
lds
jle
aas
lock
pop
push
mov
adc
sbb
cmp
aam
mov
push
pop
xchg
in
inc
test
andb
inc
call
pop
sbb
fucomp
lods
add
pusha
idivl
mov
mov
out
addr16
sbb
xchg
mov
mov
inc
or
fsts
into
in
sbb
xchg
int3
arpl
dec
add
fcmove
push
push
dec
shlb
jl
push
scas
cli
call
cmp
sub
loope
jbe
int
xchg
sub
adc
inc
or
mov
pop
ljmp
mov
nop
out
sahf
fidivs
jo
hlt
jp
movsl
iret
and
cmp
jge
sbb
or
sahf
adcb
test
fidivl
xchg
add
push
xchg
sbb
pop
test
loopne
rcl
nop
stos
push
jl
cmpsb
stos
inc
testl
add
sarb
testl
xchg
mov
arpl
aaa
add
test
sbb
mov
into
mov
lods
shlb
pop
data16
movsl
adc
les
cmp
dec
shrb
mov
fstpt
in
int
imul
cmp
insl
mov
loop
decl
xchg
dec
xor
ljmp
xor
inc
inc
insl
fwait
sti
scas
pop
inc
lret
adc
aam
in
leave
inc
bound
push
decl
in
adc
mov
inc
out
arpl
nop
xchg
testl
pusha
xor
ljmp
jecxz
mov
pop
pop
outsb
roll
insb
jnp
push
xchg
stos
ss
cld
push
pop
icebp
mov
aaa
sbbl
lret
pop
jne
rcrl
xchg
ss
sbb
mov
mov
push
aaa
data16
sbb
xchg
jecxz
je
add
sub
xor
cmp
cmpsb
popf
adc
das
ret
repnz
mov
mov
jae
push
and
shll
out
cmpsl
mov
and
push
insb
incl
ja
into
test
inc
fsubr
sub
adc
xor
addb
adc
adc
jmp
cs
sbb
aad
loopne
orb
push
lds
add
mov
test
lret
mov
lods
mov
lods
push
adc
je
ja
jb
pop
icebp
out
and
pop
call
mov
xchg
lea
jecxz
sub
dec
add
lcall
lods
stc
imul
inc
push
sahf
clc
inc
and
scas
mov
mov
into
stos
inc
fcmovne
mov
add
insb
jg
or
adc
xor
xchg
leave
rcrl
mov
in
and
sub
pusha
lods
cmpsl
pop
test
pop
jns
outsb
and
dec
add
jb
xchg
sbb
xchg
outsl
mov
jecxz
and
daa
in
out
push
lds
sarb
xchg
jns
cli
inc
cmp
ja
cmc
push
loope
mov
push
pop
scas
cmp
mov
push
stc
sub
mov
mov
pop
push
xor
ljmp
sarb
push
xor
mov
in
enter
cli
push
mov
inc
dec
mov
sbbb
insl
sub
xor
cmp
or
aaa
mov
inc
sub
adc
or
scas
bound
sub
lock
push
jmp
or
lcall
or
cmc
cmp
aaa
lcall
ficoml
call
test
loop
jb
rolb
lods
outsl
or
xchg
enter
mov
sbb
xchg
mov
leave
outsb
fcomps
rcll
cmp
fsubp
sub
cmpsb
in
cwtl
xchg
sub
dec
xor
mov
sbb
scas
and
mov
add
jle
adc
sub
scas
adc
into
in
xor
sub
mov
adc
rolb
mov
jmp
and
adc
sbb
mov
pop
shr
sbb
dec
femms
movsl
aas
xor
ja
xchg
std
shl
lds
and
push
push
ds
xchg
pop
xchg
adc
nopl
pusha
cs
iret
adc
mov
sub
inc
lret
fldcw
cmpsb
imul
mov
int
push
nop
mov
push
add
stos
xchg
mov
out
in
mov
int3
xchg
sub
jb
in
fmulp
jne
xor
mov
cltd
rol
push
and
and
and
xchg
loope
add
out
push
in
cs
adc
dec
jae
jns
xor
mov
sbbl
adc
inc
gs
xor
push
push
sub
xchg
scas
and
cmpsl
add
lock
xor
push
ljmp
ljmp
add
pop
xor
ds
sub
xchg
addb
fcoml
shrb
or
mov
mov
inc
movsb
in
sub
jnp
lds
lcall
mov
sub
pop
jl
or
xlat
and
cmp
jle
mov
dec
loope
and
std
mov
mov
ret
sbb
pop
out
int3
stc
or
cs
mov
sub
jg
loopne
leave
enter
fstpt
jp
seto
mov
fisubrl
mov
hlt
push
lods
pop
rorb
mov
and
mov
or
jg
shrb
dec
dec
aad
loopne
add
cwtl
fwait
cmpsl
clc
out
mov
scas
shrl
cmc
outsl
push
frstor
jge
push
cmp
test
pop
fadds
xor
push
aam
or
push
popf
outsl
cs
mov
outsl
sub
push
cmp
adc
cmpsb
mov
inc
loopne
frstor
lret
inc
movsb
xchg
mov
pop
jecxz
insl
sub
out
mov
ret
repnz
ja
mov
add
lock
mov
mov
fildll
adc
aas
clc
xchg
inc
pop
and
add
scas
cwtl
and
rcrb
xchg
cld
jp
xor
push
and
outsl
mov
adc
mov
out
imul
inc
cmp
push
jno
mov
mov
inc
xor
or
cmp
lret
addr16
add
jge
test
xchg
jno
pop
aaa
cmp
out
mov
adc
hlt
popl
sbb
fstps
push
repz
lods
and
bound
or
scas
inc
pop
inc
xor
sub
test
lods
xor
xor
and
in
or
mov
pop
cmp
fbstp
and
std
cltd
jmp
inc
mov
in
test
in
adc
jmp
inc
inc
dec
xorl
mov
jo
enter
ret
mov
jg
aad
out
adc
add
popf
sub
in
push
pop
mov
pushf
pmuludq
xchg
ljmp
or
sahf
lea
cmpb
test
int3
push
push
jns
lret
dec
mov
in
pushf
pop
fstl
fwait
xor
pop
fs
cmp
mov
sub
cltd
aas
ret
mov
mov
jbe
jb
ficomps
xor
cmp
prefetcht2
dec
shll
lods
mov
repnz
jge
xchg
inc
xchg
add
out
int
popf
sub
outsl
kmovw
lret
xorb
mov
fildll
stos
das
cmp
xor
add
cltd
adc
sbb
and
sbb
pop
dec
lods
ret
pop
dec
shlb
outsl
xor
mov
lret
xchg
xor
pusha
popf
jge
sub
pop
mov
pop
cmpsb
cli
cld
outsl
lock
mov
jl
decb
or
rcl
lret
cmovnp
clc
cmc
insb
xchg
mov
mov
out
ret
ficoml
orl
stc
cmp
push
push
adc
mov
and
ja
pop
test
push
cmc
mov
pop
jl
call
mov
sbb
push
mov
jp
add
sub
or
inc
ficoms
mov
xor
ret
mov
mov
pop
inc
lds
sbb
rcrl
push
test
ja
mov
pushf
or
psadbw
lods
pop
mov
adc
jnp
jmp
mov
xchg
clc
fisubl
pusha
cmp
xlat
add
xor
sbb
ss
xchg
ds
jnp
out
adc
mov
stos
jp
out
and
mov
outsl
inc
xchg
les
xor
mov
sbb
test
sbb
mov
std
xchg
loopne
out
inc
jmp
dec
mov
mov
mov
lds
fucomip
jns
out
ljmp
lret
inc
in
ljmp
mov
stos
jge
add
icebp
mov
les
lods
push
cli
orl
mov
push
test
outsl
sarb
push
add
call
mov
jge
popf
loope
mov
sbb
pusha
rclb
xchg
insl
lret
xor
sub
mov
sub
dec
push
mov
ret
adc
dec
and
xchg
sub
mov
jp
push
je
fwait
mov
sub
icebp
lods
test
adc
inc
jmp
pop
aaa
ret
out
popa
inc
fs
and
jb
popa
sarl
fldenv
mov
or
mov
wbinvd
jno
mov
xchg
mov
sub
xchg
fwait
mov
pushf
arpl
int
mov
sti
stos
clc
push
push
sub
fisubrs
xchg
push
jl
clc
sub
push
pop
sbb
add
bound
aas
jb
sbb
mov
shll
ljmp
add
dec
sbb
scas
push
pop
loop,pt
push
je
xchg
arpl
into
inc
jnp
sti
adc
xchg
scas
adc
inc
iret
aam
and
pusha
push
out
jo
mov
or
insb
jle
out
rcll
dec
mov
xchg
popf
sub
mov
in
insb
and
jecxz
orb
jbe
mov
mov
cmp
lcall
or
insl
test
les
jmp
sbb
in
negl
test
lods
dec
jecxz
jg
and
xlat
jb
and
inc
sbb
jae
xchg
pop
fisttpll
or
mov
push
jae
pop
lock
lods
les
loop
mov
xchg
xlat
inc
aam
repnz
andb
scas
pop
lds
xlat
loop
stc
es
out
cmpsb
dec
dec
push
or
mov
les
mov
sub
mov
push
enter
add
cmp
cmp
cld
or
cmpsl
adc
or
dec
xor
rcrb
mov
jmp
add
ret
shrl
int3
fstps
lds
cmp
mov
mov
imul
jno
push
movsl
cmp
push
sub
dec
aaa
fs
loopne
test
mov
sub
cwtl
or
sbb
fists
dec
cs
in
hlt
push
test
adc
inc
daa
sub
xor
sub
shld
stos
push
jb
jmp
cli
push
fcoms
cmpb
pop
pop
and
in
push
pop
jno
dec
movsl
cmp
mov
cmp
dec
cmpsl
test
pop
repz
inc
cmpsb
fldenv
xlat
and
push
cmpsb
inc
push
jg
icebp
xchg
ja,pn
outsl
iret
pop
je
xchg
xorb
and
mov
mov
repnz
and
sub
inc
fs
in
cmp
or
outsb
ret
sub
sbb
cmp
sbb
mov
in
hlt
jae
cmpb
mov
sbb
cld
aas
mov
movsb
bound
loopne
int3
es
test
lret
repz
inc
xor
mov
mov
adc
sbb
in
push
jle
cmp
jo
loopne
arpl
dec
aaa
xor
add
jbe
push
mov
mov
xchg
pop
sahf
mov
stos
xchg
fmull
mov
lret
pop
inc
data16
cmpsl
jmp
push
mov
in
cmpl
scas
inc
mov
mov
mov
inc
data16
cmp
imull
cli
xor
aas
add
scas
cmpsl
gs
sbb
mov
pusha
inc
mov
rcl
ret
hlt
fcoml
es
comiss
rclb
mov
mov
mov
xchg
mov
in
dec
push
fidivrs
aad
push
push
mov
adc
dec
mov
pusha
cmc
and
daa
enter
fmuls
cmp
jl
mov
sbb
push
bound
movsl
stos
arpl
xchg
fdivr
xchg
call
in
add
jmp
xchg
sub
adcl
popa
cmp
dec
mov
mov
jbe
jb
and
aad
movsb
pop
inc
jns
popf
fadd
pop
push
pop
shl
insb
mov
imul
pminub
sub
xchg
mov
xchg
jle
sub
lods
mov
dec
dec
inc
fdivrp
ja
test
cmp
out
stos
das
xor
je
push
sub
or
pusha
jp
xchg
js
aaa
jg
hlt
pop
aam
push
xchg
inc
jnp
cld
stos
std
js
stc
or
ror
fs
out
std
or
xlat
mov
std
lret
ret
rol
dec
test
cs
mov
mov
movsl
cwtl
pop
add
stos
rcrb
xorb
jae
aaa
xchg
jmp
xlat
mov
mov
pushf
adc
aaa
push
arpl
pushf
xor
push
mov
movsb
mov
out
aaa
push
loope
xor
adc
mov
push
dec
rorb
pushf
aad
cmpsl
jge,pt
repz
pop
jge
fcmovnb
es
lret
pop
cli
jns
divl
fld
mov
dec
adc
dec
mov
les
or
das
or
test
jae
cwtl
movsb
sti
vmovntps
pop
ja
incb
int3
out
sbb
push
pop
push
decb
pop
cmpsl
sub
xchg
xor
and
pop
jae
mov
ds
aaa
dec
popa
or
cmp
insb
popa
and
daa
shufps
and
mov
jge
test
jb
or
imul
mov
gs
xchg
push
jbe
fsubrl
dec
push
cmp
xchg
cs
add
jae
lds
gs
clc
push
mov
pop
fidivrl
jle
repz
pop
scas
out
or
lcall
xchg
xchg
lea
xlat
loop
sbb
cmp
pop
loop
mov
lret
jb
inc
inc
lods
daa
xchg
sub
add
aam
xcrypt-cbc
cmpsl
xchg
cwtl
notl
shlb
vmovlpd
es
lcall
popa
and
inc
imul
stos
out
dec
dec
cs
pusha
jge
les
lea
mov
stos
imul
mov
mov
push
paddw
sub
ljmp
mov
in
inc
jecxz
push
es
add
push
lods
inc
sub
fwait
add
or
icebp
fsubr
shrb
scas
mov
jne
imul
shll
lret
sub
nop
pop
xchg
lcall
in
ffreep
fnstsw
call
and
fwait
xor
or
aam
jge
sbb
push
pop
das
mov
dec
and
push
mov
mov
and
cwtl
inc
inc
out
out
sub
loopne
outsl
ret
out
pop
aam
dec
sbb
test
mov
pop
daa
fnstenv
lcall
adc
into
dec
or
mov
and
ret
sub
or
adc
stc
inc
sbb
mov
mov
fildll
cmp
pop
push
rol
or
pop
ljmp
inc
jb
dec
and
xchg
push
dec
jmp
lahf
cmp
iret
mov
sahf
lods
jp
xchg
adc
dec
jnp
cld
inc
add
lods
xor
dec
ds
or
out
xor
scas
jle
and
scas
ret
ljmp
lock
sub
xchg
test
sbb
jb
jl
inc
mov
insl
stc
cmp
xchg
dec
xor
je
out
add
int3
and
ret
pop
sbb
insb
jle
push
in
lahf
add
insb
xlat
scas
inc
or
dec
pop
sbb
dec
int3
xor
jo
stos
std
xchg
repnz
pop
scas
or
sbb
pop
fldenv
bound
jl
hlt
mov
outsl
push
jne
pusha
scas
lcall
xor
xchg
inc
xlat
rorl
pop
ret
push
jo
mov
data16
mov
mov
sub
aas
push
out
in
in
mov
dec
mov
jmp
ss
cwtl
out
inc
and
in
jno
lock
outsl
jecxz
aaa
push
jecxz
xor
sub
mov
rcrb
jns
adc
inc
fadds
add
mov
data16
xor
and
lahf
std
or
out
xchg
scas
cmp
out
xchg
push
cmc
into
mov
lods
sti
push
inc
sub
adc
lods
pop
pushf
mov
sub
xchg
add
popa
mov
shlb
pop
mov
mov
ljmp
jne
popa
iret
icebp
cmp
ret
mov
mov
jo
pop
xchg
mov
out
test
cmp
jbe
out
jp
subl
sbb
aaa
add
test
inc
and
sahf
mov
adc
std
jns
icebp
subb
jno
mov
insl
inc
xor
test
rcr
xchg
subl
mov
sub
std
jb
sbb
fsub
jg
pop
sub
mov
dec
mov
jo
and
vpsubsw
lock
shlb
punpckhwd
leave
popf
inc
sub
popf
cmp
and
xchg
je
cmp
mov
int
fwait
push
mov
rep
jmp
mov
bound
ljmp
lock
into
bound
cltd
xorl
or
arpl
xchg
add
push
jne
mov
stos
inc
mov
ds
lcall
scas
iret
cmp
xchg
into
outsl
out
cli
mov
mov
pop
outsb
xor
push
pop
jmp
dec
daa
dec
in
clc
test
out
iret
insb
in
out
mov
std
mov
pop
adc
inc
mov
fcmove
fidivrs
xchg
call
jno
push
js,pn
fldenv
fwait
xchg
scas
sti
addl
fcoml
push
lods
call
roll
movsb
xchg
mov
addr16
xor
es
sub
and
xor
mov
rcl
test
lods
lods
or
lret
jge
das
jo,pn
sbb
ret
xor
jns
arpl
xlat
out
mov
fwait
push
pop
adc
pop
js
jae
adc
cs
fstpt
repnz
mov
hlt
inc
sbb
shlb
loopne
or
cmp
jne
xor
inc
inc
add
sbb
add
mov
push
and
jno
inc
push
stos
inc
andl
inc
jbe
adc
nop
cwtl
das
ret
or
fdivs
xchg
lods
xlat
jp
pop
pop
dec
loop
outsl
insl
or
mov
loopne
test
mov
and
popf
pop
cmp
xchg
cmpsb
jge
mov
jae
jp
aam
cmc
clc
and
mov
dec
shlb
dec
push
lea
cli
mov
loopne
sbb
add
sti
iret
fcompl
mov
mov
outsb
push
xlat
xchg
fsubrl
sub
dec
fcoms
mov
mov
push
xor
xlat
push
ss
shlb
out
dec
add
cli
or
push
sub
in
adc
lcall
sbb
jbe
bound
inc
fadds
add
stc
fnstenv
pop
outsl
aas
popl
add
ljmp
movsb
jge
pusha
dec
shlb
sub
je
pushf
out
xor
dec
pop
sbb
cmp
loop
push
rorb
cmp
sub
aas
push
mov
jp
cmc
jne
data16
cmp
xchg
inc
fisttps
sub
pop
and
inc
cmpsb
sub
pop
jno
nop
daa
aad
sahf
xor
ds
aas
xor
ret
pop
mov
or
mov
mov
test
jmp
push
pop
pop
push
jne
or
mov
stos
add
add
jo
lcall
stos
xor
xchg
jb
iret
mov
cmpl
push
je
add
xor
xor
sub
hlt
adc
fs
insl
repz
xchg
dec
into
cmc
mov
rorl
jne
xchg
cmp
ret
lcall
inc
dec
jmp
or
imul
rcrb
add
xchg
jg
or
loop
adc
sti
std
cmp
fmul
ss
stos
inc
mov
mov
pop
pop
call
loope
sbb
out
xor
adc
fdivrl
and
icebp
test
push
push
fisttps
shlb
add
jae
jecxz
lock
test
dec
cmp
fnstenv
cmp
dec
in
notl
sbb
repz
popa
or
mov
xor
add
xor
inc
push
mov
push
mov
pop
sub
inc
in
shrb
dec
mov
std
les
popf
cmc
push
dec
std
enter
out
scas
testl
mov
mov
and
or
repz
fwait
dec
out
mov
jno
es
cmpsl
faddp
cmp
or
sbb
sub
out
add
cmc
mov
xchg
xor
jl
sub
mov
xchg
push
mov
pop
xor
pop
mov
in
test
mov
fbstp
loopne
into
pop
pop
stos
and
insl
sub
int
addl
cmp
pop
xlat
add
negl
mov
repz
mov
xchg
jns
adc
xor
inc
ds
xchg
call
ret
cmc
sbb
rol
pop
xchg
repnz
aam
hlt
ret
mov
lcall
fidivs
addb
adc
dec
je
mov
fistl
inc
mov
jmp
jnp
int
adc
xchg
dec
adc
inc
loop
stos
mov
dec
movsl
cmp
ja
mov
cmp
mov
xchg
cmovno
and
xchg
fadd
inc
sbb
lock
lods
jnp
and
aaa
lret
mov
cmc
adc
clc
push
inc
data16
cmpsl
xchg
pop
and
mov
mov
pop
add
sbbl
or
loope
mov
mov
add
jp
ljmp
xchg
push
addr16
xchg
test
icebp
aas
test
xrelease
in
les
ffreep
lcall
pop
jecxz
sbb
cli
loopne
mov
mov
loop
mov
rcrb
in
mov
fdivrs
fdivrs
jns
adc
pop
inc
add
faddl
mov
incb
or
adc
xchg
mov
mov
popa
call
aaa
mov
test
outsl
cs
mov
inc
ds
hlt
mov
jge
adc
mov
rcrb
and
cli
fisttpl
gs
and
addr16
andb
mov
jg
dec
mov
cmc
out
xchg
push
dec
int3
add
sbb
arpl
subl
push
das
sub
cmp
cmp
cmp
inc
mov
fwait
lret
xchg
jbe
cmp
pop
cmpsl
dec
or
in
sub
cmp
gs
xchg
pminsw
repnz
pop
xchg
insb
outsl
daa
lds
dec
xchg
es
push
mov
rorl
mov
push
push
add
push
xchg
mov
shll
add
adc
dec
fidivrl
mov
inc
mov
and
mov
mov
sti
cmp
mov
loopne
sub
and
jge
insb
mov
nop
add
loop
mov
fsts
mov
ljmp
dec
scas
mov
loopne
outsb
or
movsb
sti
mov
pop
jnp
push
sti
int3
loopne
xor
mov
inc
push
push
push
ret
js
mov
cltd
dec
shr
stos
xchg
dec
adc
jae
movsb
mov
or
mov
xlat
rorb
nop
ret
pop
out
sti
and
stc
call
or
test
fdivl
int
inc
mov
push
out
vpaddusw
sub
push
mov
cld
xchg
sub
push
xor
pushf
aas
aam
repnz
sub
ja
jne
stc
sbbb
mov
out
push
call
push
fldenv
test
add
cmp
outsl
push
aas
pop
pop
push
arpl
out
hlt
mov
or
ss
jecxz
add
imul
mov
call
leave
inc
fstpt
push
adc
negb
mov
jecxz
jo
jae
fwait
sub
cmpsl
ds
lds
push
jp
lds
std
shld
pop
sti
cmpsl
data16
movsl
mov
adc
push
insl
fs
pop
pop
or
pop
xor
out
inc
loope
enter
dec
in
xchg
xchg
icebp
cwtl
sbb
in
std
push
fimuls
icebp
hlt
popa
jl
xor
popa
push
add
inc
pop
or
xchg
pextrw
and
imul
es
push
test
scas
inc
jl
xor
fdivp
mov
jmp
push
cmpsl
pop
jno
fnclex
sti
push
jmp
addr16
in
mov
leave
mov
mov
fisubrs
mov
sbb
bnd
out
pop
les
cmp
ss
add
xchg
pop
ja
lock
push
pop
hlt
xchg
jns
in
jnp,pn
fwait
xchg
sub
jb
int
adcl
xchg
fimull
mov
lahf
cmc
aad
or
das
mov
popf
das
push
or
or
xchg
mov
les
daa
lcall
popa
xor
add
sbb
lahf
pop
imul
cmpsb
ret
mov
test
or
pop
arpl
scas
sub
jp
inc
daa
inc
push
adcl
dec
clc
in
cld
cmp
aaa
imulb
testb
daa
push
std
jo
int3
jns
and
cmp
mov
xor
mov
aas
pop
icebp
jo
rcr
call
movsl
cmp
aaa
or
movsb
jecxz
aaa
push
insl
gs
jg
and
xchg
cmp
or
xchg
pusha
stos
add
loope
lret
xor
jb
mov
cmpsb
dec
pop
lock
repnz
adc
push
das
jbe
cli
stos
call
and
sbbb
lods
out
mov
jecxz
les
mov
push
out
clc
aam
std
xchg
mov
test
test
nop
inc
adc
dec
mov
jnp
jb
test
pop
push
dec
mov
ss
jae
imul
in
int
test
shll
inc
stos
or
mov
loope
psllq
xchg
xor
ret
push
lcall
es
in
adc
addr16
cmp
and
dec
stc
cwtl
movsb
daa
fsts
or
jmp
jge
mov
rcrl
pop
rsqrtps
xchg
and
daa
das
adc
push
lcall
out
sub
test
fidivrl
aad
icebp
sbb
in
fldt
jne
mov
push
xchg
cmp
mov
adc
xchg
jo
out
xor
sbb
inc
dec
add
cmpsl
sbb
sub
aas
test
pop
shl
sbb
dec
ret
loop
call
sbb
jl
vpsrlw
dec
xlat
pop
push
mov
fistps
imull
aam
cwtl
jae
dec
pop
aaa
add
jns
dec
inc
popa
lcall
pop
fdivs
add
and
push
ret
mov
or
aad
divb
push
mov
lcall
lods
push
jb
daa
loope
es
and
cmc
aaa
adc
lds
sub
push
lahf
mov
jne
out
xor
pop
popf
sahf
in
push
imul
inc
sub
stos
test
xchg
jae
sbb
push
mov
xor
dec
cmpsl
outsl
loope
sub
ret
outsb
in
cwtl
dec
push
mov
pushl
pusha
inc
xchg
push
fwait
xor
pop
mov
stos
pop
lea
ret
push
imulb
addb
mov
cmpsl
test
sub
push
cltd
adc
sub
jmp
popl
arpl
lods
or
mov
outsl
cld
sub
das
push
adc
push
icebp
rol
insb
repz
cmp
bound
jg
dec
mov
push
aas
add
dec
ret
jnp
xlat
cmp
cs
jecxz
in
loope
dec
leave
dec
inc
push
rcrl
xchg
xchg
notl
mov
sub
add
push
inc
add
bound
and
mov
push
clc
mov
test
or
pusha
cmp
dec
mov
dec
push
fldl
mov
lea
test
pop
out
mov
inc
in
dec
repz
rcrl
mov
clc
stos
inc
lods
fcompl
iret
fnstsw
cmp
jl
scas
lods
inc
mov
loopne
inc
mov
test
cmpsl
push
dec
mov
xchg
add
scas
enter
xchg
sbb
sbb
mov
push
xor
jp
fsubs
jb
mov
lcall
xor
push
inc
push
or
cmp
dec
inc
xchg
int
push
xchg
mov
mov
jl
iret
out
and
dec
mov
adc
inc
out
xor
stc
and
inc
mov
adc
cmp
in
jge
bnd
test
arpl
aad
jg
jmp
xchg
mov
dec
mov
ljmp
aad
cwtl
aas
add
inc
push
in
daa
adc
repnz
cwtl
in
pusha
loopne
inc
movsb
addr16
pusha
adc
jo
repnz
stc
xchg
mov
jno
mov
test
pop
loop
and
cmc
fptan
sub
adc
xchg
ret
mov
rclb
test
jg
sar
jo
pop
int
mov
in
outsl
xor
jbe
cs
je
arpl
adc
mov
jmp
cs
fldl2t
lods
push
mov
jge
sub
mov
xchg
lret
lret
cltd
sbb
add
aad
ljmp
push
inc
xor
lahf
lea
adc
aaa
stos
mov
inc
adc
mov
rorl
xchg
add
pop
push
sbb
mov
dec
pop
scas
repz
data16
hlt
adc
stos
adc
inc
sub
repz
mov
or
cld
push
push
in
mov
inc
pop
dec
pushf
int
fwait
cmc
adc
aas
push
and
std
shll
mov
aad
jecxz
jo
pop
push
jbe
lahf
or
mov
mov
rclb
insb
cmp
mov
icebp
sub
test
adcl
int3
insb
int
imulb
daa
and
enter
popa
fsubl
outsb
das
mov
mov
sbb
pop
lcall
and
mov
and
shlb
or
lahf
mov
decb
loopne
pop
popf
inc
hlt
mov
in
in
cmp
repnz
sbb
pop
cmp
arpl
push
mov
inc
xor
insl
cmp
movsb
or
popa
in
std
sarl
pop
shll
dec
movsb
mov
dec
sbb
aam
push
mov
stc
cmpsb
sbb
add
xchg
and
mov
stos
fiadds
sub
xor
fs
mov
and
add
jp
mov
jns
xor
jmp
add
into
xor
pop
mov
in
test
jb
outsl
popf
jae
push
jmp
or
in
mov
sub
sarl
jmp
into
dec
lret
and
xchg
xchg
inc
jno
adc
xor
fwait
std
cltd
pop
or
inc
shlb
fs
nop
pop
mov
iret
or
stos
fs
divb
jae
mov
cld
test
orl
adc
xchg
test
stos
jae
xchg
mov
inc
push
lahf
dec
in
sti
xchg
sub
dec
fs
mov
push
and
jl
pop
stos
into
push
jne
bound
add
inc
xchg
cwtl
test
push
sbb
jbe
cwtl
pop
cmp
xchg
push
pop
mov
cs
imul
adc
mov
sahf
les
cmpsb
adc
jnp
stc
jle
lea
adc
imul
adc
inc
pop
dec
rorb
pop
sub
sbb
jb
test
into
je
enter
popa
mov
and
fwait
sub
jb
lods
outsl
scas
sbb
push
mov
or
pop
fidivs
testl
jecxz
fs
mov
iret
cmpsb
stos
mov
call
leave
push
mov
leave
insl
ret
or
clc
push
lret
lret
and
xlat
movsl
test
outsl
lods
push
sbb
xorl
call
fbld
xchg
fcoms
and
jp
jns
out
mov
es
cmpsb
dec
mov
fcmovnb
fdivrs
icebp
push
into
int
repz
mov
push
rorl
pop
int3
adcl
mov
addl
mov
stc
push
call
loop
xorl
dec
cmp
cmp
and
pop
fistps
cmp
inc
cmc
jl
xchg
push
inc
cmc
jecxz
adc
stc
popa
je
sbb
outsb
adc
lahf
adc
clc
sub
xchg
cmp
mov
adc
sbb
push
sub
xchg
jmp
cli
lret
insl
push
popf
sahf
jmp
jne
jecxz
jns
and
out
out
xor
push
mov
xor
iret
xor
cmp
imul
in
jg
and
movsl
jbe
xchg
jl
popa
sub
pop
mov
xchg
push
jne
cmp
mov
iret
subl
cmc
sbb
pop
jnp
or
lea
pop
mov
xchg
into
cmp
jbe
insb
dec
mov
push
inc
lods
push
rcl
pop
test
inc
jg
jo
mov
jle
mov
frstor
jae
fsubrp
mov
fldenv
add
nop
imul
xchg
jmp
out
insb
sbb
repz
outsl
fwait
mov
xchg
xchg
repz
mov
mov
mov
push
shlb
std
shll
cmp
int
jb
add
pop
pop
xor
push
push
adc
out
mov
out
xlat
jbe
nop
mov
int
xchg
pop
mov
and
or
int
scas
adc
jne
incl
jb
and
addr16
hlt
and
xor
sub
mov
dec
addl
pop
adc
cmp
daa
jae
imul
push
xchg
shrl
pop
xlat
sarl
push
call
repz
inc
or
mov
fwait
mov
out
test
adc
or
push
jmp
sbb
negl
xor
push
or
dec
out
std
in
imul
jmp
je
ret
fcmovbe
fstpl
add
jns
ficomps
mov
fsubr
push
xchg
mov
outsl
sbb
mov
pop
inc
divl
lea
xor
call
fnstsw
sbb
pop
xor
into
movsl
bound
imul
mov
cli
mov
pop
cmp
cmp
push
cmp
pusha
lock
jl
arpl
aad
sub
mov
lret
fnsave
cmp
push
mov
add
xor
inc
and
ds
inc
clc
shll
sbb
cld
xchg
cs
mov
add
mov
or
mov
gs
fsubr
inc
xchg
xor
inc
mov
test
jmp
or
mov
pop
mov
popa
cltd
sbb
pop
xor
cli
pusha
dec
dec
loop
mov
in
pop
xor
add
sbb
std
stc
aaa
dec
shl
popf
and
sub
inc
gs
ret
out
stos
mov
pop
lcall
and
lds
aaa
sti
sbb
dec
dec
xchg
mov
loop
lret
mov
data16
push
mov
in
sbb
or
dec
pusha
pop
movsb
sbb
loopne
daa
int3
xchg
push
cmpsb
fdivs
pop
sub
fistpl
mov
add
fst
jo
and
pop
jb
inc
sub
int3
cmp
ljmp
mov
jecxz
inc
loope
pop
ret
mov
mov
mov
cwtl
fnstenv
mov
scas
jbe
xor
inc
xchg
es
xchg
adc
aas
pop
imul
jne
add
fs
jno
and
leave
repz
arpl
insl
push
add
cmc
dec
aas
inc
sbb
ret
xor
fnstcw
lcall
je
xor
call
in
push
or
cmp
jb
adcl
jl
mov
rdtsc
add
cwtl
in
and
push
ds
idivl
pusha
sbb
jecxz
sub
xor
ss
mov
add
in
inc
test
fidivs
mov
lods
sub
pop
sahf
std
adc
xor
je
mov
int
insl
mov
insl
jge
cmp
imul
jmp
popf
testl
and
mov
loopne
push
leave
mov
jae
xor
xor
dec
cmpl
movsl
mov
mov
popa
fmull
test
leave
jns
jnp
lea
jb
pop
xor
fidivrl
fsubr
mov
pop
mov
xchg
inc
ss
mov
pushf
ljmp
int
das
or
pop
jne
imul
pop
ss
dec
mov
pop
hlt
dec
push
and
push
dec
sbb
and
fdivp
pushf
inc
jg
mov
mov
jo
ljmp
xor
in
and
adc
mov
nop
or
pop
mov
pop
std
mov
ret
int
xchg
sbb
insl
sbb
push
movsl
mov
mov
mov
dec
inc
adcl
lea
dec
ja
fnstcw
mov
mov
mov
mov
add
ds
inc
add
popl
pushf
shl
inc
in
insb
es
fisttpl
int
stos
test
mov
rolb
mov
outsl
scas
xor
daa
xor
nop
ja
sub
fidivl
cltd
scas
or
fs
cmp
lods
outsb
cmp
pop
pop
popf
sub
fs
dec
xor
dec
mov
dec
neg
aad
dec
push
sub
and
cmp
lret
cmpsb
push
test
popa
aaa
and
mov
sbb
lahf
shrb
xchg
xor
rcrb
aaa
and
adc
mov
adc
or
mov
push
or
cmp
pop
lods
jmp
hlt
fcomps
cltd
xchg
sbb
mov
filds
mov
or
and
adc
hlt
lcall
xor
pop
pop
daa
dec
in
enter
pop
negb
cwtl
pop
jge
pusha
int
daa
mov
cltd
sub
mov
sub
mov
pop
movb
imul
xchg
jns
out
mov
orl
sub
sbb
sti
fwait
adc
lahf
inc
ret
into
cmpsl
push
push
lcall
adc
jp
sahf
rorl
mov
ss
pop
pop
jecxz
rolb
andb
out
imul
inc
cmp
dec
push
sub
insb
loop
dec
inc
or
cmp
adc
nop
mov
test
mov
mov
daa
out
addr16
sbbl
aaa
and
jmp
ss
lods
cli
xchg
int3
mov
cwtl
fmulp
jne
scas
fnstenv
add
ret
and
add
test
adc
add
xchg
das
adc
jmp
mov
sahf
cmc
clc
or
cmp
or
mov
andb
lret
jb
add
cmp
xchg
xor
lahf
lcall
cmpb
push
pop
test
mov
aas
jb
mov
push
mov
dec
mov
cmp
or
lcall
enter
dec
add
jge
inc
inc
fsubl
adc
jns
fsubrs
push
jp
out
sahf
insb
leave
repnz
les
pop
sbb
push
xchg
mov
ljmp
add
sbb
popa
mov
push
fwait
mov
arpl
rcll
cmpsb
aaa
roll
push
fucomp
and
sbb
or
jmp
mov
notl
imul
jge,pt
ljmp
mov
ror
int
shl
xor
mov
push
rcl
inc
or
and
xchg
pop
inc
nop
sub
insl
iret
cmp
test
daa
loop
rcrb
int
pusha
xchg
dec
data16
xor
add
cli
es
out
mov
jnp
inc
sahf
test
sbb
int
mov
push
cmc
cmp
add
push
frstor
out
add
aam
mov
ficoml
loope
jb
and
test
sahf
pop
xor
repz
aaa
add
imul
rolb
pushf
xor
cmc
mov
sbb
cmc
dec
sbb
sbb
shlb
adc
call
test
lahf
push
shr
das
out
adc
ss
out
andl
out
adc
inc
pop
inc
mov
and
push
inc
cli
push
add
mov
call
mov
or
je
push
jge
jmp
aaa
pop
xor
jmp
xor
js
arpl
inc
in
jns
lea
sub
adc
mov
loopne
pop
out
adcl
mov
push
xor
fsubl
dec
gs
adc
inc
mov
push
xor
mov
sbb
testl
pusha
mov
or
stos
in
arpl
ret
pusha
enter
ja
imul
dec
and
cmpsb
arpl
movlps
inc
xor
inc
and
sbb
in
sbbl
jg
xchg
incb
repz
or
orl
xchg
mov
lods
repnz
and
push
or
out
sbb
xchg
adc
sub
nop
add
or
sbb
mov
adc
mov
xchg
mov
cmp
sbb
inc
addb
mov
xchg
idivl
mov
jl
inc
adc
dec
inc
dec
xchg
popf
subb
push
and
mov
cli
mov
cmp
adc
imul
lea
negb
xor
imul
mov
jecxz,pt
pop
loope
push
fprem1
aas
hlt
mov
xchg
xchg
dec
stos
jb
pop
mov
dec
mov
pop
std
jp
or
mov
and
push
mov
and
adc
push
lds
sbb
jmp
add
daa
pop
cmc
pop
dec
jl
daa
mov
mov
and
gs
adc
dec
jge
arpl
or
out
cmp
subb
inc
push
nop
adc
jb
fistpl
out
cmp
jne
in
scas
pusha
adc
addl
jb
arpl
cmpsl
inc
enter
mov
cltd
out
push
dec
xlat
jbe
jo
shrl
movsl
push
cwtl
dec
shll
sub
mov
xchg
jo
or
add
jle
pop
push
or
fwait
mov
add
mov
bound
lcall
add
insl
adc
jno
push
pop
jecxz
gs
imul
xor
out
pop
lock
and
xchg
js
mov
pop
xchg
adc
inc
fcom
sub
push
aaa
cs
xor
enter
lret
in
push
mov
xchg
push
mull
jle
sub
adc
movsl
xor
mov
or
mov
cld
faddp
daa
push
rorb
adc
pop
inc
lods
mov
in
in
pop
inc
or
push
pop
repz
cs
loope
xchg
insl
and
sub
xchg
scas
out
add
lea
mov
sbb
jecxz
pop
sbb
pop
xchg
sub
daa
subb
xchg
test
ret
iret
cmp
shrb
call
add
cmc
movsl
sub
aam
push
dec
sub
inc
sbb
nop
fstps
mov
fcmovbe
mov
pop
xchg
push
jmp
or
gs
xorl
push
sbb
push
scas
jbe,pn
dec
call
xchg
jnp
lcall
cltd
mov
sbb
mov
data16
pop
hlt
push
out
movsl
cmp
mull
aam
out
xchg
hlt
loopne
adc
fsts
or
pop
mov
das
xor
cmpsl
nop
fidivs
inc
push
pushf
xor
mov
aaa
xchg
push
lods
push
rorb
bound
sub
and
out
or
xor
inc
ss
cmpsl
jne
lret
xor
and
inc
or
popa
jne
jbe
dec
cmpsb
inc
mov
insb
leave
lods
mov
scas
cmpsb
ficoml
xchg
or
adc
out
and
push
test
pop
xor
or
es
loopne
inc
adc
inc
lods
mov
xchg
call
or
push
pop
mov
sub
fcoms
decb
mov
jecxz
and
icebp
mov
mov
mov
mov
inc
je
sbb
les
jle
fidivrl
outsb
cmpl
les
insb
aas
out
mov
aas
mov
sbb
dec
cmp
or
out
inc
inc
xor
loop
sbb
iret
sub
inc
jg
mov
test
xor
fidivrs
sub
inc
fs
arpl
or
mov
push
sub
inc
mov
cld
xchg
jmp
iret
mov
sar
repz
sub
sbb
int3
pop
dec
add
inc
aaa
mov
mov
fwait
push
repnz
mov
cmp
and
inc
mov
inc
enter
jmp
or
mov
sbb
dec
add
sub
adc
mov
mov
mov
loopne
push
xchg
rol
aad
in
lds
push
and
pop
imull
aaa
sub
push
jbe
cs
nop
cmp
mov
out
pop
fiaddl
movsl
sub
add
xor
sarl
push
imul
cmpsb
sbb
js
rorb
dec
add
out
add
fs
xchg
adcb
and
mov
jmp
sbb
aas
aaa
iret
outsl
xchg
mov
enter
mov
fs
push
cmp
data16
pop
mov
lds
test
aam
out
adc
xlat
dec
push
adc
andl
mov
jge
movsl
mov
sbb
sub
ds
cmc
jno
data16
mov
ljmp
iret
jge
add
push
inc
into
xlat
je
sub
jne
imul
jmp
inc
mov
icebp
and
push
xchg
call
shrl
lods
push
xchg
gs
cwtl
inc
mov
in
inc
sbb
mov
stc
ds
pop
ja
cmp
outsl
movups
add
sub
jmp
xorl
test
or
test
jecxz
pop
push
sub
lahf
int3
lcall
cmp
arpl
mov
mov
fldt
das
add
lahf
xor
xlat
mov
fildl
add
xor
jns
xor
icebp
and
sti
sub
enter
jmp
mov
jmp
pop
fdivs
sub
sbb
in
push
aas
mov
sub
movl
jb
mov
shll
jbe
push
lods
scas
mov
sbb
in
cs
lret
sbb
in
aaa
stos
and
add
xchg
add
jmp
adc
pop
lock
xchg
cmc
dec
push
int
or
xchg
repz
out
or
cli
lock
pop
xchg
int
scas
arpl
loope
jo
push
movsb
sbb
mov
mov
inc
cmpsl
mov
inc
test
sub
push
hlt
call
lret
jge
inc
mov
test
loop
hlt
popf
je
pop
cs
xor
add
pop
rcr
xchg
shl
cmpsl
sbb
jl
mov
ldmxcsr
in
stos
ret
std
icebp
sbb
push
fisubs
js
mov
jmp
fildl
test
inc
sbb
hlt
aaa
pop
scas
stc
sub
inc
popf
pop
ss
cmpsl
cs
dec
xor
pop
mov
cmpsb
fwait
aas
xchg
push
mov
sbb
sub
rcll
add
scas
push
fisubs
fnstsw
xchg
cwtl
adc
mov
movsl
cmp
lods
mov
dec
pushf
cmc
add
mov
mov
outsl
mov
adc
rorl
sti
push
mov
in
jecxz
lea
pusha
mov
dec
addr16
out
movsl
adcl
mov
scas
ds
mov
jno
cmp
cmp
push
cltd
popa
mov
out
push
inc
push
dec
add
mov
cmp
pop
std
aas
aas
push
or
dec
xlat
lock
mov
daa
imul
paddusw
sub
loop
xchg
add
in
repnz
or
jae
cmpsb
mov
mov
add
sbb
test
or
cwtl
push
xchg
out
stc
push
or
inc
subb
gs
xor
into
mov
ja
fcmovnbe
daa
gs
or
mov
das
std
jl
mov
sub
mov
sahf
dec
out
cs
mov
hlt
pop
push
push
lods
xorl
lods
fcompl
push
sti
outsb
mov
stc
pop
mov
push
pop
lods
push
push
leave
test
inc
dec
dec
nop
pop
lahf
sub
or
xor
cwtl
fists
scas
test
push
and
test
aas
sarl
ds
inc
cwtl
addr16
mov
pop
sub
adc
mov
nop
dec
loope
or
dec
mov
fistl
lret
movsl
pop
push
cmp
shll
ficoml
fildl
lods
cwtl
data16
mov
cmc
cmpsb
mov
sub
iret
aaa
test
mov
adc
arpl
sub
mov
in
jge
shll
and
and
push
cltd
test
jae
das
pop
mov
hlt
jg
movsl
sbb
sbb
jg
sub
das
sbb
shlb
dec
bound
fnsave
lcallw
xor
cmpsl
sub
pop
jge
cmp
jmp
mov
xor
jecxz
testl
jne
xchg
push
fwait
xor
jb
jns
sbb
aas
aad
nop
lods
mov
mov
jmp
fwait
add
xchg
out
or
and
inc
add
dec
mov
imul
cmpsb
mov
add
ljmp
jbe
jno
mov
xchg
movsb
mov
ficomps
into
movsl
mov
imul
loope
in
adc
sub
out
or
mov
add
ja
add
inc
cmp
stos
dec
sub
jmp
lods
scas
mov
test
std
mov
add
rcr
in
es
sti
movsl
xor
cwtl
jne
jmp
push
std
mov
inc
ljmp
xchg
add
stc
cmc
cs
imul
sbb
sbb
fsubrl
fwait
xchg
fimull
sbb
sub
lods
movb
jg
cmpsl
mov
sbb
insl
and
loop
mov
popa
push
dec
sub
jnp
iret
call
sbbl
loop
jo
cmp
mov
rcll
mov
int
test
ja
mov
add
and
mov
xor
int
lea
aad
sub
repnz
pop
dec
loope
cmp
lods
adc
fldt
imul
add
in
sbb
pusha
int
cmp
push
sub
xchg
add
xor
push
stos
sbb
out
outsw
push
xor
push
cli
xchg
push
adc
inc
jg
es
dec
loopne
call
sbb
nop
cmp
cmp
pop
pop
fimuls
or
pop
imul
inc
lret
and
jmp
and
shl
xor
loope
hlt
into
mov
sbb
xor
cltd
jne
push
cmpsl
cli
sbb
dec
dec
lret
inc
popa
and
push
das
dec
fwait
pop
repz
dec
outsb
jb
jp
mov
lds
or
aaa
pop
mov
pop
push
jbe
int3
xor
cmp
dec
sub
in
inc
out
lds
popa
jae
ss
movsb
mov
rcl
dec
xchg
sub
ljmp
insl
cmpsb
movsb
repz
mov
jp
daa
lods
pop
jge
mov
fsubr
jmp
lods
cs
arpl
loop
test
hlt
outsl
add
int
mov
sahf
stos
sub
mov
mov
insl
sub
or
mov
fidivs
adc
stc
nop
jl
out
test
mov
rorb
mov
movsl
inc
pop
int
jecxz
mov
imul
rclb
fs
shlb
cmp
cwtl
push
clc
pop
and
int
out
fnsave
add
arpl
adc
dec
sub
outsb
cli
xchg
popa
mov
dec
jne
xlat
add
jmp
cmp
cmp
imul
sbb
scas
inc
dec
jno
pop
push
adc
mov
iret
arpl
cli
pop
sahf
sub
xor
jns
jge
gs
call
in
sbbl
push
inc
hlt
scas
repnz
mov
js
fidivl
sti
gs
cltd
pop
xchg
cs
push
pop
scas
enter
mov
xor
adc
insl
xchg
inc
sbb
scas
lea
cwtl
das
cmp
jmp
dec
or
adc
daa
ljmp
jmp
jg
xchg
lret
fisttpl
adc
inc
cld
push
push
mov
cltd
test
pop
loop
fildl
xchg
enter
divl
cld
xchg
xchg
ret
fstp
jno
xchg
es
mov
add
popf
sbb
bound
aas
or
adc
xchg
lds
testl
sbb
jl
loopne
in
mov
jb
sbb
test
mov
outsl
sbb
dec
popf
stos
cmpsl
jb
aad
les
insl
push
ds
jb
inc
popf
pop
ja
cmp
pop
imul
mov
jne
pushf
push
mov
ljmp
xor
repz
mov
jnp
mov
push
pop
sahf
mov
add
xor
and
xchg
inc
sbb
adc
inc
stos
jbe
fsubl
push
cmp
pop
ss
dec
and
pop
xor
pop
lock
pop
dec
lock
testl
idivb
sbb
sbb
or
pop
and
nop
scas
jno
fsubs
fidivs
loop
adc
add
sub
ljmp
mov
es
or
cmp
add
sbb
mov
popf
xor
data16
xchg
add
push
adc
mov
ss
scas
push
jl
dec
pop
mov
fbld
push
lret
imul
mov
dec
push
fbstp
int
leave
ja
mov
push
fxch
fsts
inc
pop
repz
pop
std
fnstcw
adc
rcr
jle
ljmp
testl
xor
mov
mov
sbb
xchg
mov
sbb
popa
cmp
insl
testl
sub
inc
xlat
ds
xchg
jns
fiaddl
adc
and
inc
aad
push
xchg
add
pop
jmp
sbb
dec
popa
insl
aad
mov
or
jg
inc
sbb
outsl
pop
imul
xchg
mov
scas
insb
sbb
sub
pop
mov
mov
aad
pop
aam
outsl
push
or
insb
adc
push
push
call
adc
mov
out
outsl
push
mov
rorl
mov
jmp
mov
cmpsl
sbb
xchg
std
mov
lea
jnp
fs
sub
and
cmpsl
jle
xchg
movsb
movsb
shrl
adc
icebp
popf
sub
scas
rcll
ret
mov
pop
and
cmp
cs
xchg
lods
out
cmp
loopne
pop
inc
cs
dec
in
cpuid
fs
push
out
lds
mov
int
test
cwtl
mov
adc
sub
dec
and
stos
xor
imul
sub
jge
repz
and
cmp
mov
rclb
pop
add
jbe
lods
aas
hlt
push
jp
and
cmp
push
xchg
mov
jg
jb
jecxz
shl
cmp
push
popf
inc
sbb
mov
push
jae
cmpsl
push
pop
push
adc
cmpsb
or
pushf
pop
rclb
inc
push
push
xor
cmp
ja
push
das
shl
das
mov
push
insl
pop
cli
ret
daa
fadd
add
gs
and
pop
mov
mov
or
ljmp
or
aad
cld
sub
pop
aam
aaa
int3
mov
leavew
xchg
je
cld
lahf
dec
test
jl
xorl
test
pop
aas
push
adc
rep
filds
in
jecxz
int3
fidivrs
add
mov
add
sbb
mov
ja
movsl
or
push
fs
ds
xchg
jmp
or
jno
lahf
add
xchg
sahf
orl
or
mov
jg
xchg
cs
imul
adc
orl
movsl
mov
push
les
adc
sahf
test
pop
lret
sahf
iret
data16
push
mov
push
cli
add
pushl
mov
stos
test
lret
mov
rcrb
mov
xchg
mov
les
mov
ja
adc
cmp
cmp
insb
add
push
movsl
xlat
cld
mov
sahf
sub
pop
aaa
sbbl
das
adc
mov
lcall
jl
lahf
notl
fbstp
or
cltd
cmpsb
adc
mov
loopne
push
mov
nop
jnp
out
sbb
xchg
outsb
sub
pop
pop
sbb
xor
pop
repz
dec
add
scas
int
sub
xchg
shll
pop
xor
repz
or
adc
cld
scas
outsb
rol
sub
cwtl
test
adc
pop
dec
cmpsb
add
sbb
sub
mov
and
aam
pop
idivb
sub
jbe
sub
mov
sti
sbb
cmpsb
xchg
sub
sub
fidivs
fld
pusha
fildll
adc
sub
cwtl
and
inc
or
mov
ljmp
xchg
push
inc
stc
test
stos
lret
into
sbb
or
mov
xchg
lahf
push
jle
push
test
dec
jb
and
cwtl
fadds
xchg
adc
cwtl
das
fdivrs
ss
fbstp
cli
addl
push
mov
jbe
sub
inc
add
jns
pop
fimull
lods
ret
pop
push
insl
movsb
mov
jl
movsl
mov
add
lret
dec
pop
mov
xchg
jb
nop
push
in
movsl
mov
nop
push
jns
cmp
rcl
enter
leave
mov
aad
daa
xchg
call
adc
inc
stos
xchg
popa
popf
xchg
mov
in
stos
jl
lock
inc
sub
rcll
lock
mov
ret
mov
mov
lahf
sti
xchg
inc
test
fldt
fildl
add
fbstp
mov
sub
cmpsl
pop
push
nop
push
sbb
sarb
divb
cmpsl
lods
push
fucomip
call
mov
jg
jnp
daa
ljmp
push
loope
ret
mov
insb
cmpsl
fdivrp
lods
wbinvd
add
inc
icebp
lahf
div
out
cmpsl
bound
movsl
icebp
dec
addr16
mov
xchg
imul
cmp
lds
clc
aas
adc
jle
sbb
inc
dec
imul
mov
cmpl
xchg
sbb
test
sub
jo
in
and
rolb
pushw
ds
dec
fsubs
jb
push
cmp
and
enter
ret
jge
or
out
out
cwtl
adc
mov
fdiv
pusha
adc
xor
fstpt
push
cmpsb
xchg
into
pop
ret
rcl
shll
insl
ret
fcoms
cli
adc
cld
pop
scas
sub
cmpsl
push
lcall
xor
cmpsb
out
xor
in
xor
jp
sbb
adc
arpl
jns
out
cmc
or
fistpl
cmpsl
and
lods
stc
test
inc
mov
adc
ret
inc
cmp
lahf
cmp
ljmp
jno
mov
sub
lods
mov
xchg
and
add
push
mov
mov
aas
aam
xor
subb
or
push
add
xor
int
scas
inc
mov
xor
sub
xchg
mov
les
sub
mov
mov
cmp
in
xor
in
xchg
mov
fsts
inc
push
jmp
mov
add
xchg
push
mov
aam
cmp
mov
or
jl
repz
jae
mov
and
outsl
sub
inc
ss
cmp
inc
push
iret
pop
push
fistl
jle
mov
andl
dec
push
arpl
addr16
push
lret
jae
pusha
fiadds
add
jnp
jnp
sbbb
mov
mov
clc
cmpsl
js
sbbl
mov
mov
cmc
and
lea
je
pushf
movsb
mov
add
and
das
ljmp
or
outsl
jp
sbb
inc
lods
sub
dec
leave
int
test
ja
lods
sbbb
sbb
popf
jnp
js
xorl
cmp
popa
loop
and
cmpsl
enter
testb
xor
jae,pt
xchg
test
fistl
es
push
jns
test
je
cltd
sub
sbb
outsl
shlb
or
cli
aas
push
xchg
and
and
xchg
addr16
jmp
inc
call
sbb
mov
sbb
out
cmp
xor
mov
and
imul
push
jnp
insb
sub
dec
push
outsl
ss
sub
sti
or
sub
mov
insl
jg
leave
int
dec
add
jecxz
aas
adc
jl
sbb
loop
out
cmp
cmp
imul
scas
leave
in
js
adc
call
mov
test
das
es
dec
out
pop
std
jl
mov
pushf
xchg
into
sbb
dec
sub
xor
sbb
mov
shlb
cmpsl
pop
push
mov
jae
add
and
iret
bound
movsb
cmp
xchg
popf
cmc
xchg
ret
insl
sub
jecxz
adc
lea
mov
ds
fdivs
aaa
stos
jb
push
push
mov
xchg
inc
mov
push
stc
jbe
push
sbb
inc
pop
fwait
add
mov
push
adc
inc
xchg
rorl
cwtl
outsl
out
addr16
nop
pop
cwtl
add
loope
push
out
dec
pop
ljmp
into
nop
icebp
xchg
std
stos
mov
in
or
push
add
mov
adc
xchg
lock
jb
addl
out
mov
inc
out
pop
adc
cmp
cwtl
mov
xor
lcall
push
mov
and
and
cwtl
ja
and
ss
push
jo
adc
push
push
test
mov
xchg
lret
mov
icebp
mov
mov
cli
iret
sti
inc
xor
inc
sbb
cmp
inc
cmpsb
cmp
mov
pop
out
in
xchg
imul
std
jl
jb
aaa
sub
lret
pop
sbb
lcall
mov
jg
sbb
push
hlt
push
lods
leave
xor
arpl
push
xor
mov
mov
push
insl
add
out
out
mov
fcoml
jne
add
mov
add
jg
adc
mov
or
mov
cwtl
mov
mov
dec
inc
loope
sbbb
cmp
inc
adcl
mov
int3
cmp
adc
ja
and
outsb
ds
aad
popl
adc
dec
dec
lret
xor
scas
jecxz
jmp
or
xchg
loopne
cwtl
pop
repnz
int3
sbb
jbe
fcompl
push
pushf
jge
jmp
gs
sahf
sub
inc
sbb
push
and
je
fdiv
push
push
jl
push
jne
adc
stc
in
aaa
xor
push
mov
loope
into
or
fmuls
xor
int
lds
aaa
inc
rcr
cld
lds
jno
push
mov
push
bound
and
das
inc
and
xor
out
in
std
mov
cmpl
leave
sub
push
fistpll
push
pop
adc
mov
dec
cltd
push
les
arpl
stos
cli
test
mov
cmpl
icebp
loope
and
incl
xchg
dec
add
xor
test
inc
jge
push
imul
cmc
xchg
pop
mov
pop
test
mov
cmp
sbb
ds
pop
out
jnp
jle
in
hlt
iret
push
data16
push
lea
aas
hlt
pop
jb
imul
hlt
scas
pushl
popf
jg
xchg
sarl
mov
fwait
test
sarl
stc
or
sub
cmp
leave
rcl
push
out
inc
dec
lods
inc
scas
sahf
popf
int3
sub
in
test
das
insl
pop
cli
mov
cmp
aaa
fdivs
std
cmpsl
mov
xchg
jmp
aad
data16
mov
sbb
fnsave
or
or
out
xchg
sub
movsl
stos
dec
pop
shl
lods
clc
dec
in
or
mov
rcll
in
cli
mov
cmp
insb
les
or
out
cmpsb
sbb
sbb
lods
add
and
lea
inc
lea
ds
dec
fsubrp
dec
movsl
pop
mov
scas
inc
adc
xor
bound
je
cmp
es
imul
push
mov
repnz
pop
or
lea
mov
stos
outsl
sub
repz
pop
into
mov
ret
mov
rcrl
add
sub
pop
dec
repnz
push
sarb
xor
pop
lods
into
in
cmp
add
jbe
cmc
iret
or
les
imul
sub
lahf
test
loopne
xor
cmp
clc
xchg
js
outsb
fwait
shrl
adc
push
mov
mov
mov
push
test
out
xchg
cmpsl
sub
aam
std
outsb
out
inc
push
stos
decl
mov
rcr
arpl
repnz
xchg
mov
cmpsl
arpl
lret
cmp
cs
shlb
rcrb
aaa
adc
clc
test
or
popf
gs
mov
mov
add
loope
push
iret
push
int3
adc
fs
outsl
mov
push
adc
jae
sub
or
dec
cmp
or
pop
jmp
icebp
xchg
or
imul
repnz
lea
bound
clc
jae
loope
pop
pushf
arpl
test
inc
ds
in
out
fidivrs
movb
fwait
inc
add
faddp
ret
scas
or
cmp
or
mov
lahf
dec
repz
pop
gs
pop
lock
lret
mov
jo
xchg
rol
stos
mov
pop
in
dec
jge
lret
mov
mov
pop
ror
jmp
sub
push
das
jno
gs
cld
push
xor
xlat
push
add
shl
stc
pop
dec
imul
dec
and
mov
ret
lret
jae
and
mov
stos
das
insl
loop
mov
fidivrl
xor
mov
mov
ret
sbb
movnti
adc
push
pushf
fsubl
lahf
sub
minps
mov
mov
insb
jae,pn
imul
repz
push
or
pop
pop
stos
fdiv
mov
mov
mov
xor
jmp
jnp
and
xchg
pop
popl
jle
sub
pusha
xor
mov
insl
jp
push
pop
jp
xor
pushf
outsb
stc
or
push
mov
popa
int
and
pop
push
hlt
dec
mov
or
mov
cmc
inc
jmp
mov
dec
and
aam
repnz
push
push
mov
out
and
inc
mov
aam
imul
gs
out
fnstsw
mov
call
ret
jnp,pn
popa
mov
jno
mov
jmp
aaa
mov
or
cs
stos
inc
je
cmp
xchg
xchg
add
mov
int
cwtl
dec
in
cmpsb
aad
addl
je
imul
mov
push
mov
and
or
mov
sub
jmp
test
sub
dec
out
insl
fwait
sbb
repnz
pop
adc
jp
xor
iret
xorb
popa
clc
mov
mov
pop
push
inc
pop
cmp
sub
fnsave
scas
lret
add
dec
fwait
inc
aad
insl
jb
test
repz
ja
call
mov
imul
xor
inc
dec
aam
xor
and
mov
sarl
enter
dec
sub
outsb
dec
adc
call
cltd
pop
test
mov
push
insl
in
inc
xchg
xchg
sub
jbe
aas
and
test
mov
xor
jecxz
fistl
add
xchg
ret
loopne
cmc
xchg
inc
in
adc
sbb
cmp
in
je
shll
into
pop
bound
loop
mov
xor
mov
rorb
in
or
mov
inc
pop
sbb
cltd
jp
lret
mov
cwtl
test
ja
adc
dec
cltd
mov
or
jns
popf
pop
lret
add
mov
sarb
add
and
nop
and
pop
loopne
sbbb
adc
add
cmpsl
inc
xlat
mov
ret
pop
je
mov
push
repnz
clc
icebp
sub
lods
lret
pop
je
xor
xor
push
popa
clc
dec
jnp
mov
sbb
ficoml
loop
mov
push
notb
adc
mov
push
sub
aas
clc
jne
or
cs
loopne
sbb
xchg
and
sti
repnz
test
and
cmpsl
push
jbe
fisubrs
stos
xor
mov
fistl
jg,pt
jnp
pop
jno
add
out
aaa
test
cmp
mov
or
sbb
push
leave
or
add
adc
jle
frstor
xor
rcrl
testl
jp
sahf
inc
fwait
jg
stos
and
mov
test
adc
popf
dec
adc
jnp
movsb
sub
adc
push
test
test
in
dec
std
xchg
jmp
dec
pop
inc
stc
cltd
stos
daa
test
data16
or
scas
xchg
cli
push
mov
das
pop
lahf
xor
fldl
rcrb
psubusw
stos
add
int
in
pop
shrl
sbb
jbe
xor
mov
xor
cmpsb
test
mov
adc
out
ja
push
lds
dec
sti
stos
out
xchg
lahf
int
cmp
mov
sbb
jp
in
je
aam
in
lcall
mov
mov
sbb
cwtl
adc
sub
lret
jle
fiadds
repnz
repz
repnz
xor
fisttpl
out
clc
push
add
cltd
xchg
jb
mov
test
in
inc
jno
jp
xor
adc
inc
sbb
outsb
and
ret
xchg
ficoml
lcall
js
mov
cmp
jecxz
aaa
xor
and
pop
or
jecxz
push
sub
jns
jbe
outsl
clc
or
add
push
pusha
mul
jp
shrb
push
add
xchg
sub
xor
push
mov
ss
inc
pop
mov
dec
push
sbb
stos
add
xchg
inc
adc
xchg
or
mov
cmp
mov
out
sbb
dec
hlt
xor
jb,pt
jge
mov
les
add
xor
mov
movsl
and
mov
in
mov
jno
out
in
andl
push
xchg
pop
or
test
mov
pop
lcall
cmp
popf
lods
sub
lcall
ja
xor
cmp
out
loopne
out
inc
xchg
xchg
push
mov
dec
loop
cltd
popa
js
xlat
lea
add
pop
mov
dec
jmp
sbb
lods
lret
loopne
adc
jb
iret
subl
movsb
inc
jns
push
xor
cmp
mov
jo
orl
cmp
pop
dec
jns
shrl
into
cmp
fmul
sbb
dec
stc
jns
jmp
mov
fisubrl
das
les
test
jle
ljmp
mov
les
mov
inc
jmp
mov
sbb
jb
popa
fcoml
mov
je
outsl
cmpsb
div
adcl
or
shlb
push
mov
push
push
mov
jns
cmp
and
mov
cmp
push
insl
adc
cli
xchg
push
sub
push
ss
adc
add
sub
or
dec
loope
int3
fs
pusha
xchg
mov
push
xchg
sub
dec
insb
sub
inc
rcr
sub
xchg
cwtl
inc
int3
fidivs
pushf
mov
xchg
and
les
push
dec
inc
das
stos
sbb
dec
or
inc
ret
xchg
dec
in
dec
push
call
pop
pusha
ljmp
fiaddl
cs
jno
mov
mov
data16
into
xor
ret
pop
or
notb
ret
in
inc
cmc
xor
dec
rclb
mov
fdivs
mov
les
neg
rcrl
mov
insb
add
pop
jmp
arpl
mov
dec
and
mov
xlat
shrl
mov
movsb
ja
lea
adc
dec
repz
dec
ja
jns
mov
ror
add
cltd
icebp
inc
jmp
pop
setae
mov
mov
push
stos
daa
icebp
pop
xor
add
pop
imul
and
mov
call
dec
dec
cmp
xchg
aas
add
daa
inc
pop
fimuls
xchg
cmp
movsb
in
sub
shll
sti
fdivl
sub
mov
push
mov
and
repnz
lds
out
pop
cmc
clc
aam
cs
sub
mov
test
repnz
int
push
push
pop
or
sbb
push
jl
movsl
inc
repnz
test
bound
into
pop
add
xchg
ljmp
iret
push
jecxz
xchg
fdivl
fs
mov
xchg
icebp
repnz
hlt
or
xchg
ret
push
sahf
xor
jmp
xchg
je
ret
adcb
inc
dec
iret
cmp
sub
xchg
ljmp
sub
mov
dec
in
jl
mov
add
dec
mov
push
aam
inc
dec
pop
xchg
ret
fwait
push
dec
mov
aad
adc
rorl
and
push
or
in
leave
xchg
lock
mov
push
shlb
push
mov
cwtl
ja
or
dec
cmp
or
stos
cmp
sub
xchg
add
jl
pop
jp
stos
sbb
add
inc
push
mov
mov
movsl
and
inc
sub
xchg
lods
dec
push
fidivs
arpl
ret
or
lret
stc
xchg
and
push
pop
ljmp
add
or
cmp
mov
push
lret
pop
out
pop
sub
push
fsubrs
mov
out
int
testb
push
pop
mov
pop
and
dec
in
xchg
pop
pop
push
inc
insb
add
inc
xchg
adc
dec
test
pop
push
inc
pop
dec
mov
jge
and
mov
aam
xor
xchg
out
lock
mov
jb
pop
push
aaa
push
and
fs
lret
sub
lcall
xchg
and
test
es
adc
sbb
push
repz
stc
popf
mov
push
xor
fwait
cld
daa
cltd
xor
inc
and
sub
lods
hlt
pop
cmpsl
sub
push
mov
sbb
sbb
ds
mov
pop
sub
lcall
jo
push
jb
xchg
popa
and
inc
mov
popf
jmp
or
ror
mov
stc
and
dec
pop
sbb
out
aaa
fisubrl
dec
fildl
out
rcrl
xchg
pop
mov
sbb
sahf
xor
add
push
jmp
mov
push
sbb
leave
sub
sbb
mov
fnstenv
sbb
repz
xchg
push
in
or
sbb
inc
int
movsl
fs
dec
int
push
jmp
or
jl
jae
test
sahf
push
sbb
pop
dec
cmp
pop
mov
push
add
adc
loopne
ljmp
pop
shl
jmp
mov
mull
mov
fs
mov
and
mov
xor
pop
jl
dec
movsl
cmp
lds
out
jne
xchg
sub
mov
cs
add
out
hlt
out
add
mov
test
jecxz
mov
test
sbb
push
repnz
inc
inc
lahf
xor
push
insb
mov
push
mov
pop
filds
xchg
fldl
and
into
fs
pop
adc
out
cmp
fadds
sub
fistpl
jl
mov
hlt
shll
cmp
mov
push
jae
sbb
js
jle
pop
cltd
outsb
loope
lds
mov
addb
mov
cmp
sbb
pop
xchg
dec
jge
cwtl
scas
push
mov
stos
mov
jne
cmp
stos
push
mov
sbb
push
mov
fcoms
mov
mul
test
aas
jecxz,pt
repz
sbb
adc
xor
dec
xchg
mov
int3
xor
dec
pop
mov
inc
fsubl
add
push
pushf
pop
mov
in
jp
jge
add
xchg
and
call
or
xchg
push
lcall
test
jns
and
jmp
or
push
clc
gs
jno
mov
ficompl
sbb
dec
cmpsb
mov
rorb
loopne
stc
dec
push
pop
mov
dec
icebp
xor
xchg
push
test
test
test
aad
enter
dec
lock
dec
in
in
fcompl
xor
divl
std
out
inc
and
loopne
movb
aaa
pushf
mov
sbb
or
lahf
cmp
es
mov
sbb
mov
shrb
fidivl
int3
imul
push
mov
jae
dec
cmp
adc
popa
stos
and
enter
sub
aad
cltd
jmp
jns
in
pop
mov
popl
cmpsb
daa
pop
adc
inc
mov
lret
xchg
ficomps
subb
loope
jnp
and
imul
and
pusha
fldt
int
movsl
loope
pusha
fildl
jns
mov
sub
cmp
add
pop
push
jno
xchg
shrb
mov
dec
jp
jnp
jbe
jno
jne
and
sbb
icebp
and
xor
mov
inc
aas
dec
jb
sbb
xorl
mov
jnp
inc
aas
in
mov
push
movsb
mov
repz
imul
mov
cmp
jg
mov
xchg
cld
mov
loope
dec
xchg
das
push
and
stos
ret
loope
call
push
sbb
das
or
es
ret
xor
sbb
lea
cmc
or
push
fsubr
xchg
add
xor
lods
pop
mov
pop
lahf
negb
cmp
dec
pop
adc
inc
push
push
pop
sub
dec
or
sub
test
mov
dec
ffreep
pop
pop
mov
jbe
ljmp
jae
mov
pop
or
add
fnstsw
add
xor
sub
call
insb
aam
add
ljmp
in
sub
push
add
sub
pop
push
xor
loop
sbb
push
cmp
add
push
inc
fwait
or
dec
test
and
xor
sbb
das
fucomi
imul
int3
xlat
dec
jp
mov
jg
loope
or
xchg
and
stos
xchg
and
cmc
repz
mov
stos
fmuls
pop
jge
cmp
shrb
sbb
inc
out
cmp
aaa
into
mov
mov
inc
cltd
std
insl
pop
stos
mov
inc
ror
popa
adc
xchg
pop
jmp
jno
jae
cli
dec
mov
jge
cltd
std
sub
mov
and
call
cmp
rorl
cli
inc
xchg
hlt
cmp
jmp
repz
mov
and
mov
aam
dec
inc
dec
add
xchg
push
test
pop
push
es
push
mov
or
xor
outsl
push
insl
mov
mov
das
adc
pop
clc
das
pop
cmc
add
push
cmp
push
fsubs
fldcw
mull
adc
dec
fmuls
mov
xchg
mov
outsb
mov
add
pop
lcall
dec
popa
loope
inc
shll
jmp
fisubl
out
pop
push
in
clc
jp
ja
push
in
std
lea
inc
sbb
in
lret
popa
mov
movsb
stos
inc
fmulp
fstps
jne
jecxz
cmp
xor
test
cvttps2pi
lock
mov
mov
or
jl
fcompl
fsubr
rol
inc
mov
test
add
mov
cmpsb
ja
jno
adc
xor
mov
push
xor
xchg
or
out
loope
rcl
ljmp
and
mov
mov
sub
pop
mov
fstpl
lret
sti
pop
outsb
fsubrl
leave
test
xchg
and
mov
mov
lret
fldcw
and
fsubrs
lods
cmp
rcr
adc
gs
sbb
push
push
gs
shll
out
xor
and
das
mov
cmp
push
mov
outsl
jge
or
aaa
adc
xchg
das
or
hlt
xchg
mov
daa
mov
stos
aad
data16
mov
hlt
mov
and
jge
cli
sub
jmp
enter
jno
or
or
jo
mov
insl
sbb
ret
push
sti
add
push
fstl
adc
es
sbb
jb
xchg
aaa
xchg
sti
movsl
rcrl
movb
movsb
push
mov
fucomi
and
mov
mov
pop
and
push
loopne
fistpll
add
mov
sbbl
push
adc
dec
andb
call
imul
aad
dec
xchg
push
aad
lret
neg
push
loopne
jbe
push
cli
pushl
stc
sub
inc
inc
pop
lock
add
mov
add
dec
mov
mov
int
outsb
or
jle
mov
loop
clc
repnz
or
push
pop
mov
ret
jb
hlt
mov
jl
xchg
xchg
mov
sbb
imull
inc
mov
inc
jmp
mulb
jne
pop
test
sbb
mov
jmp
cli
pop
ds
fistpl
pop
push
outsb
cli
jecxz
sub
mov
rol
inc
iret
push
aam
inc
lock
arpl
jle
addl
or
mov
mov
xor
add
fsts
mov
push
xchg
add
hlt
aam
pop
pusha
mov
mov
testl
mov
inc
fsubl
push
cli
mov
popa
clc
call
idivb
sub
jg
icebp
mov
add
test
dec
call
int3
arpl
mov
popf
in
fstpt
adcl
sub
notl
stc
and
inc
in
test
aad
pop
or
add
xor
add
jecxz
push
and
mov
dec
add
jae
lret
nop
arpl
popf
daa
psubd
dec
jl
jbe
inc
push
sub
inc
loope
jne
jg
pop
cltd
mov
cwtl
ret
repz
lods
adc
add
sbb
neg
xchg
pop
test
xchg
js
daa
jle
addr16
sahf
jbe
dec
lret
inc
shlb
xchg
add
push
sub
jns
mov
xchg
mulb
mov
stos
fldcw
push
ds
push
out
jecxz
xor
pusha
cmp
in
jp
mov
and
out
push
rorl
inc
lea
push
adc
inc
repz
mov
fsts
scas
cli
call
and
imul
shrl
int
cli
adc
fists
dec
mov
mov
push
enter
jl
or
mov
xchg
cmp
adc
add
out
nop
mov
ss
fdivr
push
loop
data16
mov
jle
loopne
jb
mov
xorb
add
jbe
orb
cmp
inc
and
repz
cwtl
popa
out
inc
inc
rcrl
cmc
xchg
jae
or
les
rcrl
aad
push
or
imul
pop
and
shr
cld
xchg
xchg
sub
add
scas
inc
fsubp
aam
pop
sub
jl
jns
scas
pop
outsb
add
test
add
push
xor
jmp
cwtl
mov
loop
mov
dec
loope
pop
movl
pop
lret
pop
xchg
xchg
mov
call
or
dec
daa
mov
das
fwait
nop
or
xchg
jge
aaa
int3
cmc
in
mov
xor
add
fisttpl
xchg
mov
pop
adc
push
out
cmp
mov
jge
andb
imul
mov
jmp
adc
repnz
das
add
pop
ss
ror
out
popf
or
jo
xchg
inc
incb
test
in
mov
fidivrl
shrl
notl
scas
sub
pop
xchg
pop
mov
xchg
test
adc
sbb
pop
jmp
cmp
push
add
aad
mov
xchg
push
nop
imul
pop
outsb
ja
xlat
rclb
mov
dec
sub
adc
out
inc
sbb
rcrl
adc
mov
xchg
out
push
push
iret
jae
add
mov
movsl
leave
push
cld
and
inc
movsb
icebp
adc
add
jl
cli
jnp
cmpsl
popf
inc
loope
enter
out
fisubrs
mov
cmp
aam
or
cs
pushf
div
xchg
add
lods
xchg
sub
outsl
sbb
push
sub
push
and
repnz
pushl
or
cmp
xchg
jmp
jns
in
mov
call
mov
call
outsb
jnp
xchg
mov
mov
pop
and
jo
cmp
cmp
rorl
fs
pop
adc
pusha
imull
addb
mov
push
divb
push
cmp
pop
or
jle
cltd
sub
mov
sar
adc
adc
inc
mov
inc
and
ss
push
movsl
mov
mov
cmpsl
adc
fldl
and
hlt
jo
or
xor
loop
bound
fsubrs
push
incl
push
mov
xchg
sub
push
or
mov
das
jl
xchg
mov
cli
sbb
mov
fldcw
jl
nop
test
dec
push
cmp
jne
or
cmp
jne
aam
jl
stos
in
cmp
fsubl
mov
cmpsb
mov
add
aas
and
insl
cmp
nopl
xor
fcoml
lcall
inc
rcrl
xchg
cs
dec
dec
jo
mov
pop
jne
pop
push
adc
push
xchg
sub
pusha
in
ljmp
mov
jne
decl
int3
sbb
cmpsl
dec
lods
cmp
mov
xor
repnz
cmpsl
jle
or
xchg
ds
movsb
jnp
jb
lret
jns
roll
pop
adcb
repnz
sbb
cmp
addr16
testl
cmp
push
xchg
sub
scas
and
and
lods
mov
adc
fistpll
mov
inc
fsubrl
add
or
cmp
shlb
or
dec
push
divb
cmp
add
out
xchg
mov
jne
inc
sahf
mov
mov
mov
ljmp
sti
sbb
lret
adc
lahf
xorb
adc
inc
jo
test
cmp
repz
xchg
dec
ja
sub
aad
pushf
mov
push
out
sub
pop
cmp
mov
pop
xchg
jp
popf
jg
dec
cmp
jne
fmuls
les
movsl
or
mov
cmpsb
dec
ljmp
imull
mov
dec
or
mov
push
push
sub
loopne
dec
hlt
mov
cmp
in
into
and
and
cld
lea
ret
ds
and
shlb
adc
int
cmp
jmp
xchg
and
or
or
mov
shl
xchg
fstpt
or
push
push
jmp
jmp
test
add
fisubl
cwtl
out
dec
push
cmpsb
cmpsl
mov
push
xchg
test
pushf
scas
xchg
mov
pop
test
idivl
sub
ljmp
insl
aaa
nop
sbb
in
ret
fs
test
or
pop
fldt
add
mov
jne
sbbl
arpl
dec
pop
test
sub
adc
inc
cltd
jno
test
mov
cmp
jecxz
jmp
aas
add
push
js
sub
push
sbb
dec
xor
insb
adc
dec
mov
pushf
scas
lds
jge
push
mov
cmc
jo
fwait
data16
sbbb
pop
leave
cmp
ds
xor
lahf
ss
xchg
mov
inc
inc
loop
loope
andl
fucomi
loop
pop
add
out
pop
mov
lods
stos
mov
add
repnz
lcall
aam
xchg
xchg
cmp
jbe
cmpsb
cmp
ror
inc
fnsave
fs
lahf
js
sarl
js
push
mov
and
xor
imul
adc
mov
roll
movsl
mov
and
push
mov
imul
aam
jno
adc
lcall
mov
arpl
aam
das
ds
and
push
mov
jne
mov
mov
addr16
cmpsl
adcb
push
lret
cmpl
mov
fisttpll
sbb
jo
pop
dec
pop
sub
jnp
lock
imul
dec
and
test
std
and
repnz
test
dec
in
lret
xor
shr
sub
cld
lods
inc
fidivl
cwtl
inc
decb
mov
iret
jbe
add
es
push
mov
jno
popa
testl
imul
inc
mov
cld
daa
add
or
pusha
mov
mov
cmp
es
cmp
popa
popa
cmp
imul
mov
movsl
lock
push
mov
fnsave
pop
and
xchg
outsl
fwait
aaa
lods
xlat
mov
ja
push
pop
jne
jle
scas
mov
xchg
xor
push
mov
mov
mov
xchg
mov
add
int3
xor
pop
push
or
fadds
pop
cmpb
lods
mov
ja
mov
or
out
xor
test
inc
outsl
cmp
das
mov
sub
mov
imul
call
cmp
iret
add
popf
xor
es
xor
lcall
cwtl
mov
xor
testl
adc
mov
lods
or
ja
sub
mov
icebp
push
jl
cmp
pop
rorl
pop
xchg
insb
enter
insb
adc
jg
mov
test
jg
xor
lcall
mov
out
dec
out
notl
loop
clc
hlt
push
push
xchg
hlt
pop
rol
icebp
cmp
and
sbb
dec
inc
in
pop
push
addr16
jmp
lods
sbb
xchg
decb
pop
aad
mov
movsb
cli
rol
ss
ret
sbb
mov
sbb
lahf
arpl
xlat
jl
repz
imul
into
add
sub
xor
xor
mov
xchg
sbb
icebp
adc
setno
xchg
inc
mov
andl
notb
xlat
dec
mov
cmpb
mov
outsb
or
or
inc
cmp
stos
jns
dec
pop
rcr
mov
push
lds
sub
rorl
aas
shrb
pusha
push
push
imul
clc
daa
jb
push
stos
mov
fsubrp
xchg
stos
and
xchg
insl
sbb
test
mov
jle
ss
jnp
out
fstps
frstor
fistpl
cmc
mov
mov
or
cmp
scas
or
popa
adcl
push
pop
dec
sbb
add
mov
mov
mov
cmpsb
shrb
adcl
test
inc
jnp
push
sub
pushf
lret
xchg
imul
mov
pop
lahf
mov
pop
add
or
or
fldcw
or
xchg
pop
mov
pop
mov
ljmp
push
push
ficomps
mov
adc
addr16
call
ss
add
sbb
sahf
jns
cmc
jnp
or
adc
dec
pop
out
jle
int3
aaa
adc
mov
mov
loope
sub
bts
fiadds
cmc
mov
xor
adc
arpl
test
bnd
cs
sub
fs
dec
mov
cltd
sub
lret
fwait
jnp
or
ja
dec
xor
test
addr16
add
clc
pop
sbb
subl
bound
mov
push
add
gs
xchg
mov
fstp
jge
xlat
js
lea
mov
rorb
adc
jae
mov
arpl
sub
or
lret
addr16
sub
inc
mov
jmp
lods
add
pop
movsb
add
aad
mov
idivb
push
xorb
pop
and
sahf
pop
jno
lcall
push
not
inc
sub
stos
inc
xchg
iret
loope
cmpsl
leave
pusha
fldenv
jb
sub
insl
aad
sbbb
pop
daa
jle
mov
lds
inc
int
je
je
shlb
jp
jne
sub
stos
inc
jle
push
sub
pushf
in
test
xor
pop
dec
stos
xchg
dec
and
mov
jl
fdivl
mov
dec
jge
enter
add
fiadds
stc
xchg
mov
mov
dec
xor
pop
jl
push
mov
test
ss
shlb
mov
cwtl
out
inc
mov
shrb
jns
jg
jecxz
dec
insl
xchg
das
xor
mov
cmpsl
sbb
popa
add
pushf
arpl
fs
jno
inc
sub
xchg
mov
pop
ljmp
and
enter
xor
adcb
std
cld
dec
incb
lret
das
imul
ds
cmpsb
inc
and
in
lcall
mov
imul
lds
lcall
jmp
lret
and
mov
dec
into
pop
in
ljmp
add
push
jecxz
into
jne
dec
xchg
or
sahf
dec
xor
test
or
jge
or
int
pop
idiv
or
je
test
fcomps
dec
mov
cmp
pop
int
dec
sub
push
in
jbe
jae
popf
fs
jns
popa
pusha
sub
inc
pusha
call
in
jae
pop
add
ds
and
add
lods
fs
shrl
jb
stc
and
std
dec
jge
sbbb
aam
les
fists
push
test
add
mov
dec
aad
push
add
fdivrl
cmp
xor
inc
pop
mov
in
and
mov
in
adc
mov
mov
lea
sbb
mov
push
lods
pop
in
fndisi(8087
repz
fdivr
push
jo
lds
mov
adcl
cmpb
xchg
sbb
jne
lret
jp
call
arpl
or
jmp
pusha
jl
fs
rorb
adc
push
cltd
dec
dec
in
mov
insb
add
bound
jno
jns
mov
into
push
jge
mov
data16
and
stos
cld
xor
inc
rcll
pop
sbb
cmp
outsl
jnp
push
int3
fs
test
jmp
inc
divl
push
jmp
cltd
adc
xchg
test
pushf
ror
subl
xchg
inc
jle
lock
sub
outsb
hlt
jg
sbb
dec
hlt
push
jecxz
imul
call
fildl
jge
push
lea
mov
mov
mov
arpl
out
adc
enter
add
popa
repz
push
push
in
std
cltd
push
mov
jns
or
out
test
lret
js
inc
mov
scas
call
enter
jg
dec
popa
sub
hlt
or
scas
add
sbb
repz
and
sbb
push
out
and
iret
cmp
dec
mov
pop
enter
stc
mov
and
shlb
inc
or
adc
mov
inc
sub
mov
fwait
xor
mov
aam
pop
inc
pop
mov
bound
cmpsl
sub
scas
xchg
xor
lahf
fnstcw
lret
push
cmp
dec
dec
cmpsb
xchg
push
mov
addr16
jl
mov
dec
and
mov
xchg
adc
lcall
in
outsb
int3
and
fisubrs
mov
mov
push
ret
rcrb
addr16
cmp
lods
nop
fistpll
int
fisubrl
cmp
aaa
cltd
ljmp
gs
push
sti
inc
rdpmc
into
aas
bound
leave
pop
xchg
mov
sub
out
pop
cmp
nop
mov
adc
jl
add
fdivrs
push
loopne
repnz
xchg
add
xchg
mov
adc
mov
je
jle
pop
hlt
mov
pop
adcb
lcall
cmp
inc
mov
jmp
pop
in
mov
lea
push
lret
xchg
mov
flds
push
jecxz
adc
mov
cli
push
rol
mov
rorw
add
mov
repz
push
push
cmp
movsl
dec
jmp
jg
popa
inc
pop
mov
jg
cmp
pop
push
and
xor
adcb
add
pop
push
lds
pop
scas
pop
jmp
clc
lock
fildll
cmp
lods
fisubrs
sbb
repz
not
adc
jo
jb
inc
mov
stos
xlat
adc
inc
clc
dec
in
add
popf
repnz
popf
and
fists
aas
cli
push
mov
xchg
cld
xchg
mov
sbb
xor
cs
jo
jle
inc
xchg
add
out
and
xchg
test
push
cmp
jbe
sti
arpl
lcall
popf
adc
inc
mov
xor
arpl
jg
lods
inc
sbb
pop
sahf
sar
popf
out
lods
icebp
and
pop
pushf
xor
cwtl
adc
mov
or
lahf
test
jne
xor
lea
dec
in
or
lea
imul
ret
cmp
imul
lahf
bound
sub
xchg
loop
dec
add
jl
push
mov
push
dec
out
inc
clc
jae
sub
out
test
jbe
xchg
pop
dec
mov
hlt
dec
insb
ret
jle
fdivrs
or
cltd
das
mov
mov
mov
filds
popf
mov
in
cmp
aad
cmp
out
dec
jg
call
fucomip
testb
or
shlb
rcll
sahf
sub
in
shrl
arpl
shrl
stos
sub
shll
adcl
and
loopne
sbb
mov
cli
jge
mov
jge
and
lds
xchg
ljmp
movsb
sbb
inc
xor
or
mov
cmp
cmpb
xchg
lretw
xor
mov
mov
cmp
std
xchg
lcall
mov
push
add
outsb
sub
movsl
cmp
out
lods
jno
and
loope
popf
mov
iret
or
sbb
adc
lods
inc
or
fldt
inc
mov
jbe
gs
xchg
cmpl
cmp
ds
or
xchg
sbb
lcall
fs
or
push
xor
std
pop
insl
test
mov
jg
or
rcll
sub
cmp
xchg
xchg
loop
loop
mov
add
dec
sarl
mov
sbb
ret
cmp
jns
icebp
jecxz
pop
or
mov
sub
sbb
imul
repz
or
outsb
sarl
icebp
adc
insb
add
les
fdiv
sbbl
and
cmp
push
and
dec
imul
mov
cmpsl
sbb
ret
lds
mov
leave
stos
mov
push
fsubrs
pop
sbb
enter
inc
popf
mov
pop
insl
or
adc
in
rcrb
pop
ljmp
mov
cmpsl
ja
pop
sub
push
pop
lock
adc
icebp
pop
inc
bound
xor
packsswb
jne
push
sub
inc
cltd
jmp
pop
leave
push
inc
popa
cmp
push
xchg
loope
nop
fdivrs
xor
jns
clc
push
andl
lods
push
pop
repnz
jns
cltd
pop
jge
sbb
sbb
push
repz
pop
mov
push
in
movsb
sbb
dec
vpackssdw
mov
push
test
repnz
push
mov
into
push
leave
into
cmp
jecxz
xchg
lcall
sbb
test
cwtl
lods
pop
rcrb
pop
mov
push
mov
pushf
jae
xchg
rol
lods
stc
popf
test
bound
inc
sub
loop
adc
int3
jnp
jno
cmp
sub
rcll
repnz
jecxz
push
xchg
jns
ja
repz
mov
push
jecxz
and
aas
or
xor
jns
or
push
and
shll
imul
adc
out
dec
add
and
and
adc
jb
xor
and
push
sbb
aas
jo
rol
xchg
add
mov
test
dec
mov
push
mov
pushf
rcl
sub
lods
push
pop
hlt
sbb
xchg
in
cmp
popf
inc
add
test
outsl
ret
dec
lods
jmp
sbb
or
roll
lods
into
je
loop
cmp
sub
inc
arpl
scas
jg
subb
adc
jns
sub
xor
cmp
push
outsb
adc
decb
int3
rcrl
push
out
jmp
pop
xor
faddl
push
pop
popf
jge
repnz
and
mov
add
push
jge
mov
jge
xchg
test
setbe
lods
pop
in
dec
int3
mov
sbb
lahf
das
les
mov
in
push
inc
xchg
shr
bound
stos
movsl
and
inc
jmp
add
jmp
mov
mov
stc
mov
jp
xchg
pusha
jns
or
pushf
xchg
or
pop
ja
sbb
cmpsb
je
sub
cmp
adc
dec
ret
push
repz
lahf
sbbl
movsl
out
fstps
jb
adc
lods
jmp
cltd
cld
in
inc
mov
jmp
lret
or
sbb
jmp
push
fisttpl
mov
and
xchg
jae
sub
jae
mov
ja
bound
iret
shrl
inc
mov
inc
jbe
shrl
shlb
sbb
mov
popf
loop
shr
iret
fwait
adcb
add
sahf
push
ljmp
pushf
cli
into
das
xlat
insl
movsl
or
out
hlt
or
mov
inc
repnz
cmp
ret
ret
adc
xor
mov
cs
aam
cmp
dec
xchg
inc
in
push
cmc
mov
lock
inc
cmp
imul
or
jb
nop
sub
pop
cmp
sarb
pop
divb
mov
aas
xor
ficomps
pop
cmpsl
inc
dec
fnstcw
xor
adc
push
lods
outsl
jno
xchg
data16
xchg
mov
and
enter
lcall
and
jbe
xchg
in
ss
inc
insb
js
sarl
xchg
mov
call
iret
lods
sahf
xor
outsl
mov
xor
and
fs
dec
mov
daa
mov
push
fyl2x
and
pusha
clc
jg
or
mov
clc
lds
jnp
test
pop
xchg
add
outsb
sub
fsubr
ds
stos
outsl
or
icebp
dec
insb
xchg
jle
sub
rolb
xchg
push
inc
imul
mov
imul
push
and
cmpsl
in
insb
adcl
scas
push
div
adc
js
jo
cs
jb
rcr
xchg
xlat
imul
xor
sub
sbb
iret
xor
push
push
lods
popf
iret
cmpb
and
sahf
or
mov
out
lds
repnz
je
nop
jns
adc
lea
out
fstl
cmp
push
mov
dec
and
out
cmp
inc
pop
cmp
push
fsubrs
fldt
addr16
stos
mulb
mov
push
lock
cmovs
dec
mov
jo
ds
and
sbb
lret
mov
in
sbb
jae
ljmp
outsb
cmp
div
and
insl
sub
and
aaa
push
out
cmp
or
in
lret
cld
das
addr16
pusha
lcall
aam
or
fsubl
call
jno
hlt
xchg
xchg
js
fwait
cmc
pop
mov
push
or
xchg
shlb
push
arpl
add
jmp
shrl
xor
lods
dec
hlt
push
out
jae
mov
fdiv
sub
dec
push
lahf
lahf
popf
sub
int3
adc
adc
mov
add
fadds
aam
jg
mov
jo
cmpsb
mov
ss
addr16
adcb
aam
call
sbb
addr16
out
sbb
mov
enter
andb
outsl
je
jl
insb
jl
cltd
out
sti
mov
pop
add
shr
adc
sbb
inc
ljmp
imul
xchg
insl
ficoml
js
int3
out
rclb
lock
push
outsl
notl
hlt
enter
jg
sar
out
rorb
arpl
lcall
fadd
add
stc
add
push
push
daa
data16
jns
add
lret
sub
sbb
push
in
jl
cmp
out
ret
movsl
cmp
ror
mov
sub
push
push
adc
push
pop
adc
xchg
mov
lret
and
and
sub
pop
pop
push
push
lcall
sub
cmp
into
movsb
xorb
lahf
sbbb
cmpsb
pop
cli
test
xor
cmp
inc
mov
test
or
cli
mov
push
mov
mov
push
nop
jecxz
es
fldl
jno
lods
inc
sub
shrb
dec
lret
bound
jo
les
cmpsb
dec
mov
repnz
stc
xor
arpl
mov
sub
imul
ja
xor
jg
jne
cmp
out
in
pop
cmpsb
push
add
xchg
jl
push
scas
movsb
mov
sub
sub
es
jmp
mov
repnz
cmp
dec
scas
sbb
ds
inc
out
in
jl
jns
dec
cmp
mov
adc
imul
inc
pushf
ss
push
rcr
repnz
in
mov
push
jmp
inc
dec
cwtl
cmp
dec
loop
sbb
imul
dec
popf
mov
mov
fcom
sbb
loope
cld
negb
test
dec
mov
imul
lock
mov
into
gs
push
ds
adcl
mov
lcall
push
sbb
cmpsl
and
add
adc
fs
ret
pop
xchg
popa
cmp
push
mov
push
les
test
cmp
fnstcw
cs
nop
mov
pop
aad
daa
xchg
les
xchg
push
inc
mov
dec
push
cmpsl
stos
lahf
mov
lock
outsb
mov
jns
loope
sub
leave
lods
mov
and
mov
cmp
fldl
sub
std
das
or
test
xchg
add
shl
into
fwait
aaa
sbb
out
add
mov
gs
clc
xchg
decb
pop
and
xchg
add
mov
ja
sbb
rcl
imul
lret
imul
loop
test
je
aaa
lret
cld
pop
inc
mov
lea
sbb
daa
incb
popf
pop
push
imul
jbe
js
fimull
sbb
ja
xor
ret
ret
jge
mov
mov
test
xor
push
mov
mov
dec
lcall
test
lret
loope
jge
aas
rclb
xor
aad
jno
negb
daa
cmp
mov
out
rorl
dec
out
add
mov
and
push
stos
fiaddl
mov
add
pushf
test
adc
sub
xor
cltd
je
lret
pop
mov
shll
fdivp
inc
dec
lahf
push
out
aad
iret
es
sub
inc
fcmovnu
xor
cmp
stc
xor
push
addl
or
or
js
xlat
pusha
jnp
fmull
movsl
push
in
out
popf
test
fidivrl
jg
adc
sbb
loope
cmc
loop
test
push
mov
outsb
insb
sbb
sub
test
mov
fistl
nop
xchg
push
ljmp
movsb
pop
cmpsb
aaa
cli
xchg
popf
mov
sbb
in
sbb
mov
sbb
lock
popa
push
sub
cltd
jns
lret
cmp
inc
and
sbb
das
jle
in
out
ss
adc
out
mov
stos
es
pusha
mov
mov
or
inc
fists
push
push
add
sub
in
rcll
mov
mov
pop
insb
outsb
sbb
sar
in
add
sub
inc
xor
sti
xchg
dec
xor
jmp
sbb
shl
sub
cmpsl
int
sbb
mov
cmp
cmp
mov
pop
movsl
pop
jbe
mov
dec
loope
test
jmp
aad
push
pop
sarb
jmp
jp
imul
insl
inc
pop
jle
push
das
daa
mov
push
xchg
ss
jecxz
in
push
mov
jno
jle
and
adc
mov
sub
movsl
or
and
fsubp
test
mov
pusha
shll
cmp
pop
adc
xor
mov
mov
cmp
nop
popa
pop
mov
out
adc
loope
es
popf
xor
out
push
popa
jmp
fbld
dec
dec
sub
inc
push
movsl
jne
aam
adcl
enter
mov
mov
push
sub
int
xchg
pop
sbb
imul
out
jle
clc
fwait
cmp
test
shl
pop
xor
addr16
pop
cltd
pop
mov
jge
pop
movsl
js
inc
out
bound
sub
movsb
and
aad
stos
loop
cmpsl
or
stos
mov
jmp
pushf
and
xchg
inc
push
inc
and
cvtps2pi
push
jo
sbb
mov
or
incb
sarl
add
mov
xchg
or
push
or
pop
fsts
mov
push
fbstp
xor
mov
xchg
in
sbb
repz
xchg
fidivrs
sti
add
dec
lahf
push
stos
mov
sub
pop
push
xchg
insb
jecxz
mov
jge
dec
mov
or
sub
sbb
xor
ja
cs
imul
jo
adc
fdivl
push
xchg
mov
or
adc
push
fdivrl
notb
pop
mov
inc
shrl
popl
mov
movb
nop
mov
ljmp
jno
test
fidivs
aaa
scas
push
stos
in
mov
or
lcall
push
xchg
dec
fsubrs
dec
mov
jo
sub
inc
push
xchg
fwait
or
loopne
loop
mov
dec
mov
xchg
out
sbb
ljmp
lret
or
jae
cmpsl
mov
push
stos
add
add
enter
out
mov
scas
out
into
adc
ret
and
and
sahf
jae
dec
test
scas
xchg
cli
dec
rcrb
or
inc
ljmp
movsl
fnstenv
jecxz
das
lret
pop
pop
adc
testl
inc
movsl
filds
lods
sti
xchg
cmp
out
push
sub
or
repnz
mov
jg
fidivs
pop
or
arpl
jnp
outsb
lcall
cmp
mov
mov
mov
dec
cmpsb
mov
rcll
mov
ss
push
xchg
outsb
lea
imul
inc
mov
xchg
jno
jmp
sub
jno
arpl
push
stos
mov
push
test
pop
jge
or
xor
dec
mov
adc
aam
shrb
xchg
loopne
mov
inc
mov
xchg
dec
adc
lcall
lret
jo
lds
stos
jae
push
test
jg
xor
and
xchg
addr16
nop
imul
lods
lret
loopne
sub
push
cmpsl
jl
dec
mov
xchg
fildl
fsubs
hlt
pop
mov
cmp
leave
cmp
inc
push
test
jne
xor
add
dec
pop
mov
aam
rcl
lock
sub
mov
jp
shrb
mov
pop
mov
mov
dec
leave
fucom
jae
stc
mov
inc
andb
mov
imull
xchg
outsl
ret
and
xchg
jmp
xchg
add
dec
xor
jo
leave
dec
scas
jno
fldt
lock
adc
out
ljmp
or
test
call
aam
andw
sub
dec
inc
dec
lds
mov
add
mov
cmc
lds
jle
adc
repz
test
fisubs
out
xorl
clc
rcrl
sub
sbb
scas
dec
mov
jae
mov
sbb
nop
and
inc
stos
cmp
jbe
cmp
fwait
ss
jo
aaa
ds
cmc
adc
in
cli
jo
scas
dec
xchg
je
stos
jmp
es
xchg
iret
movsl
push
icebp
pop
xchg
xor
rcll
leave
pop
fiaddl
data16
push
and
or
and
call
dec
notb
jge
lock
mov
adc
mov
jno
adc
xchg
test
push
mov
mov
pop
mov
fstl
mov
sti
in
or
sub
sbbl
xor
cmc
ljmp
lock
fwait
push
fistl
or
lret
and
cmpsb
push
push
cltd
inc
mov
xor
or
stc
test
nop
popa
clc
rol
imul
xor
push
ret
ret
pusha
sbbb
in
sahf
mov
inc
fisubrl
add
test
xchg
xor
inc
inc
fs
mov
and
push
in
mov
ja
fnstsw
lods
sbb
jb
xorb
cmp
pushf
xchg
adc
in
bound
adc
scas
xor
pop
adc
mov
insl
add
mov
inc
lahf
adc
push
and
jbe
clc
xor
stc
sub
hlt
dec
push
data16
jb
nop
lret
xchg
add
ret
jae
out
xchg
jp
mov
sub
sbb
lahf
mov
ret
mov
pop
icebp
and
js
jne
sbb
xchg
and
gs
mov
jne
xchg
pop
inc
leave
dec
movsl
xchg
sub
xchg
adc
adc
xchg
cmp
xor
mov
jb
sbb
cmp
imul
jge
adc
jne
rorl
lods
pop
dec
fsubrp
in
pop
aam
or
rep
dec
mov
jnp
and
lea
cs
in
out
pusha
jg
jecxz
pop
enter
pusha
xor
bound
xchg
mov
or
es
out
lods
imul
cmp
fistpll
pop
mov
stos
inc
es
movsl
mov
std
lock
xor
sub
mov
scas
push
xor
loope
adc
or
fstp
test
lahf
inc
cld
and
or
xor
push
sbb
mov
movsl
stc
test
jecxz
or
inc
inc
cmc
sub
mov
rcr
int
fildll
adc
movl
lds
out
popa
xchg
mov
xor
and
into
inc
stc
mov
aad
add
dec
pop
hlt
jns
mov
push
or
or
daa
mov
sbb
add
cmpsl
xor
movsl
jnp
fcmovnbe
mov
xor
ret
shrb
frstor
mov
inc
mov
sub
sti
jp
ds
dec
mov
xlat
mov
shrl
jp
jnp
inc
xchg
fmulp
iret
or
ja
lds
cwtl
test
and
ret
push
or
out
xchg
mov
and
xchg
clc
out
cmc
faddl
sub
cs
inc
vpmulhw
xchg
mov
ss
popf
es
inc
pop
xchg
and
mov
test
add
and
mov
scas
in
into
cmp
cli
roll
movsl
lret
scas
pop
jmp
divb
sub
mov
mov
out
mov
inc
popa
notb
inc
adc
jl
mov
leave
dec
call
icebp
out
imul
pop
notl
jbe
movsb
or
jo
mov
call
mov
gs
mov
hlt
inc
pop
cmc
jae
lcall
jb
out
inc
shl
test
xchg
and
xchg
aas
inc
hlt
gs
mov
jmp
and
and
cwtl
lds
lock
push
outsl
jecxz
mov
dec
add
mov
enter
fnstcw
xor
loop
adc
push
in
jae
dec
shll
sbb
dec
loopne
or
pusha
jae
dec
fndisi(8087
imul
test
decb
cmp
loopne
les
in
ficoml
jns
stos
in
popa
test
xchg
flds
sbb
mov
into
mov
sar
paddsb
pop
repnz
jns
mov
dec
mov
shlb
pop
cltd
repz
test
sahf
mov
push
xor
ret
pop
jl
lock
xchg
popf
loope
iret
adc
jl
pusha
adc
data16
lea
jge
dec
and
mov
cmp
in
cmc
mov
jecxz
fstpl
out
subb
add
fst
or
stos
cmp
imul
shlb
sub
inc
in
ljmp
hlt
loope
pop
and
adc
fldt
push
lds
pop
jo
push
jnp
xchg
nop
or
and
fistl
cmc
sbbb
inc
xlat
movsl
inc
or
xchg
cli
jecxz
sub
adc
enter
in
jbe
stos
inc
xchg
push
push
dec
mov
mov
inc
ficompl
inc
in
jp
fldt
fldl
pop
fdivl
and
inc
mov
jge
das
scas
orl
inc
roll
dec
in
pop
data16
xchg
jl
clc
loop
push
add
dec
mov
and
jp
mov
cmpsl
stos
es
mov
in
pop
test
into
addr16
fs
mov
push
insl
mov
sbb
sbb
push
nop
cli
add
sti
dec
lret
lret
cld
sbb
inc
adc
and
pop
sub
dec
dec
loopne
mov
shll
in
rcrb
cmpsl
into
sbb
dec
fwait
or
xchg
cltd
pushf
jg
sarb
jbe
and
mov
es
es
movsl
xor
aam
push
mov
testl
test
pushf
adc
shll
jmp
jmp
imul
mov
dec
and
jmp
jecxz
fcomps
jb
int
adc
sub
sarb
dec
pop
jecxz
shl
sbb
cmpsl
xor
cmp
adc
jns
xor
sahf
jbe
popa
cmp
imul
test
iret
cli
mov
jp
mov
xchg
inc
mov
push
arpl
sbb
sbb
pop
mov
pusha
ljmp
mov
mov
push
cltd
pop
repnz
pop
daa
lcall
cmp
pushf
shlb
mov
xor
sub
pop
int
sar
adc
push
inc
insb
sub
outsl
xchg
or
push
pop
jl
insl
out
std
dec
inc
pop
cmc
push
cmp
outsb
loop
push
mov
add
cld
lea
rcll
scas
aas
mov
mov
pop
insl
fstpt
lods
sahf
and
fbld
xor
pop
dec
xor
dec
orl
rorl
push
jl
in
adc
lods
nop
jnp
xchg
jnp
fimuls
and
and
lods
add
pop
fnsave
in
inc
mov
mov
mov
pop
xchg
add
mov
cmc
loope
or
mov
xor
sar
cmpsl
mov
add
fidivrl
lahf
mov
aas
xor
mov
sbb
out
pop
int3
add
jae
mov
sbb
mov
jg
add
cs
inc
mov
pop
lahf
add
xor
cmp
inc
mov
loope
and
jge
mov
add
pop
jge
pop
adc
sub
add
sti
pop
cmp
jmp
pusha
inc
aam
push
and
daa
in
jne
les
mov
popf
cmpsb
xchg
out
test
add
filds
inc
divb
push
mov
sarb
scas
test
xor
in
dec
cmc
push
addr16
fwait
xor
test
add
mov
and
in
mov
adc
push
pushf
and
or
insb
mov
out
cld
in
into
pop
insb
cli
dec
mov
out
push
dec
cmp
inc
jmp
push
push
add
sub
iret
jp
out
inc
lret
xlat
pop
gs
sti
fdivrs
mov
scas
cmpb
push
mov
fisttpl
mov
fdiv
nop
jg
mov
add
iret
pop
popa
clc
sti
andl
cmpsl
lret
xor
mov
push
or
sub
test
adc
ljmp
rcrl
jle
mov
arpl
sti
add
data16
xchg
int
inc
cmp
outsl
jo
or
pop
cltd
push
jne
mov
fs
not
xchg
lea
notl
stos
push
pop
sub
lods
inc
fsubrl
or
mov
insl
adc
inc
mov
adc
sarb
fwait
jmp
fdivrl
or
add
scas
dec
mov
xorb
jbe
mov
inc
inc
push
lret
push
mov
popa
mov
fwait
cmp
cmp
stos
mov
rcl
insb
add
repz
or
and
inc
lret
adcb
mov
sti
jnp
sahf
sub
pushf
test
sub
icebp
cmc
insb
mov
add
mov
xchg
gs
sti
loope
mov
arpl
mov
mov
mov
add
sub
lods
mov
push
test
push
dec
xchg
xorb
cmpsl
outsb
fbstp
cmp
dec
dec
xor
and
adc
push
cltd
inc
sbbl
gs
cmpsb
push
pushf
adc
lret
add
inc
xchg
add
cltd
mov
daa
ss
xor
in
pop
push
cld
sub
mov
stos
mov
mov
xchg
out
test
aas
push
int
xor
mov
outsl
fdivr
cmp
mov
adc
dec
fs
rclb
inc
fsubrl
dec
mov
lea
lret
lock
pop
pop
add
lahf
xor
fwait
cmpsl
das
jmp
imul
bound
pop
cmpsl
cmp
mov
sub
xor
xor
fiadds
mov
pop
in
jmp
pop
sbb
mov
pushf
adc
les
cld
push
adc
enter
sub
sbb
jb
jp
jge
push
jmp
lods
iret
popw
sbb
inc
es
test
mov
divb
jb
addr16
mov
vunpckhps
adc
mov
insb
js
ja
mov
shlb
jp
mov
xor
ja
push
out
xchg
pop
out
int3
pusha
mov
mov
data16
push
pop
xchg
shlb
ds
popa
xchg
mov
inc
dec
adc
cli
push
test
and
fsts
lods
cmp
xchg
not
mov
inc
fiadds
xor
push
mov
or
rcl
pop
xchg
inc
sbbb
dec
push
jl
xchg
ja
push
xor
push
inc
cwtl
in
inc
or
jnp
movsl
cmp
cwtl
repnz
cmpsb
ljmp
adc
roll
ss
arpl
inc
add
cmpsl
int
and
fisubl
xchg
add
lods
addr16
mov
gs
mov
mov
xor
mov
movl
xor
pop
dec
arpl
mov
cmpsl
xor
ja
inc
jecxz
dec
jne
inc
or
xchg
sub
push
push
repnz
cmp
fmul
inc
xchg
movsl
cmp
popw
stos
jae
cmp
push
leave
pop
int3
sub
adc
and
adc
in
test
insb
jb
in
xlat
xchg
sahf
xor
std
gs
jg
je
inc
mov
push
lret
dec
outsl
js
sbb
pop
ret
jecxz
loope
pop
mov
movsb
and
mov
mov
ffreep
movsb
inc
pop
mov
pop
add
cmpsb
in
add
add
push
lcall
cld
or
std
ret
repz
in
cmp
sbb
mov
loope
shll
pop
mov
mov
jne
inc
adc
imul
sarl
and
lret
inc
lret
push
std
cmp
rcrl
dec
pusha
pop
jp
mov
push
stos
or
add
sti
or
add
je
pop
rcr
pop
stc
arpl
test
jp
inc
jnp
sbb
cmp
pop
lret
mov
ret
dec
insl
les
popl
lds
xor
icebp
and
inc
or
push
dec
inc
sbb
lret
sti
pop
mov
loope
frstor
int
inc
call
jns
and
adc
jbe
cld
dec
leave
in
sbb
lret
xlat
sbb
loope
mov
push
imul
imul
sub
xor
mov
clc
mov
xlat
push
pusha
and
mov
lgs
push
das
in
jae
icebp
xor
test
mov
and
inc
mov
loop
repnz
xchg
les
push
inc
aad
test
out
inc
sti
dec
lea
push
fnstcw
cmpsl
jns
mull
push
mov
dec
jns
imul
pop
fcompl
push
add
insb
insb
ljmp
xchg
push
jae
sti
inc
push
mov
push
movsl
xchg
jmp
jae
popf
cmp
xor
and
and
jno
loope
xchg
mov
xchg
push
mov
pop
mov
cmp
test
movsb
cmp
adc
push
mov
mov
cmc
dec
push
shlb
in
mov
xor
cmp
sbb
cmp
int3
or
popa
cld
mov
or
xchg
push
ss
xor
in
pop
sub
rorb
xchg
std
cmpsl
mov
lcall
adc
lds
mov
es
lock
inc
pop
and
arpl
inc
ljmp
out
ret
mov
sbb
xchg
add
jnp
out
mov
mov
rcrb
stc
insl
push
inc
inc
test
clc
je
inc
fnstcw
inc
add
call
ficomps
int3
daa
dec
repz
rorl
std
in
out
push
mov
arpl
imul
xchg
stc
push
mov
mov
jnp
cmp
pop
pushl
dec
pop
imul
idivb
jno
cmpl
stos
mov
cmpsb
daa
inc
add
lock
movsl
bound
mov
xchg
es
insl
loopne
sahf
xor
pop
sub
test
mov
shl
lahf
pop
sub
and
scas
add
sysenter
jns
imul
mov
or
xchg
sub
aas
movsb
pop
and
jp
push
rorl
insb
js
sbb
mov
adc
or
inc
adcb
mov
xlat
call
jle
inc
repnz
add
incb
mov
sub
stc
popf
mov
mov
or
xchg
repz
inc
and
xchg
cltd
and
add
inc
xchg
mov
scas
imul
or
incb
les
test
pop
movsb
insl
lods
lods
dec
outsl
jns
mov
int3
add
xchg
shlb
testb
shl
pushf
pop
out
leave
adc
clc
cmpsl
cmpsl
popa
push
inc
shlb
ss
movsb
sub
push
jo
cld
sub
fidivl
sbb
loope
mov
mov
repz
adc
xor
sub
in
xchg
popf
aas
lcall
dec
fmuls
jle,pt
push
aaa
push
push
scas
pop
sahf
std
adc
and
xor
jg
pop
mov
mov
cwtl
fmuls
ljmp
inc
xlat
scas
mov
fnstenv
xchg
lods
and
push
stos
mov
dec
inc
jl
orl
mov
push
out
aad
fimull
xchg
xor
out
popa
cmp
aam
gs
insb
add
xchg
cltd
mov
push
and
test
fnstcw
sahf
xor
mov
xlat
rolb
pop
aam
call
jnp
in
jae
jmp
and
or
pop
hlt
in
xchg
cmp
jnp
jp
js
or
lret
fildll
adc
xchg
xchg
lahf
sub
mov
and
lea
rcr
out
and
push
mov
push
push
jge
adc
jae
idivb
out
push
push
or
xor
loop
call
call
ss
shrb
repnz
in
lcall
push
sti
xor
test
sbb
sub
and
fnstsw
pop
fld
movsl
sub
jl
xchg
call
clc
adc
aad
xor
data16
pop
outsb
and
or
test
loop
pop
mov
lahf
data16
aaa
mov
bound
jno
bound
or
aad
mov
hlt
cmp
sbb
mov
inc
or
mov
lods
mov
sub
mov
hlt
in
push
enter
popa
roll
sbb
mov
sbb
sbb
pop
jb
inc
scas
stc
mov
xchg
out
pop
negl
push
les
insb
cli
sbb
mov
insb
sub
insl
ja
or
shlb
adc
xchg
sub
lret
outsl
bound
ljmp
fwait
inc
dec
sub
xchg
add
or
mov
dec
dec
aam
xlat
mov
xor
flds
add
mov
ljmp
jle
in
orl
js
out
dec
jecxz
clc
scas
xor
mov
daa
fs
out
cld
mov
test
xchg
fcmovnb
sbb
mov
dec
or
xchg
xor
mov
insb
outsl
out
ret
addr16
cmp
dec
inc
push
cmc
ret
inc
int3
mov
rolb
fwait
xor
jo
inc
in
inc
and
push
repz
jbe
cmp
addb
jae
mov
divb
imul
dec
je
inc
bound
dec
je
push
mov
cltd
and
int3
flds
inc
mov
fcmovne
push
nop
inc
lea
mov
mov
int
aas
xchg
fisubrs
imul
jecxz
sub
fcoms
rolb
scas
cmpb
lds
int3
mov
mov
lret
arpl
bound
es
cmp
jl
dec
cmpsb
aad
mov
aaa
mov
push
push
mov
pop
mov
mov
fnstsw
popa
imull
ficompl
popa
mov
mov
mov
jge
xor
fsts
fwait
cltd
lock
jle
les
jl
sub
ficompl
roll
or
daa
mov
mov
aad
mov
inc
add
add
mov
or
idivl
leave
pop
sub
cld
xchg
popa
mov
jle
sbb
insb
idivl
jecxz
xchg
inc
adc
mov
fisttps
insl
or
loop
jecxz
pop
and
pushf
sub
icebp
xor
insb
add
and
adc
cltd
stc
rep
out
xor
mov
sar
sbb
xchg
adcl
or
ss
pop
sti
pop
mov
es
scas
mov
adc
jne
and
pop
cmpsb
sar
push
mov
mov
into
mov
or
xor
iret
push
mov
sbb
xor
test
out
imul
lret
out
mov
dec
or
out
push
andb
jp
clc
insl
shl
jnp
add
pop
ljmp
push
or
dec
mov
scas
loopne
dec
dec
shrl
ss
scas
dec
cmp
into
arpl
dec
mov
pop
aam
jb
adc
push
stos
sbb
aaa
cli
inc
out
loope
push
cmp
xchg
insb
inc
inc
inc
ret
mov
mov
lods
mov
mov
ja
push
aas
std
test
inc
fmulp
and
and
mov
mov
or
fwait
adc
dec
add
mov
test
xchg
ljmp
jmp
sbbb
out
push
inc
out
push
dec
fildll
mov
sbb
pop
clc
insl
loopne
ja
mov
dec
push
inc
stos
lods
jo
xlat
xchg
je
adc
cmc
mov
shrb
fsubrl
ds
out
jg
mov
pusha
and
rcl
testb
xor
add
test
mov
les
imul
aad
in
or
mov
cltd
in
pop
insb
ljmp
call
int3
jne
push
pop
fxch
xchg
out
pushf
jnp
sbb
out
lret
and
add
cltd
shrb
mov
mov
dec
mov
ret
cmp
std
or
or
jb
in
cltd
ret
int3
stos
inc
scas
cmp
mov
rolb
aas
stos
loop
pop
inc
inc
icebp
dec
add
out
push
js
push
stos
pop
jne
add
test
outsl
cmc
jp
data16
or
jbe
mov
xchg
dec
mov
psubq
mov
dec
jp
popf
pop
ret
sub
iret
loopne
lock
aad
imul
and
push
mov
aam
cli
and
int3
lahf
xchg
repnz
lods
ljmp
mov
adc
fnstenv
pop
movsb
mov
pop
cmp
sar
aam
test
pop
dec
pop
lret
loopne
daa
mov
test
stos
sbb
clc
pop
jge
mov
fsubrs
xchg
les
pop
inc
fildl
lret
or
sub
lods
push
sbb
cmpsl
adc
jbe
shrl
inc
mov
jo
in
jo
loop
dec
clc
mov
orb
aad
jl
sbb
sub
mov
pop
mov
fcoms
in
sbbl
mov
out
or
jg
es
dec
sbb
xchg
sub
mov
dec
pop
jp
cmp
mov
stos
popa
or
fwait
jnp
leave
xor
push
push
in
cwtl
adc
lods
adc
jecxz
mov
ljmp
push
into
mov
int3
push
mov
xorb
mov
aas
int
pop
in
sub
cmp
call
or
loop
addl
loop
jbe
jnp
sub
andb
pop
addl
add
dec
insb
in
sbb
inc
add
test
fs
sub
aad
mov
mov
loope
xchg
cs
dec
pop
addr16
pop
pop
cmp
or
and
rcll
cld
or
jb
and
jb
dec
test
xchg
pop
scas
inc
sbb
test
mov
push
ljmp
jno
shlb
xchg
lods
stos
scas
and
sbb
test
mov
lods
das
xchg
stos
cmp
mov
xchg
sub
inc
scas
inc
jg
jnp
cmpsl
adc
test
lods
mov
daa
mov
aam
or
xorl
adc
xchg
xchg
sub
enter
fisubrl
sahf
iret
xchg
dec
mov
cmp
cmpsl
call
out
fs
and
icebp
mov
js
jle
movsl
fcompl
cmpb
pop
jno
pop
add
jg
lcall
xor
mov
dec
and
ja
xlat
sbb
sbb
mov
jno
jmp
insl
add
push
nop
stos
xor
pop
sahf
add
mov
lea
movsb
push
out
jnp
lds
jo
not
push
xchg
test
mov
mul
push
movsl
jo
jle
fcoms
jge
xlat
jecxz
negl
ljmp
aad
and
mulb
popf
pop
adc
add
les
daa
xor
mov
push
je
test
or
les
cs
rorl
add
mov
pop
rclb
out
mov
xchg
cs
aaa
and
inc
int
push
fistl
pop
decb
push
aas
dec
jno
inc
scas
jmp
add
jo
lret
inc
out
lock
scas
testb
or
sub
ds
imul
imul
jb
xchg
js
cld
int3
out
adc
cmp
cs
sbb
push
test
inc
test
dec
pop
fwait
ret
into
in
lret
pushf
mov
push
mov
adc
cs
pushf
pop
loopne
shl
lods
mov
pop
bound
scas
jg
xchg
fs
cmpsb
cmp
sub
cmp
cltd
movsb
addr16
arpl
addr16
mov
stc
jae
adc
adc
ljmp
push
jae
je
ljmp
popa
mov
sub
cmp
xor
inc
pop
cmpl
xor
cmp
mov
fistl
mov
adc
xor
xchg
push
mov
aas
pop
and
ss
mov
fwait
cltd
iret
fnsave
mov
call
adc
popa
xor
xchg
imul
scas
pusha
sub
jne
sub
dec
frstor
or
imul
jecxz
add
ss
out
mov
fidivl
mov
push
push
sub
lahf
arpl
xchg
popa
mov
ds
cmp
rcrb
pop
xchg
lods
test
xchg
xor
sbb
adc
aas
hlt
mov
pop
out
decb
stc
cwtl
ds
pop
xlat
cmc
dec
or
lcall
mov
insl
stc
and
daa
imul
movsl
and
adc
dec
or
in
inc
adc
xchg
sti
xchg
jge
push
lahf
jmp
or
push
fmuls
dec
cmpsb
les
fsubs
out
push
sub
jmp
cmpsb
les
loopne
cmpsb
pushf
addr16
inc
cmpsl
jbe
mov
mov
adc
fwait
mov
push
lcall
ja
push
sub
pop
jbe
shlb
shrb
mov
mov
or
fbld
jle
aaa
jo
call
pop
mov
push
sbb
mov
lock
scas
mov
fadd
jg
loopne
cmp
mov
outsb
adc
xor
rcrl
outsb
mov
and
adc
enter
fidivl
les
push
mov
jl
pop
mov
push
insb
fldt
push
fldt
fdivrs
jns
mov
mov
dec
inc
out
xor
xchg
arpl
jne
fnstenv
ret
loop
negl
out
call
loope
push
popf
mov
inc
pop
sti
lods
stos
in
xor
mov
push
cmpb
or
loope
js
push
stos
xor
fimuls
cs
sbb
scas
cmp
pop
xchg
fnstsw
jp
pop
xor
in
inc
in
dec
xchg
pop
enter
jl
int
add
fxch
arpl
sbbb
ljmp
xor
cmp
pop
arpl
push
mov
pop
cmpsb
sbb
cmp
imull
ljmp
fistpl
sub
mov
int3
cmp
call
mov
pop
negb
stc
push
movsb
daa
xor
mov
mov
and
in
sbb
imul
mov
out
shrb
mov
xchg
sbb
sub
test
lret
cmpsl
mov
lds
dec
inc
mov
jo
or
pop
jnp
dec
in
mov
imul
mov
xlat
mov
leave
int
iret
iret
iret
jmp
mov
jbe
mov
mov
fucomp
push
sub
mov
repz
push
sub
sub
sub
repz
mov
movsl
adc
call
out
aaa
mov
push
jmp
sbb
mov
cmpsl
sbb
jo
into
mov
push
jne
mov
push
sbbl
xor
loope
cltd
mov
mov
xchg
sub
adc
mov
fwait
mov
cld
push
iret
data16
out
inc
sub
negl
call
and
sbb
iret
adc
push
or
fidivs
mov
popa
ljmp
repz
mov
dec
cld
jo
xor
fwait
xor
lock
pop
sub
sahf
clc
insb
cmpsb
mov
in
and
les
fadd
in
pop
xor
mov
dec
out
leave
sahf
xchg
jnp
test
and
push
out
inc
adc
shrl
cmpsl
mov
jnp
add
push
and
sub
or
aam
sub
testb
push
pop
adc
shl
xchg
int
cli
or
and
push
lret
and
xchg
add
xor
xchg
rep
pop
cli
out
stc
sub
sahf
xor
stos
jnp
jmp
inc
js
jae
ret
lods
or
lcall
int3
ljmp
sbb
lods
inc
jg
es
andb
testl
sbb
mov
insb
out
les
pop
outsb
cld
call
cmp
movsl
test
test
outsb
lods
mov
sbb
inc
insl
push
loope
adc
inc
add
int
loope
idiv
xchg
jb
xchg
sub
sbb
fildll
jbe
lods
jae
xchg
int
cmp
test
outsb
sbb
addr16
test
mov
or
mov
rcll
js
cmp
pop
sbb
pop
lcall
iret
cmpsb
xchg
jecxz
lret
pop
lock
stos
jle
or
loop
sti
jmp
cmp
xchg
lods
loop
fidivs
std
xchg
ret
inc
jne
cmpsb
clc
or
cmp
clc
pop
inc
imul
jnp
imulb
pop
mov
ret
jb
scas
or
cmpsl
int3
inc
sbb
mov
and
add
cmp
push
jmp
incl
sbb
jbe
lea
fldt
std
lret
scas
jl,pn
xlat
and
clc
and
cli
js
sub
ljmp
aad
inc
push
sub
aad
mov
aas
pushf
dec
aad
mov
popa
mov
bound
pop
aas
popf
push
cmc
mov
pop
jl
pusha
xchg
xor
addl
popf
cmp
mov
ss
xchg
cli
nop
and
inc
rcr
jecxz
mov
cmpsl
imul
rol
mov
cltd
cmpsl
jno
pop
fisubrs
fwait
jns
lods
adc
stos
sahf
mov
movsl
sub
insl
and
loope
lods
or
subl
aad
movsl
dec
or
cmp
sub
lock
push
ja
bound
jp
test
lds
scas
mov
in
adc
into
ss
arpl
dec
xchg
cwtl
push
in
rorl
inc
mov
out
inc
jae
clc
push
push
fcoml
xchg
mov
pushf
pop
adc
pop
xor
fldt
bound
xchg
dec
or
pop
int
sarb
filds
testb
dec
call
out
repnz
cmpps
adc
cld
dec
mov
mov
mov
pop
push
push
mov
and
xor
cltd
lahf
in
loopne
outsl
mov
rcll
or
fidivrl
jl
add
cmpsl
aad
add
mov
mov
notl
mov
mov
push
scas
mov
imul
clc
orl
mov
rolb
pop
mov
std
icebp
mov
stos
sub
mov
add
das
hlt
clc
xor
sub
popa
add
mov
mov
insb
out
pop
ljmp
lods
add
fs
jne
out
movsb
inc
idivl
xchg
xchg
sub
or
outsb
push
shll
addr16
inc
stos
push
aad
shrb
inc
sub
fdivp
lds
push
pop
add
push
cmpsl
cmp
cmp
lahf
mov
shlb
cld
lods
sti
rcrb
mov
lahf
cmp
enter
sub
jae
addr16
push
cmp
rol
pop
cwtl
daa
mov
iret
cmpsb
mov
sbbb
or
loope
iret
jge
imul
lahf
sub
mov
fwait
push
mov
pop
int
inc
jle
xor
push
dec
jp
jnp
in
adc
repnz
and
add
outsl
xor
sbbl
shlb
sti
and
jp
sbb
in
test
sbb
jp
in
es
or
inc
inc
pop
mov
stos
push
ds
pop
out
fs
jnp
sbb
pop
xlat
sti
xchg
repnz
inc
lcall
add
icebp
push
xchg
lods
int3
in
cli
push
inc
adc
scas
fidivs
mov
sbb
test
aaa
std
push
and
and
push
fiadds
mov
in
popl
aaa
lret
mov
pop
adc
push
and
lds
xor
loope
or
cmp
pushf
push
iret
pop
or
mov
test
and
test
or
call
out
cmp
into
xor
adc
in
jecxz
mov
fwait
jbe
and
pop
dec
cmp
cld
fsubrs
inc
push
movsb
push
in
aad
sub
cmc
movsb
and
shlb
lret
call
mov
mov
jp
mov
iret
cmp
mov
ret
out
inc
pop
fmul
mov
push
pop
hlt
das
lret
sbb
xchg
xchg
pushf
shlb
cmpsb
mov
or
add
xchg
out
aaa
dec
push
fildl
add
cld
mov
pop
or
dec
mov
add
fdivs
int
cmc
mov
sbb
mov
inc
inc
pop
in
lods
jo
andl
sbb
pop
xchg
pop
gs
sbb
cmp
loop
lret
push
fidivs
and
inc
pop
mov
cmpps
cmp
call
nop
outsb
mov
dec
jmp
jmp
cld
in
out
and
addl
jno
test
test
push
lea
and
imul
movsb
mov
mov
stos
jbe
mov
ljmp
mov
testb
jnp
out
outsb
xchg
sub
scas
nop
sbb
jge
jb
icebp
add
iret
or
xchg
sub
inc
ds
rorb
pop
nop
and
notb
mov
cs
mov
cmc
inc
sub
popf
scas
fldl
clc
cmp
adc
cs
inc
pop
rdtsc
fcomip
or
cmp
sqrtps
lods
fcmovnb
iret
lret
xchg
pop
enter
scas
inc
adc
out
xor
and
ss
bound
aaa
ret
sub
roll
mov
aaa
rcrl
in
cltd
das
and
dec
inc
mov
inc
fstps
dec
adc
mov
sarb
mov
lcall
mov
jmp
lods
sbb
jb
xchg
fwait
jge
dec
and
cli
cld
push
and
bound
in
cmp
addr16
inc
lret
push
pusha
xor
sar
sbb
fsubrl
sub
push
orb
sbb
pop
stos
adc
dec
jle
mov
cli
dec
mov
aam
mov
mov
pop
repnz
inc
push
mov
push
cli
hlt
mov
adc
jmp
pushf
and
in
push
or
xor
pop
test
mov
pushf
leave
into
push
cmp
jo
outsl
jb
pmuludq
stos
out
test
loopne
mov
fisubrl
pop
mov
jg
xor
xorl
adc
push
adc
mov
dec
arpl
fstpt
mov
addr16
insl
rcrb
mov
dec
test
xor
fadd
pop
mov
cmp
bound
dec
out
cmp
and
aad
pop
outsl
push
aas
mov
jno
leave
mov
stos
sbb
jp
pushf
out
pusha
test
xchg
or
mov
inc
cwtl
mov
xchg
mov
mov
out
mov
lret
movsb
fistpll
mov
icebp
ret
pop
outsb
adc
fsubr
jg
in
insl
cmp
sub
jecxz
sbb
outsl
mov
fcmovbe
es
shlb
mov
adc
xor
xor
in
xchg
add
pop
ss
mov
pop
xor
leave
data16
movsl
cmc
push
xchg
rclb
dec
dec
and
arpl
jmp
inc
xchg
xchg
stos
inc
int3
mov
jle
ljmp
incb
iret
xor
sub
xor
jne
data16
cmpb
addr16
xor
lods
aas
gs
test
sub
jb
push
sbb
aaa
or
dec
jmp
mov
add
inc
inc
xor
dec
pop
dec
rcl
bound
jg
dec
jl
jl
cmc
ja
xchg
mov
mov
int
add
es
scas
leave
push
out
hlt
jle
shlb
std
jmp
vmovhpd
or
or
imul
mov
cmp
loop
jmp
mov
pushf
loope
xor
cmpl
ja
and
test
xor
inc
loope
push
mov
mov
cs
cmpl
pop
flds
mov
cwtl
shll
sbb
or
shr
shrb
mov
xor
outsb
insl
dec
icebp
jl,pt
test
xchg
xchg
enter
adc
std
xor
jnp
cmp
out
sti
pop
push
inc
aam
mov
sbb
mov
shrl
repnz
lret
sahf
icebp
movsl
iret
lods
or
in
rclb
sub
xor
jae
pop
jo
mov
xchg
jbe
aaa
mov
fs
mov
cli
sub
mov
jo
mov
js
pusha
ss
jne
notl
xchg
hlt
and
jne
inc
cltd
pop
pop
ret
xchg
cmc
lods
jg
mov
fistl
add
lock
fs
xor
xor
das
ja
cmp
test
iret
inc
inc
fwait
cltd
std
int3
and
inc
push
imul
xchg
push
scas
inc
mov
inc
mov
push
inc
mov
js
idiv
adc
leave
inc
pop
repz
mov
out
xchg
faddl
or
subb
jno
adcl
sub
xchg
bound
lea
mov
or
sti
push
mov
inc
fistpl
pop
lret
std
cmp
movsb
out
push
cltd
enter
jnp
int3
xor
pushf
subb
inc
fcmovu
xchg
mov
lds
cmp
dec
test
lcall
sahf
lret
dec
and
cmc
push
sub
add
ja
daa
jmp
daa
adc
ds
icebp
sub
shrl
cmp
inc
cmpsl
pop
outsb
jno
mov
int
xchg
push
enter
lea
xor
xchg
sub
and
jne
or
movsb
adc
add
mov
mov
or
out
dec
mov
data16
loopne
imull
inc
push
sbb
dec
daa
into
jb
aas
xchg
mov
stc
jbe
mov
adc
adc
fcomps
jmp
sub
mov
inc
mov
add
or
or
jmp
arpl
jnp
in
dec
fildll
push
ljmp
daa
sbb
push
xor
fs
inc
stc
test
adcl
das
xor
test
pop
jnp
adc
inc
xorb
pop
cmp
cs
dec
popa
sub
dec
in
push
xchg
dec
or
and
add
jae
push
or
adc
or
sbb
xchg
jp
bound
jg
adc
leave
xchg
and
pop
scas
push
in
repz
jecxz
scas
js
pushf
xor
daa
push
pop
decb
mov
xchg
mov
or
adc
pop
mov
push
pop
ja
clc
call
sub
xchg
inc
cld
pop
lods
lret
xor
mov
or
inc
jmp
inc
xlat
and
jle
jo
sahf
js
in
pop
lea
std
fs
push
pusha
daa
pop
push
xor
popf
hlt
add
jg
aas
stos
sbb
jbe
push
cmc
sti
fcmove
cltd
nop
add
sub
lret
je
inc
pop
dec
arpl
in
lock
verw
jae
pop
jb
adc
pushf
fdiv
and
push
ljmp
outsl
mov
pop
dec
lock
js,pt
ljmp
lret
or
loopne
add
mov
rorb
pushf
mov
lods
mov
push
mov
in
mov
popa
xchg
cmpb
push
cmpb
repnz
mov
sbb
sbb
shlb
push
das
fdivl
xchg
dec
adc
sub
imul
cmp
imul
sti
jecxz
push
inc
jmp
fwait
mov
test
stos
add
jno
lods
mov
bound
fcoml
push
jno
add
aad
sub
or
push
pop
out
jb
cmpsb
dec
outsb
inc
jne
xor
test
and
sub
loopne
cmpsl
fiadds
repnz
xchg
xor
mov
movsb
gs
add
and
ja
out
ds
fisttpl
sbb
imul
sub
loopne
in
jecxz
lcall
in
data16
ficoms
pushf
jle
iret
popf
xor
out
sbb
fsubr
fs
xor
mov
popa
lret
inc
in
in
daa
cli
repnz
bound
leave
insl
lds
add
inc
xlat
push
xor
sub
out
cwtl
jns
pop
pop
movsl
inc
test
mov
mov
roll
xchg
mov
jb
rcll
pop
cmpl
jmp
xor
mov
push
xor
and
jmp
inc
dec
test
and
rolb
lret
andl
or
mov
sbb
fsubrl
cltd
jge
shlb
mov
push
scas
xor
or
dec
pop
sbbl
pop
mov
adc
mov
mov
loopne
cmp
add
aam
jl
jg
jp
mov
std
lret
sub
lods
jmp
dec
loope
jl
std
lcall
aad
std
xchg
pop
cmp
or
and
jp
les
int
in
out
ds
int
imul
lcall
inc
jo
mov
in
test
sbb
fnsave
jl
adc
sub
mov
ficomps
adc
sbb
and
dec
xor
sbb
xchg
xor
jmp
or
push
push
mov
push
rcll
int
addl
pop
shrl
jl
push
push
repz
jno
inc
rcll
lock
jmp
fwait
test
inc
arpl
imul
or
mov
rorb
xchg
jle
in
mov
insl
and
scas
fdivs
bound
pop
enter
mov
call
jae
mov
push
sbb
das
adc
push
cld
outsl
mov
mov
adc
pop
insb
jne
push
xor
negl
jno
push
in
jb
mov
outsl
xchg
je
inc
popf
push
ror
mov
test
int3
and
adc
fstl
xchg
add
xor
imul
or
xor
insl
sbb
fistpl
repnz
ja
nop
push
sti
mov
movsb
mov
stos
out
negb
mov
sbb
inc
adc
lret
pop
adcl
mov
lock
push
lret
push
cmp
and
lea
cs
in
test
into
push
insb
idivb
addr16
xchg
adc
mov
idiv
dec
outsl
inc
mull
movsl
in
stc
clc
sub
ja
adc
sahf
shr
inc
jae
cld
or
ds
cltd
mov
inc
push
or
push
lods
mov
lahf
mov
in
xlat
adc
or
jns
xchg
jg
lcall
cwtl
inc
mov
push
mov
adc
push
cmp
jo
and
mov
movsl
into
mov
add
jecxz
inc
sub
outsb
cmp
fldl
sarb
push
push
adc
loopne
inc
adc
push
insl
mov
test
mov
shrl
ljmp
pushf
pop
sbb
je
inc
frstor
dec
push
push
mov
xlat
incb
sbb
cmp
fmull
dec
stos
dec
mov
les
and
movsb
fstpt
shl
aas
add
icebp
enter
test
jne
cmpsb
scas
xor
inc
jp
je
cmp
or
adcb
xchg
jnp
cmc
in
and
sub
lret
jmp
xchg
das
and
add
dec
push
xor
jmp
xor
jecxz
stos
and
push
lods
leave
cmp
into
jle
push
add
sub
mov
push
shlb
loope
ss
add
jne
jnp
lods
ljmp
pushf
cli
out
cli
bound
or
sub
fnstsw
add
jg
sbb
mov
sub
int
pop
mov
inc
xchg
cmp
scas
mov
insl
add
push
jno
sub
cld
pop
cmpl
adc
ja
and
imull
and
jmp
sti
cltd
push
shll
pop
mov
test
lds
add
xchg
movl
xchg
in
push
call
mov
add
stos
inc
xlat
repnz
fadds
adc
lret
inc
xchg
inc
pop
xor
lods
in
incb
xchg
adc
lock
pushf
sbbl
mov
sbb
or
ds
or
jmp
and
dec
pop
dec
mov
cmpsl
pop
xor
popf
jno
mov
dec
es
adc
push
or
mov
xchg
lods
jbe
mov
popl
cltd
test
mov
addr16
mov
jmp
mov
xchg
rclb
cltd
sbb
bswap
xor
sbb
add
push
clc
xlat
push
jb
or
mov
pop
test
aas
in
in
push
aam
dec
cmpsl
jae
in
mov
aam
fstl
lods
push
adc
and
movsl
xchg
xor
and
shrb
xchg
mov
xor
inc
xorb
sub
inc
popa
inc
push
insb
leave
aas
xchg
and
xor
and
add
fidivrl
mov
xor
mov
popf
stos
dec
rorl
cmp
cmp
mov
pop
loopne
push
inc
call
cmp
xlat
and
rdtsc
iret
pop
jbe
dec
and
shrl
arpl
enter
mov
rclb
das
pop
loope
hlt
fsubl
xchg
ds
das
popf
jae
jnp
jnp
dec
cmp
pusha
inc
inc
mov
pop
pop
dec
push
cmp
pop
jecxz
mov
in
lret
xchg
and
push
setle
call
add
ficompl
repz
enter
and
fidivs
scas
inc
mov
aam
jno
inc
lods
cmp
fldl2t
dec
pushf
xor
icebp
out
into
ret
sub
int3
add
addr16
add
cmp
test
or
push
cmc
mov
mov
test
cmp
jno
mov
dec
add
jmp
mov
push
mov
lret
jp
cmpsl
ret
rorb
pop
jg
rcrl
add
mov
push
jns
pop
xor
inc
test
dec
arpl
lock
jg
aas
fisttpll
mov
inc
popf
add
pop
xor
cwtl
decb
cmp
iret
adc
aam
dec
lds
lahf
test
stos
cmp
cmc
cltd
jae
or
popf
ss
fidivs
or
dec
or
push
or
nop
push
sahf
sub
movsb
mov
dec
pop
daa
adc
xchg
leave
cmp
or
inc
and
mov
out
test
data16
lret
aad
push
or
and
int
out
into
sbb
cwtl
lea
dec
pop
push
push
jmp
xor
xchg
sbb
adc
das
repnz
adc
imul
or
loopne
push
xchg
lahf
sbb
mov
adc
rcrl
mov
enter
dec
fdivrl
fistl
ret
or
or
cs
add
adc
in
jns
cs
js
mov
outsl
in
mov
xchg
shll
ret
loope
mov
push
insl
push
sbb
shrb
mov
les
and
xchg
inc
dec
int3
shl
in
xor
dec
mulb
jge
pop
cmpsl
incl
xor
xlat
jmp
pop
sub
or
pop
out
stos
cmp
repz
sbb
mov
lods
jbe
push
push
icebp
nopl
insb
sbb
mov
and
notl
adc
test
psrlw
xorl
or
or
nop
add
push
andb
inc
xchg
sub
insb
xor
js
add
movsb
inc
lea
cmp
mov
lahf
push
add
mov
xor
xchg
outsl
das
shr
test
pushf
pop
or
jo
add
rorb
adc
aam
inc
push
adc
sbb
sub
sbb
mov
adc
xor
mov
lahf
cwtl
xor
fdivl
push
dec
repz
mov
fisubrl
mov
inc
or
pop
sbb
sbb
ds
leave
stos
pop
adc
cmp
add
aam
ret
js
fs
add
push
ja
dec
inc
xchg
fcomp
mov
out
sti
adc
and
push
loop,pt
add
idivb
fistpll
adc
push
shl
mov
or
push
pop
popf
adc
push
out
hlt
mov
insl
les
cld
loope
sbb
cs
and
xchg
cmp
and
js
xchg
jg
in
push
push
add
sub
pop
test
lret
mov
jae
adc
xchg
inc
pop
jb
xchg
jmp
lahf
xor
or
fs
aad
popa
mov
scas
jg
test
stos
adc
xor
test
adc
movb
dec
test
aaa
dec
push
iret
data16
or
sub
mov
xchg
adc
pop
fidivrs
outsb
repnz
or
xor
cli
xchg
mov
sbb
lea
clc
mov
push
mov
andb
mov
das
mov
jg
es
enter
jp
fildl
jae
jbe
or
cmp
outsl
mov
loopne
fwait
aad
jl
divl
xor
shlb
aas
and
testl
push
lret
test
sub
aaa
div
xor
jmp
mov
inc
xor
push
mov
push
sbb
jmp
mov
mov
pushf
push
lahf
repz
sub
fisttps
or
xchg
str
iret
inc
add
pop
sbb
cmp
mov
cmp
add
mov
sahf
jne
sub
sbb
cld
cltd
and
sar
in
xchg
pop
scas
mov
push
jg
push
lock
ret
in
sub
clc
inc
rclb
jg
cmp
pusha
xor
jmp
ss
addr16
jp
add
mov
push
jns
ja
and
int3
add
lahf
jno,pn
pop
push
fs
mov
aad
gs
jge
cmpsb
cmp
mov
fsubl
data16
test
mov
sub
or
loope
shlb
es
orl
mov
mov
push
test
cmpsb
bound
dec
mov
pop
fildll
or
pop
in
cmp
add
mov
mov
scas
in
fistps
xor
inc
jnp
addb
jg
into
cli
push
in
popf
divb
inc
fimull
dec
imul
add
add
out
dec
sti
es
das
out
mov
mov
xchg
sub
scas
mov
mov
ss
mov
xchg
daa
dec
cmpsb
cmp
jno
pop
sub
or
mov
ret
jle
test
das
orb
mov
xor
out
incb
aam
push
testb
arpl
xorl
sar
pushf
pop
jp
sbb
sahf
clc
ret
cmovp
adc
cmp
xor
mov
imul
add
and
sbbl
mov
sbb
mov
fmull
pop
xchg
sub
scas
push
adc
stos
jno
adc
jne
rcrl
sbbl
test
pop
outsl
stos
jno
sub
and
dec
out
clc
xchg
in
mov
sub
inc
in
jns
pop
pop
inc
leave
pusha
or
pusha
lret
out
cmp
mov
adc
jge
mov
stos
int
out
hlt
rclb
imul
fisubrs
hlt
aam
cmp
subl
subb
rol
push
inc
leave
xor
cmp
sti
mov
jnp
add
icebp
push
add
cmp
addr16
push
stos
adc
cld
mov
sbb
pop
add
mov
test
xchg
push
adc
pop
or
mov
imull
sub
pop
xorl
scas
sbb
mov
fstl
mov
jle
es
push
cmp
cwtl
mov
loop
popf
testb
fs
jne
adcb
sub
pop
repz
inc
aad
or
sti
test
xor
add
cmp
test
cld
jo
daa
rcr
paddusb
sub
or
push
mov
cwtl
cmc
or
mov
movsb
sub
lahf
adc
pop
push
sbb
jb
sbb
repz
std
pop
push
pop
mov
test
cmp
aas
pusha
lea
or
push
xchg
add
xor
mov
cmpsb
aam
dec
sbb
aas
cmpb
sbb
mov
out
mov
aad
das
dec
repnz
repnz
mov
cmpsl
mov
shl
push
int3
lret
pop
mov
shll
pop
mov
or
adc
push
mov
mov
pushf
push
mov
and
dec
cld
dec
pushf
mov
sarl
insl
fimuls
jne
fs
lret
inc
push
leave
cs
sbb
push
xor
push
in
push
popf
mov
sti
fdivrl
cmpsb
push
dec
jp
into
inc
and
mulb
xor
xchg
jno
mov
orb
pop
mov
sub
fnstcw
jno,pn
aaa
into
decb
ret
push
int3
or
test
movsb
testb
xor
iret
xchg
sub
sub
lock
mov
add
mov
push
and
sbb
stc
and
aad
mov
push
imul
lods
bound
ret
pop
inc
movsb
arpl
cli
clc
sbb
fcoml
aam
mov
enter
ffreep
mov
popa
test
jns
jle
lds
lret
mov
or
bound
shlb
std
jecxz
sti
pop
nop
push
rcll
pop
jne
mov
lahf
bound
dec
pushf
andl
or
ljmp
fnstsw
push
push
call
mov
out
add
mov
lea
cmp
sub
inc
nop
mov
movsb
cmp
inc
push
idivb
in
and
in
movsl
push
ljmp
leave
int3
mov
mov
ficoml
int
xchg
and
lahf
xorl
mov
out
test
inc
int3
sbb
dec
aaa
gs
cld
fidivrs
dec
mov
mov
mov
ficoml
pop
sub
hlt
sbbb
sub
movsb
repnz
or
jbe
dec
out
enter
cli
insl
jge
aas
fsubr
pusha
pop
rcrb
jge
xor
pop
repnz
inc
push
dec
add
repnz
dec
push
lcall
enter
dec
data16
add
loop
pop
push
dec
ret
call
and
test
fsubrl
sub
data16
xor
cmpsl
cmp
push
popa
lcall
mov
loop
inc
mov
loopne
psubsb
mull
movsb
loopne
mov
stos
fidivrl
or
xor
add
xor
lea
aas
cmp
addb
daa
dec
in
pop
adc
cmp
push
mov
push
mov
mov
call
push
call
cmp
pop
mov
mov
mov
push
insl
sti
or
pop
inc
js
dec
jle
adc
aam
int3
sub
dec
mov
adc
mov
jle
or
insl
int
es
sub
mov
jne
pop
test
in
mov
imul
fistps
push
jb
lret
xchg
push
pop
pushf
sub
js
mov
lock
inc
xlat
cmc
sub
popa
sub
mov
js
daa
cmp
fs
jge
fs
mov
repnz
add
mov
shrl
fs
pop
xchg
xlat
out
mov
mov
mov
in
cmc
nop
aad
sub
lods
fstpt
mov
fidivrl
popa
jecxz
sub
sbb
scas
mov
mov
or
pop
pop
jmp
add
and
out
dec
fcoms
in
xchg
cltd
push
std
inc
push
roll
movsl
fistps
icebp
adc
lods
sbb
mov
xor
jmp
and
and
das
fnsave
mov
jnp
mov
loop
arpl
and
rcll
orl
mov
mov
dec
dec
lea
pop
repnz
fwait
ljmp
adc
sub
and
jnp
jmp
lods
pushf
ja
jmp
or
cmp
pop
mov
and
cmp
insb
imul
std
sbb
imul
sbb
jg
xchg
das
jae
mov
mov
pop
mov
sbb
or
sub
aaa
push
jno
sbbl
fsts
push
or
cli
lods
shrb
imul
mov
and
in
pop
js
fs
jecxz
pop
adc
shrb
cmp
dec
mov
xchg
xchg
shlb
clc
or
sub
inc
in
pop
mov
fnclex
xor
cmp
add
mov
sbb
jmp
adc
sbb
repz
mov
call
ficompl
in
mov
sbb
repnz
test
fdivl
add
fidivs
dec
xor
sar
les
mov
inc
jecxz
mov
lahf
je
inc
sub
mov
in
dec
int
jg
aas
loope
mov
jne
icebp
fwait
sbb
int3
push
out
xchg
in
pop
mov
dec
data16
pop
in
ja
fisubrs
scas
bt
test
mov
mov
push
jb
aam
idiv
xchg
test
stos
and
push
lret
xor
fildl
xchg
loop
dec
test
xlat
jno
gs
or
test
popa
popf
hlt
adc
xchg
adc
pop
xlat
jle
hlt
ret
je
cmc
aad
inc
loop
iret
jo
loopne
xchg
xchg
aaa
mov
or
fidivl
lret
or
addr16
jle
sbb
and
lcall
jbe
push
insb
mov
addr16
loopne
popa
cmpsb
movsb
out
test
sub
jle
cmc
dec
mov
mov
mov
dec
int
aam
adc
cmc
jno
xchg
lea
sub
inc
or
sub
enter
scas
inc
ret
pop
xchg
lret
lock
in
out
sub
out
scas
xor
mov
data16
subl
cld
insb
sub
iret
cmc
add
xchg
nop
imul
dec
pop
sbb
sahf
aas
mov
nop
insl
insl
push
or
dec
pushf
xchg
add
jnp
sbb
adc
cmpsl
add
dec
mov
mov
ljmp
mov
les
into
addb
mov
adc
mov
mov
adc
rcrb
xor
ret
ror
in
arpl
cli
aad
push
decl
outsl
add
mov
mov
cmpsl
mov
xchg
jge
aad
out
iret
int3
fadds
xlat
dec
or
fs
into
xchg
ret
repz
mov
es
xchg
inc
xchg
mov
in
test
push
icebp
stos
inc
or
test
dec
stos
and
and
xor
dec
lret
clc
out
sahf
in
xor
jle
add
and
add
sub
lock
loopne
and
inc
add
add
leave
cmp
cmp
push
in
fwait
add
jno
mov
cmpsl
pop
xchg
scas
push
int
xchg
pop
mov
inc
fwait
mov
adc
xor
jns
arpl
rcl
mov
fisubrs
add
mov
cs
les
aam
sbb
mov
movsb
inc
sbb
scas
dec
mov
popf
ret
sbb
inc
push
pop
pusha
outsl
jp
jo
shlb
lret
or
mov
sub
add
cmp
sub
scas
add
dec
add
js
daa
and
mov
xchg
dec
es
outsb
data16
and
call
cmp
cmpsl
cmc
loopne
or
and
jne
mov
jno
jnp
jecxz
sbb
popa
push
mov
push
das
pop
mulb
rolb
aaa
pop
mov
shrl
inc
adc
scas
cmp
shrb
mov
insl
add
inc
pop
or
cmp
sub
or
jecxz
test
mov
pushf
fsts
cwtd
push
cmpsb
les
lock
pop
xorb
mov
sti
nop
dec
enter
outsb
pop
lods
and
lahf
das
addr16
xor
jle
xor
repnz
xlat
outsl
xchg
ljmp
add
add
ret
jo
test
imul
or
icebp
mov
and
adc
fmulp
xor
loopne
mov
lcall
sbb
leave
fsts
fwait
sahf
cmc
push
mov
jmp
mov
jo
or
in
mov
ja
sbb
test
pop
mov
fbstp
shll
stos
stos
insl
or
daa
leave
pop
sbb
xchg
cmp
scas
cmp
inc
popw
xchg
sub
repz
and
addl
cmpsl
repnz
cmp
mov
fsubrs
lock
pop
outsl
lcall
adc
push
dec
jle
xor
xchg
cli
xchg
pop
cmp
das
lea
pop
fcoml
mov
repnz
les
jg
mov
add
fwait
push
xor
mov
push
mov
add
lods
gs
or
or
sub
push
dec
pop
sub
jno
xor
or
xor
sub
pop
rorb
add
outsl
pop
adc
lret
adcb
jmp
push
dec
jl
adcb
and
dec
loopne
push
aam
fs
or
mov
loopne
fldenv
int
outsb
inc
sbb
aas
lea
cmp
out
jg
mov
sbb
jb
imul
ss
push
or
sbb
jle
pop
jne
sahf
insl
test
icebp
ja
add
repz
fimull
jle
inc
sub
sub
sbb
cli
xchg
addr16
scas
imul
stos
dec
mov
xchg
push
push
xrelease
pushf
fwait
mov
lock
test
sbbl
movsl
pop
mov
cmp
mov
hlt
cmp
stc
popa
mov
cmp
lret
insl
mov
sub
sahf
sbb
pop
into
sub
pop
add
dec
bound
push
cmp
cmp
adc
sbb
or
dec
jge
cli
pcmpeqb
mov
inc
push
loopne
mov
fisttps
movsb
mov
sub
push
add
leave
dec
ds
sub
ljmp
gs
inc
aam
xchg
fidivl
fdivl
mov
push
jmp
cli
xchg
sarl
icebp
test
mov
fistpl
fcoml
lds
jne
push
dec
mov
adc
sbb
lcall
add
jo
xchg
lret
mov
pop
adc
jnp
and
mov
fcomps
cmpsb
inc
test
mov
js
pushf
jno
sbb
mov
negl
add
sbb
dec
jl
fnstenv
adc
add
es
pusha
dec
and
dec
sarl
inc
sub
loopne
jl
ss
sub
mov
mov
sub
mov
jp
xlat
xor
outsb
or
test
pop
dec
add
loopne
sub
jno
xor
das
pushf
movsl
and
sbb
adcb
cmp
dec
stos
mov
push
jnp
clc
icebp
push
insl
and
stos
lds
mov
adc
daa
cmp
xor
mov
fistps
add
popa
clc
jo
jl
mov
lcall
hlt
test
and
push
adc
mov
pop
jp
insl
jge
pop
mov
rorl
sbb
jle
push
gs
into
fadds
pop
int3
je
lret
pop
add
inc
push
hlt
or
lret
mov
mov
jg
in
xor
push
mov
xor
les
xor
daa
ja
mov
or
mov
inc
repz
adc
out
movsl
add
arpl
adc
mov
pop
mov
dec
lds
leave
and
fscale
std
and
xor
dec
fimuls
and
pop
sbb
pop
sti
out
push
aas
inc
or
das
mov
pop
cmpsl
adc
xlat
push
shrb
push
cmp
dec
adc
add
rclb
push
lock
mov
adc
test
jmp
or
pop
jns
les
imul
mov
mov
fists
mov
ffree
sub
fisubrl
sub
out
pop
sub
loopnew
movsl
aad
mov
fwait
add
push
inc
ds
aas
in
adc
pop
test
mov
popa
or
andl
xchg
lock
cli
mov
cmp
test
rorl
out
popf
sbb
push
repnz
add
sbb
jo
mulb
into
test
add
add
shr
andb
ret
rol
push
dec
push
cmc
outsl
inc
test
lcall
or
sbb
ret
and
or
add
adc
pop
or
push
ss
pop
inc
call
jae
js
scas
pushf
cli
push
adc
fldl
push
or
fldl
mov
lahf
pop
jmp
loop
jno
xchg
mov
adc
dec
mov
xlat
test
popf
fs
imul
pushf
push
push
xchg
sbb
hlt
and
es
mov
mov
inc
pop
xor
or
bound
mov
fldenv
fistpll
jle
in
fcoms
mov
xchg
dec
pop
fcmovbe
xorb
mov
mov
jae
push
test
xlat
jae
mov
cli
clc
adc
dec
adc
jae
pop
imul
mov
int3
call
leave
xor
mov
lods
mov
dec
fnstcw
test
and
loopne
inc
shr
repz
dec
mov
rcl
add
stc
dec
scas
je
xor
push
lret
sti
push
std
cltd
jecxz
stos
mov
aad
loop
popa
push
leave
push
pusha
test
bound
jb
adc
aam
mov
mov
mov
popa
fsubrl
mov
xchg
xorl
insb
or
push
imul
push
sub
dec
fistl
and
repz
shl
repz
aaa
clc
inc
push
jbe
xchg
stos
insb
push
xor
int3
test
out
in
test
pop
sub
fsubs
add
fisttpll
xor
ljmp
out
fisubs
adc
jnp
lods
lods
push
pop
push
mov
mov
int3
jnp
jecxz
push
stos
cli
xchg
ss
bound
andb
adc
push
jno
cmp
mov
jg
stos
ficoml
fidivl
fcoms
mov
rorb
cmp
or
popf
sbb
jmp
aad
jb
insb
imul
sbb
push
int
mov
stos
or
cltd
adc
add
sbb
aas
sub
or
push
push
sub
mov
dec
fnsave
push
ljmp
jmp
pop
inc
in
out
cli
sub
stos
shll
add
lods
ret
rclb
jb
lods
pop
fsubp
in
js
jle
or
xlat
mov
and
or
subl
ljmp
inc
xchg
sub
stc
xchg
sbb
mov
lret
daa
addr16
in
or
cmpsl
cwtl
aaa
out
push
jp
nop
xchg
out
mov
mov
xchg
repz
sbb
jno
cmp
int3
in
mov
cltd
in
mov
out
and
jl
mov
ds
pop
lds
cmpsl
rorb
movsb
jg
cmp
or
aas
pop
adc
xchg
jle
dec
cs
in
stos
jbe
sbb
fnstenv
sub
push
add
jns
sub
add
out
jp
pop
push
movsb
je
cmp
test
dec
adc
lea
jp
push
jae
xchg
adc
in
push
pop
push
setg
mov
sub
push
cltd
out
xor
xor
dec
mov
into
inc
arpl
mov
pushw
lds
adc
aad
fsubrl
pop
mov
or
movsl
push
cwtl
pop
inc
push
pop
loope
inc
popa
int3
add
xor
ss
dec
js
mov
fstpl
jne
dec
adc
outsl
jle
sbb
mov
mov
fldcw
dec
les
lea
jge
clc
xor
cwtd
xchg
aas
mov
xor
in
inc
imull
xchg
jp
add
fidivl
sub
pop
xbegin
dec
xchg
cltd
shlb
test
xchg
dec
divb
xor
hlt
pop
imul
mov
das
push
popf
inc
arpl
jae
aas
popf
or
inc
mov
fcmovne
adc
cmp
in
decb
pop
add
imul
sub
ljmp
adc
mov
sarl
or
stc
cmp
and
dec
and
aad
jle
mov
dec
popa
and
rcr
insl
loopne
jp
cwtl
inc
pop
daa
gs
sbbl
negb
add
int3
cmp
int
repnz
enter
nop
push
sbb
mov
push
loope
enter
xchg
nop
dec
pop
lret
shrb
sub
cld
outsl
sti
icebp
mov
dec
ret
imul
subl
and
lcall
enter
fwait
jmp
jno
repz
cmp
stos
imul
and
movsl
push
pop
je
pop
cmp
cmp
std
push
push
mov
ljmp
mov
jb
stc
je
jnp
xor
sbb
add
es
in
jno
pop
jbe
jmp
push
cmpsl
push
jmp
xchg
inc
fs
mov
or
das
pop
sar
xchg
fcomip
cltd
daa
test
shrl
adc
and
rcll
xchg
adc
lahf
pop
push
adc
stos
imul
mov
mov
sbb
jl
mov
jno
ficoml
stos
ss
lret
or
jbe
fs
int
fsts
jae
mov
das
scas
sbb
ss
outsl
xchg
adc
in
mov
movsl
loop
jb
dec
cmpl
test
sbb
mov
cltd
cmp
call
icebp
push
pop
mov
push
fnstsw
stc
int3
xor
fisubrl
push
adc
lds
push
punpcklbw
and
stos
test
stos
add
sub
pusha
cs
fdivp
rolb
adc
jnp
mov
test
testl
das
fnstcw
iret
or
xchg
cmp
push
pop
adc
int3
jmp
cmp
push
jmp
mov
inc
addb
rorl
sti
andb
lcall
cmpsl
push
lock
or
or
fdivl
xchg
bound
sbb
sub
xchg
cmp
les
arpl
in
xchg
xchg
push
loop
dec
mov
mov
mov
inc
movsl
mov
in
mov
mov
inc
outsb
jge
mov
jp
rorl
dec
scas
push
orb
daa
std
subb
insl
add
inc
mov
jge
lock
outsb
and
pop
xor
int3
or
lret
outsb
je
les
xchg
sbb
mov
inc
enter
push
in
adc
adc
dec
je
cli
pop
ret
fisttps
lret
adc
jge
and
jl
sub
inc
add
inc
fsubrs
sub
mov
out
or
xor
mov
sbb
inc
fidivrl
aad
arpl
sbb
mov
int
cmp
mov
dec
dec
cmp
xor
and
inc
cwtl
sbb
negl
fistps
adc
mov
mov
rcl
movsl
push
and
mov
scas
fcmovnb
cwtl
mov
imull
xchg
sbb
mov
notb
xchg
push
mov
xchg
aam
or
addb
std
roll
and
insb
test
jl
mov
int3
lahf
sub
pop
repz
or
js
mov
cwtl
mov
jp
cs
movsb
sbb
in
sbb
xlat
inc
outsl
inc
pushf
jl
jecxz
add
ds
andb
iret
stos
jp
sti
and
pop
mov
xchg
sbb
adc
xchg
sub
pop
jb
mov
scas
int
es
test
sbb
push
scas
jmp
jno
or
pop
ljmp
lock
dec
jne
stc
and
sbb
sub
test
sbb
in
pop
cltd
lret
in
fdivrs
call
cwtl
pop
sub
xchg
mov
dec
pop
call
sbb
outsb
inc
mov
push
xor
loope
out
aad
test
mov
outsb
cld
out
sti
call
out
pushf
scas
fucom
test
adc
mov
pushl
jbe
into
pop
dec
imul
adc
push
pop
repnz
push
push
out
xchg
jns
repnz
xor
shrb
cmp
xor
ss
addr16
jb
insl
jae
inc
sub
aas
mov
pop
mov
and
fadds
xchg
inc
lret
ljmp
jno
lahf
mov
adc
sbbb
adc
pop
sbb
mov
push
lods
jbe
mov
movsl
js
or
xor
in
fisubrl
scas
das
xor
xchg
popf
cmpb
test
or
or
mov
push
jecxz
dec
in
xor
in
add
mov
mov
pop
icebp
add
lea
js
rorb
bnd
add
dec
mov
add
adc
xchg
xor
push
pop
dec
add
sub
mov
sub
or
movsl
push
or
and
in
mov
xchg
out
rcll
mov
movnti
xor
mov
dec
pop
andl
cld
push
in
sub
mov
pop
ret
addr16
je
lock
fists
popl
test
out
popf
repz
sbb
addr16
or
ss
bound
and
imul
cmp
mov
lret
ret
fbld
or
lock
ss
push
je
andl
lods
cmc
pop
ja
iret
loop
test
test
movsl
xor
pop
je
dec
or
or
fwait
mov
xor
je
inc
push
adc
add
js
pop
jns
lea
mov
sbb
adc
pop
ret
xor
mov
add
mov
mov
push
arpl
lds
dec
cld
addl
jge
and
jmp
aaa
jmp
in
dec
ja
es
xor
pop
test
aad
adc
and
nop
insb
int
aad
pop
cmp
aaa
loope
in
loope
cmp
sub
aaa
or
dec
lret
or
mov
cmp
rcl
pop
mov
pop
push
iret
adc
and
sbb
aam
push
cmpsl
inc
mov
mov
stos
test
mov
psubsb
ja
and
fcmovu
jbe
int3
xlat
jno
outsl
mov
mov
sbb
xor
addr16
jo
test
leave
push
mov
js
loope
popa
lods
out
add
lahf
sbb
sub
hlt
pop
icebp
sbb
xchg
xor
xchg
pusha
stos
xchg
addr16
clc
subb
cs
mov
popf
jmp
dec
clc
and
ss
filds
xchg
cmpsw
pushf
lret
into
cmp
fs
nop
cmp
add
mov
data16
mov
or
and
jge
sbb
push
and
fs
lret
sub
xor
int3
mov
sbb
scas
jnp
les
jae
out
mov
fwait
aam
or
pop
cmc
and
and
inc
rcr
lcall
cs
mov
adc
insb
hlt
pushf
cli
dec
bound
out
sbb
rcrl
sub
mov
lret
cwtl
movd
ja
jb
rcrb
sub
jae
repz
les
mov
cwtl
das
mov
push
aas
cmpb
mov
shrl
push
mov
mov
or
sbb
adc
sbb
xchg
leave
add
xchg
cmpb
xchg
push
shlb
or
aas
xchg
pop
adc
js
aas
adc
pop
repnz
xor
sub
xchg
jle
xchg
enter
test
inc
cs
int3
cltd
fnsave
sub
imul
test
clc
sbb
dec
loopne
or
dec
sub
xchg
fimuls
sarb
xchg
test
mov
dec
jbe
inc
inc
lock
xchg
dec
es
in
fmul
adcl
les
int
jae
mov
mov
into
cltd
and
push
mov
dec
or
repz
mov
inc
lret
mov
or
jnp
pop
push
lods
lods
sub
push
jae
inc
movsl
jbe
pop
sub
xchg
stos
mov
mov
outsb
add
cwtl
testl
fisubrl
sub
jnp
inc
scas
jns
pop
jbe
test
stos
and
cmp
sti
aad
pop
icebp
in
jb
sbb
vmwrite
dec
lcall
xchg
jecxz
sti
loopne
mov
das
sub
out
push
adc
pop
inc
ja
jle
aaa
pop
mov
ljmp
adc
mov
mov
stos
add
or
dec
dec
es
in
xor
lret
es
or
dec
xchg
mov
mov
ficomps
mov
lret
ret
aas
or
mov
xchg
ret
xor
jg
decb
into
push
xchg
orl
or
cwtl
xor
scas
gs
lods
mov
das
cmc
repnz
daa
push
cmp
push
stc
push
fdivl
and
test
cltd
imull
into
js
cmp
xchg
dec
mov
aaa
clc
ljmp
loop
adc
sbb
bound
jmp
or
enter
cmpsb
movsb
loope
sahf
testb
jg,pn
push
jg
mov
or
fwait
lahf
mov
pop
out
cwtl
int3
mov
adc
addr16
mov
pop
push
cmp
xchg
xor
pop
inc
cmpl
jl
jp
pop
inc
popf
lret
pop
mov
or
aas
ljmp
rorl
scas
pop
push
outsl
loopne
sbb
ds
xchg
jo
jecxz
std
push
sbb
pop
ljmp
jno
lahf
lods
mov
mov
pop
add
out
loopne
xor
add
adc
ret
mov
dec
mov
fistpll
mov
dec
mov
mov
mov
pop
shl
mov
pop
repnz
push
or
movsl
xchg
or
add
jo
adc
xchg
addl
popa
or
daa
mov
aam
test
cltd
pop
insl
mov
mov
jns
aad
emms
mov
push
jge
addr16
mov
in
xlat
divb
mov
sbb
mov
test
xor
push
mov
inc
dec
ss
jl
xchg
lea
pop
cmp
jno
sbb
mov
pushf
xor
dec
add
dec
loop
jl
aam
mov
loopne
test
in
mov
and
mov
insb
into
dec
and
hlt
mov
push
mov
outsl
adc
mov
xchg
sub
cs
dec
cmpsb
mov
xor
jns
out
lock
add
and
jecxz
add
cld
mov
mov
xor
lea
testb
mov
inc
ljmp
adc
iret
and
in
gs
cltd
insb
and
movsb
xchg
mov
lcall
pop
jl
inc
push
jo
ljmp
test
dec
rol
lods
imul
pop
mov
pop
fsub
xchg
out
cld
push
in
pop
repnz
mov
fiaddl
and
fnstsw
add
mov
pop
mov
or
aad
mov
or
mov
movsb
fstpt
mov
xor
cmp
sub
add
hlt
push
daa
mov
test
sbb
dec
push
loopne
push
xchg
je
adc
cmp
push
aas
dec
fnstenv
jbe
sub
dec
movsb
jns
cmp
lahf
push
call
stc
jcxz
push
pushf
sub
xchg
xlat
cmc
stos
cwtl
dec
movsb
inc
stos
cmp
cmpsl
pop
mov
andb
xchg
scas
and
fst
and
cmovle
cmp
test
pop
or
aad
sub
fcompl
jl
rcrl
dec
jg
in
mov
and
je
inc
adc
xchg
or
pushf
cwtl
xchg
add
pop
aam
and
sub
sahf
mov
mov
cmpsl
add
push
jnp
push
push
mov
jno
mov
mov
fidivrs
add
bound
xchg
cld
aad
cmp
dec
push
jns
jmp
imul
pop
insb
or
adc
mov
xchg
test
inc
inc
jmp
fistl
push
ret
and
sbb
call
xchg
movsb
out
add
jb
movsb
das
sarl
add
loope
mov
push
or
push
sbb
dec
adc
loopne
inc
add
mov
je
scas
jno
cltd
mov
xchg
mov
mov
outsl
xchg
cltd
leave
stos
ret
aas
dec
outsb
jne
mov
push
int
lock
repz
test
jecxz,pt
cmp
scas
out
jmp
ljmp
loope
push
fstpl
pop
lcall
lcall
out
aad
aam
mov
mov
das
sbb
test
ljmp
aaa
leave
lcall
pop
inc
ljmp
mov
xor
mov
mov
cltd
mov
xor
mov
test
inc
mov
popf
ja
add
test
mov
outsl
add
dec
push
cmp
shl
cmpsb
lcall
add
pushf
add
cwtl
lock
add
add
xchg
lret
out
aaa
mov
in
loopne
lcall
add
fwait
jnp
inc
fs
dec
adc
out
push
daa
bound
decl
mov
cld
lods
mov
lcall
xchg
mov
jmp
adc
push
out
push
add
stos
into
add
lock
dec
adc
mov
lods
fistps
sub
je
xor
outsb
mov
js
push
pusha
fstp
sub
adc
movsb
mov
pop
push
mov
adc
push
and
test
jne
scas
out
fmulp
lret
push
mov
push
popa
enter
sbb
push
daa
imul
mov
mov
rcl
mull
xchg
lds
les
xchg
test
dec
lods
add
cli
pushf
inc
lahf
mov
push
in
add
jno
loope
loope
es
push
lods
jp
outsb
ds
jge
cmc
pushf
mov
jl
popa
mov
in
or
loope
imul
or
mov
rorl
add
aam
and
test
ret
mov
adc
mov
xor
jns
mov
jle
aad
inc
leave
divb
cmp
pop
mov
mov
sar
lock
xlat
xor
pop
sbb
cmc
adc
and
jg
lods
mov
dec
push
dec
lods
cmp
rcrl
in
jbe
ss
lds
mov
mov
cmpsl
jp
pop
icebp
mov
js
adc
mulb
xchg
stc
into
lds
rcll
popa
aas
outsb
in
push
popa
in
das
xchg
mov
test
cmp
xchg
fs
int3
cmp
xchg
mov
push
push
mov
mov
pop
in
loopne
arpl
add
ss
push
add
mov
lock
out
call
push
push
mov
repz
and
xchg
les
mov
sub
movsb
sbb
mov
xchg
xor
xchg
adc
dec
stc
dec
aas
out
jg
adc
inc
sbb
dec
clc
sti
aad
add
clc
imul
lret
stc
cltd
loopne
add
movl
mov
scas
push
or
sub
adc
xor
dec
jmp
mov
cmp
fadd
js
dec
cmpsl
dec
call
pop
fldl2t
inc
push
lea
ss
push
in
leave
sub
ja
sar
push
rolb
dec
add
xlat
mov
fstpl
add
cmp
dec
test
inc
and
mov
aam
add
mov
push
lds
jp
add
andl
xchg
ljmp
jne
mov
push
nop
das
jp
sti
or
subb
mov
inc
pop
aad
shr
add
and
insl
inc
mov
sbb
test
push
fisubrs
repnz
jl
xor
ret
test
lret
jb
xchg
mov
push
and
mov
scas
xchg
push
xor
dec
mov
enter
jmp
in
sbb
insb
mov
sbb
mov
cld
decb
or
fwait
rolb
out
sti
test
adc
xor
pop
es
mov
jbe
sbb
add
iret
stos
test
adc
or
or
rorb
jp
dec
push
xchg
dec
xor
shl
push
fsub
daa
cli
xchg
cmp
inc
and
cmp
stc
mov
mov
xchg
in
inc
pop
out
subl
or
scas
lcallw
mov
jb,pn
test
adc
push
xchg
and
jb
mov
sub
mov
not
ret
sub
push
mov
out
adcl
jmp
jb
test
mov
mov
xchg
xor
mov
or
inc
fs
mov
mov
jmp
ljmp
pusha
sbb
std
and
jl
mov
and
imul
jb
fldcw
or
cli
out
add
cmp
in
dec
test
in
es
pusha
pop
fists
push
jg
mov
es
lds
cmp
int3
inc
sbb
cmc
in
mov
cmp
dec
in
das
lea
mov
lahf
int
jo
or
scas
inc
sti
rorb
popf
xchg
push
adc
push
outsb
adc
repz
iret
pop
jae
mov
cmp
repz
dec
cmpsb
push
add
pop
iret
mov
push
sub
out
mov
test
leave
push
int
aas
loopne
loope
arpl
jge
xchg
out
stos
sub
sbb
add
sbbl
jge
sbb
test
mov
mov
mov
in
mov
insb
cli
xchg
add
addr16
sahf
mov
jle
or
adc
sub
or
jl
das
scas
sub
rorb
xchg
fcomps
data16
adc
mov
movsb
sub
or
mov
lret
jge
jmp
rcrb
test
ljmp
into
jmp
lea
and
mov
xchg
and
sbb
sbb
cmp
int
mov
push
pop
loopne
xor
test
mov
mov
xchg
cmpb
xchg
les
jmp
ss
lret
jns
int3
inc
pop
push
jno
mov
fsubs
insb
push
push
cli
or
bound
push
imul
movsb
and
andb
push
ja
inc
sub
mov
or
cmp
stos
je
pop
jno
fisubs
rcl
out
push
cmp
and
mov
into
or
mov
mov
push
or
mov
insl
jmp
mov
fimull
adc
ds
imul
mov
les
ljmp
scas
or
lret
jge
js
or
cs
xor
in
xchg
or
ds
pop
fdivl
ss
fisubl
dec
icebp
adc
jl
mov
inc
jmp
lock
push
fwait
jle
pop
cmp
and
mov
insl
jle
sbb
rcl
testb
xchg
stos
outsl
dec
lods
lahf
cmp
or
sub
mov
mov
popf
dec
mov
les
mov
shlb
psrad
pop
adc
fbld
push
icebp
iret
xchg
loop
mov
mov
fnsave
movsl
stc
cs
mov
aaa
xchg
cmp
sbb
jbe
xchg
xor
and
xor
cs
je
mov
inc
lds
ret
pop
fsub
insl
cld
cmc
mov
test
fbstp
adc
push
add
mov
cmp
ret
pop
mov
jp
enter
mov
inc
and
push
or
les
adc
cmp
nop
xlat
mov
stos
in
ficomps
pusha
and
cmpsl
xchg
or
loop
jb
jmp
mul
mov
xchg
xor
mov
jp
sub
js
test
into
mov
scas
out
es
push
test
pop
js
push
enter
adc
sbb
mov
into
addl
or
sbb
mov
inc
xor
adc
mov
pop
dec
movsl
enter
nop
fs
test
movl
jmp
mov
xor
add
stos
xchg
or
jg
fildl
dec
sti
cld
leave
push
outsb
lahf
lret
xchg
arpl
fwait
int
je
pop
sti
mov
rolb
cmp
add
ret
insl
sub
pop
popf
xchg
js
int
popa
je
les
pusha
xchg
fwait
jl
mov
enter
and
sub
xor
stos
jmp
xchg
subb
and
aaa
pop
pop
ret
cmp
insl
xor
xchg
cmp
imul
jl
mov
or
pop
jns
cld
pop
mov
mov
jg
mov
mov
outsl
mov
cli
xchg
or
insb
data16
dec
iret
sub
lcall
jecxz
jle
lock
cmp
inc
mov
dec
mov
dec
loope
mov
lea
push
or
out
lods
sub
test
jae
dec
pushf
ret
mov
popa
sahf
stos
inc
enter
pop
fs
xor
cmp
xchg
mov
and
shrb
lcall
pop
jmp
lret
dec
bound
lret
fldl
push
xor
fstpt
lahf
testl
out
dec
xor
mov
lods
mov
les
inc
iret
jno
sbb
stos
pop
stc
mov
sub
lock
cli
dec
fsubl
mov
push
icebp
leave
jg
pusha
cmp
xchg
sub
shll
rcl
sbb
inc
adc
out
fisubl
dec
pop
loop
frstor
pop
aad
dec
pushf
inc
in
in
jp
cltd
sub
xor
jl
sbb
out
movsb
xchg
add
mov
pushf
push
icebp
dec
mov
movl
adc
fldt
rol
jno
stos
jne
xchg
leave
int3
or
add
es
mov
sub
mov
xchg
sbb
sahf
xchg
sbb
stos
cmc
test
movsl
or
enter
pop
shl
inc
sbbl
xchg
adc
push
mov
int3
adc
or
mov
add
mov
add
push
pop
packssdw
or
or
pop
fcmovnu
dec
dec
cld
popf
cmp
push
adc
fstpl
insl
js
inc
sbbl
jae
bound
or
aad
sahf
inc
rep
icebp
xchg
outsb
add
scas
in
sahf
dec
lea
jne
inc
call
ret
rclb
push
adc
jb
das
mov
movsl
loop
add
xor
testl
lret
adc
mov
mov
into
mov
mov
dec
or
bound
ret
into
adc
dec
lds
cmc
push
push
inc
pop
push
adc
cmp
std
ja
fistl
sbb
in
cmc
cwtl
xor
rcpps
ret
in
xor
mov
sahf
stc
cmpsl
gs
or
out
test
movups
or
in
mov
lods
cmp
in
fisubl
xchg
adc
pop
jnp
scas
inc
fimuls
push
inc
add
lret
jne
ja
fldt
or
pop
leave
jo
cli
je
cmc
cmp
or
and
shrb
stc
nop
dec
cmp
cli
decl
mov
fcompl
arpl
mov
shl
fiaddl
mov
sti
arpl
ss
call
push
cmp
push
out
pop
pop
movsl
cmp
pop
jg
push
xlat
jae
pop
sbb
inc
pop
popf
scas
fnstcw
les
arpl
adcl
inc
ret
adc
movsb
mov
inc
jge
mov
inc
mov
ret
sub
fnstsw
test
and
mov
push
ja
xor
mov
lock
loope
cmp
and
jl
push
jbe
loope
adc
adc
and
cltd
xlat
fidivl
stc
xor
xor
or
and
dec
push
xchg
xchg
stos
xor
lea
push
pop
dec
xor
pop
cmp
icebp
lock
notb
dec
lcall
jle
in
jge
sub
and
cmp
cmp
add
shlb
cmc
cmpsl
call
mov
aaa
pop
cmc
mov
mov
ds
add
pop
xchg
cs
and
rolb
jge
shrb
lret
pop
jo
pand
int3
andb
push
adc
adc
stos
in
adc
je
inc
or
jmp
xor
adc
jo
jns
mov
fdivp
mov
leave
popf
mov
stc
iret
xor
mul
pop
mov
out
sub
xchg
addb
xchg
cmp
adc
lcall
sub
lahf
sbb
aas
and
stos
roll
cmpsl
addr16
sub
mov
loopne
mov
mov
push
das
jo
pop
dec
lahf
rcrl
xchg
test
in
cltd
cmp
adc
jb
pop
mov
xchg
in
adc
inc
movsl
daa
cmpsb
push
js
pop
icebp
xor
add
xor
js
pop
mov
jmp
mov
add
inc
mov
mov
iret
pushf
lret
lret
xchg
push
mov
sahf
addr16
push
cmp
mov
xor
js
push
dec
inc
cmp
mov
xchg
cltd
xor
mov
mov
lds
pop
inc
cwtl
jg
pop
out
cmp
pop
jecxz
repnz
stos
xchg
cmp
loopne
clc
mov
pusha
dec
push
ret
insb
out
mov
push
sbb
sub
arpl
mov
sub
repnz
in
mov
hlt
clc
int3
lret
aam
pop
lock
clc
mov
jge
jle
cmp
fs
outsl
loopne
loop
inc
xchg
hlt
aad
sub
gs
rcll
clc
cmp
daa
in
push
inc
lret
loopne
jnp
aam
ja
mov
jl
cmp
ret
ror
push
dec
aad
mov
js
add
cmp
call
mov
cltd
mov
hlt
test
setnp
mov
int3
fwait
mov
pusha
fisubs
lahf
outsb
scas
inc
test
or
fnsave
or
sub
mov
lret
int3
ds
jle
and
iret
push
cltd
cmc
pop
cwtl
jnp
in
pop
mov
mov
andb
stos
or
pushf
outsl
aas
loope
add
scas
jp
sub
push
mov
movlps
cs
sti
fildll
or
stos
xchg
imul
pop
add
jb
jp
daa
and
cld
bound
add
add
push
fsubrs
icebp
sub
incl
dec
xchg
dec
sbb
fdivr
push
outsl
adc
adc
cmp
clc
js
jb
pop
mov
mov
bound
mov
mov
add
pop
ljmp
jecxz
xchg
stos
add
testb
cmp
mov
test
shrb
stos
jp
xor
jmp
mov
push
add
add
lods
xor
test
cmpsb
sub
cmp
pop
aam
out
inc
xchg
aam
jnp
lds
cmp
mov
mov
aaa
mov
iret
fisttpll
push
or
fists
adc
sub
sub
xchg
pop
add
out
shrb
and
shrb
in
push
clc
aas
mov
and
loop
ficomps
aas
sbbb
popf
jecxz
push
daa
inc
pop
push
lock
aam
cmp
push
in
loop
out
xchg
add
xchg
out
mov
popa
xor
cwtl
outsl
jno
adc
push
adc
mov
insl
xchg
sub
jmp
cmc
movsb
pushf
dec
sbb
inc
or
cmp
imulb
rorl
mov
rclb
je
jl
test
cmp
fs
push
cmp
and
nop
subl
pop
adc
and
std
iret
ret
sbb
test
mov
fsts
jmp
xchg
and
push
or
mov
mov
fsubrl
sub
adc
adc
sbb
mov
pushl
mov
into
imul
scas
sub
bound
push
mov
xor
lock
and
sbb
mov
fcomps
sbb
add
adc
scas
test
mov
pop
popf
mov
inc
call
push
in
push
ss
cmpsl
not
shlb
mov
outsb
add
ljmp
push
jb
sub
jae
sbb
sti
cmp
push
je
nop
xor
or
stc
mov
add
popf
adcb
push
sti
xor
fisubs
jns
and
xchg
in
push
enter
inc
and
lock
je
cmp
push
jle
clc
movsb
nop
fadds
push
inc
call
push
push
inc
aad
xchg
mov
inc
dec
jle
sbb
shl
mov
incl
mov
rcll
into
fdivr
cs
push
into
or
add
lock
xor
outsl
je
fwait
mov
push
mov
add
fadds
call
push
sbb
jne
rorb
out
sbb
stos
icebp
add
adc
cltd
inc
sbb
dec
pushf
cmp
aas
mov
sub
inc
pop
cmp
popa
shlb
inc
loope
ret
paddsb
push
pushf
loopne
bound
sbb
adc
iret
xchg
fs
fucomi
sub
fnstsw
push
inc
jns
or
xchg
jne
pop
push
mov
mov
and
shlb
popf
mov
out
imul
call
adc
pop
dec
or
jnp
sarl
ljmp
xchg
dec
or
inc
mov
xor
test
and
push
mov
jle
cmp
push
xor
sub
nop
pop
mov
cmp
jl
mov
orb
pushf
sahf
loopne
cld
cmp
int
adc
aaa
bound
cmp
sbb
jnp
scas
cld
insl
dec
sbb
jl
mov
or
jge
sub
or
in
loopne
out
push
mov
and
daa
xlat
jae
in
and
insl
xorb
mov
ds
addr16
pop
adc
lret
ja
xchg
test
mov
mov
pushf
xchg
and
fdivl
add
sbb
shl
movsb
addr16
or
fdivl
mov
add
ja
shll
into
pop
nop
cmp
jbe
sub
jns
adcb
cs
imul
push
sbb
sub
mov
daa
popf
xor
cmp
push
in
dec
dec
out
test
cmpsl
call
and
insb
cli
xchg
mov
inc
sbb
lret
sub
cld
outsl
pop
movsb
xchg
cmpl
mov
push
jecxz
mov
pop
lock
lret
sub
cmc
ja
aad
repnz
adc
jmp
pop
dec
add
push
stos
pop
inc
sub
jae
cmp
in
int
fists
mov
lcall
movsl
cmp
jnp
or
jl
in
outsb
jns
xchg
mov
push
or
push
add
decl
in
repnz
adc
sti
mov
cmp
fnsave
dec
adc
ja
out
cltd
aas
clc
out
cmp
push
dec
fldl
nopl
push
sahf
adc
xchg
mov
add
js
bound
jno
mov
repnz
push
inc
int3
aaa
into
cmp
outsl
push
fwait
stos
inc
int
jno
sub
hlt
test
stos
or
mov
inc
cltd
xchg
pop
push
sahf
fdiv
add
scas
xchg
xchg
add
loopne
adc
call
daa
mov
xchg
jb
adc
outsl
iret
jo
xchg
add
scas
and
aad
sbb
in
inc
repnz
cltd
xchg
sub
jo
fmuls
imul
add
or
pop
ds
subl
mov
xchg
dec
mov
ret
loopne
std
loopne
mov
push
test
insb
scas
shl
lea
dec
xor
ds
test
lret
pop
xor
into
arpl
loop
or
mov
pop
leave
test
push
scas
sub
dec
sbb
xchg
sub
add
pop
test
jecxz
push
push
test
repnz
mov
adc
pop
cmp
xlat
sub
repz
adc
mov
xlat
xchg
push
rcll
push
movsl
ret
fs
push
scas
mov
jge
and
call
jle
aas
xor
insl
lahf
loope
xchg
mov
jmp
jmp
cld
fists
orb
push
pop
push
pop
xchg
repnz
lret
pop
xor
inc
in
push
pop
xchg
fs
popa
in
xchg
jae
rclb
clc
dec
mov
sbb
ds
bnd
imul
or
dec
sub
ds
out
xchg
test
mov
xchg
test
dec
frstor
push
sub
lret
out
bound
xchg
pop
jl
or
ljmp
cs
icebp
cmp
sub
jl
decl
or
jmp
mov
dec
and
cwtl
loopne
in
test
loope
movsl
mov
leave
aam
dec
push
js
push
fcomps
sub
int3
push
dec
in
mov
jl
lret
dec
pop
in
mov
insl
aam
andb
addr16
imulb
push
inc
fidivrl
inc
aam
xchg
pushf
fxtract
les
adc
in
xchg
ret
je
scas
dec
out
test
in
sub
in
mov
jnp
ror
cmp
jecxz
xchg
jae
sbb
shlb
dec
jecxz
imul
cltd
cmc
lds
repnz
mov
sarb
loopne
mov
cwtl
test
lds
adc
jae
sub
cltd
mov
cmp
jmp
mov
jmp
mov
insl
cmp
arpl
jns
pop
cmpsl
out
xor
mov
rcl
jno
movsb
mov
jmp
shlb
rolb
stos
jge
sbb
hlt
testl
xor
cli
mov
dec
test
or
jbe
jge
aas
cwtl
dec
arpl
sbb
dec
mov
pop
adc
ss
fidivrs
aad
inc
aaa
push
js
pop
mov
fsubl
jle
cmpsl
xor
aad
xchg
mov
sbb
add
repz
jb
mov
cwtl
cmp
lea
les
imul
adc
lock
out
aas
jg
gs
adc
dec
sti
mov
jo
aam
outsb
mov
test
mov
mov
pop
in
add
jno
and
inc
pop
lahf
or
rorb
adc
test
test
movsl
add
mov
imul
js
lods
decl
mov
lea
fs
push
inc
lahf
xor
mov
shl
popa
stos
push
jne
test
std
hlt
inc
dec
in
adc
mov
jb
stos
or
and
les
int3
push
outsl
negb
mov
push
test
inc
fstl
mov
sub
xchg
in
repnz
mov
mov
pop
push
out
inc
rolb
in
pushf
pop
add
stos
insl
mov
mov
shlb
mov
xchg
outsb
es
pop
movsb
mov
cmc
mov
jnp
aam
sub
jbe
scas
mov
cmp
or
scas
inc
inc
pop
mov
mov
sbb
lahf
out
jb
jo
sbb
std
lahf
or
insl
xchg
add
shrl
inc
ret
out
loop
mov
mov
dec
out
pop
mov
xchg
or
imul
pop
sbb
mov
or
lock
cmp
test
mov
ret
cmp
iret
xchg
or
leave
and
push
in
in
shl
adc
sub
movsb
xorb
mov
mov
xorl
aaa
push
pop
add
daa
mov
repnz
xchg
or
cmp
jae
adc
push
scas
pop
pop
ja
add
daa
clc
mulb
xchg
jmp
sbb
inc
dec
clc
jb
daa
push
es
stc
jno
adc
adc
xor
in
mov
dec
inc
and
loop
cld
neg
xor
push
and
mov
fldenv
push
sub
inc
lods
lock
inc
push
mov
pop
scas
ja
lods
cmp
test
dec
add
mov
xchg
loopne
add
adc
xchg
cmpsb
dec
lods
das
cltd
dec
jge
dec
icebp
mov
xchg
scas
mov
xchg
jns
loopne
mov
cmp
mov
and
ret
jl
repnz
cli
jb
cmpsl
out
aad
cld
inc
and
stos
movsl
jge
dec
stos
push
pop
loopne
inc
aam
je
ljmp
roll
inc
sbb
add
inc
jb
subb
clc
arpl
sub
xchg
jns
xchg
imul
fldt
outsl
pop
imul
sbb
filds
fstpl
or
stc
jl
fildll
jbe
mov
fstpl
adc
dec
or
and
inc
leave
xor
mov
fistpl
sahf
sbb
jb
mov
push
mov
daa
adc
test
mov
orl
cmpb
std
sbb
hlt
std
or
add
jp
xchg
cmp
orl
push
out
xchg
scas
xor
cmpsb
cmp
ffreep
pop
adc
jae
loopne
jno
popf
test
cmpsb
lret
or
mov
in
push
xchg
cltd
std
sahf
mov
stos
shl
js
dec
test
out
inc
pop
or
andl
add
xchg
sub
inc
jp
cmp
rcll
loop
pop
jae
jle
insl
add
mov
xchg
lcall
cmp
jne
sub
shrb
or
cmp
lahf
and
fstl
pop
add
inc
sahf
lods
xor
mov
outsb
test
jno
je
pop
outsl
repz
fcompl
jle
les
aaa
movsb
lods
inc
jp
imul
or
cs
cmpsl
push
orps
xchg
cs
ja
inc
pop
cwtl
dec
js
push
outsb
loopne
mov
xor
fsubrl
fcomps
scas
or
jmp
pop
ss
rcl
jp
jbe
fs
push
and
cmp
movsb
call
cwtl
das
je
cmpl
aad
dec
and
jns
ja
jl
lods
mov
xor
mov
lret
inc
fwait
cmpsl
dec
in
data16
jo
ja
loop
imul
lods
jb
jbe
shlb
inc
fimull
push
popa
leave
subl
fisubrs
int3
mov
xor
repz
test
leave
adc
adc
das
addr16
push
sbb
pop
lds
xor
jge
cmp
and
into
cmp
in
rolb
subb
mov
jb
mov
mov
jecxz
jmp
pop
jo
jmp
aaa
add
loope,pt
lcall
fldl
in
fdivrl
ja
add
mov
out
mov
jne
xlat
sub
add
jle
jne
in
sub
jae
ret
fmulp
enter
push
loope
mov
or
xchg
jbe
movsb
lea
add
fcmove
jb
es
dec
aad
push
sub
testb
xorl
or
xor
pop
ss
xchg
das
je
mov
inc
ficomps
adc
scas
jg
inc
and
pop
dec
stos
dec
cmp
or
add
dec
and
push
sub
xor
fsubrs
pop
es
repz
loopne
sub
cmc
mov
cmp
pop
std
cwtl
dec
add
movsb
das
mov
test
fucomi
jmp
push
mov
repz
add
stos
pusha
pop
adc
in
jno
add
pop
jo
or
adc
mov
jo
repnz
sbb
cmp
call
pop
jle
xor
adc
arpl
shrl
jb
lods
pop
shll
or
ds
jecxz
mul
clc
xlat
or
lods
cmp
in
pop
mov
or
test
adcl
adc
push
fdiv
adc
cmp
mov
inc
cmc
dec
xchg
pop
cmpsb
add
in
mov
lods
xchg
and
ficoms
cmp
arpl
inc
mov
lods
faddp
sub
and
sbb
or
lret
rcrl
jb
lret
sbb
arpl
mov
ljmp
jno
movsl
cwtl
add
dec
dec
sarl
mov
imul
movsl
cmpsb
pop
cmp
sbb
push
mov
aaa
mov
push
or
add
test
jle
mov
nop
hlt
rcrl
repnz
jecxz
mov
nop
or
mov
inc
subb
inc
cltd
lods
mov
ret
aaa
leave
je
je
scas
inc
cmp
inc
mov
sub
sub
lret
jo
lret
dec
lret
shll
insb
xor
bound
mov
or
lea
push
xor
xlat
hlt
jbe
int3
mov
xlat
pop
lock
ja
in
mov
pop
xchg
add
push
aam
push
push
pop
mov
les
sub
in
cs
push
adc
mov
lods
and
xrelease
in
div
pop
cmpsl
int3
out
xor
fadd
jge
xchg
clc
ja
push
in
nop
imul
xchg
mov
cld
outsl
enter
js
add
dec
lods
movsb
fistpl
cmpsl
js
xlat
mov
lcall
pusha
jle
xchg
jnp
clc
in
int
js
add
or
mov
ret
lds
cmp
mov
mov
mov
jb
and
xchg
xchg
pop
in
add
gs
push
inc
mov
movb
loopne
sbb
ds
sahf
daa
pusha
mov
clc
inc
sub
sub
or
cmpsl
fucomp
das
or
daa
push
sbb
mov
ljmp
jg
jmp
cmp
shrl
ror
movsl
dec
mov
iret
divl
loop
mov
ljmp
xorb
gs
hlt
daa
xor
push
mov
dec
out
mov
sbb
jne
jbe
insl
pop
mov
dec
adc
cs
mov
inc
xchg
repnz
fdivrs
fsubl
mov
repz
add
in
fldenv
negb
mov
xchg
lods
inc
enter
mov
xor
push
dec
mov
je
sub
repnz
idivb
into
mov
inc
push
out
out
jns
sub
xor
add
leave
in
es
jmp
push
ja
mov
into
cwtl
fnstenv
mov
fimuls
js
jge
loop
outsl
mov
out
jns
sub
adc
push
test
leave
cmp
out
sub
adc
dec
loop
inc
xchg
inc
popa
popf
pushf
jae
inc
mov
jns
cli
mov
dec
add
mov
outsl
inc
push
xlat
inc
or
clc
push
jge
test
jmp
aad
scas
add
dec
loop
repz
cwtl
addl
int
sub
fs
push
pop
sbb
loopne
or
mov
jnp
hlt
mov
xor
rclb
xor
subb
icebp
lea
aad
sbb
cltd
rol
movsl
lds
lahf
xchg
jmp
jmp
push
imul
jno
or
xchg
pop
push
pop
je
scas
and
test
loopne
fidivrs
pop
mov
inc
out
jecxz
push
scas
movsb
add
sub
nop
push
nop
sub
sbb
into
mov
sub
add
notl
or
xchg
jmp
mov
add
gs
jecxz
pop
add
jb
push
popf
xchg
or
aaa
rol
stc
mov
jp
pop
enter
xchg
cli
mov
and
push
fsubl
out
inc
jbe
cmp
jns
cs
mov
pushl
lea
fdivl
push
xchg
and
xchg
or
pop
cwtl
add
dec
pop
pusha
mov
repnz
dec
test
sub
sub
and
out
xor
push
lds
lret
and
stc
adc
xchg
shll
addb
imul
cmp
push
inc
loop
je
rcrb
inc
pop
xchg
sub
aas
fidivrl
les
jecxz
outsl
out
ds
outsl
data16
xchg
cmp
arpl
mov
test
and
mov
inc
push
rclb
jbe
and
insl
cmp
and
pop
or
fmuls
pop
sub
cmp
adc
cltd
gs
pop
jbe
cltd
jle
js
mov
xchg
sub
jge
push
shr
pop
int3
jbe
lret
dec
iret
bound
mov
lods
push
int
xor
push
jmp
mov
fwait
xchg
push
movsl
test
mov
leave
jmp
cmpsb
cmp
cld
mov
mov
mov
lods
inc
sub
inc
ret
addr16
and
cmp
imul
sbb
add
nop
push
xor
add
push
fimull
out
daa
sub
dec
lret
or
or
arpl
mov
mov
lods
inc
dec
sub
jmp
add
insb
push
mov
fdivrp
sbb
test
jmp
xor
cmp
in
sti
dec
int
adc
inc
pop
pop
leave
mov
push
jg
push
out
sub
rcll
insb
pop
ja
dec
mov
fwait
push
fsubs
out
test
ja
inc
test
int3
mov
pushl
mov
sbb
aad
into
mov
or
mov
dec
ret
mov
fwait
out
cld
int3
ljmp
pop
jmp
stos
sbb
ljmp
mov
popa
and
add
inc
cmpsb
xchg
test
out
loop
adc
in
negl
xchg
out
rcrl
addr16
mov
jge
loope
push
loopne
cmc
inc
pushl
fcoml
xchg
jns
clc
arpl
sub
call
movsl
shlb
divb
mov
fsubrl
jl
nop
and
xchg
push
shrb
in
loopne
jl
mov
inc
pop
stc
inc
cmp
add
or
cwtl
push
iret
cmpsl
lcall
inc
cwtl
testb
cmp
stos
cld
pop
aad
or
loope
mov
xchg
loopne
out
data16
cmpsb
cmp
scas
sahf
fld
loopne
jae
in
enter
ljmp
call
pop
ds
fstl
ljmp
cmp
aam
adc
inc
scas
das
mov
pop
fld1
mov
sub
aam
mov
in
les
push
mov
jle
ja
lahf
mov
add
fisubl
jmp
or
jbe
movsb
add
fisttps
jno
sbb
outsl
jne
add
out
cmp
adc
add
mov
mov
or
rolb
js
add
push
mov
jnp
into
push
insl
repz
ret
push
and
dec
pusha
pop
lcall
andb
push
addb
xlat
mov
iret
jmp
inc
rorl
loop
sbb
inc
push
das
xlat
jo
xchg
add
repz
add
daa
dec
popa
pop
aaa
jle
out
outsb
xchg
push
ret
sbb
dec
push
out
fstl
sub
jp
test
lock
push
xchg
faddl
mov
stc
mov
xor
cmp
test
ja
adc
xchg
adc
cwtl
pushf
dec
out
xchg
in
or
frstor
iret
data16
call
cmp
xchg
scas
dec
fistps
mov
mov
mov
push
out
mov
jbe
test
jnp
dec
mov
mov
testb
push
lods
in
xchg
dec
push
aad
pop
scas
sahf
mov
iret
mov
xorb
sbb
sub
incb
adc
test
and
cmc
jnp
mov
sbb
pop
lahf
clc
mov
sbbl
mov
mov
lahf
jno
nop
jle
sbb
adc
subl
mov
int
push
out
andb
outsb
add
dec
push
mov
loope
xor
push
outsl
sbb
fildl
daa
cmp
std
jecxz
sbb
jge
int
xor
pop
out
sbb
add
flds
jb
and
xor
add
cmp
mov
mov
lahf
inc
clc
in
into
shl
nop
xor
jp
mov
adc
or
mov
or
stos
mov
dec
add
out
push
sahf
inc
shrb
mov
outsl
jg
test
jp
xchg
jnp
xchg
lods
outsb
rcrl
or
mov
mov
sbb
adc
cmpsl
mov
cmc
test
data16
mov
mov
pop
dec
add
jmp
ja
xchg
lea
xchg
mov
mov
addl
sbb
mov
outsl
sarl
add
xor
mov
mov
fdivrs
test
cmp
ret
stos
inc
andb
shl
shll
and
jno
or
fbld
jge
sub
test
outsl
pushf
int3
adc
out
stos
pop
orl
arpl
ret
subb
mov
shll
movsb
dec
jnp
cmpb
sbb
jp
jo
inc
push
mov
popa
adc
ljmp
push
icebp
cmp
ds
add
cli
or
or
fcomi
pop
xchg
jmp
adc
out
push
fwait
or
push
mov
jnp
sti
mov
pop
ljmp
push
in
jmp
xorb
lds
add
shrl
cmp
jno
roll
mov
sbb
pop
mov
cmp
cmp
pop
fsubs
popa
add
push
push
add
jnp
mov
add
test
stos
inc
push
mov
inc
xor
pop
popf
dec
push
push
fdiv
pop
cmp
push
fcmovnbe
in
lahf
test
mov
push
or
dec
mov
cmpsb
jnp
sub
sti
les
cltd
cmpl
push
std
loope
jmp
mov
cmc
pop
xchg
xor
inc
mov
jmp
push
insl
imul
in
mov
les
roll
das
rclb
jo
sti
mov
out
popf
movnti
and
xor
jae
setg
icebp
mov
sub
pop
sub
bnd
jge
jge
xchg
ljmp
es
lods
into
inc
sbb
lret
pop
xchg
repz
ljmp
and
sti
jp
mov
jp
rep
fisubs
or
push
pop
cs
mov
inc
gs
loopne
cmp
std
adcb
xor
aas
jge
pop
pop
ja
mov
movsl
push
call
out
pop
jmp
int3
stc
outsl
lock
scas
inc
add
insl
add
pop
fwait
pop
push
lcall
test
in
call
add
xor
jle
movsb
pop
outsl
mov
scas
adc
mov
pushf
loopne
xor
int
lock
mov
add
repnz
stos
sbb
js
flds
mov
mov
rorl
shlb
push
mov
in
push
pop
imul
loope
adc
popa
push
cmp
orl
jge
ds
je
mov
cmp
inc
sbb
dec
xchg
int3
xor
js
add
inc
push
mov
int
mov
pop
mov
in
sbb
insb
inc
lcall
lcall
idiv
aas
sub
pop
inc
mov
test
or
jne
imul
sbb
dec
ja
ja
push
xchg
dec
dec
xor
and
rclb
pop
int
cld
or
sbb
cmc
push
cwtl
loop
ja
aam
aas
loopne
lret
lods
sub
lds
fists
jae
cld
mov
inc
mov
pushf
pusha
and
sahf
std
xor
push
lahf
mov
push
movsl
add
dec
mull
popa
arpl
in
push
add
adc
fwait
cmpsl
add
sti
into
out
or
jle
pop
ljmp
dec
in
pop
lea
insb
push
sahf
push
dec
bound
mov
int3
lret
fidivs
sub
aad
lock
sub
ret
adc
inc
adc
pop
sub
xor
iret
fildl
mov
cmp
cli
fcompl
inc
add
popa
clc
mov
aaa
mov
fwait
test
aaa
lret
jae
xchg
xor
test
movsb
cmpsl
sub
fdivrs
dec
jecxz
icebp
frstor
inc
xchg
lods
xchg
mov
repnz
call
iret
or
cmp
pop
pusha
push
mov
lock
inc
aaa
dec
mov
and
nop
sub
shll
adc
or
xor
icebp
jmp
nop
daa
cmp
loop
pop
fwait
dec
insl
mov
in
mov
pop
or
movsl
stc
jno
sti
xor
push
sti
stos
xchg
out
popf
and
mov
pop
lods
mov
insb
out
cmpl
jecxz
jo
mov
jns,pt
stc
mov
icebp
mov
inc
xor
stc
push
push
or
add
xor
xchg
dec
sbb
faddl
loop
int
jg
in
cs
out
cmpsb
jmp
sbb
dec
dec
push
out
inc
in
sbb
push
mov
outsl
xor
mov
cmp
jecxz
push
shll
cmp
and
inc
mov
mov
sbb
mov
cmpsb
lds
xchg
jge
loopne
into
fdiv
xor
clc
jno
lods
mov
jbe
jne
cmc
xchg
and
add
xchg
pop
enter
or
inc
mov
out
dec
int
cmpl
das
dec
xchg
push
movsb
cltd
adc
dec
lahf
and
mov
sahf
fldl
mov
pop
imul
cmp
mov
push
rcl
dec
test
jb
pop
cmc
mov
jg
test
pop
dec
xlat
dec
call
and
addl
outsw
mov
data16
cmp
pop
mov
sahf
arpl
les
leave
mov
and
mov
adc
mov
xchg
mov
and
dec
fnstcw
ja
inc
mov
lahf
push
daa
adc
xor
int3
xchg
fildll
in
mov
xor
std
das
inc
loopne
jp
or
jmp
and
mov
mov
fdivrl
inc
or
jns
pop
and
push
das
rorb
cld
or
lahf
bound
or
mov
rcl
dec
lds
push
mov
cmp
fsubrl
rcrb
lret
cmp
fwait
push
repz
bound
or
and
or
or
dec
data16
dec
ja
jp
mov
cmp
adc
jmp
test
fcomi
arpl
dec
push
shr
out
push
ljmp
call
call
jg
imul
mov
insl
sub
cwtl
push
xchg
pop
cli
and
outsl
add
gs
rcrl
xchg
cld
sbbb
lahf
xor
lret
xor
mov
sub
lret
stc
ljmp
or
mov
lods
push
inc
add
popf
xor
jne
xchg
and
cmp
pop
ret
cli
cltd
xor
push
aam
add
and
outsl
subb
shlb
addr16
aam
into
mov
mov
mov
and
lock
call
daa
xchg
dec
xor
jmp
imul
mov
pusha
aaa
aas
aad
jge
icebp
mov
hlt
insb
sub
cmp
dec
dec
rol
sbb
pop
cmp
shr
inc
sarl
das
addb
push
repnz
jno
cmp
dec
cmc
mov
mov
mov
pushw
mov
lods
jb
fisttps
pop
std
hlt
shr
jecxz
in
call
rol
pop
jmp
mov
imul
push
dec
sbb
jle
and
or
in
movsl
imul
sti
shrl
add
inc
aas
cmp
xlat
xchg
dec
fnsave
fisttps
cmp
mov
clc
mov
jno
cmp
mov
cmpsl
or
inc
cwtl
clc
outsb
mov
cwtl
sbb
jl
mov
sub
sub
mov
adcb
pop
and
mov
loopne
pop
lock
addr16
add
cmp
and
iret
push
or
sbb
dec
or
mov
movsl
xchg
sbb
shll
icebp
sub
into
mov
sbb
sub
and
jne
pop
pushf
or
popf
cmp
in
dec
loopne
insb
out
add
or
inc
lcall
jne
stos
mov
std
and
cld
call
jecxz
dec
xor
out
sbb
pop
pop
lock
js
xchg
inc
test
stos
or
mov
lret
push
bnd
and
cmp
sbb
dec
fistpll
lods
adc
or
jno
push
inc
dec
movsb
dec
jl
inc
movb
add
cmp
inc
push
out
add
jecxz
sub
arpl
rorb
pop
movsl
add
push
loopne
pop
adc
icebp
and
fcmovbe
imul
shr
test
loope
and
inc
mov
and
out
pop
dec
mov
test
push
out
xchg
rorl
jl
xchg
sub
dec
mov
sarl
nop
inc
pop
mov
sarl
es
repz
out
ficoms
fucomi
sub
sarb
jmp
cmpl
jbe
repz
and
lock
sub
shlb
rcll
fcoms
or
addl
add
or
fdiv
xchg
cltd
mov
sahf
and
cltd
fsubr
into
cmpsl
out
xchg
mov
push
push
cs
js
xor
daa
xchg
sub
or
in
pop
mov
aaa
fisttpll
mov
sub
mov
gs
negl
add
dec
push
fcoml
mov
movsb
push
dec
xor
scas
gs
xchg
fldl
ss
cmp
pop
sub
adc
push
and
pusha
cli
jp
arpl
sahf
mov
fdivrl
pop
cld
les
scas
sub
stos
dec
rcr
jae
stc
lret
push
cli
or
lcall
jnp
es
rcll
push
pop
jg
cmp
cmp
gs
mov
clc
push
mov
push
clc
mov
jge
mov
sahf
scas
imul
sub
das
cmp
push
fwait
add
xlat
mov
enter
loop
movsl
repz
je
push
mov
inc
pushf
rol
cmpsl
and
fiaddl
cltd
cmp
sti
pop
mov
mov
dec
jecxz
add
xchg
mov
sbb
push
notb
sbb
cltd
popf
and
mov
cmc
pop
mov
test
pop
sarl
lds
sub
xor
sbb
or
rclb
outsl
add
aad
in
ret
mov
jo
sbb
or
adc
rorl
jo
push
push
in
cmpsl
inc
lea
aas
mov
sub
adc
loope
sub
mull
lock
movl
dec
push
in
jo
mov
adc
lods
adcb
ljmp
and
add
mov
pop
xchg
sbb
mov
jmp
mov
clc
cmp
loope
xchg
mov
xor
mov
pop
popa
adc
decb
pop
mov
inc
mov
xchg
add
repnz
mov
pop
sub
add
or
jg
mov
lods
cmc
mov
mov
ret
lret
pop
sub
test
fmuls
inc
push
push
sub
cmp
nop
sub
iret
pop
cmpsb
sbb
and
and
mov
dec
stos
mov
jg
jne
out
sub
cmp
mov
mov
rorl
push
scas
dec
cmp
lret
xchg
adc
mov
fbstp
dec
mov
xchg
xor
call
mov
bnd
jle
loopne
jns
imul
push
fdivs
cmpsl
sbb
xor
mov
jb
inc
cmpsb
lds
mov
dec
ds
jns
daa
xor
jns
lret
pop
dec
pop
stos
outsb
add
lods
add
sub
cltd
pop
sbb
jns
inc
int3
or
dec
and
and
or
add
outsb
mov
add
mov
jae
or
fsts
popf
icebp
mov
pop
scas
leave
insb
js
ficomps
ss
std
xchg
push
or
rorb
in
xchg
cmp
adc
mov
clc
cli
notw
lcall
xchg
add
sbb
push
adc
sub
and
hlt
pop
pop
adc
push
fdiv
mov
jge
test
loop
stos
cwtl
push
vmwrite
data16
test
fldl2e
lods
in
push
fidivrs
xor
loopne
fstpt
movsl
cld
daa
jle
pop
div
rcrb
cmp
jge
lret
jo
add
adc
sar
inc
inc
push
gs
les
add
or
les
jecxz
add
sub
dec
pushf
lea
icebp
sub
mov
fnsave
jnp
rorl
push
ss
push
in
incb
clc
xchg
repz
imul
andl
stos
sub
or
jns
xchg
xor
adc
sahf
dec
inc
aaa
push
jge
out
fdivrs
rcll
inc
pusha
push
pop
xor
cmpsl
pop
mov
jp
mov
test
sbb
mov
fisttps
dec
mov
pop
outsb
test
stc
je
pushf
sub
bound
jno
aad
or
lods
ja
and
fidivl
or
call
inc
adc
das
leave
xlat
jp
dec
mov
fsts
icebp
inc
inc
arpl
into
push
mul
and
add
inc
negl
add
mov
push
loop
jmp
jl
add
jmp
cld
adcl
pop
cmp
add
xorb
vcvttsd2si
xor
mov
adc
inc
fiadds
icebp
les
scas
aas
adc
call
xor
cmp
sub
push
mov
arpl
fistl
pop
out
mov
jp
cmp
hlt
xchg
add
movsl
cmpsl
ret
fstps
in
mov
sti
jne
je
push
cmp
lods
jae
add
pop
mov
push
aad
sbb
cs
pop
jbe
je
xchg
call
fistps
sub
testb
inc
sahf
jb
stos
cmp
sub
dec
dec
jge
shl
test
out
xchg
xor
scas
jb
fwait
push
iret
dec
mov
inc
jle
mov
repnz
and
inc
inc
addr16
xlat
mov
mov
ret
cld
xchg
cmc
fcmove
dec
iret
popf
sbb
insb
sub
movsb
and
pusha
fistl
int3
jg
outsb
or
fdivrl
mov
inc
popf
in
pop
inc
jmp
lret
xor
mov
mov
xchg
pushl
loop
lods
dec
scas
xchg
in
mov
cltd
jp
cmpsb
les
sbb
pop
sbb
stos
movl
movsb
push
aad
add
int
and
out
push
inc
sub
inc
clc
mov
sti
daa
add
cmpsl
andb
adc
xchg
lods
sub
cmc
stos
inc
lock
jl
adc
bnd
ds
and
jb
arpl
ja
push
inc
or
dec
mov
push
hlt
sub
bound
aam
mov
and
rcll
jg
adc
loop
jb
jae
imul
push
lods
adc
or
loopne
push
sbb
scas
hlt
adc
push
movsb
cmp
rcrl
jo
ret
aad
incb
push
ljmp
sub
jp
inc
dec
fists
cmp
pop
jae
std
movsb
jle
dec
mov
notl
inc
rcl
push
popf
jne
xchg
inc
or
mov
fiadds
int3
bndstx
push
xlat
mov
aaa
loope
cli
mov
lds
inc
push
ret
in
xchg
jmp
ds
xchg
xor
fdivl
jae
mov
lds
adc
jge
loope
mov
in
xor
ds
js
clc
pop
roll
and
sbb
adc
mov
jo
inc
mov
daa
and
insl
mov
xor
lods
hlt
mov
xor
add
incb
mov
pop
add
jbe
int
movsb
sbb
imul
cmp
shrb
mov
mov
mov
cs
sbb
mov
cli
das
inc
pop
sub
lock
gs
add
test
mov
sbb
aam
call
mov
add
repnz
inc
mov
insl
aam
aad
pusha
arpl
mov
test
ds
popa
sub
add
daa
loop
pop
dec
into
sbb
sbb
sarb
pop
pop
fnsave
cld
lret
fdivrp
cli
pushf
fldcw
rorb
mov
jecxz
int3
sti
xchg
and
jge
push
test
jmp
jno
enter
cmp
cltd
sbb
and
sbb
aas
dec
enter
shl
or
jo
push
das
sub
pop
dec
or
cmp
in
dec
cli
sbb
shr
ret
ljmp
inc
pop
jecxz
adc
xor
adc
int
fwait
xor
popw
in
jne
test
jp
push
das
mov
clc
or
adc
xor
test
jno
mov
xor
mov
hlt
fidivl
jno
sub
repnz
clc
and
stc
add
cmpsb
inc
scas
out
jp
imul
sbb
pop
loop
mov
das
in
dec
inc
mov
ret
subb
pushf
mov
sti
clc
xchg
sub
inc
sub
loopne
lahf
lcall
inc
imul
fucomi
or
jnp
jmp
ja
enter
leave
fs
cli
add
push
adc
pop
push
fistl
sbb
out
lods
outsl
sub
adc
imul
mov
lret
in
mov
sbb
sbb
dec
cmp
push
out
fisttps
test
out
lock
lcall
adc
cmp
dec
pusha
mov
jmp
dec
jp
ret
lods
and
divb
gs
and
ljmp
inc
jp
loop
xor
mov
repz
movsl
mov
std
mov
adcb
pop
cmp
shlb
in
sbb
dec
in
cmp
inc
pop
add
in
dec
xor
xchg
sahf
pop
scas
inc
push
shrl
xor
jg
xchg
dec
in
or
mov
repnz
dec
insl
loop
push
sub
movsb
pop
clc
mov
mov
jae
mov
call
imul
push
push
sub
add
dec
dec
and
shrl
movsb
dec
pop
adc
ja
jb
push
add
lahf
daa
xor
add
sbb
nop
sbb
cmpsb
dec
cmc
into
add
cs
pushf
sub
movsl
push
pusha
aad
dec
cmp
lods
ds
jb
fwait
inc
jo
inc
mov
shrb
mov
pop
mov
xor
jle
fsubr
pusha
add
jecxz
in
cli
out
xchg
jge
test
mov
aam
sbbb
enter
fldl
mov
inc
mov
mov
repz
cmp
mov
dec
or
addb
shll
out
je
push
js
sbb
sub
arpl
inc
fidivl
pop
and
fcmovnu
mov
arpl
outsb
pushf
aaa
sub
push
pop
jno
or
mov
icebp
pusha
cmp
xchg
adc
je,pn
jo
inc
loopne
ds
loopne
in
inc
sti
js
sub
push
outsl
sbb
add
test
push
sahf
pop
inc
fdivp
sbb
daa
adc
jns
aad
fwait
lds
xchg
or
and
int
sbb
mov
lahf
lods
pop
sti
mov
pop
stos
xchg
in
lahf
push
xchg
mov
or
jno
test
jb
jno
push
push
adc
ffreep
aad
jl
xchg
cli
cmp
mov
mov
jae
fwait
popa
imul
bound
hlt
sbb
pop
mov
lods
xor
out
lret
sbb
cmp
imul
movsb
stos
dec
mov
push
sub
and
rorb
sub
xor
js
icebp
arpl
aas
push
xchg
hlt
xchg
mov
mov
xor
push
nop
fstpt
push
lahf
and
xorl
cmp
jo
pop
pop
jae
pop
shrl
out
test
call
and
les
out
popf
push
ret
fisubl
jne
jae
xchg
stc
mov
cmp
push
mov
dec
stos
push
rorl
xchg
dec
fists
pop
ds
loopne
lret
hlt
dec
or
mov
mov
out
jb
dec
mov
aas
adc
icebp
add
test
cmp
popa
insb
rcl
subl
xor
dec
push
mov
bound
mov
inc
ret
push
shlb
aas
ds
sub
inc
lock
fisttps
add
xor
and
out
enter
dec
jb
inc
cltd
ret
pop
lret
bound
cmp
repnz
mov
xchg
ds
dec
aas
add
pop
mov
cmc
bound
sbb
xchg
data16
in
push
mov
movsb
inc
xor
dec
cmp
sti
lcall
pushf
mov
mov
sbb
test
fnstcw
cmp
cmp
out
ret
pop
sbb
dec
loope
arpl
mov
xchg
mov
pop
popf
xchg
sub
inc
ljmp
mov
ljmp
rcll
ljmp
push
ficompl
pop
addr16
adc
aas
dec
test
repz
je
jecxz
int
sub
stos
cmpsb
mov
cmp
inc
pop
or
inc
lret
mov
cli
int3
dec
repnz
mov
hlt
pusha
mov
sarb
xor
test
jno
xchg
loop
dec
and
jecxz
aad
rorl
push
enter
orl
call
xor
outsl
push
xlat
cmp
je
test
sbb
clc
mov
ret
mov
jo
aam
sbb
jl
sub
jg
test
cmp
rcrb
in
mov
out
int3
fmuls
sbb
inc
inc
gs
ficoml
push
test
lret
into
ficomps
idiv
lret
rcr
sub
xchg
pop
adc
mov
out
push
sbb
popa
repz
mov
sbb
jne
mov
cmpsl
movb
jne
cmp
mov
addl
xchg
push
aam
lock
and
inc
or
jno
iret
test
xlat
scas
dec
pop
or
mov
mov
outsb
lahf
xor
fsubl
push
sub
test
mov
pop
xchg
dec
stos
mov
cmpsb
pop
mov
jp
fdivrl
addb
lea
and
sbb
jmp
xchg
jle
loopne
mov
rorl
pushl
das
xor
cltd
fistpl
pop
js
in
in
ret
dec
ja
mov
in
pushf
pusha
fldl
sti
aaa
mov
nop
int3
or
push
sbb
push
sbb
mov
push
or
jge
push
mov
push
mov
ficoms
xor
insl
rcll
out
hlt
sbb
mov
enter
sbb
nop
cmp
xchg
pushf
or
loope
adc
iret
subb
cmpsl
scas
sub
movsl
mov
imul
call
sub
mov
xor
sub
das
aaa
outsl
shrl
mov
movsl
loope
xlat
pop
cld
push
jp
mov
test
jl
pop
mov
and
je
sbb
test
leave
xchg
icebp
dec
cmp
jp
adc
xlat
lahf
das
mov
and
js
xor
shrl
jae
in
xchg
push
inc
sahf
popf
mov
fbstp
mul
insb
test
push
pop
aaa
ds
cltd
jl
pushf
and
jmp
arpl
lret
xchg
or
jp
add
pop
mov
pop
andb
addb
xchg
pop
mov
xchg
mov
jg
rcrb
mov
call
mov
test
jbe
es
call
inc
jmp
mov
xchg
sbbb
push
add
std
psraw
dec
add
mov
push
jmp
test
in
test
xchg
xchg
pop
pop
xchg
enter
jg
and
sbbl
stc
adc
mov
sbb
outsl
test
loop
minps
fstpt
int3
arpl
jg
jb
add
cmpb
xchg
mov
mov
push
rol
popf
push
daa
jmp
aam
dec
xchg
inc
xor
adcl
lahf
notb
mov
popf
cmpsl
mov
mov
sbb
sub
ret
js
sub
cltd
add
xor
repz
lock
mov
lock
sbb
cltd
nop
in
sti
or
push
or
mov
mov
jmp
adc
mov
mov
mov
ret
sbbb
xchg
mov
xor
icebp
cmp
mov
jno
mov
out
sub
cmp
dec
xor
stos
repnz
shld
ret
in
or
or
inc
pusha
nop
daa
xchg
scas
jmp
scas
mov
scas
cs
fcoml
pop
hlt
ds
sub
cld
jns
or
pusha
and
push
call
xor
mov
in
xor
dec
lods
adc
or
or
scas
mov
inc
lret
sbb
fisubrs
jo
outsb
lret
sub
mov
pop
pop
xlat
and
mov
imull
sahf
xor
std
cwtl
mov
stos
mov
imul
out
les
jne
ja
lock
push
sbb
xor
ja
push
push
test
call
adc
leave
inc
ret
popa
dec
adcl
test
ljmp
fnstcw
sarb
subl
dec
xor
mov
addl
cmp
pop
out
pusha
mov
push
daa
xchg
neg
jne
aam
mov
pop
std
aad
out
outsl
push
push
pop
or
xchg
mov
or
adc
cmc
mov
jp
mov
push
popf
or
ja
hlt
push
roll
adc
sub
add
sahf
xor
inc
out
pushw
js
adc
negl
mov
shll
mov
inc
xor
xchg
mov
in
xor
push
adc
insb
outsb
repz
js
clc
jo
icebp
repz
popf
or
cltd
arpl
dec
lcall
sbb
sub
xchg
push
jmp
mov
ds
les
dec
test
xlat
outsl
pop
aas
push
xor
pushf
sbb
xchg
mov
fnstenv
jb
add
add
xchg
aaa
or
out
stc
inc
gs
xlat
pop
fdivl
mov
addr16
xchg
mov
push
fnstcw
add
push
fnstenv
or
in
aam
mov
mov
push
insb
leave
shr
xchg
mov
adc
jp
ror
mov
cmp
jmp
filds
cmpsb
pop
icebp
xlat
xor
or
cmp
mov
in
add
adc
punpckldq
xchg
arpl
inc
fisubl
pop
add
push
popa
and
cld
pop
imul
sbb
call
sub
loopne
inc
call
nop
adc
pusha
lods
pushl
and
enterw
jno
imul
pop
mov
lods
sbb
add
cmpsl
mov
lret
adc
dec
shlb
inc
add
cmp
mov
fldl
mov
pop
stos
jmp
mov
adc
xchg
jae
sub
jbe
xor
push
sub
icebp
mov
stos
in
add
jnp
loop
rolb
nop
es
xor
mov
aaa
add
rorl
or
cmp
or
outsb
jle
or
popf
mov
fisubrs
xchg
inc
and
inc
or
inc
dec
or
test
adcl
dec
inc
popa
sbbb
push
jl
and
popf
jb
xchg
sub
sub
or
jo
aas
pusha
iret
insb
push
sub
scas
in
push
addb
and
pop
fsub
aad
sbb
sub
cmc
add
sub
mov
outsl
movsb
fsts
dec
mov
sub
cmp
mov
push
xor
pop
ja
xchg
repz
int
inc
dec
push
test
mov
jns
push
mov
mov
bswap
mov
sub
and
cld
jo
mov
pushf
pushf
xor
gs
xor
in
aas
testb
mov
push
ret
outsl
xchg
mov
add
xor
lret
cmp
int3
loope
sbbb
stos
cmp
or
xlat
jno
xchg
sub
fwait
mov
sub
push
mov
sbb
dec
push
add
fwait
lods
lock
xor
adc
xor
mov
lock
sarb
mov
shl
jnp
push
dec
jmp
xchg
add
mov
sar
rcl
lret
push
in
mov
sub
lods
fmull
loop
dec
cmp
xchg
in
sub
aad
dec
imul
scas
and
subb
lcall
xchg
xchg
adc
jg
pusha
sub
dec
out
mov
movsl
icebp
push
push
je
mov
sti
xchg
sub
sub
mov
stos
mov
xchg
jp
lea
loope
enter
dec
or
out
lock
andl
xchg
shlb
push
mov
or
imul
arpl
mov
sub
xchg
sub
dec
aad
fsubrl
fcomp
jae
pop
jno
leave
mov
cmpsb
les
in
je
mov
mov
pop
stc
sbbl
iret
sub
ds
jnp
outsl
in
pop
insl
lds
mov
sub
mov
xorb
out
push
mov
xor
xor
ss
adc
orl
int
inc
cs
pushl
mov
xchg
test
push
push
jno
bound
in
sub
lret
mov
inc
xlat
fldcw
call
jo
test
ret
jle
dec
mov
push
bnd
inc
and
cwtl
sbb
notl
fldcw
shlb
mov
out
lret
mov
or
fistpll
adc
in
jne
xchg
push
test
je
or
cmp
mov
aaa
sarl
ds
jmp
mov
pushf
sti
mov
gs
xchg
inc
add
imul
cld
incl
xor
push
sub
loop
testl
ds
pusha
xlat
adc
or
mov
jae
jbe
testl
andb
mov
sbb
test
mov
mov
daa
into
dec
lea
add
inc
ljmp
sub
cmpsb
or
push
rorb
jae
xchg
jmp
add
popf
fstps
sub
fidivl
mov
in
cmpsl
lret
push
xlat
ss
fsubs
aad
shll
ficompl
push
sub
pop
xchg
in
imulb
jecxz
movsl
lahf
dec
cs
mov
ficoml
cmc
ficoml
outsb
jae
movsl
hlt
std
adc
lahf
dec
xor
inc
xchg
outsl
or
or
mov
and
xor
inc
dec
xorl
or
clc
ja
pop
lea
jg
arpl
mov
push
push
pop
cvtps2pd
scas
lahf
sub
sbb
and
ficoms
or
cs
and
call
xchg
sub
or
loop
push
inc
or
popf
imul
loopne
or
or
jae
pushf
loope
cmpsb
dec
out
add
jp
subl
aas
les
repnz
dec
stos
fsubl
enter
ret
cmp
mov
mov
push
add
inc
hlt
mov
lret
lods
jmp
fbld
push
jne
dec
inc
mov
mov
jae
in
shrb
loop
repz
inc
in
divl
xor
push
in
repnz
aas
adc
inc
pusha
lds
lret
lods
fs
and
int3
nop
push
mov
hlt
jecxz
out
xor
push
nop
pop
dec
aam
xor
dec
mov
sbb
dec
leave
adc
test
sbbl
push
imulb
das
pop
addr16
jns
out
inc
jl
push
out
loope
lods
sti
jno
cmpsb
pop
xor
adc
push
data16
xchg
adc
shl
mov
mov
nop
in
inc
cmp
mov
pop
mov
add
or
test
adc
lret
stos
pop
fucomp
out
sahf
mov
xor
shll
incl
or
or
outsb
xorl
imul
push
mov
pusha
popa
or
daa
sbb
shrb
ret
jne
xor
pop
das
mov
xchg
outsb
pop
xchg
push
mov
lds
test
out
add
xchg
push
ja
mov
mov
sahf
jmp
or
loopne
mov
xor
inc
jo
lcall
inc
sbbl
and
dec
xor
sbb
clc
mov
jge
fstp
ret
roll
out
sahf
jbe
adc
xor
push
adc
sbb
or
insb
jmp
mov
jae
test
jmp
les
add
mov
rolb
mov
and
cmp
js
xor
jno
cmp
dec
adc
arpl
shll
pop
dec
dec
std
out
adcb
or
sub
mov
mov
lds
les
pop
sub
adc
mov
in
outsb
xchg
cmc
call
pusha
cmp
mull
sbb
pop
sbb
rorb
jno
xchg
adc
cmp
xchg
hlt
mov
pop
scas
mov
cmc
lods
ret
xchg
stos
mov
hlt
dec
push
sub
cmp
rol
mov
popa
ret
dec
dec
lods
imul
mov
test
in
in
roll
cltd
lock
orb
aas
adc
js
mov
push
mul
je
cmpsl
jl
jle
mov
cmp
sbb
dec
lcall
pop
dec
hlt
or
lds
and
in
pop
dec
and
dec
fsubs
jo
push
vcmpnle_uqpd
in
adc
jnp
cmp
dec
mov
movsb
cmp
jle
fildll
xchg
pushf
stos
push
in
sbb
shrb
sbb
mov
adc
clc
xor
scas
inc
imul
sbb
stc
adc
mov
push
jo
js
imul
icebp
cmc
aad
sbb
idivb
add
xor
callw
jne
dec
mov
jns
fmul
push
test
repnz
mov
pop
sub
mov
sub
dec
sub
shrl
adcb
xchg
mov
andl
push
insl
dec
xchg
aas
mov
fprem
jae
or
jp
cmpsb
ficompl
jo,pt
fdivl
dec
repnz
addr16
jmp
test
es
push
jb
mov
lods
pop
in
leave
into
test
xchg
adc
sbb
faddl
adc
out
cmc
or
add
xor
lahf
loop
xchg
lods
addr16
add
xor
jl
xchg
jp
aad
aaa
lcall
pusha
push
xchg
adc
popf
idivb
arpl
outsl
pop
and
cmp
test
jecxz
sub
and
lahf
ss
addr16
mov
and
sub
dec
adc
adc
jno
je
int3
and
xchg
jnp
adc
cmpsl
mov
fstpt
out
and
xchg
loopne
mov
pop
xor
mov
leave
pop
mov
leave
jne
pop
loopne
jnp
xchg
and
into
xor
popf
nop
xchg
aad
cmpsb
ds
pop
mov
vmwrite
test
and
addr16
sub
out
inc
xor
outsl
mov
popw
sub
lods
xor
ja
divb
xchg
iret
sbb
mov
cmp
test
or
into
sbbl
movsl
push
push
cwtl
push
popf
mov
int
pop
cmovp
inc
jbe
mov
movb
xchg
adc
iret
fidivl
cld
repnz
jge
cwtl
xchg
ljmp
jo
pop
xor
mov
jb
out
push
dec
loope
sbb
ret
mov
xor
or
sub
pop
xchg
repnz
imul
hlt
cmpsl
lret
outsl
loop
dec
andl
push
js
or
outsb
add
add
in
ficoms
cmpsl
loope
test
jb
jle
mov
and
adc
leave
aas
in
ja
push
adc
pop
popf
push
loopne
sarl
mov
jl
loop
xchg
adc
out
add
mov
mov
and
push
sbb
xor
push
mov
jo
es
adc
add
insb
adc
or
inc
pusha
push
gs
loop
or
xor
ficoml
out
cmp
mov
rolb
imul
cld
pop
push
sbb
xor
div
scas
jle
shrb
lock
mov
xchg
jo
in
xor
mov
cld
fidivrl
add
sub
ret
movsb
leave
pushf
jle
dec
cmp
cmp
bound
cmp
mov
push
xlat
enter
jae
cmp
pusha
js
sbb
mov
lds
pop
cld
pop
mov
dec
cli
mov
dec
ret
xor
mov
test
mov
push
sub
adc
movl
leave
je
repnz
mov
jns
jmp
inc
dec
aad
add
pop
ljmp
je
xchg
dec
cmp
inc
cmp
in
push
movsl
push
push
jg
mov
mov
bound
call
push
fcomps
lcall
int3
data16
stc
iret
xchg
in
and
and
xor
mov
or
out
daa
and
je
xor
mov
pop
imul
scas
jp
dec
mov
arpl
adc
sbbb
dec
push
or
or
add
test
lret
sti
shll
rcl
ss
int3
out
shrl
pop
xor
push
dec
in
test
leave
leave
fnsave
push
inc
inc
xchg
and
sahf
out
dec
lock
ret
aaa
iret
sbb
and
popf
test
or
mov
popf
or
push
sbb
add
mov
repz
mov
rcrl
shl
pop
shll
add
sahf
inc
sub
ret
fidivl
sub
jo
jne
fbstp
sbb
xor
leave
sbb
fisttps
xchg
push
mov
sbb
cli
dec
gs
and
push
std
imul
stc
dec
loopne
jnp
add
xor
jecxz
jns
out
rcr
mov
stc
or
or
lcall
pop
push
aam
push
cmp
jg
repz
in
and
jp
fwait
sbbl
lcall
pop
outsb
das
mov
loop
jecxz
pop
loope
outsb
test
and
leave
jb
push
in
push
inc
jle
mov
fldcw
fldl
imul
loope
and
mov
sahf
xlat
pop
cmp
mov
pop
dec
in
xor
dec
push
out
xchg
mov
add
cmp
mov
sti
jno
mov
sbb
dec
lods
jp
test
add
in
std
sarl
insb
sahf
sbb
or
shlb
xchg
xchg
pop
lea
mov
and
adc
xlat
andl
sbb
push
je
frstor
cmpsb
hlt
sub
and
inc
test
nopl
sub
out
add
insl
sub
rcrb
mov
or
and
jmp
push
fisubrs
leave
push
test
push
arpl
inc
mov
fs
or
out
and
pop
mov
mov
xlat
xchg
sbb
stos
mov
bound
sbb
jle
lret
movsl
cmc
adc
sub
mov
dec
dec
mov
jl
ljmp
jno
clc
xchg
cmp
bound
incl
sub
clc
mov
sahf
lea
xchg
flds
test
mov
xor
popf
adc
sbb
addb
adc
push
scas
fsubrl
lea
pop
push
sub
jle
add
nop
push
punpcklbw
popa
push
xchg
adc
aam
lods
push
testb
push
xor
divl
clc
push
mov
and
idivl
daa
mov
sbb
shll
xchg
adc
adc
mov
or
mov
pop
push
dec
pop
int
or
mov
sbb
imul
fidivrs
xchg
sahf
sub
mov
adc
xor
inc
mov
pop
insb
mov
sahf
jae
cmpsl
outsb
ss
xor
dec
and
pop
mov
ja
mov
daa
insl
enter
cmpsl
mov
ds
ret
aaa
pop
pop
dec
pop
in
call
stos
in
adc
loope
lcall
push
mov
adc
inc
loop
sbb
outsb
push
cs
leave
push
clc
xor
loopne
je
fscale
icebp
push
lret
and
bound
sub
sub
aas
cli
xchg
mov
jp
and
fistpll
icebp
xchg
push
pop
mov
movsl
jns
insl
icebp
cmpsl
push
addb
or
mov
ja
jmp
pop
pop
insb
into
pusha
ss
jne
xor
push
out
sbb
mov
lret
out
add
stos
xor
cmp
mov
mov
outsl
fimull
dec
xor
les
ret
push
push
inc
add
sub
in
add
daa
push
mov
into
jecxz
dec
inc
mov
repz
cmp
test
sahf
cs
push
pop
jp
push
mov
jp
inc
fisubrl
mov
mov
scas
arpl
orl
add
ret
call
and
push
pusha
cmpsb
call
int
xlat
jne
into
xchg
sbb
mov
mov
int3
es
andb
mov
sbb
lret
push
es
rcrl
repz
mov
out
lret
pop
fldenv
pop
lock
push
popw
jb
ja
push
mov
xchg
sbb
jnp
setge
mov
stos
sti
fwait
hlt
fisubrs
pop
push
cmp
sub
pop
pusha
testl
push
test
adc
dec
pop
mov
popa
mov
call
enter
je
fistpll
jmp
or
jo
rorl
movsl
push
xor
stos
loop
sub
rorl
xor
hlt
bound
xor
shll
notl
js
push
mov
lret
jne
loopne
jmp
cmp
dec
shrl
rol
and
jno
jl
or
leave
cmp
loope
xchg
dec
xchg
jno
push
push
mov
fdivl
pop
stos
pop
aam
push
aas
pusha
iret
pop
pop
repnz
cmp
gs
pushf
test
add
pop
repnz
repz
and
out
push
sbb
mov
sbb
fbstp
mov
xchg
jp
in
ja
pop
hlt
cmpsb
push
out
and
jp
lret
rcll
insl
add
xchg
pop
sub
loop
in
das
in
or
aaa
add
imul
mov
ret
sbb
and
jbe
cmp
xchg
inc
sbb
stc
test
movsl
mov
sbb
das
outsb
xchg
xlat
cmp
fwait
pop
sbb
xchg
xor
fsubrp
icebp
in
jmp
sti
imulb
jg
adc
xchg
rcll
sar
sub
mov
pop
lock
sub
push
rcl
pop
loopne
jnp
jecxz
out
pop
repnz
add
sbb
fcmovu
jns
nop
push
xchg
add
push
inc
cmp
mov
outsl
decl
pusha
scas
rclb
call
jp
mov
cld
add
push
jb
ja
shlb
and
pop
fsts
mov
insl
xchg
rep
out
fnstenv
shrl
mov
data16
lret
inc
repnz
mov
loopne
aam
and
jp
shlb
cmp
mov
sti
rolb
adc
out
jmp
xchg
fnsave
das
mov
stos
jl
in
fildll
mov
or
iret
inc
add
iret
mov
out
or
push
push
mov
imul
push
xor
test
inc
dec
mov
jbe
adc
cmp
sbb
outsl
sbb
mov
add
mov
pop
adc
pop
cmpsb
and
ds
scas
call
dec
inc
dec
subb
sbb
rclb
dec
and
lret
mov
push
push
in
stos
adc
cmpsl
xor
scas
xor
and
mov
cs
push
loopne
mov
mov
mov
dec
subb
jp
int
push
lods
jg
fxch
rol
arpl
or
pop
icebp
scas
cmpsb
jae
insb
mov
lret
push
mov
or
ret
inc
arpl
sahf
test
jg
mov
pop
jecxz
lret
cwtl
loopne
sub
shll
pop
push
inc
and
mov
mov
pop
push
shrb
sbbl
xchg
jns
push
jno
cld
pop
xor
xchg
add
push
push
data16
mov
and
jl
push
cltd
mov
mov
rol
ret
inc
push
add
mov
hlt
pushw
leave
mov
clc
mov
mov
mov
movsb
push
popf
mov
jmp
mov
and
sbb
pop
adc
adcb
inc
pop
jecxz
mov
dec
push
push
sbb
sarl
not
iret
push
pop
adc
mov
nop
shrl
dec
insl
jp
lods
movsl
mov
mov
or
inc
pop
sbb
movsl
icebp
cmc
dec
mov
fiaddl
and
mov
lret
int
sti
fwait
in
jl
outsb
insb
dec
jmp
mull
shrl
and
mov
insb
test
mov
aaa
cmc
gs
and
dec
ficoms
pop
cmp
push
and
sti
sub
cld
je
xor
xchg
arpl
inc
push
outsb
test
sbb
add
cwtl
testb
int
lcall
pop
rorl
fwait
pop
jo
mov
mov
mov
stos
aam
push
lds
mov
mov
loope
mov
das
inc
stos
add
fiadds
sub
sbb
pop
add
rorb
sti
or
xchg
mov
insb
inc
jnp
repnz
aas
xchg
mov
mov
mov
xchg
sbb
into
decl
jecxz
out
mov
mov
es
mov
sub
inc
inc
xor
push
mov
mov
push
push
mov
mulb
jg
arpl
mov
mov
cmp
jo
repnz
add
mov
adcl
jp
sub
stos
int3
movsb
movsl
sbb
imul
pop
arpl
add
aam
pusha
popf
cs
pop
shl
loope
jnp
inc
dec
xchg
outsb
mov
data16
aaa
popf
jl
xor
sub
jo
or
fcomi
mov
imul
mov
sbb
or
mov
mov
mov
mov
ljmp
jns
lcall
jb
sbb
je
push
adcb
mov
pop
mov
out
fwait
outsb
xchg
adc
dec
add
shll
es
push
or
aaa
cmpsl
stos
lods
test
mov
pop
xor
mov
push
mov
xchg
cmp
scas
xorb
pop
fs
adc
ss
dec
xchg
cmpsb
adc
add
add
jl
ret
xchg
add
iret
jmp
pushf
jns
jl
mov
mov
xlat
outsl
and
push
mov
aad
mov
lds
mov
push
out
test
mov
sub
clc
movsl
xor
mov
lcall
xor
repnz
xor
jno
addr16
fcoml
clc
adc
jle
add
pop
movsl
sbb
das
mov
aad
out
xchg
cs
ljmp
sbbb
xchg
mov
xor
xchg
sahf
movsb
or
pushl
push
cmp
or
push
mov
mov
lds
or
shl
rclb
cmp
ja
fidivs
shlb
mov
subl
addr16
mov
fstps
js
mov
xor
cmp
sbb
jge
in
xor
cmp
jecxz
mov
cltd
mov
shrb
int
or
pop
lds
test
xor
ja
pop
arpl
cmp
push
xor
sub
icebp
xor
into
in
pop
lock
lods
push
fcmovnbe
inc
int
inc
pop
adc
rorb
cmpsb
ja
jg
out
imul
pop
pushf
pop
add
lret
sub
mov
stos
and
aam
loop
pop
rclb
out
xchg
pop
fcomip
cmp
dec
lods
dec
push
out
loop
sub
movsl
out
xchg
fisttpl
cmp
lahf
testl
push
std
adc
mov
jbe
bound
test
cmp
popf
jbe
sub
in
imul
and
cld
test
push
lock
mov
dec
xchg
add
loope
outsb
jl
mov
mov
dec
mov
push
dec
fbld
sbb
mov
bound
lds
stos
xchg
scas
dec
mov
sub
add
ds
xchg
das
int3
fcomps
in
das
stos
lds
dec
dec
add
cmpsb
icebp
out
xchg
jb
jmp
add
jb
sarl
xor
fildll
xchg
pushf
stos
inc
pushf
mov
mov
push
xor
arpl
ss
xor
add
shrl
mov
adc
inc
adc
sar
mov
out
movsb
sub
jl
cmpb
inc
fmuls
mov
mov
mov
or
push
addr16
inc
faddl
test
rep
inc
and
ror
xchg
repz
xor
ds
int
hlt
mov
dec
push
out
jge
xchg
sbb
sbb
inc
or
orb
jge
movl
pushf
xor
fs
sti
push
adc
pop
lds
test
dec
ficompl
mov
mov
jb
pop
or
cmp
inc
int
fisubl
or
sub
push
sub
mov
fidivrs
push
sti
mov
xchg
sub
fwait
sti
es
int
clc
adc
cmp
mov
rcr
ljmp
xor
dec
sahf
popf
cltd
add
xor
mov
inc
pusha
les
shrl
mov
lods
cmp
hlt
inc
out
repnz
rcll
dec
loopne
xlat
rol
iret
data16
mov
scas
imul
push
mov
jg
mov
jno
mov
and
mov
inc
fcoml
mov
enter
out
je
pushf
xor
jae
or
jbe
adc
pop
stc
stos
inc
in
add
pop
repnz
lods
xchg
sub
jg
test
inc
mov
aad
cmpsb
jecxz
jae
jg
inc
js
aaa
mov
lret
stc
les
dec
cwtl
das
cmp
test
jle
aas
outsb
dec
shrb
test
stos
sbb
and
stos
subb
xchg
lcall
iret
repnz
mov
mov
jp
shrl
and
xorl
xor
xchg
movsb
es
das
xchg
jge
pushf
jo
iret
or
lahf
push
sbb
push
ja
nop
daa
adc
out
test
add
jae
or
push
stos
popa
clc
sbb
cmpsb
cmp
andl
daa
xor
adcl
mov
mull
inc
das
jp
nop
add
rorl
sub
jg
mov
xchg
or
subb
fiadds
fisubl
push
dec
test
nop
adc
out
cld
cmp
cwtl
out
pusha
ret
jmp
rorb
cld
fiadds
xchg
call
dec
adc
pop
fs
xchg
in
inc
ja
or
jne
and
cld
push
jle
lahf
jbe
and
jo
es
fucom
scas
gs
pop
pop
mov
fcompl
insb
pop
push
mov
sub
test
mov
push
sub
out
mov
divb
rcr
jno
mov
xorl
sub
jno
or
es
aaa
aas
cmp
ds
jne
mov
test
mov
pop
xchg
bound
sub
les
into
mov
sbb
jecxz
inc
xor
test
notb
pop
sbb
ffree
xchg
mov
add
mov
sahf
daa
ss
test
jl
push
jle
inc
sub
repz
and
mov
fdivp
xor
loopne
xchg
xor
xchg
or
notl
sub
sbb
stc
xor
mov
fidivrs
sti
popf
out
sbb
xchg
out
aaa
xchg
jmp
ficomps
int
insl
add
push
xchg
das
fiaddl
cmp
pop
dec
out
aas
je
scas
jne
jb
jae
mov
outsb
jle
stos
xorl
lret
push
lcall
mov
xor
scas
mov
lret
lock
mov
push
xchg
or
rcl
mov
pop
ret
rcll
push
loopne
pop
mov
mov
pop
push
out
mov
nop
imul
std
popa
inc
fnstenv
adc
dec
pop
sub
daa
and
push
pop
icebp
inc
mov
add
mov
sbbl
xorb
dec
ja
jb
test
push
movsb
mov
xor
add
fmuls
repz
push
das
jp
and
mov
andl
or
xchg
lret
aaa
mov
stc
push
adc
inc
sbb
sub
mov
ret
xchg
iret
push
hlt
gs
pop
repz
xor
xchg
daa
or
aas
or
shl
add
cmp
arpl
xchg
adc
cmc
nopl
cmp
xor
pop
lods
into
inc
das
daa
fisubrl
mov
sub
xchg
mov
les
xchg
js
pusha
gs
mov
or
imul
or
mov
les
mov
lea
and
sarl
cld
mov
xor
outsl
mov
roll
jo
mov
aas
mov
ret
scas
mov
ljmp
out
jno
xsave
scas
sub
jle
sub
add
cmp
aad
lret
push
sar
mov
sbb
adc
xchg
pop
cmp
adc
loopne
xchg
mov
repz
xchg
or
scas
js
cmp
mov
enter
or
data16
xchg
mov
ret
dec
out
xlat
xor
test
xchg
arpl
out
imul
rcr
int3
adc
sub
sahf
xor
popf
je
cmpsb
adcl
mov
mov
pop
cltd
test
pop
dec
push
gs
int3
scas
lea
sbb
loop
xor
into
push
cmp
cld
mov
lock
xchg
test
add
push
lcall
lods
mov
jne
test
adc
fwait
push
or
mov
scas
or
test
and
lods
jb
sbb
pop
into
cltd
xorb
scas
test
into
pop
inc
in
daa
data16
pusha
dec
cmp
arpl
out
pushf
dec
push
dec
aas
clc
push
out
cmpsl
add
and
sbb
push
xor
xchg
out
out
mov
sub
or
sub
sbb
fnstcw
imul
popa
lock
adc
or
fwait
adc
push
imul
bound
aad
aad
mov
leave
pop
mov
iret
and
add
cmp
mov
xchg
cmp
ss
pusha
daa
test
in
add
mov
cli
or
xchg
sub
mov
mov
push
stc
sbb
xor
jb
dec
inc
sahf
shll
mov
cld
push
xchg
stc
push
loop
xor
repz
mov
push
push
mov
jne
sahf
lods
cmpsl
and
aaa
or
cmc
sbb
notb
mov
clc
xchg
jmp
dec
push
loopne
movsb
xchg
push
aas
movl
adc
mov
xchg
rcr
mov
xchg
add
inc
sti
in
mov
mov
rcpps
jge
addr16
lock
mov
xchg
rcrb
loopne
dec
cmc
test
dec
cmp
adc
sar
iret
mov
pop
subl
dec
lret
inc
sbb
jbe
lock
fldt
or
mov
bound
cld
mov
sbb
sub
loop
push
inc
push
xchg
xchg
rol
cltd
mov
jbe
cs
fstps
stc
test
popf
sbb
xchg
inc
adc
jne
lcall
aam
test
cmc
mov
sub
and
mov
aad
and
pushf
fiaddl
xchg
pop
dec
pop
mov
pop
imul
mov
divb
xchg
dec
into
and
sub
push
test
cmp
cltd
std
xor
push
cmp
incb
sbb
popa
dec
jle
jnp
mov
fists
icebp
mov
xor
dec
addl
test
add
jne
aad
pop
ds
test
fnsave
mov
xorl
and
fildl
jno
fisubl
pop
sahf
pop
std
xchg
push
lods
xchg
push
add
add
add
neg
add
adc
pop
xor
pop
sarl
push
int
lds
pop
std
fistpl
ss
xchg
mov
sahf
add
or
mov
mov
cmp
roll
popf
stos
je
sbb
sbb
dec
pop
pusha
add
add
jne
cmc
push
aad
dec
popf
sbb
xor
xchg
mov
push
movsl
cwtl
ss
jb
jns
jo
shrl
push
dec
pop
push
or
push
lret
cmpsb
xchg
scas
mov
lock
push
xchg
xchg
inc
pop
or
jmp
or
push
inc
fwait
mov
icebp
push
xor
aad
in
adc
push
pop
insl
inc
push
out
dec
mov
and
mov
dec
pop
cli
push
rcl
mov
push
es
mov
fcoml
sub
hlt
pop
xor
xchg
and
ret
stos
icebp
xor
lret
lret
addr16
or
outsb
sub
or
out
xor
lods
pushf
xor
iret
mov
push
movsl
and
jo
jne
loopne
dec
testl
push
pop
jp
push
xor
test
aaa
pop
cmp
sbb
mov
push
xor
xchg
sub
jge
dec
mov
xor
sarl
addb
mov
addb
ljmp
call
sti
std
and
or
cmp
mov
pop
or
sarl
inc
test
arpl
and
hlt
negb
test
pop
mov
cwtl
dec
inc
lret
inc
sub
aaa
movsb
mov
or
fdivrs
int
cmpsb
rcr
lock
xor
stos
pop
stos
dec
movsl
pop
inc
xor
addr16
in
sub
mov
shl
push
in
cmp
insb
cmpb
pop
or
mov
xchg
mov
stc
cmp
push
adc
popf
push
mov
or
push
sahf
cmpsl
xchg
int3
xor
mov
cli
inc
mov
mov
cmc
add
dec
dec
jp
outsb
push
mov
xor
addr16
jmp
jnp
es
mov
push
sbb
aad
jg
or
in
push
in
or
xchg
rcl
es
shrl
mov
shll
mov
add
sarl
lods
inc
mov
fidivl
popa
mov
inc
loope
push
call
aam
pop
add
cmpsl
out
jge
or
fcompl
popf
popa
pop
addr16
and
mov
or
sbb
les
into
addr16
pop
or
mov
andl
pop
jmp
dec
add
xor
dec
scas
cmp
out
jne
sarl
sahf
subl
inc
adc
adc
push
lods
sub
mov
ds
sbb
or
js
push
lock
idivl
inc
sbb
lods
les
sub
arpl
adc
add
imul
mov
jno
xchg
daa
mov
sbb
std
add
xor
push
and
jb
pusha
sbb
sbb
loope
fst
sbb
xor
sbb
adcl
ja
subb
xchg
mov
add
dec
xchg
gs
in
cltd
icebp
enter
cmp
in
xor
adc
and
or
sub
add
addr16
pop
fwait
bound
ret
sahf
dec
call
mov
lods
outsb
imull
hlt
or
scas
push
insl
stos
mov
daa
mov
pop
iret
inc
pop
fnsave
movsb
int
sti
and
fildl
mov
sbb
inc
fidivrl
sbb
scas
test
out
pop
movsl
in
mov
pop
ret
fs
mov
jns
mov
aaa
lret
ds
jmp
pop
dec
add
cmc
mov
mov
aaa
jnp
inc
dec
or
lea
cld
jae
repnz
clc
cltd
ret
cmc
icebp
add
call
ljmp
sub
fcompl
push
xchg
jge
inc
xorl
cmpsb
push
popa
mov
fscale
sub
scas
div
dec
mov
imul
xor
scas
outsb
cmpsl
xchg
fmull
sub
mov
mov
outsl
pop
popf
xor
mov
insl
or
mov
xchg
clc
nop
push
js
fldcw
inc
cwtl
push
pop
jns
mov
add
mov
dec
mulb
scas
scas
push
mov
dec
pop
xchg
mov
push
jb
or
sahf
pop
xor
mov
inc
add
push
testl
cmpsb
notb
sub
sarb
fistps
stos
push
lahf
pop
xor
sbb
xor
scas
das
mov
ret
xor
push
cs
cmp
idivl
inc
push
mov
cmpsb
sbb
xor
pop
mov
jbe
and
add
fwait
popa
xlat
outsb
xchg
mov
or
xchg
mov
or
setl
mov
mov
cmc
mov
stos
adc
or
popf
les
add
fsubl
fimull
or
jl
test
sbb
shrl
push
jae
cmpl
rcll
je
sbb
xchg
test
fidivrl
mov
popw
dec
test
mov
sub
divl
scas
aaa
sub
arpl
adc
insb
fsubrl
sahf
in
xchg
xchg
or
or
inc
cld
fstl
hlt
jp
int
cmp
xlat
insb
ja
shlb
test
mov
pop
imul
or
and
dec
mov
ja
mov
dec
aas
inc
insl
bound
sbb
pushf
push
xor
sarb
mov
inc
jl
dec
shll
inc
stc
mov
cmp
add
je
mov
daa
sahf
imul
cltd
sbb
movsb
lcall
mulb
pop
xor
add
jmp
or
mov
mov
jmp
sbb
sbb
cltd
movsb
bnd
popa
sbb
or
out
jl
xor
sahf
or
xchg
sbb
aas
cmp
add
mov
scas
jp
fadds
cmp
mov
pop
out
in
mov
inc
xor
mov
call
push
xchg
dec
cmp
push
cwtl
push
cmp
sbb
pop
push
mov
lock
hlt
inc
sbb
mov
ret
jns
nop
sub
aad
test
scas
xchg
mov
lret
aas
fildll
adc
xchg
test
cmp
ret
and
rorb
adc
test
sub
mov
or
xchg
xlat
stos
in
or
or
sbb
sbbb
into
xor
mov
jp
add
jmp
or
into
es
mov
mov
test
sarl
push
movsb
loope
push
add
mov
testl
dec
and
push
pop
pop
push
jb
popf
mov
mov
testl
out
int3
loopne
pop
push
insl
cmpsb
dec
jnp
fcompl
push
push
stc
fdivs
push
scas
push
in
mov
insb
scas
mov
push
sahf
xorl
pop
sbb
mov
add
lret
and
arpl
rcrl
push
iret
sbb
rcr
sbb
pop
mov
iret
mov
inc
add
inc
push
mov
add
adc
jo
add
mov
or
icebp
loopne
xchg
mov
inc
nop
dec
data16
pop
rcll
repnz
sbb
lretw
push
lods
in
cmp
dec
jnp
or
push
inc
sub
xchg
jno
jle
inc
sbb
rcl
es
cwtl
jne
push
xchg
mov
clc
mov
out
mov
rorl
insb
jle
push
adc
inc
xchg
mov
leave
fsubl
sbb
icebp
mov
xchg
jne,pt
pusha
paddsw
cmpsb
les
cli
adc
aaa
lret
aas
loop
rorl
pop
or
dec
jnp
push
pushf
xor
loopne
and
push
lock
sub
lock
in
pop
dec
ja
loop
fnsave
and
addb
aaa
jb
or
cmc
ss
push
mov
push
or
adc
sti
iret
lahf
mov
stc
shlb
icebp
das
les
add
add
push
adc
adc
inc
sub
pop
inc
pop
add
inc
and
iret
mov
sub
sub
fucom
add
repnz
ljmp
push
sahf
pop
loopne
jge
insb
call
sbb
sub
imul
xchg
xchg
daa
adc
mov
cmc
pushf
arpl
sub
scas
jmp
outsb
add
mov
mov
divl
push
pop
inc
test
pop
fs
xchg
aas
subb
mov
lock
js
js
scas
arpl
std
mov
addr16
add
into
sub
std
inc
ss
ss
cltd
sub
fstl
and
lret
push
popa
cmp
mov
sbb
push
cmc
pop
loopne
std
pusha
mov
jbe
jb
clc
sahf
xchg
sub
sub
jmp
adc
cld
xchg
imul
inc
push
aam
rclb
cmp
adc
push
out
pop
loopne
paddd
aaa
bound
and
cmpsb
jne
jle
enter
sub
add
stc
jb
mov
clc
popf
xor
and
push
lcall
pop
in
xchg
push
es
nop
fbstp
ljmp
jb
inc
shlb
add
ret
jnp
das
leave
mov
xor
out
or
cmp
push
adc
repnz
mov
ret
shr
pusha
jl
mov
insb
xlat
jne
rclb
int
mov
fimull
je
fsubrs
inc
cld
push
add
jg
shl
push
hlt
movsl
mov
pop
dec
fistps
dec
push
lcall
push
imul
inc
xor
xor
mov
ss
and
lods
fcompl
jo
les
mov
push
cmpsl
sbb
dec
jecxz
cmp
sub
pop
lods
xchg
int
stos
dec
or
xchg
jno
adc
xchg
aad
shl
subl
imul
movsb
cmp
imul
mov
je
aas
xchg
mov
nop
stos
pop
xchg
cmp
insl
repz
fmul
icebp
adc
std
pop
add
mov
jnp
cmp
adc
xchg
jb
push
mov
ds
mov
lods
pop
mov
add
jns
push
add
push
sub
inc
pop
lds
sbb
adc
push
jge
add
xchg
jge
lret
imul
cmpb
in
subb
fdivrs
pop
pop
aaa
fld1
shrl
sub
stos
or
scas
or
movsb
mov
nop
stos
movsb
and
xchg
mov
lock
adc
mov
jp
xor
cmc
mov
cmp
je
adc
dec
not
mov
add
or
mov
jbe
inc
outsb
rcrl
insb
jl
adc
mov
mov
dec
ds
add
xchg
mov
push
scas
xchg
fs
jno
movsl
adc
inc
ss
dec
xchg
xor
push
jmp
pushf
mov
mov
and
inc
int3
mov
sbb
leave
xor
cmp
sub
lcall
mov
jns
stos
les
shl
sbb
fnstenv
movsb
or
mov
shlb
sub
inc
shr
sub
into
pop
sbb
ret
dec
mov
addb
pop
dec
out
dec
inc
mov
push
je
xor
sti
ljmp
jae
jae
movsb
lea
lds
call
lock
addr16
repz
push
cltd
cmpsb
fs
xor
inc
lods
popf
and
push
js
xlat
mov
or
sbb
mov
xchg
jl
and
xchg
repnz
push
ds
data16
sbb
push
mov
imul
and
and
sbb
clc
jb
filds
add
jb
daa
xor
inc
sti
xchg
aaa
dec
cmpsl
ret
mov
mov
lcall
inc
pop
jle
jle
sbb
inc
insl
mov
sahf
and
repz
cmp
cwtl
jno
je
or
pop
add
mov
adc
shlb
and
push
scas
ljmp
out
call
aam
aas
push
mov
cmp
and
pop
cmp
xchg
dec
mov
outsl
mov
mov
js
and
cmp
lods
ljmp
inc
jmp
idivl
jmp
cmc
in
mov
in
add
popa
dec
repnz
lods
aam
pop
cld
pop
add
std
outsl
jge
xchg
dec
movsb
dec
inc
mov
lock
bound
adc
std
xchg
mov
fistl
pop
out
cltd
push
enter
adc
sbb
ss
add
fdivs
or
fnstcw
sub
loope
sub
dec
imul
inc
add
cmc
cmpb
or
and
dec
jns
mov
add
dec
sbb
push
dec
dec
mov
xchg
mov
int
ds
iret
data16
mov
das
pushf
scas
cmp
mov
fnstcw
cmp
das
cmp
jp
rcrb
cld
mov
cmc
add
scas
nop
and
mov
sbb
incl
in
out
jb
fistpl
xor
mov
adc
loopne
jne
adc
mov
popf
mov
jle
fnstsw
adc
cld
mov
xor
mov
into
jle
add
fidivrl
in
jnp
jg
lahf
lods
addl
push
dec
dec
cli
pusha
mov
push
sub
sbb
mov
insl
cmp
movsb
cmp
sahf
adcb
push
lods
imul
pop
pusha
mov
mov
mov
mov
in
fldl
xchg
or
lea
mov
jge
fisttpl
mov
inc
loop
lahf
daa
outsl
rorl
sahf
sub
mov
mov
cmp
push
sub
fwait
add
cmc
mov
add
in
enter
jb
pop
mov
mov
cmpl
loopne
dec
sub
jne
inc
pop
xchg
leave
popa
cmp
xor
nop
test
iret
insb
icebp
jne
push
js
arpl
test
xchg
sbb
mov
in
and
inc
arpl
dec
movsl
xor
inc
sub
subb
adc
cld
or
punpckldq
ds
cwtl
scas
imul
out
xchg
aas
mov
inc
push
icebp
sbb
jnp
imulb
push
and
enter
sub
js
pop
jo
lods
xor
push
loopne
mov
pop
sbb
fisubs
jecxz
das
mov
cmpsb
mov
in
adc
aaa
addb
xchg
xchg
bound
mov
push
sub
pop
xor
icebp
adc
jnp
lock
pop
mov
aaa
mov
in
jne
adc
push
test
adc
scas
jg
subb
or
mov
sbb
je
test
mov
std
insb
sub
into
test
aaa
scas
or
add
incb
add
sub
bound
int
mov
fnstenv
xlat
dec
add
int
into
jno
xchg
pop
xor
adcb
inc
mov
fadd
cmpsl
mov
in
leave
das
out
cmp
shll
lods
xchg
adc
add
push
cld
adc
mov
hlt
fs
notl
cmp
add
add
adc
fsubrp
jno
aas
shlb
cwtl
addr16
xchg
xor
pop
push
jae
addl
test
sub
jae
repnz
into
pop
add
stc
jg
cwtl
xor
dec
mov
xorl
mov
fldcw
mov
test
xor
xor
xchg
jo
inc
rorb
lcall
mov
inc
push
enter
adc
lods
dec
pop
int3
arpl
jb
les
mov
test
fisttpll
cs
enter
data16
jg
mov
xchg
int
inc
sub
sti
sbb
push
xchg
int3
xor
jns
js
pop
inc
ja
pop
or
into
mov
outsb
sub
sbb
divb
dec
out
shr
sub
cs
lea
out
pop
sbb
xchg
imul
subl
mov
xchg
in
cmp
pop
mov
xchg
test
scas
scas
and
fdivl
xor
xchg
cli
test
scas
mov
mov
cli
fldcw
fwait
dec
in
xlat
lret
cld
mov
fidivrl
arpl
insb
adc
push
mov
icebp
fldcw
packssdw
dec
dec
or
adc
in
sbb
or
mov
lock
jmp
int
push
dec
dec
add
addr16
cmpsl
mov
sti
pusha
sub
inc
lret
mull
movsb
xchg
mov
inc
push
xchg
add
jb
mov
add
or
xor
pop
jecxz
push
mov
ja
mov
insb
sbb
test
xlat
insl
inc
fwait
lods
mov
and
push
out
push
and
push
sbb
xchg
cwtl
lods
icebp
xchg
and
lods
cs
daa
popf
cwtl
lret
out
outsb
sub
cwtl
in
test
cmp
mov
mov
push
inc
sub
xor
xchg
icebp
loop
stos
jecxz
nop
dec
jo
addr16
inc
cli
push
gs
lods
sbb
jge
cmc
inc
fidivl
adc
mov
hlt
jo
mov
fdivrs
std
mov
jmp
std
jmp
or
add
cmc
dec
fidivs
fstpt
mov
out
inc
dec
mov
dec
loope
mov
sub
xor
xchg
roll
xor
xor
cmpsb
mov
bound
decb
push
inc
shlb
adc
cmp
imul
lods
or
sbb
adc
fnsave
push
jl
test
sarl
sbb
dec
movsb
and
test
test
fwait
bound
test
push
adc
sbbl
out
and
fstl
rcl
xchg
mov
sbb
stos
add
jmp
das
add
cld
push
ret
xchg
bound
sbb
cltd
xchg
psubusb
sbb
int3
fdivl
mov
or
stos
mov
fisttpll
stos
jbe
dec
loope
stc
mul
dec
ror
ds
addr16
pop
aam
lret
scas
xchg
cli
sbb
pop
dec
decb
sub
pop
insb
imul
ljmp
stos
dec
and
sti
leave
mov
xchg
loopne
sub
stos
fwait
inc
popf
popa
jb
jne
cli
movsb
jno
shlb
push
or
fidivs
dec
mov
cmp
scas
subb
popa
mov
stc
cmc
pop
scas
loop
mov
jbe
xchg
cmp
mov
adc
xchg
movb
js
sbb
fmuls
popa
mov
mov
sbb
or
cwtl
jno
leave
adc
cld
xor
inc
stos
inc
fmull
mov
xchg
cmpl
or
sbb
testw
push
cmp
push
and
push
fs
sbb
rolb
push
ljmp
divb
das
jl
testb
nop
pusha
add
sti
idivl
sub
push
icebp
or
cs
leave
xlat
in
hlt
icebp
les
popf
psignw
cltd
or
sbb
loop
cmpsb
iret
loope
xor
lock
mov
ror
je
jns
mov
xchg
pop
fdivs
in
xor
xchg
cmp
xlat
or
cwtl
repnz
out
loop
das
in
outsb
jl
aam
add
cmp
in
inc
popa
fnstenv
jo
movsw
insl
negl
pop
mov
inc
dec
dec
or
adc
aaa
into
sbb
pusha
inc
in
ss
jne
or
inc
and
in
test
xor
data16
repz
ret
xchg
mov
jbe
add
pop
int3
sub
std
cmp
enter
inc
dec
test
pushf
xor
mov
mov
mov
scas
cli
push
fsub
jae
xchg
aas
ret
enter
ss
or
ljmp
push
stc
shlb
ljmp
test
lret
jno
dec
loopne
xchg
push
cmp
popa
sbb
fs
outsb
pop
mov
add
xchg
in
mov
add
out
mov
cmpsl
fs
adc
mov
mov
hlt
mov
pop
scas
mov
into
das
rcll
sub
rorl
mov
pop
jns
mov
jae
jne
mov
sbb
mov
scas
xchg
mov
fildl
xor
push
mov
scas
sub
cld
xchg
push
fldcw
pmulhw
into
or
fldt
rorb
loope
pop
xchg
jg
or
cmc
mov
push
or
addr16
dec
pop
push
pop
adc
movsl
fwait
push
push
popf
or
sub
cltd
pusha
xchg
xchg
or
popf
jge
jle
or
pop
mov
push
mov
fucom
in
adc
iret
push
mov
cmp
jns
ret
ret
movsl
clc
pop
lods
pop
scas
lods
in
cmpsl
sbb
pop
jo
sbb
or
jmp
sbb
cs
and
lds
cmp
hlt
xchg
adc
out
inc
push
or
and
mov
sbb
add
cld
scas
pushf
cli
int3
cmp
out
lret
jge
pop
aas
push
es
pusha
into
sub
ja
imul
ljmp
pusha
mull
sbb
enter
cltd
xchg
inc
inc
inc
test
xchg
lcall
or
jl
xor
adc
test
popf
pop
pushf
aad
sti
push
out
aas
dec
sub
xchg
sub
rcrl
sbbl
lret
xlat
shlb
mov
jae
mov
outsl
test
dec
loop
addr16
leave
dec
fwait
ss
or
push
jl
lds
mov
pushl
xor
fwait
push
mov
push
pop
cwtl
ret
pop
and
mov
je
dec
scas
out
popa
mov
mov
shrl
jmp
and
fadds
sub
std
xchg
dec
pop
stos
iret
sub
or
inc
fsubrs
mov
das
add
sub
das
xor
mov
stos
push
jmp
out
mov
sbb
jns
sub
pop
mov
mov
pop
xor
jns
add
mulb
sub
inc
fcomi
arpl
inc
cli
and
shl
cmpsl
fwait
sub
sub
xchg
add
mov
pop
gs
scas
sbbb
mov
fisttps
stos
pop
addr16
out
xchg
jg
ljmp
ljmp
lea
test
imul
xchg
mov
dec
fisubl
call
mov
inc
pop
jg,pt
aad
jmp
mov
cld
add
xor
std
jecxz
cmp
shll
test
xor
notl
sbb
mov
pop
idivb
call
pop
or
das
pop
loope
lods
sti
mov
jmp
adc
sub
mov
filds
bound
and
sti
fwait
push
stos
pop
dec
pop
inc
sbb
lret
mov
enter
or
cs
and
xor
aaa
divl
dec
sub
cmp
push
mov
int
out
or
mov
adc
movsb
push
sub
xor
mov
ret
outsb
add
mov
xorb
jbe
daa
inc
mov
mov
insl
mov
ret
loopne
daa
les
mov
jbe
xchg
cs
push
insl
ret
das
arpl
or
shrl
test
icebp
mov
das
lds
movaps
dec
jecxz
mov
dec
xor
push
mov
push
inc
fstps
adc
pop
mov
xchg
jl
pop
fiaddl
mov
rol
cmp
xor
loopne
inc
push
sti
adc
mov
dec
idiv
sub
rcr
pop
imul
out
jne
sub
jge
movsb
into
push
fdivs
divl
shr
inc
push
add
mov
sub
push
stc
aas
inc
xor
shlb
in
testb
jl
xor
and
ror
shl
xchg
fldz
push
out
xchg
mov
pop
pop
out
xor
loop
pop
dec
mov
imull
enter
add
fld
sub
cmc
cli
test
mov
jge
test
or
scas
pop
mov
inc
or
fcomps
mov
push
imul
pop
out
xchg
cli
stc
sub
clc
scas
gs
lds
sete
inc
jge
adc
fs
and
stos
fmuls
shr
movsb
add
dec
in
test
hlt
jnp
scas
mov
sub
lods
outsl
mov
jnp
mov
test
pop
sub
into
sub
inc
jae
push
mov
lret
xchg
rol
push
jae
cmpsl
dec
mov
adc
xor
call
mov
dec
jns
in
jecxz
shrb
lods
or
jge
sbbl
jg
leave
je
mov
xchg
and
add
or
lcall
sbb
mov
push
orl
push
mov
add
adcb
out
icebp
push
adc
paddd
scas
dec
sti
sbb
jo
cmpb
fistl
pop
nop
insb
pop
jg
mov
adcl
xchg
pushf
out
xor
nop
add
pop
jge
pusha
cs
jns
sarb
jmp
inc
push
lcall
ret
cmp
gs
les
popa
or
inc
xchg
push
in
fstpt
pushf
xor
lea
mov
cmp
das
nop
push
jo
push
test
dec
test
push
cmpsb
aam
adc
jnp
fisttpll
and
jb
dec
sub
or
ret
pop
cmc
mov
out
or
or
push
lea
fwait
adc
fsub
jae
adc
and
mov
jb
stc
and
into
ljmp
out
dec
loop
clc
mov
cmpsl
cltd
imul
rcr
test
insl
sbb
mov
push
in
das
jmp
mov
sbb
jns
mov
lret
in
pop
imul
mov
das
xchg
mov
jp
sbb
inc
mov
push
mov
sbb
dec
jge
mov
sbb
shll
adc
and
icebp
adc
and
outsb
pop
jge
lock
cmc
adc
lods
and
bound
push
mov
shrb
sbb
arpl
xchg
lret
mov
shr
xchg
mov
ret
rcll
inc
mov
sbb
push
arpl
pop
lahf
sbb
ret
mov
cmp
cmc
xlat
cmp
aas
loopne
cmc
fbstp
lock
add
mov
jae
icebp
movsl
sti
and
clc
aad
loop
leave
bound
sub
cmp
jae
jns
dec
pop
cmp
and
imul
in
add
jb
movaps
inc
ficompl
xchg
das
jg
jbe
push
les
cltd
test
outsb
or
or
pop
hlt
mov
jnp
pop
push
jno
das
sub
mov
divl
adc
fisubl
repnz
mov
mov
mov
lret
loopne
push
adc
sub
rclb
dec
dec
popl
int3
push
adc
data16
sbb
and
lods
jno
sbbl
xchg
imul
andl
and
mov
cmp
xlat
pop
movsl
pop
jle
filds
and
mov
jl
and
pop
adc
scas
mov
xchg
push
cmp
imul
jo
mov
mov
jge
push
mov
shrb
mov
dec
out
stos
adc
imul
pop
imul
mov
or
dec
loop
aad
aaa
inc
dec
push
cmpsb
xor
mov
ficomps
adc
pusha
adc
mov
push
lea
jo
jb
pop
aas
and
ljmp
add
push
mov
outsl
rcrl
cmp
popf
in
or
lock
mov
mov
or
cmp
sub
aas
pop
cmp
jnp
push
inc
push
inc
inc
ljmp
roll
jecxz
add
sub
dec
and
adc
and
dec
clc
jmp
movsb
int
stc
test
mov
pushf
xor
jb
jge
shrl
into
lret
jle
and
cltd
pop
dec
and
push
insl
sbb
add
mov
stos
inc
cmp
inc
cmc
xor
jnp
or
mov
or
enter
orb
push
xchg
sbb
sbb
jg
popf
mov
fisubrl
xor
jmp
dec
and
inc
iret
cmpb
clc
int
mov
jne
shrb
mov
or
sbb
in
icebp
movsl
inc
jmp
loope
loope
xor
les
aas
jnp
cmp
fwait
mov
or
loopne
iret
std
adc
nop
and
pop
sub
cmp
pop
adc
test
jne
jns
sub
mov
popa
cmp
xchg
mov
out
test
push
je
jb
movsb
cmp
lods
ret
lods
inc
add
mov
clc
or
cltd
gs
mov
sub
clc
mov
push
xchg
enter
shrl
dec
loopne
pop
rep
les
insb
call
sbb
xlat
insb
jle
fisubrs
sub
mov
popf
jno
pushf
xor
mov
add
movsl
loope
dec
cwtl
dec
mov
mov
push
push
push
push
cltd
mov
cwtl
cltd
inc
inc
mov
push
cmp
jle
pop
jg
shrl
add
push
repnz
pop
das
ljmp
fcoms
movsb
cmp
ja
fildll
pop
cwtl
das
dec
push
rol
add
dec
pop
cmp
mov
ja
daa
test
pop
test
outsl
arpl
rclb
aad
xor
leave
push
repz
inc
fisttpl
or
bound
cs
mov
xchg
lret
mov
jmp
jne
mov
pop
push
mov
mov
inc
fistpl
sub
inc
or
jle
movsl
into
test
xor
orb
mov
push
jg
sub
je
sbb
sti
xchg
psubsb
xchg
mov
dec
sbb
scas
push
inc
mov
inc
push
push
xor
add
jmp
cwtl
sbb
lret
xchg
sub
ret
inc
out
bound
add
ret
pop
subl
sbbb
lock
cli
lret
fcoms
adc
jae
adc
out
in
call
outsl
xchg
inc
cmovle
pop
add
cld
mov
out
pop
mov
cltd
sbb
xchg
sub
xor
shlb
jmp
xor
mov
mov
inc
fstpl
cmp
jp
mov
jp
insl
fldenv
adc
int3
ljmp
std
mov
les
test
movsb
jo
mov
test
cmp
int3
arpl
pop
icebp
mov
fisttps
cmpsb
adc
fists
rcr
jno
xor
aas
dec
shll
inc
test
dec
mov
push
and
jbe
xchg
stc
sub
shrl
sub
xor
jecxz
sti
mov
fnsave
addr16
movsl
dec
mov
push
mov
pusha
xchg
mov
cmc
sbb
or
push
sbb
sbb
test
mov
sbb
pop
test
inc
jecxz
jae
dec
in
or
cli
cli
aas
insb
adc
adcl
lcall
jnp
dec
and
xchg
dec
pop
sbb
pop
lods
mulb
xor
in
pop
and
xchg
mov
lcall
adc
fwait
pop
imull
sbb
ds
pusha
repz
into
push
sbb
aad
and
pop
cmp
cmp
and
pop
or
fs
cmp
mov
ret
ja
test
jecxz
or
and
ss
movsl
xor
adc
mov
push
icebp
and
add
cmpsb
imul
neg
pop
sub
push
push
xor
push
cmpsl
popa
out
sbb
pop
add
movsl
icebp
shlb
jb
or
data16
cmp
out
aas
ret
mov
inc
jmp
and
dec
shll
mov
aam
cs
shl
loope
pop
lds
cmp
ror
sbb
jmp
pop
out
cmp
test
cmp
fidivs
popa
cmp
dec
or
lock
imulb
pusha
imul
pop
cli
jo
cmp
pop
add
iret
xchg
xorl
xor
mov
fcmovb
pop
or
cmp
pop
shrb
xor
mov
shrb
or
loope
fs
insl
rcrb
adc
jmp
or
lret
incl
inc
mov
imulb
sbb
mov
loop
jge
xor
pushf
insb
add
xor
mov
ret
dec
sbb
xor
int3
sahf
mov
jle
and
mov
test
addr16
lret
mov
or
push
movsl
mov
mov
scas
fidivrs
iret
adc
shr
mov
push
in
bound
cmp
or
lcall
insl
add
movsb
push
push
mov
jmp
and
stc
adc
ret
sub
hlt
xor
loop
sub
stos
xor
lods
xchg
mov
xor
pushf
jo
int3
popf
stos
mov
pop
mov
jb
xor
mov
dec
scas
div
imul
cmpsb
aam
shlb
inc
mov
fcmove
xor
sbb
jle
sub
test
jle
scas
xchg
rolb
mov
push
jmp
sub
adc
hlt
cmp
fbstp
add
push
in
and
mov
icebp
call
adc
fdivl
std
js
scas
adc
loopne
hlt
lret
adc
mov
loopne
mov
aas
cli
jae
decl
mov
bound
aaa
int3
mov
stc
push
push
sbbb
jae
shrb
stos
push
mov
daa
popf
scas
add
or
leave
fldenv
cmp
sbb
and
dec
pop
xchg
jge
sbb
mov
cmp
popf
xor
and
inc
sbb
cmp
xor
pop
xor
notb
jp
je
out
rorb
enter
sbb
add
dec
add
cmp
push
mov
dec
shl
push
cmp
addl
clc
test
imul
inc
outsl
mov
push
mov
movsb
xorb
mov
das
inc
add
fsubr
push
xchg
or
xlat
pop
sub
sbb
dec
cmc
popf
cmpsb
cmp
push
loop
jo
push
pop
ret
into
aam
jbe
dec
dec
mov
fbld
mov
or
push
xchg
mov
pushf
leave
xor
cltd
insb
inc
sub
inc
add
mov
test
push
sbb
push
mov
push
or
ss
mov
loop
adc
cli
je
in
jne
mov
mov
shll
add
roll
or
popf
lea
sti
movsb
call
test
mov
int
inc
outsb
jecxz
push
hlt
shll
mov
shl
or
mov
adc
xchg
clc
xchg
jns
movsl
cmpsl
mov
sbb
loop
out
push
pushf
mov
or
push
ss
sbb
push
dec
mov
imul
mov
sbb
dec
outsl
divl
rol
das
add
in
mov
or
mov
pop
cwtl
push
popa
xor
lods
scas
mov
push
jg
xor
nop
cmp
lret
xchg
jecxz
aas
loop
ficomps
pop
or
cli
xchg
in
push
lods
lock
dec
adc
cmpsb
test
loop
mov
rclb
push
cmp
mov
jae
loope
cmpsb
rcll
xchg
dec
mov
xchg
xor
repnz
insb
pop
jns
jnp
jnp
mov
arpl
nop
fildll
mov
inc
pop
aas
xchg
int3
sbbl
sbb
fwait
and
adc
subl
jp
lret
mov
ljmp
pop
and
andl
out
or
jbe
es
js
push
and
push
cmp
dec
cmp
test
adc
mov
std
jle
les
mov
pop
xor
cmp
sbb
fcoml
sarb
mov
cs
mov
pop
push
pop
js
call
mov
add
sub
sub
mov
jo
add
ret
outsb
fldenv
add
mov
cmpsb
es
sub
daa
jnp
xchg
adc
cld
lods
les
repnz
nop
fnstcw
enter
dec
mov
mov
inc
out
movsl
mov
ja
rclb
adc
mov
cmp
jbe
into
and
pop
jge
cs
fcomps
loopne
nop
std
pop
imul
jmp
aaa
mov
repnz
dec
dec
pop
test
movsb
loope
aam
mov
jmp
push
scas
repnz
or
cltd
dec
in
add
lods
jmp
xchg
scas
and
adcb
adc
ljmp
ficompl
pop
add
fsubr
cmp
fnstcw
add
jnp
je
jo
adc
ljmp
push
or
push
jge
inc
sub
mov
scas
sbb
outsb
lret
loope
mov
in
mov
test
repz
sub
mov
adc
add
mov
int
sub
jmp
mov
cli
cmp
xor
cs
loopne
or
shlb
push
out
xor
pop
repnz
inc
sbb
rcll
push
das
adc
pushf
leave
jae
dec
jbe
decl
mov
mov
xor
xchg
pop
decl
xchg
test
sub
leave
fdivl
mov
sbbb
data16
jge
fisttpll
dec
fdivrs
lret
insb
andl
mov
xchg
add
pop
pop
pop
mov
sbb
add
mov
push
mov
in
repnz
ja
cld
into
aad
cmp
mov
cmp
mov
push
xor
mov
es
jp
inc
pop
enter
enter
mov
inc
fistps
and
es
es
hlt
decl
mov
or
test
clc
or
adc
rclb
xchg
mov
iret
out
jae
mov
je
add
je
xor
faddl
mov
mov
fs
cld
pop
jns
pop
shlb
mov
imul
sahf
ss
dec
add
int
mov
inc
push
xchg
out
add
loopne
clc
inc
sub
das
jmp
iret
lahf
jge
dec
or
pop
movlps
iret
jbe
fcomip
loope
testb
push
jnp
call
sub
repnz
pop
inc
sbb
cltd
and
mov
test
mov
scas
lds
adc
imul
sub
test
in
outsb
data16
mov
into
call
into
into
enter
subb
shrl
jmp
add
aaa
dec
mov
or
movsb
into
fs
outsl
lcall
mov
js
imul
stc
sub
inc
jno
mov
jl
lods
je
cli
pushf
andl
lods
xchg
jbe
call
movsb
bound
loop
lea
imul
ds
pop
sub
movsb
es
cmc
adc
gs
gs
fs
pop
scas
adc
sbb
and
movsb
ds
pop
mov
dec
xor
push
jmp
lea
sbb
xchg
insl
mov
int3
hlt
or
mov
stc
into
cmpsl
dec
movsb
and
push
dec
mov
xor
clc
jge
jecxz
lods
les
shlb
fiaddl
adc
cmp
inc
push
mov
adc
outsb
jo
and
cmp
sbb
popf
xor
push
sub
fs
pop
outsb
outsl
cmp
add
outsl
sbb
and
pop
in
loop
sub
je
push
dec
decb
inc
pop
xchg
push
andb
push
testb
cmc
popa
mov
jg
mov
add
or
imul
lock
repnz
shlb
mov
cmpsb
jle
pop
pop
adc
insb
insl
mov
pop
lret
rolb
jp
loopne
insb
leave
xchg
lcall
mov
lahf
inc
fdivl
mov
cli
pushf
lret
and
push
xor
lods
mov
ds
mov
gs
adc
or
mov
lds
mov
pop
mov
add
push
lcall
popa
push
pop
test
aad
add
neg
cltd
mov
push
pusha
andb
mov
dec
ret
push
lahf
test
push
pop
or
jo
loope
imull
cmpsl
fucomip
push
jo
jne
inc
adc
pop
inc
cmpsl
dec
cmpsl
and
lock
add
inc
dec
aad
and
mov
pop
sub
dec
gs
lret
xlat
outsb
mov
gs
add
mov
mov
dec
in
xchg
icebp
scas
pop
insl
jge
je
mov
dec
mov
lds
in
xchg
in
dec
jecxz
jmp
loope
mov
imul
out
push
pop
jbe
shrb
jmp
sbb
aam
popa
xchg
mov
sbb
mov
fildll
push
jae
xor
mov
jp
shlb
lahf
push
sub
pop
ss
mov
dec
ss
loope
aaa
insb
cmpl
pop
aaa
jge
xlat
shl
dec
dec
pop
push
aad
cltd
fcomi
sub
and
and
jmp
mov
cmp
dec
stc
les
jo
mov
pop
shl
cltd
repnz
or
add
cwtl
mov
ja
mov
xchg
leave
xor
inc
lods
stc
aaa
sbb
or
test
outsl
sub
add
add
or
add
cltd
xor
repz
mov
dec
mov
fnstenv
out
js
pop
imul
mov
enter
movsl
push
das
add
push
mov
push
push
test
mov
and
and
int3
enter
in
mov
pop
lret
cmp
lret
dec
arpl
cmpl
rolb
mov
jns
xchg
ret
out
pop
dec
add
repz
repnz
sbb
mov
loopne
jae
arpl
jbe
add
xchg
je
leave
loop,pn
lahf
gs
ja
ljmp
cmp
xchg
js
imul
jne
out
adc
int
call
or
push
leave
in
cs
mov
testl
mov
leave
cmp
leave
addr16
ds
fs
gs
and
mov
pop
fsubr
sti
cmpsl
pop
insl
fiadds
xor
xchg
or
fstpt
andl
insl
sub
loope
mov
or
jg
xchg
es
sub
into
dec
push
jge
add
push
or
add
out
push
popf
and
dec
xchg
cmp
dec
cwtl
out
fbstp
or
jle
sub
call
xor
sub
add
inc
popf
push
mov
xor
and
dec
mov
call
les
jmp
push
aad
mov
lods
dec
mov
xlat
movsb
icebp
int
adc
fs
adc
mov
enter
add
inc
pushf
and
adc
cs
stos
xlat
shll
clc
jno
ljmp
xor
loop
shlb
adc
leave
addb
lock
cltd
xor
leave
and
mov
xchg
neg
int
repnz
sbb
xchg
add
or
es
test
aam
push
ret
sarl
sbb
testb
mov
or
and
dec
jno
daa
mov
jmp
mov
mov
or
cmc
stos
sub
jmp
cmp
out
cli
sbb
mov
mov
fisubs
add
stc
shll
jnp
pop
inc
push
shl
inc
push
fwait
lods
fdivl
push
mov
imul
inc
movsb
lock
gs
inc
int3
in
sbb
in
mov
adc
insb
mov
xor
lahf
and
test
sbb
sub
je
wrmsr
loopne
mov
xor
dec
mov
pusha
out
adc
add
scas
not
insl
jns
sub
inc
mov
mov
jbe
mov
adc
adc
mov
push
je
clc
xor
arpl
xor
inc
bound
add
xchg
mov
pop
lcall
call
push
cmpsl
fildl
dec
out
xorl
scas
jecxz
mov
jnp
mov
cwtl
sahf
xor
xchg
popf
leave
jecxz
cli
mov
inc
repnz
mov
sbb
xchg
add
ret
out
mov
adc
daa
xchg
outsb
loopne
jbe
fcomip
shrl
jl
lock
xchg
adc
push
jl
mov
and
and
iret
shll
stos
jmp
pop
jbe
cmp
cmp
cmc
mov
xor
pop
cli
push
sbb
mov
fsts
cmpsl
dec
loope
repz
fs
jecxz
adc
or
adc
outsb
jle
or
jmp
push
sahf
cmp
xlat
cmpl
js
dec
arpl
sbb
leave
imul
xor
or
cmp
dec
call
xlat
xor
rorb
test
jae
mov
xchg
mov
dec
sub
xchg
ja
aad
mov
fildl
push
popf
lcall
dec
sub
out
mov
repz
test
sarl
add
fstps
xchg
jecxz
push
cmp
shrl
xchg
pusha
fs
or
pop
and
loop
les
repz
mov
add
push
ret
leave
imul
push
push
xor
jne
push
adc
xchg
repnz
add
in
sets
aam
test
mov
shlb
cmpsb
mov
add
sti
sarl
and
lahf
jl
jo
in
aas
shrl
lods
mov
scas
outsl
sub
std
pop
std
rcl
xor
testl
jbe
pop
gs
and
sti
clc
movsl
stc
fdivp
inc
mov
jp
jne
ljmp
sarl
dec
lea
ret
mov
call
in
mov
xchg
in
inc
adc
pop
sub
jl
mov
mov
sbb
jbe
orl
push
movsl
jno
mov
xchg
loopne
pop
adc
adc
mov
imul
sub
rorb
shrb
jge
imulb
imull
or
xchg
out
jbe
mov
lahf
adc
incb
enter
out
adc
mov
std
dec
gs
cmp
iret
data16
sub
nop
insl
shlb
pusha
bound
or
out
ds
in
pop
lret
lret
add
es
dec
pop
mov
push
imul
cwtl
xor
xor
daa
cli
popa
push
mov
cmpsb
insb
pop
aaa
std
cmp
push
in
decb
push
int3
fimuls
notl
les
bound
xchg
xor
aad
inc
or
fbstp
xor
sbb
repz
xchg
dec
cmpsl
fs
int
mov
cli
lret
inc
mov
sbb
lcall
xchg
mov
dec
dec
outsb
js
mov
inc
dec
dec
int3
ret
out
cmp
add
pop
xor
icebp
inc
fstl
cmp
jp
and
jae
xchg
insl
sub
and
in
inc
mov
and
lods
in
xlat
pop
aaa
sbb
sub
dec
mov
cld
test
jle
ror
dec
ja
mov
jecxz
frndint
stos
dec
addr16
lret
lret
cs
adc
sbb
push
repz
add
cmp
scas
push
xchg
in
inc
dec
sub
cld
or
mov
cmp
testb
js
push
inc
je
push
inc
sbb
mov
scas
inc
and
test
dec
inc
xchg
mov
les
or
jmp
sbb
xchg
sub
test
je
ss
scas
stc
jb
aas
out
xchg
xlat
mov
add
ficoms
or
leave
xor
fcmovne
inc
filds
mov
in
cmp
inc
inc
loope
cmp
add
sub
xchg
push
xchg
xchg
lock
jbe
dec
adc
ss
and
mov
xor
notl
mov
mov
xor
cwtl
xchg
in
dec
adc
loope
lret
xor
lea
repnz
mov
mov
xor
test
jne
add
xchg
cmpsb
push
cld
inc
mov
push
push
push
in
shlb
jno
inc
pop
in
sbb
out
and
add
mov
movsb
outsb
mull
jae
mov
push
pop
push
out
dec
cmp
xor
fcmovnbe
and
sti
and
ds
notl
lods
into
lret
and
int3
loopne
shrb
cmp
mov
cmpsl
adc
loop
in
leave
mov
xlat
jnp
inc
int
iret
mov
faddl
repz
mov
jne
test
nop
rclb
movsb
jl
sub
inc
pusha
jge
or
or
cmp
pop
pop
mov
lret
mov
mov
enter
test
add
lea
mov
push
xor
fdivrl
mov
fcmovne
xor
or
les
xor
add
xor
addb
jbe
push
add
dec
mov
fcompl
aas
push
fildll
lds
ja
jbe
adc
sub
xor
imul
js
mov
xor
pop
push
jbe
push
inc
pop
dec
xchg
xchg
pop
cmpl
ss
enter
cmpsl
inc
push
mov
cmpsb
mov
push
mov
fincstp
jno
mov
fsts
cmp
xchg
sub
xor
mov
and
dec
push
cli
int3
mov
cmp
xor
call
into
loopne
add
and
xchg
scas
xor
ljmp
in
stos
lds
lea
fidivrs
fcmove
out
jno
imul
push
mov
out
pop
mov
shl
mov
and
out
push
mov
push
bswap
and
dec
repz
sti
xlat
mov
cmp
lods
loop
fidivrl
inc
lret
push
sbb
mov
lret
pop
dec
sarl
out
es
pop
insb
inc
lret
les
insl
cmp
add
jne
cmpsl
xchg
test
std
xorb
push
or
sti
jbe
push
repnz
rcl
clc
inc
mov
sbb
dec
aaa
or
sub
flds
sub
outsl
jo
jbe
ljmp
lock
fcoms
aam
mov
cmpl
pop
dec
cwtl
ss
orl
stc
sbbl
dec
push
pop
pop
add
js
lcall
mov
movsb
js
add
pop
jle
repnz
mov
lea
repz
pop
pop
rorb
push
fidivrl
jecxz
sub
push
test
sbb
fwait
popa
test
test
lods
push
sbb
push
je
sub
sbb
sbb
pop
scas
pop
mov
into
add
push
mov
fnstenv
mov
xor
call
mov
ret
aad
dec
aas
push
je
pop
mov
mov
ja
sub
lcall
dec
mov
pushf
mulps
bound
push
cmp
pop
push
outsl
inc
test
aas
xrelease
das
insl
jno
mov
sarl
mov
ficoml
mov
roll
aad
sbb
jge
dec
mov
mov
not
and
fstpl
movsl
lret
jg
or
add
mov
mov
jecxz
jge
pop
inc
nop
inc
xchg
dec
mov
popf
pop
inc
notl
lcall
popl
dec
xchg
lcall
lahf
insl
out
lds
and
dec
jne
std
and
adc
pop
scas
push
mov
mov
add
nop
daa
pushf
xchg
sbb
bound
cmp
sub
xchg
lahf
sbbb
sub
scas
mov
test
or
shl
scas
jge
and
cmc
lock
es
into
xor
pop
cmp
ljmp
xchg
mov
sub
dec
mov
mov
sub
ss
aas
outsb
mov
int3
pop
dec
lock
sub
xchg
jp
pushf
mov
xchg
mov
inc
add
dec
push
push
loope
test
xor
mov
inc
iret
dec
jo
mov
jle
inc
out
sub
push
scas
xor
mov
sub
lret
shlb
adc
sbbl
gs
adc
pushf
dec
jns
imul
cmpsl
notb
pop
cmc
cmc
or
xchg
lock
jo
xchg
fisttpll
push
push
mov
or
sar
sbb
bound
neg
in
adc
stos
adcb
das
bound
pop
jo
sbb
dec
scas
out
mov
ja
dec
int
push
xchg
loop
outsb
inc
push
mov
aad
cmp
xor
insb
enter
jns
sub
into
outsl
mov
push
inc
clc
sbb
xor
dec
cmp
ljmp
pushf
addl
mov
sbb
test
and
sbb
xor
mov
mov
add
cmp
sti
xor
inc
sub
push
sbb
stos
push
push
movsb
scas
test
sbb
cmpsl
adc
dec
cmp
add
sahf
sub
adc
sbbl
pusha
rorl
fcompl
dec
idiv
pop
imul
xchg
add
inc
pop
out
push
loop
iret
data16
in
in
xchg
in
jns
cmpsb
cmc
mov
push
push
mov
or
xchg
das
pop
adc
stos
mov
xchg
ficoml
adc
push
inc
gs
cli
in
push
daa
lret
test
and
ljmp
and
push
les
int3
fldenv
dec
shr
enter
add
js
scas
and
inc
cli
orl
push
or
pop
adc
xchg
repz
pop
lods
xor
cmp
add
pop
fsubp
decl
subl
cmp
sahf
aaa
push
xchg
pushf
out
repnz
and
cmpsl
fnstsw
fbstp
adc
popa
out
jno
andb
push
popf
adc
lcall
popf
test
and
stc
insb
add
insw
loopne
les
pop
inc
or
mov
push
addr16
inc
fwait
repnz
xor
testl
push
daa
mov
dec
popa
jne
inc
aam
adc
push
adcb
leave
into
push
dec
stos
mov
add
xor
movsl
enter
rep
adc
mov
test
add
je
call
sti
xchg
loopne
inc
gs
mov
lds
dec
add
dec
mov
movsl
mov
fisubrl
inc
flds
jle
into
inc
loope
int3
into
fdivr
mov
push
inc
lahf
jecxz
jbe
cld
push
cmc
mov
push
push
clc
stos
cmp
sub
ds
add
push
enter
cwtl
test
imul
sbbl
cmp
pushf
dec
mov
negl
mov
cmp
mov
mov
jb
lds
sbb
mov
inc
or
mov
out
aaa
nop
pop
cmp
jg
sar
scas
dec
les
insl
mov
pop
cmp
popa
cwtl
jmp
mov
add
into
fidivs
test
and
loop
aas
adc
pusha
mov
or
xchg
aas
outsb
adc
mov
pop
xor
mov
pop
arpl
cmc
and
movsl
shl
xchg
in
xlat
iret
push
dec
pop
mov
cmpb
lret
and
jne
faddl
jp
out
or
jmp
sbb
cmc
pop
pop
dec
add
push
adc
in
sti
idivb
out
add
mov
push
leave
push
mov
ficoml
mov
ss
enter
popa
push
inc
sbb
sbb
push
dec
sub
xchg
or
dec
lahf
ds
imul
mov
pop
jo
imul
jae
fcoms
lods
mov
push
mov
js
outsb
scas
xchg
jl
ret
sub
icebp
push
call
test
outsb
test
and
cs
mov
insb
stos
mull
adc
mov
shrl
shll
popf
pop
mov
in
mov
mov
cmpsl
je
call
int
push
adc
rorl
dec
add
xchg
repnz
test
mov
repz
mov
cmc
cmp
hlt
or
pop
inc
jns
adc
mov
xchg
fisubs
inc
adc
les
or
jle
fs
sbb
ret
daa
jg
or
test
fwait
pop
push
decb
cmp
imul
inc
loope
mov
or
cmpsb
orb
lds
cmp
loop
rcl
sbb
dec
or
or
daa
cmp
rolb
bound
jmp
stos
in
jecxz
aad
pop
and
jne
aam
pop
pop
outsb
xchg
xchg
lock
scas
jb
les
inc
push
jmp
rorl
lds
push
test
xor
dec
es
mov
inc
xor
dec
add
cmc
sbb
add
dec
sbbl
pop
cmp
orl
lock
inc
add
mov
ss
ss
mov
addr16
pmulhuw
and
test
test
stos
fcmovbe
insl
cmpsb
lock
andl
sarl
sahf
lods
mov
inc
fldlg2
sub
dec
jae
inc
sahf
or
jg
hlt
mov
sub
iret
mov
rdmsr
adc
ret
cwtl
inc
jb
std
mov
inc
inc
jnp
and
iret
mov
sbb
mov
xchg
sbb
xchg
pop
sbb
sub
mov
mov
xor
jl
arpl
sub
dec
arpl
inc
arpl
sbb
adc
pop
outsl
push
mov
xchg
outsb
pop
jno
pop
stos
inc
nop
mov
ss
cmc
push
or
gs
push
inc
aam
imul
das
sahf
movsb
ja
in
add
js
movsl
addr16
push
and
hlt
jle
mov
arpl
call
or
lret
xchg
out
fwait
pop
daa
out
test
pop
inc
sub
lahf
lods
inc
push
sbb
in
test
lods
dec
pop
xchg
jb
stos
fildl
or
cmp
mov
xor
mov
aas
mov
dec
negb
inc
sbb
pop
xor
jbe
call
mov
xchg
repz
testb
cli
daa
dec
shrb
adc
imul
push
clc
or
cmp
lret
mov
dec
movsb
cmpsl
ds
outsb
mov
pop
and
ja
xor
dec
inc
adcb
daa
fsubl
sahf
xchg
outsl
jp
ds
xchg
jo
add
lret
sub
sub
data16
imul
jg
fnstenv
in
ds
add
push
inc
lods
int
js
shrb
pop
outsb
das
jg
sub
lods
out
jb
int
push
cmp
imul
cmp
repnz
mov
push
push
stos
es
int
xchg
fs
test
mov
cmpsl
andb
into
insl
jnp
pop
and
out
shlb
xchg
jbe
or
ficoml
or
mov
andb
test
push
ss
ret
fcomip
sbbl
cmp
add
push
dec
jmp
adc
cld
xor
lds
xorl
push
inc
push
or
jns
pusha
in
orl
lcall
cmp
fsubl
push
fwait
mov
jo
mov
push
fimuls
loope
rorb
push
aaa
lods
insl
mov
pushf
in
std
jg
mov
cmp
cwtl
hlt
sbb
sub
adc
add
or
scas
and
aam
or
adc
out
clc
out
test
loopne
scas
sub
rcrb
lods
sbb
jns
data16
dec
push
int
mov
push
icebp
dec
addr16
insb
les
xorb
dec
or
cmp
outsl
aaa
add
push
cmpsb
lds
outsl
dec
xor
cmp
mov
dec
add
push
out
lret
or
xchg
lods
jmp
loopne
shlb
pop
jecxz
pop
adc
xchg
cmp
lock
push
in
fsubrs
pop
xchg
mov
in
loop
dec
lods
sub
add
xchg
ret
jp
mov
xlat
xchg
jle
mov
out
stc
aas
shlb
pop
loope
cmc
nop
adc
out
or
xchg
or
outsb
lds
stc
pop
mov
xor
jns
and
inc
push
push
cld
fldcw
mov
sbb
and
call
add
fisttpll
subw
aam
fsts
cwtl
jle
lret
out
mov
add
pushf
or
adc
and
movsb
aam
mov
sti
aam
stc
out
cmp
mov
fdivr
fwait
outsb
out
sahf
roll
sub
push
rorb
jle
cs
ret
fcomi
dec
xchg
xor
xchg
shlb
test
and
jb
test
xor
xchg
dec
inc
fisubs
mov
pop
jg
xor
outsb
sub
neg
and
cltd
aam
rolb
daa
mov
icebp
aas
mov
mov
dec
xorb
clc
mov
adc
lsl
and
xor
ror
mov
movsl
add
into
mov
sub
andl
add
faddl
cli
mov
mov
mov
popa
inc
push
rorb
popf
cmp
xor
mov
push
inc
xor
inc
lds
lcall
lods
test
movsl
stos
mov
nop
call
sbb
jae
lcall
loope
mov
push
jmp
lret
and
loopne
in
xor
shll
call
pop
push
sbb
enter
mov
rcrl
addr16
imul
pop
rol
sub
ret
ret
sti
fwait
jo
fisubl
je
popf
stos
mov
std
aam
repz
xchg
jmp
mov
cwtl
mov
rolb
lods
pop
push
sbb
jbe
xchg
test
inc
xor
mov
fisttpll
cmp
push
pop
jbe
push
inc
push
fstl
rclb
clc
inc
adc
inc
out
mov
mov
sti
repz
and
cmp
popa
cmc
xor
sub
shlb
xor
add
sbb
and
mov
and
add
lahf
inc
jo
out
jp
fstpl
dec
dec
ret
stos
xchg
out
lret
pop
push
mov
in
jns
xor
inc
sbb
jg
and
cld
sub
insl
ret
cmp
insb
sub
hlt
arpl
push
sti
sub
cli
xchg
in
push
add
les
sbb
mov
pop
cli
sahf
leave
cmp
lock
call
pop
scas
pop
pop
sbb
jb
or
sub
xchg
je
inc
sbb
xor
mov
popa
loopne
adc
aaa
sub
jmp
lock
jae
push
movsl
lret
xchg
mov
add
decl
or
leave
pop
mov
dec
xchg
jns
sub
fdivs
or
add
jmp
cwtl
jno
mov
add
cltd
jmp
lret
and
out
jno
adc
mov
sub
lret
jns
jecxz
jle
pop
cmp
lahf
add
xchg
loope
ror
or
mov
les
mov
adc
pop
sub
pop
orb
lods
jp
inc
push
mov
push
xor
outsb
arpl
fidivrl
mov
and
pop
data16
fnstcw
xor
push
jmp
mov
or
scas
dec
popa
adcb
lods
sbb
inc
rcl
xchg
popf
sub
or
loope
lahf
xor
out
mov
imul
scas
shll
xorb
sbb
fisubl
clc
pop
shr
jae
adc
sar
insl
daa
insb
out
sahf
test
stos
call
push
mov
mov
add
inc
inc
inc
mov
popa
xor
jmp
sarl
bound
sub
inc
push
sub
adc
or
pop
sbb
xchg
sub
mov
inc
aas
leave
sub
cmp
es
sub
add
adc
out
test
les
pop
test
popa
mov
mov
test
inc
lcall
and
dec
fs
pop
adc
xchg
in
stos
push
pop
enter
fcmovne
fisttps
outsl
insb
push
pop
test
inc
pop
icebp
std
pushl
sbb
cmp
xor
shlb
push
cmp
hlt
push
xchg
xchg
and
repz
cmc
mov
pop
xchg
outsb
pop
inc
cli
aad
pusha
shll
fwait
pusha
insl
iret
xor
lods
loope
test
fs
gs
jl
cmp
add
add
sbb
ds
add
adc
mov
lret
jb
dec
fists
loope
loop
pop
adc
stos
xchg
insb
sbb
ret
pop
dec
jecxz
mov
lea
mov
dec
mov
mov
gs
int
xchg
ss
mov
int3
jl
xor
dec
mov
movsl
mov
lret
pusha
mov
push
iret
and
jne
sbb
notb
sahf
pop
inc
addr16
sbb
cmp
jge
in
xchg
pop
pop
shl
xchg
gs
shlb
je
cmc
push
jae
fdivs
mov
sub
mov
mov
xor
sub
aad
cmpsb
out
sub
shl
popa
jmp
xchg
cmpsl
sbb
lea
cmp
stc
movsb
sbb
sbb
sbb
pop
lcall
jne
pop
rcll
push
jo
add
cmp
xorl
jl
daa
pop
test
adc
imul
mov
xchg
xchg
cmpsl
outsl
pop
scas
nop
jns
sub
cmpsl
dec
cmc
add
inc
add
push
xchg
fucomi
jae
pop
or
lret
andl
xchg
aad
pop
mov
cld
imul
xchg
sub
scas
inc
fistps
add
lods
jb
xchg
lret
mov
dec
cmp
aaa
js
jecxz
jl
inc
xor
mov
pop
sub
out
scas
clc
ljmp
mov
xlat
cld
cld
int3
add
jnp
xlat
dec
cmpsb
or
push
pop
js
pop
imul
xor
push
mov
ror
hlt
pop
dec
inc
push
in
movsl
mov
es
jle
inc
push
leave
dec
and
xchg
aaa
sub
jnp
aad
adc
stc
xchg
sbb
sbb
ss
lahf
dec
in
rcrl
test
stc
mov
lds
mov
lods
and
xor
enter
lea
jb
stos
sub
push
and
test
dec
jbe
cmpsl
jmp
xchg
sub
dec
inc
lahf
insl
sbb
inc
push
mov
ficompl
into
cmp
pop
int3
pop
rol
pop
jns
in
lods
jle
jp
cli
je
sub
add
daa
push
nop
inc
shll
mov
push
dec
pop
subb
mov
or
cmp
les
ljmp
jbe
imul
sub
and
sar
ds
add
shll
mov
pop
adc
xchg
jb
xchg
jbe
pop
dec
xchg
xchg
movsl
cmp
sbb
xchg
jge
ret
dec
dec
pop
jbe
or
movsb
cld
andl
out
cmp
clc
hlt
xor
xchg
pop
cmp
dec
cmp
sbb
sub
xchg
fs
cmp
pop
inc
dec
inc
in
jmp
testb
mov
mov
jnp
pop
ja
add
test
push
xchg
mov
int3
stc
clc
sahf
ffreep
lock
pop
movsl
adc
sbb
adc
mov
mov
mov
mov
push
mov
mul
mov
out
adc
ret
jle
jbe
push
popf
push
shrb
inc
add
and
in
adc
leave
rorl
mov
gs
sub
jle
fbstp
mov
aaa
shrb
notb
outsl
aam
int
inc
dec
xor
push
xchg
mov
decl
call
xchg
push
jns
pop
aas
mov
out
jg
ljmp
jbe
out
xor
cwtl
xor
and
gs
ret
cmp
cmc
or
dec
cmp
mov
out
mov
push
pop
xor
pop
cmpsl
sub
mov
jmp
mov
xchg
sarb
or
andl
gs
lcall
and
add
inc
push
pop
mov
imul
cltd
std
aam
xor
fsubr
cwtl
mov
push
jle
pop
lods
inc
lea
jbe
mov
rorb
stc
add
and
leave
lods
out
cmpsl
inc
fldl
in
ds
in
test
inc
movsb
mov
ret
rep
or
push
fdivp
push
jnp
push
inc
xchg
in
lret
jo
jp
push
lcall
insl
mov
andb
es
and
add
and
lods
xlat
mov
adc
jnp
in
movsb
xchg
jmp
loopne
mov
fstpt
loopne
aaa
push
movsb
mov
loope
lret
imul
jge
popf
in
cli
and
cmp
js
pop
stos
lcall
out
cmpsb
mov
out
xor
xor
jmp
pushf
push
repz
mov
mov
jge
outsl
lret
cmp
xor
in
lds
jg
jbe
sbb
add
push
andb
les
imul
pusha
and
fs
imul
dec
mov
mov
test
mov
insb
aam
jae
pushf
jp
js
test
lods
pop
inc
pop
mov
inc
push
imul
mov
mov
cmp
inc
fmul
int
fstp
fcompl
mov
cwtl
pop
fwait
lret
testl
jnp
cmp
pop
dec
mov
mov
imul
pushf
add
or
lds
adc
fucomip
jge
and
jno
xor
lea
ja
lock
add
xchg
sub
add
xorb
scas
cmpb
fdivrl
add
xor
ret
jle
fimull
or
fnsave
int
rol
xchg
in
sub
cmp
sub
aam
pop
mov
call
inc
outsb
or
loopne
out
sub
scas
inc
sub
scas
ds
dec
inc
repz
jnp
and
into
rcrb
cmpb
lret
ss
aaa
in
or
adc
xchg
popa
fwait
daa
add
jmp
mov
cmc
pop
mov
in
jne
lcall
in
stos
inc
inc
cmp
fisubrl
test
inc
out
mov
sti
sub
into
fidivs
stc
out
inc
and
dec
popa
in
test
jmp
les
imul
jp
or
mov
sbb
out
js
sub
mov
lret
es
sub
insl
dec
pusha
lods
in
mov
mov
jg
mov
mov
lea
push
pop
mov
mov
mov
ds
add
lcall
jecxz
adc
mov
pusha
in
int3
je
sbb
jle
mov
sbb
arpl
mov
mov
in
jl
aas
mov
outsl
add
pusha
rorl
push
xchg
test
in
mov
push
stc
push
xlat
add
or
lret
fwait
jae
inc
inc
out
dec
add
inc
pushf
xchg
xchg
ss
mov
mov
lret
jb
sub
addr16
lahf
xor
cmpsl
jmp
aaa
fbld
repz
xchg
sub
pop
iret
icebp
inc
push
aaa
cmp
mov
push
adc
out
mov
jmp
imul
mov
cltd
or
mov
jle
jb
imul
clc
loope
mov
out
xor
pop
pop
pop
or
loopne,pn
mov
setg
jno
cmp
sbb
dec
mov
addr16
push
in
bound
sbb
adc
dec
fdivs
jae
mov
pop
notb
push
add
jne
jmp
out
mov
cmc
adc
pop
inc
loope
ja
add
negb
xchg
cli
aaa
xor
test
adc
jp
xchg
pop
nop
add
mov
icebp
xchg
jo
adc
mov
xor
orb
adc
or
inc
cmp
xchg
lahf
push
mov
out
outsl
imul
scas
cmp
jmp
iret
rclb
jbe
loopne
mov
inc
jmp
icebp
aas
sti
dec
out
or
xchg
cmp
insb
sub
dec
cmc
push
pop
fcomps
sbb
andl
pop
pop
push
cmpsl
mov
shrl
dec
rol
clc
xchg
sub
adc
push
lods
pop
push
je
jp
inc
insb
and
bound
jmp
mov
mov
shll
mov
jle
mov
adc
push
movsb
cwtl
jno
nop
cmpsb
mov
out
loop
push
mov
vpunpckhdq
ret
loopne
and
jg
dec
in
mov
mov
cmc
mov
push
mov
cmp
adc
emms
inc
lods
sbb
aas
jbe
jo
mov
fs
push
scas
inc
daa
stos
nop
insb
dec
xor
leave
mov
adc
adc
in
jge
cpuid
sbb
dec
or
leave
sub
lds
dec
sbb
inc
mov
mov
mov
and
aaa
fbstp
cmp
imul
push
out
push
lea
lds
mov
lods
in
mov
call
xchg
outsl
aad
jb
push
and
inc
xor
cli
add
push
or
roll
dec
je
frstor
mov
stos
in
fnstcw
test
and
adcl
je
les
jbe
fst
imul
std
inc
inc
cmp
ret
mov
sbbb
shrl
stc
test
lret
fidivs
out
test
pop
out
inc
rcrb
adc
fdivr
dec
mov
aad
ds
lods
fnstsw
test
jo
pop
and
pop
bound
pop
iret
cmp
lods
jmp
cmp
jns
scas
xchg
adcb
fucomip
xchg
addr16
xor
shlb
icebp
jle
insl
pop
lahf
test
push
jnp
mov
loopne
enter
jns
cmpsb
xchg
pop
lock
jp
inc
and
push
inc
mov
inc
inc
loopne
jb
push
pop
adc
inc
ja
xchg
lret
into
xchg
ds
sub
mov
xlat
mov
dec
lods
mov
lret
add
add
stc
cmp
push
cmp
out
mov
mov
das
setge
sbb
push
or
std
mov
lret
mov
fsubrp
insl
mov
aam
pop
jmp
xor
cmp
jmp
jmp
mov
inc
xor
xlat
push
daa
dec
cmp
xchg
jge
inc
cld
push
and
pop
xchg
aam
test
jae
cmpsb
in
sub
lret
push
test
cmp
sbb
mov
ljmp
sub
jb
add
add
pop
pop
icebp
movsl
orl
je
out
sbb
iret
fsubl
push
pop
xor
es
loope
imulb
xor
ds
and
dec
mov
daa
lahf
cmp
sub
inc
push
push
cli
sub
mov
add
dec
in
cmp
xchg
add
fcmovbe
je
scas
shlb
sub
xor
push
jp
imul
in
sbb
out
addr16
pop
sbb
mov
sub
inc
or
pop
cmpsb
sti
iret
aad
pop
imul
add
sbb
cmp
cmp
stos
mov
ficoml
and
stos
mov
fstl
add
sbb
cltd
shl
add
pop
dec
js
sub
cltd
mov
movsl
imul
ret
xchg
rclb
andb
push
pusha
mov
das
movntq
pop
push
test
lea
xchg
loope
cmp
mov
leave
pushf
mov
xchg
pop
jle
push
jb
push
pop
imulb
xchg
xchg
dec
add
out
data16
sti
popa
dec
and
mov
andl
and
ret
ret
bound
jle
jbe
iret
add
push
ljmp
pop
cwtl
jne
xchg
push
mov
lret
pop
xchg
push
fdivrl
push
lret
repz
jns
pop
sarb
push
inc
adc
sub
fwait
idivb
test
jns
mov
sbb
stos
inc
stos
out
push
inc
cmp
lcall
jge
sbb
cmpsb
cmp
xlat
or
adc
neg
cmpsl
insb
dec
inc
scas
or
xchg
mov
test
cmp
cmp
andl
fildl
push
mov
jbe
pop
push
add
and
dec
ficoml
loop
into
push
mov
adc
add
dec
loope
sbb
outsb
cld
or
lods
out
shrl
insb
pop
xchg
cmp
push
xor
sbb
fstps
push
add
jl
test
push
push
lods
xor
mov
mov
push
shlb
andb
arpl
daa
insl
mov
jns
adc
mov
dec
nop
lods
xchg
cmpsl
lea
lods
xor
mov
fs
int3
inc
push
jbe
sub
sbb
mov
lret
pop
or
jle
flds
mov
sub
out
adc
sub
push
mov
scas
inc
decb
and
popf
cmp
mov
jb
pop
clc
fwait
cmpl
or
push
push
mov
aaa
cmp
add
cmp
popa
andb
or
gs
rcll
dec
cs
inc
outsl
dec
adc
jmp
sub
loope
xor
push
adc
xchg
or
sub
in
add
mov
lods
cld
mov
scas
adc
cmp
sarb
xchg
lahf
mov
jp
jg
fwait
daa
mov
test
lods
mov
sbb
cltd
out
cmp
lret
xchg
sbb
loop
cld
push
mov
pop
push
xor
fwait
adc
push
test
iret
inc
and
and
stc
js
pop
pop
mov
fidivl
imul
jo
push
mov
jbe
jns
xchg
nop
mov
pop
or
out
lds
rcrb
xor
es
or
lea
into
ss
jge
js
mov
jns
pushf
cmp
jg
xchg
shlb
pop
icebp
xor
mov
add
pop
push
adc
rcrl
jo
xor
popa
imul
jp
adc
andb
pushl
dec
enter
loopne
dec
pop
mov
cmpsb
xor
xlat
xchg
jns
mov
mov
inc
or
sub
mov
and
outsl
in
mov
loopne
pop
sarb
clc
pop
push
jle
adc
inc
add
fistps
sub
fimuls
fildl
or
testb
repz
mov
ja
repnz
lahf
test
jmp
je
cmp
mov
bound
cmp
test
popa
mov
lea
mov
mov
mov
push
jecxz
or
jle
aad
ss
or
fs
or
mov
sub
mov
xlat
jle
sbb
jae
push
mov
lods
cmpsb
mov
xchg
test
sbb
arpl
lock
mov
roll
cli
bound
fldenv
cmp
jae
push
push
push
pop
mov
test
in
imul
aas
mov
call
subb
add
testb
adc
sub
push
stc
jle
sti
mov
inc
mov
inc
sbb
mov
mov
sub
push
aaa
les
cmp
aad
push
cmp
test
xchg
pusha
stc
xchg
cmp
jae
sub
mov
adc
repnz
add
bound
xchg
mov
fstpl
mov
mov
cmp
out
rcl
out
fidivs
mov
orb
negb
adc
popf
arpl
outsb
cltd
mov
cmc
xchg
jnp
les
pop
cmc
sub
aad
dec
lret
sub
fmuls
pop
notb
adc
aaa
inc
jno
xor
cmp
pop
sub
sti
stos
push
push
fcompl
or
sbb
sub
sbb
sbb
stos
fidivl
pop
push
sub
imul
xchg
popa
dec
pop
fwait
cmc
lds
test
loopne
add
imul
mov
adc
lea
or
imul
push
inc
test
xor
push
cmp
enter
outsl
inc
mov
mov
sub
in
idiv
push
scas
sbb
mov
mov
mov
data16
push
test
fiaddl
out
sti
cmp
and
lret
call
push
mov
mov
rcrb
push
cmpsb
push
add
mov
push
xchg
adc
int3
lods
inc
lcall
psllw
inc
adc
sti
inc
sbb
adc
cmp
mov
sub
popf
and
rcr
or
xor
popa
push
and
jg
mov
fistpl
or
mov
jns
xchg
sub
pop
aaa
xlat
sti
push
mov
repnz
cmc
addr16
loope
negl
out
mov
mov
mov
out
dec
mov
cmp
mov
fistl
and
cmp
or
xchg
add
xchg
xchg
mov
sub
inc
push
sbb
sbb
add
les
cmc
shrb
and
add
pop
rcll
add
and
xchg
xchg
pop
push
xor
sti
xchg
mov
pop
cmpsl
jbe,pt
lods
xchg
gs
fwait
rclb
mov
fldenv
gs
jo
adc
sub
push
pop
push
ljmp
movsl
shlb
sbb
or
mov
push
lds
iret
ret
clc
scas
inc
sbb
or
pop
nop
repz
jb
in
test
adc
int3
mov
pop
xor
std
aaa
in
xor
xchg
rorb
pop
scas
mov
add
cli
pop
xor
dec
scas
call
and
mov
lea
fstpt
les
rcr
rcrl
lods
imul
pop
dec
aaa
mov
imul
loop
cmpsl
std
mov
mov
push
inc
cmpsb
jo
dec
cmpsb
orl
repz
test
inc
arpl
mov
or
xchg
push
test
add
shl
insl
fwait
mov
mov
in
ljmp
ljmp
mov
mov
mov
inc
loope
and
aam
jo
xchg
movsl
cmp
je
jnp
adc
test
mov
and
mov
xor
ljmp
inc
popa
xchg
inc
pop
and
inc
add
in
mov
push
or
push
stos
es
or
pop
sub
jecxz
test
dec
in
dec
shll
imul
mov
inc
sub
xor
push
fisubs
xor
fsubs
adc
sub
fwait
in
inc
and
test
pop
sbbb
icebp
in
mov
dec
shll
in
pushf
ds
xor
and
repnz
xchg
dec
adc
mov
or
xchg
or
divb
sub
xchg
mov
mov
fcmovbe
jae
outsb
xor
adc
xor
mov
pushf
fst
push
ret
sahf
mov
mov
adc
clc
lret
out
jne
popa
mov
push
push
ss
lods
cli
leave
sub
int
jnp
or
cmpsl
aad
cmpl
ja
push
jo
fsubrs
xor
xor
sub
adc
popa
mov
std
repz
ret
sbb
ret
jmp
pop
jecxz
xchg
dec
mov
ljmp
jle
mov
push
rcrb
inc
outsb
enter
shrl
sbb
scas
les
pop
mov
loop
int
daa
pop
or
and
pushf
xor
test
inc
sti
js
fldl2t
mov
lea
cs
mov
ja
lcall
adc
add
loope
call
push
add
sbb
ficoml
fidivl
out
push
adc
or
push
stc
iret
imul
or
add
int3
lcall
and
jne
and
inc
mov
lahf
inc
es
notb
call
stc
pushf
inc
push
inc
roll
divl
jnp
shrb
inc
or
ficompl
sti
aaa
lods
push
mull
shlb
xchg
mov
lret
inc
gs
xchg
cmp
stos
cld
mov
fcomps
dec
jno
cmp
push
iret
dec
dec
int3
cld
stos
fldenv
lahf
test
sub
push
incb
pusha
lock
lods
sahf
sbb
and
stos
lds
gs
and
in
div
or
lea
ds
dec
sbb
jmp
push
cmp
sti
pop
dec
mov
push
sub
mov
and
aad
fbstp
lret
jae
mov
add
fidivrs
inc
pop
ret
pop
sbb
rol
sbb
jge
arpl
fstpt
in
mov
outsb
shrb
and
fdecstp
or
std
adc
xor
pop
push
aam
gs
mov
out
jo
dec
mov
add
fdivrl
pop
clc
int3
arpl
mov
xor
iret
outsb
jl
test
shrb
ret
imul
xchg
repz
dec
jo
popf
clc
popf
adc
pusha
cmp
addb
mov
jg
out
pop
xchg
int
popf
xor
add
ds
pop
xchg
cmp
enter
adc
push
jb
jp
sub
imul
fstpt
dec
add
shlb
xor
rclb
sbbb
in
es
arpl
sbb
adc
movsl
mov
ss
push
imul
cmp
mov
mov
jb
xchg
adc
add
and
jle
sub
pop
mov
std
dec
insb
jle
xchg
into
sbb
ret
jbe
out
jo
sbb
dec
pop
mov
lock
jo
mov
push
pusha
in
jb
dec
mov
sbb
out
push
ret
xor
push
popa
jle
sbb
inc
mov
sti
lret
rol
jmp
icebp
imul
mov
adc
js
pop
loope
dec
push
lds
leave
push
xchg
pushf
ljmp
push
mov
fwait
gs
subb
fwait
fs
scas
xchg
xchg
push
and
push
cld
pop
sub
repz
push
or
sbb
fucom
jg
je
insl
push
sub
cmp
push
push
movsl
out
or
ljmp
in
dec
mov
jecxz
jmp
mov
popa
mov
mov
pop
jmp
pop
xchg
push
hlt
adc
iret
pop
int
push
shl
loop
loop
push
imul
in
jbe
push
and
cmp
and
mov
addr16
push
mov
push
push
pop
icebp
mov
fdivrl
push
ret
out
jns
xchg
add
push
xchg
dec
and
dec
ljmp
arpl
lds
sbb
psubusb
shll
or
sub
roll
push
aaa
push
mov
or
cmp
ss
mov
or
imul
movsl
push
sub
ljmp
addr16
inc
pop
push
adc
jb
sarl
out
add
dec
adc
jno
pop
and
cmpsb
mov
rcr
dec
out
testb
push
aaa
sahf
ret
bound
pushf
mov
rcll
outsb
xchg
stc
int
cmpsb
mov
jg
subb
sahf
jnp
xchg
xchg
xor
push
filds
cmp
das
daa
pop
adc
inc
jb
stc
ljmp
pop
lods
shlb
hlt
pop
cmp
pop
out
mov
aad
mov
in
dec
loope
and
psrad
push
add
mov
ss
lds
fdivrs
lahf
iret
stos
stos
nop
mov
dec
dec
push
sti
pop
je
and
iret
push
xor
inc
fucomp
mov
jo
sbb
inc
jl
mov
cwtl
ret
in
cmc
dec
pop
mov
sub
or
xor
dec
pop
ja
push
mov
or
inc
lahf
div
push
jecxz
add
or
cmp
rcrb
imul
mov
mov
repz
repnz
mov
cmp
call
jne
test
leave
loope
ljmp
cmpsb
mov
gs
mov
aas
mov
mov
mov
cmpsb
cld
pop
mov
jnp
out
shl
ret
ret
pusha
dec
dec
test
xlat
es
pop
cmpsb
ret
mov
cmp
xor
or
mov
addr16
lods
mov
mov
test
inc
cmpsb
fnstcw
jnp
leave
popa
mov
xor
rcrl
jnp
sub
dec
dec
loope
pop
cmp
add
es
dec
fcomps
orl
mov
xor
fs
inc
and
sbb
clc
push
leave
sub
and
repnz
push
mov
dec
test
mov
repnz
pop
pushf
add
adc
cmp
cmpsb
mov
add
int
mov
fidivs
adcb
negb
jle
out
and
jl
mov
ljmp
jno
xchg
testb
pop
jg
ds
jecxz
in
pop
pop
hlt
ja
mov
cmpsl
incl
cmp
pop
sub
ljmp
pop
cmpsb
cmp
and
pop
int
inc
fdivs
fst
pop
mov
in
cli
xchg
sbbl
mov
xchg
out
ret
lock
cmpsl
in
and
sub
dec
rorb
and
mov
dec
jae
ja
dec
in
xchg
mov
lods
add
xor
js
test
jl
fwait
lods
inc
mov
xchg
pop
cmpsb
sbb
xor
pop
and
gs
xor
movsb
leave
mov
xchg
roll
cmpsb
sub
mov
inc
xchg
popf
inc
sbb
sbb
mov
push
mov
pop
repz
insl
sub
lcall
dec
out
jnp
fldt
and
popf
push
mov
and
and
fdivrl
sub
ds
pop
dec
shlb
stc
arpl
mov
bound
inc
mov
fxch
dec
dec
repnz
and
in
stos
in
inc
cmp
in
lcall
test
mov
mov
cmp
lea
insl
rcr
jnp
xchg
scas
or
pop
orb
add
mov
sub
insb
sub
push
and
icebp
pop
xor
movsl
repz
mov
add
das
sbb
dec
mov
add
xor
fwait
mov
sub
pop
jo
shrl
pop
jecxz
dec
insb
push
sbb
sub
icebp
js
dec
mov
pushf
push
aad
pop
mov
jnp
cli
sti
mov
sub
into
pop
push
mov
inc
sahf
ja
mov
icebp
fadds
sahf
stc
mov
push
push
or
pusha
mov
cld
push
pushf
cmp
and
xchg
pop
pop
xor
mov
add
mov
loopne
add
inc
pop
out
pop
sub
fldl
das
adc
sti
divb
fiadds
mov
dec
and
pop
shrl
test
insb
cmpsb
cmp
out
cmp
sbb
mov
loop
hlt
mov
sbb
mov
movsb
and
pop
sub
scas
aas
xchg
mov
or
jo
in
sub
cmp
sbb
mov
je
in
mov
icebp
mov
and
sbb
xor
iretw
fs
jb
sub
nop
mov
pop
scas
add
ds
lret
and
fld
adc
mov
cmpsl
push
lods
xlat
push
loopne
jp
xor
dec
test
pop
cmp
push
insb
jle
push
dec
fildll
mov
fldt
sub
es
xchg
stos
mov
pop
insb
xor
mov
sbb
into
in
add
sbb
jns
pop
add
sub
cmc
xchg
call
inc
es
cmc
leave
scas
mov
sbb
mov
mov
loope
daa
mov
or
inc
inc
mov
mov
pop
jae
rclb
push
sti
xchg
adc
cltd
xlat
popa
ss
xor
push
push
adc
movb
jp
fyl2x
adc
or
or
int
pop
and
adc
sub
jbe
ja
cltd
test
test
xchg
push
repnz
jmp
mov
js
cmp
jge
sbb
es
lods
xchg
mov
hlt
or
shll
inc
add
dec
popa
sbbb
adc
popa
xchg
inc
dec
aas
aad
pop
xchg
add
out
test
jmp
jge
cmp
or
repnz
aad
cs
mov
arpl
fidivrl
cmp
aas
push
sub
loope
mov
jb
sarb
pop
sub
divl
scas
data16
sti
lret
adc
sar
gs
and
jbe
int3
mov
inc
add
js
insl
sub
push
lea
popf
sub
add
push
mull
imul
dec
fwait
lahf
sbbb
push
and
and
xchg
or
mov
jge
mov
mov
inc
xor
test
xlat
lret
lret
dec
sahf
or
fucomp
cld
std
cltd
xor
ffreep
scas
pushf
push
jb
sarl
pushf
xlat
jmp
test
loopne
xor
adc
push
xchg
ja
inc
dec
push
add
pop
gs
mov
dec
mov
fcmovnbe
sbb
aas
sub
pop
inc
loope
dec
xor
add
or
idiv
andl
or
mov
dec
stos
sub
in
hlt
push
xchg
pusha
sbb
pop
in
arpl
das
sbb
push
jmp
jnp
mov
fidivl
ffreep
and
sti
ret
shll
adc
repnz
mov
push
xchg
aad
jg
mov
subb
pop
das
xchg
xlat
mov
loopne
jecxz
add
mov
pop
rol
adc
ret
sbb
pushf
rclb
dec
add
pop
ja
test
hlt
test
sbbl
mov
sub
idivb
xor
ja
mov
push
stos
jmp
xchg
scas
ret
xchg
push
push
fimull
pop
lods
jmp
or
popf
stc
push
bswap
mov
pop
addr16
aaa
ficompl
inc
data16
dec
popf
stc
jecxz
in
sti
pushf
push
mov
ljmp
orl
jl
add
push
aas
ja
mov
call
cmp
jecxz
sub
dec
dec
xchg
cmpsb
dec
in
xor
out
mov
aad
into
sahf
pop
cmp
jl
cmc
es
dec
dec
in
cli
and
andb
mov
jae
pop
and
add
sbb
loop
xor
xchg
add
mov
adc
mov
and
inc
pop
or
or
fbld
mov
lock
je
out
pop
add
xchg
sbb
push
dec
pop
jne
gs
imul
dec
mov
jno
inc
divl
dec
pop
mov
aaa
push
and
jbe
add
inc
stos
enter
jp
mov
jne
sub
lds
and
cltd
adc
mulb
data16
aam
mov
xor
mov
add
dec
and
or
pop
lahf
ljmp
pushf
fidivs
xchg
inc
add
jge
in
xchg
shl
or
jno,pt
lcall
xchg
mov
lret
outsb
adc
adc
pop
pop
mov
mov
aam
mov
cld
inc
subl
out
ja
stc
mov
insl
cld
aaa
push
adc
mov
cs
fs
push
fidivl
fistps
bound
aas
mov
les
lea
mov
daa
mov
mov
jne
inc
push
xchg
push
lock
or
imul
xchg
sub
daa
sahf
inc
imul
or
popf
adc
sub
insb
sbb
and
mulb
cmp
bound
pop
fstl
and
add
xor
out
fwait
or
dec
stos
xor
mov
cmp
pop
dec
push
inc
or
push
sub
sbb
or
push
inc
jl
jo
test
and
jns,pt
xor
xchg
mov
iret
jmp
rcr
jl
push
inc
pop
outsl
jl
and
or
es
repz
jbe
scas
adc
cmp
jb
add
popa
mov
arpl
and
scas
movsb
gs
inc
aaa
push
dec
mov
jno
dec
push
fildl
mov
cmc
insb
scas
rcll
mov
pop
in
mov
xchg
out
inc
mov
xor
jno
sbb
and
mov
es
shrb
xchg
push
mov
mov
add
xchg
and
mov
js
movsl
sarl
cmp
pop
lock
or
or
mov
incl
or
push
sub
xor
mov
pop
bswap
fsubrs
xor
sub
insl
lods
pop
cmp
inc
stos
testl
dec
data16
pop
imul
std
xchg
or
andl
xor
into
dec
sbb
dec
lods
int3
pop
pop
loop
insb
popf
or
fsubs
call
mov
hlt
aas
push
gs
pop
movsb
xchg
mov
pusha
mov
stc
push
mov
mov
jae
lahf
sub
stc
repnz
pop
cld
lcall
dec
arpl
call
and
push
jne
xchg
xchg
jecxz
mov
push
dec
add
or
or
aam
mov
out
call
int3
lret
jnp
shlb
jp
inc
fists
pop
leave
cmpsb
adc
jb
js
mov
ljmp
das
cmp
sub
cmpsl
rcr
int3
or
xchg
xor
test
lods
jl
jl
popf
lods
xlat
sti
fwait
pop
sbb
lcall
push
mov
loopne
sub
jne
mov
cld
and
or
insl
js
shl
adc
and
push
sub
xchg
mov
xor
mov
test
xchg
cmp
xlat
cmp
fistpl
aad
dec
cld
xchg
in
insb
repz
mov
imul
cld
jmp
sahf
sbb
adc
cltd
mov
inc
fisubrl
add
add
pop
add
sbb
lods
inc
imul
sbb
push
pusha
testl
add
mov
jp
lcall
fnstsw
loopne
push
sahf
icebp
mov
scas
out
mov
cld
jae
sbb
mov
jg
cmp
pop
sub
xchg
mov
cltd
lea
cmp
push
xor
fwait
out
sub
and
mov
dec
gs
nop
lods
push
loop
ss
mov
call
lret
xchg
pop
dec
xor
enter
imul
push
aas
lea
inc
lods
enter
insb
xchg
mov
xchg
rolb
adc
inc
mov
push
or
aaa
int
sub
push
imul
ret
data16
stc
push
outsb
xchg
fdivrl
xchg
or
dec
xor
xchg
mov
popa
pop
and
adcl
push
les
mov
pop
mov
inc
sbb
inc
cmp
loopne
mov
andb
outsb
lahf
mov
mov
lret
sub
daa
dec
scas
cld
mov
mov
inc
adc
add
sbb
ja
adc
sbb
fisttps
repz
xchg
jns
ret
js
lods
cltd
xlat
fidivl
negl
std
rcll
bndstx
rorb
scas
jg
xchg
int3
xchg
divb
jns
and
mov
aam
ret
mov
test
ficompl
jecxz
lret
pop
inc
pop
insl
jns
jnp
cmp
sbb
xchg
out
inc
mov
out
scas
or
push
mov
pop
jg
lahf
mov
inc
enter
fnsave
and
inc
cmp
cli
pop
fldenv
dec
test
repnz
inc
and
push
inc
and
sub
dec
adc
jbe
and
or
sbb
mov
nop
je
and
or
push
push
add
and
cmpsl
sub
push
mov
mov
into
gs
les
imulb
or
fbstp
xchg
jb
fwait
inc
jl
mov
call
int
in
sub
fwait
test
mov
mov
mov
mov
cli
and
in
mov
sahf
sbb
inc
orl
mov
push
fstps
test
aaa
vpshufd
mov
mov
dec
sbb
mov
leave
and
out
push
pop
dec
pop
out
lahf
jbe
or
jecxz
xor
test
mov
sti
repz
es
dec
and
jl
cmp
cmp
aas
xor
add
ret
test
xor
xchg
sub
add
movb
push
in
cmp
adc
adc
sbb
xorl
cmc
fcoml
je
jecxz
or
inc
push
das
xchg
pop
cmc
lds
cltd
mov
or
or
cmpsl
idivb
pop
sbb
and
xor
push
push
mov
aas
out
lock
ljmp
imul
subl
cltd
movsb
jmp
cmp
syscall
icebp
inc
xor
add
push
push
xchg
dec
fsts
cli
mov
mov
adc
lods
ret
inc
and
inc
push
mov
lret
pop
dec
adc
lret
xchg
imul
outsb
push
cmp
int3
and
iret
es
pop
movsb
and
jns
shlb
mov
in
call
cmp
inc
in
push
add
xor
mov
testb
or
pop
lods
and
pop
mov
mov
insl
sbb
xchg
test
xor
test
jle
pop
jl
std
shl
mov
addl
jae
pop
xor
nop
cmp
loopne
jns
cmp
and
pop
jns
push
aas
cmp
loope
sahf
dec
dec
je
std
jae
mov
push
xchg
adc
xchg
out
jl
dec
fistpl
pop
imul
in
xor
sub
push
ret
sti
mov
push
mov
adcb
mov
sbb
aaa
push
mov
xor
insl
aas
mov
dec
cli
aad
mov
fs
xorb
mov
and
xor
mov
aas
or
lea
orb
aaa
call
push
or
data16
mov
popl
add
shlb
adc
je
aad
lock
stos
lods
mov
mov
pop
call
lods
xchg
in
cmp
add
dec
pop
adc
fwait
cs
sahf
mov
xor
ficompl
inc
stos
push
ljmp
jae
jno
mov
xchg
fadds
or
sbb
or
sahf
cmp
lds
mov
mov
lahf
bound
pop
pushf
out
imul
fldl2t
mov
test
sarb
dec
mov
mov
outsb
mov
movsb
sub
adc
pop
movsl
stc
cmp
aaa
pop
xor
jns
push
stos
or
xor
cltd
xchg
jl
mov
fstps
or
js
cwtl
lcall
push
imul
xchg
dec
mov
jge
stmxcsr
mov
shlb
iret
call
lret
inc
enter
mov
sbbb
cld
je
lock
call
imul
sar
movsb
insb
jle
loopne
and
nop
xchg
ror
loope
sbb
lahf
clc
imul
test
mov
test
push
mov
xor
out
or
jmp
and
sbb
outsl
je
popa
repnz
movsb
rorl
xor
inc
call
sub
push
ror
shrl
mov
dec
push
add
divl
xchg
push
inc
fdivl
push
in
lods
lds
mov
rorb
pop
mov
and
aas
mov
cmp
xchg
addb
jmp
popf
add
in
pop
mov
sbb
in
mov
xor
xor
cmpsl
ja
mov
pop
pusha
pop
sbb
lods
ret
mov
sub
arpl
insl
pop
xor
test
stos
mov
mov
in
and
hlt
dec
ja
adc
repnz
jbe
dec
pop
xchg
addr16
daa
bound
ja
int3
fidivs
sub
mov
push
dec
bound
scas
inc
js
and
push
ficoms
repz
xchg
pop
aas
mov
repz
andl
mov
test
icebp
sbb
les
cs
int3
push
leave
cmpsl
inc
fsts
scas
inc
xchg
js
imull
inc
jle
inc
sbb
imul
repnz
mov
xor
pop
pop
hlt
dec
mov
push
daa
pop
sub
lods
hlt
jbe
pop
inc
outsb
xchg
or
inc
test
outsb
push
inc
mov
mov
test
push
rorl
shrb
or
mov
lods
xchg
test
fcmovne
cmp
cld
jne
jmp
arpl
iret
xor
fnstcw
ret
inc
out
rep
and
lret
push
ds
dec
popa
add
iret
xor
push
sub
sti
xchg
testl
pusha
shlb
lcall
out
mov
imul
fucomip
xlat
jg
jno
adc
adc
decl
jns
lret
cmpsl
hlt
jnp
adc
mov
test
in
lahf
cli
push
movsb
test
es
sti
adc
sbbb
cmp
fstpt
sbb
movsl
outsb
cmp
lret
pop
in
adc
add
mull
imul
adc
cld
cltd
mov
loopne
and
cmpsl
jns
cmp
cld
or
pop
cmp
push
imul
push
sbb
xor
test
mov
out
test
hlt
cmp
inc
mov
lea
movsb
xlat
cmc
in
push
push
dec
fidivrl
dec
push
aam
lahf
inc
test
pop
or
gs
in
push
dec
cwtl
jp
cltd
and
bound
jl
in
loopne
ljmp
out
lcall
adc
aam
sub
es
ret
repnz
mov
xor
fidivl
inc
push
mov
shl
scas
cld
xchg
dec
iret
mov
add
outsl
imul
adc
adc
add
outsl
cmpsl
inc
dec
negb
cltd
std
les
std
push
xchg
mov
fdivrs
sbb
mov
mul
xchg
add
int
jge
out
ljmp
mov
mov
divl
popf
scas
lea
je
add
mov
stos
fcmovbe
jp
daa
cmp
push
out
ja
pop
cmpsl
push
aaa
or
aaa
in
push
inc
mov
inc
cmp
dec
push
rcll
mov
ret
mov
fsub
dec
test
or
popa
iret
jmp
add
or
inc
cmp
jbe
daa
inc
lret
rcl
inc
or
lahf
hlt
mov
inc
lds
les
rcll
mov
xchg
cmp
or
outsl
pop
pop
pop
pop
popf
xor
icebp
dec
out
adcb
stos
mov
mov
outsb
insb
sbb
test
sub
shrb
movsl
stos
mov
cwtl
push
mov
add
scas
or
shll
mov
std
and
or
fidivl
mov
sahf
mov
inc
bound
int3
repnz
adc
add
xor
fsub
addr16
iret
arpl
jle
mov
xchg
jge
mov
cmpsl
and
iret
popf
push
sti
cmp
push
adc
jecxz
repz
idiv
movsl
inc
xchg
inc
adc
hlt
addr16
push
fildl
into
cwtl
mov
mov
push
iret
cmp
shlb
and
jge
add
shrl
aas
push
dec
dec
in
jae
jns
push
insl
add
pop
andb
mov
mov
leave
mov
movsb
mov
fistps
sbbb
enter
or
scas
outsl
outsb
jnp
or
or
xor
nop
mov
es
lret
inc
mov
sti
in
dec
in
psrlw
cmp
mov
sbb
and
inc
fsubrl
inc
out
fdivp
jp
outsb
add
mov
cs
daa
mov
loope
mov
enter
inc
lds
and
inc
add
xor
push
stos
dec
adc
lret
mov
lret
loope
push
popf
ret
aam
cmp
int
daa
mov
movsl
xor
adc
cmp
addr16
or
cwtl
jnp
xchg
adc
out
add
adc
cmp
imul
inc
rcrl
mov
ret
pop
sub
in
and
repz
stos
push
cmp
lret
xor
sbb
or
mov
aaa
jo
xchg
cmpsl
nop
sbb
dec
mov
xchg
sub
out
into
sbb
mov
imul
mov
pop
ret
in
scas
lea
repnz
jbe
je
mov
push
xor
mov
or
sub
movsl
xor
sbb
xor
mov
push
cs
xchg
imul
jne
data16
or
cmpsl
xchg
stos
add
fdivl
and
call
scas
icebp
popf
push
jb
cmpl
and
pop
sar
sub
hlt
loop
mov
ret
insb
adc
fmulp
inc
pop
fidivrs
popa
sbb
shll
insb
inc
pop
fbstp
popa
mov
ret
mov
push
and
push
xor
lds
mov
mov
out
imul
xor
jmp
imul
jns
stc
and
dec
mov
dec
cs
adc
adc
outsb
add
jg
mov
xor
cld
xchg
outsb
xor
sub
ja
mov
mov
cwtl
fs
dec
and
repz
or
mov
jl
ds
cmpsb
repz
leave
jp
jno
daa
divb
insb
cld
xchg
lahf
dec
sub
aas
sbb
icebp
cmc
cmp
roll
jne
adc
push
dec
aad
xor
loop
test
jb
outsl
ljmp
and
notl
repnz
mov
sbb
ret
cmc
ret
mov
pop
dec
push
lahf
push
enter
push
test
fsubr
pop
xchg
jo
cmp
repz
pop
pop
xchg
sub
mov
addr16
rcrb
jmp
sub
or
mov
push
mov
notb
push
rcr
loop
nop
add
mov
mov
pop
lock
jnp
out
pushf
pop
add
adc
fmull
mov
test
cld
shrb
sbb
inc
jg
cmp
gs
xchg
or
fwait
dec
fisubs
movsl
sbb
shl
out
jns
push
add
pusha
sub
out
xchg
les
test
xlat
mov
or
or
stos
push
sub
cmc
cmp
push
add
and
daa
out
xchg
leave
ret
ret
sbb
or
shll
fcoms
sbb
xchg
mov
out
call
movsl
sub
out
mov
push
fdivr
or
in
mov
mov
jle
push
lock
mov
mov
pop
cmc
cmp
add
sbb
or
in
stos
push
jo
cltd
jo
fcompl
xor
cli
imul
mov
stc
nop
mov
fcoms
sbb
or
xor
cltd
test
jne
mov
xor
mov
inc
lret
psrad
mov
fldl
dec
xchg
ljmp
inc
stos
xchg
sbb
daa
aam
sbbl
cld
in
mov
xchg
or
pop
in
inc
xchg
jae
sub
jp
cmp
adc
and
aam
adc
gs
and
test
push
xlat
push
pop
pop
out
dec
pushl
mov
lds
cltd
add
lods
popa
pop
pop
and
test
lds
lea
rcrl
mov
sub
inc
sbb
inc
imul
mov
loopne
sub
in
js
pop
cmp
pop
scas
pop
aam
rcrl
push
add
dec
jecxz
inc
mov
xor
movsb
push
leavew
lods
jg
mov
sbb
sub
nop
inc
out
in
cld
mov
fdivp
cmp
inc
bswap
mov
out
mov
sbbb
push
and
mov
inc
es
aad
loopne
adc
aad
pop
mov
jle
jnp
sti
lahf
loop
rclb
ret
mov
shll
mov
pop
jg
loopne
cmp
outsl
leave
sub
inc
pop
or
outsl
push
shlb
fs
xchg
pop
iret
jmp
mov
jb
fidivl
cld
push
lfs
sub
js
mov
inc
fnstsw
jo
test
add
sbb
jle
mov
lods
shl
repnz
call
bound
jo
iret
mov
cmpsb
hlt
jae
xchg
inc
dec
mov
mov
xor
push
hlt
or
or
pop
inc
shl
out
push
push
mov
fists
push
je
insb
pop
das
pop
rorl
dec
dec
xchg
jns
xchg
xchg
bound
shll
rcrb
ret
mov
aam
xlat
ret
sbb
shr
pop
fsub
test
out
fiadds
testb
rclb
fisttps
lods
push
cwtl
rol
fidivl
imull
xchg
mov
and
push
cs
adc
imul
xor
mov
int
push
mov
inc
lods
std
xor
in
or
cmpsb
pop
mov
popf
and
pop
cmc
mov
jnp
and
push
or
ljmp
jo
aam
mov
adc
mov
sub
fidivrs
dec
loop
mov
je
adc
das
cmp
subl
popf
cmp
or
dec
ss
pop
loopne
and
dec
cmp
sbb
mov
in
jbe
pusha
out
inc
push
mov
inc
in
andl
or
sbb
sbb
push
fstps
dec
xor
aam
out
subb
push
cld
adc
sahf
xor
stos
fdivrl
push
out
incl
out
pop
or
cmp
push
stos
mov
insb
mov
ficompl
test
jnp
mov
out
jge
mov
into
in
and
fistpl
dec
fimull
push
lcall
faddp
lea
or
push
adc
ss
xor
xchg
jns
push
push
nop
add
jg
leave
push
gs
sbb
data16
jne
cli
fdivrs
mov
fsubl
adc
sub
aas
and
loope
movsb
pop
cmp
inc
mov
or
and
push
add
iret
mov
int3
nopl
pusha
cs
pop
je
mov
loop
lcall
adc
hlt
adc
sbb
call
ds
outsb
mov
pop
mov
push
add
ljmp
push
hlt
lds
jnp
hlt
les
cmpsb
xor
sub
add
add
cmp
and
fwait
push
in
dec
pop
push
notl
cmp
or
mov
mov
xor
jmp
nop
jp
inc
sahf
sub
jns
aaa
int3
or
or
xchg
cmp
aam
mov
in
mov
and
int3
mov
xlat
repnz
jae
adcl
divb
inc
mov
sbbb
shlb
xor
js
mov
stc
adc
pushf
sub
mov
jno
aaa
std
xchg
xchg
inc
enter
dec
jmp
out
aas
xchg
cmp
jnp
adc
inc
ss
jg
dec
aam
lods
sbb
outsl
jnp
data16
adc
add
push
push
lret
lret
mov
lock
out
push
push
inc
dec
mov
push
mov
ds
dec
repnz
xchg
mov
add
mov
fdiv
int3
imul
inc
cmp
int
pop
ret
jmp
xor
add
in
decl
xchg
mov
jg
sub
xor
xor
sub
add
pop
cs
mov
inc
scas
out
into
push
out
call
out
add
mov
push
dec
mov
and
out
daa
data16
sub
push
insb
add
jae
xor
push
pop
sub
pop
test
add
icebp
mov
or
rcr
rclb
inc
mov
or
inc
cmpsb
fs
pop
es
testl
push
imul
dec
pop
scas
xorb
cltd
push
and
lret
sbb
ds
cmpsb
repnz
in
hlt
popa
jae
fsubr
pop
inc
outsl
add
enter
jno
inc
fdivl
mov
push
in
mov
and
mov
lea
ljmp
jno
sbb
mov
cmp
inc
lret
jbe
or
xor
out
add
pop
push
stos
mov
aad
and
sub
mov
push
repnz
fisubrl
clc
and
mov
je
xor
int
lahf
add
js
dec
fucom
adc
fdivs
mov
cmp
pop
test
leave
cmpsb
les
push
fidivl
daa
sbb
push
jecxz
call
mov
loop
cmp
mov
or
rcrl
dec
jecxz
dec
pop
loop
pushf
jns
mov
aam
cmpsl
push
inc
or
adc
repnz
mov
and
xchg
dec
xchg
jmp
cmp
push
inc
jae
les
mov
stos
fwait
sub
jl
aad
outsb
stc
scas
ds
pop
xor
or
shrb
mov
fnstcw
jge
or
cmp
cmp
xor
mov
ss
add
pop
in
mov
mov
adc
clc
inc
jecxz
pop
fucomip
jae
aad
lahf
stos
iret
mov
cltd
insl
call
adc
or
nop
das
pop
add
adc
mov
push
out
cmpsb
sarl
js
shrl
lret
push
jne
test
into
daa
sbb
pop
test
xchg
cmpsb
sahf
xor
cltd
and
andl
es
fwait
loope
mov
je
and
out
xchg
dec
and
insl
cld
or
dec
in
cld
lds
mov
repz
jae
jl
sub
jmp
enter
enter
sahf
jmp
enter
cs
aad
mov
mov
mov
sbb
cmp
or
inc
pop
jae
loop
rcrl
mov
loopne
mov
sahf
mov
xlat
inc
sub
mov
scas
jae
lods
mov
mov
dec
xor
arpl
adc
jb
sub
adc
dec
int
inc
push
push
imul
int
cmpsl
inc
faddl
fs
mov
jle
mov
jge
add
movsl
sahf
shr
xchg
jnp
std
lods
pop
pop
out
les
lods
push
pop
orb
push
aad
push
sbb
test
mull
ret
jle
out
loope
test
fsubr
xor
das
inc
jb
data16
test
inc
jns
xchg
faddl
adc
fcompl
jno
adc
imul
and
iret
mov
pop
mov
loopne
jns
mov
cmc
cs
pop
out
mov
jae
mov
sub
sub
aad
out
xchg
inc
cmpb
jmp
jb
loopne
adc
jnp
or
ljmp
push
mov
addb
out
pop
push
mov
add
shlb
loopne
fcomip
std
push
jg
adc
imul
mov
out
mov
xlat
pop
shrl
hlt
sub
test
out
add
add
xor
sub
fwait
or
int3
je
pop
cmpsb
bound
jb
inc
dec
adc
mov
jmp
jecxz
loop
bound
pop
cli
jle
fdivrl
push
das
dec
ret
hlt
jo
jmp
in
repnz
push
mov
or
insb
pop
adc
pop
jl
and
icebp
jle
lea
repz
jmp
rorl
testl
mov
cmc
mov
and
mov
adc
sub
or
push
ret
incl
daa
jge
popa
in
sub
jg
cli
fstl
sub
pushf
jnp
push
js
mov
mov
adc
xchg
ret
jp
scas
inc
lock
xor
ret
jp
fs
stos
testb
stc
mov
insb
jle
xchg
pop
dec
je
bound
inc
leave
int
pop
mov
mov
mov
orl
sub
push
push
xor
pop
movsb
sub
orb
fnsave
rorl
or
lcall
mov
stos
imul
loop
sub
or
jmp
sbb
mov
jns
mov
mov
repnz
push
lret
add
push
repnz
or
jmp
push
xchg
cs
and
repz
test
in
and
roll
or
hlt
xor
add
xor
adc
inc
xchg
and
daa
mov
hlt
je
inc
mov
pop
inc
cmp
inc
popf
out
lret
pop
dec
movsb
add
lea
les
insb
xchg
sbbb
dec
out
lods
stc
xor
xor
daa
addl
into
adc
and
cmc
pushf
imul
pop
push
cld
mov
daa
addr16
pusha
lock
cs
cld
pushf
testl
mov
mov
test
jmp
jnp
jge
insl
sub
aam
jmp
aad
xor
mov
mov
and
int
sub
outsb
sbb
sbbl
push
pop
push
pop
inc
imul
ret
mov
loop
push
std
in
imul
sub
mov
push
sub
ret
jb
fcmovu
mov
inc
pop
hlt
pop
fists
pop
sub
and
mov
stc
lea
or
pusha
clc
jbe
lods
inc
mov
jg
enter
mov
lahf
stos
sbb
jne
xchg
jmp
mov
sub
sti
xchg
sbb
or
adc
pop
leave
sub
mov
adc
adc
cmpl
xor
mov
dec
mov
pop
push
cltd
jbe
inc
fcompl
clc
xchg
arpl
mov
rclb
ss
repnz
fiaddl
outsl
push
in
xchg
pop
or
sbb
cmp
jecxz
into
out
gs
cmpsb
fcom
mov
pop
test
in
pop
push
jb
ffree
or
adc
rolb
aad
jae
add
add
nop
fnstenv
push
or
mov
inc
add
imul
inc
pushf
jb
xchg
sub
fwait
sub
enter
jb
ja
pop
outsb
mov
xchg
pop
mov
pop
mov
or
lds
addb
stc
test
pop
out
int
xchg
mov
mov
dec
mov
jae
and
rorb
add
sbb
rorb
xlat
push
mov
lods
dec
rcl
lret
mov
push
jno
mov
mov
xchg
test
in
das
lock
jl
shr
mov
push
add
sbb
or
in
adc
ss
imul
jecxz
mov
mov
push
sbbb
jno
das
test
pop
adc
pop
add
or
mov
mov
mov
insb
imul
in
pop
xor
data16
arpl
test
mov
adcb
loopne
jb
in
or
lcall
loopne
jno
xchg
mov
mov
jb
dec
mov
leave
fnstcw
nop
sub
xor
sub
xchg
jl
pop
popa
mov
jle
xchg
mov
fisttpll
mov
inc
orl
push
push
js
cmp
sarb
addb
shrb
movsl
push
fcompl
lock
cld
stos
inc
rol
cwtl
mov
enter
pop
das
cmovno
das
shrb
xor
jge
add
test
mov
daa
xchg
mov
adc
and
je
lret
xor
arpl
push
rorb
xchg
in
ficompl
cmp
inc
scas
pop
xor
loopne
xchg
mov
rol
sbb
xor
out
push
cwtl
mov
add
pop
mov
sbb
inc
test
repnz
dec
push
aaa
cli
xchg
pop
xor
xor
sbb
sub
push
les
and
adc
dec
dec
pop
xchg
ss
fs
cmpsb
pop
push
lret
pop
mov
jp
cmpsb
jb
inc
push
push
inc
sub
aas
sti
or
icebp
lcall
dec
jne
lds
or
mov
push
popa
popa
pop
call
or
sarb
mov
shl
hlt
pop
adc
mov
jae
sub
cli
mov
mov
aam
bound
cmp
pop
in
fxch
push
dec
sub
mov
sub
fnstenv
dec
cmp
xor
stc
enter
sbb
lds
dec
jne
dec
jecxz
sbb
jb
ret
hlt
call
dec
dec
pop
xchg
dec
cmpsl
daa
ds
lods
cmp
mov
fmuls
fists
pop
scas
jecxz
dec
inc
or
adc
push
jnp
cmp
je
call
sub
fisttps
push
std
push
mov
mov
jb
mov
jle
pop
flds
jb
jns
sbb
xlat
imul
jnp
into
in
xor
out
mov
pop
outsb
mov
push
in
mov
mov
int
pop
out
shlb
into
cmc
shlb
aas
add
xor
stc
jp
mov
lcall
cld
in
xor
push
or
sub
mov
mov
test
lret
stc
mov
mov
test
cltd
test
test
test
lret
repnz
daa
inc
sub
add
mov
js
cmp
mov
add
das
mov
fnsave
sti
mov
subb
sti
fwait
jg
subb
jbe
jno
insl
cmc
xchg
sub
jg
xchg
adc
movsb
jae
fldl
adc
inc
lret
out
pop
mov
xchg
and
mov
push
sti
jle
cli
pop
rorb
iret
and
sti
insb
xchg
mov
and
orl
xor
bound
and
stos
test
xchg
mov
std
roll
das
in
addr16
icebp
andl
xor
cld
cmp
xor
leave
lods
enter
dec
shll
inc
xor
jo
cmp
pop
jns
inc
and
pop
xchg
leave
ret
adc
mov
jae
push
inc
decl
xorl
push
cmc
mov
scas
cmp
mov
ja
or
push
and
or
jp
imul
sti
xchg
stos
pop
inc
inc
push
out
add
insb
lods
dec
test
add
xchg
mov
pop
sahf
pop
clc
daa
sub
jecxz
push
push
fisubl
outsl
cmp
popa
xor
sbb
clc
and
jbe
das
push
jmp
lods
inc
add
xchg
div
jmp
sub
sbb
inc
fstps
aad
mov
adc
mov
xchg
lret
iret
cmp
jbe
cmp
jnp
cmpsl
mov
popa
dec
push
or
add
sti
jle
insb
sar
dec
pop
stos
jo
inc
sti
pushf
out
gs
push
push
mov
dec
push
push
adc
enter
add
or
xchg
or
xor
and
lds
push
cmpsb
push
dec
or
xchg
ljmp
and
xchg
mov
sti
bound
mov
xchg
stos
ds
push
add
and
mov
es
clc
jb
sub
shr
adc
mov
jmp
cld
fdivl
divb
sbb
inc
pop
inc
mov
push
ret
pop
mov
mov
leave
pushf
xor
out
pop
loopne
push
xchg
jbe
movsb
and
ljmp
lods
pop
scas
sbbl
sbb
push
mov
pop
fisubs
mulb
enter
xchg
rcrb
cltd
push
dec
pop
loope
mov
add
adc
pop
out
idivb
lea
sti
mov
push
clc
push
shrl
mov
negl
and
lahf
lret
mull
inc
mov
adc
daa
inc
adc
ja
out
adc
pop
mov
and
outsl
jno
movsb
scas
nop
es
pusha
push
xchg
mov
dec
adc
scas
mov
ficoms
adc
stos
and
and
aad
jae
repnz
xlat
push
nop
and
or
pop
stos
jge
inc
mov
cmp
insb
popf
jns
inc
lock
out
in
dec
or
cmp
test
and
push
and
xchg
psubusw
cwtl
lea
sbb
sub
fdiv
xchg
arpl
push
arpl
xchg
mov
xchg
stos
adcb
mov
add
iret
cmp
dec
pop
loop
mov
shll
inc
mov
mov
jo
cmp
mov
pushf
push
mov
lahf
cmpsb
fdivp
rcll
mov
cmp
ds
pop
mov
cmpsb
mov
aad
push
leave
cld
and
lock
xchg
cli
jl
mov
iret
pop
sti
pop
mov
bound
shrl
mov
pop
xor
incb
das
in
rcrb
daa
pop
sub
test
push
test
pop
cmc
das
inc
or
pop
cmp
sub
push
and
sbb
es
pop
pusha
push
and
fistl
shll
and
mov
repz
loop
adc
push
orl
dec
push
test
adc
mov
pop
call
jne
bnd
mov
add
aaa
jmp
xor
mov
jne
gs
scas
popf
test
lea
mov
cli
xchg
sbb
jg
mov
adcl
push
cmpsl
mov
es
xlat
mov
hlt
mov
mov
daa
inc
gs
loope
mov
mov
mov
sub
push
cld
and
imul
inc
insb
rcrb
fucompp
rcrl
pop
inc
lock
aas
sbb
push
fstps
adc
cmp
aas
pusha
rsm
jns
push
jl
ret
pop
ret
pushf
sbb
js
fnstenv
xchg
in
pop
pusha
push
mov
jnp
cmp
jno
test
or
addr16
adc
aad
in
and
push
push
das
mov
xchg
xchg
je
js
jb
inc
gs
testl
loope
xchg
jmp
sbb
jae
loope
xchg
ds
lcall
lods
mov
pop
hlt
lods
dec
sub
sti
in
pop
sbb
stos
add
inc
cmpsb
test
push
ret
xor
xor
insb
call
cmpsl
insb
fadds
je
cmp
dec
out
xorl
in
out
insb
jnp
mov
jg
imull
cmp
inc
pop
sbb
fucomp
cli
push
xchg
imul
aaa
hlt
lret
jecxz
aam
popa
add
ret
adc
inc
fsub
js
jbe
or
int3
and
js
arpl
xor
sbbb
sub
xchg
mov
add
nop
lods
push
add
ds
ficompl
pop
add
pop
nop
lcall
mov
or
jb
mov
mov
xor
jbe
outsb
add
jb
pop
jb
add
ror
mov
adc
pop
xor
in
jno
adc
or
dec
mov
or
sahf
addr16
dec
jmp
lret
out
sti
inc
rorb
sarb
iret
adc
test
sub
mov
jmp
adc
add
mov
push
out
pop
cmc
sub
pop
sahf
mov
orl
cwtl
push
gs
imul
push
mov
in
insl
fcmovbe
lret
pop
sbb
ljmp
addr16
inc
pop
ret
jae
lea
push
sbb
pop
jge
cmp
xor
fnstcw
mull
mov
je
and
and
repz
jae
leave
sar
sbb
mov
inc
sbb
push
loopne
jne
shll
loopne
negb
lds
cmp
stos
js
pop
filds
mov
mov
data16
push
fmuls
lahf
push
mov
repnz
mov
in
movsb
cmp
xchg
fnstenv
inc
and
mov
and
sbb
data16
aaa
inc
outsl
or
in
xor
in
sub
cmp
jmp
loopne
cmp
add
mov
outsb
jp
xchg
sub
cltd
cmc
dec
inc
jecxz
mov
lock
stos
sbb
mov
mov
gs
into
arpl
arpl
mov
fiadds
scas
out
test
push
scas
and
sti
shlb
rorl
ja
xchg
test
lret
sti
fiaddl
sti
push
nopl
adc
pop
add
push
mov
pop
cwtl
lds
cltd
dec
inc
jl
int
loopne
and
xlat
pop
jecxz
stos
or
movsl
sbb
out
or
jbe
push
andl
jle
cmp
test
test
add
adc
xchg
cmp
fsubrl
sbb
pop
mov
push
je
jp
or
dec
mov
and
inc
clc
sub
adc
icebp
adc
cwtl
inc
push
pop
jbe
push
ss
shr
aaa
dec
hlt
mov
mov
cmp
sbb
fbstp
loop
jle
ss
mov
mov
aad
inc
cmp
in
testb
fimuls
dec
lret
sub
add
mov
rcll
fsts
pop
cs
fsubr
sub
clc
push
or
or
mov
or
push
pop
daa
xchg
push
sub
das
and
pop
jb
sub
dec
mov
popf
jmp
scas
sub
xlat
outsb
scas
push
mov
ljmp
mov
jp
loopne
les
add
xchg
das
xchg
pop
jmp
int3
pop
inc
cmc
mov
imulb
leave
shrb
xor
mov
jns
add
enter
jg
dec
mov
jmp
jno
xor
pop
adc
jp
sub
pushf
mov
xchg
ds
and
or
inc
loop
add
sub
pusha
addr16
loope
enter
mov
add
xchg
mov
lock
jg
add
xchg
and
popf
jne
pop
cmpsb
mov
and
sbb
dec
loope
sub
pop
cmp
subb
push
and
xchg
fsubs
fcoml
mov
fisubrs
mov
fidivl
nop
sbbl
dec
test
ss
fs
and
inc
sbb
imul
lods
lods
cs
mov
in
push
call
xor
xor
xor
xchg
sub
mov
mov
test
hlt
dec
mov
adc
addl
popa
sti
mov
insl
mov
jo
sahf
outsb
sub
sub
mov
adc
das
jnp
push
jle
andb
test
xor
jae
cmp
mov
pop
jbe
push
les
insl
imul
adc
fwait
adcl
jecxz
xchg
sub
scas
add
mov
lahf
cli
test
mov
xchg
ds
inc
xchg
xor
imul
int3
ret
popf
std
xchg
iret
jecxz
mov
sub
pop
push
sub
into
in
imul
fmull
push
fisttpl
add
test
and
cmp
mov
xor
popf
xor
inc
popf
sub
sbbb
jl
aam
pop
and
mov
gs
push
pop
xor
xor
xlat
adc
lret
cld
movsl
retw
test
add
lds
imul
ds
popf
ja
movb
mov
popa
or
fs
cmc
adc
iret
xor
pusha
and
ljmp
xchg
and
loopne
dec
ds
mov
aad
rclb
pop
ljmp
in
mov
sbb
xlat
or
xor
mov
jp
mov
xchg
add
rcrl
movsl
mov
mov
lds
stos
loopne
popf
outsl
enter
nop
xchg
mov
jb
jb
pop
addr16
push
lret
icebp
or
mov
icebp
loop
mov
fcoml
or
xchg
sbb
test
mov
adc
mov
cmc
mov
ret
adc
lcall
das
lock
loope
pop
or
in
cmpsb
push
mov
mov
push
ljmp
insb
cmp
inc
lret
pop
jb
push
aaa
out
popa
sbb
jo
sbb
pop
subl
pop
in
jns
mov
sub
out
jae
mov
out
clc
loope,pn
xchg
and
dec
aad
in
lea
movsb
insb
and
pop
repnz
pop
imul
pop
mov
push
divl
inc
shrb
std
lcall
std
xchg
in
inc
push
in
std
xchg
pop
loop
pop
xchg
aam
insb
and
mov
push
jo
lahf
jmp
mov
pushf
movsl
cmp
push
repz
dec
lcall
xchg
stos
mov
jae
xchg
push
pop
addr16
sub
ret
xlat
mov
ja
adc
gs
sub
cmp
and
aad
data16
inc
int
jmp
cmp
jecxz
xor
cmp
cmp
push
inc
fmull
sub
mov
test
cmpsl
sbb
sub
jecxz
das
addr16
ds
mov
jne
divl
push
push
bound
jecxz
hlt
and
mov
cs
movsl
insb
sti
xchg
mov
dec
insl
insl
jg
push
cmpsb
test
lods
push
bound
dec
mov
pop
icebp
mov
shrb
jg
push
insb
jle
mov
jl
aas
mov
lods
inc
test
mov
std
mov
cmp
stos
dec
pushf
pop
rcl
out
cli
dec
in
sbbl
int
push
fisttpll
sti
fwait
stos
mov
cmp
arpl
ret
adcl
cmpsb
xor
rcrl
jmp
rorb
lds
ljmp
out
push
cmpsb
clc
fdivp
cmpsb
fidivl
les
fcmovbe
andl
jmp
mov
jb
push
xlat
pop
xlat
mov
and
cld
or
adc
mov
stos
and
movb
jmp
add
or
push
stos
test
repnz
push
cmp
mov
pop
push
lock
lea
sahf
in
and
mov
jp
mov
xchg
lcall
push
mov
rcrl
movsb
cmp
into
fidivs
stc
rclb
jmp
shll
mov
adc
notb
fwait
insl
cmp
pop
rorb
adc
fucomi
sbb
cld
inc
jnp
inc
cmpsl
rorl
mov
movsb
sub
out
int3
pop
cmp
push
lahf
cmp
mov
cmp
roll
push
mov
aas
daa
fldt
xor
and
popa
aam
inc
push
pop
cmc
add
les
lret
imul
lock
xlat
push
adc
aas
in
push
call
aam
daa
add
pop
sub
jo
scas
lret
jns
sahf
daa
adc
rcl
mov
adc
into
fdivs
mov
sahf
pusha
fidivl
jne
xchg
outsb
add
sub
adc
cwtl
arpl
jge
fwait
test
dec
sbbl
mov
xchg
lahf
cmc
or
rorb
mov
push
arpl
push
xor
test
addr16
mov
and
jb
imul
mov
push
fsubr
test
mov
jg
mov
outsl
xorl
push
movsb
insb
push
in
xorb
adc
rcll
xor
outsb
nop
mov
and
sub
sti
jge
fisttpl
scas
bound
mov
mov
cmp
add
fcmovne
adc
inc
mov
cmp
xchg
sub
xor
mov
adc
subb
jecxz
addb
mov
addl
sbb
std
mov
outsl
jmp
xchg
add
push
out
shll
into
mov
in
test
out
scas
inc
daa
adc
rorl
sub
push
aad
mov
sub
subb
mov
cmpsl
mov
mov
loopne
adc
fsts
sbb
mov
jecxz
jo
sbb
inc
imul
sub
int
sub
fdivrl
movsl
and
xor
mov
bound
jp
add
in
out
sbb
lds
mov
subb
daa
sti
clc
push
dec
pop
sbb
and
test
jg
js
mov
loope
dec
cmp
stc
insb
stos
loope
fmull
aad
mov
fisubl
decl
arpl
adc
lods
xor
mov
or
jnp
push
popf
mov
outsb
add
das
sbb
dec
mov
ss
lret
ret
or
push
aad
addl
cmp
sub
sbb
jae
out
test
cmp
push
dec
mov
shlb
inc
out
add
testb
notb
jmp
ds
sbb
sub
js
xchg
fcoms
lcall
scas
dec
xchg
clc
aaa
inc
jb
mov
shl
and
jmp
pop
sub
and
jmp
test
mov
hlt
mov
mov
cltd
je
xchg
dec
fnstenv
xor
aam
pop
clc
ret
pop
sbb
test
jb
xor
subl
adc
xchg
xchg
xor
std
fsubs
rcll
adc
fs
sbb
scas
mov
stc
mov
into
mov
cmp
pop
dec
and
xchg
push
fnstenv
or
aaa
mov
dec
and
leave
shll
sbb
push
add
ret
movsb
adc
mov
in
mov
sti
push
outsl
sub
inc
cs
test
sub
sbb
cmp
sbb
inc
insb
scas
mov
flds
stos
jbe
or
adc
sub
insl
adc
out
sbb
lds
jns
sbb
add
pop
dec
enter
cmc
mov
call
dec
in
test
pop
add
and
and
add
push
shrb
adc
xchg
out
lock
cltd
out
divl
and
xchg
jl
adcb
andb
movl
andl
lock
ja
fimuls
jne
lcall
and
aaa
push
add
lea
mov
shll
cmp
ss
fnstcw
cmpsl
inc
data16
aas
sub
mov
xorl
hlt
push
dec
call
or
inc
adc
mov
gs
dec
inc
fnstsw
rcrb
pop
cmc
dec
and
jbe
outsb
push
insl
xor
movsl
repnz
hlt
push
xchg
adc
lret
xor
arpl
lds
mov
sbb
mov
out
xchg
mov
addl
lods
inc
test
roll
ds
xor
lret
out
mov
gs
pop
scas
inc
xlat
mov
and
das
jo
leave
and
pop
dec
leave
and
pop
pop
sarl
test
fidivrl
mov
pop
ret
xchg
inc
shl
ja
fs
ss
lds
pop
mov
sub
and
xchg
mov
mov
sub
sbb
fs
scas
jbe
loopne
jmp
mov
sarl
pop
lahf
pop
cmp
fxch
les
shl
imul
mov
das
xchg
push
hlt
in
jecxz
sbb
into
dec
movsb
cli
out
push
xchg
sub
test
hlt
mov
mov
ret
repz
dec
filds
out
cbtw
in
mov
fistpl
jmp
stos
jmp
jle
mov
mov
aam
and
les
test
aas
gs
fadds
movb
push
dec
test
add
sub
mov
sub
mov
out
inc
dec
dec
xchg
pusha
inc
xor
jb
cmpb
pop
push
andl
mov
int
ss
lock
das
out
add
push
push
dec
adc
lcall
jge
mov
adc
imul
out
cmp
mov
push
and
decl
inc
sbb
outsb
jmp
sub
aaa
cmp
in
jle
iret
xchg
xlat
add
push
push
test
sub
and
pop
jmp
out
mov
and
imul
addr16
push
call
notl
xor
jno
pop
in
orb
lcall
dec
out
addb
xchg
xor
push
into
ret
or
pop
notl
sbb
sbb
mov
add
cmpsl
aas
sub
ret
pop
xchg
xchg
bound
or
sahf
outsl
xchg
mov
dec
cs
mov
push
cmpsl
ljmp
out
movsb
cmp
cmp
xchg
shrl
jg
dec
jno
loope
or
add
and
imul
xor
roll
icebp
adc
cwtl
dec
and
fstpt
pushf
lret
cmp
mov
pop
je
sbb
mov
into
enter
lret
call
dec
sbb
enter
test
and
and
and
mov
cld
mov
outsl
fwait
mov
stc
sub
jno
xchg
lea
pop
repnz
movsl
xchg
mov
cli
sub
nop
fwait
xchg
iret
push
jne
nop
push
in
in
loopne
inc
xlat
cmp
sbbl
sub
or
push
dec
fs
cmp
sub
std
and
pop
into
mov
shrb
push
xor
lds
shlb
shl
add
cmp
fdivrl
mov
stc
adc
cltd
pop
and
dec
xor
repz
jp
nop
cmp
sub
dec
sti
sub
aam
jbe
lahf
cmpsl
bound
shll
jl
cmp
insb
aaa
inc
mov
cmp
popf
jle
cmpl
les
mov
movsb
lret
pop
pusha
shlb
add
or
icebp
cld
push
fs
cmp
xchg
lret
mov
subl
cmc
or
ljmp
out
mov
push
loope
adc
icebp
or
xor
cwtl
add
mov
inc
cmpsl
stc
add
cmp
repz
cmp
or
add
adc
jne
sbb
popf
in
fwait
js
adc
out
enter
andl
in
daa
sbbb
aad
in
lcall
fildll
loope
movsl
add
orl
sub
dec
jg
mov
lahf
subb
inc
loopne
in
test
jmp
dec
mov
mov
xchg
arpl
xchg
mov
cmp
jecxz
inc
adc
mov
ds
lock
or
dec
mov
pop
inc
cld
dec
lock
mov
ret
arpl
nop
daa
out
push
call
sahf
push
bound
scas
jbe
insl
ljmp
ds
cmpsb
sub
mov
mov
push
fwait
cmpsl
jle
daa
int3
lret
lds
sub
or
fidivl
stc
loope
stc
sbb
in
inc
or
mov
ljmp
loopne
fmul
pop
push
xchg
adc
mov
pusha
test
mov
adc
inc
pop
push
mov
add
cld
pop
iret
inc
fiadds
orb
mov
cmp
rcrb
push
popf
lods
xchg
stc
test
mov
cmp
les
mov
fdivl
js
shlb
test
out
jmp
in
aad
pop
mov
dec
xchg
fs
cs
jno
xchg
pop
push
cld
jne
or
insb
or
mov
sbb
rorb
aaa
fwait
cmp
jge
stos
mov
adc
adc
mov
mov
inc
mov
aas
mov
pop
mov
test
lret
imul
aad
cmp
mov
mov
ret
daa
adc
push
jne
stos
pop
jo
sub
in
push
daa
push
xchg
imul
sarb
inc
dec
adc
xchg
mov
mov
aam
add
in
pop
push
leave
xchg
in
arpl
lods
rcll
inc
out
xor
cs
lock
push
arpl
movsl
push
inc
or
xor
cmpsl
mov
pop
adc
insl
dec
inc
jp
fiaddl
insl
clc
sbb
cld
mov
xchg
jge
movsb
repnz
mov
and
mul
cmpsw
adc
add
push
cmp
pop
hlt
inc
in
cmp
xchg
jnp
or
mov
hlt
and
sbb
or
cs
jo
lcall
xchg
pop
sub
nop
mov
push
stos
lcall
repz
movsb
push
fbstp
lds
stos
fiaddl
sbb
add
jl
gs
jge
push
push
push
xchg
xor
out
push
out
in
inc
or
outsb
lds
dec
loopne
in
rclb
xor
sub
inc
push
flds
mov
cmp
pop
mov
mov
cmp
xlat
icebp
js
outsl
cmp
in
push
cmpsb
push
mov
das
xchg
cli
xchg
or
mov
cmpsl
push
xchg
mov
pop
cmp
push
add
hlt
xor
aas
inc
jno
and
insb
incl
mov
push
cmp
push
sub
inc
xchg
dec
fdiv
stos
inc
test
pop
jg
or
je
sub
jbe
fadds
pop
dec
lea
inc
stos
pop
popf
xor
lret
into
icebp
jp
flds
dec
icebp
enter
clc
lods
stos
loope
pop
inc
push
ss
test
clc
cmp
pusha
ret
aas
int
xor
adc
and
xchg
mov
fstpl
sub
out
notl
xchg
jg
jno
int3
arpl
movsl
cmp
dec
mov
pop
leave
and
inc
bound
sarl
push
mov
pusha
fiaddl
push
dec
std
jnp
test
fdivl
adc
cli
xchg
add
out
mov
push
aaa
stc
or
test
cwtl
daa
mov
ret
jnp
lds
fwait
loope
xchg
mov
xchg
sbb
cmp
cmp
mov
xlat
jb
mov
cmp
mov
mov
into
sub
mov
out
inc
sahf
in
jns
cmp
imul
inc
jecxz
mov
inc
fistl
cmp
dec
sarb
push
out
insb
cli
cltd
adc
adc
rcrb
add
cmc
xchg
cmpsl
dec
loop
sbbb
or
clc
dec
sbb
hlt
icebp
cmp
or
mov
mov
mov
pushw
jbe
pop
jmp
cmpsl
add
mov
lds
adc
cmpsl
inc
int
loope
jmp
push
in
scas
std
or
cmp
jae
pop
add
in
test
mov
mov
nop
cld
mov
add
and
mov
pop
cs
shrl
dec
jmp
adc
imul
xchg
imul
jo
and
insb
outsb
pop
repnz
mov
outsl
jmp
pop
push
dec
cmp
mov
sub
aaa
adc
push
lret
repnz
pushf
mov
in
cmp
loope
jne
add
mov
je
in
add
sbb
xor
ret
leave
scas
mov
aad
hlt
fbld
jne
dec
xor
aas
lds
leave
int3
popa
icebp
jecxz
cmp
cmp
or
rcrb
out
repz
cmc
mov
fldl
jbe
pushf
adcb
cmp
movsb
jnp
jmp
lds
xchg
inc
sbbl
call
mov
ficomps
bound
je
repnz
scas
jge
loopne
xchg
jae
add
xchg
xor
and
testb
add
les
loopne
gs
repz
mov
cmp
sahf
adc
push
in
lock
loopne
fucomip
xchg
fnstenv
fisubs
xlat
inc
xor
pop
push
inc
xchg
repz
test
xchg
adc
push
lods
int3
fisttpll
jge
jmp
sub
or
and
inc
jns
cmp
pusha
pop
imul
lods
mov
pop
shlb
adcb
out
sub
mov
inc
sub
es
cli
ja
test
ja
sahf
inc
rcr
or
mov
mov
xchg
clc
decb
adc
lret
add
lret
sbbl
jl
cli
sub
push
jns
mov
ret
in
jmp
daa
imul
xorb
jg
push
or
xor
daa
and
mov
mov
rclb
mov
fimuls
lea
fistl
mov
push
nop
scas
hlt
mov
jg
lods
inc
adc
fnstenv
mov
and
adc
in
adc
inc
shl
mov
lock
ds
data16
arpl
sti
dec
insl
inc
inc
aas
lret
sahf
and
adc
or
lock
cmp
stos
push
mov
push
mov
in
scas
sbbb
insl
xlat
xor
inc
jnp
dec
lea
loopne
and
inc
add
js
stos
xor
lret
ss
mov
jae
mov
cli
les
gs
mov
jnp
jmp
js
inc
and
jo
lret
cmp
out
shr
xor
jns
arpl
inc
loope
mov
mov
or
push
adc
mov
xor
dec
idivb
xchg
sbb
mov
ret
lret
mov
repz
mov
repnz
inc
scas
inc
fsubr
sbb
pusha
idivl
in
mov
fisubl
lret
push
in
cld
pop
imul
out
mov
and
inc
fisttpll
stos
fs
xchg
xor
shr
idivl
out
pop
jo
cltd
ss
add
mov
cmp
int3
gs
xchg
sti
daa
adc
add
and
je
loope
loopne
jmp
push
mov
and
mov
hlt
je
jecxz
adc
xchg
xor
in
cld
test
jge
fsub
fildll
popf
inc
adc
aaa
pop
cli
push
aaa
mov
inc
xchg
in
in
mov
insb
xchg
roll
lcall
insl
insl
jbe
frstor
xlat
pusha
or
pop
shl
fiaddl
adcb
sub
hlt
insl
adc
inc
inc
inc
shl
add
push
push
mov
out
jae
in
cmpsl
aam
push
mov
and
hlt
mov
imul
xchg
jb
les
call
mov
mov
push
dec
int
jge
repz
cwtl
xor
fbld
shrb
xchg
out
mov
jp
data16
mov
in
inc
enter
insb
push
xor
jle
mov
cmp
outsb
push
or
fistps
test
cmp
mov
decl
lahf
rcll
sbb
lods
or
jmp
push
and
aaa
pop
and
test
test
jno
xor
pop
mov
andl
imul
out
pop
pop
push
mov
pop
repz
add
in
mov
add
jp
pushl
mov
sbb
ds
das
out
jo
hlt
pop
mov
adc
shrl
mov
scas
ja
jnp
lds
or
adc
push
mov
in
mov
mov
dec
mov
popa
into
adc
push
lea
cli
lcall
mov
ja
int3
xchg
push
cmp
iret
fbld
mov
lods
add
push
into
pop
and
int3
add
ss
jne
pop
ds
cwtl
cmp
stc
ret
fistpl
mov
sbb
cmp
inc
and
into
pop
mov
arpl
nop
shl
add
aas
sbb
adc
es
addl
pop
in
push
mov
cld
inc
insl
push
sub
push
add
arpl
cltd
pop
sub
sbb
lock
stos
dec
rcrb
pop
jnp
or
xchg
clc
leave
xor
int
add
cli
mov
jno
push
mov
sbb
popf
repnz
inc
popf
and
ss
jg
sar
adc
movl
adc
jl
stos
call
xchg
xor
jmp
enter
inc
and
pop
push
out
and
adc
jb
test
mov
fmul
mov
ljmp
roll
sahf
add
imul
pushf
mov
bound
cmpsb
ds
inc
mov
xchg
or
imul
mov
outsb
and
cmc
cld
jl
inc
xlat
xor
adc
das
addb
adc
xorl
fmul
adc
popf
fwait
das
cmp
xchg
enter
inc
bound
pop
repnz
push
dec
jge
bswap
sub
out
fadds
fildll
je
sub
or
and
mov
xor
gs
cmpsb
push
cmpsl
stc
mov
xor
pop
sub
jge
inc
dec
sbb
daa
shlb
cmpsl
mov
movsl
pop
lock
stc
or
sbb
dec
xor
inc
ja
out
xor
movsb
scas
sub
ja
xor
push
add
shl
loop
loopne
sub
sub
test
or
lock
xchg
or
or
out
movsl
and
xchg
repz
adc
mov
sub
push
adc
jns
loope
mov
mov
sub
jg
ret
hlt
lock
insl
test
insb
mov
pop
sbb
rolb
fsubrp
stos
popa
push
test
dec
mov
adc
pop
leave
cltd
repnz
ljmp
inc
adc
push
jmp
sub
sbb
ja
cmp
movsb
push
insl
loop
sbbl
adc
movsb
movsb
xor
stos
std
jae
mov
sbb
push
inc
mov
xor
sahf
pusha
pop
leave
push
ljmp
jno
adc
jnp
imul
adc
xchg
js
cltd
pop
ds
jmp
cli
lcall
stos
push
mov
pop
sti
rcr
push
xchg
mov
pop
mov
stos
jecxz
mov
xchg
fidivs
out
inc
loopne
fs
into
les
mov
mov
into
adc
dec
mov
pusha
popf
adc
push
adcb
sub
jbe
sub
push
testb
hlt
dec
pop
les
adc
ficomps
inc
iret
pop
inc
ficompl
xchg
loope
negb
mov
loopne
push
push
xchg
xor
xor
inc
push
pop
sub
loope
andl
inc
mov
fbld
and
test
jp
jno
fisubs
mov
rolb
addr16
mov
stc
int
adc
fisubrl
mov
loope
mov
dec
scas
js
orl
cmp
notl
inc
pop
jnp
add
xor
dec
push
lds
andl
fimuls
inc
lcall
in
xchg
adc
sbb
push
mov
movsl
shrl
test
out
or
addr16
fbstp
fs
xchg
mov
adc
dec
jmp
lods
ds
cmp
mov
push
fwait
ss
addb
aaa
inc
ss
imul
dec
push
xchg
in
fstl
ret
xchg
sbb
fsubp
jmp
iret
mov
mov
mov
call
sbb
pop
fstpt
dec
add
xor
mov
std
cwtl
dec
mov
ret
adc
or
sbb
cltd
sbb
aas
inc
sub
push
fmuls
fcmove
daa
gs
cwtl
scas
push
push
xor
mov
xchg
xlat
or
ret
jge
push
pushf
lods
sahf
pop
loopne
mov
jbe
bound
loopne
dec
popa
clc
jge
sti
dec
xor
jmp
dec
aam
int3
arpl
dec
ljmp
fstpt
dec
dec
shll
jl
push
cmp
lods
mov
cli
test
adc
jae
lods
mov
jp
mov
in
xorl
jnp
ret
fists
pop
adc
mov
xor
ret
pop
mov
iret
adc
fdivl
sbb
inc
sub
gs
xor
xchg
jno
mov
add
test
push
sub
leave
popa
jae
add
xchg
sub
ret
sarl
push
fstpl
add
sub
xor
cmp
add
std
and
mov
xchg
mov
orb
imul
xor
mov
mov
jle
mov
clc
pop
push
stc
lea
out
xchg
les
scas
dec
repnz
mov
jns
xchg
insb
or
xlat
into
lds
fwait
mov
inc
fadds
aas
lock
subl
adc
sub
sub
cmp
or
js
sub
or
add
lret
jno
imul
imul
sbb
jecxz
movsb
lock
and
or
mov
rcrb
rcll
inc
fildl
sub
mov
data16
xchg
sarl
in
insl
and
testl
mov
es
mov
int3
icebp
loopne
les
clc
pop
add
je
jo
mov
movsb
adc
std
inc
pop
and
pop
jg
cwtl
pop
mov
xor
stc
xchg
jge
dec
and
aaa
fstp
push
call
cmpsl
cmpsl
adc
loope
loopne
lods
adc
xchg
xor
ss
js
into
push
mov
jge
cmp
hlt
mov
sbb
ret
mov
adcl
inc
ljmp
subl
xchg
mov
mov
push
dec
ss
aaa
inc
mov
test
jmp
ds
mov
adc
in
out
pushw
fstpt
fwait
lods
cmc
mov
outsb
cwtl
fcmovb
les
test
inc
sbb
mov
ja
and
movsb
cli
jbe
jno
shlb
or
mov
int
mov
leave
push
inc
mov
cmp
rolb
out
int
out
adc
decb
test
outsl
mov
xchg
lret
frstor
xchg
xor
mov
push
cmp
mov
arpl
dec
shrl
add
test
arpl
sahf
pop
push
jmp
dec
dec
fimull
jae
ss
jo
stos
cmpsb
dec
sbb
jg,pn
repz
dec
xchg
sub
ljmp
jg
rcrl
mov
pop
aam
loop
jno
popa
mov
adc
lods
inc
or
lahf
rcrl
jo
mov
cli
push
popf
and
shll
repnz
mov
cmpsb
dec
stc
ss
cmp
out
push
mov
or
ljmp
mov
xor
jno
or
out
dec
aad
pop
dec
fiadds
mov
dec
hlt
ret
inc
sti
popf
hlt
int3
inc
push
outsl
sub
or
dec
mov
sub
jno
inc
adc
scas
xor
mov
sbb
sub
xchg
dec
scas
xchg
push
pusha
rolb
mov
ret
jne
insl
cmp
xchg
icebp
inc
mov
shl
lret
push
bnd
xchg
push
lret
out
jp
sbb
les
js
or
and
outsl
push
lods
cmpsl
sbb
mov
inc
cmp
cmpw
stc
nop
adc
pop
push
lock
xor
xchg
xchg
call
push
mov
pop
mov
inc
mov
jno
push
clc
lret
xchg
xor
adc
test
int3
inc
insl
mov
mov
push
mov
lret
gs
daa
dec
repz
call
jp
leave
push
cld
fcoms
out
in
sub
inc
in
lea
sub
xchg
rcrb
stos
sbb
push
fbstp
adc
dec
xchg
into
movsl
mov
push
lret
xlat
nop
mov
es
into
jmp
inc
test
in
movsl
enter
js
test
mov
cs
cmp
sub
sub
and
add
mov
push
pop
jno
push
mov
test
js
dec
mov
out
mov
push
mov
push
xchg
mov
pop
mov
mov
cs
out
inc
jo
sbb
push
pushf
and
shrb
out
das
out
imul
loope
add
hlt
xor
jle
mov
mov
push
xlat
in
dec
mov
jge
cltd
aad
push
jnp
repnz
pop
scas
add
mov
push
insb
stos
dec
push
orb
or
inc
xor
stos
mov
outsb
push
repnz
add
push
pop
jmp
add
jmp
xor
add
aam
jb
dec
andb
fsubl
test
lcall
or
or
pop
xchg
xchg
icebp
lcall
jg
push
ljmp
and
inc
call
adcb
and
and
pushf
cli
jb
sub
test
gs
shlb
outsl
test
call
ret
push
movsb
inc
cmc
mov
adc
inc
sbb
aaa
notl
pusha
bound
sub
subl
xchg
js
jmp
jno
sbb
sub
cmc
add
lret
pop
or
sti
xor
inc
test
adc
insb
shlb
icebp
cmp
inc
xchg
ja
push
jge
pop
fs
sbb
sbb
mov
in
sbb
scas
iret
fiaddl
cli
popa
orl
iret
jmp
jae
and
test
lock
jns
mov
xor
sbb
sbb
xchg
adc
adc
add
imul
and
movsl
cmpsl
mov
jns
jae
ficompl
sub
aam
lret
pop
scas
inc
jnp
lret
xor
fiadds
lods
cmp
scas
je
mov
mov
mov
push
insb
mov
mov
mov
jne
mov
pop
loopne
rcll
jnp
outsl
lea
and
cs
stos
mov
dec
inc
push
je
push
mov
jmp
inc
mov
mov
sahf
or
lret
bound
xchg
jp
int3
jmp
adc
add
in
sub
mov
ss
leave
add
xchg
ss
sahf
lods
insl
ds
scas
neg
sti
adc
jp
cmp
repnz
std
pop
xchg
push
inc
mov
push
push
push
aam
mov
fdiv
xchg
sbb
jg
pop
es
lahf
ss
fs
xor
mov
lcall
and
jmp
lods
jmp
jp
popf
mov
fwait
out
adc
push
push
popf
cmp
jbe
cs
cwtl
fadds
xchg
cmp
pop
sbb
popl
daa
inc
stos
outsb
sbb
pop
ss
pop
push
and
pop
push
cmp
mov
aam
shrl
andb
stc
dec
test
jns
lds
inc
mov
dec
scas
sub
scas
mov
cmp
mov
mov
gs
and
xchg
arpl
pop
sbb
xor
dec
pop
dec
mov
in
out
xchg
pop
pusha
sub
xor
sbbb
in
and
imul
pusha
adc
out
sbb
enter
daa
dec
or
outsb
repnz
imul
pop
sub
jns
mov
mov
xchg
leave
xchg
cltd
js
iret
xor
and
out
push
xchg
inc
adc
push
inc
jb
fsubrl
mov
mov
cmpb
mov
data16
xchg
hlt
in
cmp
xchg
xchg
lcall
jl
push
jnp
ss
jb
pop
loope
cmp
bound
les
cmc
pop
shlb
lret
jbe
fsubrs
xchg
faddl
lret
js
cld
sbb
mov
call
mov
sbb
cs
push
fdivrl
aam
ds
push
std
in
or
sbbl
dec
aad
lahf
scas
in
mov
and
pop
fists
lock
cs
mov
cmp
imul
aad
seto
jecxz
cmpsl
cmp
cmp
pop
std
mov
mov
lds
xchg
gs
add
mov
jns
stc
out
adc
out
leave
xchg
adc
int3
mov
icebp
cmp
dec
je
jg
sar
repnz
jnp
outsl
mov
lds
mov
cs
inc
mov
push
inc
pushf
ds
repz
push
inc
fisttpll
jmp
pop
imul
sbbl
adc
sbb
int3
xor
push
sbbl
popf
jp
ret
jp
dec
sub
push
ret
pop
ss
and
add
shl
dec
stos
mov
pop
iret
repz
and
sbb
cli
sbb
or
inc
cmc
cmp
es
out
adc
imul
xor
push
faddl
jge
jl
loope
inc
add
inc
les
jle
fwait
mov
cmp
xor
cmp
inc
insl
into
dec
mov
jle
pop
cmpsb
push
xor
xor
ljmp
push
mov
jecxz
mov
fbstp
rcl
cli
icebp
mov
test
loopne
orl
or
test
add
jmp
xchg
xor
or
jge
xor
push
mov
push
sbb
arpl
insl
pop
cmp
daa
lret
mov
dec
mov
push
loop
addl
roll
inc
xchg
or
addb
ret
sarl
mov
shl
add
fs
mov
xchg
pop
inc
and
jnp
inc
jmp
inc
adc
cli
and
dec
push
cmpsl
dec
cmp
fldt
fcomps
mov
test
fucomi
leave
ja
dec
cmpsl
push
sbb
jo
and
pop
fxrstor
enter
sub
add
cmp
mov
push
jp
xchg
xor
aaa
lods
and
inc
bound
xlat
outsb
sbb
mov
or
insl
add
jmp
into
data16
pop
mov
pop
and
loopne
jnp
or
pop
popa
adc
inc
pop
cli
aas
and
scas
and
sub
or
imul
movsb
rcr
aam
in
add
and
ret
cmp
mov
subb
divb
xor
stc
ja
jge
dec
int
pop
mov
xchg
icebp
fsubrs
or
vandpd
adc
inc
xor
push
sub
mov
jg
cmpsl
sub
mov
fistl
out
add
test
lea
arpl
mov
lds
cmpsl
inc
pop
push
adc
notb
xor
inc
add
shl
pop
and
nop
daa
sbb
stos
popa
jl
fstpl
adcl
push
lcall
bound
pop
mov
dec
xchg
rolb
adc
je
sub
or
rcr
fs
cli
mov
pop
cmp
sub
push
sarl
dec
mov
push
shl
nop
mov
jae
aam
mov
mov
mov
jmp
cmp
cs
ss
in
popa
push
mov
rcll
or
dec
movsl
pop
add
arpl
imulb
cmp
ljmp
fidivl
xor
subl
or
aam
in
aad
xor
xorb
xor
fimull
js
leave
mov
fsts
sbb
xor
sub
xchg
sub
cli
mov
sub
std
scas
xor
in
fcoms
jmp
add
scas
or
mov
loope
pop
adc
test
mov
adc
mov
push
add
jl
testl
sub
pop
outsl
cmp
decb
and
imul
xchg
cli
and
pushf
sbb
lds
jae
push
std
and
dec
mov
pop
test
sbb
insl
cmpl
popa
jnp
jae
movsl
lods
sub
sub
push
clc
lods
lods
sub
inc
stos
dec
jle
lahf
out
push
in
sub
mov
inc
lods
inc
lock
push
xlat
sub
pop
stos
or
mov
add
iret
arpl
loopne
data16
xor
add
ljmp
jo
and
sub
add
mov
lock
and
loop
testl
adc
loop
loop
das
ret
ljmp
sub
pop
lds
jecxz
push
fadds
lods
xchg
jmp
or
cmp
push
stos
cmp
push
adcl
movsb
std
xlat
push
and
insl
sub
ret
negl
ror
or
or
mov
mov
lea
insb
cld
sahf
and
lods
sarb
fistl
fs
jb
out
test
mov
insl
mov
adc
inc
loopne
les
arpl
add
daa
push
xchg
ret
add
jecxz
jecxz
inc
push
ljmp
test
sub
pop
movsb
add
mov
leave
add
mov
mov
pusha
out
mov
divb
add
enter
insb
adc
and
xor
dec
mov
jae
xlat
lret
dec
push
out
in
lds
cmp
inc
daa
pop
stos
xchg
sbb
adc
fmull
push
imul
ss
movsl
cmpsb
inc
add
shlb
or
daa
iret
gs
inc
push
out
lds
dec
out
jbe
pop
addb
test
gs
xchg
mov
cmpsb
xlat
enter
cld
xchg
jb
in
call
aaa
dec
popa
jmp
mov
lret
xor
sbb
movsl
jp
dec
movsl
andb
xchg
je
dec
mov
inc
sahf
adc
cmp
xchg
jge
xchg
mov
insb
mov
cmp
push
jp
out
jae
mov
dec
and
inc
dec
cmpsb
push
and
inc
xchg
sbb
xlat
jecxz
xor
sbb
test
mov
pushf
leave
inc
adc
out
pop
pop
mov
push
sbb
or
jecxz
popf
xor
mov
inc
bound
push
sub
movsb
inc
movsl
mov
das
out
in
xchg
pop
add
and
decl
loope
rorb
jo
or
inc
cmp
xchg
jmp
int
jnp,pt
dec
test
or
cwtl
jno
pop
ret
aas
sbb
lock
cmp
test
xor
pop
push
push
jp
add
push
mov
pop
xchg
xchg
in
or
arpl
fucomip
cwtl
mov
fdivr
jge
push
call
ret
sbb
dec
adc
mov
lods
and
cwtl
mov
jne
jo
push
test
int3
leave
dec
loopne
in
sti
shll
push
ljmp
sahf
mov
and
ss
inc
xchg
mov
in
jbe
cmp
dec
mov
nop
dec
mov
jb
sub
nop
push
xor
and
and
test
mov
cmp
cmpb
in
test
popa
pusha
fwait
andb
call
aas
dec
in
pop
mov
add
clc
push
sub
adc
shl
cmc
adc
repz
aaa
stos
jp
push
and
sbb
imul
or
add
push
js
xor
jecxz
mov
mov
into
outsl
fsubrs
add
in
xor
push
jae
mov
lods
test
lret
sti
cld
mov
sbb
xorl
rcl
ret
hlt
divb
dec
pop
cmp
mov
mov
dec
pop
push
mov
cmp
add
sbb
add
cmp
push
stos
test
or
add
sti
cmp
xor
in
mov
inc
clc
outsb
or
push
out
cwtl
dec
lret
in
xlat
out
push
mov
insb
ret
jmp
add
das
mul
add
inc
mov
cltd
cli
inc
inc
dec
int3
aaa
clc
ja
cmp
lret
add
sti
imulb
xorb
test
sub
jecxz
dec
lcall
sbb
xchg
enter
push
ljmp
call
out
fsubrp
pop
xor
imul
shrl
cmp
test
sub
out
hlt
dec
cltd
sub
jb
lret
jae
fidivrs
sbb
fs
dec
add
lds
cli
imul
jno
sub
jo
scas
std
cmc
movb
aaa
push
loopne
insl
adc
int
cmp
mov
push
sub
insb
jle
sbb
mov
mov
mulb
int3
addl
xor
lea
inc
sbb
clc
test
mov
jl
mov
sub
lahf
or
xor
arpl
dec
pop
inc
and
cmp
dec
pop
add
fistl
mov
fdivs
mov
lock
orb
and
sbb
outsb
inc
sub
mov
arpl
push
push
sub
lock
and
rcr
dec
in
and
dec
mov
mov
cmp
nop
sbb
add
pop
cmp
xchg
sub
mov
and
ss
cmpsb
cmp
rorb
rcrb
mov
iret
cwtl
dec
adc
hlt
test
arpl
ss
sarb
push
xor
inc
psubd
mov
sub
popf
push
mov
sahf
in
push
push
jbe
pop
aaa
or
adc
push
ret
ljmp
sti
sbb
stos
inc
cmp
cmpsb
dec
cmp
inc
fistpll
sub
scas
mov
lods
push
mov
fadds
lds
adc
lahf
sub
aas
cmp
adc
hlt
xor
lahf
gs
in
sub
es
adc
mov
cltd
fnsave
and
or
popf
cmp
xor
push
out
and
repz
daa
or
push
cld
jl
cmpsl
je
js
inc
dec
pop
jbe
ja
jns
xchg
mov
stos
lret
mov
lret
fcompl
call
inc
lcall
out
sub
decb
lods
inc
inc
cmp
dec
dec
inc
out
inc
sbb
insl
insb
ja
push
leave
loopne
int
cs
cmp
int
adc
pop
aaa
xlat
or
mov
mov
lea
out
test
pop
mov
in
push
js
or
cmc
ret
aaa
pop
jle
stos
fs
in
mov
mov
xchg
mov
lock
mov
pushf
add
xor
vpshufhw
pop
mov
mov
sbb
add
dec
lret
xor
leave
shll
iret
fldt
sbb
xchg
xor
movsb
dec
arpl
call
push
and
jle
cmc
adc
lea
leave
sbb
scas
jo
dec
pop
inc
mov
push
insl
xor
xchg
popa
sbb
cltd
aaa
pop
inc
jnp
movsl
push
xlat
outsl
icebp
dec
ret
testb
xor
jge
sbb
dec
stc
cld
push
push
add
shlb
add
mov
fidivl
stc
mov
pop
shl
pop
inc
xchg
shrb
cwtl
popa
arpl
lea
sub
vmovups
sarb
enter
cmp
and
out
fsubl
cmp
dec
sub
xor
cmp
popa
pop
icebp
mov
movsl
fistpll
mov
loope
fnstenv
push
cmp
sbb
jno
shlb
ja
sbb
jns
ja
jp
cwtl
faddl
xchg
jg
sub
jno
dec
pop
insb
add
nop
pop
pop
jne
les
cmp
enter
lcall
fstl
sub
inc
sysexit
das
aad
fistps
outsl
lea
fwait
inc
sub
sub
repnz
cmp
je
aam
inc
push
loopne
add
ret
inc
pop
fisubrl
rorl
sti
and
insl
mov
ret
jecxz
xchg
fsubrl
push
dec
cwtl
push
mov
cmp
add
and
js
push
sbb
add
push
push
stos
in
andl
lcall
loop
ja
xor
sbb
sub
jne
clc
or
mov
adcb
jnp
test
in
jae
adc
mov
mov
stos
cmp
ja
lds
stos
mov
sbb
push
mov
xor
and
in
lret
imul
adc
mov
hlt
lods
lds
testl
mov
xchg
cs
rolb
sub
mov
lret
scas
xchg
bswap
or
sub
mov
add
mov
push
push
test
lds
inc
xchg
inc
mov
jmp
daa
xorl
sub
xchg
jg
push
or
inc
sub
call
hlt
negb
mov
mov
iret
addb
adc
imul
and
jae
sti
cs
pop
sbb
push
dec
cmpb
jl
movsl
dec
cmp
jp
into
push
jg
shl
je
frstor
dec
mov
inc
inc
or
jmp
bound
dec
loope
fs
push
mov
xor
jbe
data16
stos
dec
jge
mov
push
shl
adc
pop
mov
mov
pop
mov
int3
ret
mov
jg
pop
jp
call
aad
sub
ret
jae
mov
xchg
mov
mov
orb
hlt
ja
adc
mov
cmpsl
cmp
data16
push
xor
sub
xchg
fcoms
sub
adc
les
lret
mov
popa
mov
xlat
sbb
popf
cmp
xor
scas
aaa
add
mov
sarb
out
xchg
movsl
add
xchg
scas
mov
in
pop
push
mov
or
add
xchg
bound
xchg
scas
fisttpll
jp
mov
std
fwait
push
jae
fnstenv
sbb
mov
and
dec
push
data16
sbb
dec
sbb
inc
inc
push
imul
dec
test
push
les
xor
add
ljmp
fs
lret
arpl
test
mov
fisubrl
cmp
test
lahf
push
jo
mov
das
popa
ret
aad
cmp
loope
loopne
jae
dec
out
cmpb
or
mov
sub
push
cmp
movsl
jo
cmp
ret
mov
fmull
sbb
push
clc
cmp
testb
sbb
adc
mov
push
rolb
cmp
sbb
push
pop
in
fnstenv
sub
test
xchg
push
les
out
movsb
inc
mov
js
inc
loop
lcall
cmc
adc
fs
lahf
and
mov
inc
shrl
std
push
sub
fwait
xor
cli
les
mov
sub
in
cmpsl
xchg
add
out
jmp
pushf
scas
jg
jp
ljmp
stos
and
dec
xor
inc
inc
aas
stc
ss
push
sti
popa
movb
push
push
mov
aad
test
pop
js
inc
cld
iret
ret
push
and
and
dec
mov
and
or
std
ds
outsl
sbb
mov
clc
idivl
fimuls
adc
add
adcb
inc
xor
fldl
and
shrb
jnp
push
sbb
push
sti
fwait
dec
mov
cltd
imul
ret
pop
enter
out
and
cltd
xor
insb
shrl
into
pop
xchg
push
pop
out
sbbb
xor
int
mov
cmpsl
jmp
and
inc
add
adc
cli
push
mov
mov
stos
jp
popa
mov
jno
push
movsb
mov
xchg
je
mov
mov
and
cmp
sahf
sub
out
pop
aad
mov
cmp
mov
xchg
sub
inc
sub
stc
jecxz
cmp
cld
mov
add
sbb
sub
jle
push
mull
sub
add
pop
pop
movsb
xchg
pop
ja
adc
rolb
std
inc
push
push
inc
cli
fcmovnu
and
xlat
test
je
adc
fnstsw
sarl
aad
inc
lret
sti
gs
and
mov
push
push
lock
out
nop
xchg
loop
push
mov
stos
aaa
cmpb
cmc
ret
ljmp
cmc
mov
and
mov
jo
pop
nop
pop
add
cli
mov
push
jns
fnstcw
sbb
fucomip
in
pop
sbb
xchg
out
leave
pusha
and
test
dec
inc
out
stos
int3
dec
pop
add
sub
nop
ja
xor
jecxz
mov
sbb
xchg
dec
mov
inc
xchg
aas
xor
adc
aas
sahf
in
inc
stos
mov
dec
ss
loope
in
xor
mov
mov
fcomip
pushf
cmp
clc
outsl
in
xchg
mov
cmp
jmp
xor
cmpsb
jae
pop
pop
sti
xchg
push
and
lcall
in
fnsave
in
stos
jge
ret
pop
fstpl
movsb
fstpt
jmp
xor
xor
call
inc
out
pop
mov
dec
jno
std
mov
pop
js
or
scas
mov
shrl
addr16
lret
bound
das
ret
sub
jbe
lds
lret
and
lods
shlb
push
and
bound
movsl
cmpsb
fnsave
add
mov
or
mov
cld
lcall
in
stos
mov
push
push
int3
fisubl
loop
mov
movsl
out
jl
inc
jns
aam
out
or
int3
stos
fbstp
stos
add
mov
mov
push
lret
test
aad
decl
jl
rsm
xchg
movsb
ret
cmc
inc
and
dec
xor
jnp
push
jbe
rcll
mov
adc
lods
push
fsubl
stos
stos
repnz
mov
or
push
push
push
out
inc
jns
mov
dec
jl
cmp
lock
ds
in
lret
dec
out
cltd
pop
mov
fldln2
xchg
jge
pushf
out
shlb
mov
or
popa
mov
mov
add
mov
cld
push
cmpl
lods
js
add
test
addr16
addr16
test
imul
clc
add
icebp
popa
cmp
nop
lods
out
inc
movsb
mov
adc
and
inc
xchg
jge
adc
movsb
or
sbb
dec
in
dec
xchg
cmc
outsb
xor
shlb
push
notl
jne
dec
in
adc
insb
rolb
addr16
pop
loopne
cmpsb
cmp
mov
cmp
sbb
cli
mov
sub
mov
add
insl
sbbl
pop
add
jge
sbbb
pusha
outsb
adc
or
jmp
add
mov
ret
xor
mov
insb
and
push
js
rolb
push
add
cwtl
sbb
xchg
or
cmpb
lods
jg
xchg
mov
fldenv
jnp
aas
in
mov
iret
iret
pop
imul
push
xchg
jmp
repnz
mov
mov
inc
rolb
fnstenv
or
cmp
scas
sahf
shll
sahf
sub
js
scas
push
sub
inc
lret
lret
jmp
ret
sub
sub
decl
scas
xchg
xchg
mov
sbb
xor
pop
add
shlb
jle
rcrl
rcl
pop
lods
mov
das
out
push
iret
add
mov
int3
popf
xor
enter
test
cmp
cmp
imul
mov
pushf
nop
adc
dec
cwtl
cmp
sbb
lea
or
hlt
cmp
int
sub
push
sub
xor
shrd
fcoms
jle
dec
sub
pop
jnp
fld1
sti
dec
jo
dec
xchg
jg
je
fisubrs
jo
iret
rcrb
fsubrl
les
xchg
arpl
xor
clc
nop
frstor
ds
stos
pop
cmpsb
sub
repz
xor
aam
sbb
pop
insb
mov
bound
push
xchg
mov
dec
push
adc
pop
inc
push
daa
bnd
xor
fidivrl
mov
loopne
fs
fisttpll
bound
sbb
or
inc
sbb
rol
loopne
lcall
in
sbb
xchg
mov
test
into
jb
jb
loopne
mov
in
mov
hlt
outsb
cmp
and
xchg
adc
divb
aaa
inc
loopne
adc
pop
dec
repnz
xor
cmpsl
out
jbe
xlat
lea
dec
mov
imul
aaa
jae
xor
jmp
aaa
stc
add
lods
mov
pop
shrb
pusha
js
sarl
jne
xorl
loopne
aad
mov
pop
idiv
mov
ret
test
rolb
stc
pop
pop
jne
inc
xchg
jl
mov
mov
jg
cmp
fstl
xchg
call
mov
cmp
cmc
idivl
stos
stc
push
jns
lea
ltr
mov
out
jmp
pop
mov
sbb
ljmp
and
bound
sub
xchg
ret
mov
add
mov
lock
sbb
movsb
push
add
add
xor
jns
mov
fcoml
call
es
pop
fldcw
out
mov
pop
push
cmp
lcall
xchg
leave
out
iret
sub
mov
outsb
flds
jns
inc
insb
divl
out
sbb
inc
push
and
push
fstpl
sbb
and
imul
inc
cmc
pop
cmc
mov
xchg
aam
fucom
adc
repz
and
bound
inc
inc
aad
jns
add
sbb
sbb
mov
fidivl
pop
mov
sarb
adc
push
and
sub
pop
xor
in
pop
sbb
nop
mov
loope
push
test
or
mov
cmp
das
cmp
sub
push
fisubrs
mov
adc
scas
sbbb
sbb
fs
jecxz
lds
in
in
ss
mov
pushf
outsl
sbb
push
lret
sub
mov
cmp
mov
sub
es
rep
aas
mov
bound
imul
dec
dec
in
cmp
inc
push
and
cld
mov
mov
push
fwait
outsl
ja
outsb
jmp
and
shrl
pop
and
pop
aaa
jb
arpl
frstor
mov
jmp
pop
popf
aaa
out
iret
lcall
push
jb
jno
mov
insl
mov
push
clc
icebp
xchg
mov
shrb
mov
mov
insl
jmp
jb
mov
imul
fcoms
in
das
fsubrp
addr16
and
jmp
out
repnz
int3
jb
scas
xor
and
inc
jae
cmp
inc
sub
lods
sub
fists
sti
fldcw
iret
loopne
add
dec
jne
sbbl
xchg
jns
sub
vmwrite
scas
mov
add
push
pop
out
mov
push
imul
push
mov
in
pushf
lds
testl
stc
addr16
fwait
mov
lcall
loopne
imul
insl
loope
shl
inc
hlt
push
jge
xor
aam
shr
mov
pusha
in
inc
dec
rcrb
gs
stos
lods
push
sub
xchg
lea
insl
lock
sub
xor
dec
mov
dec
adc
mov
js
out
jl
sahf
out
out
enter
pop
xchg
icebp
mov
or
addr16
sahf
movsl
sub
shll
sbb
sbb
add
or
cmp
sbbb
orb
jg
mov
sbb
insl
pop
and
jp
repnz
mov
or
xor
out
jle
enter
add
dec
hlt
cs
pop
hlt
rclb
mov
dec
ficoms
push
cmp
outsb
std
fs
fnstenv
sti
mov
inc
xchg
adc
leave
pop
and
and
push
mov
jle
cld
xchg
stos
inc
fistpll
fsub
xlat
jecxz
sti
in
sub
pop
js
cmpb
aaa
dec
out
mov
sub
paddd
sub
dec
movsl
add
pop
xor
mov
cmc
jl
cmp
and
sub
hlt
daa
jbe
sub
xorps
jle
cwtl
ja
jmp
add
mov
lret
adc
push
out
inc
aam
and
mov
pop
loopne
bndstx
sub
xor
pop
int
ja
xchg
jo
or
ss
and
mov
push
or
jae
outsb
jmp
sub
add
xchg
xchg
push
jno
mov
mov
test
push
sbb
pusha
xchg
add
xchg
or
mov
mov
popf
push
add
cmp
test
jo
pop
push
and
adc
je
stos
jg
sbb
loopne
sarl
cli
xor
loopne
jmp
pusha
ss
ljmp
push
scas
out
inc
popa
xor
fisttpll
clc
test
sti
sahf
jmp
jns
inc
clc
dec
adc
add
jae
adc
jge
and
nop
fnstcw
adc
lods
jno
lret
pop
adc
popa
mov
pusha
xchg
pop
sbb
add
push
add
jmp
jmp
insl
clc
js
in
pop
mov
or
mov
pushf
mov
push
mov
pop
and
fucomp
xor
push
lret
lret
ror
leave
ret
push
aas
mov
scas
scas
inc
jp
xor
outsl
adc
inc
ds
jns
test
mov
dec
jmp
xor
adc
outsb
pusha
push
sub
or
sub
sarl
dec
fimuls
add
push
mov
fsts
in
das
test
jb
int3
imul
inc
mov
mov
ret
pop
pop
idivb
dec
jecxz
nop
cltd
adc
pushf
or
into
les
xor
imul
mov
mov
ss
jns
adcb
xchg
ss
ds
fstpl
repz
sub
lods
ficoml
xlat
sub
mov
loope
notl
xor
or
jo
loopne
cli
push
data16
int
jae
imul
mov
inc
leave
jmp
ret
adc
mov
sub
imul
orb
sbb
sbb
push
push
ds
xor
dec
and
jp
call
or
cmpl
test
mov
cltd
mov
jl
inc
fs
sbb
mov
mov
push
sarb
imul
mov
adc
xlat
repz
jae
out
mov
cs
mov
jp
cmp
movsb
adc
hlt
lcall
test
sbb
data16
inc
cmpxchg
xor
pop
nop
cmp
pop
imul
mov
sbb
mov
aam
idivb
and
jb
fwait
mov
pop
insb
dec
lea
cmp
sbb
in
testb
jle
cmp
aad
shr
test
dec
or
cltd
movsl
xchg
mov
rep
lods
sti
jl
fistpl
icebp
aas
jns
and
push
sub
cwtl
push
mov
fldt
idivb
insl
testl
pop
mov
xchg
sbb
test
notb
lds
adc
loop
sub
fdivl
add
xor
push
inc
and
nop
jne
mul
popf
sub
popf
add
cmp
cltd
inc
mov
or
cmp
xor
jns
mov
mov
mov
adc
jno
lods
jne
imul
frstor
jle
cmpsl
stc
mov
int3
fs
xchg
in
and
push
inc
arpl
push
add
inc
loope
mov
mov
jg
push
sub
ja
data16
mov
enter
inc
leave
int3
cmp
mov
push
call
xchg
mov
aas
push
shlb
push
ds
dec
dec
pop
insb
mov
cltd
xor
push
cmpb
sub
jno
lcall
add
sbb
test
adc
cmp
adc
out
xchg
adc
inc
and
daa
push
sbb
sti
xchg
jp
sbb
or
pop
mov
in
pop
jecxz
cli
mov
divb
sarl
add
rol
adc
in
decl
cmp
pop
xchg
call
mov
std
cmc
or
and
inc
into
jb,pn
xchg
clc
inc
inc
adc
push
inc
in
imul
push
loope
popf
mov
sbb
fs
lcall
icebp
xor
pop
push
test
sub
ja
dec
out
dec
loop
push
dec
cmpsb
jecxz
adc
fidivl
xchg
out
pop
rol
fldt
shlb
in
leave
imul
roll
or
sub
dec
lret
daa
inc
cmp
gs
jmp
sub
arpl
dec
outsb
gs
enterw
lret
push
xor
pop
pop
sbbl
decl
aam
rclb
mov
shll
ds
iret
or
jns
dec
pop
loopne
mov
repnz
push
subl
sbb
mov
test
jge
movl
sbbl
xor
dec
push
cmpsl
sub
or
pop
daa
inc
cmp
repnz
into
orl
inc
or
ret
lea
jp
xchg
add
stos
fs
lods
jmp
test
int
test
jb
sub
or
mov
xchg
dec
pop
push
mov
lret
sub
push
test
ja
test
xchg
sub
je
lahf
or
loope
sub
inc
fidivs
je
shlb
ret
mov
inc
dec
stos
imul
pop
ljmp
xchg
std
inc
push
xor
rclb
icebp
mov
xchg
push
in
inc
sti
iret
sub
xchg
into
repz
pusha
test
scas
push
ficompl
or
cld
and
aad
into
gs
add
mov
push
js
imul
dec
jmp
inc
push
rolb
cmp
lret
cmp
lods
sbb
inc
mov
nop
daa
cwtl
xor
je
mov
cli
test
testl
adc
adc
aaa
push
mov
cli
pop
mov
cmp
push
inc
push
call
cltd
xor
imul
jno
mov
ja
and
cmpsb
pop
mov
cmp
out
push
ljmp
in
fbstp
sub
adc
dec
xchg
jns
jbe
mov
lds
adc
mov
popf
xor
jp
jo
sti
mov
mov
in
push
push
or
in
and
add
mov
cmpl
and
push
xchg
sub
lret
xchg
std
push
push
call
push
mov
add
int
jae
inc
imul
and
xchg
push
cwtl
mov
int
mov
add
add
cmp
pop
inc
fimull
mov
adc
inc
lcall
adc
xchg
sub
push
out
push
dec
mov
jge
add
outsl
rcl
sbbl
pop
scas
inc
lea
mov
arpl
jge
mov
pop
gs
ficoml
mov
clc
in
xor
lds
or
jg
es
mov
push
movsl
adc
ss
addr16
fldcw
fsubl
mov
jle
popa
mov
ds
shr
jg
sub
mov
shrb
jg
push
mov
lock
xchg
or
fdivl
push
test
xchg
cli
xchg
ret
pop
mov
test
repz
popf
xor
adc
pop
inc
imul
and
mov
xor
lods
inc
sbb
test
lods
or
fldl
sub
das
push
lods
pop
push
dec
filds
mov
mov
sub
shrl
test
xchg
ffree
mov
testl
pusha
popa
stos
mov
fstpt
pop
cmc
jae
or
mov
ljmp
dec
arpl
shrl
inc
pop
out
je
cmp
gs
stos
inc
faddp
icebp
mov
inc
push
cmp
add
faddp
aad
cmc
inc
xchg
mov
jmp
cmc
dec
ljmp
cmpsb
add
out
push
loopne
test
mov
imul
je
and
dec
mov
shlb
in
int3
test
int
aad
bound
inc
fdivl
and
or
cwtl
xchg
sub
test
aam
sbb
shrb
and
push
lock
fmull
movsl
adc
mov
movsl
cmp
arpl
adc
jb
xor
add
xchg
call
pop
cmc
mov
lods
inc
ds
xchg
xchg
out
pop
hlt
push
cmpl
aas
bound
mov
pop
or
mov
stos
inc
inc
addr16
test
test
lds
insl
or
clc
mov
sub
push
movsl
xchg
pushf
xor
cmp
outsb
add
icebp
xchg
mov
leave
and
mov
nop
into
out
test
xchg
lea
arpl
xchg
int
cmpsl
decl
mov
pop
outsl
scas
inc
sahf
shlb
add
and
inc
push
xlat
lcall
or
push
jno
insb
add
mov
inc
imul
or
pop
cmc
dec
imul
or
mov
dec
push
int
fldenv
mov
sbb
jno
imul
jle
testb
fstl
mov
cmp
lea
lahf
mov
push
push
jmp
mov
aaa
into
dec
gs
repz
fcmovbe
push
xchg
leave
mov
mov
dec
push
in
or
and
popf
imul
loopne
std
adc
xchg
les
daa
mov
xchg
sbbl
enter
inc
pop
hlt
mov
popf
add
dec
pusha
in
xchg
fscale
xchg
or
data16
mov
mov
push
pushw
popf
xchg
rcr
hlt
xchg
inc
pop
addr16
xchg
leave
clc
cld
xchg
ja
sub
adc
add
shrb
or
js
lcall
std
inc
loop
ja
icebp
mov
mov
in
scas
imul
and
fwait
pop
push
fnstenv
fsubs
or
fbstp
add
push
cmp
test
icebp
mov
jmp
mov
fldl
gs
rcl
lret
add
and
movsl
push
xor
test
jae
shrl
leave
pop
icebp
fadds
cwtl
or
das
fbstp
outsb
mov
push
mov
pop
je
aad
movsb
push
adc
pushf
inc
daa
sub
push
fmul
fs
mov
add
sbb
inc
and
jnp
lret
inc
fdivr
or
push
sbb
dec
loope
sub
pop
repz
or
cmp
xor
test
push
add
pop
cmp
dec
in
in
pop
xlat
pop
icebp
add
sbb
mov
add
push
dec
and
mov
loope
or
add
inc
and
cld
xchg
or
pusha
testl
push
jno
push
addr16
xchg
rol
pop
add
sbb
outsl
dec
data16
mov
orb
mov
popa
shrb
test
jbe
mov
arpl
addr16
fists
mov
iret
mov
push
lret
vfmsubadd132pd
jo
pop
movsl
xchg
xor
sarl
scas
pop
popf
xor
iret
xor
cld
test
imul
sub
dec
shrl
repz
xchg
int
pop
cmc
inc
out
jecxz
sbb
aas
jmp
adc
nop
testl
adc
jl
xor
sbb
test
sub
xlat
xchg
scas
or
test
xor
cmpsb
fs
jl
cld
lods
stc
add
sub
push
jmp
jge
adcb
popf
dec
imul
mov
ret
push
cmc
cmp
outsl
adc
pusha
test
in
or
in
jp
bound
push
jmp
test
fs
cmpsl
mov
pop
stc
cmp
jg,pn
lahf
mov
sub
shll
cmp
mov
mov
daa
ja
pop
test
lret
add
xchg
push
repz
sbb
jnp
mov
add
test
hlt
gs
and
out
cmpsl
inc
lods
inc
je
xchg
sub
xchg
xor
ret
inc
inc
dec
arpl
jg
push
popf
pushl
and
pop
push
lcall
cmp
sub
bound
aas
mov
fsts
or
std
xchg
clc
sub
cwtl
xchg
sbb
loop
pop
push
mov
adc
pop
rcrb
mov
jbe
push
jmp
cmp
test
or
adc
lods
mov
push
push
in
loope
daa
mov
adc
ljmp
lret
push
in
lret
aad
cmc
jb
ficompl
out
sahf
xchg
adc
fwait
sbb
mov
loope
sbb
clc
xor
movb
mov
dec
repz
jecxz
mov
stc
mov
mov
cltd
mov
bnd
iret
push
jb
push
int
sti
pop
fs
dec
and
test
push
sbb
push
push
mov
iret
sub
scas
jmp
sub
out
dec
shrl
mov
fsincos
pusha
cld
jno
mov
clc
je
scas
pop
fidivrs
sbb
mov
hlt
sub
jecxz
sbb
adc
inc
jl
std
es
adc
inc
lret
mov
shlb
dec
cmpsl
out
mov
mov
pop
int
sti
mov
lret
shrb
repz
leave
xchg
jns,pn
jp
enter
mov
fldl
adc
jns
ud1
or
test
add
movsb
push
xchg
and
enter
pop
es
sub
xlat
testw
push
iret
icebp
adc
out
int3
xor
int3
stos
add
sub
ret
dec
lret
adc
fldcw
xor
jne
enter
cmp
nop
fs
xchg
xchg
call
ret
mov
fnsave
imulb
push
add
mov
adc
and
mov
cli
sub
mov
sub
push
add
push
rol
out
cmc
fiaddl
scas
pop
xchg
lret
dec
mov
xor
push
mov
daa
daa
outsb
cltd
je
push
in
jg
adcl
xor
jg
test
or
movsb
cmp
push
jmp
dec
jge,pt
orl
pusha
pop
sub
addl
sbb
mov
ficompl
pusha
test
lret
sti
mov
pop
repz
icebp
sbb
mov
mov
daa
jo
mov
clc
dec
mov
out
scas
push
mov
xor
adc
and
dec
lods
jbe
and
inc
subl
cwtl
das
cmp
insb
mov
fs
pop
mov
jnp
push
out
dec
xor
dec
test
sbb
aaa
mov
into
push
nop
test
sbb
xchg
pop
adc
loope
ja
xchg
xchg
push
xor
imul
cmp
in
mov
push
outsl
call
adc
fidivs
mov
push
loope
xchg
cs
out
sbb
and
ret
add
aam
pop
cmc
movsb
idivl
and
xor
sub
fwait
mov
or
mov
jmp
in
lahf
out
xor
js
gs
call
jno
mov
jmp
icebp
mov
ficoms
fstpt
pop
dec
loop
clc
dec
mov
jae
sbbl
xchg
adc
add
sub
repz
enter
pop
into
pusha
stos
loopne
imul
sub
cmpsb
insb
stos
jmp
lahf
ss
cld
push
or
loop
outsb
mov
call
test
lahf
xorb
mov
ljmp
sti
sarl
sbb
mov
fidivl
mov
decb
flds
mov
stc
or
xchg
leave
popa
mov
lods
mov
leave
mov
mov
fnstenv
arpl
psrld
sbb
jae
outsl
popf
xor
xchg
jae
ja
bound
fs
push
xchg
mov
sub
bound
jne
movsl
push
cwtl
rclb
shrb
bound
mov
sub
insb
mov
jle
arpl
xlat
pop
lret
lea
mov
out
jl
pop
cmp
mov
pop
mov
pop
mov
lcall
xchg
sbb
xor
xchg
into
sub
les
cmp
outsb
and
aaa
into
sub
cmp
sub
or
sub
inc
cli
xchg
jae
dec
pop
cwtl
stos
gs
dec
sarb
mov
sbb
hlt
sub
add
jns
lods
sbb
sbb
insb
jmp
cmp
lds
js
in
push
sub
xor
aad
cmp
mov
inc
xor
repnz
push
bound
loop
xchg
and
jbe
sbb
jbe
pop
xchg
mov
cmp
inc
test
jns
pop
aas
pop
mov
ss
mov
mov
jle
push
in
stc
sub
mov
lahf
and
orb
loopne
adc
testb
or
cltd
scas
add
repz
jmp
sub
in
pop
mov
iret
gs
aad
insb
rcrb
jo
mov
mov
xchg
xchg
add
pop
and
and
outsb
mov
xrelease
je
push
mov
test
mov
out
pop
jmp
dec
sbb
inc
push
fcoms
inc
mov
loopne
ficoml
mov
jnp
inc
lods
jne
xchg
fwait
xor
and
xchg
jp
test
lcall
mov
sti
jge
mov
stos
mov
sbb
cmp
lea
ficoml
jp
jne
decb
daa
pop
mov
dec
lods
pop
pusha
ss
fbld
mov
xchg
cmp
sub
mov
add
ret
dec
lahf
push
mov
and
push
sahf
mov
xchg
imul
xchg
sbb
and
sub
push
jl
sbbb
and
sbb
fadds
jl
out
fidivrs
mov
add
push
je
jg
mov
xor
pop
hlt
xchg
sub
scas
push
cmc
mov
arpl
pop
cmp
loop
cmp
push
ffreep
repnz
fadd
add
enter
icebp
int
mov
and
inc
lds
sbb
sbb
sti
cmp
mov
sub
inc
movsb
pop
data16
aas
repnz
jp
out
xchg
out
add
mov
stos
out
in
das
cld
mov
lahf
hlt
mov
daa
frstor
in
in
ret
dec
cld
ret
mov
repnz
dec
out
ljmp
push
in
sub
jmp
inc
in
mov
mov
mov
or
adc
jle
test
xlat
dec
or
mov
xchg
push
test
cmp
bndldx
lcall
xchg
sub
add
xchg
fadds
lods
pop
jae
xor
bound
add
xchg
insl
stos
aam
add
outsb
sarl
sarl
adc
sbb
push
and
jne
lods
inc
add
mov
add
sub
adcb
cli
xchg
or
add
psubd
test
pop
add
sbb
cltd
dec
lods
clc
sub
mov
outsl
mov
cmpsl
sarb
add
pop
icebp
addr16
push
cli
or
adc
test
cli
jno
jns
mov
movsl
push
gs
inc
lods
inc
stos
bound
mov
lods
push
mov
add
lret
icebp
xor
pop
sub
popa
mov
push
adc
scas
inc
int3
and
mov
xchg
and
mov
inc
xchg
push
aas
pop
mov
jl
subl
mov
jo
repnz
mov
xchg
xchg
jbe
cmp
int3
add
rcl
push
call
mov
ret
sti
into
movsb
cmp
cmpb
negb
pop
test
sub
stos
inc
push
cmp
inc
test
xor
jns
cs
xor
popf
xchg
or
stc
sub
mov
dec
roll
xor
jbe
inc
movsl
inc
adc
dec
clc
sub
out
pop
ljmp
es
je
stc
xchg
stc
xchg
or
adc
aas
lock
cmp
dec
je
stc
insl
data16
mov
inc
mov
adc
pushf
inc
xchg
je
xor
mov
jg
scas
pop
and
fs
xor
js
xchg
push
or
gs
lret
cmpl
adc
jbe
pop
aad
xor
rep
jge
add
add
or
shrl
repz
and
lcall
loopne
push
pushf
fs
inc
xchg
and
js
mov
sbbl
sbb
inc
jecxz
sub
addr16
push
into
rorb
push
xchg
aad
sub
lock
inc
into
fimull
and
cld
iret
push
les
mov
inc
jg
mov
xor
mov
xchg
std
insl
mov
ss
sbb
xchg
data16
flds
and
mov
cli
fisttpl
frstor
push
mov
movsl
pop
int3
xchg
mov
das
lret
in
push
icebp
sub
cmpsb
pop
std
pop
loopne
jno
mov
pop
mov
fists
mov
sbb
in
pop
mov
adc
aaa
xor
mov
inc
mov
cmp
aad
sti
xchg
mov
fsubrl
xlat
jg
filds
jno
sahf
popa
pop
adc
sbb
and
movsb
xchg
adc
jb
mov
xchg
pop
adc
xchg
xchg
outsl
imul
xor
jl,pt
push
gs
or
stos
pop
mov
pushl
inc
dec
nop
mov
dec
es
test
fwait
push
cld
adc
mov
xchg
paddw
mov
and
nop
mov
or
mov
mov
mov
es
in
rol
or
mov
push
cmpl
arpl
push
stos
popa
stc
ret
or
xor
loope
add
push
int
repz
cltd
insb
cld
jp
shlb
jle
jnp
cmp
adc
rolb
hlt
fnstenv
lds
popa
clc
or
sbb
xchg
mov
push
sbb
call
fs
pop
mov
imul
jle
xchg
jno
push
pusha
xor
stos
js
dec
mov
daa
push
ja
lods
fs
push
int
cmp
inc
adc
push
loopne
aam
and
push
shl
sub
aaa
movsl
loopne
or
cmpsb
stos
fwait
scas
popa
push
int3
jbe
loopne
pushf
xchg
cmp
gs
xor
push
inc
fdivrl
pop
outsl
mov
cmp
sbb
pop
jmp
pop
icebp
mov
loopne
ss
icebp
add
leave
xchg
fs
ljmp
push
ret
xor
fstpt
cmp
cld
jne
ret
jns
inc
aas
rolb
outsl
inc
in
pop
lret
mov
jp
xor
negl
or
jne
sbb
fucomi
push
xor
stos
stos
adc
or
adc
into
mov
and
lods
pop
mov
inc
test
push
sub
stos
pop
insb
lcall
pop
icebp
js
pop
mov
ds
mov
pop
mov
leave
pcmpeqw
cltd
int
mov
push
xor
or
or
out
dec
or
jno
out
cs
pop
hlt
mov
iret
repnz
pop
orl
push
addr16
cmp
sub
mov
mov
std
pop
adc
mov
add
jae
pop
out
loop
xchg
and
and
shlb
add
sub
pop
dec
hlt
mov
or
repnz
in
dec
mov
jecxz
xor
jbe
jg
cmp
xor
cld
aas
dec
subb
push
pop
sbb
xchg
jnp
iret
push
jns
pop
lret
pop
ret
pop
mov
ljmp
push
xlat
das
or
repz
sub
pop
dec
sbb
nop
jle
sti
xchg
popa
inc
imul
inc
jp
dec
imul
pop
inc
cmpsl
jb,pt
or
movsl
xchg
insb
aad
div
sub
xchg
aaa
out
pop
ret
loopne
fcoms
sub
adc
inc
test
sti
lods
jne
mov
xchg
outsb
add
xchg
xchg
mov
and
adc
test
jne
imul
lahf
jl
daa
mov
punpckhbw
insb
mov
int
jae
xchg
hlt
inc
into
int3
push
push
popf
lret
dec
mov
jmp
jne
mov
mov
mov
in
andl
mov
add
lcall
fsubrl
das
lea
cmp
mov
ja
ljmp
mov
cld
xchg
loope
push
lods
sub
or
mov
push
das
movsb
jl
add
pop
hlt
les
pop
cs
mov
test
repz
ja
pop
adc
lret
inc
xor
add
mov
hlt
xor
inc
orb
pop
pop
enter
imul
adcl
lea
sbb
jle
jae
mov
cmp
xchg
xor
cmpsb
jns
int
cmp
push
lds
test
and
jb
loop
add
cmp
loope
xor
push
add
repnz
cld
and
ss
cmp
jmp
dec
fbld
sbb
xchg
and
cld
and
mull
inc
jns
cmp
leave
pusha
xchg
push
dec
inc
mov
or
push
stos
data16
mov
popl
stc
and
test
mov
push
mov
ret
call
scas
dec
int3
sbb
sti
pop
lcallw
std
xchg
xchg
inc
xchg
stos
cs
jae
cmpb
cmpsb
jl
mov
fidivrl
jge
pushf
lret
cld
in
adc
out
sbb
cli
add
aaa
jmp
and
inc
ficompl
add
fs
adc
dec
xor
fnsave
jbe
or
jle
mov
shll
push
or
mov
mov
lcall
lahf
imul
sbb
jg
xchg
mov
or
cs
aaa
cmp
jb
lret
xor
loop
add
push
repnz
mov
lcall
pop
popf
xor
out
mov
lock
jecxz
iret
push
lods
add
inc
mov
sbb
xchg
sub
movsb
xchg
jns
negb
daa
into
mov
iret
inc
jbe
pusha
lods
scas
inc
mov
icebp
popf
jae
jne
out
adc
dec
xchg
or
jnp
scas
jb
fwait
jnp
daa
jmp
jae
adc
or
mov
pop
stos
push
int3
sub
popf
mov
or
jns
nop
push
lock
mov
mov
out
sbb
jae
idivb
add
insl
add
and
xor
popf
inc
aam
pop
adc
lea
cli
push
test
ret
loop
arpl
push
testl
cmp
jle
lret
jo
xchg
inc
lret
cmp
cld
xor
xchg
push
and
fwait
jecxz
loopne
out
sub
in
sbb
mov
and
in
or
test
push
push
rcrb
mov
into
dec
pop
rcrb
push
aam
xor
cmp
mov
cmp
pop
inc
fcoms
pop
mov
sub
xchg
xchg
mov
lcall
mov
and
loopne
call
loopne
push
in
dec
lahf
lock
add
sti
mov
add
mov
fisttpll
sti
or
arpl
pop
emms
mov
cmp
repnz
pop
jecxz
cmp
or
add
push
add
xchg
std
clc
and
adc
fists
add
xor
insl
mov
mov
xchg
inc
or
mov
mov
dec
mov
shlb
or
mov
in
add
lock
aaa
out
mov
sub
imul
sti
adc
xchg
cli
sbb
cli
int3
out
sbb
mov
inc
adc
clc
sub
xchg
mov
ret
dec
int3
in
cmpl
movsl
mov
lret
sti
xchg
xchg
xchg
add
aaa
fisubl
out
sahf
ds
mulb
xchg
sbb
lcall
sbbb
cmp
cmp
cmp
rcll
jge
cmp
mov
jae
loopne
je
push
mov
orb
mov
xlat
dec
orb
cmp
fwait
xchg
jge
inc
enter
mov
lock
cmovb
lahf
pop
or
repz
into
out
jp
cs
jns
outsl
notb
lcall
cmpb
dec
mov
jecxz
pop
adc
ss
je
dec
in
pop
mov
push
dec
xchg
ja
xor
movsl
cmp
adc
aaa
inc
or
cli
sub
clc
in
icebp
pop
add
sahf
jecxz
pop
adc
icebp
cmpsb
loop
pop
mov
sbb
call
icebp
sub
cmp
nop
out
fistpl
push
out
cld
call
dec
daa
add
ret
mov
jecxz
loope
mov
cmc
enter
test
leave
inc
clc
and
mov
iret
xor
test
pusha
mov
dec
in
outsb
jg
pop
jne
mov
inc
cmp
dec
enter
leave
out
adc
mov
cmp
lret
mov
pmulhw
lods
sbb
fmull
mov
out
xor
fbld
cmp
test
pop
clc
dec
rol
pop
xor
mov
adc
mov
dec
sarb
sub
out
dec
orb
push
insb
loop
data16
push
mov
arpl
je
test
ja
jno
inc
popa
lods
inc
jp
bound
gs
cmpsb
addr16
notb
mov
aad
dec
fisttpll
push
lds
xchg
pop
popf
popa
cmp
rorl
scas
sbb
nop
je
das
mov
jo
push
xchg
js
enter
inc
jmp
jbe
push
fistl
stos
imul
je
inc
push
cwtl
pop
mov
jae
cmp
or
sbb
push
pushf
push
lea
test
lret
ljmp
dec
add
add
push
pop
mov
lods
bound
lds
xor
mov
pop
cld
inc
fimuls
inc
mov
fists
xor
out
call
sbb
dec
ret
fldl
outsb
imul
clc
pop
and
idivl
cmp
insl
stos
popf
add
cmp
fmuls
loope
ret
call
test
aaa
sbb
outsb
cmc
xor
in
add
jecxz
pop
leave
push
mov
imul
jg
inc
add
adc
xchg
sahf
xor
mov
inc
mov
insl
add
fnstcw
ret
mull
aam
aad
arpl
ljmp
and
int
jnp
sbb
gs
jl
mov
stc
mov
or
adc
stc
add
mov
ljmp
inc
add
repnz
aas
mov
lahf
push
push
push
dec
sbb
sub
jmp
test
icebp
sub
stos
pop
aaa
out
mov
loope
lods
lds
or
int3
dec
push
scas
sub
idivl
dec
cmp
push
addb
fidivl
in
fnstsw
sbb
mov
out
pop
sahf
fists
xor
add
pop
dec
imul
arpl
mov
aam
adc
aad
mov
or
xlat
sbb
sbb
inc
inc
stos
inc
movsl
adc
jne
lcall
jle
or
fsubr
testb
lret
xor
mov
js
mov
mulb
in
bnd
enter
push
jmp
or
stos
rolb
adc
insb
cmc
mov
stc
stc
hlt
mov
inc
enter
fisubl
arpl
aaa
cltd
and
add
lods
cmp
and
sbbl
pusha
imulb
pop
out
mov
inc
in
push
mov
mov
pusha
in
cmp
cld
inc
pop
rcl
inc
aam
mov
xor
inc
sub
pushf
js
nop
xchg
pop
xor
test
popf
pop
or
push
mov
add
or
mov
divl
int3
arpl
fists
mov
add
xchg
pop
mov
out
push
sbb
pop
cmp
imul
lods
sub
and
add
ja
or
dec
cmp
jmp
push
in
add
mov
pop
scas
insl
fwait
or
lcall
inc
mov
inc
fiaddl
and
jge
or
leave
sub
aaa
mov
adc
fcoms
imulb
mov
ljmp
cmp
inc
cmp
dec
push
jle
test
call
sub
test
cmp
faddp
or
movsl
xchg
jno
or
dec
scas
lds
stc
or
sbb
out
sub
repz
xchg
daa
in
movsb
mov
insl
adc
shrl
mov
mov
leave
insb
orb
popa
outsl
mov
stos
push
pop
fs
sub
and
hlt
adc
cs
push
and
data16
sub
out
shlb
mov
in
pop
lock
inc
hlt
mov
push
movsl
adc
ret
gs
pop
xchg
mov
fldcw
or
xchg
adc
cmp
rol
pop
add
pop
mov
loopne
push
fsub
jnp
jns
xchg
stos
sub
cltd
pop
int3
sbb
std
jge
mov
push
cmp
dec
iret
ds
jno
lock
ret
ja
mov
mov
mov
ret
cmpsl
ds
push
mov
lahf
lock
xchg
sbb
ds
outsl
fs
xchg
nop
sub
lea
and
push
dec
and
add
enter
dec
sbb
es
hlt
inc
jge
add
sbbb
gs
repz
jns
aaa
stos
mov
sbb
js
push
stos
lahf
mov
ror
out
std
repnz
push
inc
sub
in
iret
cmpsl
add
cli
xchg
inc
and
iret
xchg
jne
dec
cmpsl
mov
in
in
shlb
cld
gs
xchg
sbb
xchg
imul
adc
mov
jmp
and
inc
leave
pusha
jns
sub
aas
cmp
and
xchg
nop
mov
ficoml
out
stc
push
cmpsb
cmp
dec
mov
mov
sbb
dec
rclb
cmpsb
sub
out
dec
hlt
dec
mov
adc
sti
and
out
xchg
mov
rcr
push
test
ret
out
stc
testb
xchg
mov
push
scas
adc
vunpcklpd
out
xchg
and
jne
jp
push
int3
ja
jge
insl
inc
xchg
testb
dec
cmp
jbe
rcl
popa
or
fisttpll
mov
ret
rcrl
or
xchg
fsubrl
rcrb
lock
jne
in
pop
adc
lret
inc
mov
and
arpl
and
cli
dec
shl
add
mov
sbb
negl
movsb
pop
mov
dec
in
fnsave
jmp
and
add
jae
jp
jae
scas
mov
xchg
sar
sbb
nop
mov
inc
insl
shr
lods
mov
mov
jns
aas
mov
xlat
push
xor
into
mov
mov
andb
lret
rolb
mov
push
std
pop
flds
and
movsb
pop
jge
fcoml
nop
shl
sbb
popf
mov
lret
outsb
call
testb
pop
add
sbb
call
call
fldcw
jo
jg
int
inc
xor
xchg
inc
iret
leave
test
xchg
add
mov
jnp
mov
outsl
jne
xor
sub
inc
cwtl
pusha
test
inc
xlat
icebp
pushf
rorb
inc
jle
cmp
addl
mov
cli
iret
or
jp
test
fildll
fisttpl
rclb
or
xor
loope
jl
mov
dec
dec
or
leave
shrl
outsb
and
fistpll
push
xchg
fldenv
push
les
pusha
mov
mov
sub
aas
call
ds
lea
aam
shufps
movsl
lock
insb
or
cltd
dec
dec
sub
cwtl
lahf
add
and
popf
mov
xchg
test
xchg
shr
in
push
mov
or
outsl
popa
adc
ljmp
lcall
sbb
xorb
add
jno
mov
lods
sbb
loop
and
jecxz
int3
icebp
mov
pop
sbbl
dec
push
jmp
repnz
test
test
aaa
pop
xchg
imul
jb
aas
sbb
popf
test
addr16
iret
imul
cmp
lods
stos
bound
push
dec
fsubrs
mulb
popf
rorl
cmp
bound
sahf
xor
add
adcb
mov
dec
loope
xchg
movsl
cmp
jae
pop
gs
arpl
inc
repnz
fmulp
add
gs
push
dec
cmc
mov
addr16
fs
inc
repnz
cmc
fs
jns
jo
xor
fwait
adc
roll
dec
ficomps
xchg
mov
add
stos
pushf
cmp
loopne
scas
jno
mov
xor
call
lea
ret
cmp
and
mov
shl
je
out
mov
test
outsb
call
lea
xchg
inc
push
aam
push
push
js
popa
stos
es
add
mov
xchg
rorl
filds
jp
dec
adc
hlt
pop
cmp
mov
fnstenv
insl
hlt
fmull
adc
jecxz
xchg
cmp
hlt
inc
or
jbe
cmp
je
test
mov
push
mov
xchg
cmp
pop
push
cli
insb
icebp
xchg
cmp
jle
or
jne
xchg
pop
sub
mov
ds
out
push
arpl
jecxz
lret
xchg
icebp
repz
jno
faddl
jg
insl
mov
fadds
out
sbb
add
add
sti
push
js
dec
ljmp
and
fs
mov
scas
lock
gs
sbb
cmpl
not
clc
popa
push
in
mov
mov
mov
xor
lock
jmp
sbb
int
push
js
dec
in
mov
sub
gs
mov
lods
lock
vpshufbitqmb
dec
add
clc
bound
mov
movsl
stos
in
mov
lock
hlt
cli
push
roll
push
leave
andnps
pop
adc
xor
pop
add
out
fimull
shll
negb
fs
popa
or
je
inc
pop
sub
mov
mov
mov
sub
cmc
daa
test
add
and
pop
push
cmp
aas
mov
adc
neg
sbb
jne
lahf
inc
jp
out
jl
out
pop
xor
mov
scas
add
sbbl
std
sti
adc
in
add
imul
cmpb
test
xchg
aam
std
jns
cltd
inc
xorb
xlat
jns
dec
jmp
mov
int
rcrb
stos
push
out
cwtl
inc
clc
icebp
popa
lock
add
out
inc
adc
call
ret
push
aad
movsl
inc
adc
sbb
jo
jl
into
stc
repz
push
jno
xchg
jno
lret
add
push
scas
mov
icebp
mov
add
repz
stc
push
icebp
imul
iret
daa
add
aam
xchg
mov
lret
mov
lods
xchg
aas
dec
push
lods
sub
xchg
or
js
outsb
out
cmp
cmp
and
or
test
mov
and
cmpsl
jle
lcall
jb
xor
xchg
cmp
mov
mov
adc
lcall
add
xor
aad
sub
xchg
pusha
sbb
mov
les
enter
and
aas
test
mov
mov
and
inc
inc
push
es
imul
xor
sbb
inc
jp
je
mov
sbb
sti
jg
mov
stc
push
mov
sub
cmp
sbb
sti
pop
gs
adcb
test
repz
aaa
mov
aad
movsl
xor
mov
adcl
mov
je
out
and
pop
movsl
das
aas
push
mov
pop
mov
add
ja
test
jae
jo
lcall
lods
daa
outsl
sbb
xchg
je,pn
push
mov
add
cmpsb
aad
gs
inc
adc
out
jns
mov
push
push
lret
and
jle
fmuls
adc
fildl
roll
cld
mov
movsl
inc
test
mov
mov
adc
push
js
out
jge
sbb
xor
cltd
dec
pop
dec
cmp
adc
pushw
int3
mov
jp
addr16
mov
movsb
inc
xchg
fwait
iret
data16
jge
out
into
in
test
adc
dec
push
pop
into
jle
ss
jecxz
jno
aam
xor
cs
lea
mov
ret
fdivrl
flds
fidivl
jae
mov
mov
mov
adc
fldl
call
stos
pushl
sbb
testb
fcomip
sbb
xchg
or
in
test
mov
mov
testl
mov
cwtl
or
xor
cli
xor
push
out
test
outsl
mov
lods
add
mov
pop
add
mov
mov
xor
fdivrs
mov
push
iret
jp
xchg
push
cld
fs
cmp
fldt
test
or
adc
in
pusha
sbb
sti
popa
xchg
mov
insl
jmp
stc
mov
xlat
lods
push
std
icebp
pop
add
lods
loope
mov
push
shlb
and
pushf
cmp
sub
popf
inc
xor
call
xchg
imul
xchg
jp
mov
mov
scas
dec
adc
aaa
call
into
xchg
in
lds
mov
xchg
aaa
push
int3
xchg
cld
clc
sahf
inc
ss
call
xchg
insl
inc
in
jne
jg
fwait
je
enter
data16
cmpsl
dec
adc
cmp
call
test
insl
cmc
pushf
push
test
in
enter
jge
push
sahf
int
movsb
xchg
jae
mov
out
jno
push
sub
arpl
cmp
jb
push
sub
jbe
inc
or
and
jmp
mov
movsl
sub
inc
les
push
lods
fiaddl
lods
addr16
fs
mov
negl
add
fildll
hlt
pop
inc
jge
scas
push
xchg
xchg
cmp
es
sarb
push
lret
outsl
icebp
jno
negb
gs
nop
fcomi
and
nop
adc
inc
jmp
jnp
push
shl
out
jg
arpl
hlt
imul
call
into
add
test
imul
aam
cmpl
sub
push
dec
mov
xchg
xchg
loop
or
mov
adc
or
outsl
mov
jl
pushf
cmp
pop
cld
pop
fisttpll
lea
pusha
and
inc
push
movsl
sbb
adc
mov
mov
sub
mov
aad
inc
ror
mov
add
shll
pop
cli
sub
inc
push
scas
xor
mov
add
dec
or
pusha
je
dec
add
shl
xchg
in
insl
mov
repz
shll
mov
xor
pop
add
in
outsb
sbb
adc
inc
or
in
pop
outsb
jmp
and
je
addr16
mov
add
sub
test
fidivs
fdivrs
add
jle
clc
adcb
jns
outsl
lds
xchg
jb
mov
xor
mov
shl
mov
mov
nop
inc
loope
add
int
mov
mov
cmpsl
loopne
popa
sbb
es
jg
or
repz
push
out
xchg
cmp
movb
jle
jmp
je
js
inc
adc
or
addb
inc
or
adc
jg
aam
sub
lret
negb
call
add
mov
mov
mov
imul
loop
jp
stc
lret
inc
jge
jecxz
leave
xchg
cli
imull
lret
test
lods
pop
mov
mov
xchg
cmp
test
jg
mov
popa
bound
cmp
mov
jno
or
push
cli
and
nop
xor
mov
ret
jno
data16
push
int3
dec
aas
sub
and
fwait
add
lret
or
sbb
pop
les
mov
pop
mov
pop
mov
cwtl
cmp
mov
pusha
fcompl
push
inc
add
push
iret
xor
test
jns
arpl
inc
negl
out
mov
neg
sbbb
stos
das
ds
fadds
cmp
das
cs
dec
adc
or
in
inc
push
cmp
sub
jne
cmpsl
aas
imul
mov
cmp
push
xchg
cmp
push
add
push
mov
mov
lea
inc
je
mov
arpl
xchg
mov
fs
or
mov
add
sbb
sub
cmp
stos
das
call
lahf
divb
mov
es
shrb
or
lret
sub
roll
sub
xor
pop
mov
or
mov
pop
sub
cld
mov
mull
les
xor
pop
clc
mov
test
xchg
mov
lds
test
cli
pop
push
fdivrl
jns
mov
aas
lea
inc
lods
sub
stos
sbb
js
bswap
loopne
in
push
push
data16
adc
xor
cmp
imul
sbb
push
in
push
jnp
ljmp
gs
leave
idivb
ficomps
inc
or
cmovg
lods
mov
outsl
push
mov
push
pop
outsl
loop
cmp
mov
or
sbb
ljmpw
cmovge
fwait
std
mov
outsl
scas
in
stos
xor
inc
mov
cmp
jl
cld
push
fdivrl
push
add
sub
or
fcomi
data16
out
push
add
push
add
loope
cli
jge
or
out
test
or
in
and
jns
sub
dec
jl
addr16
gs
add
sub
cs
cmp
shl
js
scas
inc
cltd
cmc
call
adc
mov
or
stos
push
push
test
pop
dec
test
mov
ja
jle
mull
xchg
stos
loope
pop
ds
aaa
cmp
and
cmp
xchg
xchg
clc
push
mov
ret
loope
sbb
mov
mov
pop
cld
insb
fistpll
jecxz
mov
and
rolb
fld
jo
repnz
mov
lods
loop
movsl
sub
repz
loope
push
mov
inc
or
movsb
sbb
or
jg
dec
pop
clc
bound
fwait
or
outsb
push
jge
sarb
mov
fwait
inc
nop
mov
mov
dec
pop
je
ja
xchg
cmp
fs
lock
aas
mov
mov
test
mov
pop
stc
js
mov
in
pop
rclb
ja
push
in
lret
call
rclb
add
in
aas
cltd
xor
xlat
addl
jp
cld
stos
pop
in
test
xor
sub
filds
push
loope
fisubs
dec
pop
cmp
inc
fnstcw
and
and
jp
jp
js
adcl
cmp
addr16
sub
dec
jbe
jle
pop
vpshufhw
psubsw
outsb
and
ret
xchg
mov
aad
addr16
sbb
jg
adc
ds
icebp
jbe
mov
popa
pusha
jmp
xchg
inc
rol
pushf
clc
sbb
sbb
cmc
and
mov
sub
push
sub
out
imul
pop
fdivrl
imul
gs
mov
in
inc
cmp
cmp
fcmovnu
jp
inc
inc
adc
fs
ljmp
fnstsw
cmpsl
push
add
pop
loop
and
test
fnstcw
jg
cli
mov
pop
lock
roll
shl
sahf
call
out
mov
scas
out
repz
cmpsb
mov
push
adc
lret
inc
push
and
ret
mov
into
mov
sbb
stos
out
aas
imul
cld
jp
adc
fcos
xchg
inc
jns
out
outsb
mov
xorb
repnz
adcl
xchg
jmp
sti
testl
loop
push
insb
adc
dec
and
jae
push
add
imul
mov
jp
and
push
jns
cmp
pop
xor
addl
sub
insl
sub
mov
je
pop
or
test
imul
icebp
inc
mov
add
jo
test
addr16
push
call
out
xor
sbb
shll
orb
pop
lret
push
roll
sbb
rcll
adc
inc
pop
or
jnp
pusha
insl
repnz
std
sti
fs
int3
xchg
std
callw
out
xor
dec
or
or
fldl
fnstsw
mov
jo
mov
mov
add
jo
in
insb
notb
stos
inc
jo
jg
in
inc
outsb
cltd
inc
jbe
add
jmp
inc
cmp
xor
mov
lret
xchg
cmp
mov
add
push
inc
push
dec
adc
mov
pop
add
mov
iret
nop
dec
inc
or
adc
aaa
mov
mov
stos
sub
push
movsl
xor
shrl
stc
inc
data16
ss
mov
sub
mov
enter
jl
fdiv
jmp
xchg
cmp
jle
loope
cmpsl
sub
hlt
inc
or
lret
jg
adc
mov
inc
mov
cmp
xor
fidivl
imul
add
push
adc
sbb
mov
shll
add
call
stc
add
mov
jle
pop
mov
cmp
fistpll
sub
xchg
xchg
sti
pusha
push
lds
mov
xor
addr16
je
inc
mov
mov
xchg
test
cld
or
rorb
sahf
inc
cmpsb
add
in
cltd
in
dec
adc
cmpsb
sub
xchg
mov
jbe,pt
add
cld
adc
nop
jne
insl
sbb
xchg
or
pop
rcrl
jl
or
movsl
inc
fcomi
push
call
icebp
test
xor
and
add
and
aas
insl
call
or
add
push
mov
sub
enter
movsl
fpatan
call
or
lea
pop
test
mov
add
sbb
push
dec
push
outsl
jae
lods
sbb
jne
dec
mov
mov
cmpl
jbe
fldcw
in
jb
adc
and
xchg
cmp
or
pushf
cmp
popf
fdivrl
enter
add
scas
pushf
adc
ficoml
xchg
aas
movsl
lret
inc
adc
sub
dec
push
aaa
or
adc
out
dec
mov
or
mov
rcll
push
adc
push
pop
dec
adc
shrb
xchg
mov
and
rorl
out
cmpsb
fidivl
xor
lods
and
lret
cmp
pop
scas
pop
add
cmpb
mov
nop
sbb
mov
shlb
icebp
mov
jmp
sbb
or
fiadds
xor
jno
sbb
ljmp
call
mov
mov
cmp
sbb
mov
mov
std
or
mov
sbb
push
enter
call
dec
jge
mov
adc
mov
cmp
not
xchg
out
gs
jno
test
push
xchg
mov
clc
and
test
fidivrl
pop
xor
in
imul
adc
mov
lret
outsb
mov
inc
sbb
adc
dec
jno
sar
popf
or
lods
xor
mov
ja
or
into
mov
movsb
cmpsb
xor
in
adcb
inc
push
sub
push
add
mov
or
mov
cmpsl
cmp
and
outsb
aas
sbb
cwtl
jge
fs
jb
lods
jae
insl
xchg
mov
sarb
setns
push
les
das
jb
mov
mov
fadds
iret
inc
pop
push
nop
cltd
rclb
mulps
repnz
aad
mov
fwait
cmp
stos
xor
stc
xlat
outsl
jmp
jecxz
ret
aad
repnz
nop
adc
in
mov
mov
jge
xor
mov
aam
insl
movsl
xchg
aaa
imul
adc
fiadds
in
mov
xchg
dec
les
lods
inc
popf
jecxz
notb
mov
and
ja
mov
xor
lret
fldl
test
push
jo
dec
lret
pop
and
ljmp
scas
repz
or
in
push
out
outsl
push
jmp
or
dec
adc
popa
mov
cmpb
cmpsl
imul
fs
cwtl
push
je
add
pop
insb
icebp
and
mov
cmp
xchg
or
xchg
ds
pop
stc
gs
ljmp
mov
imul
call
icebp
loopne
cs
xor
dec
lods
or
jae
adc
mov
es
cli
pop
out
cld
scas
sub
repz
mull
cmp
sub
lea
lret
les
jb
daa
push
repnz
popl
mov
push
in
xchg
ds
outsb
repnz
ss
cli
div
out
jo
loop
xlat
mov
loope
sahf
stos
cs
xor
or
cmpsb
sub
enter
imul
out
aam
pop
out
cwtl
sbb
mov
cmp
idivl
mov
push
test
mov
or
xor
popa
in
push
inc
mov
adc
jns
jno
lods
pop
push
movlps
es
fwait
loop
push
dec
mov
nop
cmp
add
cmp
scas
pop
push
push
mov
cmpsb
mov
xchg
in
daa
les
icebp
cmp
mov
mov
mov
test
sub
es
mov
mov
xchg
xor
shll
cwtl
inc
mov
scas
xor
adc
and
xchg
jmp
or
mov
mov
scas
cmpsl
repnz
inc
mov
addr16
lods
into
mov
adc
lahf
inc
adc
dec
cmpsl
inc
out
jae
mov
pop
pop
and
dec
repz
pop
push
pop
push
xor
cwtl
adc
int
int
fcomip
dec
push
sti
and
std
cmc
fsubs
sbb
pop
add
ss
js
and
xchg
mov
fistl
or
xorl
xlat
jp
push
out
adc
or
lock
sbbb
xor
or
mov
rorl
rcll
mov
add
push
sahf
inc
mov
mov
push
divl
xor
lret
xchg
pushf
popf
les
mov
lods
inc
or
push
clc
test
negb
subb
rol
icebp
hlt
or
pop
mov
test
adc
shrl
stos
and
jo
test
pop
dec
fldcw
stos
mov
lcall
aad
pop
push
cwtl
cmp
stos
rorb
sbb
mov
cmpsb
sub
in
mov
xor
jp
in
mov
push
call
or
mov
pop
mov
and
inc
jl
sbb
stos
das
jae
push
lret
aaa
bound
lods
lret
shll
sbb
jp
and
ret
mov
jmp
dec
xchg
jecxz
fists
mov
std
push
sbb
jns
xchg
lret
je
inc
addl
std
cltd
jne
lret
loope
cmpsb
adc
xchg
sub
xor
jns
shll
adc
montmul
cmpsb
xor
adc
movsb
adc
jmp
jle
pop
ret
sub
popa
jl
xchg
cmp
imul
out
push
std
jg
xchg
cmp
mov
dec
xchg
add
xchg
movnti
lods
push
pop
ja
xchg
jge
hlt
and
repnz
test
push
std
sub
outsl
out
xchg
sbb
mov
push
std
sub
test
xor
ret
pusha
and
adc
das
add
push
sarl
dec
and
dec
xor
add
daa
push
std
out
adc
outsl
xor
xor
and
popl
fwait
inc
mov
mov
mov
mov
jmp
or
xchg
inc
push
out
jecxz
nop
mov
inc
sbb
mov
pushf
sub
mov
ret
xchg
mov
mov
sbb
fwait
das
scas
mov
mov
aad
popa
ss
pop
into
das
cmp
xor
push
aad
sub
movsl
add
fistpll
push
mov
negb
call
push
test
jne
movsl
jo
cvtdq2ps
or
mov
or
pushf
sahf
sarb
sarb
fldenv
push
mull
mov
lods
cld
xor
cmpsb
mov
mov
insb
jbe
cld
mov
pop
test
push
add
fdivrp
pop
scas
movsb
cli
pop
nop
mov
cwtl
xchg
lret
call
mov
or
int
cmc
jl
jge
fdivl
lods
sub
fidivrl
jg
adc
aad
add
ficoms
in
cld
adc
inc
lcall
fs
mov
test
fiaddl
xchg
testb
lds
jae
scas
das
jecxz
flds
add
imul
stc
insl
in
rcll
jns
cld
mov
int
aas
mov
test
inc
pop
cwtl
inc
mov
movsl
cs
cmpsl
xor
xor
or
mov
pop
popf
inc
popf
orl
in
pop
lret
cltd
push
cmp
cmp
test
jns
pop
jbe
mov
adc
cmp
mov
jmp
and
mov
push
leave
scas
push
push
shl
jns
in
insb
xchg
cwtl
push
sti
test
xor
dec
shlb
cbtw
jnp
ficompl
push
std
mov
sarb
ds
ja
sub
aam
jg
pop
in
sub
shlb
adc
xlat
jae
ffree
add
mov
sub
cmpsb
imul
pop
and
jns
push
xchg
jmp
and
lea
loopnew
jle
jge
sbb
inc
jecxz
lahf
fnsave
lods
rclb
cmpsl
rclb
inc
sub
mov
int
push
or
mov
and
add
cmp
jne
out
cmp
or
xor
into
loop
xor
and
mov
ds
or
sub
push
mov
mov
js
shr
jno
sbb
dec
lods
sub
fcompl
adc
idivl
dec
or
popf
into
sti
pop
lret
cmpsb
cmpsb
das
std
push
rcll
sbb
dec
sbb
dec
out
cltd
xor
insb
mov
mov
and
mulb
outsb
in
test
cmp
xchg
je
lret
push
adc
icebp
mov
lods
ss
js
pusha
nop
inc
mov
xor
mov
sarl
adcb
int3
sbb
sub
sbb
push
mov
mov
movsl
xor
int
rclb
ret
dec
push
sbb
and
ret
test
push
dec
repnz
mov
inc
cmpl
sub
pusha
inc
aad
pop
xchg
mov
push
and
inc
or
xor
rorl
ffree
mov
dec
das
mov
inc
fs
and
movsb
daa
cmp
cmpsl
sub
das
fadds
leave
cmpsb
sub
pusha
in
or
ljmp
push
stc
fnstsw
mov
js
jmp
mov
and
test
mov
xchg
fdivrs
push
jae
out
jle
ljmp
mov
test
or
mov
jle
cmp
and
jne
test
fsubrl
in
fiaddl
and
popl
out
addr16
pop
divl
jne
scas
outsl
pop
mov
xor
jl
push
scas
ss
jne
popa
adc
mov
mov
lods
test
loopne
out
xor
sbb
pop
aas
sahf
aam
data16
push
jl
mov
mov
xchg
inc
inc
das
adc
mov
cmpsb
in
push
mov
push
ret
push
add
lods
adc
sub
jmp
shlb
push
pop
out
aaa
cli
les
mov
popa
out
fninit
push
sbb
les
or
jnp
fcompl
sbb
fiadds
cmp
push
sti
int
jbe
sbb
dec
pop
test
dec
out
or
rolb
pusha
icebp
mov
mov
dec
or
cmc
sbb
xor
fnstcw
test
adc
mov
out
lods
mov
psrlw
cmp
inc
sub
push
clc
sbb
movsb
sub
stos
jno
stos
stos
mov
xor
cld
sub
mov
in
add
sub
inc
adc
in
rclb
rolb
add
push
jns
scas
sub
call
addr16
dec
adc
pop
clc
shlb
loop
pop
pop
lcall
mov
push
es
in
push
add
mov
adc
out
sub
cmpsl
enter
std
sbb
into
cmp
inc
or
mov
push
pop
loop
divl
aas
lahf
push
cmp
push
jb
xor
inc
scas
cs
and
mov
jbe
movsb
sub
mov
xor
sbb
fisubs
mov
xchg
jg
enter
inc
jmp
lds
test
mov
inc
mov
pushf
and
aad
js
mov
dec
sbb
inc
adc
adc
mov
mov
push
add
mov
rclb
and
cmp
jecxz
bound
push
add
enter
cltd
adc
fidivrs
xor
jae
pushf
cwtl
cmp
mov
lea
cmpsl
push
lcall
lea
inc
mov
cmp
dec
or
and
aad
aad
je
fbld
xor
out
push
push
in
mov
xchg
mov
stos
pusha
in
fdivrs
jno
mov
loope
mov
mov
lods
aas
mov
hlt
cmc
das
mov
loope
inc
sbb
xchg
cmp
sti
pop
push
jno
cmc
test
add
add
imul
adc
push
stos
sub
push
add
mov
fdivrl
mov
mov
inc
js
xor
mov
out
cmpsl
cmp
imul
pop
xchg
inc
adc
dec
xchg
inc
add
lods
sub
outsl
jmp
ficoml
outsb
out
mov
test
add
mov
fbstp
scas
clc
pop
lea
sub
jl
bound
lret
mov
imul
jle
or
cli
fcompl
scas
push
pop
xchg
ds
dec
addl
adc
cltd
dec
xorl
hlt
lcall
test
mov
psrlq
mov
les
mov
jb
and
sbb
cmp
jne
or
js
arpl
push
inc
test
sub
xchg
movsl
daa
call
enter
mov
xchg
cmp
inc
or
jb
int
sub
popl
jnp
sar
sbb
mov
mov
pop
sti
push
scas
fnstsw
fistpll
sub
cmp
clc
push
clc
pop
pusha
loop
dec
push
jb
mov
or
lcall
pop
aam
add
loopne
mov
movsb
sti
xchg
or
pop
push
pop
cmp
sbb
dec
sbb
xchg
add
mov
push
into
mov
daa
push
mov
sbb
int3
cltd
cmp
adc
pop
movsb
xor
rcl
mov
sbb
add
int3
xchg
or
sbb
push
sbb
pop
add
inc
push
and
and
int
fildll
xchg
cmp
sub
out
add
cmp
cmp
fs
xlat
je
into
test
addl
and
fwait
mov
and
fiadds
mov
faddl
sbb
or
mov
mov
pop
leave
ret
enter
out
insl
dec
mov
in
outsb
cmp
mov
dec
pop
or
sbb
dec
inc
ds
das
inc
fimull
sahf
cmp
iret
cmpsb
xor
shl
pusha
imulb
push
pop
aas
mov
gs
add
int
push
ret
mov
lea
mov
jmp
mov
xchg
or
repnz
mov
adc
mov
xchg
and
jp
je
pop
add
xlat
adc
push
xor
pop
in
mov
pop
sti
dec
adc
xchg
andl
insb
inc
or
xchg
and
cs
xchg
iret
rorl
cwtl
int
mov
push
clc
pop
cmp
rolb
push
pusha
or
cmp
ja
call
push
test
out
aad
fnsave
push
add
shr
stos
fildl
jl,pn
sub
cwtl
inc
iret
mov
mov
mov
pop
cmp
mov
lahf
add
and
das
sbb
stos
aaa
pusha
cmc
fnsave
jl
mov
popf
inc
inc
mov
hlt
or
es
cmp
pop
push
std
dec
jp
out
cmp
and
cmp
fisttpll
int3
dec
dec
les
or
jmp
mov
in
sbb
mov
ret
and
mov
ret
xchg
sub
push
jo
sti
adc
addr16
dec
mulb
pop
lock
jmp
cmc
push
add
xor
adc
sub
sub
fs
push
aaa
mov
or
dec
or
push
das
stos
cs
mov
or
in
push
lods
sti
pop
mov
test
sub
add
xor
arpl
mov
mov
scas
daa
add
pop
cmp
push
add
test
arpl
sbb
push
lret
lahf
inc
pop
mov
xchg
and
add
cmc
stos
loop
imul
cld
data16
mov
imul
xchg
mov
repnz
xchg
ds
adc
popa
sbb
clc
je
sub
std
pop
xor
arpl
lea
arpl
aad
loopne
orb
mov
cmp
mov
inc
lea
cld
pop
adc
cmp
sub
sub
jle
xchg
jo
pop
xlat
addl
fwait
pop
pmullw
int3
mov
xor
cmpsl
seto
out
repnz
test
sarb
xlat
je
test
mov
ja
mov
and
jmp
add
cmpsl
stc
jne
xor
jb
roll
mov
aad
mov
out
add
xchg
in
cmp
imul
sbb
hlt
pop
rolb
cmp
in
xor
inc
add
mov
mov
mov
mov
cmc
int
out
out
not
sbb
scas
add
mov
pop
scas
mov
sub
or
add
adc
adc
push
lock
add
mov
mov
dec
lcall
rclb
push
sbb
dec
sbbl
pop
mov
out
xchg
mov
movsb
lods
dec
into
sub
lcall
loope
out
pop
scas
and
jmp
xchg
les
movsl
cmp
in
or
insb
ret
pop
sahf
cmp
js
mov
xchg
inc
fmulp
bound
gs
mov
xor
andb
shr
test
sahf
mov
pop
repnz
and
adc
scas
xchg
loope,pn
popa
clc
stos
add
push
push
aam
xchg
sahf
xor
fidivl
push
movsb
sti
adc
clc
dec
lds
stc
nop
dec
lahf
dec
jecxz
insb
pop
scas
popf
icebp
push
and
mov
jbe
push
jmp
xchg
cmpsb
cmp
xchg
ljmp
jmp
or
xchg
rcrl
loop
mov
mov
and
cmp
gs
mov
mov
sub
or
xchg
sub
sub
mov
mov
sbbb
rcl
imul
lock
mov
movsl
stos
inc
fdivl
lret
sub
cld
lcall
dec
in
sbb
mov
ret
xchg
cmc
xchg
push
jmp
push
cmpsb
cmp
adc
ss
daa
push
mov
cwtl
inc
fmul
arpl
arpl
mov
das
ljmp
orb
mov
pop
repz
es
mov
inc
fistl
cwtl
das
fistpll
stc
test
lret
cld
push
aad
test
repz
jo
push
mov
dec
das
jl
cli
xchg
dec
popf
dec
in
push
scas
fwait
out
imul
mov
mov
je
push
in
inc
xchg
cmpsl
ds
popa
jae
xchg
call
xchg
sub
cmp
jp
or
cwtl
mov
loopne
mov
scas
in
and
cmp
mov
mov
sub
test
jns
or
xchg
cs
stc
gs
sub
dec
scas
dec
sbbl
rcl
push
lahf
mov
mov
mov
cmpsb
test
fnsave
sub
xchg
lret
jecxz
jmp
mov
outsb
push
mov
rorl
rclb
inc
loope
or
push
xchg
sub
jecxz
in
xchg
cltd
aas
fcmove
fs
and
pop
mov
aad
orb
mov
pop
hlt
shlb
mov
mov
xor
jbe
cli
cmpsl
mov
xor
sbbl
sbbl
dec
movsb
repz
outsl
mov
test
ret
fdivl
dec
das
jp
sti
xchg
dec
fwait
dec
in
imul
add
mov
mov
jb
push
in
aas
xchg
cmpsl
lds
or
mov
sub
cmp
jp
pop
mov
cmp
mov
pop
mov
scas
in
test
xor
mov
mov
sub
test
jns
push
cmpsb
dec
daa
xchg
cs
clc
data16
sub
dec
lods
dec
test
jl
shrl
sahf
mov
mov
rclb
cmpsb
inc
fidivs
sub
xchg
leave
sbb
ljmp
sahf
cmp
iret
insl
mov
push
in
mov
loopne
or
lds
xchg
sub
jecxz
jmp
mov
mov
fxch
or
mov
sub
sbbl
aad
jg
mov
xor
sub
mov
inc
fstl
xor
jne
sti
cmpsb
cld
mov
cs
dec
aad
sbbl
repz
outsb
mov
test
ret
hlt
inc
das
js
cld
xchg
inc
cltd
dec
in
push
imul
mov
mov
jo
push
out
ds
cmpsl
ds
pop
jne
xchg
in
pop
push
mov
sub
aaa
jecxz
imul
add
mov
pop
mov
lods
out
test
cs
movsb
xor
sub
adc
adc
xchg
cs
mull
sub
dec
stos
dec
test
int3
shrl
pushf
mov
mov
rcrl
adc
je
cs
std
xchg
pop
dec
in
call
imul
cmp
shrb
mov
out
mov
mov
fidivs
adc
xchg
xor
jnp
test
lcall
and
pop
scas
aas
loopne
or
xor
sub
add
xchg
inc
ficoms
lcall
cli
mov
sbb
dec
insl
jg
mov
mov
insb
rclb
adc
repnz
xor
jbe
std
xchg
inc
xchg
dec
in
sbb
sbb
mov
outsb
or
cmp
test
rcrl
loop
pop
adc
xchg
sub
xor
mov
mov
cltd
mov
fisubl
mov
stos
out
xchg
sub
aad
decb
repz
sub
adc
dec
loopne
and
das
push
cmc
addr16
es
dec
stos
inc
test
lret
aam
std
lcall
push
in
rcrl
adc
jb
das
cmc
xchg
std
xchg
lds
dec
in
out
mov
imul
mov
push
out
mov
fdivl
push
arpl
pop
xchg
das
xchg
sub
in
call
or
cmp
iret
popw
pop
and
pop
scas
inc
xlat
fistpll
mov
xor
sub
push
jge
test
dec
fists
fwait
xor
jno
std
mov
les
jge
mov
mov
push
pop
pushf
icebp
adc
lock
xor
je
xchg
inc
xchg
dec
out
fs
xchg
out
add
mov
shr
cmp
lock
ja
loopne
pop
adc
in
add
mov
shrb
fsubs
mov
fldt
aas
pop
cld
push
movsl
sub
dec
sub
jg
jnp
add
cltd
xor
jmp
mov
test
xchg
sti
cwtl
movsb
cmp
sbb
mov
ret
jo
test
jo
xor
repz
xchg
ret
adc
out
in
mov
insl
add
ss
addr16
pop
out
mov
fidivl
or
enter
xchg
sub
out
out
mov
mov
add
addr16
es
test
inc
fcomp
jns
mov
das
int3
sub
std
push
jge
sbbb
loopne
mov
addr16
mov
ret
test
push
movsb
cmp
cmc
mov
imul
stos
and
xor
jb
call
les
mov
in
add
mov
shl
cmp
icebp
cmp
js
mov
pop
adc
in
arpl
mov
xor
push
and
fisubrl
aas
pop
sti
sub
pop
hlt
lods
dec
sub
adc
lahf
dec
loop
and
add
je
dec
cmpsb
inc
xchg
jbe
insl
stc
xchg
movsl
cmp
sbb
mov
pop
sbb
adc
outsl
shlb
icebp
nop
call
inc
jecxz
mov
outsb
add
mov
ljmp
inc
cmp
pop
leave
pusha
xchg
sub
sub
mov
jle
jg
dec
mov
push
popf
ss
push
mov
inc
js
movsb
test
lret
sub
cld
dec
jle
sbbb
xor
outsl
push
push
es
hlt
inc
fsubrs
adc
testb
in
adc
push
mov
xor
jo
add
ret
mov
jecxz
add
in
mov
push
mov
adc
lods
xchg
fisubrs
out
popa
pushl
fwait
mov
shrl
aad
mov
fsubs
inc
xlat
pop
stc
sub
cmc
stos
dec
sub
adc
popf
dec
loop
pop
fwait
xor
imul
movsl
inc
xchg
je
xlat
outsb
clc
xchg
movsl
cmp
sbb
lea
ret
pop
sbb
stos
sahf
cmp
js
mov
call
inc
loope
mov
outsl
push
xchg
xor
shlb
and
test
mov
lods
inc
cmp
ja
or
popa
nop
sub
jg
jge
dec
scas
add
sahf
xor
push
and
xchg
inc
fcmovu
jbe
movsb
cmpsl
sti
popa
clc
sub
sub
cli
dec
jg
jg
dec
loope
mov
push
push
and
inc
fnstenv
adc
mov
retw
pop
cwtl
in
adc
js
ds
outsl
or
push
call
nop
loop
push
adc
cmp
jecxz
lea
add
repnz
push
jns
mov
leave
pusha
or
cs
pusha
std
mov
das
addb
adc
mov
es
fcoms
sub
imulb
lret
jge
std
fwait
dec
loop
push
pushf
xor
imul
movsb
inc
xchg
jb
fsubrs
xchg
movsl
cmp
sbb
mov
ret
pop
sbb
popf
cmp
js
mov
call
inc
fistps
pop
xchg
xor
shlb
mov
mov
lods
inc
cmp
ja
pop
pop
lret
bound
mov
and
mov
lods
add
lahf
xor
shrl
push
es
push
test
fcmovnu
je
movsb
movsl
cli
stc
sub
sub
clc
dec
adcb
sbb
dec
lahf
sahf
xor
pushf
repnz
sbb
ja
movsl
cmp
cwtl
clc
pop
xchg
jmp
lods
sbb
loope
ljmp
xchg
cmp
push
jmp
mov
jo
adc
mov
xor
jns
xchg
lret
test
fisubrl
mov
sub
dec
shrl
shll
add
icebp
mov
and
es
imull
lret
cld
cltd
dec
loop
sbb
imul
mov
fnstenv
xchg
movsl
cmp
pop
clc
vphaddbq
imul
pushf
aaa
loope
imul
push
ljmp
jno
xchg
das
cmp
pusha
mov
es
pop
lock
scas
inc
cmp
ja
add
es
sub
scas
ljmp
add
mov
push
daa
mov
push
cmpsb
inc
jb
movsl
mov
lds
testb
jl
dec
loop
popf
lahf
ss
imul
and
adc
nop
enter
xchg
jmp
loop
jmp
or
cwtl
cmp
pop
mov
fbstp
adc
es
test
adc
cmpsl
cwtl
das
fldcw
jmp
dec
sub
pop
sahf
mov
aam
jg
and
mov
and
push
hlt
adc
cmpsl
inc
lds
jg
cli
cwtl
dec
jecxz
sbb
add
mov
pop
outsl
ret
hlt
nop
cmpsb
cmp
inc
jecxz
pop
adc
ss
push
mov
xchg
mov
fistpl
mov
pusha
jb
xchg
sub
nop
daa
in
pop
icebp
mov
scas
inc
cmp
js
add
mov
sub
fbstp
dec
test
lret
cld
push
sub
dec
movsb
inc
fst
jo
cmpsb
mov
ret
sub
sbb
dec
jecxz
fwait
mov
add
mov
fdivl
push
cmpsl
ds
xchg
cli
xchg
popa
lds
sbb
out
ss
or
cltd
cmp
and
shrd
aad
xor
repz
adc
movsl
cwtl
das
xlat
sub
sbbl
lahf
scas
dec
aam
jge
es
shll
inc
fistl
adc
cmpsb
inc
lds
adcb
xchg
dec
jecxz
sbb
add
outsb
mov
pop
insl
rcr
repz
xchg
inc
loope
pop
adc
scas
cltd
xor
jns
mov
add
cmp
pop
jae
xchg
sub
pop
mov
sub
jge
icebp
scas
add
js
add
mov
xchg
sub
fidivs
dec
cmpsl
decl
mov
sti
push
sub
dec
mov
mov
ret
repz
sbbb
adc
jecxz
lcall
cwtl
in
mov
pop
in
inc
fdivl
or
cli
xchg
lds
pop
xchg
out
scas
pop
mov
jp
cmp
int
pop
add
mov
fdivl
push
lods
ds
das
nop
daa
popa
pop
repz
subl
adc
arpl
movsb
cwtl
das
sub
sbbl
or
jl
es
shlb
inc
fistl
adc
movsl
inc
lds
pop
clc
xchg
dec
jecxz
sbb
add
insl
mov
pop
insb
rcr
repnz
xchg
inc
loopne
pop
adc
scas
cwtl
xor
jns
mov
add
cmp
push
mov
pop
jae
nop
sub
pop
mov
sub
jl
icebp
lods
add
inc
ss
js
add
mov
xchg
sub
fnsave
cmpsb
decb
mov
cli
push
sub
dec
mov
lahf
hlt
fs
and
inc
sbbb
adc
cltd
mov
add
mov
fdivl
or
ds
cli
xchg
les
pop
xchg
in
scas
push
mov
jp
aaa
ss
push
add
mov
or
cs
daa
pusha
std
pop
repz
adc
cwtl
das
aad
ljmp
jl
lahf
lods
dec
aam
jnp
es
into
and
push
out
adc
movsb
inc
lds
sbbl
les
mov
add
insb
mov
pop
push
fdivl
mov
xchg
inc
faddp
pop
adc
mov
xor
jns
mov
add
cmp
push
mov
pop
je
pop
mov
sub
jp
icebp
stos
add
paddd
data16
xchg
cs
test
mov
movsb
cld
or
clc
dec
sub
jg
repnz
inc
insb
adc
and
sbbl
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
sti
xchg
ret
pop
jecxz
mov
mov
jnp
xor
add
mov
fnstenv
or
xchg
sub
pop
hlt
sub
scas
inc
mov
jnp
jg
int
add
es
pop
hlt
mov
es
mov
jns
daa
mov
int3
push
inc
fisttpll
adc
mov
ret
sbbb
xchg
dec
in
push
mov
add
mov
push
mov
xchg
inc
fadd
pop
push
sbb
popa
mov
iret
out
add
cmp
pop
mov
pop
jne
lea
cmp
sub
js
repnz
lret
cld
push
shlb
sbb
out
test
jo
dec
mov
aam
testb
pop
repz
dec
push
test
lock
and
test
je
dec
in
xchg
mov
add
mov
and
cmp
jne
or
xchg
rcrb
loope
mov
scas
in
loope
cmp
add
xor
and
or
xchg
sub
cmc
sub
inc
mov
jl
jge
into
add
in
adcl
dec
and
or
ja
sub
lret
fimuls
adc
mov
roll
rclb
inc
loope
add
push
mov
mov
in
xchg
xchg
inc
fcmovb
pop
or
sbb
pop
mov
shl
addb
mov
pop
out
aaa
shlb
mov
pop
jbe
mov
aad
lods
xchg
sub
jbe
repz
pushl
adc
push
shlb
sbb
xor
out
test
outsl
mov
mov
ret
aad
cmc
dec
sub
jnp
hlt
mov
dec
imul
std
pop
mov
test
jb
dec
out
xchg
mov
add
out
push
sbb
jne
pop
stos
inc
cmp
pop
mov
sbb
loopne
cmp
bound
add
in
mov
and
pop
cmpsb
inc
fcom
sub
imulb
jl
inc
scas
dec
jge
jl
into
add
in
adcl
and
mov
jbe
sub
leave
sbb
dec
ljmp
sahf
cmp
enter
sbb
mov
mov
loopne
add
data16
mov
gs
test
xchg
ds
pop
or
mov
sub
jl
mov
shl
jg
lcall
and
mov
aas
push
stos
xchg
sub
jne
hlt
cmpsb
std
mov
das
enter
push
shlb
sbb
test
outsb
mov
mov
hlt
dec
sub
jns
cmc
mov
dec
push
data16
sbb
test
jo
push
out
xchg
mov
add
push
mov
and
aaa
fidivs
push
stos
inc
cmp
leave
pusha
mov
sbb
fildll
cmp
pusha
add
popf
xor
and
adc
or
es
sub
pusha
imull
jp
inc
lods
dec
jle
jnp
into
lcall
fwait
popf
pop
cs
lock
mov
mov
push
dec
mov
fs
pop
jp
lock
mov
jl
sbb
jge
or
out
pop
inc
mov
sbb
daa
fcoms
movsl
fldenv
movsb
pop
cmpl
push
pop
test
pop
jg
xor
or
inc
jecxz
mulb
in
in
pushf
js
adc
push
sbb
lret
or
std
lods
sbb
jo
mov
lods
mov
fistpll
jae
mov
cmp
ret
xchg
insb
inc
mov
hlt
adc
mov
pop
fdivs
out
aas
dec
push
jle
cmc
es
popa
roll
mov
out
jne
inc
jecxz
scas
insb
test
cli
jnp
sbb
add
clc
inc
sub
lock
lahf
push
add
es
lds
dec
pushw
stc
cltd
into
dec
mov
xor
nop
xchg
xor
add
loop
stos
mov
push
aaa
mov
popf
xor
ja
shl
cmp
out
sub
mov
cwtl
lret
ds
hlt
pop
test
jno
mov
into
jmp
add
dec
and
xor
loopne
jbe
jp
or
xor
jecxz
cmp
imul
in
pushf
imul
xchg
cmp
push
imul
or
xchg
push
push
and
mov
adc
outsb
bound
pop
adc
loop
inc
mov
es
xchg
fisttps
movsb
push
add
jg
in
pop
or
sbb
cmpsb
cmp
in
stos
push
fdivrp
sbb
iret
xorb
sub
jbe
mov
scas
cmp
rclb
lods
stc
js
or
push
in
jp
mov
mov
js
mov
fisubrl
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cltd
xchg
leave
lods
adc
cli
shrb
imul
outsl
sub
lret
stc
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jmp
fldcw
lods
mov
flds
lds
cwtl
mov
cmc
mov
frstor
and
jp
and
adc
cwtl
inc
hlt
aad
jo
testb
sub
fnstsw
inc
lods
sub
lods
fdivrl
loope
or
ret
dec
mov
pop
outsl
adcb
jge
fistpl
int3
bswap
mov
sbb
nop
mov
sbbl
push
jae
add
sbb
mov
xchg
xchg
xor
inc
sahf
mov
outsl
inc
cld
lret
push
xor
push
and
xor
dec
into
mov
mov
fsubs
push
push
mov
and
adc
and
rclb
ss
inc
mov
lds
jbe
gs
les
jmp
push
inc
and
cmp
mov
mov
cmpl
inc
movsl
ss
stos
pop
sahf
jo
ja
insb
int
inc
sbb
es
fstps
mov
dec
adc
test
sbb
inc
xor
in
test
adc
movsl
adc
dec
sub
movsl
sbb
pop
sub
jmp
mov
inc
js
and
daa
divl
mov
adc
outsb
fwait
xchg
pop
push
or
je
cltd
mov
jb
pusha
sub
div
pop
mov
imul
lcall
outsl
fsubrl
popf
or
jne
and
pop
fisubrl
xchg
mov
push
push
or
fwait
stc
and
les
not
mov
aaa
aas
ja
stc
mov
or
imul
mov
lods
xchg
in
xlat
or
inc
jmp
jbe
scas
and
nop
adc
dec
jae
and
popf
push
lods
icebp
or
in
nop
ret
cmpsb
