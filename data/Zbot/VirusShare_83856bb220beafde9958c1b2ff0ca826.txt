jge
movsl
sub
icebp
aad
mov
jp
sub
popf
add
movsb
js
xchg
and
pop
adc
sub
jp
jbe
ljmp
cwtl
pop
pop
add
push
xor
xor
jbe
push
icebp
jle
sub
and
incl
sbb
sarb
adc
sub
adc
sub
call
test
xchg
xchg
sub
iret
cmp
xor
jne
sub
imulb
lahf
pop
jns
sub
stc
fiaddl
cmc
add
int3
cld
shlb
daa
popf
sub
sahf
or
jns
push
mov
jb
pop
adc
sub
sbb
es
adc
adc
jp
sub
cltd
inc
inc
fsubs
or
mov
cmp
pushf
inc
jle
sub
push
xor
xchg
xchg
bound
dec
sub
push
and
insb
add
fmuls
inc
mov
and
addr16
lods
shll
push
and
imul
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
mov
sub
movzwl
mov
or
movzwl
mov
imul
imul
mov
mov
and
or
movzwl
movl
mov
and
mov
add
mov
mov
add
mov
movzwl
movzbl
xor
and
mov
call
mov
mov
sub
add
mov
movzbl
sub
mov
movzbl
shr
mov
mov
imul
movzbl
sub
mov
movzbl
xor
sub
mov
movzwl
or
sub
mov
movw
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
mov
mov
add
add
mov
mov
add
sub
mov
mov
movw
movzwl
mov
mov
mov
movzwl
mov
movzwl
or
mov
movzwl
and
imul
mov
mov
sub
movzwl
mov
sub
mov
movzwl
add
mov
movzwl
mov
call
mov
movzwl
mov
and
movzwl
xor
mov
mov
imul
sub
mov
movzwl
and
mov
mov
xor
or
mov
movzwl
sub
mov
movzwl
add
add
mov
mov
movzwl
or
mov
movzwl
imul
mov
push
push
pushl
call
mov
mov
add
movzwl
movzwl
or
mov
mov
imul
add
mov
imul
sub
mov
shr
mov
mov
movzwl
imul
mov
movzwl
add
mov
mov
movzwl
imul
mov
call
movzwl
shl
movzwl
movzwl
shr
movzwl
mov
shl
mov
mov
or
mov
movzwl
or
movzwl
sub
mov
mov
imul
mov
mov
add
mov
movw
mov
or
movzwl
mov
shl
mov
mov
mov
mov
shl
mov
movzwl
mov
mov
imul
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
movzbl
mov
shl
mov
mov
shr
mov
mov
shl
mov
mov
and
mov
sub
mov
mov
xor
mov
call
mov
mov
add
add
mov
mov
add
movzbl
mov
mov
movzbl
movzbl
mov
add
sub
mov
mov
movzbl
xor
mov
mov
mov
mov
and
imul
mov
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
add
movzwl
mov
movzbl
mov
movzwl
mov
mov
sub
mov
movl
push
push
push
call
mov
mov
shl
mov
mov
test
je
push
push
call
mov
test
je
push
push
push
push
call
mov
test
je
call
mov
or
mov
sub
mov
movzwl
mov
movzbl
mov
mov
and
movzbl
imul
movzwl
mov
movzwl
or
mov
mov
imul
movzwl
movzwl
and
mov
mov
movzwl
add
mov
mov
or
imul
mov
movw
movzbl
sub
mov
movzbl
add
movzbl
movzwl
shl
movzbl
movzwl
mov
mov
xor
movzwl
and
movzwl
mov
movzwl
mov
xor
movzbl
mov
mov
push
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
sub
movzbl
mov
mov
mov
mov
imul
add
mov
mov
movzwl
movw
mov
imul
mov
push
call
mov
mov
or
imul
movzbl
mov
or
movzbl
mov
mov
mov
sub
movzbl
mov
sub
mov
mov
shr
mov
mov
or
mov
mov
add
mov
mov
xor
mov
mov
add
movzwl
add
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
sub
mov
mov
movzwl
mov
mov
mov
mov
mov
imul
add
mov
mov
imul
imul
mov
movzbl
mov
mov
xor
and
mov
push
push
push
call
mov
mov
xor
and
mov
mov
add
movzwl
movzbl
mov
movzbl
shr
mov
movzbl
xor
sub
mov
mov
movzwl
xor
mov
movb
movw
mov
movzbl
imul
mov
movzbl
movzbl
mov
shl
mov
movzwl
shr
mov
mov
add
movzwl
mov
movzbl
or
mov
imul
mov
mov
sub
mov
mov
and
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
shl
movzwl
mov
xor
and
movzwl
movzwl
mov
movzwl
mov
movzwl
sub
mov
push
call
mov
mov
movzbl
mov
or
and
movzwl
mov
imul
movzwl
mov
sub
movzbl
mov
movzwl
add
mov
mov
or
add
mov
mov
movzwl
sub
mov
mov
or
and
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
mov
shl
movzbl
mov
or
mov
add
movzbl
mov
mov
movl
mov
or
mov
mov
xor
mov
movl
call
movzwl
movzbl
movzwl
or
mov
mov
shr
movzbl
mov
xor
imul
mov
mov
or
mov
sub
mov
movzwl
and
movzwl
add
mov
movb
mov
and
movzbl
mov
and
mov
mov
shl
mov
movzwl
or
xor
mov
mov
mov
mov
add
add
mov
mov
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
shl
movzbl
mov
shr
movzwl
mov
shl
mov
movzwl
and
sub
mov
mov
mov
movzbl
mov
movzwl
sub
mov
mov
mov
push
push
push
push
call
movzwl
or
and
mov
mov
add
movzbl
mov
shl
mov
mov
sub
movzwl
movzbl
or
sub
mov
movb
mov
imul
imul
mov
mov
movzwl
sub
add
mov
mov
shr
mov
movzwl
shl
mov
mov
add
movzbl
mov
mov
mov
imul
mov
sub
mov
movzbl
and
mov
sub
mov
movw
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
mov
imul
sub
movzbl
mov
and
imul
mov
movzwl
mov
sub
mov
mov
xor
sub
mov
push
push
push
push
call
mov
mov
test
je
call
mov
or
movzbl
cmp
je
call
cmp
je
call
mov
or
movzwl
and
mov
mov
add
movzwl
movl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
cmp
je
push
push
call
cmp
je
push
call
mov
mov
mov
call
mov
shl
mov
mov
mov
mov
and
movzwl
imul
mov
cmp
je
push
push
push
push
call
mov
add
mov
movw
mov
imul
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
sub
movzbl
mov
mov
mov
or
mov
movb
movw
movzwl
mov
push
push
call
mov
xor
mov
movzbl
xor
mov
movzbl
or
add
mov
movzbl
and
sub
mov
movzwl
or
and
mov
movzwl
mov
movzwl
or
movzbl
add
mov
movzbl
and
movzbl
add
mov
mov
mov
mov
or
mov
mov
mov
mov
add
mov
mov
and
movzbl
sub
mov
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
imul
movzbl
mov
movzwl
mov
movzwl
mov
mov
movzbl
imul
mov
mov
xor
movzwl
sub
mov
mov
sub
add
mov
call
mov
mov
shr
movzwl
mov
movzwl
mov
imul
mov
mov
shr
movzwl
mov
mov
mov
imul
mov
mov
or
movzbl
add
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
mov
shr
movzwl
mov
mov
add
mov
mov
movb
mov
sub
mov
mov
xor
mov
call
mov
shl
mov
mov
shr
mov
mov
mov
or
imul
movzwl
mov
xor
mov
mov
and
or
mov
movzbl
sub
movzbl
add
mov
movzwl
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
mov
mov
movzwl
mov
xor
movzwl
mov
shl
movzwl
mov
movzbl
mov
call
mov
mov
shl
movzwl
mov
shr
mov
movzwl
add
mov
mov
xor
and
mov
movw
mov
and
add
mov
movzwl
or
add
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzbl
mov
shl
movzbl
mov
shr
movzbl
mov
mov
or
imul
mov
mov
add
mov
movl
mov
shr
mov
mov
add
mov
mov
movzbl
mov
xor
mov
mov
shl
mov
movzwl
xor
mov
mov
mov
movzwl
mov
mov
mov
mov
xor
movzwl
imul
movzbl
mov
imul
movzbl
mov
xor
mov
mov
imul
movzbl
movzwl
sub
mov
mov
or
mov
movl
mov
and
mov
sub
mov
movzwl
shr
mov
mov
or
and
mov
mov
movzbl
movb
movzbl
and
movzwl
or
mov
mov
test
je
movl
mov
add
mov
mov
mov
mov
and
movzwl
mov
movzbl
mov
mov
mov
and
mov
mov
mov
movzwl
or
mov
mov
add
mov
movzbl
or
sub
movzwl
mov
movzwl
movzwl
mov
mov
mov
add
mov
mov
imul
mov
mov
sub
mov
mov
sub
mov
mov
mov
movzwl
xor
mov
movw
mov
and
mov
jmp
movzwl
imul
movzbl
mov
movzbl
movzwl
imul
movzbl
mov
xor
mov
sub
mov
mov
shr
movzbl
mov
xor
and
mov
movzwl
xor
mov
mov
mov
movzwl
or
mov
imul
mov
mov
movzbl
mov
mov
mov
movzbl
mov
imul
imul
mov
movzbl
mov
mov
sub
movzwl
mov
add
mov
mov
xor
mov
movzwl
shr
mov
mov
or
mov
mov
shl
mov
mov
movzbl
movzwl
xor
mov
movzwl
add
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
and
movzbl
mov
movzbl
mov
shr
movzwl
mov
shl
movzwl
mov
movzbl
mov
mov
movb
mov
and
mov
push
push
call
mov
shl
movzwl
mov
shl
mov
movzbl
shr
mov
movzbl
and
movzbl
mov
movzbl
or
and
movzwl
mov
movzwl
xor
add
mov
mov
imul
mov
add
mov
movzbl
or
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
add
add
movzwl
mov
movzwl
mov
xor
or
mov
movw
movzwl
sub
sub
mov
movl
mov
add
movzwl
mov
xor
add
movzwl
mov
add
mov
mov
movzwl
mov
add
mov
movzbl
sub
mov
movw
mov
mov
mov
movzwl
mov
sub
movzwl
mov
shl
mov
mov
movzwl
mov
imul
imul
movzwl
mov
shl
movzwl
movzwl
sub
movzwl
add
mov
movb
movl
mov
imul
mov
mov
xor
movzwl
mov
and
mov
imul
movzwl
mov
sub
movzwl
mov
xor
imul
mov
mov
shl
movzwl
movzwl
movzbl
xor
xor
mov
movzwl
mov
movl
movzwl
and
mov
mov
test
je
movzbl
imul
mov
movzbl
sub
sub
mov
movb
movw
mov
movzbl
mov
mov
movzwl
xor
movzwl
add
mov
movzwl
movzbl
sub
movzwl
add
mov
movzbl
mov
mov
add
mov
movzwl
movzbl
sub
mov
movzwl
or
movzwl
add
mov
movb
movzwl
sub
mov
mov
add
mov
movl
movb
mov
sub
mov
movzwl
mov
movw
movzbl
movzwl
or
movzwl
add
mov
jmp
mov
add
movzwl
mov
mov
mov
shl
mov
mov
shr
mov
mov
add
movzwl
mov
and
and
movzwl
movzwl
or
add
mov
movzwl
xor
movzwl
and
mov
mov
mov
mov
and
mov
mov
add
mov
mov
shl
movzwl
mov
or
mov
mov
xor
mov
add
movzwl
mov
add
movzwl
movw
movzbl
or
add
mov
movzwl
mov
mov
sub
sub
mov
mov
imul
movzwl
mov
or
mov
mov
and
add
mov
mov
shr
movzwl
mov
sub
movzwl
movzbl
mov
movw
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
xor
movzbl
mov
movzwl
mov
imul
movzbl
cmp
je
push
push
call
mov
or
mov
movzwl
sub
mov
mov
add
mov
push
push
call
mov
mov
movzwl
cmp
je
push
push
push
call
mov
sub
movzwl
mov
add
mov
movzbl
mov
cmp
je
push
push
push
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
or
xor
movzbl
mov
and
movzbl
mov
shl
movzbl
mov
movzbl
mov
add
movzwl
mov
and
mov
imul
mov
mov
xor
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
sub
mov
mov
and
mov
mov
shl
mov
mov
movzbl
mov
or
imul
movzbl
mov
movzwl
and
add
mov
movb
mov
mov
mov
and
or
movzbl
mov
or
mov
imul
movzbl
mov
movzbl
mov
shr
movzbl
mov
shl
mov
mov
or
add
mov
mov
imul
mov
movb
movl
mov
xor
movzbl
mov
and
sub
mov
mov
shl
movzbl
mov
xor
mov
sub
mov
mov
movzbl
mov
mov
mov
mov
mov
mov
test
je
movb
mov
mov
mov
imul
imul
mov
movzwl
or
mov
cmpl
jge
movb
movb
movzbl
or
sub
movzwl
mov
or
or
mov
mov
movzbl
mov
mov
mov
sub
mov
mov
mov
mov
and
movzbl
sub
mov
mov
imul
movzwl
mov
add
mov
mov
or
movzwl
mov
and
add
mov
mov
add
mov
mov
and
mov
mov
and
add
mov
mov
sub
add
mov
movw
mov
sub
mov
movl
movb
movw
movzbl
or
sub
mov
jmp
movzbl
imul
mov
movl
mov
add
mov
mov
movzbl
shl
mov
mov
movzwl
imul
mov
mov
movzbl
and
xor
movzwl
mov
mov
movzbl
shl
mov
mov
imul
add
mov
mov
sub
mov
mov
add
mov
mov
imul
sub
movzwl
movzbl
mov
mov
movzbl
shl
mov
mov
and
mov
movzbl
add
add
mov
mov
add
mov
movzbl
add
mov
mov
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
imul
movzwl
add
mov
mov
or
movzwl
mov
mov
movl
mov
or
mov
mov
movzbl
or
imul
mov
movzbl
mov
mov
imul
mov
mov
mov
cmp
jne
mov
mov
mov
movzwl
movzbl
and
movzbl
sub
mov
mov
mov
cmp
jne
movzwl
xor
movzwl
movzwl
or
sub
mov
movl
mov
and
and
movzwl
movzbl
xor
mov
movzbl
add
mov
movw
mov
test
je
movl
movzbl
imul
add
mov
movb
movzwl
or
mov
sub
mov
mov
sub
mov
mov
mov
movzbl
xor
mov
mov
add
mov
mov
mov
movzwl
xor
movzbl
xor
mov
jmp
mov
movzwl
mov
imul
mov
add
mov
movb
mov
xor
movzbl
or
movzwl
mov
movzbl
mov
mov
mov
sub
mov
mov
xor
mov
mov
add
mov
movzbl
or
movzbl
imul
mov
mov
imul
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
or
mov
mov
imul
imul
mov
movb
mov
or
mov
mov
sub
mov
movzbl
or
add
movzwl
movzbl
movzwl
jmp
mov
xor
mov
sub
movzbl
mov
shl
movzbl
mov
or
sub
mov
mov
and
sub
movzbl
mov
mov
mov
and
mov
mov
imul
mov
mov
sub
shr
mov
mov
add
movzbl
mov
and
mov
mov
movzbl
mov
shl
movzbl
mov
mov
movl
mov
and
and
mov
movzbl
and
imul
mov
mov
movzbl
mov
sub
movzbl
mov
xor
movzbl
mov
movzbl
mov
shr
mov
mov
mov
mov
or
movzbl
sub
mov
movzbl
or
movzbl
or
mov
mov
sub
movzbl
mov
shl
movzbl
mov
or
imul
mov
mov
or
or
movzbl
mov
xor
movzbl
mov
mov
movb
mov
xor
movzwl
push
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
shr
movzwl
mov
shl
mov
movb
movl
mov
or
movzbl
imul
mov
push
call
mov
mov
or
mov
sub
movzwl
mov
mov
mov
mov
mov
sub
movzwl
mov
mov
mov
shl
mov
movzbl
mov
mov
imul
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
shr
movzwl
mov
and
or
movzwl
mov
or
mov
add
mov
mov
shl
mov
mov
sub
add
mov
movl
mov
xor
sub
mov
movzbl
and
mov
push
push
push
call
mov
mov
mov
mov
add
movzwl
mov
sub
mov
mov
sub
mov
mov
movzwl
mov
xor
mov
movl
mov
and
or
mov
mov
xor
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
or
mov
mov
shr
mov
mov
sub
mov
movl
movb
movzbl
xor
movzbl
imul
mov
movl
mov
add
mov
mov
add
movzbl
mov
sub
mov
mov
shr
mov
mov
mov
movzbl
sub
mov
movb
movzwl
mov
mov
mov
mov
movzbl
mov
shl
mov
mov
movzbl
imul
mov
mov
sub
mov
mov
imul
mov
movzbl
mov
movzwl
and
mov
mov
imul
mov
movl
mov
mov
mov
sub
mov
mov
mov
movzbl
movzwl
mov
mov
movzbl
imul
add
mov
movl
mov
test
je
movl
mov
and
mov
add
mov
mov
movzbl
mov
mov
movw
movw
movw
mov
add
mov
movzwl
sub
mov
movzbl
or
movzbl
or
mov
movb
movzwl
add
mov
mov
add
mov
movzbl
imul
mov
movzbl
imul
mov
mov
xor
mov
mov
sub
mov
movzwl
xor
imul
mov
mov
add
mov
mov
add
mov
movb
jmp
mov
mov
mov
add
mov
movzbl
add
mov
mov
add
mov
mov
and
xor
mov
movw
movzwl
or
imul
mov
mov
mov
mov
movzbl
mov
add
mov
mov
or
movzbl
sub
mov
mov
movzbl
xor
and
mov
mov
sub
mov
mov
mov
mov
or
movzbl
or
mov
movzbl
or
mov
movzbl
add
mov
mov
sub
mov
mov
or
movzbl
movl
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
mov
sub
movzbl
mov
movzbl
mov
movzwl
mov
and
mov
mov
imul
mov
push
call
movzwl
mov
movzbl
mov
and
mov
movzbl
xor
or
movzbl
mov
sub
movzbl
mov
mov
mov
or
mov
mov
and
movzwl
mov
movzbl
mov
shr
movzbl
mov
mov
mov
xor
add
mov
mov
sub
mov
mov
push
push
call
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
and
movzwl
mov
or
xor
mov
mov
add
mov
mov
and
mov
mov
add
mov
mov
add
mov
call
mov
mov
movzbl
mov
and
add
movzwl
mov
add
movzbl
mov
shr
movzwl
movw
mov
movzwl
imul
mov
mov
movzbl
mov
or
xor
movzwl
mov
mov
sub
movzwl
mov
xor
mov
mov
mov
push
push
push
call
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
movzbl
mov
imul
imul
movzbl
mov
sub
movzwl
mov
imul
mov
movw
mov
and
mov
mov
xor
mov
movl
mov
or
movzwl
mov
add
movzbl
mov
add
movzwl
mov
add
mov
mov
xor
imul
mov
mov
or
mov
add
mov
movzwl
mov
movzwl
or
sub
mov
movw
movl
mov
mov
mov
and
mov
mov
add
movzbl
mov
xor
mov
sub
movzwl
mov
mov
movzwl
imul
mov
movl
mov
movzwl
imul
mov
movl
mov
add
movzbl
mov
shr
movzbl
mov
add
movzbl
mov
movzwl
movzwl
mov
movzwl
or
and
mov
mov
test
je
movzwl
or
mov
mov
xor
movzwl
and
mov
mov
mov
mov
movzbl
mov
mov
mov
movzwl
sub
add
mov
mov
xor
mov
mov
xor
sub
mov
mov
or
mov
mov
add
mov
movw
mov
imul
sub
mov
mov
add
mov
mov
movzwl
and
mov
movw
mov
movzwl
imul
imul
mov
movl
mov
sub
mov
mov
mov
movzwl
and
mov
jmp
mov
shr
movzbl
mov
or
add
movzwl
movzwl
sub
mov
mov
mov
movzwl
or
mov
movw
mov
mov
mov
mov
mov
mov
mov
and
movzbl
mov
sub
movzbl
mov
shl
movzwl
mov
sub
mov
mov
sub
movzbl
movzwl
or
imul
mov
mov
imul
sub
mov
movzwl
add
mov
mov
imul
sub
movzbl
mov
sub
movzbl
mov
sub
movzbl
mov
add
mov
movw
movw
mov
mov
mov
movzwl
mov
xor
movzwl
imul
movzbl
movzwl
xor
movzbl
mov
add
movzwl
mov
or
mov
mov
mov
movzwl
and
mov
movzwl
sub
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
mov
sub
mov
mov
mov
shl
movzbl
mov
sub
movzbl
movl
mov
and
mov
mov
mov
mov
mov
add
mov
mov
or
xor
movzbl
mov
mov
mov
and
mov
mov
and
mov
add
mov
mov
or
or
mov
movzbl
add
mov
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
sub
mov
mov
sub
mov
mov
or
xor
mov
mov
xor
mov
movzbl
or
mov
imul
mov
mov
mov
mov
shr
mov
mov
or
movzbl
mov
mov
mov
xor
mov
mov
xor
mov
mov
or
mov
mov
or
imul
mov
movl
mov
xor
mov
mov
shl
mov
mov
mov
sub
mov
mov
mov
mov
mov
movl
mov
sub
mov
mov
add
mov
mov
xor
sub
mov
mov
or
mov
movzwl
mov
mov
imul
mov
add
mov
movl
movzbl
mov
mov
test
je
mov
sub
mov
movzwl
mov
mov
mov
xor
mov
mov
movl
mov
mov
mov
and
movzbl
xor
mov
mov
mov
xor
mov
mov
mov
or
movzwl
add
mov
movzbl
mov
mov
xor
mov
add
mov
mov
add
mov
movl
movw
mov
movzbl
and
movzbl
sub
mov
mov
sub
mov
movzbl
sub
mov
mov
add
mov
mov
mov
mov
or
mov
jmp
mov
imul
mov
add
mov
mov
xor
movzbl
imul
mov
mov
shr
mov
mov
shl
mov
movb
movw
mov
xor
mov
mov
xor
mov
mov
shr
mov
movzwl
sub
add
movzbl
mov
movzbl
mov
movl
mov
movzbl
sub
mov
movl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
add
add
movzwl
mov
shl
mov
mov
add
movzwl
mov
shl
mov
mov
imul
mov
add
mov
movzbl
sub
mov
movb
push
push
push
push
call
mov
mov
movzwl
mov
mov
movzwl
add
mov
mov
mov
movzbl
and
mov
mov
mov
movb
mov
movzbl
sub
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzwl
mov
imul
sub
mov
mov
shl
mov
mov
imul
mov
mov
xor
movzwl
add
mov
movzwl
imul
imul
mov
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
shr
mov
mov
xor
mov
movl
movzwl
mov
mov
xor
mov
pop
pop
pop
mov
pop
ret
int3
int3
jmp
jmp
push
imul
add
imul
add
add
imul
add
imul
add
imul
add
push
add
push
add
add
dec
push
add
add
add
je
add
jle
add
mov
add
add
add
push
add
push
add
push
add
add
adc
add
and
add
imul
cmp
add
add
pop
imul
insb
imul
jle
inc
add
push
stos
bound
xchg
pop
lods
loop
mov
test
mov
testl
jns
icebp
mov
out
insl
dec
push
fs
lds
roll
insl
mov
clc
out
mov
push
dec
jo
mov
sub
sub
lds
pop
or
imul
mov
add
mov
ret
int
mov
fisubl
dec
int3
sub
rcl
push
push
pop
mov
inc
sub
test
out
and
jns
dec
ljmp
popf
xor
ljmp
je
fwait
mov
pop
lcall
shll
sbb
imul
add
add
es
xchg
test
jo
test
rcrb
call
int
dec
or
jle
fld
loop
inc
dec
fsubrs
fadds
aad
jne
inc
cld
push
push
inc
push
pop
push
out
roll
and
pop
mov
mov
sbb
scas
xchg
ss
xchg
dec
adc
outsb
jg
adc
dec
in
cmpsb
jmp
in
and
mov
stos
xchg
in
mov
mov
mov
iret
iret
xchg
xor
aam
repnz
xor
in
xor
add
test
push
xchg
outsb
mov
arpl
dec
cwtl
out
dec
nop
sbb
add
xchg
push
sbb
xchg
inc
xchg
sub
sarb
jne
push
mov
pop
lds
and
xchg
push
jp
dec
push
mov
jae
push
cmp
popa
push
xor
mov
xor
ss
inc
mov
pop
out
lcall
lret
in
fcoml
jmp
adc
out
sbb
and
aas
adc
and
shrb
aaa
aaa
or
outsb
pusha
mov
pushf
nop
sbb
add
xchg
push
sbb
jbe
inc
xchg
xchg
xor
mov
iret
rclb
inc
xchg
into
mov
push
dec
sarb
test
xchg
xor
push
cmp
push
adc
push
lds
and
mov
lds
add
jo
ja
add
jb
pop
xchg
inc
sti
cltd
inc
fisttpl
imul
mov
lods
sbb
xchg
into
mov
mov
jle
movsl
aad
out
jl
les
shl
push
adc
lds
add
add
xor
lret
ljmp
jo
inc
add
xor
lret
lds
sub
scas
xchg
mov
push
dec
push
adc
jae
aad
cmp
inc
xchg
mov
mov
xchg
xchg
cs
inc
mov
shll
xlat
stc
cmp
lods
nop
gs
cmp
stc
add
cmp
shrl
stc
adc
xor
push
lds
or
mov
cmc
sbbl
in
sti
and
fists
and
pop
sub
repz
cmp
sbb
xchg
inc
xchg
push
xchg
repz
cmp
mov
cld
dec
push
fldl
jl
or
dec
mull
les
inc
mov
psubusw
popf
invd
mov
xchg
jns
push
lods
cld
aaa
cmpsb
xchg
leave
pop
imul
fidivl
popa
stc
faddl
out
popf
std
data16
xchg
sub
faddl
or
lret
pop
add
lret
loopne
cmc
mov
add
test
push
pusha
test
imul
inc
add
mov
push
stos
pop
adc
sbb
xchg
cmp
fcmovnu
push
or
sub
into
push
dec
mov
pushl
push
int3
mov
sub
and
xchg
in
cmpb
in
inc
dec
stos
xchg
loopne
mov
notb
pop
test
insb
les
ss
jmp
and
jl
out
cmp
outsl
aad
outsl
pop
cmc
mov
out
fstl
addr16
pop
lret
shll
subl
jmp
and
mov
xor
dec
cmp
lcall
lahf
fnsave
xor
pop
sub
data16
or
xchg
data16
mov
mov
ret
mov
jb
mov
push
loope
add
leave
std
mov
dec
mov
test
dec
aad
xor
test
lcall
pop
mov
mov
inc
cmpsb
popa
mov
mov
lods
rorb
cmp
push
loop
mov
dec
sti
add
movsb
iret
std
inc
orb
mov
dec
data16
jnp
test
xlat
mov
mov
sti
mov
hlt
adc
mov
xchg
loope
faddl
push
mov
sub
xchg
shll
adc
or
or
in
xchg
dec
notl
iret
push
test
js
mov
lea
jg
mov
xor
adc
sbb
cmp
jo
xchg
scas
dec
xchg
arpl
and
xor
int3
and
fisttpll
daa
mov
adc
mov
into
imull
ja
shll
mov
ljmp
popf
inc
pop
add
or
mov
xchg
insl
adc
sbb
cmp
loope
or
or
out
das
pop
rcr
dec
add
and
popf
cmp
mov
lods
cmp
test
mov
fistps
adc
xor
popf
mov
into
mov
repz
fimull
sbb
xchg
xor
sub
sbb
and
mov
loope
xchg
movsb
mov
xchg
and
loop
or
test
addr16
inc
cmp
mov
repz
dec
sbb
xchg
sbb
bound
xor
js
std
lret
dec
push
push
xor
pop
data16
insl
xrelease
xor
lahf
jg
add
add
pop
xchg
imul
movsl
sub
dec
ret
idivb
aad
ja
xchg
jmp
jo
mov
icebp
dec
rorb
mov
or
aad
test
adc
mov
or
or
or
rcll
add
lcall
cmp
cmp
loope
or
repz
sbb
loope
mov
mov
repnz
aad
push
fwait
fwait
inc
pop
pop
int
mov
or
mov
fsubs
push
or
adcl
or
nop
ds
mov
cmp
mov
xlat
icebp
push
mov
sub
popf
popf
sub
sub
jge
int3
xlat
data16
shll
test
pop
jge
test
mov
mov
dec
pop
stos
and
adc
faddl
adc
sub
cmp
test
and
int3
fdivl
ds
les
hlt
and
push
outsl
mov
ja
sub
adc
xchg
add
mov
faddl
jnp
leave
jbe
leave
es
clc
ljmp
subb
push
fnstenv
out
sbbb
mov
fstpl
mov
cwtl
ret
pop
mov
lret
test
dec
ja
push
aaa
mov
fucomip
inc
in
jg
int
stos
sub
push
adc
sub
int3
push
and
setle
jns
lds
dec
imul
dec
dec
sbb
cltd
stos
out
fwait
jae
mov
ljmp
push
lahf
lds
or
add
cld
scas
lods
mov
pop
out
inc
pop
outsl
lcall
test
outsl
mov
fwait
sub
test
push
out
xor
jge
jp
lds
into
add
sub
mov
outsl
loop
lods
pop
inc
lahf
push
and
scas
cmc
fnclex
ds
mov
ss
sti
scas
push
into
pushf
xchg
xchg
pop
movsb
rolb
sub
loope
sbb
or
sub
jb
mov
js
push
inc
jecxz,pn
roll
sbb
mov
dec
xchg
adc
dec
cmc
and
and
insl
popf
ret
push
in
xchg
jmp
sub
dec
or
xor
add
aas
fldt
add
xchg
imul
mov
mov
test
lahf
es
decl
repz
mov
imul
sbb
add
mov
xchg
das
idivl
in
cwtl
les
jae
test
mov
pop
popa
lods
clc
jb
inc
xchg
test
jmp
icebp
sbb
cmp
rcll
outsl
xor
cmp
mov
faddl
mov
pop
jp
mov
mov
bound
sub
inc
mov
lret
rclb
fsub
push
fidivl
inc
fistpll
bound
xchg
xchg
and
lahf
lret
mov
cmp
sbb
loope
les
inc
lods
es
jae
aaa
push
scas
mov
scas
push
loop
je
or
out
shrl
push
or
jg
xchg
and
les
repz
inc
enter
mov
adc
rorb
push
clc
push
xchg
cmp
scas
xor
inc
out
cmp
pop
lds
pop
push
add
and
or
xchg
mov
daa
insl
push
fstl
and
mov
cmpsb
scas
or
mov
arpl
push
mov
inc
fwait
xchg
mov
jge
jne
fmul
mov
jle
jne
pop
push
flds
jl
inc
cmp
mov
nop
adc
lcall
pop
push
mov
loope
xchg
push
test
nop
sbb
fwait
mov
mov
mov
adc
mov
aaa
dec
mov
inc
dec
movsb
imul
inc
inc
lret
out
test
cmp
mov
add
pop
xor
dec
cwtl
push
ficoms
add
stc
adc
lods
cmp
xchg
jbe
enter
fwait
lods
xor
adc
mov
lea
test
or
jae
fwait
imul
jb,pn
fs
push
jns
xchg
pusha
sahf
push
jecxz
cmpb
jecxz
iret
lea
pop
fadd
lret
in
add
pop
scas
dec
xchg
lcall
dec
adc
push
shlb
cmc
fcomi
bound
jmp
je
adc
push
inc
loopne
xor
pop
inc
popf
out
test
cltd
or
and
cmp
mov
in
popf
icebp
inc
xchg
mov
in
mov
mov
mov
dec
enter
aas
mov
in
mov
pop
out
test
adc
mov
into
adc
andl
xchg
mov
bound
cmpsl
inc
push
hlt
ret
mov
dec
rorl
mov
movsb
mov
and
mov
sub
jp
jg
out
and
std
xchg
jns
inc
pusha
mov
je
stos
push
pushf
and
dec
jne
and
mov
push
shlb
jo
xor
stc
jmp
sbbb
sbbl
sub
bound
inc
cmp
mov
pop
in
call
cmpsb
xchg
push
xchg
adc
cs
popa
lea
aam
and
in
xor
mov
scas
inc
mov
jecxz
mov
mov
xchg
push
popf
fdivs
xchg
cmp
dec
rcll
aam
fmul
push
pop
shl
pop
mov
das
icebp
or
lods
lret
push
push
mov
pop
test
lahf
sub
add
cltd
out
mov
test
mov
outsl
xor
aam
fnsave
mov
mov
addb
hlt
push
lret
orl
test
leave
adc
dec
push
push
or
push
mov
mov
enter
xor
or
decw
in
cmp
insl
add
mov
test
mov
push
push
mov
pop
sub
cmp
cmp
test
mov
dec
pop
popf
pop
in
mov
ja
icebp
or
test
xchg
sbb
lea
aam
push
xchg
push
sbb
stos
and
jp
mov
loopne
int3
icebp
pop
mov
dec
movsbl
adc
sub
out
test
dec
pop
rcll
call
jo
and
imul
push
or
add
jnp
xor
cld
cmp
xlat
test
in
fadd
adc
add
fcoms
aam
push
add
popa
push
add
imul
ljmp
jmp
fnstenv
xchg
test
mov
add
pop
test
and
cltd
and
outsb
mov
fs
aam
mov
test
or
in
aaa
adc
int3
adc
test
and
cmp
aam
lret
jge
dec
add
lret
cmp
pop
rcrl
test
stc
xchg
pop
call
ja
or
xor
mov
add
add
mov
shl
and
jae
fcoml
pop
stc
dec
les
mov
add
cmp
loope
cmp
mov
mov
test
lahf
lahf
ja
int
dec
mov
popa
or
pop
stos
push
xlat
leave
jmp
data16
dec
cmp
lea
push
xor
xor
aaa
add
mov
pop
jno
inc
pop
xor
popa
xchg
jns
mov
repz
xor
cmp
mov
push
adc
dec
in
xor
test
mov
add
mov
jmp
popf
mov
aam
or
mov
sub
imul
jb
and
fstl
testb
fs
insl
xchg
xor
cmp
pop
mov
in
pop
data16
cmp
or
xchg
outsl
ljmp
xlat
test
scas
outsl
popa
jae
adc
rol
inc
cmpl
mov
shll
insl
sub
or
enter
sarl
push
push
std
test
inc
or
mov
test
or
xchg
mov
arpl
test
push
pop
lds
into
pop
test
cmc
xor
rclb
aam
movsb
call
cmp
mov
test
scas
mov
mov
mov
fldcw
xor
test
sub
or
dec
in
and
pusha
push
popa
add
imul
cmp
mov
inc
mov
test
dec
ljmp
dec
ds
xchg
jns
cmp
pop
sarb
fsubs
enter
xor
div
push
sahf
mov
fisttpll
cmpsb
add
stos
mov
loope
roll
outsb
jne
ja
arpl
jns
testb
add
test
das
popf
cmp
scas
sub
sahf
neg
movsl
push
mov
add
push
fdivs
xor
xor
arpl
push
rorb
movsb
push
out
push
sbb
push
mov
add
pop
and
dec
mov
mov
jecxz
lret
stc
aad
test
add
xchg
adc
xchg
xchg
out
ficoml
idiv
insb
loop
roll
movsl
insb
out
jg
inc
cmp
insb
call
mov
inc
cwtl
inc
insb
idivb
mov
cmp
in
push
mov
into
cmp
test
mov
add
mov
pop
lock
test
mov
inc
dec
inc
cmp
mov
jl
into
lds
push
inc
add
mov
pop
xchg
fisttpl
mov
int3
pop
fisttpl
mov
fistl
test
fistl
mov
push
in
push
fildll
jbe
leave
cmpsl
pop
movsb
dec
into
jbe
leave
pop
mov
leave
ret
dec
xchg
jbe
leave
fcompl
dec
xorb
lret
dec
mov
leave
sbbl
leave
xchg
pop
mov
leave
stos
pop
mov
leave
cmpsb
pop
mov
push
jecxz
popf
mov
adc
in
loop
test
jle
ret
hlt
mov
xchg
test
js
popa
fs
sbbl
cmp
xchg
movsl
inc
jbe
cli
arpl
and
int3
sub
cmp
pop
and
jl
cmp
jg
aad
cmp
mov
sbbw
ret
pop
nop
ss
mov
mov
push
inc
sarl
xor
mov
popa
sub
jmp
or
xor
inc
inc
xlat
jle
ret
repz
popf
jmp
sbb
mov
mov
stos
in
sbb
dec
sti
data16
mov
inc
pop
movsl
dec
ja
mov
shrb
push
jb
enter
out
js
jmp
xchg
and
lret
cmpsl
and
lret
cmpsl
das
js
lret
jp
sub
sti
jbe
sub
jb
sub
imul
sti
xor
movsl
pop
pop
mov
cmp
pop
mov
jp,pt
movsl
adc
mov
movsl
or
mov
movsl
or
mov
movsl
add
mov
jo
jmp
sbb
stos
xchg
cmp
push
lret
push
cmpsl
dec
jl
cmpsb
lret
dec
pop
lret
dec
adc
cmpsb
leave
dec
pop
lret
push
adc
cmpsb
rorl
lret
pop
adc
cmpsb
fisttpll
lret
pop
adc
cmpsb
lret
data16
cmpsb
out
inc
lret
fs
cmpsb
loop
inc
lret
pusha
adc
cmpsb
out
dec
inc
lret
outsl
adc
cmpsb
in
dec
dec
lret
insl
adc
cmpsb
ljmp
cmpsb
jmp
adc
cmpsb
popf
dec
dec
into
sbb
sub
ret
cs
cmp
ljmp
jnp
and
push
cmpsl
movsl
js
lret
push
cmpsl
mov
es
cmpsl
mov
es
cmpsl
scas
js
lret
pop
cmpsl
lods
js
lret
pop
cmpsl
stos
js
lret
pop
cmpsl
test
es
cmpsl
mov
imul
es
cmpsl
mov
insl
lret
inc
cmpsl
mov
outsl
lret
inc
cmpsl
mov
popa
lret
dec
cmpsl
mov
es
js
lret
ja
les
lret
jno
ret
lret
jae
sarb
inc
es
into
js
lret
jg
int3
js
lret
jns
lret
lret
jnp
enter
dec
es
js
lret
cmpsl
aam
sbb
dec
lret
aad
pop
loopne
lret
rclb
int
xchg
pop
mov
ficoms
int3
fsubl
mov
adc
xchg
adc
lcall
ja
inc
popl
or
cmp
push
xor
mov
pop
mov
mov
pop
mov
mov
pop
sub
mov
pop
mov
movb
ret
cmp
mov
les
movsb
orl
addl
scas
rolb
addl
scas
int3
add
orl
scas
enter
xchg
mov
test
ss
inc
pop
mov
fiaddl
movb
les
pop
mov
outsb
cmp
jae
lret
ss
fimull
mov
push
ss
fimull
lret
test
fisubl
shl
arpl
jmp
adcb
xchg
popa
stos
cmp
cltd
gs
or
cltd
cltd
test
mov
pushf
jge
sbb
mov
cli
xchg
dec
fcoms
fnstcw
jmp
push
dec
in
cmp
mov
jmp
fistps
mov
jmp
vdivsd
xchg
lret
push
jp
jmp
xlat
jp
jmp
add
out
adc
mov
adc
int
pop
jecxz
pop
jle
rorl
dec
xchg
imul
mov
cltd
push
cmpsb
xchg
shlb
fwait
shrl
inc
xor
push
icebp
inc
push
jle
rcll
dec
pushf
jae
rorl
std
inc
push
jle
shll
inc
push
jle
rcll
or
rcll
inc
movd
rcll
inc
or
push
mov
jle
rcrl
add
rcrl
inc
pop
jle
rcrl
inc
add
push
xchg
inc
cmp
shll
sbb
std
shll
dec
sbb
dec
fiaddl
and
pop
das
test
mov
ja
xor
pop
pop
push
test
fidivl
cli
jl
sahf
jp
jmp
nop
jp
sub
vcmpps
jne
xchg
sbb
mov
push
idivl
jp
cmc
mov
jge
repz
jg
icebp
jge
cmp
jno
mov
push
or
outsb
mov
pop
cwtl
outsb
mov
pop
sbb
scas
add
subl
sbb
subl
or
test
xor
out
mov
cmp
mov
push
enter
mov
push
fadd
xor
mov
push
fadd
xor
mov
push
fmul
xor
mov
imul
or
xchg
cli
push
lds
adc
pop
cli
inc
shrl
inc
lds
jp
jmp
push
jp
jmp
cmpsb
lock
pop
inc
jge
sub
cli
cmp
mov
inc
pop
xchg
fwait
or
jp
mov
gs
clc
loop
cwtl
movsl
arpl
fsubr
jnp
jp
movsl
mov
in
lret
insl
adc
je
ja
dec
idiv
fs
jbe
lcall
cmp
idivl
mov
es
fldenv
repz
cmp
stos
mov
mov
rcll
xor
mov
mov
lea
shrb
dec
aam
jecxz
xchg
xchg
xchg
arpl
rcll
movsb
popf
xchg
mov
or
fwait
cmp
xchg
mov
pushf
stos
repz
add
test
jmp
xchg
jle
jmp
in
sbb
cmpsb
out
sbb
mov
mov
cmp
stos
mov
push
xchg
mov
sbb
mov
sbb
in
jbe
gs
lock
mov
xorl
rcrb
rorl
fwait
inc
xor
adc
cmpsb
ss
fidivl
xor
fidivl
testl
inc
fwait
out
sub
clc
jbe
jg
and
xor
fldpi
cmp
mulb
arpl
mov
hlt
repnz
cmp
fdivr
pop
jno
sti
ss
fcmovbe
pop
jg
mov
cld
ret
andb
sbb
jle
push
xlat
rclb
push
lea
cmp
shlb
or
jnp
mov
inc
jge
es
push
mov
push
cmp
ja
mov
jg
lret
inc
mov
mov
movsb
imul
mov
enter
cmpsb
or
lret
sbb
mov
sbb
mov
sbb
sbb
scas
or
ret
sbb
mov
sbb
mov
sbb
and
mov
jns
fimull
jg
fmull
jge
fimuls
jae
rorb
jno
mov
les
mov
gs
lahf
inc
mov
shrb
popf
inc
mov
ret
jle
inc
cmp
insl
out
jg
inc
and
jbe
gs
pop
test
sbb
ljmp
and
aam
xor
mov
push
fcoms
push
fcoms
xor
mov
push
fcoms
xor
mov
push
fcomps
xor
mov
push
fcomps
push
fcomps
xor
mov
push
fcomps
xor
mov
push
fsubs
xor
mov
push
fsubs
push
fsubs
xor
mov
push
fsubs
xor
mov
push
fsubrs
xor
mov
push
fsubrs
push
fsubrs
xor
mov
push
fsubrs
xor
mov
push
fdivs
xor
add
add
mov
push
xor
push
fdivs
xor
mov
push
fdivs
xor
mov
push
fdivrs
xor
mov
push
fdivrs
xor
mov
push
fadds
je
push
fadds
mov
push
fadds
jo
ret
push
fadds
jb
shrl
dec
xor
mov
push
fmuls
mov
push
fmuls
js
lret
push
fcoms
fs
push
fcoms
mov
push
fcoms
pusha
mov
push
fcoms
bound
pop
xor
mov
push
shlb
add
mov
xor
outsb
sbb
xor
mov
push
fdivs
xor
mov
push
fdivrs
xor
mov
push
fdivrs
push
fdivrs
xor
mov
push
fdivrs
xor
mov
push
fadds
daa
mov
push
fadds
and
inc
xor
mov
push
fadds
sub
fmuls
das
mov
push
fmuls
sub
dec
xor
mov
push
fmuls
push
mov
push
fcoms
push
mov
push
fcoms
push
mov
push
fcoms
push
mov
push
fcoms
pop
mov
push
fcomps
pop
mov
push
fcomps
pop
mov
push
fcomps
pop
mov
push
fcomps
inc
mov
push
fsubs
inc
mov
push
fsubs
inc
je
mov
cld
xlat
adc
icebp
jp
dec
mov
pushf
jge
sbb
dec
cmp
inc
dec
testl
jnp
push
inc
js
cmp
mov
mov
lods
cli
ficoml
in
ret
cltd
mov
inc
sub
pop
push
call
testl
mov
push
fadds
push
fadds
push
fmuls
mov
rorb
inc
insb
sahf
inc
cmp
stc
push
in
stc
repnz
mov
sbb
and
xor
into
xor
andl
add
add
call
out
pushf
xchg
fbstp
push
mov
mov
pop
pop
leave
lds
adc
cmp
loope
or
or
or
add
or
xchg
frstor
int3
fwait
or
mov
add
mov
scas
sbb
xchg
lock
sub
adcl
aad
or
int
mov
or
push
shll
adc
popf
cmp
or
fisttpll
mov
mov
out
ficoms
mov
or
xchg
or
or
orl
inc
and
das
xchg
aaa
xor
push
sub
push
sub
sub
dec
adc
mov
into
sub
dec
and
shll
xor
fnstsw
mov
lock
or
or
rep
nop
and
pop
cld
push
pop
inc
adc
cmp
loope
or
or
or
and
out
and
loopne
mov
jb
jnp
pop
aad
mov
sbb
xchg
push
popf
test
adc
std
stos
aam
adc
xchg
dec
fwait
lods
inc
adc
int
mov
or
fs
sbb
xchg
cmp
or
jno
mov
cmpl
and
repnz
or
or
inc
cmpsb
insb
mov
cli
mov
scas
xchg
push
adc
push
cmp
xor
movsb
call
dec
lcall
ja
bound
xlat
fcmove
outsb
scas
jp
gs
cmp
pop
fdivr
sub
popa
push
and
add
das
out
xchg
push
sahf
mov
fistpl
cmp
shll
cwtl
test
adc
pop
cmp
hlt
aaa
ss
push
call
mov
push
push
cmp
sub
roll
out
out
xchg
inc
adc
jbe
jg
dec
fucomip
aas
jae
mov
push
and
popa
je
jne
pop
fucom
dec
jne
inc
jbe
cmp
xchg
pushf
push
or
adc
loopne
aad
test
sbb
jmp
pop
xchg
popl
ja
fildl
cmpsb
outsb
fwait
or
mov
xor
lcall
pop
sahf
jecxz
add
daa
int3
pop
adc
ret
mov
dec
mov
iret
jge
dec
not
sbb
add
sub
daa
push
test
cli
stos
outsl
push
jge
stc
jmp
dec
pop
inc
add
sub
mov
add
inc
push
and
or
ljmp
nop
ret
add
int3
mov
dec
xchg
fisubrs
aam
shll
icebp
inc
xlat
fdivr
jae
xchg
call
inc
jg
jmp
loop
fstps
cltd
les
stc
in
incb
shr
push
data16
mov
cwtl
lret
ret
fwait
dec
xchg
mov
lahf
dec
mov
push
xor
lret
mov
mov
xchg
daa
cmp
mov
lods
mov
sbb
mov
jne
xchg
cmpsl
add
fstl
rcl
das
pop
xchg
rcrb
in
mov
cmp
loope
dec
out
pushf
stc
pop
cli
shr
jae
mov
jecxz
js
push
lahf
fstpl
inc
jbe
mov
test
sub
loopne
pop
dec
sub
in
push
mov
pop
rcrb
adc
mov
lea
stos
jge
cmp
mov
mov
sti
imul
mov
xchg
pop
lcall
adc
jecxz
sub
loope
bound
xchg
sbb
fmuls
int3
mov
hlt
push
addr16
scas
adc
push
pop
or
mov
jo
mov
cwtl
ret
jns
sbb
mov
lds
loope
mov
iret
aaa
mov
stos
cmp
leave
push
rolb
adc
lahf
dec
movsl
cmpsb
mov
btc
sbb
add
clc
ds
pop
push
cmp
rclb
outsl
xor
gs
and
in
sub
xchg
je
enter
movsl
xchg
adc
adcl
cmc
rolb
xchg
jmp
lds
or
or
pop
or
lahf
popf
adc
push
popa
mov
sbb
dec
mov
iret
pop
push
jp
call
mov
stos
push
rolb
inc
int3
mov
push
ss
in
mov
rol
sbb
sahf
int
inc
cli
ret
enter
cmp
repz
lds
add
std
adc
push
movsl
movsb
outsl
in
cmc
pop
dec
cli
mov
adc
shl
cwtl
rorl
adc
push
scas
stc
sub
in
aam
jle
push
push
out
aaa
mov
in
pop
jne
shlb
mov
or
jmp
inc
mov
rcrl
mov
xor
push
test
in
push
mov
insl
popa
xchg
insl
or
lods
fisttpll
fldenv
pop
mov
mov
add
lock
ljmp
push
aaa
sub
out
and
in
sbb
js
les
xor
xchg
mov
lods
mov
ret
aas
cwtl
mov
xchg
pushf
adc
jmp
push
push
jl
fstps
pusha
iret
pop
imul
or
stos
adc
adc
lcall
or
sbb
mov
arpl
shrl
addr16
mov
ret
int3
add
push
or
pop
push
stos
mov
pop
xchg
lcall
or
jbe
adc
adc
push
push
adc
cmp
mov
or
mov
push
jg
jle
ret
xor
mov
mov
js
pusha
jns
cmc
push
cmp
jb
dec
int3
or
mov
out
nop
std
push
xchg
jnp
pop
movsb
roll
xchg
sbb
int3
xchg
push
and
add
jle
nop
pop
bound
sbb
or
inc
xchg
push
addr16
lods
mov
in
movsb
adc
aaa
in
in
pop
sub
push
push
inc
inc
enter
mov
mov
jno
xorl
cmpsl
scas
pop
and
mov
or
jecxz
inc
inc
mov
xchg
stc
cmp
add
xchg
outsb
aaa
ljmp
xchg
out
sbb
xchg
mov
cmp
adc
and
push
es
lods
clc
hlt
xchg
jecxz
sbb
xor
es
cmp
mov
in
test
ficomps
mov
mov
cmpsl
xchg
push
sti
les
out
or
inc
lea
pop
jge
loopne
and
sbb
lea
mov
pop
mov
mov
or
fisubs
cmpsb
in
xor
pop
fnclex
or
mov
imul
pop
jge
pop
inc
imul
dec
inc
push
mov
jle
fbld
jle
dec
jns
rcl
sub
mov
sbb
loope
adc
mov
fwait
mov
cmp
xchg
in
fldenv
mov
sub
loope
mov
add
lahf
scas
je
mov
mov
call
lret
add
enter
xorw
into
mov
outsl
add
mov
orb
dec
lahf
xchg
add
fists
mov
dec
xor
push
adc
adc
pop
pop
mov
adc
mov
jbe
std
aaa
pushw
and
pop
and
test
shrb
mov
in
add
add
add
push
jb
loope
inc
pushf
inc
mov
cwtl
push
adcl
inc
sbb
and
popl
rcrb
jmp
test
rcrl
jne
ret
xchg
shl
add
or
daa
inc
inc
sub
cmc
xor
xor
out
mov
and
xlat
loop
jbe
imul
pop
sbb
test
sbb
inc
aad
inc
push
inc
jb
ljmp
paddsw
out
rorb
pop
pop
aaa
jecxz
in
dec
pushf
mov
ficompl
iret
adc
fbld
and
jp
pop
imul
jmp
loop
and
scas
pop
aas
pop
icebp
imull
xor
cs
sbb
and
ss
xchg
outsl
xchg
sbb
jmp
cmp
adcl
cmpsb
inc
push
and
lret
insb
fwait
mov
mov
loopne
outsl
inc
loopne
push
xchg
xlat
or
adc
pusha
or
mov
jno
stos
mov
cltd
push
mov
mov
bound
iret
sub
xchg
cmc
jnp
movsl
out
repnz
dec
clc
inc
push
sub
fisubrs
and
mov
lcall
jmp
test
add
mov
push
xchg
mov
repz
stos
mov
popf
pop
mov
les
cmp
or
xchg
xchg
pop
mov
xor
out
lret
pop
push
in
mov
or
and
jp
loope
push
mov
mov
jne
pop
outsl
sbb
adc
fcmovnb
aad
cmp
sbb
or
shll
in
lods
lds
es
fwait
inc
mov
frstpm(287
leave
jbe
inc
mov
pop
and
imul
lahf
inc
add
xor
push
test
jbe
mov
xor
adc
faddl
jnp
push
test
add
stos
adc
fildl
xor
pop
dec
gs
fucomp
dec
mov
outsl
mov
ret
orl
fadds
lret
and
nop
mov
xor
cli
lret
addr16
mov
fs
aad
xor
mov
add
enter
test
fnstcw
and
test
jae
hlt
xor
lock
sub
mov
adc
sahf
pop
adc
inc
sbb
push
jge
fidivrs
inc
adc
aam
mov
daa
and
xor
scas
cmc
sti
push
push
je
imul
ja
xchg
adc
xchg
mov
data16
adc
aad
jae
inc
adc
mov
cmp
pop
mov
pop
stos
xchg
fadd
sub
mov
inc
inc
xor
cmpsl
jbe
adc
pop
add
rolb
fldcw
mov
insl
adc
push
jmp
push
add
inc
mov
ds
mov
leave
out
outsw
cmp
ds
adc
repz
stc
nop
cmpl
xchg
add
lods
sbb
movsl
daa
sub
xor
fiaddl
pop
aaa
stos
rorl
addb
insl
test
jge
rclb
aam
inc
sub
push
push
inc
dec
inc
push
stc
jnp
aad
cmc
fprem
ja
in
cmp
stc
repnz
pop
fwait
mov
das
push
mov
xchg
pop
fadd
or
stos
jnp
pop
aad
cmp
popa
nop
inc
or
jnp
xchg
dec
or
test
mov
or
pop
mov
dec
mov
ficompl
and
xchg
push
sub
in
pop
mov
add
iret
add
push
rcll
fwait
adc
scas
sub
add
ror
insl
pop
mov
add
add
push
and
loopne
cli
jmp
mov
mov
test
push
es
data16
sbb
push
push
push
sub
and
pop
ficoml
mov
daa
wbinvd
popf
arpl
js
fiadds
nop
sti
outsl
hlt
test
ja
mov
lahf
mov
aad
mov
add
fisttpll
arpl
or
jmp
cmp
xchg
int3
ja
stc
movsl
call
dec
sbb
xchg
dec
enter
jbe
add
mov
sub
mov
arpl
push
ljmp
into
jmp
jmp
push
sbb
mov
cmpsb
inc
orl
inc
data16
ret
sbb
add
in
inc
lea
cltd
pop
fwait
fwait
push
cmc
push
xor
or
dec
imul
out
bound
movsl
aad
fwait
inc
data16
rcll
insl
stos
mov
daa
sbb
xchg
push
cltd
int3
test
jg
mov
xchg
push
pushf
fucom
dec
ss
out
or
mov
loope
repnz
shlb
test
test
cmp
add
mov
jmp
push
fwait
ds
sbb
sbb
fstpl
mov
cmp
pop
mov
cvtpi2ps
sbb
mov
hlt
and
sbb
aas
sub
cmp
sbb
xor
xor
loope
jecxz
dec
xchg
xchg
out
xchg
xor
pop
xchg
daa
fcmovnu
adc
push
int
or
popf
scas
es
xchg
add
lods
adc
xchg
mov
sub
mov
adc
inc
add
or
add
xchg
hlt
es
mov
pop
mov
pop
adc
fadds
sahf
add
jns
icebp
enter
and
xchg
fistps
mov
sub
lock
je
out
scas
cmp
sbb
lahf
mov
adc
ljmp
jl
fisttps
cmp
ds
mov
lcall
pop
inc
push
or
int
ja
test
dec
je
repz
cli
cmp
std
mov
mov
jl
cmc
pusha
jnp
and
xor
jne
subl
cld
bnd
xlat
pop
ret
fwait
stos
scas
jle
inc
cltd
dec
mov
push
cmpsb
lret
flds
mov
sbb
loope
xor
icebp
aas
outsl
divb
xchg
in
push
inc
cmc
stos
insl
imul
jg
jmp
outsl
mov
jl
scas
push
fwait
enter
jl
lock
pop
cmc
inc
xchg
sbb
sti
jge
iret
mov
repz
adc
push
ror
test
ss
cwtl
xlat
fwait
sub
rolb
iret
int
xor
in
sub
jge
fcomps
dec
mov
cltd
sahf
into
scas
inc
js
icebp
ja
out
inc
jne
jne
mov
pop
push
dec
imul
add
add
inc
xchg
ja
in
movb
mov
int
pop
mov
sbb
jp
jl
fadd
fisttpl
nop
subb
cmpsb
pusha
cmp
test
aas
stos
fucomp
aaa
inc
es
xor
out
dec
sbb
sbb
fldenv
mov
inc
sbb
stc
mov
btrl
adc
mov
xor
testb
or
outsb
add
jns
int
fucomi
push
adc
inc
insl
icebp
adc
lds
and
test
sbb
pop
or
or
cmp
mov
sbb
add
add
hlt
jns
pop
mov
and
sub
pop
push
negl
xchg
xchg
jge
dec
aad
push
jae
inc
mov
stc
fisttps
mov
adc
push
test
inc
dec
mov
cmp
bnd
pop
test
insl
imul
jne
lds
push
adc
mov
and
clc
xchg
dec
mov
lret
pop
pop
out
jmp
jb
scas
sbb
fwait
hlt
jns
nop
jmp
int3
mov
fstps
repnz
xchg
cld
push
in
fnstenv
cmp
loope
negb
iret
dec
cli
mov
insb
add
sub
addr16
in
dec
xchg
cli
sub
cmp
or
jb
orl
mov
xchg
inc
adc
sub
pop
sbb
inc
push
cmp
sbb
dec
lds
inc
cmpsb
or
cmpsl
cmpsb
bound
int3
in
jg
fs
out
js
out
push
push
cwtl
in
out
mov
pop
push
cmp
push
dec
cltd
mov
jne
or
jnp
in
dec
push
fs
add
xchg
mov
movsl
rclb
adc
es
or
inc
sub
rolb
mov
sti
pop
mov
test
xchg
xchg
add
and
mov
add
push
sub
pop
jns
movsl
outsb
and
es
pop
imul
sbb
pop
xchg
pop
mov
aaa
movsb
clc
ljmp
popa
int
cld
jle
lcall
mov
jmp
aad
lret
mov
sahf
mov
push
xchg
xor
scas
clc
pop
fiadds
mov
loop
or
das
mov
cwtl
mov
mov
sysexit
sbb
or
in
aad
mov
mov
add
add
dec
ror
mov
adc
sub
jnp
push
pop
popf
pop
pop
push
xchg
push
adcl
and
dec
mov
rol
imul
sbb
fs
mov
pop
inc
push
push
or
adc
sar
ret
sbb
sbb
cmpsb
pop
test
sbb
jb
loope
mov
popa
sbb
or
add
sub
and
test
or
outsb
jl
jns
push
nop
xchg
add
nop
inc
mov
cmp
pop
mov
cs
out
shll
add
push
or
or
clc
cmp
les
jge
sub
fistl
aas
mov
push
sub
sbb
inc
adc
ret
xchg
pop
xchg
inc
add
sub
push
add
mov
xor
fwait
dec
dec
imul
fcoml
jmp
mov
rclb
stc
stc
push
dec
lock
int
push
pop
pop
int3
enter
filds
mov
mov
add
jge
inc
mov
fs
mov
lahf
adc
pop
sub
jbe
pop
test
and
fnstcw
add
jp
iret
les
push
insb
std
jmp
fcoms
fsubrs
xchg
aad
std
cli
lret
cmp
sahf
push
inc
or
or
repz
fwait
jne
hlt
cmpsb
jnp
cmpsb
mov
dec
into
aad
sbb
test
scas
mov
or
loopne
adc
mov
or
dec
mov
mov
in
into
xor
sub
pusha
xor
and
and
les
js
xlat
loope
dec
mov
inc
iret
jmp
pop
js
adcb
ret
into
gs
xchg
mov
inc
fnop
or
fidivrs
cmpsl
mov
sbb
push
or
out
and
imul
adc
cmp
push
jnp
cld
callw
mov
xor
adc
dec
cmp
rcr
mov
and
stc
or
not
les
scas
jns
mov
aam
stc
js
popf
push
jecxz
mov
insb
pop
dec
xchg
xlat
aam
rcll
outsl
test
push
push
aas
sbb
stos
idiv
cmp
xchg
sbb
dec
addr16
or
stos
cmpsl
pusha
bound
sti
pop
out
xadd
mov
xchg
xor
aam
or
call
pop
adc
rclb
bound
sbb
idivl
in
and
adc
out
out
jmp
pusha
jno
push
dec
xor
ljmp
lea
or
in
pop
addr16
and
stos
icebp
sub
adc
and
jae
popf
adc
mov
mov
mov
mov
popa
decb
in
or
repnz
out
je
mov
idivb
xlat
ds
inc
aas
or
sbb
and
movsl
jae
and
mov
daa
call
pushl
addps
dec
stc
outsl
cmpsl
ss
inc
roll
loope
mov
insb
mov
lods
add
mov
jl
arpl
add
mov
rdseed
pop
xchg
stc
outsl
cmpsl
movsb
cmpsb
jp
imul
inc
test
scas
popa
dec
in
out
test
mov
mov
cld
mov
add
loope
pop
stos
data16
shlb
pop
inc
sti
adc
jle
mov
scas
les
popl
dec
inc
cltd
mov
jnp
and
ss
xchg
pop
data16
cli
push
mov
add
imul
adc
in
call
xor
add
add
icebp
sbb
jp
mov
adc
xchg
push
daa
push
adc
cmpsb
stos
and
sub
mov
into
pop
int3
popa
sub
xor
repnz
jmp
push
jae
mov
or
icebp
es
cli
outsb
icebp
cmc
test
ljmp
repnz
shr
fs
xchg
lds
jge
rclb
outsb
mov
jne
inc
outsl
shrb
pop
xor
iret
mov
xchg
hlt
xor
fldln2
inc
mov
stos
cld
stos
sub
xor
fisubrl
into
sar
jns
cmpsl
inc
pop
xchg
push
aad
inc
sub
ljmp
nop
leave
in
xchg
and
push
inc
mov
std
ret
jo
imull
xchg
pusha
mov
outsl
aam
dec
insb
leave
mov
in
andl
add
or
and
fs
in
fwait
mov
push
and
push
cmp
jecxz
lcall
mov
bound
mov
mov
aad
adc
fidivl
jno
adc
out
sbb
mov
mov
std
pop
or
and
xchg
dec
pop
dec
add
jmp
popf
cmpsb
mov
and
and
push
orl
jae
fadds
dec
movsl
jb
xchg
mov
mov
cmp
adc
lcall
or
xchg
jne
mov
pop
mov
xchg
ret
push
rol
adc
imul
roll
rcr
pusha
dec
lret
aad
jns
xchg
or
jle
inc
int
fadd
in
pop
fwait
lret
stc
ficompl
and
xchg
and
repnz
test
push
jmp
sub
sti
jecxz
aad
mov
mov
jle
jbe
jo
push
or
inc
stc
scas
dec
mov
es
popf
inc
fucomi
mov
mov
stos
mov
xor
push
jmp
rolw
pop
test
ffree
es
arpl
pushf
pop
repnz
sbb
lcall
leave
add
hlt
mov
sub
mov
int
imul
andl
ret
xor
mov
divb
pop
pop
lret
pop
fmuls
addr16
lahf
jle
jg
ljmp
out
inc
pop
stos
jp,pt
add
lea
enter
cltd
repz
xor
mov
mov
ljmp
sub
mov
movsl
mov
jo
xor
jo
pop
popa
sahf
push
pop
hlt
aam
es
xchg
loope
mov
rorl
pop
mov
arpl
sahf
imul
push
push
pushf
adc
mov
out
repz
aaa
cs
mov
adc
fsubrs
cmp
ja
idivb
dec
and
rclb
jge,pn
ss
pop
iret
add
ret
push
repnz
mov
ljmp
in
xlat
movsl
xor
stos
push
ds
mov
addr16
das
fmull
xor
aaa
add
orb
or
cmpsb
stc
inc
jle
js
repnz
pushf
mov
ja
shl
jne
pop
mov
inc
dec
cld
mov
dec
mov
adc
imul
mov
jg
sub
dec
and
fs
mov
and
dec
mov
int3
out
arpl
stos
clc
add
xchg
adc
cmp
mov
out
pusha
add
sub
out
and
jae
xor
push
and
xor
xchg
incl
pop
add
add
ret
adc
inc
xor
inc
cmp
cmp
addl
aad
int
out
push
shr
cmc
loope
into
jo
stos
sbb
push
arpl
cli
cmp
int3
add
lret
scas
int
xor
ret
popf
lods
lret
ss
aaa
mov
mov
lcall
mov
mov
jbe
push
cmpsb
add
and
imul
sbbb
mov
and
sbb
repz
inc
adc
xchg
dec
repnz
mov
gs
inc
loope
or
repnz
test
ss
push
pusha
mov
add
enter
sbb
push
sbb
sub
cmp
aad
ja
mov
les
mov
test
sbb
aam
xchg
mov
sub
mov
addl
pop
xchg
xor
sub
mov
add
std
clc
push
or
popf
cli
push
mov
jge
aas
adc
add
clc
bound
adc
xorl
sbb
ret
out
xlat
lahf
repnz
je
cltd
xchg
outsb
push
mov
mov
adc
adc
pusha
and
pop
sbb
cltd
aad
popf
out
outsl
inc
push
fst
andb
jns
fldenv
mov
jns
add
dec
je
push
and
jmp
mov
jbe
pop
mov
cwtl
add
into
pop
pop
fucomp
test
clc
gs
push
enter
iret
imul
lahf
xchg
int
mov
push
in
js
push
xchg
jge
dec
hlt
ljmp
test
sti
sbb
jmpw
popa
sbb
and
out
dec
add
icebp
pop
xlat
lahf
push
adcl
jnp
scas
pop
or
aam
subl
push
add
xor
cltd
ret
jg
mov
cmp
rolb
dec
data16
inc
out
or
dec
shrl
adc
vpacksswb
fdivrl
mov
std
push
pop
int
movsb
insb
sbb
mov
inc
fistl
cmp
std
test
or
inc
cwtl
and
or
test
movsb
jge
in
sub
mov
addb
jmp
rclb
sahf
outsb
add
loope
fcoml
movb
imul
xor
jne
subb
dec
fisubs
xor
icebp
sub
inc
fldl
test
dec
fmulp
jg,pn
push
mov
loop
push
mov
mov
jb
test
fists
fs
roll
inc
data16
xchg
out
bound
gs
and
rorl
popf
dec
sbb
sub
aas
ret
dec
rcrb
call
subb
sarl
xchg
jo
adc
add
pop
jl
and
add
add
pop
enter
and
outsb
lods
mov
mov
aad
add
std
test
pop
push
out
pop
imul
sbb
roll
int3
jne
push
hlt
adc
loope
aad
mov
dec
dec
test
outsl
fistpl
mov
push
adc
mov
pop
xor
adc
push
std
dec
outsb
rolb
xor
push
leave
test
push
shr
loopne
shll
jge
ret
outsl
sub
adc
mov
xor
lret
jb
dec
pushf
mov
inc
int3
ficompl
lea
sub
stos
fs
movsb
aaa
test
pop
lret
xor
leave
movsb
jne
dec
cmpsl
movl
out
push
adc
movsb
int3
call
xchg
outsb
mov
fnstcw
mov
cmp
xchg
int3
movsl
js
loope
inc
inc
push
push
loope
mov
inc
or
xchg
flds
push
loope
pop
sub
sbb
add
out
orb
fdivl
test
imul
sub
xchg
inc
or
orb
in
rol
and
lret
add
inc
mov
das
addb
cmp
std
mov
mov
pushf
movb
fiadds
mov
dec
in
out
sbb
cmp
dec
adc
jge
pop
mov
jmp
xchg
js
incl
xor
test
sti
or
fdivl
xor
inc
xchg
pop
mov
push
mov
mov
in
sub
in
mov
xchg
xor
jle
or
jecxz
xchg
lahf
icebp
pop
xor
xor
sbbb
push
in
shll
jo
andl
fwait
scas
mov
cmp
add
test
push
add
inc
out
adc
pop
xchg
add
hlt
jg
cwtl
jp
rol
sbb
lahf
popf
xor
out
mov
pop
call
push
iret
mov
addr16
xchg
roll
cs
lret
cmp
lods
pop
adc
dec
pop
push
ret
rorl
sub
ret
inc
sbb
bound
push
xchg
add
loop
mov
xlat
ffreep
push
pop
test
jne
cmpsb
pop
jl
outsl
cmp
inc
pop
push
push
add
pop
or
movsl
fwait
sbbb
outsb
out
and
jns
mov
inc
or
lods
xchg
jge
mov
add
mov
xchg
sbb
clc
sub
xor
pop
sub
out
fs
inc
or
add
mov
repnz
iret
or
cmc
incl
sub
sub
cmpsl
popf
push
fs
pop
jnp
xchg
flds
sbb
cmp
cmp
notb
mov
mov
outsb
fisubs
or
pop
lock
stc
cld
mov
push
pusha
inc
lock
push
cmpb
pusha
cmp
inc
and
pop
xlat
test
shr
lock
xor
fbld
inc
adc
test
scas
outsb
mov
mov
mov
cli
mov
inc
jle
je
jg
and
lods
jmp
les
mov
cltd
add
add
add
xchg
shlb
adc
out
push
push
leave
scas
out
or
in
pushf
xchg
daa
loop
lods
and
int
dec
imul
leave
add
or
into
pushf
jne
push
mov
leave
cmp
or
mov
roll
or
mov
sub
out
jbe
jmp
jne
mov
pop
pop
add
inc
xchg
loopne
jae
mov
pop
xor
loop
movsb
cmp
jae
mov
dec
xor
or
outsl
outsl
adc
mov
repnz
aaa
inc
scas
jns
in
insl
lret
push
inc
push
sub
pop
ljmp
in
mov
jnp
pop
scas
and
inc
push
test
pop
out
in
mov
inc
divb
dec
das
sti
jns
in
scas
sbb
push
cmp
lods
int
mov
dec
out
mov
xchg
jbe
pop
lods
jle
cwtl
shrd
jmp
cmc
popa
mov
pop
adc
sub
dec
cwtl
fsubrs
loope
pop
frstor
mov
jns
add
outsl
jecxz
lret
aam
jae
inc
fs
jecxz
sbb
rcrl
int3
push
mov
roll
add
or
mov
xchg
cmp
jne
mov
imul
jl
call
jns
mov
dec
pop
pop
or
jmp
dec
test
cld
cmp
stos
mov
and
cs
std
adc
cmc
xor
mov
pusha
xchg
gs
mov
data16
lock
xchg
push
xchg
iret
push
enter
lcall
aam
scas
out
loope
rorl
ss
add
loop
fsubrs
or
test
or
fldcw
lret
fidivrs
push
jbe
fimull
int
or
and
mov
xor
dec
mov
lods
out
std
or
mov
xchg
dec
jae
fstpt
addr16
mov
and
dec
ret
mov
xchg
mov
jb
xor
inc
imul
adc
int3
imul
movsb
mov
mov
test
or
aaa
mov
repnz
jno
rorb
in
lret
sub
jp
jl
push
lret
dec
scas
mov
dec
pop
std
nop
decl
out
rclb
mov
dec
rol
les
sub
fcoml
mov
mov
sti
movsb
outsl
dec
ds
in
sti
jmp
mov
subb
add
push
outsb
xor
xchg
add
sub
and
pusha
dec
lcall
repz
int
push
add
xchg
mov
dec
mov
ss
out
mov
ret
imul
mov
pop
outsb
jbe
or
scas
mov
or
push
int
stos
mov
in
dec
enter
das
push
inc
dec
test
loop
inc
jge
or
clc
sbb
push
mov
loop
xchg
xor
mov
scas
mov
fldl
test
ljmp
push
and
fsts
pop
mov
dec
mov
cmp
pop
roll
dec
ds
loopne
aad
scas
and
jge
jns
popf
or
push
rol
push
outsb
dec
adc
aaa
mov
sar
mov
stos
sar
add
cmpsb
pop
dec
xchg
sub
jmp
inc
fcom
add
arpl
cmp
add
ljmp
clc
fsub
inc
add
stc
cmp
mov
imul
mov
mov
cli
push
xchg
or
adc
adc
xchg
mov
jno
lods
add
out
pushf
and
mov
ret
sbb
mov
adc
test
dec
sbb
or
sub
test
shrl
out
loop
enter
cmp
inc
xor
cmp
dec
insb
xor
adc
inc
jg
outsl
cmpsl
xor
mov
dec
mov
outsl
shll
lahf
cs
shll
push
jns
jns
sbb
pop
mov
cmp
lcall
pop
pop
andb
mov
movsl
sub
cmp
push
xchg
inc
shr
push
xchg
int
xor
mul
mov
outsl
jo
out
sbb
push
push
outsb
mov
xchg
jge
or
or
shll
lret
movsl
mov
aad
rcrb
mov
test
or
inc
mov
dec
jle
mov
add
lods
ss
cmpsl
pop
xor
out
lds
sbb
xor
jno
outsb
shll
setae
das
stos
rolb
pop
inc
enter
cmp
int3
arpl
insl
int
dec
add
das
test
adc
push
push
lock
cli
mov
xchg
test
or
pusha
xchg
lcall
xchg
fdivrs
out
cli
sahf
sbb
push
add
add
lock
sahf
sub
pop
sbb
jl
or
lret
jns
xchg
aaa
sbb
jp
fdivrl
scas
mov
aas
jb
fwait
or
bound
mov
popa
sub
out
ret
mov
lods
dec
xorb
lret
mov
mov
push
mov
mov
shll
not
xor
mov
push
scas
mov
dec
and
sbb
jne
ja
jnp
jnp
jge
adc
push
out
mov
push
fs
mov
shrb
int
inc
push
in
ret
and
jg
xor
and
cmp
gs
xor
movsb
sahf
adc
push
sbb
cli
xor
jnp
loope
or
push
fwait
or
aam
pop
aam
jns
les
and
or
into
add
lea
lds
mov
xchg
xchg
dec
mov
push
cs
and
jp
fs
insl
mov
dec
sbb
mov
stc
inc
mov
sahf
xor
ret
leave
insb
sbb
mov
ret
push
xchg
mov
fsubrl
nop
cmp
sub
push
test
ss
pop
mov
and
adc
pushf
inc
cmpsb
test
clc
xor
dec
rcl
xchg
sub
jle
aam
pop
sub
scas
sbb
cs
loope
lret
js
es
popf
pop
jle
out
sbb
daa
ret
imul
in
imul
inc
cltd
adc
test
call
xor
mov
ror
addr16
lret
sub
xchg
std
and
dec
rcl
sub
push
xchg
les
add
lahf
fsubrs
test
scas
and
push
dec
jbe
add
shrl
xchg
lcall
pusha
jle
lock
roll
jnp
in
movsb
sbb
or
mov
leave
shlb
push
and
xlat
mov
mov
data16
pop
xor
xchg
xchg
ret
fs
pop
xchg
lea
js
sub
dec
mov
and
push
xchg
xchg
xlat
adc
movsb
push
das
push
add
inc
xlat
push
sti
push
mov
out
nop
stos
imulb
shr
dec
xor
insl
je
sbb
arpl
push
xchg
test
sbb
icebp
mov
add
mov
pop
mov
aad
aam
pushf
xor
ss
repnz
xchg
loopne
inc
pushf
lds
push
in
xor
push
addr16
dec
ja
sbb
sub
mov
sbb
fwait
xor
mov
aad
in
sub
mov
lds
xor
pop
sub
js
in
lock
cmpsl
cmp
jge
int
dec
or
jbe
mov
cs
pusha
aaa
sub
imul
mov
in
icebp
pop
pop
pop
cmp
cli
inc
pop
xor
sbb
and
out
ljmp
jmp
cltd
pop
mov
andl
sbb
adc
xchg
call
outsb
mov
orl
push
cmp
dec
imul
mov
push
pop
dec
es
mov
call
dec
dec
rcrl
adc
pushf
xchg
xor
push
or
jmp
test
daa
sub
aam
sbb
and
cmp
loopne
dec
shr
aad
movsl
xchg
mov
mov
ss
stc
lock
and
dec
dec
shrl
adcl
fwait
les
stos
mov
call
add
push
es
pop
imulb
push
or
or
test
mov
xchg
mov
cmpsb
xchg
xchg
icebp
jbe
and
and
loop
nop
out
and
push
fdiv
lcall
push
sbbl
add
pop
dec
imul
arpl
scas
iret
push
xor
and
stos
push
push
test
movsb
sahf
leave
lds
and
dec
je
lods
aas
jae
ffree
xchg
icebp
rcrl
cwtl
xor
test
daa
out
pop
jl
xchg
sub
mov
cmp
mov
sbb
pop
cs
and
xchg
mov
in
inc
dec
mov
add
lea
rorl
mov
inc
fcoms
xor
xchg
stc
addb
repz
jle
mov
inc
data16
jbe
enter
aas
loop
add
mov
out
in
or
sub
je
cs
idivl
js
push
add
out
and
aam
sbb
mov
xlat
and
jp
jbe
cmp
fcoms
jecxz
andl
iret
sub
and
jg
sarb
xor
outsl
xchg
adc
dec
and
push
test
mov
push
loope
xorl
int3
nop
lods
in
jo
imul
push
mov
cli
inc
lret
xlat
out
ljmp
mov
imul
sub
sbb
in
jns
das
scas
and
das
add
add
adc
jbe
push
test
out
xor
sub
cs
lea
fcomp
sub
in
aaa
fsub
mov
add
add
push
lahf
mov
cmp
test
jmp
inc
ds
cmp
push
testb
inc
scas
xchg
lea
cmp
pop
aad
push
mov
adc
outsl
xor
lea
inc
xchg
jae
cwtl
imul
push
xchg
aaa
and
inc
cmp
stc
adc
out
lret
lds
mov
outsb
ret
enter
popl
or
or
mov
mov
lret
test
aam
daa
popf
pop
pushf
or
std
sub
notl
push
mov
cmpsb
mov
inc
test
xchg
xor
je
fbld
mov
mov
out
es
pop
bound
xchg
mov
jo
inc
sbb
ret
and
cmpsl
in
push
mov
xchg
test
add
and
mov
and
sahf
xchg
xorb
and
sbb
ret
das
popf
movsl
add
mov
adc
pop
dec
jge
aas
arpl
clc
sub
sub
test
adc
cltd
dec
or
mov
or
mov
sbb
mov
out
push
pop
inc
or
popf
scas
cmpsl
call
fcoml
inc
fisubs
mov
mov
stos
out
push
add
mov
push
or
rorl
mov
push
out
push
pop
mov
mov
repz
fldl
cld
clc
fisttpl
dec
outsl
jbe
lcall
and
xchg
cmp
roll
nop
test
lods
push
lods
xchg
sbb
mov
in
add
js
stos
lds
xlat
cmp
aam
popf
cmp
cmpsl
sub
or
dec
outsl
iret
jge
mov
insl
es
fadds
pushf
mov
les
add
add
cmp
mov
xchg
add
push
jg
mov
test
lret
scas
repz
into
leave
jg
dec
movl
jmp
test
ljmp
sub
xchg
mov
lcall
andb
and
scas
popf
adc
fcmove
test
mov
dec
fnstenv
mov
dec
fstps
jb
shlb
ffreep
or
ljmp
mov
js
mov
push
add
scas
enter
out
push
mov
jo
mov
movsl
cmp
push
mov
dec
push
mov
test
mov
test
int3
mov
adc
cmp
xchg
jmp
push
pusha
jge
aas
xchg
outsb
sbb
int
cmp
repnz
xchg
xlat
sub
push
lods
orb
and
testb
es
hlt
or
mov
mov
jge
data16
pop
inc
mov
cmp
xchg
mov
aas
out
test
jmp
lds
sbb
shlb
jno
sti
dec
bound
sarb
orl
imul
daa
ret
jecxz
movq
xchg
xor
push
and
jb
int
call
cld
mov
ss
movsl
out
out
mov
lock
les
sbb
or
mov
inc
xchg
pop
xor
pop
dec
dec
and
fisttpll
inc
and
dec
add
xchg
push
jo
fistpl
jo
add
push
mov
js
mov
fldcw
mov
pop
cmpsl
xchg
cmp
je
cmpsl
xchg
inc
stos
xchg
push
pop
xor
out
add
test
cld
mov
jnp
xchg
jmp
jmp
fbstp
mov
pop
add
xchg
pop
adc
daa
dec
outsb
push
jecxz
dec
mov
mov
cmp
push
cmp
mov
ret
xchg
push
adc
inc
add
nop
inc
push
jp
scas
outsb
xchg
out
and
repz
mov
int3
adcb
int
std
pop
mov
loope
outsb
jg
fdivr
clc
call
mov
out
lea
enter
mov
push
lcall
je
push
dec
clc
in
mov
subl
addl
or
lds
push
mulb
iret
pushf
adc
dec
mov
shll
movsb
mov
inc
push
sub
push
testl
clc
jge
add
ljmp
xchg
or
fisubs
popa
jns
pop
jge
push
and
mov
es
je
xor
add
test
pop
jg
cwtl
adc
loope
jne
shll
or
jne
cli
adc
pop
inc
arpl
sbb
add
mov
adc
pop
and
leave
aad
dec
sbb
in
dec
dec
cwtl
or
in
gs
test
push
andl
mov
pop
jecxz
into
insl
xchg
mov
mov
popa
mov
outsb
test
movsl
adc
aas
in
cmc
adc
out
dec
mov
xor
pushf
cmp
xchg
fs
jmp
test
adc
repz
shll
xor
add
cmp
jbe
xor
add
ds
sbb
adc
outsb
loope
push
test
aaa
dec
es
out
dec
movsl
popa
dec
add
fildll
xor
inc
mov
cwtl
xchg
cmpsb
ljmp
or
xchg
xor
cwtl
dec
or
inc
pop
leave
xchg
sahf
sbb
and
jmp
push
mov
adcl
jo
cli
mov
sub
xchg
mov
orl
lret
sbb
adc
xchg
ret
lock
sarl
pop
dec
sbb
out
push
xor
das
sbb
das
add
sub
sbb
dec
mov
sbb
sti
xlat
xchg
movsb
adc
cmpsl
lods
dec
popa
dec
mov
ret
pop
popa
lea
cmp
push
sub
add
int3
fbld
mov
sub
popa
es
cs
adc
inc
sbb
push
jp
movsb
imul
lea
jb
jmp
andl
lcall
mov
xor
clc
jle
out
cmp
cmp
dec
add
mov
push
sbb
lods
jg
dec
les
xor
lea
inc
repnz
or
ret
and
cli
sbb
dec
sub
fldenv
jge
andl
add
rcrb
cmp
jmp
enter
std
ljmp
xchg
cmp
scas
dec
ds
adc
into
test
push
adcb
loopne
mov
stc
or
mov
mov
std
mov
xor
inc
idivl
mov
push
jae
jo
fidivl
adc
and
scas
in
xchg
inc
pop
cwtl
rorl
mov
pop
hlt
push
jmp
adc
cmp
ret
repz
add
out
pop
outsl
pop
adc
push
or
adc
jne
test
push
inc
sub
int3
movb
leave
lods
push
xchg
rolb
icebp
ret
or
inc
stc
xchg
push
std
mov
stos
mov
xchg
jno
ret
repz
rolb
outsl
jno
mull
stc
sub
mov
jp
push
lahf
pop
sub
sub
xor
outsl
xchg
imul
or
fsubrl
and
xor
mov
rorl
mov
shl
dec
push
nop
jbe
xor
push
popf
adc
jg
cltd
lret
or
dec
mov
in
clc
mov
test
push
dec
pop
out
aad
inc
lahf
sub
dec
jmp
aaa
jne
xor
lahf
push
std
scas
mov
add
cmpsb
mov
popa
clc
sub
flds
dec
hlt
inc
xor
dec
cmc
dec
int
ljmp
stos
jle
sub
lcall
mov
add
dec
movb
incb
scas
adc
fwait
jno
imul
enter
stos
cmp
je
sbb
and
dec
ret
mov
adc
test
aas
out
mov
cmp
cmp
dec
sahf
mov
scas
mov
mov
push
ja
sarb
and
iret
inc
fwait
inc
sti
and
out
int
and
pop
nop
repz
jnp
cwtl
sub
notb
je
inc
xor
pop
shll
mov
sub
or
rcrb
mov
sbb
sbb
pop
dec
enter
insb
mov
dec
ret
lea
mov
dec
out
enter
pop
clc
sbb
xor
or
sub
xor
jns
into
out
outsb
push
popf
decb
call
std
lahf
cltd
cmp
clc
pusha
pop
push
dec
rorb
cwtl
shrb
in
out
iret
cmp
les
inc
aad
nop
pop
lret
int3
loop
jne
popf
sbbl
jp
stos
das
inc
push
mov
xchg
adc
jns
xor
outsl
sbb
cs
and
fwait
lcall
mov
es
sarb
movsl
int
lahf
push
and
clc
sbb
sbbl
stos
fnstsw
fcompl
push
xchg
ljmp
mov
mov
and
mov
mov
inc
mov
rcrl
in
fmul
pop
add
lds
mov
pop
dec
mov
sbb
add
test
mov
fbld
push
test
mov
mov
adc
xchg
lods
addr16
fwait
xchg
test
fmull
and
push
sar
insb
rclb
mov
leave
repz
sbb
mov
sbb
out
in
cltd
sub
out
inc
xchg
lock
movsb
incl
pop
loope
insl
arpl
and
sbb
ja
outsl
cmp
mov
aam
fwait
mov
cli
push
jge
lea
push
and
stos
fimuls
mov
push
jp
push
popf
pop
loope
scas
aad
cmpsl
lea
jge
mov
pop
sbb
sbb
es
jge
out
test
das
xchg
sub
push
pop
push
int
pushf
add
test
les
lods
pop
outsb
mov
jp
cmp
popf
fistl
push
iret
in
inc
xchg
test
pop
adc
sti
aad
add
jge
in
inc
je
in
pop
test
ret
mov
stos
imul
jns
inc
out
loope
roll
push
jmp
xchg
mov
push
adc
xchg
or
rcll
mov
fistpl
adc
loop
adc
cmp
sti
xchg
mov
imul
xor
xchg
add
jo
inc
movl
add
ficoms
sbb
divl
inc
pop
adc
mov
xor
inc
fdivs
or
fldl
cmp
popf
outsb
xor
mov
push
into
or
rcrb
shll
pop
cmp
add
les
addr16
adc
jp
enter
and
dec
mov
xor
cltd
mov
subb
jne
rcl
cwtl
mov
adc
icebp
add
out
cmp
fadd
pop
test
sub
int
jmp
or
cs
jp
or
cmp
mov
xor
sub
sub
cmpsb
iret
xor
sbb
pop
cmp
xor
fimull
mov
les
in
mov
lods
cmp
ror
inc
shll
mov
dec
or
sub
outsb
roll
int3
lods
xchg
inc
icebp
lock
loop
mov
dec
add
shrb
lcall
inc
arpl
push
inc
mov
add
leave
xor
clc
inc
insb
cmp
pop
pop
ja
mov
add
out
mov
cmc
loop
xchg
adc
jo
psubb
mov
inc
push
or
lret
and
add
or
loopne
dec
jg
fbstp
test
cmp
in
add
roll
push
gs
xor
fisubl
bswap
jo
daa
dec
rorb
push
xchg
sub
rclb
iret
inc
int
je
push
in
inc
into
sbb
cltd
mov
cmp
or
lock
stc
call
xchg
mov
pop
mov
dec
pop
jle
int3
imul
jecxz
jge
sub
and
sub
xor
and
inc
in
xchg
sub
push
lcall
imul
cwtl
mov
pop
lret
stc
lret
sbb
or
shll
imul
cmpsl
mov
int
adc
daa
js
lods
in
adc
xchg
dec
mov
out
lock
insl
es
enter
mov
loopne
sub
mov
jp
xchg
cmpsb
fst
xor
outsl
push
cmp
mov
mov
ss
jg
out
adcb
in
in
jo
mov
ror
stos
dec
push
jmp
push
rorl
push
sahf
adc
sar
scas
cli
push
mov
fcmovu
push
sti
push
imul
add
sti
and
dec
test
add
mov
mov
imul
out
cmp
mov
sub
aas
push
rolb
mov
or
push
jmp
cmp
push
inc
sar
add
dec
rcrl
test
les
sar
repnz
shll
or
jge
mov
pop
cmpsl
pop
xchg
mov
add
fisubrs
test
or
leave
mov
or
jle
xchg
les
out
jb
je
mov
lods
jl
push
jns
fs
pop
adc
or
mov
nop
mov
repz
push
fisttps
pop
icebp
lcall
or
xchg
fwait
aam
and
dec
cltd
mov
pop
fst
imul
call
sub
xchg
repz
leave
xchg
xor
cmp
cmp
xchg
imul
rorl
push
and
inc
jns
shlb
mov
nop
inc
xchg
ja
xchg
aam
adc
xchg
insb
rcrb
fcompl
add
lods
andb
xor
stc
test
int
cmp
mov
mov
ds
push
ficomps
sbb
dec
push
adc
pop
cmpsl
jnp
jne
xor
orb
xor
cmp
cmp
fldl
add
add
shlb
jmp
lods
pop
and
es
lahf
xlat
xchg
jno
push
lahf
sbb
arpl
push
lret
sbb
ja
dec
inc
dec
mov
sub
lahf
mov
add
jae
icebp
mov
lret
aam
insb
mov
out
mov
or
sub
cwtl
mov
xchg
pushf
xorl
inc
xlat
pop
xchg
jno
mov
shlb
adc
inc
push
jo
mov
dec
movsb
add
ficompl
inc
inc
scas
sbbl
scas
xchg
push
sbb
lret
adc
inc
mov
jo
dec
aas
fildl
lods
ds
and
inc
dec
dec
filds
pop
cld
arpl
xchg
loope
dec
sti
daa
or
sbb
xorb
insl
jns
add
cmpsb
jbe
shrb
add
cld
sub
mov
es
ljmp
scas
sbb
mov
shll
adc
test
int3
xor
sarl
mov
icebp
pusha
push
sbb
xchg
cmp
test
xchg
add
mov
cvttps2pi
insl
icebp
sub
out
xorl
lods
aas
test
outsl
cwtl
repnz
mov
std
in
popf
rcrb
inc
movsl
ja
lcall
sbb
xor
scas
aaa
sahf
lods
lret
inc
loop
adc
sbb
push
leave
dec
stc
loopne
rcrb
into
jge
mov
xchg
dec
pop
ja
fwait
mov
scas
shrl
xchg
rcl
mov
or
test
out
push
rcrb
adc
imul
jle
stc
cld
cs
cli
shrb
mov
adc
rcrl
bound
jae
orl
in
cmpsl
cli
out
shr
dec
mov
mov
or
call
in
xchg
inc
sahf
adc
dec
dec
fists
xchg
and
in
stos
in
orb
je
inc
sti
lock
iret
cmp
in
ja
lods
dec
push
sbb
dec
jno
rcl
aad
sti
in
xchg
mov
lret
fxch
fadd
addr16
popf
loopne
scas
and
dec
inc
lahf
out
imul
imulb
jo
in
cmp
fnstenv
mov
std
jns
jns
pop
jne
mov
xchg
sti
out
add
xchg
lret
xchg
lahf
xorl
stos
mov
sbb
and
into
push
shlb
xor
cmpsl
push
lds
popf
mov
sahf
xor
dec
adcb
cwtl
out
sbb
out
xchg
and
add
inc
jmp
inc
sbb
das
dec
into
xchg
sarl
shl
jns
and
push
jnp
addb
xchg
push
f2xm1
xchg
dec
mov
mov
mov
mov
imul
fadd
and
mov
jecxz
jge
into
dec
xchg
mov
sbb
sbb
iret
mov
adc
aad
jbe
and
or
sub
adc
and
and
sbb
iret
hlt
fidivl
in
int
in
fisubl
inc
xchg
pop
pop
push
mov
popa
jae
push
jp
add
div
frstor
js
lock
pop
mov
mov
dec
sbb
mov
xchg
cmp
mov
pusha
inc
lods
push
mov
add
incl
lret
inc
jp
jns
fstl
stos
mov
aaa
and
mov
jo
mov
push
ret
adc
dec
dec
sub
stos
and
inc
pop
inc
les
cld
xor
ret
add
pop
pop
jp
cwtl
inc
jno
xorl
xchg
lock
xchg
fldl
mov
dec
inc
mov
in
dec
mov
pop
mov
lcall
add
cmp
adc
sbb
sub
movsb
jae
sbb
scas
scas
fs
std
or
pop
mov
dec
pop
jle
pop
push
lahf
sti
jne
rcrl
inc
loopne
adc
test
idivb
cmp
pop
pop
push
in
mov
jge
imul
inc
das
vpmovsxwd
mov
xchg
xor
lods
sub
hlt
adc
dec
clc
jns
dec
movsb
adc
and
cmp
aam
or
sbb
sub
mov
sub
sub
sbb
sbb
mov
stos
out
cltd
push
mov
pop
jle
add
or
lea
in
mov
scas
inc
lock
jbe
iret
lods
xchg
lcall
out
cmp
jbe
push
stos
inc
inc
xor
xchg
add
mov
popf
ljmp
xorb
jge
int
push
jns
fwait
pop
mov
mov
lret
mov
das
mov
jns
insb
aad
rcrl
mov
push
add
roll
push
daa
mov
xchg
in
sub
fstpl
leave
ljmp
inc
cmp
mov
jge
data16
ret
js
out
fadds
movsb
jb
xchg
rorb
add
repz
push
stos
outsl
push
movb
out
mov
mov
pushf
int
dec
mov
xchg
jo
repz
gs
xchg
or
ljmp
jae
jecxz
in
pushf
insl
scas
cli
xchg
xor
mov
mov
mov
sahf
adc
iret
xchg
insb
push
xor
jp
lock
add
and
xchg
cmc
jo
and
scas
push
les
gs
dec
and
sbb
fildl
push
push
fucom
or
mov
and
mov
call
add
add
test
sbb
push
outsl
push
loopne
mov
mov
shr
mov
mov
dec
sbb
loopne
mov
rcrl
cmp
pusha
sbb
sbb
pusha
enter
iret
adc
sub
mov
sub
pop
mov
std
push
popf
cmpsb
xchg
cmp
call
mov
test
mov
pop
xchg
jb
dec
lds
lahf
rclb
inc
ficomps
inc
dec
test
lahf
pop
nop
jae
jo
push
dec
xchg
sbb
mov
orl
inc
sub
movsb
push
iret
push
mov
xor
outsb
jo
or
dec
cmp
inc
sub
pushf
fld
sub
mov
gs
cmp
adc
int
aas
add
std
sub
and
mov
jbe
inc
push
ja
xor
mov
lahf
out
loope
inc
and
hlt
push
js
in
outsb
mov
xlat
and
jmp
dec
add
jl
push
leave
insl
stos
insl
popf
pusha
imulb
sbb
gs
pop
fmull
and
jp
movsb
jle
adcb
mov
adc
iret
dec
cmc
nop
shrl
cmpl
mov
and
jmp
pusha
push
int3
sbb
rorb
jns
les
bndldx
jge
xor
fs
mov
mov
xlat
cmp
test
mov
out
sub
scas
int
cltd
imul
movsl
stos
cmp
mov
sub
mov
rorb
xor
pop
add
pop
outsb
sub
dec
pop
xchg
fldl
ja
gs
fistpl
sbb
sti
cmc
jg
xchg
add
ret
mov
sbb
ljmp
pop
shl
sbb
rol
ljmp
cmp
shlb
xchg
lods
cltd
subl
mov
movsb
dec
xor
test
cmp
xchg
shrl
aad
jb
mov
add
dec
dec
mov
push
aam
sahf
loope
push
mov
xlat
pusha
adc
and
mov
fnstcw
pop
jecxz
xlat
lcall
inc
jge
dec
into
shlb
add
cmp
cmp
mov
test
dec
cmpb
xor
xchg
loopne
mov
push
test
mov
xor
pop
cmp
inc
mov
pop
out
push
push
jle
test
shlb
cmp
mov
adc
mov
mov
cmp
push
cmp
rcr
into
roll
insl
push
mov
cmpsl
or
scas
cmp
in
add
dec
out
or
imul
sbb
gs
xchg
pop
jl
push
std
leave
pcmpgtd
cwtl
inc
outsl
push
rcr
push
out
fwait
or
push
xchg
sub
jge
pop
adc
xor
in
xchg
cltd
clc
cltd
pop
cmp
sub
mov
cli
mov
int3
test
int3
cmp
jnp
and
in
bound
jae
cmp
xor
inc
xchg
test
mov
mov
add
inc
push
lcall
cmp
mov
mov
fwait
dec
jecxz
jbe
dec
mov
sbbb
dec
cmovg
out
jmp
add
sub
icebp
enter
lret
push
add
int3
mov
adc
jnp
rcl
ret
clc
jo
mov
jb
stos
jle
fcoml
pushf
and
add
lds
lods
aam
or
mov
xchg
out
insl
dec
loop
insl
gs
add
add
je
jae
loop
sub
mov
adc
std
and
xor
mov
shlb
push
add
push
nop
mov
mov
pop
sub
jns
or
or
into
sbbl
in
push
cld
movsl
int3
andb
int
mov
push
jmp
inc
dec
outsl
dec
sbb
fdivs
xor
inc
test
mov
pop
push
lret
dec
test
scas
bound
push
pop
adc
inc
addl
cmp
lcall
mov
movsl
cli
cmp
adc
mov
and
cli
fildll
mov
int
int
cmpsb
mov
jbe
inc
ljmp
xchg
loop
pop
aad
call
mov
out
lret
mov
inc
dec
sub
add
ljmp
int3
mov
and
movsb
adc
daa
mov
sbb
aad
out
fst
rol
xchg
push
inc
jno
imul
std
add
adc
je
mov
sub
cs
jno
lret
sbb
jg
lods
inc
movsl
cmp
xor
ds
xchg
jo
frstor
inc
mov
mov
std
lea
mov
pop
call
adc
icebp
xor
push
push
cmp
and
aaa
xorb
xlat
adc
sub
sbbl
cltd
mull
jmp
push
sbb
test
idivl
notb
cmp
pushf
mov
pop
out
ret
or
mov
adcl
sarl
or
and
xor
outsb
in
add
pushf
jmp
stos
cmpb
int
mov
mul
dec
mov
jno
mov
out
shll
xorl
jo
orl
add
icebp
adc
inc
aas
xchg
out
out
jb
mov
or
cltd
pop
sahf
inc
scas
jecxz
cli
xchg
sub
cmp
int
xor
sbb
lcall
subl
movb
pushf
or
dec
xchg
pop
push
pop
dec
jnp
dec
inc
inc
stc
pop
cmp
mov
mull
in
cmpsl
xchg
fsts
fstpl
loop
inc
lods
dec
mov
xchg
outsb
sbb
out
ret
push
push
sub
adc
push
adc
or
js
rol
add
add
test
inc
ja
cmp
xlat
xchg
add
cs
outsb
mov
sbb
mov
push
pop
xor
gs
rcrb
mov
xchg
cmp
ds
insb
mov
push
mov
lcall
cmp
inc
cmpsl
adc
pop
loop
push
cmp
daa
cvtps2pi
push
imul
mov
adc
data16
outsl
mov
sbb
dec
sub
adc
cmp
sldt
sub
push
lret
sub
sub
dec
mov
sar
mov
loope
mov
test
popa
sub
lds
sbb
cwtl
sbb
xchg
aam
push
mov
mov
fwait
inc
inc
cmc
dec
popa
insl
and
mov
popf
push
mov
ret
jge
sub
jl
add
adc
pop
clc
mov
stc
sub
sbb
mov
lea
jecxz
or
push
rcll
insb
dec
sbb
sbb
push
mov
cmp
scas
xor
shlb
cltd
roll
lahf
xor
and
outsl
sbb
mov
mov
ret
dec
shll
dec
jne
js
sarl
loop,pt
cmp
aad
add
add
ds
cmp
cmpb
mov
mov
fistl
out
cmpsb
mov
sub
pusha
or
cmp
mov
or
enter
and
mov
push
addr16
push
mov
push
mov
daa
mov
cli
fs
mov
mov
lcall
xlat
imul
cs
push
repnz
adc
lahf
xor
sarb
rcr
fildl
mov
fstl
or
in
adc
sahf
sub
xor
ficoms
dec
dec
or
cmp
test
xchg
in
movsb
cwtl
dec
aad
cs
push
sbb
sbb
jb
aad
or
jg
insb
mov
add
idivl
push
dec
cmp
jecxz
dec
mov
pop
ja
xchg
jo
stos
cmp
ss
push
inc
inc
mov
les
ds
les
xchg
scas
in
xlat
mov
in
test
shll
cld
movsl
addl
push
lods
stos
pop
fists
ds
push
pop
dec
mov
and
mov
sti
int3
jo
xchg
cmpps
cli
inc
stos
mov
sbb
mov
mov
test
cmp
pop
in
in
aad
fwait
clc
test
jp
out
pop
cmc
faddl
mov
je
push
sahf
mov
repz
sbb
sub
fiaddl
ja
add
sub
inc
ss
arpl
sahf
rol
inc
arpl
in
xor
enter
xchg
push
daa
negb
scas
testl
mov
mov
and
mov
js
lods
aaa
mov
add
dec
mov
sahf
addb
out
dec
sbb
popa
push
pop
cmp
psrlw
dec
cvtps2pd
add
add
sbb
dec
xchg
adc
adc
xlat
cmp
cmpsl
xor
testl
adcb
cmpsl
mov
sbb
lahf
mov
sub
insl
insl
lods
test
cs
ret
icebp
ret
cmc
adc
fidivrl
mov
inc
aas
fmull
xchg
cmp
jne
movsb
daa
add
ds
mov
js
xor
mov
pop
and
mov
pop
sar
inc
pop
popf
xor
jg
sbb
push
xor
outsl
pop
mov
add
sbb
mov
sub
cmpsb
xchg
jae
inc
dec
clc
mov
lret
adc
or
out
sbb
push
idivb
int
pop
pop
or
in
out
cmp
das
sub
xor
inc
sbb
mov
jb
pop
xchg
loop
repnz
and
sbb
das
mov
aad
mov
dec
pop
pop
in
call
rolb
xchg
pop
loopne
xchg
jge
clc
jmp
xchg
fstpl
cmpsl
adc
jmp
inc
jns
cmp
inc
mov
xor
leave
fnstsw
pop
mov
mov
sub
xchg
pusha
out
jae
push
jmp
mov
stc
movsb
mov
sub
push
scas
arpl
xchg
insb
mov
out
bound
out
je
lret
mov
mov
sub
testb
adc
test
pushf
pop
cmc
subl
movb
adc
outsb
ss
idivb
leave
fnstenv
pushl
and
in
add
push
filds
fs
aad
outsb
es
out
lock
enter
cmp
mov
push
xor
mov
xchg
dec
insl
popf
jno
pop
popa
push
xchg
xchg
aam
lret
push
xor
call
mov
add
jmp
gs
stos
inc
lret
xchg
xchg
mov
icebp
lahf
ret
mov
adc
add
imul
xchg
lret
or
adc
cltd
cmp
idiv
pushf
cmpsl
jb
mov
inc
jb
sub
sbb
pusha
adc
sub
sub
adc
dec
mov
inc
lods
and
nop
cltd
pop
jmp
fcoml
fwait
int
xchg
sbb
repz
mov
clc
int3
rcll
cwtl
rol
sub
or
xchg
cmp
jne
jno
out
lcall
and
dec
pop
outsb
fidivl
or
xlat
pop
mov
pop
and
push
jl
adc
push
add
jae
icebp
ljmp
insb
mov
loope
scas
hlt
scas
pushf
pop
hlt
test
push
ret
std
stos
adc
fwait
or
add
pop
mov
add
xor
jge
mov
aas
es
xchg
add
cltd
shl
xlat
loop
jp
cmp
push
add
dec
jmp
cmp
sub
daa
and
push
movsb
dec
mov
push
fisubrl
pop
xlat
roll
aaa
ja
adc
dec
enter
xchg
xchg
outsb
in
in
das
sti
into
add
mov
push
mov
lret
push
add
inc
fimull
dec
call
push
in
into
sbb
enter
sub
movsl
mov
push
adc
ds
cmp
loopne
mov
xchg
int
xor
cmc
xlat
into
movsl
cwtl
cmpsb
adc
test
fisttpl
in
loope
test
push
addb
cmp
fsubs
adc
adc
or
xor
test
dec
push
add
movsl
adc
into
movsl
cmp
cmp
test
add
add
ret
stos
rcr
lcall
cmp
dec
dec
and
xchg
mov
int
mov
xlat
movsb
mov
pop
shrb
add
lcall
pusha
clc
movsl
lock
ja
in
and
xorl
and
cmp
std
test
stc
int3
movsl
jne
mov
push
fidivrl
pop
out
inc
mov
pop
xor
loopne
sub
cli
inc
dec
push
or
push
stc
mov
stos
sbb
push
les
push
mov
jnp
outsb
out
mov
push
shlb
xor
sbb
pop
sti
es
ljmp
add
es
and
mov
jae
add
adcb
cmp
out
xchg
xchg
push
dec
rcrb
dec
into
push
repnz
test
mov
add
fwait
popa
bound
add
push
sahf
jbe
adc
mov
push
sbb
mov
jae
mov
cmpb
aad
nop
pop
dec
sbb
and
jecxz
mov
add
sbb
std
mov
inc
mov
lea
insb
mov
mov
pop
jecxz
push
test
mov
out
dec
shl
mov
inc
ret
outsb
mov
push
pop
xchg
pop
push
and
push
mov
shrb
dec
ja
push
mov
lcall
mov
hlt
hlt
add
insl
dec
enter
hlt
sbb
or
in
mov
insb
cmp
dec
add
push
stc
sbb
mov
or
nop
or
rol
lret
xchg
test
adc
mov
out
mov
test
loopne
inc
and
insb
lea
add
add
ficoml
in
xor
loop
or
jmp
mov
lds
idivb
mov
shl
stos
loope
push
mov
jo
add
and
adc
dec
das
popa
and
or
lret
jp
pop
dec
xor
push
xchg
pop
mov
ds
pop
add
adcb
cmp
leave
xchg
jae
pop
sub
and
mov
pushf
xchg
je
cli
inc
xor
stc
jl
cltd
sbb
jnp
pushf
pushf
adc
mov
fcoml
adc
sahf
in
mov
mov
test
inc
repz
out
loope
divl
leave
jg
dec
fadds
add
cmpsl
push
mov
sbbb
sub
jns
arpl
sbb
shl
sub
inc
pop
cmpb
push
les
lahf
addr16
add
push
pop
or
pop
inc
mov
or
das
mov
mov
or
fadd
lret
or
cmp
cmp
nop
jle
jmp
fnsave
sbb
adc
lcall
xorl
lahf
fs
cmpsb
push
cmp
mov
push
inc
inc
dec
mov
mov
add
push
mov
mov
jmp
or
sbb
dec
dec
mov
inc
fdivs
fmull
push
sti
sub
aaa
movsb
lods
icebp
cmp
movsl
add
scas
add
inc
mov
je
pop
cwtl
imul
mov
add
mov
cltd
push
mov
mov
adc
or
pop
fistpl
inc
cli
daa
jns
addr16
aam
and
imul
mov
arpl
cmp
cwtl
lahf
fstpl
push
cld
in
mov
mov
cmpsb
daa
scas
jg
mov
jb
fstpt
jae
sbb
mov
loope
mov
xor
pushl
push
and
lahf
orb
pop
push
in
jbe
repnz
xchg
pop
mov
lret
push
xchg
pop
jbe
cmp
pop
sbb
add
xchg
cmp
pop
sub
rorb
push
and
dec
pop
pop
pop
xchg
movl
popa
in
add
pop
sbb
shl
pop
mov
test
in
mov
es
bound
pusha
bound
rcr
je
cld
outsl
push
dec
stos
loope
rclb
out
lock
push
push
test
repz
dec
pop
ret
pop
icebp
mov
inc
cmp
shll
xchg
mov
pop
movsb
mov
add
jge
mov
hlt
jmp
adc
or
imul
jmp
adc
sti
mov
push
jne
sahf
jno
mov
nop
push
incl
add
fcompl
ret
mov
mov
xor
icebp
shll
cmc
loop
mov
ss
sbb
ja
mov
dec
sbb
pcmpgtd
xchg
dec
daa
inc
inc
xchg
arpl
lea
jmp
outsb
pop
mov
shrl
and
cmp
out
lods
insb
cmp
dec
testb
xor
in
arpl
jl
inc
mov
push
repz
fdivl
pop
dec
adc
mov
outsl
sub
sub
imul
mov
xchg
adc
xchg
xor
xor
push
push
rorl
scas
push
inc
fldl
mov
add
xchg
fistps
dec
lea
sbb
lea
and
add
add
fsubrs
or
cmp
dec
fwait
add
mov
stos
shrl
nop
xor
or
outsl
push
cmp
jno
push
add
push
les
sub
xor
xchg
rcrl
enter
insl
sbb
add
jle
repz
mov
loopne
xor
in
out
jno
testb
out
dec
dec
cmp
cwtl
jbe
sub
in
add
and
jp
pop
outsl
fwait
push
repz
mov
rclb
mov
push
and
jno
shlb
cmpsl
test
and
xchg
shrl
fisubrs
cmp
mov
call
jp
and
scas
mov
stos
out
lock
lds
pop
outsb
xchg
mov
adc
jge
xlat
xchg
aas
sub
in
mov
add
and
pop
mov
ja
out
test
imul
out
dec
cmpsl
pop
or
adc
jl
leave
push
out
negl
jae
or
ficoml
jp
jb
js
mov
movsl
or
xor
mov
add
cmp
cmp
jns
push
aas
add
loopne
aad
stos
mov
add
xor
outsb
or
pushf
sbb
test
nop
xchg
cwtl
jnp
ror
lods
jg
push
lds
dec
jg
add
xchg
insl
mov
leave
cmp
loope
sahf
aaa
test
loope
sbb
xlat
mov
pop
dec
mov
repz
adc
int
repnz
mov
adc
pop
add
push
sahf
movsb
sbb
jns
xchg
push
pop
xor
neg
dec
js
test
pop
popa
cltd
xchg
mov
sub
jo
add
add
mov
inc
das
push
insl
mov
outsl
or
dec
sub
nop
add
stos
xorb
sub
pop
and
mov
lahf
xchg
inc
mov
mov
push
roll
dec
scas
cltd
daa
aad
xchg
jnp
out
lret
int3
loop
loopne
mov
mov
mov
sarl
mov
stc
push
xlat
sahf
dec
mov
stos
mov
stos
mov
sbb
fs
pop
out
insb
repnz
daa
sti
rcll
push
pop
push
sahf
sub
add
lret
dec
inc
fistpl
rcrb
mov
movsl
xchg
imul
es
sbb
inc
std
xchg
and
inc
icebp
mov
dec
sbb
enter
adc
jae
fsubl
add
icebp
test
xchg
cmp
sub
int3
adc
adc
pop
add
loope
xor
lcall
mov
xchg
enter
jmp
adc
or
cmp
mov
push
adcb
mov
push
push
pusha
repnz
mov
cli
pop
mov
in
sub
cmp
sub
xchg
imul
lahf
fcmovu
adc
jne
mov
enter
pop
mov
mov
jne
movsb
les
and
jge
lret
out
dec
mov
pop
mov
rep
adc
mov
enter
cmp
cmp
sub
pop
and
aad
loop
aad
bound
leave
mov
push
ja
mov
repnz
rcl
jle
cmc
orl
mov
insb
scas
pop
cwtl
sub
mov
lcall
pop
mov
mov
fisubl
or
jge
or
popf
movsb
rcrl
movsl
jl
fists
xchg
mov
xchg
mov
lahf
orb
sbb
jge
lods
mov
add
nop
xor
add
insl
or
dec
jmp
or
xchg
int3
fadds
nop
in
test
fcompl
xchg
lsl
ret
and
pop
lock
xor
insl
lea
cmp
xor
mov
aas
sahf
out
add
mov
inc
and
xchg
es
js
out
and
insb
xchg
aam
and
inc
jmp
jge
int
movl
xchg
les
push
data16
sub
je
xchg
mov
ljmp
aad
popa
orb
mov
aaa
xchg
or
pop
lds
xchg
fisubrs
adc
mov
xor
xchg
out
jne
push
js
xchg
pop
popa
pop
dec
jge
sub
dec
mov
cwtl
cs
cmp
jns
jae
mov
ljmp
add
lcall
test
sbb
gs
jge
icebp
cltd
fs
cmpsl
adc
jb
mov
mov
push
xchg
dec
repnz
roll
sbb
pushf
and
fldl
popa
aam
pop
cli
or
lret
insb
pop
sub
mov
scas
jno
lods
adc
test
sbb
rorl
mov
jge
sub
push
lods
das
xorl
xor
push
in
pushf
jle
cwtl
push
fidivrl
js
mov
je
adc
lea
fadds
aad
or
xor
leave
pop
std
xadd
ror
and
sbb
outsl
lret
sbb
or
pop
ljmp
out
dec
mov
mov
mov
pop
xorl
inc
cmp
sub
out
es
add
add
mov
mov
outsb
jmp
inc
pop
inc
push
xchg
aam
and
sub
std
cmp
push
ds
xchg
or
into
loopne
imul
es
jge
shrl
add
cmpl
jo
mov
ja
mov
int
mov
testl
in
xchg
pop
pop
push
int3
push
nop
lahf
adc
or
incb
jo
and
mov
adc
xchg
xchg
add
popa
or
ret
idivb
ret
lret
and
xor
stc
fprem1
and
cld
push
adc
jl
aad
repnz
mov
test
neg
sahf
mov
ljmp
fcmove
or
inc
call
jno
and
sub
jmp
out
jo
stc
fidivrl
cmp
mov
xor
imul
or
jl
fsubr
clc
cli
out
outsl
mov
subb
hlt
dec
push
push
popa
fildl
stos
notb
rep
repnz
lea
jg
loope
cmc
sub
sahf
or
out
xlat
xor
push
xor
and
sarl
gs
imul
arpl
cmpsl
mov
mov
sbb
movsb
dec
adc
cld
imul
rorl
fcompl
cmpsl
fs
in
ljmp
daa
add
iret
ds
sub
xchg
repz
fnstenv
lods
and
insb
mov
scas
aas
or
test
jne
xor
sbb
pop
sti
inc
mov
nop
sbb
mov
lds
outsb
cmc
sbb
jmp
sbb
fsubl
pop
mov
sub
sub
pushf
dec
sub
or
insl
pop
jne
inc
xor
or
std
mov
inc
hlt
adc
xchg
flds
out
xchg
dec
insl
scas
mov
add
inc
in
pop
sarb
push
pop
xchg
cmpsl
sub
shrl
or
ror
jl
xlat
mov
sub
lods
jmp
adc
inc
or
stos
xchg
andl
dec
sub
cld
out
out
out
insl
mov
lods
inc
add
push
sub
or
leave
insb
jg
add
jge
adc
in
jnp
xor
stos
les
and
and
mov
cld
push
push
pop
add
jno
cmp
sbb
push
lret
dec
adcb
cs
leave
lcall
mov
lret
mov
ret
mov
aas
mov
add
adc
and
in
mov
jle
push
adc
and
mov
out
or
xorb
sub
cmpsl
jae
int
imul
lea
mov
and
sbb
pop
bound
insl
pop
popa
call
arpl
rep
cmp
aam
mov
mov
scas
mov
adc
pop
loopne
mov
es
sbb
lods
fimuls
sub
rcll
fchs
out
xchg
int
pop
push
stos
repnz
dec
mov
mov
push
mov
lea
cmp
dec
stc
leave
repz
add
lock
or
add
adc
ffreep
sbb
mov
rorl
mov
mov
pushf
cmc
lahf
daa
or
fildl
inc
cmp
aam
ret
iret
imull
dec
lock
pushf
insl
mov
jno
add
test
jnp
cmpsb
adc
orb
adc
push
imul
leave
dec
or
dec
in
outsb
push
mov
mov
clc
aas
or
jge
xchg
add
cmpsb
or
fwait
std
xor
fs
or
test
jge
ljmp
fs
inc
pop
insb
enter
mov
sub
lcall
mov
push
mov
jle
rcr
mulb
addb
xor
cld
mov
out
mov
lods
popf
aad
or
or
jns
mov
movsl
fidivs
std
aas
xor
pop
dec
enter
lods
jno
and
jge
sbb
dec
sbb
pop
lret
dec
lods
cli
test
ja
aaa
cltd
dec
popa
mov
in
cmc
test
out
into
xor
adc
mov
stc
mov
roll
repz
insl
js
lods
into
inc
nop
data16
inc
lret
dec
push
stc
fbld
xor
data16
or
pop
jnp
jns
aam
jmp
cmp
sar
outsb
rcrb
or
rolb
and
xor
mov
out
xchg
mov
jmp
xchg
adc
stos
mov
pop
mov
addr16
loop
mov
xchg
and
mov
mov
pop
add
xor
roll
dec
xchg
fbld
dec
or
mov
xchg
lods
lret
adc
jo
lods
lods
iret
add
shrl
cltd
lcall
mov
andb
in
xor
fbstp
rcll
add
clc
rcrl
ds
add
outsl
jnp
cmp
cmp
les
mov
sub
mov
xlat
in
dec
and
push
xor
xor
pusha
sbb
aaa
or
cs
inc
xchg
mov
inc
sub
pop
sub
imul
js
pop
leave
mov
push
dec
jge
jmp
mov
and
mov
por
call
mov
and
sti
push
scas
iret
jmp
popa
decb
pop
movsb
stos
lods
std
mov
test
jge
loop
xchg
fwait
or
dec
sahf
ja
sbb
xchg
mov
addl
xchg
out
push
hlt
push
add
pop
shll
dec
inc
mov
adc
loopne
add
xchg
xor
adc
cmpsl
push
daa
inc
jl
jo
data16
fimull
mov
mov
rcrl
add
jl
repz
fucomip
cmp
cs
cli
test
in
fisubs
pop
push
xchg
call
mov
sub
xchg
mov
mov
xor
test
jle
push
xchg
shrb
sbb
rorb
pushf
pop
xchg
mov
faddl
mov
cmp
out
movsb
sbb
in
sub
pop
vpshlb
pop
push
cvttps2pi
and
insl
xchg
mov
add
or
cmp
sub
aam
hlt
push
push
lds
push
jns
mov
fimull
jp
mov
jbe
or
xlat
inc
mov
cmp
push
int
adc
enter
jo
lea
mov
fdivrp
loopne
pop
pmullw
and
mov
inc
xlat
sub
das
pushf
test
popa
icebp
lcall
sti
fwait
xchg
mov
aaa
adc
icebp
inc
repz
mov
pushf
mov
hlt
jbe
mov
mov
mov
dec
xchg
lcall
pusha
es
rcrl
lock
add
xor
or
inc
and
mov
loop
push
test
and
setb
in
sahf
insb
fnstenv
dec
scas
scas
movsl
test
or
fwait
xor
mov
addl
hlt
lahf
jecxz
and
pushf
int
adc
mov
adc
mov
subl
out
xchg
movsb
test
sub
hlt
clc
add
inc
add
push
mov
adc
test
inc
aaa
push
icebp
mov
aam
lods
in
outsl
or
or
xchg
into
inc
cmp
loope
popf
aam
sbb
out
sub
sahf
xor
push
fwait
dec
jg
jnp
call
jno
out
cwtl
in
inc
push
stos
ret
ret
or
add
xchg
jo
shrl
pop
cs
sarb
cmp
inc
outsb
jo
xor
xchg
fsubl
fcoml
loope
jns
pop
popa
movsb
cmpsb
mov
aad
stos
mov
bnd
mov
xchg
sbb
cmp
aam
or
xchg
fdivrs
fidivrl
std
repz
incl
enter
in
or
mov
lea
jne
movsb
lea
imul
test
imul
in
lret
rorb
aas
int
xchg
test
fdivs
add
jl
inc
adc
in
jp
jp
xor
and
mov
pop
aad
pusha
mov
repnz
mov
roll
cmc
mov
test
push
mov
rclb
push
adc
and
test
clc
xor
popa
xlat
pop
mov
adc
sub
fs
xchg
jg
push
loopne
add
push
loop
test
and
lods
dec
dec
pop
mov
xchg
cs
sbb
insb
lds
lcall
test
or
adc
add
xchg
mov
into
xlat
xchg
leave
sub
div
mov
push
jno
gs
jl
or
loope
cmpsb
insb
inc
pop
mov
mov
ljmp
xor
lock
mov
xor
sub
jle,pt
jo
or
ret
popa
mov
in
imul
mov
cmp
inc
hlt
jmp
xor
push
mov
xchg
iret
les
mov
add
jb
leave
aaa
xchg
add
mov
xor
xchg
int
enter
add
mov
sbbl
icebp
scas
xor
and
das
or
cmp
stos
inc
mov
stc
push
jb
jge
mov
cli
pop
sbb
pop
dec
lcall
pop
xchg
jae
aad
mov
inc
fbld
dec
inc
ror
test
fsubl
stos
and
out
daa
enter
xchg
mov
add
xchg
adc
cmp
stos
gs
cwtl
test
mov
scas
lcall
mov
or
dec
and
fbld
fcomps
lcall
sub
sub
sub
movsl
inc
xor
adc
inc
mov
cmpsb
jb
fsts
adc
divl
xor
add
xchg
push
adc
xlat
add
push
js
mov
jmp
push
xchg
mov
adc
push
and
jecxz
adc
bnd
fxch
pop
icebp
cmpsb
das
into
lods
push
ret
push
sahf
add
sub
lahf
jae
mov
addr16
mov
ljmp
jo
fucomip
xor
fcomps
xchg
sub
cmp
push
jb
mov
adcb
andl
add
clc
outsl
cmc
rclb
out
mov
outsl
sbb
adc
jo
mov
add
js
loope
jg
fidivrl
push
negl
orl
daa
mov
xor
stos
aad
insl
push
jns,pn
lret
mov
push
cltd
je
jl
dec
or
jae
push
cmpsl
xor
fs
out
lret
cmp
lods
test
inc
fstps
mov
lock
inc
out
sub
push
sbb
add
mov
add
sub
cmp
addr16
imul
or
xor
test
fwait
pop
push
push
push
fisttpl
sub
inc
push
push
outsl
mov
movsb
jbe
int
fwait
pop
setge
xchg
jno
fsubrs
cli
jns
loop
dec
mov
cmp
mov
push
cs
pushf
int3
jg
arpl
add
or
push
mov
nop
int
cmpsl
cmp
sbb
or
repnz
dec
mov
dec
jns
nop
xchg
dec
mov
pop
dec
mov
pop
xor
mov
jae
leave
out
pop
pop
and
mov
push
push
out
es
cmp
cmpsl
inc
cmp
cmp
dec
lock
repz
arpl
cmpb
repz
jbe
push
mov
cs
aad
in
adc
insb
dec
or
nop
int3
cmp
std
idiv
push
cld
cmp
not
repnz
mov
lods
insl
mov
jae
xchg
mov
lds
out
out
les
aam
mov
inc
cmp
call
pusha
jno
mov
xchg
out
mov
xchg
mov
es
adc
aad
subb
mov
ret
std
imul
je
push
xor
ljmp
out
fistpl
sti
dec
xchg
mov
out
das
les
rcrb
or
cmp
into
jae
mov
inc
inc
call
cmp
mov
sbb
push
add
addl
push
inc
pop
pop
adc
sahf
or
daa
ror
and
pop
es
mov
mov
push
mov
xchg
mov
xorl
jnp
lods
ja
xchg
cmp
repnz
out
jbe
push
dec
scas
gs
xor
pop
jno
inc
outsl
aas
xchg
aad
out
push
xchg
outsb
test
mov
push
rorl
pop
jp
test
push
imulb
loop
outsl
rolb
or
xorb
rolb
outsb
ss
test
sub
mov
and
cmp
loop
mov
sbb
cmp
push
rcrl
xchg
in
xchg
repz
notl
sub
and
fdiv
mov
sbb
xchg
sarb
iret
into
sub
bound
sbb
mov
inc
hlt
inc
and
sub
push
sub
mov
push
mov
js
xlat
add
test
subl
push
lods
out
mov
cli
insb
pop
mov
mov
jb
jle
stos
pop
fwait
add
ret
push
sarb
push
mov
and
jbe
faddp
mov
test
adc
xchg
fisubl
pop
nop
jnp,pn
adc
cli
and
push
cmp
xchg
push
dec
test
pusha
sub
lret
in
gs
mov
sti
cs
push
lods
test
mov
insl
pop
or
je
add
stc
adc
mov
lret
scas
mov
repz
daa
out
sub
dec
fwait
cs
pop
push
sbb
mov
out
mov
outsb
test
sub
push
cli
ljmp
adcl
es
lahf
imul
add
int3
mov
add
fmulp
sbb
out
loopne
cmp
out
cmpb
sbb
push
inc
jmp
sbb
or
iret
cld
lea
or
test
jne
pop
or
sbb
inc
jge
in
and
cli
mov
mov
out
jae
inc
fmuls
xchg
int3
arpl
shll
ret
loopne
xchg
in
std
adc
jns
add
cmpsl
into
outsb
out
imul
je
jo
insl
jg
fildl
add
inc
icebp
stos
stc
mov
stos
push
outsb
loop
repnz
lahf
xchg
rclb
dec
mov
inc
dec
pop
xor
inc
or
test
insl
test
push
aad
aam
push
stc
lea
push
sub
sti
and
pop
mov
rclb
jmp
sbb
cmpsl
mov
subb
cmp
xor
lea
mov
lcall
loop
cltd
mov
dec
arpl
cltd
and
addl
in
data16
inc
repnz
sbb
mov
scas
mov
and
psubb
xchg
xor
andl
mov
adc
hlt
outsl
or
push
addr16
cmpsb
int
dec
push
or
jo
cmp
out
lods
xchg
pop
jmp
aad
inc
add
xchg
mov
aam
and
or
mov
int3
and
in
xor
inc
in
aas
fdivs
adc
adc
adc
push
popf
add
push
dec
xchg
sbb
dec
sahf
and
xor
lea
test
les
nop
addr16
adc
and
int3
aad
out
xchg
xchg
popf
mov
leave
nop
mov
inc
jle
mov
pop
bound
jno
not
and
sbb
sbb
mov
inc
fcmovnu
faddl
stos
sahf
adc
mov
push
cmc
std
stos
cs
xor
sub
xlat
ss
xor
push
sbb
sub
mov
icebp
icebp
mov
lea
shl
int3
sub
xchg
push
push
mov
movsb
lcall
dec
dec
inc
add
inc
lahf
xchg
fdivr
aam
imul
push
xchg
xor
add
mov
pop
cmp
shll
jle
sarb
aad
lret
fldcw
clc
sub
and
xchg
stos
lahf
xchg
inc
push
sbb
xlat
roll
adc
out
mov
mov
sbb
lods
les
dec
outsb
fsubl
or
lds
or
inc
popa
mov
loopne
das
out
sbb
xchg
inc
fnstsw
insb
dec
xchg
sbb
movsl
sahf
cltd
test
push
mov
insb
add
arpl
cli
pop
add
mov
scas
data16
into
pop
lcall
and
lds
das
testw
add
adc
std
push
mov
int3
into
adc
xor
lea
loop
push
lret
cli
loope
push
push
push
pusha
push
cmpsl
hlt
or
or
das
mov
dec
jno
out
outsl
xor
pop
add
mov
test
movsl
loop
in
sbb
jl
xor
fstps
cmp
iret
or
repnz
mov
jge
cmp
mov
fwait
dec
pop
sbb
xchg
xchg
pop
and
or
add
and
mov
mov
leave
cltd
adc
xchg
cmp
add
mov
scas
push
fwait
mov
cmp
jae
add
iret
lods
mov
xchg
adc
imul
test
int
shll
call
sub
cmp
aad
lea
aas
bound
aad
pop
ja
lods
xchg
std
jp
stos
jle
push
in
fs
xchg
imul
xor
dec
ds
pushf
shll
or
cmpb
pop
push
lds
mov
fdivs
and
jae
and
lea
fstps
lods
mov
jne
pop
pop
aad
stos
mov
cmp
add
and
arpl
cltd
push
dec
sub
movsl
sarl
inc
fwait
sub
test
fsubp
pop
cmp
cmp
int3
pop
push
sbb
mov
lret
mov
in
add
mov
add
mov
lret
mov
and
push
das
jl
sbb
shrb
fcoms
mov
sahf
dec
lods
lock
scas
insb
orl
fmulp
push
add
push
push
gs
inc
test
mov
les
inc
data16
ja
sti
xchg
add
xchg
fmul
stc
pop
push
pop
into
sub
or
jnp,pt
roll
aad
and
inc
push
dec
sbb
xchg
lcall
jno
xchg
mov
test
sub
and
lahf
fcom
bound
jge,pn
push
cmp
dec
sgdtl
dec
lock
ret
addr16
push
in
xchg
mov
pop
xchg
sub
adc
aam
cld
fsubl
xchg
pop
ss
loop
sub
sbbb
test
popf
mov
stos
in
jmp
hlt
push
outsb
mov
or
cmpsl
add
jecxz
pop
sbb
add
inc
jae
icebp
movsb
cld
sbb
add
add
xor
push
push
jle
adcb
cmp
rcrl
ret
ja
dec
push
mov
insb
iret
jp
mov
out
imul
or
roll
jo
jl
xor
ds
mov
into
cmp
das
add
add
das
ficomps
lock
addr16
cmc
orb
out
push
fisttpll
mov
enter
scas
xchg
fcoms
enter
jg
ljmp
inc
imul
push
adc
arpl
xchg
xchg
pop
xor
fnstcw
mov
or
xor
sbb
mov
notb
outsb
insl
bound
cmp
aam
adc
repnz
mov
negl
roll
mov
test
jmp
jne
negb
ljmp
sbb
mov
dec
xchg
xlat
fnsave
adc
jmp
sub
push
leave
mov
movsb
out
xlat
dec
movsl
jb
test
dec
loope
inc
mov
mov
push
inc
test
mov
imulb
or
cmpsl
sbbl
popf
dec
pusha
mov
push
dec
fwait
aas
sbb
ffreep
rolb
mov
gs
adc
adc
mov
or
mov
stos
lret
dec
pop
sub
sbb
or
in
hlt
sub
xor
add
push
xor
loopne
outsb
mov
std
fwait
jl
inc
fbstp
xchg
int3
sub
arpl
leave
add
clc
popa
stc
xchg
mov
add
ljmp
imul
mov
jbe
jmp
or
jg
or
xchg
int3
outsl
insb
mov
mov
cli
xchg
bound
push
stc
lods
mov
mov
std
mov
jecxz
mov
loope
mov
mov
ja
mov
mov
or
icebp
jne
adc
cmp
fcompl
bound
test
lret
inc
movaps
cltd
test
lods
mov
mov
push
cmp
add
add
lods
adc
out
mov
dec
test
mov
movsl
mov
mov
aad
inc
ret
jecxz
jbe
daa
cmp
in
pop
lcall
in
cmc
sub
xchg
dec
mov
mov
lods
jecxz
shr
pop
aam
movsl
mov
push
or
sbb
dec
mov
push
xor
dec
int
aas
int3
mov
jmp
test
mov
es
xchg
jae
mov
pop
stos
dec
repnz
rcll
xchg
push
xchg
pop
stos
imul
xchg
sub
loopne
jb
push
adc
mull
push
mov
inc
movsb
jmp
popa
loope
pop
repnz
fstpt
or
lcall
jecxz
xchg
jae
fmulp
addr16
lea
enter
test
adc
push
sbb
and
test
jno
add
mov
dec
inc
mov
icebp
jb
xchg
lcall
xchg
push
test
lock
call
nop
lods
push
lock
xchg
dec
outsb
inc
aas
xchg
inc
dec
nopl
cmpsl
push
xor
test
cmp
dec
arpl
test
xchg
add
xor
sub
jge
or
push
inc
push
ret
push
mov
insl
add
hlt
mov
orb
test
or
dec
jge
rcrb
push
add
pop
sbb
push
mov
or
jg
std
stc
cmp
mov
push
sub
ret
push
cmp
sarl
adc
mov
cltd
mov
out
ss
mov
ret
mov
test
movzbl
lea
int3
iret
adc
pop
pop
adcb
mov
out
mov
or
stos
sbb
mov
xchg
mov
mov
push
and
add
add
add
lahf
call
and
mov
pop
xor
mov
push
hlt
pop
sarl
dec
xchg
inc
sbb
sti
rcrb
aam
xchg
adc
lea
imul
sub
cmp
mov
cmpsb
int3
fnsave
pop
aam
xor
push
add
hlt
or
ja
push
xor
adc
lahf
jbe
repz
pop
jno
sub
popf
or
pushf
push
sbb
daa
cmp
repz
hlt
popl
xchg
sub
mov
fists
mov
and
mov
sbb
mov
adc
and
mov
loope
push
dec
fnstsw
scas
or
adc
add
incl
adc
push
loopne
test
test
push
arpl
aam
push
xchg
je
ljmp
adc
adc
into
aas
jo
and
xchg
lcall
add
es
flds
adc
add
mov
ljmp
mov
push
dec
and
rcl
loopne
mov
call
je
pop
scas
pusha
rclb
mov
push
popf
pop
or
aad
loope
aaa
loopne
dec
int
adc
cmp
mov
scas
push
int
sbb
faddl
jge
pop
cmp
out
mov
or
shl
adc
std
xchg
or
adc
jmp
pop
xchg
mov
push
jmp
sub
and
icebp
jmp
pop
cmpsb
mov
xor
sub
loope
dec
push
repnz
pusha
sub
pop
pop
out
xlat
adc
stos
stos
jnp
jp
sti
cmpb
mov
popf
pop
insb
pop
ds
push
fidivrs
adc
jmp
cmp
add
jp
jl
clc
dec
test
movsl
popf
jne
inc
inc
dec
dec
pop
push
push
insl
jo
add
add
add
test
pushf
sahf
aad
ror
es
dec
test
int
sbb
push
pop
adc
fisttps
test
add
mov
imull
jno
scas
sbb
rorb
sbb
fnsave
jl
lcall
shl
push
insb
outsb
cmp
jo
lods
or
outsl
push
arpl
rolb
repnz
xchg
cwtl
inc
test
mov
mov
out
sbb
pop
adc
add
subl
sbb
adc
es
jns
adc
fs
jae
stos
ljmp
inc
scas
dec
rsqrtps
rcll
mull
cmp
mov
xor
int
lods
fsubrl
adc
insb
mov
mov
iret
or
scas
cli
mov
mov
sub
xor
xchg
pop
add
cmp
enter
lret
loope
imul
les
xchg
ret
outsl
fs
mov
loop
jno
or
ss
and
cmp
push
and
inc
push
jbe
mov
mov
pop
ds
pushf
testb
scas
jne
test
lea
es
cmp
insb
mov
out
jg
ss
fcoms
cmpsb
add
scas
mov
int
movsb
mov
mov
dec
jae
cmpl
in
mov
icebp
movsb
leave
lcall
sahf
mov
fildl
jae
popl
cmp
mov
outsl
adc
pop
or
fsubl
xchg
adc
xor
dec
pushf
xchg
test
ljmp
sbb
nop
jae
popf
cmp
int3
icebp
dec
test
sbb
or
test
cld
pop
insb
fnsave
subb
mov
adc
and
ret
push
in
popf
sbb
fwait
shrl
test
outsb
mov
fdivr
add
inc
cmp
inc
jbe
aas
jno
int
pop
stos
fcmovne
js
xchg
push
pushf
iret
repz
in
inc
sub
cmp
fidivrs
fcompl
push
cld
shll
repnz
push
sti
sbb
and
in
iret
test
cmpsb
sbb
mov
pushf
jp
int
pop
jbe
add
push
dec
arpl
pop
mov
sbb
add
jno
xor
push
sbbl
pop
fwait
dec
out
mov
inc
repz
push
and
mov
pushf
sbb
ljmp
cwtl
or
test
add
cmp
inc
jnp
lods
pop
cmp
test
sbb
stos
cmp
pop
mov
mov
movsw
jb
ret
std
faddl
dec
fiaddl
push
test
push
and
mov
repz
je
mov
sub
jae
jmp
push
out
cmpsb
dec
mov
test
xor
mov
push
mov
or
jne
stc
mov
es
je
pmulhuw
in
mov
out
ja
or
mov
or
and
sub
dec
loopne
sub
mov
gs
pop
loopne
xchg
inc
bound
xor
adc
mov
ds
jno
call
lahf
dec
dec
insl
mov
ret
sub
jl
outsl
jmp
adc
push
adc
mov
cmpsl
jb
and
popf
mov
hlt
push
sbb
sahf
add
and
or
jmp
aaa
sbb
xchg
je
push
lret
sbb
xchg
mov
xlat
mov
jge
jns
cmp
dec
test
incb
das
les
or
iret
leave
stos
jb
adc
jns
fistpl
sahf
insb
ja
pop
mov
fadd
xchg
or
sbb
repz
aad
popa
add
jo
mov
dec
jge
xor
add
jge
aas
pop
inc
dec
and
fs
and
push
into
je
inc
aam
std
add
aad
call
loopne
inc
fisubl
rorl
lods
cmp
mov
fsubs
push
mov
xchg
mov
pop
push
fsubrp
mov
dec
aad
scas
fistps
mov
push
pop
push
jb
pushw
xchg
push
int
into
ljmp
inc
mov
cmp
mov
shlb
sahf
mov
ret
lods
push
subl
push
pop
ret
adc
dec
dec
add
and
fisubs
nop
lock
push
in
hlt
imul
inc
dec
clc
xchg
shlb
and
in
mov
mov
mov
iret
mov
push
add
jge
test
xchg
push
and
in
cmp
aas
mov
ljmp
lods
in
mov
cwtl
lods
ljmp
jmp
je
cs
pop
xchg
mov
inc
adc
test
jae
popf
inc
daa
aaa
sbb
cmp
sub
xor
iret
pop
dec
inc
sub
mov
imul
and
or
adc
imull
sub
xchg
icebp
stos
outsb
cmpsl
adc
addr16
inc
insb
ret
lods
pop
insb
out
movsl
std
pop
add
stos
jl
in
int
xchg
loope
or
push
mov
test
outsb
or
xchg
push
popa
stos
out
mov
fistl
in
fs
cmp
lahf
pop
daa
rcrl
sub
loop
jno
sbb
int
shrl
adc
outsb
mov
add
lcall
add
adc
adc
jmp
cmpsl
cwtl
xchg
lahf
and
and
xor
push
pop
test
lods
scas
aad
jmp
sbb
bound
cld
lock
dec
into
push
add
stos
imul
or
inc
arpl
outsb
adc
xor
jo
repz
es
or
jle
add
cltd
shll
pop
pop
pop
gs
aad
lock
mov
flds
das
xor
pusha
sbb
add
mov
pop
pop
sbb
dec
jg
cmp
cmpb
ss
mov
testb
push
mov
xchg
pusha
or
mov
call
jl
mov
lahf
inc
aas
cmpsb
imul
pusha
fs
jo
adc
inc
loopne
aaa
push
leave
sub
inc
cmpsb
out
test
scas
mov
push
cmp
sbb
pop
sub
stos
sub
das
dec
add
out
mov
lods
xor
ficoms
scas
sub
adcb
sahf
jg
push
push
adc
fmuls
xlat
push
mov
scas
push
jmp
sbb
inc
iret
xor
push
test
cmpsb
sbb
jp
jg
inc
fistl
les
jp
imul
add
mov
enter
aam
lret
cmp
xchg
shl
mov
orl
stos
iret
rcl
inc
bnd
sub
xchg
test
fmul
sbb
pop
je
mov
sub
push
inc
ss
movsb
sbb
add
fs
outsl
stos
std
and
xchg
mov
adc
test
cmp
push
mov
out
push
xchg
xchg
sbb
xchg
xorl
dec
adc
fwait
leave
pop
mov
popf
mov
add
in
dec
decb
cmpl
xchg
mov
sti
test
push
mov
push
lret
push
in
push
cli
adc
insl
mov
and
jmp
add
and
out
int
jbe
xor
add
ret
mov
data16
sbb
ret
aaa
lea
into
sti
std
jge
mov
loopne
cmp
ljmpw
into
mov
imul
push
push
adc
cmpsl
fs
and
lret
movb
psubq
dec
cmpsb
pop
ljmp
repz
xchg
dec
mov
in
xchg
adcb
loop
mov
or
test
cmpsb
pop
add
pop
push
pop
scas
mov
mov
mov
pop
cmovbe
mov
pop
sbb
icebp
orb
int3
jb
jge
int
dec
lret
ds
sub
xchg
jmp
mov
sub
das
add
mov
iret
btl
loop
fnstsw
daa
add
mov
mov
test
stos
xchg
shrl
pop
rep
lcall
hlt
int3
mov
fs
dec
loop
or
and
jl
lds
ss
dec
cmp
mov
cmp
sbb
pop
xchg
in
dec
xor
mov
xlat
fldcw
sbb
mov
cwtl
stos
aas
pop
jno
ss
fwait
or
shl
jbe
jno
fmulp
sbb
mov
insb
into
cmp
in
and
ret
mov
jmp
cmp
movsl
shrl
dec
sbb
sbb
negl
pop
sbb
and
sahf
dec
xlat
or
and
add
or
push
dec
imul
cmpsb
dec
out
xchg
testl
cmpsl
mov
jae
dec
xchg
push
test
ret
movsl
ja
mov
cmc
jb
pop
ljmp
dec
add
push
cmp
xchg
xor
dec
mov
shlb
es
inc
leave
jno,pt
jns
and
mov
push
pop
inc
repnz
push
inc
imulb
cmpsl
push
popa
das
fadds
test
xor
lret
xorb
xor
scas
scas
decl
mov
mov
sub
dec
mov
or
rcll
lods
sti
cmp
push
mov
and
sub
jmp
inc
dec
mov
imul
mov
mov
mov
aam
aad
out
ds
dec
icebp
fadds
cmp
xchg
cltd
hlt
mov
push
je
xor
xlat
pop
xlat
sbb
jbe
sub
lahf
daa
push
add
js
cs
loope
in
xchg
xchg
xchg
pop
push
cmpb
iret
sbb
xchg
fucom
leave
push
test
dec
out
sar
inc
push
pop
pop
or
mov
inc
xor
out
pop
mov
mov
in
and
add
dec
lea
stos
xlat
bound
add
adc
jb
mov
popf
popf
outsb
test
jge
out
sub
mov
mov
mov
mov
mov
xor
push
inc
jge
cmp
jno
or
mov
in
pop
xlat
lock
pop
jnp
or
lahf
inc
mov
sub
ficoms
sub
fisubl
and
lahf
mov
or
aam
mov
fidivs
pop
sti
cmp
push
cmpsl
insb
mov
incb
scas
mov
lods
js
int
add
out
add
cmp
imul
mov
sub
cmpsl
sbb
rcrb
or
lahf
jae
shrb
xchg
cmp
pop
shll
adc
out
add
jne
add
mov
add
mov
xor
push
test
lods
mov
arpl
adc
mov
insl
sub
fdivrs
pop
inc
mov
sbb
cmpsb
lea
add
pop
test
aaa
jns
inc
iret
sbb
cltd
adc
push
jmp
mov
ljmp
test
pop
jbe
adcl
xor
cld
roll
andb
pop
pushf
mov
ret
dec
mov
add
and
rcrl
xor
pop
ret
jge
inc
xchg
aad
fbld
cmc
icebp
pop
lret
cltd
movsb
dec
aam
add
loop
sarl
scas
inc
int
inc
mov
rol
and
shlb
cwtl
mov
test
and
scas
adc
fistps
dec
adcb
js
loope
sti
mov
or
fs
sbb
pop
mov
push
mov
jecxz
aad
rol
data16
sub
sbb
and
fisttpl
pop
rcl
and
lds
push
lods
int
pop
push
xor
xor
xchg
lcall
mov
shll
loopne
cmpsb
adc
stos
data16
pop
gs
inc
cmp
inc
in
xlat
lret
sbb
mov
adc
pop
inc
arpl
hlt
in
mov
test
rcr
das
lea
je
mov
sbb
add
or
cmp
xchg
aaa
in
jp
inc
sbb
in
inc
sub
roll
bound
push
sbb
dec
imul
mov
or
mov
jne
sbb
add
in
dec
xlat
xchg
dec
xor
stc
dec
lret
jno
stos
adc
cmp
xchg
incl
jbe
push
cmpsl
movsl
popa
cmp
faddp
inc
in
sub
cmc
inc
dec
or
mov
jl
lret
sub
cmc
js
xchg
jb
xchg
inc
adc
fmul
ret
icebp
dec
inc
cs
mov
fdivs
mov
mov
sbb
addb
loope
xchg
jl
mov
repz
cmp
lods
std
jp
xchg
dec
test
test
repz
ss
enter
mov
add
jp
into
sbb
scas
repnz
mov
js
mov
adc
lds
insb
add
mov
xchg
jnp
std
push
mov
shlb
cmc
dec
adc
je
adc
pop
and
ljmp
ret
arpl
aas
loopne
ja
mov
or
xlat
insl
pop
xchg
icebp
std
sub
xor
pop
jb
push
cmpb
push
jns
fs
orb
mov
push
mov
mov
jg
push
rcrb
movsl
mov
add
test
sbb
clc
push
sbb
push
pop
mov
lahf
push
mov
dec
popf
rorb
xchg
popa
lea
pop
jns
xchg
into
mov
lret
stos
daa
pop
xchg
shll
leave
out
outsl
sbb
sub
jae
dec
cmc
sbb
out
pop
adc
jae
cltd
dec
out
add
mov
adc
sub
cmc
xor
jne
test
push
mov
add
cmp
xor
daa
xor
mov
addr16
sbb
add
add
lea
jbe
and
decb
sbb
out
mov
adc
aas
test
push
fcmovu
daa
insl
xor
pop
add
hlt
sti
sbb
es
into
sbb
sub
js
dec
arpl
mov
stos
fidivrl
call
xorl
daa
adc
sub
out
mov
packssdw
add
push
xchg
mov
stc
mov
mov
clc
ret
insl
mov
lret
cmp
pop
jns
into
test
ret
aaa
xchg
rcr
jle
dec
add
mov
dec
mov
sti
jg
cmovle
or
cmpsb
out
aaa
out
test
loop
pop
test
icebp
dec
adc
sahf
ret
jecxz
cmpsb
jg
dec
insl
xchg
or
iret
insl
add
popf
lds
repz
sahf
sub
mov
pop
lds
push
adc
mov
jns
dec
add
dec
and
addr16
mov
aam
imul
push
sub
pop
jo
cmc
roll
ret
cmp
or
test
rolb
in
or
mov
xlat
and
xchg
in
aam
ret
or
ds
add
stos
ja
mov
add
mov
nop
push
mov
xchg
or
xchg
int3
or
shll
jo
das
xor
xchg
mov
shl
pushf
jmp
das
cwtl
and
test
pop
xchg
xor
aas
popa
into
sub
ret
sarl
mov
or
rcll
jmp
loop
pop
jecxz
and
les
xchg
and
cmpsl
push
jmp
dec
outsl
inc
insb
or
mov
nop
push
mov
or
jmp
ljmp
xchg
mov
adc
add
lock
mov
ret
popf
jmp
outsb
and
xchg
int3
aad
daa
nop
mov
lds
push
clc
push
jle
mov
adc
clc
xchg
or
xor
mov
jge
mov
pusha
or
repnz
mov
aas
dec
mov
pop
cmp
sub
fcos
add
sbb
adc
outsb
out
es
mov
cs
pusha
outsb
loopne
jp
je
cs
adc
cmc
xchg
in
clc
movsb
adc
lods
into
mov
in
inc
pop
sub
cmp
adc
data16
sub
test
and
push
mov
jne
push
nop
jp
in
and
subl
xchg
mov
and
out
xchg
fcmovnu
into
ss
std
hlt
lods
filds
or
andb
loopne
in
popf
xchg
fldt
jg
jnp
inc
mov
int
mov
push
add
jge
or
mov
imul
add
sub
cpuid
stos
cwtl
inc
and
jge
push
sti
adc
xchg
push
stc
testb
sub
lock
push
das
repz
jp,pn
sbb
imul
out
mov
mov
lahf
shll
fisubs
mov
fists
ss
scas
out
mov
mov
arpl
cmp
add
xor
cli
shrd
pop
xchg
outsb
mov
xor
addb
jg
add
cmp
dec
scas
sub
aad
sub
and
mov
xchg
mov
push
test
in
das
notl
pop
mov
xchg
push
mov
rcll
movsb
test
js
cmp
mov
jp
test
pop
jge,pt
lods
xor
outsl
mov
scas
sub
push
cmp
and
test
mov
mov
add
mov
leave
sbbb
xchg
inc
outsb
dec
push
cmpsl
int
cmpsl
dec
or
xchg
arpl
mov
test
mov
lods
insl
sub
dec
lods
in
ss
cwtl
and
roll
push
lea
jo
inc
push
cmp
sub
repnz
jp
adc
jno
pop
pop
lcall
stos
adcb
testb
sbb
dec
push
xor
in
cltd
push
adc
jecxz
xchg
inc
pusha
xchg
xchg
sahf
gs
or
scas
int
and
lahf
xchg
lret
pop
in
in
mov
fidivrl
inc
lods
jno
loop
and
ret
int
nop
test
imul
add
loope
shll
dec
test
pop
fstpl
and
stc
sbb
fsubs
or
hlt
dec
ret
add
lcall
cmpsb
mov
cmp
adc
in
bound
cmp
jne
mov
jnp
or
rcll
hlt
std
adc
movsl
inc
inc
stos
mov
push
dec
pushf
push
add
inc
dec
mov
xorl
mov
scas
sarb
lods
sub
insb
lret
sbb
or
xchg
lret
scas
push
mov
jecxz
fsts
lcall
xor
aam
cltd
or
or
nopl
jbe
pop
and
pop
loop
xchg
cwtl
push
mov
stc
aad
jo
or
jns
xchg
dec
mov
xor
xacquire
xor
out
add
add
sbb
jge
push
jle
cld
push
jmp
cmpsl
rcr
pop
cltd
xor
out
incl
pop
cs
arpl
lock
dec
cmp
mov
ljmp
inc
pusha
sti
iret
sbb
jno
jbe
cld
or
or
pop
jne
mov
mov
fcmovne
jo
sub
sub
aad
or
xor
ficoms
dec
push
shrl
lcall
sub
dec
outsb
mov
mov
jno
insl
sti
adc
cmpsl
sub
lock
bnd
in
mov
clc
fdivrl
cmp
xchg
pop
cs
lods
sbb
cmp
out
out
aad
sbb
pop
loopne
scas
sbb
pop
pusha
push
pusha
cmp
ss
flds
add
loope
push
outsb
pushw
fstps
out
xor
scas
pop
sahf
or
or
push
lcall
pop
rorb
mov
push
mov
or
xchg
loope
lds
arpl
cwtl
movsl
test
inc
cli
adc
and
test
shl
inc
pop
cmp
sbb
outsb
xor
mov
ret
outsb
cmpsb
shrl
or
ljmp
out
je
rorl
pop
inc
les
sub
incb
mov
data16
dec
aas
fldcw
sarb
xchg
mov
out
sbbb
adc
mov
inc
bound
sti
jmp
jbe
std
sbb
fdivp
sbb
mov
jbe
jno
fdivr
push
sbb
scas
dec
add
ret
mov
mov
outsl
cmc
jnp
and
or
inc
out
pop
xchg
pop
lds
aad
les
jmp
xor
pop
pop
sub
ja
xchg
add
addb
cmp
mov
add
sub
mov
mov
jnp
out
je
mov
shrb
jbe
int3
mov
lahf
mov
addb
out
cmpsl
jo
cmpb
idivb
mov
add
add
hlt
xchg
cltd
cltd
jp
sarb
push
push
xorb
into
ljmp
les
pop
inc
notb
fs
imull
and
push
notb
aam
push
sub
cs
popf
insl
mov
je
push
aad
push
call
gs
lcall
sahf
xchg
and
xchg
xchg
mov
lcall
addr16
jge
xchg
mov
pop
push
outsb
push
inc
mov
push
mov
cmp
outsb
movsb
jmp
and
movsb
and
fidivrs
push
popl
lahf
test
mov
aaa
adcl
dec
mov
shll
enter
mov
repnz
into
inc
sti
into
sbb
sub
sbb
pop
sarl
mov
enter
sub
ds
adc
mov
adcb
and
xor
aaa
out
cltd
sbb
jl
adc
jmp
outsb
cli
mov
ret
out
out
xor
popa
out
jge
add
add
fs
jns
hlt
add
inc
inc
je
adc
xchg
std
mov
enter
das
push
or
xor
stos
in
inc
mov
pop
loopne
xor
ja
incb
out
iret
iret
pusha
je
enter
xchg
jle
sbb
cmpsl
push
sbb
repnz
jae
mov
lret
xor
xchg
mov
jns
and
or
add
jge
sub
lret
imul
into
xor
lret
push
bound
xor
pushf
sbb
push
sbb
xor
cmc
pop
add
xchg
and
faddl
movsb
int
push
outsb
pop
cli
xlat
jne
int
sub
notl
pop
sbb
aad
add
add
pushf
push
inc
push
mov
cmp
fists
pop
cwtl
dec
int
or
out
addr16
inc
scas
sahf
and
mov
pop
sarl
scas
cwtl
pusha
pop
decl
in
cmp
push
cmp
loopne
es
rolb
or
mov
dec
je
xchg
or
pop
cs
fimuls
xchg
into
push
adc
ss
insl
lods
add
xchg
lret
hlt
jnp
and
or
out
jmp
adc
or
pop
push
cmp
arpl
mov
xchg
inc
mov
push
outsb
sub
pusha
int
ja
ja
mov
inc
outsb
adc
out
into
cwtl
xchg
test
dec
cmp
or
xchg
repnz
call
jns
push
sti
rol
xchg
or
sbb
popf
lods
sarl
sbb
int3
rcll
cmp
cmpsb
das
inc
jnp
pop
cli
imul
adc
and
push
add
pop
and
clc
out
imul
jb
or
test
cmp
scas
jge
or
stc
inc
xchg
rcrl
aas
ficoml
xchg
loope
xor
dec
adc
pop
pop
arpl
pop
xchg
dec
sub
inc
cmp
cmp
mov
mov
mov
fwait
out
dec
popa
jns
cld
icebp
sbb
sahf
push
mov
mov
out
mov
and
jb
push
mov
lea
les
pop
adc
push
pop
mov
and
cwtl
inc
jg
xlat
cli
mov
push
repz
push
push
insl
mov
sbb
pushf
dec
cwtl
mov
lods
aaa
jae
popf
into
fildl
cmpsl
add
loopne
lds
ja
mov
hlt
out
push
and
lods
sub
pop
daa
pushf
out
repz
fdivrl
push
fisttps
dec
inc
mov
popf
pushf
lea
xchg
jo
sbb
sarl
addl
js
scas
mov
jg
sti
inc
imul
jmp
lods
mov
jg
ret
ljmp
sub
shr
incb
mov
jmp
xor
jo
xorl
sarl
xchg
xor
or
aam
push
inc
sub
add
dec
xor
les
push
adc
dec
int
jl
leave
mov
jb
ret
cmp
dec
jle
insb
mov
xchg
scas
insl
rol
fwait
mov
loop
loopne
adcl
mov
mov
popa
jno
lret
in
mov
xchg
mov
fcoms
jne
xor
das
xor
in
mov
and
ds
and
loope
jl
cmp
sbb
cmp
in
addr16
dec
test
les
xlat
xchg
fwait
sbb
adc
imul
mov
adc
lahf
pushf
int
push
cmp
test
leave
xchg
int3
adcl
rcrb
push
ja
loopne
sbb
std
mov
clc
cmc
cmp
or
xor
xor
mov
aaa
xor
addr16
xchg
add
xchg
sbb
add
jge
jge
je
push
repnz
jle
movsb
mov
cmc
inc
shrb
imul
fstpt
mov
in
jge
or
rolb
das
mov
data16
in
add
jae
imul
jno
inc
mov
jo
xor
xor
xchg
fists
pop
push
rcll
cltd
shlb
bound
push
pop
jg
loope
popa
xchg
dec
repz
stos
in
or
jne
push
mov
push
lds
xor
shlb
xor
fsubrs
jns
inc
sub
pop
mov
mov
ljmp
add
add
pop
outsl
mov
pushf
fbstp
int
sbb
movsb
aam
inc
gs
or
or
das
nop
inc
and
mov
dec
jge
cmp
dec
xor
push
and
leave
in
mov
sub
jae
push
dec
dec
ret
int
mov
pop
mov
movsb
jno
je
scas
push
popf
xor
push
dec
inc
sti
dec
mov
loope
adc
inc
cmp
ss
add
push
outsl
xchg
lret
int3
scas
inc
cmp
jno
faddp
lods
aad
mov
mov
fldenv
push
fnstenv
xor
in
pop
adc
in
out
xchg
or
jbe
fwait
ret
addr16
and
add
jecxz
call
and
xchg
int3
mov
not
repz
jno
es
int
iret
sbb
mov
dec
imul
xchg
xor
pusha
lock
inc
cmpsl
xchg
inc
jae
pop
inc
sete
ror
icebp
push
and
cmp
jo
aaa
in
cmp
test
jl
pop
push
mov
sarl
add
mov
cmp
xchg
das
adc
mov
cld
pop
outsb
xor
cmp
mov
mov
push
movl
add
stos
outsl
jge
or
xchg
loope
inc
mov
mov
cmp
iret
icebp
mov
push
aam
test
jnp
enter
mov
into
xchg
xor
sahf
ffree
ds
es
jae
idivl
or
mov
testl
mov
xchg
add
xor
lods
inc
jns
jbe
inc
and
push
test
jae
cmp
ret
lods
test
xlat
and
arpl
ja
aas
mov
push
jg
sub
loop
inc
fimuls
or
push
cli
and
mov
inc
mov
mov
dec
int
pop
rcll
cwtl
iret
inc
sub
cmp
sub
ret
mov
jae
mov
mov
or
jo
cmp
in
and
outsb
sarl
stos
push
pusha
cmp
addr16
push
mov
push
mov
mov
sbb
dec
xchg
fwait
jns
dec
pop
pop
add
bound
lods
ret
inc
orl
pop
xchg
cltd
pop
int
in
inc
in
cmp
test
fstpt
sbb
fsub
inc
ljmp
pop
enter
add
mov
scas
clc
adc
sahf
test
inc
dec
xchg
and
and
push
push
fdivrs
cmp
lea
repz
add
sbb
lods
push
xor
push
xlat
or
fldt
dec
or
scas
or
or
sbb
add
scas
leave
add
call
fisubl
arpl
in
rcrl
push
push
mov
mov
mov
aam
mov
and
add
mov
add
fnstcw
outsl
mov
sbb
cwtl
push
mov
xor
outsb
loope
out
or
xor
inc
cmc
inc
mov
cli
scas
add
test
cmp
out
dec
lds
bswap
ss
xlat
in
in
pop
ds
mov
mov
add
inc
add
dec
mov
pop
loope
jg
out
syscall
hlt
mov
fisubl
fdivl
and
insb
sbb
xchg
xchg
pop
rorl
sub
fidivrl
bswap
dec
xchg
push
add
mov
dec
pop
or
inc
pusha
jo
les
mov
inc
ljmp
mov
adc
or
jb
cwtl
mov
loope
out
out
or
push
or
ror
stos
push
add
int
clc
outsl
in
shrl
adc
testl
jmp
fwait
mov
push
int
adc
pop
sets
push
nop
sbb
mov
push
adc
xchg
je
ret
xchg
in
aaa
mov
jno
loopne
jnp
cld
jp
mov
mov
pop
cli
inc
sti
aaa
pop
ret
push
add
out
pop
jo
cmp
fildl
jmp
lret
in
imul
pusha
fidivl
loope
and
or
incb
and
lret
enter
mov
sahf
inc
rcll
sti
mov
push
xchg
sarb
incb
outsl
jbe
dec
aad
in
popf
push
xchg
test
sub
jge
mov
std
xlat
stos
sub
iret
xchg
jp,pn
xor
in
xor
xlat
sub
inc
sbb
mov
pop
test
gs
leave
inc
inc
shlb
cmp
mov
lods
xor
jne
es
andb
xor
int3
stos
adc
fcmovnbe
movsb
dec
leave
and
fmuls
les
jg
ret
push
or
mov
popf
inc
cmp
mov
push
movsl
pop
popf
outsb
test
or
lret
jo
mov
fistl
jns
xchg
add
jle
mov
outsb
and
rcll
loope
mov
sub
jnp
aaa
test
inc
add
xchg
sbb
rorl
fisttpll
push
lret
mov
lahf
in
out
xchg
sti
push
pushf
int3
jbe
in
dec
outsb
stos
sbb
push
mov
int3
pop
jbe
pop
push
lods
orb
clc
add
add
add
cmpsb
push
xchg
mov
imul
nop
das
jge
movsb
int
fs
or
cmp
adc
shl
or
mov
inc
mov
push
or
jnp
mov
or
pop
mov
adc
or
xor
mov
mov
or
inc
test
fisubl
mov
adc
adc
sbb
loopne
aad
jnp
xor
push
adc
imul
pop
adc
push
fwait
dec
push
mov
jns
sbb
gs
xor
aad
fucomi
or
jmp
push
xlat
mov
je
addl
xor
jnp
inc
es
mov
pop
mov
push
shr
add
push
mov
sarl
mov
testl
mov
mov
mov
add
mov
lea
adc
fnstsw
mov
xor
and
sub
adc
lahf
test
jo
cmpsl
decb
adc
push
mov
mov
add
scas
push
sub
movsl
mov
dec
fnstenv
or
loope,pn
add
push
out
jle
mov
xchg
shlb
pop
dec
ret
pop
and
push
aas
jecxz
cmc
enter
lds
inc
mov
int
dec
mov
pusha
mov
pop
push
out
mov
stos
stos
rcrl
sub
mov
add
inc
lret
pushf
mov
inc
mov
dec
stc
mov
in
jge
lcall
push
or
sarb
mov
leave
mov
cli
imulb
push
jae
jne
fistps
pushf
nop
push
and
arpl
sub
aad
mov
or
or
mov
mov
add
add
in
push
hlt
mov
sbb
cmp
inc
cmp
and
sbb
rcrl
cs
cmpb
mov
or
ja
pop
scas
xchg
and
sub
out
adc
imul
in
add
push
pop
pop
pop
mov
movsb
test
jbe
sbb
in
mov
in
int3
subl
add
shlw
mov
cmp
ja
test
nop
or
bswap
out
xchg
scas
data16
aam
imul
add
mov
push
outsb
int3
inc
mov
cmpsb
and
xor
add
mov
stos
es
hlt
in
dec
jo
inc
mov
xor
xor
sub
mov
insl
jge
sahf
repnz
push
les
sub
les
loopne
lahf
add
test
fistl
ds
xchg
jnp
into
push
add
mov
mov
popa
aaa
pop
mov
lcall
mov
add
pop
dec
les
jp
inc
inc
cmp
sub
subb
ja
push
add
icebp
ret
aad
mov
inc
les
mov
cld
dec
roll
popf
lock
and
lcall
repnz
jmp
mov
jbe
mov
add
ret
out
cmp
lcall
mov
sti
lea
push
jge
popf
addr16
cmp
or
in
xor
mov
adc
scas
pusha
sti
ret
pop
adc
ljmp
in
out
inc
adc
jb
cmp
adc
add
sbb
mov
pop
push
cmc
xchg
push
push
jne
xchg
xor
loopne
insb
cmc
push
test
insb
int3
xchg
push
push
rorb
lea
xor
push
inc
lahf
add
sbbl
enter
aad
jl
and
push
dec
mov
jo
sub
fwait
jl
bnd
or
cld
jnp
in
cmpsb
mov
and
and
int
dec
inc
fcmovnu
mov
outsl
mov
cmp
jecxz
ror
push
push
lahf
mov
xchg
xor
inc
adc
add
dec
push
inc
fstl
rcrb
push
xchg
jno
cmp
push
fistpll
ret
and
pusha
pop
adc
lods
or
std
mov
fst
xchg
mov
sahf
pop
sub
pop
aaa
pop
mov
je
lcall
rcr
lds
xor
vmread
pop
aad
dec
test
cmp
xchg
inc
lea
sbb
ret
popa
mov
push
xor
into
lcall
fistps
test
sbb
and
cmp
out
mov
cwtl
push
push
and
aad
int
je
push
repnz
xor
fwait
shlb
adc
cmp
movsbl
or
sub
push
sti
shrl
ja
push
sahf
int
mov
add
and
scas
lret
add
ja
pop
mov
ljmp
lcall
push
sub
or
jmp
or
sub
mov
mov
aam
xchg
icebp
xlat
jae
cltd
inc
imul
mov
pop
stos
insl
icebp
add
jo
rol
outsb
mov
cmp
popf
xchg
lods
fisttps
pop
rorl
ds
test
push
jmp
clc
lods
sub
imul
mov
cmc
lock
fistl
push
sub
cmpsl
test
into
insl
ret
insl
out
mov
dec
out
in
daa
faddl
adc
push
int3
cmc
shll
fldcw
rcrb
sub
jns
and
rorb
fildl
add
add
movsb
jg
out
or
mov
mov
into
hlt
int3
jge
out
mov
popf
ljmp
jne
and
int3
push
sub
or
into
cli
xchg
mov
push
and
add
mov
test
inc
dec
sbb
fcmove
andl
stc
xchg
sub
or
aaa
mov
sub
push
push
sarb
addb
mov
imul
fwait
movsb
repnz
sbb
aas
stos
shlb
jb
xor
add
cs
sbb
mov
jg
inc
cmp
out
jle
shrl
loope
std
pop
mov
pop
sub
fwait
jmp
jb
shr
mov
insl
adc
int
sbb
mov
mov
scas
xchg
mov
daa
or
sub
fcomip
test
add
mov
add
into
movlps
aas
fwait
and
stos
movsl
aad
repz
inc
fidivs
pop
add
and
jb
pushf
push
std
shll
jo
gs
jle
js
rcrb
js
and
mov
les
push
stc
jo
jno
ds
icebp
movsb
lret
fwait
jge
sbb
icebp
inc
pop
jnp
mov
add
add
hlt
insl
cmp
mov
jnp
popf
sbb
dec
and
arpl
cld
or
dec
pop
int3
mov
data16
xor
daa
jmp
mov
rcll
mov
insl
mov
push
loope
jo
stos
inc
pop
cmp
insb
xchg
xlat
movsb
pop
testb
mov
outsl
mov
sbb
push
push
mov
fmuls
shll
sbb
imul
xchg
shll
cmp
and
loope
pop
into
loopne
sbb
jae
sbb
and
scas
cmp
and
inc
and
mov
das
pop
pushf
push
test
pop
push
cmpsl
mov
cmp
out
arpl
sbb
inc
shrl
push
adc
fmuls
cmpsb
cs
daa
inc
push
pop
bound
insl
mov
mov
loopne
insl
xor
pop
shlb
mov
dec
or
xlat
rcrb
mov
xchg
sbb
cltd
mov
scas
push
xchg
test
cmp
pop
cmp
mov
mov
test
cmpsb
and
inc
pop
xor
xchg
in
test
sarb
loop
jle
inc
cmp
xor
addr16
mov
and
xor
in
jne
fnstcw
or
ds
cltd
mov
push
cmpsl
out
pop
or
inc
cmpsl
test
pop
cmpsb
in
lods
sub
pop
stc
lret
lods
jecxz
push
sarb
jge
pop
test
add
aam
and
sbb
loopne
pop
imul
bound
mov
adc
pop
bound
cmp
add
aaa
xor
push
jbe
push
adc
sub
push
sub
lret
push
jo
test
xchg
mov
int3
xor
xchg
jl
pop
cmp
rorl
push
adc
xchg
ss
gs
pop
cmc
cmp
sti
dec
xchg
in
shr
adc
mov
jmp
int3
lret
test
sti
pop
enter
decb
xchg
scas
xor
jb
mov
gs
sbb
mov
inc
or
in
dec
ret
push
cmpsl
dec
sbb
fcompl
mov
lods
dec
xor
add
aad
lock
dec
jl
cmpsl
and
mov
add
mov
or
mov
orb
and
adc
negb
movsl
dec
movsb
jno
and
add
push
and
pushf
sbb
jbe
xchg
and
push
orb
in
pop
popf
jmp
outsb
push
jp
aas
jge
mov
mov
repz
test
cli
mov
push
rcl
mov
sbb
and
ljmp
dec
jge
popa
cmp
or
sub
pop
add
adc
popl
sbb
pop
xchg
popl
xor
sub
xchg
leave
stc
dec
xchg
leave
or
inc
sub
pop
dec
mov
test
pop
mov
aad
movsbl
xchg
xchg
mov
cmp
fsubl
xlat
xchg
sub
xor
clc
lcall
shll
cmp
gs
inc
shrl
xlat
pop
scas
xchg
mov
sbb
pop
lcall
shl
test
pop
in
jnp
in
cmc
or
aam
enter
leave
jae
stos
insl
sub
jmp
jp
test
sub
sub
daa
xchg
dec
movsl
push
adc
out
fmul
and
lret
mov
rolb
sbb
pop
push
stos
sbb
das
test
cmp
add
vpcomb
and
push
xor
mov
test
dec
and
mov
xchg
bound
sub
pusha
xor
inc
jle
or
loope
roll
push
and
pop
push
add
fsubr
test
lods
push
lods
inc
ret
loop
sahf
loope
in
mov
push
shll
lahf
ds
addl
or
adc
mov
dec
jl
adc
outsb
xchg
jno
jp
dec
sahf
mov
repz
ds
out
add
lea
in
mov
dec
dec
jae
cmpb
pop
sub
mov
fstl
jp
or
inc
dec
and
inc
adc
sub
xchg
jb
lcall
xchg
add
fstpl
or
insb
aam
testl
mov
pop
ja,pn
aaa
std
add
jp
push
pop
or
adc
fmulp
shll
test
push
sarb
mov
xor
mov
xor
adc
jp
add
cmc
mov
ret
cmp
and
imul
clc
mov
mov
cld
adc
or
mov
add
mov
fbld
lret
add
pop
lahf
inc
add
sbb
jae
mov
jge
clc
mov
cmp
fwait
int
add
in
mov
or
sub
xchg
jmp
nop
outsb
cmp
jns
mov
push
sub
jae
inc
and
rolb
rcrl
adc
sub
int3
gs
dec
sar
pop
aaa
call
rcl
cmp
lods
push
aad
insb
xchg
pop
stos
mov
or
test
add
cmp
mov
xchg
arpl
mov
dec
mov
dec
pusha
push
mov
shlb
stos
xor
in
sbb
mov
loopne
xchg
add
push
testb
add
stos
xor
insl
pop
fistpll
inc
std
popf
out
test
cmpsl
outsl
std
xchg
inc
aad
ss
mov
mov
or
sahf
pop
push
xor
pop
mov
mov
fcmovbe
das
mov
or
pushf
notl
fstpt
shll
daa
jno
push
dec
mov
mov
popa
mov
mov
dec
xchg
xor
pushf
push
and
shll
mov
or
in
mov
push
and
inc
and
int3
add
sar
xchg
fs
fmuls
mov
sub
imulb
enter
and
or
lds
push
mov
jmp
loopne
mov
and
lret
movsl
test
dec
popf
cmp
jns
daa
jb
sbb
mov
rcl
std
mov
insl
adc
push
xor
subb
and
stos
bound
rclb
jecxz
leave
xchg
add
shlb
lahf
clc
pushf
dec
or
rclb
or
add
loope
push
lods
les
fsubp
out
cs
dec
into
aaa
xchg
push
jno
pop
cmp
push
cmc
dec
xchg
jb
popf
out
in
mov
push
lea
push
xchg
std
fs
push
stc
js
sub
cli
adcb
mov
frstor
pop
and
xchg
lods
push
in
dec
jb
adc
add
adc
lahf
mov
outsb
cmpsw
jecxz
popa
jo
inc
cmp
fistpll
dec
adc
xchg
mov
fbld
fstpt
add
jne
push
inc
mov
repz
and
inc
xor
sub
sbb
mov
push
jge
cmpsl
mov
push
mov
jno
pop
mov
xor
fildll
neg
jg
jmp
arpl
inc
adc
or
adc
pop
loopne
lea
adc
pop
jle
mov
cmp
lcall
loop
scas
pop
stc
aas
inc
test
sub
ret
jbe
ror
or
adc
cmp
dec
pxor
repz
xchg
adc
cs
ror
adc
mov
xor
test
shrb
xchg
or
mov
jns
jnp
arpl
add
add
xchg
js
cmp
sub
loopne
or
adc
inc
sub
cmp
je
push
cmp
scas
adcb
or
adc
xchg
repz
testl
sub
push
mov
adc
test
cli
push
mov
inc
mov
popf
lret
sbb
push
sub
sbb
and
setge
lods
mov
lock
mov
mov
xor
dec
push
sub
cmp
testl
movsl
imul
xchg
out
xchg
fwait
dec
sahf
std
aad
loope
xchg
ret
xor
pop
inc
dec
cmpsb
adc
daa
cld
lret
pop
rol
sub
mov
jnp
test
iret
xor
mov
leave
inc
cmp
sarl
fnstenv
xor
lods
aad
call
add
inc
xchg
fucom
xor
sub
mov
arpl
mov
jge
mov
fs
mov
dec
pop
sub
call
mov
sarl
test
push
sub
push
stos
in
cmp
add
repz
lcall
shl
cmp
mov
fadds
lods
sbbb
jns
pushf
insb
and
jno
cwtl
in
push
addr16
mov
int
push
dec
fnstcw
fldl
ljmp
mov
cmpsb
int3
scas
cmpsb
ljmp
push
adc
icebp
test
xor
mov
test
pop
lret
sbb
test
inc
test
xchg
add
mov
test
in
push
jmp
movsl
or
xor
jecxz
fcomps
adcl
jl
adc
inc
fldt
xorl
mov
movsl
mov
lods
or
mov
sub
ret
add
cltd
push
cmp
sbb
add
xchg
imul
mov
adc
xchg
mov
mov
sbb
inc
mov
cmp
lds
dec
mov
sbb
mov
mov
icebp
sbb
test
mov
stos
push
es
jp
lods
in
xchg
lods
and
inc
int
mov
outsb
mov
int3
outsl
lock
add
movsb
ror
rcll
xor
dec
cmovnp
cmpsb
push
std
sbb
adc
inc
cmp
aad
pop
xchg
cmp
push
out
xor
hlt
mov
dec
add
cli
cmc
std
push
xchg
rcll
sbb
into
fs
push
or
rcrb
xchg
and
mov
lahf
fnstcw
rol
push
iret
sarl
inc
xlat
adc
push
push
jno
out
ret
mov
mov
aaa
outsl
mov
ds
out
inc
mov
psllq
movsb
and
xchg
cld
cmp
iret
xchg
shrl
mov
xchg
fdivs
cmpsb
insl
icebp
ja
jae
gs
lahf
push
mov
and
fdivrl
pushf
mov
or
or
push
mov
fwait
repz
hlt
and
xor
jle
sub
xchg
cmp
mov
enter
inc
aaa
xor
jo
int3
fwait
push
xchg
popa
xorl
adc
lods
int3
imul
xchg
cmp
pop
in
mov
enter
add
dec
or
adc
mov
and
add
or
pop
sbb
mov
mov
into
sub
inc
jns
or
loopne
out
mov
xor
dec
adc
enter
and
das
xor
aad
imul
cmpsb
stos
mov
jbe
or
leave
cmp
lahf
out
orb
adcl
pop
or
addb
js
or
pop
add
xorl
pop
movsl
mov
cmpsl
repz
jge
icebp
pop
int
mov
ret
inc
mov
sbb
or
arpl
aad
xchg
enter
xchg
dec
insl
sbb
jbe
adc
pop
movsb
stc
pop
or
inc
cmp
sub
outsb
pop
sti
lods
mov
test
lret
imul
xchg
mov
aad
xchg
gs
and
sbb
mov
in
cmpsl
shl
nop
dec
xor
xor
jg
xchg
cmp
mov
inc
adc
xchg
xchg
das
into
mov
outsb
out
das
pop
push
mov
cmpsb
jae
popa
push
or
adcl
aam
xor
pop
xchg
ficompl
mov
push
cld
lock
int
mov
mull
mov
add
cwtl
movsl
ja
or
jecxz
fnstcw
cli
inc
jae
xlat
cld
outsl
adc
push
mov
divl
jmp
push
xor
aad
test
jmp
data16
push
paddd
mov
xor
stos
das
sub
dec
scas
or
mov
cmp
ds
fisttpl
movb
cmc
scas
xchg
repz
test
out
sbb
out
or
int3
or
test
and
pop
fs
ret
and
outsb
cmp
lds
adc
les
mov
loopne
jmp
sub
pop
sar
dec
and
cltd
pop
mov
mov
add
inc
adc
cmp
xchg
xchg
add
daa
jbe
jo
arpl
lods
sbb
and
insb
aam
xchg
add
mov
mov
sbb
xor
pop
aad
mov
push
mov
cmp
jb
push
adc
sub
pop
call
and
and
icebp
inc
cwtl
xchg
add
pop
in
lret
or
pop
mov
lods
test
mov
clc
cli
lods
repnz
cmc
sbb
nop
test
sbb
pop
sahf
ljmp
scas
pop
jl
mov
sti
ljmp
out
loop
sahf
ja
xor
addb
mov
test
es
add
sbb
push
cmpsb
arpl
rolb
push
movsl
nop
push
aad
sub
enter
je
fcoms
push
adc
addl
ljmp
int3
out
jle
in
leave
jbe
or
mov
and
js
sarl
lcall
push
lods
sahf
jmp
xlat
test
cmp
ljmp
cld
stos
xorl
addr16
cmp
scas
cmc
test
out
inc
jge
adc
jne
fidivl
or
xor
push
insb
test
add
mov
addb
in
loopne
jmp
daa
or
jnp
loopne
inc
rcr
in
je
stos
push
iret
ror
or
jae
ds
into
mov
shll
pop
rcrl
and
inc
push
lods
and
das
jns
inc
push
xor
jmp
rclb
sarb
popf
popa
frstor
mov
out
xchg
sub
and
sub
stc
clc
in
rcrb
mov
xchg
inc
aam
and
stc
mov
insl
mov
cmpsb
fs
cmp
inc
push
outsb
push
mov
orb
out
push
ds
cmp
in
xchg
js
or
mov
xor
jnp
aas
or
inc
mov
or
jb
xchg
ret
pop
iret
inc
adc
nopl
mov
incb
xchg
sbb
mov
mov
lcall
mov
xchg
jo
add
jge
pusha
outsl
inc
leave
cmp
lods
mov
push
das
iret
push
out
pop
out
xchg
sahf
loop
and
icebp
icebp
push
mov
sbb
test
lds
jne
pop
insb
pop
lahf
cmpsl
out
call
sub
add
mov
out
rclb
mov
in
add
stos
add
adc
jb
jecxz
adc
or
or
aam
fildll
inc
cmp
inc
mov
sbb
aad
jne
aas
mov
std
fs
mov
jnp
subl
iret
xchg
mov
mov
sub
loope
pop
xchg
icebp
push
mov
stos
stos
idivb
popf
mulb
shrl
or
jne
fldl
iret
add
ret
shll
popa
and
push
cmpsl
loop
mov
into
imul
mov
outsb
mov
jle
push
sbb
pop
lods
and
mov
lret
adc
inc
out
xchg
mov
mov
in
mov
jne
sbb
and
lret
sbb
adc
popf
or
xchg
xlat
cmp
test
push
adc
outsl
lea
xchg
test
cmc
in
and
rorl
pop
push
xchg
push
push
pop
loop
adc
hlt
sbb
xchg
mov
shl
nop
in
push
sahf
and
adc
insb
outsl
dec
aam
xchg
mov
xchg
pop
lds
mov
push
mov
fwait
incb
lea
test
xchg
sub
aam
cwtl
dec
or
dec
mov
roll
js
movsl
orl
aam
mov
mov
adc
push
add
mov
dec
movsl
test
sbb
adc
aad
test
ja
jbe
test
fisubrl
push
ret
je
adc
adc
dec
rclb
lock
push
sbb
inc
bound
cmp
lret
xor
pop
sbb
jle
negl
rcrl
data16
sub
dec
movsb
fidivl
add
cmp
inc
or
jg
int3
push
inc
dec
pop
dec
push
xchg
cmpsb
gs
add
js
mov
hlt
add
test
mov
mov
data16
es
add
or
pop
mov
adc
leave
scas
xor
xchg
xor
inc
sbb
icebp
inc
insl
imul
adc
and
ljmp
push
div
lea
push
popa
mov
pop
sub
sub
adc
xor
and
faddp
lods
lods
js
sbb
xchg
loopne
ss
mov
movsl
fcoms
js
ljmp
inc
mov
add
pop
int3
xchg
mov
mov
loop
sub
xchg
mov
and
mov
xchg
das
or
mov
jp
dec
adc
pop
jb
je
mov
inc
mov
jnp
cmp
fsts
sarb
stos
inc
push
push
xor
out
les
shrb
pop
jmp
mov
inc
adc
mov
add
int
icebp
cmc
shlb
lahf
cmp
rorl
inc
pushf
cli
pushf
lds
inc
icebp
pop
dec
outsb
mov
xchg
imul
test
push
pop
ret
xchg
jae
lock
xchg
push
dec
ret
call
scas
jns
jne
xchg
fnstsw
imul
in
int3
adc
or
add
add
and
mov
movsb
xchg
sbbl
inc
dec
stos
int3
xlat
pop
add
mov
es
sbb
and
jb
lds
mov
xchg
lods
dec
lcall
adc
push
loope
jb
mov
xor
aam
push
mov
xor
push
das
jl
jecxz
shl
outsl
rol
xchg
movsl
rolb
mov
insl
xor
mov
jp
shll
cltd
shl
cmpsb
mov
pop
push
push
pop
aaa
sub
mov
int
outsl
mov
add
xchg
testb
sbb
aaa
stos
icebp
xor
fs
inc
cmp
mov
xor
or
jge
jge
xor
or
call
push
mov
push
jnp
in
sbb
leave
xor
sbb
idiv
loop
xchg
mov
arpl
push
adc
jbe
out
stos
or
lcall
ss
inc
mov
cmp
dec
add
mov
mov
in
stos
mov
mov
cmpsb
outsb
sbb
jp
out
sbb
stos
cmp
aam
xor
add
mov
in
xchg
sub
dec
sbb
movsl
xor
lahf
stos
maskmovq
negl
mov
jo
adc
cmp
sahf
mov
mov
xchg
test
in
sub
addr16
jmp
repz
iret
dec
test
inc
clc
outsb
or
aam
int
pop
leave
inc
loope
inc
pop
jbe
push
cmp
mov
inc
xlat
mov
adc
pop
lods
addr16
ror
or
aad
push
sahf
push
test
sub
mov
arpl
mov
xchg
cmp
xor
add
add
iret
push
les
imul
lret
sbbb
in
xchg
fs
and
mov
lret
push
mov
xchg
ret
xchg
sbb
mov
insb
dec
adc
mov
sub
inc
subl
insl
sahf
add
arpl
pushf
mov
fadds
lcall
mov
and
test
out
mov
nop
inc
cmpsb
jo
out
fisttpll
out
mov
subb
adc
iret
or
sub
inc
push
outsb
repnz
cmp
aad
lods
jp
and
xchg
int3
adc
push
fistpl
pop
in
dec
pusha
xchg
in
mov
dec
push
sbb
lock
sub
int
dec
mov
mov
adc
outsb
test
inc
and
in
outsb
negb
or
mov
mov
sbb
imul
mov
add
rol
fs
aad
out
movlps
sbb
loopne
adc
ret
sub
sbbb
mov
push
adc
fcomps
int
push
cmp
dec
mov
pop
dec
xchg
inc
and
int
out
dec
decb
push
repz
enter
push
lahf
dec
popa
bnd
jae
inc
out
arpl
pop
jge
cmp
ljmp
roll
mov
inc
cmp
push
mov
push
js
xorl
adc
aad
int3
pop
iret
mov
frstpm(287
xor
adc
in
shll
and
dec
stos
aas
and
sub
jmp
cmp
aam
ja
scas
pop
dec
push
hlt
pushf
inc
xlat
cltd
out
and
popf
mov
sahf
out
scas
mov
xchg
test
mov
add
pushf
sbb
imul
or
mov
loope,pn
jp
fmuls
inc
ret
mov
pop
fdivrl
cmpsb
iret
dec
mov
jbe
adc
lock
loopne
aad
lcall
mov
popa
jbe
in
fwait
in
pop
adc
add
push
sahf
loope
aam
sbb
call
ss
push
nop
scas
cmp
movsb
adc
jmp
into
dec
cld
mov
sti
mov
movsl
scas
mov
add
pop
fsub
xlat
cmpsb
add
push
xlat
xlat
mov
cmpl
lods
inc
mov
gs
sbb
aad
cmpsl
iret
adc
lea
sbb
push
mov
loop
stc
mov
mov
jae
leave
add
in
push
add
jg
popa
cmp
leave
mov
popf
pop
adc
mov
fnsave
push
dec
mov
pop
or
cmp
sbb
and
sbb
outsl
stos
loop
or
jno
mov
fimull
xchg
cli
push
outsb
sub
mov
lret
add
mov
jnp
lock
sarb
lea
scas
cmp
cmp
rorl
xchg
push
roll
ljmp
shr
popf
xor
mov
ret
sub
sahf
add
sub
stc
stos
xchg
je
cmpl
js
push
mov
jb
test
sub
cmp
fstl
test
cmpsl
cmp
in
push
mov
cmp
xchg
push
ret
mov
sbb
jg
inc
pop
cltd
sub
insb
mov
cmp
mov
inc
aad
je
lret
push
popf
add
push
js
and
add
add
movsl
or
addr16
mov
dec
fdivrl
pop
cmpsb
and
ret
xchg
out
lock
and
mov
jno
mov
pop
testl
aas
iret
mov
xor
ret
adc
push
sbb
scas
clc
inc
aam
push
test
cmp
add
ja
ret
enter
xchg
ret
sahf
xorb
push
adcl
test
push
rorl
insl
xchg
fwait
push
in
add
repz
daa
inc
xchg
cld
loop
in
lods
imul
out
leave
shlb
imul
inc
loop
lahf
pop
push
arpl
dec
ud2
ret
shll
inc
add
stos
movsb
inc
repnz
ss
xchg
add
fcmovne
push
test
mov
pop
cld
sbb
mov
pop
cld
dec
pop
hlt
cmpsb
cltd
adc
sbb
adc
int3
jg
lods
lcall
mov
clc
stc
cmp
adc
lahf
js
lock
mov
jp
inc
mov
orl
imul
fildll
rdtsc
add
roll
addr16
jle
pop
xchg
dec
retw
lds
or
pop
or
xor
cli
rcrb
mov
or
cmpl
and
pusha
outsl
aaa
lret
xchg
stos
cmpsl
xchg
jge
mov
rol
push
aas
and
pop
mov
pop
adc
xchg
sahf
sahf
pop
cwtl
jmp
mov
mov
es
fistps
xchg
sahf
cmp
xor
shlb
loope
dec
shr
mov
popf
dec
cs
add
aas
outsl
mov
imul
lods
dec
insb
add
addr16
xchg
sbb
pop
push
cmc
sbb
push
push
test
jno
stc
popf
scas
int3
mov
jp
xor
or
push
or
shr
jnp
adc
fisttpll
adc
mov
outsb
inc
jae
les
and
xchg
mov
loopne
fs
and
lahf
je
cmp
leave
cmp
jmp
dec
dec
mov
push
cmc
test
push
ret
lahf
adc
jnp
adc
push
into
int3
jnp
push
movsl
idivb
cmp
dec
shll
sbb
je
mov
mov
lods
jmp
insb
jg
cmp
mov
mov
lcall
test
nop
sbb
pop
int
int3
lock
inc
ljmp
xor
sub
ja
add
and
imul
jno
inc
dec
pop
and
es
cmp
test
mov
sti
pusha
mov
mov
mov
push
fldl
mov
sbb
inc
mov
mov
dec
dec
inc
movsl
push
jae
dec
arpl
dec
fmul
loope
movsb
scas
mov
lea
xlat
inc
cmpsl
inc
pop
call
in
push
push
xchg
daa
insl
mov
incb
pop
mov
jo
cmpsb
enter
insl
mov
cmpsl
in
js
xor
dec
loop
xor
ss
xor
into
fwait
pop
addr16
jo
jmp
filds
pop
xchg
repnz
jo
cmp
arpl
xchg
lret
xor
jecxz
adc
pop
jmp
int
ljmp
js
and
gs
inc
sbb
xchg
pusha
add
sub
push
test
hlt
push
push
aad
imul
inc
pop
cmp
in
add
in
fwait
movsl
mov
xchg
mov
out
inc
add
or
xor
aad
fildl
xchg
xchg
lods
push
adc
stos
insl
movsl
fcomps
sbb
and
cli
pop
in
push
mov
je
dec
clc
mov
pusha
or
add
mov
cmp
jmp
lret
fs
or
push
popa
push
mov
mov
lds
out
or
push
into
fdiv
shlb
adc
mov
test
fdivrs
sbb
adc
mov
inc
sub
adc
aad
inc
cltd
imul
mov
inc
pop
jo
repz
frstor
pop
push
xchg
in
cld
adcl
mov
adc
cmp
or
data16
and
test
aam
aas
mov
cmp
lret
push
mov
sti
jl
enter
xchg
mov
in
in
push
add
dec
jg
fmulp
imul
push
sar
sahf
mov
sub
or
ficomps
or
push
add
sub
inc
into
mov
pop
xchg
dec
jns
add
xorb
add
jbe
sbb
in
or
mov
outsl
dec
int
adc
mov
push
fisubrl
repnz
nop
ffree
pop
fstpt
test
mov
sub
stos
xchg
mov
mov
ret
mov
pop
add
int
lods
rorl
icebp
imul
cmp
je
js
int
std
cmc
hlt
into
enter
xchg
call
jnp
out
lods
jne
sbb
pop
movsb
aad
testb
adc
jmp
lahf
or
sub
ret
fldt
add
push
movsb
dec
mov
mov
mov
inc
test
adc
mov
push
jp
jle
pushl
and
hlt
dec
stos
sbb
mov
cs
mov
cltd
addb
mov
loopne
popl
sbb
pop
popa
pushf
mov
inc
fcomps
test
mov
add
add
mov
inc
adc
inc
cltd
out
imul
cmp
or
lock
int3
icebp
dec
mov
iret
mov
outsl
sbb
ret
cli
cmova
imul
sub
pop
sub
pop
aad
data16
mov
rcll
cmp
push
push
data16
fadd
mov
test
and
inc
sti
push
mov
inc
sbb
fidivs
imul
push
mov
in
lock
mov
fneni(8087
push
sub
inc
iret
mov
fwait
aaa
fiadds
mov
add
mov
sbb
pop
jo
mov
inc
iret
popf
hlt
xor
insb
pop
icebp
cwtl
push
ljmp
dec
jmp
cs
popa
int
movsb
dec
push
mov
mov
mov
mov
sbb
jbe
pop
test
mov
bound
imul
cmp
out
bnd
mov
nop
aad
jae
fisubl
lods
push
rcrl
dec
cwtl
ret
or
sub
pop
stc
dec
sub
rcl
andb
add
outsl
xor
out
add
aad
lods
xchg
pop
sbb
rcl
inc
push
mov
cmp
add
shl
cmc
pushf
andl
out
jno
mov
gs
sahf
lcall
icebp
jo
mov
push
pop
es
mov
std
daa
fs
xchg
outsl
cmp
push
sbb
stos
pop
enter
jbe
push
sub
fldl
test
cmpsl
sub
xchg
cmpsb
leave
les
sbb
test
fdivrs
aam
mov
ja
xchg
mov
xchg
in
das
mov
xchg
pop
xchg
sbb
sbb
icebp
jg
leave
xor
inc
outsl
cmpsl
or
stos
xor
test
and
lahf
lods
cli
jb
xor
fcoms
sbb
inc
mov
pop
bound
add
mov
xor
cmpsb
test
dec
jp
and
je
or
sbbl
in
cltd
shrl
sbb
or
cmp
mov
cltd
lret
or
or
stos
push
enter
outsb
sbb
jbe
or
repz
cmp
sub
lahf
push
inc
push
adc
incl
dec
out
fstl
jge
xchg
fs
adc
mov
sar
jae
fdivrl
arpl
mov
aad
pop
jl
outsl
hlt
dec
cmp
out
orb
ss
sub
xchg
xchg
sub
sub
fbld
xchg
sub
aas
xchg
pusha
cmpsb
dec
out
cwtl
mov
xor
xor
mov
jge
mov
adc
add
mov
mov
sub
sbb
mov
shll
or
adc
lock
jbe,pt
dec
add
fbstp
push
hlt
aam
sbb
fwait
mov
lods
cmpsb
fs
or
iret
or
loopne
cmpsb
rcrb
rcr
xchg
shll
sbb
sbb
pop
stc
mov
jbe
sbb
out
aam
sbb
mov
icebp
in
mov
dec
dec
lods
dec
lahf
adc
int
movsl
and
push
pop
push
xchg
loopne
mov
iret
mov
add
inc
push
in
sar
mov
xchg
adc
sbb
sub
jo
popf
pop
jno
int3
jge
xor
rorl
pop
jne
cltd
mov
aas
movsb
repnz
cli
jmp
sub
es
ljmp
xchg
lret
jg
rol
aas
scas
jmp
mov
ret
repz
dec
xchg
int
in
subb
paddq
lret
inc
cmc
rorl
js
pop
xor
xchg
sbb
dec
inc
cli
repnz
adc
mov
push
mov
insb
pusha
adc
imul
shll
gs
popa
push
lock
mov
mov
lret
add
or
dec
sbb
sub
mov
dec
cli
in
arpl
mov
pop
enter
js
push
pop
sub
jnp
test
push
mov
jnp
stc
mov
rcr
pop
out
push
js
test
mov
aas
lods
mov
inc
mov
in
adc
xor
mov
xchg
add
dec
stos
xchg
dec
loopne
mov
cmp
push
sbb
cmp
lds
dec
xchg
push
imul
lods
mov
jmp
test
out
fwait
mov
dec
aaa
repnz
lcall
pop
cmpsb
clc
mov
mov
ret
lods
lret
jb
xchg
scas
call
nop
fldenv
sub
lahf
sbb
or
mov
jno
inc
push
mov
jae
lods
push
xchg
jnp
adc
repz
xchg
sti
ret
xchg
mov
mov
pop
mov
or
aaa
sti
into
mov
jl
sbb
emms
mov
stos
ja
and
jnp
aad
fbstp
into
int
repnz
xchg
mov
aas
mov
lods
repz
dec
outsb
jnp
or
jae
and
shl
and
pop
cmp
add
cs
xchg
test
xchg
stos
xor
ss
ret
cmpsb
xchg
daa
shll
into
outsl
sti
into
cmc
repz
cld
cmpsl
data16
add
mov
or
add
fwait
mov
adc
js
dec
xchg
rclb
pop
scas
mov
cs
lahf
push
mov
mov
mov
sub
popa
cltd
cmp
sbb
pop
mov
es
or
shl
push
inc
shr
pusha
cmp
in
dec
xor
jns
jno
sti
hlt
push
rol
mov
push
cmp
stc
sbb
push
cmp
mov
daa
push
fdivrs
movsl
push
add
or
inc
sub
out
fists
sarl
test
sbb
movsl
adc
fsubl
lock
xchg
rcll
fld
jnp
jo
xchg
ficoml
lahf
ret
test
mov
ds
jbe
push
out
pop
scas
or
test
lahf
in
add
push
pop
stc
xchg
push
pop
ffree
iret
push
pop
cmp
sub
cmp
xchg
out
rol
or
test
leave
xchg
jmp
pop
fsts
inc
cmp
push
jp
mov
imul
lds
adc
mov
cmp
sti
scas
rcll
sbb
xor
repz
ret
das
sub
pop
push
push
push
scas
in
push
loop
subl
icebp
call
xchg
add
push
shrl
or
cmp
push
inc
xchg
fstpt
add
pop
jg
das
sbbb
test
das
pop
xchg
loopne
ljmp
int
popa
addr16
out
pop
and
out
call
in
push
or
push
mov
add
add
dec
cmp
push
loopne
mov
in
xlat
daa
aad
out
inc
cld
sbb
or
sub
je
add
lcall
decb
xchg
scas
inc
ss
mov
cmp
sti
cmp
jp
push
mov
scas
pop
je
jp
lods
mov
test
add
repz
mov
out
jb
int
pop
cltd
cmp
cmpsl
xor
out
mov
pop
push
scas
fs
adc
pop
popf
scas
push
jg
inc
pop
es
inc
mov
mov
push
mov
icebp
movb
test
pushf
scas
or
shll
and
jae
ret
xchg
scas
xchg
lods
lcall
mov
scas
add
data16
lret
lods
in
push
gs
jg
push
push
pop
xor
imul
push
dec
xor
sub
cld
mov
popf
dec
aad
xchg
mov
sbb
lret
push
jge
add
pop
scas
inc
es
xchg
imul
pushf
xor
imul
inc
int3
out
int
add
xchg
sbb
daa
inc
sbb
popa
jno
fnsave
and
or
fnsave
in
out
mov
pavgw
and
mov
insb
out
fnstsw
fistps
pusha
in
fistps
insb
push
dec
fsubrs
cltd
imul
loopne
sub
sbb
rolb
fstl
cmpsl
test
add
in
loope
adcl
lret
std
adc
stc
lcall
xor
xchg
jae
mov
cmp
pop
int3
ret
and
jo
jno
adc
inc
jns
in
inc
push
mov
dec
pushf
data16
lret
push
in
xlat
xor
stos
fcoml
jnp
subb
sahf
add
gs
xchg
mov
push
and
dec
sub
jnp
xchg
pushf
cmpsb
jo
xchg
lods
cmp
andb
cs
jnp
adc
or
rorl
sbb
popa
dec
ror
and
xorb
mov
add
or
jmp
test
pop
test
jo
jae
enter
jecxz
jns
scas
dec
ret
cmpsb
jecxz
ret
mov
into
mov
pop
push
out
adc
jns
js
ror
pop
inc
jmp
addr16
jmp
cld
push
lea
push
mov
or
adc
in
xlat
xchg
cmpsl
and
pop
lret
aas
mov
xchg
repz
ds
lea
cmp
mov
movsl
sub
aas
add
jecxz
insl
nop
clc
jbe
das
mov
movsb
call
in
xchg
aam
jle
push
aad
pop
ja
call
in
movsb
dec
cmc
inc
cltd
adc
outsb
fcoml
mov
ror
xchg
jge
outsb
or
sti
call
mov
in
cld
adc
out
adc
into
std
cmp
adc
loop
dec
into
pusha
shlb
push
subl
xchg
mov
and
pop
or
jo
push
mov
fs
out
mov
or
pop
push
xor
adc
jno
xchg
pop
add
cmp
out
in
xchg
pop
test
mov
add
adc
xchg
aam
ja
int
test
or
inc
xchg
insl
xchg
int3
xor
sub
popl
push
cmpl
lret
inc
test
leave
out
mov
cwtl
jg
outsb
arpl
insb
scas
mov
inc
nop
cwtl
dec
mov
and
incb
inc
out
mov
sbb
mov
dec
adc
div
mov
adc
fdiv
clc
lcall
jecxz
cmp
fisubs
les
jle
cltd
stos
js
rcrb
xor
and
shlb
xor
jge
popa
movsb
ljmp
sub
sbb
mov
cmp
mov
add
add
add
lea
push
cmp
or
adcb
popa
pop
lcall
cli
mov
mov
sub
fcoml
lods
jnp
jg
xchg
mov
insb
xlat
lret
mov
mov
das
outsl
out
sbb
fcmovne
lock
call
cltd
fnstenv
js
rclb
lds
sar
adc
jecxz
std
adc
fiadds
insl
inc
ficompl
push
mov
popa
adcb
mov
fisttps
inc
mov
lods
jne
cli
mov
sub
sub
pop
xorb
es
xor
pop
mov
and
sbbb
dec
mov
imul
add
js
stc
int3
push
rcrl
fisttpll
xchg
aad
fimull
mov
xchg
mov
bound
sahf
adc
pop
jae
popa
pop
xchg
in
mov
jno
mov
fs
jge
sbb
and
mov
xchg
insb
pop
bound
test
dec
stos
iret
mov
jnp
sarb
test
fadd
nop
cs
mov
outsb
hlt
jne
xor
cwtl
loope
dec
ret
js
aad
shrl
cmp
imul
inc
loope
test
inc
xchg
inc
lret
sbb
mov
leave
sub
sbb
mov
push
lea
and
test
notb
mov
add
fwait
js
insb
out
movsl
jno
js
sbb
popf
stc
mov
icebp
scas
test
lahf
imul
rcrb
insl
add
fstpl
mov
scas
aaa
dec
bound
test
pop
fs
aam
in
push
addb
add
fnstcw
add
std
sub
add
les
cmp
or
out
xchg
mov
jae
push
test
push
mov
xlat
mov
xchg
push
mov
int3
mov
inc
and
and
movsl
xchg
inc
test
dec
cmp
es
aas
inc
pop
jno
mov
pop
or
sub
pop
pop
shll
xchg
or
out
mov
bound
jle
push
int
mov
push
mov
sbb
popa
test
xchg
mov
mov
lea
dec
pop
sub
mov
mov
sbb
xchg
cmp
add
lods
into
push
push
mov
and
sub
pop
mov
popf
enter
mov
push
pop
jns
aam
in
jae,pt
inc
dec
sub
scas
test
cld
movsl
hlt
aad
cmp
push
rcll
imul
shll
mov
test
dec
aad
xor
stos
dec
js
inc
cmc
sub
mov
cwtl
lea
mov
mov
es
lret
inc
mov
xor
add
int
pop
jbe
adc
shlb
dec
ror
fidivs
data16
popa
inc
lods
addl
sbb
xor
inc
jg
frstor
sbb
mov
or
mov
adc
fldt
in
push
hlt
add
mov
outsl
push
stc
mov
add
xor
cmpsl
pop
int
fsubl
inc
xchg
or
dec
xchg
mov
pop
xchg
lret
orb
or
shlb
aaa
movsb
xchg
scas
outsl
mov
imul
push
mov
fimull
jecxz
cltd
shlb
cmp
fcompl
or
or
sub
fldcw
mov
pop
rcl
add
add
je
mov
xor
push
cmp
lds
clc
jecxz
icebp
aaa
mov
mov
push
cmp
movsl
push
cmp
cmc
add
gs
shrl
repnz
icebp
jge
in
jbe
ret
pop
cwtl
ss
xchg
out
gs
or
sub
jae
and
lock
fnstsw
fs
xor
sub
sbb
rcl
xchg
stc
pop
roll
xchg
inc
xchg
xchg
sbb
mov
push
imul
cmp
jnp
mov
adc
addr16
stc
hlt
and
xchg
out
adc
mov
sub
iret
and
in
mov
pop
inc
add
repz
xchg
cmp
leave
jae
scas
lods
jp
clc
inc
aas
iret
adc
xlat
or
dec
pop
lods
mov
sub
in
xlat
fdivrl
xor
inc
pop
rcl
pop
es
dec
mov
dec
movsb
mov
push
pop
sahf
jp
mov
rol
sub
pop
sbb
mov
enter
dec
ja
cmp
lock
and
mov
dec
sub
ss
fwait
icebp
cld
jmp
push
pop
jb
mov
inc
mov
fldl
hlt
push
aad
sbb
push
and
ljmp
mov
dec
aaa
loope
push
ljmp
popf
cmpb
jg
sbb
xchg
mov
insl
pop
xchg
xor
ds
add
movsl
sbb
xor
pop
in
xor
iret
pop
mov
mov
fcmovnb
push
dec
aam
popf
addr16
cld
adc
inc
adc
std
iret
sahf
push
mov
push
lss
cmp
clc
loop
fcoms
inc
inc
add
jge
fisttps
push
stos
arpl
jg
lds
test
fwait
xchg
adc
pop
cmp
xchg
sub
mov
add
out
into
mov
xchg
stos
add
inc
mov
aad
scas
or
lods
xor
or
xor
xchg
dec
shrl
xchg
in
in
jne
xchg
jbe
or
in
out
mov
xchg
pop
gs
pop
out
add
push
cltd
push
aaa
or
mov
sbb
mov
xor
ret
push
out
cmp
cltd
icebp
arpl
fpatan
push
pop
data16
xchg
pop
fs
inc
mov
mov
popf
jl
jp
rorl
push
orb
xor
dec
cmp
pop
test
jne
push
mov
inc
mov
or
popf
dec
scas
lcall
dec
add
cmp
mov
sbb
loope
pop
mov
xor
psubsb
mov
outsb
mov
mov
out
xor
not
add
das
inc
push
mov
loope
mov
fists
cld
rcrl
lods
cmp
pop
loop
movsb
xchg
cld
scas
and
xor
andl
test
aaa
cmpsl
mov
cmpsb
and
in
dec
mov
dec
adc
stc
outsb
cmp
add
imul
sar
and
repz
out
jmp
xchg
test
jae
insb
mov
dec
inc
gs
jae
push
cli
pop
or
and
mov
shlb
ds
cltd
dec
add
sub
pop
jb
arpl
ss
std
jns
or
in
or
sub
cmp
push
nop
insl
push
mov
inc
pushl
outsb
adc
pop
push
cmpsb
push
pop
call
sbb
inc
cmpsb
negl
in
push
mov
mov
call
in
mov
mov
pop
jmp
call
mov
popf
mov
add
std
loope
sahf
and
insb
jbe
adc
xor
rclb
rcll
les
mov
dec
shll
scas
scas
lcall
and
daa
mov
rclb
addr16
mov
cld
add
xchg
aad
xor
and
aas
dec
enter
cmpsb
sub
or
out
std
je
mov
ja
add
out
cmc
scas
xchg
pop
mov
sub
loope
xchg
int
pop
in
stc
mov
inc
mov
aam
xor
jae
fidivs
push
cmpl
push
int3
adc
and
outsl
cltd
mov
jle
cli
call
loopne
and
pop
cmpsb
jmp
jbe
add
mov
fsubrl
icebp
nop
insb
cld
and
sbb
cmpsb
in
or
mov
movsl
sbb
int
xchg
mov
sub
xor
bswap
inc
int
test
jge
cmp
xchg
mov
inc
push
gs
xchg
mov
add
jle
sbb
repz
insl
push
pop
sbb
push
rcll
inc
jb
inc
adc
in
inc
and
cmpsb
sub
ret
sbbb
rcll
sti
outsl
les
imul
test
add
and
lcall
inc
jl
push
dec
insb
sbb
sarb
xor
lods
xlat
sub
sbb
xor
xor
xor
ss
add
unpcklps
mov
add
mov
rcll
fbld
sub
inc
jb
into
std
insl
xchg
in
aad
pop
mov
adc
jmp
xor
dec
lea
push
dec
aaa
loopne
mov
pusha
addb
sbb
mov
and
int3
inc
pop
rcr
rcrb
or
jle
cs
push
lret
xchg
xchg
pop
mov
leave
cmpsb
mov
stos
xchg
mov
mov
mov
jge
pop
push
sahf
mov
xor
xchg
fistl
jecxz
scas
dec
es
movsb
and
xor
fiadds
mov
xor
cld
dec
mov
ret
cs
popf
repnz
push
xor
xchg
stc
mov
das
jb
fmul
dec
pop
mov
cmp
jge
or
mov
filds
addr16
call
lods
and
std
popa
mov
pop
leave
test
pop
xchg
mov
push
inc
mov
fnstsw
dec
in
pop
push
popf
outsb
xchg
out
mov
pop
hlt
insl
iret
jle
cmpb
mov
out
mov
insb
xor
xchg
push
pop
and
sbb
test
xchg
repz
cld
cwtl
adc
sbb
mov
push
mov
xor
lock
push
sub
ret
ret
mov
mov
mov
xchg
push
sub
stc
push
dec
cmp
and
lret
leave
cmp
sub
sbb
dec
mov
inc
int3
insl
dec
xchg
sub
xchg
dec
test
xor
mov
lret
jnp
xor
push
sbb
je
into
cmp
outsl
xchg
mov
sub
movsb
aad
popf
push
cmpl
push
in
rcrb
xor
iret
jae
out
and
push
stos
jge
jno
or
sbb
sbb
int
inc
pop
dec
push
and
loopne
pushf
dec
in
shl
imul
fmuls
bound
pop
dec
inc
push
push
jecxz
je
mov
and
call
dec
loope
adc
mov
push
imul
adc
mov
xor
mov
mov
cmpsb
lea
outsl
jmp
pop
outsb
test
pop
int3
xchg
cli
sbb
cmpsb
loop
mov
mov
dec
jmp
jecxz
or
mov
push
arpl
adcb
outsb
push
xchg
aam
dec
cld
sub
stos
je
add
jbe
dec
outsb
and
dec
and
rorl
xchg
lcall
xor
xchg
inc
xchg
push
enter
out
movsl
fcomip
jg
or
sub
sbb
cmovl
test
xchg
pop
das
jg
adc
dec
in
xlat
xchg
rcrl
das
or
push
inc
ficoms
xchg
push
jp
stos
jp
popf
or
movsl
fstp
rclb
add
ret
icebp
movsb
jno
repz
mov
cltd
xor
and
mov
popa
das
negb
mov
jns
pusha
lret
jae
mov
sti
icebp
adc
jmp
sti
fidivl
sti
outsl
add
test
add
lock
lcall
inc
mov
dec
push
loop
xorl
jmp
dec
lock
cltd
dec
je
ljmp
dec
cs
inc
mov
es
xchg
and
and
mov
jae
xor
and
push
loopne
xchg
lea
cmc
adc
mov
in
jnp
or
mov
fimuls
sahf
test
jp
aas
inc
daa
fstl
add
clc
inc
mov
fisubs
dec
outsb
fnsave
lods
mov
mov
mov
subl
ficoml
xlat
lret
fucomi
lock
jmp
popf
jecxz
je
ficomps
or
jo
pcmpgtw
and
sub
scas
dec
mov
jmp
and
verr
nop
fiadds
rcll
stos
aad
popa
dec
sub
xchg
sub
xor
add
add
xchg
xor
fdivr
xor
mov
mov
out
mov
add
shlb
sub
cmp
dec
into
mov
leave
stos
loopne
cmpsl
sbb
and
arpl
sub
jl
cmp
push
sbb
nop
jle
and
and
pop
outsl
and
push
mov
cs
es
push
jl
and
xchg
jle
inc
xchg
jge
int3
fcoml
mov
scas
arpl
sbb
lret
pop
clc
ror
push
add
inc
stc
orb
mov
push
add
push
ret
adc
xchg
mov
push
push
and
pop
xor
and
fmuls
lock
andl
nop
test
pop
jl
cld
movsl
imul
inc
mov
cmp
icebp
xor
ret
hlt
jp
push
iret
lds
mov
aad
xor
lods
pop
in
sbb
fstpl
sbb
cmpsb
xchg
mov
rcrb
sub
icebp
sbb
flds
inc
movsb
ret
sbbb
pop
mulb
aad
fdivrp
push
add
xchg
xorb
mov
push
orl
fisubs
mov
and
jne
jno
andb
aaa
xchg
test
lret
mov
mov
pop
xchg
mov
adc
xchg
cs
cmp
pop
lcall
mov
mov
xor
dec
adc
imul
ret
lret
pop
jge
aaa
push
call
int3
jl
dec
into
pop
psubd
ret
ss
mov
mov
mov
add
out
les
fwait
popa
das
pop
jp
fwait
inc
push
cltd
sub
mov
jne
jo
cmpsl
add
or
add
sahf
inc
sbbb
add
add
fcoml
sub
std
dec
movsb
pop
mov
adc
mov
js
adc
call
into
sub
inc
fdivrp
inc
insl
xor
cmpsb
dec
in
sub
decl
adc
repz
mov
aaa
ret
dec
aas
pop
das
mov
int
mov
mov
or
adc
lret
mov
inc
jae
fimull
jl
add
rcrb
cmp
stc
imull
push
and
sub
push
outsl
dec
ret
push
jnp
push
pop
fstpt
adc
mov
adc
push
call
adc
fs
test
sbb
push
testb
or
and
dec
mov
loope
aam
test
enter
push
out
mov
mov
push
test
or
je
adc
mov
bound
mov
frstor
adc
xchg
jmp
or
mov
add
outsl
sbb
rcr
out
imul
mov
int3
rclb
testl
pop
gs
sbbl
popa
xorb
push
fidivs
lret
fldl
jo
test
loop
scas
mov
or
popl
mov
pop
mov
pop
xlat
xlat
loope
mov
add
push
pop
xchg
xchg
push
sub
fstpt
jecxz
negl
ljmp
in
loop
inc
mov
cmp
pop
fsubl
fdivs
cmp
sti
mov
cmp
dec
lahf
sbbl
dec
insb
pop
dec
xchg
or
dec
nop
sbb
std
pop
inc
cmp
dec
scas
sub
and
sub
mov
xlat
cmp
cs
adc
insl
out
jo
xchg
cmp
adc
popf
stos
mov
xchg
cmp
push
lods
shr
in
pop
movsl
inc
mov
mov
xlat
cs
je
push
arpl
sub
cmp
pop
xchg
test
mov
xor
loope
xchg
test
pop
mov
aad
mov
push
jg
sbb
into
inc
or
loope
cs
mov
lcall
movsb
or
sbb
xlat
lods
mov
jmp
sub
or
jle
add
addb
repz
pushf
leave
sbb
icebp
fbld
scas
icebp
add
bound
jne
adc
add
pop
and
pmullw
pop
inc
aad
cmp
pushf
mov
scas
mov
cmpsl
sub
xor
pusha
adc
push
pusha
mov
push
lret
cmp
shlb
lea
add
mov
mov
push
lea
mov
daa
inc
sbb
nop
inc
ret
lock
fisttps
or
icebp
repz
lret
incl
cmp
fcmove
fistps
loopne
repz
sarl
test
sbb
lret
and
nop
jbe,pt
dec
mov
dec
jle
sbb
fs
imul
xchg
adc
sbb
adc
imul
popa
into
nop
dec
subb
aad
add
test
jp
mov
mov
cmp
push
dec
ror
je
adcl
sub
mov
inc
push
jl
test
scas
sbb
mov
cwtl
jo
cmp
push
mov
test
sbbb
movsb
add
push
dec
hlt
adc
mov
sub
aas
lds
sub
add
dec
mov
push
sub
sub
push
fldl
mov
jl
pop
push
imul
mov
imul
sbb
mov
jne
add
jbe
inc
sbb
mov
dec
loope
jns
cmp
sub
push
in
ss
and
inc
dec
fwait
daa
js
xor
lahf
xchg
xchg
sbb
test
out
add
mov
xor
popa
pusha
jmp
jmp
notl
lock
dec
and
or
sub
scas
mov
call
xor
push
xor
and
inc
leave
xchg
jns
andb
pushf
pop
out
mov
pop
ficompl
xchg
inc
jl
sbb
xchg
xchg
inc
call
aas
aad
mov
cmp
mov
xlat
push
xchg
mov
add
pop
and
push
add
push
pop
lods
out
cmpsb
sbb
sub
xchg
bound
dec
dec
cs
leave
sbb
jnp
xchg
jae
cmpsb
dec
aaa
rcl
daa
push
mov
jge
sbbl
aad
xlat
jl
dec
sahf
movsb
imul
fidivs
push
xchg
jecxz
jmp
repz
hlt
cmpb
or
adc
sahf
push
adc
or
push
idiv
push
lock
mov
pop
mov
sti
dec
push
ds
cmp
xchg
adc
fstpt
fbstp
scas
dec
mov
push
xchg
or
fcoml
fs
jmp
inc
nop
xor
outsl
push
xor
adc
cmc
mov
lea
xchg
add
push
cmc
cmp
add
mov
cmp
ret
sti
rcrl
jl
add
add
daa
ret
mov
fisubrs
or
cld
adc
mul
ljmp
jae
popf
aam
push
adc
scas
xchg
mov
xchg
dec
jle
mov
pop
movsl
jbe
add
and
lds
cmp
fidivrs
xor
push
and
xlat
mov
mov
cmp
dec
sbbb
mov
pushf
leave
add
xor
jp
lea
out
insb
inc
leave
es
lret
punpckldq
ficompl
icebp
dec
xchg
xlat
adc
inc
or
pop
mov
jge
lock
jl,pt
or
add
jl
mov
and
int
sar
add
and
lret
movsb
ja
out
mov
call
inc
push
add
cs
xor
xlat
mov
std
pop
clc
fwait
addl
fistpl
insb
imul
or
rcl
jae
sub
pop
mov
fcomps
push
mov
mov
inc
test
call
mov
aam
mov
pop
pop
mov
fwait
lcall
bound
stos
xor
imull
insl
inc
stc
mov
movsb
outsl
cld
sub
jo
jmp
xor
adc
test
leave
mov
je
or
push
xchg
test
lret
mov
mov
dec
mov
push
lods
fidivrs
xor
js
in
les
mov
pop
jae
pop
jne
aad
pop
adc
xchg
adc
xor
dec
xchg
fsubs
add
sarb
lahf
lahf
stos
lea
rcr
push
fcompl
sub
lret
movsb
mov
pop
aam
aas
mov
adc
popf
sbb
cmp
pop
jmp
sub
sbb
bound
je
nop
fmull
sbb
xor
dec
xor
je
cmp
popf
sbb
fdiv
dec
jb
mov
scas
pop
and
jge
leave
movsl
xchg
mov
imul
inc
and
mov
xchg
pushf
inc
add
scas
data16
mov
push
std
mov
rcll
lret
popf
outsb
out
dec
xchg
mov
xorl
inc
fmuls
sub
sub
test
in
les
mov
mov
dec
cmp
push
cmp
mov
ljmp
cwtl
out
add
push
insl
pusha
mov
or
outsl
mov
pop
jno
sti
adc
and
mov
pop
into
and
mov
fstl
jo
add
inc
insl
ror
insb
adc
xchg
aam
adcl
adc
sub
lcall
cmp
clc
jns
sub
mov
es
cmp
insl
aaa
cli
je
call
mov
adc
jle
shr
mov
jb
enter
mov
xor
xlat
jg
idivl
mov
icebp
fmuls
pop
adc
or
mov
out
andl
ror
cmp
out
pop
or
mov
insl
jnp
lea
imul
pop
stos
fwait
lea
add
lea
jge
mov
and
adc
sub
pop
and
out
insb
lods
repnz
jae
out
push
mov
aam
cwtd
popa
xchg
xor
aaa
xchg
push
lds
xchg
jge
adc
in
inc
mov
scas
fidivrs
cwtl
cmp
pop
xor
adc
or
xchg
out
push
into
jl
ret
divl
mov
in
and
insl
sahf
jg
pop
sub
inc
push
jae
jg
sahf
xlat
pop
cmpl
add
add
add
movsb
in
sahf
inc
nop
aaa
sub
sub
lcall
lret
and
aam
pop
sub
fs
push
mov
pop
jmp
adc
add
xchg
add
add
add
imul
inc
iret
pop
je
pop
insl
add
aas
jo
pushf
inc
add
loopne
inc
sbb
stc
imul
mov
ljmp
sub
mov
mov
sub
jae
cwtl
sbb
cld
out
push
and
cmpsl
mov
inc
cld
jmp
dec
mov
xchg
imul
lahf
jns
push
xor
jbe
sti
and
mov
outsb
mov
xchg
push
push
mov
cmp
pshufw
dec
inc
sahf
pop
push
push
jecxz
inc
xchg
xorb
jecxz
xchg
mov
loop
mov
push
aam
jl
aas
adc
cmp
fstp
dec
fldenv
pop
out
repnz
sub
mov
fwait
jge
add
data16
lea
dec
int
clc
mov
lcall
sbb
mov
jb
lahf
out
js
stc
inc
or
popa
add
sbb
and
add
dec
cmp
dec
and
xchg
imul
xor
mov
and
not
fsts
inc
repnz
push
lds
or
push
add
push
cmp
mov
pop
fdivl
xchg
mov
roll
cmp
mov
mov
xchg
cld
ljmp
insb
push
cmp
ret
loop
cmpb
jmp
jmp
in
data16
or
mov
mov
clc
xor
xor
push
mov
xchg
jb
insb
push
movsl
test
cmpsl
aas
add
test
addr16
mov
cmpsb
mov
add
mov
out
adc
xchg
mov
push
dec
stos
fstl
push
inc
lock
mov
dec
adc
outsl
inc
imul
aam
stc
dec
or
pop
mov
sub
jne
push
jmp
jb
repnz
mov
clc
jp
xor
xlat
ret
mov
popa
orl
jne
xchg
cmp
adc
std
xor
imul
and
dec
cmp
icebp
lods
xor
pushf
sbb
xchg
mov
lea
cmpsb
mov
mov
push
jge
add
subl
sahf
fcomp
mov
mov
jmp
mov
repnz
dec
addr16
xor
or
fwait
dec
test
inc
inc
inc
mov
stc
sahf
lahf
pop
sub
in
shlb
jmp
add
repnz
stos
int3
add
inc
push
test
ret
insb
fdivl
or
jo
lret
cmpsb
cmpsb
lock
mov
or
cs
xchg
fmul
les
cld
pop
mov
mov
test
aas
pop
dec
pop
loope
fldenv
push
inc
push
lret
mov
adc
cmc
out
adc
fs
pop
cmc
mov
and
cwtl
push
lcall
insb
loopne
fsubl
shrl
cmp
pop
cmpsl
out
aaa
sarb
lods
xor
fiaddl
adc
popf
mov
pop
push
sub
xchg
or
sbb
shl
xchg
jae
xchg
scas
xchg
jo
insb
sub
add
cld
fdivrs
cvtps2pd
dec
push
rol
add
push
mov
push
inc
cmpsb
mov
stc
jl
push
outsb
leave
enter
mov
fistps
in
mov
and
mov
das
cmp
jmp
daa
insb
stos
pop
mov
push
mov
xor
in
xchg
add
jle
or
sar
lcall
add
xchg
mov
mov
out
or
mov
mov
add
mov
pop
repz
test
in
push
jb
mov
scas
and
insb
inc
adc
and
lret
sbb
scas
adc
cltd
ja
and
in
mov
adc
fwait
flds
das
cs
out
xor
mov
xchg
push
dec
fstps
pop
xlat
out
int
jecxz
hlt
ret
jl
repnz
mov
shll
stos
xchg
into
push
popf
les
adc
shll
loopne
mov
pop
ret
fcoml
lods
js
jmp
cltd
jnp
dec
in
adc
mov
mov
out
mov
jb
fs
and
cltd
jge
rcll
ret
mov
aad
pop
rcrl
push
or
outsb
das
and
fistl
out
adc
mov
xchg
and
fidivrs
stos
imull
dec
or
and
sub
int
inc
push
sar
push
push
adc
inc
jp
in
lods
jb
popa
inc
lods
mov
push
arpl
xorl
mov
pop
xor
icebp
push
pushf
test
mulb
jg
je
or
scas
and
mov
les
ja
xchg
into
mov
stos
shr
es
in
into
and
cmpsb
jno
cli
or
popa
mov
repz
adc
insl
or
aad
fwait
cmp
xor
sub
fs
das
jne
lret
jno
mov
inc
inc
sbb
pop
mov
mov
scas
fcoml
fistpl
or
or
iret
stos
aad
sub
int
ds
cmp
pop
in
cmpsl
jecxz
test
or
sub
cmp
jp,pn
dec
scas
and
pop
in
push
push
pop
pop
add
stc
ret
arpl
xchg
test
xchg
and
mov
das
and
add
adc
sub
lahf
jne
mov
push
or
ljmp
add
popf
sub
sub
int
test
sub
pop
imul
movsb
adc
sbb
fmul
add
aaa
mov
outsb
sub
les
popa
pushf
jmp
aaa
push
std
jo
lret
lret
cmpsb
mov
xor
add
int3
dec
xchg
clc
dec
push
xor
push
cld
fs
sahf
fisubl
sbb
lea
sahf
insb
add
push
adc
xchg
enter
fdivrl
inc
add
mov
sbb
jmp
test
data16
jge
mov
pop
and
popa
and
mov
mov
hlt
and
lds
stc
rcll
repnz
ficoml
sti
mov
mov
cld
cmpsl
loop
pop
mov
sahf
loopne
jge
push
push
push
cmp
in
clc
in
pushf
fwait
aaa
mov
add
loop
iret
fstl
lret
xchg
push
mov
pusha
push
mov
sahf
push
dec
mov
xchg
mov
push
sub
fsts
pop
test
dec
mov
sahf
or
xchg
jg
add
pop
mov
mov
xchg
jns
jg
or
push
mov
int3
mov
loopne
sbb
movsb
lock
pushf
jp
pop
push
xor
stos
mov
inc
in
sub
mull
int
sub
std
je
pop
shll
mov
das
cmp
cmp
add
das
sub
lds
xchg
mov
and
in
dec
jne
scas
push
bound
test
push
orl
inc
xor
mov
testb
pusha
roll
xchg
pop
shrb
or
add
movsb
fbstp
jge
pop
and
dec
out
xlat
movsl
jo
xor
outsb
push
xor
mov
adc
mov
lods
sub
imul
sub
loope
push
push
add
sub
test
je
popa
pop
adc
and
outsb
ret
sub
jp
aad
jmp
test
sbb
sbb
jg
and
cmp
jg
in
and
cmp
je
sub
and
pusha
stc
cmp
xor
jae
pop
iret
mov
mov
loopne
aas
mov
add
dec
ja
ljmp
xchg
jmp
sub
dec
xchg
push
sub
divb
rclb
xor
lahf
imul
stos
push
sub
gs
smsw
ret
ja
push
pop
xor
xor
loop
xchg
pop
lcall
leave
stc
inc
les
ljmp
mov
cs
fdivrs
jno
pop
jno
mov
sub
xor
pop
push
inc
lret
xor
xchg
sti
loop
add
push
imul
mov
int
int3
das
and
addr16
leave
adc
jle,pt
and
mov
fnstenv
das
ja
stc
sub
lds
xchg
in
mov
lea
lods
imul
or
cltd
push
fwait
lods
pop
sti
push
sbb
scas
test
jae
out
xchg
aad
sub
dec
xor
loop
movsl
ja
xor
lock
xchg
xchg
movsb
test
addb
push
mov
jge
inc
lea
jbe
shlb
push
adc
hlt
jg
ret
adcl
lods
out
movsl
stos
jnp
mov
lock
out
lret
cmp
or
add
add
pop
ds
gs
cltd
pushf
pop
fnsave
xor
xor
fdivrl
in
xor
std
iret
xchg
bound
call
aas
mov
adc
xchg
mov
aaa
enter
negl
out
stos
pop
bound
stc
sbb
xchg
xchg
push
push
cltd
imul
adc
xlat
ret
cmpsb
sarl
sub
rcrb
sti
and
xor
pop
jo
pop
xchg
mov
cmp
push
add
dec
inc
dec
and
mov
ret
xchg
push
pop
std
mov
ljmp
push
iret
mov
int3
sbb
xchg
push
fs
leave
imul
popf
cltd
aam
nop
dec
inc
aad
mov
rclb
imul
inc
mov
bsr
imul
pusha
inc
lcall
repnz
add
push
stc
or
sbb
fnstsw
call
mov
sbb
fninit
lds
fsubl
xchg
cwtl
jle
repz
or
popf
popf
adc
jb
aam
sub
std
adc
pop
or
and
or
xchg
jge
mov
outsl
in
sub
dec
sbb
xchg
mov
mov
or
pushl
sub
fcomip
stos
or
push
rcl
xorl
push
and
dec
aam
and
mov
test
lds
pop
inc
jg
jecxz
es
lds
pop
adc
test
mov
scas
push
xchg
lods
push
out
out
xor
js
mov
xchg
dec
push
cltd
test
or
push
repnz
sbb
mov
es
or
sub
mov
pushf
mov
lods
mov
xchg
xor
mov
fnstenv
push
dec
inc
lea
loope
pop
fsts
mov
shl
dec
jns
push
aaa
jmp
addr16
cltd
dec
add
or
data16
jae
lcall
mov
pop
mov
push
mov
and
sahf
fiaddl
fwait
cltd
sarb
jp
push
push
adc
insl
ljmp
fwait
dec
jge
mov
mov
clc
xchg
mov
call
xor
repz
out
in
mov
dec
push
lret
enter
jno
loop
pushf
ljmp
outsl
fwait
daa
or
jge
insb
daa
cli
push
mov
mov
pop
and
push
roll
xor
test
int
add
outsl
inc
xlat
push
lcall
ret
je,pt
or
sub
dec
push
outsb
aam
lock
xor
arpl
sub
imul
aaa
push
ljmp
mov
flds
leave
xchg
sbb
jmp
jle
pop
push
cmpsl
out
mov
xchg
popf
pop
adc
xchg
movl
pop
int
inc
sub
rcll
test
mov
add
es
ss
adc
or
lods
in
pop
mov
sarl
mov
sub
jb
cli
pop
inc
rclb
out
mov
xchg
lahf
inc
mov
scas
xchg
xor
pop
enter
movsl
mov
cmp
and
ret
push
into
leave
mov
jge
mov
fwait
adc
dec
mov
xor
and
adc
dec
inc
mov
jbe
xchg
notl
repz
cmpsl
das
ljmp
inc
sbb
push
or
jnp
mov
push
mov
pop
aas
push
loopne
scas
mov
inc
leave
xchg
sti
imul
fdiv
loopne
sbb
push
xchg
xchg
dec
out
jno
loope
dec
shrb
cmpsb
loopne
cltd
into
mov
pop
sbb
cwtl
scas
mov
iret
mov
rorb
adc
pop
lock
lods
fcomi
add
push
mov
or
xchg
cld
xchg
ret
sbb
testb
bound
aam
arpl
xchg
stc
push
push
je
push
xchg
daa
stos
rcll
ficoml
mov
or
icebp
pushf
add
jl
add
les
cld
jge
fmulp
insb
insb
adc
mov
into
jmp
out
das
enter
leave
shl
inc
cmp
inc
mov
mov
xlat
jb
jno
fwait
xchg
lea
jg
loope
loopne
cmove
int3
hlt
add
mov
cmp
stos
imul
pop
adc
lock
sahf
mov
lods
mov
stc
adc
mov
enter
stos
push
inc
mov
push
or
loop
hlt
push
ja
out
mov
mov
pop
lods
xor
pusha
jns
je
std
mov
push
adc
sbb
bound
js
push
mov
jb
inc
fisttpl
mov
outsl
mov
mov
cli
addb
add
mov
or
dec
push
int
or
xchg
sbb
out
popl
ds
cs
jmp
lock
ret
cld
gs
or
sub
ja
pop
insl
xchg
test
push
pop
movsl
rcrb
pop
dec
cld
pop
lret
cmp
cli
jne
adc
push
xchg
dec
stc
or
push
dec
cld
xor
xchg
push
addb
aad
sarl
clc
aaa
shll
or
jne
sarb
lds
popa
scas
xorl
mov
xor
jo,pt
inc
sub
fimull
es
jp
cmp
and
mov
daa
popf
or
setb
int
cmp
add
add
je
jg
cltd
scas
mov
lret
push
inc
rolb
adc
xor
ss
outsl
or
mov
call
insb
pop
or
pop
mov
mov
movsl
insl
xor
or
fidivrs
movsl
into
xchg
jl
ret
dec
pop
aaa
sub
xchg
push
insb
pushf
pusha
leave
push
pushf
sbb
pop
pop
mov
ja
add
push
add
xchg
rclb
pop
rorb
push
cmp
mov
or
mov
pop
aad
stc
outsb
pop
je
rcll
movups
add
lahf
sarl
inc
jg
in
les
jb
inc
adcl
stc
add
nop
jno
sub
add
inc
jbe
mov
repz
dec
cmp
xor
test
inc
mov
sbb
dec
hlt
mov
es
jae
sbb
xchg
add
or
or
stos
inc
ret
insb
push
mov
sub
arpl
movsb
js
xchg
mov
sub
pop
ds
sahf
dec
paddb
test
sbb
mov
rol
pop
aas
mov
rcl
jne
je
sti
shll
xchg
pop
out
insb
push
sbb
or
mov
out
lods
xor
test
push
and
add
popf
ss
mov
das
xchg
repz
mov
jae
pop
scas
out
cmpsb
nop
insl
je
and
sbb
fsts
or
mov
xchg
and
movsl
pop
and
rcrb
jp
xor
scas
xchg
scas
xor
cltd
sbb
lcall
mov
jp
jnp
or
fiadds
outsl
insb
push
inc
cmp
test
xchg
pop
dec
push
lcall
or
cmp
stos
stos
push
pusha
fsts
sbb
adc
push
ret
add
add
pop
pop
lret
xchg
in
cmp
cmc
cmpl
fwait
das
mov
outsb
mov
into
test
in
outsl
jnp
mov
das
or
mov
sbb
jmp
pop
add
ret
adc
sbb
dec
ja
insb
dec
std
hlt
icebp
inc
sbb
test
mov
push
jmp
lea
loope
inc
lods
cltd
cmp
icebp
xor
mov
xor
or
inc
test
cmpb
shl
imul
jns
in
xchg
in
jno
adcl
mov
inc
inc
jno
fnstcw
jge
inc
xor
xor
dec
xchg
push
out
push
or
loope
push
js
leave
or
call
fildll
icebp
test
push
push
pusha
push
jbe
sub
outsb
cmp
test
stos
or
and
mov
into
xlat
orl
mov
in
push
lahf
pop
pop
pop
sub
sbb
pop
into
test
mov
jbe
xor
mov
adc
addr16
mov
aas
movsbl
inc
icebp
loope
and
fildl
pop
sahf
int3
lahf
push
repz
inc
inc
fstps
insl
inc
scas
and
popf
jne
mov
xchg
mov
stos
mov
lahf
scas
je
mov
fs
push
cmpsb
imull
test
push
xchg
pop
rolb
out
pop
fs
sti
sbb
pop
dec
mov
out
push
out
xor
cld
rorl
mov
inc
jl
lods
loopne
sar
push
add
jge
jmp
pushf
fs
xchg
xor
in
fisubrl
rcl
cmp
cmpsb
cmp
push
jnp
out
int3
dec
dec
sti
sub
mov
in
inc
test
leave
dec
cmpsb
sahf
mov
icebp
sub
jns
push
enter
xorl
sbb
push
fwait
jae,pt
in
daa
xor
pop
mov
test
adc
xor
sub
out
in
popf
pop
push
clc
jo
cmp
sbb
lret
fistps
sbb
sub
add
mov
jp
cli
pop
sbb
xlat
mov
xchg
addb
jae
or
push
lods
cwtl
aam
sbb
test
loope
icebp
lcall
jo
rcrl
mov
xchg
les
mul
mov
test
push
call
roll
mov
movsl
insb
or
or
movsb
xor
mov
push
add
pushf
mov
inc
add
mov
test
xchg
ds
or
shll
in
mov
add
cltd
inc
rclb
lea
shrb
inc
lret
jle
jle
in
in
xor
outsl
pop
mov
jmp
inc
mov
pop
xor
adc
cld
ljmp
mov
mov
mov
inc
mov
push
and
imul
imul
stos
dec
outsb
and
inc
fldt
aad
push
outsb
mov
cmove
sbb
fnstcw
call
lods
out
aad
inc
jne
inc
div
lahf
jno
cmp
mov
out
sti
and
and
stc
cmp
cs
inc
sub
mov
fnstenv
jno
stos
test
push
or
jge
jnp
dec
cmp
xor
push
xor
sbb
icebp
dec
sbb
in
adc
lods
jns
push
inc
insb
sub
cmp
mov
xor
adc
adcl
test
jl
jae
ficompl
add
cmpsb
fisubrs
xchg
inc
into
lret
fisttps
add
rdpmc
fldl
ds
push
test
shrb
sbb
les
call
loope
jbe
sbbb
adcl
js
sub
mov
cmpl
xchg
sti
mov
pushf
inc
out
mov
xchg
mov
pop
arpl
cmp
imul
nop
scas
pop
mov
cmp
xlat
andb
sub
adc
xor
scas
adc
inc
cwtl
xor
push
int3
mov
pinsrw
pusha
test
sbb
adc
and
jmp
adc
jno
in
pushf
ret
mov
test
inc
cmc
shrl
mov
shll
ja
fs
mov
adc
xchg
mov
mov
ljmp
jmp
push
sub
jb
addr16
pop
rcrb
xchg
dec
sbb
aad
enter
and
or
jbe
in
lds
push
fwait
test
idiv
cs
scas
outsb
in
mov
push
sub
or
inc
in
imul
cltd
jl
pusha
stos
or
and
rcl
mov
iret
std
jae
sbb
mov
loope
cmp
into
and
cmpsl
fldl
mov
dec
sbb
mov
test
mov
movsb
and
xor
pop
sbb
xchg
dec
cltd
xor
arpl
xchg
sub
mov
sub
add
imul
pop
push
mov
into
pusha
stos
in
dec
pop
inc
popf
cs
and
sub
inc
pop
sbb
les
arpl
fisttpl
jne
cmc
inc
xor
push
sub
xchg
push
adc
or
mov
and
cmpl
jle
sti
cmp
mov
and
adc
dec
pusha
pop
adc
sti
lea
ret
xlat
push
int3
xlat
fxch
jo,pt
mov
fcomp
add
mov
adc
imulb
cmp
std
fbld
push
addb
push
mov
mov
xor
ret
xchg
mov
and
popf
pop
inc
into
sub
or
les
inc
jae
and
into
push
sarb
inc
sbb
sbb
lods
pop
jmp
push
loopne
push
lea
dec
jno
xlat
xor
loop
fcmovne
xchg
test
lods
cmpb
cmpsl
xchg
mov
lods
jne
loope
sahf
push
das
xchg
jb
out
adc
and
int3
jmp
push
mov
push
cmp
lods
call
imul
js
fwait
andl
movsb
mov
mov
insl
cwtl
sar
push
lcall
and
jae
add
sbb
lcall
ds
mov
negb
pop
sti
push
or
out
std
orb
xchg
sub
push
hlt
inc
icebp
hlt
jp
lods
sbb
cwtl
lods
push
cwtl
inc
dec
fildl
pop
push
xchg
std
mov
push
dec
push
push
or
or
loope
dec
push
cmp
jp
push
les
xchg
jg
jge
jnp
icebp
mov
dec
aaa
push
dec
dec
sub
movsl
sbb
andl
mov
add
dec
or
lea
mov
mov
and
xor
add
mov
shrb
xchg
lea
dec
sbb
sahf
sbb
daa
push
jg
mov
orl
scas
fnstenv
mov
enter
gs
outsb
repnz
inc
mov
incl
aas
lret
icebp
ss
inc
jns
xchg
adc
fsubp
rcll
enter
lcall
lods
bound
sbb
in
daa
adc
ja
aas
dec
les
pop
sbb
jecxz
subb
js
test
sahf
jns
mov
lahf
inc
push
and
stos
aaa
std
scas
and
data16
add
lods
sub
dec
aad
int
ja
test
jnp
mov
or
imul
or
das
les
out
xchg
cmc
xor
push
sahf
add
frstor
jge
js
out
xor
cmp
imul
cmp
aas
in
push
inc
pop
in
xchg
call
fidivs
pop
sbb
leave
xchg
dec
mov
icebp
jmp
in
cli
sbb
mov
lgs
adc
fwait
sbb
adc
xor
nop
inc
or
mov
cld
adc
sub
inc
adc
jmp
xchg
enter
push
mov
cmp
inc
jmp
mov
out
dec
add
icebp
or
inc
pop
f2xm1
imul
jp
push
aam
cli
jbe
out
mov
pushf
icebp
sbb
and
test
sbbl
daa
mov
mov
fs
xchg
mov
xchg
cld
fldt
in
loop
cli
sar
dec
fisttps
pushf
pop
sub
jae
shrb
dec
lock
xchg
aaa
in
jnp
xor
push
jmp
dec
or
in
mov
das
pushf
xchg
sbb
in
push
rclb
test
pop
cmp
or
movsl
sbb
xchg
rcrl
add
add
sub
pop
xchg
push
sub
ret
pop
and
stos
push
add
pop
addr16
push
pop
aaa
push
mov
fidivs
jmp
pop
orb
and
and
js
sub
movsl
xlat
jb
add
and
rclb
mov
push
mov
nop
add
es
les
dec
insl
into
lret
aam
mov
pop
mov
ds
push
bound
mov
addb
cmc
fwait
xorl
push
sub
rcrl
cmp
test
outsb
mov
sbb
sub
adc
js
rcr
pop
and
scas
sub
mov
adc
int3
pop
xchg
or
mov
loope
xchg
jns
int
sbb
movsb
xchg
scas
insl
or
iret
jnp
inc
push
fdivrl
mov
imull
cltd
filds
int
fadd
push
out
pusha
loop
outsb
mov
nop
adc
aaa
jle
sub
ret
je
mov
int
ficomps
push
jae
insl
sahf
mov
loope
shl
shll
mov
or
cmp
sbb
lret
sbb
lret
les
dec
fsubl
adc
mov
sub
popa
cmp
jno
gs
or
out
mov
mov
out
movsl
add
imul
add
add
sbb
fimull
mov
pop
mov
xor
xor
adc
and
loop
imul
or
jecxz
out
and
test
or
jno
hlt
ja
xor
fnsave
bound
loopne
xchg
jae
nop
popa
adc
dec
insb
lahf
ret
sarl
repz
inc
imul
test
ret
pop
shrl
cmp
out
mov
add
add
lods
inc
and
mov
cmp
out
mov
stos
dec
add
mov
jns
fwait
into
pop
xchg
cmp
imul
and
outsb
std
add
cwtl
push
stos
push
mov
and
pop
sti
pop
shlb
cmc
adc
adc
jle
pop
sbb
cmp
xlat
scas
fsts
or
enter
dec
cmpsl
xchg
cmpsb
aaa
nop
in
mov
mov
xchg
sbb
push
push
xchg
bnd
mov
sub
xchg
loopne
sbb
adc
mov
adc
rol
push
sbb
imul
scas
xchg
jno
repnz
jnp
bound
fistl
in
jno
dec
scas
fwait
pmullw
inc
fbld
cli
add
lret
push
aam
mov
sbb
aam
rorl
push
mov
xor
loope
cvttps2pi
loop
jg
inc
pop
enter
cmp
scas
mov
or
sbb
lds
mov
outsb
mov
es
or
sbb
mov
cli
cmp
xchg
or
or
loopne
aad
jge
add
pop
mov
add
pop
icebp
icebp
test
nop
repz
jne
hlt
and
in
xlat
outsl
aas
jge
jp
aad
gs
cmp
mov
addl
mov
out
pop
jge
in
push
adc
mov
cwtl
mov
rcrl
jb
test
dec
aad
lahf
fadds
lods
loopne
scas
and
dec
jnp
dec
pop
int
icebp
add
mov
xorl
leave
lods
rcl
movsl
cmp
or
lret
or
dec
adc
mov
pop
ljmp
cwtl
test
push
imul
dec
sbb
popf
pop
scas
in
int3
lods
pop
jo
pop
push
xchg
fists
cmpsl
hlt
outsb
jbe
push
push
lret
fdivrl
sub
adc
cli
cmc
xchg
push
xchg
shll
out
and
out
push
in
sahf
jae
or
push
pop
or
mov
shr
push
test
cmp
setp
jne
jecxz
mov
cmpsl
inc
mov
frstor
add
dec
add
cmpsb
ds
stc
mov
scas
mov
int3
and
lock
and
xor
push
arpl
dec
les
jbe
ja
mov
add
hlt
dec
push
out
adc
or
mov
std
sbb
mov
mov
xor
inc
cmpsb
push
mov
jp
push
pop
mov
pushf
xor
gs
dec
sbb
push
xlat
movsb
or
push
das
mov
add
cmp
ret
sti
cmc
dec
aad
mov
in
dec
jg
call
xor
or
loopne
pop
mov
inc
xor
das
xor
rcrl
cmp
xchg
add
adc
ret
cld
xchg
in
mov
xlat
out
pop
jae
popf
xor
in
dec
das
adc
mov
inc
insl
mov
inc
sub
push
nop
popf
lcallw
in
and
aad
outsb
in
mov
xchg
xlat
les
loopne
push
loope
sbb
ja
shll
xchg
jno
inc
outsl
pop
inc
or
or
sahf
negl
mov
fstp
cmp
icebp
xor
pop
ja
or
or
sbb
movl
mov
mov
test
ret
nop
jns
sbb
jg
orl
mov
in
pop
dec
xor
bound
loopne
xor
inc
xchg
mov
adc
sub
or
push
add
add
fwait
mov
push
outsl
sbb
fimuls
shll
repz
or
in
iret
jmp
xor
xor
jae
and
xorb
and
jo
int3
data16
lahf
cmp
lods
ss
movsl
ficompl
rcll
fisttps
aam
xchg
inc
fldt
rcr
and
adc
mov
outsb
sahf
jmp
pop
call
mov
and
imul
int3
adc
movsl
sub
int3
cmp
in
xor
cmp
jbe
sub
shl
pop
add
jge
cmpsb
pop
mov
or
mov
out
les
mov
pop
ja
sahf
inc
push
pop
test
les
jae
sbb
pop
cmpsl
int
pop
test
xchg
les
hlt
jo
daa
std
xchg
dec
and
inc
ret
sbb
mov
xchg
dec
sahf
int3
pop
mov
ret
mov
push
jne
fimuls
sub
cli
xor
into
out
adc
popf
adc
pusha
loope
mov
pusha
dec
pop
push
pusha
mov
mov
inc
aad
test
push
divb
inc
mov
adc
add
cmp
jae
push
in
mov
dec
sub
or
test
mov
test
xchg
cmp
in
lcall
xchg
loopne
mov
xlat
mov
jns
lcall
and
jae
stos
pop
mov
cmpsb
add
push
adc
xchg
cmpsl
inc
movsb
out
inc
xchg
and
inc
push
sub
stos
stos
leave
dec
and
fnstenv
dec
cmpsb
int
fs
ds
inc
fildl
int
rcll
push
mov
push
setb
add
in
pushf
sbb
adc
push
push
subb
push
jnp
nop
lds
push
notl
add
mov
add
add
push
or
jle
movsb
mov
push
pop
and
mov
scas
and
xor
lea
cmp
into
adc
stos
add
pop
sbb
or
xor
jge
inc
pop
sbb
cmpsl
mov
push
cmp
cltd
jp
jb
xchg
jb
cmp
roll
leave
jecxz
rorb
push
pop
ret
faddl
sbb
lods
pop
data16
add
add
arpl
les
out
scas
inc
adc
les
lret
sub
lock
jns
adc
push
pop
mov
gs
pop
add
cmpsb
popa
push
mov
fs
mov
cwtl
lret
adc
test
xchg
sti
jno
cltd
cmp
xchg
inc
aaa
adc
jo
or
cmpsb
pop
sub
clc
cmpsb
lea
notl
bound
rcl
insl
mov
in
mov
adcb
xor
jns
push
mov
cmp
decb
cmp
push
hlt
movsb
cmpsb
jae
or
mov
daa
push
cld
jbe
js
dec
xchg
jbe
stc
adc
jae
jp
loope
add
cs
inc
test
cwtl
jmp
mov
mov
scas
sbb
pop
outsl
ds
mov
mov
xor
test
lock
ja
inc
sub
fdivrs
push
stc
dec
aam
or
jo
jge
mov
sbb
jecxz
movsb
mov
xor
sub
movsb
pushf
enter
inc
ss
cmpsb
popf
mov
push
rcll
test
ficomps
sub
jl
cmp
cmp
bound
mov
mov
out
clc
xchg
sbb
push
adc
cltd
or
cld
jecxz
mov
mov
add
add
mov
in
mov
ljmp
fdivp
cmp
dec
sti
repnz
sub
xor
mov
jno
in
inc
jmp
jecxz
pusha
push
in
sbb
sahf
les
mov
dec
loope
rol
outsb
mov
out
out
jnp
out
and
sarb
pop
xor
pop
and
xchg
inc
in
xor
add
push
jnp
jnp
sub
and
mov
subl
out
cltd
leave
adc
lods
rorl
stos
stc
insb
mov
add
push
jp
int3
insl
outsl
mov
push
mov
mov
xor
cs
fs
test
mov
insl
stos
test
jle
sbb
push
fnstenv
nop
jae
xchg
arpl
stos
xchg
shl
mov
aad
xchg
pop
and
adc
dec
shll
stc
popa
lcall
rorl
add
mov
jns
jns
loopne
lret
icebp
xchg
push
nop
mov
je
iret
cwtl
cmp
adc
bnd
jbe
rorl
xor
push
cwtl
fcmovnb
dec
mov
jne
cmp
xor
dec
inc
outsl
aad
in
sub
push
dec
push
out
repnz
mov
pop
fnsave
pop
clc
sub
jl
push
mov
ret
rclb
mov
jne
mov
xor
and
cmp
insb
stc
insl
repz
pop
notl
cmp
aas
loop
scas
icebp
push
and
inc
shll
jne
loop
stos
icebp
fcmove
in
add
rolb
shrb
xor
xchg
sbb
mov
insl
cmpsl
xchg
jle
in
push
mov
adc
xor
bswap
mov
jns
mov
pop
and
hlt
mov
repnz
int3
ds
pop
cmp
int3
xlat
gs
jl
xchg
add
push
int3
out
dec
fimuls
aad
push
out
cmpsb
addr16
cltd
movsl
stos
inc
int
cwtl
add
xorb
xor
leave
xchg
dec
cltd
call
das
pop
mov
cwtl
inc
xor
leave
xchg
dec
into
ljmp
mov
ret
cmp
and
sarl
popa
movsb
jno
xchg
dec
outsb
subb
stos
inc
sub
push
adc
lcall
xchg
jno
mov
mov
hlt
xlat
xchg
mov
or
dec
jmp
sub
cwtl
xor
or
pusha
mov
loopne
shll
insb
xlat
ret
mov
lods
mov
int
stc
movsb
imull
mov
roll
sub
dec
nop
cmp
fs
bound
sbbl
sbb
add
and
xchg
ja
out
mov
loop
push
testl
mov
adc
xchg
aad
xchg
xchg
pop
sbb
jno
out
cmp
cmp
repnz
push
in
add
mov
xor
adc
repnz
or
test
xchg
jmp
insl
dec
mov
lcall
pop
test
mov
and
ss
loope
out
inc
add
aad
mov
insl
add
mov
mov
ja
sarl
shr
cli
aam
mov
add
arpl
push
dec
lods
pusha
shl
pop
gs
mov
ret
mov
sbb
push
enter
sbb
jnp
cmc
ret
push
lret
pop
push
ds
mov
fwait
dec
loopne
dec
adc
rorb
movhps
aad
popl
pop
inc
jle
or
ja
push
insb
dec
pop
loope
icebp
and
loopne
and
popl
mov
sub
add
add
sub
add
sbb
fmul
sbb
movntps
or
negb
cmp
push
inc
ja
nop
out
mov
xchg
es
sbb
xor
or
popf
mov
aaa
aam
out
dec
dec
jae
sar
cmpl
add
in
or
push
pop
popa
ret
mov
leave
fbstp
loope
bndldx
cs
mov
in
int
inc
test
lret
jae
cmpl
addb
insl
adc
aam
mov
jge
adc
out
xor
call
sbb
add
mov
into
and
pushf
out
jns
xor
fimuls
arpl
in
enter
test
sarl
cmp
mov
in
jo
push
fidivs
out
xlat
xor
push
test
scas
mov
jmp
addr16
stos
pop
dec
rol
mov
inc
loope
leave
and
xchg
add
dec
cmpsl
add
psubusb
pop
push
scas
inc
xor
pop
push
mov
push
daa
shll
jb
cmp
pop
pop
clc
mov
dec
sbb
pop
mov
sbb
mov
sbb
push
ds
cwtl
movsl
and
and
cltd
rclb
mov
jne
sbb
jbe
fnclex
std
jge
ret
pushf
shrb
loopne
mov
fnstenv
int
jg
or
aas
lret
mov
or
jle
add
sub
pop
fdivs
add
adc
pop
push
push
pushf
addr16
movsl
sub
std
cmp
mov
push
mov
pop
mov
and
mov
into
mov
sahf
ds
or
iret
cmpsb
push
movsl
fsubl
and
mul
inc
xchg
out
imul
sbb
out
shrb
add
add
inc
add
add
mov
test
dec
mov
or
lods
das
dec
xchg
aam
xchg
xor
add
pusha
cmc
jle
sarb
loopnew
xchg
lods
jo
sti
aad
rolb
add
adc
push
std
repz
mov
cmc
inc
cmp
repz
pop
dec
push
iret
sub
cmpsb
mov
stos
pop
sbb
leave
int3
in
imul
das
pop
xlat
xor
in
adc
mov
les
mov
fs
fwait
dec
ds
jmp
out
jmp
lcall
loop
rcrl
add
test
xor
fists
jl
push
fcomps
jae
enter
out
xchg
push
scas
mov
fsub
push
dec
sbb
iret
shlw
gs
adc
inc
xor
and
mov
daa
pminsw
jmp
popf
push
push
ljmp
test
or
xchg
mov
sbb
and
lcall
dec
data16
dec
fstps
cmp
and
xor
rclb
mov
xchg
repnz
pop
xchg
es
sbb
push
nop
ret
xor
aad
jo
call
stos
inc
add
xor
loop
push
xchg
xor
pop
lock
insl
stos
das
sbb
dec
sub
adc
cmp
punpckhwd
iret
xlat
leave
popf
lods
xchg
mov
xlat
and
test
ret
or
and
pop
add
js
out
lret
fcoms
sbb
pushf
and
sub
add
xlat
cmp
aam
rcll
arpl
cmpl
lods
cld
mov
pop
subb
push
call
or
cld
aad
imul
dec
decl
rcrb
push
aad
adc
sub
sub
outsb
es
cwtl
sbb
popa
es
jae
jno
adc
mov
mov
fildll
call
int3
mov
popf
xor
scas
push
stc
cmp
cltd
xor
mov
fs
jnp
fstl
data16
call
pop
or
xor
sub
int
and
lea
mov
mov
inc
movsl
dec
jnp
dec
rorb
sbb
and
jno
lds
je
loopne
xlat
loope
jne
add
lds
xor
sbb
ds
aad
jo
lea
jae
add
cs
flds
loop
pop
movb
out
js
xchg
cs
jmp
fbstp
dec
and
insb
movd
pop
sbb
out
mov
popf
xchg
mov
dec
mov
ret
mov
ret
mov
mov
test
and
lea
xchg
mov
mov
clc
dec
popa
push
addb
add
jne
scas
inc
mov
adc
popl
push
mov
jno
subb
shl
fbld
loopne
lret
fistpll
mov
push
mov
xchg
mov
rcl
cmp
mov
cmpxchg
jbe
and
pop
mov
cmp
xchg
std
sbb
dec
mov
popa
sbb
xchg
fs
and
filds
or
and
lret
fs
pop
mov
push
xchg
stos
xor
pop
xlat
mov
mov
add
add
and
or
add
enter
lods
inc
inc
jmp
or
fdiv
dec
dec
add
or
fcomip
imul
xlat
mov
cmp
pushf
fs
xchg
xor
rcll
jp
add
test
pop
cmp
mov
subl
push
push
mov
icebp
orb
mov
pop
sub
int
mov
cmpsb
push
mov
xchg
bound
push
add
cmc
xor
stc
push
lret
gs
aam
loop
sbb
mov
out
les
pop
or
mov
pop
mov
sub
push
hlt
push
jb
flds
jge
bound
dec
fstl
add
pop
mov
sub
aad
aam
add
lods
stc
aas
cmpsb
or
and
and
xchg
xor
push
adc
cmp
out
add
jne
push
int3
sub
xchg
pushf
or
mov
andl
pop
xchg
push
into
xchg
sub
and
mov
xchg
mov
popa
int
mov
out
lea
scas
pop
popf
or
das
mov
mov
iret
incl
aad
mov
xor
icebp
mov
xor
push
xchg
add
lahf
xchg
jns
testl
dec
stos
dec
xor
leave
dec
fidivrs
fldenv
imul
jmp
cltd
mov
xchg
shrl
inc
xchg
xchg
xor
or
fisttps
sub
icebp
cmc
xchg
sbb
jne
into
xlat
push
pusha
inc
roll
add
xor
ret
and
mov
and
add
push
mov
or
enter
jmp
inc
into
int3
std
aad
mov
cmp
add
mov
and
fadd
fsubr
mov
out
fwait
or
int
mov
add
add
aad
inc
insl
push
jb
dec
popa
ljmp
std
dec
mov
mov
lods
ljmp
mov
outsl
mov
mov
std
mov
dec
add
mov
adc
mov
lds
aam
data16
aad
into
int3
icebp
aad
mov
sbb
xchg
xlat
popf
popa
inc
sbb
sub
fbstp
inc
push
test
or
icebp
cmp
lods
mov
lret
mov
mov
and
fwait
int
and
insl
or
out
sbb
pop
add
popf
popf
dec
jne
call
and
cmpsb
fcoms
addl
cmp
jecxz
pop
inc
mov
int
mov
jg
rcrl
ficoms
in
cmp
or
or
test
mov
lods
cmovge
mov
pop
int
mov
comiss
repz
in
mov
push
in
xchg
fbld
test
rorl
mov
and
pushf
add
xor
lahf
cld
cmpsl
dec
pop
add
mov
int3
orl
add
mov
pushf
cmc
movsb
ss
andb
and
lahf
int3
add
mov
adc
ffreep
push
mov
xorb
or
or
or
cmp
rclb
or
int
mov
or
hlt
mov
sbb
xchg
lds
push
movsb
aad
arpl
xlat
push
mov
push
cmpsl
data16
xchg
jg
xor
dec
jns
mov
dec
mov
fbld
shrl
in
dec
or
or
aam
pop
mov
pop
stos
jmp
jnp
pop
sub
aas
int
mov
or
adc
sbb
xchg
sbb
xor
repz
in
out
pop
push
ret
data16
mull
addl
xchg
repz
ret
mov
cwtl
shll
add
mov
mov
addr16
iret
daa
xchg
xchg
pop
mov
ret
mov
cmp
mov
cmp
sub
xor
into
or
ror
add
cmp
js
out
or
or
or
jmp
psubw
adc
leave
fwait
addr16
ror
les
mov
insl
sub
sbb
xchg
test
push
xchg
mov
or
xchg
pop
aas
pushf
add
xor
adc
mov
into
jns
mull
rcll
int3
loope
or
or
or
mov
pusha
loop
push
out
add
int3
adc
add
sbbb
repnz
ja
mov
inc
das
scas
pop
dec
loopne
fisttpl
pop
or
and
pop
dec
test
sti
or
push
pushf
jle
lods
std
sbb
dec
mov
popa
sbb
nop
fildll
inc
mov
out
add
xor
adc
mov
into
jns
mull
rcll
xchg
mov
int3
das
or
or
or
cmp
rclb
or
int
mov
or
hlt
mov
sbb
xchg
lds
push
mov
dec
cs
xchg
xor
xchg
xchg
test
add
movsb
mov
adcl
mov
or
push
inc
push
gs
pusha
je
push
mov
fs
xor
adc
mov
into
push
sub
and
roll
mov
daa
or
or
or
add
lret
fwait
scas
inc
inc
jmp
cld
mov
or
in
mov
sbb
xchg
int
jnp
mov
add
add
movsb
imul
scas
push
mov
mov
push
mov
aaa
filds
daa
xchg
iret
mov
ret
imul
imul
neg
dec
inc
push
push
mov
push
inc
filds
xchg
jae
mulb
arpl
mov
or
xor
clc
loope
pop
adc
mov
into
icebp
sub
cmpsl
rcrl
fcoml
out
cmp
or
or
or
jle
lods
stos
sbb
jmp
outsb
pop
mov
int
mov
aad
mov
sarl
call
or
fadds
test
pop
mov
shrl
mov
cmp
fisttpl
jle
enter
popf
ret
mov
inc
sarl
mov
sub
test
mov
mov
pop
sub
add
add
cmpsb
mov
push
cmp
fiadds
fists
lods
rcll
stc
mov
xchg
mov
in
and
insb
neg
cmpl
adc
sbb
pmaxub
and
lock
int3
outsl
int
into
mov
out
xchg
push
mov
leave
ds
inc
lcall
sar
mov
xchg
inc
subl
pop
jmp
xchg
xchg
test
ljmp
dec
data16
push
int3
sub
popf
pop
jl
cmp
mov
ror
dec
enter
cmp
cmp
push
adcb
test
sbb
arpl
mov
in
jecxz
xchg
xchg
mov
hlt
hlt
shrb
adc
dec
mov
aam
jecxz
fmull
xchg
scas
push
push
xorb
add
pushf
popa
fisttpl
sub
push
fldl
mov
pop
ret
dec
mov
xor
dec
add
mov
imul
add
xchg
and
ja
cmpsl
xlat
add
or
sub
mov
incl
adc
aad
add
rcrl
dec
dec
aad
inc
lds
adc
lods
lea
inc
add
les
popa
ss
push
jns
out
cltd
fucomip
jmp
data16
loopne
rcrl
scas
sub
cli
push
dec
add
cmc
loop
repz
shll
bswap
pop
dec
imul
ret
jae
push
xchg
dec
xor
or
adc
cmpb
int3
xchg
das
inc
cmp
or
bnd
cmpsl
into
popf
or
shlb
adcb
dec
pop
mov
mov
lods
imul
or
test
push
sbb
mov
or
test
cltd
lahf
or
fdivl
cmp
shll
bswap
sub
stos
mov
cmpsl
test
add
xchg
pop
inc
or
stos
mov
fsts
cmpsl
mov
push
push
jbe
cld
mov
mov
lret
dec
test
or
pop
ds
mov
aad
push
mov
cmp
jl
sbb
test
and
or
inc
mov
orl
fidivrs
movsl
addl
push
cmp
lods
test
xor
out
in
je
cwtl
jmp
cmpsl
sub
push
pop
insb
sbb
addr16
push
cmp
cwtl
push
cli
aad
in
and
mov
lcall
cmpsb
xchg
mov
add
and
fwait
xor
sbb
test
lods
out
out
pop
inc
inc
sbb
adcb
pop
inc
mov
fwait
and
lret
in
cmp
add
andl
jge
jle
xor
aaa
insl
add
adc
in
adc
iret
add
loopne
add
xorl
shlb
test
or
pop
jo
cmp
jns
mov
test
xlat
jle
inc
cmpsl
ret
mov
jno
push
cld
push
push
mov
jb
inc
mov
and
jns
fwait
adc
int
mov
jmp
test
sbb
out
mov
sbb
out
clc
mov
pop
xor
sbb
je
mov
cwtl
in
mov
bound
dec
mov
sbb
xchg
das
xchg
dec
out
rorb
rorb
cs
mov
mov
xor
cmp
outsb
mov
imul
push
inc
negl
imul
push
pop
fidivl
mov
dec
or
mov
scas
xchg
inc
xor
leave
pop
or
mov
mov
xchg
loop
dec
repz
dec
xchg
jae
fsubrl
lods
sub
fiadds
lds
pop
push
scas
xorb
out
lcall
cmp
xor
jae
or
in
xor
xchg
test
pop
lock
pusha
or
pushf
popf
sbb
bound
push
pop
cmp
outsb
test
xchg
xor
lea
fstpl
xchg
inc
testl
cmpsl
inc
dec
mov
addb
jl
js
scas
jae
pop
inc
icebp
in
push
push
xchg
les
sub
adc
xchg
sarb
adc
jbe
mov
or
popa
movsl
popa
mov
push
xor
dec
imul
jae
sub
stc
and
dec
cmpb
xor
sub
cmp
jecxz
icebp
inc
jp
movsb
sub
push
loope
mov
aam
test
fsub
aam
inc
fmull
aas
pop
mov
je
xchg
push
pop
sbb
xchg
add
mov
outsb
mov
hlt
sbb
flds
decl
jae
cmp
pusha
orl
sub
test
or
xchg
pop
xor
and
push
popf
sbb
imul
add
push
xorb
sbb
dec
sbb
and
xor
in
movsl
aam
rorl
sbb
sbb
cmpsl
lret
imul
shll
repz
dec
in
cmp
and
dec
sarb
sbb
xchg
sub
mov
xchg
scas
or
mov
pop
and
in
and
add
mov
mov
into
movaps
jle
test
call
dec
int3
test
or
xchg
or
or
lret
xor
pop
aas
mov
mov
push
data16
std
adc
test
and
scas
filds
sub
insl
mov
ret
mov
mov
roll
adc
cmp
or
adc
and
xor
mov
mov
fwait
and
andl
rclb
fwait
addl
mov
jbe
jae
jmp
pop
pop
xchg
pop
loopne
push
pushf
andb
push
in
mov
popf
mov
fldenv
data16
inc
test
int3
rcrl
mov
or
or
clc
enter
jns
add
add
or
or
stc
sbb
shrl
dec
and
dec
fmul
push
or
or
or
leave
stos
insl
and
fwait
das
es
xor
into
pop
sub
outsl
sbb
mov
pop
mov
mov
add
adc
pop
lcall
jecxz
int3
popa
in
ret
jne
xchg
pushf
hlt
mov
sbb
or
or
or
lods
bound
mov
dec
pop
mov
aas
data16
aas
inc
popl
in
data16
xchg
push
pop
in
dec
movsb
stos
sub
dec
mov
sbb
xchg
out
popf
dec
dec
xchg
or
out
stos
xor
xchg
xchg
push
and
dec
pop
push
dec
mov
dec
adc
pop
xor
aaa
pop
fcompl
sub
and
rclb
jmp
jno
out
or
int
ret
mov
andb
mov
das
mov
psubq
rorb
test
imul
test
pop
pushf
adc
fldt
and
out
adc
add
loope
xchg
add
movsb
movsl
std
add
dec
fwait
push
js
mov
mov
sub
int
mov
unpcklps
outsl
pusha
dec
fmul
push
bound
fldl
pop
inc
fldenv
hlt
data16
fisttps
rcr
mov
movntq
xchg
outsl
cmpsl
fwait
addr16
pop
pusha
xor
daa
mov
in
xor
adc
mov
shrb
into
int3
pop
shll
cmp
jmp
mov
into
scas
scas
movsl
into
aam
push
mov
nop
sub
cmc
add
cmp
fistpll
jne
mov
push
es
mov
push
jecxz
inc
xchg
fsubrs
lock
movsb
outsl
outsl
test
mov
lahf
repnz
push
sub
and
insb
adc
add
add
mov
icebp
sbb
mov
imul
push
loop
lcall
hlt
inc
fistpl
out
add
icebp
scas
ljmp
imul
testb
out
adc
std
cmc
pusha
movsb
dec
or
sbb
js
cmp
hlt
scas
dec
pushf
lret
dec
fucom
std
dec
jle
js
mov
pop
sbb
push
outsl
outsl
add
loop
js
dec
add
ret
pop
sti
mov
cli
xchg
or
cli
frstor
lods
lret
mov
ds
sbb
mov
loop
adc
or
mov
inc
ja
add
jb
pop
jne
call
mov
mov
push
sbb
aad
mov
fucomp
jno
mov
cmpsl
sub
add
leave
and
push
mov
scas
aad
and
in
test
or
push
testb
push
stos
mov
cld
outsl
lret
in
cmpsb
adcl
enter
dec
inc
loop
xor
xchg
das
add
fcmovnbe
mov
inc
adc
sub
aam
or
cwtl
add
shl
scas
std
push
or
repnz
aad
imul
xor
loope
mov
xor
sub
mov
hlt
xchg
adc
mov
xlat
popa
mov
mov
sti
dec
pop
add
xchg
xchg
shll
enter
mov
stos
fcomip
mov
push
adc
add
in
imul
daa
fistl
ret
vorps
sub
orl
mov
cmp
pop
movsb
pop
xchg
dec
les
xor
in
ljmp
std
in
pop
popf
icebp
add
ljmp
cmp
add
icebp
mov
sub
inc
sub
pop
xor
roll
add
jl
cvttps2pi
in
or
gs
push
sbb
sub
adc
or
jbe
rcrl
xor
loopne
inc
in
jg
xchg
inc
mov
jl
push
je
sbbb
sarb
mov
jnp
repnz
daa
int
push
cmp
test
xchg
push
jecxz
insb
and
adc
test
ljmp
cmp
adcl
jns
xor
jo
push
int3
fstps
add
or
lcall
daa
inc
int3
xchg
aam
push
test
in
fwait
add
rcl
mov
jno
repz
sub
arpl
ss
pushf
cmpsb
es
std
xchg
jne
daa
pop
cmp
sbb
push
mov
xchg
imul
mov
jns
mov
pop
jmp
jecxz
pop
xchg
or
lret
push
lcall
shlb
pop
mov
fs
dec
mov
pop
in
xchg
add
aas
mov
out
cwtl
add
lods
push
subl
adc
ret
shrb
stos
dec
xchg
icebp
enter
mov
lret
mov
unpcklps
aad
pusha
add
xor
test
push
dec
pop
aam
repz
cmp
dec
cmc
dec
mov
sbb
pop
shll
push
jno
lret
lods
jno
sub
test
mov
and
mov
aam
cltd
mov
dec
inc
scas
mov
test
lods
mov
arpl
jp
mov
dec
popa
sub
or
xchg
aaa
push
dec
adc
mov
sub
js
dec
loope
push
test
imul
fdivl
gs
jmp
fisttps
mov
add
loope
adc
in
or
xchg
pop
cmp
push
int3
mov
and
add
lds
fidivrl
test
hlt
jbe
adc
xchg
pop
sub
pop
adc
cmp
push
fiaddl
mov
mov
cmc
xor
add
stos
mov
mov
push
sar
fimuls
fcmove
xchg
and
xchg
dec
mov
loope
xchg
jne
cmc
dec
mov
xor
pusha
xchg
scas
bound
mov
pop
das
add
pop
call
sahf
xchg
fwait
in
leave
sub
dec
div
fidivrs
inc
sbb
insl
cmc
mov
mov
pusha
in
cmp
loop
mov
gs
repz
mov
imulb
pop
mov
xchg
pop
outsb
inc
add
mov
daa
adc
pop
add
push
mov
icebp
cmc
dec
int3
cmpsl
fsubs
add
ds
xchg
cmp
loope
add
int
aad
jmp
test
shrl
data16
test
cmc
int
lret
stc
mov
pushf
cmp
out
xor
mov
cld
and
iret
into
arpl
nop
fiaddl
xor
into
aas
rolb
mov
adc
mov
mov
in
adc
in
fimuls
jo
cwtl
fucomp
sub
sub
sub
or
adc
or
out
mov
cltd
cmpb
lret
icebp
add
arpl
sub
int3
cmp
loope
adc
int3
pop
loop
adc
lret
dec
lock
add
inc
and
mov
adc
push
loope
popf
rcrl
rcr
movsb
pop
sub
sub
mov
and
or
mov
or
add
add
test
mov
push
inc
pop
inc
aad
hlt
ja
mov
xchg
push
out
cmpsb
lods
xlat
or
ror
lods
or
xchg
pop
pop
mov
jno
inc
out
fldenv
dec
or
or
cmp
ret
aad
pop
xor
aas
and
adc
mov
sub
ja
pop
popa
fistps
and
xchg
pushf
add
sub
and
les
lret
insb
push
sbb
push
aaa
mov
push
pop
xlat
in
imul
cmpsl
xchg
mov
mov
negl
push
imul
fsubrp
cwtl
aam
add
lret
mov
mov
outsl
xchg
lock
mov
fcmovnb
sbb
adc
cld
add
push
sub
cmp
cmpsl
push
sub
xchg
push
movsl
mov
fiaddl
aas
mov
xchg
nop
cmc
mov
adc
lahf
inc
filds
sbb
inc
loope
xchg
jae
mull
test
or
out
leave
insl
dec
cmpsb
outsl
lock
aaa
scas
and
ja
jmp
inc
call
xchg
leave
ret
aam
cmpsl
jmp
and
int3
mov
xchg
push
stos
in
mov
pop
jp
pop
adcl
bswap
mov
xchg
xchg
mov
out
nop
popa
ret
leave
add
add
add
enter
repz
jle
sbb
dec
push
lods
fists
lock
roll
jns
loopne
dec
stos
repnz
add
sub
fdivrp
xchg
sbb
stc
push
pop
insl
aas
cwtl
imul
das
sti
lock
divb
add
int
test
cmc
xor
cmp
dec
movsb
xchg
sub
arpl
movl
xchg
xchg
ret
std
adc
inc
push
and
cwtl
dec
sti
aam
in
andl
add
push
jmp
jg
aam
jecxz
xchg
mov
push
sbb
rcrb
mov
sub
push
stc
push
jb
sbb
cmpb
mov
repnz
inc
clc
in
adc
mov
in
mov
shl
cmp
push
negb
and
cmpsb
cmc
rcll
and
lcall
pop
adc
mov
lods
leave
xlat
xchg
rcll
ret
dec
stos
cltd
aas
jb
ret
fnstsw
xor
mov
mov
xchg
inc
cmp
popa
shrl
add
hlt
fldl
sub
aad
call
das
loop
fmuls
mov
lds
inc
mov
lahf
dec
xchg
xor
test
cmp
dec
popf
xlat
jmp
add
stos
in
pop
jp
lods
pop
inc
jo
out
stos
lret
lock
push
dec
push
mov
das
jns
ljmp
add
xor
push
mov
jne
mov
cltd
sub
aad
xor
cltd
aas
subl
mov
aam
jmp
inc
data16
ljmp
outsb
ror
cmc
or
mov
iret
into
dec
push
add
jl
daa
cmp
jnp
leave
jae
das
xchg
jae
in
dec
nop
out
pop
repz
mov
jecxz
mov
daa
or
or
inc
aad
pop
or
dec
push
adc
int3
repz
imul
mov
mov
ss
or
push
and
dec
je
adc
xor
sbb
sbb
xor
push
repz
dec
cltd
leave
das
adc
ljmp
mov
bndstx
push
aam
loope
xchg
or
les
cmp
hlt
xchg
dec
xor
sbb
dec
adc
shlb
lock
push
xchg
cmpsl
or
mov
mov
shlb
add
add
xlat
ljmp
xorps
pmulhw
and
cli
clc
ja
or
and
dec
inc
adc
jmp
cmp
fldt
icebp
sbb
iret
aad
cmpsb
pop
insl
lock
pop
fldenv
mov
popf
add
js
and
movsl
mov
sub
in
mov
xor
test
loope
and
fsts
push
xchg
loopne
xor
cltd
xor
xchg
and
push
pop
fdivrl
orl
movsl
icebp
sub
ror
clc
mov
cld
cmpsl
in
ret
or
pusha
xchg
int3
cmp
sub
mov
cs
bnd
cs
lock
sti
mov
inc
orl
shll
repnz
add
adc
xchg
shlb
inc
addb
loope
push
test
push
cmp
pop
xchg
push
mov
xchg
xchg
mov
or
cld
and
out
xchg
inc
out
ret
sbb
mov
andb
jmp
popl
cltd
outsb
stos
sbb
cld
xchg
mov
xor
jae
repz
dec
jge
out
jge
std
sbb
cmpb
mov
xchg
xor
cli
rcrl
or
call
popa
fisttpl
xchg
or
xchg
push
adc
mov
push
inc
mov
cld
xchg
or
lahf
mov
sbb
sbbl
jl
cmp
ret
mov
jne
ficoml
es
push
nop
test
ret
test
push
aam
stos
mov
sbb
lret
xchg
out
mov
inc
adc
xchg
insl
scas
mov
pop
fisubrs
stos
std
pop
adc
sbb
cli
sub
incl
or
and
lock
aad
pop
inc
xor
cld
jge
cmpsb
fimull
dec
or
pop
mov
in
stos
or
mov
out
aad
mov
loope
sarb
mov
inc
int
shlb
and
mov
fwait
nop
mov
shr
adc
mov
dec
mov
test
js
xchg
pop
in
dec
mov
dec
sub
fistpl
sbb
test
jbe
lock
ja
cmpsb
or
daa
cmp
xor
dec
xor
pop
movsl
dec
pop
aas
dec
stc
rcrb
dec
ds
add
test
je
xchg
adc
mov
or
cmp
sti
lods
add
jg
addr16
call
add
roll
add
sti
ja
push
jnp
das
test
xorl
push
xchg
sbb
dec
hlt
mov
mov
jno
test
pop
jns
cmpsb
cld
cmp
xor
dec
aad
cmp
cmp
mov
stc
stos
add
cltd
stos
and
mov
xchg
mov
decb
lock
lods
ret
rclb
leave
mov
jb
jmp
rclb
bound
mov
sarb
mov
repnz
mov
jb
jecxz
mov
pop
inc
ret
out
or
mov
push
aad
jb
jmp
out
or
mov
push
adc
mov
jne
rorb
dec
mov
push
out
or
andb
mull
and
ret
out
or
mov
push
aad
jb
jmp
out
or
mov
push
adc
mov
jne
rorb
dec
mov
push
out
or
andb
mull
es
ficoml
leave
mov
push
jmp
ficoml
push
sub
shlb
dec
mov
push
imul
imul
ret
aad
cmp
mov
jb
jmp
aad
cmp
mov
mov
sub
sarb
dec
mov
repnz
test
xor
lods
clc
sbb
movsl
stos
jb
fdivrs
cmp
mov
pop
cmp
mov
jp
adc
lcall
sarb
bound
fidivrl
mov
cli
cmp
int
jo
in
pusha
cld
mov
sbb
clc
xlat
jge
cltd
jmp
clc
test
sar
mov
clc
aaa
popf
js
jmp
clc
push
std
js
jmp
clc
ja
fnstsw
mov
xchg
and
sbb
or
mov
sbb
sbb
es
cltd
or
sbb
add
sbb
mov
mov
mov
mov
sti
xchg
lea
and
lods
dec
push
rcll
out
iret
fnstenv
inc
sbb
es
jbe
sbb
mul
lds
out
cmp
scas
jbe
enter
mov
imul
ficoms
jb
jg
sarl
jge
test
iret
mov
shrl
loop
jge
mov
insb
dec
xchg
cmpsb
xchg
addr16
pop
scas
js
cmpsb
push
add
dec
lods
jp
mov
cs
mov
xchg
adc
fxch
inc
inc
xchg
dec
mov
mov
mov
ret
pop
xchg
out
or
jge
shll
fxam
jno
sbb
pop
cltd
loop
add
mov
xchg
cmovae
xchg
cmp
mov
lret
daa
cld
sbb
or
andl
test
pop
mov
js
cltd
xchg
nop
sbb
and
jno
outsb
sbb
divb
mov
addr16
loop
insb
or
xor
pop
cli
pop
repz
adcb
mov
or
pop
out
add
lods
imul
js
jmp
clc
push
movsl
and
or
mov
inc
sbb
es
xchg
pop
das
and
dec
jmp
xor
mov
inc
or
add
or
mov
inc
xor
into
xchg
mov
ret
mov
xor
ret
sub
cwtl
add
sahf
lea
and
lods
xor
jp
and
jno
cmpb
xlat
jnp
lods
xor
ds
incl
adc
rcrl
jno
mov
sub
mov
fwait
dec
es
roll
in
int
cld
cmpsb
popa
mov
movsl
mov
push
dec
movsb
push
bound
xchg
dec
inc
mov
stc
cs
cmpsb
aam
sahf
mov
out
add
clc
or
mov
mov
daa
out
mov
xor
xor
js
lods
cmpsl
lret
jl
xor
jns
push
jmp
ljmp
mov
or
xchg
jo
aad
scas
or
push
jb
or
leave
jle
insl
mov
bound
jmp
je
aad
cmpsl
pop
push
imull
adc
mov
push
mov
mov
xchg
push
jae
cmp
xor
fs
lret
flds
jecxz
repnz
cmpsb
mov
push
or
jbe
add
mov
push
push
push
rcrb
movsl
in
lock
rolb
bound
pushf
cmp
mov
jb
jecxz
jle
fidivrs
mov
ss
cmp
add
dec
mov
shrb
int3
push
mov
xor
dec
mov
jp
inc
and
clc
mov
sub
cmpsl
scas
add
clc
sub
aam
pop
push
shlb
xchg
push
mov
lret
pop
xchg
imulb
mov
mov
mov
pop
mov
data16
jb
fcomps
ret
mov
sbb
movsb
lods
xor
xor
out
int
dec
mov
xor
inc
cmp
scas
sub
mov
bound
cmp
add
jns
movsl
daa
push
mov
mov
mov
data16
dec
sti
mov
push
and
scas
or
inc
push
addr16
or
andl
test
es
add
fcmovb
aaa
dec
lea
mov
mov
pop
jno
pop
andb
in
or
xchg
mov
pop
adc
aad
ja
cmp
mov
fbstp
enter
cmpsb
push
jp
inc
gs
or
mov
fisttpl
aad
out
jbe
ja
push
leave
sbb
lds
inc
mov
imul
mov
mov
dec
cmp
or
and
in
pusha
dec
sub
loope
jns
lret
enter
mov
ljmp
bound
add
cli
das
inc
rcrb
jecxz
jge
movsl
test
lahf
popa
ret
mov
mov
test
add
mov
loop
data16
dec
inc
cmc
mov
xor
dec
stos
cmc
dec
lretw
jne
dec
mov
bound
jne
dec
stc
iret
push
dec
mov
idivb
mov
je
loope
dec
cltd
andl
mov
lret
fists
push
add
stos
add
or
pop
push
mov
dec
dec
mov
je
outsl
mov
lcall
clc
call
insb
cmpsl
jg
inc
or
mov
xor
in
in
jl
cmp
push
into
mov
push
pslld
mov
fcomi
fucomi
mov
push
test
sub
jno
outsb
sub
mulb
popa
jnp
mov
adc
adc
pop
push
ja
sbbl
mov
sbb
cmp
mov
pop
cs
mov
inc
addr16
xor
enter
orl
cmpl
ret
mov
cs
std
cltd
or
icebp
xor
in
rclb
aaa
cmp
in
aas
adc
mov
cmp
sbb
imulb
and
jg
loop
xchg
cmp
hlt
addl
adc
sti
add
addr16
jle
mov
dec
jge
jl
outsb
cmp
jne
or
or
cmc
incb
push
aad
sub
iret
mov
xor
cli
push
or
cltd
cmp
popl
ret
jmp
mov
xchg
fidivs
cmpsb
jp
and
mov
pusha
or
idivb
mov
or
pop
lahf
add
ss
add
mov
jne
dec
cmc
xchg
addr16
aas
divl
lods
cld
mov
inc
es
cltd
mov
cmp
add
mov
out
xchg
hlt
push
je
and
xchg
addr16
sti
inc
xor
inc
adc
mov
pop
addr16
mov
pop
fcmove
outsl
bound
mov
je
icebp
or
cmp
mov
push
cmc
pop
ds
fmuls
cmp
lods
adc
jg
inc
jbe
mov
insb
das
jg
enter
lahf
pusha
mov
pop
fisttpl
fsubrs
adc
rcll
inc
push
je
dec
ss
pop
in
jns
outsl
int3
and
into
dec
or
fbld
rep
push
dec
out
je
mov
inc
push
mov
in
mov
aas
rcll
mov
xor
jecxz
push
jb
sbb
stos
and
sub
jmp
lock
scas
jo
sbbl
sub
or
mov
loope
mov
dec
inc
insl
scas
push
mov
iret
addr16
sbb
xor
icebp
dec
sub
lahf
and
fldt
pop
mov
mov
add
sub
hlt
mov
and
lods
xchg
test
adc
das
jp
or
hlt
daa
pop
sbb
fsts
ss
jne
inc
fstps
cli
mov
fwait
cld
mov
cmp
dec
pop
pop
out
incl
push
push
inc
sbb
xchg
test
cli
and
fcomps
mov
xor
cltd
jle
xchg
inc
negb
cwtl
mov
xchg
mov
or
idivl
insb
dec
loop
in
xor
pushf
and
cmp
repz
addb
std
outsl
add
push
jecxz
sbb
pushf
js
and
mov
stc
inc
mov
sub
adc
sub
lret
movsl
adc
sbbb
adcb
add
les
addl
invd
and
push
and
lods
in
aaa
fldenv
scas
mov
xor
orb
jbe
or
fcompl
cmc
clc
clc
pop
mov
ret
sub
inc
mov
sahf
repnz
xor
inc
jo
sahf
jo
addr16
or
cmpsl
fldenv
imul
test
sub
imul
push
lds
jb
or
cmp
push
xchg
fcmovb
mov
adc
das
add
mov
pop
jp
jnp
stos
adc
loop
add
inc
leave
scas
insl
cmpl
testl
out
lock
ljmp
cltd
and
mov
insb
xlat
xchg
rclb
xchg
cmp
xchg
call
or
mov
cwtl
adc
or
mov
pop
push
fistl
stos
sbb
scas
ret
jns
dec
jmp
int
pop
cs
dec
mov
pusha
cmp
cwtl
imul
shrl
call
cmp
push
shlb
add
clc
cmp
repz
and
jle
loope
xlat
popa
sub
loope
je
mov
xchg
mov
inc
mov
fldt
jb
flds
out
repnz
out
ss
out
mov
mov
mov
ret
pusha
dec
and
inc
mov
ds
adc
bound
test
adc
popf
or
sarb
inc
adc
sbb
xor
add
sbb
mov
out
lret
icebp
adc
enter
mov
lret
cmp
mov
lea
jge
lea
test
enter
add
mov
cmp
fwait
lds
adc
and
adc
push
pop
add
mov
and
movsl
dec
and
mov
std
or
test
xorl
push
gs
or
mov
sbb
das
mov
orl
and
cmp
cmp
mov
push
or
pop
outsl
sbbl
pop
or
imul
add
cmp
sti
ret
mov
pop
xor
cmpsl
iret
xor
hlt
xchg
push
xchg
xchg
dec
mov
div
mov
push
inc
mov
sbb
movsl
push
mov
push
out
loopne
test
iret
lret
cmp
xchg
or
sbb
test
adc
lret
dec
aad
jg
lods
pop
sub
mov
mov
sbb
sbb
mov
ret
or
inc
pop
ret
je,pt
cmpsl
push
and
cmp
add
leave
dec
jge
ds
or
pop
fwait
mov
jecxz
xor
adc
shrb
mov
adc
lret
adc
arpl
xchg
jbe
loop
sbb
push
push
cs
mov
mov
push
cltd
dec
or
mov
add
sub
int3
repz
mov
push
test
or
xor
and
pop
add
pop
lods
jle
lret
pop
xchg
or
push
dec
add
or
xchg
dec
jg
cmpsb
int
int3
adc
jp
fisubl
hlt
mov
lahf
ljmp
ret
arpl
lret
adc
adc
xor
sbbb
out
cmp
daa
sub
xchg
sbb
jnp
int3
daa
push
adc
push
aam
and
xor
add
ljmp
cmp
out
jne
jns
push
cmpsl
lea
sti
dec
pop
and
xchg
jne
mov
jnp
out
inc
pop
jno
ja
inc
leave
dec
icebp
out
repnz
repz
dec
lea
dec
je
dec
repz
int3
or
pop
xchg
lods
hlt
mov
sbb
mov
inc
and
scas
ret
bound
add
sbb
dec
outsl
xor
jle
test
xor
icebp
sub
jl
jmp
and
jmp
jb
flds
add
add
jne
xlat
movsb
cmp
and
jne
pop
mov
xchg
cmp
adc
cld
in
push
js
pushl
in
stc
push
dec
mov
xorps
ret
dec
pop
push
cmp
jo
cwtl
fstpt
test
lret
stc
xchg
xor
int
pop
jg
subb
cmpsb
clc
push
cltd
push
add
pop
pop
filds
in
outsl
das
dec
xchg
call
insb
lcall
mov
out
mov
sbb
sub
in
scas
cmp
ret
mov
adc
lahf
pop
roll
movsb
jp
push
xor
jp
fmul
cmpsl
xlat
adc
sti
jnp
movsb
adc
mov
inc
imul
cmp
xchg
shll
jbe
jae
jle
jne
sub
js
ret
imul
adc
cld
cmpsl
pop
mov
xchg
in
cmpsb
cmp
jbe
mov
jns
mov
lock
inc
roll
rcrl
jmp
push
leave
lahf
xor
ucomiss
push
or
mov
xchg
pop
mov
adc
int
pop
push
imul
xchg
adc
lcall
adc
mov
push
inc
mov
push
lds
pop
add
add
push
add
add
add
sahf
push
add
inc
add
xor
add
jl
add
pusha
inc
add
push
imul
add
imul
add
add
imul
add
imul
add
imul
add
push
add
push
add
add
dec
push
add
add
add
je
add
jle
add
mov
add
add
add
push
add
push
add
push
add
add
adc
add
and
add
imul
cmp
add
add
pop
imul
insb
imul
add
add
out
or
je
push
pop
pop
arpl
je
outsl
insb
cmp
add
or
fs
outsb
add
pop
insl
bound
bound
je
js
gs
je
add
pop
outsb
gs
popa
data16
jb
add
push
pop
pop
jo
pop
arpl
insl
outsl
fs
je
pop
insb
jb
je
add
mov
jne
je
imul
or
je
jge
pop
imul
insl
add
or
je
outsb
imul
dec
adc
addr16
popa
imul
pop
or
pop
jo
pop
insw
outsl
fs
dec
adc
jae
je
jae
jb
popa
je
gs
add
xchg
add
jae
je
popa
jo
pop
je
jo
add
mov
pop
arpl
je
outsl
insb
data16
add
imul
add
pop
data16
imul
or
gs
pop
push
gs
add
inc
add
insl
arpl
add
fwait
push
pop
pop
arpl
inc
imul
pop
popa
fs
imul
xor
imul
push
push
cs
insb
add
or
inc
js
popa
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
or
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
scas
cmova
dec
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
gs
imul
je
add
dec
gs
jo
insb
insb
outsl
arpl
pop
add
popa
insb
inc
insb
insb
outsl
arpl
jo
inc
imul
add
jo
gs
insb
insb
outsl
arpl
jbe
inc
gs
outsl
fs
gs
imul
add
sub
dec
gs
jo
jb
popa
je
add
sbb
imul
outsl
jne
arpl
add
push
dec
inc
dec
xor
cs
insb
adc
add
add
add
movsb
mov
add
add
add
add
add
addb
add
movsb
mov
add
add
add
or
add
xor
add
movsb
mov
add
add
add
or
add
add
pop
addb
mov
add
add
add
add
or
nop
add
add
add
pop
add
add
add
add
add
add
add
push
add
data16
and
imul
add
add
imul
add
data16
add
add
add
cmp
add
jb
xor
xor
cmp
cmp
xor
xor
add
or
dec
add
and
push
add
outsb
add
and
push
add
jb
imul
add
add
add
add
add
add
addb
add
dec
add
push
add
add
add
nop
nop
jbe
