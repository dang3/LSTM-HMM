cli
loope
add
loope
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
loop
add
in
sub
xor
mov
movb
movl
movl
movl
movl
mov
notl
mov
mov
movl
movl
movl
mov
mov
leave
ret
push
mov
mov
orl
sub
addl
xor
push
movl
mov
not
mov
push
movl
push
cmp
movl
jne
xorl
movl
movl
adc
lea
xor
xor
xor
mov
xor
add
xor
lea
decl
mov
sbb
lea
mov
andl
mov
mov
movl
mov
adc
mov
mov
mov
add
movl
xorl
mov
add
sbbl
xor
orl
sub
mov
push
call
mov
mov
xor
xor
sub
mov
addl
mov
add
and
xor
sub
mov
sub
movl
sbb
mov
mov
orl
mov
adc
mov
mov
mov
movl
adc
movl
movl
mov
mov
xor
mov
sbbl
add
mov
xor
mov
mov
add
mov
mov
mov
incl
dec
xorl
not
sbbl
and
negl
mov
movl
movl
mov
xor
xor
sub
add
movl
movl
movl
movl
mov
adc
mov
mov
adc
add
sub
xor
add
sub
mov
mov
mov
addl
add
movl
adc
sbbl
xor
xorl
xor
add
movl
mov
incl
mov
movl
adc
xorl
mov
xor
add
xor
mov
add
mov
mov
mov
mov
adcl
xor
xorl
adc
mov
add
mov
movl
mov
movl
adc
movl
mov
cmp
movl
ja
jb
mov
mov
movl
cmp
jae
movl
jmp
or
mov
mov
mov
addl
add
sbbl
xor
lea
mov
mov
adc
mov
addl
mov
add
mov
push
pop
movl
adc
xor
xor
add
adc
cmp
jne
cmp
jne
subl
mov
mov
mov
movzwl
or
mov
mov
add
subl
xor
sub
sub
addl
xor
mov
xor
mov
add
mov
mov
sub
imul
mov
mov
sbb
add
movl
adc
xor
add
mov
neg
mov
xor
add
movl
adc
subl
xor
xor
add
mov
adc
mov
add
mov
adc
or
add
mov
notl
adc
mov
mov
add
movl
adc
xor
andl
xor
subl
add
incl
adc
movl
mov
movl
cmp
movl
jb
movl
ja
movl
cmp
movl
jb
mov
mov
or
mov
add
movl
adc
sbbl
xor
xor
add
movl
mov
mov
adc
subl
mov
add
mov
movl
mov
adcl
xor
add
mov
and
xor
xorl
not
mov
orl
add
mov
mov
adc
movl
mov
movl
cmp
movl
ja
movl
jb
mov
movl
cmp
jae
jmp
and
mov
mov
and
mov
andl
add
subl
add
addl
xor
xor
sbbl
sub
xorl
add
movl
xor
add
and
mov
add
adc
adcl
xor
movl
xor
add
movl
adc
mov
movl
cmp
movl
jne
movl
cmp
jne
mov
mov
adcl
mov
sbbl
add
orl
xor
sub
sbbl
or
addl
add
cmp
jne
cmpl
movl
jne
orl
mov
mov
and
mov
mov
add
xor
sub
mov
and
mov
add
add
xor
sub
or
and
sub
mov
mov
sub
add
mov
add
mov
mov
mov
sbbl
add
adc
xor
subl
xor
add
adc
sbbl
xor
sbbl
xor
addl
add
movl
adc
mov
add
adc
add
mov
mov
adc
mov
adcl
mov
add
adc
xorl
xor
xor
add
adc
movl
mov
movl
cmp
movl
jb
movl
ja
cmp
movl
jb
mov
mov
sbb
add
add
xor
andl
mov
sub
add
movl
jmp
add
mov
addl
mov
sub
mov
mov
xor
add
mov
sub
xor
mov
xor
mov
mov
addl
mov
subl
add
xor
sub
movl
mov
notl
mov
mov
movl
cmp
jne
xor
mov
movzbl
or
mov
mov
adcl
add
xor
lea
adcl
mov
mov
mov
add
mov
adc
mov
orl
add
xor
orl
sub
movl
cmp
movl
jb
adcl
mov
orl
add
xorl
xor
dec
xor
sub
mov
jmp
decl
mov
test
je
movl
movl
mov
mov
mov
mov
movl
mov
add
xor
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
mov
mov
add
xor
sub
cmp
mov
mov
je
mov
add
mov
mov
mov
movl
movl
movl
movl
movb
mov
mov
mov
mov
mov
movl
mov
mov
mov
add
xor
add
cmp
je
xor
movb
mov
mov
add
adc
xor
xor
add
mov
mov
mov
mov
adc
mov
mov
mov
mov
add
adc
xor
xor
add
adc
mov
mov
mov
mov
add
adc
xor
xor
add
adc
mov
mov
mov
cmp
ja
jb
cmp
jae
jmp
mov
mov
mov
add
xor
add
incl
mov
mov
mov
mov
xor
add
adc
mov
mov
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
movl
movl
movl
mov
mov
mov
mov
add
xor
sub
cmp
je
mov
cbtw
mov
add
mov
xor
mov
sub
mov
movzwl
movsbl
cmp
je
movl
movl
movb
mov
test
jle
mov
mov
mov
add
xor
lea
mov
mov
mov
add
xor
sub
mov
mov
test
jg
mov
mov
add
xor
mov
sub
add
mov
mov
test
je
mov
mov
mov
xor
jmp
andl
jmp
pop
pop
pop
leave
ret
push
mov
sub
xor
and
mov
inc
movb
mov
mov
xor
mov
movl
mov
movl
mov
and
mov
sbb
mov
orl
push
xor
xor
and
add
add
sub
mov
push
movzwl
sbb
xor
mov
subl
xor
andl
sub
subl
sub
cmp
movl
jae
lea
mov
mov
mov
sub
mov
adcl
imul
mov
adcl
push
movl
add
mov
xor
orl
add
movl
mov
movl
cmp
jne
movl
lea
not
mov
xorl
mov
xor
mov
sub
add
cmpl
movl
mov
movl
jne
or
mov
xor
mov
add
xor
sub
mov
mov
mov
xorl
sub
movzbl
xor
mov
mov
movl
imul
cmpl
mov
jne
cmpl
jne
movl
mov
cmp
jne
movl
cmpl
mov
mov
lea
mov
jne
cmpl
je
mov
movl
cmp
jne
movl
mov
mov
add
xor
add
inc
incl
sub
mov
cmp
jb
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
push
movl
movl
movl
push
movl
push
movl
movl
movl
jne
notl
or
adc
movl
add
movl
mov
xor
mov
movl
movl
mov
mov
mov
and
movl
xorl
mov
xor
add
xor
xor
sub
sub
movl
adc
mov
add
adc
xor
adcl
mov
inc
xor
sub
sub
add
adc
xor
adc
mov
addl
xor
sbbl
add
mov
adc
mov
movzwl
and
mov
mov
mov
xor
mov
mov
sbb
add
subl
xor
subl
mov
and
add
adcl
mov
mov
adcl
mov
sbbl
add
adc
addl
xor
xor
notl
add
movl
mov
adc
mov
mov
add
movl
adc
andl
xor
xor
xorl
add
movl
adc
mov
cmp
movl
ja
jae
adcl
mov
mov
add
addl
mov
sub
mov
movzbl
sbb
mov
neg
add
mov
xor
mov
xor
mov
or
add
and
mov
movzbl
sub
mov
mov
mov
subl
mov
movl
mov
dec
mov
adc
mov
mov
mov
subl
mov
sbbl
mov
xor
subl
add
movl
adc
xor
adcl
xor
subl
add
movl
adc
test
jb
ja
test
je
movl
jmp
sub
mov
lea
movzwl
add
mov
movzwl
andl
add
xor
orl
sub
addl
mov
xor
mov
subl
mov
xor
mov
subl
add
adcl
xor
lea
mov
mov
movl
add
adc
addl
xor
sbbl
xor
addl
add
movl
adc
xor
movl
cmp
jb
movl
ja
movl
mov
cmp
movl
jb
adcl
lea
movzbl
xor
push
sbb
mov
sub
mov
andl
mov
lea
adcl
xor
mov
sbb
mov
add
subl
add
push
mov
xor
add
addl
push
orl
push
subl
pushl
call
sbbl
mov
mov
addl
add
orl
test
movl
je
add
mov
mov
subl
add
notl
adc
andl
xor
andl
xor
adcl
add
adc
movl
cmp
movl
jne
movl
cmp
jne
xorl
push
addl
push
addl
push
addl
push
sbbl
pushl
orl
call
sbbl
mov
adcl
add
push
adcl
push
push
push
orl
pushl
xorl
call
add
sbb
mov
adc
mov
xorl
add
adc
sbbl
xor
addl
xor
add
movl
adc
add
adc
mov
and
mov
add
adc
andl
xor
andl
xor
adcl
add
movl
adc
movl
cmp
movl
jb
ja
movl
cmp
movl
jb
cmpw
movl
jne
subl
mov
addl
push
andl
push
push
push
pushl
call
mov
sbb
mov
xor
mov
add
xor
mov
addl
sub
andl
mov
andl
mov
add
xorl
xor
adcl
sub
xorl
mov
mov
and
mov
mov
add
addl
xor
sub
add
movl
cmpl
mov
movl
je
movl
cmpl
je
movl
cmpl
jne
mov
xor
mov
mov
mov
sbb
mov
mov
mov
sub
and
mov
sbbl
add
adc
xor
sbb
xor
xor
mov
add
movl
mov
mov
mov
movl
adc
mov
cltd
mov
movl
cmp
movl
jne
not
mov
movl
cmp
movl
je
andl
movl
cmpl
movl
jbe
xorl
mov
mov
or
push
adcl
xor
not
pop
xorl
div
test
je
dec
mov
movzwl
xor
mov
adcl
sub
incl
mov
mov
movl
cmp
movl
jb
mov
orl
mov
subl
add
subl
xor
addl
sub
mov
movzbl
xor
mov
adcl
mov
mov
sbbl
xor
adcl
mov
sbb
mov
addl
add
movl
adc
xorl
xor
orl
xor
add
movl
mov
movl
adc
andl
mov
inc
or
subl
movl
or
mov
xor
movl
mov
mov
and
movl
mov
movl
mov
mov
mov
notl
add
adc
addl
xor
xor
add
adc
movl
cmp
movl
jne
andl
test
movl
jne
adc
mov
mov
movzwl
add
mov
add
not
adc
neg
xor
mov
mov
xor
add
movl
adc
andl
xor
decl
xor
sub
movzbl
mov
sbb
mov
add
adc
xor
xor
andl
sub
movl
sbb
add
movl
adc
mov
add
xor
mov
adc
mov
xor
xor
xor
or
mov
xor
add
not
adc
mov
mov
mov
mov
add
add
movzbl
adc
xor
mov
andl
mov
xor
addl
add
adc
subl
xor
andl
xor
adcl
sub
mov
sbb
mov
adcl
add
movl
adc
subl
xor
xor
sub
sbb
add
adc
xor
subl
xor
adc
add
mov
adc
mov
mov
and
mov
xorl
mov
xor
mov
mov
mov
addl
mov
not
mov
xor
mov
add
xor
xor
or
add
xor
mov
dec
movl
adcl
mov
movzwl
or
mov
xor
xor
add
mov
add
andl
add
xor
sbbl
xor
add
sub
movl
mov
cmp
jae
and
add
mov
mov
mov
sub
sub
mov
mov
xor
mov
add
xorl
imul
subl
add
mov
mov
movl
mov
not
mov
movl
cmp
jbe
sbb
mov
sub
add
mov
jmp
dec
mov
xor
mov
addl
incl
subl
incl
add
xor
movl
sub
movl
cmp
jb
mov
mov
sbb
mov
xor
mov
mov
mov
adc
mov
adcl
add
sbbl
xor
add
mov
or
mov
add
movl
adc
sbbl
xor
xor
add
adc
notl
mov
addl
xor
movl
cmp
ja
movl
jb
mov
movl
jmp
adc
mov
sub
mov
mov
add
adcl
add
andl
xor
negl
xor
add
adcl
sub
movl
mov
movl
cmp
jae
add
sub
mov
adc
mov
movzbl
adc
mov
mov
xor
mov
xorl
add
adcl
imul
subl
add
mov
mov
mov
mov
movl
mov
movl
cmp
jbe
mov
sub
add
mov
jmp
mov
xor
mov
incl
incl
add
xor
sub
cmp
jb
mov
mov
mov
add
xor
lea
mov
mov
mov
mov
mov
test
mov
mov
jne
mov
add
add
xor
xor
add
sub
mov
cmp
jae
add
mov
mov
mov
xor
mov
add
imul
add
mov
mov
mov
mov
cmp
jbe
mov
sub
add
mov
jmp
mov
xor
mov
incl
incl
add
xor
sub
cmp
jb
movzbl
add
xor
sub
jmp
add
xor
add
mov
add
xor
sub
cmp
jae
lea
mov
mov
mov
xor
mov
add
imul
add
mov
mov
mov
mov
cmp
jbe
mov
sub
add
mov
jmp
mov
xor
mov
add
xor
inc
incl
sub
cmp
jb
mov
mov
mov
add
xor
mov
sub
mov
add
mov
mov
mov
mov
mov
add
xor
sub
ror
mov
mov
mov
mov
add
xor
add
mov
add
xor
sub
cmp
jae
lea
mov
mov
mov
xor
mov
add
imul
add
mov
mov
mov
mov
cmp
jbe
mov
sub
add
mov
jmp
mov
xor
mov
add
xor
inc
incl
sub
cmp
jb
mov
mov
mov
mov
movl
movl
mov
mov
add
adc
xor
xor
mov
add
adc
mov
xor
cmp
jb
ja
mov
cmp
jb
mov
mov
add
xor
sub
jmp
mov
mov
sub
mov
mov
add
mov
movl
mov
mov
mov
lea
xor
mov
add
mov
movl
movl
movl
movl
movl
movl
mov
add
xor
xor
sub
add
adc
xor
xor
add
adc
cmpl
mov
mov
je
cmpl
je
movl
mov
mov
add
xor
add
mov
mov
test
je
lea
push
mov
add
xor
sub
push
pushl
mov
pushl
push
push
push
pushl
call
mov
mov
mov
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
movl
mov
mov
add
xor
add
xor
lea
jmp
mov
add
xor
sub
cmp
je
mov
add
xor
sub
cmp
je
mov
add
xor
sub
cmp
jne
push
mov
call
mov
add
xor
lea
xor
sub
lea
xor
lea
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
or
push
and
mov
orl
mov
movl
movl
movl
mov
movzbl
add
push
not
push
mov
add
mov
xor
xorl
mov
adcl
sub
sbbl
mov
adc
movl
movl
mov
mov
xor
mov
sub
mov
mov
add
xor
sub
movl
cmp
jne
mov
mov
notl
add
mov
movzwl
sub
mov
mov
sbb
mov
add
xorl
xor
sub
cmp
movl
je
mov
mov
jmp
sbb
mov
sbb
add
xor
xor
adc
xor
sub
sbbl
mov
mov
sub
mov
orl
add
xor
adcl
sub
movl
cmp
movl
jne
adcl
mov
add
xor
sub
movl
jmp
mov
mov
sub
mov
mov
mov
xor
add
mov
sub
xor
movl
mov
subl
mov
and
mov
adcl
mov
mov
xorl
add
orl
add
subl
xor
xor
sub
sub
sbbl
imul
mov
cmp
mov
jne
mov
movl
add
sbbl
add
xor
subl
xor
xorl
sub
sub
imul
movl
jmp
orl
mov
xorl
add
xor
sub
andl
imul
movzwl
adc
add
and
mov
mov
mov
mov
mov
xor
mov
orl
add
xor
sbbl
sub
movl
cmp
je
and
mov
orl
mov
mov
mov
add
mov
subl
add
movzbl
xor
mov
mov
sbb
mov
mov
negl
add
sbbl
mov
and
mov
adc
mov
orl
add
andl
mov
movl
movl
movl
mov
mov
cmp
jae
sbbl
mov
mov
add
movzwl
mov
mov
movl
cmpl
movl
je
movl
movl
jmp
mov
mov
mov
xor
mov
add
andl
xor
subl
sub
cmp
je
mov
mov
mov
cmp
jne
cmp
movl
jne
sbbl
mov
mov
dec
mov
mov
adc
mov
adcl
mov
decl
add
mov
xor
mov
mov
xor
mov
addl
sub
movzwl
add
mov
movl
movb
add
lea
sbb
mov
mov
incl
mov
addl
add
xor
sub
addl
mov
and
movl
sub
movl
mov
add
mov
mov
add
andl
xor
sub
mov
xor
mov
add
xorl
xor
sbbl
sub
movl
jmp
movl
mov
mov
movl
cmp
movl
jne
addl
mov
mov
add
subl
xor
subl
sub
mov
movl
cmp
movl
je
notl
mov
mov
adc
mov
subl
add
mov
xor
xor
mov
sub
movzwl
sbbl
mov
adcl
mov
mov
and
mov
adcl
add
movzwl
sub
mov
movzwl
notl
mov
movl
xor
sub
movl
mov
mov
movl
mov
movl
inc
mov
cmp
movl
jne
mov
xor
or
add
mov
movzbl
adc
add
xor
sub
mov
mov
xor
mov
mov
sbbl
lea
xor
movl
lea
movl
mov
movl
inc
mov
cmp
movl
jb
movl
mov
add
subl
xor
sub
andl
movzbl
push
push
or
mov
xorl
mov
movzbl
push
call
test
movl
jne
addl
and
mov
movzbl
incl
push
movl
push
andl
mov
orl
mov
movzbl
push
call
test
je
mov
sub
mov
mov
mov
and
mov
notl
movsbl
adcl
add
subl
xor
sub
movl
cmp
je
mov
mov
adcl
add
xor
lea
mov
incl
jmp
xor
jmp
mov
add
xor
sub
mov
mov
mov
mov
mov
add
xor
sub
cmp
je
mov
mov
movzwl
mov
mov
mov
jmp
incl
jmp
mov
add
mov
mov
test
je
movl
mov
push
mov
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
add
xor
sub
mov
mov
mov
cmp
je
lea
mov
mov
add
mov
mov
mov
mov
add
xor
lea
mov
mov
mov
cmp
jne
mov
mov
add
xor
sub
mov
pushl
call
mov
mov
add
add
mov
or
cmp
jne
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
adc
inc
movb
push
sbb
orb
adc
mov
mov
adc
or
add
mov
xor
and
call
mov
push
mov
sub
mov
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
cmp
jne
andl
movl
adcl
call
movl
call
or
mov
lea
add
leave
ret
mov
mov
mov
movl
mov
mov
ret
push
mov
sub
movsbw
push
push
push
movl
mov
call
push
push
call
push
push
call
push
push
push
call
push
push
call
xor
inc
push
push
lea
push
lea
push
push
call
cmpb
je
xor
jmp
lea
mov
push
lea
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
call
mov
add
mov
xor
mov
sub
mov
movl
mov
mov
cmp
je
push
pop
jmp
mov
mov
add
xor
add
xor
lea
mov
movl
mov
mov
xor
add
adc
xor
xor
add
adc
movl
cmp
jne
cmp
jne
mov
push
mov
mov
mov
pop
cmp
jne
cmp
jne
mov
mov
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
pop
leave
ret
push
mov
sub
push
movl
adc
movl
push
movl
sbb
mov
mov
subl
push
not
mov
adcl
add
adc
mov
xor
movl
mov
sub
movl
cmp
je
not
mov
sbb
mov
xor
mov
add
movl
movzwl
sbb
movb
add
mov
sbbl
add
add
xor
orl
xor
adcl
sub
negl
sub
cmp
movl
je
mov
adcl
mov
mov
addl
add
adcl
xor
sub
movl
jmp
neg
mov
not
add
xor
inc
adcl
xor
sub
inc
mov
mov
inc
mov
movl
mov
mov
mov
mov
mov
cmp
jb
sbb
movl
addl
mov
mov
mov
sbbl
mov
andl
add
addl
xor
orl
lea
inc
mov
sub
movl
sbbl
movl
adc
mov
mov
add
add
andl
xor
andl
xor
orl
sub
movl
sub
movl
mov
movl
cmp
jae
add
movzbl
adc
mov
mov
mov
sub
and
mov
sbb
xor
add
mov
mov
xor
imul
add
xor
xor
add
and
add
xor
xor
mov
sbb
mov
mov
movl
mov
add
mov
div
test
je
mov
andl
xor
orl
sub
or
sub
jmp
addl
mov
sbbl
mov
orl
or
add
and
adcl
mov
mov
and
mov
adcl
add
add
xor
xor
sub
subl
sub
movl
mov
cmp
movl
jae
andl
add
and
mov
mov
sbb
xor
sub
add
mov
or
imul
adcl
xor
sub
mov
xor
mov
div
test
je
mov
xor
sub
or
sub
jmp
mov
mov
or
add
and
mov
cmpl
jne
pushl
pushl
mov
mov
pushl
call
mov
mov
mov
incl
incl
add
xor
sub
cmp
jb
mov
incl
incl
add
xor
sub
cmp
jb
mov
add
xor
sub
mov
mov
add
xor
sub
mov
mov
jmp
mov
add
pop
xor
pop
sub
pop
leave
ret
push
mov
push
movl
movl
movl
leave
ret
sldt
mov
sldt
mov
mov
ret
or
mov
xor
add
add
mov
sbbl
or
mov
movl
jne
add
mov
sbbl
mul
ret
xorl
push
adc
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
mov
sub
mov
notl
movl
movl
movl
andl
mov
xor
add
mov
xor
mov
movl
push
and
push
add
push
mov
add
addl
mov
xor
mov
subl
sub
mov
mov
mov
or
mov
xorl
xor
mov
mov
mov
mov
and
mov
adcl
mov
pushl
subl
pushl
addl
call
mov
and
mov
mov
mov
sbb
add
and
xor
addl
sub
movzwl
mov
mov
movzbl
mov
cmp
movl
je
and
mov
incl
mov
addl
add
xor
sub
mov
not
mov
mov
cmp
movl
jne
xor
andl
sbb
mov
incl
mov
or
dec
mov
sbb
mov
orl
movl
and
movl
add
movb
or
movl
mov
and
mov
addl
mov
mov
movl
mov
xor
mov
mov
adc
mov
incl
mov
mov
mov
movzwl
adc
mov
movl
movl
movl
mov
sub
mov
movl
movl
movl
orl
movl
sub
movl
movl
andl
movl
mov
addl
add
incl
mov
mov
xor
xor
addl
mov
mov
sub
add
adc
subl
xor
xor
add
adc
movl
mov
cmp
movl
ja
jae
pushl
mov
xorl
push
subl
push
subl
push
orl
call
and
mov
mov
sbbl
add
mov
movl
adc
xorl
mov
mov
mov
mov
sbb
sub
mov
push
pop
sbb
subl
add
movl
adc
mov
mov
not
mov
add
xor
adcl
sub
sbbl
xor
cmp
jne
movl
cmp
movl
jne
inc
pushl
pushl
add
pushl
adc
pushl
sub
mov
pushl
subl
pushl
andl
call
mov
mov
mov
xor
add
adc
add
adc
mov
mov
mov
xor
push
mov
sub
pop
sbb
mov
mov
add
adc
mov
mov
mov
mov
add
push
pop
adc
add
adc
xor
xor
add
adc
cmp
jb
ja
cmp
jb
lea
mov
mov
mov
add
mov
mov
mov
mov
or
jmp
push
call
lea
push
call
xor
push
push
call
push
call
push
call
push
call
push
push
push
push
push
push
call
push
push
call
push
call
push
call
push
call
call
call
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
add
mov
imul
mov
sub
add
movl
movl
mov
mov
imul
and
or
and
xor
xor
mov
sub
mov
mov
mov
div
mov
mov
add
or
add
mov
inc
mov
mov
mov
sub
and
imul
mov
sub
mov
xor
add
mov
and
imul
mov
add
mov
imul
xor
mov
div
mov
sub
mov
mov
sub
mov
imul
and
lea
cmp
jbe
pop
leave
ret
push
mov
sub
push
push
push
push
movl
or
pop
mov
addl
push
push
adc
call
push
mov
push
call
movl
mov
movl
mov
movl
push
mov
movl
mov
push
call
mov
mov
mov
mov
add
mov
adc
mov
mov
add
adc
mov
sub
push
sbb
push
xor
xor
push
push
call
mov
mov
sub
pop
sbb
pop
mov
mov
pop
leave
ret
push
mov
and
push
xorl
push
movl
movl
xorl
movl
movl
push
call
push
orl
push
call
sbbl
push
orl
call
push
adcl
push
movl
call
call
mov
lea
add
mov
pop
ret
push
mov
sub
movl
and
movl
sbbl
movl
orl
movl
movl
movl
movl
add
mov
xor
xor
or
mov
xorl
add
xor
adcl
sub
movl
cmp
movl
jne
mov
mov
or
mov
pushl
call
mov
call
mov
lea
add
mov
mov
mov
leave
ret
xchg
loopne
loop
ror
lret
xchg
sbb
in
mov
xchg
sbb
out
mov
ret
sbb
pop
sbb
lea
int
cltd
xchg
xor
mov
sub
cmp
in
sbb
fists
sbb
fstpl
push
sbb
pop
iret
fistl
push
pop
adc
rcl
xchg
sbb
jecxz
mov
jecxz
mov
out
mov
push
sbb
pop
pop
repz
pop
sbb
cltd
sbb
jnp
int3
int
sbb
adc
sbb
fsts
pop
pop
repz
sbb
ficomps
push
sbb
xchg
sbb
xchg
sbb
push
xchg
sbb
imul
lahf
jl
sbb
and
sbb
stos
push
pop
movsl
inc
xchg
sbb
jne
sbb
imul
sbb
add
lret
int3
les
rcr
xchg
sub
out
ret
fstpl
rcl
iret
das
cltd
and
stos
inc
int3
int
pop
pop
pop
into
iret
rol
mov
pop
sub
rcl
or
push
pop
push
rcl
int
sbb
ret
les
iret
push
push
lahf
ror
lret
ret
sbb
lds
into
iret
rclb
lods
lret
lret
int3
les
xlat
shll
rol
rcl
int
push
movsl
iret
iret
shl
cmp
test
sub
add
xchg
aas
pop
sbb
ror
ret
lds
lret
lret
int3
sbb
iret
iret
rol
lret
fisttpl
adc
test
ret
iret
iret
sarb
rorb
int3
mov
lret
dec
fnstsw
arpl
shlb
mov
subl
xchg
int
dec
jbe
insl
fwait
push
outsl
iret
rcl
data16
jo
pop
outsb
rcl
int
addr16
cltd
pop
jbe
iret
rolb
xchg
ja
iret
shlb
mov
into
dec
jbe
insl
fwait
push
adc
rcl
data16
jo
pop
adc
int
addr16
cltd
pop
jp
iret
rolb
xchg
jnp
iret
shlb
sbb
lds
lret
lret
int3
les
pop
mov
push
sbb
sbb
iret
iret
rclb
jns
xchg
sbb
xchg
sbb
push
dec
jbe
insl
fwait
pop
mov
fwait
pop
mov
fwait
pop
ja
imul
inc
add
rcl
dec
jns
imul
jo
pop
dec
into
iret
shlb
dec
xchg
sbb
jb
jb
sbb
push
push
into
iret
add
clc
sarb
movb
add
add
daa
xchg
adc
inc
pop
add
lret
sub
add
add
std
and
ret
xor
push
cmp
iret
fwait
pop
test
pop
rol
push
mov
lds
sarl
mov
rorb
lds
lret
lret
int3
push
iret
sbb
iret
iret
rol
push
int
into
iret
shl
lods
and
lret
jl
sbb
dec
lahf
int
into
shlb
int
aam
sbb
pop
rol
movsl
cli
rcl
lret
aad
pop
xchg
ret
sarb
sbb
lds
lret
lret
int3
rcrb
rorb
lds
les
das
mov
leave
test
rcl
bnd
int
jg
pop
rol
dec
mov
sbb
mov
pop
ja
int3
push
pop
pop
ror
into
ret
sbb
gs
sub
test
fisttps
or
cmpsb
fwait
jle
int
into
iret
rcrb
insl
adc
sbb
pop
out
fistpl
sbb
push
mov
lds
shll
shrl
ret
mov
jg
pop
rol
dec
mov
ror
into
sbb
mov
pop
pop
sti
jecxz
pop
jl
lret
loope
push
in
imul
test
fsts
cmp
lret
rorl
int3
jge
sbb
shrl
cltd
cs
pop
xor
lea
iret
or
cld
les
or
and
adc
insb
fistl
iret
rol
sbb
les
fwait
ret
div
jg
push
sbb
pop
negl
push
pop
out
mov
ficomps
ds
idivl
push
sbb
sbb
popf
es
flds
pop
mov
push
mov
rcl
shl
aaa
cmp
les
cmp
pop
fstpt
adc
lret
in
inc
jg
ret
mov
fimuls
sub
and
pop
inc
xchg
xor
stos
int
sbb
roll
and
inc
lret
int3
les
rol
jg
fistl
adc
lret
sbb
ficomps
in
jg
fistl
arpl
rcrl
sahf
dec
and
sbb
movb
les
repz
sbb
adc
sbb
lds
roll
lret
stc
lds
roll
test
int
push
daa
std
jl
sub
add
add
add
test
into
imul
and
jle
jg
roll
and
push
sbb
push
cwtl
cmp
iret
dec
testl
pop
and
lret
aad
je
rorl
into
iret
xchg
inc
sbbl
adc
test
and
rcr
lock
add
shrb
sarl
ret
sbb
pop
sbb
lds
sub
pop
lea
pop
ja
int3
les
bound
xchg
addr16
sbb
and
loopne
pushf
sub
imul
addr16
add
test
rcrl
fimull
jmp
out
mov
inc
dec
rcrb
xchg
insl
fisubl
frstor
es
adcb
push
and
imul
xor
cmp
in
pop
fistpl
push
push
add
mov
pop
rorb
xchg
cmp
int3
les
fildll
xchg
pop
mov
sbb
lds
and
pop
inc
ret
sbb
adc
xchg
imul
pop
out
adc
lcall
pusha
int
iret
push
sbb
push
pop
inc
fwait
pop
xchg
pop
inc
pop
push
push
jecxz
inc
mov
dec
inc
sbbl
rol
mov
test
dec
lea
dec
loopne
dec
hlt
es
sbb
inc
mov
repz
adc
movsl
xchg
adc
insb
rcrl
les
fwait
ret
div
jg
sub
add
ljmp
sbb
iret
fistl
ret
fldl
das
add
call
inc
pop
lods
int3
int3
int
sbb
jecxz
mov
out
mov
in
mov
jecxz
mov
out
mov
mov
mov
les
xlat
jg
sub
ret
cmp
add
dec
clc
into
into
iret
das
add
jle
test
fscale
sub
call
and
jge
jle
pop
pop
pop
ret
sbb
movb
sti
ror
lret
sub
cld
faddl
cs
and
jge
sub
addr16
ljmp
iret
jge
movb
pop
sbb
and
pop
jae
iret
rol
sub
add
pop
and
adc
int3
int3
int
mov
cmp
cmp
cltd
inc
sub
and
les
sub
and
lds
adc
add
ret
ror
into
imul
mov
rcrb
or
rcl
sarb
rcrl
ror
pop
inc
les
jge
mul
ror
lret
push
sbb
sbb
lds
lret
lret
int3
faddl
cs
and
jge
sub
cld
sub
and
adc
pop
iret
jge
sbb
lods
iret
das
cltd
and
int
sbb
lds
lret
lret
int3
les
sub
add
sub
and
jle
insb
call
sbb
pop
pop
jecxz
sbb
pop
sbb
add
pop
and
jge
sub
cld
sub
and
adc
out
iret
jge
sbb
ret
pop
adc
into
iret
shrb
add
aam
dec
or
lret
sbb
dec
cld
into
into
iret
rcrl
into
imul
mov
into
pop
sbb
lds
and
cmp
sbb
jg
ret
dec
cli
rcl
lret
sub
add
adc
and
jle
insb
call
jo
cltd
cwtl
ror
mov
ret
sbb
rcrb
imul
das
xchg
imul
mov
jg
pop
cwtl
int
in
call
pop
xchg
rorb
fiaddl
vmaxpd
aas
and
jnp
mov
iret
movsl
into
lret
ret
fcmovne
lret
movsb
int
iret
fdivr
hlt
jmp
fmull
into
std
jmp
lds
sbb
and
cmp
xchg
push
sbb
sahf
iret
clc
fcompp
int3
int
pop
mov
lret
int3
ret
sub
dec
fisttps
clc
dec
clc
fsub
add
filds
adc
cli
fmuls
jb
ret
cmp
int3
jle
xchg
ror
lret
int3
jge
shrb
ret
and
pinsrw
cmc
ret
jmp
or
lret
ret
xchg
loope
pop
in
int
fists
push
push
lcall
add
mov
int
shll
lcall
fmulp
lds
imul
push
pop
rcr
add
outsb
cmp
test
fisubl
decb
xchg
testb
xchg
xorl
sub
orl
imul
fcmove
into
insb
and
dec
fmulp
lret
imul
add
shlb
repz
addr16
aas
pop
call
ror
lahf
ret
push
shlb
int
pop
clc
jecxz
int3
int
insb
or
pushf
stc
mul
ror
lret
ret
push
imul
push
pop
jg
ret
addb
test
ret
push
test
push
push
xchg
jb
int3
int
xlat
filds
lds
jle
gs
repz
into
iret
insl
inc
ret
lds
jmp
and
fsubrs
sbb
out
shll
scas
int3
int3
int
inc
pop
repz
push
add
xchg
mov
iret
shl
cmp
fsts
arpl
mov
push
test
and
js
lret
int3
les
int
cli
pop
push
xchg
xlat
aas
pop
sahf
iret
ror
pop
sbb
pop
in
insb
fisubs
test
push
xchg
nop
icebp
aam
mov
jg
rol
fdivp
and
iret
rol
xchg
and
insb
out
pop
jg
push
xor
jmp
fistps
out
int3
std
fistps
hlt
fdivrs
out
outsb
dec
mov
es
sar
jp
ficomps
sbb
and
fdiv
mov
out
js
es
outsb
aam
sbb
aaa
je
jl
hlt
movsl
sbb
ror
ficompl
xchg
push
sbb
mov
fldenv
and
pop
les
cmpsb
int
iret
mov
push
repz
jge
loope
iret
rcll
out
ret
cmp
xchg
fadd
push
rol
lcall
push
shl
push
lea
lahf
mov
adc
push
push
roll
fistl
push
ss
pop
mov
iret
shl
and
ret
arpl
ret
lds
push
lea
ret
and
xchg
je
jb
cs
outsb
test
dec
aam
iret
ror
imul
test
imul
test
rcrb
insl
loop
fwait
les
out
fcmovu
sbb
fadds
mov
sbb
pop
sbb
and
int3
dec
aad
ror
int3
imul
cmpl
js
xlat
pop
jle
jo
mov
inc
int
cmp
xchg
sub
mov
mov
inc
inc
popf
add
inc
ret
into
xlat
ror
and
mov
fdivrl
or
mov
fs
jle
sub
pop
jns
xchg
fisttpl
pop
cmp
pop
loopne
lea
int
xchg
ss
push
and
pop
jmp
add
mov
lea
mov
cltd
sbb
loope
mov
cltd
sbb
loop
aaa
lahf
push
test
cmp
sbb
movl
mov
mov
xchg
ret
je
fstps
rol
sbb
lds
rorl
pop
lret
xchg
int
add
pushf
push
adc
cmpsl
cmp
mov
sub
cmpsb
cmp
lret
and
mov
lea
dec
lcall
and
mov
lea
ret
insb
jg
xchg
dec
fwait
dec
test
popa
int3
sub
es
sbb
fimull
int
push
mov
int3
int
shlb
int
xor
subl
lret
ret
lds
cs
shll
hlt
jle
iret
rol
sbb
xor
xchg
sub
addr16
iret
push
imull
inc
lret
int3
les
jl
pushf
dec
xchg
movsl
aaa
sbb
aaa
cmp
les
push
lds
out
sahf
inc
sbbl
ret
fisttpl
into
iret
dec
mov
int
adc
into
mov
pop
fwait
xor
push
roll
fstps
sub
aam
mov
lds
dec
into
lds
add
add
or
addb
push
adc
pop
les
cmp
pop
aas
push
cmp
ret
pop
scas
ror
lret
ret
mov
es
rorl
ds
subl
rcr
xorb
in
les
faddl
ror
into
iret
jg
ret
mov
lea
ljmp
pop
sahf
loop
add
in
push
cmp
iret
lds
adc
and
pop
sbb
lds
mov
pop
ffreep
sbb
fiadds
sub
dec
mov
jne
popa
fiaddl
sub
ficomps
lds
cwtl
es
sbb
test
and
ret
sbb
inc
stos
lret
aaa
dec
nop
int3
or
sub
dec
xchg
sub
fnstenv
cld
iret
adc
add
pushf
push
insl
cmp
sbb
pop
pop
fcmovnbe
pop
adc
addr16
les
aam
add
rol
dec
into
aas
out
rcrl
pop
sbb
fmulp
xorb
jo
int
ret
orb
ss
sbb
xchg
sbb
rcl
ror
ret
lds
dec
fiadds
sub
rol
add
insl
ret
mov
push
inc
imul
push
orl
clc
faddl
cs
add
and
test
pop
clc
rcl
rol
jo
xchg
dec
test
ret
andb
or
or
shrl
iret
push
jne
sub
es
sbb
fimull
iret
sarb
pop
mov
iret
ror
sbb
mov
pop
dec
int3
int3
int
sbb
rcrl
into
ficomps
push
sbb
rcrl
les
ret
mov
fiadds
sub
fistpl
ret
lds
fstl
mov
fiadds
sub
rcrl
outsw
sahf
jl
imul
addr16
hlt
mov
pop
pop
into
into
iret
lret
les
jmp
insb
xchg
sbb
iret
inc
ja
cltd
sbb
mov
in
fbld
mov
xchg
cwtl
sbb
out
ss
cwtl
sbb
ror
into
iret
cwtl
sbb
out
ss
cwtl
sbb
ror
into
iret
cwtl
sbb
out
mov
cwtl
sbb
es
mov
cwtl
sbb
ljmp
call
sbb
out
mov
ret
pop
pop
jecxz
sbb
mov
lds
roll
lret
cmp
movnti
int3
int3
int
popf
jp
push
ja
push
sti
dec
out
ret
es
in
cmp
jbe
bound
or
movl
rorl
xchg
mov
imul
jp
iret
push
les
shrl
push
cmpb
xlat
int
push
sbb
sbb
push
adc
xor
lret
ret
sbb
movb
sbb
roll
pop
inc
ret
xorb
adc
ret
cltd
sysenter
lret
lret
int3
int
dec
pop
inc
ret
addb
stos
int3
int3
int
pop
mov
lret
int3
into
rcll
rol
sbb
jae
jb
fwait
inc
iret
rcr
loope
rcl
lret
in
dec
mov
in
mov
in
cmp
ror
xchg
sbb
in
cmp
ror
ret
push
sbb
mov
cmpsl
sub
push
sbb
or
sbb
sbb
sti
jbe
mov
or
or
mov
pop
pushf
fisttpll
push
add
arpl
push
push
stos
pop
xchg
fld
lock
jne
rolb
pop
fwait
js,pt
jne
jne
sbb
ret
fwait
js
sbb
push
ror
rorb
into
iret
rcrb
inc
je
pop
gs
sarl
pop
push
int
iret
pop
mov
jp
pop
push
rcl
rol
or
jbe
pop
push
ror
into
jbe
orl
mov
sbb
jg
movsl
ja
pop
jnp
mov
sub
fsts
inc
stos
mov
xchg
xchg
xchg
je
or
cmp
lret
jecxz
fcom
lret
fiaddl
rcl
int
mov
lds
cld
sub
ret
pop
inc
shlb
pop
out
addr16
sbb
out
fimull
loope
aas
test
sbb
xchg
test
into
jns
or
xor
rorb
push
into
iret
pop
fdivr
iret
rcl
movl
rcrl
jbe
bound
fldcw
sbb
mov
fisttps
out
cmp
rcl
int
xchg
iret
jp
add
ror
dec
loop
xlat
iret
rclb
fsts
mov
les
sub
ret
jo
arpl
insl
xchg
rcrb
rcl
push
sbb
les
jecxz
lret
lret
fstpl
push
int
rol
int3
cld
int3
into
iret
les
out
xchg
ret
lret
mov
ror
xchg
inc
sbbl
lea
pop
mov
das
xchg
and
cmp
pop
jmp
iret
rol
sbb
les
int
into
ficomps
cmp
fcmovnb
sbb
rorl
lret
pushf
sub
ficoml
sbb
imul
cld
jnp
sbb
cwtl
sbb
jo
sbb
insl
cltd
sbb
mulb
pushf
sub
and
cmp
adc
imul
push
and
inc
test
lods
into
into
pop
mov
pop
fildll
pop
repz
ret
mov
push
pop
pmullw
lods
into
sbb
cwtl
les
sbb
cwtl
and
ss
int3
push
push
jecxz
loop
pushf
movsl
fcom
lret
pop
fcmovbe
ror
pop
mov
into
iret
shlb
jbe
pop
xlat
ror
into
pop
lea
iret
rcl
cmpsl
xchg
lret
int3
jns
aas
iret
rcl
pop
sahf
xchg
ret
push
xchg
inc
int
iret
ret
pop
mov
ror
into
rcrl
jns
push
inc
iret
rcl
pop
nop
inc
jne
pop
xor
ror
pop
jns
into
cmpsl
fisttpl
pop
xor
into
iret
movsl
mov
ror
jne
pop
xor
ror
mov
jp
pop
sub
rcl
pop
iret
fistpl
lea
jg
push
xlat
iret
rcl
jg
pop
das
ret
dec
mov
ror
jne
xchg
ds
int
pop
dec
rcl
roll
adc
pop
ds
iret
sti
add
int
ret
sbb
rolb
pop
xchg
dec
nop
cmp
scas
lret
push
les
rcr
lahf
sub
add
xor
add
xor
dec
mov
lret
sbb
sti
pop
cltd
dec
pop
sbb
into
iret
jp
pop
insb
rcl
rol
adc
pop
js
iret
rcrb
dec
je
pop
jns
rcl
mov
pop
jp
into
iret
pop
mov
jp
pop
je
rcl
lds
inc
ret
std
js
int
into
iret
rol
add
enter
rcrb
insb
jbe
lret
popa
ror
into
sarl
pop
pop
iret
rcl
les
adc
int
std
ja
int3
or
iret
pop
pushf
sub
rcl
rol
jnp
jbe
lret
ror
into
pop
fstcw
movl
lret
ror
jne
ret
ror
pop
lea
pop
lds
iret
rol
pop
pcmpeqb
rcl
rol
and
mov
filds
sub
ret
shlb
jmp
movsl
aam
or
or
add
jmp
push
cmp
and
loop
add
les
cmpsl
rcrb
out
cmpsl
fisttpll
das
add
pop
sub
movb
test
rorl
and
fisttpl
mov
and
mov
filds
sub
and
fimuls
sub
js
into
ret
jp
sbbb
ljmp
pop
std
jne
adcb
and
std
ja
test
rcll
mov
jbe
xorl
xorl
subl
cmpl
mov
cli
jne
cmpb
mov
pop
sahf
dec
jne
cmpb
mov
push
xorl
inc
mov
sbb
pushf
ja
mov
xchg
sbb
push
xlat
and
xchg
sbb
je
rcrl
jns
push
xor
rcl
xchg
je
pop
and
rcl
mov
pop
and
into
iret
pop
mov
jp
pop
push
rcl
rol
sbb
jbe
pop
pop
ror
into
pop
lea
iret
rcl
les
sbb
pop
sub
ror
pop
mov
into
iret
rol
sbb
and
mov
int
iret
movsl
fsts
lret
pop
push
rcl
int
fcomps
pop
sbb
rcl
test
mov
pop
push
into
iret
shlb
jbe
pop
sbb
int
rcrl
jns
push
adc
rcl
sbb
fstpl
cmpsb
cmp
scas
lret
and
lcall
fadds
and
sub
pop
fwait
inc
dec
or
fildll
int
shrb
insl
fstl
sbb
insb
jnp
into
fimull
sub
fiadds
lea
fisttps
rcll
js
nop
adc
daa
rol
mov
fisttpll
das
add
cld
ja
xchg
lea
cmpsb
mov
rcll
or
sub
and
repnz
adc
or
dec
dec
or
rclb
fsts
fildll
rcrb
jle
sbb
into
sbb
cwtl
es
pusha
int3
jl
pop
aaa
ror
into
jl
imul
pop
ror
std
pop
fwait
dec
push
sbb
nop
cmp
sub
lds
into
rcl
pop
sbb
cltd
iret
ljmp
rol
pop
hlt
iret
rcl
mov
ficoms
je
addr16
sbb
ret
ror
into
jl
and
ret
lds
rcl
rorl
lds
xchg
aaa
mov
movsb
ret
je
addr16
adc
inc
pop
mov
lret
int3
les
fwait
push
jecxz
rcl
in
xor
ror
into
iret
rcl
lcall
lcall
movb
add
add
xchg
jle
insb
dec
int
mov
cltd
aas
int3
int
sbb
roll
xlat
shll
jg
movsb
mov
int
shrb
idivb
push
mov
aam
pop
adc
rclb
lds
into
iret
int
ret
addb
adc
cwtl
sub
pop
fs
xchg
insb
ds
iret
iret
rclb
rol
pop
jecxz
sbb
shrb
into
imul
push
shll
hlt
movsl
call
fmul
rcl
pop
sub
dec
iret
insb
inc
ret
pop
addr16
les
ror
into
ret
subb
adc
inc
shrb
shll
hlt
cwtl
sti
rcl
insl
insl
jae
pushf
xor
xchg
loopne
loop
mov
fcmovnb
dec
scas
rcl
lret
int
pop
inc
lret
lret
int3
pop
or
pop
fmul
int3
int
jmp
int
pop
push
lret
int3
int
popl
test
into
pop
xchg
mov
inc
pop
lock
int3
int
mov
iret
fwait
scas
int
into
pop
jge
lret
ret
add
cmpsl
jge
pop
test
cmpsl
adc
push
sahf
int
iret
lds
inc
mov
notl
mov
dec
ret
ds
jl
lret
fdivr
inc
stos
push
cmp
addr16
test
jg
pop
push
push
rcrl
in
ds
xchg
aas
test
inc
inc
movsl
test
aad
daa
mov
rol
dec
iret
ret
adc
insb
aam
jno
iret
xor
cmp
stos
mov
into
sbb
pop
sbb
rcr
shll
push
out
icebp
cmpsl
push
inc
inc
stos
jo
ret
and
sbb
fst
pop
jg
and
roll
cmp
sbb
pop
mov
fmull
pop
test
and
fldl
jno
into
iret
jo
cs
or
fisubrl
jno
cltd
mov
loope
jecxz
roll
inc
mov
push
mov
fwait
pop
jecxz
dec
mov
xchg
ficoml
lret
xchg
cmp
scas
lret
push
sbb
pop
iret
ret
sbb
sbb
lds
xchg
sbb
mov
sbb
les
ror
lret
fistpl
adc
inc
pop
xchg
fmulp
lret
ret
adc
sbb
add
pop
adc
ror
ret
lds
lret
faddl
add
add
mov
ret
int3
les
addl
inc
sbbb
or
or
ljmp
dec
sbb
gs
xchg
and
imul
call
xchg
sub
inc
cmp
pop
sub
ror
ret
lds
fsts
pop
pop
aas
ret
sbb
xchg
inc
fimull
jg
push
orb
test
ret
fldl
das
cld
fiaddl
and
or
lock
movups
push
push
xor
adc
std
sub
fcoml
inc
pop
rol
pop
iret
cmc
idivl
push
sbb
lcall
sbb
lds
lret
lret
int3
sarb
sbb
lds
lret
lret
int3
sarb
fwait
pop
jmp
mov
jmp
cmp
fildl
sub
sbb
adc
sbb
lds
cltd
fimuls
sub
idivl
ret
sbb
push
test
int
or
or
lahf
decb
cmp
sbb
fsts
pop
pop
repz
sub
aas
aas
push
data16
int
sbb
fstpl
adc
imull
ret
lds
ret
pop
shl
repnz
sbb
repz
int
lcall
lcall
sbb
cwtl
es
repz
int
movb
es
push
sbb
adc
std
sub
and
pop
test
ret
lds
and
fcmovbe
pop
pop
fcmovnb
sbb
rclb
inc
les
rol
jg
fistpl
adc
into
ret
fstpl
mov
xor
mov
les
ret
dec
cli
rcl
lret
xchg
jg
insl
repnz
jl
in
pop
aas
fistpl
movb
iret
rcrb
fidivrl
insb
clc
int
aam
sbb
pop
iret
ret
addb
sub
pop
jecxz
dec
lds
ret
pop
shl
repnz
sbb
loope
ret
addb
sub
xchg
roll
loop
addl
testb
or
push
push
sbb
nop
lock
push
fcoml
clc
es
inc
pop
ds
iret
rol
sbb
roll
lret
and
clc
iret
les
rcr
xchg
sub
faddp
sbb
imul
pop
jecxz
fadd
sbb
fsts
daa
cltd
jb
fwait
inc
iret
rcr
loope
lcall
lcall
sbb
inc
mov
mov
sbb
lds
inc
sbbb
sahf
mov
cs
mov
lcall
ror
ret
lds
arpl
mov
call
dec
mov
les
outsl
jecxz
rcr
popf
das
jecxz
lea
sub
inc
pop
xor
int3
int
push
call
pop
scas
ror
lret
ret
push
jne
and
lds
icebp
sub
and
push
push
or
xlat
cmp
iret
dec
iret
fcmovnbe
sub
push
jmp
inc
mov
testl
sub
pop
pushf
out
out
int
jb
push
xlat
cmp
iret
lds
aam
jae
outsl
mull
lock
je
rcll
test
aas
int
pop
push
bnd
lds
lds
iret
das
jecxz
rclb
pop
dec
aas
aas
test
nop
jecxz
push
push
cmc
lds
jo
cs
cmc
adc
push
add
push
jecxz
outsl
repz
sub
out
push
push
faddp
jno
fst
das
jecxz
into
adc
insb
fadd
push
add
jae
shrl
rolb
sbb
rcll
out
sbb
push
out
jno
fstpl
pushf
xor
shrb
les
repz
fistl
repnz
push
into
ret
fst
das
jecxz
into
push
jae
pop
in
ds
ss
rol
sbb
je
faddp
pop
iret
fistpl
xchg
outsb
xchg
pushf
xlat
rolb
repz
lret
xchg
sbb
in
mov
xchg
sbb
out
mov
ret
sbb
mov
pop
iret
fists
iret
das
xchg
xchg
cmp
sbb
lds
fsts
pop
pop
xchg
ret
sbb
movb
add
sbb
in
mov
ret
sub
out
add
jmp
pop
out
inc
mov
ret
mov
cs
push
sbb
sbb
ljmp
movl
or
leave
mov
adc
mov
push
sbb
pop
xchg
ds
int
iret
rol
addb
inc
pop
out
int3
int
test
xchg
aas
pop
in
ror
ret
lds
into
iret
push
stc
xor
int3
int
sub
pop
xchg
fxch
iret
jg
fildl
sub
addl
xlat
filds
sbb
xchg
inc
pop
mov
sbb
in
add
fiadds
sub
and
test
adc
push
scas
ror
lret
ret
lds
adc
out
ret
iret
iret
rol
inc
push
addb
addr16
dec
cli
rcl
lret
stc
mov
out
pop
sub
es
insl
cmpb
xor
test
rorl
pop
jg
xchg
ficompl
inc
jg
clc
add
int3
int
sbb
roll
lret
aad
sbb
int
mov
imul
repnz
test
ret
fstl
ret
dec
push
and
adc
movsl
jnp
faddl
add
add
inc
push
add
iret
jg
fildl
sub
cmp
cmpsb
jl
fldl
das
cld
and
fmull
push
lret
into
iret
rol
mov
pop
pushf
xlat
pop
xchg
jecxz
lds
push
rcrb
xchg
ret
fistpl
insb
aad
std
cmp
ficomps
fcmovu
sbb
fcmovne
rol
mov
les
out
adc
fisttpl
sub
add
add
rcr
adc
ficompl
inc
jg
clc
cmc
fcmove
int
sbb
roll
mov
fildl
sub
repnz
adc
xchg
sbb
sbb
fcomp
fwait
sub
dec
push
cmp
push
cmp
rol
jg
ret
mov
ret
adc
sbb
lds
lret
lret
int3
ret
mov
mov
fmull
or
or
push
xor
ds
jmp
iret
rol
sbb
xor
push
add
int
sub
and
int
into
sbb
cwtl
es
pop
js
int
sbb
mov
les
rclb
mov
mov
sbb
subb
mov
les
int3
int
fiadds
iret
shlb
xchg
cmp
ror
jne
add
mov
int
aam
push
xlat
fidivl
mov
rcl
int
jmp
push
pop
adc
insb
rcl
rcrb
push
push
sbb
les
lret
sarb
sbb
push
sbb
int
push
inc
mov
iret
rcl
pop
int
into
iret
rcrb
iret
int3
inc
mov
rcl
shlb
jnp
int
daa
inc
mov
iret
rcl
mov
mov
xchg
pop
ror
mov
mov
into
iret
rcrb
iret
mov
enter
rcrb
shll
dec
lcall
pop
test
inc
mov
in
mov
ret
int
iret
dec
vphaddudq
xlat
aaa
iret
rcl
maxps
inc
push
lds
rorl
into
iret
lds
adc
xlat
ret
xorb
pop
test
int
int3
cmp
into
iret
mov
adc
sbb
jp
sbb
lds
lret
lret
int3
rcrb
sbb
sbb
fists
pop
sbb
lds
fsin
sub
and
mov
xchg
out
ret
adcl
loop
xchg
cmp
xorb
addb
mov
iret
rclb
cmp
out
lds
into
iret
jp
adc
imul
jg
ret
push
mov
mov
lea
fnstcw
repnz
push
sbb
addr16
jl
imul
in
rcrb
inc
push
test
into
movb
mov
jmp
cmp
iret
shll
iret
push
test
mov
mov
int3
int
sbb
rcll
into
iret
mov
dec
rcl
orl
shrb
inc
adc
xor
dec
cld
lret
lret
int3
ret
mov
push
shrl
jge
jle
pop
das
ret
dec
push
rcl
lret
fcompl
and
jge
sbb
out
mov
les
dec
fwait
dec
test
lret
aaa
sbb
rorb
ss
iret
jp
jnp
les
aaa
movl
sub
into
lret
sbb
pop
adc
sbb
sbb
les
dec
movl
xor
mov
fists
aas
push
sbb
sbb
sbb
pop
adc
push
addb
push
add
imul
ret
in
das
mov
je
popf
xor
mov
loope
stos
adc
xchg
rcrb
inc
xchg
out
mov
pop
shrl
mov
pusha
ds
sub
push
lds
jb
sub
imul
pop
cmp
ffree
lret
cmpsl
push
iret
ret
xchg
sub
dec
loope
ss
int3
adc
insl
xchg
sub
sahf
ror
mov
loop
in
xchg
sbb
jns
ror
xchg
sbb
frstor
lret
in
int
ror
xchg
sbb
outsl
aas
fmul
xchg
sbb
cli
outsl
ror
xchg
sbb
nop
inc
ror
xchg
sbb
jmp
sbb
xchg
sbb
jns
lret
loope
adc
xchg
sbb
hlt
jl
lret
shll
and
or
fimuls
in
xchg
dec
iret
rorb
fldenv
iret
push
fldt
jo
into
push
xchg
arpl
int3
int
sbb
cli
or
cltd
sbb
gs
int
sbb
inc
cmp
int
sbb
rorl
lret
fcompl
jmp
sti
sub
iret
into
iret
daa
cli
push
mov
lds
fstps
aam
mov
filds
aas
pop
fcmovnb
mov
cmp
sbb
repnz
lcall
cld
les
sti
filds
xchg
icebp
sub
iret
daa
cli
fimull
shrl
push
pop
push
call
ds
sbb
dec
in
jl
lret
jmp
or
std
sub
lret
cmp
dec
loop
sbb
rclb
add
ror
outsb
outsb
xchg
pushf
inc
rolb
sbb
loop
pop
lret
sbb
jge
lret
sbb
test
lret
sbb
pop
or
mov
lret
sbb
imul
out
sbb
lret
sbb
je
testb
lret
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
xchg
sbb
stos
inc
lret
sbb
push
dec
lret
sbb
movb
iret
and
inc
enter
aas
mov
adc
and
sbb
cmp
inc
mov
cltd
ret
mov
es
rorl
mov
rcl
ljmp
dec
ror
and
les
test
inc
mov
pop
xlat
clc
xchg
lret
cwtl
sbb
lret
es
int3
cwtl
sbb
mov
lret
int3
cwtl
sbb
push
outsb
lret
int3
cwtl
sbb
ror
lret
int3
les
das
or
jmp
ret
lds
cltd
ret
mov
es
rorl
lret
fwait
ret
pop
fsubs
stos
rcll
or
sbb
les
loop
mov
cmp
pop
flds
sbb
int
sbb
shll
or
out
rorl
int
mov
cwtl
sub
rcl
fists
mov
cmp
movsl
jge
int3
and
fisubl
lcall
or
in
lea
and
les
test
inc
mov
add
ds
and
insl
jae
pushf
xlat
rolb
setnp
mov
add
mov
sbb
add
mov
sbb
out
cmp
or
add
lahf
push
sbb
mov
cmp
sbb
mov
int3
push
sbb
mov
call
lret
sbbl
call
mov
enter
push
mov
push
jns
loope
mov
dec
dec
nop
jo
arpl
out
jg
fistl
push
ret
and
cmp
stos
int3
les
push
cmp
scas
lret
aad
inc
adc
enter
push
mov
loop
dec
inc
push
inc
movb
pop
inc
inc
ret
jb
loopne,pn
inc
sbbb
out
fldl2t
sub
ret
shl
jg
adc
insl
sahf
shrl
and
outsl
aas
rcll
movb
push
fwait
inc
sbbl
and
jle
adc
les
sub
and
dec
cltd
dec
sbbb
faddp
ret
adc
insb
in
pop
in
inc
pop
sub
int
outsl
outsl
jne
sahf
ror
mov
loop
in
ret
cltd
sbb
loopne
mov
cltd
sbb
loope
mov
push
sbb
cwtl
sbb
out
inc
mov
cwtl
sbb
xchg
pop
faddp
jae
jg
xchg
inc
test
fyl2x
fildl
cmpsb
cmp
mov
xchg
xchg
cmp
stos
int3
sub
es
xchg
or
test
and
add
shrl
and
pop
add
push
in
adc
xor
add
aam
cwtl
and
sub
and
and
and
sub
out
fildl
sub
into
and
push
jecxz
push
in
adc
add
xchg
ret
div
jg
les
fildl
fst
das
loop
xchg
and
push
or
sbb
movb
sbb
fcmove
rcr
loope
mov
xchg
test
loope
int3
int
sbb
rcrl
sub
pop
sbb
lds
dec
cltd
mov
dec
fldt
fstl
out
test
mov
dec
sub
add
pop
lea
out
pop
addr16
sbb
push
jb
lcall
pop
jne
xchg
sbb
push
jno
cltd
sbb
loopne
aaa
lahf
push
je
rorl
je
push
js
or
sub
sub
test
jo
arpl
decl
pop
ror
inc
pop
stos
ror
lret
pop
rolb
movsb
lret
les
dec
or
add
je
sub
rcrb
int3
sub
es
hlt
lea
iret
das
xchg
pop
ljmp
xchg
loope
cmpb
or
sub
or
jecxz
cwtl
mov
imul
push
mov
mov
pop
dec
call
mov
je
sub
pop
push
rcrb
int3
sub
es
rorl
mov
push
pop
or
das
cli
pop
out
and
loope
cmpb
or
sub
pop
out
lret
mov
push
push
xorl
je
rorl
cmpsl
movl
push
cltd
fisttpll
das
cli
push
mov
fwait
pop
fcmovnbe
dec
mov
ret
push
lcall
popf
dec
xchg
aaa
sbb
lock
push
loope
cmp
or
sahf
xor
stos
int
mov
rorl
add
popf
out
push
iret
inc
mov
push
mov
pop
jne
ret
lds
or
xchg
dec
xchg
and
push
mov
in
movl
sbb
rcrl
dec
cltd
inc
sbbl
dec
loop
cmp
imul
cltd
lds
add
pop
xchg
ret
mov
int3
sub
pop
out
lret
pop
or
pop
outsl
sti
sub
adc
fcmove
into
insl
fadd
mov
negb
mov
jo
fmull
push
lahf
inc
sbbl
dec
in
cmp
lret
push
mov
push
punpckhwd
fwait
cmp
scas
lret
cmc
lds
or
out
dec
lcall
repnz
pop
xchg
push
jb
loop
jno
adc
inc
sbbl
out
fisttpl
loop
les
ret
mov
rcrb
dec
popf
dec
sbbb
or
xor
stos
int
mov
push
jne
ret
fisttpll
das
cli
ror
les
popa
ret
push
mov
rolb
mov
movl
cwtl
inc
pop
int
lret
jb
fimuls
dec
lcall
sub
fdivr
push
out
aaa
stos
int
mov
adc
imul
cmp
stos
int3
push
mov
movl
or
in
dec
into
aas
mov
push
mov
push
je
rorl
or
xchg
dec
test
and
push
mov
in
out
sbb
in
mov
int
hlt
rcrb
sti
push
cwtl
inc
sbbb
or
cmp
push
inc
test
daa
pop
in
sub
negb
push
sub
fiadds
roll
pop
lret
sub
dec
clc
cmp
stos
int3
adc
outsb
jae
shll
lods
iret
pop
jg
ret
cmp
jne
sub
push
orl
mov
test
add
jno
push
test
push
jo
les
adc
aas
test
and
in
and
aam
xor
sbb
lret
sub
sbb
sbb
cmp
mov
mov
mov
fidivrs
lods
push
cld
ret
fldl
push
mov
les
ret
mov
lds
lea
loopne
dec
hlt
or
jo
arpl
rol
xchg
or
sti
lds
pop
iret
das
std
dec
cmc
aaa
cmp
jo
lds
ss
int3
push
cmp
jg
ret
jb
add
or
in
dec
into
aas
mov
push
xor
and
jae
pop
add
cmpsb
dec
test
and
push
and
fadd
test
sbb
in
test
dec
mov
pop
iret
das
std
sbb
sbb
push
stc
xor
stos
int
add
roll
jo
push
inc
xor
add
mov
rcl
rol
outsl
stos
ret
mov
int3
sub
pop
out
lret
jae
data16
pop
or
push
je
sub
adc
inc
pop
push
iret
into
iret
push
and
loope
pop
sub
into
iret
shrb
shll
hlt
int
rcl
insl
insl
jae
pushf
xlat
rolb
das
fmul
lret
xchg
sbb
in
mov
xchg
sbb
out
mov
mov
mov
xchg
mov
lds
test
fists
iret
das
xchg
xchg
cmp
sbb
cltd
sbb
call
sbb
add
fistps
int3
int
cwtl
pop
out
and
fsin
sub
and
inc
mov
ret
sbb
movb
add
xchg
and
xchg
addr16
sbb
fstps
pop
pop
jecxz
sbb
jg
pop
in
rclb
call
adc
push
shr
rcl
pop
out
adc
fwait
sub
idivl
xchg
aaa
cmp
sbb
ficomps
push
sbb
xchg
sbb
loop
mov
ja
test
rcrl
faddl
add
add
cmc
push
sbb
rcrl
ret
push
test
addl
sub
pop
test
ret
lds
sub
and
rol
ror
ret
sub
ret
sub
add
std
rcrl
idivl
push
sbb
sbb
cwtl
movb
xchg
fildl
ret
lds
and
ret
sti
jg
fistpl
cltd
outsb
sub
jbe
cwtl
xlat
int3
mov
jecxz
pop
aas
pop
loope
mov
or
inc
push
lcall
push
xchg
int
iret
inc
movsl
pop
sub
rorb
xor
shrb
xchg
dec
mov
in
test
pop
js
int
cwtl
data16
adc
jmp
arpl
ret
iret
shrb
xchg
dec
mov
fldl
test
ret
ret
inc
je
jno
js
mov
push
xchg
inc
aam
int
push
add
ret
jb
inc
stos
rorb
xor
imul
aad
cmp
sbb
lret
jns
loop
xchg
iret
jp
shlb
add
pusha
add
sbb
jp
adc
adc
jecxz
rcrl
pusha
add
jae
inc
movsl
add
iret
insb
dec
sbb
add
pop
js
iret
shrb
xchg
fwait
iret
jg
dec
mov
fcom
lret
dec
testl
cmp
mov
ficomps
jno
mov
loopne
icebp
call
cmp
ret
sbb
sbb
pop
fwait
rcll
ror
push
sbb
lret
int3
push
sbb
int
pop
sbb
into
iret
rclb
mov
pop
aas
ror
lret
push
sbb
int3
int
sbb
mov
iret
pop
pop
inc
push
mov
ror
ret
imul
push
push
or
push
add
push
repz
pop
jmp
add
mov
sbb
rcl
int
mov
pop
jnp
xor
pop
lret
dec
sbb
sub
pop
cs
mov
rorl
add
push
jp
pop
mov
into
lds
roll
sub
jbe
bound
rcrl
ljmp
inc
sbb
imul
gs
pop
lea
int
sbb
addr16
out
dec
cmp
pop
orl
daa
push
js
xor
ret
lds
lret
sub
push
arpl
pop
rcrl
ljmp
roll
sub
sub
bound
roll
cmp
rclb
in
ds
mov
sbb
les
push
xor
mov
ret
fstpl
pop
cmp
lahf
push
sbb
les
dec
fisttps
push
mov
push
sbb
adc
sub
push
loop
in
bnd
inc
stos
inc
or
push
inc
insl
mov
jl
imul
lock
jno
push
sbb
push
push
rol
adc
xchg
out
add
or
adc
dec
int
inc
mov
into
iret
pop
mov
rcrl
push
inc
sbb
pop
push
aam
imul
outsl
out
push
sbb
pop
pop
jecxz
lds
cltd
jb
fcmove
rcr
les
shll
sbb
rcl
push
mov
int
cs
and
outsb
inc
lret
nop
mov
fxch
mov
int3
int3
int
out
xlat
test
into
sub
xor
int3
and
fcom
lret
into
pop
nop
ficomps
fiaddl
fstl
js
lahf
repnz
rol
push
into
into
iret
ja
xchg
in
pop
enter
mov
xchg
loop
dec
vphaddudq
fmuls
sbb
inc
dec
call
int
pop
ret
int
lcall
jecxz
lret
xchg
inc
inc
inc
dec
fwait
pop
mov
dec
dec
fwait
pop
xchg
dec
dec
dec
push
fwait
pop
xchg
dec
push
push
push
fwait
pop
call
push
pop
fwait
pop
sti
push
pop
pop
pop
fwait
pop
pop
pop
pop
gs
pop
add
imul
insl
outsl
fwait
pop
jmp
outsl
jno
fwait
pop
divl
jne
fwait
pop
repz
jns
fwait
pop
fistpll
jge
fwait
pop
xor
cmp
cmp
pop
jecxz
cmp
xor
mov
cmpsb
sbb
es
fildll
pop
repz
test
cmpsb
xchg
push
pop
inc
and
iret
rorb
pop
call
xchg
sub
ds
mov
iret
rolb
adc
sub
cmpsb
pop
ror
into
or
rclb
imul
loop
inc
test
inc
movsb
dec
and
mov
rcll
push
cs
inc
aas
cmpsl
or
stos
mov
rcl
rclb
rolb
aam
insl
sub
in
inc
stos
or
cmpsb
leave
dec
daa
ror
into
in
fcomp
sbb
fcomp
fwait
mov
fcompl
les
cli
mov
cmp
adc
insl
dec
cli
mov
aad
dec
adc
imul
push
test
ds
xchg
rcl
insl
insl
xchg
fwait
inc
iret
das
or
into
rcll
iret
rcll
neg
addr16
and
pop
loopne
cltd
sbb
loopne
mov
lea
mov
test
push
test
sbbb
adc
xchg
xor
stos
int
popf
pop
fcmovb
sbb
inc
pop
inc
xlat
lret
int3
les
fisttps
push
loopne
push
rcr
into
iret
pop
cmp
hlt
push
sbb
rcrl
push
sbb
pop
rol
push
push
lcall
pop
jmp
cmpsl
cmp
lcall
mov
hlt
pop
jne
xchg
sbb
push
mov
add
lahf
push
mov
cmp
sbb
push
mov
movl
ja
or
lret
pop
in
iret
push
cwtl
shll
pop
bswap
pop
ror
inc
pop
test
cmc
inc
pop
fwait
lret
int3
int
test
push
cmpsl
dec
or
xchg
pop
bswap
pop
jmp
sub
orl
or
jmp
es
loop
xorl
cwtl
das
add
in
cltd
mov
arpl
pop
or
pop
push
mov
mov
or
sub
ret
sbbb
faddl
pop
bswap
pop
jmp
sub
mov
xchg
fildl
pop
or
pop
out
sub
es
xor
dec
mov
test
sub
dec
mov
rclb
mov
cmp
mov
movsb
inc
sbbl
xchg
push
mov
mov
jo
fmull
add
ret
pop
xchg
xchg
sbb
aad
mov
ret
mov
jno
fisttpll
filds
sub
sub
push
sahf
shlb
dec
out
ss
int3
push
mov
pop
or
dec
pushf
cmp
lret
push
mov
lea
ret
sub
dec
fwait
in
push
int
lahf
repz
mov
push
jae
movl
ret
and
aam
mov
out
ret
pop
mov
rorl
pop
aas
sub
cmp
sahf
les
ret
jb
fimuls
sub
dec
fwait
les
popa
push
mov
lds
into
or
int3
dec
popf
lds
bound
rcrl
add
repz
inc
pop
fxch
int
dec
movl
int3
int
fsubrl
lds
jae
filds
add
dec
cltd
ret
push
loope
cmp
or
sahf
xor
stos
int
mov
inc
les
das
add
popf
out
push
iret
inc
mov
push
mov
pop
jne
ret
lds
or
lds
daa
xchg
fisttpl
loop
les
ret
mov
rcrb
fldl
das
add
scas
shlb
mov
imul
cltd
lds
add
dec
shlb
lds
mov
ret
dec
dec
pop
xchg
ret
mov
pop
push
rorl
outsl
iret
aas
pop
push
iret
ror
fiaddl
faddl
add
out
dec
fwait
les
popa
dec
jecxz
cmp
adc
outsb
ja
cltd
cmp
ret
mov
jne
sub
push
mov
push
cwtl
loope
push
roll
lock
push
mov
push
jo
les
adc
inc
sti
and
push
mov
in
out
sbb
aad
mov
int
sbb
sub
dec
in
cmp
lret
and
cmp
popf
sub
es
in
stc
lahf
lret
int3
int
or
add
cld
sub
push
sahf
shlb
dec
out
ss
int3
push
mov
pop
or
dec
pushf
cmp
lret
push
mov
fcmovb
jno
sub
dec
fwait
in
push
int
lahf
repz
mov
push
jae
movl
ret
and
aam
mov
out
ret
pop
mov
rorl
pop
fcmovnu
sub
cmp
sahf
les
ret
jb
dec
xchg
je
fnsave
lods
imul
faddl
pop
xchg
ret
sbbb
loope
dec
ss
mov
fistpll
push
repz
cmpsl
dec
xchg
push
mov
lea
je
flds
das
in
dec
lcall
cmp
adc
cmp
mov
lds
push
push
mov
push
sahf
loopne
push
rolb
neg
jo
push
mov
pop
outsl
rol
mov
jne
adc
addr16
movb
mov
fmull
jecxz
lds
mov
rcll
out
sbb
fiadds
sub
dec
jecxz
cmp
insb
mov
mov
jne
push
inc
xor
aaa
lahf
cltd
sbb
int
iret
rol
mov
or
lret
pop
push
cwtl
shll
pop
add
sub
adc
inc
pop
xchg
iret
shrb
sub
aam
int
inc
sbbl
pop
fisttpl
aaa
stos
int
fadd
pop
jecxz
mov
outsb
je
popf
inc
lret
loope
jecxz
xchg
sbb
jecxz
mov
mov
ret
push
sbb
rcrl
les
ror
lret
ret
int
mov
ror
into
into
iret
dec
fidivrl
pop
out
sbb
mov
int
lcall
cltd
xchg
xor
stos
int
sahf
pop
pop
repz
sbb
ficomps
push
sbb
rcrl
les
jg
repnz
push
sbb
sbb
lds
lds
inc
ret
or
ret
push
ljmp
adc
ficompl
xchg
lds
fsts
pop
pop
pop
ret
sbb
ficomps
push
sbb
rcrl
les
xchg
and
pop
ficoms
nop
cwtl
sbb
cwtl
sbb
cwtl
sbb
les
pop
dec
arpl
int
les
pusha
imul
sbb
mov
je
sbb
test
ror
lret
jge
movb
iret
rol
push
clc
into
into
iret
lds
sbb
sbb
lret
rcr
lcall
ffreep
pop
inc
fistpl
inc
pop
sbb
shrl
sub
mov
sbb
lds
push
mov
lds
push
sbb
sbb
jg
and
sbb
les
fisttpl
inc
movb
sbb
lds
addl
mov
int3
fxch
iret
test
inc
mov
push
sbb
xchg
sbb
sbb
xchg
sbb
addb
cmp
jg
push
xor
test
test
adc
std
sub
and
pop
test
hlt
pop
fcmovne
iret
push
dec
pop
in
mov
fcmove
into
gs
int
hlt
ret
or
nop
les
out
xchg
sub
fcmovb
sbb
fisttpl
pop
lret
sub
icebp
repz
sbb
lds
sub
pop
aad
stos
leave
int3
ret
pop
fwait
inc
adc
call
and
rcrl
jg
push
iret
rol
sbb
roll
and
pop
iret
fistpl
jnp
inc
ret
sbb
jp
adc
rcl
pop
test
xchg
rcrl
testb
das
cld
cmpsb
lea
pop
mov
sbb
into
ficomps
fistl
jle
ret
adc
add
std
aas
cmpsl
mov
pop
adc
lret
in
xchg
sub
icebp
jg
les
incb
daa
add
lea
jnp
lret
sbb
rcr
xchg
sub
repnz
test
fsin
sub
inc
test
mov
adc
lret
int3
les
pop
lret
sub
lds
repz
aad
add
add
mov
shrl
mov
cmp
sub
repnz
nop
jg
ret
fldl
das
cld
rol
push
testb
pop
call
sbb
ror
cwtl
sub
push
hlt
adc
jg
ret
fldl
das
cld
rol
push
testb
rcr
ljmp
push
repz
lock
xlat
fiadds
sub
ret
push
idivl
sub
adc
inc
push
mov
int
sbb
cltd
cs
rol
xor
xlat
fiadds
sub
ret
push
idivl
sub
aam
add
push
hlt
adc
mov
sub
sub
ret
ret
icebp
jg
sub
adc
sbb
rcr
xchg
sub
repnz
test
rcl
add
push
hlt
adc
mov
xor
sub
ret
ret
icebp
jg
sub
aad
add
add
mov
shll
fsts
xchg
imul
pop
stos
jl
ror
ret
adc
sbb
fstpl
push
sbb
pop
jecxz
orb
fwait
sub
idivl
sub
pop
ret
sbb
movb
es
adc
ror
ret
lds
and
inc
les
out
jg
fistpl
shl
hlt
adc
into
lret
int3
int
xor
repz
jg
mov
iret
rol
sbb
roll
and
pop
jecxz
and
fwait
sub
insb
inc
ret
fstpl
jge
xor
pop
push
jl
add
ror
ret
fstpl
jge
xor
pop
push
jl
stos
in
ror
ret
pop
xor
sbb
shrb
shll
ret
sbb
ficomps
sti
rcl
rcrl
les
xchg
and
push
xchg
sbb
sbb
movb
es
adc
fsts
or
les
lret
fists
sarl
in
ror
ret
fstpl
jge
insb
enter
fcompl
xlat
xor
jmp
scas
ret
fstpl
sub
mov
imul
leave
fldl
into
cmp
hlt
iret
rol
sbb
roll
ret
dec
push
sbb
rcrl
les
xchg
and
inc
mov
lds
ret
ret
inc
lock
nop
inc
pop
rcl
sbb
xchg
popf
inc
lret
loope
jecxz
mov
sbb
iret
iret
rol
push
push
ds
cmpsl
jns
push
jbe
ficomps
rclb
shlb
sub
pop
jmp
pop
fs
pop
add
push
out
addr16
sub
adc
inc
imul
iret
sbb
dec
ror
lret
ret
push
push
ds
pop
or
pop
in
push
push
ljmp
sub
or
sub
fucomi
lds
rcr
jmp
shlb
shrb
fstpl
rorb
mov
addr16
dec
rorl
add
mov
imul
adc
or
xchg
xchg
into
iret
rol
push
pop
pop
int
fistps
lret
fucomi
dec
outsl
das
ret
xor
je
adc
imul
addr16
shrb
addr16
iret
push
shrb
into
es
sbb
ror
push
in
insl
rol
push
inc
fucom
pop
add
loopne,pn
jmp
push
out
push
cmp
in
or
cs
aam
bswap
adc
push
sub
push
shlb
mov
pop
and
mov
out
shrl
push
inc
pop
pop
int
fistps
lret
fucomi
pop
or
sub
fcoml
xchg
push
stos
mov
les
dec
cmp
pop
lock
rorb
lcall
jge
sbb
jg
ret
addb
test
fistps
push
das
xchg
ret
data16
dec
mov
int
fadd
sbb
dec
mov
int
adc
subb
sti
ror
lret
ret
push
dec
fdivl
sbb
into
shlb
popa
int3
sar
movb
xlat
movl
fistl
sbb
jge
shrb
into
imul
inc
shrb
clc
int3
ror
rol
sbb
roll
rcr
fwait
sub
ficomps
lds
roll
cltd
sub
pop
iret
push
into
jno
ja
cltd
xor
mov
in
mov
xchg
xchg
test
cmpsb
cmp
inc
pop
cmp
lret
int3
xchg
jmp
cmp
pop
inc
int3
int3
int
out
insl
rclb
pop
inc
pop
lret
ror
lret
dec
iret
in
cmp
adc
jecxz
cmp
inc
pop
jg
lret
iret
in
add
pushf
push
push
dec
int
add
mov
inc
pop
jae
lret
iret
ljmp
into
iret
rclb
push
push
lret
mov
insl
ds
lds
cld
pop
pop
into
add
int3
fmull
dec
out
dec
cltd
ret
pop
add
push
mov
pop
insl
ds
lds
cld
pop
pop
into
add
int3
nop
push
shlb
jne
add
imul
push
inc
push
mov
mov
addr16
ret
push
ss
jne
pop
or
pop
in
sub
fucomp
lretw
push
sub
pop
dec
in
push
sahf
shlb
pop
or
sub
sub
dec
popf
mov
les
mov
push
cmp
push
dec
int
dec
shrb
shll
iret
push
negl
fadd
sbb
jo
mov
xor
dec
shr
pushl
sahf
push
push
or
rclb
out
cmp
push
pushl
sahf
push
push
or
rclb
in
cmp
push
cld
ss
push
push
or
iret
push
shrb
into
imul
inc
shll
hlt
mov
rcl
loope
ret
mov
insl
ds
pop
or
das
cli
pop
out
dec
popf
jo
arpl
push
cmp
jno
inc
or
push
mov
mov
les
dec
cmp
jb
fiadds
pop
add
das
cli
pop
or
sub
fisttpll
dec
xor
lds
in
int
dec
or
jecxz
push
fisttpll
dec
jmp
mov
imul
rcl
int
ret
loope
jecxz
mov
pop
sbb
rcl
ror
xchg
sbb
in
cmp
ror
ret
lds
pop
jp
int
fnsave
mov
ret
je
addr16
adc
addl
aas
iret
push
les
jle
insl
ds
imul
push
clc
pop
ror
rclb
aam
sbb
xchg
pushf
xlat
rolb
out
ficomps
mov
pop
int3
int
iret
fwait
push
aaa
sub
into
iret
sarb
shrb
into
imul
cmp
imul
shl
or
sbb
push
sbb
inc
rcll
and
inc
push
enter
sbb
daa
pop
lea
pop
lret
shrb
cmp
cmp
shrl
ss
rolb
rcll
inc
lds
cmp
ret
inc
les
ds
sbb
sbb
sbb
inc
pop
push
aaa
inc
les
cmp
cmp
cmpl
push
mov
iret
rol
cmp
imul
int
into
sub
pop
dec
into
into
iret
cmp
sbb
mov
lds
dec
flds
sub
jl
iret
rol
xchg
cmp
ret
add
xchg
push
fprem1
jg
iret
rol
pop
cmp
pop
popl
sbb
int
sbb
aas
ret
dec
scas
rcl
lret
push
sbb
dec
rcll
inc
lds
lret
lret
int3
into
pop
sbb
inc
ret
sbb
inc
dec
push
int
into
rol
lret
push
sbb
dec
push
aaa
inc
les
ror
lret
ret
int
iret
pop
push
aaa
dec
les
cmp
add
into
iret
lret
sbbl
mov
pop
mov
das
xchg
lea
cmp
sbb
dec
lcall
iret
push
aaa
and
imul
cmp
not
sbb
sub
adc
sbb
insb
ss
imul
xor
push
cmp
pop
cmp
sar
out
into
push
ss
iret
imul
and
out
int
cmp
lds
cmp
into
cld
in
sbb
pop
iret
std
push
sbb
ret
dec
pop
nop
cmp
cmp
dec
jmp
int
out
mov
ret
sbb
aas
jle
inc
les
ror
lret
push
into
cltd
sbb
loope
mov
cmp
cmpl
xchg
and
push
xchg
addr16
sbb
inc
jle
inc
les
ror
lret
iret
push
lds
lret
lret
int3
sarb
out
rcrb
push
sbb
ret
dec
movb
ror
ret
jb
jno
stc
jb
inc
.byte
cltd
in
repnz
mov
scas
dec
adc
in
dec
jns
push
out
mov
cmp
add
or
sbb
adc
out
xor
sub
pop
or
icebp
add
sub
daa
or
inc
inc
push
cli
sbb
inc
pop
and
and
add
push
dec
xor
dec
push
cmp
sbb
adc
ss
sbb
fs
inc
arpl
es
mov
add
fucomi
loopne
or
jecxz
loop
rolb
in
xlat
in
not
cmc
adc
push
fmull
and
es
loopne
out
sbb
out
std
adc
xor
add
add
and
or
add
aas
adc
or
and
dec
dec
inc
inc
inc
pop
inc
dec
inc
push
adc
xor
pop
cmp
cmp
lret
mov
lret
cmc
into
div
xlat
fiaddl
mov
loopne
out
in
cld
sar
in
adc
jecxz
adc
aam
sti
lock
add
sbb
adc
notb
or
sbb
push
and
sub
sbb
das
adc
adc
sbb
pop
and
cmp
dec
add
dec
sbb
xor
inc
push
dec
push
cs
push
pusha
cs
pusha
push
cmp
xor
gs
dec
dec
pop
pop
bnd
lret
hlt
ljmp
or
out
push
fadds
ret
leave
push
iret
clc
adc
adc
or
sbb
sbb
and
or
or
sub
or
add
jmp
adc
push
and
es
or
inc
cmp
inc
add
cmp
sub
dec
pop
xor
sbb
dec
xor
pop
sbb
dec
inc
and
pop
imul
iret
leave
out
std
xlat
icebp
mov
fxch
fcmovnu
out
adc
add
in
sbb
rclb
stc
fcomi
sti
fstl
or
repnz
loop
sbb
add
pop
or
sbb
add
adc
cmp
and
inc
cs
or
dec
sbb
aaa
dec
cmp
push
and
fs
cmp
pop
bound
outsb
jno
mov
mov
rol
out
out
aad
sti
lret
fmull
adc
sbb
adc
xlat
sbb
and
add
and
add
out
sbb
or
hlt
repnz
cmp
sbb
sbb
cmp
cmp
cmp
sub
sub
adc
cmp
xor
cmp
dec
push
sbb
xor
push
dec
and
in
hlt
in
std
call
rcl
fnclex
stc
fimuls
ret
stc
fdivr
or
out
fsubrp
jmp
jmp
push
in
lock
jmp
add
sbb
adc
out
and
out
push
or
das
pop
or
adc
add
sub
dec
and
sub
cmp
dec
sbb
cmp
push
and
cmp
pop
and
and
sub
iret
aam
lret
fcom
jecxz
add
add
ljmp
add
add
iret
add
push
or
clc
pop
or
or
and
sub
sti
negl
xor
push
or
out
pmaddwd
sub
add
sbb
sbb
inc
sbb
cmp
sbb
xor
das
inc
sub
push
sub
push
push
and
xor
ds
inc
jo
out
lret
iret
in
fcmovu
hlt
add
fiadds
jecxz
add
adc
out
or
or
adc
adc
out
out
repz
and
jecxz
in
jmp
loope
adc
push
sub
cmp
icebp
or
adc
adc
sub
pop
ds
ds
aas
movups
push
inc
sbb
push
pop
dec
push
sub
xor
xor
push
cmp
pop
fsubr
iret
shr
in
mov
int
cld
in
or
lret
push
out
repnz
into
aam
fdiv
stc
std
out
ljmp
clc
repz
or
sbb
sbb
pop
push
xor
adc
or
or
xor
xor
repz
inc
push
xor
cmp
sub
cmp
and
adc
dec
xor
pop
inc
pop
and
push
sbb
xor
cmp
das
imul
lret
fst
mov
in
loop
lock
fld
out
call
adc
cmc
clc
aad
or
push
or
testl
loope
or
or
cmc
push
add
sbb
das
sub
sub
push
adc
lock
sbb
adc
comiss
adc
inc
pop
aaa
add
dec
or
and
pop
push
or
push
dec
sbb
pop
sbb
push
sbb
pop
inc
pop
push
cmp
loop
in
fnstsw
ret
add
mov
fcmovnu
in
loope
shl
out
iret
repnz
call
push
fisubs
sbb
add
lock
sbb
in
and
and
lock
repnz
hlt
or
or
cmp
aas
cmp
push
cs
sbb
push
dec
cs
pop
adc
sub
pop
push
dec
bound
ds
inc
xor
stc
out
mov
clc
int3
stc
mov
pop
out
jmp
int3
into
loop
or
int
jmp
add
testb
in
loopne
repz
pop
cmc
and
std
or
and
sbb
sub
out
adc
xor
and
std
xor
sbb
add
sbb
add
aas
es
xor
adc
cs
dec
pop
push
sub
inc
xor
es
pop
addr16
gs
ss
popa
ret
xlat
mov
add
mov
or
std
jmp
iret
ljmp
or
sti
aad
cli
stc
out
loope
in
lock
or
or
or
and
push
ss
idivb
sub
adc
sub
inc
cmp
dec
and
sub
adc
adc
and
inc
cmp
xor
inc
outsb
bound
in
idiv
mov
mov
ret
out
mov
clc
add
clc
jecxz
aad
push
aad
or
sbb
push
sbb
out
in
and
adc
sysexit
cli
pop
sub
cmp
and
pop
cmp
xor
or
or
sub
aaa
sub
inc
sub
sub
dec
push
ss
xor
and
dec
arpl
outsl
data16
mov
f2xm1
aad
mov
mov
xlat
add
push
cli
push
fsts
add
int
or
jmp
cli
hlt
div
lock
or
std
push
out
or
cmc
in
or
ljmp
stc
add
sti
cs
sub
add
xor
cmp
inc
inc
cs
dec
inc
sub
inc
adc
inc
inc
adc
push
ss
das
cmp
pusha
cmp
inc
and
dec
dec
sub
mov
in
lock
rolb
shl
jmp
add
add
jmp
hlt
or
iret
jecxz
fcoml
fiaddl
sbb
repz
and
femms
add
icebp
or
daa
or
cmp
xor
xor
add
incb
cld
adc
adc
sbb
sub
dec
and
dec
daa
sub
push
cmp
cmp
push
sub
call
int3
fdivr
ret
add
fcmovnu
or
int
add
negb
adc
out
adc
push
adc
cli
and
adc
out
or
sbb
sub
adc
divl
das
add
repz
cmp
and
adc
cmp
and
and
or
push
cmovo
xor
inc
and
push
cmp
inc
bound
push
pop
inc
inc
and
outsl
inc
lret
std
bnd
not
add
testb
jmp
fmulp
fcmovnbe
lret
or
in
sbb
adc
out
sbb
adc
pop
and
add
cmc
or
sbb
pop
push
pop
cmp
cs
cld
adc
cmp
dec
inc
inc
cmp
aas
sub
es
xor
push
sub
inc
xor
and
ds
pop
push
sub
push
das
ds
ret
in
in
jmp
sti
cli
jecxz
aam
rcr
mov
out
cli
jecxz
jmp
call
or
in
out
adc
and
call
add
jmp
or
and
adc
sbb
pop
and
add
sub
cmp
cmp
push
dec
and
pop
push
xor
adc
ss
xor
push
pop
dec
push
ss
mov
hlt
inc
mov
in
jecxz
into
or
int
fimuls
loop
aam
adc
push
sbb
adc
notl
and
or
notb
in
cli
sbb
adc
das
add
and
das
push
or
sub
or
inc
and
sbb
and
daa
push
inc
or
or
dec
push
push
adc
or
dec
sub
push
push
pop
dec
push
ds
push
ss
sub
in
int3
mov
mov
cli
repnz
push
or
cld
fcmovnu
or
int
in
push
loope
cmc
jecxz
or
cli
out
push
sbb
hlt
out
adc
and
sbb
sbb
and
paddd
xor
div
sbb
repz
adc
push
xor
add
sbb
dec
sbb
sub
inc
and
push
sub
sub
push
das
cmp
aaa
pop
cmp
pop
inc
dec
inc
dec
jo
cli
int3
fmul
in
iret
add
into
add
mov
add
in
iret
movntq
out
lret
loope
or
fcmovu
jmp
and
add
push
add
cmc
and
sbb
in
or
cld
sub
add
and
sbb
sub
xor
add
sub
and
and
dec
push
xor
sub
pop
sub
dec
push
ds
pop
bound
pusha
cmp
imul
mov
fneni(8087
stc
in
loop
add
lret
lret
adc
paddusw
jecxz
lock
pop
add
or
adc
sti
cld
div
negb
or
add
loope
cs
and
or
sub
aas
or
cmp
push
aas
xor
cmp
and
aas
adc
pop
dec
cmp
dec
pop
popa
sub
cmp
gs
aaa
gs
and
mov
leave
repnz
rcl
lret
movl
cld
out
stc
cli
jmp
jmp
push
cli
jmp
loope
call
in
sti
loop
sbb
add
jmp
add
adc
repnz
pop
xor
das
push
cld
sub
sti
add
and
adc
pop
sub
push
or
inc
sub
inc
sbb
pop
dec
xor
inc
xor
xor
cmp
dec
sub
in
jmp
incl
mov
ret
repz
clc
fiaddl
loope
iret
out
fmull
adc
out
jmp
pop
call
add
hlt
cmc
adc
sbb
add
sbb
icebp
repnz
adc
or
sti
sbb
cmp
pop
pop
decb
dec
dec
adc
inc
sub
sub
pop
inc
pop
sbb
dec
pop
cmp
inc
cmp
sub
inc
int
shrb
lret
rcr
lds
jecxz
aam
sti
neg
enter
call
stc
call
cmc
out
adc
and
out
in
es
push
sbb
push
das
incb
and
pop
sub
adc
cmp
sti
and
aaa
adc
xor
dec
inc
dec
and
adc
adc
daa
sbb
ss
dec
sub
bound
and
and
imul
aad
mov
fsubr
in
cld
add
shl
push
or
ror
add
call
jmp
lock
or
sbb
sbb
repz
in
adc
pop
pop
or
or
call
xor
add
adc
xor
sbb
sbb
sbb
and
inc
adc
and
adc
pop
and
pop
xor
pop
inc
pop
aaa
pop
and
xor
pop
inc
das
scas
clc
hlt
in
in
mov
cld
hlt
rcr
std
fsub
cld
sti
in
std
loope
out
in
leave
adc
add
ljmp
repnz
std
add
call
adc
sub
or
out
or
and
ds
pop
das
std
sbb
add
sbb
and
sbb
dec
sbb
cmp
dec
sub
cmp
pop
xor
and
pop
xor
insl
enter
mov
mov
mov
loopne
loope
or
adc
in
hlt
push
neg
push
repz
add
sbb
cli
sbb
repz
sbb
xor
xor
add
cmp
inc
cmp
inc
pop
dec
xor
sub
xor
push
push
sbb
inc
dec
and
inc
dec
dec
fs
mov
mov
hlt
lret
jecxz
clc
loopne
movl
or
push
push
out
imul
in
out
or
push
nopl
lock
sbb
es
std
es
idiv
jmp
and
pop
push
add
testb
sbb
xor
push
and
and
and
xor
and
dec
dec
push
push
cmp
pop
pop
pop
cmp
pop
and
xor
pop
pusha
aaa
inc
popa
les
mov
fcomip
cmc
rolb
div
add
jmp
in
rorb
push
call
pop
add
call
sti
push
and
jecxz
or
or
push
clc
out
sub
add
ss
hlt
cmp
or
ss
xor
inc
sub
or
add
inc
xor
adc
sub
sbb
inc
push
inc
cmp
dec
xor
push
pop
cmp
jo
into
jmp
mov
les
jecxz
in
or
in
int3
adc
loop
or
decb
stc
sbb
push
and
jmp
loopne
and
and
sbb
add
lock
repz
xor
das
ss
inc
push
sbb
pop
sbb
or
sbb
sub
and
push
cmp
sbb
push
and
push
pop
inc
inc
pop
sub
sub
inc
ljmp
mov
sarl
or
or
incl
loope
add
roll
push
push
stc
wbinvd
adc
add
es
cld
push
or
add
or
sbb
or
sbb
sbb
xor
add
cs
add
inc
and
push
inc
cvtps2pi
adc
cmp
sbb
aas
push
pop
ss
inc
xor
sbb
pop
xor
inc
dec
dec
rcl
neg
shlb
mov
out
leave
ret
in
faddp
adc
jmp
std
int
ror
ljmp
idiv
sbb
adc
cmc
fpatan
adc
or
ljmp
idivb
sub
sbb
idiv
sbb
inc
adc
xor
dec
inc
inc
and
dec
inc
sbb
push
inc
sub
and
sub
adc
sub
push
sbb
pop
sub
inc
sub
aas
outsb
inc
into
call
add
add
fdiv
clc
fdivr
clc
fadds
leave
out
or
or
add
adc
adc
and
repz
add
pop
or
push
add
xor
add
or
hlt
adc
or
add
sbb
cmp
inc
inc
ds
sbb
or
and
sbb
cmp
es
dec
pop
aaa
arpl
xor
sub
inc
pop
arpl
in
mov
out
mov
rcr
loop
add
lret
add
loopne
shl
adc
icebp
out
into
or
or
adc
xlat
fisttps
adc
pop
push
out
cld
clc
sbb
sub
xor
push
add
hlt
and
sbb
sbb
std
sub
sti
sbb
inc
or
and
sub
sbb
aaa
xor
sub
push
push
cmp
sub
sbb
push
push
daa
push
pusha
pop
dec
pop
dec
lret
out
mov
fdivr
les
or
fsubrp
or
rcr
adc
notb
adc
or
cld
out
push
or
sbb
sbb
sbb
and
sti
idiv
push
add
jmp
and
cmp
sub
add
inc
xor
pop
sbb
push
and
dec
and
adc
adc
pop
inc
pop
cmp
pop
fs
daa
cmp
dec
dec
push
push
inc
inc
sub
clc
sar
sti
enter
fiadds
aad
or
std
fimull
enter
lret
push
repz
add
pop
aad
fcoms
in
and
add
or
out
in
repnz
and
add
xor
xor
clc
inc
xor
pop
cmp
daa
es
cmp
dec
sbb
xor
sub
xor
sub
pop
sbb
cmp
inc
xor
bound
push
sub
lock
mov
rcl
rcr
loope
ret
sti
add
xlat
fucom
or
std
adc
not
in
pop
sbb
testb
push
std
ljmp
loopne
push
cmc
pop
out
std
adc
call
sub
daa
in
sti
cmp
sub
and
xor
sub
add
inc
sub
or
push
sub
push
adc
pop
bound
and
ds
and
dec
stos
out
lret
aad
enter
in
test
shl
out
inc
adc
adc
in
decl
icebp
fmuls
jmp
sbb
push
mulb
sub
sbb
add
and
cmp
repnz
xor
push
inc
sub
push
cmp
sub
push
dec
inc
pop
inc
inc
sub
push
push
pop
sbb
xor
cmp
xor
inc
and
push
inc
and
mov
mov
mov
loope
ret
add
fsubp
or
out
incb
adc
add
add
push
sbb
icebp
in
jecxz
adc
and
daa
in
or
and
xor
adc
sub
xor
sbb
stc
cmp
sbb
cmp
daa
xor
adc
sbb
or
or
inc
mov
pop
pop
inc
dec
dec
cmp
sbb
inc
pop
cmp
xor
dec
cmp
xlat
mov
int3
out
mov
add
idiv
cmc
stc
add
into
add
add
add
add
push
out
hlt
stc
fcomps
fists
adc
add
sbb
pop
add
stc
out
push
sti
repnz
xor
push
or
sub
ss
cs
inc
inc
and
cmp
add
dec
push
push
or
adc
push
pop
pop
cmp
das
sbb
push
pop
inc
imul
cmp
ljmp
clc
cmc
mov
hlt
aam
rcl
ret
cli
faddl
leave
jmp
or
pop
jmp
out
sti
fucomi
stc
adc
sbb
adc
pop
or
incl
pop
adc
call
in
sub
hlt
sbb
std
std
sbb
sbb
pop
add
sbb
push
sub
das
push
dec
dec
sub
dec
dec
dec
inc
sub
dec
cmp
and
push
cmp
cmp
imul
call
xlat
ror
repz
repnz
repz
or
iret
stc
loop
out
iret
into
adc
fptan
icebp
fucompp
pop
negl
or
fsubp
frstor
and
sbb
add
sti
add
xor
and
or
adc
xor
or
sbb
inc
cmp
add
xor
and
xor
pop
inc
push
sub
xor
push
xor
gs
out
fidivrl
loop
add
cld
fucom
leave
std
lret
lret
ljmp
or
stc
repnz
loopne
fmull
lock
pop
add
sbb
or
sti
add
jmp
and
xor
icebp
adc
cmp
sub
xor
add
daa
dec
and
and
inc
inc
dec
aaa
push
das
dec
inc
dec
pop
cmp
aas
push
inc
pop
push
push
inc
push
sub
arpl
dec
aad
lret
lock
mov
cld
add
cld
fucomi
push
out
jmp
or
call
in
jmp
adc
or
or
sbb
sub
push
and
pop
out
or
adc
and
and
inc
sbb
cmp
inc
dec
add
dec
dec
xor
inc
inc
pop
pop
dec
ss
push
cmp
inc
xor
pop
xor
fs
data16
daa
mov
cld
fldl2e
test
shl
fildl
ret
not
xbegin
int3
cld
add
push
iret
out
lret
ljmp
adc
sbb
out
add
pop
stc
pop
sbb
pop
sub
push
adc
hlt
adc
xor
sbb
ss
add
sbb
or
and
dec
xor
ss
dec
adc
dec
inc
push
sbb
inc
cmp
fs
and
fs
lock
fdiv
incl
rol
mov
fcmovnbe
in
or
loop
add
int
adc
shr
cli
or
sbb
sti
call
and
adc
sub
xor
hlt
add
adc
nopl
xor
pop
sbb
dec
dec
dec
cmp
inc
ds
sub
dec
xor
cmp
push
pop
push
sbb
cmp
cmp
imul
lret
leave
out
lret
bnd
jecxz
fninit
or
decb
out
fcmovbe
lret
leave
movlps
or
out
std
fmull
add
adc
and
sbb
sbb
sbb
sbb
cmp
xor
and
push
cmp
adc
sub
dec
cmp
push
inc
xor
sub
adc
push
push
push
cmp
addr16
and
popa
dec
addr16
inc
in
enter
mov
icebp
lock
icebp
fstp
aad
testl
pmaxsw
or
loopne
adc
sbb
push
fcmovu
and
adc
negb
push
add
sti
and
and
repnz
sbb
sbb
adc
ss
xor
add
daa
cmp
aaa
adc
das
or
cmp
pop
xor
and
pop
arpl
sub
arpl
sub
sti
cli
std
lret
mov
add
aam
mul
rolb
in
shl
adc
rclb
adc
xlat
std
in
std
std
pop
pop
push
repz
add
adc
out
es
sbb
or
sub
and
push
inc
sbb
inc
add
xor
sbb
inc
sbb
cs
inc
sbb
and
and
cmp
xor
pop
fs
inc
inc
cmp
aaa
cmp
push
aad
jmp
enter
fucomip
fdivr
incl
mov
add
fimuls
out
add
add
repz
cmc
hlt
jmp
adc
icebp
in
cmc
repz
loop
sbb
repnz
adc
pop
xor
daa
sbb
sub
xor
and
push
cmp
daa
or
dec
cs
adc
sub
sub
cs
cmp
adc
push
pop
cmp
push
dec
sub
data16
ljmp
lret
int
mul
add
or
sti
or
jmp
in
fucomp
out
adc
aam
adc
ljmp
negl
es
cld
push
and
sbb
add
xor
stc
stc
adc
aaa
adc
inc
cli
inc
das
ljmp
add
cmp
push
and
sbb
push
push
xor
xor
xor
cmp
daa
push
push
aas
bound
cmp
jmp
mov
add
cld
int
fyl2x
or
loope
repnz
or
out
fsin
or
or
or
cli
cld
sub
cmc
out
sbb
add
jmp
std
adc
add
cmp
cmc
xor
sbb
or
dec
push
dec
sbb
inc
dec
dec
push
adc
pop
cmp
pop
das
adc
dec
cs
sbb
cmp
dec
insl
ds
clc
repz
cmc
rol
out
out
fdivr
aad
lret
sti
out
add
or
in
rolb
cmc
repz
push
pop
fdecstp
loopne
and
in
sbb
adc
or
icebp
lcall
cmp
or
cmp
inc
es
xor
inc
inc
es
sub
and
inc
and
ss
push
pop
push
cmp
xor
popa
and
cmp
cmp
aad
aam
rcl
neg
into
shl
aad
fimull
or
add
sti
fucomp
in
loopne
psrlq
sbb
cmc
sti
rclb
aam
and
add
pop
adc
or
add
cs
push
add
clc
xor
cmp
xor
push
add
adc
dec
and
or
ds
cmp
adc
rdpmc
cmp
sub
arpl
and
dec
pop
aaa
pop
inc
das
icebp
ret
out
jmp
out
inc
mov
shl
std
leave
out
out
fcmovnu
out
icebp
int3
clc
or
push
psllw
sti
mulb
psadbw
out
push
daa
push
adc
sub
sub
sub
and
add
or
xor
adc
daa
aas
cmp
add
or
or
sub
and
sub
inc
and
dec
pop
push
pop
popa
sub
inc
ljmp
fdivr
cld
hlt
fyl2xp1
stc
sti
shl
in
idiv
int
shr
fcmovnbe
or
cmc
clc
jmp
icebp
or
cld
or
or
icebp
adc
pop
repnz
push
push
bnd
clc
add
cld
push
daa
or
cmp
das
xor
stc
xor
ds
inc
cmp
or
dec
and
xor
adc
adc
pop
aaa
cmp
pop
inc
inc
aaa
aas
push
les
test
cld
ret
out
fcmovne
repz
int3
or
icebp
or
rclb
add
add
repnz
repnz
ljmp
loopne
jecxz
repnz
sub
push
add
and
jmp
sub
push
aaa
sub
xor
lock
sbb
sbb
xor
inc
and
and
and
add
pop
inc
adc
sub
xor
pop
aaa
pusha
xor
aaa
and
pop
gs
not
out
mov
clc
mov
in
loop
enter
into
add
or
stc
fimull
pop
imul
or
in
fnstsw
testb
or
call
adc
sbb
sbb
cmp
cmp
std
add
push
cmp
dec
es
inc
and
push
push
xor
cs
sub
dec
cmp
pop
cmp
sub
stc
mov
shl
fsub
jecxz
cli
decb
add
icebp
loopne
cld
add
div
repz
fst
div
jmp
sbb
sbb
add
pop
fbld
sub
pop
or
xor
lock
add
or
clc
sbb
and
sub
dec
dec
sbb
adc
and
adc
pop
cmp
pop
das
sbb
xor
push
imul
pop
repz
mov
add
hlt
mov
call
fisttpll
add
leave
add
jecxz
rcll
or
clc
icebp
add
icebp
in
add
sbb
sbb
add
add
adc
adc
pop
adc
inc
or
dec
aaa
and
dec
inc
inc
dec
das
push
or
or
sbb
pop
pop
cmp
push
ds
inc
daa
push
arpl
pop
pop
daa
enter
mov
fdivrp
out
aam
add
xlat
add
push
add
adc
out
iret
loopne
sbb
add
or
and
add
pop
pop
adc
sbb
in
std
sub
or
or
add
aaa
add
in
cmc
negl
negl
sub
cmp
adc
aaa
pop
sub
incb
add
das
dec
ds
push
push
das
sbb
push
daa
xor
push
dec
xor
pop
pusha
dec
push
sub
mov
scas
mov
add
ljmp
hlt
add
fucomi
in
cli
decb
ror
in
out
push
call
sbb
in
adc
fistpl
sti
pmulhw
pop
sub
in
and
and
repnz
xor
or
and
and
adc
cmp
pop
adc
push
dec
inc
pop
dec
and
inc
cmp
inc
pop
dec
and
sub
sbb
pop
push
sbb
pop
sbb
cmp
imul
pusha
pop
cli
mov
cld
in
repnz
in
jecxz
repnz
fprem
cmc
or
call
adc
push
add
or
add
ficoml
cli
push
and
or
and
sbb
or
sti
push
std
in
sub
or
in
sbb
cmp
sub
and
inc
add
sub
sub
cmp
and
xor
pop
push
sbb
dec
dec
pop
cmp
inc
pop
aas
gs
dec
cli
lods
lods
stc
stc
lret
repnz
loop
dec
sarb
or
cli
wbinvd
add
out
std
clc
adc
pop
rcll
push
sbb
sbb
sbb
cld
add
std
out
out
add
push
and
sbb
das
adc
cmp
and
inc
aas
push
sbb
cmp
sub
pop
push
push
and
inc
xor
cmp
cs
aas
inc
dec
pop
sub
inc
fs
mov
lock
mov
xlat
cmc
call
icebp
leave
ljmp
or
stc
jmp
push
add
out
and
out
repz
out
sbb
cmc
adc
adc
or
sbb
cmp
adc
sbb
adc
sub
xor
sub
dec
sub
ds
push
push
cmp
inc
push
inc
and
push
push
lret
rcl
xlat
cli
shl
lret
clc
fldl
call
in
lret
jmp
ljmp
add
out
add
or
loope
add
and
sbb
jecxz
cs
sub
and
add
xor
sub
or
or
inc
lcall
cmp
sub
or
xor
xor
ss
push
pop
sub
inc
push
sbb
push
and
inc
inc
iret
iret
out
fxch
jmp
xlat
cld
mov
clc
fstpt
loope
ljmp
out
add
fsubr
or
fiadds
std
add
and
or
ljmp
or
testb
sub
xor
pop
and
and
push
and
sub
sub
push
dec
sub
sub
das
sub
ds
ss
cmp
sub
xor
cmp
and
and
mov
stc
rcl
lock
mov
or
shl
lret
add
hlt
add
aad
icebp
hlt
or
loopne
fadds
icebp
jmp
sub
and
xor
adc
adc
sub
inc
inc
inc
and
sub
sbb
inc
push
and
adc
sub
sbb
dec
push
inc
cmp
arpl
sbb
push
pop
push
in
fldlg2
mov
repnz
out
fsub
faddl
add
call
repnz
pop
icebp
or
adc
add
cld
out
and
loope
ljmp
notl
cmp
ds
xor
adc
pop
push
pop
cmp
aas
dec
add
push
sub
ds
adc
cmp
push
pop
dec
ds
pop
pop
xor
sub
insb
jo
in
mov
hlt
mul
mov
ret
in
loop
aad
loop
or
in
adc
push
pop
cmc
adc
prefetch
or
icebp
push
in
sub
add
sub
push
or
push
adc
and
sub
add
lock
sbb
sbb
inc
add
add
xor
or
inc
and
sbb
sub
dec
cmp
push
cmp
sub
and
inc
cmp
bound
insl
hlt
jecxz
cld
not
mov
aad
mov
fmuls
mul
fsubrp
or
int
loop
in
adc
adc
clc
repnz
fisttpll
fdiv
push
fistps
sbb
stc
sub
adc
or
pop
out
repnz
sysret
sbb
cmp
adc
or
xor
sub
es
sbb
sub
dec
inc
ss
sub
pop
pop
pop
das
cmp
and
inc
inc
sub
dec
clc
mov
ljmp
icebp
clc
add
fcmovb
cli
movb
add
or
fdivp
loop
adc
or
sbb
out
jmp
and
jecxz
and
sbb
call
sbb
add
or
and
sbb
cmp
pop
das
add
and
push
cmp
sub
push
push
dec
pop
inc
aaa
dec
push
dec
xor
xor
push
xor
aas
inc
ds
cmp
insl
outsb
shl
aam
icebp
aam
ror
aad
cld
ret
div
clc
add
movb
in
or
lock
adc
adc
and
icebp
adc
adc
and
add
and
and
sbb
sbb
push
stc
xor
cmp
xor
add
cmp
or
inc
inc
cmp
sub
das
xor
cmp
sbb
xor
cmp
pop
push
ss
daa
jno
fucomi
int3
std
iret
stc
mov
call
stc
pop
xlat
aam
add
in
in
add
out
sbb
adc
push
sbb
adc
push
push
and
stc
sbb
sub
pop
cmc
daa
add
incl
or
xor
or
sub
xor
xor
pop
and
cmp
and
or
and
dec
and
or
inc
sbb
adc
sbb
xor
inc
dec
inc
dec
inc
dec
cmp
mov
ljmp
add
cmc
int3
into
leave
fucomi
int3
out
lret
or
push
or
sbb
and
psllw
add
in
sbb
or
add
hlt
sub
cmp
adc
xor
ud0
inc
push
sub
or
cmp
inc
pop
cvtpi2ps
aaa
sub
xor
xor
pop
inc
cmp
inc
inc
aas
and
pop
addr16
ljmp
incl
mov
repnz
or
ljmp
pop
add
sbb
in
pop
cli
rclb
ljmp
sub
sbb
sti
push
adc
sbb
jmp
hlt
sub
sub
cmp
push
and
sub
cmp
sbb
and
dec
dec
push
push
adc
dec
inc
pop
push
dec
dec
pop
pop
sub
gs
arpl
xor
dec
bound
inc
mov
sti
mov
mov
mov
or
ret
or
std
jmp
out
hlt
repnz
in
or
aad
xlat
cmc
std
decb
repnz
sbb
adc
pop
ljmp
call
and
xor
sbb
xor
sub
push
sbb
cmp
or
adc
cmp
adc
dec
xor
inc
pusha
ds
push
push
push
gs
pop
popa
gs
pusha
bound
push
call
hlt
mov
div
ret
ret
cld
lret
icebp
out
adc
or
lock
and
adc
pop
loop
push
incl
and
add
ljmp
add
adc
add
add
sbb
or
cmp
xor
cmp
add
add
sub
cmp
adc
inc
daa
sub
xor
push
and
pop
dec
pop
xor
ds
sub
push
scas
shlb
out
aad
jecxz
mov
cli
cli
ffreep
fsub
or
rorb
jecxz
repnz
lret
pop
sbb
in
jmp
and
sbb
and
call
or
xor
sub
aaa
cs
cmp
pop
clc
inc
xor
adc
sbb
pop
push
daa
sub
cs
sub
xor
or
adc
adc
sub
sbb
aas
sbb
pusha
gs
dec
bound
int3
enter
fnstcw
mov
loopne
cmc
decb
adc
adc
jecxz
jmp
idiv
jecxz
out
aam
rclb
in
and
in
fsubl
repnz
loop
imul
add
or
adc
and
sub
or
clc
xor
xor
sbb
sbb
sub
xor
sub
sub
inc
dec
sbb
xor
sub
gs
pop
dec
inc
xor
aaa
pop
inc
pop
hlt
ret
std
dec
ljmp
hlt
ret
clc
clc
in
sti
filds
lret
lock
rcll
adc
adc
and
sbb
in
sbb
std
in
add
incl
cmc
add
xor
cmp
push
sub
sub
sbb
pop
cmp
inc
push
and
xor
pop
xor
dec
aaa
inc
adc
inc
push
addr16
dec
dec
dec
dec
enter
fmulp
cld
mov
add
in
repz
fildl
add
or
adc
out
or
sbb
push
out
sbb
div
fsub
and
repnz
or
sbb
jmp
and
sbb
ss
stc
notb
and
cmp
dec
sbb
and
xor
pop
sub
dec
xor
cmp
pop
xor
xor
push
pop
pop
push
cmp
push
sub
das
gs
div
hlt
dec
fdivr
cli
rolb
loope
sti
add
out
out
jmp
add
or
sbb
out
sbb
add
adc
icebp
push
fdivr
add
sub
pop
or
or
add
xor
das
sbb
cmp
rdtsc
add
adc
and
rcpps
dec
es
cs
and
dec
dec
sbb
cmp
inc
imul
push
outsl
fst
ljmp
loope
ret
or
testb
leave
or
jmp
push
out
in
jmp
or
push
ljmp
negb
add
jmp
out
cli
sbb
or
pop
and
es
sbb
lock
xor
add
add
pop
inc
and
sbb
dec
dec
or
inc
pop
inc
push
adc
xor
xor
aas
inc
push
and
and
push
es
and
es
std
stc
idivl
ret
fmull
fcos
or
in
ljmp
repnz
cli
and
loopne
add
out
adc
stc
cli
sub
and
jmp
add
lock
out
ds
or
sbb
and
push
sbb
dec
cmp
or
inc
pop
xor
sub
push
dec
sbb
aaa
and
and
push
pop
xor
push
insb
jo,pn
loop
icebp
lds
cmc
cli
add
rolb
ljmp
or
ljmp
shr
out
sbb
ljmp
add
cld
loopne
cli
or
add
sub
or
icebp
pmuludq
and
push
sub
or
push
cli
inc
adc
pop
adc
aas
inc
inc
dec
pop
cmp
or
inc
cs
xor
xor
xor
adc
pusha
cmp
push
pop
pop
sub
and
dec
dec
mov
mov
jmp
clc
fnstcw
repnz
lock
aam
fiaddl
stc
filds
or
jmp
adc
icebp
repz
push
fstp
or
fcomip
adc
adc
in
sub
sti
sub
sbb
xor
push
adc
add
adc
sbb
xor
or
or
xor
push
inc
adc
xor
cmp
push
popa
pop
pop
pop
push
xor
inc
push
dec
dec
dec
inc
aaa
fidivrl
shr
in
out
cli
ret
repnz
cli
sti
cli
out
fucomip
push
adc
call
adc
rcl
sbb
cld
in
out
adc
and
in
hlt
adc
pop
push
add
and
push
sub
xor
ss
inc
inc
add
add
cmp
sbb
xor
xor
ss
and
and
push
pop
dec
arpl
ds
cmp
jmp
clc
add
push
clc
jecxz
in
out
in
stc
int
in
in
sbb
or
out
add
idiv
loope
lock
add
and
or
adc
sbb
push
pop
sub
xor
cmp
aaa
sub
inc
aaa
xor
and
sub
inc
inc
pop
cmp
and
dec
push
xor
cmp
and
push
and
cmp
mov
shr
loope
fsub
fldl
add
loope
iret
add
adc
lock
stc
pop
cli
clc
sbb
ljmp
push
adc
and
fstpl
jecxz
adc
in
xor
sub
add
adc
or
or
pop
add
add
xor
inc
add
inc
inc
push
and
dec
adc
pop
aaa
push
cmp
pop
pop
adc
push
sbb
xor
pop
xor
push
push
sub
jo
test
rcl
xlat
lret
mov
aad
loopne
clc
or
jmp
loopne
add
xlat
std
cld
adc
std
icebp
push
repz
in
testl
add
hlt
das
adc
hlt
adc
cmp
or
inc
adc
std
inc
inc
xor
sbb
add
dec
push
and
inc
dec
ds
push
pusha
push
push
xor
pop
cmp
sub
xor
fsubr
mov
xlat
shl
hlt
mov
jecxz
repz
out
jmp
jmp
shr
aad
adc
add
out
adc
cli
add
fucomp
sub
sbb
xor
add
adc
adc
adc
adc
sbb
cmp
sub
or
push
aas
push
inc
sub
cmp
xor
push
adc
and
and
pop
aaa
pop
inc
pop
push
cmp
push
aam
mov
xlat
jecxz
add
ret
repz
std
in
xlat
out
adc
in
out
out
notb
fldlg2
add
lock
adc
icebp
lock
add
or
stc
sub
ljmp
adc
add
sub
sti
cmp
cmp
cmp
dec
cmp
adc
das
sub
adc
sub
cmp
cmp
pop
push
push
pop
dec
pop
es
sub
mov
jmp
lret
fcmovnbe
not
fst
shl
add
out
fsub
leave
loopne
fmul
int3
adc
or
out
or
fcom
and
and
icebp
icebp
pmulhuw
std
pop
ljmp
decl
add
hlt
xor
idivl
push
or
incl
and
xor
sbb
dec
ds
xor
inc
adc
xor
xor
push
pop
pop
sbb
and
pop
pop
imul
stc
mov
in
mov
jecxz
std
add
add
out
add
loope
in
or
cmc
sbb
jmp
repz
or
in
in
adc
pop
sub
sub
pop
pop
jmp
daa
and
hlt
or
cmc
hlt
push
cmp
pop
adc
cli
sbb
dec
cmp
and
sub
or
push
push
cs
inc
dec
dec
pop
xor
sbb
pop
aas
pop
bound
cmp
and
insb
gs
insl
inc
gs
shl
call
idivb
stc
mov
lret
repnz
in
or
ljmp
out
add
sti
cli
jmp
pop
or
adc
daa
in
sbb
cld
push
and
push
pop
sbb
or
cmp
daa
or
adc
push
pop
inc
daa
sub
pop
aaa
sbb
sbb
pop
fs
inc
inc
outsb
aas
imul
mov
sti
int
shl
fadd
enter
fsubrp
out
out
out
out
pop
lock
adc
std
loopne
add
loopne
idiv
add
add
xor
cmc
xor
xor
sub
adc
sbb
cmp
sub
inc
or
dec
cmp
pop
ss
push
pop
xor
xor
sbb
push
pop
pop
xor
imull
icebp
leave
cli
cmc
cmc
repnz
aam
in
add
add
enter
movb
shl
ljmp
add
add
out
sbb
sub
std
or
repz
sub
cmp
push
xor
ds
push
and
push
std
adc
adc
add
sbb
or
inc
dec
sub
pop
dec
sub
push
and
push
cmp
push
inc
push
inc
sub
sub
dec
loop
in
fidivrl
jecxz
repnz
flds
ror
in
rclb
add
cld
in
in
out
fstps
sbb
add
clc
negb
daa
add
sub
out
cs
pop
and
xor
and
cs
xor
xor
das
das
inc
push
cmp
sub
ds
push
sub
xor
and
xor
dec
pop
sbb
inc
sbb
push
bound
pop
sub
es
out
enter
in
fsubr
add
ret
movb
add
std
cli
out
in
adc
fsubrp
jecxz
push
adc
lret
sbb
sti
or
sbb
add
loopne
sbb
and
sub
daa
or
add
sub
add
pop
aas
cmp
inc
or
cmp
add
daa
cmp
sub
dec
xor
sub
pop
dec
cmp
adc
and
inc
xor
pop
inc
and
inc
inc
inc
sar
leave
mov
icebp
out
mov
fcmovnu
pop
or
add
into
sti
fimull
adc
or
in
in
sar
psubq
sbb
adc
sbb
in
adc
sbb
adc
or
ss
adc
pop
lcall
or
sbb
and
inc
cmp
push
add
or
sub
inc
xor
pop
dec
adc
xor
and
push
and
pop
inc
ds
in
lret
div
xlat
not
add
repnz
call
stc
add
adc
jmp
adc
int
push
loop
cmc
incb
aad
adc
sbb
in
out
adc
notl
sbb
jmp
icebp
and
jmp
adc
cmp
xor
or
adc
push
clc
and
and
or
sbb
dec
or
dec
or
adc
sub
sbb
and
fs
pop
sub
das
pop
mov
in
mov
add
add
in
in
fstp
enter
hlt
aad
clc
fcom
push
sbb
or
in
idiv
add
sbb
std
sbb
jmp
sbb
or
or
cmp
adc
cld
sbb
aas
add
daa
inc
and
push
inc
inc
adc
xor
push
dec
push
push
sbb
and
inc
and
push
inc
cmp
inc
call
mov
rolb
cli
iret
sti
cli
fstp
stc
add
lock
iret
push
sbb
std
sbb
sbb
icebp
cmc
and
lcall
jmp
pop
push
stc
xor
and
out
sub
adc
stc
xor
movlps
sub
cmp
add
inc
sbb
or
sub
push
sbb
push
cmp
sbb
and
inc
dec
sbb
inc
inc
push
cmp
lret
repz
mov
or
int3
out
or
loop
loopne
xlat
or
psllw
std
ficoms
sbb
or
add
pop
and
jmp
clc
sub
out
add
and
pop
push
jmp
sub
xor
incl
cmp
daa
pop
sbb
and
sbb
inc
ds
or
sub
cmp
cmp
and
inc
arpl
and
xor
out
clc
iret
neg
in
sti
into
fcomp
roll
loope
aad
stc
in
leave
xlat
into
in
sar
out
loopne
add
adc
aam
push
pop
pop
jmp
loop
add
call
adc
adc
lock
adc
cmp
sbb
or
xor
cmp
adc
sbb
dec
cmp
and
inc
inc
daa
and
sub
dec
pop
sub
cs
xor
cmp
and
bound
inc
push
sub
mov
lods
in
std
clc
out
add
stc
loop
fcomi
bnd
aam
fucomi
lret
fdiv
hlt
add
push
or
or
push
in
notl
repz
pop
add
pop
in
es
sbb
pop
sbb
or
xor
ljmp
pop
xor
clc
or
or
xor
clc
inc
inc
and
cmp
push
or
or
es
and
inc
adc
sub
dec
pop
popa
and
xor
pop
cmp
push
in
int3
fnsave
int3
fucom
mov
fcmovnu
iret
in
push
adc
adc
call
xlat
fprem1
int
hlt
rorb
fcomip
adc
repz
sbb
cld
loopne
loop
in
or
sub
icebp
out
or
or
adc
adc
cli
and
ss
and
inc
and
add
and
dec
adc
adc
es
sub
cmp
inc
inc
addr16
and
cmp
mov
mov
fsubr
in
loopne
fucomp
cld
rcr
ljmp
repnz
rorb
rcl
or
in
hlt
pop
push
sbb
pop
clc
push
push
loopne
std
out
add
and
jmp
sub
and
adc
pop
or
cli
and
xor
and
push
daa
inc
inc
sbb
or
adc
dec
push
adc
sbb
pop
push
aaa
arpl
inc
push
and
sub
inc
imul
push
ljmp
cld
ljmp
fnstcw
add
or
int3
fmul
adc
loope
adc
in
or
icebp
jmp
push
icebp
out
add
in
sbb
pushl
lock
and
sub
cmp
das
or
cld
xor
xor
or
add
and
inc
es
and
dec
push
sbb
xor
sub
xor
pop
and
daa
sbb
push
es
ret
fcmove
fcmove
mov
out
cld
repnz
aam
in
roll
add
or
or
iret
or
sbb
xlat
push
adc
stc
sbb
add
out
sbb
sbb
add
pop
sub
sti
std
add
cs
cs
sub
xor
or
adc
adc
xor
and
cmp
inc
inc
pop
inc
sub
pop
push
inc
sbb
sub
xor
cmp
dec
xor
sbb
sub
dec
pop
inc
cli
mov
in
mov
idivb
aad
or
fisttpl
add
add
out
repz
rcl
jmp
sbb
jmp
pop
push
es
push
in
in
sbb
out
das
out
repnz
cs
add
sbb
pop
cs
cmp
aas
or
aas
inc
aas
sub
sbb
sub
xor
pop
push
push
push
xor
pop
cmp
gs
addr16
cmp
push
fdivrp
std
loope
loopne
flds
add
ljmp
fdiv
add
loopne
repnz
lock
pop
adc
and
daa
add
and
and
in
das
or
or
adc
xor
or
es
adc
inc
sub
push
cvttps2pi
sbb
inc
cmp
cmp
pop
cmp
push
arpl
push
dec
inc
sub
imul
lods
add
mov
in
fcmove
lret
push
icebp
adc
in
lret
rcl
loopne
roll
out
out
out
repz
adc
lock
stc
or
stc
and
es
sbb
das
or
or
hlt
sbb
add
aas
inc
cli
xor
and
daa
sub
cmp
sub
dec
xor
adc
xor
cmp
xor
push
pop
inc
dec
inc
aam
ror
in
call
sti
rol
jmp
cli
mov
repz
int3
pmaddwd
add
rorl
ficoml
fsubr
aam
fucomip
adc
or
cli
pop
in
sub
push
or
cmc
pop
add
cmp
inc
sbb
aaa
pop
or
xor
dec
sbb
dec
inc
or
es
dec
inc
inc
xor
dec
push
sub
pop
aaa
pop
inc
xor
bound
sbb
lretw
ret
in
call
mov
ffree
add
add
out
cld
loopne
loop
or
in
sbb
call
sbb
in
and
std
adc
cmc
pop
cld
and
ljmp
sub
push
aaa
ds
xor
sbb
inc
xor
inc
pop
adc
cmp
dec
cs
push
and
pop
cmp
sbb
pop
dec
cs
and
pusha
push
pop
dec
ss
mov
in
repnz
fucomip
lret
add
jmp
fmul
shr
int3
loopne
in
int
add
shr
loope
adc
or
or
jmp
push
cmc
daa
sti
pop
hlt
jecxz
sub
std
or
in
push
repz
lock
cmp
push
cmp
ucomiss
push
sbb
and
cmp
aas
cmp
cmp
das
and
push
sub
sbb
xor
inc
sbb
push
push
pop
pop
push
pop
pop
es
push
int3
mov
mov
sti
iret
loop
enter
fisttps
cli
or
add
adc
shl
add
add
or
or
adc
adc
repz
out
negl
cmc
jmp
or
ss
cmp
push
cmp
sbb
sbb
add
cmp
xor
push
push
dec
push
daa
adc
sub
push
sub
sub
inc
inc
arpl
imul
cmp
iret
mov
iret
fcmovne
mov
jecxz
fildl
hlt
add
iret
leave
adc
fsubrp
iret
loope
out
icebp
pop
sbb
adc
idiv
add
add
adc
or
daa
add
icebp
or
xor
adc
sbb
inc
inc
cmp
or
or
xor
dec
push
inc
xor
cmp
sbb
xor
pop
inc
xor
insb
and
dec
inc
enter
shl
aam
jmp
add
aad
lds
jmp
adc
shl
hlt
out
push
adc
out
std
push
sbb
imul
sub
and
or
lock
sbb
sub
adc
adc
sub
decl
and
xor
dec
inc
cmp
or
and
xor
cmp
push
sub
and
and
push
inc
inc
addr16
inc
inc
inc
pop
xlat
in
cld
stc
mov
sarl
lret
jecxz
iret
or
in
jecxz
call
sbb
sbb
adc
loopne
add
and
cmc
hlt
cs
xor
jmp
es
pop
incb
stc
sub
sbb
sbb
ds
and
or
cs
push
adc
dec
dec
inc
dec
pop
sub
push
cmp
push
arpl
pop
insb
hlt
mov
idivb
sti
xlat
rol
hlt
add
enter
rcr
enter
in
rcll
out
fmuls
fistpl
add
adc
sub
sti
sub
jmp
and
and
or
adc
xor
psignw
pop
sbb
inc
inc
dec
and
sub
and
push
pop
cmp
sbb
sbb
push
dec
push
ds
insb
dec
loope
cld
hlt
cld
in
call
fcom
lock
sti
ret
or
out
or
fsub
adc
in
stc
adc
add
and
add
sbb
hlt
pop
add
add
xor
es
and
das
testb
adc
xor
add
cli
sbb
push
pop
sbb
push
or
sbb
xor
push
adc
aaa
cmp
sub
ds
ss
dec
es
cmp
enter
fdiv
int3
add
stc
sti
neg
loop
out
fsubp
lret
add
add
adc
testb
sbb
push
jmp
sbb
es
jmp
add
adc
cld
add
and
or
negb
or
sbb
cs
sbb
xor
dec
ss
aas
inc
cvtpi2ps
and
push
adc
sub
pop
dec
pop
push
xor
cmp
pop
pop
dec
pop
inc
bound
idiv
int
lret
out
ljmp
std
ret
fmuls
loope
loopne
xlat
loop
or
adc
adc
pop
and
pop
pop
cmc
push
and
sub
adc
xor
adc
cmp
adc
adc
and
xor
and
es
push
and
push
inc
xor
sub
push
arpl
sbb
xor
push
push
inc
sub
inc
call
aad
in
add
mov
aad
into
in
popa
cmp
cmp
popa
push
ss
jbe
cmp
xor
jns
je
add
cmp
fbstp
pushf
cli
cmp
add
cmp
add
push
jmp
ljmp
cmc
out
cli
cli
or
pop
add
and
cld
sub
clc
adc
xor
add
sub
pop
sbb
sub
and
cmp
adc
and
inc
xor
inc
and
xor
pop
pop
dec
and
xor
pop
cmp
cmp
and
pop
jo
stos
out
sti
in
ror
jmp
shl
out
shl
cmc
or
pop
add
loope
or
int
loopne
into
add
call
push
adc
loope
xlat
faddl
and
call
pop
and
sbb
add
repz
push
sub
stc
xor
sbb
adc
aas
adc
adc
cmp
daa
and
push
dec
and
or
sub
and
dec
inc
inc
cmp
adc
popa
pop
pop
and
push
cmp
inc
cmp
pop
pop
ds
loop
in
int
fcmovbe
loope
cmc
loope
or
int
add
dec
hlt
icebp
hlt
sbb
fucomi
stc
fcmovnu
adc
adc
sbb
add
adc
out
paddd
xor
or
cs
daa
sbb
notl
inc
cmp
sub
dec
sub
sbb
sbb
inc
adc
xor
adc
cmp
push
cmp
insl
aas
gs
repnz
std
mov
stc
add
in
adc
add
adc
in
add
loope
aam
repnz
and
adc
icebp
cmc
fistl
sbb
in
call
and
cmp
pop
cmp
std
push
add
inc
sbb
cmp
dec
das
inc
daa
push
and
push
sub
ss
pop
push
pop
aaa
dec
aaa
and
push
inc
cs
iret
mov
fadd
ret
ret
movb
adc
sti
add
ud0
roll
out
rcr
out
and
clc
fucomp
idiv
icebp
loope
es
or
push
push
in
in
daa
adc
adc
add
daa
or
cs
push
xor
inc
aaa
cmp
inc
dec
sbb
pop
and
push
push
xor
adc
push
adc
pop
xor
inc
daa
bound
pop
and
sub
cld
mov
aad
faddl
add
fucom
fldl
or
adc
add
jmp
or
or
negb
in
es
stc
loope
sub
or
adc
in
xor
xor
xor
stc
cmp
pushl
daa
pop
add
cmp
add
dec
dec
dec
sbb
pop
push
dec
cmp
sub
and
inc
cmp
pop
pop
aaa
arpl
sub
div
fadd
in
out
add
rcl
ret
std
iret
push
shl
loope
rcr
fldpi
add
rorl
out
out
repz
xlat
lock
add
es
clc
add
in
cs
repnz
sub
cmp
pop
stc
stc
lcall
inc
inc
cmp
add
dec
inc
push
adc
and
sub
dec
sbb
push
inc
and
dec
cmp
dec
jo
mov
not
fstpt
mov
in
mov
lock
in
in
adc
adc
adc
or
xlat
adc
ficoml
add
and
add
jmp
pop
stc
adc
add
adc
stc
cld
sbb
sbb
add
pop
cli
sti
add
xor
cmp
push
push
xor
xor
sbb
push
cmp
pop
cmp
inc
cmp
xor
cmp
cmp
out
leave
int3
iret
loopne
icebp
lock
pop
enter
cld
int3
ljmp
lock
incl
or
push
in
loop
in
call
in
pop
push
add
push
pop
in
and
or
pop
sbb
add
and
add
aaa
inc
sbb
inc
incl
push
cmp
sub
dec
inc
or
xor
sub
xor
dec
dec
pop
push
push
pop
ds
outsb
sub
in
enter
repnz
add
sti
loopne
add
or
in
fsubrp
loop
in
add
hlt
call
cld
fimull
rorl
adc
out
sbb
sti
push
std
imulb
imull
or
jmp
push
adc
or
xor
aas
sbb
and
push
inc
inc
pop
inc
and
adc
daa
inc
push
xor
cmp
xor
sub
cmp
imul
and
out
clc
enter
mov
mov
movl
rcr
cld
adc
or
call
cld
push
sbb
fsincos
and
fists
or
sbb
add
sub
adc
or
and
adc
movups
sbb
cmp
pop
cmp
and
daa
push
and
inc
push
adc
sub
inc
push
push
dec
sub
inc
dec
pop
xor
push
bound
xor
call
cld
ljmp
loope
xlat
loope
or
fmul
repnz
push
out
adc
or
adc
sbb
sbb
sbb
sbb
out
out
daa
sub
and
sbb
xor
pop
push
sbb
sti
sbb
or
inc
adc
adc
incl
pop
inc
sub
or
push
dec
dec
push
and
dec
inc
push
dec
das
xor
arpl
xor
and
cmp
dec
push
das
fcmovbe
mov
fcos
mov
clc
idivb
sar
or
add
in
out
clc
or
sbb
sti
imulb
push
sti
sti
and
out
ljmp
add
or
stc
sub
adc
sub
xor
pop
cs
sbb
push
xor
das
pop
daa
ss
adc
ds
popa
pop
cmp
push
and
cmp
popa
das
dec
out
cld
int
rcl
ljmp
repz
leave
xlat
aam
out
pop
fisttps
jmp
rcl
in
stc
jmp
fstl
pop
div
cli
pop
ficoml
sub
and
sub
out
adc
repz
adc
xor
sub
adc
inc
add
inc
inc
inc
sbb
and
sqrtps
dec
and
xor
pop
cmp
and
xor
pop
push
pop
sbb
aas
gs
insl
mov
lock
in
out
loop
mov
aad
stc
aad
fadd
repnz
cld
aam
add
or
cld
stc
cld
out
or
neg
push
in
adc
sub
out
ljmp
daa
out
push
push
out
repz
cmp
pop
paddw
add
or
add
and
dec
pop
xor
push
adc
dec
xor
cmp
aas
pop
inc
bound
pop
imul
cli
repnz
mov
shr
std
out
add
loop
jecxz
int
into
fdivp
lock
add
aad
aam
hlt
aam
sbb
stc
push
or
adc
fdivr
pop
add
add
push
das
adc
adc
adc
cmc
xor
adc
and
cmp
or
inc
cmp
aas
push
push
cmovne
push
sbb
pop
cs
pop
inc
and
and
pop
dec
ss
dec
stc
mov
into
out
in
ffree
icebp
clc
loopne
fadd
call
lret
loopne
or
sar
sbb
cli
or
adc
repz
adc
sbb
fldl
sti
or
or
xor
sbb
sub
push
xor
adc
sbb
add
sbb
or
sub
inc
dec
push
sbb
xor
adc
push
cmp
push
inc
and
push
aas
inc
and
cmp
into
mov
repz
mov
or
fsubp
bnd
add
out
or
repz
adc
icebp
adc
or
sub
cld
sbb
pop
out
ss
out
adc
and
sub
adc
and
add
adc
sbb
cmp
sbb
adc
das
xor
sbb
push
popa
pop
pusha
pop
cmp
xor
sub
inc
cmp
div
aam
clc
inc
not
aad
or
adc
add
rcl
in
aam
into
repz
out
cli
add
idiv
add
in
or
push
sbb
incb
push
and
add
cs
or
cmp
sbb
cmp
inc
add
xor
sub
and
push
inc
and
pop
push
ss
adc
aas
cmp
pop
xor
inc
cmp
popa
push
pop
ds
lret
repnz
mov
fstpt
out
sti
cli
fucom
cli
ljmp
push
int
in
fcom
sbb
or
sti
stc
out
add
repz
ficoml
push
or
and
and
push
lock
sub
das
std
sti
stc
adc
inc
cmovo
adc
xor
adc
sub
sbb
push
inc
pop
cmovp
pop
xor
sub
xor
sbb
pop
arpl
cmp
cmp
stc
mov
shlb
mov
stc
std
add
add
into
jmp
adc
adc
or
push
test
push
and
cli
cmc
sub
or
add
out
add
pop
cmc
cmp
cli
cmp
ss
push
comiss
xor
cmp
dec
das
inc
daa
cmp
or
push
cmp
push
dec
cmp
pop
dec
cmp
cmp
aaa
inc
cmp
cmp
inc
aam
int
aad
rol
fcomp
repnz
clc
aam
in
int
fcmovnbe
loop
into
int
push
clc
lock
fcmovu
out
sbb
sbb
and
mulb
or
sbb
add
adc
adc
sbb
std
sbb
inc
inc
xor
ds
sub
push
sub
dec
push
sub
push
dec
ss
push
dec
xor
inc
and
xor
push
cmp
insb
sub
in
xlat
cmc
clc
testb
sarb
neg
add
push
in
or
cli
int3
in
call
or
call
icebp
stc
adc
loope
sub
and
and
or
or
and
or
push
sbb
add
sub
pop
inc
sub
xor
dec
sbb
cmp
dec
xor
sbb
addr16
push
pop
idiv
in
sti
in
into
mov
out
clc
std
loope
fistpll
out
std
repz
int3
or
loopne
sbb
push
repnz
loope
sub
icebp
add
es
icebp
sbb
pop
lock
or
pop
inc
divl
add
and
inc
or
push
or
and
cs
push
push
dec
xor
pop
and
ss
inc
pop
insb
cmp
mov
int
hlt
fdivrs
in
jecxz
out
stc
xlat
in
clc
jmp
or
or
add
rcl
shl
sbb
pop
cmc
std
xlat
stc
fsubl
sbb
std
adc
and
add
imull
sub
sbb
xor
out
adc
and
sub
sti
cld
hlt
add
xor
daa
sbb
daa
push
add
xor
push
inc
and
xor
sub
inc
sub
and
cmp
and
addr16
lock
xlat
rcl
mov
mov
stc
ret
movl
in
repnz
repz
ljmp
fcomi
clc
jmp
adc
add
pop
sti
fisubl
cli
add
adc
and
or
adc
cli
or
sti
sbb
sti
notl
inc
inc
dec
dec
and
cmp
dec
inc
push
dec
sub
aas
inc
push
cmp
push
push
cs
adc
pusha
fs
cmp
push
popa
pop
inc
insb
gs
mov
sar
ror
mov
mov
lret
out
rorb
jmp
aad
sbb
jmp
adc
in
sbb
adc
hlt
hlt
add
sub
das
push
sti
lock
adc
sbb
sbb
adc
xor
daa
adc
and
sbb
adc
sub
xor
pop
sbb
push
aaa
and
and
inc
es
push
push
push
and
cmc
shl
aad
mov
fadd
or
out
add
ljmp
sbb
icebp
xlat
loope
icebp
and
std
and
cli
pop
pop
and
and
cld
es
and
sub
sti
sub
das
push
xor
adc
sub
or
push
or
sub
sub
cs
adc
dec
pop
sub
cmp
dec
inc
inc
inc
bound
cmp
sar
into
xlat
sti
mov
loope
fildl
repz
add
add
cld
loope
or
repz
push
aam
or
pop
adc
sbb
cmc
sti
add
sbb
add
std
ljmp
or
pop
and
daa
adc
cld
or
inc
clc
ss
and
and
sub
sbb
adc
adc
push
dec
adc
pop
aaa
sbb
aas
sbb
push
push
inc
outsb
and
in
fdivp
repz
mov
lds
mov
bswap
add
or
repnz
jmp
fbld
push
in
sbb
pop
mull
sbb
or
push
das
pop
stc
daa
or
or
add
aaa
pop
inc
inc
add
ds
cmp
sub
push
inc
adc
cmp
pop
and
pop
pop
xor
ds
sub
jno
idivb
mov
add
out
add
ret
in
out
lock
jmp
out
pop
into
imul
fcmovnu
cmc
repz
add
pop
add
loopne
adc
push
add
in
cli
sub
push
push
add
and
repz
sub
push
aas
adc
inc
adc
aas
push
or
aas
push
xor
xor
xor
pusha
pop
push
dec
fs
das
push
push
sub
ds
scas
idiv
aad
iret
icebp
lock
mov
aad
jecxz
fsubrp
ljmp
add
sbb
push
repnz
or
sbb
stc
notb
cli
push
idiv
or
and
and
and
or
sub
cmp
adc
or
sbb
sti
cmp
and
cmp
dec
xor
and
es
sub
pop
sbb
and
inc
and
sub
imul
jmp
jmp
cld
rol
mov
in
in
enter
clc
int3
add
or
rcll
adc
testb
or
fbld
sub
or
sbb
push
and
sbb
add
adc
sub
das
cmp
or
and
adc
or
sub
xor
push
sub
pop
aaa
aaa
inc
adc
aaa
inc
xor
pop
imul
lock
mov
iret
ljmp
ffree
fsub
add
lret
lret
aam
add
sbb
rclb
push
repz
and
cmc
and
loop
in
jmp
or
or
imulb
hlt
sub
cli
cmc
sub
hlt
incl
push
sbb
and
pop
cmp
push
adc
dec
and
adc
sbb
pop
popa
ds
dec
and
sbb
inc
arpl
out
icebp
lret
ljmp
fadd
shr
xlat
clc
ret
or
lret
enter
push
shr
lret
sbb
adc
sbb
mul
jmp
adc
adc
repz
sbb
push
sub
add
sub
mull
cs
adc
sbb
es
inc
sbb
sbb
sbb
dec
and
aaa
sbb
cmp
cmp
daa
cmp
inc
push
inc
dec
push
jmp
cmc
sti
jmp
ret
out
in
cli
loope
sar
call
clc
loope
in
por
adc
fstl
neg
sbb
add
in
out
and
and
xor
or
das
or
out
or
xor
add
cmp
add
inc
or
pop
inc
and
das
daa
daa
adc
sbb
sbb
pop
dec
pop
xor
pop
cmp
popa
das
repz
xlat
fidivl
loop
neg
loope
stc
cmc
add
push
add
in
adc
sbb
or
call
cmc
add
and
adc
fsqrt
cld
stc
jmp
daa
sub
and
xor
pop
xor
push
sub
push
inc
testb
and
and
cmp
and
xor
ds
dec
push
xor
xor
dec
sbb
sbb
fs
pop
pop
pop
gs
daa
ss
dec
sub
inc
clc
repnz
fsubr
stc
mov
idiv
rolb
add
rol
fcmovb
lret
int3
stc
stc
pop
call
ljmp
or
adc
pop
testl
cmc
cli
call
adc
or
lock
or
cmp
xor
xor
incl
and
xor
cmp
sub
adc
inc
sub
inc
push
push
sbb
dec
xor
pusha
pop
pop
pop
pusha
xor
push
ljmp
clc
mov
xlat
int
dec
cld
or
out
push
rolb
fcmovbe
neg
adc
fisubs
cli
hlt
loopne
lock
clc
jecxz
in
sub
in
sbb
incb
das
sub
icebp
and
cmp
cmc
sbb
cmp
add
das
aas
inc
or
pop
pop
aaa
pop
and
add
xor
push
cmp
sub
pop
sbb
pop
inc
fs
dec
push
sub
mov
iret
add
out
out
repnz
sti
aad
pop
ret
into
add
enter
adc
or
repnz
adc
negb
ljmp
testb
incl
adc
sub
in
daa
pop
pop
and
adc
or
inc
sbb
xor
or
cmp
aaa
cmp
dec
dec
daa
push
dec
xor
inc
cmp
dec
dec
aas
sbb
pop
sbb
and
pop
pop
dec
and
cli
mov
sarl
mov
push
ret
enter
fdivrp
add
in
loop
out
add
add
jecxz
add
and
in
adc
loop
or
in
jmp
icebp
ljmp
or
stc
clc
cmp
and
or
sub
or
sub
push
adc
inc
ss
pop
push
pop
sub
xor
inc
dec
push
and
xor
dec
dec
dec
fsubr
fdivr
dec
in
fdivrp
cli
pop
push
ret
in
loopne
dec
into
add
int3
incl
or
sbb
adc
and
fcoml
jmp
in
nop
or
add
and
out
jmp
add
add
es
das
cld
push
idiv
add
and
inc
add
sub
inc
push
pop
push
cmp
es
adc
sub
arpl
popa
es
push
xor
cs
mov
cmc
hlt
mov
fstp
hlt
cld
iret
ret
loop
in
pop
into
adc
int3
lret
jecxz
iret
adc
rorl
icebp
sbb
push
add
sbb
in
push
add
sbb
out
jmp
das
xor
sbb
xor
cmp
dec
sbb
nop/reserved
sbb
inc
pop
es
dec
sbb
push
push
cmp
cmp
inc
and
cmp
sub
mov
lods
int3
aam
stc
int3
mov
enter
add
or
add
call
jmp
call
pop
add
daa
hlt
repz
ljmp
sbb
add
xor
adc
sbb
push
push
push
sub
adc
adc
add
inc
sbb
and
sbb
inc
inc
daa
inc
or
xor
pop
inc
xor
es
dec
cmp
inc
sub
cmp
cmp
inc
dec
inc
inc
pop
dec
jo
xlat
aad
aam
sti
aad
add
hlt
cld
rol
fcmovnbe
enter
or
push
sti
jmp
add
aad
icebp
sti
sbb
cli
hlt
or
hlt
fists
sbb
or
call
jmp
sbb
daa
das
xacquire
sbb
xor
ss
and
sti
sbb
xor
adc
inc
push
cmp
or
dec
inc
xor
cs
pop
pop
cs
sub
and
es
xor
push
imul
mov
hlt
clc
mov
ret
aad
xlat
rcl
fildl
loopne
loope
repz
not
sbb
sbb
out
add
add
pop
cli
mulb
call
sbb
add
push
or
repz
sbb
cmp
sbb
add
das
adc
sbb
add
dec
pop
and
or
xor
xor
push
push
dec
cmp
sbb
cmp
pop
sub
insb
cmp
mov
div
mov
ror
rcl
in
loope
icebp
ret
stc
loopne
or
in
in
cld
in
push
or
or
repnz
repnz
pop
or
sbb
push
sbb
add
daa
jecxz
cli
call
es
aaa
adc
sub
or
sub
inc
pop
and
sbb
or
sub
inc
sub
cmp
sub
cmp
push
sub
sbb
pop
xor
popa
ds
ror
repz
lret
mov
iret
cli
call
ret
jecxz
paddsw
jmp
call
repnz
push
fildl
and
fists
adc
sbb
in
and
adc
or
xor
cmp
sub
or
or
sbb
daa
and
cmp
add
sub
dec
dec
es
inc
and
dec
push
pop
dec
arpl
popa
aaa
sub
inc
fs
sub
fcmove
cli
lret
mov
mov
enter
in
clc
fcomi
leave
add
or
push
shr
call
sbb
adc
out
jecxz
sbb
and
sbb
and
or
in
sbb
das
aaa
pop
icebp
cmc
icebp
clc
es
or
call
or
or
dec
dec
es
inc
cs
and
push
xor
sbb
dec
and
popa
push
pop
and
inc
jmp
out
fcomi
call
lock
cld
loopne
aad
lret
add
into
rorb
adc
call
and
adc
sub
idiv
testb
std
push
and
push
or
add
sub
and
sti
xor
xor
push
or
add
inc
inc
inc
add
sub
or
cmp
dec
dec
and
das
getsec
cmp
sub
and
pop
ds
push
pop
cmp
pusha
cmp
mov
cli
in
in
repz
iret
mov
or
jecxz
loope
int
shl
add
loopne
aad
stc
adc
ljmp
pxor
add
out
add
es
push
sbb
or
cmp
sbb
cmp
cmp
sub
cs
xor
push
pop
push
cmp
pop
pop
dec
push
pop
cs
daa
and
inc
pop
pop
bound
in
std
mov
out
mov
loopne
std
cli
loop
push
rclb
out
pi2fw
in
shl
lock
lcall
fimull
pop
and
sti
add
loop
add
jecxz
ljmp
adc
add
or
sti
sbb
cld
inc
adc
inc
dec
sbb
daa
dec
inc
sbb
push
and
push
sub
dec
push
cmp
sbb
das
and
cmp
inc
pop
clc
mov
ljmp
in
aam
fsubrp
fisttpl
or
loope
add
cli
test
or
pop
add
adc
add
pop
sbb
sub
or
sub
aaa
clc
inc
ss
ds
es
es
sbb
push
es
push
or
adc
push
aaa
aaa
cmp
xor
inc
xor
inc
and
pop
inc
insb
mov
lret
mov
xlat
into
repz
sarl
jmp
add
ror
call
icebp
out
sbb
repz
sbb
in
jecxz
daa
fsubrl
pop
and
in
in
sub
and
icebp
xor
push
xor
sub
add
dec
cmp
and
dec
xor
ss
cmp
dec
adc
push
sbb
sub
push
push
xor
daa
insl
sub
dec
inc
out
enter
hlt
into
mov
std
mov
or
in
add
ljmp
fsubs
sbb
std
xlat
and
or
in
and
push
out
or
add
sub
xor
add
add
and
or
push
sbb
push
push
inc
sbb
xor
cmp
xor
aaa
push
and
push
aad
lret
ljmp
mov
in
fcmovnu
in
in
incb
call
in
sbb
lock
std
adc
sbb
hlt
filds
sbb
and
sti
stc
add
xor
add
adc
cmp
xor
ds
inc
push
dec
cmp
inc
inc
push
xor
and
cmp
sbb
dec
xor
xor
fs
aas
pop
cmp
push
shll
aam
in
add
aad
roll
repnz
ret
ffree
stc
fildl
lock
or
in
div
rclb
or
and
lock
add
sbb
sbb
in
add
adc
push
jmp
das
sbb
xor
stc
and
xor
add
sbb
cmp
and
sub
sub
daa
xor
adc
xor
xor
sub
pusha
gs
mov
fcmovu
mov
hlt
aad
cmc
out
or
hlt
add
fisttps
lret
int
add
adc
jecxz
out
aad
sbb
cld
adc
repz
or
sti
add
xor
lock
sbb
das
xor
and
cmp
and
cmp
xor
or
es
push
sbb
cmp
cmp
pop
xor
inc
xor
cs
stc
std
lret
cmc
mov
add
add
rcl
or
clc
les
add
testb
add
hlt
repz
adc
adc
hlt
and
and
adc
sub
adc
jmp
hlt
push
add
adc
hlt
push
cmp
aas
cmp
and
das
and
sbb
sub
and
and
dec
dec
push
xor
cs
push
adc
xor
pop
xor
sbb
inc
cmp
imul
lret
into
lock
iret
fcos
pop
add
fmul
decl
leave
fsts
fucom
out
fcomip
ljmp
pop
fcomp
sbb
imulb
add
das
repz
icebp
out
add
daa
sub
sbb
cmp
sub
xor
ss
es
pop
dec
comiss
dec
pop
sub
xor
sbb
pop
inc
and
cmp
cmp
dec
bound
lret
mov
faddl
ret
fsubr
or
or
jmp
in
or
adc
or
push
or
or
push
sub
out
sub
sbb
lock
cs
sbb
cmp
sub
sbb
es
inc
push
sbb
and
push
dec
and
push
inc
sbb
push
cmp
push
inc
inc
pop
push
xor
sub
imul
xlat
mov
xlat
lock
fsubp
stc
ret
or
or
shl
ror
shr
imul
or
or
adc
lock
clc
loop
out
loop
add
daa
das
xor
adc
sub
push
mov
inc
sbb
push
push
dec
sub
inc
push
inc
sub
push
inc
cmp
cmp
inc
xor
aas
arpl
and
pop
sbb
pop
imul
fdiv
scas
mov
mov
in
icebp
aad
cli
in
jmp
lock
add
shl
xlat
adc
neg
push
sbb
repnz
add
std
hlt
push
and
and
sbb
sub
cmp
cmp
adc
inc
cmp
cmp
ds
sub
push
sbb
push
push
push
push
aaa
pop
pop
cmp
aaa
popa
and
inc
inc
pop
daa
outsb
pop
lret
mov
idivb
mov
add
hlt
add
add
fcmovnbe
or
or
adc
add
and
in
fdivr
pop
sti
or
stc
jmp
adc
and
lock
and
sti
xor
cmp
psubw
incl
sbb
xor
cmp
dec
inc
sbb
sub
inc
inc
sub
push
inc
xor
pop
cs
and
daa
inc
xor
pusha
aaa
fs
aad
sti
out
lret
sti
rolb
add
aad
jmp
fsts
out
push
in
pslld
add
jmp
adc
add
push
fpatan
add
or
or
daa
cli
sbb
adc
or
sub
adc
push
cmc
sbb
push
ucomiss
adc
cmp
pop
and
and
add
and
and
adc
inc
sub
push
sbb
pop
push
pop
inc
cmp
push
xor
fs
outsl
gs
neg
out
mov
add
out
int
out
out
clc
lret
ljmp
out
enter
icebp
ljmp
fsubrp
in
and
and
sbb
and
stc
pop
call
xor
add
sub
or
or
adc
sbb
and
sub
or
inc
dec
inc
push
push
inc
das
push
sub
ss
sbb
inc
cmp
xor
and
and
inc
ds
jecxz
idiv
mov
mov
loop
in
or
shl
jmp
into
in
cmc
in
in
adc
pop
rcll
lcall
add
adc
hlt
out
ljmp
sub
or
or
push
sbb
adc
sbb
inc
add
and
cmp
xor
inc
push
cmp
sub
dec
sub
push
arpl
pop
pop
pop
gs
jmp
jmp
sarl
std
int3
pop
or
or
iret
testb
hlt
in
or
cli
roll
adc
loope
in
pop
add
and
sbb
add
cmp
sub
cmp
inc
xor
inc
adc
cmp
push
inc
sbb
dec
daa
sub
xor
push
and
aaa
dec
pop
cmp
dec
push
arpl
xor
sub
outsb
mov
shlb
cld
cli
add
loope
hlt
out
jmp
out
out
adc
aam
loope
clc
cld
cld
push
sbb
icebp
cld
fdivrp
std
icebp
adc
adc
in
stc
sbb
and
pop
cmp
aaa
repnz
xor
push
sbb
xor
inc
sbb
add
push
adc
sub
xor
sub
push
sub
adc
cmp
addr16
dec
push
pop
and
aad
mov
cmc
mov
fdivrs
in
fldl
in
fisttps
rcl
add
icebp
cld
std
sbb
std
es
sti
push
jecxz
add
sbb
out
and
xor
in
add
aaa
and
clc
sub
clc
xor
cs
pop
cmp
and
pop
dec
sub
dec
push
push
cmp
sub
sub
xor
pop
cmp
pop
and
popa
and
dec
inc
inc
sub
in
clc
mov
fcmove
into
lret
ret
repz
out
or
in
or
loopne
cmc
loop
stc
in
rcll
clc
or
and
adc
in
or
das
std
or
out
add
add
or
sti
cmp
or
xor
es
lcall
and
ss
inc
sub
xor
and
adc
adc
cmp
ss
and
xor
cmp
and
push
outsb
in
mov
fucomp
mov
aam
add
add
add
out
adc
not
or
notl
or
add
push
and
or
daa
and
sti
and
or
xor
divl
decb
push
pop
and
pop
sub
cs
sub
inc
dec
and
push
dec
pop
dec
dec
adc
pop
pop
xor
ds
gs
aas
and
pop
jo
jecxz
jmp
icebp
test
testb
std
aam
loopne
fsubrp
jmp
or
adc
or
call
fucom
adc
out
and
clc
es
add
pop
or
pxor
xor
sub
adc
push
inc
inc
and
sbb
inc
inc
or
push
cmp
sub
sub
daa
das
pop
dec
ss
dec
and
popa
aaa
arpl
ss
push
pop
call
lock
out
repz
or
in
cld
fcomp
loop
add
rolb
or
jmp
and
or
jecxz
jmp
adc
sub
pushl
repnz
cs
push
adc
hlt
cmp
or
sbb
add
add
inc
or
inc
or
dec
daa
xor
push
push
cmp
gs
inc
arpl
ds
mov
mov
cmc
mov
add
add
sti
ret
stc
repz
out
or
in
out
imul
cmc
hlt
sbb
or
push
adc
sbb
and
cld
and
add
and
add
or
push
adc
pop
sub
notl
ss
sbb
sbb
push
and
xor
dec
das
inc
inc
ss
aaa
cmp
ss
inc
popa
and
cmp
inc
arpl
out
neg
mov
add
in
call
int
loope
lret
pop
in
repnz
aad
adc
lock
and
add
icebp
loopne
sbb
sub
sbb
cs
repnz
out
sub
adc
cmp
and
sbb
sbb
inc
es
push
daa
sub
cmp
cmp
pop
es
dec
pop
cmp
inc
pop
pop
inc
sub
sub
mov
mov
cld
movl
xlat
add
ljmp
lock
in
out
sbb
aam
add
push
clc
cld
incl
and
jmp
es
cmc
aaa
push
pop
sbb
pop
adc
sbb
inc
aas
cmp
sbb
sub
cs
cmp
pop
pop
sbb
sbb
push
pop
push
aas
push
daa
xor
pop
imul
shl
out
jmp
fcmovnu
mov
push
or
stc
test
rorl
or
call
adc
cld
adc
fucomi
ljmp
add
sub
sub
and
push
or
add
xor
es
xor
xor
add
cmp
cs
push
das
sbb
pop
sbb
push
dec
cmp
inc
xor
ss
popa
imul
mov
ljmp
rcl
icebp
mov
cmc
loop
out
jmp
lret
or
or
repnz
imul
std
sbb
loopne
hlt
loopne
loope
fnstsw
sbb
or
adc
add
cli
push
sbb
sub
adc
adc
ss
adc
and
and
sbb
inc
ds
inc
xor
and
sbb
cmp
and
xor
inc
gs
lock
out
mov
out
loopne
out
hlt
loopne
add
enter
lret
push
or
psrad
sbb
pop
sbb
mul
pop
and
adc
and
and
push
push
adc
adc
and
and
push
clc
sbb
daa
divl
sub
das
inc
inc
and
cmp
cmp
and
daa
daa
inc
das
sub
sub
inc
sbb
dec
and
pop
cmp
push
and
imul
rcl
hlt
mov
jmp
clc
int3
rorb
std
add
fsubp
roll
call
icebp
and
loope
adc
sbb
sbb
sub
sbb
xor
repnz
cmp
inc
sbb
cmp
pop
and
sub
or
dec
sub
dec
inc
and
and
adc
push
sub
cs
pop
inc
xor
sub
mov
out
iret
lock
out
rcl
add
shr
shr
roll
in
cld
or
in
ljmp
lock
repnz
in
or
add
aad
mul
push
adc
and
sub
sbb
or
cmc
xor
sub
adc
icebp
xor
cmp
daa
cmp
sbb
dec
push
or
aaa
dec
daa
xor
dec
cs
das
sbb
aaa
aas
daa
pop
pop
inc
insb
aas
aas
cmp
mov
fdiv
cld
sar
std
mov
out
lds
in
fmull
or
add
or
or
call
fcompl
hlt
repnz
clc
negb
sbb
or
push
cld
xor
or
or
sbb
adc
sbb
xor
pop
aaa
ds
inc
cmp
adc
inc
adc
push
and
dec
push
dec
dec
sbb
pop
pop
xor
push
pop
imul
iret
aam
shl
add
fiadds
cmc
loop
jecxz
cld
add
int3
fsubrp
out
fsubrp
lret
jecxz
nop
hlt
push
hlt
hlt
fiaddl
fucomp
in
idiv
and
sbb
or
pop
in
and
icebp
add
and
sub
cmc
or
or
xor
adc
inc
xor
inc
es
inc
sub
or
and
xor
cmp
popa
ds
pop
arpl
dec
inc
xor
dec
jmp
hlt
iret
clc
leave
rcl
icebp
flds
sar
in
or
xlat
out
or
jmp
or
ljmp
sbb
incl
or
sbb
sbb
or
xor
add
and
sub
das
xor
cli
sbb
sub
add
sti
aas
adc
or
daa
inc
sub
sub
sub
dec
push
dec
xor
push
push
pop
sbb
dec
xor
pusha
pop
push
pop
pop
data16
sub
cli
leave
mov
cld
fucomip
cld
mov
hlt
mov
pop
fdivrp
out
les
in
cli
in
clc
or
adc
pop
or
sbb
stc
and
incb
add
das
and
sub
and
or
das
sbb
sub
and
cmp
cmp
cmp
dec
cmp
das
push
pop
dec
dec
xor
cmp
cmp
das
pop
pop
cmp
and
popa
sub
call
mov
mov
rolb
add
loopne
push
pop
adc
call
imul
cld
into
or
lock
sbb
and
cmc
sbb
sub
and
push
jmp
sbb
add
and
sbb
and
ss
and
dec
add
es
push
or
sbb
push
xor
pop
inc
es
bound
push
outsb
pop
jo
mov
in
in
mov
repnz
into
hlt
add
cmc
leave
repz
jmp
or
jecxz
pop
jecxz
loope
add
xlat
push
out
adc
add
div
sbb
and
sbb
adc
repnz
and
adc
sbb
and
cmp
or
sub
das
cmp
sub
pop
ss
pusha
sbb
push
push
das
xor
cmp
pusha
sub
ss
dec
mov
int
aam
loope
sarb
or
sti
out
lock
jmp
shl
sbb
sbb
jmp
pop
sti
and
loopne
clc
call
adc
xor
sub
add
xor
cmp
sub
xor
cmp
or
dec
dec
inc
push
xor
dec
dec
dec
es
das
xor
cmp
fs
cmp
arpl
lods
lods
fxtract
sar
icebp
mov
mov
add
or
or
out
lock
or
ljmp
movhps
out
push
daa
and
sti
sub
sub
sysret
or
and
adc
adc
inc
adc
sub
inc
add
push
adc
xor
dec
sbb
dec
cs
cmp
push
dec
pop
sub
dec
fs
mov
lret
mov
repnz
aam
add
neg
or
loop
imul
rorb
into
add
notb
adc
aam
pop
or
loopne
cli
and
clc
in
or
pop
add
mulb
clc
in
jmp
xor
cmp
or
idiv
and
clc
inc
inc
and
es
cmp
push
push
cmp
adc
cmp
pop
sub
aas
inc
pop
fs
cmp
arpl
sub
lds
clc
push
hlt
cld
sti
aam
repz
ret
call
into
add
push
pop
lock
push
add
cli
lock
loopne
icebp
and
adc
or
or
add
push
xor
cmp
sub
sbb
paddw
cmp
add
sbb
or
sub
and
push
dec
adc
push
sub
dec
sub
pop
cmp
push
arpl
dec
inc
pop
cs
shl
sar
add
jmp
mov
rcr
out
fcomi
fsubr
int
adc
add
push
paddsb
stc
xlat
or
fisubl
sbb
repz
and
sub
das
add
paddsw
cmp
sti
cmp
sti
xor
sbb
add
dec
push
push
or
cmp
aas
sub
dec
push
adc
sbb
sbb
inc
cmp
pusha
and
sub
and
sar
mov
aam
clc
fcmovnu
pop
out
add
int3
add
enter
out
add
mul
pavgw
shl
or
adc
loopne
std
cmc
adc
sbb
push
sub
cld
pop
sti
sub
repnz
or
and
repnz
add
sbb
dec
inc
cmp
or
and
inc
sub
push
cmp
pop
pop
sbb
es
pusha
xor
das
pop
aaa
and
push
cmp
pop
dec
pop
dec
inc
call
fsub
xlat
lret
add
cli
repz
or
out
out
sti
leave
ljmp
iret
in
or
jmp
adc
cld
sbb
loop
loope
out
or
stc
jecxz
in
out
sbb
adc
adc
xor
or
adc
sbb
push
push
and
or
sbb
and
dec
or
sub
dec
sbb
push
fs
xor
imul
mov
fcomip
std
aad
add
out
push
in
incb
out
sti
jmp
adc
or
sbb
repnz
fstl
sbb
in
adc
call
xor
cmc
push
hlt
xor
sub
cli
push
ss
sbb
cmp
sbb
pop
daa
push
daa
inc
das
or
aaa
sub
cmp
xor
and
and
push
cmp
icebp
in
clc
sarb
shl
aam
in
call
lret
add
test
add
sbb
loope
lock
es
cmc
cli
sub
adc
or
add
or
pop
sub
adc
adc
inc
cmp
cmp
aas
dec
and
cmp
and
inc
and
cmp
sub
popa
xor
cmp
ss
cmp
and
pop
insb
dec
not
mov
mov
lock
ret
jmp
or
push
loope
loop
or
hlt
add
adc
jecxz
sti
or
or
adc
and
or
and
in
adc
and
cmp
cmp
cmp
cli
sub
adc
and
adc
cmp
or
and
adc
and
push
xor
sbb
cmp
inc
pop
inc
pop
arpl
push
imul
loop
mov
mov
mov
in
repz
sar
loopne
leave
jmp
repz
pop
or
sti
pop
pop
or
sti
sbb
add
pop
stc
add
add
and
and
pop
lock
and
sbb
add
add
xor
dec
xor
dec
dec
adc
xor
inc
xor
pop
pop
push
sbb
inc
push
popa
daa
es
imul
dec
cli
fmul
mov
cli
fidivrs
jmp
leave
call
loop
lret
adc
aam
ficoml
or
sbb
std
sbb
adc
add
jecxz
repnz
cli
sub
xor
sub
xor
push
stc
stc
inc
add
add
sub
sbb
sbb
push
push
sub
aas
inc
sub
push
xor
pop
das
dec
pop
sub
sbb
pop
pop
xor
dec
sub
pop
out
iret
mov
mov
ret
stc
aad
shl
leave
out
pop
fcomip
adc
cmc
adc
call
jmp
fiadds
add
and
push
sbb
add
jmp
sbb
add
add
cmp
idivb
or
xor
add
inc
or
or
or
push
daa
xor
adc
dec
sub
cs
push
inc
pop
xor
dec
cmp
push
sub
clc
hlt
mov
mov
into
add
imul
les
add
cld
or
add
repz
icebp
hlt
sbb
icebp
push
adc
cli
pop
call
daa
add
xor
pop
or
xor
ss
sub
cmp
adc
sub
sbb
inc
adc
xor
sub
inc
sbb
dec
xor
dec
dec
das
xor
and
pop
daa
cmp
pop
cmp
push
cli
repz
aad
lret
int
cmc
add
repnz
clc
fadds
fadds
fsub
into
icebp
lock
lret
loopne
roll
cli
cli
stc
ficomps
repz
sti
loop
or
push
pop
or
adc
add
push
or
sti
clc
xor
sub
inc
sub
aas
sbb
xor
inc
and
adc
sub
dec
dec
sbb
sub
daa
pop
inc
dec
push
push
pop
imul
out
sti
faddp
not
jecxz
faddl
jmp
jmp
add
in
or
add
sbb
out
icebp
sbb
or
and
sbb
add
sbb
push
sub
or
sub
icebp
sub
clc
adc
or
adc
inc
inc
sbb
push
sub
xor
cmp
and
dec
and
inc
push
xor
push
pop
sub
xor
and
and
imul
mov
in
dec
call
loope
aad
cli
out
testb
jecxz
lock
or
sbb
adc
adc
pop
add
sbb
add
and
and
push
and
sti
in
in
sub
es
xor
sub
xor
or
sub
pop
and
dec
push
aaa
and
sbb
inc
adc
push
pop
xor
adc
pop
pop
aas
push
dec
aaa
sub
push
insl
inc
gs
cli
stc
repnz
jecxz
mov
int3
or
or
icebp
loop
hlt
xlat
fadds
out
sbb
adc
add
and
or
mul
and
or
or
and
sub
add
sub
inc
pop
dec
daa
and
inc
adc
or
daa
cmp
xor
push
sbb
pop
xor
sub
pop
fs
aam
ror
call
fcom
add
rcr
jmp
in
loopne
in
int
jecxz
aam
add
cld
fistps
sbb
hlt
and
fsubp
testb
or
or
or
icebp
push
out
or
adc
or
notl
movaps
inc
sub
sbb
adc
and
daa
sbb
dec
sub
nopl
push
cs
and
cmp
and
xor
gs
inc
xor
ds
bound
arpl
lds
mov
test
shl
call
fimull
in
filds
add
aam
sbb
cmc
add
sbb
sti
and
sbb
out
out
in
sub
sub
jmp
sti
or
sbb
testl
xor
dec
dec
or
inc
or
adc
and
sub
adc
sub
dec
and
and
inc
pusha
cmp
push
cmp
pop
aaa
cmp
fld
cmc
xlat
sarl
fsub
fcomip
in
ret
loopne
jecxz
loop
push
enter
loope
in
in
adc
call
or
adc
mul
clc
stc
and
and
add
add
adc
sub
sbb
idivl
adc
pop
inc
aaa
sbb
or
add
and
sub
aaa
daa
adc
inc
cmp
xor
push
dec
sub
push
cmp
xor
pop
insb
inc
ret
neg
std
iret
fidivrl
out
in
add
xlat
incl
ror
fildl
repnz
cli
fldpi
loope
fstp
sti
pop
adc
loop
add
and
sub
adc
cmp
negl
adc
or
cli
sbb
pop
inc
cmp
pop
pop
and
inc
cvtpi2ps
dec
sub
xor
dec
adc
xor
inc
pusha
and
sub
dec
clc
hlt
in
stc
in
int3
call
cld
clc
stc
sti
or
ret
jmp
or
fiaddl
enter
int
adc
or
shl
adc
sbb
add
and
clc
or
or
or
xor
repz
adc
and
and
adc
add
xor
adc
dec
pop
sbb
inc
sbb
or
and
daa
xor
dec
sub
cs
push
pop
imul
xor
int3
out
mov
loopne
shl
add
mov
jmp
stc
fisttpl
sti
in
or
or
int3
int
stc
sbb
lock
sbb
sbb
clc
cld
sub
add
add
daa
adc
and
or
daa
inc
push
es
aaa
push
dec
or
and
dec
push
and
das
pop
pop
adc
and
pop
es
sub
inc
dec
bound
repnz
mov
fxch
add
jmp
cmc
ret
lret
out
cli
push
fiaddl
ljmp
out
sbb
sbb
pop
cli
add
testb
cli
and
sti
stc
add
icebp
or
sub
sub
or
xor
sub
xor
and
inc
es
add
pop
cs
adc
es
pop
or
sbb
pop
push
cmp
fs
dec
inc
bound
dec
sub
ret
aad
out
stc
fsub
ljmp
sarb
call
int
ljmp
repz
add
jecxz
repz
call
push
and
nopl
das
sub
adc
aaa
testb
cmp
cmp
xor
pop
cmp
sub
inc
sub
dec
ss
xor
push
cmp
pusha
and
push
cmp
arpl
sub
mov
xlat
int3
cli
aam
roll
std
in
stc
into
sarl
in
add
leave
or
pop
rcr
sbb
sbb
sbb
sbb
fstl
es
sbb
in
sbb
mov
sbb
repnz
sub
adc
hlt
std
sub
sbb
pop
sbb
cmp
sbb
cmp
sbb
sub
aaa
popa
xor
and
push
gs
push
push
pop
sub
divl
xlat
repz
rol
clc
add
movb
fsubr
jecxz
push
adc
jmp
add
push
adc
add
decb
fiadds
pop
sti
adc
or
and
or
add
das
add
or
cvtpi2ps
pop
pop
xor
inc
add
pop
pop
dec
dec
dec
push
and
xor
and
adc
adc
pop
push
pop
inc
dec
and
push
dec
pop
dec
data16
in
hlt
fst
fucomi
fcom
add
fcmovnb
push
ret
add
fsub
fcoms
lret
in
adc
iret
notl
out
in
repz
sbb
sbb
cli
pop
pop
adc
and
jmp
push
sub
ljmp
pop
and
xor
repz
cmp
xor
xor
cmp
inc
and
sub
push
or
sbb
sub
inc
sbb
pop
sbb
adc
xor
sub
push
imul
fadd
clc
leave
fcmovbe
add
mov
icebp
clc
out
cli
fstp
add
loop
repz
pop
out
or
or
push
push
and
adc
or
sbb
sbb
or
std
sbb
out
or
pop
out
imull
add
sbb
cld
cmp
cs
incl
aaa
ss
add
dec
and
sbb
xor
push
dec
cmp
push
dec
push
dec
push
push
pop
sub
and
aas
pop
sub
arpl
dec
sub
ljmp
std
out
in
jmp
pop
enter
add
add
adc
fcompl
repz
adc
repnz
es
add
add
sub
add
cmc
add
xor
aas
sub
adc
inc
xor
sub
sbb
dec
dec
sub
dec
inc
es
dec
dec
push
aaa
cmp
push
xor
xor
and
bound
fs
cmp
inc
mov
mov
idiv
call
or
rclb
add
lret
out
cld
adc
std
clc
mul
loope
sbb
sti
jmp
cli
sti
adc
pop
repnz
out
ljmp
testb
sub
sbb
inc
add
ds
dec
sbb
inc
adc
sub
push
pop
cs
dec
aas
inc
inc
inc
sbb
pop
cmp
sub
es
mov
fcmovu
out
mov
add
aam
in
jmp
ljmp
add
cli
notb
or
cli
or
push
push
out
jmp
cld
loope
xor
cld
adc
or
and
stc
cmp
add
cmp
cmp
sub
adc
inc
adc
push
and
cmp
sbb
push
sbb
arpl
cmp
sub
bound
lods
fsubr
add
into
fcomip
repz
filds
test
fsub
ljmp
aam
adc
adc
add
or
push
repnz
push
and
sbb
repz
lock
adc
push
cmp
push
sbb
add
and
cmp
dec
push
and
pop
dec
dec
pop
pop
sbb
dec
arpl
pop
inc
aas
ds
push
ds
dec
cmp
in
cmc
leave
out
jmp
add
fiaddl
or
loope
lret
call
ljmp
call
adc
jecxz
pop
add
pop
or
sbb
or
adc
cmp
divl
xor
inc
add
add
pop
adc
daa
cmp
sub
dec
or
sub
inc
dec
dec
dec
inc
dec
and
push
aaa
pop
pop
and
cmp
pop
inc
pop
pop
mov
out
enter
add
clc
incb
push
std
or
aad
jmp
rcll
in
loopne
aam
push
sbb
sbb
push
loopne
cmc
and
cmc
add
out
or
lock
or
clc
or
ds
or
cli
or
sbb
or
pop
or
dec
cmp
or
push
aaa
sub
cmp
cmp
aas
and
and
push
cmp
sub
shl
mov
fucomp
neg
sarl
pop
push
cmc
add
add
jecxz
repnz
sbb
or
or
in
neg
and
pop
jmp
and
out
sub
lock
sub
add
xor
add
sbb
xor
and
dec
and
aaa
and
inc
dec
sub
xor
push
pop
aas
bound
pop
gs
arpl
gs
popa
push
push
es
jmp
out
in
in
fsub
out
vmaskmovdqu
incb
stc
xlat
cli
lret
pop
into
into
call
or
adc
or
fmuls
out
adc
cld
add
and
cli
sub
pop
sub
sbb
and
adc
adc
xor
or
sti
xor
adc
sub
daa
inc
inc
cmp
inc
xor
sub
cmp
inc
sub
push
dec
xor
cmp
arpl
and
imul
add
hlt
icebp
sti
add
out
cld
add
cld
out
ret
leave
repz
adc
or
cli
cld
fdiv
testb
adc
add
pop
out
push
add
and
sub
or
sbb
adc
xor
cmp
and
adc
sub
pop
dec
sub
ss
xor
cmp
bound
cmp
shl
out
enter
out
icebp
in
std
stc
rcr
not
call
jecxz
out
jecxz
in
push
or
jecxz
in
or
out
add
push
add
std
sbb
fdivrp
push
push
sbb
and
cmp
or
sbb
sub
cld
sbb
and
ds
adc
sub
cmp
rdpmc
inc
push
xor
cmp
dec
cs
and
sbb
pop
push
pop
gs
outsb
gs
jne
imul
data16
xor
cmp
xor
inc
outsl
jb
xor
sahf
ret
in
idivl
jecxz
ret
add
add
cmp
add
movsb
insl
lret
in
out
icebp
clc
cld
fsubr
fildl
fcmovu
loop
adc
into
adc
adc
call
sbb
fcomip
adc
cld
push
sbb
and
and
add
add
out
and
sbb
and
out
sbb
and
or
sub
cmp
cmp
xor
xor
push
pop
sbb
sub
inc
sub
xor
cmp
cmp
cmp
sbb
sub
pusha
jmp
into
sar
out
mov
add
ficoml
int3
enter
jmp
icebp
add
adc
repz
out
lock
add
sbb
stc
and
and
or
add
or
add
stc
cmp
sub
adc
add
aaa
push
ds
aaa
or
dec
das
pop
dec
and
cmp
pop
pop
inc
cmp
push
popa
pop
xor
sub
inc
sub
ret
aad
mov
ror
add
ret
cli
lret
into
add
fmulp
jecxz
or
cli
ficompl
fcomps
or
sbb
push
sbb
out
sti
sub
idiv
pop
add
add
jmp
xor
sbb
cmc
stc
xor
inc
and
sbb
adc
or
cs
adc
push
push
push
sbb
cs
adc
xor
push
and
push
sub
in
mov
mov
repnz
stc
loope
into
clc
call
cli
add
out
call
lock
iret
hlt
fdiv
jmp
sbb
testb
pop
stc
call
call
or
icebp
xor
cmp
ds
xor
sub
sub
sub
inc
xor
adc
push
sbb
sbb
ds
fs
sub
pop
inc
rol
out
hlt
mov
stc
add
add
out
fsubp
loope
fcmovu
ret
ficoms
loopne
ror
push
ficompl
adc
cmc
add
lock
out
std
add
add
jmp
and
cmc
add
std
adc
or
pop
add
dec
dec
inc
adc
or
sbb
xor
push
and
cmp
xor
popa
dec
data16
pop
pop
xor
and
mov
iret
into
mov
xlat
ffree
testl
in
or
loop
shl
aam
iret
rorb
adc
out
jmp
in
incl
sbb
testb
paddsb
pop
in
pop
add
xor
sbb
or
sti
ss
push
xor
sbb
sub
cmp
push
sub
xor
push
adc
push
push
pop
dec
sbb
dec
dec
xor
sub
outsl
dec
dec
icebp
mov
cmc
idiv
aad
lock
jecxz
repz
in
or
std
out
loope
fucomi
or
int
add
clc
adc
fistl
cmc
sbb
sbb
and
and
sbb
add
hlt
sub
das
cmp
xor
cmp
das
and
sub
or
or
xor
das
daa
pop
xor
cmp
daa
arpl
arpl
sub
mov
repnz
lret
shl
add
add
push
sti
jecxz
in
loope
out
cli
sbb
ljmp
push
pop
out
and
loope
or
es
sub
cs
or
and
cmp
cs
cmp
sbb
sub
sbb
xor
sbb
adc
xor
adc
sub
xor
bound
bound
dec
scas
shlb
sti
idivb
in
push
clc
testb
leave
adc
or
out
add
aam
out
hlt
stc
push
ljmp
loop
cmc
and
add
push
cs
call
or
adc
out
and
repz
cmp
sbb
cmp
cmp
sbb
inc
dec
sub
push
aaa
dec
add
ds
xor
or
xor
and
xor
das
pop
push
aas
pop
pop
pop
xor
cmp
arpl
push
in
std
lret
mov
add
add
push
add
add
add
int3
int
ljmp
repz
or
cli
push
cmc
loope
sub
or
sbb
or
or
xor
es
xor
cs
clc
das
adc
inc
cmovno
or
or
push
adc
xor
aas
push
dec
pop
dec
and
sbb
pop
and
aaa
pop
cs
cli
jecxz
div
xlat
into
loope
mov
out
mov
or
rolb
jmp
ljmp
lock
and
lock
sbb
add
das
or
adc
adc
xor
adc
sbb
xor
ss
push
sbb
adc
adc
pop
cmp
push
pop
push
ds
inc
outsl
sub
ret
loop
out
in
add
loop
test
jmp
in
fxch
push
out
imul
out
in
lock
stc
aad
adc
adc
sbb
and
and
or
add
lock
sub
and
adc
xor
or
das
cmp
and
add
adc
inc
sti
push
sub
pop
sub
sub
and
inc
pop
cmp
push
sbb
dec
sub
xor
cmp
scas
lret
mov
iret
out
shr
repz
in
fisttps
lret
fcmovnu
adc
aad
sti
jmp
aam
in
adc
sub
out
sbb
in
cvtps2pi
add
and
add
push
notl
and
and
std
std
aas
add
inc
add
or
das
sbb
adc
cs
daa
sub
inc
sbb
push
xor
sub
pusha
inc
pop
push
inc
and
mov
mov
fcmovu
shr
loop
mov
out
mov
fsubrp
or
loop
out
or
out
push
sbb
jmp
and
or
cmc
add
ljmp
add
and
cmp
notl
or
sub
cld
adc
xor
daa
or
cs
or
dec
inc
sub
sub
pop
dec
es
sub
pop
xor
cmp
push
es
stc
sti
in
fxch
mov
add
loop
or
adc
lret
or
stc
lock
or
cld
out
in
and
add
cmc
and
call
pop
or
push
sub
in
in
sub
and
lock
sub
sbb
add
sbb
cmp
add
and
cmp
inc
and
dec
push
cmp
push
pop
push
cs
cmp
and
dec
cmp
mov
sti
aad
lock
add
cld
cli
fcom
add
loopne
clc
rcl
shl
in
adc
sar
notb
fsincos
sbb
sti
loopne
in
repz
add
and
add
jmp
adc
or
adc
adc
xor
sub
inc
sub
push
dec
sbb
inc
and
or
sub
or
inc
pop
or
xor
aas
dec
sbb
pop
bound
sbb
imul
dec
outsl
lds
in
int3
fcomip
std
inc
vshufps
loope
add
sti
or
or
or
pop
cld
adc
push
loopne
in
repz
std
and
decb
cmc
push
sbb
in
adc
cld
add
push
daa
lock
sbb
cmp
sbb
push
ds
sub
adc
and
dec
push
push
adc
pop
push
and
pop
adc
dec
aaa
cmp
sbb
inc
fs
inc
inc
push
and
insb
dec
push
aas
cs
int
in
cmc
sar
in
std
mov
std
add
or
testb
ret
lret
rolb
adc
adc
push
fst
fisubl
adc
and
fcomip
repnz
and
and
push
sbb
std
sub
in
push
ljmp
cmp
xor
and
push
or
or
inc
push
sub
sub
xor
sub
sub
push
dec
adc
sbb
and
inc
and
push
data16
loop
iret
cmc
sti
mov
fiadds
mov
add
clc
shr
add
sbb
shl
or
lock
sti
sbb
and
add
sub
add
sub
xor
cli
cmc
adc
cs
adc
std
aaa
adc
or
push
inc
pop
cmp
dec
or
ds
dec
inc
ds
cmp
dec
ds
inc
push
xor
dec
and
xor
int
out
rcl
mov
into
icebp
mov
fcmovnb
cld
or
idiv
enter
out
ud2
in
add
add
push
or
out
hlt
push
in
fists
div
push
or
or
or
pop
and
sbb
adc
sti
sub
xor
add
adc
add
cmp
cmova
adc
inc
and
sbb
ds
cmp
dec
pop
aas
aas
sbb
and
aam
xlat
in
mov
icebp
ror
stc
fadd
or
pop
or
call
cli
shl
jmp
adc
adc
or
add
and
loopne
sub
jmp
aaa
sbb
and
pop
sub
pop
and
dec
pop
push
sbb
sbb
inc
push
sub
pop
inc
pop
push
sub
pop
cmp
sbb
inc
inc
ss
push
xor
fs
push
loop
in
into
aad
sti
repz
in
icebp
test
push
jmp
loope
in
adc
push
stc
out
add
sbb
fistpl
in
add
jecxz
stc
sub
pop
add
jmp
ss
add
adc
sub
cmp
sub
cmp
sbb
sub
and
cmp
cmp
push
inc
dec
push
aaa
pop
push
push
push
and
push
and
imul
lret
out
mov
into
shl
icebp
push
cli
add
out
push
lret
jmp
add
lock
pop
in
adc
add
or
repnz
sub
out
and
sub
cmp
xor
adc
sbb
cmp
es
and
daa
cmp
cmp
inc
inc
push
push
dec
addps
pop
aaa
inc
dec
das
sbb
pop
push
push
fs
aaa
pusha
push
data16
push
pop
sub
insb
mov
fst
fnclex
xlat
add
sti
shl
stc
call
out
shr
loope
add
fists
add
add
push
std
daa
and
out
imulb
add
std
xor
sbb
push
cmp
aas
sbb
aas
pop
es
pop
cmp
sub
push
aas
dec
dec
orps
inc
push
sbb
xor
push
pop
pop
pop
push
push
xor
imul
dec
sub
loope
repnz
sti
rcl
ret
jecxz
les
fadd
jmp
add
adc
repnz
push
or
ljmp
fsubl
push
std
stc
push
stc
sbb
sub
pop
adc
repnz
das
xor
adc
cli
and
or
inc
ds
xor
adc
and
push
xor
cmp
push
pop
inc
and
ds
inc
dec
cmp
mov
out
repnz
aad
lret
add
mov
shl
loopne
or
in
in
out
test
or
neg
fbld
sbb
mull
sbb
or
jmp
in
testb
and
adc
cmp
adc
push
aas
sbb
add
add
sbb
push
push
aas
xor
sub
xor
pop
and
pop
adc
adc
push
push
cmp
pusha
cs
cmp
out
mov
hlt
out
jmp
loope
add
roll
loope
push
fsub
enter
in
or
out
rcll
sbb
repz
sbb
paddw
xlat
daa
adc
clc
and
cmc
in
sub
std
repnz
ljmp
sub
movups
or
xor
and
sbb
cmp
inc
inc
dec
push
xor
sbb
das
adc
xor
cmp
sub
cmp
mov
not
mov
cmc
fcmovnb
enter
out
pop
call
adc
in
add
div
jmp
in
adc
daa
sub
sub
sub
xor
sub
and
repz
sub
call
adc
sub
adc
sbb
or
dec
das
cs
push
xor
bound
xor
pop
das
push
and
imul
sub
ret
aad
fsubr
mov
mov
mov
cld
ljmp
repz
or
xlat
push
cli
mull
cld
fsub
stc
loop
repnz
in
or
push
repz
or
adc
das
psadbw
cmp
or
xor
xor
adc
aaa
daa
cmp
or
ss
xor
sub
and
and
adc
and
adc
pusha
and
xor
inc
imul
hlt
mov
shr
flds
shl
repnz
add
sti
or
add
cli
lret
add
loopne
add
out
shl
or
shr
xlat
stc
add
loop
sbb
sbb
in
cld
lock
cmp
adc
adc
adc
add
push
sub
dec
and
dec
and
cs
sub
pop
xor
push
pop
inc
inc
cmp
xor
popa
bound
aam
int3
hlt
out
mov
mov
ret
lock
fcmovb
testb
add
cli
cli
push
or
icebp
into
out
or
repz
adc
aad
repnz
pop
loopne
sbb
jecxz
push
push
decb
xor
out
or
or
add
aaa
cmc
or
or
sub
adc
cmp
sbb
or
adc
inc
es
push
adc
xor
cmp
arpl
inc
pop
cmp
and
and
cmp
das
out
cli
cmc
sti
shlb
fcmovne
not
add
add
or
or
adc
or
ficompl
jmp
push
loop
jmp
sub
sub
or
pop
add
or
testb
ss
push
inc
inc
sbb
inc
sub
or
sbb
ds
adc
cs
adc
aaa
dec
pop
push
inc
and
inc
inc
xor
push
dec
inc
imul
lock
shr
cli
add
or
out
ret
out
std
sti
in
jmp
rolb
out
ljmp
sbb
out
cld
sti
push
sub
sub
and
clc
daa
pop
cli
pslld
in
adc
push
das
xor
negb
adc
cli
hlt
std
inc
add
ss
adc
dec
das
push
pop
and
push
xor
sbb
das
adc
push
pop
xor
gs
push
pop
insb
addr16
int
fdiv
out
aam
rcr
add
rcr
jmp
in
adc
adc
sti
rorb
shl
sbb
in
in
std
sbb
push
add
out
fcompl
repz
sub
adc
in
sub
push
pop
sbb
and
add
ss
cld
push
push
and
add
inc
adc
push
sub
cmp
inc
pop
dec
adc
cmp
push
addr16
push
outsb
dec
dec
dec
fnstcw
mov
mov
pop
aad
in
or
dec
movups
push
adc
out
or
or
ljmp
loope
pop
or
std
das
wbinvd
sbb
repz
add
push
xor
adc
cmp
es
adc
dec
add
sub
xor
push
sbb
sub
pop
inc
pop
aas
pop
inc
push
push
sub
fdivr
shl
cli
repz
repnz
add
add
add
out
fldz
add
or
call
out
div
sbb
sar
fisubl
testb
fcoml
adc
imulb
cli
add
ljmp
adc
pslld
or
ds
pop
add
call
inc
add
adc
xor
and
or
dec
or
aaa
aaa
xor
cmp
bound
cmp
pop
imul
cmp
in
xlat
out
cli
mov
idiv
repz
push
in
fsubrp
fldl
jecxz
hlt
add
pop
add
aam
std
add
fists
adc
add
stc
sbb
mull
sub
in
add
and
xor
sbb
aas
sbb
or
inc
dec
pop
cld
dec
and
das
or
ds
adc
dec
xor
daa
sub
push
sub
dec
xor
imul
pop
mov
sar
out
in
jmp
fcmovnu
bnd
add
stc
or
cld
enter
or
iret
lock
jmp
or
push
fistps
add
incb
loopne
adc
testb
pop
sbb
in
add
adc
or
repnz
adc
testl
das
xor
ss
cmp
and
cmp
dec
adc
push
adc
dec
pop
push
sub
ds
pop
and
inc
xor
daa
iret
scas
in
shl
enter
rol
shl
sti
push
mov
jmp
lret
icebp
repnz
in
jecxz
shr
sbb
fsubs
fcomi
out
call
or
pop
sub
es
push
or
xor
inc
sbb
add
sbb
and
inc
dec
adc
sub
adc
pop
xor
cmp
pop
das
pop
inc
gs
push
inc
imul
cmc
stc
in
mov
add
cli
out
fdivrp
not
jmp
in
roll
out
in
or
push
push
add
adc
sbb
push
decb
sti
cli
jmp
and
sbb
sbb
cld
stc
and
es
and
adc
add
adc
xor
cmp
adc
ds
xor
push
and
das
sbb
push
pop
push
xor
ss
cmp
inc
sub
xor
cli
mov
in
mov
cli
rcr
aad
or
add
int
into
leave
in
cld
out
leave
push
stc
add
sti
lock
out
sbb
and
adc
repnz
or
stc
in
sub
xor
cs
cmp
xor
adc
adc
sbb
xor
pop
sbb
sbb
das
ds
adc
sub
pop
pusha
cmp
cmp
pop
pop
push
addr16
mov
sar
add
rol
aad
or
or
in
std
adc
jecxz
aad
add
in
push
fscale
sti
decb
adc
repz
or
pop
std
repz
add
sbb
sbb
repnz
psubw
sbb
inc
clc
inc
xor
or
sub
dec
and
xor
inc
xor
dec
adc
sbb
sbb
cmp
sbb
imul
in
mov
call
xlat
sti
add
xlat
in
movl
adc
in
clc
shl
hlt
hlt
pop
push
or
fsin
lock
lock
add
out
std
sbb
repnz
pop
clc
xor
repz
movlps
push
pop
add
aaa
sub
sub
or
sub
es
inc
dec
dec
cmp
xor
push
and
arpl
pop
xor
inc
inc
outsb
mov
cmc
int
fnstsw
repnz
lds
fucomip
out
fdivrp
rolb
repz
loope
hlt
in
sbb
fmuls
std
or
loopne
div
out
out
jecxz
sbb
adc
sub
ss
cmp
sub
and
add
and
das
dec
and
adc
and
dec
dec
das
pop
dec
sub
sbb
das
inc
push
imul
popa
mov
div
icebp
xlat
fidivrl
fdivrl
inc
in
out
add
fsubr
hlt
out
xlat
add
in
movhlps
repz
in
icebp
lock
fistpl
call
or
out
push
push
in
or
xor
xor
or
sbb
sub
cmp
adc
inc
dec
push
dec
or
inc
xor
and
push
pop
push
inc
sub
xor
xor
sub
mov
div
dec
loop
stc
fld
ret
ljmp
jmp
or
out
in
ljmp
repz
hlt
sbb
or
sbb
in
and
ucomiss
or
ss
adc
inc
sti
cmp
add
adc
dec
cmp
adc
and
xor
inc
cmp
inc
pop
inc
sbb
and
inc
push
sbb
push
cmp
dec
push
jmp
ljmp
mov
jmp
add
into
add
in
adc
jecxz
hlt
in
fdivr
cli
out
cli
call
cmc
loop
loopne
sub
in
testb
sbb
adc
icebp
xor
cmp
pop
repnz
or
ds
adc
xor
dec
xor
das
sub
inc
push
pop
inc
cmovl
push
or
push
sub
cmp
bound
aaa
push
xor
and
dec
inc
sub
jmp
fstp
repnz
fidivrs
sti
cli
fadd
or
stc
in
lock
in
sbb
aam
sbb
fcmovnbe
aad
add
sbb
adc
ljmp
sub
adc
in
adc
rdmsr
cmp
cmp
das
or
lcall
sbb
pop
add
ss
dec
dec
cmp
dec
sysret
inc
inc
es
adc
dec
push
xor
pop
pop
xor
push
ss
jmp
out
aad
cld
out
sti
loopne
add
ljmp
or
add
out
clc
adc
xlat
sbb
add
in
fstpl
or
add
push
push
pop
out
adc
push
adc
add
divb
sbb
inc
aas
xor
add
add
dec
sbb
xor
xor
dec
inc
push
and
cs
push
pusha
xor
dec
xor
sub
push
inc
push
das
pop
iret
ror
std
lret
ljmp
flds
or
out
paddw
add
icebp
jecxz
adc
or
sbb
aad
sbb
repnz
fdivr
icebp
in
sbb
loop
and
push
daa
cs
testb
sub
repnz
inc
adc
dec
and
dec
cmp
ds
inc
sub
pop
cmovle
inc
push
aas
xor
bound
imul
cmp
fmul
sti
leave
mov
fdivrs
loopne
in
sar
push
push
leave
aam
loop
or
xlat
adc
or
or
or
ficompl
loopne
out
sub
sub
sbb
and
lock
out
daa
and
xor
sbb
cmp
dec
or
pop
xor
dec
or
pop
das
adc
and
dec
sbb
push
push
sbb
pop
aas
popa
pop
pop
cs
cmc
mov
shl
fucomp
neg
sar
jecxz
mov
or
pop
sbb
adc
aam
push
or
icebp
testl
call
and
and
or
jmp
es
xor
sbb
jmp
adc
sbb
aaa
xor
and
push
and
or
adc
dec
daa
cs
sbb
push
push
dec
sbb
pop
sbb
inc
addr16
pop
popa
push
out
out
mov
ror
in
repz
or
fcomp
out
or
in
lret
movntq
out
icebp
lock
jmp
out
out
flds
in
lock
jecxz
and
pop
in
add
in
in
in
out
out
sbb
or
pop
stc
or
or
add
inc
adc
sub
sub
cmp
sub
xor
push
push
xor
adc
push
and
push
xor
inc
das
aas
push
pop
push
arpl
inc
pop
dec
ror
mov
icebp
in
dec
mov
fidivrs
or
fdivrp
int3
decb
or
or
int
push
in
cmc
sbb
hlt
fisttpll
push
pop
add
push
ljmp
and
repnz
adc
cmp
das
cmp
inc
cmp
inc
cmp
dec
and
adc
push
or
sbb
pop
xor
push
xor
xor
sub
into
out
lds
mov
add
pop
mov
call
out
out
add
or
clc
or
call
add
add
fildll
sbb
in
or
sub
daa
adc
sub
push
ds
sub
sbb
aaa
add
adc
inc
ds
sub
sub
dec
push
sub
adc
dec
push
pop
and
aaa
sub
cmp
fs
sbb
inc
and
arpl
sub
sti
cmc
lock
leave
lock
into
cli
add
out
jecxz
enter
shl
shr
repz
jmp
sbb
adc
push
jmp
add
sbb
loop
jecxz
jecxz
in
add
pop
push
pop
adc
lock
sbb
repz
xor
dec
and
aaa
or
sbb
and
xor
sbb
push
push
push
das
push
push
das
and
arpl
dec
cmp
outsl
push
in
imul
in
cmc
xlat
lock
test
mov
or
out
lret
in
hlt
hlt
jmp
rcll
cli
sbb
and
cmc
cli
and
clc
stc
loope
std
add
sbb
sbb
adc
or
adc
and
repnz
add
push
xor
add
adc
or
dec
xor
sub
adc
pop
dec
push
dec
push
push
sbb
inc
gs
push
inc
inc
cmp
dec
inc
pusha
out
lock
out
repnz
int3
lock
clc
cli
cmc
neg
jecxz
lret
jmp
leave
loopne
add
add
xlat
adc
fucomi
or
loope
sbb
repnz
add
adc
and
add
and
out
sub
notb
movups
sbb
add
xor
xor
sbb
pop
inc
sub
inc
dec
aaa
inc
cs
pop
push
pop
aaa
dec
pusha
and
inc
cmp
imul
stc
shr
mov
hlt
loopne
out
rcr
hlt
testb
out
cld
int3
adc
or
icebp
in
add
adc
sbb
cli
lock
sbb
add
cld
add
pop
push
and
xor
sbb
decb
or
xor
inc
dec
inc
adc
cmp
es
dec
xor
push
inc
das
cmp
pop
pop
push
popa
aas
dec
and
inc
insb
cmp
clc
mov
lock
xlat
mov
icebp
div
stc
cli
fisttps
jmp
rcl
sti
out
std
add
add
pop
or
stc
fsubr
push
in
sbb
push
sub
push
add
push
clc
daa
sbb
adc
adc
sub
cmp
adc
pop
adc
pop
sub
inc
adc
dec
sub
sbb
sub
sbb
inc
xor
xor
dec
aas
loope
in
sarb
mov
fcmovb
add
fcomp
clc
out
lret
std
int3
rcll
loop
or
hlt
pop
lock
adc
jecxz
pop
adc
sub
push
ljmp
and
sub
sub
sbb
xor
inc
adc
sub
pop
ds
push
aas
push
inc
das
sub
sbb
es
push
cs
xor
pop
xor
imul
ret
aad
call
aam
mov
xlat
cmc
enter
iret
or
iret
lret
adc
jmp
sti
cmc
hlt
loopne
or
or
or
pop
out
sbb
out
adc
adc
adc
pmuludq
divb
xor
es
push
push
xor
inc
or
adc
adc
cmp
pop
pop
xor
pop
cmp
inc
push
and
pusha
dec
into
stc
lret
clc
iret
fcom
shl
fstp
sar
repz
out
sti
fcomi
jmp
adc
shl
div
hlt
repz
sti
sbb
and
pop
or
call
negl
push
sub
add
testb
xor
or
das
or
adc
sbb
sub
sub
sub
dec
push
and
es
dec
inc
xor
cmp
pusha
inc
push
push
xor
dec
sub
test
loopne
out
iret
add
shl
or
loope
idiv
or
iret
add
jmp
jecxz
push
push
adc
cmc
adc
std
stc
fistl
add
and
pop
and
and
xor
lock
sub
or
push
inc
adc
inc
dec
and
dec
or
xor
dec
ss
pop
adc
push
pop
cmp
sub
pop
inc
ss
push
shl
repnz
rcl
mov
aam
in
hlt
push
xlat
or
out
adc
lret
loope
add
not
in
fimuls
lock
and
push
cld
add
or
sub
in
and
icebp
or
repnz
xor
lar
add
cmp
ss
aas
dec
inc
inc
dec
push
push
aaa
inc
inc
pop
cmp
pop
ds
daa
cmp
inc
sbb
inc
push
and
daa
sub
insl
pop
jo
repz
int
fdivrp
out
mov
loop
mov
incb
pop
out
in
call
iret
in
add
add
sbb
or
jecxz
std
out
push
jmp
loope
sub
or
cmc
push
pop
or
pop
xor
push
adc
sub
add
cmp
add
dec
inc
push
push
or
xor
cs
dec
pop
xor
sbb
push
cmp
cs
push
pop
cmp
inc
cmp
int
lock
neg
mov
std
or
fldl
stc
adc
add
add
aad
or
sbb
out
or
xlat
std
or
loopne
pop
out
pop
in
add
jmp
push
and
icebp
repz
xor
das
sbb
inc
and
cmp
push
xor
sub
adc
inc
cmp
inc
adc
ds
cmp
dec
sub
pop
push
inc
inc
es
addr16
push
out
mov
hlt
div
into
cld
pop
add
call
jecxz
out
or
in
out
loope
repnz
or
repnz
sbb
jmp
std
or
push
ljmp
sub
adc
or
cmp
sub
pop
and
add
cmp
dec
inc
sub
pop
xor
das
pop
sub
xor
pop
sbb
xor
pop
sub
pop
dec
inc
pop
mov
ljmp
icebp
cld
jecxz
add
int3
lds
call
loopne
in
sbb
or
sbb
in
add
loop
loope
adc
add
add
adc
adc
sub
adc
xor
and
adc
sbb
cmp
dec
inc
xor
pop
xor
push
push
sub
and
das
push
cmp
pop
push
pop
fs
dec
shl
sarl
roll
cli
sar
into
push
loopne
neg
jmp
loope
out
in
imul
iret
in
roll
into
iret
or
neg
loop
loopne
clc
sbb
sub
sub
and
or
das
cs
sub
stc
sbb
pop
stc
or
cli
or
add
and
xor
dec
pop
sub
or
push
xor
sub
sbb
sbb
aas
cmp
dec
push
cmp
push
ds
fs
bound
sar
int3
mov
cli
add
sar
sar
fdivrp
cli
hlt
repz
jmp
ror
loopne
add
out
aad
out
sbb
negl
hlt
and
sbb
add
sub
es
add
ljmp
cmp
sub
sti
add
ds
dec
push
dec
push
sub
and
sub
xor
push
sub
xor
push
dec
pop
push
dec
daa
popa
fs
jmp
shl
mov
testl
adc
adc
adc
jmp
cmc
or
loope
and
and
push
adc
add
sub
xor
cmp
cmp
push
sbb
cmp
push
inc
aas
xor
inc
cmp
daa
xor
push
sub
pop
adc
pop
inc
dec
inc
pop
and
dec
sub
out
in
sti
into
mov
ljmp
add
cli
div
cld
out
repnz
push
adc
sbb
in
add
ljmp
pop
repnz
sub
das
or
stc
out
das
sub
sub
cmp
and
xor
sub
xor
pop
inc
cmp
dec
and
sbb
dec
and
daa
dec
das
adc
adc
aaa
pop
pop
inc
and
push
push
pusha
inc
ss
call
fucompp
mov
ret
add
hlt
or
in
filds
or
push
or
repnz
hlt
fucomp
out
fsin
sbb
sbb
pop
fisubs
jmp
es
sub
repnz
adc
adc
or
cmp
or
adc
push
incb
and
sbb
or
cmp
sub
push
xor
cmp
sbb
push
dec
xor
push
dec
fs
cmp
inc
inc
xor
cmp
clc
not
mov
mov
lock
add
aam
int
in
fsubr
pop
jecxz
adc
fprem
adc
or
fimull
sbb
add
adc
out
add
add
out
sub
hlt
push
out
decl
ss
adc
adc
cmp
sbb
pop
cmp
dec
dec
cmp
inc
pop
xor
push
xor
adc
dec
dec
inc
sub
sub
dec
inc
pop
cmp
inc
es
fsubr
icebp
rcr
mov
ror
out
or
fcmovb
loop
cli
add
adc
in
or
sbb
aad
lock
sbb
repnz
add
sbb
cli
repnz
loopne
in
loopne
out
add
adc
xor
adc
adc
cmp
or
inc
cmp
or
adc
xor
sbb
xor
push
and
daa
dec
popa
push
sub
bound
cmp
out
in
fcmovne
mov
stc
fucomip
loop
add
fcmovb
lret
fyl2xp1
xlat
fsub
call
adc
loop
lock
clc
or
and
cmc
out
clc
sbb
sti
sti
and
adc
xor
cmc
sub
es
cli
cmp
sbb
cmp
xor
pop
cmp
dec
inc
sbb
or
daa
dec
and
xor
push
push
dec
dec
push
push
pop
and
inc
push
xor
cmp
cmp
dec
ss
arpl
cli
in
mov
aad
lret
mov
roll
fsin
rcr
fimull
cmc
rorl
idiv
out
pmaxsw
jmp
icebp
adc
adc
adc
pop
lock
ss
lock
adc
or
sub
sbb
sbb
sub
sub
inc
sbb
dec
or
adc
sub
xor
sbb
push
push
gs
dec
addr16
pop
push
lret
icebp
out
enter
repnz
stc
clc
shl
rol
lret
or
sti
int
adc
add
repnz
adc
in
or
daa
div
jmp
testl
sub
xor
cmp
xor
adc
and
es
cmp
dec
inc
daa
push
inc
sub
push
pop
dec
xor
push
dec
push
push
pop
dec
inc
sbb
addr16
cmp
inc
dec
inc
inc
pop
addr16
in
fcomi
std
lret
incl
cmc
loopne
leave
or
xlat
jmp
int3
out
lock
or
sbb
hlt
fistpl
call
in
sbb
out
and
sub
daa
wrmsr
ss
idivb
xor
adc
ljmp
push
or
and
and
and
and
push
daa
sbb
dec
ds
push
pop
fs
data16
daa
aaa
sub
daa
pop
daa
mov
in
fcomp
leave
out
in
mov
aam
or
dec
out
ror
hlt
cmc
iret
div
or
or
call
icebp
and
add
sub
adc
or
add
or
pop
aaa
xor
pop
daa
sti
aaa
decb
push
pop
inc
inc
and
cmp
adc
cmp
and
sub
push
add
inc
and
sbb
dec
push
sbb
dec
sbb
pop
and
cmp
pop
imul
mov
sar
mov
repz
lret
fucom
lret
out
lret
adc
add
sbb
fcoms
adc
fisttps
clc
repnz
in
fucom
jmp
sbb
xor
and
out
call
adc
prefetch
decb
sbb
adc
and
push
and
push
push
inc
and
and
xor
push
push
cmp
fs
data16
cmp
ret
int3
neg
mov
fprem
jecxz
shl
stc
enter
push
lret
ret
leave
dec
out
loopne
add
push
sbb
adc
fucomip
push
out
loop
es
or
out
push
sub
add
and
adc
sub
or
xor
and
adc
and
push
dec
or
dec
adc
and
das
pop
dec
sbb
push
pop
inc
cmp
push
push
imul
fcmove
in
aad
mov
add
add
aam
rcr
fdivrp
loop
iret
ljmp
clc
in
div
fyl2x
adc
in
sbb
fcomip
repz
add
sub
sub
and
add
sub
psllw
inc
aaa
cmp
inc
sbb
and
push
cs
and
and
push
dec
daa
dec
inc
sub
dec
cmp
pusha
das
ss
inc
inc
inc
inc
inc
inc
and
bound
aad
clc
clc
fldl
std
fstp
aad
incb
jmp
or
iret
adc
adc
adc
xlat
pop
std
adc
adc
repnz
jecxz
clc
out
pop
xor
jmp
xor
cmc
adc
cmp
or
sbb
sbb
sub
dec
cmp
sub
or
ss
sbb
sub
comiss
xor
pop
arpl
inc
inc
cmp
sub
shlb
fst
fsubr
out
idivb
out
add
out
fsin
or
fisttpll
in
fadds
loop
testl
ftst
and
add
push
sbb
ficomps
sbb
sbb
push
sub
ss
or
cmp
sub
push
das
cmp
sbb
dec
cmp
push
cs
dec
dec
inc
sbb
pop
pop
dec
aaa
sbb
push
xor
pop
and
hlt
leave
cld
aam
mov
lock
rcr
clc
add
mov
push
lar
add
icebp
jmp
pop
adc
sbb
cmc
cmc
and
cmc
call
cli
nop
pop
add
repnz
push
lock
std
cmp
sub
xor
daa
sbb
pop
adc
push
and
sub
sub
push
push
push
cmp
push
cmp
cmp
cmp
ds
pop
es
gs
leave
ret
int3
leave
xlat
mov
loope
stc
loop
cld
in
call
enter
shl
into
push
repz
aam
pop
cld
add
loope
push
in
sbb
clc
or
cli
cli
nopl
repnz
sub
sub
ss
and
std
sbb
adc
or
xor
xor
inc
dec
dec
pop
xor
ds
sub
bound
pusha
pushw
aad
lock
fstp
into
rcl
jmp
add
test
fdivr
add
add
or
push
out
into
or
loop
push
add
in
frstor
clc
out
and
push
adc
and
and
call
sub
sub
cmp
aaa
or
ss
xor
push
xor
adc
pop
cmp
sub
xor
dec
inc
dec
pop
push
xor
sbb
inc
sbb
xor
xor
aam
ljmp
mov
fucomp
repz
in
add
adc
int3
in
out
out
adc
por
negl
repz
cli
push
push
and
add
push
cs
and
and
cmp
std
incl
and
inc
add
inc
es
dec
push
and
sbb
dec
inc
push
pop
dec
push
cmp
inc
xor
sbb
pop
cmp
xor
shl
enter
sti
cmc
iret
aad
xlat
add
in
out
lock
adc
in
leave
or
negb
aam
aad
sbb
loope
mul
add
and
sbb
sbb
das
sbb
hlt
sbb
pop
sbb
cmp
and
add
inc
dec
daa
pop
dec
push
xor
push
pop
cmp
dec
adc
pop
sbb
push
and
and
xor
dec
imul
repnz
ljmp
in
loop
fidivrs
sti
paddusw
in
adc
negl
add
sbb
xlat
stc
push
lock
or
push
or
es
and
or
xor
xor
inc
xor
add
inc
inc
dec
inc
sub
cmp
push
or
and
adc
adc
inc
dec
dec
cmp
sbb
push
and
arpl
scas
mov
aad
jmp
jmp
in
in
aam
add
out
fucomi
in
fdiv
add
or
or
adc
ljmp
in
or
adc
add
pop
or
and
or
add
and
add
and
pop
inc
or
dec
adc
push
inc
and
push
sub
sub
sub
cmp
and
aaa
insl
sub
mov
sti
clc
fucomip
iret
fcmovu
or
repz
enter
out
iret
in
hlt
iret
leave
or
or
lock
push
add
call
sbb
sub
and
lock
adc
pop
add
adc
adc
xor
inc
pop
cmp
inc
sbb
dec
cmp
add
or
dec
sub
sub
adc
pusha
xor
popa
and
sub
outsb
push
cld
out
lret
cmc
cli
aam
fcom
rol
rol
aad
or
add
int3
add
call
fcoms
fcoml
add
pop
cmc
jmp
and
add
imull
push
ss
sbb
clc
ss
sbb
add
daa
or
inc
dec
adc
xor
sbb
sub
sub
aaa
cmp
pop
pop
popa
dec
daa
cmp
mov
fisubrl
lret
out
iret
ret
jecxz
fst
loopne
jecxz
movb
in
loope
out
iret
out
adc
or
fstp
sti
std
icebp
and
push
jmp
sbb
sbb
and
sub
adc
icebp
daa
icebp
xor
sub
push
sub
cld
add
add
sbb
es
ds
pop
and
xor
sub
cmp
xor
dec
and
and
pop
sbb
and
pop
mov
mov
in
mov
roll
ret
out
loopne
sti
testl
lret
decl
add
add
cld
jmp
and
adc
add
and
or
movaps
or
and
or
xor
sub
xor
add
add
aaa
inc
xor
cmp
dec
cmp
aas
and
adc
and
cmp
sub
arpl
cmp
inc
bound
pop
pop
pop
jo
shlb
mov
cmc
jecxz
out
decl
or
in
or
out
out
in
adc
pop
clc
fmuls
pop
and
icebp
add
cmc
repz
and
and
stc
cmc
or
xor
adc
cli
sub
and
sub
or
sbb
sub
or
xor
push
aas
pop
xor
cmp
and
inc
cmp
call
cli
rcr
int
add
loope
fdivrp
ljmp
jmp
int3
jecxz
push
add
push
out
fdivp
loopne
hlt
and
sti
or
push
and
sbb
and
and
xor
xor
sbb
adc
and
sbb
sub
adc
dec
es
daa
dec
pop
and
dec
sbb
sub
inc
xor
popa
push
push
sub
and
cmp
cld
int3
cli
mov
add
out
sarl
jecxz
enter
or
cli
sbb
aam
in
or
jmp
push
out
in
sbb
sub
sub
clc
and
xor
push
out
or
adc
add
idiv
xor
sbb
and
inc
pop
dec
cmp
dec
and
daa
cs
sbb
sbb
dec
sub
das
sbb
data16
dec
pusha
inc
and
mov
in
cld
leave
shr
cmc
mov
loop
shr
or
out
loop
or
in
iret
add
add
or
aad
jmp
std
push
sbb
sbb
fstp
adc
add
or
sbb
xor
adc
repnz
xor
xor
repnz
inc
das
sbb
add
dec
sbb
inc
push
xor
daa
pop
inc
das
adc
push
sbb
push
push
push
pop
push
and
aas
pop
cmp
fnop
mov
hlt
add
add
sti
ret
faddl
std
out
in
call
loopne
or
adc
add
sbb
and
and
lock
jmp
es
testl
sub
cmp
xor
add
and
cmp
and
pop
dec
dec
sbb
push
inc
adc
push
and
adc
xor
xor
and
bound
xlat
lret
ffree
add
repz
jmp
enter
stc
pop
jmp
pop
or
loop
adc
pop
xlat
ljmp
sbb
sub
repnz
or
and
in
push
or
xor
sbb
nopl
inc
add
cli
ss
das
push
and
dec
dec
dec
push
adc
cvttps2pi
sbb
push
pop
dec
xor
cmp
push
arpl
jo
mov
mov
loop
hlt
hlt
repnz
loop
movb
psubb
out
adc
pmaddwd
fisttpl
ljmp
push
repnz
jmp
add
cld
push
ljmp
sub
or
pop
push
and
pop
cmp
xor
aaa
dec
dec
add
cmp
or
dec
sub
dec
dec
push
sub
inc
sub
sub
gs
arpl
sub
dec
sub
aad
fnstenv
aad
std
add
out
add
or
sti
in
push
add
adc
add
push
adc
sti
fldln2
push
stc
adc
pop
sbb
jmp
or
sbb
icebp
and
adc
cmp
and
pop
pop
sub
aaa
and
dec
cmp
inc
adc
sub
sub
adc
pop
and
arpl
push
pop
pop
dec
xor
loop
icebp
ror
stc
mov
mov
ret
enter
jmp
adc
in
hlt
push
adc
sbb
or
fsin
fcmovnu
adc
and
adc
out
or
sbb
lar
xor
notb
cmp
xor
add
cmp
pop
cmp
adc
push
push
and
adc
pop
sbb
xor
cmp
push
inc
xor
inc
push
cmp
pop
gs
and
enter
enter
ret
icebp
rcr
add
std
fucom
ret
add
adc
adc
add
adc
push
or
hlt
and
mulb
in
jmp
add
or
xor
lock
add
sbb
daa
push
stc
sub
xor
pop
sub
inc
and
cmp
adc
dec
sub
adc
pop
push
sbb
xor
aas
push
inc
inc
push
dec
imul
cmc
in
jmp
divl
fcmovu
sti
fadd
fld
std
out
jecxz
lret
adc
flds
or
fistl
loopne
and
and
daa
fsubrl
and
push
sbb
ljmp
xor
and
sub
xor
add
and
and
inc
inc
sub
push
sub
aaa
dec
ss
aas
dec
inc
cmp
and
cmp
out
mov
ljmp
ljmp
lret
jmp
or
push
cmc
sbb
xlat
adc
add
and
adc
add
daa
or
in
out
ljmp
sbb
adc
xor
push
cmp
hlt
sub
and
sbb
and
dec
sbb
push
and
and
aas
adc
or
inc
push
push
pop
pop
pop
and
pop
dec
inc
inc
pop
gs
into
jmp
enter
mov
shl
iret
out
jmp
faddl
loope
psadbw
in
rorl
pop
adc
notl
adc
stc
hlt
pop
xlat
std
add
sbb
push
in
in
sub
jmp
sbb
add
xor
sub
cmp
add
cmp
cli
and
aaa
dec
das
sub
dec
dec
adc
adc
pop
dec
push
xor
xor
cmp
xor
xor
in
fdivrs
lock
ret
xlat
mov
loope
adc
push
lret
jmp
push
icebp
icebp
psrlq
or
fstps
call
adc
daa
and
call
xor
xor
xor
aaa
stc
push
or
std
and
sbb
dec
and
and
dec
and
dec
pop
sbb
xor
push
and
cmp
inc
insb
pusha
pop
pop
dec
fdivs
clc
lret
shlb
testl
or
pminsw
add
lock
call
add
sbb
add
std
in
hlt
or
and
xor
adc
or
pushl
sbb
cld
inc
inc
inc
cmp
dec
sub
dec
inc
and
inc
sub
sub
cmp
pop
sbb
and
sub
imul
cmp
in
iret
mov
idiv
mov
fcmove
or
int3
fucomp
jmp
add
call
xlat
fucomi
sbb
ficoml
fstl
repz
or
or
xor
push
xor
aaa
sbb
xor
sti
and
adc
cmp
inc
cmp
dec
sub
sbb
xor
dec
es
pop
aaa
sbb
dec
cmp
pop
sub
inc
cmp
out
cli
out
rcl
clc
in
fldl
add
in
out
cmc
loope
push
lret
or
or
loop
add
adc
in
fcmovu
repz
notb
ljmp
add
cli
daa
jmp
push
repnz
and
or
sub
cmp
cmp
dec
inc
push
cmp
es
push
or
and
dec
dec
adc
xor
dec
xor
cs
dec
ds
pusha
shlb
mov
sti
in
icebp
ret
hlt
add
or
repnz
or
add
sbb
repz
or
fsub
cmc
pop
out
sub
pop
and
stc
or
sub
and
adc
cmp
std
sbb
push
cmp
dec
pop
cs
cmp
push
movlps
inc
daa
push
sbb
sub
dec
pop
push
pop
pop
pop
cs
push
cmp
aaa
aas
pop
dec
insl
inc
pop
mov
mul
in
clc
mov
call
std
neg
out
ffreep
out
add
fucom
add
lock
sbb
idiv
ljmp
ficompl
pop
loope
and
add
call
es
sbb
div
adc
clc
add
and
inc
daa
or
and
cmp
push
sub
pop
dec
pop
adc
and
sub
pusha
cmp
inc
xor
dec
dec
inc
inc
mov
mov
clc
int
in
stc
stc
std
add
clc
push
rcr
jmp
mul
or
or
div
fdivr
push
loope
repz
loopne
cld
cli
stc
loop
sbb
adc
push
std
and
xor
sti
xor
sbb
push
pop
sbb
dec
aaa
aas
sbb
sbb
xor
sub
sbb
cmp
push
dec
dec
aaa
das
addr16
inc
es
pop
xor
int3
in
cli
mov
dec
add
into
add
in
lret
std
adc
or
or
lock
fdivrp
notl
es
sbb
and
out
stc
and
sbb
out
add
negl
out
sbb
adc
add
and
cmp
adc
adc
inc
push
dec
sub
adc
dec
xor
cmp
pop
ss
and
sbb
inc
cmp
bound
loop
in
mov
stc
mov
in
hlt
in
lret
add
psubd
call
shr
into
cmc
fsqrt
sbb
pop
cli
or
psubd
and
add
add
sub
sbb
sub
add
xor
and
cmp
sbb
or
push
xor
cmp
or
dec
xor
xor
and
inc
pop
das
aas
push
push
dec
pop
popa
popa
bound
cmp
daa
daa
inc
pop
pop
int
mov
fidivl
loopne
cld
add
repz
or
in
add
iret
or
ljmp
div
or
ljmp
loope
in
sbb
sbb
jmp
and
sub
adc
sti
cmp
adc
add
and
cmovns
or
push
dec
sub
inc
push
dec
and
sub
cmp
pop
xor
cmp
inc
push
pop
pop
jecxz
fmul
in
sti
mov
lock
testb
add
fimull
adc
incl
rclb
out
neg
std
pop
and
and
add
sbb
adc
filds
cld
in
jmp
sub
div
icebp
sub
adc
sub
inc
inc
sbb
es
inc
sbb
sbb
dec
xor
and
inc
adc
xor
pop
sbb
adc
push
pop
bound
outsb
pop
cmp
mov
sar
push
add
loopne
stc
jecxz
lret
or
fists
in
xlat
or
sbb
add
adc
add
or
adc
es
adc
pop
and
sub
or
cmp
cmp
mov
xor
and
sbb
or
dec
dec
push
inc
ss
dec
xor
xor
and
aaa
push
pop
fs
stc
into
imul
in
f2xm1
add
ret
into
div
or
or
fmull
into
frstpm(287
cmc
int3
repnz
add
not
and
cli
jmp
faddl
add
in
pop
pop
add
cli
in
sub
adc
push
repz
adc
adc
adc
or
or
adc
rdtsc
cmp
cmp
xor
cmp
push
and
das
and
push
push
sbb
sub
and
xor
push
cmp
pop
cmp
jecxz
in
repnz
mov
iret
repz
icebp
jecxz
or
in
adc
adc
and
mull
and
pop
hlt
or
in
add
or
sub
sub
push
xor
or
daa
cmp
and
adc
cmp
or
dec
dec
adc
dec
dec
sub
inc
daa
dec
push
ss
dec
adc
aas
aaa
arpl
pop
aas
addr16
inc
cmp
pop
outsl
in
jecxz
enter
add
mov
shl
or
ret
add
int
fsub
std
out
jmp
adc
out
not
adc
adc
sbb
add
fcomip
add
out
or
push
push
lock
or
sub
and
add
sub
cs
adc
xor
sub
sub
sub
dec
adc
pop
cmp
cs
inc
sbb
and
aas
inc
dec
inc
int3
mov
call
xlat
iret
stc
add
or
or
cli
cld
in
pop
add
std
add
shr
jmp
cmc
neg
fcoms
out
stc
push
fdivr
clc
pop
sbb
sub
pop
in
push
in
adc
add
and
jmp
and
sub
adc
sbb
adc
adc
dec
sbb
push
xor
dec
inc
and
das
sub
and
dec
push
ss
inc
push
xor
cmp
inc
dec
outsl
push
into
repnz
shl
mov
mov
int
out
std
loope
fimull
jmp
in
icebp
or
hlt
push
and
idiv
adc
push
fdivrp
jmp
or
sbb
xor
icebp
xor
or
sbb
and
add
ds
or
dec
sbb
and
das
pop
adc
inc
xor
xor
cmp
pop
cmp
and
cmp
and
gs
sub
lret
mov
int
jecxz
icebp
rorl
leave
int3
shl
push
in
call
call
pop
repnz
repnz
add
sbb
out
cld
add
add
negb
aaa
pop
das
clc
sub
and
adc
xor
cmp
push
cmp
inc
dec
ss
aaa
push
outsl
addr16
push
cmp
arpl
xor
xor
xor
jne
xor
xor
fdivs
fidivl
imul
jmp
call
xor
xor
cmp
push
cmp
dec
cmp
fs
ds
test
in
add
hlt
rcl
hlt
in
stc
in
out
out
into
shl
add
loopne
jecxz
jecxz
push
adc
adc
neg
adc
sub
sbb
sbb
and
adc
or
push
xor
xor
sub
or
or
add
sbb
xor
pop
adc
dec
and
cmp
adc
cmp
dec
cmp
push
xor
xor
inc
and
cmp
cmp
push
sub
cli
mov
neg
mov
int3
iret
add
loope
fiadds
fisttpll
in
or
pop
push
out
cld
adc
adc
fucomip
adc
hlt
sub
in
and
jmp
sub
sub
icebp
adc
sbb
sub
and
add
cmp
and
inc
sub
push
or
sub
push
es
push
pop
cmp
xor
pop
cmp
das
and
aaa
cmp
dec
push
ret
into
mov
lret
sti
jecxz
fcom
loopne
repnz
out
cld
jmp
loope
rcll
in
loop
loop
adc
fucomi
out
adc
sbb
adc
repnz
sbb
daa
sub
sub
and
add
add
clc
stc
or
inc
cs
aaa
inc
cmp
add
cmp
xor
cmp
pusha
xor
ss
ds
cmp
pop
cmp
cmp
divl
aad
fcom
fadds
test
jecxz
lret
stc
into
ljmp
or
or
adc
clc
fptan
in
cmc
fdivrp
pop
add
adc
loopne
pop
and
adc
sub
cs
pop
or
and
inc
add
and
or
or
push
pop
pop
push
dec
sub
sub
and
ds
es
sub
cli
sti
std
hlt
dec
ljmp
rolb
loopne
clc
out
loope
hlt
add
int3
sbb
fisttpll
call
or
push
cmc
in
sub
add
in
and
push
sbb
or
add
ds
sub
sbb
cmp
ds
inc
inc
sbb
xor
dec
or
sbb
push
sub
pop
cmp
and
inc
xor
ror
scas
fcmovnbe
mov
dec
icebp
lock
pop
rcr
or
or
fabs
leave
ljmp
out
repz
cld
or
ljmp
loopne
and
sub
or
in
add
or
add
cmp
adc
adc
sbb
pop
cmp
std
inc
add
aas
inc
add
adc
inc
pop
inc
das
xor
pop
dec
sub
cmp
bound
and
int
mov
iret
fcmovnu
add
fcmovnu
jmp
or
or
loope
xlat
hlt
clc
out
testl
icebp
sbb
in
sub
or
xor
and
xor
or
and
add
adc
pop
dec
sbb
adc
push
cmp
ss
sub
aas
and
pop
sbb
inc
push
and
fs
sub
mov
cli
shl
aam
fdivrp
into
mov
rcr
test
cmc
not
or
out
sti
jmp
hlt
add
stc
pop
push
rcll
push
hlt
in
and
repnz
sub
or
xor
adc
adc
sub
sbb
inc
add
daa
adc
dec
dec
inc
add
dec
sub
inc
aas
xor
es
sbb
xor
inc
push
pop
fs
cmp
push
cmp
inc
inc
rcl
fnstsw
aad
out
out
or
fsub
std
push
leave
out
fmulp
pop
add
ljmp
cmc
incl
cmc
repnz
daa
in
loop
call
out
pop
sub
sub
or
sbb
sbb
xor
sbb
and
adc
push
inc
inc
push
push
push
cmp
adc
adc
dec
sbb
inc
aaa
sbb
xor
pusha
imul
xlat
stc
xlat
stc
std
add
fdivrl
or
loop
or
fdivr
stc
push
add
jecxz
or
sbb
out
adc
cld
push
sbb
cli
push
jmp
push
cli
or
and
or
sbb
adc
divl
das
and
or
cmp
sbb
aas
add
cmp
das
inc
and
cmp
sub
push
and
pop
xor
push
pop
daa
and
aaa
xor
test
not
shr
idiv
testb
incb
leave
xlat
xlat
fcomps
hlt
sbb
add
hlt
hlt
mulb
fsubl
cld
daa
or
push
std
jmp
and
sbb
adc
xor
lcall
push
pop
pop
sbb
dec
or
inc
or
adc
push
push
dec
dec
cmp
and
pop
inc
push
sub
sub
cli
ljmp
lret
add
cli
icebp
call
neg
add
into
ljmp
jmp
push
sbb
sbb
push
and
fdivp
repnz
sbb
pop
sub
sub
sti
and
sub
das
sbb
or
movhps
xor
xor
inc
cmp
or
dec
dec
adc
dec
dec
sbb
xor
sub
pop
push
cmp
sarb
dec
sar
add
add
push
rcl
aam
leave
into
jmp
jecxz
adc
wbinvd
out
or
adc
xlat
sbb
sbb
adc
sti
and
push
and
and
push
std
daa
xor
notl
or
ss
sub
sbb
dec
inc
xor
and
push
dec
dec
xor
push
push
adc
pop
sbb
xor
push
inc
and
push
pusha
and
outsb
shr
out
test
in
roll
rcl
fld
add
add
pop
jmp
jecxz
or
adc
push
push
lock
sti
out
out
adc
add
fdivrp
and
jecxz
add
or
jmp
out
or
add
sbb
cmp
and
inc
movlps
pop
xor
dec
dec
and
aas
and
and
xor
adc
push
sub
sbb
pusha
arpl
data16
insb
pop
addr16
fs
ror
mov
fiadds
mov
add
or
into
lret
push
in
sbb
shr
fcomip
out
or
and
and
out
testb
jmp
ljmp
sub
xor
sti
cli
sub
pop
push
xor
xor
dec
sbb
aaa
dec
dec
cs
adc
cmp
cmp
cmp
inc
sbb
addr16
xor
sub
and
popa
iret
shr
cmc
ljmp
idiv
icebp
cmc
add
in
int
neg
ret
lret
int
add
or
adc
sbb
fistps
adc
sbb
or
pop
or
push
push
out
sub
in
in
decl
and
clc
and
cmp
sbb
and
sbb
aas
cmp
xor
xor
or
dec
dec
push
adc
push
pop
cmp
pop
pop
push
xor
push
push
push
cmp
pop
inc
and
insb
dec
mov
jmp
cld
in
add
fdiv
in
or
xlat
iret
ljmp
into
roll
or
repnz
cld
and
pop
sbb
sub
add
xor
out
add
hlt
or
adc
pop
add
adc
cld
ss
adc
sub
push
sbb
xor
adc
xor
cmp
sbb
push
push
and
push
dec
mov
cli
shl
rcl
cld
repnz
faddp
clc
xlat
ret
fnclex
loopne
or
out
fldl2e
adc
neg
jmp
sbb
testb
pop
in
jmp
push
adc
icebp
das
das
xor
xor
sub
cmp
cmp
adc
xor
dec
or
push
cmp
adc
dec
das
cmp
pop
push
aaa
pop
cmp
push
pop
bound
pop
pop
dec
pop
cmp
mov
out
mov
stc
sti
add
cld
icebp
ret
repz
leave
std
fcmovnb
jmp
or
rcrl
sbb
cli
xlat
loopne
clc
adc
and
and
or
pop
sbb
and
push
xor
adc
sbb
stc
cs
push
add
inc
inc
pop
add
pop
sub
adc
or
or
inc
dec
xor
cmp
xor
dec
sbb
xor
and
jno
mov
mov
mov
fxtract
sti
or
add
jmp
add
or
sti
out
adc
pop
loope
adc
sbb
sbb
fildll
hlt
sub
cld
in
pop
out
ud0
cmp
add
xor
ss
adc
xor
inc
aas
and
sub
push
sbb
sbb
xor
dec
daa
xor
inc
and
ss
and
sub
arpl
daa
jmp
mov
jecxz
add
loopne
leave
add
aam
fcmove
in
fldlg2
adc
adc
ljmp
sbb
fucom
in
loope
pop
sbb
and
push
and
sub
das
xor
adc
adc
ss
cmp
ss
dec
es
sbb
inc
xor
push
sub
xor
xor
cmp
inc
popa
pusha
imul
xbegin
leave
int
sti
or
lret
mov
or
adc
rcl
add
or
or
adc
add
cmc
sbb
daa
adc
or
in
out
and
push
and
adc
xor
pop
sub
sti
cmp
cs
aas
add
inc
add
sub
sub
adc
xor
xor
dec
dec
pop
push
popa
and
cmp
ds
push
sub
sti
mov
in
loop
loope
fdiv
pop
call
in
cli
fsubr
ficoms
or
adc
out
xlat
div
adc
sti
repnz
push
push
loope
sbb
in
pop
xor
xor
hlt
repnz
das
aaa
xor
xor
inc
repnz
add
dec
aas
sub
and
cmp
push
cmp
inc
push
cmp
inc
adc
xor
push
xor
pushw
sub
into
mov
std
in
shl
int
stc
inc
repz
adc
rolb
out
aad
add
fstps
or
decb
ljmp
and
notl
imulb
or
call
xor
or
cs
sbb
sti
sub
cli
push
adc
and
sbb
or
push
and
xor
inc
inc
and
inc
and
cmp
pop
xor
xor
push
cmp
imul
lock
jecxz
shl
pop
enter
loope
fstl
add
fisttps
add
or
sbb
or
adc
or
add
sbb
out
sbb
cld
and
in
hlt
in
ss
adc
push
and
sbb
sbb
dec
sbb
or
inc
and
inc
cmp
cs
push
cmp
inc
aaa
cmp
cmp
aas
dec
repnz
int
call
sarb
fsub
cld
in
loope
cld
out
pmaxub
rorl
imul
hlt
repnz
push
adc
ljmp
lar
push
push
or
cli
or
pop
sub
add
xor
and
clc
cli
or
xor
and
adc
inc
sub
push
cs
inc
aas
or
cmove
inc
sub
cmp
xor
push
xor
dec
push
aas
aaa
and
and
inc
int3
fdivrs
call
jecxz
add
fadd
aad
in
fadd
int3
repnz
xlat
lret
roll
aad
call
stc
push
sbb
stc
sub
out
pop
out
and
sub
repz
aaa
pop
sbb
cmp
aaa
aas
adc
das
push
add
cmp
pop
dec
pop
or
sbb
sub
dec
push
adc
and
daa
das
push
sbb
sbb
xor
sub
inc
dec
pop
inc
hlt
leave
mov
cli
loopne
repz
rol
rol
fcmove
jecxz
adc
repnz
adc
aam
iret
shl
in
or
pop
or
hlt
cld
cmc
fcoml
out
jecxz
pop
and
or
add
and
add
aaa
std
cmp
pop
sbb
cli
sbb
dec
cmp
or
push
push
cmovno
pop
inc
push
daa
sbb
cmp
daa
and
imul
es
repnz
incl
fcmovnbe
ljmp
adc
push
into
hlt
rclb
in
sbb
call
fdivr
pop
pop
or
loope
ljmp
add
sub
add
hlt
aaa
push
xor
sbb
ds
sbb
sbb
aaa
and
pop
and
dec
and
and
adc
push
sbb
push
dec
pop
pop
sbb
inc
sbb
inc
and
arpl
aas
pop
lock
stc
into
iret
in
icebp
mov
loopne
repnz
ret
loop
lock
fcmove
cld
iret
adc
ljmp
out
fsincos
loopne
hlt
std
adc
and
or
in
push
das
sbb
out
adc
push
xor
ss
sbb
xor
and
cld
and
adc
cli
es
adc
aas
inc
and
dec
push
inc
aas
push
and
cmp
push
pop
and
pop
pop
cmp
aas
bound
xor
sub
push
inc
and
mov
icebp
std
mov
repnz
test
int
pop
clc
jmp
fstl
pop
lock
repnz
push
in
adc
es
sbb
testl
sub
maskmovq
imull
stc
adc
sub
push
adc
cld
inc
xor
sub
xor
add
push
and
xor
sbb
inc
sbb
pop
cmp
push
xor
and
and
xor
cmp
in
leave
in
mov
jmp
loop
out
or
lret
imul
loop
fucomi
call
icebp
aam
in
adc
push
icebp
or
adc
add
out
in
jmp
add
push
cli
sub
sub
pop
daa
ljmp
or
and
stc
inc
cmp
or
and
dec
dec
sbb
inc
push
adc
pop
sub
aaa
push
xor
push
and
inc
aas
push
inc
dec
inc
pop
addr16
jmp
mov
add
fucompp
fildl
sti
push
push
pop
adc
sbb
jmp
call
adc
sti
add
pop
and
in
ljmp
aaa
pop
or
imull
xor
sbb
sti
sbb
and
or
sub
add
and
inc
pop
sbb
xor
dec
xor
push
es
imul
out
fcmove
jmp
cli
mov
push
leave
or
jmp
sti
loop
ficoms
call
jmp
xlat
in
add
lock
push
or
sub
jmp
add
in
mov
sub
sub
std
std
pop
and
and
cld
cmp
xor
dec
and
xor
xor
push
and
push
sbb
cmp
push
dec
sbb
cmp
cmp
sub
pusha
daa
fcom
xlat
divl
fsubr
sti
movl
jecxz
int
pop
in
in
loopne
or
in
cld
push
sbb
out
or
neg
in
add
loope
adc
add
call
lock
imulb
or
xor
aaa
or
adc
xor
and
and
inc
and
inc
and
sub
cs
sub
cmp
dec
sbb
pop
popa
and
inc
dec
and
push
xlat
int
int3
aad
mov
mov
lret
ret
ljmp
jecxz
sbb
in
or
or
neg
sub
sti
fsub
sub
sti
add
or
or
pop
add
sbb
and
add
inc
cmp
daa
sub
inc
inc
dec
inc
or
dec
push
inc
push
inc
cmp
dec
cs
and
and
sbb
arpl
pop
ds
cmp
scas
in
neg
imul
cmc
mov
pop
cld
shl
cld
clc
clc
int
fmul
cld
add
adc
sbb
adc
sti
aad
neg
push
adc
repz
add
and
add
xor
adc
sbb
sub
stc
and
aaa
add
adc
cmovle
dec
xor
adc
sbb
cmp
sbb
sbb
inc
sbb
sub
cli
sti
enter
iret
mov
repz
call
add
stc
jmp
or
imul
in
out
in
ljmp
adc
es
pop
and
add
adc
sub
idiv
sub
or
adc
dec
inc
pop
add
inc
ds
dec
and
cmp
inc
xor
sbb
inc
sbb
cs
pop
gs
cmp
imul
fldl2e
cli
fcmove
lret
roll
add
lds
add
fiadds
adc
repz
std
adc
clc
or
fdiv
out
sbb
and
clc
add
hlt
daa
clc
sbb
out
push
sub
cvttps2pi
or
add
adc
inc
or
cmp
add
and
dec
cmp
sbb
and
pop
sbb
xor
pop
pop
inc
aaa
push
push
and
dec
aas
inc
ror
fnstenv
hlt
mov
test
add
icebp
loop
add
or
int3
jmp
stc
fdivrp
sbb
add
push
add
sbb
call
push
imull
adc
sbb
or
adc
phaddsw
inc
and
and
inc
or
inc
cmp
sub
aas
xor
pop
sub
bound
xor
daa
dec
inc
pop
inc
aad
lock
mov
sti
jecxz
cld
loop
stc
cmc
decl
adc
add
lret
frstpm(287
adc
out
sbb
and
and
sbb
and
sbb
loop
and
rdpmc
and
and
std
adc
adc
sbb
dec
pop
cmp
sub
sbb
dec
push
xor
adc
inc
push
cmp
xor
sbb
das
popa
pop
dec
inc
sub
dec
dec
inc
inc
arpl
lret
mov
div
xlat
fcmovnbe
ret
loope
faddl
hlt
leave
jecxz
fcmovne
fcmovu
loope
loope
push
call
jmp
push
fstp
cli
add
out
sbb
add
add
sub
in
sub
or
and
rdpmc
in
xor
sub
cmp
add
cmp
add
inc
add
aas
add
inc
or
and
inc
cs
and
sbb
xor
sub
xor
and
pop
xor
and
loop
mov
mov
icebp
ret
cmc
loope
add
or
clc
or
fildl
out
icebp
add
or
fdecstp
or
adc
adc
or
jecxz
and
add
incl
hlt
xor
daa
or
xor
std
sbb
xor
and
adc
sub
push
push
push
adc
xor
pop
cmp
pop
es
pop
addr16
mov
icebp
xlat
fcmovnu
mov
add
fiaddl
enter
add
out
stc
paddsw
adc
push
repnz
clc
or
in
loope
out
add
push
add
or
push
and
and
cli
sub
sbb
inc
and
xor
pop
sbb
sbb
inc
cmp
das
and
and
xor
push
aaa
dec
pusha
cmp
inc
push
inc
sub
dec
loop
fdivr
fucomp
fsubrp
icebp
rcl
cld
ret
mov
movb
leave
call
or
or
fcomp
add
frndint
sbb
sti
fmull
pop
add
xor
or
std
and
repnz
hlt
or
incl
inc
push
and
sbb
and
or
inc
aas
and
xor
push
adc
cmp
xor
sbb
push
inc
and
and
insl
cmp
call
int3
icebp
sti
int3
shl
std
add
add
jecxz
call
hlt
loopne
call
pmulhw
jmp
fcomp
push
adc
es
push
and
add
lock
add
adc
and
adc
xor
inc
das
inc
cld
aaa
and
xor
cs
inc
sub
ds
sub
dec
sub
cmp
pop
adc
xor
fs
and
dec
inc
es
loope
hlt
int
sarl
push
in
cmc
call
jmp
aad
jmp
jecxz
hlt
sbb
flds
add
push
xlat
cld
sti
lock
out
add
sub
out
xor
and
sbb
or
sbb
or
xor
incl
sbb
pop
inc
cmp
pop
dec
or
push
daa
dec
xor
pop
dec
sbb
cmp
aas
inc
and
inc
sub
dec
fs
mov
mov
xlat
int
aam
iret
mov
lds
imul
cld
or
adc
out
in
in
testb
repnz
pop
sbb
adc
loopne
add
sbb
out
or
add
repnz
push
sbb
push
or
cli
cmp
clc
ds
das
cs
cmp
dec
cmp
sbb
ss
cs
dec
pop
aas
pop
push
pop
inc
aaa
pop
inc
push
dec
push
mov
rol
out
repz
fsub
out
rol
loop
test
sti
ljmp
or
clc
sbb
sbb
add
and
sbb
add
adc
adc
or
pop
add
adc
aas
add
and
add
and
ss
and
or
aas
or
push
adc
inc
xor
sub
push
inc
cmp
fs
cmp
inc
pop
and
sub
inc
inc
sub
mov
sarb
add
leave
or
add
filds
int3
lret
in
lock
fprem
or
cli
push
std
ljmp
sbb
add
push
loope
std
in
sub
push
and
pop
std
inc
push
cmp
add
xor
ss
add
cmp
sub
dec
push
aas
sub
xor
dec
pop
sbb
cmp
and
push
inc
cmp
stc
aam
in
aam
mov
mov
iret
lock
or
loopne
fmuls
call
add
negl
testb
or
fisttpll
incb
add
incl
sub
add
sub
adc
push
sub
and
clc
sbb
adc
add
ljmp
sub
push
cmp
sub
es
sbb
cmp
push
push
pusha
gs
dec
push
es
inc
gs
mov
mov
aad
rcr
sti
mov
cli
fstp
call
add
out
push
rcl
adc
psubsb
or
out
adc
adc
lock
and
ljmp
and
and
push
adc
adc
cld
adc
and
and
incl
dec
inc
cmp
cmp
sub
sbb
inc
xor
pop
push
inc
xor
dec
pop
dec
cmp
in
out
cmc
leave
mov
mov
fsubp
in
add
adc
loope
cmc
fdivr
push
psubd
or
fdivr
repz
add
sbb
add
clc
push
add
or
sbb
daa
xor
adc
stc
es
or
cs
push
sbb
pop
pop
dec
and
push
push
or
dec
cs
xor
push
daa
pop
xor
dec
aas
pop
inc
xor
sbb
cmp
imul
out
jmp
fmul
hlt
fadds
aam
inc
aam
leave
loope
add
shr
loopne
cli
pop
sbb
fiaddl
add
fdiv
add
sbb
sbb
sub
hlt
sub
and
sbb
adc
or
xor
xor
sub
pop
inc
sub
dec
daa
sbb
and
sub
sub
aaa
cmp
push
cs
sub
and
inc
cmp
rol
mov
in
in
clc
mov
in
out
ffree
cld
out
or
iret
in
fisttps
add
sbb
out
pand
or
pop
adc
pop
jecxz
sbb
testl
daa
cs
add
unpckhps
inc
sub
cmp
sbb
xor
sbb
push
dec
or
sub
ss
dec
push
daa
dec
dec
es
sub
push
sbb
cmp
arpl
cs
pusha
cli
in
cli
in
aam
ljmp
add
out
lret
ljmp
in
adc
std
fcoml
jmp
cld
es
add
es
or
or
sub
xor
and
clc
sub
adc
cmp
pop
cmp
or
sbb
push
sub
sub
push
sub
sbb
inc
sbb
ds
sub
pop
inc
cmp
pop
and
pop
inc
dec
dec
pop
sub
shr
repz
mov
mov
xlat
or
fsub
pop
pmaddwd
xlat
lret
adc
push
out
std
icebp
cmc
and
in
push
sbb
sub
jmp
out
add
adc
pop
push
push
adc
inc
and
das
add
sbb
sbb
or
dec
inc
and
sub
pop
ss
xor
push
das
push
dec
xor
imul
repz
mov
jmp
rcl
xlat
sti
sti
or
add
into
rorb
icebp
hlt
loop
or
jecxz
fistpl
or
sbb
cld
or
sbb
stc
std
decb
cmc
or
cli
and
sub
pop
adc
push
adc
adc
std
inc
add
sbb
adc
and
inc
inc
dec
add
inc
or
inc
inc
and
adc
pop
sbb
xor
inc
and
push
cmp
insl
sub
shr
in
repnz
lret
rcl
rcr
loop
pop
or
add
clc
adc
xlat
shl
adc
push
or
push
testb
sti
and
cld
or
idiv
ljmp
push
xor
sbb
adc
stc
xor
cmp
inc
sub
cmp
push
sbb
dec
sub
inc
dec
xor
sbb
bound
push
and
xor
xor
dec
pop
sub
leave
mov
in
jmp
ljmp
rcl
out
enter
stc
or
in
push
femms
repnz
jmp
hlt
aad
push
sbb
pop
adc
sub
and
and
cmc
push
jmp
daa
sub
jmp
adc
or
inc
stc
sbb
add
xor
cmp
and
cmp
inc
ds
or
or
pop
inc
sub
xor
push
inc
sbb
pop
inc
imul
ret
iret
rol
push
fdivr
or
repz
ffreep
push
out
loop
ficoms
fmuls
or
ljmp
add
sbb
and
hlt
push
or
push
add
xor
xor
and
sub
add
aaa
aaa
sbb
or
or
sbb
or
and
inc
dec
cmp
cmp
sbb
pop
xor
pop
pop
push
ds
inc
push
pop
bound
bound
aad
rcr
enter
lock
aad
std
add
cli
or
out
leave
add
jmp
push
cmc
or
icebp
in
out
or
out
out
sbb
sbb
pop
out
loop
daa
sub
icebp
divb
or
adc
ds
incb
push
push
adc
aaa
xor
push
aas
dec
pop
dec
inc
adc
aas
inc
daa
push
daa
dec
cmovg
sbb
push
inc
pop
and
dec
dec
push
outsl
lods
mov
lret
sarb
aad
loop
aam
clc
enter
or
adc
aam
into
in
sti
jmp
sbb
std
or
or
mull
es
repz
xor
sub
sub
cmp
xor
or
adc
xor
adc
sub
inc
and
xor
inc
pop
sub
dec
sbb
inc
cmp
push
and
inc
pop
pop
inc
push
sub
push
stc
hlt
icebp
call
in
lret
cli
add
add
rorl
int3
int3
out
pop
or
jecxz
add
out
adc
fcomps
or
or
sbb
in
add
add
or
add
sub
xor
xor
add
sub
repnz
cmp
sub
adc
sbb
push
add
sub
or
push
ss
dec
push
inc
sub
adc
push
pop
sbb
push
das
inc
and
and
push
shll
test
fsub
sar
fnstsw
int
iret
fucom
push
loope
call
into
into
lock
jmp
paddw
and
push
pop
cmc
hlt
add
imull
cli
sbb
and
cs
push
repnz
cmp
cli
sub
xor
cmp
lcall
sub
pop
xor
cs
push
dec
inc
aas
aas
inc
cmp
sub
sub
pop
cmp
sbb
xor
inc
pop
fs
inc
leave
mov
into
call
in
cld
push
vpaddusb
add
cli
jecxz
or
jmp
push
add
shl
fcos
add
ficomps
add
adc
negl
daa
cli
jmp
sbb
or
pminsw
sub
cmp
inc
sbb
cmp
inc
cmp
or
add
push
and
xor
sbb
pop
push
dec
and
inc
cmp
xor
push
inc
data16
imul
clc
fscale
mov
incl
fdivrp
rolb
add
incl
fmull
in
out
shl
loope
int
cmc
clc
sbb
sbb
add
pop
cmc
add
or
pop
in
sub
cs
xor
add
cmp
pop
lldt
sbb
and
push
and
and
inc
sub
pop
cmp
push
popa
xor
sub
inc
imul
lret
mov
add
mov
pop
or
fldl
cli
int3
iret
or
aad
pop
or
add
sbb
lock
sbb
adc
sub
push
sti
daa
cli
or
std
in
and
sub
das
cmp
ss
das
sbb
push
add
or
inc
push
or
or
adc
xor
push
sub
popa
cmp
and
cmp
pop
cmp
int3
aad
int
fdivr
mov
rol
add
or
shr
or
fisttpll
adc
xlat
adc
out
fistpl
fcomp
or
hlt
push
loope
std
adc
sub
sti
push
sbb
add
in
sub
es
cmp
push
das
ds
das
sub
dec
dec
add
inc
dec
xor
push
xor
xor
push
cmovp
dec
inc
dec
aaa
and
pop
inc
inc
push
cmp
popa
das
mov
ljmp
mov
loope
into
add
add
cld
sti
vpsubsw
std
into
or
push
clc
in
in
aam
or
pop
push
adc
in
and
ljmp
add
pop
or
es
divl
push
add
and
cmp
sub
and
or
pop
push
dec
sub
push
push
sbb
and
fs
inc
cmp
call
div
mov
rcr
repz
fcmovne
loop
int3
loop
adc
leave
lret
cli
jmp
incl
ljmp
adc
pop
or
or
out
out
xor
or
adc
sub
or
ss
xor
inc
add
cmp
das
inc
sti
add
cmp
dec
aas
inc
sub
push
push
and
sub
sbb
dec
and
aaa
push
push
and
pop
sub
in
mov
mov
hlt
mov
push
icebp
call
or
or
imul
cmc
rcr
rcr
sbb
fdiv
in
push
fdivp
pop
add
add
cld
jmp
or
sub
add
or
inc
adc
and
or
dec
sub
sub
sub
inc
and
push
dec
or
cmp
push
push
ss
xor
and
pop
dec
pop
and
xor
pop
inc
daa
sub
in
lret
out
mov
in
test
roll
or
or
pop
repnz
into
adc
or
sbb
sbb
pavgb
pop
adc
stc
testl
in
sbb
psubsb
push
repnz
adc
adc
xor
or
ss
push
push
xor
inc
ss
inc
xor
pop
cmp
xor
pop
pop
and
sub
ds
dec
out
jmp
cmc
rcl
add
aad
in
rolb
add
lret
out
iret
add
fmull
adc
or
or
fcom
pop
unpcklps
repz
add
push
nop
pop
repz
decl
sub
xor
xor
cmp
std
cmp
inc
es
sbb
sbb
adc
push
pop
sbb
pop
and
sbb
pop
push
sbb
cmp
dec
dec
outsl
dec
out
lret
mov
add
fnstcw
add
repnz
push
repnz
adc
adc
neg
or
jmp
and
loopne
push
push
jmp
std
add
sbb
jmp
and
add
add
add
push
sbb
cs
sub
dec
inc
xor
and
das
and
sub
sbb
xor
dec
dec
pop
pop
sbb
dec
dec
dec
push
pop
push
push
pop
dec
ds
mov
mov
shl
repz
ret
out
loopne
loop
or
in
iret
repz
or
pop
por
out
sbb
std
add
add
and
sti
adc
and
ljmp
adc
push
adc
cmp
stc
stc
and
sbb
das
push
and
xor
pop
cmp
or
xor
pop
and
and
adc
das
pop
sbb
pop
xor
dec
push
bound
cmp
sarl
mov
add
jmp
rcl
aam
std
ret
bswap
out
or
shr
enter
cli
pop
std
ljmp
add
es
sub
and
sub
aaa
sub
cmp
sbb
cld
xor
sub
aaa
pop
sub
inc
sub
push
add
sub
push
dec
dec
pop
push
push
sbb
pop
pop
pop
pop
cmp
pop
xor
popa
gs
popa
pop
sub
ror
repnz
xlat
fadd
loop
jecxz
loopne
faddl
add
fisttpll
pop
add
repz
in
aam
ljmp
and
sbb
push
or
neg
push
clc
sub
out
adc
or
cmp
sbb
sub
sbb
and
std
cmp
add
cmp
inc
push
inc
ss
cmp
ds
ds
pop
das
dec
push
aas
arpl
cmp
dec
inc
dec
dec
in
cld
fcom
xlat
call
sar
repz
ror
add
or
in
std
add
iret
or
shr
int
cli
repnz
sbb
pop
add
jmp
fcomps
and
sub
adc
hlt
add
repnz
xor
stc
sbb
push
and
xor
dec
dec
push
or
push
cmp
es
sbb
push
and
data16
and
jno
in
repnz
mov
ret
icebp
cld
add
add
ror
push
ficoms
loope
jmp
adc
pop
aad
adc
sti
add
sbb
jmp
add
push
in
call
lock
and
icebp
in
xor
sbb
sti
incb
sbb
sbb
cmp
and
and
or
inc
xor
push
dec
sub
inc
xor
pusha
sub
aas
pop
and
push
pop
push
repz
lret
add
in
jecxz
cli
out
out
out
push
add
add
adc
not
shl
out
clc
or
fcmovnu
std
mulb
pop
notb
sub
daa
sbb
daa
xor
push
xor
sub
and
sbb
pop
aaa
aas
push
sbb
add
inc
and
dec
xor
push
sbb
sub
push
dec
aaa
and
cmp
gs
cmp
dec
bound
inc
cmp
ror
aam
aad
mov
cld
hlt
in
mul
lret
xbegin
or
add
repnz
or
f2xm1
jmp
loopne
fstp
out
sti
and
sub
add
push
adc
in
hlt
pop
sub
add
hlt
sbb
pop
stc
das
cld
sbb
adc
adc
push
or
sub
aas
push
adc
and
dec
push
aas
ds
inc
inc
pop
pop
sub
xor
jecxz
cmc
rcr
int
repnz
clc
ret
add
or
leave
add
out
push
out
imul
call
add
cli
fcomip
adc
hlt
sub
in
sbb
jmp
xor
sub
or
cmp
cs
cs
cmp
ss
inc
or
cs
sbb
aaa
push
cmp
sub
push
dec
dec
cmp
xor
inc
inc
dec
and
pop
push
pushw
mov
ljmp
stc
repz
into
sti
out
jmp
add
or
in
fists
or
call
xlat
fdivr
add
faddl
daa
and
in
pop
or
or
add
pop
add
xor
inc
adc
and
adc
cmp
or
xor
or
cmp
push
push
ss
dec
pop
push
and
and
pop
outsl
insb
data16
out
leave
ror
out
fsubr
mov
jmp
jmp
into
add
lret
repnz
out
or
in
cmc
adc
sbb
adc
add
jmp
out
in
add
sbb
adc
and
adc
inc
xor
xor
sub
xor
dec
push
dec
cmp
adc
and
xor
push
sub
pop
inc
popa
sub
rcl
cli
repz
mov
rcl
leave
mov
out
push
ror
add
into
add
fimuls
or
sbb
hlt
call
out
clc
cs
add
and
or
sub
sub
push
sbb
adc
adc
or
push
inc
dec
inc
and
dec
sbb
aas
dec
push
push
sub
inc
pop
and
xor
pusha
push
ds
and
cmp
inc
neg
out
rcl
rcl
ret
sti
mov
fxch
std
iret
or
loop
std
repnz
or
or
lock
loopne
fdivr
cld
clc
pop
cli
and
sub
cli
sti
out
adc
sbb
sub
sub
pop
sbb
and
cmp
ds
adc
push
inc
cmp
or
dec
sub
sbb
dec
cmp
sub
das
dec
cmp
gs
push
cmp
outsl
jecxz
iret
in
fnstcw
fcmove
in
add
fucomi
jmp
add
in
loop
pop
adc
clc
fisttpll
add
cmc
clc
daa
loopne
and
push
out
jmp
sub
cmc
and
lock
cmp
push
cli
and
and
sbb
cmp
inc
or
adc
dec
sub
es
adc
cmp
aaa
push
cmp
xor
pop
sub
cmp
div
mov
aad
fiaddl
or
or
loopne
imul
stc
in
add
add
aam
fcomi
in
std
fdiv
and
adc
pop
ljmp
add
adc
sub
das
ds
cmp
sbb
add
xor
dec
decl
push
and
and
sub
and
cmp
sub
sub
cmp
pop
xor
xor
inc
daa
aas
divl
mov
jmp
or
lret
loop
pop
or
in
out
repz
adc
jmp
sbb
sbb
and
ficomps
sub
push
call
sub
sbb
xor
or
cmp
dec
or
ss
xor
dec
dec
dec
daa
push
dec
adc
pop
dec
pop
cmp
push
sub
cmp
cmp
inc
iret
mov
cli
sti
aad
mov
repnz
jmp
out
icebp
cld
lock
out
sbb
pop
or
cli
icebp
add
in
repnz
es
call
xor
repz
adc
and
or
sub
or
xor
pop
sbb
aas
inc
sbb
and
dec
sub
push
xor
pop
pop
adc
dec
pop
cmp
cmp
aas
xor
dec
pop
pop
dec
dec
ret
repnz
mov
clc
lret
jmp
push
cmc
std
add
hlt
enter
jmp
jmp
adc
out
aad
sbb
out
in
repnz
std
in
add
cli
out
add
in
add
push
daa
clc
or
aaa
cmp
xor
inc
sbb
inc
xor
push
cmp
xor
push
adc
adc
sub
xor
and
cmp
imul
leave
mov
mov
add
out
add
lock
filds
call
xlat
sbb
jmp
repz
in
ficomps
sub
loope
jecxz
mul
sub
pop
in
or
and
add
pop
push
hlt
adc
cmp
sbb
cmp
daa
and
add
and
sub
dec
push
xor
push
push
dec
pop
gs
xor
arpl
ds
mov
mov
out
in
loopne
mov
stc
ljmp
into
repz
loop
or
jmp
clc
cld
icebp
in
add
adc
testb
std
sub
xor
sbb
sub
add
and
add
pop
cli
adc
adc
xor
and
pop
sub
sub
push
sub
push
and
sbb
cs
adc
push
pusha
xor
xor
inc
and
lret
jmp
mov
into
fiadds
in
add
rcr
movb
fsubrp
add
rorb
icebp
or
aam
or
in
or
loop
or
in
sbb
incb
call
pop
sub
sub
notl
cmp
cli
xor
xor
push
and
and
or
dec
inc
sub
xor
cmp
adc
xor
sub
pusha
push
push
xor
and
sub
pop
outsl
dec
insb
mov
xlat
rcl
aam
shl
mov
or
fucomi
loope
or
repnz
or
shl
in
adc
aad
call
lock
repnz
cli
mul
jmp
or
out
pop
add
icebp
sbb
sub
push
inc
sbb
xor
sbb
cmp
inc
pop
adc
es
and
push
push
adc
inc
dec
dec
cmp
sbb
cmp
push
and
push
xor
gs
cs
hlt
aam
faddl
fneni(8087
fcmovnb
rcr
add
cld
ret
or
adc
int
push
or
in
in
repnz
sbb
and
and
loopne
repnz
pop
or
and
das
or
in
cs
sbb
or
clc
aas
push
xor
add
sbb
and
pop
sub
dec
and
and
adc
aaa
ss
cmp
adc
sub
pusha
inc
inc
and
push
cmp
dec
sub
out
cld
lock
loop
inc
mov
enter
fsts
leave
iret
fldl
add
repz
pop
cld
pop
sbb
push
or
lock
cli
sbb
in
lock
repz
idivl
decb
xor
adc
sbb
sub
dec
das
and
push
pop
adc
xor
xor
dec
es
aaa
dec
and
inc
sub
in
sti
stc
sti
cld
stc
mov
stc
ret
shl
add
pop
add
int
lret
sti
in
add
in
cmc
aam
aam
or
push
adc
jecxz
pop
add
adc
cli
call
xor
or
jmp
push
cmp
lock
aas
xor
and
decb
pop
pop
and
and
and
adc
dec
push
push
dec
pop
cmp
xor
cmp
arpl
popa
insl
cs
out
lods
enter
enter
mov
mul
flds
in
push
decb
pop
in
xlat
add
adc
cld
jmp
add
out
fucomip
sbb
out
sti
lock
sub
sub
adc
or
adc
stc
cmp
xor
push
aaa
aaa
sbb
ds
sbb
and
daa
sub
push
dec
xor
pop
inc
sub
pop
xor
pop
push
dec
and
popa
pop
pusha
and
test
in
dec
mov
loope
mov
loopne
fisttpll
in
aam
fcoms
adc
movlps
pop
fiaddl
sub
es
testb
sbb
hlt
sub
cli
adc
or
or
sbb
inc
sbb
dec
pop
inc
sub
das
dec
ds
daa
dec
sub
xor
or
pop
sbb
pop
push
inc
inc
pop
dec
cmp
cmp
int3
repnz
mov
fnsave
mov
idiv
lret
push
add
movups
or
idiv
push
sbb
sti
loopne
sbb
sbb
daa
or
out
es
repnz
sub
cmc
xor
adc
inc
adc
and
adc
cmp
sbb
aas
and
xor
es
inc
and
dec
adc
inc
aaa
cmp
aas
pop
push
daa
inc
sub
inc
sub
repz
in
mov
fiaddl
mov
loop
std
fmull
decl
lock
aam
hlt
or
fimull
add
in
in
adc
es
and
xor
jmp
cmc
in
ss
add
cmp
hlt
cmp
cmp
inc
dec
pop
push
add
add
or
sub
push
aas
push
pop
daa
das
dec
inc
daa
dec
dec
xor
and
cmp
pop
cmp
push
cmp
pop
fs
push
ljmp
ffreep
cli
fdecstp
add
ljmp
jecxz
sti
int3
aad
loope
imul
sbb
xlat
out
adc
add
add
sbb
and
adc
sub
or
xor
sbb
adc
or
and
cmp
inc
movaps
or
das
push
push
dec
cmp
pop
and
xor
xor
outsl
pop
xlat
cli
mov
fsubr
aad
mov
jecxz
stc
cmc
lret
cli
lret
int
cld
adc
or
in
or
or
in
clc
negb
sbb
testb
repz
sbb
in
and
sbb
adc
add
repz
cmp
ljmp
cmp
cmp
ss
cmp
cmp
sbb
xor
push
xor
dec
pop
push
pop
cmp
xor
inc
aaa
xor
xor
inc
and
int
out
fcom
in
repz
testl
fdiv
call
add
lock
sbb
aam
fcomp
sbb
and
repz
sbb
fisubl
sbb
push
in
add
imulb
das
xor
sub
decl
cmp
inc
and
push
cmp
dec
dec
adc
inc
xor
inc
daa
xor
popa
pop
cmp
inc
dec
fs
inc
cmp
dec
fcmove
neg
sti
into
fidivrs
mov
sti
clc
roll
out
push
jmp
push
lock
in
call
repz
and
lock
adc
or
repnz
xor
add
cmp
sbb
or
adc
rdpmc
adc
and
dec
sub
add
and
add
dec
push
sub
adc
and
dec
cmp
push
pop
dec
dec
sbb
pop
push
dec
and
and
inc
outsl
dec
in
not
test
fsub
cmc
movb
fdiv
add
add
fdivp
call
loope
aam
aad
in
or
adc
div
loopne
sbb
in
out
or
sub
adc
sub
adc
and
xor
and
and
sub
adc
xor
pop
sub
and
and
fs
outsb
mov
mov
in
add
in
sar
ljmp
filds
lock
rcll
loop
adc
or
cli
add
push
pop
sbb
repnz
sub
es
sbb
adc
and
adc
adc
add
adc
push
sub
pop
inc
add
add
xor
adc
cmp
xor
pop
push
sbb
push
push
and
dec
cmp
imul
out
mov
loop
in
jmp
adc
roll
shl
push
icebp
call
stc
not
sbb
ljmp
testl
sbb
sub
sub
xor
aas
inc
cs
add
aaa
aas
or
dec
inc
and
sub
dec
cmp
pop
popa
xor
pop
das
cmp
xor
bound
arpl
cmp
loop
mov
jmp
out
testl
out
lock
or
in
in
hlt
out
sti
push
ficoms
sbb
adc
add
sub
loope
in
sbb
adc
sbb
sub
sub
sbb
daa
ljmp
dec
inc
inc
push
ds
sbb
push
cmp
dec
dec
and
das
dec
xor
inc
inc
data16
push
imul
cli
hlt
enter
clc
shl
enter
in
ljmp
fcomip
lret
adc
adc
out
jmp
fdiv
loope
in
add
jecxz
push
sbb
add
add
add
xor
cli
sub
pop
and
inc
push
cmp
adc
or
sub
inc
push
mov
dec
xor
push
adc
inc
push
sub
and
xor
inc
gs
sbb
in
mov
mov
lret
sarb
leave
loop
lret
add
jecxz
out
hlt
add
in
icebp
cld
cli
in
fldlg2
fistps
add
ljmp
add
cld
or
pop
cvttps2pi
xor
add
and
push
dec
std
sbb
sub
sub
inc
xor
xor
daa
pop
dec
pop
bound
xor
ss
and
xlat
into
leave
ror
int3
aad
mov
fadds
cli
cmc
add
int
icebp
loope
hlt
adc
out
push
sbb
hlt
add
or
sub
pop
or
or
hlt
or
sysenter
adc
or
or
sub
add
xor
xor
adc
push
or
inc
push
xor
push
adc
adc
push
push
xor
and
push
pop
inc
and
and
pop
pop
pop
cmp
in
shr
lret
mov
into
stc
jecxz
jmp
fimuls
call
adc
stc
clc
std
cmc
out
ficompl
and
es
jecxz
loopne
jecxz
loopne
xor
icebp
add
and
es
sub
xor
or
push
ds
pop
sti
inc
es
sbb
dec
push
inc
sbb
cmp
sub
or
adc
and
movaps
pop
push
sbb
and
arpl
pusha
push
insb
cmp
out
rcr
mov
cld
in
pop
or
add
out
call
lret
jecxz
push
push
rolb
clc
out
sbb
add
hlt
add
sbb
adc
and
add
sbb
adc
xor
in
icebp
and
or
sub
sbb
inc
aaa
daa
or
sub
and
inc
adc
xor
dec
push
aaa
sub
sbb
popa
cmp
pop
imul
popa
arpl
mov
mov
not
add
add
std
ljmp
shl
int3
add
adc
jmp
cli
and
repz
out
out
lock
add
and
ud0
push
in
sub
ss
xor
cmp
xor
adc
and
inc
daa
sbb
cmp
dec
das
inc
sub
sub
adc
dec
sbb
pop
pop
dec
pop
pop
pushaw
cmp
cmp
sub
popa
pop
not
leave
mov
std
mov
mov
out
add
icebp
enter
out
int3
push
push
pop
or
sbb
add
sbb
push
pop
in
icebp
fistps
add
push
repnz
jecxz
sub
or
sti
xor
push
or
sbb
divl
or
aas
push
ss
or
das
cmp
cmp
dec
sub
push
dec
xor
das
adc
dec
xor
sub
and
sbb
pusha
arpl
and
pop
inc
dec
cli
mov
mov
cld
aad
shr
f2xm1
pop
cli
lret
or
into
adc
add
or
in
add
call
repz
lock
and
out
sbb
jecxz
jmp
fucomip
sub
lock
and
call
or
sbb
sub
cmp
or
sbb
dec
cmp
inc
xor
sub
das
sbb
cs
and
and
dec
sbb
imul
popa
lock
enter
fdivp
icebp
out
loope
call
or
loop
loope
testb
shl
adc
imul
out
adc
mul
daa
out
out
clc
or
xor
sbb
sub
out
and
or
xor
adc
inc
add
cmp
sbb
sbb
sub
push
and
and
pop
adc
inc
pop
dec
inc
and
pop
inc
push
pop
sub
outsb
in
mov
hlt
mov
hlt
out
out
push
fdiv
or
xlat
movhlps
fnstsw
ljmp
in
or
pop
sti
cmc
out
and
sbb
out
cmc
repnz
and
std
and
lock
add
sbb
adc
icebp
sbb
or
add
and
dec
cmp
sub
dec
sub
inc
push
aas
dec
xor
inc
es
pop
xor
xor
inc
push
daa
sub
dec
int
fsub
int3
into
aam
iret
fsub
mov
out
lret
icebp
or
add
xlat
clc
unpckhps
sbb
sbb
add
clc
loopne
or
or
push
xor
hlt
pop
and
add
and
ds
inc
ss
and
dec
push
push
adc
sub
adc
cmp
and
xor
inc
inc
pop
xor
dec
insb
push
sub
loop
sti
int
aam
cmc
std
lret
cmc
add
faddl
cld
jecxz
imul
adc
out
adc
icebp
aad
aam
negl
sbb
std
cmc
adc
sbb
es
add
out
jmp
repz
sub
repnz
xor
push
and
ds
dec
dec
daa
dec
and
inc
dec
push
inc
xor
cmp
dec
sbb
cmp
pop
and
and
pop
dec
cmp
into
fprem1
ljmp
fmul
mov
aam
add
loopne
wbinvd
in
adc
repz
adc
or
pop
clc
nopl
jecxz
sbb
and
sub
and
xor
sub
sbb
sub
or
and
adc
and
sub
xor
sub
xor
dec
cmp
push
push
xor
pop
inc
aas
cmp
dec
dec
outsb
ljmp
mov
fptan
cli
loopne
out
lret
or
adc
or
or
fmuls
or
adc
or
loope
and
clc
cli
and
and
or
or
adc
sub
pop
cmp
das
es
sbb
push
repz
adc
inc
cmp
sbb
push
sub
cmp
aaa
push
adc
and
das
pusha
and
inc
and
ss
push
dec
dec
xlat
jmp
out
cli
mov
repz
repz
pop
mul
shr
in
leave
invd
ljmp
loope
sbb
or
push
jmp
adc
add
pop
sub
cli
fdivr
std
out
add
std
cld
ljmp
push
cmp
push
stc
nopl
xor
sbb
and
cmp
dec
or
or
push
cmp
xor
sbb
aas
and
pop
pop
pop
pop
pop
xor
xor
in
rcr
in
repnz
repnz
cmc
loop
stc
pop
cmc
cli
lret
fcmovnu
add
add
sbb
repz
stc
in
sti
stc
or
sbb
es
add
sbb
and
add
sub
hlt
sub
adc
sbb
cmp
cmp
add
or
inc
dec
or
adc
xor
xor
das
imul
pusha
pop
push
shlb
mov
cmc
fdivrp
stc
jmp
in
adc
call
adc
jmp
jmp
fisttpl
idiv
fldl
daa
adc
daa
sbb
sti
push
and
adc
add
daa
xor
add
xor
imul
xor
jb
jns
jb
imul
push
xor
loop
inc
addr16
jl
push
mov
das
shlb
add
cmp
add
push
fsubrs
cmp
and
cmp
es
xor
xor
dec
and
xor
push
cmp
sub
xor
xor
pop
push
pop
pop
dec
arpl
pop
inc
cmp
pop
cmp
out
scas
in
mov
add
fcmovu
out
add
stc
pop
pop
in
fdivr
in
std
adc
add
roll
lock
icebp
adc
sbb
and
add
sbb
push
add
add
cld
sub
stc
femms
es
adc
and
and
sbb
add
cmp
sub
sbb
das
and
inc
sub
and
push
cmp
sub
push
push
bound
and
dec
fdivs
mov
shl
mov
not
aad
add
in
rcl
cld
repz
loope
out
sbb
adc
and
add
testb
out
adc
add
daa
add
sti
push
adc
cs
das
push
or
cmc
pop
or
cld
sbb
cmp
cmp
aaa
push
pop
dec
aas
das
mov
dec
inc
xor
pop
pop
dec
and
dec
pop
push
pop
pusha
push
inc
insb
dec
and
sarl
iret
int3
hlt
mov
add
or
add
out
shl
out
negl
or
push
cli
fstp
adc
push
stc
cli
out
in
add
jmp
ljmp
sub
hlt
and
xor
cmp
nopl
push
cmp
add
xor
es
dec
dec
push
pop
and
popa
cmp
inc
sub
imul
inc
fdivs
mov
add
fdivs
shl
add
faddp
out
int3
cld
pmaxub
aam
lock
jmp
out
sbb
fiadds
in
add
sbb
out
hlt
testb
cvttps2pi
sub
or
std
or
bndldx
psubd
aaa
inc
sbb
sub
or
inc
inc
push
dec
adc
dec
sub
cmp
pop
and
inc
aas
arpl
pop
cmp
inc
cmp
leave
lret
enter
mov
into
stc
cmc
les
repz
ret
clc
in
in
in
out
cmc
repnz
lret
pop
or
shl
adc
pop
clc
sti
ficomps
and
push
idiv
adc
push
pop
or
xor
sub
repnz
es
or
and
cmp
sub
inc
adc
sbb
sub
dec
sub
push
sub
inc
xor
sub
cmp
pusha
sbb
ds
push
xor
xor
push
push
push
rcl
fst
fiadds
in
fcmovne
add
mov
push
loope
cli
out
cld
movl
into
rolb
call
adc
pop
in
sti
stc
adc
push
add
es
or
xor
out
or
cmp
sub
sbb
and
inc
add
inc
sub
sub
cmp
sbb
adc
adc
xor
cmp
push
ss
pop
cmp
sub
sub
clc
ret
out
clc
mov
loope
fcmovnb
fdivr
ror
vpavgb
leave
loop
iret
in
cmc
iret
out
fcmovbe
push
adc
icebp
and
adc
adc
incb
cli
cld
sub
add
and
sti
sbb
aas
cld
stc
divl
cmp
cmp
cmp
aas
es
das
or
inc
or
daa
adc
pop
pop
cs
sub
ss
and
imul
mov
ljmp
xlat
rcr
out
ret
xlat
add
loop
lock
add
pop
loopne
adc
in
in
mov
adc
add
adc
add
add
jmp
loop
pop
xor
or
icebp
sbb
lcall
or
cmp
xor
daa
aaa
sub
sbb
cmp
inc
sub
sbb
cs
cmp
cmp
sub
sub
pop
dec
push
push
inc
inc
push
push
dec
sub
inc
out
jmp
out
rcl
aad
mov
into
push
fucomi
fcmovnb
clc
sti
loop
or
cld
rolb
aad
jmp
adc
or
push
out
and
lock
or
or
add
xor
repnz
xor
and
adc
or
push
sub
adc
dec
cmp
sbb
xor
and
xor
sbb
xor
cmp
and
pop
push
push
fs
dec
popa
insb
push
mov
fdivrl
mov
mov
ror
repz
mov
pandn
rolb
add
loop
clc
std
adc
cmc
hlt
adc
sbb
and
cli
sub
cli
sub
cld
sub
cvttps2pi
xor
clc
sbb
cmp
cmp
sbb
xor
cmp
cmp
push
or
and
adc
xor
sbb
push
and
pop
pop
aas
inc
inc
out
into
in
ffree
int3
std
shl
cld
incl
in
clc
neg
testl
into
out
int3
in
adc
in
ljmp
fst
idiv
out
out
sti
decl
add
pop
cs
jmp
xor
clc
unpckhps
clc
aaa
sbb
adc
and
and
or
adc
dec
xor
or
pop
sbb
push
dec
sub
cmp
inc
daa
pop
sub
dec
xor
out
mov
mov
lock
loope
ret
loop
stc
add
add
out
icebp
out
add
or
call
or
pop
adc
in
sti
icebp
push
sub
sub
or
std
repnz
and
cmc
xor
pop
cmp
sbb
xor
sbb
sub
and
or
inc
pop
adc
and
sub
push
dec
push
xor
inc
fs
cmp
fs
dec
daa
dec
insb
inc
leave
enter
out
in
jmp
ljmp
or
cmc
clc
in
add
lock
pop
pop
in
call
sbb
or
adc
sbb
and
jecxz
negb
or
sub
or
xor
pop
ss
repz
or
push
push
or
cmp
xor
add
add
dec
sbb
or
es
inc
cmp
inc
pop
adc
sub
and
xor
pop
and
cmp
insl
fcomp
mov
jmp
enter
loop
add
add
mov
pop
call
push
sbb
repnz
adc
fdiv
adc
add
sub
sbb
in
sub
icebp
cs
sub
adc
adc
cli
and
sub
or
aas
sub
inc
xor
dec
adc
inc
and
xor
push
sbb
gs
push
imul
push
xor
cli
in
out
mov
repnz
add
loop
clc
mov
lret
cli
or
fsubp
jmp
shl
out
or
fld1
out
lock
jmp
in
push
pop
repnz
sbb
xor
add
adc
xor
cmp
cmp
sub
add
sub
dec
inc
or
push
and
xor
pop
inc
aas
xor
push
pop
aaa
and
dec
gs
fcomp
sar
leave
jmp
mov
out
loopne
hlt
or
decl
jmp
out
rcrl
movntq
out
cld
adc
icebp
loope
testb
icebp
jmp
add
std
decl
out
das
and
push
adc
aaa
or
sub
push
push
aas
sbb
cmp
adc
push
sub
sbb
push
xor
xor
dec
sbb
push
adc
inc
push
and
push
and
push
insl
inc
inc
fs
stc
in
jmp
in
loope
loop
in
fimull
sti
or
call
adc
roll
out
push
push
testl
sbb
cmc
in
bndldx
and
std
repnz
add
adc
sub
adc
or
inc
push
push
push
sub
inc
and
inc
mulps
pop
dec
sub
sub
pusha
inc
inc
push
pusha
inc
and
inc
outsb
sub
hlt
out
aam
leave
repz
mov
sar
stc
neg
xlat
cli
in
leave
in
or
into
hlt
call
in
fsubrp
adc
idiv
push
es
out
std
cmc
and
push
sub
add
and
push
daa
cli
or
or
adc
and
sub
inc
and
push
adc
pop
dec
inc
sbb
xor
xor
dec
pop
adc
pop
ss
sub
xor
addr16
xor
pusha
cmp
ljmp
iret
imul
aam
jmp
add
in
call
hlt
adc
add
or
cld
fucom
adc
add
loope
loope
push
out
and
out
sub
cmc
pop
sub
out
cmc
invd
hlt
adc
push
cmp
pop
sbb
add
daa
sbb
or
adc
sbb
push
sub
push
xor
inc
and
inc
push
daa
sub
pop
rcl
fmul
sti
fstpt
shll
fadd
or
clts
stc
adc
out
iret
or
or
or
push
pop
frstor
adc
out
daa
add
and
std
out
sbb
pop
repz
or
adc
divb
cmp
or
adc
dec
dec
sub
dec
pop
and
push
sbb
adc
push
push
cmp
xor
aas
inc
and
cmp
dec
dec
pop
dec
out
rep
not
aam
repnz
clc
mov
ret
aad
leave
in
lret
fsubrp
in
adc
pop
in
icebp
push
hlt
neg
push
out
adc
adc
sbb
cli
sub
in
or
in
or
sub
icebp
repz
sub
divb
clc
xor
cmp
cmp
and
push
and
dec
dec
adc
daa
pop
adc
and
sbb
ss
inc
imul
lret
in
cli
mov
mov
int
out
aam
add
sti
ljmp
add
add
sysret
or
skinit
mull
pop
adc
sbb
and
das
or
ljmp
and
es
negb
sub
and
xor
or
sub
sub
inc
push
cs
cs
sub
das
and
pop
pusha
push
inc
xor
daa
push
cmc
mov
icebp
int3
cmc
fbstp
loope
aad
ret
loop
in
in
add
repnz
adc
cli
in
neg
repz
sbb
in
adc
stc
sbb
sbb
sub
sti
sub
out
adc
in
sbb
movups
sub
adc
inc
pop
sbb
inc
cmp
dec
and
push
sub
push
cmp
sbb
inc
bound
push
pop
dec
push
out
shr
mov
icebp
aam
incl
shl
in
out
add
repz
ror
rorl
add
fadds
icebp
jmp
sti
fstpl
sbb
sbb
cli
or
and
pop
out
sub
icebp
push
lock
hlt
sbb
std
sub
or
xor
inc
and
adc
aaa
or
sub
cmp
dec
inc
sub
adc
dec
cmp
das
sbb
pop
pop
pop
xor
imul
mov
fcmove
enter
rcr
repz
loop
loop
add
loop
icebp
adc
aam
out
pxor
aad
incl
cli
sbb
stc
sbb
adc
sbb
pop
sub
jmp
icebp
and
and
cmp
sbb
and
sbb
and
or
sbb
xor
sub
sbb
push
inc
xor
and
inc
cmp
dec
jno
int
mov
lret
in
aam
add
or
push
or
sar
lret
or
out
adc
out
lret
adc
or
fmull
add
add
pop
daa
icebp
daa
repnz
adc
push
and
sub
sub
inc
add
push
xor
and
sbb
adc
sub
xor
push
pop
daa
sbb
pop
push
aas
and
gs
inc
xor
sbb
jecxz,pt
repz
hlt
mov
repz
mov
out
or
add
int
in
in
call
aam
cld
add
icebp
fcomi
add
pop
loop
add
adc
cli
icebp
and
repz
xor
clc
xor
adc
movlps
push
and
aaa
daa
sub
xor
push
inc
inc
pop
adc
es
and
sub
push
das
es
xor
cmp
ret
lret
aam
fidivs
in
in
fcmovnb
out
lret
jmp
ljmp
add
fcmovnu
ficoml
or
sbb
ficoms
sbb
add
jmp
sbb
add
cli
cs
or
sbb
inc
inc
push
add
inc
adc
cmp
sub
dec
or
push
adc
adc
or
sub
push
and
bound
and
fmul
int
neg
int3
shl
aad
repz
lock
lds
add
in
loopne
loopne
jmp
idiv
std
fcomps
in
pop
cmc
adc
out
and
cmc
cs
lock
sbb
sub
in
push
daa
adc
pop
cmp
adc
adc
aaa
inc
cmp
inc
dec
sub
dec
or
daa
sbb
push
adc
dec
push
and
pop
cmp
dec
cmp
and
pop
inc
inc
cmp
inc
insl
sub
in
out
mov
cmc
in
hlt
jecxz
jmp
rcr
inc
in
adc
pop
rcr
xlat
psadbw
or
or
out
adc
sbb
push
xor
repz
and
stc
sti
cmp
stc
or
adc
push
adc
and
or
dec
inc
dec
xor
and
pop
pop
sbb
cmp
sbb
cmp
pop
ss
pop
int3
xlat
shl
mov
rcr
out
loopne
loopne
or
repz
std
loope
adc
out
mul
fdiv
call
lock
adc
sbb
jmp
push
or
or
sub
sbb
sti
xor
sbb
push
and
sbb
sub
push
push
inc
inc
inc
das
dec
inc
inc
adc
adc
pop
push
das
inc
cs
push
inc
ds
pop
pop
sub
outsb
aaa
push
scas
out
lock
mov
out
pop
add
idivl
into
fcmovbe
repz
rolb
out
out
iret
or
or
add
stc
fcmovnu
push
sbb
add
in
daa
sub
lock
or
cmc
pop
cmp
or
sbb
inc
sub
cs
or
or
sub
sub
aaa
push
pop
pop
ds
sub
pop
inc
inc
es
ds
in
mov
in
ret
fsubp
loop
out
lret
adc
ror
or
repz
rorb
sbb
lock
and
sbb
clc
repnz
push
or
or
sbb
add
adc
cmp
or
sub
and
sbb
dec
daa
or
cmp
or
aas
sub
push
pop
sbb
push
xor
cs
dec
and
push
pop
imul
dec
gs
mov
mov
std
loop
in
in
lock
or
push
add
adc
out
fiadds
icebp
sbb
sbb
and
decl
or
sbb
and
adc
or
or
hlt
add
xor
cmp
push
and
pop
add
cmp
aaa
or
push
cmp
adc
sub
sub
pop
pop
inc
sbb
cmp
and
pop
push
pusha
push
es
hlt
hlt
in
mov
cli
mov
inc
pop
fucom
out
in
bswap
push
adc
lock
clc
stc
and
cli
stc
pop
and
pop
or
cld
adc
out
adc
pop
adc
adc
cmp
inc
ss
daa
sbb
or
or
dec
es
cmp
pop
pop
pop
pop
pop
xor
sub
aas
sbb
inc
sbb
dec
dec
data16
pop
in
lods
mov
icebp
jecxz
add
ret
add
jecxz
jecxz
jecxz
in
or
ljmp
in
or
or
cli
sbb
ljmp
and
sbb
out
sub
repnz
adc
and
dec
sub
cmp
push
dec
sbb
and
sub
pop
pop
push
push
and
and
pop
inc
imul
mov
clc
ljmp
mov
ljmp
add
adc
or
or
adc
adc
adc
stc
in
sub
jmp
sti
in
incb
sbb
pop
aaa
xor
add
and
add
or
sub
sbb
adc
sub
sub
sbb
pop
sbb
push
and
push
inc
cmp
dec
inc
pop
and
popa
outsb
out
in
std
mov
out
repz
sti
sti
push
cmc
les
test
loopne
add
clc
neg
sbb
ljmp
sbb
sbb
or
and
sbb
xor
repnz
clc
adc
std
or
and
xor
sub
pop
cmp
aaa
inc
push
aaa
xor
push
aas
or
and
dec
dec
sub
pop
pop
pop
push
push
pop
pusha
aas
push
push
cmp
cmp
in
aad
fdiv
out
add
fcmovbe
out
std
sar
add
iret
cld
lock
out
pavgb
xlat
pminsw
and
add
adc
add
sbb
in
jmp
add
sub
adc
es
cmp
adc
sbb
inc
xor
inc
sbb
and
or
dec
cmp
dec
xor
push
pop
sub
cmp
pop
cmp
push
fs
mov
ljmp
mov
or
jecxz
incb
adc
fsubp
loope
not
repnz
in
pop
xlat
neg
sbb
add
es
loope
in
and
pop
sub
and
xor
push
or
or
xor
sub
sbb
sub
xor
das
or
dec
cmp
pop
dec
das
daa
adc
xor
inc
dec
and
inc
adc
push
pop
adc
dec
push
cmp
arpl
leave
mov
stc
flds
lock
idiv
cli
cli
into
pop
add
enter
int3
or
or
sti
stc
adc
adc
hlt
adc
pop
add
loopne
and
out
hlt
push
or
icebp
sub
cmp
xor
sub
add
xor
or
dec
inc
inc
cmp
dec
inc
push
sbb
sub
pop
dec
bound
pop
aaa
push
and
pop
inc
xor
inc
aas
arpl
int
repnz
mov
ret
fnstcw
jmp
fisttps
cld
std
lock
or
div
or
hlt
add
sbb
push
loop
in
sub
sub
and
and
add
pop
notb
clc
adc
add
and
es
dec
and
and
pop
push
or
sbb
aaa
pop
push
cmp
dec
xor
inc
cmp
sub
test
lret
sarl
stc
add
cli
rcr
repnz
lret
ret
sti
in
adc
shl
jecxz
or
out
sti
adc
and
neg
notb
imul
add
out
sub
in
push
adc
push
cli
push
sbb
cmp
sbb
pop
or
adc
adc
daa
daa
sbb
and
adc
dec
pop
xor
and
xor
push
dec
pop
pop
iretw
jmp
lock
aad
stc
mov
std
push
push
loope
ret
push
loop
or
jmp
in
jmp
add
push
add
lock
push
push
push
and
push
repnz
cmc
jmp
sbb
ucomiss
out
das
or
cmp
cmp
aas
pop
inc
add
sbb
and
push
sbb
dec
ds
inc
inc
and
cmp
cmp
sub
pusha
push
push
sub
pop
sbb
cmp
pop
and
popa
mov
mov
out
repnz
fcomp
hlt
add
clc
loope
lret
or
iret
add
lret
lret
out
ror
hlt
repz
out
or
and
cmc
fdiv
jecxz
pop
out
pop
and
sub
add
add
or
cli
xor
cmp
and
adc
das
adc
adc
sub
sub
push
push
adc
push
dec
pop
sub
xor
cmp
xor
inc
push
imul
scas
mul
shl
shl
neg
call
fstp
stc
jecxz
sti
rorl
notb
aad
rclb
adc
testl
push
adc
push
out
repz
add
and
and
in
push
xor
xor
lock
xor
sbb
testb
dec
cmp
and
dec
dec
das
and
dec
pop
sub
sub
cmp
sbb
and
xor
push
pusha
pop
inc
mov
ljmp
stc
sar
cli
add
jmp
mov
paddsw
add
loopne
loopne
clc
icebp
jmp
icebp
fsub
std
repz
push
icebp
and
add
testb
xor
in
paddd
cmp
adc
cmp
or
xor
sbb
adc
dec
and
sub
aaa
or
or
push
push
dec
inc
dec
dec
adc
sbb
push
sub
sbb
push
gs
imul
inc
pusha
mov
in
mov
mov
sti
or
icebp
ret
or
aad
jmp
rclb
adc
adc
sbb
sbb
sbb
adc
call
sbb
cmc
std
call
and
mov
xor
add
sub
add
pop
aas
xor
cmp
cmp
adc
inc
inc
or
pop
cmp
dec
cmp
pop
inc
sbb
das
pop
pop
push
pusha
push
sub
inc
arpl
cmp
ret
neg
jmp
aad
mov
clc
enter
in
pop
add
pminsw
adc
out
or
in
out
hlt
loop
sbb
add
daa
sbb
or
add
out
and
ljmp
aaa
cs
push
sub
adc
adc
inc
inc
das
dec
dec
inc
push
dec
push
dec
inc
inc
push
inc
push
push
sub
sub
arpl
sbb
xor
and
imul
repz
cld
add
fsub
rcr
pop
idiv
out
loope
call
incl
enter
test
or
push
icebp
push
adc
pop
push
sbb
add
sub
push
cld
lock
xor
icebp
or
std
or
sbb
and
adc
and
aas
xor
dec
adc
adc
dec
xor
xor
xor
cmp
pop
imul
imul
into
mov
xlat
out
in
sti
stc
jmp
into
rol
idiv
fld
fdecstp
or
movb
adc
fst
fisttps
sbb
in
cli
cmc
fildl
fists
daa
out
loopne
loop
sub
paddb
and
sbb
or
repz
adc
pop
call
xor
and
add
add
inc
inc
sub
pop
push
adc
sbb
pop
push
push
arpl
and
cmp
pop
outsl
dec
lret
jmp
cmc
sti
loop
fdivr
call
fsub
or
in
fucomi
in
adc
add
in
stc
sbb
adc
sti
or
adc
out
pop
sbb
stc
cs
or
sub
div
adc
inc
xor
sbb
cmp
sub
push
es
xor
push
sbb
gs
and
inc
sub
push
imul
mov
push
ror
out
mov
cld
or
add
lock
fisttps
or
hlt
add
loop
repz
sbb
sbb
or
out
cvttps2pi
sti
ss
xor
aas
and
add
cmp
std
adc
sub
push
and
push
sub
xor
push
cmp
sub
pop
pop
pop
cmp
cmp
inc
dec
enter
aad
mov
vpmuludq
add
fucomi
out
sti
in
fxch
or
add
aad
jecxz
fdiv
jmp
cld
sbb
in
adc
sbb
and
ljmp
sub
ljmp
cmc
xor
ss
sbb
cmp
dec
inc
cmp
inc
adc
push
push
xor
push
push
pop
push
dec
cmp
pop
and
insl
pop
inc
sub
fcmovbe
int3
stc
cli
clc
icebp
out
in
fsubrp
not
lret
clc
or
rcl
into
fmull
in
hlt
adc
div
sbb
hlt
adc
and
repz
sbb
stc
in
sub
and
das
das
adc
prefetcht2
aaa
idiv
das
cmp
cmp
cmp
sbb
sub
push
adc
pop
and
xor
pop
popa
inc
push
pop
push
cmp
inc
ds
imul
stc
out
in
in
jmp
add
fildl
clc
jmp
add
jmp
icebp
out
or
fdiv
add
adc
sbb
clc
sub
or
add
or
sub
das
adc
std
cmp
and
inc
adc
dec
and
dec
push
dec
inc
cmp
dec
sbb
ss
pop
and
push
inc
aas
cmp
addr16
dec
cmp
cmp
out
fsubr
loop
lock
out
ret
sar
jmp
stc
int3
sti
fiaddl
in
decb
jmp
or
cmc
jmp
cmc
cli
and
fdivr
ficoms
or
add
pop
sub
daa
sbb
decl
pop
or
cmp
adc
and
das
add
cmp
sbb
inc
sub
and
sbb
adc
inc
cmp
adc
sub
inc
push
push
push
pop
inc
sub
insl
cmp
ret
mov
jmp
dec
mov
loopne
faddl
jmp
mov
out
pop
in
in
in
aad
decb
sbb
sbb
pop
add
sbb
push
sub
sbb
das
add
adc
sbb
cmp
sbb
testb
inc
add
sub
inc
aaa
and
push
inc
and
sub
pop
sub
xor
push
inc
daa
pop
dec
arpl
dec
cmp
enter
std
hlt
rcl
cmc
add
add
add
loop
or
or
ljmp
adc
out
add
out
and
cli
std
cld
in
call
out
pop
or
push
pop
add
aaa
cld
cmp
sbb
sub
adc
lmsw
inc
dec
cld
sbb
and
or
push
sub
adc
daa
xor
cs
arpl
push
bound
pop
and
cmp
int3
xbegin
mov
add
ret
stc
out
add
loope
repz
repz
ljmp
add
push
sbb
sub
sti
icebp
and
or
stc
sub
cmc
xor
cmp
adc
clc
add
and
std
inc
inc
sbb
or
xor
sub
inc
sub
inc
pop
adc
cmp
aaa
adc
aas
pop
xor
dec
xor
cmp
daa
cmp
stc
in
icebp
divl
shr
lock
in
loopne
iret
push
pop
shl
int
jmp
adc
fcompl
pop
cmc
adc
stc
lock
and
add
sbb
cld
adc
and
hlt
repz
cmp
xor
negb
sub
or
aaa
pop
clc
xor
sub
push
sbb
add
xor
dec
xor
inc
es
sub
dec
push
sbb
and
dec
dec
cmp
xor
and
insl
insl
pop
pop
xlat
in
stc
mov
iret
in
in
fisttps
add
or
add
fcmove
std
fsubr
in
push
add
lock
or
in
add
pop
stc
icebp
in
sbb
sbb
xor
add
out
sub
adc
sbb
adc
sti
add
and
inc
add
and
aas
sub
push
adc
adc
aaa
inc
sub
push
dec
cmp
sbb
pop
cmp
pop
dec
and
mov
int3
sti
cld
out
sarb
add
idiv
pop
mul
fadds
in
add
cld
or
aam
or
add
push
fistps
sbb
or
push
and
or
adc
or
daa
and
repz
pop
adc
adc
inc
adc
cmp
sbb
push
sbb
push
dec
sub
xor
push
xor
cmp
inc
push
push
push
push
dec
pop
sub
inc
imul
in
sar
in
filds
movb
cli
add
or
loop
adc
loop
testb
or
fiaddl
lock
adc
and
sbb
and
adc
cmc
adc
pop
or
and
std
sbb
xor
sub
das
inc
inc
and
and
dec
inc
pop
inc
cmp
pop
xor
sbb
xor
xor
xor
cmp
pop
aas
ret
int
int3
cli
fidivrs
int
aam
loop
or
stc
mul
sti
ud2
or
in
adc
aad
in
out
cli
sbb
jmp
and
fucom
hlt
out
and
daa
sub
or
sbb
and
sub
stc
sub
cld
cs
cmp
inc
push
inc
adc
add
inc
and
push
adc
sub
xor
xor
pop
dec
das
aaa
pop
cmp
fs
pop
imul
cmc
shr
aam
leave
mov
mov
in
mov
cld
jecxz
cld
int3
int
sti
add
in
ror
loope
adc
sbb
psubusw
and
push
adc
or
sbb
push
push
pushl
adc
and
and
cmp
sbb
adc
inc
dec
dec
push
inc
cmp
or
adc
adc
push
push
ss
das
cmp
inc
cmp
cmp
jno
shl
jmp
mov
mov
rcl
out
add
in
in
out
or
out
add
inc
mul
adc
jmp
pop
in
adc
out
icebp
and
repz
adc
out
or
es
and
cmp
pop
xor
sub
cmp
and
sbb
pop
dec
dec
cmp
adc
pop
sub
sbb
sub
xor
pusha
and
imul
lods
int
int
loope
out
add
sar
or
rorl
in
ret
push
out
int3
into
ljmp
loop
adc
sbb
pop
push
push
out
push
testl
and
sub
push
sub
std
adc
es
sub
xor
inc
pop
xor
push
xor
cmp
inc
sbb
xor
xor
dec
cmp
dec
push
das
pusha
sub
and
inc
inc
dec
pop
pop
inc
jmp
shr
shl
int
int
mov
fmull
fmull
add
std
fisttps
add
stc
out
push
fcoms
fdiv
and
push
ficoms
fsubp
std
in
and
adc
add
or
xor
xor
adc
adc
adc
sub
sub
xor
dec
or
dec
adc
sub
sub
pop
xor
inc
push
dec
and
sub
call
jecxz
add
mov
fsubp
in
jmp
iret
aam
push
push
fsubr
jmp
push
sbb
sbb
sub
loopne
sbb
sbb
xor
or
aaa
adc
sbb
cmp
push
xor
xor
sbb
aaa
sbb
cmp
xor
aaa
dec
xor
ds
pop
pop
pop
cmp
and
cmp
push
and
gs
int
scas
shl
enter
mov
jecxz
rorl
in
in
cld
add
out
loopne
repz
jmp
jmp
or
push
add
add
adc
cld
sbb
cli
and
lock
and
cmc
add
repnz
aaa
or
cmp
add
adc
sub
inc
cmp
push
aas
aas
sysret
push
dec
adc
push
push
xor
dec
das
das
cmp
and
addr16
repz
jmp
mov
rcl
in
xlat
loopne
leave
fsin
cld
out
call
unpcklps
in
out
sbb
or
rcr
sbb
repnz
add
sti
jmp
and
sbb
cs
sub
pf2id
sbb
cmp
sub
aaa
and
aas
and
es
adc
dec
or
sub
aaa
pop
dec
push
pop
push
inc
inc
pop
inc
push
inc
fs
dec
insb
dec
daa
jno
mov
mov
add
out
repz
frndint
fcom
in
shr
or
push
add
movlhps
std
aam
hlt
lock
in
pop
testb
add
add
xor
sbb
and
push
pop
dec
cmp
cmp
inc
sbb
and
cs
dec
adc
pop
push
dec
pop
push
cmp
cmp
aaa
and
outsb
inc
aas
sub
lock
rcr
cmc
ljmp
ret
sar
add
leave
in
fmuls
int3
call
or
icebp
fcomi
fdivrp
sti
push
sbb
and
ljmp
jmp
ljmp
xor
sbb
adc
cmp
inc
and
inc
sub
cmp
inc
dec
and
xor
xor
pop
cmp
ss
push
es
inc
inc
push
out
mov
out
stc
fistpll
idiv
rcr
push
pop
jmp
in
or
add
or
jmp
or
cmc
or
fistl
cld
jmp
add
or
cld
push
sub
or
pop
call
icebp
cs
aaa
cmc
cmp
adc
das
xor
inc
sub
or
dec
add
dec
and
pop
push
and
dec
sub
dec
pop
dec
inc
dec
push
inc
inc
push
aas
and
imul
lods
icebp
shl
out
mov
iret
add
leave
fadd
jmp
lds
into
add
push
in
cli
lock
call
cli
adc
and
adc
add
push
stc
add
sub
sub
cmp
adc
sub
inc
aas
cmp
sub
and
sub
inc
push
sub
sub
sub
cmp
ss
sub
push
and
pop
popa
repz
in
out
fdivrp
loopne
fdivrp
rol
stc
out
loop
add
loope
in
shr
aam
cmc
stc
repz
hlt
push
in
fdiv
sbb
add
sbb
add
call
prefetch
in
and
cs
sub
sbb
inc
cs
cmp
xor
push
pop
sbb
sbb
push
inc
xor
sub
push
aas
dec
inc
xor
and
sub
cs
lods
in
std
stc
fucom
xlat
rcl
xlat
ret
rcl
clc
shr
fucomi
in
loopne
or
cmc
repnz
adc
testl
push
and
in
and
mul
or
sub
sbb
ljmp
push
sub
sbb
adc
xor
inc
cmp
push
inc
add
sbb
sub
adc
aas
sub
push
adc
dec
push
pop
dec
and
pop
das
aaa
push
push
and
data16
imul
dec
repnz
clc
cld
enter
iret
fidivrs
in
mov
out
rclb
push
jecxz
repnz
or
in
out
std
testb
cld
adc
pop
sti
push
add
fistps
push
clc
call
add
sub
hlt
adc
pop
cmp
das
inc
xor
xor
sbb
inc
and
pop
and
push
sbb
and
and
push
push
sub
pop
inc
and
push
and
dec
jecxz
jecxz
in
lret
cld
lret
cli
rcr
stc
cli
ret
fcom
fdivr
fadds
sti
add
lret
jecxz
fdivp
ljmp
pop
or
out
cld
loop
idiv
pop
and
or
and
sbb
sti
adc
sub
adc
sbb
adc
sbb
or
incb
das
add
and
or
sub
and
and
dec
dec
xor
pop
push
sub
dec
xor
cmp
dec
imul
roll
fdivrp
rcl
fcmovnb
sti
in
add
iret
jecxz
lock
int
loop
out
sbb
sbb
loope
fsubr
add
clc
pop
decb
out
jmp
jmp
repnz
notb
icebp
sbb
add
aaa
xor
adc
adc
and
and
add
inc
and
inc
or
or
push
sub
arpl
cmp
arpl
imul
dec
fidivl
fcomp
clc
cmc
stc
repnz
mov
int3
xlat
or
fsubp
iret
lret
hlt
call
sbb
or
cli
icebp
fcmovnu
hlt
loopne
fadds
sbb
push
or
es
and
push
notl
pop
das
and
or
cmp
push
add
inc
push
add
sub
cmp
and
and
push
sub
inc
cmp
dec
inc
and
and
and
out
in
jmp
lret
loopne
iret
sti
cmc
cld
pop
ret
add
jmp
fists
into
repz
repnz
and
loope
cli
div
or
or
sub
pop
adc
in
and
add
adc
add
push
or
sti
ss
xor
add
and
xor
dec
sub
dec
adc
dec
inc
cmp
push
popa
xor
push
dec
push
sbb
pop
dec
pop
dec
cmp
sarl
stc
ret
std
add
stc
call
adc
adc
loop
out
repnz
repz
adc
and
sbb
sbb
idiv
or
adc
sub
sub
or
add
cs
and
xor
aaa
dec
dec
push
dec
or
dec
inc
dec
and
adc
pop
xor
sbb
push
push
sbb
pop
daa
pop
dec
pop
inc
dec
in
out
ljmp
mov
idiv
shl
or
call
div
out
aad
aad
std
repnz
hlt
out
jmp
add
add
cli
in
sub
or
adc
xor
adc
or
push
xor
cmp
das
push
add
cmp
sbb
sbb
adc
cmp
dec
sbb
ss
dec
aas
inc
and
sub
imul
scas
mov
out
mov
repz
add
loop
rol
int
lock
jmp
sti
in
lock
sbb
pop
push
repz
add
sub
unpckhps
incl
add
cmp
sbb
and
add
cmp
sbb
add
or
and
sbb
inc
and
pop
xor
push
sub
cmp
cs
and
aas
sub
sub
mov
mov
mov
fmulp
sar
mov
ljmp
repz
add
sbb
pavgb
ficomps
cmc
adc
adc
hlt
push
stc
imull
sti
daa
pop
sub
sub
ss
xor
or
sbb
and
aas
sbb
adc
adc
sbb
pop
and
dec
push
cmp
and
inc
cmp
fs
pop
mov
repnz
in
jecxz
add
shl
neg
leave
idiv
add
or
push
out
aam
or
movups
or
pop
in
adc
adc
pop
sub
cld
out
add
jmp
aaa
adc
xor
or
cld
xor
add
sub
inc
dec
dec
or
dec
adc
sub
dec
cmp
pop
sub
dec
bound
push
inc
es
cmp
out
mov
fdivrp
sti
fcmovbe
add
push
add
std
lret
push
out
jecxz
add
adc
adc
lcall
cmc
add
sub
ljmp
in
wrmsr
or
hlt
or
nopl
cmp
xor
add
adc
aaa
adc
inc
and
sbb
pop
and
sub
dec
inc
dec
inc
or
cs
sbb
xor
xor
gs
sub
pusha
icebp
ljmp
ljmp
repz
ret
xlat
xlat
push
in
cld
int3
sti
iret
or
push
into
adc
shr
push
pop
or
clc
pop
or
adc
repz
clc
ljmp
sub
hlt
and
icebp
or
push
adc
pop
cld
sbb
xor
sbb
sbb
dec
push
or
push
pop
inc
and
xor
dec
and
dec
push
inc
and
inc
dec
popa
pop
and
inc
dec
cmp
pusha
cmc
int3
mov
cld
sar
in
cmc
sar
iret
shl
fcmovbe
clc
neg
or
in
add
push
cld
roll
lret
add
or
clc
lock
clc
lock
add
sbb
hlt
jecxz
testb
lock
adc
or
cmp
cs
or
xor
xor
and
xor
inc
inc
inc
dec
push
push
sub
xor
or
dec
and
pop
push
pop
dec
cmp
popa
pop
sub
jo
call
cmc
repz
loope
hlt
std
fcomi
fdiv
repnz
in
jmp
add
shr
jmp
or
fdivr
testb
fstpl
out
pop
add
das
sub
cs
add
add
add
sub
sub
aaa
inc
ss
es
and
ds
push
dec
inc
sbb
or
inc
adc
pop
sbb
pop
bound
cmp
sub
push
push
pop
idiv
fcmovb
stc
frndint
in
mov
mov
or
movb
or
icebp
adc
add
push
add
loope
adc
push
sub
and
or
xor
and
pop
pop
xor
and
cmp
adc
xor
inc
adc
cmp
ds
sbb
and
inc
dec
inc
sub
push
xor
push
cmp
sbb
push
inc
pop
pop
aas
es
stc
enter
cli
add
in
add
fcmovbe
shr
icebp
into
add
or
sbb
adc
repnz
sbb
loope
jmp
xor
icebp
lock
or
add
sbb
inc
cmp
inc
cmovno
or
dec
pop
dec
cmp
adc
cmp
dec
push
aaa
adc
push
xor
inc
xor
cs
cmp
dec
ss
xor
in
ror
mov
fadd
fdivr
or
ffreep
fsub
loope
in
lret
or
rclb
ljmp
stc
or
fdivr
jmp
add
jmp
loop
or
adc
add
out
sub
pop
icebp
xor
icebp
sub
add
or
or
push
sbb
cmp
cmp
xor
cmp
cmp
dec
sub
sub
push
cmp
xor
inc
push
cmp
ss
imul
int3
call
in
clc
test
loopne
mul
xlat
in
fsubr
or
syscall
lock
fists
or
repz
lock
aad
icebp
sbb
cli
push
jmp
sbb
das
sub
adc
push
sbb
xor
cmp
adc
mull
pop
adc
adc
cli
inc
sub
inc
sub
dec
or
inc
sub
adc
xor
sbb
sbb
inc
and
and
ds
cld
mov
cmc
add
out
or
shl
les
lret
jmp
adc
pop
out
repz
fcomp
push
sbb
sbb
adc
mull
or
std
out
sti
pop
out
out
add
push
push
xor
pop
or
xor
inc
cmp
dec
inc
add
sub
das
das
push
sbb
adc
pop
push
cmp
sbb
cmp
inc
cmp
pop
push
repnz
lock
mov
push
test
into
clc
cli
rolb
testb
or
in
aad
fmull
adc
testl
sbb
sub
add
sbb
xor
in
repnz
adc
idiv
sub
incl
or
cmp
das
sbb
sbb
sub
dec
inc
aas
or
xor
xor
sub
pop
pop
and
pusha
sub
imul
rcr
add
mov
icebp
add
or
or
xlat
enter
or
or
push
repz
out
out
cmc
fcmovu
sbb
std
repz
pop
and
in
and
add
out
in
or
sbb
sub
adc
cli
push
inc
xor
sti
sbb
ds
cmp
dec
sub
dec
push
sub
or
cvtpi2ps
push
xor
push
xor
cmp
and
pop
inc
cmp
pop
ret
sar
mov
cmc
int3
ret
add
neg
add
or
out
jmp
int
decb
in
in
fsub
pop
out
fistps
repnz
or
add
add
push
pop
add
and
or
and
sub
sub
icebp
sub
inc
cmp
inc
inc
das
pop
and
sbb
sbb
cmp
sub
dec
xor
push
dec
xor
dec
sbb
push
dec
pop
ds
inc
pop
cmp
ds
cmp
es
jmp
fidivrl
hlt
iret
lock
fstpt
or
jecxz
adc
adc
hlt
lock
adc
sbb
lock
adc
fucom
cld
sub
out
add
out
es
cmp
or
adc
cmp
xor
push
sbb
sub
adc
push
inc
push
and
dec
dec
xor
dec
push
es
pop
cmp
push
dec
dec
cmp
ds
inc
cmp
pop
idiv
repz
sar
repnz
sarl
or
pop
hlt
int
std
out
repz
call
hlt
or
adc
sbb
pop
or
pop
push
jmp
sub
ljmp
sbb
push
adc
push
push
push
sub
cmc
sbb
cmp
inc
xor
adc
xor
xor
cvtps2pi
cmp
adc
or
pop
pop
pop
dec
sub
bound
popa
push
sbb
pop
sub
cli
in
enter
fdivrl
add
mov
std
add
out
add
in
or
out
repnz
adc
sar
sbb
add
div
sub
and
push
out
add
or
nop
out
sub
sub
pop
push
pop
cmp
and
std
add
or
or
sub
inc
or
xor
sub
push
dec
inc
push
xor
push
sbb
pop
cmp
xor
push
gs
inc
sub
ds
mov
out
fsubrp
in
loope
repz
cld
ret
cmc
fmulp
sti
out
or
in
fst
lock
push
pmaddwd
call
fsts
add
sbb
sub
push
loop
or
adc
xor
and
add
sbb
adc
add
xor
add
sub
dec
push
das
push
or
push
xor
ss
inc
push
adc
es
pop
inc
inc
sbb
push
push
xor
es
sub
fcmovnbe
fucomi
ror
lret
int3
fcom
fdivp
mov
enter
std
enter
adc
jmp
aad
cli
shr
fyl2xp1
fistps
in
adc
incl
and
add
pop
and
and
and
xor
or
adc
cmp
add
sub
and
and
sub
sub
dec
xor
pop
pop
cmp
inc
pop
sbb
inc
and
sub
leave
mov
mov
rcl
push
xlat
loopne
loopne
fiaddl
fimull
lret
or
fsubp
iret
jmp
out
fstp
jmp
adc
filds
push
adc
cld
testb
and
sub
lock
sub
xor
sbb
clc
add
xor
pop
sbb
adc
dec
cmp
ds
xor
push
sub
push
and
push
dec
push
push
fdivr
fsubr
idivl
add
mov
mov
push
add
cmc
add
jecxz
repnz
imul
or
or
loopne
and
sti
sub
clc
and
xor
and
repnz
sbb
or
inc
ss
and
aas
sbb
adc
and
pop
push
pop
adc
push
aas
pop
das
cmp
push
inc
aaa
push
inc
push
fs
ret
cli
aam
mov
repz
mov
sti
in
in
stc
pop
call
add
or
adc
sti
sti
push
cld
sbb
sub
call
in
std
xor
sub
add
sub
es
cli
cli
sbb
cmp
cmp
sbb
add
cmp
xor
and
inc
cmp
dec
sub
cmp
push
and
pop
push
xor
xor
mov
lock
leave
add
jecxz
fmul
icebp
push
shl
pop
xlat
push
in
fdiv
fdiv
out
push
adc
out
sbb
stc
adc
adc
pop
repnz
cmp
pop
cmp
cli
sub
lcall
cmp
xor
sub
sbb
inc
inc
dec
and
xor
xor
pop
pop
push
pop
arpl
xor
aaa
cmp
pop
pop
sub
pop
mov
jmp
lret
int
lret
add
idivl
movl
sti
in
add
in
loope
sbb
in
lock
adc
pop
and
sbb
jmp
cld
sub
or
repnz
xor
push
sbb
or
xor
cmp
push
sbb
pop
xor
adc
daa
sbb
pop
or
sub
push
dec
and
cmp
pop
pop
xor
dec
sbb
imul
imul
out
in
in
jmp
mov
bnd
push
cld
mov
add
idiv
loope
call
or
rcrl
adc
or
fdivrp
adc
sti
cld
stc
out
pop
add
sub
add
sub
adc
pop
and
or
xor
add
inc
sbb
sub
inc
dec
xor
dec
push
pop
sub
push
aaa
pop
push
cmp
xor
cmp
inc
inc
pop
mov
iret
mov
out
add
rol
hlt
add
fcmovnb
out
or
loope
or
out
or
aad
or
add
sbb
push
sti
movhlps
fstpl
fucom
and
out
and
sub
sub
jmp
push
adc
cmc
adc
repnz
inc
cli
push
or
inc
and
inc
or
pop
inc
and
or
sub
cmp
sub
adc
pusha
dec
dec
fs
inc
inc
pop
inc
imul
xlat
mov
add
mov
call
aad
repz
out
in
loope
std
lock
rcl
aad
repnz
out
neg
call
add
stc
in
sbb
std
ljmp
in
cli
adc
sub
push
and
xor
sub
sub
stc
sbb
incl
cmp
cmp
dec
pop
inc
dec
dec
dec
dec
or
inc
xor
inc
xor
sbb
cmp
and
push
pop
pop
dec
push
dec
xor
inc
pop
push
jmp
repnz
call
mov
repnz
rcr
lock
add
mov
into
fcmovnu
into
or
jmp
lock
out
push
or
add
adc
sti
stc
or
adc
or
and
pop
or
sub
sub
xor
or
inc
clc
inc
add
push
sub
sbb
inc
sub
adc
and
sbb
sbb
pop
pop
pop
arpl
gs
sti
in
int
sar
lock
out
rcl
sarb
neg
cli
ljmp
or
stc
adc
add
cld
negb
in
jecxz
out
or
add
daa
call
add
sub
pop
cmc
cs
pop
cmp
adc
inc
cmp
and
inc
cmp
push
inc
daa
dec
pop
and
sbb
sbb
xor
pop
gs
sub
pop
insl
inc
cmp
in
fcom
in
mov
in
sti
mov
mov
or
loop
repnz
repz
xlat
xlat
out
adc
stc
adc
lock
lock
in
add
or
pop
xor
and
adc
adc
sbb
sbb
add
cmp
decl
cmp
push
and
xor
cmp
adc
push
sub
das
push
pop
pop
sbb
popa
inc
and
sub
and
aad
call
in
in
ret
out
clc
ret
jmp
add
sti
fldl
leave
lret
jmp
loope
sbb
in
repnz
pop
idiv
in
fchs
add
sub
cld
out
sub
std
pop
add
add
or
icebp
pop
das
cmp
and
add
dec
pop
and
dec
or
push
xor
sub
push
and
cmp
dec
sub
sbb
inc
push
cmp
push
cmp
and
fld
mov
lret
cmc
hlt
lret
shl
sar
out
cli
std
loopne
mov
add
loope
sbb
icebp
lock
ficompl
and
adc
push
out
out
cs
es
and
xor
sub
daa
sti
pop
sbb
adc
xor
xor
add
push
aaa
aas
cmp
xor
and
aaa
daa
xor
xor
dec
pop
cmp
cmp
and
outsl
mov
sar
in
aad
fcomp
clc
add
call
add
in
in
loope
out
jmp
out
cld
fstp
xlat
incl
sbb
fisubs
and
and
push
and
sbb
sub
sub
add
sub
push
imulb
xor
adc
add
xor
sbb
pop
push
inc
inc
inc
cmp
dec
xor
push
xor
push
adc
dec
pop
cmp
and
dec
and
cmp
ds
mov
in
mov
ljmp
filds
leave
pop
xabort
int3
lock
add
or
jecxz
add
jecxz
push
add
sbb
fistl
and
and
sub
and
adc
and
ss
or
xor
or
push
testl
dec
aas
pop
sub
or
and
es
dec
cmp
cmp
xor
cmp
push
pop
inc
pop
cmp
aad
jecxz
std
rolb
lret
cld
add
add
fisttpll
stc
out
or
into
rorl
hlt
add
jmp
out
ficomps
neg
sbb
repnz
loopne
stc
out
and
cs
adc
xor
and
and
adc
xor
push
and
cmp
dec
sub
push
sbb
sub
push
or
cmp
cmp
sub
inc
push
inc
pop
push
ds
cmp
leave
stc
ljmp
out
mov
add
in
fstp
call
in
pxor
add
adc
repnz
sbb
sti
std
out
in
repnz
cli
sti
add
in
add
adc
xor
adc
divb
sub
sub
cs
pop
sub
and
sub
cmp
sub
das
and
push
adc
sbb
xor
xor
push
pusha
imul
out
repz
lock
into
rcr
ret
loopne
stc
sti
in
fmul
clc
fimuls
adc
or
adc
in
clc
rcrl
out
adc
sbb
clc
and
loopne
push
add
or
sub
or
hlt
add
aaa
idiv
cmp
sub
sbb
inc
pop
das
decl
sub
das
ds
xor
xor
cmp
xor
bound
dec
sub
data16
push
ds
aas
dec
hlt
lods
out
in
divl
in
loop
loop
enter
fdivr
add
int3
or
cmc
pop
adc
repnz
div
or
adc
adc
or
cld
jmp
icebp
repnz
sub
or
cmp
inc
inc
and
inc
inc
or
aas
sbb
inc
sub
sub
cmp
cmp
push
cmp
dec
inc
inc
fs
pop
and
push
sub
stc
ljmp
mov
in
or
or
stc
jmp
iret
fdivrp
adc
repnz
or
hlt
adc
sti
add
sti
lock
in
es
in
sbb
xor
out
daa
out
xor
and
push
imull
sub
cmp
aas
cmp
add
or
dec
dec
ds
sbb
sbb
cmp
pop
inc
xor
push
cmp
push
sbb
pop
pusha
imul
stc
out
xlat
fcomip
clc
sarl
loop
or
clc
fsubrp
pop
in
clc
in
add
push
std
push
stc
add
fistps
ficoml
cli
add
ljmp
and
sub
sub
sub
xor
adc
sbb
xor
sbb
push
push
or
and
add
push
inc
inc
das
adc
pop
pop
inc
sub
pop
cmp
pop
push
pusha
cmp
bound
mov
jecxz
out
imul
mov
mov
fstp
xlat
in
clc
in
std
push
add
or
shl
push
or
icebp
stc
loope
cmc
negb
push
daa
incl
es
and
sub
push
cmp
lock
sti
xor
cmp
adc
adc
adc
sub
sub
sub
dec
xor
inc
cmp
sub
and
xor
pop
fs
cmp
es
mov
repnz
out
ljmp
add
faddp
faddp
lret
or
fiadds
loop
stc
cli
adc
rcrb
testl
xor
imul
popa
imul
insl
xor
addr16
xor
inc
outsb
fs
outsl
outsb
xor
ss
cmp
xor
gs
xor
add
imul
xor
xor
xor
jbe
cmp
add
imul
cmp
xor
gs
xor
js
arpl
gs
insl
jns
popa
xor
xor
xor
dec
popa
outsb
jae
popa
push
imul
cmp
push
outsl
bound
xor
push
xor
add
cmp
outsb
imul
xor
xor
xor
xor
push
jne
push
jns
xor
cmp
outsl
fs
cmp
insb
add
imul
xor
xor
xor
add
add
popa
add
insb
add
insl
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
outsb
add
js
cmp
xor
cmp
xor
xor
xor
add
add
add
add
xor
add
add
pop
add
outsb
add
xor
add
add
add
add
add
add
add
add
add
add
jne
xor
xor
cmp
xor
cmp
cmp
xor
xor
cmp
xor
add
add
jb
add
or
add
adc
mov
cmp
add
adc
cmp
cmp
add
and
add
sub
add
imul
push
xor
add
bound
add
dec
adc
pop
xor
add
cmp
adc
push
jno
add
jp
add
sbb
adc
fwait
outsl
adc
dec
and
add
adc
out
cmp
add
inc
adc
pushl
adc
jnp
adc
mov
adc
addb
add
sbb
add
inc
adc
xchg
insl
adc
loopne
adc
mov
adc
add
sbb
add
cmp
add
add
inc
adc
mov
push
adc
cmp
adc
push
push
adc
call
jne
add
adc
xor
and
add
push
adc
outsb
pop
adc
push
insb
adc
stos
adc
add
cmp
adc
ljmp
xor
cmp
popf
sbb
cwtl
mov
call
fimull
mul
mov
in
fidivs
in
std
jecxz
out
or
jmp
in
or
push
iret
out
ljmp
in
repnz
and
sbb
add
push
sub
sub
adc
and
aaa
cmc
xor
or
sub
sub
inc
and
and
inc
inc
inc
cmp
cmp
and
and
adc
adc
push
sub
pusha
inc
cmp
pusha
ds
pop
mov
hlt
repz
in
mov
enter
add
out
out
pop
in
hlt
loop
adc
clc
hlt
fucomip
repnz
jecxz
sbb
hlt
sbb
or
fildll
add
jmp
and
or
xor
push
sbb
add
sub
xor
es
dec
cmp
inc
or
dec
dec
and
xor
push
sub
sub
pop
pop
sub
xor
daa
sub
in
mov
ljmp
inc
in
ret
enter
or
shl
out
push
jmp
or
in
div
add
fldt
add
or
cld
sub
das
add
das
repz
repnz
cmp
add
adc
pop
add
inc
sub
push
add
sub
sub
xor
adc
push
cmp
sbb
dec
inc
xor
and
imul
mov
repz
into
in
sti
or
in
out
stc
enter
repnz
stc
in
fcom
or
adc
icebp
add
and
loopne
or
jecxz
das
lock
xor
and
pop
push
icebp
repz
xor
sub
ds
sbb
xor
das
push
es
sub
sub
dec
push
sub
xor
dec
dec
and
ss
inc
cmp
pop
sub
pop
mov
repz
repz
repnz
lds
loopne
int3
adc
int3
std
ud2
shl
adc
out
push
or
adc
fcomi
adc
testl
stc
stc
out
push
out
sbb
sub
push
adc
xor
unpcklps
adc
xor
xor
push
adc
and
or
sub
dec
xor
push
adc
arpl
cmp
addr16
dec
cmp
icebp
call
shl
neg
jecxz
lret
std
enter
out
hlt
adc
or
fst
push
out
sti
loopne
ud0
repnz
and
call
push
push
xor
imull
mulb
xor
sbb
sbb
adc
sub
adc
inc
sbb
xor
cs
sbb
sbb
push
pop
insl
inc
pop
inc
aad
mov
iret
icebp
cld
repnz
stc
aad
ror
jecxz
shr
std
or
push
rclb
add
sbb
in
ljmp
add
pop
jecxz
adc
add
out
or
daa
stc
cs
xor
or
cli
sub
xor
and
sbb
xor
adc
pop
pop
xor
pusha
sbb
pop
cmp
arpl
pop
cmp
and
es
in
ror
idiv
out
mov
fcmovnb
mov
push
push
cld
int
bswap
hlt
adc
aad
in
adc
add
adc
stc
fldenv
sub
and
push
sub
push
and
push
daa
xor
sbb
pop
cmp
sbb
inc
adc
or
dec
das
or
ds
xor
and
push
xor
cmp
cmp
pop
aaa
cmp
ss
push
inc
inc
push
ds
rcr
not
mov
jecxz
ljmp
lock
repnz
aad
push
icebp
or
sti
adc
cld
hlt
and
add
in
and
or
sub
xor
add
cmp
inc
add
and
xor
inc
dec
push
adc
and
inc
dec
cmp
popa
sbb
inc
sub
sub
sub
sub
cld
sar
clc
repnz
iret
mov
repnz
rorl
pop
rcl
jecxz
into
call
icebp
jecxz
fcomps
rcr
sbb
out
lock
pop
movhps
sub
jmp
sbb
in
or
or
xor
aaa
sbb
inc
adc
cs
adc
sbb
sub
adc
adc
push
daa
pop
sub
and
cmp
ss
push
push
pop
insl
popa
pop
shl
fcmovne
fld
aad
rcl
loope
loope
hlt
not
or
xabort
fisttpl
fucomip
cmc
div
or
sbb
adc
ficoms
push
ficomps
repnz
and
cmc
clc
in
sub
jmp
cvttps2pi
or
decb
adc
add
adc
aaa
nopl
stc
and
sti
adc
pop
xor
inc
dec
sbb
inc
cmp
daa
xor
xor
sub
cmp
inc
push
inc
popa
sub
out
in
sti
filds
cld
shl
add
lock
fildl
add
stc
lock
add
rcl
iret
in
or
jmp
sbb
hlt
and
and
fldl
sbb
fbld
sub
ljmp
sub
adc
adc
add
add
sbb
dec
ss
sub
inc
and
cmp
push
push
sbb
push
sub
inc
sbb
push
cmp
popa
inc
dec
inc
push
sub
mov
sar
std
int3
dec
cmc
sarl
aam
add
movl
shl
lret
out
add
lock
sbb
sbb
sbb
hlt
cld
adc
or
sbb
and
push
sub
push
adc
push
adc
das
adc
cmp
cs
ds
and
inc
add
xor
cmp
inc
inc
xor
dec
sub
xor
push
cmp
push
cmp
arpl
bound
sub
in
cli
cmc
into
fdivrs
hlt
mov
stc
ljmp
adc
or
adc
lock
in
adc
or
sbb
sbb
loopne
repz
add
or
adc
adc
and
sub
push
sbb
sbb
sbb
aas
cmp
dec
and
and
sbb
adc
dec
sub
push
pop
pop
fs
arpl
push
push
push
cmp
pop
gs
aad
in
mov
in
add
add
aad
add
add
add
add
ljmp
cli
in
sbb
push
add
clc
and
loop
and
add
xor
repnz
xor
das
and
sbb
hlt
sti
or
add
call
add
push
dec
and
or
cs
prefetch
das
cmp
dec
and
xor
dec
sbb
ss
cmp
fs
pop
out
mov
jmp
mov
add
clc
leave
vcmppd
decl
add
add
hlt
add
sar
in
sbb
faddl
fists
adc
clc
call
sub
pop
push
daa
sub
adc
icebp
stc
imulb
push
cmp
adc
adc
add
push
and
dec
push
sub
cmp
sub
sub
dec
or
inc
sbb
sbb
dec
dec
ss
pop
aas
das
xor
pop
xor
push
aaa
insb
das
cmc
cld
mov
loopne
xlat
vpsubusb
ror
rorb
cld
lock
aam
or
loopne
fdiv
push
adc
syscall
fcomi
or
sub
out
or
or
hlt
adc
xor
repnz
xor
push
push
incl
sbb
adc
add
and
xor
xor
pop
push
popa
and
pop
inc
push
cmp
cmp
imul
pop
repnz
int
mov
stc
stc
hlt
out
ret
testl
icebp
int3
or
push
clc
pmulhuw
or
or
repz
add
adc
sbb
call
sub
push
or
xor
or
pop
movaps
clc
inc
and
add
std
add
push
and
xor
inc
and
xor
xor
push
ds
push
pop
push
pop
fs
and
cs
hlt
icebp
fidivrs
add
fiadds
fsubp
add
lret
jmp
lret
push
or
notl
testb
out
adc
lock
pop
cli
add
in
sbb
push
add
cld
sbb
or
sub
xor
or
cmp
cmp
aaa
jmp
sbb
dec
dec
sub
sbb
unpckhps
xor
adc
dec
sub
pop
sbb
cmp
xor
ds
imul
out
xlat
fprem1
fdivp
ret
in
pop
in
cmc
pop
add
or
or
aam
imul
push
add
icebp
psllw
sbb
jmp
sbb
push
fcomps
add
daa
pop
sti
cs
sub
ljmp
or
or
xor
ds
or
sbb
or
inc
inc
inc
inc
dec
and
push
pop
push
push
and
cmp
push
xor
sbb
dec
daa
inc
cmp
fprem1
hlt
aad
cld
int
fdivrs
rcl
fld
mov
out
in
jmp
aad
push
or
cld
out
pop
icebp
sti
pop
aam
adc
adc
es
ljmp
das
or
or
xor
stc
sbb
xor
adc
stc
sub
dec
sbb
push
dec
cs
add
push
dec
xor
push
and
inc
xor
push
push
xor
push
pop
popa
dec
popa
dec
pusha
dec
sub
mov
std
fsubrp
mov
mov
in
cli
add
adc
or
lret
rolb
adc
testl
sub
adc
call
or
adc
sub
xor
sbb
sub
std
and
or
sbb
inc
dec
cmp
sub
sbb
dec
push
pop
pop
push
xor
popa
pusha
and
push
sti
mov
call
mov
cld
jecxz
sar
fucom
into
loopne
icebp
rol
icebp
aad
or
repz
loopne
adc
icebp
loope
add
and
push
jmp
add
daa
sub
add
repz
idiv
adc
cs
inc
cmp
inc
and
or
dec
xor
and
adc
and
es
dec
pop
cmp
aaa
arpl
imul
outsb
cmp
ror
mov
not
ret
neg
loop
loopne
loope
pop
loope
cld
int3
stc
iret
int3
jmp
shl
push
add
or
cld
sbb
sbb
std
sgdtl
fsubs
and
adc
sbb
das
sbb
and
add
pop
cs
ss
or
cmp
xor
cmp
xor
or
inc
dec
xor
push
adc
cmp
xor
sbb
cmp
pop
dec
aas
dec
pop
fs
xor
inc
sub
pop
mul
div
mov
ljmp
fdivrp
add
rorb
or
loope
adc
fsub
or
or
decb
and
push
imulb
or
sub
daa
adc
adc
adc
notb
sbb
sub
adc
xor
add
or
xor
push
cmp
or
inc
dec
and
cmp
dec
xor
pop
popa
das
pop
inc
xor
fs
insb
insl
sub
in
leave
fsin
leave
cli
lret
out
fucomip
add
fsubrp
out
stc
add
in
lock
rcl
roll
or
fdiv
fstpl
sbb
pop
clc
std
in
in
add
daa
adc
adc
pop
adc
xor
sbb
adc
xor
sbb
sbb
cmp
add
inc
adc
sub
inc
sub
cmp
cs
push
pop
push
and
inc
imul
cld
hlt
ljmp
clc
add
cli
or
loope
loope
cli
jmp
or
out
add
or
ljmp
and
and
fdivp
sbb
sbb
and
pushl
in
repz
out
or
sub
stc
idiv
or
cmp
sbb
adc
sbb
dec
cmp
sbb
aas
cmp
inc
cmp
dec
push
inc
push
and
xor
dec
cmp
push
sbb
pop
ss
push
push
dec
dec
dec
out
cmc
mov
jmp
shl
mov
fcmovnbe
fucomip
repnz
or
fucomi
fimuls
out
into
or
xlat
out
fcoml
sbb
adc
jmp
sti
add
call
clc
or
in
xor
and
add
pop
cli
stc
daa
divb
and
add
cmp
inc
daa
cmp
dec
pop
cmp
sub
pop
das
aaa
dec
push
dec
cmp
xor
inc
insb
dec
outsw
shlb
not
lret
hlt
ror
in
add
or
les
int3
ljmp
ljmp
clc
pop
push
push
sbb
and
out
out
sbb
add
sti
pop
sub
hlt
sub
sbb
and
cs
std
cmp
and
adc
or
inc
push
and
adc
adc
push
pop
pop
push
dec
pusha
sbb
inc
daa
pop
dec
pop
daa
imul
es
fidivrl
mov
flds
add
ljmp
adc
or
clc
jmp
pop
or
stc
and
in
psrad
sti
in
sub
jmp
sub
xor
and
in
xor
push
sbb
adc
or
ss
sti
or
or
pop
and
push
inc
sub
cmp
pop
push
daa
push
dec
das
cmp
sbb
and
aas
aaa
pop
inc
and
pop
dec
cmp
divl
add
rol
mul
in
fildl
push
std
lret
int3
out
in
pmaddwd
negb
cld
icebp
icebp
pop
stc
jecxz
clc
add
adc
sbb
sti
push
sub
daa
pop
adc
cs
and
cmp
adc
aas
cmp
cld
sbb
inc
xor
sbb
sub
sub
or
xor
xor
xor
push
cmp
cmp
pop
pop
and
inc
pop
inc
addr16
sub
lock
mov
fiaddl
aad
xlat
clc
cld
in
adc
out
shr
pavgb
lret
xlat
frndint
sbb
adc
sti
or
jecxz
repnz
and
add
sbb
adc
adc
in
out
and
stc
or
sub
xor
push
inc
cmp
aaa
push
comiss
or
push
adc
inc
xor
inc
cmp
push
and
xor
cmp
addr16
cmp
bound
mov
call
loopne
or
lds
jmp
lds
add
sbb
notl
fst
push
ficoms
in
and
repnz
adc
sub
call
sbb
or
xor
push
sbb
daa
xor
adc
sub
add
add
cmp
inc
or
pop
and
adc
push
das
das
and
xor
push
pusha
dec
arpl
bound
cmp
and
pop
mov
cld
imul
sti
ret
mov
call
sti
lret
lock
rcll
adc
cli
adc
out
stc
and
sbb
adc
push
sbb
sub
in
sub
sub
daa
pop
xor
and
or
adc
and
add
cmp
or
dec
aaa
sbb
and
adc
push
sub
pop
pop
pop
cmp
dec
das
xor
inc
ds
outsb
pop
cs
fsub
out
stc
fst
cmc
loop
in
fdivrp
out
fildl
shr
enter
ljmp
into
or
pop
repz
or
or
sbb
daa
fsubp
and
loop
jmp
xor
pop
xor
or
adc
push
sub
or
or
or
jmp
dec
inc
adc
inc
dec
cmovs
adc
dec
sbb
sbb
pop
xor
and
and
dec
sub
cmp
mov
mov
fcmovnu
xlat
cli
div
fcom
fcmovne
loopne
add
lret
icebp
or
aad
out
add
and
lock
adc
sub
jmp
adc
and
or
sub
xor
sub
incl
pop
xor
add
cmp
dec
add
daa
push
adc
dec
push
dec
dec
cmp
cmp
pop
sub
inc
aaa
and
out
repz
loop
in
out
std
or
add
in
pop
std
stc
jmp
sbb
and
neg
or
pop
in
jmp
push
pavgw
sub
push
ss
cs
xor
testb
xor
sub
adc
sub
dec
and
inc
inc
and
and
xor
dec
daa
aaa
adc
daa
push
cmp
cmp
aaa
cmp
inc
arpl
sub
aas
es
repnz
fdiv
in
testl
into
lock
ror
movl
hlt
cld
in
adc
xlat
adc
adc
adc
sub
add
out
clc
clc
xor
xor
sub
call
aaa
cmc
and
push
xor
cmovno
xor
testl
and
sbb
sub
daa
xor
adc
dec
push
push
sbb
dec
es
ds
gs
mul
cmc
in
xlat
lret
not
in
testl
fdivrp
out
or
out
adc
adc
lar
hlt
sbb
pop
lock
fdivp
add
or
out
pop
pop
and
adc
icebp
or
push
xor
xor
std
and
inc
cmp
sub
dec
and
and
sbb
dec
push
push
and
and
sbb
pop
xor
aas
cmp
xor
and
cmp
mov
mov
faddp
mov
clc
mov
std
push
fiaddl
add
fdiv
ljmp
fsubr
repz
sbb
or
hlt
out
and
sub
sbb
push
or
lock
xor
out
and
icebp
clc
xor
daa
or
or
aaa
push
das
pop
push
dec
cmp
or
and
das
dec
dec
inc
xor
inc
sub
cmp
and
and
push
and
imul
mov
mov
ror
lret
sti
les
pop
sti
mov
into
add
jmp
pop
xlat
lock
fimull
out
fistps
or
add
adc
es
cli
add
lock
idivl
and
sub
icebp
sbb
sbb
or
pop
push
add
sub
inc
and
inc
inc
inc
push
ss
and
push
inc
pop
dec
push
sbb
aas
dec
cmp
pop
pop
pop
call
fsubrp
mov
cld
loopne
rorb
aad
pop
or
fucomp
out
faddl
or
adc
in
clc
sbb
add
and
jecxz
jecxz
in
pop
es
out
sbb
sub
and
daa
add
sbb
sub
cmp
and
das
push
cmp
adc
sbb
sub
inc
sbb
dec
push
xor
xor
dec
push
xor
aaa
xor
cmp
push
es
push
es
inc
cmp
das
lock
int
mov
int
repnz
push
test
out
ret
ljmp
jmp
out
sbb
repz
or
adc
icebp
out
adc
adc
add
cli
paddsb
and
in
out
and
sub
ss
aaa
and
adc
inc
and
and
pop
xor
aaa
and
pop
sub
sub
xor
pop
arpl
inc
inc
imul
pop
mov
mov
sar
cld
aad
mov
xlat
add
or
add
out
iret
jmp
stc
cmc
or
in
testl
and
and
sbb
sti
ljmp
adc
sbb
negl
xor
or
cmp
sbb
and
sub
xor
inc
adc
das
cmp
xor
dec
pop
xor
dec
dec
push
cmp
leave
mov
fcmovu
out
loop
fcmove
imul
xbegin
fadds
in
in
int3
cmc
aam
in
or
sbb
adc
cld
and
jecxz
sbb
and
and
adc
out
xor
add
add
sub
adc
pop
sbb
inc
and
push
cmp
add
dec
and
inc
das
cmp
dec
pop
push
pop
xor
xor
sbb
pop
push
cmp
daa
pop
inc
pop
jno
out
mov
sar
rcl
add
jecxz
add
xlat
xlat
ljmp
cmc
fsts
repz
out
fcoms
jmp
pop
sub
and
clc
sub
es
sub
in
sub
adc
and
adc
and
inc
sbb
sbb
push
inc
and
pop
push
sub
dec
push
adc
pop
aas
push
data16
data16
and
inc
inc
inc
not
iret
vaddsubps
fdiv
lret
into
repz
vcmppd
loop
std
into
adc
iret
loop
add
idiv
hlt
adc
add
aad
in
div
repnz
sbb
or
or
sub
and
xor
repz
sub
sub
add
add
add
dec
or
push
dec
sub
push
dec
inc
xor
pop
adc
pop
and
and
pop
and
inc
in
mov
clc
fsub
mov
iret
lret
add
mov
in
mov
sar
into
loop
aam
adc
xlat
stc
ljmp
fisttpll
out
fiadds
adc
fsubrp
push
and
pop
in
ljmp
xor
sub
cmp
pop
sti
add
sbb
aas
dec
or
das
and
or
push
push
push
push
pop
adc
pop
inc
fs
push
push
inc
pusha
ds
in
mov
lret
fdivp
add
sti
add
adc
in
sbb
adc
aam
adc
cli
and
sti
pop
icebp
std
add
sub
clc
es
incl
daa
adc
or
or
adc
aaa
repnz
sti
or
add
or
inc
push
push
sub
and
and
sub
push
pop
push
and
cmp
inc
pop
dec
popa
dec
push
inc
pop
jmp
lret
fcmove
int
cmc
into
ret
icebp
incb
testl
or
ljmp
adc
shl
fcoml
fcompl
lcall
adc
fisttpl
push
sti
daa
pmaxsw
xor
adc
add
adc
or
cmc
ds
inc
adc
pop
cmp
inc
daa
cmp
dec
adc
adc
sub
dec
push
dec
aaa
push
adc
push
dec
push
push
pop
cmp
push
imul
mov
repnz
int3
jecxz
stc
fcmovu
cli
add
ljmp
hlt
ljmp
push
pop
fstp
push
notl
adc
cmc
lock
jecxz
add
das
sbb
sub
push
push
xor
and
xor
sbb
sbb
push
sbb
daa
cmp
das
adc
sub
xor
dec
cmp
xor
push
pop
and
sub
sti
into
mov
jmp
out
flds
repz
aad
sti
in
in
cli
add
ljmp
stc
icebp
or
sbb
add
paddusw
add
push
sub
out
sub
and
out
sbb
sub
add
sbb
das
adc
pop
adc
adc
dec
and
inc
xor
sub
push
sbb
sbb
das
xor
pusha
push
inc
ss
push
push
ds
sub
clc
int
cld
mov
xlat
aad
fdiv
fdivr
jmp
fdivr
call
call
or
shr
lock
filds
repnz
repz
push
adc
and
sub
sub
sbb
in
call
or
adc
sub
sbb
and
es
sub
sub
ds
adc
or
push
cmp
dec
ds
and
inc
pop
sub
inc
inc
cmp
fldcw
repz
mov
iret
add
aad
fcompp
repz
or
repnz
repnz
sbb
sbb
cli
div
repz
sti
call
negl
sbb
sub
cmc
pop
clc
and
stc
out
adc
cmp
inc
es
and
inc
dec
dec
cmp
inc
push
xor
inc
sub
push
sbb
cmp
and
inc
sub
dec
pop
inc
pop
cs
fxam
fcomp
repnz
repz
ret
flds
hlt
rcl
fstp
decb
push
in
enter
out
into
cmc
or
add
add
add
out
jmp
in
or
add
or
imul
xor
adc
and
adc
sbb
sbb
pop
sub
das
pop
dec
dec
sub
inc
adc
inc
cmp
pop
push
aaa
pop
push
xor
pop
pop
inc
dec
and
inc
push
and
imul
aad
ror
leave
mov
sarb
fcmovu
incl
push
or
cli
call
call
adc
stc
add
adc
and
psubsb
out
or
sub
pop
imull
adc
ss
inc
inc
add
xor
inc
or
cs
sub
ss
pop
cmp
inc
pop
sub
pop
xor
and
push
sub
fdecstp
fadd
cli
ljmp
stc
add
aam
ljmp
loope
in
aam
xlat
or
in
repz
maskmovq
or
repnz
and
sti
add
push
in
and
sub
xor
cs
std
or
daa
add
inc
inc
sbb
inc
daa
adc
push
adc
xor
inc
cmp
sbb
pop
inc
aas
bound
push
push
cmp
and
inc
out
in
mov
fcmovnbe
ret
aad
fiadds
fimuls
adc
loope
aad
add
roll
pop
fincstp
out
fisttpll
out
sbb
clc
icebp
cmc
and
add
xor
or
or
xor
xor
es
xor
icebp
xor
cli
sbb
push
sbb
sub
aaa
aas
dec
and
inc
and
sub
xor
ss
inc
inc
cmp
aaa
xor
inc
inc
push
sub
dec
sub
clc
sarb
shl
fidivrs
or
in
std
sti
leave
adc
sbb
pop
adc
out
sbb
idiv
clc
sbb
hlt
adc
push
fdivp
sub
call
or
add
sbb
xor
xor
stc
sub
std
aas
sti
inc
add
sub
cmp
adc
and
and
sub
and
adc
pop
pusha
cs
cmp
dec
outsl
cmp
in
hlt
iret
into
lret
aam
in
enter
jecxz
ficoms
adc
jmp
loop
or
fcomp
fstl
or
out
or
pop
add
add
in
movups
xor
sub
adc
sub
xor
xor
add
dec
cmp
adc
adc
cmp
push
aaa
popa
push
push
and
inc
push
es
inc
dec
aad
jmp
cmc
mov
loopne
loope
shr
lret
fmull
lret
std
out
loop
in
push
adc
sbb
in
testb
fucom
and
push
std
or
push
push
push
adc
xor
sbb
or
cs
sbb
xor
or
aas
and
inc
es
adc
das
sub
push
sub
cmp
bound
cmp
cmp
push
xlat
enter
in
ljmp
call
int3
add
push
in
add
adc
add
sbb
push
pop
fmuls
pop
loope
adc
jecxz
hlt
sti
or
out
and
adc
unpckhps
xor
in
adc
sub
inc
ds
and
sbb
add
cmp
or
adc
and
xor
das
dec
inc
inc
pop
sbb
xor
sbb
push
pop
pop
inc
xor
push
cmp
loope
mov
clc
in
int
sar
cli
sti
sti
fcomip
out
or
leave
fmul
out
or
icebp
repz
shl
or
sbb
sti
sbb
and
add
sub
or
clc
stc
and
out
jmp
add
adc
adc
xor
ds
sbb
and
or
es
and
adc
inc
xor
xor
dec
daa
xor
das
dec
pop
push
pop
imul
sub
icebp
cld
std
stc
fcmovnu
mov
add
mov
add
std
iret
lock
int3
out
rorl
repnz
in
fucomip
out
fimuls
in
loopne
and
adc
add
add
sub
icebp
and
daa
xor
xor
adc
sbb
sbb
pop
add
add
sbb
daa
push
dec
or
push
xor
adc
dec
dec
ds
inc
xor
pop
push
inc
cmp
ss
dec
outsb
stos
into
aam
lret
out
std
aad
aam
in
in
cmc
std
fcmovnbe
or
out
out
push
push
sbb
mulb
or
clc
or
add
adc
loop
jmp
jmp
sub
push
sub
cmc
xor
xor
icebp
aaa
and
adc
inc
xor
and
dec
inc
sbb
daa
cmp
and
dec
pop
sub
sbb
push
inc
push
inc
cmp
cmp
and
lock
lret
fstpt
in
out
ljmp
fcmovne
psrad
lock
stc
clc
repz
fstps
adc
adc
repnz
adc
and
decl
icebp
and
xor
ds
inc
xor
std
or
adc
and
inc
sbb
sbb
sub
dec
inc
inc
inc
or
push
das
aas
aas
dec
push
xor
sbb
aas
inc
push
push
inc
pop
dec
imul
mov
leave
out
out
in
loope
in
push
repz
testl
aam
repz
ljmp
fbld
and
ljmp
or
call
and
out
or
sbb
cs
sbb
adc
push
adc
inc
dec
ss
inc
aaa
inc
dec
and
inc
and
movups
push
cmp
xor
bound
cmp
push
arpl
inc
and
clc
jmp
aam
into
idivl
in
mov
out
lret
psrlq
loop
jmp
add
add
cld
add
adc
and
sub
loop
cld
std
sub
or
and
es
and
clc
push
sbb
cld
sbb
xor
push
sbb
or
dec
rdtsc
or
cs
sub
xor
sub
xor
pop
push
popa
sub
inc
dec
dec
inc
das
fldpi
stc
mov
sar
aam
mov
fscale
out
or
xlat
int
into
in
or
icebp
bswap
xlat
or
lock
negb
fstl
and
adc
pop
push
adc
lock
add
jmp
add
cmp
sbb
cmp
pop
sbb
and
daa
pop
cmp
sbb
and
sub
sbb
cmp
push
das
dec
pop
pop
pop
dec
cmp
and
and
lods
leave
call
test
test
mov
fisttpl
in
verw
iret
icebp
hlt
clc
sti
or
adc
sti
negb
fistpl
out
out
add
sbb
cs
and
hlt
push
cmp
cmc
xor
cmp
sti
adc
sbb
sbb
push
aas
inc
add
dec
cmp
dec
sub
push
adc
push
dec
aaa
dec
sbb
xor
aaa
inc
cs
inc
cmp
pop
insl
ss
push
enter
repnz
add
jmp
or
add
in
cmc
in
or
or
repz
sbb
and
adc
pop
ficomps
add
call
xor
add
cmp
xor
xor
adc
xor
xor
pop
push
inc
das
or
inc
adc
sbb
sbb
pop
pop
pop
data16
imul
sub
hlt
rcl
xlat
aad
mov
fnstcw
jmp
out
lret
cli
adc
shr
out
out
fcoms
pop
fmull
push
adc
lock
in
and
push
daa
and
bndldx
and
push
xor
in
sbb
nopl
imulb
xor
cmp
sbb
daa
cmp
dec
pop
aaa
pop
sbb
or
or
adc
xor
push
inc
cs
push
and
and
inc
xor
jo
jmp
fstpt
mov
add
sti
add
or
repz
in
in
aam
sbb
aad
adc
negb
sbb
or
sbb
nop
and
out
daa
std
jmp
and
push
das
adc
and
xor
add
lcall
add
and
sbb
and
push
push
sbb
sbb
pop
inc
push
inc
and
aaa
inc
and
ds
out
stc
out
mov
fst
add
loop
enter
or
adc
out
sbb
fcoms
nop
add
jmp
sub
or
sub
or
cli
clc
std
adc
adc
sbb
add
push
dec
push
push
adc
pop
pop
sbb
sbb
inc
pushw
push
and
imul
call
fnstcw
in
jmp
fucom
fadds
in
jmp
adc
or
or
add
fistpl
adc
sbb
and
sbb
sub
xor
pop
cmp
xor
xor
pop
adc
and
push
add
add
sbb
pop
sbb
or
adc
adc
and
sub
push
ds
inc
and
xor
pop
push
xor
outsb
inc
stc
ljmp
jecxz
mov
mov
int3
enter
or
adc
or
adc
push
sbb
icebp
fucomip
repz
pop
cmc
notl
call
add
and
cs
cmp
cmp
and
or
pop
sbb
sbb
es
inc
das
and
and
and
dec
cmp
cmp
pop
push
push
pop
dec
push
and
fs
inc
cmp
insl
bound
in
out
fsubr
repnz
mov
repnz
fstp
repnz
decl
or
add
push
loope
in
sti
fildl
adc
fisttpl
cld
in
cld
pop
daa
cld
jmp
ljmp
jmp
or
cmp
xor
add
cmp
sbb
add
cmp
cmp
or
sub
sub
adc
xor
dec
pop
arpl
inc
xor
and
inc
dec
aaa
imul
mov
repz
iret
cli
inc
xlat
add
int3
or
adc
loop
loopne
movl
push
adc
rcrl
psllq
std
sti
adc
pop
cld
ljmp
call
adc
or
pop
aaa
adc
sbb
and
and
or
push
dec
push
xor
pop
push
dec
xor
xor
xor
and
dec
sub
rcr
mov
cmc
aad
int
clc
aad
ret
fcmovnu
lret
or
out
adc
fdiv
push
rcrl
lock
add
adc
icebp
icebp
negl
cli
sbb
decl
or
and
push
cs
cmp
cmp
and
inc
pop
sub
push
cs
dec
sub
push
push
dec
xor
aaa
pop
ss
pop
push
pop
xor
pop
pop
cmp
arpl
sub
in
hlt
mov
rcl
rol
or
or
std
in
add
call
loop
stc
sbb
notl
add
lock
or
sbb
daa
cli
sub
sbb
and
sub
aaa
adc
xor
or
sbb
add
cmp
xor
cmp
sub
push
ds
adc
push
daa
inc
adc
push
and
xor
sub
dec
cmp
dec
pop
pusha
imul
daa
sub
mov
in
std
add
shl
leave
leave
movntq
out
push
or
rcl
out
sysret
aad
sbb
or
call
sub
cli
add
out
xor
sub
and
repz
sti
pop
xor
sub
stc
stc
sbb
and
or
push
inc
sub
dec
sub
push
pop
xor
adc
inc
bound
pop
sbb
popw
gs
push
sar
into
mov
repz
add
rcl
add
cli
shr
enter
or
push
adc
push
jmp
in
out
loope
sbb
sti
sbb
add
sub
std
lock
jmp
add
add
xor
sti
sub
and
adc
and
and
sbb
and
push
inc
push
dec
adc
inc
push
xor
push
xor
pop
dec
cmp
xor
xor
cmp
enter
out
testl
push
push
les
rcl
add
fsubrp
add
fsubrp
std
pop
or
add
or
sbb
add
out
add
and
fdivrp
and
add
or
out
xor
in
das
xor
pop
es
aas
adc
cmp
adc
dec
inc
sub
push
sub
or
adc
dec
dec
dec
daa
push
cmp
sub
pop
pop
and
push
insw
pusha
inc
fcmovb
cld
fcmovnu
not
idivb
jecxz
add
lret
in
out
pandn
fsub
pop
fists
loope
or
out
and
adc
fdiv
pop
lock
loop
cli
pop
add
adc
sub
or
xor
xor
xor
das
push
ss
push
xor
inc
and
add
dec
cmp
adc
cs
sub
dec
push
adc
sub
pusha
pop
aas
sbb
and
ds
cmp
outsb
dec
sub
ljmp
xlat
mov
into
rcl
rcr
loop
add
adc
cmc
in
or
in
pop
or
add
fdivrp
hlt
ficomps
and
and
jmp
call
sub
add
and
push
sub
sbb
cmp
sbb
cmp
and
dec
sbb
pop
sub
xor
sub
push
cmp
pop
popa
sbb
aas
mov
jmp
neg
xlat
sti
jmp
hlt
fld
add
add
clc
shl
out
fisttpl
adc
jmp
sbb
sbb
call
adc
adc
adc
jmp
sub
cld
es
or
xor
rdmsr
stc
adc
cmp
cmp
sbb
add
and
adc
or
push
cmp
push
pop
ss
and
pop
and
push
cmp
inc
es
fs
ret
rol
jmp
cld
out
repz
mov
ret
xlat
or
ret
jmp
shl
filds
shr
testb
fcomi
or
pop
add
sub
pop
incl
daa
push
sub
xor
adc
out
lock
or
repnz
cmp
sbb
sbb
inc
cmp
adc
cmp
dec
cmp
cmp
sub
push
sbb
xor
sub
bound
and
fs
inc
insl
inc
inc
mov
in
not
out
mov
add
hlt
add
add
ret
or
stc
not
mul
add
or
add
or
or
sti
jmp
icebp
lock
or
hlt
pop
cmc
add
and
add
jmp
and
adc
adc
repz
cmp
sbb
sbb
aas
sub
dec
and
adc
or
inc
adc
xor
inc
sbb
cmp
pop
and
and
dec
aas
push
mov
iret
repnz
faddl
cld
xlat
add
mov
in
int
out
iret
adc
or
stc
add
or
iret
stc
fsubs
sbb
fcoms
adc
or
sbb
sbb
cs
adc
xor
push
adc
sub
or
xor
cmp
dec
add
cmp
xor
push
xor
and
or
inc
pop
pop
pusha
sub
gs
and
inc
imul
fstp
mov
lock
jmp
mov
in
add
push
int
fmull
adc
into
adc
jmp
sti
call
cmc
out
and
lock
add
in
add
sub
add
cld
sub
sub
adc
or
xor
cmp
sbb
xor
dec
cmp
add
and
sub
adc
cmp
push
sbb
cs
xor
push
xor
pop
push
sub
dec
bound
mov
lods
jmp
mov
mov
rcl
jmp
loopne
testb
call
fucomip
loop
aad
out
jecxz
push
repz
or
ficoml
push
daa
push
push
out
ljmp
sti
adc
and
clc
cmp
mov
sub
sti
and
stc
and
add
sub
xor
push
or
pop
cmp
push
popa
xor
inc
push
and
and
cmp
jecxz
stc
icebp
xlat
in
add
mov
loope
out
std
fcmove
add
icebp
std
out
call
add
iret
adc
jmp
adc
and
div
sub
or
pxor
xor
das
sub
pop
sbb
xor
inc
inc
add
dec
sbb
cmp
cmp
and
xor
inc
push
push
das
dec
sub
xor
cmp
pusha
cmp
pop
imul
out
out
clc
cld
lret
jmp
loop
filds
or
std
or
push
in
decl
in
add
repnz
add
mov
frstor
add
sub
and
repnz
xor
pop
sbb
cs
sti
aaa
pop
and
and
inc
sub
dec
inc
inc
cmp
push
inc
and
dec
push
push
xor
sbb
push
push
arpl
dec
pusha
inc
dec
and
mov
sti
in
repz
jecxz
in
add
mov
or
into
repnz
fisttps
in
jmp
aad
call
out
stc
adc
pop
fisttpll
add
es
add
and
sub
add
ss
incb
sbb
or
sbb
das
or
sbb
sbb
xor
and
imul
fcmove
in
rcr
mov
fsubrp
repz
fdiv
or
lret
in
in
repnz
or
sbb
or
add
cld
clc
fstps
loope
push
repz
sbb
ljmp
repz
xor
incl
adc
sub
adc
and
cmp
and
daa
or
inc
inc
add
inc
pop
push
and
adc
sbb
cmp
and
ss
and
sub
insw
mov
ljmp
hlt
add
sti
push
repz
fsubr
cli
std
jmp
testl
cld
sbb
clc
or
adc
daa
or
stc
sbb
icebp
sbb
add
and
add
ss
cli
sbb
lcall
and
push
sub
push
sbb
dec
push
cmp
push
xor
push
daa
sub
aas
pop
inc
insl
inc
sub
hlt
iret
in
imul
mov
jecxz
xlat
or
shl
add
adc
cmc
std
adc
stc
ljmp
pop
sbb
push
or
das
xor
hlt
daa
in
in
sub
sbb
ds
sub
inc
xor
inc
cmp
sbb
cmp
xor
das
pop
and
and
inc
dec
dec
dec
xor
popa
push
pop
cs
push
aaa
aaa
fs
arpl
jecxz
jmp
int
lock
fcom
or
leave
lock
lock
aam
push
adc
clc
fstps
fmuls
and
adc
and
sub
out
call
sub
and
and
sub
or
std
notb
pop
xor
dec
sub
sub
pop
or
push
push
adc
sub
push
dec
adc
pop
popa
sub
pop
cmp
pop
and
inc
inc
int
sar
fcmove
enter
mov
fld1
out
mov
pop
rolb
add
add
paddusw
fcmovnbe
aam
out
fisubs
stc
lcall
sub
xor
add
idiv
daa
cld
adc
add
sbb
sbb
cmp
or
or
and
and
ss
sub
pop
inc
cmp
dec
and
inc
inc
xor
push
dec
imul
fs
ljmp
mov
repnz
in
add
ror
out
ljmp
push
int
sbb
adc
adc
mull
push
add
in
sbb
add
std
add
repz
negl
adc
daa
sub
cld
and
inc
add
push
cmp
adc
cmp
pop
dec
sbb
or
inc
sub
pop
dec
dec
dec
sub
push
dec
push
aaa
inc
pop
imul
mov
fyl2xp1
int
jmp
idiv
out
add
repz
jmp
out
fmuls
add
hlt
cmc
lock
shl
adc
push
or
jmp
in
loope
hlt
add
add
or
and
sub
pop
sbb
xor
adc
pop
sbb
adc
cmp
xor
and
daa
dec
dec
sbb
dec
inc
or
inc
sub
dec
xor
pop
ss
xor
dec
adc
push
push
xor
fs
and
dec
inc
sub
in
iret
fucomi
rcr
mov
cmc
fcmovnbe
cld
stc
loop
sti
cli
or
add
adc
adc
or
or
push
fisttpll
icebp
add
adc
add
add
xor
pop
push
and
adc
push
xor
and
aas
ds
and
inc
sbb
sbb
dec
inc
or
xor
pop
ss
cmp
inc
and
sbb
dec
arpl
pusha
dec
int3
in
cld
int3
neg
shl
idivb
out
mov
idiv
into
cli
iret
push
add
in
icebp
into
cmc
int3
pop
stc
aad
or
nopl
call
pop
in
sbb
add
sbb
xor
add
idivb
push
sub
cmc
aas
xor
adc
inc
xor
xor
xor
and
cmp
inc
cs
movlps
sub
inc
cs
push
pop
dec
and
push
inc
push
pop
push
and
insl
cmp
ljmp
hlt
iret
loopne
loopne
fsubp
fildl
add
cli
pop
pop
add
adc
call
call
or
sbb
adc
cli
pop
icebp
sub
sub
or
push
push
cs
and
xor
xor
pop
push
sub
cmp
inc
push
add
adc
inc
cs
dec
push
and
xor
push
dec
dec
pop
push
xor
pop
dec
inc
push
sub
cmp
jecxz
ljmp
sar
iret
icebp
rol
add
in
cmc
jmp
clc
jmp
call
adc
testl
and
sbb
adc
notl
imull
sub
out
add
out
sbb
sub
xor
sub
or
inc
inc
aas
and
dec
xor
ds
xor
dec
inc
and
dec
inc
sub
sub
pop
sub
ss
pop
data16
push
pop
in
out
fcmovne
out
in
lret
icebp
hlt
repnz
test
cli
add
ljmp
icebp
sbb
es
fisubrs
push
repz
clc
pop
sbb
adc
and
in
es
xor
xor
sbb
xor
xor
inc
xor
adc
xor
sbb
dec
xor
daa
and
adc
adc
sbb
inc
xor
cmp
push
bound
pop
sub
mov
in
sar
mov
hlt
into
loope
fninit
pop
decb
in
icebp
int3
into
adc
adc
jmp
incb
cli
add
and
out
out
xor
xor
stc
and
sbb
decl
cmp
inc
and
and
cmp
sub
push
sub
cmp
sbb
ss
pop
pusha
push
cmp
inc
inc
fs
arpl
cmp
icebp
rcl
fildl
loope
loop
mov
pop
fsts
iret
in
rcr
aad
aam
adc
rolb
sbb
fimuls
sbb
call
cld
push
and
add
or
adc
sub
and
pushl
cmp
and
inc
cmp
sub
cmp
pop
sub
and
push
sbb
xor
sbb
cmp
dec
dec
and
fs
and
inc
and
in
lods
repnz
repz
stc
leave
mov
aam
add
loop
stc
or
adc
loopne
loope
or
aad
stc
in
stc
or
repnz
sbb
add
sbb
cmc
add
and
sbb
cli
sbb
xor
das
adc
sub
sub
and
xor
xor
sbb
dec
and
es
or
das
adc
pop
pop
dec
sub
sub
bound
ds
cmp
imul
mov
mov
mov
lret
out
idiv
out
add
or
lock
or
or
or
fdivr
pop
sti
cli
and
push
out
das
jmp
or
xor
add
xor
cld
imull
and
sbb
adc
xor
dec
sub
sub
pop
push
inc
inc
sub
pop
inc
cmp
es
sub
gs
inc
daa
and
repz
fmulp
add
jecxz
stc
shr
sti
testl
out
or
push
adc
or
adc
stc
cli
filds
push
out
add
idiv
add
cli
sbb
sub
xor
add
xor
das
out
xor
sub
adc
adc
sbb
add
push
adc
dec
push
daa
inc
daa
xor
dec
pop
sub
pop
pop
sbb
push
sub
cmp
fidivrl
rcl
in
idivl
repnz
fcos
add
or
hlt
sbb
xlat
adc
adc
cld
sbb
cli
adc
or
sub
adc
or
repnz
or
repz
pop
std
and
inc
adc
adc
inc
pop
inc
sbb
dec
dec
cmp
push
ds
unpckhps
cmp
xor
sbb
push
dec
bound
pop
push
push
dec
xor
mov
mov
int
add
clc
mov
or
cmc
in
enter
repnz
loop
push
pop
or
adc
nopl
fsub
sbb
loop
add
loop
ficomps
sbb
adc
or
adc
add
xor
cmp
add
pop
inc
push
dec
and
sub
or
aas
and
and
push
push
push
dec
sub
and
and
inc
cmp
and
dec
inc
aaa
sub
mov
sti
mov
vpaddb
fdivrp
cld
xlat
or
fimull
sti
adc
jmp
in
notb
jmp
in
or
repz
fcompl
pop
imull
push
ljmp
xor
xor
sbb
inc
and
sbb
cmp
dec
dec
inc
cmp
sub
push
sbb
and
push
popa
arpl
inc
pop
push
dec
dec
inc
pop
insl
gs
mov
mov
shl
out
cmc
in
mov
lock
loope
in
enter
add
cld
in
into
or
ljmp
fcomps
jecxz
add
cmc
push
add
or
std
adc
in
es
lock
daa
aaa
adc
cmp
sbb
add
inc
adc
inc
inc
adc
or
dec
adc
push
aaa
adc
adc
sbb
cmp
and
sub
insb
gs
mov
mov
fcmovbe
ret
neg
or
in
loope
jmp
adc
iret
cmc
out
out
pop
call
repnz
sbb
es
pop
in
das
or
xor
sub
add
xor
add
adc
and
cmp
xor
inc
or
aas
sub
sub
dec
dec
inc
aas
inc
cs
dec
push
dec
sbb
push
push
cs
inc
and
push
in
mul
repz
jmp
loope
jecxz
icebp
std
add
in
or
add
out
hlt
loop
loopne
stc
adc
out
fcomp
fistps
add
repnz
out
add
sbb
add
das
and
add
add
cmp
push
xor
or
add
inc
or
sub
dec
daa
dec
push
pop
xor
pop
push
bound
sbb
fs
cmp
xor
cmp
sub
ljmp
rol
aam
fimuls
fdivrp
jecxz
in
int
adc
add
sar
pop
or
out
loopne
adc
adc
pop
add
sti
sti
jmp
sub
out
repnz
sbb
sub
add
decl
add
dec
inc
or
daa
pop
inc
sub
and
pop
cmp
dec
sbb
inc
push
imul
inc
and
idivb
jecxz
add
loop
stc
cli
fildl
dec
or
loope
rcrb
out
repnz
testl
idiv
es
and
call
or
or
adc
icebp
sbb
or
pop
cmp
sti
add
cmp
inc
sub
add
dec
sub
cmovbe
inc
and
daa
adc
sbb
ds
aaa
inc
dec
cmp
cmp
outsb
mov
mov
cli
out
mov
mul
push
add
mov
add
rcl
loope
in
push
jmp
clc
jmp
cmc
push
std
sti
and
sbb
adc
in
ljmp
cs
xor
sbb
adc
xor
cmp
adc
xor
sbb
push
aaa
or
sub
ds
xor
push
cs
and
cmp
push
push
pop
bound
push
aas
pop
xor
mov
mov
mov
ret
loope
add
lret
pop
loopne
into
add
or
adc
out
lock
fcompp
loop
adc
repnz
jecxz
sub
add
add
adc
and
and
or
xor
maskmovq
testl
inc
das
push
and
and
das
adc
or
adc
xor
cs
cmp
inc
cmp
aaa
cmp
push
divb
xlat
lock
out
mov
loope
loope
lret
push
adc
push
jmp
fdivr
and
out
jecxz
in
sbb
sub
icebp
lock
or
negl
pop
push
push
cs
adc
xor
add
paddd
pop
daa
inc
dec
push
and
sub
inc
inc
xor
das
pop
sub
sbb
cs
and
addr16
bound
mov
lret
fmul
fdivr
icebp
out
fiaddl
loop
jmp
fimull
in
loope
incb
icebp
in
in
in
xlat
jmp
hlt
repnz
and
and
push
add
in
sub
push
push
add
xor
and
xor
xor
or
inc
xor
and
and
inc
or
es
push
pop
pop
or
aaa
adc
cmp
pop
and
and
dec
inc
imul
mov
out
call
fcmovnb
mov
or
lock
jecxz
cmc
push
aad
pop
ljmp
adc
sti
add
add
sti
incb
sbb
and
and
adc
and
adc
xor
push
xor
and
sbb
dec
push
sbb
inc
pop
and
inc
push
pop
dec
cmp
sub
inc
push
sbb
pusha
and
aas
push
into
sarl
sarb
lock
lret
fstp
ror
add
or
add
icebp
adc
out
in
in
pop
or
push
or
adc
push
out
cli
push
and
stc
xor
and
out
out
xor
xor
repz
xor
push
sti
add
cmp
and
and
push
and
cmp
adc
dec
inc
dec
push
sub
xor
daa
dec
push
push
dec
dec
pop
xor
ss
aas
dec
sub
repnz
rcr
aad
std
cli
shl
cld
cld
add
or
cld
int
adc
ljmp
or
fbld
loope
out
sbb
cld
clc
and
loope
imulb
push
adc
and
in
adc
jmp
testl
inc
sbb
idiv
cmp
inc
inc
std
and
sbb
inc
cmp
xor
dec
ds
aaa
inc
ss
pop
cmp
dec
pusha
pop
cmp
bound
pop
cmp
push
es
inc
aas
pop
mov
mov
scas
in
clc
fdiv
shlb
add
cli
mul
pop
add
shr
rcr
rolb
ljmp
loope
psllq
add
in
or
add
add
cmp
or
or
adc
adc
sbb
cmp
and
push
adc
xor
dec
aaa
xor
cmp
arpl
push
sbb
dec
inc
dec
arpl
rcr
enter
aad
mov
shl
loopne
aam
ret
or
adc
jecxz
add
in
add
adc
push
in
std
and
sbb
repnz
loop
es
sub
and
adc
sub
add
aas
sub
stc
adc
sub
cmp
aas
das
das
push
xor
xor
imul
xor
jb
gs
dec
popa
imul
popl
addl
add
cmp
add
mov
xor
pop
xor
cmp
xor
push
pop
cmp
out
mov
int3
ffree
hlt
lret
xlat
idivl
fmul
repz
fcmovbe
loope
jmp
repnz
leave
adc
sbb
add
and
add
call
or
and
in
decb
pop
psubw
in
or
sub
cmp
sbb
add
add
or
sub
dec
xor
dec
pop
xor
xor
inc
sbb
imul
dec
cmp
call
hlt
mov
mov
call
out
loop
clc
iret
loope
out
adc
icebp
cli
psraw
add
negb
in
cs
xor
or
xor
daa
aaa
or
inc
aaa
rdtsc
inc
das
cmp
dec
xor
aaa
push
inc
or
or
push
cs
das
push
push
sub
dec
es
push
sub
push
push
and
sbb
push
cli
cld
sti
loopne
icebp
lret
into
loope
loopne
movb
fcmovu
lret
ljmp
adc
sbb
into
in
sti
adc
out
sti
icebp
std
stc
lcall
and
sti
xor
sub
notb
sbb
xor
adc
cmp
inc
inc
cmp
adc
inc
dec
dec
cvtpi2ps
push
inc
inc
sub
sbb
aaa
push
dec
xor
sub
xor
push
xor
aad
cld
out
jmp
shl
mov
out
leave
fcmovu
xlat
loopne
add
push
mul
adc
or
adc
sbb
aam
stc
sbb
icebp
add
fdivr
and
sub
daa
ljmp
and
add
adc
or
sti
cld
sbb
push
cmp
add
pop
sbb
inc
sbb
cmp
push
xor
cmp
push
sub
pop
push
inc
pusha
pop
inc
inc
cmp
inc
imul
repz
repz
in
in
loopne
pop
jmp
fucomi
call
lret
ljmp
aad
idiv
sbb
in
cld
adc
and
adc
sti
add
add
and
sbb
inc
das
lcall
cmp
cmp
xor
sbb
and
dec
dec
dec
cmp
cmp
xor
push
push
arpl
pop
pop
dec
outsb
inc
out
icebp
std
fcmovu
cli
lret
push
push
fprem
lret
leave
leave
or
lock
in
add
sbb
or
sti
or
add
and
out
or
and
add
sub
and
adc
or
cmp
sbb
wrmsr
xor
inc
inc
inc
pop
aaa
and
add
xor
push
adc
adc
xor
push
cmp
inc
pop
and
pop
popa
sub
sub
outsb
push
fmul
int
fcmovnu
rcr
in
add
in
stc
mov
add
adc
call
iret
in
out
sbb
hlt
clc
adc
decb
sbb
jecxz
in
adc
out
jmp
xor
add
and
adc
or
rdmsr
sub
push
inc
das
pushl
pop
or
sub
pop
push
inc
cmp
aas
pop
daa
adc
xor
pop
dec
push
pop
and
cmp
cmp
and
out
mov
add
fcmovu
aad
les
or
add
add
in
push
add
push
jmp
loopne
out
adc
adc
sub
or
sbb
and
push
or
or
adc
std
cmp
sbb
cmp
call
and
inc
dec
and
sub
sbb
push
and
adc
xor
sub
sub
arpl
pop
inc
inc
inc
push
sub
mov
in
repnz
ffreep
fcmovnb
jmp
lret
loop
add
fsubr
xlat
push
jmp
cld
add
adc
pop
adc
adc
adc
pop
xor
pop
push
lock
clc
cmp
idivb
sbb
das
adc
cmp
and
pop
and
and
push
pop
push
sub
inc
push
push
push
dec
sbb
cmp
inc
pop
popa
pop
dec
xor
insl
shr
fsubrp
mov
filds
clc
mul
sti
enter
fucompp
push
cld
adc
lock
in
push
call
imul
fmull
call
sub
sbb
testb
push
add
or
adc
xor
sub
add
xor
dec
xor
ss
dec
or
sub
sub
or
dec
cmp
ds
inc
inc
dec
pop
sub
and
scas
call
mov
repnz
ret
hlt
or
add
adc
into
in
pop
pop
or
adc
shll
or
adc
sbb
sub
loope
call
sub
adc
sbb
repnz
sub
pop
sbb
xor
and
add
dec
inc
and
dec
sbb
sub
and
xor
push
and
sbb
pop
sub
addr16
popa
push
dec
aaa
daa
jno
lods
hlt
repz
mov
loopne
out
or
int
or
shl
lock
adc
fdiv
cli
iret
cli
out
ljmp
add
imull
push
loope
sbb
cld
add
or
sbb
sbb
push
inc
testl
pop
pop
ss
xor
inc
push
sub
and
pop
sbb
dec
popa
and
pop
es
inc
pop
inc
push
jmp
into
mov
sti
ret
fadds
or
inc
call
repnz
adc
pop
sbb
or
sbb
unpckhps
stc
stc
call
repz
ljmp
add
add
or
and
inc
sub
jmp
add
sub
and
dec
xor
and
dec
inc
das
push
push
sbb
dec
pop
adc
sbb
and
aas
pop
addr16
inc
pop
push
cmp
int
jmp
loop
idiv
std
jmp
add
in
or
out
or
jmp
aad
neg
cmc
sbb
nopl
repnz
and
pop
jmp
and
sbb
or
adc
or
push
cmp
or
push
pop
lcall
inc
cmovae
sub
or
sbb
cmp
or
addps
daa
adc
inc
sbb
adc
pop
gs
popa
cmp
cmp
rcr
out
cli
sti
out
std
icebp
shl
faddp
fdivr
or
cli
add
call
repz
adc
pop
int
repz
fstp
sti
and
sub
sbb
sbb
sbb
push
add
xor
and
adc
cmp
xor
cmp
and
and
and
sub
adc
cmp
xor
pop
cmp
pop
bound
pop
addr16
inc
cmp
icebp
mov
int3
add
xlat
std
icebp
out
testb
add
mov
adc
or
add
in
frndint
fists
and
sbb
add
or
stc
add
out
push
adc
repnz
adc
push
in
sbb
adc
inc
sbb
cmp
and
or
inc
sub
or
dec
aaa
cmp
cmp
push
pop
cmp
cmp
push
ds
ss
sub
insb
dec
mov
aam
xlat
repnz
fdivr
jecxz
shl
rcl
jecxz
out
flds
out
shr
filds
in
or
sbb
iret
rclb
fsubr
repz
and
std
pop
and
sub
out
push
and
sbb
sti
xor
sbb
inc
sbb
cmp
or
and
sub
inc
adc
inc
push
dec
das
sbb
xor
sbb
push
inc
xor
pop
es
inc
inc
es
dec
cmc
mov
divb
hlt
cmc
stc
aam
movb
call
in
in
or
or
adc
push
adc
testb
cmc
lock
out
out
jmp
sbb
sbb
repnz
or
xor
adc
sbb
cmp
sbb
inc
inc
inc
aas
push
cmp
inc
inc
pop
ds
cmp
push
xor
sub
dec
cmp
ss
dec
das
cmp
icebp
mov
fidivrs
rcl
or
jmp
add
in
fcmove
decb
pop
or
idiv
stc
sbb
push
and
or
in
in
fildl
and
sbb
in
adc
add
repz
repz
xor
push
sbb
add
pop
add
adc
inc
daa
inc
inc
add
inc
sbb
sub
push
push
xor
das
xor
dec
push
ss
pop
pop
dec
ss
addr16
push
bound
in
clc
leave
in
mov
mov
lret
mov
xlat
lock
add
enter
in
loopne
fiadds
adc
aam
rorl
fcomip
sbb
stc
add
stc
add
stc
add
hlt
xor
out
xor
pop
es
cmp
cmp
cmp
sbb
inc
cmp
sqrtps
dec
dec
inc
or
dec
cmp
push
cmp
inc
and
and
int
fmul
mov
int
out
hlt
add
add
stc
rcr
loopne
loopne
push
repz
out
adc
std
in
push
fsin
push
add
cmc
pop
clc
cmc
out
sbb
sub
adc
xor
sbb
cld
sbb
jmp
inc
cmp
and
add
sbb
and
pop
cmp
push
dec
dec
dec
das
dec
pop
popa
bound
inc
sub
arpl
push
iret
mov
rcl
out
lock
iret
not
rcl
add
out
lds
or
negb
xlat
call
adc
jmp
stc
in
repnz
or
pop
adc
pop
sbb
xor
repnz
cmp
inc
push
inc
pop
inc
pop
inc
sub
sbb
push
adc
inc
xor
cmp
and
dec
pop
pop
pop
and
push
ss
hlt
out
rcl
out
rcl
mov
add
mov
inc
lret
leave
jecxz
sti
roll
add
in
sti
adc
sbb
add
cli
or
and
in
sub
add
sub
and
aaa
xor
sub
adc
sbb
cmp
or
or
dec
sub
xor
and
dec
cmp
dec
sub
inc
sbb
xor
bound
ds
dec
dec
outsb
leave
mov
idivl
int3
stc
out
rcr
in
std
cld
add
fadds
int
push
add
into
shl
clc
out
pop
ficoml
fildl
std
fcomps
out
adc
sbb
loopne
sub
or
sub
sub
and
std
repz
push
cmp
inc
sbb
add
dec
sub
sub
and
and
das
sub
push
push
pop
xor
popa
dec
dec
cmp
mov
sar
fadds
out
repz
lock
testl
fsubrp
add
std
or
adc
sbb
push
ud0
hlt
and
sbb
sbb
adc
sbb
add
clc
and
call
push
xor
add
sbb
adc
xor
sbb
sbb
and
sbb
dec
push
xor
inc
adc
and
adc
cmp
sub
inc
cmp
arpl
cmp
inc
mov
fucomip
stc
fdivp
add
idivl
repz
int3
add
out
in
jmp
or
fmull
fcoms
lock
add
add
push
jmp
sub
cmc
sub
sub
or
cmp
sub
adc
sub
push
sub
push
or
dec
sub
dec
cmp
xor
pop
cmp
and
pop
pop
dec
cmp
sub
mov
cld
in
loope
add
add
lock
lret
fstp
into
add
lock
in
aad
add
out
cld
fucomi
pop
sbb
loop
add
sub
jmp
or
out
adc
xor
xor
push
pop
adc
cmp
and
cmp
sbb
sub
dec
and
xor
pop
cs
inc
cmp
cs
and
push
mov
mov
out
neg
mul
sar
cli
cli
in
fcomp
xlat
out
loop
in
ror
adc
aad
push
jmp
fiaddl
in
hlt
add
hlt
pop
repz
push
adc
adc
sbb
sub
adc
cmp
repnz
xor
xor
add
xor
sbb
cmp
add
or
pop
ud2
sub
and
inc
pop
push
push
ds
das
pop
sub
sbb
push
pop
and
imul
repnz
in
lret
cli
lret
in
std
stc
lock
stc
in
or
int
mul
icebp
ljmp
adc
mul
pop
cmc
sysret
pop
stc
add
adc
jmp
out
xor
xor
hlt
pop
testl
pop
sbb
and
inc
xor
cmp
cmp
pop
inc
adc
sbb
sub
xor
and
dec
push
dec
pop
dec
outsl
leave
int3
cld
fucomi
fildl
add
lock
mov
push
jmp
out
lock
in
adc
or
lock
pop
out
sti
jecxz
sub
add
cs
sbb
and
and
adc
adc
push
ss
inc
sbb
inc
adc
push
cmp
dec
adc
inc
and
push
cmp
pop
cmp
push
push
inc
inc
fmul
into
iret
xlat
out
lret
mov
int
fdivr
repnz
enter
xlat
int3
fcmovne
or
xlat
rcll
out
adc
fucomi
and
and
and
out
in
or
add
adc
cmp
cmp
push
add
sbb
add
incb
inc
add
sbb
or
sub
sub
push
and
xor
aaa
dec
push
push
pop
dec
inc
dec
bound
es
pop
and
xor
pop
push
leave
repnz
cli
repnz
hlt
cli
fidivrl
cmc
inc
enter
pop
jmp
int3
add
add
add
adc
call
in
pop
stc
cli
fistps
cli
std
pop
or
stc
adc
and
cmc
add
push
or
stc
xor
sub
pop
cmp
inc
cmp
cmp
add
dec
adc
and
push
inc
inc
push
dec
sub
cmp
sbb
xor
inc
popa
cmp
dec
test
divl
jmp
stc
shr
repnz
jecxz
jmp
loope
rcl
stc
icebp
adc
jmp
hlt
sbb
in
sbb
fisubs
jmp
sub
sti
daa
in
cld
or
adc
repz
adc
xor
sbb
adc
inc
adc
cmp
inc
and
dec
sub
or
push
and
sub
inc
cs
push
gs
pop
dec
inc
ss
int3
lock
jmp
rcl
fildl
leave
out
sar
lret
aam
push
hlt
rcr
or
or
adc
out
and
and
add
pop
jmp
sub
and
and
xor
sub
cmc
xor
inc
cmp
or
add
ss
push
dec
push
or
aas
aaa
cmp
and
push
sbb
pop
ss
push
inc
cmp
xor
inc
dec
cmp
cli
mov
mov
aad
out
add
cld
jmp
or
add
push
iret
adc
or
or
paddd
ljmp
repz
sbb
std
and
sgdtl
xor
xor
jmp
incl
adc
inc
das
sbb
or
inc
push
es
dec
adc
dec
sbb
push
dec
inc
xor
push
inc
cmp
and
push
push
and
jmp
cld
mov
loope
in
stc
stc
out
jmp
out
jmp
hlt
shr
add
aam
and
add
mul
or
pop
sub
repz
cmp
or
lock
ss
xor
ds
pop
sbb
pop
cmp
cs
or
das
sbb
xor
pop
sbb
pop
push
inc
pop
dec
and
pop
pop
data16
cmp
push
mov
ror
jmp
add
cmc
aam
cmc
in
call
cli
lock
out
rorl
in
rcll
pminub
xlat
sbb
add
add
pop
sbb
fiaddl
loopne
push
sbb
or
sub
xor
pop
repnz
push
sbb
xor
stc
or
sbb
das
aas
cmp
inc
pop
xor
pop
inc
das
daa
inc
dec
push
or
es
inc
sbb
xor
arpl
xor
pusha
and
cmp
pop
fprem
mov
call
xlat
iret
out
shl
idiv
loop
sti
filds
lret
jmp
add
adc
cmc
ljmp
and
pop
jecxz
and
sbb
negb
lar
adc
repnz
push
or
xor
add
and
push
or
sbb
inc
sub
dec
add
dec
adc
sub
push
aas
xor
and
inc
pop
bound
pusha
pop
dec
cmp
div
lret
rcl
out
into
rol
jecxz
loop
aad
loopne
or
in
enter
add
or
push
ljmp
add
sub
sub
comiss
add
or
adc
and
inc
adc
xor
add
sub
inc
sbb
dec
inc
push
push
es
xor
pop
and
cmp
dec
cmp
mov
fidivrs
mov
in
xlat
fucom
fmul
call
out
int3
sbb
adc
clc
loop
sbb
out
and
repnz
incb
in
xor
sub
aaa
cmc
push
push
adc
xor
or
add
dec
sbb
sbb
inc
inc
and
push
xor
dec
dec
adc
cmp
pop
cmp
cs
addr16
dec
pushw
push
call
loope
jecxz
stc
sar
ret
or
pop
in
out
adc
adc
out
rclb
push
pop
push
xlat
out
sbb
sbb
out
lock
negb
jecxz
and
sub
xor
out
push
and
sub
or
cmp
cli
xor
and
cld
cmp
std
add
inc
cmp
add
or
push
dec
push
or
sub
pop
dec
push
cmp
inc
inc
inc
pop
dec
and
mov
shll
add
ret
mov
add
or
fscale
ret
leave
incl
xlat
in
aam
rorb
bnd
loope
repnz
fstl
out
ljmp
and
sub
pop
das
das
out
lock
cli
sub
or
sub
sbb
sub
or
adc
aas
pop
and
push
aaa
push
push
pop
sub
dec
push
das
push
push
sbb
push
dec
cmp
imul
fadd
clc
mov
add
in
in
fildl
loop
rorl
cld
lock
out
or
push
or
adc
sbb
and
fstl
and
icebp
repz
cld
cs
push
and
cs
push
or
cs
xor
pop
xor
incb
push
std
adc
cmp
pop
pop
inc
das
dec
cmp
inc
sub
inc
sub
dec
dec
push
inc
dec
dec
das
pop
cmp
sub
aas
aas
push
inc
sub
stc
jmp
add
ret
rcr
add
cli
add
add
add
repnz
rcr
push
add
adc
and
loopne
push
repz
cs
adc
cld
adc
repnz
adc
adc
sub
pop
add
dec
inc
aas
cmp
push
adc
sub
xor
push
and
sub
dec
cmp
popa
arpl
gs
mul
cld
rcl
aad
rol
in
or
cld
add
or
hlt
out
call
jmp
jmp
icebp
cmc
jecxz
add
push
and
stc
sbb
paddsb
and
xor
cmp
xor
xor
or
and
push
das
inc
dec
cmp
inc
push
dec
adc
adc
xor
push
push
and
inc
cmp
inc
cmp
inc
inc
ret
enter
lret
idiv
iret
fcomip
add
jmp
sti
loop
adc
aad
pop
fdiv
rorl
jmp
ljmp
and
out
fcomip
jmp
push
lock
std
adc
xor
push
or
sti
std
or
or
xor
cmp
daa
inc
inc
sbb
and
dec
adc
adc
and
xor
xor
xor
ds
insl
sub
and
in
aam
cld
ljmp
ret
sti
cld
add
ljmp
lock
clc
shr
bnd
bndldx
sbb
sub
and
or
out
sub
sbb
xor
div
adc
push
xor
cmp
and
xor
and
and
or
inc
dec
push
sub
pop
xor
sbb
sbb
xor
and
push
pop
mov
cld
fcomp
mov
lret
out
lock
sarl
or
std
add
loopne
cmc
call
clc
adc
cld
ljmp
cmc
std
and
in
pop
jmp
cs
xor
pop
sub
or
adc
pop
repnz
add
inc
cmp
sbb
dec
inc
add
add
or
sub
sub
pop
xor
sbb
bound
cmp
xor
and
int3
leave
lods
xlat
sti
xlat
cli
in
mov
add
rolb
in
icebp
out
adc
sbb
pop
out
fcmovnbe
push
fildl
adc
sbb
in
or
sbb
cs
or
daa
testl
lock
sub
add
add
inc
xor
cmp
or
aas
or
inc
inc
and
pop
pop
daa
pop
cmp
arpl
inc
push
pop
es
mov
sarb
or
fiadds
lret
hlt
lret
hlt
lcall
in
jmp
push
ljmp
cld
cli
add
add
in
out
add
out
or
sub
push
stc
sbb
cmp
push
adc
and
add
push
push
and
sub
cmp
cmp
push
sub
sbb
inc
xor
inc
dec
insb
push
pop
inc
aad
hlt
mov
lock
fcmovnb
cmc
add
stc
add
aad
int
enter
int3
add
add
adc
sar
add
out
decb
adc
push
loop
stc
adc
adc
sub
add
daa
decb
push
or
daa
or
cs
sbb
and
sbb
sbb
es
cmp
or
dec
sub
inc
dec
daa
sbb
sub
push
pop
push
xor
cmp
xor
cs
pop
int3
cmc
ret
repnz
fdivr
add
cld
mov
xlat
fsubr
enter
push
jmp
push
add
out
in
repz
cli
sti
add
lock
ficomps
pop
sub
add
out
sub
adc
sbb
sub
sbb
inc
inc
cli
xor
and
pop
adc
and
cmp
cmp
xor
inc
and
sub
inc
push
push
dec
dec
pop
xor
popa
pop
and
fs
fcmovbe
out
ljmp
add
test
aad
jmp
in
adc
sbb
adc
adc
adc
es
adc
and
out
xor
repz
adc
sbb
cmp
pop
cld
sbb
add
xor
cmp
and
sbb
or
ds
xor
xor
adc
pop
push
dec
inc
dec
xor
pop
inc
xor
sub
dec
arpl
into
xlat
repnz
xlat
fdiv
mov
add
loope
loope
lret
push
out
lret
adc
shl
adc
loop
in
pop
adc
cmc
stc
fisttpl
sbb
and
and
in
sub
add
sub
xor
sbb
ss
idivb
inc
inc
and
cmp
or
dec
add
inc
dec
inc
es
cmp
xor
push
xor
xor
dec
ss
cmp
cmp
pop
mov
imul
aam
fsubrp
rcr
icebp
stc
shl
aam
out
jmp
leave
into
rolb
push
pop
pop
icebp
call
in
sbb
nop
sti
pop
sbb
in
cld
sub
filds
sub
in
sub
adc
and
pmaddwd
or
or
cmp
aaa
add
adc
and
sub
xor
adc
pop
cmp
pop
sub
cmp
and
dec
dec
dec
inc
pop
jmp
repz
fcom
mov
mov
out
loopne
jmp
aad
adc
add
or
ficoml
adc
lock
sbb
out
or
das
sub
pop
adc
sub
adc
sub
cli
cmp
xor
cmp
aaa
sbb
pop
push
pop
inc
and
sbb
cs
or
ss
cmp
push
cmp
pop
pop
cmp
and
push
dec
inc
cmp
sti
mov
std
std
sar
idiv
aad
loope
mov
repnz
int
in
iret
jmp
push
fstp
hlt
in
add
jmp
es
add
out
jmp
push
std
incb
testl
and
add
daa
inc
es
or
and
adc
adc
sub
inc
inc
push
dec
sbb
aaa
imul
out
out
lret
int3
fnstsw
fcomp
fdivr
fcmovu
add
decl
in
adc
or
or
cmc
lock
and
pop
mull
loop
add
clc
clc
sbb
or
sub
sub
cmp
cmp
xor
cmp
cmp
add
xor
and
sub
or
aas
adc
and
sbb
push
pop
pop
and
ss
and
pop
dec
in
jecxz
sti
out
icebp
lret
imul
fucom
in
cli
ljmp
std
push
or
jmp
sbb
adc
paddsb
in
push
daa
loope
sbb
jmp
sub
clc
in
call
repz
and
and
ss
add
xor
pop
push
xor
dec
daa
sub
push
pop
sub
sbb
aas
sbb
cmp
sub
mov
fldlg2
rcl
cli
cld
cld
lret
icebp
shl
cmc
fsincos
aad
fninit
jecxz
or
fsubr
rcll
loope
sbb
int
pop
aad
adc
icebp
div
and
notb
jmp
xor
std
in
sub
adc
or
aaa
adc
or
inc
adc
xor
inc
inc
sbb
dec
inc
xor
adc
inc
inc
inc
cmp
cmp
cmp
pusha
and
dec
bound
imul
repnz
in
mov
into
cli
neg
test
leave
ret
in
or
adc
sbb
lcall
cld
std
adc
push
add
sbb
loop
in
add
add
jmp
add
lock
and
es
cmp
das
xor
xor
aaa
sbb
dec
xor
sbb
aas
dec
push
dec
xor
cmp
push
xor
and
pop
pop
pop
pop
inc
inc
aaa
imul
jmp
out
jmp
mov
mov
add
fxam
out
repz
shr
or
loope
int3
in
pslld
notl
icebp
fisttpl
out
sbb
fists
cmc
adc
call
sub
sbb
add
xor
and
cli
cmp
ss
adc
adc
dec
sub
and
dec
push
push
push
inc
xor
push
cs
adc
cmp
sbb
sbb
inc
cmp
gs
inc
mov
ror
sti
fsubrp
mov
add
rcl
add
jecxz
loopne
out
dec
adc
in
jmp
out
cli
push
in
sbb
out
sub
and
cld
and
lock
push
es
or
cmp
xor
repnz
cmp
sbb
or
sub
adc
push
dec
or
push
dec
and
or
adc
pop
inc
dec
das
cmp
push
aas
push
sbb
pop
inc
xor
fs
pushw
mov
rcl
icebp
std
int
int3
fnop
neg
add
fabs
fcomp
dec
fucom
icebp
in
in
push
sbb
repz
jmp
sbb
sbb
adc
sbb
or
add
add
xor
and
sbb
push
cmp
xor
sbb
add
or
push
sbb
daa
sub
sub
and
dec
push
push
cs
sbb
ss
sub
push
inc
insb
jmp
mov
repz
lret
rolb
repnz
std
add
or
fmul
loope
enter
int3
push
or
adc
std
hlt
clc
add
loopne
add
ljmp
push
pop
add
and
add
call
and
idivb
sbb
cld
inc
cmp
pop
and
and
aas
sub
xor
and
ds
inc
sbb
popa
inc
pop
inc
sub
pop
cmp
shr
mov
fadd
push
push
add
or
jecxz
ret
fiadds
push
or
add
xlat
push
push
fucomp
fucomi
adc
adc
clc
fcomp
ficompl
sbb
or
in
out
sub
out
and
xor
pop
or
repnz
cmp
or
aaa
inc
inc
sbb
pop
add
add
sub
push
dec
push
inc
xor
inc
xor
dec
aas
push
adc
xor
cs
xor
push
xor
ds
gs
imul
xlat
aam
fcmovnu
fucomip
out
cld
lds
pop
int3
loopne
push
jmp
adc
out
rcrl
adc
sbb
push
loope
pop
cld
div
repz
in
daa
push
ljmp
add
cmp
and
sub
pop
es
add
aas
add
sbb
dec
sbb
or
pop
dec
es
dec
sbb
das
inc
sbb
fs
pusha
push
imul
inc
xor
mov
fadd
aam
push
test
rcr
fdivr
add
aad
jmp
or
hlt
rcl
in
and
push
psubw
add
sub
es
daa
icebp
pop
add
adc
sub
add
push
push
add
sub
sub
aas
sub
xor
and
sbb
dec
and
fs
cmp
sub
cmp
dec
in
out
fcomi
out
out
add
mov
add
cmc
hlt
or
pop
add
add
pop
or
jmp
fscale
fdivrp
and
sbb
and
sbb
and
jmp
aaa
cmc
xor
xor
sub
cli
stc
sbb
inc
inc
push
xor
sbb
sub
dec
cmp
dec
cmp
sub
push
cmp
inc
push
and
pop
shl
out
clc
leave
xlat
rcl
int3
mov
xlat
shl
ljmp
loopne
push
into
or
adc
rclb
repz
adc
icebp
adc
stc
sub
cld
das
in
adc
pop
std
out
es
push
and
sbb
push
sbb
inc
sbb
inc
pop
and
add
dec
xor
push
and
adc
inc
push
ss
sub
pop
sub
pop
popa
push
pusha
aaa
daa
pop
cmp
clc
iret
mov
icebp
sti
cmc
repnz
movb
cmc
leave
sti
int
lret
in
push
in
or
or
jmp
fucomp
in
negb
icebp
add
push
and
add
sbb
sub
and
push
repnz
sub
inc
sub
and
das
adc
sbb
dec
and
sub
dec
and
push
aaa
pop
das
sbb
sub
sbb
cmp
cmp
arpl
sub
and
cli
lret
jmp
bnd
or
add
cli
xlat
loop
add
cld
repnz
cmc
adc
push
or
in
testl
loope
repz
paddd
or
xor
xor
icebp
div
add
sub
adc
aas
adc
cmp
or
pop
dec
sbb
push
adc
sub
cmp
cs
aas
inc
inc
arpl
inc
push
cli
fnsave
fnstsw
ljmp
jmp
dec
repz
sbb
fldpi
in
add
or
adc
icebp
jecxz
or
and
loope
out
sti
pop
icebp
and
and
lock
sti
cmp
push
push
add
xor
add
or
sub
dec
orps
dec
or
inc
sub
push
inc
aas
inc
cmp
daa
cmp
insb
push
ret
jmp
call
loopne
sar
mov
mul
rolb
hlt
push
or
jecxz
loopne
filds
push
add
stc
lock
sbb
or
sbb
and
or
add
out
and
push
xor
cmc
xor
sub
cmp
adc
inc
adc
xor
xor
and
add
or
daa
sub
adc
sub
inc
inc
cs
pop
sub
xor
pop
push
sbb
dec
inc
gs
bound
outsl
in
xlat
fsincos
loopne
aad
sar
sti
sti
add
out
add
adc
str
repz
repnz
add
lock
loop
push
adc
std
adc
or
sub
sub
add
add
das
sub
sbb
std
xor
inc
or
sub
sbb
and
push
dec
dec
sub
sub
push
dec
pop
sub
cmp
xor
inc
push
push
arpl
sub
int
sarl
sti
in
icebp
in
out
mov
jecxz
or
leave
adc
int3
jecxz
push
repnz
sbb
idiv
jmp
adc
adc
add
in
and
clts
and
out
pop
add
stc
sub
sub
sub
das
inc
and
sub
sbb
inc
push
xor
pop
cmp
das
push
dec
cmp
cmp
pop
cmp
cmp
cmp
bound
in
in
mov
int3
add
mov
loopne
or
or
in
jmp
add
repz
in
call
in
or
adc
sbb
in
sbb
and
clc
in
sbb
or
push
sbb
sbb
sub
std
add
and
es
and
sub
xor
inc
push
pop
push
push
pop
push
inc
sbb
pop
es
push
aas
pop
imul
stc
shl
lock
clc
lock
add
in
vshufps
out
loope
out
adc
rclb
repnz
std
cmc
xlat
pop
add
adc
add
add
idiv
add
add
adc
xor
add
xor
std
or
sbb
add
sbb
sbb
dec
es
xor
cmp
push
cmp
and
addr16
sub
loope
mov
repz
lret
fsubp
into
shl
roll
incl
add
jmp
rcl
or
psllw
or
add
cli
stc
daa
cmc
lock
call
cli
adc
std
incl
add
or
add
sbb
or
and
add
aas
xor
pop
sbb
dec
dec
ds
daa
inc
pop
inc
push
ss
sbb
xor
dec
aas
data16
bound
inc
popa
xor
sub
pop
call
jmp
shl
stc
cli
mov
pop
or
lret
incl
icebp
rolb
sbb
pop
ljmp
clc
add
cli
cli
and
or
cli
std
pop
push
and
or
testl
aas
repz
cmp
adc
sbb
inc
push
and
sbb
push
and
inc
dec
cs
and
push
inc
pop
sub
cmp
aaa
cmp
pop
pop
inc
and
pop
cmp
repz
aad
mov
xlat
fsubp
sti
add
sti
fsubrp
push
fmull
fisttps
jmp
add
not
out
and
sbb
adc
adc
jecxz
sub
sub
add
aaa
sub
sbb
cmp
sbb
sbb
cmp
or
sbb
or
sub
cmp
pop
cmp
and
inc
push
push
ss
sub
imul
cli
add
aad
fcmovb
loope
loope
rol
fiadds
add
or
shl
push
iret
in
in
out
ficoml
lock
stc
sbb
stc
add
stc
das
in
in
xor
adc
cmp
or
adc
inc
std
cmp
inc
add
and
pop
sbb
daa
adc
dec
dec
inc
push
dec
sub
cmp
adc
sub
xor
arpl
inc
insl
out
repnz
enter
add
int3
sti
mov
add
xlat
or
repnz
jmp
add
sbb
loopne
aam
sbb
repnz
in
add
and
add
add
repnz
adc
sub
stc
sub
sbb
sbb
inc
cmp
push
and
dec
dec
xor
cmp
dec
pop
push
cmp
xor
and
xor
imul
mov
aad
mov
in
or
int
stc
loope
add
call
ljmp
adc
stc
in
fsubp
push
sti
and
sub
sbb
cli
repnz
testl
pop
std
xor
adc
adc
or
push
and
inc
aas
sbb
inc
dec
dec
cmp
sub
sbb
das
and
push
pop
inc
dec
pop
insl
sub
imul
lods
int
out
cmc
mov
aad
into
add
rcr
stc
shl
or
push
int
rorl
cmc
int
imul
adc
adc
loope
and
sti
sub
sbb
clc
or
es
cmc
and
daa
or
xor
and
notb
adc
and
sub
pop
inc
das
adc
inc
cmp
daa
das
dec
das
xor
and
daa
inc
and
out
in
mov
repz
ljmp
cli
ljmp
enter
pop
adc
or
out
clc
call
and
cld
add
and
adc
mul
sbb
or
cld
repz
xor
sub
cmp
stc
pop
repnz
push
adc
inc
inc
and
dec
sub
and
or
xor
sbb
push
dec
sbb
dec
cmp
push
cmp
sub
push
arpl
aas
pop
pop
ret
in
cmc
rol
sti
out
cli
in
fcomip
mov
add
in
loop
in
pop
jecxz
roll
into
in
sbb
push
repz
repz
and
cli
adc
fstpl
add
repz
or
push
jmp
adc
hlt
sbb
imulb
cmp
sub
add
and
cmp
sbb
sbb
inc
xor
pop
push
xor
sub
cmp
push
dec
pop
and
pop
cmp
fxam
fcomp
in
clc
mov
out
loopne
in
cli
iret
push
or
lret
std
ret
pop
add
por
aam
in
add
or
fldl
push
in
or
hlt
adc
loopne
push
lock
add
or
push
xor
push
sbb
negl
pop
push
inc
push
cmp
ds
inc
sub
sub
es
sub
cmovge
push
cs
pop
xor
aas
pop
popa
xor
and
bound
imul
xor
leave
fdivl
mov
cmc
add
cli
int3
ret
out
std
ret
add
push
or
call
loopne
pmaxsw
std
sbb
filds
cli
sub
out
sbb
cli
sub
icebp
or
cmc
adc
or
sbb
cmp
inc
adc
inc
adc
and
and
xor
and
adc
pop
xor
xor
sub
inc
outsb
cmp
inc
stos
aam
mov
shr
cld
shl
les
enter
sti
or
out
or
add
pop
add
adc
add
repnz
jecxz
adc
or
add
or
out
daa
sub
xor
pop
push
or
sub
add
xor
and
cld
cmp
and
and
inc
adc
push
xor
xor
sub
ss
and
outsl
dec
pop
into
fcmovnb
std
out
cmc
mov
in
flds
add
call
in
in
lock
ljmp
repz
adc
hlt
xlat
fistl
call
in
and
std
sbb
hlt
sub
or
repnz
cmc
cmc
push
adc
inc
sbb
cmp
adc
es
push
dec
cmp
push
daa
adc
sbb
inc
sub
sbb
push
and
push
sbb
dec
loope
mov
repz
mov
xlat
pop
jmp
add
jmp
or
iret
cmc
aad
adc
es
ftst
pop
std
and
add
push
sbb
and
std
pop
pop
add
add
adc
xor
or
xor
incl
sub
xor
daa
aaa
xor
add
ds
sub
push
sub
dec
ss
dec
push
inc
and
push
inc
push
inc
inc
data16
sub
daa
outsl
inc
dec
out
mov
test
fstp
mov
pop
add
fsubr
in
sti
in
cmc
int
iret
adc
in
pop
cmc
or
fucomi
cld
in
daa
add
or
add
and
or
and
adc
sub
adc
and
inc
inc
cmp
inc
sub
dec
and
dec
sbb
xor
inc
push
ss
sub
cmp
cmp
inc
pop
imul
dec
push
leave
test
lret
aam
out
add
mov
sti
fucomi
add
in
shl
imul
add
pop
sbb
rcrb
cli
cmc
cli
adc
jecxz
out
sbb
pop
sub
sub
add
xor
add
sbb
adc
sub
add
adc
sbb
cmp
dec
dec
dec
add
inc
push
and
dec
sbb
daa
dec
ds
pop
push
sbb
pop
ds
cmp
rcl
sti
out
call
mov
not
call
lret
loopne
pop
shl
jmp
stc
div
cld
sbb
sbb
or
adc
or
sbb
sti
pop
sub
pop
sub
call
sub
and
cmc
or
and
add
xor
cmp
sub
aas
xor
dec
adc
push
cmp
sub
push
sbb
pop
push
xor
and
addr16
inc
outsb
in
mov
sti
clc
cld
sar
mov
out
lret
fdivr
add
add
iret
or
hlt
in
or
lock
lock
and
imul
and
out
add
idiv
ljmp
daa
and
es
xor
std
push
cli
inc
add
and
pop
sub
push
xor
inc
xor
and
inc
dec
pop
inc
inc
xor
aaa
es
pop
xor
aad
fnop
into
fiadds
out
mov
push
stc
or
ror
into
incb
push
leave
repnz
sbb
div
pop
std
repnz
adc
sti
and
pop
out
clc
testb
push
repnz
and
or
or
xor
lcall
add
sbb
dec
or
inc
push
pop
dec
cmp
dec
ds
pop
dec
adc
dec
sbb
and
fs
inc
inc
ds
cmp
bound
out
jmp
mov
shl
in
mov
loopne
or
push
jecxz
push
push
or
hlt
add
icebp
loop
add
pop
loop
add
out
pop
xor
xor
unpckhps
out
idivb
cli
or
cmp
push
sbb
pop
sub
push
aas
add
sbb
xor
inc
sbb
dec
and
xor
inc
bound
imul
jmp
fucom
shl
aam
in
loop
xlat
leave
rol
or
shl
enter
adc
call
stc
adc
push
sbb
sub
out
out
add
hlt
sub
sbb
pop
pop
cmc
or
es
sbb
ljmp
and
inc
sub
or
and
das
dec
sbb
xor
pop
inc
pop
cmp
push
inc
xor
inc
mov
aad
enter
jmp
clc
in
add
ret
loop
repz
add
adc
out
stc
sbb
aad
cld
sti
notl
pop
cld
add
pop
jecxz
idiv
jmp
or
xor
and
push
or
and
pop
aaa
das
cli
cmp
inc
inc
or
cmp
push
daa
xor
push
dec
inc
das
and
pop
adc
xor
cmp
pop
sbb
push
push
push
cli
aad
out
mov
sar
f2xm1
ljmp
in
or
adc
jmp
repz
fsubr
clc
or
or
repnz
repnz
sbb
std
add
xor
adc
adc
cmc
sbb
adc
xor
add
add
or
inc
sbb
dec
dec
and
sub
adc
push
dec
xor
bound
xor
push
and
clc
leave
aad
lret
rcl
int
out
aad
ret
in
add
or
add
stc
adc
jmp
push
sbb
adc
add
decl
sub
pop
in
out
cmc
pop
add
cld
sbb
aas
cld
push
inc
and
xor
inc
dec
sub
xor
and
push
push
daa
dec
pop
sub
push
es
pusha
pop
cmp
cmp
inc
inc
push
inc
push
std
mov
cli
cli
loopne
std
leave
in
loop
add
ljmp
or
out
adc
fdiv
adc
sbb
push
sbb
cld
add
sbb
jmp
out
psllq
stc
or
or
sbb
adc
aaa
inc
std
xor
and
or
and
push
dec
and
xor
dec
sub
xor
inc
adc
dec
sub
push
cmp
ds
push
inc
dec
insl
dec
leave
ror
repnz
mov
ret
rcl
loopne
aad
ret
stc
cli
jecxz
jmp
pop
sbb
add
into
out
adc
sbb
cmc
adc
add
and
sbb
xor
sbb
or
icebp
hlt
sbb
push
inc
cmp
aaa
inc
xor
adc
or
aaa
or
inc
cs
inc
dec
inc
push
xor
dec
push
das
dec
dec
ds
inc
sbb
bound
inc
inc
and
daa
pop
and
popa
repnz
mov
aam
into
mov
lock
testl
in
adc
testl
sbb
sub
sub
sbb
add
repz
push
testl
stc
cld
xor
cmp
add
sbb
inc
adc
and
dec
cmp
inc
dec
and
xor
dec
sub
cmp
sbb
inc
sub
dec
xor
cmp
inc
pop
inc
pop
cs
fldt
add
aam
add
loopne
add
aad
push
stc
in
ljmp
jecxz
add
sbb
sbb
push
sbb
or
out
idiv
sub
daa
es
repnz
add
movlhps
aas
daa
sbb
ss
push
or
pop
sbb
sbb
xor
and
dec
push
cmp
pop
pusha
push
das
xor
pop
push
inc
pop
sub
sub
out
fdivr
int3
int3
enter
fidivrs
rcr
fmull
in
add
adc
add
shr
adc
push
push
fisttps
out
add
add
mul
loopne
sbb
repnz
or
aaa
icebp
adc
push
es
xor
sbb
dec
and
xor
ds
sbb
and
pop
dec
cmp
and
and
pop
aaa
pop
and
shr
aam
jmp
aam
test
fiaddl
out
or
ret
repz
add
ljmp
loop
add
es
mul
or
cld
and
sbb
and
or
push
repz
cmp
xor
adc
sbb
sub
incb
sbb
cs
and
cmp
dec
xor
pop
cmp
inc
cmp
inc
pop
inc
dec
cmp
push
mov
out
shr
ret
filds
xlat
les
cld
jecxz
jecxz
loopne
cmc
adc
shl
sbb
adc
repnz
xlat
hlt
push
idiv
pop
paddusw
sti
repz
push
out
in
add
sub
lock
daa
testl
xor
sti
negl
inc
adc
dec
pop
sub
dec
and
push
ss
cs
dec
sub
pop
dec
inc
xor
cmp
pop
push
push
mov
fucom
mov
loope
fstpt
ret
push
jmp
aam
jecxz
or
adc
clc
in
sti
add
or
push
or
sbb
testl
pop
and
adc
adc
inc
cmc
sbb
and
aaa
dec
inc
sub
inc
inc
ds
sbb
dec
push
sub
cmp
push
push
cmp
inc
xor
pop
inc
cmp
cs
in
out
cli
int3
std
mov
stc
in
fprem
rolb
or
cld
cld
lret
lret
or
or
cld
push
in
jmp
jecxz
sti
idiv
negl
testb
push
sbb
xor
add
sub
clc
push
cld
div
or
sub
and
pop
sub
cs
adc
sub
cmp
bound
push
cmp
pusha
and
es
leave
sti
in
hlt
mov
repz
shr
jecxz
pop
repnz
add
add
jmp
cmc
notl
rcll
or
stc
sbb
fcomi
clc
fisubs
ljmp
sub
in
xor
sbb
add
cmp
cmp
xor
cmp
dec
sbb
and
sub
inc
cmp
pop
push
dec
fs
and
aas
pop
insb
jo
jmp
jmp
std
std
xlat
in
push
aam
jecxz
fildl
fcomp
out
in
icebp
pop
lock
adc
testb
stc
cli
out
sbb
cld
div
icebp
loope
pop
in
adc
ljmp
sub
xor
sbb
imulb
cmp
inc
xor
push
push
xor
aaa
xor
inc
dec
sub
dec
xor
xor
pop
aaa
cmp
xor
cmp
ss
inc
dec
out
lods
repz
jecxz
idivl
fsincos
add
std
iret
or
rolb
or
add
shl
push
cld
or
sbb
testb
adc
add
testl
out
sub
adc
adc
or
sub
inc
cmp
pop
aaa
inc
xor
inc
sub
cmp
inc
sub
dec
and
push
cmp
daa
dec
adc
pop
push
pop
popa
pop
inc
daa
sub
pusha
arpl
fcmovu
fdivr
mov
roll
loopne
filds
jmp
add
lret
fimuls
or
out
adc
psubd
adc
sbb
cmc
repnz
sbb
adc
ljmp
sub
and
adc
sbb
add
sub
add
and
daa
sbb
sub
push
and
xor
inc
and
das
cmp
arpl
dec
and
cmp
stc
ljmp
cli
push
mov
leave
out
call
int3
call
loop
sbb
or
in
fisttpll
adc
and
in
push
and
std
pop
push
or
or
and
out
jmp
daa
adc
cmp
sbb
stc
adc
push
adc
dec
add
or
inc
dec
sub
sbb
sub
inc
xor
inc
inc
sub
xor
pop
push
inc
push
and
inc
and
sti
into
repnz
iret
sarb
clc
cmc
add
int3
out
add
aam
adc
push
sbb
hlt
stc
sbb
add
jecxz
std
hlt
add
cld
sub
add
xor
and
div
xor
repz
pop
xor
ss
das
pop
sbb
sbb
inc
daa
sub
and
dec
sbb
push
pop
push
cs
cmp
cmp
inc
push
das
fs
iret
lret
mov
or
cli
xlat
std
sti
adc
add
lret
push
shl
push
add
push
pop
add
clc
adc
add
das
clc
add
sub
and
push
cmp
bndldx
das
or
cmp
inc
xor
ds
cmp
dec
push
xor
aas
xor
and
dec
cmp
pop
sbb
and
xor
inc
dec
push
push
inc
dec
push
clc
icebp
sti
repz
hlt
mov
fnclex
std
lock
mul
std
fimuls
enter
out
int3
loop
add
ud2
out
push
or
sti
icebp
sbb
std
in
and
add
add
repnz
adc
stc
das
sbb
daa
xor
inc
xor
and
cmp
push
cmp
sbb
and
push
inc
sub
sub
dec
pop
sub
pop
dec
aas
and
push
and
pop
inc
pop
cmp
in
lret
cld
fnstcw
shl
sti
leave
or
in
jecxz
in
shr
pop
cld
repz
sbb
add
adc
sbb
sti
add
adc
daa
ljmp
icebp
icebp
push
xor
aaa
cmp
cmp
and
adc
or
xor
and
cmp
inc
daa
dec
dec
inc
adc
push
dec
push
pusha
dec
cmp
xor
insb
sub
outsl
sub
xlat
fdiv
cli
aam
ret
mov
in
loopne
fcmovb
cld
ljmp
shl
jmp
xlat
and
and
adc
add
sub
xor
and
or
push
cmp
cs
daa
cmp
cmp
inc
and
and
dec
adc
adc
pusha
dec
inc
xor
push
and
push
push
sub
insb
enter
fcmovnu
in
mov
in
mov
or
or
adc
in
adc
push
push
rcr
add
out
sbb
add
loop
fsub
lock
div
sbb
push
add
mulb
add
and
pop
sbb
and
add
and
decl
and
adc
push
and
sbb
push
sbb
sbb
cmp
pop
pop
and
fs
dec
cmp
dec
imul
xlat
mov
fiadds
or
out
or
or
aam
add
adc
fucomi
clc
add
sbb
repnz
adc
add
sub
or
pop
add
adc
or
in
and
stc
sbb
cmp
xor
and
aas
inc
or
dec
and
inc
dec
and
pop
cmp
push
xor
sbb
inc
push
gs
dec
pop
cs
push
repz
mov
cli
fiaddl
repnz
in
aad
fdivr
leave
jmp
push
lret
lock
jecxz
sbb
fcmovbe
push
in
cmc
fldl
adc
sbb
and
cli
xor
adc
sub
cs
or
add
and
and
es
and
dec
push
inc
or
and
sbb
sbb
push
xor
ds
fs
and
cmp
repnz
enter
mov
rcr
add
push
frndint
add
lret
loopne
fimuls
in
adc
sbb
aad
icebp
repnz
fstl
pop
hlt
repz
pop
pop
adc
and
stc
and
push
sub
add
sub
cli
sbb
adc
and
add
adc
or
push
daa
or
sub
sub
push
sub
cmp
push
dec
das
xor
fs
xor
insb
sub
mov
call
clc
loope
int
out
not
in
fucomi
out
add
loopne
adc
rcr
or
sbb
fstp
ljmp
sbb
ljmp
xor
pushl
pop
sub
testb
cld
adc
ds
pop
pop
sbb
dec
sbb
cmp
push
xor
es
sbb
pusha
inc
xor
daa
xor
daa
pusha
pop
outsb
data16
sar
repnz
mov
rcr
clc
rcr
cld
or
fucomi
stc
enter
or
add
aad
push
push
jmp
and
fisubs
pop
add
sub
and
add
in
repnz
and
or
push
or
cmp
sub
sub
daa
xor
add
or
sub
inc
adc
cmp
es
cmp
sbb
pop
sbb
popa
xor
cmp
int
rcl
mov
xlat
enter
add
sti
cld
fcom
leave
out
iret
ljmp
add
in
fisttpl
out
sbb
sbb
and
add
push
ljmp
or
in
push
daa
aaa
cmc
and
or
adc
outsb
xor
imul
xor
aaa
cmp
jb
xor
gs
xor
add
add
out
dec
add
add
add
add
add
add
jl
add
push
add
dec
gs
xor
cmp
cmp
je
jo
cmp
aaa
cmp
xor
aaa
ss
jb
popa
push
outsl
outsb
xor
xor
outsb
ja
jb
xor
insb
imul
aaa
cmp
jo
popa
jne
xor
xor
imul
cmp
cmp
aaa
xor
cmp
jb
xor
jae
jne
cmp
xor
inc
inc
add
outsb
inc
add
imul
xchg
rorb
push
or
or
sbb
inc
or
push
or
or
or
or
sbb
or
sti
idiv
adc
or
sbb
inc
or
push
or
or
or
or
sbb
or
sub
sub
or
or
pop
or
or
adc
or
or
negb
negl
dec
add
push
cmp
pop
or
or
pop
or
or
adc
or
or
or
dec
testl
push
imul
pop
or
or
push
or
adc
or
or
or
cmp
cmp
insl
add
push
pop
push
pop
pop
or
or
sbb
dec
or
or
or
or
imul
pop
pop
add
push
mov
pop
or
or
sbb
push
or
or
or
or
pop
negl
add
push
jp
jnp
or
or
sbb
pop
or
or
or
testb
jp
stos
push
stos
pop
or
or
sbb
pop
or
or
or
or
jnp
jl
lods
add
push
lcall
or
aaa
or
or
or
or
or
or
stos
imull
lret
push
mov
push
or
or
or
or
push
or
adc
or
and
test
int3
pop
mov
push
jmp
or
add
push
add
push
add
inc
add
push
add
cltd
inc
add
fwait
inc
add
insl
inc
add
inc
add
push
add
imul
xor
ljmp
cmpsb
jmp
push
add
insl
inc
add
insl
inc
add
insl
inc
add
imul
push
inc
add
imul
outsb
inc
add
pop
cmpsl
in
push
add
nop
and
add
inc
add
test
inc
add
xor
xor
mov
jne
rolb
push
add
daa
lods
psubq
test
adc
call
mov
adc
jnp
movsl
sbb
dec
mov
sbb
and
push
inc
add
xor
cmp
pop
cmpsl
call
add
add
push
push
or
add
add
mov
fiadds
xchg
sub
add
add
cmpsb
xchg
pop
add
mov
or
or
or
or
sbb
or
sbb
mov
stos
push
fwait
adc
add
add
add
inc
add
add
add
jb
jb
imul
outsb
add
add
add
add
jae
add
add
jbe
add
popa
add
add
imul
insb
add
jae
pop
add
insb
add
jne
insl
add
pop
add
add
data16
jb
insl
add
jb
pop
add
add
add
add
js
add
add
add
inc
je
xor
xor
xor
add
push
push
pop
and
dec
inc
add
ret
add
sbb
dec
loop
add
fidivrs
aad
ljmp
sbbl
inc
shrb
test
add
add
xor
xor
xor
add
add
inc
cmp
dec
inc
and
cmp
xor
and
xor
cmp
and
xor
cmp
add
xor
xor
cmp
cmp
aaa
xor
xor
cmp
xor
xor
add
add
xor
aaa
cmp
xor
xor
xor
add
add
xor
add
loop
pushl
dec
or
repnz
je
jo
das
das
addr16
imul
jb
ja
gs
data16
arpl
outsb
jo,pn
je
outsw
insb
insb
outsl
ja
popa
addr16
add
add
xor
aaa
cmp
add
xor
xor
xor
xor
cmp
xor
cmp
aaa
add
add
add
add
add
aaa
add
add
add
xor
xor
xor
add
cmp
xor
cmp
cmp
xor
xor
cmp
pop
add
add
xor
add
add
add
add
add
add
xor
add
add
ss
add
aaa
or
cmp
aaa
or
or
or
or
or
add
or
or
or
or
dec
or
or
or
or
or
add
dec
or
or
or
sub
cmp
xor
or
add
add
popw
inc
data16
data16
xchg
cmpsw
xchg
data16
data16
out
xlat
mulw
data16
sbb
push
push
dec
dec
push
push
push
push
dec
pushw
ss
inc
pop
xchg
pop
xor
push
sbb
sub
xorb
pop
lret
xchg
xor
sbb
sub
push
xor
xchg
inc
mov
js
mov
cmpb
add
add
add
and
add
adc
add
dec
add
mov
add
sub
add
add
inc
loop
add
and
mov
xor
inc
add
imul
lock
inc
imul
aaa
ss
popa
insl
ss
cmp
inc
gs
jo
jb
xor
imul
aaa
aaa
dec
outsl
imul
xor
jo
gs
outsl
outsb
cmp
xor
popa
outsb
je
cmp
insl
jne
jae
add
add
insl
imul
aaa
popa
insl
bound
jae
gs
aaa
ss
xor
inc
data16
gs
imul
imul
xor
xor
xor
cmp
xor
jb
xor
xor
dec
popa
jb
aaa
cmp
xor
popa
jne
xor
ss
xor
imul
bound
cmp
cmp
xor
push
jo
arpl
xor
addr16
popa
js
outsb
push
outsb
jae
fs
xor
add
push
jne
xor
xor
popa
imul
add
arpl
xor
xor
dec
imul
je
cmp
xor
add
jns
outsb
imul
imul
popa
jae
add
cmp
fs
xor
push
imul
ss
xor
js
cmp
xor
xor
add
jo
jb
xor
insb
popa
jns
add
dec
imul
xor
xor
xor
add
gs
cmp
ss
aaa
xor
xor
outsl
ja
xor
insb
imul
aaa
xor
outsl
imul
xor
insb
popa
js
aaa
cmp
dec
popa
insb
insb
cmp
jae
je
xor
jb
addr16
xor
xor
add
gs
popa
insl
imul
gs
gs
xor
add
push
gs
jb
imul
cmp
insb
jo
xor
add
push
imul
push
xor
add
inc
outsb
jne
xor
xor
xor
xor
xor
add
inc
push
xor
cmp
insb
outsl
je
inc
xor
cmp
cmp
je
jne
popa
cmp
gs
ss
xor
xor
xor
cmp
xor
xor
push
jne
push
xor
outsb
xor
imul
xor
xor
push
imul
xor
add
add
xor
outsl
bound
addr16
jo
xor
xor
outsl
jo
aaa
ss
xor
insl
jo
xor
xor
je
outsl
je
je
xor
cmp
cmp
insl
imul
xor
inc
jne
jae
xor
outsb
imul
xor
bound
xor
ss
jle
mov
outsb
jns
inc
cs
jp
aam
add
pop
iret
mov
test
std
jge
mov
jp
pop
mov
sub
cmp
mov
mov
mov
movl
dec
or
adc
mov
inc
xor
lcall
mov
sub
lods
inc
loope
testl
mov
lds
loope
mov
adc
cmp
mov
dec
or
adc
outsl
mov
test
test
lahf
lods
mov
cmpsb
rorb
push
sub
scas
sbb
subb
cmp
lahf
aaa
pop
jb
fcmovnu
add
pusha
adc
jnp
pop
push
cs
addr16
pop
movb
outsb
adcl
out
icebp
and
or
bound
jne
shlb
inc
aam
push
popf
cs
lods
xchg
or
rcrl
pop
pop
dec
jns
movsl
ss
mov
adc
test
test
mov
sti
xor
out
out
jnp
lahf
scas
lcall
xor
xor
cmp
jo
dec
outsb
cwtl
add
int
mov
scas
jo
icebp
jno
xorb
push
loope
mov
push
ror
push
add
sbb
mov
leave
pop
mov
aaa
icebp
inc
add
xor
fisttpll
sbbb
loop
jnp
ja
mov
dec
pop
push
push
rcrb
daa
adc
cmp
pop
sub
lea
dec
add
fiadds
dec
cmpsb
out
aam
sbb
lret
sub
push
pop
fnstenv
or
daa
pop
outsb
lahf
pop
sbb
jnp
hlt
mov
add
jp
inc
cs
or
out
push
and
mov
loop
mov
arpl
ror
fistps
jecxz
std
pop
nop
jnp
daa
jns
scas
bound
cmp
ret
cmp
push
cmc
xchg
mov
incl
js
out
hlt
adc
cmp
jecxz
mov
xor
fsubp
iret
les
mov
out
push
push
or
dec
data16
mov
dec
xchg
shrb
out
lea
std
and
pop
bound
fisubrs
mov
sub
pushf
imul
das
or
mov
add
pop
jo
enter
inc
sub
push
jb
mov
mov
dec
mov
push
stos
cmp
xchg
xor
adc
loop
dec
dec
pop
pop
inc
cmp
jmp
inc
insl
outsb
pop
mov
pop
xor
insb
testl
xchg
or
dec
cbtw
inc
mov
sub
loopne
fstl
add
rcl
jnp
xlat
mov
mov
jno
movsl
mov
or
jae
call
addr16
or
add
adc
mov
or
xor
cmp
jbe
iret
cmpsl
nop
mov
adc
or
das
clc
stos
xchg
std
jmp
into
cli
xchg
loope
cmp
dec
pop
imul
mov
leave
test
aad
je
add
loop
in
js
movsb
icebp
inc
out
lods
repz
inc
sbb
jne
scas
jp
pop
or
jle
insl
pop
jle
mov
sub
insl
cld
and
xchg
sahf
adc
sbb
xchg
fildl
adc
fwait
and
mov
adc
cmp
xchg
jp
xchg
mov
add
leave
sbb
rcll
lods
mov
lods
mov
jle
and
push
psllq
loopne
dec
push
lea
and
hlt
jecxz
inc
cmp
pop
add
add
leave
out
dec
add
add
cmp
add
add
add
add
add
add
jp
add
jp
add
jp
add
push
add
dec
jp
add
add
insl
popa
jae
jbe
cs
add
dec
outsb
outsw
inc
gs
gs
inc
inc
pop
inc
pop
push
jbe
jb
data16
ja
inc
inc
aaa
add
jp
add
add
call
add
add
add
add
add
cmpsl
add
or
add
insb
jl
add
add
adc
add
ljmp
add
jnp
add
add
pop
jnp
add
add
cmpb
mov
add
add
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
add
add
add
push
jl
add
add
add
add
xchg
xchg
jl
add
jl
add
add
fidivrs
add
add
data16
imul
outsb
outsl
ja
gs
popa
addr16
add
sub
inc
gs
outsl
arpl
add
and
inc
gs
gs
je
jo
imul
and
push
imul
push
arpl
inc
add
xor
inc
gs
arpl
dec
outsb
outsw
add
add
inc
push
jo
popa
dec
jne
gs
arpl
push
push
inc
push
xor
cs
insb
add
mov
gs
insb
imul
arpl
add
je
je
gs
push
outsl
fs
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
popa
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
dec
popa
jns
jne
add
jb
popa
je
push
outsl
insb
imul
add
push
je
arpl
bound
arpl
push
add
gs
je
push
outsl
jne
fs
arpl
outsb
add
inc
inc
dec
xor
cs
insb
add
inc
jne
jb
outsb
je
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
adc
push
je
inc
push
add
push
jb
inc
gs
popa
jb
inc
add
push
je
push
inc
jb
inc
add
push
add
je
inc
gs
jb
jae
add
dec
add
jb
outsl
dec
outsb
je
add
push
popa
je
dec
jae
jb
imul
add
je
dec
jae
popa
insl
gs
outsl
outsl
je
add
add
jb
inc
push
push
dec
dec
push
inc
push
dec
cs
insb
add
inc
push
xchg
push
mov
cmp
or
xchg
dec
cmp
add
add
pop
push
outsl
jb
insb
imul
gs
jo,pn
bound
mov
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
jp
inc
add
inc
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
loop
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
xchg
std
cmpb
inc
xchg
or
aas
cmp
mov
add
das
out
ret
push
add
cmp
inc
inc
add
adc
inc
and
cs
dec
xor
and
inc
sub
bound
aad
fstp
loope
in
add
in
stc
imul
loopne
out
jmp
rorb
pop
or
imul
sti
sbb
hlt
jmp
push
fisubl
cmc
fistpl
pop
sbb
loop
loope
or
cld
push
in
or
add
add
sbb
cmp
sub
aaa
and
inc
cmp
dec
or
inc
inc
dec
or
push
or
push
pop
inc
dec
dec
dec
cmp
xor
push
aaa
pop
popa
pop
push
aas
push
inc
das
lret
rcr
jmp
add
add
loopne
loopne
jmp
call
leave
int
in
jecxz
icebp
pop
rcr
adc
repz
sbb
and
call
add
in
hlt
out
and
sub
cmp
adc
push
sbb
getsec
inc
add
inc
aaa
pop
or
dec
cmp
and
inc
adc
dec
inc
cmp
push
xor
pop
aaa
dec
push
xor
inc
pop
daa
pusha
push
pop
cmp
cmp
mov
shl
leave
aam
rcl
cli
cli
out
int
clc
or
fadd
cli
cld
out
or
icebp
lret
shl
icebp
sti
in
push
push
in
sbb
testl
or
sub
pop
xor
sub
and
negb
std
std
ds
push
and
and
or
or
cmp
cmp
push
dec
adc
cmp
das
pop
xor
pop
cmp
pop
cmp
pusha
out
ret
mov
loope
mov
repz
pop
xlat
idiv
fcomip
call
loope
sbb
aam
ficoml
or
and
nopl
repnz
and
lock
or
das
or
or
pop
std
cmp
dec
adc
inc
push
cmp
and
cmp
sub
pop
and
adc
inc
pop
push
cmp
out
ljmp
fdivr
loopne
aad
jmp
loope
iret
in
in
call
lar
adc
or
adc
loop
lock
pop
sbb
sub
and
push
or
xor
or
add
adc
prefetch
inc
xor
sbb
inc
inc
pop
sub
or
xor
sub
push
dec
cmp
pop
daa
sbb
pop
sub
push
pop
push
cmp
push
pop
push
xor
sti
ret
mov
mov
aam
repz
in
icebp
loop
or
in
jmp
pop
add
in
or
push
out
adc
in
ficompl
neg
or
adc
icebp
add
push
pop
and
push
and
and
cmp
repz
xor
cld
lcall
sbb
adc
sbb
sbb
sbb
dec
push
push
mov
daa
push
cs
push
inc
and
push
pop
inc
and
push
dec
pop
outsb
inc
pop
in
fdiv
mov
clc
mov
in
cld
cli
or
std
loopne
or
fistl
repnz
rcl
call
repz
cmc
adc
pop
in
hlt
adc
sub
call
add
repnz
sbb
cli
adc
xor
sbb
sub
sbb
sub
sub
pop
push
push
adc
cmp
sbb
and
cmp
loop
in
mov
loop
repnz
aam
std
idivl
faddl
lret
pop
lret
rorb
lock
sbb
std
add
cli
adc
or
and
adc
hlt
or
or
sti
adc
dec
and
sbb
dec
inc
sbb
pop
or
or
dec
and
sbb
es
cs
sub
push
sbb
sbb
inc
cmp
dec
cmp
out
out
call
rcl
roll
sti
loope
fmuls
clc
mul
into
ljmp
adc
out
clc
sbb
adc
sti
or
add
cmc
repnz
and
jecxz
out
out
xor
in
add
pushl
sub
notl
cs
ds
xor
add
incl
and
and
and
sub
xor
and
inc
pop
das
cvtps2pi
push
sub
pop
pop
inc
pop
pop
push
pop
inc
dec
es
push
out
cli
shr
std
mov
in
repnz
enter
aam
fstp
lret
iret
or
adc
hlt
hlt
ljmp
call
icebp
in
jecxz
ficomps
push
jmp
call
aaa
jmp
icebp
xor
clc
sbb
cmp
add
ds
inc
pop
sub
dec
or
dec
es
adc
push
push
inc
xor
adc
xor
arpl
inc
inc
pop
push
loop
into
shll
add
rol
lock
or
fsubrp
out
or
in
adc
cmc
add
or
push
adc
stc
adc
adc
push
pop
cld
and
push
sub
stc
jmp
sub
push
adc
psubw
push
sub
sub
xor
cmp
and
sbb
or
sbb
xor
dec
sub
es
push
pop
sbb
push
aaa
cmp
push
sbb
pop
push
xor
daa
ret
vpmullw
sarb
fcmovnu
cmc
clc
dec
push
leave
fmuls
out
jmp
or
adc
push
sbb
sbb
push
fstps
push
psraw
jmp
or
jecxz
jmp
icebp
call
or
xor
xor
cs
sbb
pop
inc
cmp
and
sbb
push
and
ss
xor
cs
sbb
sbb
ss
inc
sbb
push
dec
inc
dec
inc
call
aad
mov
ffree
in
clc
sti
stc
jecxz
loopne
in
in
into
mul
adc
or
cmc
pop
sbb
add
and
or
call
das
and
adc
cs
sub
sbb
xor
pop
das
cmp
dec
inc
or
inc
cmp
das
cmp
xor
pop
push
popa
aaa
arpl
pop
pop
cmp
cli
fistpll
rol
cli
add
std
clc
testb
or
clc
push
enter
adc
mul
int3
add
in
idiv
or
adc
sbb
in
out
sbb
lock
and
icebp
or
stc
cmp
or
sub
inc
notb
sub
sub
and
sub
aaa
sub
push
push
dec
pop
sub
cmp
cmp
cmp
dec
and
leave
enter
sar
mov
not
or
rol
mov
fmull
loope
push
in
hlt
jmp
clc
fcomi
and
hlt
sbb
add
add
daa
pop
adc
pop
add
sub
aaa
sub
sbb
push
sub
and
das
das
sub
or
adc
push
cmp
push
pop
inc
push
pop
and
pop
pop
inc
pop
imul
mov
clc
jecxz
hlt
ret
std
push
add
fucom
leave
jmp
repnz
jmp
and
add
adc
sbb
sub
pop
out
call
pop
adc
das
notl
cmp
sbb
adc
inc
inc
cmp
inc
cmp
sbb
adc
inc
pop
sbb
xor
sbb
push
and
sbb
inc
cmp
inc
inc
in
jmp
int3
fsub
fucomip
xlat
shl
std
repz
in
jecxz
in
add
in
sbb
shl
sbb
hlt
or
adc
and
call
pop
pop
pop
cld
das
push
push
adc
xor
xor
add
cmp
inc
cld
and
inc
xor
inc
or
or
or
xor
dec
dec
inc
dec
xor
inc
sbb
push
arpl
push
pop
aas
outsb
push
repz
in
mov
rcr
clc
out
icebp
into
sti
ror
jmp
loop
out
call
repz
out
sbb
or
and
pavgb
fcomip
and
add
sbb
sub
pop
and
aaa
add
std
inc
sbb
ss
adc
add
and
dec
cmp
dec
and
pop
xor
pop
sbb
xor
bound
imul
jecxz
mov
fiaddl
jmp
mov
add
mov
flds
or
or
fcomip
out
rclb
cmc
sti
adc
pop
fdivp
fdiv
and
hlt
cld
out
or
pop
sti
push
icebp
incb
pop
or
or
notb
sbb
incl
inc
sbb
inc
sub
or
inc
inc
inc
and
inc
adc
sub
push
push
sub
sub
sbb
es
sub
in
fcmovbe
mov
repz
add
in
dec
jecxz
or
fdivrp
push
adc
in
lock
or
aad
add
or
sti
adc
ljmp
add
out
ljmp
clc
xor
clc
and
cld
cmp
inc
inc
add
or
adc
push
cmp
inc
sub
dec
push
cmp
and
xor
push
bound
xor
mov
clc
fcmovne
std
fsub
std
xlat
mov
in
pop
lret
idiv
fistl
shl
or
sbb
clc
or
std
or
adc
pop
repz
sbb
sbb
lock
or
xor
push
xor
aaa
pop
sub
adc
add
and
std
sbb
or
dec
push
inc
dec
xor
dec
das
xor
dec
pop
and
push
sbb
cmp
and
and
imul
sarl
repz
out
ffreep
push
repz
cli
in
out
loop
lock
cmc
loop
out
or
add
add
and
sub
icebp
mul
or
icebp
or
add
and
sbb
xor
pop
std
das
pop
adc
cmp
cmp
sub
push
or
push
sub
and
push
push
push
pop
cmp
cmp
das
push
xor
data16
dec
mov
lret
mov
in
hlt
mov
shl
add
cld
or
add
adc
cld
loope
shl
or
in
fstps
mov
and
push
cmc
filds
or
or
sbb
add
or
adc
sbb
or
sbb
dec
sub
push
aas
aaa
push
dec
or
push
dec
cmp
dec
sub
dec
cs
pop
inc
xor
and
inc
inc
pop
pusha
outsb
pop
push
hlt
vmaskmovdqu
shl
mov
fiadds
hlt
add
enter
movl
lock
fdivr
hlt
adc
adc
repnz
mov
add
sti
sbb
sbb
sbb
add
xor
xor
add
cmp
inc
or
push
clc
lcall
cmp
or
inc
and
cmp
xor
sbb
dec
pop
xor
dec
pop
cmp
popa
aaa
pusha
pop
inc
cmc
lret
mov
stc
test
add
test
cmc
out
add
adc
fst
clc
push
out
jecxz
push
or
fcompl
sbb
add
out
in
push
sbb
das
adc
lock
adc
sbb
inc
and
sbb
dec
and
push
sub
inc
xor
aaa
xor
push
dec
cmp
sbb
and
inc
xor
xor
pop
and
idivl
mov
mov
shl
loopne
in
or
out
in
cld
add
shl
idiv
out
push
aam
adc
adc
loope
cli
loope
and
sub
or
sbb
add
xor
repz
pop
clc
and
adc
inc
add
cmp
cmp
sbb
sub
adc
cmp
sbb
inc
ds
and
popa
push
cmp
jmp
out
not
stc
mul
fldl
lock
jmp
fdivrp
ffreep
leave
add
in
or
clc
push
in
add
adc
fcompp
loopne
clc
clc
lock
jecxz
clc
or
cli
and
jmp
out
comiss
cmp
sub
inc
add
xor
sbb
dec
sub
or
sub
adc
pop
xor
inc
sub
push
cmp
cmp
inc
fs
pusha
bound
fsubr
xlat
mov
rcl
cli
fdiv
std
in
fmulp
push
stc
fucomp
add
int
adc
in
cld
fcompl
hlt
repnz
sbb
loope
loope
add
in
sti
ljmp
adc
xor
xor
xor
sub
daa
dec
cld
and
or
push
push
inc
inc
dec
sub
push
cmp
sbb
cmp
push
data16
pop
sub
fcom
clc
mov
rcr
fadd
sar
shl
sti
inc
sti
stc
jecxz
out
into
fmul
int3
jmp
clc
push
or
sbb
pop
idiv
out
fdivr
icebp
add
sbb
cld
sbb
sub
es
repz
sub
xor
or
sbb
or
xor
add
add
sbb
dec
inc
and
daa
inc
sub
sub
cmp
xor
cmp
pop
dec
push
and
inc
pop
es
fs
clc
shlb
mov
cmc
cld
clc
aad
testl
aam
adc
iret
out
add
pop
adc
and
add
sbb
incl
pop
add
testl
or
xor
adc
xor
sub
cmp
pop
sub
dec
or
inc
and
xor
or
pop
dec
inc
xor
pop
push
inc
xor
inc
pop
push
cmp
lret
shr
icebp
aam
fmulp
repz
rol
add
inc
movl
loope
jmp
out
repz
jmp
adc
loop
mul
clc
sub
or
or
icebp
std
and
hlt
push
sbb
pop
adc
or
cli
stc
sub
and
nopl
dec
pop
inc
sub
aas
sub
xor
dec
inc
dec
xor
xor
sbb
es
push
xor
dec
dec
sbb
aaa
inc
push
pop
jmp
in
fcmovbe
hlt
mov
repnz
lret
in
lret
in
push
ljmp
aad
or
push
push
ljmp
push
add
sti
cli
add
cs
jmp
sub
xor
cs
adc
aas
sbb
adc
cmp
or
inc
or
adc
inc
inc
push
aas
dec
sub
push
sub
sub
fs
es
push
insl
daa
inc
sub
lret
fcomi
fcomip
clc
hlt
cld
mov
ljmp
or
std
out
shr
into
loop
aad
cld
repz
adc
neg
std
ficoms
sub
add
or
jmp
adc
and
or
sub
adc
and
adc
cmp
and
or
sub
or
sub
adc
pop
sub
popa
sbb
inc
xor
outsb
inc
xor
mov
fidivrs
iret
sti
mov
jmp
testl
repnz
or
push
add
repz
fsubl
add
loop
out
and
in
stc
decl
add
xor
or
and
cmp
pushl
sbb
ds
adc
sbb
es
dec
cmp
dec
aas
sub
add
inc
and
daa
aas
pop
inc
push
pop
adc
and
push
dec
sub
repz
shl
add
rol
add
repz
fstp
stc
or
add
in
out
cmc
or
or
fimuls
and
sbb
incb
adc
or
adc
add
or
and
xor
sbb
or
xor
xor
dec
dec
pop
sbb
sbb
addr16
pop
dec
sub
mov
sti
in
jmp
fcomi
in
fst
repz
testl
iret
or
jmp
jmp
push
sbb
lcall
fsubl
cli
pop
push
daa
or
push
adc
stc
and
sbb
add
xor
sub
incl
decl
sub
cmp
inc
dec
dec
push
and
cmovs
push
inc
pop
sbb
xor
and
pop
insl
dec
sub
rol
mov
repnz
mov
ffreep
repz
sti
fadd
test
or
or
push
or
or
not
testl
loope
fucomp
cmc
cld
adc
sub
out
es
sbb
xor
sti
adc
inc
pop
push
xor
add
push
push
pop
dec
push
cmovge
inc
push
inc
pop
xor
cmp
dec
pop
xor
cs
sbb
xor
push
daa
cmp
xlat
out
in
mov
in
out
mov
hlt
ljmp
adc
in
in
clc
or
or
out
in
repnz
loope
sbb
xor
and
aaa
cmp
cmp
xor
add
sbb
and
and
or
sub
cmova
sbb
push
das
cmp
and
sub
data16
div
rcl
cld
in
mov
rol
add
cli
inc
lret
or
stc
icebp
adc
out
out
out
icebp
lock
repnz
out
or
push
and
add
sub
sub
sub
add
out
adc
add
stc
aaa
or
or
sub
or
cs
dec
or
inc
push
adc
xor
es
pop
xor
popa
push
dec
fs
dec
cmp
inc
addr16
ret
out
rcl
out
leave
jmp
mov
jmp
add
out
adc
sbb
fdivr
lcall
std
sbb
sbb
adc
and
and
ljmp
sub
adc
cmp
cmp
or
aaa
and
es
aas
xor
aas
cmp
es
and
xor
daa
cmp
adc
push
dec
push
and
push
sub
inc
pop
cmp
pop
popa
dec
inc
ds
stc
fninit
icebp
scas
fsub
mov
in
fildl
stc
repz
out
add
icebp
adc
aad
or
in
push
hlt
adc
stc
sbb
loope
adc
pop
cs
icebp
std
and
xor
or
sub
add
cmp
push
inc
aaa
pop
and
cmovge
adc
dec
adc
sbb
dec
pop
pop
push
insl
pop
inc
data16
into
lret
mov
sti
mov
mov
ffree
in
ret
in
in
pop
incb
cmc
shl
or
add
jmp
mov
sbb
jmp
push
pop
add
es
push
sub
and
add
es
call
adc
adc
and
sbb
xor
inc
cmp
and
push
and
push
push
sub
sub
sbb
sbb
pop
and
inc
push
mov
in
clc
in
int
jecxz
out
jmp
les
add
hlt
out
cmc
leave
xlat
or
sti
push
neg
fsubrp
jmp
adc
or
add
add
push
in
and
and
cs
divl
clc
adc
add
adc
inc
push
inc
sbb
inc
dec
sbb
adc
pop
push
inc
adc
cmp
push
xor
inc
inc
es
inc
pop
pop
dec
imul
std
mov
rorb
fdivrs
fucom
or
or
xlat
lret
hlt
shr
adc
sbb
or
stc
fsubp
cmc
add
add
repz
or
sub
add
and
push
adc
cs
or
cmp
adc
inc
and
add
sbb
cmp
xor
sub
and
inc
dec
das
pop
push
ss
sbb
jno
out
enter
lock
fndisi(8087
out
mov
add
decl
add
or
sbb
ljmp
repnz
and
es
or
das
and
xor
sbb
es
cld
xor
jmp
cmp
and
and
push
sub
push
xor
adc
push
dec
sub
inc
ds
ss
pop
and
cmp
sti
shl
mov
fadds
add
call
fiadds
or
or
lock
aad
sti
adc
and
hlt
push
es
sti
add
sub
and
sub
and
icebp
pop
clc
and
xor
cmp
inc
sbb
adc
cmp
and
sbb
or
dec
cmp
sbb
pop
pop
aaa
sub
xor
xor
sub
and
hlt
jmp
loopne
out
out
sar
fildl
or
ljmp
add
notb
push
push
or
adc
out
sbb
and
repnz
imul
clc
or
adc
add
sub
mulb
aaa
xor
sbb
sbb
inc
xor
sbb
or
dec
sbb
dec
sub
sub
adc
push
sbb
cmp
and
in
in
hlt
mov
fld
add
fdecstp
fdivp
cli
add
pop
or
lock
or
lock
or
lock
out
jmp
adc
adc
in
and
fbld
sbb
or
xor
ud0
push
adc
sub
adc
xor
and
inc
cmp
cmp
cmp
push
or
xor
push
inc
push
sbb
pop
aas
pop
cmp
sub
dec
pop
push
xor
dec
imul
ds
mov
mov
repnz
mov
out
pop
add
clts
add
pop
out
or
cli
icebp
fistl
pop
clc
loopne
in
and
pop
out
or
adc
push
and
sbb
xor
cmp
and
cmp
jmp
pop
sbb
and
sbb
cs
inc
dec
adc
and
push
sub
cmp
arpl
xor
imul
dec
in
jmp
neg
lock
add
repz
ljmp
jecxz
int3
call
ljmp
adc
stc
pop
and
and
adc
push
out
in
cmp
xor
sub
cmp
inc
cld
xor
sbb
adc
inc
inc
sbb
xor
push
xor
or
adc
push
pop
dec
pop
das
cmp
es
fs
lret
sar
sti
aam
sti
in
les
vcmpss
jmp
adc
in
adc
push
frndint
sbb
stc
adc
add
in
sbb
daa
loope
es
daa
sbb
and
pop
hlt
and
or
push
sti
sbb
and
adc
xor
pop
dec
sub
mov
and
and
push
das
dec
pop
sbb
push
sub
push
pop
push
fs
pop
dec
push
pop
popa
jno
lock
xbegin
in
loop
add
roll
jmp
in
fimuls
out
lock
fmuls
add
cmc
adc
cmc
loopne
and
sub
or
add
adc
adc
hlt
adc
cmp
or
das
adc
incl
sbb
cmp
aas
sub
inc
xor
or
dec
inc
sub
adc
cmp
and
gs
and
pusha
sub
out
rcl
mov
loop
mov
repz
int
out
add
loop
notl
pop
fmul
sbb
ljmp
or
or
out
sbb
sbb
sbb
daa
adc
push
ss
cmp
xor
aaa
add
cmp
and
add
sbb
es
xor
das
daa
inc
inc
xor
cmp
push
pop
sbb
xor
and
pop
es
clc
jmp
call
aad
aad
mov
add
adc
in
push
add
in
jmp
and
add
repz
loope
sub
sbb
add
add
ljmp
sub
or
invd
xor
or
incl
adc
daa
push
and
adc
daa
push
push
dec
xor
inc
dec
xor
sbb
sbb
arpl
pop
popa
sub
icebp
lret
into
jmp
idiv
push
ret
stc
not
push
repz
int3
add
sar
out
in
or
jmp
adc
pop
shl
adc
sbb
pop
sbb
decb
sub
and
sub
cmp
and
hlt
sub
adc
add
sbb
or
or
daa
cmovbe
inc
sbb
dec
cmp
cmp
dec
inc
es
cmp
addr16
outsb
pop
cmp
mov
lret
loop
incb
fcmovu
or
or
fistl
rorl
push
in
repz
push
adc
out
out
fcomi
icebp
loop
push
adc
std
out
add
adc
sub
daa
sub
or
adc
std
or
das
and
pop
sbb
or
movaps
sbb
push
adc
mov
dec
and
pop
push
pop
and
aas
push
imul
das
cmp
fsubr
leave
int3
lock
clc
aam
cld
mul
lock
cli
aam
or
pop
adc
out
out
int3
push
hlt
rolb
or
out
stc
repz
out
fcompl
testb
add
in
call
xor
hlt
push
das
negl
adc
xor
divb
pop
xor
adc
inc
add
adc
and
inc
push
or
adc
cmp
push
push
inc
xor
inc
push
pop
push
cmp
pop
push
ds
repnz
lret
mov
loopne
shl
add
clc
shr
add
push
adc
adc
in
sbb
lock
sti
sbb
adc
adc
sub
fisttps
push
adc
add
daa
xor
push
sub
idiv
cld
adc
xor
push
inc
pop
dec
inc
dec
or
cmp
push
xor
push
pop
dec
and
das
aas
sub
pop
dec
dec
dec
dec
pop
and
ds
inc
pop
aas
push
push
fdivp
mov
ret
mov
int3
cld
stc
out
int
xlat
or
out
lock
fcoms
clc
add
repnz
repnz
push
sbb
daa
das
adc
adc
or
or
lock
push
xor
aas
sti
sub
sub
inc
dec
and
cmp
sub
adc
dec
sub
and
dec
inc
dec
xor
inc
cmp
pop
pop
pop
sub
ret
hlt
mov
push
in
ror
fucompp
in
iret
pop
std
out
or
pop
jecxz
loope
jmp
or
cmc
push
fildl
jmp
sbb
cs
adc
stc
and
or
pushl
sbb
ss
push
and
dec
es
pop
or
xor
cmp
xor
aaa
sub
and
pop
dec
dec
dec
mov
mov
fincstp
repnz
out
fst
fmull
out
out
or
out
jecxz
or
out
in
push
add
hlt
add
pop
sub
add
or
add
jmp
sub
or
das
notb
repz
sbb
cld
cmp
push
push
sub
adc
dec
push
dec
cmp
push
xor
dec
and
pop
ds
push
inc
inc
dec
pop
addr16
cmp
fidivl
mov
rcr
xlat
rorl
out
add
in
out
jecxz
in
cmc
or
sti
adc
jmp
cmc
incb
es
sub
xor
add
or
cmp
cmp
or
adc
and
add
adc
add
sub
dec
dec
inc
das
push
adc
ss
xor
push
ds
cmp
inc
pop
cmp
cmp
mov
mov
mov
fcomip
bnd
enter
loope
fmull
push
aam
or
or
pop
push
aam
xlat
or
adc
and
std
adc
add
fistps
xor
sub
and
or
and
xor
adc
daa
sbb
xor
and
adc
add
sub
xor
push
sub
dec
aaa
sub
cmp
sbb
sbb
push
dec
imul
pop
inc
fadd
aad
rcr
dec
clc
sti
mov
add
leave
in
lock
adc
jmp
lret
repnz
and
fincstp
cli
in
add
and
or
sub
pop
xor
or
mull
push
sti
aas
sub
or
add
pop
dec
push
and
xor
aas
or
dec
sub
adc
sub
dec
cmp
bound
dec
xor
push
and
cmp
fcmovnbe
repz
int3
sti
std
rol
in
add
add
xlat
or
fcmove
loop
aad
jmp
aad
rcll
adc
not
in
add
and
loope
sbb
add
sub
in
in
adc
sub
hlt
es
cld
or
and
adc
idiv
add
push
cmp
add
dec
dec
dec
and
adc
xor
push
pop
sub
push
cmp
ss
sub
inc
leave
mov
sti
cmc
lret
fcmove
int3
cld
loope
lock
enter
jmp
fcoml
adc
adc
sbb
pop
add
repz
and
incb
pop
sbb
sub
push
add
push
cs
and
cs
and
add
add
cmp
inc
adc
dec
sub
inc
dec
cmp
dec
pop
pop
sbb
pop
cmp
xor
push
sbb
imul
pop
daa
repz
into
fstpt
add
fucom
lret
push
std
or
int3
out
rcr
in
call
lock
fdivr
adc
fcomp
add
adc
pop
sbb
or
sub
sub
add
adc
or
ds
inc
pop
aas
pop
dec
sbb
and
or
xor
adc
dec
dec
cmp
push
aaa
xor
cmp
dec
xor
pop
sbb
insb
dec
insl
insb
addr16
out
lods
mov
mov
jmp
test
ret
repz
call
add
lret
add
out
call
sbb
adc
and
add
sub
lock
lock
adc
push
or
cld
xor
adc
cli
sbb
inc
push
sbb
and
adc
inc
inc
xor
dec
pop
inc
cmp
pop
cmp
cs
and
inc
imul
out
shr
lret
std
aad
icebp
lret
mov
add
pop
or
add
iret
out
filds
add
fdiv
ljmp
frstor
std
mul
or
incl
adc
cld
cld
add
xor
repz
sti
adc
cmp
adc
cmp
sbb
add
xor
and
ds
dec
pop
sub
sbb
xor
push
data16
imul
cli
shr
into
jmp
loope
add
loope
or
cmc
jmp
jmp
or
lock
unpckhps
adc
in
in
fcompl
push
adc
sti
adc
lock
fdecstp
sub
adc
push
sub
xor
and
or
xor
sbb
pop
clc
sbb
push
dec
and
aaa
inc
or
inc
cmp
inc
and
and
xor
sbb
dec
sub
pop
push
daa
inc
and
cmp
insl
imul
loopne
ret
std
in
in
or
shl
repnz
psubsw
int3
adc
adc
adc
and
loop
mulb
adc
stc
or
and
push
in
in
xor
or
daa
cld
sti
cmp
inc
xor
add
inc
and
sbb
pop
inc
sbb
push
adc
inc
push
ds
dec
adc
cmp
xor
and
cs
inc
push
dec
pop
inc
cmp
mov
iret
call
ret
fst
repz
push
add
sti
fsubrp
ret
ljmp
jmp
sbb
cli
add
negl
call
in
cld
icebp
in
adc
pushl
icebp
and
adc
daa
xor
and
and
sub
cs
dec
adc
adc
xor
daa
sub
push
sbb
dec
sbb
aas
ss
pusha
and
addr16
shr
mov
cld
out
shr
clc
mov
add
fcmovnu
or
lock
aad
adc
or
cld
testl
cld
adc
add
sub
and
cli
or
adc
cs
sub
notb
sub
sub
and
cmp
add
and
cmp
sbb
es
sbb
adc
inc
adc
pop
pop
pop
cmp
inc
das
xor
cmp
imul
int3
lret
iret
mov
in
loop
or
or
add
in
add
or
or
loop
adc
icebp
aad
sbb
sbb
adc
pop
sbb
out
and
or
xor
sub
pop
add
and
or
sbb
aas
and
aaa
cmp
cmp
inc
sbb
inc
or
or
adc
nopl
pop
arpl
inc
sub
dec
push
cs
inc
call
aad
sar
repnz
mov
lret
call
or
icebp
ljmp
in
or
in
repnz
clc
pop
and
and
add
push
and
pop
or
xor
add
or
sub
push
push
or
inc
sbb
and
dec
add
dec
sbb
dec
es
or
dec
xor
pop
push
pop
dec
adc
xor
xor
addr16
push
fs
inc
pop
addr16
sub
int
cld
lret
clc
fsubr
aad
clc
rol
incb
repnz
or
add
push
or
cmc
frstpm(287
or
add
pop
cmc
nopl
sbb
sbb
and
out
add
daa
adc
es
xor
and
inc
add
add
inc
and
sub
inc
sub
dec
push
dec
inc
daa
dec
sbb
pop
sbb
sbb
cmp
popa
pop
inc
inc
sub
call
mov
mov
or
in
in
or
push
ljmp
sbb
pop
rorl
sbb
sbb
and
repz
out
sub
xor
ss
xor
pop
idiv
xor
push
xor
and
aas
add
inc
inc
dec
dec
push
aas
and
dec
orps
dec
pop
adc
inc
sbb
fs
and
cmp
pop
cmp
mov
sti
sar
mov
lds
loope
add
add
in
in
jmp
aam
cld
out
sbb
cld
icebp
xlat
sbb
push
loopne
adc
fcomip
es
and
sub
adc
hlt
and
pop
or
xor
inc
cmp
cld
cmp
cmp
push
inc
add
or
push
sub
dec
pop
sub
sbb
pop
sub
pop
dec
pop
imul
xlat
mov
lret
enter
fucomip
repz
or
cld
or
add
jmp
lock
cld
call
jmp
fcmovbe
or
or
add
sub
jmp
push
xor
cmc
xor
cmp
inc
inc
add
sub
and
and
pop
inc
cmp
and
xor
sub
bound
and
push
push
aas
pop
dec
arpl
cmp
out
mov
mov
add
add
or
out
loop
adc
loope
ror
lret
adc
or
testl
add
sbb
out
and
in
cld
or
push
adc
add
pop
cmp
xor
adc
add
xor
or
aas
push
or
inc
dec
inc
push
inc
inc
push
sbb
push
dec
dec
xor
push
xor
xor
imul
outsb
stc
in
jmp
mov
in
hlt
fcmovb
neg
mov
or
ljmp
in
std
iret
idiv
or
or
adc
es
sbb
clc
and
imul
and
xor
lock
sbb
lock
adc
adc
adc
adc
sbb
sti
adc
sbb
sbb
inc
push
sub
das
inc
xor
cs
pop
push
push
cmp
xor
push
aaa
inc
addr16
pop
cmp
and
sub
mov
leave
mov
fcomp
lock
icebp
mov
jmp
jmp
out
add
adc
sbb
out
in
sbb
sbb
repnz
jecxz
in
sub
sbb
or
and
adc
and
out
xor
and
sub
cmp
push
and
inc
cmp
daa
pop
xor
or
or
push
inc
adc
xor
adc
cs
cmp
and
pop
imul
cmp
mov
stc
out
stc
fidivrs
loop
std
shr
or
fdivrp
fists
adc
aam
rcr
neg
jmp
sbb
repz
sub
es
add
adc
sub
and
xor
sub
push
pop
add
cmp
adc
cmp
xor
sub
xor
inc
and
adc
aas
dec
ss
sbb
aaa
gs
imul
mov
fcmovnbe
hlt
cli
loopne
out
cmc
fildl
lock
leave
in
in
fucomp
enter
pop
loope
shr
stc
in
adc
hlt
fistl
adc
lock
and
or
add
es
or
adc
sub
cmp
sbb
add
add
push
dec
push
cmp
push
and
dec
adc
xor
pop
push
aaa
inc
dec
pop
push
inc
dec
and
push
sub
icebp
cld
out
xlat
mov
mov
sar
icebp
pop
add
add
in
jmp
adc
adc
adc
cli
psllw
fucom
idiv
push
pop
and
or
pop
stc
or
or
aaa
icebp
sbb
hlt
stc
or
xor
sbb
push
xor
adc
aaa
sub
inc
pop
sub
dec
dec
push
pop
sub
pop
das
xor
daa
pop
dec
pop
aas
ss
pop
inc
bound
inc
pop
cmp
repnz
jmp
cld
fcmovbe
out
pop
cld
or
jmp
std
add
add
hlt
call
in
sbb
adc
cmc
add
cmc
pop
out
and
out
add
daa
and
das
pop
adc
xor
pop
sbb
cmp
xor
and
daa
aas
dec
das
cmp
dec
cs
xor
sub
adc
push
bound
bound
bound
push
push
inc
inc
sub
hlt
out
shl
aad
mov
dec
repnz
add
add
movl
out
testb
ljmp
adc
sti
adc
out
jecxz
sti
and
sub
in
or
add
sub
adc
or
push
adc
xor
add
pop
and
add
inc
or
dec
das
xor
sub
sbb
cmp
aas
push
push
sbb
fs
popa
push
pop
mov
jmp
repnz
enter
aam
rcr
fadds
add
out
mov
adc
int
or
or
aam
adc
lock
or
loop
cld
or
or
in
or
ljmp
xor
das
decb
adc
sbb
dec
cmp
or
xor
inc
adc
adc
daa
push
push
pop
pop
sbb
xor
dec
dec
aaa
daa
and
inc
sub
mov
enter
fidivl
sar
movb
push
loop
out
int
psadbw
fnsetpm(287
add
cli
push
add
loopne
repnz
sub
std
add
add
adc
in
sbb
and
pop
adc
sub
incb
sbb
pop
das
dec
inc
sub
and
inc
cmp
aaa
cmp
cmp
arpl
ret
stc
in
into
fbstp
add
loope
cmc
stc
ljmp
sar
adc
pop
cmc
imul
or
fsts
push
out
notb
adc
or
cs
pop
adc
adc
or
push
daa
or
idiv
or
cmp
and
cmp
and
dec
daa
daa
cmp
or
inc
sub
cmp
ss
xor
gs
and
inc
data16
pop
out
call
ljmp
or
cli
jecxz
fldlg2
lock
iret
shl
repnz
shl
cli
fld1
prefetchwt1
or
jmp
sti
repnz
add
add
adc
out
ljmp
sub
or
cmp
sbb
add
inc
dec
dec
inc
pop
aas
dec
dec
das
and
and
adc
xor
sub
sub
and
and
push
pop
jo
cli
repnz
lock
add
ret
aad
cmc
out
in
loope
call
call
out
repz
add
and
es
sbb
hlt
push
out
sub
das
cld
icebp
and
push
sub
es
cmp
xor
sti
xor
xor
push
inc
sbb
dec
push
aas
inc
push
dec
inc
sub
dec
inc
sbb
sbb
push
bound
imul
sar
call
loope
not
loope
out
rolb
cld
fxch
out
add
adc
call
f2xm1
out
std
notl
movups
cmc
loop
std
adc
out
adc
pop
daa
and
xor
pop
icebp
sub
pop
cmp
push
add
adc
ss
cmp
add
push
aaa
xor
ss
sbb
sub
pop
cmp
addr16
es
inc
and
mov
repz
lock
aam
call
adc
in
or
jmp
out
fsts
sbb
and
sub
adc
out
sbb
or
sbb
xor
add
xor
repnz
idiv
sbb
cld
add
push
inc
push
and
add
push
and
adc
dec
es
pop
sub
sbb
pop
and
bound
ss
sub
out
mov
sti
fcmovnbe
cli
lret
out
aad
add
flds
rcr
pop
stc
in
sar
lret
push
in
adc
sbb
jmp
add
add
adc
or
or
sbb
xor
cli
and
sti
sbb
sbb
and
and
cmp
add
or
dec
and
das
dec
sub
es
pop
push
sbb
push
sub
pop
sub
mov
leave
ljmp
idivb
int
or
loope
rcll
out
stc
sbb
or
prefetcht1
pop
fists
daa
sub
add
notl
sbb
hlt
and
pop
sub
ss
or
inc
aas
add
and
sbb
aas
and
push
and
sub
sub
xor
xor
cmp
xor
and
pop
es
repnz
cld
mov
cmc
into
sti
add
ror
add
loop
or
lock
ljmp
add
bnd
clc
add
clc
and
pop
sbb
push
sub
and
sbb
adc
cmp
adc
cld
and
adc
sbb
aas
or
inc
sbb
sub
inc
and
sub
xor
push
cmp
aaa
pop
push
cmp
inc
push
inc
pop
pop
cmp
gs
das
pop
mov
mov
in
jmp
add
mov
stc
ret
call
fsubp
adc
in
pmulhuw
aam
out
sbb
negl
loop
in
ljmp
or
add
cs
ds
xor
std
sbb
xor
dec
inc
inc
or
xor
aas
push
dec
xor
sbb
xor
push
xor
inc
aaa
pop
inc
cmp
div
fnstsw
repz
out
loopne
std
fdivr
fucomp
adc
loop
in
int
or
add
sbb
out
aad
add
and
stc
and
add
in
es
or
sub
imulb
ljmp
and
or
and
das
cmp
xor
and
sbb
cmp
adc
pop
adc
push
pop
cmp
dec
push
push
inc
sbb
and
sub
dec
and
mov
fstp
call
lock
loop
add
rcr
fsubr
shr
jmp
sbb
clc
div
out
sbb
out
add
loope
pop
mul
sub
sbb
sbb
aaa
xor
or
cmp
aas
inc
push
sub
pop
push
inc
push
xor
adc
sub
dec
pop
dec
cmp
cmp
pop
xor
cmp
jmp
jmp
loopne
shr
clc
icebp
jmp
mov
jmp
add
clc
in
pop
push
std
push
fists
fstp
loop
out
add
add
jmp
sub
sub
xor
in
pop
es
and
push
or
adc
sub
ss
cmp
push
sub
cmp
ss
sub
cmp
pop
xor
sub
inc
dec
shl
aad
xlat
fsubrp
shl
shl
iret
rcr
hlt
aam
fcmove
or
fscale
loope
add
pop
in
hlt
sbb
fsubr
repnz
sbb
adc
hlt
adc
cmc
in
in
and
and
decl
add
push
push
sbb
adc
adc
sbb
and
push
dec
sub
sbb
adc
and
adc
dec
pop
dec
das
xor
sbb
pusha
inc
push
addr16
cmp
ds
in
sarb
add
mov
jmp
jmp
out
aad
adc
lock
fstpl
cmc
es
idiv
out
and
sbb
sub
sub
aaa
cmp
divb
push
sbb
add
push
push
add
push
push
or
xor
and
pop
pop
dec
xor
cmp
ds
sub
addr16
ret
in
rcr
fdivrp
fcmovb
add
fiadds
clc
iret
adc
or
jmp
out
out
fisubs
clc
jecxz
and
cli
sbb
loop
push
and
and
pop
push
xor
or
adc
cmp
or
std
idivl
std
adc
adc
adc
pop
adc
or
adc
xor
daa
dec
push
cmp
inc
inc
sub
xor
inc
pop
pop
fs
lret
int
out
jmp
int
iret
lock
repnz
push
add
leave
add
int
add
bswap
pop
out
adc
sar
rcrl
or
in
and
loopne
adc
and
pop
sub
cli
or
sub
out
push
and
aaa
out
divb
xor
add
cmp
std
sbb
sbb
dec
dec
push
inc
dec
inc
aaa
push
push
xor
sbb
pop
cmp
dec
pop
inc
xor
inc
pop
push
sub
sub
ror
mov
lock
aad
fimull
loopne
call
pop
loopne
add
bnd
and
sbb
sbb
sbb
cli
xor
pop
das
add
pop
cmc
lock
sub
es
sub
sub
inc
add
inc
sbb
cmp
xor
xor
and
pop
sbb
push
bound
pop
dec
cmp
fs
xlat
out
scas
xlat
mov
loopne
into
sti
loopne
or
in
enter
or
loope
std
loop
call
repnz
push
repnz
out
sbb
out
stc
add
push
and
stc
adc
lock
add
push
xor
imulb
inc
adc
cmp
cmp
sub
inc
and
adc
dec
push
cmp
sbb
and
addr16
pop
dec
sub
lds
leave
out
filds
cmc
ret
xlat
in
out
enter
add
adc
or
adc
std
repnz
or
add
and
push
and
testb
call
loop
and
adc
add
cmp
sti
stc
inc
adc
adc
cmp
stc
and
sub
inc
inc
das
push
and
inc
or
pop
sub
fs
push
push
push
imul
dec
inc
repz
cli
mov
in
leave
lock
shr
out
add
add
rclb
adc
ror
or
or
sbb
cmc
push
cmc
adc
lock
cli
es
or
sbb
and
xor
or
sub
idivl
or
sbb
add
xor
ds
xor
or
ds
xor
inc
xor
sub
push
and
pop
and
and
pop
popa
das
mov
out
mov
add
aam
roll
rcl
faddp
in
sti
push
into
sar
or
or
in
adc
adc
or
and
add
and
adc
sti
add
adc
repz
adc
adc
adc
adc
pop
inc
adc
add
push
aas
inc
inc
inc
cmp
aaa
dec
and
push
push
das
dec
adc
sub
pop
dec
dec
and
push
arpl
pusha
cmp
outsl
iret
mov
lret
scas
shl
fcomi
mov
std
sti
test
fimuls
pop
push
ljmp
hlt
sbb
clc
adc
out
sbb
or
stc
in
and
in
pop
add
push
and
repnz
or
cld
sbb
daa
inc
sbb
sbb
xor
and
xor
inc
xor
dec
sub
push
sbb
sub
push
inc
inc
ds
enter
ljmp
fprem
fdiv
in
or
rcll
not
sti
psubusb
sbb
psadbw
and
or
and
pop
loope
and
movups
sub
aaa
sbb
or
stc
call
sub
adc
inc
sub
sbb
and
cmp
xor
dec
sub
dec
cmp
sbb
cmp
inc
xor
pop
xor
ss
mov
fcmovnb
out
ljmp
xlat
push
ffree
enter
add
rolb
add
call
in
stc
adc
fsts
hlt
loop
adc
std
add
pop
sbb
cld
sbb
and
jmp
and
aaa
xor
inc
sub
aas
adc
aaa
sbb
and
or
sub
sub
adc
and
aaa
aaa
pop
push
sbb
bound
sbb
pop
aaa
pop
cmp
and
sti
fcomi
mov
loopne
iret
add
fildl
hlt
ret
pop
cli
add
add
leave
cmc
loop
push
iret
out
adc
out
or
lock
add
pop
in
cli
jmp
sysret
xor
std
std
or
or
adc
idiv
sti
aaa
inc
cmp
dec
adc
sub
cmp
and
sub
inc
and
dec
push
sub
dec
sub
dec
pop
dec
push
sub
and
inc
inc
cmp
in
int
fdivrl
add
add
hlt
lret
out
in
icebp
add
rclb
adc
stc
lock
push
or
repz
or
mull
sbb
and
pop
icebp
das
pop
negb
and
xor
xor
aas
cli
cld
stc
push
cli
and
sbb
inc
and
dec
inc
or
inc
dec
inc
dec
adc
xor
bound
pop
push
and
pop
pop
inc
pop
pop
push
lret
mov
sti
int3
fdivp
ret
sti
incl
loope
cld
loope
cld
or
adc
fcmovbe
push
sbb
lock
clc
add
sbb
and
sbb
negl
in
or
add
add
repz
sbb
inc
and
push
adc
dec
cmp
xor
sub
sub
dec
and
pop
cmp
pop
pop
cmp
push
and
dec
sub
div
fcomp
shr
repnz
not
clc
or
mov
call
or
push
call
out
adc
xlat
decl
push
and
daa
cld
and
call
loop,pn
or
sub
and
add
cmp
xor
sbb
sbb
sbb
inc
cmp
ds
aas
push
cmp
inc
dec
cmp
sbb
sub
cmp
inc
inc
sub
dec
daa
out
enter
icebp
loope
cld
mov
in
sti
repz
xlat
add
jecxz
add
loopne
loopne
push
stc
sti
fdiv
fdivrp
clc
add
out
add
hlt
and
out
add
daa
add
and
aaa
or
and
sti
add
inc
cmp
adc
adc
xor
dec
sbb
dec
dec
aaa
push
inc
ss
sbb
sub
inc
push
pusha
and
cmp
addr16
inc
pop
gs
aad
in
in
iret
mov
add
decl
add
fdivrp
out
sti
aam
in
clc
stc
in
or
or
and
std
and
pop
in
out
ljmp
pop
sub
div
stc
notl
sti
xor
notl
sbb
xor
aas
inc
stc
and
xor
inc
xor
sbb
and
sub
cmp
push
dec
cmp
pop
arpl
cmp
inc
push
dec
sub
ljmp
aam
out
in
mov
mov
or
push
decl
repz
sbb
pop
and
cld
clc
call
cli
call
add
and
sub
add
or
cli
adc
xor
adc
dec
and
push
push
dec
dec
adc
push
sub
sub
bound
push
imul
pop
imul
mov
mov
aam
jmp
or
adc
adc
or
aam
or
ljmp
in
fimull
add
sub
cli
and
ljmp
xor
or
sub
repz
sub
or
inc
ds
adc
push
pop
cmp
xor
cmp
push
adc
sbb
push
aaa
xor
arpl
inc
es
imul
in
aam
icebp
fucomp
icebp
add
sar
out
add
loopne
sti
jecxz
ficoml
add
fdivp
rcl
rolb
in
std
repnz
pop
sbb
adc
sbb
in
pop
es
in
and
sub
sub
push
xor
repz
adc
sub
xor
sbb
add
push
pop
and
pop
and
adc
cmp
dec
push
adc
push
xor
xor
push
arpl
sub
and
fincstp
lret
aad
ljmp
add
into
psubw
pop
or
shl
jmp
nop
push
push
push
sbb
push
std
add
icebp
sub
imul
sub
lock
or
stc
sub
push
testb
adc
cmp
adc
daa
dec
or
cmp
xor
inc
adc
dec
cs
cmp
and
inc
cmp
outsb
dec
sub
leave
out
shlb
rcl
out
call
cli
add
sti
pop
adc
cld
hlt
adc
add
fstl
fists
adc
lock
push
div
adc
add
clc
jmp
sbb
or
sbb
cmp
pop
ds
xor
cmp
cmp
dec
inc
push
sub
xor
sub
cmp
cmp
xor
pop
push
xor
push
cmp
loopw
imul
mov
jmp
aam
jmp
hlt
cld
rolb
std
ret
out
in
fimuls
loop
ljmp
or
sbb
cli
and
and
and
push
sbb
sub
hlt
and
out
add
and
adc
sub
aaa
adc
sbb
pop
push
inc
inc
or
and
and
push
pop
xor
sub
dec
dec
pop
dec
xor
and
xor
dec
pop
inc
cmp
out
mov
mov
sarb
cmc
in
lret
ret
push
ud2
in
add
or
or
jmp
sbb
hlt
or
sub
in
psubsb
out
cs
sub
cmp
sbb
cmp
push
xor
cmp
inc
push
pop
cmovno
pop
inc
adc
and
cmp
cmp
pop
sub
push
push
cmp
dec
inc
out
aad
stc
hlt
dec
in
fildl
mov
hlt
ljmp
push
repz
pop
shl
or
fisttpl
or
negl
sub
stc
push
sbb
xor
add
sub
cmp
aaa
cmp
stc
push
sub
add
xor
es
inc
and
sysexit
push
adc
or
sbb
dec
sub
xor
cmp
sbb
pop
aaa
and
cmp
shl
stc
ror
xlat
cli
int3
ret
in
cli
loopne
shr
pop
pop
fcmovnu
pop
out
add
out
loopne
call
fmull
out
sbb
sbb
idiv
adc
jo
jns
imul
xor
cmp
gs
insb
cmp
cmp
cmp
mov
inc
push
lahf
cmp
subb
loopne
mov
add
cmp
add
mov
es
std
cli
and
push
sub
sub
cmp
sbb
decb
adc
add
adc
sbb
cmp
std
dec
cmp
inc
adc
dec
or
es
push
pop
adc
pop
push
gs
push
addr16
dec
sub
pop
data16
jmp
stc
sar
out
fucom
mov
pop
lock
in
fmull
lret
fisttpll
call
add
out
hlt
fmuls
adc
sti
std
cli
jecxz
cld
and
add
out
or
adc
xor
adc
or
adc
ss
aaa
aas
cmp
push
add
dec
das
dec
inc
sub
and
xor
pop
sub
sub
ss
sbb
xor
xor
sub
icebp
sti
aam
icebp
aam
fiadds
in
add
add
in
or
or
add
adc
jmp
fucom
pop
add
sbb
jecxz
call
sub
stc
push
or
add
es
add
sub
inc
or
add
and
sbb
and
push
xor
and
es
sub
sbb
sub
push
xor
xor
inc
dec
pop
arpl
loop
sar
mov
clc
into
cli
rcl
fiaddl
in
sti
std
pop
lock
leave
call
repz
fcmovu
icebp
add
frstor
hlt
add
mull
adc
or
das
sub
sub
or
or
sbb
std
cld
pop
pop
add
std
aas
cmp
sbb
cs
dec
push
push
sbb
inc
sub
adc
xor
xor
sbb
sbb
cmp
xor
cs
shl
rcl
clc
fdivrl
divl
leave
loopne
pop
call
fstl
or
shr
in
cld
push
and
push
std
and
ficomps
loopne
mulb
incb
or
pop
or
pop
or
repz
cmp
sub
cmp
inc
add
add
add
dec
and
xor
or
xor
push
pop
push
pop
sbb
das
inc
pop
gs
push
imul
inc
mov
imul
fucomi
aad
aad
fcomp
iret
out
neg
push
clc
or
cli
iret
fiaddl
loop
movntq
out
shl
add
out
adc
stc
add
fld1
cli
clc
and
add
xor
adc
adc
repnz
sub
adc
or
xor
inc
dec
cmp
dec
sbb
pop
and
dec
adc
pop
and
cmp
cmp
sub
push
cmp
inc
inc
push
fidivl
cli
in
stc
out
rcr
cli
mov
loopne
out
pop
ljmp
or
adc
out
pop
xlat
fsubrp
fistpl
fsin
or
push
or
push
sub
sub
daa
push
adc
or
sbb
xor
pop
aas
xor
xor
adc
add
or
xor
and
push
cmp
cmp
push
and
sbb
push
inc
push
repnz
out
movb
sar
hlt
ret
test
or
add
push
adc
clc
in
and
hlt
push
adc
adc
and
daa
or
sub
and
out
or
std
idivb
or
xor
cmp
dec
cld
daa
cmp
sbb
or
sub
and
dec
cmp
cmp
push
pop
push
push
and
cmp
inc
pop
fcomp
icebp
cli
mov
fcomi
fld
in
int
hlt
mov
xlat
add
out
rorl
adc
hlt
mul
shr
pop
and
sti
aad
sbb
sbb
push
out
imulb
sti
sbb
add
or
adc
or
push
or
repnz
inc
sbb
add
push
xor
push
sub
dec
sub
or
xor
pop
sbb
daa
push
aas
dec
sbb
pop
push
cs
popa
push
dec
cmp
dec
aas
daa
pop
data16
cli
mov
enter
mov
add
mov
mul
or
fmulp
lret
rcl
loope
or
jecxz
fmull
fucomp
fcmovu
fisttps
and
ljmp
call
xor
pop
push
pop
sub
cli
cmp
clc
adc
add
push
inc
dec
sub
aas
adc
dec
and
adc
addps
sub
xor
sub
push
xor
fs
bound
cmp
dec
sub
cli
mov
add
ret
ret
add
cli
fst
add
sti
in
icebp
call
rcll
paddsb
sbb
pop
out
in
and
fdivr
add
loope
mull
sbb
in
add
ss
sbb
add
or
sbb
xor
or
adc
adc
cmp
or
push
cmp
push
and
inc
push
xor
pop
xor
xor
pop
dec
push
push
aaa
dec
inc
pop
insl
repnz
fcmovnbe
hlt
mov
mov
add
aam
lret
in
fldl
rorl
int3
enter
shr
idiv
or
stc
or
adc
loope
and
jmp
cld
push
add
push
sbb
or
cmp
push
unpcklps
adc
inc
add
sbb
inc
inc
add
inc
das
xor
ds
dec
adc
xor
pop
cmp
dec
pop
xor
inc
and
pop
daa
addr16
sti
ret
icebp
fldl2e
mov
hlt
inc
add
std
or
clc
pop
faddp
dec
adc
adc
div
pop
repz
in
fstpl
adc
adc
sti
and
in
adc
add
and
sub
sbb
sbb
and
xor
sbb
add
sub
sub
push
and
adc
dec
dec
xor
dec
cmp
push
cs
inc
push
pop
inc
xor
inc
sub
cmp
icebp
divl
mov
rol
fsubr
lret
or
or
add
jmp
repnz
push
fistl
fyl2xp1
repnz
fsub
stc
loop
loopne
and
loop
movntps
push
add
and
xor
cmp
adc
adc
cmp
inc
add
cmp
dec
push
dec
inc
cmp
push
and
cs
sbb
inc
xor
inc
arpl
and
insl
inc
pop
hlt
mov
fldl
int3
in
mov
add
testb
or
shl
in
adc
cmc
paddusb
negl
push
in
in
cld
clc
out
sbb
and
out
and
sub
and
xor
sbb
xor
cmp
sbb
daa
sub
sub
or
daa
sub
push
aaa
sub
sbb
sub
push
and
arpl
push
and
mov
in
mov
fsubr
repnz
loope
sar
lret
decb
jecxz
adc
repnz
sbb
fldl
aad
in
add
testl
daa
and
sbb
xor
ss
xor
inc
cmp
xor
daa
or
add
and
and
push
sub
pop
cmp
push
aas
pop
cmp
and
push
and
leave
mov
in
fstpt
std
fildl
out
leave
push
iret
pop
into
ljmp
add
adc
pop
cli
sbb
out
in
das
sub
jmp
sub
cs
or
cmp
xor
pop
adc
sub
sub
daa
dec
dec
sbb
push
sbb
sub
pop
sub
cmp
inc
es
push
pop
push
push
and
pop
cmp
inc
pop
inc
imul
mov
cli
mov
fcom
add
sar
cli
push
jmp
fcmovne
add
repz
div
or
adc
sbb
push
and
cli
add
and
and
in
or
out
sub
repnz
add
notl
pop
cs
inc
cld
add
push
xor
add
and
or
xor
cmp
xor
dec
pop
sbb
sbb
das
push
pop
inc
xor
inc
addr16
insb
inc
lret
repz
out
not
aam
sar
stc
sti
loope
rcr
or
fcmove
cli
add
incl
in
out
sar
out
lret
jmp
or
or
adc
push
and
hlt
and
or
call
or
xor
sub
cmp
xor
adc
pop
sbb
sbb
sub
dec
dec
and
sub
sbb
pop
sbb
xor
dec
cmp
sub
out
fxch
jmp
int
hlt
hlt
add
leave
not
vcvtpd2dqx
loope
or
pop
add
stc
or
sbb
in
adc
loope
sbb
sbb
in
sbb
or
pop
add
adc
or
or
adc
clc
push
push
cmp
inc
add
push
push
and
sbb
dec
push
adc
aaa
dec
pop
sbb
xor
pop
aaa
adc
and
cmp
and
cmp
cmp
sub
into
in
mov
loopne
std
aad
into
in
ljmp
out
in
add
out
imul
add
add
sbb
std
sbb
adc
push
push
es
sub
sub
add
cmc
or
sbb
xor
xor
add
inc
sbb
and
inc
and
sbb
sbb
sbb
aas
inc
dec
and
es
and
bound
mov
std
xlat
fidivrl
shl
mov
leave
int
or
jmp
loop
out
cmc
shl
cli
aad
icebp
fmull
maskmovq
out
push
cli
and
sbb
and
push
ud2
adc
idivb
or
cmp
ucomiss
xor
call
add
cmp
dec
pop
xor
and
xor
adc
sub
adc
adc
pop
ss
inc
cmp
xor
imul
fmul
iret
fdivr
stc
call
ffree
enter
flds
paddusw
loop
or
jecxz
add
jmp
push
sbb
or
jmp
aad
and
loope
sbb
add
stc
sbb
lock
push
pop
jmp
and
or
cmp
cmp
adc
and
or
add
and
and
inc
dec
cmp
es
xor
dec
sub
pop
xor
cmp
cmp
sub
ror
clc
sarl
repz
cmc
shr
xlat
fildl
or
add
cmc
push
in
push
or
fsub
adc
lcall
and
sbb
idiv
or
and
adc
and
adc
cmc
adc
das
inc
add
add
and
sbb
inc
sub
push
or
adc
sub
sub
xor
sbb
and
cmp
cmp
clc
in
call
rcl
in
ret
icebp
loope
enter
fisttps
in
jmp
iret
in
jmp
push
in
or
cld
stc
jmp
pop
icebp
sbb
loop
es
in
and
pop
cs
sub
cmp
das
ss
xor
push
cmp
and
xor
add
inc
and
and
sub
xor
inc
push
push
sub
pop
xor
dec
and
push
xor
pop
and
into
scas
sar
loope
cli
ret
int
hlt
add
or
fninit
add
loop
fsub
fimuls
pop
out
pmullw
or
repnz
sbb
sti
sub
in
clc
psubw
xor
call
pminsw
sbb
pop
cmp
inc
call
inc
and
dec
sub
or
pop
and
or
sub
cmp
sbb
cmp
inc
pop
cmp
push
and
cmp
rcr
mov
mov
fdivrs
clc
icebp
aad
jecxz
out
add
in
fucomp
imul
in
call
push
cmc
fcmovnu
adc
push
pop
pop
notl
add
sub
xor
hlt
xor
daa
push
and
or
sbb
cmc
or
inc
push
xor
adc
xor
dec
dec
sbb
cmp
sbb
inc
adc
cmp
dec
push
xor
sbb
sbb
push
arpl
pusha
cmp
dec
imul
cld
aam
fmul
fldl
clc
ljmp
inc
pop
or
repz
adc
sti
repz
or
pop
and
daa
repnz
sbb
clc
out
cvtpi2ps
or
cmc
getsec
out
and
cmc
cs
inc
sbb
sbb
pop
sub
and
or
inc
inc
and
adc
cmp
and
dec
sub
pop
pusha
inc
inc
inc
pop
push
and
push
dec
inc
es
iret
iret
icebp
fcos
ret
cld
aad
fdivrp
or
or
loop
in
repz
cli
clc
sti
sbb
aad
jmp
in
adc
add
and
out
sti
and
add
adc
xor
pop
pop
sbb
clc
cli
adc
sbb
xor
sub
add
inc
cmp
push
dec
cmp
dec
pop
cmp
sub
xor
push
xor
popa
inc
fs
pop
aas
sub
inc
jmp
cld
into
cli
std
jmp
fucomp
mov
loop
in
add
lock
repz
jecxz
icebp
add
ljmp
cld
lar
in
repz
sbb
sub
out
repnz
adc
xor
daa
notb
cli
sub
and
sub
adc
and
inc
and
and
pop
push
dec
push
sub
cmp
sub
and
bound
es
push
inc
and
inc
neg
clc
repz
mov
mov
mul
lret
into
sti
out
call
aam
sbb
call
sbb
adc
and
sbb
add
sbb
cmp
sub
and
add
sub
dec
xor
and
sub
inc
dec
sub
dec
pop
pop
and
cs
pop
imul
mov
idiv
in
out
lret
fucom
in
loope
cld
push
call
out
or
in
aam
or
aad
in
cli
adc
or
sbb
and
filds
or
out
cli
sub
adc
das
cmp
or
push
inc
and
add
cmp
sbb
sub
cmp
aas
sub
inc
cs
push
dec
inc
aaa
xor
push
popa
sbb
sbb
pop
cmp
dec
daa
stc
out
mov
aam
int3
div
mov
loope
or
or
loop
loopne
int
adc
jmp
push
out
jmp
cld
or
out
pop
and
sbb
pop
pop
out
out
or
sbb
cld
or
sub
xor
adc
cld
sub
clc
inc
add
xor
or
dec
sub
sub
pop
sub
xor
and
and
repz
add
shl
loopne
mov
cli
int3
pop
fiadds
ljmp
sbb
or
in
push
sbb
hlt
add
out
pop
out
mul
jmp
or
sub
and
repz
pop
sub
sub
clc
clc
cmp
xor
sbb
add
add
cmp
and
inc
inc
xor
dec
adc
sub
pop
xor
xor
pop
fs
dec
fs
pop
int
xlat
test
mov
cld
repz
mov
fsub
or
out
loope
repnz
roll
repz
in
fcompl
es
sbb
and
daa
es
adc
or
sbb
sub
and
add
cli
xor
cmp
or
xor
dec
push
push
push
pop
push
push
inc
push
pop
dec
push
pop
push
xor
xor
pop
pop
and
sub
jecxz
into
call
ljmp
cld
lret
jmp
add
adc
out
pop
loopne
rorl
push
adc
push
push
sbb
jecxz
push
stc
loope
sbb
es
and
in
stc
add
and
idiv
sub
or
idivl
std
es
sbb
inc
or
cmp
sub
inc
dec
pop
sbb
push
das
xor
inc
inc
dec
pop
sbb
push
xor
cmp
fidivrl
fld
loope
fdivr
std
loope
sar
in
xlat
cli
or
iret
lret
lret
add
clc
cli
or
or
sbb
pop
decl
sub
xor
adc
adc
adc
sbb
dec
dec
cmp
inc
inc
add
or
adc
dec
pop
pop
xor
push
sbb
push
pop
pop
inc
cmp
cmp
ds
hlt
jmp
icebp
aam
into
out
stc
idiv
in
ret
decb
add
rorb
adc
xlat
clc
jecxz
sbb
push
cmc
sti
cmc
neg
sbb
or
push
std
out
daa
xor
call
call
icebp
xor
das
or
cs
pop
or
adc
sub
sbb
inc
sbb
adc
or
sbb
push
dec
dec
pop
xor
and
sbb
sub
inc
dec
inc
mov
in
mov
stc
aam
add
loop
mov
add
out
repnz
adc
paddusw
and
sbb
sub
or
and
pop
out
stc
clc
repz
adc
xor
xor
sub
xor
ds
sbb
dec
xor
and
push
sub
arpl
cmp
sub
dec
insl
pop
fldz
mov
cli
lret
idiv
shr
stc
out
repz
clc
add
lret
out
notb
jecxz
adc
or
sbb
or
add
sub
add
add
sub
push
add
add
icebp
adc
sbb
push
testl
and
add
ds
dec
cmp
sub
pop
cmp
pop
sub
sbb
push
pop
popa
cmp
sub
xlat
jmp
int3
mov
int3
fdiv
ljmp
add
decb
adc
add
jmp
lock
in
fucom
jecxz
hlt
sbb
cli
pminsw
daa
or
xor
and
cli
ss
adc
aaa
sbb
sbb
push
dec
xor
xor
inc
push
cmp
cmp
dec
pop
cmp
popa
pop
xor
cmp
inc
cli
sarb
std
out
loopne
add
or
sti
ret
ljmp
pmuludq
rorl
rcl
add
testl
frstor
fcompl
loope
and
and
icebp
add
jmp
sbb
sbb
adc
psubd
inc
daa
xor
inc
dec
and
ds
xor
and
sbb
ds
sub
push
arpl
cmp
push
pop
bound
loope
call
in
fdivrp
cmc
stc
cmc
add
lret
enter
pmulhuw
add
adc
add
or
adc
hlt
add
in
and
and
sub
adc
add
out
aaa
or
repnz
xor
adc
or
or
inc
add
dec
inc
dec
sbb
and
xor
daa
xor
sbb
push
cmp
aaa
xor
and
cmp
sub
mov
in
fcmovu
iret
neg
rcr
std
add
idiv
add
aad
push
enter
adc
in
add
imul
aam
rclb
clc
push
push
sti
daa
and
call
sub
adc
das
daa
cmp
sbb
add
add
aas
xor
aas
and
pop
and
or
dec
adc
adc
sub
push
pop
push
aaa
inc
pop
inc
and
push
hlt
ret
cld
scas
icebp
hlt
shl
loope
mov
aam
int
int
push
out
repnz
xlat
add
out
cmc
or
sbb
lock
and
out
std
in
jmp
add
or
adc
cld
cld
idiv
or
or
cmp
adc
inc
and
or
dec
dec
pop
ss
inc
xor
pop
cmp
inc
and
pop
gs
daa
push
cmp
aaa
sub
mov
ljmp
sarb
shr
add
in
enter
adc
rcl
out
repnz
icebp
repnz
add
cld
adc
push
cld
and
xor
sbb
add
or
cs
repz
idivb
sub
cmp
dec
cmp
sub
sub
dec
dec
dec
sub
adc
dec
and
pop
pop
pop
cmp
cmp
fdivrp
jmp
add
enter
int3
jmp
out
loop
jmp
rcl
or
add
sbb
push
sbb
cld
adc
and
sbb
sub
sub
adc
sub
cmp
sti
sbb
cmp
push
inc
inc
adc
dec
adc
inc
push
das
and
cmp
cs
push
push
xor
push
inc
push
sub
sub
pusha
jecxz
mov
mov
fnstsw
fsub
or
or
in
fcmovu
repz
into
icebp
out
push
sbb
adc
and
jmp
and
frstor
or
push
xor
sub
repz
cmp
xor
sub
sbb
push
sbb
aaa
sbb
inc
sub
pop
sub
dec
sub
xor
push
push
push
cmp
push
das
ss
and
inc
push
sub
cmp
fcmovb
repnz
fadd
lret
add
div
push
cmc
loop
or
pop
lret
add
lock
adc
out
fstl
jmp
cmc
fdivp
adc
sti
push
sti
hlt
sbb
jecxz
adc
adc
adc
xor
incb
add
mull
dec
xor
adc
cmp
inc
inc
sub
adc
sub
pop
push
push
sbb
pop
gs
pop
daa
inc
imul
mov
out
sti
xlat
lock
add
vpaddb
out
iret
clc
jecxz
hlt
loopne
loope
jmp
neg
ljmp
out
fldl
sbb
das
sub
adc
repnz
clc
idivl
or
add
adc
aaa
dec
cmp
sub
sbb
xor
push
and
push
xor
cmp
pop
cmp
push
push
fs
pop
cmp
pop
fs
aaa
dec
pop
leave
mov
mov
call
mov
int
ret
sar
add
in
or
adc
add
dec
icebp
out
in
call
stc
and
in
sbb
pop
in
sub
add
xor
adc
sub
sbb
cli
ljmp
and
or
adc
or
dec
and
adc
inc
xor
pop
push
xor
push
sbb
inc
pop
xor
push
mov
cld
out
int3
sti
mov
fsincos
loope
testb
into
fsubr
fimuls
out
or
repnz
call
out
clc
adc
idiv
cli
or
add
add
or
lock
or
or
push
cmp
dec
daa
sbb
inc
sub
and
cmp
dec
sub
sbb
pop
pop
push
cmp
and
imul
inc
jo
idivb
fcos
idiv
push
fdivrs
fsub
xlat
fucomi
loopne
lock
loope
jecxz
icebp
adc
stc
mull
repnz
sti
push
and
push
out
daa
sub
xor
hlt
das
imulb
cmp
and
adc
inc
xor
inc
add
pop
aas
and
cmp
inc
adc
xor
pop
pop
push
arpl
sub
xor
pop
cmp
lods
icebp
in
mov
loop
repnz
stc
ror
fimuls
in
add
rclb
mul
or
repnz
testb
jmp
negl
add
stc
div
testl
cli
and
adc
push
clc
add
sub
stc
or
adc
pop
inc
sbb
pop
add
or
sub
and
dec
dec
pop
xor
push
pop
sub
xor
push
inc
inc
xor
in
mov
lret
into
stc
cmc
add
fadd
std
stc
aad
sti
into
idiv
push
adc
cld
aam
loop
loop
stc
not
fdiv
loop
and
add
sbb
or
ljmp
clc
add
add
or
icebp
stc
stc
adc
adc
add
or
push
dec
xor
sub
dec
and
sbb
sub
xor
cmp
pop
cmp
inc
cmp
jmp
lock
fistpll
testb
jecxz
call
std
adc
fisttpl
add
or
clc
push
fcom
stc
cli
cli
sbb
sbb
std
sub
sbb
and
jmp
add
out
daa
xor
stc
cld
or
and
inc
adc
push
sbb
add
and
aas
pop
inc
inc
daa
pop
xor
pop
cmp
pop
ss
dec
es
push
inc
bound
cmc
out
neg
mov
or
repz
in
std
out
jmp
lock
cli
adc
fmuls
fdivr
sbb
adc
stc
daa
add
std
add
jmp
and
sub
pop
and
sub
adc
cmp
push
sbb
aaa
and
sbb
push
sub
cmp
ds
cmp
ss
inc
dec
push
sub
xor
push
bound
imul
mov
int
aam
in
into
mov
rolb
push
test
repz
ljmp
push
or
in
fimuls
adc
add
sbb
or
sub
xor
invd
out
push
adc
daa
or
cli
and
aas
xor
sbb
and
sbb
xor
sbb
push
sub
pop
and
sbb
pop
dec
sub
cmp
pop
inc
xor
dec
inc
push
daa
ret
in
les
idivb
fsqrt
hlt
clc
cmc
pop
cli
clc
fimull
add
or
rorb
out
adc
lock
sbb
push
adc
add
add
clc
and
and
sub
es
push
sbb
stc
sub
xor
inc
adc
pop
pop
inc
cmovp
and
push
inc
pop
push
inc
dec
and
and
xor
xor
imul
out
lock
leave
leave
loopne
cli
sti
out
stc
fildl
sar
in
add
adc
adc
out
hlt
adc
clc
paddusb
push
cld
in
in
adc
unpckhps
sbb
add
cld
and
sbb
out
sbb
add
repz
and
out
adc
xor
add
and
inc
nopl
inc
or
sub
cmp
adc
adc
sub
dec
sub
das
dec
sbb
pop
bound
inc
pop
push
imul
repz
mov
std
cld
add
in
sti
faddl
ror
adc
loope
out
shr
sbb
clc
hlt
adc
adc
icebp
out
sti
icebp
adc
and
or
or
adc
call
xor
sub
sub
sub
sbb
push
inc
aas
and
inc
add
inc
pop
cmp
or
adc
dec
aaa
cmp
push
push
aas
dec
and
sbb
popaw
fs
cmp
inc
imul
aad
ljmp
stc
mov
fdivrp
in
in
or
fisttps
push
testl
out
out
sbb
sti
sti
jecxz
in
sub
xor
lock
cli
push
aaa
sub
xor
sub
add
sbb
sbb
inc
inc
daa
inc
dec
dec
das
dec
inc
push
inc
cmp
cmp
cs
pop
aaa
das
pusha
cmp
addr16
leave
mov
rcl
mov
add
in
push
out
fmul
pmovmskb
adc
jecxz
add
lock
or
neg
clc
fstpl
out
and
sbb
in
adc
sbb
sti
and
sub
out
jmp
or
sbb
cmp
std
xor
cld
mull
xor
add
inc
sbb
sub
inc
push
xor
daa
sbb
sub
pop
fs
push
xor
cmp
bound
int
mov
lock
jmp
int
icebp
jecxz
imul
call
fcomip
repz
push
or
testl
lock
adc
cld
push
push
clc
sub
push
imul
cvtps2pi
in
or
adc
or
adc
or
sub
pop
adc
inc
inc
and
daa
and
pop
or
inc
sub
xor
dec
dec
and
dec
cmp
pop
xor
and
push
inc
inc
pop
repnz
mov
hlt
neg
aam
add
add
loop
decl
movb
out
push
call
repz
repz
out
and
sbb
std
and
and
sbb
in
and
pop
add
or
syscall
adc
or
stc
xor
cmp
or
negb
sbb
ds
or
inc
sub
xor
and
es
adc
sbb
inc
sbb
pop
inc
and
sub
push
aas
fs
cmc
repnz
fsubrp
loope
loope
in
add
faddp
push
in
testl
or
in
not
xlat
fcmovnbe
jmp
cmc
add
out
sbb
icebp
std
in
sbb
sub
add
out
repnz
and
and
notl
sti
or
and
adc
inc
or
and
inc
xor
inc
dec
pop
xor
adc
push
ss
push
and
push
inc
pop
pop
xor
and
mov
lock
int3
icebp
stc
ret
rcr
add
rol
loope
ret
add
or
repz
repz
in
testl
sbb
adc
out
and
daa
in
sub
adc
push
pop
repnz
sub
sub
add
pop
pop
pop
sbb
daa
or
inc
xor
push
and
dec
dec
sub
push
pop
cs
sbb
and
xor
cmp
dec
pusha
inc
outsl
fnstenv
mov
repz
filds
hlt
pop
pop
in
ljmp
in
lock
aad
or
push
push
cli
movhps
psubusw
push
clc
mulb
fildll
add
ljmp
add
or
sub
sbb
push
xor
and
sbb
adc
push
add
or
inc
or
or
sbb
sbb
adc
cmp
popa
pop
push
push
pop
inc
pop
pop
inc
sub
jmp
enter
mov
iret
add
pop
add
call
in
adc
rorl
fucom
aam
adc
or
cli
jmp
out
out
icebp
lock
adc
jmp
out
or
pop
sbb
or
adc
cmp
cmp
and
xor
and
adc
add
pop
cs
or
inc
dec
daa
adc
dec
adc
pop
aaa
xor
xor
and
xor
xor
imul
mov
out
std
mov
fcomp
fiaddl
icebp
xlat
or
cld
jmp
into
push
adc
or
rorl
stc
ficompl
adc
push
and
and
push
and
std
or
out
add
sbb
adc
add
sbb
daa
and
or
cmp
dec
and
adc
push
cmp
xor
and
bound
insl
inc
arpl
ds
sti
mov
clc
bnd
rcr
faddl
fucomi
fcomp
in
int
jmp
adc
sbb
sti
adc
por
loop
push
fsubp
loopne
push
adc
repnz
add
lock
xor
pop
and
xor
cld
cmova
aas
inc
dec
xor
inc
and
inc
or
ss
dec
push
pop
sub
inc
sbb
cmp
es
inc
push
cmp
inc
cmp
jmp
fucomip
mov
add
ret
loope
fldl2e
xlat
or
push
cld
icebp
in
or
or
adc
adc
sbb
in
pop
sbb
clc
in
sbb
icebp
icebp
add
add
or
sbb
or
std
ds
stc
xor
inc
or
pop
push
xor
dec
ds
das
and
sub
popa
pusha
cs
push
cmp
ss
daa
push
pop
inc
data16
rcl
jmp
fcmove
ret
lock
mul
ret
lret
enter
loopne
add
cli
int3
adc
jmp
sbb
pop
and
sbb
sbb
or
out
and
adc
and
xor
or
daa
cmp
pop
sti
adc
adc
add
add
push
cmp
cmp
xor
push
xor
adc
sbb
xor
cmp
push
aaa
pop
das
fs
xor
ss
iret
aad
into
lock
cld
mov
in
xlat
pop
call
enter
jecxz
push
rclb
or
notb
push
pop
pop
fistl
adc
push
adc
std
sti
add
loop
sub
call
or
adc
push
add
daa
hlt
pop
adc
stc
sbb
ds
add
inc
and
adc
and
das
dec
sub
aaa
aaa
pop
dec
cmp
pop
fs
pop
cmp
gs
aaa
and
sub
shr
leave
mov
stc
mov
leave
add
aam
testb
add
jecxz
int3
jecxz
or
out
out
fistps
out
fists
pop
pop
sbb
add
pop
cli
out
add
out
ljmp
xor
cmp
xor
cmp
cmp
adc
dec
sub
adc
xor
cmp
adc
or
dec
sub
dec
pop
pop
cmp
dec
pop
inc
inc
sub
aaa
cmp
dec
out
in
mov
jmp
hlt
add
shl
sar
out
mov
out
or
add
add
aad
adc
cld
fprem1
sbb
movntq
hlt
sub
jmp
out
push
out
cld
sbb
and
sub
repnz
repnz
ucomiss
sub
aas
cmp
cmp
xor
or
inc
pop
dec
push
adc
push
pop
sbb
daa
sub
push
xor
push
pop
pop
push
fs
outsl
dec
mov
out
scas
sti
mov
leave
fxtract
not
mov
sarl
out
add
add
push
in
hlt
into
loop
jmp
icebp
icebp
or
testb
loope
push
push
cli
pop
sbb
add
and
adc
out
xor
sbb
or
cmp
sti
stc
std
cmp
add
ss
push
sub
adc
push
xor
sub
cmp
cmp
push
aaa
push
pop
pop
inc
xor
inc
pusha
gs
frstpm(287
xlat
cmc
mov
ret
into
fsincos
aad
rol
add
cli
pop
ljmp
in
or
rcll
pop
cld
jmp
adc
sbb
sbb
sbb
adc
sbb
sub
sbb
daa
add
push
sub
push
and
and
xor
and
sub
daa
sub
push
push
dec
aaa
and
sbb
push
dec
dec
dec
inc
sbb
inc
aaa
pop
and
push
daa
popa
dec
pop
imul
out
repz
filds
add
add
in
jmp
hlt
not
adc
imul
adc
or
or
idiv
adc
sbb
add
or
and
std
xor
adc
das
sub
adc
stc
xor
push
dec
inc
inc
dec
sbb
or
adc
xor
push
ss
sub
push
and
inc
push
push
pop
inc
sub
mov
mov
icebp
fistpll
fmulp
jecxz
jmp
leave
or
adc
jmp
in
add
or
sbb
jmp
fcomp
add
sbb
ficomps
sbb
out
cs
add
icebp
or
xor
sbb
pushl
es
or
and
xor
push
pop
sub
pop
xor
cmp
xor
inc
pop
sbb
insl
aas
cmp
push
mov
int
iret
in
mov
in
lret
or
movl
in
sbb
add
fdiv
push
filds
cmc
and
in
or
or
in
testb
pop
divl
clc
stc
xor
aas
adc
inc
xor
inc
inc
or
sbb
or
xor
cmp
push
sub
cmp
xor
pop
xor
cmp
pop
pop
cmp
insb
outsl
int
repnz
lret
loope
iret
add
call
sti
out
or
add
lret
int3
int
in
cli
neg
add
adc
and
sbb
sbb
add
adc
or
sbb
stc
adc
pop
push
cmp
sbb
cmp
or
sub
cmp
aaa
inc
dec
cmp
dec
cmp
sub
pop
push
inc
push
inc
xor
imul
mov
add
shl
rcr
aad
mov
or
roll
ljmp
jecxz
sbb
por
sbb
out
out
sub
and
cld
sti
and
and
repz
mulb
cmp
sbb
xor
dec
xor
inc
pop
sub
pop
sub
adc
push
pop
sbb
push
cmp
push
pop
pop
inc
and
fs
pop
loope
int
mov
int
in
fdivr
loope
mov
push
add
bswap
lock
jecxz
adc
sar
push
fstp
adc
sti
loopne
add
add
adc
in
and
sub
repnz
and
das
or
aaa
cld
negb
sbb
or
add
or
and
and
push
daa
inc
pop
adc
pop
sub
sbb
pusha
and
cmp
cmp
rol
lock
hlt
jmp
ljmp
loope
std
or
pop
or
add
in
repz
int
adc
std
push
call
stc
sbb
and
pandn
icebp
in
ljmp
and
sub
xor
xor
or
xor
das
adc
cli
aas
cmp
adc
dec
sbb
ds
xor
cs
pop
inc
xor
pop
dec
dec
cmp
sub
and
cmp
pop
inc
rol
int3
mov
clc
fsub
fdiv
fst
jmp
ljmp
add
or
or
call
repz
add
add
or
clc
push
out
jmp
or
repnz
sbb
and
ss
pop
ds
sub
cmp
das
push
push
dec
dec
adc
sub
push
dec
aas
xor
pop
xor
and
gs
cmp
in
out
std
int3
in
xlat
into
int3
int3
mov
out
fld
loopne
jecxz
or
stc
in
not
stc
sbb
or
sbb
icebp
or
jecxz
and
sub
sub
adc
add
xor
or
sub
das
sbb
es
and
and
or
ds
xor
and
sub
push
push
push
xor
inc
cmp
daa
pop
inc
inc
imul
rolb
shl
push
icebp
repnz
fmul
enter
fimuls
fsub
adc
add
repz
sbb
hlt
out
cmc
adc
jmp
in
or
sub
xor
adc
or
sub
aas
sbb
adc
add
adc
push
mov
and
push
push
sub
pop
push
pop
cmp
xor
inc
arpl
and
sub
es
jmp
ljmp
in
icebp
inc
ljmp
jecxz
push
adc
repz
call
notb
loop
and
hlt
add
bndstx
or
push
cmc
or
xor
xor
sbb
add
cmc
xor
inc
cmp
inc
sbb
dec
and
sbb
dec
pop
sub
aaa
push
cmp
pop
pop
inc
inc
cmp
gs
push
and
arpl
outsl
scas
out
test
dec
lock
mov
in
fdivr
int3
jmp
push
or
repz
adc
ljmp
fucomi
sti
cld
cli
and
and
or
push
sub
out
sub
add
xor
adc
icebp
xor
push
sub
xor
aaa
sbb
adc
sub
cmp
push
sbb
sbb
pop
dec
xor
sbb
push
push
push
xor
xor
cmp
push
pop
pop
pop
sub
cmp
push
ljmp
fdivrp
shl
std
movb
jmp
in
ret
out
pop
rorb
iret
push
or
or
cld
stc
in
out
or
out
or
and
cli
add
push
add
das
push
and
pop
or
xor
cmp
and
add
dec
sub
and
cmp
es
sbb
pop
push
sub
sub
inc
push
push
das
push
cmp
dec
dec
inc
cs
ret
ret
iret
out
lret
sar
mov
cld
hlt
sar
out
enter
sti
jmp
push
adc
notb
fsub
sbb
adc
jecxz
cli
stc
and
stc
daa
or
and
push
jmp
pop
push
das
xor
xor
sbb
dec
sub
sbb
inc
adc
push
push
push
prefetcht0
adc
ds
das
dec
and
push
bound
push
xor
sub
pop
inc
cli
fidivl
fcomi
int
fpatan
repnz
mov
or
add
jmp
or
shr
adc
out
cld
in
in
ljmp
jecxz
clc
and
loop
and
repnz
adc
repz
in
negl
inc
cli
sbb
add
pop
pop
daa
sti
and
sbb
sbb
adc
adc
aas
adc
pop
xor
dec
popa
push
dec
xor
fs
push
fs
pop
dec
leave
in
iret
jmp
fcmovnbe
icebp
hlt
decb
fsubp
sar
jmp
out
add
pmuludq
or
fdivr
mul
adc
or
ljmp
pop
call
in
ljmp
ss
adc
pop
adc
es
adc
or
inc
pop
adc
sbb
pop
xor
or
xor
and
xor
push
inc
pop
sub
push
sbb
xor
pop
cmp
cmp
dec
pop
sub
in
jmp
lock
in
mov
out
jmp
adc
loope
adc
push
jecxz
or
in
or
std
out
or
es
add
pop
stc
push
add
sbb
clc
cmp
sbb
cmp
add
cmp
cmp
or
dec
cmp
sbb
sub
pop
inc
pop
dec
pop
cmp
pusha
dec
xor
sbb
push
and
inc
sub
aad
cld
lret
rcl
mov
add
test
out
call
hlt
mul
rcl
cld
sti
aad
and
push
sbb
add
adc
fdivp
and
or
out
or
jmp
pop
add
add
xor
adc
ds
cmp
and
cmp
dec
dec
dec
sbb
pop
inc
and
push
or
push
push
pop
pop
sub
xor
bound
xor
and
push
sub
pusha
inc
inc
data16
ret
repz
fdivrs
les
shl
fsub
in
out
fsub
or
out
push
repz
loope
out
adc
call
add
repnz
and
push
sub
jmp
out
add
adc
xor
and
or
adc
add
xor
add
and
sbb
sub
sbb
inc
cmp
push
adc
and
and
sub
cmp
popa
cmp
inc
inc
inc
push
push
arpl
sub
jmp
cli
mov
sar
mov
add
or
jecxz
leave
call
shl
add
sbb
add
adc
push
adc
lock
loop
out
sbb
sbb
xor
daa
xor
repz
push
sub
cld
xor
cmp
and
sbb
or
inc
cmp
dec
push
push
xor
adc
cmp
dec
inc
dec
xor
sbb
push
push
inc
push
dec
gs
out
lods
out
fcom
mov
repnz
fsub
cld
mov
lock
loop
into
rorb
shr
adc
cmc
pop
repz
fstp
div
and
add
fistl
loop
call
ljmp
cs
xor
cmp
cs
or
ss
ss
or
inc
and
push
sbb
xor
sub
aas
and
cmp
pop
addr16
mov
sti
mov
cmc
mov
shl
fadds
cli
mov
into
out
lock
jmp
in
sbb
jmp
xlat
pop
lock
loop
fsub
loope
imul
sub
and
sub
or
push
movlps
lock
cli
cli
sbb
sub
sbb
xor
sbb
push
inc
das
inc
inc
aas
dec
inc
das
sub
and
daa
cmp
cmp
pusha
dec
cmp
and
sub
pop
dec
jmp
ret
repz
out
fldl
rcr
fyl2xp1
rcl
call
fsubr
filds
int
jmp
in
adc
or
cld
hlt
loopne
and
sub
out
xor
add
repz
pop
comiss
aaa
sub
or
sbb
xor
inc
xor
inc
sub
or
sub
inc
adc
dec
sub
sbb
dec
dec
dec
sub
and
xor
pop
cmp
pop
push
pop
inc
jecxz
fdivr
mov
mov
in
mov
rorl
or
add
or
lret
push
adc
cmc
out
icebp
fimull
stc
sbb
add
sub
icebp
in
or
sub
imull
sub
adc
sbb
xor
and
and
ds
dec
das
inc
inc
inc
or
push
cs
dec
pop
dec
pop
pop
sbb
pop
cmp
xor
dec
dec
aas
pop
fs
int3
rol
jmp
fcmove
mov
out
pop
cld
hlt
jmp
call
enter
or
hlt
icebp
not
call
repnz
jmp
adc
add
repz
sti
push
sti
pop
pushl
sub
jmp
and
add
hlt
sub
es
sbb
das
and
cmp
add
and
sbb
daa
xor
push
push
and
aaa
pop
dec
dec
adc
ss
pop
cmp
pusha
push
cmp
popa
pop
daa
outsb
aas
inc
push
shl
imul
out
mov
cmc
fcmovnbe
icebp
aad
pop
loope
or
pop
or
adc
push
adc
fcoms
jmp
add
stc
ficomps
add
sbb
push
in
sbb
and
and
daa
or
add
ss
add
add
das
sbb
and
sqrtps
sub
adc
push
pusha
and
push
push
inc
aaa
pop
pop
xor
inc
cmp
push
ljmp
shl
fstp
xlat
ret
out
enter
iret
repnz
or
or
out
ljmp
loope
sbb
repz
sti
sub
xor
sub
xor
or
repz
or
cmp
xor
or
sub
inc
and
inc
or
xor
and
sub
pop
and
push
pop
push
push
imul
rcl
repz
mov
ret
idiv
or
jmp
or
out
adc
ficoms
out
adc
sbb
adc
add
and
cld
sub
xor
sbb
or
adc
sbb
sub
aaa
adc
sbb
sbb
cmp
and
inc
adc
cmp
dec
xor
xor
dec
push
pop
pop
and
xor
push
cmp
icebp
out
mov
faddp
icebp
sti
out
add
loopne
leave
hlt
add
std
in
or
cld
aam
lock
or
fdivr
fsubr
imul
std
sbb
cmc
push
sbb
in
cs
adc
call
or
add
adc
psadbw
hlt
sbb
sbb
adc
inc
inc
ds
sub
adc
push
inc
pop
inc
sub
push
xor
ss
cmp
xor
sub
insb
jmp
shl
ljmp
mov
add
add
in
in
pop
or
adc
incl
neg
testl
add
pop
ljmp
or
or
adc
add
sub
or
and
sub
push
and
xor
ss
sbb
ss
push
addr16
pop
inc
xor
outsl
dec
leave
mov
shl
int3
std
mov
mul
movb
jmp
in
pop
or
in
testb
sbb
ljmp
and
out
and
jmp
and
and
and
out
cmc
add
sub
std
sbb
push
aas
adc
adc
cmp
or
sub
push
push
and
and
cmp
push
xor
aaa
sub
push
xor
cmp
xor
inc
outsb
repz
in
mov
fcmovnbe
repz
hlt
clc
clc
xlat
xlat
in
movl
repz
ror
push
into
push
adc
fadds
cmc
in
in
in
sbb
add
std
sub
or
sbb
in
repnz
sub
or
adc
add
cmp
adc
sub
sub
xor
dec
sub
inc
inc
xor
dec
dec
xor
push
xor
pop
sbb
and
pop
inc
fs
pop
hlt
into
int
aad
lret
lret
cli
xlat
add
repz
aam
ffree
cld
filds
fsubrp
into
ror
icebp
call
fsubr
or
adc
in
add
jecxz
adc
adc
clc
loop
out
or
sbb
push
or
es
cld
xor
or
adc
and
xor
sbb
cmp
inc
sub
das
xor
cmp
sbb
sub
sbb
push
pop
pop
sub
cmp
inc
inc
dec
inc
cmp
lret
lock
repnz
jecxz
in
add
sti
inc
add
add
add
sar
out
adc
push
cmc
add
sti
add
push
ficomps
cld
add
incl
push
loopne
in
add
in
sub
adc
out
add
adc
pop
pop
sti
aas
add
adc
cmp
dec
cmp
inc
cmp
push
dec
sbb
or
cmp
sbb
dec
cs
pop
pop
and
pop
and
sub
inc
cmp
sub
iret
out
mov
shl
clc
iret
aad
clc
sar
push
testl
adc
cmc
loopne
shl
cmc
hlt
or
adc
push
push
stc
cld
or
ljmp
and
es
imulb
unpckhps
pop
stc
or
xor
adc
sbb
sbb
xor
xor
sbb
sub
push
push
push
aaa
pop
pop
dec
dec
dec
pop
insl
mov
out
mov
incl
mov
sti
lret
fcmove
enter
ror
push
loop
out
out
ficomps
and
add
std
and
in
and
sbb
or
sub
in
adc
das
sbb
xor
aas
sbb
or
cmp
sub
and
xor
push
pop
pop
pop
dec
and
cmp
pop
aas
and
es
insb
dec
sub
jmp
mov
ret
sar
fsub
not
clc
push
cli
in
repz
in
or
xlat
adc
xlat
repz
out
aad
adc
cld
testl
push
negb
or
add
and
or
and
sub
or
xor
inc
xor
sub
dec
push
cs
dec
es
sub
das
pop
es
dec
dec
pop
dec
popa
cmp
cmp
cmp
dec
inc
pop
iret
repz
fst
rcl
fdivr
fcmovnu
lret
enter
out
repz
or
adc
adc
sbb
fcomp
sbb
and
add
push
testl
out
in
add
icebp
or
adc
sub
std
push
push
and
inc
inc
pop
cmp
dec
sbb
and
inc
xor
inc
adc
cmp
push
xor
cmp
cmp
sub
insb
insl
pop
pusha
daa
into
fcmove
xlat
ljmp
clc
aad
shl
repz
neg
filds
loopne
add
testb
adc
sbb
and
sbb
cld
sti
push
repz
sbb
cli
add
sbb
or
add
adc
add
aas
add
inc
ljmp
push
and
and
inc
push
adc
dec
and
inc
cmp
dec
cmp
pop
sub
data16
cmp
and
iret
in
jmp
mov
shl
rorb
shl
add
jmp
enter
adc
out
or
jmp
loope
and
es
and
std
out
jmp
es
or
sub
xor
or
sub
cli
adc
aas
inc
dec
and
inc
sub
adc
dec
inc
sub
push
xor
xor
xor
pop
xor
and
insl
sub
call
frndint
lret
ljmp
aam
fsubr
out
out
decb
or
in
add
iret
or
or
add
hlt
out
add
sbb
or
repz
and
add
and
and
cmp
and
dec
or
aaa
sbb
dec
and
xor
sub
inc
push
inc
adc
sub
aaa
xor
cmp
pop
inc
and
addr16
aam
out
hlt
rolb
rcr
inc
cmc
add
jmp
out
int3
adc
loopne
loope
testb
out
adc
push
loopne
add
jecxz
out
sbb
and
in
notl
aaa
adc
adc
aas
negl
xor
sbb
add
adc
or
add
inc
sub
inc
or
and
xor
dec
sbb
pop
push
das
cs
push
arpl
ss
rcr
int3
out
mov
fadd
in
add
out
out
fxam
adc
pop
ljmp
in
adc
aam
out
cli
adc
or
sub
hlt
es
push
sbb
pop
pop
or
xor
sub
xor
inc
inc
cmp
das
sbb
adc
and
inc
and
and
xor
aaa
inc
cmp
sub
sbb
dec
push
cmp
daa
and
push
pop
sub
dec
inc
ljmp
lock
in
loop
in
aad
fdivp
or
fsubrp
loopne
hlt
fsub
out
rcl
pop
add
repz
fsts
push
in
and
in
sbb
push
pop
pop
testl
and
and
pushl
sbb
adc
adc
cmp
ds
and
or
push
inc
xor
daa
xor
dec
xor
xor
dec
pusha
push
sub
cmp
inc
cli
aad
into
repz
int3
in
shr
cld
fdiv
iret
enter
enter
std
out
testb
clc
cli
or
jmp
and
clc
cld
adc
or
push
jmp
das
push
adc
sbb
or
xor
aaa
xor
sub
cmp
cld
aaa
xor
and
and
xor
inc
push
sbb
dec
dec
dec
dec
es
pop
adc
dec
push
aaa
popa
cmp
cmp
push
and
dec
imul
hlt
clc
mov
stc
cmc
out
fsub
in
std
push
clc
icebp
loopne
or
sti
cli
add
or
lock
rclb
lock
adc
fcmovbe
and
repnz
sbb
and
and
add
pop
clc
sub
cmp
sbb
and
inc
xor
push
add
incb
inc
or
and
inc
inc
adc
and
dec
sbb
popa
push
dec
bound
inc
popa
inc
inc
pop
arpl
addr16
jecxz
sarl
add
stc
int3
mov
mov
lret
fildl
incb
neg
adc
adc
adc
fistps
sti
add
in
daa
in
or
and
lock
out
ljmp
cmp
adc
inc
and
sub
sub
dec
inc
inc
inc
adc
push
and
inc
push
push
cmp
dec
pop
pop
pop
pop
push
push
pop
cmp
inc
cmp
aaa
arpl
fdiv
leave
in
mov
mov
mov
inc
leave
or
lret
enter
adc
ljmp
loop
repnz
adc
repz
and
or
xor
or
xor
psubd
adc
cmp
push
add
ss
or
inc
aaa
inc
das
es
adc
cmp
and
pop
dec
pop
xor
aaa
pop
and
pop
sub
jmp
ror
icebp
lret
ror
mov
lock
or
pop
stc
add
add
hlt
ljmp
pop
cmc
sbb
in
repnz
adc
repz
or
sbb
and
add
out
add
lock
adc
xor
cmp
xor
adc
ds
daa
push
sbb
dec
sub
dec
inc
sub
inc
pop
pop
pop
sub
bound
push
fs
push
sub
out
fpatan
jmp
not
rcl
stc
add
push
enter
call
add
loope
int
fsub
out
repnz
push
adc
sti
repz
and
add
fildll
push
xor
out
and
or
xor
repz
add
pop
adc
sbb
daa
cmp
cmp
adc
dec
adc
das
dec
push
push
ds
dec
xor
das
xor
pusha
insl
and
push
mov
cld
add
mov
fcmovnbe
add
in
shlb
arpl
xor
aaa
xor
aaa
xor
xor
xor
outsl
ja
xor
hlt
cwtl
mov
adc
fdivrs
inc
inc
sub
add
in
add
push
aad
and
adc
psubsw
or
out
cmc
adc
push
stc
add
add
sbb
div
in
push
add
in
xor
adc
sub
and
adc
cmp
cmc
sbb
and
aaa
pop
sbb
or
sbb
das
and
dec
sbb
sub
push
xor
push
arpl
cmp
sub
sub
mov
mov
repnz
mov
loop
add
not
rol
or
out
jmp
cld
or
adc
aam
out
or
imul
sbb
hlt
in
and
and
cld
out
and
add
adc
adc
inc
ds
push
ds
and
sbb
dec
sbb
inc
sbb
adc
pop
sub
dec
pop
cmp
pop
push
aaa
xor
bound
arpl
neg
aam
into
stc
ret
iret
loope
testl
out
add
or
pop
out
cli
lock
repz
pop
adc
add
or
ljmp
in
in
icebp
icebp
daa
xor
cmp
adc
pop
inc
push
xor
inc
aaa
xor
add
and
inc
or
dec
inc
push
and
pop
sbb
pop
adc
ds
sbb
pusha
and
cmp
imul
mov
out
hlt
std
fstp
or
int
in
or
xlat
adc
lock
sbb
and
add
jmp
add
and
cmp
cmp
das
std
xor
inc
aaa
sbb
pop
cmp
inc
dec
cmp
dec
das
sub
adc
sub
push
cmp
push
cmp
popa
push
pop
ds
inc
arpl
sub
fnstenv
cli
fcomp
stc
push
ret
or
enter
int
in
add
adc
in
or
adc
adc
or
jmp
cli
filds
or
negl
adc
xor
bnd
sub
and
nopl
and
add
daa
cmp
xor
xor
xor
sub
adc
arpl
arpl
dec
cmp
pop
push
outsb
sub
ror
int3
fidivrs
fsubr
fadds
loope
add
cld
fmulp
in
iret
adc
rorb
sar
adc
lock
push
or
and
sbb
stc
call
sbb
daa
pop
push
das
es
cmp
sbb
sub
or
cmp
std
cmp
adc
sbb
add
das
sub
cmp
push
aaa
dec
and
and
pop
pop
cmp
inc
push
and
push
data16
lock
mov
fcmovb
sti
mov
aam
in
or
or
aam
icebp
ljmp
adc
lock
or
sub
sub
pop
add
adc
out
out
sub
adc
and
cmp
and
pop
or
sub
push
es
adc
and
inc
push
push
xor
dec
push
sbb
cmp
xor
sbb
and
push
inc
inc
push
inc
arpl
pop
cmp
ret
mov
jmp
fadd
cld
les
fiaddl
fprem
jmp
add
shl
out
ljmp
repnz
sbb
push
pop
cld
xor
add
and
xor
sbb
adc
cmp
push
and
push
add
sbb
and
pop
sub
pop
push
push
pop
dec
pop
pop
pop
cmp
inc
push
popa
dec
pop
and
inc
imul
neg
aad
in
in
call
test
hlt
imul
rclb
pop
out
icebp
sbb
push
adc
adc
sub
lock
or
std
sbb
inc
adc
and
ss
inc
and
dec
inc
sub
or
push
and
push
xor
inc
cmp
dec
push
xor
pop
inc
dec
cs
ds
inc
cmp
dec
sub
mov
rcr
std
add
icebp
push
mov
or
loopne
filds
rol
fisttpll
adc
out
loope
sbb
out
out
fucomi
pop
sbb
out
sbb
decb
and
sub
std
xor
xor
das
icebp
adc
or
sbb
cld
and
pop
cmp
sub
and
or
sub
aas
inc
sbb
and
push
daa
insb
mov
fcmovbe
mov
mov
mov
add
or
into
lret
add
jecxz
or
pop
notl
sbb
unpckhps
testb
sti
fdivp
in
incl
repz
pop
push
or
in
adc
in
lock
cmp
aaa
sbb
cmp
adc
inc
xor
inc
adc
sub
or
cmp
and
das
adc
cmp
sbb
aas
and
cmp
pop
cmp
inc
pop
addr16
pop
gs
lret
shl
lock
idiv
add
in
in
pop
repz
push
out
add
or
rcll
rorl
rclb
aad
bnd
sti
push
add
push
sbb
and
sub
hlt
add
clc
xor
adc
or
sub
adc
pop
and
push
dec
aaa
sub
push
and
dec
sub
and
das
sbb
dec
gs
push
and
sub
push
insl
pop
daa
mov
mov
iret
rol
sar
icebp
call
out
movb
or
repnz
aam
rclb
sbb
push
adc
jmp
in
std
lcall
out
add
ljmp
out
sub
xor
inc
cmp
cmp
adc
pop
sub
or
push
rdpmc
xor
dec
cmp
dec
pop
pop
sbb
and
cs
inc
push
xor
inc
inc
dec
dec
bound
fcmovne
jmp
into
hlt
neg
sti
in
cld
loop
add
or
call
stc
or
in
rcrl
fdivr
loop
adc
add
sbb
jmp
repnz
sbb
adc
cs
sti
add
inc
cmp
inc
dec
push
inc
inc
cmp
sbb
dec
push
adc
xor
pop
and
popa
and
bound
cmp
ror
mov
bnd
cli
sti
sti
sarb
enter
out
adc
int
jecxz
pop
out
fldz
iret
out
ficompl
aad
loopne
sbb
pop
clc
loop
sbb
add
sbb
sub
push
and
es
sub
adc
adc
sti
add
cs
cmp
dec
push
sub
sub
sbb
pop
adc
xor
pop
xor
cmp
sub
mov
repz
test
out
sti
out
clc
fcmovnu
push
loope
out
std
call
cmc
fsubr
cli
or
adc
hlt
add
and
cmc
std
incb
icebp
add
adc
das
das
adc
and
xor
xor
add
adc
sbb
dec
inc
cmp
dec
xor
and
dec
push
dec
sbb
push
xor
aas
xor
sbb
xor
pop
inc
inc
inc
icebp
stc
cli
lret
mov
loopne
out
in
push
loop
cmc
or
or
add
aad
adc
call
idiv
add
repz
in
and
sbb
sub
sub
cmp
xor
incl
aas
dec
and
add
dec
aas
or
ds
and
sub
xor
dec
cmp
xor
inc
dec
dec
imul
into
out
imulb
sar
add
incl
fcomi
in
neg
ljmp
pop
out
add
hlt
sbb
pop
add
pop
idiv
adc
adc
or
and
sbb
in
cs
xor
or
icebp
or
hlt
sub
pop
push
sbb
or
pop
sub
inc
cmp
adc
xor
pop
cmp
sub
cmp
xor
data16
fs
repnz
jecxz
sti
out
test
std
fmull
out
in
or
cli
lret
out
add
loopne
or
aam
or
notb
cli
hlt
in
jecxz
cld
ljmp
daa
pop
pop
cs
xor
and
cmp
xor
cmp
inc
add
sbb
push
push
or
cmp
ss
xor
sbb
xor
pop
pop
aaa
xor
sub
sub
cmp
ret
mov
shl
in
fcmovnu
out
push
aam
leave
jecxz
out
shr
lock
int
adc
or
and
adc
std
fistl
out
daa
and
sub
and
ljmp
daa
pop
psadbw
adc
ss
sbb
adc
cmp
dec
sbb
push
sbb
push
cmp
adc
cvtpi2ps
cmp
sbb
push
cmp
inc
dec
aas
inc
sub
pop
into
hlt
fnstenv
rcr
mov
lock
cli
cmc
flds
adc
push
loope
loope
in
repnz
rorb
or
adc
adc
loop
sub
stc
sub
daa
or
sub
or
ds
pop
sbb
sbb
sub
cmp
dec
es
xor
inc
inc
inc
cmp
cmp
xor
sbb
inc
xor
push
cmp
shlb
shr
stc
mov
cli
rol
flds
movups
loop
push
or
adc
or
icebp
fcom
fsub
adc
icebp
pop
add
jmp
out
sbb
or
repnz
sti
sub
or
ss
cmp
es
dec
or
or
inc
adc
inc
xor
adc
inc
adc
adc
cs
ss
inc
pop
cmp
xor
gs
addr16
inc
and
in
lret
rcl
mov
iret
ror
loopne
aam
fnstsw
or
int3
loope
or
out
add
adc
adc
or
add
adc
adc
and
sbb
and
sbb
jmp
xor
and
add
push
sbb
decl
sub
aaa
push
push
aas
inc
adc
and
and
push
push
cmp
and
xor
and
xor
dec
aaa
push
push
cmp
popa
addr16
arpl
imul
lock
aad
in
int3
in
mov
fsubrp
push
add
out
adc
fldlg2
adc
sti
sbb
add
fldl
sub
clc
sub
add
sub
adc
repz
hlt
sub
sti
adc
inc
add
inc
sbb
dec
push
dec
and
and
or
push
dec
and
pop
sbb
sbb
bound
pop
and
arpl
cmp
cmp
fcomp
call
int
icebp
clc
add
loop
ror
or
loope
repz
sbb
loope
in
cld
and
cli
and
sbb
in
adc
and
icebp
out
and
add
xor
cmp
add
sub
es
cmp
or
or
push
adc
cmp
dec
inc
inc
xor
push
dec
xor
addr16
jmp
clc
mov
sti
stc
mov
cld
loopne
fsubr
ljmp
adc
or
bswap
clc
sti
cmc
cld
push
shl
out
lcall
sbb
push
fisubrs
jecxz
out
sub
sub
and
or
ljmp
sbb
push
sub
es
es
sbb
add
sub
xor
sub
and
dec
pop
pop
pusha
pop
dec
cmp
and
cmp
push
cs
mov
mov
out
mov
add
in
push
fmulp
mul
jecxz
pop
dec
rolb
call
hlt
cli
ficompl
pop
cli
adc
or
sub
add
adc
cmc
sub
es
cmp
ds
inc
and
cmp
sbb
aaa
sub
ds
adc
push
inc
sbb
cmp
dec
ss
sbb
cmp
dec
inc
bound
dec
inc
shll
xlat
int
filds
pop
movb
out
jmp
jmp
pop
shr
out
or
or
out
repz
es
and
out
add
jecxz
add
xor
adc
out
push
icebp
cmp
push
sbb
sbb
aaa
adc
add
std
pop
or
cmp
inc
dec
push
das
push
push
and
pop
sbb
push
pop
pop
pop
cmp
dec
inc
push
cmp
pop
pop
dec
push
jmp
mov
shr
fcmovbe
int
fiaddl
aad
out
fcmovbe
or
or
in
std
shl
adc
out
fsubr
repnz
fisttps
push
pop
loop
or
daa
in
ljmp
adc
pop
or
sub
std
cli
adc
add
add
add
sbb
cs
and
xor
dec
dec
push
pop
push
xor
inc
pop
fs
and
push
daa
inc
dec
pusha
inc
repz
out
aad
add
add
loopne
add
out
sti
add
into
repnz
or
adc
push
fsubr
loope
icebp
and
in
or
add
sub
out
or
adc
add
or
or
adc
adc
and
pop
push
and
and
sub
dec
dec
push
dec
xor
dec
push
pop
pop
push
sub
sub
dec
es
and
and
repnz
int
cld
fcmovne
sti
std
cld
shr
sar
jecxz
call
psraw
repz
add
fcomps
pop
stc
jecxz
sbb
in
pop
or
sti
and
add
and
push
sub
adc
sub
clc
cli
sub
add
add
adc
sub
sbb
sbb
es
sbb
cmp
push
cmp
push
xor
pushaw
cmp
stc
rcr
clc
out
in
mov
out
hlt
mov
mov
into
hlt
add
jecxz
adc
in
out
adc
pop
sbb
sbb
sbb
out
xor
sub
cmc
adc
sub
sbb
sub
sub
cmp
stc
sub
pop
push
pop
daa
xor
sbb
aas
pop
inc
adc
sub
xor
push
sbb
xor
cmp
push
inc
pop
arpl
push
mov
clc
leave
cld
mov
cmc
push
add
icebp
in
out
or
in
int3
cld
loop
incb
adc
push
out
hlt
shl
ljmp
add
stc
push
and
push
pop
ljmp
adc
adc
xor
sub
adc
inc
xor
dec
inc
sbb
or
or
dec
adc
daa
sbb
inc
pop
push
inc
dec
and
push
sub
sub
fcomp
scas
in
mov
clc
loop
rol
out
add
or
lret
xlat
add
add
adc
lock
sbb
clc
push
out
sbb
jmp
cmc
sbb
jecxz
repz
add
and
in
or
or
xor
xor
xor
cmp
cli
pop
sti
cmp
add
adc
inc
inc
daa
sub
sub
cmp
and
push
adc
xor
sbb
das
das
cmp
push
data16
push
addr16
pop
cmp
call
mov
fneni(8087
mov
sarl
jmp
out
cld
pop
push
out
cli
or
jmp
pop
repz
adc
sub
adc
xor
add
adc
and
xor
daa
repnz
sub
and
adc
sbb
add
adc
inc
pop
inc
xor
push
push
sbb
cmp
arpl
and
inc
pop
cmp
ret
mov
jmp
roll
in
shl
leave
add
fmul
out
fisttpl
add
push
jecxz
repz
jmp
pop
adc
jmp
in
pop
sbb
sub
add
repz
or
es
or
aaa
sbb
and
cmp
inc
xor
xor
dec
cmp
add
inc
inc
das
aas
inc
inc
adc
push
dec
inc
adc
cmp
sub
cmp
pusha
pop
aaa
arpl
xor
rcr
cli
shrb
cli
xlat
add
in
int3
fmulp
add
add
add
icebp
push
adc
aad
stc
sbb
fiaddl
lock
repnz
push
cmc
fbld
or
cld
sbb
or
adc
cmc
sub
stc
incb
das
aaa
adc
cmp
inc
dec
adc
push
or
adc
push
sbb
xor
push
cmp
xor
cmp
fcom
stc
call
cld
fdiv
fcmovnbe
in
aad
loope
mov
in
bnd
pmulhw
fcomi
clc
and
and
jecxz
and
out
sbb
add
cli
sbb
or
icebp
add
or
adc
sub
cmp
inc
and
adc
es
inc
sbb
das
dec
xor
push
push
sbb
fs
cmp
push
mov
clc
mov
imul
iret
out
lret
add
testb
ret
aam
stc
int3
or
call
out
shl
repnz
sbb
out
aad
stc
std
call
and
and
or
sub
pop
adc
adc
xor
adc
std
or
cmp
sub
sbb
and
cmp
adc
aaa
push
xor
xor
pop
das
cmp
push
xor
inc
inc
imul
gs
inc
aam
out
aad
loopne
sar
cld
add
ljmp
lock
lock
pop
out
pop
adc
shl
pop
fbld
pop
jmp
decb
or
adc
sub
cmp
cmp
cmp
std
or
inc
push
cmp
sub
dec
push
inc
add
xor
xor
push
dec
sbb
sub
inc
cmp
cmp
cmp
sub
repz
add
clc
ret
in
push
iret
or
add
clc
jmp
cld
jmp
rclb
loope
pop
bnd
pop
icebp
or
fdivp
add
clc
push
cld
repz
cli
and
and
adc
sub
xor
sub
or
sbb
or
cs
and
and
sub
push
inc
xor
sub
push
sub
dec
ss
sbb
and
inc
pop
xor
sub
sub
dec
inc
inc
lret
cmc
enter
int3
mov
aam
mov
fldl
or
iret
adc
repz
in
call
pop
adc
loopne
out
filds
adc
fcomip
frstor
pop
push
sub
out
add
adc
pop
add
stc
sub
cmc
sub
cli
std
adc
and
add
inc
push
cmp
xor
sbb
push
cmp
cs
and
das
and
sub
push
cmp
xor
sbb
pusha
ss
sub
push
inc
int
ror
cld
into
jmp
hlt
lret
jmp
push
shl
add
out
or
fsub
repnz
or
adc
testl
push
sbb
cmc
std
adc
sub
or
and
add
sbb
icebp
sub
xor
cs
sub
aaa
aaa
stc
adc
xor
sub
and
push
or
dec
xor
inc
adc
cmp
sub
dec
push
pop
pop
inc
push
inc
sbb
pusha
xor
insb
cmp
ljmp
add
hlt
in
stc
pop
shl
std
fiadds
out
or
rolb
call
adc
adc
mull
in
testl
out
jmp
adc
imul
hlt
cli
adc
ds
sub
and
cmp
sub
push
dec
inc
dec
xor
push
xor
push
xor
dec
sbb
sbb
sub
push
pusha
bound
sub
lock
mov
xlat
loop
loop
into
fnstcw
lret
add
loope
out
add
loope
add
icebp
sbb
push
sub
loopne
sub
sti
add
cs
push
sub
or
sub
adc
or
cmp
and
add
sub
sbb
sub
push
push
push
inc
xor
cs
dec
push
bound
sbb
pop
and
cmp
inc
sub
mov
fcmovbe
in
sarb
in
rcl
loope
clc
testl
hlt
repnz
add
out
lock
cmc
jecxz
icebp
stc
add
out
jmp
lock
sub
and
xor
cmp
sub
nop
cmp
inc
sbb
dec
sbb
sub
es
dec
pop
pop
pop
dec
das
adc
dec
ds
inc
daa
xor
cmp
pop
outsb
das
imul
iret
fcomi
mov
loop
in
stc
clc
adc
out
int
lret
xlat
sbb
push
in
cld
adc
shll
negl
add
pop
adc
loope
out
ljmp
add
call
adc
or
std
aas
inc
xor
push
aas
inc
inc
sbb
and
adc
cs
cs
adc
pop
das
push
pop
dec
inc
push
cmp
inc
xor
dec
cmp
pop
pop
icebp
xlat
neg
enter
rcr
std
loop
icebp
sar
in
add
iret
icebp
loopne
add
cmc
pop
jmp
adc
or
icebp
std
push
fisttpl
sbb
sbb
and
pop
sbb
sub
out
xor
and
repz
or
sub
sbb
push
aas
inc
adc
cmp
sub
pop
pop
cs
and
sub
das
cs
adc
and
sbb
bound
aaa
push
and
sub
insb
push
push
mov
mov
shr
stc
clc
fdivrp
add
add
jecxz
loopne
add
fiadds
iret
sbb
add
or
sbb
sbb
loopne
pop
add
or
pop
sub
or
or
cmp
sbb
sbb
inc
inc
ss
cmp
sbb
xor
xor
push
das
xor
cs
cmp
adc
pop
push
pusha
pusha
sub
daa
pop
dec
sub
mov
shl
fcmovnbe
loopne
leave
int3
cld
into
stc
jecxz
cld
aad
or
int
or
out
shl
call
rorb
shl
jmp
pop
adc
sbb
clc
push
and
and
and
ljmp
cmc
and
sub
testb
adc
testl
add
sbb
or
dec
adc
dec
cmp
cmp
sub
cmp
pop
fs
and
insb
inc
popa
sub
repz
in
neg
mov
mov
out
aad
add
repz
bswap
adc
sbb
aam
lock
out
sbb
cli
adc
sbb
in
add
negl
sbb
icebp
clc
sub
and
adc
and
aas
push
cmp
dec
and
inc
sbb
xor
das
sub
es
adc
das
pop
sub
pop
pop
cmp
dec
pop
cmp
insb
int3
iret
shlb
lock
mov
fsub
add
pop
jmp
jmp
out
pop
pop
adc
jmp
and
cli
loope
fsubp
and
and
stc
sti
add
and
add
repnz
sbb
out
xor
adc
adc
xor
add
xor
dec
inc
sub
xor
cmp
dec
dec
das
ds
cmp
dec
sub
pop
bnd
fdiv
cli
leave
imul
mov
or
ror
sti
sti
incb
adc
pop
int
sbb
ficoms
pop
loope
add
sbb
sub
or
out
add
sbb
sub
sbb
adc
inc
sbb
inc
sbb
inc
movlps
dec
inc
and
xor
dec
sbb
dec
pop
inc
xor
inc
inc
cmp
and
aaa
outsb
insb
ljmp
mov
hlt
ret
inc
rolb
fisttpll
add
or
loopne
or
adc
out
sti
in
sbb
push
push
loop
sbb
ljmp
sub
sub
or
clc
das
cmp
or
sbb
aas
sbb
and
inc
sub
sbb
sub
sub
sub
pop
sbb
das
push
sbb
fs
pop
and
inc
popa
pop
mov
call
mov
fnsetpm(287
lds
int3
or
out
add
cmc
or
fldlg2
ljmp
repz
jecxz
and
or
daa
or
adc
and
cmp
aaa
daa
das
push
xor
add
inc
cmp
and
xor
or
dec
xor
sub
sbb
push
push
sub
fs
arpl
push
inc
sub
cmp
enter
jmp
shl
shl
mov
repz
loopne
fldl
or
push
aam
imul
or
repnz
lock
sbb
std
or
or
and
adc
es
xor
pop
push
adc
cmp
cmp
dec
sbb
es
femms
dec
xor
xor
adc
cs
push
popa
xor
xor
push
push
dec
inc
sub
mov
ljmp
cli
or
fadds
or
out
fsub
int
or
out
clc
or
ficompl
pop
idiv
cmc
push
add
adc
jecxz
and
pop
pop
in
sub
or
daa
sbb
xor
cmp
add
adc
pop
adc
adc
or
sub
xor
dec
dec
dec
cs
adc
xor
pop
pop
xor
and
sub
push
push
in
lds
mov
stc
shl
enter
enter
add
adc
imul
xlat
fsub
cld
aad
xlat
fisttpll
icebp
adc
sbb
sub
sti
push
ljmp
push
or
jmp
ss
xor
inc
call
sbb
cmp
dec
dec
push
and
sbb
and
sub
pop
xor
xor
bound
dec
ss
inc
pop
inc
arpl
loop
aad
stc
into
fabs
add
fcmovnu
sarl
leave
leave
loope
push
repnz
repz
or
jmp
adc
sbb
repz
cli
cli
adc
sbb
cld
lock
adc
or
and
xor
cmp
sti
mov
and
sbb
daa
and
dec
xor
xor
dec
adc
ds
sub
dec
dec
inc
pop
sbb
dec
cmp
inc
shll
fsubrp
mov
shl
add
lock
fcmovnu
push
testl
or
jmp
jmp
testb
adc
sbb
cmc
adc
pop
or
or
and
sub
add
push
daa
push
pop
xor
aas
pop
adc
sbb
sbb
adc
inc
dec
cs
push
push
adc
es
sub
adc
push
and
and
push
pop
cmp
jno
ret
cli
fdivrl
add
mov
in
in
or
shl
add
push
in
add
clc
jmp
in
cli
es
repz
loope
jmp
sti
out
sbb
or
push
cmp
inc
cmp
add
or
pop
cmp
ds
and
inc
xor
xor
cmp
daa
and
aas
cmp
pop
pop
xor
cmp
pop
sub
icebp
stc
ljmp
in
std
rolb
stc
out
hlt
filds
fsub
jmp
adc
jecxz
adc
out
adc
or
rorl
loop
and
sub
and
lock
adc
push
sbb
movhps
or
cmp
push
inc
add
pop
sub
daa
add
or
sbb
inc
adc
dec
sub
gs
pusha
aaa
pop
sub
push
ftst
int3
mov
iret
xlat
into
loope
fisttpll
or
out
add
fcmove
ljmp
in
sti
out
adc
icebp
fisttpll
adc
fcoml
ljmp
and
repz
sbb
pushl
sub
or
sbb
cmp
sub
push
inc
sub
adc
das
cmp
push
push
xor
push
dec
addr16
arpl
inc
outsb
dec
pop
hlt
aam
cli
mov
int
add
loopne
clc
ret
enter
movb
std
fisttps
xlat
aam
sbb
out
in
fsubr
jmp
loop
adc
and
loope
and
sbb
pop
pop
add
lock
adc
push
or
or
imulb
and
and
sbb
sbb
or
dec
inc
cmp
or
dec
sub
push
aaa
es
pop
das
sbb
pop
sbb
push
sbb
push
bound
inc
outsb
fcom
cli
cld
std
cld
call
fadds
out
enter
leave
loop
lar
in
fcoms
aad
or
fmuls
jmp
adc
sbb
push
and
jmp
jmp
adc
repnz
sbb
xor
sub
cmp
stc
cli
xor
and
and
adc
adc
push
push
sbb
bndstx
das
ss
das
popa
cmp
and
dec
and
mov
enter
mov
push
add
or
aam
or
in
lret
std
adc
in
sbb
pop
adc
push
sti
adc
hlt
cld
adc
pop
and
ljmp
or
cmp
lock
cmp
add
daa
xor
sub
and
and
dec
and
or
pop
sub
sbb
dec
sub
das
sbb
and
and
pop
and
pop
inc
push
aaa
jo
iret
call
in
add
into
add
leave
or
lds
icebp
loopne
leave
out
aam
rcrl
ljmp
adc
movlps
fsubp
sbb
sbb
sub
or
add
incl
cld
adc
sbb
xor
push
inc
cmp
pop
inc
sub
or
push
push
or
sub
dec
xor
sub
cs
pusha
arpl
inc
pop
aas
xor
and
mov
sti
mov
xlat
loopne
shr
mov
std
rcl
cli
or
add
dec
in
in
dec
aam
xlat
or
out
fcomi
xlat
or
lock
sbb
hlt
fsubrp
sbb
or
std
repz
cmp
sti
cld
push
xor
inc
add
inc
adc
push
daa
sub
cmp
inc
sub
pop
xor
ds
cmp
sub
cmp
push
pop
and
cmp
outsb
mov
jmp
mov
mov
std
stc
out
ffreep
cld
stc
clc
lds
in
adc
flds
neg
adc
fdivr
jmp
and
loope
jecxz
mov
xor
repz
and
xor
cmp
testb
pop
sub
cmp
ss
xor
push
dec
add
decl
dec
daa
adc
dec
pop
xor
push
dec
push
cs
pop
inc
push
popa
pop
data16
and
pop
shr
out
call
rcl
lock
or
ret
leave
or
loopne
in
loop
call
loop
sbb
adc
in
push
loop
loopne
or
pop
sbb
sub
in
and
or
pop
jmp
out
sub
sbb
xor
movlps
sub
jmp
inc
adc
and
add
add
xor
or
and
dec
pop
sub
cmp
cmp
arpl
xor
inc
pusha
and
insl
sub
imul
mov
mov
lds
or
stc
mov
fcmovne
loopne
add
add
or
ljmp
add
loopne
repnz
cli
or
and
in
sub
sti
das
ljmp
repz
or
push
sbb
inc
aaa
and
or
sub
or
inc
inc
xor
and
push
and
adc
cmp
cmp
and
fs
cmp
dec
sub
arpl
mov
in
jmp
lret
aad
cli
loop
jecxz
xlat
lret
or
iret
sti
iret
in
jmp
in
jecxz
fsubr
sbb
adc
push
out
push
pop
sub
in
decb
stc
out
lock
lock
clc
pop
push
cmc
sbb
inc
and
and
cmp
cmp
cmp
or
push
aaa
push
dec
sub
das
push
cmp
cmp
cs
cmp
pop
ds
ljmp
repnz
mov
out
in
filds
cld
fsubrp
loope
repz
div
loop
psubsb
aad
sbb
ljmp
pop
and
and
in
out
xor
and
sub
or
adc
stc
push
aaa
inc
inc
xor
pop
add
sbb
or
inc
dec
inc
push
or
inc
dec
sub
pop
sbb
sub
and
push
pushaw
push
pop
insl
cmp
stc
into
repz
mov
stc
cmc
std
repnz
cmc
aad
stc
clc
int
in
ljmp
or
neg
cld
push
or
add
or
in
pop
pop
sbb
sub
or
pop
add
sub
or
cld
cmp
cld
sub
decb
sbb
add
sub
push
adc
inc
inc
es
aaa
inc
push
sub
inc
cmp
dec
xor
cmp
popa
popa
push
inc
inc
push
pop
xlat
xlat
out
sti
mov
call
std
cld
fdivp
sti
fildl
fsub
test
ljmp
add
stc
jmp
adc
pop
out
in
adc
out
fucom
adc
repz
or
pop
ljmp
xor
sub
std
pop
xor
aaa
xor
adc
std
cmp
or
adc
pop
xor
sbb
aaa
aaa
sbb
sbb
xor
push
imul
fcmovne
icebp
repz
faddl
fsubp
enter
push
add
leave
sti
adc
icebp
repnz
icebp
adc
fisttpl
add
adc
cld
testl
or
add
das
sub
or
cld
and
xor
xor
cli
sub
inc
cmp
inc
xor
adc
pop
ss
dec
sub
aas
ss
pop
pop
xor
and
dec
pop
cmp
loope
sti
mov
cmc
aam
loopne
cld
fdivr
vpavgw
mov
or
loope
repnz
not
or
xlat
pop
out
pmaddwd
or
sbb
and
loop
cld
negl
add
sub
out
add
or
xor
or
divl
sbb
xor
and
sub
dec
cmp
inc
daa
das
pop
xor
push
cmp
sub
and
and
pop
cmp
pop
pusha
dec
inc
rcl
divl
fcomi
repnz
add
not
pop
add
or
add
loope
test
push
clts
cli
sbb
icebp
pop
add
add
out
cs
ljmp
push
xor
xor
push
xor
das
mulb
adc
daa
pop
or
and
adc
inc
or
push
xor
sbb
sub
das
xor
addr16
pop
aas
fs
push
inc
dec
inc
cli
fld
mov
repz
in
loop
in
cld
ret
loope
in
lret
fscale
iret
ror
out
int3
cmc
out
adc
lcall
loope
push
fcomip
es
cmc
clc
stc
pop
stc
push
loope
add
pop
xor
add
xor
or
aaa
ds
cmp
adc
add
inc
es
add
ljmp
das
and
pop
push
and
dec
pop
sub
and
pop
aas
inc
pop
addr16
pop
push
cs
mov
cmc
repnz
fidivrl
cmc
out
pop
hlt
cli
or
in
push
out
fxch
out
lret
shr
add
neg
sbb
in
or
fimuls
hlt
pop
and
sbb
or
paddsb
jmp
getsec
aaa
sbb
cli
sub
notb
push
push
aaa
push
sbb
cmp
cmp
push
push
daa
sub
push
sub
pop
pop
pop
cmp
das
sbb
cmp
push
bound
mov
push
fucom
lret
loop
loopne
stc
or
jmp
jmp
add
fcoml
aad
test
pop
xlat
and
sbb
jecxz
fdivp
cli
repz
in
cld
cld
sub
jmp
push
and
cmp
add
xor
inc
push
inc
add
and
dec
xor
movups
sbb
pop
pusha
pop
dec
pop
xor
dec
ds
inc
imul
cmp
mov
in
cli
fyl2xp1
rcr
out
ffree
aam
loop
mov
out
or
dec
jecxz
add
lock
cld
add
fdivr
pop
sbb
and
add
in
jecxz
and
sti
and
or
add
sub
cmp
pop
and
cmp
es
inc
and
sub
dec
push
push
dec
adc
pop
dec
das
push
das
aaa
sbb
and
xor
cmp
push
sub
push
in
iret
aam
out
add
fcmovnbe
iret
ret
shl
decl
add
in
iret
loopne
pop
in
adc
clc
adc
add
push
or
sti
sbb
or
std
sti
cld
sbb
repnz
cld
or
icebp
stc
inc
aas
or
push
cmp
sbb
dec
pop
inc
sub
adc
xor
push
dec
adc
sbb
pop
sub
pop
inc
sbb
inc
push
sub
lock
lock
mov
mov
push
into
int3
lret
ljmp
push
out
cli
in
or
aad
in
ud0
and
sbb
or
xor
or
cmp
sub
ds
push
das
xor
and
and
dec
push
inc
dec
push
push
inc
push
sub
inc
adc
xor
push
inc
pop
popa
push
push
pop
ss
push
sub
cmc
mov
int3
add
loopne
add
mul
cli
push
leave
ficoms
leave
add
roll
in
ljmp
adc
icebp
push
sbb
pop
imul
in
sub
and
or
xor
xor
inc
sub
cmp
clc
adc
ss
dec
dec
cmp
and
adc
dec
adc
xor
sub
push
aas
xor
inc
pop
sub
sub
cld
mov
cli
sar
loopne
in
sarb
fucomp
fmulp
rcr
dec
or
prefetch
or
fsubr
and
lock
loop
or
daa
or
out
jecxz
xor
or
hlt
psubb
hlt
sbb
push
adc
daa
adc
sbb
inc
es
sbb
push
adc
adc
push
pop
push
dec
pop
sbb
inc
daa
aas
pop
inc
sbb
cmp
lock
into
fst
fld
idiv
clc
clc
repnz
stc
add
lock
ror
or
adc
push
sbb
push
or
out
sbb
icebp
jmp
std
faddl
sub
out
adc
out
or
das
or
das
cs
sbb
cli
aas
and
aas
add
or
inc
add
and
or
push
dec
sub
adc
pop
cmp
pop
arpl
and
pop
dec
pop
dec
lock
mov
mov
in
repz
or
out
leave
in
in
rorl
or
out
in
cli
sbb
clc
stc
xlat
fdivr
repnz
call
sbb
adc
repz
sti
pop
xor
xor
or
daa
push
and
sbb
sbb
push
adc
inc
std
inc
and
ss
and
sbb
cmp
cmp
inc
das
inc
das
pop
sub
aas
xor
cmp
inc
bound
inc
arpl
out
mov
cld
shr
ljmp
ret
dec
int3
add
or
in
adc
add
adc
call
push
add
fucom
frstor
sbb
and
stc
pop
mov
sub
adc
xor
es
cmp
icebp
add
and
adc
cmp
xor
sub
and
or
sub
xor
dec
sbb
cmp
pop
inc
and
xor
pop
es
dec
aaa
sub
xlat
in
mov
mov
aad
fsub
push
push
loope
int
clc
or
fdiv
adc
or
or
pop
sbb
fsub
sbb
push
loope
and
jmp
add
and
or
or
and
aaa
adc
adc
cli
push
xor
cld
add
or
sub
cmp
das
or
dec
push
dec
sub
das
dec
sbb
aas
bound
cmp
es
lret
mov
hlt
shlb
pop
loope
testl
int
add
fucom
in
in
in
sbb
clc
cmc
adc
clc
or
jecxz
out
or
in
adc
divb
daa
adc
or
std
aaa
or
sbb
aas
inc
inc
add
or
dec
pop
xor
pop
sbb
pop
ds
ds
bound
push
gs
inc
inc
dec
cmp
push
div
neg
call
mov
xlat
out
loopne
jmp
jmp
or
roll
stc
in
in
or
neg
and
loop
in
add
add
or
sbb
pop
in
and
add
pop
sti
push
and
sub
mov
add
cmp
push
cmp
sbb
or
dec
or
adc
and
push
aaa
ds
dec
dec
dec
sub
dec
xor
xor
dec
dec
ds
dec
pop
fsubr
in
icebp
stc
mov
cli
fadds
fsubr
add
loope
push
loopne
add
into
div
or
sbb
pop
call
add
or
mul
pop
sub
adc
pop
div
xor
repz
sbb
push
cld
inc
add
pop
inc
inc
inc
pop
push
add
cmp
sub
xor
xor
push
pop
sub
das
inc
pop
dec
push
and
das
sub
sub
inc
cmp
cli
fdivr
std
fcom
into
repz
mov
in
or
jecxz
add
add
or
push
icebp
call
ficomps
adc
repnz
es
and
idiv
add
or
adc
xor
cmp
stc
stc
pop
sbb
repz
cmp
pop
adc
inc
aas
sbb
cmp
and
pop
mov
daa
sbb
adc
cmp
and
es
arpl
and
icebp
mov
aam
idivl
std
mov
add
leave
in
add
or
imul
negb
or
add
repnz
and
cld
sbb
add
sbb
sub
sbb
pop
sub
std
adc
pop
push
add
add
and
adc
aaa
pop
sbb
inc
and
ss
dec
push
dec
push
cmp
dec
cmp
pop
pop
and
imul
cmp
test
enter
add
fisttps
repz
pop
fdivr
stc
repnz
aad
leave
xlat
jmp
jmp
adc
aad
add
call
or
incb
push
out
or
daa
cmp
xor
stc
sub
adc
xor
add
sbb
xor
add
pop
or
adc
push
xor
push
adc
inc
ss
dec
dec
dec
push
sbb
sub
inc
fs
fs
pop
sub
rcr
mov
neg
mov
add
lret
lret
out
iret
in
aad
rorb
cli
std
sbb
icebp
adc
std
testl
add
clc
sbb
add
and
aaa
clc
sub
add
inc
add
aaa
adc
push
sbb
or
adc
or
push
push
or
adc
cmp
push
dec
ds
pop
push
inc
push
xor
daa
cmp
dec
lret
mov
leave
mov
shl
not
ret
fcmovb
imul
cmc
ljmp
jecxz
iret
sbb
in
icebp
adc
fcoml
adc
icebp
sti
push
add
ficomps
or
sub
or
and
and
sbb
repnz
cmp
cmp
cmp
push
sub
cmp
or
dec
sub
dec
or
daa
sub
pop
sub
xor
and
cmp
scas
cli
in
stc
filds
jmp
mov
pop
mul
cli
std
fsubp
clc
adc
or
fcomps
fcos
push
sbb
add
nopl
sbb
cmc
repz
sub
psubq
xor
add
adc
adc
cmp
testb
and
inc
push
es
or
adc
cmp
push
sub
inc
and
xor
xor
xor
dec
cs
and
push
cmp
insl
xbegin
enter
out
mov
testb
or
pop
add
sti
out
icebp
loopne
in
sbb
in
in
adc
or
adc
sbb
adc
clc
out
out
sbb
sbb
or
cmc
clc
ss
adc
push
inc
cmp
sti
cld
dec
and
sbb
or
or
sbb
push
adc
cmp
pop
cmp
and
pop
push
dec
push
push
imul
mov
stc
mov
in
add
jecxz
fdivr
faddp
fadd
add
sti
add
out
or
rorl
fdivr
or
incb
sbb
icebp
call
sbb
add
push
push
sub
and
adc
push
sbb
or
sbb
adc
cmp
sbb
sub
sbb
sub
cmp
and
cmp
xor
push
pusha
dec
cmp
dec
sub
mov
add
out
jmp
loope
into
into
add
ljmp
or
in
stc
push
rorb
stc
adc
sbb
cli
and
loopne
loop
push
daa
or
add
adc
push
lock
or
repnz
ss
std
and
add
push
inc
aas
add
inc
sbb
adc
or
sub
cmp
cmp
cmp
inc
and
push
and
cmp
push
pop
data16
fidivl
mov
add
call
inc
cld
out
out
call
mul
leave
adc
sti
add
cli
adc
add
loopne
ljmp
das
xor
adc
sbb
or
sub
std
sbb
adc
inc
xor
add
std
add
inc
inc
cmp
push
or
and
sub
push
adc
dec
sub
push
cmp
cmp
ss
push
pop
mov
in
icebp
fmul
ljmp
mov
loopne
call
repnz
or
add
stc
adc
ficompl
fists
hlt
sbb
adc
or
daa
add
call
es
pop
add
and
push
pop
add
sbb
xor
pop
cli
pop
inc
cmp
inc
jmp
xor
pop
pop
and
dec
xor
push
aaa
push
xor
pop
xor
xor
and
ds
and
pop
outsl
sub
fcmovb
cmc
aad
fstpt
repz
ret
cmc
int
enter
loope
int3
int
adc
lock
lock
mul
sti
jmp
and
or
or
or
out
in
add
hlt
xor
testl
sbb
add
sbb
dec
push
inc
inc
aas
push
daa
xor
cmp
push
push
aaa
inc
push
fs
dec
fs
xor
fcom
in
imul
mov
call
jmp
or
add
int
in
negb
jecxz
adc
push
sti
fucomi
psllw
adc
clc
push
sti
add
and
or
xor
sbb
cmp
aaa
xor
push
dec
inc
add
pop
sub
xor
sub
das
push
cmp
xor
das
push
push
and
push
xor
and
inc
inc
inc
clc
mov
push
fsub
mov
in
enter
adc
add
lock
or
fcoms
push
sbb
or
stc
in
and
sbb
and
sbb
sub
lock
and
ss
xor
sub
add
adc
and
xor
inc
sub
cmp
or
es
daa
ds
push
inc
inc
push
and
pop
dec
pop
push
pop
gs
sbb
sub
inc
dec
cmp
mov
int3
test
fsubr
cmc
ljmp
add
std
cli
testb
add
or
push
add
pop
ficompl
or
fdivr
loope
clc
sti
and
idiv
add
cmc
or
or
add
testb
std
pop
xor
sbb
and
sub
add
or
or
push
sub
dec
xor
xor
push
gs
sub
outsb
inc
sub
cmc
call
mov
fucom
in
add
enter
fucomi
or
or
lock
or
cli
pop
push
sbb
std
negb
add
sub
in
std
sbb
pop
xor
and
sub
cmp
xor
xor
cmp
sbb
cmp
sbb
dec
dec
push
cs
or
xor
pop
cmp
arpl
pop
inc
dec
and
ds
dec
shlb
icebp
loope
bnd
cmc
mov
ror
cli
dec
add
or
out
pop
in
adc
fcompl
add
cmc
push
push
push
idiv
imul
stc
in
xor
out
push
decb
or
adc
sub
and
das
cld
das
add
pop
xor
xor
cmp
dec
sub
push
xor
das
sub
inc
sub
dec
pop
dec
cmp
inc
pop
cmp
arpl
pusha
sub
mov
clc
cli
sti
stc
add
repnz
call
add
dec
jmp
out
rcrb
fdiv
jmp
or
lock
and
sbb
or
out
add
or
std
and
sub
aaa
sub
repz
daa
or
or
xor
sbb
aas
add
sub
sbb
xor
sub
rdtsc
sub
cs
cmp
push
sub
bound
outsb
cmp
cs
fsubr
mov
ljmp
loope
call
fisttps
lock
jecxz
adc
out
aad
add
add
push
out
cmc
loop
sbb
es
sub
jecxz
sbb
in
out
pop
or
add
adc
sbb
sbb
clc
or
aaa
add
add
push
and
sbb
xor
push
aaa
dec
xor
aaa
aas
xor
push
push
pop
cmp
and
gs
mov
fxch
mov
add
aad
add
cmc
ret
aam
ffreep
jecxz
stc
int
add
adc
or
sysret
in
fsubr
and
lock
fcompl
sbb
adc
sub
call
xor
cmp
xor
sub
cmp
idivb
push
adc
sub
and
dec
or
inc
push
dec
and
adc
inc
push
xor
pop
pop
sbb
pop
ds
push
inc
sub
int3
mov
into
add
repnz
lock
mov
ret
or
lock
rcl
rcr
adc
jmp
and
adc
add
daa
loop
push
clc
jmp
sti
std
sbb
sub
sub
cs
adc
sbb
cmp
cli
and
dec
or
aas
inc
inc
inc
dec
xor
adc
push
pop
xor
pop
sbb
pop
das
cmp
and
and
pop
insb
sub
cmp
inc
call
xlat
hlt
in
jmp
repnz
roll
loopne
add
sti
add
shl
jecxz
fdivr
or
lock
repnz
in
notl
jmp
or
pop
adc
ss
push
sub
and
cmp
inc
sbb
aas
adc
inc
sub
sub
cmp
push
dec
and
aaa
and
xor
push
pop
pop
arpl
in
idivb
fneni(8087
mov
add
in
add
adc
ljmp
out
sbb
add
mov
and
adc
pop
sbb
sub
or
push
sub
and
pop
or
divl
aaa
cmp
add
aaa
cmp
pop
dec
inc
cmp
push
push
inc
push
adc
dec
dec
dec
daa
push
inc
inc
push
cmp
pop
bound
cmp
dec
dec
cmp
inc
cmp
fcmovnb
out
std
aam
jmp
aad
fnstcw
leave
ret
leave
repnz
adc
out
sbb
jecxz
adc
clc
call
sbb
and
loope
push
and
add
sti
and
add
sbb
push
xor
sub
xor
aas
add
adc
xor
cs
and
inc
aas
dec
or
and
inc
cmp
sbb
pop
inc
pop
inc
cs
aas
pop
inc
inc
inc
dec
pop
sub
fsubr
aad
mov
fdivp
in
rcl
out
icebp
or
imul
out
loope
add
out
adc
in
sbb
rcll
hlt
add
pop
repz
pop
hlt
or
cld
add
sbb
or
or
or
add
repnz
adc
cmp
and
and
dec
dec
or
add
cmp
inc
dec
adc
sub
inc
push
dec
sbb
push
cmp
and
and
bound
ss
cmp
lret
repnz
call
int
mov
sti
or
into
jecxz
loope
iret
fucomp
or
fcomi
fisttpl
loop
pop
pop
cld
jmp
out
decl
add
xor
repz
adc
repz
cmp
aas
cmp
ds
add
adc
inc
dec
and
pop
push
sub
push
ss
xor
pop
and
pop
pop
sub
sub
imul
fcmovu
hlt
ljmp
shl
fucomi
fisttps
out
adc
in
rorb
jmp
ljmp
call
pop
pmaxsw
add
add
sbb
or
adc
adc
and
sub
push
dec
inc
push
xor
xor
cmp
pop
pop
pusha
dec
push
pop
pop
inc
xor
sub
ds
and
out
mov
lret
loop
shl
fdivr
ret
or
loop
push
in
fcomi
fsub
loop
adc
xlat
out
adc
and
adc
adc
sbb
sbb
and
sbb
in
out
adc
cmp
adc
das
cld
ds
sub
add
sbb
add
sbb
push
pop
inc
ds
or
push
and
sub
xor
and
and
inc
push
push
es
pop
cmp
pop
inc
mov
in
std
hlt
repz
rolb
add
mov
jmp
shl
lock
pop
into
pop
add
adc
clc
in
in
sbb
adc
sbb
clc
loop
jmp
decl
pop
xor
or
sub
sub
sbb
adc
adc
cs
xor
dec
dec
and
push
pop
and
inc
cmp
push
sub
adc
ds
inc
sub
and
popa
fcmovbe
lret
ljmp
cld
ffreep
loop
or
lret
add
add
or
or
aad
cmc
fcompl
or
push
and
and
mul
and
daa
push
or
or
adc
adc
hlt
or
repnz
sbb
xor
or
xor
adc
cmp
dec
add
es
inc
inc
push
and
dec
adc
xor
dec
dec
das
das
push
cmp
fs
daa
inc
sub
mov
add
into
idiv
rolb
ljmp
incb
push
or
aam
hlt
adc
in
aad
or
aam
and
and
sbb
clc
or
and
and
lock
and
sub
sbb
inc
sbb
inc
cmp
sbb
pop
sub
cmp
inc
dec
dec
and
push
cmp
push
pop
and
pop
cmp
inc
pop
push
cmp
cmp
inc
inc
push
les
lret
mov
push
fisttps
jmp
lret
jmp
fsubrp
fucom
rcl
add
icebp
sbb
jmp
and
and
and
push
loop
std
and
pop
sbb
xor
xor
xor
sub
or
sub
clc
ss
add
std
cmp
sub
or
das
and
dec
sub
daa
cmp
xor
pop
cmp
pop
xor
and
insb
and
outsl
icebp
cli
mov
fptan
rcr
in
testb
loop
out
enter
repnz
fdiv
ficoml
push
xlat
notl
shl
adc
sbb
movups
add
ljmp
in
cld
sub
ss
cmp
add
or
cmp
sub
dec
add
and
ds
aas
adc
dec
dec
pop
cmp
pop
pop
pop
pop
and
inc
dec
inc
pop
inc
pop
push
mov
sti
ljmp
stc
fcom
call
fsubr
fucompp
std
out
adc
int3
shl
push
aad
adc
ficoms
icebp
sbb
sti
in
adc
and
in
xor
syscall
add
adc
sub
xor
add
xor
sbb
pop
es
inc
adc
push
dec
aaa
aas
push
dec
push
push
xor
sub
dec
push
dec
and
pop
cmp
inc
addr16
pop
cmp
sub
mov
in
neg
mov
mov
out
out
or
in
add
call
adc
jmp
in
cmc
adc
or
sbb
negl
pavgw
add
hlt
repnz
sub
out
add
es
or
repz
cmp
idiv
cld
xor
sbb
add
ds
dec
push
adc
and
sub
sub
dec
push
cmp
cmp
push
and
push
inc
and
cmp
add
add
add
add
add
add
sub
add
pusha
add
orb
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
andb
add
add
andb
add
add
add
add
add
add
add
adc
add
or
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
std
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
add
add
in
add
add
add
incl
add
add
in
add
add
add
sar
add
sub
add
in
add
add
add
stc
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
sub
xor
xor
xor
sub
popa
jne
xor
je
xor
sub
jne
sub
je
xor
mov
mov
jbe
xor
subl
xchg
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
sub
xor
xor
xor
sub
popa
jne
xor
je
xor
sub
jne
sub
je
xor
mov
mov
jbe
xor
subl
xchg
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
sub
xor
xor
xor
sub
popa
jne
xor
je
xor
sub
jne
sub
je
xor
mov
mov
jbe
xor
subl
xchg
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
sub
xor
xor
xor
sub
popa
jne
xor
je
xor
sub
jne
sub
je
xor
mov
mov
jbe
xor
subl
xchg
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
sub
xor
xor
xor
sub
popa
jne
xor
je
xor
sub
jne
sub
je
xor
mov
mov
jbe
xor
subl
xchg
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
adc
adc
adc
adc
cwtl
xchg
and
cwtl
ja
mov
push
mov
xchg
mov
cwtl
xchg
int3
in
into
addr16
sbb
fstpl
xchg
mov
sbb
fcom
cwtl
fwait
xchg
mov
jo
add
xchg
pushl
or
add
xchg
xchg
xor
add
incl
or
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
filds
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
add
add
add
add
test
add
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
cmp
add
add
pop
jnp
add
add
cmpb
mov
add
add
add
jnp
add
jnp
add
jnp
add
jl
add
jl
add
jl
add
add
add
add
push
jl
add
add
add
add
xchg
xchg
jl
add
jl
add
add
fidivrs
add
add
add
and
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
push
xor
jbe
mov
cmpsl
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
pop
xor
mov
fwait
xor
xor
xor
xor
xor
sbb
daa
xor
pop
xor
jo
je
jnp
xorl
popf
xor
mov
xor
xor
xor
xor
xor
xor
pop
xor
insb
xor
xorb
xor
xor
jmp
clc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
pop
xor
xchg
mov
mov
xor
out
xor
or
cmp
inc
ss
imul
lcall
ss
fidivs
repnz
or
sbb
cs
pusha
aaa
fs
outsl
aaa
jae
jg
lea
xchg
aaa
pushf
aaa
lods
aaa
mov
aaa
fdivs
ljmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
je
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
xor
cmp
inc
cmp
push
cmp
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
add
or
daa
aas
xor
ss
aas
aas
inc
aas
pop
aas
bound
outsl
aas
jae
jnp
xchg
mov
xchg
aas
scas
aas
mov
mov
aas
aad
fdivrl
out
aas
repnz
aas
add
add
add
mov
xor
xor
xor
push
xor
xor
cltd
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jne
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
js
jl
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
dec
xor
push
jae
mov
scas
xor
leave
xor
out
cmc
xor
es
ss
bound
data16
jge
xorl
ss
movsb
ss
scas
ss
mov
ss
shll
fidivl
fbstp
in
repnz
ss
aaa
sbb
push
aaa
es
das
aaa
xor
cmp
aas
aaa
dec
aaa
pop
aaa
addr16
ja
mov
mov
xchg
aaa
cltd
aaa
popf
aaa
movsl
aaa
test
aaa
shlb
aaa
lret
aaa
aam
fidivl
loopne
jmp
aaa
add
add
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
pop
cmp
jl
cmpb
cmp
test
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
jae
test
lea
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
insb
cmp
jnp
jg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
dec
cmp
jae
cmpb
cmp
fstpt
out
cmp
add
xor
inc
ds
ds
bound
imul
ja,pt
jnp
mov
xchg
movsb
sarl
ds
repnz
add
adc
and
sub
aas
dec
aas
push
aas
pop
aas
bound
insl
aas
jae
jle
cmpb
aas
xchg
aas
movsb
aas
mov
aas
out
hlt
aas
clc
aas
add
add
add
cld
add
add
xor
xor
xor
pop
xor
outsl
xor
nop
xor
xor
xor
xor
xor
xor
xor
or
xor
xor
pusha
xor
je
jl
xchg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
loop
out
in
xor
and
xor
inc
ss
aaa
or
sbb
xor
aaa
push
aaa
bound
data16
outsb
aaa
jnp
mov
cwtl
aaa
mov
aaa
xlat
aaa
fnsave
jecxz
in
aaa
divl
or
cmp
cmp
cmp
dec
cmp
cmp
jnp
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
cmp
cmp
cmp
jb
jbe
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
sub
xor
inc
cmp
dec
cmp
arpl
push
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
inc
cmp
imul
movsl
cmp
mov
cmp
stc
cmp
sub
xor
cmp
inc
ds
ds
ds
ds
test
xchg
mov
ds
sarb
fdivrl
in
add
and
sub
ss
inc
aas
inc
aas
gs
imul
aas
jp
cmpb
aas
xchg
aas
sahf
aas
lods
aas
les
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
bound
jp
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
arpl
imul
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
daa
xor
aas
xor
push
xor
js
jl
test
lods
xor
xor
repz
sbb
sbb
ss
ss
ss
ss
ss
xorb
mov
xchg
ss
ss
ss
jmp
stc
or
getsec
sub
cs
aaa
aaa
inc
aaa
push
aaa
pop
aaa
jne
test
mov
mov
aaa
shlb
jmp
aaa
or
sbb
sub
aaa
cmp
dec
cmp
gs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
cmp
cmp
jns
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
jbe
jp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
xchg
cmp
mov
cmp
hlt
cmp
and
and
ds
bound
push
jle,pt
xchg
mov
adc
pop
aas
sbb
aas
cmp
aas
pop
aas
popa
aas
push
aas
xchg
aas
cltd
aas
lahf
aas
cmpsl
aas
scas
aas
mov
mov
push
add
pop
add
add
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
pusha
add
pop
add
add
cmp
cmp
cmp
cmp
pop
cmp
cmp
insb
cmp
je
js
jl
cmpb
cmp
cmp
test
lods
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
inc
cmp
cmp
movsb
add
add
add
sub
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
add
add
dec
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
