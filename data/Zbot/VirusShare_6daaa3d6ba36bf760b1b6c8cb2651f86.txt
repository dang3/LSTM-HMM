mov
call
in
sub
push
push
push
pushl
push
lea
push
or
add
jmp
call
leave
ret
add
rcll
stc
decl
decb
add
lret
notl
push
push
push
push
inc
jbe,pt
jg
push
dec
inc
and
mov
fcmovnu
sbb
push
lea
push
pop
cld
push
lea
push
jno
push
addr16
aaa
push
das
jno
xor
fistl
in
ja
push
push
mov
inc
push
call
lods
and
add
pop
sub
or
mov
mov
push
push
dec
insb
mul
fcomp
std
outsl
adc
dec
cmp
jae
gs
dec
sbb
jle
pop
add
enter
dec
imul
pop
xchg
xchg
pop
jp
jb
dec
fmull
loopne
or
lret
call
fcomp
xor
sub
sbb
sub
decl
add
adc
sbb
adc
sub
inc
les
leave
xor
push
jne
arpl
push
sub
sub
popa
test
outsb
or
inc
ja
xchg
popf
and
outsb
icebp
add
fistpll
xchg
or
jne
sub
mov
cmp
fs
pop
fdivrl
cld
rcll
insl
in
pop
dec
data16
or
mov
repnz
inc
data16
push
add
incl
inc
pop
adc
add
mov
adc
mov
mov
sti
sbb
adc
mov
inc
add
xchg
data16
add
test
push
movsb
aas
hlt
xchg
enter
add
leave
ret
pop
in
push
aad
mov
cmp
int
pop
or
or
dec
pop
and
repnz
pop
mov
loopne
pop
gs
cmp
add
mov
push
jge
ja
fcomp
mov
cmpsl
fcmovnbe
xor
mov
push
xor
push
hlt
or
xlat
loopne
sub
insb
std
gs
shlb
push
inc
inc
push
fwait
clc
sub
push
outsb
es
pop
out
push
int3
fwait
and
bound
xor
divl
mov
std
loope
lock
inc
addr16
pop
insb
dec
add
fistpll
jne
jmp
ret
push
xor
add
push
idiv
mulb
arpl
pop
ds
fistps
add
movsb
lahf
inc
outsb
xor
pop
insb
sub
hlt
add
push
or
call
dec
mov
jno
pop
fs
fs
mov
add
cmp
cli
loopne
add
and
icebp
cmp
aas
mov
push
jle
jb
inc
xor
mov
lea
push
jne
je
dec
loopne
mov
insl
js
push
in
fsubrs
rolb
fidivrs
js
popa
push
cmp
loopne
ja
int
popa
ja
sbb
sbb
xor
call
imul
push
push
into
sub
sub
insb
push
jecxz
push
in
push
pop
inc
jg
loopne
add
adc
add
inc
add
push
cli
lea
shrl
jno
inc
iret
cs
jb
dec
in
div
push
pop
adc
or
lcall
jg
dec
add
dec
mov
ja
das
ds
push
jb
hlt
push
push
inc
mov
je
inc
pop
out
or
jb
in
sub
inc
cmp
das
jl
jae
imul
dec
and
negl
lret
fadd
dec
mov
mov
xor
fmuls
movl
mov
or
mov
sbb
xorps
insl
out
mulb
sbb
pop
inc
mov
push
roll
insb
stc
outsl
sub
sbb
push
leave
testb
push
push
bound
inc
mov
test
mov
xor
mov
loopne
push
mov
mov
fwait
jno
sbb
jge
or
in
into
mov
and
adc
inc
push
xor
push
jo
mov
inc
in
adc
push
jb
dec
push
jbe
sbb
imul
pop
push
mov
js
out
shrl
jo
push
movsl
sub
pop
cld
ret
pop
int
sbb
dec
adc
ror
dec
outsb
outsl
jl
insl
mov
sub
loopne
inc
jne
clc
ljmp
cmp
lret
dec
mov
sub
inc
sbb
add
mov
aaa
xchg
ja
shlb
fiadds
shrl
push
outsl
cli
push
add
mov
push
add
xor
mov
push
pop
or
dec
mov
dec
jl
mov
push
shrl
ficompl
clc
sub
inc
mov
test
add
stc
outsl
jp
pop
arpl
ffreep
mov
jae
ret
inc
sbb
scas
rcr
enter
xor
cmp
pop
mov
inc
lcall
add
xor
imul
push
dec
xlat
jp
push
dec
bound
pop
ss
cmp
mov
sub
jbe
lods
xchg
jne
push
repz
push
rcr
or
aaa
xor
sub
dec
fdivrs
lcall
jno
mov
ds
arpl
or
dec
jne
mov
leave
xchg
sbb
imul
aam
pop
push
push
outsb
imul
fidivs
cld
arpl
outsb
stc
lret
dec
mov
imul
repz
outsb
lds
dec
add
mov
mov
or
aas
xchg
mov
addl
repz
dec
inc
pop
or
jnp
ljmp
jl
fwait
nop
roll
test
stc
mov
hlt
xor
xor
add
jbe
xchg
adc
cld
jmp
add
mov
addr16
add
push
and
adc
jge
out
in
jno
and
lea
add
mov
push
mov
daa
out
push
jno
call
outsl
sbb
mov
outsl
repnz
cmp
mov
cmp
lret
int
inc
rorl
mov
add
push
mov
pop
mov
mov
adc
lods
hlt
mov
jbe
aaa
cwtl
xor
adc
push
xor
dec
fdivr
lahf
or
sbb
mov
incl
addb
test
add
in
or
int
mul
and
repz
hlt
add
icebp
sub
lods
cmp
lcall
add
add
xor
ret
mov
or
add
pop
add
mov
sbb
and
xchg
ja
push
lock
inc
xchg
jnp
in
out
out
adc
push
and
mov
in
shlb
add
sub
or
mov
add
gs
add
dec
push
pop
pop
dec
sarl
ss
in
inc
add
sub
xchg
popf
rorb
mov
jp
dec
popl
mov
sbb
lcall
sbb
sub
rcr
xor
push
add
sti
xchg
fs
adc
and
addb
add
shrl
xchg
popf
test
dec
push
into
add
in
xchg
inc
test
xchg
push
cltd
test
int
mov
push
and
inc
sbb
xor
inc
pop
pop
fstp
outsl
add
cmp
repz
aad
ds
or
fildl
test
in
insl
test
cmp
addb
mov
lret
cmp
add
out
popf
pushf
je
ret
add
fdivrp
ret
add
lret
mov
subl
adc
xor
ret
push
xchg
repnz
jae
xchg
test
cmp
or
cmpsb
scas
ffree
addl
inc
push
sub
fidivrs
mov
lds
xor
pop
cld
fiaddl
icebp
add
popa
jb
mov
inc
sub
data16
fdiv
sar
out
rolb
add
pshufw
xlat
pop
popf
adc
mov
loop
xor
adc
sub
frstor
or
daa
sub
mov
mulb
imul
adc
test
fisttpll
sub
or
xchg
mov
xchg
jmp
xor
add
inc
jae
mov
cmpsb
xor
pop
imul
push
iret
nop
cwtl
jae
dec
loope
mov
lea
inc
jbe
jnp
retw
dec
adc
dec
or
pop
sub
jno
cli
push
js
cld
xchg
outsl
sbb
call
xlat
arpl
sub
jnp
into
mov
mov
cmpsb
cmc
mov
fiadds
mov
scas
std
ja
adc
mov
jge
mov
and
cltd
push
dec
mov
push
adc
pop
dec
push
cmpl
cmp
faddl
mov
xor
or
imul
bswap
fdivs
loope
cmp
or
insl
add
add
push
add
or
mov
cld
mov
xor
pop
mov
mov
mov
mov
ds
mov
push
jbe
adc
dec
push
xchg
loope
push
and
mov
insl
push
or
adc
lods
add
fcoml
out
mov
inc
pusha
scas
cmc
aaa
inc
sahf
cmpsl
sbb
fs
loope
or
scas
aas
mov
in
xchg
ja
fdivl
add
sbb
repz
xlat
sbb
jg
cld
testb
imul
les
outsb
xchg
ds
mov
jmp
inc
jno
pop
outsl
aad
mov
add
fcompl
je
mov
sub
push
push
frstor
negl
mov
je
popf
mov
add
mov
adc
rcll
cwtl
and
dec
hlt
ret
aas
int
das
das
hlt
test
add
loopne
not
jne,pn
mov
sub
add
test
ss
adc
es
mov
in
pop
jo
cli
xchg
jnp
in
aad
hlt
stc
mov
insl
jge
or
in
mov
mov
xchg
jb
cmp
xchg
cmp
and
dec
addl
mov
iret
and
pushf
push
xor
or
repnz
mov
sbb
hlt
ljmp
lahf
xor
lahf
xor
push
mov
ss
shrb
add
out
mov
rol
or
pop
and
xchg
or
xor
stos
pop
aaa
mov
jae
push
les
hlt
mov
jle
mov
mov
and
xchg
imulb
mov
cli
pop
sbb
adcb
add
cmp
into
and
add
push
ljmp
je
inc
fldenv
repz
out
outsb
addr16
nop
sbb
movb
xchg
scas
jecxz
mov
or
push
in
jge
and
outsl
call
push
movsb
adc
loope
adc
cli
rcl
test
jns
jmp
clc
mov
call
xchg
mov
pop
sbb
out
fidivs
dec
mov
pusha
or
lahf
or
sbb
pop
xchg
pop
lds
mov
rorb
push
sub
or
popf
or
add
pop
jo
add
sbb
add
repz
aas
into
ret
adc
out
sub
adc
mov
sbb
lock
out
fcmovnu
lods
jns
lret
and
int3
dec
call
mov
imul
pop
xchg
aas
cltd
jl
out
sbb
and
rcrl
jns
push
sahf
sbb
stc
ja
sbb
xchg
xor
stos
test
rcl
or
fsubl
pusha
sbb
mov
addb
inc
cmp
ljmp
cmp
or
rcrb
cmp
lret
daa
mov
cld
jl
in
fdivrl
lock
push
lret
mov
cs
ds
dec
cltd
outsl
ficompl
xor
mov
add
xor
das
rcrb
mov
xchg
dec
cmp
add
fldl
aad
aad
dec
and
lods
push
mov
pop
jg
inc
mov
imul
cmc
js
nop
pushf
or
aam
cld
cmpb
mov
dec
adc
xchg
pop
mov
add
xchg
ds
push
cmc
and
dec
loopne
jmp
or
into
sti
mov
inc
sahf
mov
jbe
ja
mov
xchg
pop
push
orb
in
mov
cs
scas
push
ret
arpl
cmp
insl
js
and
push
adc
xor
pop
mov
pop
fistl
imulb
or
jl
xchg
push
mov
pusha
nop
pcmpgtd
cmp
loopne
xor
push
cli
sti
xchg
nop
xor
mov
xor
jecxz
rolb
jl
ret
insb
inc
cmpsb
scas
movswl
cld
rolb
mov
xchg
clc
ja
xchg
js
cmp
icebp
addl
dec
add
in
aam
fists
out
xchg
inc
xor
jg
lock
and
xor
pop
call
mov
pop
cmpl
das
notb
and
ss
and
sti
stc
pusha
xor
les
mov
js
data16
inc
mov
mov
clc
ret
xchg
pop
sbb
fisubl
jne
fisttps
or
inc
pop
ret
adc
push
xor
and
arpl
cmp
insb
cwtl
pop
pop
notl
push
adc
sub
das
mov
and
test
sub
lock
xchg
xor
decb
inc
mov
cld
roll
ret
psubsw
lds
fisubl
mov
fistpll
adc
orb
mov
jnp
inc
xchg
cld
pop
fdivr
rol
jmp
xchg
push
push
xor
shll
push
movsl
cmp
jns
scas
call
popf
outsb
pop
and
enter
dec
lock
int3
sub
sbb
inc
mov
insb
out
sub
add
bound
push
push
enter
daa
cli
sbb
fsubrl
jo
and
xor
jo
ljmp
test
pop
add
xchg
sub
insb
mov
pop
std
aam
and
inc
dec
push
or
or
pop
js
fsubs
divb
ret
sbb
pushf
idivl
ret
jp
fdivrl
fstp
in
in
adcb
jno
mov
sub
stc
sub
fprem
cmp
in
ficoml
or
xor
jae
sarb
add
rcll
in
scas
bound
sbb
aad
jns
jbe
stos
repz
adc
sbb
fwait
outsb
bound
inc
dec
cwtl
sub
xor
mov
xlat
movsb
gs
adc
or
push
adcb
arpl
insb
pop
mov
jbe
xor
sub
and
imul
mov
arpl
or
in
lock
std
or
ds
xchg
cmp
and
ja
adc
push
or
stos
outsl
iret
fucomip
mov
in
and
adc
jecxz
pop
iret
cs
dec
adc
xor
icebp
sti
stc
jo
push
addr16
dec
jns
ret
mov
outsl
fimuls
dec
lods
xor
call
int3
icebp
sub
sti
mov
pop
add
lcall
mov
inc
leave
add
or
cmp
xor
mov
mov
outsl
loope
dec
sub
xor
inc
adcb
test
sbb
dec
sub
push
sub
fildl
scas
jl
pop
mov
xor
mov
popa
inc
ret
dec
lahf
mov
je
add
pusha
jmp
pop
or
push
mov
movsl
dec
cli
adc
jno
jno
inc
setg
lcall
lods
dec
mov
and
lcall
pop
outsl
cltd
fildl
inc
or
mov
pop
fucomi
rorl
es
push
pop
clc
jbe
ja
nop
out
mov
outsl
jge
xor
and
das
mov
fnstsw
dec
pop
cmp
sbb
mov
or
insb
sub
xor
jns
sahf
inc
inc
pop
enter
js
jle
pushf
push
bound
push
ds
mov
cmpsb
add
jecxz
cmpb
inc
ljmp
int
adc
dec
sti
test
cmc
ds
out
js
dec
ds
sti
sar
inc
aaa
adc
inc
cwtl
xchg
jbe
loop,pn
cli
or
pop
stc
lcall
sahf
sbb
stos
push
out
push
sub
faddl
out
add
mov
cs
ja
push
inc
lock
lret
fldl
fs
push
mov
aas
lahf
jo
imul
shlb
daa
pop
stos
and
pop
call
movsl
pop
repz
xlat
jno
xlat
xchg
push
xchg
cmp
push
loope
test
pop
mov
mov
ss
dec
fsubr
popf
insl
pushf
push
movsb
scas
es
bound
lds
inc
aad
mov
das
loopne
outsl
lahf
subl
xor
gs
ss
fwait
push
inc
jg
inc
mov
cld
jno
jp
mov
or
daa
aas
int3
sub
insb
fs
pop
insl
sbb
mov
adc
aad
lahf
sbb
cli
inc
sti
cmp
sub
sub
fwait
iret
fnstsw
ds
std
xchg
add
xor
lods
push
ds
mov
sub
xchg
sbb
and
jmp
mov
bound
dec
mov
sbb
or
sub
pop
outsb
dec
aam
pop
sbb
test
mov
cli
test
inc
push
pop
pop
mov
or
jno
shll
mov
fbstp
imul
pop
insb
cmpsl
leave
push
xchg
movsb
ja
mov
jne
inc
jg
cltd
add
jnp
incl
and
inc
cmpsl
and
negb
popf
sbb
add
subb
add
push
xor
adc
sbb
rcll
push
das
test
das
pop
mov
jo
fisubs
fsub
push
ljmp
in
jl
roll
emms
or
hlt
and
mov
es
or
fldcw
push
or
stos
lea
jmp
add
mov
mulb
fisubrs
in
mov
loopne
lret
push
fildl
jae
decb
inc
testl
dec
into
mov
push
xchg
repnz
mov
pop
imul
pushl
inc
jle
sahf
dec
iret
adc
add
sbb
aad
ja
cltd
jb
js
repz
inc
aaa
jno
mov
pop
push
in
repz
xchg
mov
mov
outsb
jo
cmpsl
jge
outsl
insb
dec
mov
daa
jle
lods
sbbl
fsubs
jbe
in
subl
inc
loope
mov
repz
sbb
nop
sbb
insl
fistpll
cwtl
sub
pop
repnz
test
inc
push
and
pushf
ficompl
mov
imul
scas
lcall
add
pop
jecxz
jb
dec
in
or
pop
xor
decl
push
dec
push
cltd
inc
add
xchg
push
push
inc
lods
popa
mov
pop
test
xchg
fmull
clc
xchg
and
int3
shl
js
loope
mov
sub
mov
data16
in
mov
rcll
fwait
pop
scas
insb
mov
xchg
push
mov
test
fmul
or
pop
outsb
mov
pusha
push
or
ss
cmpb
ret
div
mov
andl
aas
or
ds
mov
ss
jne
xor
data16
jno
cmpb
outsb
dec
lock
adc
je
jmp
js
in
mov
pop
xor
xchg
adc
mov
mov
test
or
loope
or
jl
or
mov
icebp
pusha
out
idivl
fisttpl
dec
nop
inc
imul
cmp
clc
test
pusha
mov
outsb
ja
mov
outsb
cmp
test
fdivrs
icebp
filds
mov
sbb
popf
sbb
push
push
xor
popa
add
fucomp
cmc
cmp
in
ss
test
push
mov
fmuls
add
out
ret
sub
les
and
lahf
jle
xlat
insl
jp
insl
sbb
test
jb
pop
inc
dec
xchg
out
test
fdivr
mov
fbstp
xchg
pusha
and
jns
add
in
cmp
jb
out
out
xchg
in
pop
movsl
out
les
pop
movsb
push
jo
adc
das
ror
jne
inc
pop
mov
rolb
cmp
stos
stos
jno
fstpl
xchg
push
cmp
movsl
test
and
imul
add
jno
or
fiadds
mov
fstps
je
xchg
scas
pop
ljmp
mov
mov
push
jo
scas
imul
sbb
dec
dec
gs
adc
push
push
cmp
gs
jmp
jb
jle
inc
out
inc
outsb
hlt
pusha
jo
mov
orb
icebp
lret
or
cmc
push
add
and
loopne
push
fs
ja
fdivrl
addb
call
lock
adc
inc
ret
mov
adc
gs
clc
lods
push
les
data16
jp
cmp
es
pop
fildl
sti
nop
inc
and
push
imul
or
pop
dec
rcrl
and
and
lods
jo
pop
mov
jg
scas
adc
sahf
fmull
or
jns
cwtl
in
fimull
mov
movsb
or
das
or
xchg
aad
js
mov
negl
inc
mov
je
push
out
sbb
xchg
insl
cmpsl
xor
and
mov
mov
imul
adc
int3
xor
cmp
es
mov
cmp
mov
psubusb
loope
out
adc
cwtl
mov
cmp
cmp
dec
mov
inc
inc
fistpll
sahf
mov
cmp
xchg
sbb
lds
mov
outsb
sahf
push
adc
stos
mov
imul
in
fisubrl
push
ficoml
rol
mov
bound
mov
enter
add
popa
jnp
xor
and
lcall
and
sbb
js
and
and
sub
mov
fistps
push
test
fucomp
imul
xorb
jno
icebp
fucom
add
fimuls
inc
jg
xchg
xor
out
dec
fcmovne
lea
or
int3
lcall
imul
pop
or
xor
xchg
das
mov
mov
nop
pop
dec
xor
mov
in
push
xor
loopne
sti
or
enter
sbb
mov
adc
pop
ja
jae
das
pusha
mov
xchg
adc
add
push
into
test
jns
xchg
into
pop
jns
mov
sub
rcrb
and
jmp
xor
push
shll
add
jbe
mov
rolb
dec
push
sbb
in
popa
push
cld
add
adc
mov
fwait
inc
inc
xor
es
imul
xor
jecxz
inc
sub
jbe
sbb
add
mov
es
cmp
mov
pop
jmp
push
test
and
add
daa
lds
scas
add
push
push
and
sbb
es
sub
cltd
jle
push
jo
adc
mov
nop
sbb
inc
mov
mov
testb
xor
fisttps
aam
sbb
lock
fcoms
imul
fs
stos
jmp
test
xchg
inc
jae
rdpmc
cmp
and
and
shr
outsl
nop
jge
lods
mov
sar
sub
add
push
sbb
and
lcall
loopne
js
je
jg
adc
mov
aam
add
and
sbb
mov
xchg
loop
das
sbb
xchg
sub
mov
insl
mov
xchg
mov
push
test
popf
jge
pop
test
or
xchg
insb
fistpll
jmp
or
icebp
jno
test
xchg
cmp
in
sarb
jo
leave
mov
or
popf
add
outsl
movsl
int3
or
pop
push
lock
push
cmp
inc
outsl
aaa
loop
xchg
adc
jbe
dec
push
imul
icebp
adcb
rolb
cmpsl
push
mov
xchg
mov
xor
xor
insb
adc
xor
fisubrs
je
add
icebp
test
gs
shlb
cltd
mov
lods
or
push
cmp
xchg
fdivp
outsb
pusha
incl
xchg
lcall
xor
das
adc
mov
lods
ret
and
push
not
push
inc
mov
out
scas
hlt
cwtl
movsl
jg
mov
test
fcomps
je
mov
pop
xchg
nop
xchg
inc
sbb
cmp
jae
mov
inc
sbb
cmp
sti
xchg
in
pop
mov
push
jb
pop
outsl
xchg
outsl
aaa
jge,pt
aad
dec
loopne
loopne
push
bound
mov
jmp
mov
xchg
adc
jp
or
icebp
inc
test
mov
add
sahf
test
push
mov
xor
mov
and
fs
push
mov
icebp
fbld
in
pop
aas
enter
mov
mov
pop
arpl
lret
jb
in
add
lods
test
xor
fisttpl
dec
fs
dec
lcall
shll
in
pop
std
and
lret
xchg
cmp
in
pop
mov
mov
pop
test
fisttps
notb
push
add
bound
inc
add
jge
push
dec
popa
mov
xor
mov
xchg
aam
jl
mov
xor
xchg
mov
mov
addb
lock
jle
jae
and
jp
rcrl
lahf
stos
fdivrs
add
cmpsl
mov
lea
xlat
add
adc
or
jo
adc
fisttpll
pop
clc
lea
xchg
mov
dec
jmp
sub
les
cli
loope
int3
adc
xchg
jbe
loop
cmpl
lret
mov
mov
idivb
adc
dec
xchg
ret
push
imul
lds
sbb
lea
mov
sahf
and
daa
sbb
mov
jle
xchg
mov
imul
outsl
hlt
sbb
xor
in
xchg
imul
xchg
std
insb
clc
cmp
cmp
mov
mov
ljmp
outsb
fs
stos
bnd
add
dec
mov
xchg
shlb
int3
cltd
mov
cmpsb
xor
push
es
pop
adc
sarb
pop
or
sbb
sub
inc
cmp
movsb
sarb
xchg
out
pushl
lcall
test
xor
rolb
insb
lcall
sbb
cmp
sub
xchg
out
jecxz
pop
aaa
xor
inc
ret
sbbl
add
in
test
lods
and
inc
es
js
push
rorl
scas
inc
sbb
adc
std
push
addr16
xchg
fwait
mov
clc
fisttpl
std
jne
and
adc
test
pop
mov
das
sub
dec
cmp
fildll
sbbb
xorl
pop
cli
cwtl
sbb
fildl
jns
shll
mov
jmp
jle
or
jno
js
aad
js
in
mov
ljmp
inc
cmpsb
mov
fidivrs
xor
xor
lock
mov
sub
jnp
outsl
xchg
mov
movsl
fs
cli
bsr
fnstsw
leave
inc
cmp
out
push
xchg
cli
int3
imul
nop
in
lret
movsb
inc
in
inc
aas
mov
dec
push
or
adc
adc
mov
lock
add
adc
fldl
inc
ds
fldt
mov
popa
in
lret
inc
cmp
lods
xchg
pop
jbe
push
fs
roll
xchg
xchg
sbbb
nop
pop
cmp
jmp
inc
mov
jge
jg
mov
lret
pop
cmp
adc
std
movsl
inc
rorl
stc
and
adc
mov
mov
inc
mov
adc
adc
xchg
push
adc
jae
dec
jmp
outsl
ljmp
sbb
outsl
pusha
or
cmp
sub
mov
sub
ss
fists
into
insl
js
repnz
add
mov
push
push
pusha
add
rclb
jge
addb
jbe
jo
jecxz
cmp
in
sub
js
jnp
push
movsl
cmc
loopne
jmp
pop
sbb
mov
stos
adc
movsb
pushf
mov
fmull
pop
loopne
mov
pop
mov
aam
lret
add
ja
push
fisttpl
ficomps
aam
jo
xor
lcall
dec
pushf
sahf
adc
mov
mov
pushf
jge
lret
jle
lods
loope
jg
jecxz
mov
ret
movsl
inc
mov
and
leave
push
sub
or
adc
jg
clc
sti
movsl
pop
fnstcw
push
push
leave
andb
out
mov
push
imul
push
xchg
mov
fcoml
and
adc
jne
stos
fucomip
insl
xchg
pop
push
push
jbe
push
lock
loope
cmp
mov
dec
push
es
or
sbb
dec
pop
and
test
pusha
mov
adc
sbbl
call
sbb
std
sbb
rcrb
mov
js
ljmp
cmp
out
mov
cmp
icebp
jbe
pop
shrl
lock
jl
adc
sub
pushf
addr16
and
push
jbe
mov
inc
inc
mov
xor
and
or
pop
xchg
fiadds
pop
jmp
dec
popa
xlat
add
xor
fwait
cmc
test
jle
test
sbb
cwtl
out
fistps
loope
push
stos
push
mov
mov
bswap
push
repnz
cs
loope
dec
cmp
jno
or
push
adc
test
fildl
push
mov
sub
jne
mov
sbbb
clc
sub
sub
cltd
mov
mov
dec
iret
push
scas
cmp
leave
add
or
mov
mov
pop
sarl
dec
sbb
loope
out
xor
rcrb
fxch
mov
into
dec
popa
or
mov
lcall
mov
int3
and
pop
clc
xchg
dec
shrl
mov
xchg
jl
sarb
aaa
shlb
sub
ret
mov
mov
inc
jmp
repnz
ljmp
jl
mov
cli
mov
push
outsb
hlt
mov
test
xchg
stos
mov
jbe
fs
xchg
mov
ficomps
cmc
dec
xlat
inc
test
mov
and
leave
test
dec
adc
pop
and
push
push
push
push
loope
cmp
mov
sbb
lahf
movaps
gs
imul
mov
xchg
ljmp
outsb
mov
jo
xchg
jbe
jg
sbb
lods
inc
insb
insb
lea
push
daa
leave
mov
xchg
and
loop
and
das
xor
mov
adc
scas
sbb
aaa
push
mov
loope
dec
mov
into
dec
fbstp
mov
dec
adc
rolb
ja
mov
les
outsl
scas
gs
mov
daa
dec
xchg
movsl
ja
pop
adc
adc
jp
jno
fildl
push
arpl
push
subl
ret
mov
xor
dec
mov
push
rcl
jp
sub
aas
jnp
push
jle
arpl
pop
jg
shl
adc
lret
inc
jb
inc
ja
shlb
jb
outsl
dec
sbb
cli
lds
sbb
push
cltd
xchg
dec
adcl
mov
sti
ds
sbb
inc
bound
sbb
add
xor
and
add
loopne
cs
popf
test
push
orl
mov
adc
lods
dec
adc
inc
scas
cld
sub
add
mov
sbb
mov
jne
test
mov
incl
arpl
mov
jg
add
xor
fildll
imul
mov
xchg
sub
sub
mov
lcall
jl
lahf
int3
in
inc
xor
push
dec
cmovb
or
mov
sbb
jno
push
adc
outsl
pop
push
push
rorl
divl
push
out
push
adc
adc
lret
sub
mov
sbb
sbb
clc
pop
outsl
mov
or
shlb
add
cli
out
add
rcrb
and
jno
dec
jl
xorb
outsl
cmp
dec
aad
js
sub
cmp
loope
sbb
rcr
pop
dec
stos
pop
aas
lock
popf
sbb
mov
inc
pop
sbb
cmp
icebp
push
cmpl
scas
mov
mov
das
fsubl
mov
or
jbe
cs
enter
lods
sti
dec
or
or
inc
hlt
std
std
pop
mov
jp
push
jecxz
lock
repz
aad
shrl
lcall
mov
stc
in
cmp
sbb
xchg
and
sub
pop
bnd
pop
jno
dec
sar
fwait
stos
sbb
loope
or
sbbb
ja
cmp
fsubrl
mov
cmp
subl
cmp
xor
mov
dec
inc
cmp
outsl
add
add
aad
push
movsb
and
add
fisttpll
mov
sub
xor
pop
clc
pop
aas
add
fwait
jae
mov
pop
and
mov
stos
jnp
mov
pop
mov
mov
ret
call
inc
js
insl
sub
add
stos
mov
loop
sarl
div
mov
mov
test
pop
insb
clc
stos
lcall
push
mov
icebp
iret
pusha
enter
dec
push
sar
sub
out
and
dec
js
push
jle
mov
test
idivl
mov
lods
mov
stos
lods
xchg
lret
push
lahf
aaa
bound
test
jo
rcr
push
and
lret
sbb
testb
mov
sbb
dec
aaa
in
mov
dec
mov
fbstp
aas
aam
xorb
push
icebp
imul
sbb
ss
pushf
repnz
incb
or
outsl
pop
sti
xchg
in
movsl
adc
mov
in
mov
inc
and
jecxz
jbe
test
rcrb
dec
std
test
popf
add
inc
push
add
nop
ss
xchg
adc
jb
jecxz
data16
add
cld
push
pop
js
sbb
das
imul
adc
in
fcmovb
sub
cmc
lea
orl
sub
inc
mov
in
fldl
int
dec
pushf
jbe
and
aas
push
std
push
push
loopne
sbbb
adc
xor
lea
mov
fwait
mov
loop
mov
dec
mov
sti
sarb
push
fwait
inc
fadds
pop
cli
inc
adc
sbbb
dec
in
mov
frstor
inc
pop
adc
xchg
mov
dec
mov
mov
cmp
orl
mov
adc
adc
movsl
xor
cmpsl
sahf
jle
sbb
mov
mov
mov
inc
and
sahf
aaa
adc
sub
pop
cli
rolb
add
xor
in
lret
pop
cmp
ja
dec
inc
test
pop
pop
lock
insb
in
test
dec
fsubr
cltd
and
cmp
lock
jle
push
mov
adc
ret
or
add
adc
cwtl
clc
mov
sub
mov
cmp
cwtl
sti
aaa
mov
ret
inc
xlat
mov
push
mov
sub
fucomp
mov
sbbb
jbe
das
mov
inc
insb
fistpll
jne
sbb
sti
or
xchg
cld
dec
movsl
loope
je
inc
ljmp
and
fs
xchg
jo
cltd
arpl
mov
mov
mov
push
shrb
rorb
jle
outsl
es
inc
test
jecxz
mov
xchg
insl
sbb
aas
imul
loop
add
mov
inc
decl
push
adc
ret
out
jmp
gs
aad
inc
popf
sbb
or
dec
fbld
subl
jo
xor
or
loop
mov
jbe
loopne
or
test
mov
adc
out
mov
fs
jge
mov
in
nop
dec
test
dec
in
mov
push
or
inc
outsl
aaa
cs
and
push
pop
orb
ja
movaps
adc
sub
add
add
pop
jge
jo
repnz
xchg
sbb
clc
movsb
mov
fidivrl
xchg
mov
push
ljmp
jge
jg
outsl
adc
cmp
add
sub
fidivs
scas
int
mov
mov
call
nop
out
sbb
mov
sbb
mov
loop
mov
mov
int
pop
sub
jl
pusha
in
pop
and
pusha
sbb
out
outsl
arpl
dec
popf
icebp
mov
shl
fsubr
push
mov
lcall
cmpsl
inc
cmpsl
cs
jnp
lea
inc
cmp
and
sar
popa
inc
dec
pop
rol
push
stos
out
add
mov
mov
aas
sub
bound
push
jo
or
addl
dec
or
mov
mov
ss
jmp
jp
jg
xor
lods
xchg
sbb
sbb
fsubrl
mov
sbb
cmp
test
mov
imul
into
cmp
lock
aad
xorb
stos
pushf
add
daa
les
popf
or
xchg
addr16
mov
cld
lea
inc
ja
mov
inc
testl
sbb
outsl
ja
push
jl
call
mov
and
adcl
dec
mov
and
add
or
and
out
cli
dec
jae
rorl
mov
or
inc
push
pop
inc
and
call
lcall
addb
lcall
mov
out
clc
ss
inc
repz
ljmp
loopne
cmc
adc
inc
sbb
popf
push
or
lock
mov
lahf
mov
pop
cmp
sub
dec
ret
sub
es
mov
xchg
imul
popf
popf
and
mov
adc
sbb
sbb
xchg
shlb
addl
movsl
jl
ds
stos
jo
lret
out
push
inc
push
test
mov
push
cltd
dec
enter
mov
fwait
sbb
loop
cmpsb
xchg
insl
mov
sarb
add
imul
fwait
mov
adc
cmp
dec
jo
pop
cmp
daa
adc
fidivl
xchg
in
test
ja
aaa
cli
xchg
loope
lahf
lds
adc
rorl
add
int
xchg
stc
loop
mov
mov
inc
fwait
negb
pop
ss
pop
fcomp
cli
test
inc
sbb
and
movsl
movsl
dec
hlt
pop
in
lods
ficompl
cli
popa
sub
sub
outsb
mov
mov
push
push
rcl
int3
mov
sarb
push
dec
mov
adc
dec
repnz
push
push
pop
fiadds
gs
add
test
fnstcw
jns
pop
inc
jmp
adc
mov
inc
mov
loopne
pop
icebp
add
xor
insl
cmp
mov
pushf
mov
icebp
cmp
or
ffreep
test
shll
cs
and
inc
mov
out
pop
sub
fisttpl
fidivs
mov
lods
sbb
mov
jecxz
inc
cmp
mov
xchg
mov
roll
sbbl
jp
or
mov
ds
repz
dec
pop
test
jnp
jmp
jbe
pop
sbb
insb
lahf
ret
movsl
or
mov
jmp
lods
mov
xor
xchg
loope
sbb
cli
fisttps
bound
xchg
mov
mov
data16
fdivl
fstps
cs
ret
push
jle
mov
outsb
inc
add
add
mov
jge
fmul
mov
nop
jmp
jg
push
cmp
cmp
scas
ss
rcrb
cli
mov
insb
popf
lods
xchg
xor
ret
mov
inc
clc
or
push
call
fdivrs
popa
sarl
mov
stc
jmp
jg
out
inc
cmp
cmp
push
and
sbb
xor
insb
pop
lds
data16
push
mov
idivb
jb
push
mov
shr
test
sbb
mov
mov
repnz
test
dec
pop
xorb
test
bnd
fldt
icebp
aad
mov
sub
jmp
mov
insl
bound
pop
push
leave
adc
and
cs
arpl
pop
popa
jae
lods
inc
sbb
mov
pop
shll
fldl
lock
jno
ficoms
cmpsl
outsb
out
sub
outsb
pop
push
cmp
push
mov
jo
mov
or
jmp
mov
mov
or
test
and
and
std
sbb
or
mov
and
push
xlat
cwtl
jo
xorl
mov
lods
add
leave
sar
push
dec
fcom
push
out
dec
js
pop
loopne
sbb
call
inc
push
fucomip
pop
push
je
out
mov
xorl
jo
or
loope
adc
xchg
addr16
or
cs
push
je
jns
jg
mov
outsl
xlat
xor
xchg
push
cmp
xchg
pop
rclb
ja
cmp
leave
loope
incl
cmpsl
push
std
adc
add
add
hlt
inc
fbstp
cmpsl
nop
fcomps
cld
in
arpl
out
sti
popa
test
fs
push
sub
push
or
ret
and
mov
das
jl
add
dec
aam
scas
adc
sub
mov
dec
gs
dec
enter
push
pop
push
jb
ffree
stc
dec
mov
cmp
call
std
add
orb
mov
inc
sbb
mov
and
xor
and
data16
mov
inc
insl
jecxz
mov
add
repnz
shll
aad
sub
mov
aam
mov
adc
jmp
sub
jns
fsubrs
inc
test
and
fadd
or
lcall
loopne
push
add
adc
loop
out
es
aaa
add
xor
jmp
push
add
dec
jo
lods
mov
ret
push
js
adc
add
pop
fdivr
subb
push
nop
enter
jnp
xor
rcr
out
lock
add
sarb
lock
pop
call
cwtl
lret
push
scas
mov
jmp
and
imul
in
icebp
mov
adc
xchg
stc
xorl
mov
pop
std
call
xor
mov
pop
pop
inc
and
dec
pusha
inc
mov
test
push
jnp
out
push
cmp
or
jmp
cmpsb
std
cs
cld
fnsave
push
pop
into
sahf
aaa
mov
xor
pop
jmp
outsb
cld
push
shrb
aas
mov
leave
cmp
mov
xchg
xchg
imul
fnclex
imul
xchg
or
mov
push
push
cmpsl
mov
or
or
push
mov
or
mov
xchg
pushf
call
sub
dec
push
inc
mov
imul
testb
cli
mov
jbe
clc
test
inc
fxch
and
add
cs
ja
xchg
scas
lea
call
popa
fwait
jp
adc
clc
pop
lock
xor
fsubrl
outsb
pop
fistpl
out
jno
xchg
add
mov
std
adc
arpl
rclb
sbb
sub
mov
out
push
mov
push
notb
xchg
cmpsl
insb
or
sub
push
arpl
push
sbb
insl
shl
or
xor
stos
pop
sahf
mov
push
aam
dec
mov
pop
sub
xchg
sbb
jecxz
xor
jbe
shll
jg
cmc
arpl
insb
and
xlat
pop
jns
es
orb
ljmp
mov
add
push
movsl
fptan
mov
sub
addr16
fstpl
push
loope
push
shr
clc
cmpsl
add
dec
int3
movsb
sub
mov
sbb
jae
pop
add
sbb
jmp
in
sub
sbb
js
daa
je
scas
in
dec
paddb
lds
xlat
mov
mov
jb
cwtl
mov
mov
call
add
mov
cs
out
lahf
pushf
push
jns
and
cmp
dec
sbb
ss
add
xchg
push
sbb
ret
xchg
shrb
leave
xor
loopne
push
das
dec
pusha
cwtl
and
insl
out
call
lock
mov
orb
and
sbb
mov
popa
and
insb
jae
movsl
xor
inc
jns
push
jmp
ja
jns,pt
fidivl
cld
mov
test
push
insl
jmp
pushf
in
or
insb
push
pop
leave
jnp
push
sbb
mov
jge
aam
ret
mov
push
lahf
enter
test
sti
ret
add
ss
push
int3
fldpi
pushl
mov
jnp
ret
xor
mov
pusha
mov
sub
cmc
jmp
mov
adc
notl
fidivrl
or
xor
jne
inc
or
mov
cltd
shr
jg
and
jle
push
xor
clc
aas
dec
test
mov
out
in
sub
mov
inc
sub
and
push
mov
push
aaa
adc
jns
icebp
clc
mov
in
pop
jp
add
xor
pushf
push
cmp
sub
stos
gs
xor
mov
lock
repz
sub
xor
fsub
out
adc
arpl
cs
adc
inc
enter
pusha
ror
cmp
push
inc
es
or
dec
std
xor
xor
jp
xchg
push
cwtl
cmp
or
idivb
cmp
sub
push
or
lds
and
mov
and
enter
jmp
pop
mov
sub
sbb
ret
movsb
lcall
jb
repz
leave
int3
adc
sub
clc
ds
rclb
sbb
jecxz
clc
aaa
add
pushf
jp
and
pop
pop
mov
sub
and
adc
add
mov
loope
sub
insb
fwait
in
or
popf
and
inc
and
mov
addb
cli
inc
mov
cld
or
jl
push
mov
std
dec
jne
xor
scas
decl
inc
xor
aad
add
mov
dec
js
inc
add
dec
push
xlat
mov
jle
test
lcall
sub
outsb
push
clc
push
inc
leave
cmc
sub
cwtl
movsb
aas
or
les
mov
push
loopne
cmp
mov
push
inc
cmpsl
stc
pop
ss
lds
pop
fdivr
and
dec
xor
movsb
lahf
sbb
leave
hlt
cmp
xchg
adc
aaa
sbb
je
dec
inc
adc
xorb
jl
cli
pop
xchg
loop
pop
nop
pop
adc
repnz
rclb
imul
ret
rcl
or
outsl
sbbb
ficompl
mov
mov
xlat
icebp
jno
add
push
inc
mov
push
cmp
mov
jp
add
mov
popf
adc
std
fistpll
mov
sahf
in
int
lock
out
pushf
stos
mov
mov
cmpsb
mov
mov
push
mov
andb
or
scas
jg
sub
iret
mov
push
stos
inc
add
mov
fistpll
and
sbb
xchg
and
fcomip
insl
sti
xchg
jno
sar
out
lcall
sub
gs
and
sbb
add
and
sub
aad
fsubrs
sbb
mov
inc
in
outsl
in
lcall
mov
xchg
cmp
movsb
lods
lds
jb
stos
xor
aam
out
lds
jge
mov
dec
jns
push
fcomps
adc
lods
stos
mov
xchg
aaa
inc
notl
and
stos
dec
sub
mov
mov
loopne,pt
or
lds
push
jo
aas
aam
pushf
das
pop
jb
test
nop
and
sbb
ljmp
jl
fcomp
pop
fistpl
inc
ss
xor
push
jmp
dec
notb
sbb
xchg
std
add
mov
jb
cmp
or
xlat
pop
out
jmp
xchg
aad
xchg
cmp
repz
or
sbb
jecxz
cwtl
pop
data16
mov
ret
pop
inc
outsl
cmpsb
pop
pushf
imul
mov
dec
mov
clc
pop
push
jge
push
push
xor
filds
cld
push
js
jb
mov
leave
push
fmuls
repnz
outsb
xchg
inc
and
xchg
scas
xchg
jno
repnz
push
push
sbb
js
sti
mov
outsl
enter
push
jno
sub
aas
fcmovbe
or
ficoml
ret
dec
lods
je
pop
push
xchg
adc
pop
mov
ret
xchg
inc
sbb
mov
jbe
in
xor
outsl
in
xor
xor
inc
pusha
int3
inc
sbb
mov
pop
sbb
cld
lea
pop
aas
aas
nop
cmp
jne
ja
push
pop
clc
fcoml
fld
mov
adc
mov
lea
xor
and
aaa
jnp
dec
or
insb
push
lret
scas
jg
test
inc
pop
sarl
inc
mov
shll
mov
repnz
push
idiv
outsl
cld
lods
sub
nop
jecxz
inc
addl
lea
pop
mov
xchg
dec
ja
test
cmp
ss
and
test
cmp
dec
std
mov
inc
pop
addl
sbb
bound
add
aam
add
fldcw
mov
fisubl
in
mov
lcall
adc
pop
out
ss
push
dec
add
add
sbb
scas
ljmp
in
icebp
inc
xchg
loopne
xchg
scas
es
add
cmpsb
addr16
jecxz
sub
push
stc
add
inc
push
outsl
inc
idivl
pop
nop
rolb
fdivrp
push
incb
dec
lahf
fnstenv
aaa
mov
call
sbb
add
push
leave
jo
aaa
hlt
mov
divb
push
mov
mov
stos
imul
mov
negb
sbb
xor
adc
aam
sarl
lds
jb
inc
mov
jns
lock
push
test
loop
faddl
clc
sbb
mov
imul
cld
scas
js,pn
mov
pop
jno
push
in
jnp
sarb
inc
aas
stc
mov
inc
test
mov
xchg
loop
pop
mov
mov
lods
notb
nop
or
pop
fiaddl
push
test
std
mov
ds
xor
inc
loope
adc
push
in
mov
insl
add
lcall
inc
pop
mov
push
aam
into
pop
fidivs
add
mov
jbe
xor
nop
push
mov
jbe
fbstp
sbb
imul
cmpb
icebp
mov
adc
jno
cwtl
jbe
inc
jmp
inc
mov
mov
cmpsb
clc
imull
mov
jae
adc
mov
cmp
inc
mov
loop
sub
cmp
pop
shll
mov
push
jae
imul
fistpll
dec
ljmp
test
pop
outsl
stos
cmp
mov
es
pop
and
add
fucomi
xor
cmp
push
aaa
bound
jmp
inc
xchg
add
or
pop
pop
xchg
cli
cmp
xchg
insl
sti
icebp
clc
mov
leave
cmp
or
jg
sbb
sub
lret
in
push
inc
loopne
stos
in
addl
and
loope
jp
mov
push
inc
adc
scas
jmp
mov
push
shrl
lret
rcr
mov
push
mov
call
and
or
mov
adc
pop
dec
xor
dec
outsl
sbb
das
push
mov
lea
frstor
lods
mov
leave
scas
decl
or
sti
adc
push
aaa
js
paddd
aam
push
lea
xchg
lahf
clc
outsl
pushf
loop
dec
inc
xor
pusha
adc
les
jg
ds
adc
int
inc
jge
cmp
cld
ffreep
fldenv
inc
xchg
adc
push
lret
mov
push
xor
into
pop
scas
mov
push
or
mov
outsl
mov
and
pop
jmp
or
jnp
push
call
fsub
mov
and
loope
cmpsb
test
loop
sub
outsl
xor
xchg
push
js
aas
pop
or
das
adc
sbb
cmpsb
sahf
add
xchg
push
shlb
push
mov
les
das
push
cmp
pop
fdivrs
cmpsl
sub
lods
push
sub
lods
jae
mov
add
or
mov
ret
fidivs
adc
jno
rcl
jmp
push
sub
adc
mov
fimuls
mov
mov
dec
xor
cli
add
test
mov
dec
popa
test
xorl
test
fbld
xor
scas
pusha
and
dec
or
mov
cli
outsl
xchg
outsb
push
jae
or
std
push
jg
mov
xchg
or
addr16
ffreep
pop
faddl
adc
addr16
mov
in
imul
pop
xor
xchg
shlb
call
inc
mov
or
lret
es
dec
jl
loopne
je
cmp
jle
adc
dec
pusha
push
add
rorl
cs
cmpsb
push
call
jae
test
shll
icebp
nop
enter
or
leave
xchg
mov
or
mov
and
sbb
jbe
dec
sub
cmp
cmpsb
mov
xor
mov
mov
shlb
pop
add
out
and
adc
or
dec
lret
scas
mov
aaa
aam
mov
xchg
xor
sbb
lret
push
or
xchg
stc
mov
sub
sub
or
iret
outsb
in
call
pop
int
mov
and
out
push
das
inc
jae
cmp
fbld
mov
loopne,pt
mov
xchg
popf
mov
loope,pn
icebp
mov
xchg
popf
ds
sbb
mov
mov
jg
jg
ret
jle
push
inc
gs
call
popa
rcll
or
imull
clc
push
jno
cmpsl
lock
cmp
jmp
ss
mov
out
mov
out
fbstp
iret
imul
xor
jp
sbb
imul
shrb
inc
clc
jg
ret
fdivl
hlt
sub
or
lahf
mov
add
mov
push
xchg
lea
cmp
mov
fisubrs
cmp
xchg
fs
mov
sbb
es
push
ljmp
push
mov
mov
or
jge
lcall
movsb
nop
cmp
mov
incb
popf
jne
jecxz
lods
pop
jmp
pop
dec
shlb
dec
pop
lret
xor
push
xor
js
dec
mov
xchg
addr16
cmp
je
adc
jno
negl
ja
les
shlb
aaa
or
insl
popa
lock
and
addr16
jae
ja
stos
cs
in
ror
adc
mov
adc
push
mov
push
add
sarl
fisttpll
stos
enter
in
cmpl
jno
outsb
lcall
cld
sar
rorl
test
mov
jge
scas
test
lcall
sbb
push
rclb
inc
adc
mov
in
cmpsl
mov
push
loope
clc
fists
es
repz
ds
aam
andl
aaa
nop
mov
inc
test
add
stc
mov
rolb
jo
push
and
add
xchg
ljmp
loop
fnsave
js
mov
and
cmp
addr16
add
fimull
adc
mov
add
and
dec
mov
sbb
je
mov
inc
inc
push
pop
mov
jb
or
add
test
inc
cli
xchg
call
ja
sbb
cmpsb
and
mov
add
hlt
mov
fstp
mov
push
decb
ljmp
push
pop
fimuls
sub
mov
add
int3
rol
sub
cmp
aaa
pop
jmp
cmp
xor
mov
or
hlt
jb
inc
call
dec
nop
in
push
mov
aad
bound
fildll
lret
dec
jne
in
es
lcall
andl
pop
adc
push
mov
enter
xchg
inc
cltd
mov
sub
jbe
xor
negl
or
bound
sub
jo
sbb
sahf
mov
pushl
or
testb
mov
add
call
addl
call
jp
in
mov
fsubs
pop
lcall
and
int3
pop
lods
xor
fwait
cmpsb
imul
mov
mov
rcll
add
xchg
xchg
dec
jo
out
or
lds
lock
inc
outsb
pop
cmp
sahf
mov
call
fdivrl
leave
adc
out
aas
jmp
mov
xor
clc
pop
cmp
mulb
aaa
jg
xchg
in
add
scas
adc
je
je
out
jo
dec
je
hlt
sub
mov
aam
push
outsb
test
add
leave
xchg
icebp
adc
dec
rcrl
call
filds
cli
adc
push
dec
mov
decb
out
push
push
add
rcrl
push
fwait
and
leave
nop
add
dec
add
gs
and
add
jb
xor
sbb
icebp
sbb
lcall
adc
das
mov
mull
vmwrite
in
mov
ret
lock
mull
xchg
adc
shl
in
mov
adc
xor
cltd
push
out
clc
aaa
icebp
mov
test
test
jmp
fwait
mov
sbb
fucom
dec
addb
jmp
xorl
andl
cmp
lods
cs
cli
and
mov
dec
push
xchg
sub
and
fsubrl
movsb
push
mov
call
push
pop
test
bound
mov
icebp
mov
call
jae
pop
xor
mov
sbb
cmpsl
or
inc
push
or
mov
pusha
aas
movsl
out
xor
lret
fs
push
or
je
pop
clc
inc
das
xor
loope
rclb
call
cmpsb
outsb
or
jge
sbb
insl
mov
xorb
fcomps
add
std
nop
xchg
test
mov
pop
sbb
loop
inc
imul
pushf
mov
and
pop
scas
fisttpll
outsb
jl
mov
mov
je
loope
xchg
push
and
jge
mov
sbb
shll
or
decl
test
enter
sahf
mov
mov
pop
aaa
inc
sbb
int
bound
sar
pushl
inc
push
pushf
pop
movsl
fiadds
out
mov
jg
loopne
or
fwait
jg
sub
mov
sbb
sbb
pop
adc
jns
adc
test
xchg
add
pop
cli
inc
out
push
loop
xchg
xchg
jl
mov
popa
pusha
mov
mov
daa
or
in
xchg
cwtl
and
adc
ret
dec
fbld
fdivrs
in
mul
and
or
pop
scas
push
sbbb
jmp
rorl
add
lods
lods
loope
loope
inc
cs
lock
or
hlt
cmp
or
adc
lock
sub
sub
dec
jge
jbe
add
faddl
mov
fiadds
jle
test
call
pop
jae
mov
rorl
mov
cmp
aaa
xchg
jne
clc
sub
push
test
xor
mov
push
movsl
adc
push
adcb
push
dec
lcall
ljmp
andb
mov
cmp
filds
lods
es
icebp
jle
fnstsw
add
sti
mov
sbb
ljmp
leave
xchg
fstp
inc
or
cmpl
dec
repz
movsl
shl
sub
mov
and
xor
mov
dec
arpl
nop
sar
and
adc
sbb
jbe
fcomi
add
push
mov
xchg
or
outsl
ud0
rorb
out
dec
mov
testb
lods
pushl
fists
cmpsl
das
inc
jge
adc
popa
xchg
or
arpl
jmp
aaa
filds
or
clc
aas
push
push
xorl
pop
sub
icebp
push
arpl
das
in
mov
fwait
xchg
xor
and
jmp
call
inc
leave
or
add
push
addr16
aad
push
xchg
icebp
mov
xchg
pop
pop
lods
cmp
mov
rol
in
mov
cmc
xchg
lret
xor
push
jno
add
cmpsl
jb
je
pop
cs
fwait
aad
add
outsb
pop
mov
ret
xor
jecxz
lahf
test
sbb
xor
in
xor
sub
divl
cld
push
lods
inc
push
test
push
jmp
lods
mov
enter
leave
pop
sbb
inc
std
or
fbld
add
popa
or
inc
mov
xor
ret
and
and
nopl
jle
jp
and
cli
mov
ret
push
das
lret
lcall
clc
mov
dec
xchg
xchg
mov
mov
fnstcw
lea
outsl
mov
and
sub
mov
sub
fists
or
or
mov
ret
or
push
std
call
cltd
fwait
test
cld
insl
enter
dec
icebp
shl
mov
fistpll
fbstp
mov
cmc
movsb
mov
fistps
ret
push
mov
ret
addl
push
sub
clc
fadds
mov
sub
mov
int3
cltd
popf
cmp
lahf
push
in
in
inc
lcall
jns
ror
pop
cmpsb
adc
or
mov
jns
pop
push
call
inc
aad
sbb
cmpsb
jecxz
aad
mov
jle
push
pusha
test
lds
call
mov
sub
arpl
imul
xchg
jg
adc
push
or
test
mov
sti
push
sub
movsb
sub
lods
dec
cmc
jbe
xchg
and
aad
outsb
insb
roll
rclb
outsb
adc
inc
outsl
add
mov
xor
fsub
orb
ficoms
lret
xor
and
out
xchg
jbe
incl
inc
dec
xchg
ljmp
cmc
ljmp
and
icebp
pop
add
and
pop
into
mov
jb
insl
cld
call
daa
or
cltd
lods
mov
adc
adc
popa
push
adc
mov
fbld
adc
popa
adc
clc
jg
fs
inc
add
mov
loopne
aas
cmp
mov
mov
dec
dec
sbb
cmc
sbb
adc
mov
out
jg
dec
movsl
bound
lahf
mov
push
push
daa
mov
bound
ja
adc
mov
repz
dec
mov
js
inc
out
dec
mov
test
mov
into
xchg
adc
fsub
std
mov
inc
or
adc
outsl
inc
ret
scas
cmp
notl
push
and
xchg
les
movsb
adc
dec
add
inc
call
add
adc
fcmovb
ffree
int
popl
mov
test
hlt
sbb
jno
mov
roll
fstpt
xor
xchg
sbb
in
sbb
fwait
mov
rorb
mov
adc
lret
add
sub
cmpsb
inc
fildl
test
mov
vmovlps
dec
lds
and
mov
call
lret
pop
push
clc
sar
in
vpunpcklwd
bound
add
jge
cmp
jge
aas
leave
in
mov
sbb
std
pop
insl
mov
pop
pop
sbb
xor
dec
lods
fchs
ljmp
mov
in
outsb
aaa
rcrb
or
inc
fbld
out
das
nop
mov
mov
sub
sbb
fiadds
adc
addr16
jb
popa
incb
in
movsb
in
lods
lret
jg
out
xchg
aas
push
pop
into
push
fcompl
test
ds
hlt
fists
or
cld
lods
add
ret
mov
add
test
lock
mov
andb
pop
xchg
pop
adc
lods
pop
iret
repz
xchg
mov
out
dec
or
scas
ja
xchg
cs
xlat
or
fwait
movsl
pop
lds
sbb
pop
sub
sbb
jmp
push
push
fs
cmc
push
rcrl
push
mov
insb
inc
shrl
push
lret
iret
lret
or
outsb
cmpsb
cwtl
lods
push
jp
inc
stc
xchg
and
fistl
les
push
jmp
addr16
xor
inc
int
lods
lret
das
insl
fcmovnu
stc
cs
mov
aam
mov
jl
mov
mov
jp
sbbb
in
jo
stc
ss
mov
lahf
mov
je
mov
int
rep
rcrl
pop
jg
adc
dec
dec
test
jge
and
test
xchg
jg
mov
in
sub
jg
mov
ds
je
jnp
imul
je
sub
outsl
leave
jb
pop
clc
ja
pusha
aas
sbb
cmp
test
pop
fcomps
outsl
and
mov
mov
lahf
bnd
add
push
imul
mov
pushf
add
mov
stc
out
fidivrl
add
jnp
xor
stos
clc
mov
rcrb
aas
sbb
sbb
mov
test
stos
lret
pop
call
lret
add
push
adc
push
or
and
das
xor
test
mov
xchg
ret
jns
mov
mov
or
aad
adc
clc
mov
xchg
sbb
pushf
inc
xchg
neg
push
or
push
cmp
outsl
mov
ret
jg
push
outsb
jg
in
sub
lock
and
inc
mov
gs
add
cmp
lods
pusha
aaa
lock
roll
sti
jo
ljmp
ret
pop
mov
mov
jmp
or
add
push
mov
dec
cmpsl
xor
push
xor
lea
push
sub
ds
push
pushf
xchg
fdivrp
popa
test
inc
lock
js
cmp
add
pop
jbe
jl
aad
ret
fcompl
cli
mov
lods
std
imul
add
outsb
xor
mov
lock
es
repz
inc
imul
add
mov
mov
lock
jg
in
pusha
mov
mov
pop
adc
cwtl
mov
mov
stc
sbb
inc
sbb
icebp
xchg
dec
sub
push
push
mov
imul
arpl
cmp
inc
add
jmp
cmp
and
sub
fisubrs
sub
inc
adc
pop
adc
ret
mov
imul
fcompl
lea
push
cwtl
cmp
inc
push
add
fldl
ret
mov
fidivl
adc
es
ret
loopne
add
jb
fmulp
inc
sahf
dec
ss
xchg
xchg
jo
fadd
icebp
jg
and
xadd
adc
dec
test
subb
mov
lods
mov
push
mov
lcall
mov
mov
adc
pop
cltd
sub
les
inc
mov
fimull
in
jo
arpl
jmp
lcall
aam
mov
cwtl
das
jbe
aad
sbb
in
xor
fstl
xchg
add
mov
incl
bnd
and
pop
dec
stos
pop
cld
pop
sbb
hlt
jb
mov
sbb
aam
pusha
or
ljmp
and
aad
jg
mov
push
popf
fisttpl
mov
push
clc
jmp
clc
loope
inc
xor
add
sub
push
inc
xor
outsb
fdivr
jmp
mov
pop
xor
pop
cmp
fbstp
adc
xchg
xchg
imul
xor
in
pop
cld
jmp
cltd
or
and
pop
call
hlt
jmp
addr16
sbb
mov
adc
mov
bound
jmp
lods
bound
test
xchg
pushf
jg
add
pop
pop
xor
lret
sbb
test
insb
mov
les
outsl
pop
xor
jmpw
inc
pop
sub
jle,pn
mov
std
stc
movsb
push
jg
lock
dec
sbb
and
lea
loopne
inc
andb
ficoms
lret
push
xchg
loope
mov
or
clc
dec
dec
mov
iret
lahf
loope
xor
adc
jmp
inc
nop
loope
insl
jl
adc
fsubl
ret
inc
adc
faddl
inc
sahf
roll
lods
shll
sahf
inc
inc
pop
aam
sbb
or
movl
loop
dec
mov
jo
xor
iret
mov
ds
je
add
or
xchg
sbb
sub
mov
lar
dec
fldl
adc
lods
jg
xchg
arpl
and
sti
mov
xchg
clc
pop
add
ss
arpl
xchg
sbb
xorl
aad
xor
mov
add
pop
mov
mov
fisubrl
cli
push
arpl
scas
lds
push
mov
stos
sub
xor
push
fsts
sbb
sbb
and
out
nop
mov
add
scas
mov
cmc
lcall
cmc
and
mov
data16
add
stos
push
or
stc
das
sub
sub
movsl
adc
xor
inc
loop
gs
call
or
push
icebp
inc
inc
shr
jb
pop
inc
pop
pop
scas
mov
mov
sub
mov
push
dec
in
jb
cs
in
stc
adc
das
mov
mov
inc
repz
xor
jo
push
fbld
dec
insb
sbb
dec
fistps
mov
adc
dec
adc
jmp
cs
push
pop
pop
sbb
mov
push
push
mov
in
sbb
jo
in
lock
addr16
fsubs
ljmp
clc
clc
call
or
in
adc
sti
xchg
pusha
sbb
lcall
xchg
dec
and
cli
lret
push
lock
inc
insb
hlt
mov
jnp
cmp
mov
aad
test
mov
nop
lahf
adc
jns
pushl
out
adc
adc
add
push
cmpb
aas
dec
jo
push
xor
sub
pop
jl
adc
pusha
sarl
outsl
jno
mov
cmpsl
shll
dec
cmc
xchg
xor
inc
mov
and
test
xlat
jmp
and
mov
testl
testl
mov
jnp
mov
sub
xchg
test
outsl
lock
add
imul
clc
ljmp
daa
or
sbb
loope
pop
and
mov
sarl
cmc
shrb
jg
jp
dec
xor
dec
loopne
jmp
insb
mov
shr
mov
dec
dec
insb
pop
loopne
jne
xchg
inc
and
gs
jp
mov
dec
cmp
xor
mov
xchg
sub
pusha
add
jns
sub
orl
adc
in
pop
enter
mov
pop
ret
lock
leave
daa
push
adc
test
and
push
rolb
cwtl
adc
jecxz
sub
xor
lods
aas
jecxz
and
xor
lods
test
test
and
leave
fstp
jle
sub
add
or
ret
ficompl
dec
lret
add
in
mov
dec
adc
xchg
mov
xchg
jp
in
sbb
sub
js
int
inc
and
add
add
mov
in
jmp
lea
or
inc
xor
std
mov
fadd
fwait
cmp
xchg
ja
ja
xor
dec
sub
fistps
das
cmp
xchg
aam
push
ret
out
and
lods
mov
es
cltd
in
imul
jmp
jmp
and
gs
push
ljmp
das
dec
mov
pop
mov
out
repnz
outsl
sub
sub
mov
and
cwtl
dec
ja
mov
pop
sub
hlt
push
std
adc
bound
dec
adc
dec
pop
outsb
mov
cwtl
adc
mov
pushf
dec
mov
sbb
adc
call
cli
sbb
push
cmp
fldt
pop
mov
cmp
outsl
lret
cmpsl
aaa
or
sbb
push
test
and
out
add
push
in
push
std
jge
inc
xchg
int
sub
push
adc
push
ret
dec
adc
jmp
sahf
out
loope
jp
dec
fwait
mov
jmp
or
jbe
in
popf
subb
inc
stos
adc
loop
pop
rclb
jne
push
imul
stc
xor
aam
xchg
fistpl
dec
std
jnp
sbb
xlat
mov
sti
scas
repz
pop
cli
ret
xor
stos
mov
or
rolb
data16
jle
pop
js
loop
sbb
xchg
stos
lea
lahf
push
cwtl
jbe
jg
in
sub
dec
lock
loop
inc
sub
jl
mov
mov
sti
sub
pushl
inc
addl
std
or
fldl
fidivs
and
xor
add
fdivl
push
cmp
lods
push
lock
mov
div
lods
mov
and
push
scas
dec
jl
cli
or
jb
lods
int3
add
cmpsl
les
mov
inc
outsl
cmp
push
rorl
aaa
push
xchg
fildl
dec
add
aad
notl
std
pop
arpl
sbb
jae
int3
add
jle
stc
bnd
jg
insb
cmc
out
add
loopne
mov
jbe
mov
xlat
add
add
popf
mov
adc
jl
out
iret
fisttps
add
xchg
jne
push
cmc
fadds
jns
pop
inc
jg
outsl
orl
cli
jecxz
xor
loopne
rclb
or
xchg
adc
test
cmpsb
add
insl
test
dec
negl
xlat
aas
icebp
pop
ljmp
pop
pop
mov
inc
fwait
notl
loope
or
add
mov
jae
xchg
push
xchg
mov
mov
mov
sbb
aam
pop
xchg
lods
adc
mov
mov
jecxz
ja
and
push
ds
jg
mov
or
mov
pushl
add
daa
jmp
ss
pop
and
push
or
and
rcrb
xchg
add
xor
fists
mov
inc
je
lock
decl
cwtl
dec
adc
aad
cmpsb
out
push
jb
mov
or
jnp
addb
shll
lcall
dec
or
lret
sub
jns
in
cs
xchg
adc
or
push
sti
jmp
xor
je
outsl
loope
and
enter
push
mov
cmpsb
jno
test
push
mov
jmp
lcall
dec
inc
rcrl
pushf
fwait
popf
lea
ds
dec
jl
fnsave
sbb
and
rclb
mov
imul
lahf
sbb
xor
push
ljmp
and
jb
xor
sbb
jecxz
popf
push
or
xor
jg
rcr
xchg
movsb
lcall
jo
jbe
pop
fdiv
cmp
aam
mov
xchg
mov
push
repz
loope
mov
dec
gs
mov
stos
mov
push
in
pop
mov
mov
daa
inc
xorl
mov
cli
mov
test
cmpb
into
or
sarb
sbb
jp
sbb
scas
pop
cmpsl
ret
test
mov
adc
dec
adc
stos
out
xor
cmc
mov
mov
aas
push
xor
test
loop
lods
add
movsb
test
and
push
clc
jmp
je
fwait
inc
cmp
xchg
inc
aad
adc
sub
mov
rcl
cmp
arpl
stc
stos
enter
adc
mov
push
mov
or
jle
lret
dec
adc
cmc
dec
testb
test
test
pop
cli
test
bound
ficomps
aaa
insl
out
dec
xchg
and
adc
rolb
sti
pop
mov
ds
aam
sbb
pop
pop
mov
mov
mov
ret
mov
pop
push
ret
lret
outsb
jge
mov
sub
orl
jo
decb
das
push
pop
std
dec
je
push
or
pop
mov
in
sbb
and
outsb
loopne
popf
and
jg
into
rclb
je
addr16
movsl
adc
loop
fbstp
and
jmp
xlat
in
or
sbb
nop
inc
inc
inc
inc
jo
mov
ret
test
sbbb
mov
pop
cmpsb
icebp
movsl
in
out
xchg
imul
jg
mov
and
popa
rol
add
sbb
fsubr
cmpb
cltd
loop
adc
mov
inc
lret
adc
cmp
es
cwtl
data16
push
lahf
mov
enter
and
jl
xchg
lock
xchg
gs
out
and
adc
rorb
ja
pop
fnstsw
dec
into
sub
stos
xchg
aas
push
sahf
add
movd
orb
scas
lock
inc
fsubrp
xchg
mov
cmp
pop
xor
insb
xor
in
or
sub
push
push
inc
rcrl
dec
sbbb
das
jno
fimull
xchg
scas
dec
bound
sbb
sbb
out
and
pop
and
jae
add
int
push
popf
xchg
xor
movsl
loop
movsl
adc
in
pusha
or
pop
push
pop
icebp
dec
fsubl
ljmp
aad
adc
outsb
cmpsb
push
fcomi
xor
and
mov
sbb
xor
or
test
and
aam
fimuls
mov
mov
xor
mov
sti
mov
pop
pop
dec
aam
pop
fsubrl
mov
test
xchg
inc
pop
xor
in
stc
pop
pop
arpl
sbb
jno
das
icebp
sbb
pop
sub
cmp
xor
adc
pushf
jecxz
pop
mov
jnp
inc
xor
inc
or
cmp
int3
ret
out
nop
pushf
arpl
jg
push
mov
pop
cwtl
dec
jno
jo
jmp
mov
xor
into
fnstenv
mov
xor
lahf
mov
movsb
inc
push
scas
sbb
fistl
aas
adc
inc
cmpsl
push
out
and
loop
int
or
repz
sub
pop
mov
lock
sti
adc
popa
xchg
shll
shll
jmp
cmc
jbe
cli
sub
jns
adc
xchg
xchg
jge
jae
pop
xchg
outsb
insl
add
lea
movsl
jecxz
jo
lock
push
adc
pop
mov
stos
jle
pushf
push
lahf
ficomps
addl
xchg
ss
mov
cli
mov
js
ret
stos
mov
push
pop
test
jge
mov
repz
std
sahf
rcrb
and
and
mov
push
mov
rcrb
dec
fcmovnu
xchg
sub
aas
pop
xor
xlat
cmpb
test
add
cs
or
push
pop
js
or
push
push
add
pop
lock
sbb
and
sbb
xchg
cmpsb
and
lock
push
push
sarb
out
push
loopne
orb
shlb
sbb
cld
popf
and
pop
cmpsb
or
jae
subl
dec
jbe
xor
not
sbb
jle
jge
lods
push
shl
arpl
push
inc
call
dec
in
xor
incb
jae
jno
cld
or
pop
sub
cs
iret
fwait
ss
cmp
adc
stos
mov
pop
aas
fwait
addb
inc
das
mov
or
imul
rcll
test
mov
fidivs
push
mov
fmuls
insb
cld
mov
idivb
inc
add
sbb
mov
pop
mov
dec
xchg
add
mov
test
sbb
pop
in
fistpll
rorl
cmpsb
add
jo
test
test
imul
outsl
js
daa
mov
xchg
xchg
pop
loopne
lods
jns
or
push
movsl
push
xchg
push
lods
xchg
stc
inc
loop
lcall
add
sbb
mov
ljmp
ds
mov
rcll
mov
push
clc
xor
xchg
mov
mov
cmp
cs
lock
or
mov
aaa
je
jne
xchg
iret
jb
dec
lods
pop
aaa
cs
pop
rorl
xor
adc
add
insb
imul
call
inc
imul
jge,pn
test
test
xor
lret
adc
jb
push
mov
icebp
push
sbb
test
les
sub
mov
int3
loope
test
imull
mov
sub
dec
xchg
cli
in
pop
xchg
psubusb
cld
iret
repz
mov
loope
out
push
push
fsts
cmp
inc
in
mov
das
dec
and
cmp
jo
in
or
jnp
and
sbb
inc
xor
dec
push
adc
outsb
rcll
and
sbb
rcrl
fimull
mov
subb
lock
add
into
fcomp
mov
shlb
ret
cltd
je
inc
clc
stc
fdivrl
jle
xchg
imul
popa
dec
aam
sbb
rol
cs
inc
insl
inc
dec
fmuls
pushf
adc
sub
inc
lret
js
adc
int3
dec
xchg
sti
repnz
add
fistps
cmpsb
mov
sub
mov
mov
mov
jecxz
add
je
push
je
pop
orl
incl
pushl
test
dec
cmp
mov
cmp
cmpsb
sbb
pop
es
arpl
mov
insl
test
jle
ds
in
stos
mov
mov
mov
out
sub
jns
and
adc
jae
insb
das
cmp
call
adcb
xchg
outsl
insl
bound
dec
inc
xchg
cltd
inc
add
pop
sbb
jne
jg
jne
cmpsb
cmpsb
clc
xchg
testb
and
adc
std
mov
lea
sbbb
mov
incb
js
pop
xchg
mov
jnp
sbb
rcl
or
sub
out
lcall
and
or
inc
pop
add
pop
std
push
xor
xchg
mov
insl
push
cmp
cli
jns
in
inc
out
push
enter
jno
push
fistpl
and
mov
insb
pop
scas
ficoml
fistpll
imulb
xchg
sub
pusha
mov
xchg
dec
add
clc
int
js
push
pop
jmp
mov
sbb
cmpsl
adc
xchg
bound
insl
int3
push
test
leave
les
loope
clc
dec
jae
iret
xchg
pop
inc
aam
pop
movsl
das
cmp
mov
loop
mov
adc
std
sub
dec
lock
ljmp
push
cwtl
or
cmp
cmp
fsubrs
lahf
xchg
and
test
lahf
inc
dec
adc
icebp
jb
insl
lock
add
aaa
rep
xchg
shl
lods
inc
or
mov
cmp
fsubrs
sub
insb
push
xchg
mov
pop
push
lods
aad
pop
lock
ljmp
out
cmc
in
pushf
sub
sbbl
xlat
sahf
mov
dec
inc
push
jg
subb
jp
cmp
sub
push
mov
pop
add
xor
test
lock
ficomps
sub
scas
push
js
fisubrs
inc
icebp
leave
mov
fildl
mov
sbb
cmpb
sub
jmp
repz
push
pop
iret
icebp
adc
add
sbb
pusha
jnp
test
cmp
dec
xor
dec
fisttpl
xor
in
cmp
push
adc
pop
xchg
jge
aad
test
mov
xor
mov
movsb
icebp
dec
mov
sbb
mov
adc
out
testb
sub
sbb
test
test
sbb
fucomip
mov
jle
cmp
push
fsubrl
aaa
mov
sub
popf
add
xchg
adc
xchg
mov
pop
xchg
pusha
jb
es
jp
ficomps
cld
mov
fstpt
fmuls
or
int
out
andl
dec
add
push
cmp
loopne
jge
es
or
nop
lcall
and
in
mov
ja
xchg
xor
sbb
mov
clc
jl
push
mov
mov
or
add
jmp
or
aad
data16
enter
sbb
shrl
aaa
rcrl
popf
js
lock
mov
add
sbb
xchg
scas
jmp
nop
cwtl
and
add
ja
imul
jg
shrl
es
push
in
call
mov
test
in
aaa
mov
push
sub
stos
pop
stos
fists
xor
fimuls
int3
scas
adc
scas
cli
mov
cwtl
add
shll
sbb
fldcw
js
cmpsl
es
jle
jbe
or
sub
inc
scas
fdivrp
mov
sti
mov
jle
and
mov
roll
les
xchg
or
xor
outsl
or
out
and
scas
sbb
stos
add
fisttpl
jns
int3
pop
or
gs
stos
push
rorb
xchg
mov
popa
push
or
fiaddl
aad
fsubrs
cwtl
add
in
sbb
mov
adc
xchg
xchg
out
push
insl
push
pop
push
jnp
fdivrs
fwait
lret
mov
jecxz
scas
gs
mov
add
sbb
inc
add
mov
lea
mov
outsl
mov
fiaddl
loop
xchg
icebp
movb
pop
inc
sbb
std
movsl
xor
hlt
sbb
and
mov
mov
js
sbb
mov
add
push
pop
fwait
sub
mov
xor
xchg
fimull
adc
sbb
jnp
loope
mov
test
xchg
gs
loop
pushf
sub
std
incl
inc
mov
mov
pop
nop
mov
dec
std
movsl
ja
daa
in
sub
test
aad
mov
lret
jbe
push
ret
mov
mov
push
out
daa
sbb
mov
and
jge
dec
jno
sti
xlat
inc
cmp
fs
addr16
push
and
push
xchg
add
mov
or
lock
jo
clc
mov
je
jo
mov
add
sti
adc
shrl
shrb
ret
or
in
lret
fs
or
mov
or
xchg
inc
jno
aaa
pop
mov
clc
xor
aaa
and
pop
js
mov
rcr
or
push
sbb
dec
inc
inc
pop
sub
loopne
icebp
jle
imul
inc
dec
inc
cmp
sbb
or
shll
add
push
push
movsb
ja
mov
subb
or
dec
aas
nop
cmc
in
outsl
dec
xor
idivl
pop
xchg
hlt
pop
int
and
divb
push
jb
loopne
mov
mov
mov
fists
data16
add
cmpsb
mov
lods
addr16
lahf
cmp
pop
lcall
adc
fldcw
clc
lods
stc
cmp
mov
xor
jo
jns
mov
push
cld
outsl
xchg
enter
sub
js
stc
insb
inc
jg
mov
test
pusha
call
stos
clc
lods
ja
cmp
dec
aaa
movsl
inc
inc
and
imul
addl
pop
and
cmp
lss
or
andl
lret
adc
lret
mov
cmpl
rorb
cmpsl
inc
jmp
and
les
fwait
jle
mov
insl
inc
sbb
and
or
scas
sub
mov
push
mov
cmp
jo
jns
mov
bound
fcoms
lahf
pop
push
dec
add
aaa
inc
pop
inc
test
daa
mov
aaa
nop
int
mov
jo
adc
lods
dec
inc
rcrb
dec
jmp
and
outsb
cs
pop
dec
cmp
and
xor
add
jecxz
cmp
and
call
in
add
push
mov
test
or
loopne
int3
adc
adc
mov
push
lcall
jp
mov
xlat
leave
cmp
jmp
xorb
int
adc
pop
push
ss
inc
cmp
jg
maskmovq
pop
ret
sbb
enter
fistpll
pop
gs
lret
data16
push
jne
mov
nop
lods
inc
test
imul
cmp
fs
lock
or
ret
jb
hlt
xchg
pop
lods
cmp
js
filds
sti
xlat
mov
adc
cmpsb
les
mov
xlat
push
es
jne
xchg
shrw
mov
dec
xchg
adc
mov
push
jne
push
xchg
cmpsl
inc
jns
out
mov
cmc
pusha
dec
aaa
jmp
xchg
das
outsl
and
mov
cmpsb
test
inc
sub
fwait
add
and
jne
dec
imul
sahf
dec
pop
and
add
out
cmp
cmpsb
rcrl
sub
fsubrs
mov
or
insl
rclb
push
pop
das
shll
jle
xchg
cltd
sub
jbe
cli
aaa
inc
orl
lcall
jae
clc
leave
cmp
mov
xor
lret
or
fwait
dec
sbb
outsl
cmpb
sub
cmp
hlt
add
xchg
incb
repz
movsb
nop
xor
adc
int
cmpsl
xchg
jno
adc
xchg
xchg
aas
mov
sbb
mov
enter
add
scas
in
in
cmp
push
xlat
subl
xchg
dec
pop
cmp
dec
rcrl
add
mov
lods
in
out
lret
shll
sahf
push
popa
mov
push
xchg
inc
xor
mov
jg
negl
cmpsb
xor
flds
outsl
push
sbb
adc
cmp
ret
mov
cmpl
push
mov
pop
je
mov
mov
inc
jg
mov
stos
pusha
push
clc
pop
enter
cmp
mov
gs
xorl
ljmp
popf
cs
mov
or
sbb
mov
inc
mov
mov
mov
pop
dec
mov
and
mov
xor
insl
mov
jo
mov
pop
imul
xor
arpl
loope
xchg
bound
xchg
jp
repnz
pushf
dec
add
push
push
int
bound
insl
pop
sub
rorb
lret
test
icebp
lods
test
out
cmp
imul
sarl
pop
mov
add
out
sbb
cli
fneni(8087
aam
shrb
mov
push
scas
add
dec
ror
clc
dec
scas
xor
cwtl
dec
jo
das
adc
jns
xor
mov
aam
jle
add
dec
mov
lock
and
mov
lahf
mov
ret
daa
xor
sub
and
mov
add
test
push
and
or
mov
push
cld
jb
xlat
lahf
fwait
jbe
push
aad
inc
in
ret
cmc
stc
pop
rcrb
push
imul
xchg
cmp
or
dec
inc
insl
arpl
lahf
inc
mov
dec
pop
js
pop
adc
sub
jmp
ja
mov
mov
xor
fbstp
loope
scas
xchg
jecxz
cli
pop
sub
mov
fisttpll
adc
aad
jno
cmpsl
dec
jge
sbb
xchg
ret
cmpl
insb
movsl
fstps
lahf
clc
or
mov
inc
lods
insl
pop
mov
cs
inc
sbb
pop
adc
push
inc
jnp
adc
pop
mov
push
hlt
fwait
jle
popa
icebp
iret
sub
stos
xchg
sbb
out
and
in
lea
mov
mov
sti
sub
or
pusha
hlt
pop
pop
xchg
adc
fdivr
pop
loope
push
int3
xchg
and
sarl
xlat
insl
add
test
out
cld
jbe
fcoms
test
cmp
sub
test
fldt
cmp
push
mov
mov
jo
fistpll
or
jo
pop
inc
aaa
push
or
ljmp
jge
push
push
je
pop
mov
adc
movsb
dec
push
cmp
xchg
mov
loopne
adc
in
fsubp
push
out
sbb
fbstp
dec
ds
mov
ljmp
outsl
mov
mov
pusha
push
clc
pop
mov
push
mov
mov
add
in
loope
push
mov
push
jge
cmpsb
ss
shlb
testl
sub
mov
lock
les
sbb
xor
add
pusha
loop
mov
and
sbb
nop
mov
in
cmpb
dec
mov
cld
xchg
xchg
mov
enter
pop
lods
xor
cli
data16
jmp
in
stos
adcb
mov
xchg
iret
xchg
mov
pop
pusha
pop
mov
ss
jae
fistpl
outsb
mov
ficompl
out
mov
xor
add
push
ljmp
lea
mov
dec
scas
out
aaa
or
testb
pop
cmp
ss
sbb
mov
into
jecxz
cmp
cld
xchg
mov
ficompl
es
insl
lahf
xchg
rolb
cs
adc
lret
nop
repnz
ds
outsb
adc
xor
repnz
ljmp
mov
iret
mov
les
and
jmp
xchg
adc
adc
sub
arpl
jecxz
cmp
mov
mov
lcall
in
data16
pop
push
hlt
and
fwait
pop
add
adc
popf
inc
das
sbb
or
push
decl
mov
repz
or
das
pushf
insb
pushl
stos
nop
xor
or
icebp
or
jmp
lret
and
comiss
push
into
ret
inc
pop
mov
inc
jmp
ficompl
adc
jp
ds
mov
sub
mov
jl
ret
cmpsl
lods
stos
or
xchg
inc
loope
call
sbb
xor
mov
loope
ret
test
cli
sbb
cltd
or
cmpl
repnz
ss
lcall
int3
pop
nop
jle
fcomip
add
or
rcr
add
pop
movsl
cmp
adc
mov
insl
or
insl
std
aas
scas
call
test
add
and
lods
add
adc
lock
imul
nop
in
sub
lock
pushw
push
ljmp
outsl
mov
aam
adc
mov
adc
icebp
fcoms
cmp
shrl
fildl
out
mov
mov
ss
inc
lods
mov
lods
outsb
add
scas
and
jg
xor
add
test
movsb
loop
add
xor
mov
fs
orl
ljmp
pop
xor
in
stos
cmpsb
jmp
fmull
mov
adc
popf
sti
dec
pop
mov
in
mov
and
es
inc
xorb
idiv
sbb
jb
mov
popf
pop
sbb
lret
fistl
push
std
aaa
push
stos
popa
cmpsl
fwait
mov
imul
pushl
xchg
or
and
mov
mov
xchg
subb
jge
outsb
std
xchg
dec
mov
aas
xor
insb
sbb
notb
xlat
inc
fwait
push
xor
dec
scas
loopne
fistps
sub
cmp
aad
inc
mov
addr16
jge
adc
sub
aad
pop
or
mov
xlat
sbb
mov
jg
cs
or
idivb
xchg
test
flds
cld
dec
ret
mov
arpl
aam
sub
mov
dec
jnp
sub
fisttpll
repz
mov
hlt
shr
scas
iret
stos
mov
xor
popl
mov
pushf
jge
gs
rcr
pop
xchg
mov
mov
les
mov
lret
loope
out
movsb
lret
and
add
into
lds
cmp
jne
movsl
adc
cmc
mov
call
mov
imul
outsb
andl
gs
rolb
loop
xchg
pop
xchg
das
mov
cld
mov
rcll
jp
out
outsl
cld
cli
cmp
pop
mov
dec
jl
adc
cmpsb
dec
jge
adc
add
lcall
pop
mov
or
pop
mov
xor
jmp
cmp
pushf
js
push
push
add
lock
out
cmp
mov
loope
jne
loope
dec
leave
mov
andb
push
jmp
xchg
sbb
orl
in
xor
dec
push
es
or
add
add
add
jns
and
mov
daa
sbb
push
mov
outsl
xchg
mov
jmp
push
sbb
ficoml
jl
adc
or
pusha
jnp
push
mov
nop
pusha
inc
aaa
inc
mov
cmp
pop
das
out
nop
test
cmp
push
mov
or
lcall
xchg
jne
ss
pop
jle
and
mov
push
mov
pop
in
cmp
movsl
imul
jo
out
cmp
xchg
insl
and
sbb
ret
dec
push
fmuls
jg
call
pop
pop
xlat
inc
ds
sbb
dec
jmp
xchg
and
xor
sbb
sahf
xchg
pop
jb
test
aas
in
nop
lret
pop
inc
xchg
bound
or
decl
clc
and
jb
dec
icebp
sub
outsl
and
sbb
popa
shl
das
popf
addr16
lds
xor
mov
fldl
inc
or
icebp
stos
sbb
adc
aam
dec
test
mov
shl
and
mov
pusha
xor
cmp
mov
mov
mov
inc
jl
lahf
shl
das
sub
ja
dec
mov
pop
jecxz
inc
dec
jmp
push
ljmp
loop
jbe
sahf
ret
xchg
adc
sbb
pop
mov
push
cmp
ds
xor
in
test
jbe
dec
pop
das
insb
shlb
fadd
add
mov
add
jbe
xchg
popf
loopne
fldt
pop
inc
fisubs
push
sub
jns
xor
ds
push
xchg
mov
push
inc
fisttpll
dec
or
iret
stos
jge
xchg
dec
jmp
scas
daa
push
into
cwtl
fdivr
fildll
movsl
xlat
addr16
and
lahf
test
or
loop
mov
push
sub
filds
inc
mov
and
cli
lods
aam
js
jb
scas
pop
xchg
sbb
dec
ja
mov
push
push
mov
mov
push
insl
insb
push
shl
mov
ljmp
sub
stc
gs
in
stc
outsb
stos
mov
or
sbb
lods
mov
lods
sub
mov
cld
outsl
hlt
sbbl
ss
nop
lods
sub
outsl
in
movsl
scas
sbb
push
inc
imul
sbb
cmpsl
cli
sbb
dec
orb
jp
sbb
int
cli
cmp
aas
jnp
adc
test
mov
sbb
mov
pop
ja
js
out
inc
in
pop
pop
enter
testb
cmpb
test
rol
dec
pop
das
pop
inc
data16
mov
cmpb
adc
pushf
push
xor
add
sahf
lret
mov
in
es
sbb
adc
jge
adc
dec
cmp
adc
pusha
xchg
pop
jle
fildll
aas
xchg
cs
or
cltd
shll
fcomps
int
into
test
outsl
aas
insl
mov
sbb
je
jmp
mov
xor
stos
xor
sbb
dec
mov
outsb
pop
sub
sahf
or
mov
add
inc
scas
pop
sahf
inc
fidivrs
cmc
lcall
xchg
fwait
movsl
push
xor
mov
add
jle
and
data16
mov
mov
aaa
cmpsb
and
call
xor
push
mov
out
out
pop
add
adc
je
sbb
or
ret
and
aad
xchg
or
sub
jae
push
cmp
fstpt
cmp
es
adc
data16
push
loopne
sbb
xor
pop
mov
cmp
inc
xchg
scas
out
jns
outsl
test
mov
enter
inc
lock
sbb
faddl
ret
push
test
inc
lcall
xchg
sbb
cmc
jp
jbe
adc
stc
lock
in
lret
cmp
inc
sbbb
inc
cmp
mov
inc
out
shr
add
fidivrl
cmpsl
pop
js
jne
insl
mov
sbb
inc
shrb
loope
adc
les
sub
stc
mov
lret
outsl
inc
test
jne
mov
imul
mov
jbe
inc
dec
push
int3
mov
push
cwtl
movsl
test
sarb
sub
adcl
pop
cli
ds
adc
sbb
or
fstl
std
fistps
push
sbb
xchg
xchg
fwait
pop
leave
fs
add
cmc
cmpsl
mov
movsb
add
jle
pop
sub
xor
jl
mov
movsl
out
arpl
pop
xchg
sub
int
std
mov
int3
or
push
rcl
jmp
add
fistps
decl
mov
sub
jecxz
outsb
jmp
jne
inc
xor
ljmp
in
js
mov
into
or
clc
adc
divl
rcl
xor
out
xchg
adc
ss
mov
in
jmp
lret
sarb
pop
lahf
inc
adc
mov
lcall
addl
sbb
cli
cmpsb
jno
sub
repnz
shufps
cmpl
jle
push
push
nop
sub
mov
outsl
mov
push
andb
inc
mov
mov
mov
mov
and
add
popa
lds
int3
and
sub
inc
leave
stc
inc
dec
jbe
sub
adc
bound
das
inc
imul
jae
xchg
or
dec
ja
or
rorl
lods
mov
cmp
inc
cld
or
shlb
pop
push
mov
into
subb
bound
pop
addr16
clc
cmp
or
jmp
test
cmc
lock
pusha
loope
rcr
lock
mov
mov
nop
xchg
lahf
lret
test
shrl
ret
dec
fcmovnu
push
mov
add
movsb
movsb
pop
push
stos
adc
es
sbb
pop
mov
insl
dec
and
rcr
add
jne
adc
popf
xor
push
ljmp
iret
jnp
pop
fiadds
jge
shrb
jmp
insb
xchg
adc
push
bound
fisttpll
cmpsb
add
lds
into
int
add
mov
hlt
jmp
popf
xchg
insb
xor
pop
add
iret
adc
jno
sub
in
pusha
dec
adc
xchg
cmc
mov
push
filds
xchg
sbb
cwtl
jmp
call
pop
rorl
fwait
sti
cltd
icebp
inc
cltd
mov
in
fldcw
rclb
std
xor
insl
jge
mov
mov
mov
mov
lock
cmp
mov
pop
pop
jl
addl
add
addr16
jns
cmc
pop
test
push
jge
jp
mov
cli
xchg
mov
xchg
dec
testl
shrl
cmp
daa
pop
xor
add
push
sbb
cmc
sub
enter
insl
inc
imul
call
and
incl
cmp
sbb
xor
and
inc
cmp
dec
scas
movsl
fisubrl
xor
lcall
das
cld
adc
adc
mov
or
lahf
sub
jmp
sarb
lret
mov
and
cmp
push
inc
push
push
scas
and
pop
pop
dec
or
adc
repnz
and
inc
xchg
mov
inc
cmp
inc
push
cmc
push
dec
pop
jns
lock
incl
mov
adc
lods
add
fs
xor
call
dec
pop
cld
lcall
add
mov
rol
lods
clc
jg
adc
push
call
mov
lock
js
mov
add
je
or
push
insb
cmc
inc
pop
rcr
xchg
icebp
jge
or
out
xor
rorb
inc
mov
cmpsb
mov
mov
clc
jb
rclb
mov
add
aaa
push
or
jmp
loopne
popa
mov
sub
idiv
sbb
pop
out
in
mov
xor
mov
mov
add
mov
pop
mov
pop
popa
push
jecxz
push
mov
addr16
lea
sbb
ret
lahf
sbb
fldt
mov
lcall
mulb
sub
adc
ja
rolb
push
and
inc
pop
in
loop
pop
mov
out
aas
scas
jo
xchg
inc
adc
call
scas
and
inc
neg
dec
pop
push
je
xchg
sbb
add
mov
cld
iret
cmp
xor
xchg
fdiv
idivb
sbb
or
sbb
mov
js
xor
mov
sub
cld
shrl
dec
iret
xor
leave
mov
testb
aam
aaa
decb
add
mov
or
test
aaa
call
subl
cmpsb
inc
adc
push
fs
push
xchg
lcall
cmp
repz
jmp
add
xor
mov
lahf
push
js
ss
rorl
jl
sbb
dec
mov
fistpll
add
fwait
inc
push
pushf
orl
xchg
push
push
je
inc
xchg
out
inc
cwtl
loopne
bndstx
jbe
mov
inc
and
sti
mov
xor
jae
loop
sbb
adc
popa
fcomi
cmpb
fildll
lcall
sub
jno
addb
aad
cmpsb
jl
aas
pop
mov
sbb
adc
clc
or
test
sub
jb
orl
jb
jno
insb
imul
icebp
pop
and
gs
inc
fildl
test
or
jb
aaa
adc
stos
mov
dec
lret
or
ja
add
or
in
aaa
clc
jmp
cmp
mov
push
pop
cmpsl
stos
cld
mov
out
add
dec
cmp
cmpsl
test
mov
arpl
mov
in
scas
sahf
push
sbb
push
data16
sti
or
sub
or
dec
loope
xlat
adc
jl
lcall
mov
je
jg
rcll
movsb
sub
mov
push
cmc
call
sub
cmp
cmp
inc
xor
mov
in
push
cmp
in
lret
sub
pop
inc
mov
repz
mov
inc
push
xor
mov
and
adc
mov
cwtl
imul
in
fistps
mov
mov
addl
std
das
shrl
dec
cmc
or
mov
jae
test
lock
ljmp
adc
and
mov
or
in
ucomiss
std
loop
xchg
mov
mov
test
ljmp
sbb
popl
loopne
aaa
andl
jp
test
add
xabort
mov
aaa
enter
xchg
pop
movsb
aaa
sub
test
push
push
cmp
xchg
ja
sub
out
popa
shll
mov
sub
sbb
mov
xchg
testl
dec
inc
ljmp
or
xchg
imul
jne
fcoml
sahf
hlt
inc
mov
idivl
jg
pop
pop
jl
inc
add
nop
rcrb
lcall
or
insb
movsl
fwait
mov
aaa
shrb
movsb
mov
jo
push
lahf
dec
xchg
das
mov
mov
jmp
pushf
cltd
push
and
das
lock
jae
mov
and
rcrl
popf
outsl
jo
dec
arpl
cld
mov
lds
pop
sub
stos
push
or
xor
or
jl
sbb
cwtl
xchg
mov
cmc
int
decl
lret
adc
or
rclb
mov
hlt
sti
mov
ljmp
mov
inc
mov
loope
mov
pop
inc
dec
leave
hlt
movsl
mov
fstpt
cwtl
outsl
mov
and
popf
addr16
sti
popf
xchg
adc
subb
pop
clc
fsubrs
adc
pop
xchg
adc
sub
xchg
mov
jg
mov
jo
push
repz
in
in
ss
push
mov
jo
sub
inc
mov
sub
les
xor
imul
std
outsl
pop
and
cmc
les
sbb
shrl
int
in
pop
mov
in
jb
xchg
and
lcall
aas
xor
cmpsl
jbe
xchg
jns
fdivs
imul
add
imulb
adc
cmc
inc
shlb
inc
add
mov
xchg
cld
jg
sbb
pop
insl
fdivl
lods
imul
mov
sbb
mov
xchg
sbb
inc
pop
mov
rclb
leave
lock
and
xchg
mov
fisubrs
mov
in
pop
inc
xchg
iret
xchg
cltd
movq
cmc
aam
cmpsb
inc
push
mov
aaa
mov
lock
adc
cmpsb
mov
test
inc
hlt
dec
ret
daa
inc
push
aaa
les
xchg
out
mov
pop
test
pop
dec
jne
inc
dec
out
sbb
push
std
cmp
push
xor
or
dec
bound
jg
mov
loop
call
sbb
clc
repz
repz
or
mov
and
into
mov
cs
dec
fmull
lea
repnz
or
cli
adc
inc
or
mov
stos
enter
fistpll
add
push
adc
add
ja
cmp
dec
out
dec
call
scas
jbe
nop
ret
pop
push
and
fdivs
push
lret
icebp
adc
pop
cs
enter
and
cmc
cmp
fwait
add
ret
pop
loope
lahf
icebp
imulb
enter
mov
pop
and
aaa
insb
hlt
mov
inc
lret
dec
cli
mov
mov
pop
push
sub
and
lods
leave
dec
and
das
mov
cli
xchg
mov
sbb
xchg
push
or
jo
test
cmp
repnz
pop
adc
aad
icebp
call
jp
outsb
fwait
sbb
mov
test
mov
sbb
add
pop
jae
mov
std
inc
cmp
xchg
or
mov
inc
or
pusha
rcr
pop
aaa
shl
xchg
cltd
push
filds
insl
fmul
xor
jae
add
push
pop
push
cmc
mov
add
shrl
and
imul
sub
adc
mov
adc
pop
or
cmp
sbb
ss
mov
xor
sbb
fyl2xp1
adc
mov
call
cli
push
sbb
cwtl
xor
push
mov
popf
into
mov
orb
stos
inc
movsb
xorl
scas
push
pop
jg
imull
mov
call
push
loopne
xchg
fimull
push
imul
shll
jo
push
adc
das
js
jle
inc
dec
inc
inc
or
addr16
test
and
sub
sbb
mov
pop
adcl
inc
cltd
push
sub
pop
cmpsb
sbb
iret
das
xor
mov
cmp
sti
lret
fimuls
neg
add
clc
xor
dec
outsl
imul
cmc
call
sub
mov
mov
mov
pop
orl
imul
xor
push
pushl
xchg
inc
cmpsb
subps
inc
daa
xchg
rol
cmp
dec
ljmp
push
scas
mov
cmp
scas
leave
les
dec
or
sub
enter
xchg
ja
fsubs
in
inc
mov
mov
and
jmp
xor
mov
mov
int3
sub
ret
cmp
dec
cmp
add
dec
push
and
lret
test
dec
push
cltd
add
mov
ljmp
add
adc
xchg
adc
lods
fcomps
mov
xchg
xor
addr16
popl
inc
out
test
pop
arpl
shl
sbb
xor
das
mov
outsb
mov
fadds
cli
outsl
loop
insl
lods
cwtl
add
nop
and
and
mov
cmp
leave
int
lods
jmp
jle
sbb
push
adc
add
mov
sbb
in
lea
clc
lods
pop
rcr
push
je
sbb
sbb
mov
fdivl
inc
jmp
sub
std
shlb
dec
xchg
push
roll
mov
sbbl
mov
arpl
dec
fisttpl
pushl
xchg
and
xor
or
mov
jp
and
nop
sub
or
jmp
push
xchg
push
or
test
and
stc
lods
js
jg
cmc
mov
adc
push
pop
cltd
add
mov
adc
test
xor
mov
sbb
pop
pusha
movd
cld
or
cmc
negb
fldenv
insl
mov
incl
pop
jmp
jg
mov
enter
mov
sbb
lea
fildl
fists
es
add
sub
add
pop
xor
aaa
add
adc
xchg
clc
dec
mov
jns
inc
pushl
cli
loope
subb
adc
mov
jge
daa
inc
out
sub
insl
pop
movsb
pop
sub
push
fisubl
lds
andl
call
and
pop
inc
mov
xor
rcll
pop
add
mov
pop
push
adc
add
pusha
das
fnstsw
jb
or
mov
xorb
adc
mov
test
pop
mov
add
add
or
xorl
sub
shrb
mov
sub
dec
sub
sbb
adc
inc
xor
cmpsl
cld
pop
notb
fcoms
jno
sub
lcall
mov
or
xchg
xor
xchg
mov
mov
lea
mov
cld
scas
xchg
negl
dec
or
and
iret
sar
jmp
incl
in
hlt
in
mov
or
pop
js
outsl
push
jns
std
xchg
fidivl
mov
cmc
cmp
pop
jg
imul
clc
das
mov
sub
cli
fldt
push
int3
mov
in
decl
inc
mov
stc
pop
lea
into
mov
adc
and
cltd
mov
cltd
stc
lret
and
call
mov
push
andl
lahf
push
pushf
pop
sahf
mov
js
mov
dec
add
lcall
lods
int
lock
jecxz
or
and
pop
cmp
sbb
incl
inc
push
xor
popf
hlt
mov
add
orl
jne
mov
mov
cltd
pop
fdivs
lcall
sbb
push
add
sbb
xchg
mov
dec
insb
aas
cli
jg
inc
es
lret
add
pop
icebp
push
sub
jo
push
cmc
cmpsl
mov
sub
xor
pushf
test
pop
xchg
sub
arpl
daa
add
jb
push
mov
mov
rcll
lcall
icebp
xor
daa
popf
hlt
mov
mov
adc
push
sub
repz
and
das
in
rorl
jb
cld
outsl
arpl
sbb
cmp
xchg
cmp
pushl
xor
pusha
outsb
in
std
inc
int
adc
clc
mov
ret
fwait
adc
mov
insl
test
push
cmp
stos
jle
cmp
imul
push
leave
inc
adc
and
inc
aad
inc
cmp
jg
dec
mov
fistpll
add
lds
test
adc
mov
lods
xchg
lods
adc
pop
loop
jae
jnp
lcall
aam
inc
lcall
rcr
mov
mov
add
sub
mov
add
xchg
and
adc
mov
cmp
xchg
nop
xchg
and
dec
mov
push
inc
inc
cmp
sti
xchg
lods
xchg
clc
testl
dec
lock
bound
lahf
inc
xchg
or
cld
pop
popf
test
push
xor
push
fdiv
push
push
mov
loop
call
jns
inc
push
or
das
mov
sub
dec
adc
cld
in
xlat
sbb
lcall
inc
jnp
jle
cmp
mov
pop
dec
and
js
mov
xchg
cli
loopne
test
out
repnz
ficomps
xchg
or
mov
mov
xchg
mov
sbb
cmc
and
popa
mov
push
insb
jbe
cli
mov
mov
pop
clc
xor
dec
std
arpl
shrb
mov
lds
lahf
movsl
fbld
xchg
inc
adc
mov
push
xor
push
je
jp
leave
add
test
imul
sbb
scas
call
ljmp
aas
push
adc
sbb
rclb
mov
daa
dec
xor
lret
xor
push
aaa
lahf
sbb
xchg
std
jo
xchg
in
cld
fisttpll
cmc
cmp
aad
fmull
hlt
jg
sub
push
mov
movsl
cmc
mov
shrb
push
inc
push
sub
sbb
sbb
xorb
or
pop
mov
js
sub
in
decl
popa
push
cs
ljmp
inc
mul
or
and
sahf
dec
addr16
ret
stos
mov
int3
icebp
sub
pop
and
push
pop
pop
jmp
push
fsubrs
mov
jle
xlat
ret
pusha
mov
xorb
dec
das
insb
inc
out
insb
pop
fldcw
fs
cmc
in
sbb
or
loope
lahf
sbb
ret
sub
add
sbb
mov
rolb
xchg
adc
je
aam
rcll
mov
movsl
inc
das
jge
xchg
fnsave
enter
mov
or
lcall
add
pusha
add
aaa
cld
aaa
jl
or
imul
int
inc
add
lcall
inc
mov
test
shrl
fdivr
pop
mov
and
fcompl
fnstsw
mov
hlt
js
inc
xorb
shll
inc
std
inc
or
icebp
stos
int3
adc
sbb
mov
imul
clc
repnz
jo,pn
fadds
sub
test
xorl
lret
hlt
pop
dec
loope
mov
inc
add
outsb
out
or
test
mov
add
adc
mov
sbb
jg
pop
lret
jno
scas
sti
enter
inc
and
outsl
clc
dec
mov
les
inc
inc
mov
arpl
lods
inc
fidivrl
jle
movsl
cmpsb
push
les
sbb
sbb
mov
xor
xchg
daa
mov
incl
fdiv
sub
inc
push
push
aas
dec
adc
sub
mov
into
mov
add
in
lods
sub
cli
ret
in
jbe
cmpsb
mov
je
jg
or
pop
or
test
out
cltd
fmull
push
pop
fistl
pop
jo
outsl
loopne
lea
sub
gs
jecxz
jne
and
cwtl
dec
adc
mov
hlt
popf
clc
aaa
sbb
loop
mov
pop
lea
pusha
addr16
outsl
clc
dec
mov
or
or
add
js
mov
mov
inc
xchg
inc
and
inc
mov
hlt
add
mov
in
lahf
xor
pop
add
mov
cli
sbb
push
pusha
push
xorl
decl
fadd
sub
mov
and
ljmp
mov
les
icebp
arpl
ds
cli
hlt
xor
mov
test
movsl
adc
or
push
lcall
push
mov
subb
xor
pop
sbb
lock
jle
inc
xchg
push
fstpl
sub
jecxz
mov
mov
jmp
xor
jg
and
rorb
jnp
cmp
icebp
ret
movsb
dec
std
sbb
popf
stos
jnp
adc
and
jl
aaa
sub
xchg
filds
pop
mov
xor
aam
div
add
in
fwait
mov
ret
ret
cwtl
adc
out
sub
in
enter
fsubl
je
or
push
or
dec
add
outsl
std
push
inc
jmp
std
les
jb
mov
xchg
fisubrl
xchg
and
ljmp
lods
inc
addb
sti
clc
je
push
jns
mov
fwait
movsl
scas
pop
mov
push
lret
dec
aad
cmp
sbb
cmp
fxch
sbb
dec
or
push
xchg
ror
stos
cmp
das
orb
jmp
outsl
addr16
out
pop
adc
pop
mov
in
jnp
cmc
ja
rcrb
mov
movsl
pop
xchg
mov
test
std
loopne
insl
jmp
mov
mov
jb
ficoml
mov
aas
sbb
pop
test
inc
xor
xor
shrb
jbe
inc
mov
push
or
and
xchg
js
dec
out
fs
xchg
popf
loope,pn
aad
fists
loop
sub
sbb
std
sarb
flds
clc
and
adc
scas
and
or
mov
mov
pop
cmpsb
and
push
gs
lcall
outsl
pusha
cmp
and
orb
int3
in
dec
adc
outsl
pop
push
push
ja
pop
mov
ljmp
js
sbb
push
adc
mov
add
or
cmp
mov
mov
scas
push
outsb
mov
mov
out
push
add
fildll
jmp
insl
push
jg
dec
mov
jnp
mov
outsl
pop
jp
scas
es
inc
ljmp
xchg
mov
aad
xlat
out
gs
cmp
fists
cmp
cwtl
sti
enter
mov
mov
cmp
mov
test
int3
mov
xor
dec
and
inc
ficompl
int
push
movsl
pushl
jbe
cwtl
mov
pop
outsb
xlat
mov
lret
test
sbb
adc
daa
push
lods
out
in
mov
adc
test
loope
jne
or
mov
xor
outsl
mov
and
bt
repnz
adc
and
sbb
mov
inc
jo
stos
push
sub
push
daa
ljmp
or
sti
psrlq
mov
fs
adcb
vmovq
mov
inc
outsl
jbe
jp
xor
lret
push
aad
aaa
lret
mov
js
add
or
orl
and
mov
daa
int
std
mov
gs
test
addr16
test
xchg
mov
cli
xor
and
out
test
inc
push
movsl
fwait
or
sbb
int
mov
pop
mov
pop
mov
add
xchg
jg
mov
nop
jp
lret
cmp
aaa
outsb
adc
cmp
push
in
enter
xor
fsubrs
icebp
pop
stc
mov
mov
inc
ljmp
mov
jmp
adc
push
mov
or
fists
loopne
push
sbb
js
icebp
xchg
int3
popf
fcmovb
mov
notb
cmpsl
inc
and
loop
add
loopne
add
add
xchg
jle
add
sbb
shll
inc
jle
sarl
sub
divb
icebp
push
push
cmp
or
dec
aaa
test
mov
add
pop
xor
sbb
or
cmc
insb
cmc
lahf
rclb
xor
loopne
arpl
shrl
mov
pop
call
loop
outsb
jne
push
push
and
push
decl
inc
inc
sbb
pop
fisubrs
rorb
mov
push
outsb
and
xchg
ljmp
jo
mov
xchg
adc
inc
mov
cli
loope
dec
jg
stos
push
rcrb
mov
mov
es
lods
fbstp
mov
inc
jb
nop
dec
inc
sbb
mov
and
sbb
and
ljmp
aaa
out
cmp
push
push
cmp
popf
add
ja
xchg
jmp
aad
sarb
push
add
xchg
add
or
jl
sbb
fnstsw
pop
push
inc
cltd
mov
jo
cmp
push
movsb
and
inc
jo
push
add
inc
orl
and
into
xchg
dec
out
es
pop
and
add
jle
inc
push
test
and
pop
sbb
push
mov
sbb
cmc
cld
adc
mov
int
or
jo
fnstcw
adc
add
loope
and
sbb
fisttps
xchg
out
and
popa
roll
mov
decb
or
inc
mov
inc
mov
cld
outsl
ror
xor
ss
pushf
and
inc
in
cmpps
bound
xchg
inc
shr
mov
pop
push
ljmp
cmpsl
add
push
dec
add
scas
ss
leave
jne
or
xchg
mov
xchg
dec
push
cmpb
push
cmp
sbb
jg
xchg
out
push
mov
pop
add
cltd
jmp
into
std
add
jg
dec
popf
mov
xor
aam
fiadds
cmpsb
sbb
pop
sbb
xchg
push
add
mov
fmuls
in
add
mov
fiadds
inc
cmp
lods
dec
js
and
sbb
in
icebp
pushf
xchg
jg
mov
in
xchg
pop
je
adc
dec
inc
and
outsb
cmp
in
pushf
dec
mov
push
mov
aaa
or
and
mov
ret
xor
dec
adc
aas
sub
mov
ljmp
and
rorl
push
or
test
outsl
call
out
sarl
leave
cmp
shl
xchg
sahf
inc
mov
jno
dec
adc
push
jne
inc
jmp
ret
jecxz
mov
insl
sbb
addb
or
pusha
cli
add
pop
bound
mov
lds
insl
fsts
sub
jae
das
insl
adc
cwtl
or
das
aam
push
fnstsw
push
cmc
scas
jb
scas
sub
std
mov
sub
push
or
lahf
divl
adc
in
hlt
sub
mov
sbb
inc
push
adc
mov
sbb
in
lods
fiaddl
mov
xchg
lea
add
mov
pop
fidivrl
jmp
jo
pop
cmp
fs
movb
jecxz
adc
js
mov
push
inc
push
sub
std
das
aad
add
rcl
pop
xor
and
dec
cmpsb
dec
sub
fsts
inc
insl
push
scas
outsl
icebp
nop
shll
mov
outsl
adc
jb
pop
mov
inc
mov
in
lahf
call
stos
pop
int3
movsb
xchg
jae
adc
clc
jg
pop
nop
mov
and
daa
sub
loop
iret
clc
movsb
adc
and
mov
aaa
stos
mov
inc
nop
cmpxchg
iret
sub
pop
roll
mov
add
sbb
xchg
sbb
pop
cmp
in
testb
sub
lea
fildl
cmc
sahf
out
sub
test
push
insl
aas
mov
pop
push
adc
mov
iret
cmc
repz
pop
jnp
pop
decb
lahf
jno
add
outsl
sub
mov
and
add
ljmp
int3
cmp
sbb
push
lock
outsb
in
ljmp
ret
call
or
dec
in
dec
maxps
add
and
or
xchg
push
or
sub
mov
dec
inc
inc
pop
mov
aaa
sar
test
ret
mov
or
mov
jbe
in
push
in
shll
test
push
ss
lcall
popf
xchg
xor
lock
std
push
aam
adc
in
mov
xlat
loop
inc
shlb
push
test
enter
push
pop
sbb
icebp
xor
mov
int
xor
in
fwait
fbstp
inc
invd
int3
scas
inc
mov
test
test
mov
mov
pop
lret
flds
test
inc
test
cmp
fsubrl
jo
lcall
jge
scas
mov
icebp
dec
std
or
sub
adc
ret
mov
cwtl
and
mov
call
jp
pusha
add
mov
inc
sbb
sbb
rcl
push
mov
mov
sbb
fs
mul
and
icebp
pushl
mov
jnp
sbb
enter
outsl
dec
lods
or
jne
and
and
mov
cwtl
or
dec
pop
mov
pushf
push
icebp
daa
or
cmp
loope
sub
stos
scas
add
imul
icebp
stc
scas
outsb
xchg
inc
push
mov
test
popf
or
sub
insl
ret
test
dec
insl
cmc
or
sub
push
loopne
lds
and
push
adc
cli
js
mulb
adc
mov
sub
xlat
test
push
movsl
loopne
cmp
xlat
jno
call
insb
or
lds
bound
jne
aas
adc
and
xchg
mull
ret
imul
pushf
mov
adc
add
aaa
or
jns
or
not
dec
xlat
test
or
jle
jle
mov
push
mov
in
or
or
or
cli
pop
xchg
lcall
add
mov
mov
mov
xor
dec
lcall
push
adc
and
pop
jns
xor
jg
into
dec
roll
push
pop
sub
sbb
gs
dec
and
add
mov
lcall
xchg
fucomp
ss
gs
sbb
ss
jnp
push
and
fnstsw
les
sti
push
lods
xor
in
push
inc
cmpb
inc
fimuls
mov
push
stos
outsb
iret
pop
push
inc
add
xor
aaa
js
fcomp
incl
aaa
inc
test
lea
jo
aad
mov
in
ret
mov
enter
xchg
paddq
push
int3
mov
mov
rcll
dec
mov
scas
and
dec
adc
mov
les
mov
aad
mov
dec
dec
xor
fstpt
lahf
mov
les
sbb
popf
add
and
mov
xor
and
pop
cmp
cmpb
scas
dec
mov
cli
scas
xchg
pop
ficoml
mov
push
aad
cmpsb
sub
cmp
lea
fdivl
outsl
push
popf
jle
pop
insl
pop
fwait
jmp
lea
and
add
test
adc
les
cs
jmp
or
pushf
xlat
cmc
insl
dec
sub
inc
jae
xor
cmpsl
pop
popa
push
pop
std
push
rcrb
adc
cltd
jg
dec
cmc
dec
stc
xchg
in
pop
xor
and
shll
and
adc
xor
mov
cld
jg
mov
loopne
ja
lret
imul
mov
fmuls
push
leave
dec
sub
dec
stc
call
sub
stos
test
les
std
pop
call
bnd
inc
dec
adc
add
xchg
sub
push
in
mov
xchg
xchg
xchg
outsl
pop
cli
xchg
sbb
mov
lea
rorl
inc
sub
adc
movsb
jle
std
arpl
ret
adc
and
or
mov
in
lcall
or
jg
jle
fcomi
sbb
xchg
loop
pop
mov
arpl
push
insl
push
dec
push
xor
scas
lods
jl
daa
xchg
adc
ds
jmp
pop
mulps
fcomps
cmp
mov
mov
movsl
mov
loop
lods
loope
push
jo
inc
mov
inc
lock
mov
jmp
repz
jle
js
pop
test
nop
or
iret
cmp
push
test
mov
mov
outsl
std
shl
jmp
cmpsb
lcall
fwait
add
rolb
orb
incl
in
xchg
call
test
jp
inc
pop
clc
out
adcb
sbb
jp
stc
inc
add
push
lret
add
insl
jecxz
mov
test
mov
or
icebp
stos
mov
adc
add
ljmp
and
enter
stos
mov
add
leave
outsb
xchg
jmp
ret
push
scas
mov
fwait
lock
cmovp
pop
pop
lock
and
push
lock
push
cwtl
mov
or
add
and
mov
mov
jo
pop
jb
mov
sbb
push
ljmp
into
jnp
js
mov
cmp
popf
ja
nop
pop
je
sbb
sti
lea
pop
lock
dec
adc
jo
or
mov
add
inc
adc
cltd
lds
fldl
add
fistps
ficomps
or
pop
xor
ljmp
mov
aad
lods
icebp
or
mov
mov
mov
mov
mov
icebp
mov
test
imul
shr
cmpsb
outsl
sahf
xchg
cmpsb
enter
push
sti
ljmp
or
jbe
add
loope
leave
push
xchg
cmp
aas
popf
mov
daa
mov
hlt
sub
shl
or
lcall
mov
jae
cmpl
sub
dec
jge
mov
clc
sbb
jmp
add
jno
cmp
lret
aas
lock
push
inc
stos
and
fisubl
sub
push
andl
mov
or
aaa
mov
filds
xchg
push
shll
mov
in
mov
sahf
push
lods
fsubrl
out
sbb
adc
outsl
xor
pop
fwait
int3
ret
and
sub
fwait
cmc
xor
inc
lahf
mov
jmp
push
movsl
addb
loopne
inc
mov
je
mov
and
xor
mov
push
pop
inc
dec
dec
das
cmp
sub
jmp
test
mov
adc
add
adc
mov
sub
outsl
call
push
and
fiaddl
xor
cmp
lea
pop
adc
lock
cmc
clc
js
movsl
fisttps
sub
and
dec
sub
hlt
fbstp
mov
mov
adc
sbb
imul
das
adc
and
out
sbbl
leave
pop
jne
fisubrl
push
sar
incb
mov
rcll
stc
xor
in
inc
inc
test
or
pop
adc
frstor
dec
popf
pop
jne
cli
rorb
or
mov
dec
mov
into
dec
xchg
sbb
or
ret
and
enter
push
sub
lock
cmp
rol
adc
sbb
mov
inc
cld
roll
pop
xor
sub
jnp
cli
movsl
pop
notb
or
es
in
or
and
nop
push
xlat
aas
cmp
adc
pop
xlat
adc
mov
fsubrl
jg
imul
mov
fdivs
jnp
jo
sbb
lahf
jns
pop
por
inc
test
xchg
sbb
test
loope
or
cwtl
pavgw
xorl
cli
lret
rcr
cmp
and
sub
pop
dec
xchg
or
dec
mov
lret
in
mov
shlb
ds
fbld
cmc
xchg
jle
or
push
out
call
mov
or
scas
ss
sbb
addb
add
pop
jecxz
mov
mov
push
add
xchg
loop
lahf
popf
add
cli
pop
ret
pop
out
mov
lods
push
nop
push
add
or
push
test
jae
sarb
adc
jbe
int
dec
xor
ja
ja
bound
push
aad
mov
jae
cmp
ficompl
mov
jp
jne
cmp
mov
or
add
jo
xor
andb
add
outsl
ffreep
mov
or
xor
xchg
adc
cli
ja
lahf
out
mov
dec
aam
sub
inc
add
pop
push
call
loope
adc
add
and
call
sub
call
mov
psubsb
mov
shlb
ss
scas
cmpsl
nop
cmp
inc
orb
and
push
adc
or
dec
inc
xor
mov
std
sbb
xchg
imul
jl
arpl
add
sbb
shrl
addr16
test
mov
sub
sahf
cli
movsl
adc
jns
sub
xchg
test
sbb
xchg
lret
push
pusha
mov
movsb
sub
inc
jne
rcll
rcrl
add
jb
sub
aad
push
iret
sbb
jg
mov
shlb
pusha
and
cmc
inc
notl
in
test
mov
fisubs
mov
jno
sub
adc
aaa
clc
dec
mov
shll
ret
hlt
and
outsb
jne
mov
dec
cwtl
sub
pop
mov
pop
loope
popf
push
test
and
std
or
push
inc
mov
adc
into
and
pop
xor
push
fs
sbb
ljmp
xor
rcr
fisttps
push
or
push
shlb
pop
les
push
add
dec
mov
in
jecxz
nop
leave
sub
sahf
xor
cmp
mov
ret
rcrb
stos
mov
push
jge
xchg
fimull
jns
push
loopne
lods
mov
jecxz
lock
daa
push
fwait
sbb
push
adc
sbb
shll
cmp
test
jecxz
test
std
cs
insl
loope
add
stos
into
inc
adc
inc
test
sahf
pop
or
cmpsl
aam
xlat
cltd
cmp
cmp
fistl
adc
push
lcall
sbb
and
ret
das
imul
xor
sbb
xlat
lock
sub
push
les
pop
xchg
mov
fucom
add
mov
dec
dec
pop
shl
out
dec
pop
loopne
ljmp
add
popf
loope
inc
mov
push
mov
sarl
hlt
pop
dec
jnp
jmp
in
out
sbb
xchg
in
inc
jmp
dec
xchg
test
pop
mov
cmp
ror
cwtl
add
cld
jns
jecxz
aaa
cli
push
push
pop
lods
mov
pusha
mov
neg
outsb
xchg
push
in
cmc
repnz
sahf
pushf
pop
jne
mov
mov
pusha
pmulhuw
dec
mov
or
inc
jle
cs
in
and
ds
sub
call
and
adc
sub
stos
jo
gs
ljmp
mov
xchg
test
cmp
push
inc
in
js
sbb
test
inc
mov
cld
aaa
and
aas
pop
cltd
imul
mov
push
insl
cld
xchg
enter
or
push
jp
mov
movsl
push
mov
or
pop
inc
std
pop
fwait
rcl
dec
xchg
pop
leave
adc
ret
fistl
fisubs
push
or
clc
lods
push
mov
lock
mov
loope
pushf
stc
hlt
test
pop
sub
add
sbb
ljmp
sub
lahf
outsb
push
lods
roll
cmp
lods
jno
inc
lea
lcall
inc
aad
test
sbb
jle
push
mov
imul
js
jle
push
in
xor
pusha
adc
cwtl
sbb
or
mov
sub
jecxz
lcall
adc
xor
and
sbb
xor
in
push
pop
std
mov
cwtl
pop
or
sub
xchg
cmc
filds
pop
loopne
push
ret
pop
shll
cld
mov
mov
lret
sahf
inc
cltd
fistpll
das
jmp
fsubrs
aad
jb
fs
jp
add
or
call
pop
lods
inc
scas
add
cltd
cli
or
mov
jns
rolb
roll
push
cmpsb
sub
outsl
fstpt
fs
imul
fistpll
mov
jns
jmp
inc
lret
and
mov
mov
loope
insl
pop
pop
push
add
adc
sub
sub
popa
jbe
pushl
shll
pushf
xchg
loopne
mov
jmp
ret
jbe
hlt
jmp
or
push
mov
in
into
pop
cmp
mov
jg
movsl
das
pop
xchg
test
and
mov
hlt
mov
stos
push
xrelease
sbb
mov
ret
push
dec
fsubrl
mov
out
out
lcall
aaa
js
cwtl
roll
pop
adc
notb
cwtl
lea
clc
push
stc
cmc
and
sub
adc
mov
sbb
cmp
test
std
std
push
jp
popa
loope
andl
jae
jecxz
test
lods
pushfw
push
mov
mov
imul
mov
orl
add
push
lret
fcoms
push
test
adc
sub
sbb
leave
pop
mov
ret
inc
inc
je
jecxz
pop
mov
pop
push
add
int
ljmp
sti
lds
sti
jge
inc
jae
das
mov
out
mov
cmpsl
or
out
inc
xor
test
jb
pop
pop
outsl
and
pop
sub
xor
sub
add
mov
je
mov
xchg
xchg
decb
mov
mov
scas
add
lret
in
push
and
jp
jg
fs
stc
push
inc
mov
les
mov
cmc
in
leave
jg
cwtl
push
insl
ret
xchg
or
icebp
bnd
imul
pop
pushw
int
push
cld
mov
into
mov
cltd
pop
fcoms
sub
insb
test
bound
loopne
sar
incl
insl
dec
jne
pop
push
mov
out
test
testb
fnstcw
pop
mov
dec
mov
dec
push
add
lcall
repz
ret
mov
shll
push
sub
repnz
das
inc
pop
sti
or
mov
and
sub
push
sub
sbb
inc
nop
pop
sahf
lock
fildl
inc
or
pop
loope
sti
adc
ret
lds
repnz
sbb
xor
insl
mov
sub
pusha
stc
fistpl
mov
imul
mov
sub
std
push
outsl
rcl
xor
repz
call
add
mov
ds
and
cmp
sub
inc
fs
mov
cli
pop
insb
and
hlt
fsubrs
and
and
cmp
add
xchg
imulb
clc
xor
push
lods
pop
loope
fstl
stc
cli
inc
arpl
addr16
lahf
fisttps
outsb
push
and
lahf
mov
cmpb
cmp
loope
aas
data16
pop
out
inc
data16
cmp
idivb
out
int
cmpl
jge
ds
test
cs
dec
std
cmp
nop
popa
mov
incb
shrl
nop
pusha
icebp
in
lea
addr16
idiv
aaa
fisubrs
or
iret
push
jge
jb
and
inc
or
mov
fsubrl
cld
aaa
adc
mov
add
out
scas
mov
add
bound
cld
mov
cld
lret
xchg
std
xchg
fiaddl
xchg
and
test
clc
lcall
test
mov
push
cmc
push
call
ja
jns
shlb
outsb
xor
jo
iret
pusha
or
cmpsl
push
jp
pop
pop
js
and
inc
or
jmp
mov
loop
orb
ss
mov
add
mov
fs
inc
call
xor
mov
add
mov
fistpll
pusha
outsl
cmp
inc
sub
out
fstpl
inc
fstpl
pop
testb
and
fldenv
dec
iret
fidivs
sbb
inc
pop
js
push
fcmovnb
pop
mov
aad
imul
lea
cmp
sub
test
mov
pop
call
push
mov
stos
or
addl
mov
jae
fistpl
or
out
ds
outsl
std
mov
push
pop
jmp
lret
call
cmp
add
inc
aam
mov
icebp
push
jecxz
sbb
add
adc
ficoms
push
pop
outsl
insl
pop
mov
fistl
push
lds
mov
jb
ljmp
jecxz
enter
or
sbb
test
add
dec
int3
and
idivl
outsl
mov
inc
jno
push
mov
adc
add
scas
xorb
xor
or
leave
push
pop
scas
out
int
sub
pop
lock
test
pop
mov
adc
inc
mulb
aad
add
ljmp
lock
and
nop
in
std
out
and
adc
mov
mov
das
sub
mov
gs
test
andb
cmp
mov
adcl
fwait
ja
sbb
push
std
jge
push
sbb
test
test
mov
jbe
xor
ss
shrl
mov
mov
dec
xor
enter
jmp
jle
cmp
lods
jp
test
push
mov
jecxz
mov
stos
fs
mov
pusha
jp
mov
or
loopne
push
ror
test
push
popf
xor
add
inc
movsb
sbb
push
mov
jbe
insl
mov
dec
iret
aaa
ds
das
mov
test
mov
add
mov
mov
sbb
scas
insl
add
mov
pop
and
pop
sti
lcall
adc
ror
push
and
and
pop
mov
mov
adc
cmpsb
push
sbb
stos
xchg
jp
outsl
cs
aad
jmp
cli
mov
outsb
das
ret
mov
jae
mov
roll
cli
fldenv
mov
mov
inc
dec
inc
pop
leave
fucomp
inc
mov
or
outsl
popf
inc
sbb
mov
int3
inc
aad
push
outsb
aam
pop
sub
cwtl
je
hlt
testb
jmp
sub
es
icebp
aam
sarb
xchg
mov
pop
mov
and
or
lods
nop
sub
mov
push
nop
or
rolb
jne
cmp
and
push
add
or
rclb
lcall
inc
in
lock
je
shlb
cs
jmp
lcall
jg
shlb
dec
adc
nop
out
icebp
or
cmc
push
decl
inc
out
xchg
rolb
insb
and
xor
leave
inc
and
push
sub
test
mov
sbb
inc
dec
inc
lds
cli
cmp
rcll
dec
sbb
stc
frstor
and
ja
shlb
push
gs
lret
out
jl
dec
dec
push
movsl
mov
hlt
xlat
push
sti
rcrl
fidivrl
lea
lcall
mov
mov
lcall
das
cwtl
sbb
push
cli
fdivrl
mov
nop
cmp
dec
lock
in
ds
outsl
cmc
ljmp
push
nop
loop
outsb
hlt
adc
jb
nop
jmp
cwtl
inc
cmp
and
call
dec
sbb
popf
adc
daa
popa
push
ret
inc
sbbl
mov
pop
pop
outsb
fdivs
pop
imulb
roll
stos
ljmp
mov
sbb
inc
subb
push
xor
add
dec
dec
xor
ret
lahf
adc
fdivl
add
aas
fdivr
pop
hlt
mov
scas
jno
fstl
adc
pop
loopne
mov
sub
jg
or
or
lcall
sbb
fmuls
cmpsb
cmp
fs
xchg
lods
stos
jb
jmp
aam
ja
movsb
sub
cmp
mov
mov
fimull
cmp
adc
ljmp
push
imul
in
push
loopne
jmp
testb
mov
xchg
sub
inc
das
dec
push
push
sbb
test
mov
or
dec
add
les
enter
test
pop
stos
popl
mov
push
in
cmc
in
outsl
push
xor
mov
incl
lret
sarb
xchg
mov
sub
xchg
add
xchg
les
sbb
aas
mov
andl
decl
push
push
pop
cmpsl
add
pop
pop
and
inc
cli
pop
dec
jg
stc
inc
in
dec
sub
push
mov
sbb
shl
or
inc
push
inc
adc
cmp
jae
mov
fdivs
sbb
sahf
push
add
call
or
adc
inc
mov
fwait
arpl
lods
aaa
je
movsl
icebp
xchg
cwtl
test
inc
dec
pop
loop
into
fstpt
outsl
lea
sub
andb
sub
stc
call
dec
sub
or
fnstsw
call
adc
cmp
mov
push
dec
and
lahf
or
jno
hlt
lea
pop
fsubrl
lcall
fucom
in
test
or
jbe
mov
aaa
fstp
pop
call
and
or
adc
cmpsl
cmp
sbb
jbe
mov
adc
and
cli
outsl
rclb
mov
or
sbb
sub
jne
dec
clc
loopne
lods
rorb
push
aam
sarl
outsl
push
in
test
dec
dec
lret
jae
ss
cwtl
jg
pushf
add
dec
xor
aam
iret
lret
notb
flds
sbbl
pop
xor
leave
sub
mov
arpl
fmuls
shrl
sbb
pop
dec
mov
mov
jg
cli
xor
mov
dec
sbb
imul
xrelease
sahf
jp
xchg
mov
push
pop
fidivl
insb
in
stos
out
jno
aad
lcall
push
pop
ja
jo
or
mov
push
xchg
cmp
pop
addr16
mov
mov
xchg
pop
outsl
sbb
icebp
inc
lods
cmpsb
sub
cld
icebp
test
or
dec
mov
push
ss
sbb
push
adc
frstor
dec
hlt
sbb
shrb
loopne
stos
sub
pushf
push
jmp
fildll
flds
pop
mov
mul
dec
out
loop
cs
gs
push
xchg
les
icebp
add
mul
fs
loope
pop
mov
ret
in
mov
xor
pop
inc
mov
adc
add
jge
lods
xchg
loope
lret
lcall
mov
dec
and
adc
and
pushf
pusha
and
pop
aad
jmp
addr16
lahf
or
cmpsb
push
xor
ret
push
aas
inc
test
inc
adcl
loope
cld
iret
lret
jp
sub
sub
inc
ret
xchg
sub
sbb
push
int
inc
and
jmp
shrb
lock
mov
add
cmpsb
adc
std
lods
mov
cltd
mov
aad
jecxz
sub
xchg
inc
mov
dec
in
lods
add
clc
call
mov
loope
inc
inc
daa
xor
mov
push
into
pop
sarb
and
mov
mov
std
mov
fcmovu
call
xchg
push
dec
and
icebp
mov
fimuls
and
jnp
push
fidivl
ficoms
sub
and
push
sub
pop
mov
jmp
mov
mov
out
sub
dec
add
outsl
xor
cmc
push
incl
sub
and
jmp
flds
loope
jno
ljmp
test
js
add
in
xchg
jmp
jg
loopne
cs
icebp
mov
jle
cltd
test
jg
push
push
cltd
xchg
pop
adc
inc
rolb
xchg
or
jg
mov
cmp
inc
lcall
mov
stc
jmp
mov
ret
sub
fisubl
jle
push
lret
int3
aam
pop
fisubrs
mov
and
fdivr
addl
mov
imul
push
sbb
leave
cmpsb
dec
push
push
insl
and
pop
inc
cmp
lea
ljmp
push
adc
mov
lret
loope
jmp
stos
jmp
cmp
fs
push
nop
add
je
fdivrs
icebp
push
add
ds
movsl
xchg
pop
cs
dec
mov
outsl
mov
dec
push
test
arpl
mov
jg
jle
jmp
ljmp
movl
push
fcomip
fmul
xor
adc
or
movsb
mov
push
mov
in
xor
push
in
ret
xor
lahf
pushf
dec
loopne
movsl
mov
jae
test
adc
in
div
stc
add
test
enter
repnz
cld
je
test
inc
nop
pop
dec
sbbb
ljmp
icebp
mov
push
out
ja
ss
jmp
jg
daa
sbb
les
cmp
cmpsb
mov
mov
ret
in
out
outsl
xor
enter
pop
clc
pop
cs
test
mov
bound
push
jg
or
dec
adc
out
xor
xchg
and
imul
imul
aaa
add
adc
dec
and
or
cmpsb
xchg
addr16
popa
mov
mov
lcall
or
orl
fidivrs
icebp
stos
jne
mov
test
inc
shll
test
pop
xor
les
add
inc
cmp
pop
adc
sar
adc
std
xchg
mov
lods
pop
mov
pop
inc
cmp
mov
pop
jl
mov
ljmp
fnsave
sbb
ffreep
int3
pop
add
fadds
addb
aaa
icebp
lods
xchg
cli
mov
pop
mov
std
aaa
ret
sti
mulb
and
pop
or
dec
jns
incb
xor
xchg
filds
in
or
cltd
mov
mov
cmp
sbb
sub
xlat
gs
lahf
cltd
imul
jno
rorb
adc
sbb
xor
lahf
lods
mov
or
decl
xchg
ret
pop
dec
mov
push
lret
push
cmp
sar
das
or
adc
enter
xchg
jg
movsl
cmp
and
pop
adc
stc
data16
and
mov
outsl
lock
inc
in
sahf
xor
int3
push
cmp
cmp
fdivp
sahf
int
mov
inc
shll
push
pop
jp
jp
and
ds
adc
call
int
xor
dec
xchg
insl
aaa
gs
mov
xchg
adc
fsubs
iret
sti
dec
sbb
icebp
lods
std
and
xor
jecxz
mov
pop
add
sbb
lret
lock
js
jnp
jmp
push
xorl
push
jne
mov
adc
sbb
mov
rcpps
push
fsubrp
jns
jle
jno
leave
mov
cmpsl
dec
dec
pushf
packssdw
ret
jns
xchg
mov
and
jns
and
pushl
push
lcall
daa
adc
jg
add
push
ret
jo
hlt
incl
jno
or
or
xor
add
jnp
push
pop
xor
cwtl
or
movsl
cs
das
or
test
xor
lods
fcompl
rcrb
das
mov
pusha
insl
data16
inc
jno
xchg
rcrb
or
decl
mov
lea
dec
fmuls
xchg
lods
inc
inc
push
rcr
rclb
lcall
jle
or
mov
or
dec
push
js
decl
sub
jle
sub
inc
jb
jmp
cmp
adc
aaa
mov
sub
sbbb
mov
pop
mov
je
bound
cwtl
mov
loopne
scas
aas
pop
adc
cmc
adcb
fisubrs
popf
mov
inc
sub
cmpsl
sub
sbb
jmp
and
stos
loope
loopne
mov
inc
adc
shr
bound
cmp
popa
mov
sbb
roll
aam
cmp
bound
lret
mov
push
hlt
sbb
pop
ss
or
repnz
mov
arpl
mov
rorb
jae
lret
sub
inc
cmp
pop
test
lods
ret
ret
cmc
in
outsl
std
adc
mov
test
ret
in
sub
push
mov
out
fistpll
pop
daa
in
inc
jmp
cmp
and
inc
decl
sar
cmp
sub
or
pop
test
xchg
dec
sbbl
scas
mov
movsb
paddb
insl
cld
jle
scas
push
cwtl
jne
xchg
leave
nop
in
lock
sub
xchg
in
ljmp
add
mov
mov
in
adc
aas
lahf
pop
mov
cmc
mov
sub
je
out
jns
xor
jl
cmp
pop
sub
ljmp
jg
and
scas
xchg
imul
in
xchg
and
mov
enter
mov
push
inc
pop
jns
and
cltd
jo
lds
out
out
fsubrl
sbb
sbb
xchg
push
mov
negb
jno
cli
mov
dec
lahf
les
xor
jnp
es
cmp
fsubl
hlt
or
push
push
popf
xchg
test
mov
ret
cmpb
lea
jne
fimull
dec
push
jo
fidivrs
aam
sub
enter
orb
mov
xorb
sbb
jae
imul
push
cs
mov
test
out
push
cmp
outsl
filds
cltd
rorb
scas
xor
lcall
movsb
test
mov
rcll
jno
mov
fbld
jno
sbb
aaa
cli
aas
mulb
out
and
inc
movsb
add
ds
ljmp
iret
daa
loope
rorl
cmc
cmc
loopne
sahf
out
mov
push
test
loopne
mov
fstpt
int
mov
ret
leave
cmp
mov
pop
mov
sbb
fisttpl
pop
add
lea
dec
out
mov
mov
push
mov
jecxz
clc
addr16
shll
inc
jbe
loope
lcall
fcompl
add
pusha
pop
dec
jle
pop
inc
lcall
sub
inc
jnp
int3
mov
test
and
pop
xchg
mov
mov
fildll
cmpb
popa
shr
and
add
inc
decb
add
pushf
dec
mov
jne
popf
pop
call
mov
cmp
rorb
dec
push
mov
test
lods
aaa
pop
mov
sar
repz
aad
add
dec
sbb
cmp
mov
adcb
lahf
movsl
fcmovne
daa
adc
jnp
xor
ret
ret
add
jne
test
test
pop
fdivs
shll
dec
nop
outsl
mov
cltd
lods
pop
mov
and
frstor
btr
push
aad
inc
loop
outsb
shll
sub
filds
gs
popa
scas
inc
es
lret
push
lock
fcomp
ljmp
cmp
cmp
decl
iret
push
adcl
outsb
xchg
pop
sub
add
nop
cmpsl
xchg
add
xchg
mov
mov
push
push
jbe
xchg
std
fcoms
lret
fisttpll
and
cmp
jl
frstor
inc
push
push
push
mov
pop
fnsave
std
mov
bnd
xchg
sbbb
pop
das
std
pop
adc
mov
sbb
mov
idiv
jg
ret
iret
sub
faddl
and
pushf
adc
call
mov
test
dec
in
xor
ret
iret
call
add
ljmp
xchg
cltd
inc
sbb
dec
mov
lea
sbb
xchg
rcrb
das
lock
mov
dec
out
jg
sub
test
sbb
ja
cmp
outsl
imul
repnz
loop
pop
insb
das
mov
sti
push
cmp
pop
sbb
sbb
and
add
scas
push
daa
pop
sub
xchg
xor
mov
and
push
je
aam
inc
test
sahf
mov
or
mov
out
sub
cmp
stos
rorb
add
pusha
or
pop
xchg
cld
push
xor
fxch
sbb
lock
dec
andl
scas
jnp
cmpsl
xor
fwait
jb
loope
add
xlat
jbe
lea
out
outsb
cmp
repz
and
mov
mov
adc
mov
data16
jno
mov
add
jmp
std
sub
bswap
xor
cmc
add
mov
cli
mov
rcrl
scas
sbb
fnsave
pop
mov
sub
push
push
cmp
push
scas
ficoms
movsl
dec
push
icebp
shlb
ljmp
test
cli
push
mov
shrl
fldl
sub
jnp
cmpsl
mov
ret
sub
cli
call
sbb
aam
test
shll
mov
mov
push
adc
push
out
stos
push
xchg
call
sbb
pop
ss
mov
repz
pop
jnp
jo
mov
jmp
mov
lds
cwtl
sub
insb
jecxz
outsb
cld
xchg
sbb
or
mov
loop
mov
pop
fistpl
jbe
xchg
add
push
cli
mov
sub
sahf
lret
lcall
dec
movsl
addr16
add
fnstcw
stos
sbb
sub
addr16
pop
adc
sub
loope
push
sarb
outsl
cs
push
push
inc
call
mov
into
cmp
mov
sub
movsb
jge
fcompl
out
adc
arpl
movsl
fiadds
mov
out
loope
lahf
loop
pop
cli
aaa
push
std
loopne
push
dec
idivb
ljmp
lcall
cmp
adc
push
xchg
sbb
arpl
test
pop
mov
push
clc
out
mov
jge
cmc
enter
clc
decl
cmp
ja
push
cld
xchg
inc
popl
cmp
inc
sub
fwait
adc
int3
cmp
adc
xor
cwtl
out
pusha
adcl
loop
outsb
sbb
jp
dec
loopne
fnstcw
sbb
sbb
addr16
daa
dec
lock
lcall
mov
test
push
add
ret
pop
jne
mov
insl
aaa
jle
cmp
lods
and
xchg
jmp
testb
and
inc
sbb
add
and
scas
or
cmp
mov
jmp
mov
and
mov
cmpl
mov
mov
and
adc
je
dec
xor
xchg
mov
xchg
mov
aam
push
pop
cmp
pop
adc
and
and
cmp
shrl
cld
inc
sub
sub
sahf
addr16
outsb
jp
lods
insl
pushf
inc
adc
movsl
fsts
fdivr
pop
xchg
fwait
mov
repz
xchg
filds
xor
outsl
jg
push
inc
jp
repz
push
fisubs
icebp
das
aam
pop
fiadds
mov
mov
lods
das
hlt
mov
bnd
and
inc
repnz
sub
std
cmpsl
pop
jns
sbb
into
lock
mov
add
cltd
push
notl
mov
outsl
push
fbstp
fwait
hlt
call
jg
adc
pop
mov
test
sti
and
jp
insb
hlt
pop
mov
adc
sub
inc
das
inc
inc
dec
jmp
fucomip
jg
inc
mov
jp
mov
jne
imul
sbb
xchg
je
xor
xor
subl
sub
popf
movsl
sbb
jg
xchg
call
or
sbb
ljmp
pusha
sbb
imul
sbb
pop
and
dec
xlat
lods
daa
in
push
inc
cmp
jp
and
ss
incl
lock
in
push
xchg
or
inc
add
xlat
enter
mov
pusha
fistl
xchg
xor
clc
dec
cmp
test
sbb
gs
mov
push
lcall
push
std
inc
ret
adc
mov
mov
pop
int3
cld
aam
fistl
xchg
mov
je
daa
daa
movl
sbb
insl
pop
sahf
out
jb
sbb
push
lods
inc
sub
insb
add
bound
mov
mov
clc
lds
sar
in
stos
pusha
test
rorb
shl
insl
mov
loope
scas
xchg
cmc
insb
pushf
sub
cmp
jg
and
and
mov
loopne
jmp
ret
jns
adc
cmp
stos
push
xchg
fwait
adc
jbe
cltd
add
arpl
clc
das
loopne
cmc
add
repz
and
inc
call
adc
or
bound
jmp
enter
clc
mov
cmp
xor
mov
or
dec
scas
push
and
into
cmpsl
and
lea
popa
lods
pop
xchg
adc
inc
test
push
bound
cmp
lcall
data16
shll
push
jmp
pop
pop
mov
fiadds
mov
ret
xor
sub
clc
adc
dec
sbb
cld
pop
cmpsl
ret
adc
repnz
lret
xlat
mov
hlt
rcl
mov
mov
adc
jbe
mov
repz
push
sarb
fs
add
pusha
sti
cs
fistps
xor
ds
add
ror
ljmp
leave
pop
mov
inc
roll
push
add
pusha
push
insb
sti
mov
es
pop
push
cs
mov
lds
inc
and
vunpcklps
add
mov
test
mov
pop
popa
add
cli
mov
pop
mov
cmpb
aam
mov
stc
cwtl
mov
xchg
rol
sbb
out
jb
jmp
push
dec
pop
sti
gs
sar
in
sbb
imul
test
mov
xor
outsb
sti
jle
enter
xchg
pop
and
inc
mov
fidivrl
fcomps
push
adc
lods
add
stc
pop
das
or
and
adc
lea
push
outsl
xchg
aam
push
ds
cmp
arpl
push
or
fstpl
outsl
or
in
sub
mov
cmc
dec
cli
ljmp
loope
sarb
icebp
dec
xchg
or
aas
jbe
pop
push
fs
cmp
ljmp
pop
inc
out
jne
jg
scas
cmp
outsl
adc
es
cmp
ljmp
pushl
clc
mov
inc
mov
fwait
test
and
adc
pop
mov
lods
dec
cmp
mov
out
iret
out
ret
lds
jge
or
adc
incl
rclb
add
pop
cltd
and
push
shr
or
aam
es
jno
sbb
cmpxchg
xchg
pusha
mov
ret
xor
ja
lds
push
lods
jge
mov
pusha
arpl
pushf
dec
xchg
push
jne
xchg
and
push
mov
mov
push
fildll
insl
test
lock
fldenv
jno
ljmp
fiaddl
scas
loop
das
sbb
fcompl
in
xchg
mov
dec
rcrl
adc
or
xor
stos
ret
lds
loope
shlb
adc
or
insl
pushf
fisubrs
xchg
lcall
lea
pop
mov
dec
std
in
mov
mov
orl
mov
xor
sub
addb
mov
icebp
orb
mov
leave
fdivl
aad
std
out
and
fucomip
lds
sbb
lret
shlb
sbb
xor
mov
aaa
sub
shlw
adc
leave
ret
ds
fisubrs
and
sub
or
sti
mov
cmp
data16
pushf
fistps
ds
adc
es
lock
xchg
mov
movsl
es
and
ljmp
insb
push
dec
push
dec
xchg
adc
loope
mov
xor
jnp
xchg
popa
sub
dec
shrl
movsl
push
jmp
rcl
xor
and
sbb
imul
jnp
mov
fsub
cmpsl
mov
jecxz
scas
inc
mov
adc
loop
ljmp
cli
movsl
mov
pop
jbe
icebp
and
inc
cwtl
shlb
mov
adc
sbb
lea
std
pop
flds
mov
and
dec
jmp
xor
add
lahf
pop
xchg
or
jnp
push
mov
sub
cmp
xchg
and
fistpll
add
push
lock
adc
outsl
jb
cs
insb
xchg
fstps
or
cmc
adc
dec
dec
ret
push
nop
add
repz
push
movsb
arpl
jg
test
adc
sbb
pop
mov
hlt
scas
xor
mov
cs
adc
mov
push
outsb
sbb
jle
adc
and
sbb
lret
out
notl
fildl
int
mov
push
fs
xchg
cmp
roll
ret
lahf
mov
or
mov
das
mov
dec
in
push
stos
adc
jp
pop
imul
roll
je
dec
lods
ucomiss
jg
pushl
inc
add
inc
jle
into
mov
sub
test
inc
sbb
loopne
lahf
mov
jmp
or
lock
cmp
xlat
inc
subl
std
cmpl
mov
adc
scas
sbb
jno
mov
int
outsb
call
orb
inc
dec
rclb
and
das
mov
jp
call
cmc
addr16
mov
ljmp
shrb
sub
lahf
or
cmp
lea
jl
or
sub
mov
es
cmp
imul
cmp
sbb
mov
clc
adc
jle
pop
popf
push
jge
jo
pop
cld
add
push
pusha
sbb
xor
jbe
outsb
sbb
cli
lea
sub
cmc
lcall
pop
adc
sahf
inc
pop
icebp
testb
std
cltd
adc
pop
loop
subl
js
mov
ja
pop
add
mov
in
cmp
mov
xchg
add
mov
outsl
addb
cmpsb
jne
jns
xchg
popf
mov
pop
mov
mov
jle
xchg
subl
lcall
mov
sbb
std
jge
mov
jbe
sbb
call
sbb
mov
sahf
mov
enter
push
inc
jno
ljmp
xchg
cmp
das
adc
push
and
pop
jbe
call
cmpsl
jns
test
pop
in
xchg
fsubs
repz
outsl
pop
mov
ficoms
cwtl
shrb
mov
or
incl
add
jne
les
ss
jmp
call
repz
ja
lods
push
mov
in
das
pop
push
stos
jae
inc
add
or
inc
lret
mov
nop
inc
jg
inc
dec
mov
mov
sbb
push
inc
mov
in
xor
out
and
cmp
add
cmpsb
mov
outsl
ret
mov
sahf
std
pop
loop
scas
xor
cmp
in
stos
sub
mov
push
ret
fisubrl
lret
or
out
xor
lea
add
or
stc
push
sub
stos
or
jno
fisttpl
jp
and
jp
pop
call
jp
ret
adcb
pop
sahf
add
mov
mov
es
call
xchg
push
xor
stos
outsb
cli
mov
adc
xor
pushf
fistl
sar
ffreep
mov
scas
dec
nop
pop
push
out
sbb
or
add
hlt
sbb
mov
xchg
ret
fs
ja
sub
mov
dec
or
lock
cmp
dec
fistl
cwtl
dec
add
in
or
enter
ja
cld
jg
movl
xor
and
call
sar
xchg
dec
mov
xchg
dec
in
xchg
xor
push
jge
ret
cmp
lds
sbb
data16
js
sbb
pop
jmp
xor
push
xchg
lds
sti
ljmp
cmp
inc
xor
fdiv
jle
jmp
push
outsl
cmp
or
push
nop
call
mov
and
pop
pop
test
pop
fmuls
inc
rep
mov
int3
push
or
or
in
cwtl
lods
xchg
outsb
scas
sub
or
xorb
cmp
push
je
sbb
leave
inc
mov
pop
shr
cs
push
pop
movsl
mov
cmp
cmp
cli
pushf
shll
pop
push
test
and
pop
sbb
sub
aam
mov
hlt
lahf
mov
nop
cwtl
xchg
or
jmp
add
lret
add
shll
jg
and
push
add
movsb
enter
pushl
sbb
int
pop
inc
sub
in
inc
shrl
lock
data16
stc
inc
fwait
pushf
adc
xlat
pop
shlb
sub
icebp
mov
jmp
lock
add
insb
rorb
sub
movsl
call
mov
in
push
bound
mov
pop
incl
fildl
scas
and
adc
add
push
mov
cmp
mov
fstpl
mov
sub
in
daa
in
sbb
dec
adc
xor
push
add
adc
inc
cmp
repz
mov
call
shll
enter
mov
test
jl
mov
push
sub
dec
adc
adc
icebp
aaa
cmp
mov
pop
xchg
lret
jg
movsl
mov
shll
cmp
pop
adc
sti
push
roll
jp
ret
and
lahf
je
mov
jae
mov
sti
pop
pop
test
ja
dec
cmc
idivb
sarb
incb
inc
xchg
outsb
push
add
add
jns
xor
and
sbb
icebp
jns
pop
mov
push
jo
popa
shlb
inc
bound
mov
sbb
push
sarb
xor
jg
rorb
sbb
mov
sub
sub
je
dec
push
xor
sahf
cmp
adc
gs
xchg
in
or
int3
ret
add
jmp
adc
mov
call
add
add
loop
outsl
ret
mov
popl
std
pop
mov
lret
cmp
pop
stc
xchg
hlt
mov
orb
movsl
add
mov
push
loop
adc
clc
inc
aaa
int
sub
imulb
add
test
repnz
mull
ss
mov
mov
lret
test
pop
cmpsl
adc
mov
std
aaa
mov
adc
mov
pop
mov
inc
pop
ss
sub
mov
add
dec
pop
dec
out
sub
ret
cli
lods
push
std
pop
cmp
jns
and
adc
mov
movsl
mov
sub
incl
adc
and
mov
mov
ljmp
pop
pop
ret
adc
ret
jg
insl
add
sub
hlt
mov
insl
loope
loopne
sbb
sbb
movsb
cmp
or
filds
pop
icebp
jne
lods
dec
fidivl
xlat
hlt
movsl
mov
insl
lods
je
push
mov
sub
sahf
cld
xchg
imul
dec
push
or
lods
cmp
negb
je
cmp
insl
sar
and
aam
pop
insl
push
pop
sub
xchg
fcmovbe
loop
aaa
clc
fimull
imul
and
fsubl
divb
fdivrl
test
das
and
jg
mov
add
lcall
nop
lock
fldt
lds
mov
in
addr16
mov
lock
pop
stos
sbb
or
xchg
dec
repnz
sahf
mov
sbbb
sbb
sub
into
mov
or
and
cmp
mov
jae
jne
popl
divb
xor
icebp
loop
or
dec
mov
and
add
mov
xchg
cli
adc
and
insb
mov
pop
cli
movsl
or
xor
xchg
imul
shlb
loop
in
mov
add
mov
mov
cmp
nop
sbb
mov
lds
sarl
adc
add
xchg
aaa
cmp
outsb
jle
mov
cmp
lock
mov
xchg
sar
sub
dec
mov
out
cltd
sub
mov
out
clc
push
ret
push
inc
xchg
xor
sti
sahf
jno
in
fwait
mov
push
mov
popf
dec
mov
aaa
xor
jg
cmpb
pop
push
mov
in
push
fsubl
insb
dec
ljmp
das
mov
cld
jnp
movsb
outsl
push
xor
lods
jno
test
fisttpl
mov
sbb
enter
lods
aad
jge
jl
out
les
sub
daa
test
push
jb
incb
inc
fstpt
add
mov
cli
or
cmpb
cli
popaw
add
aaa
push
xor
inc
cmp
mov
mov
iret
add
jmp
jae
mov
aam
scas
xchg
out
lcall
ficoml
inc
ret
xchg
lret
out
mov
loopne
in
loopne
insb
pop
cmp
pop
jp
addb
push
test
dec
bound
shrb
rorl
es
out
icebp
in
add
das
push
xor
fisubs
push
loopne
xchg
mov
fsubl
iret
std
bound
cmpsb
pusha
sub
cmpsl
pop
inc
mov
jmp
das
mov
cltd
addr16
mov
roll
add
adc
insl
loope
ss
push
push
pop
jle
paddd
adc
add
adc
dec
movsb
popf
mov
cli
mov
lock
and
xchg
fnsetpm(287
sbb
paddw
js
xor
sti
push
dec
mov
adc
dec
mov
std
xlat
push
pop
lock
dec
out
push
mov
outsb
adc
mov
test
js
dec
lret
lahf
inc
adc
jmp
outsl
cld
outsb
nop
add
dec
push
inc
sbb
in
dec
jne
hlt
pop
inc
dec
mov
inc
and
cmp
inc
mov
test
movsl
notb
cltd
dec
jbe
pop
fcomp
mov
xchg
stos
cmc
jge
clc
incl
iret
or
pop
ret
or
or
xor
outsb
pop
sub
xchg
loopne
pop
stos
inc
imul
mov
fldt
add
sub
sub
movsl
fcmovne
sub
adc
jecxz
add
decl
add
or
mov
xchg
ss
mov
loope
and
push
ljmp
pop
fdivr
imulb
adc
jb
fwait
mov
add
inc
test
push
sahf
pop
jnp
or
xlat
jg
js
jbe
pop
or
pause
dec
outsl
mov
jl
aaa
inc
pop
fidivrs
push
cmp
and
cmpsb
leave
push
add
lds
mov
dec
cmp
mov
mov
lods
dec
fistl
add
sbb
add
or
orl
ret
decl
mov
je
imul
lcall
cmc
or
ja
mov
sub
fldenv
jmp
xor
hlt
int3
mov
mov
xor
ficomps
jecxz
mov
out
or
out
lods
xlat
insb
fbstp
cwtl
scas
lret
sahf
lahf
das
adc
imul
out
repz
cmp
mov
push
out
or
icebp
lahf
dec
test
jp
out
add
xchg
cli
or
imul
cmp
jno
inc
fwait
enter
pop
and
pop
mov
subb
mov
and
xor
xor
jbe
popf
push
std
repnz
data16
inc
push
loope
mov
push
or
push
pusha
pop
sbb
pop
leave
jl
sub
sbb
outsb
.byte
.byte
.byte
.byte
mov
call
in
sub
push
push
push
pushl
push
lea
push
or
add
jmp
call
leave
ret
add
rcll
stc
decl
decb
add
lret
notl
push
push
push
push
inc
jbe,pt
jg
push
dec
inc
and
mov
fcmovnu
sbb
push
lea
push
pop
cld
push
lea
push
jno
push
addr16
aaa
push
das
jno
xor
fistl
in
ja
push
push
mov
inc
push
call
lods
and
add
pop
sub
or
mov
mov
push
push
dec
insb
mul
fcomp
std
outsl
adc
dec
cmp
jae
gs
dec
sbb
jle
pop
add
enter
dec
imul
pop
xchg
xchg
pop
jp
jb
dec
fmull
loopne
or
lret
call
fcomp
xor
sub
sbb
sub
decl
add
adc
sbb
adc
sub
inc
les
leave
xor
push
jne
arpl
push
sub
sub
popa
test
outsb
or
inc
ja
xchg
popf
and
outsb
icebp
add
fistpll
xchg
or
jne
sub
mov
cmp
fs
pop
fdivrl
cld
rcll
insl
in
pop
dec
data16
or
mov
repnz
inc
data16
push
add
incl
inc
pop
adc
add
mov
adc
mov
mov
sti
sbb
adc
mov
inc
add
xchg
data16
add
test
push
movsb
aas
hlt
xchg
enter
add
leave
ret
pop
in
push
aad
mov
cmp
int
pop
or
or
dec
pop
and
repnz
pop
mov
loopne
pop
gs
cmp
add
mov
push
jge
ja
fcomp
mov
cmpsl
fcmovnbe
xor
mov
push
xor
push
hlt
or
xlat
loopne
sub
insb
std
gs
shlb
push
inc
inc
push
fwait
clc
sub
push
outsb
es
pop
out
push
int3
fwait
and
bound
xor
divl
mov
std
loope
lock
inc
addr16
pop
insb
dec
add
fistpll
jne
jmp
ret
push
xor
add
push
idiv
mulb
arpl
pop
ds
fistps
add
movsb
lahf
inc
outsb
xor
pop
insb
sub
hlt
add
push
or
call
dec
mov
jno
pop
fs
fs
mov
add
cmp
cli
loopne
add
and
icebp
cmp
aas
mov
push
jle
jb
inc
xor
mov
lea
push
jne
je
dec
loopne
mov
insl
js
push
in
fsubrs
rolb
fidivrs
js
popa
push
cmp
loopne
ja
int
popa
ja
sbb
sbb
xor
call
imul
push
push
into
sub
sub
insb
push
jecxz
push
in
push
pop
inc
jg
loopne
add
adc
add
inc
add
push
cli
lea
shrl
jno
inc
iret
cs
jb
dec
in
div
push
pop
adc
or
lcall
jg
dec
add
dec
mov
ja
das
ds
push
jb
hlt
push
push
inc
mov
je
inc
pop
out
or
jb
in
sub
inc
cmp
das
jl
jae
imul
dec
and
negl
lret
fadd
dec
mov
mov
xor
fmuls
movl
mov
or
mov
sbb
xorps
insl
out
mulb
sbb
pop
inc
mov
push
roll
insb
stc
outsl
sub
sbb
push
leave
testb
push
push
bound
inc
mov
test
mov
xor
mov
loopne
push
mov
mov
fwait
jno
sbb
jge
or
in
into
mov
and
adc
inc
push
xor
push
jo
mov
inc
in
adc
push
jb
dec
push
jbe
sbb
imul
pop
push
mov
js
out
shrl
jo
push
movsl
sub
pop
cld
ret
pop
int
sbb
dec
adc
ror
dec
outsb
outsl
jl
insl
mov
sub
loopne
inc
jne
clc
ljmp
cmp
lret
dec
mov
sub
inc
sbb
add
mov
aaa
xchg
ja
shlb
fiadds
shrl
push
outsl
cli
push
add
mov
push
add
xor
mov
push
pop
or
dec
mov
dec
jl
mov
push
shrl
ficompl
clc
sub
inc
mov
test
add
stc
outsl
jp
pop
arpl
ffreep
mov
jae
ret
inc
sbb
scas
rcr
enter
xor
cmp
pop
mov
inc
lcall
add
xor
imul
push
dec
xlat
jp
push
dec
bound
pop
ss
cmp
mov
sub
jbe
lods
xchg
jne
push
repz
push
rcr
or
aaa
xor
sub
dec
fdivrs
lcall
jno
mov
ds
arpl
or
dec
jne
mov
leave
xchg
sbb
imul
aam
pop
push
push
outsb
imul
fidivs
cld
arpl
outsb
stc
lret
dec
mov
imul
repz
outsb
lds
dec
add
mov
mov
or
aas
xchg
mov
addl
repz
dec
inc
pop
or
jnp
ljmp
jl
fwait
nop
roll
test
stc
mov
hlt
xor
xor
add
jbe
xchg
adc
cld
jmp
add
mov
addr16
add
push
and
adc
jge
out
in
jno
and
lea
add
mov
push
mov
daa
out
push
jno
call
outsl
sbb
mov
outsl
repnz
cmp
mov
cmp
lret
int
inc
rorl
mov
add
push
mov
pop
mov
mov
adc
lods
hlt
mov
jbe
aaa
cwtl
xor
adc
push
xor
dec
fdivr
lahf
or
sbb
mov
incl
addb
test
add
in
or
int
mul
and
repz
hlt
add
icebp
sub
lods
cmp
lcall
add
add
xor
ret
mov
or
add
pop
add
mov
sbb
and
xchg
ja
push
lock
inc
xchg
jnp
in
out
out
adc
push
and
mov
in
shlb
add
sub
or
mov
add
gs
add
dec
push
pop
pop
dec
sarl
ss
in
inc
add
sub
xchg
popf
rorb
mov
jp
dec
popl
mov
sbb
lcall
sbb
sub
rcr
xor
push
add
sti
xchg
fs
adc
and
addb
add
shrl
xchg
popf
test
dec
push
into
add
in
xchg
inc
test
xchg
push
cltd
test
int
mov
push
and
inc
sbb
xor
inc
pop
pop
fstp
outsl
add
cmp
repz
aad
ds
or
fildl
test
in
insl
test
cmp
addb
mov
lret
cmp
add
out
popf
pushf
je
ret
add
fdivrp
ret
add
lret
mov
subl
adc
xor
ret
push
xchg
repnz
jae
xchg
test
cmp
or
cmpsb
scas
ffree
addl
inc
push
sub
fidivrs
mov
lds
xor
pop
cld
fiaddl
icebp
add
popa
jb
mov
inc
sub
data16
fdiv
sar
out
rolb
add
pshufw
xlat
pop
popf
adc
mov
loop
xor
adc
sub
frstor
or
daa
sub
mov
mulb
imul
adc
test
fisttpll
sub
or
xchg
mov
xchg
jmp
xor
add
inc
jae
mov
cmpsb
xor
pop
imul
push
iret
nop
cwtl
jae
dec
loope
mov
lea
inc
jbe
jnp
retw
dec
adc
dec
or
pop
sub
jno
cli
push
js
cld
xchg
outsl
sbb
call
xlat
arpl
sub
jnp
into
mov
mov
cmpsb
cmc
mov
fiadds
mov
scas
std
ja
adc
mov
jge
mov
and
cltd
push
dec
mov
push
adc
pop
dec
push
cmpl
cmp
faddl
mov
xor
or
imul
bswap
fdivs
loope
cmp
or
insl
add
add
push
add
or
mov
cld
mov
xor
pop
mov
mov
mov
mov
ds
mov
push
jbe
adc
dec
push
xchg
loope
push
and
mov
insl
push
or
adc
lods
add
fcoml
out
mov
inc
pusha
scas
cmc
aaa
inc
sahf
cmpsl
sbb
fs
loope
or
scas
aas
mov
in
xchg
ja
fdivl
add
sbb
repz
xlat
sbb
jg
cld
testb
imul
les
outsb
xchg
ds
mov
jmp
inc
jno
pop
outsl
aad
mov
add
fcompl
je
mov
sub
push
push
frstor
negl
mov
je
popf
mov
add
mov
adc
rcll
cwtl
and
dec
hlt
ret
aas
int
das
das
hlt
test
add
loopne
not
jne,pn
mov
sub
add
test
ss
adc
es
mov
in
pop
jo
cli
xchg
jnp
in
aad
hlt
stc
mov
insl
jge
or
in
mov
mov
xchg
jb
cmp
xchg
cmp
and
dec
addl
mov
iret
and
pushf
push
xor
or
repnz
mov
sbb
hlt
ljmp
lahf
xor
lahf
xor
push
mov
ss
shrb
add
out
mov
rol
or
pop
and
xchg
or
xor
stos
pop
aaa
mov
jae
push
les
hlt
mov
jle
mov
mov
and
xchg
imulb
mov
cli
pop
sbb
adcb
add
cmp
into
and
add
push
ljmp
je
inc
fldenv
repz
out
outsb
addr16
nop
sbb
movb
xchg
scas
jecxz
mov
or
push
in
jge
and
outsl
call
push
movsb
adc
loope
adc
cli
rcl
test
jns
jmp
clc
mov
call
xchg
mov
pop
sbb
out
fidivs
dec
mov
pusha
or
lahf
or
sbb
pop
xchg
pop
lds
mov
rorb
push
sub
or
popf
or
add
pop
jo
add
sbb
add
repz
aas
into
ret
adc
out
sub
adc
mov
sbb
lock
out
fcmovnu
lods
jns
lret
and
int3
dec
call
mov
imul
pop
xchg
aas
cltd
jl
out
sbb
and
rcrl
jns
push
sahf
sbb
stc
ja
sbb
xchg
xor
stos
test
rcl
or
fsubl
pusha
sbb
mov
addb
inc
cmp
ljmp
cmp
or
rcrb
cmp
lret
daa
mov
cld
jl
in
fdivrl
lock
push
lret
mov
cs
ds
dec
cltd
outsl
ficompl
xor
mov
add
xor
das
rcrb
mov
xchg
dec
cmp
add
fldl
aad
aad
dec
and
lods
push
mov
pop
jg
inc
mov
imul
cmc
js
nop
pushf
or
aam
cld
cmpb
mov
dec
adc
xchg
pop
mov
add
xchg
ds
push
cmc
and
dec
loopne
jmp
or
into
sti
mov
inc
sahf
mov
jbe
ja
mov
xchg
pop
push
orb
in
mov
cs
scas
push
ret
arpl
cmp
insl
js
and
push
adc
xor
pop
mov
pop
fistl
imulb
or
jl
xchg
push
mov
pusha
nop
pcmpgtd
cmp
loopne
xor
push
cli
sti
xchg
nop
xor
mov
xor
jecxz
rolb
jl
ret
insb
inc
cmpsb
scas
movswl
cld
rolb
mov
xchg
clc
ja
xchg
js
cmp
icebp
addl
dec
add
in
aam
fists
out
xchg
inc
xor
jg
lock
and
xor
pop
call
mov
pop
cmpl
das
notb
and
ss
and
sti
stc
pusha
xor
les
mov
js
data16
inc
mov
mov
clc
ret
xchg
pop
sbb
fisubl
jne
fisttps
or
inc
pop
ret
adc
push
xor
and
arpl
cmp
insb
cwtl
pop
pop
notl
push
adc
sub
das
mov
and
test
sub
lock
xchg
xor
decb
inc
mov
cld
roll
ret
psubsw
lds
fisubl
mov
fistpll
adc
orb
mov
jnp
inc
xchg
cld
pop
fdivr
rol
jmp
xchg
push
push
xor
shll
push
movsl
cmp
jns
scas
call
popf
outsb
pop
and
enter
dec
lock
int3
sub
sbb
inc
mov
insb
out
sub
add
bound
push
push
enter
daa
cli
sbb
fsubrl
jo
and
xor
jo
ljmp
test
pop
add
xchg
sub
insb
mov
pop
std
aam
and
inc
dec
push
or
or
pop
js
fsubs
divb
ret
sbb
pushf
idivl
ret
jp
fdivrl
fstp
in
in
adcb
jno
mov
sub
stc
sub
fprem
cmp
in
ficoml
or
xor
jae
sarb
add
rcll
in
scas
bound
sbb
aad
jns
jbe
stos
repz
adc
sbb
fwait
outsb
bound
inc
dec
cwtl
sub
xor
mov
xlat
movsb
gs
adc
or
push
adcb
arpl
insb
pop
mov
jbe
xor
sub
and
imul
mov
arpl
or
in
lock
std
or
ds
xchg
cmp
and
ja
adc
push
or
stos
outsl
iret
fucomip
mov
in
and
adc
jecxz
pop
iret
cs
dec
adc
xor
icebp
sti
stc
jo
push
addr16
dec
jns
ret
mov
outsl
fimuls
dec
lods
xor
call
int3
icebp
sub
sti
mov
pop
add
lcall
mov
inc
leave
add
or
cmp
xor
mov
mov
outsl
loope
dec
sub
xor
inc
adcb
test
sbb
dec
sub
push
sub
fildl
scas
jl
pop
mov
xor
mov
popa
inc
ret
dec
lahf
mov
je
add
pusha
jmp
pop
or
push
mov
movsl
dec
cli
adc
jno
jno
inc
setg
lcall
lods
dec
mov
and
lcall
pop
outsl
cltd
fildl
inc
or
mov
pop
fucomi
rorl
es
push
pop
clc
jbe
ja
nop
out
mov
outsl
jge
xor
and
das
mov
fnstsw
dec
pop
cmp
sbb
mov
or
insb
sub
xor
jns
sahf
inc
inc
pop
enter
js
jle
pushf
push
bound
push
ds
mov
cmpsb
add
jecxz
cmpb
inc
ljmp
int
adc
dec
sti
test
cmc
ds
out
js
dec
ds
sti
sar
inc
aaa
adc
inc
cwtl
xchg
jbe
loop,pn
cli
or
pop
stc
lcall
sahf
sbb
stos
push
out
push
sub
faddl
out
add
mov
cs
ja
push
inc
lock
lret
fldl
fs
push
mov
aas
lahf
jo
imul
shlb
daa
pop
stos
and
pop
call
movsl
pop
repz
xlat
jno
xlat
xchg
push
xchg
cmp
push
loope
test
pop
mov
mov
ss
dec
fsubr
popf
insl
pushf
push
movsb
scas
es
bound
lds
inc
aad
mov
das
loopne
outsl
lahf
subl
xor
gs
ss
fwait
push
inc
jg
inc
mov
cld
jno
jp
mov
or
daa
aas
int3
sub
insb
fs
pop
insl
sbb
mov
adc
aad
lahf
sbb
cli
inc
sti
cmp
sub
sub
fwait
iret
fnstsw
ds
std
xchg
add
xor
lods
push
ds
mov
sub
xchg
sbb
and
jmp
mov
bound
dec
mov
sbb
or
sub
pop
outsb
dec
aam
pop
sbb
test
mov
cli
test
inc
push
pop
pop
mov
or
jno
shll
mov
fbstp
imul
pop
insb
cmpsl
leave
push
xchg
movsb
ja
mov
jne
inc
jg
cltd
add
jnp
incl
and
inc
cmpsl
and
negb
popf
sbb
add
subb
add
push
xor
adc
sbb
rcll
push
das
test
das
pop
mov
jo
fisubs
fsub
push
ljmp
in
jl
roll
emms
or
hlt
and
mov
es
or
fldcw
push
or
stos
lea
jmp
add
mov
mulb
fisubrs
in
mov
loopne
lret
push
fildl
jae
decb
inc
testl
dec
into
mov
push
xchg
repnz
mov
pop
imul
pushl
inc
jle
sahf
dec
iret
adc
add
sbb
aad
ja
cltd
jb
js
repz
inc
aaa
jno
mov
pop
push
in
repz
xchg
mov
mov
outsb
jo
cmpsl
jge
outsl
insb
dec
mov
daa
jle
lods
sbbl
fsubs
jbe
in
subl
inc
loope
mov
repz
sbb
nop
sbb
insl
fistpll
cwtl
sub
pop
repnz
test
inc
push
and
pushf
ficompl
mov
imul
scas
lcall
add
pop
jecxz
jb
dec
in
or
pop
xor
decl
push
dec
push
cltd
inc
add
xchg
push
push
inc
lods
popa
mov
pop
test
xchg
fmull
clc
xchg
and
int3
shl
js
loope
mov
sub
mov
data16
in
mov
rcll
fwait
pop
scas
insb
mov
xchg
push
mov
test
fmul
or
pop
outsb
mov
pusha
push
or
ss
cmpb
ret
div
mov
andl
aas
or
ds
mov
ss
jne
xor
data16
jno
cmpb
outsb
dec
lock
adc
je
jmp
js
in
mov
pop
xor
xchg
adc
mov
mov
test
or
loope
or
jl
or
mov
icebp
pusha
out
idivl
fisttpl
dec
nop
inc
imul
cmp
clc
test
pusha
mov
outsb
ja
mov
outsb
cmp
test
fdivrs
icebp
filds
mov
sbb
popf
sbb
push
push
xor
popa
add
fucomp
cmc
cmp
in
ss
test
push
mov
fmuls
add
out
ret
sub
les
and
lahf
jle
xlat
insl
jp
insl
sbb
test
jb
pop
inc
dec
xchg
out
test
fdivr
mov
fbstp
xchg
pusha
and
jns
add
in
cmp
jb
out
out
xchg
in
pop
movsl
out
les
pop
movsb
push
jo
adc
das
ror
jne
inc
pop
mov
rolb
cmp
stos
stos
jno
fstpl
xchg
push
cmp
movsl
test
and
imul
add
jno
or
fiadds
mov
fstps
je
xchg
scas
pop
ljmp
mov
mov
push
jo
scas
imul
sbb
dec
dec
gs
adc
push
push
cmp
gs
jmp
jb
jle
inc
out
inc
outsb
hlt
pusha
jo
mov
orb
icebp
lret
or
cmc
push
add
and
loopne
push
fs
ja
fdivrl
addb
call
lock
adc
inc
ret
mov
adc
gs
clc
lods
push
les
data16
jp
cmp
es
pop
fildl
sti
nop
inc
and
push
imul
or
pop
dec
rcrl
and
and
lods
jo
pop
mov
jg
scas
adc
sahf
fmull
or
jns
cwtl
in
fimull
mov
movsb
or
das
or
xchg
aad
js
mov
negl
inc
mov
je
push
out
sbb
xchg
insl
cmpsl
xor
and
mov
mov
imul
adc
int3
xor
cmp
es
mov
cmp
mov
psubusb
loope
out
adc
cwtl
mov
cmp
cmp
dec
mov
inc
inc
fistpll
sahf
mov
cmp
xchg
sbb
lds
mov
outsb
sahf
push
adc
stos
mov
imul
in
fisubrl
push
ficoml
rol
mov
bound
mov
enter
add
popa
jnp
xor
and
lcall
and
sbb
js
and
and
sub
mov
fistps
push
test
fucomp
imul
xorb
jno
icebp
fucom
add
fimuls
inc
jg
xchg
xor
out
dec
fcmovne
lea
or
int3
lcall
imul
pop
or
xor
xchg
das
mov
mov
nop
pop
dec
xor
mov
in
push
xor
loopne
sti
or
enter
sbb
mov
adc
pop
ja
jae
das
pusha
mov
xchg
adc
add
push
into
test
jns
xchg
into
pop
jns
mov
sub
rcrb
and
jmp
xor
push
shll
add
jbe
mov
rolb
dec
push
sbb
in
popa
push
cld
add
adc
mov
fwait
inc
inc
xor
es
imul
xor
jecxz
inc
sub
jbe
sbb
add
mov
es
cmp
mov
pop
jmp
push
test
and
add
daa
lds
scas
add
push
push
and
sbb
es
sub
cltd
jle
push
jo
adc
mov
nop
sbb
inc
mov
mov
testb
xor
fisttps
aam
sbb
lock
fcoms
imul
fs
stos
jmp
test
xchg
inc
jae
rdpmc
cmp
and
and
shr
outsl
nop
jge
lods
mov
sar
sub
add
push
sbb
and
lcall
loopne
js
je
jg
adc
mov
aam
add
and
sbb
mov
xchg
loop
das
sbb
xchg
sub
mov
insl
mov
xchg
mov
push
test
popf
jge
pop
test
or
xchg
insb
fistpll
jmp
or
icebp
jno
test
xchg
cmp
in
sarb
jo
leave
mov
or
popf
add
outsl
movsl
int3
or
pop
push
lock
push
cmp
inc
outsl
aaa
loop
xchg
adc
jbe
dec
push
imul
icebp
adcb
rolb
cmpsl
push
mov
xchg
mov
xor
xor
insb
adc
xor
fisubrs
je
add
icebp
test
gs
shlb
cltd
mov
lods
or
push
cmp
xchg
fdivp
outsb
pusha
incl
xchg
lcall
xor
das
adc
mov
lods
ret
and
push
not
push
inc
mov
out
scas
hlt
cwtl
movsl
jg
mov
test
fcomps
je
mov
pop
xchg
nop
xchg
inc
sbb
cmp
jae
mov
inc
sbb
cmp
sti
xchg
in
pop
mov
push
jb
pop
outsl
xchg
outsl
aaa
jge,pt
aad
dec
loopne
loopne
push
bound
mov
jmp
mov
xchg
adc
jp
or
icebp
inc
test
mov
add
sahf
test
push
mov
xor
mov
and
fs
push
mov
icebp
fbld
in
pop
aas
enter
mov
mov
pop
arpl
lret
jb
in
add
lods
test
xor
fisttpl
dec
fs
dec
lcall
shll
in
pop
std
and
lret
xchg
cmp
in
pop
mov
mov
pop
test
fisttps
notb
push
add
bound
inc
add
jge
push
dec
popa
mov
xor
mov
xchg
aam
jl
mov
xor
xchg
mov
mov
addb
lock
jle
jae
and
jp
rcrl
lahf
stos
fdivrs
add
cmpsl
mov
lea
xlat
add
adc
or
jo
adc
fisttpll
pop
clc
lea
xchg
mov
dec
jmp
sub
les
cli
loope
int3
adc
xchg
jbe
loop
cmpl
lret
mov
mov
idivb
adc
dec
xchg
ret
push
imul
lds
sbb
lea
mov
sahf
and
daa
sbb
mov
jle
xchg
mov
imul
outsl
hlt
sbb
xor
in
xchg
imul
xchg
std
insb
clc
cmp
cmp
mov
mov
ljmp
outsb
fs
stos
bnd
add
dec
mov
xchg
shlb
int3
cltd
mov
cmpsb
xor
push
es
pop
adc
sarb
pop
or
sbb
sub
inc
cmp
movsb
sarb
xchg
out
pushl
lcall
test
xor
rolb
insb
lcall
sbb
cmp
sub
xchg
out
jecxz
pop
aaa
xor
inc
ret
sbbl
add
in
test
lods
and
inc
es
js
push
rorl
scas
inc
sbb
adc
std
push
addr16
xchg
fwait
mov
clc
fisttpl
std
jne
and
adc
test
pop
mov
das
sub
dec
cmp
fildll
sbbb
xorl
pop
cli
cwtl
sbb
fildl
jns
shll
mov
jmp
jle
or
jno
js
aad
js
in
mov
ljmp
inc
cmpsb
mov
fidivrs
xor
xor
lock
mov
sub
jnp
outsl
xchg
mov
movsl
fs
cli
bsr
fnstsw
leave
inc
cmp
out
push
xchg
cli
int3
imul
nop
in
lret
movsb
inc
in
inc
aas
mov
dec
push
or
adc
adc
mov
lock
add
adc
fldl
inc
ds
fldt
mov
popa
in
lret
inc
cmp
lods
xchg
pop
jbe
push
fs
roll
xchg
xchg
sbbb
nop
pop
cmp
jmp
inc
mov
jge
jg
mov
lret
pop
cmp
adc
std
movsl
inc
rorl
stc
and
adc
mov
mov
inc
mov
adc
adc
xchg
push
adc
jae
dec
jmp
outsl
ljmp
sbb
outsl
pusha
or
cmp
sub
mov
sub
ss
fists
into
insl
js
repnz
add
mov
push
push
pusha
add
rclb
jge
addb
jbe
jo
jecxz
cmp
in
sub
js
jnp
push
movsl
cmc
loopne
jmp
pop
sbb
mov
stos
adc
movsb
pushf
mov
fmull
pop
loopne
mov
pop
mov
aam
lret
add
ja
push
fisttpl
ficomps
aam
jo
xor
lcall
dec
pushf
sahf
adc
mov
mov
pushf
jge
lret
jle
lods
loope
jg
jecxz
mov
ret
movsl
inc
mov
and
leave
push
sub
or
adc
jg
clc
sti
movsl
pop
fnstcw
push
push
leave
andb
out
mov
push
imul
push
xchg
mov
fcoml
and
adc
jne
stos
fucomip
insl
xchg
pop
push
push
jbe
push
lock
loope
cmp
mov
dec
push
es
or
sbb
dec
pop
and
test
pusha
mov
adc
sbbl
call
sbb
std
sbb
rcrb
mov
js
ljmp
cmp
out
mov
cmp
icebp
jbe
pop
shrl
lock
jl
adc
sub
pushf
addr16
and
push
jbe
mov
inc
inc
mov
xor
and
or
pop
xchg
fiadds
pop
jmp
dec
popa
xlat
add
xor
fwait
cmc
test
jle
test
sbb
cwtl
out
fistps
loope
push
stos
push
mov
mov
bswap
push
repnz
cs
loope
dec
cmp
jno
or
push
adc
test
fildl
push
mov
sub
jne
mov
sbbb
clc
sub
sub
cltd
mov
mov
dec
iret
push
scas
cmp
leave
add
or
mov
mov
pop
sarl
dec
sbb
loope
out
xor
rcrb
fxch
mov
into
dec
popa
or
mov
lcall
mov
int3
and
pop
clc
xchg
dec
shrl
mov
xchg
jl
sarb
aaa
shlb
sub
ret
mov
mov
inc
jmp
repnz
ljmp
jl
mov
cli
mov
push
outsb
hlt
mov
test
xchg
stos
mov
jbe
fs
xchg
mov
ficomps
cmc
dec
xlat
inc
test
mov
and
leave
test
dec
adc
pop
and
push
push
push
push
loope
cmp
mov
sbb
lahf
movaps
gs
imul
mov
xchg
ljmp
outsb
mov
jo
xchg
jbe
jg
sbb
lods
inc
insb
insb
lea
push
daa
leave
mov
xchg
and
loop
and
das
xor
mov
adc
scas
sbb
aaa
push
mov
loope
dec
mov
into
dec
fbstp
mov
dec
adc
rolb
ja
mov
les
outsl
scas
gs
mov
daa
dec
xchg
movsl
ja
pop
adc
adc
jp
jno
fildl
push
arpl
push
subl
ret
mov
xor
dec
mov
push
rcl
jp
sub
aas
jnp
push
jle
arpl
pop
jg
shl
adc
lret
inc
jb
inc
ja
shlb
jb
outsl
dec
sbb
cli
lds
sbb
push
cltd
xchg
dec
adcl
mov
sti
ds
sbb
inc
bound
sbb
add
xor
and
add
loopne
cs
popf
test
push
orl
mov
adc
lods
dec
adc
inc
scas
cld
sub
add
mov
sbb
mov
jne
test
mov
incl
arpl
mov
jg
add
xor
fildll
imul
mov
xchg
sub
sub
mov
lcall
jl
lahf
int3
in
inc
xor
push
dec
cmovb
or
mov
sbb
jno
push
adc
outsl
pop
push
push
rorl
divl
push
out
push
adc
adc
lret
sub
mov
sbb
sbb
clc
pop
outsl
mov
or
shlb
add
cli
out
add
rcrb
and
jno
dec
jl
xorb
outsl
cmp
dec
aad
js
sub
cmp
loope
sbb
rcr
pop
dec
stos
pop
aas
lock
popf
sbb
mov
inc
pop
sbb
cmp
icebp
push
cmpl
scas
mov
mov
das
fsubl
mov
or
jbe
cs
enter
lods
sti
dec
or
or
inc
hlt
std
std
pop
mov
jp
push
jecxz
lock
repz
aad
shrl
lcall
mov
stc
in
cmp
sbb
xchg
and
sub
pop
bnd
pop
jno
dec
sar
fwait
stos
sbb
loope
or
sbbb
ja
cmp
fsubrl
mov
cmp
subl
cmp
xor
mov
dec
inc
cmp
outsl
add
add
aad
push
movsb
and
add
fisttpll
mov
sub
xor
pop
clc
pop
aas
add
fwait
jae
mov
pop
and
mov
stos
jnp
mov
pop
mov
mov
ret
call
inc
js
insl
sub
add
stos
mov
loop
sarl
div
mov
mov
test
pop
insb
clc
stos
lcall
push
mov
icebp
iret
pusha
enter
dec
push
sar
sub
out
and
dec
js
push
jle
mov
test
idivl
mov
lods
mov
stos
lods
xchg
lret
push
lahf
aaa
bound
test
jo
rcr
push
and
lret
sbb
testb
mov
sbb
dec
aaa
in
mov
dec
mov
fbstp
aas
aam
xorb
push
icebp
imul
sbb
ss
pushf
repnz
incb
or
outsl
pop
sti
xchg
in
movsl
adc
mov
in
mov
inc
and
jecxz
jbe
test
rcrb
dec
std
test
popf
add
inc
push
add
nop
ss
xchg
adc
jb
jecxz
data16
add
cld
push
pop
js
sbb
das
imul
adc
in
fcmovb
sub
cmc
lea
orl
sub
inc
mov
in
fldl
int
dec
pushf
jbe
and
aas
push
std
push
push
loopne
sbbb
adc
xor
lea
mov
fwait
mov
loop
mov
dec
mov
sti
sarb
push
fwait
inc
fadds
pop
cli
inc
adc
sbbb
dec
in
mov
frstor
inc
pop
adc
xchg
mov
dec
mov
mov
cmp
orl
mov
adc
adc
movsl
xor
cmpsl
sahf
jle
sbb
mov
mov
mov
inc
and
sahf
aaa
adc
sub
pop
cli
rolb
add
xor
in
lret
pop
cmp
ja
dec
inc
test
pop
pop
lock
insb
in
test
dec
fsubr
cltd
and
cmp
lock
jle
push
mov
adc
ret
or
add
adc
cwtl
clc
mov
sub
mov
cmp
cwtl
sti
aaa
mov
ret
inc
xlat
mov
push
mov
sub
fucomp
mov
sbbb
jbe
das
mov
inc
insb
fistpll
jne
sbb
sti
or
xchg
cld
dec
movsl
loope
je
inc
ljmp
and
fs
xchg
jo
cltd
arpl
mov
mov
mov
push
shrb
rorb
jle
outsl
es
inc
test
jecxz
mov
xchg
insl
sbb
aas
imul
loop
add
mov
inc
decl
push
adc
ret
out
jmp
gs
aad
inc
popf
sbb
or
dec
fbld
subl
jo
xor
or
loop
mov
jbe
loopne
or
test
mov
adc
out
mov
fs
jge
mov
in
nop
dec
test
dec
in
mov
push
or
inc
outsl
aaa
cs
and
push
pop
orb
ja
movaps
adc
sub
add
add
pop
jge
jo
repnz
xchg
sbb
clc
movsb
mov
fidivrl
xchg
mov
push
ljmp
jge
jg
outsl
adc
cmp
add
sub
fidivs
scas
int
mov
mov
call
nop
out
sbb
mov
sbb
mov
loop
mov
mov
int
pop
sub
jl
pusha
in
pop
and
pusha
sbb
out
outsl
arpl
dec
popf
icebp
mov
shl
fsubr
push
mov
lcall
cmpsl
inc
cmpsl
cs
jnp
lea
inc
cmp
and
sar
popa
inc
dec
pop
rol
push
stos
out
add
mov
mov
aas
sub
bound
push
jo
or
addl
dec
or
mov
mov
ss
jmp
jp
jg
xor
lods
xchg
sbb
sbb
fsubrl
mov
sbb
cmp
test
mov
imul
into
cmp
lock
aad
xorb
stos
pushf
add
daa
les
popf
or
xchg
addr16
mov
cld
lea
inc
ja
mov
inc
testl
sbb
outsl
ja
push
jl
call
mov
and
adcl
dec
mov
and
add
or
and
out
cli
dec
jae
rorl
mov
or
inc
push
pop
inc
and
call
lcall
addb
lcall
mov
out
clc
ss
inc
repz
ljmp
loopne
cmc
adc
inc
sbb
popf
push
or
lock
mov
lahf
mov
pop
cmp
sub
dec
ret
sub
es
mov
xchg
imul
popf
popf
and
mov
adc
sbb
sbb
xchg
shlb
addl
movsl
jl
ds
stos
jo
lret
out
push
inc
push
test
mov
push
cltd
dec
enter
mov
fwait
sbb
loop
cmpsb
xchg
insl
mov
sarb
add
imul
fwait
mov
adc
cmp
dec
jo
pop
cmp
daa
adc
fidivl
xchg
in
test
ja
aaa
cli
xchg
loope
lahf
lds
adc
rorl
add
int
xchg
stc
loop
mov
mov
inc
fwait
negb
pop
ss
pop
fcomp
cli
test
inc
sbb
and
movsl
movsl
dec
hlt
pop
in
lods
ficompl
cli
popa
sub
sub
outsb
mov
mov
push
push
rcl
int3
mov
sarb
push
dec
mov
adc
dec
repnz
push
push
pop
fiadds
gs
add
test
fnstcw
jns
pop
inc
jmp
adc
mov
inc
mov
loopne
pop
icebp
add
xor
insl
cmp
mov
pushf
mov
icebp
cmp
or
ffreep
test
shll
cs
and
inc
mov
out
pop
sub
fisttpl
fidivs
mov
lods
sbb
mov
jecxz
inc
cmp
mov
xchg
mov
roll
sbbl
jp
or
mov
ds
repz
dec
pop
test
jnp
jmp
jbe
pop
sbb
insb
lahf
ret
movsl
or
mov
jmp
lods
mov
xor
xchg
loope
sbb
cli
fisttps
bound
xchg
mov
mov
data16
fdivl
fstps
cs
ret
push
jle
mov
outsb
inc
add
add
mov
jge
fmul
mov
nop
jmp
jg
push
cmp
cmp
scas
ss
rcrb
cli
mov
insb
popf
lods
xchg
xor
ret
mov
inc
clc
or
push
call
fdivrs
popa
sarl
mov
stc
jmp
jg
out
inc
cmp
cmp
push
and
sbb
xor
insb
pop
lds
data16
push
mov
idivb
jb
push
mov
shr
test
sbb
mov
mov
repnz
test
dec
pop
xorb
test
bnd
fldt
icebp
aad
mov
sub
jmp
mov
insl
bound
pop
push
leave
adc
and
cs
arpl
pop
popa
jae
lods
inc
sbb
mov
pop
shll
fldl
lock
jno
ficoms
cmpsl
outsb
out
sub
outsb
pop
push
cmp
push
mov
jo
mov
or
jmp
mov
mov
or
test
and
and
std
sbb
or
mov
and
push
xlat
cwtl
jo
xorl
mov
lods
add
leave
sar
push
dec
fcom
push
out
dec
js
pop
loopne
sbb
call
inc
push
fucomip
pop
push
je
out
mov
xorl
jo
or
loope
adc
xchg
addr16
or
cs
push
je
jns
jg
mov
outsl
xlat
xor
xchg
push
cmp
xchg
pop
rclb
ja
cmp
leave
loope
incl
cmpsl
push
std
adc
add
add
hlt
inc
fbstp
cmpsl
nop
fcomps
cld
in
arpl
out
sti
popa
test
fs
push
sub
push
or
ret
and
mov
das
jl
add
dec
aam
scas
adc
sub
mov
dec
gs
dec
enter
push
pop
push
jb
ffree
stc
dec
mov
cmp
call
std
add
orb
mov
inc
sbb
mov
and
xor
and
data16
mov
inc
insl
jecxz
mov
add
repnz
shll
aad
sub
mov
aam
mov
adc
jmp
sub
jns
fsubrs
inc
test
and
fadd
or
lcall
loopne
push
add
adc
loop
out
es
aaa
add
xor
jmp
push
add
dec
jo
lods
mov
ret
push
js
adc
add
pop
fdivr
subb
push
nop
enter
jnp
xor
rcr
out
lock
add
sarb
lock
pop
call
cwtl
lret
push
scas
mov
jmp
and
imul
in
icebp
mov
adc
xchg
stc
xorl
mov
pop
std
call
xor
mov
pop
pop
inc
and
dec
pusha
inc
mov
test
push
jnp
out
push
cmp
or
jmp
cmpsb
std
cs
cld
fnsave
push
pop
into
sahf
aaa
mov
xor
pop
jmp
outsb
cld
push
shrb
aas
mov
leave
cmp
mov
xchg
xchg
imul
fnclex
imul
xchg
or
mov
push
push
cmpsl
mov
or
or
push
mov
or
mov
xchg
pushf
call
sub
dec
push
inc
mov
imul
testb
cli
mov
jbe
clc
test
inc
fxch
and
add
cs
ja
xchg
scas
lea
call
popa
fwait
jp
adc
clc
pop
lock
xor
fsubrl
outsb
pop
fistpl
out
jno
xchg
add
mov
std
adc
arpl
rclb
sbb
sub
mov
out
push
mov
push
notb
xchg
cmpsl
insb
or
sub
push
arpl
push
sbb
insl
shl
or
xor
stos
pop
sahf
mov
push
aam
dec
mov
pop
sub
xchg
sbb
jecxz
xor
jbe
shll
jg
cmc
arpl
insb
and
xlat
pop
jns
es
orb
ljmp
mov
add
push
movsl
fptan
mov
sub
addr16
fstpl
push
loope
push
shr
clc
cmpsl
add
dec
int3
movsb
sub
mov
sbb
jae
pop
add
sbb
jmp
in
sub
sbb
js
daa
je
scas
in
dec
paddb
lds
xlat
mov
mov
jb
cwtl
mov
mov
call
add
mov
cs
out
lahf
pushf
push
jns
and
cmp
dec
sbb
ss
add
xchg
push
sbb
ret
xchg
shrb
leave
xor
loopne
push
das
dec
pusha
cwtl
and
insl
out
call
lock
mov
orb
and
sbb
mov
popa
and
insb
jae
movsl
xor
inc
jns
push
jmp
ja
jns,pt
fidivl
cld
mov
test
push
insl
jmp
pushf
in
or
insb
push
pop
leave
jnp
push
sbb
mov
jge
aam
ret
mov
push
lahf
enter
test
sti
ret
add
ss
push
int3
fldpi
pushl
mov
jnp
ret
xor
mov
pusha
mov
sub
cmc
jmp
mov
adc
notl
fidivrl
or
xor
jne
inc
or
mov
cltd
shr
jg
and
jle
push
xor
clc
aas
dec
test
mov
out
in
sub
mov
inc
sub
and
push
mov
push
aaa
adc
jns
icebp
clc
mov
in
pop
jp
add
xor
pushf
push
cmp
sub
stos
gs
xor
mov
lock
repz
sub
xor
fsub
out
adc
arpl
cs
adc
inc
enter
pusha
ror
cmp
push
inc
es
or
dec
std
xor
xor
jp
xchg
push
cwtl
cmp
or
idivb
cmp
sub
push
or
lds
and
mov
and
enter
jmp
pop
mov
sub
sbb
ret
movsb
lcall
jb
repz
leave
int3
adc
sub
clc
ds
rclb
sbb
jecxz
clc
aaa
add
pushf
jp
and
pop
pop
mov
sub
and
adc
add
mov
loope
sub
insb
fwait
in
or
popf
and
inc
and
mov
addb
cli
inc
mov
cld
or
jl
push
mov
std
dec
jne
xor
scas
decl
inc
xor
aad
add
mov
dec
js
inc
add
dec
push
xlat
mov
jle
test
lcall
sub
outsb
push
clc
push
inc
leave
cmc
sub
cwtl
movsb
aas
or
les
mov
push
loopne
cmp
mov
push
inc
cmpsl
stc
pop
ss
lds
pop
fdivr
and
dec
xor
movsb
lahf
sbb
leave
hlt
cmp
xchg
adc
aaa
sbb
je
dec
inc
adc
xorb
jl
cli
pop
xchg
loop
pop
nop
pop
adc
repnz
rclb
imul
ret
rcl
or
outsl
sbbb
ficompl
mov
mov
xlat
icebp
jno
add
push
inc
mov
push
cmp
mov
jp
add
mov
popf
adc
std
fistpll
mov
sahf
in
int
lock
out
pushf
stos
mov
mov
cmpsb
mov
mov
push
mov
andb
or
scas
jg
sub
iret
mov
push
stos
inc
add
mov
fistpll
and
sbb
xchg
and
fcomip
insl
sti
xchg
jno
sar
out
lcall
sub
gs
and
sbb
add
and
sub
aad
fsubrs
sbb
mov
inc
in
outsl
in
lcall
mov
xchg
cmp
movsb
lods
lds
jb
stos
xor
aam
out
lds
jge
mov
dec
jns
push
fcomps
adc
lods
stos
mov
xchg
aaa
inc
notl
and
stos
dec
sub
mov
mov
loopne,pt
or
lds
push
jo
aas
aam
pushf
das
pop
jb
test
nop
and
sbb
ljmp
jl
fcomp
pop
fistpl
inc
ss
xor
push
jmp
dec
notb
sbb
xchg
std
add
mov
jb
cmp
or
xlat
pop
out
jmp
xchg
aad
xchg
cmp
repz
or
sbb
jecxz
cwtl
pop
data16
mov
ret
pop
inc
outsl
cmpsb
pop
pushf
imul
mov
dec
mov
clc
pop
push
jge
push
push
xor
filds
cld
push
js
jb
mov
leave
push
fmuls
repnz
outsb
xchg
inc
and
xchg
scas
xchg
jno
repnz
push
push
sbb
js
sti
mov
outsl
enter
push
jno
sub
aas
fcmovbe
or
ficoml
ret
dec
lods
je
pop
push
xchg
adc
pop
mov
ret
xchg
inc
sbb
mov
jbe
in
xor
outsl
in
xor
xor
inc
pusha
int3
inc
sbb
mov
pop
sbb
cld
lea
pop
aas
aas
nop
cmp
jne
ja
push
pop
clc
fcoml
fld
mov
adc
mov
lea
xor
and
aaa
jnp
dec
or
insb
push
lret
scas
jg
test
inc
pop
sarl
inc
mov
shll
mov
repnz
push
idiv
outsl
cld
lods
sub
nop
jecxz
inc
addl
lea
pop
mov
xchg
dec
ja
test
cmp
ss
and
test
cmp
dec
std
mov
inc
pop
addl
sbb
bound
add
aam
add
fldcw
mov
fisubl
in
mov
lcall
adc
pop
out
ss
push
dec
add
add
sbb
scas
ljmp
in
icebp
inc
xchg
loopne
xchg
scas
es
add
cmpsb
addr16
jecxz
sub
push
stc
add
inc
push
outsl
inc
idivl
pop
nop
rolb
fdivrp
push
incb
dec
lahf
fnstenv
aaa
mov
call
sbb
add
push
leave
jo
aaa
hlt
mov
divb
push
mov
mov
stos
imul
mov
negb
sbb
xor
adc
aam
sarl
lds
jb
inc
mov
jns
lock
push
test
loop
faddl
clc
sbb
mov
imul
cld
scas
js,pn
mov
pop
jno
push
in
jnp
sarb
inc
aas
stc
mov
inc
test
mov
xchg
loop
pop
mov
mov
lods
notb
nop
or
pop
fiaddl
push
test
std
mov
ds
xor
inc
loope
adc
push
in
mov
insl
add
lcall
inc
pop
mov
push
aam
into
pop
fidivs
add
mov
jbe
xor
nop
push
mov
jbe
fbstp
sbb
imul
cmpb
icebp
mov
adc
jno
cwtl
jbe
inc
jmp
inc
mov
mov
cmpsb
clc
imull
mov
jae
adc
mov
cmp
inc
mov
loop
sub
cmp
pop
shll
mov
push
jae
imul
fistpll
dec
ljmp
test
pop
outsl
stos
cmp
mov
es
pop
and
add
fucomi
xor
cmp
push
aaa
bound
jmp
inc
xchg
add
or
pop
pop
xchg
cli
cmp
xchg
insl
sti
icebp
clc
mov
leave
cmp
or
jg
sbb
sub
lret
in
push
inc
loopne
stos
in
addl
and
loope
jp
mov
push
inc
adc
scas
jmp
mov
push
shrl
lret
rcr
mov
push
mov
call
and
or
mov
adc
pop
dec
xor
dec
outsl
sbb
das
push
mov
lea
frstor
lods
mov
leave
scas
decl
or
sti
adc
push
aaa
js
paddd
aam
push
lea
xchg
lahf
clc
outsl
pushf
loop
dec
inc
xor
pusha
adc
les
jg
ds
adc
int
inc
jge
cmp
cld
ffreep
fldenv
inc
xchg
adc
push
lret
mov
push
xor
into
pop
scas
mov
push
or
mov
outsl
mov
and
pop
jmp
or
jnp
push
call
fsub
mov
and
loope
cmpsb
test
loop
sub
outsl
xor
xchg
push
js
aas
pop
or
das
adc
sbb
cmpsb
sahf
add
xchg
push
shlb
push
mov
les
das
push
cmp
pop
fdivrs
cmpsl
sub
lods
push
sub
lods
jae
mov
add
or
mov
ret
fidivs
adc
jno
rcl
jmp
push
sub
adc
mov
fimuls
mov
mov
dec
xor
cli
add
test
mov
dec
popa
test
xorl
test
fbld
xor
scas
pusha
and
dec
or
mov
cli
outsl
xchg
outsb
push
jae
or
std
push
jg
mov
xchg
or
addr16
ffreep
pop
faddl
adc
addr16
mov
in
imul
pop
xor
xchg
shlb
call
inc
mov
or
lret
es
dec
jl
loopne
je
cmp
jle
adc
dec
pusha
push
add
rorl
cs
cmpsb
push
call
jae
test
shll
icebp
nop
enter
or
leave
xchg
mov
or
mov
and
sbb
jbe
dec
sub
cmp
cmpsb
mov
xor
mov
mov
shlb
pop
add
out
and
adc
or
dec
lret
scas
mov
aaa
aam
mov
xchg
xor
sbb
lret
push
or
xchg
stc
mov
sub
sub
or
iret
outsb
in
call
pop
int
mov
and
out
push
das
inc
jae
cmp
fbld
mov
loopne,pt
mov
xchg
popf
mov
loope,pn
icebp
mov
xchg
popf
ds
sbb
mov
mov
jg
jg
ret
jle
push
inc
gs
call
popa
rcll
or
imull
clc
push
jno
cmpsl
lock
cmp
jmp
ss
mov
out
mov
out
fbstp
iret
imul
xor
jp
sbb
imul
shrb
inc
clc
jg
ret
fdivl
hlt
sub
or
lahf
mov
add
mov
push
xchg
lea
cmp
mov
fisubrs
cmp
xchg
fs
mov
sbb
es
push
ljmp
push
mov
mov
or
jge
lcall
movsb
nop
cmp
mov
incb
popf
jne
jecxz
lods
pop
jmp
pop
dec
shlb
dec
pop
lret
xor
push
xor
js
dec
mov
xchg
addr16
cmp
je
adc
jno
negl
ja
les
shlb
aaa
or
insl
popa
lock
and
addr16
jae
ja
stos
cs
in
ror
adc
mov
adc
push
mov
push
add
sarl
fisttpll
stos
enter
in
cmpl
jno
outsb
lcall
cld
sar
rorl
test
mov
jge
scas
test
lcall
sbb
push
rclb
inc
adc
mov
in
cmpsl
mov
push
loope
clc
fists
es
repz
ds
aam
andl
aaa
nop
mov
inc
test
add
stc
mov
rolb
jo
push
and
add
xchg
ljmp
loop
fnsave
js
mov
and
cmp
addr16
add
fimull
adc
mov
add
and
dec
mov
sbb
je
mov
inc
inc
push
pop
mov
jb
or
add
test
inc
cli
xchg
call
ja
sbb
cmpsb
and
mov
add
hlt
mov
fstp
mov
push
decb
ljmp
push
pop
fimuls
sub
mov
add
int3
rol
sub
cmp
aaa
pop
jmp
cmp
xor
mov
or
hlt
jb
inc
call
dec
nop
in
push
mov
aad
bound
fildll
lret
dec
jne
in
es
lcall
andl
pop
adc
push
mov
enter
xchg
inc
cltd
mov
sub
jbe
xor
negl
or
bound
sub
jo
sbb
sahf
mov
pushl
or
testb
mov
add
call
addl
call
jp
in
mov
fsubs
pop
lcall
and
int3
pop
lods
xor
fwait
cmpsb
imul
mov
mov
rcll
add
xchg
xchg
dec
jo
out
or
lds
lock
inc
outsb
pop
cmp
sahf
mov
call
fdivrl
leave
adc
out
aas
jmp
mov
xor
clc
pop
cmp
mulb
aaa
jg
xchg
in
add
scas
adc
je
je
out
jo
dec
je
hlt
sub
mov
aam
push
outsb
test
add
leave
xchg
icebp
adc
dec
rcrl
call
filds
cli
adc
push
dec
mov
decb
out
push
push
add
rcrl
push
fwait
and
leave
nop
add
dec
add
gs
and
add
jb
xor
sbb
icebp
sbb
lcall
adc
das
mov
mull
vmwrite
in
mov
ret
lock
mull
xchg
adc
shl
in
mov
adc
xor
cltd
push
out
clc
aaa
icebp
mov
test
test
jmp
fwait
mov
sbb
fucom
dec
addb
jmp
xorl
andl
cmp
lods
cs
cli
and
mov
dec
push
xchg
sub
and
fsubrl
movsb
push
mov
call
push
pop
test
bound
mov
icebp
mov
call
jae
pop
xor
mov
sbb
cmpsl
or
inc
push
or
mov
pusha
aas
movsl
out
xor
lret
fs
push
or
je
pop
clc
inc
das
xor
loope
rclb
call
cmpsb
outsb
or
jge
sbb
insl
mov
xorb
fcomps
add
std
nop
xchg
test
mov
pop
sbb
loop
inc
imul
pushf
mov
and
pop
scas
fisttpll
outsb
jl
mov
mov
je
loope
xchg
push
and
jge
mov
sbb
shll
or
decl
test
enter
sahf
mov
mov
pop
aaa
inc
sbb
int
bound
sar
pushl
inc
push
pushf
pop
movsl
fiadds
out
mov
jg
loopne
or
fwait
jg
sub
mov
sbb
sbb
pop
adc
jns
adc
test
xchg
add
pop
cli
inc
out
push
loop
xchg
xchg
jl
mov
popa
pusha
mov
mov
daa
or
in
xchg
cwtl
and
adc
ret
dec
fbld
fdivrs
in
mul
and
or
pop
scas
push
sbbb
jmp
rorl
add
lods
lods
loope
loope
inc
cs
lock
or
hlt
cmp
or
adc
lock
sub
sub
dec
jge
jbe
add
faddl
mov
fiadds
jle
test
call
pop
jae
mov
rorl
mov
cmp
aaa
xchg
jne
clc
sub
push
test
xor
mov
push
movsl
adc
push
adcb
push
dec
lcall
ljmp
andb
mov
cmp
filds
lods
es
icebp
jle
fnstsw
add
sti
mov
sbb
ljmp
leave
xchg
fstp
inc
or
cmpl
dec
repz
movsl
shl
sub
mov
and
xor
mov
dec
arpl
nop
sar
and
adc
sbb
jbe
fcomi
add
push
mov
xchg
or
outsl
ud0
rorb
out
dec
mov
testb
lods
pushl
fists
cmpsl
das
inc
jge
adc
popa
xchg
or
arpl
jmp
aaa
filds
or
clc
aas
push
push
xorl
pop
sub
icebp
push
arpl
das
in
mov
fwait
xchg
xor
and
jmp
call
inc
leave
or
add
push
addr16
aad
push
xchg
icebp
mov
xchg
pop
pop
lods
cmp
mov
rol
in
mov
cmc
xchg
lret
xor
push
jno
add
cmpsl
jb
je
pop
cs
fwait
aad
add
outsb
pop
mov
ret
xor
jecxz
lahf
test
sbb
xor
in
xor
sub
divl
cld
push
lods
inc
push
test
push
jmp
lods
mov
enter
leave
pop
sbb
inc
std
or
fbld
add
popa
or
inc
mov
xor
ret
and
and
nopl
jle
jp
and
cli
mov
ret
push
das
lret
lcall
clc
mov
dec
xchg
xchg
mov
mov
fnstcw
lea
outsl
mov
and
sub
mov
sub
fists
or
or
mov
ret
or
push
std
call
cltd
fwait
test
cld
insl
enter
dec
icebp
shl
mov
fistpll
fbstp
mov
cmc
movsb
mov
fistps
ret
push
mov
ret
addl
push
sub
clc
fadds
mov
sub
mov
int3
cltd
popf
cmp
lahf
push
in
in
inc
lcall
jns
ror
pop
cmpsb
adc
or
mov
jns
pop
push
call
inc
aad
sbb
cmpsb
jecxz
aad
mov
jle
push
pusha
test
lds
call
mov
sub
arpl
imul
xchg
jg
adc
push
or
test
mov
sti
push
sub
movsb
sub
lods
dec
cmc
jbe
xchg
and
aad
outsb
insb
roll
rclb
outsb
adc
inc
outsl
add
mov
xor
fsub
orb
ficoms
lret
xor
and
out
xchg
jbe
incl
inc
dec
xchg
ljmp
cmc
ljmp
and
icebp
pop
add
and
pop
into
mov
jb
insl
cld
call
daa
or
cltd
lods
mov
adc
adc
popa
push
adc
mov
fbld
adc
popa
adc
clc
jg
fs
inc
add
mov
loopne
aas
cmp
mov
mov
dec
dec
sbb
cmc
sbb
adc
mov
out
jg
dec
movsl
bound
lahf
mov
push
push
daa
mov
bound
ja
adc
mov
repz
dec
mov
js
inc
out
dec
mov
test
mov
into
xchg
adc
fsub
std
mov
inc
or
adc
outsl
inc
ret
scas
cmp
notl
push
and
xchg
les
movsb
adc
dec
add
inc
call
add
adc
fcmovb
ffree
int
popl
mov
test
hlt
sbb
jno
mov
roll
fstpt
xor
xchg
sbb
in
sbb
fwait
mov
rorb
mov
adc
lret
add
sub
cmpsb
inc
fildl
test
mov
vmovlps
dec
lds
and
mov
call
lret
pop
push
clc
sar
in
vpunpcklwd
bound
add
jge
cmp
jge
aas
leave
in
mov
sbb
std
pop
insl
mov
pop
pop
sbb
xor
dec
lods
fchs
ljmp
mov
in
outsb
aaa
rcrb
or
inc
fbld
out
das
nop
mov
mov
sub
sbb
fiadds
adc
addr16
jb
popa
incb
in
movsb
in
lods
lret
jg
out
xchg
aas
push
pop
into
push
fcompl
test
ds
hlt
fists
or
cld
lods
add
ret
mov
add
test
lock
mov
andb
pop
xchg
pop
adc
lods
pop
iret
repz
xchg
mov
out
dec
or
scas
ja
xchg
cs
xlat
or
fwait
movsl
pop
lds
sbb
pop
sub
sbb
jmp
push
push
fs
cmc
push
rcrl
push
mov
insb
inc
shrl
push
lret
iret
lret
or
outsb
cmpsb
cwtl
lods
push
jp
inc
stc
xchg
and
fistl
les
push
jmp
addr16
xor
inc
int
lods
lret
das
insl
fcmovnu
stc
cs
mov
aam
mov
jl
mov
mov
jp
sbbb
in
jo
stc
ss
mov
lahf
mov
je
mov
int
rep
rcrl
pop
jg
adc
dec
dec
test
jge
and
test
xchg
jg
mov
in
sub
jg
mov
ds
je
jnp
imul
je
sub
outsl
leave
jb
pop
clc
ja
pusha
aas
sbb
cmp
test
pop
fcomps
outsl
and
mov
mov
lahf
bnd
add
push
imul
mov
pushf
add
mov
stc
out
fidivrl
add
jnp
xor
stos
clc
mov
rcrb
aas
sbb
sbb
mov
test
stos
lret
pop
call
lret
add
push
adc
push
or
and
das
xor
test
mov
xchg
ret
jns
mov
mov
or
aad
adc
clc
mov
xchg
sbb
pushf
inc
xchg
neg
push
or
push
cmp
outsl
mov
ret
jg
push
outsb
jg
in
sub
lock
and
inc
mov
gs
add
cmp
lods
pusha
aaa
lock
roll
sti
jo
ljmp
ret
pop
mov
mov
jmp
or
add
push
mov
dec
cmpsl
xor
push
xor
lea
push
sub
ds
push
pushf
xchg
fdivrp
popa
test
inc
lock
js
cmp
add
pop
jbe
jl
aad
ret
fcompl
cli
mov
lods
std
imul
add
outsb
xor
mov
lock
es
repz
inc
imul
add
mov
mov
lock
jg
in
pusha
mov
mov
pop
adc
cwtl
mov
mov
stc
sbb
inc
sbb
icebp
xchg
dec
sub
push
push
mov
imul
arpl
cmp
inc
add
jmp
cmp
and
sub
fisubrs
sub
inc
adc
pop
adc
ret
mov
imul
fcompl
lea
push
cwtl
cmp
inc
push
add
fldl
ret
mov
fidivl
adc
es
ret
loopne
add
jb
fmulp
inc
sahf
dec
ss
xchg
xchg
jo
fadd
icebp
jg
and
xadd
adc
dec
test
subb
mov
lods
mov
push
mov
lcall
mov
mov
adc
pop
cltd
sub
les
inc
mov
fimull
in
jo
arpl
jmp
lcall
aam
mov
cwtl
das
jbe
aad
sbb
in
xor
fstl
xchg
add
mov
incl
bnd
and
pop
dec
stos
pop
cld
pop
sbb
hlt
jb
mov
sbb
aam
pusha
or
ljmp
and
aad
jg
mov
push
popf
fisttpl
mov
push
clc
jmp
clc
loope
inc
xor
add
sub
push
inc
xor
outsb
fdivr
jmp
mov
pop
xor
pop
cmp
fbstp
adc
xchg
xchg
imul
xor
in
pop
cld
jmp
cltd
or
and
pop
call
hlt
jmp
addr16
sbb
mov
adc
mov
bound
jmp
lods
bound
test
xchg
pushf
jg
add
pop
pop
xor
lret
sbb
test
insb
mov
les
outsl
pop
xor
jmpw
inc
pop
sub
jle,pn
mov
std
stc
movsb
push
jg
lock
dec
sbb
and
lea
loopne
inc
andb
ficoms
lret
push
xchg
loope
mov
or
clc
dec
dec
mov
iret
lahf
loope
xor
adc
jmp
inc
nop
loope
insl
jl
adc
fsubl
ret
inc
adc
faddl
inc
sahf
roll
lods
shll
sahf
inc
inc
pop
aam
sbb
or
movl
loop
dec
mov
jo
xor
iret
mov
ds
je
add
or
xchg
sbb
sub
mov
lar
dec
fldl
adc
lods
jg
xchg
arpl
and
sti
mov
xchg
clc
pop
add
ss
arpl
xchg
sbb
xorl
aad
xor
mov
add
pop
mov
mov
fisubrl
cli
push
arpl
scas
lds
push
mov
stos
sub
xor
push
fsts
sbb
sbb
and
out
nop
mov
add
scas
mov
cmc
lcall
cmc
and
mov
data16
add
stos
push
or
stc
das
sub
sub
movsl
adc
xor
inc
loop
gs
call
or
push
icebp
inc
inc
shr
jb
pop
inc
pop
pop
scas
mov
mov
sub
mov
push
dec
in
jb
cs
in
stc
adc
das
mov
mov
inc
repz
xor
jo
push
fbld
dec
insb
sbb
dec
fistps
mov
adc
dec
adc
jmp
cs
push
pop
pop
sbb
mov
push
push
mov
in
sbb
jo
in
lock
addr16
fsubs
ljmp
clc
clc
call
or
in
adc
sti
xchg
pusha
sbb
lcall
xchg
dec
and
cli
lret
push
lock
inc
insb
hlt
mov
jnp
cmp
mov
aad
test
mov
nop
lahf
adc
jns
pushl
out
adc
adc
add
push
cmpb
aas
dec
jo
push
xor
sub
pop
jl
adc
pusha
sarl
outsl
jno
mov
cmpsl
shll
dec
cmc
xchg
xor
inc
mov
and
test
xlat
jmp
and
mov
testl
testl
mov
jnp
mov
sub
xchg
test
outsl
lock
add
imul
clc
ljmp
daa
or
sbb
loope
pop
and
mov
sarl
cmc
shrb
jg
jp
dec
xor
dec
loopne
jmp
insb
mov
shr
mov
dec
dec
insb
pop
loopne
jne
xchg
inc
and
gs
jp
mov
dec
cmp
xor
mov
xchg
sub
pusha
add
jns
sub
orl
adc
in
pop
enter
mov
pop
ret
lock
leave
daa
push
adc
test
and
push
rolb
cwtl
adc
jecxz
sub
xor
lods
aas
jecxz
and
xor
lods
test
test
and
leave
fstp
jle
sub
add
or
ret
ficompl
dec
lret
add
in
mov
dec
adc
xchg
mov
xchg
jp
in
sbb
sub
js
int
inc
and
add
add
mov
in
jmp
lea
or
inc
xor
std
mov
fadd
fwait
cmp
xchg
ja
ja
xor
dec
sub
fistps
das
cmp
xchg
aam
push
ret
out
and
lods
mov
es
cltd
in
imul
jmp
jmp
and
gs
push
ljmp
das
dec
mov
pop
mov
out
repnz
outsl
sub
sub
mov
and
cwtl
dec
ja
mov
pop
sub
hlt
push
std
adc
bound
dec
adc
dec
pop
outsb
mov
cwtl
adc
mov
pushf
dec
mov
sbb
adc
call
cli
sbb
push
cmp
fldt
pop
mov
cmp
outsl
lret
cmpsl
aaa
or
sbb
push
test
and
out
add
push
in
push
std
jge
inc
xchg
int
sub
push
adc
push
ret
dec
adc
jmp
sahf
out
loope
jp
dec
fwait
mov
jmp
or
jbe
in
popf
subb
inc
stos
adc
loop
pop
rclb
jne
push
imul
stc
xor
aam
xchg
fistpl
dec
std
jnp
sbb
xlat
mov
sti
scas
repz
pop
cli
ret
xor
stos
mov
or
rolb
data16
jle
pop
js
loop
sbb
xchg
stos
lea
lahf
push
cwtl
jbe
jg
in
sub
dec
lock
loop
inc
sub
jl
mov
mov
sti
sub
pushl
inc
addl
std
or
fldl
fidivs
and
xor
add
fdivl
push
cmp
lods
push
lock
mov
div
lods
mov
and
push
scas
dec
jl
cli
or
jb
lods
int3
add
cmpsl
les
mov
inc
outsl
cmp
push
rorl
aaa
push
xchg
fildl
dec
add
aad
notl
std
pop
arpl
sbb
jae
int3
add
jle
stc
bnd
jg
insb
cmc
out
add
loopne
mov
jbe
mov
xlat
add
add
popf
mov
adc
jl
out
iret
fisttps
add
xchg
jne
push
cmc
fadds
jns
pop
inc
jg
outsl
orl
cli
jecxz
xor
loopne
rclb
or
xchg
adc
test
cmpsb
add
insl
test
dec
negl
xlat
aas
icebp
pop
ljmp
pop
pop
mov
inc
fwait
notl
loope
or
add
mov
jae
xchg
push
xchg
mov
mov
mov
sbb
aam
pop
xchg
lods
adc
mov
mov
jecxz
ja
and
push
ds
jg
mov
or
mov
pushl
add
daa
jmp
ss
pop
and
push
or
and
rcrb
xchg
add
xor
fists
mov
inc
je
lock
decl
cwtl
dec
adc
aad
cmpsb
out
push
jb
mov
or
jnp
addb
shll
lcall
dec
or
lret
sub
jns
in
cs
xchg
adc
or
push
sti
jmp
xor
je
outsl
loope
and
enter
push
mov
cmpsb
jno
test
push
mov
jmp
lcall
dec
inc
rcrl
pushf
fwait
popf
lea
ds
dec
jl
fnsave
sbb
and
rclb
mov
imul
lahf
sbb
xor
push
ljmp
and
jb
xor
sbb
jecxz
popf
push
or
xor
jg
rcr
xchg
movsb
lcall
jo
jbe
pop
fdiv
cmp
aam
mov
xchg
mov
push
repz
loope
mov
dec
gs
mov
stos
mov
push
in
pop
mov
mov
daa
inc
xorl
mov
cli
mov
test
cmpb
into
or
sarb
sbb
jp
sbb
scas
pop
cmpsl
ret
test
mov
adc
dec
adc
stos
out
xor
cmc
mov
mov
aas
push
xor
test
loop
lods
add
movsb
test
and
push
clc
jmp
je
fwait
inc
cmp
xchg
inc
aad
adc
sub
mov
rcl
cmp
arpl
stc
stos
enter
adc
mov
push
mov
or
jle
lret
dec
adc
cmc
dec
testb
test
test
pop
cli
test
bound
ficomps
aaa
insl
out
dec
xchg
and
adc
rolb
sti
pop
mov
ds
aam
sbb
pop
pop
mov
mov
mov
ret
mov
pop
push
ret
lret
outsb
jge
mov
sub
orl
jo
decb
das
push
pop
std
dec
je
push
or
pop
mov
in
sbb
and
outsb
loopne
popf
and
jg
into
rclb
je
addr16
movsl
adc
loop
fbstp
and
jmp
xlat
in
or
sbb
nop
inc
inc
inc
inc
jo
mov
ret
test
sbbb
mov
pop
cmpsb
icebp
movsl
in
out
xchg
imul
jg
mov
and
popa
rol
add
sbb
fsubr
cmpb
cltd
loop
adc
mov
inc
lret
adc
cmp
es
cwtl
data16
push
lahf
mov
enter
and
jl
xchg
lock
xchg
gs
out
and
adc
rorb
ja
pop
fnstsw
dec
into
sub
stos
xchg
aas
push
sahf
add
movd
orb
scas
lock
inc
fsubrp
xchg
mov
cmp
pop
xor
insb
xor
in
or
sub
push
push
inc
rcrl
dec
sbbb
das
jno
fimull
xchg
scas
dec
bound
sbb
sbb
out
and
pop
and
jae
add
int
push
popf
xchg
xor
movsl
loop
movsl
adc
in
pusha
or
pop
push
pop
icebp
dec
fsubl
ljmp
aad
adc
outsb
cmpsb
push
fcomi
xor
and
mov
sbb
xor
or
test
and
aam
fimuls
mov
mov
xor
mov
sti
mov
pop
pop
dec
aam
pop
fsubrl
mov
test
xchg
inc
pop
xor
in
stc
pop
pop
arpl
sbb
jno
das
icebp
sbb
pop
sub
cmp
xor
adc
pushf
jecxz
pop
mov
jnp
inc
xor
inc
or
cmp
int3
ret
out
nop
pushf
arpl
jg
push
mov
pop
cwtl
dec
jno
jo
jmp
mov
xor
into
fnstenv
mov
xor
lahf
mov
movsb
inc
push
scas
sbb
fistl
aas
adc
inc
cmpsl
push
out
and
loop
int
or
repz
sub
pop
mov
lock
sti
adc
popa
xchg
shll
shll
jmp
cmc
jbe
cli
sub
jns
adc
xchg
xchg
jge
jae
pop
xchg
outsb
insl
add
lea
movsl
jecxz
jo
lock
push
adc
pop
mov
stos
jle
pushf
push
lahf
ficomps
addl
xchg
ss
mov
cli
mov
js
ret
stos
mov
push
pop
test
jge
mov
repz
std
sahf
rcrb
and
and
mov
push
mov
rcrb
dec
fcmovnu
xchg
sub
aas
pop
xor
xlat
cmpb
test
add
cs
or
push
pop
js
or
push
push
add
pop
lock
sbb
and
sbb
xchg
cmpsb
and
lock
push
push
sarb
out
push
loopne
orb
shlb
sbb
cld
popf
and
pop
cmpsb
or
jae
subl
dec
jbe
xor
not
sbb
jle
jge
lods
push
shl
arpl
push
inc
call
dec
in
xor
incb
jae
jno
cld
or
pop
sub
cs
iret
fwait
ss
cmp
adc
stos
mov
pop
aas
fwait
addb
inc
das
mov
or
imul
rcll
test
mov
fidivs
push
mov
fmuls
insb
cld
mov
idivb
inc
add
sbb
mov
pop
mov
dec
xchg
add
mov
test
sbb
pop
in
fistpll
rorl
cmpsb
add
jo
test
test
imul
outsl
js
daa
mov
xchg
xchg
pop
loopne
lods
jns
or
push
movsl
push
xchg
push
lods
xchg
stc
inc
loop
lcall
add
sbb
mov
ljmp
ds
mov
rcll
mov
push
clc
xor
xchg
mov
mov
cmp
cs
lock
or
mov
aaa
je
jne
xchg
iret
jb
dec
lods
pop
aaa
cs
pop
rorl
xor
adc
add
insb
imul
call
inc
imul
jge,pn
test
test
xor
lret
adc
jb
push
mov
icebp
push
sbb
test
les
sub
mov
int3
loope
test
imull
mov
sub
dec
xchg
cli
in
pop
xchg
psubusb
cld
iret
repz
mov
loope
out
push
push
fsts
cmp
inc
in
mov
das
dec
and
cmp
jo
in
or
jnp
and
sbb
inc
xor
dec
push
adc
outsb
rcll
and
sbb
rcrl
fimull
mov
subb
lock
add
into
fcomp
mov
shlb
ret
cltd
je
inc
clc
stc
fdivrl
jle
xchg
imul
popa
dec
aam
sbb
rol
cs
inc
insl
inc
dec
fmuls
pushf
adc
sub
inc
lret
js
adc
int3
dec
xchg
sti
repnz
add
fistps
cmpsb
mov
sub
mov
mov
mov
jecxz
add
je
push
je
pop
orl
incl
pushl
test
dec
cmp
mov
cmp
cmpsb
sbb
pop
es
arpl
mov
insl
test
jle
ds
in
stos
mov
mov
mov
out
sub
jns
and
adc
jae
insb
das
cmp
call
adcb
xchg
outsl
insl
bound
dec
inc
xchg
cltd
inc
add
pop
sbb
jne
jg
jne
cmpsb
cmpsb
clc
xchg
testb
and
adc
std
mov
lea
sbbb
mov
incb
js
pop
xchg
mov
jnp
sbb
rcl
or
sub
out
lcall
and
or
inc
pop
add
pop
std
push
xor
xchg
mov
insl
push
cmp
cli
jns
in
inc
out
push
enter
jno
push
fistpl
and
mov
insb
pop
scas
ficoml
fistpll
imulb
xchg
sub
pusha
mov
xchg
dec
add
clc
int
js
push
pop
jmp
mov
sbb
cmpsl
adc
xchg
bound
insl
int3
push
test
leave
les
loope
clc
dec
jae
iret
xchg
pop
inc
aam
pop
movsl
das
cmp
mov
loop
mov
adc
std
sub
dec
lock
ljmp
push
cwtl
or
cmp
cmp
fsubrs
lahf
xchg
and
test
lahf
inc
dec
adc
icebp
jb
insl
lock
add
aaa
rep
xchg
shl
lods
inc
or
mov
cmp
fsubrs
sub
insb
push
xchg
mov
pop
push
lods
aad
pop
lock
ljmp
out
cmc
in
pushf
sub
sbbl
xlat
sahf
mov
dec
inc
push
jg
subb
jp
cmp
sub
push
mov
pop
add
xor
test
lock
ficomps
sub
scas
push
js
fisubrs
inc
icebp
leave
mov
fildl
mov
sbb
cmpb
sub
jmp
repz
push
pop
iret
icebp
adc
add
sbb
pusha
jnp
test
cmp
dec
xor
dec
fisttpl
xor
in
cmp
push
adc
pop
xchg
jge
aad
test
mov
xor
mov
movsb
icebp
dec
mov
sbb
mov
adc
out
testb
sub
sbb
test
test
sbb
fucomip
mov
jle
cmp
push
fsubrl
aaa
mov
sub
popf
add
xchg
adc
xchg
mov
pop
xchg
pusha
jb
es
jp
ficomps
cld
mov
fstpt
fmuls
or
int
out
andl
dec
add
push
cmp
loopne
jge
es
or
nop
lcall
and
in
mov
ja
xchg
xor
sbb
mov
clc
jl
push
mov
mov
or
add
jmp
or
aad
data16
enter
sbb
shrl
aaa
rcrl
popf
js
lock
mov
add
sbb
xchg
scas
jmp
nop
cwtl
and
add
ja
imul
jg
shrl
es
push
in
call
mov
test
in
aaa
mov
push
sub
stos
pop
stos
fists
xor
fimuls
int3
scas
adc
scas
cli
mov
cwtl
add
shll
sbb
fldcw
js
cmpsl
es
jle
jbe
or
sub
inc
scas
fdivrp
mov
sti
mov
jle
and
mov
roll
les
xchg
or
xor
outsl
or
out
and
scas
sbb
stos
add
fisttpl
jns
int3
pop
or
gs
stos
push
rorb
xchg
mov
popa
push
or
fiaddl
aad
fsubrs
cwtl
add
in
sbb
mov
adc
xchg
xchg
out
push
insl
push
pop
push
jnp
fdivrs
fwait
lret
mov
jecxz
scas
gs
mov
add
sbb
inc
add
mov
lea
mov
outsl
mov
fiaddl
loop
xchg
icebp
movb
pop
inc
sbb
std
movsl
xor
hlt
sbb
and
mov
mov
js
sbb
mov
add
push
pop
fwait
sub
mov
xor
xchg
fimull
adc
sbb
jnp
loope
mov
test
xchg
gs
loop
pushf
sub
std
incl
inc
mov
mov
pop
nop
mov
dec
std
movsl
ja
daa
in
sub
test
aad
mov
lret
jbe
push
ret
mov
mov
push
out
daa
sbb
mov
and
jge
dec
jno
sti
xlat
inc
cmp
fs
addr16
push
and
push
xchg
add
mov
or
lock
jo
clc
mov
je
jo
mov
add
sti
adc
shrl
shrb
ret
or
in
lret
fs
or
mov
or
xchg
inc
jno
aaa
pop
mov
clc
xor
aaa
and
pop
js
mov
rcr
or
push
sbb
dec
inc
inc
pop
sub
loopne
icebp
jle
imul
inc
dec
inc
cmp
sbb
or
shll
add
push
push
movsb
ja
mov
subb
or
dec
aas
nop
cmc
in
outsl
dec
xor
idivl
pop
xchg
hlt
pop
int
and
divb
push
jb
loopne
mov
mov
mov
fists
data16
add
cmpsb
mov
lods
addr16
lahf
cmp
pop
lcall
adc
fldcw
clc
lods
stc
cmp
mov
xor
jo
jns
mov
push
cld
outsl
xchg
enter
sub
js
stc
insb
inc
jg
mov
test
pusha
call
stos
clc
lods
ja
cmp
dec
aaa
movsl
inc
inc
and
imul
addl
pop
and
cmp
lss
or
andl
lret
adc
lret
mov
cmpl
rorb
cmpsl
inc
jmp
and
les
fwait
jle
mov
insl
inc
sbb
and
or
scas
sub
mov
push
mov
cmp
jo
jns
mov
bound
fcoms
lahf
pop
push
dec
add
aaa
inc
pop
inc
test
daa
mov
aaa
nop
int
mov
jo
adc
lods
dec
inc
rcrb
dec
jmp
and
outsb
cs
pop
dec
cmp
and
xor
add
jecxz
cmp
and
call
in
add
push
mov
test
or
loopne
int3
adc
adc
mov
push
lcall
jp
mov
xlat
leave
cmp
jmp
xorb
int
adc
pop
push
ss
inc
cmp
jg
maskmovq
pop
ret
sbb
enter
fistpll
pop
gs
lret
data16
push
jne
mov
nop
lods
inc
test
imul
cmp
fs
lock
or
ret
jb
hlt
xchg
pop
lods
cmp
js
filds
sti
xlat
mov
adc
cmpsb
les
mov
xlat
push
es
jne
xchg
shrw
mov
dec
xchg
adc
mov
push
jne
push
xchg
cmpsl
inc
jns
out
mov
cmc
pusha
dec
aaa
jmp
xchg
das
outsl
and
mov
cmpsb
test
inc
sub
fwait
add
and
jne
dec
imul
sahf
dec
pop
and
add
out
cmp
cmpsb
rcrl
sub
fsubrs
mov
or
insl
rclb
push
pop
das
shll
jle
xchg
cltd
sub
jbe
cli
aaa
inc
orl
lcall
jae
clc
leave
cmp
mov
xor
lret
or
fwait
dec
sbb
outsl
cmpb
sub
cmp
hlt
add
xchg
incb
repz
movsb
nop
xor
adc
int
cmpsl
xchg
jno
adc
xchg
xchg
aas
mov
sbb
mov
enter
add
scas
in
in
cmp
push
xlat
subl
xchg
dec
pop
cmp
dec
rcrl
add
mov
lods
in
out
lret
shll
sahf
push
popa
mov
push
xchg
inc
xor
mov
jg
negl
cmpsb
xor
flds
outsl
push
sbb
adc
cmp
ret
mov
cmpl
push
mov
pop
je
mov
mov
inc
jg
mov
stos
pusha
push
clc
pop
enter
cmp
mov
gs
xorl
ljmp
popf
cs
mov
or
sbb
mov
inc
mov
mov
mov
pop
dec
mov
and
mov
xor
insl
mov
jo
mov
pop
imul
xor
arpl
loope
xchg
bound
xchg
jp
repnz
pushf
dec
add
push
push
int
bound
insl
pop
sub
rorb
lret
test
icebp
lods
test
out
cmp
imul
sarl
pop
mov
add
out
sbb
cli
fneni(8087
aam
shrb
mov
push
scas
add
dec
ror
clc
dec
scas
xor
cwtl
dec
jo
das
adc
jns
xor
mov
aam
jle
add
dec
mov
lock
and
mov
lahf
mov
ret
daa
xor
sub
and
mov
add
test
push
and
or
mov
push
cld
jb
xlat
lahf
fwait
jbe
push
aad
inc
in
ret
cmc
stc
pop
rcrb
push
imul
xchg
cmp
or
dec
inc
insl
arpl
lahf
inc
mov
dec
pop
js
pop
adc
sub
jmp
ja
mov
mov
xor
fbstp
loope
scas
xchg
jecxz
cli
pop
sub
mov
fisttpll
adc
aad
jno
cmpsl
dec
jge
sbb
xchg
ret
cmpl
insb
movsl
fstps
lahf
clc
or
mov
inc
lods
insl
pop
mov
cs
inc
sbb
pop
adc
push
inc
jnp
adc
pop
mov
push
hlt
fwait
jle
popa
icebp
iret
sub
stos
xchg
sbb
out
and
in
lea
mov
mov
sti
sub
or
pusha
hlt
pop
pop
xchg
adc
fdivr
pop
loope
push
int3
xchg
and
sarl
xlat
insl
add
test
out
cld
jbe
fcoms
test
cmp
sub
test
fldt
cmp
push
mov
mov
jo
fistpll
or
jo
pop
inc
aaa
push
or
ljmp
jge
push
push
je
pop
mov
adc
movsb
dec
push
cmp
xchg
mov
loopne
adc
in
fsubp
push
out
sbb
fbstp
dec
ds
mov
ljmp
outsl
mov
mov
pusha
push
clc
pop
mov
push
mov
mov
add
in
loope
push
mov
push
jge
cmpsb
ss
shlb
testl
sub
mov
lock
les
sbb
xor
add
pusha
loop
mov
and
sbb
nop
mov
in
cmpb
dec
mov
cld
xchg
xchg
mov
enter
pop
lods
xor
cli
data16
jmp
in
stos
adcb
mov
xchg
iret
xchg
mov
pop
pusha
pop
mov
ss
jae
fistpl
outsb
mov
ficompl
out
mov
xor
add
push
ljmp
lea
mov
dec
scas
out
aaa
or
testb
pop
cmp
ss
sbb
mov
into
jecxz
cmp
cld
xchg
mov
ficompl
es
insl
lahf
xchg
rolb
cs
adc
lret
nop
repnz
ds
outsb
adc
xor
repnz
ljmp
mov
iret
mov
les
and
jmp
xchg
adc
adc
sub
arpl
jecxz
cmp
mov
mov
lcall
in
data16
pop
push
hlt
and
fwait
pop
add
adc
popf
inc
das
sbb
or
push
decl
mov
repz
or
das
pushf
insb
pushl
stos
nop
xor
or
icebp
or
jmp
lret
and
comiss
push
into
ret
inc
pop
mov
inc
jmp
ficompl
adc
jp
ds
mov
sub
mov
jl
ret
cmpsl
lods
stos
or
xchg
inc
loope
call
sbb
xor
mov
loope
ret
test
cli
sbb
cltd
or
cmpl
repnz
ss
lcall
int3
pop
nop
jle
fcomip
add
or
rcr
add
pop
movsl
cmp
adc
mov
insl
or
insl
std
aas
scas
call
test
add
and
lods
add
adc
lock
imul
nop
in
sub
lock
pushw
push
ljmp
outsl
mov
aam
adc
mov
adc
icebp
fcoms
cmp
shrl
fildl
out
mov
mov
ss
inc
lods
mov
lods
outsb
add
scas
and
jg
xor
add
test
movsb
loop
add
xor
mov
fs
orl
ljmp
pop
xor
in
stos
cmpsb
jmp
fmull
mov
adc
popf
sti
dec
pop
mov
in
mov
and
es
inc
xorb
idiv
sbb
jb
mov
popf
pop
sbb
lret
fistl
push
std
aaa
push
stos
popa
cmpsl
fwait
mov
imul
pushl
xchg
or
and
mov
mov
xchg
subb
jge
outsb
std
xchg
dec
mov
aas
xor
insb
sbb
notb
xlat
inc
fwait
push
xor
dec
scas
loopne
fistps
sub
cmp
aad
inc
mov
addr16
jge
adc
sub
aad
pop
or
mov
xlat
sbb
mov
jg
cs
or
idivb
xchg
test
flds
cld
dec
ret
mov
arpl
aam
sub
mov
dec
jnp
sub
fisttpll
repz
mov
hlt
shr
scas
iret
stos
mov
xor
popl
mov
pushf
jge
gs
rcr
pop
xchg
mov
mov
les
mov
lret
loope
out
movsb
lret
and
add
into
lds
cmp
jne
movsl
adc
cmc
mov
call
mov
imul
outsb
andl
gs
rolb
loop
xchg
pop
xchg
das
mov
cld
mov
rcll
jp
out
outsl
cld
cli
cmp
pop
mov
dec
jl
adc
cmpsb
dec
jge
adc
add
lcall
pop
mov
or
pop
mov
xor
jmp
cmp
pushf
js
push
push
add
lock
out
cmp
mov
loope
jne
loope
dec
leave
mov
andb
push
jmp
xchg
sbb
orl
in
xor
dec
push
es
or
add
add
add
jns
and
mov
daa
sbb
push
mov
outsl
xchg
mov
jmp
push
sbb
ficoml
jl
adc
or
pusha
jnp
push
mov
nop
pusha
inc
aaa
inc
mov
cmp
pop
das
out
nop
test
cmp
push
mov
or
lcall
xchg
jne
ss
pop
jle
and
mov
push
mov
pop
in
cmp
movsl
imul
jo
out
cmp
xchg
insl
and
sbb
ret
dec
push
fmuls
jg
call
pop
pop
xlat
inc
ds
sbb
dec
jmp
xchg
and
xor
sbb
sahf
xchg
pop
jb
test
aas
in
nop
lret
pop
inc
xchg
bound
or
decl
clc
and
jb
dec
icebp
sub
outsl
and
sbb
popa
shl
das
popf
addr16
lds
xor
mov
fldl
inc
or
icebp
stos
sbb
adc
aam
dec
test
mov
shl
and
mov
pusha
xor
cmp
mov
mov
mov
inc
jl
lahf
shl
das
sub
ja
dec
mov
pop
jecxz
inc
dec
jmp
push
ljmp
loop
jbe
sahf
ret
xchg
adc
sbb
pop
mov
push
cmp
ds
xor
in
test
jbe
dec
pop
das
insb
shlb
fadd
add
mov
add
jbe
xchg
popf
loopne
fldt
pop
inc
fisubs
push
sub
jns
xor
ds
push
xchg
mov
push
inc
fisttpll
dec
or
iret
stos
jge
xchg
dec
jmp
scas
daa
push
into
cwtl
fdivr
fildll
movsl
xlat
addr16
and
lahf
test
or
loop
mov
push
sub
filds
inc
mov
and
cli
lods
aam
js
jb
scas
pop
xchg
sbb
dec
ja
mov
push
push
mov
mov
push
insl
insb
push
shl
mov
ljmp
sub
stc
gs
in
stc
outsb
stos
mov
or
sbb
lods
mov
lods
sub
mov
cld
outsl
hlt
sbbl
ss
nop
lods
sub
outsl
in
movsl
scas
sbb
push
inc
imul
sbb
cmpsl
cli
sbb
dec
orb
jp
sbb
int
cli
cmp
aas
jnp
adc
test
mov
sbb
mov
pop
ja
js
out
inc
in
pop
pop
enter
testb
cmpb
test
rol
dec
pop
das
pop
inc
data16
mov
cmpb
adc
pushf
push
xor
add
sahf
lret
mov
in
es
sbb
adc
jge
adc
dec
cmp
adc
pusha
xchg
pop
jle
fildll
aas
xchg
cs
or
cltd
shll
fcomps
int
into
test
outsl
aas
insl
mov
sbb
je
jmp
mov
xor
stos
xor
sbb
dec
mov
outsb
pop
sub
sahf
or
mov
add
inc
scas
pop
sahf
inc
fidivrs
cmc
lcall
xchg
fwait
movsl
push
xor
mov
add
jle
and
data16
mov
mov
aaa
cmpsb
and
call
xor
push
mov
out
out
pop
add
adc
je
sbb
or
ret
and
aad
xchg
or
sub
jae
push
cmp
fstpt
cmp
es
adc
data16
push
loopne
sbb
xor
pop
mov
cmp
inc
xchg
scas
out
jns
outsl
test
mov
enter
inc
lock
sbb
faddl
ret
push
test
inc
lcall
xchg
sbb
cmc
jp
jbe
adc
stc
lock
in
lret
cmp
inc
sbbb
inc
cmp
mov
inc
out
shr
add
fidivrl
cmpsl
pop
js
jne
insl
mov
sbb
inc
shrb
loope
adc
les
sub
stc
mov
lret
outsl
inc
test
jne
mov
imul
mov
jbe
inc
dec
push
int3
mov
push
cwtl
movsl
test
sarb
sub
adcl
pop
cli
ds
adc
sbb
or
fstl
std
fistps
push
sbb
xchg
xchg
fwait
pop
leave
fs
add
cmc
cmpsl
mov
movsb
add
jle
pop
sub
xor
jl
mov
movsl
out
arpl
pop
xchg
sub
int
std
mov
int3
or
push
rcl
jmp
add
fistps
decl
mov
sub
jecxz
outsb
jmp
jne
inc
xor
ljmp
in
js
mov
into
or
clc
adc
divl
rcl
xor
out
xchg
adc
ss
mov
in
jmp
lret
sarb
pop
lahf
inc
adc
mov
lcall
addl
sbb
cli
cmpsb
jno
sub
repnz
shufps
cmpl
jle
push
push
nop
sub
mov
outsl
mov
push
andb
inc
mov
mov
mov
mov
and
add
popa
lds
int3
and
sub
inc
leave
stc
inc
dec
jbe
sub
adc
bound
das
inc
imul
jae
xchg
or
dec
ja
or
rorl
lods
mov
cmp
inc
cld
or
shlb
pop
push
mov
into
subb
bound
pop
addr16
clc
cmp
or
jmp
test
cmc
lock
pusha
loope
rcr
lock
mov
mov
nop
xchg
lahf
lret
test
shrl
ret
dec
fcmovnu
push
mov
add
movsb
movsb
pop
push
stos
adc
es
sbb
pop
mov
insl
dec
and
rcr
add
jne
adc
popf
xor
push
ljmp
iret
jnp
pop
fiadds
jge
shrb
jmp
insb
xchg
adc
push
bound
fisttpll
cmpsb
add
lds
into
int
add
mov
hlt
jmp
popf
xchg
insb
xor
pop
add
iret
adc
jno
sub
in
pusha
dec
adc
xchg
cmc
mov
push
filds
xchg
sbb
cwtl
jmp
call
pop
rorl
fwait
sti
cltd
icebp
inc
cltd
mov
in
fldcw
rclb
std
xor
insl
jge
mov
mov
mov
mov
lock
cmp
mov
pop
pop
jl
addl
add
addr16
jns
cmc
pop
test
push
jge
jp
mov
cli
xchg
mov
xchg
dec
testl
shrl
cmp
daa
pop
xor
add
push
sbb
cmc
sub
enter
insl
inc
imul
call
and
incl
cmp
sbb
xor
and
inc
cmp
dec
scas
movsl
fisubrl
xor
lcall
das
cld
adc
adc
mov
or
lahf
sub
jmp
sarb
lret
mov
and
cmp
push
inc
push
push
scas
and
pop
pop
dec
or
adc
repnz
and
inc
xchg
mov
inc
cmp
inc
push
cmc
push
dec
pop
jns
lock
incl
mov
adc
lods
add
fs
xor
call
dec
pop
cld
lcall
add
mov
rol
lods
clc
jg
adc
push
call
mov
lock
js
mov
add
je
or
push
insb
cmc
inc
pop
rcr
xchg
icebp
jge
or
out
xor
rorb
inc
mov
cmpsb
mov
mov
clc
jb
rclb
mov
add
aaa
push
or
jmp
loopne
popa
mov
sub
idiv
sbb
pop
out
in
mov
xor
mov
mov
add
mov
pop
mov
pop
popa
push
jecxz
push
mov
addr16
lea
sbb
ret
lahf
sbb
fldt
mov
lcall
mulb
sub
adc
ja
rolb
push
and
inc
pop
in
loop
pop
mov
out
aas
scas
jo
xchg
inc
adc
call
scas
and
inc
neg
dec
pop
push
je
xchg
sbb
add
mov
cld
iret
cmp
xor
xchg
fdiv
idivb
sbb
or
sbb
mov
js
xor
mov
sub
cld
shrl
dec
iret
xor
leave
mov
testb
aam
aaa
decb
add
mov
or
test
aaa
call
subl
cmpsb
inc
adc
push
fs
push
xchg
lcall
cmp
repz
jmp
add
xor
mov
lahf
push
js
ss
rorl
jl
sbb
dec
mov
fistpll
add
fwait
inc
push
pushf
orl
xchg
push
push
je
inc
xchg
out
inc
cwtl
loopne
bndstx
jbe
mov
inc
and
sti
mov
xor
jae
loop
sbb
adc
popa
fcomi
cmpb
fildll
lcall
sub
jno
addb
aad
cmpsb
jl
aas
pop
mov
sbb
adc
clc
or
test
sub
jb
orl
jb
jno
insb
imul
icebp
pop
and
gs
inc
fildl
test
or
jb
aaa
adc
stos
mov
dec
lret
or
ja
add
or
in
aaa
clc
jmp
cmp
mov
push
pop
cmpsl
stos
cld
mov
out
add
dec
cmp
cmpsl
test
mov
arpl
mov
in
scas
sahf
push
sbb
push
data16
sti
or
sub
or
dec
loope
xlat
adc
jl
lcall
mov
je
jg
rcll
movsb
sub
mov
push
cmc
call
sub
cmp
cmp
inc
xor
mov
in
push
cmp
in
lret
sub
pop
inc
mov
repz
mov
inc
push
xor
mov
and
adc
mov
cwtl
imul
in
fistps
mov
mov
addl
std
das
shrl
dec
cmc
or
mov
jae
test
lock
ljmp
adc
and
mov
or
in
ucomiss
std
loop
xchg
mov
mov
test
ljmp
sbb
popl
loopne
aaa
andl
jp
test
add
xabort
mov
aaa
enter
xchg
pop
movsb
aaa
sub
test
push
push
cmp
xchg
ja
sub
out
popa
shll
mov
sub
sbb
mov
xchg
testl
dec
inc
ljmp
or
xchg
imul
jne
fcoml
sahf
hlt
inc
mov
idivl
jg
pop
pop
jl
inc
add
nop
rcrb
lcall
or
insb
movsl
fwait
mov
aaa
shrb
movsb
mov
jo
push
lahf
dec
xchg
das
mov
mov
jmp
pushf
cltd
push
and
das
lock
jae
mov
and
rcrl
popf
outsl
jo
dec
arpl
cld
mov
lds
pop
sub
stos
push
or
xor
or
jl
sbb
cwtl
xchg
mov
cmc
int
decl
lret
adc
or
rclb
mov
hlt
sti
mov
ljmp
mov
inc
mov
loope
mov
pop
inc
dec
leave
hlt
movsl
mov
fstpt
cwtl
outsl
mov
and
popf
addr16
sti
popf
xchg
adc
subb
pop
clc
fsubrs
adc
pop
xchg
adc
sub
xchg
mov
jg
mov
jo
push
repz
in
in
ss
push
mov
jo
sub
inc
mov
sub
les
xor
imul
std
outsl
pop
and
cmc
les
sbb
shrl
int
in
pop
mov
in
jb
xchg
and
lcall
aas
xor
cmpsl
jbe
xchg
jns
fdivs
imul
add
imulb
adc
cmc
inc
shlb
inc
add
mov
xchg
cld
jg
sbb
pop
insl
fdivl
lods
imul
mov
sbb
mov
xchg
sbb
inc
pop
mov
rclb
leave
lock
and
xchg
mov
fisubrs
mov
in
pop
inc
xchg
iret
xchg
cltd
movq
cmc
aam
cmpsb
inc
push
mov
aaa
mov
lock
adc
cmpsb
mov
test
inc
hlt
dec
ret
daa
inc
push
aaa
les
xchg
out
mov
pop
test
pop
dec
jne
inc
dec
out
sbb
push
std
cmp
push
xor
or
dec
bound
jg
mov
loop
call
sbb
clc
repz
repz
or
mov
and
into
mov
cs
dec
fmull
lea
repnz
or
cli
adc
inc
or
mov
stos
enter
fistpll
add
push
adc
add
ja
cmp
dec
out
dec
call
scas
jbe
nop
ret
pop
push
and
fdivs
push
lret
icebp
adc
pop
cs
enter
and
cmc
cmp
fwait
add
ret
pop
loope
lahf
icebp
imulb
enter
mov
pop
and
aaa
insb
hlt
mov
inc
lret
dec
cli
mov
mov
pop
push
sub
and
lods
leave
dec
and
das
mov
cli
xchg
mov
sbb
xchg
push
or
jo
test
cmp
repnz
pop
adc
aad
icebp
call
jp
outsb
fwait
sbb
mov
test
mov
sbb
add
pop
jae
mov
std
inc
cmp
xchg
or
mov
inc
or
pusha
rcr
pop
aaa
shl
xchg
cltd
push
filds
insl
fmul
xor
jae
add
push
pop
push
cmc
mov
add
shrl
and
imul
sub
adc
mov
adc
pop
or
cmp
sbb
ss
mov
xor
sbb
fyl2xp1
adc
mov
call
cli
push
sbb
cwtl
xor
push
mov
popf
into
mov
orb
stos
inc
movsb
xorl
scas
push
pop
jg
imull
mov
call
push
loopne
xchg
fimull
push
imul
shll
jo
push
adc
das
js
jle
inc
dec
inc
inc
or
addr16
test
and
sub
sbb
mov
pop
adcl
inc
cltd
push
sub
pop
cmpsb
sbb
iret
das
xor
mov
cmp
sti
lret
fimuls
neg
add
clc
xor
dec
outsl
imul
cmc
call
sub
mov
mov
mov
pop
orl
imul
xor
push
pushl
xchg
inc
cmpsb
subps
inc
daa
xchg
rol
cmp
dec
ljmp
push
scas
mov
cmp
scas
leave
les
dec
or
sub
enter
xchg
ja
fsubs
in
inc
mov
mov
and
jmp
xor
mov
mov
int3
sub
ret
cmp
dec
cmp
add
dec
push
and
lret
test
dec
push
cltd
add
mov
ljmp
add
adc
xchg
adc
lods
fcomps
mov
xchg
xor
addr16
popl
inc
out
test
pop
arpl
shl
sbb
xor
das
mov
outsb
mov
fadds
cli
outsl
loop
insl
lods
cwtl
add
nop
and
and
mov
cmp
leave
int
lods
jmp
jle
sbb
push
adc
add
mov
sbb
in
lea
clc
lods
pop
rcr
push
je
sbb
sbb
mov
fdivl
inc
jmp
sub
std
shlb
dec
xchg
push
roll
mov
sbbl
mov
arpl
dec
fisttpl
pushl
xchg
and
xor
or
mov
jp
and
nop
sub
or
jmp
push
xchg
push
or
test
and
stc
lods
js
jg
cmc
mov
adc
push
pop
cltd
add
mov
adc
test
xor
mov
sbb
pop
pusha
movd
cld
or
cmc
negb
fldenv
insl
mov
incl
pop
jmp
jg
mov
enter
mov
sbb
lea
fildl
fists
es
add
sub
add
pop
xor
aaa
add
adc
xchg
clc
dec
mov
jns
inc
pushl
cli
loope
subb
adc
mov
jge
daa
inc
out
sub
insl
pop
movsb
pop
sub
push
fisubl
lds
andl
call
and
pop
inc
mov
xor
rcll
pop
add
mov
pop
push
adc
add
pusha
das
fnstsw
jb
or
mov
xorb
adc
mov
test
pop
mov
add
add
or
xorl
sub
shrb
mov
sub
dec
sub
sbb
adc
inc
xor
cmpsl
cld
pop
notb
fcoms
jno
sub
lcall
mov
or
xchg
xor
xchg
mov
mov
lea
mov
cld
scas
xchg
negl
dec
or
and
iret
sar
jmp
incl
in
hlt
in
mov
or
pop
js
outsl
push
jns
std
xchg
fidivl
mov
cmc
cmp
pop
jg
imul
clc
das
mov
sub
cli
fldt
push
int3
mov
in
decl
inc
mov
stc
pop
lea
into
mov
adc
and
cltd
mov
cltd
stc
lret
and
call
mov
push
andl
lahf
push
pushf
pop
sahf
mov
js
mov
dec
add
lcall
lods
int
lock
jecxz
or
and
pop
cmp
sbb
incl
inc
push
xor
popf
hlt
mov
add
orl
jne
mov
mov
cltd
pop
fdivs
lcall
sbb
push
add
sbb
xchg
mov
dec
insb
aas
cli
jg
inc
es
lret
add
pop
icebp
push
sub
jo
push
cmc
cmpsl
mov
sub
xor
pushf
test
pop
xchg
sub
arpl
daa
add
jb
push
mov
mov
rcll
lcall
icebp
xor
daa
popf
hlt
mov
mov
adc
push
sub
repz
and
das
in
rorl
jb
cld
outsl
arpl
sbb
cmp
xchg
cmp
pushl
xor
pusha
outsb
in
std
inc
int
adc
clc
mov
ret
fwait
adc
mov
insl
test
push
cmp
stos
jle
cmp
imul
push
leave
inc
adc
and
inc
aad
inc
cmp
jg
dec
mov
fistpll
add
lds
test
adc
mov
lods
xchg
lods
adc
pop
loop
jae
jnp
lcall
aam
inc
lcall
rcr
mov
mov
add
sub
mov
add
xchg
and
adc
mov
cmp
xchg
nop
xchg
and
dec
mov
push
inc
inc
cmp
sti
xchg
lods
xchg
clc
testl
dec
lock
bound
lahf
inc
xchg
or
cld
pop
popf
test
push
xor
push
fdiv
push
push
mov
loop
call
jns
inc
push
or
das
mov
sub
dec
adc
cld
in
xlat
sbb
lcall
inc
jnp
jle
cmp
mov
pop
dec
and
js
mov
xchg
cli
loopne
test
out
repnz
ficomps
xchg
or
mov
mov
xchg
mov
sbb
cmc
and
popa
mov
push
insb
jbe
cli
mov
mov
pop
clc
xor
dec
std
arpl
shrb
mov
lds
lahf
movsl
fbld
xchg
inc
adc
mov
push
xor
push
je
jp
leave
add
test
imul
sbb
scas
call
ljmp
aas
push
adc
sbb
rclb
mov
daa
dec
xor
lret
xor
push
aaa
lahf
sbb
xchg
std
jo
xchg
in
cld
fisttpll
cmc
cmp
aad
fmull
hlt
jg
sub
push
mov
movsl
cmc
mov
shrb
push
inc
push
sub
sbb
sbb
xorb
or
pop
mov
js
sub
in
decl
popa
push
cs
ljmp
inc
mul
or
and
sahf
dec
addr16
ret
stos
mov
int3
icebp
sub
pop
and
push
pop
pop
jmp
push
fsubrs
mov
jle
xlat
ret
pusha
mov
xorb
dec
das
insb
inc
out
insb
pop
fldcw
fs
cmc
in
sbb
or
loope
lahf
sbb
ret
sub
add
sbb
mov
rolb
xchg
adc
je
aam
rcll
mov
movsl
inc
das
jge
xchg
fnsave
enter
mov
or
lcall
add
pusha
add
aaa
cld
aaa
jl
or
imul
int
inc
add
lcall
inc
mov
test
shrl
fdivr
pop
mov
and
fcompl
fnstsw
mov
hlt
js
inc
xorb
shll
inc
std
inc
or
icebp
stos
int3
adc
sbb
mov
imul
clc
repnz
jo,pn
fadds
sub
test
xorl
lret
hlt
pop
dec
loope
mov
inc
add
outsb
out
or
test
mov
add
adc
mov
sbb
jg
pop
lret
jno
scas
sti
enter
inc
and
outsl
clc
dec
mov
les
inc
inc
mov
arpl
lods
inc
fidivrl
jle
movsl
cmpsb
push
les
sbb
sbb
mov
xor
xchg
daa
mov
incl
fdiv
sub
inc
push
push
aas
dec
adc
sub
mov
into
mov
add
in
lods
sub
cli
ret
in
jbe
cmpsb
mov
je
jg
or
pop
or
test
out
cltd
fmull
push
pop
fistl
pop
jo
outsl
loopne
lea
sub
gs
jecxz
jne
and
cwtl
dec
adc
mov
hlt
popf
clc
aaa
sbb
loop
mov
pop
lea
pusha
addr16
outsl
clc
dec
mov
or
or
add
js
mov
mov
inc
xchg
inc
and
inc
mov
hlt
add
mov
in
lahf
xor
pop
add
mov
cli
sbb
push
pusha
push
xorl
decl
fadd
sub
mov
and
ljmp
mov
les
icebp
arpl
ds
cli
hlt
xor
mov
test
movsl
adc
or
push
lcall
push
mov
subb
xor
pop
sbb
lock
jle
inc
xchg
push
fstpl
sub
jecxz
mov
mov
jmp
xor
jg
and
rorb
jnp
cmp
icebp
ret
movsb
dec
std
sbb
popf
stos
jnp
adc
and
jl
aaa
sub
xchg
filds
pop
mov
xor
aam
div
add
in
fwait
mov
ret
ret
cwtl
adc
out
sub
in
enter
fsubl
je
or
push
or
dec
add
outsl
std
push
inc
jmp
std
les
jb
mov
xchg
fisubrl
xchg
and
ljmp
lods
inc
addb
sti
clc
je
push
jns
mov
fwait
movsl
scas
pop
mov
push
lret
dec
aad
cmp
sbb
cmp
fxch
sbb
dec
or
push
xchg
ror
stos
cmp
das
orb
jmp
outsl
addr16
out
pop
adc
pop
mov
in
jnp
cmc
ja
rcrb
mov
movsl
pop
xchg
mov
test
std
loopne
insl
jmp
mov
mov
jb
ficoml
mov
aas
sbb
pop
test
inc
xor
xor
shrb
jbe
inc
mov
push
or
and
xchg
js
dec
out
fs
xchg
popf
loope,pn
aad
fists
loop
sub
sbb
std
sarb
flds
clc
and
adc
scas
and
or
mov
mov
pop
cmpsb
and
push
gs
lcall
outsl
pusha
cmp
and
orb
int3
in
dec
adc
outsl
pop
push
push
ja
pop
mov
ljmp
js
sbb
push
adc
mov
add
or
cmp
mov
mov
scas
push
outsb
mov
mov
out
push
add
fildll
jmp
insl
push
jg
dec
mov
jnp
mov
outsl
pop
jp
scas
es
inc
ljmp
xchg
mov
aad
xlat
out
gs
cmp
fists
cmp
cwtl
sti
enter
mov
mov
cmp
mov
test
int3
mov
xor
dec
and
inc
ficompl
int
push
movsl
pushl
jbe
cwtl
mov
pop
outsb
xlat
mov
lret
test
sbb
adc
daa
push
lods
out
in
mov
adc
test
loope
jne
or
mov
xor
outsl
mov
and
bt
repnz
adc
and
sbb
mov
inc
jo
stos
push
sub
push
daa
ljmp
or
sti
psrlq
mov
fs
adcb
vmovq
mov
inc
outsl
jbe
jp
xor
lret
push
aad
aaa
lret
mov
js
add
or
orl
and
mov
daa
int
std
mov
gs
test
addr16
test
xchg
mov
cli
xor
and
out
test
inc
push
movsl
fwait
or
sbb
int
mov
pop
mov
pop
mov
add
xchg
jg
mov
nop
jp
lret
cmp
aaa
outsb
adc
cmp
push
in
enter
xor
fsubrs
icebp
pop
stc
mov
mov
inc
ljmp
mov
jmp
adc
push
mov
or
fists
loopne
push
sbb
js
icebp
xchg
int3
popf
fcmovb
mov
notb
cmpsl
inc
and
loop
add
loopne
add
add
xchg
jle
add
sbb
shll
inc
jle
sarl
sub
divb
icebp
push
push
cmp
or
dec
aaa
test
mov
add
pop
xor
sbb
or
cmc
insb
cmc
lahf
rclb
xor
loopne
arpl
shrl
mov
pop
call
loop
outsb
jne
push
push
and
push
decl
inc
inc
sbb
pop
fisubrs
rorb
mov
push
outsb
and
xchg
ljmp
jo
mov
xchg
adc
inc
mov
cli
loope
dec
jg
stos
push
rcrb
mov
mov
es
lods
fbstp
mov
inc
jb
nop
dec
inc
sbb
mov
and
sbb
and
ljmp
aaa
out
cmp
push
push
cmp
popf
add
ja
xchg
jmp
aad
sarb
push
add
xchg
add
or
jl
sbb
fnstsw
pop
push
inc
cltd
mov
jo
cmp
push
movsb
and
inc
jo
push
add
inc
orl
and
into
xchg
dec
out
es
pop
and
add
jle
inc
push
test
and
pop
sbb
push
mov
sbb
cmc
cld
adc
mov
int
or
jo
fnstcw
adc
add
loope
and
sbb
fisttps
xchg
out
and
popa
roll
mov
decb
or
inc
mov
inc
mov
cld
outsl
ror
xor
ss
pushf
and
inc
in
cmpps
bound
xchg
inc
shr
mov
pop
push
ljmp
cmpsl
add
push
dec
add
scas
ss
leave
jne
or
xchg
mov
xchg
dec
push
cmpb
push
cmp
sbb
jg
xchg
out
push
mov
pop
add
cltd
jmp
into
std
add
jg
dec
popf
mov
xor
aam
fiadds
cmpsb
sbb
pop
sbb
xchg
push
add
mov
fmuls
in
add
mov
fiadds
inc
cmp
lods
dec
js
and
sbb
in
icebp
pushf
xchg
jg
mov
in
xchg
pop
je
adc
dec
inc
and
outsb
cmp
in
pushf
dec
mov
push
mov
aaa
or
and
mov
ret
xor
dec
adc
aas
sub
mov
ljmp
and
rorl
push
or
test
outsl
call
out
sarl
leave
cmp
shl
xchg
sahf
inc
mov
jno
dec
adc
push
jne
inc
jmp
ret
jecxz
mov
insl
sbb
addb
or
pusha
cli
add
pop
bound
mov
lds
insl
fsts
sub
jae
das
insl
adc
cwtl
or
das
aam
push
fnstsw
push
cmc
scas
jb
scas
sub
std
mov
sub
push
or
lahf
divl
adc
in
hlt
sub
mov
sbb
inc
push
adc
mov
sbb
in
lods
fiaddl
mov
xchg
lea
add
mov
pop
fidivrl
jmp
jo
pop
cmp
fs
movb
jecxz
adc
js
mov
push
inc
push
sub
std
das
aad
add
rcl
pop
xor
and
dec
cmpsb
dec
sub
fsts
inc
insl
push
scas
outsl
icebp
nop
shll
mov
outsl
adc
jb
pop
mov
inc
mov
in
lahf
call
stos
pop
int3
movsb
xchg
jae
adc
clc
jg
pop
nop
mov
and
daa
sub
loop
iret
clc
movsb
adc
and
mov
aaa
stos
mov
inc
nop
cmpxchg
iret
sub
pop
roll
mov
add
sbb
xchg
sbb
pop
cmp
in
testb
sub
lea
fildl
cmc
sahf
out
sub
test
push
insl
aas
mov
pop
push
adc
mov
iret
cmc
repz
pop
jnp
pop
decb
lahf
jno
add
outsl
sub
mov
and
add
ljmp
int3
cmp
sbb
push
lock
outsb
in
ljmp
ret
call
or
dec
in
dec
maxps
add
and
or
xchg
push
or
sub
mov
dec
inc
inc
pop
mov
aaa
sar
test
ret
mov
or
mov
jbe
in
push
in
shll
test
push
ss
lcall
popf
xchg
xor
lock
std
push
aam
adc
in
mov
xlat
loop
inc
shlb
push
test
enter
push
pop
sbb
icebp
xor
mov
int
xor
in
fwait
fbstp
inc
invd
int3
scas
inc
mov
test
test
mov
mov
pop
lret
flds
test
inc
test
cmp
fsubrl
jo
lcall
jge
scas
mov
icebp
dec
std
or
sub
adc
ret
mov
cwtl
and
mov
call
jp
pusha
add
mov
inc
sbb
sbb
rcl
push
mov
mov
sbb
fs
mul
and
icebp
pushl
mov
jnp
sbb
enter
outsl
dec
lods
or
jne
and
and
mov
cwtl
or
dec
pop
mov
pushf
push
icebp
daa
or
cmp
loope
sub
stos
scas
add
imul
icebp
stc
scas
outsb
xchg
inc
push
mov
test
popf
or
sub
insl
ret
test
dec
insl
cmc
or
sub
push
loopne
lds
and
push
adc
cli
js
mulb
adc
mov
sub
xlat
test
push
movsl
loopne
cmp
xlat
jno
call
insb
or
lds
bound
jne
aas
adc
and
xchg
mull
ret
imul
pushf
mov
adc
add
aaa
or
jns
or
not
dec
xlat
test
or
jle
jle
mov
push
mov
in
or
or
or
cli
pop
xchg
lcall
add
mov
mov
mov
xor
dec
lcall
push
adc
and
pop
jns
xor
jg
into
dec
roll
push
pop
sub
sbb
gs
dec
and
add
mov
lcall
xchg
fucomp
ss
gs
sbb
ss
jnp
push
and
fnstsw
les
sti
push
lods
xor
in
push
inc
cmpb
inc
fimuls
mov
push
stos
outsb
iret
pop
push
inc
add
xor
aaa
js
fcomp
incl
aaa
inc
test
lea
jo
aad
mov
in
ret
mov
enter
xchg
paddq
push
int3
mov
mov
rcll
dec
mov
scas
and
dec
adc
mov
les
mov
aad
mov
dec
dec
xor
fstpt
lahf
mov
les
sbb
popf
add
and
mov
xor
and
pop
cmp
cmpb
scas
dec
mov
cli
scas
xchg
pop
ficoml
mov
push
aad
cmpsb
sub
cmp
lea
fdivl
outsl
push
popf
jle
pop
insl
pop
fwait
jmp
lea
and
add
test
adc
les
cs
jmp
or
pushf
xlat
cmc
insl
dec
sub
inc
jae
xor
cmpsl
pop
popa
push
pop
std
push
rcrb
adc
cltd
jg
dec
cmc
dec
stc
xchg
in
pop
xor
and
shll
and
adc
xor
mov
cld
jg
mov
loopne
ja
lret
imul
mov
fmuls
push
leave
dec
sub
dec
stc
call
sub
stos
test
les
std
pop
call
bnd
inc
dec
adc
add
xchg
sub
push
in
mov
xchg
xchg
xchg
outsl
pop
cli
xchg
sbb
mov
lea
rorl
inc
sub
adc
movsb
jle
std
arpl
ret
adc
and
or
mov
in
lcall
or
jg
jle
fcomi
sbb
xchg
loop
pop
mov
arpl
push
insl
push
dec
push
xor
scas
lods
jl
daa
xchg
adc
ds
jmp
pop
mulps
fcomps
cmp
mov
mov
movsl
mov
loop
lods
loope
push
jo
inc
mov
inc
lock
mov
jmp
repz
jle
js
pop
test
nop
or
iret
cmp
push
test
mov
mov
outsl
std
shl
jmp
cmpsb
lcall
fwait
add
rolb
orb
incl
in
xchg
call
test
jp
inc
pop
clc
out
adcb
sbb
jp
stc
inc
add
push
lret
add
insl
jecxz
mov
test
mov
or
icebp
stos
mov
adc
add
ljmp
and
enter
stos
mov
add
leave
outsb
xchg
jmp
ret
push
scas
mov
fwait
lock
cmovp
pop
pop
lock
and
push
lock
push
cwtl
mov
or
add
and
mov
mov
jo
pop
jb
mov
sbb
push
ljmp
into
jnp
js
mov
cmp
popf
ja
nop
pop
je
sbb
sti
lea
pop
lock
dec
adc
jo
or
mov
add
inc
adc
cltd
lds
fldl
add
fistps
ficomps
or
pop
xor
ljmp
mov
aad
lods
icebp
or
mov
mov
mov
mov
mov
icebp
mov
test
imul
shr
cmpsb
outsl
sahf
xchg
cmpsb
enter
push
sti
ljmp
or
jbe
add
loope
leave
push
xchg
cmp
aas
popf
mov
daa
mov
hlt
sub
shl
or
lcall
mov
jae
cmpl
sub
dec
jge
mov
clc
sbb
jmp
add
jno
cmp
lret
aas
lock
push
inc
stos
and
fisubl
sub
push
andl
mov
or
aaa
mov
filds
xchg
push
shll
mov
in
mov
sahf
push
lods
fsubrl
out
sbb
adc
outsl
xor
pop
fwait
int3
ret
and
sub
fwait
cmc
xor
inc
lahf
mov
jmp
push
movsl
addb
loopne
inc
mov
je
mov
and
xor
mov
push
pop
inc
dec
dec
das
cmp
sub
jmp
test
mov
adc
add
adc
mov
sub
outsl
call
push
and
fiaddl
xor
cmp
lea
pop
adc
lock
cmc
clc
js
movsl
fisttps
sub
and
dec
sub
hlt
fbstp
mov
mov
adc
sbb
imul
das
adc
and
out
sbbl
leave
pop
jne
fisubrl
push
sar
incb
mov
rcll
stc
xor
in
inc
inc
test
or
pop
adc
frstor
dec
popf
pop
jne
cli
rorb
or
mov
dec
mov
into
dec
xchg
sbb
or
ret
and
enter
push
sub
lock
cmp
rol
adc
sbb
mov
inc
cld
roll
pop
xor
sub
jnp
cli
movsl
pop
notb
or
es
in
or
and
nop
push
xlat
aas
cmp
adc
pop
xlat
adc
mov
fsubrl
jg
imul
mov
fdivs
jnp
jo
sbb
lahf
jns
pop
por
inc
test
xchg
sbb
test
loope
or
cwtl
pavgw
xorl
cli
lret
rcr
cmp
and
sub
pop
dec
xchg
or
dec
mov
lret
in
mov
shlb
ds
fbld
cmc
xchg
jle
or
push
out
call
mov
or
scas
ss
sbb
addb
add
pop
jecxz
mov
mov
push
add
xchg
loop
lahf
popf
add
cli
pop
ret
pop
out
mov
lods
push
nop
push
add
or
push
test
jae
sarb
adc
jbe
int
dec
xor
ja
ja
bound
push
aad
mov
jae
cmp
ficompl
mov
jp
jne
cmp
mov
or
add
jo
xor
andb
add
outsl
ffreep
mov
or
xor
xchg
adc
cli
ja
lahf
out
mov
dec
aam
sub
inc
add
pop
push
call
loope
adc
add
and
call
sub
call
mov
psubsb
mov
shlb
ss
scas
cmpsl
nop
cmp
inc
orb
and
push
adc
or
dec
inc
xor
mov
std
sbb
xchg
imul
jl
arpl
add
sbb
shrl
addr16
test
mov
sub
sahf
cli
movsl
adc
jns
sub
xchg
test
sbb
xchg
lret
push
pusha
mov
movsb
sub
inc
jne
rcll
rcrl
add
jb
sub
aad
push
iret
sbb
jg
mov
shlb
pusha
and
cmc
inc
notl
in
test
mov
fisubs
mov
jno
sub
adc
aaa
clc
dec
mov
shll
ret
hlt
and
outsb
jne
mov
dec
cwtl
sub
pop
mov
pop
loope
popf
push
test
and
std
or
push
inc
mov
adc
into
and
pop
xor
push
fs
sbb
ljmp
xor
rcr
fisttps
push
or
push
shlb
pop
les
push
add
dec
mov
in
jecxz
nop
leave
sub
sahf
xor
cmp
mov
ret
rcrb
stos
mov
push
jge
xchg
fimull
jns
push
loopne
lods
mov
jecxz
lock
daa
push
fwait
sbb
push
adc
sbb
shll
cmp
test
jecxz
test
std
cs
insl
loope
add
stos
into
inc
adc
inc
test
sahf
pop
or
cmpsl
aam
xlat
cltd
cmp
cmp
fistl
adc
push
lcall
sbb
and
ret
das
imul
xor
sbb
xlat
lock
sub
push
les
pop
xchg
mov
fucom
add
mov
dec
dec
pop
shl
out
dec
pop
loopne
ljmp
add
popf
loope
inc
mov
push
mov
sarl
hlt
pop
dec
jnp
jmp
in
out
sbb
xchg
in
inc
jmp
dec
xchg
test
pop
mov
cmp
ror
cwtl
add
cld
jns
jecxz
aaa
cli
push
push
pop
lods
mov
pusha
mov
neg
outsb
xchg
push
in
cmc
repnz
sahf
pushf
pop
jne
mov
mov
pusha
pmulhuw
dec
mov
or
inc
jle
cs
in
and
ds
sub
call
and
adc
sub
stos
jo
gs
ljmp
mov
xchg
test
cmp
push
inc
in
js
sbb
test
inc
mov
cld
aaa
and
aas
pop
cltd
imul
mov
push
insl
cld
xchg
enter
or
push
jp
mov
movsl
push
mov
or
pop
inc
std
pop
fwait
rcl
dec
xchg
pop
leave
adc
ret
fistl
fisubs
push
or
clc
lods
push
mov
lock
mov
loope
pushf
stc
hlt
test
pop
sub
add
sbb
ljmp
sub
lahf
outsb
push
lods
roll
cmp
lods
jno
inc
lea
lcall
inc
aad
test
sbb
jle
push
mov
imul
js
jle
push
in
xor
pusha
adc
cwtl
sbb
or
mov
sub
jecxz
lcall
adc
xor
and
sbb
xor
in
push
pop
std
mov
cwtl
pop
or
sub
xchg
cmc
filds
pop
loopne
push
ret
pop
shll
cld
mov
mov
lret
sahf
inc
cltd
fistpll
das
jmp
fsubrs
aad
jb
fs
jp
add
or
call
pop
lods
inc
scas
add
cltd
cli
or
mov
jns
rolb
roll
push
cmpsb
sub
outsl
fstpt
fs
imul
fistpll
mov
jns
jmp
inc
lret
and
mov
mov
loope
insl
pop
pop
push
add
adc
sub
sub
popa
jbe
pushl
shll
pushf
xchg
loopne
mov
jmp
ret
jbe
hlt
jmp
or
push
mov
in
into
pop
cmp
mov
jg
movsl
das
pop
xchg
test
and
mov
hlt
mov
stos
push
xrelease
sbb
mov
ret
push
dec
fsubrl
mov
out
out
lcall
aaa
js
cwtl
roll
pop
adc
notb
cwtl
lea
clc
push
stc
cmc
and
sub
adc
mov
sbb
cmp
test
std
std
push
jp
popa
loope
andl
jae
jecxz
test
lods
pushfw
push
mov
mov
imul
mov
orl
add
push
lret
fcoms
push
test
adc
sub
sbb
leave
pop
mov
ret
inc
inc
je
jecxz
pop
mov
pop
push
add
int
ljmp
sti
lds
sti
jge
inc
jae
das
mov
out
mov
cmpsl
or
out
inc
xor
test
jb
pop
pop
outsl
and
pop
sub
xor
sub
add
mov
je
mov
xchg
xchg
decb
mov
mov
scas
add
lret
in
push
and
jp
jg
fs
stc
push
inc
mov
les
mov
cmc
in
leave
jg
cwtl
push
insl
ret
xchg
or
icebp
bnd
imul
pop
pushw
int
push
cld
mov
into
mov
cltd
pop
fcoms
sub
insb
test
bound
loopne
sar
incl
insl
dec
jne
pop
push
mov
out
test
testb
fnstcw
pop
mov
dec
mov
dec
push
add
lcall
repz
ret
mov
shll
push
sub
repnz
das
inc
pop
sti
or
mov
and
sub
push
sub
sbb
inc
nop
pop
sahf
lock
fildl
inc
or
pop
loope
sti
adc
ret
lds
repnz
sbb
xor
insl
mov
sub
pusha
stc
fistpl
mov
imul
mov
sub
std
push
outsl
rcl
xor
repz
call
add
mov
ds
and
cmp
sub
inc
fs
mov
cli
pop
insb
and
hlt
fsubrs
and
and
cmp
add
xchg
imulb
clc
xor
push
lods
pop
loope
fstl
stc
cli
inc
arpl
addr16
lahf
fisttps
outsb
push
and
lahf
mov
cmpb
cmp
loope
aas
data16
pop
out
inc
data16
cmp
idivb
out
int
cmpl
jge
ds
test
cs
dec
std
cmp
nop
popa
mov
incb
shrl
nop
pusha
icebp
in
lea
addr16
idiv
aaa
fisubrs
or
iret
push
jge
jb
and
inc
or
mov
fsubrl
cld
aaa
adc
mov
add
out
scas
mov
add
bound
cld
mov
cld
lret
xchg
std
xchg
fiaddl
xchg
and
test
clc
lcall
test
mov
push
cmc
push
call
ja
jns
shlb
outsb
xor
jo
iret
pusha
or
cmpsl
push
jp
pop
pop
js
and
inc
or
jmp
mov
loop
orb
ss
mov
add
mov
fs
inc
call
xor
mov
add
mov
fistpll
pusha
outsl
cmp
inc
sub
out
fstpl
inc
fstpl
pop
testb
and
fldenv
dec
iret
fidivs
sbb
inc
pop
js
push
fcmovnb
pop
mov
aad
imul
lea
cmp
sub
test
mov
pop
call
push
mov
stos
or
addl
mov
jae
fistpl
or
out
ds
outsl
std
mov
push
pop
jmp
lret
call
cmp
add
inc
aam
mov
icebp
push
jecxz
sbb
add
adc
ficoms
push
pop
outsl
insl
pop
mov
fistl
push
lds
mov
jb
ljmp
jecxz
enter
or
sbb
test
add
dec
int3
and
idivl
outsl
mov
inc
jno
push
mov
adc
add
scas
xorb
xor
or
leave
push
pop
scas
out
int
sub
pop
lock
test
pop
mov
adc
inc
mulb
aad
add
ljmp
lock
and
nop
in
std
out
and
adc
mov
mov
das
sub
mov
gs
test
andb
cmp
mov
adcl
fwait
ja
sbb
push
std
jge
push
sbb
test
test
mov
jbe
xor
ss
shrl
mov
mov
dec
xor
enter
jmp
jle
cmp
lods
jp
test
push
mov
jecxz
mov
stos
fs
mov
pusha
jp
mov
or
loopne
push
ror
test
push
popf
xor
add
inc
movsb
sbb
push
mov
jbe
insl
mov
dec
iret
aaa
ds
das
mov
test
mov
add
mov
mov
sbb
scas
insl
add
mov
pop
and
pop
sti
lcall
adc
ror
push
and
and
pop
mov
mov
adc
cmpsb
push
sbb
stos
xchg
jp
outsl
cs
aad
jmp
cli
mov
outsb
das
ret
mov
jae
mov
roll
cli
fldenv
mov
mov
inc
dec
inc
pop
leave
fucomp
inc
mov
or
outsl
popf
inc
sbb
mov
int3
inc
aad
push
outsb
aam
pop
sub
cwtl
je
hlt
testb
jmp
sub
es
icebp
aam
sarb
xchg
mov
pop
mov
and
or
lods
nop
sub
mov
push
nop
or
rolb
jne
cmp
and
push
add
or
rclb
lcall
inc
in
lock
je
shlb
cs
jmp
lcall
jg
shlb
dec
adc
nop
out
icebp
or
cmc
push
decl
inc
out
xchg
rolb
insb
and
xor
leave
inc
and
push
sub
test
mov
sbb
inc
dec
inc
lds
cli
cmp
rcll
dec
sbb
stc
frstor
and
ja
shlb
push
gs
lret
out
jl
dec
dec
push
movsl
mov
hlt
xlat
push
sti
rcrl
fidivrl
lea
lcall
mov
mov
lcall
das
cwtl
sbb
push
cli
fdivrl
mov
nop
cmp
dec
lock
in
ds
outsl
cmc
ljmp
push
nop
loop
outsb
hlt
adc
jb
nop
jmp
cwtl
inc
cmp
and
call
dec
sbb
popf
adc
daa
popa
push
ret
inc
sbbl
mov
pop
pop
outsb
fdivs
pop
imulb
roll
stos
ljmp
mov
sbb
inc
subb
push
xor
add
dec
dec
xor
ret
lahf
adc
fdivl
add
aas
fdivr
pop
hlt
mov
scas
jno
fstl
adc
pop
loopne
mov
sub
jg
or
or
lcall
sbb
fmuls
cmpsb
cmp
fs
xchg
lods
stos
jb
jmp
aam
ja
movsb
sub
cmp
mov
mov
fimull
cmp
adc
ljmp
push
imul
in
push
loopne
jmp
testb
mov
xchg
sub
inc
das
dec
push
push
sbb
test
mov
or
dec
add
les
enter
test
pop
stos
popl
mov
push
in
cmc
in
outsl
push
xor
mov
incl
lret
sarb
xchg
mov
sub
xchg
add
xchg
les
sbb
aas
mov
andl
decl
push
push
pop
cmpsl
add
pop
pop
and
inc
cli
pop
dec
jg
stc
inc
in
dec
sub
push
mov
sbb
shl
or
inc
push
inc
adc
cmp
jae
mov
fdivs
sbb
sahf
push
add
call
or
adc
inc
mov
fwait
arpl
lods
aaa
je
movsl
icebp
xchg
cwtl
test
inc
dec
pop
loop
into
fstpt
outsl
lea
sub
andb
sub
stc
call
dec
sub
or
fnstsw
call
adc
cmp
mov
push
dec
and
lahf
or
jno
hlt
lea
pop
fsubrl
lcall
fucom
in
test
or
jbe
mov
aaa
fstp
pop
call
and
or
adc
cmpsl
cmp
sbb
jbe
mov
adc
and
cli
outsl
rclb
mov
or
sbb
sub
jne
dec
clc
loopne
lods
rorb
push
aam
sarl
outsl
push
in
test
dec
dec
lret
jae
ss
cwtl
jg
pushf
add
dec
xor
aam
iret
lret
notb
flds
sbbl
pop
xor
leave
sub
mov
arpl
fmuls
shrl
sbb
pop
dec
mov
mov
jg
cli
xor
mov
dec
sbb
imul
xrelease
sahf
jp
xchg
mov
push
pop
fidivl
insb
in
stos
out
jno
aad
lcall
push
pop
ja
jo
or
mov
push
xchg
cmp
pop
addr16
mov
mov
xchg
pop
outsl
sbb
icebp
inc
lods
cmpsb
sub
cld
icebp
test
or
dec
mov
push
ss
sbb
push
adc
frstor
dec
hlt
sbb
shrb
loopne
stos
sub
pushf
push
jmp
fildll
flds
pop
mov
mul
dec
out
loop
cs
gs
push
xchg
les
icebp
add
mul
fs
loope
pop
mov
ret
in
mov
xor
pop
inc
mov
adc
add
jge
lods
xchg
loope
lret
lcall
mov
dec
and
adc
and
pushf
pusha
and
pop
aad
jmp
addr16
lahf
or
cmpsb
push
xor
ret
push
aas
inc
test
inc
adcl
loope
cld
iret
lret
jp
sub
sub
inc
ret
xchg
sub
sbb
push
int
inc
and
jmp
shrb
lock
mov
add
cmpsb
adc
std
lods
mov
cltd
mov
aad
jecxz
sub
xchg
inc
mov
dec
in
lods
add
clc
call
mov
loope
inc
inc
daa
xor
mov
push
into
pop
sarb
and
mov
mov
std
mov
fcmovu
call
xchg
push
dec
and
icebp
mov
fimuls
and
jnp
push
fidivl
ficoms
sub
and
push
sub
pop
mov
jmp
mov
mov
out
sub
dec
add
outsl
xor
cmc
push
incl
sub
and
jmp
flds
loope
jno
ljmp
test
js
add
in
xchg
jmp
jg
loopne
cs
icebp
mov
jle
cltd
test
jg
push
push
cltd
xchg
pop
adc
inc
rolb
xchg
or
jg
mov
cmp
inc
lcall
mov
stc
jmp
mov
ret
sub
fisubl
jle
push
lret
int3
aam
pop
fisubrs
mov
and
fdivr
addl
mov
imul
push
sbb
leave
cmpsb
dec
push
push
insl
and
pop
inc
cmp
lea
ljmp
push
adc
mov
lret
loope
jmp
stos
jmp
cmp
fs
push
nop
add
je
fdivrs
icebp
push
add
ds
movsl
xchg
pop
cs
dec
mov
outsl
mov
dec
push
test
arpl
mov
jg
jle
jmp
ljmp
movl
push
fcomip
fmul
xor
adc
or
movsb
mov
push
mov
in
xor
push
in
ret
xor
lahf
pushf
dec
loopne
movsl
mov
jae
test
adc
in
div
stc
add
test
enter
repnz
cld
je
test
inc
nop
pop
dec
sbbb
ljmp
icebp
mov
push
out
ja
ss
jmp
jg
daa
sbb
les
cmp
cmpsb
mov
mov
ret
in
out
outsl
xor
enter
pop
clc
pop
cs
test
mov
bound
push
jg
or
dec
adc
out
xor
xchg
and
imul
imul
aaa
add
adc
dec
and
or
cmpsb
xchg
addr16
popa
mov
mov
lcall
or
orl
fidivrs
icebp
stos
jne
mov
test
inc
shll
test
pop
xor
les
add
inc
cmp
pop
adc
sar
adc
std
xchg
mov
lods
pop
mov
pop
inc
cmp
mov
pop
jl
mov
ljmp
fnsave
sbb
ffreep
int3
pop
add
fadds
addb
aaa
icebp
lods
xchg
cli
mov
pop
mov
std
aaa
ret
sti
mulb
and
pop
or
dec
jns
incb
xor
xchg
filds
in
or
cltd
mov
mov
cmp
sbb
sub
xlat
gs
lahf
cltd
imul
jno
rorb
adc
sbb
xor
lahf
lods
mov
or
decl
xchg
ret
pop
dec
mov
push
lret
push
cmp
sar
das
or
adc
enter
xchg
jg
movsl
cmp
and
pop
adc
stc
data16
and
mov
outsl
lock
inc
in
sahf
xor
int3
push
cmp
cmp
fdivp
sahf
int
mov
inc
shll
push
pop
jp
jp
and
ds
adc
call
int
xor
dec
xchg
insl
aaa
gs
mov
xchg
adc
fsubs
iret
sti
dec
sbb
icebp
lods
std
and
xor
jecxz
mov
pop
add
sbb
lret
lock
js
jnp
jmp
push
xorl
push
jne
mov
adc
sbb
mov
rcpps
push
fsubrp
jns
jle
jno
leave
mov
cmpsl
dec
dec
pushf
packssdw
ret
jns
xchg
mov
and
jns
and
pushl
push
lcall
daa
adc
jg
add
push
ret
jo
hlt
incl
jno
or
or
xor
add
jnp
push
pop
xor
cwtl
or
movsl
cs
das
or
test
xor
lods
fcompl
rcrb
das
mov
pusha
insl
data16
inc
jno
xchg
rcrb
or
decl
mov
lea
dec
fmuls
xchg
lods
inc
inc
push
rcr
rclb
lcall
jle
or
mov
or
dec
push
js
decl
sub
jle
sub
inc
jb
jmp
cmp
adc
aaa
mov
sub
sbbb
mov
pop
mov
je
bound
cwtl
mov
loopne
scas
aas
pop
adc
cmc
adcb
fisubrs
popf
mov
inc
sub
cmpsl
sub
sbb
jmp
and
stos
loope
loopne
mov
inc
adc
shr
bound
cmp
popa
mov
sbb
roll
aam
cmp
bound
lret
mov
push
hlt
sbb
pop
ss
or
repnz
mov
arpl
mov
rorb
jae
lret
sub
inc
cmp
pop
test
lods
ret
ret
cmc
in
outsl
std
adc
mov
test
ret
in
sub
push
mov
out
fistpll
pop
daa
in
inc
jmp
cmp
and
inc
decl
sar
cmp
sub
or
pop
test
xchg
dec
sbbl
scas
mov
movsb
paddb
insl
cld
jle
scas
push
cwtl
jne
xchg
leave
nop
in
lock
sub
xchg
in
ljmp
add
mov
mov
in
adc
aas
lahf
pop
mov
cmc
mov
sub
je
out
jns
xor
jl
cmp
pop
sub
ljmp
jg
and
scas
xchg
imul
in
xchg
and
mov
enter
mov
push
inc
pop
jns
and
cltd
jo
lds
out
out
fsubrl
sbb
sbb
xchg
push
mov
negb
jno
cli
mov
dec
lahf
les
xor
jnp
es
cmp
fsubl
hlt
or
push
push
popf
xchg
test
mov
ret
cmpb
lea
jne
fimull
dec
push
jo
fidivrs
aam
sub
enter
orb
mov
xorb
sbb
jae
imul
push
cs
mov
test
out
push
cmp
outsl
filds
cltd
rorb
scas
xor
lcall
movsb
test
mov
rcll
jno
mov
fbld
jno
sbb
aaa
cli
aas
mulb
out
and
inc
movsb
add
ds
ljmp
iret
daa
loope
rorl
cmc
cmc
loopne
sahf
out
mov
push
test
loopne
mov
fstpt
int
mov
ret
leave
cmp
mov
pop
mov
sbb
fisttpl
pop
add
lea
dec
out
mov
mov
push
mov
jecxz
clc
addr16
shll
inc
jbe
loope
lcall
fcompl
add
pusha
pop
dec
jle
pop
inc
lcall
sub
inc
jnp
int3
mov
test
and
pop
xchg
mov
mov
fildll
cmpb
popa
shr
and
add
inc
decb
add
pushf
dec
mov
jne
popf
pop
call
mov
cmp
rorb
dec
push
mov
test
lods
aaa
pop
mov
sar
repz
aad
add
dec
sbb
cmp
mov
adcb
lahf
movsl
fcmovne
daa
adc
jnp
xor
ret
ret
add
jne
test
test
pop
fdivs
shll
dec
nop
outsl
mov
cltd
lods
pop
mov
and
frstor
btr
push
aad
inc
loop
outsb
shll
sub
filds
gs
popa
scas
inc
es
lret
push
lock
fcomp
ljmp
cmp
cmp
decl
iret
push
adcl
outsb
xchg
pop
sub
add
nop
cmpsl
xchg
add
xchg
mov
mov
push
push
jbe
xchg
std
fcoms
lret
fisttpll
and
cmp
jl
frstor
inc
push
push
push
mov
pop
fnsave
std
mov
bnd
xchg
sbbb
pop
das
std
pop
adc
mov
sbb
mov
idiv
jg
ret
iret
sub
faddl
and
pushf
adc
call
mov
test
dec
in
xor
ret
iret
call
add
ljmp
xchg
cltd
inc
sbb
dec
mov
lea
sbb
xchg
rcrb
das
lock
mov
dec
out
jg
sub
test
sbb
ja
cmp
outsl
imul
repnz
loop
pop
insb
das
mov
sti
push
cmp
pop
sbb
sbb
and
add
scas
push
daa
pop
sub
xchg
xor
mov
and
push
je
aam
inc
test
sahf
mov
or
mov
out
sub
cmp
stos
rorb
add
pusha
or
pop
xchg
cld
push
xor
fxch
sbb
lock
dec
andl
scas
jnp
cmpsl
xor
fwait
jb
loope
add
xlat
jbe
lea
out
outsb
cmp
repz
and
mov
mov
adc
mov
data16
jno
mov
add
jmp
std
sub
bswap
xor
cmc
add
mov
cli
mov
rcrl
scas
sbb
fnsave
pop
mov
sub
push
push
cmp
push
scas
ficoms
movsl
dec
push
icebp
shlb
ljmp
test
cli
push
mov
shrl
fldl
sub
jnp
cmpsl
mov
ret
sub
cli
call
sbb
aam
test
shll
mov
mov
push
adc
push
out
stos
push
xchg
call
sbb
pop
ss
mov
repz
pop
jnp
jo
mov
jmp
mov
lds
cwtl
sub
insb
jecxz
outsb
cld
xchg
sbb
or
mov
loop
mov
pop
fistpl
jbe
xchg
add
push
cli
mov
sub
sahf
lret
lcall
dec
movsl
addr16
add
fnstcw
stos
sbb
sub
addr16
pop
adc
sub
loope
push
sarb
outsl
cs
push
push
inc
call
mov
into
cmp
mov
sub
movsb
jge
fcompl
out
adc
arpl
movsl
fiadds
mov
out
loope
lahf
loop
pop
cli
aaa
push
std
loopne
push
dec
idivb
ljmp
lcall
cmp
adc
push
xchg
sbb
arpl
test
pop
mov
push
clc
out
mov
jge
cmc
enter
clc
decl
cmp
ja
push
cld
xchg
inc
popl
cmp
inc
sub
fwait
adc
int3
cmp
adc
xor
cwtl
out
pusha
adcl
loop
outsb
sbb
jp
dec
loopne
fnstcw
sbb
sbb
addr16
daa
dec
lock
lcall
mov
test
push
add
ret
pop
jne
mov
insl
aaa
jle
cmp
lods
and
xchg
jmp
testb
and
inc
sbb
add
and
scas
or
cmp
mov
jmp
mov
and
mov
cmpl
mov
mov
and
adc
je
dec
xor
xchg
mov
xchg
mov
aam
push
pop
cmp
pop
adc
and
and
cmp
shrl
cld
inc
sub
sub
sahf
addr16
outsb
jp
lods
insl
pushf
inc
adc
movsl
fsts
fdivr
pop
xchg
fwait
mov
repz
xchg
filds
xor
outsl
jg
push
inc
jp
repz
push
fisubs
icebp
das
aam
pop
fiadds
mov
mov
lods
das
hlt
mov
bnd
and
inc
repnz
sub
std
cmpsl
pop
jns
sbb
into
lock
mov
add
cltd
push
notl
mov
outsl
push
fbstp
fwait
hlt
call
jg
adc
pop
mov
test
sti
and
jp
insb
hlt
pop
mov
adc
sub
inc
das
inc
inc
dec
jmp
fucomip
jg
inc
mov
jp
mov
jne
imul
sbb
xchg
je
xor
xor
subl
sub
popf
movsl
sbb
jg
xchg
call
or
sbb
ljmp
pusha
sbb
imul
sbb
pop
and
dec
xlat
lods
daa
in
push
inc
cmp
jp
and
ss
incl
lock
in
push
xchg
or
inc
add
xlat
enter
mov
pusha
fistl
xchg
xor
clc
dec
cmp
test
sbb
gs
mov
push
lcall
push
std
inc
ret
adc
mov
mov
pop
int3
cld
aam
fistl
xchg
mov
je
daa
daa
movl
sbb
insl
pop
sahf
out
jb
sbb
push
lods
inc
sub
insb
add
bound
mov
mov
clc
lds
sar
in
stos
pusha
test
rorb
shl
insl
mov
loope
scas
xchg
cmc
insb
pushf
sub
cmp
jg
and
and
mov
loopne
jmp
ret
jns
adc
cmp
stos
push
xchg
fwait
adc
jbe
cltd
add
arpl
clc
das
loopne
cmc
add
repz
and
inc
call
adc
or
bound
jmp
enter
clc
mov
cmp
xor
mov
or
dec
scas
push
and
into
cmpsl
and
lea
popa
lods
pop
xchg
adc
inc
test
push
bound
cmp
lcall
data16
shll
push
jmp
pop
pop
mov
fiadds
mov
ret
xor
sub
clc
adc
dec
sbb
cld
pop
cmpsl
ret
adc
repnz
lret
xlat
mov
hlt
rcl
mov
mov
adc
jbe
mov
repz
push
sarb
fs
add
pusha
sti
cs
fistps
xor
ds
add
ror
ljmp
leave
pop
mov
inc
roll
push
add
pusha
push
insb
sti
mov
es
pop
push
cs
mov
lds
inc
and
vunpcklps
add
mov
test
mov
pop
popa
add
cli
mov
pop
mov
cmpb
aam
mov
stc
cwtl
mov
xchg
rol
sbb
out
jb
jmp
push
dec
pop
sti
gs
sar
in
sbb
imul
test
mov
xor
outsb
sti
jle
enter
xchg
pop
and
inc
mov
fidivrl
fcomps
push
adc
lods
add
stc
pop
das
or
and
adc
lea
push
outsl
xchg
aam
push
ds
cmp
arpl
push
or
fstpl
outsl
or
in
sub
mov
cmc
dec
cli
ljmp
loope
sarb
icebp
dec
xchg
or
aas
jbe
pop
push
fs
cmp
ljmp
pop
inc
out
jne
jg
scas
cmp
outsl
adc
es
cmp
ljmp
pushl
clc
mov
inc
mov
fwait
test
and
adc
pop
mov
lods
dec
cmp
mov
out
iret
out
ret
lds
jge
or
adc
incl
rclb
add
pop
cltd
and
push
shr
or
aam
es
jno
sbb
cmpxchg
xchg
pusha
mov
ret
xor
ja
lds
push
lods
jge
mov
pusha
arpl
pushf
dec
xchg
push
jne
xchg
and
push
mov
mov
push
fildll
insl
test
lock
fldenv
jno
ljmp
fiaddl
scas
loop
das
sbb
fcompl
in
xchg
mov
dec
rcrl
adc
or
xor
stos
ret
lds
loope
shlb
adc
or
insl
pushf
fisubrs
xchg
lcall
lea
pop
mov
dec
std
in
mov
mov
orl
mov
xor
sub
addb
mov
icebp
orb
mov
leave
fdivl
aad
std
out
and
fucomip
lds
sbb
lret
shlb
sbb
xor
mov
aaa
sub
shlw
adc
leave
ret
ds
fisubrs
and
sub
or
sti
mov
cmp
data16
pushf
fistps
ds
adc
es
lock
xchg
mov
movsl
es
and
ljmp
insb
push
dec
push
dec
xchg
adc
loope
mov
xor
jnp
xchg
popa
sub
dec
shrl
movsl
push
jmp
rcl
xor
and
sbb
imul
jnp
mov
fsub
cmpsl
mov
jecxz
scas
inc
mov
adc
loop
ljmp
cli
movsl
mov
pop
jbe
icebp
and
inc
cwtl
shlb
mov
adc
sbb
lea
std
pop
flds
mov
and
dec
jmp
xor
add
lahf
pop
xchg
or
jnp
push
mov
sub
cmp
xchg
and
fistpll
add
push
lock
adc
outsl
jb
cs
insb
xchg
fstps
or
cmc
adc
dec
dec
ret
push
nop
add
repz
push
movsb
arpl
jg
test
adc
sbb
pop
mov
hlt
scas
xor
mov
cs
adc
mov
push
outsb
sbb
jle
adc
and
sbb
lret
out
notl
fildl
int
mov
push
fs
xchg
cmp
roll
ret
lahf
mov
or
mov
das
mov
dec
in
push
stos
adc
jp
pop
imul
roll
je
dec
lods
ucomiss
jg
pushl
inc
add
inc
jle
into
mov
sub
test
inc
sbb
loopne
lahf
mov
jmp
or
lock
cmp
xlat
inc
subl
std
cmpl
mov
adc
scas
sbb
jno
mov
int
outsb
call
orb
inc
dec
rclb
and
das
mov
jp
call
cmc
addr16
mov
ljmp
shrb
sub
lahf
or
cmp
lea
jl
or
sub
mov
es
cmp
imul
cmp
sbb
mov
clc
adc
jle
pop
popf
push
jge
jo
pop
cld
add
push
pusha
sbb
xor
jbe
outsb
sbb
cli
lea
sub
cmc
lcall
pop
adc
sahf
inc
pop
icebp
testb
std
cltd
adc
pop
loop
subl
js
mov
ja
pop
add
mov
in
cmp
mov
xchg
add
mov
outsl
addb
cmpsb
jne
jns
xchg
popf
mov
pop
mov
mov
jle
xchg
subl
lcall
mov
sbb
std
jge
mov
jbe
sbb
call
sbb
mov
sahf
mov
enter
push
inc
jno
ljmp
xchg
cmp
das
adc
push
and
pop
jbe
call
cmpsl
jns
test
pop
in
xchg
fsubs
repz
outsl
pop
mov
ficoms
cwtl
shrb
mov
or
incl
add
jne
les
ss
jmp
call
repz
ja
lods
push
mov
in
das
pop
push
stos
jae
inc
add
or
inc
lret
mov
nop
inc
jg
inc
dec
mov
mov
sbb
push
inc
mov
in
xor
out
and
cmp
add
cmpsb
mov
outsl
ret
mov
sahf
std
pop
loop
scas
xor
cmp
in
stos
sub
mov
push
ret
fisubrl
lret
or
out
xor
lea
add
or
stc
push
sub
stos
or
jno
fisttpl
jp
and
jp
pop
call
jp
ret
adcb
pop
sahf
add
mov
mov
es
call
xchg
push
xor
stos
outsb
cli
mov
adc
xor
pushf
fistl
sar
ffreep
mov
scas
dec
nop
pop
push
out
sbb
or
add
hlt
sbb
mov
xchg
ret
fs
ja
sub
mov
dec
or
lock
cmp
dec
fistl
cwtl
dec
add
in
or
enter
ja
cld
jg
movl
xor
and
call
sar
xchg
dec
mov
xchg
dec
in
xchg
xor
push
jge
ret
cmp
lds
sbb
data16
js
sbb
pop
jmp
xor
push
xchg
lds
sti
ljmp
cmp
inc
xor
fdiv
jle
jmp
push
outsl
cmp
or
push
nop
call
mov
and
pop
pop
test
pop
fmuls
inc
rep
mov
int3
push
or
or
in
cwtl
lods
xchg
outsb
scas
sub
or
xorb
cmp
push
je
sbb
leave
inc
mov
pop
shr
cs
push
pop
movsl
mov
cmp
cmp
cli
pushf
shll
pop
push
test
and
pop
sbb
sub
aam
mov
hlt
lahf
mov
nop
cwtl
xchg
or
jmp
add
lret
add
shll
jg
and
push
add
movsb
enter
pushl
sbb
int
pop
inc
sub
in
inc
shrl
lock
data16
stc
inc
fwait
pushf
adc
xlat
pop
shlb
sub
icebp
mov
jmp
lock
add
insb
rorb
sub
movsl
call
mov
in
push
bound
mov
pop
incl
fildl
scas
and
adc
add
push
mov
cmp
mov
fstpl
mov
sub
in
daa
in
sbb
dec
adc
xor
push
add
adc
inc
cmp
repz
mov
call
shll
enter
mov
test
jl
mov
push
sub
dec
adc
adc
icebp
aaa
cmp
mov
pop
xchg
lret
jg
movsl
mov
shll
cmp
pop
adc
sti
push
roll
jp
ret
and
lahf
je
mov
jae
mov
sti
pop
pop
test
ja
dec
cmc
idivb
sarb
incb
inc
xchg
outsb
push
add
add
jns
xor
and
sbb
icebp
jns
pop
mov
push
jo
popa
shlb
inc
bound
mov
sbb
push
sarb
xor
jg
rorb
sbb
mov
sub
sub
je
dec
push
xor
sahf
cmp
adc
gs
xchg
in
or
int3
ret
add
jmp
adc
mov
call
add
add
loop
outsl
ret
mov
popl
std
pop
mov
lret
cmp
pop
stc
xchg
hlt
mov
orb
movsl
add
mov
push
loop
adc
clc
inc
aaa
int
sub
imulb
add
test
repnz
mull
ss
mov
mov
lret
test
pop
cmpsl
adc
mov
std
aaa
mov
adc
mov
pop
mov
inc
pop
ss
sub
mov
add
dec
pop
dec
out
sub
ret
cli
lods
push
std
pop
cmp
jns
and
adc
mov
movsl
mov
sub
incl
adc
and
mov
mov
ljmp
pop
pop
ret
adc
ret
jg
insl
add
sub
hlt
mov
insl
loope
loopne
sbb
sbb
movsb
cmp
or
filds
pop
icebp
jne
lods
dec
fidivl
xlat
hlt
movsl
mov
insl
lods
je
push
mov
sub
sahf
cld
xchg
imul
dec
push
or
lods
cmp
negb
je
cmp
insl
sar
and
aam
pop
insl
push
pop
sub
xchg
fcmovbe
loop
aaa
clc
fimull
imul
and
fsubl
divb
fdivrl
test
das
and
jg
mov
add
lcall
nop
lock
fldt
lds
mov
in
addr16
mov
lock
pop
stos
sbb
or
xchg
dec
repnz
sahf
mov
sbbb
sbb
sub
into
mov
or
and
cmp
mov
jae
jne
popl
divb
xor
icebp
loop
or
dec
mov
and
add
mov
xchg
cli
adc
and
insb
mov
pop
cli
movsl
or
xor
xchg
imul
shlb
loop
in
mov
add
mov
mov
cmp
nop
sbb
mov
lds
sarl
adc
add
xchg
aaa
cmp
outsb
jle
mov
cmp
lock
mov
xchg
sar
sub
dec
mov
out
cltd
sub
mov
out
clc
push
ret
push
inc
xchg
xor
sti
sahf
jno
in
fwait
mov
push
mov
popf
dec
mov
aaa
xor
jg
cmpb
pop
push
mov
in
push
fsubl
insb
dec
ljmp
das
mov
cld
jnp
movsb
outsl
push
xor
lods
jno
test
fisttpl
mov
sbb
enter
lods
aad
jge
jl
out
les
sub
daa
test
push
jb
incb
inc
fstpt
add
mov
cli
or
cmpb
cli
popaw
add
aaa
push
xor
inc
cmp
mov
mov
iret
add
jmp
jae
mov
aam
scas
xchg
out
lcall
ficoml
inc
ret
xchg
lret
out
mov
loopne
in
loopne
insb
pop
cmp
pop
jp
addb
push
test
dec
bound
shrb
rorl
es
out
icebp
in
add
das
push
xor
fisubs
push
loopne
xchg
mov
fsubl
iret
std
bound
cmpsb
pusha
sub
cmpsl
pop
inc
mov
jmp
das
mov
cltd
addr16
mov
roll
add
adc
insl
loope
ss
push
push
pop
jle
paddd
adc
add
adc
dec
movsb
popf
mov
cli
mov
lock
and
xchg
fnsetpm(287
sbb
paddw
js
xor
sti
push
dec
mov
adc
dec
mov
std
xlat
push
pop
lock
dec
out
push
mov
outsb
adc
mov
test
js
dec
lret
lahf
inc
adc
jmp
outsl
cld
outsb
nop
add
dec
push
inc
sbb
in
dec
jne
hlt
pop
inc
dec
mov
inc
and
cmp
inc
mov
test
movsl
notb
cltd
dec
jbe
pop
fcomp
mov
xchg
stos
cmc
jge
clc
incl
iret
or
pop
ret
or
or
xor
outsb
pop
sub
xchg
loopne
pop
stos
inc
imul
mov
fldt
add
sub
sub
movsl
fcmovne
sub
adc
jecxz
add
decl
add
or
mov
xchg
ss
mov
loope
and
push
ljmp
pop
fdivr
imulb
adc
jb
fwait
mov
add
inc
test
push
sahf
pop
jnp
or
xlat
jg
js
jbe
pop
or
pause
dec
outsl
mov
jl
aaa
inc
pop
fidivrs
push
cmp
and
cmpsb
leave
push
add
lds
mov
dec
cmp
mov
mov
lods
dec
fistl
add
sbb
add
or
orl
ret
decl
mov
je
imul
lcall
cmc
or
ja
mov
sub
fldenv
jmp
xor
hlt
int3
mov
mov
xor
ficomps
jecxz
mov
out
or
out
lods
xlat
insb
fbstp
cwtl
scas
lret
sahf
lahf
das
adc
imul
out
repz
cmp
mov
push
out
or
icebp
lahf
dec
test
jp
out
add
xchg
cli
or
imul
cmp
jno
inc
fwait
enter
pop
and
pop
mov
subb
mov
and
xor
xor
jbe
popf
push
std
repnz
data16
inc
push
loope
mov
push
or
push
pusha
pop
sbb
pop
leave
jl
sub
sbb
outsb
cmpb
xchg
arpl
dec
pop
mov
xchg
inc
out
popa
push
fists
cs
lea
cmpsb
jg
loope
xchg
sub
loopne
dec
cld
nop
int3
je
mov
pop
mov
test
and
out
lods
ret
loop
sarb
incl
cmp
in
xchg
adc
mov
adc
and
daa
pop
shlb
push
push
or
ljmp
repnz
fidivl
cwtl
or
cli
adc
inc
out
jo
cltd
jo
adc
jo
pop
fdivl
das
ds
das
lock
jnp
lret
adc
jp
outsl
mov
lcall
pop
xor
lock
mov
fstpl
pop
ja
cld
lret
xor
pushf
add
jne
dec
lods
or
adc
sub
push
stos
incl
jo
mov
xchg
aaa
cli
ret
adcl
dec
or
insl
es
loopne
xchg
dec
dec
stos
push
dec
mov
push
mov
aam
loopne
fcoml
insl
cwtl
loopne
icebp
fwait
and
pop
push
stc
lea
push
xlat
jae
xchg
or
psllq
popf
addr16
ljmp
lret
add
out
jg
cmpsl
add
xchg
sbb
repz
bound
jb
into
out
fisubrl
inc
adc
adc
push
cmp
ficomps
das
rcll
add
cli
hlt
push
add
and
xor
inc
cmc
ret
rclb
sbb
or
lock
xor
rorb
mov
jne
push
mov
xlat
lds
push
iret
test
fldt
and
add
pop
aas
inc
dec
popl
or
jg
mov
aam
or
add
adc
fildl
das
xor
into
xchg
cmp
sbb
mov
sbb
lock
pop
inc
icebp
popf
das
adc
jl
xor
bound
int3
out
add
xlat
xchg
adc
sbb
andb
mov
outsb
push
mov
fucomip
mov
les
sahf
inc
mov
or
add
decl
imul
dec
inc
fs
pushf
add
pop
pop
insb
fisttps
mov
push
jge
sbb
jmp
movsl
ja
jne
movsl
jo
inc
add
mov
loop
clc
add
lods
push
xor
mov
outsb
push
mov
test
pop
andl
mov
aas
rcr
push
imul
sbb
stos
inc
clc
cmp
add
cmp
sub
stos
adc
add
aaa
call
sub
jno
inc
adc
cld
ja
test
cmp
mov
xor
mov
decl
adc
mov
adc
add
lock
ret
dec
pop
std
bound
pushf
sub
cmpsb
das
sbb
sahf
or
push
hlt
aad
xor
rcl
fisttps
mov
pop
mov
inc
addr16
mov
xchg
pushf
pop
dec
iret
call
xor
inc
pop
stc
dec
scas
mov
sub
jnp
cld
sbb
jp
push
push
ss
insl
repnz
mov
jg
cld
cmp
sar
jp
js
or
or
sbb
pop
and
jo
imul
aaa
add
push
arpl
int3
sbb
xchg
ret
xchg
mov
cmp
incl
pop
add
fistpll
movsb
imul
inc
adc
mov
ja
dec
pop
xor
js
sti
aas
mov
iret
cmpsb
bound
rorb
outsl
mov
xchg
pop
iret
aad
and
mov
lods
mov
xchg
cmp
and
jmp
or
outsb
ret
inc
push
scas
in
fwait
sub
mov
rorl
push
and
sar
cmp
mov
mov
shll
mov
outsb
adcl
ljmp
repz
ds
xlat
xchg
pop
cmp
jno
repz
mov
mov
push
inc
movsl
push
lds
loopne
test
jno
or
mov
mov
incl
test
and
add
adc
mov
and
fstpl
xchg
xor
test
lds
jl
sub
dec
push
lea
xor
xor
lods
sbb
mov
mov
outsl
inc
std
test
cld
clc
mov
mov
cmc
inc
into
inc
lods
xchg
enter
hlt
sahf
add
in
movsl
pop
and
mov
xor
rolb
adc
sub
jbe
mov
cmp
mov
dec
cld
jl,pt
out
sbb
push
lea
dec
dec
mov
decl
call
sub
dec
or
or
idiv
in
dec
leave
mov
outsb
rcrl
xchg
pusha
adc
pop
sbb
mov
sub
mov
xorl
mov
call
filds
adc
adc
mov
pop
je
pop
mov
lock
loop
mov
sbb
in
js
outsb
insb
pop
int
mov
rcll
push
sbb
inc
sbb
jecxz
adc
cmp
mov
nop
mov
lahf
and
loop
mov
fisttps
push
adc
es
jg
fisttpl
clc
movsb
repnz
test
add
lret
pop
repnz
rorb
dec
xor
mov
add
adc
nop
and
aaa
jle
xor
xchg
mov
lock
std
testb
jne
or
je
dec
jl
aad
lock
icebp
or
adc
or
addl
adc
in
pop
mov
cs
cmpsl
jge,pt
aad
push
cmp
ljmp
sub
ds
loopne
push
xchg
ret
mov
xor
xchg
daa
aaa
push
jbe
mov
insl
fisttpl
and
out
push
loopne
inc
shrl
fdiv
add
push
ds
mov
adcb
and
mov
mov
push
incl
xor
ret
jmp
iret
jno
or
int3
adc
or
or
or
add
das
call
sbb
out
sbb
dec
pop
and
push
pop
js
inc
pop
xchg
push
cmp
test
jnp
lahf
xchg
daa
and
mov
leave
jp
fimuls
push
movsl
jno
int3
jle
and
aad
jg
jbe
adc
inc
adc
mov
sbb
pop
push
push
push
in
add
push
add
jg
xchg
mov
sub
fiadds
sahf
add
inc
dec
stc
andl
lock
mov
ds
xor
shl
loopne
pop
cmpb
sti
xchg
pop
filds
or
sub
mov
fsubr
or
xor
pop
fs
xchg
loop
fcomip
outsl
inc
clc
push
jmp
pop
rcrl
pushf
sbb
xchg
mov
sbb
dec
es
dec
mov
mov
pop
fst
movsl
xorb
push
inc
je
sub
pop
cmp
xor
stos
add
jo
fisttpl
test
aas
repz
pop
stos
dec
dec
jbe
imul
push
ss
or
aaa
or
jge
pushf
out
in
mov
add
xchg
stc
pusha
cmp
mov
lock
mov
out
out
rorl
ret
lods
dec
addr16
xchg
js
mov
adc
sbb
mov
inc
xchg
lods
rep
fdivl
cmc
xchg
pop
cmp
jg
jnp
jno
cltd
leave
or
xchg
stos
cmpxchg
push
lret
mov
or
xorb
xchg
stos
leave
or
test
stos
clc
sub
jns
call
jo
push
sub
fsubl
dec
cmpsb
jbe
fidivrl
sarl
movsb
push
cltd
xchg
sbb
dec
out
sub
xchg
or
mov
in
lods
cwtl
inc
std
rorl
test
mov
movsl
test
testl
mov
cmp
fdivs
cmp
sar
mov
cmp
push
leave
cmpsl
jecxz
adc
cmpb
std
pop
movsb
mov
push
sbb
rcr
filds
jmp
insl
cmpsl
out
inc
in
pop
and
cmp
ja
and
sbb
iret
sub
nop
sub
aas
xchg
mov
dec
leave
push
lretw
or
push
sub
lcall
movsl
xor
adc
inc
inc
sub
xor
inc
mov
pop
addb
xchg
and
dec
loop
sub
shlb
and
sub
inc
inc
push
mov
add
add
adc
mov
xchg
cmpsb
push
pop
daa
in
push
adc
clc
fs
jmp
stos
fiaddl
mov
insb
xchg
clc
jbe
fists
into
inc
adc
cmp
or
out
push
cmc
pop
jne
sub
cmp
adc
outsl
insb
mov
leave
test
test
mov
mov
sarb
jg
dec
stos
notl
cmp
data16
mov
push
xor
inc
ljmp
push
aaa
ss
rcrb
int
cltd
stos
cld
mov
shlb
divl
push
lcall
ret
inc
subl
adc
sbb
jge
push
jg
shl
push
into
xchg
adc
push
mov
mov
adc
xchg
aam
mov
and
jnp
sbb
xor
roll
xor
jmp
pop
or
pop
xor
add
push
pushf
sbbb
jp
inc
mov
ret
sub
iret
sub
adc
ficomps
cmp
inc
pop
mov
popa
ret
scas
mov
and
stos
out
sbb
xchg
ljmp
sti
insb
sub
or
and
or
ljmp
pop
outsb
outsl
mov
sbb
dec
iret
icebp
out
arpl
push
sti
andl
js
push
push
je
mov
test
insb
jo
dec
cmp
mov
pop
imul
push
pop
lock
xchg
scas
pop
test
dec
ret
and
push
xchg
sbb
sbb
fdivrl
ret
sahf
pushf
push
mov
cmpl
mov
aam
dec
test
mov
das
ret
xchg
loope
dec
into
jmp
or
lahf
stos
xchg
arpl
mov
push
aas
jns
sahf
sbb
inc
mov
pop
and
adc
in
mov
enter
loop
dec
les
mov
ret
pusha
dec
mov
mov
xchg
pop
and
inc
and
ds
mov
loopne
adc
popf
push
loop
subb
js
sub
divl
pop
dec
push
aad
adc
enter
imul
xchg
icebp
int3
mov
push
call
call
push
negb
push
mov
sbb
test
decl
dec
cs
push
cmc
push
cmpsb
loopne
call
cs
lods
sbb
xchg
aad
dec
aam
cmpl
pushl
push
inc
inc
push
inc
popa
fwait
movsb
add
sub
jno
les
inc
xor
mov
add
aas
push
dec
arpl
test
cli
xor
mov
pushf
xor
pop
insl
mov
pop
iret
jns
sub
ret
int
nop
cmpsb
inc
pop
mov
jmp
and
cmpsl
shll
test
ficoml
cmc
jo
add
and
shrb
adc
lods
jle
pop
sbb
xor
sbb
fildl
xchg
out
je
hlt
decl
add
sbb
add
dec
push
xorl
push
mov
or
lret
or
pop
push
push
jno
jbe
aaa
lcall
popf
sti
fcompl
jle
outsl
loopne
pop
or
inc
push
mov
in
rep
inc
iret
and
leave
in
or
sbb
mov
sarl
orb
cmpb
sbb
sub
int
add
aaa
mov
outsl
je
pop
mov
and
scas
sahf
inc
insl
jmp
test
or
pop
fisttps
outsl
cld
ja
cmp
negl
cmp
or
or
iret
jb
xchg
adc
test
mov
sub
ret
xor
or
mov
dec
xor
ficoml
adc
hlt
add
repnz
or
xchg
mov
xor
les
aad
call
aaa
insl
mov
out
stos
in
push
jb
jno
or
stos
jmp
jns
fmull
scas
fincstp
mov
add
movsb
push
and
pop
mov
gs
inc
fs
int3
fildll
pop
or
in
push
aaa
sbb
jno
push
dec
cmp
push
jp
movsl
pop
mov
jne
std
cmpps
dec
mov
mov
das
movsb
cwtl
lcall
mov
insl
fists
and
or
mov
jp
sbb
cli
outsl
mov
pop
flds
stc
cmp
jg
mov
clc
inc
push
cmc
and
ret
fwait
stos
mov
pop
mov
add
inc
fdivl
mov
push
or
jge
xchg
pop
add
mov
outsl
mov
adc
psubsb
mul
ret
dec
pushl
jne
inc
push
test
mov
insb
popa
shl
jle
movsl
pop
mov
push
sbb
fldt
insb
and
pop
loopne
cmpsl
sbb
pushl
in
in
es
sub
mov
cmp
subl
xor
movsl
js
stos
add
es
fadd
mov
rolb
test
xchg
ret
mov
add
outsb
adc
lds
jbe
add
pop
lods
icebp
fists
sbb
pop
push
mov
push
aas
ljmp
cmovs
cltd
cmpb
mov
shrl
dec
stc
and
jno
test
xor
cli
mov
mov
pop
outsb
sbb
cmpb
aam
push
inc
mov
fwait
dec
sub
call
fcomps
mov
mov
mov
hlt
shrb
test
mov
jnp
xor
adc
mov
mov
push
or
sub
ror
leave
xchg
movsb
in
das
add
popf
je
adc
mov
sbb
dec
sbb
jns
lock
and
in
in
pop
clc
cmc
test
and
mov
sub
mov
sub
pop
ljmp
clc
movsl
out
out
scas
in
jle
es
scas
icebp
inc
inc
mov
jp
rorb
push
sbb
das
jne
daa
push
or
in
xorl
icebp
jmp
lret
dec
adc
or
push
test
mov
xchg
xor
or
stos
sub
and
popl
push
jmp
cmp
lahf
ljmp
insb
sub
testl
js
pop
jmp
outsl
pop
std
push
sub
add
enter
fsubl
mov
jmp
xor
idiv
xor
arpl
adc
pusha
sub
dec
xchg
call
pop
mov
jns
daa
dec
sub
loope
dec
sbb
imul
dec
lds
add
add
bound
dec
insb
aam
sbb
sbbl
incb
push
pop
stc
in
daa
inc
bound
mov
ljmp
mov
cmp
sarb
cmp
test
xor
rcl
cmc
fadds
push
stos
pop
mov
ret
lea
loopne
popa
test
pop
repz
inc
mov
fwait
lods
in
inc
rcrb
mov
adc
mov
add
xor
inc
mov
push
jg
lock
adc
sti
sub
adc
or
xchg
mov
mov
je
dec
mov
push
out
bound
adc
cmp
lods
sub
sub
int3
cltd
popf
pop
test
sbb
les
fstpl
hlt
add
shll
nop
cltd
lds
adc
cmpsl
ret
cmp
repz
adc
test
mov
or
testb
fistl
outsb
sub
and
jmp
mov
idivb
cwtl
sti
test
pushf
nop
pop
mov
xor
and
push
dec
lea
inc
icebp
mov
popa
sti
and
rcll
jp
sub
cmp
pop
lret
inc
and
sub
dec
or
jns
inc
inc
sub
js
or
and
mov
pop
adc
jg
xchg
xorb
and
or
cmp
cld
dec
jp
mov
js
push
push
lahf
insl
inc
and
testb
xchg
xlat
inc
mov
pop
and
pop
dec
mov
adc
fxch
add
pop
js
movsb
dec
adc
test
dec
call
jo
or
sub
ss
cmp
jne
call
mov
outsb
fmuls
pop
rep
repz
iret
mov
add
pop
test
dec
ret
sub
aam
mov
mov
popf
jo
rclb
adc
mov
jo
lcall
sub
test
insl
cs
jecxz
les
test
add
or
sbb
push
or
inc
imul
mov
lea
orb
sahf
jno
cmpsl
mov
rclb
cld
add
and
mov
sub
sti
or
xchg
call
js
and
jp
call
mov
stos
cmc
mov
test
inc
outsl
xor
inc
jmp
mov
lods
loop
xor
or
and
call
pop
scas
sbb
xor
sbb
jle
shll
into
mov
or
pop
cvtps2pd
loope
adcb
xchg
adc
jecxz
ffreep
lock
les
push
push
and
mov
mov
data16
xor
hlt
dec
js
add
cli
jmp
aas
sbb
sarb
jmp
test
sbb
adc
mov
rclb
mov
movsb
jle
push
xchg
cmp
inc
and
cmc
testb
in
roll
test
sub
xor
addr16
out
adc
movsl
xor
sar
xchg
aaa
fdivs
in
or
pop
mov
mov
fs
cmp
repz
gs
mov
andb
loope
add
ljmp
xchg
js
or
movl
out
adc
cli
scas
cmp
push
mov
icebp
mov
aas
jo
mov
rolb
dec
xlat
add
or
cld
ljmp
bound
sub
add
or
cmp
mov
or
push
sub
jle
sahf
cmpsb
ss
movsl
insb
jmp
ja
pusha
iret
inc
mov
popf
dec
aas
test
sahf
xor
jne
xchg
mov
inc
push
decl
cli
mov
mov
pop
add
adc
test
mov
arpl
je
xchg
sbbb
insl
push
mov
sahf
xchg
sub
fstpt
bound
mov
roll
push
inc
mov
inc
lahf
cmpl
call
lods
rorb
adc
jbe
data16
and
aas
push
xor
xchg
or
jl
dec
sub
pop
rcrb
or
mov
fidivs
mov
lock
xchg
pushf
stc
pop
mov
jbe
sahf
push
sub
in
aaa
push
jmp
xchg
outsb
and
cmp
int
dec
push
and
inc
xor
std
xor
fcoms
cmpl
adc
stos
pop
sbb
push
cmp
mov
lret
bound
push
inc
inc
test
in
sahf
ficompl
inc
mov
sub
aaa
or
sub
fsub
jno
mov
shlb
mov
adc
jbe
movsl
inc
and
dec
ljmp
inc
rcl
or
sbb
aaa
push
imul
mov
imul
mov
or
stos
mov
ret
lods
mov
inc
jbe
cmpsb
dec
js
push
insl
jo
push
rol
fcmovu
les
fcomi
test
jp
cli
iret
bound
inc
or
loopne
insb
sbb
stos
movsl
cmc
cmpl
mov
mov
das
xor
mov
or
cmpsb
ja
push
cmp
cmp
loop
std
jmp
jle
testb
jg
mov
shlb
dec
inc
adc
xchg
jnp
add
pop
mov
int3
add
iret
into
dec
inc
adc
jg
bound
jg
jns
pushl
mov
xor
mov
mov
mov
dec
mov
jmp
cs
lcall
push
ja
in
imul
aad
mov
nop
and
push
adc
adc
or
pop
sbb
pusha
loope
mov
sub
cs
aas
xchg
lock
rcrl
decl
and
mov
jb
je
and
dec
jmp
pop
loopne
inc
mov
xor
pop
mov
xor
insl
dec
out
loopne
jle
test
subl
jbe
pop
and
mov
mov
xlat
xlat
ljmp
fnstsw
movlps
xor
cli
adc
enter
pop
xchg
addl
or
sub
pop
rorb
pusha
fiaddl
sub
jecxz
mov
mov
adc
push
jl
xchg
inc
dec
mov
inc
jle
inc
scas
sub
fdivrs
daa
pop
push
adc
mov
or
xchg
sub
mov
ja
ror
jmp
int3
aam
mov
lods
cwtl
hlt
push
pop
mov
call
ror
sbb
and
cli
dec
pop
stos
push
xor
jnp
pop
enter
xorb
push
mov
jecxz
fisttpl
loope
popf
sub
mov
cmp
das
xchg
ficoms
push
aas
js
pop
xor
cmp
mov
xorb
lods
or
ret
mov
jg
fsub
pop
dec
out
cmpb
fdivrp
push
xor
lar
shlb
ljmp
push
xor
xchg
or
xchg
sbb
sahf
loope
fwait
pop
clc
mov
adc
xor
inc
inc
add
decl
rcrb
pop
cmp
cmpsl
inc
dec
mov
pushf
pop
pop
mov
call
fbstp
adc
adc
aad
mov
das
repnz
sbb
jge
test
cld
pop
das
aam
push
dec
aad
add
mov
sbb
pop
jbe
mov
sbb
fsts
cmp
rcrl
dec
push
xchg
mov
rolb
pop
outsb
and
dec
mov
lret
dec
xchg
call
mov
outsb
add
pusha
test
sbb
jecxz
mov
lahf
in
mov
mov
lods
xchg
out
add
mov
sub
icebp
pop
cld
mov
and
sub
fildl
imul
jg
rcll
xchg
xchg
pop
mov
divb
std
lods
icebp
or
xor
sbb
and
add
mov
stos
in
icebp
push
inc
jmp
insl
shl
jno
test
sbb
inc
hlt
inc
inc
inc
add
aam
mov
mov
cmp
int3
and
mov
push
cmp
add
or
js
call
dec
incl
rcrb
push
push
mov
pop
cmp
pop
dec
pushl
rcl
inc
in
dec
pop
push
xchg
outsb
or
cmp
pop
test
outsb
push
cmp
jp
jecxz
xchg
test
stos
dec
push
dec
test
and
pop
loop
jns
pushf
and
daa
aas
and
sub
xor
xchg
fwait
call
cwtl
push
sahf
add
lock
push
cmc
test
in
addr16
stc
popa
xor
push
adc
mov
or
jb
sbb
fsubp
pop
and
push
or
mov
das
sub
jmp
adc
inc
sub
pop
lock
insb
push
icebp
jne
movsl
inc
mov
or
jp
stc
psubusb
mov
cmc
adc
pusha
mov
in
test
das
inc
sub
andb
cld
sti
mov
test
jne
sbb
pop
jbe
test
xchg
inc
jmp
xchg
out
loope
xor
or
inc
shll
xor
inc
xchg
testl
es
rorb
arpl
stc
repnz
cmp
sti
js
lock
pop
mov
pop
cmp
add
inc
mov
cmp
and
outsb
insl
in
inc
sti
test
jne
jg
xchg
cmp
xor
jg
mov
out
mov
js
mov
xor
inc
and
mov
dec
dec
push
dec
mov
jl
mov
stos
mov
xchg
sub
xchg
aam
sti
mov
dec
repz
push
push
rclb
inc
sub
enter
je
adc
mov
insl
lock
mov
lret
lret
outsl
jge
cld
aaa
add
sub
or
in
add
and
mov
cs
mov
adc
imul
cwtl
jl
mov
cli
xchg
mov
fdivs
add
and
inc
dec
cmp
add
test
rol
mov
mov
stos
jo
pop
jb
std
aaa
xor
xchg
lret
ficoms
lea
outsb
in
and
and
les
dec
andl
loopne
pop
inc
pop
icebp
shlb
in
pop
aas
imul
mov
jns
popa
mov
cli
movsb
jge
pop
pop
nop
dec
fildl
stc
mov
popa
or
cmp
fwait
mul
dec
cmp
mov
push
pop
aam
pop
jmp
add
loop
shll
fisttps
test
jb
jmp
cmp
mov
and
mov
xchg
enter
sarb
jae
jecxz
pop
add
xor
cmp
jle
jle
jb
push
popa
mov
jmp
ljmp
testb
push
add
flds
xchg
cmpsl
daa
scas
lahf
push
add
add
out
add
lret
cmp
hlt
or
in
fisubrl
jge
adc
push
cmp
incb
icebp
sbbb
mov
pop
mov
xchg
add
xlat
mov
ss
in
pop
adc
or
insb
mov
incl
lcall
jl
js
sbb
sbb
mov
inc
mov
jne
mov
mov
xor
stos
imul
cmc
mov
mov
sub
xchg
xlat
pop
inc
jg
lock
ret
sub
sahf
decb
sbb
xor
lret
xchg
fmull
mov
push
add
lock
or
cmp
xchg
stos
outsb
dec
mov
fisttpll
push
sbb
push
pusha
xor
cmp
cmp
lcall
lahf
add
imul
xor
movsl
shrb
pusha
mov
andl
or
cmpsl
and
and
pop
sub
cmp
xchg
jnp
out
lahf
imul
fdivr
and
mov
xchg
sbb
xchg
fldt
pop
in
fmuls
dec
lahf
fmuls
or
jp
jl
ret
je
adc
jl
mov
sti
outsl
in
mov
pop
rcl
lcall
mov
incl
push
sub
cmp
or
sahf
sahf
cmp
fildl
icebp
and
mov
ljmp
xchg
stc
in
movb
xor
fs
insl
je
cmovne
in
or
push
sar
jb
pushf
outsl
std
movsl
loop
aaa
sub
pop
pop
mov
mov
cltd
fldl
hlt
lods
push
orl
or
sub
or
rol
mov
sbb
lret
shrl
hlt
sub
lds
outsb
jo
mov
inc
sbb
mov
testb
rclb
push
loope
sbb
cld
loopne
pop
adc
hlt
mov
xor
and
das
test
outsb
mov
inc
mov
adc
cmp
ja
jb
pop
aad
pop
and
xchg
jb
sbb
or
push
jg
inc
int
insb
aaa
lahf
lret
xor
mov
mov
adc
sub
sbb
jo
or
jmp
pop
sub
adc
adc
pop
cmp
and
sbb
adc
push
push
rclb
push
adc
pop
gs
mov
repnz
mov
dec
jmp
pusha
mov
pop
push
lock
outsl
pop
test
sub
pop
arpl
adc
cwtl
add
mov
lahf
fcompl
rcl
jbe
and
mov
xchg
mov
dec
or
push
and
cld
push
iret
pusha
inc
fdivr
movsb
mov
jmp
sub
inc
ffree
in
mov
xchg
cmp
imul
mov
js
ja
rorl
out
pushf
gs
loop
loop
dec
dec
or
ficompl
push
inc
jne
fucomi
xor
push
pop
mov
enter
in
pop
or
xchg
push
pop
into
in
fldt
cmc
icebp
inc
ss
lea
ljmp
xchg
in
gs
movb
das
dec
mov
sbb
lret
or
mull
cli
hlt
sub
mov
icebp
or
push
jg
into
aam
arpl
cmp
into
in
aad
sbb
add
dec
inc
pop
repnz
mov
mov
icebp
movsl
sahf
jmp
xorb
adc
int
push
inc
pop
push
or
enter
pop
pushf
pop
js
jmp
cmp
ljmp
leave
pop
xor
lods
mov
outsb
add
xchg
push
shr
outsb
add
jbe
lods
sbb
lock
test
jmp
sub
or
adc
negl
inc
xor
and
fbstp
js
mov
stc
xchg
or
mov
sbb
pop
pop
cli
das
jb
push
int3
xor
mov
pusha
mov
mov
faddl
nop
dec
mov
jne
aaa
test
xor
pop
lea
jmp
inc
or
movsl
lods
and
mov
popf
push
dec
ret
ljmp
push
push
subl
xchg
mov
arpl
ljmp
sub
aad
stos
out
out
dec
sub
test
lret
je
aaa
jp
fwait
cmpsl
mov
rcl
push
adc
sbb
in
sbb
addr16
call
test
movb
pop
cmp
mov
arpl
cmp
push
or
cmp
loopne
inc
sbb
sub
add
stos
or
repz
aaa
sub
imul
cmp
and
iret
xchg
jecxz
cwtl
and
mov
push
and
mov
outsb
jnp
leave
push
cwtl
arpl
sti
inc
frstor
call
scas
xchg
inc
lcall
loop
pushf
rorb
popa
sub
daa
hlt
and
mov
adc
inc
aas
sub
rolb
add
and
pusha
loope
rcll
int
es
aam
fldl
bound
push
lcall
push
push
imul
mov
pop
fsubrs
cmp
decb
xorl
jbe
lret
addb
jnp
mov
fisubrl
cmp
cmc
mov
sbb
ret
aam
jno
xor
mov
mov
xchg
in
sub
mov
add
aam
xchg
dec
push
push
fs
adc
push
jb
inc
jp
or
fisubs
fwait
call
std
inc
rorl
cmp
aas
pushf
and
xchg
mov
sbb
or
push
xchg
jg
or
adc
ret
in
inc
xor
mov
ja
sub
jnp
xor
roll
mov
lock
inc
fstl
or
inc
imul
push
shlb
adc
xor
lods
lcall
add
dec
pop
enter
fisttpl
shlb
stos
sbb
sbb
xor
lret
enter
adc
pop
or
outsl
add
sub
mov
mov
mov
test
lods
lea
push
std
xchg
push
xorb
pop
jp
fsub
clc
xor
mov
mov
dec
push
lock
sbb
push
xchg
sbbb
jl
add
bound
fldt
mov
jmp
insb
push
shr
adc
fwait
mov
xor
push
call
movsl
fadd
jb
and
ljmp
add
andl
insl
pop
sbb
xchg
andl
xor
mov
push
in
mov
shll
jle
xor
fld
jae
push
pop
mov
neg
out
arpl
orb
pop
sbb
rolb
inc
sti
call
clc
call
and
shlb
roll
adc
pop
fisubrs
roll
ljmp
adc
push
inc
mov
mov
sbb
outsb
fcmovnu
xor
stos
stos
in
and
add
mov
std
sub
arpl
xchg
test
xchg
pusha
push
mov
cmpb
mov
filds
notb
jmp
or
xchg
sbb
in
inc
repz
adc
les
jnp
leave
les
mov
into
adc
mov
pop
call
pop
xchg
cmp
adcl
imul
out
mov
cs
cmpsl
lods
lret
inc
adc
push
mov
add
pop
ss
xchg
cmpsl
mov
adc
stos
xchg
mov
arpl
jo
pop
or
cmp
pop
sbb
cwtl
sub
push
mov
add
adc
add
outsb
adc
push
mov
xor
xchg
jmp
cld
mov
popf
jae
mov
daa
mov
rcll
test
or
or
aad
mov
call
fmul
mov
pushl
mov
xorl
jb
push
and
inc
push
add
lods
loopne
out
xchg
js
or
mov
mov
testb
push
test
test
fbstp
ficomps
dec
test
fcmovbe
mov
rorl
add
ljmp
sbb
test
aas
add
stos
xor
sub
add
push
sub
inc
bound
push
xchg
push
call
or
outsl
lock
jle
dec
loop
cwtl
inc
sbb
fstl
xchg
mov
cmc
in
push
stos
jae
mov
xor
sbb
or
or
push
adc
add
sub
lock
les
pusha
lock
push
rclb
lock
movsb
add
or
sti
mov
jg
enter
rorb
loope
and
xor
mov
fs
adc
outsb
in
adc
xor
lret
std
iret
and
pop
fldt
inc
xlat
movsl
pop
pop
call
lret
ret
jecxz
jo
and
add
stc
push
jmp
push
repz
iret
sbb
imull
nop
lret
cmp
sub
and
enter
mov
push
aad
pop
test
mov
mov
inc
mov
test
push
rcr
popa
loop
nop
sub
fbstp
mov
adc
xor
push
sub
bound
push
ret
jo
and
adc
movsb
sub
popf
fs
add
jne
inc
mov
xchg
cmc
add
or
dec
lea
or
add
outsl
cwtl
out
dec
repnz
popf
lcall
and
lods
icebp
mov
shl
xchg
sbb
pusha
mov
cmpsb
into
or
xor
pop
add
cltd
jno
out
push
jle
stc
push
push
and
adc
nop
stos
mov
or
cmp
inc
insb
addb
and
dec
js
mov
mov
sub
mov
jg
test
xor
dec
push
xchg
push
les
test
and
daa
lods
outsl
mov
fistps
outsb
xchg
lcall
push
dec
or
sub
inc
bound
daa
jnp
cmp
rcrb
popf
imul
add
cmp
clc
cli
popa
dec
clc
and
shll
xchg
xchg
jae
adc
inc
ficompl
and
inc
aas
mov
push
xchg
adc
insl
xor
les
xor
sub
scas
nop
sub
inc
dec
hlt
cwtl
nop
inc
inc
pop
or
insl
xor
or
mov
mov
sub
pop
sbb
test
sub
ja
rcrb
add
xor
mov
mov
inc
or
dec
jb
or
add
adc
mov
mov
adc
or
mov
xlat
test
mov
into
mov
adc
add
or
iret
nop
outsl
mov
outsl
push
lock
pop
mov
sbb
test
fwait
or
xor
adc
push
push
mov
lods
push
popf
mov
mov
xchg
mov
jle
mov
iret
sbb
push
cld
push
push
and
inc
jle
clc
and
fcmovb
add
mov
adc
mov
aad
sub
idiv
dec
js
adc
test
arpl
mov
mov
push
movsl
adc
pushf
pop
rcll
adc
mov
xchg
punpckhdq
mov
mov
repnz
jo
mov
test
out
div
sbb
fs
xchg
jmp
inc
and
sahf
add
sub
jns
insb
dec
test
mov
out
vminsd
push
adcb
outsb
adc
or
lods
outsl
mov
in
in
sbb
xchg
pop
insb
sub
mov
jmp
mov
loope
pop
mov
sub
or
dec
mov
mov
push
cli
lds
adc
push
aas
roll
inc
insb
sbb
ja
mov
es
lret
jne
inc
popf
test
in
sarl
jge
push
loop
cmc
pop
and
jne
shrl
jmp
clc
pop
insb
movsl
sub
movsb
lret
or
or
jge
or
cmp
cld
and
and
loope
mov
les
aas
xchg
jo
fcomps
cld
add
sub
fildl
sbb
je
jecxz
mov
sub
and
inc
shl
sti
fistl
inc
mov
and
ret
je
sub
stos
fwait
js
std
sbb
dec
test
ljmp
and
inc
gs
and
das
out
push
imulb
js
loope
lahf
dec
clc
ds
cmc
push
jmp
out
xor
scas
jmp
int3
insl
sbb
adc
xor
ret
inc
pop
das
arpl
jmp
jl
pushf
lret
mov
ljmp
push
jp
jle
frstor
or
push
mov
dec
mov
jno
repnz
and
mov
std
test
mov
movsb
nop
and
mov
mov
ficoml
mov
ret
mov
je
and
aaa
push
push
imul
shrl
push
es
dec
sbb
dec
stos
fwait
xchg
mov
sbb
hlt
movsl
sti
rol
cs
jo
xchg
out
pop
dec
pop
mov
pop
cs
test
jb
inc
xchg
sbb
imul
cld
incl
ss
popl
ja
jle
inc
and
mov
or
xlat
inc
inc
xchg
fs
or
imul
inc
popa
pop
mov
cmp
pop
xchg
jb
data16
mov
bound
mov
inc
add
daa
loopne
orl
test
push
enter
jo
pop
loopne
push
push
stc
and
and
mov
and
sahf
xor
std
add
pop
fsub
adc
and
je
jle
outsl
mov
movsb
dec
pop
out
or
and
push
xor
push
je
xor
push
push
xor
notb
mov
nop
fildl
or
data16
pop
xor
pop
mov
add
pop
cs
add
shll
into
jecxz
mov
gs
mov
cmpl
negb
aas
in
push
push
adc
mov
push
nop
stos
sti
pop
addb
aam
xchg
mov
ficoms
rcrl
sub
pop
mov
inc
cld
aaa
inc
ret
mov
lock
adc
movb
inc
xchg
icebp
testb
in
mov
lahf
loopne
sarb
fcomps
fdivrl
sti
pop
repnz
push
insb
pop
and
dec
popl
ret
adc
mov
sar
pop
sbb
movsb
fimuls
mov
jg
xor
lahf
pop
test
test
jae
add
test
je
sti
int
movsb
inc
loop
push
int3
push
int3
adc
lods
inc
cwtl
mov
cmp
loope
inc
mov
xchg
ret
jg
rorl
pop
mov
and
nop
xchg
or
mov
cmp
clc
les
and
lea
push
and
es
sbb
mov
mov
pop
out
insl
sti
push
mov
xchg
mov
sbb
leave
movsl
mov
or
mov
or
mov
loopne
mov
jle
les
fildll
push
leave
push
push
cwtl
adc
or
mov
cld
mov
and
mov
test
or
call
push
jbe
imul
or
pushl
mov
mov
les
dec
pop
sub
adc
xchg
inc
push
das
or
frstor
test
sbb
in
push
rcl
push
push
insl
cmpb
imul
inc
push
addb
inc
daa
pop
test
jne
lock
daa
mov
and
mov
mov
insl
bound
mov
aad
fnstcw
jbe
andb
outsl
std
call
out
mov
loope
in
lods
lea
roll
je
push
out
scas
mov
adc
sbb
push
adc
std
cwtl
insl
pop
sbb
enter
sub
push
pop
dec
sbb
inc
in
out
sbb
and
xor
xchg
cmpsb
dec
shlb
outsb
outsl
xor
add
push
aaa
xlat
test
pop
clc
push
push
shrb
das
addb
xlat
sub
sbb
push
and
les
ja
lret
dec
dec
hlt
repz
cltd
les
and
push
and
jbe
mov
stos
pop
mov
je
or
jecxz
and
xor
add
test
pop
incl
lcall
clc
movsl
sti
push
push
push
mov
sbb
adc
cli
dec
das
dec
repz
mov
mov
jp
and
fisttpll
cmp
jg
out
stos
dec
aam
mov
xor
adc
xchg
popa
add
inc
jecxz
outsl
lods
xor
dec
pop
repz
push
sub
adc
mov
pop
adc
es
jmp
mov
xchg
js
pop
xchg
jbe
jno
xchg
test
out
xchg
outsl
mov
repnz
adc
arpl
fmul
stos
cmc
and
mov
add
in
dec
xorb
push
rolb
sub
test
jl
jecxz
test
sub
and
cmpsl
cs
dec
dec
inc
push
xchg
rcrl
mov
insb
fildl
adc
dec
xchg
mov
pop
js
stc
arpl
in
mov
and
jmp
das
insl
adc
xor
mov
inc
pop
add
jb
sar
or
mov
mov
test
insb
loopne
inc
pop
insl
cmpsl
call
jne
push
pop
push
sub
data16
or
push
inc
pop
ss
dec
nop
mov
add
xor
and
in
stos
fildl
push
or
test
outsl
icebp
inc
mov
xor
xchg
or
mov
or
xlat
mov
xchg
jle
imul
and
sbb
ffree
in
pop
or
call
sbb
dec
movsl
subl
mov
jbe
dec
sti
inc
sbb
pop
clc
sbb
mov
adc
clc
lcall
pop
jg
inc
addr16
mov
push
rcl
nop
insw
dec
and
loop
mov
add
es
dec
add
clc
sub
cs
loop
sub
push
aaa
aam
decl
sub
sub
and
les
shrl
mov
arpl
jl
stos
sbb
call
pop
aaa
cwtl
jg
mov
dec
lahf
xchg
mov
add
mov
lock
mov
clc
push
xor
imul
repnz
fsts
scas
push
push
pop
mov
daa
mov
cmc
shr
push
inc
dec
lds
jmp
xchg
jle
mov
and
sbb
incl
mov
jl
xorb
ljmp
pop
sbb
fiadds
cltd
arpl
push
das
lods
jge
mov
mov
pop
push
dec
pop
int3
jbe
mov
enter
sub
dec
ret
rorb
adc
test
mov
vmovddup
mov
pop
pop
push
and
popa
rol
mov
jg
pop
movsb
mov
or
imul
pop
add
xchg
mov
subl
outsl
mov
and
mov
incl
or
inc
je
dec
fisttpll
aas
mov
mov
repnz
add
in
dec
cmp
or
and
bnd
mov
out
cwtl
shlb
movsl
outsl
dec
js
cltd
or
out
push
sub
add
inc
sbb
jg
pop
std
inc
ret
sbb
imul
sbb
pushl
inc
jae
or
or
add
sti
and
cld
push
cmp
pop
ret
pop
mov
push
mov
or
cld
movsl
mov
push
sbb
xor
lret
test
imul
lea
paddsw
dec
out
dec
movsl
mov
inc
fbld
out
fstpt
adc
mov
jmp
sub
cmpsb
sub
fcom
aaa
xchg
out
test
xlat
mov
pop
dec
fsubl
in
fdivrl
imulb
aas
std
loop
and
icebp
aam
pop
scas
pop
fldl
mov
aam
add
push
add
insl
or
shrl
mov
push
aaa
into
pop
out
je
test
aaa
sub
aam
or
push
or
jno
inc
sbb
jge
mov
and
mov
push
aad
lret
or
mov
das
mov
mov
into
xchg
cmp
test
pop
rorb
push
sbb
addr16
in
in
das
sub
add
dec
adc
inc
and
sub
inc
hlt
daa
aaa
jmp
out
sahf
sbb
das
int
pusha
sbb
js
dec
bound
and
add
or
in
ja
adc
mov
mov
xorb
or
iret
sbb
pop
pop
push
das
mov
mov
jle
in
adc
lea
shr
lea
or
gs
pushf
inc
in
inc
imull
mov
mov
sbb
loopne
xchg
dec
or
push
inc
aaa
or
push
adc
mov
sub
push
and
push
adc
adc
fimull
je
xchg
pop
xor
fdivr
mov
xor
mov
lcall
insb
lods
lock
std
cmp
addr16
adc
mov
nop
outsl
aaa
jbe
stos
xchg
adc
ret
jo
inc
mov
xor
xchg
and
aam
das
pop
pop
pop
pop
mov
lock
xchg
lea
pusha
push
mov
ret
fidivl
or
xor
mov
popa
in
mov
sub
mov
lret
mov
jb
mov
pusha
push
loop
mov
fucom
es
dec
lret
sbb
jge
xor
or
mov
push
jnp
inc
pop
inc
inc
mov
jle
or
in
sahf
ss
xchg
push
testl
fisubs
int3
cwtl
es
xchg
mov
dec
fimull
bound
push
add
mov
ljmp
pop
mov
lock
ret
cmp
roll
mov
fnstenv
outsl
xchg
sbb
pop
aas
movsl
push
sbbb
or
negb
fisttpl
sbb
aas
popl
push
push
outsl
inc
adc
scas
sbb
mov
fnsetpm(287
cmpsl
mov
ds
nop
shll
test
pop
push
aam
cli
cwtl
and
dec
or
mov
stc
jecxz
mov
out
mulb
adc
sbb
popf
xor
fidivs
lahf
adc
sbbb
push
jg
fcomp
fldcw
mov
ds
sbb
or
pop
addr16
adc
xchg
xchg
shlb
outsl
mov
adc
lods
xorl
sbb
fildll
dec
and
push
rorl
add
add
mov
out
fisubrl
lods
mov
fiadds
mov
mov
mov
xchg
std
adcb
andl
mov
test
pop
lods
xor
add
pop
mov
in
pop
les
push
jb
cmp
loope
inc
pop
and
lret
sub
addr16
rorb
rorb
cli
testb
mov
lret
repz
call
aaa
jp
loop
das
testl
cld
dec
push
sub
loope
mov
mov
mov
icebp
clc
inc
mov
pusha
sub
sbb
adc
push
stos
icebp
fisttps
sbb
cli
xchg
mov
push
sti
and
jmp
sahf
push
mov
inc
rcrb
or
fisttpll
imul
in
sahf
pop
mov
je,pn
inc
jb
add
push
push
inc
lds
mov
mov
rcr
sub
pusha
xlat
out
jg
pop
inc
loopne
inc
push
div
ret
jno
xchg
xor
mov
xchg
hlt
aas
das
fdivrl
mov
jg
fstl
fwait
mov
insb
call
cmp
sbb
jg
lock
sbb
in
cmp
sub
mov
mov
cmp
shll
push
or
pusha
popa
mov
pop
push
lods
sub
pop
mov
scas
dec
push
fs
test
mov
or
adc
fstp
mov
lods
out
xchg
pop
sbb
movsb
mov
sarb
callw
leave
pop
jne
nop
int
hlt
xlat
inc
mov
jp
xor
cmp
popf
add
arpl
lret
xor
aaa
bound
or
fadd
sub
sub
je
pop
jb
lock
adc
push
in
iret
ja
dec
and
cmpsb
fistpll
repz
or
popf
inc
lret
cld
adc
add
pop
pop
hlt
push
insl
cmp
ds
sbb
pushf
leavew
push
das
push
scas
push
pop
push
pushl
pop
jb
popf
outsl
or
dec
adc
test
push
push
inc
mov
jle
fidivrs
pushf
jne
daa
dec
int
fsubrs
mov
ror
mov
mov
in
test
and
mov
inc
and
cmp
pop
les
adc
sbb
fsubrs
outsl
jl
in
or
jae
sarb
sub
sub
nop
jg
fsubrl
fadds
push
lods
push
mov
lret
pop
loopne
sub
sbb
dec
push
out
lods
add
inc
jg
push
insb
or
jne
mov
or
aam
lahf
scas
inc
imul
daa
in
mov
js
rcll
sub
add
sbb
hlt
mov
mov
sub
dec
xchg
mov
insl
mov
sub
lcall
sbb
fiaddl
pop
ds
or
sbb
out
scas
push
dec
mov
outsl
push
orb
ret
mov
stos
jbe
dec
inc
dec
sbb
movsb
jp
inc
push
clc
scas
cmp
lahf
add
fidivrl
addb
adc
inc
cli
inc
add
adc
mov
js
inc
mov
xor
in
adc
pop
insb
aam
inc
xchg
dec
inc
cpuid
sbb
inc
imul
cmp
cli
inc
dec
cld
jge
pop
pop
aam
push
push
mov
in
mov
pop
jne
mov
lret
jbe
mov
fdiv
pusha
push
xchg
fidivl
xor
aad
dec
lcall
sbb
pop
outsb
lock
xor
and
add
mov
push
add
cmp
pop
clc
jg
fs
push
add
add
sbb
mov
inc
ljmp
daa
inc
divb
cmp
sbb
mov
mov
shlb
adc
shll
ss
cmpl
jns
sbb
pop
push
inc
push
and
sub
ret
test
test
lock
cmpsl
add
pusha
sbb
mov
mov
call
orb
xchg
pop
pop
xchg
call
jae
add
ret
jle
jmp
popa
push
mov
add
insl
mov
bound
scas
xchg
or
pop
xlat
or
jle
inc
adc
push
sub
xchg
xor
pop
push
jb
push
xor
out
lret
movsl
sbb
mov
cs
lock
dec
aas
or
add
xor
push
in
push
mov
outsl
mov
push
sahf
stos
into
into
dec
divl
mov
movsb
nop
mov
nop
sbb
sbb
jg
in
mov
push
sub
cmc
lret
sub
mov
sub
test
ror
pusha
fistl
shl
outsb
xorb
mov
jo
lret
xchg
stc
leave
hlt
jbe
decl
dec
hlt
sub
lock
xor
std
into
stc
mov
mov
ja
lods
pop
cmp
fildl
dec
jecxz
int3
in
stos
insb
inc
and
or
jmp
cwtl
inc
push
les
sahf
fimull
in
push
push
inc
outsl
je
icebp
mov
insb
xorl
and
or
ret
mov
and
pop
int3
lcall
rclb
jle
xchg
mov
sub
jge
cmp
xchg
inc
cmp
push
pop
lds
xor
not
or
adc
add
daa
mov
mov
sub
sub
stos
lock
mov
mov
cmpsb
idiv
xor
mov
pop
movsb
pop
push
repnz
mov
daa
sbb
push
lds
es
xchg
mov
mov
mov
xlat
mov
test
aas
addl
add
push
xor
insb
dec
adc
dec
xlat
xor
xor
filds
loope
xor
ss
in
or
jae
and
leave
adc
in
push
nop
or
pop
xchg
stos
test
push
roll
sbb
hlt
mov
int
jns
adc
aam
push
or
ds
incb
sbb
aaa
sbb
loopne
sub
inc
rclb
adc
stc
pop
push
sar
cltd
pop
iret
mov
cli
fistps
scas
cwtl
or
push
push
jecxz
mov
mov
cli
adc
pop
dec
test
fcompl
xchg
dec
pop
sub
mov
negb
arpl
cs
loopne
or
iret
push
xchg
add
out
decl
cltd
fldl
fwait
sbb
and
xor
cmp
cmpsb
lret
mov
or
outsl
and
add
scas
mov
pusha
sbb
mov
add
xchg
mov
jmp
pop
fidivl
fwait
push
cmpsb
sbb
inc
add
adc
jg
jg
pushf
ss
cmp
lret
cmovae
mov
and
dec
scas
icebp
mov
lock
test
lds
cmp
test
pop
dec
pop
adc
ret
sub
sbb
rcrb
lea
mov
popa
push
jns
orl
xor
mov
push
add
jecxz
and
mov
mov
fnstsw
push
jg
insb
cmp
pop
mov
clc
xchg
xchg
sbbb
rorb
stos
mov
out
xchg
ret
add
fwait
mov
leave
xorb
or
or
in
ljmp
js
test
mov
mov
mov
mov
pop
out
adc
cmc
movsl
inc
jmp
mov
and
mov
stos
in
movsl
stos
fists
jae
aas
mov
cld
mov
mov
or
dec
pop
and
mov
jno
pop
aad
push
daa
xor
es
ret
sbb
cwtl
in
ja
pop
clc
pop
mov
sbb
jle
inc
push
xor
scas
adc
lahf
cmpsl
and
ficoml
mov
mov
test
rol
aad
mov
fscale
and
hlt
lods
mov
mov
nop
mov
nop
add
decl
push
sbb
fwait
jnp
cwtl
or
cltd
xor
enter
push
lods
sbbl
mov
shl
mov
or
sub
add
push
les
fldl
cmp
xchg
xchg
mov
std
rol
aas
or
jg
mov
lods
xor
mov
inc
adc
mov
inc
dec
pop
out
outsl
ljmp
pop
movsl
fcoms
incl
lods
or
repnz
cmp
adc
insb
xor
daa
shll
push
test
xor
sub
stos
popa
out
jno
outsb
cld
jbe
or
and
idivb
bound
cmp
dec
cmp
lods
das
lahf
sbb
lahf
cmpsb
pop
test
push
movsl
mov
cwtl
stos
push
adc
sti
sbb
sub
stc
cmp
add
mov
clc
fstpt
adc
pushf
mov
rcrb
int3
stos
jmp
push
jne
jnp
fxch
fcmovu
or
mulb
adc
leave
arpl
cltd
sub
pop
outsl
inc
cld
inc
lahf
enter
jp
into
jno
call
pop
aam
or
rol
mov
mov
sub
out
adc
das
fdivrl
adc
repz
xor
cwtl
mov
sbb
push
nop
or
cli
push
push
mov
lods
sub
loope
je
es
mov
outsl
pop
xchg
pushf
add
sbb
xchg
call
add
sub
add
sub
nop
add
mov
hlt
mov
push
movsl
cmp
xchg
outsb
add
mov
push
stos
mov
push
les
outsl
in
sbb
cmp
cs
int3
pop
xchg
fbstp
inc
jle
cli
sbb
lret
cmp
inc
cmp
shll
mov
pusha
ds
inc
and
mulb
pusha
ja
sbb
or
aam
pop
daa
cltd
mov
and
sbbb
inc
pop
lret
sbb
shrl
lahf
stos
imulb
sbb
inc
cs
outsb
mov
jg
push
adc
das
add
add
scas
push
push
jmp
or
ja
sbb
sub
inc
lea
insl
push
inc
push
pop
shll
jl
jle
inc
lahf
add
pop
orb
mov
insb
test
inc
cmp
jg
rcrl
jle
push
out
pop
xlat
lret
or
push
jecxz
adc
mov
pusha
sub
jae
adc
cwtl
test
xor
pushl
aad
sbb
cmpsl
lret
fiaddl
mov
pop
adc
jo
dec
repz
jns
mull
jne
cmp
push
out
mov
enter
pop
ret
mov
pushf
insb
and
gs
call
push
xchg
fdivl
mov
pop
pop
clc
cmp
iret
xchg
jmp
jge
inc
addb
pop
mov
jle
repnz
sbb
xchg
or
mov
out
xor
hlt
pop
shr
push
mov
add
jg
mov
jns
in
icebp
sub
arpl
call
into
push
inc
or
fiadds
pop
std
sbb
sub
scas
iret
mov
add
inc
shlb
mov
mov
imul
jbe
xchg
fs
pop
mov
sub
jae
pop
loop
fnsave
push
clc
inc
mov
insl
mov
das
sub
mov
ret
lcall
pcmpeqd
test
aaa
pop
rcrb
nop
popa
mov
add
pop
adc
inc
mov
in
stos
mov
inc
std
in
ret
bound
mov
mov
icebp
xchg
sbb
mov
inc
pop
adc
and
sub
mov
icebp
dec
jnp
add
mov
or
test
scas
pop
mov
add
pop
mov
cmp
jbe
mov
aam
pop
and
add
mov
xchg
nopl
or
cwtl
mov
and
insb
xor
out
dec
lcall
mov
xchg
inc
lock
outsl
mov
cwtl
hlt
mov
aaa
insl
das
roll
inc
or
outsl
pop
clc
mov
scas
xchg
cmp
sub
pmaxub
pop
jo
sbb
test
jg
jge
mov
lods
adc
lret
loopne
sub
dec
sbb
andb
in
push
jg
push
outsl
xor
pop
add
add
adc
andb
cld
cmp
outsl
mov
lea
push
sub
stos
mov
mov
add
pop
push
jbe
out
das
sub
addr16
or
fnstenv
fcomps
pop
stos
ljmp
mov
xchg
aam
lret
sub
xor
lcall
adc
in
xchg
je
dec
or
or
sbb
sbb
sbb
jl
test
or
xchg
lcall
inc
pop
dec
and
lcall
pusha
daa
mov
add
cmp
jne
int
movl
cli
dec
pop
lds
in
push
pop
sub
addr16
mov
ret
out
orl
imul
imulb
ja
jmp
daa
dec
or
mov
fwait
dec
pop
js
ret
in
push
fwait
xor
mov
fists
in
ljmp
pop
scas
jns
cmp
pop
sub
cltd
in
outsb
movsb
or
shlb
testl
push
mov
outsb
mov
in
xchg
ljmp
inc
mov
mov
lods
mov
or
mov
pop
jne
test
push
inc
scas
or
sar
xchg
outsl
sub
add
call
mov
jge
jbe
jle
xchg
mov
outsl
stos
jmp
mov
enter
ljmp
mov
inc
loop
rol
in
call
repnz
lea
aaa
jp
call
ja
popl
bound
dec
jo
adc
loope
fidivs
push
fcompl
and
or
mov
or
pusha
sbb
test
outsl
and
xor
pushf
mov
add
pop
dec
daa
jg
pop
mov
inc
adc
mov
pop
add
fnstenv
fmul
xorl
rorl
call
cmp
mov
cmp
dec
bound
add
or
adc
fiaddl
dec
stc
stc
rorb
sbb
test
xchg
mov
pop
and
push
mov
jmp
movsb
xor
ss
jns
jbe
cmp
push
and
out
pop
imul
cli
cwtl
inc
stos
push
jo
xor
jns
inc
xor
xor
or
iret
sub
pop
add
in
ret
pop
inc
test
jb
push
pop
mov
mov
movsl
sub
stos
fidivrl
mov
dec
rorb
outsb
scas
ret
pusha
xchg
xlat
jmp
loopne
lods
idivb
mov
sbb
ret
jle
push
add
xchg
or
mov
sub
jl
shlb
bound
push
sub
lods
push
and
or
mov
stos
in
push
mov
ss
js
sub
outsl
lret
push
lods
pusha
and
shrb
fistps
outsl
mov
ret
lds
jb
sbb
cwtl
dec
stos
jo
xchg
stc
mov
lea
ljmp
or
sarb
add
cld
or
negb
repnz
or
adc
sub
mov
outsb
fucomp
enter
dec
push
bound
test
inc
ja
das
iret
adc
mov
mov
stc
inc
sahf
adc
jbe
test
jo
shlb
popa
mov
aaa
sti
sbb
loope
or
inc
dec
adc
mov
adc
inc
adc
test
pop
inc
dec
xchg
mov
test
mov
insl
xor
fdivrl
mov
and
imul
clc
pop
decb
dec
inc
inc
mov
das
push
inc
xchg
push
and
cltd
adc
shl
lret
push
inc
cmc
icebp
jbe
stos
lds
and
mov
or
or
clc
or
dec
loopne
jle
mov
jge
ss
cmc
les
js
sub
jmp
xlat
lahf
push
ss
jmp
push
cld
filds
out
or
and
push
pop
bound
jae
or
sbbl
ljmp
frstor
sbb
in
sar
adc
or
cmpsl
fs
xor
ret
ljmp
ret
adc
out
sub
test
loop
dec
xchg
dec
stos
push
into
sbb
in
pop
jecxz
jp
lock
sbb
das
jl
rcrb
jl
add
je
pop
leave
aam
add
icebp
xor
scas
divps
cmp
das
sub
mov
and
adc
cmpsb
xor
fcomp
outsb
lea
repnz
pop
push
mov
popa
jecxz
pop
mov
jmp
pusha
jmp
inc
inc
jge
je
mov
sbb
les
adc
add
jmp
sub
mov
aaa
jecxz
xlat
rcl
lods
cli
mov
out
fnsave
inc
not
std
and
pop
sbb
aaa
shll
xchg
add
testb
cmp
fwait
xor
mov
or
lock
push
pop
sti
fwait
pusha
test
jmp
xor
adc
aaa
mov
jp
fisubs
insl
fst
lods
jo
leave
sub
in
sbb
es
push
cltd
rcrl
cs
dec
jnp
and
or
cwtl
out
mov
and
and
xchg
mov
rorb
pop
mov
std
pop
cmp
inc
dec
mov
lahf
fptan
pop
mov
push
sub
outsl
cltd
jbe
jbe
daa
sub
pusha
insb
in
stc
adc
xor
xor
clc
push
push
repnz
lcall
xchg
cmp
push
mov
les
sahf
xchg
cvttps2pi
jl
sub
dec
sub
pop
call
mov
inc
xchg
push
adc
xchg
pop
into
mov
not
clc
add
dec
icebp
mov
test
xlat
sbb
outsb
aas
xor
inc
add
inc
xor
ljmp
into
cmp
xor
and
mov
stos
addr16
call
dec
lahf
pop
and
sub
xchg
in
xor
sub
bound
ja
fisttpll
sbb
add
add
sbb
pop
ss
push
mov
aam
inc
xchg
cli
jp
gs
push
jae
aam
lods
sbb
cmp
jl
divb
test
cmp
sub
jb
std
ds
lods
inc
aaa
xchg
mov
cmp
cmp
cmpsb
and
call
roll
jp
mov
lds
xor
fdivrs
shr
nop
or
dec
cmpsl
xor
mov
out
add
mov
sbb
mov
ja
or
jae
test
aaa
movsb
fs
neg
outsb
pop
jecxz
movsb
xor
enter
xor
nop
mov
aad
mov
and
lcall
addr16
daa
or
int3
js
push
adc
mov
testb
inc
adc
lret
hlt
ja
sub
leave
or
sub
out
divb
fsubs
dec
popf
adcl
out
jle
movsl
mov
push
cmpsb
insb
xchg
xor
and
test
or
call
xor
ds
and
xchg
push
fidivl
pop
jge
and
clc
fildll
add
push
or
shlb
insb
fildl
shrb
xchg
mov
insl
pop
mov
push
inc
fdivr
push
jne
xchg
std
jge
xchg
and
stc
xor
lea
lret
jbe
in
pop
loopne
pop
shlb
xchg
int3
jecxz
and
ja
orl
jo
fiadds
xchg
std
pop
push
add
fwait
and
fisubrl
insb
les
pusha
or
cmp
xor
mov
inc
movsb
shlb
fisubl
lods
test
push
jo
js
inc
outsb
std
in
sbb
rcrb
ss
mov
fcmovnu
mov
dec
outsl
movsl
mov
xchg
inc
pop
push
aaa
nop
mov
mov
pop
fsubrs
out
dec
sub
and
loop
decl
test
mov
cmp
cmovns
addr16
pop
js
xor
sbb
sbb
cmpsb
add
sbb
sbb
sub
fbstp
push
es
stos
push
sub
lahf
pop
inc
pop
test
ljmp
jp
add
stc
or
push
loopne
adc
xlat
in
jns
inc
nop
fwait
mov
sahf
shll
sbbl
cltd
in
cli
in
inc
jmp
call
enter
ret
adc
pushl
cmpsl
mov
outsl
loop
rclb
int3
test
adc
cld
mov
js
or
push
pmaxub
push
sub
mov
xchg
adc
lods
ljmp
mov
sbb
mov
mov
sub
pop
loopne
and
je
stos
mov
pop
hlt
push
mov
ret
clc
in
mov
mov
adc
mov
rorb
xchg
daa
mov
ds
test
rolb
mov
bound
popf
movb
jns
and
roll
pop
lahf
dec
fcmovne
fsub
sub
retw
xor
negb
push
jns
xor
xor
lcall
inc
xchg
dec
loopne
in
jbe
stos
and
pop
into
hlt
add
ret
ljmp
fldenv
jo
ljmp
hlt
sub
outsl
jg
icebp
cmc
mov
inc
push
or
pusha
inc
in
jg
adcl
mov
roll
jmp
mov
in
pop
mov
mov
cmp
out
mov
push
hlt
test
mov
mov
jecxz
in
inc
adc
adc
mov
pushf
or
push
mov
inc
imul
dec
jmp
out
push
jne
lret
xchg
adc
out
mov
cmp
mov
std
stos
lods
pop
je
mov
xchg
jb
lcall
mov
insl
je
jmp
addl
mov
push
incl
mov
and
in
outsl
add
test
cmp
arpl
imul
fisttpl
jno
inc
jle
cmp
sbb
jg
icebp
push
fwait
xor
push
jp
push
cwtl
outsb
ror
push
mov
adc
shrb
lock
xchg
xor
out
cwtl
fldl
shll
pop
clc
mov
xor
fnstcw
mov
or
outsb
mov
push
mov
push
sar
je
lods
pop
stos
int
xchg
sub
out
lods
mov
shlb
sub
pop
and
pop
and
xor
aam
xchg
dec
std
add
or
ds
cmp
push
adc
mov
nop
mull
mov
imul
adc
mov
in
es
lock
insl
sbb
nop
mov
call
xor
add
bound
nop
cmp
fisttps
clc
or
mov
test
jg
insl
cmpsb
add
xchg
ja
jl
mov
push
stos
loope
movsb
and
in
movsl
pop
lods
popf
cmp
xchg
cmpsl
outsl
inc
cmpsb
incl
pop
pop
fs
add
add
dec
xor
cmp
lock
mov
jno
icebp
movsl
inc
jnp
je
push
mov
xchg
push
inc
in
fdivr
rcl
jecxz
add
xchg
leave
out
mov
or
fisubl
dec
add
dec
sarb
and
pop
and
push
push
mov
cli
mov
xor
stos
cltd
push
fstl
lods
mov
pop
sahf
push
enter
sbb
pop
jnp
jmp
mov
and
orb
das
push
inc
jg
inc
jecxz
sbb
adc
adc
cld
dec
jmp
lahf
cs
rol
inc
sbb
aaa
mov
pop
into
mov
rclb
fcmovnb
call
cs
push
insl
test
xor
mov
mov
lret
pop
es
mov
xor
jne
test
adc
xor
pop
mov
xor
jle
push
test
xor
sub
sbb
cs
sub
mov
insl
sbb
jle
and
sahf
outsl
jno
loop
fildll
xchg
jbe
sbb
sbb
or
adc
add
mov
fnstcw
fisttpl
fisttpl
sub
out
adc
fdiv
pusha
mov
inc
hlt
orl
clc
insb
jne
outsb
jbe
push
jle
gs
nop
testb
call
mov
push
jge
mov
call
je
or
sbb
rcrb
xchg
js
or
call
rorl
mov
iret
xor
pop
jp
filds
pop
addb
and
ffreep
xor
mov
cmp
das
mov
decl
jecxz
xchg
pop
push
sub
xor
roll
add
and
fs
ret
mov
pop
insb
outsb
adc
scas
icebp
and
std
incl
mov
mov
hlt
or
push
aas
lods
mov
pop
jmp
jmp
xchg
aam
repz
lret
ljmp
sahf
mov
xchg
cwtl
dec
inc
mov
fs
mov
and
sbb
insl
jnp
lods
mov
test
push
dec
push
loopne
fcompl
mov
int3
loope
aas
pop
and
sbb
ja
ljmp
add
mov
xchg
xor
xor
ja
pop
in
jmp
ss
gs
mov
and
sbb
dec
pop
mov
jbe
call
js
cmp
cli
pop
ss
sub
aas
mov
adc
add
xchg
shl
xchg
data16
mov
fwait
outsb
jge
cmc
jns
sub
xor
sbb
cmp
int3
cmp
lret
mov
mov
or
sti
or
mov
fisubrs
sub
repnz
das
sub
inc
sub
les
aam
incl
and
xchg
test
popa
rcr
je
test
clc
nop
push
add
call
jmp
push
adcb
movsl
sub
lahf
dec
inc
popf
xor
xchg
into
push
jecxz
dec
sub
mov
adcl
mov
popf
stos
pop
push
negb
add
sub
push
jmp
sbb
inc
sub
mov
ljmp
add
add
shll
ja
push
inc
mov
bound
outsl
push
arpl
int
add
add
sub
dec
add
mov
mov
insl
movl
stc
mov
jae
add
dec
subl
push
movsb
popa
outsl
inc
adc
mov
mov
adc
sub
add
rclb
stc
xor
in
ficomps
sbb
je
ss
xlat
push
sbb
cmp
and
mov
cltd
push
push
cld
mov
ja
push
clc
pop
push
cld
roll
inc
push
clc
in
cli
add
inc
mov
xchg
lock
or
pop
push
negl
mov
inc
inc
in
push
push
je
sub
add
fs
test
mov
dec
and
shrl
ss
mov
push
xchg
js
inc
mov
les
aas
in
fwait
add
sub
call
dec
dec
in
push
xor
fwait
loope
xor
mov
sarl
pop
lock
adc
je
sbb
enter
rcl
fdivl
push
stc
fisttps
push
push
in
xor
add
fists
aaa
pusha
andl
lea
out
xor
ss
and
push
dec
push
mov
fsubrs
addb
xor
stos
cmc
js
fcoms
and
loop
xor
pop
bound
mov
insb
sub
adc
dec
mov
hlt
xor
fs
lret
in
push
ja
fs
pop
sub
mov
lods
push
cmp
mov
xchg
sub
push
dec
mov
inc
idivl
cld
orb
shll
push
sub
pop
jle
test
push
outsl
push
fldt
dec
pop
push
dec
test
xor
or
call
or
popa
fs
push
lock
jbe
pushf
push
call
popa
js
in
jo
aam
mov
mov
push
ds
lods
push
call
xor
fldenv
in
arpl
insb
inc
cmp
int
enter
ss
insl
jecxz
add
mov
ret
outsb
sub
pop
inc
sbb
pop
sbb
inc
ret
pop
mov
inc
js
data16
loopne
iret
fcmovnb
jae
or
inc
jl
xchg
jnp
cli
cmp
or
je
add
and
add
adc
add
adc
sub
loopne
imul
rorl
adc
add
rolb
sub
mov
je
aaa
push
mov
mov
cmp
push
xor
rcrl
fiaddl
icebp
inc
mov
cmp
dec
int3
sub
mov
add
inc
mov
ss
int
lret
mov
ret
pushl
sub
mov
inc
js
pop
adc
dec
add
out
scas
bound
dec
and
out
pop
sbb
xor
dec
and
add
mov
out
fidivs
ljmp
rolb
jl
test
enter
push
fbstp
outsl
push
es
idivl
push
push
fs
shrl
rolb
rcrl
mov
out
xor
std
rcrb
fdivrs
arpl
inc
add
out
scas
mov
aam
repz
bound
lock
xlat
fldl
iret
push
mov
les
sti
xor
xlat
xchg
bound
mov
sbb
inc
inc
dec
or
mov
ss
mov
std
shr
dec
lods
adc
or
xchg
loopne
imul
das
rclb
cmp
loop
pop
pusha
mov
xchg
imul
cmp
and
dec
mov
or
cs
lods
mov
sub
outsb
xor
jecxz
jnp
cmpsl
cmp
jb
jo
ficomps
or
sub
and
mov
bound
js
loopne
cmp
and
sahf
pop
shll
xlat
mov
out
inc
int3
mov
add
js
in
dec
je
dec
cmp
mov
jmp
dec
test
mov
or
cmp
loopne
dec
inc
mov
xchg
je
jb
shrl
icebp
in
pushf
cmp
mov
gs
push
fldt
insb
addl
incl
mov
jns
fs
lock
aaa
imul
fadds
jno
insb
dec
mov
xor
inc
push
push
sub
repnz
inc
push
push
jb
pop
sub
loope
js
inc
popa
dec
jno
mov
push
outsb
ja
xor
push
lods
jl
jns
xchg
pop
add
mov
mov
js
lret
push
inc
xchg
pop
mov
push
jp
jl
xor
movsl
or
or
mov
pop
xchg
add
jo
fisubrs
in
rolb
mov
mov
popa
into
arpl
cli
sti
insl
lds
push
mov
addr16
jns
xor
add
dec
call
push
push
fisttps
xchg
mov
fiadds
sbb
jbe
and
push
std
pop
jb
in
out
push
inc
fsts
imul
into
or
lret
sbb
and
insb
inc
ss
xor
cltd
push
sub
jbe
cmp
xchg
xchg
lea
or
rclb
popa
out
inc
fs
mov
sbb
adc
imul
cmc
in
inc
push
insb
addr16
jb
xchg
add
and
sbb
pop
int
mov
jb
in
cmp
shll
mov
push
out
jo
sarb
dec
ss
pop
push
and
push
push
push
xor
sub
pop
lock
xor
sub
bound
dec
push
mov
sub
dec
pop
inc
imul
push
xchg
lret
aaa
cmpsl
push
mov
cmp
add
test
cmp
pusha
sub
pop
inc
push
inc
lret
leave
pop
mov
mov
rorl
xor
xor
dec
sub
push
je
rolb
push
fadds
pop
or
and
sub
xor
mov
push
dec
test
jbe
cmp
arpl
and
into
cmpsl
pop
subb
jmp
aaa
push
pop
mov
arpl
inc
aaa
push
imul
insb
sbb
xor
scas
enter
push
jns
cmpsl
xchg
xor
or
jo
jno
in
cmpsb
pop
push
xchg
push
gs
icebp
pop
cmp
enter
sub
jns
sub
xor
sahf
push
fsts
xor
pop
adc
sub
mov
add
inc
inc
pop
mov
adc
shll
lock
popa
mov
in
jb
out
mov
mov
js
inc
movsb
push
js
xor
enter
mov
sub
jmp
mov
dec
pop
popa
daa
fld
xor
mov
jo
loope
mov
js
in
xor
jle
mov
jns
jo
push
inc
or
rorb
test
insb
inc
dec
jo
push
push
pop
push
sub
cli
push
ja
push
and
sahf
sbb
ja
xchg
outsl
xor
push
push
push
inc
jo
cmpsl
adc
iret
mov
sti
aaa
lds
xchg
or
std
pop
jno
adc
orb
movups
add
pop
clc
push
das
mov
inc
cmp
fidivs
dec
push
add
pop
jp
movsl
sbb
insl
push
jmp
and
fsubrs
mov
dec
push
sbb
or
jne
fsub
jg
lret
fbstp
data16
addr16
aas
les
in
inc
adc
or
pop
push
lods
and
gs
imul
sbb
popa
cmc
dec
jp
inc
loop
mov
and
sbb
mov
pop
sbb
arpl
push
adc
loopne
pop
push
add
dec
ret
mov
mov
adc
push
inc
cmpsb
pop
sbbl
movsb
lock
jle
cmpsl
dec
das
sub
push
mov
lret
or
pop
jns
shlb
mov
rol
and
jo
cmp
scas
push
xchg
loop
push
inc
mov
cli
dec
inc
mov
adc
sbb
dec
push
les
shll
outsl
inc
xor
in
test
and
push
in
lods
js
push
cmp
jl
adc
pusha
xor
xchg
aaa
ja
clc
leave
push
adc
mov
aaa
push
imul
mov
add
cli
push
mov
push
push
jb
add
pop
jae
sub
inc
decl
clc
mov
popf
ret
movsb
lea
aaa
jo
mov
int
mov
je
gs
jmp
push
push
outsb
or
insl
loopne
inc
dec
lea
cmpsb
dec
sub
jmp
mov
inc
gs
push
jle
loopne
dec
dec
lds
outsb
inc
sub
mov
push
add
das
mov
adc
add
les
adc
test
cmp
int3
pop
xchg
dec
inc
test
mov
ret
pusha
data16
ret
adc
rorb
adc
pop
fists
addr16
out
inc
dec
outsb
xor
das
je
ret
adc
stos
gs
xor
push
dec
aam
out
jmp
stos
push
out
jbe
dec
add
jo
mov
xor
dec
or
jmp
add
adc
shlb
sbb
mov
in
inc
ret
in
pop
hlt
jbe
xor
mov
roll
xor
dec
rol
xlat
cmpsl
or
imul
adcb
inc
int3
fiaddl
push
shlb
cmc
andb
into
adc
sbb
mov
or
inc
dec
mov
jo
ja
mov
add
dec
sub
add
push
cmp
popa
inc
inc
push
les
loopne,pt
push
ss
js
xchg
fsqrt
sbb
pop
push
push
jl
xchg
sub
mov
cmp
sahf
inc
inc
xor
xchg
fs
xor
push
icebp
sbb
sub
clc
sbb
cmpl
data16
jge
into
xchg
sbb
je
push
hlt
and
or
clc
fdivs
push
ret
subl
imul
bound
aaa
arpl
test
into
dec
sbb
add
inc
mov
sub
adc
sub
sbb
mov
push
xor
fs
xor
and
xor
je
notl
xorl
std
fs
sub
mov
add
inc
dec
incb
push
dec
lods
movb
mov
xchg
pop
mov
add
or
pusha
pop
fwait
aam
dec
in
cmpsl
pop
mov
arpl
daa
jmp
aaa
xchg
adcl
ret
add
aam
sahf
sbb
push
push
add
into
mov
xor
push
or
jb
sub
jne
fs
dec
bound
out
outsb
mov
subb
pusha
lods
dec
cmc
in
roll
imul
mov
incl
dec
mov
bound
push
je
pusha
adc
fsts
daa
pusha
mov
jbe
add
xacquire
push
push
or
push
cmp
or
addl
or
jne
dec
push
push
add
enter
dec
mov
pop
rorb
ret
and
lahf
push
icebp
js
cmovle
dec
jne
stos
in
mov
clc
xlat
dec
pop
pop
sbb
ficoml
or
xorl
jb
incb
lret
inc
outsl
js
push
jne
mov
daa
lea
adc
cltd
repnz
push
inc
dec
insb
ret
sbbl
or
mov
out
jl
mov
imul
mov
jl
push
inc
addr16
dec
inc
insb
dec
frstor
jecxz
jb
push
in
pop
dec
test
pop
sbb
in
xchg
lock
jno
push
aaa
or
push
test
mov
sbb
test
pop
cmp
xchg
sub
js
pop
sbb
lahf
mov
dec
push
pop
lods
jb
test
loopne
hlt
jae
dec
fsubr
add
push
or
jp
inc
insl
xchg
imul
adcl
adc
rorl
xor
aad
addr16
shr
ss
dec
cwtl
stos
jbe
jbe
ja
inc
push
dec
rcrb
mov
js
sar
stos
rcll
jmp
test
inc
icebp
mov
xor
insl
imul
jnp
mov
inc
mov
mov
outsb
jb
push
adc
sbb
or
ss
lahf
test
add
dec
movsb
xchg
dec
addr16
push
add
add
popf
arpl
orl
xor
call
lret
ret
push
cld
outsl
bound
push
dec
jns
cmp
jae
push
push
rcll
adc
push
jbe
jne
mov
sbb
mov
enter
or
sbb
jmp
inc
test
add
mov
das
or
call
or
fisubl
inc
cvttps2pi
cs
ds
stos
shlb
les
or
loop
add
clc
arpl
das
mov
sbb
jns
push
add
jl
adc
subl
shlb
hlt
rcrb
dec
sarb
gs
ret
aaa
hlt
or
mov
loopne
and
in
cmpsb
xor
mov
mov
inc
cmp
data16
sahf
cmc
mov
mov
xor
pop
cmove
pop
bound
das
push
outsl
imul
into
add
jo
dec
arpl
call
in
mov
lea
adc
dec
inc
or
adcb
out
ss
xor
jmp
shll
inc
mov
dec
add
out
subb
and
aas
imul
inc
insl
xchg
fdivrs
sbb
adc
pop
and
pop
and
inc
inc
inc
popl
syscall
js
inc
jae
adc
rorb
sub
pusha
mov
fldcw
push
fisttps
push
fsubr
push
rcrb
lods
mov
push
mov
gs
insb
or
clc
sbb
or
shr
insb
jno
push
and
pop
adcl
test
imul
adc
inc
shlb
cmp
js
dec
dec
call
ret
inc
stos
cmp
or
mov
cmp
jge
lcall
add
dec
rorb
dec
mov
lcall
sub
push
loop
push
je
push
push
pop
arpl
add
in
sahf
inc
imul
dec
mov
inc
dec
mov
lods
fcomps
mov
push
sbb
inc
add
sub
inc
or
popl
dec
pop
pop
push
dec
mov
sub
xor
jo
xchg
loop
cltd
outsl
out
orb
pop
xchg
add
js
adc
lods
sub
dec
data16
mov
add
xor
testl
fs
lds
loope
push
lods
adc
inc
pusha
enter
push
aad
pushf
cmp
js
inc
jo
mov
push
cld
inc
aaa
mov
pop
int
mov
xor
adc
stos
outsb
cmp
cmp
mov
jne
pop
imul
insl
adc
insl
outsb
pop
call
push
push
xor
add
mov
sub
inc
mov
imul
xchg
popl
jecxz
adc
imul
ds
dec
inc
mov
jns
adc
sahf
fldt
jo
inc
stos
scas
dec
sbb
pop
andb
or
jg
adc
sbb
addr16
add
mov
xchg
ret
test
push
loop
jno
data16
repnz
xor
arpl
ret
xchg
mov
insl
orl
and
mov
ffree
sbb
push
xchg
popa
push
pop
xor
movsb
cmpsl
mov
repnz
shll
shrb
outsb
push
fwait
push
and
xor
push
inc
or
dec
jle
test
lcall
call
insb
inc
push
pop
adc
jnp
out
pop
sub
add
addb
std
jb
xor
pop
and
push
aas
notb
push
imul
lock
inc
push
lret
outsl
mov
outsb
sub
dec
adc
xchg
stc
loopne
jg
js
inc
inc
add
cmpsl
shrl
pop
adc
pushf
hlt
pop
movsb
or
ret
rorl
addb
iret
loop
js
js
lcall
dec
xchg
clc
sbb
test
lods
repz
mov
test
or
pop
mov
adc
inc
push
push
fnstcw
popa
adc
lock
lods
push
pop
nop
add
adc
mov
mov
push
imul
push
call
aaa
inc
cmp
dec
mov
sub
push
aam
in
repz
add
xor
jle
mov
roll
xor
lock
roll
repz
dec
pop
xlat
mov
inc
push
mov
push
fldcw
lods
cld
cs
ret
test
mov
inc
push
or
orb
insl
inc
das
add
mov
or
pop
stos
push
mov
and
pop
repz
roll
std
add
jo
add
pavgw
add
sahf
loopne
jb
add
xchg
sbb
mov
mov
mov
push
fwait
in
cli
enter
adc
in
packsswb
cmpsl
out
add
in
pusha
add
mov
in
sub
adc
dec
sti
inc
add
lea
jle
sub
lahf
add
test
in
aad
arpl
and
inc
pop
sub
mov
shll
adc
mov
out
add
jnp
add
pushf
mov
bswap
adc
es
fisubl
mov
sbb
into
and
add
push
xor
cwtl
adc
lret
mov
jl
lea
inc
cld
or
insl
xor
fisttpl
testb
or
rclb
and
pxor
mov
hlt
sbb
or
frstor
add
or
ret
test
in
dec
push
nop
xchg
jg
add
mov
subb
mov
mov
out
xchg
lahf
sbb
lahf
lea
je
sarb
add
xchg
out
cmp
std
fstpl
mov
outsb
ja
sub
push
shlb
mov
in
fwait
xchg
inc
push
in
add
shlb
and
test
xor
shlb
or
pop
mov
loope
xor
inc
and
insb
xchg
cmpsl
xor
icebp
sub
out
inc
imul
loop
loopne
insl
aaa
or
outsb
out
and
dec
imul
cmp
xchg
jo
mov
dec
ljmp
xor
jbe
stos
lret
out
pop
sbb
or
popl
or
xchg
cmp
enter
in
add
xchg
shrb
nop
pop
sub
push
leave
popf
and
mov
lret
movl
lock
or
pop
sbb
push
xor
imul
mov
into
loopne
fcomip
into
je
inc
jb
or
mov
rep
test
adc
addb
push
dec
enter
push
nop
hlt
cmp
rcrl
les
mov
loopne
fs
dec
pushf
imul
rcl
jp
mov
scas
xor
pop
or
or
movsl
add
mov
cmpsl
xchg
popa
fmull
xchg
or
call
imul
mov
or
int3
push
faddl
bnd
mov
adc
cs
and
xchg
push
fwait
out
mov
jne
cmc
repz
push
and
sti
mov
xchg
pop
scas
mov
in
popf
rolb
dec
mov
leave
repnz
pop
into
sbb
loop
nop
jge
mov
mov
adc
or
cltd
movsl
xorl
int3
xchg
mov
sbb
xor
cmpl
add
mov
or
loopne
ret
rorb
je
mov
sub
cmp
fcmovb
mov
repnz
inc
push
jmp
adc
push
or
pop
lds
xchg
roll
push
add
mov
push
xor
lret
inc
mov
xchg
int
fsubrp
xchg
dec
test
adc
xchg
push
subl
lcall
popa
mov
hlt
hlt
mov
mov
ret
sbb
jnp
leave
das
and
sbb
cmp
mov
sub
data16
in
dec
add
test
jmp
add
xchg
mov
mov
jae
jns
xchg
push
stos
sahf
jp
push
push
mov
xor
jecxz
pop
xchg
test
cmc
addl
jmp
subb
cmp
hlt
or
stc
jbe
push
lea
dec
popf
scas
lcall
sub
adcl
fdivl
push
cmp
bound
adc
mov
xchg
sub
cmp
jl
sti
xlat
mov
mov
in
lock
xchg
jae
adc
and
inc
push
enter
cld
dec
pushf
ds
pop
negl
mov
pop
iret
add
arpl
cltd
jg
adc
pop
sarl
popl
scas
or
add
add
data16
adc
shll
jnp
ja
add
cmp
xchg
cmp
aad
jmp
add
xchg
add
and
outsb
mov
shl
mov
ds
lock
rorl
xchg
mov
sahf
jne
add
cmp
mov
out
cmp
push
imul
push
pop
adc
sbb
scas
xchg
adc
add
add
mov
pop
fistps
xchg
movsl
or
jo
mov
out
jbe
int3
add
mov
add
in
inc
adc
inc
mov
sarb
xchg
add
sbb
ret
rorb
ds
mov
adc
icebp
imul
add
enter
mov
or
repz
pop
mov
cmc
fcoms
and
call
jb
push
xchg
push
sbb
jbe
sbb
inc
cmp
std
mov
mov
leave
clc
addl
cmpsl
jmp
or
in
dec
add
js
or
popf
or
adc
test
and
fcoms
xor
sub
sbb
andl
jns
in
push
test
xor
add
jb
push
insl
stc
fwait
xchg
sbb
inc
repnz
dec
xor
mov
sub
fs
dec
dec
inc
xchg
dec
fwait
ret
divl
push
xchg
insb
js
jle
xor
jnp
dec
mov
sub
sub
xchg
adc
add
cmp
mov
sub
or
mov
mov
lret
test
cld
fbstp
cs
sub
adc
sbb
dec
jl
xchg
xchg
mov
xchg
jo
mov
sbb
ljmp
test
cltd
add
jb
int
inc
sbb
sbb
or
xor
pop
mov
adc
push
mov
lret
in
inc
mov
fnsave
push
mov
xor
jno
pop
xor
insl
hlt
pop
dec
jmp
push
cmp
mov
inc
mov
lds
xor
cmpsl
xchg
rcl
out
adc
and
xor
mull
shlb
data16
push
das
imul
and
pop
sti
adc
sbb
inc
pop
ss
imul
mov
add
sti
cli
mov
jns
inc
dec
call
scas
pop
jmp
fneni(8087
jmp
mov
es
pop
jg
data16
outsb
mov
cmp
mov
add
cmp
inc
add
or
scas
jns
call
imul
mov
push
mov
cmp
nop
lahf
pop
div
sbb
aad
jecxz
call
orb
iret
popa
xlat
andb
loopne
dec
movl
adc
sub
jns
pop
in
inc
adcl
adc
test
xchg
cmc
push
leave
adc
xor
push
xchg
out
ficoms
adc
and
call
ss
mov
fdivl
adc
mov
nop
mov
sub
or
es
sahf
xchg
sbb
pop
add
jge
int3
mov
add
scas
xor
ret
lods
or
icebp
call
mov
fstp
mov
and
cmp
jno
popf
pop
jae
shl
insl
pop
out
sbb
xor
lahf
push
insl
test
sahf
mov
pop
lock
imul
push
adc
mov
in
inc
jmp
push
push
cli
mov
ljmp
sbb
jne
jmp
inc
cmp
dec
out
or
js
dec
fsubl
test
popa
mov
or
xor
inc
jp
cmp
inc
or
fimull
repnz
push
jecxz
stc
jne
and
sbb
fnsave
fs
enter
enter
fsubrs
mov
ljmp
fadd
and
and
ret
std
enter
out
and
clc
or
mov
pop
sub
jo
jg
and
ss
add
sar
adc
in
in
notb
ja
and
push
movsb
mov
into
sbb
and
mov
lahf
mov
xorb
pop
sub
jne
pop
out
jle
loop
or
ret
incl
loope
ret
cld
fstps
sub
insb
icebp
jecxz
push
test
cmpb
xchg
hlt
cmpsb
xor
jb
fwait
jmp
sub
or
push
insl
sub
and
pop
adc
lcall
xor
xchg
movsb
adc
stos
mov
cmp
loopne
pushl
inc
inc
add
cmp
pop
add
adc
out
add
xor
dec
cmc
mov
popa
push
lods
push
aas
shrl
imul
mov
pushl
addl
lock
inc
cmp
add
mov
mul
push
mov
or
dec
inc
xchg
jns
mov
sti
shr
inc
cmp
or
adc
addr16
movsl
in
dec
mov
cmp
pop
mov
out
out
adc
movsb
mov
cld
jmp
into
mov
and
pop
mov
mov
stos
sub
stos
pop
fs
arpl
fisttps
push
out
adc
pop
aas
lea
icebp
addb
inc
sbb
cmp
push
inc
aam
jo
jne
cmp
call
inc
out
aam
xchg
dec
sbb
notl
lock
sar
xor
fdivrs
cmp
pop
bound
out
andl
aaa
dec
mov
inc
das
dec
movsb
jp
jmp
lods
seta
mov
xchg
inc
adc
jecxz
push
xor
mov
mov
xchg
pushf
lock
add
divl
jbe
pop
scas
push
sbb
sbb
shr
mov
xor
dec
jnp
push
lahf
shll
xor
fistl
fcmovnbe
inc
or
mov
movsb
test
test
xchg
add
pop
loopne
ret
scas
neg
fpatan
stc
mov
jge
shl
sub
xchg
jo
pop
jo
decb
sbb
mulb
enter
cmp
cmp
jmp
adc
add
je
sub
stos
repnz
sub
stos
jecxz
into
stc
xchg
sub
cmp
aam
fdivrs
aam
mov
pop
ss
iret
cwtl
or
mov
fiaddl
addr16
adc
pop
in
movd
adc
mov
adcb
pop
mov
icebp
clc
add
test
and
imul
mov
stos
movl
push
call
cmc
mov
insl
dec
insb
mov
xor
rorl
lahf
and
mov
cmpsl
adc
inc
movsl
enter
in
xor
sti
adcl
mov
mov
ret
aas
test
mov
loopne
enter
fs
gs
push
push
test
sti
cmp
cli
ljmp
jecxz
mov
adc
outsb
dec
lods
push
and
dec
mov
loopne
loope
and
call
lret
push
or
gs
sbb
aaa
add
pop
pop
push
lock
inc
and
jp
jo
into
into
out
int3
or
or
and
jecxz
add
add
test
lret
call
pusha
inc
idiv
mov
rclb
stos
xchg
fcoms
dec
xlat
dec
negl
ret
rolb
sub
shrl
mov
mov
clc
or
or
cmp
sbb
mov
xor
std
push
jno
xorb
xor
fyl2xp1
in
loop
pop
mov
jnp
add
sbb
in
lds
mov
inc
rorb
adc
pusha
arpl
or
jp
xor
mov
out
js,pt
cli
xor
inc
pop
jno
mov
xchg
xchg
mov
dec
int3
pushf
add
js
lods
mov
jne
mov
sub
push
push
adc
lea
push
pop
sarb
lock
imul
fisttpll
or
dec
xchg
sbb
and
xchg
cs
outsb
jbe
lret
jp
das
dec
arpl
out
xor
adc
dec
fsts
and
and
arpl
jp
sub
sar
hlt
sbb
loope
fildl
lods
mov
xorl
pusha
push
shlb
adc
pop
cmp
pop
xchg
and
aaa
mov
or
xlat
les
push
jle
push
cwtl
mov
aam
outsb
pop
and
inc
inc
ficompl
mov
and
popa
jbe
mov
stos
inc
sbb
outsl
mov
inc
pop
sbb
push
in
aam
inc
add
js
roll
push
fs
jne
pop
mov
push
pop
imul
or
sbb
adc
mov
add
and
and
sti
pusha
pop
or
xchg
sbb
cwtl
insl
jl
jno
add
rol
outsb
das
fidivrl
jns
popf
or
lock
sahf
push
push
sub
dec
cli
aaa
mov
and
dec
inc
gs
ret
add
aad
fs
mov
sbb
sub
insb
push
mov
dec
xor
mov
clc
and
dec
and
sub
cwtl
and
push
adc
call
xor
xchg
std
pop
nop
adc
pushf
sub
jecxz
sub
mov
fcoms
movsl
inc
cmpsb
pop
test
lods
std
inc
popf
fsubs
stos
lcall
sbb
jl
test
jns
nop
adc
popa
dec
inc
xchg
shlb
adc
lods
pushf
mov
jno
pusha
iret
jle
test
xor
xor
and
mov
push
aad
lods
push
call
sbb
mov
gs
pop
hlt
or
sbb
js
jo
cmp
clc
out
cmpsb
movsb
add
shll
ficomps
test
xlat
call
xor
xchg
imul
jnp
jo
lret
out
and
jl
pushf
lea
out
lods
push
jae
out
bound
dec
sbb
mov
loop
sbb
add
mov
cmp
pop
je
and
es
add
adc
and
mov
sbb
stos
jmp
cmpsb
cmp
adc
adc
shl
mov
push
cmp
hlt
loopne
sarb
xor
cli
insl
test
call
scas
cmp
adc
or
test
adc
rol
int
ret
mov
out
out
or
mov
cmc
shll
sahf
test
mov
mov
add
push
pop
inc
jp
and
sbb
loope
inc
push
mov
test
inc
mov
pop
mov
mov
iret
adc
fdivr
icebp
cmc
ja
repnz
push
outsl
jmp
aad
cmpsl
and
mov
inc
test
xchg
loopne
cmpsl
and
test
mov
bound
shrl
test
sub
sahf
lods
dec
in
clc
inc
push
or
stos
insb
jp
dec
push
cwtl
js
jmp
and
jle
sub
popa
mov
inc
ret
xchg
shl
inc
stos
js
nop
jecxz
ljmp
sub
mov
pop
cmc
ret
test
xor
cmp
inc
cmp
mov
inc
pop
imul
imul
mov
push
adc
jbe
shrb
pusha
pop
cmovo
xor
mov
dec
push
and
pop
fcompl
leave
nop
add
sbb
mov
or
scas
add
pop
pop
fs
in
push
mov
hlt
adc
cld
clc
mov
ljmp
out
or
jo
gs
xor
fst
and
pop
out
fstpl
jmp
pop
xor
ret
das
hlt
popf
jl
dec
dec
popf
adcl
pop
sbb
mov
cli
adc
xor
add
and
xor
xor
mov
inc
push
mov
cmp
aaa
pop
jbe
mov
ret
arpl
mov
lock
push
ret
dec
loop
ficoml
test
sub
xchg
dec
sbb
std
adc
mov
hlt
jp
adc
rcll
outsl
sub
call
jmp
pop
xchg
xor
and
xchg
lods
hlt
push
insl
loop
dec
push
ds
cmp
iret
cmc
cmpsl
mov
aaa
sbb
daa
cmp
inc
or
clc
mov
lret
jbe
add
xchg
or
pop
sbb
fcoml
mov
ret
stos
cmpsl
js
sti
jle
inc
adc
push
std
test
sub
adc
ss
test
movsb
push
dec
xor
mov
or
testb
push
into
inc
xor
and
cmp
cmp
adc
push
jl
in
mov
enter
aam
jmp
dec
xchg
xchg
lods
mov
xchg
and
stos
out
movsl
lods
aas
pushl
daa
inc
ds
insl
lds
push
pusha
pop
sub
and
vminss
jle
pop
mull
add
and
xlat
ret
cmp
and
jl
shll
and
xlat
mov
ret
cmpsl
or
jl
xor
repz
js
pop
xor
mov
push
icebp
jmp
sbb
orl
bound
int3
add
adc
subb
push
inc
out
pusha
mov
add
iret
xchg
cmp
outsb
adc
push
dec
or
jbe
xchg
xor
rorb
nop
cli
mov
and
bound
mov
ficoml
mov
jmp
cmp
rolb
mul
push
adc
dec
add
xor
adc
push
dec
add
lock
imul
push
jne
pop
jb
cld
jmp
lret
pusha
ja
cmpsb
mov
and
loop
vandnpd
stos
sbb
and
and
mov
mov
sub
lds
lea
jae
inc
xor
sub
lcall
aam
jecxz
cli
ret
orb
adc
jbe
adc
xchg
mov
adc
js
jg
ja
stos
mov
mov
loop
test
mov
add
pop
jne
stos
int3
aas
movsl
sbb
mov
push
sarl
icebp
mov
mov
adc
pop
in
nop
hlt
jae
scas
les
lret
jmp
push
mov
repz
cmp
adc
adc
cld
adcl
and
sub
xor
out
data16
lea
inc
movsl
jp
test
cld
inc
cmpsb
add
mov
push
mov
add
lahf
pop
mov
call
sbb
dec
inc
lock
ja
in
add
mov
adc
adc
fnstsw
mov
and
scas
add
arpl
daa
je
lock
fdivr
push
jge
arpl
ficoms
fisttpl
icebp
lds
mov
jne
adc
mov
inc
das
cs
xchg
shll
aas
lds
dec
jb
mov
lock
cmp
shlb
jmp
sahf
fisubrs
adc
fisubs
mov
mov
ja
je
sbb
cmpsl
mov
je
addr16
stos
or
xchg
das
mov
jp
sbb
or
inc
xlat
pushf
push
add
dec
ljmp
add
adc
icebp
push
cltd
cmp
sbb
loop
shl
push
daa
aas
or
arpl
ficompl
push
adc
sub
mov
fidivrs
xor
inc
es
jg
movsb
addr16
mov
push
push
lret
call
push
push
dec
xchg
add
mov
inc
or
lods
mov
ljmp
orl
inc
cmpsb
ficoml
xchg
pushf
sarb
hlt
das
xor
lods
and
andb
jge
xchg
jo
push
mov
lret
mov
imul
loope
mov
pop
mov
cs
push
or
xor
adc
xchg
ja
popf
mov
push
mov
outsb
fisubrl
daa
or
mov
pop
and
fmull
cltd
cmp
push
mov
movsl
test
mov
scas
xor
and
pusha
out
xor
les
xchg
xchg
xchg
adc
adc
or
mov
jbe
testl
leave
xor
jp
stos
bnd
push
aad
and
ljmp
shrb
xchg
aam
xor
jmp
or
daa
loopne
xchg
arpl
flds
pusha
sbb
mov
int3
outsl
cmc
cltd
daa
mov
mov
jnp
mov
push
mov
imul
je
test
es
bnd
pop
dec
push
cld
out
decl
sub
sbb
cmpsl
push
rcrb
mov
push
and
rcrb
push
xchg
in
push
cmp
push
xchg
sbb
clc
cmp
mov
mov
stc
addr16
xchg
adc
sbb
push
sarb
cmpl
imul
movsl
sti
cltd
sbb
inc
insb
add
lds
test
cmp
cmp
sbb
pop
into
sub
pusha
push
aas
push
test
inc
push
lcall
or
and
inc
pop
xchg
insl
cs
and
ja
xchg
fimull
add
insl
ret
pop
and
and
ja
mov
mov
in
outsl
aad
lds
push
mov
mov
jp
mov
mov
dec
insb
inc
test
jno
pop
mov
test
sub
test
push
leave
std
cmp
bound
sub
cmp
popa
inc
repnz
mov
jp
sbb
push
data16
mov
or
add
jnp
dec
pop
test
sbb
popa
fcomip
sub
lods
and
cmp
mov
add
ljmp
inc
sub
out
pop
mov
jle
popa
xchg
lock
lock
ljmp
inc
mov
sbb
sub
push
adc
lahf
and
mov
sub
xchg
daa
pusha
call
repnz
cmp
mov
xor
int3
sbb
andb
mov
out
add
pusha
sbb
out
cs
inc
jmp
mov
in
jbe
xchg
test
loopne
lock
lock
imul
mov
xchg
mov
mov
mov
or
and
and
push
cmp
cmp
inc
cmpsl
mov
sbb
jbe
mov
lock
dec
xchg
ret
popf
cltd
pop
push
xor
inc
inc
pop
aam
xchg
or
push
lock
and
dec
lret
jg
mov
rorl
cmp
jp
cmp
inc
mov
adc
mov
push
scas
testl
in
arpl
push
xchg
push
rcr
dec
leave
stos
dec
les
repz
out
xchg
mov
cltd
sahf
add
fwait
icebp
insl
sbbl
cld
mov
cmp
pop
inc
cld
arpl
cmp
int
cmp
loop
push
sahf
bound
or
sahf
sbb
pop
mov
mov
mov
lock
mov
jns
hlt
add
xchg
lods
mov
and
sub
es
push
fisttpl
leave
aas
sti
mov
cmp
add
jge
fstpt
in
scas
es
pop
addr16
lret
adc
jae
mov
jmp
mov
das
sbb
movsb
fs
std
xchg
scas
mov
dec
cwtl
dec
das
rol
pusha
push
mov
aaa
push
jmp
das
les
lret
test
out
movsb
clc
push
mov
stc
mov
scas
roll
dec
push
xor
pop
jae
aaa
cltd
push
add
loope
pop
jo
sbb
dec
int
xor
lcall
mov
and
inc
or
mov
cmc
lret
scas
aad
inc
push
aas
jb
jo
mov
scas
pop
ss
leave
mov
outsl
pop
ja
popa
andl
and
jno
mov
aas
sub
test
pushf
sbb
jp
sub
or
sub
dec
fadd
jo
sub
mov
inc
push
lret
loope
aas
pusha
sbb
adc
jg
mov
cld
sbb
lods
lret
jg
adc
sti
adc
add
shll
xchg
adc
pop
inc
cmp
and
leave
pop
scas
cltd
mov
jge
push
in
add
out
iret
loop
sbbb
cmp
loop
into
ret
mov
ficoml
mov
pop
xchg
or
loop
xor
hlt
mov
or
aam
leave
sbb
mov
rcr
aam
test
mov
dec
inc
les
ffree
dec
out
xor
add
addr16
out
testl
into
adc
push
xor
and
rorb
lahf
push
add
cmp
arpl
pop
ja
mov
inc
shrb
nop
and
sub
mov
ret
fadds
adc
fst
scas
pop
adc
pop
mov
add
pop
subl
cmp
rorl
mov
bswap
jns
call
popf
out
fnstsw
test
cmp
addb
lret
push
push
pop
cwtl
sti
pop
mov
mov
popf
pop
mov
outsl
mov
test
cmp
jno
fs
mov
or
xor
cmp
stos
sub
cmp
xor
adc
or
sub
mov
cmp
popf
or
ficomps
pop
mov
dec
sti
icebp
sub
cltd
mov
and
push
xor
pop
ja
push
lds
sbb
out
div
mov
push
xor
je
xchg
xchg
xchg
add
mov
lea
out
adc
fsubrp
aaa
push
test
pop
pop
test
dec
push
or
lock
daa
jg
fdivs
in
outsb
pop
push
xchg
in
int3
xchg
push
add
insb
and
ss
dec
jmp
inc
dec
shlb
imul
addr16
cmp
cs
mov
push
int
sti
ficoms
push
clc
dec
inc
in
mov
sbb
outsl
lahf
scas
cwtl
outsl
popa
movsb
push
mov
mov
cmc
sbb
cmpxchg
test
popf
cmp
loope
jbe
mov
or
adc
notb
dec
sbb
outsb
cld
js
mov
js
idivl
dec
cmpsl
fists
push
stos
mov
cld
or
rolb
loopne
dec
out
outsb
mov
insl
insl
xor
mov
mov
outsl
call
mov
inc
aam
sarl
or
fadds
test
outsl
inc
call
mov
call
add
das
jne
jno
popf
xchg
pop
fdiv
add
fdivrl
arpl
call
mov
jmp
sbb
enter
andl
mov
rcrb
push
xor
cmpsb
adc
cli
cmp
mov
dec
scas
sbb
ja
inc
cltd
bound
mov
gs
in
mov
mov
rorl
int
loop
dec
int
mov
add
pop
and
pop
les
mov
lods
xor
add
inc
cld
mov
and
mov
pop
icebp
lret
cld
jo
je
lahf
ret
jle
je
push
dec
lock
push
xor
mov
ret
push
sahf
push
outsl
insl
xlat
nop
pop
jle
pop
mov
nop
sbb
xlat
mov
sub
cli
xchg
int
popf
xor
js
in
fsubs
cld
mov
sahf
outsl
les
insb
rolb
mov
or
dec
jns
xlat
call
stos
ret
fadd
and
rcl
orl
sarl
mov
test
gs
into
stos
test
jge
cld
js
jbe,pt
shll
adc
aam
js
pop
and
shl
test
loope
stc
das
add
pop
adc
and
outsl
ret
enter
inc
jae
inc
adc
jl
push
out
shlb
cmpsl
subb
mov
push
pusha
test
mov
inc
mov
sbb
adc
pusha
push
into
jbe
adc
insl
cltd
in
mov
pop
idivl
pop
outsl
jae
fisttps
xchg
icebp
mov
shl
js
jnp
adc
cmp
dec
lcall
pop
sub
push
shrb
jmp
inc
mov
es
adc
js
mov
adc
jg
xor
sbb
aas
xchg
mov
xor
jecxz
out
lds
sub
sub
push
pop
jnp
xor
in
addb
cmp
cwtl
adc
aaa
js
enter
mov
jne
enter
inc
pop
mulb
cwtl
addr16
in
repz
adc
imul
cmp
push
and
ss
pop
adc
cmpsb
fiaddl
pop
jo
mov
loopne
jmp
subb
adc
jle
dec
adc
mov
and
clc
btr
add
adc
dec
lea
call
mov
cmp
shll
adc
aas
dec
add
push
jb
mov
mov
dec
xchg
fsubrl
sahf
add
push
or
add
shl
in
repnz
cmp
mov
movsb
inc
xor
mov
inc
push
lock
gs
lods
inc
test
dec
aaa
xor
mov
mov
dec
inc
adcl
inc
cmp
sahf
xchg
pop
add
lock
je
in
push
add
xchg
mov
mov
cmp
mov
repnz
pop
mov
adc
std
ljmp
pop
xor
jg
test
arpl
roll
mov
lcall
xchg
mov
jne
minps
or
cmpsb
mov
in
call
sahf
lods
inc
enter
outsl
jbe
lret
cmpsb
pop
fisttps
adc
dec
out
popf
mov
xor
in
pop
pop
xor
adc
adc
repnz
cmpsb
jmp
in
jg
pop
mov
add
lahf
fcomps
js
pmuludq
inc
pushl
sub
add
and
cs
mov
cs
insb
ds
insb
js
or
inc
mov
enter
stos
push
into
fildl
mov
mov
std
push
fidivrs
sbb
add
adc
shl
outsl
stc
sbb
ja
lds
inc
dec
insb
adc
add
and
cld
pop
out
ljmp
and
or
mov
icebp
adc
dec
stc
cwtl
scas
movb
mov
mov
lcall
jg
inc
jne
test
scas
or
inc
or
bound
xlat
mov
adc
xlat
push
cmp
cmp
sub
je
pusha
cwtl
in
dec
imul
scas
cwtl
sbb
mov
or
aam
std
push
sbb
cmp
add
test
dec
lret
pop
mov
jno
sub
mov
push
outsl
rcll
sbb
xlat
insb
adc
xor
push
in
sub
mov
add
loop
popf
push
iret
orb
pop
fnstenv
nop
adc
push
adc
js
insl
or
fwait
pusha
mov
es
pop
xor
test
pop
movsl
mov
pusha
xchg
sub
bsf
mov
out
mov
aaa
push
push
xchg
adc
adc
dec
js
inc
leave
arpl
sub
enter
fadds
fadd
push
fldl
popf
fistps
jg
loop
adc
cmpsl
icebp
je
jg
rcl
test
outsl
mov
mov
lret
mov
ret
imul
mov
mov
sbb
cmp
mov
mov
mov
in
sbb
popa
lds
rcrb
int
or
xor
sahf
stc
adc
ret
fistps
mov
push
lret
pop
cmpsl
sub
push
dec
mov
ljmp
mov
sub
jle
jb
or
push
inc
and
gs
adc
lock
jmp
add
lods
cmpsb
mov
push
sub
dec
cmc
adc
imul
add
xchg
stos
andl
sarl
pop
das
fisttpll
inc
popf
mov
pop
jmp
ss
mov
jge
mov
test
jne
mov
out
inc
push
filds
test
pushl
and
mov
jcxz
into
cwtl
pop
jbe
stos
fadds
pop
sahf
mov
sub
mov
sbb
in
lock
lods
cmp
jg
push
jle
push
bts
fcmovne
xchg
arpl
and
or
cmp
fsubrs
in
jl
sarb
mov
loop
jl
sbb
ret
xchg
and
les
inc
or
rcl
lret
inc
mov
mov
das
arpl
cli
addb
jecxz
lcall
shll
mov
mov
pop
jb
mov
ror
dec
xchg
js
insl
jmp
iret
ss
into
mov
cmp
push
hlt
push
adc
add
sbb
push
and
adc
mov
shrl
aad
xchg
mov
ss
mov
mov
dec
and
js
inc
sahf
inc
sub
pop
std
add
and
and
add
pop
inc
sub
into
cmpsl
jle
loop
dec
xor
push
in
add
sbb
mov
pop
andb
iret
xorb
fs
lods
push
subb
dec
or
dec
loopne
xor
out
shlb
pop
movsl
adc
sbb
cld
or
jp
hlt
jl
and
cmp
mov
dec
es
daa
shrb
cmp
xchg
fdivp
test
hlt
testl
clc
and
movsb
sbb
lds
xor
xchg
in
mov
pop
mov
and
outsl
daa
out
lret
cs
xchg
fs
or
test
xchg
xchg
lods
xchg
addl
sub
imul
int3
hlt
pop
dec
cmpsl
stos
xor
ja
inc
and
mov
inc
test
and
cmpsb
lods
aam
or
inc
sbb
lds
cmp
push
mov
xlat
jbe
and
in
fldt
mov
and
aaa
adc
pop
push
fdivs
addr16
dec
inc
xchg
sbb
push
in
sbb
shll
jp
jge
js
sub
lds
jp
iret
shll
cmp
int3
aas
xlat
jne
sti
xchg
lock
sub
mov
loop
mov
mov
mov
cmpl
or
inc
stos
flds
lcall
hlt
lds
shll
sub
stos
ret
dec
xchg
rcrb
inc
mov
jno
loopne
setge
jp
push
push
incb
inc
mov
and
aam
dec
test
adc
pusha
lods
scas
mov
add
mov
stos
dec
out
adc
lcall
lds
ret
mov
xor
das
shrl
sbb
mov
psllq
adc
cmp
sub
les
cmpsl
dec
add
sbb
stos
jmp
rcl
jnp
cwtl
mov
dec
cwtl
fdivl
add
mov
fs
and
mov
adc
cld
or
fiadds
dec
adc
cmp
fdivs
cld
push
outsb
push
pop
inc
hlt
dec
cmpsb
and
adc
psubq
cmp
sbb
add
xor
pop
call
sub
out
pop
outsb
mov
cmpsb
jecxz
imul
ljmp
loop
push
aaa
pushf
shl
hlt
lret
push
xlat
push
sub
test
push
dec
popf
sub
push
cmp
lcall
les
sti
adc
sbb
jbe
and
cmp
add
loop
bnd
adc
xlat
jge
inc
mov
cmc
jmp
push
cmpsb
dec
mov
mov
fidivrs
mov
mov
mov
mov
addr16
xor
and
cli
data16
push
repnz
pop
roll
mov
xor
in
fimuls
mov
pop
add
cmp
fcoms
repnz
lock
push
fsts
sbb
loop
mov
movsb
xor
jnp
push
fdivrs
clc
mov
sar
push
insl
int3
and
add
test
add
jmp
call
pop
push
xchg
xlat
mov
or
bound
test
out
jmp
insb
sub
arpl
dec
cmpsb
mov
xchg
adcl
push
mov
scas
mov
cmpb
or
inc
mov
sahf
mov
inc
std
add
push
cmp
pusha
es
pop
pop
and
loopne
sub
lock
ret
cltd
lods
or
stos
test
cmp
or
movsb
sbb
insb
shll
mov
jnp
and
outsb
lahf
pop
mov
insl
outsb
out
mov
sbb
sub
adc
cmp
jo
mov
dec
lcall
repnz
cs
push
bound
pop
pop
cwtl
adc
movsl
call
inc
inc
rolb
addr16
xor
andl
push
adc
push
repnz
sbb
push
mov
scas
pushf
jns
hlt
es
in
inc
pop
mov
mov
mov
scas
inc
dec
jmp
push
aam
cmp
mov
pop
push
lock
pop
into
xchg
popf
subl
insl
sub
hlt
sub
int
lock
popf
dec
icebp
inc
push
mov
in
sbb
leavew
iret
sbb
pop
jbe
std
aaa
lcall
cmpsl
stc
inc
xor
add
and
sbbb
pop
je
sub
cmp
leave
inc
dec
inc
std
xchg
push
adc
adc
insl
lods
aaa
mov
sbb
daa
popa
mov
ret
and
mov
scas
inc
add
stc
ds
rolb
enter
cmp
jnp
fstl
imul
cmp
shrb
mov
jecxz
lods
push
ret
fistpl
dec
negb
dec
mov
and
pop
adcb
cmp
jmp
iret
jae
mov
shll
mov
iret
mov
and
xchg
fs
inc
fisttpll
mov
hlt
or
xor
fldt
lock
push
sbb
xor
jmp
lods
repnz
fucom
subb
movq
push
pop
incl
dec
orl
lcall
adc
shll
push
xorl
ss
les
orb
stos
and
testb
scas
mov
xchg
lcall
and
sub
mov
cmp
sub
ret
xchg
adc
push
loop
test
imul
lea
jecxz
rol
jo
cmc
lock
mov
cli
out
cmp
lock
test
sbb
sub
jl
les
mov
and
adc
loop
sahf
lcall
scas
xor
insb
add
push
pop
out
ljmp
or
idiv
iret
aas
mov
lret
jbe
jl
scas
cld
xor
push
js
inc
dec
decb
stos
add
clc
mov
aas
pop
or
mov
mov
mov
clc
mov
mov
in
and
dec
mov
icebp
pop
dec
xor
out
inc
mov
and
mov
xchg
int
ds
in
jge
jle
inc
or
and
push
ja
and
icebp
aas
cmp
ret
aad
dec
push
jmp
adc
or
push
jp
cmpsb
and
xor
into
aam
iret
in
and
lcall
mov
mov
dec
push
je
push
mov
or
es
mov
and
stos
jbe
xchg
sub
sbb
adc
sti
pop
lcall
cmp
jae
xor
ja
push
mov
xchg
and
or
xchg
out
scas
xorb
xor
push
add
inc
mov
mov
shlb
and
dec
das
mov
xlat
fmul
inc
xchg
ret
lds
aam
mov
divb
sbb
into
rcl
out
jo
xor
ljmp
mov
hlt
jge
mov
xchg
mov
inc
inc
add
aaa
shlb
iret
das
insl
aad
mov
sub
or
xchg
and
sbb
loopne
lock
pushf
orl
sarl
loope
push
sbb
jb
je
leave
pop
sbb
pop
cs
push
inc
adc
insb
int3
pop
arpl
mov
lock
leave
test
xchg
pop
test
add
ds
popf
jmp
or
nop
and
push
xchg
mov
push
xor
in
cmp
jge
push
outsb
add
sub
pop
sbb
sbb
repnz
mov
cmp
stc
aas
les
xor
inc
push
adc
mov
xchg
xchg
push
and
mov
icebp
loopne
push
rcr
lock
imul
iret
arpl
pop
jnp
in
pop
jp
data16
test
mov
add
lcall
mov
push
mov
fcoms
jge
adc
fbstp
add
test
movsl
adc
push
stos
xor
cmp
nop
cld
mov
adc
add
negb
leave
pop
call
mov
add
mov
test
jge
mov
cmp
hlt
jo
adc
mov
jo
sbb
lea
pusha
mov
adcl
or
or
jecxz
mov
cmpb
fcomip
xchg
fwait
cmp
test
jae
loop
insl
xchg
inc
js
into
stos
popl
xchg
jb
sub
jnp
inc
inc
test
xor
mov
cmp
jmp
shlb
aad
jo
int
mov
sub
push
roll
out
xor
mov
xchg
sbb
dec
jl
es
imul
jno
addr16
add
jb
mov
les
push
sbb
scas
add
rorl
push
test
cmp
mov
repnz
inc
add
jne
rcrl
hlt
outsl
sbb
cmpsl
in
mov
jno
lock
into
mov
lret
cld
push
mov
adcb
aad
in
int
addb
mov
jns
pusha
cmpsl
pop
inc
shrl
add
pop
dec
ja
into
mov
sbb
dec
adc
cli
les
inc
cmp
pop
andl
in
push
ss
xor
sub
pop
sub
dec
jmp
ss
fldenv
or
shr
test
jle
inc
testb
jge
leave
inc
and
jg
jnp
imul
jle
ds
mov
push
testl
into
adc
inc
out
jo
pop
out
aam
pop
push
cs
out
icebp
clc
scas
js
fs
arpl
jae
scas
sbb
or
jmp
les
icebp
mov
xchg
mov
shll
icebp
cmp
stos
fcomip
mov
call
divb
pop
pop
dec
fcomps
and
and
fs
je
pushf
mov
out
idivl
dec
dec
push
fisubrl
in
mov
adc
xor
insb
xlat
jmp
lcall
sub
inc
mov
pusha
dec
inc
pushf
rcrl
xor
rclb
or
jne
jb
fdivs
dec
mov
lock
ljmp
jge
xchg
sbb
xchg
and
addr16
addl
test
insb
cmp
je
mov
loopne
testb
sar
push
insb
rcl
lahf
int3
int
xchg
push
dec
jno
push
daa
ljmp
dec
cmp
loope
push
sarl
aas
rolb
cmp
mov
repnz
mov
push
pop
rorb
out
test
mov
mov
dec
dec
cs
sbb
adc
dec
adc
sbb
pushw
add
adc
outsb
cmp
arpl
nop
dec
cmpsb
loope
pop
loope
and
pusha
lcall
pop
push
push
cwtl
out
mov
popf
mov
mov
jbe
lcall
add
cmpsb
iret
xchg
mov
mov
push
add
and
mov
jmp
ss
pop
adc
push
cld
push
mov
mov
sbb
pop
mov
dec
push
inc
das
cmp
pop
mov
dec
aad
mov
jle
adc
push
xor
push
xor
insl
mov
inc
lcall
push
pop
out
mov
daa
cwtl
sub
stos
sbb
and
outsb
clc
sarl
mov
test
insl
mov
insb
outsl
rclb
leave
popa
movsl
gs
jmp
pop
ret
push
inc
pop
aam
aam
mov
dec
jbe
jnp
mov
repz
lea
mov
pop
adc
mov
inc
dec
dec
fmull
sub
xor
scas
pop
jmp
and
push
aas
xchg
mov
mov
adc
push
xchg
pop
clc
pop
sbb
jno
mov
repnz
push
or
mov
and
xor
leave
or
cmp
outsl
outsl
lcall
adc
es
cmp
cmp
shr
shl
mov
push
mov
mov
cmp
mov
or
xor
loope
xchg
fwait
xchg
push
out
push
lret
inc
sub
lahf
in
mov
pop
mov
lods
mov
push
jge
das
mov
insb
cld
loopne
and
add
mov
lods
jo
iret
lock
mov
sbb
fcoml
dec
and
pop
mov
jle
incb
or
mov
sti
add
adc
ret
out
mov
jg
ret
addr16
je
popf
shrl
aad
pop
lcall
jp
je
push
movsb
xchg
xchg
sbb
xor
pop
cmp
pop
inc
scas
mov
aam
ret
gs
push
xchg
xchg
sbb
sub
test
sub
arpl
pop
lahf
push
add
inc
fs
jmp
pop
icebp
push
sbb
inc
xorb
xor
jno
mov
orb
fistl
dec
lret
cmp
mov
ffree
sti
imul
jp
orl
pusha
pop
mov
pusha
sub
call
movsb
out
negb
xchg
jg
pop
adc
les
cmp
fs
jns
and
xchg
pop
mov
loopne
imul
or
orb
sub
ret
inc
mov
and
insb
mov
sub
insb
cltd
mov
scas
hlt
cmpb
pop
leave
sbb
add
add
xor
lods
mov
add
js,pt
ja
lods
or
in
mov
cmp
jmp
mov
int3
mov
loope
xor
cmpsl
adc
aad
inc
jecxz
addr16
mov
mov
push
adc
lcall
ret
push
les
jae
fiaddl
dec
and
jg
sbb
dec
add
loope
mov
aam
into
addb
out
gs
xchg
dec
and
push
hlt
push
mov
in
adc
sahf
jmp
std
les
jne
rcl
je
push
imul
lds
enter
fisubrl
icebp
xor
push
push
stos
jl
mov
cmp
or
fcmovnu
aas
adc
enter
shlb
xchg
inc
addr16
scas
ljmp
mov
loope
mov
jbe
cli
push
stc
int
rclb
push
or
pop
popa
sbb
jne
xchg
js
jb
dec
mov
xchg
push
jge
jnp
fmull
push
incl
loopne
or
and
je
jl
inc
je
sbb
mov
xchg
mov
icebp
mov
out
out
in
cwtl
push
in
stos
cmp
iret
fiadds
push
mov
rorb
shl
jecxz
mov
jne
sub
fmuls
inc
mov
flds
fwait
aas
inc
push
sub
jecxz
fists
cmp
mov
das
xchg
sub
push
jo
or
std
inc
cmpsl
rorb
dec
adc
fdiv
out
mov
add
inc
enter
mov
add
mov
inc
xchg
sbb
mov
imul
ss
mov
mov
test
jb
add
outsl
inc
repnz
or
mov
xor
cmp
std
sar
nop
sub
std
incb
aad
cmp
cmc
jnp
add
jns
in
sbb
pop
inc
mov
ja
sbb
or
pop
cmp
pop
push
out
movl
hlt
mov
adc
jl
lock
cmc
sar
popf
inc
mov
mov
fstl
and
sbb
cmpsl
mov
sbb
jns
test
mov
js
loopne
addr16
pushf
add
arpl
fwait
mov
testb
fmull
sbb
mov
mov
xor
fwait
xchg
cmp
mov
mov
inc
mov
fstl
inc
nop
outsb
cmpsb
mov
aas
push
nop
arpl
imul
andb
rclb
out
cs
jne
push
and
push
mov
and
movsb
js
test
fdiv
pop
mov
xchg
mov
lods
jne
lds
fidivrl
adc
sub
jne
cld
test
jp
cmc
pop
fmulp
jmp
call
mov
loopne
push
mov
dec
dec
cmp
mov
and
cmpl
jmp
mov
aad
sub
mov
mov
lcall
or
dec
ljmp
or
notb
clc
clc
push
insb
lret
dec
cmpsb
test
cld
mov
jge
jnp
insl
jae
cmc
sbb
imul
xchg
sub
mov
movsb
xchg
or
insl
jbe
xor
inc
lahf
sete
mov
cwtl
cmp
movsl
mov
fildl
pop
push
cmpsl
aam
rclb
test
fmul
stc
sub
out
dec
lds
test
inc
push
or
aad
iret
dec
icebp
aam
jb
leave
pop
loopne
and
jbe
mov
mov
fdivp
ds
test
lret
xchg
inc
insl
ljmp
cmc
cmp
frstor
mov
xor
sbb
hlt
push
push
adc
sbb
add
mov
out
cmp
popa
add
cmp
data16
adc
add
sahf
or
pop
dec
pop
js
xor
pop
xchg
xor
mov
stc
or
jle
or
cli
orb
push
nop
pop
les
xor
push
push
clc
fisttpll
cmp
lahf
mov
sar
mov
mov
adc
inc
push
cmc
jno
dec
lcall
mov
pop
js
scas
bound
sub
out
cmp
dec
inc
xchg
push
mov
jmp
mov
lock
sbb
movsb
test
mov
or
ret
pop
fistpl
mov
sbbb
dec
push
jae
ja
es
jns
ficomps
push
xchg
jb
in
mov
ljmp
mov
xor
rcr
dec
xchg
test
fsts
loope
out
mov
adc
cltd
in
enter
sub
lds
cmp
add
icebp
mov
sbb
fwait
jnp
lahf
js
add
shrb
call
ficoms
xchg
iret
mov
xlat
mov
adc
push
mov
add
inc
out
shlb
xchg
jmp
andl
aaa
xchg
decb
movsl
stos
push
jle
or
pop
ljmp
jae
mov
cmp
clc
andl
or
push
int
ds
loop
dec
adc
cs
andl
jg
addb
pop
and
xor
popa
xlat
lock
or
sub
inc
cmpb
mov
sub
ljmp
adc
adc
ret
cmpb
dec
lods
cld
aad
and
jne
adc
sbbl
andb
adc
scas
mov
fisttps
dec
add
xor
xchg
insb
dec
lods
add
mov
push
add
adc
decl
mov
jp
dec
loop
shlb
mov
mov
mov
lds
sub
add
push
jle
mov
sarb
ds
and
cli
lods
sbb
insb
push
mov
out
inc
sub
das
inc
inc
sbb
lock
mov
xor
add
iret
sbb
and
sti
adc
loope
adc
loope
icebp
push
insl
mov
jne
jl
enter
test
ljmp
xchg
add
push
gs
push
xor
enter
inc
and
lock
clc
adc
sahf
pop
and
or
mov
int3
xchg
out
test
adc
sbb
jmp
add
cmp
cmc
mov
insb
arpl
xchg
aam
das
sub
fisubl
clc
divl
inc
daa
in
data16
xchg
xor
sub
outsb
jb
lret
and
sub
cmpb
lock
lods
mov
fistpl
imul
pushf
cmp
jecxz
cld
sahf
out
adc
inc
mov
lret
ret
loopne
clc
pop
mov
cmp
push
push
xchg
add
pop
daa
mov
inc
fists
push
sub
rcrl
mov
mov
or
cmp
call
mulb
subl
icebp
mov
push
test
push
xchg
adc
imul
test
push
scas
lock
sbbb
stc
xor
sub
mov
xchg
cmpb
mov
add
mov
xor
faddl
mul
aam
push
stos
ret
cmp
test
popa
mov
and
test
jp
aas
insb
pop
movsl
cli
cmp
dec
jne
adc
xchg
lret
sbb
mov
push
push
fiadds
add
sub
mov
enter
mov
popf
in
pop
sub
sbb
adc
out
mov
mov
mov
xchg
test
xor
movsl
xor
rcl
mov
mov
pop
andb
cli
xor
mov
cmp
repz
std
shlb
iret
fs
dec
xchg
mov
and
mov
bound
cmp
adc
ds
outsw
fcmovb
sub
mov
add
pusha
sbb
dec
xor
negl
ffree
pop
fcmovu
xchg
je
es
popa
push
cmp
aad
mov
inc
cmpsb
lods
push
loopne
popf
mov
sbb
mov
sbb
push
scas
adc
sbb
cmp
pop
in
cmp
fsubrl
daa
inc
shll
pop
cmp
loopne
pop
jmp
repz
scas
aaa
imul
or
iret
xor
ret
mov
stc
cli
mov
mov
adc
adc
cmpsb
mov
xlat
loopne,pn
andl
dec
pop
xchg
jl
inc
xchg
pusha
cmp
mov
mov
push
sbb
jge
rsqrtps
fwait
cmp
popf
pop
cmp
icebp
push
pop
pop
inc
gs
jg
sti
cwtl
pop
ds
cmpsb
popa
dec
jno
mov
or
jg
mov
clc
dec
and
jmp
rcr
xor
adc
add
xlat
pop
sbb
pusha
dec
addb
aam
push
mov
aam
adc
or
pop
repnz
push
mov
or
cmp
mov
outsb
mov
cmp
jl
mov
xlat
adc
js
int3
lea
rcr
mov
adc
cmpsb
mov
shlb
adc
orb
or
out
sbbb
and
push
fisubrl
fdivrl
stos
imul
mov
xchg
mov
mov
and
iret
pop
or
fstl
enter
dec
fistps
and
jle
jle
mov
push
cmp
mov
mov
cmp
adc
jbe
and
add
jmp
xor
cmc
mov
sti
jbe
mov
mov
pop
and
in
aas
bound
cmp
fldenv
sbb
and
mov
sar
adc
and
leave
shll
js
std
inc
pusha
push
scas
adc
ficompl
sub
lcall
shlb
pop
ljmp
shll
and
into
push
mov
ds
push
in
mov
mov
and
or
jno
dec
xlat
iret
notl
jo
iret
push
loop
adc
popa
scas
inc
sub
dec
test
mov
stos
or
mov
outsl
mov
loope
pop
pop
out
cmp
scas
sbb
mov
int3
cmp
into
or
jmp
pop
add
jle
clc
jge
jl
popa
and
lds
sbb
push
fmuls
push
cmp
and
mov
jmp
jl
shrb
std
mov
rcrl
dec
out
adc
addl
xchg
shr
ds
mov
inc
or
es
cwtl
inc
insb
ss
xor
lret
cld
mov
popa
jo
dec
sahf
call
sarl
adc
lock
xor
push
sbb
test
mov
mov
pop
jl
mov
cmp
mov
mov
push
in
jns
inc
or
cld
add
fcoms
xor
outsb
sub
stos
insl
add
cwtl
cs
cli
stc
addr16
pop
dec
fiaddl
add
fnstsw
jbe
movsb
jecxz
sbb
pop
mov
pop
out
inc
fwait
lcall
jnp
dec
push
loope
cmp
push
divb
in
shll
push
sbb
lods
daa
out
adc
negl
call
cmc
ljmp
cli
les
cmp
jb
iret
inc
pop
movsl
mov
js
lock
cwtl
mov
sbb
jge
inc
fdivl
jne
push
sbb
popf
cmc
scas
and
xchg
scas
stos
push
shlb
dec
or
arpl
mov
lahf
repnz
mov
sti
aas
and
scas
dec
inc
mov
inc
push
fs
push
push
cld
mov
inc
add
dec
iret
in
push
pop
js
pop
testb
icebp
sub
dec
inc
push
bound
pop
adc
sbb
movl
push
adc
leave
xlat
jo
pop
or
jne
loopne
or
pop
jne
testb
cli
add
xor
mov
dec
hlt
inc
dec
nop
in
pop
jo
xchg
xor
cmp
aam
outsl
je
push
jg
rolb
loope
bound
out
pop
jns
push
push
js
inc
and
data16
ret
clc
das
push
stos
push
ds
add
mov
sub
adc
test
mov
sub
add
insb
testl
lahf
push
push
inc
shll
repnz
push
aam
and
dec
cmp
push
pop
add
movsb
xchg
je
push
mov
push
dec
dec
je
inc
cvttps2pi
jp
inc
inc
push
jo
cwtl
add
sub
xor
pop
adc
mov
mov
inc
inc
xor
sub
push
lods
dec
sub
loope
adc
pop
aam
pop
jb
lock
lods
test
mov
push
jl
mov
addr16
adc
sub
jle
push
jo
lods
mov
shll
fists
popa
rcrw
or
pop
sbbb
das
lods
es
xchg
xchg
aas
cmp
xchg
push
push
push
push
sbb
jl
aas
jo
xchg
push
cmp
ja
dec
iret
jbe
dec
inc
sti
andb
jno
push
push
ror
adc
cmp
popa
inc
popaw
adc
call
mov
push
aad
cmp
clc
push
lock
jp
dec
outsb
push
pop
inc
addr16
dec
and
ss
rorl
dec
push
dec
ja
cmc
xchg
pop
cld
mov
inc
aad
sti
push
dec
xor
popa
fs
nop
add
outsl
xor
sub
and
scas
fiadds
sub
aam
iret
leave
xchg
or
lock
out
add
mov
pop
arpl
inc
push
add
and
sub
sbb
jb
bound
add
adc
iret
jno
inc
sbb
test
repnz
lock
bound
loope
dec
add
add
push
mov
aas
sub
or
scas
notb
insl
push
jb
dec
add
push
pushl
or
dec
add
pop
sub
cmp
sub
xor
outsb
pusha
cmpsb
mov
insb
sti
scas
cmp
inc
gs
pop
push
mov
jbe
loopne
mov
inc
and
test
mov
and
add
lods
daa
jb
sub
pop
enter
mov
imul
dec
xor
sub
cmp
cwtl
push
aam
daa
cltd
lret
in
jmp
push
or
xor
sub
fsubs
add
in
movsb
add
jnp
inc
pop
es
pop
outsl
movsb
jb
and
lock
inc
xor
pop
pushf
xchg
dec
loop
out
xchg
mov
inc
pop
inc
outsl
push
test
pop
add
cmp
popf
movsl
cmpsl
jae
xor
arpl
jns
cs
and
inc
rorl
mov
sbbb
js
dec
fdivrl
mov
aaa
xchg
pop
arpl
insl
dec
jp
xor
jno
pop
fisttps
add
fwait
xchg
es
add
inc
les
inc
sub
adc
xor
sub
mov
xor
inc
adc
cmp
scas
cmc
ja
push
and
iret
jo
out
add
mov
sbb
testb
xor
inc
lahf
xor
or
push
ja
jbe
mov
repz
sub
sbb
cmp
ja
xchg
mov
repz
dec
or
sbb
sub
out
push
cmp
dec
xtest
imull
inc
sbb
jmp
xor
fsubrl
and
imul
push
cmc
shr
loopne
dec
ds
inc
dec
insl
sbb
pushf
sahf
dec
push
mov
les
xchg
out
add
outsb
jno
add
jo
fiaddl
clc
pop
mov
xchg
sbb
dec
pushf
dec
outsl
mov
clc
jmp
push
push
jb
js
mov
in
and
jp
outsb
jno
dec
sub
and
testl
ja
dec
push
test
nop
test
add
push
arpl
mov
add
fildll
mov
jo
mov
mov
shrl
adc
fsubrs
jecxz
sub
inc
jne
jne
das
push
inc
js
adc
sub
inc
in
loopne
cmp
xchg
pop
repz
sub
inc
push
dec
sub
bound
xchg
push
je
and
in
pop
mov
ret
sahf
fs
call
dec
and
jbe
push
mov
or
repz
add
mov
jge
add
sbb
sbb
iret
inc
adc
pop
outsb
addb
dec
fidivrl
dec
add
push
pop
test
xor
xor
pusha
xor
outsl
mov
insb
xor
push
push
and
inc
dec
in
fildl
or
adc
inc
or
fwait
cltd
inc
iret
sbb
adcb
inc
mov
inc
pop
mov
std
shl
leave
or
mov
pushf
mov
hlt
sbb
mov
das
subl
sub
push
add
incl
xchg
sub
xlat
push
repnz
insb
or
ds
cmp
fsin
add
push
jns
fmull
inc
adc
jle
mulb
daa
lret
pop
jmp
paddb
lods
std
add
and
xchg
inc
in
imul
mov
inc
cltd
imul
inc
adc
xor
cmp
push
daa
mov
jb
ffreep
or
test
xchg
mov
decb
pop
fcmovnu
dec
mov
sbb
das
mov
jae
push
sbb
mov
lods
or
mov
sti
lahf
ret
sbb
adc
js
jae
test
dec
adc
ljmp
mov
jno
push
xor
mov
mov
cmp
cmp
test
inc
cmp
clc
jg
pop
jle
pop
mov
out
adc
mov
sub
xlat
adc
or
fwait
int
repz
pandn
into
jp
and
cltd
in
fwait
lret
in
xchg
and
jns
cmpl
cmc
sbb
push
jo
mov
ret
rorb
ret
inc
push
adc
out
inc
dec
mov
sti
jmp
and
inc
dec
dec
mov
sbb
sti
popf
mov
lock
mov
in
dec
and
or
xor
dec
mov
dec
add
sbb
mov
fwait
mov
test
sbb
add
mov
leave
clc
ja
inc
scas
pop
gs
xor
xlat
dec
repz
sub
adc
fsubl
addr16
or
out
ljmp
push
xchg
xor
add
xchg
aam
fistpll
inc
mov
add
lret
add
mov
std
mov
das
pop
js
hlt
sub
loope
ret
pop
pushf
stc
xchg
adc
lcall
cmp
daa
or
mov
aaa
fcmovbe
and
fnstenv
jo
mov
adc
ss
or
mov
es
jae
push
adc
pop
xor
dec
stos
repz
dec
rorl
fbstp
adc
sti
jg
clc
mov
movsl
arpl
jp
outsb
xchg
push
pop
and
es
mov
decl
mov
or
mov
idiv
dec
push
cmp
adcl
aas
pushf
out
push
mov
mov
jne
pop
push
mov
cmp
sub
repz
push
into
sbb
js
dec
ds
scas
mov
outsl
out
mov
inc
lret
lods
fcmovne
shlb
pop
sbb
cwtl
jecxz
mov
xchg
int3
ja
enter
out
aas
ret
mov
xorl
jno
dec
add
jecxz
add
outsl
cmp
and
cmp
mov
jg
mov
clc
das
jg
or
pop
loope
cmc
movsb
xor
js
movsb
or
sbbb
rorl
jae
xchg
xor
mov
insl
jl
adc
in
and
fwait
jo
mov
push
mov
xchg
xchg
and
fs
dec
out
insl
adc
pop
dec
mov
adc
mov
mov
xchg
scas
jecxz
or
or
fs
inc
fcomps
cmpsl
inc
iret
mov
fnstcw
mov
mov
dec
aaa
inc
pushf
mov
out
cmp
jge
je
mov
adc
mov
in
pop
std
popa
ss
out
vpunpckhwd
jmp
mov
mov
in
xor
sbbb
daa
mov
push
mov
and
mov
ljmp
jbe
test
lock
decl
idivl
xor
aas
xchg
adc
jle
cmp
iret
cmp
orl
into
std
push
lods
mov
mov
pop
push
inc
loope
fdivrp
imul
in
into
pop
ret
pop
js
inc
cmp
mov
dec
jmp
mov
arpl
and
js
fidivl
jp
dec
call
je
imul
js
arpl
les
adc
sbb
arpl
sahf
enter
inc
adc
mov
aas
mov
xchg
leave
insl
fdivl
clc
adc
cld
stos
inc
stc
mov
xchg
int
push
ja
fbstp
daa
xor
test
push
xor
xor
jp
jecxz
std
ja
jnp
lcall
scas
sti
cmpsb
cmpl
imul
and
loope
aas
inc
jecxz
cmc
adcb
fmul
push
fldt
sub
or
push
sub
icebp
repz
incl
inc
pop
xor
push
jle
dec
dec
xchg
inc
out
icebp
aas
push
jo
push
lods
mov
ficompl
aas
ret
xor
test
shlb
or
pop
push
mov
add
outsl
sub
adc
outsl
ja
in
dec
or
lret
mov
lcall
pushf
pop
cwtl
std
aad
inc
enter
pop
inc
std
ja
sub
das
aad
adc
les
cmova
pop
clc
das
imul
push
xorl
loope
or
mov
fisttps
mov
sti
sbb
jge
dec
lods
pushf
pop
ret
out
dec
scas
decl
iret
sub
insb
push
stos
in
fucom
mov
out
xchg
mov
inc
pop
test
dec
jbe
pushf
lahf
mov
xor
sti
dec
orb
sarb
rep
xchg
push
mov
fidivrs
mov
gs
adc
xchg
xor
inc
mov
into
pusha
pop
adc
loope
sbb
adc
mov
mov
xlat
inc
and
inc
and
jno
std
pop
out
inc
cld
or
sbb
cwtl
sbbl
inc
fs
gs
pop
or
inc
dec
repnz
jno
insb
xchg
mov
pop
lods
inc
jae
arpl
cwtl
sbb
insb
mov
pop
jg
cmp
fdivrl
rclb
and
pop
inc
jne
xor
push
cmpsl
ret
push
push
stos
loop
testb
jmp
loopne
int3
out
iret
std
popf
sti
cmpsl
scas
cli
test
dec
or
jecxz
into
pop
ds
ljmp
dec
repz
dec
sub
clc
fs
sar
sub
in
xor
dec
sub
pop
aas
loope
clc
mov
mov
adc
ds
jae
outsl
scas
notb
shlb
cmp
dec
mov
adc
add
add
out
test
pop
daa
pop
mov
mov
dec
add
add
scas
mov
jbe
push
outsl
repz
lock
negb
cwtl
lods
cmp
in
pop
mov
jae
cmc
fwait
jmp
mov
jg
les
out
std
cmp
xchg
pop
jp
mov
cmpsl
pushl
push
cmpsb
popa
gs
jae
jp
adc
cmc
jae
call
divl
sub
shll
xchg
push
sub
fistps
pop
sbb
test
or
dec
sbb
adc
aas
add
jle
orl
and
loopne
cli
pop
aas
sbb
ret
xorl
dec
jae
aad
jnp
inc
pop
sar
jne
sbb
rolb
add
jle
ficomps
push
lea
jle
or
rcrl
xchg
or
test
dec
or
aad
data16
mov
outsb
mov
dec
cmp
rorb
stos
push
jnp
pop
filds
adc
and
stos
sbb
dec
pop
imul
adc
sbb
inc
lods
push
es
xchg
and
and
lcall
pop
fwait
je
cmp
shrl
cltd
inc
aam
jg
lods
loopne
mov
add
notl
add
dec
mov
push
insb
inc
push
xchg
push
rolb
and
es
xchg
push
fistps
jo
add
add
aas
push
std
xorps
and
cmp
mov
js
jmp
xor
ja
xchg
adc
call
outsl
je
rcrl
push
pop
daa
push
xor
mov
pop
nop
adc
sub
add
lcall
pop
and
stc
or
into
std
arpl
inc
xchg
loopne
cmpl
ss
js
and
popf
ffreep
dec
xchg
int
mov
sub
dec
mov
add
mov
sub
cs
icebp
out
std
adc
test
sub
ja
inc
mov
add
adc
jmp
mov
cmp
aaa
mov
out
pop
inc
pop
rcl
mov
sahf
jb
inc
mov
loope
decl
sub
jg
andb
mov
push
jnp
addr16
loopne
test
loopne
inc
fldl
es
xchg
mov
mov
mov
adc
sti
or
adc
and
int3
xor
fidivrs
sub
xchg
mov
scas
push
stos
push
push
clc
push
mov
cmpsb
lret
inc
jge
dec
jg
pop
xchg
add
dec
sahf
push
fldt
ljmp
sub
mov
insl
pusha
loope
out
lahf
add
cmpl
dec
cmp
dec
jnp
aad
xor
push
fistps
lea
push
cmp
push
mov
das
cmp
rcll
inc
mov
pop
and
jmp
std
pushl
mov
push
ja
jo
jecxz
xor
enter
icebp
pusha
add
dec
fadds
sbb
outsb
push
dec
out
popa
mov
pop
loope
dec
xchg
xchg
cmp
faddl
pop
push
arpl
cld
movsb
adc
pop
sub
fwait
insl
pushf
xchg
std
mov
xor
repnz
out
in
daa
std
or
fs
jg
fbstp
faddl
pop
iret
cmc
fimull
into
inc
jg
pop
fists
movsl
adc
mov
mov
mov
or
mov
int
pop
fildll
xor
fimull
mov
sbbl
jnp
mov
sub
pop
es
push
mulb
mov
add
int3
lds
adc
or
jno
add
aas
adc
sub
mov
lcall
aaa
cli
outsb
push
clc
pop
dec
aad
icebp
ja
clc
xor
sbb
jnp
adc
jne
das
out
dec
mov
cmp
xchg
jno
jno
cmp
jmp
out
lea
aaa
jmp
pop
aas
nop
mov
imul
out
mov
mov
jne
das
jl
insb
push
or
mov
mov
mov
dec
jnp
mov
sub
pop
movsb
shl
push
es
rcrb
sti
mov
xor
jo
repnz
add
push
pop
sub
inc
and
fidivrs
xlat
dec
inc
xchg
mov
cld
and
lods
pushl
addr16
mov
sbb
sti
hlt
inc
jmp
idiv
sub
mov
fsubr
out
sar
out
std
push
dec
xchg
mov
loopne
add
cld
test
mov
dec
das
add
adc
mov
out
adc
mov
cmp
lea
out
adc
or
pop
stc
mov
cmp
sarb
stos
out
nop
or
or
fildll
leave
pop
das
loop
cmp
mov
jnp
fsubr
sti
testb
lock
dec
lcall
daa
jns
stc
or
dec
pop
mov
aad
push
aas
stos
hlt
push
imul
ret
mov
lahf
push
cld
in
xchg
test
outsb
sub
sub
add
imul
xchg
into
daa
cmp
addl
loope
div
add
sub
and
sub
cltd
jge
push
mov
mov
sbb
jp
loopne
subb
pop
xor
mov
pop
push
mov
jp
sbb
inc
das
mov
mov
pusha
xchg
xor
or
gs
out
jbe
mov
xchg
iret
divl
leave
xor
dec
jg
pop
pop
mov
jbe
addr16
repz
les
xchg
pushf
sbb
call
mov
adc
xor
adc
dec
jle
incl
ja
negb
xor
adc
aaa
jne
jb
adcb
lcall
cld
pop
cli
adc
fidivrs
adc
scas
or
pop
sub
outsb
push
ficompl
mov
cs
cmp
jge
lock
test
pop
xchg
mov
loopne
ror
out
fldl
popa
cmp
jle
cli
ja
inc
int
adc
and
stos
outsb
into
jno
mov
ja
inc
decl
scas
in
add
repnz
and
fidivrs
jb
adc
lahf
sti
aas
pop
test
cmp
mov
mov
mov
xchg
adc
std
sub
jl
xor
mov
fidivrs
jle
pushf
std
lret
adc
jl
loope
xchg
lret
add
cmp
lcall
inc
fisttpl
mov
pushl
outsl
cmp
int3
cwtl
sti
dec
das
pop
pop
call
pop
sbb
sub
jmp
lret
cmpsl
mov
sahf
fbstp
std
jecxz
scas
jne
push
ja
cmp
sbbb
loop
or
jno
out
mov
call
loop
adc
mov
jb
ffree
rcll
pop
mov
in
out
ret
and
testb
lods
mov
xchg
out
xchg
push
aas
fincstp
addb
movsl
mov
push
ja
sub
enter
int
ja
jp
aas
test
jmp
sbb
mul
push
xchg
jl
loopne
sub
mov
iret
cltd
push
cs
outsb
imul
daa
test
call
jnp
lcall
push
sbb
pusha
rorl
jmp
mov
lock
adc
xchg
cli
pop
inc
out
pushl
xchg
mov
call
xor
adc
outsl
jg
jg
cld
jns
cmp
das
push
xlat
inc
pushf
inc
out
fdivr
rclb
mov
aaa
cltd
xchg
jb
stc
ja
arpl
imul
mov
xor
xchg
cld
push
sti
movb
aam
jae
push
test
fidivrs
rorb
insl
xorb
xor
jmp
ret
les
fmul
mov
sti
out
icebp
iret
lahf
mov
cmpsb
mov
andb
cmpl
lods
fs
push
adc
repnz
jg
jmp
addr16
or
add
in
ljmp
xchg
cmp
or
loop
inc
repz
push
sbb
ja
mov
imulb
xor
push
xchg
jecxz
inc
loope
adc
mov
fildl
lds
or
lock
push
sub
idivl
mov
sbb
pop
adc
jle
mov
je
sbb
decl
movb
jg
mov
mov
jg
adcb
pop
xchg
adc
ret
cltd
movsb
cmp
pop
aad
out
std
adc
adc
movsb
imul
loope
out
test
imul
faddp
jle
inc
xor
mov
adc
int3
outsl
cwtl
sar
dec
mov
add
outsl
jp
cmpsl
les
xchg
jecxz
incl
jl
int3
fisubrl
cli
adc
lahf
and
ss
jle
cmp
adc
call
sti
push
les
ficoms
push
push
pop
xchg
xor
mov
and
pop
insl
inc
push
sbb
nop
dec
nop
je
cmpsl
aaa
push
or
lods
dec
cmpb
adc
js
shrl
or
jg
mull
mov
andl
neg
and
jmp
mov
in
or
jmp
pop
and
jge
sbb
xor
sub
out
fsubr
adc
insb
xor
push
sbb
sbb
aad
xor
jmp
push
cld
into
jo
data16
decb
into
mov
clc
pop
clc
cltd
pop
cwtl
and
rorb
call
insb
adc
iret
pop
sbb
push
incl
inc
pop
mov
mov
addr16
mov
dec
and
xlat
xor
mov
mov
cli
inc
call
mov
stc
cmpsl
or
imul
inc
aad
jecxz
sti
das
adc
mov
cmp
inc
cmp
and
adc
sbb
aas
stc
cmp
inc
testl
popa
push
aas
out
stos
stos
mov
mov
in
jno
aas
adc
pop
mov
mov
lds
jg
repnz
push
xchg
lods
rorl
and
or
mov
mov
pusha
xor
pop
arpl
and
mov
xor
iret
mull
push
sarl
or
sub
rol
mov
jg
in
mov
inc
cmp
mov
jns
or
push
iret
in
sbb
or
out
mov
iret
jmp
jbe
push
clc
into
push
xchg
adc
mov
mov
stos
decl
jno
mov
mov
or
fwait
nop
lret
imul
daa
push
insl
adc
scas
cmp
call
cmc
inc
or
adc
rcr
aam
data16
xchg
cli
popf
mov
mov
sub
lret
mov
push
cmp
test
into
arpl
cmp
sti
out
std
ja
pop
and
xchg
push
out
mov
negl
cld
dec
cmp
es
and
fisttps
iret
loop
popf
fs
clc
aas
and
jecxz
lcall
iret
add
add
xchg
and
fistps
xchg
scas
jg
pop
xchg
xchg
lahf
inc
and
or
and
movsb
lret
fsubrp
push
jg
cli
jo
popf
lods
cmp
or
std
push
dec
test
fwait
or
cs
fs
out
mov
daa
mov
stos
or
jo
ret
aas
sub
cmp
push
sbb
ljmp
jo
out
mov
or
inc
dec
jecxz
pop
jecxz
pop
insl
and
add
std
cmp
mov
jp
out
andb
xor
and
mov
mov
imul
hlt
mov
pushf
cmp
std
daa
hlt
popf
inc
xchg
mov
sbb
lods
ret
xor
faddl
js
call
pop
push
mov
mov
lock
inc
out
lock
cltd
xor
movsb
jg
push
sti
out
ret
out
jge
jb
clc
pop
test
pop
jns
mov
pop
lods
inc
xchg
test
sbb
jp
incb
adc
scas
fstpt
jge
out
cwtl
pushl
inc
lahf
sub
popa
imul
nop
jg
inc
insl
and
andl
mov
sahf
iret
lock
movsb
mov
aam
loopne
pop
xchg
imul
cmp
aaa
pusha
push
pop
xor
mov
mov
xor
fucom
push
mov
mov
inc
insb
mov
std
pop
mov
cmp
out
add
push
pop
inc
mov
dec
push
bound
ljmp
inc
enter
lods
mov
inc
dec
sbb
push
movsl
and
stos
pop
xlat
jecxz
notl
loope
rdmsr
sbb
in
jne
iret
xchg
xchg
dec
xor
mov
mov
cmp
mov
daa
pop
pop
cli
out
fadd
push
je
std
daa
xchg
clc
adc
pop
push
inc
aaa
out
pop
sbb
jbe
inc
loop
orb
subb
test
popf
dec
cli
fcom
int
or
pop
push
push
pop
push
mov
add
pop
mov
cmp
cli
pop
mov
mov
test
mov
loopne
cld
sub
fdivrs
daa
pop
clc
dec
les
pushf
add
push
scas
cli
pop
fs
pop
push
jns
pop
sbb
rcl
xchg
pop
fdivrl
mov
push
call
or
test
das
xor
add
or
cmp
and
scas
js
dec
inc
xlat
ja
or
int
inc
pop
or
popf
cmp
fadds
ret
jmp
jg
imul
pop
add
mov
lock
inc
bound
cs
psrlq
dec
and
test
test
std
add
xchg
mov
data16
fisubs
dec
lret
out
ss
shl
cli
jl
test
mov
cld
enter
ljmp
or
push
test
inc
inc
js
pop
or
aam
mov
ficoms
adc
dec
pushl
test
mull
cmpsl
xor
test
mov
std
in
or
mov
into
and
sti
stos
push
cmp
add
push
mov
lret
sub
or
jns
jnp
jg
or
les
cmpl
lock
lods
mov
ss
sahf
notb
loope
sbb
xchg
mov
cmp
in
push
arpl
js
mov
rorb
mov
mov
fs
push
cmp
jecxz
dec
leave
enter
sub
scas
or
imull
cli
mov
cmp
cmp
dec
insl
inc
or
ret
inc
push
pop
popa
ss
jmp
pop
dec
mov
mov
lds
mov
lahf
repz
cmpsl
lcall
fsts
mov
fisubrs
lcall
pop
shrl
movsb
imulb
push
sbb
and
sub
dec
ret
aas
negl
push
int
insl
rorl
push
out
xor
daa
cmp
and
push
outsb
jns
fbld
sub
jmp
ja
jg
scas
mov
shlb
js
mov
xrstors
mov
mov
xchg
test
cmp
fistps
jo
xchg
insl
and
in
jle
outsl
jl
jge
jecxz
in
loop
mov
mov
or
in
insb
dec
cmp
cmpsb
clc
out
lock
shrb
fisttpl
sahf
outsb
push
push
es
jg
jg
mov
fiaddl
push
xor
mov
test
out
adc
pop
dec
mov
cmpsb
or
cwtl
scas
xchg
loope
ret
movsl
cmp
xorl
ds
and
addr16
mov
jl
lret
std
out
icebp
jle
sti
or
push
in
push
mov
mov
inc
sub
cmpsl
ret
cmp
sub
sbb
idivl
sbb
gs
jecxz
jge
popf
hlt
cmp
idiv
jne
arpl
lahf
rorl
xchg
loop
sbb
mov
out
imul
adc
je
cld
out
std
call
inc
stos
int
jbe
out
dec
sbbl
add
cmp
dec
jnp
pop
dec
add
push
or
sub
or
add
notb
lret
outsb
in
andl
loope
and
call
xor
xchg
sbbl
js
sbb
ret
xorb
inc
pop
jno
sti
cmp
jecxz
and
jg
jmp
aas
and
mov
xor
std
ret
adc
int3
and
bound
std
and
pushf
lods
lcall
sbb
shrl
xchg
xchg
nop
cmp
mov
fwait
mov
imul
push
in
pop
ret
shl
sbb
out
dec
ljmp
subl
adc
push
insl
adc
daa
call
pushf
into
js
ds
mov
out
push
sbb
fdivr
in
mov
lds
mov
or
mov
repz
out
out
fmull
je
jg
xchg
stos
xchg
add
lock
jecxz
xor
mov
adc
bound
in
mov
mov
jg
jmp
pop
jp
dec
sbbl
dec
std
daa
icebp
fcomps
in
or
test
stos
std
or
dec
or
enter
or
jle
push
jle
sub
mov
adc
inc
cli
pop
cmp
adc
or
adc
nop
push
sbb
sti
loope
ficompl
je
inc
or
sbb
jecxz
push
mov
or
mov
iret
js
das
dec
or
lods
shrb
int
inc
stos
insb
cmp
adc
jno
cltd
dec
dec
idivb
test
sub
pop
js
lock
scas
lret
adc
cmp
call
cld
xchg
inc
or
cmpsl
dec
jecxz
pop
loop
clc
xchg
popf
pop
scas
enter
jmp
imul
add
adc
lahf
adc
push
jp
shl
shr
and
outsl
mov
push
adc
jecxz
out
push
pushl
mov
jle
test
jmp
mov
stos
call
cmp
movsl
pusha
mov
decb
and
xchg
scas
pop
jg
mov
fisttpll
fstl
mov
int3
fisttpll
and
fisttpl
cmp
movsb
rorl
and
cmp
shlb
add
daa
pop
inc
xchg
push
lret
inc
dec
mov
mov
mov
aaa
sahf
ficoml
in
pop
clc
movsl
fadd
mov
dec
lahf
dec
ss
std
arpl
xor
movsb
ds
mov
cs
push
std
loope
fs
mov
fnstcw
pmaxub
sbbb
cwtl
mov
gs
xor
popa
outsb
in
lock
jl
cmpsb
jns
adc
sti
in
push
ret
mov
xor
jl
scas
mov
pop
sbb
int3
loopne
int3
loopne
cmpsl
mov
mov
cmc
xchg
xor
cmp
std
lcall
and
push
cmpsb
jmp
xor
out
xor
lods
icebp
es
mov
imulb
add
xchg
jb
fucomip
mov
inc
loop
aad
dec
cli
pop
jg
out
add
adc
adc
inc
push
inc
push
gs
out
ja
xchg
into
iret
shrb
cmp
or
mov
dec
enter
out
pop
adcl
or
jo
rolb
jb
cmp
push
outsb
lcall
addr16
loop
adc
je
ss
cmp
cmc
scas
inc
pop
add
lcall
push
outsl
pop
int
cltd
aas
inc
ljmp
dec
repz
mov
xor
fldcw
cmp
push
out
lock
and
jecxz
insl
push
das
jnp
pop
data16
inc
xchg
loop
fmull
incb
popf
pop
jb
ljmp
fisubrl
sub
dec
hlt
push
mov
and
adc
pop
negl
sbb
cmc
pop
xchg
aad
movq
pop
jb
pop
inc
lds
or
mov
popf
add
cmp
clc
push
je
cmpsl
loope
mov
lcall
cltd
cmpsl
icebp
pop
lods
xchg
sbb
jo
mov
out
leave
mov
std
pop
mov
fld
mov
jne
mov
adc
pop
inc
adc
fidivrs
ffreep
ljmp
addb
xchg
aad
outsb
push
jo
scas
sub
into
int
loopne
ficomps
fnstenv
and
cmp
lea
xchg
hlt
jne
mov
add
xor
mov
or
adc
adc
dec
ljmp
cli
icebp
cmp
dec
push
or
or
negb
fmul
mov
add
xchg
jae
mov
scas
fistps
fnstenv
inc
repnz
fnstsw
push
xchg
xor
mov
mov
pushf
psubd
lock
mov
cmpb
add
xor
inc
test
mull
jecxz
rorb
lahf
arpl
adc
mov
sarl
jnp
pop
imul
repz
xchg
cli
mov
aam
cmp
addr16
cmpsl
out
cmp
cmc
out
pop
jmp
xor
and
test
adc
ljmp
jge
shrl
clc
jnp
sub
stos
out
out
push
dec
dec
loop
pop
clc
arpl
mov
ja
pusha
adc
jp
sti
addr16
repnz
pusha
push
cld
mov
sub
add
aas
add
add
sbbb
std
cmp
hlt
sub
adc
loope
in
or
sbb
pop
mov
xchg
or
fimuls
cmpsb
cmpsl
lcall
dec
idiv
fsub
outsl
mov
shll
in
sbb
aaa
mov
inc
gs
fs
dec
jp
dec
dec
cmp
push
jg
or
cmpsl
mov
jmp
xchg
cmp
imul
dec
lock
inc
ja
scas
sbb
rcll
xchg
and
and
popf
mov
mov
movlps
js
stos
or
cli
adc
cld
ja
movsl
int3
cmp
mov
mov
sar
pop
xor
movsl
imul
lds
cld
xor
arpl
xchg
xchg
es
or
ds
mov
inc
jmp
push
or
mov
or
pop
mov
inc
push
popa
cs
xchg
jo
sub
in
test
jmp
xchg
aam
mov
mov
jp
out
mov
data16
fwait
outsb
shl
fldt
into
fldenv
aas
sbb
jg
sti
sub
in
mov
dec
aad
jg
pop
jle
mov
sahf
scas
ljmp
jg
xor
test
jg
mov
jle
pushf
jg
js
dec
cmp
lea
mov
inc
pop
ficoml
and
cmp
jg
loope
int
pop
push
jb
out
xor
jmp
adc
cmc
cmp
push
sti
xor
jg
mov
push
arpl
js
mov
mov
mov
sti
aas
mov
push
popa
scas
mov
jno
fbld
adc
sbb
xor
popa
outsl
push
fmull
arpl
andb
outsb
scas
jmp
jle
pushf
stc
adc
shrb
cmp
into
in
mov
out
sub
addr16
jnp
jo
push
cmp
xchg
sub
pop
jmp
ss
ret
out
push
adc
sub
jmp
flds
into
push
dec
pop
into
and
fsubrl
ljmp
idivl
cmp
daa
fdivr
xchg
xor
pop
scas
cli
or
xchg
sub
or
mov
push
popa
out
jecxz
shrl
sub
ret
out
imul
xchg
das
sub
in
xor
loope
rorb
jnp
stos
add
js
icebp
pop
test
push
push
mov
insb
std
mov
mov
insb
pop
in
scas
clc
sbb
and
mov
lahf
scas
mov
push
push
dec
or
sbb
xor
pop
fsubr
jo
jle
mov
or
int
fists
fwait
shrb
movsb
and
js
loop
mov
movsl
into
outsl
hlt
fmull
sub
imul
lret
pop
add
jge
popf
cwtl
repnz
test
mov
or
pop
sar
shll
inc
jmp
jecxz
push
mov
mov
clc
fcomps
jecxz
xor
jo
jne
pop
jmp
cmp
pusha
or
aas
std
cmp
outsb
and
push
pop
icebp
dec
push
ficomps
sbb
xchg
popf
mov
pop
xlat
fmulp
icebp
and
inc
pop
sub
pop
out
sbb
inc
fistpll
sbb
aam
sbb
xor
sbb
mov
fs
and
pop
or
jno
xchg
aas
or
xlat
sbb
outsl
add
int3
jns
or
jp
aas
negl
loope
push
adc
inc
mov
clc
inc
cmp
pop
ljmp
mov
test
mov
or
xor
pop
int3
sbb
mov
sub
pop
add
insl
pop
sbb
xchg
pop
je
pop
outsb
sub
mov
dec
lock
out
cmp
incb
pop
jb
stos
inc
std
psubd
outsl
and
cs
adc
insl
fs
movsb
loop
push
jl
sbb
pop
call
pushf
jae
cmp
aas
jecxz
js
ljmp
push
ds
cmc
fisttpll
call
jg
clc
fildl
lods
cli
outsl
mov
repnz
or
mov
mov
xor
xor
scas
push
hlt
mov
mov
es
std
jmp
out
jge
jmp
add
mov
mov
ret
iret
and
xor
stos
lcall
adc
add
lcall
mov
dec
lods
sub
add
lock
mov
popf
stc
imul
inc
xor
testl
mov
jae
cmp
dec
nop
lea
mov
fs
sbb
inc
dec
lock
arpl
out
inc
jo
pop
inc
scas
in
xor
and
dec
jae
pusha
jle
ja
xor
out
pop
adc
push
cwtl
dec
jge
mov
std
xlat
aas
inc
ret
nop
or
jmp
pop
add
dec
jp
arpl
outsl
aas
cmp
jno
jno
repz
xor
stos
pop
testl
fwait
dec
or
addr16
cmp
xor
jb
push
push
pop
push
ljmp
in
aas
mov
jecxz
mov
push
add
inc
repnz
push
mov
jmp
push
add
ret
push
cmp
cld
f2xm1
mov
jmp
or
imul
xchg
shlb
and
jg
fld
xchg
scas
push
rolb
pop
out
or
add
dec
ficoml
fcmovnb
push
mov
pop
jne
mov
divl
rorl
pop
pop
xor
jp
jg
das
mov
cld
push
sub
in
push
test
add
mov
loopne
add
push
xlat
mov
gs
shr
test
cmc
jnp
push
lret
outsl
push
ja
stos
div
cli
out
sub
push
mov
xorl
jl
or
add
mov
incl
fmuls
clc
aas
cs
sub
leave
outsl
mov
push
repnz
sti
xchg
mov
and
fstp
lahf
inc
sti
popf
and
jg
sbb
sub
enter
call
xchg
nop
shr
cmpsb
push
cltd
push
clc
fdivrl
adc
fisubrs
mov
adc
data16
mov
in
xlat
popa
nop
filds
and
loop
loop
inc
loopne
xchg
mov
jmp
adc
insb
pop
movsl
arpl
mov
jp
fstpl
and
mov
xor
scas
js,pn
decl
fisttpll
mov
loope
xchg
inc
mov
cwtl
std
mov
lods
push
imul
adc
das
pop
push
ret
loope
bound
sahf
cmp
stos
cmp
mov
jnp
add
les
mov
inc
jae
movsb
in
dec
rcll
cld
mov
and
movsb
sub
out
pushf
testb
pop
xchg
mov
test
dec
or
paddusb
popf
test
jg
push
jge
inc
adc
js
xor
clc
dec
out
push
push
dec
xorb
push
jecxz
jl
mov
ds
int3
sti
loopne
iret
icebp
vmovhps
imul
ja
cmp
pusha
dec
xlat
and
push
test
jo
mov
fnsave
push
xlat
cmp
cmpb
outsb
sar
out
icebp
dec
push
inc
rcrb
out
xor
add
ss
push
xchg
repz
xor
decl
jl
cmpsl
aas
or
popa
sbb
or
fimull
arpl
mov
xlat
lea
and
clc
xchg
outsb
jmp
sarb
mov
mov
xor
ljmp
pop
in
xchg
jg
lret
add
mov
adc
js
into
adc
xor
ret
pop
fbstp
jmp
cmc
push
jmp
jge
fisubrs
jl
repnz
or
lcall
adc
cmpsb
dec
scas
jg
mov
push
insb
std
das
add
cmpxchg
clc
inc
mov
jno
mov
xor
aas
push
hlt
fwait
add
or
jg
mov
aas
push
std
mov
sbb
dec
xchg
ss
arpl
hlt
filds
jbe
dec
test
push
mov
mov
xchg
arpl
outsl
cmp
outsb
mov
stos
icebp
jmp
addr16
mov
pop
outsl
inc
loope
jle
push
mov
cmp
cwtl
cli
adc
mov
jbe
add
int3
les
inc
jecxz
inc
fsub
cmp
lods
jno
mov
sbb
stos
sub
inc
loop
push
cld
xchg
xchg
pop
sbb
dec
mov
jo
popf
sub
adc
sbb
rcll
ret
outsl
scas
and
addr16
fnsave
dec
pop
fidivrl
dec
pop
jae
adc
fdivr
pop
or
mov
mov
fwait
mov
push
pop
bound
in
sbb
jns
bound
sub
or
sub
and
mov
hlt
pop
lea
mov
hlt
pop
aas
ret
aaa
stos
pop
xchg
dec
icebp
lds
ljmp
outsb
cmp
fcmovu
repnz
inc
mov
push
std
add
push
pop
xchg
outsl
cmp
lods
movsl
or
ret
mov
test
icebp
xchg
sti
vpmacsww
incb
fdivr
in
std
fdivl
popf
pushf
xchg
jmp
jl
mov
push
cmpsl
mov
lock
cmp
xchg
fnstenv
inc
aam
mov
incb
mov
cmpsb
ret
sub
cmpsb
push
xchg
test
mov
loopne
imul
nop
xor
leave
aas
and
test
dec
daa
mov
push
outsb
cmp
fdivl
lcall
enter
mov
sub
mov
out
push
insb
outsl
xchg
dec
xor
data16
push
lock
push
jne
dec
sti
push
imul
movsb
mov
sbb
fwait
subl
and
sbb
enter
lds
aad
fstpt
jle
adc
hlt
out
xor
and
mov
scas
mov
push
adc
ja
out
mov
push
cmp
popa
outsl
sbb
addr16
jg
cmpsl
fnstenv
inc
bound
out
dec
pop
xchg
out
fdivr
sbb
jecxz
and
push
add
inc
testw
das
add
mov
and
and
xchg
jecxz
adc
mov
sbb
addr16
in
sahf
iret
mov
lods
xor
in
mov
ljmp
pop
sub
out
repz
dec
loope
push
fisttps
out
push
mov
sbb
pushf
xchg
lcall
add
les
pusha
lock
push
call
xor
andb
xlat
stos
xlat
or
jecxz
push
mov
lods
jae
mov
sub
les
jecxz
outsl
sub
add
into
loop
loop
jecxz
dec
mov
icebp
or
xchg
test
push
mov
das
outsb
xor
jl
add
mov
icebp
mov
dec
xchg
adcb
ljmp
and
sub
arpl
jb
xchg
xchg
mov
data16
jg
in
std
sub
sbbl
push
xchg
insl
pop
dec
pop
xor
neg
mov
adc
jb
call
rol
repnz
dec
arpl
or
lock
push
in
cmp
and
mov
sti
pop
movsb
insl
push
mov
roll
sbb
out
lock
out
arpl
lcall
divl
cmp
pop
ljmp
fisubs
mov
xor
mov
outsb
repz
insl
push
pop
inc
mov
push
mov
lds
lock
xchg
sbbb
mov
jno
mov
push
daa
pop
jb
test
inc
in
or
aaa
js
iret
imul
and
mov
aas
adc
into
dec
add
mov
incl
cwtl
cld
mov
imul
sti
inc
mov
iret
andb
jge
mov
fwait
sahf
adcb
pop
nop
addb
dec
add
in
lcall
cmp
xorl
xchg
sbb
sub
popf
sti
pop
add
mov
in
sbb
aam
jecxz
cmp
or
test
incl
insb
sbb
inc
adc
daa
add
jg
mov
mov
dec
insb
push
lock
insl
or
imul
ret
xor
push
call
movsb
xor
mov
push
cmpsb
or
jns
add
cld
pop
inc
icebp
outsl
dec
pop
jl
cwtl
fisttpll
loop
pop
out
sub
xchg
push
xchg
test
js
jae
inc
mov
cs
out
sbb
fildll
inc
mov
sbb
pop
dec
cltd
or
bound
jnp
pop
hlt
mov
xor
push
cmpsb
sbb
push
insb
cmc
out
call
idiv
scas
pop
je
pop
push
adc
jmp
jg
repnz
je
fistpll
std
dec
add
adc
lock
lahf
rorl
push
sub
out
fidivrs
xor
mov
pushf
outsl
mov
adc
xchg
push
fsubrs
test
pop
jg
adc
xchg
dec
iret
cmp
ja
inc
jg
jmp
test
jbe
pusha
mov
loop
das
test
cmp
xor
cld
xor
outsl
fcoms
xchg
sub
out
mov
shl
punpckldq
fmulp
ljmp
mov
mov
xor
xor
push
push
jg
stos
xor
push
push
scas
pop
jg
lock
push
not
lahf
mov
inc
jmp
inc
ljmp
fsts
sub
mov
push
add
scas
inc
cld
sbb
jg
sbb
xchg
mov
mov
inc
push
stos
xchg
stos
out
es
jp
adc
push
xchg
jg
call
sbb
ljmp
dec
mov
fcomip
mov
pusha
repnz
jecxz
lahf
cmc
das
or
lcall
cs
cs
mov
xor
xchg
push
mov
fmull
xchg
ficompl
shlb
pushl
movsl
lds
inc
cmp
add
sahf
repz
add
dec
inc
dec
and
sbb
xchg
aad
fwait
mov
push
sub
or
out
mov
xchg
testb
sbb
lods
aad
repz
fisttps
insb
test
icebp
scas
popf
inc
inc
stos
fcompl
push
xor
jg
mov
in
cmp
lods
dec
clc
adc
mov
jnp
icebp
pushl
jl
push
fbstp
add
inc
lea
sti
mov
outsl
bound
aas
in
lods
lock
adc
arpl
sbb
js
jg
sbb
mov
fmull
mov
inc
dec
cmp
outsb
cmp
aaa
imul
dec
mov
pop
lods
inc
arpl
popa
aas
cmp
push
addl
mov
mov
pushf
fwait
out
popf
xchg
sub
ret
mov
and
inc
push
xchg
xchg
jg
clc
xchg
pusha
cld
or
pop
pusha
mov
and
xchg
into
loopne
imul
add
sbb
shll
mov
pushl
inc
xor
test
pop
cmpl
int3
add
test
daa
jo
xor
inc
and
sub
ds
pop
jnp
decl
call
mov
dec
fisubl
jmp
shlb
and
dec
pusha
add
xchg
inc
adc
xchg
and
loop
lcall
sub
jns
or
ljmp
adcl
mov
jb
sti
mov
mov
mov
or
fnstsw
mov
jmp
sub
mov
inc
dec
out
mov
jg
fsts
repnz
jp
adc
lahf
push
dec
mov
jbe
push
movsl
test
movsl
and
in
xor
mov
mov
cmp
fidivrs
lcall
rolb
fidivrl
pop
add
imull
loopne
shl
push
jecxz
jb
push
mov
fidivrs
mov
shll
sub
fiadds
xor
inc
loope
push
jae
std
fbld
stos
test
jg
jmp
mov
js
idivb
xchg
sbb
ljmp
arpl
outsl
inc
fcomp
icebp
lcall
std
xchg
mov
leave
sahf
cmc
cwtl
adc
mov
pop
inc
cmp
jecxz
pop
cmp
xor
cmp
out
std
cltd
addl
jp
or
sbb
icebp
sbb
jl
sbb
inc
and
stc
movsb
jae
in
mov
dec
pop
xchg
cs
adc
or
mov
movsb
jge
pop
insl
sbb
mov
and
int3
sarl
mov
cmp
jnp
jl
jecxz
pop
jo
xchg
pop
or
orl
cld
daa
mov
pop
push
add
loope
jl
lahf
mov
inc
cld
clc
mov
aas
in
mull
xor
sbb
jae
sbb
dec
std
pop
push
outsb
mov
or
loope
pop
cld
lods
fistl
add
outsl
loope
aas
pop
les
mov
add
test
pop
sbb
sbb
call
push
negb
mov
fs
sbb
inc
mov
ds
jnp
cmp
into
aaa
test
fimuls
mov
loope
mov
std
jg
sbb
pop
cmp
shrl
sub
movsb
mov
bound
jl
movsl
push
cmp
cmc
popf
jnp
mov
or
dec
dec
push
cld
sub
fistpll
or
mov
inc
andb
ss
lods
clc
imull
xlat
std
in
movsb
packsswb
xchg
jmp
arpl
test
dec
int
and
push
dec
push
pop
sbb
aad
fwait
sbbb
call
push
push
repnz
mov
mov
xor
add
pop
out
imul
mov
xchg
orl
std
inc
loopne
out
jnp
mov
xor
cmp
call
push
adc
cmp
iret
cmp
add
movsl
mov
arpl
mov
stos
inc
mov
inc
lcall
lahf
sbb
mov
jmp
enter
xlat
or
add
arpl
cmpsl
xlat
fistpll
ret
add
and
mov
popf
lods
add
cli
jmp
mov
scas
insl
daa
pop
lcall
mov
imul
cmp
cmp
push
lahf
into
mov
loopne
hlt
push
cmp
out
mov
mov
idivl
xor
or
cli
cmp
data16
outsb
push
clc
jg
jge
mov
mov
push
mov
insb
cld
hlt
loopne
pop
iret
js
ja,pt
jbe
out
mov
pop
mov
lahf
aas
andb
mov
jg
mov
das
popf
int
add
icebp
fisubs
ret
in
popf
negb
dec
lock
dec
insb
xlat
insl
add
and
hlt
xchg
leave
stc
sbb
jp
aas
out
in
add
xchg
test
clc
add
test
insl
lcall
mov
test
test
popa
inc
fstl
js
xor
fwait
xor
add
cs
inc
jp
ret
cmp
mov
pop
inc
add
xor
push
ds
adc
scas
mov
imul
jne
imul
add
or
pop
mov
and
xor
fs
sbb
fsubrl
stos
push
or
add
aam
push
loope
imul
inc
cmc
adc
add
loope
pop
repz
pop
fcmovbe
add
ljmp
mov
mov
cmp
pushf
in
sbb
xor
pop
pusha
inc
cltd
ja
fmull
in
popf
xor
jnp
dec
and
aad
movsl
or
jo
push
gs
aad
inc
inc
ds
addr16
pop
outsb
pop
add
fdivrp
sbb
push
es
scas
mov
mov
push
jbe
dec
add
in
mov
and
incl
cmp
inc
push
push
dec
mov
inc
lahf
pop
push
out
movsl
mov
mov
sbb
std
and
lods
ja
mov
orb
dec
ljmp
adc
mov
pop
and
push
push
test
leave
fsubs
out
lock
bound
out
mov
shlb
jnp
dec
sti
divb
pushf
mov
cmp
jg
int3
push
mov
gs
dec
decl
movsb
sub
fldenv
inc
cli
es
pop
sbb
lahf
frstor
xchg
ja
idivl
lock
mov
lock
or
mov
scas
cmp
jmp
mov
jmp
xchg
mov
test
and
cld
xor
mov
fwait
scas
dec
or
jp
shrb
mov
dec
push
push
add
push
pop
sbb
rcrb
mov
js
xlat
push
adc
enter
fwait
pushf
daa
sbb
mov
ds
mov
outsl
mov
push
sti
sbb
xor
inc
bound
bound
jg
out
rcll
push
mov
enter
xor
decl
xor
lock
push
sbbl
ja
jmp
mov
shrb
stos
or
cli
mov
jnp
call
frstor
in
sbb
negb
insl
add
mov
outsb
add
iret
and
std
jmp
jo
insb
mov
and
hlt
mov
scas
pop
pusha
pop
dec
inc
cmp
enter
mov
ss
sti
ja
rol
je
loop
test
or
push
aas
imul
test
das
in
loopne
add
push
jmp
sbb
lock
push
sbb
cmp
lcall
and
loopne
fistpll
cmp
sub
in
cmp
cmpsb
sbb
pop
lahf
daa
cld
cs
mov
aam
xor
and
ja
ljmp
mov
add
sar
loope
or
repnz
fdivp
loope
out
jns
or
sti
roll
outsb
sbb
clc
cli
cmp
fcomps
aas
mov
sbb
jnp
cmp
outsb
sub
inc
and
lahf
sti
adc
data16
add
arpl
and
pop
lret
les
daa
jnp
xchg
dec
pop
pop
es
cli
push
push
jns
paddb
sub
mov
sbb
sub
and
pusha
xor
lea
cld
push
cmp
dec
push
or
or
xor
jle
mov
push
pop
scas
mov
mov
loopne
les
mov
and
push
pushl
fisubrs
lcall
mov
pop
and
jns
push
addl
stos
cs
mov
ss
mov
imul
incb
adc
je
sub
sub
loopne
cmp
std
in
lds
sub
cwtl
sbb
mov
pop
fistpll
int3
test
sbb
pop
aad
js
std
sar
ss
push
fisubl
arpl
and
add
lds
dec
sarb
push
pop
pop
mov
and
ja
cmp
mov
and
sub
fwait
push
scas
loopne
out
fnstsw
jae
add
out
lods
or
mov
sbb
jmp
inc
loope
into
shlb
fiadds
int3
sbb
jb
dec
fstps
push
or
jnp
aas
inc
add
ss
jecxz
cwtl
or
in
lahf
rcr
stos
push
pop
movsl
xchg
movsb
xchg
inc
push
in
jae
test
mov
out
ja
pop
clc
mov
mov
out
sub
daa
sbbl
inc
sub
xchg
jle
jp
imul
cli
sbb
cmc
test
test
mov
imul
arpl
pop
popf
jnp
xor
shl
cmc
imul
test
ss
gs
cmc
cltd
mov
cmp
popf
dec
imul
cli
xor
or
in
ja
jb
mov
inc
sbb
clc
adc
repz
mov
mov
pop
push
mov
sahf
sarb
rolb
leave
fldenv
std
cmpsl
sbb
sbb
sub
cmp
pop
cld
jl
sbb
leave
iret
sbbl
jmp
sub
sub
mov
pop
xlat
sbb
repz
imul
add
aas
add
fld
add
pop
bound
jne
cmp
icebp
mov
in
jg
imul
xchg
mov
loop
dec
sbb
pop
mov
xlat
repnz
clc
loope
fldl
and
add
inc
pushl
pop
cmp
cmp
cmp
push
dec
adc
or
xchg
or
je
popf
sti
and
xchg
cltd
outsb
jl
cmp
push
fs
clc
loopne
push
incl
ja
adc
push
or
adc
cld
adc
scas
sbb
cwtl
sarl
test
mov
call
jmp
and
rcrl
add
or
insb
out
dec
xchg
add
inc
inc
fdivrl
clc
cmp
les
jmp
pop
xchg
lcall
mov
sti
jmp
sub
cli
mov
jmp
sti
push
enter
fisubrs
movsb
dec
jg
pop
and
dec
cmp
shrl
jg
stos
inc
pop
clc
rorb
popf
or
add
mov
clc
ja
loopne
jne
ds
adc
ss
loop
cmp
lds
push
jmp
mov
cli
out
inc
insb
dec
stos
push
mov
push
out
scas
lcall
call
rorb
pop
add
dec
call
and
pop
out
inc
adc
push
out
add
les
push
testb
sub
movl
mov
jo
rcll
clc
test
and
sbb
imul
sbb
cmpl
jno
jae
pop
jne
jns
add
xor
sub
shl
leave
inc
ja
lgs
inc
fs
fs
mov
cs
sbb
add
pushl
dec
int
dec
iret
inc
sub
lret
icebp
movsl
mov
adc
cmp
cmpsl
lret
add
ffreep
clc
mov
ret
psraw
jns
push
mov
mov
gs
dec
cmp
ljmp
mov
outsb
jnp
inc
js
push
jae
dec
xchg
scas
hlt
scas
cld
mov
xchg
jp
sbb
mov
xchg
pop
in
pop
or
sub
and
jmp
enter
jl
jecxz
jmp
incl
les
pop
jbe
sbb
sbb
jmp
imul
dec
dec
loopne
dec
out
aas
ror
pusha
repnz
pusha
shr
enter
jg
adc
add
xchg
outsb
fidivrs
repz
les
or
adc
into
jg
sbb
add
mov
pop
and
jb
in
mov
decl
test
clc
in
fisubrs
xor
dec
repnz
sbb
or
clc
push
les
xor
mov
mov
or
dec
in
pop
dec
xchg
cmpxchg
test
and
xor
test
clc
aas
and
les
daa
shrl
imul
mov
jecxz
ret
jo
jmp
or
iret
xor
and
outsl
sbb
lock
pop
outsb
lock
sti
lods
loop
fldlg2
pop
pushf
mov
jg
pop
jmp
and
cmp
fwait
or
enter
dec
mov
enter
jno
dec
sbb
test
push
scas
mov
xchg
push
push
mov
pop
movsb
mov
jmpw
aam
jo
sbb
dec
rcrl
cmp
mov
and
cwtl
adc
stos
loope
pop
adc
xchg
stc
decl
sbb
and
cmpb
xor
mov
jle
test
cmp
fndisi(8087
and
cmp
cmpsb
mov
jno
std
fucomp
iret
adc
cmp
loop
xor
imulb
bound
flds
ret
jecxz
mov
dec
call
cltd
in
enter
test
inc
outsl
mov
mov
pushf
push
in
pop
std
mov
rorb
mov
lea
cld
sub
cli
add
std
test
ret
xor
cmp
cli
out
data16
xchg
sub
decb
mov
xchg
arpl
sbb
aaa
sahf
lods
mov
sbb
scas
jmp
sbb
clc
pop
test
loopne
imul
loope
or
lods
pop
dec
jg
stos
push
inc
into
loopne
xlat
aaa
mov
aam
scas
mov
mov
lahf
and
gs
cmp
fildll
cld
dec
cmp
and
pop
or
lock
hlt
mov
cmp
mov
test
icebp
xchg
js
punpckhwd
jge
xor
sbb
sbb
xor
in
cmpl
sbb
mov
in
mov
cmpsb
pop
push
pop
xor
enter
jb
mov
xchg
hlt
fmull
xor
mov
sub
mov
int
or
fists
xchg
sub
shlb
daa
cld
pushl
cmp
lahf
psubq
xlat
sbb
sbb
add
or
and
pop
sub
test
xlat
cmc
decl
dec
clc
inc
inc
out
ret
add
inc
loopne
sbb
in
movsl
xor
jg
jb
test
lods
xorb
iret
pop
sub
cmpb
lods
loopne
filds
xorl
outsl
cld
call
mov
popa
mov
mov
pop
int
ficomps
mov
dec
inc
pop
push
push
addr16
ss
pop
sub
je
std
xlat
push
roll
push
lahf
pop
mov
ja
mov
int3
cld
sbb
push
pop
mov
xchg
clc
divb
dec
xor
in
icebp
cmpsl
xlat
ja
jo
jbe
aam
sbb
pop
out
add
cmp
fisubrs
imul
ret
xchg
js
into
xchg
out
cli
inc
out
std
inc
iret
jno
pop
push
dec
out
in
xlat
mov
sti
adc
xor
sti
ja
inc
push
xchg
xchg
orb
add
push
outsl
xchg
inc
push
mov
fstpl
and
jne
ss
in
add
out
data16
sbb
xor
mov
push
lods
sub
pop
test
jnp
push
std
mov
cmovbe
add
push
cmovo
mov
mov
and
dec
and
xchg
add
xchg
cld
into
adc
adcb
outsl
push
jae
arpl
jmp
cmp
mov
decl
out
push
or
mov
jno
in
rorb
in
add
pop
ret
imul
lea
lock
cld
cs
pop
xor
sbb
push
out
leave
scas
incl
lods
and
mov
mov
cld
mov
mov
mov
fcomps
push
adc
pushl
pop
aaa
xchg
dec
or
inc
lret
cmpsl
das
push
scas
das
incl
xchg
cmp
sbb
or
aas
sbb
mov
psubb
jnp
or
adc
cmpsb
int3
inc
sti
mov
mov
ja
cwtl
ret
push
cmp
jg
cli
xchg
adc
push
sbb
dec
xchg
rcl
in
mov
cld
pusha
xlat
test
xchg
into
cmp
pushf
cmp
sbb
shlb
adc
cmp
fidivrs
bound
xlat
or
repz
mov
daa
xor
sahf
mov
repz
mov
imul
test
and
pop
imul
cmp
add
add
std
or
push
and
or
add
out
aaa
cmp
inc
leave
or
aad
xor
add
incl
icebp
jb
sub
mov
fbstp
fs
sub
ror
mov
cld
hlt
jg
in
add
psrlw
sub
arpl
je
jno
xor
idivb
sbb
int3
jns
xchg
pop
dec
shl
scas
jg
mov
or
ds
lock
pop
rolb
orb
add
arpl
mov
dec
push
int3
hlt
xorl
mov
mov
inc
mov
inc
cmp
jbe
pusha
out
hlt
inc
cmp
incl
cld
scas
sub
fmuls
es
cmc
stos
mov
ret
or
jno
dec
push
dec
rcrl
adc
adc
mov
enter
cld
ret
mov
inc
mov
pushf
hlt
in
pop
jmp
aas
mov
inc
sub
cli
push
mov
push
dec
rolb
pop
out
popl
ljmp
aas
push
out
push
mov
std
or
movsl
ss
add
pop
dec
cltd
sbb
mov
subb
out
adc
lods
adc
mov
jmp
rcll
mov
testl
out
pushl
into
jnp
das
repnz
jae
inc
rol
jmp
fmull
adc
inc
dec
sub
and
and
aas
jb
mov
loopne
mov
frstor
pop
sub
mov
inc
daa
test
cmp
mov
maxps
lock
mov
test
aad
dec
mov
outsb
and
leave
into
cld
incl
fsubrl
icebp
or
cmp
pop
dec
jne
mov
add
jmp
sub
mov
xor
fdivr
out
push
xchg
fisttpl
add
jae
and
or
and
lods
out
repz
fs
loope
sbb
outsl
xchg
push
cwtl
int
sbb
clc
sbb
jecxz
addr16
and
enter
subl
fdivr
sbb
add
mov
jp
pop
cmpl
outsb
pop
fs
dec
sub
les
decl
sbb
mov
cli
add
and
pop
hlt
xor
jae
movsb
stos
sbb
xchg
daa
cwtl
fnsave
pop
daa
mov
xor
dec
jmp
es
or
outsl
out
jl
sti
int
mov
rorb
pop
pusha
add
rorb
sub
lahf
in
inc
stos
jbe
loope
aad
bound
xor
jg
shl
mov
xchg
sub
jecxz
mov
lods
les
pushl
rclb
imul
push
and
pop
push
mov
jge
lret
mov
jg
jmp
dec
addr16
xor
push
sbb
adc
arpl
sbb
sahf
inc
out
aad
mov
add
push
in
push
popf
imul
sub
fxch
push
repnz
push
jns
push
stos
pushl
fs
push
mov
loope
xor
pop
xchg
xchg
out
fstpt
pop
jl
cli
out
push
incl
divb
and
sub
popl
je
xchg
js
adc
shll
aaa
imulb
jmp
mov
out
pop
pop
imul
cmp
and
jmp
ret
jmp
adc
and
jb
sub
hlt
mov
mov
push
cwtl
rclb
push
ret
inc
add
enter
mov
popa
pop
outsb
pushl
lahf
adc
mov
and
stc
push
and
sarb
dec
mov
push
fstpl
push
cmp
cli
out
cmp
js
jno
jecxz
pop
mov
mov
and
ja
push
sub
or
mov
lahf
and
mov
push
cld
jecxz
dec
mov
cmp
push
loopne
out
gs
icebp
testl
add
cwtl
dec
mov
ljmp
idiv
pop
aam
sahf
nop
sbb
xchg
lahf
mov
test
sbb
incb
inc
inc
ljmp
cltd
int3
cli
cli
adc
femms
xor
aam
mov
cmp
mov
or
aas
sub
adc
scas
and
jg
call
xchg
dec
mov
adc
or
cmpsl
push
movsb
sub
addr16
clc
cmc
mov
sub
lret
fsubrl
iret
cmc
ffreep
out
pop
lds
aaa
mov
and
xchg
bnd
out
jmp
roll
inc
aas
mov
ja
pop
jg
pop
loope
lods
push
pushf
inc
adc
cld
icebp
clc
pop
jmp
das
mov
cmc
and
jmp
dec
xor
in
push
repnz
out
push
pop
mov
sbb
inc
fbstp
daa
and
xor
je
xchg
mov
pop
and
cmpsl
jo
cmpsb
arpl
cmp
inc
mov
ljmp
dec
lahf
sti
js
push
pop
out
pop
aaa
ficoml
das
clc
sbb
test
pop
loopne
xor
dec
movsl
in
mov
lret
repnz
inc
add
mov
cmp
sbb
sti
or
jp
push
jb
pop
std
roll
cltd
xchg
inc
outsl
cmp
sti
loop
adc
pop
fidivrl
popf
les
mov
push
and
adc
pop
lods
xchg
mov
testl
jmp
hlt
dec
stos
outsb
test
cld
pop
test
xchg
pop
cmpb
aam
addr16
xchg
mov
mov
mov
push
and
nop
daa
out
fsubrl
or
out
push
lods
sub
inc
inc
mov
scas
pop
loope
les
aam
mov
mul
inc
lea
jg
pop
movsb
push
fsubs
jo
negl
jnp
xchg
xchg
cmpsb
lea
adc
es
xchg
xchg
or
xchg
scas
mov
lds
out
dec
jg
mov
jnp
icebp
push
in
sbb
ds
lock
and
jle
scas
loop
lahf
adc
cmp
out
and
testb
stos
push
sar
dec
decl
mov
loopne
lret
mov
mov
shrb
cmp
out
sbb
or
jae
test
iret
lods
rcr
mov
adc
popa
call
stc
arpl
data16
insb
and
decl
mov
dec
sbb
mov
jp
inc
mov
test
dec
mov
push
cmpsl
pop
fcomi
movsl
dec
cmc
xlat
ja
inc
aas
push
shlb
aaa
arpl
mov
andb
ret
stos
in
addl
xchg
or
or
loop
adc
sbb
xlat
adc
icebp
fs
cmp
cli
inc
rolb
xchg
lahf
adc
loop
aaa
adc
jecxz
xor
cwtl
pushf
mov
push
xchg
arpl
mov
sbb
xchg
jns
xor
add
addl
lret
push
jl
inc
jg
clc
dec
push
ds
ret
out
je
xor
cmp
sarl
add
and
outsl
inc
je
jecxz
pop
mov
xchg
mov
xchg
adc
idiv
sub
dec
sbb
xchg
mov
or
cmp
insb
dec
loopne
mov
std
icebp
nop
shlb
mov
cmp
in
pop
push
jmp
imul
pop
or
jl
mov
sub
fadd
test
jl
js
push
cs
cmc
pop
jmp
movsb
xchg
imul
jb
or
dec
gs
hlt
scas
mov
pusha
cmp
inc
scas
sbb
mov
sub
jp
add
or
ret
dec
adc
adc
inc
add
ja
add
fdivl
andb
xchg
imul
outsb
and
fnstsw
sbb
out
sub
ret
out
aas
xchg
cli
in
dec
push
and
in
xchg
jb
adc
push
insb
add
jle
roll
adc
fxch
sbb
adc
enter
ror
popa
sub
fcmovnb
fstl
inc
cmc
aas
test
sahf
add
xchg
enter
test
push
hlt
fwait
and
pop
sbb
fisttpll
fiaddl
xlat
and
mov
sbb
movsb
loop
mov
cmp
ret
mov
mov
call
mov
sbb
lcall
push
adc
mov
push
mov
dec
sahf
fdivr
jg
jns
pushf
mov
in
ljmp
aaa
cmp
popf
inc
mov
mov
loopne
pop
es
mov
push
sub
sbb
cmp
ljmp
inc
xchg
inc
pushf
pop
mov
xor
xchg
aam
cmp
loop
testb
test
das
lock
cmc
or
and
dec
jecxz
pusha
mov
jp
dec
inc
pushf
inc
mov
sahf
and
pop
push
mov
push
adc
fnsetpm(287
pushl
mov
inc
loope
into
inc
mov
lods
inc
sti
and
lahf
lea
xchg
add
int
mov
and
incl
jg
rorb
call
or
inc
inc
test
addr16
loope
xor
int
incb
jnp
sbb
repnz
out
lods
divl
cmc
iret
negb
add
xchg
clc
dec
adc
mov
shll
ret
jg
add
out
push
push
cmpsl
mov
mov
add
cmc
int3
push
inc
out
or
leave
cmpsl
inc
inc
out
bound
stos
lock
in
in
testl
add
stos
testb
pop
lds
push
xchg
clc
aaa
dec
in
test
xchg
rcrb
mov
add
daa
pop
push
dec
pop
unpckhps
sub
lret
inc
lods
decl
cmc
mov
inc
xchg
mov
cli
decl
pop
int
mov
repnz
mov
lock
cwtl
dec
xor
pop
jo
push
dec
push
dec
std
call
mov
imul
pop
adc
stc
cmpl
jg
ffreep
loopne
inc
xchg
sarl
and
fwait
stos
mov
xor
add
dec
push
push
rcll
add
leave
movsl
test
hlt
cmpsb
dec
push
outsl
or
mov
inc
jae
add
scas
push
jo
inc
inc
push
mov
inc
ljmp
cmp
outsb
scas
adc
push
outsb
push
fdivrs
jb
xor
gs
adc
xor
das
mov
push
push
pusha
pop
xor
add
add
push
scas
lret
clc
dec
push
addr16
aas
sub
push
jne
in
jne
push
xchg
clc
sub
adc
ja
popa
cmp
ss
jp,pt
cmpsb
aas
mov
inc
cmc
es
movsb
jp
push
cmpb
or
clc
inc
loopne
in
cmpl
sub
ljmp
repnz
dec
je
outsb
insb
add
mov
push
mov
in
adc
sbb
sub
add
lret
outsl
dec
mov
push
xor
inc
aas
aas
xchg
jne
pop
out
outsl
jmp
mov
and
adc
jnp
std
mov
dec
add
nop
or
mov
lds
or
mov
or
adc
add
imul
pop
xchg
nop
nop
adc
dec
call
jbe
dec
pop
pusha
and
outsl
lea
aaa
and
sub
insl
int
testb
add
and
adc
or
adc
mov
mov
or
cs
and
jbe
or
adc
outsl
fcmovnu
inc
andl
add
jbe
or
mov
jno
mov
jbe
mov
or
lods
jne
adc
add
push
and
xor
nop
and
and
and
adc
mov
imul
xchg
jns
dec
or
jle
out
fwait
xor
and
add
mov
jo
mov
adc
adc
inc
mov
push
pushf
mov
add
adc
lods
mov
adc
fildl
xchg
into
xor
jb
gs
xor
xlat
or
fs
insb
sbb
sub
push
nop
cmp
adc
mov
sti
adc
insl
test
mov
cmp
push
xor
out
nop
xor
ficomps
dec
and
dec
sub
inc
or
or
lea
mov
cmp
pop
shrl
fistpl
and
pop
adc
adc
add
lcall
mov
sbb
push
adc
inc
sbb
xlat
add
and
dec
movsl
out
test
and
imul
pop
js
decb
jp
add
lods
xor
push
pop
xor
imul
jae
nop
sahf
push
mov
int
pop
jp
hlt
pop
andl
stos
add
addb
fimull
cmc
cmp
adc
movsb
xchg
jo
nop
xor
xchg
jecxz
in
or
and
es
fisttpl
or
add
enter
jmp
add
add
add
add
imul
popa
mov
push
insl
popa
jo
imul
insb
outsl
mov
mov
arpl
inc
js
push
gs
push
dec
fs
push
jg
in
mov
sbb
jae
jb
push
jns
dec
insl
push
imul
in
fs
or
outsb
je
dec
and
gs
outsb
outsw
inc
cmovl
imul
outsb
inc
adc
jb
dec
popa
outsb
fs
push
push
je
mov
fldt
outsl
dec
push
pop
jns
jb
divb
pop
or
jo
insl
out
mov
adc
outsb
pop
adc
outsb
ja
push
push
popa
addr16
fnsave
pop
testl
dec
push
jo
jae
mov
and
inc
insb
call
pop
mov
push
imul
mov
lods
insl
jo
arpl
inc
cmp
inc
je
push
frstor
push
addr16
jns
mov
adc
mov
add
cmc
imul
cmp
dec
rcrw
adc
fs
adc
cmp
idivb
and
jae
sbb
sub
inc
je
bound
mov
xchg
and
push
je
insl
lods
insl
mov
inc
insb
subb
add
jne
xchg
inc
fildl
push
lret
incb
jne
cmp
outsb
fs
fcomps
cmp
mov
inc
jl
iret
lock
inc
or
into
inc
adc
or
notb
inc
bound
insb
sti
mov
xlat
addr16
or
dec
xchg
pusha
push
clc
lret
inc
xchg
mov
pop
jne
push
sub
mov
call
fcomps
insb
inc
jnp
pop
dec
outsl
adc
adc
dec
xchg
out
xor
inc
out
pusha
pop
dec
gs
pusha
mov
sbb
jne
adc
or
sub
cmp
in
adc
pop
jecxz
ret
fsubr
inc
insb
add
push
popa
jbe
cmp
int
dec
popa
sti
adc
adc
xchg
or
sbb
orb
clc
push
gs
daa
pushw
ret
push
inc
cmpsl
arpl
push
jb
jae
sub
mov
mov
sarb
lods
xor
add
imul
inc
jns
push
mov
adc
and
xor
bswap
fs
das
adc
ss
and
jae
xor
arpl
jo
xchg
jb
dec
mov
inc
jae
in
adc
xorb
fdivrs
adc
imul
add
dec
outsl
push
adc
imul
enter
roll
inc
imul
jb
jl
mov
adc
jge
loope
insb
sbb
outsb
lods
push
xor
adc
fs
adc
mov
lahf
data16
dec
push
pop
sbb
jb
rclb
imul
in
mov
dec
pop
imul
push
dec
dec
bound
and
pop
or
fstpt
inc
pop
repnz
xor
dec
mov
mov
xchg
les
push
insl
pop
scas
push
mov
data16
adc
insl
add
dec
inc
sbb
push
movsl
rcrl
pop
push
xchg
scas
jge
or
jo
insb
ss
add
cmp
jg
test
or
in
cld
xchg
je
insl
push
loop
jp
arpl
jnp
sbb
mov
jbe
call
sbb
subl
jo
jg
inc
or
jo
mov
or
xor
adc
and
mov
and
aas
pop
inc
jae
bound
inc
insb
in
rorl
je
dec
push
push
dec
push
jne
insb
mov
aad
inc
ja
push
sbb
imul
dec
imul
inc
jg
popa
adc
cmpsl
sbb
push
imul
js
push
jmp
add
dec
fimull
xchg
lods
jno
outsb
insw
lods
pop
add
inc
lds
mov
sbb
pop
jbe
addl
jae
jge
leave
test
adc
push
sub
pop
inc
negb
movl
dec
mov
jle
jns
arpl
add
dec
push
inc
dec
add
incl
inc
loopne
sidtl
add
push
jbe
lret
daa
mov
add
jnp
imul
add
mov
ds
pop
add
sub
pop
jge
lret
pop
push
add
jno
fmull
nop
fisttpll
mov
pop
js
add
mov
push
je,pn
pop
in
inc
add
nop
jmp
cs
out
inc
pusha
jb,pn
testl
and
sbb
push
pop
add
ss
mov
orb
cwtl
imul
dec
jae
or
icebp
push
fcoms
add
cld
sub
adc
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
jmp
in
dec
fwait
sti
xchg
lahf
test
sub
es
jno
das
fwait
sar
rorb
movsb
mov
lods
cmp
or
int
or
movsb
inc
cmp
and
lret
sbb
shl
std
aad
adcb
add
push
ljmp
push
push
in
gs
fwait
or
imul
aaa
ljmp
jo
push
je
push
bound
xor
popf
into
das
mov
out
adc
cmp
cmp
outsb
into
loop
jo
or
add
lcall
scas
sbb
or
adc
jge
js
cmp
mov
test
sbb
sub
es
loop
gs
mov
xor
fisubrs
dec
jmp
inc
xchg
xor
mov
jb
mov
and
ja
mov
arpl
mov
popa
inc
das
or
fsincos
fimull
sub
jle
mov
jle
rcrb
mov
gs
cwtl
adc
sub
sbb
mov
je
mov
jl
adc
mov
les
popa
add
add
call
hlt
ljmp
adc
xchg
xchg
jle
addb
xchg
push
inc
lea
call
mov
iret
jecxz
pop
addr16
lea
xchg
mov
cmpsb
add
out
arpl
lea
lods
sbb
pop
jns
shl
inc
loopne
stos
dec
xor
pusha
gs
mov
mov
sub
add
sub
stos
test
aas
fldenv
or
inc
lods
ret
jns
xor
mov
xchg
daa
mov
xchg
add
mov
xor
pop
out
inc
pop
jecxz
cwtl
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
and
add
pop
nop
add
and
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
addb
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
jo
js
jns
ja
push
outsl
add
and
inc
add
popa
add
data16
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
jo
js
jns
ja
push
outsl
add
and
push
add
insl
add
jae
data16
popa
add
js
and
pop
add
outsl
add
je
imul
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
js
jns
ja
push
outsl
add
add
jo
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
insl
add
jbe
and
push
add
add
popa
add
add
imul
add
add
add
add
add
add
add
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
imul
add
imul
js
add
add
add
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jo
js
jns
ja
push
outsl
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
leave
les
add
add
les
add
add
les
add
add
out
les
add
add
cli
les
add
add
pop
lds
add
add
adc
add
movsb
les
add
les
add
lds
add
add
xor
add
inc
lds
add
add
lds
add
add
jle
add
add
add
mov
add
add
add
sahf
lds
add
add
add
add
add
add
add
lds
add
add
add
lds
add
add
add
lds
add
add
add
lds
add
add
add
lds
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
cs
insb
add
insl
fs
xor
cs
insb
add
ja
outsl
arpl
fs
insb
add
fs
jo
cs
insb
add
insb
popa
outsb
insl
popa
outsb
cs
insb
add
gs
cs
insb
add
arpl
xor
fs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
outsb
jbe
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
popa
jne
gs
insb
jne
je
jb
outsl
fs
push
jb
outsb
je
insb
addr16
add
add
inc
push
arpl
js
add
inc
jae
imul
dec
push
inc
fs
outsl
outsb
outsb
arpl
outsb
add
add
gs
dec
inc
push
dec
arpl
push
add
dec
pop
push
jo
inc
jb
add
add
je
popa
arpl
add
je
push
dec
dec
imul
