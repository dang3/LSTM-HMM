sbb
add
or
adc
mov
mov
rclb
mov
fsubrs
stos
lea
addr16
push
roll
mov
xor
lods
push
push
icebp
mov
outsb
stos
or
xchg
mov
fistps
xor
jl
mov
cmp
mov
fbld
ret
out
enter
mov
sub
fisttpll
dec
adc
and
push
jecxz
xchg
inc
scas
mov
push
mov
pop
mov
roll
jecxz
int
or
mov
test
daa
pop
sarb
mov
pop
lea
faddp
push
fbstp
mov
icebp
mov
popa
jmp
cmc
pop
sub
mov
push
sbb
pop
pop
ss
push
scas
shlb
scas
lret
mov
rep
cmpsb
cli
aam
test
push
lcall
push
and
dec
shll
adc
inc
ror
leave
dec
popa
in
fstl
addr16
push
stos
icebp
xchg
cltd
xchg
inc
mov
adc
std
xor
xor
in
sar
mov
sarl
out
mov
scas
in
lods
test
push
dec
shll
in
les
inc
xchg
jge
jb
test
stc
imul
out
jno
stc
clc
shl
jbe
scas
xchg
rol
jno
out
ret
outsl
pop
mov
addr16
sbb
sub
sbb
and
cmp
jle
sbb
xchg
sbb
mov
enter
rclb
jns
dec
aas
stos
adc
mov
or
je
push
mov
test
inc
outsb
dec
inc
add
xorb
movsb
gs
dec
cs
mov
cmpl
ret
inc
outsl
das
jmp
popa
int3
ret
mov
mov
pop
outsb
pushf
lahf
jns
leave
rol
loop
mov
sub
xor
ret
pop
in
jns
mov
cld
lahf
aas
mov
int3
pop
cmp
inc
push
stc
mov
in
jbe
jecxz
jecxz
lcall
out
insb
clc
in
dec
mov
daa
setae
dec
bnd
mov
cmpsl
jbe
mov
int3
or
insl
insb
jle
fimull
stc
bound
xchg
sub
jmp
out
stc
divb
dec
cwtl
pushl
inc
cmpsl
dec
pop
fmull
sbb
sbb
mov
out
mov
dec
dec
and
mov
cmp
imul
add
push
pop
repnz
jno
fldl
xlat
inc
gs
mov
jo
mov
stc
adc
cmp
sub
enter
pop
inc
adc
scas
outsl
dec
adc
add
pushf
push
xor
jl
add
push
sbb
jo
xor
push
aam
jge
ds
xchg
jne
fdivl
subb
adc
sub
fstpt
mov
iret
sbb
push
cmc
out
push
sar
repnz
enter
cmp
les
out
sbb
rcrl
adc
call
mov
lods
push
jae
es
jmp
jnp
push
xchg
fwait
dec
sub
subl
aaa
loopne
mov
daa
push
std
push
lahf
leave
mov
inc
inc
jl
bound
jne
cmp
or
cmc
sub
je
cmc
in
aas
movsb
or
in
fwait
insl
loop
dec
lcall
mov
push
xchg
enter
push
data16
call
int3
stos
add
pop
mov
inc
mov
xor
jp
add
xlat
add
jge
aam
fbstp
jle
movsb
mov
sarb
mov
outsl
lods
sbb
push
add
fsubrl
test
xor
xchg
rolb
outsb
inc
and
cmp
jmp
mov
adc
adc
mov
xchg
pop
xor
push
and
and
push
outsb
mov
dec
mov
nop
jbe
inc
adc
cli
mov
or
repnz
mov
push
inc
movsb
shl
cli
aad
int
ret
std
call
ret
pop
jae
loop
and
in
daa
adc
lret
lock
mov
lret
adc
pop
shll
aas
fdivrp
jae
push
mov
or
push
cs
xchg
cmpsl
cmp
ljmp
sbb
pop
xchg
jg
or
ljmp
repz
inc
adc
jle
xchg
sub
jg
cmp
daa
sub
imul
push
mov
pop
ss
or
sbb
loopne
push
std
lret
push
icebp
fsubl
xchg
jnp
inc
int3
xor
push
cmp
inc
pop
rclb
jns
jp
xchg
leave
popa
movsl
mov
xchg
imul
ficoml
ja
les
scas
pop
fcmovu
and
lock
sub
fsubs
add
lcall
mov
dec
mov
aas
scas
jne
pop
lret
lods
lods
cmp
lock
mov
xor
loope
fnstsw
test
outsl
ja
ror
xchg
lret
inc
pop
xor
push
in
sub
inc
mov
push
pushl
subl
adc
fsubr
xchg
cmp
mov
push
dec
push
mov
pop
out
je
or
cmp
out
lret
push
notb
xchg
mov
dec
fstl
aam
sbb
add
pop
out
rorb
push
cmpsl
mov
xchg
xor
aam
inc
jnp
pop
inc
mov
sbb
xor
subl
in
cmp
mov
xor
mov
ljmp
xor
dec
push
jnp
data16
and
jae
push
jne
lods
mov
jmp
inc
push
scas
sbb
xor
dec
mov
ret
jnp
sbb
in
or
stos
pop
cmp
push
ret
sub
mov
iret
pop
xorl
xchg
adc
or
xlat
cli
push
mov
inc
pop
and
mov
xchg
mov
fs
cmc
add
in
adc
aas
mov
push
add
or
cmp
call
sub
mov
int3
bound
inc
pop
fisttps
pop
dec
sub
in
mov
dec
pop
dec
push
inc
cmp
imul
jno
loopne
subb
mov
sbb
pop
or
movsl
pop
jecxz
sub
out
adc
add
jo
dec
xchg
pop
stc
inc
fisttps
insb
dec
fsubrs
push
sahf
repnz
loopne
cmp
mov
bound
mov
sub
out
popa
and
mov
int
xor
loop
popf
jno
lock
push
push
in
or
cmp
push
or
add
sbb
cmp
sub
sbb
lret
adc
mov
inc
inc
push
sub
xlat
cmpsb
repz
jbe
es
mov
mov
inc
xor
push
fistps
in
icebp
lret
testb
xor
mov
fildll
sbb
ds
cwtl
or
jnp
ja
mov
jno
push
cmpb
arpl
add
into
sub
ficomps
addl
dec
xchg
sbb
push
add
fnsave
outsb
js
pop
insl
ljmp
lret
or
sarb
mov
call
adcl
push
aam
fwait
mov
mov
push
and
rcrl
fisttpl
and
mov
mov
jg
push
adc
imul
ja
mov
lcall
mov
mov
std
cmp
popw
mov
aad
outsl
gs
gs
int
mov
mov
push
push
or
mov
xor
push
sti
sub
cwtl
xchg
fdivs
xor
sub
aad
mov
mov
pop
mov
or
sbb
repz
cmc
loope
jbe
cwtl
ret
call
sbb
arpl
aaa
jne
daa
pushf
cmp
mov
lcall
adc
cmp
jecxz
es
sti
movsl
movsl
mov
repnz
pop
fwait
pop
dec
add
pop
push
cmp
mov
pop
push
scas
cmpsl
pusha
bound
fnstenv
cmp
cmpsb
push
stos
jnp
test
leave
jg
repz
dec
scas
je
int
aas
or
push
push
lea
inc
testl
add
push
or
mov
xor
push
adc
pop
push
inc
lea
pusha
push
inc
or
neg
mov
or
jae
pop
nop
pop
pop
mov
sub
iret
mov
daa
push
xlat
popf
js
or
test
pop
das
dec
inc
xchg
jecxz
aad
dec
lds
adc
push
nop
sahf
pop
loopne
pop
jo
arpl
jp,pt
fadd
push
loope
cmpsl
les
in
in
das
stos
add
or
push
mov
push
cmpsl
pop
xor
and
stos
mov
mov
jl
push
call
jo
sbb
aas
sub
sub
rol
fidivs
test
leave
lods
add
xchg
adc
ret
pop
insb
mov
leave
in
sahf
into
sbb
push
jge
or
dec
das
stc
and
je
lods
sbb
das
jae
dec
mov
iret
inc
dec
das
sahf
dec
push
cli
movsl
insb
dec
mov
mov
xor
push
sbb
notl
adc
cmp
add
xchg
nop
cltd
sub
xchg
pop
and
mov
ret
mov
adcl
xchg
cltd
mov
mov
fwait
cmp
pop
shl
in
popa
and
inc
stos
mov
xchg
adc
cmc
dec
jae
cli
fidivs
or
jl
push
push
jmp
mov
or
lcall
inc
or
jae
mov
mov
imul
sub
mov
clc
cmp
cmp
mov
rolb
inc
ds
shrb
ljmp
std
jb
sbb
stc
das
je
test
arpl
push
add
xor
lods
je
repz
test
mov
mov
in
fs
daa
dec
out
mov
imull
push
mov
dec
repz
pop
fstps
mov
outsl
inc
mov
insl
add
bound
shlb
ror
rcrl
mov
je
mov
mov
xor
dec
je
pop
test
and
cmp
enter
insl
int3
adc
mov
and
sbb
xlat
mov
mov
push
std
xchg
pop
pop
jae
xchg
lea
add
out
sub
pop
cmp
outsb
mov
jb
int
insb
or
jo
icebp
push
inc
pop
repnz
adcb
out
andb
lret
frstor
cmp
mov
clc
sahf
xchg
js
add
lock
rcl
cli
pop
jne
ret
inc
ret
lods
inc
loopne
cmp
jbe
sbbl
mov
cmp
push
mov
scas
imul
xchg
mov
pop
push
enter
xchg
sub
loop
mov
orl
sub
push
mov
inc
roll
dec
lret
jmp
in
mov
test
ret
lahf
cmp
xchg
push
outsl
adc
shlb
xchg
pop
scas
test
lret
fistpll
lret
int3
les
loopne
ja
xor
or
fcompl
mov
xlat
mov
xor
test
mov
mov
rcrb
out
mov
inc
cmpsl
mov
adc
cli
data16
mov
mov
int
sti
push
xlat
push
mov
mov
stc
popf
ja
pop
aas
mov
mov
push
mov
lea
xor
inc
mov
nop
int
and
in
sbb
adc
sub
mov
sub
jbe
or
divl
stc
lcall
ds
enter
xlat
inc
xchg
insb
xchg
inc
adc
mov
outsb
jl
push
jno
shl
stos
xchg
pop
ficompl
push
or
testl
inc
sub
shrb
xchg
cmpsb
popa
jbe
stc
or
mov
cmp
mov
pop
loopne
dec
sbb
aas
mov
dec
push
data16
ret
xor
xor
repnz
pop
adc
jmp
leave
mov
jp
imull
ret
or
shrl
dec
push
xor
fisttpll
xchg
pop
cmpsb
push
jecxz
insl
pop
or
mov
sbb
test
outsl
pushf
mov
cmp
dec
push
xchg
lods
in
xor
or
mov
sub
das
jmp
xchg
dec
ret
je
jnp
xchg
pushf
testl
fisubl
dec
aaa
xor
shll
push
rcl
mov
and
dec
jno
pop
add
push
dec
adc
shll
xchg
repnz
jns
decb
mov
push
pushf
mov
inc
gs
push
adc
pusha
mov
movsl
sub
adc
hlt
jle
out
sub
mov
push
in
or
rcl
add
iret
mov
and
mov
lahf
jnp
add
in
dec
in
bound
adc
mov
lret
addl
shl
jmp
xor
jbe
lahf
add
es
and
dec
pop
push
cmpsb
pop
scas
dec
lcall
cmc
movsl
cmp
and
das
add
push
iret
mov
add
mov
cmp
arpl
inc
or
outsl
dec
int3
int3
test
pop
sub
push
das
sub
fdivr
inc
lahf
cli
mov
mov
push
push
cmpsb
push
mov
sub
adc
loope
daa
loop
loope
jp
sbb
mov
add
popa
cmp
iret
and
addr16
sub
popf
stos
adc
push
lret
inc
pusha
mov
adc
xchg
bound
in
push
rcrb
popa
mov
dec
add
ds
cmp
add
lea
adc
dec
sbb
xchg
cwtl
xor
jns
mov
or
movsl
add
stos
xchg
aaa
sub
adc
push
fstpt
mov
mov
call
out
adc
int
cmp
jnp
outsl
inc
movsb
adc
dec
ljmp
adc
adc
cmp
and
jno
cmp
mov
sub
loopne
outsb
punpckhdq
aaa
in
aam
ret
lods
jl
and
inc
pop
sub
jl
mov
add
movb
xchg
cmp
xor
or
fsubrs
push
or
dec
pop
mov
rol
or
ret
xor
mov
sub
adc
adc
adc
dec
lock
dec
mov
mov
cmp
cmp
lret
inc
test
push
cwtl
and
mov
mov
arpl
mov
in
cmp
fwait
inc
pop
fnstenv
cld
pop
and
stos
mov
push
scas
mov
idivb
xchg
lahf
hlt
xor
adc
punpcklbw
pop
mov
imulb
mov
aas
xlat
push
scas
fstpl
jns
mov
xchg
mov
rcrl
mov
pusha
xchg
push
popa
lock
ds
sbb
jmp
movsl
xchg
std
in
gs
movsl
jg
sti
pop
push
pop
mov
pushf
jg
jo
repnz
in
cmp
jbe
inc
add
ljmp
int3
rolb
stc
cltd
mov
add
out
fcmovb
dec
push
das
sbbb
stc
xchg
bnd
out
int3
push
sub
daa
jmp
pop
fisubrl
pop
lea
cmc
lret
icebp
mov
push
adc
dec
inc
sbb
sbb
movsb
jl
mov
addl
lods
shl
in
loopne
fcmovnu
push
aad
jp
mov
jno
jge
mov
scas
jl
lds
xchg
ret
xchg
mov
add
inc
ss
test
and
jp
or
pop
je
shll
mov
test
and
test
test
mov
and
int3
cmp
mov
pop
xchg
jmp
aas
loope
shrb
cwtl
shr
pop
ret
sar
and
cmpb
je
adc
mov
jb
shrb
mov
xchg
adc
jg
pop
sub
push
in
out
imul
call
out
sub
xchg
cmp
sub
fimull
xor
lods
das
loop
repnz
sub
xlat
lret
shl
push
test
mov
je
jl
dec
and
push
add
test
sub
outsb
jl
stos
jg
pop
inc
into
pushf
andl
sbb
mov
jno
insl
pusha
stc
cwtl
mov
gs
dec
cli
cld
mov
add
jge
jg
in
jbe
scas
sarb
mov
or
lods
dec
lea
inc
jecxz
xor
gs
adc
outsb
pop
inc
fdivl
xchg
jae
mov
cltd
mov
out
or
iret
stos
sbb
shr
int3
inc
push
push
decl
inc
std
pushf
roll
faddp
rcr
push
sub
pushl
xchg
jmp
das
add
imul
fistpl
shll
jle
iret
push
imul
xor
jo
bound
lret
test
outsb
pusha
mov
lock
cmp
enter
cs
and
add
cwtl
pop
rcrl
icebp
popa
nop
adc
and
push
je
adc
and
fs
and
jmp
push
aaa
pushf
leave
gs
fimuls
popf
dec
cmp
bound
rol
mov
add
mov
xchg
int
popf
and
fwait
arpl
aam
push
cmp
cli
pop
int3
xor
dec
xlat
sbb
adcl
pop
fistpl
mov
inc
pop
aas
cmp
outsb
aas
pop
stos
arpl
mov
or
push
fdivrs
jbe
or
ljmp
mov
insl
adc
das
in
inc
inc
mov
jecxz
push
adc
enter
jle
xor
aad
mov
cmpsl
push
cs
lcall
sahf
dec
loop
dec
cmpl
loope
sub
xor
std
pop
hlt
cmp
icebp
dec
stos
jno
add
xchg
jnp
nop
add
xchg
flds
fdivp
pop
stos
cmp
mov
ret
fmull
xchg
test
jle
in
mov
cmp
jge
les
mov
jne
dec
repnz
mov
mov
adc
cmp
loope
push
int
pushf
enter
adc
xorl
movsb
pop
adc
cmpsb
push
aam
sub
sbb
xchg
lahf
es
andl
bound
adc
lods
in
mov
adc
into
add
mov
ficoml
ds
push
xchg
jp
pop
setnp
ret
fstpl
push
int3
pop
inc
lret
int
imul
loopne
or
sub
inc
rol
mov
dec
fiadds
jg
push
xchg
sub
fsts
push
adc
cmpb
lret
push
cli
pop
stos
jle
cmp
mov
ss
pusha
sbb
add
xchg
and
shll
cmp
mov
pop
pop
js
pop
mov
pop
fmuls
fs
pop
mov
and
cmp
xchg
xor
jmp
mov
mov
gs
pushf
mov
ds
rol
mov
fwait
jp
repnz
adc
fdivr
xchg
aaa
push
pop
jg
in
in
cmp
jae
sub
pusha
push
or
jo
popa
lret
lcall
xor
ljmp
je
shlb
repnz
push
or
ret
mov
pop
ret
imul
mov
popa
cld
mov
imul
out
mov
int3
ss
jp
xchg
jmp
iret
out
loopne
inc
lret
sbb
je
adc
mov
mov
pop
lds
dec
and
ret
xchg
ja
out
cld
mov
movsl
sub
push
mov
sub
pop
jns
adc
push
movsl
pop
negb
mov
rol
out
mov
pop
or
cmc
and
lret
imull
pop
sbb
sbb
movsl
mov
es
pop
jge
test
sbb
fiadds
pop
sub
sbb
sbb
cmp
mov
jmp
jo
mov
lods
dec
dec
xchg
inc
dec
dec
popa
cmpsb
jmp
xor
pop
nop
ret
inc
mov
jae
add
pop
push
jl
das
push
add
jecxz
xchg
lret
jg
and
stos
les
adc
mov
sub
cmp
cmp
or
cmp
adc
xchg
sbb
adc
sub
loope
mov
or
das
outsl
call
push
mov
jb
iret
pop
sub
or
and
sahf
xchg
popa
pop
out
shll
push
push
pop
sarb
jge
sbb
cmpl
jmp
inc
push
sbb
andb
and
xor
or
pop
pusha
das
insb
sub
dec
mov
fistpll
incb
jecxz
mov
push
dec
dec
mov
lods
imul
jnp
sub
xchg
or
mov
cmp
popf
xchg
jmp
sub
cltd
sti
mov
inc
adcb
jle
mov
or
icebp
mov
hlt
iret
cmpsl
in
sbb
dec
jo
inc
sub
and
nop
dec
call
jg
lahf
sub
shrb
add
pusha
rcll
fsubl
pop
test
push
sub
xor
ret
adc
fsubl
adc
mov
mov
out
cmpxchg
sti
je
sahf
jne
dec
mov
mov
pop
nop
rcl
mov
jmp
inc
cmp
xorb
inc
xor
push
jmp
neg
lcall
xor
push
push
insl
cmp
jbe
movntps
jp,pn
xor
or
loope
xor
push
mov
push
pop
push
sub
inc
mov
inc
or
xor
mov
sbb
jno
lret
repnz
enter
pop
adc
add
xor
ja
push
loope
pusha
mov
mov
push
sarl
xchg
pop
in
popf
inc
mov
cmp
xchg
and
jle
sbb
push
insl
jb
jg
adc
dec
sbbl
movsl
dec
mov
xchg
daa
adc
xchg
mov
push
dec
jo
mov
add
mov
push
neg
xor
dec
push
cmp
add
cmp
imul
gs
lcall
mov
inc
fisttpll
sbb
pop
aad
pusha
subl
ja
mov
stos
loope
in
jle
fsts
pop
in
cmp
mov
push
mov
jb
daa
mov
and
push
fisubl
or
cmc
aad
data16
add
xor
dec
cmpsl
rorb
adc
aam
sub
jae
mov
xor
push
in
sti
inc
lcall
xchg
into
pop
in
jl
dec
leave
fmuls
xor
out
jb
in
mov
mov
mov
pop
or
and
inc
popf
ss
jge
test
xchg
ja
mov
dec
dec
push
lock
sbbl
movsb
push
rcrl
test
jp
lcall
loop
mov
repnz
add
subl
cmc
jne
gs
push
push
push
sbb
cwtl
ss
sbb
dec
rol
shrl
mov
das
push
enter
fsub
xchg
xchg
iret
leave
ret
testl
loope
cmp
push
or
es
cmp
mov
lock
inc
pop
clc
and
fsubl
rcrl
pshufw
scas
mov
ret
xchg
and
jne
movsb
shl
sarb
lock
jge
leave
jno
cmp
test
cmp
mov
jne
adc
pop
jns
push
ss
cld
sub
xchg
dec
frstor
pop
jmp
xchg
lods
sub
insl
enter
repnz
andb
lods
enter
cs
les
insb
xor
aaa
inc
rcrb
mov
add
fistpll
jbe
sbb
loop
xor
fsts
pop
bound
aam
push
cmp
sub
inc
cmpb
mov
xchg
icebp
sub
or
aaa
jmp
cltd
leave
sbb
mov
sub
scas
mov
pop
mov
add
dec
mov
pop
pushf
popa
mov
sub
dec
mov
mov
mov
jp
stos
dec
sbb
in
xor
push
mov
cltd
into
jmp
ja
cwtl
add
mov
add
and
mov
ficomps
scas
xchg
adc
out
mov
mov
inc
fdivp
enter
mov
mov
push
jp
mov
inc
xchg
repnz
mov
adc
xchg
jns
ds
sahf
cmp
dec
and
fchs
or
lahf
fsts
jmp
mov
sbb
clc
movsl
loopne
dec
xchg
mov
lods
adc
mov
xchg
push
mov
dec
mov
jl
cmp
pushf
fcmovb
xchg
or
push
sahf
lahf
pop
jl
shrd
enter
imul
test
lds
sbb
gs
enter
mov
pop
fcoms
out
sahf
mov
lock
mov
add
inc
jp
inc
mov
jecxz
fnstenv
pop
and
push
notl
lods
mov
aas
lock
fucomp
stc
sahf
fsubrs
out
test
negb
imul
popf
jmp
push
hlt
fldl2t
jg
lds
push
or
and
fimull
icebp
sbb
out
sbb
mov
in
pop
cltd
lret
ret
ds
lods
lcall
imul
push
scas
mov
sahf
sub
jle
push
int
fldcw
mov
jmp
loopne
push
push
les
cmp
add
aaa
or
fstl
nop
xchg
pop
push
and
cmp
or
dec
bound
iret
cmp
pop
or
aas
ret
adc
cltd
out
pop
jle
aad
fwait
pusha
sub
inc
stos
fsubs
mov
mov
jge
push
xchg
rcr
int3
in
ja
mov
sbb
xchg
jae
mov
test
cmpsl
in
xlat
pop
leave
adc
mov
sbb
jg
or
popa
lret
cwtl
sbb
add
mov
add
repnz
iret
movb
movb
jecxz
sub
std
sbbl
push
cwtl
pop
dec
adc
cmc
xchg
mull
xchg
xor
imul
push
les
fucomp
scas
lock
or
xchg
jmp
test
lds
dec
shrl
insl
cwtl
cmp
lods
orb
sub
stos
jno
leave
xchg
subb
testb
inc
mov
aam
pop
aas
clc
dec
les
repz
mov
inc
stc
adc
pop
mov
pop
stos
or
xor
mov
movsl
cltd
sub
out
pop
lret
xor
test
cld
ret
movsb
imul
xchg
rcrb
ret
mov
mov
fsubs
rcrl
push
and
popf
mov
cs
push
jle
std
fwait
push
or
mov
mov
mov
je
sub
cli
push
mov
out
out
jmp
push
and
push
insl
fistpll
xchg
push
shl
sti
mov
ret
into
xchg
xchg
ljmp
mov
fsubl
enter
movsl
jg
push
enter
bound
jae
and
movb
and
andb
mov
mov
loop
dec
cmpsb
dec
xchg
pop
jmp
movsl
or
mov
and
in
pop
fiadds
outsb
push
iret
scas
stos
dec
cld
movsl
sub
adc
and
iret
dec
les
adc
lret
or
mov
and
popa
inc
xchg
inc
sub
ds
and
aad
shlb
test
pop
out
js
pop
or
sub
es
fbstp
repz
addr16
sahf
mov
or
pop
xor
and
testl
jg
and
xadd
mov
xor
jmp
test
pusha
mov
in
in
sub
or
mov
in
push
or
push
aad
mov
adc
adcl
mov
subb
daa
rcpps
cmc
xorl
scas
pusha
aaa
ret
clc
add
ret
push
sub
sbb
lret
js
xchg
mov
sub
sbb
das
pop
mov
sbb
cmp
lcall
pop
jl
pop
inc
mov
test
sbbl
in
outsb
fsub
mov
mov
or
test
cli
mov
jne
add
arpl
adc
add
xchg
inc
inc
or
shll
das
fmul
pop
jp
jno
jne
fiaddl
aas
fmull
pop
mov
dec
ror
popa
or
or
js
mov
icebp
cli
inc
mov
movsb
nop
cli
xchg
xor
inc
test
cmp
push
jb
cmp
mov
loopne
scas
or
jno
jne
inc
adc
lcall
shll
outsb
mov
test
mov
mov
into
fstl
lea
push
icebp
lret
inc
sub
iret
aam
xchg
jmp
inc
in
shrl
xor
jg
jbe
repz
mov
and
scas
shll
cmpsb
inc
cwtl
or
mov
mov
or
outsb
inc
push
adcl
js
cmc
daa
nop
jge
mov
popf
in
adc
pop
in
pusha
and
push
and
sbb
js
mov
dec
jecxz
xchg
add
cld
cmpl
push
xchg
fisubrl
and
divb
push
daa
mov
xchg
arpl
jge
pop
sti
inc
ss
inc
ret
lock
out
dec
mov
lods
test
arpl
mov
addl
ror
cmp
pop
mov
push
aaa
xchg
inc
and
shll
push
lds
sbb
push
sub
and
push
xchg
xchg
sbb
inc
iret
sahf
sub
nop
xchg
xchg
enter
loopne
add
sbb
negl
jmp
shlb
adc
inc
mov
xor
or
mov
mov
les
imul
imul
xor
sahf
fbstp
add
data16
pop
pushf
ss
leave
jge
ret
dec
stos
adc
mov
mov
movsl
xchg
push
test
aaa
pop
daa
test
cmp
push
leave
aad
incb
fiaddl
stos
cmp
pushf
push
lahf
in
in
inc
add
in
rcll
jae
aam
je
scas
int
adc
and
lret
mov
inc
sub
or
xchg
inc
or
pop
adc
mov
sub
dec
jge
mov
mov
lds
adc
pop
push
call
idivl
pop
mov
mov
nop
cmc
popf
cmp
xchg
or
cld
push
stc
fwait
push
add
lods
adc
dec
mov
add
and
ror
and
xor
inc
dec
in
mov
and
sysenter
sbb
inc
mov
and
pop
loop
lods
dec
popf
jbe
inc
add
imul
fldl
cli
movsb
inc
in
push
fiaddl
js
mov
sub
xor
sbbb
bswap
andl
jmp
pop
jle
mov
outsb
jno
xor
ja
sub
cmp
pop
sbb
xchg
cs
leave
filds
xor
daa
ja
iret
inc
and
in
push
mov
inc
std
pop
add
push
aad
adc
jmp
or
xchg
xchg
adc
sub
sarl
in
mov
data16
imul
pop
mov
push
cmp
insb
std
je
shr
mov
mov
mov
dec
test
mov
add
popf
fwait
ljmp
or
mov
cmp
out
and
repnz
fists
or
sub
jae
pop
xchg
adc
idivl
imul
and
adc
ljmp
int
adc
sbb
pop
jo
pusha
cmpsb
mov
cmp
pusha
mov
mov
xor
pop
cmpsb
sahf
jnp
jmp
ljmp
std
lds
cltd
cld
mov
sub
or
das
xchg
or
dec
lret
clc
mov
fistps
das
sub
mov
pop
pop
mov
mov
cld
scas
add
mov
cmp
add
mov
push
out
gs
dec
or
in
insb
fwait
and
stos
ja
mov
cltd
gs
ret
pusha
cmp
lods
in
inc
xchg
sbb
lahf
lods
lods
das
xor
inc
jg
js
mov
mov
pop
mov
into
in
fsubp
mov
mov
popa
or
out
dec
cmp
fisttps
fwait
testl
es
lret
sub
lock
cli
mov
cmp
jg
pop
repnz
test
mov
sti
jo
sbb
insb
push
outsl
or
lock
sarb
mov
or
scas
icebp
mov
xor
andl
fcomps
mov
mov
adc
test
icebp
and
sbb
loop
jb
mov
dec
pop
mov
jne
push
jecxz
fmull
jp
in
es
cmpsl
int3
in
into
mov
repnz
cwtl
and
jecxz
and
bound
xchg
adc
lods
inc
enter
mov
sub
cmpsb
xchg
les
iret
jae
fistl
sub
clc
inc
inc
outsb
pop
cmp
jns
fnstcw
inc
das
sbb
jl
fwait
push
movsb
jns
push
sub
mov
mov
inc
pop
test
dec
adc
mov
mov
je
jg
xor
movsb
daa
fdivrl
cmpl
add
inc
aas
mov
mov
push
mov
and
rcll
out
cmp
addr16
push
dec
pop
xchg
xchg
pop
jb
push
sub
fnsave
jmp
pushf
sbb
lods
shrb
lret
iret
push
lret
pop
mov
data16
mov
jns
popa
ret
jl
lahf
fdivs
in
imul
out
imulb
mov
lods
inc
in
roll
sub
inc
movsb
scas
jle
insl
push
scas
add
insl
xchg
jns
add
mov
arpl
dec
or
mov
xchg
icebp
rcrl
pop
pop
fsubl
loope
cmc
push
jmp
adc
movsl
mov
mov
cmp
aad
js
inc
mov
and
fnstcw
jnp
daa
xor
adc
pop
push
mov
dec
mov
pusha
icebp
and
and
stos
dec
mov
push
pop
pop
clc
adc
pop
mov
sahf
pop
out
mov
shl
cmp
pop
scas
das
add
xchg
jne
in
insl
mov
pop
arpl
movsb
mov
cmp
sbb
dec
test
jns
push
pop
mov
jno
incb
push
add
pop
cmp
loopne
icebp
lret
imul
adc
xchg
or
jb
mov
mov
lret
ror
int
pop
je
and
lods
add
addb
stos
and
xchg
mov
fcoms
aas
loopne
push
movsb
in
cmp
stc
out
int3
pop
xchg
push
mov
popl
jbe
enter
je
pop
dec
mov
xor
cli
inc
cmp
push
inc
mov
mov
xor
adc
pop
lock
pusha
lahf
sub
mov
prefetch
or
jge
cmc
cmpsb
dec
aam
cmp
int
dec
dec
mov
dec
cmp
ret
les
sub
iret
addr16
or
sbb
jno
loope
xchg
arpl
leave
dec
jbe
scas
bts
jo
jl
cmc
or
jno
scas
aaa
adc
rcll
xchg
cmp
push
mov
fstp
jns
mov
dec
les
mov
and
xchg
sub
outsl
xor
jae
add
data16
jne
orl
jl
dec
dec
js
inc
je
test
pop
push
jbe
shll
outsl
pop
sub
mov
lret
push
sbb
in
xor
rcrl
sub
pop
inc
scas
and
inc
cld
ja
and
sub
hlt
mov
mov
int
sbb
and
mov
loope
popf
xchg
xchg
popa
jno
sbb
push
in
push
or
dec
ja
sti
jno
cmpsl
sub
xchg
loope
add
mov
lock
ss
and
push
cmp
jbe
add
pop
imul
and
jb
inc
lds
ficomps
push
lret
adc
cmp
mov
imul
pop
push
call
xor
jl
icebp
sbb
fildll
fwait
pop
aad
xor
mov
cmp
fstpt
add
sbb
mov
movsb
mov
mov
jp
inc
in
xchg
cmp
mov
or
cltd
pop
dec
je
pop
lds
push
jae
mov
jnp
lods
push
lods
cmpsb
jl
push
push
adc
and
and
mov
out
and
sahf
inc
addl
packsswb
xchg
ds
repz
sbbb
out
sub
int3
lret
push
ret
inc
rcrb
adc
test
mov
xchg
rcrl
push
mov
sbb
sarl
add
or
adc
pop
adc
jae
leave
inc
inc
cld
mov
pop
jns
xor
push
je
jp
call
mov
stos
shlb
cmpsb
leave
out
inc
pop
xchg
repz
cmpsl
xchg
adc
mov
imul
mov
dec
icebp
fdivr
rcrl
mov
sbb
icebp
sub
das
cmp
or
out
adc
adc
aam
cmp
lock
adc
add
int
jne
mov
mov
sbb
mov
pushf
jbe
jp
out
popf
sub
mov
mov
pop
xor
fwait
push
loop
cmp
ljmp
filds
sbb
addl
in
sub
jo
and
pop
addb
lds
cmp
adc
sub
mov
add
push
mov
sub
mov
test
adc
movsb
int
push
sbb
lret
or
or
lret
stos
push
arpl
sub
loopne
mov
add
adc
xchg
xchg
and
mov
shlb
push
cmp
orb
dec
sub
xchg
sete
pusha
fwait
mov
sbb
push
loop
push
fdivrs
push
inc
ljmp
or
mov
jmp
stos
testb
xlat
daa
in
pushf
out
inc
sub
jo
push
stc
enter
jmp
stc
outsb
pop
mov
pop
jge
ret
push
pop
shll
inc
xor
xchg
cltd
imul
mov
or
call
ret
mov
movsl
push
sbb
mov
scas
iret
push
xchg
loope
mov
cwtl
out
hlt
adcl
out
adc
je
dec
jae
pop
xorb
stc
pop
sub
arpl
or
addr16
push
dec
xor
inc
cmp
jecxz
inc
add
icebp
insb
xchg
pop
adc
stos
rcr
pushf
je
stos
idivl
mov
sub
push
dec
sbb
in
mov
call
cmc
fsubp
and
into
inc
cmpsl
in
mov
imull
lods
pop
xor
adc
je
and
rcrb
out
mov
inc
lods
js
jae
daa
outsb
xor
dec
das
cmpsb
mov
adc
inc
xchg
inc
dec
mov
inc
icebp
insl
jnp
sti
cmp
mov
imul
jmp
mov
jge
mov
fwait
xchg
ja
rorl
and
imul
mov
cmp
xor
jmp
mov
dec
xlat
mov
sbb
in
fucomi
xor
fisttpl
lea
pop
and
insl
mov
adc
xor
mov
fimuls
ja
or
sbb
jp
jecxz,pt
mov
lods
and
pop
bound
fisubs
in
inc
inc
les
jg
sub
jnp
push
push
xchg
in
cmp
mov
test
add
push
lock
outsb
push
in
cltd
insb
hlt
loope
push
lds
mov
int
push
out
mov
and
dec
outsl
pushf
outsb
imull
jae
mov
call
shr
dec
and
pop
jmp
out
sub
scas
test
sub
je
xchg
adc
gs
repz
mov
cmp
scas
jle
jae
mov
or
mov
sub
pop
sahf
mov
fistl
xchg
lcall
or
ja
aas
stos
and
push
inc
insb
cmp
mov
mov
xchg
sub
jl
jno
filds
mov
arpl
lock
fwait
add
sbb
outsb
dec
xchg
rol
jg
mov
out
mov
or
mov
and
clc
es
leave
stos
outsb
lret
in
jns
inc
lods
xor
subl
and
cmp
pop
xlat
daa
mov
add
inc
in
xor
inc
out
or
repnz
xor
fs
mov
push
sub
pushf
and
xchg
inc
cmp
jbe
loopne
xor
repnz
fstpt
les
jbe
rorb
adc
push
mov
data16
ja
push
sub
fadds
loop
mov
int3
into
pop
rcr
dec
je
push
scas
cmpsl
adc
das
xchg
and
sub
push
pop
sub
out
mov
and
in
std
loop
aas
ljmp
aas
push
jno
in
mov
movsl
test
bound
dec
adc
int
sub
mov
inc
sbb
int3
dec
in
lods
sub
stos
push
mov
adc
mov
fisttpll
cltd
xor
or
sarb
nop
and
push
xlat
dec
rcrl
push
pmulhuw
in
imul
in
lret
mov
out
xchg
pusha
imulb
cmp
loopne
xchg
in
lea
jb
outsb
jb
mov
jnp
inc
into
sub
outsl
and
imul
cmp
and
rcl
push
mov
xchg
jae
push
pop
lea
das
sti
and
out
rcll
inc
pop
mov
in
jg
sub
imul
out
mov
sti
in
mov
loopne
aam
xchg
iret
cli
sbb
insl
rcrl
ljmp
xchg
cmp
insb
jl
add
mov
mov
inc
sub
mov
ret
mov
pop
jecxz
sti
and
xchg
or
or
hlt
mov
or
out
call
and
ret
pop
lea
sub
mov
xchg
jbe
inc
mov
pop
cld
pop
bound
pop
push
test
push
dec
mov
shlb
aas
loopne
popf
and
push
pop
jae
jle
mov
adc
sbb
push
jno
push
mov
jg
xor
inc
fcmovb
xor
mov
mov
cmp
shll
push
dec
sbb
dec
xchg
fistpl
inc
in
cmpsl
jge
lods
mov
ds
out
cmp
mov
cltd
add
scas
cli
lret
jmp
push
test
jo
push
cmp
or
jae
stos
pop
and
shl
into
adc
sbb
push
out
arpl
fidivs
shll
add
aas
pop
inc
aam
mov
mov
outsl
dec
pop
rcrb
inc
dec
mov
fisubrl
mov
push
pop
push
mov
xchg
rolb
lret
aad
aam
insb
adc
cmpsb
push
xchg
call
add
arpl
push
cld
adc
jo
cwtl
lcall
xor
jle
orl
sub
dec
fldt
imul
iret
adc
push
and
xlat
mov
in
lods
rclb
pop
sbb
xchg
or
popf
fsubrs
adc
lods
decb
popa
push
dec
mov
fnsave
mov
cmp
mov
cwtl
in
ror
fists
cld
push
mov
mov
fstpl
mov
cmpsl
mov
fldenvs
lods
xorl
into
push
xchg
ret
jne
out
dec
in
sti
cld
jns
and
cmp
and
pop
pop
nop
call
xlat
and
pop
lcall
cwtl
aam
mov
out
cmp
push
jmp
cmp
loope
test
fidivrl
test
insb
dec
loop
xlat
push
push
cmc
xchg
out
jnp
mov
xorl
aad
pop
movsl
dec
mov
xchg
cmp
jae
inc
pop
insl
xchg
loopne
sbb
pop
lret
mov
ret
repnz
or
shl
enter
cmp
fcmovnb
dec
xor
divb
mov
outsb
cmp
mov
mov
mov
and
inc
mov
xor
mov
popa
inc
inc
lcall
dec
lcall
or
cmpsl
je
fdivrs
push
ss
lcall
sarl
dec
mov
jnp
cmpsl
xchg
out
ja
repz
movsl
sub
pop
fsubrs
pop
lods
inc
pop
or
rcrb
in
or
dec
push
sub
fsubs
xor
jae
enter
xor
gs
xchg
clc
push
inc
lds
rcrb
fmul
and
jae
outsl
add
out
mov
into
aam
xchg
je
out
jecxz
sub
inc
insb
ret
insb
dec
or
gs
xchg
sbb
fstpt
aas
adcb
sub
pop
pop
aaa
repnz
jle
int
loope
stos
lds
js
jge
xchg
jecxz
mov
ds
push
int3
dec
xchg
dec
lahf
mov
iret
out
dec
mov
jp
data16
sbb
mov
stos
lahf
inc
xchg
inc
jbe
and
lods
or
fldenv
arpl
pop
ljmp
stos
mov
ror
jmp
inc
and
sub
add
mov
ret
das
negb
or
sub
jo
std
jg
adc
adc
movsb
adc
lea
add
mov
sub
mov
xor
stc
mov
cld
inc
mov
loope
lahf
cld
jne
rorl
iret
pop
lods
jno
push
pop
leave
test
push
xchg
push
in
in
cmp
scas
faddl
pop
out
stos
std
xchg
clc
cmpsb
or
pop
lahf
clc
ret
cmc
cwtl
stc
mov
push
call
cmp
mov
pop
sbb
jo
enter
std
fistps
fwait
insb
mov
jecxz
pop
cmc
cmp
out
fs
aad
push
or
mov
push
sub
jl
adc
or
loope
popf
push
js
sub
jl
sahf
inc
pop
push
cmpsb
loope
repz
lds
ljmp
jb
dec
dec
daa
push
mov
inc
sbb
fcmove
jns
int
mov
jae
xchg
cmc
js
gs
in
in
xchg
test
or
pop
add
sbb
jp
push
fsubp
mov
add
lds
sub
mov
bound
and
cmp
sub
test
pushf
dec
in
lock
xor
cld
rorb
scas
imul
mov
js
sub
sahf
out
inc
mov
jge
mov
test
ds
mov
jp
inc
cmp
lret
pop
or
mov
cmp
daa
adc
mov
movmskps
cmp
inc
mov
in
sarb
movsl
cmpsb
iret
sbb
rcll
mov
jae
jnp
pusha
dec
stc
push
xlat
mov
popa
stos
mov
dec
in
sbb
call
mov
fistpll
pop
lds
xchg
stos
in
lds
fldt
out
pop
test
xor
adc
xchg
sub
sbb
sub
jne
repz
inc
lea
cmp
subl
js
lods
pop
dec
jns
loope
pop
bound
adc
fidivrl
push
jnp
in
adc
cmp
or
and
pop
daa
adc
testb
push
xchg
out
dec
lea
adc
push
sbb
popa
into
and
cmp
faddp
pop
mov
cmp
iret
sbb
push
push
ret
adc
add
outsl
aad
jnp
outsb
adc
sar
mov
xchg
and
cmp
ss
cmp
divl
hlt
cmpsl
xchg
pop
aad
xor
data16
xchg
imul
adcb
sti
jle
int3
sti
aas
movsb
fsubl
ret
test
mov
mov
pop
mov
adc
popf
and
incl
shlb
inc
xor
les
mov
dec
push
jle
xchg
xor
ds
sar
sbb
dec
dec
imulb
lds
hlt
dec
xchg
lret
scas
xchg
cmc
mov
push
lcall
fwait
les
aas
pop
les
mull
enter
lret
sti
or
test
xchg
add
add
fstpl
das
cwtl
mov
dec
roll
invd
std
ss
mov
addr16
mov
adcb
xchg
enter
dec
mov
dec
adc
dec
outsb
in
and
mov
mov
add
sti
sub
daa
vandnpd
mov
jg
xchg
mov
loop
dec
push
inc
sahf
cmc
loop
jge
push
mov
leave
ret
movb
stos
push
insb
mov
xor
jnp
fs
frstor
adc
mov
data16
push
shr
pop
inc
mov
jnp
rclb
pop
cmc
lods
mov
sub
ljmp
xor
loope
push
inc
pop
insl
daa
out
xchg
jnp
cmp
push
fsub
stc
sbb
sbb
pop
jbe
jns,pn
sub
enter
mov
loop
inc
mov
pop
shrb
jns
ret
jle
cmc
add
sbb
mov
nop
rol
pusha
mov
sub
jmp
sbb
lods
fnstcw
rcll
jns
mov
jle
insb
in
xchg
jecxz
lods
adc
or
lret
mov
push
add
jmp
fdivl
mov
push
enter
rcr
mov
mov
shlb
out
add
imul
or
mov
pop
pusha
fidivl
sub
lea
or
xchg
call
or
xchg
sarb
sub
add
jo
jae
gs
movl
ss
roll
pusha
dec
frstor
adcb
sbb
outsb
fdiv
mov
mov
les
push
rclb
inc
rorl
jp
test
aaa
add
int3
scas
pop
adc
pop
cmp
adc
test
cmpsb
aad
pop
pusha
xor
adc
bound
adc
lods
iret
and
divl
xor
inc
leave
aam
adc
es
stos
pop
fsubl
sub
orb
or
sbb
daa
xor
mov
lcall
pop
jl
fnsave
push
lock
jecxz
out
sub
jecxz
push
adc
dec
or
pop
aad
movswl
push
inc
add
test
inc
rcrb
pop
stos
jbe
rol
sbb
aam
std
dec
adc
das
sub
notb
adc
cmc
insb
inc
loopne
pop
stos
dec
mov
cmp
popa
ss
inc
adcb
sub
cmc
adc
jle
inc
daa
test
out
data16
jl
subb
out
pop
or
xchg
mov
gs
sub
ss
dec
pop
xchg
cli
iret
in
dec
int
push
jae
push
jp
and
push
fbstp
and
shll
xchg
xchg
leave
jge
pop
add
add
xchg
sub
mov
iret
sub
sarl
out
mov
movsb
int3
and
dec
stos
cmc
sub
cmp
inc
push
or
orb
sub
je
add
popa
sbb
fisubs
adc
add
xor
fs
mov
fnstcw
imul
cmp
pop
mov
push
arpl
sub
cmpsl
addl
jg
shr
shlb
loop
imul
into
stc
out
xlat
xchg
ror
xchg
xor
pop
jbe
lcall
stc
shll
jae
pop
pop
mov
or
add
cmp
dec
clc
mov
repz
movsb
lret
cld
lock
sbb
cmp
data16
movl
and
sbb
xor
push
lods
pop
mov
push
push
test
cs
int3
enter
or
fdivr
cmc
inc
jae
outsl
scas
add
cmp
imul
pop
lods
call
xor
lret
mov
pushf
inc
sub
shl
dec
aam
dec
nop
sbb
jnp
inc
fs
sti
arpl
std
sbb
vmwrite
stc
mov
add
adc
sub
xor
mov
nop
dec
push
add
jbe
dec
cld
into
scas
cwtl
sub
or
dec
lds
aas
into
mov
fimull
mov
pop
ret
pop
adc
xchg
pop
mov
arpl
into
add
push
adc
push
clc
aas
int
mov
pop
jmp
imul
push
add
movsl
jns
xchg
cmp
inc
cmp
and
stos
sbb
ss
in
test
push
enter
movsl
int
scas
mov
adc
mov
insb
sahf
cmp
mov
mov
int
mov
xchg
jle
sbb
push
sbb
add
repz
push
mov
xchg
push
cmp
cmp
mov
out
scas
or
xlat
fidivs
inc
jb
mov
aad
call
mov
jp
je
xor
mov
je
incl
in
xchg
fwait
ss
add
add
imul
sbb
jns
ljmp
out
push
enter
jl
insb
pop
iret
cmpsb
pop
push
dec
xchg
inc
pop
mov
repnz
push
mov
mov
add
and
mov
fcoms
xchg
jo
jo
lods
xlat
lret
pop
nop
aad
sub
in
jl
pop
ljmp
xchg
jp
xchg
mov
adc
cmp
adc
inc
fisubs
jbe
dec
sahf
dec
xchg
push
jo
jecxz
leave
cmp
fwait
inc
sbbl
pop
sahf
scas
sbbb
loope
iret
in
test
and
push
push
jnp
addr16
or
sbb
negb
sbb
into
lahf
xor
pop
fistpll
out
and
rorl
call
std
mov
jl
dec
aaa
jecxz
lret
cmp
push
mov
add
xchg
fbld
ret
sbb
in
xchg
jo
dec
es
les
scas
daa
loope
xlat
mov
dec
rcrb
sbbl
jno
dec
or
shld
add
nop
test
xlat
repz
clc
jl
push
loope
add
add
sbb
icebp
js
dec
ljmp
rclb
xor
or
sbb
das
sarl
stos
xor
dec
jae
sbb
lock
std
push
push
jecxz
sub
xchg
cmp
mov
add
js
and
jnp
dec
lods
adc
fsub
repz
mov
popa
clc
xchg
gs
fsubrs
mov
repnz
add
xchg
popf
jnp
push
cmpsb
int3
fxch
sbb
repz
fisttps
cli
testl
mov
pushf
adc
insl
hlt
pop
sahf
mov
dec
shlb
test
std
aad
jnp
repnz
mov
ja
adc
jmp
push
shrb
push
mov
dec
cwtl
push
aad
movl
hlt
andb
movsb
mov
mov
in
jo
mov
sbb
in
mov
fldl
je
repnz
outsb
in
inc
es
xchg
mov
lcall
dec
xchg
ret
add
int
inc
cmc
and
xchg
loope
in
xchg
push
nop
xor
mov
pusha
or
enter
mov
fcmovnb
sbb
adc
inc
orl
xor
les
cmp
jnp
aad
outsl
lods
leave
xchg
jp
adc
enter
xor
jae
sbb
mov
movsl
adcb
mov
mov
jae
pop
icebp
push
insb
add
aam
sub
bound
or
mov
add
push
jno
jns
dec
and
xchg
xchg
xor
test
fcoml
popl
nop
stos
lret
pop
dec
fs
out
adc
xchg
imulb
mov
or
lock
popa
repz
in
popl
jne
sbb
sbb
adc
scas
xor
fldt
out
fisubrs
pop
cmp
push
xor
add
jge
ljmp
lea
jl
roll
jno
jp
ret
mov
jns
adc
push
pop
sbb
jne
jp
dec
mov
out
inc
jmp
xor
repz
sbb
leave
pushl
out
sti
inc
or
sub
and
dec
fidivrl
cli
pop
enter
cltd
lods
sbb
mov
sarb
fdivrs
push
or
stc
in
repz
fadds
imul
dec
mov
fcomip
push
xor
push
cld
mov
stos
mov
xor
enter
xor
or
mov
mov
mov
sbb
or
or
jno
stc
and
sbb
xlat
pushf
ljmp
in
lret
repz
push
inc
outsb
imul
jns
bound
pop
cmp
inc
pop
push
dec
sub
into
mov
push
enter
cli
mov
add
shlb
cmp
hlt
xor
pop
iret
mov
daa
out
es
sub
push
jmp
dec
inc
les
in
jb
push
out
xor
add
sbb
and
lea
out
xor
inc
pop
out
adc
shll
lahf
inc
mov
cmp
jnp
out
add
iret
ficompl
iret
stos
orb
and
lret
lods
fsubl
push
sub
adc
movsl
jne
orl
repnz
call
aad
mov
adc
and
lcall
inc
xchg
out
movsb
ficomps
mov
mov
testl
jmp
add
arpl
outsl
mov
xchg
push
out
mov
ret
and
inc
push
cmpsb
jmp
in
loope
inc
jmp
xchg
gs
push
pop
int3
call
pop
or
adc
imul
xchg
int3
mov
mov
jg
pop
cmc
jns
or
and
je
mov
loope
test
ret
inc
out
pop
ss
or
sub
outsb
mov
or
outsl
rcr
push
or
xchg
outsl
lea
insb
hlt
jg
jbe
movq
in
xor
mov
xor
insb
lods
in
repz
es
and
push
push
push
push
mov
pop
fs
cld
xchg
and
and
repz
test
lock
shlb
arpl
arpl
inc
rcrb
es
shrl
cli
dec
xchg
adc
mov
mov
push
mov
pop
mov
xor
mov
dec
mov
aas
xlat
pop
repz
std
stos
xor
repz
cmp
and
es
add
bound
mov
test
subb
mov
mov
xor
out
inc
insl
popf
in
andnps
dec
cltd
addb
cmpsl
fstp
jbe
mov
adcl
cmp
mov
and
mov
cmp
lds
xchg
push
ljmp
cmc
jle
and
dec
xchg
pop
mov
or
and
insl
into
aam
mov
sbb
jmp
mov
stc
imul
popf
jb
movsl
sub
lea
lods
xor
pop
rorb
in
shl
push
push
push
mov
insb
cmp
ja
cltd
movsb
addr16
cmp
pop
or
xlat
movsb
cmp
mov
add
jno
iret
and
int3
adc
ret
jmp
xchg
and
outsb
mov
mov
rorb
mov
gs
mov
cli
cmpsb
jle
std
call
bound
push
jnp
cli
lret
aas
or
mov
imull
pop
pusha
ret
adc
scas
pop
lods
dec
sahf
test
mov
jb
hlt
jecxz
fistps
mov
add
adc
mov
inc
or
roll
stos
push
sbbb
jl
lds
enter
sti
push
jae
int
nop
lds
js
xor
xorl
stos
sbb
adc
notb
jae
push
and
adc
mov
xor
sbbb
sub
jmp
push
fcomi
mov
out
lods
jge
push
jmp
add
xor
ficompl
mov
in
in
sarb
cmpsl
in
fdivl
in
push
fisubrl
dec
xchg
insb
sub
jle
call
stc
adc
or
jl
xor
add
in
cmp
fwait
push
cld
cmp
sbb
mov
aam
xchg
shll
mov
sub
cwtl
ss
push
das
mov
jbe
rcr
in
pop
sub
mov
nop
push
fstl
sub
loopne
xchg
dec
adc
add
xor
dec
sub
in
repz
stos
pop
mov
mov
mov
fmuls
cmc
cmp
and
jb
inc
jge
clc
push
scas
add
fmul
mov
mov
dec
cld
push
sbbb
push
jne
popa
and
insb
in
mov
inc
jbe
mov
pop
xchg
int3
push
dec
jnp
mov
add
mov
pop
cmp
cmp
mov
shrb
fsts
rorl
fs
inc
leave
cld
negl
lahf
int3
pop
out
sub
jecxz
inc
ret
roll
notl
mov
xchg
and
cwtl
loope
jl
scas
insl
enter
mov
or
and
mov
jb
xchg
pop
push
xor
test
and
ljmp
sbb
or
insb
ds
inc
xchg
outsl
sub
pop
aas
mov
sub
shl
push
inc
mov
inc
or
out
xor
xor
dec
outsl
daa
xor
fs
inc
hlt
enter
inc
in
pusha
test
push
cs
sub
sbb
inc
ret
clc
enter
adc
andb
push
push
adc
jb
jbe
mov
push
adcb
adcl
lret
and
popa
push
push
add
ljmp
sti
or
das
fbstp
or
xor
ja
dec
je
mov
xchg
rorl
jne
xchg
popa
jae
jle
andl
fldt
add
inc
stos
jno
cmp
scas
aas
mov
dec
mov
aam
pushf
repnz
aad
enter
add
aam
movsl
ja
jecxz
shlb
repz
pusha
stos
loop
clc
jle
xor
repz
sbb
addr16
rclb
shll
xchg
push
js
jle
adc
mov
scas
into
mov
int3
xchg
test
and
sti
fsubrl
or
mov
mov
in
xor
scas
in
lock
outsl
pop
test
jae
leave
dec
push
push
pop
inc
ja
out
cli
inc
out
xor
push
mov
test
add
sub
cmpsb
dec
mov
push
js
adc
scas
pop
xorb
lock
pop
icebp
loope
jo
leave
xor
inc
pusha
push
xchg
sub
daa
inc
adc
out
in
lret
jg
loopne
push
push
cwtl
mov
hlt
ret
mov
xor
pushfw
in
jmp
leave
ret
mov
jb
or
das
lock
sbb
insb
mov
xchg
pop
jp
or
and
sbb
aaa
movsb
jg
add
in
ret
aad
fadd
imul
push
inc
out
pop
push
insb
inc
cmp
nop
das
in
mov
andl
divb
imul
leave
jne
xchg
inc
cmpsl
cli
mov
addr16
out
arpl
or
mov
cmpsb
stos
add
xchg
scas
jge
mov
push
xchg
xchg
cmpsb
inc
in
inc
pusha
lcall
sub
enter
bswap
or
pop
mulb
out
cmp
sbb
jle
dec
xor
xlat
pusha
cmpsb
inc
cwtl
repz
jo
out
das
call
cmp
dec
push
pop
push
push
pop
adc
and
add
scas
shlb
out
ja
pop
insl
push
jnp
popf
arpl
fs
sbb
push
sbbb
enter
aas
std
lahf
fistps
outsb
sbb
push
arpl
icebp
dec
cmpl
shrb
aas
xchg
add
mov
lods
mov
lods
nop
jle
fldcw
out
mov
pop
inc
add
adc
jb
fsubp
iret
mov
data16
xchg
insb
dec
int3
jno
or
and
cmc
andb
out
jne
dec
adc
pop
aad
add
dec
mov
push
mulb
xchg
nop
dec
nop
insb
or
mov
cli
sub
xchg
fidivrl
lahf
pop
dec
mov
filds
mov
mov
xor
mov
stc
je
popf
outsl
rcrb
mov
xchg
push
fcompl
cmp
lods
jae
in
and
jp
pop
and
sbb
dec
xor
hlt
fstps
jne
lea
icebp
mov
dec
add
and
lret
les
cmpsb
push
aaa
fs
fistpl
xchg
xor
add
pushf
ss
addr16
fs
sub
ret
mov
sbb
outsb
jge
or
shrb
pop
insl
bound
sbb
jmp
call
push
jno
pop
mov
lahf
pop
push
sbb
xor
add
push
test
mov
add
and
mov
repz
push
cmc
sbb
stc
cwtl
dec
icebp
jo
pop
add
cwtl
lods
or
mov
and
lcall
mov
xor
jne
imul
fldenv
push
enter
icebp
adc
or
sub
cld
js
ret
add
pushw
int
jno
sbb
hlt
mov
pop
mov
pop
pop
insb
iret
test
scas
push
and
fsubrs
mov
mov
push
pop
rcrl
pop
jl
js
out
int
sbb
pop
mov
mov
inc
lahf
xlat
les
push
ja
cmp
daa
into
push
addr16
or
xchg
scas
xor
scas
cmpsb
sub
inc
cmp
jbe
pop
mov
sar
pop
jno
cmc
and
pop
movsl
enter
pop
stos
aad
cmp
add
test
adc
mov
stos
jg
ja
rcll
subl
jb
testl
inc
dec
test
testb
fs
sti
outsl
jmp
xlat
cmpsl
mov
mov
stos
or
mov
xor
aad
cltd
inc
mov
mov
aaa
sbb
or
jns
xlat
lods
lahf
int
pop
lods
cmpsl
xor
in
push
hlt
mov
xlat
adc
sahf
mov
adc
negl
mov
scas
jge
lods
sbb
dec
je
scas
lret
cmp
xor
lds
int3
xor
mulb
sti
cmp
adc
sbb
hlt
add
sbb
inc
add
fchs
out
pmullw
or
dec
aaa
lcall
int
adc
or
test
xchg
mov
fucom
sbb
sub
jns
mov
in
push
into
test
ljmp
dec
imul
mov
xorl
pushf
pop
push
nop
pushf
cmpsl
das
add
aam
outsb
inc
jp
bound
fdivs
push
sub
xor
je
mov
loopne
fiaddl
sbb
xchg
scas
push
aam
or
lock
inc
xchg
gs
pop
pop
into
in
cmp
ds
repz
stos
dec
push
rcrl
and
push
sahf
dec
push
subl
movsb
test
test
add
jbe
mov
mov
sbb
movsl
popa
dec
insl
jecxz
cmpsl
call
test
jecxz
int
fisttps
testl
dec
call
or
sbb
xchg
les
push
push
sbb
stos
jo
push
pop
arpl
cmpsl
imul
scas
shlb
pop
out
hlt
in
sub
insl
stos
mov
push
cmpsb
inc
mov
pop
pushf
in
ljmp
adc
lahf
or
dec
test
mov
in
out
in
icebp
lods
test
das
js
bound
stos
scas
push
add
adc
mov
and
scas
lock
add
sahf
jae
mov
lahf
cmpsb
xor
inc
mov
push
inc
bound
pop
in
leave
sarl
insb
xor
ja
addr16
js
sbb
mov
ljmp
dec
add
roll
cmp
pop
xor
push
mov
aaa
jns
out
pop
xchg
stc
icebp
pop
ss
rcrl
xchg
push
dec
popa
ds
cmpsb
or
jbe
test
adc
mov
add
pop
movsl
test
jg
fldenv
lds
and
mov
add
scas
aad
jmp
stc
daa
daa
push
lods
cmp
out
fmuls
push
mov
lds
inc
jno
inc
xchg
push
adc
mov
cmpsb
adc
in
in
call
mov
into
xor
rorb
stos
inc
sbb
add
pop
loope
xchg
adc
pop
out
enter
cld
mov
mov
xor
js
pop
jg
dec
pusha
pop
xor
sub
jbe
ja
adc
outsl
cmp
lret
ret
rcrb
pop
push
jae
loop
xchg
rcll
sub
cmp
add
push
or
ds
mov
pusha
fcomp
pushf
add
sbb
and
cs
stos
push
adc
xchg
arpl
inc
cmpl
inc
stos
dec
add
sub
je
push
mov
into
mov
mov
dec
fbstp
test
pop
int3
inc
ret
push
mov
lcall
dec
aad
xor
mov
cmp
xchg
push
hlt
add
cmp
xchg
into
andb
add
pop
insl
jg
out
mov
sar
test
lret
sbb
in
pop
mov
test
xchg
jge
pop
xchg
rcrl
arpl
loope
loop
loopne
rcr
inc
repnz
xchg
mov
pop
jmp
rcl
xchg
push
mov
mov
pop
dec
add
fcompl
rcrl
jns
adc
gs
aaa
mov
mov
cmc
popf
dec
out
xchg
icebp
cli
loop
cmp
jno
xchg
jmp
jecxz
cmp
push
pusha
fldl
les
pop
icebp
out
mov
or
jge
xchg
lret
mov
push
adc
sub
mov
push
shrb
lret
pop
arpl
iret
jg
adc
inc
push
loope
lcall
arpl
out
xchg
add
stos
das
lods
or
fwait
pop
into
inc
fnsave
cltd
cmpl
scas
mov
xlat
jno
notb
cmc
pusha
sbb
sbb
dec
xchg
std
loop
movsb
dec
iret
nop
dec
fimull
or
daa
cwtl
divb
int3
sar
sub
xchg
std
jmp
roll
hlt
lahf
xor
aam
inc
xchg
loop
outsl
lods
ja
aas
add
sahf
sub
lahf
inc
loope
and
enter
inc
mov
mov
push
inc
es
lea
mov
les
inc
std
jg
add
mov
lds
jl
mov
sbb
cmc
movsl
fidivl
cmp
mov
sbb
in
mov
addl
mov
dec
insb
sarl
mov
test
sbb
pop
inc
mov
adc
scas
cmp
ret
arpl
roll
imul
shrb
or
repz
xchg
xchg
aas
lea
fmull
loopne
out
test
repnz
add
popl
outsb
rorb
xchg
repz
cs
rcrb
dec
mov
loope
lods
lcall
nop
ret
add
mov
mov
push
adc
ret
scas
pop
into
insl
dec
jns
adc
sbb
jb
in
pop
pop
mov
idivb
mov
jmp
mov
fldt
inc
out
push
mov
mov
loopne
cmp
xchg
adc
adc
adc
into
mov
sbb
mov
jl
mov
cmp
les
jmp
popa
cltd
ja
bound
push
paddsb
push
sub
and
pushf
xchg
test
dec
aaa
xor
inc
xlat
lock
ja
sub
sbb
std
ljmp
imul
mov
mov
shll
and
cmp
ljmp
loopne
in
and
xchg
sbb
dec
lahf
adc
pop
arpl
push
push
or
loope
ret
inc
add
aad
cmpsl
pop
cmp
lahf
dec
mov
cmc
int3
fisttps
imul
push
test
cmpsl
mov
mov
sub
sahf
jae
xchg
inc
push
xchg
hlt
push
in
inc
mov
in
imul
adc
dec
mov
out
mov
scas
fisubs
imul
mov
out
les
mov
stc
inc
lret
mov
insb
scas
aam
jnp
dec
xchg
add
or
mov
aas
dec
mov
aas
add
pop
outsb
es
pop
lds
movsl
xor
cwtl
mov
js
mov
ret
push
or
out
push
ja
mov
loop
and
and
fs
imul
clc
sarl
jne
xchg
and
outsl
in
divb
push
test
add
js
dec
test
and
jg
sahf
call
add
dec
dec
iret
lds
sub
push
insb
sub
add
out
das
cltd
popf
icebp
and
sbb
in
add
jnp
std
lods
inc
aad
inc
dec
cmp
mov
cmp
imul
sbb
jge
mov
in
adc
dec
iret
adc
nop
das
lret
xchg
fdivrs
icebp
out
inc
push
push
andl
inc
inc
dec
in
jmp
test
cmc
mov
sbb
aad
pop
sub
adc
loop
out
jl
inc
stc
mov
xor
scas
test
add
cmc
icebp
int3
mov
mov
pop
ficoms
mov
xor
cs
xchg
gs
or
sbb
xorb
cmp
fs
mov
xchg
outsb
and
sub
jge
enter
pop
std
sub
lods
test
ss
mov
cltd
cmp
push
sub
lock
sbb
test
mov
cmp
dec
imul
pop
add
cmpsl
daa
xchg
sbbl
or
in
shll
push
fisubrs
add
sbb
push
mov
es
stos
push
push
sub
enter
cmpsb
add
popl
ret
inc
in
sub
fs
inc
dec
push
fisttps
scas
xor
and
out
cmp
jae
scas
dec
out
pop
inc
inc
push
jg
inc
inc
push
insl
divl
test
lcall
or
or
out
bsr
adc
dec
xorl
mov
xchg
jmp
retw
outsb
scas
in
cmp
mov
stos
add
push
ljmp
int3
mov
or
pushf
into
pop
lock
popa
and
xchg
mov
or
inc
xchg
dec
cld
je
dec
shl
test
mov
inc
push
add
aaa
jge
das
xchg
pop
adc
and
cmpsl
inc
and
iret
call
fwait
push
popf
dec
and
jns
push
xchg
xor
dec
scas
add
push
subb
sti
mov
lahf
xor
hlt
pop
cmp
dec
stos
push
inc
ds
mov
nop
and
scas
jo
int
movsb
xor
adc
pop
and
push
and
negl
cmpsl
jmp
sti
adc
iret
mov
pop
pop
sahf
cwtl
out
les
stos
loope
sti
js
fbstp
jl
lcall
addr16
bound
hlt
mov
xchg
mov
mov
loopne
ss
fldl
jae
jl
and
inc
push
in
mov
sub
pusha
mov
int3
test
or
adc
xchg
fdivl
cmp
clc
cmc
push
push
mov
mov
pop
pop
iret
das
loopne
ret
pop
insl
divl
mov
xchg
lods
fisttpl
jno
xchg
js
mov
and
jae
sbb
push
movsb
sbb
sbb
aad
jbe
sbb
loop
sub
out
sub
sub
add
lret
lahf
test
lea
add
add
in
or
push
inc
sub
jnp
pop
xchg
mov
push
mov
insb
and
push
or
rep
jg
push
movsl
into
xor
xchg
hlt
xchg
xchg
cmp
and
imul
inc
ds
mov
rcrl
mov
pushf
push
pusha
aas
mul
sub
clc
cltd
mov
pusha
sti
imul
daa
daa
mov
add
loop
je
mov
xlat
sub
je
bound
out
sub
repz
pop
push
sar
jbe
sti
shlb
fdivrp
cmp
inc
add
add
cmp
or
cmp
adc
and
in
xorb
dec
xor
sbbl
in
mov
in
xchg
sti
adc
cmp
iret
call
insb
push
hlt
sahf
sti
fcmovnu
mov
xor
stos
mov
es
pop
test
popf
jns
mov
movsb
mov
ret
mulb
shl
xor
mov
movsb
clc
icebp
sbb
rolb
popa
mov
loopne
push
stc
jecxz
xor
iret
mov
shlb
cltd
or
lds
stos
mov
or
int3
or
lods
shll
outsl
or
in
das
insl
call
mov
pop
cli
mov
out
int3
inc
out
fistps
aam
add
push
popa
inc
push
in
ds
addr16
int
jle
xchg
pop
fimuls
sub
int3
je
or
arpl
cmp
sbb
sub
nop
stos
movsl
nop
mov
cmpsb
mov
push
fs
mov
mov
dec
lds
addl
mov
dec
mov
adc
cmpsl
mov
mov
aas
lods
incl
and
out
pop
jo
addr16
pop
fldenv
sbb
neg
fisttps
inc
xchg
inc
sub
mov
aaa
cmp
jae
xor
nop
insb
push
mov
pop
inc
cld
dec
jle
or
jo
cli
xlat
pop
subb
and
sbb
and
adc
inc
push
popa
popa
cmp
xlat
cmp
push
cmpsb
xor
adc
ja
pop
or
movsb
jo
addb
addl
sbb
movsb
mov
sub
cli
fwait
sub
dec
inc
fldl
ret
lods
stos
outsl
jmp
dec
pop
out
pop
cmp
mov
inc
das
scas
clc
pop
sbb
lcall
mov
aad
cld
repnz
mov
cmpsl
lahf
cmp
popa
jb
push
in
jo
cmp
pop
ss
stc
mov
pop
inc
push
xlat
fbld
adc
jg
sarb
test
push
or
in
lds
out
in
dec
jae
dec
ja
popa
movsl
mov
cmp
stos
vmwrite
jg
mov
pop
pop
daa
push
pop
sbb
adc
rorl
or
loop
loop
rcrb
pop
adc
mov
into
mov
mov
xor
mov
hlt
lcall
dec
fs
pop
in
jb
enter
mov
in
insl
es
xor
sbbl
and
jp
dec
lret
loope
inc
gs
sbb
cmp
out
in
outsb
adc
jmp
inc
adc
jle
imul
punpckldq
outsb
mov
adc
add
aas
dec
or
scas
mov
mov
fs
push
ficoml
cmp
push
mov
lock
or
in
sbb
fxtract
sbb
mov
mov
push
leave
inc
sub
jne
fisubrl
xlat
jg
out
jb
loope
xor
mov
mov
mov
lds
jne
jo
outsb
jl
cmp
xchg
adc
mov
pop
mov
xchg
daa
sub
pushf
inc
inc
lret
mov
jl
loope
sbbl
rcrl
test
ror
mov
jl
and
lock
sub
xchg
push
sbb
or
pop
sbb
and
pusha
dec
pop
inc
sahf
push
jl
movsb
roll
pop
sbb
jb
lret
dec
jp
ljmp
sub
lahf
xor
test
xor
ja
sbb
cwtl
imul
lea
testb
jge
into
pushf
mov
sub
cmpb
mov
adc
push
adc
xor
loop
jecxz
push
stos
dec
sahf
fwait
cmp
cmp
xor
int
mov
mov
push
mov
and
mov
xchg
bound
ffree
insl
fdivl
js
sub
test
scas
add
fs
insl
pop
int3
and
pop
sub
mov
int3
xor
and
adc
mov
ret
add
pop
mov
push
jnp
shrb
sti
jo
cs
jge
leave
mov
pop
icebp
shlb
aad
dec
xor
rclb
xor
mov
dec
scas
xor
int3
or
push
or
fst
push
lret
mov
inc
or
mov
jmp
cwtl
dec
imul
shl
pop
orb
es
insb
inc
insl
jp
and
ds
xor
adc
add
fidivrs
push
sub
mov
mov
lret
fdiv
loop
loop
mov
pusha
lds
or
cmp
sbb
nop
jle
loopne
jmp
jne
shlb
mov
pop
repnz
fmulp
stos
pusha
jge
sbb
mov
inc
scas
jl
lds
mov
mov
mov
mov
in
jmp
mov
mov
es
mov
pop
add
lcall
arpl
sti
call
add
xchg
stos
sub
jne
cld
lods
inc
jg
jnp
test
xor
or
mov
dec
xor
push
fnstcw
cld
in
cltd
cmp
incl
jp
pop
xchg
xor
xchg
leave
jb
and
jno
jg
out
xchg
popl
adc
pop
fwait
in
mov
in
inc
push
lea
mov
jno
inc
xor
pushf
lahf
mov
pop
and
movsl
scas
imul
xor
or
mov
push
cmc
cmpsl
stos
xor
ljmp
lret
je
fdivrs
movsb
js
push
push
xchg
in
rcl
add
cwtl
decb
rolb
xor
sub
sub
iret
out
add
push
pslld
dec
mov
jmp
mov
push
dec
int3
pop
test
push
pop
cld
sbb
and
jnp
cmp
mov
dec
sbb
inc
mov
adc
mov
and
mov
fistl
fdivl
es
jmp
test
ds
das
mov
cwtl
mov
jp
std
ljmp
dec
js
roll
push
mov
ret
clc
scas
jbe
add
testl
inc
inc
or
test
arpl
jle
fwait
or
mov
pusha
mov
sub
ffree
jge
jno
push
stos
adc
popf
sbb
mov
sbb
xchg
pop
sqrtps
xchg
adc
sub
je
mov
btc
push
aaa
mov
adc
mov
xlat
les
or
cmpsl
repnz
testb
or
jne
or
xlat
cmp
jmp
mov
sahf
jns
xor
adc
repnz
push
pop
dec
stc
cmc
and
sbb
daa
inc
das
fcoms
loopne
jno
enter
mov
arpl
into
adc
jg
and
movsl
pusha
jmp
sub
add
imul
divb
subb
daa
es
add
mov
xor
arpl
iret
pop
add
es
cld
out
call
roll
add
jmp
je
movl
shrb
xchg
in
into
fwait
mov
gs
add
pop
adc
dec
jno
mov
movsl
stc
push
adc
inc
std
dec
incb
xor
jo
lret
imul
dec
cld
and
push
push
and
xor
ljmp
xchg
leave
push
sbb
in
jb
jo
mov
das
testl
add
xchg
pop
nop
adc
mov
inc
pop
lock
imul
xchg
jbe
int
ficomps
out
in
scas
pop
and
js
hlt
movsb
add
aaa
lock
lret
fsts
sub
ss
out
test
dec
movsb
pop
or
mov
dec
repz
ja
cmc
fisubl
or
out
xchg
push
adc
hlt
fdivrs
sub
insb
xor
inc
jmp
in
daa
sti
push
pop
imul
cld
dec
rcrl
add
scas
das
int
mov
push
je
xor
ret
hlt
ret
arpl
loopne
or
xchg
xchg
pop
stos
imul
mov
inc
add
or
inc
xchg
call
gs
icebp
int3
jne
and
xchg
loope
mov
in
aas
inc
cltd
fs
loop
push
fwait
std
sub
out
cltd
ja
andl
xchg
mov
pop
dec
mov
mov
mov
ror
lds
in
bound
inc
push
jae
repz
rol
xor
push
adc
scas
andb
addl
enter
in
sub
fisubrl
mov
cmp
push
xor
cmp
icebp
mov
jns
xor
mov
stos
mov
xor
jnp
mov
into
or
push
jge
cmp
mov
or
popa
xchg
popf
int
testb
sub
jle
xchg
iret
out
inc
sub
xchg
ljmp
das
scas
push
jns
bound
rcrb
sub
fists
xchg
sub
xchg
fwait
or
and
ja
aas
stos
xor
adc
mov
xchg
lret
sub
mov
or
and
out
cwtl
ja
addr16
call
cmp
mov
lods
sbb
outsl
push
jge
test
loope
int3
aad
out
mov
mov
push
dec
enter
cli
cmp
repz
mov
movsl
push
jg
out
mov
cmp
add
dec
sub
mov
mov
or
mov
xchg
repnz
mov
jle
xchg
inc
sbb
dec
mov
cmc
or
rclb
adc
fcmovnbe
out
add
arpl
mov
cbtw
bound
adc
mov
mov
cmp
pmaxsw
addr16
fs
and
push
int
xor
jge
stos
sbb
ja
add
mov
inc
rcrb
pop
mov
pop
in
sub
out
cmc
aam
mov
mov
enter
adc
mov
mov
xchg
addr16
jb
xchg
push
mov
fwait
jo
test
add
adc
cmp
push
int3
and
mov
mov
test
add
lock
idiv
dec
test
std
xor
pcmpeqb
lcall
sbb
ds
xchg
jno
insb
fstpt
xchg
inc
mov
clc
mov
mov
xor
scas
cmp
pusha
testb
cltd
sub
test
dec
add
shlb
push
pop
dec
sub
xor
orl
jg
cld
loop
mov
jmp
xchg
adc
cmp
vaddsd
mov
add
sbb
mov
cmp
cmp
outsb
and
or
pmaxsw
adc
sub
out
in
push
jae
cmpsl
frstor
push
in
xchg
push
fsubs
sbb
sbb
mov
sti
lock
scas
adc
jbe
cld
xchg
inc
fisttpl
xor
call
lcall
push
movsl
adc
cmp
mov
testl
fwait
mov
xor
adc
cmp
iret
mov
cs
int
ret
lret
nop
add
enter
jae
pop
stc
jp
and
fdivp
rcll
or
ljmp
mov
and
out
iret
in
jnp
or
sbb
jg
ss
dec
outsb
or
sbb
adc
or
pop
dec
and
cmp
and
jo
mov
pop
xor
push
ds
sub
or
loope
push
or
fs
rolb
movsb
mov
mov
shll
and
int
add
jecxz
inc
lods
sub
xchg
mov
pop
jbe
cmpsl
pusha
imul
and
jmp
iret
push
es
lret
test
dec
cmp
add
cmp
and
xor
int
mov
inc
jno
popa
adc
fsubs
pop
mov
pop
ret
dec
xor
stos
insl
sbb
stc
add
push
stos
mov
ljmp
mov
jl
push
push
loopne
xchg
inc
xchg
adc
sub
lret
mov
xchg
cmp
lods
stos
out
add
sbb
inc
into
mov
stc
leave
out
lods
and
push
rcl
fcmove
and
jge
mov
loop
nop
jp
push
sti
jbe
sub
or
mov
fiaddl
adc
stos
cs
lds
xchg
ja
sar
push
jno
inc
and
fdivs
test
sub
cmp
dec
dec
cli
xor
mov
fcmove
xorps
xchg
cmp
ja
dec
sahf
fyl2x
mov
adc
ljmp
and
add
stos
ss
push
decl
sarb
lret
out
int3
adc
test
out
insl
popf
fdivrl
imul
or
out
outsl
mov
mov
push
mov
gs
arpl
push
dec
in
or
testb
jle
lret
mov
mov
ss
leave
push
mov
push
jmp
scas
push
clc
sti
cmp
dec
lds
addl
psubusw
stc
movsb
xchg
enter
es
dec
pop
out
daa
leave
daa
sub
test
cmp
mov
shl
ljmp
data16
aam
loope
out
lods
fnsave
xrelease
cmc
adc
mov
imul
adc
stos
imul
int3
bound
mov
data16
lret
mov
fiaddl
imul
cwtl
aas
dec
adc
adc
xor
mov
or
pop
ss
lds
adc
push
add
mov
lods
cmp
daa
xchg
cmp
out
fmuls
sbb
ds
ja
int
into
xor
jns
dec
icebp
pop
stos
or
out
data16
stos
push
push
rorl
fimull
sbb
sarl
call
xchg
xchg
stos
add
xor
jecxz
int
or
jo
cmp
lret
testb
shll
mov
int3
xchg
je
or
jno
inc
ret
pop
es
pushf
icebp
scas
jmp
movsl
add
sbb
lods
loop
test
rcrb
xor
or
mov
fcmovnb
mov
pushf
ds
or
shlb
push
and
push
mov
repnz
pop
mov
jg
rcrl
imul
xchg
push
push
pop
lods
loope
jecxz
mov
dec
jle
sbb
push
pop
daa
jecxz
popa
xchg
cmpsb
mov
add
sub
inc
sar
es
push
mov
mov
jp
cwtl
jmp
cwtl
test
outsb
addr16
dec
jp
adc
aad
fmul
jae
movsb
movsl
mov
mov
int
call
xchg
mov
mov
dec
inc
or
pusha
out
mov
sti
push
icebp
out
mov
mov
ret
ljmp
inc
movsb
idivl
lds
xchg
test
dec
sarl
shlb
test
mov
icebp
and
outsb
mov
adc
jno
adc
push
js
push
outsb
sub
outsl
mov
rcrl
cmpl
dec
mov
dec
or
fdivl
pop
test
aaa
push
mov
stos
dec
test
in
cmp
sbb
adc
lcall
and
mov
xchg
and
push
sahf
mov
cmpsl
shrl
ds
or
push
pop
es
mov
sarl
hlt
inc
push
ds
or
pop
push
int3
sar
test
push
in
pusha
cmp
xchg
xlat
xchg
popf
xchg
jnp
pushf
leave
adc
das
inc
push
insl
js
loopne
aam
lods
in
mov
xor
lods
call
sbb
jge
lods
or
push
insl
or
adc
sbb
xchg
inc
or
pusha
loopne
gs
mov
cltd
fucom
xchg
test
aas
hlt
cmp
mov
pop
jbe
ss
lahf
xor
xor
and
and
jne
mov
pop
ret
adc
mov
outsl
into
dec
push
inc
sub
fdivrs
inc
jns
jecxz
es
aad
push
pop
xlat
les
xor
mov
mov
dec
sub
mov
in
icebp
sar
sarb
in
xchg
jp
stos
mov
xchg
lret
pop
sbbb
icebp
pop
cmp
lcall
repnz
dec
idivb
in
loope
repnz
test
stos
dec
jns
sbb
and
jno
xor
idiv
daa
adc
and
mov
stc
jnp
dec
mov
inc
and
cli
das
push
mov
shrb
loop
jnp
lods
jae
mov
inc
cmpsl
ljmp
pop
daa
imul
out
scas
cmc
aad
cmpsl
iret
xor
iret
scas
xchg
jae
lcall
stos
sub
jne
gs
rcrb
decl
sahf
xor
std
rcl
mov
mov
test
nop
dec
inc
add
shrl
decl
mov
into
dec
sbb
push
push
cld
push
sbb
jae
lret
mov
arpl
mov
or
push
xlat
ficoml
cli
mov
fs
xor
idivb
pop
popa
sub
test
les
sbb
xor
mov
jb
xor
cmp
sbb
pusha
dec
push
ja
inc
mov
fiaddl
aaa
push
jnp
test
pop
sbb
call
and
push
xor
cmp
cmp
mov
nop
sbb
aad
pop
mov
sbb
mov
shl
mov
enter
or
popf
mov
sbb
fidivrs
mov
pop
or
mov
mov
out
push
xchg
pop
xor
or
rcl
mov
add
mov
imul
iret
cmpsb
icebp
popl
jg
xchg
out
lods
cmp
xor
scas
xor
lret
sub
push
mov
sti
mov
mov
iret
pop
imul
arpl
xor
aad
inc
mov
arpl
add
dec
cld
sbb
and
mov
jle
adc
filds
stc
iret
mov
icebp
xor
or
daa
pop
sub
dec
lea
pop
notb
mov
inc
ret
jb
sbb
es
inc
loope
sub
adc
and
outsb
push
cmpsb
fs
popa
xchg
insb
mov
pop
and
aaa
stos
insb
imul
nop
inc
sub
daa
pop
call
jbe
jecxz
mov
pop
fdivs
mov
testl
and
jne
loop
test
gs
pop
dec
lcall
add
arpl
icebp
ror
repz
cmc
sarl
and
repnz
dec
push
aaa
mov
cmc
sub
stos
and
loope
addr16
pop
or
nop
xchg
and
fcmovu
push
dec
sbb
mov
dec
hlt
outsl
sbb
jmp
cmp
sbb
jno
dec
adcl
dec
jae
xchg
pop
xchg
jnp
cmp
push
add
stos
or
xor
shl
sub
imul
mov
jp
cmp
cltd
cmp
or
ds
xchg
mov
fidivrs
insl
adcb
pop
cmp
sahf
sbb
mov
ret
in
dec
loop
in
xor
bound
mov
ret
jbe
push
popf
pop
inc
mov
loopnew
mov
sbb
addr16
push
out
mov
mov
jae
jp
repnz
scas
mov
in
mov
mov
outsb
mov
stc
je
cs
xlat
jg
push
mov
sub
dec
adc
or
popa
test
out
inc
mov
aas
xchg
sbbl
lock
pusha
inc
inc
pop
sarl
lahf
fisubs
inc
mov
leave
test
xor
ja
inc
mov
dec
and
push
idivl
int3
aaa
jne
out
mov
mov
fists
push
je
repz
jp
dec
loopne
sbb
inc
mov
out
popa
push
mov
or
addr16
enter
jle
add
dec
pop
daa
push
cli
out
jle
imul
sbb
xchg
add
jnp
arpl
sbb
bound
loopne
add
jp
xchg
addr16
into
dec
sbb
icebp
nop
or
sbb
in
jne
and
cmp
cmpsb
in
push
and
mov
xlat
scas
loopne
out
loope
adc
scas
jl
iret
and
dec
mov
and
addb
aaa
pop
in
rorl
sub
add
push
ret
pop
xor
sbb
mov
mov
dec
pop
int
nop
cmp
addl
popa
push
mov
fildll
push
test
pop
scas
cmp
mov
jp
xchg
or
mov
push
push
shrl
xchg
fwait
enter
sbb
lcall
mov
xor
in
fisubrl
lahf
jmp
imul
clc
imul
nop
int
mov
jae
sbb
or
or
shlb
mov
mov
jge
aaa
ficoms
ja
and
push
fdivrl
clc
out
inc
jp
ret
mov
push
pop
fnstsw
jbe
xor
out
loop
xor
and
arpl
iret
push
lds
out
stc
in
mov
cmp
or
stos
lock
mov
es
lcall
aam
in
and
cmp
iret
mov
sti
insl
mov
fs
out
lods
or
add
aam
in
sbb
inc
sarb
push
pop
xchg
push
push
rcl
aad
xor
repz
push
cmp
ja
sti
pop
int3
jge
mov
cld
mov
jp
push
dec
int3
cmpsb
cmpl
pop
imul
push
mul
in
inc
mov
lret
lret
mov
fstpt
inc
push
sub
loopne
ja
dec
int3
jns
pop
sub
nop
inc
into
sbb
lods
mov
mov
xchg
cmpl
pusha
push
in
mov
popf
std
xor
mov
ds
sbb
in
in
push
das
xor
dec
xchg
mov
sub
lahf
inc
test
loope
dec
out
xlat
clc
hlt
add
popf
insb
push
test
push
mov
sub
mov
dec
dec
negl
or
adc
sahf
pusha
xlat
or
sub
iret
data16
icebp
mov
ret
xor
rclb
and
nop
nop
addl
xchg
scas
sub
xor
adcl
in
xchg
mov
mov
dec
inc
ljmp
dec
std
je
pop
jbe
mov
xor
arpl
cmp
or
lods
xchg
push
jl
pop
loope
jp
adc
add
lods
dec
sub
mov
in
push
adc
in
lahf
fldl
mov
leave
rol
adc
fisttpl
int3
mov
ja
sub
xchg
mov
mov
popa
jno
push
jge
push
sub
sub
pushf
push
iret
pop
mov
rcr
je
adc
inc
jmp
pushf
stc
fcomip
rorb
test
xchg
sbb
xchg
xor
xchg
pop
ret
pop
sub
loopne
cmp
sbb
bound
fidivrs
insb
aam
fsubr
cmp
scas
jp
ficomps
xchg
mov
out
flds
leave
and
jge
lret
dec
movsb
or
faddl
push
repnz
lahf
pop
cli
adc
rcll
pop
mov
loop
ficoms
nop
sub
loope
jecxz
xchg
xlat
fdivrp
in
cmpb
out
jne
fistl
mov
and
std
lahf
ljmp
push
lret
cmp
popf
cmp
pop
cmpsb
sbbb
or
cmp
mov
fnstenv
call
ret
pop
push
xor
pop
outsb
xor
cmp
leave
lcall
movsb
int3
inc
xor
insb
iret
mov
aam
push
popl
dec
push
out
sbb
fsubl
out
and
les
std
add
in
leave
and
xlat
adc
data16
shlb
sub
repnz
cwtl
pop
lret
push
test
loopne
add
cwtl
xchg
xchg
test
xchg
or
push
mov
mov
xor
or
mov
cmc
pop
ja
inc
and
ret
les
loope
push
mov
scas
jbe
outsl
pusha
call
xchg
iret
js
sub
stos
xchg
lret
fdivp
orb
out
loope
pusha
push
sbb
sbb
inc
push
sbb
out
xadd
test
ret
xchg
popf
pop
div
stos
mov
stc
sbb
sub
outsb
xchg
mov
sbb
std
push
aad
jno
test
jae
in
jb
cmp
jmp
jo
lahf
bound
push
loope
xchg
shl
sbb
xchg
insb
out
mov
shlb
loopne
into
push
rep
pusha
lahf
sbb
dec
insb
mov
rcll
aas
ss
inc
add
push
and
adc
rorb
and
dec
lahf
pusha
jbe
jae
je
mov
daa
icebp
push
in
push
fnsave
dec
arpl
pop
add
daa
loopne
jg
les
sti
popa
pop
push
fdivrp
or
pop
xchg
fnstsw
lret
ret
sub
mov
dec
push
sbb
insb
push
test
or
and
adc
bound
xor
jmp
mov
cltd
out
jge
outsl
test
pop
lock
cmc
inc
mov
sub
bound
xor
je
push
pop
pushl
dec
sahf
xor
mov
loope
lahf
cmp
shll
and
fmull
jno
mov
shl
jnp
or
mov
sub
mov
or
dec
jae
int3
cmc
data16
add
xor
aam
cmpsl
pop
insb
in
push
cwtl
orb
lahf
mov
push
into
or
add
xadd
dec
aas
mov
into
push
dec
popa
inc
push
mov
dec
and
or
js
leave
out
dec
aaa
add
xor
dec
aas
jo
lcall
popa
bound
adc
cwtl
xor
lret
mov
inc
push
pop
inc
jbe
pop
mov
mull
in
add
xor
push
mov
jge
pop
xor
adc
fidivl
in
ljmp
pushf
lahf
mov
mov
jle
xchg
fldcw
mov
push
mov
xor
fidivl
or
addl
inc
out
ficomps
sub
pop
shr
xor
pop
xchg
add
sub
cmp
into
sub
push
cltd
aad
pop
pop
outsl
test
mov
jg
xchg
cmc
call
stos
jb
loope
insb
or
rorl
xlat
cmp
sbb
push
adcb
fldl
push
mov
adc
adc
cmp
jne
mov
mov
mov
pop
dec
add
popa
xchg
bound
in
cltd
xchg
je
mov
xchg
pop
mov
test
int3
mov
mov
sub
pop
repnz
bound
jl
decl
and
arpl
jnp
mov
cwtl
pop
data16
adc
mov
mov
push
cltd
repz
and
das
das
and
push
das
xor
ret
les
fdivrp
pop
push
popa
dec
and
and
jbe
xor
lret
inc
dec
xchg
xor
js
jnp
sysexit
lods
imul
mov
outsl
push
cmp
stos
or
pushf
pop
cmpsl
push
mov
xchg
cmp
ja
call
jl
ljmp
jae
fwait
ja
mull
imul
push
out
jecxz
adc
gs
or
jnp
mov
rcrb
jne
jno
lret
sub
sbb
or
into
cmp
pop
jno
cmp
sbb
xchg
shrl
add
sbb
cltd
dec
shrl
add
jg
add
push
add
je
aad
nop
cmc
adc
enter
ds
fcmove
dec
aaa
add
jne
mov
pop
fidivs
ds
sbb
adcl
or
movb
jae
lret
hlt
lods
pop
fwait
jnp
or
jle
add
mov
cmp
add
or
dec
push
ss
mov
cld
jp
in
mul
adc
cmpsb
inc
mov
out
out
inc
mov
in
adc
cmp
dec
aad
mov
cli
rol
lods
mov
sub
lret
popa
int
js
mov
arpl
das
jl
jns
mov
in
dec
inc
leave
or
inc
jp
sbb
stos
mov
clc
jae
sbb
insl
jae
daa
push
mov
cmpsl
and
mov
adc
and
subb
dec
hlt
dec
out
jg
push
lods
add
sub
outsb
and
inc
or
inc
mov
mov
cmc
and
pop
insl
xor
lea
rcr
push
pop
daa
sti
mov
fs
xor
stos
cli
daa
loope
cmp
pop
imul
mov
cld
in
scas
inc
iret
push
inc
push
scas
mov
jecxz
fwait
dec
xor
cmp
inc
ficomps
dec
clc
nop
ss
push
mov
dec
add
in
sahf
in
lods
fadd
jge
bound
xchg
outsb
mov
pop
stos
out
sbb
xchg
divl
adcb
test
fwait
xor
jae
and
jle
imul
leave
inc
mov
mov
les
jbe,pn
jno
fists
sub
outsb
push
cmp
push
pop
cltd
sub
imul
leave
push
xchg
inc
shlb
push
add
push
mov
jbe
arpl
pop
outsb
arpl
idivb
lahf
pop
sbb
lock
in
fstpl
xchg
and
or
mov
cwtl
fisttpll
inc
nop
bound
adc
push
nop
scas
cmp
inc
lods
or
jno
lahf
jne
inc
and
dec
mov
int3
out
das
dec
jg
movsb
xchg
int
outsl
pop
add
std
cmpsl
jno
aad
push
jbe
and
and
pop
sbb
xchg
in
sbb
adc
adc
mov
test
out
je
xchg
jo
adc
das
pop
jg
mov
fucom
mov
add
xor
aad
dec
sub
cmc
push
test
push
es
lock
inc
mov
int3
fdivrl
sub
cmp
aaa
dec
mov
scas
mov
xchg
xchg
mov
push
xor
adc
adc
lds
pusha
shrl
loopne
xchg
xor
mov
dec
mov
dec
mov
xchg
mov
call
test
fisttpl
mov
push
rorb
aam
xor
xchg
test
mov
out
cmpl
enter
jns
cmp
jbe
cmpsb
loopne
das
mov
jne
inc
les
ja
cmpsl
cmpl
push
into
ds
lahf
mov
mov
jp
std
ja
mov
adc
sbb
int3
ret
pop
inc
dec
inc
inc
scas
inc
bound
xchg
xor
jns
frndint
ja
mov
cwtl
adc
lea
mov
pop
mov
dec
iret
sub
xchg
push
mov
add
add
mov
sbb
insb
fisttpl
xchg
fildl
pop
xchg
add
pop
insl
jae
and
xor
or
fdivrl
das
add
js
daa
aad
cld
shr
xor
dec
stos
sti
cmp
add
test
xchg
xchg
shll
loopne
cmpsb
imul
movsl
popf
mov
and
ficomps
lock
dec
and
lret
jne
mov
pop
scas
xor
mov
roll
cwtl
inc
sti
cltd
gs
bound
movsl
adc
dec
jp
mov
xchg
ficomps
addr16
into
out
enter
jp
xchg
mov
pop
stos
cmpb
mov
or
or
int
pushf
popf
mov
sub
das
ja
fbstp
cmc
cli
mov
arpl
shll
and
pop
out
cwtl
sbb
repz
insl
cwtl
fistpll
out
aas
sub
jns
mov
mov
in
daa
loope
jg
cmp
mov
out
rolb
repnz
sub
rcl
cli
pop
in
push
cmpsl
sbb
jge
mov
sub
cld
in
stos
std
test
sub
dec
dec
push
cwtl
jge
adc
dec
xor
push
mov
mov
xor
out
xor
icebp
add
outsb
subb
ror
out
clc
jne
adc
out
cs
mov
jle
out
aam
test
cmpb
int3
adc
cli
cld
cmpsl
dec
ret
pop
pop
out
out
mov
jle
add
ja
cs
movsb
arpl
loop
adc
hlt
add
scas
push
sti
push
adc
mov
jp
add
aas
ss
and
lret
adc
int
add
and
dec
push
outsl
pusha
push
pshufw
and
js
sub
push
sub
xor
aas
mov
enter
and
lahf
aam
or
fcmovbe
push
popa
push
ficompl
push
repnz
xchg
sbb
jmp
flds
pop
mov
sbb
imul
and
data16
pop
push
mov
stos
cmp
mov
lods
cwtl
test
ljmp
pushf
push
mov
emms
insl
and
mov
jae
cmp
xchg
pop
bound
fiaddl
test
mov
stos
inc
es
sub
mov
jae
dec
fadds
daa
and
popa
lods
jnp
xchg
sub
rorb
test
inc
xor
inc
imul
in
xor
nop
sbb
sbb
ret
arpl
sbb
pop
int3
xor
pop
mov
mov
push
andb
cmpl
leave
xor
push
inc
mov
cmp
punpcklwd
and
pop
mov
mov
inc
jmp
pop
mov
fwait
ja
jl
and
jle
into
push
xchg
popa
mov
and
lods
test
inc
dec
dec
mov
mov
mov
ret
aaa
hlt
push
popf
sarl
lods
cli
pushl
jae
jo
lret
das
mov
add
mov
dec
pop
mov
jnp
push
adc
fstps
imul
xor
std
call
lahf
pop
ret
dec
xchg
inc
cmp
push
in
adc
add
pop
je
aad
cmc
pop
popf
out
push
jb
hlt
mov
cmp
out
data16
sbb
sub
sbb
push
sub
int
jnp
je
jle
jecxz
pop
mov
jb
loopne
nop
add
rorl
cmp
loopne
clc
test
xlat
fs
pushf
and
push
push
and
nop
jbe
inc
jb
out
sbb
inc
mov
sbb
sub
xchg
shll
sub
xchg
dec
popf
push
mov
pop
fwait
lea
mov
mov
push
cmp
jmp
xor
sahf
in
xchg
mov
mov
test
cmp
mov
decb
fwait
jnp
mov
cltd
fsubrl
testb
fldlg2
adc
or
stos
jb
rcll
cs
aad
repnz
sbb
rcrb
xchg
mov
daa
xchg
imul
orl
push
pop
adc
cmpsb
scas
mov
sbb
pop
sbb
dec
movsl
into
enter
ds
cld
cmp
or
pop
pop
xlat
das
mov
and
push
pop
sbb
stc
insb
shlb
rcr
gs
mov
dec
cwtl
jecxz
lods
jns
fldenv
popa
cmpsl
push
push
popf
xor
pop
adc
ret
cmpsl
mov
repnz
sub
and
mov
push
mov
mov
and
imul
pop
in
jl
nop
mov
add
push
rolb
shrl
xlat
sub
jg
scas
add
mov
cmp
xchg
mov
repz
shl
cmp
outsb
fs
gs
inc
gs
in
xor
mov
ret
mov
cmp
mov
adc
xchg
push
adc
push
mov
push
not
es
cmp
cmc
loopne
xor
sbb
sbb
pop
aad
shr
movsb
ss
aam
loope
push
loope
jmp
in
or
fdivrl
movsb
mov
int3
mov
cmp
mov
xchg
jecxz
cmpl
cmp
mov
jo
lcall
and
arpl
outsl
in
gs
aam
cs
daa
out
push
cmp
push
push
in
xchg
movsl
jle
push
mov
add
ret
dec
insb
inc
add
push
nop
nop
mov
imul
adc
loopne
ficompl
mov
pop
xchg
loope
add
mov
mov
cmpsb
jmp
xchg
adc
push
clc
mov
call
out
mov
aaa
fstpl
mull
fsubl
push
lods
test
push
dec
add
clc
stc
pop
orl
shrb
mov
clc
arpl
in
xor
xchg
arpl
je
sbb
mov
xchg
lods
js
lahf
in
adc
xchg
pop
add
pop
xor
push
movsb
or
mov
inc
imul
in
in
or
enter
inc
roll
pop
jg
pop
in
xchg
pop
insl
ljmp
xchg
pushf
mov
nop
pop
ret
xchg
sbb
stos
scas
femms
dec
lods
insl
dec
clc
and
cmp
dec
imul
popf
in
push
inc
out
xchg
sbb
sbb
xchg
xor
in
stos
pop
fxch
xchg
fdivr
xchg
xor
xor
mov
insb
xor
mov
stos
jle
lcall
sbb
add
inc
and
test
dec
mov
jle
adc
mov
mov
xchg
xor
xchg
cmpsb
fmuls
gs
jecxz
xor
xor
fwait
cmp
push
fldenv
lret
aad
inc
push
inc
arpl
push
and
push
jle
es
push
jne
cmp
mov
mov
jecxz
push
mov
mov
mov
fadd
notl
cld
loope
es
imul
icebp
in
sahf
adc
imull
xor
push
cmp
jp
fnstcw
jecxz
xchg
lods
pop
cwtl
xchg
xchg
mov
mov
out
pop
aaa
cmpsl
push
sbb
int3
xorb
cmp
dec
pushf
ret
cmc
dec
aaa
sahf
mov
mov
push
jbe
call
sub
cld
push
or
insl
mov
repnz
icebp
adc
push
je
mov
add
je
xchg
mov
xlat
in
mov
push
negb
pop
xchg
or
loopne
icebp
ror
and
dec
inc
inc
adc
fxch
sub
xchg
or
stos
lea
imul
and
call
loope
fnsave
and
inc
mov
into
lret
pop
ja
imul
imul
jecxz
jno
int
lds
or
ret
outsb
orl
loope
push
repz
cwtl
call
xchg
fisttpll
add
dec
ljmp
out
push
scas
movsb
push
xchg
pop
sub
xlat
nop
lahf
ja
push
icebp
dec
push
add
and
int
insb
pusha
adc
mov
repnz
xor
mov
or
lods
xchg
ja
push
jecxz
int3
xor
cmp
pop
out
mov
mov
pop
inc
xchg
push
xor
stc
mov
push
mov
scas
inc
cmpsb
pushf
shlb
or
cli
cmp
xchg
bound
sahf
pusha
fsubr
jns
push
lret
into
push
push
xchg
icebp
dec
mov
or
in
add
xchg
insb
sub
in
cmpsl
ja
jo
fidivs
in
sahf
sbb
bound
inc
cwtl
jns
or
test
lods
arpl
adc
add
into
cli
or
sbb
or
fisttpll
ja
outsl
ds
cmp
ds
pop
out
in
scas
push
pushf
jb
les
mov
shr
in
dec
adc
inc
jp
mov
mov
ret
addr16
sub
aaa
and
data16
clc
cs
xor
mov
addb
fwait
dec
in
cmp
dec
push
int3
mov
push
ja
mov
mov
lret
rcll
daa
mov
and
dec
in
or
int
jg
mov
mov
or
pushf
bound
pop
mov
decb
pop
adc
push
rcrb
pop
push
pop
pop
nop
sbb
push
xchg
push
mov
inc
xor
pop
pusha
pop
or
mov
push
and
inc
xchg
loopne
add
je
dec
dec
test
cld
add
sarl
sbb
jg
adc
jle
and
sub
dec
or
lret
jo
stos
dec
ret
inc
xlat
repnz
cwtl
xor
adc
push
xor
mov
popa
mov
mov
out
mov
mov
idivb
imul
jno
jle
adc
movsl
outsb
aad
movsb
mov
cmc
mov
imul
and
into
scas
add
inc
mov
xor
lods
mov
or
pushf
jno
ret
lret
and
cli
mov
bound
cmp
bound
rorb
lret
ficomps
cmp
cmp
rcl
repz
idivl
pusha
stc
push
or
mov
add
lds
or
sbb
push
sbb
push
lahf
sbb
into
inc
fstpl
adc
cmp
lcall
push
lds
out
enter
pop
and
cltd
and
cmp
fsub
cltd
adc
adc
xorb
andl
fiadds
stc
or
xor
sahf
sub
clc
aas
add
adc
xor
jns
dec
sub
pushf
fcoms
dec
sbb
cwtl
jo
andl
or
fiaddl
outsl
orb
sbb
fidivrl
cmp
ret
rcrb
mov
cli
in
cmc
mov
jmp
bnd
xlat
cmp
push
xor
sbb
addr16
les
in
jns
lret
pusha
out
out
pop
mov
loope
es
decb
sti
hlt
loope
and
add
xchg
sti
adc
testb
loope
mov
push
loopne
in
add
stc
sub
mov
pop
add
cmp
lret
in
sub
adc
xor
scas
insb
sbbb
lret
int3
jo
pop
subb
dec
jns
nop
xor
xor
xor
bound
das
addl
cmc
pop
sti
adc
cltd
stos
mov
addb
jmp
jnp
add
push
push
sub
push
pop
in
mov
ret
out
aam
fstpt
cmpsl
sub
lret
int
mov
ret
ficoms
pop
mov
aas
int
jns
fstl
inc
mov
pop
pop
imul
cmp
sti
and
int3
jo
jg
mov
mov
out
rcrb
out
fidivrl
adcl
jo
pop
mov
push
scas
jp
int
mov
outsl
sti
and
and
cmpsb
repz
fdecstp
xor
int
xchg
inc
inc
mov
push
cmpsb
aad
add
sbb
out
pop
pop
ss
loope
daa
pop
out
mov
arpl
sbb
out
rol
adc
andb
in
cltd
popf
pusha
es
jle
cmp
fcom
mov
adc
leave
mov
inc
jle
pop
icebp
outsb
jae
sbb
or
icebp
cmp
xchg
pusha
and
fstpl
pop
imul
cmp
dec
stc
stc
adc
xor
inc
adc
dec
mov
and
xchg
stc
sbb
cli
clc
push
cmp
pusha
ret
cmp
mov
jecxz
mov
sbb
je
punpckhbw
add
aad
cmp
pop
into
lcall
dec
push
test
dec
subb
pop
or
lock
test
rolb
aas
adc
mov
and
leave
rclb
lahf
sbb
loop
out
popf
lods
xchg
push
icebp
into
in
push
test
or
movsb
push
xor
fisubs
dec
cmp
orb
dec
mov
mov
push
add
pop
gs
cwtl
les
mov
sbb
pop
stos
hlt
shlb
sbb
ljmp
pop
ja
add
cmpsl
test
jmp
cmp
sbb
mov
cmpl
rcll
sub
push
push
xchg
push
pop
ljmp
mov
imull
jns
adc
jg
adc
cli
dec
pop
leave
inc
inc
scas
dec
pop
repnz
pop
rorl
scas
mov
sbb
push
int
test
mov
sub
push
mov
into
jge
add
loope
or
push
fwait
cmp
or
inc
xchg
push
pop
stc
mov
cld
pop
xor
divb
pop
sbb
jmp
mov
inc
adc
or
pop
rorl
movsl
cwtl
out
xor
addr16
lock
mov
mov
lods
push
outsb
dec
xchg
pop
add
pop
jl
leave
pop
jnp
xchg
popf
int
jno
test
xchg
out
test
js
jb
mov
sub
les
dec
pop
stos
dec
xchg
xchg
aaa
ljmp
fdivrs
or
sbb
add
into
mov
stos
jne
jne
or
sbb
xchg
xor
insb
xchg
sbb
push
addl
dec
outsb
adc
ljmp
or
fbstp
iret
je
addr16
dec
out
mov
jo
in
daa
xchg
jmp
sbb
leave
cmpsl
nop
sub
add
pop
roll
hlt
mov
cli
mov
mov
sub
mov
mul
sub
ljmp
bound
mov
mov
lcall
jmp
and
imull
pushf
sub
inc
cmp
pop
out
comiss
ret
sbb
sub
xchg
loope
subb
xchg
sti
mov
rcl
or
pop
les
das
adc
and
sbb
or
mov
jmp
jno
pusha
mov
cmp
xchg
cmpsl
inc
or
pop
jnp
imul
mov
mov
lea
cli
je
jmp
popa
inc
ror
push
mov
xchg
mov
enter
adc
fwait
movsl
xchg
sbb
shlb
cmp
scas
and
movsl
push
dec
dec
jno
jb
jnp
jecxz
outsl
mov
lret
outsl
pop
lods
popa
lret
lock
sbb
or
ljmp
fs
daa
mov
add
mulb
xchg
or
push
mov
jae
xor
mov
jmp
add
mov
fwait
lds
or
mov
ds
xchg
mov
jmp
in
std
push
inc
mov
stos
push
loopne,pn
jns
push
inc
test
push
hlt
jmp
enter
repz
push
stos
dec
mov
rcr
hlt
mov
jne
in
cli
mov
pusha
dec
inc
cmp
xchg
test
test
out
push
sbb
xor
sbb
mov
out
cmp
loope
int
push
stc
cmp
dec
daa
xchg
movb
insb
cwtl
fistpll
ja
loope
dec
push
movsl
test
roll
pop
incb
mov
jp
and
es
rorl
cmp
push
lahf
cmp
mov
fmull
and
test
push
and
scas
rcrl
dec
int
mov
imull
insb
lahf
pop
ffreep
iret
gs
adc
lds
sbb
pop
ret
inc
inc
adc
repnz
hlt
jecxz
cmp
in
mov
loopne
maskmovq
divl
add
dec
mov
adc
out
push
ret
lods
push
iret
es
push
and
enter
mov
movlps
lods
data16
push
test
popf
inc
push
mov
jge
adc
inc
xchg
fwait
ljmp
rorb
jb
mov
xor
rcrl
sub
mov
pop
ret
cmc
pop
xor
in
cmp
mov
sbb
sub
imul
lock
adc
inc
jnp
sbb
cmpb
test
movsl
ret
fcomi
int
lcall
xchg
add
pop
adc
add
cmp
bound
pop
icebp
sub
jp
dec
fadds
xorb
mov
test
aaa
inc
idivb
fdiv
mov
nop
das
leave
cmp
mov
adc
leave
loope
insl
xlat
mov
in
mov
xchg
lahf
mov
cld
jmp
pop
jle
mov
fsub
rorb
fistpll
or
mulb
lods
cmp
cltd
fisttpl
shl
fstpt
mov
aam
dec
lcall
aaa
add
clc
adc
fistpll
shlb
mov
pop
dec
cmp
pop
add
or
das
ret
pop
pop
mov
mov
add
mov
xchg
movsl
mov
roll
sub
mov
sbb
les
pop
push
mov
adc
mul
fisttps
inc
dec
ds
xor
fwait
ds
cmp
mov
js
sub
mov
cmp
inc
mov
into
cs
repz
sub
shrl
mov
pushf
add
xor
cmp
cmpsb
inc
xlat
jns
jns
xlat
lcall
decl
xchg
pop
sub
ljmp
addr16
adc
std
iret
inc
xchg
je
pusha
sub
xchg
lahf
pop
pslld
pop
jmp
sbb
imul
enter
xor
cmc
in
loop
shll
adc
test
into
out
sarl
ret
mov
mov
inc
sbb
xor
jp
xchg
and
outsb
cmp
pop
mov
fs
mov
retw
rclb
das
enter
ljmp
imul
sub
mov
jge
sbb
mov
cmp
imul
call
arpl
mov
loop
lods
dec
mov
sub
pop
add
fwait
jo
cmp
inc
xor
addb
sub
pop
repnz
ds
mov
xchg
xor
xlat
pop
adc
aas
test
mov
imul
gs
push
dec
js
out
clc
lds
pop
out
add
mov
ret
gs
es
push
xchg
add
sbb
dec
inc
popf
xor
shlb
jb
adc
or
clc
jo
repnz
dec
add
lahf
loopne
ror
fildll
shrl
outsb
adc
xchg
sahf
dec
mov
inc
sub
iret
mov
push
xchg
or
sbb
repz
sub
cmc
out
dec
cmpsb
push
loope
pushf
das
sbb
mov
test
sti
pop
sub
das
xor
jp
arpl
lods
cmp
mov
loopne
sub
jae
push
inc
test
shll
test
test
xchg
xchg
mov
sub
adcl
mov
cmp
daa
in
dec
fnstsw
pop
in
sub
push
dec
outsl
xchg
dec
outsl
aas
std
lret
adc
iret
add
daa
or
jecxz
pop
mov
xor
sbb
mov
xchg
imul
movsl
out
mov
lcall
jno
adc
repnz
ret
xor
addr16
test
es
mov
in
pop
pop
adcb
dec
or
stos
pusha
sbb
xchg
in
cltd
jnp
xor
popf
movsb
or
cmp
jp
adc
pop
adc
int
cmp
cmpsl
lahf
pop
push
inc
sub
jmp
sbb
cli
dec
addr16
xchg
push
in
popa
push
push
mov
imul
cmpl
xlat
hlt
push
inc
les
jae
nop
add
mov
cmpsb
in
hlt
in
push
lods
fbld
mov
mov
cwtl
sbb
sub
or
push
sbb
add
lea
movsb
mov
xor
mov
mov
movb
ret
mov
jl
in
incb
lods
dec
mov
dec
movsl
mov
lret
decb
fistl
iret
xor
adc
les
mov
nop
inc
stos
pop
shrb
or
addr16
mov
into
movsb
cmp
adcl
xor
scas
enter
sbb
test
sub
cmp
cli
mov
in
xor
stos
mov
nop
fstpt
pushf
ds
cwtl
std
xchg
das
inc
xchg
repz
sbb
cmpl
stc
inc
mov
xchg
ljmp
mov
mov
mov
out
cmp
jb
pop
lret
xlat
add
inc
dec
sbb
addr16
inc
aas
fs
mov
jecxz
lahf
adc
dec
inc
lds
bswap
ja
mov
push
das
xlat
stos
cwtl
xor
iret
sahf
adc
imul
nop
push
fstpl
sti
xor
pop
or
add
sti
sti
insl
imul
sbb
rcrb
or
and
je
xor
pop
aas
repz
cmc
outsb
mov
and
jbe
dec
in
adc
pop
cmpsl
adc
jnp
mov
loopne
pop
jbe
jecxz
in
pop
push
mov
or
sbb
in
outsl
popf
cmc
dec
jp
in
cmp
cmp
sbb
jcxz
mov
xchg
in
mov
icebp
xchg
mov
jnp
cwtl
inc
cmp
ljmp
imul
push
pop
divl
jnp
cld
cmp
xchg
cltd
inc
cmpsl
mov
adc
pop
je
sti
nop
xchg
xlat
cmp
xchg
sbb
adc
sar
inc
aam
cmp
loope
xchg
jmp
push
repz
add
outsb
stc
lock
pop
xchg
push
or
pop
inc
sbb
jl
mov
mov
rorb
jp
push
int
xor
or
jl
cmp
inc
mov
sahf
test
mov
xchg
arpl
jmp
inc
int
fmuls
cwtl
mov
shlb
xchg
inc
adc
push
add
mov
enter
rorl
idiv
pop
insl
stos
loop
test
jb
call
push
outsl
ficoms
aas
loope
ret
pop
mov
push
outsl
daa
dec
jo
pop
jne
ret
daa
fsubrp
and
inc
loope
mov
jae
and
dec
pop
lock
shll
aad
dec
lds
ret
aam
dec
xor
daa
lss
mov
or
sub
rclb
mov
pop
imul
mov
add
xor
jge
out
imul
out
jl
mov
movsl
std
call
inc
iret
pop
xor
lock
sub
add
scas
cmp
cmp
jno
cmp
div
push
or
loop
fcoms
mov
dec
insb
cmp
cmpsb
push
xchg
jns
mov
xchg
mov
lea
xchg
jns
mov
add
jnp
pop
stos
cmp
lea
aam
mov
push
mov
clc
in
addr16
adc
cmp
jo
fsubs
fcoms
ja
inc
bound
lcall
cwtl
add
xchg
dec
inc
adc
inc
inc
or
lcall
int3
test
in
fistpll
add
fsubs
cmp
iret
outsl
adc
pop
xlat
and
js
jmp
jecxz
stos
mov
push
mov
adc
xchg
inc
cmp
rcrl
imul
loop
rcll
insb
aas
test
mov
inc
fsubr
scas
sbb
dec
inc
or
inc
pop
xor
ljmp
pusha
loope
leave
repz
addl
mov
cmpsb
dec
insl
and
and
sbb
push
imul
into
roll
pop
push
in
fbstp
jnp
mov
fstl
das
inc
movsl
icebp
lret
mov
sub
mov
sbb
add
or
packuswb
push
pushf
jbe
shlb
dec
mov
shll
push
cmp
out
es
cwtl
ficoml
cmp
or
pop
xchg
imul
push
lcall
adc
xchg
adc
push
orl
cmp
xor
cs
and
and
movsl
stos
xchg
jns
lcall
icebp
mov
test
push
ds
sub
repz
dec
insb
mov
es
lds
jnp,pt
sarl
aam
sub
fisttps
pop
xchg
int3
sub
pusha
insb
addr16
xlat
repz
mov
push
data16
mov
sbb
sub
movsl
ja
pop
push
jecxz
or
enter
push
dec
xchg
push
xchg
cmp
shrl
inc
mov
insb
or
mov
and
mov
idiv
inc
xchg
jne
cmp
je
or
fwait
jg
add
xchg
lret
adc
xor
xor
push
fndisi(8087
mov
out
imul
clc
out
pop
or
orl
loop
rcl
insb
adc
cli
xor
add
cltd
mov
push
mov
int3
jmp
xchg
jo
xor
cmp
cmpsl
lods
inc
addl
aas
mov
ja
cmp
imul
jge
out
sub
sbb
test
insb
ret
roll
repnz
dec
pop
fwait
jb
cmp
dec
ljmp
or
pop
dec
scas
popf
pop
lahf
cmp
jo
pop
aad
imul
xor
movsb
outsb
jo
pop
nop
inc
cmpsb
pop
cmpsb
jmp
sub
incl
push
into
cli
cmpb
mov
adc
and
mov
adc
fimuls
push
adc
fsubs
stos
mov
stos
cmpsl
andb
adc
mov
test
sbb
jle
push
clc
adc
pop
and
in
imul
pop
push
jecxz
fsts
mov
cltd
push
dec
push
or
and
and
ja
jge
and
test
cmpsl
adc
jge
mov
test
mov
cmpsb
sub
cmp
fs
lock
or
pushf
pop
pop
jo
mov
scas
negl
ffreep
push
enter
cmp
out
push
cld
dec
mov
dec
aaa
dec
cmp
mov
test
jns
and
xchg
test
cmc
jae
push
out
jns
sub
and
xchg
adc
dec
test
inc
pop
mov
push
daa
adc
mov
and
cmp
jg
mov
or
std
ret
cmpsl
lea
inc
xor
mov
lcall
fcmovnbe
insb
mov
data16
popa
xchg
jp
mov
and
in
jmp
pop
or
ret
enter
push
addb
jmp
ds
mov
test
mov
inc
bound
lea
fcmovnu
xor
int
ficoml
or
inc
sbb
jle
stc
popa
mov
js
daa
push
lret
lret
out
out
mov
sahf
sbb
clc
jge
cmpsb
fidivs
dec
fisubl
xchg
lods
jnp
fcomp
cmp
mov
jl
sub
dec
dec
push
and
outsl
call
dec
movsb
aaa
mov
loope
sbb
add
out
clc
iret
push
push
ds
sub
mulb
and
xor
add
xlat
sub
mov
inc
sbb
pushf
in
mov
js
enter
arpl
pop
lea
aaa
enter
dec
mov
data16
jg
stos
pop
sbb
lods
fidivl
mov
mov
inc
cmp
add
pusha
xchg
dec
fdivl
sbb
adcl
dec
inc
xchg
les
xchg
dec
sbb
out
pop
cmpsl
mov
arpl
data16
jns
adc
lods
jl
pusha
dec
dec
cmc
sub
icebp
sub
lock
push
data16
out
adc
pop
or
das
call
push
addr16
into
mov
xchg
xchg
pop
push
icebp
fnsave
adc
xor
mov
xor
inc
push
pushf
adc
and
cmp
lahf
sti
inc
xor
bound
mov
and
scas
out
lahf
add
push
stos
jmp
lret
sub
mov
popa
insb
add
jle
ss
sbb
shr
popf
mov
out
push
push
jle
jno
fsubrs
xchg
aaa
and
repz
jmp
xchg
aad
cmc
std
xchg
jne
mov
test
mov
fnsave
jnp
inc
mov
pop
add
or
inc
mov
rorb
xchg
bound
cmp
mov
aaa
pop
or
test
pop
cmp
out
pop
incb
dec
cltd
jle
sbb
xor
jp
mov
pop
in
lock
cs
xchg
mov
mov
outsl
js
sub
pop
push
inc
bound
into
in
inc
loopne
or
test
inc
mov
ja
xchg
ret
in
and
fidivrl
jnp
dec
xchg
jmp
pop
in
xchg
dec
push
dec
mov
fmul
es
dec
dec
sub
dec
sbb
mov
inc
cs
or
fwait
repz
imul
inc
sub
jle
enter
jne
add
mov
stc
push
in
loope
xor
inc
pop
out
sarb
pop
sbb
inc
mov
push
mov
dec
push
mov
lahf
insb
mov
fst
dec
jns
call
jg
jnp
mov
push
mov
sub
mov
outsb
xchg
mov
or
daa
out
and
inc
push
cltd
and
xor
xor
out
pop
mov
or
ret
push
pop
or
mov
or
add
cld
jp
jmp
mov
add
add
or
je
add
data16
mov
imul
xchg
call
jno
dec
fnstsw
lods
dec
jne
fistps
xchg
xchg
shl
pusha
mov
lea
insl
pusha
enter
fs
or
imul
mov
jae
xor
or
pop
out
sub
shl
in
mov
dec
bound
addb
call
in
jae
int3
loopne
ss
xlat
repz
scas
pop
cltd
sub
mov
pop
movsb
jae
lahf
loope
jbe
sti
negb
int
ds
aam
mov
pushf
pop
sub
push
xor
push
mov
rolb
or
adc
outsb
xchg
mov
inc
mov
push
jl
or
shll
call
popl
adc
and
cmp
mov
movsl
out
mov
mov
repz
scas
scas
xorl
and
js
test
inc
mov
and
push
adc
in
pop
and
push
jno
dec
pop
sbb
mov
mulb
sub
cmp
in
test
cmpsl
fcmovu
jp
popa
lods
movsl
mov
pop
ret
mov
adc
adc
push
add
cmc
mov
mov
pusha
arpl
mov
ljmp
mov
or
loope
or
std
clc
enter
fwait
into
stos
dec
out
push
dec
pop
sub
rcl
or
dec
cmpsl
mov
fcom
cmp
stos
and
sbb
and
inc
shrl
inc
pop
and
outsb
mov
jns
push
jmp
cmpsl
faddl
mov
pop
pop
cmp
push
into
inc
adc
aad
mov
addr16
pop
gs
xchg
sbb
or
mov
gs
in
das
lret
jb
push
repz
nop
stc
inc
jp
insb
sbb
jo
lds
fmuls
push
xchg
lret
cmp
in
arpl
mov
idiv
push
lods
inc
leave
pop
adc
mov
clc
das
inc
sub
ljmp
inc
shll
cmp
xor
rorl
jnp
inc
inc
xchg
push
frstor
xor
or
xor
clc
jp
pop
cmpsl
addr16
insl
outsl
mov
sbb
mov
aas
in
sbb
dec
add
and
adcl
cmc
xchg
mov
inc
mov
lret
cmpsb
inc
mov
xchg
je
dec
sarb
dec
mov
dec
mov
sbb
subl
stos
pop
std
ljmp
sti
pop
in
sahf
outsb
pop
imul
leave
push
adc
pop
mov
ss
ljmp
or
mov
cmpsl
jle
clc
or
fsts
pop
xchg
into
hlt
xor
mov
or
push
jnp
push
aas
insb
jg
rol
mov
data16
dec
jo
inc
jno
stc
adc
add
sahf
movsbl
adc
and
call
sub
inc
movsb
and
cmc
mov
or
pop
cmp
pop
pop
xchg
outsb
mov
arpl
imul
icebp
rcll
cmp
pop
push
pop
in
imul
adc
mov
in
add
and
lret
and
scas
jmp
cmc
hlt
icebp
fwait
and
loope
pushf
mov
sbb
inc
shlb
adc
into
call
dec
mov
dec
mov
ljmp
jns
insb
sub
decl
add
div
aaa
adc
jle
ds
in
cmp
mov
test
popf
rorl
inc
popa
lret
mov
dec
fmull
daa
jbe
leave
rcrl
hlt
lds
icebp
mov
imul
sub
enter
pop
jecxz
sbb
rcrl
dec
cltd
sbb
mov
jo
jnp
cmp
pop
push
push
sbb
pop
call
jle
jmp
ret
add
stc
xor
pop
inc
arpl
lret
pop
cmp
fistl
xchg
xchg
arpl
push
gs
mov
xor
fstp
repnz
test
shll
xor
cmp
dec
lret
iret
jl
das
xchg
insl
jne
sub
cmpsl
sub
faddl
test
sub
xor
out
int
and
adc
jp
dec
stos
push
ret
push
cvtpi2ps
pop
add
roll
mov
push
rcll
and
cmp
ss
adc
xchg
aad
in
data16
cmp
ljmp
cmp
and
mov
nop
loop
xchg
sahf
sbb
inc
jo
sub
mov
mov
pusha
cltd
pop
and
and
xlat
pop
cmpsl
ds
adcl
repz
lret
popa
mov
aaa
mov
popa
or
xlat
insl
imul
and
ljmp
mov
int3
inc
mov
ret
cltd
imul
repnz
mov
push
or
fsubs
cmp
push
mov
ficoms
aad
das
out
ret
pusha
cmpsl
lds
mov
into
scas
push
pop
sarb
movsb
sbb
stos
jnp
ljmp
rcll
jae
add
cmpsb
cmc
add
scas
mov
adc
lahf
subl
ficoms
shll
sbb
scas
mov
sar
hlt
imul
add
notb
mov
jge
out
dec
jle
lock
addr16
lcall
sbb
out
nop
inc
mov
jne
ret
rcrl
pusha
popf
xor
adc
inc
push
pusha
hlt
icebp
movhps
mov
add
lods
pop
lcall
iret
jp
popl
push
cmp
and
lock
aaa
insl
and
pushf
add
or
jnp
sti
mov
sub
cmp
das
ret
dec
push
cmp
mov
pop
pop
inc
push
gs
nop
push
or
pop
movsl
aaa
mov
out
sahf
out
cmp
aaa
leave
int3
inc
sti
push
sbb
mov
cwtl
push
dec
in
shlb
out
xlat
es
lret
sub
dec
pop
fcmovbe
push
jno,pt
hlt
test
pushf
fmulp
call
adc
nopl
iret
ljmp
pop
scas
and
xchg
dec
loopne
fcoml
adc
fdivs
or
mov
cwtl
pop
sbb
push
pop
lock
mov
in
loop
je
lods
aas
rcrb
xchg
int
mov
pop
mov
cmpsl
cli
sbb
dec
adcl
inc
ds
int3
pop
jmp
cs
out
or
les
adc
out
iret
pop
nop
popf
icebp
pop
into
hlt
inc
push
jo
xchg
mov
xlat
incl
les
jge
fisubrs
xlat
push
push
ficoms
or
mov
cltd
repz
jns
adc
addr16
xchg
movsl
shrl
mov
push
inc
sbb
lds
js
xchg
fucom
xchg
sbb
inc
xchg
pop
mov
push
sbbb
bswap
das
mov
sub
xchg
push
sti
mov
inc
cld
pushf
sub
sbb
icebp
adc
mov
mov
add
mov
xchg
dec
sub
jo
fldl
push
pop
jle
lods
or
scas
sbb
ret
nop
mov
and
pop
je
jbe
xchg
ljmp
jp
sbb
dec
lahf
inc
mov
push
add
adc
cmp
rorb
push
push
jnp
mov
lcall
hlt
nop
repnz
push
inc
fstpt
lcall
cs
cltd
clc
shlb
mov
and
inc
mov
or
aad
aaa
cmpl
jp
cld
loop
xchg
imulb
cs
push
bnd
xchg
push
cmp
inc
int
sub
mov
clc
dec
sti
cli
out
sub
daa
in
add
dec
es
fwait
mov
mov
xor
cmp
push
adc
loope
outsb
aad
xor
push
inc
js
jae
mov
jns
lods
and
mov
and
out
sbb
sarb
call
imul
cmp
insb
mov
cmp
cmc
clc
push
fstpl
jno
lea
jno
jecxz
pop
dec
mov
mov
scas
cs
dec
and
sbb
xchg
andl
mov
iret
jmp
jle
or
stos
fistps
fwait
inc
loope
mov
and
pop
jbe
lds
into
mov
and
jo
mov
test
popl
shll
dec
add
dec
xor
dec
jl
jmp
xchg
adc
cmp
xchg
mov
or
sbb
or
xchg
iret
pop
pop
out
clc
push
or
mov
mov
inc
stos
ret
pop
jnp
mov
push
dec
fldl
ja
and
sti
push
xorb
std
xor
les
out
add
lea
cmp
and
shlb
mov
mov
imul
sub
jmp
cwtl
addb
aam
jmp
add
scas
cs
xor
mov
xchg
fists
mov
sbb
xor
ret
mov
inc
xchg
inc
xchg
ljmp
stos
adc
movsl
iret
or
xor
inc
or
jle
aad
xchg
addr16
dec
fwait
add
dec
sbb
mov
nop
xchg
hlt
push
ljmp
out
ret
in
push
xor
paddd
jle
or
scas
ret
or
and
dec
jl
stc
xlat
pop
inc
aas
iret
jnp
cmp
sub
xchg
dec
ret
add
loop
jl
add
cli
test
jmp
push
xchg
ds
add
test
sub
adc
loope
xor
mov
test
jg
les
sbb
lods
pop
hlt
jp
xor
mov
das
jnp
lahf
or
sub
into
fcompl
cltd
scas
cmc
adc
imul
xchg
movsb
xchg
loop
ss
cmp
ret
cwtl
shlb
push
xor
sub
adc
mov
cs
xlat
call
mov
insb
test
test
inc
fistpl
xor
jle
and
mov
addr16
dec
inc
xor
push
data16
repnz
es
aad
inc
test
push
cwtl
jmp
and
adc
cmp
push
sbb
sbb
push
mov
push
fadd
mov
cmpb
mov
into
repnz
and
push
enter
xor
push
movsl
cmpsl
aad
mov
arpl
inc
mov
push
mov
inc
gs
lret
jecxz
sub
enter
mov
movsl
sbb
imul
pop
out
lods
pop
mov
pop
out
adc
test
pop
lahf
icebp
push
fstpt
xchg
cmp
arpl
pop
mov
adc
dec
pop
sbb
sahf
mov
jmp
sbb
push
bound
ret
pop
daa
outsb
pop
rolb
jb
xor
std
adc
inc
inc
push
add
mov
dec
xchg
ja
or
nop
push
std
inc
in
sbb
or
rcr
sbb
scas
mov
test
jbe
dec
xlat
inc
lods
ja
iret
loop
insb
rorl
mov
dec
mov
fs
push
fdivr
hlt
out
mull
push
mov
ret
jp
and
outsl
scas
sub
fwait
pop
sub
cltd
push
test
andb
xchg
jg
sub
insl
out
stos
scas
ret
data16
push
dec
cltd
inc
xchg
pop
cmp
adc
inc
into
lock
mov
adc
sbb
mov
es
cmp
mov
subl
enter
repnz
popa
mov
ret
pusha
adc
addr16
jge
icebp
or
mov
jmp
fwait
add
sti
mov
ljmp
orl
jb
and
es
pop
enter
shll
out
mov
popa
adc
cmp
fwait
push
out
sbb
xchg
mov
push
movsb
adc
mov
gs
push
dec
mov
or
sbb
fs
ljmp
cmpsb
shl
push
xchg
push
add
lret
inc
xlat
lcall
dec
jl
incl
les
add
and
dec
jb
xor
int3
ret
xlat
push
ja
test
cld
ret
pop
dec
jbe
push
xor
cmp
inc
fstps
pop
gs
mov
push
andl
sub
std
mov
cs
clc
pop
cmp
insb
imul
mov
jg
les
mov
in
shlb
mov
sub
sub
mov
push
movsb
clc
add
and
adc
inc
push
mov
xchg
lret
ds
std
fimuls
mov
mov
adc
leave
sub
loop
inc
pusha
in
xor
jl
adc
inc
xchg
inc
sbb
in
inc
jmp
and
push
xorb
jp
orl
sub
push
dec
push
je
sbb
sbb
mov
pop
addr16
jmp
inc
mov
ljmp
adc
mov
jo
loopne
repz
dec
jmp
xor
jo
jae
mov
js
dec
cmp
aaa
xchg
lods
adc
rclb
or
in
rorl
cmp
add
and
or
fisubrs
push
and
xchg
addr16
loopne
fildll
mov
mov
mov
mov
cmp
repz
mov
imul
mov
sbb
mov
imul
sti
pop
push
jecxz
xor
in
jae
jg
inc
jg
pop
adc
push
sbb
cli
inc
mov
or
sarl
out
rcr
pop
lcall
hlt
lock
ss
lret
fsubrp
mov
mov
in
and
inc
cmpsl
cmc
push
cmpsb
ljmp
cmp
int
xchg
inc
loopne
inc
test
arpl
adc
andl
cld
or
jbe
cmpsb
push
fistpll
mov
and
mov
mov
lea
mov
or
les
pop
ds
mov
cmp
scas
fst
out
mov
cmp
jns
or
daa
test
in
sub
adc
aaa
pop
jnp
clc
test
sub
sbb
daa
int
bnd
push
cmpsb
shll
jno
hlt
push
sti
cs
in
cmpsb
xor
jnp
rclb
add
cmpb
mov
inc
and
mov
mov
les
nop
out
push
rol
loope
jb
mov
mov
loopne
mov
mov
xchg
jnp
xor
into
add
push
add
ret
loope
and
clc
and
test
notl
je
rolb
stos
jne
popa
into
ljmp
ss
daa
movsb
sbb
call
fsub
pop
jns
test
scas
scas
testl
sahf
or
fstl
sti
mov
pop
sbb
xor
xor
mov
push
imul
inc
out
and
cmp
jne
fisubrl
dec
jnp
jle
and
xchg
clc
subl
mov
or
cmp
pop
lds
das
inc
add
decb
sahf
mov
xor
jno
jg
cmpsl
cmp
and
sbb
mov
push
testl
aas
add
mov
movl
xchg
jnp
dec
inc
mov
out
xchg
out
push
cmp
xorl
mov
adc
ja
mov
xor
test
mov
shlb
mov
rcl
sahf
xchg
mov
add
int
cs
mov
push
mov
sbb
cmpsl
mov
mov
cmp
push
scas
mov
mov
mov
lahf
stc
aam
mov
imul
shll
or
sar
and
and
mov
out
cmp
jmp
xlat
fucomp
mov
add
leave
dec
mov
push
mov
fcoml
mov
fcomip
pop
inc
sub
stos
icebp
loop
mov
shrb
and
repz
mov
dec
push
xchg
bound
xchg
jne
test
ljmp
pushl
sub
rorb
lahf
loop
dec
adc
cmp
mov
shlb
lcall
insb
aam
cmp
test
push
repz
cmpsl
es
or
sbb
cmp
sbb
xchg
pop
or
jge
cli
xchg
fisubs
sbb
mov
or
dec
js
mov
shlb
aam
jb
fildll
add
mov
xchg
enter
dec
jbe
jmp
out
cmpsb
fstpt
je
mov
push
jge
dec
fdivp
cmp
jbe
push
xchg
es
shll
fcoml
je
add
xchg
xor
mov
aam
in
adc
adc
or
push
imul
inc
jl
aaa
mov
cli
into
mov
in
adc
push
push
push
xor
dec
outsl
adc
roll
iret
adcb
fldenv
std
add
cmp
fiadds
out
mov
and
insl
roll
or
add
notb
push
hlt
pop
test
jecxz
jmp
jmp
pop
cmp
xchg
push
icebp
ret
sub
sbb
test
xchg
jle,pt
add
lahf
rcrl
xchg
xchg
movsb
and
dec
jge
pop
sub
or
pop
add
cmp
lcall
mov
and
cwtl
jnp
xor
movb
fistps
push
push
cmp
and
xor
xor
xorl
shr
jge
jmp
test
push
cmpsl
sbb
lods
or
iret
xor
push
sti
cwtl
and
jp,pt
adc
shr
insl
into
outsl
je
xor
fdivs
jbe
cmp
add
xchg
push
adc
and
lcall
mov
push
push
lret
outsb
je
mov
sub
icebp
pop
pop
stos
mov
popa
jb
push
jne
xor
cmpsb
mov
js
clc
pop
sub
test
xchg
adc
cmpsb
jae
daa
lods
jns
in
aaa
fsubr
add
xchg
out
in
jp
jne
inc
mov
mov
cwtl
insl
and
das
mov
bound
cmpsl
or
pop
cmp
rcll
pop
xor
shrb
icebp
movsb
mov
sbb
rorl
or
pop
pop
xorb
jnp
add
in
or
stc
xor
or
gs
sub
and
jg
sub
adc
xchg
stc
das
lods
shrl
jmp
push
mov
int3
mov
mov
push
dec
push
mov
push
lods
es
lret
and
ficoms
movsl
into
push
out
addr16
push
mov
mov
or
nop
jg
cmp
xor
loope
pop
dec
aas
imul
mov
mov
dec
rcrb
mov
scas
xor
jl
enter
stos
pop
add
xchg
into
out
mov
ljmp
scas
push
dec
addr16
outsl
lahf
jmp
ljmp
pop
ds
icebp
pop
or
sahf
lea
je
std
les
repz
fisttpl
sbb
call
jmp
xchg
call
hlt
pop
loop
scas
lcall
int
jl
sub
lods
adc
jnp
sbb
jne
sbbb
jge
jne
cmp
dec
dec
mov
jp
or
push
or
xchg
adcl
sbb
loope
sbb
lds
icebp
mov
inc
adc
int
or
xor
push
les
scas
jecxz
jae
mov
pop
movsl
int3
dec
xchg
xchg
lods
test
in
jp
gs
fimull
jecxz
pusha
mov
inc
icebp
int
jle
scas
jg
cmp
sub
mov
pop
in
push
sub
lahf
lock
mov
clc
ret
pmaxsw
ret
aaa
in
pop
stc
adc
and
and
or
mov
outsb
popa
push
and
lret
inc
fxch
loop
mov
jmp
aas
stos
jl
jne
repz
mov
mov
xor
sub
push
xor
popa
jle
pusha
nop
push
cwtl
push
push
fadd
jno
push
dec
sub
lret
xchg
fadds
cmpsb
loopne
clc
jg
jle
enter
lret
push
lret
mov
mov
xor
enter
outsl
xchg
jg
jge
cs
sub
jecxz,pt
pop
pop
sbb
pop
rorb
ljmp
push
fcmovbe
scas
sub
push
rorl
xor
fstpl
pop
fnstenv
out
jge
xor
pop
movsb
push
imul
sub
sbb
fidivl
inc
push
pop
or
mov
xchg
pop
xlat
xor
inc
dec
sar
pushf
push
out
andb
xchg
dec
pop
push
xchg
adc
push
out
daa
mov
mov
scas
nop
mov
cmp
addb
leave
jmp
xchg
inc
xchg
or
and
push
fistpl
adcb
sbb
add
jmp
adc
sub
popf
test
push
push
mov
pop
test
aaa
mov
and
stos
test
dec
fucomp
repnz
sub
mov
arpl
push
mov
jmp
repnz
sub
cli
inc
mov
ja
jmp
push
cmp
push
add
in
dec
and
pop
lahf
lahf
stos
insb
sti
lods
pusha
adc
add
fnstcw
lods
movsb
mov
sub
adc
pop
cltd
cmpb
cmp
inc
loop
lds
sbbl
dec
add
xchg
sub
fmull
sti
inc
mov
mov
dec
mov
pop
add
test
fsts
in
xchg
sbb
push
push
push
in
adc
loop
gs
pushf
je
jge
or
les
mov
dec
pop
in
xchg
push
xor
jg
sub
add
outsb
enter
cli
push
adc
pop
pop
test
shll
mov
popa
out
arpl
fistpll
sbb
push
mov
pop
adc
fcompl
rorb
cmc
ljmp
cmp
call
aas
jge
push
cld
pop
push
sbb
jns
xchg
jo
push
pop
sbb
js
jmp
xlat
or
push
jecxz
push
cli
sbb
push
pop
inc
fnstcw
inc
lods
dec
dec
pop
mov
insb
ds
xor
adc
and
xor
xchg
cwtl
jb
xor
arpl
test
je
out
adc
dec
stc
stc
incb
adc
jnp
cltd
jno
sbb
sti
mov
cmp
xor
mov
adc
test
sub
clc
sub
sahf
subb
or
fwait
lcall
mov
movsb
cs
pop
shl
push
adc
pop
subb
shll
pop
pop
jl
clc
inc
and
lods
sub
sub
mov
inc
enter
in
xchg
and
sbb
dec
jo
addr16
mov
loopne
mov
or
out
std
xchg
mov
inc
lret
ret
dec
add
mov
add
pop
lcall
and
jmp
inc
pop
out
push
pop
std
or
insl
enter
in
out
xchg
mov
jmp
orb
cmpsl
bound
mov
pop
das
cmpsb
adc
test
stos
push
push
gs
jne
jb
in
pop
mov
jge
cmpsl
mov
push
iret
out
dec
ljmp
outsl
jns
mov
mov
in
and
inc
stos
cmp
and
pop
sbb
ret
jmp
imul
scas
lock
aaa
jl
lods
or
jge
into
cmp
test
std
test
lcall
pop
add
mov
jmp
add
pop
or
xorb
push
inc
push
mov
into
pop
push
mov
xchg
push
out
in
shll
push
movsl
int
mov
pop
sbb
or
jns
xor
repnz
sub
add
fidivl
dec
adc
mov
push
sbb
mov
lcall
testb
xor
test
and
jge
pop
mov
push
cmpb
insb
inc
inc
sbb
sarl
inc
scas
push
test
sbb
ret
imulb
je
mov
add
xor
adc
cld
inc
mov
bswap
sbb
xorl
adc
inc
stos
sbb
adc
mov
and
fistps
mov
out
push
pop
cmp
lcall
in
jne
sub
pop
xchg
jns
sbbb
xor
dec
push
jo
push
add
mov
xchg
cs
adcb
sti
xchg
push
and
jns
and
xchg
push
pop
cmp
push
pop
fnsave
adc
and
imul
test
stc
movb
sahf
in
pop
sbb
xorb
add
aaa
and
fnsave
into
ficompl
push
dec
loop
inc
pop
ja
sbb
data16
mov
sub
cmpsl
adc
mov
andb
sarl
ds
mov
dec
push
pop
pop
xchg
les
sub
ja
fcom
lds
loop
outsl
sub
and
sub
xchg
cmp
in
test
mov
xchg
cmpw
outsb
in
xlat
push
jb
stc
leave
xor
xor
fwait
imul
lahf
out
addr16
test
dec
cmp
call
and
fadds
popf
mov
mov
mov
ja
shrb
mov
xchg
push
loope
or
pop
jb
pop
lock
arpl
rcl
xchg
jge
lock
xorl
repnz
dec
insl
mov
xchg
sbb
stos
adc
stos
cmp
push
or
mov
add
push
loop
xlat
jno
add
fwait
inc
jno
push
loope
jno
idivb
inc
clc
cmpb
mov
inc
jnp
mov
out
cmp
fwait
sub
imul
out
sub
dec
mov
push
mov
lret
jmp
jb
dec
roll
xor
jno
outsb
xchg
mov
mov
das
push
aam
icebp
or
push
cld
rcl
and
push
inc
and
inc
jmp
mov
fistpl
mov
push
jno
mov
in
sub
rcrl
mov
sbb
pop
outsl
xchg
adc
cs
and
xchg
clc
out
leave
aam
nop
insl
inc
enter
nop
mov
ret
mov
movsb
jl
pop
jp
dec
enter
xor
pushf
gs
daa
or
sbb
cmpl
pop
push
mov
sub
pop
cmc
adc
adc
loop
cmp
or
int3
jecxz
sbb
pop
or
lock
call
pop
cs
add
mov
movsb
fsubrs
cmpl
xchg
lcall
leave
mov
mov
jnp
or
or
pop
xlat
stc
in
sbb
ss
lret
or
inc
mov
cmp
sub
sub
testl
inc
inc
stos
hlt
cs
into
shlb
testb
adc
or
jnp
fisttps
loopne
mov
cli
test
xor
lret
mov
lcall
adc
out
cmp
addr16
sahf
sub
add
sbb
jo
xor
cwtl
xchg
adcb
jno
mov
cltd
cmp
sbb
or
js
ffree
mov
cld
into
mov
pop
dec
dec
push
pop
lcall
jbe
mov
push
popa
add
fistps
jp
adc
hlt
mov
cmp
sub
decb
imul
xor
loop
sub
mov
outsl
aaa
adc
fstp
in
mov
sub
aad
dec
push
dec
lcall
stc
outsl
call
mov
hlt
bound
mov
into
mov
dec
mov
mov
fs
and
cmp
lahf
push
xor
push
push
sub
test
es
pop
mov
sub
pop
cmp
aas
jge
fsts
loopne
pop
pop
pop
fsts
jae
hlt
adc
sahf
popf
sbb
jno
arpl
std
adc
sub
leave
inc
cmp
in
sarb
mov
fistpl
jge
xor
repz
pop
mov
repz
mov
arpl
daa
je
lock
and
xlat
mov
sbb
add
sub
xchg
jb
fdivs
outsb
pop
int
into
pushf
inc
fadds
dec
in
jno
fs
sub
mov
jle
mov
imul
stos
jmp
cmc
addr16
push
cmpsl
jns
in
lods
out
sbb
cs
xor
pop
cmpsl
xor
adc
aam
and
loopne
mov
jo
mov
fsub
push
vpmullw
push
or
lret
sub
lods
imul
sbbl
filds
xor
mov
xchg
test
les
mov
into
xchg
ja
lahf
and
mov
sbb
inc
xchg
sarb
faddl
loope
pop
test
leave
adc
ljmp
cmp
sub
mov
je
popl
jnp
sbb
and
fstl
sbb
inc
or
fisubrs
fs
lret
frstor
mov
push
rol
loopne
test
jmp
adc
adc
les
xor
mov
adc
lods
add
inc
jo
aas
inc
add
fstpt
aad
sub
dec
sbb
push
dec
add
enter
lock
push
aas
jg
cmp
cmp
cmpl
and
aad
into
inc
and
jo
jbe
add
add
cmp
jnp
pop
cmp
mov
mov
sti
cltd
test
orb
push
cmpsl
xor
std
ret
and
cwtl
cli
dec
sbb
cmpsl
loop
leave
pop
lret
jl
in
std
in
jecxz
xor
pop
icebp
imul
jno
or
out
lods
push
push
add
push
pop
fcoml
les
mov
push
lret
or
movsl
ljmp
mov
xchg
pop
iret
add
lds
scas
je
adc
ds
sbb
lret
popf
or
cmpsb
icebp
ja
dec
jmp
lret
mov
sub
pop
aas
mov
cmp
rol
insl
pop
daa
mov
or
in
iret
pop
jge
clc
lea
out
xchg
stc
push
add
cmp
in
out
ret
lcall
jbe
xor
enter
leave
stc
jge
sub
mov
jno
mov
cmp
xor
mov
jne
mov
inc
sbbl
leave
jmp
sbb
frstor
sbb
pushf
dec
jne
mov
adc
lods
push
hlt
inc
cwtl
popf
jle
sub
imul
xchg
mov
and
xor
test
xchg
or
xor
cmpl
sub
jle
out
cwtl
pop
inc
cmc
mov
xor
add
pop
sub
sbb
xchg
push
cmp
aas
add
sbb
add
scas
les
int
push
sub
test
mov
cmp
and
or
insl
push
fiadds
arpl
mov
aad
fcmovnbe
mov
inc
mov
js
aam
mov
mov
loop
cmp
loop
std
jb
or
dec
cltd
fwait
inc
repnz
jmp
xchg
mov
repz
int
push
lock
adc
scas
mov
sbb
les
mov
xchg
js
xor
js
lea
sahf
in
into
fistpl
dec
cmc
aad
and
and
das
sbb
jmp
inc
mov
addr16
cmpsl
xchg
popf
out
xorl
xor
xchg
sbb
cmp
xor
sbb
mov
popa
xchg
mov
fxch
psubusb
xor
xchg
xor
insb
xchg
ja
out
enter
jge
ret
insb
and
xor
andl
nop
pop
fstpt
mov
and
mov
in
xchg
fsubs
inc
adc
fsubrs
xchg
and
icebp
xchg
fwait
aas
jle
cmp
jmp
lds
test
or
add
jl
xchg
test
repz
insl
mov
and
mov
lock
scas
int3
lret
fs
pushf
repz
mov
xchg
pop
adc
rol
cmp
and
jnp
dec
adc
cwtl
out
xlat
sarb
ds
xor
daa
push
jns
test
loope
mov
cmpsl
cmp
or
mull
push
inc
insl
adc
sbb
bound
mov
sahf
sbb
adc
pop
aas
and
push
push
adc
mov
jle
push
fsts
push
decb
testb
lock
lahf
and
mov
mov
les
cmp
add
jno
mov
sti
mov
leave
das
xchg
sbbl
roll
popf
xchg
or
fdivs
push
lods
pop
mov
jns
adc
imulb
inc
scas
xchg
xchg
sbb
inc
and
pop
cwtl
int
cltd
cmp
adc
sub
adc
ss
ret
mov
in
inc
xor
adc
mov
mov
dec
sbb
inc
insl
int
add
mov
add
sub
mov
mov
adc
or
sub
lock
fadds
insb
sbb
lcall
inc
sbbl
mov
mov
xchg
imul
pop
jmp
xchg
xor
and
add
dec
or
lock
in
imul
cmc
adc
dec
cmp
mov
lea
fstpl
imul
loope
jbe
fildl
fmull
scas
push
out
repz
insb
mov
lods
jnp
fnsave
xchg
into
andb
pusha
or
ss
arpl
adc
ja
imul
mov
enter
pusha
add
xor
mov
movb
xor
not
cmp
xchg
dec
out
mov
ret
out
pop
jbe
and
lods
inc
pop
adc
std
pusha
sbb
aaa
aaa
sub
in
dec
push
bound
into
sub
inc
push
aad
data16
push
std
ja
fwait
sbb
push
dec
push
push
int
xchg
fwait
fwait
or
fs
lea
mov
fsubs
in
jg
xor
movsl
movsb
loop
cmp
into
xchg
cwtl
out
mov
loop
cmp
inc
mov
pop
inc
xor
sub
arpl
and
dec
lret
aad
sub
lahf
dec
inc
daa
mov
inc
xor
fs
out
out
mov
es
jb
and
lock
mov
shlb
jno
nop
movl
add
adc
andl
mov
jl
or
bound
rclb
or
sub
inc
in
mov
push
out
popf
fstps
out
mov
ss
mov
decb
fstpt
xchg
pop
outsl
xchg
mov
add
lret
fisttps
and
shll
and
int
loop
arpl
adc
outsb
in
pusha
sub
rcr
mov
rcl
shrl
jmp
jns
ss
xor
or
xchg
sub
orl
div
push
testl
dec
pop
pop
pop
shll
and
punpckhdq
imull
and
outsb
jmp
mov
mov
cmp
arpl
dec
sarl
inc
call
and
das
insl
daa
push
daa
imul
jo
imul
adc
and
ja
je
adc
cld
inc
mov
ret
sub
arpl
mov
mov
xor
sbb
lcallw
sbb
outsb
xchg
rcrb
les
adc
jnp
push
das
call
inc
aad
pusha
test
xor
sub
push
or
repz
aam
xchg
jne
cltd
aam
and
add
adc
push
test
dec
and
sbb
imul
cs
add
iret
push
cmpsb
cltd
ret
fst
insb
and
ret
cmp
adc
sub
push
in
jmp
or
push
mov
xchg
in
jo
mov
enter
and
inc
push
fsub
cld
pop
sub
adc
daa
push
sub
adc
or
jo
xchg
mov
mov
mov
adc
idivl
repz
lea
sub
repnz
in
and
out
gs
repz
mov
repz
shll
in
mov
push
push
into
std
add
push
mov
xchg
insl
sti
cmp
fwait
stc
cmc
cmp
push
sub
mov
xchg
ss
data16
add
gs
dec
xchg
jns
lret
dec
ret
fld
cwtl
mov
inc
out
mov
imul
aad
jae
cltd
mov
fabs
mov
nop
sahf
jb
cmp
jmp
sbb
adc
pop
gs
shl
lea
scas
xlat
fld
cld
xor
cmp
cwtl
mov
sub
nop
mov
push
and
cmp
call
and
arpl
xlat
cmc
stos
and
dec
mov
push
jae
jle
imul
fldenv
inc
lret
cltd
pop
sbb
icebp
enter
in
push
pop
shll
jle
inc
in
dec
icebp
xchg
mov
push
je
pop
andb
pusha
in
into
sbb
dec
jge
cmpsb
mov
adc
jge
loopne
rclb
les
insl
gs
in
mov
mov
adc
inc
nop
mov
mov
shlb
pop
pop
or
mov
cs
scas
jno
inc
ret
xlat
push
gs
and
jae
data16
jno
xor
adc
pop
rcr
xchg
or
sub
je
inc
fsubrl
in
and
cld
add
in
shl
repz
adc
push
mov
stos
imulb
pop
cmpsl
repz
mov
xor
movsb
cmp
lods
popf
mov
icebp
inc
inc
cli
hlt
out
jecxz
clc
mov
mov
cmp
add
pop
sbb
sti
pusha
ds
pop
mov
clc
mov
mov
push
mov
inc
mov
dec
pop
xchg
mov
sbb
shlb
rcr
sbb
cmpsl
hlt
xchg
mov
mov
sbb
out
xor
push
add
cwtl
mov
les
mov
add
mov
xor
ds
jb
repnz
int3
js
je
scas
push
ret
or
and
xchg
enter
mov
jg
dec
sbb
cmpsb
pop
pop
dec
data16
and
aam
add
jns
leave
and
addb
or
pop
outsl
call
add
mov
cmp
mov
pop
int3
add
notb
lahf
xor
scas
add
push
mov
adc
jo
pusha
cmp
or
xorb
push
andl
sarl
adc
xchg
in
enter
inc
jg
jnp
jne
xchg
cwtl
ss
insb
daa
jno
mov
imul
push
add
jl
bound
rorb
ss
xor
dec
popa
mov
or
imul
ds
mov
sub
dec
add
hlt
xchg
fistpl
push
scas
cs
mov
arpl
and
cmc
xchg
dec
pop
xchg
cld
daa
xor
push
icebp
lret
dec
ljmp
bound
add
mov
jle
or
fistps
fadd
add
xchg
fidivs
es
ret
jb
pop
div
and
inc
lods
lcall
das
insl
push
imul
mov
inc
mov
add
mov
cld
outsb
lds
sub
fdivrp
mov
jle
rol
add
in
scas
xorl
inc
test
push
std
aam
sub
js
stos
xor
out
outsl
lods
mov
out
movsl
mov
test
in
repnz
inc
decb
sub
and
add
sarb
andb
jns
sub
mov
pushf
dec
test
out
ds
in
mov
adc
lock
add
inc
push
or
subb
jb
test
mov
push
pop
push
xchg
pop
sub
xchg
test
sbb
mov
xor
mov
pop
test
lahf
mov
push
sub
daa
jbe
cltd
iret
movsb
aaa
mov
xor
into
mov
cmovnp
leave
push
mov
cli
lahf
aad
xor
out
or
test
stos
and
test
aad
mov
stos
mov
cmpsb
pop
jns
and
dec
ss
mov
outsb
enter
mov
rcll
adc
fmuls
in
jae
lcall
push
js
outsb
add
out
dec
add
outsb
dec
mov
je
movsl
jns
sbb
nop
and
enter
subl
loop
lock
cwtl
mov
xchg
ret
sbb
aam
push
xor
push
xchg
jbe
jb
shrl
test
xor
outsl
add
ja
fdivrs
or
push
iret
jnp
or
jge
xchg
dec
jmp
add
sarb
mov
aam
idivl
jbe
mov
mov
cmp
push
pop
or
rcr
jnp
test
lahf
icebp
into
push
popa
aaa
repnz
fisttpll
dec
les
mov
ret
adc
mov
inc
out
mov
cmpsb
mov
xor
add
mov
cmp
mov
push
sbb
lret
ret
pop
or
popl
cmp
stos
cmp
pop
jmp
lock
data16
mov
inc
lea
mov
out
xchg
sahf
lret
mov
loopne
jge
push
jp
out
repnz
sbb
mov
or
pushf
fwait
or
daa
mov
cmpl
test
mov
ja
arpl
cmp
pop
mov
push
jl
mov
pop
add
jns
ds
fs
popf
aas
hlt
lcall
xor
and
clc
xchg
imul
fistpl
inc
xchg
add
pop
sbb
outsl
or
push
xchg
xchg
ss
inc
add
popa
push
ret
pusha
xchg
popf
cld
notl
mov
mov
lcall
dec
into
in
out
mov
rorl
dec
test
push
std
inc
xchg
pop
jnp
popa
inc
outsl
js
mov
movsb
jnp
xchg
aam
sbb
cmc
mov
jns
sub
add
hlt
aaa
jle
xor
enter
mov
sbb
inc
push
sbb
sbb
lods
adc
rcr
popf
lret
adc
xor
mov
dec
repnz
adc
popa
sarl
in
xchg
movsl
jp
fsts
iret
ret
xchg
push
cmp
jno
mov
mov
sbb
mov
fstpt
pop
xor
cld
aaa
mov
test
ret
test
mov
scas
pop
adc
sti
sub
xor
movsl
sbb
fisttps
xchg
mov
sub
mov
adc
dec
repz
roll
and
jns
sub
push
sub
mov
adc
lds
mov
jae
push
jb
mov
scas
mov
js
cld
int3
or
es
lds
dec
clc
xchg
cmp
and
ss
sti
xor
fisubrs
add
fsubl
cs
outsb
push
mov
pop
mov
int3
imul
ds
xchg
js
ds
dec
call
and
xor
int
repnz
push
icebp
jge
inc
scas
movl
cmp
xchg
das
xor
sbb
pop
push
lret
sub
mov
and
jmp
fcompl
add
mov
enter
jg
inc
add
pop
mov
mov
aam
int
shlb
jo
sbb
add
fcmove
repz
sarb
pusha
test
cmpsl
mov
push
push
mov
jg
dec
pop
lcall
mov
or
sub
lods
pop
fisubl
scas
push
jp
fisttpl
cmp
mov
sbb
mov
enter
lds
fs
loop
and
repnz
stc
adc
add
movsl
pop
mov
test
test
sub
xlat
mov
popa
sub
mov
mov
sub
jge
fstps
xor
dec
rcrl
cmpb
jg
mov
lea
mov
cmp
scas
fsub
mov
jg
dec
insl
push
hlt
cmp
mov
push
mov
stc
mov
ret
xchg
fldl
mov
sub
inc
add
notb
mov
aaa
aas
pop
in
jo
cmp
xchg
mov
adc
mov
inc
or
sti
cld
dec
mov
sbb
push
mov
xor
adc
xor
in
mov
cmp
jg
dec
pop
sub
movsb
jb
mov
jmp
xchg
scas
lahf
nop
jo
sbb
pop
dec
fimull
daa
xlat
test
cmp
and
ds
xor
add
leave
fmuls
pusha
mov
adc
and
inc
aaa
shlb
ret
inc
loop
mov
cmp
repnz
sub
pusha
movsl
stos
or
bswap
inc
adc
cli
js
mov
sti
or
aaa
inc
ss
cwtl
xchg
add
les
sub
dec
icebp
add
adcl
divb
rcrl
insb
xchg
mov
pop
add
repz
adc
xchg
mov
movsb
adc
add
subl
push
mov
jp
test
xchg
xor
pop
or
dec
pusha
add
lcall
jb
aam
mov
fdivrs
push
in
lret
jg
notb
stos
or
jge
push
add
cwtl
cmpsb
mov
and
out
shlb
in
push
adcl
das
ss
mov
test
sub
adc
dec
jle
jne
or
jae
movsl
cmp
ret
icebp
imul
inc
dec
repz
inc
mulb
in
cwtl
or
icebp
xchg
out
dec
mov
loope
mov
scas
outsb
int
cltd
fs
int
adc
push
adcb
or
cwtl
les
in
mov
inc
mov
mov
leave
or
stos
nop
cli
addr16
int
mov
or
or
jne
push
xchg
clc
sti
fnstenv
lods
icebp
pushf
pop
shll
pop
mov
mov
icebp
mov
subb
in
outsl
sti
in
adc
movsb
mov
inc
mov
push
xchg
gs
jge
in
mov
out
mov
js
push
push
jno
sub
mov
scas
lret
push
pop
mov
mov
xlat
push
std
or
je
mov
stc
adc
lods
pushf
mov
jae
sti
pushf
cmpsl
or
pop
jg
add
rcll
dec
test
mov
cmp
mov
faddl
and
pop
out
pop
stos
push
lods
pop
lea
dec
dec
or
loopne
xor
push
xchg
inc
dec
push
xchg
por
mov
insb
jle
popf
popa
and
lock
ljmp
jns
inc
push
jge
in
ss
in
sahf
push
add
int
cmpsl
sbb
push
push
pop
push
or
mov
push
xor
jno
insl
cmp
push
pop
push
dec
fcoml
fsts
cmp
jl
pop
push
pop
lds
cmp
jno
movsl
stc
mov
loop
outsb
daa
fwait
push
jl
lds
cmpsb
jbe
repz
push
lahf
lcall
sbb
test
lds
add
fsubp
pop
ret
pop
les
cmp
mov
rol
in
mov
add
inc
dec
lock
jns
fs
sbb
xor
pop
and
std
test
push
push
mov
xchg
clc
pop
adc
insl
pusha
rcrb
xor
inc
mov
loop
fistl
shlb
pop
xor
xor
in
mov
inc
lods
sub
sbb
lret
adc
mov
ss
or
xorl
inc
fstl
lcall
nop
add
jo
shrl
adc
fdiv
pop
xchg
out
jl
mov
sbb
mov
lods
movsl
xchg
fwait
mov
std
scas
cmpsb
xchg
imul
push
sbb
jmp
int
mov
dec
jns
shrl
je
mov
mov
out
cld
mov
mov
mov
push
inc
dec
in
stc
test
and
pop
std
lcall
fimull
push
pop
push
cmpb
jge
mov
cmp
fs
push
lret
je
in
into
mov
lahf
lods
icebp
push
jecxz
xlat
lea
and
fxch
cs
jne
imul
mov
pop
mov
cmp
repz
adc
adc
jle
xor
out
gs
dec
bound
push
lock
add
movsl
adc
loope
or
mov
sbb
mov
mov
in
daa
fdivl
icebp
out
les
mov
divb
fdivl
pop
fcom
or
add
in
pop
loopne
pop
test
push
jp
inc
repz
xchg
pusha
lret
and
cld
push
inc
js
inc
inc
testl
icebp
ljmp
pushf
jecxz
das
and
push
jo
test
mov
sub
out
out
movsb
and
ret
sbb
iret
cwtl
repnz
jecxz
inc
mov
mov
cmp
sti
orl
and
mov
aad
inc
push
test
aad
mov
rolb
int3
ljmp
fsts
inc
testl
or
sahf
pushf
xor
gs
cmpsb
push
mov
pushf
jne
lcall
sub
adc
xor
push
mov
adc
dec
int3
push
cwtl
lcall
jle
roll
mov
xor
xchg
jo
or
loope
or
or
mov
decl
vunpckhpd
pop
loope
dec
lcall
clc
cltd
rclb
sub
outsl
add
cli
andl
inc
sub
into
or
loopne
add
jg
sub
lock
push
cld
cwtl
sub
mov
test
mov
mov
out
int3
arpl
fdivs
inc
push
fadds
push
adc
xor
cmp
loope
add
or
ds
ds
sub
aam
imul
pusha
inc
push
jnp
daa
pusha
das
daa
xchg
loop
sahf
movsl
ljmp
xchg
dec
jb
xorb
test
int3
insl
aam
ret
jge
adc
repz
push
mov
loope
mov
push
std
imul
dec
clc
jle
or
int
sub
mov
pop
xor
int
pushf
outsb
add
mov
arpl
jmp
ficompl
roll
ljmp
nop
pop
out
sub
mov
test
lods
or
mov
loopne
xor
clc
lods
enter
inc
test
and
mov
call
hlt
add
xor
mov
sti
lea
xor
mov
clc
std
push
in
mov
sbb
lret
scas
xor
loopne
add
xchg
jecxz
test
or
dec
cmp
dec
stos
push
and
aas
pop
jbe
movsb
pop
neg
bnd
mov
jecxz
fbld
mov
imul
cmp
pop
xchg
push
movsl
dec
mov
mov
push
int
adc
pop
cltd
inc
pop
sbb
mov
or
pusha
mov
and
dec
and
lock
xchg
cld
nop
and
xor
mov
aam
add
adc
fnstsw
mov
xor
aam
sahf
xchg
sub
lods
dec
or
pop
sbbl
test
cmp
mov
clc
out
pop
adc
cmp
xchg
mov
and
jmp
and
push
in
mov
adc
jno
pop
bound
lods
inc
mov
hlt
mov
dec
add
cmp
or
sbb
sbb
divl
adcl
xchg
xor
mov
ficomps
pop
jl
mov
mul
pop
mov
xchg
lods
es
jne
dec
sbb
into
leave
imull
pop
cld
lcall
push
pop
adc
rorb
popf
sbb
xor
lcall
fs
adc
cli
popf
cmp
mov
mov
xor
push
sub
shr
cmp
sar
pop
mov
or
push
cli
sbb
xor
mov
ljmp
cmp
fwait
inc
sti
dec
xchg
jp
push
std
fdivs
jb
mov
xchg
xor
stos
pop
aam
push
sub
mov
push
jmp
cmpsb
or
ret
fsubl
cmp
mov
jno
cli
into
mov
loopne
nop
xchg
fwait
cld
pop
sbb
inc
pop
je
sahf
arpl
push
or
stos
push
push
ljmp
dec
cmp
in
jno
cmp
jge
xor
in
nop
scas
xor
popf
pop
cli
cmpsl
pop
inc
aam
mov
pusha
mov
adc
inc
and
loop
aam
pop
push
xchg
mov
xor
cmp
dec
int3
add
push
pop
fcoml
pop
in
pop
mov
daa
int3
pushf
add
mov
or
pop
or
pop
icebp
popa
pop
stc
dec
movsb
flds
popf
and
jg
adc
and
test
aam
ss
imul
xor
push
jge
divl
or
sbb
or
xchg
mov
xchg
divb
rorl
ret
mov
iret
mov
xor
mov
jecxz
imul
stos
jno
loopne
xchg
inc
ret
lds
roll
push
movsl
aas
sti
jo
mov
mov
cmc
and
sub
ret
cs
mov
lahf
mov
shl
xchg
mov
sbb
loope
sub
lods
jne
fmul
sub
aad
movl
mov
or
mov
aaa
addr16
std
xchg
jo
mov
push
push
rcrl
jp
pop
std
dec
cmc
out
mov
popa
inc
dec
xor
xchg
inc
jnp
sbb
mov
adc
or
inc
inc
lret
mov
dec
rorl
mov
jl
cmp
mov
call
insl
adc
mov
xchg
cmp
xchg
or
in
jb
and
add
push
adc
loopne
sbbl
fildll
and
pop
repnz
push
cld
imul
mov
xlat
cltd
pop
mov
mov
fs
pop
mov
stos
ljmp
mov
xchg
cs
dec
dec
or
or
sarb
dec
dec
movsb
jne
in
mov
cltd
in
jle
and
mov
fwait
pop
mov
xor
cmp
pop
jb
jns
push
outsb
or
mov
stc
pop
xchg
rcl
ret
cmp
roll
and
gs
add
ljmp
popa
outsb
out
into
pop
push
cld
mov
arpl
mov
push
fidivrs
arpl
incl
push
leave
mov
sbb
push
xor
pop
and
data16
jns
nop
nop
lock
test
shrb
out
mov
xchg
jecxz
mov
bound
mov
dec
mov
add
inc
nop
aas
mov
rcll
dec
xchg
scas
push
xchg
in
or
fldenv
outsl
mov
jecxz
inc
pop
sub
dec
rcrb
into
cli
or
mov
xchg
sbb
lret
lds
pop
mov
jmp
cmp
jmp
orl
push
ret
jns
add
mov
bound
fistps
aas
xchg
into
sbb
mov
sbb
cwtl
mov
pop
cli
outsb
xchg
mov
lahf
loopne
andb
xlat
mov
iret
mov
cli
cmp
xor
out
stos
sbb
and
mov
adc
test
mov
aaa
iret
ja
add
adc
or
mov
mov
jo
mov
ja
cli
scas
popa
mov
dec
inc
cmp
sub
outsl
pop
test
fs
es
mov
adc
fdivrp
nop
and
mov
dec
jbe
sbb
jp
stos
push
dec
push
into
mov
and
and
bound
mov
xor
leave
nopl
push
insb
nop
sbb
and
popf
movsl
pop
add
fstpt
aad
fnstcw
fisubs
ljmp
lea
ja
hlt
mov
push
inc
or
push
cmc
jmp
push
dec
fdivrl
sbb
sub
cmp
daa
add
and
sbb
rorl
push
mov
mov
addb
loopne
popa
out
stos
or
aas
das
sbb
into
jae
jne
mov
xlat
xchg
shlb
add
popf
dec
adc
bound
mov
insl
pop
loop
pop
rolb
and
mov
push
hlt
sub
xor
sbb
mov
xor
loop
daa
mov
xor
add
dec
sbb
data16
jnp
cltd
pop
cmp
loope
movsb
jae
adc
ss
inc
add
inc
sbb
sbb
enter
xlat
dec
shlb
xor
mov
cmpsl
push
out
into
xchg
inc
loopne
push
sub
addr16
push
push
cmpsb
mov
pop
sbb
mov
dec
cmp
nop
je
out
sbb
sbb
stos
insl
xchg
sbb
lods
rcrl
enter
in
icebp
popa
leave
loope
bswap
or
pop
out
imul
adc
stos
mov
xchg
pop
or
mov
mov
mov
cli
mov
lcall
imul
xchg
in
jno
sub
fadds
pop
sub
adc
xchg
pushf
push
mov
adc
xor
data16
pop
push
push
aaa
shrl
mov
push
mov
xchg
mov
test
divb
cmc
adcb
mov
cli
repz
xor
inc
addr16
idiv
sbb
lret
pop
jp
mov
in
stos
dec
and
icebp
cmp
add
std
pop
dec
mov
pop
adc
ret
pusha
push
jbe
xor
pushf
jge
mov
sub
shlb
fsubrs
das
in
repnz
jl
mov
loop
mov
cmpsl
adc
sahf
add
mov
leave
pop
cmc
push
adc
jecxz
mov
imul
pop
fs
imul
ds
xchg
imul
test
mov
mov
mov
add
sbb
movsb
mov
mov
mov
sbb
xchg
jp
ss
sub
lcall
adcb
ss
and
xchg
test
rcl
push
fs
cmpsb
cmp
pusha
pop
xorps
adc
push
test
ss
mov
std
fdivrs
or
out
roll
cmp
inc
mov
jp
shlb
les
cmpsl
mov
dec
repnz
mov
add
and
mov
inc
out
dec
pushf
pop
out
stos
lret
push
movsl
or
fstpt
push
dec
or
cmp
movsb
je
stos
jno
rcl
mov
addb
dec
push
push
cmpsl
inc
lahf
leave
into
hlt
mov
jp
add
pop
fmull
mov
mov
rcrl
jmp
jb
mov
adc
mov
inc
jnp
jb
pop
enter
ds
setge
stos
fstsw
sub
mov
lds
ss
aam
fidivrl
das
mov
movsl
or
int
pop
push
add
push
and
and
fisubrs
xchg
xlat
fnstcw
shlb
xchg
lods
test
jge
sbb
or
jp
mov
test
mov
xchg
and
and
add
arpl
mov
stos
cmp
repnz
adc
lcall
test
sbb
adc
inc
jb
sub
pop
in
and
lock
adc
and
test
sysenter
push
xor
mov
pushf
sub
lcall
rorl
mov
jl
int3
jno
sub
shlb
or
rclb
int
shr
out
jmp
or
movsl
cmp
je
test
out
orb
mov
adc
je
sub
jg
jno
adc
es
out
cmp
movsl
dec
cmp
aam
cwtl
xor
mov
mov
ret
mov
mov
pop
dec
xor
push
sub
icebp
sbb
rorl
in
cs
cmpsb
mov
add
mov
jae
mov
loopne
jecxz
cmpl
shl
addr16
cmp
mov
jge
shrb
add
xchg
js
test
xor
test
adc
out
adc
aaa
push
pop
add
mov
lret
ret
jl
mov
and
mov
sbb
data16
mov
push
mov
xor
sub
push
pop
add
cmpsl
push
jb
lahf
testb
inc
lds
inc
sub
jnp
lods
xor
in
pop
cltd
sub
xchg
adc
xchg
insl
inc
ret
sahf
mov
and
jg
shld
out
push
sub
mov
mov
cmpsl
and
mov
lahf
in
negl
popf
mov
jge
ret
pop
cs
cmp
icebp
xchg
push
mov
shll
cmpl
test
les
incb
test
cmp
dec
popa
insl
int3
rdtsc
jno
push
add
adc
or
test
dec
add
pop
lahf
mov
movsl
js
bound
cmp
arpl
ss
pop
arpl
mov
mov
stos
push
pop
mov
orb
pop
sub
lea
aaa
inc
cmpsb
aaa
jno
lcall
dec
inc
leave
lret
cmc
mov
xor
sub
and
cmp
xchg
sbb
mov
lea
sarb
and
or
jae
lret
jno
xor
jmp
jg
mov
fiaddl
loope
negb
jg
adc
sti
dec
push
dec
mov
xchg
sbb
mov
stos
xor
ljmp
dec
push
mov
xchg
arpl
adc
xor
out
push
fadd
daa
add
or
ljmp
mov
mov
dec
jne
push
test
mov
sbb
inc
pop
push
aaa
fcmovbe
pop
stc
stos
fcoml
jge
adc
and
jge
cmpsl
insl
aas
ja
xor
inc
ss
add
aaa
mov
dec
push
std
in
in
mov
mov
dec
aaa
mov
loope
adc
dec
jns
sub
sub
add
jg
mov
jg
sub
into
lock
in
mov
cmpsb
out
xchg
aam
loopne
or
iret
out
inc
mov
mov
mov
lock
loopne
jg
push
xchg
js
ja
adc
add
mov
or
push
nop
arpl
stos
lock
xor
jb
sbb
lahf
cli
and
sarl
cmpsb
push
rcrl
fstl
ss
push
test
out
jnp
mov
cmpb
ljmp
xor
popa
mov
xor
xor
aas
jmp
mov
pop
cmp
mov
jne
push
fstps
and
mov
fcmovu
xlat
or
les
fwait
cli
bound
js
pop
mov
or
scas
dec
imul
insl
js
mov
xor
xchg
mov
inc
hlt
negb
mov
in
sub
and
ret
imul
pop
mov
lahf
or
cmp
flds
sbb
scas
jb
or
test
add
outsb
jbe
mov
in
fbstp
push
imul
xor
call
fsubs
pop
idivb
xor
mov
sub
push
adc
xlat
dec
stos
inc
adc
mov
cld
bound
push
dec
and
and
shll
fisubrs
pop
push
out
inc
cmpsb
addr16
loop
cmp
into
jg
xchg
xchg
xor
push
or
adc
mov
faddl
out
insb
into
add
cmp
push
cmc
rcrb
jns
int3
mov
lcall
pop
bound
ret
stos
or
push
stos
push
stos
dec
and
ds
xchg
mov
test
loope
push
add
push
sub
cmp
shl
mov
aam
loopne
mov
mov
add
sub
imul
fwait
in
scas
scas
test
mov
inc
imul
insl
lcall
or
movsl
pop
add
mov
hlt
ljmp
dec
leave
int
outsb
adcb
in
sbb
sbb
sbb
push
cltd
and
xchg
push
mov
rclb
cmp
xor
jle
mov
or
out
pop
fistl
or
cli
xchg
sub
add
mov
or
cmp
adc
das
push
ds
lcall
js
lea
test
lea
cmp
lock
fs
cwtl
mov
es
xchg
ficompl
sub
push
fildl
push
add
sub
scas
inc
lahf
cmpsl
push
lock
mov
and
gs
jb
outsb
xchg
mov
imul
push
inc
je
mov
dec
mov
je
inc
or
dec
sbbb
jnp
ficoms
shrl
pop
adc
lahf
push
sbb
mov
pusha
test
out
mov
les
call
inc
cmp
jmp
and
jns
jle
dec
das
lea
js
pop
mov
sub
pushf
mov
lods
mov
lcall
pop
lcall
fistpl
dec
mov
push
es
stc
jns
cs
xchg
adc
sub
mov
push
in
add
inc
scas
iret
jmp
adc
es
popa
xor
icebp
int3
push
popa
daa
xor
cmp
popf
adc
sbb
xchg
inc
mov
or
out
xchg
jg
mov
mov
call
pop
cmpsb
outsb
popf
or
inc
lcall
subl
sub
mov
adc
and
lcall
sub
xchg
leave
push
sbb
andw
gs
rclb
cmp
jmp
test
int
lock
int3
mov
lods
outsb
inc
jnp
jle
mov
mov
dec
test
mov
push
insl
cmp
adc
push
inc
outsb
inc
jecxz
jno
ror
icebp
nop
cmpsl
sub
jl
sbb
gs
ficompl
bound
or
clc
mov
pop
rcrl
scas
loope
adc
xor
movsb
push
jecxz
dec
ss
adc
add
pop
hlt
add
jbe
and
or
jg
pop
test
and
inc
jge
inc
pushl
xchg
icebp
popf
das
negb
roll
push
and
pop
adc
cli
paddsb
xchg
add
popf
mov
cmc
mov
sbb
and
idivl
mov
clc
icebp
out
or
add
lds
shl
add
cmc
pusha
push
cmp
dec
xor
addl
divl
fistpl
push
xor
fwait
stc
and
sub
jecxz
test
push
and
mov
aas
inc
test
test
popa
outsl
and
outsb
and
mov
rcll
dec
push
scas
sbb
cmp
dec
cli
ljmp
les
mov
fs
jb
jno
adc
fdivrs
repnz
xchg
in
or
mov
iret
mov
test
mov
enter
sahf
sub
cwtl
mov
arpl
daa
inc
mov
xchg
mov
aas
xchg
loope
push
sub
test
bound
movsl
clc
aam
xchg
sub
jge
add
jae
in
inc
pop
jmp
loop
dec
jge
stos
lret
ds
jnp
mov
xchg
inc
add
es
mov
popf
lods
divl
jb
sahf
mov
int
fidivl
cltd
lret
sbb
call
ret
lock
ds
xor
sti
fidivl
popf
int3
ss
movsb
repz
ds
or
inc
adc
inc
icebp
push
pop
fistpll
add
pop
jmp
xlat
and
dec
mov
push
sub
xchg
sahf
sub
push
lods
test
fwait
inc
loop
ficompl
dec
std
jecxz
dec
decb
fnsave
mov
sahf
sbb
leave
xor
jge
dec
faddl
mov
sbbl
add
in
jne
loope
mov
push
push
push
push
mov
inc
cltd
xor
hlt
aas
adc
push
push
push
xchg
hlt
xchg
insl
in
pop
adc
fdivs
sub
inc
in
jmp
xchg
stos
adc
xor
and
cmp
jb
shll
sub
ljmp
mov
pop
int
jns
jg
in
push
dec
fnstenv
leave
or
jo
sub
enter
mov
sahf
lret
test
mov
add
in
add
movsb
movsl
stc
dec
lods
test
pop
dec
xchg
ja
cmc
cmp
in
imull
iret
stos
repnz
rcr
mov
push
dec
cmp
add
xlat
and
and
sub
mov
cmp
shl
mov
je
arpl
stc
mov
sahf
shrl
inc
out
mov
movsb
push
lcall
bound
lret
lcall
push
add
sub
dec
xchg
xchg
les
jne
push
push
inc
jle
sbbb
mov
jno
icebp
dec
or
outsl
mov
push
push
jecxz
sarb
cmpsb
pop
shrl
ret
sahf
fs
hlt
popf
cmp
insb
mov
mov
mov
sbb
gs
cmp
aad
mov
push
jno
adc
movsb
orb
and
mov
pop
sahf
popf
jne
xchg
jge
outsb
lods
test
push
stos
sub
nop
or
lcall
lds
outsb
rorl
and
test
je
mov
test
mov
movsl
rcrb
sbb
fstpt
pusha
inc
addr16
inc
cld
outsb
js
fisubrs
xchg
or
mov
jecxz
mov
sarb
mov
and
lods
fdivrl
mov
cmp
inc
jno
mov
mov
outsl
mov
aas
aad
jl
pushf
or
sbb
stc
aas
pop
mov
repnz
in
cmp
push
jno
xchg
cwtl
push
xor
sbb
sub
xchg
jmp
push
sbb
bound
and
cmp
fs
test
rol
das
daa
stos
or
and
jbe
xor
and
xor
in
out
sbb
rcll
ja
leave
aaa
or
ja
sub
mov
dec
dec
adc
negl
lret
outsb
sbb
outsb
test
mov
and
ret
xor
in
bound
dec
jbe
jmp
loopne
cmpb
xor
add
adc
dec
dec
loope
cli
pushf
loop
jle
or
add
mov
add
mov
imul
cltd
inc
imulb
shll
loope
cmp
pop
pop
xchg
int3
or
push
pop
xchg
inc
inc
idiv
mov
test
xor
int3
mov
cltd
sbb
mov
aas
cli
add
int3
xor
shll
push
mov
in
dec
pop
mov
xchg
out
out
addr16
mov
neg
inc
aam
arpl
imul
xchg
cld
mov
jge
xchg
jne
cmp
jae
xchg
mov
cltd
inc
jne
xchg
cwtl
push
shll
cmp
pop
repz
rorl
mov
nop
sub
xchg
pop
rcl
repz
icebp
pop
and
ljmp
popa
inc
test
push
jg
lea
loope
fwait
and
into
fisubl
jns
ljmp
xor
mov
jecxz
insb
cmp
push
sbb
mov
sar
lea
add
hlt
iret
cmc
mov
cmp
mov
stc
or
bound
cs
push
mov
inc
xchg
mov
jnp
push
adc
xor
mov
aad
in
push
mov
pop
ficoml
xchg
leave
fsub
ss
divb
fbld
in
imul
outsl
xor
vfrczss
test
dec
or
inc
aam
pop
arpl
adc
mov
shrl
xchg
jb
mov
xor
enter
lcall
gs
mov
mov
or
jo
mov
push
lret
xchg
dec
adc
sub
dec
rcll
jnp
mov
xchg
loop
sub
cmp
and
negl
inc
test
pop
dec
jb,pt
push
daa
je
sbb
push
lret
ret
mov
and
mov
dec
or
xchg
je
jae
jne
subl
sbb
add
pop
rorb
loop
mov
jae
ja
mov
gs
push
jae
mov
sbb
push
std
xchg
adc
scas
aas
cmc
scas
lods
into
inc
and
or
sub
or
notl
jle
ret
mov
push
mov
push
out
mov
mov
cmpsl
mov
jae
pop
repz
cmp
sub
loopne
cmp
pop
and
and
sbb
fidivrs
inc
in
mov
aam
arpl
jbe
cmp
fimuls
mov
cmpsl
mov
dec
mov
cmpsl
push
xlat
pop
test
decb
and
push
xchg
xor
dec
arpl
mov
mov
notl
mov
inc
jmp
sub
sbb
sbb
mov
fldenv
add
sub
pop
sub
out
dec
push
sbb
add
push
aaa
ds
pushf
jmp
insb
mov
jnp
mov
rcrb
pop
inc
xchg
mull
cmp
in
mov
jae
scas
add
xchg
test
jne
xor
sbb
cltd
fcoml
xorb
jo
cmp
cmp
mov
or
xor
mov
jns
xchg
test
add
pop
cmpsl
pop
mov
rcrb
pop
adc
fiadds
nop
add
repz
addl
outsb
jp
add
movsl
jmp
sub
dec
sbb
pop
inc
lahf
les
jns
xchg
xor
movsl
stos
das
add
jge
lock
stc
xchg
es
dec
mov
int
fstpt
pop
xchg
inc
mov
insb
pop
insb
fistps
pushf
aad
cwtl
insb
pop
dec
and
dec
dec
pop
imul
mov
test
pop
lods
jle
cmp
arpl
das
mov
rorl
mov
mov
inc
or
xchg
cmp
pop
xchg
mov
outsl
mov
stos
xor
inc
or
inc
int3
and
mov
hlt
or
or
imul
stc
fs
std
rorb
cwtl
in
fsubr
mov
insb
jbe
mov
push
aad
jmp
cmp
add
inc
jns
mov
ljmp
sti
pop
aaa
cs
and
and
and
xor
push
loope
add
inc
popa
pop
jge
mov
ret
jns
movsl
in
iret
jl
adc
xlat
mov
aaa
pusha
out
push
inc
shlb
cmp
mov
in
jecxz
out
add
xor
push
mov
mov
pop
add
sarl
enter
or
fldt
mov
pop
sahf
ss
inc
jg
mov
ret
jl
mov
xchg
ret
cmp
mov
jle
sbb
daa
mov
ret
loop
inc
inc
out
and
imulb
lret
jmp
sbb
adc
sbb
loop
push
fcmovnb
div
mov
dec
xchg
add
aaa
sub
sbb
xchg
dec
stos
iret
fmull
lock
pop
sbb
dec
clc
mov
imul
lret
jecxz
enter
lcall
cli
push
jecxz
shrl
movsl
dec
or
adc
subb
ljmp
das
sar
test
jmp
mov
js
cwtl
fisttpll
insb
mov
loopne
notb
adc
repnz
mov
sub
dec
add
jnp
mov
arpl
aam
inc
sub
leave
jle
lea
lods
jg
ret
inc
push
cld
es
cmp
out
mov
int3
cmp
mov
sahf
sub
sub
mov
stos
push
lds
popa
jae
popw
sbbl
inc
pop
sbbb
andb
adc
xor
jge
xor
cli
rorb
sub
leave
pop
fistpll
add
pop
xchg
cld
fistpl
enter
jno
xchg
sub
cwtl
or
push
mov
pop
add
mov
fwait
xor
imul
adc
nop
lcall
repz
mov
jmp
add
xlat
jb
out
aaa
in
mov
dec
cmpsb
cmpsl
cs
pop
mov
fisttps
mov
jb
jns
nopl
sahf
or
test
adc
mov
mov
les
in
imul
inc
flds
scas
out
stos
addl
rcr
mov
pop
bound
dec
roll
movsl
lahf
fidivrs
jmp
scas
insb
popf
dec
xor
not
cld
dec
mov
adc
mov
mov
xchg
jg
mov
push
and
mov
jmp
insb
adc
jg
cli
arpl
mov
cltd
mov
sbb
in
subb
mov
scas
add
mov
push
mov
cli
daa
fidivrl
jo
sbb
and
rcrb
mov
movsl
movsb
sub
fsubrs
cmpsb
in
ss
sub
ss
fimuls
sbb
jle
push
lods
out
int3
pop
movsl
mov
jno
dec
inc
cwtl
sub
adc
repnz
pop
test
rcl
adc
pop
jp
std
jne
dec
jmp
les
call
pushl
mov
das
sahf
xor
scas
xchg
int
cld
cli
icebp
inc
or
sbb
jbe
adc
xchg
pop
xor
es
repz
insl
inc
and
jo
idivb
lret
adcb
cs
jnp
aaa
icebp
add
add
jnp
xor
arpl
dec
scas
lock
je
inc
push
pop
push
sti
arpl
jne
jno
repnz
inc
or
cltd
sbb
test
int
xchg
imul
xor
push
lea
enter
inc
testl
dec
cmpsl
sbb
push
int3
pop
ret
sub
sbb
mov
mov
xchg
mov
cmp
pop
movl
mov
insl
stos
mov
int3
pop
rolb
nop
cmp
addl
fdivs
into
popf
add
mov
fwait
xor
pop
int
clc
sub
test
xchg
or
les
dec
jg
fildl
inc
and
adc
push
add
mov
cmpsb
mov
jle
sbb
gs
cmp
add
xor
pushf
pop
add
mov
push
xchg
pop
mov
je
incl
insb
mov
cmp
ret
xor
sbb
xchg
inc
mov
mov
popf
or
xchg
pushf
leave
ljmp
jno
inc
push
sbbb
insl
repz
push
add
mov
xor
push
sbb
int
push
add
sbb
jecxz
les
or
or
test
jbe
jmp
loope
fildll
jb
mov
jmp
add
cld
in
loope
mov
jae
cmp
sub
cmp
test
cli
mov
mov
outsl
mov
mov
rolb
dec
data16
loopne
jb
fldl
mov
stos
rolb
adc
mov
dec
mov
jge
add
jne
int3
ficomps
adc
dec
mov
or
hlt
jno
ret
fcomi
test
cmpsl
repz
nop
les
xor
out
sahf
mov
push
jbe
int3
je
ljmp
mov
repnz
shll
jp
mov
aad
je
into
jb
outsb
xlat
not
cmp
or
xchg
cmp
or
jns
pop
insb
xchg
pop
push
fdivrl
push
push
andb
imul
stos
test
icebp
in
das
cli
mov
adc
test
inc
sbb
push
cwtl
out
xchg
sub
mov
add
or
mov
mov
arpl
cltd
shll
pushf
mov
int3
fs
or
loop
call
and
push
or
and
pushf
std
sahf
and
loopne
ds
mov
in
out
insl
repz
int
jle
in
popf
xlat
or
ljmp
lcall
decb
pop
jmp
push
push
cwtl
and
xchg
jo
repz
shlb
imul
imul
mov
pop
add
sub
out
or
sbb
test
and
movsl
push
and
pop
cmpsl
jp
or
aaa
dec
faddl
je
push
lret
xchg
int3
dec
decl
rcl
push
dec
adc
add
inc
loope
jmp
mov
pop
jnp
scas
mov
xchg
xchg
adc
or
fs
std
and
adc
fsubr
dec
rcr
jne
push
dec
ja
lahf
or
arpl
stc
fisubl
ja
mov
sub
mov
lock
sbb
adc
mov
or
jl
inc
mov
mov
mov
aaa
aas
out
and
aam
inc
outsb
sbb
fistpll
test
or
sarb
xchg
xchg
js
outsb
fisubrs
repz
xor
adc
rcrl
jne
xlat
mov
push
jbe
push
cmc
addl
push
xchg
je
int3
jle
repnz
xchg
jge
dec
cmp
pop
in
jmp
bound
testb
je
adc
mov
cmp
pushf
add
fsubrl
sub
addr16
push
sub
xor
test
sbb
gs
mov
idivl
mov
xchg
xchg
ds
dec
dec
xor
cmpl
push
mov
push
test
popf
mov
repnz
mov
mov
push
adc
mov
outsl
dec
mov
jno
push
addr16
cld
and
pop
inc
sbb
dec
lahf
lcall
push
ds
and
jbe
rclb
lea
dec
pushl
data16
nop
negb
inc
and
out
sub
inc
aas
adc
fldcw
mov
push
mov
mov
inc
xchg
cld
bound
sub
mov
jmp
xchg
aas
jne
scas
lea
in
movsl
andps
and
scas
cmp
insl
dec
das
xchg
ret
sbb
std
aam
scas
jle
rcr
mov
mov
mov
or
or
adc
pusha
ja
adc
fwait
popf
inc
out
pop
jmp
push
xorl
add
arpl
bnd
lods
adc
pop
push
adc
push
inc
push
data16
xchg
arpl
pop
sub
addr16
fdivrs
ror
movsl
cld
jmp
insb
pop
xor
dec
dec
mov
movb
imul
orl
pusha
stos
cmc
xchg
mov
sub
lods
subb
mov
out
jge
inc
xlat
loope
scas
je
addr16
sbb
or
or
out
add
and
pop
stos
xchg
jns
loopne
adc
cwtl
jl
ss
fiaddl
jle
mov
aam
jmp
in
jb
dec
and
cmp
xor
mov
pop
adc
xor
mov
mov
inc
push
push
lret
in
shlb
es
adc
sub
xor
mov
mov
or
leave
mov
or
rorl
subl
sub
cmc
aad
jp
shll
sub
xchg
in
inc
push
xchg
cwtl
aad
or
pop
je
xchg
inc
aas
lods
pop
mov
pop
mov
enter
std
push
jmp
xchg
add
sub
sbb
inc
int
mov
orl
jmp
dec
add
and
push
pop
cli
add
je
fs
inc
add
rcr
sub
add
sub
add
push
push
jno
sub
mov
or
iret
dec
sub
push
sub
sbbl
imul
mov
cmp
cmp
push
jecxz
mov
in
gs
adc
dec
mov
addb
sbb
or
pushf
lcall
xor
and
dec
and
jl
jae
fdiv
dec
push
sbb
lock
mov
push
mov
add
push
clc
mov
mov
lods
sub
into
mov
insb
adc
jo
inc
mov
test
or
enter
imul
or
rcrb
inc
sbb
inc
js
jnp
inc
jp
daa
movsb
or
jns
sbb
jle
test
loop
or
icebp
imul
mov
push
lret
mov
aad
cmp
sub
data16
das
not
roll
pop
mov
and
xor
push
sub
imul
ds
mov
inc
fdivl
sub
pushf
test
loopne
shl
jbe
test
sbb
shl
shrl
aam
incl
pushf
adc
je
cmpsb
or
or
shlb
mov
push
call
push
xchg
mov
sbb
cwtl
dec
rorb
add
mov
or
int
jns
test
lock
je
push
cld
and
dec
push
out
pop
xor
mov
out
pusha
mov
loopne
push
repz
push
mov
test
insb
rclb
pop
cmp
jno
cmc
enter
into
loopne
int3
mov
adc
pop
repnz
les
mov
sbb
or
xchg
rcll
orb
fucom
loopne
shll
inc
push
gs
cwtl
mov
cmpsl
mov
mov
mov
ljmp
push
scas
pop
call
scas
scas
jns
push
cmp
cmp
sub
out
in
mov
lcall
rolb
in
popf
adc
add
and
std
or
jp
xor
mov
icebp
movsb
mul
repnz
mov
mov
sarl
popf
in
xor
mov
sahf
dec
pop
push
repnz
adc
test
out
add
clc
lret
cwtl
xorb
jg
jle
repnz
rorb
sbb
in
arpl
jp
daa
jp
xor
dec
outsl
cld
pushf
fsts
in
lret
int3
out
jns
fisubl
inc
cmp
mov
jl
movsl
jmp
sbb
dec
sbb
cmp
addl
aam
ret
adc
sub
enter
stos
push
pop
addr16
popf
cwtl
ljmp
mov
icebp
sahf
out
adc
out
lea
jp
rcl
aaa
xchg
aaa
push
xchg
mov
and
inc
xchg
cld
inc
xchg
cli
outsb
pop
adc
sbb
dec
je
imul
daa
push
hlt
int3
mov
fucomi
pop
fidivl
dec
xorl
lret
aas
roll
fs
and
pusha
dec
sbb
js
push
cwtl
das
and
xchg
into
addr16
pop
shrl
and
sub
int
mov
cmpsl
sbb
scas
mov
push
xorl
dec
popa
pop
mov
mov
lock
inc
nop
call
inc
push
repnz
sbb
push
xorl
cmp
pop
mov
fwait
fwait
xor
testb
fistl
ficompl
or
mov
popf
aas
shrl
rol
add
pop
or
decl
nop
inc
xchg
add
cltd
popa
jge
ret
mov
inc
cmp
cmp
mov
add
inc
mov
fnstsw
daa
xor
jge
cmp
loope
push
rclb
in
ret
xchg
push
push
mov
cwtl
sarl
mov
stc
and
add
push
or
test
bound
inc
cmp
push
xlat
mov
pop
sbbb
xchg
js
outsb
and
bswap
lret
addr16
mov
inc
es
lods
and
test
mov
cmp
stos
xchg
or
xor
test
inc
fcoml
dec
mov
fcmovnu
ljmp
shll
and
jnp,pt
pushf
mov
dec
sbb
negb
xor
lods
dec
inc
xlat
sbb
jno
or
jne
mov
sbb
push
and
mov
out
cltd
insl
pop
das
lahf
lock
cmpsb
in
mov
and
shlb
dec
testl
lret
dec
ret
int
aam
lret
cmp
lcall
mov
sub
mov
push
fistpll
xlat
pop
jae
dec
push
and
jle
outsb
ret
xchg
hlt
xchg
cmp
stc
call
xchg
xchg
mov
or
lods
and
mov
cmp
xor
dec
lock
pop
orb
mov
dec
pop
lahf
xor
xor
mov
aaa
or
aas
jl
pusha
sbb
pop
xchg
hlt
sbb
sar
dec
insb
es
repz
test
fiadds
inc
bound
popa
dec
les
ret
or
mov
arpl
lock
repz
int3
das
adc
out
xor
jae
popa
or
clc
mov
jb
push
int3
lcall
sub
std
in
jp
mov
and
push
test
movsl
sub
lret
arpl
inc
and
aas
cmp
cmovbe
or
push
jmp
push
mov
cli
das
loop
pop
mov
insb
sahf
and
sbbb
stos
sbb
das
fistl
sub
movsl
jno
dec
sub
scas
out
cmpsl
mov
jecxz
pop
hlt
dec
out
rorb
test
adc
push
push
sar
stos
dec
xchg
shl
cmp
sub
adc
aaa
lret
cwtl
jg
inc
out
inc
dec
lahf
mov
ret
mov
push
mov
and
push
xchg
dec
mov
lret
sbb
fidivrl
dec
mov
jg
mov
loop
outsb
andl
pop
jb
jno
push
ficomps
cmpsl
adc
xchg
sbb
jg
aaa
and
mov
push
xor
push
icebp
xor
dec
enterw
inc
ljmp
addb
jbe
jmp
loope
imul
pusha
mov
ds
mov
rcl
xor
pusha
aaa
ret
fisttps
mov
out
jno
inc
push
cli
inc
inc
ret
inc
pop
push
mov
xchg
fcomp
mov
add
mov
lods
call
jne
sub
jle
fsubp
adc
jl
pop
pop
and
add
ss
and
js
xor
scas
test
or
cmp
es
or
mov
mov
cli
or
cmpsl
sbb
loop
add
je
and
fucom
mov
or
outsl
fnstcw
pop
decl
shll
fists
je
xor
sub
enter
and
dec
xor
ret
mov
push
add
out
fwait
pushf
insl
leave
imul
out
lret
mov
jg
jle
call
cmp
jl
das
jo
cmpsl
add
add
test
gs
insl
test
bound
sub
cmp
pop
mov
daa
movswl
int3
data16
insb
sahf
pop
xchg
xchg
popa
mov
jecxz
addr16
jae
jbe
inc
adc
int3
inc
cvtpi2ps
dec
dec
pop
inc
cmp
test
add
fdivrl
lock
xor
aad
cmp
jo
lds
xchg
push
push
jb
xor
sub
lahf
xchg
test
sub
xchg
pop
pop
or
cmp
repz
clc
fidivs
shlb
mov
mov
add
mov
fisubs
fdivl
std
push
loope
mov
stc
xchg
cmp
ja
testl
sbb
sahf
and
jnp
jecxz
test
push
cld
xor
test
fsub
pop
mov
out
mov
stc
push
xchg
out
fdivrs
fnstsw
xlat
into
jae
es
lret
stos
pop
popf
mov
sbbb
push
stos
cmc
mov
pop
jg
inc
pop
cmp
xchg
dec
aaa
push
mov
fldln2
cmp
cwtl
ja
stc
lahf
mov
adc
inc
pop
push
xchg
lret
test
int3
pop
daa
imul
xor
jo
jl
lods
fldt
add
lods
lret
inc
push
cmp
outsb
cmp
fs
lods
inc
aam
xor
add
cmp
inc
mov
arpl
inc
push
adc
adc
xor
leave
dec
fidivs
add
fnstcw
adc
ret
jno
test
mov
aaa
ficoml
dec
cltd
shll
fldt
push
or
pop
arpl
add
test
add
filds
loop
sub
stos
pusha
pop
xchg
jns
mov
pop
fdiv
fisubrl
or
mov
push
xchg
int
add
push
mov
mov
scas
push
jecxz
stos
mov
in
out
sub
mov
lea
aam
xchg
fidivrs
jmp
inc
or
outsl
and
lcall
inc
xchg
mov
pop
xor
jbe
xor
pop
fs
push
in
jl
scas
lret
xchg
int
into
loopne
insl
daa
in
inc
sti
in
cs
ds
imul
mov
dec
and
xor
addb
pop
sub
mov
mov
mov
call
xor
push
adc
cmpsl
jne
add
xor
rolb
loop
push
push
ljmp
popa
movsb
xchg
movsb
jmp
mov
push
pop
scas
mov
adc
pop
sub
push
outsl
jbe
movsl
jl
mov
inc
jecxz
sbb
ficompl
and
les
push
push
sbb
mov
mov
out
xchg
jecxz
adc
scas
int
fsubl
cld
test
lcall
adc
xlat
inc
mov
ljmp
push
rcll
sbb
arpl
outsb
cmp
cmc
rcr
popf
push
sub
int
iret
inc
jns
bound
dec
xchg
imull
push
xorb
dec
lds
pop
repnz
or
mov
mov
ja
and
mov
shrl
dec
xor
jnp
jg
xor
or
sub
jmp
jns
dec
sahf
mov
mov
and
inc
jmp
dec
push
pop
nop
sbb
ljmp
mov
xor
xorl
lret
cmc
rcll
cmp
or
inc
adc
xor
mov
repnz
mov
enter
repz
sti
mov
ror
in
lds
add
and
dec
lahf
cltd
cmc
imul
cmpsb
rep
loopne
jle
and
ja
jns
sbb
lods
test
adc
inc
adc
jns
mov
xchg
mov
add
lahf
js
in
stos
push
je
bound
xor
icebp
jmp
fmulp
fisubs
cmp
shld
xchg
loop
jl
into
loopne
or
adc
mov
std
jp
fs
lock
xchg
int
cmp
aaa
js
pop
dec
lret
mov
sahf
imul
dec
dec
mov
or
data16
mov
sbb
repz
lea
mov
or
xor
shlb
cmpsl
pop
adc
dec
pop
lock
sub
fwait
in
leave
orb
lock
sbb
or
lret
push
or
popf
test
cmp
insl
fsubrp
inc
packssdw
dec
inc
and
mov
xor
xchg
push
fcmovnu
jns
inc
pop
mov
xor
add
iret
adc
outsl
js
xchg
clc
fcmovne
sub
push
xor
xchg
inc
call
lahf
pushf
or
jne
sub
iret
test
leave
mov
add
fmul
movsb
xlat
call
cmp
test
mov
lods
sbb
and
jbe
cmpsb
add
xor
mov
jns
lods
inc
popa
cmpsb
inc
mov
sub
sub
inc
mov
je
out
fstl
cmpl
sub
mov
mov
adc
test
ja
les
rcrl
insl
mov
inc
test
jbe
lahf
push
imul
roll
jae
iret
ljmp
xchg
insl
push
lea
cmpsb
fs
lahf
and
add
std
add
test
aas
cmp
and
jmp
daa
pop
cld
jb
pushf
scas
pop
jns
fisubrs
loope
pop
sbb
jo
pop
inc
addr16
leave
add
sbb
insb
testl
push
loop
xor
push
mov
push
push
jmp
fs
pushf
loop
je
pop
sbb
iret
sbb
and
leave
jno
mov
add
xor
push
mov
les
sbb
pop
or
and
jnp
ss
jo
stos
jbe
pushf
sub
dec
dec
push
in
inc
xchg
mov
mov
push
add
sub
push
inc
sub
pop
loop
cli
cmp
xorl
cmp
and
icebp
jg
shrb
stc
testl
movsb
pop
daa
out
jmp
sub
repz
lds
cli
cs
sbb
ja
daa
popa
inc
fsts
cli
jle
addr16
sub
push
sub
mov
pop
popa
fmuls
fisubl
gs
loop,pn
pop
adc
test
add
call
pushf
pop
xor
je
xchg
xchg
add
lahf
add
cmp
test
or
adc
js
jnp
adc
mov
or
add
or
stos
fldl
inc
daa
outsl
imul
imul
mov
jnp
fcomi
mov
dec
xlat
push
popf
dec
sub
pop
aad
mov
btr
push
push
test
pop
hlt
adc
add
xor
fildll
scas
lret
imul
xchg
lods
andb
pop
inc
mov
xor
inc
push
and
xor
rorl
or
sub
pop
sti
scas
fidivs
xchg
lahf
mov
or
clc
jle
push
or
mov
movsb
add
mov
cmpsb
inc
mov
xor
jle
fcomip
and
xor
negb
sub
sbb
pop
mov
inc
mov
insb
push
repz
in
stos
shlb
push
iret
mov
imul
and
push
mov
cmpb
sub
mov
roll
dec
stos
jecxz
and
mov
push
in
ljmp
and
clc
ffreep
cmpb
mov
iret
es
into
test
int3
push
xchg
dec
loop
add
sub
sub
add
das
sti
aad
xor
dec
xchg
test
loop
jb
inc
ds
stos
xor
mov
scas
or
mov
add
into
push
addr16
add
loope
lea
adc
pushf
fstpl
add
mov
sub
mov
out
mov
add
push
cmp
sbb
pop
andb
repz
insl
sarl
lahf
pop
test
add
int
loope
addb
rcl
mov
xor
lds
int3
ss
adc
add
fnstcw
xor
mov
mov
test
inc
jp
imul
xchg
xor
ljmp
or
jae
repz
inc
insl
mov
jae
in
cmpsb
shrl
push
shl
cmp
dec
mov
mov
test
shlb
loop
ret
mov
ret
outsl
lret
cltd
mov
and
push
mov
mov
imul
loopne
shlb
testb
dec
xchg
sbb
mov
lods
mov
cmpsb
lahf
jo
je
imul
inc
mov
das
jno
fdivrl
push
fwait
out
js
cmp
movsb
call
cmc
hlt
sbb
in
dec
bnd
cmp
push
repz
pop
addb
shll
xchg
or
dec
ret
push
xchg
call
dec
sub
and
dec
ret
push
js
cmp
mov
jne
and
jge
sti
mov
mov
cld
and
test
dec
cmpsb
fwait
bound
sub
popf
or
cmpsl
rorl
mov
das
pusha
in
pusha
pop
inc
mov
cltd
sbb
mov
cmpsb
repz
xchg
xchg
xlat
shll
ljmp
adc
iret
mov
fsubr
jns
int
loopne
sub
add
dec
popa
lods
mov
in
jge
mov
lmsw
adc
pop
jbe
add
cld
and
jp
outsl
jno
push
mov
test
aaa
jbe
xchg
es
popa
insb
outsl
sub
mov
sub
vpaddusw
mov
in
insl
push
inc
mov
xchg
stos
movsl
mov
scas
sahf
fwait
mov
or
push
sahf
jbe
repnz
shrb
jl
mov
pop
popf
and
mov
xor
fsts
dec
and
jns
hlt
mov
jb
je
sbb
es
ret
jne
ret
loopne
mov
jl,pn
or
scas
jle
xchg
ret
lret
sarb
sub
fidivrs
dec
cmp
addr16
mov
in
sub
dec
push
mov
add
mov
xor
fs
mov
negl
jb
mov
inc
shll
xor
into
call
push
ret
push
outsb
jmp
jno
fstpt
jb
insb
pop
je
outsl
adc
out
call
sub
fidivl
jns
out
push
push
dec
push
push
mov
sub
inc
cwtl
inc
fsub
dec
dec
xchg
and
mov
or
or
cmp
jb
push
js
lcall
pop
cmp
jle
inc
movsl
in
ljmp
sub
negb
ss
hlt
jnp
xchg
test
shll
roll
xor
mov
adc
popl
jno
cmp
sbb
mov
xchg
jo
sub
pop
sbb
ret
mov
dec
push
lcall
adcl
pop
adc
jg
dec
andl
call
sbb
sbb
mov
pop
lea
out
sbb
mov
dec
orb
int
push
shrl
dec
sahf
or
cld
in
int3
sub
rcl
jmp
xor
xor
pop
cli
in
out
dec
inc
in
mov
xchg
je
sbb
add
sahf
xchg
stos
pop
sub
test
lahf
inc
xchg
adc
push
hlt
mov
daa
pop
mov
xchg
add
daa
dec
dec
mov
daa
xchg
sub
loopne
push
xchg
jo
fs
test
xchg
fxch
dec
insb
daa
aas
ret
cmpsb
mov
or
cmp
test
js
mov
dec
jge
adc
lcall
mov
scas
ds
mov
mov
pop
in
jl
sbb
popa
ja
lea
subb
inc
and
fwait
daa
jmp
sub
pusha
ds
frstor
add
int3
bound
cltd
js
mov
ds
cwtl
rorl
xchg
int3
lds
inc
sub
pop
shl
lret
sbb
jno
or
repz
arpl
lods
call
data16
ret
shlb
xor
mov
xor
imul
adc
mov
jns
out
sbb
fidivs
push
out
adc
fmuls
mov
out
ljmp
mov
mov
lcall
gs
jae
int
cmpsb
add
adcb
mov
pop
and
and
mov
cwtl
shll
cwtl
pop
xor
test
aaa
nop
pushf
cmc
push
push
fstpt
imul
clc
fiadds
pop
add
and
aaa
pop
insl
icebp
into
mov
mov
jnp
and
dec
pcmpgtb
jmp
mov
into
int
fisubl
dec
test
insl
mov
jne
and
jp
mov
je
or
outsb
jg
ljmp
pushf
adc
flds
mov
jg
push
jo
dec
daa
daa
sub
adcb
adc
dec
iret
cmp
and
and
and
mov
cs
in
pop
lds
inc
jo
xchg
leave
fwait
push
into
xchg
lret
cmc
or
pop
insl
std
pop
lret
inc
out
je
jnp
xchg
dec
adc
cld
sub
push
mov
out
pop
nop
sbb
outsb
clc
repz
xchg
cmp
je
pop
repnz
nop
inc
cmp
lahf
mov
sbb
pusha
dec
cmp
pop
xchg
xorl
stos
sbb
pop
jmp
push
js
and
xchg
adc
fmuls
aam
sbb
mov
push
push
roll
imul
or
shll
stos
cld
pop
jp
ficomps
mov
push
dec
imul
jbe
iret
pop
push
ret
adc
mov
xchg
sti
aas
xor
fucomip
push
repnz
dec
movsl
inc
mov
adc
mov
xchg
push
idivl
movsl
jno
mov
inc
xchg
xor
dec
and
data16
xchg
sti
adc
punpckhdq
jecxz
mov
pop
clc
cmpsb
dec
hlt
adc
cmpsl
adc
cld
iret
jmp
push
stos
repz
stos
jmp
test
pop
xchg
mov
sub
sbbb
push
and
das
lret
lds
movsl
leave
adc
inc
push
js
jne
dec
xor
sahf
cmp
stos
addl
sar
jns
pop
pop
mov
lcall
jge
jle
pushf
jmp
add
adc
shrl
sbb
fcmovb
pop
lcall
insb
fisubrs
mov
dec
xor
add
mov
mov
lea
mov
and
dec
inc
inc
inc
in
in
push
loop
loope
stos
cmpsb
sub
test
push
or
fwait
pop
rcr
rcl
adc
mull
scas
pop
cmp
hlt
xchg
adc
cwtl
test
inc
xorl
mov
sbb
mov
popf
in
push
xlat
outsl
or
ds
sahf
add
mov
test
ret
cli
push
scas
add
and
fcoms
pop
and
repz
in
iret
daa
jae
cmpsl
and
cwtl
addb
jg
js
cli
cmp
out
lret
mov
std
je
xchg
inc
pop
pusha
push
inc
rcrl
data16
lahf
and
jae
sarb
push
and
sahf
lods
add
test
out
fistl
push
dec
mov
jne
bound
jmp
adc
mov
pop
jnp
call
mov
iret
les
mov
insb
rcrl
xchg
jmp
adc
jmp
jno
imulb
and
js
jnp
or
shlb
xor
iret
add
pop
mov
inc
or
xor
push
test
jmp
pusha
cltd
jb
pop
dec
loopne
ds
aas
sub
or
repnz
mov
sub
es
jne
repnz
test
lahf
ljmp
dec
mov
adc
jmp
and
cmp
sbb
popl
imul
data16
or
movsl
loopne
mov
nop
jmp
adc
fwait
stos
outsb
add
mov
in
jle
ja
aam
and
icebp
dec
imull
xchg
es
pop
inc
hlt
mov
bound
in
xor
jp
push
push
push
ds
insl
sub
rolb
xchg
inc
pop
xor
push
movsb
scas
or
nop
mov
js
jns
cmp
xor
imul
lret
sub
sbb
loop
sub
stc
insb
push
lds
ud0
mov
mov
imul
andb
aam
lods
dec
mov
int3
data16
mulb
scas
callw
xchg
int
adc
push
mov
xchg
arpl
jae
jle
or
and
mov
movl
jl
ret
cmp
daa
out
lock
in
jmp
and
lea
mov
or
mov
jno
clc
add
hlt
xchg
test
lcall
sbb
mov
xchg
mov
inc
jae
lods
cmp
sub
call
out
dec
out
sbb
mov
fidivl
enter
xchg
dec
sbb
aad
xor
jge
pop
shll
or
test
aaa
js
push
cmp
test
popa
popa
movsb
addr16
cmp
pop
leave
call
lods
js
rcll
sbb
movsl
xchg
sbb
clc
cltd
scas
inc
push
push
xchg
out
pushf
cli
cmc
in
push
sub
or
notb
adc
push
pop
dec
jp
std
int
cmpsl
dec
and
cmpsl
dec
push
lret
mov
loopne
int
lods
lahf
and
movsl
daa
fstps
sub
sbb
dec
shl
scas
and
pushf
repnz
lea
mov
lcall
mov
in
pop
xchg
dec
fstl
jg
lahf
roll
jp
cmp
cmp
and
adc
out
xchg
cmp
xlat
fcmovb
fnstenv
jno
pop
ljmp
xor
sub
rcrb
cwtl
lret
xchg
jne
ljmp
popa
push
xchg
adc
ja
mov
pop
and
filds
clc
xchg
dec
mov
in
cs
sbb
ret
into
xchg
lds
out
fstps
sub
xchg
lods
dec
push
ljmp
in
jp
pop
fildl
scas
call
cs
adc
and
popf
rcl
mov
lds
add
divl
imul
cmpsl
stc
inc
pop
add
mov
enter
rcll
push
push
out
push
adc
aad
test
jmp
stos
sarl
int
out
xchg
jo
and
add
ret
jmp
outsb
ret
or
sbb
mov
lahf
cld
xchg
cmpl
or
or
scas
sbb
cwtl
insl
inc
imul
dec
imul
stc
lea
push
in
sbb
es
adc
add
in
cli
push
incb
imul
and
rcll
mov
ss
testb
mov
stos
dec
jno
xchg
xor
adc
xor
sub
std
xchg
adc
movsb
imul
push
ljmp
int3
imul
daa
mov
sarb
cmp
or
mov
loope
jg
fsub
loope
aad
loopne
test
hlt
lret
sub
call
cmp
sbb
add
clc
xchg
pop
sbb
lret
int3
push
test
push
or
iret
cmp
xor
jl
rol
push
aam
fcomps
push
das
cltd
jle
cmpb
mov
cmc
insb
repz
insl
std
int3
shrl
mov
and
or
ret
loop
out
pop
or
inc
pop
mov
add
mov
cmp
and
sub
loopne
int3
inc
notl
jno
mov
cmc
xchg
add
rcll
inc
sub
enterw
add
fisubrl
aad
icebp
int3
bound
imul
aad
sub
sub
out
xor
imul
xor
outsl
push
div
subb
jge
sub
test
xor
push
or
repz
and
mov
pop
imul
mul
test
or
aam
lock
arpl
xor
dec
dec
push
rcl
rcrb
jmp
lods
jb
enter
frstor
sbb
pop
push
xor
mov
jno
and
das
or
aam
ljmp
pop
jmp
xchg
push
adc
xchg
jae
xchg
mov
xor
aad
and
xchg
shr
mov
xchg
sbb
inc
loope
mov
ret
lock
sub
stos
cmp
loope
mov
outsl
mov
test
inc
pop
adc
lret
fs
mov
jne
mov
cmpxchg
sahf
shr
punpcklbw
mov
jns
cwtl
dec
movsb
arpl
xchg
lret
sahf
jp
dec
cmp
sbb
hlt
sub
and
sbbl
cltd
in
loopne
dec
stos
repnz
sub
fwait
and
test
jp
pop
lods
mov
sbb
dec
push
aad
mov
pop
cltd
sbb
test
inc
mov
imul
jmp
jnp
pushf
mov
jmp
jle
mov
outsl
out
jmp
mov
mov
cmp
dec
mov
push
inc
cmp
lods
push
add
xor
call
notb
in
pop
js
mov
push
popf
fsubrl
or
imul
dec
add
stos
push
and
mov
or
dec
sbb
gs
sub
xchg
push
mov
and
lds
push
arpl
popa
push
jbe
out
in
and
cld
dec
cmp
ret
jp
test
call
sbbb
ljmp
enter
sub
xchg
ret
mov
jecxz
js
push
decl
mov
testl
sub
int
jp
mov
aam
cmp
loope
mov
sub
push
mov
adc
or
jmp
lds
cmpsb
mov
loope
bound
push
int3
xchg
inc
and
inc
test
mov
leave
fwait
push
push
andl
cmp
test
dec
mov
mov
test
pop
les
movsb
pop
xchg
ds
enter
push
mov
cwtl
loopne
cwtl
insb
jae
push
or
iret
pop
cs
sub
or
mov
and
aas
test
fs
hlt
sahf
pusha
xchg
test
loopne
icebp
xchg
pop
and
pop
pushf
fisttps
jmp
stos
lock
ds
or
dec
mov
inc
rcll
punpcklwd
enter
jg
int
adc
dec
jae
sub
mov
push
add
leave
jno
es
xchg
popa
pop
sub
sbb
fmuls
sbb
insb
ss
outsl
xchg
cmc
or
jle
ret
cmp
add
or
scas
in
jmp
push
mov
loop
dec
test
ss
pop
sub
mov
sahf
mull
or
push
pop
mov
daa
into
loop
shlb
adc
sahf
in
push
jp
dec
cmp
and
pop
test
les
or
lahf
cmpsl
inc
add
dec
ljmp
mov
xchg
fsubl
pop
push
xor
jnp
xlat
data16
fnstcw
ja
std
imul
rolb
out
test
andl
pusha
aaa
lock
and
jmp
pop
or
pop
popf
mov
jmp
scas
fsubp
cli
lret
xchg
pop
in
nop
out
xchg
fdivs
pop
mov
ljmp
das
adc
int3
cmp
gs
xor
fldenv
fisttps
pushf
lock
pop
test
dec
pop
popf
lock
cmpb
lods
pop
push
sbb
inc
les
cwtl
testb
or
xchg
jne
add
adc
loopne
xor
mov
popa
js
pop
and
out
sub
loop
pop
xor
inc
push
dec
add
sbb
sub
insl
push
dec
in
nop
or
sbb
iret
out
rorb
mov
push
pop
jle
adc
insb
push
jecxz
out
inc
push
xor
test
fs
imul
push
xchg
jae
movsl
push
addl
fstl
xor
cs
daa
les
dec
adc
xchg
setbe
pushf
jno
dec
aam
adc
mov
push
or
cld
pop
mov
popa
jl
mov
pushf
adc
adc
stos
loope
sub
or
push
mov
pop
lcall
aam
cmp
rolb
mov
push
ss
out
pop
mov
xchg
orl
jo
mov
sti
xchg
mov
mov
ja
xchg
jmp
sbb
imul
dec
inc
and
lea
popf
xchg
test
dec
or
test
xor
cmp
or
cwtl
imul
andl
hlt
push
mov
cmp
fildl
push
add
rclb
lret
mov
data16
test
sub
das
mov
std
push
cmp
inc
stc
gs
lahf
xlat
iret
jns
mov
adc
push
lods
enter
sbb
std
adc
push
sahf
inc
add
mov
aad
jno
and
push
adc
lods
in
mov
lods
repz
mov
in
mov
imul
scas
lret
pop
aas
xchg
add
add
add
jbe
mov
sub
inc
pop
lods
mov
xor
pop
scas
cltd
cwtl
enter
into
jb
arpl
lahf
adc
adc
test
jbe
push
cmovae
push
loop
scas
mov
or
es
push
sbb
imul
xor
fmul
fs
sbb
imul
fucomp
ficomps
mov
outsl
hlt
shlb
jmp
jb
ret
and
mov
subb
mov
fsubp
mov
jle
je
sahf
test
or
cmp
mov
je
into
sahf
icebp
inc
mov
cmp
mov
xchg
mov
xchg
jnp
xchg
aam
mov
test
and
pop
xchg
mov
pushf
shrb
je
sbb
test
push
cmp
mov
sub
add
dec
enter
xchg
and
negb
gs
sub
add
aam
jbe
lods
movsl
mov
rorb
sub
ucomiss
fldenv
lret
mov
fcompl
push
int
ret
enterw
dec
lret
xlat
das
loope
jp
inc
sar
pop
xchg
imul
scas
leave
cli
je
fcmovne
mov
popa
inc
icebp
add
fcompl
int
pop
xchg
ja
fisttpl
jbe
icebp
enter
arpl
add
sub
ds
cmp
repz
popf
bound
rolb
or
and
rorb
sbb
pop
nop
cld
scas
adc
jg
gs
sub
sbb
push
xchg
or
imul
cld
push
lcall
cmp
mov
mov
mov
add
pushf
movb
jg
adc
add
popf
fildl
std
mov
nop
jle
xor
das
test
and
popf
mov
imul
mov
lret
orl
fildl
je
pusha
lret
dec
mov
sub
add
stos
shlb
push
shll
push
inc
xchg
or
push
aad
in
repz
dec
sbb
sub
and
pop
popa
cmp
dec
and
fisubl
lock
lcall
adc
dec
sbb
mov
push
mov
pop
aaa
mov
aas
jl
scas
jp
lods
inc
jmp
push
pop
xor
inc
pop
stos
xchg
xchg
movl
sub
dec
int3
js
lret
jae
xchg
sub
inc
sbb
push
insb
sbb
pop
or
repz
stc
stos
std
jle
test
popf
pop
jnp
pop
xor
pop
mov
std
push
dec
repz
sbb
jmp
and
cmp
shl
mov
sbb
mov
das
mov
or
sub
outsb
imulb
cmpsb
adc
aad
rcll
lea
imul
pop
notl
cmpsl
pop
mov
push
xchg
int3
and
adcb
fisttps
mov
fisubrs
jbe
jnp
inc
sbb
jbe
dec
inc
jb
jmp
incl
lds
iret
cmp
sub
in
pop
fisubs
push
fdivl
out
lds
mov
sub
insb
xor
lret
imulb
push
stos
out
pusha
clc
xchg
mov
jb
popf
cmp
es
push
and
xchg
aas
fwait
push
out
dec
push
cli
call
push
adc
sub
pop
add
test
int
push
pop
and
mov
icebp
cwtl
pop
or
dec
mov
push
movsb
mov
orb
or
cmp
push
fldt
cmp
outsb
mov
lret
aam
test
fiadds
jbe
jae
jge
negl
js
int3
push
pop
inc
shrb
mov
pop
add
jae
nop
xchg
rorb
into
mov
cmp
leave
test
sub
sub
push
cld
adc
cmp
xor
mov
test
je
cs
cli
cmp
in
jmp
scas
dec
push
shll
outsl
mov
mov
stos
ret
xchg
rorb
lea
and
add
jge
cld
inc
mov
int
pop
push
inc
frstor
and
adc
mov
in
vpaddsb
repz
iret
xor
ja
sti
aas
cmp
in
daa
movsb
xchg
xor
dec
fmull
dec
sahf
push
aas
adc
cmp
cmp
add
sbb
xchg
xor
jns
loop
ror
jmp
dec
xchg
les
fldcw
xchg
leave
loopne
iret
dec
aaa
dec
or
pop
bnd
pop
adc
sbb
pusha
cmpsb
jp
loop
fidivl
adc
jo
leave
fidivrl
cmp
mov
add
shlb
dec
pop
call
mov
enter
xchg
adc
cmpsb
push
popa
fdivrl
jge
lods
imul
loop
inc
push
and
xor
cmp
xor
push
out
dec
and
aas
or
imul
out
dec
jo
les
orb
lahf
xor
das
xchg
pop
cmp
stc
xlat
jle
push
clc
xchg
in
sub
xchg
mov
xchg
data16
popa
in
inc
out
cmpsl
xor
sbb
or
jnp
mov
lcall
xchg
sub
out
imul
sbb
in
xchg
stc
fwait
dec
lock
pop
addb
pop
jle
fcoms
push
push
inc
mov
mov
jb
mov
push
sbb
out
cmpsl
xchg
or
and
shll
flds
dec
jo
adc
sub
push
inc
cmp
fsubp
cmp
roll
dec
mov
xchg
sub
sahf
filds
fs
push
in
ss
cmp
fisubs
test
xchg
and
je
leave
mov
rorl
push
stos
out
ljmp
ret
js
lahf
inc
jecxz
push
cmp
popa
dec
xor
xor
push
mov
popa
mov
inc
fimull
mov
jns
loopne
loop
push
push
mov
xlat
addr16
or
addr16
push
imul
jne
mov
test
jae
push
dec
pop
scas
add
fsubp
sub
and
ds
jae
push
ss
xlat
or
lods
fs
stc
sbb
out
mov
jae
inc
or
jl
movsl
jns
xchg
stos
ss
stc
leave
xor
sti
add
clc
mov
loop
jns
in
ret
push
mov
mov
push
aas
mov
imul
pop
or
and
leave
jne
or
or
mov
or
pop
pop
shll
call
jne
cld
and
cmp
roll
pop
sti
les
into
jbe
sbb
lock
adc
push
arpl
mov
mov
or
repz
fldl
xchg
adc
iret
jle
movsb
dec
cmp
jg
mov
repz
xchg
push
pop
mov
or
jmp
sbb
push
xchg
dec
mov
ret
mov
out
loop
movsb
xchg
sbb
sub
testl
sbb
lds
xchg
jbe
adc
cmpsb
clc
out
pop
ret
add
mov
js
jo
rcrb
pop
mov
add
insb
in
xchg
into
sub
lods
mov
andb
jp
cli
out
pop
push
sub
push
push
sub
mov
push
mov
cmp
lcall
dec
pop
repnz
adc
jns
popa
xor
inc
xlat
pop
mov
je
lods
add
mov
sub
js
xchg
dec
clc
cmc
insb
std
in
cltd
sti
adc
push
out
xchg
lahf
loopne
jmp
or
push
dec
ret
aas
xor
fbstp
leave
sbb
mov
stos
lret
xlat
add
adc
jbe
fnsave
pushf
cli
test
add
in
push
mov
jle
ret
mov
insl
ja
pop
mov
fisttpl
jecxz
or
mov
jle
add
mov
push
push
lahf
imul
pop
or
and
lods
pop
and
fsubs
push
pop
leave
lcall
lcall
sub
adc
repz
ja
mov
mov
out
std
pop
sub
ljmp
test
shlb
fwait
mov
jnp
dec
test
jmp
icebp
arpl
imul
push
xchg
rol
loope
add
ret
cmp
js
sub
fcoms
cmp
adc
imul
fimull
imul
mov
jl
xor
insb
mov
scas
movsl
ljmp
mov
jmp
dec
ficompl
dec
and
xchg
loope
das
sahf
fwait
and
out
inc
mov
cwtl
stos
cmp
out
sub
test
das
outsl
lret
mov
lods
ret
out
cltd
xchg
xlat
mov
cmpb
cmp
out
insl
cwtl
push
fsubp
cmp
clc
insb
addr16
mov
inc
dec
ficompl
sbbl
push
and
cmp
add
push
pushl
pop
aad
jo
outsl
adc
jbe
dec
das
out
push
enter
add
out
arpl
sbb
lods
pusha
bound
inc
xor
push
mov
daa
ret
imul
cmp
movsb
sbb
out
and
xor
pop
pop
push
mov
jb
xchg
cmp
mov
xchg
cmp
daa
ljmp
pandn
dec
mov
js
push
push
cltd
imul
popl
repz
mov
stc
add
xor
jp
push
outsb
cwtl
faddl
scas
pushf
inc
xchg
or
in
xorl
or
arpl
push
aam
in
push
popa
sub
pushf
and
mov
es
loopne
pushf
mov
test
push
inc
mov
gs
clc
adc
mul
test
imul
sub
add
fs
outsb
mov
xchg
dec
cmp
mov
sahf
adc
add
gs
add
jbe
cltd
insb
pop
out
push
bound
iret
loopne
mov
aam
sub
push
lahf
cltd
jl
or
push
sbbb
fucomip
mov
fnstcw
lea
popf
xchg
sbb
into
push
lret
insl
push
movsl
sti
push
mov
orl
xor
dec
scas
push
pop
mov
dec
lods
shr
xchg
adc
xchg
mov
int3
lahf
or
cmpsl
pop
sbb
xor
xchg
push
sub
call
adc
ja
out
inc
jmp
inc
mov
or
das
pop
stos
leave
push
push
test
lods
into
fnsave
stc
pop
add
adc
divl
xchg
pop
in
sub
int3
mov
jae
aam
dec
xlat
loopne
or
insl
dec
push
and
mov
sti
imul
xchg
mov
or
xchg
sbb
mov
lret
add
xchg
pop
popf
int3
xchg
imul
mov
cmp
xlat
pop
add
pop
mov
imulb
aam
jno
push
xchg
stos
dec
cmp
mov
push
sub
popa
je
or
jno
cmp
fisttpll
call
inc
and
xor
sbb
movsl
fisttps
das
movsl
cmp
data16
lock
cmp
cmp
outsl
call
test
push
jbe
popf
repz
in
aad
mov
push
in
bound
outsl
inc
and
aad
hlt
test
addb
push
inc
add
ss
cmp
xchg
sahf
sbb
or
or
dec
movsl
mov
cltd
mov
cmp
fsub
adc
rolb
out
dec
sbb
jmp
fidivl
mov
and
lds
xchg
fsub
push
cmp
sbb
sbb
iret
push
sub
jo
stos
std
pop
fisubl
cltd
cmp
add
movl
inc
mov
mov
and
mov
pop
scas
ss
jb
xor
add
pusha
iret
jno
add
push
mov
and
add
adc
or
cmp
orl
cmp
sti
pop
dec
cmpsb
mov
pop
and
in
pop
cmp
jnp
sbb
sbb
or
shll
and
pop
stc
cmp
je
repnz
fiaddl
bnd
or
rorl
cmpsb
arpl
in
lret
leave
mov
push
filds
and
and
or
pop
or
push
dec
cld
addr16
dec
cmp
mov
movsl
adc
jnp
mov
sahf
adc
test
xchg
cmp
roll
out
ljmp
jg
call
mov
in
cmp
mov
push
mov
daa
adc
fs
inc
sub
add
out
push
popa
cmp
mov
mov
fistps
cmp
add
mov
xor
call
mov
pusha
pop
bound
bound
fsubrs
sbb
leave
cmc
ja
lea
xor
xchg
jmp
sbb
in
push
ret
shll
sbb
adc
aam
add
pop
out
cld
mov
mov
outsl
shll
movsl
pop
mov
dec
mov
ja
fbstp
repz
push
ljmp
cld
xchg
push
or
dec
pushf
es
rorl
mull
repnz
test
in
and
inc
mov
imul
outsb
push
repnz
mov
mov
or
sarl
sub
mov
fs
mov
xchg
js
ljmp
mov
mov
mov
inc
dec
jo
xchg
les
xchg
jns
xchg
mov
outsl
je
test
xchg
stc
movsl
mov
cmp
fldenv
jae
ljmp
jb
sbb
jg
cmp
cltd
sbb
lahf
cmc
sbb
addb
hlt
pushf
int
jns
lock
adc
leave
jae
xchg
dec
mov
and
sub
movsl
mov
ss
and
adcb
pushf
dec
out
mov
test
lock
xchg
cmp
cmpb
mov
fs
pop
mov
out
xlat
sbb
lods
sbb
add
dec
call
fidivrs
shrl
adc
xlat
mov
add
mulb
xchg
xchg
dec
mov
sub
dec
repz
sbb
in
xchg
mov
xchg
sbb
inc
imul
jae
fs
jb
clc
sbb
push
adc
add
addl
add
mov
or
jb
aaa
pushl
and
xor
inc
dec
cwtl
inc
cmovl
das
aad
xor
mov
out
je
mov
dec
push
in
std
push
fidivrl
das
mov
mov
movsl
and
imul
push
jg
subb
add
mov
ja
mov
dec
mov
push
and
lods
and
popf
outsl
mov
movsl
dec
mov
nop
scas
pushf
out
mov
jns
bound
into
movsb
mov
cli
cs
repz
and
outsb
aaa
arpl
mov
mov
sahf
push
into
ss
add
lock
inc
xchg
mov
cmp
mov
rcrb
or
add
test
dec
es
jo
cli
js
loopne
fs
push
popa
mov
inc
xchg
mov
or
xchg
ret
stos
sahf
shr
int
add
divl
mov
les
outsl
idivb
adc
in
sbb
popa
fcmovbe
lret
pop
lea
repz
jne
mov
sbb
sti
inc
adc
int3
sbb
add
rorl
imul
iret
mov
cmp
lods
insb
pop
adc
fiadds
loop
lods
mov
jb
xor
pusha
lahf
xor
adc
push
jns
cmp
jmp
push
idivl
mov
jp
aas
jmp
inc
js
mov
sbb
fmulp
and
pop
push
sub
sbb
cmp
hlt
xlat
dec
lds
sahf
out
dec
out
or
xchg
sbb
adc
push
fbld
mov
pop
jbe
std
mov
movl
shll
xchg
cmp
push
rcll
and
aam
push
movsb
or
inc
adc
push
in
je
subl
fimuls
and
fiaddl
aam
int3
xchg
das
pop
bound
cmc
jp
push
insb
mov
ds
jno
jno
fneni(8087
mov
jo
dec
dec
bound
sbb
repz
mov
xchg
cmp
sbb
repnz
xor
mov
xor
rolw
jns
or
xor
bound
daa
fwait
orb
jg
insl
dec
out
lahf
pop
mov
cmpsl
aaa
pop
mov
cmpsb
dec
addl
mov
pop
std
sub
sbbl
pop
xchg
xchg
imul
shl
sbb
std
sbb
inc
je
sub
idivl
mov
sub
ret
sbb
shlb
out
pop
pop
add
into
cmp
or
faddp
adc
gs
in
xchg
in
push
sub
xor
into
cli
pop
jo
or
std
xchg
cltd
cmp
cmpl
mov
sub
push
mov
sbb
fcomps
mov
popf
jae
mov
in
dec
add
xchg
pop
ljmp
dec
lret
mov
sub
lcall
pop
bound
mov
inc
popa
add
mov
sub
mov
lret
push
or
mov
sbb
mov
pop
clc
cli
sbb
sahf
add
je
dec
jnp
cmp
out
stos
test
jle
insb
or
js
xchg
mov
cmovns
div
add
fisubrs
mov
xchg
jp
in
decl
out
adc
or
mov
es
lcall
cld
sub
mov
sub
add
xchg
push
inc
cmpsb
movsl
ret
mov
sbb
pusha
test
adc
test
xchg
sub
inc
aas
scas
xchg
shlb
jp
int3
mov
push
push
mov
jno
out
repnz
fidivl
cs
inc
push
pop
xrelease
xor
mov
or
repnz
adc
lahf
lods
cli
push
repnz
push
rclb
pop
sbb
fs
sbb
dec
mov
popf
add
shll
fcomps
jp
adc
sub
mov
jl
mov
hlt
adc
mov
lahf
adc
call
mov
gs
mov
mov
ret
dec
pop
test
scas
sbb
imul
and
lcall
dec
push
cltd
shll
into
jo
push
movsl
mov
push
xchg
add
lock
pop
hlt
pop
dec
stos
cli
adc
add
dec
and
imul
cli
mov
int
jecxz
in
xor
add
repz
mov
dec
popf
sub
lahf
mov
movsl
daa
test
sub
mov
lock
lods
push
out
inc
xchg
imul
push
xor
mov
jle
lret
scas
pop
jbe
xchg
add
mov
and
and
push
in
scas
and
cwtl
cmp
xchg
pop
adc
cs
rolb
fistpl
and
and
dec
xchg
sub
or
or
pop
push
push
sti
dec
cmp
mov
mov
shll
cmpsb
push
mov
fdivs
dec
jge
push
repnz
xchg
outsl
out
ret
out
adc
frstor
je
js
xchg
movb
adc
in
sbb
add
sub
sub
jmp
mov
dec
aam
leave
jb
sub
and
repnz
popf
pop
adc
test
mov
cltd
pop
cmp
daa
mov
lods
stos
test
add
sub
push
fwait
mov
xlat
test
and
push
repz
insb
loope
mov
nop
sbb
iret
mov
scas
loopne
mov
test
loop
lcall
mov
aas
cmp
dec
xor
aam
pop
inc
sub
cmpsb
push
cmpsl
xchg
mov
adc
add
cmc
movsl
in
add
sbb
lret
jbe
pmaddwd
sbb
jge
out
stos
cltd
adc
scas
xchg
xor
inc
vrsqrtss
mov
out
mov
mov
roll
pop
inc
loopne
sbb
jbe
mov
cmpsb
in
mov
in
jmp
int3
jp
movsb
mov
in
cmc
fsubs
xchg
lret
cmpsl
xor
cmpsl
daa
cld
fiadds
xchg
fs
insb
dec
mov
pop
scas
rol
addb
jno
ja
add
out
test
mov
mov
movsb
mov
pusha
mov
stc
xchg
xor
push
test
xchg
dec
fsubp
sbb
dec
ljmp
add
imul
rorl
movl
clc
dec
and
icebp
inc
xor
roll
push
mov
repnz
adc
int3
or
sti
xchg
and
jmp
fisubs
adc
mov
mov
push
loopne
jle
xchg
loope
mov
or
xor
test
or
cmp
lods
jne
push
jmp
jp
paddw
add
enter
ds
xchg
popa
loope
xchg
mov
jno
shr
sub
sub
adc
mov
fiaddl
mov
push
xchg
rol
jle
aad
inc
lret
int
dec
and
add
aaa
or
xchg
sahf
loop
pushf
faddp
cmpb
adc
icebp
and
dec
pop
nop
mov
push
lcall
mov
lcall
ja
cli
sahf
movsb
test
pusha
out
in
pop
aaa
cmc
cmp
stc
hlt
pop
in
sub
popa
mov
jo
xor
scas
mov
mov
push
jecxz
scas
xchg
orb
outsl
testl
icebp
xchg
sbb
adcb
sub
xchg
mov
lock
xor
js
or
es
lcall
jne
push
mov
dec
jbe
shll
inc
sbb
lods
jno
mov
xchg
in
mov
mov
rclb
imul
or
and
xor
dec
aam
jns
inc
xadd
inc
into
loope
cmp
cld
xor
scas
inc
jecxz
fnsave
mov
pusha
cmpsl
in
test
inc
in
jmp
pop
sub
push
push
rcll
xchg
lret
in
add
sarb
lods
mov
or
dec
sub
jmp
pop
push
shr
es
sar
test
fisubrl
pop
cs
sbb
or
nop
add
enter
sar
lcall
aad
and
sub
adc
lret
pop
push
push
and
mov
add
int
ja
adc
subb
es
loop
mov
inc
loop
psubd
out
nop
adc
mov
or
sarb
ljmp
cmp
or
ljmp
mov
dec
add
mov
in
adc
stc
jmp
add
data16
les
jno
and
int
test
mov
fadd
ds
adc
shr
lret
adcl
loopne
ret
dec
push
jbe
lds
rep
cwtl
cmp
shlb
in
xchg
jns
fiadds
cmpsb
jp
mov
cmc
jmp
roll
push
pop
leave
fbld
dec
add
addl
pop
pop
data16
mov
out
int3
and
dec
lds
sub
fmulp
mov
inc
jmp
sub
mov
ds
shrl
test
outsb
repnz
xor
lods
inc
and
outsl
cmp
dec
mov
stos
fcmovne
jae
cli
lods
scas
fs
popa
adcb
push
push
mov
stos
cli
daa
outsl
cmp
idivl
pop
sub
movsl
repz
and
sbb
push
cmc
nop
daa
sbb
pop
cmpsb
inc
in
mov
adc
pop
aaa
mov
jmp
xlat
ljmp
cmpsl
xchg
pop
sub
mov
fimull
outsl
mov
pop
add
or
mov
mov
inc
xchg
mov
rorb
jno
and
fnstsw
push
push
adc
cmpsb
cmp
push
cmp
sub
mov
shrb
jl
es
mov
push
jge
add
decb
shr
ds
pop
ret
mov
lea
cwtl
mov
lods
or
repnz
add
je
fldt
movb
sti
out
push
sbb
xchg
call
hlt
jl
test
pslld
imul
lret
mov
fisubrs
movzbl
xorb
xchg
or
aaa
arpl
sbb
hlt
leave
scas
jno
add
jmp
sarl
rcrl
test
xchg
mov
push
xor
insl
aam
xchg
out
das
sbb
adc
rep
jno
sbb
lods
push
lret
movb
in
clc
cmp
lret
cmp
sub
imul
jge
ja
int
add
iret
out
xchg
js
mov
ds
mov
sub
faddp
pop
push
dec
negl
push
movsl
lret
jo
push
data16
lods
cmpsb
and
je
pusha
cld
fsubl
jne
stc
enter
popa
sahf
mov
fistpl
add
les
fcmovb
insb
movsl
and
adc
mov
ret
orl
add
pop
xchg
lock
mov
movsl
xor
adc
sbb
rcrb
test
push
inc
jmp
mov
fwait
mov
sub
jnp
pop
mov
in
imul
loopne
cvtps2pi
xchg
faddp
incl
gs
mov
push
nop
push
pop
inc
push
jp
lods
add
and
sbb
push
and
mov
std
jp
xor
push
hlt
clc
dec
std
and
sbb
lea
dec
or
bound
dec
iret
outsb
stos
dec
xchg
jmp
mov
cmp
mov
ss
repz
scas
cmc
sub
in
aaa
mov
pop
dec
adc
and
mov
je
test
xchg
test
stos
fs
mov
push
clc
push
push
gs
jae
jp
add
adc
xchg
jge
movsl
lods
aam
push
dec
loopne
gs
pop
loopne
roll
add
fmull
sub
xor
inc
dec
call
xchg
mov
dec
inc
aad
stos
jnp
in
jnp
in
add
push
pop
mov
mov
shll
jns
dec
adc
fs
shrl
or
fucompp
jmp
inc
add
or
mov
and
inc
xor
std
jo
imul
not
lretw
repz
xor
mov
movsl
dec
xor
jg
xchg
sub
sbb
std
add
les
sbb
dec
aas
dec
mov
insb
add
pop
pop
ret
stos
iret
in
add
out
xchg
mov
inc
pushf
loope
stos
jecxz
idivb
sbb
inc
jo
fsubrs
sbb
cmpl
shlb
scas
add
push
mov
mov
push
xchg
popf
xchg
pop
cmp
imul
es
sarl
mov
addr16
jno
cmpsl
mov
movsl
xor
test
mov
push
jl
ljmp
and
jmp
roll
jbe
adc
inc
mov
jmp
mov
pop
jge
mov
jl
in
inc
mov
int3
sbb
jnp
sub
mov
enter
lock
scas
jmp
sbb
nop
rolb
cmp
icebp
dec
mov
les
icebp
std
mov
bound
fdivrl
ret
decl
decb
dec
in
mov
cmp
jbe
mov
cmpsb
jp
jnp
fld
aas
xor
sbb
cmp
pop
jbe
add
jmp
aad
insl
inc
pop
stos
push
mov
shll
fidivrl
std
xchg
mov
mov
xor
and
inc
pushf
enter
int3
jno
push
in
in
fsub
push
push
mov
xchg
mov
push
jle
jle
into
popf
and
bnd
and
sub
xor
pop
ret
mov
outsl
and
mov
mov
aam
in
iret
cmpb
lcall
stos
lret
or
icebp
mov
dec
test
movb
push
mov
daa
inc
xlat
sbb
xor
clc
mov
stc
jbe
test
or
xchg
in
movsb
jbe
rorl
adc
daa
xor
mov
sub
test
inc
repnz
sub
fadds
cbtw
imul
rolb
outsb
data16
inc
shll
pusha
imul
aad
xchg
stc
push
jge
mov
cmp
xor
fwait
in
inc
dec
pop
pslld
lahf
in
xor
test
movsl
or
movsl
je
dec
mov
mov
roll
pop
fiaddl
dec
mov
adc
hlt
out
stos
loop
mov
mov
jmp
fisubs
shlb
mov
jg
sub
or
mov
test
mov
adc
cmc
ja
jge
jp
inc
mov
mov
nop
inc
push
add
sbb
shlb
mov
popa
xchg
aas
lods
inc
lret
inc
sub
leave
dec
mov
fs
hlt
cld
dec
dec
mov
andb
mov
shll
sbb
adc
jo
stc
fiaddl
mov
dec
and
rcl
std
jno
xchg
or
cld
lret
cwtl
mov
inc
repz
push
in
and
add
jns
fldcw
mov
mov
jg
popf
sub
in
shl
test
dec
repz
sbb
pop
inc
sbb
lcall
inc
pusha
jp
pop
in
jle
cmp
decl
cmp
inc
or
lret
dec
pusha
or
addr16
lahf
inc
xchg
lods
adc
mov
ljmp
cltd
call
fisttpl
test
popa
and
loop
mov
fldl
movsb
sub
mov
dec
insl
or
xchg
lock
enter
add
or
xchg
jnp
push
push
mov
inc
mov
pop
nop
fisttps
lcall
sub
lcall
mov
scas
addl
sbb
mov
daa
scas
lds
icebp
into
add
hlt
sub
and
mov
push
imul
lret
stos
negb
dec
inc
call
mov
js
dec
push
mov
loop
nop
mov
push
cltd
shl
push
out
mov
fstl
dec
pop
aaa
push
mov
mov
dec
arpl
mov
pop
mov
mov
repnz
mov
xor
ss
add
repnz
xchg
movsl
dec
out
clc
and
insb
ja
enter
rcrl
fwait
xchg
mov
jmp
sub
inc
inc
mov
push
sbb
sub
es
xchg
mov
imul
enter
les
jno
aaa
jl
int3
pop
pop
add
pop
fwait
jge
std
mov
lock
je
xor
loopne
pushf
jne
mov
sbb
test
add
xlat
cmpsb
adc
lcall
lock
mov
sbb
sub
mov
insb
mov
add
or
and
mov
jbe
jb
jb
cmpsb
sbb
mov
mov
mov
cmp
int
ss
push
fwait
inc
xchg
push
sub
xchg
sbb
fcomps
addr16
inc
adc
adc
cmp
mov
sti
es
shlb
pop
lods
ljmp
cld
mov
repz
jecxz
pop
loop
cmp
ss
aas
sbb
jg
js
repnz
xor
or
add
mov
cmpsb
shl
ja
cltd
ret
fstpt
mov
aad
sbbb
test
shlb
dec
cwtl
lret
pop
push
lds
jp
push
imul
insl
test
lret
shl
ss
xor
fildll
xor
push
iret
negb
dec
in
pop
sarb
shl
mov
bound
addr16
sub
and
xchg
lods
cld
int3
ljmp
mov
scas
hlt
sub
iret
loopne
mov
cmp
mov
mov
xchg
call
jg
scas
test
mov
fdivrl
inc
dec
mov
sbb
sub
inc
sbb
scas
mov
lcall
les
push
daa
in
ja
das
sarl
or
mov
popf
in
and
dec
jb
fadds
movsl
pop
and
scas
add
xor
mov
push
xchg
xor
arpl
mov
test
and
out
dec
cltd
imul
ss
pop
movsl
push
fcomps
rcr
dec
out
or
call
cs
xchg
js
dec
std
adc
sub
je
xor
mov
cmp
mov
out
cmp
mov
mov
dec
aam
insl
loope
sub
sub
inc
jno
aaa
dec
mov
mov
outsl
mov
dec
and
repnz
test
jp
loopne
mov
jmp
push
mov
adc
and
adc
push
mov
push
dec
test
mov
out
dec
into
xor
es
out
mov
das
mov
xchg
xor
dec
xchg
pop
in
lret
iret
inc
test
lret
cs
stos
push
out
cld
sbb
add
pop
les
out
sbb
repnz
and
dec
stos
jne
lcall
mov
cltd
push
shll
push
mov
adc
add
dec
add
fisubl
push
jl
add
fisttpl
das
mov
mov
das
sub
jns
nop
sub
push
adc
out
mov
push
cmpsb
cmc
mov
aas
cmpsb
sub
dec
jg
mov
add
jmp
inc
mov
xchg
xor
sbb
sub
arpl
push
or
pop
call
data16
test
fdivrs
jb
movsl
ret
jns
push
pop
push
scas
movsl
pop
inc
lea
push
es
out
cmc
scas
ds
sti
mov
ja
sbb
push
sbb
push
addr16
push
pop
xor
out
mov
cmp
jmp
lock
jns
rorb
xlat
test
stc
in
or
rorb
lock
add
std
cmp
imul
in
loopne
cmp
cli
negb
cmpsb
push
xchg
cmc
in
sbb
daa
mov
idivl
xor
jecxz
mov
add
mov
loopne
enter
outsl
mov
jecxz
jno
lock
jns
jg
add
cmpb
in
sarl
mov
cmc
testl
out
adc
pop
hlt
mov
lahf
rcll
lds
xor
and
or
xchg
mov
mov
push
lret
test
push
pop
push
test
jne
pop
shr
dec
adc
and
fiadds
std
in
ret
repz
fcompl
sub
addl
inc
xchg
mov
jns
xor
fs
jl
addr16
add
sub
icebp
out
clc
fcmovbe
push
dec
adc
or
xor
push
push
and
addl
lcall
pushf
mov
mov
aam
sub
inc
aam
cmp
pop
lds
cmp
mov
inc
lods
sub
cmp
sbb
mov
push
aad
adc
push
xchg
adc
test
inc
pop
faddp
cmp
jb
pop
push
add
outsb
dec
jb
jns
or
cmp
xor
xchg
dec
xor
dec
mov
sub
jl
js
mov
std
aam
pushf
mov
into
or
mov
lds
xlat
jb
aam
pop
cld
and
lret
mov
add
scas
push
sub
dec
jmp
pushf
mov
out
sbb
test
push
xchg
cmp
sti
jo
test
push
call
arpl
jecxz
push
outsb
cmp
adc
push
fs
xor
rcll
paddd
shlb
aaa
jp
mov
cmpsl
push
in
push
daa
mov
addb
movsl
pop
cmp
mov
jge
jp
jle
lds
pusha
pop
test
mov
mov
ljmp
repnz
loop
jo
aas
testl
mov
xchg
pop
fistl
push
fsub
xchg
in
call
jp
in
inc
lods
or
bound
pop
pusha
sub
pushf
inc
fsubs
es
xor
sahf
adc
mov
jae
and
daa
or
idivl
push
inc
sbb
in
std
sub
xchg
repnz
cmpsl
xchg
push
int3
and
dec
gs
cwtl
adc
push
cmp
or
pop
lock
add
push
insl
ret
fs
xor
sbb
jo
push
jbe
pusha
ret
push
andb
mov
nop
aam
jb
inc
adc
adc
ja
fnsave
sbb
daa
loop
dec
test
js
pop
xor
adcb
and
mov
mov
jle
push
lods
cmp
fldcw
hlt
fisubrl
mov
sub
mov
stc
adc
jp
inc
inc
aad
mov
dec
jnp
testl
enter
inc
jp
aam
mov
cmp
mov
imul
jb
dec
adc
add
jnp
call
push
xor
in
data16
xor
leave
in
cmp
nop
shr
and
mov
jp
outsl
sahf
jmp
push
mov
cmovbe
stos
sbb
shll
in
sarl
out
jp
idivb
jne
xchg
jno
adc
push
bound
xor
cli
jle
aad
fnstcw
jmp
mov
pop
jmp
jge
aaa
jmp
fidivrs
dec
adc
xchg
popa
mov
xor
adc
cltd
sub
jne
mov
or
subl
dec
jb
movl
fcmovnb
lods
out
andl
bound
insb
shrl
cmp
push
adc
mov
popa
jbe
mov
enter
xchg
gs
repnz
mov
notl
sub
out
adc
in
je
xor
lretw
xchg
imul
xchg
insl
cld
pusha
mov
stc
test
mov
mov
cmp
popa
pop
sub
addb
js
push
jmp
js
or
test
cmp
xor
pop
dec
cs
sub
movsb
xchg
nop
push
inc
push
addr16
pop
fisttpll
inc
in
lahf
insb
nop
ret
andl
leave
xchg
add
sbb
cmp
adc
mov
sub
adc
mov
sub
sbb
inc
and
pop
mov
stos
xchg
pop
call
lcall
xchg
ret
int
or
shlb
jmp
pop
call
inc
push
or
mov
add
mov
add
pushf
outsl
bound
test
pop
sub
push
sar
lods
xor
clc
test
pop
mov
or
ret
inc
mov
gs
inc
mov
cmpsb
lods
cli
xchg
xlat
rcrb
mov
mov
subl
hlt
sbbb
push
stos
fdivs
shl
jmp
sub
jbe
mov
rolb
dec
inc
xchg
cmp
insb
inc
or
outsl
cmpsb
out
sbb
scas
mov
test
sub
sbb
mov
aaa
push
std
pop
or
sub
add
adc
mov
jmp
aad
rcrb
xor
xchg
inc
dec
in
or
stos
lock
sub
loope
ss
out
and
ret
mov
insb
add
nop
cwtl
addl
push
mov
dec
cmpsl
push
inc
cmpsl
xchg
inc
xchg
les
jecxz
test
push
cltd
pop
and
loopne
pop
arpl
outsb
adc
push
mov
add
xchg
add
push
add
ss
or
rorl
mov
outsl
shl
push
mov
fwait
dec
int
inc
dec
outsl
mov
push
or
stc
dec
and
notb
mov
mov
iret
test
dec
push
xchg
cltd
in
inc
ds
jp
sub
test
pop
out
jnp
icebp
xchg
sub
call
decb
mov
cld
fwait
jns
vmwrite
jecxz
shlb
or
inc
dec
mov
mov
stc
dec
ret
arpl
iret
cmpsb
cmc
jg
add
in
add
mov
xchg
jne
data16
xchg
insl
pushf
loopne
inc
pusha
push
xchg
loop
addr16
aas
div
push
xchg
push
ret
xchg
push
mov
mov
pop
pop
xchg
in
repz
push
repz
sub
imul
sub
jo
dec
movsl
fdivr
std
dec
sub
jmp
inc
ficoml
dec
ds
sbb
cld
pushf
or
adc
sub
sbb
jne
scas
pop
dec
xor
out
sub
fdivl
mov
push
mov
insl
movsl
aam
pop
stos
pop
cltd
mov
mov
in
lods
sub
mov
adcb
mov
jbe
int3
shrb
pop
and
cmp
pop
std
or
pop
insb
addb
popf
sbb
adc
sub
mov
mov
fisttps
cltd
bound
xchg
jbe
sub
fisubrs
lds
test
mov
cli
add
imul
xchg
cmp
xchg
dec
ja
adc
es
dec
fistps
das
and
ror
mov
dec
jb
pop
sbb
shrb
cltd
and
or
movsb
and
and
inc
mov
or
loope
out
lar
sbb
sub
sub
fs
push
shlb
insb
and
push
adc
nop
xchg
fwait
cmp
jecxz
xor
call
nop
addr16
push
dec
lret
adc
clc
mov
jl
sub
hlt
ficoml
popf
add
xchg
test
xchg
aaa
sbb
mov
pop
test
rorb
aaa
lret
xor
cld
les
mov
fwait
and
and
dec
roll
stos
loop
ret
lret
push
imul
and
jb
leave
jbe
mov
sub
pusha
lret
dec
mov
jns
jbe
icebp
or
in
cmp
push
and
cwtl
and
jbe
or
addps
pop
flds
imul
arpl
xchg
shrb
loope
cmpsb
add
xor
mov
int
pop
scas
mov
jns
inc
pushf
repnz
xlat
nop
repnz
into
in
xchg
insb
add
inc
jb
mov
and
insb
insb
inc
mov
mov
loopne
fdivrl
fsubs
add
xchg
dec
scas
pop
enter
ror
pop
mov
fimull
cmpsl
pop
repnz
test
setne
ret
add
iret
mov
call
jmp
test
cltd
enter
enter
dec
fistpl
mov
hlt
mov
fmuls
xchg
inc
stos
pop
mov
pop
dec
ja
xlat
cmp
xchg
les
or
inc
es
and
je
sbb
and
dec
rcr
dec
outsl
xchg
repz
lods
pop
push
push
adc
loop
jmp
mov
loopne
dec
inc
jp,pn
xor
add
sahf
cmp
shlb
mov
cmp
sbb
jns
stc
fsubrl
cmp
outsl
cmp
mov
sbb
jnp
nop
dec
insl
sbb
in
pop
mov
pop
out
mov
int
xchg
and
arpl
jp,pt
fiadds
mov
cmp
push
mov
daa
repnz
rcll
cmpsb
loopne
clc
movb
test
cmpsb
aad
call
pop
aam
or
mov
cmp
cli
cltd
inc
scas
push
mov
into
pop
jmp
sbb
jl
jne
lret
mov
cs
aam
clc
fucomp
jecxz
mov
repz
unpckhps
adc
xor
dec
mov
sbb
and
xchg
daa
movsb
mov
inc
jo
dec
ret
xchg
fimull
sbb
enter
jge
dec
movsb
sbb
xor
outsb
imul
pop
sysret
sub
sub
in
das
std
imulb
popl
mov
test
outsl
sbb
adc
or
adc
adc
cmp
cmp
out
sbb
push
sbb
xchg
adc
push
test
movb
jmp
sbb
imull
je
mov
lcall
dec
ffreep
test
xchg
sbb
lods
push
or
sub
add
jmp
add
repz
mov
mov
out
cmp
sub
mov
or
push
jmp
out
out
and
xor
lods
das
and
aad
cltd
push
xor
js
jb
daa
xchg
enter
dec
mov
jb
lret
mov
jnp
orb
mov
xchg
imul
mov
or
sti
xor
dec
and
repnz
stos
pop
lea
in
mov
mov
aaa
jo
out
mov
in
push
jne
inc
popa
sub
inc
fcompp
adc
out
jns
xchg
adc
fists
xor
cmp
into
mov
das
pop
mov
lahf
divl
gs
stc
push
mov
lods
xchg
lock
push
push
ret
out
jno
fidivl
clc
adc
inc
std
fistpl
out
xchg
mov
jmp
push
xchg
cmc
iret
cmc
xlat
outsb
roll
push
mov
fwait
xchg
out
cmp
into
mov
stos
xor
inc
cwtl
cmpsb
js
lds
mov
aad
xor
nop
push
inc
add
imul
jne
arpl
stos
das
mov
and
and
insb
pop
jl
ret
mov
inc
xor
bnd
jne
fwait
jmp
add
cli
cmpsb
push
lret
or
popa
je
jo
popf
pop
add
xchg
fcmovne
iret
loope
ret
mov
lcall
jae
mov
pop
mov
repnz
mov
xor
inc
out
pop
stos
lock
outsl
or
imull
subl
sbbl
mov
rcrb
pop
lahf
das
mov
int
lret
ret
push
icebp
sub
out
sti
pop
leave
or
mov
xorb
jbe
push
pop
push
in
xor
push
jp
test
call
push
inc
mov
sbb
mov
js
je
imul
mov
mov
mov
push
mov
push
fwait
cltd
sub
xchg
andb
push
push
mov
scas
jp,pt
push
lret
cmpsb
test
out
les
fldcw
fildll
fwait
cmp
stos
ja
sbb
pop
jl
sahf
push
insl
push
arpl
repz
in
fwait
cmp
pop
push
out
inc
and
popf
lahf
ret
out
inc
jmp
js
add
push
ret
ljmp
push
into
cmp
xchg
mov
pop
mov
push
mov
pop
add
ljmp
add
mov
push
into
mov
jo
ljmp
xor
fldcw
les
mov
mull
mov
mov
rcrl
or
add
jne
jge
pop
push
outsb
popl
lods
iret
adc
arpl
cld
xor
imul
aas
and
out
les
and
stos
mov
mov
mov
xchg
mov
jne
test
and
sti
hlt
lret
ret
sub
sahf
je
add
stos
add
in
or
mov
add
test
popa
loopne
lret
xor
ret
mov
test
sub
test
mov
mov
fidivl
dec
cmp
mov
push
mov
hlt
mov
das
mov
lock
jbe
loop
cmp
ret
std
mov
out
mov
dec
repnz
and
add
cmpsl
iret
fistpl
cmc
rclb
lock
stos
fildl
fs
test
sub
or
jmp
inc
fs
cmovnp
mov
cmp
and
int
xchg
ror
clc
mov
cmp
inc
sbb
and
mov
rolb
ja
push
imul
popf
fisubl
mov
dec
adc
scas
fnstcw
ja
lahf
push
pop
pop
imul
jo
cmp
sub
int
lods
icebp
mov
sbbb
mov
arpl
stos
inc
jp
cmp
stos
cli
sub
push
rclb
push
adc
movsl
xchg
imul
or
mov
rcll
jnp
stos
pop
arpl
jbe
inc
seto
rcr
dec
daa
jb
inc
mov
jl
mov
cmp
jle
inc
cmp
sbb
test
mov
add
mov
mov
mov
cli
out
in
test
or
push
cwtl
mov
aas
mov
lcall
scas
out
mov
aam
push
or
sub
mov
xchg
shrl
xchg
out
xchg
xor
out
inc
cmp
xchg
rcrb
cs
sahf
movsl
or
pop
xchg
ret
jmp
pop
push
aas
rolb
out
iret
hlt
xchg
adc
inc
addr16
mov
or
fisubl
adc
cld
and
lods
hlt
addr16
xchg
shl
sbb
rorb
or
sub
outsl
mov
shr
jo
negl
mov
mov
in
sub
test
lahf
add
mov
test
pop
into
cmp
cwtl
xchg
cmpsl
pop
movsl
cmp
scas
stos
inc
or
jnp
mov
loope
add
jmp
in
inc
push
and
jle
in
cwtl
aad
xorb
jg
adcl
mov
fcoms
push
fbld
dec
add
xchg
xchg
out
cmp
scas
sbb
scas
mov
int3
inc
pop
or
sub
dec
lds
popf
imul
sbb
cmp
dec
divl
adcb
pop
test
call
xor
xor
xlat
stc
js
xchg
loope
gs
push
sbb
ja
sub
pop
popa
add
ficoml
lret
lret
cld
pop
and
mov
mov
sub
stc
dec
push
loopne
call
nop
ficompl
lods
push
and
out
lret
xlat
xchg
fildll
test
push
sub
sub
add
or
fstp
inc
aad
jmp
lods
inc
sarl
xchg
mov
mov
lcall
cmp
jecxz
jp
push
cs
arpl
xchg
push
lock
pop
test
and
test
hlt
lods
sbb
pop
cli
ret
sub
out
inc
cmp
aam
lds
cld
sbbl
lret
js
cmp
mov
dec
pop
loope
iret
out
dec
sbb
dec
push
cwtl
push
fwait
lods
mov
scas
movsl
cmp
mov
subb
push
out
adc
push
ret
xor
pushf
inc
cmp
cli
xchg
out
dec
add
xor
scas
jmp
jmp
push
rcl
out
lahf
negl
xchg
mov
add
test
push
or
shrb
insl
sub
pushf
ss
push
inc
ret
jb
fwait
dec
lods
push
push
add
rcr
cmc
lds
inc
lcall
xorb
dec
mov
cmpsb
jbe
cmp
add
pop
scas
ds
jl
jg
rorl
fistps
loope
pavgw
xor
aad
xchg
mov
dec
pop
sar
mov
lret
pop
push
outsl
pop
push
lods
inc
mov
xorl
add
mov
orb
dec
mov
adc
jae
xor
jmp
fwait
lea
fistpll
test
dec
fwait
push
imul
inc
sbb
shll
inc
mov
stc
push
js
mov
or
test
ds
outsl
mov
std
and
fnop
sbb
test
cwtl
and
loopne
insb
out
push
out
dec
rcr
rcr
pop
mov
ljmp
cmp
xchg
jl
rorl
sbb
jns
push
xchg
stos
sub
fildll
fcmovnu
push
dec
aad
lods
call
pop
adcl
outsb
inc
aad
xor
inc
add
push
mov
xchg
or
pop
mov
jmp
inc
inc
out
sub
popa
outsl
cli
daa
jecxz
repnz
adc
pop
aad
inc
inc
loope
jmp
sbb
test
enter
or
aaa
pop
cmp
inc
push
imull
unpcklps
push
xchg
add
repnz
lret
or
adc
push
into
jno
aaa
fcos
mov
in
ja
shll
jle
mov
lret
or
ret
cld
mov
sub
rorl
dec
or
or
in
repz
mov
insb
mov
into
xorb
jge
adcl
and
ljmp
pop
sub
add
ds
insl
int
jmp
aas
fsubr
dec
arpl
notl
cwtl
mov
push
scas
dec
dec
out
pop
jge
lret
les
inc
mov
push
mov
cmc
mov
insl
sub
int3
lahf
lahf
cmp
test
mov
mov
push
scas
add
repnz
mull
add
push
add
xor
fs
jle
imul
repnz
iret
jae
mov
jb
in
dec
push
sub
cwtl
rolb
xor
xorb
jno
sub
cmp
mov
shr
scas
cmp
data16
cmp
sub
div
shll
insl
cmpsl
dec
insl
push
xchg
fcmovnb
pop
add
xor
movsl
adc
jnp
out
xchg
adc
imul
addr16
pop
nop
lea
cmp
nop
mov
fimuls
je
push
mov
pusha
mov
push
je
rcll
mov
lods
cld
mov
nop
and
lods
mov
sub
mov
repz
lds
sar
out
push
push
xchg
mov
stos
cld
es
stos
cmp
inc
fdiv
mov
add
ljmp
stos
xchg
pop
pop
shl
movsb
xor
stc
or
leave
in
mov
daa
insl
push
mov
in
push
loopne
mov
int3
xorl
mov
and
sub
test
dec
cwtl
and
dec
pop
mov
cmp
icebp
popa
jle
sar
inc
inc
subl
xor
inc
ret
cmp
mov
ficomps
cwtl
jmp
mov
or
jbe
cld
leave
and
nop
xchg
or
dec
aam
sbb
idivb
jecxz
stos
lods
or
add
ret
push
ljmp
pop
jbe
popa
movsl
xor
push
leave
and
lret
xchg
mov
data16
pusha
or
aad
and
sahf
lods
xor
xor
adc
aas
cmp
jmp
push
lret
pop
repz
add
add
sub
cmp
popf
jae
xor
pop
sahf
hlt
and
and
shr
scas
fwait
mov
test
and
popf
shlb
cmova
dec
data16
cs
mov
cmp
int
mov
push
lret
mov
adc
lods
daa
cli
aas
popa
inc
xchg
cmp
push
add
imul
sub
jp
mov
pop
xchg
fs
or
dec
lods
in
dec
adc
rcr
sti
xchg
in
jns
mov
or
jmp
lcall
in
mov
mov
lods
lods
mov
cmp
daa
pop
dec
push
clc
loop
xlat
lret
push
xor
jecxz
pop
cwtl
pop
mov
push
or
sub
stos
xchg
addr16
lcall
xor
mov
mov
adcl
inc
pop
mov
fldcw
addr16
ss
vxorps
shrb
in
mov
shll
aam
mov
cmpxchg
pop
jo
adc
sub
in
add
les
mov
dec
jb
out
pop
push
int3
neg
arpl
shl
int
in
and
xchg
or
test
xchg
ljmp
sbb
inc
enter
mov
mov
arpl
xchg
je
mov
dec
push
and
adc
xchg
fisubrl
or
sub
insl
sbb
inc
sbb
inc
mov
push
imul
and
sub
pop
sbb
xchg
jg
or
pusha
xor
adc
push
and
bound
mov
push
xor
mov
es
mov
lods
adc
push
inc
lds
xchg
cmp
rclb
out
cmc
dec
lcall
rcl
jae
or
loopne
cmpsl
push
mov
mov
movsb
in
scas
inc
add
mov
xor
xchg
add
sbb
mov
bound
mov
dec
push
pop
inc
inc
ss
outsl
addl
dec
dec
push
stc
or
jo
rcll
jnp
ja
jg
lds
sub
in
shr
mov
xchg
inc
sbb
cwtl
xchg
lods
out
jle
pop
fs
jl
dec
rolb
mov
or
xor
lock
add
int
jle
sub
adc
xchg
add
add
xchg
int
shrl
adc
jl
packssdw
or
stos
cmp
cmp
mov
dec
call
cmpsl
clc
fwait
pop
and
adc
cwtl
jl
jbe
add
sbb
mov
xor
xor
sub
adc
jnp
xlat
mov
xchg
cld
mov
test
push
jle
jnp
pop
pop
dec
xchg
sbb
aam
testb
push
mov
jb
mov
rcrb
xor
popf
sub
dec
divb
js
nop
jge
sub
sbb
lods
loop
jmp
mov
movsl
aam
popf
test
mov
xchg
mov
xchg
jns
in
clc
and
sbb
jne
imul
imul
xor
popf
aas
inc
stos
xlat
js
dec
iret
or
fbld
jmp
adc
js
pop
movsb
push
pop
es
int
test
ds
pop
dec
sub
add
push
imulb
jl
mov
adc
mov
mov
or
inc
xor
sbb
sbb
shrb
mov
cmp
jb
aaa
push
or
mov
lods
and
mov
test
push
mov
fdivrs
nop
cmc
mov
ret
mov
iret
jmp
ret
add
cli
iret
loope,pn
and
mov
movsl
or
xchg
js
and
or
pop
ss
pop
imul
pop
or
loop
nop
push
pop
cmp
fbld
xchg
push
adc
je
push
jbe
cmp
fstpt
dec
mov
xorb
loopne
push
in
pop
lcall
ja
jle
movb
and
mov
pop
out
dec
adc
dec
gs
fwait
mov
rcrl
addr16
jmp
fisttpl
add
and
popf
mov
insl
nop
adc
mov
mov
lock
jp
test
xor
lret
xchg
cli
and
mov
stc
cmp
inc
cli
test
inc
popa
sbb
fwait
add
fsts
shll
adc
jno
sub
pop
mov
les
ret
pushf
popf
movsb
fsubr
dec
popf
push
lahf
pop
scas
push
mov
dec
inc
jmp
xor
jnp
mov
repnz
cmp
pop
ljmp
cmp
add
ja
les
call
insb
out
iret
xchg
and
leave
pop
std
repz
stos
pop
imul
mov
icebp
xchg
mov
fildll
nop
pop
mov
push
push
stos
xor
pop
push
out
subl
int
add
mov
inc
adc
jecxz
inc
and
sub
or
enter
mov
sub
push
es
sub
fcmovnb
cmp
popf
jmp
xor
insb
xchg
sub
mov
mov
rcl
push
lret
mov
or
cltd
add
imul
jg
outsl
jge
mov
or
pushf
int3
mov
dec
test
cmp
cltd
outsl
test
jecxz
ss
dec
stc
out
adc
ja
jge
mov
mov
loop
gs
jo
add
stc
std
dec
mov
push
movsb
mov
push
mov
inc
mov
aaa
mov
and
xchg
xor
ror
ret
xor
sub
test
loopne
jmp
xor
cmp
scas
scas
mov
dec
rorb
pop
inc
cwtl
mov
fistl
mov
xchg
scas
stos
xchg
imul
push
and
add
or
mov
stos
xchg
call
negl
loopne
lcall
shlb
cmp
icebp
push
xor
xchg
and
fistl
add
mov
addr16
test
lret
add
lret
mov
popf
or
fs
leave
sahf
popf
popa
jns
mov
push
cli
dec
pop
bound
fwait
pop
push
xor
ret
dec
jns
jl
imul
stos
jnp
sahf
ficompl
and
mov
out
sbb
xor
mov
mov
ret
pop
push
inc
testb
push
je
xor
test
loop
or
mov
stc
jnp
aas
cs
test
in
dec
adc
aas
sub
or
adc
stc
leave
sbb
sbb
ret
test
cltd
xchg
pop
les
loope
int3
lret
loopne
dec
lret
and
dec
cmp
ret
leave
out
add
mov
mov
dec
dec
iret
shr
pop
imul
lods
cld
insl
cwtl
cmp
adc
inc
xchg
pop
popf
add
shlb
jecxz
sbb
push
xorb
push
or
or
push
call
jne
cwtl
dec
es
pusha
xlat
fistpl
cmp
and
mov
adc
and
mov
adc
outsb
dec
cmp
adc
imul
negl
push
test
popf
mov
pop
mov
xor
orb
push
xchg
stc
lea
bnd
push
push
add
arpl
cmp
add
mov
sbb
shl
inc
pop
outsb
push
bnd
cmp
sub
sub
cmpsb
pusha
out
xchg
xlat
dec
std
addr16
fs
jmp
push
add
mov
mov
inc
lds
adc
sbb
sahf
inc
rol
clc
mov
mov
bound
cmc
inc
lahf
mov
sub
inc
jns
cmpsb
push
arpl
mov
ljmp
lods
dec
xchg
ljmp
inc
jp
stc
fidivs
xor
int3
mov
fcoms
or
cmc
push
cltd
cmpsb
and
jge
decl
sbb
dec
and
cwtl
repz
shrl
sub
adc
lock
test
test
xor
fmull
stos
xor
enter
cwtl
fmuls
popa
cmp
imull
cmp
sub
cs
out
dec
mov
fs
lods
push
pop
pop
mov
dec
pop
ljmp
adc
sub
aam
xlat
aad
and
pop
fcompp
or
ja
push
push
pop
in
clc
sahf
mov
push
lock
out
push
and
addl
or
jmp
add
leave
repz
mov
ret
es
or
jg
mov
test
xchg
popl
mov
loope
and
xor
push
or
mov
into
cld
ss
mov
int3
pushf
std
mov
js
scas
lods
xchg
sbb
sti
dec
adc
decl
movsb
lret
ja
and
push
test
dec
mov
sbbb
xor
pop
stos
mov
dec
xor
ss
lods
lcall
mov
pop
or
popf
fldl
es
xor
fstpt
push
jns
xor
inc
inc
jne
pop
and
and
bound
lds
imul
cmp
les
push
out
test
or
inc
push
test
jns
and
pushl
out
std
mov
cmp
call
jmp
leave
lods
fcomip
imul
and
repz
adc
push
outsb
sbb
ds
bound
cmpsb
test
mov
add
into
into
lods
pop
pushf
xor
dec
les
aad
mov
adc
inc
mov
mov
leave
and
ss
jo
popf
into
pusha
inc
or
std
mov
push
cmc
je
adc
popf
inc
movl
push
pop
pushf
mov
dec
enter
pop
aaa
xchg
jecxz
mov
mov
xor
push
fcmovbe
ficoms
xchg
pop
stc
mov
test
repz
mov
push
cli
sub
push
outsl
ljmp
xor
ss
and
or
inc
fwait
cmp
cmpsl
push
jns
test
pop
and
cmp
clc
mov
inc
mov
pushf
adc
xchg
cli
add
call
lods
mov
sbb
nop
pop
rcr
xchg
in
pop
push
scas
incb
lods
cmp
inc
cld
sarb
cwtl
mov
movsl
jmp
or
dec
lret
or
mov
pop
adc
cmp
cltd
shrb
pop
mov
xchg
inc
sbb
scas
sar
lahf
xchg
pop
and
xchg
out
and
lods
mov
jb
enter
fsubr
aas
inc
fisttps
add
mov
push
bound
mov
roll
xlat
arpl
mov
pop
cmpb
pslld
add
inc
and
cmpb
pop
lcall
sbb
insl
lret
aam
ret
jno
and
cs
jae
adc
cmc
leave
push
sub
jecxz
push
insl
cs
in
push
mov
fistpll
inc
sahf
nop
and
addl
mov
es
std
xchg
adc
pop
sub
dec
push
iret
xor
lret
outsl
cmp
sti
call
lahf
fs
dec
cmpsl
movsb
cmpsb
stos
ss
xor
bnd
out
sub
into
mov
nop
shl
into
shlb
hlt
lret
jno
fldt
test
fcmovnu
aad
pop
aas
leave
repz
cmpsb
pop
mov
and
mov
mov
hlt
xor
add
dec
adc
aaa
lcall
fisubl
jge
dec
icebp
mov
dec
sbb
inc
sbb
jo
mov
repz
adc
sbb
cld
cs
or
pop
clc
xchg
xchg
pop
sub
loopne
push
call
xorb
shlb
ror
sub
arpl
dec
adc
mov
cmp
and
jecxz
cwtl
std
popf
orb
movsb
popf
jmp
mull
push
mov
out
cmp
mov
scas
jle
hlt
adc
jae
fcomi
pop
std
iret
outsl
push
rorb
fwait
hlt
lock
into
sbb
aaa
jae
push
add
stos
jge
pop
iret
push
mov
mulb
lods
fsubrs
add
jl
sbb
xchg
push
sub
push
lret
push
push
or
lahf
push
mulb
movl
dec
sbb
inc
add
xor
test
sub
adc
icebp
inc
and
push
test
sub
jmp
push
mov
jecxz
scas
xchg
mov
loopne
and
jecxz
pop
push
sub
scas
jnp
iret
test
std
mov
js
ja
pushf
mov
cli
xchg
fcomps
mov
inc
imul
sbb
fcoml
dec
mov
loope
jecxz
fwait
clc
icebp
mov
xchg
mov
dec
xchg
les
out
xchg
add
push
cmc
sub
movsl
test
ljmp
mov
xor
pop
xchg
in
jb
ljmp
pop
push
dec
dec
pop
pusha
lcall
jle
fadd
push
add
fildl
cmp
sub
mov
into
mov
adc
lods
addb
adc
xchg
adc
orl
mov
fsub
xor
loop
sbb
inc
sbb
fistl
fildll
out
lods
mov
mov
sub
cmp
mov
xchg
push
testb
nop
jno
ds
push
fidivrs
inc
mov
sub
sub
aas
xlat
daa
or
je
fadds
pop
sbb
jnp
imul
hlt
xor
adc
je
or
push
pop
jmp
and
repnz
into
sbb
dec
out
sub
dec
ss
sub
push
mov
mov
xlat
dec
inc
jge
cli
and
dec
add
adc
push
push
xchg
jb
fsubl
je
lea
ljmp
mov
sbb
pop
pop
jecxz
inc
cmp
adc
loopne
and
ljmp
in
addb
add
pop
mov
pop
cltd
into
push
notl
dec
sub
xor
sahf
out
out
adc
rcrb
sub
mov
adc
push
dec
mov
ds
jae
inc
das
outsb
xchg
clc
arpl
cmp
xchg
aaa
mov
stos
xchg
inc
push
add
jae
repz
ljmp
outsb
stos
add
sub
in
repnz
jb
mov
mov
xor
dec
ljmp
fisttpll
pop
clc
test
pop
push
fnstenv
popf
adc
fs
push
loopne
mov
dec
inc
imul
push
or
shr
jge
cwtl
pusha
in
cmp
pop
scas
jle
out
jg
xor
sbb
cmp
and
jae
push
js
rcr
mov
out
aaa
loop
inc
pusha
insb
jae
mov
push
or
fwait
mov
or
mov
add
insb
nop
aam
push
mov
pop
repz
jb
rcr
adc
enter
fisubrs
add
repz
fcmovnu
in
orl
sub
cwtl
pop
xchg
mov
popf
stos
mov
popf
lods
mov
scas
xor
int3
dec
xchg
adc
insl
enter
shl
inc
enter
mov
and
xchg
mov
mov
pop
xchg
fdivl
sbb
icebp
and
lock
sub
nop
inc
dec
cmpsb
mov
rolb
pop
fiaddl
enter
lods
jmp
xchg
scas
insb
lret
repnz
cmp
mov
inc
adc
rcrl
cmp
rcrb
imul
push
test
cmpsl
testb
pop
jns
repz
fwait
xchg
pop
sar
push
lock
jg
ficoml
xor
das
or
test
jb
pop
fisubrl
jmp
popf
sbb
jg
xchg
xchg
iret
stc
ss
enter
push
lods
and
lods
cmc
call
js
push
inc
or
repz
sub
mov
bound
mov
lea
xlat
insl
ja
inc
sbb
repnz
xchg
or
dec
mov
scas
mov
mov
cmpsl
dec
mov
hlt
jae
cmp
jg
mov
jne
ja
leave
pop
sub
notl
sti
cli
out
mov
add
lret
adc
dec
in
shll
jnp
mov
scas
lds
js
stos
or
sub
hlt
dec
xor
arpl
lods
pop
fistpll
test
adc
enter
ds
fcmove
add
out
inc
lea
insl
mov
adc
arpl
push
rorb
ja
pop
and
shl
push
scas
pop
call
iret
push
cmp
popf
push
lret
mov
xchg
ljmp
into
inc
or
hlt
test
sbb
jae
fwait
jbe
into
xchg
jnp
adc
xchg
fnstsw
dec
xlat
cmp
rorb
sub
loop
in
jnp
push
in
bound
xchg
cmp
test
popa
ret
pop
pop
cmpsb
arpl
jecxz
sbb
xor
cmp
xchg
mov
jg
xorb
stos
dec
fisubs
adc
xor
lret
mov
lea
jmp
xchg
in
inc
sub
in
andb
in
dec
xlat
push
jecxz
add
dec
or
ljmp
xchg
xchg
cmp
fildll
add
mov
push
mov
aaa
daa
or
jns
icebp
aad
ret
jecxz
call
pop
pop
xchg
xor
mov
int
sarl
fstpl
jge
xor
hlt
cmpsb
xor
imul
pop
jl
inc
shl
and
xor
js
stos
outsb
dec
scas
sti
sub
xchg
push
scas
xchg
out
dec
cmp
adcl
push
nop
and
inc
popf
jne
jmp
movsl
push
xor
pop
jae
in
leave
insb
cld
add
cmp
test
jp
jbe
mov
or
scas
ja
pop
xchg
cmp
and
fwait
lahf
pop
out
pop
sub
push
cmp
sub
fsts
call
ror
jb
push
cmpsb
lahf
xor
inc
push
sub
sub
out
les
sbb
out
xor
mov
in
dec
into
inc
lds
ret
test
mov
daa
int
dec
mov
shld
adc
xor
fiadds
mov
daa
mov
pop
or
push
scas
enter
andb
xor
test
call
jmp
sbb
frstor
inc
lods
test
lods
ret
and
jne
sub
aaa
daa
loope
imul
mov
dec
jns
orl
stos
movsb
out
data16
ds
iret
fsubrs
out
cmpsl
mov
mov
cltd
into
mov
loop
js
cmp
sbbb
push
test
push
sbb
jo
orl
pop
out
xchg
cmp
shrl
xchg
repnz
adc
sub
aas
ljmp
rcrb
xchg
sbb
dec
mov
xchg
cmp
or
arpl
mov
add
and
negl
pop
movsl
dec
xchg
add
dec
pop
sub
repnz
mov
mov
lock
leave
test
ror
push
lds
mov
jecxz
pop
loopnew
xchg
leave
pop
xchg
lods
jns
sbb
ret
sti
cmp
minps
pop
mov
sahf
out
cld
stc
cmpsb
mov
icebp
dec
dec
dec
xchg
xchg
int3
sbb
lahf
ds
inc
xchg
stos
adc
sub
in
imul
mov
and
xor
test
jle
dec
add
inc
data16
stos
stos
ret
mov
inc
dec
mov
idivb
xchg
int
cmp
out
adc
hlt
shlb
nop
fsubrl
outsl
mov
hlt
rolb
outsb
ljmp
shll
loopne
test
dec
insl
and
xor
sbb
mov
push
sbb
std
mov
or
mov
and
ss
cmpsl
imul
in
out
pop
loop
sbb
fidivs
xchg
fiaddl
inc
mov
into
pop
repz
leave
or
outsb
std
jbe
sbb
cld
lret
push
bound
sbb
insb
sarl
es
cmp
inc
out
mov
xor
lea
xor
jge
jo
mov
movsl
lock
xchg
cmp
rcrl
add
rep
ret
int3
jmp
dec
in
fdivrs
fwait
push
out
push
mov
jge
inc
pop
xchg
or
cmp
xchg
sub
inc
mov
cltd
cmc
add
outsb
repnz
icebp
adc
or
jle
sarl
rsqrtps
dec
xor
enter
push
ret
jmp
out
mov
xlat
cmp
hlt
movsl
push
mov
sarb
sarb
adc
pusha
stc
pop
sbb
mov
lods
push
loopne
push
jbe
and
sub
pop
dec
adc
xchg
lods
lock
mov
addr16
jno
ret
stos
pop
cwtl
repz
xor
xchg
xor
test
outsb
add
cmp
movsb
cli
push
bound
out
push
scas
xchg
mov
xchg
cmp
cmp
xor
fnstenv
rol
mov
mov
arpl
push
jo
icebp
subl
loopne
out
mov
loop
sbb
sbb
push
in
sbb
and
add
jo
add
repz
pop
pop
xor
scas
les
shrb
ja
loop
inc
push
ljmp
push
bound
scas
stc
sub
inc
push
sub
add
bound
adc
arpl
clc
out
mov
push
repnz
adc
pop
adc
imul
xchg
lret
xchg
jl
pushf
inc
mov
and
insb
push
mov
orb
jns
dec
fnstenv
lods
rolb
add
jnp
fcoms
jno
ja
mov
mov
cmp
xchg
test
outsb
sbbl
xchg
mov
xor
subl
adc
sub
aad
push
mov
xchg
cmp
bound
and
insb
loopne
push
xor
movsb
add
jae
repz
inc
mov
rclb
lret
inc
leave
or
fwait
sbb
icebp
sub
push
jae
mov
ret
inc
and
or
jle
mov
loope
cltd
inc
mov
sub
clc
push
fs
scas
jno
or
test
xchg
cmp
adc
insl
rcr
cmpsl
inc
out
mov
add
jae
ss
xor
cltd
jb
cltd
sub
roll
test
push
std
addb
stos
enter
lea
stos
dec
pop
pusha
fnsetpm(287
clc
pusha
bound
inc
sub
mov
fstps
shrl
scas
jmp
mov
lea
xor
into
dec
insb
je
repnz
jne
stos
orl
call
add
xor
cwtl
sub
cmpl
xchg
and
mov
adc
inc
lods
pusha
movsl
mov
adc
jecxz
inc
mov
mov
shll
stos
dec
adc
in
lds
call
jp
nop
into
fisubrs
gs
dec
adc
sub
cmp
jae
stos
adc
loope
xchg
adc
mov
xchg
push
out
dec
adc
mov
xchg
xchg
and
inc
fmul
insl
fstp
mov
xchg
ja
cmpsl
cmp
gs
js
movsb
stc
ljmp
lock
mov
fisttpll
jl
mov
inc
stc
push
push
in
fisubs
adcl
inc
in
call
cmpsb
rcrl
sub
sti
mov
cmp
xchg
movsb
mov
add
pusha
jae
repnz
xor
push
fidivrl
fadds
arpl
and
push
dec
je
stc
adc
dec
cmp
push
outsl
inc
nop
xchg
adc
cltd
notl
lock
imul
push
pop
lret
in
xchg
dec
arpl
ret
ret
pop
add
insl
ljmp
mov
adc
xchg
in
mov
sbb
adc
xor
loopne
fs
jg
inc
jo
lea
iret
cmpsb
cmp
xchg
xchg
mov
push
pop
and
aad
adc
pop
incb
cs
dec
xchg
out
and
jge
xor
aad
dec
xchg
outsb
xor
leave
sbb
inc
push
adc
pop
jbe
dec
mov
cmpsb
sahf
fidivrs
pop
mov
in
insl
mov
xor
xor
add
jecxz
ds
mov
es
inc
push
push
jge
mov
or
ds
push
and
ljmp
mov
jae
arpl
or
lahf
jnp
mov
dec
call
add
pop
bound
test
lcall
dec
sub
mov
mov
lret
loopne
xor
and
rcll
fistps
fmull
adc
push
lret
sbb
stc
mov
std
stos
xor
mov
mov
or
adc
inc
lahf
push
in
inc
inc
pop
jbe
fimuls
dec
hlt
sbb
aad
add
xor
lret
and
mov
jae
fildl
add
lea
mov
addr16
hlt
add
outsl
ljmp
cmp
push
loope
fmul
jbe
mov
sbb
enter
push
dec
das
push
cltd
jne
sbb
flds
idivl
jp
imul
cmp
cmc
add
cmp
xor
aam
mov
cld
inc
mov
lock
mov
push
out
fildll
cld
jmp
sub
stos
sahf
jae
jmp
movb
push
jmp
mov
repz
add
push
xchg
push
sti
in
dec
repnz
pop
arpl
mov
push
gs
data16
xchg
mov
fisubrl
cmp
adc
add
mov
das
dec
or
lahf
loopne
loopne
cmp
push
cmovl
push
scas
movsb
adc
mov
or
fildll
xlat
mov
cwtl
ljmp
cmp
es
aas
inc
dec
cmp
add
xor
pop
fwait
imul
cwtl
jno
and
lea
inc
mov
arpl
pushaw
das
imul
pushf
outsl
in
gs
inc
movsb
pusha
xor
iret
cmp
pusha
mov
out
and
push
sbb
es
inc
pushf
xchg
sub
enter
jb
push
cmpsl
xchg
frstor
sbb
xchg
add
jns
push
shll
add
pop
leave
bnd
cmpb
mov
mov
push
sub
clc
cmpsb
add
dec
mov
xchg
lahf
sbb
cmp
lods
jne
sub
adc
lret
jbe
mov
movsl
mov
dec
popa
sbb
and
insl
addr16
jbe
cld
sbb
loop
cs
bound
push
pop
insb
cmp
fidivrl
push
mov
shlb
pop
in
outsl
sarl
xor
dec
xor
jle
adc
cmp
loopne
push
daa
add
or
jge
cs
stos
pop
imul
pushf
out
ss
mov
xchg
dec
push
mov
ljmp
pop
fdivrl
int
mov
lcall
in
inc
loopne
and
inc
jp
xor
sub
push
pop
or
mov
jg
ja
inc
mov
hlt
pop
cli
mov
clc
das
imul
mulb
stos
rcrl
adcl
shlb
adc
xlat
scas
xchg
sbb
scas
and
xchg
mov
mov
mov
fnstcw
shrl
push
stos
das
jl
test
xchg
xchg
cs
movsl
cmp
xor
rclb
hlt
inc
jb
cmpl
in
jp
decl
ds
dec
push
inc
lds
sub
in
add
test
cli
sub
push
push
inc
sub
xor
je
imul
xor
repnz
mov
test
cli
ror
imul
push
mov
cmpsl
scas
int
sbb
push
out
std
xor
lcall
jnp
mov
dec
mov
stc
arpl
rol
mov
ja
aad
inc
or
cmp
les
cmc
dec
mov
adc
sub
iret
sbb
add
sub
jo
push
fidivrs
dec
dec
and
cmp
pushf
inc
cmp
in
xchg
mov
fistpll
int3
cltd
sbb
xor
ljmp
mov
insb
and
mov
jae
rclb
scas
ja
jno
add
insb
inc
xchg
shlb
dec
mov
lds
shlb
xchg
add
mov
popa
add
and
or
cmpsl
jo
adc
clc
sbb
xchg
mov
pop
imul
jbe
inc
jo
fidivs
inc
fcmovnbe
cmp
movsl
cmp
sbb
fimull
fs
and
xchg
cmp
popf
ja
fisttps
test
cmpsl
xchg
cld
ret
inc
add
cld
sbb
pop
lret
mov
add
pop
mov
hlt
jno
push
stos
dec
cmp
sbb
int
clc
arpl
or
pop
sahf
loope
into
insb
mov
push
mov
into
mov
push
not
in
loope
inc
sub
cli
xchg
pminsw
sahf
mov
inc
push
dec
or
sub
and
xchg
xchg
inc
xchg
mov
mov
pop
push
int
aad
pop
xchg
jp
loop
in
test
mov
ja
mov
inc
out
mov
pop
mov
xchg
push
hlt
cltd
inc
xor
mov
jno
nop
lock
dec
popf
inc
cmp
inc
xchg
mov
dec
enter
mov
xchg
inc
lods
sub
inc
out
push
fadds
jecxz
dec
rcl
lock
int3
mov
pusha
imul
icebp
lcall
jmp
lcall
shlb
out
xor
out
stos
mov
scas
aad
xchg
mov
out
jle
add
outsl
jmp
ljmp
push
push
sahf
cmpsl
lods
mov
enter
insb
rcrb
xor
jo
bound
xor
or
pop
sbb
jmp
loope
lahf
repz
repnz
sbb
push
out
push
pop
mov
xchg
inc
imul
loope
aas
jp
test
xorl
shlb
push
jno
dec
jae
sub
mov
subb
sub
dec
pop
sahf
aas
leave
fbld
lret
jne
leave
and
loop
fisttps
outsl
ljmp
inc
cli
sbb
xor
ss
push
mov
cmp
mov
movsl
pop
lret
cmp
mov
pop
adc
std
mov
lods
mov
pop
pop
jle
dec
sbb
out
xchg
outsl
sub
sub
movsl
cmc
dec
movl
inc
filds
pop
cmpsl
jg
pop
sbb
xchg
test
cmp
and
xchg
es
and
icebp
outsl
pop
pop
test
ret
pushf
adc
in
or
enter
aad
clc
enter
cmp
sbb
data16
mov
and
push
test
stos
mov
rclb
add
mov
xchg
dec
xchg
and
enter
push
or
or
xchg
mov
pop
test
pop
pop
push
dec
andl
ljmp
out
mov
cmpl
sub
data16
fwait
jb
jl
nopl
mov
xchg
fidivrl
cmp
filds
jmp
arpl
jno
cmp
pusha
xchg
pop
push
sub
je
xor
cmp
fdivp
je
psubd
xor
xlat
ss
adc
cmpsl
xor
mov
push
add
in
mov
shlb
adc
mov
jle
xor
cld
das
mov
psubusb
btr
push
push
pop
jecxz,pn
cs
and
nop
add
jno
dec
xor
loop
ret
sbb
xor
sbbl
lret
cmc
pop
lea
fisubl
shlb
cmp
pop
xor
pop
or
push
mov
arpl
xchg
popa
pop
or
dec
xchg
push
mov
addl
mov
add
in
sub
add
push
jge
or
or
scas
out
repz
xor
pop
insl
sub
shlb
loopne
xchg
inc
push
rol
mov
xchg
jle
clc
inc
pop
int
jns
daa
add
imul
xlat
and
lret
and
iret
sbb
cmp
cs
xchg
movsb
xor
sub
andl
ss
loopne
mov
cmp
fdiv
js
in
mov
dec
mov
mov
push
sbb
push
xor
ret
mov
adc
dec
out
mov
daa
out
stos
int
jg
icebp
or
mov
lock
push
mov
mov
clc
add
pop
or
mov
flds
dec
pop
mov
fmull
mov
or
cwtl
cltd
and
sub
gs
imul
pop
dec
and
adc
pusha
jo
mov
pushf
ss
imul
data16
clc
pop
fisttps
xor
mov
inc
sub
sbb
push
inc
shlb
xor
fst
sbb
and
cmp
int
into
xor
lock
test
sub
data16
jo
sarb
mov
adc
add
sbb
sub
pop
mov
sub
sbb
mov
ret
bound
daa
xorb
push
mov
pop
in
add
aaa
fidivrs
add
jno
ret
xor
nop
or
out
pushaw
cmc
test
sub
aad
in
clc
pop
push
popa
sahf
mov
loopne
shlb
cmpsb
fwait
push
adc
addr16
jb
lcall
jnp
jle
mov
in
push
dec
loop
dec
ficoms
enter
jno
les
mov
cmpsb
fucomip
push
dec
cmpsb
fsubrl
pop
cli
xlat
add
cltd
mov
mov
mov
test
jns
divb
push
aad
and
js
xlat
inc
push
cmpb
popa
imul
scas
push
test
xchg
sub
inc
pop
jno
mov
flds
pusha
fisttpll
dec
inc
lods
mov
push
cmpsb
data16
push
lea
lds
insl
lcall
mov
lret
testb
gs
lcall
cmp
jmp
mov
cmp
outsb
sub
mov
mov
or
fdivrl
xchg
sbb
pop
inc
cwtl
nop
lds
push
dec
data16
sbb
nop
lret
cmc
push
aas
sub
lock
jge
xchg
in
adc
sbb
jno
jp
leave
loop
mov
jp
sbb
sub
cmpb
add
jg
jb
cmp
sub
lahf
dec
push
inc
fldl
lock
lock
mov
popa
jmp
xor
inc
aas
and
int
aaa
arpl
mov
mov
call
insb
xlat
cmp
sub
lock
mov
jb
push
mov
mov
into
test
push
sti
jge
jno
mov
dec
insl
testl
addr16
or
and
jecxz
sbb
movsl
sub
mov
mov
ret
call
jbe
push
aaa
not
mov
adc
shll
add
inc
ret
cmp
mov
fwait
in
cs
hlt
mov
inc
shrb
pop
jge
add
add
cwtl
mov
inc
or
fs
mov
adc
cltd
test
jbe
pop
or
imul
lds
out
xchg
sub
inc
jne
adc
int
out
repz
int
jge
movsl
xchg
mov
and
push
cmp
xchg
bound
in
dec
cmpsl
cmp
mov
fwait
mov
cmc
inc
mov
mov
icebp
orl
mov
dec
fwait
and
mov
push
cmpsl
and
adc
cmc
andl
adc
cwtl
sub
into
popl
leave
add
sub
lock
add
xchg
adc
neg
and
lret
fmuls
test
out
jns
mov
push
and
xchg
and
push
out
rorb
and
popf
jbe
test
shrl
mov
test
add
pop
push
sbb
jecxz
jecxz
rolb
leave
push
es
xchg
add
pop
notb
enter
or
ss
jmp
lock
movsb
dec
or
neg
cmpsb
popa
dec
and
inc
fildl
pop
rcrl
cs
or
xor
dec
mov
in
push
push
les
inc
inc
flds
inc
sbbl
iret
fwait
xchg
sub
decl
and
lret
outsl
and
cmp
bound
dec
out
mov
fildll
adc
movsb
insl
and
aam
adcl
sahf
aam
leave
cmpsl
xor
or
cmpsb
loop
push
fsubs
insl
dec
push
xchg
lahf
mov
jl
sahf
scas
pushf
rcrb
jecxz
pop
ss
aaa
fnsave
aad
aas
fisubrl
mov
dec
int
test
pop
addb
add
jno
dec
mov
jmp
das
or
test
scas
ss
mov
rol
jnp
pmullw
push
push
add
cwtl
or
cwtl
outsb
jmp
xor
scas
adc
lcall
icebp
cmp
neg
rorb
ljmp
pop
loopne
jp
add
jl
mov
jmp
mov
dec
clc
jno
aam
xlat
mov
cmp
mov
adc
dec
incl
cmp
cmp
dec
hlt
test
inc
ds
mov
jbe
insb
jne
jne
arpl
out
ja
enter
dec
mov
push
aam
jmp
mov
xor
std
add
lods
icebp
shll
inc
push
dec
pop
loop
fdivs
in
sub
stos
ljmp
cmp
inc
mov
mov
scas
mov
mov
fucompp
sub
mov
dec
xor
xor
push
mov
add
pop
ficomps
inc
loope
lods
xchg
xchg
mov
inc
push
mov
mov
loopne
inc
ja
sbb
lds
inc
pop
fs
loope
mov
cli
pop
and
xchg
or
dec
inc
adc
loop
push
xor
and
mov
scas
sub
xor
andl
js
sahf
or
pop
pusha
mov
stc
inc
lock
cwtl
push
dec
sbb
hlt
xlat
xor
das
inc
dec
cmpsl
int3
cwtl
xchg
add
sbb
jb
mov
lds
fldcw
cmp
pop
cbtw
mov
nop
pop
dec
out
inc
in
mov
sbb
push
repz
add
cmpsb
dec
push
fbld
adc
adc
divl
daa
stc
add
popl
inc
fdivrp
stos
imul
notl
ret
sub
cmpsb
addr16
icebp
jno
sub
ljmp
out
mov
mov
das
pop
iret
icebp
scas
and
int
test
shlb
sti
in
jns
sub
or
ja
jne
xor
inc
movsl
push
push
jecxz
sahf
xor
pushf
les
lret
jecxz
adc
into
cmp
mov
outsb
xchg
dec
inc
loope
int3
or
fwait
sub
xchg
push
imul
xor
xchg
pop
stc
dec
cwtl
daa
test
fdivrl
loope
pusha
dec
cmc
mov
sbb
nop
shrb
xchg
xor
fadds
pop
mov
jae
sub
jns
add
mov
sub
mov
or
mov
jnp
sarl
std
or
and
insl
inc
pop
adc
fldcw
xor
pop
inc
jbe
mov
push
inc
imul
sub
xor
push
loop
imull
das
push
cmpsb
lods
ficoml
enter
and
mov
out
and
push
xorl
or
mov
sti
pushf
dec
inc
dec
aad
sahf
lods
or
out
repz
je
out
push
push
jo
out
push
inc
mov
enter
or
jecxz
inc
test
pusha
sti
jbe
mov
out
jg
mov
sbb
jp
int
shll
pop
stc
push
mov
xor
pop
jbe
icebp
sbbb
es
adc
add
shlb
push
call
sbb
std
jl
mov
les
loopne
ficompl
mov
jno
push
xchg
mov
fwait
pusha
outsb
inc
push
clc
lods
adc
movsb
mov
sub
push
mov
mov
popf
fmul
hlt
push
pop
shlb
sbb
test
dec
call
ljmp
mov
clc
and
mov
pop
jp
push
mov
jmp
push
loopne
je
movsb
or
out
imul
xchg
dec
mov
mov
cli
xchg
test
jae
or
aad
stc
out
stos
sbb
stc
repz
push
sub
daa
jecxz
sub
dec
mov
mov
std
popa
imul
push
daa
xchg
mov
xchg
addl
cs
iret
.byte
sbb
add
or
adc
mov
mov
rclb
mov
fsubrs
stos
lea
addr16
push
roll
mov
xor
lods
push
push
icebp
mov
outsb
stos
or
xchg
mov
fistps
xor
jl
mov
cmp
mov
fbld
ret
out
enter
mov
sub
fisttpll
dec
adc
and
push
jecxz
xchg
inc
scas
mov
push
mov
pop
mov
roll
jecxz
int
or
mov
test
daa
pop
sarb
mov
pop
lea
faddp
push
fbstp
mov
icebp
mov
popa
jmp
cmc
pop
sub
mov
push
sbb
pop
pop
ss
push
scas
shlb
scas
lret
mov
rep
cmpsb
cli
aam
test
push
lcall
push
and
dec
shll
adc
inc
ror
leave
dec
popa
in
fstl
addr16
push
stos
icebp
xchg
cltd
xchg
inc
mov
adc
std
xor
xor
in
sar
mov
sarl
out
mov
scas
in
lods
test
push
dec
shll
in
les
inc
xchg
jge
jb
test
stc
imul
out
jno
stc
clc
shl
jbe
scas
xchg
rol
jno
out
ret
outsl
pop
mov
addr16
sbb
sub
sbb
and
cmp
jle
sbb
xchg
sbb
mov
enter
rclb
jns
dec
aas
stos
adc
mov
or
je
push
mov
test
inc
outsb
dec
inc
add
xorb
movsb
gs
dec
cs
mov
cmpl
ret
inc
outsl
das
jmp
popa
int3
ret
mov
mov
pop
outsb
pushf
lahf
jns
leave
rol
loop
mov
sub
xor
ret
pop
in
jns
mov
cld
lahf
aas
mov
int3
pop
cmp
inc
push
stc
mov
in
jbe
jecxz
jecxz
lcall
out
insb
clc
in
dec
mov
daa
setae
dec
bnd
mov
cmpsl
jbe
mov
int3
or
insl
insb
jle
fimull
stc
bound
xchg
sub
jmp
out
stc
divb
dec
cwtl
pushl
inc
cmpsl
dec
pop
fmull
sbb
sbb
mov
out
mov
dec
dec
and
mov
cmp
imul
add
push
pop
repnz
jno
fldl
xlat
inc
gs
mov
jo
mov
stc
adc
cmp
sub
enter
pop
inc
adc
scas
outsl
dec
adc
add
pushf
push
xor
jl
add
push
sbb
jo
xor
push
aam
jge
ds
xchg
jne
fdivl
subb
adc
sub
fstpt
mov
iret
sbb
push
cmc
out
push
sar
repnz
enter
cmp
les
out
sbb
rcrl
adc
call
mov
lods
push
jae
es
jmp
jnp
push
xchg
fwait
dec
sub
subl
aaa
loopne
mov
daa
push
std
push
lahf
leave
mov
inc
inc
jl
bound
jne
cmp
or
cmc
sub
je
cmc
in
aas
movsb
or
in
fwait
insl
loop
dec
lcall
mov
push
xchg
enter
push
data16
call
int3
stos
add
pop
mov
inc
mov
xor
jp
add
xlat
add
jge
aam
fbstp
jle
movsb
mov
sarb
mov
outsl
lods
sbb
push
add
fsubrl
test
xor
xchg
rolb
outsb
inc
and
cmp
jmp
mov
adc
adc
mov
xchg
pop
xor
push
and
and
push
outsb
mov
dec
mov
nop
jbe
inc
adc
cli
mov
or
repnz
mov
push
inc
movsb
shl
cli
aad
int
ret
std
call
ret
pop
jae
loop
and
in
daa
adc
lret
lock
mov
lret
adc
pop
shll
aas
fdivrp
jae
push
mov
or
push
cs
xchg
cmpsl
cmp
ljmp
sbb
pop
xchg
jg
or
ljmp
repz
inc
adc
jle
xchg
sub
jg
cmp
daa
sub
imul
push
mov
pop
ss
or
sbb
loopne
push
std
lret
push
icebp
fsubl
xchg
jnp
inc
int3
xor
push
cmp
inc
pop
rclb
jns
jp
xchg
leave
popa
movsl
mov
xchg
imul
ficoml
ja
les
scas
pop
fcmovu
and
lock
sub
fsubs
add
lcall
mov
dec
mov
aas
scas
jne
pop
lret
lods
lods
cmp
lock
mov
xor
loope
fnstsw
test
outsl
ja
ror
xchg
lret
inc
pop
xor
push
in
sub
inc
mov
push
pushl
subl
adc
fsubr
xchg
cmp
mov
push
dec
push
mov
pop
out
je
or
cmp
out
lret
push
notb
xchg
mov
dec
fstl
aam
sbb
add
pop
out
rorb
push
cmpsl
mov
xchg
xor
aam
inc
jnp
pop
inc
mov
sbb
xor
subl
in
cmp
mov
xor
mov
ljmp
xor
dec
push
jnp
data16
and
jae
push
jne
lods
mov
jmp
inc
push
scas
sbb
xor
dec
mov
ret
jnp
sbb
in
or
stos
pop
cmp
push
ret
sub
mov
iret
pop
xorl
xchg
adc
or
xlat
cli
push
mov
inc
pop
and
mov
xchg
mov
fs
cmc
add
in
adc
aas
mov
push
add
or
cmp
call
sub
mov
int3
bound
inc
pop
fisttps
pop
dec
sub
in
mov
dec
pop
dec
push
inc
cmp
imul
jno
loopne
subb
mov
sbb
pop
or
movsl
pop
jecxz
sub
out
adc
add
jo
dec
xchg
pop
stc
inc
fisttps
insb
dec
fsubrs
push
sahf
repnz
loopne
cmp
mov
bound
mov
sub
out
popa
and
mov
int
xor
loop
popf
jno
lock
push
push
in
or
cmp
push
or
add
sbb
cmp
sub
sbb
lret
adc
mov
inc
inc
push
sub
xlat
cmpsb
repz
jbe
es
mov
mov
inc
xor
push
fistps
in
icebp
lret
testb
xor
mov
fildll
sbb
ds
cwtl
or
jnp
ja
mov
jno
push
cmpb
arpl
add
into
sub
ficomps
addl
dec
xchg
sbb
push
add
fnsave
outsb
js
pop
insl
ljmp
lret
or
sarb
mov
call
adcl
push
aam
fwait
mov
mov
push
and
rcrl
fisttpl
and
mov
mov
jg
push
adc
imul
ja
mov
lcall
mov
mov
std
cmp
popw
mov
aad
outsl
gs
gs
int
mov
mov
push
push
or
mov
xor
push
sti
sub
cwtl
xchg
fdivs
xor
sub
aad
mov
mov
pop
mov
or
sbb
repz
cmc
loope
jbe
cwtl
ret
call
sbb
arpl
aaa
jne
daa
pushf
cmp
mov
lcall
adc
cmp
jecxz
es
sti
movsl
movsl
mov
repnz
pop
fwait
pop
dec
add
pop
push
cmp
mov
pop
push
scas
cmpsl
pusha
bound
fnstenv
cmp
cmpsb
push
stos
jnp
test
leave
jg
repz
dec
scas
je
int
aas
or
push
push
lea
inc
testl
add
push
or
mov
xor
push
adc
pop
push
inc
lea
pusha
push
inc
or
neg
mov
or
jae
pop
nop
pop
pop
mov
sub
iret
mov
daa
push
xlat
popf
js
or
test
pop
das
dec
inc
xchg
jecxz
aad
dec
lds
adc
push
nop
sahf
pop
loopne
pop
jo
arpl
jp,pt
fadd
push
loope
cmpsl
les
in
in
das
stos
add
or
push
mov
push
cmpsl
pop
xor
and
stos
mov
mov
jl
push
call
jo
sbb
aas
sub
sub
rol
fidivs
test
leave
lods
add
xchg
adc
ret
pop
insb
mov
leave
in
sahf
into
sbb
push
jge
or
dec
das
stc
and
je
lods
sbb
das
jae
dec
mov
iret
inc
dec
das
sahf
dec
push
cli
movsl
insb
dec
mov
mov
xor
push
sbb
notl
adc
cmp
add
xchg
nop
cltd
sub
xchg
pop
and
mov
ret
mov
adcl
xchg
cltd
mov
mov
fwait
cmp
pop
shl
in
popa
and
inc
stos
mov
xchg
adc
cmc
dec
jae
cli
fidivs
or
jl
push
push
jmp
mov
or
lcall
inc
or
jae
mov
mov
imul
sub
mov
clc
cmp
cmp
mov
rolb
inc
ds
shrb
ljmp
std
jb
sbb
stc
das
je
test
arpl
push
add
xor
lods
je
repz
test
mov
mov
in
fs
daa
dec
out
mov
imull
push
mov
dec
repz
pop
fstps
mov
outsl
inc
mov
insl
add
bound
shlb
ror
rcrl
mov
je
mov
mov
xor
dec
je
pop
test
and
cmp
enter
insl
int3
adc
mov
and
sbb
xlat
mov
mov
push
std
xchg
pop
pop
jae
xchg
lea
add
out
sub
pop
cmp
outsb
mov
jb
int
insb
or
jo
icebp
push
inc
pop
repnz
adcb
out
andb
lret
frstor
cmp
mov
clc
sahf
xchg
js
add
lock
rcl
cli
pop
jne
ret
inc
ret
lods
inc
loopne
cmp
jbe
sbbl
mov
cmp
push
mov
scas
imul
xchg
mov
pop
push
enter
xchg
sub
loop
mov
orl
sub
push
mov
inc
roll
dec
lret
jmp
in
mov
test
ret
lahf
cmp
xchg
push
outsl
adc
shlb
xchg
pop
scas
test
lret
fistpll
lret
int3
les
loopne
ja
xor
or
fcompl
mov
xlat
mov
xor
test
mov
mov
rcrb
out
mov
inc
cmpsl
mov
adc
cli
data16
mov
mov
int
sti
push
xlat
push
mov
mov
stc
popf
ja
pop
aas
mov
mov
push
mov
lea
xor
inc
mov
nop
int
and
in
sbb
adc
sub
mov
sub
jbe
or
divl
stc
lcall
ds
enter
xlat
inc
xchg
insb
xchg
inc
adc
mov
outsb
jl
push
jno
shl
stos
xchg
pop
ficompl
push
or
testl
inc
sub
shrb
xchg
cmpsb
popa
jbe
stc
or
mov
cmp
mov
pop
loopne
dec
sbb
aas
mov
dec
push
data16
ret
xor
xor
repnz
pop
adc
jmp
leave
mov
jp
imull
ret
or
shrl
dec
push
xor
fisttpll
xchg
pop
cmpsb
push
jecxz
insl
pop
or
mov
sbb
test
outsl
pushf
mov
cmp
dec
push
xchg
lods
in
xor
or
mov
sub
das
jmp
xchg
dec
ret
je
jnp
xchg
pushf
testl
fisubl
dec
aaa
xor
shll
push
rcl
mov
and
dec
jno
pop
add
push
dec
adc
shll
xchg
repnz
jns
decb
mov
push
pushf
mov
inc
gs
push
adc
pusha
mov
movsl
sub
adc
hlt
jle
out
sub
mov
push
in
or
rcl
add
iret
mov
and
mov
lahf
jnp
add
in
dec
in
bound
adc
mov
lret
addl
shl
jmp
xor
jbe
lahf
add
es
and
dec
pop
push
cmpsb
pop
scas
dec
lcall
cmc
movsl
cmp
and
das
add
push
iret
mov
add
mov
cmp
arpl
inc
or
outsl
dec
int3
int3
test
pop
sub
push
das
sub
fdivr
inc
lahf
cli
mov
mov
push
push
cmpsb
push
mov
sub
adc
loope
daa
loop
loope
jp
sbb
mov
add
popa
cmp
iret
and
addr16
sub
popf
stos
adc
push
lret
inc
pusha
mov
adc
xchg
bound
in
push
rcrb
popa
mov
dec
add
ds
cmp
add
lea
adc
dec
sbb
xchg
cwtl
xor
jns
mov
or
movsl
add
stos
xchg
aaa
sub
adc
push
fstpt
mov
mov
call
out
adc
int
cmp
jnp
outsl
inc
movsb
adc
dec
ljmp
adc
adc
cmp
and
jno
cmp
mov
sub
loopne
outsb
punpckhdq
aaa
in
aam
ret
lods
jl
and
inc
pop
sub
jl
mov
add
movb
xchg
cmp
xor
or
fsubrs
push
or
dec
pop
mov
rol
or
ret
xor
mov
sub
adc
adc
adc
dec
lock
dec
mov
mov
cmp
cmp
lret
inc
test
push
cwtl
and
mov
mov
arpl
mov
in
cmp
fwait
inc
pop
fnstenv
cld
pop
and
stos
mov
push
scas
mov
idivb
xchg
lahf
hlt
xor
adc
punpcklbw
pop
mov
imulb
mov
aas
xlat
push
scas
fstpl
jns
mov
xchg
mov
rcrl
mov
pusha
xchg
push
popa
lock
ds
sbb
jmp
movsl
xchg
std
in
gs
movsl
jg
sti
pop
push
pop
mov
pushf
jg
jo
repnz
in
cmp
jbe
inc
add
ljmp
int3
rolb
stc
cltd
mov
add
out
fcmovb
dec
push
das
sbbb
stc
xchg
bnd
out
int3
push
sub
daa
jmp
pop
fisubrl
pop
lea
cmc
lret
icebp
mov
push
adc
dec
inc
sbb
sbb
movsb
jl
mov
addl
lods
shl
in
loopne
fcmovnu
push
aad
jp
mov
jno
jge
mov
scas
jl
lds
xchg
ret
xchg
mov
add
inc
ss
test
and
jp
or
pop
je
shll
mov
test
and
test
test
mov
and
int3
cmp
mov
pop
xchg
jmp
aas
loope
shrb
cwtl
shr
pop
ret
sar
and
cmpb
je
adc
mov
jb
shrb
mov
xchg
adc
jg
pop
sub
push
in
out
imul
call
out
sub
xchg
cmp
sub
fimull
xor
lods
das
loop
repnz
sub
xlat
lret
shl
push
test
mov
je
jl
dec
and
push
add
test
sub
outsb
jl
stos
jg
pop
inc
into
pushf
andl
sbb
mov
jno
insl
pusha
stc
cwtl
mov
gs
dec
cli
cld
mov
add
jge
jg
in
jbe
scas
sarb
mov
or
lods
dec
lea
inc
jecxz
xor
gs
adc
outsb
pop
inc
fdivl
xchg
jae
mov
cltd
mov
out
or
iret
stos
sbb
shr
int3
inc
push
push
decl
inc
std
pushf
roll
faddp
rcr
push
sub
pushl
xchg
jmp
das
add
imul
fistpl
shll
jle
iret
push
imul
xor
jo
bound
lret
test
outsb
pusha
mov
lock
cmp
enter
cs
and
add
cwtl
pop
rcrl
icebp
popa
nop
adc
and
push
je
adc
and
fs
and
jmp
push
aaa
pushf
leave
gs
fimuls
popf
dec
cmp
bound
rol
mov
add
mov
xchg
int
popf
and
fwait
arpl
aam
push
cmp
cli
pop
int3
xor
dec
xlat
sbb
adcl
pop
fistpl
mov
inc
pop
aas
cmp
outsb
aas
pop
stos
arpl
mov
or
push
fdivrs
jbe
or
ljmp
mov
insl
adc
das
in
inc
inc
mov
jecxz
push
adc
enter
jle
xor
aad
mov
cmpsl
push
cs
lcall
sahf
dec
loop
dec
cmpl
loope
sub
xor
std
pop
hlt
cmp
icebp
dec
stos
jno
add
xchg
jnp
nop
add
xchg
flds
fdivp
pop
stos
cmp
mov
ret
fmull
xchg
test
jle
in
mov
cmp
jge
les
mov
jne
dec
repnz
mov
mov
adc
cmp
loope
push
int
pushf
enter
adc
xorl
movsb
pop
adc
cmpsb
push
aam
sub
sbb
xchg
lahf
es
andl
bound
adc
lods
in
mov
adc
into
add
mov
ficoml
ds
push
xchg
jp
pop
setnp
ret
fstpl
push
int3
pop
inc
lret
int
imul
loopne
or
sub
inc
rol
mov
dec
fiadds
jg
push
xchg
sub
fsts
push
adc
cmpb
lret
push
cli
pop
stos
jle
cmp
mov
ss
pusha
sbb
add
xchg
and
shll
cmp
mov
pop
pop
js
pop
mov
pop
fmuls
fs
pop
mov
and
cmp
xchg
xor
jmp
mov
mov
gs
pushf
mov
ds
rol
mov
fwait
jp
repnz
adc
fdivr
xchg
aaa
push
pop
jg
in
in
cmp
jae
sub
pusha
push
or
jo
popa
lret
lcall
xor
ljmp
je
shlb
repnz
push
or
ret
mov
pop
ret
imul
mov
popa
cld
mov
imul
out
mov
int3
ss
jp
xchg
jmp
iret
out
loopne
inc
lret
sbb
je
adc
mov
mov
pop
lds
dec
and
ret
xchg
ja
out
cld
mov
movsl
sub
push
mov
sub
pop
jns
adc
push
movsl
pop
negb
mov
rol
out
mov
pop
or
cmc
and
lret
imull
pop
sbb
sbb
movsl
mov
es
pop
jge
test
sbb
fiadds
pop
sub
sbb
sbb
cmp
mov
jmp
jo
mov
lods
dec
dec
xchg
inc
dec
dec
popa
cmpsb
jmp
xor
pop
nop
ret
inc
mov
jae
add
pop
push
jl
das
push
add
jecxz
xchg
lret
jg
and
stos
les
adc
mov
sub
cmp
cmp
or
cmp
adc
xchg
sbb
adc
sub
loope
mov
or
das
outsl
call
push
mov
jb
iret
pop
sub
or
and
sahf
xchg
popa
pop
out
shll
push
push
pop
sarb
jge
sbb
cmpl
jmp
inc
push
sbb
andb
and
xor
or
pop
pusha
das
insb
sub
dec
mov
fistpll
incb
jecxz
mov
push
dec
dec
mov
lods
imul
jnp
sub
xchg
or
mov
cmp
popf
xchg
jmp
sub
cltd
sti
mov
inc
adcb
jle
mov
or
icebp
mov
hlt
iret
cmpsl
in
sbb
dec
jo
inc
sub
and
nop
dec
call
jg
lahf
sub
shrb
add
pusha
rcll
fsubl
pop
test
push
sub
xor
ret
adc
fsubl
adc
mov
mov
out
cmpxchg
sti
je
sahf
jne
dec
mov
mov
pop
nop
rcl
mov
jmp
inc
cmp
xorb
inc
xor
push
jmp
neg
lcall
xor
push
push
insl
cmp
jbe
movntps
jp,pn
xor
or
loope
xor
push
mov
push
pop
push
sub
inc
mov
inc
or
xor
mov
sbb
jno
lret
repnz
enter
pop
adc
add
xor
ja
push
loope
pusha
mov
mov
push
sarl
xchg
pop
in
popf
inc
mov
cmp
xchg
and
jle
sbb
push
insl
jb
jg
adc
dec
sbbl
movsl
dec
mov
xchg
daa
adc
xchg
mov
push
dec
jo
mov
add
mov
push
neg
xor
dec
push
cmp
add
cmp
imul
gs
lcall
mov
inc
fisttpll
sbb
pop
aad
pusha
subl
ja
mov
stos
loope
in
jle
fsts
pop
in
cmp
mov
push
mov
jb
daa
mov
and
push
fisubl
or
cmc
aad
data16
add
xor
dec
cmpsl
rorb
adc
aam
sub
jae
mov
xor
push
in
sti
inc
lcall
xchg
into
pop
in
jl
dec
leave
fmuls
xor
out
jb
in
mov
mov
mov
pop
or
and
inc
popf
ss
jge
test
xchg
ja
mov
dec
dec
push
lock
sbbl
movsb
push
rcrl
test
jp
lcall
loop
mov
repnz
add
subl
cmc
jne
gs
push
push
push
sbb
cwtl
ss
sbb
dec
rol
shrl
mov
das
push
enter
fsub
xchg
xchg
iret
leave
ret
testl
loope
cmp
push
or
es
cmp
mov
lock
inc
pop
clc
and
fsubl
rcrl
pshufw
scas
mov
ret
xchg
and
jne
movsb
shl
sarb
lock
jge
leave
jno
cmp
test
cmp
mov
jne
adc
pop
jns
push
ss
cld
sub
xchg
dec
frstor
pop
jmp
xchg
lods
sub
insl
enter
repnz
andb
lods
enter
cs
les
insb
xor
aaa
inc
rcrb
mov
add
fistpll
jbe
sbb
loop
xor
fsts
pop
bound
aam
push
cmp
sub
inc
cmpb
mov
xchg
icebp
sub
or
aaa
jmp
cltd
leave
sbb
mov
sub
scas
mov
pop
mov
add
dec
mov
pop
pushf
popa
mov
sub
dec
mov
mov
mov
jp
stos
dec
sbb
in
xor
push
mov
cltd
into
jmp
ja
cwtl
add
mov
add
and
mov
ficomps
scas
xchg
adc
out
mov
mov
inc
fdivp
enter
mov
mov
push
jp
mov
inc
xchg
repnz
mov
adc
xchg
jns
ds
sahf
cmp
dec
and
fchs
or
lahf
fsts
jmp
mov
sbb
clc
movsl
loopne
dec
xchg
mov
lods
adc
mov
xchg
push
mov
dec
mov
jl
cmp
pushf
fcmovb
xchg
or
push
sahf
lahf
pop
jl
shrd
enter
imul
test
lds
sbb
gs
enter
mov
pop
fcoms
out
sahf
mov
lock
mov
add
inc
jp
inc
mov
jecxz
fnstenv
pop
and
push
notl
lods
mov
aas
lock
fucomp
stc
sahf
fsubrs
out
test
negb
imul
popf
jmp
push
hlt
fldl2t
jg
lds
push
or
and
fimull
icebp
sbb
out
sbb
mov
in
pop
cltd
lret
ret
ds
lods
lcall
imul
push
scas
mov
sahf
sub
jle
push
int
fldcw
mov
jmp
loopne
push
push
les
cmp
add
aaa
or
fstl
nop
xchg
pop
push
and
cmp
or
dec
bound
iret
cmp
pop
or
aas
ret
adc
cltd
out
pop
jle
aad
fwait
pusha
sub
inc
stos
fsubs
mov
mov
jge
push
xchg
rcr
int3
in
ja
mov
sbb
xchg
jae
mov
test
cmpsl
in
xlat
pop
leave
adc
mov
sbb
jg
or
popa
lret
cwtl
sbb
add
mov
add
repnz
iret
movb
movb
jecxz
sub
std
sbbl
push
cwtl
pop
dec
adc
cmc
xchg
mull
xchg
xor
imul
push
les
fucomp
scas
lock
or
xchg
jmp
test
lds
dec
shrl
insl
cwtl
cmp
lods
orb
sub
stos
jno
leave
xchg
subb
testb
inc
mov
aam
pop
aas
clc
dec
les
repz
mov
inc
stc
adc
pop
mov
pop
stos
or
xor
mov
movsl
cltd
sub
out
pop
lret
xor
test
cld
ret
movsb
imul
xchg
rcrb
ret
mov
mov
fsubs
rcrl
push
and
popf
mov
cs
push
jle
std
fwait
push
or
mov
mov
mov
je
sub
cli
push
mov
out
out
jmp
push
and
push
insl
fistpll
xchg
push
shl
sti
mov
ret
into
xchg
xchg
ljmp
mov
fsubl
enter
movsl
jg
push
enter
bound
jae
and
movb
and
andb
mov
mov
loop
dec
cmpsb
dec
xchg
pop
jmp
movsl
or
mov
and
in
pop
fiadds
outsb
push
iret
scas
stos
dec
cld
movsl
sub
adc
and
iret
dec
les
adc
lret
or
mov
and
popa
inc
xchg
inc
sub
ds
and
aad
shlb
test
pop
out
js
pop
or
sub
es
fbstp
repz
addr16
sahf
mov
or
pop
xor
and
testl
jg
and
xadd
mov
xor
jmp
test
pusha
mov
in
in
sub
or
mov
in
push
or
push
aad
mov
adc
adcl
mov
subb
daa
rcpps
cmc
xorl
scas
pusha
aaa
ret
clc
add
ret
push
sub
sbb
lret
js
xchg
mov
sub
sbb
das
pop
mov
sbb
cmp
lcall
pop
jl
pop
inc
mov
test
sbbl
in
outsb
fsub
mov
mov
or
test
cli
mov
jne
add
arpl
adc
add
xchg
inc
inc
or
shll
das
fmul
pop
jp
jno
jne
fiaddl
aas
fmull
pop
mov
dec
ror
popa
or
or
js
mov
icebp
cli
inc
mov
movsb
nop
cli
xchg
xor
inc
test
cmp
push
jb
cmp
mov
loopne
scas
or
jno
jne
inc
adc
lcall
shll
outsb
mov
test
mov
mov
into
fstl
lea
push
icebp
lret
inc
sub
iret
aam
xchg
jmp
inc
in
shrl
xor
jg
jbe
repz
mov
and
scas
shll
cmpsb
inc
cwtl
or
mov
mov
or
outsb
inc
push
adcl
js
cmc
daa
nop
jge
mov
popf
in
adc
pop
in
pusha
and
push
and
sbb
js
mov
dec
jecxz
xchg
add
cld
cmpl
push
xchg
fisubrl
and
divb
push
daa
mov
xchg
arpl
jge
pop
sti
inc
ss
inc
ret
lock
out
dec
mov
lods
test
arpl
mov
addl
ror
cmp
pop
mov
push
aaa
xchg
inc
and
shll
push
lds
sbb
push
sub
and
push
xchg
xchg
sbb
inc
iret
sahf
sub
nop
xchg
xchg
enter
loopne
add
sbb
negl
jmp
shlb
adc
inc
mov
xor
or
mov
mov
les
imul
imul
xor
sahf
fbstp
add
data16
pop
pushf
ss
leave
jge
ret
dec
stos
adc
mov
mov
movsl
xchg
push
test
aaa
pop
daa
test
cmp
push
leave
aad
incb
fiaddl
stos
cmp
pushf
push
lahf
in
in
inc
add
in
rcll
jae
aam
je
scas
int
adc
and
lret
mov
inc
sub
or
xchg
inc
or
pop
adc
mov
sub
dec
jge
mov
mov
lds
adc
pop
push
call
idivl
pop
mov
mov
nop
cmc
popf
cmp
xchg
or
cld
push
stc
fwait
push
add
lods
adc
dec
mov
add
and
ror
and
xor
inc
dec
in
mov
and
sysenter
sbb
inc
mov
and
pop
loop
lods
dec
popf
jbe
inc
add
imul
fldl
cli
movsb
inc
in
push
fiaddl
js
mov
sub
xor
sbbb
bswap
andl
jmp
pop
jle
mov
outsb
jno
xor
ja
sub
cmp
pop
sbb
xchg
cs
leave
filds
xor
daa
ja
iret
inc
and
in
push
mov
inc
std
pop
add
push
aad
adc
jmp
or
xchg
xchg
adc
sub
sarl
in
mov
data16
imul
pop
mov
push
cmp
insb
std
je
shr
mov
mov
mov
dec
test
mov
add
popf
fwait
ljmp
or
mov
cmp
out
and
repnz
fists
or
sub
jae
pop
xchg
adc
idivl
imul
and
adc
ljmp
int
adc
sbb
pop
jo
pusha
cmpsb
mov
cmp
pusha
mov
mov
xor
pop
cmpsb
sahf
jnp
jmp
ljmp
std
lds
cltd
cld
mov
sub
or
das
xchg
or
dec
lret
clc
mov
fistps
das
sub
mov
pop
pop
mov
mov
cld
scas
add
mov
cmp
add
mov
push
out
gs
dec
or
in
insb
fwait
and
stos
ja
mov
cltd
gs
ret
pusha
cmp
lods
in
inc
xchg
sbb
lahf
lods
lods
das
xor
inc
jg
js
mov
mov
pop
mov
into
in
fsubp
mov
mov
popa
or
out
dec
cmp
fisttps
fwait
testl
es
lret
sub
lock
cli
mov
cmp
jg
pop
repnz
test
mov
sti
jo
sbb
insb
push
outsl
or
lock
sarb
mov
or
scas
icebp
mov
xor
andl
fcomps
mov
mov
adc
test
icebp
and
sbb
loop
jb
mov
dec
pop
mov
jne
push
jecxz
fmull
jp
in
es
cmpsl
int3
in
into
mov
repnz
cwtl
and
jecxz
and
bound
xchg
adc
lods
inc
enter
mov
sub
cmpsb
xchg
les
iret
jae
fistl
sub
clc
inc
inc
outsb
pop
cmp
jns
fnstcw
inc
das
sbb
jl
fwait
push
movsb
jns
push
sub
mov
mov
inc
pop
test
dec
adc
mov
mov
je
jg
xor
movsb
daa
fdivrl
cmpl
add
inc
aas
mov
mov
push
mov
and
rcll
out
cmp
addr16
push
dec
pop
xchg
xchg
pop
jb
push
sub
fnsave
jmp
pushf
sbb
lods
shrb
lret
iret
push
lret
pop
mov
data16
mov
jns
popa
ret
jl
lahf
fdivs
in
imul
out
imulb
mov
lods
inc
in
roll
sub
inc
movsb
scas
jle
insl
push
scas
add
insl
xchg
jns
add
mov
arpl
dec
or
mov
xchg
icebp
rcrl
pop
pop
fsubl
loope
cmc
push
jmp
adc
movsl
mov
mov
cmp
aad
js
inc
mov
and
fnstcw
jnp
daa
xor
adc
pop
push
mov
dec
mov
pusha
icebp
and
and
stos
dec
mov
push
pop
pop
clc
adc
pop
mov
sahf
pop
out
mov
shl
cmp
pop
scas
das
add
xchg
jne
in
insl
mov
pop
arpl
movsb
mov
cmp
sbb
dec
test
jns
push
pop
mov
jno
incb
push
add
pop
cmp
loopne
icebp
lret
imul
adc
xchg
or
jb
mov
mov
lret
ror
int
pop
je
and
lods
add
addb
stos
and
xchg
mov
fcoms
aas
loopne
push
movsb
in
cmp
stc
out
int3
pop
xchg
push
mov
popl
jbe
enter
je
pop
dec
mov
xor
cli
inc
cmp
push
inc
mov
mov
xor
adc
pop
lock
pusha
lahf
sub
mov
prefetch
or
jge
cmc
cmpsb
dec
aam
cmp
int
dec
dec
mov
dec
cmp
ret
les
sub
iret
addr16
or
sbb
jno
loope
xchg
arpl
leave
dec
jbe
scas
bts
jo
jl
cmc
or
jno
scas
aaa
adc
rcll
xchg
cmp
push
mov
fstp
jns
mov
dec
les
mov
and
xchg
sub
outsl
xor
jae
add
data16
jne
orl
jl
dec
dec
js
inc
je
test
pop
push
jbe
shll
outsl
pop
sub
mov
lret
push
sbb
in
xor
rcrl
sub
pop
inc
scas
and
inc
cld
ja
and
sub
hlt
mov
mov
int
sbb
and
mov
loope
popf
xchg
xchg
popa
jno
sbb
push
in
push
or
dec
ja
sti
jno
cmpsl
sub
xchg
loope
add
mov
lock
ss
and
push
cmp
jbe
add
pop
imul
and
jb
inc
lds
ficomps
push
lret
adc
cmp
mov
imul
pop
push
call
xor
jl
icebp
sbb
fildll
fwait
pop
aad
xor
mov
cmp
fstpt
add
sbb
mov
movsb
mov
mov
jp
inc
in
xchg
cmp
mov
or
cltd
pop
dec
je
pop
lds
push
jae
mov
jnp
lods
push
lods
cmpsb
jl
push
push
adc
and
and
mov
out
and
sahf
inc
addl
packsswb
xchg
ds
repz
sbbb
out
sub
int3
lret
push
ret
inc
rcrb
adc
test
mov
xchg
rcrl
push
mov
sbb
sarl
add
or
adc
pop
adc
jae
leave
inc
inc
cld
mov
pop
jns
xor
push
je
jp
call
mov
stos
shlb
cmpsb
leave
out
inc
pop
xchg
repz
cmpsl
xchg
adc
mov
imul
mov
dec
icebp
fdivr
rcrl
mov
sbb
icebp
sub
das
cmp
or
out
adc
adc
aam
cmp
lock
adc
add
int
jne
mov
mov
sbb
mov
pushf
jbe
jp
out
popf
sub
mov
mov
pop
xor
fwait
push
loop
cmp
ljmp
filds
sbb
addl
in
sub
jo
and
pop
addb
lds
cmp
adc
sub
mov
add
push
mov
sub
mov
test
adc
movsb
int
push
sbb
lret
or
or
lret
stos
push
arpl
sub
loopne
mov
add
adc
xchg
xchg
and
mov
shlb
push
cmp
orb
dec
sub
xchg
sete
pusha
fwait
mov
sbb
push
loop
push
fdivrs
push
inc
ljmp
or
mov
jmp
stos
testb
xlat
daa
in
pushf
out
inc
sub
jo
push
stc
enter
jmp
stc
outsb
pop
mov
pop
jge
ret
push
pop
shll
inc
xor
xchg
cltd
imul
mov
or
call
ret
mov
movsl
push
sbb
mov
scas
iret
push
xchg
loope
mov
cwtl
out
hlt
adcl
out
adc
je
dec
jae
pop
xorb
stc
pop
sub
arpl
or
addr16
push
dec
xor
inc
cmp
jecxz
inc
add
icebp
insb
xchg
pop
adc
stos
rcr
pushf
je
stos
idivl
mov
sub
push
dec
sbb
in
mov
call
cmc
fsubp
and
into
inc
cmpsl
in
mov
imull
lods
pop
xor
adc
je
and
rcrb
out
mov
inc
lods
js
jae
daa
outsb
xor
dec
das
cmpsb
mov
adc
inc
xchg
inc
dec
mov
inc
icebp
insl
jnp
sti
cmp
mov
imul
jmp
mov
jge
mov
fwait
xchg
ja
rorl
and
imul
mov
cmp
xor
jmp
mov
dec
xlat
mov
sbb
in
fucomi
xor
fisttpl
lea
pop
and
insl
mov
adc
xor
mov
fimuls
ja
or
sbb
jp
jecxz,pt
mov
lods
and
pop
bound
fisubs
in
inc
inc
les
jg
sub
jnp
push
push
xchg
in
cmp
mov
test
add
push
lock
outsb
push
in
cltd
insb
hlt
loope
push
lds
mov
int
push
out
mov
and
dec
outsl
pushf
outsb
imull
jae
mov
call
shr
dec
and
pop
jmp
out
sub
scas
test
sub
je
xchg
adc
gs
repz
mov
cmp
scas
jle
jae
mov
or
mov
sub
pop
sahf
mov
fistl
xchg
lcall
or
ja
aas
stos
and
push
inc
insb
cmp
mov
mov
xchg
sub
jl
jno
filds
mov
arpl
lock
fwait
add
sbb
outsb
dec
xchg
rol
jg
mov
out
mov
or
mov
and
clc
es
leave
stos
outsb
lret
in
jns
inc
lods
xor
subl
and
cmp
pop
xlat
daa
mov
add
inc
in
xor
inc
out
or
repnz
xor
fs
mov
push
sub
pushf
and
xchg
inc
cmp
jbe
loopne
xor
repnz
fstpt
les
jbe
rorb
adc
push
mov
data16
ja
push
sub
fadds
loop
mov
int3
into
pop
rcr
dec
je
push
scas
cmpsl
adc
das
xchg
and
sub
push
pop
sub
out
mov
and
in
std
loop
aas
ljmp
aas
push
jno
in
mov
movsl
test
bound
dec
adc
int
sub
mov
inc
sbb
int3
dec
in
lods
sub
stos
push
mov
adc
mov
fisttpll
cltd
xor
or
sarb
nop
and
push
xlat
dec
rcrl
push
pmulhuw
in
imul
in
lret
mov
out
xchg
pusha
imulb
cmp
loopne
xchg
in
lea
jb
outsb
jb
mov
jnp
inc
into
sub
outsl
and
imul
cmp
and
rcl
push
mov
xchg
jae
push
pop
lea
das
sti
and
out
rcll
inc
pop
mov
in
jg
sub
imul
out
mov
sti
in
mov
loopne
aam
xchg
iret
cli
sbb
insl
rcrl
ljmp
xchg
cmp
insb
jl
add
mov
mov
inc
sub
mov
ret
mov
pop
jecxz
sti
and
xchg
or
or
hlt
mov
or
out
call
and
ret
pop
lea
sub
mov
xchg
jbe
inc
mov
pop
cld
pop
bound
pop
push
test
push
dec
mov
shlb
aas
loopne
popf
and
push
pop
jae
jle
mov
adc
sbb
push
jno
push
mov
jg
xor
inc
fcmovb
xor
mov
mov
cmp
shll
push
dec
sbb
dec
xchg
fistpl
inc
in
cmpsl
jge
lods
mov
ds
out
cmp
mov
cltd
add
scas
cli
lret
jmp
push
test
jo
push
cmp
or
jae
stos
pop
and
shl
into
adc
sbb
push
out
arpl
fidivs
shll
add
aas
pop
inc
aam
mov
mov
outsl
dec
pop
rcrb
inc
dec
mov
fisubrl
mov
push
pop
push
mov
xchg
rolb
lret
aad
aam
insb
adc
cmpsb
push
xchg
call
add
arpl
push
cld
adc
jo
cwtl
lcall
xor
jle
orl
sub
dec
fldt
imul
iret
adc
push
and
xlat
mov
in
lods
rclb
pop
sbb
xchg
or
popf
fsubrs
adc
lods
decb
popa
push
dec
mov
fnsave
mov
cmp
mov
cwtl
in
ror
fists
cld
push
mov
mov
fstpl
mov
cmpsl
mov
fldenvs
lods
xorl
into
push
xchg
ret
jne
out
dec
in
sti
cld
jns
and
cmp
and
pop
pop
nop
call
xlat
and
pop
lcall
cwtl
aam
mov
out
cmp
push
jmp
cmp
loope
test
fidivrl
test
insb
dec
loop
xlat
push
push
cmc
xchg
out
jnp
mov
xorl
aad
pop
movsl
dec
mov
xchg
cmp
jae
inc
pop
insl
xchg
loopne
sbb
pop
lret
mov
ret
repnz
or
shl
enter
cmp
fcmovnb
dec
xor
divb
mov
outsb
cmp
mov
mov
mov
and
inc
mov
xor
mov
popa
inc
inc
lcall
dec
lcall
or
cmpsl
je
fdivrs
push
ss
lcall
sarl
dec
mov
jnp
cmpsl
xchg
out
ja
repz
movsl
sub
pop
fsubrs
pop
lods
inc
pop
or
rcrb
in
or
dec
push
sub
fsubs
xor
jae
enter
xor
gs
xchg
clc
push
inc
lds
rcrb
fmul
and
jae
outsl
add
out
mov
into
aam
xchg
je
out
jecxz
sub
inc
insb
ret
insb
dec
or
gs
xchg
sbb
fstpt
aas
adcb
sub
pop
pop
aaa
repnz
jle
int
loope
stos
lds
js
jge
xchg
jecxz
mov
ds
push
int3
dec
xchg
dec
lahf
mov
iret
out
dec
mov
jp
data16
sbb
mov
stos
lahf
inc
xchg
inc
jbe
and
lods
or
fldenv
arpl
pop
ljmp
stos
mov
ror
jmp
inc
and
sub
add
mov
ret
das
negb
or
sub
jo
std
jg
adc
adc
movsb
adc
lea
add
mov
sub
mov
xor
stc
mov
cld
inc
mov
loope
lahf
cld
jne
rorl
iret
pop
lods
jno
push
pop
leave
test
push
xchg
push
in
in
cmp
scas
faddl
pop
out
stos
std
xchg
clc
cmpsb
or
pop
lahf
clc
ret
cmc
cwtl
stc
mov
push
call
cmp
mov
pop
sbb
jo
enter
std
fistps
fwait
insb
mov
jecxz
pop
cmc
cmp
out
fs
aad
push
or
mov
push
sub
jl
adc
or
loope
popf
push
js
sub
jl
sahf
inc
pop
push
cmpsb
loope
repz
lds
ljmp
jb
dec
dec
daa
push
mov
inc
sbb
fcmove
jns
int
mov
jae
xchg
cmc
js
gs
in
in
xchg
test
or
pop
add
sbb
jp
push
fsubp
mov
add
lds
sub
mov
bound
and
cmp
sub
test
pushf
dec
in
lock
xor
cld
rorb
scas
imul
mov
js
sub
sahf
out
inc
mov
jge
mov
test
ds
mov
jp
inc
cmp
lret
pop
or
mov
cmp
daa
adc
mov
movmskps
cmp
inc
mov
in
sarb
movsl
cmpsb
iret
sbb
rcll
mov
jae
jnp
pusha
dec
stc
push
xlat
mov
popa
stos
mov
dec
in
sbb
call
mov
fistpll
pop
lds
xchg
stos
in
lds
fldt
out
pop
test
xor
adc
xchg
sub
sbb
sub
jne
repz
inc
lea
cmp
subl
js
lods
pop
dec
jns
loope
pop
bound
adc
fidivrl
push
jnp
in
adc
cmp
or
and
pop
daa
adc
testb
push
xchg
out
dec
lea
adc
push
sbb
popa
into
and
cmp
faddp
pop
mov
cmp
iret
sbb
push
push
ret
adc
add
outsl
aad
jnp
outsb
adc
sar
mov
xchg
and
cmp
ss
cmp
divl
hlt
cmpsl
xchg
pop
aad
xor
data16
xchg
imul
adcb
sti
jle
int3
sti
aas
movsb
fsubl
ret
test
mov
mov
pop
mov
adc
popf
and
incl
shlb
inc
xor
les
mov
dec
push
jle
xchg
xor
ds
sar
sbb
dec
dec
imulb
lds
hlt
dec
xchg
lret
scas
xchg
cmc
mov
push
lcall
fwait
les
aas
pop
les
mull
enter
lret
sti
or
test
xchg
add
add
fstpl
das
cwtl
mov
dec
roll
invd
std
ss
mov
addr16
mov
adcb
xchg
enter
dec
mov
dec
adc
dec
outsb
in
and
mov
mov
add
sti
sub
daa
vandnpd
mov
jg
xchg
mov
loop
dec
push
inc
sahf
cmc
loop
jge
push
mov
leave
ret
movb
stos
push
insb
mov
xor
jnp
fs
frstor
adc
mov
data16
push
shr
pop
inc
mov
jnp
rclb
pop
cmc
lods
mov
sub
ljmp
xor
loope
push
inc
pop
insl
daa
out
xchg
jnp
cmp
push
fsub
stc
sbb
sbb
pop
jbe
jns,pn
sub
enter
mov
loop
inc
mov
pop
shrb
jns
ret
jle
cmc
add
sbb
mov
nop
rol
pusha
mov
sub
jmp
sbb
lods
fnstcw
rcll
jns
mov
jle
insb
in
xchg
jecxz
lods
adc
or
lret
mov
push
add
jmp
fdivl
mov
push
enter
rcr
mov
mov
shlb
out
add
imul
or
mov
pop
pusha
fidivl
sub
lea
or
xchg
call
or
xchg
sarb
sub
add
jo
jae
gs
movl
ss
roll
pusha
dec
frstor
adcb
sbb
outsb
fdiv
mov
mov
les
push
rclb
inc
rorl
jp
test
aaa
add
int3
scas
pop
adc
pop
cmp
adc
test
cmpsb
aad
pop
pusha
xor
adc
bound
adc
lods
iret
and
divl
xor
inc
leave
aam
adc
es
stos
pop
fsubl
sub
orb
or
sbb
daa
xor
mov
lcall
pop
jl
fnsave
push
lock
jecxz
out
sub
jecxz
push
adc
dec
or
pop
aad
movswl
push
inc
add
test
inc
rcrb
pop
stos
jbe
rol
sbb
aam
std
dec
adc
das
sub
notb
adc
cmc
insb
inc
loopne
pop
stos
dec
mov
cmp
popa
ss
inc
adcb
sub
cmc
adc
jle
inc
daa
test
out
data16
jl
subb
out
pop
or
xchg
mov
gs
sub
ss
dec
pop
xchg
cli
iret
in
dec
int
push
jae
push
jp
and
push
fbstp
and
shll
xchg
xchg
leave
jge
pop
add
add
xchg
sub
mov
iret
sub
sarl
out
mov
movsb
int3
and
dec
stos
cmc
sub
cmp
inc
push
or
orb
sub
je
add
popa
sbb
fisubs
adc
add
xor
fs
mov
fnstcw
imul
cmp
pop
mov
push
arpl
sub
cmpsl
addl
jg
shr
shlb
loop
imul
into
stc
out
xlat
xchg
ror
xchg
xor
pop
jbe
lcall
stc
shll
jae
pop
pop
mov
or
add
cmp
dec
clc
mov
repz
movsb
lret
cld
lock
sbb
cmp
data16
movl
and
sbb
xor
push
lods
pop
mov
push
push
test
cs
int3
enter
or
fdivr
cmc
inc
jae
outsl
scas
add
cmp
imul
pop
lods
call
xor
lret
mov
pushf
inc
sub
shl
dec
aam
dec
nop
sbb
jnp
inc
fs
sti
arpl
std
sbb
vmwrite
stc
mov
add
adc
sub
xor
mov
nop
dec
push
add
jbe
dec
cld
into
scas
cwtl
sub
or
dec
lds
aas
into
mov
fimull
mov
pop
ret
pop
adc
xchg
pop
mov
arpl
into
add
push
adc
push
clc
aas
int
mov
pop
jmp
imul
push
add
movsl
jns
xchg
cmp
inc
cmp
and
stos
sbb
ss
in
test
push
enter
movsl
int
scas
mov
adc
mov
insb
sahf
cmp
mov
mov
int
mov
xchg
jle
sbb
push
sbb
add
repz
push
mov
xchg
push
cmp
cmp
mov
out
scas
or
xlat
fidivs
inc
jb
mov
aad
call
mov
jp
je
xor
mov
je
incl
in
xchg
fwait
ss
add
add
imul
sbb
jns
ljmp
out
push
enter
jl
insb
pop
iret
cmpsb
pop
push
dec
xchg
inc
pop
mov
repnz
push
mov
mov
add
and
mov
fcoms
xchg
jo
jo
lods
xlat
lret
pop
nop
aad
sub
in
jl
pop
ljmp
xchg
jp
xchg
mov
adc
cmp
adc
inc
fisubs
jbe
dec
sahf
dec
xchg
push
jo
jecxz
leave
cmp
fwait
inc
sbbl
pop
sahf
scas
sbbb
loope
iret
in
test
and
push
push
jnp
addr16
or
sbb
negb
sbb
into
lahf
xor
pop
fistpll
out
and
rorl
call
std
mov
jl
dec
aaa
jecxz
lret
cmp
push
mov
add
xchg
fbld
ret
sbb
in
xchg
jo
dec
es
les
scas
daa
loope
xlat
mov
dec
rcrb
sbbl
jno
dec
or
shld
add
nop
test
xlat
repz
clc
jl
push
loope
add
add
sbb
icebp
js
dec
ljmp
rclb
xor
or
sbb
das
sarl
stos
xor
dec
jae
sbb
lock
std
push
push
jecxz
sub
xchg
cmp
mov
add
js
and
jnp
dec
lods
adc
fsub
repz
mov
popa
clc
xchg
gs
fsubrs
mov
repnz
add
xchg
popf
jnp
push
cmpsb
int3
fxch
sbb
repz
fisttps
cli
testl
mov
pushf
adc
insl
hlt
pop
sahf
mov
dec
shlb
test
std
aad
jnp
repnz
mov
ja
adc
jmp
push
shrb
push
mov
dec
cwtl
push
aad
movl
hlt
andb
movsb
mov
mov
in
jo
mov
sbb
in
mov
fldl
je
repnz
outsb
in
inc
es
xchg
mov
lcall
dec
xchg
ret
add
int
inc
cmc
and
xchg
loope
in
xchg
push
nop
xor
mov
pusha
or
enter
mov
fcmovnb
sbb
adc
inc
orl
xor
les
cmp
jnp
aad
outsl
lods
leave
xchg
jp
adc
enter
xor
jae
sbb
mov
movsl
adcb
mov
mov
jae
pop
icebp
push
insb
add
aam
sub
bound
or
mov
add
push
jno
jns
dec
and
xchg
xchg
xor
test
fcoml
popl
nop
stos
lret
pop
dec
fs
out
adc
xchg
imulb
mov
or
lock
popa
repz
in
popl
jne
sbb
sbb
adc
scas
xor
fldt
out
fisubrs
pop
cmp
push
xor
add
jge
ljmp
lea
jl
roll
jno
jp
ret
mov
jns
adc
push
pop
sbb
jne
jp
dec
mov
out
inc
jmp
xor
repz
sbb
leave
pushl
out
sti
inc
or
sub
and
dec
fidivrl
cli
pop
enter
cltd
lods
sbb
mov
sarb
fdivrs
push
or
stc
in
repz
fadds
imul
dec
mov
fcomip
push
xor
push
cld
mov
stos
mov
xor
enter
xor
or
mov
mov
mov
sbb
or
or
jno
stc
and
sbb
xlat
pushf
ljmp
in
lret
repz
push
inc
outsb
imul
jns
bound
pop
cmp
inc
pop
push
dec
sub
into
mov
push
enter
cli
mov
add
shlb
cmp
hlt
xor
pop
iret
mov
daa
out
es
sub
push
jmp
dec
inc
les
in
jb
push
out
xor
add
sbb
and
lea
out
xor
inc
pop
out
adc
shll
lahf
inc
mov
cmp
jnp
out
add
iret
ficompl
iret
stos
orb
and
lret
lods
fsubl
push
sub
adc
movsl
jne
orl
repnz
call
aad
mov
adc
and
lcall
inc
xchg
out
movsb
ficomps
mov
mov
testl
jmp
add
arpl
outsl
mov
xchg
push
out
mov
ret
and
inc
push
cmpsb
jmp
in
loope
inc
jmp
xchg
gs
push
pop
int3
call
pop
or
adc
imul
xchg
int3
mov
mov
jg
pop
cmc
jns
or
and
je
mov
loope
test
ret
inc
out
pop
ss
or
sub
outsb
mov
or
outsl
rcr
push
or
xchg
outsl
lea
insb
hlt
jg
jbe
movq
in
xor
mov
xor
insb
lods
in
repz
es
and
push
push
push
push
mov
pop
fs
cld
xchg
and
and
repz
test
lock
shlb
arpl
arpl
inc
rcrb
es
shrl
cli
dec
xchg
adc
mov
mov
push
mov
pop
mov
xor
mov
dec
mov
aas
xlat
pop
repz
std
stos
xor
repz
cmp
and
es
add
bound
mov
test
subb
mov
mov
xor
out
inc
insl
popf
in
andnps
dec
cltd
addb
cmpsl
fstp
jbe
mov
adcl
cmp
mov
and
mov
cmp
lds
xchg
push
ljmp
cmc
jle
and
dec
xchg
pop
mov
or
and
insl
into
aam
mov
sbb
jmp
mov
stc
imul
popf
jb
movsl
sub
lea
lods
xor
pop
rorb
in
shl
push
push
push
mov
insb
cmp
ja
cltd
movsb
addr16
cmp
pop
or
xlat
movsb
cmp
mov
add
jno
iret
and
int3
adc
ret
jmp
xchg
and
outsb
mov
mov
rorb
mov
gs
mov
cli
cmpsb
jle
std
call
bound
push
jnp
cli
lret
aas
or
mov
imull
pop
pusha
ret
adc
scas
pop
lods
dec
sahf
test
mov
jb
hlt
jecxz
fistps
mov
add
adc
mov
inc
or
roll
stos
push
sbbb
jl
lds
enter
sti
push
jae
int
nop
lds
js
xor
xorl
stos
sbb
adc
notb
jae
push
and
adc
mov
xor
sbbb
sub
jmp
push
fcomi
mov
out
lods
jge
push
jmp
add
xor
ficompl
mov
in
in
sarb
cmpsl
in
fdivl
in
push
fisubrl
dec
xchg
insb
sub
jle
call
stc
adc
or
jl
xor
add
in
cmp
fwait
push
cld
cmp
sbb
mov
aam
xchg
shll
mov
sub
cwtl
ss
push
das
mov
jbe
rcr
in
pop
sub
mov
nop
push
fstl
sub
loopne
xchg
dec
adc
add
xor
dec
sub
in
repz
stos
pop
mov
mov
mov
fmuls
cmc
cmp
and
jb
inc
jge
clc
push
scas
add
fmul
mov
mov
dec
cld
push
sbbb
push
jne
popa
and
insb
in
mov
inc
jbe
mov
pop
xchg
int3
push
dec
jnp
mov
add
mov
pop
cmp
cmp
mov
shrb
fsts
rorl
fs
inc
leave
cld
negl
lahf
int3
pop
out
sub
jecxz
inc
ret
roll
notl
mov
xchg
and
cwtl
loope
jl
scas
insl
enter
mov
or
and
mov
jb
xchg
pop
push
xor
test
and
ljmp
sbb
or
insb
ds
inc
xchg
outsl
sub
pop
aas
mov
sub
shl
push
inc
mov
inc
or
out
xor
xor
dec
outsl
daa
xor
fs
inc
hlt
enter
inc
in
pusha
test
push
cs
sub
sbb
inc
ret
clc
enter
adc
andb
push
push
adc
jb
jbe
mov
push
adcb
adcl
lret
and
popa
push
push
add
ljmp
sti
or
das
fbstp
or
xor
ja
dec
je
mov
xchg
rorl
jne
xchg
popa
jae
jle
andl
fldt
add
inc
stos
jno
cmp
scas
aas
mov
dec
mov
aam
pushf
repnz
aad
enter
add
aam
movsl
ja
jecxz
shlb
repz
pusha
stos
loop
clc
jle
xor
repz
sbb
addr16
rclb
shll
xchg
push
js
jle
adc
mov
scas
into
mov
int3
xchg
test
and
sti
fsubrl
or
mov
mov
in
xor
scas
in
lock
outsl
pop
test
jae
leave
dec
push
push
pop
inc
ja
out
cli
inc
out
xor
push
mov
test
add
sub
cmpsb
dec
mov
push
js
adc
scas
pop
xorb
lock
pop
icebp
loope
jo
leave
xor
inc
pusha
push
xchg
sub
daa
inc
adc
out
in
lret
jg
loopne
push
push
cwtl
mov
hlt
ret
mov
xor
pushfw
in
jmp
leave
ret
mov
jb
or
das
lock
sbb
insb
mov
xchg
pop
jp
or
and
sbb
aaa
movsb
jg
add
in
ret
aad
fadd
imul
push
inc
out
pop
push
insb
inc
cmp
nop
das
in
mov
andl
divb
imul
leave
jne
xchg
inc
cmpsl
cli
mov
addr16
out
arpl
or
mov
cmpsb
stos
add
xchg
scas
jge
mov
push
xchg
xchg
cmpsb
inc
in
inc
pusha
lcall
sub
enter
bswap
or
pop
mulb
out
cmp
sbb
jle
dec
xor
xlat
pusha
cmpsb
inc
cwtl
repz
jo
out
das
call
cmp
dec
push
pop
push
push
pop
adc
and
add
scas
shlb
out
ja
pop
insl
push
jnp
popf
arpl
fs
sbb
push
sbbb
enter
aas
std
lahf
fistps
outsb
sbb
push
arpl
icebp
dec
cmpl
shrb
aas
xchg
add
mov
lods
mov
lods
nop
jle
fldcw
out
mov
pop
inc
add
adc
jb
fsubp
iret
mov
data16
xchg
insb
dec
int3
jno
or
and
cmc
andb
out
jne
dec
adc
pop
aad
add
dec
mov
push
mulb
xchg
nop
dec
nop
insb
or
mov
cli
sub
xchg
fidivrl
lahf
pop
dec
mov
filds
mov
mov
xor
mov
stc
je
popf
outsl
rcrb
mov
xchg
push
fcompl
cmp
lods
jae
in
and
jp
pop
and
sbb
dec
xor
hlt
fstps
jne
lea
icebp
mov
dec
add
and
lret
les
cmpsb
push
aaa
fs
fistpl
xchg
xor
add
pushf
ss
addr16
fs
sub
ret
mov
sbb
outsb
jge
or
shrb
pop
insl
bound
sbb
jmp
call
push
jno
pop
mov
lahf
pop
push
sbb
xor
add
push
test
mov
add
and
mov
repz
push
cmc
sbb
stc
cwtl
dec
icebp
jo
pop
add
cwtl
lods
or
mov
and
lcall
mov
xor
jne
imul
fldenv
push
enter
icebp
adc
or
sub
cld
js
ret
add
pushw
int
jno
sbb
hlt
mov
pop
mov
pop
pop
insb
iret
test
scas
push
and
fsubrs
mov
mov
push
pop
rcrl
pop
jl
js
out
int
sbb
pop
mov
mov
inc
lahf
xlat
les
push
ja
cmp
daa
into
push
addr16
or
xchg
scas
xor
scas
cmpsb
sub
inc
cmp
jbe
pop
mov
sar
pop
jno
cmc
and
pop
movsl
enter
pop
stos
aad
cmp
add
test
adc
mov
stos
jg
ja
rcll
subl
jb
testl
inc
dec
test
testb
fs
sti
outsl
jmp
xlat
cmpsl
mov
mov
stos
or
mov
xor
aad
cltd
inc
mov
mov
aaa
sbb
or
jns
xlat
lods
lahf
int
pop
lods
cmpsl
xor
in
push
hlt
mov
xlat
adc
sahf
mov
adc
negl
mov
scas
jge
lods
sbb
dec
je
scas
lret
cmp
xor
lds
int3
xor
mulb
sti
cmp
adc
sbb
hlt
add
sbb
inc
add
fchs
out
pmullw
or
dec
aaa
lcall
int
adc
or
test
xchg
mov
fucom
sbb
sub
jns
mov
in
push
into
test
ljmp
dec
imul
mov
xorl
pushf
pop
push
nop
pushf
cmpsl
das
add
aam
outsb
inc
jp
bound
fdivs
push
sub
xor
je
mov
loopne
fiaddl
sbb
xchg
scas
push
aam
or
lock
inc
xchg
gs
pop
pop
into
in
cmp
ds
repz
stos
dec
push
rcrl
and
push
sahf
dec
push
subl
movsb
test
test
add
jbe
mov
mov
sbb
movsl
popa
dec
insl
jecxz
cmpsl
call
test
jecxz
int
fisttps
testl
dec
call
or
sbb
xchg
les
push
push
sbb
stos
jo
push
pop
arpl
cmpsl
imul
scas
shlb
pop
out
hlt
in
sub
insl
stos
mov
push
cmpsb
inc
mov
pop
pushf
in
ljmp
adc
lahf
or
dec
test
mov
in
out
in
icebp
lods
test
das
js
bound
stos
scas
push
add
adc
mov
and
scas
lock
add
sahf
jae
mov
lahf
cmpsb
xor
inc
mov
push
inc
bound
pop
in
leave
sarl
insb
xor
ja
addr16
js
sbb
mov
ljmp
dec
add
roll
cmp
pop
xor
push
mov
aaa
jns
out
pop
xchg
stc
icebp
pop
ss
rcrl
xchg
push
dec
popa
ds
cmpsb
or
jbe
test
adc
mov
add
pop
movsl
test
jg
fldenv
lds
and
mov
add
scas
aad
jmp
stc
daa
daa
push
lods
cmp
out
fmuls
push
mov
lds
inc
jno
inc
xchg
push
adc
mov
cmpsb
adc
in
in
call
mov
into
xor
rorb
stos
inc
sbb
add
pop
loope
xchg
adc
pop
out
enter
cld
mov
mov
xor
js
pop
jg
dec
pusha
pop
xor
sub
jbe
ja
adc
outsl
cmp
lret
ret
rcrb
pop
push
jae
loop
xchg
rcll
sub
cmp
add
push
or
ds
mov
pusha
fcomp
pushf
add
sbb
and
cs
stos
push
adc
xchg
arpl
inc
cmpl
inc
stos
dec
add
sub
je
push
mov
into
mov
mov
dec
fbstp
test
pop
int3
inc
ret
push
mov
lcall
dec
aad
xor
mov
cmp
xchg
push
hlt
add
cmp
xchg
into
andb
add
pop
insl
jg
out
mov
sar
test
lret
sbb
in
pop
mov
test
xchg
jge
pop
xchg
rcrl
arpl
loope
loop
loopne
rcr
inc
repnz
xchg
mov
pop
jmp
rcl
xchg
push
mov
mov
pop
dec
add
fcompl
rcrl
jns
adc
gs
aaa
mov
mov
cmc
popf
dec
out
xchg
icebp
cli
loop
cmp
jno
xchg
jmp
jecxz
cmp
push
pusha
fldl
les
pop
icebp
out
mov
or
jge
xchg
lret
mov
push
adc
sub
mov
push
shrb
lret
pop
arpl
iret
jg
adc
inc
push
loope
lcall
arpl
out
xchg
add
stos
das
lods
or
fwait
pop
into
inc
fnsave
cltd
cmpl
scas
mov
xlat
jno
notb
cmc
pusha
sbb
sbb
dec
xchg
std
loop
movsb
dec
iret
nop
dec
fimull
or
daa
cwtl
divb
int3
sar
sub
xchg
std
jmp
roll
hlt
lahf
xor
aam
inc
xchg
loop
outsl
lods
ja
aas
add
sahf
sub
lahf
inc
loope
and
enter
inc
mov
mov
push
inc
es
lea
mov
les
inc
std
jg
add
mov
lds
jl
mov
sbb
cmc
movsl
fidivl
cmp
mov
sbb
in
mov
addl
mov
dec
insb
sarl
mov
test
sbb
pop
inc
mov
adc
scas
cmp
ret
arpl
roll
imul
shrb
or
repz
xchg
xchg
aas
lea
fmull
loopne
out
test
repnz
add
popl
outsb
rorb
xchg
repz
cs
rcrb
dec
mov
loope
lods
lcall
nop
ret
add
mov
mov
push
adc
ret
scas
pop
into
insl
dec
jns
adc
sbb
jb
in
pop
pop
mov
idivb
mov
jmp
mov
fldt
inc
out
push
mov
mov
loopne
cmp
xchg
adc
adc
adc
into
mov
sbb
mov
jl
mov
cmp
les
jmp
popa
cltd
ja
bound
push
paddsb
push
sub
and
pushf
xchg
test
dec
aaa
xor
inc
xlat
lock
ja
sub
sbb
std
ljmp
imul
mov
mov
shll
and
cmp
ljmp
loopne
in
and
xchg
sbb
dec
lahf
adc
pop
arpl
push
push
or
loope
ret
inc
add
aad
cmpsl
pop
cmp
lahf
dec
mov
cmc
int3
fisttps
imul
push
test
cmpsl
mov
mov
sub
sahf
jae
xchg
inc
push
xchg
hlt
push
in
inc
mov
in
imul
adc
dec
mov
out
mov
scas
fisubs
imul
mov
out
les
mov
stc
inc
lret
mov
insb
scas
aam
jnp
dec
xchg
add
or
mov
aas
dec
mov
aas
add
pop
outsb
es
pop
lds
movsl
xor
cwtl
mov
js
mov
ret
push
or
out
push
ja
mov
loop
and
and
fs
imul
clc
sarl
jne
xchg
and
outsl
in
divb
push
test
add
js
dec
test
and
jg
sahf
call
add
dec
dec
iret
lds
sub
push
insb
sub
add
out
das
cltd
popf
icebp
and
sbb
in
add
jnp
std
lods
inc
aad
inc
dec
cmp
mov
cmp
imul
sbb
jge
mov
in
adc
dec
iret
adc
nop
das
lret
xchg
fdivrs
icebp
out
inc
push
push
andl
inc
inc
dec
in
jmp
test
cmc
mov
sbb
aad
pop
sub
adc
loop
out
jl
inc
stc
mov
xor
scas
test
add
cmc
icebp
int3
mov
mov
pop
ficoms
mov
xor
cs
xchg
gs
or
sbb
xorb
cmp
fs
mov
xchg
outsb
and
sub
jge
enter
pop
std
sub
lods
test
ss
mov
cltd
cmp
push
sub
lock
sbb
test
mov
cmp
dec
imul
pop
add
cmpsl
daa
xchg
sbbl
or
in
shll
push
fisubrs
add
sbb
push
mov
es
stos
push
push
sub
enter
cmpsb
add
popl
ret
inc
in
sub
fs
inc
dec
push
fisttps
scas
xor
and
out
cmp
jae
scas
dec
out
pop
inc
inc
push
jg
inc
inc
push
insl
divl
test
lcall
or
or
out
bsr
adc
dec
xorl
mov
xchg
jmp
retw
outsb
scas
in
cmp
mov
stos
add
push
ljmp
int3
mov
or
pushf
into
pop
lock
popa
and
xchg
mov
or
inc
xchg
dec
cld
je
dec
shl
test
mov
inc
push
add
aaa
jge
das
xchg
pop
adc
and
cmpsl
inc
and
iret
call
fwait
push
popf
dec
and
jns
push
xchg
xor
dec
scas
add
push
subb
sti
mov
lahf
xor
hlt
pop
cmp
dec
stos
push
inc
ds
mov
nop
and
scas
jo
int
movsb
xor
adc
pop
and
push
and
negl
cmpsl
jmp
sti
adc
iret
mov
pop
pop
sahf
cwtl
out
les
stos
loope
sti
js
fbstp
jl
lcall
addr16
bound
hlt
mov
xchg
mov
mov
loopne
ss
fldl
jae
jl
and
inc
push
in
mov
sub
pusha
mov
int3
test
or
adc
xchg
fdivl
cmp
clc
cmc
push
push
mov
mov
pop
pop
iret
das
loopne
ret
pop
insl
divl
mov
xchg
lods
fisttpl
jno
xchg
js
mov
and
jae
sbb
push
movsb
sbb
sbb
aad
jbe
sbb
loop
sub
out
sub
sub
add
lret
lahf
test
lea
add
add
in
or
push
inc
sub
jnp
pop
xchg
mov
push
mov
insb
and
push
or
rep
jg
push
movsl
into
xor
xchg
hlt
xchg
xchg
cmp
and
imul
inc
ds
mov
rcrl
mov
pushf
push
pusha
aas
mul
sub
clc
cltd
mov
pusha
sti
imul
daa
daa
mov
add
loop
je
mov
xlat
sub
je
bound
out
sub
repz
pop
push
sar
jbe
sti
shlb
fdivrp
cmp
inc
add
add
cmp
or
cmp
adc
and
in
xorb
dec
xor
sbbl
in
mov
in
xchg
sti
adc
cmp
iret
call
insb
push
hlt
sahf
sti
fcmovnu
mov
xor
stos
mov
es
pop
test
popf
jns
mov
movsb
mov
ret
mulb
shl
xor
mov
movsb
clc
icebp
sbb
rolb
popa
mov
loopne
push
stc
jecxz
xor
iret
mov
shlb
cltd
or
lds
stos
mov
or
int3
or
lods
shll
outsl
or
in
das
insl
call
mov
pop
cli
mov
out
int3
inc
out
fistps
aam
add
push
popa
inc
push
in
ds
addr16
int
jle
xchg
pop
fimuls
sub
int3
je
or
arpl
cmp
sbb
sub
nop
stos
movsl
nop
mov
cmpsb
mov
push
fs
mov
mov
dec
lds
addl
mov
dec
mov
adc
cmpsl
mov
mov
aas
lods
incl
and
out
pop
jo
addr16
pop
fldenv
sbb
neg
fisttps
inc
xchg
inc
sub
mov
aaa
cmp
jae
xor
nop
insb
push
mov
pop
inc
cld
dec
jle
or
jo
cli
xlat
pop
subb
and
sbb
and
adc
inc
push
popa
popa
cmp
xlat
cmp
push
cmpsb
xor
adc
ja
pop
or
movsb
jo
addb
addl
sbb
movsb
mov
sub
cli
fwait
sub
dec
inc
fldl
ret
lods
stos
outsl
jmp
dec
pop
out
pop
cmp
mov
inc
das
scas
clc
pop
sbb
lcall
mov
aad
cld
repnz
mov
cmpsl
lahf
cmp
popa
jb
push
in
jo
cmp
pop
ss
stc
mov
pop
inc
push
xlat
fbld
adc
jg
sarb
test
push
or
in
lds
out
in
dec
jae
dec
ja
popa
movsl
mov
cmp
stos
vmwrite
jg
mov
pop
pop
daa
push
pop
sbb
adc
rorl
or
loop
loop
rcrb
pop
adc
mov
into
mov
mov
xor
mov
hlt
lcall
dec
fs
pop
in
jb
enter
mov
in
insl
es
xor
sbbl
and
jp
dec
lret
loope
inc
gs
sbb
cmp
out
in
outsb
adc
jmp
inc
adc
jle
imul
punpckldq
outsb
mov
adc
add
aas
dec
or
scas
mov
mov
fs
push
ficoml
cmp
push
mov
lock
or
in
sbb
fxtract
sbb
mov
mov
push
leave
inc
sub
jne
fisubrl
xlat
jg
out
jb
loope
xor
mov
mov
mov
lds
jne
jo
outsb
jl
cmp
xchg
adc
mov
pop
mov
xchg
daa
sub
pushf
inc
inc
lret
mov
jl
loope
sbbl
rcrl
test
ror
mov
jl
and
lock
sub
xchg
push
sbb
or
pop
sbb
and
pusha
dec
pop
inc
sahf
push
jl
movsb
roll
pop
sbb
jb
lret
dec
jp
ljmp
sub
lahf
xor
test
xor
ja
sbb
cwtl
imul
lea
testb
jge
into
pushf
mov
sub
cmpb
mov
adc
push
adc
xor
loop
jecxz
push
stos
dec
sahf
fwait
cmp
cmp
xor
int
mov
mov
push
mov
and
mov
xchg
bound
ffree
insl
fdivl
js
sub
test
scas
add
fs
insl
pop
int3
and
pop
sub
mov
int3
xor
and
adc
mov
ret
add
pop
mov
push
jnp
shrb
sti
jo
cs
jge
leave
mov
pop
icebp
shlb
aad
dec
xor
rclb
xor
mov
dec
scas
xor
int3
or
push
or
fst
push
lret
mov
inc
or
mov
jmp
cwtl
dec
imul
shl
pop
orb
es
insb
inc
insl
jp
and
ds
xor
adc
add
fidivrs
push
sub
mov
mov
lret
fdiv
loop
loop
mov
pusha
lds
or
cmp
sbb
nop
jle
loopne
jmp
jne
shlb
mov
pop
repnz
fmulp
stos
pusha
jge
sbb
mov
inc
scas
jl
lds
mov
mov
mov
mov
in
jmp
mov
mov
es
mov
pop
add
lcall
arpl
sti
call
add
xchg
stos
sub
jne
cld
lods
inc
jg
jnp
test
xor
or
mov
dec
xor
push
fnstcw
cld
in
cltd
cmp
incl
jp
pop
xchg
xor
xchg
leave
jb
and
jno
jg
out
xchg
popl
adc
pop
fwait
in
mov
in
inc
push
lea
mov
jno
inc
xor
pushf
lahf
mov
pop
and
movsl
scas
imul
xor
or
mov
push
cmc
cmpsl
stos
xor
ljmp
lret
je
fdivrs
movsb
js
push
push
xchg
in
rcl
add
cwtl
decb
rolb
xor
sub
sub
iret
out
add
push
pslld
dec
mov
jmp
mov
push
dec
int3
pop
test
push
pop
cld
sbb
and
jnp
cmp
mov
dec
sbb
inc
mov
adc
mov
and
mov
fistl
fdivl
es
jmp
test
ds
das
mov
cwtl
mov
jp
std
ljmp
dec
js
roll
push
mov
ret
clc
scas
jbe
add
testl
inc
inc
or
test
arpl
jle
fwait
or
mov
pusha
mov
sub
ffree
jge
jno
push
stos
adc
popf
sbb
mov
sbb
xchg
pop
sqrtps
xchg
adc
sub
je
mov
btc
push
aaa
mov
adc
mov
xlat
les
or
cmpsl
repnz
testb
or
jne
or
xlat
cmp
jmp
mov
sahf
jns
xor
adc
repnz
push
pop
dec
stc
cmc
and
sbb
daa
inc
das
fcoms
loopne
jno
enter
mov
arpl
into
adc
jg
and
movsl
pusha
jmp
sub
add
imul
divb
subb
daa
es
add
mov
xor
arpl
iret
pop
add
es
cld
out
call
roll
add
jmp
je
movl
shrb
xchg
in
into
fwait
mov
gs
add
pop
adc
dec
jno
mov
movsl
stc
push
adc
inc
std
dec
incb
xor
jo
lret
imul
dec
cld
and
push
push
and
xor
ljmp
xchg
leave
push
sbb
in
jb
jo
mov
das
testl
add
xchg
pop
nop
adc
mov
inc
pop
lock
imul
xchg
jbe
int
ficomps
out
in
scas
pop
and
js
hlt
movsb
add
aaa
lock
lret
fsts
sub
ss
out
test
dec
movsb
pop
or
mov
dec
repz
ja
cmc
fisubl
or
out
xchg
push
adc
hlt
fdivrs
sub
insb
xor
inc
jmp
in
daa
sti
push
pop
imul
cld
dec
rcrl
add
scas
das
int
mov
push
je
xor
ret
hlt
ret
arpl
loopne
or
xchg
xchg
pop
stos
imul
mov
inc
add
or
inc
xchg
call
gs
icebp
int3
jne
and
xchg
loope
mov
in
aas
inc
cltd
fs
loop
push
fwait
std
sub
out
cltd
ja
andl
xchg
mov
pop
dec
mov
mov
mov
ror
lds
in
bound
inc
push
jae
repz
rol
xor
push
adc
scas
andb
addl
enter
in
sub
fisubrl
mov
cmp
push
xor
cmp
icebp
mov
jns
xor
mov
stos
mov
xor
jnp
mov
into
or
push
jge
cmp
mov
or
popa
xchg
popf
int
testb
sub
jle
xchg
iret
out
inc
sub
xchg
ljmp
das
scas
push
jns
bound
rcrb
sub
fists
xchg
sub
xchg
fwait
or
and
ja
aas
stos
xor
adc
mov
xchg
lret
sub
mov
or
and
out
cwtl
ja
addr16
call
cmp
mov
lods
sbb
outsl
push
jge
test
loope
int3
aad
out
mov
mov
push
dec
enter
cli
cmp
repz
mov
movsl
push
jg
out
mov
cmp
add
dec
sub
mov
mov
or
mov
xchg
repnz
mov
jle
xchg
inc
sbb
dec
mov
cmc
or
rclb
adc
fcmovnbe
out
add
arpl
mov
cbtw
bound
adc
mov
mov
cmp
pmaxsw
addr16
fs
and
push
int
xor
jge
stos
sbb
ja
add
mov
inc
rcrb
pop
mov
pop
in
sub
out
cmc
aam
mov
mov
enter
adc
mov
mov
xchg
addr16
jb
xchg
push
mov
fwait
jo
test
add
adc
cmp
push
int3
and
mov
mov
test
add
lock
idiv
dec
test
std
xor
pcmpeqb
lcall
sbb
ds
xchg
jno
insb
fstpt
xchg
inc
mov
clc
mov
mov
xor
scas
cmp
pusha
testb
cltd
sub
test
dec
add
shlb
push
pop
dec
sub
xor
orl
jg
cld
loop
mov
jmp
xchg
adc
cmp
vaddsd
mov
add
sbb
mov
cmp
cmp
outsb
and
or
pmaxsw
adc
sub
out
in
push
jae
cmpsl
frstor
push
in
xchg
push
fsubs
sbb
sbb
mov
sti
lock
scas
adc
jbe
cld
xchg
inc
fisttpl
xor
call
lcall
push
movsl
adc
cmp
mov
testl
fwait
mov
xor
adc
cmp
iret
mov
cs
int
ret
lret
nop
add
enter
jae
pop
stc
jp
and
fdivp
rcll
or
ljmp
mov
and
out
iret
in
jnp
or
sbb
jg
ss
dec
outsb
or
sbb
adc
or
pop
dec
and
cmp
and
jo
mov
pop
xor
push
ds
sub
or
loope
push
or
fs
rolb
movsb
mov
mov
shll
and
int
add
jecxz
inc
lods
sub
xchg
mov
pop
jbe
cmpsl
pusha
imul
and
jmp
iret
push
es
lret
test
dec
cmp
add
cmp
and
xor
int
mov
inc
jno
popa
adc
fsubs
pop
mov
pop
ret
dec
xor
stos
insl
sbb
stc
add
push
stos
mov
ljmp
mov
jl
push
push
loopne
xchg
inc
xchg
adc
sub
lret
mov
xchg
cmp
lods
stos
out
add
sbb
inc
into
mov
stc
leave
out
lods
and
push
rcl
fcmove
and
jge
mov
loop
nop
jp
push
sti
jbe
sub
or
mov
fiaddl
adc
stos
cs
lds
xchg
ja
sar
push
jno
inc
and
fdivs
test
sub
cmp
dec
dec
cli
xor
mov
fcmove
xorps
xchg
cmp
ja
dec
sahf
fyl2x
mov
adc
ljmp
and
add
stos
ss
push
decl
sarb
lret
out
int3
adc
test
out
insl
popf
fdivrl
imul
or
out
outsl
mov
mov
push
mov
gs
arpl
push
dec
in
or
testb
jle
lret
mov
mov
ss
leave
push
mov
push
jmp
scas
push
clc
sti
cmp
dec
lds
addl
psubusw
stc
movsb
xchg
enter
es
dec
pop
out
daa
leave
daa
sub
test
cmp
mov
shl
ljmp
data16
aam
loope
out
lods
fnsave
xrelease
cmc
adc
mov
imul
adc
stos
imul
int3
bound
mov
data16
lret
mov
fiaddl
imul
cwtl
aas
dec
adc
adc
xor
mov
or
pop
ss
lds
adc
push
add
mov
lods
cmp
daa
xchg
cmp
out
fmuls
sbb
ds
ja
int
into
xor
jns
dec
icebp
pop
stos
or
out
data16
stos
push
push
rorl
fimull
sbb
sarl
call
xchg
xchg
stos
add
xor
jecxz
int
or
jo
cmp
lret
testb
shll
mov
int3
xchg
je
or
jno
inc
ret
pop
es
pushf
icebp
scas
jmp
movsl
add
sbb
lods
loop
test
rcrb
xor
or
mov
fcmovnb
mov
pushf
ds
or
shlb
push
and
push
mov
repnz
pop
mov
jg
rcrl
imul
xchg
push
push
pop
lods
loope
jecxz
mov
dec
jle
sbb
push
pop
daa
jecxz
popa
xchg
cmpsb
mov
add
sub
inc
sar
es
push
mov
mov
jp
cwtl
jmp
cwtl
test
outsb
addr16
dec
jp
adc
aad
fmul
jae
movsb
movsl
mov
mov
int
call
xchg
mov
mov
dec
inc
or
pusha
out
mov
sti
push
icebp
out
mov
mov
ret
ljmp
inc
movsb
idivl
lds
xchg
test
dec
sarl
shlb
test
mov
icebp
and
outsb
mov
adc
jno
adc
push
js
push
outsb
sub
outsl
mov
rcrl
cmpl
dec
mov
dec
or
fdivl
pop
test
aaa
push
mov
stos
dec
test
in
cmp
sbb
adc
lcall
and
mov
xchg
and
push
sahf
mov
cmpsl
shrl
ds
or
push
pop
es
mov
sarl
hlt
inc
push
ds
or
pop
push
int3
sar
test
push
in
pusha
cmp
xchg
xlat
xchg
popf
xchg
jnp
pushf
leave
adc
das
inc
push
insl
js
loopne
aam
lods
in
mov
xor
lods
call
sbb
jge
lods
or
push
insl
or
adc
sbb
xchg
inc
or
pusha
loopne
gs
mov
cltd
fucom
xchg
test
aas
hlt
cmp
mov
pop
jbe
ss
lahf
xor
xor
and
and
jne
mov
pop
ret
adc
mov
outsl
into
dec
push
inc
sub
fdivrs
inc
jns
jecxz
es
aad
push
pop
xlat
les
xor
mov
mov
dec
sub
mov
in
icebp
sar
sarb
in
xchg
jp
stos
mov
xchg
lret
pop
sbbb
icebp
pop
cmp
lcall
repnz
dec
idivb
in
loope
repnz
test
stos
dec
jns
sbb
and
jno
xor
idiv
daa
adc
and
mov
stc
jnp
dec
mov
inc
and
cli
das
push
mov
shrb
loop
jnp
lods
jae
mov
inc
cmpsl
ljmp
pop
daa
imul
out
scas
cmc
aad
cmpsl
iret
xor
iret
scas
xchg
jae
lcall
stos
sub
jne
gs
rcrb
decl
sahf
xor
std
rcl
mov
mov
test
nop
dec
inc
add
shrl
decl
mov
into
dec
sbb
push
push
cld
push
sbb
jae
lret
mov
arpl
mov
or
push
xlat
ficoml
cli
mov
fs
xor
idivb
pop
popa
sub
test
les
sbb
xor
mov
jb
xor
cmp
sbb
pusha
dec
push
ja
inc
mov
fiaddl
aaa
push
jnp
test
pop
sbb
call
and
push
xor
cmp
cmp
mov
nop
sbb
aad
pop
mov
sbb
mov
shl
mov
enter
or
popf
mov
sbb
fidivrs
mov
pop
or
mov
mov
out
push
xchg
pop
xor
or
rcl
mov
add
mov
imul
iret
cmpsb
icebp
popl
jg
xchg
out
lods
cmp
xor
scas
xor
lret
sub
push
mov
sti
mov
mov
iret
pop
imul
arpl
xor
aad
inc
mov
arpl
add
dec
cld
sbb
and
mov
jle
adc
filds
stc
iret
mov
icebp
xor
or
daa
pop
sub
dec
lea
pop
notb
mov
inc
ret
jb
sbb
es
inc
loope
sub
adc
and
outsb
push
cmpsb
fs
popa
xchg
insb
mov
pop
and
aaa
stos
insb
imul
nop
inc
sub
daa
pop
call
jbe
jecxz
mov
pop
fdivs
mov
testl
and
jne
loop
test
gs
pop
dec
lcall
add
arpl
icebp
ror
repz
cmc
sarl
and
repnz
dec
push
aaa
mov
cmc
sub
stos
and
loope
addr16
pop
or
nop
xchg
and
fcmovu
push
dec
sbb
mov
dec
hlt
outsl
sbb
jmp
cmp
sbb
jno
dec
adcl
dec
jae
xchg
pop
xchg
jnp
cmp
push
add
stos
or
xor
shl
sub
imul
mov
jp
cmp
cltd
cmp
or
ds
xchg
mov
fidivrs
insl
adcb
pop
cmp
sahf
sbb
mov
ret
in
dec
loop
in
xor
bound
mov
ret
jbe
push
popf
pop
inc
mov
loopnew
mov
sbb
addr16
push
out
mov
mov
jae
jp
repnz
scas
mov
in
mov
mov
outsb
mov
stc
je
cs
xlat
jg
push
mov
sub
dec
adc
or
popa
test
out
inc
mov
aas
xchg
sbbl
lock
pusha
inc
inc
pop
sarl
lahf
fisubs
inc
mov
leave
test
xor
ja
inc
mov
dec
and
push
idivl
int3
aaa
jne
out
mov
mov
fists
push
je
repz
jp
dec
loopne
sbb
inc
mov
out
popa
push
mov
or
addr16
enter
jle
add
dec
pop
daa
push
cli
out
jle
imul
sbb
xchg
add
jnp
arpl
sbb
bound
loopne
add
jp
xchg
addr16
into
dec
sbb
icebp
nop
or
sbb
in
jne
and
cmp
cmpsb
in
push
and
mov
xlat
scas
loopne
out
loope
adc
scas
jl
iret
and
dec
mov
and
addb
aaa
pop
in
rorl
sub
add
push
ret
pop
xor
sbb
mov
mov
dec
pop
int
nop
cmp
addl
popa
push
mov
fildll
push
test
pop
scas
cmp
mov
jp
xchg
or
mov
push
push
shrl
xchg
fwait
enter
sbb
lcall
mov
xor
in
fisubrl
lahf
jmp
imul
clc
imul
nop
int
mov
jae
sbb
or
or
shlb
mov
mov
jge
aaa
ficoms
ja
and
push
fdivrl
clc
out
inc
jp
ret
mov
push
pop
fnstsw
jbe
xor
out
loop
xor
and
arpl
iret
push
lds
out
stc
in
mov
cmp
or
stos
lock
mov
es
lcall
aam
in
and
cmp
iret
mov
sti
insl
mov
fs
out
lods
or
add
aam
in
sbb
inc
sarb
push
pop
xchg
push
push
rcl
aad
xor
repz
push
cmp
ja
sti
pop
int3
jge
mov
cld
mov
jp
push
dec
int3
cmpsb
cmpl
pop
imul
push
mul
in
inc
mov
lret
lret
mov
fstpt
inc
push
sub
loopne
ja
dec
int3
jns
pop
sub
nop
inc
into
sbb
lods
mov
mov
xchg
cmpl
pusha
push
in
mov
popf
std
xor
mov
ds
sbb
in
in
push
das
xor
dec
xchg
mov
sub
lahf
inc
test
loope
dec
out
xlat
clc
hlt
add
popf
insb
push
test
push
mov
sub
mov
dec
dec
negl
or
adc
sahf
pusha
xlat
or
sub
iret
data16
icebp
mov
ret
xor
rclb
and
nop
nop
addl
xchg
scas
sub
xor
adcl
in
xchg
mov
mov
dec
inc
ljmp
dec
std
je
pop
jbe
mov
xor
arpl
cmp
or
lods
xchg
push
jl
pop
loope
jp
adc
add
lods
dec
sub
mov
in
push
adc
in
lahf
fldl
mov
leave
rol
adc
fisttpl
int3
mov
ja
sub
xchg
mov
mov
popa
jno
push
jge
push
sub
sub
pushf
push
iret
pop
mov
rcr
je
adc
inc
jmp
pushf
stc
fcomip
rorb
test
xchg
sbb
xchg
xor
xchg
pop
ret
pop
sub
loopne
cmp
sbb
bound
fidivrs
insb
aam
fsubr
cmp
scas
jp
ficomps
xchg
mov
out
flds
leave
and
jge
lret
dec
movsb
or
faddl
push
repnz
lahf
pop
cli
adc
rcll
pop
mov
loop
ficoms
nop
sub
loope
jecxz
xchg
xlat
fdivrp
in
cmpb
out
jne
fistl
mov
and
std
lahf
ljmp
push
lret
cmp
popf
cmp
pop
cmpsb
sbbb
or
cmp
mov
fnstenv
call
ret
pop
push
xor
pop
outsb
xor
cmp
leave
lcall
movsb
int3
inc
xor
insb
iret
mov
aam
push
popl
dec
push
out
sbb
fsubl
out
and
les
std
add
in
leave
and
xlat
adc
data16
shlb
sub
repnz
cwtl
pop
lret
push
test
loopne
add
cwtl
xchg
xchg
test
xchg
or
push
mov
mov
xor
or
mov
cmc
pop
ja
inc
and
ret
les
loope
push
mov
scas
jbe
outsl
pusha
call
xchg
iret
js
sub
stos
xchg
lret
fdivp
orb
out
loope
pusha
push
sbb
sbb
inc
push
sbb
out
xadd
test
ret
xchg
popf
pop
div
stos
mov
stc
sbb
sub
outsb
xchg
mov
sbb
std
push
aad
jno
test
jae
in
jb
cmp
jmp
jo
lahf
bound
push
loope
xchg
shl
sbb
xchg
insb
out
mov
shlb
loopne
into
push
rep
pusha
lahf
sbb
dec
insb
mov
rcll
aas
ss
inc
add
push
and
adc
rorb
and
dec
lahf
pusha
jbe
jae
je
mov
daa
icebp
push
in
push
fnsave
dec
arpl
pop
add
daa
loopne
jg
les
sti
popa
pop
push
fdivrp
or
pop
xchg
fnstsw
lret
ret
sub
mov
dec
push
sbb
insb
push
test
or
and
adc
bound
xor
jmp
mov
cltd
out
jge
outsl
test
pop
lock
cmc
inc
mov
sub
bound
xor
je
push
pop
pushl
dec
sahf
xor
mov
loope
lahf
cmp
shll
and
fmull
jno
mov
shl
jnp
or
mov
sub
mov
or
dec
jae
int3
cmc
data16
add
xor
aam
cmpsl
pop
insb
in
push
cwtl
orb
lahf
mov
push
into
or
add
xadd
dec
aas
mov
into
push
dec
popa
inc
push
mov
dec
and
or
js
leave
out
dec
aaa
add
xor
dec
aas
jo
lcall
popa
bound
adc
cwtl
xor
lret
mov
inc
push
pop
inc
jbe
pop
mov
mull
in
add
xor
push
mov
jge
pop
xor
adc
fidivl
in
ljmp
pushf
lahf
mov
mov
jle
xchg
fldcw
mov
push
mov
xor
fidivl
or
addl
inc
out
ficomps
sub
pop
shr
xor
pop
xchg
add
sub
cmp
into
sub
push
cltd
aad
pop
pop
outsl
test
mov
jg
xchg
cmc
call
stos
jb
loope
insb
or
rorl
xlat
cmp
sbb
push
adcb
fldl
push
mov
adc
adc
cmp
jne
mov
mov
mov
pop
dec
add
popa
xchg
bound
in
cltd
xchg
je
mov
xchg
pop
mov
test
int3
mov
mov
sub
pop
repnz
bound
jl
decl
and
arpl
jnp
mov
cwtl
pop
data16
adc
mov
mov
push
cltd
repz
and
das
das
and
push
das
xor
ret
les
fdivrp
pop
push
popa
dec
and
and
jbe
xor
lret
inc
dec
xchg
xor
js
jnp
sysexit
lods
imul
mov
outsl
push
cmp
stos
or
pushf
pop
cmpsl
push
mov
xchg
cmp
ja
call
jl
ljmp
jae
fwait
ja
mull
imul
push
out
jecxz
adc
gs
or
jnp
mov
rcrb
jne
jno
lret
sub
sbb
or
into
cmp
pop
jno
cmp
sbb
xchg
shrl
add
sbb
cltd
dec
shrl
add
jg
add
push
add
je
aad
nop
cmc
adc
enter
ds
fcmove
dec
aaa
add
jne
mov
pop
fidivs
ds
sbb
adcl
or
movb
jae
lret
hlt
lods
pop
fwait
jnp
or
jle
add
mov
cmp
add
or
dec
push
ss
mov
cld
jp
in
mul
adc
cmpsb
inc
mov
out
out
inc
mov
in
adc
cmp
dec
aad
mov
cli
rol
lods
mov
sub
lret
popa
int
js
mov
arpl
das
jl
jns
mov
in
dec
inc
leave
or
inc
jp
sbb
stos
mov
clc
jae
sbb
insl
jae
daa
push
mov
cmpsl
and
mov
adc
and
subb
dec
hlt
dec
out
jg
push
lods
add
sub
outsb
and
inc
or
inc
mov
mov
cmc
and
pop
insl
xor
lea
rcr
push
pop
daa
sti
mov
fs
xor
stos
cli
daa
loope
cmp
pop
imul
mov
cld
in
scas
inc
iret
push
inc
push
scas
mov
jecxz
fwait
dec
xor
cmp
inc
ficomps
dec
clc
nop
ss
push
mov
dec
add
in
sahf
in
lods
fadd
jge
bound
xchg
outsb
mov
pop
stos
out
sbb
xchg
divl
adcb
test
fwait
xor
jae
and
jle
imul
leave
inc
mov
mov
les
jbe,pn
jno
fists
sub
outsb
push
cmp
push
pop
cltd
sub
imul
leave
push
xchg
inc
shlb
push
add
push
mov
jbe
arpl
pop
outsb
arpl
idivb
lahf
pop
sbb
lock
in
fstpl
xchg
and
or
mov
cwtl
fisttpll
inc
nop
bound
adc
push
nop
scas
cmp
inc
lods
or
jno
lahf
jne
inc
and
dec
mov
int3
out
das
dec
jg
movsb
xchg
int
outsl
pop
add
std
cmpsl
jno
aad
push
jbe
and
and
pop
sbb
xchg
in
sbb
adc
adc
mov
test
out
je
xchg
jo
adc
das
pop
jg
mov
fucom
mov
add
xor
aad
dec
sub
cmc
push
test
push
es
lock
inc
mov
int3
fdivrl
sub
cmp
aaa
dec
mov
scas
mov
xchg
xchg
mov
push
xor
adc
adc
lds
pusha
shrl
loopne
xchg
xor
mov
dec
mov
dec
mov
xchg
mov
call
test
fisttpl
mov
push
rorb
aam
xor
xchg
test
mov
out
cmpl
enter
jns
cmp
jbe
cmpsb
loopne
das
mov
jne
inc
les
ja
cmpsl
cmpl
push
into
ds
lahf
mov
mov
jp
std
ja
mov
adc
sbb
int3
ret
pop
inc
dec
inc
inc
scas
inc
bound
xchg
xor
jns
frndint
ja
mov
cwtl
adc
lea
mov
pop
mov
dec
iret
sub
xchg
push
mov
add
add
mov
sbb
insb
fisttpl
xchg
fildl
pop
xchg
add
pop
insl
jae
and
xor
or
fdivrl
das
add
js
daa
aad
cld
shr
xor
dec
stos
sti
cmp
add
test
xchg
xchg
shll
loopne
cmpsb
imul
movsl
popf
mov
and
ficomps
lock
dec
and
lret
jne
mov
pop
scas
xor
mov
roll
cwtl
inc
sti
cltd
gs
bound
movsl
adc
dec
jp
mov
xchg
ficomps
addr16
into
out
enter
jp
xchg
mov
pop
stos
cmpb
mov
or
or
int
pushf
popf
mov
sub
das
ja
fbstp
cmc
cli
mov
arpl
shll
and
pop
out
cwtl
sbb
repz
insl
cwtl
fistpll
out
aas
sub
jns
mov
mov
in
daa
loope
jg
cmp
mov
out
rolb
repnz
sub
rcl
cli
pop
in
push
cmpsl
sbb
jge
mov
sub
cld
in
stos
std
test
sub
dec
dec
push
cwtl
jge
adc
dec
xor
push
mov
mov
xor
out
xor
icebp
add
outsb
subb
ror
out
clc
jne
adc
out
cs
mov
jle
out
aam
test
cmpb
int3
adc
cli
cld
cmpsl
dec
ret
pop
pop
out
out
mov
jle
add
ja
cs
movsb
arpl
loop
adc
hlt
add
scas
push
sti
push
adc
mov
jp
add
aas
ss
and
lret
adc
int
add
and
dec
push
outsl
pusha
push
pshufw
and
js
sub
push
sub
xor
aas
mov
enter
and
lahf
aam
or
fcmovbe
push
popa
push
ficompl
push
repnz
xchg
sbb
jmp
flds
pop
mov
sbb
imul
and
data16
pop
push
mov
stos
cmp
mov
lods
cwtl
test
ljmp
pushf
push
mov
emms
insl
and
mov
jae
cmp
xchg
pop
bound
fiaddl
test
mov
stos
inc
es
sub
mov
jae
dec
fadds
daa
and
popa
lods
jnp
xchg
sub
rorb
test
inc
xor
inc
imul
in
xor
nop
sbb
sbb
ret
arpl
sbb
pop
int3
xor
pop
mov
mov
push
andb
cmpl
leave
xor
push
inc
mov
cmp
punpcklwd
and
pop
mov
mov
inc
jmp
pop
mov
fwait
ja
jl
and
jle
into
push
xchg
popa
mov
and
lods
test
inc
dec
dec
mov
mov
mov
ret
aaa
hlt
push
popf
sarl
lods
cli
pushl
jae
jo
lret
das
mov
add
mov
dec
pop
mov
jnp
push
adc
fstps
imul
xor
std
call
lahf
pop
ret
dec
xchg
inc
cmp
push
in
adc
add
pop
je
aad
cmc
pop
popf
out
push
jb
hlt
mov
cmp
out
data16
sbb
sub
sbb
push
sub
int
jnp
je
jle
jecxz
pop
mov
jb
loopne
nop
add
rorl
cmp
loopne
clc
test
xlat
fs
pushf
and
push
push
and
nop
jbe
inc
jb
out
sbb
inc
mov
sbb
sub
xchg
shll
sub
xchg
dec
popf
push
mov
pop
fwait
lea
mov
mov
push
cmp
jmp
xor
sahf
in
xchg
mov
mov
test
cmp
mov
decb
fwait
jnp
mov
cltd
fsubrl
testb
fldlg2
adc
or
stos
jb
rcll
cs
aad
repnz
sbb
rcrb
xchg
mov
daa
xchg
imul
orl
push
pop
adc
cmpsb
scas
mov
sbb
pop
sbb
dec
movsl
into
enter
ds
cld
cmp
or
pop
pop
xlat
das
mov
and
push
pop
sbb
stc
insb
shlb
rcr
gs
mov
dec
cwtl
jecxz
lods
jns
fldenv
popa
cmpsl
push
push
popf
xor
pop
adc
ret
cmpsl
mov
repnz
sub
and
mov
push
mov
mov
and
imul
pop
in
jl
nop
mov
add
push
rolb
shrl
xlat
sub
jg
scas
add
mov
cmp
xchg
mov
repz
shl
cmp
outsb
fs
gs
inc
gs
in
xor
mov
ret
mov
cmp
mov
adc
xchg
push
adc
push
mov
push
not
es
cmp
cmc
loopne
xor
sbb
sbb
pop
aad
shr
movsb
ss
aam
loope
push
loope
jmp
in
or
fdivrl
movsb
mov
int3
mov
cmp
mov
xchg
jecxz
cmpl
cmp
mov
jo
lcall
and
arpl
outsl
in
gs
aam
cs
daa
out
push
cmp
push
push
in
xchg
movsl
jle
push
mov
add
ret
dec
insb
inc
add
push
nop
nop
mov
imul
adc
loopne
ficompl
mov
pop
xchg
loope
add
mov
mov
cmpsb
jmp
xchg
adc
push
clc
mov
call
out
mov
aaa
fstpl
mull
fsubl
push
lods
test
push
dec
add
clc
stc
pop
orl
shrb
mov
clc
arpl
in
xor
xchg
arpl
je
sbb
mov
xchg
lods
js
lahf
in
adc
xchg
pop
add
pop
xor
push
movsb
or
mov
inc
imul
in
in
or
enter
inc
roll
pop
jg
pop
in
xchg
pop
insl
ljmp
xchg
pushf
mov
nop
pop
ret
xchg
sbb
stos
scas
femms
dec
lods
insl
dec
clc
and
cmp
dec
imul
popf
in
push
inc
out
xchg
sbb
sbb
xchg
xor
in
stos
pop
fxch
xchg
fdivr
xchg
xor
xor
mov
insb
xor
mov
stos
jle
lcall
sbb
add
inc
and
test
dec
mov
jle
adc
mov
mov
xchg
xor
xchg
cmpsb
fmuls
gs
jecxz
xor
xor
fwait
cmp
push
fldenv
lret
aad
inc
push
inc
arpl
push
and
push
jle
es
push
jne
cmp
mov
mov
jecxz
push
mov
mov
mov
fadd
notl
cld
loope
es
imul
icebp
in
sahf
adc
imull
xor
push
cmp
jp
fnstcw
jecxz
xchg
lods
pop
cwtl
xchg
xchg
mov
mov
out
pop
aaa
cmpsl
push
sbb
int3
xorb
cmp
dec
pushf
ret
cmc
dec
aaa
sahf
mov
mov
push
jbe
call
sub
cld
push
or
insl
mov
repnz
icebp
adc
push
je
mov
add
je
xchg
mov
xlat
in
mov
push
negb
pop
xchg
or
loopne
icebp
ror
and
dec
inc
inc
adc
fxch
sub
xchg
or
stos
lea
imul
and
call
loope
fnsave
and
inc
mov
into
lret
pop
ja
imul
imul
jecxz
jno
int
lds
or
ret
outsb
orl
loope
push
repz
cwtl
call
xchg
fisttpll
add
dec
ljmp
out
push
scas
movsb
push
xchg
pop
sub
xlat
nop
lahf
ja
push
icebp
dec
push
add
and
int
insb
pusha
adc
mov
repnz
xor
mov
or
lods
xchg
ja
push
jecxz
int3
xor
cmp
pop
out
mov
mov
pop
inc
xchg
push
xor
stc
mov
push
mov
scas
inc
cmpsb
pushf
shlb
or
cli
cmp
xchg
bound
sahf
pusha
fsubr
jns
push
lret
into
push
push
xchg
icebp
dec
mov
or
in
add
xchg
insb
sub
in
cmpsl
ja
jo
fidivs
in
sahf
sbb
bound
inc
cwtl
jns
or
test
lods
arpl
adc
add
into
cli
or
sbb
or
fisttpll
ja
outsl
ds
cmp
ds
pop
out
in
scas
push
pushf
jb
les
mov
shr
in
dec
adc
inc
jp
mov
mov
ret
addr16
sub
aaa
and
data16
clc
cs
xor
mov
addb
fwait
dec
in
cmp
dec
push
int3
mov
push
ja
mov
mov
lret
rcll
daa
mov
and
dec
in
or
int
jg
mov
mov
or
pushf
bound
pop
mov
decb
pop
adc
push
rcrb
pop
push
pop
pop
nop
sbb
push
xchg
push
mov
inc
xor
pop
pusha
pop
or
mov
push
and
inc
xchg
loopne
add
je
dec
dec
test
cld
add
sarl
sbb
jg
adc
jle
and
sub
dec
or
lret
jo
stos
dec
ret
inc
xlat
repnz
cwtl
xor
adc
push
xor
mov
popa
mov
mov
out
mov
mov
idivb
imul
jno
jle
adc
movsl
outsb
aad
movsb
mov
cmc
mov
imul
and
into
scas
add
inc
mov
xor
lods
mov
or
pushf
jno
ret
lret
and
cli
mov
bound
cmp
bound
rorb
lret
ficomps
cmp
cmp
rcl
repz
idivl
pusha
stc
push
or
mov
add
lds
or
sbb
push
sbb
push
lahf
sbb
into
inc
fstpl
adc
cmp
lcall
push
lds
out
enter
pop
and
cltd
and
cmp
fsub
cltd
adc
adc
xorb
andl
fiadds
stc
or
xor
sahf
sub
clc
aas
add
adc
xor
jns
dec
sub
pushf
fcoms
dec
sbb
cwtl
jo
andl
or
fiaddl
outsl
orb
sbb
fidivrl
cmp
ret
rcrb
mov
cli
in
cmc
mov
jmp
bnd
xlat
cmp
push
xor
sbb
addr16
les
in
jns
lret
pusha
out
out
pop
mov
loope
es
decb
sti
hlt
loope
and
add
xchg
sti
adc
testb
loope
mov
push
loopne
in
add
stc
sub
mov
pop
add
cmp
lret
in
sub
adc
xor
scas
insb
sbbb
lret
int3
jo
pop
subb
dec
jns
nop
xor
xor
xor
bound
das
addl
cmc
pop
sti
adc
cltd
stos
mov
addb
jmp
jnp
add
push
push
sub
push
pop
in
mov
ret
out
aam
fstpt
cmpsl
sub
lret
int
mov
ret
ficoms
pop
mov
aas
int
jns
fstl
inc
mov
pop
pop
imul
cmp
sti
and
int3
jo
jg
mov
mov
out
rcrb
out
fidivrl
adcl
jo
pop
mov
push
scas
jp
int
mov
outsl
sti
and
and
cmpsb
repz
fdecstp
xor
int
xchg
inc
inc
mov
push
cmpsb
aad
add
sbb
out
pop
pop
ss
loope
daa
pop
out
mov
arpl
sbb
out
rol
adc
andb
in
cltd
popf
pusha
es
jle
cmp
fcom
mov
adc
leave
mov
inc
jle
pop
icebp
outsb
jae
sbb
or
icebp
cmp
xchg
pusha
and
fstpl
pop
imul
cmp
dec
stc
stc
adc
xor
inc
adc
dec
mov
and
xchg
stc
sbb
cli
clc
push
cmp
pusha
ret
cmp
mov
jecxz
mov
sbb
je
punpckhbw
add
aad
cmp
pop
into
lcall
dec
push
test
dec
subb
pop
or
lock
test
rolb
aas
adc
mov
and
leave
rclb
lahf
sbb
loop
out
popf
lods
xchg
push
icebp
into
in
push
test
or
movsb
push
xor
fisubs
dec
cmp
orb
dec
mov
mov
push
add
pop
gs
cwtl
les
mov
sbb
pop
stos
hlt
shlb
sbb
ljmp
pop
ja
add
cmpsl
test
jmp
cmp
sbb
mov
cmpl
rcll
sub
push
push
xchg
push
pop
ljmp
mov
imull
jns
adc
jg
adc
cli
dec
pop
leave
inc
inc
scas
dec
pop
repnz
pop
rorl
scas
mov
sbb
push
int
test
mov
sub
push
mov
into
jge
add
loope
or
push
fwait
cmp
or
inc
xchg
push
pop
stc
mov
cld
pop
xor
divb
pop
sbb
jmp
mov
inc
adc
or
pop
rorl
movsl
cwtl
out
xor
addr16
lock
mov
mov
lods
push
outsb
dec
xchg
pop
add
pop
jl
leave
pop
jnp
xchg
popf
int
jno
test
xchg
out
test
js
jb
mov
sub
les
dec
pop
stos
dec
xchg
xchg
aaa
ljmp
fdivrs
or
sbb
add
into
mov
stos
jne
jne
or
sbb
xchg
xor
insb
xchg
sbb
push
addl
dec
outsb
adc
ljmp
or
fbstp
iret
je
addr16
dec
out
mov
jo
in
daa
xchg
jmp
sbb
leave
cmpsl
nop
sub
add
pop
roll
hlt
mov
cli
mov
mov
sub
mov
mul
sub
ljmp
bound
mov
mov
lcall
jmp
and
imull
pushf
sub
inc
cmp
pop
out
comiss
ret
sbb
sub
xchg
loope
subb
xchg
sti
mov
rcl
or
pop
les
das
adc
and
sbb
or
mov
jmp
jno
pusha
mov
cmp
xchg
cmpsl
inc
or
pop
jnp
imul
mov
mov
lea
cli
je
jmp
popa
inc
ror
push
mov
xchg
mov
enter
adc
fwait
movsl
xchg
sbb
shlb
cmp
scas
and
movsl
push
dec
dec
jno
jb
jnp
jecxz
outsl
mov
lret
outsl
pop
lods
popa
lret
lock
sbb
or
ljmp
fs
daa
mov
add
mulb
xchg
or
push
mov
jae
xor
mov
jmp
add
mov
fwait
lds
or
mov
ds
xchg
mov
jmp
in
std
push
inc
mov
stos
push
loopne,pn
jns
push
inc
test
push
hlt
jmp
enter
repz
push
stos
dec
mov
rcr
hlt
mov
jne
in
cli
mov
pusha
dec
inc
cmp
xchg
test
test
out
push
sbb
xor
sbb
mov
out
cmp
loope
int
push
stc
cmp
dec
daa
xchg
movb
insb
cwtl
fistpll
ja
loope
dec
push
movsl
test
roll
pop
incb
mov
jp
and
es
rorl
cmp
push
lahf
cmp
mov
fmull
and
test
push
and
scas
rcrl
dec
int
mov
imull
insb
lahf
pop
ffreep
iret
gs
adc
lds
sbb
pop
ret
inc
inc
adc
repnz
hlt
jecxz
cmp
in
mov
loopne
maskmovq
divl
add
dec
mov
adc
out
push
ret
lods
push
iret
es
push
and
enter
mov
movlps
lods
data16
push
test
popf
inc
push
mov
jge
adc
inc
xchg
fwait
ljmp
rorb
jb
mov
xor
rcrl
sub
mov
pop
ret
cmc
pop
xor
in
cmp
mov
sbb
sub
imul
lock
adc
inc
jnp
sbb
cmpb
test
movsl
ret
fcomi
int
lcall
xchg
add
pop
adc
add
cmp
bound
pop
icebp
sub
jp
dec
fadds
xorb
mov
test
aaa
inc
idivb
fdiv
mov
nop
das
leave
cmp
mov
adc
leave
loope
insl
xlat
mov
in
mov
xchg
lahf
mov
cld
jmp
pop
jle
mov
fsub
rorb
fistpll
or
mulb
lods
cmp
cltd
fisttpl
shl
fstpt
mov
aam
dec
lcall
aaa
add
clc
adc
fistpll
shlb
mov
pop
dec
cmp
pop
add
or
das
ret
pop
pop
mov
mov
add
mov
xchg
movsl
mov
roll
sub
mov
sbb
les
pop
push
mov
adc
mul
fisttps
inc
dec
ds
xor
fwait
ds
cmp
mov
js
sub
mov
cmp
inc
mov
into
cs
repz
sub
shrl
mov
pushf
add
xor
cmp
cmpsb
inc
xlat
jns
jns
xlat
lcall
decl
xchg
pop
sub
ljmp
addr16
adc
std
iret
inc
xchg
je
pusha
sub
xchg
lahf
pop
pslld
pop
jmp
sbb
imul
enter
xor
cmc
in
loop
shll
adc
test
into
out
sarl
ret
mov
mov
inc
sbb
xor
jp
xchg
and
outsb
cmp
pop
mov
fs
mov
retw
rclb
das
enter
ljmp
imul
sub
mov
jge
sbb
mov
cmp
imul
call
arpl
mov
loop
lods
dec
mov
sub
pop
add
fwait
jo
cmp
inc
xor
addb
sub
pop
repnz
ds
mov
xchg
xor
xlat
pop
adc
aas
test
mov
imul
gs
push
dec
js
out
clc
lds
pop
out
add
mov
ret
gs
es
push
xchg
add
sbb
dec
inc
popf
xor
shlb
jb
adc
or
clc
jo
repnz
dec
add
lahf
loopne
ror
fildll
shrl
outsb
adc
xchg
sahf
dec
mov
inc
sub
iret
mov
push
xchg
or
sbb
repz
sub
cmc
out
dec
cmpsb
push
loope
pushf
das
sbb
mov
test
sti
pop
sub
das
xor
jp
arpl
lods
cmp
mov
loopne
sub
jae
push
inc
test
shll
test
test
xchg
xchg
mov
sub
adcl
mov
cmp
daa
in
dec
fnstsw
pop
in
sub
push
dec
outsl
xchg
dec
outsl
aas
std
lret
adc
iret
add
daa
or
jecxz
pop
mov
xor
sbb
mov
xchg
imul
movsl
out
mov
lcall
jno
adc
repnz
ret
xor
addr16
test
es
mov
in
pop
pop
adcb
dec
or
stos
pusha
sbb
xchg
in
cltd
jnp
xor
popf
movsb
or
cmp
jp
adc
pop
adc
int
cmp
cmpsl
lahf
pop
push
inc
sub
jmp
sbb
cli
dec
addr16
xchg
push
in
popa
push
push
mov
imul
cmpl
xlat
hlt
push
inc
les
jae
nop
add
mov
cmpsb
in
hlt
in
push
lods
fbld
mov
mov
cwtl
sbb
sub
or
push
sbb
add
lea
movsb
mov
xor
mov
mov
movb
ret
mov
jl
in
incb
lods
dec
mov
dec
movsl
mov
lret
decb
fistl
iret
xor
adc
les
mov
nop
inc
stos
pop
shrb
or
addr16
mov
into
movsb
cmp
adcl
xor
scas
enter
sbb
test
sub
cmp
cli
mov
in
xor
stos
mov
nop
fstpt
pushf
ds
cwtl
std
xchg
das
inc
xchg
repz
sbb
cmpl
stc
inc
mov
xchg
ljmp
mov
mov
mov
out
cmp
jb
pop
lret
xlat
add
inc
dec
sbb
addr16
inc
aas
fs
mov
jecxz
lahf
adc
dec
inc
lds
bswap
ja
mov
push
das
xlat
stos
cwtl
xor
iret
sahf
adc
imul
nop
push
fstpl
sti
xor
pop
or
add
sti
sti
insl
imul
sbb
rcrb
or
and
je
xor
pop
aas
repz
cmc
outsb
mov
and
jbe
dec
in
adc
pop
cmpsl
adc
jnp
mov
loopne
pop
jbe
jecxz
in
pop
push
mov
or
sbb
in
outsl
popf
cmc
dec
jp
in
cmp
cmp
sbb
jcxz
mov
xchg
in
mov
icebp
xchg
mov
jnp
cwtl
inc
cmp
ljmp
imul
push
pop
divl
jnp
cld
cmp
xchg
cltd
inc
cmpsl
mov
adc
pop
je
sti
nop
xchg
xlat
cmp
xchg
sbb
adc
sar
inc
aam
cmp
loope
xchg
jmp
push
repz
add
outsb
stc
lock
pop
xchg
push
or
pop
inc
sbb
jl
mov
mov
rorb
jp
push
int
xor
or
jl
cmp
inc
mov
sahf
test
mov
xchg
arpl
jmp
inc
int
fmuls
cwtl
mov
shlb
xchg
inc
adc
push
add
mov
enter
rorl
idiv
pop
insl
stos
loop
test
jb
call
push
outsl
ficoms
aas
loope
ret
pop
mov
push
outsl
daa
dec
jo
pop
jne
ret
daa
fsubrp
and
inc
loope
mov
jae
and
dec
pop
lock
shll
aad
dec
lds
ret
aam
dec
xor
daa
lss
mov
or
sub
rclb
mov
pop
imul
mov
add
xor
jge
out
imul
out
jl
mov
movsl
std
call
inc
iret
pop
xor
lock
sub
add
scas
cmp
cmp
jno
cmp
div
push
or
loop
fcoms
mov
dec
insb
cmp
cmpsb
push
xchg
jns
mov
xchg
mov
lea
xchg
jns
mov
add
jnp
pop
stos
cmp
lea
aam
mov
push
mov
clc
in
addr16
adc
cmp
jo
fsubs
fcoms
ja
inc
bound
lcall
cwtl
add
xchg
dec
inc
adc
inc
inc
or
lcall
int3
test
in
fistpll
add
fsubs
cmp
iret
outsl
adc
pop
xlat
and
js
jmp
jecxz
stos
mov
push
mov
adc
xchg
inc
cmp
rcrl
imul
loop
rcll
insb
aas
test
mov
inc
fsubr
scas
sbb
dec
inc
or
inc
pop
xor
ljmp
pusha
loope
leave
repz
addl
mov
cmpsb
dec
insl
and
and
sbb
push
imul
into
roll
pop
push
in
fbstp
jnp
mov
fstl
das
inc
movsl
icebp
lret
mov
sub
mov
sbb
add
or
packuswb
push
pushf
jbe
shlb
dec
mov
shll
push
cmp
out
es
cwtl
ficoml
cmp
or
pop
xchg
imul
push
lcall
adc
xchg
adc
push
orl
cmp
xor
cs
and
and
movsl
stos
xchg
jns
lcall
icebp
mov
test
push
ds
sub
repz
dec
insb
mov
es
lds
jnp,pt
sarl
aam
sub
fisttps
pop
xchg
int3
sub
pusha
insb
addr16
xlat
repz
mov
push
data16
mov
sbb
sub
movsl
ja
pop
push
jecxz
or
enter
push
dec
xchg
push
xchg
cmp
shrl
inc
mov
insb
or
mov
and
mov
idiv
inc
xchg
jne
cmp
je
or
fwait
jg
add
xchg
lret
adc
xor
xor
push
fndisi(8087
mov
out
imul
clc
out
pop
or
orl
loop
rcl
insb
adc
cli
xor
add
cltd
mov
push
mov
int3
jmp
xchg
jo
xor
cmp
cmpsl
lods
inc
addl
aas
mov
ja
cmp
imul
jge
out
sub
sbb
test
insb
ret
roll
repnz
dec
pop
fwait
jb
cmp
dec
ljmp
or
pop
dec
scas
popf
pop
lahf
cmp
jo
pop
aad
imul
xor
movsb
outsb
jo
pop
nop
inc
cmpsb
pop
cmpsb
jmp
sub
incl
push
into
cli
cmpb
mov
adc
and
mov
adc
fimuls
push
adc
fsubs
stos
mov
stos
cmpsl
andb
adc
mov
test
sbb
jle
push
clc
adc
pop
and
in
imul
pop
push
jecxz
fsts
mov
cltd
push
dec
push
or
and
and
ja
jge
and
test
cmpsl
adc
jge
mov
test
mov
cmpsb
sub
cmp
fs
lock
or
pushf
pop
pop
jo
mov
scas
negl
ffreep
push
enter
cmp
out
push
cld
dec
mov
dec
aaa
dec
cmp
mov
test
jns
and
xchg
test
cmc
jae
push
out
jns
sub
and
xchg
adc
dec
test
inc
pop
mov
push
daa
adc
mov
and
cmp
jg
mov
or
std
ret
cmpsl
lea
inc
xor
mov
lcall
fcmovnbe
insb
mov
data16
popa
xchg
jp
mov
and
in
jmp
pop
or
ret
enter
push
addb
jmp
ds
mov
test
mov
inc
bound
lea
fcmovnu
xor
int
ficoml
or
inc
sbb
jle
stc
popa
mov
js
daa
push
lret
lret
out
out
mov
sahf
sbb
clc
jge
cmpsb
fidivs
dec
fisubl
xchg
lods
jnp
fcomp
cmp
mov
jl
sub
dec
dec
push
and
outsl
call
dec
movsb
aaa
mov
loope
sbb
add
out
clc
iret
push
push
ds
sub
mulb
and
xor
add
xlat
sub
mov
inc
sbb
pushf
in
mov
js
enter
arpl
pop
lea
aaa
enter
dec
mov
data16
jg
stos
pop
sbb
lods
fidivl
mov
mov
inc
cmp
add
pusha
xchg
dec
fdivl
sbb
adcl
dec
inc
xchg
les
xchg
dec
sbb
out
pop
cmpsl
mov
arpl
data16
jns
adc
lods
jl
pusha
dec
dec
cmc
sub
icebp
sub
lock
push
data16
out
adc
pop
or
das
call
push
addr16
into
mov
xchg
xchg
pop
push
icebp
fnsave
adc
xor
mov
xor
inc
push
pushf
adc
and
cmp
lahf
sti
inc
xor
bound
mov
and
scas
out
lahf
add
push
stos
jmp
lret
sub
mov
popa
insb
add
jle
ss
sbb
shr
popf
mov
out
push
push
jle
jno
fsubrs
xchg
aaa
and
repz
jmp
xchg
aad
cmc
std
xchg
jne
mov
test
mov
fnsave
jnp
inc
mov
pop
add
or
inc
mov
rorb
xchg
bound
cmp
mov
aaa
pop
or
test
pop
cmp
out
pop
incb
dec
cltd
jle
sbb
xor
jp
mov
pop
in
lock
cs
xchg
mov
mov
outsl
js
sub
pop
push
inc
bound
into
in
inc
loopne
or
test
inc
mov
ja
xchg
ret
in
and
fidivrl
jnp
dec
xchg
jmp
pop
in
xchg
dec
push
dec
mov
fmul
es
dec
dec
sub
dec
sbb
mov
inc
cs
or
fwait
repz
imul
inc
sub
jle
enter
jne
add
mov
stc
push
in
loope
xor
inc
pop
out
sarb
pop
sbb
inc
mov
push
mov
dec
push
mov
lahf
insb
mov
fst
dec
jns
call
jg
jnp
mov
push
mov
sub
mov
outsb
xchg
mov
or
daa
out
and
inc
push
cltd
and
xor
xor
out
pop
mov
or
ret
push
pop
or
mov
or
add
cld
jp
jmp
mov
add
add
or
je
add
data16
mov
imul
xchg
call
jno
dec
fnstsw
lods
dec
jne
fistps
xchg
xchg
shl
pusha
mov
lea
insl
pusha
enter
fs
or
imul
mov
jae
xor
or
pop
out
sub
shl
in
mov
dec
bound
addb
call
in
jae
int3
loopne
ss
xlat
repz
scas
pop
cltd
sub
mov
pop
movsb
jae
lahf
loope
jbe
sti
negb
int
ds
aam
mov
pushf
pop
sub
push
xor
push
mov
rolb
or
adc
outsb
xchg
mov
inc
mov
push
jl
or
shll
call
popl
adc
and
cmp
mov
movsl
out
mov
mov
repz
scas
scas
xorl
and
js
test
inc
mov
and
push
adc
in
pop
and
push
jno
dec
pop
sbb
mov
mulb
sub
cmp
in
test
cmpsl
fcmovu
jp
popa
lods
movsl
mov
pop
ret
mov
adc
adc
push
add
cmc
mov
mov
pusha
arpl
mov
ljmp
mov
or
loope
or
std
clc
enter
fwait
into
stos
dec
out
push
dec
pop
sub
rcl
or
dec
cmpsl
mov
fcom
cmp
stos
and
sbb
and
inc
shrl
inc
pop
and
outsb
mov
jns
push
jmp
cmpsl
faddl
mov
pop
pop
cmp
push
into
inc
adc
aad
mov
addr16
pop
gs
xchg
sbb
or
mov
gs
in
das
lret
jb
push
repz
nop
stc
inc
jp
insb
sbb
jo
lds
fmuls
push
xchg
lret
cmp
in
arpl
mov
idiv
push
lods
inc
leave
pop
adc
mov
clc
das
inc
sub
ljmp
inc
shll
cmp
xor
rorl
jnp
inc
inc
xchg
push
frstor
xor
or
xor
clc
jp
pop
cmpsl
addr16
insl
outsl
mov
sbb
mov
aas
in
sbb
dec
add
and
adcl
cmc
xchg
mov
inc
mov
lret
cmpsb
inc
mov
xchg
je
dec
sarb
dec
mov
dec
mov
sbb
subl
stos
pop
std
ljmp
sti
pop
in
sahf
outsb
pop
imul
leave
push
adc
pop
mov
ss
ljmp
or
mov
cmpsl
jle
clc
or
fsts
pop
xchg
into
hlt
xor
mov
or
push
jnp
push
aas
insb
jg
rol
mov
data16
dec
jo
inc
jno
stc
adc
add
sahf
movsbl
adc
and
call
sub
inc
movsb
and
cmc
mov
or
pop
cmp
pop
pop
xchg
outsb
mov
arpl
imul
icebp
rcll
cmp
pop
push
pop
in
imul
adc
mov
in
add
and
lret
and
scas
jmp
cmc
hlt
icebp
fwait
and
loope
pushf
mov
sbb
inc
shlb
adc
into
call
dec
mov
dec
mov
ljmp
jns
insb
sub
decl
add
div
aaa
adc
jle
ds
in
cmp
mov
test
popf
rorl
inc
popa
lret
mov
dec
fmull
daa
jbe
leave
rcrl
hlt
lds
icebp
mov
imul
sub
enter
pop
jecxz
sbb
rcrl
dec
cltd
sbb
mov
jo
jnp
cmp
pop
push
push
sbb
pop
call
jle
jmp
ret
add
stc
xor
pop
inc
arpl
lret
pop
cmp
fistl
xchg
xchg
arpl
push
gs
mov
xor
fstp
repnz
test
shll
xor
cmp
dec
lret
iret
jl
das
xchg
insl
jne
sub
cmpsl
sub
faddl
test
sub
xor
out
int
and
adc
jp
dec
stos
push
ret
push
cvtpi2ps
pop
add
roll
mov
push
rcll
and
cmp
ss
adc
xchg
aad
in
data16
cmp
ljmp
cmp
and
mov
nop
loop
xchg
sahf
sbb
inc
jo
sub
mov
mov
pusha
cltd
pop
and
and
xlat
pop
cmpsl
ds
adcl
repz
lret
popa
mov
aaa
mov
popa
or
xlat
insl
imul
and
ljmp
mov
int3
inc
mov
ret
cltd
imul
repnz
mov
push
or
fsubs
cmp
push
mov
ficoms
aad
das
out
ret
pusha
cmpsl
lds
mov
into
scas
push
pop
sarb
movsb
sbb
stos
jnp
ljmp
rcll
jae
add
cmpsb
cmc
add
scas
mov
adc
lahf
subl
ficoms
shll
sbb
scas
mov
sar
hlt
imul
add
notb
mov
jge
out
dec
jle
lock
addr16
lcall
sbb
out
nop
inc
mov
jne
ret
rcrl
pusha
popf
xor
adc
inc
push
pusha
hlt
icebp
movhps
mov
add
lods
pop
lcall
iret
jp
popl
push
cmp
and
lock
aaa
insl
and
pushf
add
or
jnp
sti
mov
sub
cmp
das
ret
dec
push
cmp
mov
pop
pop
inc
push
gs
nop
push
or
pop
movsl
aaa
mov
out
sahf
out
cmp
aaa
leave
int3
inc
sti
push
sbb
mov
cwtl
push
dec
in
shlb
out
xlat
es
lret
sub
dec
pop
fcmovbe
push
jno,pt
hlt
test
pushf
fmulp
call
adc
nopl
iret
ljmp
pop
scas
and
xchg
dec
loopne
fcoml
adc
fdivs
or
mov
cwtl
pop
sbb
push
pop
lock
mov
in
loop
je
lods
aas
rcrb
xchg
int
mov
pop
mov
cmpsl
cli
sbb
dec
adcl
inc
ds
int3
pop
jmp
cs
out
or
les
adc
out
iret
pop
nop
popf
icebp
pop
into
hlt
inc
push
jo
xchg
mov
xlat
incl
les
jge
fisubrs
xlat
push
push
ficoms
or
mov
cltd
repz
jns
adc
addr16
xchg
movsl
shrl
mov
push
inc
sbb
lds
js
xchg
fucom
xchg
sbb
inc
xchg
pop
mov
push
sbbb
bswap
das
mov
sub
xchg
push
sti
mov
inc
cld
pushf
sub
sbb
icebp
adc
mov
mov
add
mov
xchg
dec
sub
jo
fldl
push
pop
jle
lods
or
scas
sbb
ret
nop
mov
and
pop
je
jbe
xchg
ljmp
jp
sbb
dec
lahf
inc
mov
push
add
adc
cmp
rorb
push
push
jnp
mov
lcall
hlt
nop
repnz
push
inc
fstpt
lcall
cs
cltd
clc
shlb
mov
and
inc
mov
or
aad
aaa
cmpl
jp
cld
loop
xchg
imulb
cs
push
bnd
xchg
push
cmp
inc
int
sub
mov
clc
dec
sti
cli
out
sub
daa
in
add
dec
es
fwait
mov
mov
xor
cmp
push
adc
loope
outsb
aad
xor
push
inc
js
jae
mov
jns
lods
and
mov
and
out
sbb
sarb
call
imul
cmp
insb
mov
cmp
cmc
clc
push
fstpl
jno
lea
jno
jecxz
pop
dec
mov
mov
scas
cs
dec
and
sbb
xchg
andl
mov
iret
jmp
jle
or
stos
fistps
fwait
inc
loope
mov
and
pop
jbe
lds
into
mov
and
jo
mov
test
popl
shll
dec
add
dec
xor
dec
jl
jmp
xchg
adc
cmp
xchg
mov
or
sbb
or
xchg
iret
pop
pop
out
clc
push
or
mov
mov
inc
stos
ret
pop
jnp
mov
push
dec
fldl
ja
and
sti
push
xorb
std
xor
les
out
add
lea
cmp
and
shlb
mov
mov
imul
sub
jmp
cwtl
addb
aam
jmp
add
scas
cs
xor
mov
xchg
fists
mov
sbb
xor
ret
mov
inc
xchg
inc
xchg
ljmp
stos
adc
movsl
iret
or
xor
inc
or
jle
aad
xchg
addr16
dec
fwait
add
dec
sbb
mov
nop
xchg
hlt
push
ljmp
out
ret
in
push
xor
paddd
jle
or
scas
ret
or
and
dec
jl
stc
xlat
pop
inc
aas
iret
jnp
cmp
sub
xchg
dec
ret
add
loop
jl
add
cli
test
jmp
push
xchg
ds
add
test
sub
adc
loope
xor
mov
test
jg
les
sbb
lods
pop
hlt
jp
xor
mov
das
jnp
lahf
or
sub
into
fcompl
cltd
scas
cmc
adc
imul
xchg
movsb
xchg
loop
ss
cmp
ret
cwtl
shlb
push
xor
sub
adc
mov
cs
xlat
call
mov
insb
test
test
inc
fistpl
xor
jle
and
mov
addr16
dec
inc
xor
push
data16
repnz
es
aad
inc
test
push
cwtl
jmp
and
adc
cmp
push
sbb
sbb
push
mov
push
fadd
mov
cmpb
mov
into
repnz
and
push
enter
xor
push
movsl
cmpsl
aad
mov
arpl
inc
mov
push
mov
inc
gs
lret
jecxz
sub
enter
mov
movsl
sbb
imul
pop
out
lods
pop
mov
pop
out
adc
test
pop
lahf
icebp
push
fstpt
xchg
cmp
arpl
pop
mov
adc
dec
pop
sbb
sahf
mov
jmp
sbb
push
bound
ret
pop
daa
outsb
pop
rolb
jb
xor
std
adc
inc
inc
push
add
mov
dec
xchg
ja
or
nop
push
std
inc
in
sbb
or
rcr
sbb
scas
mov
test
jbe
dec
xlat
inc
lods
ja
iret
loop
insb
rorl
mov
dec
mov
fs
push
fdivr
hlt
out
mull
push
mov
ret
jp
and
outsl
scas
sub
fwait
pop
sub
cltd
push
test
andb
xchg
jg
sub
insl
out
stos
scas
ret
data16
push
dec
cltd
inc
xchg
pop
cmp
adc
inc
into
lock
mov
adc
sbb
mov
es
cmp
mov
subl
enter
repnz
popa
mov
ret
pusha
adc
addr16
jge
icebp
or
mov
jmp
fwait
add
sti
mov
ljmp
orl
jb
and
es
pop
enter
shll
out
mov
popa
adc
cmp
fwait
push
out
sbb
xchg
mov
push
movsb
adc
mov
gs
push
dec
mov
or
sbb
fs
ljmp
cmpsb
shl
push
xchg
push
add
lret
inc
xlat
lcall
dec
jl
incl
les
add
and
dec
jb
xor
int3
ret
xlat
push
ja
test
cld
ret
pop
dec
jbe
push
xor
cmp
inc
fstps
pop
gs
mov
push
andl
sub
std
mov
cs
clc
pop
cmp
insb
imul
mov
jg
les
mov
in
shlb
mov
sub
sub
mov
push
movsb
clc
add
and
adc
inc
push
mov
xchg
lret
ds
std
fimuls
mov
mov
adc
leave
sub
loop
inc
pusha
in
xor
jl
adc
inc
xchg
inc
sbb
in
inc
jmp
and
push
xorb
jp
orl
sub
push
dec
push
je
sbb
sbb
mov
pop
addr16
jmp
inc
mov
ljmp
adc
mov
jo
loopne
repz
dec
jmp
xor
jo
jae
mov
js
dec
cmp
aaa
xchg
lods
adc
rclb
or
in
rorl
cmp
add
and
or
fisubrs
push
and
xchg
addr16
loopne
fildll
mov
mov
mov
mov
cmp
repz
mov
imul
mov
sbb
mov
imul
sti
pop
push
jecxz
xor
in
jae
jg
inc
jg
pop
adc
push
sbb
cli
inc
mov
or
sarl
out
rcr
pop
lcall
hlt
lock
ss
lret
fsubrp
mov
mov
in
and
inc
cmpsl
cmc
push
cmpsb
ljmp
cmp
int
xchg
inc
loopne
inc
test
arpl
adc
andl
cld
or
jbe
cmpsb
push
fistpll
mov
and
mov
mov
lea
mov
or
les
pop
ds
mov
cmp
scas
fst
out
mov
cmp
jns
or
daa
test
in
sub
adc
aaa
pop
jnp
clc
test
sub
sbb
daa
int
bnd
push
cmpsb
shll
jno
hlt
push
sti
cs
in
cmpsb
xor
jnp
rclb
add
cmpb
mov
inc
and
mov
mov
les
nop
out
push
rol
loope
jb
mov
mov
loopne
mov
mov
xchg
jnp
xor
into
add
push
add
ret
loope
and
clc
and
test
notl
je
rolb
stos
jne
popa
into
ljmp
ss
daa
movsb
sbb
call
fsub
pop
jns
test
scas
scas
testl
sahf
or
fstl
sti
mov
pop
sbb
xor
xor
mov
push
imul
inc
out
and
cmp
jne
fisubrl
dec
jnp
jle
and
xchg
clc
subl
mov
or
cmp
pop
lds
das
inc
add
decb
sahf
mov
xor
jno
jg
cmpsl
cmp
and
sbb
mov
push
testl
aas
add
mov
movl
xchg
jnp
dec
inc
mov
out
xchg
out
push
cmp
xorl
mov
adc
ja
mov
xor
test
mov
shlb
mov
rcl
sahf
xchg
mov
add
int
cs
mov
push
mov
sbb
cmpsl
mov
mov
cmp
push
scas
mov
mov
mov
lahf
stc
aam
mov
imul
shll
or
sar
and
and
mov
out
cmp
jmp
xlat
fucomp
mov
add
leave
dec
mov
push
mov
fcoml
mov
fcomip
pop
inc
sub
stos
icebp
loop
mov
shrb
and
repz
mov
dec
push
xchg
bound
xchg
jne
test
ljmp
pushl
sub
rorb
lahf
loop
dec
adc
cmp
mov
shlb
lcall
insb
aam
cmp
test
push
repz
cmpsl
es
or
sbb
cmp
sbb
xchg
pop
or
jge
cli
xchg
fisubs
sbb
mov
or
dec
js
mov
shlb
aam
jb
fildll
add
mov
xchg
enter
dec
jbe
jmp
out
cmpsb
fstpt
je
mov
push
jge
dec
fdivp
cmp
jbe
push
xchg
es
shll
fcoml
je
add
xchg
xor
mov
aam
in
adc
adc
or
push
imul
inc
jl
aaa
mov
cli
into
mov
in
adc
push
push
push
xor
dec
outsl
adc
roll
iret
adcb
fldenv
std
add
cmp
fiadds
out
mov
and
insl
roll
or
add
notb
push
hlt
pop
test
jecxz
jmp
jmp
pop
cmp
xchg
push
icebp
ret
sub
sbb
test
xchg
jle,pt
add
lahf
rcrl
xchg
xchg
movsb
and
dec
jge
pop
sub
or
pop
add
cmp
lcall
mov
and
cwtl
jnp
xor
movb
fistps
push
push
cmp
and
xor
xor
xorl
shr
jge
jmp
test
push
cmpsl
sbb
lods
or
iret
xor
push
sti
cwtl
and
jp,pt
adc
shr
insl
into
outsl
je
xor
fdivs
jbe
cmp
add
xchg
push
adc
and
lcall
mov
push
push
lret
outsb
je
mov
sub
icebp
pop
pop
stos
mov
popa
jb
push
jne
xor
cmpsb
mov
js
clc
pop
sub
test
xchg
adc
cmpsb
jae
daa
lods
jns
in
aaa
fsubr
add
xchg
out
in
jp
jne
inc
mov
mov
cwtl
insl
and
das
mov
bound
cmpsl
or
pop
cmp
rcll
pop
xor
shrb
icebp
movsb
mov
sbb
rorl
or
pop
pop
xorb
jnp
add
in
or
stc
xor
or
gs
sub
and
jg
sub
adc
xchg
stc
das
lods
shrl
jmp
push
mov
int3
mov
mov
push
dec
push
mov
push
lods
es
lret
and
ficoms
movsl
into
push
out
addr16
push
mov
mov
or
nop
jg
cmp
xor
loope
pop
dec
aas
imul
mov
mov
dec
rcrb
mov
scas
xor
jl
enter
stos
pop
add
xchg
into
out
mov
ljmp
scas
push
dec
addr16
outsl
lahf
jmp
ljmp
pop
ds
icebp
pop
or
sahf
lea
je
std
les
repz
fisttpl
sbb
call
jmp
xchg
call
hlt
pop
loop
scas
lcall
int
jl
sub
lods
adc
jnp
sbb
jne
sbbb
jge
jne
cmp
dec
dec
mov
jp
or
push
or
xchg
adcl
sbb
loope
sbb
lds
icebp
mov
inc
adc
int
or
xor
push
les
scas
jecxz
jae
mov
pop
movsl
int3
dec
xchg
xchg
lods
test
in
jp
gs
fimull
jecxz
pusha
mov
inc
icebp
int
jle
scas
jg
cmp
sub
mov
pop
in
push
sub
lahf
lock
mov
clc
ret
pmaxsw
ret
aaa
in
pop
stc
adc
and
and
or
mov
outsb
popa
push
and
lret
inc
fxch
loop
mov
jmp
aas
stos
jl
jne
repz
mov
mov
xor
sub
push
xor
popa
jle
pusha
nop
push
cwtl
push
push
fadd
jno
push
dec
sub
lret
xchg
fadds
cmpsb
loopne
clc
jg
jle
enter
lret
push
lret
mov
mov
xor
enter
outsl
xchg
jg
jge
cs
sub
jecxz,pt
pop
pop
sbb
pop
rorb
ljmp
push
fcmovbe
scas
sub
push
rorl
xor
fstpl
pop
fnstenv
out
jge
xor
pop
movsb
push
imul
sub
sbb
fidivl
inc
push
pop
or
mov
xchg
pop
xlat
xor
inc
dec
sar
pushf
push
out
andb
xchg
dec
pop
push
xchg
adc
push
out
daa
mov
mov
scas
nop
mov
cmp
addb
leave
jmp
xchg
inc
xchg
or
and
push
fistpl
adcb
sbb
add
jmp
adc
sub
popf
test
push
push
mov
pop
test
aaa
mov
and
stos
test
dec
fucomp
repnz
sub
mov
arpl
push
mov
jmp
repnz
sub
cli
inc
mov
ja
jmp
push
cmp
push
add
in
dec
and
pop
lahf
lahf
stos
insb
sti
lods
pusha
adc
add
fnstcw
lods
movsb
mov
sub
adc
pop
cltd
cmpb
cmp
inc
loop
lds
sbbl
dec
add
xchg
sub
fmull
sti
inc
mov
mov
dec
mov
pop
add
test
fsts
in
xchg
sbb
push
push
push
in
adc
loop
gs
pushf
je
jge
or
les
mov
dec
pop
in
xchg
push
xor
jg
sub
add
outsb
enter
cli
push
adc
pop
pop
test
shll
mov
popa
out
arpl
fistpll
sbb
push
mov
pop
adc
fcompl
rorb
cmc
ljmp
cmp
call
aas
jge
push
cld
pop
push
sbb
jns
xchg
jo
push
pop
sbb
js
jmp
xlat
or
push
jecxz
push
cli
sbb
push
pop
inc
fnstcw
inc
lods
dec
dec
pop
mov
insb
ds
xor
adc
and
xor
xchg
cwtl
jb
xor
arpl
test
je
out
adc
dec
stc
stc
incb
adc
jnp
cltd
jno
sbb
sti
mov
cmp
xor
mov
adc
test
sub
clc
sub
sahf
subb
or
fwait
lcall
mov
movsb
cs
pop
shl
push
adc
pop
subb
shll
pop
pop
jl
clc
inc
and
lods
sub
sub
mov
inc
enter
in
xchg
and
sbb
dec
jo
addr16
mov
loopne
mov
or
out
std
xchg
mov
inc
lret
ret
dec
add
mov
add
pop
lcall
and
jmp
inc
pop
out
push
pop
std
or
insl
enter
in
out
xchg
mov
jmp
orb
cmpsl
bound
mov
pop
das
cmpsb
adc
test
stos
push
push
gs
jne
jb
in
pop
mov
jge
cmpsl
mov
push
iret
out
dec
ljmp
outsl
jns
mov
mov
in
and
inc
stos
cmp
and
pop
sbb
ret
jmp
imul
scas
lock
aaa
jl
lods
or
jge
into
cmp
test
std
test
lcall
pop
add
mov
jmp
add
pop
or
xorb
push
inc
push
mov
into
pop
push
mov
xchg
push
out
in
shll
push
movsl
int
mov
pop
sbb
or
jns
xor
repnz
sub
add
fidivl
dec
adc
mov
push
sbb
mov
lcall
testb
xor
test
and
jge
pop
mov
push
cmpb
insb
inc
inc
sbb
sarl
inc
scas
push
test
sbb
ret
imulb
je
mov
add
xor
adc
cld
inc
mov
bswap
sbb
xorl
adc
inc
stos
sbb
adc
mov
and
fistps
mov
out
push
pop
cmp
lcall
in
jne
sub
pop
xchg
jns
sbbb
xor
dec
push
jo
push
add
mov
xchg
cs
adcb
sti
xchg
push
and
jns
and
xchg
push
pop
cmp
push
pop
fnsave
adc
and
imul
test
stc
movb
sahf
in
pop
sbb
xorb
add
aaa
and
fnsave
into
ficompl
push
dec
loop
inc
pop
ja
sbb
data16
mov
sub
cmpsl
adc
mov
andb
sarl
ds
mov
dec
push
pop
pop
xchg
les
sub
ja
fcom
lds
loop
outsl
sub
and
sub
xchg
cmp
in
test
mov
xchg
cmpw
outsb
in
xlat
push
jb
stc
leave
xor
xor
fwait
imul
lahf
out
addr16
test
dec
cmp
call
and
fadds
popf
mov
mov
mov
ja
shrb
mov
xchg
push
loope
or
pop
jb
pop
lock
arpl
rcl
xchg
jge
lock
xorl
repnz
dec
insl
mov
xchg
sbb
stos
adc
stos
cmp
push
or
mov
add
push
loop
xlat
jno
add
fwait
inc
jno
push
loope
jno
idivb
inc
clc
cmpb
mov
inc
jnp
mov
out
cmp
fwait
sub
imul
out
sub
dec
mov
push
mov
lret
jmp
jb
dec
roll
xor
jno
outsb
xchg
mov
mov
das
push
aam
icebp
or
push
cld
rcl
and
push
inc
and
inc
jmp
mov
fistpl
mov
push
jno
mov
in
sub
rcrl
mov
sbb
pop
outsl
xchg
adc
cs
and
xchg
clc
out
leave
aam
nop
insl
inc
enter
nop
mov
ret
mov
movsb
jl
pop
jp
dec
enter
xor
pushf
gs
daa
or
sbb
cmpl
pop
push
mov
sub
pop
cmc
adc
adc
loop
cmp
or
int3
jecxz
sbb
pop
or
lock
call
pop
cs
add
mov
movsb
fsubrs
cmpl
xchg
lcall
leave
mov
mov
jnp
or
or
pop
xlat
stc
in
sbb
ss
lret
or
inc
mov
cmp
sub
sub
testl
inc
inc
stos
hlt
cs
into
shlb
testb
adc
or
jnp
fisttps
loopne
mov
cli
test
xor
lret
mov
lcall
adc
out
cmp
addr16
sahf
sub
add
sbb
jo
xor
cwtl
xchg
adcb
jno
mov
cltd
cmp
sbb
or
js
ffree
mov
cld
into
mov
pop
dec
dec
push
pop
lcall
jbe
mov
push
popa
add
fistps
jp
adc
hlt
mov
cmp
sub
decb
imul
xor
loop
sub
mov
outsl
aaa
adc
fstp
in
mov
sub
aad
dec
push
dec
lcall
stc
outsl
call
mov
hlt
bound
mov
into
mov
dec
mov
mov
fs
and
cmp
lahf
push
xor
push
push
sub
test
es
pop
mov
sub
pop
cmp
aas
jge
fsts
loopne
pop
pop
pop
fsts
jae
hlt
adc
sahf
popf
sbb
jno
arpl
std
adc
sub
leave
inc
cmp
in
sarb
mov
fistpl
jge
xor
repz
pop
mov
repz
mov
arpl
daa
je
lock
and
xlat
mov
sbb
add
sub
xchg
jb
fdivs
outsb
pop
int
into
pushf
inc
fadds
dec
in
jno
fs
sub
mov
jle
mov
imul
stos
jmp
cmc
addr16
push
cmpsl
jns
in
lods
out
sbb
cs
xor
pop
cmpsl
xor
adc
aam
and
loopne
mov
jo
mov
fsub
push
vpmullw
push
or
lret
sub
lods
imul
sbbl
filds
xor
mov
xchg
test
les
mov
into
xchg
ja
lahf
and
mov
sbb
inc
xchg
sarb
faddl
loope
pop
test
leave
adc
ljmp
cmp
sub
mov
je
popl
jnp
sbb
and
fstl
sbb
inc
or
fisubrs
fs
lret
frstor
mov
push
rol
loopne
test
jmp
adc
adc
les
xor
mov
adc
lods
add
inc
jo
aas
inc
add
fstpt
aad
sub
dec
sbb
push
dec
add
enter
lock
push
aas
jg
cmp
cmp
cmpl
and
aad
into
inc
and
jo
jbe
add
add
cmp
jnp
pop
cmp
mov
mov
sti
cltd
test
orb
push
cmpsl
xor
std
ret
and
cwtl
cli
dec
sbb
cmpsl
loop
leave
pop
lret
jl
in
std
in
jecxz
xor
pop
icebp
imul
jno
or
out
lods
push
push
add
push
pop
fcoml
les
mov
push
lret
or
movsl
ljmp
mov
xchg
pop
iret
add
lds
scas
je
adc
ds
sbb
lret
popf
or
cmpsb
icebp
ja
dec
jmp
lret
mov
sub
pop
aas
mov
cmp
rol
insl
pop
daa
mov
or
in
iret
pop
jge
clc
lea
out
xchg
stc
push
add
cmp
in
out
ret
lcall
jbe
xor
enter
leave
stc
jge
sub
mov
jno
mov
cmp
xor
mov
jne
mov
inc
sbbl
leave
jmp
sbb
frstor
sbb
pushf
dec
jne
mov
adc
lods
push
hlt
inc
cwtl
popf
jle
sub
imul
xchg
mov
and
xor
test
xchg
or
xor
cmpl
sub
jle
out
cwtl
pop
inc
cmc
mov
xor
add
pop
sub
sbb
xchg
push
cmp
aas
add
sbb
add
scas
les
int
push
sub
test
mov
cmp
and
or
insl
push
fiadds
arpl
mov
aad
fcmovnbe
mov
inc
mov
js
aam
mov
mov
loop
cmp
loop
std
jb
or
dec
cltd
fwait
inc
repnz
jmp
xchg
mov
repz
int
push
lock
adc
scas
mov
sbb
les
mov
xchg
js
xor
js
lea
sahf
in
into
fistpl
dec
cmc
aad
and
and
das
sbb
jmp
inc
mov
addr16
cmpsl
xchg
popf
out
xorl
xor
xchg
sbb
cmp
xor
sbb
mov
popa
xchg
mov
fxch
psubusb
xor
xchg
xor
insb
xchg
ja
out
enter
jge
ret
insb
and
xor
andl
nop
pop
fstpt
mov
and
mov
in
xchg
fsubs
inc
adc
fsubrs
xchg
and
icebp
xchg
fwait
aas
jle
cmp
jmp
lds
test
or
add
jl
xchg
test
repz
insl
mov
and
mov
lock
scas
int3
lret
fs
pushf
repz
mov
xchg
pop
adc
rol
cmp
and
jnp
dec
adc
cwtl
out
xlat
sarb
ds
xor
daa
push
jns
test
loope
mov
cmpsl
cmp
or
mull
push
inc
insl
adc
sbb
bound
mov
sahf
sbb
adc
pop
aas
and
push
push
adc
mov
jle
push
fsts
push
decb
testb
lock
lahf
and
mov
mov
les
cmp
add
jno
mov
sti
mov
leave
das
xchg
sbbl
roll
popf
xchg
or
fdivs
push
lods
pop
mov
jns
adc
imulb
inc
scas
xchg
xchg
sbb
inc
and
pop
cwtl
int
cltd
cmp
adc
sub
adc
ss
ret
mov
in
inc
xor
adc
mov
mov
dec
sbb
inc
insl
int
add
mov
add
sub
mov
mov
adc
or
sub
lock
fadds
insb
sbb
lcall
inc
sbbl
mov
mov
xchg
imul
pop
jmp
xchg
xor
and
add
dec
or
lock
in
imul
cmc
adc
dec
cmp
mov
lea
fstpl
imul
loope
jbe
fildl
fmull
scas
push
out
repz
insb
mov
lods
jnp
fnsave
xchg
into
andb
pusha
or
ss
arpl
adc
ja
imul
mov
enter
pusha
add
xor
mov
movb
xor
not
cmp
xchg
dec
out
mov
ret
out
pop
jbe
and
lods
inc
pop
adc
std
pusha
sbb
aaa
aaa
sub
in
dec
push
bound
into
sub
inc
push
aad
data16
push
std
ja
fwait
sbb
push
dec
push
push
int
xchg
fwait
fwait
or
fs
lea
mov
fsubs
in
jg
xor
movsl
movsb
loop
cmp
into
xchg
cwtl
out
mov
loop
cmp
inc
mov
pop
inc
xor
sub
arpl
and
dec
lret
aad
sub
lahf
dec
inc
daa
mov
inc
xor
fs
out
out
mov
es
jb
and
lock
mov
shlb
jno
nop
movl
add
adc
andl
mov
jl
or
bound
rclb
or
sub
inc
in
mov
push
out
popf
fstps
out
mov
ss
mov
decb
fstpt
xchg
pop
outsl
xchg
mov
add
lret
fisttps
and
shll
and
int
loop
arpl
adc
outsb
in
pusha
sub
rcr
mov
rcl
shrl
jmp
jns
ss
xor
or
xchg
sub
orl
div
push
testl
dec
pop
pop
pop
shll
and
punpckhdq
imull
and
outsb
jmp
mov
mov
cmp
arpl
dec
sarl
inc
call
and
das
insl
daa
push
daa
imul
jo
imul
adc
and
ja
je
adc
cld
inc
mov
ret
sub
arpl
mov
mov
xor
sbb
lcallw
sbb
outsb
xchg
rcrb
les
adc
jnp
push
das
call
inc
aad
pusha
test
xor
sub
push
or
repz
aam
xchg
jne
cltd
aam
and
add
adc
push
test
dec
and
sbb
imul
cs
add
iret
push
cmpsb
cltd
ret
fst
insb
and
ret
cmp
adc
sub
push
in
jmp
or
push
mov
xchg
in
jo
mov
enter
and
inc
push
fsub
cld
pop
sub
adc
daa
push
sub
adc
or
jo
xchg
mov
mov
mov
adc
idivl
repz
lea
sub
repnz
in
and
out
gs
repz
mov
repz
shll
in
mov
push
push
into
std
add
push
mov
xchg
insl
sti
cmp
fwait
stc
cmc
cmp
push
sub
mov
xchg
ss
data16
add
gs
dec
xchg
jns
lret
dec
ret
fld
cwtl
mov
inc
out
mov
imul
aad
jae
cltd
mov
fabs
mov
nop
sahf
jb
cmp
jmp
sbb
adc
pop
gs
shl
lea
scas
xlat
fld
cld
xor
cmp
cwtl
mov
sub
nop
mov
push
and
cmp
call
and
arpl
xlat
cmc
stos
and
dec
mov
push
jae
jle
imul
fldenv
inc
lret
cltd
pop
sbb
icebp
enter
in
push
pop
shll
jle
inc
in
dec
icebp
xchg
mov
push
je
pop
andb
pusha
in
into
sbb
dec
jge
cmpsb
mov
adc
jge
loopne
rclb
les
insl
gs
in
mov
mov
adc
inc
nop
mov
mov
shlb
pop
pop
or
mov
cs
scas
jno
inc
ret
xlat
push
gs
and
jae
data16
jno
xor
adc
pop
rcr
xchg
or
sub
je
inc
fsubrl
in
and
cld
add
in
shl
repz
adc
push
mov
stos
imulb
pop
cmpsl
repz
mov
xor
movsb
cmp
lods
popf
mov
icebp
inc
inc
cli
hlt
out
jecxz
clc
mov
mov
cmp
add
pop
sbb
sti
pusha
ds
pop
mov
clc
mov
mov
push
mov
inc
mov
dec
pop
xchg
mov
sbb
shlb
rcr
sbb
cmpsl
hlt
xchg
mov
mov
sbb
out
xor
push
add
cwtl
mov
les
mov
add
mov
xor
ds
jb
repnz
int3
js
je
scas
push
ret
or
and
xchg
enter
mov
jg
dec
sbb
cmpsb
pop
pop
dec
data16
and
aam
add
jns
leave
and
addb
or
pop
outsl
call
add
mov
cmp
mov
pop
int3
add
notb
lahf
xor
scas
add
push
mov
adc
jo
pusha
cmp
or
xorb
push
andl
sarl
adc
xchg
in
enter
inc
jg
jnp
jne
xchg
cwtl
ss
insb
daa
jno
mov
imul
push
add
jl
bound
rorb
ss
xor
dec
popa
mov
or
imul
ds
mov
sub
dec
add
hlt
xchg
fistpl
push
scas
cs
mov
arpl
and
cmc
xchg
dec
pop
xchg
cld
daa
xor
push
icebp
lret
dec
ljmp
bound
add
mov
jle
or
fistps
fadd
add
xchg
fidivs
es
ret
jb
pop
div
and
inc
lods
lcall
das
insl
push
imul
mov
inc
mov
add
mov
cld
outsb
lds
sub
fdivrp
mov
jle
rol
add
in
scas
xorl
inc
test
push
std
aam
sub
js
stos
xor
out
outsl
lods
mov
out
movsl
mov
test
in
repnz
inc
decb
sub
and
add
sarb
andb
jns
sub
mov
pushf
dec
test
out
ds
in
mov
adc
lock
add
inc
push
or
subb
jb
test
mov
push
pop
push
xchg
pop
sub
xchg
test
sbb
mov
xor
mov
pop
test
lahf
mov
push
sub
daa
jbe
cltd
iret
movsb
aaa
mov
xor
into
mov
cmovnp
leave
push
mov
cli
lahf
aad
xor
out
or
test
stos
and
test
aad
mov
stos
mov
cmpsb
pop
jns
and
dec
ss
mov
outsb
enter
mov
rcll
adc
fmuls
in
jae
lcall
push
js
outsb
add
out
dec
add
outsb
dec
mov
je
movsl
jns
sbb
nop
and
enter
subl
loop
lock
cwtl
mov
xchg
ret
sbb
aam
push
xor
push
xchg
jbe
jb
shrl
test
xor
outsl
add
ja
fdivrs
or
push
iret
jnp
or
jge
xchg
dec
jmp
add
sarb
mov
aam
idivl
jbe
mov
mov
cmp
push
pop
or
rcr
jnp
test
lahf
icebp
into
push
popa
aaa
repnz
fisttpll
dec
les
mov
ret
adc
mov
inc
out
mov
cmpsb
mov
xor
add
mov
cmp
mov
push
sbb
lret
ret
pop
or
popl
cmp
stos
cmp
pop
jmp
lock
data16
mov
inc
lea
mov
out
xchg
sahf
lret
mov
loopne
jge
push
jp
out
repnz
sbb
mov
or
pushf
fwait
or
daa
mov
cmpl
test
mov
ja
arpl
cmp
pop
mov
push
jl
mov
pop
add
jns
ds
fs
popf
aas
hlt
lcall
xor
and
clc
xchg
imul
fistpl
inc
xchg
add
pop
sbb
outsl
or
push
xchg
xchg
ss
inc
add
popa
push
ret
pusha
xchg
popf
cld
notl
mov
mov
lcall
dec
into
in
out
mov
rorl
dec
test
push
std
inc
xchg
pop
jnp
popa
inc
outsl
js
mov
movsb
jnp
xchg
aam
sbb
cmc
mov
jns
sub
add
hlt
aaa
jle
xor
enter
mov
sbb
inc
push
sbb
sbb
lods
adc
rcr
popf
lret
adc
xor
mov
dec
repnz
adc
popa
sarl
in
xchg
movsl
jp
fsts
iret
ret
xchg
push
cmp
jno
mov
mov
sbb
mov
fstpt
pop
xor
cld
aaa
mov
test
ret
test
mov
scas
pop
adc
sti
sub
xor
movsl
sbb
fisttps
xchg
mov
sub
mov
adc
dec
repz
roll
and
jns
sub
push
sub
mov
adc
lds
mov
jae
push
jb
mov
scas
mov
js
cld
int3
or
es
lds
dec
clc
xchg
cmp
and
ss
sti
xor
fisubrs
add
fsubl
cs
outsb
push
mov
pop
mov
int3
imul
ds
xchg
js
ds
dec
call
and
xor
int
repnz
push
icebp
jge
inc
scas
movl
cmp
xchg
das
xor
sbb
pop
push
lret
sub
mov
and
jmp
fcompl
add
mov
enter
jg
inc
add
pop
mov
mov
aam
int
shlb
jo
sbb
add
fcmove
repz
sarb
pusha
test
cmpsl
mov
push
push
mov
jg
dec
pop
lcall
mov
or
sub
lods
pop
fisubl
scas
push
jp
fisttpl
cmp
mov
sbb
mov
enter
lds
fs
loop
and
repnz
stc
adc
add
movsl
pop
mov
test
test
sub
xlat
mov
popa
sub
mov
mov
sub
jge
fstps
xor
dec
rcrl
cmpb
jg
mov
lea
mov
cmp
scas
fsub
mov
jg
dec
insl
push
hlt
cmp
mov
push
mov
stc
mov
ret
xchg
fldl
mov
sub
inc
add
notb
mov
aaa
aas
pop
in
jo
cmp
xchg
mov
adc
mov
inc
or
sti
cld
dec
mov
sbb
push
mov
xor
adc
xor
in
mov
cmp
jg
dec
pop
sub
movsb
jb
mov
jmp
xchg
scas
lahf
nop
jo
sbb
pop
dec
fimull
daa
xlat
test
cmp
and
ds
xor
add
leave
fmuls
pusha
mov
adc
and
inc
aaa
shlb
ret
inc
loop
mov
cmp
repnz
sub
pusha
movsl
stos
or
bswap
inc
adc
cli
js
mov
sti
or
aaa
inc
ss
cwtl
xchg
add
les
sub
dec
icebp
add
adcl
divb
rcrl
insb
xchg
mov
pop
add
repz
adc
xchg
mov
movsb
adc
add
subl
push
mov
jp
test
xchg
xor
pop
or
dec
pusha
add
lcall
jb
aam
mov
fdivrs
push
in
lret
jg
notb
stos
or
jge
push
add
cwtl
cmpsb
mov
and
out
shlb
in
push
adcl
das
ss
mov
test
sub
adc
dec
jle
jne
or
jae
movsl
cmp
ret
icebp
imul
inc
dec
repz
inc
mulb
in
cwtl
or
icebp
xchg
out
dec
mov
loope
mov
scas
outsb
int
cltd
fs
int
adc
push
adcb
or
cwtl
les
in
mov
inc
mov
mov
leave
or
stos
nop
cli
addr16
int
mov
or
or
jne
push
xchg
clc
sti
fnstenv
lods
icebp
pushf
pop
shll
pop
mov
mov
icebp
mov
subb
in
outsl
sti
in
adc
movsb
mov
inc
mov
push
xchg
gs
jge
in
mov
out
mov
js
push
push
jno
sub
mov
scas
lret
push
pop
mov
mov
xlat
push
std
or
je
mov
stc
adc
lods
pushf
mov
jae
sti
pushf
cmpsl
or
pop
jg
add
rcll
dec
test
mov
cmp
mov
faddl
and
pop
out
pop
stos
push
lods
pop
lea
dec
dec
or
loopne
xor
push
xchg
inc
dec
push
xchg
por
mov
insb
jle
popf
popa
and
lock
ljmp
jns
inc
push
jge
in
ss
in
sahf
push
add
int
cmpsl
sbb
push
push
pop
push
or
mov
push
xor
jno
insl
cmp
push
pop
push
dec
fcoml
fsts
cmp
jl
pop
push
pop
lds
cmp
jno
movsl
stc
mov
loop
outsb
daa
fwait
push
jl
lds
cmpsb
jbe
repz
push
lahf
lcall
sbb
test
lds
add
fsubp
pop
ret
pop
les
cmp
mov
rol
in
mov
add
inc
dec
lock
jns
fs
sbb
xor
pop
and
std
test
push
push
mov
xchg
clc
pop
adc
insl
pusha
rcrb
xor
inc
mov
loop
fistl
shlb
pop
xor
xor
in
mov
inc
lods
sub
sbb
lret
adc
mov
ss
or
xorl
inc
fstl
lcall
nop
add
jo
shrl
adc
fdiv
pop
xchg
out
jl
mov
sbb
mov
lods
movsl
xchg
fwait
mov
std
scas
cmpsb
xchg
imul
push
sbb
jmp
int
mov
dec
jns
shrl
je
mov
mov
out
cld
mov
mov
mov
push
inc
dec
in
stc
test
and
pop
std
lcall
fimull
push
pop
push
cmpb
jge
mov
cmp
fs
push
lret
je
in
into
mov
lahf
lods
icebp
push
jecxz
xlat
lea
and
fxch
cs
jne
imul
mov
pop
mov
cmp
repz
adc
adc
jle
xor
out
gs
dec
bound
push
lock
add
movsl
adc
loope
or
mov
sbb
mov
mov
in
daa
fdivl
icebp
out
les
mov
divb
fdivl
pop
fcom
or
add
in
pop
loopne
pop
test
push
jp
inc
repz
xchg
pusha
lret
and
cld
push
inc
js
inc
inc
testl
icebp
ljmp
pushf
jecxz
das
and
push
jo
test
mov
sub
out
out
movsb
and
ret
sbb
iret
cwtl
repnz
jecxz
inc
mov
mov
cmp
sti
orl
and
mov
aad
inc
push
test
aad
mov
rolb
int3
ljmp
fsts
inc
testl
or
sahf
pushf
xor
gs
cmpsb
push
mov
pushf
jne
lcall
sub
adc
xor
push
mov
adc
dec
int3
push
cwtl
lcall
jle
roll
mov
xor
xchg
jo
or
loope
or
or
mov
decl
vunpckhpd
pop
loope
dec
lcall
clc
cltd
rclb
sub
outsl
add
cli
andl
inc
sub
into
or
loopne
add
jg
sub
lock
push
cld
cwtl
sub
mov
test
mov
mov
out
int3
arpl
fdivs
inc
push
fadds
push
adc
xor
cmp
loope
add
or
ds
ds
sub
aam
imul
pusha
inc
push
jnp
daa
pusha
das
daa
xchg
loop
sahf
movsl
ljmp
xchg
dec
jb
xorb
test
int3
insl
aam
ret
jge
adc
repz
push
mov
loope
mov
push
std
imul
dec
clc
jle
or
int
sub
mov
pop
xor
int
pushf
outsb
add
mov
arpl
jmp
ficompl
roll
ljmp
nop
pop
out
sub
mov
test
lods
or
mov
loopne
xor
clc
lods
enter
inc
test
and
mov
call
hlt
add
xor
mov
sti
lea
xor
mov
clc
std
push
in
mov
sbb
lret
scas
xor
loopne
add
xchg
jecxz
test
or
dec
cmp
dec
stos
push
and
aas
pop
jbe
movsb
pop
neg
bnd
mov
jecxz
fbld
mov
imul
cmp
pop
xchg
push
movsl
dec
mov
mov
push
int
adc
pop
cltd
inc
pop
sbb
mov
or
pusha
mov
and
dec
and
lock
xchg
cld
nop
and
xor
mov
aam
add
adc
fnstsw
mov
xor
aam
sahf
xchg
sub
lods
dec
or
pop
sbbl
test
cmp
mov
clc
out
pop
adc
cmp
xchg
mov
and
jmp
and
push
in
mov
adc
jno
pop
bound
lods
inc
mov
hlt
mov
dec
add
cmp
or
sbb
sbb
divl
adcl
xchg
xor
mov
ficomps
pop
jl
mov
mul
pop
mov
xchg
lods
es
jne
dec
sbb
into
leave
imull
pop
cld
lcall
push
pop
adc
rorb
popf
sbb
xor
lcall
fs
adc
cli
popf
cmp
mov
mov
xor
push
sub
shr
cmp
sar
pop
mov
or
push
cli
sbb
xor
mov
ljmp
cmp
fwait
inc
sti
dec
xchg
jp
push
std
fdivs
jb
mov
xchg
xor
stos
pop
aam
push
sub
mov
push
jmp
cmpsb
or
ret
fsubl
cmp
mov
jno
cli
into
mov
loopne
nop
xchg
fwait
cld
pop
sbb
inc
pop
je
sahf
arpl
push
or
stos
push
push
ljmp
dec
cmp
in
jno
cmp
jge
xor
in
nop
scas
xor
popf
pop
cli
cmpsl
pop
inc
aam
mov
pusha
mov
adc
inc
and
loop
aam
pop
push
xchg
mov
xor
cmp
dec
int3
add
push
pop
fcoml
pop
in
pop
mov
daa
int3
pushf
add
mov
or
pop
or
pop
icebp
popa
pop
stc
dec
movsb
flds
popf
and
jg
adc
and
test
aam
ss
imul
xor
push
jge
divl
or
sbb
or
xchg
mov
xchg
divb
rorl
ret
mov
iret
mov
xor
mov
jecxz
imul
stos
jno
loopne
xchg
inc
ret
lds
roll
push
movsl
aas
sti
jo
mov
mov
cmc
and
sub
ret
cs
mov
lahf
mov
shl
xchg
mov
sbb
loope
sub
lods
jne
fmul
sub
aad
movl
mov
or
mov
aaa
addr16
std
xchg
jo
mov
push
push
rcrl
jp
pop
std
dec
cmc
out
mov
popa
inc
dec
xor
xchg
inc
jnp
sbb
mov
adc
or
inc
inc
lret
mov
dec
rorl
mov
jl
cmp
mov
call
insl
adc
mov
xchg
cmp
xchg
or
in
jb
and
add
push
adc
loopne
sbbl
fildll
and
pop
repnz
push
cld
imul
mov
xlat
cltd
pop
mov
mov
fs
pop
mov
stos
ljmp
mov
xchg
cs
dec
dec
or
or
sarb
dec
dec
movsb
jne
in
mov
cltd
in
jle
and
mov
fwait
pop
mov
xor
cmp
pop
jb
jns
push
outsb
or
mov
stc
pop
xchg
rcl
ret
cmp
roll
and
gs
add
ljmp
popa
outsb
out
into
pop
push
cld
mov
arpl
mov
push
fidivrs
arpl
incl
push
leave
mov
sbb
push
xor
pop
and
data16
jns
nop
nop
lock
test
shrb
out
mov
xchg
jecxz
mov
bound
mov
dec
mov
add
inc
nop
aas
mov
rcll
dec
xchg
scas
push
xchg
in
or
fldenv
outsl
mov
jecxz
inc
pop
sub
dec
rcrb
into
cli
or
mov
xchg
sbb
lret
lds
pop
mov
jmp
cmp
jmp
orl
push
ret
jns
add
mov
bound
fistps
aas
xchg
into
sbb
mov
sbb
cwtl
mov
pop
cli
outsb
xchg
mov
lahf
loopne
andb
xlat
mov
iret
mov
cli
cmp
xor
out
stos
sbb
and
mov
adc
test
mov
aaa
iret
ja
add
adc
or
mov
mov
jo
mov
ja
cli
scas
popa
mov
dec
inc
cmp
sub
outsl
pop
test
fs
es
mov
adc
fdivrp
nop
and
mov
dec
jbe
sbb
jp
stos
push
dec
push
into
mov
and
and
bound
mov
xor
leave
nopl
push
insb
nop
sbb
and
popf
movsl
pop
add
fstpt
aad
fnstcw
fisubs
ljmp
lea
ja
hlt
mov
push
inc
or
push
cmc
jmp
push
dec
fdivrl
sbb
sub
cmp
daa
add
and
sbb
rorl
push
mov
mov
addb
loopne
popa
out
stos
or
aas
das
sbb
into
jae
jne
mov
xlat
xchg
shlb
add
popf
dec
adc
bound
mov
insl
pop
loop
pop
rolb
and
mov
push
hlt
sub
xor
sbb
mov
xor
loop
daa
mov
xor
add
dec
sbb
data16
jnp
cltd
pop
cmp
loope
movsb
jae
adc
ss
inc
add
inc
sbb
sbb
enter
xlat
dec
shlb
xor
mov
cmpsl
push
out
into
xchg
inc
loopne
push
sub
addr16
push
push
cmpsb
mov
pop
sbb
mov
dec
cmp
nop
je
out
sbb
sbb
stos
insl
xchg
sbb
lods
rcrl
enter
in
icebp
popa
leave
loope
bswap
or
pop
out
imul
adc
stos
mov
xchg
pop
or
mov
mov
mov
cli
mov
lcall
imul
xchg
in
jno
sub
fadds
pop
sub
adc
xchg
pushf
push
mov
adc
xor
data16
pop
push
push
aaa
shrl
mov
push
mov
xchg
mov
test
divb
cmc
adcb
mov
cli
repz
xor
inc
addr16
idiv
sbb
lret
pop
jp
mov
in
stos
dec
and
icebp
cmp
add
std
pop
dec
mov
pop
adc
ret
pusha
push
jbe
xor
pushf
jge
mov
sub
shlb
fsubrs
das
in
repnz
jl
mov
loop
mov
cmpsl
adc
sahf
add
mov
leave
pop
cmc
push
adc
jecxz
mov
imul
pop
fs
imul
ds
xchg
imul
test
mov
mov
mov
add
sbb
movsb
mov
mov
mov
sbb
xchg
jp
ss
sub
lcall
adcb
ss
and
xchg
test
rcl
push
fs
cmpsb
cmp
pusha
pop
xorps
adc
push
test
ss
mov
std
fdivrs
or
out
roll
cmp
inc
mov
jp
shlb
les
cmpsl
mov
dec
repnz
mov
add
and
mov
inc
out
dec
pushf
pop
out
stos
lret
push
movsl
or
fstpt
push
dec
or
cmp
movsb
je
stos
jno
rcl
mov
addb
dec
push
push
cmpsl
inc
lahf
leave
into
hlt
mov
jp
add
pop
fmull
mov
mov
rcrl
jmp
jb
mov
adc
mov
inc
jnp
jb
pop
enter
ds
setge
stos
fstsw
sub
mov
lds
ss
aam
fidivrl
das
mov
movsl
or
int
pop
push
add
push
and
and
fisubrs
xchg
xlat
fnstcw
shlb
xchg
lods
test
jge
sbb
or
jp
mov
test
mov
xchg
and
and
add
arpl
mov
stos
cmp
repnz
adc
lcall
test
sbb
adc
inc
jb
sub
pop
in
and
lock
adc
and
test
sysenter
push
xor
mov
pushf
sub
lcall
rorl
mov
jl
int3
jno
sub
shlb
or
rclb
int
shr
out
jmp
or
movsl
cmp
je
test
out
orb
mov
adc
je
sub
jg
jno
adc
es
out
cmp
movsl
dec
cmp
aam
cwtl
xor
mov
mov
ret
mov
mov
pop
dec
xor
push
sub
icebp
sbb
rorl
in
cs
cmpsb
mov
add
mov
jae
mov
loopne
jecxz
cmpl
shl
addr16
cmp
mov
jge
shrb
add
xchg
js
test
xor
test
adc
out
adc
aaa
push
pop
add
mov
lret
ret
jl
mov
and
mov
sbb
data16
mov
push
mov
xor
sub
push
pop
add
cmpsl
push
jb
lahf
testb
inc
lds
inc
sub
jnp
lods
xor
in
pop
cltd
sub
xchg
adc
xchg
insl
inc
ret
sahf
mov
and
jg
shld
out
push
sub
mov
mov
cmpsl
and
mov
lahf
in
negl
popf
mov
jge
ret
pop
cs
cmp
icebp
xchg
push
mov
shll
cmpl
test
les
incb
test
cmp
dec
popa
insl
int3
rdtsc
jno
push
add
adc
or
test
dec
add
pop
lahf
mov
movsl
js
bound
cmp
arpl
ss
pop
arpl
mov
mov
stos
push
pop
mov
orb
pop
sub
lea
aaa
inc
cmpsb
aaa
jno
lcall
dec
inc
leave
lret
cmc
mov
xor
sub
and
cmp
xchg
sbb
mov
lea
sarb
and
or
jae
lret
jno
xor
jmp
jg
mov
fiaddl
loope
negb
jg
adc
sti
dec
push
dec
mov
xchg
sbb
mov
stos
xor
ljmp
dec
push
mov
xchg
arpl
adc
xor
out
push
fadd
daa
add
or
ljmp
mov
mov
dec
jne
push
test
mov
sbb
inc
pop
push
aaa
fcmovbe
pop
stc
stos
fcoml
jge
adc
and
jge
cmpsl
insl
aas
ja
xor
inc
ss
add
aaa
mov
dec
push
std
in
in
mov
mov
dec
aaa
mov
loope
adc
dec
jns
sub
sub
add
jg
mov
jg
sub
into
lock
in
mov
cmpsb
out
xchg
aam
loopne
or
iret
out
inc
mov
mov
mov
lock
loopne
jg
push
xchg
js
ja
adc
add
mov
or
push
nop
arpl
stos
lock
xor
jb
sbb
lahf
cli
and
sarl
cmpsb
push
rcrl
fstl
ss
push
test
out
jnp
mov
cmpb
ljmp
xor
popa
mov
xor
xor
aas
jmp
mov
pop
cmp
mov
jne
push
fstps
and
mov
fcmovu
xlat
or
les
fwait
cli
bound
js
pop
mov
or
scas
dec
imul
insl
js
mov
xor
xchg
mov
inc
hlt
negb
mov
in
sub
and
ret
imul
pop
mov
lahf
or
cmp
flds
sbb
scas
jb
or
test
add
outsb
jbe
mov
in
fbstp
push
imul
xor
call
fsubs
pop
idivb
xor
mov
sub
push
adc
xlat
dec
stos
inc
adc
mov
cld
bound
push
dec
and
and
shll
fisubrs
pop
push
out
inc
cmpsb
addr16
loop
cmp
into
jg
xchg
xchg
xor
push
or
adc
mov
faddl
out
insb
into
add
cmp
push
cmc
rcrb
jns
int3
mov
lcall
pop
bound
ret
stos
or
push
stos
push
stos
dec
and
ds
xchg
mov
test
loope
push
add
push
sub
cmp
shl
mov
aam
loopne
mov
mov
add
sub
imul
fwait
in
scas
scas
test
mov
inc
imul
insl
lcall
or
movsl
pop
add
mov
hlt
ljmp
dec
leave
int
outsb
adcb
in
sbb
sbb
sbb
push
cltd
and
xchg
push
mov
rclb
cmp
xor
jle
mov
or
out
pop
fistl
or
cli
xchg
sub
add
mov
or
cmp
adc
das
push
ds
lcall
js
lea
test
lea
cmp
lock
fs
cwtl
mov
es
xchg
ficompl
sub
push
fildl
push
add
sub
scas
inc
lahf
cmpsl
push
lock
mov
and
gs
jb
outsb
xchg
mov
imul
push
inc
je
mov
dec
mov
je
inc
or
dec
sbbb
jnp
ficoms
shrl
pop
adc
lahf
push
sbb
mov
pusha
test
out
mov
les
call
inc
cmp
jmp
and
jns
jle
dec
das
lea
js
pop
mov
sub
pushf
mov
lods
mov
lcall
pop
lcall
fistpl
dec
mov
push
es
stc
jns
cs
xchg
adc
sub
mov
push
in
add
inc
scas
iret
jmp
adc
es
popa
xor
icebp
int3
push
popa
daa
xor
cmp
popf
adc
sbb
xchg
inc
mov
or
out
xchg
jg
mov
mov
call
pop
cmpsb
outsb
popf
or
inc
lcall
subl
sub
mov
adc
and
lcall
sub
xchg
leave
push
sbb
andw
gs
rclb
cmp
jmp
test
int
lock
int3
mov
lods
outsb
inc
jnp
jle
mov
mov
dec
test
mov
push
insl
cmp
adc
push
inc
outsb
inc
jecxz
jno
ror
icebp
nop
cmpsl
sub
jl
sbb
gs
ficompl
bound
or
clc
mov
pop
rcrl
scas
loope
adc
xor
movsb
push
jecxz
dec
ss
adc
add
pop
hlt
add
jbe
and
or
jg
pop
test
and
inc
jge
inc
pushl
xchg
icebp
popf
das
negb
roll
push
and
pop
adc
cli
paddsb
xchg
add
popf
mov
cmc
mov
sbb
and
idivl
mov
clc
icebp
out
or
add
lds
shl
add
cmc
pusha
push
cmp
dec
xor
addl
divl
fistpl
push
xor
fwait
stc
and
sub
jecxz
test
push
and
mov
aas
inc
test
test
popa
outsl
and
outsb
and
mov
rcll
dec
push
scas
sbb
cmp
dec
cli
ljmp
les
mov
fs
jb
jno
adc
fdivrs
repnz
xchg
in
or
mov
iret
mov
test
mov
enter
sahf
sub
cwtl
mov
arpl
daa
inc
mov
xchg
mov
aas
xchg
loope
push
sub
test
bound
movsl
clc
aam
xchg
sub
jge
add
jae
in
inc
pop
jmp
loop
dec
jge
stos
lret
ds
jnp
mov
xchg
inc
add
es
mov
popf
lods
divl
jb
sahf
mov
int
fidivl
cltd
lret
sbb
call
ret
lock
ds
xor
sti
fidivl
popf
int3
ss
movsb
repz
ds
or
inc
adc
inc
icebp
push
pop
fistpll
add
pop
jmp
xlat
and
dec
mov
push
sub
xchg
sahf
sub
push
lods
test
fwait
inc
loop
ficompl
dec
std
jecxz
dec
decb
fnsave
mov
sahf
sbb
leave
xor
jge
dec
faddl
mov
sbbl
add
in
jne
loope
mov
push
push
push
push
mov
inc
cltd
xor
hlt
aas
adc
push
push
push
xchg
hlt
xchg
insl
in
pop
adc
fdivs
sub
inc
in
jmp
xchg
stos
adc
xor
and
cmp
jb
shll
sub
ljmp
mov
pop
int
jns
jg
in
push
dec
fnstenv
leave
or
jo
sub
enter
mov
sahf
lret
test
mov
add
in
add
movsb
movsl
stc
dec
lods
test
pop
dec
xchg
ja
cmc
cmp
in
imull
iret
stos
repnz
rcr
mov
push
dec
cmp
add
xlat
and
and
sub
mov
cmp
shl
mov
je
arpl
stc
mov
sahf
shrl
inc
out
mov
movsb
push
lcall
bound
lret
lcall
push
add
sub
dec
xchg
xchg
les
jne
push
push
inc
jle
sbbb
mov
jno
icebp
dec
or
outsl
mov
push
push
jecxz
sarb
cmpsb
pop
shrl
ret
sahf
fs
hlt
popf
cmp
insb
mov
mov
mov
sbb
gs
cmp
aad
mov
push
jno
adc
movsb
orb
and
mov
pop
sahf
popf
jne
xchg
jge
outsb
lods
test
push
stos
sub
nop
or
lcall
lds
outsb
rorl
and
test
je
mov
test
mov
movsl
rcrb
sbb
fstpt
pusha
inc
addr16
inc
cld
outsb
js
fisubrs
xchg
or
mov
jecxz
mov
sarb
mov
and
lods
fdivrl
mov
cmp
inc
jno
mov
mov
outsl
mov
aas
aad
jl
pushf
or
sbb
stc
aas
pop
mov
repnz
in
cmp
push
jno
xchg
cwtl
push
xor
sbb
sub
xchg
jmp
push
sbb
bound
and
cmp
fs
test
rol
das
daa
stos
or
and
jbe
xor
and
xor
in
out
sbb
rcll
ja
leave
aaa
or
ja
sub
mov
dec
dec
adc
negl
lret
outsb
sbb
outsb
test
mov
and
ret
xor
in
bound
dec
jbe
jmp
loopne
cmpb
xor
add
adc
dec
dec
loope
cli
pushf
loop
jle
or
add
mov
add
mov
imul
cltd
inc
imulb
shll
loope
cmp
pop
pop
xchg
int3
or
push
pop
xchg
inc
inc
idiv
mov
test
xor
int3
mov
cltd
sbb
mov
aas
cli
add
int3
xor
shll
push
mov
in
dec
pop
mov
xchg
out
out
addr16
mov
neg
inc
aam
arpl
imul
xchg
cld
mov
jge
xchg
jne
cmp
jae
xchg
mov
cltd
inc
jne
xchg
cwtl
push
shll
cmp
pop
repz
rorl
mov
nop
sub
xchg
pop
rcl
repz
icebp
pop
and
ljmp
popa
inc
test
push
jg
lea
loope
fwait
and
into
fisubl
jns
ljmp
xor
mov
jecxz
insb
cmp
push
sbb
mov
sar
lea
add
hlt
iret
cmc
mov
cmp
mov
stc
or
bound
cs
push
mov
inc
xchg
mov
jnp
push
adc
xor
mov
aad
in
push
mov
pop
ficoml
xchg
leave
fsub
ss
divb
fbld
in
imul
outsl
xor
vfrczss
test
dec
or
inc
aam
pop
arpl
adc
mov
shrl
xchg
jb
mov
xor
enter
lcall
gs
mov
mov
or
jo
mov
push
lret
xchg
dec
adc
sub
dec
rcll
jnp
mov
xchg
loop
sub
cmp
and
negl
inc
test
pop
dec
jb,pt
push
daa
je
sbb
push
lret
ret
mov
and
mov
dec
or
xchg
je
jae
jne
subl
sbb
add
pop
rorb
loop
mov
jae
ja
mov
gs
push
jae
mov
sbb
push
std
xchg
adc
scas
aas
cmc
scas
lods
into
inc
and
or
sub
or
notl
jle
ret
mov
push
mov
push
out
mov
mov
cmpsl
mov
jae
pop
repz
cmp
sub
loopne
cmp
pop
and
and
sbb
fidivrs
inc
in
mov
aam
arpl
jbe
cmp
fimuls
mov
cmpsl
mov
dec
mov
cmpsl
push
xlat
pop
test
decb
and
push
xchg
xor
dec
arpl
mov
mov
notl
mov
inc
jmp
sub
sbb
sbb
mov
fldenv
add
sub
pop
sub
out
dec
push
sbb
add
push
aaa
ds
pushf
jmp
insb
mov
jnp
mov
rcrb
pop
inc
xchg
mull
cmp
in
mov
jae
scas
add
xchg
test
jne
xor
sbb
cltd
fcoml
xorb
jo
cmp
cmp
mov
or
xor
mov
jns
xchg
test
add
pop
cmpsl
pop
mov
rcrb
pop
adc
fiadds
nop
add
repz
addl
outsb
jp
add
movsl
jmp
sub
dec
sbb
pop
inc
lahf
les
jns
xchg
xor
movsl
stos
das
add
jge
lock
stc
xchg
es
dec
mov
int
fstpt
pop
xchg
inc
mov
insb
pop
insb
fistps
pushf
aad
cwtl
insb
pop
dec
and
dec
dec
pop
imul
mov
test
pop
lods
jle
cmp
arpl
das
mov
rorl
mov
mov
inc
or
xchg
cmp
pop
xchg
mov
outsl
mov
stos
xor
inc
or
inc
int3
and
mov
hlt
or
or
imul
stc
fs
std
rorb
cwtl
in
fsubr
mov
insb
jbe
mov
push
aad
jmp
cmp
add
inc
jns
mov
ljmp
sti
pop
aaa
cs
and
and
and
xor
push
loope
add
inc
popa
pop
jge
mov
ret
jns
movsl
in
iret
jl
adc
xlat
mov
aaa
pusha
out
push
inc
shlb
cmp
mov
in
jecxz
out
add
xor
push
mov
mov
pop
add
sarl
enter
or
fldt
mov
pop
sahf
ss
inc
jg
mov
ret
jl
mov
xchg
ret
cmp
mov
jle
sbb
daa
mov
ret
loop
inc
inc
out
and
imulb
lret
jmp
sbb
adc
sbb
loop
push
fcmovnb
div
mov
dec
xchg
add
aaa
sub
sbb
xchg
dec
stos
iret
fmull
lock
pop
sbb
dec
clc
mov
imul
lret
jecxz
enter
lcall
cli
push
jecxz
shrl
movsl
dec
or
adc
subb
ljmp
das
sar
test
jmp
mov
js
cwtl
fisttpll
insb
mov
loopne
notb
adc
repnz
mov
sub
dec
add
jnp
mov
arpl
aam
inc
sub
leave
jle
lea
lods
jg
ret
inc
push
cld
es
cmp
out
mov
int3
cmp
mov
sahf
sub
sub
mov
stos
push
lds
popa
jae
popw
sbbl
inc
pop
sbbb
andb
adc
xor
jge
xor
cli
rorb
sub
leave
pop
fistpll
add
pop
xchg
cld
fistpl
enter
jno
xchg
sub
cwtl
or
push
mov
pop
add
mov
fwait
xor
imul
adc
nop
lcall
repz
mov
jmp
add
xlat
jb
out
aaa
in
mov
dec
cmpsb
cmpsl
cs
pop
mov
fisttps
mov
jb
jns
nopl
sahf
or
test
adc
mov
mov
les
in
imul
inc
flds
scas
out
stos
addl
rcr
mov
pop
bound
dec
roll
movsl
lahf
fidivrs
jmp
scas
insb
popf
dec
xor
not
cld
dec
mov
adc
mov
mov
xchg
jg
mov
push
and
mov
jmp
insb
adc
jg
cli
arpl
mov
cltd
mov
sbb
in
subb
mov
scas
add
mov
push
mov
cli
daa
fidivrl
jo
sbb
and
rcrb
mov
movsl
movsb
sub
fsubrs
cmpsb
in
ss
sub
ss
fimuls
sbb
jle
push
lods
out
int3
pop
movsl
mov
jno
dec
inc
cwtl
sub
adc
repnz
pop
test
rcl
adc
pop
jp
std
jne
dec
jmp
les
call
pushl
mov
das
sahf
xor
scas
xchg
int
cld
cli
icebp
inc
or
sbb
jbe
adc
xchg
pop
xor
es
repz
insl
inc
and
jo
idivb
lret
adcb
cs
jnp
aaa
icebp
add
add
jnp
xor
arpl
dec
scas
lock
je
inc
push
pop
push
sti
arpl
jne
jno
repnz
inc
or
cltd
sbb
test
int
xchg
imul
xor
push
lea
enter
inc
testl
dec
cmpsl
sbb
push
int3
pop
ret
sub
sbb
mov
mov
xchg
mov
cmp
pop
movl
mov
insl
stos
mov
int3
pop
rolb
nop
cmp
addl
fdivs
into
popf
add
mov
fwait
xor
pop
int
clc
sub
test
xchg
or
les
dec
jg
fildl
inc
and
adc
push
add
mov
cmpsb
mov
jle
sbb
gs
cmp
add
xor
pushf
pop
add
mov
push
xchg
pop
mov
je
incl
insb
mov
cmp
ret
xor
sbb
xchg
inc
mov
mov
popf
or
xchg
pushf
leave
ljmp
jno
inc
push
sbbb
insl
repz
push
add
mov
xor
push
sbb
int
push
add
sbb
jecxz
les
or
or
test
jbe
jmp
loope
fildll
jb
mov
jmp
add
cld
in
loope
mov
jae
cmp
sub
cmp
test
cli
mov
mov
outsl
mov
mov
rolb
dec
data16
loopne
jb
fldl
mov
stos
rolb
adc
mov
dec
mov
jge
add
jne
int3
ficomps
adc
dec
mov
or
hlt
jno
ret
fcomi
test
cmpsl
repz
nop
les
xor
out
sahf
mov
push
jbe
int3
je
ljmp
mov
repnz
shll
jp
mov
aad
je
into
jb
outsb
xlat
not
cmp
or
xchg
cmp
or
jns
pop
insb
xchg
pop
push
fdivrl
push
push
andb
imul
stos
test
icebp
in
das
cli
mov
adc
test
inc
sbb
push
cwtl
out
xchg
sub
mov
add
or
mov
mov
arpl
cltd
shll
pushf
mov
int3
fs
or
loop
call
and
push
or
and
pushf
std
sahf
and
loopne
ds
mov
in
out
insl
repz
int
jle
in
popf
xlat
or
ljmp
lcall
decb
pop
jmp
push
push
cwtl
and
xchg
jo
repz
shlb
imul
imul
mov
pop
add
sub
out
or
sbb
test
and
movsl
push
and
pop
cmpsl
jp
or
aaa
dec
faddl
je
push
lret
xchg
int3
dec
decl
rcl
push
dec
adc
add
inc
loope
jmp
mov
pop
jnp
scas
mov
xchg
xchg
adc
or
fs
std
and
adc
fsubr
dec
rcr
jne
push
dec
ja
lahf
or
arpl
stc
fisubl
ja
mov
sub
mov
lock
sbb
adc
mov
or
jl
inc
mov
mov
mov
aaa
aas
out
and
aam
inc
outsb
sbb
fistpll
test
or
sarb
xchg
xchg
js
outsb
fisubrs
repz
xor
adc
rcrl
jne
xlat
mov
push
jbe
push
cmc
addl
push
xchg
je
int3
jle
repnz
xchg
jge
dec
cmp
pop
in
jmp
bound
testb
je
adc
mov
cmp
pushf
add
fsubrl
sub
addr16
push
sub
xor
test
sbb
gs
mov
idivl
mov
xchg
xchg
ds
dec
dec
xor
cmpl
push
mov
push
test
popf
mov
repnz
mov
mov
push
adc
mov
outsl
dec
mov
jno
push
addr16
cld
and
pop
inc
sbb
dec
lahf
lcall
push
ds
and
jbe
rclb
lea
dec
pushl
data16
nop
negb
inc
and
out
sub
inc
aas
adc
fldcw
mov
push
mov
mov
inc
xchg
cld
bound
sub
mov
jmp
xchg
aas
jne
scas
lea
in
movsl
andps
and
scas
cmp
insl
dec
das
xchg
ret
sbb
std
aam
scas
jle
rcr
mov
mov
mov
or
or
adc
pusha
ja
adc
fwait
popf
inc
out
pop
jmp
push
xorl
add
arpl
bnd
lods
adc
pop
push
adc
push
inc
push
data16
xchg
arpl
pop
sub
addr16
fdivrs
ror
movsl
cld
jmp
insb
pop
xor
dec
dec
mov
movb
imul
orl
pusha
stos
cmc
xchg
mov
sub
lods
subb
mov
out
jge
inc
xlat
loope
scas
je
addr16
sbb
or
or
out
add
and
pop
stos
xchg
jns
loopne
adc
cwtl
jl
ss
fiaddl
jle
mov
aam
jmp
in
jb
dec
and
cmp
xor
mov
pop
adc
xor
mov
mov
inc
push
push
lret
in
shlb
es
adc
sub
xor
mov
mov
or
leave
mov
or
rorl
subl
sub
cmc
aad
jp
shll
sub
xchg
in
inc
push
xchg
cwtl
aad
or
pop
je
xchg
inc
aas
lods
pop
mov
pop
mov
enter
std
push
jmp
xchg
add
sub
sbb
inc
int
mov
orl
jmp
dec
add
and
push
pop
cli
add
je
fs
inc
add
rcr
sub
add
sub
add
push
push
jno
sub
mov
or
iret
dec
sub
push
sub
sbbl
imul
mov
cmp
cmp
push
jecxz
mov
in
gs
adc
dec
mov
addb
sbb
or
pushf
lcall
xor
and
dec
and
jl
jae
fdiv
dec
push
sbb
lock
mov
push
mov
add
push
clc
mov
mov
lods
sub
into
mov
insb
adc
jo
inc
mov
test
or
enter
imul
or
rcrb
inc
sbb
inc
js
jnp
inc
jp
daa
movsb
or
jns
sbb
jle
test
loop
or
icebp
imul
mov
push
lret
mov
aad
cmp
sub
data16
das
not
roll
pop
mov
and
xor
push
sub
imul
ds
mov
inc
fdivl
sub
pushf
test
loopne
shl
jbe
test
sbb
shl
shrl
aam
incl
pushf
adc
je
cmpsb
or
or
shlb
mov
push
call
push
xchg
mov
sbb
cwtl
dec
rorb
add
mov
or
int
jns
test
lock
je
push
cld
and
dec
push
out
pop
xor
mov
out
pusha
mov
loopne
push
repz
push
mov
test
insb
rclb
pop
cmp
jno
cmc
enter
into
loopne
int3
mov
adc
pop
repnz
les
mov
sbb
or
xchg
rcll
orb
fucom
loopne
shll
inc
push
gs
cwtl
mov
cmpsl
mov
mov
mov
ljmp
push
scas
pop
call
scas
scas
jns
push
cmp
cmp
sub
out
in
mov
lcall
rolb
in
popf
adc
add
and
std
or
jp
xor
mov
icebp
movsb
mul
repnz
mov
mov
sarl
popf
in
xor
mov
sahf
dec
pop
push
repnz
adc
test
out
add
clc
lret
cwtl
xorb
jg
jle
repnz
rorb
sbb
in
arpl
jp
daa
jp
xor
dec
outsl
cld
pushf
fsts
in
lret
int3
out
jns
fisubl
inc
cmp
mov
jl
movsl
jmp
sbb
dec
sbb
cmp
addl
aam
ret
adc
sub
enter
stos
push
pop
addr16
popf
cwtl
ljmp
mov
icebp
sahf
out
adc
out
lea
jp
rcl
aaa
xchg
aaa
push
xchg
mov
and
inc
xchg
cld
inc
xchg
cli
outsb
pop
adc
sbb
dec
je
imul
daa
push
hlt
int3
mov
fucomi
pop
fidivl
dec
xorl
lret
aas
roll
fs
and
pusha
dec
sbb
js
push
cwtl
das
and
xchg
into
addr16
pop
shrl
and
sub
int
mov
cmpsl
sbb
scas
mov
push
xorl
dec
popa
pop
mov
mov
lock
inc
nop
call
inc
push
repnz
sbb
push
xorl
cmp
pop
mov
fwait
fwait
xor
testb
fistl
ficompl
or
mov
popf
aas
shrl
rol
add
pop
or
decl
nop
inc
xchg
add
cltd
popa
jge
ret
mov
inc
cmp
cmp
mov
add
inc
mov
fnstsw
daa
xor
jge
cmp
loope
push
rclb
in
ret
xchg
push
push
mov
cwtl
sarl
mov
stc
and
add
push
or
test
bound
inc
cmp
push
xlat
mov
pop
sbbb
xchg
js
outsb
and
bswap
lret
addr16
mov
inc
es
lods
and
test
mov
cmp
stos
xchg
or
xor
test
inc
fcoml
dec
mov
fcmovnu
ljmp
shll
and
jnp,pt
pushf
mov
dec
sbb
negb
xor
lods
dec
inc
xlat
sbb
jno
or
jne
mov
sbb
push
and
mov
out
cltd
insl
pop
das
lahf
lock
cmpsb
in
mov
and
shlb
dec
testl
lret
dec
ret
int
aam
lret
cmp
lcall
mov
sub
mov
push
fistpll
xlat
pop
jae
dec
push
and
jle
outsb
ret
xchg
hlt
xchg
cmp
stc
call
xchg
xchg
mov
or
lods
and
mov
cmp
xor
dec
lock
pop
orb
mov
dec
pop
lahf
xor
xor
mov
aaa
or
aas
jl
pusha
sbb
pop
xchg
hlt
sbb
sar
dec
insb
es
repz
test
fiadds
inc
bound
popa
dec
les
ret
or
mov
arpl
lock
repz
int3
das
adc
out
xor
jae
popa
or
clc
mov
jb
push
int3
lcall
sub
std
in
jp
mov
and
push
test
movsl
sub
lret
arpl
inc
and
aas
cmp
cmovbe
or
push
jmp
push
mov
cli
das
loop
pop
mov
insb
sahf
and
sbbb
stos
sbb
das
fistl
sub
movsl
jno
dec
sub
scas
out
cmpsl
mov
jecxz
pop
hlt
dec
out
rorb
test
adc
push
push
sar
stos
dec
xchg
shl
cmp
sub
adc
aaa
lret
cwtl
jg
inc
out
inc
dec
lahf
mov
ret
mov
push
mov
and
push
xchg
dec
mov
lret
sbb
fidivrl
dec
mov
jg
mov
loop
outsb
andl
pop
jb
jno
push
ficomps
cmpsl
adc
xchg
sbb
jg
aaa
and
mov
push
xor
push
icebp
xor
dec
enterw
inc
ljmp
addb
jbe
jmp
loope
imul
pusha
mov
ds
mov
rcl
xor
pusha
aaa
ret
fisttps
mov
out
jno
inc
push
cli
inc
inc
ret
inc
pop
push
mov
xchg
fcomp
mov
add
mov
lods
call
jne
sub
jle
fsubp
adc
jl
pop
pop
and
add
ss
and
js
xor
scas
test
or
cmp
es
or
mov
mov
cli
or
cmpsl
sbb
loop
add
je
and
fucom
mov
or
outsl
fnstcw
pop
decl
shll
fists
je
xor
sub
enter
and
dec
xor
ret
mov
push
add
out
fwait
pushf
insl
leave
imul
out
lret
mov
jg
jle
call
cmp
jl
das
jo
cmpsl
add
add
test
gs
insl
test
bound
sub
cmp
pop
mov
daa
movswl
int3
data16
insb
sahf
pop
xchg
xchg
popa
mov
jecxz
addr16
jae
jbe
inc
adc
int3
inc
cvtpi2ps
dec
dec
pop
inc
cmp
test
add
fdivrl
lock
xor
aad
cmp
jo
lds
xchg
push
push
jb
xor
sub
lahf
xchg
test
sub
xchg
pop
pop
or
cmp
repz
clc
fidivs
shlb
mov
mov
add
mov
fisubs
fdivl
std
push
loope
mov
stc
xchg
cmp
ja
testl
sbb
sahf
and
jnp
jecxz
test
push
cld
xor
test
fsub
pop
mov
out
mov
stc
push
xchg
out
fdivrs
fnstsw
xlat
into
jae
es
lret
stos
pop
popf
mov
sbbb
push
stos
cmc
mov
pop
jg
inc
pop
cmp
xchg
dec
aaa
push
mov
fldln2
cmp
cwtl
ja
stc
lahf
mov
adc
inc
pop
push
xchg
lret
test
int3
pop
daa
imul
xor
jo
jl
lods
fldt
add
lods
lret
inc
push
cmp
outsb
cmp
fs
lods
inc
aam
xor
add
cmp
inc
mov
arpl
inc
push
adc
adc
xor
leave
dec
fidivs
add
fnstcw
adc
ret
jno
test
mov
aaa
ficoml
dec
cltd
shll
fldt
push
or
pop
arpl
add
test
add
filds
loop
sub
stos
pusha
pop
xchg
jns
mov
pop
fdiv
fisubrl
or
mov
push
xchg
int
add
push
mov
mov
scas
push
jecxz
stos
mov
in
out
sub
mov
lea
aam
xchg
fidivrs
jmp
inc
or
outsl
and
lcall
inc
xchg
mov
pop
xor
jbe
xor
pop
fs
push
in
jl
scas
lret
xchg
int
into
loopne
insl
daa
in
inc
sti
in
cs
ds
imul
mov
dec
and
xor
addb
pop
sub
mov
mov
mov
call
xor
push
adc
cmpsl
jne
add
xor
rolb
loop
push
push
ljmp
popa
movsb
xchg
movsb
jmp
mov
push
pop
scas
mov
adc
pop
sub
push
outsl
jbe
movsl
jl
mov
inc
jecxz
sbb
ficompl
and
les
push
push
sbb
mov
mov
out
xchg
jecxz
adc
scas
int
fsubl
cld
test
lcall
adc
xlat
inc
mov
ljmp
push
rcll
sbb
arpl
outsb
cmp
cmc
rcr
popf
push
sub
int
iret
inc
jns
bound
dec
xchg
imull
push
xorb
dec
lds
pop
repnz
or
mov
mov
ja
and
mov
shrl
dec
xor
jnp
jg
xor
or
sub
jmp
jns
dec
sahf
mov
mov
and
inc
jmp
dec
push
pop
nop
sbb
ljmp
mov
xor
xorl
lret
cmc
rcll
cmp
or
inc
adc
xor
mov
repnz
mov
enter
repz
sti
mov
ror
in
lds
add
and
dec
lahf
cltd
cmc
imul
cmpsb
rep
loopne
jle
and
ja
jns
sbb
lods
test
adc
inc
adc
jns
mov
xchg
mov
add
lahf
js
in
stos
push
je
bound
xor
icebp
jmp
fmulp
fisubs
cmp
shld
xchg
loop
jl
into
loopne
or
adc
mov
std
jp
fs
lock
xchg
int
cmp
aaa
js
pop
dec
lret
mov
sahf
imul
dec
dec
mov
or
data16
mov
sbb
repz
lea
mov
or
xor
shlb
cmpsl
pop
adc
dec
pop
lock
sub
fwait
in
leave
orb
lock
sbb
or
lret
push
or
popf
test
cmp
insl
fsubrp
inc
packssdw
dec
inc
and
mov
xor
xchg
push
fcmovnu
jns
inc
pop
mov
xor
add
iret
adc
outsl
js
xchg
clc
fcmovne
sub
push
xor
xchg
inc
call
lahf
pushf
or
jne
sub
iret
test
leave
mov
add
fmul
movsb
xlat
call
cmp
test
mov
lods
sbb
and
jbe
cmpsb
add
xor
mov
jns
lods
inc
popa
cmpsb
inc
mov
sub
sub
inc
mov
je
out
fstl
cmpl
sub
mov
mov
adc
test
ja
les
rcrl
insl
mov
inc
test
jbe
lahf
push
imul
roll
jae
iret
ljmp
xchg
insl
push
lea
cmpsb
fs
lahf
and
add
std
add
test
aas
cmp
and
jmp
daa
pop
cld
jb
pushf
scas
pop
jns
fisubrs
loope
pop
sbb
jo
pop
inc
addr16
leave
add
sbb
insb
testl
push
loop
xor
push
mov
push
push
jmp
fs
pushf
loop
je
pop
sbb
iret
sbb
and
leave
jno
mov
add
xor
push
mov
les
sbb
pop
or
and
jnp
ss
jo
stos
jbe
pushf
sub
dec
dec
push
in
inc
xchg
mov
mov
push
add
sub
push
inc
sub
pop
loop
cli
cmp
xorl
cmp
and
icebp
jg
shrb
stc
testl
movsb
pop
daa
out
jmp
sub
repz
lds
cli
cs
sbb
ja
daa
popa
inc
fsts
cli
jle
addr16
sub
push
sub
mov
pop
popa
fmuls
fisubl
gs
loop,pn
pop
adc
test
add
call
pushf
pop
xor
je
xchg
xchg
add
lahf
add
cmp
test
or
adc
js
jnp
adc
mov
or
add
or
stos
fldl
inc
daa
outsl
imul
imul
mov
jnp
fcomi
mov
dec
xlat
push
popf
dec
sub
pop
aad
mov
btr
push
push
test
pop
hlt
adc
add
xor
fildll
scas
lret
imul
xchg
lods
andb
pop
inc
mov
xor
inc
push
and
xor
rorl
or
sub
pop
sti
scas
fidivs
xchg
lahf
mov
or
clc
jle
push
or
mov
movsb
add
mov
cmpsb
inc
mov
xor
jle
fcomip
and
xor
negb
sub
sbb
pop
mov
inc
mov
insb
push
repz
in
stos
shlb
push
iret
mov
imul
and
push
mov
cmpb
sub
mov
roll
dec
stos
jecxz
and
mov
push
in
ljmp
and
clc
ffreep
cmpb
mov
iret
es
into
test
int3
push
xchg
dec
loop
add
sub
sub
add
das
sti
aad
xor
dec
xchg
test
loop
jb
inc
ds
stos
xor
mov
scas
or
mov
add
into
push
addr16
add
loope
lea
adc
pushf
fstpl
add
mov
sub
mov
out
mov
add
push
cmp
sbb
pop
andb
repz
insl
sarl
lahf
pop
test
add
int
loope
addb
rcl
mov
xor
lds
int3
ss
adc
add
fnstcw
xor
mov
mov
test
inc
jp
imul
xchg
xor
ljmp
or
jae
repz
inc
insl
mov
jae
in
cmpsb
shrl
push
shl
cmp
dec
mov
mov
test
shlb
loop
ret
mov
ret
outsl
lret
cltd
mov
and
push
mov
mov
imul
loopne
shlb
testb
dec
xchg
sbb
mov
lods
mov
cmpsb
lahf
jo
je
imul
inc
mov
das
jno
fdivrl
push
fwait
out
js
cmp
movsb
call
cmc
hlt
sbb
in
dec
bnd
cmp
push
repz
pop
addb
shll
xchg
or
dec
ret
push
xchg
call
dec
sub
and
dec
ret
push
js
cmp
mov
jne
and
jge
sti
mov
mov
cld
and
test
dec
cmpsb
fwait
bound
sub
popf
or
cmpsl
rorl
mov
das
pusha
in
pusha
pop
inc
mov
cltd
sbb
mov
cmpsb
repz
xchg
xchg
xlat
shll
ljmp
adc
iret
mov
fsubr
jns
int
loopne
sub
add
dec
popa
lods
mov
in
jge
mov
lmsw
adc
pop
jbe
add
cld
and
jp
outsl
jno
push
mov
test
aaa
jbe
xchg
es
popa
insb
outsl
sub
mov
sub
vpaddusw
mov
in
insl
push
inc
mov
xchg
stos
movsl
mov
scas
sahf
fwait
mov
or
push
sahf
jbe
repnz
shrb
jl
mov
pop
popf
and
mov
xor
fsts
dec
and
jns
hlt
mov
jb
je
sbb
es
ret
jne
ret
loopne
mov
jl,pn
or
scas
jle
xchg
ret
lret
sarb
sub
fidivrs
dec
cmp
addr16
mov
in
sub
dec
push
mov
add
mov
xor
fs
mov
negl
jb
mov
inc
shll
xor
into
call
push
ret
push
outsb
jmp
jno
fstpt
jb
insb
pop
je
outsl
adc
out
call
sub
fidivl
jns
out
push
push
dec
push
push
mov
sub
inc
cwtl
inc
fsub
dec
dec
xchg
and
mov
or
or
cmp
jb
push
js
lcall
pop
cmp
jle
inc
movsl
in
ljmp
sub
negb
ss
hlt
jnp
xchg
test
shll
roll
xor
mov
adc
popl
jno
cmp
sbb
mov
xchg
jo
sub
pop
sbb
ret
mov
dec
push
lcall
adcl
pop
adc
jg
dec
andl
call
sbb
sbb
mov
pop
lea
out
sbb
mov
dec
orb
int
push
shrl
dec
sahf
or
cld
in
int3
sub
rcl
jmp
xor
xor
pop
cli
in
out
dec
inc
in
mov
xchg
je
sbb
add
sahf
xchg
stos
pop
sub
test
lahf
inc
xchg
adc
push
hlt
mov
daa
pop
mov
xchg
add
daa
dec
dec
mov
daa
xchg
sub
loopne
push
xchg
jo
fs
test
xchg
fxch
dec
insb
daa
aas
ret
cmpsb
mov
or
cmp
test
js
mov
dec
jge
adc
lcall
mov
scas
ds
mov
mov
pop
in
jl
sbb
popa
ja
lea
subb
inc
and
fwait
daa
jmp
sub
pusha
ds
frstor
add
int3
bound
cltd
js
mov
ds
cwtl
rorl
xchg
int3
lds
inc
sub
pop
shl
lret
sbb
jno
or
repz
arpl
lods
call
data16
ret
shlb
xor
mov
xor
imul
adc
mov
jns
out
sbb
fidivs
push
out
adc
fmuls
mov
out
ljmp
mov
mov
lcall
gs
jae
int
cmpsb
add
adcb
mov
pop
and
and
mov
cwtl
shll
cwtl
pop
xor
test
aaa
nop
pushf
cmc
push
push
fstpt
imul
clc
fiadds
pop
add
and
aaa
pop
insl
icebp
into
mov
mov
jnp
and
dec
pcmpgtb
jmp
mov
into
int
fisubl
dec
test
insl
mov
jne
and
jp
mov
je
or
outsb
jg
ljmp
pushf
adc
flds
mov
jg
push
jo
dec
daa
daa
sub
adcb
adc
dec
iret
cmp
and
and
and
mov
cs
in
pop
lds
inc
jo
xchg
leave
fwait
push
into
xchg
lret
cmc
or
pop
insl
std
pop
lret
inc
out
je
jnp
xchg
dec
adc
cld
sub
push
mov
out
pop
nop
sbb
outsb
clc
repz
xchg
cmp
je
pop
repnz
nop
inc
cmp
lahf
mov
sbb
pusha
dec
cmp
pop
xchg
xorl
stos
sbb
pop
jmp
push
js
and
xchg
adc
fmuls
aam
sbb
mov
push
push
roll
imul
or
shll
stos
cld
pop
jp
ficomps
mov
push
dec
imul
jbe
iret
pop
push
ret
adc
mov
xchg
sti
aas
xor
fucomip
push
repnz
dec
movsl
inc
mov
adc
mov
xchg
push
idivl
movsl
jno
mov
inc
xchg
xor
dec
and
data16
xchg
sti
adc
punpckhdq
jecxz
mov
pop
clc
cmpsb
dec
hlt
adc
cmpsl
adc
cld
iret
jmp
push
stos
repz
stos
jmp
test
pop
xchg
mov
sub
sbbb
push
and
das
lret
lds
movsl
leave
adc
inc
push
js
jne
dec
xor
sahf
cmp
stos
addl
sar
jns
pop
pop
mov
lcall
jge
jle
pushf
jmp
add
adc
shrl
sbb
fcmovb
pop
lcall
insb
fisubrs
mov
dec
xor
add
mov
mov
lea
mov
and
dec
inc
inc
inc
in
in
push
loop
loope
stos
cmpsb
sub
test
push
or
fwait
pop
rcr
rcl
adc
mull
scas
pop
cmp
hlt
xchg
adc
cwtl
test
inc
xorl
mov
sbb
mov
popf
in
push
xlat
outsl
or
ds
sahf
add
mov
test
ret
cli
push
scas
add
and
fcoms
pop
and
repz
in
iret
daa
jae
cmpsl
and
cwtl
addb
jg
js
cli
cmp
out
lret
mov
std
je
xchg
inc
pop
pusha
push
inc
rcrl
data16
lahf
and
jae
sarb
push
and
sahf
lods
add
test
out
fistl
push
dec
mov
jne
bound
jmp
adc
mov
pop
jnp
call
mov
iret
les
mov
insb
rcrl
xchg
jmp
adc
jmp
jno
imulb
and
js
jnp
or
shlb
xor
iret
add
pop
mov
inc
or
xor
push
test
jmp
pusha
cltd
jb
pop
dec
loopne
ds
aas
sub
or
repnz
mov
sub
es
jne
repnz
test
lahf
ljmp
dec
mov
adc
jmp
and
cmp
sbb
popl
imul
data16
or
movsl
loopne
mov
nop
jmp
adc
fwait
stos
outsb
add
mov
in
jle
ja
aam
and
icebp
dec
imull
xchg
es
pop
inc
hlt
mov
bound
in
xor
jp
push
push
push
ds
insl
sub
rolb
xchg
inc
pop
xor
push
movsb
scas
or
nop
mov
js
jns
cmp
xor
imul
lret
sub
sbb
loop
sub
stc
insb
push
lds
ud0
mov
mov
imul
andb
aam
lods
dec
mov
int3
data16
mulb
scas
callw
xchg
int
adc
push
mov
xchg
arpl
jae
jle
or
and
mov
movl
jl
ret
cmp
daa
out
lock
in
jmp
and
lea
mov
or
mov
jno
clc
add
hlt
xchg
test
lcall
sbb
mov
xchg
mov
inc
jae
lods
cmp
sub
call
out
dec
out
sbb
mov
fidivl
enter
xchg
dec
sbb
aad
xor
jge
pop
shll
or
test
aaa
js
push
cmp
test
popa
popa
movsb
addr16
cmp
pop
leave
call
lods
js
rcll
sbb
movsl
xchg
sbb
clc
cltd
scas
inc
push
push
xchg
out
pushf
cli
cmc
in
push
sub
or
notb
adc
push
pop
dec
jp
std
int
cmpsl
dec
and
cmpsl
dec
push
lret
mov
loopne
int
lods
lahf
and
movsl
daa
fstps
sub
sbb
dec
shl
scas
and
pushf
repnz
lea
mov
lcall
mov
in
pop
xchg
dec
fstl
jg
lahf
roll
jp
cmp
cmp
and
adc
out
xchg
cmp
xlat
fcmovb
fnstenv
jno
pop
ljmp
xor
sub
rcrb
cwtl
lret
xchg
jne
ljmp
popa
push
xchg
adc
ja
mov
pop
and
filds
clc
xchg
dec
mov
in
cs
sbb
ret
into
xchg
lds
out
fstps
sub
xchg
lods
dec
push
ljmp
in
jp
pop
fildl
scas
call
cs
adc
and
popf
rcl
mov
lds
add
divl
imul
cmpsl
stc
inc
pop
add
mov
enter
rcll
push
push
out
push
adc
aad
test
jmp
stos
sarl
int
out
xchg
jo
and
add
ret
jmp
outsb
ret
or
sbb
mov
lahf
cld
xchg
cmpl
or
or
scas
sbb
cwtl
insl
inc
imul
dec
imul
stc
lea
push
in
sbb
es
adc
add
in
cli
push
incb
imul
and
rcll
mov
ss
testb
mov
stos
dec
jno
xchg
xor
adc
xor
sub
std
xchg
adc
movsb
imul
push
ljmp
int3
imul
daa
mov
sarb
cmp
or
mov
loope
jg
fsub
loope
aad
loopne
test
hlt
lret
sub
call
cmp
sbb
add
clc
xchg
pop
sbb
lret
int3
push
test
push
or
iret
cmp
xor
jl
rol
push
aam
fcomps
push
das
cltd
jle
cmpb
mov
cmc
insb
repz
insl
std
int3
shrl
mov
and
or
ret
loop
out
pop
or
inc
pop
mov
add
mov
cmp
and
sub
loopne
int3
inc
notl
jno
mov
cmc
xchg
add
rcll
inc
sub
enterw
add
fisubrl
aad
icebp
int3
bound
imul
aad
sub
sub
out
xor
imul
xor
outsl
push
div
subb
jge
sub
test
xor
push
or
repz
and
mov
pop
imul
mul
test
or
aam
lock
arpl
xor
dec
dec
push
rcl
rcrb
jmp
lods
jb
enter
frstor
sbb
pop
push
xor
mov
jno
and
das
or
aam
ljmp
pop
jmp
xchg
push
adc
xchg
jae
xchg
mov
xor
aad
and
xchg
shr
mov
xchg
sbb
inc
loope
mov
ret
lock
sub
stos
cmp
loope
mov
outsl
mov
test
inc
pop
adc
lret
fs
mov
jne
mov
cmpxchg
sahf
shr
punpcklbw
mov
jns
cwtl
dec
movsb
arpl
xchg
lret
sahf
jp
dec
cmp
sbb
hlt
sub
and
sbbl
cltd
in
loopne
dec
stos
repnz
sub
fwait
and
test
jp
pop
lods
mov
sbb
dec
push
aad
mov
pop
cltd
sbb
test
inc
mov
imul
jmp
jnp
pushf
mov
jmp
jle
mov
outsl
out
jmp
mov
mov
cmp
dec
mov
push
inc
cmp
lods
push
add
xor
call
notb
in
pop
js
mov
push
popf
fsubrl
or
imul
dec
add
stos
push
and
mov
or
dec
sbb
gs
sub
xchg
push
mov
and
lds
push
arpl
popa
push
jbe
out
in
and
cld
dec
cmp
ret
jp
test
call
sbbb
ljmp
enter
sub
xchg
ret
mov
jecxz
js
push
decl
mov
testl
sub
int
jp
mov
aam
cmp
loope
mov
sub
push
mov
adc
or
jmp
lds
cmpsb
mov
loope
bound
push
int3
xchg
inc
and
inc
test
mov
leave
fwait
push
push
andl
cmp
test
dec
mov
mov
test
pop
les
movsb
pop
xchg
ds
enter
push
mov
cwtl
loopne
cwtl
insb
jae
push
or
iret
pop
cs
sub
or
mov
and
aas
test
fs
hlt
sahf
pusha
xchg
test
loopne
icebp
xchg
pop
and
pop
pushf
fisttps
jmp
stos
lock
ds
or
dec
mov
inc
rcll
punpcklwd
enter
jg
int
adc
dec
jae
sub
mov
push
add
leave
jno
es
xchg
popa
pop
sub
sbb
fmuls
sbb
insb
ss
outsl
xchg
cmc
or
jle
ret
cmp
add
or
scas
in
jmp
push
mov
loop
dec
test
ss
pop
sub
mov
sahf
mull
or
push
pop
mov
daa
into
loop
shlb
adc
sahf
in
push
jp
dec
cmp
and
pop
test
les
or
lahf
cmpsl
inc
add
dec
ljmp
mov
xchg
fsubl
pop
push
xor
jnp
xlat
data16
fnstcw
ja
std
imul
rolb
out
test
andl
pusha
aaa
lock
and
jmp
pop
or
pop
popf
mov
jmp
scas
fsubp
cli
lret
xchg
pop
in
nop
out
xchg
fdivs
pop
mov
ljmp
das
adc
int3
cmp
gs
xor
fldenv
fisttps
pushf
lock
pop
test
dec
pop
popf
lock
cmpb
lods
pop
push
sbb
inc
les
cwtl
testb
or
xchg
jne
add
adc
loopne
xor
mov
popa
js
pop
and
out
sub
loop
pop
xor
inc
push
dec
add
sbb
sub
insl
push
dec
in
nop
or
sbb
iret
out
rorb
mov
push
pop
jle
adc
insb
push
jecxz
out
inc
push
xor
test
fs
imul
push
xchg
jae
movsl
push
addl
fstl
xor
cs
daa
les
dec
adc
xchg
setbe
pushf
jno
dec
aam
adc
mov
push
or
cld
pop
mov
popa
jl
mov
pushf
adc
adc
stos
loope
sub
or
push
mov
pop
lcall
aam
cmp
rolb
mov
push
ss
out
pop
mov
xchg
orl
jo
mov
sti
xchg
mov
mov
ja
xchg
jmp
sbb
imul
dec
inc
and
lea
popf
xchg
test
dec
or
test
xor
cmp
or
cwtl
imul
andl
hlt
push
mov
cmp
fildl
push
add
rclb
lret
mov
data16
test
sub
das
mov
std
push
cmp
inc
stc
gs
lahf
xlat
iret
jns
mov
adc
push
lods
enter
sbb
std
adc
push
sahf
inc
add
mov
aad
jno
and
push
adc
lods
in
mov
lods
repz
mov
in
mov
imul
scas
lret
pop
aas
xchg
add
add
add
jbe
mov
sub
inc
pop
lods
mov
xor
pop
scas
cltd
cwtl
enter
into
jb
arpl
lahf
adc
adc
test
jbe
push
cmovae
push
loop
scas
mov
or
es
push
sbb
imul
xor
fmul
fs
sbb
imul
fucomp
ficomps
mov
outsl
hlt
shlb
jmp
jb
ret
and
mov
subb
mov
fsubp
mov
jle
je
sahf
test
or
cmp
mov
je
into
sahf
icebp
inc
mov
cmp
mov
xchg
mov
xchg
jnp
xchg
aam
mov
test
and
pop
xchg
mov
pushf
shrb
je
sbb
test
push
cmp
mov
sub
add
dec
enter
xchg
and
negb
gs
sub
add
aam
jbe
lods
movsl
mov
rorb
sub
ucomiss
fldenv
lret
mov
fcompl
push
int
ret
enterw
dec
lret
xlat
das
loope
jp
inc
sar
pop
xchg
imul
scas
leave
cli
je
fcmovne
mov
popa
inc
icebp
add
fcompl
int
pop
xchg
ja
fisttpl
jbe
icebp
enter
arpl
add
sub
ds
cmp
repz
popf
bound
rolb
or
and
rorb
sbb
pop
nop
cld
scas
adc
jg
gs
sub
sbb
push
xchg
or
imul
cld
push
lcall
cmp
mov
mov
mov
add
pushf
movb
jg
adc
add
popf
fildl
std
mov
nop
jle
xor
das
test
and
popf
mov
imul
mov
lret
orl
fildl
je
pusha
lret
dec
mov
sub
add
stos
shlb
push
shll
push
inc
xchg
or
push
aad
in
repz
dec
sbb
sub
and
pop
popa
cmp
dec
and
fisubl
lock
lcall
adc
dec
sbb
mov
push
mov
pop
aaa
mov
aas
jl
scas
jp
lods
inc
jmp
push
pop
xor
inc
pop
stos
xchg
xchg
movl
sub
dec
int3
js
lret
jae
xchg
sub
inc
sbb
push
insb
sbb
pop
or
repz
stc
stos
std
jle
test
popf
pop
jnp
pop
xor
pop
mov
std
push
dec
repz
sbb
jmp
and
cmp
shl
mov
sbb
mov
das
mov
or
sub
outsb
imulb
cmpsb
adc
aad
rcll
lea
imul
pop
notl
cmpsl
pop
mov
push
xchg
int3
and
adcb
fisttps
mov
fisubrs
jbe
jnp
inc
sbb
jbe
dec
inc
jb
jmp
incl
lds
iret
cmp
sub
in
pop
fisubs
push
fdivl
out
lds
mov
sub
insb
xor
lret
imulb
push
stos
out
pusha
clc
xchg
mov
jb
popf
cmp
es
push
and
xchg
aas
fwait
push
out
dec
push
cli
call
push
adc
sub
pop
add
test
int
push
pop
and
mov
icebp
cwtl
pop
or
dec
mov
push
movsb
mov
orb
or
cmp
push
fldt
cmp
outsb
mov
lret
aam
test
fiadds
jbe
jae
jge
negl
js
int3
push
pop
inc
shrb
mov
pop
add
jae
nop
xchg
rorb
into
mov
cmp
leave
test
sub
sub
push
cld
adc
cmp
xor
mov
test
je
cs
cli
cmp
in
jmp
scas
dec
push
shll
outsl
mov
mov
stos
ret
xchg
rorb
lea
and
add
jge
cld
inc
mov
int
pop
push
inc
frstor
and
adc
mov
in
vpaddsb
repz
iret
xor
ja
sti
aas
cmp
in
daa
movsb
xchg
xor
dec
fmull
dec
sahf
push
aas
adc
cmp
cmp
add
sbb
xchg
xor
jns
loop
ror
jmp
dec
xchg
les
fldcw
xchg
leave
loopne
iret
dec
aaa
dec
or
pop
bnd
pop
adc
sbb
pusha
cmpsb
jp
loop
fidivl
adc
jo
leave
fidivrl
cmp
mov
add
shlb
dec
pop
call
mov
enter
xchg
adc
cmpsb
push
popa
fdivrl
jge
lods
imul
loop
inc
push
and
xor
cmp
xor
push
out
dec
and
aas
or
imul
out
dec
jo
les
orb
lahf
xor
das
xchg
pop
cmp
stc
xlat
jle
push
clc
xchg
in
sub
xchg
mov
xchg
data16
popa
in
inc
out
cmpsl
xor
sbb
or
jnp
mov
lcall
xchg
sub
out
imul
sbb
in
xchg
stc
fwait
dec
lock
pop
addb
pop
jle
fcoms
push
push
inc
mov
mov
jb
mov
push
sbb
out
cmpsl
xchg
or
and
shll
flds
dec
jo
adc
sub
push
inc
cmp
fsubp
cmp
roll
dec
mov
xchg
sub
sahf
filds
fs
push
in
ss
cmp
fisubs
test
xchg
and
je
leave
mov
rorl
push
stos
out
ljmp
ret
js
lahf
inc
jecxz
push
cmp
popa
dec
xor
xor
push
mov
popa
mov
inc
fimull
mov
jns
loopne
loop
push
push
mov
xlat
addr16
or
addr16
push
imul
jne
mov
test
jae
push
dec
pop
scas
add
fsubp
sub
and
ds
jae
push
ss
xlat
or
lods
fs
stc
sbb
out
mov
jae
inc
or
jl
movsl
jns
xchg
stos
ss
stc
leave
xor
sti
add
clc
mov
loop
jns
in
ret
push
mov
mov
push
aas
mov
imul
pop
or
and
leave
jne
or
or
mov
or
pop
pop
shll
call
jne
cld
and
cmp
roll
pop
sti
les
into
jbe
sbb
lock
adc
push
arpl
mov
mov
or
repz
fldl
xchg
adc
iret
jle
movsb
dec
cmp
jg
mov
repz
xchg
push
pop
mov
or
jmp
sbb
push
xchg
dec
mov
ret
mov
out
loop
movsb
xchg
sbb
sub
testl
sbb
lds
xchg
jbe
adc
cmpsb
clc
out
pop
ret
add
mov
js
jo
rcrb
pop
mov
add
insb
in
xchg
into
sub
lods
mov
andb
jp
cli
out
pop
push
sub
push
push
sub
mov
push
mov
cmp
lcall
dec
pop
repnz
adc
jns
popa
xor
inc
xlat
pop
mov
je
lods
add
mov
sub
js
xchg
dec
clc
cmc
insb
std
in
cltd
sti
adc
push
out
xchg
lahf
loopne
jmp
or
push
dec
ret
aas
xor
fbstp
leave
sbb
mov
stos
lret
xlat
add
adc
jbe
fnsave
pushf
cli
test
add
in
push
mov
jle
ret
mov
insl
ja
pop
mov
fisttpl
jecxz
or
mov
jle
add
mov
push
push
lahf
imul
pop
or
and
lods
pop
and
fsubs
push
pop
leave
lcall
lcall
sub
adc
repz
ja
mov
mov
out
std
pop
sub
ljmp
test
shlb
fwait
mov
jnp
dec
test
jmp
icebp
arpl
imul
push
xchg
rol
loope
add
ret
cmp
js
sub
fcoms
cmp
adc
imul
fimull
imul
mov
jl
xor
insb
mov
scas
movsl
ljmp
mov
jmp
dec
ficompl
dec
and
xchg
loope
das
sahf
fwait
and
out
inc
mov
cwtl
stos
cmp
out
sub
test
das
outsl
lret
mov
lods
ret
out
cltd
xchg
xlat
mov
cmpb
cmp
out
insl
cwtl
push
fsubp
cmp
clc
insb
addr16
mov
inc
dec
ficompl
sbbl
push
and
cmp
add
push
pushl
pop
aad
jo
outsl
adc
jbe
dec
das
out
push
enter
add
out
arpl
sbb
lods
pusha
bound
inc
xor
push
mov
daa
ret
imul
cmp
movsb
sbb
out
and
xor
pop
pop
push
mov
jb
xchg
cmp
mov
xchg
cmp
daa
ljmp
pandn
dec
mov
js
push
push
cltd
imul
popl
repz
mov
stc
add
xor
jp
push
outsb
cwtl
faddl
scas
pushf
inc
xchg
or
in
xorl
or
arpl
push
aam
in
push
popa
sub
pushf
and
mov
es
loopne
pushf
mov
test
push
inc
mov
gs
clc
adc
mul
test
imul
sub
add
fs
outsb
mov
xchg
dec
cmp
mov
sahf
adc
add
gs
add
jbe
cltd
insb
pop
out
push
bound
iret
loopne
mov
aam
sub
push
lahf
cltd
jl
or
push
sbbb
fucomip
mov
fnstcw
lea
popf
xchg
sbb
into
push
lret
insl
push
movsl
sti
push
mov
orl
xor
dec
scas
push
pop
mov
dec
lods
shr
xchg
adc
xchg
mov
int3
lahf
or
cmpsl
pop
sbb
xor
xchg
push
sub
call
adc
ja
out
inc
jmp
inc
mov
or
das
pop
stos
leave
push
push
test
lods
into
fnsave
stc
pop
add
adc
divl
xchg
pop
in
sub
int3
mov
jae
aam
dec
xlat
loopne
or
insl
dec
push
and
mov
sti
imul
xchg
mov
or
xchg
sbb
mov
lret
add
xchg
pop
popf
int3
xchg
imul
mov
cmp
xlat
pop
add
pop
mov
imulb
aam
jno
push
xchg
stos
dec
cmp
mov
push
sub
popa
je
or
jno
cmp
fisttpll
call
inc
and
xor
sbb
movsl
fisttps
das
movsl
cmp
data16
lock
cmp
cmp
outsl
call
test
push
jbe
popf
repz
in
aad
mov
push
in
bound
outsl
inc
and
aad
hlt
test
addb
push
inc
add
ss
cmp
xchg
sahf
sbb
or
or
dec
movsl
mov
cltd
mov
cmp
fsub
adc
rolb
out
dec
sbb
jmp
fidivl
mov
and
lds
xchg
fsub
push
cmp
sbb
sbb
iret
push
sub
jo
stos
std
pop
fisubl
cltd
cmp
add
movl
inc
mov
mov
and
mov
pop
scas
ss
jb
xor
add
pusha
iret
jno
add
push
mov
and
add
adc
or
cmp
orl
cmp
sti
pop
dec
cmpsb
mov
pop
and
in
pop
cmp
jnp
sbb
sbb
or
shll
and
pop
stc
cmp
je
repnz
fiaddl
bnd
or
rorl
cmpsb
arpl
in
lret
leave
mov
push
filds
and
and
or
pop
or
push
dec
cld
addr16
dec
cmp
mov
movsl
adc
jnp
mov
sahf
adc
test
xchg
cmp
roll
out
ljmp
jg
call
mov
in
cmp
mov
push
mov
daa
adc
fs
inc
sub
add
out
push
popa
cmp
mov
mov
fistps
cmp
add
mov
xor
call
mov
pusha
pop
bound
bound
fsubrs
sbb
leave
cmc
ja
lea
xor
xchg
jmp
sbb
in
push
ret
shll
sbb
adc
aam
add
pop
out
cld
mov
mov
outsl
shll
movsl
pop
mov
dec
mov
ja
fbstp
repz
push
ljmp
cld
xchg
push
or
dec
pushf
es
rorl
mull
repnz
test
in
and
inc
mov
imul
outsb
push
repnz
mov
mov
or
sarl
sub
mov
fs
mov
xchg
js
ljmp
mov
mov
mov
inc
dec
jo
xchg
les
xchg
jns
xchg
mov
outsl
je
test
xchg
stc
movsl
mov
cmp
fldenv
jae
ljmp
jb
sbb
jg
cmp
cltd
sbb
lahf
cmc
sbb
addb
hlt
pushf
int
jns
lock
adc
leave
jae
xchg
dec
mov
and
sub
movsl
mov
ss
and
adcb
pushf
dec
out
mov
test
lock
xchg
cmp
cmpb
mov
fs
pop
mov
out
xlat
sbb
lods
sbb
add
dec
call
fidivrs
shrl
adc
xlat
mov
add
mulb
xchg
xchg
dec
mov
sub
dec
repz
sbb
in
xchg
mov
xchg
sbb
inc
imul
jae
fs
jb
clc
sbb
push
adc
add
addl
add
mov
or
jb
aaa
pushl
and
xor
inc
dec
cwtl
inc
cmovl
das
aad
xor
mov
out
je
mov
dec
push
in
std
push
fidivrl
das
mov
mov
movsl
and
imul
push
jg
subb
add
mov
ja
mov
dec
mov
push
and
lods
and
popf
outsl
mov
movsl
dec
mov
nop
scas
pushf
out
mov
jns
bound
into
movsb
mov
cli
cs
repz
and
outsb
aaa
arpl
mov
mov
sahf
push
into
ss
add
lock
inc
xchg
mov
cmp
mov
rcrb
or
add
test
dec
es
jo
cli
js
loopne
fs
push
popa
mov
inc
xchg
mov
or
xchg
ret
stos
sahf
shr
int
add
divl
mov
les
outsl
idivb
adc
in
sbb
popa
fcmovbe
lret
pop
lea
repz
jne
mov
sbb
sti
inc
adc
int3
sbb
add
rorl
imul
iret
mov
cmp
lods
insb
pop
adc
fiadds
loop
lods
mov
jb
xor
pusha
lahf
xor
adc
push
jns
cmp
jmp
push
idivl
mov
jp
aas
jmp
inc
js
mov
sbb
fmulp
and
pop
push
sub
sbb
cmp
hlt
xlat
dec
lds
sahf
out
dec
out
or
xchg
sbb
adc
push
fbld
mov
pop
jbe
std
mov
movl
shll
xchg
cmp
push
rcll
and
aam
push
movsb
or
inc
adc
push
in
je
subl
fimuls
and
fiaddl
aam
int3
xchg
das
pop
bound
cmc
jp
push
insb
mov
ds
jno
jno
fneni(8087
mov
jo
dec
dec
bound
sbb
repz
mov
xchg
cmp
sbb
repnz
xor
mov
xor
rolw
jns
or
xor
bound
daa
fwait
orb
jg
insl
dec
out
lahf
pop
mov
cmpsl
aaa
pop
mov
cmpsb
dec
addl
mov
pop
std
sub
sbbl
pop
xchg
xchg
imul
shl
sbb
std
sbb
inc
je
sub
idivl
mov
sub
ret
sbb
shlb
out
pop
pop
add
into
cmp
or
faddp
adc
gs
in
xchg
in
push
sub
xor
into
cli
pop
jo
or
std
xchg
cltd
cmp
cmpl
mov
sub
push
mov
sbb
fcomps
mov
popf
jae
mov
in
dec
add
xchg
pop
ljmp
dec
lret
mov
sub
lcall
pop
bound
mov
inc
popa
add
mov
sub
mov
lret
push
or
mov
sbb
mov
pop
clc
cli
sbb
sahf
add
je
dec
jnp
cmp
out
stos
test
jle
insb
or
js
xchg
mov
cmovns
div
add
fisubrs
mov
xchg
jp
in
decl
out
adc
or
mov
es
lcall
cld
sub
mov
sub
add
xchg
push
inc
cmpsb
movsl
ret
mov
sbb
pusha
test
adc
test
xchg
sub
inc
aas
scas
xchg
shlb
jp
int3
mov
push
push
mov
jno
out
repnz
fidivl
cs
inc
push
pop
xrelease
xor
mov
or
repnz
adc
lahf
lods
cli
push
repnz
push
rclb
pop
sbb
fs
sbb
dec
mov
popf
add
shll
fcomps
jp
adc
sub
mov
jl
mov
hlt
adc
mov
lahf
adc
call
mov
gs
mov
mov
ret
dec
pop
test
scas
sbb
imul
and
lcall
dec
push
cltd
shll
into
jo
push
movsl
mov
push
xchg
add
lock
pop
hlt
pop
dec
stos
cli
adc
add
dec
and
imul
cli
mov
int
jecxz
in
xor
add
repz
mov
dec
popf
sub
lahf
mov
movsl
daa
test
sub
mov
lock
lods
push
out
inc
xchg
imul
push
xor
mov
jle
lret
scas
pop
jbe
xchg
add
mov
and
and
push
in
scas
and
cwtl
cmp
xchg
pop
adc
cs
rolb
fistpl
and
and
dec
xchg
sub
or
or
pop
push
push
sti
dec
cmp
mov
mov
shll
cmpsb
push
mov
fdivs
dec
jge
push
repnz
xchg
outsl
out
ret
out
adc
frstor
je
js
xchg
movb
adc
in
sbb
add
sub
sub
jmp
mov
dec
aam
leave
jb
sub
and
repnz
popf
pop
adc
test
mov
cltd
pop
cmp
daa
mov
lods
stos
test
add
sub
push
fwait
mov
xlat
test
and
push
repz
insb
loope
mov
nop
sbb
iret
mov
scas
loopne
mov
test
loop
lcall
mov
aas
cmp
dec
xor
aam
pop
inc
sub
cmpsb
push
cmpsl
xchg
mov
adc
add
cmc
movsl
in
add
sbb
lret
jbe
pmaddwd
sbb
jge
out
stos
cltd
adc
scas
xchg
xor
inc
vrsqrtss
mov
out
mov
mov
roll
pop
inc
loopne
sbb
jbe
mov
cmpsb
in
mov
in
jmp
int3
jp
movsb
mov
in
cmc
fsubs
xchg
lret
cmpsl
xor
cmpsl
daa
cld
fiadds
xchg
fs
insb
dec
mov
pop
scas
rol
addb
jno
ja
add
out
test
mov
mov
movsb
mov
pusha
mov
stc
xchg
xor
push
test
xchg
dec
fsubp
sbb
dec
ljmp
add
imul
rorl
movl
clc
dec
and
icebp
inc
xor
roll
push
mov
repnz
adc
int3
or
sti
xchg
and
jmp
fisubs
adc
mov
mov
push
loopne
jle
xchg
loope
mov
or
xor
test
or
cmp
lods
jne
push
jmp
jp
paddw
add
enter
ds
xchg
popa
loope
xchg
mov
jno
shr
sub
sub
adc
mov
fiaddl
mov
push
xchg
rol
jle
aad
inc
lret
int
dec
and
add
aaa
or
xchg
sahf
loop
pushf
faddp
cmpb
adc
icebp
and
dec
pop
nop
mov
push
lcall
mov
lcall
ja
cli
sahf
movsb
test
pusha
out
in
pop
aaa
cmc
cmp
stc
hlt
pop
in
sub
popa
mov
jo
xor
scas
mov
mov
push
jecxz
scas
xchg
orb
outsl
testl
icebp
xchg
sbb
adcb
sub
xchg
mov
lock
xor
js
or
es
lcall
jne
push
mov
dec
jbe
shll
inc
sbb
lods
jno
mov
xchg
in
mov
mov
rclb
imul
or
and
xor
dec
aam
jns
inc
xadd
inc
into
loope
cmp
cld
xor
scas
inc
jecxz
fnsave
mov
pusha
cmpsl
in
test
inc
in
jmp
pop
sub
push
push
rcll
xchg
lret
in
add
sarb
lods
mov
or
dec
sub
jmp
pop
push
shr
es
sar
test
fisubrl
pop
cs
sbb
or
nop
add
enter
sar
lcall
aad
and
sub
adc
lret
pop
push
push
and
mov
add
int
ja
adc
subb
es
loop
mov
inc
loop
psubd
out
nop
adc
mov
or
sarb
ljmp
cmp
or
ljmp
mov
dec
add
mov
in
adc
stc
jmp
add
data16
les
jno
and
int
test
mov
fadd
ds
adc
shr
lret
adcl
loopne
ret
dec
push
jbe
lds
rep
cwtl
cmp
shlb
in
xchg
jns
fiadds
cmpsb
jp
mov
cmc
jmp
roll
push
pop
leave
fbld
dec
add
addl
pop
pop
data16
mov
out
int3
and
dec
lds
sub
fmulp
mov
inc
jmp
sub
mov
ds
shrl
test
outsb
repnz
xor
lods
inc
and
outsl
cmp
dec
mov
stos
fcmovne
jae
cli
lods
scas
fs
popa
adcb
push
push
mov
stos
cli
daa
outsl
cmp
idivl
pop
sub
movsl
repz
and
sbb
push
cmc
nop
daa
sbb
pop
cmpsb
inc
in
mov
adc
pop
aaa
mov
jmp
xlat
ljmp
cmpsl
xchg
pop
sub
mov
fimull
outsl
mov
pop
add
or
mov
mov
inc
xchg
mov
rorb
jno
and
fnstsw
push
push
adc
cmpsb
cmp
push
cmp
sub
mov
shrb
jl
es
mov
push
jge
add
decb
shr
ds
pop
ret
mov
lea
cwtl
mov
lods
or
repnz
add
je
fldt
movb
sti
out
push
sbb
xchg
call
hlt
jl
test
pslld
imul
lret
mov
fisubrs
movzbl
xorb
xchg
or
aaa
arpl
sbb
hlt
leave
scas
jno
add
jmp
sarl
rcrl
test
xchg
mov
push
xor
insl
aam
xchg
out
das
sbb
adc
rep
jno
sbb
lods
push
lret
movb
in
clc
cmp
lret
cmp
sub
imul
jge
ja
int
add
iret
out
xchg
js
mov
ds
mov
sub
faddp
pop
push
dec
negl
push
movsl
lret
jo
push
data16
lods
cmpsb
and
je
pusha
cld
fsubl
jne
stc
enter
popa
sahf
mov
fistpl
add
les
fcmovb
insb
movsl
and
adc
mov
ret
orl
add
pop
xchg
lock
mov
movsl
xor
adc
sbb
rcrb
test
push
inc
jmp
mov
fwait
mov
sub
jnp
pop
mov
in
imul
loopne
cvtps2pi
xchg
faddp
incl
gs
mov
push
nop
push
pop
inc
push
jp
lods
add
and
sbb
push
and
mov
std
jp
xor
push
hlt
clc
dec
std
and
sbb
lea
dec
or
bound
dec
iret
outsb
stos
dec
xchg
jmp
mov
cmp
mov
ss
repz
scas
cmc
sub
in
aaa
mov
pop
dec
adc
and
mov
je
test
xchg
test
stos
fs
mov
push
clc
push
push
gs
jae
jp
add
adc
xchg
jge
movsl
lods
aam
push
dec
loopne
gs
pop
loopne
roll
add
fmull
sub
xor
inc
dec
call
xchg
mov
dec
inc
aad
stos
jnp
in
jnp
in
add
push
pop
mov
mov
shll
jns
dec
adc
fs
shrl
or
fucompp
jmp
inc
add
or
mov
and
inc
xor
std
jo
imul
not
lretw
repz
xor
mov
movsl
dec
xor
jg
xchg
sub
sbb
std
add
les
sbb
dec
aas
dec
mov
insb
add
pop
pop
ret
stos
iret
in
add
out
xchg
mov
inc
pushf
loope
stos
jecxz
idivb
sbb
inc
jo
fsubrs
sbb
cmpl
shlb
scas
add
push
mov
mov
push
xchg
popf
xchg
pop
cmp
imul
es
sarl
mov
addr16
jno
cmpsl
mov
movsl
xor
test
mov
push
jl
ljmp
and
jmp
roll
jbe
adc
inc
mov
jmp
mov
pop
jge
mov
jl
in
inc
mov
int3
sbb
jnp
sub
mov
enter
lock
scas
jmp
sbb
nop
rolb
cmp
icebp
dec
mov
les
icebp
std
mov
bound
fdivrl
ret
decl
decb
dec
in
mov
cmp
jbe
mov
cmpsb
jp
jnp
fld
aas
xor
sbb
cmp
pop
jbe
add
jmp
aad
insl
inc
pop
stos
push
mov
shll
fidivrl
std
xchg
mov
mov
xor
and
inc
pushf
enter
int3
jno
push
in
in
fsub
push
push
mov
xchg
mov
push
jle
jle
into
popf
and
bnd
and
sub
xor
pop
ret
mov
outsl
and
mov
mov
aam
in
iret
cmpb
lcall
stos
lret
or
icebp
mov
dec
test
movb
push
mov
daa
inc
xlat
sbb
xor
clc
mov
stc
jbe
test
or
xchg
in
movsb
jbe
rorl
adc
daa
xor
mov
sub
test
inc
repnz
sub
fadds
cbtw
imul
rolb
outsb
data16
inc
shll
pusha
imul
aad
xchg
stc
push
jge
mov
cmp
xor
fwait
in
inc
dec
pop
pslld
lahf
in
xor
test
movsl
or
movsl
je
dec
mov
mov
roll
pop
fiaddl
dec
mov
adc
hlt
out
stos
loop
mov
mov
jmp
fisubs
shlb
mov
jg
sub
or
mov
test
mov
adc
cmc
ja
jge
jp
inc
mov
mov
nop
inc
push
add
sbb
shlb
mov
popa
xchg
aas
lods
inc
lret
inc
sub
leave
dec
mov
fs
hlt
cld
dec
dec
mov
andb
mov
shll
sbb
adc
jo
stc
fiaddl
mov
dec
and
rcl
std
jno
xchg
or
cld
lret
cwtl
mov
inc
repz
push
in
and
add
jns
fldcw
mov
mov
jg
popf
sub
in
shl
test
dec
repz
sbb
pop
inc
sbb
lcall
inc
pusha
jp
pop
in
jle
cmp
decl
cmp
inc
or
lret
dec
pusha
or
addr16
lahf
inc
xchg
lods
adc
mov
ljmp
cltd
call
fisttpl
test
popa
and
loop
mov
fldl
movsb
sub
mov
dec
insl
or
xchg
lock
enter
add
or
xchg
jnp
push
push
mov
inc
mov
pop
nop
fisttps
lcall
sub
lcall
mov
scas
addl
sbb
mov
daa
scas
lds
icebp
into
add
hlt
sub
and
mov
push
imul
lret
stos
negb
dec
inc
call
mov
js
dec
push
mov
loop
nop
mov
push
cltd
shl
push
out
mov
fstl
dec
pop
aaa
push
mov
mov
dec
arpl
mov
pop
mov
mov
repnz
mov
xor
ss
add
repnz
xchg
movsl
dec
out
clc
and
insb
ja
enter
rcrl
fwait
xchg
mov
jmp
sub
inc
inc
mov
push
sbb
sub
es
xchg
mov
imul
enter
les
jno
aaa
jl
int3
pop
pop
add
pop
fwait
jge
std
mov
lock
je
xor
loopne
pushf
jne
mov
sbb
test
add
xlat
cmpsb
adc
lcall
lock
mov
sbb
sub
mov
insb
mov
add
or
and
mov
jbe
jb
jb
cmpsb
sbb
mov
mov
mov
cmp
int
ss
push
fwait
inc
xchg
push
sub
xchg
sbb
fcomps
addr16
inc
adc
adc
cmp
mov
sti
es
shlb
pop
lods
ljmp
cld
mov
repz
jecxz
pop
loop
cmp
ss
aas
sbb
jg
js
repnz
xor
or
add
mov
cmpsb
shl
ja
cltd
ret
fstpt
mov
aad
sbbb
test
shlb
dec
cwtl
lret
pop
push
lds
jp
push
imul
insl
test
lret
shl
ss
xor
fildll
xor
push
iret
negb
dec
in
pop
sarb
shl
mov
bound
addr16
sub
and
xchg
lods
cld
int3
ljmp
mov
scas
hlt
sub
iret
loopne
mov
cmp
mov
mov
xchg
call
jg
scas
test
mov
fdivrl
inc
dec
mov
sbb
sub
inc
sbb
scas
mov
lcall
les
push
daa
in
ja
das
sarl
or
mov
popf
in
and
dec
jb
fadds
movsl
pop
and
scas
add
xor
mov
push
xchg
xor
arpl
mov
test
and
out
dec
cltd
imul
ss
pop
movsl
push
fcomps
rcr
dec
out
or
call
cs
xchg
js
dec
std
adc
sub
je
xor
mov
cmp
mov
out
cmp
mov
mov
dec
aam
insl
loope
sub
sub
inc
jno
aaa
dec
mov
mov
outsl
mov
dec
and
repnz
test
jp
loopne
mov
jmp
push
mov
adc
and
adc
push
mov
push
dec
test
mov
out
dec
into
xor
es
out
mov
das
mov
xchg
xor
dec
xchg
pop
in
lret
iret
inc
test
lret
cs
stos
push
out
cld
sbb
add
pop
les
out
sbb
repnz
and
dec
stos
jne
lcall
mov
cltd
push
shll
push
mov
adc
add
dec
add
fisubl
push
jl
add
fisttpl
das
mov
mov
das
sub
jns
nop
sub
push
adc
out
mov
push
cmpsb
cmc
mov
aas
cmpsb
sub
dec
jg
mov
add
jmp
inc
mov
xchg
xor
sbb
sub
arpl
push
or
pop
call
data16
test
fdivrs
jb
movsl
ret
jns
push
pop
push
scas
movsl
pop
inc
lea
push
es
out
cmc
scas
ds
sti
mov
ja
sbb
push
sbb
push
addr16
push
pop
xor
out
mov
cmp
jmp
lock
jns
rorb
xlat
test
stc
in
or
rorb
lock
add
std
cmp
imul
in
loopne
cmp
cli
negb
cmpsb
push
xchg
cmc
in
sbb
daa
mov
idivl
xor
jecxz
mov
add
mov
loopne
enter
outsl
mov
jecxz
jno
lock
jns
jg
add
cmpb
in
sarl
mov
cmc
testl
out
adc
pop
hlt
mov
lahf
rcll
lds
xor
and
or
xchg
mov
mov
push
lret
test
push
pop
push
test
jne
pop
shr
dec
adc
and
fiadds
std
in
ret
repz
fcompl
sub
addl
inc
xchg
mov
jns
xor
fs
jl
addr16
add
sub
icebp
out
clc
fcmovbe
push
dec
adc
or
xor
push
push
and
addl
lcall
pushf
mov
mov
aam
sub
inc
aam
cmp
pop
lds
cmp
mov
inc
lods
sub
cmp
sbb
mov
push
aad
adc
push
xchg
adc
test
inc
pop
faddp
cmp
jb
pop
push
add
outsb
dec
jb
jns
or
cmp
xor
xchg
dec
xor
dec
mov
sub
jl
js
mov
std
aam
pushf
mov
into
or
mov
lds
xlat
jb
aam
pop
cld
and
lret
mov
add
scas
push
sub
dec
jmp
pushf
mov
out
sbb
test
push
xchg
cmp
sti
jo
test
push
call
arpl
jecxz
push
outsb
cmp
adc
push
fs
xor
rcll
paddd
shlb
aaa
jp
mov
cmpsl
push
in
push
daa
mov
addb
movsl
pop
cmp
mov
jge
jp
jle
lds
pusha
pop
test
mov
mov
ljmp
repnz
loop
jo
aas
testl
mov
xchg
pop
fistl
push
fsub
xchg
in
call
jp
in
inc
lods
or
bound
pop
pusha
sub
pushf
inc
fsubs
es
xor
sahf
adc
mov
jae
and
daa
or
idivl
push
inc
sbb
in
std
sub
xchg
repnz
cmpsl
xchg
push
int3
and
dec
gs
cwtl
adc
push
cmp
or
pop
lock
add
push
insl
ret
fs
xor
sbb
jo
push
jbe
pusha
ret
push
andb
mov
nop
aam
jb
inc
adc
adc
ja
fnsave
sbb
daa
loop
dec
test
js
pop
xor
adcb
and
mov
mov
jle
push
lods
cmp
fldcw
hlt
fisubrl
mov
sub
mov
stc
adc
jp
inc
inc
aad
mov
dec
jnp
testl
enter
inc
jp
aam
mov
cmp
mov
imul
jb
dec
adc
add
jnp
call
push
xor
in
data16
xor
leave
in
cmp
nop
shr
and
mov
jp
outsl
sahf
jmp
push
mov
cmovbe
stos
sbb
shll
in
sarl
out
jp
idivb
jne
xchg
jno
adc
push
bound
xor
cli
jle
aad
fnstcw
jmp
mov
pop
jmp
jge
aaa
jmp
fidivrs
dec
adc
xchg
popa
mov
xor
adc
cltd
sub
jne
mov
or
subl
dec
jb
movl
fcmovnb
lods
out
andl
bound
insb
shrl
cmp
push
adc
mov
popa
jbe
mov
enter
xchg
gs
repnz
mov
notl
sub
out
adc
in
je
xor
lretw
xchg
imul
xchg
insl
cld
pusha
mov
stc
test
mov
mov
cmp
popa
pop
sub
addb
js
push
jmp
js
or
test
cmp
xor
pop
dec
cs
sub
movsb
xchg
nop
push
inc
push
addr16
pop
fisttpll
inc
in
lahf
insb
nop
ret
andl
leave
xchg
add
sbb
cmp
adc
mov
sub
adc
mov
sub
sbb
inc
and
pop
mov
stos
xchg
pop
call
lcall
xchg
ret
int
or
shlb
jmp
pop
call
inc
push
or
mov
add
mov
add
pushf
outsl
bound
test
pop
sub
push
sar
lods
xor
clc
test
pop
mov
or
ret
inc
mov
gs
inc
mov
cmpsb
lods
cli
xchg
xlat
rcrb
mov
mov
subl
hlt
sbbb
push
stos
fdivs
shl
jmp
sub
jbe
mov
rolb
dec
inc
xchg
cmp
insb
inc
or
outsl
cmpsb
out
sbb
scas
mov
test
sub
sbb
mov
aaa
push
std
pop
or
sub
add
adc
mov
jmp
aad
rcrb
xor
xchg
inc
dec
in
or
stos
lock
sub
loope
ss
out
and
ret
mov
insb
add
nop
cwtl
addl
push
mov
dec
cmpsl
push
inc
cmpsl
xchg
inc
xchg
les
jecxz
test
push
cltd
pop
and
loopne
pop
arpl
outsb
adc
push
mov
add
xchg
add
push
add
ss
or
rorl
mov
outsl
shl
push
mov
fwait
dec
int
inc
dec
outsl
mov
push
or
stc
dec
and
notb
mov
mov
iret
test
dec
push
xchg
cltd
in
inc
ds
jp
sub
test
pop
out
jnp
icebp
xchg
sub
call
decb
mov
cld
fwait
jns
vmwrite
jecxz
shlb
or
inc
dec
mov
mov
stc
dec
ret
arpl
iret
cmpsb
cmc
jg
add
in
add
mov
xchg
jne
data16
xchg
insl
pushf
loopne
inc
pusha
push
xchg
loop
addr16
aas
div
push
xchg
push
ret
xchg
push
mov
mov
pop
pop
xchg
in
repz
push
repz
sub
imul
sub
jo
dec
movsl
fdivr
std
dec
sub
jmp
inc
ficoml
dec
ds
sbb
cld
pushf
or
adc
sub
sbb
jne
scas
pop
dec
xor
out
sub
fdivl
mov
push
mov
insl
movsl
aam
pop
stos
pop
cltd
mov
mov
in
lods
sub
mov
adcb
mov
jbe
int3
shrb
pop
and
cmp
pop
std
or
pop
insb
addb
popf
sbb
adc
sub
mov
mov
fisttps
cltd
bound
xchg
jbe
sub
fisubrs
lds
test
mov
cli
add
imul
xchg
cmp
xchg
dec
ja
adc
es
dec
fistps
das
and
ror
mov
dec
jb
pop
sbb
shrb
cltd
and
or
movsb
and
and
inc
mov
or
loope
out
lar
sbb
sub
sub
fs
push
shlb
insb
and
push
adc
nop
xchg
fwait
cmp
jecxz
xor
call
nop
addr16
push
dec
lret
adc
clc
mov
jl
sub
hlt
ficoml
popf
add
xchg
test
xchg
aaa
sbb
mov
pop
test
rorb
aaa
lret
xor
cld
les
mov
fwait
and
and
dec
roll
stos
loop
ret
lret
push
imul
and
jb
leave
jbe
mov
sub
pusha
lret
dec
mov
jns
jbe
icebp
or
in
cmp
push
and
cwtl
and
jbe
or
addps
pop
flds
imul
arpl
xchg
shrb
loope
cmpsb
add
xor
mov
int
pop
scas
mov
jns
inc
pushf
repnz
xlat
nop
repnz
into
in
xchg
insb
add
inc
jb
mov
and
insb
insb
inc
mov
mov
loopne
fdivrl
fsubs
add
xchg
dec
scas
pop
enter
ror
pop
mov
fimull
cmpsl
pop
repnz
test
setne
ret
add
iret
mov
call
jmp
test
cltd
enter
enter
dec
fistpl
mov
hlt
mov
fmuls
xchg
inc
stos
pop
mov
pop
dec
ja
xlat
cmp
xchg
les
or
inc
es
and
je
sbb
and
dec
rcr
dec
outsl
xchg
repz
lods
pop
push
push
adc
loop
jmp
mov
loopne
dec
inc
jp,pn
xor
add
sahf
cmp
shlb
mov
cmp
sbb
jns
stc
fsubrl
cmp
outsl
cmp
mov
sbb
jnp
nop
dec
insl
sbb
in
pop
mov
pop
out
mov
int
xchg
and
arpl
jp,pt
fiadds
mov
cmp
push
mov
daa
repnz
rcll
cmpsb
loopne
clc
movb
test
cmpsb
aad
call
pop
aam
or
mov
cmp
cli
cltd
inc
scas
push
mov
into
pop
jmp
sbb
jl
jne
lret
mov
cs
aam
clc
fucomp
jecxz
mov
repz
unpckhps
adc
xor
dec
mov
sbb
and
xchg
daa
movsb
mov
inc
jo
dec
ret
xchg
fimull
sbb
enter
jge
dec
movsb
sbb
xor
outsb
imul
pop
sysret
sub
sub
in
das
std
imulb
popl
mov
test
outsl
sbb
adc
or
adc
adc
cmp
cmp
out
sbb
push
sbb
xchg
adc
push
test
movb
jmp
sbb
imull
je
mov
lcall
dec
ffreep
test
xchg
sbb
lods
push
or
sub
add
jmp
add
repz
mov
mov
out
cmp
sub
mov
or
push
jmp
out
out
and
xor
lods
das
and
aad
cltd
push
xor
js
jb
daa
xchg
enter
dec
mov
jb
lret
mov
jnp
orb
mov
xchg
imul
mov
or
sti
xor
dec
and
repnz
stos
pop
lea
in
mov
mov
aaa
jo
out
mov
in
push
jne
inc
popa
sub
inc
fcompp
adc
out
jns
xchg
adc
fists
xor
cmp
into
mov
das
pop
mov
lahf
divl
gs
stc
push
mov
lods
xchg
lock
push
push
ret
out
jno
fidivl
clc
adc
inc
std
fistpl
out
xchg
mov
jmp
push
xchg
cmc
iret
cmc
xlat
outsb
roll
push
mov
fwait
xchg
out
cmp
into
mov
stos
xor
inc
cwtl
cmpsb
js
lds
mov
aad
xor
nop
push
inc
add
imul
jne
arpl
stos
das
mov
and
and
insb
pop
jl
ret
mov
inc
xor
bnd
jne
fwait
jmp
add
cli
cmpsb
push
lret
or
popa
je
jo
popf
pop
add
xchg
fcmovne
iret
loope
ret
mov
lcall
jae
mov
pop
mov
repnz
mov
xor
inc
out
pop
stos
lock
outsl
or
imull
subl
sbbl
mov
rcrb
pop
lahf
das
mov
int
lret
ret
push
icebp
sub
out
sti
pop
leave
or
mov
xorb
jbe
push
pop
push
in
xor
push
jp
test
call
push
inc
mov
sbb
mov
js
je
imul
mov
mov
mov
push
mov
push
fwait
cltd
sub
xchg
andb
push
push
mov
scas
jp,pt
push
lret
cmpsb
test
out
les
fldcw
fildll
fwait
cmp
stos
ja
sbb
pop
jl
sahf
push
insl
push
arpl
repz
in
fwait
cmp
pop
push
out
inc
and
popf
lahf
ret
out
inc
jmp
js
add
push
ret
ljmp
push
into
cmp
xchg
mov
pop
mov
push
mov
pop
add
ljmp
add
mov
push
into
mov
jo
ljmp
xor
fldcw
les
mov
mull
mov
mov
rcrl
or
add
jne
jge
pop
push
outsb
popl
lods
iret
adc
arpl
cld
xor
imul
aas
and
out
les
and
stos
mov
mov
mov
xchg
mov
jne
test
and
sti
hlt
lret
ret
sub
sahf
je
add
stos
add
in
or
mov
add
test
popa
loopne
lret
xor
ret
mov
test
sub
test
mov
mov
fidivl
dec
cmp
mov
push
mov
hlt
mov
das
mov
lock
jbe
loop
cmp
ret
std
mov
out
mov
dec
repnz
and
add
cmpsl
iret
fistpl
cmc
rclb
lock
stos
fildl
fs
test
sub
or
jmp
inc
fs
cmovnp
mov
cmp
and
int
xchg
ror
clc
mov
cmp
inc
sbb
and
mov
rolb
ja
push
imul
popf
fisubl
mov
dec
adc
scas
fnstcw
ja
lahf
push
pop
pop
imul
jo
cmp
sub
int
lods
icebp
mov
sbbb
mov
arpl
stos
inc
jp
cmp
stos
cli
sub
push
rclb
push
adc
movsl
xchg
imul
or
mov
rcll
jnp
stos
pop
arpl
jbe
inc
seto
rcr
dec
daa
jb
inc
mov
jl
mov
cmp
jle
inc
cmp
sbb
test
mov
add
mov
mov
mov
cli
out
in
test
or
push
cwtl
mov
aas
mov
lcall
scas
out
mov
aam
push
or
sub
mov
xchg
shrl
xchg
out
xchg
xor
out
inc
cmp
xchg
rcrb
cs
sahf
movsl
or
pop
xchg
ret
jmp
pop
push
aas
rolb
out
iret
hlt
xchg
adc
inc
addr16
mov
or
fisubl
adc
cld
and
lods
hlt
addr16
xchg
shl
sbb
rorb
or
sub
outsl
mov
shr
jo
negl
mov
mov
in
sub
test
lahf
add
mov
test
pop
into
cmp
cwtl
xchg
cmpsl
pop
movsl
cmp
scas
stos
inc
or
jnp
mov
loope
add
jmp
in
inc
push
and
jle
in
cwtl
aad
xorb
jg
adcl
mov
fcoms
push
fbld
dec
add
xchg
xchg
out
cmp
scas
sbb
scas
mov
int3
inc
pop
or
sub
dec
lds
popf
imul
sbb
cmp
dec
divl
adcb
pop
test
call
xor
xor
xlat
stc
js
xchg
loope
gs
push
sbb
ja
sub
pop
popa
add
ficoml
lret
lret
cld
pop
and
mov
mov
sub
stc
dec
push
loopne
call
nop
ficompl
lods
push
and
out
lret
xlat
xchg
fildll
test
push
sub
sub
add
or
fstp
inc
aad
jmp
lods
inc
sarl
xchg
mov
mov
lcall
cmp
jecxz
jp
push
cs
arpl
xchg
push
lock
pop
test
and
test
hlt
lods
sbb
pop
cli
ret
sub
out
inc
cmp
aam
lds
cld
sbbl
lret
js
cmp
mov
dec
pop
loope
iret
out
dec
sbb
dec
push
cwtl
push
fwait
lods
mov
scas
movsl
cmp
mov
subb
push
out
adc
push
ret
xor
pushf
inc
cmp
cli
xchg
out
dec
add
xor
scas
jmp
jmp
push
rcl
out
lahf
negl
xchg
mov
add
test
push
or
shrb
insl
sub
pushf
ss
push
inc
ret
jb
fwait
dec
lods
push
push
add
rcr
cmc
lds
inc
lcall
xorb
dec
mov
cmpsb
jbe
cmp
add
pop
scas
ds
jl
jg
rorl
fistps
loope
pavgw
xor
aad
xchg
mov
dec
pop
sar
mov
lret
pop
push
outsl
pop
push
lods
inc
mov
xorl
add
mov
orb
dec
mov
adc
jae
xor
jmp
fwait
lea
fistpll
test
dec
fwait
push
imul
inc
sbb
shll
inc
mov
stc
push
js
mov
or
test
ds
outsl
mov
std
and
fnop
sbb
test
cwtl
and
loopne
insb
out
push
out
dec
rcr
rcr
pop
mov
ljmp
cmp
xchg
jl
rorl
sbb
jns
push
xchg
stos
sub
fildll
fcmovnu
push
dec
aad
lods
call
pop
adcl
outsb
inc
aad
xor
inc
add
push
mov
xchg
or
pop
mov
jmp
inc
inc
out
sub
popa
outsl
cli
daa
jecxz
repnz
adc
pop
aad
inc
inc
loope
jmp
sbb
test
enter
or
aaa
pop
cmp
inc
push
imull
unpcklps
push
xchg
add
repnz
lret
or
adc
push
into
jno
aaa
fcos
mov
in
ja
shll
jle
mov
lret
or
ret
cld
mov
sub
rorl
dec
or
or
in
repz
mov
insb
mov
into
xorb
jge
adcl
and
ljmp
pop
sub
add
ds
insl
int
jmp
aas
fsubr
dec
arpl
notl
cwtl
mov
push
scas
dec
dec
out
pop
jge
lret
les
inc
mov
push
mov
cmc
mov
insl
sub
int3
lahf
lahf
cmp
test
mov
mov
push
scas
add
repnz
mull
add
push
add
xor
fs
jle
imul
repnz
iret
jae
mov
jb
in
dec
push
sub
cwtl
rolb
xor
xorb
jno
sub
cmp
mov
shr
scas
cmp
data16
cmp
sub
div
shll
insl
cmpsl
dec
insl
push
xchg
fcmovnb
pop
add
xor
movsl
adc
jnp
out
xchg
adc
imul
addr16
pop
nop
lea
cmp
nop
mov
fimuls
je
push
mov
pusha
mov
push
je
rcll
mov
lods
cld
mov
nop
and
lods
mov
sub
mov
repz
lds
sar
out
push
push
xchg
mov
stos
cld
es
stos
cmp
inc
fdiv
mov
add
ljmp
stos
xchg
pop
pop
shl
movsb
xor
stc
or
leave
in
mov
daa
insl
push
mov
in
push
loopne
mov
int3
xorl
mov
and
sub
test
dec
cwtl
and
dec
pop
mov
cmp
icebp
popa
jle
sar
inc
inc
subl
xor
inc
ret
cmp
mov
ficomps
cwtl
jmp
mov
or
jbe
cld
leave
and
nop
xchg
or
dec
aam
sbb
idivb
jecxz
stos
lods
or
add
ret
push
ljmp
pop
jbe
popa
movsl
xor
push
leave
and
lret
xchg
mov
data16
pusha
or
aad
and
sahf
lods
xor
xor
adc
aas
cmp
jmp
push
lret
pop
repz
add
add
sub
cmp
popf
jae
xor
pop
sahf
hlt
and
and
shr
scas
fwait
mov
test
and
popf
shlb
cmova
dec
data16
cs
mov
cmp
int
mov
push
lret
mov
adc
lods
daa
cli
aas
popa
inc
xchg
cmp
push
add
imul
sub
jp
mov
pop
xchg
fs
or
dec
lods
in
dec
adc
rcr
sti
xchg
in
jns
mov
or
jmp
lcall
in
mov
mov
lods
lods
mov
cmp
daa
pop
dec
push
clc
loop
xlat
lret
push
xor
jecxz
pop
cwtl
pop
mov
push
or
sub
stos
xchg
addr16
lcall
xor
mov
mov
adcl
inc
pop
mov
fldcw
addr16
ss
vxorps
shrb
in
mov
shll
aam
mov
cmpxchg
pop
jo
adc
sub
in
add
les
mov
dec
jb
out
pop
push
int3
neg
arpl
shl
int
in
and
xchg
or
test
xchg
ljmp
sbb
inc
enter
mov
mov
arpl
xchg
je
mov
dec
push
and
adc
xchg
fisubrl
or
sub
insl
sbb
inc
sbb
inc
mov
push
imul
and
sub
pop
sbb
xchg
jg
or
pusha
xor
adc
push
and
bound
mov
push
xor
mov
es
mov
lods
adc
push
inc
lds
xchg
cmp
rclb
out
cmc
dec
lcall
rcl
jae
or
loopne
cmpsl
push
mov
mov
movsb
in
scas
inc
add
mov
xor
xchg
add
sbb
mov
bound
mov
dec
push
pop
inc
inc
ss
outsl
addl
dec
dec
push
stc
or
jo
rcll
jnp
ja
jg
lds
sub
in
shr
mov
xchg
inc
sbb
cwtl
xchg
lods
out
jle
pop
fs
jl
dec
rolb
mov
or
xor
lock
add
int
jle
sub
adc
xchg
add
add
xchg
int
shrl
adc
jl
packssdw
or
stos
cmp
cmp
mov
dec
call
cmpsl
clc
fwait
pop
and
adc
cwtl
jl
jbe
add
sbb
mov
xor
xor
sub
adc
jnp
xlat
mov
xchg
cld
mov
test
push
jle
jnp
pop
pop
dec
xchg
sbb
aam
testb
push
mov
jb
mov
rcrb
xor
popf
sub
dec
divb
js
nop
jge
sub
sbb
lods
loop
jmp
mov
movsl
aam
popf
test
mov
xchg
mov
xchg
jns
in
clc
and
sbb
jne
imul
imul
xor
popf
aas
inc
stos
xlat
js
dec
iret
or
fbld
jmp
adc
js
pop
movsb
push
pop
es
int
test
ds
pop
dec
sub
add
push
imulb
jl
mov
adc
mov
mov
or
inc
xor
sbb
sbb
shrb
mov
cmp
jb
aaa
push
or
mov
lods
and
mov
test
push
mov
fdivrs
nop
cmc
mov
ret
mov
iret
jmp
ret
add
cli
iret
loope,pn
and
mov
movsl
or
xchg
js
and
or
pop
ss
pop
imul
pop
or
loop
nop
push
pop
cmp
fbld
xchg
push
adc
je
push
jbe
cmp
fstpt
dec
mov
xorb
loopne
push
in
pop
lcall
ja
jle
movb
and
mov
pop
out
dec
adc
dec
gs
fwait
mov
rcrl
addr16
jmp
fisttpl
add
and
popf
mov
insl
nop
adc
mov
mov
lock
jp
test
xor
lret
xchg
cli
and
mov
stc
cmp
inc
cli
test
inc
popa
sbb
fwait
add
fsts
shll
adc
jno
sub
pop
mov
les
ret
pushf
popf
movsb
fsubr
dec
popf
push
lahf
pop
scas
push
mov
dec
inc
jmp
xor
jnp
mov
repnz
cmp
pop
ljmp
cmp
add
ja
les
call
insb
out
iret
xchg
and
leave
pop
std
repz
stos
pop
imul
mov
icebp
xchg
mov
fildll
nop
pop
mov
push
push
stos
xor
pop
push
out
subl
int
add
mov
inc
adc
jecxz
inc
and
sub
or
enter
mov
sub
push
es
sub
fcmovnb
cmp
popf
jmp
xor
insb
xchg
sub
mov
mov
rcl
push
lret
mov
or
cltd
add
imul
jg
outsl
jge
mov
or
pushf
int3
mov
dec
test
cmp
cltd
outsl
test
jecxz
ss
dec
stc
out
adc
ja
jge
mov
mov
loop
gs
jo
add
stc
std
dec
mov
push
movsb
mov
push
mov
inc
mov
aaa
mov
and
xchg
xor
ror
ret
xor
sub
test
loopne
jmp
xor
cmp
scas
scas
mov
dec
rorb
pop
inc
cwtl
mov
fistl
mov
xchg
scas
stos
xchg
imul
push
and
add
or
mov
stos
xchg
call
negl
loopne
lcall
shlb
cmp
icebp
push
xor
xchg
and
fistl
add
mov
addr16
test
lret
add
lret
mov
popf
or
fs
leave
sahf
popf
popa
jns
mov
push
cli
dec
pop
bound
fwait
pop
push
xor
ret
dec
jns
jl
imul
stos
jnp
sahf
ficompl
and
mov
out
sbb
xor
mov
mov
ret
pop
push
inc
testb
push
je
xor
test
loop
or
mov
stc
jnp
aas
cs
test
in
dec
adc
aas
sub
or
adc
stc
leave
sbb
sbb
ret
test
cltd
xchg
pop
les
loope
int3
lret
loopne
dec
lret
and
dec
cmp
ret
leave
out
add
mov
mov
dec
dec
iret
shr
pop
imul
lods
cld
insl
cwtl
cmp
adc
inc
xchg
pop
popf
add
shlb
jecxz
sbb
push
xorb
push
or
or
push
call
jne
cwtl
dec
es
pusha
xlat
fistpl
cmp
and
mov
adc
and
mov
adc
outsb
dec
cmp
adc
imul
negl
push
test
popf
mov
pop
mov
xor
orb
push
xchg
stc
lea
bnd
push
push
add
arpl
cmp
add
mov
sbb
shl
inc
pop
outsb
push
bnd
cmp
sub
sub
cmpsb
pusha
out
xchg
xlat
dec
std
addr16
fs
jmp
push
add
mov
mov
inc
lds
adc
sbb
sahf
inc
rol
clc
mov
mov
bound
cmc
inc
lahf
mov
sub
inc
jns
cmpsb
push
arpl
mov
ljmp
lods
dec
xchg
ljmp
inc
jp
stc
fidivs
xor
int3
mov
fcoms
or
cmc
push
cltd
cmpsb
and
jge
decl
sbb
dec
and
cwtl
repz
shrl
sub
adc
lock
test
test
xor
fmull
stos
xor
enter
cwtl
fmuls
popa
cmp
imull
cmp
sub
cs
out
dec
mov
fs
lods
push
pop
pop
mov
dec
pop
ljmp
adc
sub
aam
xlat
aad
and
pop
fcompp
or
ja
push
push
pop
in
clc
sahf
mov
push
lock
out
push
and
addl
or
jmp
add
leave
repz
mov
ret
es
or
jg
mov
test
xchg
popl
mov
loope
and
xor
push
or
mov
into
cld
ss
mov
int3
pushf
std
mov
js
scas
lods
xchg
sbb
sti
dec
adc
decl
movsb
lret
ja
and
push
test
dec
mov
sbbb
xor
pop
stos
mov
dec
xor
ss
lods
lcall
mov
pop
or
popf
fldl
es
xor
fstpt
push
jns
xor
inc
inc
jne
pop
and
and
bound
lds
imul
cmp
les
push
out
test
or
inc
push
test
jns
and
pushl
out
std
mov
cmp
call
jmp
leave
lods
fcomip
imul
and
repz
adc
push
outsb
sbb
ds
bound
cmpsb
test
mov
add
into
into
lods
pop
pushf
xor
dec
les
aad
mov
adc
inc
mov
mov
leave
and
ss
jo
popf
into
pusha
inc
or
std
mov
push
cmc
je
adc
popf
inc
movl
push
pop
pushf
mov
dec
enter
pop
aaa
xchg
jecxz
mov
mov
xor
push
fcmovbe
ficoms
xchg
pop
stc
mov
test
repz
mov
push
cli
sub
push
outsl
ljmp
xor
ss
and
or
inc
fwait
cmp
cmpsl
push
jns
test
pop
and
cmp
clc
mov
inc
mov
pushf
adc
xchg
cli
add
call
lods
mov
sbb
nop
pop
rcr
xchg
in
pop
push
scas
incb
lods
cmp
inc
cld
sarb
cwtl
mov
movsl
jmp
or
dec
lret
or
mov
pop
adc
cmp
cltd
shrb
pop
mov
xchg
inc
sbb
scas
sar
lahf
xchg
pop
and
xchg
out
and
lods
mov
jb
enter
fsubr
aas
inc
fisttps
add
mov
push
bound
mov
roll
xlat
arpl
mov
pop
cmpb
pslld
add
inc
and
cmpb
pop
lcall
sbb
insl
lret
aam
ret
jno
and
cs
jae
adc
cmc
leave
push
sub
jecxz
push
insl
cs
in
push
mov
fistpll
inc
sahf
nop
and
addl
mov
es
std
xchg
adc
pop
sub
dec
push
iret
xor
lret
outsl
cmp
sti
call
lahf
fs
dec
cmpsl
movsb
cmpsb
stos
ss
xor
bnd
out
sub
into
mov
nop
shl
into
shlb
hlt
lret
jno
fldt
test
fcmovnu
aad
pop
aas
leave
repz
cmpsb
pop
mov
and
mov
mov
hlt
xor
add
dec
adc
aaa
lcall
fisubl
jge
dec
icebp
mov
dec
sbb
inc
sbb
jo
mov
repz
adc
sbb
cld
cs
or
pop
clc
xchg
xchg
pop
sub
loopne
push
call
xorb
shlb
ror
sub
arpl
dec
adc
mov
cmp
and
jecxz
cwtl
std
popf
orb
movsb
popf
jmp
mull
push
mov
out
cmp
mov
scas
jle
hlt
adc
jae
fcomi
pop
std
iret
outsl
push
rorb
fwait
hlt
lock
into
sbb
aaa
jae
push
add
stos
jge
pop
iret
push
mov
mulb
lods
fsubrs
add
jl
sbb
xchg
push
sub
push
lret
push
push
or
lahf
push
mulb
movl
dec
sbb
inc
add
xor
test
sub
adc
icebp
inc
and
push
test
sub
jmp
push
mov
jecxz
scas
xchg
mov
loopne
and
jecxz
pop
push
sub
scas
jnp
iret
test
std
mov
js
ja
pushf
mov
cli
xchg
fcomps
mov
inc
imul
sbb
fcoml
dec
mov
loope
jecxz
fwait
clc
icebp
mov
xchg
mov
dec
xchg
les
out
xchg
add
push
cmc
sub
movsl
test
ljmp
mov
xor
pop
xchg
in
jb
ljmp
pop
push
dec
dec
pop
pusha
lcall
jle
fadd
push
add
fildl
cmp
sub
mov
into
mov
adc
lods
addb
adc
xchg
adc
orl
mov
fsub
xor
loop
sbb
inc
sbb
fistl
fildll
out
lods
mov
mov
sub
cmp
mov
xchg
push
testb
nop
jno
ds
push
fidivrs
inc
mov
sub
sub
aas
xlat
daa
or
je
fadds
pop
sbb
jnp
imul
hlt
xor
adc
je
or
push
pop
jmp
and
repnz
into
sbb
dec
out
sub
dec
ss
sub
push
mov
mov
xlat
dec
inc
jge
cli
and
dec
add
adc
push
push
xchg
jb
fsubl
je
lea
ljmp
mov
sbb
pop
pop
jecxz
inc
cmp
adc
loopne
and
ljmp
in
addb
add
pop
mov
pop
cltd
into
push
notl
dec
sub
xor
sahf
out
out
adc
rcrb
sub
mov
adc
push
dec
mov
ds
jae
inc
das
outsb
xchg
clc
arpl
cmp
xchg
aaa
mov
stos
xchg
inc
push
add
jae
repz
ljmp
outsb
stos
add
sub
in
repnz
jb
mov
mov
xor
dec
ljmp
fisttpll
pop
clc
test
pop
push
fnstenv
popf
adc
fs
push
loopne
mov
dec
inc
imul
push
or
shr
jge
cwtl
pusha
in
cmp
pop
scas
jle
out
jg
xor
sbb
cmp
and
jae
push
js
rcr
mov
out
aaa
loop
inc
pusha
insb
jae
mov
push
or
fwait
mov
or
mov
add
insb
nop
aam
push
mov
pop
repz
jb
rcr
adc
enter
fisubrs
add
repz
fcmovnu
in
orl
sub
cwtl
pop
xchg
mov
popf
stos
mov
popf
lods
mov
scas
xor
int3
dec
xchg
adc
insl
enter
shl
inc
enter
mov
and
xchg
mov
mov
pop
xchg
fdivl
sbb
icebp
and
lock
sub
nop
inc
dec
cmpsb
mov
rolb
pop
fiaddl
enter
lods
jmp
xchg
scas
insb
lret
repnz
cmp
mov
inc
adc
rcrl
cmp
rcrb
imul
push
test
cmpsl
testb
pop
jns
repz
fwait
xchg
pop
sar
push
lock
jg
ficoml
xor
das
or
test
jb
pop
fisubrl
jmp
popf
sbb
jg
xchg
xchg
iret
stc
ss
enter
push
lods
and
lods
cmc
call
js
push
inc
or
repz
sub
mov
bound
mov
lea
xlat
insl
ja
inc
sbb
repnz
xchg
or
dec
mov
scas
mov
mov
cmpsl
dec
mov
hlt
jae
cmp
jg
mov
jne
ja
leave
pop
sub
notl
sti
cli
out
mov
add
lret
adc
dec
in
shll
jnp
mov
scas
lds
js
stos
or
sub
hlt
dec
xor
arpl
lods
pop
fistpll
test
adc
enter
ds
fcmove
add
out
inc
lea
insl
mov
adc
arpl
push
rorb
ja
pop
and
shl
push
scas
pop
call
iret
push
cmp
popf
push
lret
mov
xchg
ljmp
into
inc
or
hlt
test
sbb
jae
fwait
jbe
into
xchg
jnp
adc
xchg
fnstsw
dec
xlat
cmp
rorb
sub
loop
in
jnp
push
in
bound
xchg
cmp
test
popa
ret
pop
pop
cmpsb
arpl
jecxz
sbb
xor
cmp
xchg
mov
jg
xorb
stos
dec
fisubs
adc
xor
lret
mov
lea
jmp
xchg
in
inc
sub
in
andb
in
dec
xlat
push
jecxz
add
dec
or
ljmp
xchg
xchg
cmp
fildll
add
mov
push
mov
aaa
daa
or
jns
icebp
aad
ret
jecxz
call
pop
pop
xchg
xor
mov
int
sarl
fstpl
jge
xor
hlt
cmpsb
xor
imul
pop
jl
inc
shl
and
xor
js
stos
outsb
dec
scas
sti
sub
xchg
push
scas
xchg
out
dec
cmp
adcl
push
nop
and
inc
popf
jne
jmp
movsl
push
xor
pop
jae
in
leave
insb
cld
add
cmp
test
jp
jbe
mov
or
scas
ja
pop
xchg
cmp
and
fwait
lahf
pop
out
pop
sub
push
cmp
sub
fsts
call
ror
jb
push
cmpsb
lahf
xor
inc
push
sub
sub
out
les
sbb
out
xor
mov
in
dec
into
inc
lds
ret
test
mov
daa
int
dec
mov
shld
adc
xor
fiadds
mov
daa
mov
pop
or
push
scas
enter
andb
xor
test
call
jmp
sbb
frstor
inc
lods
test
lods
ret
and
jne
sub
aaa
daa
loope
imul
mov
dec
jns
orl
stos
movsb
out
data16
ds
iret
fsubrs
out
cmpsl
mov
mov
cltd
into
mov
loop
js
cmp
sbbb
push
test
push
sbb
jo
orl
pop
out
xchg
cmp
shrl
xchg
repnz
adc
sub
aas
ljmp
rcrb
xchg
sbb
dec
mov
xchg
cmp
or
arpl
mov
add
and
negl
pop
movsl
dec
xchg
add
dec
pop
sub
repnz
mov
mov
lock
leave
test
ror
push
lds
mov
jecxz
pop
loopnew
xchg
leave
pop
xchg
lods
jns
sbb
ret
sti
cmp
minps
pop
mov
sahf
out
cld
stc
cmpsb
mov
icebp
dec
dec
dec
xchg
xchg
int3
sbb
lahf
ds
inc
xchg
stos
adc
sub
in
imul
mov
and
xor
test
jle
dec
add
inc
data16
stos
stos
ret
mov
inc
dec
mov
idivb
xchg
int
cmp
out
adc
hlt
shlb
nop
fsubrl
outsl
mov
hlt
rolb
outsb
ljmp
shll
loopne
test
dec
insl
and
xor
sbb
mov
push
sbb
std
mov
or
mov
and
ss
cmpsl
imul
in
out
pop
loop
sbb
fidivs
xchg
fiaddl
inc
mov
into
pop
repz
leave
or
outsb
std
jbe
sbb
cld
lret
push
bound
sbb
insb
sarl
es
cmp
inc
out
mov
xor
lea
xor
jge
jo
mov
movsl
lock
xchg
cmp
rcrl
add
rep
ret
int3
jmp
dec
in
fdivrs
fwait
push
out
push
mov
jge
inc
pop
xchg
or
cmp
xchg
sub
inc
mov
cltd
cmc
add
outsb
repnz
icebp
adc
or
jle
sarl
rsqrtps
dec
xor
enter
push
ret
jmp
out
mov
xlat
cmp
hlt
movsl
push
mov
sarb
sarb
adc
pusha
stc
pop
sbb
mov
lods
push
loopne
push
jbe
and
sub
pop
dec
adc
xchg
lods
lock
mov
addr16
jno
ret
stos
pop
cwtl
repz
xor
xchg
xor
test
outsb
add
cmp
movsb
cli
push
bound
out
push
scas
xchg
mov
xchg
cmp
cmp
xor
fnstenv
rol
mov
mov
arpl
push
jo
icebp
subl
loopne
out
mov
loop
sbb
sbb
push
in
sbb
and
add
jo
add
repz
pop
pop
xor
scas
les
shrb
ja
loop
inc
push
ljmp
push
bound
scas
stc
sub
inc
push
sub
add
bound
adc
arpl
clc
out
mov
push
repnz
adc
pop
adc
imul
xchg
lret
xchg
jl
pushf
inc
mov
and
insb
push
mov
orb
jns
dec
fnstenv
lods
rolb
add
jnp
fcoms
jno
ja
mov
mov
cmp
xchg
test
outsb
sbbl
xchg
mov
xor
subl
adc
sub
aad
push
mov
xchg
cmp
bound
and
insb
loopne
push
xor
movsb
add
jae
repz
inc
mov
rclb
lret
inc
leave
or
fwait
sbb
icebp
sub
push
jae
mov
ret
inc
and
or
jle
mov
loope
cltd
inc
mov
sub
clc
push
fs
scas
jno
or
test
xchg
cmp
adc
insl
rcr
cmpsl
inc
out
mov
add
jae
ss
xor
cltd
jb
cltd
sub
roll
test
push
std
addb
stos
enter
lea
stos
dec
pop
pusha
fnsetpm(287
clc
pusha
bound
inc
sub
mov
fstps
shrl
scas
jmp
mov
lea
xor
into
dec
insb
je
repnz
jne
stos
orl
call
add
xor
cwtl
sub
cmpl
xchg
and
mov
adc
inc
lods
pusha
movsl
mov
adc
jecxz
inc
mov
mov
shll
stos
dec
adc
in
lds
call
jp
nop
into
fisubrs
gs
dec
adc
sub
cmp
jae
stos
adc
loope
xchg
adc
mov
xchg
push
out
dec
adc
mov
xchg
xchg
and
inc
fmul
insl
fstp
mov
xchg
ja
cmpsl
cmp
gs
js
movsb
stc
ljmp
lock
mov
fisttpll
jl
mov
inc
stc
push
push
in
fisubs
adcl
inc
in
call
cmpsb
rcrl
sub
sti
mov
cmp
xchg
movsb
mov
add
pusha
jae
repnz
xor
push
fidivrl
fadds
arpl
and
push
dec
je
stc
adc
dec
cmp
push
outsl
inc
nop
xchg
adc
cltd
notl
lock
imul
push
pop
lret
in
xchg
dec
arpl
ret
ret
pop
add
insl
ljmp
mov
adc
xchg
in
mov
sbb
adc
xor
loopne
fs
jg
inc
jo
lea
iret
cmpsb
cmp
xchg
xchg
mov
push
pop
and
aad
adc
pop
incb
cs
dec
xchg
out
and
jge
xor
aad
dec
xchg
outsb
xor
leave
sbb
inc
push
adc
pop
jbe
dec
mov
cmpsb
sahf
fidivrs
pop
mov
in
insl
mov
xor
xor
add
jecxz
ds
mov
es
inc
push
push
jge
mov
or
ds
push
and
ljmp
mov
jae
arpl
or
lahf
jnp
mov
dec
call
add
pop
bound
test
lcall
dec
sub
mov
mov
lret
loopne
xor
and
rcll
fistps
fmull
adc
push
lret
sbb
stc
mov
std
stos
xor
mov
mov
or
adc
inc
lahf
push
in
inc
inc
pop
jbe
fimuls
dec
hlt
sbb
aad
add
xor
lret
and
mov
jae
fildl
add
lea
mov
addr16
hlt
add
outsl
ljmp
cmp
push
loope
fmul
jbe
mov
sbb
enter
push
dec
das
push
cltd
jne
sbb
flds
idivl
jp
imul
cmp
cmc
add
cmp
xor
aam
mov
cld
inc
mov
lock
mov
push
out
fildll
cld
jmp
sub
stos
sahf
jae
jmp
movb
push
jmp
mov
repz
add
push
xchg
push
sti
in
dec
repnz
pop
arpl
mov
push
gs
data16
xchg
mov
fisubrl
cmp
adc
add
mov
das
dec
or
lahf
loopne
loopne
cmp
push
cmovl
push
scas
movsb
adc
mov
or
fildll
xlat
mov
cwtl
ljmp
cmp
es
aas
inc
dec
cmp
add
xor
pop
fwait
imul
cwtl
jno
and
lea
inc
mov
arpl
pushaw
das
imul
pushf
outsl
in
gs
inc
movsb
pusha
xor
iret
cmp
pusha
mov
out
and
push
sbb
es
inc
pushf
xchg
sub
enter
jb
push
cmpsl
xchg
frstor
sbb
xchg
add
jns
push
shll
add
pop
leave
bnd
cmpb
mov
mov
push
sub
clc
cmpsb
add
dec
mov
xchg
lahf
sbb
cmp
lods
jne
sub
adc
lret
jbe
mov
movsl
mov
dec
popa
sbb
and
insl
addr16
jbe
cld
sbb
loop
cs
bound
push
pop
insb
cmp
fidivrl
push
mov
shlb
pop
in
outsl
sarl
xor
dec
xor
jle
adc
cmp
loopne
push
daa
add
or
jge
cs
stos
pop
imul
pushf
out
ss
mov
xchg
dec
push
mov
ljmp
pop
fdivrl
int
mov
lcall
in
inc
loopne
and
inc
jp
xor
sub
push
pop
or
mov
jg
ja
inc
mov
hlt
pop
cli
mov
clc
das
imul
mulb
stos
rcrl
adcl
shlb
adc
xlat
scas
xchg
sbb
scas
and
xchg
mov
mov
mov
fnstcw
shrl
push
stos
das
jl
test
xchg
xchg
cs
movsl
cmp
xor
rclb
hlt
inc
jb
cmpl
in
jp
decl
ds
dec
push
inc
lds
sub
in
add
test
cli
sub
push
push
inc
sub
xor
je
imul
xor
repnz
mov
test
cli
ror
imul
push
mov
cmpsl
scas
int
sbb
push
out
std
xor
lcall
jnp
mov
dec
mov
stc
arpl
rol
mov
ja
aad
inc
or
cmp
les
cmc
dec
mov
adc
sub
iret
sbb
add
sub
jo
push
fidivrs
dec
dec
and
cmp
pushf
inc
cmp
in
xchg
mov
fistpll
int3
cltd
sbb
xor
ljmp
mov
insb
and
mov
jae
rclb
scas
ja
jno
add
insb
inc
xchg
shlb
dec
mov
lds
shlb
xchg
add
mov
popa
add
and
or
cmpsl
jo
adc
clc
sbb
xchg
mov
pop
imul
jbe
inc
jo
fidivs
inc
fcmovnbe
cmp
movsl
cmp
sbb
fimull
fs
and
xchg
cmp
popf
ja
fisttps
test
cmpsl
xchg
cld
ret
inc
add
cld
sbb
pop
lret
mov
add
pop
mov
hlt
jno
push
stos
dec
cmp
sbb
int
clc
arpl
or
pop
sahf
loope
into
insb
mov
push
mov
into
mov
push
not
in
loope
inc
sub
cli
xchg
pminsw
sahf
mov
inc
push
dec
or
sub
and
xchg
xchg
inc
xchg
mov
mov
pop
push
int
aad
pop
xchg
jp
loop
in
test
mov
ja
mov
inc
out
mov
pop
mov
xchg
push
hlt
cltd
inc
xor
mov
jno
nop
lock
dec
popf
inc
cmp
inc
xchg
mov
dec
enter
mov
xchg
inc
lods
sub
inc
out
push
fadds
jecxz
dec
rcl
lock
int3
mov
pusha
imul
icebp
lcall
jmp
lcall
shlb
out
xor
out
stos
mov
scas
aad
xchg
mov
out
jle
add
outsl
jmp
ljmp
push
push
sahf
cmpsl
lods
mov
enter
insb
rcrb
xor
jo
bound
xor
or
pop
sbb
jmp
loope
lahf
repz
repnz
sbb
push
out
push
pop
mov
xchg
inc
imul
loope
aas
jp
test
xorl
shlb
push
jno
dec
jae
sub
mov
subb
sub
dec
pop
sahf
aas
leave
fbld
lret
jne
leave
and
loop
fisttps
outsl
ljmp
inc
cli
sbb
xor
ss
push
mov
cmp
mov
movsl
pop
lret
cmp
mov
pop
adc
std
mov
lods
mov
pop
pop
jle
dec
sbb
out
xchg
outsl
sub
sub
movsl
cmc
dec
movl
inc
filds
pop
cmpsl
jg
pop
sbb
xchg
test
cmp
and
xchg
es
and
icebp
outsl
pop
pop
test
ret
pushf
adc
in
or
enter
aad
clc
enter
cmp
sbb
data16
mov
and
push
test
stos
mov
rclb
add
mov
xchg
dec
xchg
and
enter
push
or
or
xchg
mov
pop
test
pop
pop
push
dec
andl
ljmp
out
mov
cmpl
sub
data16
fwait
jb
jl
nopl
mov
xchg
fidivrl
cmp
filds
jmp
arpl
jno
cmp
pusha
xchg
pop
push
sub
je
xor
cmp
fdivp
je
psubd
xor
xlat
ss
adc
cmpsl
xor
mov
push
add
in
mov
shlb
adc
mov
jle
xor
cld
das
mov
psubusb
btr
push
push
pop
jecxz,pn
cs
and
nop
add
jno
dec
xor
loop
ret
sbb
xor
sbbl
lret
cmc
pop
lea
fisubl
shlb
cmp
pop
xor
pop
or
push
mov
arpl
xchg
popa
pop
or
dec
xchg
push
mov
addl
mov
add
in
sub
add
push
jge
or
or
scas
out
repz
xor
pop
insl
sub
shlb
loopne
xchg
inc
push
rol
mov
xchg
jle
clc
inc
pop
int
jns
daa
add
imul
xlat
and
lret
and
iret
sbb
cmp
cs
xchg
movsb
xor
sub
andl
ss
loopne
mov
cmp
fdiv
js
in
mov
dec
mov
mov
push
sbb
push
xor
ret
mov
adc
dec
out
mov
daa
out
stos
int
jg
icebp
or
mov
lock
push
mov
mov
clc
add
pop
or
mov
flds
dec
pop
mov
fmull
mov
or
cwtl
cltd
and
sub
gs
imul
pop
dec
and
adc
pusha
jo
mov
pushf
ss
imul
data16
clc
pop
fisttps
xor
mov
inc
sub
sbb
push
inc
shlb
xor
fst
sbb
and
cmp
int
into
xor
lock
test
sub
data16
jo
sarb
mov
adc
add
sbb
sub
pop
mov
sub
sbb
mov
ret
bound
daa
xorb
push
mov
pop
in
add
aaa
fidivrs
add
jno
ret
xor
nop
or
out
pushaw
cmc
test
sub
aad
in
clc
pop
push
popa
sahf
mov
loopne
shlb
cmpsb
fwait
push
adc
addr16
jb
lcall
jnp
jle
mov
in
push
dec
loop
dec
ficoms
enter
jno
les
mov
cmpsb
fucomip
push
dec
cmpsb
fsubrl
pop
cli
xlat
add
cltd
mov
mov
mov
test
jns
divb
push
aad
and
js
xlat
inc
push
cmpb
popa
imul
scas
push
test
xchg
sub
inc
pop
jno
mov
flds
pusha
fisttpll
dec
inc
lods
mov
push
cmpsb
data16
push
lea
lds
insl
lcall
mov
lret
testb
gs
lcall
cmp
jmp
mov
cmp
outsb
sub
mov
mov
or
fdivrl
xchg
sbb
pop
inc
cwtl
nop
lds
push
dec
data16
sbb
nop
lret
cmc
push
aas
sub
lock
jge
xchg
in
adc
sbb
jno
jp
leave
loop
mov
jp
sbb
sub
cmpb
add
jg
jb
cmp
sub
lahf
dec
push
inc
fldl
lock
lock
mov
popa
jmp
xor
inc
aas
and
int
aaa
arpl
mov
mov
call
insb
xlat
cmp
sub
lock
mov
jb
push
mov
mov
into
test
push
sti
jge
jno
mov
dec
insl
testl
addr16
or
and
jecxz
sbb
movsl
sub
mov
mov
ret
call
jbe
push
aaa
not
mov
adc
shll
add
inc
ret
cmp
mov
fwait
in
cs
hlt
mov
inc
shrb
pop
jge
add
add
cwtl
mov
inc
or
fs
mov
adc
cltd
test
jbe
pop
or
imul
lds
out
xchg
sub
inc
jne
adc
int
out
repz
int
jge
movsl
xchg
mov
and
push
cmp
xchg
bound
in
dec
cmpsl
cmp
mov
fwait
mov
cmc
inc
mov
mov
icebp
orl
mov
dec
fwait
and
mov
push
cmpsl
and
adc
cmc
andl
adc
cwtl
sub
into
popl
leave
add
sub
lock
add
xchg
adc
neg
and
lret
fmuls
test
out
jns
mov
push
and
xchg
and
push
out
rorb
and
popf
jbe
test
shrl
mov
test
add
pop
push
sbb
jecxz
jecxz
rolb
leave
push
es
xchg
add
pop
notb
enter
or
ss
jmp
lock
movsb
dec
or
neg
cmpsb
popa
dec
and
inc
fildl
pop
rcrl
cs
or
xor
dec
mov
in
push
push
les
inc
inc
flds
inc
sbbl
iret
fwait
xchg
sub
decl
and
lret
outsl
and
cmp
bound
dec
out
mov
fildll
adc
movsb
insl
and
aam
adcl
sahf
aam
leave
cmpsl
xor
or
cmpsb
loop
push
fsubs
insl
dec
push
xchg
lahf
mov
jl
sahf
scas
pushf
rcrb
jecxz
pop
ss
aaa
fnsave
aad
aas
fisubrl
mov
dec
int
test
pop
addb
add
jno
dec
mov
jmp
das
or
test
scas
ss
mov
rol
jnp
pmullw
push
push
add
cwtl
or
cwtl
outsb
jmp
xor
scas
adc
lcall
icebp
cmp
neg
rorb
ljmp
pop
loopne
jp
add
jl
mov
jmp
mov
dec
clc
jno
aam
xlat
mov
cmp
mov
adc
dec
incl
cmp
cmp
dec
hlt
test
inc
ds
mov
jbe
insb
jne
jne
arpl
out
ja
enter
dec
mov
push
aam
jmp
mov
xor
std
add
lods
icebp
shll
inc
push
dec
pop
loop
fdivs
in
sub
stos
ljmp
cmp
inc
mov
mov
scas
mov
mov
fucompp
sub
mov
dec
xor
xor
push
mov
add
pop
ficomps
inc
loope
lods
xchg
xchg
mov
inc
push
mov
mov
loopne
inc
ja
sbb
lds
inc
pop
fs
loope
mov
cli
pop
and
xchg
or
dec
inc
adc
loop
push
xor
and
mov
scas
sub
xor
andl
js
sahf
or
pop
pusha
mov
stc
inc
lock
cwtl
push
dec
sbb
hlt
xlat
xor
das
inc
dec
cmpsl
int3
cwtl
xchg
add
sbb
jb
mov
lds
fldcw
cmp
pop
cbtw
mov
nop
pop
dec
out
inc
in
mov
sbb
push
repz
add
cmpsb
dec
push
fbld
adc
adc
divl
daa
stc
add
popl
inc
fdivrp
stos
imul
notl
ret
sub
cmpsb
addr16
icebp
jno
sub
ljmp
out
mov
mov
das
pop
iret
icebp
scas
and
int
test
shlb
sti
in
jns
sub
or
ja
jne
xor
inc
movsl
push
push
jecxz
sahf
xor
pushf
les
lret
jecxz
adc
into
cmp
mov
outsb
xchg
dec
inc
loope
int3
or
fwait
sub
xchg
push
imul
xor
xchg
pop
stc
dec
cwtl
daa
test
fdivrl
loope
pusha
dec
cmc
mov
sbb
nop
shrb
xchg
xor
fadds
pop
mov
jae
sub
jns
add
mov
sub
mov
or
mov
jnp
sarl
std
or
and
insl
inc
pop
adc
fldcw
xor
pop
inc
jbe
mov
push
inc
imul
sub
xor
push
loop
imull
das
push
cmpsb
lods
ficoml
enter
and
mov
out
and
push
xorl
or
mov
sti
pushf
dec
inc
dec
aad
sahf
lods
or
out
repz
je
out
push
push
jo
out
push
inc
mov
enter
or
jecxz
inc
test
pusha
sti
jbe
mov
out
jg
mov
sbb
jp
int
shll
pop
stc
push
mov
xor
pop
jbe
icebp
sbbb
es
adc
add
shlb
push
call
sbb
std
jl
mov
les
loopne
ficompl
mov
jno
push
xchg
mov
fwait
pusha
outsb
inc
push
clc
lods
adc
movsb
mov
sub
push
mov
mov
popf
fmul
hlt
push
pop
shlb
sbb
test
dec
call
ljmp
mov
clc
and
mov
pop
jp
push
mov
jmp
push
loopne
je
movsb
or
out
imul
xchg
dec
mov
mov
cli
xchg
test
jae
or
aad
stc
out
stos
sbb
stc
repz
push
sub
daa
jecxz
sub
dec
mov
mov
std
popa
imul
push
daa
xchg
mov
xchg
addl
cs
iret
lea
scas
xor
mov
adc
push
pop
or
sbb
arpl
jne
pusha
or
mov
subb
les
jge
jnp
int3
mov
dec
outsb
cmp
imul
jge
std
adc
and
pop
inc
mov
insl
out
lods
xchg
push
and
push
mov
jae
push
addl
iret
lahf
aad
xchg
and
insl
out
mov
subb
xchg
xor
xor
sar
scas
inc
pop
mov
or
and
in
adc
iret
and
jl
mov
lcall
jo
dec
mov
mov
sub
adc
mov
into
cmpsb
addl
adc
or
aam
pop
popa
mov
jg
neg
loope
repz
ds
in
xchg
setno
into
das
mov
lret
xchg
push
jo
cld
or
lret
push
dec
dec
mov
mov
pop
jmp
mov
es
pop
sbb
scas
add
xchg
cmpsl
xor
mov
cwtl
jo
pop
iret
xchg
dec
push
test
inc
pop
out
cwtl
jecxz
in
mov
aad
sbb
lcall
leave
push
aaa
push
xchg
xchg
sahf
daa
inc
push
mov
or
mov
add
rolb
jle
mov
popf
inc
arpl
pop
aas
loop
dec
push
pop
jb
stos
sbb
mov
and
pop
out
and
pop
mov
cld
lret
push
jecxz
fwait
loop
and
pop
lret
inc
cs
mov
lret
scas
popa
js
addr16
lea
sti
iret
lret
xchg
pop
insl
sub
push
or
cld
push
push
push
mov
cmc
jns
std
test
fnstcw
rcrb
imul
mov
imul
dec
xchg
sar
popf
gs
pop
icebp
add
loop
pop
xor
jb
push
inc
push
out
cmp
int3
nopl
sub
mov
popf
cmpsb
xlat
sub
mov
arpl
mov
popa
rorb
mul
aas
xchg
push
mov
mov
pop
mov
inc
jg
pop
xchg
mov
mov
dec
mov
mov
ja
je
adc
push
call
loop
push
adc
or
inc
cmpsl
cld
push
pshufw
mov
bnd
jbe
outsb
outsl
out
xchg
pop
sbbl
lea
fsubp
in
cmc
repnz
outsl
and
dec
mov
clc
cmpsb
mov
push
inc
cwtl
xchg
jae
and
sarl
cmc
cld
movsb
dec
fdiv
test
ret
mov
filds
nop
mov
jo
add
pop
mov
mov
gs
cmp
ljmp
mov
mov
dec
add
fs
dec
add
sti
adc
xor
jecxz
cmp
adc
and
sbb
cld
pop
int
scas
xchg
jno
pop
mov
jns
clc
nop
mov
int
lahf
jmp
out
xor
iret
rcrb
fsubrl
lret
sbb
cs
inc
outsl
decb
inc
add
pushf
fisttpll
cmpsl
mov
xor
mov
and
xchg
xchg
dec
outsb
cmpsl
aad
dec
bound
sub
sbb
and
sbb
test
add
and
pop
rorl
xchg
sub
insb
enter
jl
pop
pop
test
popa
lret
into
mov
dec
jae
popf
xchg
push
mov
jno
push
and
iret
test
stc
adc
dec
dec
loope
mov
pop
add
sub
jmp
push
fnstsw
enter
xlat
addb
pop
scas
push
mov
and
xchg
and
ljmp
mov
test
push
and
hlt
xchg
call
mov
stos
mov
sahf
repz
shrl
xchg
mov
lea
lcall
lock
int
lahf
adc
add
jnp
test
xchg
adc
sub
pop
pop
xchg
pop
sti
enter
and
imul
into
add
outsl
mov
lcall
mov
push
cmp
pop
sbbl
dec
sbb
xchg
stc
fdiv
bound
add
loopne
pop
or
sub
push
xchg
out
in
jb
loopne
mov
js
shrb
pop
decl
testl
mul
dec
lock
add
repz
shl
push
in
out
mov
je
leave
xchg
pop
data16
sahf
sti
mov
aam
xchg
cld
sahf
lahf
mov
leave
scas
adc
fisubs
jbe,pn
pushf
mov
cmp
pop
daa
lds
push
in
inc
divl
and
jo
pushf
jb
out
lret
ror
fcmovu
xchg
xchg
sub
cltd
inc
or
mov
xor
nop
cltd
popa
adc
inc
mov
pusha
cld
dec
mov
mov
add
repnz
jp
jle
std
cld
xchg
pop
data16
rcrl
adc
aam
or
cmpb
idivl
mov
lret
inc
inc
add
push
mov
adc
insb
push
and
pushf
add
dec
mov
push
leave
xor
add
loop
cmc
adc
mov
daa
xor
pushf
call
icebp
xchg
xor
xor
push
mov
or
mov
sbb
cld
mov
push
lods
adc
js
cmp
jb
pop
ljmp
mov
adcb
inc
inc
and
inc
lahf
dec
adcl
ja
and
push
adc
movsb
out
jne
jmp
repnz
addr16
inc
mov
inc
gs
jge
and
int3
imul
or
xchg
iret
clc
xchg
or
fs
mov
inc
xchg
enter
lea
js
mov
xchg
xor
add
cmp
and
adc
rcll
adc
ret
pop
xchg
shlb
fwait
inc
and
stos
pop
insl
stos
mov
xlat
sbb
jbe
or
nop
and
movsb
ret
loop
ficompl
or
mov
fmul
inc
jnp
outsl
jno
mov
jg
sub
pop
cmp
je
add
xchg
push
clc
cmp
or
or
jge
ja
cmp
out
sbb
fmulp
stos
fiaddl
out
xchg
and
xchg
xchg
push
test
cmp
jns
mov
cmp
xchg
mov
pusha
outsl
jns
out
xchg
xchg
add
sub
call
lcall
and
xorl
pop
adc
repz
enter
inc
hlt
adc
inc
aas
mov
in
fistpl
lcall
cmp
inc
sahf
pushl
and
and
xchg
es
fbld
test
int
clc
jae
je
aam
jge
int
pop
mov
dec
cmc
scas
stos
xchg
mov
dec
stos
loop
dec
das
imul
inc
out
js
es
jns
lods
in
dec
pop
adc
mov
sub
fsincos
into
jbe
outsb
aas
jle
repz
jno
or
cmp
mov
pushf
aad
ds
popf
ficoms
and
inc
stos
outsl
sbb
jmp
pop
sbb
aam
mov
out
cld
repnz
stos
mov
or
fisubl
stos
jmp
sbb
shlb
iret
test
jae
cmp
xchg
or
add
daa
sbb
imul
pop
fisubrl
pop
push
int
into
in
jns
jns
jmp
in
ret
sbb
mov
lahf
out
cwtl
cmpsb
dec
jle
xchg
mov
aaa
pusha
mov
test
lahf
daa
pop
xchg
repnz
repnz
outsl
xchg
fs
insl
sbb
jo
mov
mov
add
jbe
push
sahf
mov
add
insl
out
cmp
cmc
and
jmp
lret
js
add
test
dec
call
push
imul
mov
aas
adc
mov
mov
sub
cmp
call
inc
push
pop
cmp
mulps
mov
loopne
mov
ds
add
cs
push
out
inc
mov
pop
sbb
xchg
stos
push
push
cmpsb
cs
cmp
jno
adc
and
pusha
icebp
mov
inc
icebp
mov
in
clc
dec
xor
push
std
loopne
outsl
mov
push
xlat
es
fadds
mov
repnz
or
lret
repnz
and
cmp
sbb
add
cmp
in
in
subl
in
sub
dec
dec
jge
mov
and
pushw
in
push
adc
repnz
outsb
call
inc
ja
addr16
mov
ja
mov
or
adc
enter
stos
xchg
lahf
adc
sub
es
pop
push
sub
icebp
add
cmpl
mov
mov
xor
std
add
enter
imull
xorb
cwtl
and
mov
out
xchg
push
jb
xor
or
add
shl
leave
sbb
mov
sahf
call
add
xor
ss
in
loope
cltd
jns
rorl
bsr
test
xchg
scas
popa
xchg
lds
xor
jne
xchg
fistps
rolb
sbb
leave
nop
cld
sub
mov
ret
icebp
sti
lods
loope
ror
fisttps
iret
adc
loop
ret
sub
jae
daa
int
or
aad
shl
and
xchg
lods
mov
call
dec
adc
dec
pop
movsl
pusha
mull
ret
test
mov
jle
push
pushf
add
jmp
scas
test
imul
dec
inc
mov
dec
out
mov
pop
mov
nop
fsts
or
iret
sub
aaa
pop
inc
stc
stc
cmp
mov
xchg
orb
xor
lock
jl
sub
shl
jmp
ret
push
push
aad
mov
and
je
xchg
scas
stos
fiadds
outsw
aaa
les
jmp
or
rolb
dec
pop
rorb
ss
xchg
sbb
lahf
mov
jl
les
lods
cmp
rclb
mov
mov
pop
pop
push
adc
jb
fsubs
xor
stos
mov
sub
mov
in
push
cmp
inc
jge
mov
scas
in
jmp
sti
imul
add
jge
jge
imul
xchg
jmp
mov
test
test
cmpsb
imul
xchg
mov
in
xlat
jle
scas
arpl
dec
popf
add
mov
lahf
enter
adc
shll
add
pop
mov
arpl
pop
pop
popf
push
in
cmpsb
out
fadds
loop
cs
cmpsl
test
mov
sbb
mov
cwtl
and
aaa
pushl
outsb
add
xchg
addr16
outsl
and
cmpsb
scas
mov
lahf
cltd
mov
ja
xor
pop
mov
ret
dec
scas
mov
pop
mov
gs
imul
mov
inc
clc
scas
mov
clc
cmp
cmc
repz
nop
icebp
sti
fwait
pop
les
add
enter
xchg
cmp
rorb
push
leave
jp
and
xor
fxch
and
into
mov
insl
loopne
cwtl
pop
cmp
pop
in
cmp
xchg
insb
inc
push
jge
sub
test
mov
inc
adc
jmp
test
stos
add
cmc
inc
stos
mov
clc
in
dec
dec
leave
pop
sub
test
ja
inc
ss
inc
cmpsb
mov
js
bound
adc
mov
sub
mov
jge
sahf
movsb
sbb
cmc
rol
sbb
dec
and
loopne
lea
cmp
fs
adc
jns
insl
xorl
lret
scas
leave
in
iret
dec
or
push
push
and
add
sbb
cmp
pop
pushf
ss
inc
movsb
scas
or
push
fsubrp
pop
out
cmp
jb
fdivl
in
lods
inc
arpl
sbb
push
inc
adc
fsubl
popf
mov
or
lods
icebp
iret
and
mov
lahf
call
loop
pop
nop
jnp
or
js
xlat
mov
bound
mov
inc
out
cmpsb
mov
das
mov
push
std
ds
cmpsb
push
jne
jle
ljmp
inc
fsubl
mov
mov
loope
push
push
jns
pop
clc
add
pop
jns
cs
mov
xor
ror
inc
cwtl
jb
inc
je
sub
rorb
rcll
pop
popa
dec
adc
test
fnsave
mov
dec
jg
jno
lods
test
call
aas
pop
xchg
lods
sbb
sbb
jno
insl
cmp
aaa
cld
js
sbb
jb
fisubrl
imul
sbb
dec
sub
jbe
pop
js
jbe
outsl
fidivs
mov
clc
bound
lds
jne
sub
fwait
insb
mov
sbb
iret
mov
sbb
push
mov
cmp
and
jmp
arpl
push
int
adc
arpl
test
mov
xchg
sbb
mov
mov
xor
xchg
jmp
dec
mov
and
aad
ret
cmp
jae
ja
add
in
inc
outsb
outsb
dec
push
inc
sbb
push
dec
aas
imul
push
icebp
stc
jecxz
push
loop
loope
xlat
scas
pusha
fsubrl
xchg
and
lock
mov
dec
into
xor
add
adc
daa
das
lods
jbe
jl
bnd
mov
popf
fs
dec
mov
jo
add
loope
cmpsl
jo
in
sbb
or
insb
adc
stc
test
xchg
dec
push
mov
out
dec
pop
shlb
out
cmp
inc
ja
push
roll
popa
subb
pop
mov
cwtl
pop
frndint
xchg
int
or
mov
push
lret
cmp
aam
out
add
push
inc
inc
in
in
sbb
aam
loop
xchg
adc
jecxz
mov
loop
cwtl
jmp
incb
cs
or
or
mov
xor
lret
push
fmull
dec
mov
adc
and
push
std
outsl
cmp
cmp
and
cli
les
xor
fwait
jge
adc
adc
popf
mov
inc
pop
movsb
push
mov
add
popf
ret
insb
inc
lea
orl
enter
sub
ret
out
dec
out
mov
test
mov
hlt
pop
lods
xchg
cmpsl
into
push
and
mov
dec
jo
arpl
cld
sti
dec
out
enter
pusha
mov
mov
push
xchg
clc
out
cmp
stos
cmp
sbb
out
testb
pop
es
cmp
lret
mov
add
clc
or
inc
loop
mov
shll
notl
pusha
loope
loopne
and
fwait
or
push
rclb
adcb
cwtl
and
scas
addr16
out
shr
dec
stos
cld
imul
sub
popf
sub
in
mov
sbb
jge
or
sbb
aaa
in
xchg
inc
fnsave
add
inc
arpl
cmp
push
sbb
fadds
iret
pop
ss
test
icebp
xchg
in
mov
sbbl
push
lret
aas
jp
les
pusha
fwait
sahf
mov
in
int3
adcl
fldl
cli
mov
xchg
rcrl
cmpsl
call
adcb
in
scas
in
mov
jno
jmp
pop
movsb
shlb
xor
and
aas
shll
shrl
inc
xor
or
push
mov
pushf
push
test
outsl
inc
in
jg
mov
sbbb
jmp
out
push
cs
jl
in
pushf
cmp
cmp
aad
insb
outsl
xchg
jecxz
jbe
mov
lahf
lods
rclb
inc
adc
add
mov
pop
leave
pop
pop
mov
fisttps
testb
xlat
ret
sub
mov
mov
xchg
shld
stos
popa
jmp
push
mov
pusha
or
lret
push
jecxz
jg
xchg
sbb
fnstsw
sub
sbb
nop
jge
andb
mov
and
cmp
stos
outsl
shrb
and
je
pop
mov
mov
pop
cmp
int3
imull
mov
adc
movsl
jl
fisttpl
shlb
dec
pop
mov
or
jmp
inc
nop
xchg
inc
jns
xor
jne
jp
fistl
add
and
orb
negb
mov
or
mov
inc
addr16
pop
push
imul
xchg
inc
roll
out
mov
call
ljmp
jo
sub
es
iret
sub
cmc
ret
testb
and
test
pop
iret
inc
cmc
sub
scas
mov
push
cmpsb
xchg
jge
lock
lods
fldenv
aaa
call
test
faddp
mov
mov
lea
push
nop
sti
add
mov
imul
mov
sahf
adc
mov
dec
adc
mov
aaa
mov
leave
pop
cmp
dec
ss
push
or
rorl
mov
cmc
aaa
rorl
ja
sbb
lods
adc
push
mov
ds
outsb
mov
xor
pusha
mov
xor
std
and
xor
out
imul
xor
loope
add
imul
repnz
xchg
dec
push
push
psubd
popf
inc
add
or
enter
push
cmp
ds
inc
hlt
adc
xor
mov
mov
xorb
dec
cmp
add
sub
rolb
hlt
xchg
imul
add
ret
mov
add
pop
sub
icebp
les
xor
push
ds
xlat
jo
mov
cmp
pop
jne
dec
jnp
lock
xchg
fidivrs
mov
cmp
adc
je
lahf
inc
sbb
lret
jnp
mov
cld
ret
lods
scas
adc
jmp
fldcw
data16
out
cwtl
push
ret
inc
repnz
lcall
mov
ja
sub
jmp
jb
cmp
dec
and
cs
xchg
lds
sti
mov
cli
jbe
mov
lock
int
lahf
ret
sbb
fidivrl
movsl
out
aaa
sub
sub
mov
push
mov
pusha
jle
mov
mov
xchg
adc
lret
xor
pop
scas
popa
mov
std
data16
sbb
dec
jmp
sub
mov
loope
jle
bound
mov
sti
sarb
sbb
xchg
sbb
test
out
lret
out
push
insl
sbb
jmp
flds
hlt
or
jb
mov
clc
inc
push
and
sbb
sub
les
in
cmpsl
cmc
sbb
std
int3
cwtl
stos
in
mov
and
push
negl
lcall
adc
aas
pop
cli
pop
fldt
orb
lret
outsb
push
gs
dec
hlt
cmp
pop
shll
push
mov
mov
in
cmp
sbb
mov
outsl
sbb
data16
imul
xor
mov
push
ds
out
xor
cmp
xchg
push
mov
andl
or
or
in
mov
fldt
dec
add
jae
xor
xchg
arpl
cmp
pop
cld
pop
jnp
sub
cld
jle
adc
pop
lds
inc
test
jle
push
and
sub
in
clc
sbb
cmpsl
jle
cmp
mov
mov
or
jo
pusha
sbb
and
addr16
xor
je
xchg
psllq
push
inc
or
pop
add
std
dec
sbb
jecxz
insl
cmp
xchg
imul
pop
in
pop
cwtl
loope
gs
push
inc
test
jmp
fisttpl
xor
mov
jmp
nop
inc
push
shll
push
or
mov
xchg
inc
mov
rol
icebp
mull
iret
in
dec
sub
pop
xor
and
inc
or
jne
and
in
aad
loope
dec
or
divb
popf
bound
adc
dec
or
pusha
and
xor
pop
out
das
int3
lcall
xor
and
jns
insl
pop
aad
mov
test
push
lea
pop
sarb
pop
in
mov
cmp
pop
add
adc
dec
xchg
mov
sbb
fdivrl
testl
call
cmp
mov
inc
push
or
adc
bound
and
sbb
sahf
xor
and
adc
xchg
les
stc
rorl
ficomps
stc
xor
dec
negl
dec
inc
aam
pop
sub
lret
xor
clc
jno
xchg
dec
jg
cs
fs
fld
aaa
mov
insl
sbb
mov
dec
xchg
mov
push
pushf
mov
pop
dec
daa
fcoml
clc
mov
xchg
shrb
lret
mov
jecxz
cmp
add
mov
fsubrs
xor
push
bnd
xor
imul
xchg
add
mov
push
pop
jmp
les
test
or
mov
lret
les
mul
jne
adc
aas
inc
xor
seto
pop
adc
or
push
out
xchg
jb
xor
dec
sbb
out
lahf
sbb
mov
push
negb
push
ret
xor
xchg
insl
mov
mov
addb
pop
push
xorl
adc
mov
pop
mov
xchg
popa
iret
inc
sbb
jns
and
popa
adc
dec
jge
mov
shlb
les
mov
cltd
or
test
daa
fstp
sub
xchg
jns
movsl
fsts
repz
aad
pop
xchg
sbb
pop
dec
outsb
jne
jnp
int3
cwtl
jbe
out
mov
lret
outsb
mov
xchg
jecxz
in
pop
mov
add
cmc
dec
push
fiaddl
negb
push
or
ds
loope
sbb
adc
enter
test
fidivrs
mulb
mov
jecxz
je
adc
cmpxchg
sub
push
pop
dec
aas
xchg
loopne
push
cmp
loop
shrb
test
cli
in
mov
fisubrs
pop
mov
aas
add
aam
aas
cmp
insb
repz
ret
xor
das
ret
jnp
jge
adc
adc
push
pop
lock
stos
popw
ljmp
fnstsw
test
sti
pushf
push
push
adc
out
sub
stc
mov
push
fbld
pusha
leave
adc
test
lret
sbb
sub
pop
cltd
pop
ret
outsl
or
pushf
jge
or
data16
mov
xchg
sub
repnz
dec
sbb
mov
inc
xor
iret
addr16
notl
pop
push
jl
dec
je
pusha
jg
and
mov
scas
fcomi
sbb
stos
jge
pushl
rcll
mov
sbb
pop
aad
loop
inc
daa
int
loope
test
cltd
sub
lods
mov
nop
outsl
push
sub
lea
cmp
and
aam
and
or
xchg
or
loope
popf
mov
mov
or
add
jecxz
hlt
inc
in
jb
add
push
jle
xchg
cmp
leave
les
addr16
add
xchg
iret
ftst
xchg
dec
lea
movsl
sub
mov
xor
jmp
mov
out
insb
inc
push
pop
push
sarl
mov
mov
dec
sub
jb
mov
mov
xlat
xor
xchg
fistpl
test
cli
ja
sbb
pop
sub
stos
or
sub
inc
test
sbb
mov
test
popf
mov
call
mov
adc
cli
adc
popf
pop
or
mov
cld
sbb
jg
int3
adc
mov
lea
loopne
dec
es
mov
repz
pop
iret
cwtl
test
aad
std
icebp
fildll
lea
push
call
xchg
pusha
dec
cmp
mov
in
jg
mov
lcall
les
and
push
hlt
sub
repz
mov
fcmovbe
sahf
or
in
xor
push
cli
shll
mov
imul
lea
mov
fldl
add
data16
jl
fs
sbb
adc
pushf
dec
fs
nop
mov
inc
mov
xchg
out
xor
adc
mov
icebp
xchg
inc
fdivs
push
in
push
cs
loope
aad
jnp
ljmp
imul
xchg
push
jne
pop
and
sbb
lret
xchg
mov
jge,pn
sub
sbb
into
scas
or
fdivr
fsubrl
movsl
ljmp
mov
mov
in
pusha
xchg
stos
ret
push
cmp
dec
bound
lret
pop
testl
out
cmp
loope
ljmp
pop
dec
push
nop
shlb
in
in
stc
xchg
mov
or
lcall
rdseed
rolb
mov
movsb
dec
nop
pop
cwtl
fwait
scas
adc
dec
repz
lahf
dec
xchg
test
int3
mov
lcall
lahf
dec
cmp
pop
sub
mov
cmpsl
jno
xor
jb
xchg
sti
je
insb
stc
xor
mov
int3
sbb
icebp
lds
sub
aad
cmp
jo
sbb
cmc
nop
sub
xchg
add
mov
dec
dec
mov
pusha
inc
add
jge
inc
sub
push
cs
lock
mov
push
mov
ret
outsb
jo
add
divb
stos
cmp
lea
nop
jle
mov
jg
jbe
enter
xchg
cmp
push
xor
shlb
mull
push
cli
pop
insl
fcomps
or
loop
sbb
inc
mov
popf
sub
jns
movsb
sahf
mov
fwait
mov
mov
sub
mov
cwtl
int
iret
pop
pop
sub
sbb
loop
int3
fimull
scas
outsl
loopne
fildll
test
es
stos
aaa
xchg
pop
fs
outsb
sbb
aad
and
cli
jnp
adc
in
jmp
inc
or
insb
les
insl
insb
jae
or
push
mov
popa
enter
fcoms
or
shrl
inc
aas
int
inc
or
xor
push
lret
push
add
rolb
bound
mov
jp
iret
inc
or
out
lods
xchg
loop
adc
pop
push
cmp
xchg
sbb
clc
mov
std
xor
or
shr
fs
imul
cmc
subl
test
dec
jg
push
js
imul
test
sbb
xor
dec
popf
xchg
loop
stos
scas
add
adc
xchg
mov
lcall
push
movsl
xlat
testl
test
dec
push
xor
push
aaa
jae
in
mov
jno
jo
int
pushf
push
push
mov
mov
jge
inc
jmp
cmpsb
sarl
xchg
aam
loope
jmp
loope
lods
pop
mov
scas
mov
jb
adcl
imul
push
ja
mov
fcmovnbe
cmp
mov
pop
xchg
dec
mov
lods
pop
mov
lret
cmp
loope
sub
push
aas
dec
push
fnstsw
cli
inc
pop
inc
divpd
lret
std
xchg
adc
sub
cli
ja
xor
cmp
pop
icebp
jle
cltd
jo
fstp
mov
aam
mov
or
daa
adc
jne
jge
cmp
mov
addr16
aas
xchg
xchg
rcrb
stos
inc
mov
mov
hlt
in
call
pop
add
cmp
out
push
pop
mov
loopne
ljmp
js
loop
add
mov
shll
stos
lods
push
fiadds
push
in
clc
sub
ss
add
movsb
test
pop
ss
inc
idivl
mov
std
lcall
and
pop
rcr
dec
sub
lcall
sub
or
add
leave
xor
das
xchg
fcoms
mov
xor
repnz
adc
leave
ss
mov
and
xchg
inc
cmpsl
xchg
xchg
pushw
or
rorb
cmpsb
mov
adc
ss
cs
or
sub
notb
lea
mov
clc
cmpsl
in
into
dec
xlat
popa
lret
mov
leave
out
mov
mov
xchg
iret
insb
pop
and
movsl
repz
cwtl
cwtl
jno
mov
aaa
dec
dec
push
repnz
test
adc
std
mov
fistpl
aaa
stos
cltd
shlb
push
jge
test
gs
cltd
loop
pop
xchg
arpl
pop
dec
sub
mov
icebp
sub
ljmp
dec
sarb
inc
sbbb
mov
out
or
arpl
pop
outsb
adc
push
jle
inc
gs
movsl
add
sbb
lea
mov
movsb
ljmp
push
shll
int
pop
test
or
adc
lcall
scas
insb
dec
popf
outsl
test
les
jmp
push
fldl
and
out
cli
shrl
xor
xchg
mov
fisubl
mov
mov
xchg
rcr
loop
jns
jns
xlat
pop
mov
and
inc
inc
mov
addb
jge
push
cltd
cmp
outsb
lods
inc
inc
adc
mov
push
cld
icebp
cmpsl
out
cmp
mov
mov
pop
lds
rcrb
cli
push
clc
jmp
and
adc
sbbb
cmpl
push
in
mull
mov
cmp
jo
mov
ret
pusha
lcall
xchg
fs
xchg
daa
jg
cmpsb
out
nop
lcall
enter
cmpl
sub
cmpsb
pop
stos
pop
in
nop
sbb
xchg
push
js
xor
lods
jl
outsb
cld
dec
cmpsb
jne
loopne
and
adc
mov
addr16
ror
clc
sub
jmp
inc
and
into
and
mov
std
jle
repnz
adc
xchg
xchg
mov
rorl
jo
lea
sub
pop
inc
ja
test
sub
sbb
add
aad
bound
mov
rcr
out
lea
mov
test
xor
ljmp
icebp
aam
xchg
mov
imul
test
and
xor
pop
xchg
jnp
call
xchg
jne
stc
push
adc
or
push
pushf
mov
adcb
sub
jg
jg
lods
mov
aam
mov
aaa
insl
and
jnp
sub
cs
scas
xor
cltd
dec
inc
mov
xchg
fsubr
loope
lret
xchg
pop
jg
or
hlt
push
push
pop
mov
mov
js
mov
push
add
add
sbb
in
inc
test
xor
mov
xor
mov
aam
out
fsubrp
fcoms
cmp
cltd
cmpb
add
aas
enter
push
push
repz
mov
pop
inc
loop
mov
adc
out
xor
mov
pop
jne
cld
xchg
pushf
cmp
in
shlb
flds
mov
jmp
push
add
popf
mov
out
int3
cmpsl
jne
movsb
fidivl
ds
gs
int3
out
cmp
lods
loop
inc
cmc
adc
adc
pop
push
sub
mov
jge
ret
incb
and
push
xor
inc
push
sub
out
btr
mov
inc
out
cmp
jg
test
mov
vdivpd
pop
dec
cs
mov
dec
add
into
in
cwtl
outsb
out
xchg
in
mov
les
adc
sbb
stos
or
ret
mov
lods
jmp
mov
sub
pop
in
push
mov
pop
push
xchg
pop
shll
jnp
and
inc
mov
push
mov
or
sbb
mov
mov
mov
mov
sub
mov
or
pop
cmpsb
ds
jge
push
add
int3
xor
cltd
int3
inc
lock
xor
outsb
pop
mov
xor
add
sub
shlb
adc
xor
aad
jecxz
enter
js
sub
cmp
and
lods
daa
xor
mov
mov
and
cwtl
and
out
add
xor
movsl
adc
roll
lods
lcall
out
shrl
push
subl
cmp
dec
mov
cmp
scas
shr
iret
mov
inc
adc
pushf
call
cltd
sbb
inc
mov
jle
sub
int3
inc
js
loope
mov
xchg
and
shll
or
vmovdqa
adc
lods
and
inc
mov
stc
ss
push
hlt
mov
cmp
xor
test
out
inc
adc
jl
repz
hlt
add
lret
decb
pop
andb
cmp
push
lea
int
cmc
icebp
scas
mov
or
fdivs
lods
sbb
xchg
mov
mov
xchg
adc
call
fwait
divl
and
outsl
sub
fdivr
out
adc
push
sarb
sub
adc
mov
out
pop
lahf
xchg
mov
rorb
jns
shlb
dec
popa
rcl
out
sub
push
shrl
xchg
stc
shlb
ret
leave
pop
hlt
ret
push
push
inc
stos
cs
aam
jns
or
jo
dec
cmpsl
mov
sbb
and
mov
out
addb
xchg
push
push
icebp
pop
jmp
pop
mov
dec
pop
filds
lock
xchg
daa
mov
mov
sbb
xchg
sbb
xchg
ret
dec
adc
xchg
jecxz
sarl
push
and
out
jae
pop
or
test
inc
repnz
sbb
mov
aaa
les
ds
shll
sbb
mov
aaa
dec
icebp
dec
or
pop
aad
test
xor
add
jg
repz
dec
dec
rcl
push
negl
pop
jne
lods
notb
or
in
lods
cwtl
pop
cmp
mov
sub
cmc
jge
mov
scas
lcall
nop
faddl
xlat
fprem
fists
push
mov
xor
cmc
call
or
and
adc
fdivs
push
pop
add
das
into
out
mov
add
stc
cmpsb
cmpl
and
xchg
push
mov
in
mov
xchg
add
pop
jmp
sub
jns
inc
inc
add
stos
mov
inc
int
and
xchg
dec
arpl
or
ss
push
ds
xchg
in
imul
aad
pop
xchg
cmp
push
jl
cmp
lods
push
cmp
and
jnp
dec
ss
mov
xchg
cvtpi2ps
ficompl
je
lcall
shrb
xchg
loope
daa
dec
mov
cltd
cmpsl
inc
dec
adc
insb
fbstp
xor
ja
sti
pushf
dec
pop
in
adc
outsl
repz
push
iret
and
lods
daa
test
or
mov
sarb
orl
push
xchg
stos
bound
xor
mov
cwtl
call
jae
adc
enter
adc
sbb
push
repnz
jl
aad
aam
cmpsb
mov
add
mov
mov
jg
nop
pop
jbe
aaa
leave
in
divb
sbb
out
jecxz
out
inc
mov
adc
xor
in
pop
fldcw
loop
outsb
out
jns
add
ds
mov
icebp
pop
shll
add
cld
xchg
xor
cmpsl
pop
addr16
fucomi
adc
jmp
pop
call
in
loop
cs
insl
jae
or
cmp
xchg
mov
inc
loopne
pop
arpl
sbb
adc
add
fwait
fwait
pop
das
lcall
out
cmp
mov
mov
add
pop
addr16
sbb
jl
fst
shlb
nop
mov
and
sar
jecxz
dec
imul
xor
int
decl
movsb
pop
loop
ds
sar
add
jp
orb
xchg
fcompl
cltd
and
mov
hlt
mov
in
pop
inc
cltd
dec
das
in
dec
sbb
push
das
jp
mov
jb
dec
negl
and
fnstsw
negl
fcomps
xor
pop
inc
test
inc
loope
cs
test
pop
jne
cmp
negl
in
pop
das
fmuls
int3
dec
adc
mov
xchg
sub
push
adc
stos
lret
out
int3
dec
scas
dec
sti
push
pop
stos
mov
mov
push
rorl
jno
jnp
iret
adc
push
sub
sbb
sub
cld
add
inc
xor
pop
outsb
sub
arpl
cmpsb
test
pop
arpl
sbb
sbb
mov
sub
lods
out
lret
xchg
xor
or
mov
push
mov
add
ds
push
or
int3
bound
and
xchg
jg
sub
pop
and
xor
inc
imul
subb
lock
jle
adc
clc
xchg
mov
add
hlt
dec
xor
mov
daa
clc
mov
dec
xor
ror
js
or
int
xchg
dec
imul
das
xlat
ds
lods
pop
xor
subb
push
ljmp
scas
sbb
je
out
adcl
cli
mov
aas
nop
jbe
cmpl
sahf
ret
mov
orl
ljmp
scas
mov
ret
mov
mov
adc
lret
jp
cmpsl
mov
xchg
push
push
gs
jno
imul
and
rorb
inc
jecxz
out
xchg
jge
mov
xchg
repnz
jecxz
mov
lahf
stos
in
fidivrl
outsb
in
mov
cmp
dec
push
scas
mov
lea
out
fnsave
in
subl
hlt
add
add
jne
push
lret
lea
shl
mov
ljmp
sub
mov
pop
mov
ret
insl
mov
sahf
mov
inc
jo
and
xlat
sub
cltd
jmp
cmp
push
test
jns
cmc
sbb
outsl
ljmp
or
push
hlt
hlt
out
std
sub
std
xor
insb
fildl
and
xchg
hlt
imul
ss
jb
jp,pn
movsb
push
pop
xor
outsb
loopne
sbb
fnsave
sbb
push
mov
push
fsubl
push
lea
add
sub
fucom
fidivl
mov
popf
dec
mov
fs
fidivs
dec
stos
mov
and
lret
and
je
adc
mov
movsl
adc
cwtl
rol
fwait
mov
jae
mov
jne
sbbb
jg
mov
sub
xchg
aad
das
lods
mov
stc
pop
xchg
and
scas
and
and
jmp
cmp
xor
btsl
test
mov
mov
adc
mov
mov
scas
fdivr
xchg
stc
xchg
mov
dec
cmp
je
lock
inc
pop
xor
scas
fildl
lods
insb
or
hlt
mov
adc
aam
faddl
loopne
mov
adc
jb
sub
sub
xlat
adc
stos
lods
lret
lock
jg
sub
sub
add
sti
adc
or
jecxz
sub
addr16
lahf
popa
test
outsb
sub
pop
cmpsb
in
adc
lock
mov
fwait
xchg
lcall
jnp
inc
cltd
cltd
mov
loopne
aam
cmp
jmp
sbb
popa
jl
inc
cmc
inc
adc
mov
sub
push
lds
xchg
jns
xchg
iret
xor
aaa
or
mov
ret
ret
xor
dec
das
sti
inc
mov
cmp
popf
push
lock
pop
js
int
cltd
in
insl
aas
cmc
lods
adc
mov
fildl
xchg
aaa
xor
insl
adc
mov
rcll
inc
or
loopne
test
std
pusha
shl
into
xchg
inc
mov
dec
push
xchg
inc
cmpsl
mov
movsl
sarl
mov
inc
sahf
rcrl
pusha
dec
lcall
stc
movsb
xor
xor
and
and
mov
cltd
pop
or
mov
inc
enter
clc
addb
lahf
jo
scas
push
movsb
in
sahf
movsb
push
or
push
lahf
ja
push
cmpsb
xchg
push
std
mov
repnz
dec
cmp
jecxz
icebp
aad
jg
xchg
in
ss
sti
mov
insl
fistpll
cltd
push
test
and
and
push
in
js
stc
lret
or
sbb
pop
adc
sub
stos
xchg
das
cmp
sub
out
pop
ds
mov
shr
into
aas
dec
inc
jbe
adc
mov
pop
mov
push
fisubs
outsl
mov
xor
enter
in
lahf
mov
sbb
popf
push
cmp
into
lock
lods
or
mov
xchg
or
cs
add
aaa
lret
sbb
fdivrs
mov
lods
popa
sub
mov
sub
loope
mov
dec
loopne
loope
mov
sbb
cmp
insl
inc
lahf
mov
sbb
insl
stos
sbb
jnp
into
fnstcw
push
cwtl
repnz
sub
xlat
pop
xor
repnz
sbb
shlb
popa
push
pusha
xor
pop
aam
ret
lcall
cmp
notl
mov
mov
or
sti
in
test
movsl
adc
cmp
outsb
int3
popf
dec
sbb
cmp
pushf
sub
lds
sub
jge
div
sub
enter
dec
jecxz
inc
mov
stos
or
fnsetpm(287
mov
and
push
push
pop
jl
mov
sarl
ret
xlat
jle
sar
inc
sub
adc
xor
int3
jns
aaa
push
jno
aad
dec
stc
sbb
adc
xchg
adc
test
and
mov
in
add
inc
repz
iret
pop
in
bound
insl
in
mov
jge
sub
call
dec
jbe
xor
sbb
outsl
mov
das
shll
out
popa
lcall
adc
cld
jmp
stos
add
mov
mov
pusha
clc
push
pop
pop
imul
cmp
bnd
pop
rcll
jno
or
fdivl
sbb
xchg
sub
inc
xchg
scas
push
push
pop
nop
into
mov
testl
and
mov
shll
push
enter
jns
ss
hlt
mov
shlb
test
pop
adc
out
scas
dec
push
and
dec
lret
mov
pop
je
test
jbe
repnz
xor
cmp
out
out
xchg
imul
mul
mov
lcall
pop
repz
pop
inc
mov
xor
and
sub
mov
aaa
sahf
xor
nop
negb
outsw
out
fcoms
xlat
pusha
fdivrs
movsl
push
insl
arpl
push
ljmp
pop
mull
mov
xor
imul
insl
es
xchg
hlt
outsl
test
in
push
sbb
sti
sbb
cmp
add
adc
or
in
into
test
lods
lahf
bound
jbe
mov
cmpsb
ficoml
lods
std
into
push
cs
into
jmp
xor
pop
mov
call
aaa
jb
shll
jge
mov
in
xchg
push
das
sbb
in
cmp
mov
daa
aam
es
mov
pop
in
mov
jecxz
insb
dec
mov
or
mov
mov
aaa
jecxz
pop
mov
cld
sub
jo
mov
outsl
push
ret
data16
nop
lcall
gs
dec
adc
sbb
inc
cmp
shrl
mov
jo
dec
pop
fbld
in
mov
imul
add
bound
fstl
lds
mov
sub
pop
push
xor
xor
add
pop
in
sub
sub
xchg
and
pop
mull
fistpl
dec
in
loope
das
call
addl
and
push
loop
add
sahf
loope
mov
test
cmp
jae
inc
inc
je
rolb
mov
xorl
cmp
jbe
inc
imul
stos
nop
inc
cmp
enter
lret
arpl
clc
divb
mov
subb
mov
sub
arpl
sbb
xor
inc
mov
insl
and
push
imul
mov
mov
aas
sub
pop
jae
in
inc
mov
dec
insb
test
jns
test
add
pop
daa
mov
mov
into
xchg
lret
inc
adc
out
sbb
sub
push
pop
push
outsl
rcl
nop
dec
adc
inc
pop
pop
sub
jg
popf
xchg
jb
sub
jg
lcall
xor
xchg
in
shlb
fiadds
fcomps
pop
rcr
aaa
xchg
jle
dec
mov
loop
mov
or
filds
xor
pop
lods
mov
rorl
test
outsl
loop
imull
dec
add
sbb
inc
lahf
sbb
mov
or
bound
outsb
test
fadd
call
mov
aam
subb
pop
scas
xchg
sbb
add
adc
dec
mov
pushf
sbb
cmpsb
in
push
cmc
lods
fldt
add
dec
rcll
sarl
push
mov
outsl
xchg
leave
mov
ficoml
pop
das
loop
sub
dec
and
jnp
in
pop
pop
jae
jl
mov
xchg
cli
xchg
outsb
leave
lds
fisubrl
movsb
cmpsb
into
sar
mov
ret
pusha
inc
dec
jl
aas
loopne
push
dec
movsl
imul
mov
xor
lds
or
pop
pop
dec
lds
or
sub
out
mov
and
adc
sahf
push
loop
fnstenv
sbb
mov
cmp
dec
imul
sub
xchg
xlat
cmp
pop
arpl
clc
stos
scas
sub
cli
pop
roll
mov
shlb
pop
cmp
lock
xor
dec
les
inc
dec
fldl
outsb
xchg
jnp
imul
imul
mov
lock
stos
cs
sbb
sarl
aad
cltd
sbbb
add
aad
mov
scas
cld
ja
arpl
aad
in
dec
sbb
insl
mov
es
test
lock
mov
enter
dec
ret
stc
pop
mov
mov
push
pop
scas
push
or
pushf
test
fs
mov
pusha
shlb
test
push
jb
sti
mov
mov
xchg
push
scas
pop
mov
fs
enter
popf
clc
push
jl
neg
jno
pop
mov
jb
pop
xor
sub
jl
sub
mov
mov
lods
pop
add
add
mov
repz
std
push
loope
xchg
adc
push
or
scas
rcll
mov
leave
popa
mov
icebp
es
into
inc
adcb
pusha
mov
sub
and
sarb
repnz
jp
push
imul
dec
push
decb
cmp
repnz
aad
add
je
mov
into
adc
stos
push
xchg
mov
inc
inc
inc
fcomi
xchg
dec
stos
push
inc
lahf
pop
pop
push
pop
push
inc
add
cmp
and
scas
scas
filds
subl
lods
sub
sbb
arpl
pop
outsb
cs
jmp
sbb
subb
fbstp
pop
bound
repz
test
int
xchg
jecxz
jmp
aad
divl
add
into
loop
adc
or
out
mov
xor
mov
dec
cmp
int
mov
and
inc
adc
repnz
sub
and
sbb
in
or
ljmp
sbb
sarb
jbe
icebp
sub
jae
lods
cmpsl
dec
pop
stos
and
dec
and
sar
pusha
mov
orl
pop
and
dec
sahf
add
add
and
xchg
ds
cmp
cld
jl
cmp
loop
adc
xor
aaa
fsubs
mov
xchg
shl
repnz
xchg
inc
int3
jns
adc
fs
shll
push
jg
adc
sbb
jno
pop
xchg
lea
sbb
scas
gs
push
mov
adc
inc
int3
dec
mov
or
mov
pop
lahf
addr16
cld
icebp
ret
sbb
ja
jg
mov
mov
std
pop
xlat
mov
ficoms
xlat
addr16
mov
and
dec
movsb
sub
lods
jnp
lods
or
adc
push
loope
js
mov
inc
mov
sub
add
aad
jb
cmpsb
jmp
and
lods
shl
ljmp
mov
cmp
fmul
lods
pop
cmpsb
aam
fbld
cltd
aas
mov
lret
push
mov
pop
and
sti
stos
push
xlat
sarb
pop
dec
inc
mov
cld
ss
mov
ret
stos
mov
cs
in
mov
mov
aad
mov
insb
xchg
jo
mov
jb
push
xchg
lods
repz
hlt
test
inc
out
lods
push
adc
mov
dec
mov
jne
les
sub
movsb
push
xor
in
call
xor
xor
das
pop
cmp
inc
xor
xor
fstp
inc
fidivrs
call
lods
int3
xchg
mov
mov
inc
cmpsb
int
ror
cltd
sbb
pop
cmp
cmp
scas
sarl
add
xchg
or
and
xchg
popa
xor
mov
rcl
test
into
mull
sub
sarl
out
add
mov
push
pop
sahf
js
adc
or
ja
push
sub
pop
jl
mov
ror
sbb
push
data16
repz
push
hlt
std
jl
jp
or
push
jle
jp
or
mov
frstor
mov
test
pushf
jnp
push
push
cmp
hlt
lock
jbe
adc
je
out
mov
popa
data16
xor
leave
cmp
es
pop
cmp
and
insl
xor
dec
inc
cmp
xor
inc
rolb
cmpsl
fstpt
insb
cmp
sub
fcmovnb
xor
push
iret
repz
call
test
scas
sarb
xchg
push
daa
les
mulb
and
testw
pop
sub
sti
popf
xor
enter
movsl
mov
cld
leave
push
xor
lret
ret
xchg
hlt
outsl
pop
adc
int
pop
into
cmc
notb
cmp
adc
adc
pop
iret
sbb
enter
mov
ficoms
pop
push
test
adc
add
push
pusha
xchg
fwait
xchg
jno
cmpb
pop
push
sti
jge
push
adc
mov
inc
add
or
arpl
xlat
daa
lock
stos
or
jne
leave
add
in
stos
and
ja
mov
jnp
inc
jo
xor
add
iret
inc
or
int
jge
aad
jmp
sub
jge
pop
call
jge
jp
cmpsl
data16
clc
test
inc
shlb
cld
xchg
cmpl
ljmp
cltd
sub
inc
adc
sbb
cmpsl
cmp
sub
fidivl
jge
ljmp
dec
jns
test
adc
rorl
ret
loop
pop
xchg
xchg
les
mov
mov
xchg
add
shl
into
arpl
sbbb
in
fadds
mov
jl
pop
daa
dec
mov
xchg
mov
in
shl
cmp
sbb
mov
jb
cmp
add
jg
int
xor
lret
in
dec
jl
add
cmp
es
fwait
popa
in
fnsave
ljmp
roll
icebp
mov
jb
int
negb
ja
into
test
icebp
fdivrl
test
push
fcoml
ss
cli
jne
push
push
or
mov
shlb
cmpsl
popf
xchg
cs
jb
ljmp
fmul
xor
fidivs
inc
mov
push
add
push
test
icebp
mov
and
stos
cmp
xlat
push
aas
adc
iret
xchg
and
xchg
push
lcall
popf
ljmp
pop
into
adc
icebp
dec
fimull
xchg
xor
fnsave
jbe
stos
xchg
inc
adc
leave
adc
sub
adc
aas
hlt
call
push
fwait
test
stos
pop
out
mov
pop
mov
adc
push
dec
imul
xor
xchg
stc
fisubl
mov
jl
push
ja
lds
xchg
daa
data16
out
mov
jnp
arpl
jae
add
andl
enter
enter
aad
jns
cmp
mov
pop
and
mov
jae
iret
or
testb
dec
int
test
adc
push
push
fmuls
mov
sbb
cmpb
inc
mov
xchg
push
ljmp
push
popa
and
mov
cmp
test
push
ret
mov
std
xchg
cmp
cmpsl
push
test
add
pusha
hlt
and
rcrb
push
jns
incb
dec
sbb
pop
int3
and
xor
push
aad
sub
imul
fld1
sbb
addr16
xor
stos
jp
push
test
mov
add
pop
mov
scas
icebp
mov
or
sti
rorl
mov
repz
enter
neg
sahf
push
hlt
mov
add
icebp
je
push
push
and
pop
movsl
pmaxub
pop
mov
data16
jnp
outsl
in
repnz
cwtl
mov
rcr
add
movsl
fwait
test
test
scas
add
adc
mov
pop
add
or
ljmp
jp
mov
testb
pusha
mov
push
xor
test
in
xor
fistpl
call
mov
out
push
test
or
cmp
mov
push
daa
out
stos
cmpsb
outsl
pop
pop
jbe
jnp
into
lds
inc
xchg
fstps
cmp
lock
mov
or
xchg
xchg
pop
sbb
inc
mov
push
xlat
inc
mov
scas
pop
adc
test
xchg
pop
jle
ret
ds
xor
icebp
sub
sahf
pushf
rcll
stc
jb
sub
fsubrp
push
lds
aad
ds
mov
je
scas
mov
fwait
sbb
aaa
or
mull
mov
sti
inc
mulb
sahf
jo
jp
shrl
les
or
ja
mov
jecxz
inc
push
sti
xor
data16
mov
daa
xchg
icebp
jmp
xchg
js
testl
movsl
and
popf
imul
movsl
fwait
cmpsl
int3
push
outsb
std
or
fucomip
pop
cli
xchg
stos
les
push
add
push
test
add
sbb
stos
movsb
rolb
aaa
or
or
cs
or
rorb
push
push
fisttps
adc
or
jmp
adc
jno
pop
rcrb
mov
xchg
or
jmp
or
push
rorl
sub
leave
adc
arpl
cli
xchg
mov
jmp
cmp
call
lods
sbb
outsb
cmp
cld
xchg
dec
sti
mov
rcrl
pop
fstl
push
repnz
shrb
pop
push
add
mov
push
dec
xchg
mov
jb
xchg
aam
mov
jbe
sub
insb
sub
dec
outsb
xchg
xchg
fnstenv
loop
dec
arpl
pop
popa
pop
fldl
xor
ja
aaa
push
lahf
xor
add
mov
rclb
jle
add
out
cltd
mov
pop
mov
mov
popf
in
jge
cwtl
mov
sti
call
jno
add
jmp
xlat
push
push
pop
push
or
lds
pop
add
xchg
push
js
stos
xor
lds
inc
jg
add
inc
jae
add
and
xor
sahf
jmp
inc
fistpll
ja
xor
mov
bound
adc
mov
incb
cwtl
push
outsl
jl
or
sub
rorb
xchg
push
js
xor
and
xchg
and
jmp
pop
test
into
jl
jmp
push
xchg
repnz
inc
jno
mov
andb
mov
bound
lret
ret
cmp
jae
cmpsb
hlt
fisubrs
sbb
mov
mov
loope
mov
mov
test
repnz
jb
pusha
and
sbb
sub
jle
push
or
lock
mov
movsl
es
imulb
fidivl
adc
das
push
test
out
cwtl
addr16
cs
pop
int3
xchg
mov
cltd
clc
mov
sbb
and
ds
inc
inc
push
andb
xor
and
mov
loope
repnz
sahf
fcomps
push
pop
std
lds
lcall
jge
jge
insl
call
shlb
push
mov
cmp
mov
rclb
leave
loope
orb
dec
rorb
mov
hlt
push
jno
aas
push
cmc
sahf
pop
outsb
mov
mov
lea
in
rol
adc
les
or
jle
loopne
test
sub
jae
out
clc
adcl
stos
ret
clc
jo
addr16
xor
inc
sbb
and
test
scas
add
adc
mov
test
ret
outsl
das
inc
jge
out
lea
and
dec
arpl
dec
lret
pop
or
enter
xchg
sub
mov
icebp
pop
mov
xor
and
in
in
inc
cmpsl
or
jns
outsb
pop
repz
lods
outsl
popl
and
or
scas
loop
lods
and
sub
mov
lahf
sub
jmp
iret
rorb
in
cltd
popf
push
loope
jne
xchg
aaa
cmpsl
mov
mov
dec
fs
outsb
filds
add
lret
cmpsl
cmpsb
push
lea
fsubp
outsb
pusha
sub
mov
jp
xor
mov
dec
or
aaa
xchg
lods
inc
sti
addl
std
add
mov
fistpll
test
pop
dec
adc
shlb
and
ficoms
jo
lcall
push
repnz
ficompl
mov
and
test
fdivl
fadd
mov
xor
sti
pop
icebp
sbb
xor
sbb
push
sbb
jle
xchg
inc
sti
mov
xchg
popf
cmp
push
sbb
xchg
cmpsl
nop
leave
or
outsb
fldl
pop
sub
sbb
cld
ret
jo
fmull
outsl
mov
push
fnstenv
sub
rorl
testl
push
cmpb
ret
repz
pushf
dec
inc
sub
test
sub
loopne
pop
call
adc
out
dec
outsl
testb
pop
aad
jnp
add
fdivl
xor
std
inc
push
ret
xchg
add
mov
addb
mov
inc
mov
jns
test
mov
das
cs
jo
inc
mov
ds
jae
pop
jge
mov
roll
into
data16
xchg
stc
jecxz
or
sub
fnsave
and
cmpsb
aaa
xlat
xchg
dec
loope
dec
shrl
push
dec
jp
push
dec
pop
std
in
mov
stos
jnp
ljmp
or
mov
cmpsb
xchg
in
or
ret
rcrb
sub
mov
jne
jns
imul
pop
rorb
test
mov
icebp
test
fisubrl
inc
clc
and
stos
test
cmp
mov
into
and
xchg
insl
pusha
gs
ljmp
scas
or
repnz
sub
xchg
pushf
sbb
or
cmp
jmp
stc
mov
xchg
mov
rcrb
push
sub
push
rolb
daa
dec
push
sub
int
div
nop
inc
cmpsb
jmp
xchg
notl
loop
inc
dec
xchg
xchg
mov
add
dec
add
sub
fisubl
ljmp
xchg
ret
sti
fldenv
xor
mov
pop
pop
and
cmp
sbb
xchg
xchg
adc
movsl
mov
dec
addb
outsb
xchg
jb
and
xchg
repz
outsl
sub
enter
jp
sub
ljmp
movsl
jns
nop
pop
xor
inc
push
leave
and
leave
fsubr
ja
xchg
jle
adc
je
mov
xor
or
pushf
adc
roll
dec
push
lahf
iret
ret
cmp
jb
dec
cmp
xchg
sbb
sbb
scas
cli
add
mov
push
js
cmpl
sub
xchg
pop
jp
mov
jecxz
les
pop
pushf
das
mov
mov
mov
jo
imul
enter
jns
mov
jne
mov
daa
jg
shll
testb
or
pop
into
inc
stc
mov
sbb
push
pushf
cli
outsl
lahf
push
lock
fcompl
pushf
aas
lods
jge
out
add
pop
hlt
xor
pusha
xchg
or
int3
push
cli
adc
jmp
cli
pop
cmc
sbb
mov
xchg
icebp
and
or
xchg
hlt
addr16
icebp
inc
je
cmp
fcmovb
xchg
sti
mov
les
out
subl
pop
out
adc
mov
ror
lcall
xchg
sti
std
in
testb
test
dec
cli
mov
inc
push
mov
sub
shlb
adc
mov
leave
int3
ds
je
mov
mov
inc
xchg
xor
out
mov
push
popa
mov
les
mov
cld
xchg
ljmp
cmpsl
je
pop
or
in
xchg
imul
xchg
int3
icebp
add
or
or
mov
mov
in
pop
scas
mov
mov
pop
imul
mov
lods
das
scas
dec
lahf
xchg
test
mov
add
xchg
fwait
lods
jae
test
push
aam
add
jmp
int
xchg
dec
aas
rcrl
mov
xor
out
test
push
or
inc
fscale
cmp
and
xchg
jns
push
pop
fs
mov
ffreep
scas
jle
mov
fsubs
cmp
jno
call
loopne
pop
movsl
jns
insb
cmp
inc
movsl
adc
xor
nop
or
push
daa
stos
lcall
jnp
and
or
std
addr16
cli
negb
push
push
xchg
cmovo
mov
in
jecxz
mov
pop
jns
push
push
jnp
mull
mov
sub
cmp
mov
out
lret
repnz
ret
call
adc
test
out
mov
outsl
mov
add
imul
dec
sub
lock
movb
jns
mov
popf
and
pop
dec
pop
pop
mov
ljmp
ficoml
xchg
fistpll
sbb
jno
icebp
sub
mov
inc
aas
jmp
cmp
cmpsb
sahf
xchg
xchg
outsl
mov
sahf
lret
add
lock
out
lahf
and
push
sti
push
dec
or
push
pushf
clc
add
mov
sti
arpl
push
js
scas
dec
sbb
cs
ret
adc
enter
popf
nop
lods
aas
cmp
cli
insl
ret
sub
fdivl
mov
jecxz
mov
mov
mov
xor
dec
lods
dec
lds
mov
sbb
lret
sub
mov
sbb
sub
push
je
sbb
lret
lds
gs
xchg
sbb
xor
or
mov
sarb
xor
cmc
mov
pop
or
iret
sahf
les
test
xor
ror
out
dec
xor
inc
push
gs
cwtl
xchg
xlat
test
mov
loop
push
pop
inc
or
jb
mov
add
daa
cld
aaa
mov
fistl
mov
cltd
sbb
movsb
repnz
jge
adc
das
mov
mov
lret
push
adc
mov
ljmp
fmull
push
mov
dec
dec
pop
out
or
mov
push
dec
cltd
shr
xchg
cmovnp
pop
inc
mov
or
mov
iret
jmp
cmc
and
test
dec
xchg
popf
jae
add
add
stos
ds
mov
xor
hlt
dec
mov
mov
add
push
dec
dec
push
jp
pop
xchg
lret
imul
pop
cmpsl
sbb
or
icebp
scas
insl
pop
mov
cs
mov
sbb
ljmp
mov
ds
adc
mov
lret
arpl
daa
sub
add
loop
xchg
add
subb
in
adc
sbb
lcall
push
ljmp
int3
lret
insb
inc
and
mov
mov
dec
pop
and
add
test
mov
jns
lahf
mulb
push
bound
cmp
jge
push
or
loop
idivb
inc
stos
dec
and
xchg
jg
push
aaa
ds
inc
lea
aam
lcall
arpl
into
out
addr16
fwait
addr16
mov
mov
xorl
repnz
jmp
and
test
push
sarb
add
cmc
insl
and
iret
into
dec
cli
fnstenv
mov
dec
ss
mov
pop
jl
jae
fsubrl
add
fnsave
cmpsb
push
inc
jno
test
scas
dec
mov
inc
lret
push
jbe
test
adcl
dec
cltd
push
mov
sub
cmp
sub
xchg
xor
data16
cli
arpl
push
mov
jo
inc
jl
lahf
dec
scas
movsl
mov
icebp
sbb
out
imul
add
js
and
lcall
je
dec
sbb
sub
add
outsb
lret
mov
xchg
inc
add
xchg
lock
stos
xor
dec
mov
js
sub
mov
adc
pop
pop
push
jmp
xor
sub
out
push
scas
imul
and
std
or
lods
cmpsb
lahf
dec
pushl
scas
sub
xlat
loop
sub
rorb
pop
loop
xchg
pop
in
ja
or
idivb
addr16
push
dec
cltd
repnz
jmp
mov
das
xchg
popa
sbb
mov
xchg
insb
mov
adcl
mov
pushf
sub
cmc
dec
lock
pop
cmp
data16
nop
xor
cmc
cltd
mov
test
std
je
or
cltd
xchg
cmp
icebp
inc
arpl
jno
outsl
mov
in
xor
mov
xor
idivb
cmp
push
push
mov
sbb
mov
jmp
pop
popa
outsb
test
subb
inc
imulb
cmp
mov
in
sub
add
std
sbb
and
cmp
adc
dec
sub
mov
js
cmpsb
orb
lds
adc
fildll
xchg
popa
push
pop
int
jo
sub
inc
mov
dec
pop
cmp
xor
and
pop
add
sub
jo
xorl
xor
mov
outsl
aad
pushl
lods
push
paddq
push
loop
xchg
gs
test
mov
notl
stc
push
jl
cmp
fdivs
in
cwtl
sub
push
jecxz
clc
pop
inc
ficoml
mov
lock
pop
divl
fwait
mov
std
jmp
lahf
pop
scas
pop
arpl
dec
or
inc
scas
jl
mov
push
lock
fldcw
lahf
lods
es
or
push
sub
mov
mov
mov
insl
pop
mov
inc
ret
lea
test
push
sbb
adc
mov
mov
out
push
test
mov
jmp
inc
imul
inc
insb
add
outsl
loop
loope
mov
mov
mov
mov
pop
push
push
jnp
jecxz
mov
add
popf
and
scas
scas
jmp
fwait
sbb
nop
dec
jle
test
fldenv
and
cltd
je
fcmove
cmc
ds
repnz
outsb
sahf
add
shlb
into
pop
pop
mov
fcmovnu
pop
fists
subb
shlb
xor
adc
loope
jge
xchg
cmp
push
lea
mov
sub
adc
push
or
dec
fists
dec
jecxz
lret
mov
insb
push
dec
imull
mov
fs
or
mov
lret
sub
jg
pop
popf
imul
js
jnp
xchg
rorl
lcall
push
add
pop
daa
sar
xchg
xchg
add
mulb
inc
push
lcall
aad
jo
mov
call
mov
hlt
dec
fs
sti
push
jne
cltd
push
adc
int3
jo
mov
inc
and
xchg
inc
jne
hlt
cld
and
inc
or
xlat
in
jnp
mov
dec
cmp
cmp
jecxz
daa
cmp
cmp
push
loop
inc
fidivl
sarl
out
dec
add
test
xor
cltd
pop
cmp
add
rcr
rol
mov
mov
mov
aad
adc
sahf
cltd
shll
mov
out
test
test
rcrb
cli
push
and
jmp
fcomps
xor
fs
mov
push
rcrb
add
cmp
int
mov
jge,pt
jmp
mov
adc
and
and
xlat
push
fnstcw
cs
pop
hlt
sahf
jge
jbe
add
mov
push
repz
push
pavgw
xor
cltd
sub
fcmovnb
push
mov
cmc
pop
sub
sbb
jle
inc
lods
push
in
mov
inc
push
inc
xchg
pop
push
movsb
push
ret
fdivrs
mov
dec
and
mov
fldenv
push
stos
mov
add
clc
pop
and
data16
cmp
or
mov
xchg
inc
jle
pushf
popf
fs
pushf
test
push
loopne
fildl
add
scas
cmp
movsl
jne
arpl
mov
mov
lcall
addr16
push
loop
cltd
mov
sbb
sub
xchg
adc
popa
lods
dec
int
mov
lret
fstpl
cmp
cwtl
pop
sbb
mov
mov
lcall
pop
stos
adc
addr16
es
push
cmpsb
loop
mov
sbb
lock
sub
fwait
jmp
js
popa
cwtl
mov
inc
lods
loope
stos
xlat
rcrl
mov
add
imul
lds
add
inc
push
add
call
xchg
xor
ds
enter
push
push
test
arpl
testb
xor
add
xchg
sub
fucomip
push
emms
pop
rolb
or
xchg
mov
cmc
loop
dec
fcoms
pop
into
mov
test
lret
or
stc
sbb
shll
jmp
jnp
mov
mov
or
sub
cmp
stc
shll
pop
sahf
in
cmp
cwtl
and
imul
fiadds
or
lods
xchg
stc
mov
inc
and
cmc
in
sub
repz
push
fcoms
push
cmp
ljmp
jl
jb
fcom
jns
popa
popf
jecxz
jecxz
add
xor
pushf
in
fidivs
xor
enter
xorl
rcr
out
dec
cmp
fnsave
out
mov
frstor
aam
cld
sbb
jmp
inc
and
jg
mov
add
ret
arpl
divb
je
mov
repnz
mov
aad
aas
cs
adc
xor
mov
ret
mov
mov
mov
mov
cwtl
repz
std
adc
and
mov
pop
sub
aam
int
or
outsb
inc
and
and
icebp
int3
mov
cs
mov
aad
call
neg
or
mov
jne
movups
popa
int
icebp
push
sbb
sti
push
cmp
out
and
ja
add
pop
adc
fwait
or
les
hlt
xchg
fnstenv
lea
addr16
xchg
push
push
or
mov
cmp
fistpl
les
aad
sub
mov
mov
sub
cmp
call
mov
insb
and
nop
xchg
sbb
sbb
or
ret
mov
lahf
movsb
loop
ljmp
jb
and
pop
loope
push
lcall
test
mov
sbb
stos
out
sub
sti
mov
stos
sbb
aad
imul
mov
scas
cmc
cmp
fs
imul
lods
sub
or
pop
mov
xor
jb
rcr
mov
push
stos
jae
xor
rcrl
xor
pop
jne
ss
add
sti
mov
dec
pop
outsl
push
pop
and
cmp
mov
inc
jne
pop
dec
lock
loop
arpl
jp
test
dec
dec
fiaddl
fwait
mov
xor
cmpsl
mov
jg
hlt
xor
das
hlt
push
sub
mov
jmp
mov
or
xchg
xor
push
std
cmp
dec
pop
mov
andl
xchg
or
hlt
push
mov
push
aas
stos
xlat
push
dec
push
lock
std
test
sub
shl
pop
sti
data16
movsl
js
out
cmp
gs
data16
xlat
int3
mov
sbb
ret
nop
test
clc
inc
lcall
outsb
and
leave
mov
ret
jno
cmp
cmpsb
and
loope
xchg
and
mov
sahf
mov
cmp
pop
jno
inc
rcrl
push
mov
mov
nop
sub
icebp
imul
nop
out
xor
jge
loop
adc
fcmovne
inc
mov
jmp
mov
cmp
add
mov
je
cltd
push
cmp
and
pop
mov
aaa
rolb
sti
lahf
jg
mov
mov
popf
jecxz
out
pop
adc
xorl
lds
call
andl
cmp
push
xchg
out
mov
stos
nop
mov
mov
dec
les
push
dec
add
clc
les
out
jbe
iret
pusha
out
cld
scas
lods
roll
add
rcr
test
mov
jg
mov
into
inc
inc
inc
dec
fmul
jg
cmp
sbb
dec
mov
addr16
and
movsb
and
bound
jbe
mov
xchg
mov
ljmp
adc
mov
fdivrs
adc
jae
test
push
clc
push
push
xor
xchg
insb
call
push
in
ret
push
lock
and
jne
call
and
pop
adc
arpl
mov
shlb
mov
mov
dec
jl
les
lods
leave
pop
popf
sub
lahf
mov
dec
pop
pop
insl
mov
adc
scas
dec
push
std
addr16
testl
inc
mov
pop
insl
daa
insl
ret
sub
mov
dec
cmp
push
popf
xchg
mov
adc
sbb
cmp
lahf
in
les
xchg
jge
and
mov
cmp
cli
insl
out
or
pop
insb
xchg
int
sub
jmp
mov
addr16
xor
mov
xor
outsb
insl
or
cmp
call
jnp,pt
jle
test
out
dec
stos
pop
call
shl
mov
xor
jbe
mov
fwait
inc
adc
dec
xor
mov
xor
jno
stos
add
out
cmp
scas
out
and
and
dec
sub
in
pop
sub
inc
push
push
mov
add
inc
sub
xchg
push
out
stos
les
stos
cs
mov
into
dec
jecxz
cwtl
les
mov
mov
push
fldenv
adc
out
cmp
fiaddl
cli
int3
test
movsb
sub
sub
scas
sbb
in
cld
mov
xchg
mov
mov
adc
gs
mov
push
push
movb
imul
mov
jg
and
push
mov
into
add
mov
inc
loopew
popf
mov
das
ret
push
mov
mov
sub
jae
bound
xchg
mov
push
add
je
in
jl
mov
pop
jno
stc
mov
es
and
adc
fidivs
fs
xchg
aad
js
sub
xchg
lods
push
xchg
into
push
mov
inc
fsubr
das
push
stos
xchg
scas
adc
or
cmpsb
sbb
ss
ret
mov
jge
fwait
push
addl
mov
cwtl
jge
jle
sub
mov
sub
loopne,pn
popf
add
scas
xlat
es
jne
outsl
mov
iret
testb
les
dec
mov
pop
mov
std
repnz
sub
push
inc
mov
insl
pop
jbe
or
mov
js
movsl
test
push
enter
pusha
pop
cmp
in
mov
shl
lods
mov
mov
sub
jmp
imul
pusha
add
fdivl
nop
cmp
mov
xchg
pop
cmp
cmpsl
fimuls
pop
jo
push
mov
sbb
dec
jo
leave
fadds
mov
in
ss
sub
mov
cs
rep
mov
test
xchg
adc
pop
xchg
sar
add
pop
popf
sti
insb
in
xor
out
mulb
cs
ds
push
jle
mov
pop
clc
and
and
dec
mov
xchg
mov
cmc
sbb
stos
fsubr
sbb
push
ljmp
or
leave
in
mov
cmp
pop
cmc
lss
mov
and
xchg
call
aam
mov
jae
leave
add
bound
mov
jns
and
mov
dec
cmp
inc
jo
es
mov
mov
daa
adc
xor
hlt
xchg
les
into
ss
daa
jae
pushf
sbb
mov
xor
cmp
and
inc
jle
inc
jmp
push
pushf
mov
in
test
sub
fwait
adc
cmpl
mov
in
inc
mov
gs
lea
xchg
ret
or
test
idivb
in
xchg
cmpsl
push
xchg
push
out
mov
mov
lods
mov
inc
mov
rol
jecxz
dec
inc
inc
xor
scas
sbb
cmpsl
ja
fbld
mov
inc
mov
dec
cmp
and
inc
repz
je
arpl
or
inc
into
outsl
sub
out
cmpsb
add
push
dec
cmp
les
out
and
mov
xchg
dec
jge
lret
mov
xor
and
mov
movsb
jnp
push
xor
pop
jns
lea
sub
jnp,pn
mov
pop
push
sar
sub
jp
and
xor
add
mov
pop
lds
dec
or
imul
pop
and
das
adc
add
xchg
mov
adc
ret
lret
jbe
not
mov
and
int
cmp
ds
sub
std
add
push
jbe
adc
add
push
aam
xchg
and
sbb
xor
mov
xorb
add
push
xor
gs
xor
nop
pop
mov
adc
test
inc
lods
push
in
jae
push
ss
jmp
xor
mov
or
fwait
sbb
outsl
inc
roll
lret
cmpb
fsts
into
inc
adc
pop
or
pop
clc
mov
movsl
push
jns
bound
test
cmpsb
cmc
pop
push
add
fldcw
outsl
mov
push
pusha
int3
cmp
xor
movsl
mov
push
mov
cmc
xor
adc
movsb
jns
xchg
push
out
and
push
pop
test
xorl
add
insb
inc
dec
scas
jle
sar
push
push
fldl
cmpl
repz
inc
xchg
pop
jns
loopne
push
out
jecxz
pusha
xchg
inc
cmp
push
rol
sarb
push
icebp
jae
jg
xchg
cli
xchg
or
addr16
jae
inc
dec
lds
jno
rorb
push
dec
mov
cmc
sbb
cwtl
jl
cmp
pop
rorl
stc
push
mov
insl
leave
jno
ja
pop
mov
or
jge
pop
imul
stos
xor
jle
mov
mov
repz
and
adc
outsl
jp
jo
or
cmp
leave
nop
xor
adc
lods
mov
dec
mov
adc
fsubrl
out
mov
pusha
testl
sbb
add
shl
xlat
mov
daa
scas
pop
cwtl
cmp
sub
mov
outsl
add
lods
pop
add
arpl
and
out
xchg
push
dec
js
out
outsb
mov
loope
pop
test
repnz
sub
sub
dec
dec
icebp
popa
mov
adc
dec
inc
sub
push
mov
sbb
push
aaa
mull
pop
int
mov
pop
xchg
sbb
lock
adc
fiadds
cmpsb
in
or
jae
fnstcw
sarb
xlat
inc
loopne
cwtl
dec
fstps
cmp
je
cmp
adc
xchg
cmc
xor
fsubs
lcall
inc
inc
fnstenv
lahf
repz
outsl
fnsave
mov
and
mov
sub
lcall
loope
or
les
and
mov
clc
movsl
push
mov
mov
sbb
shl
in
cld
in
aaa
repz
xchg
xchg
stc
sub
mov
fs
daa
in
lds
sbbl
cld
jmp
loop
movsl
pop
outsb
outsb
insl
jge
or
xor
je
repz
sbb
adc
rcll
sub
int
sbbl
sub
aam
mov
outsb
in
pop
jbe
mov
xlat
xchg
push
push
icebp
in
les
xchg
sar
imul
jmp
repz
inc
je
inc
and
stc
lea
xor
mov
jmpw
mov
or
inc
and
xor
sbb
adc
lahf
mov
dec
adc
adc
adc
or
rcll
sarl
mov
insl
ret
cmpsl
outsl
jnp
xchg
xchg
mov
sbbl
ja
push
mov
out
mov
xlat
rcr
pop
push
adc
xor
cmp
outsl
out
xchg
je
jge
inc
pop
cmpsl
adc
and
adc
inc
push
or
adc
out
jge
lahf
push
mov
scas
call
mov
loope
push
dec
lea
xcrypt-cfb
cmpsl
and
xor
ror
mov
js
xor
stc
cwtl
jl
add
jp
dec
mov
cmc
cltd
jbe
pop
sbb
test
pop
sbb
aam
mov
imul
jmp
aad
cld
xor
add
dec
pop
je
push
fld
lock
mov
dec
or
loop
mov
push
pushf
scas
int3
xchg
into
popf
jge
push
dec
xor
inc
sbb
push
lea
push
add
sbb
cmpsl
xchg
cmp
cmp
and
adc
test
mov
push
arpl
sub
pop
insl
mov
movsl
inc
repz
cmp
cmp
push
jp
mov
out
lretw
fcmovne
test
push
repz
mov
int3
repnz
js
outsl
inc
cmp
jle
shrb
icebp
outsl
mov
loope
lea
xor
hlt
cmp
icebp
mov
pop
ja
enter
push
mov
mov
add
xor
out
mov
and
loope
mulb
or
loope
add
pop
dec
int3
cld
and
lods
stos
mov
add
out
fsubrs
sub
mov
jmp
cld
pushf
jp
fsubs
sahf
mov
je
arpl
out
inc
and
adc
xchg
mov
ljmp
mov
movsl
push
inc
iret
cs
or
adc
sub
orl
stc
js
inc
sbb
es
mov
cmpsl
adc
cld
lahf
fmull
icebp
shrl
mov
stos
push
stos
fstpt
or
push
negl
inc
imul
cmp
fnstenv
jnp
dec
or
popa
sbb
les
mov
lea
lcall
jns
xor
fistpll
fmull
int3
add
sbb
push
sbb
push
imull
push
orl
push
leave
push
or
fsub
cmp
fcoml
insl
mov
xchg
and
jae
xchg
pop
mov
adc
xor
loopne
cltd
mov
repz
xchg
cmp
pop
cmp
loop
push
scas
mov
pop
sbb
adc
and
push
aas
lods
pop
inc
xor
aad
jae
roll
std
push
jmp
and
decb
xor
pop
pop
jle
shlb
cld
lahf
in
scas
imul
nop
mov
jmp
mov
mov
pop
out
rcrl
lea
xor
sub
in
mov
cmp
push
cli
ja
mov
mov
hlt
jmp
js
out
test
mov
js
sub
dec
insb
repz
subb
jp
lods
int
test
ljmp
dec
pusha
cmpsl
sbb
pop
out
cmp
das
fsubp
mov
pop
fidivrl
mov
inc
inc
iret
xchg
mov
in
rorb
and
add
mov
inc
stos
cmp
enter
and
iret
in
or
iret
push
fldl
xor
andl
inc
or
jns
dec
mov
aam
push
sbb
into
pop
mov
pop
aad
push
add
xchg
mov
pop
xchg
lds
xchg
sysret
xor
rol
enter
jmp
mov
xor
sub
jle
pop
cmp
fidivl
scas
pusha
je
popf
sub
scas
out
dec
mov
call
mov
sbb
pop
mov
sbb
rcrb
ficoml
lahf
and
jne
mov
push
push
push
imul
inc
xchg
cmp
pushf
and
dec
int
sub
add
xor
xchg
or
test
popf
cltd
xor
outsb
stc
rcr
mov
adc
loope
addr16
cmp
mov
cwtl
aaa
shrl
scas
ds
subb
mov
ds
fimull
call
adc
test
in
inc
lcall
pop
inc
adc
mov
push
add
jne
repz
add
fs
int3
mov
xchg
sahf
ds
add
mov
fistl
fldenv
mov
pop
out
testl
dec
jp
pop
mov
movsb
in
pop
jecxz
pushf
cs
or
dec
ljmp
cmp
cmp
icebp
cli
push
inc
test
data16
mov
push
jmp
jp
inc
dec
and
pop
mov
stos
sub
std
jns
mov
mov
adc
notl
shr
pop
push
leave
pop
inc
out
or
cli
jl
fisubrl
pop
and
sub
mov
outsl
inc
pop
cmpsl
push
cmpsb
fadds
cmp
adc
cmc
or
mov
and
inc
frstor
xlat
lret
cli
push
je
dec
xor
mov
iret
mov
mov
dec
roll
mov
es
add
push
gs
mov
mov
push
popa
xor
inc
scas
ljmp
fisubrl
pop
ds
jne
loope
fiadds
popf
outsb
adc
add
mov
aad
aad
mov
or
jb
cwtl
fwait
or
mov
dec
mov
outsl
stc
subb
ret
enter
out
in
sub
sub
out
ljmp
fisubrs
test
xchg
hlt
in
adc
and
pop
clc
xor
adc
loopne
inc
ret
shrl
popa
bound
movsl
fcmovnb
out
sbb
adc
cmpsl
sbb
mov
mov
sarb
add
loop
pop
es
cld
cmp
imul
pop
jns
ds
loope
and
mov
das
decl
or
mov
call
mov
and
xchg
mov
in
jl
nop
mov
cmp
mov
sub
movsb
add
aaa
arpl
mov
or
je
pop
sub
inc
xor
lods
dec
ljmp
lret
cltd
enter
fwait
jmp
inc
or
mov
out
add
sub
ljmp
in
test
in
or
mov
push
or
imul
push
test
out
aad
es
int3
or
in
in
sbb
push
stos
in
aas
sbb
std
aam
add
out
in
bound
xchg
pop
ljmp
andnps
inc
jne
and
repnz
or
dec
pusha
cmp
sbb
mov
int
enter
cmp
jecxz
cld
nop
leave
sbb
jmp
mov
push
mov
popa
inc
lods
mov
cmpsb
repz
pop
xlat
outsb
push
push
adc
sbb
shll
fs
lods
pop
sub
dec
inc
popa
and
lea
clc
ja
ficoms
pop
and
ret
jge
or
fbstp
shlb
in
cld
jle
fisubs
xor
sbb
test
movsl
sub
cld
xlat
inc
mov
movsb
cmc
and
or
je
and
aas
imul
fwait
mov
dec
cld
sbb
add
cltd
repz
xchg
fldenv
in
dec
rclb
sbb
sbbb
xor
outsl
xorb
sub
scas
xor
sub
rorb
out
mov
dec
mov
and
jbe
rclb
leave
sti
inc
lret
mov
scas
sti
loope
femms
cli
lret
push
call
ja
jecxz
hlt
pusha
pop
mov
insl
add
loop
aad
insl
cmp
ret
icebp
push
cmp
out
pop
xchg
shll
fld
mov
shll
push
inc
jl
sub
addl
es
int3
xchg
inc
xor
inc
mov
jp
mov
mov
adc
shll
movsb
sahf
dec
fcompl
test
cmpsl
mov
cld
shll
mov
sub
shrl
dec
pop
mov
inc
scas
bound
push
cmc
stos
sbb
add
movsl
data16
out
dec
jae
movsl
xor
sub
xchg
add
inc
icebp
test
nop
cmp
scas
sub
fcmove
dec
jns
ficoml
lock
out
pop
arpl
mov
jae
add
push
push
or
lret
sbb
bound
lds
std
and
and
popf
nop
xchg
inc
mov
xchg
les
cmp
push
and
rorl
sub
lea
rcrb
imul
fs
sub
add
daa
xor
push
into
subb
add
icebp
sbb
inc
pop
loopne
bound
rclb
ss
push
cwtl
int
cltd
pop
mov
xlat
xchg
sbbl
xlat
and
xchg
bound
int3
push
push
dec
imul
mov
pop
sahf
aad
mov
scas
mov
nop
xchg
push
push
addl
push
clc
xor
clc
inc
pop
popa
add
pop
cwtl
push
mov
cmp
lahf
and
repz
and
fs
ljmp
pushf
aas
aas
fsubrs
or
add
dec
mov
push
adc
jbe
loope
into
push
stos
ror
add
je
push
pop
cmp
jl
mov
inc
sar
mov
mull
aaa
pop
fldcw
insl
sti
xchg
lods
cwtl
sub
cwtl
lcall
inc
sub
push
dec
adc
adc
xor
or
repnz
ds
shr
loope
imul
sbb
repnz
movsb
push
jb
sbb
inc
cli
testl
roll
jno
pop
mov
adc
jmp
dec
out
pop
int
sti
sti
in
xchg
in
jmp
adc
cmc
jp
add
gs
sub
repnz
lods
mov
inc
cmp
fiadds
xchg
stc
inc
fwait
mov
repnz
and
mov
sub
mov
push
mov
mov
jg
mov
and
jg
mov
sub
data16
sub
arpl
movsb
or
xor
xchg
les
mov
outsb
loop
stc
mov
xchg
bound
push
mov
mov
int
jp
and
stos
adc
mov
popa
into
mov
xchg
mov
bound
ficoml
push
sbb
pushf
mov
push
scas
jns
mov
aad
pop
cs
enter
xchg
pop
cmpsl
mov
mov
test
into
mov
xchg
out
shl
test
xor
pop
or
popf
xchg
out
push
scas
sbb
sub
pop
int3
ret
push
notb
int3
aas
sub
jg
out
pop
lret
mov
cmpsl
sahf
jne
lret
pop
fstpt
movsl
or
gs
jno
insl
mov
cmp
xorb
sub
mov
je
enter
inc
push
mull
jecxz
jne
lret
ret
or
jo
mov
std
js
cs
int3
sub
dec
cmp
int3
dec
jbe
and
jne
pop
jmp
mov
loopne
es
icebp
inc
or
cltd
mov
jne
dec
and
mov
mov
clc
shll
ljmp
adc
repz
lret
lret
jo
cltd
sbb
sbb
mov
jae
daa
pop
not
cltd
or
fnsave
inc
mov
dec
ds
mov
mov
int3
jp
pop
cwtl
mov
push
xlat
jo
mov
mov
popa
out
adc
cmp
dec
pop
negb
inc
and
xchg
sub
not
movsb
loope
jecxz
mov
jp
mov
push
xacquire
cli
dec
pop
pop
push
fidivl
add
orl
sti
inc
loopne
push
ja
pop
or
call
loope
cld
add
adc
mov
dec
sahf
mov
push
xor
push
rcrb
roll
or
aad
inc
xchg
stos
xor
add
inc
stos
scas
outsl
sbb
dec
pop
addr16
fisubrs
fcomi
rorl
xlat
mov
outsb
ficoml
lret
repnz
out
jmp
fnsetpm(287
cltd
stos
xor
subl
ss
daa
lds
xchg
out
orb
dec
test
lahf
nop
cmp
sbb
jbe
out
mov
fnstcw
arpl
inc
stc
rol
mov
sbb
push
stc
stos
lea
sbb
xchg
inc
leave
pop
xchg
jecxz
pop
inc
imul
pop
rorl
pop
dec
mov
aaa
ss
movsb
and
dec
sub
adc
sahf
in
sub
push
and
inc
cmp
int
cmp
push
stos
inc
in
xchg
vpaddusb
adc
push
testb
aam
push
outsb
fisubs
ja
add
or
and
xchg
shlb
js
into
pusha
aam
inc
adc
adc
push
mov
dec
pop
lahf
stos
arpl
inc
mov
cmpl
mov
fidivl
rorb
pop
mov
or
inc
or
mov
add
xchg
in
clc
es
inc
data16
les
aaa
outsl
shl
sbb
mov
fwait
lahf
xor
cwtl
mov
add
fadd
outsb
ljmp
inc
cli
dec
stc
push
xchg
mov
push
cmpsb
cmp
imul
addl
push
push
hlt
push
xchg
enter
adc
bound
sbb
jnp
pop
xchg
test
or
mov
imul
sbb
pop
cmp
add
pushl
sahf
mov
cmp
insl
ss
adc
jns
sbb
rorb
pop
mov
bound
and
push
sti
das
mov
outsb
test
mov
xchg
aaa
aad
add
rol
pop
cld
xchg
lret
in
insl
outsb
dec
mov
into
xor
stc
cmp
scas
add
mov
adc
push
lods
stos
cmc
imul
andl
enter
icebp
jge
mov
adc
add
push
mov
xlat
push
dec
jne
add
cmpsl
jle
aaa
fidivrl
movsb
scas
and
lcall
adc
fistps
mov
cmpsb
jmp
adc
pop
xor
pop
sub
jnp
jg
jmp
xlat
testl
jb
sbb
addl
leave
mov
sub
push
add
xchg
mov
in
and
add
jp
pop
hlt
or
jae
xlat
out
scas
xchg
mov
add
push
cmp
adc
fcompl
add
orl
addb
cmp
mov
loop
fsubrl
or
jbe
ret
cmc
test
inc
dec
lea
mov
dec
push
mov
or
mov
sbbb
in
or
aad
sahf
cld
ficoml
mov
xchg
dec
pop
and
inc
int
xchg
push
dec
stos
movsl
dec
cs
rclb
rcrl
inc
loope
jle
lret
std
mov
add
repz
in
sbb
or
cmp
out
rol
add
inc
cmpsl
icebp
add
pop
cmpsl
sub
jno
xchg
inc
cld
js
adc
xor
cmp
push
sbb
in
xor
test
mov
mov
mov
dec
and
dec
mov
ret
pusha
xchg
fstpl
xor
scas
ficompl
fs
incl
clc
and
fwait
inc
ljmp
jnp
sarl
out
iret
jmp
sbb
in
frstor
fidivl
dec
jp
xchg
mov
push
push
loopne
push
loope
sub
imul
pop
inc
mov
jl
das
inc
loop
paddw
push
mov
stos
das
into
cmp
xor
cld
rcll
xchg
push
iret
pop
fs
stc
cld
aam
pop
fidivs
pop
inc
jae
push
shr
push
sbb
in
fldcw
insl
inc
sub
test
inc
add
movsb
aas
dec
rcrb
mov
mov
cmpsb
add
mov
add
pop
push
sub
dec
cmp
push
outsb
mov
scas
push
push
in
popa
lods
je
aas
mov
or
xchg
mov
ja
mov
cmc
push
pop
sub
stos
test
cltd
xor
sbb
test
xor
nop
jns
js
dec
push
mov
jne
mov
inc
inc
mov
xchg
sbb
aam
into
bound
add
imul
movsb
int3
push
das
stos
mov
add
sub
lret
repnz
je
mov
stos
sbb
mov
in
xchg
call
outsb
jg
addr16
das
push
xchg
mov
popf
sub
push
add
xchg
mov
cmpsb
dec
and
loop
stos
loopne
orb
negl
ja
sub
sbb
incb
mov
add
lock
stos
mulb
jnp
mov
sbb
cmp
sub
add
sub
lds
and
and
push
enter
add
lcall
jb
inc
push
mov
mov
push
xor
or
std
mov
call
mov
mov
jns
pop
fstp
cmp
cli
fs
cmp
ret
lods
loope
test
fnstcw
mov
mov
lahf
inc
push
mov
jno
and
xchg
ret
pop
jle
es
inc
ljmp
jae
lea
out
pop
add
imul
push
mov
pop
cltd
test
lahf
mov
inc
pop
inc
outsl
js
or
dec
and
mov
or
cmpsb
cmp
scas
loop
mov
outsb
ja
dec
mov
dec
orl
fwait
mov
cli
mov
jle
imul
xchg
stos
bound
xor
rcrb
cmp
sahf
jns
adcb
push
sbb
or
scas
pop
push
mov
loope
into
inc
bound
push
cmc
mov
pop
adc
in
in
xchg
popa
lret
out
in
pop
cmpsb
adc
cli
scas
jae
hlt
icebp
jnp
xor
dec
lock
inc
dec
or
inc
mov
xchg
sub
and
and
insl
fucomi
gs
sub
mov
shll
add
cmp
jge
callw
popa
call
insl
repz
jle
and
imul
es
pop
jo
inc
or
jmp
je
adc
out
pop
test
out
pop
pop
push
aad
xor
leave
ja
mov
adc
push
fimull
mov
data16
mov
jns
jo
xor
fnstsw
stos
inc
mov
ret
daa
movsb
loope
or
int
repz
sbb
pop
fwait
cld
mov
and
inc
enter
shr
aad
sub
mov
lcall
fdivrs
inc
mov
nop
jg
cmp
test
js
push
push
mov
in
sbb
add
imulb
mov
iret
pop
xchg
and
dec
test
stos
mov
fsub
jmp
test
popa
arpl
lock
ds
lcall
xlat
adc
xchg
into
ret
or
xchg
ret
les
addr16
mov
outsb
mov
add
in
test
std
imul
cmpsl
dec
mov
pop
jmp
filds
adc
inc
dec
or
imul
jo
fldenv
cli
pop
addl
jp
dec
int3
nop
xlat
sti
pop
sub
int3
sub
jnp
call
and
jb
xchg
int
xor
repnz
js
push
cmp
nop
aad
jp,pn
pop
xorb
sbb
jg
pop
out
sub
mov
jno
enter
push
pushf
or
inc
jmp
push
jbe
adc
add
cmc
fsubrl
outsl
sub
xlat
imull
xchg
or
mov
mov
jg
push
and
inc
inc
scas
pop
das
ficompl
mov
pop
sbb
sarb
aam
out
mov
pop
cmp
adc
jno
imul
fimuls
inc
lret
jl
sbb
mov
jae
lock
jle
cmp
sub
and
inc
inc
sub
push
lea
outsl
inc
and
lcall
cmp
jae
out
sbb
inc
mov
sti
aas
sbb
ss
pop
out
ds
out
ljmp
outsl
dec
imulb
mov
pusha
inc
rcr
pop
jg
pop
adc
neg
lock
pop
lds
pop
and
add
pop
mov
lret
outsl
daa
xor
or
dec
or
push
sub
jl
sahf
inc
lock
lret
xorb
adc
xor
pop
xlat
jle
aaa
shlb
aad
sub
out
or
shlb
ja
jecxz
cmp
out
lcall
jbe
subl
cltd
in
andb
or
mov
sbb
fisttpl
pop
jg
inc
lods
adc
jns
xor
pop
pop
dec
ret
adc
xor
es
dec
js
add
ds
xor
idivb
cli
mov
xchg
dec
subl
cli
aas
in
subl
std
fidivrl
adc
jns
jp
xchg
ljmp
arpl
inc
push
je
sub
pop
out
push
nop
or
push
and
sbb
sub
sub
sub
js
pop
xor
push
clc
data16
out
dec
xor
dec
fsts
jne
out
mov
inc
jae
mov
adcb
or
aam
pop
andb
sub
xchg
and
mov
outsb
neg
popa
xchg
dec
push
aad
push
mov
cltd
xchg
inc
movsb
outsb
stos
mov
dec
jns
insl
das
cld
sbb
stos
stos
push
sbb
dec
pop
adc
aas
push
sti
mov
test
mov
jns
push
fimuls
add
mov
or
sub
cmp
loopne
mov
jne
nop
dec
outsl
pop
lods
cwtl
pop
hlt
sub
mov
xchg
cmp
jmp
inc
clc
xor
and
outsl
mov
push
mov
dec
aas
sbb
xor
popl
pusha
es
push
dec
mov
jns
cli
or
inc
sbb
movsb
gs
pop
mov
les
mov
lcall
out
lcall
sbb
add
push
in
sub
adc
pop
repnz
fdivl
js
mov
mov
sbb
cwtl
jge
rcr
popa
into
fs
ja
aaa
test
inc
je
cmpsb
nop
mov
std
mov
pcmpgtw
sub
jg
pop
xchg
pop
push
cmp
pop
mov
cmp
out
lahf
mov
ret
sbb
mov
into
inc
mov
std
iret
push
xchg
movsb
enter
sub
out
xor
imul
rcll
fnstcw
pop
aas
test
mov
aam
gs
and
sub
jne
add
xor
mov
enter
in
mov
movsb
push
sub
rclb
lock
xor
dec
stos
sti
dec
xor
mov
das
in
pop
test
xchg
adc
ljmp
sub
test
sbb
mov
repz
inc
mov
sbb
pop
cmp
mov
test
lahf
sbb
pop
mov
mov
loopne
mov
mov
movsl
cld
ret
push
and
mov
cli
jmp
enter
test
push
adc
cs
xor
jne
or
mov
mov
pop
inc
imul
jecxz
sbb
mov
sub
sahf
popa
dec
insl
mov
mov
pop
aaa
mov
loopne
in
mov
push
jbe
bound
jecxz
xor
outsl
and
mov
xor
pop
fmull
pop
mov
and
ret
xor
pop
in
mulb
sbb
sub
push
mov
pushf
mov
pop
mov
scas
lods
xchg
in
push
daa
push
inc
add
arpl
mov
mov
and
lret
jo
addr16
xor
fidivrs
add
cltd
jge
jbe
push
xchg
pusha
mov
leave
push
jle
push
orb
stos
adc
mov
iret
inc
pop
push
in
and
sbb
mov
lds
xor
mov
mov
imulb
roll
sar
cmp
sarb
xchg
test
mov
mov
in
fdivrs
mov
icebp
jmp
fmuls
loope
test
sbb
cmp
and
imul
cmp
dec
and
test
les
bound
in
shrb
mov
popf
push
in
out
aas
add
mov
adc
test
xor
add
shl
insl
inc
fcompl
out
mov
pop
inc
xchg
inc
jmp
stos
adc
cld
addr16
andl
sti
dec
push
test
repnz
jge
sbb
lahf
xor
push
xorb
mov
ja
pop
movl
shll
and
jge
sbb
sahf
mov
notb
and
mov
pushf
xchg
xchg
cmp
das
push
jmp
sbbb
pop
mov
pop
scas
or
jl
mov
pop
stc
jmp
cmpl
or
add
jl
stc
sub
insb
push
lock
push
aaa
out
jp
adc
jne
aaa
loop
into
shr
xor
cltd
stc
int3
pop
loope
mov
lds
js
push
jo
ret
cmpsb
ss
mov
xorb
ret
cmp
fisubs
cwtl
push
xchg
test
clc
push
sbb
test
sub
cmp
dec
push
shrd
mov
jp
stos
pushf
xor
and
xchg
scas
jnp
lret
andl
popf
push
jbe
les
inc
mov
adc
out
loopne
jbe
mov
sbb
push
out
or
jle
fiaddl
adc
xor
rol
jnp
movsb
lock
dec
push
or
mov
out
aam
out
sub
lcall
imul
shlb
inc
ret
sahf
dec
in
aas
fidivl
insb
scas
popa
sar
ljmp
setne
fisubrs
mov
cld
xor
sbb
and
arpl
dec
xchg
add
mov
addb
faddp
outsb
fmull
or
lcall
addr16
stc
mov
sub
jbe
push
popa
popf
lcall
adc
jnp
call
add
sbbb
lahf
cmp
pushf
lret
push
daa
mov
jno
inc
mov
icebp
jmp
sbb
int3
das
in
or
insl
or
xlat
popl
sbb
rcll
stos
sub
push
ficomps
clc
mov
adc
sahf
bound
cmpsb
sbb
pop
shll
out
or
test
fdivs
pop
mov
loopne
cmp
or
sbb
stos
div
imul
dec
dec
or
mov
es
ljmp
lds
xor
sbb
scas
aam
mov
dec
mov
fs
jg
rcrb
pxor
xor
jbe
call
mov
jae
pop
popa
mov
orl
xorl
outsb
cwtl
pop
cld
pop
xorl
cmp
int3
movsl
pop
or
mov
cmp
dec
outsl
dec
xchg
push
sub
fcoms
fildll
lock
das
ret
aaa
popf
mov
pop
adc
andb
ss
jbe
jg
adc
sbb
xchg
cmpsl
scas
cli
mov
jmp
jle
or
fcomp
scas
cmp
xor
push
xor
mov
mov
inc
mov
out
adc
sbb
jg
or
popa
pop
inc
jmp
shll
push
pop
push
or
mov
jne
into
inc
repz
push
cld
loopne
scas
xchg
xor
push
cltd
and
mov
dec
sarb
xchg
mov
xchg
xlat
add
imul
and
dec
dec
dec
jecxz
lcall
int
dec
ljmp
arpl
jbe
int3
mov
push
fnstsw
rcl
clc
scas
and
jns
inc
mov
inc
icebp
mov
adc
std
mov
cmpsb
iret
in
lgs
cltd
imul
int
cs
mov
popf
push
sub
movsl
or
push
push
xor
sbb
sub
or
mov
inc
pop
mov
sbb
xchg
add
xchg
jae
insl
xchg
cwtl
and
mov
out
subl
or
ds
daa
adc
rclb
repnz
or
icebp
pop
es
lahf
mov
dec
out
inc
out
loope
addr16
ret
hlt
shll
mov
int3
cmpsb
ret
call
movsl
xchg
pop
outsl
daa
aam
mov
cmp
push
pop
sbb
cmp
out
lret
shr
imul
pop
xor
pop
pop
jl
popa
fwait
mov
pop
xchg
xchg
movsb
hlt
mov
sbb
out
mov
divb
cmpsl
push
push
pop
es
sarb
lods
sbb
mov
mov
outsl
bound
or
repz
in
fdivrs
notb
cli
dec
xor
sbb
jns
ljmp
cmp
adcl
add
ret
imul
shl
mov
inc
sub
orl
adc
or
pop
leave
ds
sbb
into
jle
mov
cmpsl
lahf
and
std
imul
cs
out
sarl
negb
cmc
repz
fsubp
mov
dec
imull
into
push
lds
iret
ror
test
daa
pop
sbb
add
ret
adc
pop
pop
cmp
fimull
xchg
mov
sub
ss
xchg
push
pop
adc
jmp
push
cmp
jmp
setns
mov
and
adc
cmpsb
or
xorl
add
dec
cmp
scas
mov
pop
rdtsc
cmc
push
jg
pop
outsl
mov
ss
fsubs
mov
dec
in
push
ss
mov
jne
push
xor
cli
leave
leave
popa
int3
sub
cmpsl
add
sbb
xchg
sub
test
fucomp
insl
mov
push
pushl
popf
ljmp
pop
inc
clc
pushf
jb
lret
dec
out
das
lea
cs
das
pop
iret
push
mov
fimuls
and
add
imul
sbb
adc
int3
cmc
arpl
pop
daa
xchg
jl
lds
ret
adc
mov
movsb
mov
xchg
inc
push
mov
fs
sub
sub
adc
xchg
jb
mov
insl
loopne
cs
inc
push
imul
xchg
ss
ds
ljmp
add
mov
sub
cmp
xor
xor
lds
aaa
pushf
mov
add
inc
repz
push
mov
mov
iret
sbb
movl
in
pop
dec
xchg
mov
jbe
cli
push
push
sub
push
jns
fisttps
call
fcmovnu
cmp
mov
in
shll
stos
mov
add
outsb
mov
pop
inc
jae
lds
and
adc
mov
movsb
jmp
cmp
push
loope
orl
jnp
cld
mov
lds
jne
out
test
push
dec
mov
pushf
lret
cmc
sub
scas
push
cltd
xchg
inc
outsl
in
shrl
sbb
int
jne
lods
lret
xchg
mov
jmp
cltd
dec
jae
addl
dec
pushl
movsl
scas
inc
xchg
ret
movsb
jb
mov
mov
lds
enter
jne
xor
sahf
inc
out
or
inc
dec
pop
int3
adc
mov
inc
or
es
xchg
xchg
xchg
cld
xchg
fidivrs
lds
sarb
sub
jbe
ss
or
jecxz
ja
and
mov
cmp
inc
sahf
adc
mov
push
jb
bound
mov
leave
fsubp
xchg
dec
fdivrl
jae
ret
push
aas
or
int3
mov
outsl
leave
sbb
iret
gs
jmp
adc
icebp
mov
dec
sub
test
cmp
mov
je
or
in
aas
aaa
cltd
addb
inc
push
pusha
fwait
js
stc
adc
jecxz
mov
jecxz
dec
incb
fs
push
pop
jle
les
fdivrs
in
xchg
sub
or
sbb
and
ja
add
outsl
mov
int3
fs
dec
ja
push
insl
stos
repnz
pop
popf
sbb
es
push
cwtl
pop
lret
testl
xorb
jp
pop
std
cwtl
mov
pop
adc
mov
push
add
pusha
lods
or
dec
mov
in
mov
inc
aam
push
jp
outsl
dec
jbe
out
and
mov
int
mov
pop
mov
repnz
test
and
xchg
xchg
loopne
push
pop
xchg
fcomi
repnz
xor
dec
aas
call
aam
or
loope
lock
mov
sti
add
or
push
dec
jnp
sbb
mov
xor
jp
lret
sub
inc
add
mov
dec
loope
dec
repnz
outsl
lahf
scas
push
mov
jecxz
clc
jmp
hlt
imul
sbb
jg
addb
cmc
shll
cs
dec
mov
push
ja
insb
mov
into
jecxz
fwait
and
xor
lds
fstpt
fsubrs
hlt
movsl
mov
jae
xor
popf
outsl
push
dec
movsl
pushf
xchg
jecxz
test
add
stos
and
test
in
jmp
and
fwait
mov
pop
add
int
jl
or
cmp
mov
xlat
push
repnz
cmpsl
adc
jle
push
and
adc
add
loopne
mov
inc
dec
and
stos
sub
inc
add
or
mov
inc
mov
pop
mov
icebp
addb
or
mov
daa
repz
adc
and
in
incb
inc
push
nop
push
aad
sbb
xchg
pop
ds
in
sbb
sar
mov
jge
ret
insb
into
sahf
into
into
fsubl
mov
mov
mov
adc
je,pt
push
les
in
aad
cmp
xchg
jo
leave
sub
hlt
push
nop
or
sub
and
or
sbb
jno
sarl
sti
aam
rorl
in
xor
dec
outsb
mov
adc
rol
mov
jno
push
jae
repz
movsb
cmp
jp
jno
add
push
push
inc
sarb
jne
aad
mov
pop
sub
adc
inc
ficompl
pop
int3
mov
sbb
loopne
loopne
shld
pop
mulb
jb
divl
sbb
cltd
aam
push
movsl
cld
ficomps
in
and
pop
mov
sub
mov
nop
addr16
jb
sarl
das
les
xorl
pop
test
sbb
pop
in
push
int
and
lea
js
fldenv
movsb
xchg
cli
fbstp
lods
push
mov
xchg
sbb
xchg
test
int
outsl
mov
in
inc
jb
aas
sar
mov
jno
adc
xchg
jo
insb
cltd
sub
xor
and
pop
adc
xor
imull
movsb
popf
sbb
popa
mov
adc
jno
cltd
pop
adc
mov
xchg
xchg
xor
mov
or
jge
movsl
out
cmp
hlt
jae
cmp
insb
xchg
xor
cld
pop
cmp
adc
or
pop
push
insl
movsl
roll
add
add
push
mov
and
int3
dec
jle
dec
movsb
mov
adc
lods
push
lahf
jae
int3
sbb
cmp
xchg
gs
dec
mov
mov
bnd
stc
out
and
xor
mov
xor
or
mov
jbe
jecxz
scas
sbb
cmp
inc
push
and
lret
and
inc
out
pushl
aad
sbb
dec
std
inc
lcall
cmp
rol
movsl
jmp
jg
dec
hlt
cmpsl
mov
cld
adc
adc
pop
movsl
ret
inc
mov
jmp
sbb
ror
ja
mov
dec
and
or
negb
add
cmp
adc
mov
adc
push
xor
and
jne
pop
aas
and
pop
xchg
outsb
xor
dec
push
lret
mov
push
popa
or
push
cmp
cmpsb
in
repnz
iret
cwtl
inc
jg
add
cmp
jo
cmp
scas
lret
je
negb
and
into
sbb
xchg
cmp
lea
mov
mov
jge
jmp
in
push
mov
into
sarl
bound
xchg
inc
push
sbb
fimull
mov
mov
and
rcrb
mov
ja
mov
cld
mov
jb
fcmove
and
dec
les
fisttps
shll
mov
xchg
ret
daa
jle
pop
cmpsl
and
sahf
jecxz
xlat
push
out
int3
adc
xor
mov
mov
or
das
pop
test
mov
inc
imul
push
lret
bnd
popa
or
mov
mov
mov
mov
or
jmp
std
insb
cmp
xchg
je
mov
add
fbld
jae
xor
cmp
jle
ds
jmp
cmp
mov
fwait
mov
xchg
xor
push
cmpl
jmp
rorb
sub
cmp
les
cmp
stc
mov
rorb
out
push
inc
xchg
inc
add
roll
pop
ja
cld
dec
push
pop
scas
or
int3
pop
push
cwtl
movsb
cwtl
lods
pop
inc
sbb
sbb
adc
leave
adc
bound
lock
fistpll
pop
pop
mov
lock
in
loope
adc
test
dec
mov
imul
jb
data16
iret
push
sub
sbb
push
inc
mov
lea
in
pop
out
add
or
push
out
adc
mov
jne
ss
fdivl
mov
pop
mov
or
jle
sub
mov
mov
or
sbb
sub
sbb
push
xchg
inc
cltd
fadd
test
sbb
jle
aam
dec
outsl
test
shlb
and
std
ret
mov
mulb
jno,pt
orb
inc
pop
inc
xchg
insb
xchg
scas
mov
sub
outsl
cli
add
cmp
inc
ja
lods
ljmp
scas
std
sbbl
test
ret
pop
pop
lret
push
sti
out
and
outsb
lfs
sbbb
data16
mov
into
jo
add
xchg
inc
jg
test
aad
and
test
dec
mov
sbb
mov
dec
sbb
xchg
push
adc
sub
push
cmp
sti
lds
sub
movsb
push
xor
push
cmp
jg
test
mov
jl
dec
dec
dec
inc
jmp
lea
stos
clc
or
out
lock
add
in
stos
inc
push
add
push
fildl
sub
push
and
ret
pop
scas
mov
xor
call
mov
and
outsl
gs
adc
mov
dec
lcall
inc
addb
jb
push
sbb
push
arpl
call
mov
sbb
sbb
iret
inc
js
out
inc
xor
sub
jl
repnz
sbb
mov
dec
outsl
stos
pop
adc
sarl
pop
xor
xchg
xor
ljmp
push
pop
adc
in
dec
sbb
jl
imul
cmp
xchg
cmc
call
jb
les
dec
repz
inc
adc
jbe
fsubs
dec
ljmp
inc
shlb
shll
lret
sbb
and
dec
jl
xchg
sbb
or
test
pop
mov
cmp
ljmp
mov
inc
and
sub
jns
xchg
adc
scas
ljmp
push
cmp
arpl
mov
pushl
sahf
dec
dec
rcrb
int3
mov
sbb
fwait
js
loop
dec
cmpb
push
push
out
ljmp
push
mov
int
inc
imul
pop
sbb
inc
push
outsl
iret
cli
mov
dec
shrb
ds
pop
cmp
inc
add
subl
sbb
mov
setnp
test
mov
loopne
lcall
mov
insl
or
push
aam
sti
add
pop
rcll
add
ss
adc
fs
inc
sbb
xchg
fs
mov
scas
pop
xchg
int
out
outsl
imul
push
xlat
mov
fwait
push
setno
mov
ljmp
adc
push
xchg
sbb
into
test
cmp
bound
outsb
sub
add
mov
je
icebp
lret
fidivrs
pop
xor
sti
add
dec
and
and
sbb
sbb
test
shr
lods
add
movsl
sbb
cmpsb
negl
fcoms
cs
xor
push
cmp
cmp
jne
sbb
div
xchg
mov
cmp
loopne
jl
les
lret
inc
add
jmp
mov
fstpt
xor
sbb
iret
int3
lods
dec
into
scas
jmp
mov
cmp
jmp
gs
dec
or
jp
negb
test
bound
ljmp
ss
fwait
test
fs
mov
and
iret
and
add
xchg
pop
pop
std
fistps
cmp
jns
int3
mov
bound
xor
adc
pop
dec
or
rcr
pop
insl
xor
jp
mov
cmc
dec
mov
sbb
mov
fisubs
in
rcrb
enter
push
fidivrl
inc
lds
push
pop
and
test
aad
sub
xchg
scas
xor
mov
xor
movl
loop
in
push
sub
dec
pop
out
mov
outsl
icebp
fcmovu
stos
or
mov
pop
jno
stc
test
imul
or
xchg
in
lcall
pop
jl
cwtl
ja
mov
insl
ja
add
xchg
or
fisttpll
mov
sbb
hlt
xor
js
in
sti
jg
xchg
imul
and
cmp
in
or
push
std
xor
into
lahf
jbe
push
fisubs
js
xlat
cmp
aaa
in
jl
mov
mov
les
insb
push
inc
cmp
cmc
std
mov
cmp
imul
jne
mov
xor
pusha
js
xchg
jge
inc
loop
arpl
xchg
fsubrs
mov
scas
sbbb
enter
shrb
mov
xchg
test
outsl
mov
xor
xchg
test
jg
das
mov
fildll
or
mov
int3
jb
jg
ljmp
insb
jg
leave
cmp
mov
pop
push
mov
cmp
jg
ja
adc
adc
lock
xor
test
cmc
sub
xor
ds
jp
pop
jl
mov
js
cwtl
movsl
repnz
hlt
pop
movsb
fwait
sbb
in
jnp
mov
cmp
in
test
dec
fisttps
outsl
dec
inc
mov
inc
jg
movsb
or
jae
hlt
and
aaa
adc
adc
dec
es
out
pop
cmpsl
imul
push
fistl
std
mov
inc
repz
inc
into
inc
stos
xor
shufps
and
mov
cmp
mov
mov
fistpl
cmp
scas
rorb
jns
call
sub
icebp
xchg
popf
movsl
lea
jle
lea
or
andl
loopne
mov
insb
repz
das
add
and
jle
popf
pop
push
xchg
push
fstpl
mov
jno
xor
and
outsl
add
mov
jno
jp
mov
fsubs
jmp
nop
idiv
xor
and
dec
push
mov
fildl
or
adc
mov
arpl
mov
ljmp
dec
fstps
out
cmp
sub
leave
mov
call
jmp
cs
pusha
movb
push
add
ss
jne
in
jle
mov
jno
sbb
repz
stc
js
dec
add
push
inc
addr16
shll
push
out
aas
rcrb
cltd
jbe
fs
aad
sub
xor
out
xchg
jmp
sub
inc
clc
dec
cmpsb
dec
xor
ds
mov
cmp
test
sbb
leave
cmp
ret
iret
jne
xchg
sub
adc
dec
sub
loope
add
je
inc
sub
test
insl
lret
mov
pop
mov
loopne
cli
sbb
and
sbb
and
dec
insb
mov
xchg
sub
or
sub
dec
dec
lret
cmp
push
mov
inc
cs
in
cltd
and
dec
rcrb
or
ret
pop
jno
cltd
cmp
dec
mov
mov
repnz
push
ljmp
enter
lret
sub
in
arpl
movsl
call
rcll
cmp
insb
pop
icebp
ja
mov
jae
jp
push
scas
cmp
mov
inc
mov
dec
std
sbb
movsb
mov
sbb
sbb
xor
das
into
mov
inc
inc
adc
andl
mov
sub
sub
movsl
rcr
mov
stos
adc
daa
mov
out
xchg
mov
pop
mov
pusha
pop
loop
jl
xlat
pusha
clc
loop
rcrb
or
inc
loop
stos
bound
lods
or
test
pop
sub
jg
cltd
cmpsl
mov
mov
inc
ret
stc
setg
xacquire
mov
or
sub
xchg
and
pop
fistpll
aaa
stos
jne
xchg
jp
mov
lods
cmp
jne
repz
addr16
adc
rcll
hlt
inc
cmp
aam
std
rorb
push
cmpsl
popa
push
adc
cmp
xchg
sbb
subb
mov
mov
dec
test
dec
mov
push
push
and
movsl
mov
and
ja
cs
icebp
xor
push
mov
ret
push
out
arpl
and
mov
test
xchg
insl
add
sbb
movsl
add
xchg
mov
outsb
iret
add
jns
jne
jne
push
mov
test
mov
push
popf
lock
stc
cmp
pusha
inc
movsl
or
add
mov
aas
enter
pop
idivb
and
xchg
fbld
mov
outsl
roll
test
pop
fnstcw
xchg
add
push
leave
and
leave
push
lahf
mov
sub
jb
in
adc
loope
orb
dec
hlt
jnp
sub
lods
jo
cld
lahf
xchg
pop
iret
popf
sub
pop
mov
jns
adc
pop
lret
imul
insb
in
das
or
daa
sub
les
xor
fsubrs
cmc
add
xor
sbb
arpl
dec
xor
lret
movsl
xchg
js
dec
pop
cmpsl
in
loop
gs
popa
inc
fs
in
or
push
lcall
rcr
jo
addr16
lods
mov
cltd
test
nop
dec
push
dec
mov
call
pop
out
sbbb
aas
mov
jg
jb
ret
pusha
ret
movsb
push
jbe
imul
mov
jns
adc
push
cwtl
repnz
cmpsl
leave
and
mov
or
fs
inc
lods
sarb
xor
or
cmp
call
push
pop
imul
fildll
dec
add
fsubs
jbe
lock
test
inc
les
add
mov
call
push
mov
mov
fistpll
movsl
scas
lcall
xor
repnz
adc
sbb
pop
stos
jle
stos
sahf
jg
cld
imul
cli
data16
xor
mov
sub
out
faddl
or
iret
mov
cmpb
je
ljmp
sbb
movsb
add
push
pop
in
mov
lods
and
push
xchg
and
cli
popf
push
mov
mul
lahf
in
push
xor
lret
clc
push
dec
and
cmp
or
leave
sub
les
aam
idivl
adc
lahf
je
hlt
loope
ds
lock
jno
lock
xor
sub
lock
xor
enter
xlat
sbb
out
and
je
clc
add
and
mov
icebp
movsb
push
in
call
out
pop
sub
xchg
sti
cmc
xchg
test
arpl
jno
repnz
pop
lods
jb
xor
mov
mov
repnz
sbb
stos
scas
fdivrp
clc
mov
xchg
loop
cmc
enter
mov
inc
inc
fwait
scas
mov
ljmp
js
mov
enter
push
ss
xor
push
in
flds
shl
movsb
push
adc
ja
sub
fsubrl
push
pop
lods
cmp
mov
adc
push
outsb
mov
adc
mov
shl
mov
notb
out
stos
inc
out
rcrl
mov
push
push
sub
cmp
aad
les
movsl
mov
mov
icebp
mov
dec
sub
push
leave
gs
lret
mov
fptan
pop
fwait
sti
mov
mov
sbb
xor
ja
sub
cwtl
imul
testb
insl
imul
mov
fadd
pop
jbe
lret
xor
stc
ret
add
aas
stc
push
in
sbbb
mov
test
scas
idivl
jne
rorb
xor
cmp
pop
repz
mov
imul
jecxz
sarb
jbe
cmpb
into
mov
inc
rclb
outsb
jmp
stos
mov
or
cmpsb
jbe
cmp
fsub
mov
test
pusha
std
or
push
scas
mov
push
add
popf
push
pop
push
dec
out
ret
test
sbb
sahf
push
pop
std
or
pop
sbb
loope
outsb
loope
sub
pusha
sub
bound
movsl
xchg
mov
rcrb
scas
ss
add
hlt
dec
and
rcrb
or
cltd
push
mov
std
fistl
mov
xchg
test
fistl
xor
jle
adc
xchg
enter
arpl
test
push
les
or
mov
dec
enter
pop
add
stc
sarb
or
ror
fsubrl
std
stos
xor
repnz
jp
data16
popa
les
cld
popf
pop
lcall
cmp
sub
pop
scas
scas
mov
jg
dec
sub
jl
jne
add
cwtl
int3
inc
push
mov
lret
out
jl
or
sahf
push
je
icebp
adc
repz
cmp
jbe
scas
hlt
add
inc
pop
xchg
xor
inc
xor
je
in
or
js
mov
idiv
and
adc
adc
pop
sub
std
adc
rcrl
out
lret
push
mov
movsb
mov
and
test
in
pop
cmp
mov
and
cli
mov
push
add
out
mov
nop
in
mov
jb
lahf
mov
mov
dec
push
sub
test
dec
enter
rcl
mov
cmp
mov
movsl
shll
jl
pop
aas
xchg
roll
out
in
dec
mov
mov
xor
xchg
enter
ror
push
in
nop
loop
or
pop
mov
mov
sub
pop
jecxz
fdivr
imul
xchg
inc
fwait
cmp
mov
jne
sbb
pusha
cmp
movsb
pop
scas
xchg
mov
dec
nop
aas
xchg
scas
in
mov
adc
cmp
or
lea
ret
loopne
sbbl
cli
jmp
lods
nop
sbb
mov
sbb
xlat
pop
out
scas
sub
lock
nop
imulb
push
push
mov
imull
insb
fidivs
inc
repnz
aam
jmp
jle
cwtl
add
and
sti
mov
xlat
or
push
mov
and
dec
pop
sub
stc
xchg
cmp
stc
sti
scas
add
sub
mov
fsubs
jle
xor
pop
shrl
std
adc
adc
mov
pushf
imul
in
fwait
sub
jg
lods
jns
mov
test
mov
adc
in
xchg
ds
sbb
mov
scas
cmp
and
movsl
and
or
mov
shrl
vmread
lahf
jmp
es
push
filds
stos
sar
shr
pushf
push
push
sarb
mov
fcmovnu
xor
add
sub
ja
in
adc
push
inc
call
mov
sbb
stc
adc
aaa
xor
xor
mov
xor
enter
jno
and
jle
into
lea
daa
enter
data16
add
xchg
cmp
repnz
cli
enter
leave
push
das
int3
push
hlt
popa
jl
cwtl
mov
cmc
insl
scas
repz
pusha
xchg
out
leave
mov
mov
js
cmp
bound
mov
test
mov
xchg
ja
ljmp
or
dec
dec
pop
cmc
xchg
mov
sbb
cmpb
inc
mov
in
data16
sub
mov
inc
fs
sbb
sbb
out
mov
and
jno
dec
jb
mov
add
add
mov
les
sub
pushf
adc
stc
pop
imulb
outsb
mov
out
hlt
jbe
push
and
call
push
shlb
cld
sub
pop
cmp
sbb
add
inc
and
fsubrs
jg
mov
dec
daa
push
xor
mov
dec
xchg
das
cmc
or
cmp
xchg
rcrb
jbe
cld
adc
das
test
daa
xor
xchg
jp
cmp
dec
scas
aam
lods
out
sbbl
incl
sub
mov
lret
adc
add
xor
enter
or
sbb
sti
and
imul
pop
sub
insb
mov
sbb
imul
mov
dec
lods
adc
inc
or
addr16
leave
inc
pop
lret
stc
fldl
or
test
sbb
mov
int3
cltd
scas
subl
stc
jb
fnsave
notl
and
sub
enter
sbb
push
or
out
jmp
mov
xchg
jo
stos
outsl
jae
mov
leave
movq
or
lea
push
xchg
mov
jns
imul
loopne
adc
mov
les
insl
sub
xchg
adc
daa
fdivl
in
fsubl
mov
cli
popaw
jmp
ds
iret
sub
out
inc
push
out
in
sbb
adc
jnp
jno
test
and
les
mov
fs
popa
mov
repz
mov
fdivrl
cmp
pushf
mov
js
subb
jne
add
mov
pop
inc
in
mov
xor
pop
das
mov
adc
psubusw
mov
mov
push
xor
pop
xchg
adc
fdivrl
sbbb
subl
fistpll
pop
icebp
push
lahf
dec
pop
stos
les
sahf
cmp
std
iret
cmc
sub
push
je
mov
push
fsubr
push
movsb
jo
hlt
leave
adc
push
lret
inc
in
arpl
adc
stc
popa
mov
sbb
dec
movsl
mov
push
xor
addr16
xor
adc
dec
mov
lcall
mov
clc
mov
adc
dec
rolb
inc
int3
lcall
into
or
scas
pop
xchg
movsb
rcrl
repnz
addr16
and
les
es
jbe
jne
hlt
pop
dec
mov
adc
cli
mov
pushf
lahf
pop
jae
repz
mov
mov
mov
and
aas
xor
adc
in
lods
fwait
xchg
sysenter
add
adc
cltd
scas
gs
push
pop
adc
ljmp
fsubr
xor
xchg
inc
out
xor
js
inc
fsincos
push
cltd
fwait
dec
mov
sub
xlat
lcall
pusha
sahf
cmp
ret
sbb
dec
rol
scas
mov
inc
repz
dec
cmpsb
adc
arpl
lods
les
or
mov
addr16
jmp
out
sbb
call
lahf
out
in
mov
int
pop
popf
movsl
jb
jg
xor
sbb
loope
pop
or
sarl
mov
xchg
push
push
sbb
inc
sbb
outsl
cmp
sbbb
sbb
push
sbb
jns
mov
pop
mov
push
dec
out
fsubp
push
arpl
cli
mov
repz
or
pop
push
or
inc
adc
loopne
scas
or
dec
mov
add
ja
pusha
sti
push
ficompl
mov
gs
in
dec
scas
cmp
xchg
jne
sbb
jp
aam
and
xor
pop
in
into
andl
xchg
inc
add
es
daa
dec
sub
das
pop
inc
test
fstps
or
mov
sub
jmp
mov
dec
inc
dec
add
sub
push
mov
lret
jl
dec
inc
xor
jmp
jle
push
mov
mov
lods
mov
xlat
enter
and
push
mov
sbb
push
xchg
and
push
inc
add
or
sub
rcrb
aam
bound
fsubrs
pop
push
ret
add
aam
xor
pop
mov
scas
in
mov
mov
xchg
in
or
bound
ret
add
lret
lock
jecxz
or
cld
sub
push
insl
mov
mov
insb
jg
or
add
shll
cmp
je
xor
dec
add
cltd
jne
gs
xor
nop
mov
mov
in
pop
inc
mov
adc
dec
loopne
shrl
inc
mov
adc
fildl
mov
pop
add
sbb
push
mov
jno
outsb
shll
adc
mov
fnstenv
shl
sbb
sub
repz
cltd
add
stos
mov
pop
sub
adc
popl
insb
shrb
into
xor
xchg
mov
into
cmp
xor
pop
hlt
andl
xor
dec
mov
xchg
sbb
push
pop
lcall
and
push
and
sub
cmpb
jge
sbb
andl
xchg
loopne
icebp
push
fs
push
adc
mov
test
arpl
jno
mov
adc
lahf
insl
jg
jle
dec
push
xor
fbld
cld
mov
jecxz
sbb
insl
sidtl
mov
mov
fs
je
jmp
inc
jns
xor
add
sub
addl
icebp
mov
cmp
and
mov
popf
sub
push
shr
sub
mov
push
xor
or
data16
std
mov
or
and
mov
mov
nop
mov
mov
fimull
xor
xchg
adc
add
push
sub
xchg
lock
inc
dec
scas
jg
cmpsb
loop
cld
cmp
xchg
test
sub
ljmp
pop
imul
movsl
push
push
lret
das
and
ror
push
push
stc
sbb
ja
dec
sbb
push
lret
xor
push
adc
ja,pt
jb
fcoml
mov
dec
jmp
icebp
mov
cli
out
inc
push
cwtl
mov
dec
mov
shr
pop
mov
icebp
sbb
insb
test
lcall
int3
fwait
xor
or
mov
xor
jae
nop
xchg
xchg
mov
movsb
or
add
mov
stos
push
adc
xchg
xchg
xor
mov
out
lds
shrb
loope
scas
push
xor
cltd
iret
out
stos
loop
ss
jmp
inc
clc
sbb
imul
xor
push
mov
jbe
mov
cmpsl
mov
dec
scas
testl
lds
test
sub
shr
xor
inc
mov
cmp
sbb
loopne
adc
mov
pop
mov
outsb
mov
gs
push
mov
decl
cld
fsubrp
mov
lret
aas
add
and
imul
pop
jns
cmp
dec
mov
ja
cmp
pop
sub
xor
mov
rcll
xchg
cmpsb
xor
jecxz
fstpl
je
jle
and
jbe
cmp
std
sarl
aas
out
mov
test
fistl
je
and
xchg
push
stc
jg
sub
push
mov
mov
or
xor
int3
xor
pop
nop
aaa
imul
leave
and
call
bound
jae
cmp
fisubrs
cmp
inc
jmp
mulb
test
test
cmp
lods
mov
jle
add
cs
out
sub
xchg
sub
outsb
adc
rclb
xor
out
repz
lcall
rcrb
sbb
cmp
jp
jno
and
fidivrs
jno
xchg
xor
sbb
mov
cmpsl
lock
fimuls
int
jecxz
xchg
lret
mov
test
and
xor
aaa
sbb
and
push
movsl
jecxz
js
pusha
xchg
cs
mov
cmp
push
and
cmp
out
int
cmpb
cmpsb
xor
mov
mov
or
push
pop
jno
out
mov
jne
ret
int3
test
pop
sbb
or
xchg
jg
icebp
xchg
call
in
cmp
ds
icebp
sbb
std
sbb
pop
js
bound
adc
adc
cmpsb
push
in
add
out
out
mov
scas
xchg
insl
push
ljmp
sti
pop
cmp
pop
jp
das
fisubrs
mov
mov
jp
ret
hlt
push
call
lods
mov
cmpsb
icebp
mov
pop
lcall
and
test
jmp
pop
andl
incl
insb
or
adc
inc
js
repz
out
scas
out
adc
shll
jnp
sbb
lock
pusha
aaa
movsl
push
rcrb
jecxz
dec
pop
aaa
gs
shrl
or
imul
dec
lret
xchg
loopne
pushf
arpl
dec
xchg
cmp
ds
cltd
out
scas
mov
loope
push
loopne
rorl
dec
push
mov
popf
or
xor
mov
and
pop
sbb
jge
and
popa
mov
sbb
mov
inc
imul
mov
cmp
pop
das
xor
dec
mov
jne
repnz
movsl
pop
popa
and
loopne
inc
das
sbb
cmc
lret
bound
add
xor
dec
jae
nop
int
int
xchg
fsubs
mov
mov
dec
jl
jle
mov
adc
mov
mov
mov
sub
out
inc
icebp
add
andb
fwait
movsl
adc
push
cmp
jl
jge
jbe
pushf
mov
out
or
lret
std
sub
push
mov
out
mov
cmp
into
lcall
jecxz
fiaddl
fdivr
ljmp
jg
inc
hlt
pop
adc
clc
xor
loopw
subb
add
mov
dec
outsl
gs
out
fs
dec
jl
in
jno
adc
fildll
xchg
push
jns
mov
in
insl
jle
xor
adc
dec
scas
rol
lret
cmpsb
mov
mov
call
mov
and
fistps
cwtl
mov
lret
dec
sahf
rorb
cltd
mov
pop
jo
cmp
scas
xchg
arpl
mov
push
pop
jmp
mov
sub
leave
lods
roll
fldl
mov
test
cltd
sub
pop
repnz
push
xchg
rol
icebp
pop
push
data16
fildll
add
cltd
arpl
xchg
lcall
rclb
mov
pop
lahf
ficoms
sbbb
push
pop
mov
cmp
roll
inc
adcb
cmp
add
add
jae
and
sub
test
add
fxch
shl
mov
push
sbb
mov
lret
and
pop
and
push
dec
pop
sbb
idivl
pop
ljmp
cmp
jmp
divl
mov
mov
mov
dec
and
sbb
push
stc
dec
aaa
pop
pop
nop
int3
clc
push
int3
loope
stos
dec
cmp
movsl
mov
pop
pop
pushf
push
push
sub
jle
jno
adc
aad
std
cmp
sbbb
test
js
pop
stos
xor
xchg
out
jle
aas
and
sahf
pop
jmp
sub
adc
or
jmp
dec
or
sbb
inc
out
in
imul
sahf
pop
add
sbb
adc
sti
and
ljmp
fdivp
add
stos
mov
mov
das
icebp
mov
pop
inc
mov
decl
arpl
cmp
sub
add
or
push
mov
shrb
jp
sarl
xor
lahf
dec
out
mov
push
push
inc
stc
push
push
jo
daa
dec
inc
orl
or
jno
sub
mov
pop
je
in
or
pop
sub
rorl
mov
je
and
shrb
jecxz
inc
ljmp
cmp
or
mov
cmp
orl
jg
fwait
das
int
push
js
dec
out
xor
les
and
inc
dec
aaa
and
shrl
cltd
andl
or
or
mov
add
and
jmp
push
fcmovnbe
add
out
sbb
out
fucomi
loopw
aad
sbbl
imul
pop
jmp
pop
push
insb
enter
pop
shl
xor
lahf
dec
les
mov
into
movsb
scas
push
sub
aam
in
and
lock
jecxz
negb
jb
inc
xor
adc
adc
stc
mov
ss
js
mov
lea
inc
stos
lods
add
loopne
mov
mov
sahf
xor
into
js
and
dec
daa
int3
jnp
mov
out
fsts
xor
lret
nop
daa
jecxz
jae
or
jo
inc
insl
call
mov
inc
sbb
lds
or
cli
fs
sub
mov
pop
pop
jae
cmp
and
pop
push
mov
mov
iret
pop
rcrb
xchg
in
mov
test
xor
loopne
mov
pop
jmp
lahf
sub
popa
mov
daa
aaa
xchg
stos
enter
testb
and
outsb
movsl
pushf
mov
and
loopne
sbb
in
inc
out
pop
mov
sbb
mov
fwait
es
fucom
xorb
push
outsb
out
cmp
filds
adc
push
jecxz
inc
cmpsl
pop
mov
mov
mov
or
ret
push
or
fwait
mov
rcr
and
push
jge
shrl
add
mov
loope
push
aas
push
pop
sub
out
je
cwtl
xchg
repz
pop
ficompl
jb
inc
cmp
adc
lods
jmp
jmp
lfs
mov
divb
lret
popa
das
cmpsl
ljmp
inc
mov
push
subl
dec
cmpsb
mov
pop
jbe
mov
xchg
das
push
inc
negl
movsb
push
pop
stos
inc
mov
es
push
cmpl
outsl
or
push
leave
stos
jle
cmpsl
xor
fwait
sbb
test
xor
inc
enterw
push
movsl
jo
test
jno
popf
or
mov
add
sub
mov
cmp
cmp
iret
mov
aas
mov
mov
scas
std
mov
divb
push
pop
adc
and
sbb
or
dec
pop
faddl
mov
arpl
pop
lret
mov
cmp
mov
push
lods
mov
dec
pushf
pop
popa
or
inc
jg
mov
xchg
fnstsw
adc
jns
sbb
test
lds
clc
sbb
stos
fldcw
mov
ja
jae
aaa
mov
add
je
int
movsl
ret
iret
add
pop
mov
jbe
imul
jnp
mov
inc
cmp
bound
or
pop
cmp
cmpsl
orb
sub
fs
loop
mov
xchg
adc
andl
mov
cmp
add
sbb
mov
and
adc
imul
or
scas
push
xchg
pop
mov
bound
test
mov
dec
jg
mov
sbb
mov
dec
push
dec
xchg
adc
adc
pop
or
es
test
or
fistpll
sub
mov
ud1
cmpsl
push
xchg
stos
add
sbb
push
pmuludq
sbbb
xchg
sub
jmp
adc
cmp
out
jno
fdivrs
mov
ret
sbb
adc
fsubrl
pop
mov
dec
cmp
hlt
jg
lret
or
test
into
pop
cmp
dec
adc
dec
cmp
push
dec
inc
je
adc
push
or
inc
or
pop
dec
push
lret
fcoms
dec
mov
lcall
mov
and
in
repz
add
stc
stos
push
movsb
test
es
call
push
int
xor
iret
out
repz
mov
and
mov
adc
add
jl
cmpsb
dec
push
sti
xchg
jmp
insl
jp
dec
fisubl
or
push
cmc
mov
jbe
es
xor
lahf
aas
and
dec
and
dec
sarl
and
mov
aas
sbb
lahf
sbb
jmp
sub
stos
loopne
clc
dec
daa
dec
fs
sub
roll
pop
dec
scas
repnz
xor
imul
daa
mov
jg
mov
rolb
pushf
inc
add
dec
sbb
in
hlt
into
inc
push
xor
pop
movsb
pop
outsl
loopne
loope
mov
sbb
sub
add
clc
jne
jmp
inc
xor
xor
js
xor
pop
pop
cld
mov
sahf
mov
inc
jge
out
pop
lret
aas
xchg
int3
mov
adc
dec
repz
lret
test
cmp
sub
cmp
scas
scas
dec
test
lock
sti
cmp
popf
lods
jg
sub
push
mov
mov
in
insl
pop
loopne
dec
add
xchg
xor
ja
xlat
cmp
mov
sahf
cld
in
fiadds
pop
add
sbbb
insb
mov
test
es
shl
aas
fwait
cli
into
ljmp
mov
shrb
out
loopne
cmp
scas
push
or
insl
and
sub
adc
and
test
jae
std
or
test
enter
xchg
push
loopne
stos
xor
jg
mov
pop
and
push
mov
int
push
and
inc
inc
xchg
inc
enterw
sub
jg
addb
push
inc
shll
ficoml
mov
push
clc
cmp
jl
cwtl
stc
movsb
das
add
xor
or
push
in
sub
dec
jmp
mov
sahf
cmpsl
mov
dec
sub
fnstcw
and
jo
call
dec
sub
pop
inc
addb
mov
lret
mov
aaa
jge
addr16
push
ds
pop
inc
movsl
cwtl
leave
mov
adc
sbb
movsl
xor
pusha
pop
mov
adc
add
sbb
and
dec
xor
push
dec
mov
insb
test
ror
add
lds
divb
popa
pop
jmp
mov
ficomps
dec
sbbl
shrb
jae
les
push
xchg
cmp
push
inc
sbb
loope
arpl
pop
les
inc
adc
mov
loop
in
insl
xchg
push
adc
sub
fstl
mov
loope
and
pop
aam
loopne
jne
sahf
arpl
xchg
pop
mov
xor
sti
fdivl
dec
cmp
ret
dec
jecxz
mov
lret
add
leave
xor
and
incb
lahf
pop
test
out
xor
mov
push
mov
mov
insl
lahf
out
sub
add
cmp
hlt
sub
outsl
push
stos
add
dec
lods
pop
inc
orl
lds
cld
ret
jae
icebp
popa
imul
xor
push
dec
cmp
dec
push
push
push
xor
xor
adc
dec
iret
movsb
xor
pmaddwd
dec
or
stc
push
imull
push
popa
jne
stos
xchg
subl
or
mov
push
xchg
lods
xchg
mov
push
arpl
push
adc
jmp
fiadds
rolb
xchg
stc
and
outsl
sub
or
push
lock
int3
push
shrb
mov
sub
jb
mov
pop
mov
adc
or
adc
scas
mov
stc
or
loopne
ss
mov
adc
jo
cmp
pop
push
add
frstor
sbb
fildl
aam
scas
ss
cmpsl
mov
jno
mov
jns
cmp
scas
adcb
fldenv
fldt
mov
mov
mov
jecxz
fcmove
and
xchg
stos
sbb
mov
ds
roll
inc
mov
insl
inc
xor
gs
xchg
iret
or
push
add
mov
push
insb
rcrb
mov
dec
imul
rdpmc
pop
ds
scas
pop
stc
fcomip
push
adc
mov
test
fs
dec
daa
sub
hlt
jbe
test
cli
mov
xor
jmp
out
and
mov
inc
ljmp
ja
inc
lds
andl
clc
add
push
outsl
divb
rorl
aad
sbb
mov
subb
fistl
pop
and
leave
xchg
mov
fisubl
jge
sub
jbe
jp
pop
xor
pop
mov
xchg
loop
cmp
js
mov
scas
jge
jg
push
cli
xor
orb
aam
add
adc
mov
hlt
ljmp
jecxz
mov
data16
dec
sub
addl
pop
jl
xor
in
divb
out
clc
jne
nop
arpl
sbb
arpl
lcall
enter
loopne
int
push
push
xchg
ffreep
sti
jb
jnp
push
mov
pop
roll
clc
mov
add
push
xor
sarl
or
lret
nop
lds
pop
mov
add
shrb
mov
pop
arpl
xchg
fisttps
cmp
mov
add
lcall
fldl
lods
adc
stc
mov
and
xor
pop
ljmp
lea
dec
xchg
dec
nop
jbe
les
test
dec
and
fidivs
fcmovb
mov
sbb
push
dec
mov
xlat
lret
mov
mov
jle
mov
cmp
mov
mov
mov
aaa
fstps
clc
and
cmp
push
or
sbb
push
mov
nop
rolb
ffree
pop
stos
dec
xor
or
imul
in
bound
mov
xchg
push
push
ja
and
mov
test
mov
into
pop
into
and
mov
mov
iret
incl
scas
and
fistpl
jecxz
xbegin
stos
sub
outsb
xchg
inc
adc
mov
adc
shll
mov
jb
add
push
or
push
inc
mov
dec
pop
in
pop
push
jle
lea
fbstp
popa
inc
xor
adc
jle
sub
nop
xchg
mov
jbe
or
jle
shlb
pop
and
lods
xchg
popa
scas
sbb
inc
mov
mov
and
cs
sub
push
or
jle
cmp
cmp
add
inc
imul
push
mov
aam
cmp
ljmp
shr
cmp
out
inc
sti
and
out
movb
cmp
dec
add
jns
add
repnz
xlat
daa
and
scas
imul
and
xor
sub
js
inc
fdivs
shrl
fsubl
mov
lds
pusha
or
pusha
das
test
jl
jle
dec
or
loope
xchg
lahf
mov
pop
ss
sarb
test
mov
inc
and
out
insb
xchg
pop
sub
cmc
imul
mov
fsubrl
cli
sbb
cmp
clc
sbb
loope
cmp
jmp
test
pushf
pop
mov
mov
or
loopne
adc
mov
dec
mov
nop
int
xchg
pop
int3
loope
test
aam
lret
sub
nop
outsl
jmp
out
sbb
push
repz
add
sub
fidivl
into
mov
push
scas
rclb
jbe
test
add
cmp
xchg
notl
cmp
pop
sub
adcb
fistps
ficoml
int
paddb
adc
mov
push
or
fidivl
outsb
cld
sbb
fcoml
popf
pop
inc
or
mov
pop
fisubl
mov
pminsw
insl
rcll
push
movsl
and
jnp
pop
pop
in
les
jp
arpl
mov
xor
mov
loop
push
mov
adc
ljmp
imul
xchg
cmc
fucomi
pop
push
push
idivb
mov
shll
lock
push
pop
fs
push
daa
sub
scas
shll
or
mov
add
pop
push
cld
inc
testb
push
lods
pop
std
mov
add
fistps
nop
mov
jg,pt
aas
test
int
jo
cmp
loopne
test
sub
mov
jmp
push
mov
hlt
inc
leave
cmp
sub
mov
aaa
lds
iret
cmp
ret
xchg
sub
mov
lcall
adc
xchg
ljmp
mov
fucomp
ss
clc
repz
scas
dec
in
jle
push
aad
xor
shrb
push
mov
lcall
test
loop
mov
xchg
test
pop
mov
fidivs
lret
test
lock
mov
out
pop
xor
in
adc
movsb
xor
add
lahf
imul
cmp
cwtl
jb
inc
ljmp
cltd
stos
fidivl
jl
in
loope
mov
dec
popl
pop
mov
sahf
jl
push
mov
push
xor
push
cmp
lds
mov
test
add
sbb
js
adc
xor
hlt
mov
cli
adc
or
sbbl
into
fldenv
inc
mov
add
pop
xor
aaa
inc
xchg
mov
jne
in
arpl
iret
pop
pop
adc
pop
ds
sub
in
test
das
in
cmpsl
and
lods
cmp
jp
add
pop
dec
push
jmp
xchg
cmpsl
xchg
xor
in
push
popf
jnp
sbb
cmp
lret
dec
sbb
push
inc
enter
cwtl
insb
test
and
xchg
ret
ss
in
ss
sbb
jl
aad
lods
push
jne
dec
jle
adc
aam
fbstp
jge
cwtl
dec
lods
inc
xor
mov
jle
repnz
fcmove
and
clc
push
push
sbbb
jp
jns
cwtl
loope
mov
xor
jo
add
out
cltd
pushf
xchg
es
inc
subl
pop
hlt
inc
test
push
ret
cli
enter
xchg
push
enter
call
xchg
in
adc
scas
push
int
cmp
adc
jns
inc
or
leave
xchg
and
iret
adc
orl
inc
inc
pop
sti
sub
mov
push
push
cmp
scas
jecxz
pop
gs
push
jl
iret
lods
data16
test
pop
movsl
jbe
sub
push
xchg
cmp
xchg
pop
jp
lock
ret
and
call
mov
jno
inc
ljmp
add
notl
dec
iret
mov
sbb
out
jb
sbb
dec
imul
xchg
sub
sbb
add
clc
pop
xlat
mov
cmpsl
sub
push
jb
mov
sbb
jne
mov
fsubl
out
pop
xchg
aad
push
dec
push
loop
imul
add
sbb
add
mov
dec
cmp
aam
addr16
push
mov
and
shlb
mov
js
rcll
sub
cli
inc
mov
in
clc
loopne
fsts
jp
in
outsl
cltd
repnz
jae
loope
out
push
pop
data16
popl
mov
xchg
cmc
mov
jl
bound
negb
out
jbe
jno
xlat
popa
insl
adc
dec
inc
mov
push
cs
push
jne
rorl
jge
add
mov
mov
scas
addr16
out
jne
mov
cwtl
adc
jae
ja
cmc
pop
test
push
out
pushf
push
dec
xchg
rcr
in
mov
pop
sbbb
jb
movsb
mov
rolb
lds
sbb
aad
btr
adc
mov
xchg
cli
inc
sti
xchg
inc
pop
fisttpll
test
ljmp
leave
repnz
int
add
pop
loop
and
cmp
mov
lods
in
pop
mov
inc
enter
and
push
jns
fsin
sub
je
xor
or
push
gs
lcallw
cmp
imul
jno
sti
outsl
ljmp
test
aaa
and
stos
mov
fbld
out
pop
jnp
test
out
aas
test
jae
into
mov
data16
int3
lret
inc
sub
aam
mov
insl
add
fiadds
psubw
andl
cmpsb
fwait
xchg
xchg
and
cmc
mov
or
xchg
sahf
repz
in
xor
in
fsubl
xor
jmp
cmp
inc
dec
sub
or
paddsw
dec
mov
mov
jmp
mov
jge
sub
inc
inc
cli
pop
test
push
fsubs
cmp
dec
dec
das
lock
xor
jb
iret
and
mov
div
push
je
and
stos
loope
sbbb
sub
push
jb
clc
rolb
cmp
mov
scas
add
je
cmp
je
add
cltd
push
pop
nop
jne
lock
popa
mul
and
daa
out
and
in
add
add
or
or
popa
sbb
insl
jle
addb
jg
xchg
jb
push
negb
in
int
pop
mov
pop
les
dec
out
pusha
jp
loop
and
xchg
mov
xchg
aad
sbb
inc
mov
push
add
rolb
cltd
test
ficoms
das
mov
scas
mov
dec
out
jb
dec
adc
fwait
stos
shlb
lret
loop
jl
sub
sub
sbb
pop
in
mov
cmpsl
pushf
out
movsl
cltd
mov
cmp
addb
cmp
test
sub
sahf
sbb
scas
pushf
adc
xchg
sub
mov
push
fxam
and
adc
push
test
lods
jl
dec
inc
mov
add
push
enter
aaa
cmpsb
jnp
cmp
ljmp
pop
addr16
or
int3
out
int3
cmp
adc
pop
or
pop
in
pop
jge
cli
rolb
pop
xchg
iret
mov
xchg
add
add
shlb
xchg
xor
nop
fidivs
jp
xor
ljmp
mov
movsb
ror
loopne
ds
xor
mov
out
pop
push
dec
shrl
push
insb
jne
sub
out
repz
nop
dec
add
pop
mov
incl
xchg
orl
jbe
and
or
fs
pop
loop
or
push
mov
mov
cmp
mov
int3
hlt
jmp
add
sub
sbb
xor
test
fdivs
add
imul
sbb
test
dec
mov
into
pushf
test
adc
sbb
dec
imul
scas
call
push
mov
or
fadd
fs
cmpsb
xor
cltd
out
mov
jl
shr
call
xor
mov
je
mov
cmp
fadds
cmpl
paddw
sbb
repz
ljmp
out
mov
dec
mov
mov
in
aad
cmpl
repnz
jb
adc
sti
adc
cld
sarb
outsl
cmp
cmc
out
bound
push
or
fwait
and
adc
mov
call
mov
mov
and
scas
and
adc
or
rol
int
mov
inc
ds
jnp
scas
push
sub
push
xor
jg
push
aam
mov
mov
nop
imul
mov
mov
lock
mov
jbe
std
jl,pn
inc
inc
pop
and
cmp
cmp
or
inc
ret
or
add
mov
inc
cmp
xchg
sub
scas
inc
push
ret
xchg
imul
add
std
or
lcall
jnp
jle
and
mov
pop
and
sbbb
xor
xlat
mov
xchg
pusha
add
shll
mov
mov
hlt
aam
xchg
inc
sub
mov
das
inc
jmp
dec
adc
jnp
or
mov
cmc
aad
ss
aam
xchg
pop
cmp
jne
mov
test
mov
mov
inc
adcb
sar
mov
sub
xchg
add
bound
addr16
sub
fsubs
push
out
ret
mov
mov
adc
cmp
bound
xor
push
xlat
and
lret
fs
sahf
push
lahf
mov
imull
cmp
pop
add
lret
rorb
sarb
shrb
outsb
jge
add
cmp
cmpsl
xchg
cmp
push
sub
aaa
aam
clc
mov
pop
mov
lret
sbb
sahf
loope
rclb
pop
mov
lods
fidivs
xor
sbb
cld
loopne
out
out
sbb
out
lds
and
fnstsw
lcall
dec
jmp
cmpsl
daa
movb
inc
in
aaa
cmpb
movsl
jae
lret
sti
mov
and
aad
xchg
lods
fildll
dec
jle
jo
sbb
pop
adc
outsl
push
xor
divl
int3
inc
sbb
sub
jbe
pop
mov
cmpsb
jbe
nop
inc
xor
out
mov
movsb
mov
rcll
into
add
and
push
mov
push
xchg
mov
cmp
leave
jae,pt
in
popf
and
aad
mov
push
jno
int3
sub
mov
push
or
push
orb
dec
mov
stos
sbb
mov
inc
mov
loope
movsl
xchg
or
sarl
jae
rorl
outsb
sub
sbb
jne
mov
cmp
movsl
pop
pusha
xchg
adc
pop
aas
imul
cmp
outsl
insb
lret
jns
or
sub
das
xchg
js
adc
adc
mov
sub
sbb
dec
add
ljmp
mov
adc
icebp
lahf
mov
and
pop
mov
or
imul
push
sub
xchg
test
outsl
fst
mov
jae
dec
dec
cmp
loop
push
mov
cmp
mov
push
xchg
sub
outsl
aam
lods
inc
pop
dec
inc
notl
cmp
add
xchg
push
sub
adc
pop
scas
movsb
test
xlat
pop
jbe
sti
fwait
insl
and
xor
sub
cwtl
and
aaa
sbb
lock
cmc
fdivrs
sbb
or
movsl
and
rorb
jg
push
and
loop
popa
jp
pop
lods
daa
add
movsl
scas
int3
or
xchg
pop
lods
sbb
lds
and
lods
mov
jb
aam
outsl
rcr
pop
imul
push
cmp
scas
scas
and
lods
sahf
repnz
mov
pop
jp
mov
dec
ret
lret
scas
mov
cmp
inc
pop
cmpsb
pop
clc
int
jo
aaa
cs
test
imul
and
je
inc
mov
out
lock
aas
and
pop
ret
inc
push
movsl
xchg
mov
ret
aad
xchg
push
call
mov
mov
jb
arpl
iret
adc
loope
dec
js
xchg
adc
dec
sbb
out
xchg
inc
imul
out
imul
cmp
add
sub
orb
aaa
lock
imul
cld
adc
pop
jbe
adcb
mov
stos
xchg
jmp
outsb
pop
incb
rcl
pop
je
out
and
arpl
aas
cmp
adc
rcll
insl
cltd
js
orb
pop
or
ljmp
cmp
xor
dec
sbb
inc
imul
dec
sbb
xor
andl
jl
mov
and
out
sbb
mov
jnp
or
or
lcall
mov
inc
sti
xchg
mov
mov
imul
out
xor
idivl
in
push
ja
lret
dec
xchg
push
xchg
lods
pop
ret
xlat
jg
shll
stc
ss
xor
sub
insl
sahf
clc
andb
sbb
mov
push
es
xor
into
pushf
mov
rcrl
add
jle
push
sub
arpl
xchg
push
fistpl
cld
mov
fadds
outsb
leave
or
cwtl
in
dec
xchg
mov
mov
sar
movsl
jb
push
push
mov
mov
or
cmp
daa
jb
mov
lret
test
test
mov
sahf
mov
or
adc
and
iret
dec
inc
loop
sbb
jbe
dec
jnp
jo
mov
inc
inc
test
in
xchg
sub
imul
jne
ds
mull
mov
adc
sub
add
shrb
stos
push
mov
mov
xor
mov
mov
int
movsl
jns
xchg
jns
das
jecxz
je
or
dec
lods
mov
adc
mov
mov
sub
push
dec
in
ret
lock
pop
xor
adcb
push
test
out
and
sub
xor
out
jno
shrb
and
dec
push
sub
add
adc
push
lods
jno
sub
dec
mov
xor
pop
push
popa
jmp
and
jb
out
not
add
jae
push
test
push
pop
add
int3
pushf
fstps
dec
cltd
test
sbb
outsb
sahf
mov
mov
icebp
adc
nop
push
or
icebp
inc
fidivrs
mov
stc
sub
mov
aam
sub
dec
movb
xchg
cwtl
mov
xchg
jae
ret
xchg
cmp
mov
es
das
push
aas
test
shrb
lahf
mov
dec
adc
xorb
out
sahf
adc
popa
dec
test
jge
imul
mov
push
jge
scas
mov
add
pop
inc
nop
inc
repnz
mov
cmp
int
push
jb
lcall
mov
test
jecxz
push
cmpsl
imul
cwtl
bound
divl
inc
sbb
push
jb
and
push
aaa
and
cmp
stos
xchg
rcrb
mov
pop
mov
pop
inc
pop
sub
push
mov
add
pop
mov
stos
add
stos
xchg
icebp
ja
xlat
mov
pop
movsb
and
mov
inc
repz
jp
ljmp
in
sahf
cs
das
jnp
int
imul
xchg
mov
and
mov
or
dec
ret
push
orl
ja
mov
bound
test
sub
outsb
mov
inc
rolb
cmpsl
adc
mov
jno
loopne
or
dec
leave
mov
rcrb
cmp
mov
pop
and
sbb
jl
or
cmp
jne
data16
mov
cmp
mov
jno
hlt
popl
dec
stc
dec
sarl
pop
popf
aam
adc
add
inc
cmp
pop
fucomi
adcl
push
ret
fbstp
jmp
int3
xor
cmp
inc
loop
addr16
nop
mov
stc
push
or
cmpsb
addb
pop
pop
ss
add
lds
outsl
dec
inc
sbb
notl
dec
inc
inc
xchg
inc
ss
xor
int3
imull
sbb
jno
adc
fs
test
mov
jns
mov
dec
sbb
push
or
scas
clc
mov
dec
in
and
pop
lds
sbb
cs
mov
jle
lahf
push
scas
pop
mov
xchg
mov
call
lds
cwtl
in
dec
int3
cld
and
lret
rcll
jo
pop
mov
xchg
testl
hlt
jg
jno
mov
mov
sti
add
and
dec
cmc
clc
jae
push
daa
jo
dec
stos
inc
pop
xchg
std
subl
or
movsl
sar
data16
xchg
push
sbb
jmp
cmp
fsubl
mov
inc
js
jns
loop
repnz
movsb
adc
xor
cmp
jne
xchg
sub
push
pop
lcall
mov
jno
xor
and
mov
push
das
dec
ror
clc
std
add
add
lock
call
inc
mov
fbstp
adc
cmp
popf
sub
addr16
push
in
jnp
or
mov
push
mov
inc
lcall
addr16
test
inc
jns
jg
mov
cld
outsl
xchg
fcmovnbe
inc
repnz
mov
popa
ds
sahf
je
push
add
std
cmpl
stc
adc
ret
jl
aad
mov
dec
cmp
mov
jb
mov
stos
and
push
pop
or
pop
or
ficompl
mov
loop
imul
gs
imul
pop
adc
xor
in
pop
sbb
call
or
sub
popf
mov
jb
cmp
inc
adc
aaa
pop
aaa
scas
adc
test
ja
repnz
or
ja
js
stc
dec
or
lods
out
hlt
adc
inc
cmp
inc
cmp
scas
js
aam
and
xor
fidivrs
imul
out
es
inc
aam
cs
das
pop
cmpsb
out
movsb
adc
ss
mov
mov
mov
mov
push
lahf
mov
sti
out
cmp
push
inc
adc
sub
cld
mov
or
mov
lods
aas
insb
dec
jae
mov
shlb
mov
dec
sbb
int
andl
or
push
cmpxchg
mov
in
cltd
test
mov
xchg
jge
insb
insb
mov
jmp
data16
mov
mov
icebp
lret
pop
pop
add
dec
pop
aaa
mov
imull
out
loopne
xchg
xchg
sub
inc
in
mov
shl
negb
pop
cmpsb
sub
decb
push
movsb
jne
loop
and
adc
jmp
dec
lods
pop
lahf
sarb
clc
data16
mov
or
lock
iret
cmp
dec
sbb
test
push
xchg
lcall
dec
fldcw
data16
lods
dec
fisubl
pop
aad
fmull
jbe
fs
clc
sub
rclb
mov
push
mov
mov
sbb
outsl
daa
nop
lret
pushf
or
sub
dec
test
adc
stos
popf
fsubp
push
sub
into
je
mov
rcrb
popa
jl
or
mov
mov
dec
arpl
jne
repnz
jns
dec
outsl
jns
stos
xor
mov
push
mov
fwait
outsl
mov
push
jnp
push
and
or
xor
pusha
and
xor
rorb
repnz
push
lds
pop
int3
cmpsb
or
jno
cltd
push
dec
mov
mov
xchg
adc
ret
addb
or
leave
cmp
mov
mov
pop
inc
mov
sbb
sarl
inc
sub
rcll
jnp
add
lret
mov
push
ds
push
orl
dec
cmp
ds
imul
or
xor
out
add
and
lret
inc
movsb
and
mov
cmpsb
or
add
cmpsb
dec
in
aad
test
pop
clc
aaa
adc
jns
push
or
into
inc
sbb
xchg
jns
div
mov
xor
dec
cltd
xor
enter
out
pop
leave
enter
pop
js
dec
cmp
jmp
mov
fnstsw
sbb
cmp
add
mov
add
inc
xor
lods
pushf
negl
xlat
test
pop
push
mov
fisttpl
xlat
cmp
mov
pop
cmp
xorl
mov
insb
and
subb
lds
mov
iret
daa
xor
mov
out
cld
pop
pop
scas
inc
in
ret
dec
aaa
xchg
jnp
mov
or
hlt
sub
xor
mov
push
es
popf
mov
and
lods
dec
inc
cmp
xor
dec
push
iret
mov
repz
mov
jge
sti
mov
or
addps
cmpsl
stc
test
lds
or
mov
pushf
or
mov
cmp
daa
negb
mov
fcoms
loopne
sarb
repz
shlb
mov
imul
push
ret
mov
test
mov
roll
out
fsts
adc
inc
push
pop
cwtl
out
and
lea
fisttpll
add
imul
mov
inc
ret
nop
stos
push
repnz
js
jb
inc
push
jb
nop
sub
notl
jl
pop
xor
in
popf
jge
adcl
incb
and
movsl
hlt
sub
outsl
dec
xor
pop
jbe
jne
pop
insb
mov
xchg
movsl
add
xchg
pop
pushf
push
xchg
test
pop
cmpsl
fisubrs
mov
dec
push
push
out
or
fwait
jns
fstpt
test
std
mov
into
mov
fisttpll
bound
adc
cmp
std
jle
aaa
fwait
mov
push
adc
dec
repz
lret
cmp
les
faddp
fdivrl
fs
js
lods
jle
add
adc
lahf
mov
cld
bound
mov
insl
arpl
rcrl
push
cwtl
adc
repnz
fildll
sahf
loope
insb
mov
stos
loopne
sbb
mov
jo
push
cmp
push
mov
mov
stos
sbb
lods
andb
push
scas
scas
enter
xchg
cmp
mov
mov
insl
sbb
shr
repz
sbb
jge
dec
jmp
push
gs
xor
or
lea
lock
sub
add
jmp
mov
pop
mov
test
mov
ret
inc
les
ret
mov
imul
popf
inc
out
cmp
jmp
xchg
inc
into
dec
mov
fisttpl
jb
ret
pop
mov
and
lods
cmp
imul
dec
add
data16
cmpsl
or
js
sub
and
inc
arpl
dec
add
icebp
jp
in
ss
stos
sub
nop
sbb
adc
popf
inc
repz
mov
out
into
and
setle
imul
cmp
imul
je
adc
stos
inc
lcall
lods
mov
sub
loopne
stc
imul
in
adc
sbb
add
adc
push
sbb
rcl
inc
in
add
jo
cmp
sti
or
inc
push
dec
xlat
out
jecxz
or
lret
mov
into
out
add
and
adc
shl
loop
fwait
dec
push
leave
push
push
push
and
push
mov
icebp
mov
jl
and
or
fsubs
pop
mov
mov
cs
add
xchg
inc
xchg
ds
out
mov
xchg
cmpsb
dec
in
outsl
sbb
pop
adc
cld
xchg
xchg
daa
prefetch
cld
int3
loope
mov
mov
sbb
sbb
dec
fs
dec
int3
enter
into
repz
xor
aaa
mov
popa
fildll
dec
shlb
mov
mov
lea
jle
xchg
inc
mov
or
jbe
mov
xor
xchg
fdivl
test
cmp
mov
cwtl
gs
test
lret
mov
xor
fsubs
mov
jp
clc
sti
insl
rorb
cltd
mov
pop
notb
popa
jnp
jns
xchg
dec
jbe
roll
fdivr
mov
imul
pop
xchg
push
dec
repnz
call
ljmp
push
inc
xchg
cmp
mov
negl
xchg
xchg
add
jp
cmpsb
sub
push
iret
ss
jb
leave
or
lds
in
fidivs
daa
jnp
fnstsw
sti
in
out
pop
lret
pop
push
push
sub
aas
scas
out
mov
aas
popa
icebp
or
mov
inc
lret
sbb
xchg
aaa
insl
pushf
and
jbe
mov
imul
movsl
flds
mov
mov
ror
pop
dec
push
lods
push
mov
jmp
push
xchg
xchg
cltd
test
cmp
fwait
push
adcl
in
push
fcomps
jno
mov
cmp
sub
int
dec
out
gs
js
in
mov
or
loope
adc
ds
mov
sub
enter
jae
xor
jae
das
push
pop
push
mov
push
add
test
add
xchg
cmp
cli
je
push
sbb
xchg
pop
mov
or
in
cmp
push
test
cmp
jmp
xchg
mov
pop
pop
mov
xchg
repz
xor
aam
mov
cmp
stos
sahf
jbe
add
cld
xchg
mov
and
aas
sbb
dec
in
ja
mov
push
push
push
inc
jae
dec
xlat
ret
into
mov
dec
jg
ss
or
gs
mov
negl
and
frstor
jmp
test
add
pop
xchg
push
and
inc
bnd
xchg
ret
stos
push
xor
std
lds
int
sub
jp
das
iret
test
and
mov
and
and
xor
xor
mov
clc
pusha
lds
popf
mov
adc
xor
cpuid
sbb
cmp
jge
cmp
xor
jmp
push
or
rorl
mull
in
hlt
pop
dec
push
ljmp
out
jnp
dec
incl
scas
or
lret
mov
scas
fistl
jle
pop
xor
int
fstl
push
das
das
mov
add
pushf
cmpsl
ljmp
fucom
vpand
out
and
xor
xchg
inc
add
jg
jno
notl
aas
dec
jl
mov
push
or
shrl
clc
cmp
pop
cwtl
repz
fmuls
and
push
loopne
hlt
lods
movsl
testb
xchg
shrb
mov
sbb
mov
leave
test
mov
test
bound
jb
jge
add
cmp
xor
xor
xchg
adc
push
mov
lods
jp
orl
xchg
sti
pop
pushf
imul
std
push
xchg
xchg
lret
mov
fmull
push
pause
inc
iret
sub
mov
pop
sbbl
in
stos
adcl
mov
or
hlt
rolb
inc
les
aaa
adc
mov
subl
mov
decb
scas
aas
push
push
leave
fs
jmp
shlb
push
js
aad
aas
jnp
sbb
cwtl
clc
ficoml
movsb
pushf
sub
xchg
fbstp
leave
add
hlt
mov
dec
and
push
daa
out
test
and
andb
inc
push
rorl
mov
test
jno
and
push
cmc
jl
dec
adc
xor
bound
inc
jo
sub
cltd
xlat
call
jnp
ror
in
push
add
mov
test
sbb
sub
call
inc
add
xor
fs
sub
ficoms
mov
int3
adc
cmp
push
cmp
jmp
push
call
out
leave
jmp
aad
insb
mov
xchg
push
lea
rclb
movsb
aad
xchg
lock
jbe,pt
jl
mov
popa
inc
insl
outsl
mov
xchg
icebp
adc
add
or
sub
jl
hlt
leave
sbb
cwtl
mov
mov
xchg
fmull
mov
cmpsl
inc
jecxz
push
jb
frstor
jae
sbb
xchg
xor
lods
sub
pop
shll
jnp
daa
push
pushf
dec
mov
jno
push
mov
test
xchg
ret
pop
cmp
ret
cmp
pop
xor
xchg
nop
add
test
sahf
mov
mov
sbb
jl
xchg
in
xchg
outsb
test
loopne
push
pushf
pop
xor
test
stos
test
outsb
add
pop
push
aam
data16
mov
add
rolb
jb
out
cmp
mov
and
cmp
negl
mov
mov
inc
mov
push
mov
aad
xorb
pop
xchg
sbb
push
inc
loope
loop
pop
test
repz
in
loope
cmp
shrl
mov
clc
and
add
gs
adc
and
out
in
pusha
outsb
sbbb
cltd
dec
test
test
ljmp
shrl
test
movsb
lock
push
ljmp
fdivr
pop
pop
outsb
sbb
pushf
add
idivl
mov
adcl
cmp
addl
mov
lea
outsl
dec
pop
cmp
rcrl
insb
and
in
les
sti
or
orb
aam
sub
mov
roll
sbb
les
ret
ror
jne
jmp
test
cmp
pop
mov
push
pop
dec
addb
outsb
push
cmp
sub
mul
jnp
inc
loop
and
push
cmp
dec
mov
mov
enter
in
and
leave
loopne
sub
sub
adc
mov
cmp
xchg
cmp
insl
push
jge
push
and
push
mov
pusha
xor
jb
orps
fcoml
xchg
jne
mov
insl
fmull
mov
adc
xchg
ja
popa
ret
roll
fs
psllq
jmp
add
fsubs
fwait
das
lret
fucomp
into
clc
loope
jmp
fwait
ja
pop
aas
int3
mov
jge
sbb
bound
mov
outsb
inc
or
movb
or
in
aas
jnp
add
mov
inc
push
movsl
aas
test
and
fnstsw
dec
mov
sarb
xchg
xor
pop
loopne
cmpsl
dec
inc
add
test
roll
mov
add
sti
dec
lret
fs
inc
nopl
clc
or
push
push
stos
fucomp
mov
notl
lret
mov
les
jecxz
adcb
pop
inc
lret
jne
nop
insb
out
pop
sti
shr
pop
inc
hlt
mov
jno
clc
lcall
arpl
push
ss
jb
add
mov
jb
ja
adc
leave
mov
pop
sbbb
cltd
call
outsb
adc
push
mov
mov
mov
mov
imul
lods
xor
xchg
mov
push
jae
repz
sub
ret
mov
dec
test
xchg
adc
pusha
sbb
pop
dec
stos
sti
cmp
fs
scas
jg
xchg
rcrb
fdiv
adc
xchg
test
lods
jecxz
cmp
xchg
mov
addr16
sub
push
add
jle
mov
cmp
fwait
dec
jecxz
push
pop
dec
and
jo
and
rolb
outsl
push
cmp
push
imul
sub
sbb
gs
cld
fildl
scas
insl
jl
std
fxch
cwtl
pop
adc
sbb
in
jmp
push
std
clc
outsb
adcl
pop
cltd
stos
dec
rol
cmc
jns
fwait
adc
dec
mov
shlb
aas
clc
int3
add
mov
pushf
outsb
loope
pop
jmp
mov
int3
inc
out
xchg
mov
lcall
inc
jb
mov
hlt
inc
insl
pop
scas
cmpsb
fs
fiadds
inc
sub
inc
rorl
pop
scas
xor
push
popf
in
fwait
push
hlt
add
jp
push
lock
and
scas
add
mov
pushf
jecxz
jb
xchg
das
pop
pop
xor
mov
push
pop
add
sbb
mov
jg,pn
sbb
mov
stos
stos
and
add
sbb
mov
sahf
mov
jb
aad
mov
scas
pop
sub
scas
push
jns
clc
lret
popf
test
dec
push
nop
outsl
mov
cs
mov
xor
pop
inc
js
and
jne
hlt
mov
repz
sahf
fdivrl
lahf
mov
shrb
jle
rorl
fbld
inc
push
push
push
cmp
sbbb
aaa
mov
rcrb
daa
pop
arpl
lahf
les
nop
inc
cmp
pop
xchg
cmpsl
mov
fs
pop
idiv
lods
mov
xor
jb
jb
dec
jl
ds
test
or
mov
scas
inc
cmp
jns
movsb
lahf
sub
addr16
xlat
stc
cmp
sub
shl
adc
sarb
pop
push
sub
xor
scas
out
jmp
popaw
add
sahf
push
and
inc
mov
lods
cmp
hlt
out
inc
dec
sub
inc
inc
xchg
pop
dec
push
outsb
ficompl
fwait
xor
lahf
pop
shrb
rcl
adc
insl
stos
loop
xchg
pushl
mov
mov
popf
aaa
sarb
xchg
add
and
repnz
js
jp
or
ret
adc
adc
pop
fistpll
cmp
popf
inc
xchg
sbb
sti
cld
cli
mov
and
mov
rorl
lods
out
or
mov
loope
pop
iret
mov
bound
inc
in
adc
cs
xchg
push
sbb
in
cs
fldt
lods
cmp
jo
frstor
addr16
lea
push
loopne
pushf
jmp
or
repz
ret
adc
sbb
xor
or
fsts
cmp
pop
dec
dec
inc
ljmp
mov
stos
movsl
cmp
cmp
insl
jmp
xor
cltd
cmp
push
ja
repz
pop
adc
sub
mov
push
imul
push
stos
movl
je
jne
mov
and
push
push
cmp
jbe
xchg
mov
fsubr
and
and
mov
gs
in
out
fldcw
pusha
cmp
stos
and
jb
cmp
rcrb
rclb
lds
cmp
cmp
out
movsl
jmp
notb
dec
xchg
sub
cmpsl
outsl
mov
test
jbe
ja
cmp
cmp
fmuls
outsl
mov
jno
loope
sbb
scas
hlt
push
xchg
inc
mov
lock
jl
test
dec
mov
mov
jle
mov
cmp
pop
xor
stos
daa
or
sti
neg
add
addr16
insb
xor
jbe
inc
mov
jecxz
cmp
mov
popf
in
xchg
mov
rcrb
movsl
mov
fisubl
dec
daa
dec
and
sahf
les
pop
les
push
pop
mov
arpl
sub
fwait
pop
xor
push
xlat
adc
add
psubusw
leave
xchg
push
loope,pn
or
addr16
popa
xor
mov
xor
jne
enter
loopne
aaa
loope
pop
aas
pushf
ljmp
or
xchg
xchg
jnp
pop
mov
pop
cmp
jno
andb
mov
jp
push
mov
xor
inc
lds
push
jbe
pushf
sti
mov
and
insl
icebp
xchg
inc
insb
test
out
push
cmp
or
imul
and
sbb
decb
adc
repnz
test
test
jne
mov
mov
and
dec
and
pop
stos
aam
test
test
iret
xor
jle
popf
xor
xchg
sti
shl
stos
sub
rcl
jae
neg
sub
in
xlat
xlat
jo
mov
push
mov
fcoml
aam
fcoml
adc
add
adc
cmp
inc
ljmp
pop
sub
dec
ficoms
out
cmp
adc
mov
or
ss
sub
sub
cmp
inc
or
vaddsubps
pop
sub
mov
out
push
imull
lods
test
mov
pop
adc
cmp
pop
les
mov
mov
push
aas
inc
mov
push
popa
pop
and
xchg
jge
cmp
cwtl
mov
loop
fbstp
mov
dec
sub
test
lahf
les
fwait
mov
adc
sub
mov
sub
stos
cs
cli
clc
xchg
cmpsb
inc
cmpsb
mov
sahf
inc
mov
jl
and
dec
shlb
or
xchg
cmpsl
lret
and
mov
lock
jge
cld
xchg
sti
cmp
lret
icebp
mov
lods
mov
cld
mov
cli
in
push
mov
cmp
pop
notb
jmp
std
mov
lahf
xchg
out
dec
fwait
dec
pop
sub
jmp
dec
sti
lock
xor
bnd
rcrb
stos
leave
leave
mov
mov
inc
imul
mov
sbb
into
jb
push
out
pushf
rcll
mov
mov
push
dec
mov
xchg
xchg
xchg
mov
and
sub
cli
mov
in
call
insl
int
xchg
imul
jecxz
mov
jno
xchg
loop
lret
or
sbb
roll
cltd
clc
bound
sub
or
jp
mov
or
dec
call
jmp
push
loope
push
mov
mov
sahf
sbb
mov
adc
bound
cmp
addr16
pop
adc
repz
dec
jne
imul
leave
or
mov
in
popa
dec
mov
pop
xchg
jmp
xchg
ss
cmpsb
add
lods
xchg
jae
dec
ljmp
cmpb
mov
clc
pop
jae
js
push
push
push
lret
xchg
imul
mov
lods
sub
or
pop
mov
sbb
mov
out
cs
or
loopne
adc
add
es
jne
pop
push
aam
std
imul
aad
or
mov
adc
dec
adc
cs
sbb
cltd
sbb
cmp
aaa
loopne
sbb
mov
negb
dec
inc
dec
jb
fwait
imul
xor
jno
xor
mov
in
rorl
push
jae
cmp
jno
inc
sarl
fists
outsl
jo
arpl
dec
scas
sbb
imul
mov
add
lcall
push
test
pop
cs
mov
jmp
push
test
in
mov
mov
xchg
shl
xchg
clc
push
pop
orl
push
mov
call
cmp
cli
pop
mov
lcall
xchg
pop
push
jg
dec
and
pop
xor
daa
mov
dec
xchg
push
push
sbb
and
mov
gs
leave
repnz
add
xchg
icebp
inc
add
xchg
add
push
dec
pop
push
mov
lock
in
push
sub
in
pop
pop
xlat
push
cli
mov
or
std
das
dec
ljmp
sbb
xor
mov
mov
aam
sub
stos
and
cmp
test
cmpsb
sbb
scas
loop
lret
push
in
iret
inc
pop
pop
xchg
or
ja
clc
pushf
jg
lahf
outsb
add
push
and
xor
xor
js
test
mov
ss
push
push
push
aas
mov
add
xorb
lahf
xor
mov
out
cmpsb
jns
mov
cmpps
xchg
jl
cmp
int3
push
lret
push
aad
xor
sbb
xchg
cli
sbb
mov
imul
in
orl
loope
in
xchg
shlb
out
imul
movsb
xchg
pop
cmp
fldt
pop
jmp
xor
sub
and
in
xchg
inc
inc
lods
sub
fnop
jp
sbb
mov
jg
cmp
stc
into
cmp
insl
push
mov
fstl
into
sbb
movsb
xchg
add
mov
push
mov
xor
mov
push
sub
push
pushl
lret
cmp
xchg
std
xor
mov
ret
lahf
fstpl
test
hlt
enter
js
dec
and
lret
xchg
mov
adc
jp
ds
xchg
mov
jg
sbb
dec
pop
jle
cmpsb
mov
shll
cwtl
push
out
mov
data16
mov
das
arpl
xchg
into
subb
cmp
cltd
and
out
pushf
jo
ja
jne
jle
bound
xor
les
das
xchg
mov
mov
mov
xor
cmp
mov
sub
add
das
inc
arpl
lods
or
mov
addr16
fs
lret
mov
inc
stos
dec
scas
push
jmp
loope
insb
adc
sbb
iret
add
mov
in
test
dec
daa
stos
out
addr16
cwtl
out
dec
lahf
push
push
cmp
jae
jns
in
sbb
mov
jge
roll
imul
popf
loopne
or
pop
dec
xchg
daa
sbb
mov
loope
pop
xor
jae
scas
mov
fstl
dec
mov
fsqrt
out
test
xor
ja
adc
jg
xor
add
jp
imul
test
mov
js
imul
jge
test
inc
shl
lret
fsubrs
in
mov
sub
in
and
push
inc
and
and
cmpsl
sub
push
sbb
xor
stos
push
push
mov
mov
faddl
jmp
xlat
inc
repnz
adc
test
xor
fucomi
int
xor
stos
addl
imul
sub
inc
outsl
push
repz
ja
jae
daa
scas
mov
xor
jle
pushf
loop
cmc
and
ret
pushf
int3
mov
lea
insb
in
push
lods
test
sbb
inc
xor
push
shll
test
push
mov
cmpsb
sub
pop
repnz
mov
jp
jae
mov
cmp
cmpsb
neg
push
fwait
or
push
cmp
das
jmp
push
or
sub
aad
inc
and
mov
mov
les
inc
fidivrs
pop
lock
mov
push
xor
lea
adc
test
stos
push
sbb
movsb
testl
out
mov
fdivrp
adc
or
jae
ja
dec
xchg
subb
clc
jle
int3
pop
test
sbb
and
daa
lock
sub
xor
pop
out
mov
jae
lret
xchg
in
popa
pop
push
push
fdivrp
xor
dec
cmpsl
sub
pop
sbb
dec
sbbb
adc
cmp
ja
inc
mov
mov
lcall
pop
pushf
cmc
popa
stos
pop
lea
int3
xchg
gs
jne
enter
insl
mov
arpl
mov
dec
mov
addr16
xor
inc
sbb
push
pusha
pop
pop
test
push
or
xor
pop
fwait
test
mov
adc
mov
mov
pop
xchg
adc
mov
add
aaa
movsl
jb
add
movsl
lret
cmpb
fisttpll
cmp
inc
stos
mov
push
or
daa
cmp
mov
daa
subb
test
lea
jns
imul
nop
inc
dec
movsl
rclb
lock
mov
sbb
sub
hlt
pusha
inc
sahf
inc
inc
pop
xchg
fwait
mov
jae
xchg
fidivs
mov
fisubl
pop
mov
xor
sti
js
in
push
jecxz
movsb
std
pop
hlt
lahf
lahf
dec
xorb
pusha
ds
fsub
pop
arpl
icebp
imul
pusha
flds
adc
ja
pop
gs
jp
rcl
sbb
arpl
dec
pop
push
mov
addr16
inc
out
in
cmp
test
push
and
gs
aad
jmp
lret
fsubp
rolb
sti
stos
mov
test
pop
xchg
add
sarl
cltd
ret
dec
sub
stos
js
ljmp
shrb
cmp
insb
inc
mov
xor
mov
lods
and
pop
xchg
insl
mov
hlt
leave
and
leave
xor
adc
rolb
out
imul
jae
imull
cmpsl
movsl
imulb
rcl
xor
sbb
pop
xchg
jp
lahf
mov
xor
or
mov
out
mov
es
movsl
iret
enter
shrd
mov
lret
push
mov
int
lahf
mov
dec
inc
push
dec
cs
sub
lcall
loop
ficomps
shll
mov
add
rolb
mov
daa
xor
xchg
addb
std
or
stos
jne
daa
cmp
xor
imul
inc
ljmp
xor
dec
mov
push
in
pop
push
movsl
and
ret
mov
test
add
jp
cmp
repnz
cmovno
popa
inc
and
movsb
push
enter
hlt
dec
adc
jbe
adc
ja
fiaddl
xor
pusha
and
fwait
dec
cld
in
test
mov
jno
inc
pusha
push
sub
push
test
mov
ret
adc
push
mov
jg
xor
sbb
ret
push
add
jbe
xlat
mov
lds
out
mov
pop
and
mov
cmp
idivl
insl
sub
pop
add
lods
shrb
pop
push
pop
je
push
repnz
mov
mov
out
mov
xchg
mov
xorl
xchg
xchg
xor
aam
pop
movsl
sub
orl
mov
jno
les
sub
fs
pop
cmpsb
jno
out
push
icebp
mov
rclb
mov
hlt
dec
mov
lret
push
xor
cmpb
fsubrs
lods
xlat
sub
sbb
and
fwait
outsb
add
data16
xchg
jmp
test
or
pushf
cs
into
out
xchg
test
dec
add
aas
cmp
addb
sbb
adc
pushl
insl
xlat
sahf
mov
mov
sbb
inc
cltd
popf
dec
or
loop
fwait
jo
hlt
inc
mov
push
jmp
mov
lret
mov
test
cmp
and
loope
cmp
or
imul
pusha
mov
jno
shlb
repnz
cmpsl
es
outsl
pushl
sub
cmc
cmp
cwtl
sbb
and
mov
lods
cmp
stos
daa
sub
dec
push
mov
dec
xor
xor
xor
push
and
adc
leave
stos
xlat
dec
notb
dec
cmpsb
inc
fadd
sbb
pop
pop
iret
aam
clc
js
stc
xchg
and
fcmovnu
ja
pop
sbb
stos
lea
push
push
loopne
xchg
je
mov
fdivrl
mov
test
adc
xor
notb
call
mov
hlt
movsl
gs
xor
ror
mov
mov
daa
aam
or
fbstp
dec
dec
fwait
adc
sbb
xchg
xchg
repnz
lds
and
pop
push
outsl
xchg
and
or
outsl
aaa
aam
jmp
outsb
stos
cs
es
dec
lret
popf
leave
in
lret
bound
cld
stc
shll
sbb
sbb
sbb
add
jmp
dec
ljmp
loopne
sbb
mov
xchg
fs
int3
loop
mov
lods
movsl
aam
movsbl
mov
incb
push
out
jg
cmp
adc
jecxz
jecxz
mov
sub
jge
jle
cmp
shll
dec
dec
mov
das
bound
xchg
xor
adc
pop
out
stc
mov
aam
dec
cmova
std
sbb
inc
fadd
push
lcall
pop
addb
mov
fsubrs
lcall
sbb
or
sub
lock
push
dec
jge
in
inc
push
add
addr16
insl
andb
or
subb
inc
xor
roll
addr16
pusha
xchg
pop
movsl
and
or
or
loope
push
mov
inc
ljmp
fistps
jns
mov
mov
push
ds
adc
decb
pop
lret
fsubrp
sbb
inc
or
mov
push
push
adc
mov
lcall
mov
mov
fmul
lret
mov
es
inc
lcall
xor
sar
mov
and
nop
pop
inc
jb
adc
lcall
lcall
and
add
or
in
adc
lret
pop
das
andb
bound
adc
push
movsb
sub
add
into
fldl
in
and
push
addr16
scas
dec
mov
and
lret
mov
lods
mov
dec
mov
or
leave
stc
mov
and
cwtl
scas
daa
or
mov
repz
addr16
push
scas
xchg
inc
pop
ret
pop
scas
jne
and
inc
adc
out
xchg
dec
add
dec
pop
inc
mov
push
pusha
in
mov
ss
push
adc
dec
mov
mov
sub
sbb
mov
lret
pop
cwtl
push
sub
cmp
pop
or
fnstenv
mov
jnp
divb
test
mov
lahf
mov
ss
pop
or
cs
fwait
sub
or
adc
jne
jl
cs
adc
inc
lds
pushf
sub
shrb
daa
scas
sbb
iret
push
mov
xor
jp
hlt
or
lods
adcb
test
push
xchg
nop
push
imul
aad
sbb
cmp
lcall
sbb
xlat
cmp
je
pop
mov
pop
adc
pop
xor
dec
call
sbb
nop
or
add
sub
jns
test
outsl
cmc
jo
cwtl
mov
inc
add
daa
pop
sbb
xor
xchg
push
add
cld
pop
sub
adc
jmp
cli
cltd
xchg
stos
xorl
jbe
pop
aas
jo
dec
aas
les
jno
or
out
lret
adc
pusha
pop
cwtl
add
lcall
enter
fsubrp
push
movsbl
mov
negl
out
stos
mov
pushl
adc
arpl
sbb
and
sbb
ja
daa
ss
cld
push
xchg
xor
pop
lcall
sahf
fiadds
fadd
out
cmp
ret
push
mov
sub
push
sbb
mov
pop
mov
scas
sbb
inc
jge
xor
aad
pop
dec
insb
xor
nop
cltd
push
mov
pop
cmp
mov
mov
push
loope
lock
test
popa
inc
das
xchg
xchg
fstpt
and
roll
and
adc
mov
mov
cmpsl
icebp
lret
ret
mov
jg
sub
sbbl
jmp
pop
shlb
mov
jge
pop
loopne
xchg
pop
ret
pop
sbb
inc
jmp
js
xchg
dec
dec
jo
insb
mov
out
xor
das
cld
push
fsubrl
mov
sub
or
outsb
sub
mov
cs
add
mov
push
dec
lea
jae
roll
lds
xchg
data16
inc
mov
scas
mov
out
dec
inc
jae
pop
aad
lret
mov
cltd
nop
xchg
scas
scas
cmp
int3
pop
sbb
hlt
cli
into
cs
push
pop
jnp
push
mov
je
cmp
jp
or
out
xchg
gs
mov
mov
stc
push
push
xchg
popf
sbb
pop
jp
cwtl
lea
sub
lock
inc
idivb
push
int
push
ljmp
data16
mov
hlt
lock
push
and
push
mov
xlat
jne
cmp
sub
xor
insb
or
mov
lods
jle
cmpsb
js
pop
lcall
adc
sbb
pop
ds
xchg
inc
xor
aam
dec
ljmp
xor
mov
test
into
fsub
imul
or
or
jecxz
cld
testb
inc
cmpsb
js
xlat
jge
add
jbe
cwtl
enter
pop
aad
and
lret
cltd
repnz
sub
jg
lods
dec
adc
push
jne
adc
ss
sub
jno
fstps
inc
cmp
std
aas
sbbb
jnp
add
fcmove
scas
inc
iret
scas
jo
test
pop
negb
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
or
add
dec
push
add
add
pop
add
add
add
add
addb
add
pop
add
addb
add
test
add
rolb
add
clc
add
addb
add
and
add
dec
add
cmp
add
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
add
add
add
cmp
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
xor
add
sub
xor
add
push
add
xor
add
js
add
mov
add
add
add
sub
add
lock
sub
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
adc
add
add
add
add
add
pop
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
jo
add
or
add
add
add
add
add
add
add
jnp
add
or
add
add
add
add
add
add
rolb
add
add
add
add
add
mov
add
or
add
add
add
add
add
xchg
add
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
pop
stos
add
call
add
add
add
add
add
inc
mov
add
add
add
add
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
add
add
add
add
add
add
lds
add
or
add
add
add
add
add
add
or
add
call
add
add
add
add
add
lock
add
add
add
add
add
faddl
add
add
add
add
add
fiadds
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
mov
add
or
add
add
enter
mov
add
or
add
out
add
mov
add
or
add
out
add
rolb
add
or
add
add
add
mov
add
or
add
add
add
mov
add
add
add
and
add
add
add
or
add
push
add
mov
add
enter
add
add
add
add
pusha
push
add
add
add
or
add
add
xor
add
add
mov
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
je
and
dec
add
insb
add
add
add
imul
jae
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
inc
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
push
add
and
inc
add
add
add
add
je
jns
add
data16
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
jb
add
and
inc
add
jo
add
and
inc
add
outsl
add
imul
add
add
jns
and
xor
xor
xor
xor
sub
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
ja
sub
sub
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
push
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
hlt
cmp
dec
cmp
adc
add
pop
cmp
sbb
add
arpl
add
and
add
outsl
cmp
sub
add
jnp
add
xor
add
mov
add
cmp
add
xchg
cmp
mov
cmp
ret
add
cmp
fidivrs
add
add
add
in
cmp
add
add
cli
cmp
add
add
push
cmp
add
add
and
add
add
add
xor
add
add
add
dec
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
insl
bound
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
je
jne
je
fs
insb
add
jae
jo
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
ja
popa
jo
imul
inc
dec
inc
outsb
jne
push
jb
arpl
jae
dec
push
add
add
jb
outsb
jae
popa
insb
insb
inc
imul
outsb
je
jb
gs
imul
inc
jb
jo
inc
inc
push
inc
fs
imul
je
insb
outsl
add
add
push
push
jne
jb
push
gs
imul
jb
popa
je
outsl
outsb
inc
