or
cmp
adc
mov
sahf
add
pop
outsl
cmpsl
add
sbb
and
add
scas
cmpsb
aam
sub
test
jb
add
pusha
fldl
mov
sahf
xor
jle
lret
push
jp
aam
in
mov
mov
cmp
xchg
jbe
jmp
fstpl
movsb
jmp
sahf
test
movsl
es
shlb
mov
sahf
ret
pop
scas
add
push
sysexit
mov
orl
jns
mov
insl
mov
roll
or
xchg
insl
xchg
jle
movsb
loopne
pop
test
lock
aad
or
popf
jb
jmp
add
mov
aam
sub
sbb
mov
repz
add
rolb
arpl
adc
dec
in
sub
inc
inc
xchg
xor
daa
imul
and
sub
dec
push
cmp
and
mov
add
pushf
mov
fwait
inc
pop
icebp
iret
stos
jge
mov
lods
ret
xchg
in
push
aam
movsl
pop
lock
out
mov
inc
jbe
mov
in
stos
cmp
cli
mov
sbbl
enter
lret
std
loop
pop
push
insb
or
inc
in
pop
pop
pop
sbb
cwtl
popf
adc
mov
xchg
pop
daa
jg
sbb
imul
loope
xchg
cvtps2pi
xchg
fs
jae
cmpsl
xor
mov
cmp
mov
xor
call
inc
cs
add
sti
adc
fdivs
push
roll
add
int
cld
sbb
rorl
jmp
sub
inc
rcrl
mov
cwtl
xchg
imul
xor
or
mov
inc
mov
addl
lock
ja
fmuls
fiaddl
loopne
sbbl
mov
imul
dec
inc
dec
out
dec
push
mov
test
dec
aas
or
jl
cmp
cmpsl
pusha
gs
popa
sub
cmp
sbb
pop
adc
loop
js
fcmovnu
aaa
mov
pop
into
lret
sahf
pop
cmp
push
cld
pop
pop
pop
push
das
popf
cwtl
add
jge
pop
int
jecxz
fdivr
add
add
out
int3
dec
cs
or
pop
xchg
jno
sub
stc
inc
inc
pop
fbld
stos
jmp
mov
mov
ficompl
cmp
out
xor
jo
in
push
out
jne
jl
inc
out
push
hlt
push
xchg
pop
mov
fstpl
cmp
mov
mov
in
dec
cmp
js
inc
add
push
push
mov
mov
mov
mov
mov
mov
mov
shl
add
add
shr
add
xor
xor
sub
mov
mov
mov
shl
add
add
shr
add
xor
xor
sub
sub
dec
jne
pop
mov
mov
add
pop
dec
jne
push
ret
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
push
push
call
pop
pop
ret
xor
ret
ret
jmp
jmp
js
add
push
and
add
and
add
add
or
add
cmp
add
push
add
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
push
push
inc
push
xor
cs
insb
add
dec
push
push
inc
push
push
cs
insb
add
add
test
add
mov
add
ret
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
gs
je
inc
imul
gs
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
sbb
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
imul
add
add
inc
outsb
fs
popa
imul
inc
gs
inc
add
add
add
shlb
add
and
add
and
add
and
add
and
add
add
adc
add
and
add
xor
add
inc
and
add
add
add
add
lods
and
add
and
add
and
add
and
add
and
add
and
add
add
adc
add
and
add
xor
add
inc
and
add
pop
imul
insl
add
add
js
je
add
pop
pop
arpl
inc
imul
gs
je
add
add
arpl
insb
outsb
add
add
addr16
popa
imul
add
pop
pop
jae
je
jae
jb
popa
je
gs
add
add
pop
popa
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
add
pop
pop
jo
pop
insw
outsl
fs
add
pop
pop
jae
je
popa
jo
pop
je
jo
add
add
pop
gs
gs
pop
push
gs
add
add
pop
arpl
je
outsl
insb
data16
add
ljmp
adc
add
add
push
push
idiv
xchg
fbld
fstpt
jl
lahf
clc
insl
aam
adc
adc
mov
rol
lcall
mov
sbb
pop
jo
xchg
push
push
xor
sbb
xor
inc
popf
ljmp
push
fstpt
out
cmp
mov
insl
pop
sbb
jns
int
sub
mov
xor
in
cli
gs
scas
mov
pop
mov
adcb
into
jmp
push
imul
xor
ret
outsl
add
aad
insl
mov
mov
sub
add
outsl
cld
mov
ret
xchg
mov
es
push
add
sbb
movsl
aaa
and
push
test
out
ds
sahf
jb
cltd
sbb
and
outsb
fwait
pushf
stc
jp
sarb
add
aam
cwtl
popf
ret
xchg
push
pusha
out
gs
daa
in
mov
cmpsl
push
repnz
push
xchg
or
sti
ret
mov
adc
hlt
jb
adc
jg
das
sub
adc
add
cmp
mov
push
in
and
fimuls
jae
lods
mov
jmp
jae
inc
in
mov
push
push
push
mov
xor
mov
cli
pusha
jle
loopne
sahf
in
popf
mov
mov
adc
mov
imul
push
inc
xchg
pushf
mov
pop
mov
add
xor
scas
mov
lds
roll
adc
push
xor
insb
lret
mov
push
test
insb
fs
push
les
jl
pop
movsb
mov
test
out
push
adc
adc
sub
sub
sti
dec
sub
imul
lcall
xchg
loopne
adc
aaa
mov
iret
ds
aas
sub
adcb
push
pop
cld
jl
sbb
movsl
mov
sub
mov
clc
ret
cmp
pop
stos
push
and
data16
cli
in
repnz
pop
sbb
repnz
mov
rclb
adc
dec
xlat
rorl
scas
push
and
subb
cmp
shll
in
xchg
inc
xchg
in
push
les
icebp
jle,pn
in
mov
inc
aad
mov
pop
rcrb
vpsrld
cwtl
aas
cmpb
mov
inc
inc
pop
aad
into
inc
push
aaa
in
rcrl
or
frndint
pop
sbb
push
clc
fwait
nop
jp
je
pcmpgtd
ja
xchg
out
stc
dec
test
or
mov
xchg
adc
lods
mov
sbb
lds
jl
mov
mov
cli
ljmp
int
ret
push
inc
mov
leave
jbe
aam
xchg
leave
les
int3
fiaddl
fists
jl
test
aad
pop
shl
jno
jae
add
inc
leave
rcrb
or
enter
and
and
ss
adc
jle
inc
movsl
pusha
xlat
in
pop
dec
fbstp
mov
xchg
insb
repnz
insb
pop
jb
shlb
iret
inc
pop
push
fisttpl
lock
and
loope
pop
fs
movsl
sbb
cmp
pushf
loopne
mov
add
and
out
fs
pop
mulb
jno
icebp
mov
hlt
mov
xchg
cltd
push
and
jle
je
or
xchg
adc
jge
clc
mov
push
outsb
or
mov
lahf
xor
adc
xchg
hlt
push
xor
inc
andb
sub
popa
inc
mov
and
lods
sbb
js
ljmp
adcl
pop
cmp
or
ss
push
adc
enter
xor
mov
fmull
pop
adc
cmpsb
pop
iret
ss
inc
in
cmp
dec
shlb
or
sub
cmp
cli
fwait
sub
aas
inc
xor
sbb
fnsave
mov
or
pop
fcomip
cli
sub
adc
pop
push
inc
add
push
cmp
jmp
pop
inc
lcall
sahf
sbb
imul
xlat
icebp
pushf
lea
mov
or
mov
loope
gs
lahf
gs
xchg
cli
addr16
data16
mov
inc
out
pushf
mov
fsubl
jbe
mov
out
mov
or
pop
pop
repnz
js
outsl
cmpsb
test
add
mov
and
aaa
dec
jl
add
push
inc
out
xchg
push
lock
push
pusha
pop
cld
call
aaa
xorl
xchg
mov
test
test
mov
mov
jbe
jge
bound
inc
fwait
push
fs
addb
out
jl
push
push
pop
js
and
jp
int
rol
es
add
push
loope
push
push
adcl
fs
xchg
adc
cmp
xor
loopne
sub
sub
jecxz
add
rcrb
push
xor
aam
sub
jno
cs
mov
inc
dec
cwtl
mov
cmpsl
cmp
sub
pop
mov
push
dec
lcall
jo
les
or
xchg
stos
int3
or
pop
or
stos
inc
push
lods
mov
sub
ss
and
insb
xchg
fdivl
mov
xor
es
rorb
jne
mov
pushf
jl
repz
dec
jmp
or
add
hlt
hlt
jb
jne
punpcklwd
mov
div
insb
dec
nop
mov
xor
outsb
or
mov
sti
xor
sbb
arpl
mov
jl
hlt
clc
mov
lret
cmp
outsb
pop
jmp
push
subb
adcb
inc
outsl
and
xchg
loopne
push
jle
dec
add
add
ret
inc
mov
add
add
add
add
add
add
mov
add
sub
add
ret
inc
mov
add
add
add
add
inc
add
addb
add
ret
inc
mov
add
add
add
add
add
add
add
add
inc
mov
add
add
add
add
add
add
ret
inc
mov
add
add
add
add
add
add
ret
inc
mov
add
add
add
add
add
add
add
andb
add
add
addb
add
ret
inc
mov
add
add
add
add
add
sub
add
add
add
inc
mov
add
add
add
add
add
add
add
add
add
inc
mov
add
add
add
add
add
sub
nop
sbb
add
xchg
adc
push
mov
test
adc
jp
and
jp
mov
rcrb
rcr
into
pop
mov
pop
icebp
mov
pop
ja
jle
jne
imulb
cmc
xor
push
push
cs
stc
pop
xchg
ja
in
loopne
nop
ret
out
std
push
inc
jae
inc
imul
mov
inc
mov
push
or
mov
cltd
add
stc
pop
lods
fs
dec
out
jp
call
adc
lods
or
and
xor
es
xor
dec
pushf
jnp
adc
adc
add
rcrb
imul
loope
adc
inc
xchg
xor
rolb
mov
lret
sub
fisubrs
cmp
add
sub
lret
push
ret
add
jl
mov
out
mov
dec
repnz
push
and
into
pop
add
out
int3
popf
into
cmpsb
push
cmp
xacquire
jp
outsl
lods
mov
sub
add
mov
rorb
mov
mov
inc
test
mov
test
mov
cli
outsb
loope
lret
psubd
repnz
mov
ret
pop
fxch
imul
or
sti
dec
push
lods
faddp
xor
xchg
push
push
push
push
and
inc
in
sub
lods
xchg
rclb
mov
inc
das
cltd
das
jle
add
lods
js
addr16
fcomp
scas
fs
mov
mov
shrl
sbb
in
inc
mov
scas
xchg
cmpsl
aad
repnz
xlat
sbb
ja
les
rcrl
negl
cmpb
daa
adc
js
or
or
jmp
jecxz
mov
fistpll
xchg
mov
or
jo
shlb
aaa
adc
xchg
jno
adc
add
add
arpl
movsl
push
shl
ss
dec
dec
sub
mov
jmp
imul
movsb
cld
jl
pop
out
cmp
lahf
lds
iret
pop
call
inc
nop
cmp
loop
enter
scas
xor
aad
bound
jg
in
mov
lods
lcall
js
int
lret
mov
mov
adc
cmp
aam
pop
sbb
or
dec
mov
and
xchg
jl
push
loop
rcll
xchg
cmovbe
add
mov
dec
mov
cmp
adc
insb
xchg
mov
leave
pop
sahf
es
adc
add
and
nop
rorb
insl
repnz
ret
inc
mov
xor
xchg
adc
sti
shlb
fidivrl
adc
aad
cli
inc
adcb
push
jecxz
mov
jae
push
push
xor
inc
push
das
cmpsb
inc
mov
add
std
ljmp
cmp
fcmovu
out
loop
out
jae
inc
push
mov
add
mov
int3
mov
cmp
sub
sub
lret
imul
dec
and
inc
sub
mov
and
loopne
xor
inc
xchg
ret
pushf
xchg
sti
movsb
out
test
ret
mov
mov
cmpsl
mov
pushf
mov
fwait
bound
fimull
mov
jno
xor
pop
xchg
movsl
cs
pop
daa
mov
ffreep
lods
fnstsw
sub
test
sbb
xor
mov
leave
adc
inc
inc
sub
dec
cmp
divb
enter
or
adc
mov
mov
ljmp
repnz
add
mov
in
fisttps
and
arpl
gs
mov
arpl
mov
pop
push
cld
nop
inc
push
sub
call
dec
xor
cmp
cmp
pusha
mov
movsb
jl
clc
or
aad
xchg
push
adc
mov
es
add
push
push
push
sbb
push
lds
jo
das
mov
fldcw
mov
xchg
push
lahf
push
xchg
mov
or
xor
push
mov
mov
inc
push
push
pushf
in
outsb
inc
push
or
out
fsubr
inc
push
mov
xor
lods
cmp
xor
int3
pushf
jb
lret
adc
cwtl
stos
lcall
mov
sub
or
jl
mov
fbld
jg
frstor
fimuls
mov
dec
out
add
nop
sub
lods
push
push
movsb
xor
movsl
into
or
ss
pusha
cmpsl
mov
enter
push
fstpt
inc
or
cmp
cmp
in
and
mov
insl
loopne
mov
test
xor
mov
fldl
bnd
xchg
sub
xchg
jae
lods
pop
stos
rcl
aad
mov
mov
xchg
mov
xchg
popf
iret
adcb
jns
xchg
test
test
fwait
lock
add
xchg
push
hlt
mov
bnd
or
call
insl
ret
dec
ffree
cmp
std
jmp
addr16
insl
sub
sbb
push
xchg
push
stos
dec
mov
xchg
int
sub
stos
fstpl
xchg
push
loope
or
mov
add
cmpsl
sti
mulb
fisttpl
loop
mov
fildl
test
sub
arpl
xchg
inc
rolb
lods
scas
or
mov
int
dec
mov
clc
sbb
sbb
push
push
or
fst
fidivrs
xchg
andb
dec
or
xchg
pop
or
mov
adc
shlb
mov
sub
stc
pop
fisubrl
mov
pop
lds
add
sbb
stos
imul
push
test
jp
scas
insb
out
mov
lods
out
mov
mov
lods
shl
in
push
and
ja
in
sub
mov
mulb
je
in
test
je
bound
mov
pusha
add
lods
cmp
cmc
ret
int
mov
pushf
dec
mov
cmp
aad
dec
jne
xor
shrl
lahf
add
jle
dec
fsubrs
or
jl
pop
adc
dec
sbb
pop
pop
and
mov
sbb
xchg
scas
inc
mov
clc
pop
je
adc
cwtl
ds
fcoml
mov
test
or
fisttps
ret
xchg
mov
fstl
ficomps
leave
adc
int
and
call
sub
int3
push
dec
test
out
addr16
push
scas
lods
sbb
test
inc
add
rolb
mov
js
sbb
div
inc
dec
les
mov
xor
ret
ret
dec
sbbb
xchg
pop
xor
imull
sbb
cmp
mov
ljmp
jecxz
in
lret
hlt
sbb
jl
cmp
in
out
test
fsubrs
xchg
sbb
lahf
jmp
sbb
lret
jnp
mov
daa
xchg
icebp
jp
jmp
mov
mov
dec
add
or
mov
add
mov
adc
push
and
jl
mov
adcb
jae
add
inc
xchg
mov
mov
pop
cmp
adc
jg
test
sbb
fldenv
cmpsl
push
cmp
mov
ret
pop
mov
inc
lahf
jmp
cmpsb
xchg
inc
sbb
shlb
sub
push
sti
cld
hlt
out
or
data16
push
cmp
xchg
add
es
sbb
sbb
push
sub
mov
mov
rorl
cmp
pop
inc
adc
cwtl
cltd
push
cmpsl
or
sbb
add
pop
leave
dec
push
mov
test
cmp
je
ret
or
cmc
push
clc
mov
xchg
push
jns
mov
add
pusha
push
jle
stos
stos
sahf
adc
shlb
mov
dec
lods
out
mov
adc
test
dec
int3
and
sub
mov
mov
fs
inc
js
or
mov
inc
pop
sub
pop
repz
loopne
mov
sbb
frstpm(287
xchg
xor
add
mov
xlat
mov
sub
aas
scas
mov
and
jmp
test
and
cli
xor
lcall
aaa
dec
push
adc
into
icebp
into
ret
data16
cmp
mov
add
jle
push
sub
fdivl
out
sbb
insb
stos
xchg
jecxz
dec
rcll
sbb
and
fwait
int
icebp
in
cmp
cmp
je
enter
mov
and
xchg
sti
inc
xchg
push
pop
dec
push
ja
jns
sbb
movsl
mov
ljmp
pop
xchg
or
stos
sbb
cmp
lahf
sbb
inc
dec
add
xor
push
sub
jg
scas
mov
inc
lea
pop
aad
mov
nop
inc
movsb
stos
sbb
mov
leave
mov
mov
negb
or
adcl
arpl
adc
out
loopne
stos
fstpl
cld
inc
call
jl
mov
movsl
sbb
push
andb
fcmovnu
push
je
loopne
add
or
sahf
inc
repz
push
or
in
fs
xchg
push
jns
jle
add
enter
fildll
dec
mov
mov
cmc
mov
in
sub
fiadds
scas
xor
stos
pop
fnsave
add
cmpsl
fbld
ljmp
dec
es
stos
push
imul
push
subl
push
push
cmp
fimuls
ja
loop
sarl
shlb
mov
sbb
sbb
test
push
inc
sub
mov
xchg
or
pushl
xchg
pop
xchg
repnz
inc
push
outsl
xchg
cs
mov
mov
or
stos
mov
stos
xor
cmpsl
mov
and
inc
loop
jmp
fmuls
sbb
and
repz
add
mov
ret
xchg
and
mov
adc
cmpsb
mov
inc
mov
cli
lret
mov
hlt
pop
xchg
insb
sbb
fstpt
mov
out
leave
adc
push
lods
push
lcall
sahf
pop
dec
loop
xor
test
jns
mov
lret
nop
out
fidivrs
cmp
pop
gs
daa
cmpl
inc
mov
jo
jno
inc
xlat
pop
xor
ret
lahf
les
pop
mov
lcall
outsb
rcr
mov
dec
jno
push
lret
and
or
adc
les
cmpsb
sbb
decl
jo
movl
sti
imul
pushl
fisttpl
xor
stos
out
inc
cmpsl
mov
lea
bound
jl
pop
rep
mov
std
xor
in
mov
cmc
inc
movsb
repnz
rclb
stos
adc
inc
adc
dec
sub
jns
push
movsl
imul
xchg
mov
data16
sub
dec
sub
mov
and
pop
loopne
sbb
mov
lcall
daa
mov
into
push
in
inc
ss
sub
mov
sti
sub
sub
shr
aaa
loope
dec
sti
jg
or
xchg
inc
pop
cmp
je
int3
sub
xor
pop
xor
xchg
sbb
or
mov
ja
jbe
fistpl
sahf
leave
inc
xlat
negl
inc
fadds
mov
or
jno
popa
cli
pop
lahf
mov
popa
shr
sbb
divb
push
inc
inc
cld
sahf
xor
frstor
repz
sub
mov
push
stos
shl
push
imul
xchg
adc
sar
stc
mov
mov
out
jnp
xlat
jae
arpl
adcl
push
inc
inc
and
and
sbb
test
repz
fcomp
pop
test
xor
sub
add
lcall
cmc
mov
das
or
fidivl
sbb
inc
adc
scas
push
cmc
ss
aas
es
ljmp
push
adc
mov
and
das
or
cmpsb
push
sbb
push
add
out
adc
dec
cmc
and
cmc
push
or
das
inc
add
int
shl
or
dec
or
flds
push
sbb
sub
in
inc
lea
inc
lea
mov
add
insl
jo
jecxz
cmp
and
mov
in
adc
mov
movsl
push
sbb
data16
xlat
jbe
pop
mulb
jg
lods
in
lods
and
pop
lret
loop
adc
fiadds
pop
push
jecxz
jns
cltd
pop
mov
and
fnstenv
stos
fstps
out
mov
fadds
add
mov
mul
mov
sub
lods
cltd
or
dec
and
ss
pop
cld
inc
into
cmp
out
xchg
sub
xor
ss
outsb
js
cmpsl
inc
push
mov
pop
clc
lret
xor
and
or
mov
xchg
mov
pop
dec
jbe
lcall
hlt
outsl
aam
mov
call
andb
loop
shrl
insl
xor
dec
out
cli
fcmove
das
pop
push
mov
pop
sbb
cmc
fwait
aam
or
out
cmp
gs
cmp
int
lock
jecxz
and
and
stos
push
sub
jae
mov
sbb
cmpsl
stos
or
xor
into
repz
lods
and
iret
ret
test
xlat
jmp
incl
xchg
aam
cmp
in
out
xor
jo
mov
add
sahf
orb
lds
jge
ret
sub
pusha
movsb
adc
sbb
hlt
lock
dec
inc
fistpl
adcb
cmp
push
dec
popf
addl
jbe
mov
nop
mov
sub
aaa
xor
fidivrs
and
jmp
adc
imul
xchg
inc
imul
sarl
mov
cmp
inc
aam
fcos
mov
aaa
xchg
pop
cltd
pop
jae
cmc
jmp
outsb
mov
rolb
adc
push
leave
xchg
push
shrb
mov
xorl
pushf
xchg
pop
sub
jnp
push
and
xor
sbb
xchg
mov
pop
xor
sbb
pop
xor
out
pop
stc
xchg
xchg
loop
cmpsb
push
cli
es
int3
mov
popa
arpl
loopne
or
out
enter
into
inc
cwtl
push
dec
sarl
or
add
mov
into
pop
sbb
sbb
movsb
shll
shl
ss
and
mov
mov
xchg
imul
lea
jo
add
cli
stos
and
int3
nop
add
push
mov
mov
jns
in
inc
sbb
lds
pop
push
xchg
lcall
jecxz
stos
cwtl
mov
or
adc
pusha
inc
lods
in
mov
jge
imul
xor
xchg
fcomps
push
leave
mov
mov
sarb
scas
jnp
pop
cmp
xchg
sbb
call
hlt
movsb
call
jmp
mov
test
arpl
add
or
je
jl,pn
cmpsl
int
pushf
jg
jb
sahf
into
mov
inc
vpslld
push
add
cmpsb
hlt
dec
xchg
popf
out
es
ss
adc
mov
add
incb
imul
sub
in
xchg
sub
cmpsl
pop
fmull
add
xchg
test
pop
das
pop
cmp
ret
cld
xor
xor
stc
cmpsb
cli
iret
stc
mov
and
out
push
jg
adc
aas
push
ds
movsl
push
or
jmp
mov
adc
xchg
lret
scas
subb
sub
scas
push
sbb
inc
push
sbb
dec
sbb
xor
repnz
or
sub
popf
shlb
in
loope
push
mov
xchg
dec
mov
stos
orl
testb
and
pop
jp
shrb
testb
shrb
stos
lret
sub
sbb
hlt
add
out
xor
cmp
pop
and
jl
fsubp
movzbl
push
pop
pop
je
jo
inc
int3
push
lret
rclb
hlt
in
cwtl
out
lods
xchg
hlt
rcll
mov
fmuls
inc
jo
inc
in
add
mov
out
mov
xchg
js
xor
scas
cmpsl
xchg
hlt
dec
sub
add
pop
lods
and
pushf
mov
repz
sbb
jecxz
dec
fstpl
cmp
xor
ficoms
xchg
add
or
in
enter
push
fdivrl
push
fwait
pushf
jmp
inc
and
cmp
and
xor
ret
icebp
mov
xor
jl
cmpsl
out
pop
inc
cmp
rcll
dec
es
scas
pushf
pop
bound
stos
jg
negb
push
ljmp
mov
push
mov
jmp
jp
push
icebp
popl
std
test
aaa
adc
xchg
aas
cmp
jnp
int3
cmpsl
fcmovnb
pop
or
mov
imulb
push
dec
loop
sub
pop
aas
arpl
add
shll
cmp
jne
jge
dec
mov
jbe
lea
addr16
xor
mov
jo,pt
xor
scas
gs
and
inc
mov
repz
and
fsubrl
pop
cmpsl
pushf
pop
sbb
out
insb
sti
out
pop
stos
ds
das
adc
fdivs
xchg
xchg
nop
add
pop
inc
lock
inc
cltd
fistpll
adc
testb
aas
jg
cltd
xchg
cwtl
sbb
xor
sub
cmp
loope
mov
or
jge
push
mov
lret
data16
arpl
jmp
jmp
mov
and
fcoms
fistps
mov
xchg
lret
mov
je
bound
push
fldl
lds
xchg
repnz
xchg
inc
or
push
arpl
loopne
jne
loope
mov
cld
sub
pop
xor
lods
jecxz
loopne
add
cs
mov
push
sub
insl
stos
adc
cmpsb
aam
inc
push
lcall
cwtl
mov
scas
xor
ret
mov
mov
pop
out
xor
ds
jns
std
dec
hlt
dec
loopne
pop
adc
push
jae
lods
les
fcmovbe
outsl
push
popa
out
call
mov
fists
fs
sbb
pushf
adc
lahf
push
hlt
pop
test
imull
sub
xchg
repz
pop
mov
sbb
sbb
stos
and
aam
ficoml
repz
dec
clc
cmpsb
pop
cltd
inc
cmpb
sub
push
lods
xchg
mov
push
psubw
add
add
or
bound
add
sub
hlt
mov
imul
jg
and
test
in
sub
loope
mov
aas
lcall
sbb
fs
mov
es
je
fs
cli
mov
aam
into
or
jns
lret
sbb
push
adcb
jb
or
gs
inc
les
insl
or
pushf
pop
sbb
cmp
mov
mov
add
mov
add
push
js
cmpsb
cmp
inc
jns
push
push
lods
aam
hlt
jg
movsb
jmp
outsb
sbb
pop
cmpl
xchg
sti
aas
push
fadds
pcmpeqw
ret
stc
in
fadd
sbb
pop
arpl
adcl
fwait
fwait
aad
and
pop
mov
ljmp
int
cmp
mov
mov
test
hlt
inc
test
cmpb
popf
mov
mov
push
shrb
cmp
sbb
push
scas
push
insb
mov
pop
fidivrl
pop
ljmp
add
push
cmp
inc
push
mov
xor
xchg
shrl
mov
mov
outsb
mov
mov
out
nop
inc
iret
cs
call
inc
shrb
mov
test
sub
mov
push
inc
fildll
pop
lahf
cltd
mov
pop
adc
push
fidivs
test
adc
pop
cwtl
fldl
adcl
rclb
and
jae
adc
aad
xchg
xchg
jmp
add
cmc
jl
cmp
and
mov
sti
fbstp
inc
mov
out
adc
ljmp
jle
add
xor
lret
in
jge
xor
das
aam
ds
imul
shl
jo
mov
and
std
scas
mov
iret
mov
sub
dec
aas
cmp
rorl
adc
mov
mov
jl
xor
mov
sub
xchg
mov
rcrl
or
sbb
fisubrl
in
inc
jb
xor
add
pop
jb
xor
xchg
xor
sub
mov
fld
sahf
jge
cwtl
cmp
aam
sbb
loop
ret
mov
fbld
pop
imul
cli
dec
fsubs
sti
dec
mov
inc
ljmp
adc
loopne
ds
test
testb
shl
mov
mov
mov
pop
scas
sarb
pop
imul
sbb
pop
sbb
jmp
fildll
mov
jge
cld
xor
in
gs
into
scas
pop
push
jp
sub
fs
push
xor
add
push
imul
sbb
sahf
rorl
aam
in
adc
pop
sub
xchg
pop
add
mov
enter
lock
push
jmp
in
sub
aas
loope
jnp
xchg
or
dec
fst
push
cs
cmp
mov
push
loop
push
xor
fdivs
add
jae
dec
lret
cwtl
mov
mov
sbb
push
pop
cwtl
insb
fbstp
adc
sti
pushf
lea
push
cmp
sahf
je
enter
pusha
cmp
arpl
push
shlb
test
jg
inc
loope
pop
mov
mov
xchg
call
push
ss
divl
fisttpl
aad
xchg
push
jp
fistl
pop
cmc
mov
in
and
push
mov
dec
dec
insl
std
push
sub
rclb
fists
std
xor
loop
stc
jg
lahf
add
lock
sub
pop
mov
and
push
jmp
sbb
loop
dec
inc
push
xchg
mov
stos
pop
icebp
testb
jno
inc
je
pushf
sub
pop
sarb
mov
int
mov
xchg
out
mov
movsb
cmpsb
xor
imul
and
outsl
xlat
shll
test
mov
mov
rorl
adc
mov
push
inc
dec
arpl
jae
xchg
add
mov
jmp
mov
shlb
xchg
add
xchg
xchg
test
movsl
dec
dec
mov
aad
cmp
jle
pop
adc
add
insl
nop
push
and
test
cmp
out
lahf
or
test
dec
sbb
sbb
sbb
ljmp
pushf
inc
mov
stos
push
pop
mov
mov
call
mov
je
arpl
shll
das
mov
mov
pop
xor
dec
mov
rclb
neg
std
sub
inc
addr16
pop
aaa
hlt
outsl
and
ret
mov
ss
cwtl
mov
rcr
inc
fidivs
jle
sti
xor
jp
ljmp
xor
stc
jge
adc
xchg
jns
clc
jae
pop
repnz
add
orl
push
sub
into
mov
mov
jp
pushfw
cli
jl
fsubr
mov
iret
and
idivb
dec
negb
mov
daa
int3
cmp
xchg
dec
push
sub
test
lods
pushf
mov
lret
shlb
inc
jecxz
and
mov
pop
add
rcrl
dec
repnz
std
mov
sti
jns
xor
je
stc
push
aaa
or
jnp
iret
sub
dec
dec
sub
xchg
aas
cli
pusha
and
mov
adc
xchg
lret
and
rol
or
pop
in
sbb
test
jns
inc
or
xchg
xor
jnp
js
mov
push
push
cmp
sbbl
push
popa
out
out
sbb
fs
xchg
aas
movsl
sbb
xor
arpl
in
sbb
imul
outsb
fisttps
sti
in
fidivs
adc
add
mov
xchg
push
and
shl
jp
sub
cld
ds
loopne
pop
cli
fnstsw
fsubrl
add
inc
sbb
sbb
push
jp
test
xor
adc
xor
inc
and
mov
loopne
jbe
test
sbb
mov
das
sub
cmp
dec
ret
push
flds
sub
and
xchg
sarl
fxch
push
pop
mov
dec
mov
lds
mov
jmp
lock
mov
cmp
popa
sub
aam
jg
xlat
call
xor
daa
push
inc
int3
punpcklwd
addr16
dec
out
xchg
xlat
jbe
ljmp
jb
inc
out
ret
adc
push
cs
daa
or
inc
inc
jnp
add
ficoml
arpl
cld
cmpsl
mov
jbe
inc
fisttpl
jno
jl
imul
lods
sbb
jnp
lock
loope
cmp
cmp
sub
das
cli
cmpsl
loope
outsl
mov
fisubrl
cltd
and
xor
outsb
loop
sbb
dec
scas
pop
add
rol
pop
dec
or
fidivrl
std
mov
test
pusha
ja
jo
test
jno
xor
fsubl
mov
lahf
jge
and
push
xorl
pop
sarb
add
push
lret
mov
dec
scas
scas
shll
mov
push
inc
mov
cmp
cmpsb
pop
or
stc
rol
add
mov
testb
xchg
int3
sbb
or
push
movsbl
sub
in
lcall
xor
icebp
scas
jbe
arpl
int
mov
mov
pop
and
jne
mov
jl
jns
testb
fiaddl
adc
dec
mov
push
bound
mov
sbb
adc
jnp
xchg
adc
inc
call
mov
pop
out
icebp
adc
jb
push
jns
ds
adc
incl
divb
mov
loopne
xor
mov
jmp
xor
adc
xor
add
imul
dec
push
data16
fldenv
in
xchg
mov
sub
outsl
aam
jns
xchg
add
lods
adc
mov
dec
stc
bound
mov
ss
mov
mov
and
loope
push
cmp
out
test
into
mov
and
xor
loop
sar
jmp
and
repnz
adc
pop
sub
aam
ja
inc
loopne
cmpsb
jo
push
mov
adc
iret
mov
jg
fsub
jno
lret
ror
pop
cmp
inc
mov
inc
out
push
mov
loopne
dec
loope
sbbb
jbe
jne
lcall
stc
imul
xor
push
add
cmp
add
or
icebp
rcl
stos
std
add
arpl
xchg
cs
push
mov
xor
imul
popf
cmp
cli
inc
sub
cli
fstps
add
adc
jecxz
ljmp
or
dec
nop
imull
and
push
loope
dec
fs
dec
mov
jl,pt
jb
cmp
mov
cmp
loop
inc
jge
cltd
adc
ljmp
adc
jb
xor
xchg
test
test
arpl
jne
clc
cmp
insb
addl
scas
iret
in
sbb
mov
push
je
outsb
mov
test
push
xchg
pushf
mov
or
xor
sbb
call
cmc
sub
into
movsl
mov
mov
pop
call
and
xlat
test
xchg
adc
lods
mov
add
xchg
ror
mov
xchg
sbb
ds
insl
clc
and
shlb
inc
push
or
lret
cmovle
gs
adc
xchg
mov
les
sar
jg
adc
jl
loope
jle
xchg
pop
push
out
xchg
gs
push
pop
mov
add
lds
mov
sub
xchg
pop
lds
je
pop
and
int
pop
hlt
cmpsb
js
sub
jmp
mov
imul
jbe
es
shll
ljmp
push
mov
dec
hlt
dec
sarb
jb
push
push
jns
cmpsl
mov
mov
leave
inc
inc
andl
jns
shlb
rorl
movsb
cmp
add
mov
mov
inc
xchg
int3
aaa
pushf
outsl
popa
mov
lods
pop
dec
mov
stc
mul
mov
dec
fisttpl
mov
clc
hlt
mov
sub
outsl
loopne
pop
jmp
repz
mov
or
bound
aad
outsl
std
jl
jge
cmp
dec
lret
push
cmp
xchg
addr16
shrb
lds
xor
scas
push
adc
into
test
jle
pop
scas
movsl
push
jl
lods
in
scas
sbb
cmp
push
pop
cmp
dec
jg
and
movl
pop
imul
xor
push
dec
out
imul
lahf
xchg
push
xor
fidivl
aam
das
loopne
mov
dec
scas
call
sbb
mov
loop
fnsave
out
xchg
fldcw
and
enter
mov
int3
mov
sbb
lock
add
testb
loop
repnz
adc
xor
dec
aam
aam
test
sbb
sahf
pop
inc
in
or
fisubs
filds
xor
leave
mov
cmp
fwait
push
dec
mov
jle
push
push
mov
and
xlat
loopne
xor
out
dec
test
inc
jl
shl
insl
sbb
jle
or
es
test
xchg
aas
mov
call
pop
cmp
sub
xchg
push
sar
or
push
hlt
fcmovb
cmpsl
adc
fimull
or
adc
pop
pusha
push
int3
fisttpll
pop
xor
jbe
aas
dec
int3
push
stos
sbb
sub
sub
adc
leave
test
mov
test
hlt
pop
idiv
cld
dec
mov
stos
daa
or
out
push
insb
add
push
divb
cld
push
pop
aam
testb
push
and
pop
xlat
les
jecxz
mov
adc
call
stos
scas
adcl
dec
mov
cmpsl
stc
ss
inc
cld
push
mov
testb
loope
mov
insb
mov
ret
mov
jecxz
sarl
mov
jnp
inc
aaa
jg
aad
test
inc
and
pop
fldcw
push
ds
cltd
mov
add
sbb
cwtl
dec
ja
clc
cmpb
cmp
or
and
mov
cmp
adc
mov
imul
pop
cli
fisttpl
mov
inc
clc
iret
imul
dec
sub
push
pop
mov
sub
or
fs
adc
mov
in
and
xchg
sub
dec
pop
repz
xor
dec
fnsave
clc
inc
pop
jmp
push
cwtl
jp
mov
call
cs
lods
inc
inc
repz
sahf
test
add
or
es
je
insl
aas
lods
addr16
mov
imul
dec
into
push
les
mov
push
leave
push
mov
mov
movsl
mov
fistpll
call
dec
divl
and
mov
adc
cmp
push
dec
aas
and
and
pop
lods
fcmovnb
or
mov
adc
imul
sub
popf
cmp
test
enter
js
sbbb
push
in
xor
and
push
sub
push
aaa
jb
inc
mov
stc
dec
xchg
dec
icebp
mov
mov
and
cmp
inc
jg
lock
imul
pop
dec
dec
rcrb
dec
and
pop
sbb
fdivrl
dec
add
adc
outsl
rcll
pop
sub
mov
xchg
loope
loope
das
arpl
mov
icebp
sbbb
mov
addb
xchg
mov
lss
xchg
dec
fbld
mov
lret
fisttpll
icebp
fcom
fwait
sti
sbb
jo
jnp
mov
pushf
mov
in
cwtl
xchg
test
mov
adc
dec
or
lcall
ss
cmp
mov
push
lds
jnp
nop
aas
stc
push
out
stc
sub
std
shll
push
lods
rcrb
mov
cmpsb
ret
cmp
andnps
jg
mov
cmp
and
movsb
add
stos
cmp
ds
in
mov
cmp
and
fists
adc
iretw
adc
movsb
jecxz
adc
in
lods
mov
xchg
xorb
repz
sub
scas
push
sbb
mov
mov
aad
mov
lcall
nop
aas
popa
stos
aas
ss
adcl
stc
push
in
paddb
loopne
inc
jbe
and
mov
int
mov
int3
sub
nop
pop
int3
and
jbe
pop
outsb
jp
dec
insl
loop
xor
outsb
inc
insb
mov
mov
xchg
ljmp
sub
iret
push
cwtl
les
out
pushf
cmovo
sub
pop
outsb
out
sbb
push
pop
add
xchg
fmull
je
test
sub
jbe
jmp
in
repz
int3
iret
je
jae
cmp
sbb
xchg
hlt
adcb
stc
cmp
imul
dec
ret
lcall
lds
inc
jg
scas
mov
jo
mov
push
es
insl
mov
jecxz
pop
insb
xchg
fsubl
jle
cmp
sbb
adc
jnp
and
mov
cltd
arpl
out
dec
rorb
dec
pop
ja
xor
sbb
sbbb
sub
ljmp
sub
sub
dec
xor
sbb
addr16
in
dec
sub
cli
push
mov
pop
cmpsl
pop
testb
dec
pop
movsl
dec
push
and
jmp
call
xchg
sbb
inc
dec
shlb
data16
test
dec
das
sbb
pop
ret
xor
add
jne,pt
cli
jnp
pop
cs
lahf
or
fmull
flds
shlb
sub
fcomp
mov
aam
jo
mov
or
dec
test
and
into
insl
aas
cmp
out
mov
add
gs
enter
fiaddl
jno
sbb
ljmp
sbb
aas
lret
test
sub
adc
fistps
dec
jl
lods
cmp
arpl
mov
push
adc
push
test
mov
add
xchg
outsl
movsb
fcomps
lcall
xor
test
js
pop
movsl
jb
pop
ss
jbe
push
push
lret
push
pop
xlat
out
icebp
dec
test
add
out
fidivl
mov
mov
inc
xchg
cld
mov
inc
pop
seta
std
xor
push
and
cmp
popa
mov
cmp
jb
loop
or
jp
jge
insl
sub
xorb
jbe
cli
or
ret
and
push
or
lock
push
int3
negb
inc
outsl
int
icebp
test
sub
insb
xor
lods
mov
inc
jmp
out
ljmp
sub
outsb
push
xchg
es
lds
sbb
bound
das
rcrl
push
roll
into
cmp
jns
pop
cli
lret
aam
mov
xchg
in
out
pop
in
repz
cmp
adc
insl
lret
dec
jno
out
cmpsl
cmpsb
xor
add
push
negb
popa
rcr
sbb
out
sbb
add
sbb
sub
ja
dec
mov
mov
ficomps
add
mov
add
cmp
adc
lret
arpl
lock
jmp
xchg
insl
pushf
dec
loope
arpl
fwait
pop
ja
jecxz
and
sub
jae
sbb
inc
clc
loopne
cmp
lods
js
lds
cltd
inc
sub
mov
pushf
jo
pop
push
pop
into
dec
ljmp
sahf
daa
sti
mov
leave
loope
pop
ret
nop
pushf
and
shl
lods
dec
inc
push
xorl
pop
inc
lret
mov
daa
adcl
ljmp
in
in
arpl
sahf
jbe
pop
sub
imulb
loop
es
mul
xor
push
cmp
movsb
int3
lahf
jg
cwtl
out
aaa
sbb
dec
fsubr
aaa
cmp
jns
mov
sub
mov
add
push
leave
shll
leave
shrb
subl
dec
cmc
mov
mov
mov
aad
inc
js
aam
lea
fnstenv
xor
dec
std
movsb
sub
mov
int3
push
xchg
inc
loop
fcomps
jl
test
and
les
sub
cmpb
jne
rcrl
xchg
sbb
nop
stos
push
dec
pop
leave
mov
push
out
xchg
and
icebp
add
inc
dec
icebp
jo
addr16
sahf
mov
mov
outsb
jmp
test
xchg
ficompl
repnz
shll
dec
fs
jnp
lcall
inc
jns
inc
pushf
cmpsb
jns
scas
leave
inc
dec
xchg
addr16
push
and
jne
or
pop
cmp
or
cs
pop
out
mov
pop
xchg
jge
in
mov
or
inc
aas
mov
mov
imul
add
movsl
xor
xchg
jp
lods
addr16
sahf
inc
xor
add
push
scas
sub
pop
aad
jecxz
cltd
js
pop
pop
and
jb
jle
popf
mov
jl
adc
mov
mov
xchg
mov
mov
test
int3
cli
sbbb
sbbl
pop
or
loopne
xchg
mov
mov
lahf
mov
negl
xchg
bound
push
mov
movsl
inc
movsb
jno
shl
xor
imul
daa
or
fmuls
rcll
hlt
cmp
imulb
cmc
adc
std
cmp
lret
add
mov
mov
cmpsl
push
subb
push
jg
in
repnz
adc
repnz
jo
nop
jl
rcrl
in
xchg
sbb
adc
stc
and
int3
into
jmp
pop
fidivrl
lret
lret
out
mov
ljmp
push
fsubr
jecxz
pop
outsb
ds
cmpsl
or
movsl
pop
sbb
ljmp
mov
scas
inc
int3
sub
dec
aam
jae
dec
adc
fcmove
and
push
jno
dec
jl
arpl
sub
pop
jg
cmp
aad
xor
mov
add
stc
test
pop
cmc
stos
or
shl
or
add
dec
push
loop
sub
cmp
aam
jge
add
lahf
jmp
icebp
imul
inc
xor
pop
lahf
mov
adc
fistpll
outsb
arpl
sub
push
test
jno
inc
dec
mov
jb
cmp
sub
xlat
in
test
and
xchg
or
in
dec
cmp
sub
add
sarb
push
repnz
or
iret
in
cmpsl
loope
call
sbb
and
inc
push
pop
xadd
xor
and
or
dec
out
fisttps
jl
sub
leave
or
outsb
ret
clc
loope
ljmp
rcrb
gs
mov
and
jbe
cmp
outsb
xor
xor
test
fdivrl
clc
test
sbb
inc
aad
lea
sbb
push
shlb
jl
jbe
insl
imulb
sbb
cld
mov
push
lods
lgs
in
iret
loope
mov
or
loopne
mov
xor
popa
xchg
insb
or
mov
pop
and
and
shl
popf
mov
cmp
xor
jp
push
insl
sub
popf
fbld
dec
push
sbb
dec
stos
cmp
mov
cli
add
fisttpl
xchg
aam
jmp
lock
sbb
out
gs
aas
bswap
aas
fs
cmp
repnz
fsts
adc
ret
sarl
jecxz
pop
iret
cmc
clc
fldenv
jb
mov
ljmp
jns
sti
test
inc
xor
test
insb
dec
pop
addr16
int
mov
cmp
sbb
dec
push
xor
outsb
test
lret
jmp
pop
cmpsl
xor
stos
mov
cmp
test
or
cmc
cmpsl
or
push
cmp
orb
nop
sarb
xchg
bound
sbb
add
sub
popf
lods
adc
testl
pushl
or
push
sarb
leave
outsb
movsl
pop
in
push
dec
xor
mov
fisubrl
mov
inc
rolb
scas
mov
sub
xlat
iret
pop
add
mov
add
inc
aam
cmp
mov
es
xlat
stos
sub
aam
imul
sub
jo
push
iret
mov
test
sbb
push
imul
pop
je
divl
push
push
sub
sub
dec
sub
mov
out
add
call
jge
fisubrs
int3
aam
test
add
or
mov
add
xor
stc
mov
movsb
pusha
mov
cli
in
je
mov
iret
sarl
jb
mov
sbb
xchg
push
mov
lret
dec
jmp
subb
cmp
xor
add
dec
push
xlat
cmp
call
std
cmp
insb
pop
loop
fsubrl
sbbl
lods
mov
insb
pop
nop
adc
or
sub
into
lock
loopne
lret
arpl
push
into
mov
xchg
push
mov
xchg
divb
scas
xor
jno
ret
mov
xchg
jno
jmp
js
out
push
push
inc
rorb
sahf
ret
pop
loopne
dec
fistpl
sbb
push
adc
test
add
sbb
fisubrs
xor
push
rcrb
movsb
leave
xor
xor
sub
push
scas
out
mov
data16
add
and
pop
cmp
rorl
inc
loop
outsl
xor
or
fwait
or
adc
addr16
pusha
cmpsl
je
sub
sahf
xchg
jae
dec
repz
pushf
dec
cmp
je
mov
aam
xchg
push
rclb
cmpsb
add
adc
aam
mov
test
sub
leave
mov
daa
test
rcrl
popf
icebp
adc
add
sub
movsb
sub
mov
imul
pop
jp
dec
inc
test
hlt
insb
add
mov
int
andb
inc
mov
jmp
fnstsw
cltd
xor
push
cltd
xor
stos
cmpsl
xchg
or
mov
xchg
adc
rcll
sub
movsb
xor
repnz
addl
cmp
shrl
push
cmp
fcomps
mov
push
mov
loopne
xor
hlt
and
aad
dec
xor
sahf
sub
cmp
mov
fistpll
int
insb
pop
mov
sbb
ds
cmpsb
movsl
and
lcall
push
jl
sub
mov
stos
lock
jb
mov
dec
cmp
imull
mov
hlt
mov
sub
ds
cmp
xchg
aad
and
pop
dec
aaa
xchg
and
imul
aaa
and
cli
inc
inc
adc
push
mov
arpl
and
xchg
pop
js
fildl
pop
or
les
jno
mov
movsb
adc
and
pop
cli
cwtl
lret
imul
lds
sahf
dec
ficomps
mov
push
dec
jnp
pop
xchg
and
arpl
jl
xchg
fildll
es
inc
out
pop
test
xor
arpl
dec
fwait
pop
cwtl
lahf
fnsave
mov
leave
repnz
stc
fs
mov
cmpl
outsb
push
adc
sub
sbb
xor
or
das
aad
pushf
pop
pop
jno
cmp
lods
ret
pop
mov
mov
adc
addr16
pop
rcr
fnstcw
inc
mov
jecxz
dec
lds
out
xor
fdiv
ljmp
cli
dec
sbb
adc
mov
sti
in
dec
cmc
pop
iret
and
mov
mov
mov
fdivrs
mov
pop
clc
sub
movsl
cwtl
xchg
shl
imul
cmp
xor
shl
mov
dec
cmp
fldz
mov
or
or
mov
int
cmp
ljmp
into
inc
mov
xchg
adc
arpl
cld
movsb
mov
mov
cmpsl
lea
push
inc
js
or
stos
movsl
and
shrb
push
jg
mov
or
stos
scas
aaa
sbb
mov
daa
popf
and
or
clc
xlat
jne
ret
push
ljmp
in
aad
bound
sbb
pop
fistl
ficompl
pop
mov
fisttpl
cmp
add
and
shll
inc
das
sub
or
pop
test
xor
fadds
outsl
push
cmp
loopne
inc
mov
out
popl
adc
es
sbb
mov
out
inc
idivl
mov
int
push
out
jg
cmpsb
int
mov
imul
jns
mov
bnd
por
dec
xor
inc
mov
fmul
fs
jg
and
imul
push
sub
fbld
add
cmpsb
lgs
jecxz
or
or
mov
cmp
idiv
xchg
and
iret
xor
lahf
jle
add
fsub
roll
xchg
cmp
add
repnz
and
stc
xor
leave
stos
and
or
insb
dec
rorb
leave
mov
mov
or
insb
imul
cltd
jl
jae
inc
into
imul
add
test
mov
mov
arpl
xlat
inc
adc
jnp
test
loop
xor
xlat
or
cli
xchg
lods
stos
faddp
shr
incb
push
pop
pop
ss
or
rorb
lods
adc
stos
sti
xchg
and
push
adc
jecxz
shll
cmc
and
push
jbe
cmp
js
sub
test
das
sbb
js
pop
mov
loope
scas
lods
ror
sti
jmp
add
scas
mov
adc
cmp
cmp
outsl
add
into
mov
pop
daa
aaa
insl
adc
pop
js
and
sti
fimuls
testl
test
mov
ret
adc
inc
jb
jge
fiaddl
popf
out
std
cmc
sbb
out
test
scas
scas
push
jg
popf
sbb
dec
in
js
adc
or
mov
mov
jl
shlb
push
pushf
or
sbb
jb
pop
push
int3
jecxz
fsubr
aad
jbe
subl
in
in
xchg
aaa
or
movsl
or
out
shrl
aam
adc
cli
mov
js
push
lock
inc
push
cmp
lret
pop
sbb
xchg
pop
pop
add
cltd
ss
sub
mov
gs
pop
inc
mov
lcall
or
cmp
movsl
cmp
xchg
xchg
daa
cld
sub
xlat
test
cmc
cmp
aad
pop
iret
ljmp
inc
adc
nop
xchg
test
sti
mov
push
ret
sub
cltd
psubb
lahf
lds
sbb
std
iret
pusha
push
fstps
xor
jecxz
jb
mov
dec
scas
movsb
and
ret
loop
inc
sub
lea
daa
ret
jmp
aad
add
fstps
addr16
adc
pop
push
out
roll
and
jns
cmp
inc
pusha
and
ja
inc
mov
jle
mov
leave
aas
fisubrs
jns
xchg
adc
fidivrl
push
ja
cmp
sti
cmp
xor
mov
aaa
mov
push
aam
decl
push
cmp
ss
aas
xorl
fwait
push
xor
je
out
xchg
arpl
xlat
add
test
jb
mov
les
adc
push
mov
hlt
addr16
cmp
push
mov
dec
lods
xor
dec
ss
lret
nop
pop
and
mov
call
mov
xchg
push
daa
insb
arpl
mov
lea
xchg
pop
add
pop
push
fstps
mov
in
xchg
dec
lahf
xor
fmull
insb
addl
ds
add
fstpt
xchg
jns
push
mov
mov
sub
inc
stos
ss
lods
mov
imul
incl
xchg
and
cmp
xor
mov
cmp
jp
jmp
lods
repz
inc
adc
jae
iret
lods
inc
mov
or
or
adc
mov
xchg
leave
dec
add
push
mov
lods
mov
loope
sbb
jmp
pop
enter
lds
xlat
cmp
xchg
inc
aas
das
xor
out
pop
add
pusha
lods
fimull
loope
jo
mov
mov
lock
sbb
lock
jns
add
add
push
shll
mov
sbb
mov
pop
mov
xor
outsl
xchg
clc
cmp
movl
out
jne
ret
inc
dec
pop
push
pusha
sbb
xor
dec
test
jbe
lret
sub
jbe
aad
in
cwtl
repnz
loop
xchg
hlt
fists
call
mov
mov
dec
daa
shll
cmp
xor
xchg
add
js
mov
cs
sbbb
rcrb
les
stos
scas
mov
inc
outsb
dec
xchg
mov
icebp
ds
mov
arpl
subl
movsb
fiadds
daa
call
mov
cmpsl
xchg
popa
pusha
mov
xor
daa
in
int3
incl
lods
call
arpl
mov
push
mov
adc
xor
sub
sub
js
push
mov
mov
xchg
movsb
inc
add
inc
outsb
shrl
mov
inc
testl
test
or
cmp
xchg
xor
sub
ljmp
jae
add
dec
jno
jno
sbb
inc
pop
mov
pop
div
jnp
inc
pop
sbb
outsb
push
aad
pop
and
mov
je
std
bound
xchg
lock
cmp
rolb
test
add
push
mov
call
cmpsb
bnd
aad
pusha
vhaddps
mov
push
mov
sahf
adc
pop
sarl
sarl
dec
fstps
push
fsubrs
pop
dec
mov
aad
mov
inc
hlt
popf
push
mov
enter
and
fldt
int
xchg
outsl
and
or
fiadds
sbb
inc
xor
xchg
dec
pop
xchg
decl
mov
cmpsl
or
int
incb
popf
xchg
mov
sub
or
push
push
stos
mov
lcall
mov
xlat
daa
ds
ljmp
outsl
jl
inc
cmp
lock
or
out
mov
in
pop
pusha
inc
clc
pop
pop
aas
sbb
outsl
dec
repnz
test
and
cmc
repnz
hlt
jo
or
inc
xchg
fidivrl
dec
and
cmp
or
jbe
push
enter
lock
push
sub
fcoml
jmp
faddp
mull
xchg
loopne
rol
cmp
arpl
xchg
jle
mov
push
push
dec
mov
fcmove
stos
adc
xchg
es
movsl
cmp
outsb
icebp
ljmp
cmp
orb
xlat
dec
sti
push
cld
fldt
dec
cmp
jo
jo
pop
not
mov
jae
sub
inc
or
inc
jmp
pop
nop
push
fiaddl
and
dec
push
cmp
xchg
add
fsub
adcb
or
or
jbe
xchg
xchg
push
add
xchg
lret
inc
adc
jbe
push
xlat
xor
xor
inc
push
lcall
cmp
data16
popf
inc
sub
mov
add
add
pop
pusha
xorl
call
mov
sbb
cmp
or
mov
mov
lret
ror
and
sbb
pop
add
mov
add
ret
push
out
jb
mov
in
ja
fmul
and
test
jnp
xchg
xor
mov
fsubrl
cmp
pop
lock
jae
shrl
int3
and
adc
and
js
sbb
inc
push
inc
orl
inc
ret
hlt
dec
ret
jg
push
cmp
pop
addr16
scas
sbb
rcll
shlb
mov
or
test
mov
mov
jmp
clc
inc
enter
loop
jle
mov
sarl
mov
jge
jns
adc
enter
xchg
mov
insb
jl,pt
adc
test
pop
mov
inc
adc
push
insb
add
xchg
scas
clc
adc
mov
cmp
and
push
mov
cmpsl
lahf
ficoms
into
cld
jae
add
or
pop
mov
pop
imulb
push
in
js
jbe
adc
jge
jns
inc
pop
mov
iret
add
cmp
cmpb
jl
gs
lahf
sbb
push
addl
jbe
daa
popa
mov
push
int3
sbb
pop
fdivrs
lahf
cmc
insb
outsl
int3
aaa
sarb
inc
stos
sbb
push
es
and
rolb
pop
xchg
dec
outsl
lcall
and
movsl
push
in
inc
xchg
and
in
hlt
mov
mov
fistpl
ret
repz
sbb
xchg
jb
fcoml
and
cltd
push
cmp
int3
sub
mov
push
push
sub
and
stos
les
add
cltd
popa
or
inc
fwait
and
jecxz
adc
pop
ljmp
test
mov
sub
mov
bound
stos
push
adc
mov
das
stc
jle
adcb
cwtl
mov
js
lods
fadds
add
mov
out
xor
in
cmp
pop
or
mov
push
cmpsb
outsl
push
dec
dec
cmpl
pop
mov
pop
psubw
test
out
or
ret
cmpsl
lds
sbb
fimull
rcll
call
or
mov
lret
es
test
in
lret
mov
dec
mov
leave
stc
fimuls
cmp
pop
mov
imul
xor
adc
dec
dec
test
fdivs
ret
insb
lock
xchg
sti
mov
xchg
mov
sarb
push
mov
or
outsl
mov
aaa
jae
lcall
es
lea
lods
adc
and
fsubs
les
je
xchg
pop
jns
cli
mov
ja
jnp
nop
ja
and
jg
add
push
je
push
loop
out
scas
int
fstpt
push
fs
adc
mov
aaa
xchg
fildl
and
faddl
lock
mov
and
mov
orl
xchg
cmp
adc
in
cmc
mov
mov
or
push
out
or
inc
mov
movsl
xor
hlt
add
pop
lahf
andl
cwtl
out
and
jg
addb
out
adc
iret
xchg
or
cli
xor
cmp
push
es
fidivrs
and
hlt
inc
pop
aam
popf
mov
add
lods
cld
mov
and
mov
or
test
mov
mov
add
xor
mov
loopne
sbb
xchg
adc
out
rcll
pop
stos
push
mov
lea
mov
clc
push
mov
mov
scas
xor
mov
mov
xchg
jne
and
daa
fnstenv
sbb
popf
inc
scas
push
int
pop
mov
int3
pop
sub
adc
rcll
jns
cmc
pop
insb
mov
fwait
cmp
sbb
sbbb
lods
pop
mov
imull
je
adc
xor
jecxz
xlat
jmp
in
decb
and
push
mov
movsl
adc
push
push
push
cmc
daa
mov
pop
xchg
roll
mov
push
scas
add
push
push
cmp
mov
push
push
mov
pop
inc
jnp
fcmovbe
add
mov
or
xchg
cmp
push
xlat
mov
and
sbb
hlt
adc
ret
and
xor
jl
movsb
repz
xchg
popa
adc
inc
sub
lods
mov
adc
jo
cli
push
dec
movsb
das
inc
xor
in
out
inc
push
pushf
cmp
dec
adc
cmp
ss
cmp
mov
fimull
inc
jecxz
test
mov
pop
stos
lods
movsl
mov
rcrb
rcrl
push
jmp
mov
push
jg
stos
rcrl
sarb
outsl
dec
aam
fistpll
jbe
aam
pop
mov
loop
pop
gs
mov
mov
test
jge,pt
cmc
lods
scas
int
fistpl
bound
mov
inc
dec
and
out
call
push
ds
and
stos
aad
leave
jecxz
adc
dec
cmp
insl
sbb
push
cmpl
testl
inc
mov
jae
jae
fsubrl
sbb
popa
sub
cmpsb
jb
adc
movsb
or
sbb
and
lret
frstor
sbb
inc
xor
out
mov
mov
and
rcrb
cwtl
adc
test
repz
addr16
xor
out
and
movsl
pop
xor
and
outsl
movsl
pushf
mov
push
lods
int3
jns
daa
pop
les
cli
cmp
sub
mov
out
or
repz
mov
out
das
lock
push
cld
ljmp
jbe
iret
sbb
push
and
cmp
cltd
xchg
cmpl
sti
aad
mov
loopne
mov
arpl
sbb
leave
lret
repz
imul
adc
jmp
add
aas
push
xchg
insb
add
xor
jb
lret
shl
rcll
pop
popf
xorl
mov
adc
std
sub
mov
sub
fisttpl
es
jns
loope
out
xor
ljmp
sbb
push
lock
rcrl
or
aaa
ja
test
jne
popa
sti
xchg
es
mov
iret
dec
dec
xorb
lds
ds
aad
es
mov
pop
pop
lcall
lahf
and
pop
call
inc
leave
adc
adc
pop
leave
int3
push
mov
pushf
sbb
add
je
add
inc
testb
mov
adc
adc
jne
jbe
gs
dec
inc
mov
jecxz
pop
xor
xchg
aaa
test
std
mov
pop
sbb
mov
data16
das
mov
push
leave
sub
pusha
icebp
stos
and
jp
cs
sbb
jnp
aad
std
mov
nop
push
and
imul
cs
je
rcl
inc
jae
outsb
sti
sbb
push
xchg
inc
adc
std
mov
aam
std
cmp
jmp
inc
or
test
and
and
push
mov
lea
and
mov
fsin
pop
outsl
xor
cmpsb
movsl
xor
out
ret
mov
ss
and
out
mov
or
sub
mov
push
inc
inc
pop
sbbb
mov
xor
mov
leave
or
mov
push
xchg
xor
loopne
into
cmp
leave
xchg
or
jg
sbb
jnp
or
mov
std
insl
lds
in
es
or
xor
aaa
mov
int
adc
mov
adc
push
fcmove
test
ljmp
movsl
cmpsb
inc
mov
inc
loope
outsl
gs
xchg
lock
xor
fcomi
add
sbb
add
vmwrite
sbb
cmpb
imul
pushw
imul
jo
fsubr
mov
mov
call
scas
and
fcmovnu
cltd
daa
dec
repnz
or
mov
lahf
insb
push
fisubrl
je
push
sub
sbb
ficomps
stos
inc
push
xor
ret
or
mov
jno
sbb
jge
xchg
push
lods
jge
xchg
lret
add
mov
cmp
iret
imul
pop
mov
repz
and
jl
leave
or
pushf
les
or
cmpps
sti
push
and
inc
rcrb
test
cmpsl
pusha
mov
mov
xor
mov
inc
cli
push
loop
jge
scas
fwait
sti
xchg
lock
mov
filds
bnd
in
xor
sub
xchg
arpl
mov
jns
dec
mov
fcompl
or
in
mov
xchg
cmp
mov
cltd
das
push
mov
sti
jnp
fcmovne
adc
xlat
xor
sub
sbb
push
xor
push
dec
jnp
insb
or
jbe
ret
sub
sbb
pop
xchg
icebp
dec
cli
sub
lret
cmc
xchg
cmp
and
and
mov
stc
cld
in
mov
sbb
icebp
insb
shl
or
clc
inc
mov
outsl
mov
outsb
icebp
sti
mov
aad
xor
xor
push
or
popaw
inc
jecxz
imul
inc
cmpsl
pop
inc
lahf
stc
inc
aad
mov
and
fdivl
addr16
inc
xchg
ljmp
xchg
out
push
xchg
cmp
push
fisubrl
jbe
push
les
js
xlat
sbb
insl
push
addr16
or
adc
fdivl
dec
lods
sti
push
mov
xor
xchg
or
testl
inc
cs
imul
cli
paddb
int3
bound
lods
inc
rcll
loope
clc
mov
fistpll
sbb
xchg
pinsrw
pop
jne
pop
int3
xchg
jp
lcall
std
dec
sub
ljmp
in
xor
sub
hlt
xlat
sub
test
stc
jo
shrb
xchg
leave
cwtl
xchg
fwait
in
enter
and
jg
call
popa
xchg
adc
rcrl
and
jns
jecxz
xor
leave
movsb
cmp
xor
cltd
jge
pop
xchg
iret
imul
push
loop
dec
sub
inc
lods
lahf
mov
lock
mov
mov
bnd
jmp
or
loope
stc
call
sub
mov
inc
std
arpl
mov
lahf
sar
into
jg
pushf
dec
mov
adc
cmp
xchg
mov
jnp
or
fisttpll
cmp
iret
push
mov
imul
cmpsb
sbb
popa
push
jns
cmp
pop
addr16
push
or
inc
add
adc
iret
inc
in
sub
cmp
xchg
lods
test
xchg
pop
andl
test
inc
imul
movsl
iret
xlat
push
sub
pop
push
cmp
sub
lret
pop
int
cmpsl
subb
pop
iret
lret
cs
or
mov
push
ret
sbb
mov
mov
xchg
mov
pushf
cltd
out
mov
repnz
mov
nop
pop
and
testb
test
sbb
popa
idivl
sbb
inc
push
jl
mov
mov
loope
subb
sar
inc
jae
cs
pop
xchg
imul
add
loop
mov
sahf
jg
test
repz
insl
cmp
inc
ror
pop
rep
or
and
cmc
cmp
xchg
in
int
loope
and
clc
lods
jns
mov
mov
leave
mov
scas
xchg
sbb
scas
mov
cmp
jmp
aas
popa
jmp
stos
std
or
ret
mov
call
adc
daa
lret
mov
fnstenv
xchg
fidivrs
sbb
insl
pop
enter
mov
push
xor
movsb
aam
ror
aaa
pop
popa
jno
jne
dec
loope
xor
sub
into
rcl
add
mov
lods
clc
push
and
out
pusha
push
dec
jmp
stos
xchg
push
ret
jnp
inc
mov
repz
lret
and
mov
lcall
ret
stos
aas
and
popa
movsb
dec
iret
sbb
fldcw
and
mov
jns
inc
xor
jmp
jecxz
out
dec
std
mov
cmp
adc
push
mov
roll
lea
lods
push
mov
dec
xchg
psubb
cs
fcmovnb
fs
dec
flds
add
pop
pop
cli
lods
les
cld
push
sbb
mov
cwtl
mov
adc
dec
adc
sub
push
push
xchg
imul
dec
jp
dec
test
shrb
inc
fs
and
add
sti
call
adc
ja
mov
repz
fwait
xor
mov
mov
push
orl
jb
insl
push
adc
in
cmp
xchg
out
cmp
imul
addb
mull
adc
out
cmp
xorl
sbb
cmp
pushf
in
mov
xchg
sarl
cmp
jns
sub
pop
int3
sub
test
add
in
in
movsl
arpl
std
sti
rorb
mov
insb
sti
inc
dec
jb
insb
push
mov
cmp
push
mov
insl
xchg
data16
rorl
sbb
add
pop
and
enter
push
cmc
lods
jecxz
sbb
ljmp
daa
cltd
inc
fstpl
mov
pusha
mov
jmp
dec
mov
pop
sbb
mov
pop
sar
mov
push
jns
xchg
jmp
inc
mov
outsl
push
mov
pop
or
cmpsb
rorl
neg
repz
xchg
lock
out
arpl
lods
jo
je
xor
pushl
pop
or
cli
fnstsw
dec
mov
jbe
fs
push
sahf
cmpsb
add
pop
movl
add
aas
inc
xchg
mov
mov
add
cmpsl
adc
sbb
rorl
popa
or
mov
pop
or
jns
add
adc
lcall
xchg
mov
jecxz
cmp
lock
push
mov
jge
int
sbbl
fidivrl
inc
adc
loopne
test
ja
inc
fprem
sub
pop
int
mov
dec
add
xchg
jbe
mov
call
loope
subl
outsl
jp
inc
xor
lahf
pop
xor
and
cltd
cli
add
cwtl
jecxz
mov
test
push
and
in
xor
push
lods
sti
shl
xchg
out
and
push
call
rclw
xchg
cmpsl
jecxz
stc
push
jge
pop
movsl
and
xlat
gs
mov
lds
arpl
imul
cmp
mov
xor
fnstsw
mov
push
inc
stos
lea
mov
pop
enter
fnstcw
mov
dec
mov
xchg
cs
jnp
xchg
movsl
xchg
adc
mov
add
pop
jmp
in
push
mov
mov
jb
xchg
sub
cmp
mov
mov
popf
mov
scas
gs
mov
mov
adc
jl
icebp
and
jecxz
je
lock
enter
out
adc
pop
dec
outsb
add
jnp
jno
scas
jecxz
shlb
push
push
add
jmp
pop
push
fstpt
ljmp
sbb
push
out
sbb
jb
out
push
out
sub
inc
addr16
aam
scas
dec
fisttpl
pop
sub
adc
arpl
mov
sub
out
push
enter
scas
ja
test
xchg
cmpsl
lods
imul
mov
sub
movsb
and
loop
xor
subb
mov
repz
lret
cmp
pop
xchg
adc
mov
sub
cmp
in
or
test
or
lock
mov
pop
or
bound
push
sti
and
rcl
mov
lds
xlat
leave
out
cli
lods
das
sahf
and
cmp
iret
xor
mov
sti
add
nop
jnp
push
lea
mov
xor
xor
and
jl
test
dec
sarl
sbb
lret
cmp
xlat
pcmpeqw
mov
pop
add
movsl
sbb
xchg
pop
andb
out
test
or
cmp
jp
inc
leave
jae
cli
cs
push
push
mov
fidivrs
loop
pop
push
into
lds
in
mov
sti
fst
cmp
out
repz
std
jo
popf
lret
aam
sbb
repnz
pusha
fbstp
jp
out
pop
aas
mov
push
jnp
ret
add
pop
dec
aaa
mov
sbb
sub
out
mov
rclb
leave
mov
fcoms
or
je
sub
dec
pop
test
adc
stos
rorb
pusha
jp
imul
repnz
adc
jmp
cmp
xchg
xor
jnp
fbstp
fucom
push
or
pop
popf
pop
mov
daa
in
adc
xchg
gs
mov
sti
mov
or
xor
out
cmp
test
sti
test
dec
adc
pop
and
mov
xchg
adc
mov
jae
loopne
dec
jne
cmpsl
xchg
mov
lahf
clc
push
insl
xchg
cwtl
inc
xchg
inc
pop
inc
xchg
dec
shrb
movsb
and
loop
xchg
leave
dec
mov
fsubrl
mov
in
stos
pusha
push
and
xchg
xor
xchg
in
sub
and
insb
sbbb
je
fdivrs
jne
popa
call
jae
popf
testb
sar
push
push
in
mov
and
repnz
in
out
mov
cmovnp
and
data16
mov
fs
imul
addr16
icebp
pop
fwait
decl
das
mov
lock
cmp
and
dec
dec
xchg
and
or
push
push
adc
pop
add
mov
test
fbstp
popf
jecxz
bndldx
imull
sti
sbb
or
aam
fnstenv
int
pop
ljmp
dec
mov
jecxz
aas
sub
xor
mov
pop
jp
les
mov
push
jne
rcll
mul
mov
int3
cmpsb
adc
test
iret
add
add
popa
imul
je
lcall
jle
cmpl
push
das
ds
pop
daa
sbb
outsl
jl
sbb
sub
pushf
ds
movsl
sub
cmp
mov
xlat
mulb
jg
sbb
scas
ret
out
lods
loop,pt
jl
pop
mov
lock
addr16
pop
dec
dec
lcall
lcall
xor
dec
xor
addb
popa
repnz
inc
fldl
xchg
mov
faddl
jmp
mov
cmp
lock
xor
and
xchg
inc
test
jno,pt
push
xchg
repz
dec
jae
and
enter
jp
and
sbb
cmpsb
outsl
lret
lock
sarl
jne
stc
out
jno
cmp
les
xor
and
stos
pop
hlt
xor
xor
mov
fs
out
push
cltd
fwait
int
xchg
pop
fisubrl
fwait
dec
lcall
mov
mov
push
std
or
ljmp
fs
xchg
push
push
test
mov
jmp
je
aad
out
sbb
ret
push
rcl
fcmovnbe
push
je
out
xchg
mov
repnz
jmp
cmp
loopne
aam
cwtl
fidivs
movsb
jg
cli
js
cmc
lods
push
lcall
movsl
test
fidivs
inc
and
or
pop
incb
push
cmpsl
mov
inc
dec
inc
adc
fsub
sahf
lods
push
in
jmp
je
pusha
dec
push
or
mov
xchg
xor
jge
pusha
and
mov
mov
dec
jne
adc
arpl
or
pop
les
sbb
jns
xor
jbe
sbb
mov
imul
xor
es
mov
jnp
ja
test
rorb
loop
dec
and
repz
mov
cmp
int3
mov
xor
jo
xor
mov
out
cmc
adc
lods
data16
jl
dec
hlt
jge
pop
adc
adc
in
dec
push
add
negl
sbb
adc
imul
movsb
push
sarb
cwtl
xchg
pusha
pop
fst
ja
cmp
mov
jle
sbb
mov
cmp
pop
push
nop
mov
mov
jne
shlb
cmp
lods
cmp
mov
cmp
insl
xchg
mov
insl
sbbl
fcomi
in
jb
js
arpl
sbb
push
pop
mov
xchg
mov
xchg
inc
pop
in
jp
push
jbe
sub
xchg
out
jl
mov
gs
ss
addr16
mov
sahf
test
add
icebp
orl
sbb
popl
leave
add
pop
xchg
pushf
mov
les
xchg
shlb
lret
mov
imulb
cmc
jg
test
dec
mov
cmp
sub
shr
sarb
fiaddl
push
pop
daa
sbb
in
cmp
add
clc
xchg
or
sbb
mulb
aam
cmc
repnz
leave
sbb
stos
bound
sbb
push
jae
mov
insl
and
or
mov
dec
pop
mov
sbb
lcall
punpckhdq
cmc
cmc
scas
out
xor
xchg
sbb
daa
push
and
fbld
xchg
test
cmpsb
pop
lods
cmpsb
sbb
inc
sub
push
mov
push
pop
jge
dec
imul
jae
divb
cltd
in
lret
and
mov
data16
mov
add
and
xchg
sbb
cmpl
adc
inc
testl
inc
out
mov
ja
fnsave
ret
jmp
lds
pop
mov
in
call
jno
and
sub
pop
push
pop
push
loop
mov
ds
shl
sub
das
cmp
xchg
cmp
and
bound
jnp
sub
pop
jbe
adc
jbe
add
mov
loop
and
push
push
rclb
push
rep
pop
shr
hlt
sub
mov
cmpsb
fisubs
mov
push
enter
lods
mov
add
inc
cmpsl
ja
fcmovb
dec
imul
push
or
pushf
sbb
sbb
dec
jmp
insb
call
scas
mov
cmp
clc
sarl
cmpsl
nop
inc
inc
mov
add
or
xchg
or
sti
push
rorl
sub
push
mov
jl
decl
les
xor
icebp
in
push
lcall
fsts
cmp
pop
inc
pop
push
add
adc
jp
leave
dec
jne
and
pop
xor
ret
and
and
lods
stos
mov
pop
inc
in
cmpsl
sbb
xchg
jb
ret
aad
mov
ljmp
mov
xor
jecxz
shl
icebp
and
out
int
add
mov
scas
loope
xor
cld
fs
sub
lret
mov
jmp
aaa
sbb
adc
dec
inc
gs
and
pop
mov
int3
dec
and
leave
je
test
ficompl
mov
mov
mov
pop
mov
int3
pop
bts
pusha
dec
nop
mov
or
adc
inc
cld
add
mov
lods
imul
push
sarl
cmpsb
xchg
mov
adc
xor
test
stos
sti
cld
mov
push
insb
xchg
cmp
call
bound
lret
sub
adc
pop
mov
out
push
lods
stos
ret
cmp
insl
js
pusha
lret
fisubl
lcall
gs
outsb
jo
xor
sub
pop
jbe
pushf
xchg
and
mov
call
mov
dec
xchg
adc
aaa
jp
mov
cmp
lods
enter
or
mov
rcll
inc
das
adc
inc
adc
gs
adc
adc
lahf
push
mov
or
push
mov
jae
xor
sbb
je
cmp
lods
push
jge
pushf
scas
jbe
mov
jbe
test
lahf
shrb
adc
stc
mov
pop
or
cmp
arpl
mov
inc
mov
in
adc
lock
pusha
push
or
mov
xchg
dec
test
mov
cs
shlb
and
orl
pop
popf
mov
scas
stos
inc
jecxz
js
and
fs
ret
push
xchg
inc
pop
xchg
and
jb
lock
nop
int
pop
and
gs
xor
adc
pushf
leave
or
dec
dec
pop
mov
inc
mov
in
mov
sarl
inc
and
inc
fnstsw
xchg
andl
jb
or
or
shlb
hlt
xorl
shlb
fs
mov
dec
cmpsl
repz
adc
xchg
xchg
sub
sub
cli
je
ljmp
mov
sbb
lret
and
mov
inc
lahf
testb
icebp
push
sub
mov
bound
and
dec
mov
or
rcrb
or
sub
dec
pushl
or
dec
shl
push
cmp
lret
pop
movups
int
jno
orl
push
xchg
and
dec
rolb
pop
pop
pop
movsb
and
inc
xchg
xchg
or
cmc
fcoml
pop
divb
sbb
in
out
mov
jl
or
aas
inc
orb
ret
add
pop
inc
sbb
addr16
inc
aaa
push
ret
fs
add
arpl
orb
adc
subl
cli
movnti
cmpl
inc
sbb
sbb
sbb
adc
stos
xor
mov
and
cmp
sahf
in
or
loopne
mov
pusha
pop
test
xchg
jp
adc
ficoms
xor
test
cmp
jg
fcoml
sbb
ja
mov
add
jnp
mov
insl
sub
and
pop
scas
es
out
out
dec
push
ss
jae
xlat
fadds
sbb
subb
and
ret
mov
roll
jb
aas
push
sub
int
out
testb
and
xchg
jb
fwait
adc
adc
into
sbb
xchg
sub
adc
and
xchg
inc
arpl
xchg
jge
cli
lea
arpl
repz
outsl
stos
mov
xchg
pop
jae
jecxz
mov
mov
mov
inc
or
mov
jge
gs
pop
mov
mov
jnp
stos
popa
pop
in
or
mov
std
vlddqu
dec
sti
xchg
inc
xchg
mov
add
fldenv
sub
lret
dec
lods
ror
mov
std
imul
pop
rorl
pop
push
orb
and
clc
test
jge
push
adc
movsl
popf
mov
push
or
cmp
stos
or
mov
dec
xchg
ljmp
jb
push
mov
lods
iret
lds
push
mov
sbb
inc
jo
daa
ljmp
inc
in
or
ret
adc
or
jae
ret
mov
or
sub
cmc
push
mov
aaa
xor
cltd
jae
in
or
mov
pop
sbb
subb
push
sbb
iret
insl
xchg
add
into
mov
into
cld
fstpt
outsl
sub
pusha
ret
fs
inc
cmp
aaa
mov
push
mov
ja
mov
not
shld
dec
dec
push
add
out
mov
cmp
jb
pop
test
out
sub
push
hlt
movsl
popf
sahf
outsb
mov
adc
int3
push
add
pop
inc
inc
sbb
mov
jns
sub
adc
aaa
and
dec
cmp
inc
cmp
hlt
cmpsl
cmp
push
jg
push
and
sbb
mov
mov
sbb
in
testl
cltd
jle
lods
jge
in
inc
fs
jae
and
dec
or
sti
rorb
push
xor
cmpb
sub
out
loop
and
loope
lret
add
push
jbe
inc
aad
mov
pop
and
cmpsb
call
dec
stos
mov
rcrb
test
leave
adc
or
sub
lea
push
sbb
hlt
in
pop
data16
xchg
out
hlt
mov
insb
mov
push
jno
xchg
addb
or
cwtl
sub
mov
push
jns
adc
xor
pop
mov
das
test
lcall
frstor
data16
loope
outsb
adc
aam
inc
cmp
ror
fistps
xor
or
pop
add
jg
pop
mov
subb
sub
repnz
je
shlb
dec
aam
inc
cmp
lret
inc
sbb
sbb
lahf
jg
sub
or
imul
in
mov
dec
dec
movsb
mov
test
mov
aaa
cld
mov
or
lods
xchg
and
push
rcr
lock
jecxz
enter
lds
cmp
mov
push
adc
loopne
mov
mov
inc
xor
adcb
jmp
mov
jecxz
enter
cwtl
insb
loop
adc
push
xlat
add
aam
int3
in
sahf
push
xchg
adc
mov
xor
and
or
lea
outsb
push
add
mov
inc
cmp
std
cltd
mov
mov
inc
push
sbb
fbld
icebp
jp
mov
jno
xchg
out
mov
cmp
movsl
or
icebp
rcll
aad
loopne
push
pop
pop
mov
fstl
pop
inc
push
sbb
imul
sahf
out
sahf
and
sub
mov
into
inc
mov
repz
cmc
loope
cld
add
mov
mov
repz
fnstcw
or
mov
push
nop
insl
jmp
xor
fldt
mov
outsl
dec
cmp
sbbl
out
xor
pop
sub
jne
sbb
xor
scas
ret
cmp
and
inc
cli
push
jge
cld
das
mov
popf
inc
sub
mov
dec
xchg
cmp
mov
and
sub
or
aas
add
sbb
xor
in
sbb
cmp
sbb
das
addb
incl
int3
adc
lds
add
xor
test
fstpt
or
test
jns
imul
jnp
stos
jecxz
ljmp
push
stc
pop
sub
ja
and
mov
leave
out
push
mov
cli
push
ljmp
mov
sbb
enter
xor
lret
out
into
lock
cmp
pop
inc
cmp
in
dec
ja
xor
inc
jmp
sbb
and
adc
inc
xlat
js
mov
rorb
push
or
lret
push
adc
shll
lods
push
push
or
and
mov
lret
pop
sbb
out
lahf
mov
adc
sub
adc
inc
jnp
ds
mov
cmc
lea
jno
push
sbb
ret
sbb
xchg
sbb
fyl2xp1
dec
inc
lods
rcr
aas
stc
push
fwait
mov
pop
inc
xor
inc
jae,pt
test
fdivrs
jmp
ret
inc
xlat
push
pop
repnz
addr16
xchg
adc
sbb
je
out
sub
push
fldcw
mov
sub
sbb
xchg
xchg
sub
jge
fisubrl
pop
out
in
mov
outsl
test
cltd
cwtl
jns
nop
repz
and
out
sbb
pop
jae
rcrb
leave
pop
arpl
mov
mov
cmp
mov
lock
jg
andb
push
xchg
pushf
in
shll
or
mov
jbe
stc
sub
fnstsw
and
sbb
lds
cmp
dec
adc
xchg
jb
xlat
and
fnstsw
xorl
popa
pop
mov
stos
xchg
imul
int3
xchg
push
push
test
in
imul
data16
jb
lret
cmpsb
daa
mov
pushf
iret
loopne
add
jmp
outsl
and
insl
adc
sbb
sbb
out
adc
in
inc
das
fsts
repnz
pop
mov
add
je
xchg
pop
stc
inc
lret
bound
stos
xchg
jge
dec
add
xchg
stos
rol
jb
stos
jo
popa
mov
rolb
adc
imull
ljmp
ret
adc
sub
mulb
or
mov
data16
rorb
adc
packssdw
add
scas
cmp
push
into
popf
ds
inc
cmpsb
mov
lret
rorb
test
mov
jecxz
in
push
dec
cmpsb
push
das
push
lea
ss
and
iret
dec
ret
lds
pop
jae
ret
ret
xchg
mov
adc
sub
and
xor
cmp
push
jne
test
cmp
ret
out
shrl
shlb
pop
nop
ljmp
jmp
xor
xchg
xchg
mov
jb
out
repnz
ret
inc
pop
popa
arpl
lea
sub
aas
jmp
cld
inc
inc
int3
in
push
ja
push
test
push
xor
jecxz
jle
mov
push
out
dec
out
mov
loopne
jl
std
js
and
mov
stos
jno
stos
pop
adc
pop
stos
or
fimuls
cltd
stc
cli
jbe
mov
insl
cwtl
pop
xor
add
jnp
sub
flds
cmp
sbb
stos
pop
inc
fldcw
aad
pop
es
pop
push
addr16
cmp
outsb
test
outsb
mov
clc
push
int
sbb
mov
ja
and
mov
mov
popf
or
push
push
cmp
and
loopne
bound
jl
push
mov
push
lods
inc
mov
xchg
mov
out
xor
push
ret
sbb
sbb
jo
mov
sub
sbb
in
fstps
fildll
mov
sub
fstp
ss
shrl
mov
jg
in
mov
movsl
push
cmpsl
sub
icebp
iret
jns
push
je
sbb
push
dec
pop
out
xor
mov
mov
jnp
xchg
add
or
fcmove
dec
je
cmpsb
ja
push
sbb
lock
sub
or
xchg
pushf
lret
filds
or
adc
aad
mov
leave
dec
aad
bnd
imul
pop
or
cmp
cmp
sbb
bound
xlat
inc
divb
fwait
push
lahf
mov
cs
xchg
xchg
add
repz
xor
mov
adc
ss
mov
pop
rcll
popa
nop
mov
jns
nop
loopne
inc
mov
mov
repz
push
sarl
pop
push
sub
mov
out
int3
loopne
hlt
sub
or
inc
xor
inc
and
xor
cmp
and
andl
loopne
dec
cwtl
mov
popf
mov
inc
in
and
adc
and
push
shll
jno
popf
mov
fnstsw
jns
loope
add
repz
es
sub
data16
ret
inc
rorl
cmp
jge
add
or
xor
hlt
xor
jecxz
scas
ficoml
pop
xor
cli
adc
push
jns
call
jmp
dec
ja
jns
pop
fsubrl
bound
clc
sbb
push
jnp
jnp
dec
or
mov
int3
mov
loopne
in
fisubs
xor
mov
inc
mov
outsb
lahf
adc
inc
cmc
xchg
mov
push
add
pop
out
or
add
cmc
or
cltd
lret
sbb
push
aam
cld
enter
in
adc
fs
aas
mov
bound
hlt
sbb
sahf
test
inc
mov
jp
sbb
sub
jbe
pop
cmpsl
or
mov
add
pop
popf
xchg
mov
aam
pop
push
stos
mov
movsb
ja
dec
outsb
shll
outsb
push
push
lock
jecxz
pop
cmp
or
pop
cld
test
or
jnp
cltd
roll
fucomip
ljmp
cld
xchg
stos
mov
push
mov
xor
mov
xchg
dec
xchg
lret
pop
cwtl
fsts
add
xchg
adc
sahf
sahf
dec
add
xchg
and
sub
scas
fwait
cs
xchg
sarl
inc
adc
sbb
dec
cmpb
ror
rorl
push
nop
mov
push
inc
jecxz
inc
sbbl
mov
add
inc
je
in
adc
popa
jg
xor
sbb
sbb
cmc
push
stos
mov
push
imul
sar
scas
lea
stos
jb
xor
rcr
mov
std
rorl
clc
pop
loope
bound
loop
and
xchg
inc
inc
andb
pop
dec
push
adc
push
pop
push
push
nop
insb
int
pop
xchg
dec
push
and
mov
test
add
sub
or
stc
leave
lods
xchg
cmp
shll
dec
sti
les
je
or
rorb
dec
cmp
cli
add
aad
jae
dec
dec
fs
xchg
sbb
fsubrl
mov
jo
jbe
cmc
adc
les
cmpl
out
inc
sbb
movsl
sub
jne
mov
jbe
lods
dec
push
in
adc
rorb
adc
divl
mov
pushf
lods
inc
shrl
cmpl
lcall
in
imul
pop
and
push
push
push
xchg
fcmovnu
std
daa
and
aaa
not
cmp
cmp
mov
dec
lahf
mov
push
push
mov
cmp
push
fsts
adc
cmc
imul
push
xchg
cli
and
lods
enter
test
out
push
popf
cs
or
movsb
into
dec
imul
or
dec
sahf
mov
inc
or
xchg
mov
notb
xor
fcoml
push
cmp
insl
test
rorb
jmp
and
add
ret
mov
bound
sahf
adc
sbb
out
mov
pop
xor
daa
mov
nop
stos
jns
xchg
bound
add
mov
scas
push
shl
and
pop
lret
cmp
add
mov
ret
js
inc
cmp
cs
xchg
cmp
xchg
mov
push
fsub
incl
add
nop
mov
nop
fidivrl
adc
adc
xchg
sbb
rorl
sub
jl
xor
aad
sub
repnz
push
mov
ja
inc
lock
push
sti
dec
test
rep
imul
mov
xor
and
call
push
xlat
out
scas
push
sbb
test
pushf
mov
jb
aas
sub
mov
mov
push
orb
and
jl
negw
lods
xchg
shlb
add
mov
in
sbb
mov
sahf
push
push
jno
xor
stos
add
popa
xor
push
xor
cmp
not
lock
in
adc
arpl
mov
xchg
stos
mov
and
cltd
in
les
push
push
xor
jns
fs
test
sbb
jb
dec
mov
outsb
mov
fsts
outsl
aad
rcr
into
dec
adc
and
sub
frstor
addb
sahf
push
repz
xchg
dec
je
jge
sub
inc
lret
cmc
and
addb
imul
mov
daa
mov
xorb
adc
inc
cmp
add
movsb
push
add
loope
jnp
rclb
push
mov
je
add
rcrl
testb
and
pop
pop
daa
lret
mov
add
or
in
xchg
mov
sub
filds
movsb
out
std
xchg
and
pop
adc
xor
cmp
mov
loop
xchg
pop
jmp
out
pop
sbb
and
inc
lahf
pop
insl
mov
jbe
sbb
sahf
sub
outsb
push
cs
test
insb
push
push
imul
les
jo
imul
jmp
cmp
sbb
popf
lods
dec
das
mov
xchg
loop
sub
jb
incb
push
popa
mov
dec
rcll
or
xchg
pushf
dec
sub
movsb
bsf
rorl
mov
cltd
jle
cs
pop
mov
push
in
cmp
inc
and
jecxz
push
or
jb
pop
cmc
popa
xlat
outsb
xor
popa
mov
lods
popa
icebp
mov
das
pop
imull
aam
jmp
jb
lds
cmp
test
dec
cli
jnp
mov
cltd
cwtl
mov
ret
adc
mov
and
mov
loop
cmpl
pop
outsb
dec
lods
xchg
mov
adc
popf
push
in
int3
pop
mov
lds
sti
and
add
cmp
lret
jl
popf
and
jbe
int3
sbb
adc
dec
das
xchg
mov
inc
hlt
fbstp
hlt
add
lds
ret
ret
pop
cmp
cmpsl
jbe
jbe
shl
daa
jo
push
sbb
cmp
test
imul
and
mov
push
mov
cmp
mov
scas
dec
and
add
ret
push
pop
inc
test
fstpt
inc
pop
xor
fstps
fidivrs
add
orb
inc
pop
into
movsl
loopne
adc
adcb
mov
aad
adc
cmpxchg
mov
js
arpl
ret
lcall
lret
out
xor
mov
in
loopne
pop
and
inc
mov
xlat
push
outsb
into
pop
mov
push
jne
shlb
sbb
shlb
add
movsl
add
jle
xchg
mov
les
outsl
xchg
inc
daa
das
jg
loope
movsl
adc
call
lock
pop
rclb
rorb
bound
lods
rcrb
cmp
clc
das
gs
jnp
fistpll
sbbl
inc
jmp
xchg
mov
sub
repnz
dec
mov
clc
mov
fisubrs
movsl
mov
orb
pop
fstps
push
xchg
loopne
jnp
fldl
mov
jp
mov
rcrl
mov
pop
imul
lock
and
and
push
rep
push
mov
rorl
mov
iret
gs
pop
xor
mov
and
adc
inc
pop
mov
jp
arpl
sarl
and
xlat
test
jl
imul
or
push
sbb
orb
popa
jp
adc
into
pop
xor
jge
mov
sbb
cltd
daa
rcrb
sar
mov
psraw
rclb
xchg
push
pop
sub
mov
mov
dec
mov
je
js
andl
cmp
in
or
lret
movsb
and
xor
mov
movsb
push
mov
jecxz
jns
adc
fisubs
nop
les
xchg
mov
sub
iret
pop
inc
sbb
stos
loop
pusha
push
ds
scas
xor
xchg
cwtl
jbe
insb
lods
mov
dec
dec
popa
lods
add
insl
addr16
push
loope
mov
xchg
xor
je
stos
mov
mov
xor
xor
fcoms
div
jg
inc
mov
aaa
mov
test
cmpsl
cs
push
and
push
sbb
out
icebp
loope
pop
pop
out
bound
and
out
daa
jecxz
jmp
fmul
pop
popf
dec
outsl
dec
pop
lea
push
jecxz
loop
rep
loope
inc
mov
pop
jg
and
sub
addr16
adc
xchg
int3
pop
fldl
cmp
or
mov
dec
out
jne
mov
inc
sbb
push
rorb
or
xchg
insb
pop
in
dec
xchg
inc
out
push
cmc
cmpl
add
insl
mov
out
cs
push
jle
addr16
insb
mov
mov
jnp
mull
push
fdivp
push
scas
xchg
mov
rorl
sub
dec
lods
lods
cltd
jae
js
lods
mov
mov
arpl
xchg
or
out
insb
jl
push
sub
mov
lret
push
jmp
sub
jnp
sbb
pop
dec
stos
nop
jno
adc
mov
dec
push
hlt
stc
mov
das
sahf
ret
orb
arpl
popf
and
loope
pop
cmpb
call
dec
xchg
adc
inc
xchg
pusha
sarl
cwtl
mov
mov
jmp
shlb
fimuls
outsb
add
mov
inc
push
gs
push
pop
adc
clc
xchg
mov
pop
fldt
sti
scas
ss
add
or
mov
xor
xchg
push
xchg
repnz
sub
inc
adc
cmp
sbb
dec
ss
xlat
inc
ret
fimull
loopne
push
test
sbb
adc
add
int
cmc
sti
test
icebp
add
ss
inc
lret
jae
pop
outsl
push
or
ret
mov
mov
or
int3
xor
cmpsl
nop
daa
lock
int
movsl
jmp
mov
aad
shl
rolb
and
in
in
pushf
pop
cmpl
into
xchg
pop
pop
fsubl
aam
imul
sbb
cmp
out
xchg
cmp
xchg
mov
or
adc
add
push
aam
int3
sub
xchg
aaa
cmpsl
adc
or
stos
fcmovu
cmc
pop
mov
cmp
or
orb
mov
pop
and
daa
mov
cli
jo
je
inc
xchg
mov
gs
push
pop
movsb
out
jbe
mov
es
inc
push
or
incb
ljmp
stos
push
test
ret
cmp
push
les
shr
mov
or
es
sbbl
cwtl
mov
aam
xchg
xchg
stos
pop
xor
add
push
repnz
ss
push
cmc
jge
and
lock
push
pusha
mov
xchg
adc
es
cld
jno
ds
push
and
jg
scas
xchg
push
leave
lock
popf
inc
inc
stos
mov
frstor
inc
pop
dec
nop
push
adcb
push
outsl
xchg
add
insl
xchg
sbb
loop
imul
inc
jge
push
popl
in
sub
sub
xchg
xchg
or
mov
cmp
inc
out
or
add
push
dec
js,pn
mov
push
shrl
lods
pushf
popa
mov
test
mov
mov
or
fdiv
call
mov
imull
push
cmpsb
mov
clc
xchg
push
add
jle
cmpsl
and
inc
inc
xchg
cmp
outsb
test
ljmp
fisubrl
fwait
sbb
stc
jge
test
fcom
adc
mov
lret
add
push
sub
dec
dec
sub
cmpsb
das
in
imul
or
inc
js
int
jae
sbb
int
stos
cs
inc
xor
cmp
push
pop
or
rclb
lea
mov
mov
dec
xchg
cld
das
push
mov
mov
fs
repnz
mov
inc
dec
loope
pop
pusha
stc
gs
sbb
inc
mov
xor
pop
add
cld
or
or
dec
mov
mov
mov
inc
push
mov
mov
adc
jmp
push
jno
lahf
dec
pop
lock
sub
cmpsl
or
mov
mov
dec
cmp
movsb
lods
aam
clc
fwait
je
pop
mov
shlb
repnz
push
ss
and
push
andb
xchg
mov
sub
insl
jp
shrl
add
inc
push
into
add
lods
sbb
lahf
mov
sbb
push
jbe
sbb
in
sbb
mov
icebp
int
divb
inc
push
pop
mov
stos
dec
xor
pop
popf
testb
or
pop
stc
push
mov
sub
loope
sub
xchg
xchg
push
or
lods
mov
rorl
das
mov
fstl
fs
icebp
jp
sub
mov
sub
cmpsb
sbb
add
jb
and
nop
movl
cltd
mov
sub
stos
xchg
test
jo
mov
in
scas
lahf
pop
push
push
pop
xchg
imull
sub
dec
adc
hlt
push
imul
push
je
mov
leave
adc
adc
push
xor
pop
push
rclb
dec
xlat
lret
leave
aas
arpl
xor
cmpsl
or
jmp
pop
sub
in
lret
jne
dec
xlat
cmp
sub
or
push
or
stc
dec
mov
adc
lret
jmp
imul
jne
sub
ss
sbb
out
xchg
pop
jecxz
push
inc
and
fidivs
je
mov
dec
jno
mov
mov
lock
inc
mov
xchg
jg
xchg
jae
test
stos
pop
mov
mov
notl
orl
push
jg
mov
push
push
dec
scas
jmp
mov
icebp
push
mov
sub
mov
xchg
leave
ficoml
adc
daa
mov
pop
xchg
jb
std
pop
xor
lods
push
lea
sub
out
jnp
aad
add
cld
pop
and
aam
pop
pop
pushl
pushf
inc
sti
push
test
fnstenv
pop
add
add
dec
icebp
adcl
mov
push
les
pop
out
aad
push
lret
shlb
shr
cld
ljmp
and
jae
daa
push
pop
cmpsb
xchg
jecxz
outsl
cmp
push
std
outsl
or
mov
sbb
test
sarb
mov
dec
shrb
pop
sub
push
cwtl
adc
jb
int3
sub
mov
ss
push
fists
jns
scas
ja
cmp
pop
mov
sbb
daa
sbb
out
xchg
xchg
jae
push
stos
fcoml
and
shll
jno
jecxz
cmc
pop
jo
mov
mov
inc
mov
sub
add
push
daa
jnp
mov
rcrb
js
sub
push
pusha
cld
add
in
fisubrs
push
cmp
adc
mov
adc
adc
nop
mov
faddl
or
fwait
dec
imul
cmp
dec
je
mov
xor
push
mov
scas
test
add
lds
fidivrl
lods
adc
and
insb
addr16
in
out
stos
mov
hlt
adc
sub
sbb
mov
dec
adc
inc
es
add
cmpsb
inc
and
pop
xor
fisubl
faddl
std
jo
scas
jmp
sti
cld
pop
sbb
ret
fidivrl
xlat
out
inc
or
inc
push
cmc
jnp
jns
adc
jmp
js
cmp
movsb
jno
mov
call
lahf
bound
or
lock
lret
mulb
sub
into
test
pop
cmp
push
mov
mov
sahf
je
fsubs
addr16
dec
sub
fisubl
mov
and
dec
inc
fildll
pop
enter
cmp
lahf
fstps
sahf
jbe
cs
es
stos
out
fdivrs
fstpt
ret
test
push
popa
xor
add
cli
inc
jbe
or
out
dec
hlt
iret
mov
jae
fiadds
je
sti
stos
add
pop
push
push
sar
std
adc
xchg
lahf
fucomip
xor
aad
jne
into
lret
mov
adc
dec
rolb
jmp
insb
push
mov
clc
xchg
aaa
rolb
popa
pop
dec
or
cwtl
jo
in
xor
lea
loopne
popl
mov
cmc
mov
mov
xchg
cld
mov
test
and
cmp
outsl
mov
loopne
mov
adc
xlat
pop
sub
add
sub
mov
adc
imul
pop
and
adcl
mov
fldcw
push
imul
popa
into
jne
push
dec
iret
push
fwait
popf
inc
dec
call
cltd
adc
or
ret
repnz
mov
daa
popf
pop
mov
loopne
jae
divl
xor
test
cli
hlt
xor
lock
pop
mov
adc
fimuls
scas
pop
enter
aam
aam
rcll
inc
xor
pop
inc
jnp
sbb
dec
lret
sub
jle
xchg
inc
lods
xchg
mov
add
jnp
out
sub
fsts
or
jne
icebp
lret
dec
cmp
leave
into
cwtl
and
daa
xchg
out
mov
test
jo
fidivl
and
scas
dec
inc
popa
inc
ret
fildll
decb
cwtl
sub
inc
xchg
add
mov
data16
xchg
mov
jl
dec
mov
or
push
jo
dec
out
daa
repnz
dec
pop
cmp
inc
fwait
push
insb
mov
inc
cmp
push
out
push
orl
sti
mov
aad
sti
pop
popa
inc
and
popf
lods
cmp
push
mov
in
push
jl
mov
sub
push
mov
imul
push
adc
inc
push
mov
bound
inc
popf
movl
and
adc
inc
mov
and
mov
ja
xchg
xchg
cs
mov
push
mov
add
jmp
and
fbstp
ja
dec
test
loopne
adc
jg
popa
mov
in
jbe
test
mov
rcll
insl
mov
adc
xchg
xor
pop
push
in
inc
cs
call
test
cmpsl
je
scas
push
adc
add
std
sbb
pop
mov
mov
nop
jecxz
xlat
mov
sbb
fs
and
jle
mov
outsb
adc
iret
inc
add
mov
cmc
mov
xchg
pop
fs
push
mov
cld
aad
inc
mov
mov
ja
xchg
sbb
pop
out
sahf
ret
cli
jo
sub
mov
cmpsl
xor
aas
popa
xlat
pop
sbb
xchg
push
stos
inc
cli
xchg
addr16
je
xor
movsl
decb
add
jae
mov
mov
inc
xchg
add
cmp
mov
jecxz
mov
pop
jmp
sahf
lods
sbb
pop
xchg
dec
rcrl
test
fnsave
sub
fwait
inc
push
jns
mov
pop
test
lahf
imul
call
dec
mov
shlb
adc
sub
adc
fdivrs
add
add
js
push
and
data16
add
std
cmp
xchg
mov
gs
cmpps
mov
pushf
in
pop
jp
push
cmp
je
mov
xlat
or
mov
outsb
bound
xor
mov
xlat
jno
test
test
rcll
pop
xchg
or
add
outsb
sub
cmp
lahf
ss
iret
and
lret
loop
sbb
aas
loopne
aaa
push
xchg
sbb
pop
mov
mov
xlat
or
insl
mov
fisubl
mov
dec
add
movd
push
mov
sbb
pop
ds
mov
and
jmp
jmp
daa
cli
mov
aas
nop
cmpsl
inc
pushl
xor
ret
leave
xchg
jns
push
dec
out
insb
cmc
mov
lods
js
fs
call
in
mov
mov
mov
xchg
outsl
jb
les
test
imul
imul
clc
jo
inc
subb
ror
push
push
pusha
cmp
push
inc
lahf
cmpsb
dec
pop
ror
rorl
shr
sub
and
jne
daa
push
cmp
scas
notl
dec
mov
sti
adc
xchg
adc
jbe
pushf
dec
mov
dec
or
pushl
mov
xchg
sarb
jb
sbb
scas
cmpsb
jecxz
dec
out
imul
adc
mov
mov
shll
or
lods
js
jbe
in
addr16
mov
fcmovu
xchg
jb
pop
push
dec
into
outsl
inc
pop
dec
push
inc
clc
sub
out
inc
test
mov
or
mov
stos
or
in
push
lods
repnz
out
ss
loopne
in
and
cmp
js
xchg
add
imul
pop
sbb
inc
inc
mov
imul
loope
outsb
push
ffreep
aas
ljmp
imul
daa
sub
jl
xchg
and
out
adc
jno
mov
roll
xlat
into
aas
pusha
sub
nop
xchg
xor
outsl
aam
hlt
lret
pop
in
addl
lret
pop
sub
clc
push
cmpsl
mov
jns
jo
rorb
fldl
or
imul
push
pop
dec
or
push
dec
in
sub
cmp
adc
cmp
bound
aam
sahf
negl
shll
and
pop
cld
push
fdivrs
jge
cs
lahf
and
bound
fisttpll
fmull
leave
imul
negb
push
rcl
jae
and
loopne
outsb
add
jbe
add
pop
mov
mov
fwait
sbb
addl
add
mov
pop
lock
sbb
sub
fwait
add
adc
lods
mov
pusha
mov
test
cltd
adc
stos
cs
subl
mov
js
inc
add
enter
mov
cmp
movsb
adcl
es
push
in
mov
cmp
add
sub
xchg
sub
jl
lods
cmp
mov
pop
rcrl
and
rcl
mov
xor
lahf
test
imul
lea
jg
mov
inc
sub
std
test
xor
loop
cmc
dec
lret
cmpsl
mov
out
cmp
cmpl
stos
lret
bnd
add
jbe
cs
xchg
or
shrl
jle
shrb
mov
je
push
cmc
sti
js
xchg
outsl
dec
sub
fwait
clc
jmp
daa
mov
rorb
repnz
fnstcw
pop
sbb
push
dec
xchg
pop
jns
sarl
xchg
fwait
pop
xchg
xchg
push
pop
dec
sub
mov
leave
testb
and
add
out
adc
cmp
pop
cltd
sub
fisubrs
push
add
mov
addb
add
mov
mov
sub
movsl
mov
pop
jp
mov
dec
pusha
cmp
shl
mov
push
xor
sbb
inc
lret
stc
lahf
js
ljmp
insb
xlat
mov
push
mov
push
hlt
inc
lds
test
jb
adc
into
fcomps
inc
jo
leave
adc
scas
roll
gs
mov
mov
cmp
adc
xor
test
or
fidivrs
stos
pop
das
addr16
popl
pop
and
jge
enter
sub
add
and
icebp
comiss
xchg
adc
jp
sbb
or
cwtl
daa
rclb
stc
fistps
stos
cli
fcoml
xchg
outsl
sub
rcrl
mov
jno
and
jge
nop
call
mov
rcrl
pushf
mov
ljmp
imul
enter
aad
sub
add
pop
aaa
jbe
or
sbb
xor
or
mov
push
daa
pop
pop
dec
es
xor
xchg
loop
call
out
rorb
js
pop
repnz
jae
push
out
mov
nop
sahf
jmp
hlt
mov
mov
ss
cmp
adc
mov
scas
out
jl
inc
mov
mov
pop
mov
cmp
sbb
iret
dec
popa
and
das
mov
repz
mov
imull
jb
outsb
sub
mov
dec
sti
into
add
mov
adc
mov
inc
pop
nop
and
sub
les
mov
xchg
mov
and
mov
inc
shrb
xchg
fs
scas
xor
cmc
xchg
dec
movq
lods
andb
mov
pop
sub
lds
sub
pop
rep
popf
push
addr16
jecxz
movsl
fs
sbb
sub
cwtl
dec
adc
enter
inc
negb
and
sub
test
xor
jle
ja
cmp
pop
daa
imul
and
stos
pop
movsl
fistpll
fstpt
mov
cmp
imul
test
add
aam
mov
push
mov
mov
movsb
sub
mov
stc
sbb
jb
add
xchg
ss
or
push
in
mov
sub
jb
mov
les
adc
imul
cli
mov
mov
arpl
inc
in
es
hlt
dec
xor
and
mov
cld
clc
jle
aad
jbe
data16
xchg
out
sahf
test
ja
popa
gs
add
sub
mov
cmp
repz
mov
mov
xchg
rclb
movsl
ficompl
stos
xor
xchg
sbb
cmp
imul
mull
adc
adc
inc
xchg
push
mov
loop
int3
xlat
cmp
add
mov
xor
imul
test
sbb
dec
sub
rcll
jl
sub
or
es
inc
jo
and
lea
sub
mov
lds
pop
aaa
jns
lea
mov
stos
ljmp
add
ss
sbb
inc
cltd
xchg
mov
inc
lret
fwait
out
test
imul
jge
sub
cli
xchg
sbb
dec
dec
xchg
lods
sahf
xchg
cmp
loope
ljmp
jne
sbb
pop
and
add
das
adc
ficoml
cmpsl
inc
in
xchg
pop
stc
nop
mov
scas
and
mov
stos
jle
cmpsb
mov
xor
xor
xlat
xchg
into
dec
and
jae
mov
in
mov
pusha
push
mov
inc
ds
mov
push
out
leave
pop
lea
xor
pusha
sub
adc
shld
nop
in
add
gs
sbb
pop
mov
cld
push
mov
cmp
mov
sbb
sub
sbb
mov
pop
adc
daa
mov
aad
adc
mov
sahf
mov
xchg
jmp
popa
stos
xorb
xchg
xchg
insl
mov
cmpsl
repnz
xchg
leave
shrl
mov
int3
or
inc
inc
dec
iret
pop
jno
xlat
outsb
or
je
out
push
je
mov
jae
sub
stos
or
xchg
sbb
sti
xchg
out
ret
jb
arpl
sbb
cltd
popa
inc
fcmovbe
sahf
orb
out
mov
pop
shlb
out
xor
fwait
inc
jg
xor
push
or
pop
popf
pop
xor
iret
scas
ret
xchg
cmp
lds
jg
xchg
mov
aas
mov
mov
push
in
dec
push
push
call
in
stos
mov
xchg
jns,pn
loopne
fdivp
mov
mov
idivl
loope
xchg
scas
pop
pop
fidivs
shll
pop
cmp
sbb
dec
mov
jge
and
in
imul
decb
mov
push
dec
dec
xor
mov
test
ret
or
popf
mov
inc
popa
ret
nop
icebp
int
and
testb
pop
lahf
aas
scas
fs
call
cli
xor
add
inc
loop
je
shlb
xchg
add
cltd
rcrb
dec
push
fcmovnu
sub
mov
add
jo
xor
sub
call
cwtl
incl
icebp
xchg
hlt
push
repnz
clc
adc
xchg
jae
addr16
or
pop
sti
fs
lea
lcall
sub
cmc
stos
std
mov
pop
ret
inc
out
hlt
aad
mov
pop
jb
xchg
pop
aas
or
loope
push
sbb
stos
push
add
cmpsb
pop
cmc
shrb
push
xchg
orl
repz
mov
test
or
movsl
xchg
and
pushf
lret
roll
stc
sahf
stos
cmpsb
mov
cmp
push
bswap
sbb
push
or
stos
ds
add
jnp
jecxz
add
mov
xor
or
insl
ret
mov
jg
lret
jb
cmp
xor
push
pop
ja
mov
ret
imul
mov
inc
mov
dec
jl
xchg
mov
jge
sti
mov
test
cmp
mov
inc
push
sarl
scas
pop
test
mov
xchg
cmp
pop
mull
lods
jmp
and
cli
mov
pusha
adc
and
out
jge,pn
jp
lahf
rcll
stos
mov
xchg
jmp
dec
call
scas
lock
cli
xchg
mov
dec
movsb
sahf
or
cmpl
movsl
cmp
cmp
in
push
popa
insb
adc
xchg
fisubrs
pop
das
sub
lds
imul
sub
ja
aam
jl
push
inc
lods
jmp
and
sahf
or
movsb
enter
mov
inc
sub
psubq
jg
stos
sti
aad
and
outsb
add
push
jg
es
outsl
shlb
fwait
pop
fs
cmp
inc
jmp
rcrl
orl
mov
and
xor
and
pop
pop
jnp
dec
out
filds
adc
mov
and
movsb
rcrl
xor
shlb
push
loop
lret
xor
imul
mov
adc
mov
mov
mov
lcall
nop
int
inc
mov
push
mov
pushf
mov
push
and
and
mov
pop
and
hlt
push
subb
push
xchg
xchg
xchg
and
scas
loop
mov
dec
add
pop
lock
ret
dec
imul
movsl
push
sti
and
mov
loope
popa
and
xchg
daa
aad
sar
out
mov
std
aad
punpcklwd
cltd
adc
add
cmp
cwtl
push
fcompl
pop
movsb
inc
cmp
es
dec
xchg
xor
adc
xchg
out
dec
dec
push
sbb
dec
jmp
dec
out
cwtl
jmp
insl
repz
mov
out
add
js
jae
adc
es
add
popf
fwait
out
push
ds
stc
mov
xchg
sub
and
sub
jge
rol
cmp
mov
mov
mov
out
shrb
mov
gs
and
push
jne
or
mov
fisttps
jnp
jl
or
arpl
mov
cld
je
pop
mov
movsb
mov
mull
in
xlat
adc
mov
outsl
out
pop
bswap
inc
rcll
xchg
rolb
fistl
push
adc
sub
pop
into
sbb
test
andl
dec
das
test
push
pop
cmpsb
xchg
loope
xchg
sbb
pop
test
ret
cmp
or
rcrl
adc
cmp
or
les
and
lahf
dec
fsubr
gs
cli
xchg
sub
movsb
mov
cmp
mov
out
loopne
fcmovbe
data16
inc
call
sub
mov
je
jbe
xor
orb
push
arpl
lods
jnp
shll
push
mov
daa
ja
mov
jne
insl
leave
divl
and
ja
mov
xchg
jne
mov
aas
inc
or
xchg
push
sub
sbb
sub
cmpsl
pop
rcr
call
sub
in
fnstsw
adc
mov
mov
jb
mov
push
aas
push
mov
inc
xchg
mov
pop
andb
pop
pop
mov
mulb
add
lods
shr
push
lds
mov
negl
aad
xchg
sub
in
aad
fs
icebp
out
out
bound
cmp
ds
cmp
cmc
fldcw
mov
mov
xchg
adc
das
cmpb
rcr
inc
cmp
mov
bound
shl
int3
notb
adc
mov
fbld
stc
arpl
inc
sbb
inc
in
dec
sbb
jp
pop
pop
xor
pop
addb
ds
cmp
fists
bound
xchg
push
nop
or
inc
sub
dec
mov
jae
and
inc
mov
dec
pop
dec
rcrb
movsb
movsl
movsl
push
sub
push
lods
hlt
outsb
sub
jp
sti
gs
mov
cmp
into
int
jbe
fcomp
jge
adc
mov
mov
xchg
cmpsb
leave
sub
pop
and
and
sahf
push
jp
adc
lock
ret
add
cmpsb
add
leave
negb
mov
adc
in
xor
mov
xchg
aas
cmp
in
cmc
or
mov
cmp
and
jb
or
push
and
push
gs
inc
dec
cmp
push
imul
sub
inc
repz
xchg
leave
enter
xor
fdivp
mov
jnp
cmp
pop
das
cmp
jbe
iret
or
rcll
psrad
lds
and
add
lret
arpl
test
ljmp
jp
test
in
adc
or
xchg
or
leave
push
or
ljmp
pop
test
or
jb
mov
dec
movsl
cmp
sub
mov
add
and
cmpsl
lcall
dec
push
push
pushf
cmp
ret
icebp
inc
and
push
clc
aas
mov
add
cmpsl
mov
xor
pop
mov
cmc
push
mov
inc
fstl
loopne
inc
fwait
pop
and
insl
xlat
lods
xchg
jmp
test
push
mov
mov
outsl
mov
aaa
inc
rcll
jbe
clc
jle
outsb
iret
iret
das
sub
dec
inc
inc
xor
or
mov
orb
daa
pop
jnp
lret
push
xor
jo
xor
mov
push
leave
fcoml
xor
add
sbb
out
adc
xor
pop
mov
sahf
adc
enter
movsb
lahf
mov
inc
int
mov
ljmp
mov
rol
cmp
push
sti
mov
push
mov
pop
mov
repnz
xor
dec
jecxz
fcmovne
or
ja
repz
sub
adc
pop
push
fs
dec
stos
xchg
pop
loope
sarb
jbe
iret
sbb
dec
out
data16
dec
xlat
les
aad
out
mov
leave
sbb
push
data16
dec
mov
and
adc
add
imul
fsubl
and
imul
pop
scas
mov
adcb
mov
jno
fadds
push
xchg
dec
ss
xor
inc
push
mov
push
lea
in
push
lea
dec
push
add
mov
addb
mov
mov
push
mov
jl
add
mov
das
fnstsw
pop
mov
aam
movsl
in
aaa
inc
push
jecxz
subl
outsb
mov
insl
pop
ficompl
mov
mov
jp
pusha
mov
jo
pop
push
push
inc
cli
mov
mov
stos
mov
test
movsb
adc
insl
xor
xchg
mov
sub
mov
mov
cmp
pop
rorl
pxor
aas
in
dec
add
and
jmp
xor
out
mov
dec
pop
sahf
fistl
jns
add
loope
das
sarl
shl
xchg
sub
and
xchg
subl
ss
testl
mov
jae
aam
into
jecxz
mov
int3
lock
sbb
out
je
push
inc
aas
adc
hlt
fs
dec
js
pop
push
dec
cwtl
iret
add
test
ffree
sbb
imul
adc
sbb
subl
movsl
jbe
adc
push
mov
mov
push
xlat
aaa
xchg
cmp
lret
in
xchg
sti
dec
ror
out
pop
push
push
insb
mov
nop
out
and
add
inc
lret
push
ss
ret
outsb
in
sbb
sbb
jecxz
push
cmp
lret
or
aad
mov
sub
xlat
mov
jbe
sub
dec
mov
ud0
call
je
push
dec
push
add
adc
test
add
stc
test
jecxz
dec
push
and
xchg
cld
jo
mov
sub
dec
fxch
fdivp
out
shl
mov
out
insl
stc
test
popf
adc
repz
push
stc
fistps
push
dec
in
sti
int
cmp
pop
adc
add
add
adc
outsb
cmpsb
ret
icebp
mov
sub
adc
repnz
into
leave
cmp
adc
xchg
fildll
ja
pop
stos
iret
repz
sbbb
sti
fstp
lcall
movsb
test
aam
push
fistpl
cmp
stc
fs
jle
cli
mov
push
cs
in
pop
fnstsw
lods
mov
lret
jo
fimull
addl
adc
rclb
ljmp
fldcw
push
push
je
jne
pop
add
add
mov
lahf
jg
add
jae
mov
sti
aam
mov
cmp
loopne
mov
sub
push
push
lret
adc
adc
gs
outsb
stos
dec
sti
lret
cmp
ss
data16
arpl
sub
add
adc
lret
shlb
jns
int
stos
jbe
out
outsl
pop
dec
fmuls
mov
cmpsl
call
lock
pop
add
or
cmpsb
fnstsw
out
repnz
int
jl
lods
lret
cmp
adc
jb
les
stos
test
test
xchg
jb
adc
mov
push
jnp
lcall
xchg
mov
sub
rcrl
stos
ret
sbb
sbb
xchg
jl
mov
cmp
mov
xchg
jle
pop
and
sbb
add
into
xchg
mov
or
jp
idivl
cmp
jecxz
push
insb
test
sbbl
test
fcomi
mov
sbb
push
das
cmp
stos
ja
loop
jo
movsb
xor
sbb
scas
xor
stc
jo
ret
and
add
out
sub
jae
push
les
mov
mov
xor
dec
add
pusha
and
inc
cli
push
add
mov
lea
dec
cmpl
jo
adc
xchg
add
adc
cli
add
and
addl
popa
adc
call
int3
jbe
xor
int3
lahf
xor
popf
jecxz
dec
sub
fldt
mov
iret
scas
ret
push
inc
push
xchg
dec
mov
sbb
les
xlat
inc
popf
ret
pushf
sbb
sub
xlat
jb
jge
add
movsl
imul
jae
inc
and
in
pop
lea
cli
sub
or
stos
movsb
sahf
add
lea
and
dec
ds
sub
rorl
in
mov
jo
outsl
in
and
fisttpl
push
push
dec
lret
test
test
rorl
pop
in
pop
jb
sbb
arpl
ffree
repz
popa
scas
repnz
xchg
cmp
mov
xchg
nop
lds
jmp
fs
shrl
insb
mov
mov
dec
nop
pop
cmc
dec
jno
test
inc
jle
loop
test
xor
int3
push
xchg
setle
clc
dec
xor
inc
xorb
cmp
clc
xchg
sub
fwait
inc
test
mov
xor
xchg
ss
ret
std
jns
fdivrs
dec
cmp
ret
stc
ja
sub
push
pop
negl
sub
pop
jnp
push
xchg
arpl
ljmp
pop
aad
or
dec
scas
dec
stos
or
aaa
test
sbb
in
mov
mov
mov
pushf
in
repz
xor
pop
cmpsb
pmaxsw
push
mov
fld
lds
pushf
int3
test
cwtl
cmp
xchg
mulps
icebp
ficompl
pop
xchg
out
data16
sub
cmp
cld
mov
aas
mov
jmp
cwtl
mov
mov
rolb
inc
push
into
in
pusha
sbb
or
shlb
xchg
out
sub
sub
cmp
cltd
add
xchg
rcrb
push
repnz
data16
popf
dec
pop
sbb
jne
fucom
jne
lret
push
add
adc
push
loopne
fstps
repnz
pop
jae
cwtl
stc
add
out
bndldx
add
mov
mov
sbb
xor
and
pop
cmp
mov
push
push
push
fistpl
pop
cld
sbb
xchg
popf
jbe
cltd
jb
jle
lds
or
les
cmp
pusha
dec
imul
stos
push
test
int3
add
mov
lea
jb
mov
cld
adc
lcall
sbb
sub
popa
ja
jmp
mov
bound
and
inc
fdivrs
xchg
mov
aad
adc
insl
std
inc
call
mov
mov
cmp
ret
jge
sub
dec
cmp
pop
inc
pop
sbb
mov
pop
inc
pop
lea
sub
or
ds
ds
mov
cmp
xlat
add
mov
dec
lods
add
and
xchg
repnz
push
inc
push
sbb
jns
sub
xchg
adc
and
popf
call
testb
mov
cltd
cmp
mov
in
or
pop
hlt
dec
xchg
xor
push
jp
popa
jns
scas
mov
iret
and
shll
addb
sub
iret
out
fld
and
jle
cmc
push
sti
dec
test
mov
and
inc
adc
orb
xor
xchg
cmp
icebp
adc
add
cli
pop
cli
or
shrb
mov
jmp
and
int3
insl
sti
xor
xor
sub
xchg
mov
lret
xchg
in
fists
shl
clc
push
clc
jl
aas
in
xchg
mov
in
mov
and
mov
popf
adc
adc
mov
push
push
ret
sbb
ret
inc
test
jp
dec
pusha
and
mov
testb
mov
adc
adc
push
push
adc
iret
sbb
or
jg
idivb
dec
mov
shr
sbb
push
stc
sub
or
lods
in
mov
lret
sbbb
xor
sub
jecxz
mov
int3
add
sbb
arpl
pop
xor
add
pop
std
loop
xor
jnp
fucomip
out
inc
idivl
stos
sbb
loopne
xor
xchg
inc
enter
inc
test
imul
sub
stos
mov
push
cmp
test
in
jg
mov
or
sbb
rorb
xor
leave
pop
in
ds
xchg
xor
mov
repnz
add
ficoms
inc
int3
out
fmuls
add
loopne
sbb
jmp
xor
xchg
clc
cltd
cmp
lahf
loope
sub
imul
mov
out
dec
jne
push
cld
cmp
mov
mov
dec
mov
lods
push
jmp
test
xlat
cmpl
ss
les
mov
or
decl
or
push
jle
insl
das
pop
gs
test
addb
pop
cmp
mov
lret
add
mov
rorl
cmp
xor
rol
adc
stos
pusha
inc
arpl
subb
sbb
xchg
jmp
addr16
push
out
sarb
dec
xchg
mov
jmp
push
sbb
pop
xor
push
mov
repnz
push
sbb
stc
int
inc
inc
ds
jnp
aam
xchg
in
push
inc
adc
jmp
mov
data16
pop
sub
nop
inc
sahf
push
push
dec
and
cmpl
or
add
call
mov
mov
fildll
pop
xor
jle
jo
push
jp
mov
cmpb
fwait
mov
mov
sub
add
fistps
push
add
jecxz
jbe
sbb
negl
inc
pop
or
inc
sbb
adcb
dec
cmp
mov
pop
push
movsb
mov
inc
dec
inc
leave
int3
mov
adc
popf
dec
sahf
dec
rcl
test
pop
and
ljmp
mov
sub
pushf
popa
push
mov
jecxz
icebp
arpl
test
repz
mov
mov
add
imulb
into
jne
test
or
push
sub
cmp
or
ljmp
pop
inc
push
test
into
jl
inc
jb
mov
loop
xchg
int
movsb
std
xchg
fs
stos
xlat
lds
mov
and
int3
push
int3
or
mov
pusha
mov
mov
in
sub
test
sub
jle
int3
pop
mov
scas
shll
fisubrs
and
xchg
out
xor
addb
cmp
adc
or
mov
pop
jne
mov
addr16
movsb
pop
pop
test
xor
lods
popa
test
push
pop
sub
xchg
mov
repnz
cltd
int3
out
out
lea
popa
hlt
mov
cmp
inc
xor
jbe
mov
imul
jae
dec
call
and
xchg
dec
popf
jb
pop
add
xor
push
mov
std
fbld
xor
sbb
xchg
push
fxch
call
stc
scas
insl
pop
push
popa
addr16
mov
cmpsb
add
push
jge
fcompl
out
jns
stc
inc
lcall
repz
dec
inc
mov
cmp
popf
lahf
in
push
dec
dec
cli
dec
movsb
sbb
sbb
int3
lock
out
jle
pop
scas
pop
aam
fwait
incl
push
xchg
cmpsl
adc
je
sub
xlat
xor
sub
je
cli
xchg
rcrl
sbb
and
repz
xchg
lock
xor
mov
movsl
imul
xchg
test
push
test
sbb
pop
test
not
and
xor
sub
adc
mov
out
mov
fadd
mov
mov
add
lret
sub
out
popa
lahf
jnp
push
aas
mov
lret
xchg
js
es
sub
pop
sbb
inc
fstps
push
xorb
dec
std
call
fdivl
aam
inc
les
addr16
mov
jno
out
add
cmpsl
sbb
scas
fdivp
sbb
pop
call
mov
xor
mov
sub
cmp
and
jge
adc
loopne
das
lret
inc
cmp
data16
inc
lea
enter
xchg
stc
add
imul
mov
jg
cmp
pusha
stc
daa
push
jae
sbb
daa
pop
fsubrl
into
cmc
sub
je
mov
adc
or
cld
add
push
je
loopne
mov
loopne
icebp
rcl
jecxz
mov
dec
push
jnp
stos
adc
sub
lret
bound
orl
jno
mov
sub
in
lcall
mov
cmp
insb
xor
push
in
mov
mov
insl
mov
pop
js
pop
insb
or
mov
xbegin
les
xchg
test
lcall
jno
push
mov
mov
int
sbb
mov
mov
in
push
cmp
roll
loop
pop
xchg
mov
out
add
out
push
into
mulb
dec
jbe
arpl
loopne
jecxz
sbb
mov
roll
int3
jno
mov
fwait
mov
xchg
jle
adc
loopne
notb
inc
mov
insb
mov
out
dec
xchg
xor
dec
pop
outsl
push
test
lods
cs
sbb
push
sub
cs
xchg
jnp
jae
js
sub
mov
mov
mov
lods
push
loop
jmp
cmp
mov
bound
les
nop
push
and
mov
push
mov
cmpsb
mov
cltd
adc
aaa
push
imul
cld
out
daa
movsl
mov
pop
daa
pop
fstpt
gs
add
out
mov
movb
mov
call
cli
pushf
pop
adc
fiadds
je
jle
pop
movsl
arpl
dec
ja
add
jge
shll
cli
mov
call
call
shl
fwait
lret
cli
loopne
fstpt
insl
repz
mov
aam
inc
adc
pop
psubd
jp
stc
xlat
je
out
xchg
shlb
mov
mov
or
aas
inc
pop
insb
mov
enter
mov
push
bound
nop
jecxz
and
push
mov
mov
xlat
adc
add
mov
in
and
adc
test
aas
cmp
int3
daa
sbb
movsl
aas
fmull
mov
push
jmp
cmp
bound
cmp
out
orb
add
lods
fsubrl
xchg
sub
cmp
add
xor
jl
sub
xchg
adc
test
xor
pop
cmp
pop
or
int3
dec
xchg
pop
out
aas
cwtl
arpl
cmpsb
jmp
mov
mov
xchg
xchg
leave
inc
or
rcrb
test
pop
jle
cmp
imul
push
inc
inc
dec
leave
sarb
dec
fstl
push
mov
pusha
popa
cs
into
ss
pshufw
scas
pop
and
pop
mov
mov
mov
fnstsw
pop
adcl
ljmp
xchg
shll
cld
mov
jnp
ss
negb
inc
insb
loop
adcb
jmp
xchg
sar
ret
mov
mov
sbb
push
sbb
movsl
nop
add
icebp
inc
xchg
repnz
inc
adc
arpl
pop
push
push
mov
int
outsb
js
popf
cmpsl
test
mov
adc
or
loopne
mov
push
xlat
inc
mov
xchg
lea
jle
add
adc
or
fiaddl
cmpsb
sahf
pop
sbb
test
inc
arpl
daa
popa
add
dec
inc
add
and
dec
stos
jge
mov
bound
and
add
push
push
push
stos
int
rolb
in
xchg
pop
popa
xor
cs
jnp
fmull
ror
pop
inc
mov
xchg
mov
cmp
out
in
aas
sbb
or
cld
sahf
sbb
xchg
in
out
in
pop
in
pop
jae
mov
shll
mov
sete
pop
shlb
xchg
sub
in
push
ss
inc
inc
mov
jb
callw
xchg
outsl
ret
rorb
dec
leave
test
out
pop
mov
or
bound
adc
jb
jp
insb
in
lret
shr
or
mov
pop
mov
pop
sete
outsb
jnp
aad
add
jo
adc
aam
sub
mov
cmpl
mov
sub
xchg
dec
xchg
jb
es
mov
push
int
mov
and
mov
jno
dec
lret
jmp
lods
fidivrl
inc
sub
pop
xor
cwtl
mov
mov
movsl
das
mov
sub
or
xchg
mov
push
add
sbb
mov
insb
fnstenv
shl
inc
jnp
push
push
push
out
int
cs
test
jno
push
jg
inc
push
jb
pop
push
mov
shlb
push
rorb
ss
push
push
test
mov
js
mov
out
out
imul
in
mov
out
lods
sub
push
add
cmpsb
cmp
pop
pop
shll
hlt
daa
mov
flds
lock
aam
jp
mov
push
movsb
xor
inc
and
jno
push
clc
in
les
xlat
cli
mov
insl
or
das
outsb
or
shl
xchg
dec
insl
and
cli
test
hlt
ret
add
addr16
iret
cmp
cmp
mov
faddp
iret
hlt
popf
pop
add
call
add
xchg
sbb
fnstenv
popa
dec
cmp
jg
pusha
jecxz
adc
rorl
xor
dec
pushf
xor
sub
insl
cwtl
aas
push
ret
arpl
sub
pop
out
sub
mov
nop
dec
stc
mov
xchg
jp
lods
add
stos
fisttpl
inc
add
and
sub
mov
pop
dec
add
add
mov
mov
inc
pop
mov
cwtl
and
push
subl
aad
nop
jnp
mov
add
mov
fwait
andl
adcb
xchg
pop
sub
mov
lahf
cmp
inc
mov
or
xchg
movsb
call
push
fildll
xchg
pop
scas
add
mov
cmp
xorb
or
ja
aaa
add
pop
repnz
pusha
shll
js
xor
mov
jg
pop
sbb
fldl
lea
mov
jmp
cmpsb
lahf
ret
xchg
outsl
rol
out
popf
push
stos
daa
data16
loopne
clc
xlat
inc
xor
xor
mov
fisubl
xchg
push
or
pop
and
data16
mov
sbb
jecxz
jmp
test
mov
mov
jp
inc
nop
mov
imul
push
jmp
mov
out
fnsave
femms
dec
add
mov
jmp
push
sub
sbb
pop
mov
mov
cmp
popf
pusha
mov
xchg
sar
pushl
jp
hlt
jbe
ret
rclb
xchg
lret
mov
int
cmp
dec
jae
mov
sbb
push
ret
movsb
sbb
fsubs
xor
add
mov
and
mov
sbb
lock
shrb
jl
shl
and
addr16
fmulp
pop
insb
scas
push
fiadds
mov
mov
mov
cmp
xor
leave
xor
mov
mov
mov
mov
pop
pop
push
fcomip
inc
and
ret
push
mov
outsl
xchg
mov
sti
scas
loop
mov
push
neg
fsubs
jbe
das
movsl
dec
notb
push
xchg
and
push
push
outsl
pop
xchg
mov
lcall
mov
cli
mov
aas
dec
adc
jmp
les
rorl
inc
and
adc
insl
adc
xchg
lret
cli
cmpsb
adc
repnz
cmpsb
pop
mov
popf
fdivrs
cmpsl
xor
fs
dec
cmpsl
inc
push
ljmp
push
sti
cli
imul
ja
test
jg
je
rcll
in
jno
ja
cmpsb
push
sbb
sti
js
inc
das
pop
and
lds
inc
lcall
mov
fwait
xchg
daa
and
lea
fdivs
mov
add
mov
mov
inc
aas
sbb
in
mov
scas
mov
xchg
in
lds
in
mov
jp,pn
push
xchg
js
dec
push
mov
ja
lea
push
std
lock
inc
push
cmpb
jge
jae
or
lea
arpl
pop
lea
aaa
inc
pop
push
inc
jb
bound
xor
loopne
cmp
inc
push
adc
xor
rcrb
xor
outsl
out
cmc
xor
cs
mov
pop
inc
xchg
cmp
mov
xor
adc
sub
imul
jb
cmp
pop
mov
add
mov
xchg
pop
cwtl
or
jns
inc
mov
and
rcrb
leave
ljmp
test
mov
inc
out
stos
iret
out
pop
rcr
push
sub
jg
push
mov
mov
xchg
movsb
inc
sbb
mov
add
inc
arpl
xchg
movsl
xor
mov
popa
sub
adc
pop
cmp
jle
sbb
xor
insb
repnz
aad
adc
mov
add
stos
stc
sbb
dec
fisttpll
mov
stos
mov
ss
es
packssdw
xor
add
adc
and
xchg
sbb
adc
xor
jno
stc
inc
ss
push
test
cltd
testl
xlat
mov
pop
ss
in
jo
pop
xchg
fnstcw
inc
push
pop
cmp
cs
pop
adc
mov
in
ret
mov
cmp
roll
lret
cmpsb
fnsave
jns
lret
pop
call
dec
dec
inc
out
xor
push
cld
xchg
repnz
dec
sahf
pop
test
fsub
xchg
test
in
stos
cmpsl
out
xchg
ficoms
nop
cmpsl
xor
lods
or
daa
dec
pushf
push
ret
adcl
xchg
cmpsb
ret
sbb
xor
ret
inc
mov
cwtl
scas
xor
and
xor
cmp
fs
mov
mov
sbb
xor
scas
imul
mov
dec
rolb
pop
fidivrl
sub
push
cmpl
in
push
push
adc
mov
fistpll
cmpsl
xor
adcl
adc
or
test
rorb
xchg
in
cmp
jle
pop
or
lds
sub
stos
fs
nop
mov
sbbb
out
outsb
dec
pusha
mov
sbb
pop
cltd
in
or
mov
or
cmp
sysenter
xlat
not
jle
lret
dec
push
mov
ret
pop
push
lods
mov
repz
mov
jo
sub
bound
negb
out
pop
or
dec
ja
inc
lea
jnp
jecxz
insb
mov
rclb
pop
lods
pop
or
fisubs
shlb
hlt
shlb
xchg
mov
add
das
pop
daa
dec
fbld
paddusb
push
xlat
dec
mov
dec
mov
bound
dec
popf
xchg
fndisi(8087
adc
xor
or
ljmp
mov
mov
xor
mov
xor
mov
lcall
or
add
lock
testb
fiaddl
aas
mov
je,pt
mov
fmuls
push
mov
mov
lock
xor
adc
int3
mov
cltd
bound
sub
jo
mov
jns
ret
push
stos
popl
cli
add
int3
and
out
sub
lea
mov
inc
adc
mov
push
shll
cmp
stos
addl
push
mov
daa
mov
inc
add
ret
mov
lcall
inc
ret
jae
fwait
pop
jl
and
fwait
cwtl
pop
push
clc
jns
std
jp
pop
xchg
loope
jp
inc
roll
ja
or
dec
int
inc
loopne
fisttps
test
mov
jbe
mov
inc
lods
mov
sbb
and
push
ss
push
push
cmp
sbb
insb
add
and
xor
pusha
outsl
push
xchg
pop
sub
out
push
mov
jne
jle
gs
aam
mov
lret
testb
jle
cld
jmp
pop
dec
stos
cmpsb
push
incl
sysexit
repz
pop
aaa
and
mov
loope
sbb
iret
adc
mov
aam
mov
xchg
cmp
cmp
fwait
xlat
addr16
cwtl
jb
icebp
or
enter
dec
sbb
sub
pop
cwtl
adc
cwtl
push
mov
jmp
and
clc
inc
push
adc
dec
in
and
movsb
loop
jl
dec
xor
call
lock
sub
call
jp
insl
lods
not
lcall
inc
rorl
cmp
test
fwait
insl
fimull
test
cli
ja
sub
sbb
adc
into
xchg
mov
adc
mov
es
bound
cltd
enter
pop
dec
pop
cmp
ja
sti
ja
fcmovnb
shlb
jne
out
add
and
pusha
dec
and
mov
push
into
push
lods
mov
or
mov
sbb
rcl
inc
int3
btc
fdivp
pop
mov
test
insl
cmpsl
in
ret
in
rclb
jecxz
in
pop
loope
repnz
pusha
scas
mov
and
repnz
ret
adc
xor
cmp
sub
ja
xorb
test
xchg
sahf
lods
mov
call
xchg
push
adc
jno
stc
cmp
or
mov
jb
mov
in
mov
lods
pop
test
sbb
roll
fmull
or
dec
fisubrs
mov
pop
shlb
out
dec
jnp
adc
pop
mov
cmc
push
in
fstps
mov
lods
inc
and
pushf
iret
iret
add
ret
test
mov
jbe
or
in
cmp
movsl
rcr
mov
jmp
std
mov
ljmp
xchg
push
inc
icebp
test
ljmp
mov
mov
gs
fbld
lea
mov
popa
cmp
dec
cmp
addl
cmp
daa
or
in
sar
sarb
je
mov
sbb
xchg
mov
inc
push
mov
or
rorl
insl
mov
xchg
pushl
pushf
mov
je
and
mov
adc
add
clc
mov
push
push
inc
push
mov
mov
outsb
out
jp
dec
mov
mov
outsl
xchg
and
sbb
jb
cmp
cwtl
f2xm1
mov
dec
mov
out
cltd
sbbb
cmc
test
les
xlat
mov
mov
adc
in
dec
xchg
xchg
push
es
es
mov
popa
mov
sub
out
and
outsl
sbb
mov
das
stos
ljmp
push
and
jecxz
stc
mov
repnz
jmp
dec
push
jmp
shrl
je
mov
nop
jbe
pushf
jae
pop
and
add
lret
push
or
ss
pop
add
out
into
xchg
cmp
lcall
sbb
push
subb
xchg
xorb
or
mov
jo
lea
push
and
jge
aas
popf
cmp
xchg
mov
sub
xchg
xor
add
cmp
dec
jbe
pop
mov
dec
hlt
stc
lods
sub
gs
pop
push
std
shl
or
leave
push
add
or
mov
jbe
fisttps
std
in
pop
mov
into
jg
in
enter
jnp
test
or
pusha
pusha
dec
or
jae
mov
arpl
sarl
aam
cmp
ret
loope
mov
jae
pop
mov
fnstcw
or
xor
push
pop
push
dec
mov
popa
sbb
mov
sbb
in
pusha
jno
inc
mov
xchg
or
sub
mov
addb
push
jno
movsb
xor
cmp
sbb
adc
dec
sbb
cli
xlat
sbb
imul
insb
jmp
mov
push
mov
or
out
mov
mov
mov
pushf
enter
ds
mov
daa
sahf
addr16
scas
pop
pop
mov
aam
int3
or
mov
movsb
sbb
inc
test
sbb
dec
adc
dec
sarl
ds
or
in
push
add
cmpsl
ret
adc
hlt
mov
mov
std
add
es
mov
xchg
and
cmp
push
in
add
js
pop
sbb
and
pop
mov
inc
inc
out
lds
inc
adc
or
adc
mov
adcb
xchg
ret
imul
pop
push
test
mov
sbb
call
lea
loopne
je
inc
test
mov
xor
jge
jl
lock
aad
push
daa
mov
cli
mov
jae
or
xorb
xchg
adc
add
andb
add
ss
xchg
or
mov
mov
in
clc
and
dec
and
ljmp
push
sahf
ja
int
xchg
push
and
ljmp
movsb
data16
add
pop
push
inc
sarb
mov
or
add
aam
add
mov
add
jnp
sbb
enter
cmpsb
jg
cli
cmp
mov
xchg
pushf
stc
roll
icebp
imul
fisubrs
xchg
out
xchg
mov
ja
push
mov
call
pop
lods
arpl
cmp
cs
adc
push
xlat
sbb
push
loop
ss
push
pop
xor
fdivrl
dec
outsb
cli
adc
dec
jbe
mov
pop
addr16
cmp
sbb
mov
dec
mov
cmp
or
pop
mov
inc
pop
sub
dec
xor
ficoms
mov
mov
leave
sub
sahf
mov
push
in
push
jl
jg
cwtl
lahf
push
or
adc
shll
push
fistpl
cmpsb
cltd
xor
mov
cltd
push
inc
test
test
mov
test
mov
pop
mov
pusha
stos
mov
mov
cmpsl
sub
pop
mov
xor
mov
loop
fstps
shll
jno
xchg
and
and
scas
or
mov
dec
push
iret
jae
mov
out
arpl
jnp
lea
scas
xchg
data16
outsl
pop
ret
stc
popa
es
repnz
push
out
cmp
add
sub
xor
inc
call
outsb
imul
xor
lcall
mov
insl
xor
cltd
add
lods
and
out
pop
add
fstpt
aas
pop
stos
stos
jns
pop
mov
idivl
in
mov
pop
aam
test
loop
cld
ja
je
or
lea
sbb
mov
fstps
fldt
repnz
outsb
in
xor
sub
mov
pop
jo
or
test
mov
or
out
test
das
xchg
cmp
call
hlt
stc
int
clc
scas
rolb
cmp
jmp
mov
sbb
inc
push
push
sti
xor
cmp
mov
adc
ss
in
ss
out
mov
test
or
and
mov
in
sahf
xchg
les
push
loop
push
fimull
adc
js
sub
fadds
push
test
scas
adc
pop
mov
negb
cltd
jle
cmp
fldl
adc
push
inc
and
mov
js
mov
fiadds
cs
mov
jmp
push
imull
dec
fsubrp
stos
daa
xchg
das
out
pop
cltd
xor
cmpb
jl
jle
test
outsb
mov
ret
adc
push
sub
out
out
mov
fnstcw
jge
xlat
mov
push
stos
or
lds
outsl
or
fidivs
sbb
loop
xor
rorl
cmpsb
push
popa
pop
test
lods
enter
adc
pop
test
scas
mov
inc
cmp
cli
push
mov
jl
mov
and
jge
flds
cmp
mov
imul
xor
xchg
add
xchg
mov
mov
mov
adc
adc
aas
or
aam
or
popa
stc
aam
sub
push
repnz
std
cmp
fsubrs
hlt
popa
cli
fstpt
adc
cmpsb
mov
pop
sbb
fdivrl
je
ret
inc
cmp
or
or
dec
mov
or
xchg
pop
repnz
pop
mov
xor
repz
imul
xor
sub
leave
cmp
mov
fwait
mov
addr16
mov
pop
push
lds
xor
add
add
popf
mov
test
adc
mov
push
mov
call
add
mul
sub
fwait
into
and
push
mov
fldcw
dec
cli
xor
add
dec
loope,pn
mov
mov
jge
dec
jle
inc
pop
sbb
mov
mov
int
push
ja
cli
mov
aam
lods
adc
fdivrl
dec
sub
or
mov
pop
in
pop
shll
testl
inc
jne
fldl
mov
das
fwait
rcll
cmpsl
cmp
movl
xorb
aaa
xor
dec
in
test
inc
imul
cmp
repnz
mov
dec
insb
add
lret
mov
scas
mov
test
xlat
rcr
sbb
ljmp
aad
mov
dec
pop
test
fnstcw
lds
cmp
lahf
pop
mov
outsb
ljmp
and
inc
mov
stos
stos
xor
stos
fimull
cmp
stc
jg
shlb
pop
ds
int
pop
and
sbb
xor
dec
mov
ja
adc
movsb
mov
dec
xlat
stos
cwtl
dec
test
xor
into
inc
outsl
and
out
or
fs
mov
cwtl
push
push
je
xchg
or
sub
jge
pop
shrl
and
jne
jecxz
jmp
outsb
out
mov
insl
cmpsl
or
inc
int
insl
pop
cs
aad
or
outsb
outsl
push
adc
adc
ret
out
xchg
aam
jmp
clc
jmp
cli
cmp
cwtl
out
sbb
lds
popa
rolb
neg
or
mov
pop
call
nop
push
mov
movsl
pop
xchg
les
int
add
in
dec
hlt
lcall
movsb
shl
les
mov
das
sbb
sbb
in
popa
jo
or
xchg
in
fidivrl
arpl
addr16
stc
jp
fwait
push
cmp
mov
pop
rorb
in
add
push
mov
xor
and
inc
out
or
loop
inc
in
jecxz
loop
pop
jb
xchg
into
imull
ja
jg
test
and
testb
mov
lret
fs
push
fisttps
out
xchg
cmc
sbb
ds
push
mov
mov
and
ret
test
aam
push
or
or
cmp
lret
movsl
movsb
rcll
and
add
ss
and
js
jbe
mov
adc
ficompl
and
test
stos
dec
iret
mov
jmp
and
mov
add
pushf
int
jp
pop
stc
dec
shrb
test
pushf
gs
adc
lcall
dec
movzbl
bound
mov
sahf
mov
je
push
je
lret
lock
aaa
push
mov
jbe
stos
jmp
inc
xor
dec
mov
mov
inc
mov
adc
add
pushf
fisubrs
lods
push
pushf
pusha
jg
inc
lods
push
outsb
test
dec
in
fnstenv
lock
sub
add
jne
jo
sub
sub
xor
fwait
cwtl
xchg
inc
adc
mov
jne
sbb
mov
outsb
pop
inc
repz
rep
out
cmc
scas
pop
dec
leave
out
mov
inc
scas
xor
dec
cmp
mov
mov
cmp
outsl
test
xchg
jle
inc
pop
out
fmuls
xchg
mov
aam
push
sub
xchg
sbb
push
ja
js
xchg
jae
or
mov
and
mov
les
cwtl
pushf
and
ss
repz
mov
aam
test
xor
dec
push
and
sub
jmp
out
ljmp
inc
pop
hlt
cmc
loope
int
dec
mov
fsubrs
loop
add
and
imul
jg
les
or
icebp
les
insl
imul
js
out
test
aas
or
lahf
mov
ror
out
push
lret
adc
sahf
sbb
mov
sbb
pusha
fiadds
out
adc
sbb
out
inc
add
xchg
negb
mov
enter
add
pushf
adc
jb
lods
cmp
testl
repz
mov
call
push
mov
ss
inc
ffreep
sub
icebp
paddusb
lods
shlb
jl
cmp
fwait
movsl
insl
ret
dec
mov
insl
mov
mov
in
or
fs
mov
mov
pop
clc
adc
lds
xchg
push
repnz
mov
add
mov
mov
imul
imul
int
ljmp
scas
dec
movsb
pop
pop
sub
sub
fmuls
or
push
mov
ret
mov
mov
xor
outsl
push
loop
mov
pop
adc
ret
push
fildl
insb
setno
pop
pop
repz
fs
cwtl
inc
repz
loopne
push
test
dec
nop
repz
pusha
mov
aas
or
lret
or
out
call
xor
jae
daa
dec
jb
mov
pop
mov
lods
or
adc
mov
lcall
outsl
xchg
iret
push
mov
push
jl
stc
jge
xchg
push
xchg
pop
filds
mov
je
sbbb
sub
movsl
mov
sub
sbb
jge
add
pop
fs
dec
mov
xchg
aam
xor
stc
ficompl
test
das
adc
mov
cld
mov
adc
xor
imul
hlt
add
mov
mov
popf
sbb
dec
pop
sbb
pop
xlat
mov
mov
push
in
std
sahf
cmp
out
xchg
lods
imul
notl
movsb
shrl
jp
dec
inc
add
ret
cmpb
dec
dec
lahf
scas
loopne
xchg
in
in
push
cmc
sbb
xor
dec
cmp
sbb
in
or
call
shrl
pusha
inc
push
aam
push
and
sbb
mov
jmp
rdmsr
dec
iret
xchg
xchg
std
mov
mov
push
shlb
aas
icebp
jg
xchg
inc
bound
add
add
out
call
divl
cwtl
cmc
push
out
test
ret
call
pop
add
and
out
xchg
push
rcr
stc
cs
ret
sahf
pop
stc
sub
push
fildll
cmp
sub
aad
ret
popa
cld
push
pop
lret
pop
jg
xlat
loope
dec
inc
imul
arpl
adc
lock
add
insb
in
mov
push
fwait
cs
dec
pop
dec
mov
negl
andl
loop
pop
dec
add
out
std
jg
ret
add
pop
adc
iret
out
and
xor
and
cmpl
cli
movsl
jle
mov
add
xor
cmpb
pop
add
aad
fwait
jns
pop
dec
pop
jb
pop
xor
sub
xchg
push
adc
ret
in
xor
clc
out
pop
cmp
orb
cmpsl
dec
imul
fldt
dec
insb
sbb
adc
push
insl
jae
xchg
mov
outsl
push
jae
nop
mov
fstl
jns
sbb
cltd
and
imul
fnstcw
push
sub
mov
loope
popa
push
fisubrl
cmp
out
push
insb
and
insb
fistpll
int3
cwtl
fldl
sub
inc
xor
lock
xchg
mov
pop
xchg
loope
mov
jmp
jnp
cmp
mov
inc
or
mov
pop
xlat
ljmp
insb
pusha
js
dec
icebp
sarb
repnz
xchg
mov
gs
in
or
inc
sub
imul
cltd
mov
mov
adc
xor
pop
cli
mov
sub
das
inc
cmp
xchg
ficoml
add
fcomps
pop
cli
insb
lock
lcall
lods
jo
lret
popf
shr
or
and
int3
es
cmp
or
out
ljmp
gs
mov
sbb
cmpsl
iret
aam
jae
push
add
ljmp
cmpsl
xchg
xchg
outsl
dec
hlt
mov
scas
icebp
xorl
andl
cmpsb
mov
out
jae
cld
push
push
and
xchg
inc
xchg
xchg
loope
jno
inc
hlt
mov
pop
int3
bound
aaa
cmp
add
in
fsubs
dec
push
icebp
xor
jle
stos
push
dec
cmpsl
inc
sub
ljmp
add
xor
sub
and
cmc
ljmp
rol
mov
pop
adc
add
rorb
dec
mov
bound
or
xchg
bound
or
in
push
insl
movsl
aas
out
sbb
adc
repz
out
dec
ja
mov
xor
jg
sub
adc
mov
pop
push
mov
jg
je
lock
mov
fnsave
xchg
es
jg
sub
pop
aad
fbstp
scas
mov
push
mov
cmpsb
cmpl
out
inc
ret
lret
shll
jno
and
inc
xlat
aaa
icebp
push
adc
dec
jb
sub
rcrl
or
push
mov
sbb
jle
int3
xlat
lods
and
mov
jae
imull
out
xor
iret
movsb
cmp
aaa
fsubs
pop
jbe
pop
stc
fisttps
cmpsl
adc
out
test
xor
vhaddps
push
scas
adc
add
pusha
cwtl
sub
pushf
fcomps
sub
mov
mov
and
stos
in
push
and
jl
aad
adc
push
fcomi
cmp
add
mov
les
jp
inc
mov
loop
cmpsb
add
xor
in
dec
out
lcall
fsubl
loope
cmp
adc
or
ret
adcb
jge
rcrb
cmp
clc
loop
push
cmp
dec
add
push
push
xchg
enter
sbb
mov
popf
cmp
clc
hlt
and
movsb
nop
in
test
push
add
test
jl
js
inc
jne
sbb
jp
ffree
repnz
mov
std
sbb
xlat
lods
xlat
fldcw
mov
test
mov
or
shrl
fistl
lods
mov
mov
jp
repz
jbe
loope
sub
jmp
inc
clc
xchg
adc
add
fisubrs
mov
in
xchg
inc
mov
mov
pop
sbb
loope
ljmp
add
fwait
xor
psubusb
jge
xchg
out
jecxz
dec
jl
jmp
rorl
sub
aas
or
into
or
sbb
mov
sub
subl
dec
addr16
lret
lcall
inc
mov
fdivrl
jp
inc
ret
add
sbb
or
cmp
or
mov
test
jge
sub
cli
pop
jg
xor
dec
movsb
imul
xchg
pusha
sub
inc
enter
xchg
in
les
inc
xchg
stos
add
lods
clc
mov
push
daa
lods
push
shlb
nop
xor
aaa
fiaddl
pop
cld
testb
sub
fisttpl
sbb
dec
jno
movsl
jo
and
mov
pop
sbb
pop
pop
mov
ret
fs
fsts
test
mov
out
into
test
dec
adc
sahf
pop
jp
shlb
cltd
loope
sub
xchg
in
sub
mov
xchg
scas
outsl
test
icebp
cmc
movsl
pop
loop
shr
inc
test
das
out
out
mov
fisttpl
fdivrl
lret
pop
rcrl
xlat
dec
push
shrb
rcrb
cli
inc
ds
out
xlat
subb
xchg
pop
add
imul
bound
mov
ss
pusha
lea
hlt
shlb
add
mov
loope
scas
xchg
dec
push
fsubs
das
dec
sub
popa
dec
pop
sub
repz
mov
sti
ret
lea
or
mov
and
popf
xor
xor
jbe
or
rcrb
aam
sub
sub
sbb
jno
and
in
sbb
mov
fcoms
inc
in
dec
jbe
dec
mov
shrl
push
cmpsb
push
or
pop
fidivrs
cwtl
in
arpl
mov
ret
imul
add
pop
push
ljmp
scas
out
lods
and
sub
orb
pop
mov
insl
adc
adc
cmova
subl
mov
scas
xor
mov
sbb
lods
nop
pop
pop
movsb
inc
dec
lea
into
mov
pop
shr
add
pop
subl
sbb
jecxz
push
or
xor
int3
cmp
test
adc
xchg
push
inc
or
test
cwtl
je
jge
sahf
out
xor
pop
lods
mov
and
fadd
jg
and
pop
mov
dec
out
pop
xor
jmp
adcl
push
std
lea
adc
sbb
mov
dec
push
jbe
cli
iret
inc
sar
mov
xchg
lret
xorl
dec
add
xor
jo
out
fistps
and
pop
push
fucomi
gs
lret
js
js
adc
xchg
xor
rorb
xor
add
out
iret
dec
aaa
shl
pop
push
das
cwtl
jne
push
dec
mov
out
fsubs
mov
xchg
int3
sbbl
xor
cs
pop
mov
mov
ret
xor
sahf
sub
bnd
repnz
les
ret
lods
xchg
xlat
mov
mov
xor
or
out
push
into
and
movsb
adc
lods
add
pop
sti
leave
roll
aas
lds
leave
add
push
outsb
repnz
enter
xor
dec
sbb
daa
add
xchg
mov
push
pop
mov
jl
sbb
or
imul
cs
test
sbb
sahf
xchg
jecxz
mov
push
imul
call
xchg
dec
mov
sub
adc
inc
icebp
dec
fbstp
or
dec
jae
add
dec
fdivr
xorb
inc
testl
mov
out
in
test
or
xor
dec
xchg
pop
cltd
daa
outsl
jmp
scas
push
add
sub
loop
cmpsb
cltd
dec
int
lahf
in
mulb
call
push
inc
mov
xchg
test
arpl
xchg
jle
decl
loope
sub
sbb
jp
xlat
pusha
cmp
loopne
enter
inc
test
fs
mov
xlat
aam
dec
add
ficompl
lcall
adc
aas
pop
scas
mov
imul
rcrb
stos
jno
std
pop
mov
ljmp
pop
pop
mov
mov
arpl
sub
lods
sub
mov
add
add
das
mov
add
pop
shr
dec
decl
rolb
mov
mov
sub
outsl
xor
inc
add
cmp
push
and
das
cli
add
xor
and
cmpsl
aam
adc
xor
pop
add
jecxz
out
xlat
fldenv
push
dec
xor
xchg
pusha
test
mov
dec
fbld
fimuls
xchg
sbb
mov
out
inc
push
or
pushf
push
daa
hlt
push
jbe
stos
shlb
mov
xorb
adc
aad
dec
push
adcl
ljmp
movsl
pop
adc
push
mov
add
js
push
cmp
mov
mov
cmp
out
mov
inc
and
push
fistps
push
pop
daa
imul
jp
pop
aam
mov
ret
jl
inc
in
aam
loopne
sar
jo
or
push
push
adc
cmpsl
and
pop
stc
mov
mov
fnstenv
test
movsl
cmp
lret
jnp
hlt
inc
je
jbe
and
cmp
xchg
xchg
in
jbe
inc
nop
dec
jecxz
add
repz
xor
sbb
sahf
dec
dec
in
sahf
sbb
mov
jbe
mov
cmp
aad
cmpsl
push
daa
sub
mov
aaa
push
xlat
xor
cld
jl
loop
push
xchg
cmc
fst
outsb
push
enter
pop
mov
or
pop
or
loopne
scas
mov
xchg
add
sbb
push
pop
adcl
dec
sbb
mov
int
xchg
enter
inc
ficompl
cmp
lods
rorl
mov
outsb
out
xchg
lods
or
test
scas
fidivs
jge
lods
and
stos
subl
popa
hlt
repz
pop
aad
xchg
cltd
mov
hlt
inc
mov
repz
test
add
pusha
fs
mov
frstor
ret
movb
ficompl
inc
pop
jae
jp
add
fwait
fwait
imul
bound
xchg
sub
sbb
movsb
out
cmp
or
inc
push
fwait
jg
clc
add
es
aas
mov
and
lds
mov
jae
xchg
sub
jle
mov
adc
mov
mov
es
jne
pop
push
popf
insb
jb
lcall
call
sbb
sbb
test
in
hlt
out
out
stc
dec
cmpl
jmp
mov
ss
jnp
in
pop
dec
loopne
popf
test
jno
loopne
dec
loope
mov
xchg
ffree
xchg
mov
ja
sbb
mov
mov
dec
mov
mov
fnstsw
jecxz
ja
fildll
and
mov
ja
cmp
dec
stc
jp
lcall
je
sahf
adc
jmp
dec
fistpl
out
mov
popf
and
aas
in
mov
out
xchg
pusha
fcomps
addr16
cmp
dec
mov
push
cmpsl
repz
andb
inc
push
pop
shlb
out
out
test
loop
repz
sarb
lret
xchg
clc
dec
fdivrp
push
jg
movsl
outsb
jo
decl
cld
loopne
adc
dec
push
repz
lret
cmp
pop
add
push
xor
inc
xlat
stc
les
inc
sbb
shrl
gs
negb
jnp
mov
jg
mov
inc
ret
nop
or
inc
sahf
mov
rcl
outsl
push
adc
push
or
stc
and
into
mov
or
adc
push
lret
negb
push
insb
dec
inc
or
lcall
and
jmp
pop
inc
arpl
out
data16
and
add
push
mov
out
stc
ret
sbbb
sub
mov
pop
mov
jns
sub
out
inc
imul
push
inc
test
ss
icebp
add
mov
movsb
insl
xor
cmp
xchg
dec
sub
mov
fisttps
pop
shr
in
xchg
aam
stc
scas
ss
test
out
test
nop
aam
mov
mov
mov
mov
data16
cmp
insb
addb
fiaddl
in
addl
cmpb
outsb
dec
add
pop
lods
add
es
mov
and
adc
add
pushf
sbb
das
inc
jl
insb
into
mov
adc
cmp
jne
lret
lods
pop
aaa
mov
out
stc
cli
jl
mov
stos
outsb
repz
je
in
fimull
and
cmp
cmp
xor
insb
pop
ljmp
scas
pushf
sub
out
dec
lods
xchg
int3
add
and
mov
adc
in
push
sbb
in
xlat
addb
dec
out
jnp
adc
adc
jo
inc
jmp
sub
cmp
movd
cmp
push
dec
jns
clc
xlat
sti
sub
push
jg
pop
mov
sub
lahf
add
push
leave
sbb
or
xchg
decl
gs
repz
xchg
mov
fldpi
sbb
mov
mov
mov
push
mov
out
or
dec
and
xor
insl
or
test
or
jmp
jb
xor
or
mov
push
pushf
adc
insb
sbb
adc
daa
subb
push
fisttpl
out
outsl
rcrl
mov
adcl
fldcw
fdivrs
mov
jp
lret
fmull
fs
mov
ret
push
loop
arpl
shrl
insb
sub
mov
mov
jecxz
lods
call
xor
aad
lea
dec
inc
sub
mov
cltd
inc
xchg
sub
adc
out
xchg
pusha
iret
or
idivl
mov
mov
dec
mov
pushf
int3
mov
in
mov
mov
cmpsl
adcb
cli
jge
dec
test
xor
into
mov
int
and
jns
testl
cmp
push
sbb
ss
mov
and
in
fdivs
adc
roll
enter
jbe
cmp
insl
sub
mov
mov
popf
xchg
ja
jbe
sub
imul
push
mov
xlat
dec
add
mov
jge
insl
dec
cmpsb
inc
loopne
adc
lods
inc
ds
int3
and
clc
xor
mov
xor
add
lahf
fistpll
in
pop
mov
push
shlb
ss
dec
mov
ret
sub
outsb
cmp
ret
xor
cmp
test
fstp
arpl
cmp
cmpb
jne
popa
sarb
or
js
rorb
fcom
ja
jno
lock
xlat
dec
inc
fscale
xor
addr16
xor
cmp
in
rorb
or
ror
fldcw
insl
out
push
xlat
mov
stos
adc
add
dec
sub
loopne
sahf
int3
mov
ja
repnz
arpl
lds
mov
xor
and
rcll
push
sti
in
mov
xchg
pop
loopne
sub
mov
xchg
pusha
shrb
sbb
adc
add
ficompl
jg
shll
xchg
mov
ret
sarb
fists
sub
mov
xchg
cmpb
cmc
dec
mov
shll
or
sarb
sbb
push
mov
add
push
and
pop
data16
jb
and
pop
and
cmp
dec
dec
cmp
cmp
xor
test
lahf
push
inc
or
das
test
and
adc
aaa
sbb
xor
daa
mov
test
pop
hlt
push
push
or
outsl
movsl
mov
and
and
or
stos
enter
pushf
test
or
in
rcrb
cmpsl
and
jnp
repnz
or
xchg
pop
pop
cmp
cmp
push
push
mov
dec
lds
movsl
dec
js
cli
pop
rol
push
pop
mov
jbe
pop
or
push
add
outsl
in
mov
mov
lret
and
jp
sub
cmp
lret
jp
dec
inc
sahf
mov
shlb
jo
push
jge
cmpsb
sbb
sub
push
test
fs
or
adc
dec
mov
call
and
mov
xor
sub
hlt
cmp
orb
stos
lret
mov
xor
cmp
cmp
fstp
xor
jle
jge
loop
shll
dec
xor
flds
aaa
outsb
inc
mov
add
outsl
jo
popf
push
pop
mov
insb
mov
lds
inc
xor
sbb
lods
add
jns
jbe
pop
cli
fidivrs
imul
gs
jl
mov
loop
jns
pop
test
imul
push
fwait
cmpsb
cltd
mov
ds
repz
mov
xchg
dec
punpcklbw
cmp
push
fiadds
mov
xchg
std
je
test
sub
push
into
adc
cmp
inc
sub
stos
xlat
push
xchg
and
or
push
mov
test
sbb
push
mov
loope
jmp
dec
or
lds
shlb
mov
xchg
fiadds
pop
adc
lret
pusha
fadd
and
stos
and
rcrb
lock
jg
mov
mov
sbb
mov
sbbl
xchg
jnp
mov
iret
sub
popa
ljmp
push
fcoms
lret
testl
inc
inc
pop
stc
mov
jns
lahf
or
sub
in
fldl
cli
daa
inc
or
shll
sar
and
jnp
sbb
pop
daa
or
ret
out
movl
daa
movsb
sub
movsl
pop
sahf
mov
add
cmp
lds
mov
add
idiv
je
lods
std
sbb
sub
add
hlt
sahf
out
cmp
mov
subl
test
jg
insl
popf
dec
sarb
out
cmp
add
mov
mov
xor
adc
cwtl
stos
scas
fucomp
push
lea
jae
mov
shll
sub
cmpsl
sbb
sbb
mull
sub
call
imul
mov
scas
cwtl
dec
adc
jmp
or
repnz
cli
push
outsb
sarl
mov
cmp
push
or
dec
in
lock
ds
jae
insb
ret
inc
mov
movb
pusha
mov
inc
mov
dec
pcmpeqw
pop
out
cwtl
jp
or
push
leave
add
and
xchg
xlat
dec
sahf
jl
ret
test
and
jne
outsb
sub
cmpb
inc
push
cwtl
push
pop
outsb
fcoml
sub
movsb
cmp
fildl
sbb
pushf
xor
lods
mov
xor
fs
jo
xor
mov
cmpsl
cmp
notb
cmc
fdivr
cmp
sub
adc
adc
mov
pop
shl
inc
nop
in
jg
bnd
mov
cmp
xchg
jb
dec
mov
dec
and
rcrl
cmpsl
xor
adc
ds
popl
nop
outsl
out
cli
sub
adc
mov
test
notb
mov
pop
out
inc
cwtl
xchg
adc
mov
mov
jge
inc
inc
cmp
rcl
add
loope
mov
pop
ficoml
add
in
push
xor
dec
in
xchg
sub
rorb
andl
mov
loopne
mov
pop
lcall
out
aaa
pop
sbb
sbbb
loop
lods
lret
out
rcll
or
lock
adc
popf
cs
pushf
adc
adc
in
pusha
add
loop
jae
idivb
inc
jl
inc
or
cmpsb
cld
cld
call
fcoms
cli
adc
cld
inc
popf
es
aas
adc
imul
nop
jge
dec
add
lods
push
mov
and
out
inc
mov
xchg
or
pop
mov
mov
mov
pop
ret
cmp
sbb
cli
mov
mov
fadds
jo
bnd
push
inc
mov
cwtl
outsb
xor
push
pop
jp
mov
mov
jecxz
jle
mov
test
or
mov
pop
enter
sub
testb
in
dec
push
fdivp
xchg
fwait
ljmp
and
and
mov
dec
mov
xchg
sbb
jmp
fistpl
push
sub
dec
or
mov
inc
loop
gs
push
mov
adc
jge
jg
xchg
cmp
mov
loopne
jnp
and
jle
popa
out
cmpb
push
mov
pop
jae
scas
add
notl
adc
ljmp
cmp
clc
or
cmp
test
dec
inc
lds
jle
fiaddl
xor
dec
pop
sub
sub
test
in
insb
repz
adc
stc
loope
roll
icebp
leave
test
mov
cld
aam
pusha
jnp
mov
repz
adc
cli
sub
sbb
pop
dec
arpl
ret
add
jge
rorl
aaa
sarb
test
pop
and
popf
add
daa
cli
xor
jp
aaa
data16
mov
test
sbb
mov
stc
sub
arpl
jp
cmp
popa
adc
jecxz
lret
mov
push
ds
mov
mov
fidivs
jmp
xchg
push
in
and
pop
lods
cld
jbe
out
aas
and
push
xchg
push
sbb
push
fwait
rcrb
adc
fisttpll
xor
fildll
cld
cmp
push
and
sbb
xchg
sti
imul
sbb
jle
inc
xchg
test
dec
xchg
mov
sub
adc
mov
dec
pop
mov
js
cltd
xchg
fcmovnbe
loope,pn
add
fsubs
xor
bound
and
xchg
cmp
inc
or
push
and
mov
jns
pop
cld
xor
sub
repnz
mov
cmp
jo
push
dec
add
inc
daa
cmp
inc
inc
testl
cmp
loopne
ljmp
jae
out
and
std
mov
push
sbb
repnz
adc
add
std
nop
testb
inc
in
sbb
in
hlt
roll
sub
mov
xchg
sbb
adcb
add
dec
ftst
or
adc
mov
sbb
dec
in
sbb
inc
test
jns
stos
jae
sbb
adc
mov
xor
scas
cli
aaa
adc
inc
jecxz
inc
aad
pop
iret
aaa
push
sbb
sbb
scas
push
scas
lcall
mov
mov
pushf
dec
or
inc
push
mov
jp
jle
sub
sbb
outsl
jae
inc
cmpsl
xchg
inc
adcb
mov
dec
dec
mov
add
sub
adc
das
leave
dec
shll
fldl
fcmovnu
scas
repnz
add
or
test
push
std
fimuls
je
and
je
arpl
xor
jmp
mov
push
jo
ficoms
xor
or
mov
lret
iret
push
and
mov
mov
les
xor
movsb
out
push
pop
jb
mov
pop
test
add
imul
sbb
mov
or
add
mov
inc
jb
lret
adc
ds
lock
lahf
cmp
xor
lcall
sub
cmp
pop
mov
add
addb
mov
xchg
mov
rolb
bound
push
sahf
movsb
sbb
test
push
push
clc
sahf
jg
daa
or
je
cmp
xchg
call
pop
gs
jns
pop
sbb
test
xor
loop
jo
adc
or
iret
addr16
jnp
dec
int
stos
sti
data16
cwtl
iret
mov
dec
pushf
sbb
push
mov
mov
sub
stc
xor
add
xchg
dec
data16
push
lahf
adc
lcall
pop
aam
sub
cmpsl
or
cmp
gs
xor
les
xchg
pushf
push
out
mov
sub
mov
fcmovbe
inc
mov
lret
mov
sub
push
mov
or
pop
and
inc
jbe
mov
xchg
iret
inc
add
push
pop
jecxz
jle
aas
repnz
or
cli
mov
ds
push
daa
mov
aas
dec
sbb
stos
lods
and
inc
inc
adc
push
lds
icebp
mov
xchg
pop
mov
xor
fwait
mov
add
sbb
cmp
sarb
mov
sbb
rorl
js
movsb
loope
mov
adc
pop
dec
adc
addr16
dec
inc
inc
test
sahf
or
sbb
lcall
icebp
stos
test
jno
or
jo
mov
dec
es
jge
iret
jmp
lods
insl
jne
mov
jge
mov
repz
ret
in
pop
ljmp
inc
jle
mov
std
xor
mov
push
sbb
inc
cld
cmp
jns
sub
loopne
loopne
pop
lods
shll
rorb
mov
lcall
xlat
mov
inc
call
sbb
mov
lea
jo
jecxz
adc
xor
popf
sub
sbbb
or
arpl
or
jbe
dec
aad
jg
cmp
mov
push
jae
fadds
dec
pop
dec
loopne
adc
mov
push
dec
insl
mov
mov
js
ds
push
insl
mulb
jbe
pusha
fimuls
jge
jle
imul
adc
sub
or
inc
cli
lahf
inc
xor
or
sub
scas
les
jmp
jp
lret
nop
loopne
movsl
lods
negl
fsubs
push
xor
inc
jge
jbe
jmp
jne
enter
inc
mov
into
test
sbb
loope
or
fwait
rcrl
xor
sti
lods
or
pop
fidivs
imul
cltd
fdivrs
pop
hlt
cmp
dec
xor
aam
push
dec
mov
add
jne
lret
aad
and
les
cmp
pop
out
lret
repnz
outsb
imul
fisttpll
dec
sbb
jle
adc
mov
jne
xlat
cli
sub
jnp
out
aam
or
outsb
stos
ss
adc
scas
stos
hlt
cltd
mov
shll
out
xchg
jmp
xor
sbb
mov
shl
imul
xor
fiadds
xchg
push
sbbb
loopne
inc
sub
cld
push
push
in
xor
nop
mov
pop
jo
daa
imul
js
mov
pop
icebp
shll
mov
js
setne
outsb
popl
mov
inc
jmp
rolb
sbb
jg
sti
scas
dec
cmp
fcoms
push
mov
inc
cwtl
jmp
mov
cmc
pop
sbb
xor
lea
aam
in
stc
loopne
inc
or
xchg
and
push
mov
sbbb
xor
xor
ss
call
leave
lahf
loope
cmp
outsb
and
add
cmp
enter
outsb
xor
lods
dec
push
shlb
mov
in
iret
add
aas
push
rcll
dec
xchg
mov
xor
inc
push
push
sbb
jecxz
popa
rorb
cmp
xchg
cli
loop
adc
pushf
xchg
stc
roll
movsw
cmpsl
pop
pop
xchg
daa
in
xlat
js
scas
sub
or
or
mov
test
sub
aam
mov
les
fucomip
pop
jg
in
pop
imul
adc
xor
ss
int3
repnz
fisubrs
shll
call
sub
popa
clc
xor
imul
sub
addr16
mov
scas
or
lock
ret
xchg
insb
hlt
scas
fistps
es
mov
pop
in
lcall
jge
inc
inc
lret
fs
addr16
int
adc
cld
adc
mov
xor
call
loope
std
mov
mov
sub
xchg
ss
mov
repz
iret
cmp
xchg
pop
fmuls
add
cmpsl
repnz
sbb
fcmovu
mov
fwait
out
and
mov
shll
ja
ja
or
push
push
push
pop
fst
jns
mov
frstor
iret
pusha
and
movsl
fdivs
stc
cmp
iret
inc
test
out
shlb
mov
enter
ror
out
mov
imul
mov
jp
mov
dec
adc
dec
int
icebp
out
jl
push
aam
cwtl
mov
mov
ret
out
mov
mov
lods
outsl
mov
xlat
jbe
xor
jno
dec
fiadds
clc
pop
cwtl
sti
mov
addl
lock
bound
mov
mov
shll
cmpsl
insb
sub
xchg
popf
faddl
lret
mulb
mov
stos
xor
add
jo
pop
into
dec
push
outsl
pop
data16
in
adc
and
in
mov
js
scas
into
loope
nop
lahf
mov
in
xlat
rolb
jno
pop
jmp
mov
lret
data16
and
inc
push
jbe
cli
fwait
popa
leave
jno
in
pop
cli
int
adc
pop
imul
xchg
or
lods
ljmp
mov
lcall
jmp
xchg
in
in
mov
xor
fdivl
sarb
lods
push
jp
pushf
mov
aas
cmp
pop
jle
inc
or
xchg
inc
ljmp
ret
lds
jbe
test
push
inc
sarl
jmp
xchg
pop
sub
cwtl
ljmp
pop
jnp
test
dec
push
or
divb
jmp
arpl
enter
cld
mov
jmp
in
mov
imul
push
into
adc
add
scas
mov
loopne
and
xor
loop
imul
cmp
cmp
loop
lret
sub
fstl
cld
xchg
lret
mov
es
inc
stc
cmpl
ljmp
dec
or
out
lea
or
xchg
sub
sub
imul
fsts
rcrb
mov
mov
pusha
dec
mov
inc
add
hlt
js
fbld
aad
adc
bound
mov
xchg
pop
pop
fisttps
aaa
lret
adc
mov
mov
mov
mov
adc
and
mov
add
jae
pushf
lea
je
and
nop
enter
lcall
add
aam
inc
mov
pop
imulb
pop
mov
cmp
lret
dec
mov
xchg
imul
aaa
xchg
cli
pop
repnz
loop
in
jne
pop
int
loopne
mov
stos
fimull
rcr
loop
adc
dec
cwtl
pop
mov
pop
scas
jmp
aaa
add
call
shll
and
sbb
inc
fs
mov
scas
cs
adc
or
inc
cmp
sbbl
fmull
adc
xchg
pop
sbb
outsl
jmp
int3
daa
out
fnstenv
adc
add
push
jo
xlat
in
fstpt
shll
rolb
sub
ja
rcll
das
nop
pushf
ljmp
sub
insb
pop
adc
xchg
pop
fisubs
pxor
cmp
pop
mov
xchg
cwtl
in
sahf
lcall
dec
lret
xor
ds
ror
mov
mov
iret
insl
and
test
test
adc
mov
popf
mov
scas
das
push
sbb
outsb
lret
add
mov
out
xlat
scas
xchg
jle
insl
cmc
jb
push
rol
mov
jg
push
sbb
scas
shlb
add
mov
insb
push
mov
adc
cs
enter
xchg
dec
leave
push
jo
cld
pop
push
mov
nop
sti
mov
rcrb
mov
inc
jae
sahf
mov
scas
daa
sub
jne
pop
js
pushf
scas
bound
rcr
dec
shlb
xchg
xor
sarl
jb
or
xor
sub
mov
leave
xchg
dec
add
test
cmc
in
dec
loopne
mov
bound
xchg
imull
push
jno
inc
sub
inc
cmpsb
cmp
cmp
jno
call
ret
mov
ret
adc
dec
mov
push
faddl
sub
inc
pop
xchg
pop
addr16
mov
arpl
cmp
cmp
out
mov
xchg
sbb
gs
outsb
aas
adc
xchg
xor
push
push
sbb
sbb
repz
dec
add
push
das
jle
ds
aaa
adc
inc
jmp
jo
mov
cmpsb
testb
inc
mov
dec
int3
or
loopne
jo
mov
ret
jl
push
adc
jl
pop
xor
mov
cmpsb
in
or
mov
pop
out
pop
shrl
sub
cmp
cmpsb
sbb
xchg
movsb
or
or
je
jae
lahf
cmpsb
add
fwait
or
mov
into
outsl
stos
mov
cmp
add
hlt
pop
and
pop
add
dec
and
addl
push
pop
in
ja
test
sarl
call
push
pop
ret
adc
jb
fucom
xchg
cmp
fdivrs
outsb
pop
sbb
mov
cmp
mov
dec
jns
mov
xor
cmp
add
shrb
inc
fisttpll
xchg
outsl
and
ja
cltd
xchg
xor
dec
pop
cltd
push
out
insb
mull
int
push
inc
sbb
xor
push
rorb
dec
sbb
cmp
pop
sbb
jbe
lret
popa
push
push
ja
sti
sbb
jecxz
in
mov
ret
aas
fdivs
jo
sbbl
jl
mov
pop
mov
xor
add
push
jae
sub
cmp
xor
push
dec
xchg
jge
fsubp
sbb
int
inc
push
outsb
cmp
mov
add
mov
shrb
lods
imul
push
ret
lock
pusha
hlt
fwait
in
lods
jg
loope
mov
mov
sti
pop
shl
cmp
es
test
inc
xchg
xlat
or
add
lds
insl
push
gs
xor
sub
movsl
sbb
outsl
mov
mov
xor
push
out
scas
sub
fdivrp
dec
mov
push
sbb
sub
outsb
in
ja
or
mov
test
iret
mov
xchg
cmp
mov
cmc
xchg
jmp
daa
mov
int3
scas
or
bnd
dec
mov
sbb
xchg
test
and
loope
rclb
cltd
jns
in
and
xchg
out
fmuls
xor
cmp
pusha
fmulp
cmp
mov
test
xchg
mov
pop
jg
dec
pushf
add
jl
push
add
jecxz
int3
popa
jo
sub
incb
xchg
rcrb
lock
leave
nop
mov
mov
cltd
dec
add
stos
dec
mov
xor
movsb
and
lods
inc
adc
xor
pushf
dec
call
adc
push
add
pop
data16
fmuls
push
push
jge
iret
ficompl
mov
out
iret
and
inc
adc
mov
je
int3
pop
dec
xor
jl
mov
cs
xor
out
in
pop
in
rorl
aam
mov
xchg
pop
fisubrl
or
add
or
jo
ja
movsb
daa
xor
mov
inc
test
lds
mov
mov
incl
imull
xchg
mov
stos
leave
scas
adc
inc
jge
sbb
mov
aam
pop
in
adc
testb
mov
into
and
sub
test
mov
js,pt
fwait
call
fstpt
and
repz
sbb
int3
mov
aam
stc
test
adc
orl
lcall
sahf
jbe
adc
loope
pop
dec
imul
popf
rclb
dec
das
sbb
pop
push
out
cs
pop
ja
aaa
add
cwtl
push
mov
xor
sbb
ds
sbb
fiaddl
or
ret
shll
cwtl
push
mov
cmp
pop
insl
loopne
mov
xchg
loop
rdmsr
dec
scas
cmp
jg
and
out
fldenv
inc
daa
and
orl
lock
lea
popaw
lds
push
mov
mov
sub
outsl
lock
bound
mov
loope
repnz
xchg
fwait
cmpsb
popa
dec
sarl
scas
add
popf
sbb
ja
and
out
test
insl
dec
inc
nop
cmpl
adc
jg
sbb
and
fstpt
xor
inc
je
enter
stos
shll
aas
mov
rclb
add
and
add
leave
cli
popa
in
add
add
cltd
mov
pop
pusha
fadd
cmp
rorl
mov
fisttps
lahf
dec
add
sub
and
cmp
add
addr16
mov
out
and
mov
or
mov
cmp
pusha
cmp
incb
xchg
inc
fs
jg
outsl
dec
add
adc
inc
mov
loope
into
push
sahf
mov
loope
cli
lods
outsb
fldt
fimull
dec
cs
cli
cmp
fistpll
cmc
push
cmp
xchg
push
dec
dec
push
sub
cld
push
cmpsb
ffree
imul
cmp
adc
sub
les
outsb
jno
fmull
adc
mov
insl
hlt
push
insb
shlb
mov
xchg
inc
test
jg
fistl
push
mov
push
inc
ss
cli
popa
mov
jge
ljmp
or
stos
stos
fldenv
mov
test
jg
out
sti
leave
sub
push
dec
enter
fnstcw
in
pop
mov
add
mov
lock
loop
lods
hlt
mov
pop
lods
cltd
or
push
mov
rorb
mov
and
push
xor
test
sub
dec
fistpl
test
cmp
js
scas
xor
into
mov
addr16
mov
sub
sub
sub
js
fwait
mov
pop
mov
shlb
and
test
and
inc
adc
out
les
or
aas
ret
add
jo
inc
lods
fdivr
pop
and
lcall
mov
or
shll
push
push
and
inc
sbb
or
pop
cmpsl
lods
std
add
test
sub
mov
mov
pop
push
sbb
and
sahf
jmp
adc
loopne
sub
sub
imulb
fnstenv
sbb
jmp
fstpl
frstor
lahf
xor
or
divl
inc
sbb
cmp
pop
dec
or
stos
lcall
in
or
lods
sti
sti
dec
jle
mov
mov
gs
mov
addb
mov
jl
fsubr
push
cmpsb
and
sbb
mov
insb
cs
in
jecxz
push
fcoms
lods
fs
dec
dec
scas
add
fdivl
push
adc
cmpb
add
and
dec
dec
jg
ja
jmp
xchg
nop
bound
popf
test
iret
jecxz
sbb
xchg
jne
mov
pop
xchg
jle
jge
pop
xchg
shr
leave
repz
popf
fcmovu
gs
inc
adc
pop
xor
call
adc
mov
arpl
pop
or
iret
inc
mov
shrb
ss
jbe
and
mov
stos
and
pushf
jne
xor
pop
ljmp
pop
mov
stc
out
inc
fidivrs
das
adc
pop
mov
inc
ficompl
stos
push
dec
movsl
or
sti
mov
aad
mulb
pop
cmp
mov
fnsave
data16
cmpsb
mov
jp
gs
cmpsb
lahf
xchg
fdivp
push
pop
pop
cmp
inc
mov
lock
push
notb
jmp
mov
adc
add
insl
xchg
insl
xor
dec
ss
out
and
aam
imul
inc
lock
cmp
push
adc
scas
xchg
add
xchg
sahf
lahf
mov
clc
cmp
icebp
xchg
movsb
fnstenv
scas
inc
adc
pop
movsb
dec
das
fs
stos
sbb
mov
add
sub
lock
mov
inc
dec
mov
dec
ret
addb
mov
jbe
xor
pop
mov
pop
fstps
mov
cmp
fwait
dec
outsb
sub
repz
neg
aas
xchg
jge
push
and
xor
fstpl
inc
mov
mov
pop
inc
inc
test
dec
jns
fists
mov
pop
cltd
negl
idivl
cmp
in
in
sub
and
jnp
cpuid
popa
sarl
mov
ds
std
pop
nop
mov
repnz
cmp
mov
ds
adc
sbb
and
xchg
jns
push
jp
les
rolb
fsubr
fcmovnu
stc
xlat
dec
mov
ret
lds
ficomps
mov
in
inc
mov
pop
inc
in
mov
pop
lods
ja
sub
mov
daa
orl
jp
sub
mov
mov
into
call
dec
incb
aam
mov
mov
sub
adcb
add
pusha
mov
ficompl
sub
xchg
fbstp
sbb
pop
jnp
clc
or
mov
xor
ljmp
das
jno
test
fisubs
xor
inc
adc
jge
je
or
adc
lds
and
xchg
loop
mov
inc
pusha
rcrl
lret
xchg
cmp
aam
sub
iret
repnz
les
xchg
gs
fs
mov
push
cmpsl
dec
jae
cmp
and
daa
mov
cwtl
mov
popa
ljmp
mov
mulb
pop
push
inc
hlt
stos
add
in
mov
mov
adc
mov
xor
cmp
push
add
sahf
fisttpll
movsb
adc
or
subl
add
or
out
jp
dec
jo
jg
xchg
cmp
shrl
or
jmp
inc
sub
ljmp
xor
scas
jecxz
push
mov
mov
xor
divb
push
fwait
cmc
pop
mov
cwtl
pop
mov
movsb
xchg
mov
std
loope
out
mov
sbb
scas
mov
sub
mov
les
in
dec
mov
jno
shrl
jnp
push
lahf
mov
std
mov
pop
pop
sub
std
in
mov
xchg
movsb
mov
dec
push
js
rclb
inc
pushf
icebp
lea
jmp
popa
arpl
mov
sbb
lds
cmpsl
lock
fldl
fsts
fisubs
sbb
repz
add
cmp
push
dec
lea
cmp
push
stc
xor
sti
sub
loopne
dec
pop
in
xchg
pop
ret
je
clc
iret
xchg
out
and
sub
jne
jp
orl
out
lods
mov
xor
adc
cld
and
dec
enter
lods
xchg
call
add
pusha
cmp
mov
addr16
xor
loopne
mov
push
xor
xchg
push
scas
sub
cmp
nop
lds
std
xor
mov
push
ljmp
into
nop
rol
or
jl
sub
dec
insb
aaa
test
push
sub
pop
pop
pop
dec
or
add
sub
clc
aam
inc
lock
pop
test
aas
jno
lcall
add
mov
inc
lahf
jl
dec
cmpb
push
add
cmp
adc
and
xchg
jle
mov
mov
xlat
mov
inc
ljmp
adc
insl
xchg
or
jmp
adc
ret
les
int3
fcomps
jle
lret
mov
stos
stc
out
jle
add
add
and
add
test
xchg
lods
aad
lds
sub
lds
dec
clc
and
mov
adc
mov
stc
int
sbb
call
aad
dec
inc
inc
idivl
arpl
jp
pop
cltd
mov
popf
sar
adc
ret
fidivl
lcall
xchg
cmc
sub
cmp
sti
sub
pop
inc
mov
ljmp
push
cmc
out
jnp
pop
jl
mov
es
sbb
or
xchg
rcll
xchg
mov
mov
xor
xchg
cmp
pushf
xor
xor
xchg
inc
pushf
ja
dec
sub
xchg
and
sub
jns
int3
fisubl
push
sbb
and
push
int
add
scas
inc
imul
dec
and
cmp
or
add
jle
pop
xlat
inc
cmp
fsubl
xchg
fmull
loope
jmp
loope
sbb
jecxz,pn
xor
and
lea
jmp
fstps
fxch
test
lret
sbb
mov
xchg
into
cmc
or
jg
movl
loop
jne
mov
pop
jno
push
movsl
adc
mov
cmp
or
inc
in
push
lock
pushf
insb
cmpl
movb
xchg
loopne
adc
loop
jb
dec
scas
scas
subl
sub
orl
mov
jnp
xor
xor
mov
inc
lret
push
xchg
push
mov
test
insb
pop
pop
mov
in
adc
mov
aam
sbb
cmp
push
aad
xor
mov
or
int3
push
jecxz
push
adc
inc
jle
cmc
xorb
inc
fldenv
movsb
jge
sub
or
dec
insb
xor
jae
cmp
jg
jmp
icebp
in
shlb
femms
shl
int3
in
sbbb
or
mov
jg
xchg
jno
icebp
dec
add
rep
test
ret
push
leave
sbb
in
bound
inc
lds
and
enter
std
sti
cmc
arpl
add
sbb
xchg
rcll
ja
xor
sbb
loop
ret
jo
fsts
cmpsl
and
dec
inc
test
fs
and
leave
jmp
add
repnz
aad
inc
sti
adc
outsl
shl
jle
push
mov
loop
test
sub
jp
add
out
adc
cld
into
test
leave
cmp
sbb
stos
inc
pop
call
fiaddl
push
dec
sbb
xchg
adc
mov
sbb
adc
rep
push
jmp
push
cmc
mov
popf
inc
mov
pop
push
insl
stc
clc
sbb
mov
mov
les
out
mov
scas
scas
pop
into
sbb
test
xor
jecxz
cmc
ret
lret
xchg
aad
jg
cmp
lea
out
test
sub
jne
push
inc
je
sub
mov
icebp
les
cltd
inc
andl
inc
mov
add
mov
lea
jge
fildll
lcall
jecxz
enter
rcll
in
cmp
bound
ja
xchg
stos
inc
ljmp
rcrl
insl
gs
inc
out
xor
push
cmp
shll
mov
pop
mov
outsl
les
shlb
jns
popa
inc
mov
pop
mov
add
lds
adc
lods
xor
mov
addr16
outsl
rolb
pop
push
mov
test
into
aam
push
xlat
shl
mov
rcll
xchg
xor
mov
es
aad
gs
mov
xchg
push
xlat
scas
dec
push
lcall
popf
sub
insl
lret
popa
cmp
sub
inc
adc
or
jno
xor
sub
jge
jb
pusha
dec
stos
inc
stc
mov
aas
mov
cmc
imul
inc
mov
int
ja
add
lea
mov
pop
push
jecxz
negl
pop
mov
std
adc
ds
repz
pusha
push
or
jmp
pop
jle
jecxz
fs
push
fcmovnu
cli
lcall
fmuls
and
rolb
fldenv
mov
outsb
adc
das
pop
jae
fs
sub
lahf
cmp
push
push
inc
cmp
mov
lcall
push
push
add
popf
sub
pop
push
stc
jp
cmp
mov
adc
shr
shll
daa
and
test
inc
movsb
lods
mov
mov
sbb
pop
fisubrs
out
mov
pop
adc
cmp
icebp
jbe
shlb
adc
push
lods
or
xor
lcall
xchg
jge
sub
mov
xlat
mov
out
cmp
jne
push
sub
xchg
imul
pop
push
inc
shrb
cmp
pushf
inc
adc
sbb
inc
inc
mov
or
inc
test
test
shlb
xor
inc
xchg
xor
std
arpl
andb
xchg
xor
or
mov
pusha
push
mov
sbb
jecxz
adc
push
inc
shlb
icebp
daa
cmc
sbb
jne
inc
js
popa
cmp
pop
stc
adc
push
divb
pop
mov
mov
add
data16
xchg
pop
fistps
pop
in
sbb
pusha
xchg
cmp
test
lcall
subl
cmpsb
lcall
and
push
out
sub
mov
mov
xchg
jns
scas
and
repnz
cwtl
pop
or
inc
mov
sub
pop
inc
mov
cmp
sti
shl
xchg
nop
xchg
pop
push
push
daa
mov
push
call
out
add
mov
cltd
adc
imulb
popa
jbe
arpl
cmp
test
hlt
loope
arpl
or
push
insb
mov
popf
idivb
inc
xlat
add
fnstenv
sub
cmp
mov
cmc
jo
in
iret
jne
sbb
setp
int3
sbb
fs
xchg
push
push
mov
and
xor
jne
shrb
push
mov
fiadds
stos
xor
stos
test
ds
ja
arpl
add
mov
add
movsl
fistps
adc
dec
mov
fdivr
stos
mov
stos
fnstenvs
dec
lea
cmp
sahf
stos
lods
dec
jno
dec
push
movsb
aas
sti
stc
out
or
out
cmp
dec
mov
adc
or
xor
fcmove
arpl
xchg
mov
sbb
jne
pop
aaa
dec
inc
xor
in
ficoml
mov
dec
loope
push
ljmp
push
jmp
into
js
add
in
jns
sub
mov
sti
or
psubd
xchg
ds
mov
or
xor
pushf
aam
push
mov
add
mov
mov
xor
lahf
sub
enter
dec
inc
fmull
jg
jo
test
jae
mov
fs
mov
dec
pop
inc
cmpl
inc
ds
dec
xlat
mov
or
test
sarl
add
inc
add
inc
test
pop
aaa
inc
hlt
lds
icebp
inc
push
mov
push
pushf
sbb
mov
jmp
pop
xchg
pop
addl
jl
jnp
dec
jnp
jnp
inc
mov
inc
fbstp
into
pop
push
out
fs
cmp
fnsave
xor
aam
dec
ret
scas
pop
scas
sahf
out
js
pop
int3
dec
data16
insb
popf
mov
fdivrs
pop
pop
lret
sbb
pop
mov
mov
mov
xchg
xchg
or
add
aad
xchg
pop
popl
dec
push
pop
clc
push
cmpsb
cwtl
mov
fiadds
mov
outsl
mov
cmc
mov
dec
fldl
loope
mov
loop
ds
xlat
bound
mov
xchg
mov
sbb
pop
inc
add
icebp
test
pop
pusha
loop
xor
jmp
jb
xor
sti
imul
testb
fstpl
or
cmp
movsb
mov
pop
outsl
popf
fimuls
xchg
adc
jae
push
pusha
mov
test
ja
and
jns
push
dec
dec
mov
jle
inc
sbb
scas
add
pop
inc
rcrl
xchg
xchg
je
adc
push
adc
cwtl
cmp
sub
mov
jle
je
leave
mov
xchg
pushf
cltd
shlb
testl
mov
push
int3
xchg
jge
lods
mov
adc
adc
dec
inc
cltd
dec
sbb
cs
nop
dec
lods
mov
es
cmp
subb
outsl
add
cs
fnstenv
scas
push
test
xor
shll
jae
aad
pop
mov
into
cmp
cmpsl
and
loopne
sti
push
sub
jg
incb
sub
push
scas
pop
movsl
lret
xor
or
arpl
incb
push
push
push
sbb
subl
test
idivl
or
inc
mov
daa
js
sub
test
out
loopne
dec
mov
adc
js
mov
sub
mov
pushf
mov
cmpb
add
shll
xor
inc
stos
fldenv
sti
imul
or
and
push
imul
lret
divl
pop
pop
push
pop
test
ffreep
cltd
loope
in
mov
es
clc
sub
jl
mov
cmp
notb
pop
loope
jne
out
cmp
mov
pop
xlat
shll
pop
imul
hlt
testb
push
mov
shrb
add
test
mov
aaa
jbe
mov
mov
jb
mov
mov
mov
pop
std
lahf
and
mov
xor
sbb
aad
push
subb
push
outsb
mov
pushf
lahf
insb
sub
ljmp
xor
and
in
mov
cmp
ljmp
xchg
stos
shll
sub
loopne
pop
mov
sub
mov
sub
addr16
dec
cld
push
adc
mov
jnp
mov
xor
dec
mov
call
jle
sbb
xchg
or
fidivl
mov
cmp
jnp
imul
push
dec
xchg
xchg
int3
adc
mov
in
mov
jecxz
int3
lods
mov
mov
out
sub
pusha
cltd
pop
push
cld
aad
add
cli
sub
cwtl
jno
icebp
in
cli
jmp
jecxz
xor
inc
sub
or
fstl
jg
sahf
dec
xchg
add
outsb
int3
push
jge
mov
dec
scas
mov
xchg
cmp
sbb
inc
pop
sar
push
fmuls
xchg
mov
xchg
out
xchg
pop
xchg
call
imul
mov
push
or
and
sub
cltd
mulb
fidivs
in
xchg
jb
xchg
jbe
sub
lock
mov
add
push
or
jmp
push
dec
jae
cld
inc
jo
jo
loope
cltd
sar
popa
pop
push
ret
mov
test
fidivrs
push
ret
xchg
js
and
jle
in
aas
push
outsl
push
lret
loop
or
inc
add
jl
add
add
test
jp
rcr
in
dec
rcrb
fisttpl
adc
jne
test
fwait
aas
arpl
xor
les
ret
shlb
xchg
aad
adc
dec
dec
jge
xor
movsl
fdivrs
out
cmc
cmp
dec
je
sahf
ljmp
das
pusha
xchg
out
pop
je
aad
mov
sbb
hlt
xor
sub
inc
inc
inc
xor
jg
inc
pushl
inc
mov
pop
aam
sbb
pushf
jge
std
sti
push
aam
xchg
dec
xor
or
xchg
lods
adc
mov
bound
inc
dec
lods
repnz
imul
cmp
dec
pop
rolb
ret
mov
rorl
popf
pop
pushl
lds
add
cld
jmp
push
sbb
loopne
cmc
test
push
mov
mov
pusha
aam
pop
add
sbb
xor
sub
dec
jmp
sbbb
fs
sbb
scas
push
jns
sahf
in
mov
jns
jp
mov
sub
sbb
cltd
mov
lock
pxor
jbe
jns
filds
addr16
pop
mov
lahf
test
insl
push
repz
push
cmpsb
inc
or
fwait
aam
pushf
mov
inc
and
sbb
sbb
mov
pop
cmp
shlb
push
jle
fcompl
dec
in
addl
pop
pop
aam
dec
and
cltd
push
xor
push
pop
fisttpl
cmpsb
out
xchg
fsin
dec
add
lret
out
sbbl
lret
ja
mulb
pop
jno
daa
push
hlt
adc
xlat
jp
insb
movsb
jb
nop
incl
clc
sbb
mov
cwtl
cmp
lahf
lods
ljmp
sbb
ljmp
push
movsl
mov
xchg
dec
jge
aad
push
orb
and
xor
mov
add
sbb
iret
push
je
mov
adc
jno
xorb
subb
dec
mov
mov
push
movsb
mov
mov
pop
outsl
repz
push
push
or
inc
loopne
movsb
popa
push
adc
ret
adc
pop
lret
ss
xchg
cltd
sar
test
jns
cld
cld
lock
or
in
mov
pop
sbbb
cwtl
stos
ficomps
dec
dec
inc
inc
dec
testb
mov
add
mov
daa
fdivrs
xor
sub
jnp
insl
adc
popf
jmp
inc
into
ret
push
mov
pop
dec
popf
pop
sbb
xchg
mov
iret
sbb
jmp
call
in
cmp
aas
sub
mov
insl
xor
and
cmc
les
or
jp
cli
insb
dec
insl
adc
out
out
out
and
pop
out
jnp
jp
loope
mov
sbb
dec
dec
mov
dec
daa
pop
ja
jb
xor
add
push
negb
mov
adc
cmpsl
fwait
inc
lods
scas
sub
test
add
ficomps
inc
fwait
paddusw
in
lock
mov
dec
jg
xchg
stos
cmp
fadds
mov
loopne
adc
iret
mov
push
mov
and
jmp
roll
fs
pop
adc
out
jne
sub
shll
mov
jle
pop
loop
mov
sti
push
pop
inc
lret
jo
ss
mov
mov
cs
pop
into
add
out
icebp
dec
mov
sbb
jae
lahf
xchg
rorl
das
sbb
sub
sbb
call
shld
popf
and
xchg
les
pop
inc
xchg
addl
push
lret
fimull
hlt
fadds
xor
popa
push
fwait
sbb
push
inc
stos
mov
add
pop
into
mov
mov
mov
arpl
or
cmovg
shll
shrl
add
sbb
adc
cmp
sbb
push
mov
hlt
mov
dec
pop
popf
pop
test
loop
sarb
aas
jecxz
jg
jnp
adcl
mov
dec
xor
mov
xor
in
inc
or
lcall
in
outsl
lds
cmp
rol
adc
xor
cmp
subb
sbb
jbe
pushf
xchg
les
add
leave
cltd
ss
les
out
sahf
int
inc
or
pushf
insl
sub
push
enter
jl
adc
add
fsubrp
dec
and
rclb
int3
jmp
fmull
call
jg
mov
adc
dec
adc
test
lret
push
mov
dec
out
rclb
fsubs
push
das
outsb
add
adc
dec
mov
shl
addr16
rol
xchg
jp
leave
pop
cmp
fiaddl
rep
mov
aas
stos
add
out
cpuid
aad
push
aam
mov
rorb
mov
test
xchg
cld
adc
aad
push
insb
ds
pop
dec
xor
mov
movb
rcr
int
or
loop
mov
mov
sub
jg
xchg
test
clc
mov
sub
pop
loope
sbb
lcall
iret
pop
or
xchg
cmp
inc
jae
mov
mov
out
data16
out
ljmp
rclb
cmp
iret
iret
pop
ljmp
jl
aam
in
lds
cs
or
mov
leave
push
xorb
fimuls
loop
inc
and
cwtl
or
xchg
sbb
jmp
push
xor
daa
popf
mov
or
leave
btc
jecxz
out
jne
adc
std
lahf
fsts
pop
cmpsl
jne
imul
cmp
lock
sub
lret
jns
mov
insb
popf
roll
ss
sbb
dec
adc
pop
aaa
es
mulb
stos
lret
mov
ss
pushf
dec
pop
or
inc
and
test
adc
pop
mov
or
orb
or
xor
push
lcall
stos
dec
arpl
xor
xlat
push
lea
pop
xor
xchg
sbb
out
addr16
sub
fldenv
mov
aas
and
and
lods
fisttps
xor
mov
dec
dec
mov
jb
pop
or
cmp
test
jo
jl
push
in
ja
xchg
loope
push
xchg
add
push
stos
push
enter
stos
mov
ja
xchg
xchg
add
fistpll
fmuls
and
pop
and
fwait
sbb
jbe
daa
xchg
mov
add
out
insb
or
pop
pop
or
lret
pop
and
sbb
imul
mov
pop
and
mov
push
ret
js
jb
shll
mov
push
xchg
pop
cltd
dec
inc
pop
sub
add
int
sub
and
jnp
pop
orl
in
arpl
movsb
inc
mov
cmc
add
mov
popa
les
sbb
mov
inc
dec
xchg
mov
repnz
jge
inc
imul
dec
xor
cmc
adc
das
fnstsw
movsl
adc
loopne
into
jo
lret
push
pop
and
add
xchg
push
mov
jae
xchg
mov
shl
call
rcr
inc
and
fisubrl
movsb
test
sub
cltd
push
jae
jmp
js
xor
popa
jnp
pop
call
mov
pop
sub
sbb
dec
adc
cmpsb
xor
mov
pusha
int
pop
in
mov
sub
shl
lahf
fstp
adc
stc
push
cli
add
xchg
data16
mov
jg
sbb
cmc
push
push
mov
jne
add
icebp
sbb
mov
mov
or
xlat
pop
popa
pusha
jae
lock
daa
pop
and
sub
sar
and
inc
mov
jnp
inc
push
xchg
push
cli
dec
mov
jne
jae
add
mov
addr16
jecxz
mov
out
cmpb
adc
mov
nop
or
xchg
ds
pop
lods
add
and
dec
inc
jg
ret
adc
cwtl
inc
push
mov
fs
xchg
mov
xor
mov
pop
dec
shll
or
int
lods
push
mov
mov
push
sbb
mov
into
lea
xchg
sahf
adc
pop
cmp
ja
popa
sub
les
add
mov
or
faddl
sub
cwtl
jae
and
xchg
outsb
hlt
out
xchg
pop
mov
int
jbe
mov
and
inc
cmp
mov
mov
jne
dec
popf
mov
incb
ret
push
cmc
sahf
aad
mov
inc
sub
outsb
mov
xor
lock
sbb
repnz
int3
lcall
test
dec
add
ljmp
xchg
into
movsl
xchg
and
pushf
add
xchg
cmpxchg
mov
pop
iret
add
out
in
mov
and
push
ficompl
test
cmp
jns
push
sbb
lea
and
lea
pop
cmp
arpl
cltd
sbb
push
stos
add
sbbb
xlat
mov
xor
fsts
jno
popf
adc
cmp
repnz
xchg
das
push
pop
mov
pop
mov
add
jecxz
iret
in
jecxz
jnp
jp
pop
mov
imul
pop
mov
dec
jnp
dec
rorb
lods
dec
icebp
mov
call
inc
movb
push
inc
and
mov
mov
pop
fisubl
fistps
movb
pop
jmp
inc
or
scas
mov
and
dec
in
and
push
ds
test
insl
or
imul
popf
push
jbe
push
fildl
add
xor
sub
orb
movsb
mov
sub
sbb
imul
jge
ret
mov
and
pop
inc
pusha
pop
jle
inc
mov
jno
in
cltd
dec
mov
xchg
sahf
and
decb
dec
loope
leave
cmp
xchg
mov
mov
inc
repz
pushf
add
mov
xchg
cmp
scas
inc
and
pop
fwait
arpl
lock
ds
lret
popa
push
subb
adc
push
inc
mov
and
fsubr
inc
add
jg
mov
out
pop
pop
icebp
mov
push
or
mov
ret
cs
addr16
ret
jmp
ja
test
xchg
gs
mov
jae
sahf
or
int3
dec
enter
mov
xlat
popf
sub
bound
sbb
out
adc
fcmovbe
addb
mov
and
fbstp
or
inc
lods
push
mov
fcoml
clc
sub
adc
bound
jecxz
or
insb
sub
call
test
mov
shr
mov
push
in
push
movlhps
nop
repnz
sahf
aam
or
xchg
loopne
pop
and
sahf
mov
loope
push
das
push
lret
sub
sbb
lcall
in
xlat
popf
in
aas
mov
mov
das
jnp
mov
lahf
popf
xchg
jb
push
ja
lods
inc
push
movb
xor
mov
shl
inc
ja
xor
rclb
shr
mov
call
push
stos
popa
pop
lods
aad
movsl
rorb
movsl
addb
inc
out
sub
repz
cmp
push
mov
cwtl
popa
popa
data16
mov
pop
fistpll
cmp
push
sahf
lods
jg
push
dec
xchg
fisttps
adc
adc
rsm
push
jle
adc
xor
js
inc
cmc
xor
mov
pop
popl
clc
loope
iret
sub
scas
fwait
xchg
cs
je
gs
test
imull
repz
mov
test
lock
or
ss
and
jbe
or
in
aaa
aas
stos
jb
cmp
cmc
aam
jmp
xchg
iret
mov
dec
mov
dec
adc
push
jne
out
jecxz
add
fimull
aaa
sub
fs
jle
push
int
cli
mov
sbb
mov
dec
lcall
out
addb
std
mov
push
mov
jle
lea
dec
loope
js
push
fisubrs
jecxz
and
push
inc
fs
mov
adc
sub
loop
out
inc
mov
cmp
mov
jne
stos
ss
stos
cmpl
inc
icebp
negl
ljmp
mov
out
nop
mov
push
stc
sub
xchg
or
and
mov
xchg
loope
pushf
adc
mov
or
lahf
lods
cltd
push
test
mov
clc
nop
xor
sub
lcall
fidivrs
pushf
in
test
adc
movsb
xchg
sbb
xorb
lods
aad
aad
jg
dec
sbb
daa
inc
sub
mov
into
sub
mov
lods
fildll
inc
popa
je
mov
mov
lret
lret
in
inc
int3
pop
fisubs
orl
inc
outsb
dec
sti
int3
repz
jecxz
mov
mov
test
test
pushf
out
and
sbb
mov
in
dec
cmp
cmpsb
mov
xor
cwtl
cmpsl
je
push
movsb
scas
pop
shlb
dec
push
or
cli
cmp
inc
push
jo
ss
cmp
mov
or
add
sti
dec
ss
pop
pop
les
push
cwtl
mov
inc
mov
sub
andl
jbe
cmp
add
sbb
jae
popa
inc
fnsave
mov
int
adc
bound
fbld
mov
in
inc
jg
mov
dec
push
insb
mov
imul
and
add
sbb
cmp
shlb
cltd
sub
mov
out
cmp
mov
mov
test
fildl
add
clc
shll
loope
movsb
push
cmpsb
enter
sub
adc
sbb
mov
xchg
pop
dec
cmp
fsubrs
movsl
adc
lea
or
cmp
cmp
push
icebp
stc
out
xor
mov
dec
mov
inc
dec
enter
pop
test
fcompl
cmp
xor
push
call
sbb
test
dec
or
dec
loope
and
mov
test
sbb
xlat
xchg
cmp
fucomip
popf
out
mov
xchg
push
sbb
pop
lods
aaa
ja
or
test
fadds
pop
jbe
cmc
and
mov
roll
popf
push
dec
mov
loop
add
mov
cmp
xchg
les
notb
rol
cli
or
inc
cmp
inc
lods
lret
xchg
cmc
popf
add
addl
lret
jae
fnsave
pop
push
mov
pop
shll
mov
ljmp
fcomip
add
int
jge
inc
test
ljmp
lret
imul
ja
insl
sti
adc
js
ja
pop
mov
lea
mov
add
pop
xor
imul
pushf
push
xchg
mov
outsl
sub
sahf
inc
lret
stos
mov
inc
mov
jg
addr16
or
lret
lret
or
push
jle
and
jnp
jecxz
sarl
add
xchg
movsb
mov
push
scas
fildll
or
cmpsl
enter
jo
push
popa
lret
hlt
test
jne
imul
arpl
push
adc
ja
pop
sub
push
mov
sub
xchg
ret
or
jmp
mov
mov
les
mov
imul
clc
std
shl
mov
into
xchg
sahf
mov
loope
pop
push
mov
dec
xchg
stos
fwait
aaa
mov
mov
daa
aaa
int
aaa
pop
outsl
xor
lret
fcmovne
xchg
mov
sarb
ret
fs
insl
ljmp
pop
push
jle
rcrl
sub
mov
xchg
cmp
pop
cld
cwtl
daa
in
loope
inc
cld
ljmp
insl
ret
pop
push
sub
lret
push
int3
ja
or
imul
movsl
loopne
sbb
xchg
repz
imul
popl
mov
mov
sub
xchg
inc
fdivrs
jp
push
movsb
mov
enter
stos
in
lods
cmp
dec
repnz
and
fistpl
mov
push
adc
cmp
out
adc
xchg
inc
dec
sub
test
cmpsl
mov
jle
call
mov
call
cmpb
es
fsubr
fnstcw
push
push
vpmaxsd
movlhps
cli
idivl
xor
mov
mov
out
stos
fcmovb
mov
pop
repz
and
shrb
mov
push
adc
outsl
sub
mov
sbb
movsl
fisubrs
or
mov
bound
addr16
fidivs
andl
add
in
ljmp
shl
jno
push
les
aam
out
jns
mov
and
jbe
das
pop
cwtl
push
inc
stos
in
add
add
repnz
rorl
cmc
outsl
add
pop
data16
scas
mov
dec
or
out
cwtl
xchg
inc
into
dec
sti
rclb
testb
ljmp
dec
mov
es
inc
push
das
adc
xor
and
sub
movsl
dec
test
mov
push
sub
mov
pop
lods
enter
mov
cmp
mov
lahf
push
inc
xchg
scas
bound
ljmp
icebp
out
mov
dec
mov
inc
cmp
inc
pop
ret
sbb
stc
mov
xor
dec
cmp
out
xchg
hlt
jbe
out
mov
mov
lret
popl
imul
or
gs
jne
scas
add
sahf
movsb
dec
or
mov
xor
pop
push
sti
xchg
test
push
cli
ss
xchg
addr16
cmp
xchg
xor
testb
fnstsw
xor
push
mov
mov
ljmp
dec
inc
mov
mov
movsl
popf
ja
mov
clc
sarl
jge
mov
jl
jns
fdivrl
cmp
xchg
mov
jb
cmp
add
inc
rcl
mov
lret
sahf
pop
add
lods
and
add
iret
loope
faddl
shll
rolb
and
fsub
insb
mov
jne
sbb
fistpl
mov
inc
leave
push
loope
je
outsb
clc
dec
loop
ss
repz
test
int3
clc
cmp
xor
sbbb
dec
adc
daa
leave
imul
jnp
sti
sub
popa
cltd
adc
mov
pop
arpl
js
stos
push
jge
je
push
ret
mov
les
das
or
mov
fsts
ret
adc
xlat
scas
add
xchg
pop
pop
pushf
cmp
pop
push
push
lea
int
sarb
inc
mov
ljmp
pop
jp
dec
sbb
push
push
aas
or
cpuid
mov
mov
mov
pop
aad
xlat
mov
mov
popf
jp
xor
adc
insl
mov
sti
xchg
icebp
andb
test
mov
in
push
cmp
add
dec
lcall
movsb
imul
jb,pn
aam
shll
cmp
in
mov
loope
hlt
aaa
insl
push
fwait
push
sbb
sub
mov
inc
lds
mov
arpl
pop
bnd
daa
xor
js
adc
sbb
cwtl
fwait
jg
call
jbe
mov
xchg
dec
inc
movsl
out
pop
jl
cmp
enter
xchg
dec
insb
stc
fs
imul
fsubs
sahf
outsl
dec
push
leave
push
insl
and
or
jle
btcl
incb
jnp
sbb
lret
fsubl
jae
mov
shl
jae
std
insl
and
and
xchg
enter
jl
cmp
std
xor
sbb
jg
mov
jle
addr16
push
jno
int3
jecxz
jae
scas
test
mov
pop
mov
push
push
in
inc
mov
sbb
subl
sahf
mov
mov
push
bound
les
pop
lods
push
es
sub
mov
pop
jmp
es
fmulp
xor
cld
or
xor
cld
daa
mov
inc
outsb
fsts
stc
and
stc
lea
mov
pop
push
sarb
jnp
mov
jb
rclb
les
cmpsl
push
repz
inc
aad
push
shlb
stos
das
fmuls
jns
mov
sahf
data16
fildl
mov
sub
mov
xor
jp
mov
gs
add
adc
sar
fs
add
xchg
movsl
mov
jb
lods
std
into
mov
clc
mov
test
rcrl
packssdw
jns
xor
pop
sbb
ds
imul
sti
pop
jp
pop
je
stc
in
jge
xchg
movsl
inc
or
jmp
xor
scas
lret
imul
cwtl
out
mov
pop
fnstenv
stos
stos
hlt
lcall
sub
jns
push
hlt
mov
sub
sub
sub
xor
dec
lcall
add
mov
fisubl
mov
sbb
aaa
xor
xchg
out
data16
mov
mov
push
sub
imul
sti
ret
cmp
shll
sbb
cmp
push
sub
je
rcr
dec
push
scas
xchg
xorps
mov
std
popa
push
sub
push
adc
call
mov
sbb
sbbl
sbb
pop
mov
std
cmp
ljmp
ja
stos
pop
sbb
fistpll
sbb
xchg
filds
lret
rcrl
lahf
inc
dec
lods
in
pop
jns
popf
scas
mov
aam
out
cs
scas
cmp
incb
cmpsl
std
cmpb
fsubrl
fcompl
sbb
mov
mov
shl
or
lock
dec
jmp
xchg
mov
xchg
out
mov
aaa
sbb
pop
stos
loope
fs
insl
xor
jo
inc
hlt
es
mov
imul
mov
pcmpgtw
fbld
sub
repnz
outsb
inc
jno
inc
dec
mov
shlb
cmc
cmp
test
mov
push
icebp
inc
pop
sub
sahf
rorb
in
jbe
and
sub
mov
out
add
add
or
test
loop
inc
in
sub
push
subb
aad
jle
in
mov
int3
mov
sbb
mov
cltd
adc
popf
push
fsubrl
xchg
and
movsl
in
ja
movsl
sbb
or
fildl
xor
imul
fsubr
jne
rorb
mov
sub
cmp
repnz
test
sub
notb
cld
fs
sti
fisttpl
cwtl
dec
fisubs
sub
jo
lock
mov
and
outsb
push
loope
push
dec
adc
xchg
iret
out
leave
jge
scas
push
xor
jmp
insb
add
adc
xchg
fistpll
leave
and
int3
loopne
and
push
out
stc
scas
out
mov
cmp
pop
outsl
in
add
stos
mov
into
or
lret
jb
popf
cmpsb
dec
add
mov
dec
sbb
mov
sub
mov
mov
or
push
add
outsb
sub
aas
movsl
xchg
mov
mov
loop
test
enter
mov
fimull
mov
adc
push
sub
inc
es
out
push
inc
mov
and
dec
mov
or
sbb
loope
jl
fsubl
test
cld
jbe
rcr
pushf
pusha
insb
jmp
fidivs
mov
push
repz
adc
mov
mov
dec
jae
dec
es
icebp
fcoms
adc
into
stos
pop
add
xchg
out
lcall
test
adc
lods
std
dec
frstor
into
adc
stos
push
pop
mov
xor
xchg
aam
push
add
xor
mov
loopne
jge
mov
pmullw
outsb
shll
fdivl
fistl
jge
cmp
push
rcrl
or
jno
mov
cwtl
fdivrl
insl
sub
pop
xchg
nop
inc
lds
aas
mov
jle
dec
or
mov
cwtl
inc
cltd
arpl
clc
inc
icebp
adc
lret
out
loopne
cs
add
je
mov
jnp
incl
pop
mov
jp
cmpsl
and
push
cwtl
lock
in
mov
cmp
inc
fdivrs
in
xchg
leave
sbb
push
sub
sub
lahf
xorb
fmuls
sahf
out
fwait
push
mov
push
bound
adc
push
scas
jecxz
xor
adc
rcl
clc
mov
xchg
sbb
fmull
mov
add
push
cs
test
adc
sbb
call
inc
hlt
fldl
dec
xor
adc
push
add
insb
in
outsl
mov
outsb
mov
pop
loope
and
imul
call
mov
std
mov
pushw
hlt
mov
testb
pop
cmp
test
loop
in
aam
cmp
and
sahf
mov
movsl
loope
mov
aas
test
push
stc
cmp
ja
gs
js
sub
shlb
daa
lret
dec
and
shl
xchg
cmp
test
fsubrl
nop
xor
ret
sar
out
orl
dec
cs
xchg
mov
lahf
lods
push
cmp
mov
xchg
divb
mov
popa
xchg
pop
cmc
sub
push
xchg
mov
push
jnp
push
push
outsl
arpl
insb
aaa
sbb
test
cmp
sahf
xor
stos
aam
movl
jo
repnz
dec
jae
roll
xchg
jb
gs
push
repz
shll
pop
pop
clc
test
enter
xor
rcrb
or
pop
mov
outsb
and
pop
add
dec
fcomip
inc
lods
outsb
test
and
adc
pushw
jns
mov
lret
movsb
cltd
inc
inc
ds
testb
sub
out
stos
call
dec
enter
out
sbb
hlt
mov
push
inc
inc
jl
das
stos
bound
push
mov
push
jl
in
push
ja
out
fyl2xp1
or
inc
les
in
xchg
int3
popf
mov
arpl
call
sbb
jmp
pop
sub
pop
push
add
inc
in
out
xor
insl
das
and
aam
lret
das
sahf
sahf
daa
dec
and
mov
andl
jmp
data16
xchg
mov
pop
pushf
out
ss
sub
sub
rorb
in
or
lds
nop
fs
mov
fists
add
jns
outsb
frstor
mov
in
mov
or
jp
sti
in
xchg
mov
xor
outsw
ret
out
dec
pop
xchg
or
fwait
mov
push
push
push
sub
jae
cwtl
jl
xchg
cmp
jmp
fcoms
test
aad
adcb
jo
lea
mov
and
stos
xchg
movsl
xlat
mov
div
inc
add
and
rdpmc
mov
dec
lods
mov
xchg
inc
mov
dec
jne
mov
rclb
ror
or
and
jnp
dec
filds
pop
sub
dec
scas
adc
jl
mov
outsb
dec
aam
nop
sbb
out
fsubs
cld
mov
in
clc
sbb
sbb
int3
std
into
mov
push
outsl
popf
inc
std
shlb
pop
test
xor
pop
sahf
cli
inc
jecxz
or
inc
aad
pop
and
push
outsl
dec
mov
mov
xchg
cmpsl
pop
rorb
out
mov
push
test
dec
icebp
mov
out
mov
mov
add
inc
pop
lock
push
dec
or
inc
mov
neg
pop
outsb
push
dec
sbb
call
cmc
mov
jg
lret
test
sub
cwtl
subl
xchg
rorl
cmc
es
jl
and
mov
mov
mov
scas
stc
and
out
test
test
jae,pt
xor
ret
jnp
sub
mov
xchg
testl
adc
daa
lods
jbe
stos
in
xlat
xchg
adc
dec
mov
mov
push
add
cmp
lahf
sbb
push
mov
ret
dec
xchg
sub
lds
out
and
sub
imul
dec
lahf
push
jle
mov
enter
add
xor
or
in
push
jge
mov
mov
arpl
pop
xchg
push
xor
mov
stc
je
adc
xlat
std
cmc
pop
and
pop
rclb
popa
adc
repz
js
clc
push
stc
pop
xchg
outsl
out
inc
insl
xchg
imul
jb
scas
sti
xor
xor
xorl
mov
insb
sub
jns
mov
loop
pop
int3
andb
adc
pop
sbbb
lret
aad
cli
push
jno
xchg
imul
push
xor
mov
les
ret
fadds
mov
test
movsb
loopne
pushf
dec
pop
pop
dec
push
repnz
pop
je
movsb
xchg
mov
add
mov
bnd
enter
movsb
movsb
notb
gs
inc
pop
xor
or
push
lods
xchg
pop
mov
je
jne
test
andb
sub
movsl
ss
lret
cmp
and
movsl
mov
je
lahf
orb
enter
jo
shll
or
mov
pusha
mov
pop
into
mov
insl
adc
pusha
ret
sub
mov
subb
xor
dec
mov
and
ljmp
jno
insb
lea
addb
aad
imul
mov
jo
adc
add
mov
sahf
jns
sub
je
add
push
push
cmp
ja
dec
mov
mov
xchg
adc
jo
jbe
pop
jno
imul
shl
inc
mov
xchg
in
ja
popf
pop
sub
mov
cmp
mov
cmp
push
jno
jo
push
fcoml
das
mov
iret
add
lock
push
sbb
inc
clc
popf
jp
cld
repz
ret
sahf
jl
int
dec
cmp
lods
ret
mov
mov
not
int3
sarl
sbb
inc
addr16
js
pop
ret
jl
loop
push
push
mov
pop
icebp
out
scas
outsb
movsl
dec
scas
es
ds
in
mov
mov
dec
pop
sub
shlb
ja
jno
cmp
fsubs
repnz
aad
andb
pop
inc
inc
lock
cld
push
pop
and
mov
dec
jb
cmp
notb
outsl
dec
lods
test
sti
jns
push
xchg
bnd
sti
enter
sub
sub
cmpsl
mov
pop
xor
inc
je
stc
cmp
pop
dec
fneni(8087
mov
and
xchg
and
sar
out
lods
sbb
rclb
loopne
push
push
pop
subl
fimuls
popa
and
or
push
jne
lods
addr16
mov
push
pop
jecxz
mov
cli
sub
inc
add
jbe
jp
ds
int3
adc
sub
cmp
sbb
es
dec
call
pop
popf
add
out
push
add
jne
add
jo
fstpt
lock
popa
mov
inc
leave
xchg
jne
push
xchg
lea
dec
aam
xchg
pop
testl
mov
jb
cmpsb
sub
mov
enter
loop
or
pop
mov
imul
jl
mov
adcl
mov
cmp
dec
jg
dec
sub
cmp
sbb
mov
pop
in
cmp
pop
sbb
push
call
in
sbb
adc
adc
fwait
dec
cltd
dec
int
scas
sub
cs
push
pop
xor
dec
jae
inc
jne
stos
mov
cmc
adc
adc
mov
and
xor
mov
repnz
imul
mov
mov
je
sub
lahf
insb
ds
pop
mov
mov
jmp
ficoml
mov
push
lahf
sub
cmpsl
pop
add
test
fdiv
clc
pop
ds
inc
sti
leave
aam
cmp
mov
mov
shl
sbb
out
lods
add
out
xlat
out
inc
int3
outsb
ret
push
shlb
fisttpll
xchg
or
gs
fbld
mov
xlat
clc
sbb
mov
mov
loopne
and
sbb
sub
cmp
jns
xor
test
cli
dec
xchg
mov
xchg
icebp
inc
jp
sub
dec
sub
jg
push
inc
imul
mov
cmpsb
push
mov
pop
lods
add
push
aas
cmp
int
xchg
push
lahf
ret
dec
addr16
sbb
pop
dec
cwtl
sbb
pop
lcall
in
rcr
subl
sbb
push
dec
mov
pushf
lea
or
or
pop
daa
jl
mov
push
repz
xchg
je
icebp
into
push
push
sbb
xor
jl
or
or
lahf
call
fwait
popa
arpl
jecxz
lea
sub
xor
es
dec
rolb
mov
out
popf
add
sub
mov
jle
jecxz
sbb
mov
sbb
test
or
imul
xor
cmpsl
mov
repz
hlt
ds
mov
in
add
inc
or
dec
in
and
testl
cmp
aam
jle
je
negl
filds
push
mov
jae
cmp
mov
sub
pop
fwait
add
jbe
imul
sub
loop
adc
mov
std
xchg
xor
push
iret
call
js
push
ret
cltd
addr16
sbb
push
jb
xor
sbb
insb
and
sarb
mov
mov
loop
sbb
ds
fwait
add
pop
mov
inc
mov
fldt
shlb
push
and
int
stos
fs
in
or
test
inc
add
ret
dec
testl
dec
imul
sbb
fcomp
sbb
ljmp
mov
divl
das
les
jle
sub
addr16
ja
outsb
lcall
inc
sti
cli
shrl
je
mov
inc
hlt
push
mov
xor
and
push
les
or
lea
out
mov
in
mov
ds
daa
out
cmpsl
test
adc
mov
or
test
and
and
pusha
push
cmp
mov
xchg
cmp
xchg
mov
lods
pop
xor
xchg
mov
push
adc
lods
scas
push
jo
or
add
stc
fcmove
rol
inc
sbb
sbb
sbb
push
jns
jmp
pop
shll
inc
adc
adc
or
dec
add
dec
es
sbb
and
into
inc
pop
inc
sarb
ss
mov
pop
add
jns
sbb
push
mov
mov
out
data16
scas
iret
jnp
adc
fiaddl
inc
daa
cmp
xchg
dec
loopne
jmp
dec
fimull
fnstsw
inc
inc
mov
sbb
scas
mov
les
repnz
xchg
in
enter
and
in
int
into
cli
cld
sbb
push
stos
xor
cmp
in
jge
add
jnp
adc
sub
ds
xlat
cmp
inc
callw
shrb
insb
fdivl
and
das
lea
or
sbb
aas
je
mov
cmp
lds
ds
push
or
mov
dec
cmp
ljmp
sbb
cwtl
cmpsb
mov
lahf
aam
clc
shlb
into
or
mov
shrl
mov
leave
add
and
push
inc
fs
sarb
mov
jge
jbe
roll
sbb
lock
adcl
xchg
faddl
xlat
adc
sub
mov
mov
gs
jge
adc
cld
dec
dec
stos
fmull
sub
setp
xor
sbb
ret
test
sbb
mov
addr16
dec
and
add
mov
shll
adc
addb
in
push
xchg
mov
sbbb
insb
sti
mov
push
dec
test
jmp
push
and
je
xchg
dec
fs
mov
pusha
xchg
nop
js
fbstp
imul
pop
outsl
lods
sbb
ret
pop
lods
and
mov
test
call
adc
je
nop
jns
and
loop
jns
stos
jbe
xlat
ficomps
lds
test
sub
push
dec
mov
int3
or
and
sahf
rorl
push
fstpt
mov
jge
xchg
enter
mov
sahf
or
pop
adc
shlb
and
int3
hlt
outsb
insb
fildll
inc
jl
dec
aas
aaa
push
sbb
gs
repnz
test
es
sub
and
sub
mov
mov
jmp
and
dec
adc
push
fsubs
add
jnp
cmp
sbb
sub
mov
push
mov
mov
out
or
push
inc
mov
xor
in
mov
cmp
js
lods
lcall
enter
fsqrt
xor
aad
jnp
mov
mov
bound
pop
gs
mov
mov
mov
push
cmpsb
mulb
push
or
addr16
and
inc
mov
jle
nop
pop
jmp
jmp
mov
cmp
out
inc
je
mov
popa
sub
adc
imul
rolb
pop
and
or
xor
ret
testb
pop
pop
mov
mov
mov
dec
ljmp
pop
or
out
imull
jp
push
sbb
mov
mov
movsl
jo
push
rcl
sbbb
ss
lods
mov
ja
or
lds
push
mov
pop
push
ljmp
stos
push
fildl
cs
xchg
cmpsb
cmpsb
jg
lods
pop
or
inc
mov
lcall
dec
lret
or
jo
cmpsl
push
fsts
test
jnp
jno
ja
sbb
int
push
xor
loope
pop
mov
cltd
and
xchg
push
cmc
sahf
sti
and
js
push
pop
movsb
sub
jge
or
push
push
cmp
leave
or
inc
adc
lods
test
loope
pop
fucompp
ljmp
jmp
sbb
pop
add
mov
ret
and
rorl
jge
mov
dec
leave
dec
mov
inc
and
jbe
movsb
pusha
fdivr
push
cmp
adc
dec
mov
pop
scas
jmp
push
jmp
adc
std
cmp
out
fwait
clc
shl
xlat
fwait
call
xor
adc
jb
popa
testl
in
dec
rcl
push
mov
lcall
pusha
jge
lds
xor
cmp
dec
mov
shll
jb
add
out
pop
xlat
loopne
cmp
out
push
shll
incl
mov
or
leave
or
jle
repnz
cli
or
add
xchg
aaa
dec
pop
imul
mov
rol
xchg
gs
mov
mov
pusha
mov
scas
adc
mov
clc
jmp
ds
scas
stos
cmp
sub
jmp
push
popf
pop
scas
inc
jecxz
in
shl
or
scas
test
xchg
push
or
mov
push
jg
inc
mov
dec
push
shlb
into
cmp
lcall
enter
cwtl
mov
or
jne
mov
bound
jp
sub
mov
xor
xchg
into
pinsrw
pop
cwtl
cmc
sub
hlt
enter
xchg
pushf
lcall
adcb
mov
nop
cmpsb
loop
in
insb
mov
or
push
xor
mov
cmp
sbbb
and
imulb
jnp
arpl
push
push
std
add
test
rorl
inc
shrb
xchg
lods
scas
push
xor
stc
repz
dec
or
pop
outsb
push
dec
sbb
push
dec
or
xchg
ret
dec
cmp
cmp
push
adc
rcll
je
mov
in
faddl
mov
cmpsb
xor
jae
xor
inc
mov
dec
faddp
xchg
add
pop
pop
cmp
out
and
mov
jns
cwtl
aad
xor
or
nop
xor
dec
mov
jmp
fwait
xchg
push
pop
mov
inc
dec
xchg
adc
sti
mov
mov
mov
mov
mov
idiv
xor
xor
xchg
orb
pop
dec
jle
and
mov
jbe
fidivrl
and
addl
lods
icebp
and
cmp
insb
sarb
ljmp
sub
push
mov
push
push
lods
mov
shlb
mov
mov
adc
sar
fsub
lock
pusha
xchg
sbb
mov
dec
cmp
call
imul
inc
lahf
mov
cmp
jnp
adc
lods
cli
mov
fsubrl
cmpsl
stos
fidivl
mov
pop
or
pushl
enter
add
or
or
movsl
sub
mov
mov
ret
cltd
xchg
repnz
sbb
in
xchg
iret
mov
and
subl
adcb
sub
out
call
clc
push
ror
push
mov
mov
arpl
inc
adc
pop
jg
mov
mov
outsb
clc
jge
cmpsl
jns
rorl
adc
mov
and
andb
lods
lahf
pop
icebp
jo
dec
cmpsl
aad
sbb
xor
inc
cmc
mov
mov
mov
push
iret
mov
idivb
sbb
dec
jns
mov
iret
aam
cltd
lret
jl
inc
cwtl
mov
inc
jle
call
xchg
rcl
mov
mov
sub
aaa
into
cld
pavgw
add
pop
scas
xchg
cmp
pushf
cmp
fcmovnbe
jno
int
rclb
mov
stos
inc
js
cmp
lahf
arpl
push
lods
mov
fstps
push
inc
jb
jmp
mov
sbb
cltd
icebp
repnz
in
je
xor
dec
jo
popa
ss
add
xor
mov
scas
stos
mov
subb
into
sub
adc
in
jmp
outsb
jne
test
loopne
out
sarb
shll
cwtl
inc
lret
mov
in
aaa
gs
push
stos
aaa
mov
cmp
mov
ljmp
add
dec
fdivl
stos
xor
sub
jne
gs
jbe
push
enter
and
gs
out
std
hlt
loopne
dec
addb
out
cmp
xchg
xor
lods
adc
adc
cmp
adc
inc
sub
add
test
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
mov
stc
add
cli
pop
add
push
stc
add
imul
add
stc
add
sbb
add
add
add
loopne
add
hlt
add
or
add
movsb
add
or
lods
clc
flds
cmp
popl
or
mov
add
jp
add
jne
sbb
xchg
add
add
add
dec
add
cmp
jge
jge
pop
add
mov
inc
add
or
fs
out
add
add
add
add
xchg
cmp
xor
dec
add
loope
add
ljmp
js
lea
rcr
add
lcall
shlb
movb
dec
cmp
mov
insb
push
add
dec
sub
dec
mov
add
dec
repnz
les
xor
xchg
add
push
push
add
loopne
cmpsb
jne
add
mov
add
inc
pop
add
fcmove
add
xlat
add
adc
add
mov
jne
leave
add
in
add
ret
sbb
sub
add
sbb
insb
add
mov
add
mov
add
int
mov
sub
add
loopne
add
repz
jg
stos
pop
cmp
jo
popa
add
mov
add
fidivs
add
jg
add
push
rolb
xor
pop
lock
add
jecxz
rolb
add
pop
popl
xor
add
int3
jmp
stc
mov
sbb
jnp
rolb
popf
inc
add
ja
add
add
add
xor
xor
pop
pop
xor
xor
sbb
sbb
cmp
cmp
adc
pop
pop
or
or
sbb
xor
xor
xor
adc
xor
xor
push
cmp
cmp
xor
pop
pop
pop
or
or
xor
xor
bound
bound
adc
xor
xor
xor
cmp
cmp
pop
pop
pop
or
or
xor
xor
bound
bound
adc
xor
xor
push
push
cmp
pop
pop
pop
and
and
pop
arpl
bound
inc
inc
inc
sub
xor
xor
xor
push
push
xor
xor
outsl
pop
and
and
pop
arpl
bound
inc
inc
inc
sub
xor
xor
and
and
xor
xor
adc
adc
and
xor
imul
xor
xor
xor
and
and
xor
xor
xor
adc
adc
and
xor
imul
xor
xor
xor
or
and
push
push
push
xor
xor
adc
pop
pop
jo
xor
popa
popa
popa
sbb
xor
xor
xor
or
or
xor
xor
push
push
pop
pop
jo
xor
popa
popa
popa
sbb
sbb
xor
xor
outsb
outsb
outsb
outsb
and
xor
aas
push
push
push
push
imul
popa
popa
popa
sbb
sbb
sub
xor
outsb
outsb
outsb
outsb
and
xor
aas
push
push
push
push
imul
xor
sbb
pop
pop
pop
sub
sub
outsb
outsb
outsb
outsb
xor
xor
cmp
push
imul
xor
add
add
sub
sub
sbb
dec
xor
sysenter
inc
push
push
push
aas
xor
xor
xor
add
add
pop
pop
pop
xor
jno
sbb
dec
xor
sysenter
inc
push
push
push
xor
xor
xor
or
add
add
pop
xor
jno
jno
daa
dec
dec
dec
inc
push
push
push
push
push
push
push
xor
xor
xor
and
add
add
xor
dec
dec
jno
daa
daa
daa
insb
xor
push
push
push
push
xor
inc
inc
xor
xor
xor
and
and
xor
xor
dec
xor
daa
daa
daa
xor
inc
push
push
push
push
xor
push
push
xor
xor
xor
and
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
xor
push
push
ds
xor
and
cmp
inc
inc
xor
xor
xor
xor
sub
sub
push
push
cmp
je
dec
xor
sub
inc
xor
xor
xor
xor
sub
sub
push
push
push
push
push
ds
das
xor
sub
xor
xor
inc
inc
inc
add
sub
sub
xor
adc
push
push
push
xor
xor
das
xor
xor
xor
gs
xor
inc
inc
inc
add
add
or
dec
dec
adc
push
push
cmp
xor
das
das
xor
xor
aaa
dec
dec
dec
dec
xor
inc
inc
inc
add
add
or
dec
dec
adc
push
push
cmp
add
xor
xor
dec
dec
dec
dec
xor
inc
adc
adc
or
or
sub
jb
sbb
sbb
xor
pop
pop
dec
dec
dec
dec
xor
xor
adc
and
adc
sub
dec
xor
dec
dec
dec
sbb
cmp
xor
pop
pop
jae
dec
dec
dec
push
adc
pop
pop
fs
xor
dec
dec
dec
sbb
cmp
xor
pop
pop
jae
jae
push
xor
pop
fs
cs
dec
dec
dec
sbb
cmp
xor
pop
pop
jae
jae
push
xor
pop
pop
pop
pop
or
pusha
cs
dec
dec
dec
xor
insl
insl
add
xor
jae
jae
data16
push
push
push
pop
pop
pop
pop
or
pusha
cs
xor
insl
insl
add
xor
xor
pop
pop
data16
push
push
push
inc
xor
ss
pusha
dec
dec
dec
sub
dec
dec
xor
xor
xor
or
data16
push
push
push
inc
xor
ss
pusha
dec
dec
dec
sub
dec
dec
xor
xor
xor
or
data16
push
push
push
inc
xor
xor
xor
xor
dec
dec
xor
xor
xor
test
add
adc
add
add
and
add
add
add
test
add
add
