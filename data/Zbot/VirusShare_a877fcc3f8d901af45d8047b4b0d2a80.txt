add
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
add
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
jmp
ret
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
add
in
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
xor
xor
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
fisubs
add
repnz
add
add
pushf
and
add
and
add
and
add
add
shlb
add
add
cld
and
add
and
add
add
mov
and
add
and
add
and
add
add
add
add
add
and
add
loop
add
push
and
add
add
scas
and
add
and
add
add
into
and
add
add
add
add
and
add
add
add
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
dec
and
add
add
add
and
add
and
add
add
pushf
and
add
and
add
and
add
add
shlb
add
add
cld
and
add
and
add
add
mov
and
add
and
add
and
add
add
add
add
add
and
add
loop
add
push
and
add
add
scas
and
add
and
add
add
into
and
add
add
add
add
and
add
add
add
add
and
add
add
add
insb
jae
jb
outsb
inc
add
mov
jo
outsb
fs
push
add
add
popa
jo
jb
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
gs
popa
insb
jne
add
add
outsb
fs
je
insl
inc
add
gs
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
imul
je
imul
push
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
movb
gs
jne
jb
outsb
je
push
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
imul
jb
je
arpl
adc
push
gs
insl
gs
push
add
push
add
je
jb
arpl
jae
gs
imul
outsl
popa
fs
imul
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
gs
inc
imul
dec
inc
dec
xor
cs
insb
add
push
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
inc
inc
inc
push
push
cs
insb
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
xor
add
or
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
or
add
addb
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
lcall
jge
add
jp
lods
lods
stos
add
cmpsb
push
mov
mov
mov
ret
leave
lret
lret
lret
into
rcl
in
rcl
shl
rcl
shl
int3
int3
into
hlt
leave
leave
leave
repz
leave
enter
in
mov
mov
lods
lods
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
lret
lret
leave
not
rcl
cld
fcom
std
xlat
xlat
fcomp
xlat
aad
aam
iret
iret
iret
dec
into
into
aad
aad
ror
sar
ret
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
rcl
aam
xlat
xlat
call
xlat
call
aad
dec
int3
int
int3
into
into
call
aad
dec
into
int
rol
mov
mov
scas
std
test
cmpsb
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
pop
add
push
or
inc
or
sbb
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
enter
int
rcl
sar
fcom
xlat
fcomp
call
dec
into
into
dec
lret
lret
into
int3
inc
mov
sarl
pushl
cmpsb
test
mov
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
imul
pop
pop
pop
fs
push
sbb
sub
aaa
ss
cmp
and
adc
push
pop
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
dec
leave
dec
iret
iret
call
aad
call
aad
dec
rcl
dec
enter
ret
ret
mov
mov
ljmp
movsl
movsb
pushf
sahf
sahf
xchg
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
jno
jge
jle
jge
jge
jo
jo
popa
bound
dec
push
dec
xchg
cmp
cmp
pop
pop
pop
stos
jo
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
leave
lret
enter
ret
ret
mov
mov
scas
scas
scas
jmp
cltd
call
xchg
xchg
xchg
xchg
cltd
lcall
ds
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
jo
outsl
add
pop
or
jp
xchg
mov
incb
jnp
jl
jp
outsb
outsb
outsl
out
push
fdivs
jne
jg
jle
jns
js
arpl
inc
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
nop
incl
test
xchg
xchg
xchg
sahf
lahf
lahf
sti
mov
xchg
xchg
mov
jp
js
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
lahf
fwait
popf
in
mov
mov
addb
decb
mov
jle
jle
jb
jo
jne
je
jle
jle
test
jp
addr16
cmp
es
push
jle
jge
lcall
shrb
stos
lods
sti
stos
lods
lods
lods
lods
lods
stos
stos
stos
std
movsb
movsl
movsb
std
cltd
lcall
mov
jle
jp
jns
jp
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
mov
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
cltd
cltd
lcall
cltd
lcall
mov
xchg
mov
lea
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
lods
cmpsl
lods
add
adc
cmpsl
lods
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
popf
sahf
sahf
std
movsl
mov
mov
in
nop
nop
nop
in
test
push
jne
cmovp
or
inc
sub
sub
dec
dec
data16
jno
xchg
xchg
rclb
xchg
std
mov
call
mov
test
lods
test
lods
pushl
lahf
scas
mov
mov
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
mov
jmp
popf
cwtl
pushf
decl
mov
call
xchg
xchg
xchg
xchg
popf
pushf
popf
mov
test
movsl
negl
jl
movsl
push
push
push
outsl
dec
dec
dec
pop
popa
bound
jb
mov
jg
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jg
mov
jbe
mov
movsb
mov
mov
mov
lods
stos
lods
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
xchg
call
xchg
xchg
call
xchg
fwait
fwait
cltd
lcall
mov
movsl
mov
out
nop
xchg
xchg
xchg
les
cltd
lcall
xchg
cmc
mov
nop
cld
xchg
jg
std
xchg
jb
cltd
addr16
mov
dec
jg
stos
inc
jl
mov
jnp
mov
jae
mov
outsb
ljmp
adc
stos
or
lods
or
mov
jle
mov
mov
stos
pushf
movsl
mov
mov
add
pop
pop
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
popf
jmp
sahf
pushf
lcall
xchg
xchg
decl
cwtl
xchg
call
xchg
lcall
cltd
sahf
stc
lahf
xchg
sahf
cld
popf
mov
xchg
push
xchg
pop
jle
xchg
dec
jp
fwait
cmp
fwait
sub
popf
push
imul
mov
adc
ljmp
packuswb
lods
adc
lods
adc
mov
imul
mov
insb
mov
cltd
scas
mov
scas
lods
scas
movsl
movsl
movsl
sub
movsb
movsb
movsl
add
pop
pop
adc
mov
ljmp
pushf
call
popf
lcall
mov
movsb
jmp
xchg
cwtl
decl
mov
mov
xchg
xchg
ja
lcall
xchg
push
jnp
xchg
jo,pt
nop
cs
decl
adc
nop
or
call
add
lcall
ljmp
sbb
pushl
push
jo
mov
outsb
mov
and
mov
and
rolb
ret
xchg
scas
mov
scas
scas
mov
mov
movsb
mov
add
add
add
pop
pop
adc
lods
mov
mov
cltd
pushf
lcall
movsl
movsb
jmp
cmpsl
cmpsb
ljmp
cmpsb
cmpsl
lcall
mov
mov
decl
cmp
mov
popa
decl
pop
incl
add
push
decl
add
xchg
add
xchg
add
lcall
ljmp
pop
jo
mov
jbe
mov
sub
mov
sub
les
jge
enter
leave
das
cmp
inc
mov
enter
mov
mov
lret
movsl
dec
mov
movsb
movsl
add
push
adc
test
ljmp
popf
jmp
test
ljmp
stos
lods
pushl
lods
scas
jmp
jno
decl
or
incl
or
add
test
push
incl
push
incl
add
popl
push
call
pop
jmp
add
scas
adc
mov
aaa
cmp
cmp
lret
cmp
iret
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsb
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsb
test
scas
scas
lods
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
sbb
les
test
lret
inc
dec
inc
call
inc
call
dec
mov
dec
xchg
call
dec
xchg
fisttpl
fisttpll
fistl
call
test
std
mov
mov
movsb
mov
lahf
or
add
add
add
add
dec
dec
adc
jnp
mov
cmpsl
scas
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsl
decl
sbb
call
adc
pop
decl
add
popl
pop
call
add
mov
add
stos
add
mov
gs
and
nop
call
push
cltd
call
push
fwait
fistl
fistpl
jmp
pop
pushf
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
test
jne
lahf
sahf
or
xchg
xchg
xchg
add
adc
js
sahf
fwait
sahf
jmp
lahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
je
xchg
pop
arpl
xchg
and
callw
sbb
xchg
or
nop
add
xchg
add
fwait
add
mov
add
stos
add
mov
fs
mov
xor
call
pop
fwait
fisubl
fbld
jmp
mov
jmp
fs
out
cmpsl
call
data16
ljmp
dec
mov
mov
mov
lahf
lahf
add
inc
aas
adc
je
fwait
xchg
lcall
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
lcall
call
sbb
pop
call
add
mov
add
lods
add
mov
pushl
adc
roll
jmp
outsl
stos
jmp
jno
jmp
jno
jmp
je
jmp
mov
out
jbe
out
jbe
out
jb
jmp
mov
mov
test
lcall
sahf
add
add
cmp
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsb
scas
lcall
xor
lahf
aaa
jne
mov
xor
fwait
push
call
add
lahf
add
movsb
add
add
mov
pushl
add
sbb
fistl
in
mov
jmp
jg
in
jg
out
cmpb
lock
repnz
ljmp
mov
stos
test
daa
mov
sahf
lahf
add
add
add
popa
add
aaa
cmp
pop
pusha
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
inc
mov
jmp
cmp
inc
jge
mov
aaa
jbe
lcall
lcall
pop
ljmp
add
mov
gs
mov
add
iret
es
movsl
call
mov
repnz
sar
pop
push
pop
push
xchg
ret
push
nop
clc
xchg
clc
ret
out
nop
sar
mov
inc
ret
stos
lods
test
xor
popf
popf
add
add
add
aas
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
xchg
pushl
mov
inc
sarb
ret
ret
ret
mov
jge
lcall
jg
lods
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
xchg
push
fwait
push
lcall
negb
enter
int3
cli
popf
int
cld
popf
into
cli
cltd
lret
push
xchg
ret
mov
dec
mov
mov
sahf
sahf
sahf
aas
xchg
add
add
add
xor
outsb
dec
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
inc
mov
enter
mov
lahf
lcall
push
xchg
scas
push
xchg
movsb
sub
fwait
push
pop
lcall
add
lods
add
mov
arpl
mov
add
leave
add
rorb
jne
loopne
xchg
out
lea
push
cmpsb
int
mulb
int
cli
test
sar
cld
test
iret
std
stos
sar
cld
test
push
popf
mov
dec
leave
int
mov
mov
sahf
sahf
lahf
dec
xchg
xchg
xchg
add
cltd
lcall
xor
daa
sub
or
bound
pop
xlat
je
jb
mov
rol
rol
mov
ret
ret
inc
ret
ret
inc
inc
leave
inc
rol
mov
cmpsb
jmp
mov
scas
dec
test
sahf
sbb
pop
jmp
arpl
mov
fs
mov
add
into
add
fadds
jae
ficoms
jnp
in
pop
cmpsl
push
popf
lret
sti
scas
aam
sti
scas
cld
scas
aam
cli
scas
sar
std
mov
std
mov
std
mov
cld
mov
pushl
sar
mull
leave
int3
mov
mov
mov
xchg
xchg
or
add
add
xor
add
sbb
dec
outsl
jo
mov
xlat
jmp
fcom
test
int3
int3
dec
leave
lret
dec
lret
lret
leave
lret
inc
enter
lahf
lods
jmp
push
mov
lods
jge,pt
mov
add
stos
add
mov
arpl
mov
add
rolb
jo
xlat
add
add
call
jb
cli
lods
aam
mov
fcos
std
mov
fcos
cld
mov
xlat
mov
xlat
inc
mov
lret
jmp
mov
call
leave
int
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
leave
movl
jmp
out
loope
loop
fucom
fdivr
xlat
fdivr
int
sar
mov
imul
jmp
add
mov
arpl
mov
add
leave
add
add
fildl
ja
in
ja
in
xor
sti
mov
loopne
inc
loope
std
inc
std
enter
std
leave
fdivrp
inc
std
lret
loopne
sti
mov
enter
sar
mov
mov
xchg
adc
add
add
std
incb
incl
incb
repz
testb
out
in
pop
jmp
in
sub
in
in
dec
call
jmp
out
jecxz
out
fcmovu
fsubr
ret
stc
lods
jno
cmpsl
cmp
mov
add
ljmp
add
add
lds
push
into
add
fadds
jb
loopne
js
ljmp
cli
mov
in
dec
jecxz
dec
in
dec
in
dec
loop
dec
loope
dec
loop
std
iret
loop
dec
jecxz
std
shl
shl
sti
ret
fdivr
in
mov
fdivr
ret
ret
ret
out
cmpsb
test
mov
xchg
xchg
add
add
add
std
add
std
add
clc
testb
hlt
repnz
repz
push
out
repnz
pop
out
repnz
cmp
out
out
pop
fsubp
loop
mov
xchg
sti
mov
pop
pop
jmp
add
mov
inc
add
leave
add
add
fildl
jne
in
jp
jmp
jle
negb
cld
mov
std
iret
in
cld
iret
jecxz
call
out
std
shr
std
shl
std
out
call
call
fucomi
std
fucomi
shl
push
aam
jecxz
fcos
leave
lret
stos
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
stc
add
cli
cli
add
div
or
aam
xor
mov
xchg
negb
add
test
pusha
ljmp
add
les
addr16
add
roll
jb
fldl
jbe
call
sbb
sti
ret
loopne
cld
xlat
jmp
fucomi
fucompp
fsubr
fucomi
std
fucomi
fsubrp
std
loopne
fucomip
shl
push
aad
out
fdivr
ror
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
add
loopne
add
mov
xchg
stos
jge
repnz
and
mov
add
mov
mov
add
into
add
aam
jb
loopne
je
ljmp
cli
nop
std
shl
std
fucomip
fucomp
fucompp
fucomi
out
std
in
shl
sti
shl
cli
shl
stc
int
clc
int3
fdivr
test
out
mov
xlat
xlat
sti
mov
mov
fwait
fwait
cltd
cmp
lcall
mov
mov
add
mov
mov
jmp
add
mov
arpl
mov
add
roll
outsl
fadds
je
loopne
jp
ljmp
cli
xchg
cli
enter
lret
loope
cli
fdivrp
clc
mov
aam
repz
iret
push
mov
into
ljmp
call
rcl
ljmp
cmc
fsubp
fucomip
mov
mov
xchg
add
add
add
int
add
mov
movsl
loopne
xor
pop
ljmp
add
mov
add
into
pop
jb
rorl
jbe
fisttpl
ja
loop
cmp
dec
xchg
call
scas
lret
call
mov
std
loope
cld
loopne
ret
mov
neg
mov
enter
int3
in
lret
fmulp
xlat
shl
fadd
out
loope
in
out
test
out
lock
jmp
lret
stos
stos
lods
adc
test
cmpsb
add
ret
mov
lahf
stos
aam
dec
jg
pushf
sbb
cmpsl
push
insb
scas
and
mov
js
mov
inc
test
ret
push
mov
lret
gs
mov
shlb
rcl
ror
aad
int3
rcl
int
int
mov
xlat
rcl
jg
fcmovu
jb
loopne
gs
in
call
in
jmp
icebp
div
sub
cmc
mulb
repnz
lock
fcmovnu
or
mov
into
add
add
add
rol
mov
mov
les
insb
mov
stos
jne
ljmp
mov
sarb
test
mov
mov
cmpsl
mov
enter
int
iret
int
addr16
iret
push
rcl
rorb
xlat
aad
rcr
aam
aam
fldenv
fcomp
ficompl
fcmovu
ficoms
fsub
loope
jecxz
out
jmp
in
icebp
out
add
cli
cmc
add
std
add
incl
std
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
xor
int
daa
int
into
and
rcrb
rcl
rcll
iret
aam
or
aad
rcr
add
add
loopne
add
in
add
jmp
add
xlat
aam
incb
mov
mov
add
rol
mov
mov
mov
mov
push
ret
or
leave
movl
enter
lret
add
fcom
add
aam
aad
add
xlat
add
fabs
add
aad
add
loope
add
add
in
add
repnz
add
std
add
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
ret
mov
mov
mov
ja
stos
stos
dec
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
mov
aam
ror
jmp
aad
cmc
aam
sar
into
ror
cli
int3
int3
int
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
aas
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
into
xlat
xlat
aad
xlat
xlat
xlat
call
ror
dec
int
dec
lret
int3
inc
sarb
stos
lods
stos
icebp
xchg
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
je
jne
fs
dec
inc
dec
cmp
sub
sub
ss
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
int3
call
rcl
call
rcl
dec
lret
mov
sar
mov
ljmp
lahf
popf
cwtl
cwtl
xchg
jmp
jno
xchg
push
pop
push
dec
add
add
add
add
add
add
addl
subl
imul
push
push
push
stos
push
insl
insl
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
mov
sar
mov
mov
mov
mov
jmp
pushf
lcall
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
fwait
fwait
add
popf
xchg
cltd
fcoml
addb
jge
jge
jns
jp
jp
jp
jns
jp
je
je
push
push
push
cmp
je
popf
popf
popf
mov
scas
scas
repz
scas
scas
sti
scas
scas
scas
std
test
test
sahf
sahf
popf
call
xchg
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
cmpsb
cltd
je
jae
adc
adc
add
add
add
add
insl
outsl
outsb
pop
xchg
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
pop
pop
inc
inc
inc
inc
dec
outsl
outsl
outsl
orl
lcall
lea
call
sahf
popf
ljmp
scas
std
mov
scas
mov
xlat
cmpsl
movsb
cmpsl
pop
cmpl
add
add
add
popa
or
scas
mov
movsl
sahf
mov
decl
lcall
popf
sahf
sti
mov
lcall
push
push
push
jo
pop
pop
outsl
imul
jle
subl
nop
mov
lcall
popf
pushl
outsl
xchg
mov
push
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
pusha
or
mov
in
mov
nop
call
cwtl
call
lcall
pushf
sahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
pop
jg
popf
dec
jp
movsl
inc
jns
lods
aaa
js
mov
jb
mov
insl
pushl
sbb
mov
mov
scas
scas
jle
movsb
mov
add
add
add
pop
or
mov
in
movsb
test
lcall
mov
mov
decl
orl
xchg
jb
cld
xchg
popa
test
xchg
dec
js
cmp
xchg
daa
push
call
or
push
pushl
sbb
mov
and
pop
xchg
mov
scas
scas
xchg
popf
lahf
lahf
adc
add
add
popa
pusha
pop
or
lods
mov
test
mov
test
stos
test
test
lcall
decl
sub
pop
pop
decl
or
mov
call
add
fwait
add
cmpsb
or
mov
jb
mov
jge,pn
lds
jg
leave
das
jg
leave
xor
cwtl
inc
test
mov
cmpsl
cmpsl
cmpsl
sbb
add
add
popa
pop
pop
or
movsl
test
test
cmpsl
ljmp
scas
scas
pushl
mov
jmp
aas
jo
mov
pop
decl
or
add
decl
add
xchg
add
mov
add
mov
insl
inc
aaa
cmp
inc
mov
iret
inc
mov
rolb
call
inc
xchg
flds
call
arpl
stc
mov
mov
mov
incb
add
add
pusha
popa
popa
or
popf
mov
ljmp
mov
mov
mov
ljmp
push
jnp
nop
sbb
decl
or
decl
add
lahf
add
add
scas
add
mov
dec
nop
fsts
fistpl
jmp
pop
sahf
jmp
pop
mov
fildll
dec
cmpsl
mov
ret
cmpsb
xor
addl
dec
dec
dec
pop
jl
jp
popf
xchg
cltd
jecxz
mov
scas
pushl
mov
mov
lcall
cs
lcall
and
xchg
subps
xchg
add
sahf
add
cmpsl
add
mov
arpl
mov
imul
jmp
insb
stos
jmp
jo
ljmp
out
jae
jmp
jns
call
test
std
mov
cmpsl
test
add
add
add
dec
pop
outsb
insl
imul
test
cltd
cltd
xchg
pushl
mov
mov
mov
je
lcall
cmp
pushf
sub
xchg
or
pushf
add
movsb
add
lods
add
mov
fs
or
xlat
inc
xchg
jmp
js
jmp
mov
push
test
push
xchg
mov
push
fwait
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
rol
ret
mov
mov
ljmp
sub
fwait
push
pop
jmp
add
mov
fs
mov
push
jbe
fbld
in
pop
push
xchg
push
cwtl
cltd
enter
lret
lcall
loop
inc
mov
stos
popa
lahf
lahf
mov
add
xor
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
mov
cmpsl
jmp
dec
cmp
pop
insb
lcall
add
mov
fs
mov
add
fldenv
cmp
jl
push
mov
iret
clc
test
cld
test
iret
lods
sar
stc
cmpsl
lret
jmp
mov
dec
rol
stos
test
pushf
or
add
add
push
dec
dec
aaa
je
jb
stos
stos
test
out
iret
int3
cmc
leave
lret
lret
sti
lret
std
leave
mov
pusha
ljmp
adc
test
pop
pushl
add
iret
add
flds
jne
call
xchg
mov
std
mov
fcos
cld
mov
mov
sar
jmp
enter
repz
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
jecxz
fsubp
fistps
fcmovu
fsubr
mov
addr16
test
or
mov
popa
mov
add
add
jecxz
jp
icebp
dec
mov
std
inc
loop
inc
loopne
inc
loopne
dec
loopne
dec
loopne
cld
out
mov
leave
divb
pushf
sahf
sbb
add
add
incl
incl
jmp
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
pushl
add
iret
add
fldl
jne
call
insl
mov
sti
sti
shl
call
out
shl
std
shl
xlat
out
std
xlat
call
push
fdivr
fcmovne
sar
mov
mov
add
std
add
incb
std
incb
aam
push
mov
pop
xchg
sahf
or
ljmp
add
lds
imul
fiadds
jbe
out
and
shl
fldpi
fldl2t
std
xlat
out
sti
xlat
out
std
xlat
out
std
aad
push
enter
rcl
sti
mov
sahf
popf
das
add
add
int
int3
or
bound
lods
add
mov
add
roll
jae
loope
js
out
xor
sti
lret
loop
cli
lret
cmc
repz
xlat
repz
out
ret
in
in
aad
in
shl
in
fsubr
leave
stos
test
das
std
std
add
add
add
push
mov
jae
or
insb
inc
sbb
lret
and
aad
test
ficoms
clc
loop
mov
out
in
lret
jmp
fdivrl
lret
sarb
in
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsl
les
push
mov
mov
fidivrl
jg
rol
stos
mov
mov
ret
nop
aam
leave
jge
int3
insl
aad
int
rcl
iret
dec
fcomp
fdivrs
fisubrs
in
frstor
loop
lock
in
jmp
fcmovu
faddl
std
incb
std
incb
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
xor
leave
enter
rclb
rol
adc
rcl
or
or
into
int
stos
stos
lods
add
incl
std
incb
cltd
cltd
lcall
mov
sarl
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
leave
mov
ret
mov
scas
mov
insb
stos
lods
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
lods
add
mov
jmp
aad
std
rcl
sar
int
int
mov
mov
test
jle
gs
sbb
add
add
add
add
add
add
add
add
jae
jae
addr16
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
int3
call
aam
dec
into
iret
inc
mov
mov
scas
lods
jmp
mov
push
add
add
add
add
je
jne
test
adc
bound
mov
data16
outsl
outsl
outsb
jb
popa
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
xchg
xchg
lds
jno
es
add
add
add
jb
jb
pushf
xchg
pushf
mov
xchg
xchg
xchg
test
test
push
dec
push
inc
mov
fwait
into
mov
mov
xchg
decb
mov
fwait
fwait
fwait
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
mov
xchg
xchg
xchg
cld
sahf
sahf
popf
cmc
cltd
cltd
cwtl
in
test
push
imul
jle
mov
xchg
testl
xchg
mov
jb
mov
lods
scas
push
stos
stos
stos
add
add
add
mov
scas
test
cld
xchg
xchg
xchg
call
cltd
fwait
lcall
lcall
xchg
mov
loope
jbe
out
xchg
fs
push
jp
lcall
ljmp
and
mov
outsb
pushl
popf
lods
lock
mov
imul
into
add
xchg
pop
scas
cmpsb
lods
test
lahf
sahf
popf
jmp
movsl
call
jl
mov
xchg
inc
jb
mov
imul
nop
adc
xchg
or
mov
sbb
je
mov
daa
jns
ret
ds
rcrb
subl
jae
push
movsb
pushf
lahf
test
test
mov
pushl
mov
decl
or
xchg
push
decl
add
mov
adc
ret
dec
inc
mov
iret
inc
mov
aad
call
dec
xchg
dec
cwtl
mov
mov
mov
movsb
mov
add
imul
test
mov
lods
pushl
mov
movsb
call
pop
call
pop
push
call
add
stos
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
data16
call
pushf
mov
mov
cmpsb
test
add
add
arpl
adc
sahf
fwait
lcall
mov
mov
lcall
xor
cwtl
and
call
add
stos
add
mov
dec
xor
jmp
jl
out
jge
push
jge
fistpl
mov
mov
add
add
dec
adc
imul
mov
mov
mov
ret
ret
mov
jmp
inc
jge
lahf
and
pop
jmp
add
pop
outsb
fisttpl
out
mov
push
xchg
push
xchg
leave
stc
xchg
enter
inc
mov
movsl
sub
aas
inc
inc
adc
push
xchg
mov
mov
inc
sarb
ljmp
sbb
cmpsb
add
mov
fs
add
aad
jns
jmp
scas
clc
cmpsb
iret
clc
stos
sar
cli
lods
sar
sti
lods
sar
lods
sar
jmp
enter
rcr
cmpsb
cmpsb
ds
incb
xor
xor
scas
mov
mov
aam
mov
aam
rcl
out
lret
cli
mov
mov
jmp
arpl
les
imul
add
call
pop
cld
mov
cld
rcr
inc
fdivr
std
ret
out
mov
shl
test
dec
addl
stos
add
in
jmp
call
jmp
in
fcomp
fldenv
movsb
and
pop
mov
add
add
out
aaa
xchg
sti
mov
std
into
in
std
shl
shl
call
in
aad
push
enter
int3
in
lods
scas
scas
popa
addl
add
std
incl
std
incl
int3
int
sub
mov
add
mov
add
loope
js
cmc
push
cmpsl
inc
loop
std
xlat
jmp
std
aad
sti
shl
cli
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
mov
cld
lods
add
insb
call
push
jne
ficomps
jg
jmp
lods
cld
out
mov
aam
jmp
ror
jmp
lret
rcl
call
scas
cltd
lcall
mov
popf
stos
xchg
dec
and
push
mov
ret
int3
lret
mov
mov
lret
adc
into
outsl
xlat
int3
rcrb
rcl
dec
in
loope
out
out
out
out
out
sbb
rol
add
mov
scas
arpl
mov
ret
mov
les
int
fstp
fisttps
into
int3
int
aad
push
std
incl
addl
add
lods
incb
mov
std
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
push
sbb
popf
mov
lods
jbe
aaa
dec
or
jo
ret
xchg
lahf
mov
aas
cwtl
mov
sub
cmp
mov
push
das
adc
arpl
xchg
xor
imul
mull
into
sub
in
jno
es
add
rorb
xchg
psubw
lret
shll
adc
pusha
push
lahf
aaa
testb
movsb
adc
aaa
aaa
loopne
jno,pt
scas
mov
out
test
aad
mov
pop
inc
push
add
sbbb
shll
push
mov
sub
lods
cmp
lock
pop
cmpsl
ret
push
pop
ficoml
int
xchg
loope
out
xlat
std
add
xchg
daa
scas
jl
ret
insl
sarl
test
int3
aad
add
incl
sbb
ljmp
xor
push
sub
adc
mov
xchg
cmpxchg
fisubs
stos
andl
cs
mov
mov
xchg
add
mov
jecxz
xchg
sub
sub
decl
loope
pushf
cli
fs
xor
js
popf
gs
pusha
mov
mov
push
add
sahf
dec
test
imul
dec
insb
inc
fidivrs
mov
xchg
jecxz
pop
add
push
pop
cltd
inc
pop
dec
imul
int
adc
add
pop
rclb
jb
sbb
roll
cmc
jo
xor
sub
stos
sub
xchg
cmp
cmp
lods
sbb
sbb
or
sub
mov
into
push
push
xchg
insb
or
pop
push
pop
push
stos
ss
pop
inc
inc
pop
sub
pushf
fwait
mov
popf
out
in
push
cli
jb
sub
mov
add
mov
repnz
xorb
cmpsb
pop
ss
pusha
xlat
sub
and
push
popa
cmpsb
cmp
int
aad
add
addl
mov
addr16
dec
push
and
and
dec
mulb
dec
mov
mov
pop
dec
addr16
xor
aam
cmc
xorl
into
lods
push
lcall
inc
jg
lds
fs
faddl
enter
and
loopne
outsb
shll
out
imul
ss
cmpsl
icebp
mov
pop
adc
int
lret
rorb
ret
push
lret
scas
mov
or
out
insl
cs
ret
xchg
shll
or
fs
dec
jle
or
outsb
jmp
xor
ss
ret
xor
fists
loopne
or
jecxz
or
aas
sti
loop
andl
push
add
inc
adc
lcall
cmp
xchg
inc
add
pusha
in
xchg
in
mov
mov
testb
test
push
adc
clc
loop
icebp
ja
in
mov
jne
aam
add
pop
inc
adc
push
test
push
xchg
inc
je
loopne
sub
jbe
xor
jne
insl
roll
or
divb
push
test
cs
jmp
pusha
repnz
in
js
in
sub
add
xor
adc
cli
idivb
pop
test
and
jecxz
sbb
loope
ds
int
fisubl
mov
mull
adc
pop
dec
pop
push
test
and
in
mov
scas
es
pop
adc
test
loope
insb
iret
push
ja
js
inc
and
mov
cmp
lcall
in
lods
mov
ret
inc
sbb
inc
jb
lock
pop
testb
mov
jecxz
cltd
xchg
test
xchg
sti
mov
scas
xchg
fidivl
sbb
dec
push
repz
or
stos
add
mov
es
xlat
mov
and
pop
outsb
aam
dec
mov
fldl
cli
inc
jmp
xchg
sbb
push
mov
ret
add
mov
fwait
cmpsb
dec
sbb
mov
scas
enter
cmp
pop
mov
push
sarl
repnz
xor
mov
sub
hlt
fstpl
out
xchg
pop
test
push
test
cmp
pusha
fistpll
cmovp
test
pop
jnp
cwtl
ficoms
inc
inc
or
popa
jecxz
xchg
test
orl
lcall
out
lret
fdivrs
jp
jae
jno
adc
in
in
dec
ja
jns
arpl
or
in
lcall
lods
xor
int
inc
and
jp
sub
sub
pop
fidivl
or
push
or
mov
pop
clc
jg
or
fsub
cs
lret
xchg
fsts
adc
data16
cmp
add
jae
pop
pop
mov
addr16
ljmp
jecxz
adcb
dec
add
adc
ret
or
cmp
pop
mov
fs
adc
push
dec
daa
and
in
mov
test
leave
leave
pop
mov
xor
fsubs
dec
push
lret
out
out
jle
dec
out
test
dec
loop
jne
scas
sarl
sub
rclb
jmp
in
xor
cmpsb
rcll
sbb
into
int
repnz
clc
sbb
cli
pusha
cwtl
shrb
jp
and
dec
lahf
dec
out
call
insl
add
cmp
mov
jns
or
aas
into
loop
les
icebp
lds
inc
fisubs
in
jne
pop
repz
add
adc
sbb
and
jmp
imul
mov
fucomip
arpl
mov
into
jl
sbb
gs
xlat
jnp
jne
in
je
test
pop
sti
sbbl
push
or
sbb
out
testb
fs
push
jmp
popl
std
cmp
pushf
xchg
js
scas
sahf
and
sbb
pop
mov
xor
dec
bound
inc
insl
jge
xor
sub
xchg
js
cmp
popf
popf
test
jl
sarb
mov
int3
xchg
popa
pop
data16
fstl
jl
nop
sbb
popa
insl
es
inc
pop
jp
fs
mov
xchg
in
mov
icebp
or
rorb
sub
push
cmp
xchg
or
xchg
sahf
jmp
dec
push
cwtl
ljmp
cmpsb
aad
sti
pop
jl
mov
stos
lret
inc
fcomip
les
fbld
ret
imul
loopne
je
jl
les
pop
sub
dec
cmpsl
and
insb
aas
stos
jmp
lret
das
jecxz
dec
pop
jecxz
push
xchg
fidivrl
ficoml
loopne
cmp
repz
xchg
js
ffreep
dec
fistpl
pop
push
ret
mov
pusha
fwait
scas
mov
jle
jae
mov
mov
lret
cmp
sbb
sub
dec
popa
push
into
add
jp
insb
jle
adc
sub
dec
jns
or
inc
insb
sbb
jnp
outsl
lock
sub
pop
jnp
in
ficomps
hlt
jnp
mov
stc
loope
pop
bound
fdivr
das
lds
lods
mov
mov
jge
in
mov
dec
sarl
sub
or
fldl
addr16
add
mov
sbb
push
fdivrl
pusha
and
cmp
adc
sbb
gs
daa
mov
sbbl
hlt
mov
cmp
inc
fdivl
out
mov
nop
xchg
inc
fnsave
jne
jmp
or
sbb
dec
nop
cmp
fs
mov
push
mov
add
icebp
mov
loope
mov
es
mov
js
inc
fdivl
fsubs
pop
push
mov
sbb
int3
mov
jbe
and
xchg
xorl
mov
jnp
test
scas
cmp
loopne
das
incb
pop
lock
dec
in
push
ja
fidivs
add
jl
out
pusha
add
inc
mov
mov
xchg
add
xlat
xor
jmp
out
cmpsb
push
mov
mov
outsb
fildll
mov
lea
sbb
sbb
adc
out
pop
add
inc
scas
and
xchg
add
xor
mov
and
dec
cmp
cld
jb
dec
in
xchg
sbbl
lods
insb
add
out
cmc
dec
inc
sbbl
imul
mov
xor
out
pop
adc
hlt
imul
xchg
mov
ficomps
mov
or
lods
cmp
pop
xor
popl
push
call
push
add
pop
mov
adc
cld
gs
stos
add
dec
or
pop
xorl
jb
xchg
rclb
adc
xchg
xor
int3
jne
inc
or
xorl
xchg
jecxz
sub
out
sbb
loopne
inc
cmp
xchg
add
xchg
scas
fsubrp
ja
sbb
mov
xor
xchg
sub
push
aam
test
repnz
loope
push
sub
lds
or
jecxz
fisubrl
ret
push
and
mov
jbe
addr16
mov
cmpsb
cmp
add
les
and
loop
jo
rcrl
add
std
jecxz
mov
pop
xchg
push
xor
sbb
mov
les
shl
fnstcw
or
pop
lock
sub
sub
lcall
sbb
in
jno
push
aaa
inc
jp
outsl
lods
bound
cwtl
xchg
int
mov
mov
mov
faddl
inc
fdivs
lret
repz
les
stos
xchg
in
imul
mov
sub
jge
pop
outsl
mov
adc
in
sub
xchg
mov
fnsave
push
call
cmp
sub
sbb
scas
dec
subb
mov
loop
data16
jns
mov
adcb
out
aaa
into
adc
in
test
ljmp
shlb
test
hlt
repz
cmc
loope
out
in
test
loope
mov
push
xchg
xor
das
pop
scas
mov
ret
mov
jge
ret
aad
adc
fld
pop
push
jmp
jmp
mov
daa
pop
inc
cmpl
stos
adc
daa
mov
cmpsb
jae
pop
test
repz
repnz
lret
jle
subb
lahf
ss
jg
mov
xchg
dec
loop
add
xchg
bound
jns
cld
push
jmp
dec
cmp
cmp
pop
adc
dec
push
popa
clc
xor
add
ja
xchg
adcl
hlt
or
cmp
xchg
scas
test
scas
sbb
sahf
xor
lods
jae
daa
cmpsb
int
les
loopne
and
jae
sti
lods
repz
rcll
sub
mov
add
sub
lods
inc
sahf
jno
jae
mov
outsl
push
xor
int3
arpl
int3
xchg
gs
push
or
xchg
xor
jg
outsb
fidivl
mov
xchg
cld
push
sub
leave
mov
inc
cwtl
scas
xchg
sub
push
ss
inc
movsb
cmp
mov
cmc
inc
dec
testb
and
pushf
xor
push
movsl
orl
imul
add
sbb
mov
int3
push
dec
fisttps
sub
hlt
imul
dec
outsb
mov
sbb
in
add
outsl
push
cmc
and
rclb
mov
clc
and
inc
call
jmp
dec
loope
mov
loop
imul
or
lcall
pop
mov
in
fnstenv
and
js
je
push
xchg
mov
adc
or
aad
dec
push
ljmp
fnsave
arpl
outsl
dec
loop
bound
popf
cmpl
cmp
inc
flds
mov
pop
sbb
xchg
stos
push
fbstp
lret
lds
mov
rcrb
ret
mov
loop
iret
cmp
and
jno
cltd
xchg
ret
or
inc
sub
xchg
mov
add
mov
pop
or
push
sbb
gs
je
mov
sbb
clc
sbb
lret
bound
lods
fnstenv
mov
in
xor
jg
inc
pop
pop
repnz
dec
pop
sub
pop
jns
xchg
imul
out
mov
std
add
pop
lock
mov
and
mov
pop
insb
add
es
sbb
mov
leave
pusha
pop
repnz
sub
in
outsb
lret
cmp
daa
nop
sti
xchg
add
stc
nop
and
aad
lahf
testl
mov
jmp
mov
dec
daa
and
pusha
cld
pop
scas
subb
call
ja
int3
cmpsl
or
sahf
cmp
int
inc
mov
cmpsl
mov
fstp
outsl
iret
in
lret
bound
icebp
ss
mov
jo
jne
xchg
push
mov
pop
cmp
mov
out
xchg
mov
push
cmp
frstor
pusha
stos
inc
push
pop
lcall
cs
imul
out
sbb
mov
or
nopl
pop
mov
adcl
jmp
jae
push
cmpsb
jecxz
xchg
inc
insl
add
mul
js
es
ficoml
inc
fdivrl
popf
xor
pushf
mov
adc
fnsave
lods
inc
xlat
ret
ss
jne
push
aad
std
movb
jle
repz
push
fdivl
cli
lods
inc
in
loopne
pop
xor
add
sub
pop
icebp
divl
jnp
xor
mov
fldcw
aas
insb
in
mov
xor
mov
icebp
rcll
adc
sbb
ljmp
add
cmp
sub
inc
xchg
sub
inc
out
xchg
and
sbb
inc
add
or
sbb
or
push
popf
popl
das
imul
mov
inc
cwtl
das
jae
data16
push
sbb
dec
jne
cmp
pop
hlt
push
mov
dec
jmp
mov
enter
dec
and
push
lea
mov
pop
push
inc
fiadds
ljmp
imul
push
mov
fs
cmp
es
ljmp
and
jno
out
inc
iret
data16
mov
mov
pop
add
pop
call
out
xchg
in
test
xchg
cmc
mov
xorl
mov
pop
xor
jge
cmpsb
cmp
cmp
fwait
cmp
lret
pop
ljmp
outsl
repz
ss
adcb
dec
pushf
xor
testl
sbb
rclb
addr16
stos
xchg
scas
inc
fmulp
mov
mov
fistps
repnz
dec
add
ret
cltd
mov
addr16
cltd
sarb
fistl
cmp
bound
mov
xor
push
imul
hlt
mov
mov
sbb
mov
gs
and
test
inc
dec
jecxz
dec
mov
je
add
cmp
loopne
and
call
andl
stc
jno
shlb
sbb
cmpsb
ss
mov
das
pop
aad
dec
fnsave
jmp
pop
xchg
lret
iret
jle
sub
test
lods
add
sub
stc
xchg
sbb
xchg
dec
mov
push
daa
in
adc
rcrl
add
dec
arpl
jg
lds
fbstp
adcb
out
xor
xchg
test
sbb
cmp
loop
mov
sbb
decl
add
dec
pop
cmpb
add
xchg
cld
dec
loopne
or
mov
push
jl
or
nop
jae
xor
pop
mov
setle
or
sti
and
jae
cmp
bound
gs
xor
pop
bound
xchg
cs
mov
fcoml
xchg
aas
or
jle
and
mov
pop
in
sub
cltd
mov
cwtl
adc
jns
les
pop
outsb
fimuls
test
jno
inc
sbb
call
aad
mov
xor
jns
in
vmwrite
mov
movsb
cmp
ret
jmp
xchg
cs
fmuls
stos
stc
sbb
or
jbe
jne
sbb
sub
sub
xchg
inc
sub
test
xchg
push
jne
fbstp
sub
push
inc
jne
mov
dec
or
dec
aad
loope
xchg
aas
in
fwait
mov
pop
fistpll
icebp
xchg
xor
add
pop
mov
pop
movsl
xor
inc
and
pop
iret
xor
inc
mov
aam
aad
test
pop
insb
sahf
je
push
pop
cmpsb
xor
adc
pop
movsl
enter
pop
cmpsb
xor
xchg
cmc
add
orb
cmpsb
xor
aad
leavew
out
cli
pop
sti
cltd
cmp
rol
push
add
daa
fidivs
sub
jns
jp
xchg
lods
jnp
xchg
lods
int
mov
int
aam
add
mov
cld
ja
pop
jns
rorl
fisubrl
sbb
inc
push
ljmp
jno
mov
dec
mov
mov
in
xor
repz
stos
fsubrp
push
leave
mov
pushl
ljmp
ret
jmp
sarl
sub
out
dec
out
pop
dec
loop
gs
add
pop
imul
ljmp
inc
cmp
pop
enter
ret
pop
test
loope
xlat
add
call
mov
mov
stos
inc
fcomp
popf
cmp
into
cld
pop
imulb
dec
jge
addl
xor
xchg
xchg
sub
cmc
mov
dec
sbb
outsb
jnp
shrl
pushf
cmc
mov
out
xchg
out
adc
adc
xor
or
mov
xor
jne
cld
rol
xor
adc
inc
adc
xchg
and
mov
push
push
movsb
xor
mov
mov
mov
shrb
xchg
mov
sub
mov
inc
sbb
jg
insb
mov
popf
ret
mov
lods
sarl
adc
push
and
cmp
arpl
adc
push
inc
and
enter
inc
push
xor
jmp
bound
test
mov
sbbb
pop
sahf
jmp
in
xor
add
nop
movsb
and
loop
ds
add
sbb
dec
pop
repz
lahf
mov
mov
das
pop
inc
mov
jae
stc
nop
adcl
aad
repnz
divl
cmpsl
insb
dec
push
ljmp
jno
int
dec
jecxz
out
and
push
fs
lods
inc
je
mov
mov
lret
dec
pushf
imul
lods
pop
pusha
testl
pop
sbbl
das
jae
ret
cmp
jg
outsb
add
rcrb
insl
add
repz
insl
inc
fcomps
mov
jnp
rcll
mov
and
add
js
inc
fucomi
cltd
mov
jp
in
cld
xchg
push
pop
aas
mov
cli
xchg
fs
jns
loope
sbb
inc
dec
mov
in
test
sub
fwait
lods
rcll
mov
imul
leave
ret
add
pop
test
imull
mov
lock
mov
out
jle
jmp
dec
sub
jmp
jmp
sub
cltd
cmc
push
xchg
incl
or
dec
in
mov
and
or
call
mov
jmp
push
mov
pushw
or
and
ja
scas
add
add
adc
sbbl
popf
and
das
adc
mov
pushf
repnz
testl
cwtl
jnp
jns
das
test
aam
dec
mov
leave
insb
addr16
outsl
das
cmp
divl
insl
jecxz
xor
je
pop
inc
xor
loop
das
ds
add
arpl
mov
cmp
and
push
jecxz
push
adc
insb
add
lret
std
mov
lea
fcoml
test
sahf
sub
out
jmp
dec
fistpll
pop
and
arpl
xchg
sub
aaa
xlat
mov
or
jmp
shrb
lret
sti
jge
xorl
pop
fwait
add
dec
movsb
and
mov
shll
js
iret
stos
sbb
test
in
sti
insl
push
mov
sbb
push
dec
mov
xchg
sub
ret
hlt
arpl
xchg
adc
jae
daa
sbb
mov
pop
stos
inc
dec
mov
mov
sarl
cmpsb
dec
jne
cmp
loop
dec
xchg
mov
cmp
dec
mov
je
subb
inc
mov
cmp
out
xor
addb
mov
loop
xchg
fnstenv
add
daa
jg
mov
push
jnp
mov
mov
add
cltd
sub
shlb
js
pop
push
dec
loopne
stc
lods
inc
jmp
daa
mov
insb
mov
cltd
xor
leave
dec
jecxz
js
shrb
test
pop
jne
pushf
cmp
push
fwait
scas
inc
fsubs
dec
dec
fistpll
and
outsb
xchg
cmpsl
ljmp
mov
pop
adc
xchg
sub
lea
push
iret
inc
aad
pop
lock
lods
out
pop
pop
jmp
fbld
data16
imull
iret
sub
jb
fucom
js
jle
outsb
mov
sub
cmc
mov
xchg
inc
dec
cmc
push
pusha
push
in
push
das
add
jo
popa
cmpsb
xchg
ss
jne
pop
int
cmp
xchg
inc
fdivrs
push
gs
jnp
std
xor
popa
stos
mov
repz
mov
push
xchg
xor
insb
add
sbb
xlat
addl
pop
sub
or
les
cmp
outsb
jp
loopne
pop
xchg
ljmp
mov
fnsave
hlt
roll
test
es
jbe
popa
sahf
bound
add
ret
stc
insl
adc
push
mov
mov
jg
lods
insl
add
imul
addr16
cmp
dec
mov
ret
hlt
int3
shrl
addr16
xor
rol
pop
les
sbb
gs
adc
add
xor
mov
push
cmp
rclb
push
in
iret
mov
pop
call
xchg
xchg
shlb
adcb
icebp
pop
loop
lock
or
and
pop
cs
sbb
adcb
lock
cmc
mov
sarb
adc
jne
xchg
jmp
out
xchg
mov
cs
cmp
dec
jmp
and
sahf
cli
je
fidivrs
icebp
mov
and
bound
imul
cwtl
mov
sub
jmp
rorl
pop
loop
push
ret
jle
jnp
in
cmpb
jbe
adc
dec
push
xor
outsl
jae
pop
dec
xchg
lea
insb
rcrl
aam
sahf
push
les
mov
mov
and
or
test
mov
or
lret
pop
inc
fistl
mov
jmp
pusha
mov
mov
outsl
lret
mov
into
gs
xlat
sbb
or
push
adc
ss
test
sub
cmp
push
in
out
insb
out
sahf
adc
inc
mov
push
ljmp
insl
lods
xchg
pop
out
add
inc
mov
mov
int
jle
lods
outsl
and
hlt
xchg
adc
or
push
mov
mov
mov
dec
lods
hlt
dec
or
pop
mov
xchg
pop
cltd
mov
insl
lea
stc
sub
scas
lahf
pop
icebp
dec
insb
adc
shrl
inc
rcr
and
mov
xchg
mov
aam
mov
xchg
lahf
out
adc
pop
inc
adc
inc
gs
xchg
xchg
bound
pusha
mov
xlat
mov
fdivl
les
fidivs
in
jnp
shlb
dec
mov
sub
mov
shrb
jge
aaa
into
pmaxsw
ret
test
add
xor
es
adcb
test
xor
sub
cmpsb
lcall
lcall
out
xchg
sbb
cmp
jp
mov
and
add
pop
movsl
lcall
popf
call
cmp
rcl
movsb
cmp
pop
inc
pop
testb
inc
push
add
call
movsb
add
lahf
push
shlb
cmp
mov
jb
les
arpl
sti
mov
xchg
lcall
sarb
xchg
test
dec
cli
fiaddl
ficompl
push
push
inc
pusha
dec
mov
gs
sahf
rcll
add
jns
subl
cmp
decl
out
fldl
mov
xor
add
outsb
out
call
push
test
lea
arpl
push
jns
incl
mov
pop
cmp
jo
and
inc
fldt
pop
jp
je
rcrb
fisttpll
xchg
sbb
cwtl
push
ja
or
insb
jb
movsb
sbb
sub
add
int
sbb
mov
and
stos
gs
and
sarb
insb
fbstp
idivl
outsb
testl
sub
and
cld
mov
dec
xlat
adc
mov
push
inc
cld
shlb
mov
pop
mov
lods
cli
repnz
mov
jmp
inc
fisttpll
out
test
pop
adc
cmp
es
loopne
cli
lods
les
or
mov
cli
push
cli
dec
xchg
and
mov
repnz
sbb
lods
xlat
pop
xor
int
push
arpl
mov
outsl
push
imul
add
rorl
fwait
ss
push
movsl
pop
pop
aad
pop
scas
shl
push
mov
add
xor
push
mov
outsl
pop
mov
or
sarl
dec
loopne
test
cwtl
dec
test
lock
push
out
test
repz
repz
leave
mov
in
xchg
sub
mov
pop
dec
jnp
or
icebp
mov
in
xlat
hlt
mov
or
jmp
cmc
mov
fmull
lret
mov
fnstcw
adc
push
push
sub
pushf
mov
jne
mov
icebp
jne
mov
jl
add
js
inc
add
mov
adc
in
fiaddl
fcomip
mov
cmp
nop
loop
negb
dec
add
push
mov
sub
push
call
xor
inc
clc
mov
mov
scas
rorl
call
adc
fisttpl
repz
fidivl
insl
call
cmc
cmp
mov
test
insb
mov
mov
mov
pop
stos
mov
cld
adcl
fwait
lock
imul
dec
ja
jp
fs
and
xor
dec
pusha
addl
faddl
or
and
cmpb
inc
and
jl
ja
out
jb
jg
sub
mov
sahf
lcall
negb
pop
jb
in
sti
push
imul
loopne
mov
jecxz
push
add
pop
leave
aaa
popf
xchg
push
mov
push
shrl
dec
cmp
jg
fstps
mov
mov
pushf
xor
and
adc
fildl
cmpsb
xchg
inc
insb
cs
vpshufhw
pop
mov
xchg
cmp
dec
push
and
test
clc
dec
mov
dec
test
adc
mov
pushf
xor
push
fistpll
xor
and
fmuls
repz
and
jle
jecxz
push
stos
aad
in
add
fbstp
in
mov
les
mov
jp
pop
xchg
jge
rorl
sahf
iret
test
or
es
pop
inc
daa
jp
dec
or
sarb
mov
push
or
mov
aas
mov
mov
jle
nop
test
sub
test
cwtl
enter
push
mov
push
add
mov
lods
insb
xor
cwtl
stos
dec
fistps
add
fwait
xchg
mov
ljmp
pop
fnstsw
push
sub
sub
xchg
out
out
hlt
fsubrp
mov
cmp
lods
repnz
fstpl
add
add
lret
cmp
stos
mov
outsb
push
pushf
mov
xlat
mov
mov
xchg
cmpsl
adc
dec
pop
mov
addr16
sbb
mov
dec
jge
inc
cmc
mov
xchg
ljmp
testl
pop
push
pop
mov
arpl
fidivl
xor
ljmp
int3
or
aaa
and
loope
lret
mov
stos
roll
aad
mov
sbb
mov
stos
pop
loop
mov
scas
inc
das
bound
sub
popa
jl
lret
jbe
jnp
jo
aaa
pushf
ret
pop
into
sub
push
aad
mov
sub
loope
loope
arpl
lods
mov
xchg
inc
add
jle
in
scas
jecxz
mov
pusha
notl
dec
fisttpl
sub
push
daa
pop
notl
pop
ljmp
dec
in
pop
dec
push
xor
push
mov
or
adc
scas
inc
adc
and
cltd
mov
lock
pop
hlt
mov
mov
mov
jecxz
pop
fwait
xor
repnz
nop
and
int3
and
mov
std
fs
xchg
xchg
push
or
mov
xor
data16
or
sub
pop
dec
xchg
mov
fisubrs
pop
pop
notb
cli
sub
loop
aam
rcr
popf
or
mov
mov
xchg
fwait
sub
int3
lods
sahf
popf
push
jno
fisubrs
call
into
mov
inc
out
push
outsl
idiv
lock
stos
mov
sarb
arpl
push
jno
or
stos
and
fistl
aam
push
sar
pop
imul
lret
add
fsubrs
test
sahf
pushl
test
xor
aam
inc
lahf
lcall
into
cwtl
lock
rsqrtps
adc
or
inc
xchg
fidivl
in
xchg
popf
pop
push
lods
mov
inc
js
int
cvtdq2ps
insb
and
test
xchg
or
in
nop
stos
cwtl
into
ss
sbb
loope
xor
pushf
add
mov
sub
pop
mov
mov
push
test
cli
fdivs
les
cmc
inc
lds
pop
push
jmp
bnd
mov
rcrb
std
xor
addl
and
mov
dec
pop
jo
xchg
cmc
cmpsl
dec
sbb
xchg
pop
cmp
push
sbb
push
mov
and
pusha
gs
jle
cs
cmp
pop
dec
jbe
push
jns
cli
jne
outsb
mov
adc
imul
out
xchg
testb
arpl
push
shl
clc
and
notb
lock
ss
cmp
jb
push
sub
enter
addl
or
dec
scas
lea
sub
mov
sub
mov
adc
mov
mul
xchg
shll
shll
lods
call
outsb
mov
test
imul
clc
and
cli
jp
add
leave
cmp
and
lret
addr16
xchg
sub
mov
xchg
mov
inc
push
addb
movsl
mov
mov
jp
sbb
mov
pop
hlt
xor
repz
inc
icebp
and
loopne
cmp
cli
sbb
push
dec
pushl
xor
mov
es
cmp
and
repz
out
push
or
jo
push
jb
mov
jle
jge
scas
xchg
out
test
rolb
push
jmp
mov
xchg
push
or
jb
lods
inc
rclb
into
stc
xor
out
mov
or
loop
or
mov
xor
fisttps
arpl
mov
mov
mov
add
push
ljmp
in
test
jne
lret
cli
mov
add
mov
sub
int
add
cmpsl
sbb
lock
mov
adc
jno
iret
lahf
sti
xchg
rcr
push
aas
jno
sar
fisubrl
cmpsl
ds
inc
ja
lret
in
xor
cli
and
int
cmp
mov
ja
test
gs
mov
orl
mov
cmc
fs
adc
xchg
hlt
dec
sbb
sub
ret
xchg
lock
lock
inc
test
pop
ds
add
sbb
scas
mov
xchg
mov
gs
jnp
popa
mov
ja
inc
jo
add
xor
imull
aas
and
cmp
enter
arpl
test
loop
dec
adc
ret
stos
xchg
lahf
ss
mov
dec
push
mov
or
mov
cmpsl
mov
inc
lahf
sar
ss
and
mov
mov
movsl
push
mov
jo
inc
scas
movsl
cmp
jo
jg
mov
mov
xor
jmp
jp
mov
push
roll
and
pop
roll
cmpsl
push
jnp
inc
clc
bound
jb
cmp
fwait
fwait
add
xor
dec
addr16
insl
jne
jno
xor
push
int
testb
fs
lock
jo
outsl
sti
mov
mov
test
mov
and
shrb
cmp
mov
ds
mov
ss
int
lret
jp
sbb
bnd
sbbl
push
mov
jo
cmc
mov
dec
nop
addr16
test
push
sbb
xchg
std
fisubrl
jle
xor
movsl
cli
std
xor
sbb
fwait
add
lods
inc
mov
xchg
rolb
add
inc
fcompl
into
les
icebp
inc
shlb
push
cltd
leave
mov
xor
mov
mov
in
fcmovu
fs
mov
mov
mov
add
pop
mov
pop
cmp
pop
fisubl
jo
sbb
mov
sub
scas
pop
call
jne
jno
xor
ss
pop
mov
pushf
mov
mov
jmp
xor
push
lock
pop
shll
shr
in
fsubl
clc
push
ljmp
insl
ja
insl
popf
adc
pushf
xor
mov
or
test
mov
jl
lods
inc
movsb
orb
idivb
and
outsl
add
push
cs
lret
inc
pop
ret
mov
fnsave
pop
jo
jecxz
rcrl
jg
mov
adc
int3
jl
add
lcall
sub
fsubrs
xchg
or
repz
jb
dec
stos
pop
aad
inc
xchg
jne
loope
in
or
daa
shrl
push
jecxz
jb
mov
imul
or
outsl
pop
mov
cmp
xchg
dec
addr16
push
and
push
jne
lods
ja
add
int3
adc
mov
pop
push
movsb
cmp
and
pushf
jmp
cmp
fmuls
jno
popa
mov
push
mov
gs
ret
cmp
test
cmp
das
in
das
cmpsb
cmp
imul
pop
js
push
pop
and
lods
test
dec
push
xchg
sbb
and
pop
xchg
iret
fisttpl
inc
arpl
cmp
or
data16
call
es
jecxz
std
mov
mov
test
sti
mov
add
mov
out
cmpsb
xor
sahf
inc
leave
ja
mov
lret
pshufw
pop
ss
pop
mov
in
inc
das
imul
sbb
ss
inc
leave
movsl
sbb
push
inc
cmpb
mov
shlb
popf
pop
xor
roll
jno
neg
ja
lret
loopne
mov
cmp
cli
or
aad
pusha
shrl
cwtl
adc
cld
stos
test
pop
lock
int3
and
pop
sub
lea
stc
dec
stos
negb
ja
mov
sbb
dec
mov
push
inc
xor
nop
les
out
ja
test
cmp
movsb
pop
xor
inc
insb
mov
sbbb
orl
imul
jns
or
mov
ficoms
add
pop
or
das
jmp
or
enter
xor
rcll
sbb
push
sti
outsl
xchg
dec
test
movsb
mov
mov
pop
jmp
int
cld
lock
add
mov
roll
fbld
adc
push
out
ja
lret
push
mov
push
dec
shll
xor
rclb
mov
fidivl
pop
in
mov
xchg
out
loope
cmp
adc
mov
sbb
push
jl
leave
pusha
imul
insl
mov
fs
jecxz
dec
sahf
jmp
mov
out
pop
jmp
cmp
fcompl
fsubp
int
aad
in
cmpsb
ficomps
adc
ss
sub
test
ds
mov
inc
xchg
adc
jns
mov
shrb
add
xor
add
test
insb
add
lea
mov
xchg
lahf
shr
xchg
xor
push
mov
and
or
sbb
adc
add
pop
imul
lea
mov
xorl
xor
mov
push
fistl
inc
jns
push
imul
jb
xchg
pushf
xor
cli
pop
push
addr16
cmp
mov
jg
int3
enter
jne
push
inc
xor
pop
sbb
outsl
sub
sbb
imul
xchg
pop
repz
dec
test
jnp
fs
xchg
pushf
and
aam
jl
mov
fmull
xor
or
jecxz
outsl
insb
sbb
movsb
inc
movsb
subl
jle
lea
popa
clc
cmp
sbb
cmp
scas
aaa
add
lret
lcall
or
in
out
add
add
sarl
rorb
fisttpl
subl
mov
mov
mov
push
in
pop
jmp
mov
dec
sbb
lea
bound
dec
mov
mov
inc
flds
scas
add
push
push
pop
repnz
stos
cmp
jmp
inc
and
adc
jp
shr
test
sub
xsha256
cmpsb
xlat
notb
scas
daa
stc
sub
pop
jecxz,pn
mov
push
in
sbbl
lret
fiadds
inc
pop
push
shll
jnp
ja
sub
mov
or
sahf
sbb
jmp
cmpsl
clc
jecxz
ljmp
jno
jl
daa
daa
outsb
mov
sub
fidivrs
outsl
dec
mov
dec
cmp
imul
xor
outsb
arpl
push
inc
sub
fsubrs
and
pop
mov
cmp
pop
xchg
sub
test
in
mov
andb
sub
xor
mov
ja
sbb
mov
gs
fs
aaa
into
test
negl
xchg
dec
cmpsb
cmp
pusha
jno
cltd
mov
jmp
push
andnps
dec
loop
pop
lock
out
test
xor
xchg
xchg
push
bound
mov
push
and
aad
lcall
sub
jns
and
fdivp
scas
inc
cmp
int
cltd
xor
out
cmp
mov
flds
in
mov
sub
inc
and
dec
jae
push
dec
push
xchg
adc
fidivs
fsts
fsubrl
or
cmp
pop
ret
pop
jno
call
push
sub
mov
nop
bound
addr16
adc
lea
xor
mov
loope
and
sbb
sub
fnsave
or
add
loope
add
sub
xchg
shrb
inc
mov
xor
movsl
popa
clc
sbb
and
leave
adc
mov
xchg
sahf
pop
mov
shrl
add
aad
sub
push
jp
cmp
negl
sub
pop
inc
cli
xchg
push
jge
or
cmpsb
fs
sub
mov
cmp
aad
push
pop
aaa
push
mov
sub
jne
mov
cld
das
pop
icebp
sahf
mov
push
add
sbb
mov
push
sbbl
pop
scas
les
jle
inc
cmp
ljmp
sub
mov
mov
adc
sub
jno
mov
sbb
mov
test
and
lods
inc
push
lret
mov
push
out
test
push
push
out
stos
inc
fdivrp
imul
push
add
mov
push
mov
pop
xor
xchg
fs
sub
pop
mov
push
xchg
adc
enter
push
enter
push
rorb
cld
sbb
inc
adc
lock
movsl
push
xlat
dec
fnsave
ret
pop
dec
pushf
add
in
mov
jns
in
pop
scas
lret
rolb
jnp
fldt
sbb
xchg
rorb
scas
xchg
ja
mov
and
gs
adc
icebp
mov
inc
xchg
xor
in
sbbl
mov
pop
gs
cmc
mov
sti
jg
call
into
or
rcr
add
loop
std
out
fsubrs
iret
fs
cmp
les
push
ds
add
pop
fwait
pop
inc
mov
inc
push
xlat
cltd
xor
jne
sbb
xchg
mov
xor
std
pop
hlt
xor
push
add
lea
cmp
paddb
and
mov
aaa
jns
add
xor
andb
xchg
fnsave
push
out
xchg
pop
outsl
lret
cld
nop
loopne
hlt
fidivl
fnsave
mov
inc
and
xor
adc
enter
xchg
movsl
add
add
cmp
xor
jecxz
add
lret
out
std
or
sub
leave
mov
sti
stos
lock
repz
outsb
out
mov
popa
push
push
popf
xchg
mov
xor
popa
cmp
stc
mov
and
lcall
out
mov
out
xlat
mov
aas
das
andb
subl
iret
adc
sub
sub
insl
data16
sahf
jle
cmovae
es
pop
mov
imul
jge
cmp
fldenv
adc
sbb
out
imul
sahf
or
push
rcrb
scas
xchg
in
filds
pusha
imul
mov
push
dec
jnp
inc
scas
movsb
cmp
sbb
inc
out
mov
shll
dec
sbb
mov
mov
ja
test
cmp
shll
jo
enter
inc
lcall
mov
into
mov
cmp
mov
dec
loop
rorl
mov
rorl
out
loop
loopne
shrl
roll
sub
jl
lret
bound
or
jnp
outsb
add
sub
jnp
out
leave
shl
jns
adc
xchg
sub
adc
loopne
jo
and
xor
fisubs
jecxz
mov
add
inc
fsubs
sub
jge
jl
mov
fadd
pop
fiadds
sbb
jecxz
out
push
fildll
inc
leave
add
mov
out
push
xchg
push
xor
jle
mov
dec
xor
jae
pop
adc
imul
push
and
add
leave
lods
xor
push
test
nop
daa
pop
xchg
or
mov
test
in
mov
sti
rorl
push
das
add
popf
jno
and
sbb
in
shlb
push
fsubs
mov
std
jo
and
dec
lods
push
fistpl
test
in
jnp
mov
cmpsl
popa
decl
shlb
lock
or
xchg
ficompl
pusha
idiv
sub
lcall
jle
xchg
push
call
dec
xor
push
pushaw
jecxz
xchg
xor
xchg
sub
test
lods
add
sub
xchg
int3
arpl
aam
cwtl
add
lea
xor
pusha
cmpsl
inc
jbe
xor
xchg
ret
arpl
mov
icebp
mov
shll
popa
adc
xchg
insb
add
pop
cmp
sub
fs
xchg
dec
xor
push
or
or
icebp
add
test
into
inc
adc
xchg
push
sub
into
pushf
xor
adc
and
mov
jmp
jne
fnstenv
push
mov
adc
mov
jle
xchg
mov
inc
adcb
aaa
adc
cmp
xor
popf
inc
filds
adc
mov
adc
inc
jle
xor
dec
aaa
adc
pop
xor
daa
test
and
lret
bound
je
outsb
dec
js
pusha
inc
dec
les
pusha
dec
mov
push
push
out
bound
sub
cmp
or
mov
mov
cs
xsha1
cmpsb
dec
int
insl
movl
push
adc
jbe
mov
fsubr
and
mov
xor
push
ss
int
inc
xor
lahf
test
xchg
movsl
es
test
push
cli
xor
lods
inc
and
or
jo
jnp
or
sub
cmp
stos
mov
xor
stos
inc
jmp
lcall
jp
out
mov
cmpsb
sbb
ljmp
mov
sti
or
ds
sub
mov
jg
and
daa
mov
jg
insl
es
fistpll
cli
xchg
or
jnp
ja
inc
fadds
cmpsl
or
movsl
sbb
jmp
loope
ss
add
pop
negl
scas
sub
cmpl
pop
jne
bound
lock
xchg
lods
xor
aad
xlat
cmpsb
adc
add
das
int
xchg
pop
push
js
data16
fmull
lds
cmp
cmp
ds
sbb
pop
repz
outsb
inc
fnstcw
insb
and
ss
cmp
imul
mov
mov
cmp
andb
std
mov
test
cmc
cmc
mov
fstps
lret
sbbb
add
xchg
push
add
add
jle
cli
and
adc
jmp
mov
ret
jb
cmc
inc
and
xchg
sbbb
mov
jbe
push
or
cltd
cwtl
jne
mov
inc
xlat
or
pop
cmp
sub
pop
pop
mov
inc
jl
outsb
dec
fs
jmp
insb
xchg
sahf
push
es
sti
jne
out
dec
sbb
add
enter
mov
test
and
repz
xchg
inc
frstor
out
imul
push
mov
in
ds
push
aam
mov
ret
call
or
stos
mov
xchg
sub
adc
popa
mov
shll
movsb
adc
data16
lds
daa
loopne
mov
sub
mov
pop
jae
mov
mov
inc
add
pop
jnp
leave
pusha
jae
mov
sbb
rcrl
fdivl
cltd
les
popa
mov
aaa
add
andb
lcall
pusha
in
push
pop
hlt
xchg
push
mov
icebp
ret
loop
pop
icebp
test
loop
cwtl
leave
adc
or
loopne
sub
ja
or
lret
push
sbb
aas
fnstenv
aas
out
test
out
xchg
xchg
and
xor
shll
add
adcb
clc
mov
sub
xor
jge
mov
pop
rcrb
out
and
nop
mov
les
scas
cmc
xchg
and
cmp
xlat
push
pop
nop
daa
mov
cmc
cmpsl
lods
scas
les
daa
cmp
scas
clc
hlt
arpl
xchg
adc
insl
add
mov
int
jb
imul
leave
imul
in
ret
add
js
rol
pop
mov
mov
xchg
jp
push
cmpsl
nop
pop
repz
scas
pop
jp
push
pop
popa
fildl
and
xchg
mov
ljmp
into
cmpsb
imul
loopne
nop
cmova
loop
dec
in
xor
and
rcrb
or
xor
inc
pop
add
sbb
cltd
mov
jbe
popa
imul
in
gs
icebp
rorl
imul
xor
dec
repnz
mov
test
mov
rorb
and
leave
lods
frstor
jecxz
sbb
add
xchg
sub
leave
mov
mov
push
rclb
add
ljmp
mov
pop
movsl
test
out
dec
loope
mov
test
mov
jmp
xor
xchg
sub
push
add
mov
clc
cmp
pop
in
and
add
nop
xor
push
icebp
stos
adc
mov
add
and
mov
mov
inc
insl
les
lahf
mov
mov
rorb
repz
adc
adc
mov
pop
mov
adc
in
ljmp
dec
cmpsb
cwtl
dec
lcall
mov
dec
filds
insb
mov
out
and
test
nop
fisttpl
scas
cld
pop
mov
and
imul
or
addr16
sahf
mov
or
cmp
inc
push
sarb
outsl
daa
ss
cmp
fnstenv
dec
mov
push
lods
jnp
jl
pop
dec
fsubrs
xchg
sub
sbbb
aas
push
push
mov
lcall
hlt
adc
ja
outsb
push
sbb
lds
cmp
cmp
mov
jmp
or
sbb
push
and
daa
cmpsl
ret
xchg
mov
ret
mov
fwait
pop
dec
dec
cwtl
das
js
sbb
adc
dec
dec
pop
out
shl
es
xor
push
push
imul
inc
arpl
xor
addb
nop
cmp
sti
addr16
rcrb
out
int3
dec
leave
pop
shll
add
fcomi
clc
jae
dec
scas
scas
mov
xor
xor
jo
sub
and
notl
mov
dec
std
pop
mov
mov
adc
xor
aad
pop
scas
push
jne
xor
lret
clc
imul
mov
or
xor
popf
mov
mov
fidivrs
jp
je
push
xchg
jmp
xchg
lahf
cmp
xor
jle
sbb
jl
mov
hlt
mov
and
push
negb
push
cmpsl
imul
cmp
pop
ds
testl
push
pop
pop
xor
cli
data16
sub
mov
dec
cmp
dec
les
ss
call
cwtl
pop
in
orl
lea
jl
pusha
ret
and
mov
into
and
stos
inc
pop
aad
aaa
shrb
jmp
mov
sub
push
roll
fsubrs
loopne
test
inc
notb
test
fsts
jle
scas
sub
jo
adcl
daa
mov
or
and
roll
add
mov
cmp
dec
aad
jp
popa
pop
lock
mov
ja
imul
sub
loope
mov
or
andl
mov
and
dec
test
or
sub
mov
ficoml
xchg
ljmp
mov
loop
lock
gs
or
add
in
lcall
push
jno
cmp
stos
cltd
test
lret
int3
sbb
ffreep
imul
mov
add
pop
xor
pushf
xor
aas
ret
test
in
cwtl
inc
aam
xchg
movsl
std
fiaddl
in
cmpb
jne
cmp
dec
rcrb
mov
pushf
daa
add
sbb
xchg
jle
fnstsw
dec
test
sar
add
adc
sbb
js
outsl
das
fwait
xchg
scas
int3
push
sbb
pop
dec
test
xor
cmpsl
xor
imull
sbb
cwtl
mov
imul
data16
sbb
ret
jle
movsl
cmp
cmc
mov
mov
inc
jp
sahf
out
rclb
pushf
cmpb
cmp
and
jo,pn
inc
inc
into
ret
into
mov
and
pop
fiaddl
push
and
stos
xor
and
push
mov
pop
lock
mov
movsl
pop
inc
icebp
cwtl
cmp
jl
xlat
and
sbb
popf
or
push
mov
adc
or
lret
bound
sub
pop
iret
and
jo
pusha
adc
es
xor
or
bound
adc
hlt
xor
mul
add
cltd
fildll
cltd
mov
mov
out
push
jne
out
inc
in
mov
sbb
fdiv
dec
test
push
sub
movsl
mov
lea
fiaddl
inc
xchg
mov
xorl
aad
rcl
ret
lods
sti
xor
fsts
adc
repnz
xchg
and
out
inc
lea
jl
stos
lds
jmp
andb
jo
xchg
es
push
inc
push
sub
push
jo
jb
rorb
fisubs
xor
popf
out
scas
inc
js
mov
adc
data16
mov
jg
sarb
and
cmp
test
xchg
sub
pop
in
mov
xchg
sub
mov
dec
jae
aaa
das
out
mov
cmpl
mov
pushf
sub
sahf
xchg
push
mov
fistl
jmp
or
es
aad
lahf
mov
inc
movsb
les
xor
repz
test
bound
sbb
xor
xchg
or
lods
mov
jb
daa
push
mov
data16
hlt
add
das
cmp
and
cld
mov
scas
mov
mov
sbb
push
es
pushf
icebp
inc
aas
lods
ljmp
push
in
insb
rcl
sbb
push
out
ret
arpl
test
jae
imulb
cmp
lods
xchg
push
imul
mov
mov
add
push
cmpsb
mov
adc
mov
daa
scas
stos
testb
jmp
pop
bound
cwtl
test
inc
sbb
mov
inc
mov
xchg
jg
push
push
add
ret
fistpll
popf
inc
xor
daa
out
adc
or
pushf
cmp
push
or
jne,pn
in
xchg
or
std
lods
inc
fstps
stos
lea
int
je
lret
frstor
js
enter
mov
in
push
and
std
inc
dec
orb
stc
loop
adc
xchg
dec
loope
fiadds
sub
pop
out
mov
push
xor
xchg
sahf
xchg
pushf
rcrl
fwait
push
loopne
jp
fsubrs
inc
insl
lods
xchg
and
mov
mov
outsb
and
icebp
cmp
pop
pop
dec
arpl
and
add
inc
jecxz
xchg
inc
push
add
std
push
pop
repnz
mov
lcall
xlat
dec
out
clc
insl
add
ud0
mov
push
into
sub
pop
lretw
bound
fxch
pop
in
orl
sub
in
push
fists
sbbl
out
sti
fists
mov
xor
daa
lock
fadds
mov
mov
fcmovne
cwtl
or
mov
out
test
hlt
jg
jmp
mul
xchg
fstps
pop
lea
icebp
pop
movsl
shl
jge
fisubrl
dec
cltd
or
sbb
sbb
inc
fimull
stos
inc
aad
fnstcw
movsb
dec
fistps
sti
push
or
add
test
imul
or
jp
orb
jl
out
daa
movsl
jbe
mov
pop
movsl
mov
inc
pop
ficoms
cmp
xor
add
push
xchg
jae
xchg
sahf
and
lret
loop
push
pop
insb
movsl
inc
sbb
sbbb
jnp
lret
ret
dec
outsl
inc
enter
and
divb
push
cmc
xchg
dec
and
pusha
or
inc
pop
push
xchg
and
in
mov
into
inc
scas
rcr
cmpsb
test
fsubr
fcomps
pop
insl
fwait
pop
push
cltd
and
inc
test
arpl
cwtl
popf
rcll
fsubs
mov
call
or
mov
sahf
aam
inc
push
cmp
and
mov
cmpsb
lahf
xchg
and
sbb
jbe
clc
or
shl
mov
loopne,pt
xchg
jb
bswap
mov
ficomps
dec
in
and
test
insb
mov
movsb
adc
fwait
aas
cmp
add
sbb
adc
jbe
cmp
mov
adc
mov
pop
push
fsubs
mov
jno
inc
lret
adcb
addb
or
cmc
incl
test
pop
aam
sbb
lcall
fadds
in
sub
sub
push
ret
jp
add
mov
bound
pop
xchg
cmp
pop
add
or
mov
xchg
lea
pop
jae
testl
mov
js
xchg
sub
shll
insb
insb
inc
xor
xchg
lea
jmp
dec
mov
cmp
fdivl
mov
xchg
push
shll
cmp
jp
gs
cs
lods
or
shlb
shll
lea
jae
inc
lds
testl
push
jbe
cmpb
adc
mov
inc
out
sub
decl
test
sarl
pop
addl
in
pop
jmp
xchg
lahf
dec
lcall
sarb
iret
adc
dec
lahf
daa
dec
loope
inc
push
mov
mov
pop
imull
jae
push
das
cmpsb
jmp
mov
xor
cmc
inc
insb
rolb
pop
mov
movsl
inc
int3
cli
popf
movb
idivl
lcall
scas
cmpsl
cs
je
dec
cmpsb
push
push
jae
orl
es
outsl
loope
and
xchg
cmpsb
or
cs
sbb
push
leave
push
xor
xchg
lds
pop
les
add
and
das
pop
push
sti
push
addr16
xchg
std
or
pop
add
cmp
lds
out
xor
rorb
mov
add
push
add
xchg
adc
or
mov
lret
push
ret
jnp
xchg
lods
mov
push
push
les
fstl
xchg
js
leave
test
mov
cmc
cmp
cmp
sti
fidivl
mov
jg
xor
push
mov
es
cmp
sahf
lods
inc
rolb
jmp
push
push
hlt
ds
lock
push
mov
pop
insb
call
fnsave
imul
jmp
lret
push
popa
mov
aas
mov
cmp
scas
jg
inc
mov
shrb
pusha
movq
mov
pusha
mov
gs
adc
push
adc
dec
mov
mov
push
lods
inc
add
or
rcrl
jnp
cmp
xor
mov
fcmovnu
je
test
cmpsl
jnp
pusha
jp
imul
xchg
mov
repnz
addr16
rol
xchg
sub
cmp
cs
sbb
out
adc
jmp
test
sbb
mov
push
pop
jle
mov
sub
push
inc
adc
popa
mov
push
aas
or
pop
rolb
dec
movsl
shl
lods
je
push
dec
dec
xor
push
gs
loop
and
xchg
push
out
leave
inc
shrl
pushf
push
jg
bound
push
jmp
cmp
xchg
hlt
inc
dec
aam
pusha
mov
inc
and
sahf
pop
mov
mov
mov
subl
pop
mov
jnp
ds
or
mov
iret
mov
mov
andb
pop
divl
mov
std
dec
xlat
addr16
jno
push
jae
scas
hlt
push
sub
push
cltd
sahf
orl
cmp
decl
loope
out
popf
icebp
sub
push
sub
aaa
and
daa
cwtl
mov
lret
inc
sbbl
mov
add
cwtl
rorl
xorb
push
cmp
dec
pusha
and
out
jns
xor
call
or
mov
loopne
adc
ds
shr
or
xchg
add
cmp
fildll
insl
xor
nop
inc
cmp
scas
jmp
or
test
insl
leave
dec
cmp
outsb
shlb
pop
cmpsl
push
gs
jb
mov
bound
mov
add
dec
imul
xor
xchg
dec
fnsave
cltd
pop
inc
jbe
sub
cmc
sti
push
xor
xor
jno
stc
push
loope
add
xchg
push
or
in
sub
iret
lret
push
arpl
and
mov
shll
add
ror
dec
add
push
xor
es
pop
in
sbbl
or
xchg
shlb
call
mov
jae
std
mov
push
xor
cmp
push
dec
sbb
cmp
cmp
outsb
lds
in
cmc
mov
adc
lret
nop
lods
cmovbe
aas
jg
repnz
fnsave
test
mov
lods
ljmp
adc
or
pop
je
das
xchg
cmp
jb
mov
xchg
iret
cmp
cmp
push
pop
repnz
cld
inc
aas
fnsave
mov
mov
xchg
popa
jo
cmpsb
adc
sti
mov
sbb
mov
pop
lods
fnstcw
lret
xor
in
je
xchg
leave
pusha
call
in
mov
add
push
orb
arpl
pop
hlt
lret
or
and
movsb
sbb
insb
mov
leave
push
adcl
pop
loope
cltd
std
inc
sub
shll
inc
and
mov
or
or
shlb
xor
inc
enter
outsb
jbe
push
push
mov
inc
cmp
imul
dec
mov
repnz
jl
sub
repz
mov
inc
aas
clc
mov
adc
shrl
adc
sub
daa
int3
mov
test
adc
lcall
leave
push
mov
inc
rolb
mov
jns
push
jo
xor
push
mov
jnp
mov
pop
xorl
mov
jg
xor
add
lret
dec
out
ja
adc
mov
push
in
xor
rcrl
push
cmpsl
push
jle
mov
dec
loope
jae
cli
or
orl
and
addl
lret
testl
mov
pushf
xor
les
jecxz
insb
add
push
or
dec
inc
lds
imul
test
out
int3
fstpl
sahf
inc
xor
lcall
test
sti
pop
pop
enter
push
inc
cltd
push
jne
lret
dec
dec
xchg
jb
lods
dec
xor
movsb
sahf
xchg
loope
add
hlt
dec
sub
in
faddl
dec
mov
adcb
sti
mov
jo
mov
xorb
and
sbb
inc
mov
les
and
aaa
fsubrs
lahf
jb
leave
add
jo
idivb
test
jb
dec
mov
mov
xchg
add
pop
adc
aaa
iret
bound
rorl
mov
pop
fmulp
jnp
push
or
in
cltd
or
mov
int3
das
push
and
lds
cli
es
mov
jge
lods
fsub
mov
imul
daa
enter
insb
jle
inc
sbb
cltd
int3
mov
je
add
mov
jne
push
xor
sbb
push
sbb
cmp
out
bound
sbb
or
out
cmp
fsts
sub
orb
scas
mov
mov
mov
jb
cltd
inc
fcoms
jmp
push
or
imul
or
adc
daa
xchg
xor
jmpw
ljmp
dec
push
push
repnz
jmp
jmp
pushf
movsl
push
xchg
imul
test
xchg
push
and
dec
punpckhbw
mov
add
and
stos
xlat
mov
xchg
xor
into
inc
xchg
ja
adcb
sbb
test
xchg
push
inc
imul
insb
rcrb
sar
inc
push
insb
imul
xchg
xchg
sbb
mul
lret
testb
data16
and
sbb
leave
nop
or
sbb
popf
lcall
and
mov
lds
push
or
push
roll
test
mov
lret
aas
imul
fnstenv
add
leave
sbb
jp
jecxz
jns
jl
xchg
cmpsl
rcrl
inc
sub
push
pusha
or
aaa
jmp
push
jg
xchg
or
idivl
cli
cwtl
das
sub
inc
in
pop
dec
mov
cmpsb
jo
cmpb
mov
xor
add
jb
add
mov
cmp
popf
push
sbbb
and
or
and
push
ja
ficoms
fwait
sbb
test
loopne
sbb
inc
in
jp
test
popa
inc
addr16
adc
jae
enter
push
jmp
popf
and
jp
pushf
dec
loop
add
out
imul
push
push
mov
sub
iret
fistl
aaa
jb
push
jmp
imul
mov
mov
test
lcall
aam
cld
xchg
or
xor
sbb
jbe
shrb
dec
rol
mov
jle
in
jmp
sbb
or
pop
push
sub
ljmp
inc
xchg
aaa
lods
xchg
hlt
dec
inc
mov
or
inc
dec
outsl
lock
add
xchg
call
jge
adc
aam
and
scas
inc
lock
testb
sti
insl
add
push
stos
dec
cld
enter
sub
adc
jae
hlt
cmp
ljmp
pop
pop
mov
mov
mov
dec
insl
xchg
add
iret
data16
pushf
cli
adc
mov
lret
subb
inc
lods
insb
jge
jecxz
mov
es
push
jmp
in
loopne
sub
imul
inc
into
mov
pusha
testl
mov
movsb
movb
jp
lock
in
rdpmc
lret
jl
stos
scas
enter
es
or
dec
and
sub
stc
and
mov
dec
dec
pusha
or
push
jnp
fldenv
pusha
bound
cmp
jb
mov
andb
aaa
not
in
dec
cmp
dec
sbb
bnd
adc
test
or
add
pop
dec
sbb
testl
add
gs
push
adc
jbe
xor
test
jp
sub
inc
pop
push
cs
lock
inc
mov
js
and
inc
aas
addl
imul
sbb
in
cmpsb
xchg
or
sub
xor
bound
xchg
scas
mov
enter
and
mov
test
xchg
fidivl
mov
cmp
or
xchg
push
test
sbb
dec
cmp
dec
stc
pushf
addr16
js
mov
negl
repz
rcr
mov
sub
hlt
movsb
cmp
push
and
jnp
and
or
test
adc
cmp
test
hlt
jg
ljmp
lea
sub
cwtl
add
mov
fcoml
mov
sbb
insl
daa
outsl
aam
xor
cmp
cmpsl
mov
arpl
add
sub
dec
out
rcrl
pushf
js
jl
aas
adc
aad
pop
inc
sub
pop
hlt
mov
jge
repz
ljmp
pop
dec
cmp
jmp
js
add
jmp
nop
or
scas
cmp
test
ss
lea
or
jle
imul
fmull
imul
push
inc
cli
or
mov
shlb
arpl
cmp
in
xchg
fiaddl
into
xor
loopne
mov
scas
push
daa
lret
aaa
sub
ds
shrb
cmp
in
ror
adc
jecxz,pt
xor
dec
arpl
xor
add
mov
test
dec
push
mov
iret
cmpsb
ss
call
sbb
scas
mov
xchg
pop
shlb
adc
jno
lock
sub
adc
or
push
scas
scas
cli
pushf
mov
popf
dec
int3
jo
testb
std
mov
cltd
jb
decl
adc
xorb
or
xchg
or
mov
cwtl
das
cli
cmpsl
mov
add
test
sbb
stc
loope
lods
inc
push
mov
or
aaa
dec
sbb
jle
into
aaa
cmp
jne
outsl
scas
cmp
lods
inc
mov
cmp
mov
pop
or
mov
mov
cmp
and
push
push
xchg
lret
push
inc
bound
js
js
xchg
sub
fildl
or
and
pop
adc
xor
jg
jnp
and
add
push
xchg
jno,pn
mov
lods
push
in
xchg
incb
or
js
ds
adc
pop
stos
inc
add
cmp
cmp
call
mov
shll
shrl
insb
icebp
std
cmp
add
into
lret
pminsw
lock
aad
int3
jg
jge
or
pop
idivb
pop
lcall
push
movsl
pop
xor
stos
dec
test
lea
movsl
cmp
stc
push
loope
test
dec
jecxz
ds
loopne
push
push
pop
xchg
jnp
loope
hlt
pop
fs
add
stos
fs
test
xor
and
ss
cli
and
push
cmpsl
sbb
inc
mov
push
orb
test
add
and
movsl
jg
push
mov
bound
sbb
mov
outsb
sub
mov
in
jle
ret
mov
je
out
in
cld
sbb
push
jmp
xor
push
mov
js
jne
sbb
cmp
mov
ljmp
into
cmp
stos
xchg
xchg
inc
xor
mov
or
out
xchg
addr16
add
xorl
mov
add
pop
repnz
xor
stos
cltd
adc
test
scas
stc
push
out
mov
jle
movsl
xlat
repz
xchg
dec
std
ds
iret
adc
or
adc
sar
xchg
add
cmpsl
cmp
mov
push
rcll
fistps
rcrl
inc
es
je
pop
mov
lods
mov
or
xchg
jno
sub
mov
stos
add
aam
jne
mov
jge
sub
out
sahf
mov
cli
ficompl
pop
xor
xchg
popf
dec
fistpll
cli
xor
push
adc
je
insl
xchg
mov
hlt
push
nop
es
cmp
movsl
dec
insb
sub
adc
xor
test
mov
xor
lods
cmc
jnp
repz
xor
vcvttpd2dqy
push
out
mov
out
xor
cmp
xchg
xchg
cltd
sbbl
adc
sbb
lcall
dec
mov
dec
or
movb
ljmp
xor
ror
push
inc
mov
bound
out
mov
push
xlat
aas
shl
rolb
pop
push
push
mov
xchg
hlt
pop
xchg
adc
jp
fwait
cmpsl
push
popf
add
push
or
push
mov
cmp
lcall
sub
inc
aam
fnsave
sub
xchg
cmp
sbb
xlat
sbb
or
out
test
cwtl
push
popf
lods
jle
xor
leave
cli
shll
push
pop
shrl
lahf
cmc
shlb
dec
push
lock
mov
jl
flds
xchg
push
sub
repnz
dec
and
adcl
xor
push
sbb
sub
outsb
push
dec
loop
xchg
jl
into
divb
jp
cmp
jno
shrl
hlt
cmp
js
add
xor
mov
fmulp
fisttpl
aad
or
or
into
dec
addb
sub
rorl
addr16
cmp
cmc
mov
adc
test
test
dec
out
xor
xorl
sbb
int
enter
clc
shlb
mov
pop
adc
pop
push
je
pop
inc
testl
push
lds
loope
fwait
pop
xor
insb
add
mov
lahf
cmc
repz
outsb
lahf
push
in
rclb
cmp
testb
xchg
push
icebp
nop
popa
rol
sbb
daa
mov
jp
lods
addb
test
mov
jmp
fdiv
push
push
cmpl
scas
xlat
pop
lds
add
movsl
shrl
jg
lret
sbb
enter
xor
xor
push
and
fidivrl
sub
xor
test
scas
mov
mov
or
xor
stc
hlt
pop
movsb
test
loopne
adc
gs
and
pop
and
pop
sti
mov
and
dec
inc
add
out
mov
mov
cld
gs
popf
pop
inc
sub
mov
test
out
fs
add
jge
mov
neg
push
jno
add
jae
decb
jbe
shll
xchg
inc
dec
es
sti
push
cltd
adc
xor
icebp
mov
clc
push
jne
add
test
xor
and
add
jl
cmc
std
dec
ftst
sub
cs
js
mov
cltd
mov
clc
adc
mov
call
ds
xchg
jnp
inc
mov
fsubrl
push
testb
or
pop
mov
aaa
sub
lahf
movsl
push
imul
push
xchg
jb
mov
test
fldt
jo
pop
iret
hlt
dec
pop
mov
xor
stos
pop
js
pop
and
out
sti
repz
loopnew
and
mov
mov
sahf
mov
js
movswl
addr16
jns
mov
out
xlat
outsb
and
testb
add
xor
sub
aam
outsl
jecxz
cmc
dec
fbld
sbb
test
outsl
mov
inc
shld
ss
int3
or
loope
or
xchg
sbb
or
sti
xchg
xor
testl
or
cmpsl
push
add
cmpb
pop
mov
jecxz
and
incl
xchg
push
mulb
mov
xchg
mov
les
sarb
jg
or
cmp
jnp
cmc
inc
loope
je
push
fldcw
dec
lods
mov
es
stos
pop
leavew
test
mov
test
push
int
lods
push
imul
je
pushf
add
aam
outsb
inc
es
pop
in
test
aas
daa
mov
out
inc
push
dec
add
lods
adc
inc
pop
jp
movsl
aas
dec
daa
mov
jo
mov
in
mov
shl
sbb
enter
jnp
and
xchg
sub
in
mov
and
arpl
loopne
ja
xor
mov
xchg
test
filds
adc
call
mov
arpl
idivl
jne
fnstenv
lcall
jl
add
test
aas
sbb
xor
das
bnd
arpl
xchg
pop
fistps
scas
data16
imul
cmp
mov
clc
dec
pop
or
lret
shll
push
add
inc
sub
jns
pop
aas
scas
stos
orl
mov
push
cmp
xorb
int
pop
sub
out
dec
fmul
jg
nop
and
cmp
fwait
sti
sbbl
adc
call
je
jae
pop
and
mov
xor
mov
jbe
cmp
movsb
add
mov
sbb
cs
mov
or
inc
mov
xor
fsubl
or
shlb
leave
mov
sub
mov
sub
out
push
sti
sub
xchg
andb
jbe
cmpsb
push
jo
shll
sbb
inc
cmc
jnp
dec
xor
fs
adc
or
test
jge
fstpt
pextrw
add
mov
lods
inc
add
or
fsts
rcrb
xor
jle
aam
call
incb
gs
pop
hlt
push
mov
and
pusha
inc
cmp
and
xchg
or
mov
xor
and
mov
cmp
popf
mov
xor
lock
cmpsb
adc
and
mov
test
sbb
iret
mov
add
push
push
sbbl
push
push
sbb
ror
push
popa
clc
cmpb
mov
aaa
aas
or
mov
push
and
add
pop
mov
fisubs
loop
jns
cwtl
jne
cwtl
mov
shrb
dec
mov
in
out
int
out
push
or
ljmp
sub
xchg
inc
push
xor
sub
insb
push
repnz
aas
add
mov
pop
repnz
pop
cwtl
and
xchg
mov
ss
dec
push
add
dec
pusha
cld
jae
and
and
les
daa
or
out
arpl
pop
dec
movsb
testl
mov
mov
mov
fldz
pop
das
outsl
mov
add
jmp
sub
sbb
fldl
mov
mov
jmp
mov
fstpt
loop
leave
cmp
sysenter
lret
cmpb
and
pop
xlat
adc
test
fcomp
inc
mov
mulb
mov
sbb
mov
lods
xchg
jo
mov
je
dec
mov
push
and
lock
cmp
mov
xchg
fcoml
cmp
stc
or
xlat
mov
addr16
sub
or
inc
sbb
je
pusha
xchg
xchg
jns
mov
imul
xor
mov
jge
xchg
add
arpl
mov
cmp
or
mov
jle
int
adc
sbb
push
cmp
jmp
test
lods
or
daa
xchg
mov
mov
popa
adc
mov
je
mov
inc
loopne
push
out
mov
push
rclb
enter
push
imull
ja
lahf
mov
xor
jl
sbbb
jl
in
xlat
test
push
shlb
cld
ljmp
inc
push
fldl
icebp
fs
stos
or
cltd
jp
sbb
jnp
lods
mov
divb
or
add
out
or
push
xchg
jp
jne
movsl
push
fcmovb
dec
dec
repnz
mov
call
xchg
xchg
jge
ljmp
enter
dec
call
popa
mov
mov
pop
hlt
inc
xchg
in
sub
jecxz
adc
push
add
cmp
std
jecxz
mov
ss
fstpt
loopne
mov
mov
divl
mov
cltd
lods
cmp
jl
rorl
xchg
add
in
fiaddl
mov
sbb
outsl
imul
mov
fwait
jbe
sbb
add
inc
xchg
jo
xor
dec
in
addb
sub
mov
push
dec
cmpsb
cmp
aad
cmp
movsb
ret
push
xor
enter
rcrl
aam
xchg
or
and
je
inc
mov
adc
outsl
mov
pushf
out
stc
popa
test
sbb
jle
mov
popl
add
lcall
in
push
clc
mov
jmp
cmp
jecxz
dec
aad
fistl
mov
inc
mov
les
pusha
add
sub
inc
enter
lret
std
xor
das
in
out
jo
dec
xchg
pop
fidivs
mov
xchg
or
xorb
pop
repz
jae
xlat
jp
xor
xchg
sbb
ret
and
jecxz
je
inc
cmp
jbe
out
xchg
xor
sbb
addl
xor
ficomps
dec
fisubrs
adc
addss
shlb
pop
or
stc
mov
leave
out
mov
mov
adc
sbb
outsl
movsl
jge
adc
push
stos
xor
jbe
int3
fisubrs
lret
cmpsl
mov
repnz
adcl
or
clc
in
ret
lock
jg
dec
mov
xlat
loope
ret
mov
sbb
aam
dec
sbb
add
loopne,pn
pop
sti
das
sahf
les
sub
pop
or
in
mov
push
mov
pop
int
fs
inc
push
xor
dec
mov
icebp
aam
lret
cltd
popa
or
sbb
sbb
xchg
mov
push
scas
sbb
test
mov
ret
iret
in
push
push
jmp
gs
lods
cld
dec
pop
sbb
cmp
stos
xor
leave
loopne
dec
test
leave
cs
ljmp
decb
int3
jo
push
push
jmp
mov
sbb
dec
fdivrs
fdivrs
lods
adc
inc
inc
jae
cmp
arpl
add
in
ja
mov
es
and
call
adc
inc
and
push
arpl
push
in
push
push
pop
mov
pop
sub
dec
lods
mov
lds
push
outsl
lret
cmpsl
inc
push
pushf
xchg
mov
cmp
test
dec
pusha
cmp
xchg
xor
pop
sbb
xchg
bound
movsl
push
inc
xchg
jbe
rcll
in
add
leave
ljmp
je
and
push
clflush
insl
xchg
movsl
fsubrs
outsl
mov
lret
push
fdivl
int
je
pop
out
inc
lahf
mov
push
sub
xchg
add
insb
sbb
test
or
mov
aas
adc
cmp
adc
dec
sub
mov
push
insl
shrb
mov
inc
in
cs
sbb
or
cmp
push
add
xchg
mov
inc
xor
pop
add
addr16
mov
outsb
jb
push
push
fnsave
out
jns
adc
cmc
mov
gs
cwtl
and
sbb
aas
xchg
mov
mov
loope
enter
add
mov
jne
dec
ljmp
jmp
aaa
out
imul
loopne
clc
pop
popf
aaa
arpl
inc
push
push
jo
fmul
mov
mov
xchg
cld
xchg
mov
fdivrl
insb
mov
scas
aas
jg
lds
iret
ds
loopne
outsb
sbbl
std
outsb
xor
dec
pop
and
fcoms
iret
in
int
fstp
mov
aas
jp
cmpl
ss
into
enter
cmp
sbb
cwtl
add
int
mov
dec
mov
fs
mov
add
jg
push
mov
aam
lods
dec
and
push
mov
mov
push
pop
jge
int
sub
pusha
push
xor
es
idivl
lea
mov
movsl
pop
ds
inc
lds
out
js
rcrb
mov
jl
fistpll
cltd
out
jae
mov
in
inc
inc
arpl
ret
sbb
mov
inc
cmc
shll
movsb
sub
mov
inc
stos
dec
lcall
scas
shrb
jo
mov
mov
fidivs
push
dec
xor
mov
in
cmp
insl
repnz
or
js
movsl
or
mov
jl
and
jns
jbe
and
ret
jg
fbstp
xchg
mov
or
cmpsl
pop
mov
dec
rolb
ss
mov
stos
mov
adc
outsb
push
sbb
mov
popa
roll
sti
nop
lods
ret
pop
mov
xor
cmp
negb
fildll
adc
cmp
xchg
sbb
scas
or
jns
test
dec
div
add
push
daa
sub
xchg
xchg
scas
lret
jbe
imul
ljmp
mov
ret
jo
and
add
push
aaa
cmpsb
sub
test
cli
or
jne
xor
rorb
sbb
jbe
push
cmp
sub
fxch
jmp
jl
xchg
xor
insl
fs
aas
insb
pop
hlt
movsb
add
xchg
jbe
jae
xchg
int
in
js
pop
int
loop
mov
gs
imul
push
mov
mov
cmp
into
loope
ja
out
and
sarb
jecxz
sbb
mov
mov
inc
xor
fs
inc
jne
repnz
lret
orl
sub
fincstp
mov
lea
mov
ret
outsb
call
js
mov
mov
filds
push
sub
dec
insb
mov
addr16
mov
pop
cmp
sbb
andb
or
pop
mov
shlb
stos
fsubr
or
and
cli
clc
in
sub
jns
enter
sti
fmul
fdivl
cmpsb
jb
fstpl
mov
cmp
lret
orb
rcr
cmp
jge
mov
jb
test
sbb
in
cwtl
daa
pusha
nop
jp
adc
push
jno
int3
cmc
orb
fsubs
sahf
ds
jl
inc
xchg
std
mov
and
dec
xor
cmpl
inc
mov
dec
or
mov
push
push
test
popf
adcb
add
sbb
mov
cmpsl
dec
aad
push
cmp
inc
andb
js
fidivrs
xchg
xchg
pop
iret
pop
inc
fmull
insb
fcmovu
sbb
arpl
bound
sbbb
addb
push
mov
enter
pop
bound
pop
mov
out
adc
shrl
mov
jno
shrb
jge
pop
xchg
daa
and
mov
cli
movsl
mov
call
and
rcrb
jg
scas
push
jb
jno
movsl
stos
inc
jns
std
xlat
push
outsl
adcl
lods
jge
test
int
aas
pop
dec
push
add
aam
xchg
movsl
cli
shlb
repnz
jmp
xchg
sub
xor
fbld
cmp
and
pop
add
subb
adc
nop
add
xor
mov
xchg
jmp
mov
icebp
add
pop
xchg
jp
or
sbb
inc
fwait
ror
int3
and
repz
mov
cmp
adc
inc
pop
xor
sbb
outsb
sahf
pop
jb
pop
insl
jb
jnp
push
mov
xchg
pop
pop
jge
mov
hlt
cli
xor
ffree
cwtl
outsl
pop
cmp
leave
or
xchg
icebp
push
movsb
dec
adc
insl
inc
rclb
add
leave
mov
inc
dec
lret
dec
enter
jmp
dec
lock
adc
jecxz
out
and
xor
dec
lret
aam
push
jge
rclb
pause
cmp
scas
std
les
dec
xchg
sub
stos
ds
add
xor
negl
rolb
cwtl
or
dec
adc
dec
fwait
loope
jb
adc
shrb
test
add
xor
mov
dec
nop
pop
inc
inc
out
sti
shr
mov
dec
mov
jecxz
xchg
repz
test
and
cmp
in
inc
rol
adc
jno
lret
cmp
fidivl
adc
hlt
or
jmp
add
dec
iret
mov
sbb
add
das
pop
and
sbb
jae
test
ret
rclb
dec
ljmp
pop
push
int3
aas
test
pop
sub
xor
add
xlat
lock
int3
sbb
push
andl
xor
lods
xchg
mov
push
pop
dec
pop
icebp
jge
in
fdivs
js
aad
push
testl
sub
dec
sub
fbld
xchg
add
dec
outsl
pop
popf
sbb
cmp
pop
cmp
add
out
add
outsb
das
sub
lahf
mov
rclb
push
out
iret
in
lret
xchg
push
jne
add
aam
cmpsl
cmp
inc
pop
mov
mov
arpl
test
loop
fidivrs
es
loope
and
jg
out
jecxz
push
sbb
sbb
cmp
das
inc
fsubl
outsb
popf
in
lds
addr16
sti
leave
xor
and
imul
insb
aas
push
outsl
pop
imul
inc
shr
jge
xor
enter
into
loope
daa
xor
mov
imull
popa
movsl
hlt
inc
popa
adc
movsb
daa
movsl
lret
push
xchg
xor
int3
inc
or
fmull
out
inc
pop
ljmp
push
fstl
out
in
mov
ret
out
cmp
iret
nop
shlb
aam
push
lahf
cwtl
mov
jmp
cmp
push
xchg
and
jp
adc
jbe
insl
mov
test
pop
adc
add
and
lret
aam
mov
pop
insl
clc
add
in
xor
and
in
adc
loopw
dec
adc
lahf
pop
sbb
es
adc
inc
data16
or
push
das
xchg
or
xchg
rclb
scas
push
fnstsw
addb
sub
xchg
lea
lea
xchg
pop
or
add
lods
and
dec
push
push
insl
or
jae
inc
and
mov
sbb
mov
mov
test
int3
mov
lds
jae
and
adc
push
outsb
je
dec
inc
movsb
pop
xchg
push
mov
jle
and
cmc
jg
nop
cmc
lods
dec
sub
addr16
dec
add
mov
and
mov
pop
pop
jge
stos
sahf
mov
jbe
add
push
ss
mov
data16
int
pop
xchg
xlat
mov
xchg
pop
shlb
in
mov
ja
add
xchg
sub
pop
arpl
cmp
shrl
insl
out
xor
xchg
mov
dec
int
je
cmp
cmpsl
lods
xchg
push
icebp
or
and
xor
lret
cld
xor
fimuls
xchg
fsubl
or
sbb
pop
adc
ds
scas
repnz
daa
cmp
add
xor
dec
mov
lods
sbb
sbb
and
loopne
push
insb
jg
and
mov
inc
mov
jg
adc
or
cli
rcl
aam
aaa
loopne
mov
push
push
jnp
aam
xchg
mov
cmc
dec
dec
mov
mov
clc
push
adc
xor
pusha
fs
scas
ret
imul
out
cs
push
std
insb
pop
sub
mov
sahf
pop
andl
out
les
xlat
pop
jle
rorl
mov
pop
add
xor
xchg
stos
repz
insb
mov
jecxz
pop
add
add
jo
aaa
mov
push
cmp
cmp
test
insl
rcl
adc
mov
xor
movsb
mov
xchg
mov
aam
movb
xchg
decl
adc
shrl
and
xor
shlb
or
out
or
dec
mov
sbb
movsb
adc
es
lds
int3
xchg
cmp
xlat
pop
xchg
xchg
dec
and
bound
fadds
rorb
sbb
hlt
mov
test
cmp
mov
dec
fisttpl
shl
hlt
fisubrs
ret
pop
and
xchg
enter
pusha
push
mov
push
add
mov
sbb
sub
pop
push
call
jg
in
lea
daa
add
add
jl
js
test
dec
jmp
aam
cmp
mov
cs
push
push
popf
addl
and
rcr
mov
out
int3
dec
push
add
and
into
out
lret
jl
xor
inc
test
out
lods
push
adc
fisubrs
popf
jmp
hlt
mov
mov
sub
sbb
push
cli
jmp
nop
jae
or
sbb
cwtl
and
movsb
rorl
insl
nop
sarl
lea
add
inc
loopne
jle
clc
ret
dec
fiaddl
xor
jo
dec
add
aam
mov
out
popf
jle
pop
mov
cwtl
pop
shlb
ds
xchg
ja
rorl
sbb
xor
ss
pop
add
and
add
pop
sbb
and
sub
pop
cs
inc
data16
push
ja
test
push
xchg
xchg
push
ret
mov
sti
xlat
sti
pusha
add
dec
cmpsb
mov
rorb
les
pop
imul
push
out
cmp
vpmuludq
stc
sti
adc
mov
sbb
sub
fdivs
dec
or
lret
data16
iret
push
cmpsb
ret
push
bound
or
aam
test
sarl
mov
lret
dec
mov
sub
xchg
or
mov
or
ja
lret
sbb
mov
sub
bound
shr
jae
into
movsb
push
ret
test
icebp
negb
jnp
bnd
sbb
aad
xor
je
push
nop
pop
mov
adc
movsb
push
imul
jno
jp
jns
pop
scas
jp
jns
xor
lds
mov
sti
fs
or
mov
jge
jns
add
negl
test
or
rolb
mov
lret
rcrb
mov
nop
dec
pushf
xor
loop
mov
mov
es
mov
in
dec
xchg
push
int
dec
jbe
pop
test
ja
dec
cmp
mov
aam
subl
shll
push
pop
stc
aam
jno
lock
sbb
test
pop
ds
loope
dec
repz
shrl
or
loopne
imul
popa
sub
in
mov
mov
add
into
cmp
push
push
shrb
mov
xchg
sub
inc
test
push
repnz
jno
adc
jmp
dec
push
xlat
out
sub
push
add
enter
xchg
scas
xchg
sbb
repz
xlat
push
pop
push
shll
jns
push
stos
push
jp
xor
mov
sbb
mov
test
mov
jmp
mov
popl
and
stos
jbe
subb
stc
lods
lock
repnz
jns
les
adc
pop
mov
rol
lcall
sub
cmp
xchg
adc
push
lock
insl
sub
ret
imul
xorb
stos
mov
and
idivl
into
out
dec
sub
inc
test
dec
lahf
stos
mov
lcall
loop
in
xchg
incl
dec
sbb
jnp
gs
mov
shll
mov
lcall
loop
jl
lcall
or
mov
notl
scas
addr16
mov
jl
mov
pop
xorl
pusha
add
data16
xchg
jns
add
sub
cmp
dec
or
sub
pop
mov
jb
mov
sbb
lea
mov
add
lods
add
pop
inc
inc
or
mov
add
add
cld
jae
mov
adc
xor
shl
mov
jbe
insb
lcall
aam
aas
push
inc
dec
cs
jle
int
test
loopne
movsl
arpl
rolb
dec
sar
jbe
jns
into
cmp
add
cmp
cmpsb
inc
push
adc
or
das
pusha
fldl
cltd
into
xchg
mov
add
jp
xor
js
xchg
ret
daa
enter
lea
fpatan
lock
sarb
fwait
push
js
lock
mov
cmp
aas
mov
pop
mov
ret
jg
sub
outsb
pop
imul
dec
mov
xlat
inc
jb
dec
cltd
fcompl
push
sti
in
or
popf
jp
mov
sbb
in
cmp
imul
in
out
jae
cmp
int3
repnz
inc
insl
pop
loope
xchg
mov
movsb
cs
lock
adc
nop
mov
aas
push
sahf
dec
daa
ja
arpl
push
insl
push
inc
push
lods
mov
xor
mov
rorl
fwait
push
or
jo
je
aas
mov
jge
stos
es
adc
jbe
fwait
lds
ror
std
cltd
jns
stc
inc
xchg
pop
sbb
mov
pop
xchg
inc
mov
cmpsb
mov
out
xchg
pop
add
xchg
sub
out
mov
mov
js
xchg
sahf
mov
imul
cmpsb
sbb
jle
insb
push
sub
andl
lcallw
dec
cmpsl
cmpsb
addr16
stos
fiaddl
scas
inc
int
lods
fstpl
mov
mov
imul
xlat
mov
call
mov
je
int3
xor
pop
dec
pop
fdivl
fstpl
jmp
sbb
mov
mov
icebp
in
outsl
daa
inc
jecxz
mov
out
mov
jge
mov
imul
scas
pop
andl
jmp
or
divb
int
pop
and
cmp
mov
dec
adc
xchg
sbb
leave
dec
push
dec
add
push
je
and
ss
xor
sbb
dec
push
stos
pushf
push
mov
xchg
test
push
xor
inc
stc
inc
popf
push
std
fs
pushf
mov
push
clc
push
or
stc
or
popa
iret
ss
and
sarb
xchg
xlat
push
test
add
neg
and
loopne
popf
call
in
pusha
mov
xchg
mov
adc
or
push
in
js
push
les
lcall
push
or
push
fwait
rcrl
push
lds
fmul
fdivl
je
ss
jne
test
jns
lock
mul
jmp
aas
sti
lea
dec
inc
push
or
in
sbb
outsb
dec
mov
push
adcl
movsl
faddl
push
push
push
movsl
xchg
ror
jecxz
adc
pop
movsb
push
jb
dec
and
dec
ret
mov
lods
push
cmp
ds
and
repz
xchg
mov
xchg
pop
pop
add
xor
gs
test
xchg
les
daa
inc
dec
fcmovnbe
les
push
ljmp
jno
sub
push
je
sub
adc
xor
sub
popf
stc
sbb
xor
outsl
lea
push
ds
push
mov
mov
daa
pop
or
cmc
cmp
mov
pop
aam
dec
data16
cmc
cmpsb
lock
daa
out
sub
lds
inc
pop
push
ror
loopne
shrl
mov
add
stos
ror
xchg
out
sub
add
cli
cmpb
xor
out
or
push
cmp
outsb
sub
pop
pop
cmc
and
push
mov
pop
in
push
sbb
ds
sub
lcall
fldenv
bound
cmp
push
cmc
jae
or
jp
mov
sbb
xor
xor
aam
scas
fs
pop
adc
sub
movsl
jnp
push
jp
sbb
int
stos
sbb
dec
loope
mov
cld
mov
icebp
dec
jle
xor
dec
or
pop
shrl
push
leave
sbb
jbe
dec
dec
mov
sub
mov
dec
mov
pop
lds
xchg
lret
sti
fsubrl
jmp
jge
or
faddl
add
stc
adc
jle
xor
jbe
in
pop
or
or
hlt
dec
lret
xchg
ja
test
xchg
mov
pcmpgtw
lods
cmp
mov
insb
es
movsb
xchg
dec
dec
pusha
mov
hlt
pop
sub
cmp
loop
and
les
mov
add
push
shl
and
aam
or
movsl
icebp
rcrl
push
lods
mov
mov
jmp
add
mov
rclb
jb
imul
mov
lret
jbe
dec
test
scas
xchg
std
dec
dec
push
jg
pop
add
lcall
inc
mov
test
shl
jne
add
mov
mov
loopne
add
ret
add
popf
call
mov
hlt
pop
mov
or
lods
pop
adc
or
sub
sub
adc
cmp
insb
lret
jge,pn
test
add
adc
mov
testl
xchg
in
loope
dec
add
aad
xor
cld
push
out
outsl
loop
nop
fldt
in
cld
icebp
outsb
outsb
fdivl
xlat
jno
mov
cmpl
push
stos
inc
fs
rcr
add
cmpsl
sbb
and
jbe
xor
cmp
adc
xor
adc
fsubrs
sbb
in
test
xor
fwait
pop
aaa
sbbl
add
xor
push
mov
aad
dec
mov
out
bound
dec
mov
jnp
sbb
xchg
test
jge
pusha
mov
mov
mov
xor
int3
cmpsl
mov
out
in
jns
inc
shrl
xchg
test
adc
mov
into
fmuls
faddp
loopne
mov
sub
mov
data16
bound
dec
jo
xorb
cmp
aad
inc
pop
xchg
repz
and
push
sbb
adc
jl
xor
sti
popf
insb
add
add
xor
sub
into
iret
stos
cli
sub
aaa
inc
mov
inc
out
pusha
xor
sahf
jecxz
ret
ljmp
jo
cwtl
mov
mov
push
xchg
mov
mov
out
loopne
outsl
test
js
sub
aad
mov
mov
dec
rorb
test
ret
and
jecxz
loop
add
and
add
pushl
stos
inc
fs
ret
pop
popa
sbb
pushw
out
mov
or
or
pop
xor
les
or
mov
mov
jmp
fwait
add
add
inc
pop
xor
mov
mov
fstpl
adc
js
dec
mull
add
aad
lahf
sahf
pop
shll
inc
leave
pop
jbe
inc
push
mov
hlt
mov
mov
mov
xchg
stos
xchg
xor
adc
scas
dec
outsl
inc
bound
mov
mov
xlat
mov
popf
sub
clc
std
loope
push
idiv
cmp
add
loope
add
cmpsl
jnp
out
test
xor
mov
mov
cmp
or
lcall
popa
jnp
testb
imul
mov
and
pop
and
dec
mov
popa
jmp
mov
jae
lea
push
xor
andb
dec
imul
imull
les
jb
mov
inc
sti
movsb
add
aaa
lret
jo
cmc
mov
inc
jl
in
jnp
push
incl
insl
mov
and
push
sarb
das
pop
pop
mov
ret
hlt
lcall
negb
or
popf
mov
pop
icebp
gs
popf
jns
xchg
notrack
add
jne
xor
cmp
xor
xchg
xor
sbb
or
or
adc
mov
cmp
cmpsl
arpl
int3
mov
mov
xor
bound
push
rcll
ret
sub
aad
mov
sub
int
les
sub
or
jge
imul
lods
mov
ficoms
jae
add
fldenv
xor
dec
mov
sbb
inc
adc
jmp
out
dec
inc
cmpsb
xor
sbb
pusha
add
cmpsl
jge
push
sub
push
lcall
inc
adc
or
push
xor
inc
jb
fdivl
mov
or
gs
cmp
lea
ja
xchg
mov
mov
in
adc
xchg
sub
pop
or
dec
fnstenvs
popa
push
jb
jbe
add
js
push
lret
xchg
sbbl
cmpsb
inc
jl
out
xchg
aad
repz
jb
hlt
xchg
add
insl
xor
jle
add
imul
mov
dec
andb
cli
xchg
sub
xchg
pop
fwait
addr16
mov
outsl
jecxz
cwtl
and
xor
ds
outsl
sbb
cmp
fwait
cmpsl
lods
pushf
lret
shrl
ficomps
lock
sbb
subb
mov
pop
insl
mov
in
cltd
adc
stc
inc
mov
ss
xlat
je
aam
push
loop
jae
popa
sub
xchg
clc
call
xchg
or
inc
leave
sub
cmp
dec
lock
xor
jge
test
lock
add
xor
lods
jnp
filds
cltd
mov
xchg
stos
or
xchg
xlat
sub
fwait
xchg
les
jge
pop
push
jns
lds
loop
xchg
outsl
or
in
cmp
mov
dec
loope
pop
mov
stos
pop
movsl
mov
jnp
dec
mov
shrb
push
xor
dec
fldl
fwait
and
and
out
pop
imul
or
sub
cmp
mov
cli
mov
inc
data16
out
arpl
pop
cmp
clc
push
sub
cmpsl
sbb
iret
loope
sub
into
test
jnp
and
testb
jp
jg
dec
test
cmp
xchg
sbbb
shrl
mov
or
dec
xor
inc
gs
or
push
mov
lahf
mov
push
mov
xorl
cmp
in
imul
shrl
std
addr16
iret
pop
xor
xchg
sarb
je
inc
add
add
sub
stc
loop
sbb
jp
test
add
andb
int3
sahf
aam
mov
adc
out
repnz
lahf
or
adc
mov
xchg
jmp
jmp
sub
or
clc
les
and
inc
push
or
xor
push
pop
mov
add
xorl
jae
lret
dec
stos
adc
cli
lock
andl
cmpsl
pop
sbb
pop
mov
data16
mov
sbb
cli
neg
outsl
in
cmp
push
shrl
mov
lds
sbbl
mov
repnz
pop
pusha
xchg
sub
imulb
mov
pop
rolb
xchg
jbe
cmp
in
xchg
sub
mov
dec
pop
jmp
xchg
push
les
stos
mov
pusha
pop
mov
mov
pop
loopne
test
rorl
jae
push
jo
add
addr16
jne
xchg
mov
jae
inc
pop
clc
push
addr16
pusha
adc
ss
push
add
es
mov
in
xor
push
lock
iret
inc
xor
test
gs
imul
cmpsl
shl
ds
push
sbbl
adc
and
push
mov
xorl
and
ds
jne
xor
xchg
inc
adc
stc
arpl
into
sbb
test
lods
jge
or
outsb
inc
adc
daa
mov
shl
push
lea
push
xor
shr
jmp
mov
inc
rep
sbb
dec
nop
jp
shrl
push
lods
inc
outsb
repnz
cmp
sysenter
push
dec
aad
test
lea
aaa
call
pop
sub
hlt
jnp
faddp
adc
fsubr
cmpsl
andl
icebp
enter
sbb
fs
les
in
push
insb
and
adc
rorl
cmp
dec
jae
mov
lds
dec
leave
push
inc
imul
sbb
or
cmpsb
jns
push
jno
cmpsl
fildll
pusha
call
xchg
xor
push
shld
adc
stc
test
dec
jecxz
xor
sub
pop
mov
cld
add
lret
cld
mov
imul
mov
ret
cld
jp
cmp
fwait
mov
lahf
imul
iret
in
decb
mov
dec
cmp
jno
jb
xchg
sbb
test
jae
cmp
mov
mov
iret
jg
bound
xchg
insl
push
sbb
fstps
and
pop
push
test
loop
loop
shl
sub
xchg
fs
cli
push
mov
cmp
cwtl
in
cmp
lcall
ret
mov
dec
cmpsb
inc
jnp
mov
cmpsb
sub
and
pusha
rcll
in
int
jbe
pusha
hlt
fldenv
ret
sbb
sub
into
add
ja
call
dec
push
push
fldenv
pusha
jp
test
lods
outsl
aas
lahf
adc
adc
ss
cwtl
inc
loopne
and
and
fimull
jmp
xor
xchg
popa
nop
mov
inc
add
xchg
sub
mov
sub
or
add
jle
outsb
outsl
add
test
cmp
repnz
adc
rorl
jno
or
sub
mov
cmp
xchg
nop
sub
ret
int
insb
loope
data16
sbb
mov
pop
inc
mov
call
lods
inc
cli
sti
enter
lret
icebp
popa
add
pusha
in
or
in
push
mov
sub
lods
xchg
icebp
inc
sarb
sbb
stos
adc
mov
ja
mov
inc
int
push
jecxz
inc
popa
gs
out
outsl
loope
lods
mov
push
mov
mov
dec
push
out
jns
scas
outsl
cltd
in
stos
mov
fsubl
fsubrl
pop
cmc
fsubrs
insb
inc
stc
jl
sub
sub
sub
repnz
pop
loop
fsts
das
dec
push
pusha
mov
pop
filds
xchg
sub
fmuls
inc
mov
mov
sti
jo
mov
mov
into
imul
and
and
jne
stc
ljmp
cmp
repz
jne
cmp
in
inc
mov
lock
jl
es
in
cmp
icebp
mov
jns
push
sub
sbb
xchg
das
or
add
xchg
pop
ss
shlb
jp
pop
mov
mov
fcmove
mov
movsl
xlat
fldln2
pusha
fisttps
adc
jne
push
movsb
push
scas
sub
xor
in
and
lcall
push
jl
or
push
mov
push
leave
fldenv
fsubl
push
pusha
scas
cltd
push
ljmp
inc
mov
xchg
inc
adc
rolb
in
sbb
out
inc
or
dec
mov
jg
xchg
cmpsb
jge
movsl
cmp
mov
adc
sbb
xchg
mov
frstor
mov
mov
jg
lret
shrb
aad
adcl
das
mov
dec
rcrl
mov
push
aas
xor
out
arpl
xchg
adc
mov
cmp
outsb
push
pop
sbb
aas
lret
inc
mov
push
iret
pop
dec
sub
sahf
in
je
dec
mov
dec
push
sub
adc
jp
lcall
scas
int
insb
scas
push
imul
data16
xchg
dec
leave
popa
xor
mov
addr16
in
jl
adc
or
xchg
cwtl
cs
mov
or
fadds
dec
mov
inc
aad
inc
pop
pop
sub
pop
xchg
push
stos
dec
jb
insb
mov
rorb
dec
shlb
pop
lret
jbe
mov
out
pushf
dec
xchg
jge
cmp
adc
out
aas
or
hlt
mov
add
out
mov
jbe
mov
jbe
ds
leave
sbb
jl
mov
push
xorl
dec
and
add
sub
aam
push
pop
sub
scas
sbb
inc
pushf
jb
std
pop
ret
sub
in
xchg
adc
xchg
movsb
lcall
push
jbe
mov
hlt
push
and
sbb
gs
into
sub
cmp
ret
jmp
lret
add
int
or
push
pop
dec
inc
mov
test
daa
mov
cld
mov
push
and
inc
xlat
pop
adc
mov
pop
adc
mov
jb
push
movsb
clc
xor
add
xchg
test
xor
sbb
jg
mov
fsubl
into
aad
mov
fidivrs
xlat
lret
sub
popf
pop
out
dec
cs
out
fdivs
fdivr
push
ds
es
daa
inc
jno
jne
jo
das
fsubr
push
icebp
testl
push
ret
filds
les
into
cwtl
jbe
aaa
pop
out
mov
leave
lahf
mov
std
xchg
daa
mov
pop
les
push
ret
push
push
sub
out
mov
dec
lock
push
mov
movsl
jmp
mov
sub
push
inc
cwtl
shlb
push
gs
andb
add
jae
push
add
cmp
sub
cmpsb
lock
push
jno
xchg
ja
fcmovnb
clc
idivb
lds
popa
lds
pop
adc
pop
pop
and
mov
push
add
repz
scas
and
stos
test
jo
loop
pop
ret
mov
add
dec
lock
xchg
sub
icebp
fnstsw
sub
rclb
fdivs
mov
aaa
push
imul
dec
push
pop
jae
sbbb
lea
cmpsb
mov
popa
mov
pop
sbb
popa
fstpl
fldenv
jle
or
cmpl
loopne
scas
xlat
pop
inc
sbb
add
enter
mov
sub
rorl
push
mov
xchg
xchg
daa
paddusb
ljmp
fcomip
std
mov
in
in
jns
mov
push
jmp
fdivl
outsl
jmp
inc
mov
pop
jg
push
jae
ljmp
pop
std
inc
ret
call
mov
out
scas
xchg
push
ret
mov
jb
les
adc
ret
nop
mov
in
fmul
popa
or
sub
outsl
test
int3
push
sub
xchg
xor
les
addl
mov
sub
xchg
pusha
aas
cmc
js
cmpsl
push
xchg
stos
fistpll
push
test
sbb
jne
stos
dec
repz
cli
rcr
movl
cmp
into
dec
lret
inc
lock
inc
movsl
arpl
sbb
aad
std
cmp
xor
lcall
data16
sub
mov
mov
pop
jl
call
cmp
add
or
and
ds
inc
pop
mov
rcll
cwtl
cltd
cmpsb
add
xlat
mov
pop
cwtl
fs
push
sti
mov
movsl
and
inc
sahf
clc
icebp
push
adc
pop
mov
adc
sbbb
dec
out
loope
sbb
inc
sbb
sub
fidivrs
adc
xor
bound
and
lahf
add
cltd
orb
fcoms
sbbl
sub
xchg
sbb
mov
add
cwtl
cli
sbb
jae
mov
cli
mov
outsl
lret
lret
lds
mov
mov
or
xlat
test
insl
in
mov
outsl
ljmp
outsb
inc
inc
popf
div
imul
pushf
adc
and
fs
test
out
sbb
push
lahf
sbb
inc
mov
inc
ficompl
fistpll
add
in
cli
cmpsl
cld
repnz
mov
and
outsl
bound
add
push
cmp
adc
adc
test
pop
paddq
xchg
into
xor
inc
ret
bound
out
cmp
dec
xor
xor
fistps
sub
enter
stc
loop
push
shll
jp
inc
sahf
inc
push
cld
mov
faddl
mov
ljmp
mov
fnstenv
xchg
mov
fsub
pop
push
ficompl
or
daa
push
cld
pusha
pop
or
push
sub
out
movsl
nop
inc
testl
jbe
pop
fcmovnbe
xlat
into
sbb
cmpsb
les
hlt
je
cmp
sbb
cmp
outsl
inc
test
arpl
sbb
push
push
ja
push
cmpsl
leave
or
bound
or
jae
push
cwtl
stc
je
push
icebp
adc
decb
lods
insl
in
xchg
xor
push
sbb
aas
movsb
dec
pop
sbb
mov
xor
cmp
out
test
and
lds
mov
out
loop
cmp
mov
inc
mov
sbb
scas
fnstcw
test
mov
pop
mov
roll
xor
and
jmp
and
loopne
fwait
push
push
test
rcl
xor
gs
xor
lods
xchg
sbb
inc
or
daa
ds
leave
neg
mull
jno
pop
sbb
dec
call
in
xchg
das
and
stos
test
mov
sbb
rcll
mov
push
shr
xchg
es
arpl
mov
adc
sarb
and
aaa
cmpb
xor
addb
pop
sahf
pop
adc
lods
mov
jo
xor
push
mov
pop
mov
cli
push
cmp
fisubs
adcl
cmpsb
ss
pop
adc
loopne
outsb
out
mov
shl
cmp
scas
out
fs
mov
xor
mov
mov
bnd
inc
fiadds
aas
mov
daa
fsubl
dec
les
xchg
adc
sub
das
mov
dec
cmpsb
cmpsb
popf
xor
aad
jne
jle
popf
scas
inc
sti
xchg
mov
sti
cs
sbb
daa
movsb
inc
pop
pushf
mov
lods
mov
or
sbb
or
or
mov
dec
jle
fildl
lahf
aam
cli
icebp
mov
out
insl
sti
dec
scas
or
dec
int3
xchg
or
sbb
pushf
push
movsl
inc
filds
push
fistl
mov
hlt
cmp
pop
fs
cli
xchg
push
pop
test
test
ljmp
in
fucomp
pop
mov
or
in
or
pop
inc
mov
mov
mov
or
fistl
xchg
aam
daa
sar
enter
pop
in
push
xor
mov
dec
hlt
or
pop
cmp
jmp
mov
into
in
daa
mov
jnp
inc
mov
aaa
add
mov
enter
mov
in
iret
add
sub
lcall
jo
enter
jbe
daa
jae
dec
or
sub
xchg
loop
push
fwait
mov
stc
or
sarb
pop
jne
mov
dec
pop
mov
mov
cmp
mov
push
aam
scas
aaa
xchg
adc
mov
iret
sbbl
mov
mov
pop
fisttps
test
or
fsqrt
add
pop
adc
test
ja
cmp
outsl
stos
or
int3
fldenv
adc
push
mov
and
xchg
aam
dec
out
daa
dec
fdivs
mov
movsb
xchg
lods
cmp
and
cmpsl
pop
mov
call
or
sub
mov
xchg
mov
fsubr
and
mov
repz
push
push
lods
adc
insb
push
imul
inc
in
jb
scas
nop
int3
arpl
iret
xor
sbb
outsl
loop
popa
xor
push
fisubrl
cmp
aam
inc
dec
cmp
push
inc
xlat
decb
leave
movsl
les
into
mov
cmp
loop
fwait
dec
mov
dec
jnp
mov
and
inc
push
sub
fsubr
dec
cmp
pop
push
fdiv
xor
sbb
push
fwait
push
test
ds
mull
lcall
sahf
addb
aad
lcall
insl
adc
leave
mov
jae
lcall
sbb
in
mov
push
mov
pushf
lods
stc
repnz
xchg
add
mov
mov
adc
sbb
mov
insl
or
pop
mov
add
xchg
sub
jns
lds
mov
push
sbb
gs
or
and
xlat
mov
lret
sti
jmp
scas
xchg
mov
mov
sub
pusha
mov
push
xor
mov
popf
mov
pushf
xchg
mov
ret
push
lret
adc
int3
in
mov
pop
scas
in
pop
mov
jle
dec
xor
clc
fwait
inc
rorb
movsb
pop
jg
into
mov
fadds
xor
or
repnz
push
das
mov
mov
sub
cmp
mov
adc
in
sub
adc
mov
push
stos
mov
dec
insb
inc
cld
sub
mov
xchg
leave
outsl
les
mov
mov
fs
adc
ja
push
stos
mov
lret
adc
clc
lcall
shll
or
pop
sub
adc
mov
das
xor
lret
lods
or
xchg
or
mov
pop
xchg
xchg
xor
jb
mov
stos
xor
sbb
leave
pop
bnd
xor
jnp
mov
pop
mov
inc
in
inc
js
fidivs
mov
pop
inc
scas
inc
ss
hlt
cmc
or
push
and
xchg
sti
fs
movsl
inc
fucomip
aad
push
jo
popa
sub
enter
and
in
in
dec
out
loop
sbb
xor
jnp
notl
mov
lahf
lcall
xchg
aam
sub
and
pop
push
sahf
or
mov
out
inc
popf
push
and
addr16
xchg
inc
sti
or
scas
imul
loope
arpl
dec
xchg
and
sbb
mov
xor
enter
out
pop
cmp
imul
cmp
and
imul
xchg
mov
push
push
andb
mov
ds
in
add
dec
ss
adc
pop
popa
cwtl
das
xchg
push
movl
sub
stc
push
lods
aam
add
sbbl
adc
clc
and
xlat
xchg
pop
imul
jae
cmp
insb
mov
push
jae
pushf
adc
outsl
je
lods
add
into
adcb
add
push
mov
test
daa
inc
and
or
xchg
sbb
in
repnz
and
inc
mov
mov
imul
cmp
orl
orl
cmp
test
aas
je
in
das
stos
gs
adc
add
sbb
adc
repnz
and
jb
sub
sub
and
decl
add
lods
jo
adc
jae
sbb
and
sub
or
shl
push
sbb
xor
data16
mov
push
out
xlat
mov
push
fdiv
insl
lret
dec
and
push
out
mov
fdivrl
cmp
in
inc
movsb
inc
jbe
adcb
xchg
dec
pop
test
mov
frstor
lahf
sub
ret
mov
adc
roll
cmc
push
shrb
repnz
bound
pop
xorps
add
stc
ja
push
testl
sub
es
mov
repz
mov
loop
stos
push
movsl
shrb
mov
ss
lcall
mov
xchg
mov
scas
movsl
cld
pop
mov
jp
cmpsb
push
dec
popf
pop
xor
pusha
pop
cmp
mov
lea
pop
mov
aad
inc
fldenv
loope
call
xor
mov
push
repz
adc
fmull
and
inc
call
jecxz
sbb
pop
fs
adc
xchg
jnp
jne
fstps
adc
je
leave
sbb
or
or
push
cmc
mov
insb
fildll
in
add
jnp
pop
jp
incl
cmc
int
add
out
dec
sti
inc
ret
inc
push
outsb
fcmove
das
arpl
cmp
testl
mov
cwtl
push
addr16
mov
aas
mov
lock
faddl
sub
fnsetpm(287
pop
and
sbb
lock
mov
mov
sbb
jle
mov
pop
or
shrl
jl,pn
popf
mov
pop
insl
hlt
sbb
nop
xor
mov
shrl
test
inc
lods
out
cmpsl
frstor
pop
dec
jns
popa
jl
push
insb
fbld
movb
push
push
les
push
out
cmp
mov
std
sti
add
or
or
lea
cmp
push
popf
lahf
mov
xchg
in
mov
jp
sahf
push
sub
pop
xchg
and
repz
lock
lods
mov
adc
jno
push
divb
xchg
xor
movsl
cmp
add
jbe
les
das
in
inc
xor
repnz
push
xor
leave
dec
xor
loopne
mov
mov
in
ds
in
mov
pop
xor
imul
cmp
adc
mov
jmp
or
mov
test
xchg
adc
adc
and
and
pop
push
cmp
mov
test
lcall
jbe
mov
cmp
adc
lret
fisubrs
in
sbb
dec
aaa
iret
push
push
call
out
cs
jbe
cmp
movsl
inc
in
cmc
lret
dec
or
push
xchg
dec
push
xor
cwtl
jmp
dec
xchg
adc
sub
in
fimuls
ret
mov
pop
fstp
iret
push
push
mov
add
cmp
push
sub
mov
mov
push
int3
fcoms
mov
rorb
sub
mov
xor
jge
ficoml
ja
sti
lcall
jbe
jne
cltd
jns
pop
adc
mov
xor
ret
pop
mov
sub
js
fs
out
mov
das
call
mov
lods
add
fadds
pop
adc
mov
dec
stos
pop
enter
mov
sti
stos
lret
fsts
insb
xchg
pusha
test
add
pop
pop
mov
mov
ds
dec
jns
sbb
cld
sbb
nop
daa
jae
or
addr16
scas
push
ja
icebp
adc
enter
popf
int
and
cmp
add
popa
add
std
adc
sub
inc
dec
pop
jbe
aam
outsl
jae
dec
mov
fs
stc
nop
lahf
call
lcall
sub
scas
or
lea
sbb
sbb
adc
mov
pop
mov
fs
jb
shrb
sub
test
test
xor
movsl
cltd
out
xchg
sbb
mov
cmc
push
mov
push
loop
ret
pop
or
sahf
shrb
clc
adc
and
std
rcrl
repnz
jecxz
leave
rorl
cmp
mov
sub
mov
icebp
jmp
push
mov
mov
mov
dec
ret
pop
jne
xchg
in
aaa
and
pop
jecxz
mov
sub
pusha
aaa
insl
popa
push
push
push
add
mov
pusha
sub
out
aas
jbe
in
mov
aad
out
cmp
pop
dec
arpl
outsb
pop
in
jae
addl
loope
xor
sub
xor
rcr
jno
or
popa
mov
adc
aas
cmp
push
lea
add
mov
add
fwait
outsb
add
ljmp
mov
test
dec
or
add
and
sbbl
or
cmpsb
jle
aad
adc
in
sbb
imul
cmp
adc
or
mov
js
xor
inc
mov
push
wrmsr
mov
aad
add
inc
adc
push
jne
ret
add
cmp
bound
dec
in
lds
popa
test
jno
push
mov
inc
movsl
mov
or
int3
outsl
push
lcall
outsl
push
call
push
jmp
and
mov
movsb
mov
sahf
push
cwtl
jo
xor
jle
test
and
sbb
mov
jle
shlb
xchg
stos
fucomp
fdivrl
jecxz
cmp
cmp
sub
into
fidivs
out
pop
stc
xchg
xchg
cld
inc
add
xchg
cmpsl
popa
es
outsb
mov
lods
pusha
addb
ss
cmp
mov
ja
adc
push
mov
je
pop
pop
sbb
lods
and
ret
cmp
jmp
fimull
cmp
sbb
test
jp
jns
ss
xchg
cmp
testl
fucomp
pushf
adc
scas
inc
mov
mov
pop
pop
adc
in
push
pusha
xlat
pop
ret
sub
ds
inc
nop
or
jl
rcl
jo
or
jno
mov
inc
dec
sbb
push
sub
sub
mov
out
mov
dec
fucom
inc
movsl
icebp
in
loop
jge
add
jns
lahf
test
out
mov
push
out
outsb
sub
pushf
pop
stc
pandn
cmp
icebp
repz
cld
ljmp
sbb
aas
orb
xor
or
repnz
xor
scas
call
test
sahf
imul
and
addr16
inc
rcll
inc
mov
lock
aad
mov
daa
mov
dec
test
fidivs
push
inc
add
popf
movsb
and
add
aad
adc
gs
inc
mov
xchg
daa
mov
std
test
popf
jnp
bound
cmpsb
push
test
icebp
xchg
add
mov
dec
outsl
xchg
lea
bound
lods
mov
iret
or
mov
mov
leave
sub
cmp
jecxz
push
stc
outsl
add
cmp
lock
xor
in
cmpsl
in
rcrb
or
dec
loope
mov
adc
pop
push
mov
test
js
mov
xchg
push
mov
jmp
cmp
add
xchg
popa
lcall
mov
jno
fs
inc
in
mov
mov
popl
mov
ja
repnz
mov
testl
push
stc
popa
mov
lods
mov
icebp
xchg
adc
aas
stos
inc
insl
popf
jge
dec
sbb
scas
mov
stos
xchg
pushf
pop
sahf
adc
mov
outsl
jne
bound
jo
divb
aad
push
mov
mov
test
dec
adc
mov
loop
adc
mov
movsl
fistpl
add
add
fldenv
inc
push
add
pop
mov
adc
ljmp
fimull
lds
pop
popf
rclb
loop
fisubrl
push
stos
add
jae
jns
out
lods
mov
out
jnp
xrelease
adc
daa
pop
repz
lea
xchg
adc
fidivs
push
stos
mov
mov
xchg
loop
sbb
inc
sbb
out
mov
push
popf
mov
pusha
and
mov
fcoms
lahf
lret
dec
ficomps
jae
daa
mov
out
imul
cld
mov
ret
sbbl
push
push
mov
dec
out
outsb
adc
sub
mov
call
insl
cld
push
das
lds
stc
adcb
dec
leave
pop
and
cmc
xor
push
jnp
movsl
mov
or
lret
fldl
pop
xchg
sub
shlb
fisubl
ds
sti
pushf
mov
arpl
cmpsl
cmp
mov
push
cmpl
add
mov
adc
jne
ret
sub
push
jecxz
notl
cmpsl
dec
loop
jg
adc
pop
mov
mov
out
cmc
mov
or
aaa
push
pop
inc
dec
pop
xchg
and
gs
jge
push
xchg
sti
nop
sub
leave
mov
adc
pushf
pop
mov
pop
testb
call
lea
mov
cmc
ss
cmpsl
xchg
jl
popf
xchg
loop
dec
mov
xchg
out
lock
xor
cltd
cli
and
addr16
xchg
ficomps
lea
ret
sub
aas
in
sbbl
push
lahf
scas
jo
jecxz
into
xchg
scas
sub
stos
add
imul
shrb
je
xchg
das
push
repnz
fwait
jbe
cmc
mov
cli
fistl
imul
inc
fisubl
imul
bound
mov
adc
sbb
mov
cwtl
hlt
push
arpl
fistpll
adc
loope
xchg
jg
sbb
mov
stos
cmp
jp
icebp
insb
xor
xchg
dec
mov
add
aam
jmp
jmp
push
mov
and
cld
daa
inc
add
fcomps
rclb
andl
cwtl
movsb
or
push
pop
mov
adc
jae
repnz
cmp
movsl
lds
pop
lret
xchg
cwtl
das
cmp
popa
xor
jg
or
mov
jno
dec
imul
gs
outsl
mov
add
mov
dec
xchg
rep
push
das
xor
sbb
lods
dec
stos
popf
push
sbb
xor
call
and
js
dec
and
and
lds
fmull
jmp
mov
loope
xchg
lcall
scas
push
bound
ds
cwtl
dec
push
leave
rcll
add
pop
xor
daa
mov
jbe
inc
cmpsl
je
in
inc
jns
fucomip
adc
pop
inc
andl
and
push
jecxz
jp
je
cld
outsl
xchg
fsubl
dec
stos
in
out
in
mov
push
cli
jne
add
xchg
jmp
call
mov
cmp
stc
lahf
pop
stos
call
jecxz
addr16
fwait
call
test
and
push
pop
aas
flds
inc
pop
sub
aad
mov
cmp
ja
jle
dec
lds
jl
sub
sub
jl
jl
mov
sub
sub
out
push
fcoml
jl
inc
jns
fmull
dec
sub
cmp
dec
xchg
bound
ret
ljmp
repnz
aas
xor
std
aad
push
lds
les
ja
mov
mov
mov
test
arpl
jne
insl
out
into
pop
sub
lea
mov
pop
in
enter
into
gs
jne
test
sub
in
mulb
insl
std
pop
push
pop
add
dec
sti
lahf
sub
rclb
cmpsl
xorl
sub
xchg
mov
mov
jle
mov
iret
cli
jo
sub
and
pop
in
daa
cwtl
xor
into
mov
in
add
mov
cmpsl
jge
mov
aaa
and
sub
adc
stos
cmp
inc
testb
outsl
adc
cltd
stos
enter
xor
cltd
dec
dec
cwtl
pop
scas
mov
iret
pslld
sbb
pop
addr16
les
aad
std
ljmp
movsl
popa
dec
fdivs
stos
inc
mov
jne
les
push
stc
xchg
addr16
mov
sbb
add
xchg
mov
nop
xorb
pop
fs
cmp
push
std
adcl
mov
jp
sub
add
mov
pop
jbe
insb
movsb
aaa
mov
mov
data16
movsb
out
xchg
cld
sbbl
jmp
lea
mov
lods
jmp
cmp
imul
lock
rcl
xchg
es
inc
lahf
hlt
mov
stc
or
and
and
lcall
ficompl
jbe
sti
stos
inc
fxch
dec
xchg
cli
leave
pusha
sub
out
mov
adc
push
jno
push
je
test
movsl
xchg
dec
and
sahf
push
mov
rcl
addb
xor
xor
bound
pop
jmp
jge
sahf
lods
xor
mov
xor
xchg
xor
call
mov
sbb
adcb
jns
mov
imul
pop
xacquire
cs
mov
imul
subb
mov
sub
mulb
mov
fstpt
repnz
and
adc
dec
leave
aaa
iret
push
cli
push
cmp
imul
mov
xchg
outsb
loope
cmp
sbb
push
insb
jle
jno
cld
negb
sub
and
popa
insb
imul
jge
pop
iret
sbbb
add
push
inc
gs
in
and
add
inc
dec
mov
inc
mov
out
push
test
sahf
sub
repnz
mov
addr16
xor
jmp
rorl
jbe
bndstx
into
out
in
or
mov
inc
stos
imul
dec
bound
or
loope
js
push
idivb
mov
shlb
pushf
stos
jbe
push
enter
sub
scas
mov
inc
sub
add
inc
push
leave
pop
mov
xchg
outsb
nop
imul
lods
mov
xor
ret
and
loope
jo
in
aas
testl
push
aad
add
repz
mov
ds
insl
rcll
lret
data16
jnp
in
mov
xchg
lods
fcmovnb
jbe
aam
out
ja
sbb
dec
cmp
xor
rorl
dec
shl
in
jp
dec
push
out
lock
sbb
psraw
and
add
js
or
scas
or
fistl
inc
fisttps
das
push
inc
loopne
pop
icebp
lock
mov
mov
loope
cltd
dec
cltd
and
lahf
ss
lahf
mov
cli
mov
mov
adc
dec
push
sub
sub
dec
fldl
andb
rolb
in
subl
out
test
fists
ret
icebp
mov
jo
or
cmpsb
dec
pop
fadds
sub
sbb
mov
mov
pop
xchg
stc
aaa
sub
insl
das
fiadds
inc
lahf
push
xchg
inc
pushf
xor
xchg
pusha
leave
out
push
inc
and
call
inc
decl
or
and
in
xlat
dec
imul
dec
lcall
sar
or
insl
mov
iret
xchg
cmp
int
fsubr
xor
cli
les
gs
es
mov
jbe
sahf
rol
in
xor
dec
ja
in
mov
sarb
stc
pop
outsb
sub
ja
hlt
pop
jne
lods
jge
data16
test
icebp
lock
pop
test
es
arpl
xor
cmp
inc
outsl
mov
cli
test
scas
aad
js
call
inc
lods
and
cmp
push
inc
std
orl
negb
rorb
jmp
mov
cmp
mov
adc
sbb
sarb
push
and
push
add
scas
pop
jae
fnsave
stos
test
and
scas
fmull
push
mov
ret
push
pop
mov
jecxz
and
jp
fcmovu
fwait
sub
xchg
test
jecxz
dec
inc
inc
mov
push
in
fildll
cmp
mov
psadbw
mov
scas
pop
cmpl
or
mov
stos
lahf
scas
fcoms
mov
push
inc
insl
cltd
sbb
mov
cmp
std
adc
aaa
sbb
cli
add
xor
decb
mov
sbb
mov
cmp
add
rorl
and
shrb
jno
inc
stc
sbb
mov
pop
decb
xchg
fsub
mov
mov
jle
mov
add
push
and
xor
aaa
adc
adc
ljmp
inc
sub
and
push
inc
xlat
pop
in
and
inc
xchg
sbb
shl
lahf
push
stos
cmp
xor
sub
and
cmp
push
in
fistl
mov
rcll
out
shr
repz
xchg
push
inc
mov
push
cmpsb
dec
mov
ljmpw
or
mov
inc
bound
ja
daa
mov
cltd
xor
mov
xor
ljmp
adc
imul
jle
push
inc
movsl
faddl
movsb
insl
inc
pop
sbb
fs
clc
gs
nop
flds
fs
mov
fsubs
pmaxsw
xchg
je,pn
add
repnz
arpl
gs
inc
xchg
into
adcl
mov
mov
notl
adc
or
je
or
sub
repz
lret
sahf
ss
fstpt
and
into
cmpsl
ds
inc
sub
int3
mov
inc
loop
mov
cmp
int
nop
cmp
repz
mov
rolb
mov
sbb
ds
bnd
repnz
or
sub
dec
fldcw
or
lea
stos
adc
adc
out
bound
ret
vpextrw
lds
in
lock
xchg
pop
daa
dec
pop
int
mov
pop
mov
and
jae
jmp
pop
dec
popf
mov
cmpb
mov
sbb
stos
ficomps
rorb
add
add
mov
xchg
popf
sti
jns
jg
and
adc
pop
lcall
and
cmc
lods
nop
push
scas
pop
inc
fdivrs
dec
sub
pop
and
xchg
inc
popa
sub
cmp
dec
out
pop
ret
iret
movsb
in
add
adc
push
sbb
mov
imul
mov
ljmp
cltd
js
insl
enter
test
sti
push
jnp
imul
pop
jno
cmc
mov
push
fs
jl
ret
ds
repz
ljmp
pushf
xor
xor
in
cltd
dec
dec
lahf
inc
jle
icebp
xor
xor
push
js
shrl
pop
arpl
cs
lret
lret
jbe
aas
aad
je
pop
test
ja
sub
lcall
jmp
mov
mov
mov
aam
push
mov
jp
xor
xor
sbb
cmp
xor
or
sub
jbe
daa
adcb
test
popa
cwtl
fists
add
les
inc
cmp
imul
popf
ret
inc
cli
mov
push
inc
insb
add
xor
repz
fistps
icebp
insb
jecxz,pn
outsb
dec
into
ret
out
popa
cwtl
das
xchg
aad
add
cmp
shrb
and
xchg
stc
pop
mov
gs
push
int3
pop
daa
jge
or
les
cmpsl
cmp
in
out
popa
icebp
nop
cwtl
das
ret
xchg
addr16
sub
sbb
movsb
mov
and
inc
jmp
xchg
mov
into
dec
test
adc
lret
or
mov
push
adc
add
inc
sbb
dec
movsb
inc
pop
pop
xchg
xor
ret
sub
mov
add
shlw
cmovne
push
aas
xchg
aas
dec
pop
js
or
dec
xchg
sub
lcall
sbb
pop
imul
xchg
mov
pop
mov
sbb
in
ret
lcall
in
sbb
in
imul
mov
add
ss
dec
fisttpll
stc
sahf
mov
sub
idivl
leave
jp
inc
and
xlat
sbb
ret
vpunpckhqdq
xor
fcmovne
fs
and
ret
outsl
fidivl
lret
mov
push
pop
push
dec
and
fucom
xchg
xor
and
addr16
cmpsb
bound
cmovle
cli
xchg
shll
leave
xor
add
outsb
loope
lods
push
or
pop
sub
mov
fidivl
in
loopne
or
test
das
push
jmp
mov
jne
popa
push
adc
inc
sbb
dec
xchg
inc
push
sahf
fimull
sti
pop
cmp
stos
test
cmp
xchg
push
add
cld
or
xor
xchg
pop
mov
jno
sbb
scas
inc
mov
js
fnstenv
ss
fadd
pop
lret
lock
dec
mov
pop
lret
add
scas
jae
pop
scas
test
xchg
sbbl
sbbl
hlt
pop
iret
data16
push
jmp
mov
push
pusha
jb
jecxz
movsb
xor
sub
mov
dec
orl
das
idivl
dec
loopne
push
adc
out
push
fdivl
int3
ret
inc
mov
aaa
dec
dec
in
ljmp
shl
push
in
jecxz
test
lods
sub
jae
lcall
int
shrl
cmp
inc
scas
jno
in
cwtl
pop
out
or
movsl
cmp
std
fbstp
cmp
mov
cmp
ljmp
xor
push
fsubrl
enter
push
in
and
stc
fnstenv
xchg
data16
ss
test
xchg
sub
insl
lahf
ss
roll
or
xchg
xor
and
xchg
stc
outsb
fisubs
or
jnp
jne
rcrl
data16
mov
pop
int
sbb
fisttpll
jo
cmp
cmp
cwtl
adc
fstpt
adc
je
into
sbbb
insb
test
or
push
fisubrl
in
pop
mov
outsl
sub
jae
stos
call
xchg
sub
inc
aad
int3
int3
call
pop
jne,pt
fbld
repz
scas
jno
and
stos
inc
movsb
stc
sub
sub
lock
inc
fimull
sbb
mov
pushf
call
dec
adc
into
gs
add
add
mov
shlb
jecxz
repnz
push
out
dec
jecxz
aas
test
lahf
sbb
dec
loopne
pop
cmc
mov
lcall
jo
push
mov
xchg
sub
or
jl
sbb
fidivl
xchg
or
out
adcb
cmpsl
sbbl
or
pop
in
test
xchg
lret
bound
xchg
sahf
ss
imul
scas
sub
mov
fisubl
ljmp
popa
leave
insl
sub
dec
aad
and
stos
fiadds
xchg
dec
add
mov
mov
adc
mov
mov
xor
cld
lods
shll
jmp
and
repz
mov
iret
inc
ljmp
popa
popf
mov
dec
repnz
dec
out
or
mov
jae
shld
test
imull
inc
jle
and
stos
ss
push
stos
lods
pop
dec
add
inc
cmp
ja
insb
ret
scas
test
cmp
ret
dec
cmpsb
sub
jnp
adc
js
test
jmp
sbb
sarb
xchg
push
testb
notb
add
leave
fnstenv
popf
or
pop
testb
mov
dec
pop
adc
mov
adc
jbe
cmpsb
inc
fdivrl
cmp
shl
and
in
addl
inc
push
fnstsw
vmwrite
ret
movsb
mov
pop
push
out
inc
xchg
inc
mov
adc
push
shl
repz
repnz
sub
nop
stos
loop
mov
int3
pop
scas
std
insl
sbb
sbb
or
sub
pop
je
cmp
je
test
lret
repz
push
inc
loope
out
add
lea
inc
or
std
iret
stos
aaa
pop
pop
jb
add
inc
jo
je
sbb
outsl
mov
bound
pop
or
cmp
push
test
inc
imul
in
lock
popf
push
imul
aam
push
jmp
lret
ficoml
mov
add
insl
test
lahf
jo
sbb
xor
js
outsl
in
stos
adc
cmc
out
scas
xchg
shll
jmp
popa
bound
stos
aas
xor
xchg
and
sbb
mov
lahf
push
testl
out
std
pop
popl
and
fwait
sub
out
pop
add
cmpsb
in
fsubs
add
mov
nop
mov
and
push
test
icebp
nop
mov
adc
and
fildl
push
js
aam
shlb
ret
in
data16
sbb
xor
dec
into
fdivrl
stos
sbb
movsl
cmp
inc
adc
addr16
sub
mov
loope
mov
aad
xchg
push
push
movsb
cmp
repnz
dec
inc
adc
sub
insb
sbb
xrelease
xchg
std
sbb
jl
fwait
sub
aas
mov
dec
mov
in
inc
cmpsl
scas
and
int
dec
jmp
xlat
xchg
loope
test
dec
jecxz
add
mov
dec
cltd
and
out
xor
lods
pop
dec
dec
mov
sub
jo
decl
xchg
popf
cld
popf
mov
jmp
std
xor
sbbb
lret
repz
mov
cs
jnp
aad
dec
or
pushf
xorb
iret
sub
cmp
cmp
cmc
jns
scas
jo
xor
pop
mov
cmp
adc
inc
cmp
inc
clc
mov
mov
mov
cltd
dec
adc
divl
and
inc
sub
jns
fistpl
test
bswap
jae
lret
shll
insl
mov
fxtract
addr16
out
mov
mov
mov
push
ljmp
sub
cltd
stos
mov
jmp
fcmovnbe
push
and
ja
add
testl
insl
dec
and
inc
inc
lea
xor
rol
xchg
inc
cwtl
sub
insb
push
mov
roll
xor
inc
loop
cwtl
test
pop
jge
xor
pop
ljmp
xor
out
push
fidivl
cmp
cltd
insb
int
aam
jbe
iret
gs
add
inc
add
loopne
pushf
jp
iret
push
dec
jecxz
lock
push
xchg
aad
add
into
pushf
adc
leave
fsubs
leave
fldt
dec
pop
sub
mov
lods
fcoms
mov
sbb
fisttpll
jmp
xor
push
pop
out
add
repz
lods
lret
data16
in
inc
pop
arpl
loope
push
jmp
or
icebp
mov
xchg
jbe
adc
icebp
adc
icebp
mov
push
ljmp
mov
mov
mov
out
push
imul
xor
sub
sarl
add
mov
movsb
data16
in
xchg
mov
les
aaa
mov
imul
dec
mov
sbb
insl
cwtl
dec
in
fdivrl
call
orb
and
addr16
dec
call
add
sbb
inc
mov
xorl
data16
in
cld
enter
sbb
iret
data16
sub
mov
mov
and
ret
hlt
add
push
cmp
mov
inc
imul
lods
cmp
push
inc
adc
pop
imulb
in
stos
mov
mov
dec
mov
sarb
mov
push
cmp
popf
inc
shlb
dec
add
push
pop
imul
aas
jns
inc
mull
ficomps
mov
cwtl
andl
cwtl
add
xor
les
test
popl
adc
adcl
repz
test
add
jl
int
shl
arpl
pop
jbe
push
sub
lret
mov
mov
das
dec
lods
add
pushf
ret
xchg
pop
xchg
dec
inc
out
aad
mov
mov
sub
mov
lcall
call
in
inc
adc
lret
sbb
pop
clc
add
mov
push
add
out
repnz
data16
adcb
roll
inc
fdivs
icebp
and
in
mov
xor
rcrl
daa
pop
sub
lea
sub
push
out
popa
leave
adc
inc
repz
mov
mov
test
mov
mov
sbb
and
mov
xchg
adc
mov
mov
dec
inc
mov
lods
jmp
jo
sub
jmp
mov
rep
ss
ficomps
xchg
sub
xlat
xlat
pusha
pop
aam
pop
and
push
cli
xchg
sub
int
psrad
scas
mov
test
ss
push
int3
pop
adc
cli
jne
lahf
push
nop
pushf
shl
sub
cltd
dec
jae
or
fwait
mov
cwtl
xchg
test
push
pop
shr
in
add
pop
mov
fucom
out
mov
repnz
xor
pop
sbbb
aam
aaa
add
ds
inc
imul
fistl
mov
mov
pop
add
or
cmp
iret
and
or
shrl
loope
sub
jge
inc
push
push
push
aaa
adc
mov
push
push
xlat
xchg
repz
and
enter
mov
xor
sbbb
xchg
or
test
gs
test
xchg
mov
pop
and
xlat
xchg
sarb
or
ja
sub
in
stos
psllw
cmp
loope
roll
in
cli
rcrb
out
ss
popa
dec
xchg
fisubs
movsl
loope
into
xor
xchg
bound
mov
popf
or
je
mov
sbb
adc
adc
mov
inc
push
xor
pushf
gs
dec
pop
out
outsl
lret
jnp
pop
xor
mov
pop
loope
mov
jnp
adc
mov
sbb
add
mov
daa
jg
xor
xchg
sub
push
cmp
mov
jo
add
fs
fisttps
cmp
dec
cli
xchg
dec
pop
mov
or
add
or
mov
xchg
cmpsl
adc
cmp
gs
stos
jne
fldt
or
je,pn
popa
fisttpll
sub
dec
sahf
test
cmp
cmpsl
xor
rol
ljmp
scas
inc
loope
pop
adc
push
bound
fidivl
jo
ljmp
mov
test
mov
stos
dec
js
xchg
stos
imul
pop
fadds
jl
sbb
shl
mov
jl
ds
stos
add
frndint
mov
mov
fistl
push
pushf
and
cmp
mov
sbb
push
sbb
jb
mov
out
sahf
or
dec
sti
mov
imul
loop
loop
mov
sbb
loope
movsb
insb
push
jmp
xchg
mov
inc
fldt
mov
enter
cmp
pop
sub
xor
hlt
repz
mov
out
adc
dec
sbb
cmp
pop
ja
jge
sbbl
sti
dec
pop
cs
sbb
pop
hlt
ja
mov
and
sub
inc
fstpt
orl
add
pop
mov
push
out
test
and
jecxz
or
cmp
xor
or
insb
dec
and
out
add
movsb
xlat
pop
je
psllw
push
icebp
adc
xchg
push
leave
add
addr16
stos
pusha
arpl
pop
lret
mov
sbb
or
sbb
outsl
lret
jb
lahf
push
jo
popa
lret
lret
and
jnp
xor
mov
fldl
insl
add
test
mov
lahf
dec
sbb
lret
insb
jne
cmp
call
mov
add
ljmp
pusha
inc
popa
ret
sahf
jns
add
scas
test
popf
pop
dec
or
inc
mov
popf
bound
popa
mov
mov
stc
pop
negl
das
aad
pop
mov
dec
pop
cld
lock
mov
adc
pusha
xchg
sub
stc
loop
ror
int
push
adc
jne
pop
out
rclb
jb
jno
jne
dec
arpl
scas
cwtl
test
leave
xor
in
aas
inc
push
mov
into
into
push
inc
call
into
enter
dec
int3
inc
divl
push
sti
dec
out
sub
inc
pop
xchg
and
push
mov
mov
add
lds
add
adc
loope
daa
mov
lret
jb
int3
dec
xchg
rcll
and
jge
clc
cmp
scas
cmpsb
jg
mov
add
mov
clc
and
xchg
add
dec
int3
or
lods
push
repz
pop
cmp
nop
out
hlt
mov
loop
pop
stos
out
out
inc
out
dec
adc
mov
add
in
arpl
subb
loope
ja
inc
mov
leave
push
cmp
cld
ja
movsb
cmp
and
cmpsl
cmpsb
inc
sbb
cld
cmp
popa
mov
xor
jg
icebp
pop
sti
xchg
xor
push
ffree
inc
repnz
jmp
jmp
lea
add
mov
mov
outsl
repz
inc
sahf
sti
push
mov
addr16
lds
into
mov
mov
ret
sti
ficoms
inc
loope
je
cmpsl
cmp
out
call
jo
inc
cltd
cmp
sub
scas
call
je
test
pop
lods
push
ret
sti
cmp
lret
push
mov
rcrl
sbb
pop
xor
and
mov
jmp
and
jno
xchg
mov
or
jnp
inc
add
in
imul
mov
mov
jecxz
aas
or
pop
xchg
push
pop
xchg
imul
dec
push
or
jb
sub
mov
lret
loopne
push
mov
push
mov
jg
out
mov
add
test
mov
push
mov
xor
add
xchg
stos
leave
fnstenv
leave
push
out
adc
rol
rcrb
mov
test
lock
add
fucomip
pop
and
or
mov
xchg
in
outsl
inc
movsl
or
pop
subl
or
mov
inc
sub
and
dec
mov
and
mov
pop
jo
dec
and
in
ret
mov
shrl
aam
push
mov
stos
fdivs
hlt
xchg
call
xor
xchg
rorl
pop
mov
or
hlt
or
cs
flds
fldl
xchg
add
in
push
sbb
cs
jbe
loop
aam
push
lds
and
jbe
out
mov
cld
hlt
test
xor
adc
and
lods
cmp
inc
jg
cld
in
push
addr16
mov
or
fcoms
push
xchg
xchg
sub
mov
cmp
mov
push
orl
and
ret
jb
stos
adc
xchg
xor
cmp
ja
xor
jmp
push
xchg
pop
mov
in
cs
jecxz
nop
sbb
sbb
jb
aaa
loopne
mov
sub
clc
mov
les
das
dec
mov
sbb
das
ret
xchg
stc
jp
xor
pop
jo
mov
cmpsl
sub
xchg
adc
ljmp
pop
mov
fwait
fs
and
xor
inc
outsb
pop
gs
lret
lret
cmp
addb
in
shrl
movsl
leave
add
xor
lahf
fstps
cltd
inc
out
rcrb
pop
xor
sbb
lds
adc
adc
shll
lret
add
in
xchg
mov
add
or
and
jne
in
test
notl
fdivrl
jnp
cmp
xchg
test
push
mov
mov
mov
mov
mov
push
push
or
jg
ljmp
mov
loope
jne
pop
push
imul
flds
and
add
adc
inc
sahf
cmp
mov
repnz
in
aam
das
push
cwtl
xor
fisttps
stos
fcompl
outsb
test
scas
lock
and
and
adc
pop
imul
and
pop
dec
mov
push
repnz
mov
daa
cld
push
test
push
jb
lods
mov
das
push
mov
dec
dec
mov
dec
xchg
lret
mov
fsubrl
leave
cmp
lret
sahf
xor
push
addr16
ds
add
sbb
clc
dec
or
lret
push
mov
push
mov
mov
mov
js
cld
ret
jg
xchg
sbb
and
rcrl
cmp
xchg
mov
in
insb
fidivrl
pop
ror
shlb
cmp
sub
mov
movsl
js
fdivs
mov
pusha
jnp
cmp
bound
repnz
movsb
aaa
leave
sarb
sub
adc
movsl
sub
mov
dec
pop
sub
push
jnp
cmp
test
add
std
mov
cmp
lcall
xchg
outsl
dec
cmp
imul
add
cltd
push
fstl
sub
dec
fistpll
jo
insl
rcrb
pop
fidivrl
dec
mov
popa
fcomps
or
repnz
add
dec
movsb
repnz
test
mov
inc
mov
imul
dec
and
lea
cli
mov
jnp
call
andl
out
es
jl
call
dec
das
cli
pop
pop
pop
dec
and
sbb
cwtl
push
inc
dec
mov
ja
pop
push
call
int
push
sbb
cwtl
jae
lods
sub
fsubrp
aam
xor
loope
loopne
inc
push
sbb
das
into
xor
inc
pop
loopne
nop
popw
mov
aam
dec
pop
adc
dec
mov
call
or
add
aam
in
stc
jb
push
push
das
aam
bound
adc
in
push
xor
ds
jb
dec
pop
adc
es
dec
es
inc
pusha
mov
rcrl
popl
jg
test
shrb
movsl
push
sub
push
inc
popf
stc
out
aas
popf
daa
push
adc
test
inc
or
push
inc
loop
xchg
push
data16
nop
sbb
movsb
lea
lods
imul
mov
and
mov
xor
lret
aaa
mov
ljmp
xor
loopne
ficompl
mov
add
mov
mov
out
xor
inc
loope
mov
mov
cs
test
or
and
push
xor
mov
cli
and
mov
push
loop
and
sub
push
mov
or
adcl
lret
xor
add
test
andb
frstor
iret
mov
fsubrl
fidivrs
call
cmp
gs
sub
add
adcl
and
hlt
loop
lea
or
pop
leave
imul
mov
popf
xchg
sbb
enter
mov
divl
cmc
mov
push
adc
test
es
and
les
mov
mov
jge
decb
and
int
cs
ficompl
mov
ret
inc
pushl
aaa
pop
outsb
xor
xchg
ja
sub
xchg
inc
outsb
cli
and
fcomi
pop
sub
loopne
mov
aaa
mov
adc
cmpb
mov
sahf
imul
das
pusha
negl
fnstcw
push
test
jl
pop
inc
das
adc
jg
ret
mov
jl
and
or
jecxz
xchg
mov
outsl
insb
iret
loope
dec
cmpl
sbb
sbb
adc
mov
lcall
pop
fxch
xor
repz
add
popa
push
mov
sti
push
sbb
stc
addl
imul
dec
add
mov
cld
enter
dec
inc
ja
int3
loope
rol
jle
or
outsb
dec
loope
out
or
jg
push
cmp
js
popa
stos
js
cwtl
mov
lret
dec
cmc
jae
pop
div
test
and
jge
push
mov
or
and
cmp
mov
or
pop
test
sub
push
mov
fnstenv
xchg
pop
icebp
mov
sarl
xor
lcall
jmp
mov
out
push
test
lcallw
xor
jne
and
push
push
adc
fmuls
or
mov
xchg
mov
lahf
push
addr16
cltd
bound
sbb
sarb
push
push
jo
mov
mov
pop
sub
sbb
or
stos
data16
outsl
push
add
jne
fwait
ret
clc
sbb
xor
adc
loope
mov
aaa
ljmp
in
inc
dec
lahf
das
sti
jno
outsl
int
cmp
in
fisttps
xchg
cmp
callw
lods
hlt
mov
vpshufd
mov
lahf
pop
mov
adc
test
lcall
push
cmp
dec
andb
lcall
pop
mov
imul
rcrl
xor
add
mov
mov
lcall
ret
mov
mov
aaa
fwait
push
out
fdivs
insl
cmp
push
mov
mov
cmpsb
and
add
pop
fiadds
aaa
out
movsl
mov
frstor
mov
notb
fistpl
out
and
push
shrl
lcall
dec
jne
xchg
mov
xchg
mov
jns
cmp
cmc
mov
into
leave
mov
jge
add
xchg
adc
fimuls
negl
or
sub
nop
jns
int
mov
stos
daa
pop
jl
xor
and
or
or
pop
push
lret
mov
add
inc
and
sub
xchg
sbbl
mov
std
inc
inc
jmp
sbb
pop
cwtl
cmp
scas
fsubrp
sbb
or
mov
mov
mov
xchg
daa
shlb
jg
jle
jae
pushf
arpl
fstp
push
mov
push
test
inc
sub
inc
popa
test
sbb
jp
jecxz
cmc
lock
cmp
mov
movsl
mov
pushf
lods
jp
cmpsl
sahf
lods
xlat
loope
and
and
adc
ds
test
dec
movsl
push
xlat
es
dec
mov
dec
push
psrad
outsb
xchg
sub
sub
mov
mov
sub
fcom
lea
xchg
clc
and
jge
adc
mov
ja
adc
pop
mov
pop
cmp
push
and
xchg
xlat
mov
pop
and
das
xor
push
negl
into
aam
mov
push
insl
add
sub
scas
mov
imul
inc
outsl
mov
out
stos
insb
push
sbb
jbe
jmp
add
lret
pop
and
push
pop
repz
in
mov
popf
mov
test
ret
loop
jne
add
adc
and
jae
test
cmp
stos
test
lret
xchg
sti
mov
push
mov
and
mov
jae
leave
and
or
adc
adcl
clc
int
icebp
movsl
mov
mov
or
dec
outsb
xchg
in
sub
cmpsl
or
pop
in
out
ror
push
jb
aaa
into
mov
add
out
mov
jbe
xchg
rcrl
adc
fadds
add
push
sahf
int
pop
lcall
inc
out
lock
xor
rcll
ss
in
aaa
lods
inc
inc
fbstp
mov
insb
cli
icebp
mov
push
or
or
mov
mov
test
cli
subl
jmp
adc
in
stos
jne
fisttps
add
cmp
testl
addr16
jmp
cmp
jns
aas
cs
sarl
mov
push
in
mov
push
add
test
je
fsubrs
jb
xchg
mov
daa
nop
cmp
outsl
mov
dec
idivb
hlt
mov
jo
add
adc
mov
dec
inc
sarl
xor
movsb
xlat
mov
sbb
outsb
inc
les
push
and
mov
mov
xor
je
stc
push
push
out
adc
jl
popf
push
and
jg
adc
sti
ds
mov
dec
cmp
incl
jno
and
dec
loope
test
hlt
sbb
imul
loop
dec
scas
test
mov
fwait
cmp
repnz
mov
mov
dec
and
pop
std
cmc
daa
lahf
subb
or
loopne
pop
popf
popl
fistps
hlt
adc
arpl
mov
push
sub
imul
ret
xchg
add
mov
or
add
adc
jg
movsldup
shl
mov
mov
inc
bound
xlat
mov
ljmp
jb
mov
fs
sahf
mov
inc
cmp
jle,pn
hlt
sahf
icebp
test
add
pop
fs
pop
push
subl
hlt
test
cmp
mov
mov
nop
scas
mov
mov
lret
dec
dec
mov
pop
cmp
insb
cli
xchg
lahf
shll
sub
mov
enter
insb
rolb
jne
sbb
fsts
pop
adc
inc
inc
cmp
add
and
push
mov
xchg
mov
dec
insl
mov
jg
xchg
dec
and
fadd
xor
sahf
cmp
cltd
je
fscale
inc
and
cld
dec
cs
subl
inc
fsubrl
cltd
int3
push
mov
test
push
es
fdivr
movsl
cmp
jecxz
clc
repz
mov
repz
scas
popa
pushf
iret
mov
loopne
test
mov
icebp
push
hlt
movsb
cmp
push
cwtl
aas
ja
repz
jo
mov
fs
dec
movsl
lock
test
sub
add
dec
mov
out
ljmp
add
fwait
push
mov
pop
pop
lret
int
loope
rorb
shlb
xor
dec
xlat
cmp
out
push
data16
enter
pop
and
decl
stos
inc
cmp
shll
or
cmp
adc
hlt
sahf
dec
mov
mov
jmp
add
clc
adc
fistpll
imul
mov
out
pop
and
add
dec
and
enter
mov
orb
sub
mov
jae
jne
sbb
jge
or
mov
ss
inc
stc
ja
xor
sbb
arpl
nop
mov
ret
lea
jb
adc
jo
es
scas
sbbl
add
xchg
ret
xor
out
mov
imul
popf
enter
clc
push
repz
lcall
lcall
or
dec
dec
pop
push
aaa
das
loopne
inc
adc
aam
cmp
fisubrs
imul
cli
in
mov
fcoms
jg
jecxz
mulb
inc
sub
mov
enter
mov
les
xchg
in
out
cld
inc
fisubrs
cmp
ss
cs
mov
stos
mov
adc
mov
mov
adc
arpl
mov
and
jle
push
push
ljmp
cmp
lock
rclb
pop
add
movsb
movsb
add
mov
iret
imul
lret
sbb
std
sub
clc
cmc
ss
jecxz
pop
andb
pop
popf
add
dec
decb
jl
jns
sub
subl
rclb
or
aad
and
push
insl
mov
test
in
mov
movnti
xchg
pop
repnz
icebp
xchg
data16
sti
popa
push
std
xchg
in
mov
add
ret
pop
lcall
cwtl
jae
mov
fbstp
pop
imul
adc
xchg
mov
fwait
fs
rclb
adc
inc
out
xchg
out
lds
nop
inc
and
push
mov
insb
pop
pop
flds
mov
enter
dec
xor
lahf
ret
ljmp
insl
jnp
aas
insl
cmp
add
xchg
fwait
test
sbbb
insb
aad
aas
loop
jno
ss
ja
sub
dec
dec
in
into
xchg
out
jbe
cmp
cld
js
pop
dec
adc
adc
inc
fiadds
jo
mov
testl
fisubrs
fdivs
sbb
or
fdivp
jns
fwait
sbb
aas
in
cmp
sbb
ds
or
out
mov
push
jne
jae
push
jo
daa
clc
aas
jno
mov
mov
xchg
cltd
je
xor
bound
fcmovbe
das
mov
dec
out
xchg
scas
jmp
jmp
icebp
fsubrs
and
xor
cmp
and
or
repnz
scas
push
and
adc
movsl
xor
dec
outsl
mov
cmp
push
cmp
jo
aam
adc
sub
mov
out
rcll
mov
sub
test
sbb
rcrb
lahf
loopne
rol
fsubl
pop
in
sbbb
sahf
dec
mov
push
add
cltd
das
adc
ss
mov
jp
add
or
jns
jmp
mov
cmp
mov
scas
sub
out
aam
fldcw
mov
dec
mov
mov
push
call
jmp
bound
mov
push
push
push
cmp
fbstp
cwtl
outsl
ret
sub
dec
add
mov
movsl
mov
xchg
xor
ret
pop
sub
pop
jnp
into
sub
xor
cwtl
dec
push
das
repz
dec
stc
lods
dec
test
in
rcrb
jne
xor
scas
push
jns
lret
sti
xchg
add
mov
ret
jno
pop
ja
movsb
jecxz
je
xor
add
idivb
gs
pop
imul
inc
bound
pop
outsl
lods
pop
mov
adc
jl
sti
popa
xchg
insl
aas
cmp
pushf
pop
adc
test
fldl2t
std
fdivrs
ror
outsb
or
xlat
jb
mov
jl
jle
add
insl
lds
jb
stc
push
addr16
xlat
test
pop
sub
xchg
fwait
jb
leave
push
mov
and
adc
clc
adc
cs
xor
cmc
idiv
inc
lods
ret
sub
shr
repnz
cwtl
arpl
mov
out
lcall
sahf
enter
sub
adc
scas
dec
pop
fstpt
sbb
xchg
sub
aad
or
and
sub
scas
mov
xchg
inc
cmp
add
insl
aaa
ja
imul
cwtl
mov
divb
mov
push
out
in
addr16
adc
jecxz
mov
sti
aaa
jp
xchg
shll
pop
pop
call
mov
dec
dec
pop
pop
gs
subb
popf
jg
sarl
jmp
jns
pushf
popa
pop
fistpl
aad
popa
enter
cltd
das
mov
xor
add
loopne
jae
outsl
loop
test
jle
lcall
pop
mov
nop
adc
or
cmp
cmp
fisubrs
push
les
dec
adc
and
fst
sbb
push
shl
aam
roll
movl
xchg
add
jo
fimuls
cmovnp
aad
scas
mov
test
push
inc
jnp
addl
int
jle
inc
fiadds
sbb
add
cmpsl
gs
mov
add
stos
xchg
or
sbb
dec
sti
cltd
push
sbb
push
nop
add
xchg
and
inc
dec
popa
call
mov
outsb
sbb
fidivl
xor
add
or
mov
pop
xchg
push
lcall
add
andb
aas
test
mov
int
push
js
ficoms
dec
jns
shlb
pop
xchg
sub
inc
push
mov
cld
mov
inc
adc
daa
and
adc
mov
imul
push
inc
add
xchg
fcmovu
inc
test
rol
cmp
jmp
push
mov
imul
jmp
xchg
test
xchg
fldcw
mov
inc
sub
lret
sti
inc
lret
xchg
pusha
pop
mov
and
cwtl
jmp
outsl
jmp
mov
in
sub
test
lahf
pop
jecxz
aad
jp
cmp
cmp
mov
imul
rorl
mov
inc
popa
sbb
nop
sub
adc
jns
imul
mov
rcrb
mov
push
movsb
addr16
jmp
cli
into
pop
fcmovnu
repnz
dec
cwtl
scas
cltd
mov
add
int
insb
pushl
shl
sub
roll
xlat
in
inc
xchg
sti
jp
xor
cmp
pop
jecxz
sub
test
cmp
inc
sbb
popf
jle
pop
mov
ljmp
xlat
call
and
cmp
imul
pop
into
dec
or
hlt
mov
call
and
inc
or
xchg
out
xor
push
inc
clc
stc
push
xchg
movsl
sub
aad
cmp
jle
pop
sub
daa
mov
pop
shll
mov
push
or
outsl
mov
das
inc
test
add
mov
mov
jmp
lods
in
inc
push
xchg
pop
int
add
mov
mov
iret
push
mov
dec
push
aaa
jp
clc
mov
js
sub
mov
lcall
dec
and
sub
lahf
hlt
fnstsw
sbb
dec
dec
outsl
loop
call
test
jg
cli
nopl
test
orl
cmp
aas
mov
or
jp
clc
jns
fadds
popl
fdivrs
mov
pop
mov
int
and
jecxz
mov
fistl
push
enter
aam
sub
lahf
daa
in
jno
xor
in
mov
inc
popf
test
cwtl
test
test
fs
mov
cwtl
decb
ret
jb
cmp
ss
rcrb
sbb
outsl
mov
xchg
jo
std
test
pop
movsb
ds
out
in
push
insl
jge
outsb
rcr
or
loope
cmp
mov
push
mov
lret
aad
cs
nop
sub
rorb
inc
jg
and
xlat
rorl
addb
out
xchg
lret
push
jnp
lahf
sub
fldcw
lea
push
mov
adc
add
icebp
test
imul
out
jecxz
stos
mov
mov
call
mov
push
int
mov
icebp
adc
jl
push
rcrl
addr16
repnz
xchg
or
lds
fiadds
jecxz
add
cs
pop
mov
std
lret
daa
xor
ret
repz
stc
xor
cmp
imul
sbb
dec
rorl
fisttps
cld
adc
sbb
imul
popf
aad
inc
mov
aas
pusha
dec
mov
repnz
xchg
fwait
sbb
mov
mov
daa
int3
cmc
nopl
xor
pop
imul
mov
pop
jae
int
xor
je
leave
insb
xor
jle
shlb
inc
push
sub
addr16
cmp
aam
jo
mov
mov
pop
lret
sbb
cmp
shlb
mov
pop
aad
jo
push
nop
out
pop
mov
mov
cli
outsb
xchg
sahf
into
idivl
xlat
mov
lods
cmp
xchg
pop
jne
sbb
add
sbb
test
cwtl
data16
mov
xor
jmp
lods
pop
mov
movsl
imul
sahf
dec
in
mov
adc
aad
es
lods
xchg
sbb
fadds
mov
imul
dec
jge
add
or
adc
sahf
loopne
sbb
movsl
dec
and
jp
fnstcw
adc
ja
sti
xor
jg
mov
inc
pop
xor
inc
jle
fnstenv
push
mov
add
pop
xchg
sbb
lds
scas
negb
mov
xlat
int
pop
jae
out
fwait
dec
mov
scas
mov
enter
fsts
add
gs
ret
cs
pop
jb
frstor
push
mov
movups
xor
es
sub
bound
pop
repz
jns
ss
jp
jecxz
push
popf
add
mov
sub
das
addr16
add
test
hlt
xor
adc
mov
mov
xchg
inc
mov
xchg
shll
adcb
xor
fistpll
in
add
xor
dec
and
pop
or
test
dec
testl
pop
mov
pop
repz
mov
pop
adc
pusha
ljmp
mov
add
fisttpll
and
or
add
mov
jge
add
jae
cwtl
in
sbb
lds
cmp
outsb
push
jg
repz
mov
aam
lea
aas
inc
aaa
out
or
loopne
push
and
fsubrs
mov
pop
je
jo
lods
shlb
in
push
xlat
stc
push
xor
mov
stos
cld
mov
mov
lods
mov
cmc
sub
pop
inc
inc
push
jecxz
push
push
mov
add
sbb
rcll
lret
icebp
andl
adc
rcrl
outsb
jle
or
mov
inc
mov
aas
xchg
cld
out
inc
mov
sbb
xchg
mov
add
outsb
pusha
mov
bound
mov
and
dec
lea
sarb
nop
adc
adcb
dec
jno
scas
xor
mov
fiadds
pusha
or
dec
rclb
outsb
inc
pop
cwtl
enter
push
es
pop
mov
xor
popa
sub
mulb
inc
inc
test
movsb
out
mov
insb
jle
dec
sbb
sti
xchg
sub
iret
inc
arpl
mov
jno
cmpsl
fnstenv
xlat
outsb
in
add
dec
pop
inc
pop
fwait
jno
popa
movsl
std
rolb
pop
or
xchg
js
sahf
or
popf
out
mov
mov
mov
lahf
pop
gs
inc
fs
popf
cmp
inc
fisttpl
sbb
addr16
movsb
dec
negl
jl
pop
xor
pop
jmp
or
and
pop
repz
test
xchg
push
adc
adc
pop
popf
mov
scas
adc
stos
mov
or
gs
jl
int3
pop
and
rcll
push
test
stos
fldcw
test
pop
ret
inc
cmp
cmc
gs
bound
pop
cmp
mov
push
in
push
sbb
xor
xlat
imul
xchg
in
xchg
mov
faddl
hlt
insb
push
stc
lahf
inc
mov
loope
push
sbb
xchg
imull
scas
and
sbb
hlt
rorl
xlat
cmp
nop
in
mov
xchg
dec
ret
mov
dec
add
push
out
push
xor
inc
out
inc
xor
pushf
mov
rcrl
gs
std
leave
pop
mov
rcrb
add
push
in
push
cmpsb
inc
ret
lods
mov
or
xchg
imul
in
fcoml
inc
pop
jbe
leave
xor
push
dec
and
mov
pop
jbe
xlat
or
and
cmp
imul
sbb
aad
xchg
add
mov
imul
mov
ret
cs
jmp
push
sbb
int
daa
fidivs
in
iret
dec
loopne
movzwl
jg
dec
lds
shl
loop
shl
cltd
repnz
mov
fiadds
sti
cld
jl
xor
lcall
das
pop
cmp
dec
sub
into
xchg
mov
shl
xlat
add
pop
mov
push
push
mov
xor
pop
adc
div
imul
clc
jae
jnp
sahf
jle
loop
jp
sub
mov
ljmp
scas
inc
mov
pusha
lods
mov
xor
mov
jle
bound
out
adc
shll
sti
mov
int
pop
call
jmp
add
xor
dec
xchg
add
cmp
nop
jo
cmp
push
out
test
ret
hlt
out
pop
add
mov
mov
lcall
lock
je
std
sub
or
mov
loope
cmc
mov
mov
sbb
jl
and
scas
fidivrl
push
stos
xchg
sub
add
rcll
adc
ljmp
cmp
dec
pop
sbbl
mov
test
or
xchg
jbe
adc
jbe
repz
test
pushf
sbb
push
inc
sbb
out
jmp
aas
inc
xchg
mov
xlat
shl
and
outsb
dec
mov
inc
lret
rcl
jbe
mov
sub
push
scas
jmp
sub
cmp
lock
mov
jmp
mov
arpl
lret
inc
or
in
sti
fstpt
dec
adc
push
xchg
inc
mov
jmp
fbstp
int3
xor
std
sbb
popf
push
pop
imul
repnz
mov
pop
loope
mov
pop
repz
sbb
mov
pop
cmp
cwtl
insl
push
pop
insl
clc
jg
shrb
and
enter
lcall
ds
les
jecxz
mov
jns
pop
jmp
cmp
mov
xlat
outsl
xchg
mov
xchg
pop
mov
or
adc
mov
mov
jns
mov
mov
and
xor
adc
ljmp
inc
or
cmp
xchg
xchg
mov
inc
fisttpl
mov
xorb
xchg
xor
sub
jb
inc
insb
rolb
enter
mov
pop
ret
mov
adc
xchg
jle
pop
enter
mov
loop
cmpl
inc
stos
aam
ljmp
movsb
mov
outsl
jecxz
jmp
or
out
sahf
sbb
mov
lods
outsl
mov
push
lock
mov
jns
dec
lea
mul
push
mov
not
dec
pop
sbb
dec
pop
push
pop
mov
ja
cmpsb
cmp
orl
dec
fimull
cmp
pop
xor
and
cwtl
xor
imul
js
les
fucomip
add
pop
icebp
pop
and
dec
std
mov
or
dec
bnd
orb
inc
sti
notl
sub
xchg
sbb
dec
je,pt
jo
xchg
sub
mov
inc
dec
shl
jnp
fadds
pop
jg
cld
inc
lea
test
mov
movsl
mov
adcl
leave
jg
mov
mov
sbb
std
into
inc
jnp
cwtl
mov
push
push
push
mov
idivl
dec
mov
call
and
repz
push
mov
sub
leave
sbb
xorb
mov
clc
xchg
mov
fwait
push
inc
mov
fldt
pop
sub
mov
mov
push
ja
xchg
xchg
mov
les
testb
loope
xchg
movsl
mov
jns
or
std
cli
scas
call
jno,pt
das
mov
lock
aaa
xchg
outsb
and
push
jo
push
shll
int
xor
test
insb
mov
scas
mov
pop
add
mov
cmc
insb
inc
outsl
imull
push
les
in
out
xor
add
pop
test
mov
shlb
mov
das
cmpsb
push
loope
pop
int
push
int
xchg
das
pop
or
sbb
dec
hlt
mov
imul
and
insl
adc
mov
insb
mov
xchg
imul
xor
mov
fucom
das
aaa
mov
xchg
mov
js
imul
cltd
mov
or
sti
xor
add
ktestw
mov
sbb
pop
insl
sbb
cmpsb
ret
movsb
pop
rcl
mov
popf
sub
push
aas
out
xor
xchg
xchg
xor
push
bound
fsubs
stos
jb
mov
cmp
and
mov
cmp
rclb
test
rcrl
xchg
mov
int
jo
jmp
ja
mov
out
popa
cmpsl
les
scas
lcall
insw
aam
aas
pop
out
or
movsb
lds
mov
aam
fidivl
repz
lea
mov
addl
add
imul
clc
fmull
rcl
pop
mov
je
or
stc
or
push
jo
cld
subl
xchg
inc
leave
lea
sbb
cmp
daa
div
pop
ja
xor
arpl
sbb
push
xchg
fists
mov
mov
add
jge
int
push
sahf
sub
dec
and
sub
dec
movsb
test
outsl
loop
inc
pop
mov
jp
mull
pop
jne
jae
lock
adcb
sbb
pop
jns
sub
rep
jl
jecxz
xor
dec
pop
push
inc
mov
xchg
pop
popa
jae
into
xchg
data16
negl
push
add
aas
out
xchg
scas
pop
jno
push
cmp
lods
pop
js
test
divl
lret
jne
clc
ret
jae
xchg
movsb
push
xchg
mov
sbb
mov
loopne
xor
cmp
jno
mov
es
mov
push
adc
pop
sahf
sahf
mov
arpl
jg
aaa
xor
mov
leave
push
addr16
inc
push
movsb
mov
test
jge
std
and
adc
mov
loope
mov
mov
sub
addr16
mov
lds
mov
inc
mulb
mov
fistps
orl
es
jle
mov
mov
ret
pop
push
jmp
lock
inc
je
rcrl
sbb
in
shlb
lret
aas
cld
xchg
push
sbb
cmpsb
clc
fcoms
test
fmull
push
test
outsb
clc
pop
push
mov
shlb
std
xchg
jle
mov
inc
ds
lds
push
bound
jg
aam
mov
push
pop
adc
xchg
outsb
out
mov
sub
shrb
lea
jns
jg
icebp
scas
jp
adcb
js
jp
or
mov
fidivs
leave
adc
popa
mov
stos
adc
fcoml
xor
dec
dec
fisubl
jge
dec
hlt
mov
das
jo
sarl
or
sub
test
push
testb
imul
mov
add
jne
ffree
in
sar
pop
dec
push
jb
and
mov
push
dec
add
loop
rclb
icebp
adc
and
jbe
push
cmp
mov
dec
out
out
xlat
pop
repz
inc
adc
mov
in
sbb
pop
mov
mov
jge
inc
xchg
sub
jge
pop
insb
mov
insl
andb
cltd
push
in
fwait
mov
lcall
sub
mov
jnp
pop
push
cmc
adc
jmp
fsubrs
test
pop
cli
test
add
jmp
and
dec
addb
dec
pop
sbb
adc
test
push
and
in
ds
cs
fmull
adc
cld
call
into
sahf
sbb
and
pop
or
xchg
rorl
out
lds
dec
add
out
xor
mov
stc
out
dec
ss
add
inc
leave
pusha
jne
sbb
fnstenv
or
nop
mov
mov
jp
cmp
popf
mov
ret
and
std
movsl
vmovq
or
jmp
es
int
lock
inc
jmp
sbb
imul
mov
adc
fwait
push
adc
mov
pop
push
dec
pop
mov
in
test
ljmp
int3
pop
mov
fs
into
lea
push
in
dec
je
ss
out
loop
test
bound
out
cmp
add
scas
lea
ja
pop
sti
adc
mov
int3
imul
push
aaa
xchg
int
pushf
mov
ret
mov
movsl
test
and
insl
aaa
and
fldt
into
sub
sub
hlt
mov
aaa
icebp
jnp
lret
adc
test
jle
repz
pop
inc
xchg
cwtl
stos
clc
xor
das
push
cmp
inc
mov
loope
inc
push
mov
pop
clc
cmpl
frstor
ficompl
or
cmpsb
js
or
jbe
shlb
aam
leave
xlat
inc
inc
pop
addr16
cwtl
cltd
push
aas
lock
jo
out
das
jbe
adc
icebp
cmp
mov
add
push
mov
negb
aam
xor
mov
adc
imul
xchg
enter
sti
insb
add
pop
clc
push
lret
cmp
xchg
xchg
xor
hlt
addr16
add
mov
loopne
lahf
cmp
leave
xchg
dec
cs
rcr
je
add
sub
inc
out
xor
lret
and
sti
call
add
add
je
ficoms
repz
sub
out
or
ljmp
lods
lods
aas
into
sbb
jns
xor
insl
shl
jge
mov
fistl
leave
andl
or
cwtl
add
addl
enter
xchg
stos
mov
insl
pop
mov
xchg
test
mov
pop
clc
fisubrl
mov
jbe
lcall
test
push
add
xchg
cs
ficomps
add
inc
sbb
pop
sar
ds
dec
fneni(8087
ja
daa
aad
adc
dec
lods
popa
je
pop
and
xlat
loope
dec
ljmp
pop
add
cmp
dec
fbstp
adc
xchg
mov
sbb
ret
lret
sub
gs
mov
xchg
cmpsl
leave
lret
ljmp
cli
mov
scas
xchg
pop
insb
imulb
sub
hlt
loop
mov
mov
mov
xchg
cmpb
add
imul
mov
or
pop
movsl
and
jmp
movsb
lock
fwait
jns
cmp
subb
cmp
sbb
and
sub
and
in
or
in
mov
ljmp
xor
xchg
jle
inc
test
mov
dec
sbb
pop
pop
xlat
enter
pop
cmp
xor
cmp
fisubrs
sbbb
cmp
xor
adc
jns
adc
cmp
scas
inc
cmp
in
psrld
arpl
jmp
inc
mov
cmpsb
imul
aam
ret
xor
adc
or
hlt
xor
pushf
test
fnsave
pop
push
mov
sti
pop
adc
in
daa
push
cli
xchg
mov
dec
or
test
add
lea
push
sahf
jo
cli
loop
fwait
inc
js
cmpb
cmpsl
lods
mov
leave
fisttpll
sbb
and
mov
cmp
daa
addr16
test
out
xchg
xor
jl
shrb
ret
pop
dec
les
arpl
sub
dec
lods
aas
arpl
mov
adc
pop
addr16
adc
xchg
sti
lret
movsb
notl
fimull
add
sub
pop
dec
xchg
jo,pt
lar
add
in
es
xor
pushl
lds
inc
out
jo
lret
cmp
xchg
jne
ret
push
sti
in
xchg
into
fsubl
movsb
cltd
xor
xchg
lahf
push
jmp
jge
sbbb
ds
fcom
les
enter
jbe
xor
adc
add
fimull
pop
decl
call
inc
xchg
sbb
dec
xlat
outsb
jle
dec
in
sbb
pop
or
xchg
mov
add
and
ljmp
mov
sti
sahf
ds
das
cwtl
sbb
push
pop
add
mov
dec
loopne
xchg
xchg
mov
mov
loop
mov
xlat
stc
ds
push
ljmp
addr16
sub
fstpl
dec
pop
hlt
aas
and
test
cld
shl
ficomps
add
mov
jns
mov
in
adc
mov
fcompl
sbb
js
add
scas
in
mov
push
mov
orl
aaa
cli
sub
sbb
inc
add
mov
das
arpl
xchg
push
rep
xor
call
stc
pop
rep
lds
popf
push
xchg
and
loop
in
push
mov
aad
orl
fistl
xlat
addr16
or
cmp
adc
push
push
ss
mov
push
jmp
jp
ss
inc
xchg
scas
jge
adc
or
ret
aaa
enter
aam
rsqrtps
out
loope
testl
inc
mov
in
int3
mov
mov
cmp
lods
aad
andl
rorl
mov
mov
push
mov
fldpi
cmp
cmp
js
sbb
jg
addl
jg
sbb
rcr
sbb
pop
ljmp
xor
lret
push
pushf
or
insl
shll
jb
loop
lcall
in
dec
sbb
or
imul
cwtl
das
add
in
sti
sub
add
push
jns
popf
mov
sub
sbb
leave
jnp
xor
xchg
add
jmp
movsb
iret
aas
or
mov
movsb
movsl
out
ljmp
sbb
adc
pop
scas
stos
inc
ficomps
inc
popa
dec
xchg
enter
jp
mov
mov
lret
bound
aam
out
jmp
mov
or
insl
cmp
test
je
xor
xchg
cmp
vaddpd
pop
pop
pop
adc
push
push
cld
mov
mov
mov
mov
cmp
cmp
and
pop
push
popf
xchg
add
sbb
out
and
stc
stc
sbb
sub
daa
sub
or
cmp
jmp
dec
fcmovnb
pop
or
fldpi
shrl
sti
mov
mov
xor
pop
sub
leave
dec
pop
mov
int
ss
xor
sub
push
icebp
push
or
cld
push
cmc
es
pop
dec
insl
lods
inc
ret
mov
mov
in
bound
jmp
push
sar
insl
test
or
dec
add
movsb
addl
jg
pop
ja
test
fisttpll
sbbb
mov
inc
fcmovbe
jmp
test
pop
pop
push
je
xlat
movsl
aaa
fbstp
out
pop
imul
icebp
out
push
lods
mov
pop
sub
push
pop
movsb
mov
sbb
mov
jno
mov
fcmovne
mov
je
aaa
lea
out
pop
and
imul
ljmp
outsl
push
jmp
jbe
pop
mov
popf
or
mov
inc
in
ss
inc
dec
cmp
aaa
or
push
mov
xchg
mov
cmc
les
mov
push
stos
in
sbb
mov
cmpb
fsubl
mov
mov
in
mov
cmp
xchg
dec
pop
out
xchg
jmp
aaa
hlt
out
inc
hlt
inc
inc
es
lret
or
and
or
mov
shll
fsubrs
bound
into
jmp
or
jp
sbb
or
pop
sbb
sub
jge
add
in
lret
and
out
ja
leave
sub
pop
or
dec
push
je
push
xchg
sub
xorb
sbb
loopne
mov
cmpsb
mov
push
push
and
fisubrs
push
out
pop
sbb
sub
ss
xlat
icebp
jp
les
jg
bswap
or
jmp
pop
dec
and
outsb
jae
xchg
movsb
dec
pop
icebp
jg
ficompl
jnp
xor
aad
sti
arpl
jp
dec
push
ficoml
cmpsl
xchg
fbld
ret
dec
clc
into
cwtl
js
cltd
push
lods
ljmp
call
je
std
push
out
aam
ss
faddl
and
sub
dec
lcall
xchg
scas
jle
repnz
mov
jne
xchg
xor
test
dec
cmp
mov
repnz
mov
xchg
mov
fimull
movsl
fadds
popl
je
aas
fiadds
mov
imul
pop
lea
adc
mov
xchg
adc
lahf
and
xchg
push
fcoms
addr16
inc
ljmp
mov
add
mov
push
lods
inc
jl
aaa
into
lds
push
inc
scas
and
ljmp
jle
dec
repnz
sarb
jge
xchg
cmp
gs
or
das
dec
in
out
pop
out
hlt
push
and
in
scas
int
sbb
dec
in
call
sahf
mov
test
push
ja
jae
push
inc
pop
js
das
addr16
cmp
sbb
std
push
ljmp
jno
lret
popf
pop
arpl
aad
and
cmpsl
popf
mov
mov
call
mov
sub
mov
sbbb
jecxz
in
notb
ds
lahf
jne
sbbb
push
mov
mov
lods
pop
jp
cmp
into
fmul
pop
into
xor
fwait
pusha
xor
sbb
add
and
js
out
mov
sub
mov
pop
inc
pusha
fildl
out
mov
dec
pushf
sub
dec
insb
insb
into
bound
data16
push
add
sti
cmp
pop
inc
int
data16
xchg
fnstenv
add
pop
fcompl
cmp
and
cwtl
notb
mov
sub
sub
mov
lret
sbb
enter
mov
jo
jecxz
mov
rolb
in
sti
aaa
lds
scas
rcrl
jno
jns
enter
shrl
popl
aaa
dec
mov
inc
xor
cmp
push
mov
xlat
jo
test
pop
in
aaa
ss
pop
stc
fnsave
data16
call
jg
push
in
sbb
mov
jb
in
or
lret
or
mov
jae
cwtl
inc
sbb
shl
mov
jno
inc
test
push
fnsave
sub
jmp
inc
inc
adc
mov
imul
mov
push
movsb
sbb
out
jge
xchg
mov
mov
push
into
sahf
or
rorb
mov
clc
jae
in
cwtl
ss
shl
leave
jo
nop
push
ds
lods
mov
gs
push
mov
pusha
ds
mov
inc
push
pop
push
cmp
inc
pop
jbe
arpl
stos
and
mov
dec
es
jp
cmp
xor
pop
xchg
xchg
ficompl
or
sbb
jno
loopne
xor
inc
pop
scas
shl
pop
enter
jle
mov
xchg
arpl
cmp
inc
gs
xchg
adcb
cltd
or
arpl
jmp
mov
ss
retw
mov
push
scas
mov
fstpl
in
push
shl
or
testb
jbe
mov
lods
lock
fldenv
inc
pop
loop
in
pusha
test
mov
mov
mov
aam
js
mov
adc
xlat
data16
or
pop
out
xlat
xchg
jp
dec
icebp
and
cmp
test
jne
stos
xchg
outsb
pop
inc
cltd
xlat
push
dec
push
cmp
and
cmp
addr16
mov
mov
pop
inc
lret
lcall
mov
jecxz
dec
or
or
sub
push
jmp
xchg
push
bound
jb
inc
dec
jmp
adc
pop
inc
push
mov
insb
pop
pop
std
xchg
sahf
bound
mov
inc
pop
cmp
cmp
xchg
mov
daa
inc
shrl
inc
xlat
mov
int
push
fwait
and
out
imul
lcall
addr16
jmp
pop
dec
in
ss
cmp
cld
ds
rorl
sub
cmp
stc
loop
inc
es
lea
int3
cld
pop
imul
lods
inc
inc
jo
mov
into
movsb
outsl
jg
adc
adc
jbe
mov
ret
pop
fstl
movq
jno
dec
xlat
mov
xor
add
pusha
jp
jp
lods
cwtl
push
repz
ljmp
mov
xor
pop
cs
fbstp
mov
std
setne
mov
addl
xor
dec
add
sbb
cmp
inc
out
sahf
pusha
and
jmp
sub
scas
out
jns
sbb
dec
mov
stos
pushl
stos
out
popa
push
loop
jle
mov
jns
and
mov
mov
mov
xlat
pop
cmp
pop
cmp
mov
jns
loope
or
mov
and
mov
dec
icebp
xchg
inc
shll
push
mov
out
mov
outsl
cmpb
adc
scas
dec
test
andl
xchg
inc
lea
repz
shl
inc
pop
call
mov
jb
pop
sub
sub
xchg
ret
insl
pop
add
in
mov
push
jp
loope
mov
imul
sub
rcll
xor
or
test
jg
fs
jl
xchg
pop
jmp
pop
dec
dec
rorb
adc
dec
lahf
pusha
mov
mov
jnp
or
inc
jmp
pushf
out
pushf
mov
add
xchg
idivl
shl
xchg
scas
adc
lret
rcll
push
add
push
mov
xor
sub
cmp
push
arpl
out
std
imul
jbe
pop
cmpsb
sbb
mov
sbb
insb
dec
jno
mov
imul
in
mov
cmpb
enter
fadds
rorl
std
pop
cmp
movsb
mov
imul
mov
aad
ret
stos
xor
aam
xor
aam
dec
xchg
sahf
push
dec
dec
rcrl
test
dec
stc
stos
push
ja
dec
dec
ja
icebp
mov
clc
and
pop
or
lret
aad
std
lret
add
push
sbb
adc
xor
inc
mov
jmp
xlat
sarb
ret
inc
fisttpll
cld
sub
inc
lret
jb
xchg
dec
jne
cmp
pop
cltd
adc
out
xchg
and
mov
cmp
or
les
pushf
mov
xorl
loope
fildl
mov
dec
lea
cmp
push
sbb
lods
inc
shlb
jb
push
or
ljmp
xchg
xor
insl
loopne
scas
and
inc
ja
jne
sub
adc
cs
mov
pop
adc
push
shlb
sub
adc
pop
add
negb
adc
push
out
xchg
xchg
sub
pop
cmp
inc
mov
pop
jp
aam
clc
fwait
sub
sub
ds
mov
or
xchg
add
fbstp
cmp
xor
cmpsb
add
fldt
pushf
sbb
mov
sbb
dec
enter
nop
insb
pushf
pusha
sahf
mov
jb
mov
fwait
cmpsl
nop
push
xor
mov
xchg
iret
data16
insl
in
insb
pop
mov
mov
cmp
aad
aam
push
insl
movl
pop
sub
adcb
add
stc
lods
pushf
dec
and
dec
hlt
ss
loop
or
sub
jp
insb
push
into
jnp
out
clc
test
sub
das
cmpsb
rol
jmp
push
jmp
cwtl
and
mov
test
xor
iret
mov
in
lods
cli
aad
popf
xor
mov
sbb
xor
lods
gs
popf
xor
addss
jo
sub
push
js
call
cmpsb
scas
push
fsubr
sbb
cmp
push
mov
inc
cs
jp
sbb
lcall
lods
mov
pop
dec
arpl
cmp
jp
je
adc
orb
or
imul
add
icebp
inc
mov
movsb
sub
stc
scas
dec
jno
mov
sbb
and
mov
repnz
repz
fldl
popf
mov
stc
nop
daa
push
out
addr16
dec
mov
mov
stos
jmp
push
or
mov
mov
movsl
hlt
es
ja
out
rcrl
adc
pop
pop
cmp
push
jae
dec
or
fsts
or
cmp
jmp
out
leave
pusha
and
sbb
pop
imul
scas
inc
add
in
outsl
mov
dec
mov
mov
push
mov
jge
xor
sub
dec
pop
pop
popf
test
sub
imul
adc
test
ss
ss
jle
int3
mov
arpl
mov
sub
aaa
mov
jecxz
mov
in
add
pop
pop
inc
loopne
mov
jmp
fldcw
lahf
xor
fiadds
data16
je
sbb
imul
jl
dec
jecxz
jb
mov
push
mov
push
out
scas
mov
mov
push
mov
mov
push
pop
pusha
aad
movsl
into
dec
fisubs
outsb
daa
jle
cmc
sahf
push
jecxz
lahf
sub
shrl
pop
xchg
sub
dec
lods
mov
rorb
xor
xor
mov
ficomps
push
scas
std
xchg
and
lret
push
add
mov
bound
imul
movsl
in
lods
add
push
into
jle
sarb
xchg
xor
sarb
outsl
sbb
lret
xor
jp
in
jns
adc
push
sahf
cmp
in
pop
outsb
jnp
or
sub
and
or
pusha
adc
mov
mov
ja
in
test
push
or
mov
pop
xor
xchg
sbb
push
inc
in
jne
sub
lcall
in
aas
or
pop
call
xor
ret
dec
push
loop
xchg
ljmp
arpl
sbb
cmp
mov
gs
jno
es
in
push
and
mov
xor
inc
arpl
das
cmp
stos
aad
insb
lcall
add
shlb
pop
xchg
jo
pop
cmpps
leave
sahf
xor
lods
mov
out
enter
in
mov
flds
push
stos
mov
cmpsb
cmp
adc
cltd
xor
test
test
cli
test
ret
xlat
imul
mov
pop
jae
icebp
mov
sbb
and
mov
outsl
insb
rol
out
out
xor
sbb
insl
sub
aam
popf
add
pop
cld
push
mov
out
sbb
jmp
pop
or
mov
sub
jl
aas
ficoml
js
inc
fmull
scas
arpl
loopne
repz
test
and
dec
pop
hlt
jl
outsb
add
mov
mul
movsb
sub
cmp
lahf
mov
loopne
andl
test
mov
into
or
mov
fisttpl
pop
mov
lods
cmpsb
dec
xchg
lods
loope
ljmp
adc
hlt
lret
xchg
adc
data16
cwtl
push
mov
mov
sbb
lds
popf
sbb
xchg
mov
jae
incb
xchg
stos
lret
data16
push
and
sti
mov
jge
in
inc
cld
and
xchg
add
lret
mov
incl
cmp
testb
imul
stos
into
fs
mov
mov
mov
pop
repz
rcr
jne
lcall
outsb
cmp
adc
lods
inc
test
in
add
setle
test
shrl
pop
jl
jns
sbb
jle
xchg
xor
push
jp
fwait
dec
cmp
mov
cmpsb
js
jg
sub
das
jbe
mov
xchg
cmp
mov
cmpsl
shl
mov
push
pop
lcall
insb
fcoms
and
dec
push
std
mov
adc
iret
mov
bound
fwait
les
insl
add
inc
incb
nop
mov
aam
push
in
ret
test
jle
adc
xor
xor
insb
lods
iret
adc
ja
mov
push
sub
xchg
cmpsb
test
dec
push
jnp
subl
sbb
push
xor
xchg
scas
in
adc
sahf
inc
or
fmuls
dec
data16
push
xchg
iret
sbb
fwait
test
inc
pcmpeqb
sbbb
jmp
sub
arpl
sbb
and
fsts
jmp
in
repnz
rorb
jg
inc
insb
mov
mov
movsl
fwait
push
call
pop
leave
xchg
and
leave
mov
sarb
pop
cmc
and
int
lea
jp
aaa
lret
inc
fbstp
enter
pop
jae
ds
jge
enter
mov
je
pop
pushf
inc
jge
xchg
mov
mov
movd
sbb
into
pusha
addr16
lods
arpl
push
xchg
ret
movb
repz
add
cmpsb
adc
fdiv
jge
push
push
test
js
sub
and
iret
push
mov
mov
lret
push
in
enter
mov
and
ljmp
dec
data16
xlat
and
rorl
in
adc
push
mov
push
in
mov
shrb
outsb
cmp
int3
push
cltd
jecxz
inc
pusha
orb
xchg
jge
fucomp
inc
sahf
cld
pop
xchg
out
or
jmp
xchg
sub
rep
out
sub
std
enter
xchg
mov
fisubrl
mov
fmulp
mov
les
jns
dec
popa
pop
sub
bound
movsl
adc
es
mov
lahf
sbb
jp
std
insb
inc
pop
arpl
dec
loopne
fucom
cmp
push
gs
xchg
lcall
jecxz
mov
mov
mov
cli
jo
ficoms
push
jo
sti
jbe
dec
out
xor
xchg
pop
xchg
addr16
pop
lret
sbb
xstore-rng
cmpsl
rorl
adc
adc
je
aas
decl
mov
es
xchg
xor
mov
and
fs
ret
jle
shrb
loopne
mov
adc
inc
jecxz
sarl
pop
adc
xchg
mov
push
mov
push
xchg
jg
aas
test
or
fwait
lret
jb
sbb
push
out
stos
dec
dec
add
xchg
dec
dec
mov
shl
inc
fadd
les
lret
das
dec
jnp
cmc
fadds
jg
xlat
mov
mov
mov
xchg
push
cwtl
adc
fcmovnb
pop
and
push
addl
insl
ljmp
fmuls
mov
fcomi
int3
jg
into
sbb
push
adc
or
xor
push
and
and
inc
push
cltd
inc
not
outsb
jecxz
clc
adc
mov
ss
jb
or
leave
test
dec
rol
test
rorl
lods
mov
ss
jb
roll
jg
or
xchg
adc
call
or
fdivrs
add
add
add
sahf
xor
mov
adc
movsl
push
popf
or
pusha
aaa
call
add
add
js
xchg
mov
cmp
inc
dec
fimuls
sub
pop
push
add
or
out
shrb
roll
mov
jno
jl
int
lret
adc
aad
test
aam
xchg
sub
ret
dec
dec
out
outsl
popf
cmp
nop
xor
push
icebp
pop
imul
add
flds
xchg
icebp
or
nop
xchg
adc
jle
addl
daa
in
dec
loop
inc
sub
add
xchg
cmp
inc
inc
cmpsl
lea
clc
aas
pop
lahf
jno
popa
outsl
push
xchg
daa
adc
xor
mov
jg
pushf
sti
lret
adc
mov
ret
outsb
jl
loop
lahf
pop
jmp
iret
out
andl
jnp
mov
inc
sbb
ja
jg
mov
sbb
xlat
out
movsb
addr16
decb
jo
ljmp
add
xchg
xlat
jmp
dec
fsubs
in
or
mov
loopne
shl
stos
mov
pop
xor
xor
pop
dec
mov
xchg
jp
scas
jns
loopne
icebp
sar
pop
sub
inc
ficompl
insl
xchg
cld
sub
int3
adc
jecxz
xchg
xlat
dec
movsl
repnz
test
ret
aaa
cmp
cli
pop
imul
pop
jg
dec
in
test
pop
pop
push
or
ret
repnz
and
mov
jo
push
inc
add
subl
mov
daa
leave
mov
or
movsb
push
int
mov
fs
xchg
inc
jl
dec
lcall
lret
notl
hlt
add
jmp
popf
int
ffreep
fwait
divb
mov
repnz
test
div
aaa
dec
dec
popf
icebp
mov
nop
sub
jge
cld
pop
ret
gs
pop
sahf
mov
dec
and
stos
imul
or
scas
clc
scas
sub
test
lret
inc
pop
or
dec
pop
lock
jo
in
or
cmp
insl
inc
loopne
sahf
xor
mov
jecxz
ljmp
xchg
push
stos
push
pop
addr16
cwtl
cmp
mov
inc
jno
pop
jecxz
xchg
cmp
mov
jg
cltd
lods
xchg
pop
xor
xchg
js
fdivrl
lretw
outsb
or
xor
mov
iret
pop
cmp
add
call
fbld
sub
loope
popf
std
sub
fldt
sbb
and
cmpsl
cmp
pop
push
les
stc
mov
outsb
dec
mov
pop
xor
pop
loop
movsl
xor
mov
out
ret
jecxz
icebp
xor
sub
or
dec
xchg
sub
cmp
add
jb
ds
loop
pop
dec
pop
xor
daa
sbb
mov
lods
push
icebp
push
dec
cltd
mov
push
cmp
jae
sbb
stc
vpmacssdql
sti
loope
daa
xchg
lods
pop
pop
jbe
ss
fldenv
xorl
adc
cli
test
inc
orb
test
loop
outsb
fcoml
dec
fcoms
sbb
mov
les
pop
mov
sbb
pop
xchg
daa
imul
or
mov
mov
data16
sub
or
in
jl
cmp
nop
std
aaa
push
fsubp
pop
outsl
loopne
movsl
jo
in
rclb
jmp
cmpsb
in
adc
sbb
ljmp
and
and
xchg
cmpb
fdivl
jmp
inc
pop
outsb
orb
mov
xchg
and
mov
push
xor
sub
sbb
ret
outsb
push
sub
push
mov
cmp
xchg
pop
fsub
nop
fisttps
dec
in
lahf
jae
jecxz
shr
into
sti
push
mov
adc
andb
mov
xor
pop
lret
adc
inc
jmp
arpl
push
or
icebp
mov
mov
mov
jae
sub
in
jle
pusha
jo
mov
add
inc
movsl
mov
setp
mov
cmp
jo
test
adc
jl
lods
push
fwait
jbe
lea
stos
push
inc
leave
pop
xor
jge
sahf
ljmp
enter
sub
pop
inc
dec
pusha
jg
repz
mov
mov
jge
sbb
in
test
adcb
ds
mov
insb
jl
sbb
inc
fcoml
cmc
jns
jb
lock
in
test
pop
shr
xchg
xlat
add
jae
inc
sub
jb
ss
sbb
dec
xchg
xchg
and
addr16
stos
add
lcall
xor
jg
test
movsl
shrb
sbb
pop
loopne
mov
cmpsl
loope
test
mov
ret
repnz
cmp
mov
jno
mov
lret
mov
leave
sbb
mov
and
arpl
loope
aas
cmp
outsb
jp
pop
add
push
mov
sbbb
lds
idivl
xor
loopne
cltd
push
jecxz
aad
jb
mov
ret
or
inc
outsb
mov
je
push
imul
int
xor
or
gs
cmpsl
leave
pop
add
andb
jnp
lods
cmp
imul
std
xchg
cmp
pop
cmp
add
out
popf
cwtl
xorl
lret
int
rcrb
cmpsb
add
adcl
push
cmpsb
dec
jbe
popf
jecxz
test
pop
add
pop
jmp
das
cmp
mov
mulb
int
mov
sub
mov
test
inc
cld
and
mov
lahf
cmpsb
dec
loope
test
xor
xlat
daa
pop
mov
xlat
jb,pn
imulb
sbb
loopne
jae
daa
xchg
mov
scas
cmp
rcll
add
inc
push
mov
or
mov
leave
std
mov
cmpsb
pusha
or
mov
outsl
dec
sbb
rorb
xor
rorl
add
or
xlat
sbbl
cmpsb
hlt
cmp
pop
mov
js
mov
dec
and
cmp
sbb
call
push
mov
dec
inc
lods
cmpsl
push
aam
int
fs
pop
or
and
mov
cwtl
adc
inc
jo
ljmp
xchg
cld
or
mov
ds
aam
xor
dec
pop
scas
push
sahf
jns
int3
icebp
pop
jns
in
stos
mov
jl
lds
stc
lret
sub
mov
lods
add
movsl
or
mov
lret
xlat
jl
leave
cld
jg
or
cli
int
dec
cmp
dec
insb
adc
jns
cmpb
cs
lods
inc
repz
test
rorl
dec
pop
shlb
lahf
push
push
add
nop
aad
mov
shlb
or
xchg
pop
push
inc
cltd
imul
xor
mov
sub
out
stos
sahf
insl
scas
and
dec
movsl
idivl
xlat
xor
mov
jecxz
test
in
jmp
sbb
xchg
js
xor
push
movsl
cmpsl
ret
and
jnp
mov
andb
cmp
inc
push
out
xchg
fsubl
pop
xor
sarl
jmp
ds
jge
cld
daa
arpl
jg
int
test
sub
push
or
inc
inc
sahf
stc
mov
roll
sbb
mov
sbb
xchg
imul
bound
insb
mov
push
hlt
nop
outsl
adc
mov
pop
adc
fwait
mov
mov
cld
cmpsb
dec
mov
mov
pop
add
cmpsl
xor
adc
into
loope
cmp
pop
outsb
and
push
xor
mov
loop
add
or
into
sbb
movsb
ja
insb
pop
cmp
fidivs
lods
inc
cld
add
push
pop
test
inc
push
jns
in
stos
stos
icebp
mov
inc
cltd
std
out
adc
ficoms
push
fldl
enter
cmp
repz
jl
cmp
sbb
mov
int
mov
imul
ret
pop
loope
test
dec
dec
subb
dec
mov
or
imul
mov
push
jne
sub
inc
sbb
js
add
mov
xorb
xor
mov
push
xor
xor
out
jge
inc
enter
jne
jb
sahf
in
stc
rol
pop
add
push
fimuls
push
fisttpl
rcll
sub
sbb
jb
xchg
mov
aaa
fildll
sub
dec
add
dec
lods
rol
xor
rcrb
scas
xor
jmp
jo
popa
sti
jle
decl
xor
mov
xchg
bound
sarb
fcoms
pop
int
inc
daa
aas
sbb
int3
addr16
ror
in
fbstp
sti
pop
repz
jle
and
test
ds
inc
sahf
xchg
pop
rcrb
ficomps
icebp
add
xchg
and
jno
cmp
push
scas
stos
ret
in
das
xor
xchg
inc
repz
xchg
mov
int3
xor
xchg
jne
dec
out
fstps
insl
mov
fistpll
mov
jno
cmc
and
sbb
fsubrl
mov
sbbl
lods
fs
pop
inc
push
sub
loope
jle
pop
adc
xchg
mov
push
fdivs
jno
insb
les
pop
dec
jecxz
xchg
sbb
mov
sub
jbe
xchg
xor
fldenv
loopne
mov
cmpsl
sarl
rol
lods
fwait
pusha
push
fidivl
pop
cmp
pop
mov
sbb
cmp
rcll
les
fsubr
sbb
xchg
dec
test
dec
jecxz
pusha
repz
out
and
dec
push
inc
call
and
fsts
inc
ljmp
xor
sub
mov
push
cmp
adc
pop
js
jl
jb
jae
cmp
push
roll
scas
mov
fnstsw
jae
movsb
or
push
imul
dec
push
cmp
cmpsb
mov
lahf
cmp
add
repnz
push
mov
ja
fidivs
jo
icebp
dec
jle
or
dec
xor
jb
mov
int3
pusha
loop
pushf
lret
push
xor
leave
lock
push
cs
xor
mov
push
ljmp
cld
js
dec
push
and
mov
and
aad
fcomps
insb
add
jecxz
arpl
mov
sbb
testl
jbe
jo
dec
inc
lods
pop
cltd
mov
or
loopne
mov
imul
sub
pushf
rorl
lods
jnp
in
push
pop
dec
mov
and
inc
aas
push
cwtl
jecxz
push
into
mov
frstpm(287
push
stc
push
push
mov
sub
inc
xor
mov
xchg
out
push
data16
shll
cmc
xlat
shlb
mov
xchg
out
sbb
sub
in
fbld
sti
in
ret
fxtract
and
xchg
push
loope
sub
sbb
insb
or
sub
add
push
mov
stos
jecxz
lds
pop
cmp
jmp
adc
pop
fidivs
add
and
iret
cmp
adc
imul
pop
data16
sti
and
mov
popf
ss
sub
pop
pop
lret
mov
loope
leave
add
cmp
cmp
dec
loop
dec
pop
out
jns
data16
rcrb
add
out
hlt
xor
jmp
sbb
xchg
dec
dec
mov
loopne
jp
xchg
js
dec
out
cli
jl
dec
mov
jns
pop
mov
mov
cmp
pop
inc
int
orb
xchg
jp
and
ds
mov
xchg
push
inc
sub
lods
dec
add
cmp
test
fsubl
cmpl
jae
mov
xor
pop
cmc
outsl
pusha
mov
pop
add
clc
xlat
mov
mov
fdivl
dec
testl
repnz
sub
out
out
xor
mov
sbb
sbb
aad
lods
sub
icebp
cmp
in
mov
cwtl
jmp
mov
xor
mov
scas
jb
xchg
pop
mov
inc
mov
in
pop
pop
jge
and
and
mov
int
jne
out
fnstenv
inc
mov
incb
inc
cwtl
inc
int3
cwtl
out
dec
fdivl
js
xlat
adc
xlat
and
lcall
dec
aam
cmc
xchg
xchg
mov
jg
fildll
bound
movaps
mov
mov
and
mov
jne
fcom
lret
jns
cmp
aad
mov
push
push
jp
push
call
dec
out
pushf
jno
movsl
or
lds
int3
cmc
xlat
push
insl
push
int
ficomps
mov
lea
rorb
int
sbb
jne
jno
dec
and
push
ljmp
cmpsb
xlat
bound
pop
jnp
mov
imulb
pop
outsl
or
lret
cmp
imul
mov
mov
xchg
xchg
mov
insl
adc
outsl
stos
jle
mov
xchg
add
out
add
mov
xchg
sbb
mov
jecxz
pop
stc
movsb
mov
push
sub
or
aaa
sbb
ret
lods
sub
negb
mov
addr16
jp
jmp
rcr
imul
xchg
push
je
in
mov
lock
loope
cltd
fnstenv
pusha
xchg
pop
cmp
xor
shl
mov
mov
pop
fdivs
movsl
fisubl
cmpsl
fs
aam
jae
xchg
mov
pop
jno
int3
push
rcll
cmpsl
xor
cmc
gs
adc
inc
test
jbe
lahf
jbe
fucomip
cmp
mov
mov
int
and
mov
out
in
lds
int3
mov
add
add
mov
mov
inc
pop
fcompl
and
inc
sarl
add
jae
lods
add
jge
cmp
rcrl
mov
test
idivl
push
les
int3
arpl
cltd
ljmp
mov
js
int
das
std
and
dec
je
cmp
jge
in
xor
xor
pop
popf
loopne
pop
out
test
mov
ljmp
cmp
sbb
fcmovu
mov
lcall
idiv
ret
xchg
cltd
jg
dec
mov
sub
mov
call
arpl
xchg
dec
add
hlt
xor
aaa
sub
out
cld
cmpsl
push
ss
mov
repnz
nop
add
xchg
mov
pushf
movsl
cmp
idivb
mov
sub
ret
add
sub
into
nop
xor
adc
inc
dec
and
jmp
sbb
push
mov
popf
enter
xor
add
xchg
xor
mov
scas
aas
outsb
aam
pop
jg
dec
pop
adc
cmpl
cwtl
imul
sahf
push
in
adc
and
lcall
or
pushf
add
cwtl
sbb
cltd
sahf
cmp
pushf
loop
out
adc
cmpl
mov
popf
ss
lret
pop
pop
pop
mov
mov
lods
in
pop
mull
pop
loopne
mov
jp
mov
js
sti
movsb
adc
nop
add
pop
xor
shrb
inc
sbb
cmc
and
mull
les
lret
std
adc
call
cltd
jno
scas
xor
cld
push
cmp
jae
das
xor
stos
jae
aas
mov
addr16
test
std
cltd
sub
enter
dec
dec
and
mov
jmp
sbb
mov
outsb
sub
scas
sbb
xchg
jg
pop
xchg
xlat
push
nop
pop
in
out
lret
xchg
out
bound
ja
xor
popf
sub
subb
dec
fsubr
inc
enter
cmp
jnp
fstpl
pusha
xchg
pushw
push
or
and
inc
imul
pop
gs
cmp
cmp
or
push
sbb
in
jecxz
jns
adc
push
dec
jecxz
push
sub
cmpsl
lock
mov
mov
and
mov
mov
sub
push
icebp
ds
dec
out
in
ds
push
insl
lea
repz
pop
sar
adc
sarb
pop
dec
outsl
popa
les
testb
add
mov
lret
xlat
lock
fs
mov
jno
stos
in
jns
ret
cmc
stos
test
into
rcl
mov
movsb
pop
imul
mov
or
and
mov
mov
lds
inc
pop
pop
bound
add
enter
lret
bound
jmp
fsubs
cmp
mov
pop
or
xchg
jg
into
jno
pop
movsl
cmp
jns
fsubs
xchg
orl
sbbl
cld
addb
cwtl
adc
jb
pop
mov
pop
pmullw
into
mov
jl
xor
jns
gs
fwait
xor
je
xlat
movsl
out
mov
pusha
nop
add
mov
push
jmp
or
in
pop
sbb
sbb
or
dec
cmp
and
cmp
jl
clc
mov
cmp
fsts
out
push
sub
jo
cmp
jne
pop
lahf
cltd
pushf
cmp
cmp
arpl
lds
pop
mov
inc
frstpm(287
mov
cmp
rorb
mov
xchg
insb
js
jp
cmc
addl
sub
out
xor
loopne
arpl
inc
gs
repnz
mov
mov
das
repnz
in
lods
out
fs
filds
push
gs
pop
repz
push
or
inc
xchg
jno
sbb
cmpl
mov
ja
insl
data16
cs
mov
push
test
jp
pop
imul
pushf
fimull
in
inc
js
out
pop
sahf
rolb
inc
call
push
dec
push
push
aas
fldt
push
andl
mov
jno
fcoml
repnz
movsb
cli
push
cmp
xchg
scas
mov
and
push
pop
inc
push
rolb
test
ret
arpl
mov
mov
int
loop
aad
inc
das
lret
subw
shr
in
pop
jp
stos
sahf
repz
jg
and
add
dec
scas
inc
hlt
push
jae
xor
into
fistl
cmp
popf
xor
les
mov
ljmp
out
sub
jno
popa
xorb
mov
lock
mov
mov
out
mov
out
in
push
aaa
into
orl
fsts
xor
and
fnsave
inc
es
pop
pop
adcl
lahf
mov
leave
xchg
daa
test
out
push
ljmp
mov
xchg
loopne
xor
lods
sahf
mov
mov
mov
loope
bnd
das
xchg
cmpsb
mov
js
lock
inc
push
pop
std
bound
iret
and
movsb
jne
into
lea
stos
popf
push
in
sub
ds
std
mov
xchg
idivl
out
inc
and
and
xchg
jo
aam
fwait
popa
neg
rcll
lods
inc
icebp
or
mov
shrb
stc
or
jmp
dec
in
inc
mov
test
ds
sub
push
mov
jecxz
jbe
xor
aas
and
inc
push
fisttpll
aaa
iret
aad
fistpl
lods
jns
dec
add
call
fs
ficompl
add
sub
add
dec
sub
insb
rcrb
in
pop
and
mov
aas
inc
movsl
addr16
roll
in
loopne
cwtl
or
xor
cmp
daa
out
test
xor
and
imul
or
popf
xchg
hlt
pop
mov
js
cmp
std
cltd
add
aas
and
jo
jmp
cmc
loope
add
jp
lock
sti
adc
pop
mov
push
jns
pop
xchg
add
add
fisttpl
sub
mov
and
out
bound
popa
stos
hlt
adc
add
fnstenv
out
mov
pop
fidivs
leave
orl
add
addr16
sbb
jg
add
push
fdivrl
gs
scas
pusha
adc
xor
cltd
or
dec
xchg
mov
ljmp
xor
xchg
add
push
mov
xchg
cmp
lret
rcr
jne
pushf
gs
mov
sbb
je
fisttpl
enter
inc
scas
xchg
subl
pop
mov
xor
push
inc
sti
in
jo
pop
fstp
loop
in
pusha
sbbb
cs
ss
dec
sbb
add
shll
lret
aaa
imul
push
sarb
push
cmp
or
call
xchg
pushf
cmp
mov
or
mov
xchg
js
popa
enter
cmp
sbb
pop
dec
dec
fisubs
mov
js
pop
and
sbb
add
push
inc
in
cmc
nop
pop
out
jnp
mov
stos
xor
xchg
adc
pushf
movsb
dec
dec
adc
lret
gs
mov
das
pop
mov
mov
xchg
add
fwait
movsb
inc
int3
xchg
aas
adcb
aas
popa
icebp
pop
xor
lea
push
xchg
mov
add
mov
mov
out
in
insb
jge
aad
mov
jne
dec
icebp
xchg
cmp
mov
pop
cltd
inc
lahf
mov
adc
pusha
test
jb
mov
fidivrl
aaa
xchg
int3
sub
mov
fdivrs
mov
imul
fistpl
mov
movsb
sbbl
pop
scas
push
sbb
or
jne
clc
addr16
sub
dec
mov
and
sbb
sbb
mov
ret
pop
ljmp
push
mov
mov
sbb
call
and
nop
xlat
ret
ja
insb
out
adc
mov
inc
push
lahf
aad
imul
sahf
lock
mov
cltd
shl
test
int
xor
xor
dec
loope
and
in
aas
xchg
scas
lahf
data16
std
arpl
and
add
adc
sub
adc
push
insb
lea
mov
xor
inc
rclb
xchg
xor
mov
mov
pop
cmp
adc
and
bound
out
xor
aaa
push
cltd
inc
roll
ljmp
push
enter
jne
xchg
xor
add
jmp
into
jp
or
add
or
mov
xchg
push
jge
mov
rcrl
dec
fwait
out
icebp
cmp
jl
je
cmp
outsl
jnp
push
test
inc
and
xchg
push
test
lock
stos
xchg
xchg
dec
in
icebp
sbb
mov
imul
jae
dec
in
xchg
lds
jecxz
dec
pop
insb
mov
push
cltd
sub
idivb
loope
mov
dec
lea
adc
leave
xor
pop
push
out
cli
push
push
addr16
fcmovu
addr16
and
cmp
mov
cltd
mov
mov
mov
js
xor
jecxz
xchg
gs
gs
lret
enter
push
mov
and
xor
push
mov
in
imull
jg
xchg
lock
out
pop
lock
lret
popf
ret
ja
hlt
cli
rcl
sub
test
push
cmpsl
jbe
out
xor
mov
push
mov
gs
push
outsb
lahf
test
add
push
push
sub
sbb
das
mov
cmp
xor
push
push
lea
jmp
divb
aas
and
ljmp
inc
out
adc
xlat
pop
xor
or
mov
pushf
push
scas
and
cltd
scas
gs
mov
rcrl
pop
xchg
mov
jo
add
ja
cmp
dec
loopne
cmp
sub
adc
or
stos
adc
out
add
jnp
cmp
jo
inc
fisubrl
lret
dec
fsubr
sub
mov
ficoml
fisttpl
lret
int3
push
cmpsb
test
in
add
cltd
jno
or
adc
sti
ret
mov
sbb
dec
stos
add
mov
dec
pop
clc
mov
jecxz
std
mov
mov
add
jno
xchg
mov
std
clc
or
loopne
jne
xor
gs
out
pop
cmc
sub
rcrb
xchg
pop
push
cmp
mov
loop
outsl
cwtl
ljmp
aam
add
notl
dec
les
dec
pop
outsl
and
xor
jp
loop
mov
and
xlat
cmp
push
mov
arpl
xor
push
imul
popa
js
xchg
jmp
pop
lret
popw
or
and
fisttpll
test
mov
mov
inc
and
xchg
mov
andl
inc
mov
ljmp
not
inc
fcmovb
or
push
ja
cmp
pusha
je
and
adcb
aam
sub
jne
jbe
movsb
xor
sarl
pushf
sub
push
mov
xor
fiadds
ret
out
sub
pop
jne
jg
xlat
fwait
movsb
adc
out
retw
nop
cmp
pop
cmc
dec
sub
add
mov
dec
xor
jbe
pushf
inc
repz
loop
fdivs
cmp
pop
cmp
pop
fisubrs
outsl
in
cld
cmc
mov
test
sahf
std
mov
xchg
daa
sti
popa
mov
clc
push
and
jge
adc
xor
addr16
in
jno
cmp
adc
push
ds
mov
xchg
aad
into
popa
rol
iret
push
rcll
mov
movsb
mov
arpl
sub
xor
cmp
bound
sti
sbb
icebp
dec
sub
orb
xchg
inc
outsb
sub
and
idivl
xchg
daa
lret
mov
cld
jno
pop
sub
iret
push
leave
and
xchg
cmp
xchg
in
lcall
test
lock
lock
movsbl
mov
ja
sub
sbb
sub
lret
cmp
push
cs
ficompl
push
xor
in
sub
adc
hlt
mov
inc
jb
xchg
adcl
adc
std
sbb
cmp
mov
sbb
dec
xchg
insl
clc
cmp
adc
shl
pop
mov
cwtl
stos
lret
adcb
pushf
cwtl
or
mov
push
pop
adc
push
out
mov
loope
push
and
push
lods
fidivs
in
xchg
lret
push
test
fisttps
adc
jl
cmp
xchg
mov
das
pop
inc
and
sub
xor
aad
cs
cli
mov
xchg
add
test
dec
jg
cmpl
fdivrs
pop
xchg
or
leave
loope
out
enter
xchg
sub
lock
std
fiaddl
mov
and
fsts
sbb
mov
cs
leave
nop
cltd
addl
subl
imul
shr
xor
push
cmp
xchg
push
in
xchg
fs
ljmp
sbb
jg
mov
outsb
test
pop
cmp
pop
dec
jle
mov
fcoml
jg
ds
xchg
sub
fisubrs
mov
fidivl
pop
jmp
cmp
cli
imull
gs
mov
int3
push
and
mov
jecxz
fnstsw
xchg
fidivrl
ja
add
jmp
pop
xchg
add
adc
or
and
dec
adc
dec
lahf
inc
mov
icebp
xor
int3
jg
arpl
jo
jbe
cmpsb
insb
mov
mov
stos
imul
or
popa
mov
ja
pop
push
add
es
and
pop
lret
or
lock
lahf
cmp
mov
inc
lds
leave
cmp
sub
cmp
and
adc
sbb
cwtl
ss
jecxz
iret
push
sbb
sub
cwtl
pop
fs
and
test
inc
push
cmp
xchg
pushl
outsl
pop
stos
daa
subb
add
add
insl
mov
mov
aas
ret
or
leave
fcompl
and
out
sub
adc
outsl
into
test
cld
inc
pop
inc
sub
enter
push
lock
dec
in
fcompl
jp
mov
xor
or
mov
lahf
data16
xchg
cwtl
or
jl
mov
mov
push
imul
pop
jl
mov
sub
xor
adc
or
jne
add
test
push
rcrl
rcll
mov
jge
xor
sbb
nop
outsb
test
ja
jle
test
mov
sub
repnz
lret
lods
adc
loopne
push
imul
add
out
pmaxub
mov
fisubs
ss
push
or
xlat
adc
mov
xor
lods
fistps
dec
pop
lcall
adc
push
js
cmp
and
jne
sbb
mov
jb
xchg
adc
pop
or
xchg
add
or
repz
clc
cmp
inc
je
and
mov
mov
dec
push
sbbb
aaa
dec
or
mov
xchg
enter
aaa
lods
cmpsb
sbb
and
xor
imulb
mov
mov
sbb
dec
aaa
je
lahf
ss
jne
adc
xchg
fwait
push
out
cwtl
stos
and
leave
pusha
stc
or
out
faddl
xchg
lods
outsb
lods
mov
and
int3
jg
sarb
jb
scas
nop
mov
adc
popf
and
fstpl
cs
arpl
and
shl
add
push
jns
pop
es
dec
pop
sub
outsl
insl
push
aam
xor
inc
sbb
testb
adc
pop
cmp
push
test
jl
lods
and
das
jb
and
aaa
pop
mov
cmp
sbb
jae
lret
cmp
aad
cmc
and
xchg
lahf
mov
cltd
push
fsubrs
jne
dec
jp
cmp
adc
xor
jecxz
cmp
jb
out
fsubrl
push
cld
push
inc
xchg
xchg
jne
gs
imul
mov
cmpsl
inc
scas
jl
fcmove
jp
jne
xor
inc
mov
mov
mov
ret
loope
mov
inc
fistpl
mov
das
cmc
stc
out
psrlq
sub
mov
xchg
push
in
mov
shrb
test
clc
jmp
push
pop
xchg
pop
sahf
ret
push
dec
push
shll
mov
sbb
sub
xchg
arpl
loopne
xchg
sbb
in
fxch
test
inc
or
arpl
add
clc
call
adc
dec
add
rorb
das
mov
add
test
push
cmpsl
ret
sar
push
cwtl
ljmp
in
sub
cmp
jecxz
mov
js
ds
adc
mov
scas
idivl
fs
mov
xchg
add
stos
push
sbb
adc
lret
clc
mov
push
arpl
or
adc
push
lahf
mov
push
test
sbbb
mov
sub
push
push
movsl
lods
adc
adcb
dec
shl
test
mov
push
cmp
cmp
gs
jo
fldcw
iret
and
inc
pop
arpl
imul
repnz
mov
add
mov
ja
clc
xchg
push
stos
mov
xchg
sub
pop
xor
daa
loope
std
adc
jo
ja
mov
or
jb
imul
jns
mov
inc
push
push
mov
jle
dec
lret
cmp
inc
pop
aam
rclb
cmp
das
ja
add
daa
and
insb
divb
or
outsl
cmpb
aam
mov
scas
inc
or
popl
or
mov
insl
xchg
cltd
js
or
test
push
fwait
xchg
xchg
inc
push
adc
dec
add
push
jb
xlat
sub
sub
add
mov
sub
dec
adc
ret
insb
push
out
jecxz
int
jmp
add
in
pop
jb
jg
mov
adc
inc
ror
pop
jne
mov
add
lcall
push
xchg
jp
jmp
mov
enter
in
sbb
shll
lea
ljmp
popa
and
cwtl
push
pop
jne
push
mov
sbb
add
dec
mov
mov
lret
lret
aas
jmp
stc
shl
aad
cmp
popa
jb
pop
dec
mov
sub
pop
lock
or
sbb
jns
ds
lahf
fsubrs
pop
popf
sbb
idivb
sti
pop
addr16
jo
int
outsb
out
mov
mov
ljmp
in
lods
test
push
bound
xchg
pop
lds
cmpsl
mov
push
mov
mov
xor
dec
data16
sub
fldenv
mov
jae
jns
and
xchg
jle
dec
in
ss
pop
mov
cmpsb
mov
adc
mov
mov
and
repz
xchg
cmp
xchg
inc
push
mov
int3
xchg
insl
adc
es
add
mov
push
testb
sub
xor
aam
ja
repz
cmpsb
fnsave
mov
mov
fs
inc
mov
adc
subl
pop
rolb
push
cmpsl
scas
pop
fs
adc
data16
sahf
lock
mov
and
and
jmp
inc
fimuls
arpl
fsubr
fnstenv
scas
ficoml
cmc
mov
filds
push
inc
lret
es
ficoms
add
mov
push
das
ljmp
nop
lea
mov
or
lahf
test
xchg
sub
insl
ret
scas
cmp
cmove
imul
lea
pop
out
push
hlt
push
push
lock
in
fwait
aas
and
dec
mov
pop
jnp
add
xor
lret
aaa
addl
push
adc
test
inc
inc
ds
das
jle
hlt
mov
jae
sbb
inc
lods
xor
daa
lea
mov
pushf
jle
rclb
ja
and
loop
cld
pop
pop
repz
pop
mov
pop
mov
mov
xor
rcrl
cwtl
lret
xchg
pop
rcrb
push
pop
fcmovne
les
push
fstps
or
sub
xor
xorb
fbstp
sbb
xor
mov
sub
cmc
fldcw
je
mov
adc
jmp
ja
push
bound
cltd
push
nop
repz
cmp
mov
lahf
not
sbb
inc
out
in
dec
out
adc
fdivrp
and
pop
idivb
out
mov
daa
arpl
jge
lods
add
sahf
and
pop
rol
cmp
pusha
mov
loop
je
mov
pop
push
pop
sbb
divb
cmpsl
ds
lret
jae
movb
je
push
mov
sahf
mov
daa
sbb
test
and
test
adc
inc
out
lcall
pop
jge
push
xchg
cmp
jg
call
push
mov
mov
sbb
repz
das
sahf
jle
test
sbb
mov
mov
jecxz
fsts
fucomip
inc
cli
arpl
jmp
out
sbbl
mov
repnz
lret
das
or
cmp
and
out
dec
add
das
mov
movsl
fbstp
xor
fbstp
fiadds
mov
sarb
or
loop
outsl
mov
pop
sbb
inc
mov
fwait
lods
fnstsw
push
mov
cwtl
push
inc
add
cld
mov
scas
mov
lods
xchg
fwait
xor
arpl
pop
or
mov
sub
fldl
push
es
mov
jb
lahf
mov
inc
cmp
imul
stc
pop
or
notl
add
syscall
nop
pop
aaa
xor
jno
sub
push
jbe
in
pop
fidivl
jecxz
outsl
testl
jo
outsb
cmp
push
shrl
push
in
lea
add
push
push
imul
mov
in
and
push
or
aad
xchg
mov
adc
add
push
movsl
dec
popa
jnp
cmp
fsubrs
pushf
cmpsl
aas
test
pop
pop
stos
push
fldcw
or
adc
push
stos
dec
popa
dec
loop
cwtl
std
setno
stos
adc
mov
xchg
xor
das
mov
jnp
lret
int
jne
or
aas
outsb
imul
cmc
out
dec
inc
out
sbb
je
test
aas
fcmovb
sbb
outsb
sbb
ds
pop
cld
icebp
mov
cmp
xor
testb
jns
sbbb
mov
adc
mov
adc
add
jno
add
xor
lahf
outsl
addr16
repnz
inc
push
pop
xchg
in
sti
mov
dec
sbbl
adc
loopne
int3
add
sbb
mov
sbb
inc
arpl
sbb
jl
jne
adc
ret
imul
movsb
xchg
xchg
jno
mov
mov
gs
mov
mov
jb
daa
sub
or
xor
sub
mov
insb
loop
imul
xchg
pop
loopne
mov
andb
adc
orb
and
fmuls
add
aam
pop
push
je
jb
mov
cmc
cmp
fisttps
pushf
orl
cmpsl
out
jge
mov
daa
lahf
sti
out
mov
iret
scas
fidivs
in
ficoml
jnp
pop
popf
lds
jno
ret
hlt
sub
roll
dec
cmc
leave
sub
inc
push
push
std
mov
rcl
inc
sub
repz
sub
fistps
incl
sahf
and
pushf
sbb
xchg
mov
dec
jge
mov
push
int
push
jmp
xchg
jo
mov
xor
mov
lock
add
andl
pop
out
sbb
mov
lods
dec
xchg
jns
sub
push
popl
cwtl
jae
mov
mov
mov
sbbl
lods
xchg
jae
mov
stc
movsl
xor
jmp
and
cmp
dec
loope
sbb
dec
dec
push
pop
mov
sbb
sbb
pusha
mul
into
fistl
jl
adc
xchg
call
xchg
jp
add
mov
ret
ret
pop
push
add
mov
icebp
dec
in
mov
loope
mov
fadd
icebp
es
out
out
dec
sbb
jl
sub
punpckhdq
aaa
les
fnstsw
iret
clc
xchg
subb
xchg
push
jecxz
add
imul
push
sbb
adc
movsb
xchg
lods
bound
nop
loop
frstor
inc
mov
shr
dec
ret
sarb
pop
jns
lea
decb
mov
js
xor
cmp
nop
jecxz
dec
or
mov
out
xchg
push
cmp
lods
cmp
stos
test
xor
pop
push
movsl
xor
stos
mov
int
add
inc
rcll
dec
fcompl
pop
loop
jb
or
sbb
jl
jae
xor
mov
mov
outsb
int
test
mov
fdivs
fnstcw
xchg
mov
mov
std
jne
gs
xchg
mov
mov
mov
out
adc
inc
fistl
lahf
sub
in
sbb
jo
insl
lods
lea
stc
pop
das
cmovbe
pusha
mov
shr
pop
dec
in
sbb
jno
out
dec
iret
mov
aad
dec
push
repz
pop
or
adc
lods
inc
dec
cmp
ja
stc
push
push
sub
jno
rcr
mov
hlt
bt
cmp
cmp
mov
mov
ret
xor
mov
add
imul
repnz
dec
xchg
mov
mov
out
push
in
and
or
mull
scas
and
xchg
pushf
xor
add
mov
pop
or
mov
dec
mov
js
adc
lds
xor
jne
sbb
clc
cmp
xchg
adc
dec
in
mov
aaa
pop
imulb
fmuls
addl
lahf
xor
mov
or
repnz
add
mov
jmp
loop
cli
mov
cmp
int
lea
sti
repnz
and
cmp
mov
dec
pop
in
ret
mov
jle
sub
push
pop
add
mov
inc
mov
mov
pop
fwait
push
pop
out
or
cmp
mov
ret
daa
adc
stc
nop
pop
push
scas
or
xlat
mov
out
add
jge
addr16
mov
mov
imul
push
cmp
inc
je
sahf
xlat
push
insb
push
xor
ljmp
push
out
mov
jns
cmpsb
loope
aam
push
stc
dec
cmc
fildll
in
and
mov
es
mov
pusha
inc
pop
add
ret
mov
ret
sbb
les
cltd
xor
xchg
adc
mov
or
xchg
fdivl
bound
shlb
in
inc
pop
lcall
ljmp
xor
mov
pop
cmp
xor
and
fs
xchg
gs
mov
or
push
and
adc
mov
inc
mov
aas
dec
mov
ficomps
fcmovbe
movsb
cmp
push
ret
aaa
daa
jae
lods
iret
jb
inc
fcmovb
xlat
jb
jno
popa
xor
mov
test
sahf
xor
rcrl
cmp
push
sbb
daa
mov
in
andl
int
mov
fs
pop
es
stc
push
out
push
sbb
outsl
add
push
lahf
ss
daa
and
inc
int3
cmp
scas
and
or
sti
adc
jbe
push
xor
nop
fs
lods
and
dec
pop
cmp
mov
mov
fimuls
xchg
sub
xor
mov
cmovb
out
lock
sbb
sbb
mov
ss
mov
push
movsl
sti
adc
jg
popf
in
pop
pop
mov
loope
and
push
in
xchg
push
repz
and
pop
mov
leave
pop
mov
inc
lea
daa
push
inc
cs
add
in
ja
mov
fidivs
lret
lock
test
clc
adc
out
test
std
mov
adc
xchg
sub
mov
rolb
test
lock
pop
push
test
inc
pop
ja
insb
mov
push
push
outsl
mov
sbb
cmp
pushl
in
inc
pop
mov
stc
mov
pop
jbe
lea
push
mov
or
sbb
mov
sbb
ljmp
ja
fldcw
push
adc
das
sub
pusha
aad
pop
jo
ss
add
add
pop
sub
sahf
pop
push
cli
pop
xor
and
xchg
test
mov
adc
cmp
aam
icebp
rorb
addr16
hlt
test
xor
add
xorb
shrl
pop
into
sub
repz
adc
xchg
jns
arpl
pop
test
hlt
lret
pop
mov
lret
in
pop
pop
in
inc
inc
and
xor
in
aas
push
das
mov
jbe
adc
hlt
add
adc
xchg
insb
out
push
inc
js
and
sbb
loop
pushf
xor
repnz
pop
incl
sbb
and
orl
sub
loopne
xchg
jo
add
movsb
imul
pop
jp
sub
mov
push
test
orb
mov
cs
xchg
pop
pop
out
out
dec
jecxz
shrl
jbe
lret
and
mov
xchg
sbb
pushf
and
xor
sbb
cmpsl
jae
push
adc
adc
sbb
cmp
sbb
dec
rol
cli
fildll
lods
xchg
pop
jae
sbbl
xchg
int
mov
sbb
mov
stos
out
test
out
imulb
mov
lds
xchg
shl
adc
jo
ds
mov
xchg
cmpsl
stos
pop
xor
mov
loop
out
mov
push
sub
enter
xlat
stos
mov
lock
mov
fs
imul
fisttpll
push
dec
ficoms
int
test
sub
rclb
les
ja
add
das
xlat
adc
add
xor
je
fbld
aas
xchg
add
fwait
rcrl
outsl
dec
loop
aad
cmp
js
movsb
and
repz
repz
pop
imulb
pop
dec
mov
dec
jge
stc
repnz
std
leave
jmp
in
sbb
inc
rorl
int3
rorl
dec
ret
das
pop
stos
xor
popa
mov
jns
outsl
mov
call
lock
outsl
fsubrp
inc
mov
dec
int3
pop
jae
sbb
insl
rcrb
mov
cltd
ss
movsl
out
imul
xchg
mov
push
inc
xor
aas
mov
sarb
andb
jae
jns
or
push
push
out
inc
pop
and
and
call
xchg
inc
jecxz
and
mov
fcoml
push
cli
aas
testl
xchg
sub
gs
lahf
xor
in
jg
pop
aas
lret
fwait
dec
addl
pop
xor
mov
ficoms
fistl
test
pop
andl
out
stc
fimull
cltd
pop
fwait
adcb
cld
sbb
repnz
mov
enter
xchg
xchg
out
in
dec
testb
rorb
push
lahf
mov
rorl
dec
dec
push
lods
jnp
scas
cmp
pushf
inc
add
lahf
cmp
cltd
or
mov
push
mov
std
xchg
icebp
outsl
lods
cmp
dec
aam
stos
inc
std
sbb
pop
xor
mov
xchg
adc
adc
mov
adcb
xchg
clc
inc
clc
inc
outsl
mov
iret
sahf
fsubrl
enter
ss
pushf
mov
aad
add
push
mov
adc
cmp
push
pop
in
loope
push
and
stos
sahf
mov
push
movl
out
inc
inc
pop
out
ja
adc
fdivs
or
test
mov
lahf
pop
jno
mov
lds
aad
mov
fcompl
repnz
pop
mov
fcmovu
jb
adc
out
mov
and
repnz
xchg
xor
and
xor
cmp
dec
outsl
mov
mov
loopne
mov
repz
jb
subl
lock
mov
cli
cmc
and
ret
pop
rcll
dec
nop
loope
divb
cltd
test
xchg
ret
push
ds
movsl
dec
or
das
lock
push
aaa
mov
xchg
pop
aad
popa
add
jns
sub
mov
mov
and
cmpsb
inc
rcrl
add
cld
repz
push
clc
pop
stos
mov
cmpsl
adc
cmp
lret
dec
outsl
mov
cld
mov
pop
cmp
xor
sub
in
imulb
pop
daa
ss
lods
jmp
mov
inc
mov
pop
repz
cmp
inc
test
in
pushl
lret
jb
les
insb
pushf
in
push
mov
fisubrs
in
lret
jbe
or
push
sub
sub
adc
xchg
and
push
dec
popa
fadds
push
sub
push
shl
pop
call
pop
sbb
test
xor
jecxz
mov
inc
movntq
mov
jl
xlat
mov
lcall
imul
cltd
aam
testl
lds
xchg
pop
add
mov
cld
and
push
lcall
xchg
mov
mov
mov
call
insb
movb
enter
or
push
mov
xchg
cltd
imul
push
lea
and
cmc
add
jmp
push
mov
jecxz
in
jl
loopne
inc
pushf
aaa
lods
ss
jns
mov
js
mov
mov
gs
or
jge
scas
add
or
cmp
test
out
test
jg
sbb
mov
data16
pop
mov
daa
and
test
jns
sti
jbe
out
mov
adc
jecxz
or
ret
or
mov
add
jae
inc
lods
xlat
cmp
lahf
dec
mov
pushl
rol
pop
inc
ret
and
add
scas
jg
addr16
adc
xchg
rcll
or
xchg
js
cwtl
das
lcall
xchg
sub
cmp
andb
frstor
mov
or
ds
or
xor
pop
and
sbb
push
sbb
pop
lcall
and
xchg
imul
ret
mov
dec
mov
imul
repnz
arpl
mov
aas
stos
dec
jno
addb
push
mov
xchg
scas
addr16
jne
inc
push
xor
loopne
push
dec
mov
adc
pushf
ss
bound
mov
sbb
push
push
pop
sub
adc
xchg
lods
xor
push
call
inc
pop
outsl
repz
push
movsl
in
jb
cmp
xor
add
nop
lods
fwait
push
and
stc
push
xchg
xor
lock
sub
int
int
in
inc
push
pop
and
add
push
out
test
xchg
in
imul
jo
imul
push
pop
aaa
sbb
sub
daa
jne
xlat
das
mov
imul
inc
jg
leave
ss
push
outsb
pop
and
mov
inc
test
stc
js
dec
scas
mov
mov
xor
push
sbb
idivb
push
mov
cmpsl
xchg
or
dec
mov
cs
lea
xor
addb
js
pusha
xchg
xchg
pop
adc
test
test
in
push
decb
sub
xchg
inc
push
pop
push
jbe
jp
mov
sbbl
mov
or
cs
addr16
cmp
pop
mov
pop
inc
push
mov
xchg
inc
outsl
jge
dec
push
notb
call
jae
pusha
adc
dec
or
xchg
sub
inc
dec
adc
xor
cltd
jnp
mov
jbe
mov
xchg
movsb
cli
add
push
outsb
sbb
mov
popa
in
push
ret
xor
scas
jnp
dec
das
or
jge
and
incb
inc
dec
or
xchg
fisubrl
dec
sarl
out
add
add
jo
dec
mov
ficoml
dec
iret
cmp
ret
dec
mov
les
int3
and
outsl
ret
adc
jle
outsb
ror
mov
push
add
or
out
fs
sbb
jb
jae
ret
test
fidivrl
mov
mov
out
aas
mov
jne
pop
sbb
les
jo
sub
in
in
test
xchg
sub
jns
lahf
jmp
mov
jmp
sti
and
pop
push
movsb
cmp
sub
fstl
push
popf
iret
js
iret
gs
popf
adc
mov
sub
sub
in
jns
pusha
push
stos
es
xor
insl
push
into
and
mov
shll
sbb
cld
int3
dec
or
and
add
inc
inc
jg
and
push
int3
jns
jno,pn
test
shll
aam
scas
xchg
negl
push
loopne
ficoml
jb
sbb
movsb
push
rorl
in
enter
stos
mov
mov
ja
jecxz
push
punpcklbw
jge
push
push
lcall
mov
mov
dec
jl
dec
cmp
adcb
popf
xor
stc
mov
sbb
push
dec
insl
inc
dec
mov
mov
mov
cmp
sbb
mov
pop
push
insl
pusha
outsb
mov
or
aad
xchg
mov
shlb
mov
mov
repnz
adc
adc
sub
push
pusha
out
test
push
fucomi
insl
cmpsl
lds
mov
push
inc
fidivl
fisubs
dec
lret
cmp
out
mov
rorb
push
xchg
inc
pop
jb
sub
xchg
jb
popa
outsb
mov
frstor
lcall
xchg
push
xor
bound
push
or
or
dec
js
loopne
mov
hlt
into
xchg
cmp
push
mov
loope
mov
jge
test
sub
out
xchg
xor
movsl
and
and
shll
bound
sti
mov
mov
inc
push
aas
mov
in
ficompl
outsl
inc
mov
and
stc
gs
mov
inc
mov
mov
pop
cmp
inc
cmp
sub
lock
cmp
mov
sbb
xor
stc
xchg
push
xor
add
andb
in
cmp
push
xor
sbb
push
je
mov
rolb
lahf
ss
mov
mov
mov
cmp
adcb
lret
pop
sbb
push
lds
or
pop
ja
xchg
test
sbb
dec
lods
pop
push
pop
popa
mov
addb
cmp
test
mov
leave
pop
das
jle
lret
imul
popf
jp
mov
dec
test
rcr
mov
cltd
jae
xor
and
push
push
cwtl
fs
sub
mov
loopne
stos
dec
out
negb
lahf
jb
mov
fimuls
cmp
mov
fs
call
mov
push
cmpsl
mov
addl
popf
jns
jp
mov
mov
negb
outsl
lock
push
outsb
data16
jae
push
outsl
mov
ret
repnz
adc
and
scas
sbbb
and
mov
push
sub
scas
dec
shr
xchg
xchg
es
in
jl
push
scas
pop
je
inc
cld
push
les
sbbl
mov
add
xor
icebp
adc
sbb
outsl
sub
xor
cmp
mov
push
loopne
out
add
jle
and
jnp
lds
aas
sahf
mov
cmc
ja
mov
mov
shll
xor
loope
pop
out
and
dec
test
dec
faddl
push
lods
bound
lret
inc
stos
xchg
jae
cli
jmp
insl
inc
and
or
sub
inc
push
mov
dec
ljmp
lret
pop
lods
inc
ljmp
jmp
ret
daa
bound
lods
mov
lods
in
dec
jecxz
inc
xchg
cmpsl
mov
push
push
outsb
stos
sbb
mov
sbb
xor
imul
and
aaa
shl
push
insl
ljmp
mov
xor
mov
cmp
add
leave
loop
push
xor
test
pop
call
into
imulb
outsb
in
inc
adc
mov
rorl
rcr
xchg
leave
or
pop
arpl
pop
in
dec
in
out
jecxz
and
xor
push
mov
clc
sbb
mov
pop
rcr
sbbl
cli
stc
cmpb
repz
imul
sub
and
xchg
xchg
sub
sub
movsb
daa
xor
cmc
sub
add
add
push
or
xchg
sub
mov
pop
divb
insb
inc
mov
xchg
xor
stos
and
ja
xor
add
fsubr
mov
mov
cmp
xchg
mov
fdiv
pusha
cli
sub
adc
lods
shl
into
inc
fucomi
jns
lods
mov
xchg
aam
test
mov
mov
mov
rclb
sbb
cwtl
sbb
jg
xchg
into
pop
dec
ret
jnp
xor
pushf
outsl
test
pop
jmp
sbb
add
or
inc
pop
dec
scas
push
xor
and
in
aas
data16
int
clc
sbb
jecxz
push
clc
or
adc
pop
enter
cli
fdivl
pop
lcall
mov
call
inc
dec
xchg
jbe
incb
arpl
xor
jl
mov
inc
push
add
jb
sbb
clc
mov
fucom
cli
sub
pop
mov
ljmp
shlb
fistl
mov
dec
and
dec
inc
icebp
popf
clc
pop
fmuls
sbb
xor
fsubrs
fdivrl
xchg
mul
push
mov
sub
rcll
push
adc
aam
es
test
xlat
ds
mov
mov
outsb
lahf
out
insb
inc
pop
pop
push
inc
pop
lahf
dec
cmp
and
push
fucomp
pop
call
sub
adc
xor
adc
lret
mov
push
mov
pop
iret
shrb
lahf
test
sbb
mov
mov
jle
shll
sbb
mov
push
cmp
push
and
sub
xchg
sub
adc
cmpsb
inc
cmp
sbb
ja
mov
xchg
insb
data16
scas
cmp
popf
icebp
sub
enter
mov
mov
imul
mov
es
shl
jb
stc
xchg
jecxz
es
jecxz
mov
fwait
xor
sub
enter
mov
mov
adc
mov
in
popf
icebp
push
jmp
notb
push
pop
lds
push
xchg
cmp
movsl
mov
cwtl
imul
shrl
adc
mov
xor
pop
pop
mov
sbb
cmp
daa
ljmp
push
inc
jecxz
push
dec
movsb
push
popa
out
std
xchg
cmp
xchg
cmp
repz
sub
mov
push
pop
inc
mov
je
adc
push
ljmp
jb
adc
test
jp
push
cwtl
stos
in
xor
and
lods
in
mov
xchg
add
push
insb
popa
and
jecxz
out
mov
das
or
stos
add
mov
ret
xor
cmp
xchg
insb
pop
pushf
rcrb
iret
jecxz
jns
push
pop
add
daa
out
cwtl
pop
push
inc
xor
stos
cmp
pop
out
notl
out
mov
std
leave
fisttpll
test
int3
mov
or
fsubrl
dec
es
addr16
inc
out
mov
inc
jbe
cli
xchg
lea
mov
inc
mov
cli
sbb
sti
mov
pusha
testb
lret
sti
lods
cmp
dec
adc
xchg
sub
mov
mov
sbb
cli
scas
cmp
adc
inc
cwtl
daa
pop
ljmp
xor
popf
cmpsl
sub
jp
aad
jb
mov
jns
inc
add
gs
mov
adc
lods
inc
inc
sbb
cld
pop
int
push
cwtl
pop
fucomi
cmp
ja
sub
movsb
xchg
pop
adc
mov
loope
lret
out
mov
add
jp
inc
pushf
dec
bound
jecxz
aaa
aas
in
test
fimull
pop
in
mov
pop
mov
pop
sahf
adc
iret
cmp
mov
adc
xchg
data16
test
inc
mov
fdiv
mov
in
xchg
adc
in
std
xlat
test
jb
jne
loop
pop
add
cmpsb
loop
lock
fimuls
mov
mov
je
in
dec
shlb
ss
sti
mov
push
pop
test
cmpsl
bound
push
mov
jmp
mov
stos
icebp
sub
and
pushf
adc
jae
das
cmp
xchg
lock
push
jge
or
or
ss
push
mov
mov
push
sub
fldz
cld
and
aaa
push
jno
dec
pop
xchg
jbe
cmp
add
dec
adc
imul
stos
add
jmp
in
push
shrb
add
cmp
sub
ja
mov
data16
ret
test
adc
cmp
sahf
test
or
add
xchg
inc
add
sbb
fucomp
or
lea
mov
roll
rcr
or
jp
mov
pusha
repz
inc
push
call
inc
fnstsw
jne
xchg
insl
shll
lret
push
jmp
mov
jmp
mov
leave
add
pop
mov
out
sti
push
sbbl
scas
sbb
sahf
movsl
fidivrs
pop
mov
leave
sbb
add
push
icebp
inc
testb
dec
pop
push
fxam
sbb
pop
sti
push
std
push
add
testl
pop
out
fstpl
add
pop
xlat
jmp
daa
imul
xor
push
inc
or
cmp
push
nop
orb
xchg
inc
outsl
jnp
xchg
mov
xchg
dec
addr16
jg
mov
mov
mov
push
or
rcrb
adc
push
lods
and
lods
mov
sbb
fisubl
inc
cmp
dec
sub
push
pop
inc
sub
arpl
sub
jmp
or
sub
lods
ljmp
xchg
add
movsl
sbb
mov
mov
or
ror
icebp
mov
repz
adc
orl
ret
jle
push
pop
push
into
and
cmpsb
mov
js
inc
mov
dec
rcl
fiaddl
jmp
rorl
sahf
xor
mov
cmpsl
aas
rcrl
imul
nop
mov
or
mov
push
xchg
in
sbb
add
out
nop
add
or
sbb
dec
jae
sub
dec
xchg
dec
in
jns
rcrl
cmp
mov
fcom
xchg
add
rcrl
outsl
aas
xchg
xchg
jnp
roll
add
mov
sbb
push
call
jecxz
outsl
outsl
jg
add
les
and
xchg
jb
cmpsl
mov
les
pop
jae
and
hlt
popa
push
dec
out
lret
cli
push
inc
fisttps
push
sahf
sbb
inc
push
xor
pop
mov
int
pop
outsl
add
jl
mov
and
dec
push
jmp
cmp
jae
dec
xchg
inc
stos
and
inc
inc
call
xchg
dec
pop
push
popf
mov
jno
add
jle
lret
cmp
ret
pop
clc
test
pusha
rcr
pop
in
fidivl
jg
xchg
mov
mov
insb
jl
in
dec
and
cmpsl
sbb
sbb
jge
das
mov
dec
sqrtps
add
dec
lods
movsl
adc
mov
or
mov
mov
je
andl
add
xchg
int3
and
cmpsb
xchg
aas
adc
dec
pop
jns
mov
xor
xchg
ds
shlb
fwait
daa
stc
int
setge
lods
daa
mul
call
jno
push
push
mov
cs
and
mov
je
sub
jle
xchg
xor
outsl
out
mov
mov
mov
sbb
ds
shl
lcall
sub
xchg
adc
ret
jbe
xor
popf
mov
mov
push
repz
pop
sub
dec
mov
in
inc
lret
flds
sbb
outsl
jmp
cmp
mov
scas
outsb
out
data16
cwtl
int3
push
push
mov
jle
or
xchg
pop
mov
nop
sub
jmp
lahf
push
add
fwait
mov
fisubl
icebp
mov
jg
add
sub
push
insl
lret
hlt
jl
movsl
jne
lock
adc
incb
cli
fcmovb
xchg
pop
adc
add
loopne,pt
jo
loopne
sbb
jnp
in
lods
int3
repnz
mov
add
adc
arpl
jmp
fld
mov
fidivl
lock
in
aas
xchg
fnstsw
pop
xchg
xchg
add
into
sbb
sti
push
leave
imul
dec
push
sub
mov
data16
data16
mov
sub
loopne
fnsave
pop
add
int
test
push
lcall
aaa
cmp
push
mov
jmp
clc
or
cmpsl
mov
dec
push
mov
mov
fsubrp
adcb
int
add
jns
sub
adc
jecxz
adc
push
loope
push
mov
push
shlb
aam
xor
fisttps
or
cmp
cmp
mov
xor
pop
out
imul
sbb
repnz
cmp
xor
push
push
inc
fistl
push
rorl
mov
mov
rorl
push
ret
jle
dec
xchg
dec
cmp
js
lahf
dec
fwait
inc
sbb
push
inc
ret
pop
ljmp
push
or
pushf
insb
add
xchg
imul
mov
fisubs
pusha
arpl
push
jmp
int
add
add
std
add
xor
fmulp
popf
and
adc
add
jo,pt
hlt
je
mov
imulb
adc
sbb
and
insb
or
or
xchg
jge
sub
inc
fsubl
shlb
adc
cli
mov
gs
add
mov
das
sbb
adc
lods
lcall
call
dec
frstor
mov
in
push
call
sub
dec
jmp
and
pop
rcl
vandnps
dec
repnz
mov
pop
mov
out
lea
mov
pop
xchg
fsubrl
in
xor
fwait
or
mov
loope
adc
ret
pop
shl
ret
loop
rol
mov
mov
aas
push
adc
sbb
mov
jg
ss
mov
mov
add
mov
ljmp
jg
pushf
daa
and
or
jnp
mov
enter
lods
movsl
mov
sub
inc
cmc
dec
dec
inc
in
cld
int3
fistpll
mov
mov
stc
mov
ds
pop
fs
shlb
mov
loope
imul
stos
addl
decb
sub
sub
add
popf
xor
jmp
les
inc
out
imul
stos
mov
sbb
je
xchg
leave
fcomi
popfw
cmpsl
addr16
es
cmpl
lret
push
lea
jbe
daa
fdivs
ret
jp
and
sarb
ljmp
jae
inc
loopne
rcrl
call
xchg
ds
or
pop
sub
inc
and
dec
xchg
add
js
iret
mov
add
cmp
xor
out
pop
inc
xchg
out
popf
sbb
mov
fisubrs
repz
imul
int3
mov
fdivr
push
ss
cmpsb
fiadds
cmp
ret
cltd
mov
dec
and
mov
or
shl
test
cld
shll
jae
ret
jb
pop
jno
mov
add
add
or
lcall
les
mov
into
mov
cmp
cmpb
mov
push
in
in
or
and
cmpsb
pop
adc
xor
lgs
jo
sub
jl
lret
lods
inc
add
inc
mov
sti
jge
scas
add
mov
adc
bound
cmp
sarl
outsb
jl
pop
jecxz
dec
mov
and
push
pop
sub
cmc
hlt
push
jmp
out
or
clc
sub
fldt
cmp
mov
and
pop
pop
notl
bound
cmp
pop
pop
int3
ds
jbe
loope
push
push
in
adc
in
mov
pop
inc
mov
int
push
and
sahf
mov
inc
adc
pop
imul
icebp
mov
ret
xor
sahf
lods
adc
scas
sbb
aaa
bound
addl
xchg
push
subb
mov
pop
mov
std
mov
jmp
lret
gs
in
scas
addr16
jecxz
jmp
mov
fadd
sti
and
in
mov
or
push
outsl
imul
movsl
mov
xchg
pop
out
mov
movntss
mov
aam
dec
ss
push
push
aaa
mov
jecxz
cld
xchg
cmp
cmp
testl
push
andb
jbe
loop
out
push
mov
mov
xchg
shrb
mov
test
test
xchg
scas
jnp
cld
lret
mov
push
push
and
add
mov
pop
mov
aas
outsl
and
test
mov
rclb
imul
test
cltd
lea
pop
imul
cmp
dec
bound
or
imul
shlb
jnp
enter
inc
jmp
mov
dec
pop
cmpsb
jp
fildll
fwait
lods
mov
pop
mov
and
push
or
jl
insb
and
rclb
ljmp
outsl
arpl
mov
ret
cwtl
pop
jmp
enter
lea
pusha
je
lods
in
mov
dec
decb
sbb
call
dec
ds
push
or
lods
sub
jno
xchg
push
lods
cmpb
xorb
xor
adc
push
or
cmpsb
mov
sbb
imul
stc
xlat
mov
fwait
scas
pop
aad
xor
outsl
les
push
lret
repz
dec
xor
rolb
enter
pushf
jo
leave
mov
dec
mov
pop
lret
fmull
ret
sbb
mov
outsl
mov
mov
lock
jecxz
inc
adc
mov
xor
pushf
ljmp
sbb
adc
jge
xor
dec
mull
test
push
mov
fxtract
das
mov
inc
and
jb
jne
sbb
push
pop
out
icebp
maskmovq
push
repz
adc
in
nop
divl
bound
out
mov
inc
xor
imul
sahf
jo
xchg
pop
stc
push
xchg
cwtl
or
xchg
jae
in
cmp
xor
push
adc
cmp
push
jp
nop
mov
stos
fidivrl
int
aaa
fcmovu
push
icebp
jg
dec
cmp
jp
and
xchg
add
and
hlt
lcall
mov
adc
jl
adc
jl
daa
int3
int3
mov
sbbb
pop
cmp
inc
push
mov
xor
jne
mov
mov
adc
in
mov
es
testl
fcmovnbe
outsl
loope
jno
xor
jae
cli
out
sbb
sub
mov
mov
int
data16
scas
arpl
fcomi
inc
popa
adc
orl
mov
adc
or
enter
jo
repnz
pop
add
inc
or
cmp
xchg
in
pop
push
in
cli
pop
sbb
daa
add
lock
addr16
pop
cmc
ss
rcll
add
jp
mov
addb
jmp
sbb
icebp
and
push
gs
jnp
fldl
repnz
dec
push
pop
int3
repz
sub
shl
rcl
jae
subb
iret
xor
out
jle
inc
aas
loop
gs
arpl
dec
shrl
or
adc
int3
out
add
test
xlat
sbb
vphaddbw
imul
mov
subb
push
mov
xchg
xchg
jns
out
inc
sbb
lea
mov
push
bound
jbe
cmc
mov
leave
pusha
les
pusha
adc
push
sub
dec
add
push
pop
loopne
push
inc
ret
mov
jbe
cli
out
pop
sti
mov
sbb
sub
inc
les
enter
int3
fidivrs
out
sbb
ljmp
adc
pushf
loop
shrb
out
cmc
fs
adc
mov
mov
pop
add
sub
hlt
cmp
test
mov
push
mov
bound
out
mov
shr
nop
outsb
aad
lret
in
or
mov
insb
mov
mov
add
in
inc
xor
xor
sti
jo
push
sub
repz
ret
pop
scas
and
push
xlat
dec
xor
outsl
movsl
jle
xor
jno
and
cmp
leave
std
stc
inc
fsub
sub
imul
inc
sbb
dec
sahf
repz
or
cltd
xlat
push
mov
jns
xchg
add
mov
xchg
and
mov
or
dec
sub
lods
orb
jge
xor
int
outsb
clc
fwait
pop
fsubrs
arpl
sub
movsb
xchg
mov
sarl
jg
stos
out
push
adc
cld
dec
shrb
sbb
mov
lcall
inc
cmpsb
rol
jae
mov
add
lret
xor
aas
push
pop
or
mov
and
push
push
jle
cmp
leave
cwtl
or
pushf
cli
push
outsl
push
lods
add
sti
pop
sub
inc
jle
xor
xor
push
or
push
pusha
in
adc
mov
jae
dec
fidivrs
fsubr
sub
xchg
push
adc
pop
sbb
int
ret
add
in
popa
lea
inc
or
cli
jne
lret
addr16
fmull
les
jecxz
int3
jnp
enter
xor
cltd
mov
out
test
inc
inc
jl
mov
pushf
xchg
insl
sbb
fsubrs
notl
jle
test
test
cmp
imul
sbb
int
out
es
imul
in
imul
adc
push
pop
jae
mov
bound
mov
fimull
lret
add
dec
xor
scas
fwait
mov
shll
dec
loopne
ds
jecxz
xor
movsl
add
outsl
lods
daa
out
mov
fdivrs
push
dec
addr16
push
bound
jnp
push
mov
cltd
and
mov
mov
out
jo
cmp
cmp
dec
fs
roll
sbb
int
movsl
push
or
add
cld
shrl
push
icebp
sti
dec
out
adc
and
rolb
push
testb
push
jae
jmp
mov
xor
pop
dec
ret
and
dec
push
mov
push
insb
add
jno
add
xchg
mov
sbb
cmp
and
push
mov
movsb
roll
imul
testb
pop
xchg
fldenv
ja
popa
jmp
fistpl
gs
cld
enter
leave
insl
pushf
and
push
pop
es
int3
scas
cmp
movl
jp
addr16
int
adc
out
movsl
imul
int3
xlat
outsb
xchg
sahf
cmpl
pop
jmp
adc
xor
ret
xchg
fs
mov
ret
push
out
hlt
hlt
popf
and
shr
gs
test
sar
sbbl
mov
jb
dec
fists
into
dec
mov
aaa
fs
pop
pop
imul
adc
and
outsl
orb
push
dec
pop
movsl
jg
jge
jl
loope
xor
lahf
xor
push
sahf
scas
inc
lahf
shrb
aam
jbe
repnz
fwait
es
inc
fcmovne
outsl
adc
nop
bound
jo
and
cwtl
mov
psrad
mov
outsl
adc
add
cmp
jo
flds
cwtl
fldcw
test
jecxz
or
adc
push
push
or
stc
cmp
mov
mov
fwait
dec
adc
inc
in
mov
inc
popf
xor
sahf
out
nop
fnstsw
aas
outsb
xlat
into
xchg
outsb
iret
xchg
sub
xchg
cmpsb
adc
mov
fsubrp
mov
mov
sub
cmpsl
jnp
rcrl
pop
dec
mov
and
sahf
out
push
pop
sbb
sub
int3
notb
lea
in
sbb
clc
mov
cmc
adc
mov
sub
cmpsb
sarb
push
cmpsb
xor
pop
outsb
mov
push
lcall
cmpl
adc
add
sbb
and
arpl
ljmp
lods
cld
insl
jp
jp
scas
xchg
inc
out
jne
aaa
scas
movsl
mov
mov
mov
mov
je
je
push
loopne
test
xlat
mov
cmpsb
add
inc
shll
mov
movsl
cld
and
jp
push
jae
mov
je
jb
adc
stc
nop
jns
lcall
jecxz
imul
mov
cwtl
jns
mov
js
adc
push
repz
loop
pushf
test
or
dec
fs
pop
mov
shll
in
imul
js
jp
inc
lods
imul
orl
xchg
jmp
and
sbb
out
bound
sub
fcmovnb
sub
or
in
test
ljmp
ss
outsb
cmp
cltd
out
inc
sbb
out
shrl
das
jl
cltd
sub
insb
add
xor
sub
pop
add
pop
aad
mov
outsl
mov
aas
loop
jge
lock
cmp
xchg
cmp
xchg
jmp
rcrl
outsl
shrb
shl
pop
ret
hlt
jp
not
xchg
fnstcw
mov
hlt
add
sub
and
sub
enter
push
in
inc
push
popa
push
jmp
das
jae
push
cltd
subl
inc
nop
sahf
and
jne
fwait
iret
out
jmp
xor
pop
lret
rol
mov
xor
lret
lret
clc
arpl
outsl
movsl
call
xor
jmp
jmp
pop
in
jo
cltd
jnp
ds
arpl
dec
ss
movsb
insb
loop
jnp
dec
inc
push
jns
cmp
jle
inc
mov
dec
loope
xchg
dec
push
movsl
mov
pop
xchg
add
sub
aam
mov
or
ffreep
sub
int
xor
cwtl
shlb
adc
and
sbb
dec
dec
cmp
imulb
inc
pushf
cmp
clc
mov
adc
dec
movsl
pop
jmp
push
jmp
pop
dec
cmp
push
inc
or
lock
stos
mov
jno
cmpsb
cmpsl
add
fs
clc
push
inc
push
repz
xor
cld
xchg
addr16
out
and
rorl
fs
mov
jns
enter
rorl
push
cld
inc
inc
sub
inc
xor
push
call
lret
les
mov
mov
jbe
frstor
xlat
sub
rorl
ja
lock
sub
dec
cmc
sbb
pop
repz
mov
cmp
sub
popf
pop
stos
sub
fldt
fs
xorl
push
push
mov
ss
adc
int3
add
cmpsl
imul
call
insl
jecxz
dec
fdivrs
std
dec
idivb
data16
mov
jp
enter
push
ret
es
popf
lods
pop
xchg
daa
in
out
push
pop
fcompl
flds
mov
or
in
aaa
cmp
sti
loope
nop
montmul
cmpsb
add
push
pop
sbb
mov
loop
lods
into
push
pop
rorb
mov
and
cmp
push
mov
sti
jle
clc
push
xchg
enter
push
fcmovbe
mov
xor
sahf
scas
mov
scas
adc
adc
stc
pushf
push
repnz
cli
inc
les
sub
out
popf
dec
mov
adc
imul
lock
mov
pop
or
jb
sub
push
jne
das
popa
int
jnp
jp
mov
lods
fisttps
rcrl
cld
loope
test
mov
mov
in
xor
sbb
inc
lret
mov
mov
and
mov
xchg
fstps
sub
mov
loope
sbb
mov
mov
mov
in
loope
enter
push
sub
jl
pop
movsb
insl
lock
rorb
add
sub
out
icebp
and
sbb
ret
add
repnz
xor
aaa
shr
xchg
mov
popa
or
and
add
out
xchg
add
mov
adc
jmp
test
xchg
ja
cmpsl
call
fistpll
adc
xor
dec
loop
sysenter
push
orl
mov
add
pop
mov
sbb
dec
cwtl
inc
sbb
rolb
clc
loope
enter
daa
stos
fdivs
mov
mov
xlat
mov
pop
cs
sub
sbb
pop
repz
enter
enter
pop
xor
mov
push
shll
clc
push
or
or
jns
sub
xchg
fnstenv
pop
iret
or
out
mov
les
rcll
lock
xlat
cwtl
cs
insl
jecxz
es
cmp
jp
xor
mov
in
push
mov
mov
mov
inc
insb
imul
in
push
aas
sub
pop
pop
pusha
cmpsb
imul
es
mov
add
pop
mov
stc
push
jle
aaa
fidivl
mov
sbb
out
js
ss
roll
jp
js
loope
push
test
fmull
into
jg
arpl
in
pushl
cmp
xchg
xchg
test
dec
aad
inc
pop
cmp
arpl
mov
je
stos
adc
mov
push
mov
and
or
cmp
jecxz
sarb
cmp
imul
xchg
jmp
insb
orl
in
lods
cli
pop
lock
repz
cmc
cmp
adc
and
mov
fwait
aas
add
scas
je
cmpsl
jge
xchg
jo
pop
xor
push
cmc
jl
int
pop
cwtl
jle
int
push
jbe
mov
cs
xor
pop
xor
les
jno
adc
mov
mov
add
dec
cmp
jge
lahf
pop
inc
leave
xchg
aas
jnp
mov
sub
call
ficompl
jne
or
addb
es
pop
jg
or
hlt
xchg
sahf
or
adc
xor
cmp
mov
jno
dec
in
fwait
mov
icebp
and
in
lods
sub
hlt
sahf
adc
push
mov
fidivrl
inc
mov
ss
add
push
cmp
xchg
cli
imul
call
dec
xorb
fsubl
xchg
test
adc
clc
das
in
test
ljmp
jg
mov
push
ret
pusha
inc
jnp
jno
outsb
cmp
inc
inc
pop
xor
loop
xchg
mov
sub
pusha
pop
shrb
loop
jl
test
jmp
adc
out
xchg
push
ja
das
aaa
adc
pusha
bound
nop
les
int3
mov
and
test
mov
add
movsb
dec
inc
lock
pushl
sbbl
mov
push
insl
adc
das
mov
push
pop
push
add
arpl
push
mov
inc
test
mov
popa
mov
and
rcll
cmc
addb
xlat
ds
adc
clc
or
pop
and
jae
movsb
pop
add
add
aaa
pop
cmp
push
dec
test
clc
cs
test
dec
cmpsl
sub
je
fbld
pop
adc
xchg
inc
clc
ret
outsl
sbb
jae
insl
and
sarb
movsb
lea
push
mov
hlt
jns
out
xchg
and
pop
sbb
ds
and
adc
mov
sbb
adcb
add
push
stos
sahf
jno
loop
xor
inc
push
pop
dec
xchg
cli
ds
lea
adc
xor
outsb
or
scas
negl
xor
imul
or
aas
pop
cmp
clc
mov
push
pop
cmp
add
sub
sub
pop
jb
lea
cld
inc
fisubrs
push
jge
pop
addr16
aad
xor
push
xchg
cmc
cmp
loopne
stc
xchg
hlt
xor
push
insl
mov
push
xchg
cmc
inc
adc
enter
enter
sub
ret
loopne
lods
jnp
in
ds
push
insl
and
int3
mov
push
inc
dec
cmc
lea
inc
popf
and
push
adc
rol
lahf
call
cmp
xchg
sub
in
hlt
mov
mov
pushf
rorl
cli
ljmp
inc
fldenv
mov
pop
push
lock
daa
inc
sub
xchg
daa
jo
push
test
repnz
aad
cmp
xchg
loope
pop
outsl
int3
cmp
idivl
shrl
sbb
or
sub
xchg
das
mov
xor
int3
mov
mov
and
pop
aas
rcrl
jnp
sti
inc
xchg
mov
call
or
shl
add
lods
enter
lea
movsb
push
mov
xchg
jo
jae
rcr
je
cmpsl
cli
xchg
decl
cmpsb
cmp
jecxz
sbb
and
fmull
xlat
test
scas
in
jecxz
pop
sub
xor
inc
dec
out
xchg
js
dec
lock
dec
push
loopne
sbb
nop
out
cmp
lahf
loope
sbb
sti
push
test
fstps
imul
sahf
inc
jmp
popa
out
xor
mov
pop
add
mov
jg
push
mov
cmp
pop
jle
cmp
scas
or
add
sub
jmp
adc
mov
or
cs
loop
rcrb
add
lods
dec
and
orl
into
test
add
inc
xchg
push
xchg
lods
inc
adc
cmp
cmc
cli
iret
data16
mov
mov
std
lret
and
iret
sbbb
loop
and
in
subl
test
call
pop
inc
ret
dec
jnp
inc
fdivl
iret
dec
fstl
rorb
mov
sbb
insl
scas
aam
rolb
mov
inc
fadds
pop
mov
lods
pop
int
int
pop
sub
xlat
test
jl
adc
push
je
mov
inc
cmp
ret
call
mov
insl
out
inc
jmp
shll
xchg
sbb
pop
xchg
dec
fistl
ret
jle
xor
test
sub
jmp
xchg
dec
mov
dec
mov
das
jnp
sbb
mov
push
mov
pop
adc
cmp
les
mov
mov
imul
popf
faddl
addl
adc
push
ds
mov
in
mov
mov
gs
lret
jbe
xor
add
xor
push
insb
and
push
push
fs
leave
add
adc
jge
sub
stos
shr
fisttpl
jbe
cmp
mov
xchg
fmull
and
cmp
push
push
lea
pop
ret
cmp
lahf
ss
insl
pop
dec
sbb
mov
push
fs
push
aad
mov
dec
shl
xchg
mov
mov
repz
or
daa
mov
mov
add
negb
xor
push
call
inc
dec
adc
sub
inc
cwtl
push
ficoml
xchg
test
inc
mov
cmpsb
les
pop
lds
dec
cld
or
push
out
rcll
cmp
and
lret
fnsave
xor
add
filds
sbb
scas
sarl
jnp
lds
xor
bnd
and
inc
psubusw
movsl
inc
fiadds
add
xchg
xlat
xor
test
jp
scas
mov
out
je
jg
inc
push
cmp
and
inc
push
es
outsb
fucomi
cmc
pop
jg
dec
push
adc
pop
mov
jg
adc
xor
dec
jno
xor
inc
std
sbbb
aas
in
bndldx
adc
test
stos
fidivs
fdivl
jecxz
add
mov
ljmp
sarl
mov
lds
adc
xchg
lds
mov
pop
dec
push
into
xchg
cmp
cmp
and
mov
cltd
mov
sarb
add
outsb
add
call
xor
cmp
gs
popf
cmc
xsaves
popa
mov
push
outsl
arpl
push
popf
popf
icebp
mov
push
cli
mov
test
xchg
fimull
mov
mov
xchg
pushf
out
les
mov
sub
mov
mov
pop
in
aaa
pop
jl
daa
notb
or
pop
in
push
dec
cmpxchg8b
iret
inc
ljmp
ljmp
fisubl
clc
pushf
mul
sub
insl
adc
jl
xor
xchg
lods
mov
jns
and
pop
jp
lret
into
mov
nop
cmp
nop
sub
sub
scas
out
clc
push
sub
mov
inc
stc
jle
push
rcr
dec
adc
je
repnz
add
js
insl
rorb
mov
cltd
push
lods
or
and
std
fsubl
lock
fildl
pop
rorb
and
jmp
hlt
nop
stos
imul
aad
adc
and
out
ljmp
pusha
lea
dec
pop
rorb
ret
leave
rcrb
out
or
sahf
ja
aam
fucom
add
pop
sbb
mov
cmp
jl
push
shrl
or
aaa
xor
inc
gs
mov
push
add
inc
hlt
lret
mov
arpl
adc
nopl
xchg
dec
and
bound
xchg
mov
add
fcomps
xor
popl
addr16
jmp
iret
out
test
addr16
inc
adc
inc
and
push
xchg
fnstenv
pop
lahf
mov
iret
push
xchg
add
xchg
insl
hlt
push
and
push
sub
xchg
jb
out
popf
js
pop
adc
inc
data16
mov
aad
xor
mov
add
enter
je
xchg
adc
cmp
cmp
aad
lret
push
ds
das
xchg
adc
mov
inc
pusha
dec
ds
test
out
test
or
pop
int3
push
imul
es
call
loope
je
fsubl
xchg
aad
cmp
sbbl
mov
std
cmp
outsb
in
in
pop
push
je
cmp
or
push
out
sti
fs
pop
xchg
jns
add
jecxz
jae
idivb
jns
or
fwait
mov
inc
in
shlb
dec
push
sub
out
sub
pop
xor
dec
in
cmp
insb
ret
mov
jns
dec
in
add
jnp
imul
lret
jb
mov
movsb
xor
cmp
inc
enter
insb
cmp
xchg
xchg
les
insb
push
sbb
cmpsl
add
mov
sub
in
jne
pop
cmp
jb
arpl
xchg
outsb
aaa
sti
pop
xchg
std
icebp
sbb
cmp
pop
out
rcr
es
xor
pop
imul
jbe
sbb
sbb
xchg
mov
in
mov
or
mov
jns
movsl
sub
inc
pop
scas
xchg
inc
jl
repz
roll
jns
sbb
pop
repz
imulb
scas
mov
xchg
jle
and
and
lock
insb
test
or
fcom
cmpsb
cmp
jg
les
cmp
mov
cmp
or
mov
sbb
adc
loope
insl
aam
out
mov
lds
nop
movsb
ror
loopne
int3
scas
mov
jle
add
and
mov
or
into
xchg
arpl
mov
repz
ret
lret
mov
xor
mov
jmp
lret
fstpl
out
les
fdivl
nop
mov
cli
xchg
repz
sti
push
lahf
dec
dec
fisubs
jbe
fdivs
cmpsb
std
xor
sub
sahf
push
push
sub
leave
mov
idiv
jg
cmp
adc
or
cmp
scas
ret
out
data16
pop
insb
dec
lock
pop
shlb
cmc
scas
pop
cltd
xor
loop
xor
inc
pusha
xor
stos
je
mov
pushw
cmp
push
movsl
lret
xchg
push
mov
xor
and
cli
push
push
jo
sbb
icebp
sub
or
cmp
cli
cltd
adc
popa
push
lods
stos
das
shlb
fstps
sub
int
in
lods
aas
lret
xor
addr16
pop
xchg
fisttpl
push
std
loop
pop
repz
sbb
fs
mov
lcall
fwait
sbb
fstl
cs
cmpsl
or
sub
je
jns
xor
imul
scas
test
sbb
jge,pt
add
dec
imul
lahf
aam
popa
inc
cmp
fisubs
data16
mov
jnp
xor
aaa
les
ret
xchg
in
fwait
repnz
bound
in
mov
jg
iret
dec
mov
add
sbb
push
xchg
sub
imul
or
xchg
pop
leave
push
lret
aaa
insb
imul
popf
dec
popf
push
das
mov
sahf
clc
cmp
call
xlat
cld
outsl
movb
jae
lods
andb
cmp
and
lock
xchg
mov
jl
in
mov
inc
fnstenv
ja
cwtl
xchg
negb
pop
sbb
int3
push
andl
out
inc
call
xor
push
movsl
xchg
sbb
xchg
mov
in
scas
ja
jl
jns
popfw
or
in
pusha
mov
sbb
cmp
jnp
mov
movsl
fwait
ljmp
and
imul
mov
aaa
adc
xchg
and
jo
pop
pop
ljmp
sub
and
adc
stc
inc
lcall
aaa
rcrl
mov
inc
clc
adc
pop
negb
jle
bound
jb
inc
fdivs
inc
sbb
sbb
nop
hlt
jno
add
add
sbb
and
or
stos
dec
mov
pop
int3
dec
mov
jl
adc
pop
and
mov
push
dec
add
aad
movsl
mov
mov
push
adc
push
mov
add
add
fbld
js
add
mov
dec
inc
push
in
test
pop
cmp
pop
popf
xor
outsb
iret
mov
dec
in
ljmp
rclb
mov
testl
mov
or
popf
nop
add
push
mov
adc
cmp
mov
mov
lds
sbb
mov
fwait
out
lock
std
cwtl
das
out
ja
push
test
dec
in
xor
cmpsb
or
imul
loopne
sbb
jg
fidivs
xor
or
mov
jecxz
inc
popa
lahf
add
aas
inc
fdivl
enter
inc
mov
xchg
push
stos
inc
ljmp
dec
cwtl
sbb
cmp
jmp
mov
add
outsl
scas
mov
inc
pop
out
mov
out
repnz
lds
adcl
sub
jp
sub
pushf
call
fsubrs
mov
testb
cmp
out
sti
fsubrs
imul
cmp
inc
adc
pop
jbe
dec
adc
jmp
and
addr16
out
inc
cli
xor
inc
ss
out
insl
push
dec
addb
xor
ds
hlt
inc
lahf
out
test
or
mov
cmc
mov
insb
les
xchg
dec
mov
and
mov
inc
lods
push
mov
shlb
in
adc
stos
arpl
rclb
lds
pop
push
pop
cmc
lock
jl
cmp
enter
pop
mov
and
cmp
push
xchg
and
fnsave
scas
ret
repz
sbb
add
je
push
ret
xor
adc
jecxz
pop
movsl
pop
mov
xor
cmp
jne
dec
in
jg
push
push
pop
pop
fnstsw
jo
xchg
push
enter
jb
mov
test
dec
js
pop
stos
sub
mov
insl
popf
mov
dec
jg
stos
stos
loope
ja
xchg
rcrl
and
jmp
mov
push
xchg
and
adc
sub
cwtl
mov
cmp
inc
lcall
and
push
rol
and
fdivl
inc
mov
imul
jae
sub
xchg
add
mov
sarb
cmpsl
shll
gs
push
mov
lcall
inc
andb
and
arpl
shlb
test
fisubrl
sbb
lods
fidivrl
lea
inc
push
in
xchg
outsb
xor
cs
cmpsb
test
inc
jl
out
cmp
jno
pop
flds
push
sub
jb
iret
scas
inc
or
stos
mov
insl
fucom
test
into
movsl
adc
insb
clc
jb
pop
out
push
xchg
jge
sbb
popf
mov
lahf
inc
ret
xor
sbb
loop
cmp
insb
push
repnz
inc
and
add
inc
mov
mov
ljmp
popf
loopne
into
pop
xchg
shlb
cmp
pop
icebp
jo
lods
jo
stos
stc
addl
dec
jbe
daa
mov
rorb
jns
xchg
ds
lahf
xchg
ja
lret
mov
lret
push
jmp
rorl
sahf
and
repz
pusha
in
in
js
cmp
adc
mov
lock
xor
out
fistpll
push
cmp
insl
ja
dec
gs
sbb
lea
mov
int3
mov
imull
aad
lea
dec
popa
negb
in
inc
out
xchg
insl
push
mov
ljmp
pushf
cli
or
push
ret
cs
push
and
iret
add
es
push
mov
lock
jne
lcall
dec
adc
in
fs
stos
push
xchg
inc
mov
mov
xchg
jbe
fdivl
cltd
cmpsb
xor
fsubl
ja
scas
mov
ds
mov
mov
inc
and
xchg
push
insb
dec
jecxz
cwtl
daa
and
mov
xlat
outsb
mov
sbb
imul
test
cmpsb
xchg
sbb
cmp
push
daa
outsl
sub
push
sbb
dec
pop
sbb
and
mov
test
mov
and
inc
push
pop
int
mov
cmpsb
and
std
data16
std
mov
jl
or
rclb
outsb
dec
repz
mov
cmc
sahf
stos
or
mov
sbb
inc
mov
sbb
inc
xchg
aam
xor
ss
std
cli
push
mov
clc
push
push
inc
mov
int
fs
fldenv
push
xlat
mov
test
loop
fwait
insb
sbb
pusha
push
fcompl
or
es
or
movntps
loop
cmpsl
xor
and
movsl
and
mov
pushf
pop
lea
xor
cmpl
jl
outsb
outsb
cmp
or
loopne
jne
sbb
and
adc
test
xor
ja
cli
xor
xor
mov
daa
data16
dec
dec
xchg
dec
es
jbe
push
push
iret
pop
xor
popa
mov
pop
cmp
shrd
sbb
cmpsl
dec
cld
rol
xor
stc
push
incl
ljmp
mov
sbb
push
or
stos
mov
roll
out
lea
das
xor
fsubl
sbb
ficompl
das
rcl
push
and
repnz
xlat
pop
popa
xorb
jmp
std
inc
push
insb
xchg
push
les
xchg
inc
add
xor
xchg
mov
or
jge
gs
inc
out
dec
or
sub
out
dec
xchg
dec
rorb
xlat
ret
hlt
push
outsb
dec
jne
outsl
insl
mov
popa
leave
jnp
aad
pop
cmp
dec
jecxz
mov
aaa
adc
xchg
mov
cmp
cmpsb
shlb
push
mov
idivb
imul
scas
xchg
stos
in
push
in
mov
push
mov
cmp
repnz
popf
cmp
adc
lahf
jae
fisttps
sbb
jb
cwtl
ljmp
adc
aam
pusha
mov
jecxz
lea
aad
pop
repnz
pop
bound
icebp
data16
xchg
pop
andb
mov
stos
mov
sahf
mov
inc
mov
or
mov
xchg
test
sub
mov
shlb
outsb
adc
ret
and
mov
adc
pop
aam
jp
jno
fists
icebp
or
jae
cmc
dec
xor
pop
ret
js
inc
out
pop
jl
push
xchg
jg
xchg
lea
sahf
call
rolb
push
inc
scas
sbb
jmp
cmc
out
sbb
sub
sahf
dec
push
push
xor
in
js
add
add
pop
mov
mov
lret
clc
cmp
ss
fisubrs
adc
xchg
shrl
fnstenv
mov
movsl
push
or
xchg
out
dec
sahf
mov
jl
test
push
pop
lods
jmp
fsubp
jp
jno
or
arpl
jle
mov
clc
or
xchg
sbb
repz
sub
sub
es
fstpl
out
push
testb
jns
and
shlb
repnz
adc
sbb
jmp
mov
icebp
or
pusha
pop
xchg
sub
test
jae
inc
daa
xchg
mov
decb
icebp
cmpsb
dec
ds
aad
sahf
xlat
mov
lret
call
loopne
ja
movsl
and
iret
xor
movsl
aam
leave
je
les
testb
sub
push
mov
lea
test
rorb
jno
movhlps
sahf
mov
adc
rol
daa
mov
or
roll
outsl
and
mov
mov
ficompl
pop
push
aad
pusha
clc
cmp
add
mov
mov
add
push
les
les
push
mov
ret
int
lret
aas
pop
inc
in
jno
jle
mov
test
push
fucomp
test
lods
inc
fs
sbb
jle
std
xchg
dec
sbb
outsl
ret
jnp
push
seta
pop
or
stc
test
xorb
mov
push
xchg
xchg
stos
xor
pushf
icebp
movsl
jo
push
rorl
cmpsl
and
mov
loope
mov
jae
lock
or
fstl
lea
mov
jmp
mov
cs
sub
ljmp
and
loopne
das
and
popa
shrb
pop
shl
mov
out
in
sub
push
scas
jae
push
fcoml
xlat
out
or
int3
lods
mov
cmpb
mov
nop
lock
xchg
and
dec
add
sbb
mov
stc
test
mov
and
jge
leave
pusha
jg
lret
jp
pop
je
test
inc
dec
in
imul
xchg
aad
jle
mov
scas
insb
push
fwait
or
adc
mov
lods
pop
aad
cmc
push
stos
add
inc
fs
xchg
in
sbb
mov
pop
fwait
and
or
adc
mov
xchg
xchg
jmp
test
sub
rol
insl
jne
movsb
clc
or
pop
jmp
jl
loopne
sub
mov
jns
push
jae
adc
xlat
add
lods
ja
repz
xchg
cltd
fdivrs
adc
popf
jb
or
cmp
mov
dec
pop
inc
lret
stos
sub
jne
inc
and
jmp
sbb
enter
jae
in
lret
cli
xchg
das
push
aad
ss
sbb
sbbl
sub
into
arpl
lret
adc
xchg
out
mov
or
mov
ljmp
iret
and
and
arpl
sub
fcoms
hlt
mov
mov
and
imul
insl
aam
sbb
loopne
adc
sbb
jmp
cmp
or
sub
add
scas
lret
xchg
mov
in
ss
cli
xor
loope
sbb
lea
inc
adc
jp
popf
pop
pop
xor
pop
std
lds
insb
push
repz
inc
pop
aad
bound
fdivrs
arpl
mov
inc
push
mov
dec
adc
mov
ret
fists
mov
flds
mov
mov
mov
pop
adc
enter
lahf
mov
lock
leave
outsl
sahf
add
call
xchg
ljmp
dec
loopne
les
lret
rorl
xchg
pop
cmp
popl
and
loop
ret
movsl
jmp
cmpsb
cmp
aas
fsubr
pusha
nop
out
add
sub
jno
dec
cmp
jg
fmull
std
fdivl
lea
mov
repnz
mov
inc
and
jne
pop
cltd
aas
and
mov
test
movsb
inc
jo
cmpsb
jmp
pusha
jbe
outsl
adc
inc
out
xor
lock
std
aam
cmpsl
push
ja
movsl
andl
fcomps
popa
clc
in
mov
jne
or
push
pop
hlt
inc
sub
sub
cmovnp
bnd
jbe
aas
sub
fwait
sarb
sub
push
ljmp
push
jno
jns
adc
in
sbb
xor
mov
lods
sub
or
jns
sbb
jne
jp
outsl
sub
cmpsb
lock
cltd
shrl
sahf
jmp
or
pop
xchg
or
add
xor
push
scas
fildl
or
aam
aaa
lcall
inc
sub
sbb
push
adc
cwtl
cmp
and
pop
mov
fisttpll
xchg
push
add
inc
sub
cltd
add
mov
inc
leave
inc
and
ss
inc
outsb
ret
fisttpl
jmpw
ret
xor
mov
sbb
hlt
jo
or
insl
out
cmpsb
shr
jecxz
sbb
mov
mov
add
or
inc
jb
jbe
aaa
lods
inc
movsl
push
xor
push
dec
cltd
test
clc
push
xchg
xchg
das
rcrb
loop
enter
shlb
cmp
pop
add
fsubs
jle
xchg
push
or
scas
adc
adc
sub
push
aaa
jge
cs
int3
lret
jo
lods
sbb
pop
dec
xchg
xchg
mov
jle
mov
or
adc
push
rol
cltd
dec
sub
arpl
sbb
ljmp
jno
lods
add
das
ffreep
inc
inc
lds
xchg
pop
int3
lret
jle
jp
lret
mov
fcoml
ds
fdivrl
sub
std
or
mov
cli
popf
or
xchg
dec
dec
mov
and
or
adc
cltd
test
mov
test
daa
mov
fnstcw
outsb
push
inc
mov
lret
mov
fnstsw
inc
repnz
sti
movsl
insb
ss
mov
ljmp
mov
jbe
xchg
inc
jbe
adc
stc
stc
and
xchg
xor
pop
sahf
push
mov
mov
xor
movsl
imul
mov
and
std
or
xor
js
mov
fidivrs
cltd
imul
pushf
mov
and
push
fidivl
arpl
dec
popa
popa
test
mov
pop
insl
inc
dec
cmp
int3
cmp
mov
fdiv
mov
cmp
stc
sbb
shrb
insl
or
insl
dec
pop
mov
shll
mov
add
gs
xchg
aam
mov
add
jae
pop
insl
add
jle
int
mov
nop
pop
dec
inc
push
jnp,pt
pop
rcrb
and
mov
dec
loop
or
mov
gs
dec
and
mov
push
xor
data16
fiaddl
xchg
je
testb
out
shlb
mov
pop
mov
mov
mov
stos
jne
popa
sbb
movsb
push
mov
dec
pop
ds
xor
add
sbb
inc
sbb
cmp
movsl
sub
push
dec
bound
mov
xorb
bound
inc
cltd
loope
or
in
cmp
pmaxsw
fs
jnp
or
fdivl
jge
dec
dec
or
leave
cmp
xorb
mov
inc
xchg
mov
pushf
into
xor
jbe
mov
ficoml
das
loope
sbb
push
ds
cmp
xor
jp
inc
scas
call
pop
jle
jp
lods
xchg
mov
test
dec
sbb
cmp
cmp
mov
test
pop
orl
fmul
lret
add
push
test
add
jmp
lds
or
jecxz
movsb
out
or
cltd
mov
dec
dec
in
imul
xor
mov
fidivrl
pand
cltd
les
xchg
fiadds
loop
push
in
mov
loope
movsb
cmc
aam
mov
das
mov
adc
or
das
mov
rcrb
aam
jno
add
dec
fimuls
js
cmp
sbb
push
sub
shl
push
xchg
retw
das
mov
push
cmp
mov
fcoms
push
mov
cmp
add
mov
cltd
mov
movsl
and
cmp
ja
cltd
popa
lds
dec
sub
daa
push
mov
push
adc
dec
mov
sub
shll
insl
test
cld
and
mov
inc
xchg
repnz
jnp
call
lds
xchg
mov
push
mov
jl
xorb
dec
into
push
jp
arpl
mov
inc
outsl
adc
mov
mov
int3
and
pop
sahf
nop
sbb
dec
leave
cwtl
dec
inc
jmp
jle
lds
mov
je
mov
leave
clc
shlb
lods
cld
lcall
pop
loope
dec
push
mov
mov
fidivrl
sahf
lods
ljmp
rorl
outsb
adc
sub
sub
add
mov
inc
mov
ja
in
scas
mov
jae
addb
insl
popf
in
imul
nop
data16
movsl
xor
add
aam
ja
xchg
adc
push
cmp
push
and
int
add
dec
push
push
pusha
adc
sbb
push
les
cmpsl
imul
bound
sarl
and
in
lret
cs
xchg
imull
popf
sbb
pop
and
fs
inc
sbb
jp
cmp
je
scas
out
push
xchg
mov
add
es
push
arpl
sbb
inc
mov
cmc
xchg
and
fxch
cmp
shlb
ljmp
lds
sbb
testb
push
in
in
fmul
mov
xor
inc
pop
or
lds
outsl
push
sub
rcrb
dec
sarl
mov
dec
fwait
push
imul
lret
jmp
pop
lahf
sub
or
mov
stos
lret
dec
aaa
loope
or
mov
adc
mov
xchg
imul
pop
lock
or
hlt
icebp
mov
sar
or
scas
mov
pop
out
cmpsl
adc
ljmp
call
jb
cli
push
mulb
lcall
in
ja
xchg
test
add
xor
adc
outsb
cmpsb
in
mov
lods
push
mov
jle
insl
scas
aas
loop
or
inc
xchg
mov
fnstcw
adc
inc
push
adc
movsl
jg
jb
mov
mov
fs
nop
aas
sarb
jle
sub
pop
fwait
mov
push
xchg
pusha
sahf
out
les
imul
xor
ret
int
add
outsl
push
pop
push
stos
cmpb
imul
push
add
or
mov
push
lock
fmull
add
pop
xlat
add
push
inc
test
jg
push
mov
mov
loop
push
jl
pop
fwait
ret
fldcw
jp
pop
pop
fwait
adc
fbstp
and
into
jge
xor
lcall
dec
cmp
inc
fldcw
lret
pop
adc
xor
in
bswap
inc
dec
movsb
xchg
push
out
xorl
sbb
test
sub
fstpl
popf
pop
cmc
push
std
push
push
int
int3
xchg
stc
popf
mov
mov
lcall
clc
ja
adc
mov
jnp
inc
mov
xchg
pop
mov
icebp
xor
and
jmp
dec
pop
scas
mov
mov
xlat
xor
mov
inc
dec
cmp
inc
lock
sub
cmp
fmul
ficomps
dec
and
pop
mov
cmp
xchg
lahf
or
outsl
mov
pop
imulb
ja
icebp
cmpb
pop
and
or
ja
cmp
push
in
mov
xchg
sbb
jne
jae
outsb
pop
lods
fimuls
sbb
iret
push
ljmp
jno
arpl
xchg
add
and
mov
test
shrl
mov
jo
lret
cmpsl
rorl
jo
xor
push
into
mov
mov
cmc
andb
ret
jo
call
cmp
inc
push
sbb
fisttpl
stc
orb
push
aas
rcrl
xchg
pop
scas
fwait
mov
fildl
fdivr
scas
push
outsb
mov
dec
inc
ret
sub
lahf
pop
and
nop
wrmsr
lods
addr16
fiadds
ss
aas
out
movsl
cmp
leave
test
xor
push
pop
pop
pop
insb
mov
mov
jp
scas
mov
loope
les
cmp
dec
add
and
and
sub
add
shlb
fistps
sub
scas
test
jmp
inc
lods
ret
repz
cmpsl
cmp
lcall
adc
addb
jge
nop
push
sub
jne
push
fnstcw
int3
mov
fs
xor
add
loop
mov
xor
mov
mov
jne
mov
mov
cmp
sarb
cmp
gs
dec
stos
cmp
in
push
out
ds
jne
sarl
mov
or
lods
and
or
push
inc
mov
fnsave
andb
loopne
sbb
jge
jo
and
mov
cmpsb
leave
pop
andl
xchg
aam
cs
leave
ficoms
addr16
test
push
loope
sbb
icebp
or
bound
xchg
pop
pop
ss
stc
nop
or
sub
insb
mov
jl
push
loopne
push
fnstenv
test
inc
mov
arpl
pop
cwtl
mov
inc
push
or
dec
jg
inc
cmp
shl
pop
aas
mov
popf
subb
aaa
pop
nop
cmp
andb
pop
negl
icebp
daa
adc
stos
iret
jns
cmp
aas
add
dec
mov
push
dec
out
mov
hlt
push
test
fistps
fbld
popa
or
inc
into
iret
jb
xchg
sub
enter
outsl
and
fcmovnbe
add
push
add
mov
call
push
mov
iret
mov
inc
adc
mov
pushf
xchg
cmpsl
cmp
icebp
or
adc
pop
cmc
push
mov
je
mov
pop
push
push
movsl
test
sbb
das
mov
cmp
pop
imul
mov
jmp
xor
cmp
stos
mov
jo
icebp
popf
mov
jmp
add
scas
dec
cmpsl
stos
arpl
sahf
insl
mov
mov
les
adc
je
lahf
pushf
jb
sbb
cmp
ret
inc
gs
leave
test
lret
pop
jmp
minps
daa
aas
pushf
fimull
cmp
xor
inc
and
shrb
insl
pop
push
and
popf
insb
mov
fucomi
dec
sbb
fdiv
or
adc
pop
out
or
cmc
sub
fcoml
into
popa
xchg
mov
dec
jmp
mov
xor
and
xor
adc
arpl
pusha
and
mov
jle
push
movsl
lahf
in
aas
inc
adc
inc
dec
outsb
adc
rcr
insb
dec
aam
adc
jbe
xlat
cmpsb
frstor
clc
xchg
mov
mov
xor
cld
xchg
sub
xchg
movsb
dec
sbb
mov
movsb
jp
pop
cltd
icebp
mov
cld
push
aam
ja
mov
cmp
mov
sahf
rolb
movsb
inc
sbb
mov
jae
sub
or
jae
daa
xchg
add
push
push
sahf
adc
sub
stos
adc
mov
pop
push
jecxz
dec
mov
js
pop
imul
jmp
sbb
aaa
xor
call
in
and
xor
js
movsb
xchg
cmp
adc
mov
sub
mov
or
js
xor
inc
stos
sub
push
outsl
push
in
mov
jb
icebp
sarb
rolb
inc
shl
push
out
or
push
xchg
sbb
in
xchg
scas
bound
clc
leave
fs
mov
std
cmpsb
xor
sub
lcall
inc
in
decb
aam
sub
mov
test
dec
popw
or
sbb
movsl
pop
pushf
pop
mov
push
cmp
into
rorb
inc
cltd
and
in
adc
mov
push
mov
add
imul
fbld
xchg
jne
jne
adc
or
aad
sbbb
lods
inc
sysenter
out
les
mov
cltd
cmpsl
js
sub
rclb
fcmovnbe
jg
mov
popf
and
mov
fistps
xchg
insl
mov
hlt
int3
stos
sahf
mov
pushl
mov
xor
and
js
mov
cltd
pusha
sbb
cmp
jns
pop
mov
testb
lock
dec
addr16
lret
pushf
add
mov
push
shrl
pop
xor
push
push
inc
sbb
ds
inc
xor
push
jbe
mov
jbe,pt
addr16
xor
scas
add
data16
popf
sub
inc
cs
xchg
xchg
fcomip
xchg
call
lods
cmp
cwtl
sti
mov
shlb
out
and
imul
lret
sarl
lret
inc
stos
push
push
divb
push
jne
pop
enter
cmp
inc
sti
xor
rolb
or
inc
gs
gs
daa
mov
lahf
mov
hlt
xchg
mov
aaa
stos
mov
pop
popa
add
ret
xor
stos
arpl
jb
inc
sti
cmp
sbb
jae
ret
lock
sub
mov
nop
push
adcb
add
les
outsb
cmpsb
pop
das
xchg
in
mov
mov
xor
pusha
scas
ja
cli
dec
in
sbb
sti
pop
cmpl
mov
gs
adcl
ret
pop
inc
je
jae
inc
out
inc
pop
add
cwtl
or
inc
cs
pusha
mov
sub
mov
dec
fs
add
jno
adcb
mov
sub
test
adc
xor
xlat
inc
adc
out
mov
es
out
loope
loop
and
lahf
dec
inc
add
push
sub
jl
and
mov
rcr
xor
lret
ljmp
adc
rorl
scas
rcrb
sbb
dec
sarl
ficoms
movsb
lea
mov
testb
pop
mov
inc
fisttpl
ret
insb
fnstsw
push
and
lcall
daa
adc
or
sahf
sub
xlat
jmp
dec
popa
inc
push
cmp
inc
and
and
test
jno
push
sub
add
mov
add
ret
dec
les
cmc
mov
addr16
lea
sbb
lcall
push
mov
adc
mov
adc
add
es
jb
mov
cmpsl
rcl
add
xlat
jl
mov
in
xlat
loope
dec
xor
pop
mov
sub
pop
cmp
adc
inc
orb
mov
cmpl
pop
inc
fimuls
out
fidivl
cltd
and
int3
insb
test
adc
fdivl
imul
xchg
add
outsb
gs
test
xor
mov
mov
ss
add
or
cmc
lods
sub
lock
mov
push
in
insb
jle
mov
cltd
les
mov
scas
popa
cli
loopne
lea
push
fcomip
mov
jns
test
push
in
in
cmp
push
je
jae
shlb
adc
push
fwait
lods
xchg
and
decl
insb
subb
insl
stc
inc
fwait
xor
or
fxch
arpl
inc
add
rcrb
sbb
dec
sbb
cltd
push
push
lods
or
cmp
ret
and
popa
scas
mov
subb
fisubs
cmpsl
jmp
mov
and
aam
mov
push
pop
adc
lds
repz
push
ret
pop
jmp
sbb
arpl
sbb
sub
stos
push
pop
jecxz
in
jnp
jo
sbb
leave
push
lret
shl
ss
pop
scas
dec
push
push
mov
push
jne
inc
jno
outsl
ja
fsubrs
lcall
inc
sbb
fildll
dec
pop
andb
pop
cli
out
xchg
and
mov
imul
add
imul
or
jl
dec
cmpsb
add
jbe
mov
add
adc
xchg
fwait
push
mov
fisttps
mov
cmpb
mov
jp
ljmp
in
fstpt
mov
dec
aad
aaa
pop
xor
sub
mov
dec
mov
xor
pop
iret
mov
fs
xchg
enter
add
shr
popa
jns
inc
ret
jns
aad
fwait
lcall
mov
lahf
jbe
movsb
out
cmp
dec
repnz
jo
mov
in
ljmp
mov
cltd
jl
push
cwtl
adc
dec
mov
test
ljmp
fldcw
fsubp
pop
out
mov
cmp
inc
bswap
and
cmp
stos
in
leave
fldl
push
add
fdivl
div
mov
sbb
pop
hlt
xlat
das
nop
dec
mov
sahf
jg
cmp
cmp
aaa
lods
lcall
out
mul
cmp
cmc
hlt
xlat
sub
adc
idivb
lret
hlt
adc
jno
addr16
lods
cmp
insb
into
mov
jo
inc
push
jge
data16
mov
fptan
mov
push
test
out
adcl
mov
lds
psrad
add
es
pop
xor
dec
loope
out
or
jmp
insl
add
fsubrl
add
call
rcrb
add
sbb
aas
pop
cmpsl
das
adc
mov
jbe
xchg
jae
inc
push
pushf
cs
dec
mov
mov
push
call
and
or
cmp
sbbl
xorl
adc
addr16
outsb
xchg
inc
frstor
sub
iret
testl
incb
fldl2t
or
dec
sub
pushf
outsl
dec
push
sahf
mov
lods
movb
leave
cmp
xor
test
cli
cwtl
mov
test
mov
sub
ret
dec
push
in
pushf
or
sub
popf
ja
in
in
xchg
shrl
adc
cwtl
xchg
pop
mov
push
mov
repz
or
outsl
scas
jecxz
mov
jecxz
xor
cli
scas
inc
jb
pop
xchg
rcrl
xorl
stos
loope
outsl
push
sbbl
aam
mov
lds
cli
sti
jg
icebp
imul
lock
ss
lea
call
mov
int
arpl
fstl
dec
cmp
pop
xchg
xchg
jge
lods
jmp
adc
loop
popfw
and
movsb
sti
fbstp
test
loope
sahf
std
mov
xor
jg
push
je
movsb
cmpsl
stc
loop
sub
xchg
lcall
mov
lds
andb
xor
jo
shrl
add
adc
mov
cmp
inc
lret
push
aaa
dec
fistl
gs
rclb
test
notb
xor
dec
repz
or
jp
adc
clc
dec
ret
outsb
rclb
sar
lock
scas
dec
fbld
insb
dec
in
test
in
xchg
mov
add
adc
jo
xor
and
adcl
fdivr
mov
push
fcoms
sub
jmp
push
xchg
inc
add
in
lcall
lgs
push
or
and
ror
xchg
pop
sbb
lods
sbb
fisttpll
neg
cld
fs
xchg
pop
and
mov
insb
add
addb
mov
mov
mov
mov
pop
insl
sbb
shrb
xor
jns
mov
adc
jp
ret
imul
inc
cltd
daa
sub
cld
pop
mov
out
es
cwtl
in
jle
jb
fcoml
mov
gs
mov
add
sarl
int
and
pop
mov
mov
sti
es
jp
dec
cmc
in
mov
xchg
sub
ret
pushf
sbb
rol
aad
add
data16
ret
add
push
or
pop
lods
mov
jp
mov
sbb
fcomip
xchg
pop
cmp
fsubs
pop
dec
push
sub
and
filds
inc
sbb
mov
sbb
stos
push
mov
and
xchg
popf
les
movsl
jns
daa
xor
sar
mov
jae
addl
hlt
add
xlat
outsb
int3
fsubl
lret
gs
insb
jle
xchg
push
xlat
adc
imul
test
mov
and
or
push
push
stos
pop
imul
jnp
lahf
stos
lcall
movl
pop
sbb
adc
jmp
or
fdivl
shrb
jbe
lret
call
inc
in
dec
movsb
cs
sub
es
outsl
xor
inc
jl
jae
push
jo
xchg
lods
inc
dec
inc
xchg
and
push
lahf
stos
int3
loop
jle
ficoml
pop
rcl
add
data16
adc
leave
pusha
dec
and
jle
push
mov
jae
mov
aaa
push
jo
inc
xor
sub
cmp
notb
ror
xlat
mov
nop
stc
jl
aaa
movsl
sub
daa
push
inc
test
xor
stos
fisubrl
adc
fcmovnbe
mov
lock
cmp
icebp
xlat
cmc
mov
adc
mov
xlat
adcl
dec
sub
inc
faddp
xchg
push
jmp
leave
adc
aam
jb
inc
test
mov
and
lods
jmp
mov
adc
xchg
lock
mov
frstor
shl
xor
sub
jb
jmp
cltd
push
pop
andl
dec
scas
jbe
jmp
fwait
inc
sbbl
adc
mov
jb
jo
pop
xchg
scas
mov
add
add
bound
popa
stos
sti
mov
test
xchg
cs
push
aas
jp
mov
int
dec
filds
int
icebp
sub
sahf
dec
push
es
fidivs
in
mov
test
mov
or
out
outsb
addr16
outsb
cmp
jge
imul
jl
xor
out
jo
pop
pushf
test
popa
shrb
lret
push
scas
lock
loopne
ret
push
out
or
scas
mov
xchg
mov
pusha
negl
jmp
mov
and
mov
addr16
popl
stos
outsb
mov
xchg
mov
iret
mov
mov
lods
mov
push
mov
xchg
push
push
fstpt
jo
outsl
icebp
pop
xchg
mov
and
icebp
in
aas
push
adc
push
sbb
xchg
push
call
mov
outsl
fiaddl
add
and
sahf
es
lcall
shll
sbb
fldl
push
mov
loope
stos
orb
add
lahf
xor
inc
push
xor
in
push
adc
mov
rorb
adc
stos
inc
ds
enter
ret
movntq
pop
test
cmp
sub
icebp
push
outsb
test
int
xchg
sbb
cli
inc
pop
cmp
push
jne
imul
ds
movsl
mov
loop
sbbl
or
dec
mov
ret
mov
popf
xor
lods
call
or
inc
lock
lcall
xor
push
lock
xchg
jmp
out
pop
imulb
pusha
adc
pop
mov
lcall
and
jp
data16
jg
mov
xor
lea
add
stos
stc
nop
cmp
lods
inc
dec
fsubl
add
daa
mov
push
mov
clc
xor
out
jp
lock
inc
add
push
mov
or
mov
sub
xor
jno
jmp
fdivrl
adc
leave
aam
jo
mulb
popa
lret
cld
xchg
popa
into
mov
lret
jnp
and
int
ret
loop
flds
push
and
rolb
sbb
cmc
jo
sub
push
scas
push
ljmp
jno
jb,pn
jbe
push
inc
push
mov
add
mov
ret
fdivrs
mov
dec
cmc
cmc
shr
sub
cli
mov
ret
sub
cmc
and
jle
stc
lahf
sub
xor
popa
and
loopne
cmp
mov
lock
xor
pop
jns
inc
and
pushf
int
sbb
arpl
movsl
mov
and
push
push
dec
sbb
mov
mov
add
fisubl
sar
sti
aas
add
pop
xchg
cmp
inc
in
sub
fistpll
add
push
les
fildl
pop
nop
daa
rcr
mov
xchg
dec
mov
mov
jge
sub
movl
jl
mov
subb
decl
inc
fisttps
inc
aaa
ds
ss
push
pushf
inc
movsl
inc
in
icebp
in
lock
rorb
leave
das
nop
out
ljmp
sti
inc
in
hlt
push
out
aaa
test
inc
lret
dec
jmp
gs
subb
add
or
sbb
push
ror
icebp
cli
testb
in
js
xorl
dec
pop
cmpsb
adc
leave
movsl
lds
stc
in
rcll
adc
push
mov
pop
sub
ja
jbe
xlat
cmpsl
add
push
push
fcompl
dec
scas
fnstenv
inc
out
cmp
sbb
cmp
test
pushf
out
into
scas
jecxz
xchg
lods
jnp
pop
mov
repnz
dec
data16
push
inc
mov
lret
mov
push
shrb
dec
add
aam
imul
mov
jne
and
adc
std
pushf
cmp
cltd
std
sub
sbb
xchg
aad
rolb
cltd
cmpsb
stos
lock
inc
pop
ja
dec
test
ja
adc
repnz
fistpll
mov
leave
and
mov
insl
mov
divl
insb
incl
add
es
xchg
or
outsb
in
xchg
mov
xlat
push
or
out
pop
scas
sahf
push
sbb
fmulp
rcrl
les
cli
clc
mov
fcomp
sub
ficomps
push
jmp
shlb
pop
rorl
popa
iret
iret
js
test
lret
outsw
dec
dec
jno
jle
stc
lcall
fbstp
or
cmp
sbb
adc
mov
loopne
and
sti
mov
mov
stos
push
popf
pop
xor
dec
scas
in
or
jns
insl
icebp
mov
sbb
movsb
pop
movsl
cwtl
or
fisttpl
and
mov
lret
leave
pop
je
sbbb
sbb
cld
fnsave
pop
jns
jl
sub
push
lods
inc
mov
fidivrl
rorl
push
addr16
xchg
sub
jmp
and
fdivs
jnp
add
jle
push
jmp
imul
fst
xchg
roll
stc
loope
cmp
test
add
sarl
movsl
repnz
decb
arpl
imul
xchg
pop
sub
out
mov
leave
add
pop
push
push
inc
push
cmp
adc
nop
pop
mov
movl
push
jns
scas
xor
lcall
cld
js,pn
xchg
cwtl
mov
pushf
jle
pop
in
fwait
push
jl
outsl
stos
js
dec
ds
push
aam
imul
push
idivb
data16
arpl
ror
add
cmc
in
stos
mov
shll
cld
stos
mov
or
cmp
pushf
jae
mov
sbb
adc
xchg
iret
add
dec
jb
fbld
adc
inc
push
xchg
cmp
lcall
xchg
cmp
and
mov
mov
dec
ds
test
bound
pusha
push
jmp
ljmp
in
out
sub
push
insl
cltd
das
push
out
cli
ja
mov
dec
je
aam
ds
xlat
sub
pop
xchg
inc
scas
mov
dec
fs
push
or
add
leave
lea
test
cmp
outsl
jle
inc
fldcw
imul
gs
cwtl
das
arpl
mov
mov
mov
je
jne
mov
pop
mov
shl
repnz
push
mov
mov
or
lahf
aaa
xchg
xor
push
dec
loop
cmp
negl
fwait
and
push
call
fwait
push
jmp
and
jge
add
mov
push
mov
inc
in
xchg
enter
testb
add
jae
or
addr16
jno
clc
push
loope
pop
fsubrl
add
in
popf
pop
fwait
outsb
mov
das
orb
add
dec
sahf
dec
dec
loop
or
mov
rclb
mov
xor
cmp
mov
cmp
scas
sbb
inc
mov
push
incl
mov
adc
mov
sbb
inc
imul
lcall
sbb
les
pop
mov
push
scas
mov
jmp
shll
adc
int
rorb
sbb
inc
or
les
fadd
pop
pusha
imul
stos
dec
jbe
jle
push
fsubrp
fists
enter
mov
mov
dec
jne
call
sbb
pop
pop
aam
fbld
inc
and
fists
roll
test
xchg
loope
shll
inc
sbb
fwait
lods
addr16
mov
or
outsl
and
xor
test
jmp
fldl
in
xor
stos
gs
mov
mov
jecxz
fldcw
in
jae
ljmp
pusha
fidivl
cmpsb
cwtl
das
adc
xor
test
sub
pop
imulb
mov
add
cmp
jno
xorl
sbb
into
repz
data16
xchg
loope
cmp
push
dec
xor
notb
and
lds
iret
pop
outsl
test
ret
mov
jb
into
test
inc
loop
cwtl
lcall
stos
aaa
mov
pop
jne
mov
or
push
xlat
cmp
push
mov
or
jmp
frstor
and
pop
lret
mov
lahf
in
mov
ds
lcall
pop
subb
stos
rol
and
cmp
xor
cwtl
inc
cmp
mov
add
mov
dec
scas
mov
addr16
loope
mov
mov
mov
jl
inc
add
addr16
or
sbb
aaa
sub
add
pop
jecxz
mov
jl
sub
mov
pop
cmp
sbb
lods
cltd
into
jae
enter
mov
mov
mov
jg
mov
sti
pop
ret
loope
sbb
dec
dec
jecxz
xorl
inc
outsb
xor
je
out
outsl
dec
scas
frstor
inc
push
jmp
out
xchg
outsb
fimuls
adc
sbb
xor
pop
cmpsb
insl
xchg
adc
mov
dec
in
xor
add
decb
int
test
inc
cmp
inc
fsts
xchg
pop
mov
es
js
sbb
cmpsl
cltd
pushf
lods
repnz
in
adc
push
add
push
jo
movsl
popa
cld
cs
jae
mov
sti
or
pop
addr16
adc
xchg
ret
sbb
xor
in
mov
in
test
es
inc
mov
or
xor
fnstenv
dec
jne
fisubs
mov
push
pop
dec
and
idivl
stos
fdiv
sub
mov
sbb
xlat
sub
xchg
repz
ljmp
stos
mov
dec
xor
enter
cli
fbld
push
js
subb
fidivl
push
testb
mov
mov
adc
cmp
xchg
sub
jo
inc
pusha
mov
mov
in
out
sbb
and
mov
popf
cltd
std
xchg
add
mov
scas
xchg
hlt
dec
mov
loope
sbb
in
cmpsl
hlt
outsb
movsl
cmp
lret
js
mov
or
push
jg
add
cwtl
xor
clc
xor
clc
jg
ja
xor
pop
call
push
outsl
hlt
sub
xor
inc
xchg
ss
sbb
clc
add
xor
es
adcb
cli
dec
stos
out
in
clc
jae
test
lods
repnz
add
rolb
stc
popf
in
xchg
daa
and
ror
push
pop
dec
je
in
lcall
clc
cmpsl
in
or
scas
add
jge
xchg
idivb
in
ja
pop
andl
mov
mov
dec
mov
push
push
fpatan
call
mov
std
popa
enter
push
push
and
cmp
icebp
nop
ja
loop
sbb
sbbl
mov
in
mov
fcomip
or
xchg
sbbb
scas
and
ja
dec
mov
dec
mov
pop
loopne
xor
sti
enter
sub
hlt
loopne
and
decb
movsl
jp
xor
cmc
sub
loope
in
xchg
insb
push
push
sub
pop
push
sbb
and
arpl
sbb
xchg
adc
and
js
mov
pop
shr
add
cli
xor
sub
add
imul
push
xor
ds
pop
pop
ficoms
je
addr16
mov
dec
pop
repz
dec
mov
push
stc
out
leave
pusha
loopne
bound
roll
mov
in
xor
add
sub
shlb
fdivp
addr16
push
in
mov
aad
mov
xlat
loop
dec
and
lods
mov
pop
in
xchg
xlat
mov
loop
call
call
xor
mov
loopne
xchg
push
sub
in
xchg
cmp
or
outsl
jo
push
jmp
pushf
push
pop
repz
arpl
dec
and
les
add
mov
inc
pop
mov
pop
ljmp
sub
dec
adc
clc
push
outsl
mov
or
in
pop
and
pop
push
inc
fstps
out
repnz
inc
pusha
lret
cli
mov
sub
adc
mov
movb
aaa
jbe
inc
sbb
lcall
mov
testb
dec
in
mov
pop
jg
lret
adc
mov
pop
pusha
push
push
and
inc
stc
shlb
pop
lods
dec
test
bound
loopne
sub
mov
insb
in
shlb
scas
inc
push
lahf
jns
cli
and
testl
inc
repz
aas
out
push
mov
fstps
mov
hlt
add
jns
int3
stos
inc
mov
mov
sbb
inc
enter
loopne
rclb
out
mov
inc
adc
cmp
je
ret
cmpsb
outsl
lods
push
ret
jle
clc
pop
icebp
mov
xchg
stc
and
xor
nop
xor
pop
sbb
jp
xor
mov
cltd
mov
jle
fwait
lcall
mov
je
push
adc
mov
push
loop
fildl
push
xor
std
cmovno
ja
adc
adc
jmp
pusha
lods
lock
add
lret
pushf
sub
sar
outsl
push
add
rcll
aas
xor
jge
dec
and
cmpsl
in
and
push
cmc
ja
push
cld
adcl
adc
or
xchg
xchg
mov
and
test
cmpb
leave
dec
test
jl
mov
fldcw
mov
and
popf
pop
inc
mov
leave
xor
out
movsb
in
and
iret
cmp
dec
loope
push
loopne
mov
cmp
inc
fsubl
negb
push
fidivl
mov
mov
jge
jb
jl
pushf
xor
jo
and
push
mov
xchg
ja
xor
xor
sahf
rcll
out
test
inc
popa
xlat
adc
inc
mov
insl
loopne
popa
lret
and
fnsetpm(287
mov
dec
sbb
fisttpll
xchg
jnp
js
sbb
lock
repz
leave
mov
sub
stos
dec
hlt
xor
sarb
push
and
idivb
pop
call
sbb
mov
cmp
es
pop
jmp
push
popa
gs
loope,pn
pop
lret
cmp
test
stc
xor
scas
imul
orb
insl
ret
inc
addr16
rcrl
shrb
pop
mov
cmp
cs
lds
jno
lock
shlb
jp
cmp
mov
inc
jns
sbbl
aaa
stos
xor
sbb
test
cld
leave
pusha
or
adc
add
jle
in
push
call
jmp
addl
inc
outsl
jo
ret
int
aaa
or
hlt
clc
add
push
xor
lret
add
popa
xor
mov
enter
cltd
and
fs
sub
inc
movsb
pop
xor
addr16
jmp
pushf
adc
and
test
sti
mov
mov
mov
adc
fcoml
pop
cmp
mov
mov
loopne
inc
sub
inc
nop
xor
cmpsb
mov
in
fbld
lock
stc
movsl
and
pop
add
push
mov
js
mov
fcmovnu
je
jmp
fistpl
cmp
and
jne
xor
lds
outsl
pop
cltd
je
mov
in
sub
test
pop
imul
push
into
mov
fidivrl
mov
roll
das
decl
cmpsb
fwait
or
xchg
arpl
popa
push
push
inc
push
sbb
fsts
fiadds
jg
nop
push
cmpsw
arpl
ss
cs
mov
movsb
jg
or
mov
stc
or
add
in
adc
iret
sub
inc
lea
sti
mov
xlat
outsb
divb
subl
sub
pop
inc
inc
pushf
inc
sub
cmp
xchg
push
stc
out
cmp
cs
cwtl
cs
cmp
dec
pushf
lret
ja
ja
sub
adc
xor
pop
sti
xchg
mov
xchg
lods
pop
imul
repnz
xlat
lcall
push
mov
jmp
aas
mov
jno
test
out
movsb
xchg
xor
mov
pop
pushf
or
cmpsb
jo
mov
test
push
push
test
cltd
mov
mov
pop
outsl
add
insb
and
ficoms
data16
mov
in
inc
inc
mov
push
push
out
or
inc
cwtl
sub
imul
push
mov
inc
and
dec
jb
daa
sub
aad
jmp
adc
std
sub
rclb
nopl
mov
clc
fidivrs
sub
enter
aas
out
lods
pop
dec
stos
loopne
lea
and
xchg
sub
fcomip
mov
scas
call
sbb
jb
lods
cmp
fwait
bound
add
scas
push
xchg
rorl
bound
jo
xchg
dec
ds
pop
fidivs
xchg
push
fisubrs
add
fisubs
and
xchg
imul
mov
jp
jp
fdivl
pop
and
mov
imul
jmp
and
shll
lds
pop
or
dec
mov
mov
fisubs
shll
je
stc
data16
lods
in
fsubrp
pop
lahf
sbb
xchg
jno
xlat
xor
lods
fmul
jmp
xchg
sub
or
mov
fnstenv
dec
test
jge
push
cmp
adc
and
arpl
lods
push
or
aaa
push
and
lds
and
pop
xor
push
aad
fiaddl
pop
std
mov
lcall
fs
mov
mov
scas
clc
inc
push
lods
addr16
enter
int
and
xorl
xlat
insb
cmpsl
inc
clc
dec
sti
enter
xor
test
pop
cmp
test
cs
cld
inc
push
add
mov
cli
xor
gs
cmp
ja
mov
test
xchg
xor
fsub
sbb
cmp
jns
dec
inc
ds
jg
shlb
js
fadd
daa
lds
ret
push
inc
je
sbbl
xchg
pop
icebp
mov
js
pop
cmp
jbe
push
sub
mov
dec
jecxz
xchg
sbb
ja
cmp
repz
and
data16
insl
clc
mov
dec
out
icebp
xor
mov
add
mov
dec
sti
sub
ljmp
andl
inc
push
lods
jbe
push
xchg
mov
aam
jno
mov
data16
sarb
mov
mov
xlat
out
inc
and
cmp
out
jg
je
cmp
testl
andb
mov
daa
sbb
push
enter
ret
icebp
mov
jb
mov
adc
popa
clc
add
jg
out
mov
lock
out
js
aas
cli
xchg
jno
jnp
push
mov
add
dec
sbb
or
cltd
iret
and
jecxz
lcall
sub
icebp
add
pusha
or
lret
mov
pop
sbb
cmp
inc
arpl
gs
mov
stc
or
lods
adc
ret
push
idiv
xchg
xchg
push
jmp
std
pop
push
sub
sbb
cli
shrl
into
aaa
cwtl
popf
jl
fs
push
jns
xchg
xor
fwait
popf
scas
int3
daa
or
sbb
xchg
sbb
incb
in
cli
xchg
sbb
mov
aam
int3
fbstp
pop
fbld
ficompl
call
dec
add
and
xor
je
loope
sub
out
cmc
xchg
cmpsl
sarl
mov
mov
in
fistl
inc
scas
pop
sub
and
mov
cmpl
cs
add
aad
sub
leave
fsts
rcrl
add
cmc
dec
popa
mov
xchg
xor
adc
sbb
addl
sbb
aas
inc
stos
xchg
or
ds
pop
dec
dec
popa
outsb
data16
shlb
inc
data16
test
rcll
inc
fnsave
push
or
lret
fwait
gs
movd
bound
xchg
pushf
dec
or
or
out
enter
hlt
jmp
in
inc
mov
fsubrp
cli
stos
mov
mov
sub
mov
aaa
mov
jno
xchg
test
inc
cmp
dec
jae
fstps
fsubs
fsubrs
mov
lds
and
pop
push
inc
pushf
ja
movsl
les
mov
sahf
out
outsb
sub
pushf
xor
test
mov
mov
push
movsl
and
push
adc
fdivrs
leave
fcmove
es
andl
mov
int
mov
movsl
add
pop
cli
loopne
gs
movsl
jl
jno
push
out
add
insb
adc
and
xchg
lds
sbb
adc
mov
push
fmull
mov
dec
into
add
jno
and
sbb
pop
iret
loopne
cmpsb
sbb
and
push
or
in
or
stos
fldenv
jbe
les
cltd
int3
sbb
cmp
xor
mov
les
mov
mov
jp
jp
adc
pop
js
mov
adc
mov
outsl
add
and
push
mov
std
cltd
inc
movl
std
repz
push
aad
mov
sub
imul
insl
sbb
cmp
pop
insl
insl
mov
sbb
icebp
xchg
sarb
jmp
or
cltd
sub
jae
sub
loop
fsubr
cmpsb
out
pop
inc
ret
sub
fbld
sbb
cmpsb
ret
pop
nop
push
mov
loope
inc
je
fildll
lods
ss
rclb
mov
jge
gs
adc
push
cmpsl
stos
inc
fdivrs
enter
shrl
push
push
xlat
dec
icebp
hlt
mov
fidivrs
mov
push
adc
sbbb
adcl
lock
or
aas
shrb
xchg
sub
sub
mov
mov
mov
cmpsb
lret
pcmpgtd
jp
or
or
cs
mov
repnz
cmpl
fwait
les
lock
movsl
test
and
push
push
cmp
sahf
dec
add
inc
mov
stc
int3
lret
inc
mov
mov
or
test
gs
xchg
mov
xor
popa
ja
aad
cmp
xor
mov
sbb
iret
add
or
fstl
shll
push
mov
fwait
sbb
stos
or
fisubs
ja
les
call
xchg
pop
rorb
aad
repz
daa
mov
jmp
or
fistl
adc
cld
jo
sbb
cmp
and
sbb
fmul
loope
dec
adc
xchg
inc
pop
cmp
pushf
add
push
leave
icebp
movsl
addr16
leave
and
aad
jp
lods
push
mov
pushf
adc
sbb
imul
xor
mov
jnp
mov
adc
mov
or
push
mov
dec
cltd
lods
or
test
incb
out
bound
jns
and
imul
insb
daa
mov
fnstsw
mov
or
orl
xor
sbb
and
cmpl
out
outsb
popf
cmp
sub
rcl
sub
mov
dec
jge
scas
and
fidivs
gs
add
xor
pop
inc
test
call
fidivs
stos
pop
movsb
gs
in
or
ret
xchg
sub
daa
mov
push
pop
cmp
cmc
xchg
mov
out
shrl
and
icebp
test
xchg
test
pop
jae
jle
dec
notl
out
or
xchg
test
ficoml
pop
adc
clc
fsubrl
into
jge
jmp
pop
add
repnz
int3
sub
pop
outsl
movsb
std
mov
sarl
cld
sub
dec
cmp
pop
xor
push
cmp
pop
add
clc
mov
ja
ljmp
insb
sarb
fimull
jb
inc
lcall
cltd
std
inc
lret
mov
fwait
add
stos
cmp
aam
subb
in
scas
loopne
sbb
daa
stc
mov
push
call
mov
subb
add
xchg
adc
lahf
dec
je
cmp
push
dec
fwait
jo
leave
pusha
sti
fwait
rorb
cmpsb
ret
stos
jbe
sbb
dec
arpl
pusha
xor
fwait
jb
jae
ds
stc
addl
mov
mov
fwait
aas
cmp
xchg
inc
cmpsb
dec
js
cmp
shrl
mov
jge
jbe
pusha
and
xor
ret
xchg
sub
pop
jnp
push
movsl
and
inc
movsb
cli
rcrl
xor
in
sub
jmp
repz
outsb
or
mov
sub
add
test
cmp
je
jno
dec
push
jns
inc
xor
lock
popa
fwait
xor
sbb
iret
mov
ret
stos
jnp
clc
js
arpl
sti
inc
push
lds
xor
push
out
test
jg
mov
sub
repz
sub
sub
adc
cmp
mov
pop
push
stos
lret
aad
sbb
push
xor
push
insb
in
mov
mov
int
rorb
push
rorl
mov
xchg
imul
iret
es
fwait
movsb
inc
data16
mov
xchg
xchg
cs
clc
adc
stos
cs
shrl
pop
xor
lock
or
fwait
xor
leave
and
or
rcrb
dec
outsl
shl
imul
sub
xchg
scas
rcrl
out
mov
mov
das
xor
cmp
xor
push
in
mov
inc
xor
pop
xor
push
lea
leave
mov
xor
cmpsl
mov
sub
push
mov
bound
mov
ret
xlat
sbbb
inc
dec
stos
xor
pop
or
pop
jecxz
fistpl
mov
pop
call
ret
fwait
out
mov
or
cmovb
adc
sub
jne
sbbb
mov
sub
pop
dec
xchg
mov
je
mov
adcl
in
loope
pop
xchg
xor
mov
xchg
cli
lcall
sbb
push
mov
adc
or
push
jle
mov
mov
iret
and
and
imul
mov
xchg
arpl
xchg
push
imul
sbb
cld
or
test
xlat
repnz
push
arpl
xchg
jns
mov
clc
push
mov
sub
out
dec
mov
mov
push
xchg
sbb
mov
test
hlt
cld
test
cmpsl
dec
loope
jbe
subl
pusha
add
iret
jb
sub
jb
xchg
test
test
or
add
xchg
inc
dec
and
imul
lods
push
jl
inc
mov
push
mov
adc
orb
jle
inc
add
xor
ret
xor
inc
loope
pop
adc
pop
sbb
xor
adcl
push
lcall
push
xchg
mov
aaa
and
icebp
mov
jns
pusha
cld
xchg
inc
je
dec
mov
push
adc
xchg
outsl
xchg
fstps
das
mov
insb
dec
push
sbb
add
sbb
inc
jp
scas
enter
enter
xlat
out
aas
mov
lcall
das
or
lahf
xchg
in
repnz
ret
outsl
test
into
dec
test
in
data16
sbb
push
movsb
lcall
dec
sub
dec
adc
mov
js
mov
xor
mov
jmp
stos
pop
int
inc
pop
and
fdivrl
rorl
sbb
cmp
insl
nop
xchg
xor
shll
out
and
daa
and
jo
jns
insl
aas
scas
inc
out
dec
imul
push
mov
sub
shrb
xor
cmp
xchg
repz
fidivs
add
mov
mov
push
cmp
stos
jne
ficoml
sahf
in
xchg
push
cmp
popf
pop
xchg
sub
test
xchg
daa
es
test
rcrl
and
std
push
push
mov
or
daa
mov
pusha
ficompl
and
lods
add
cmp
push
ret
rcll
cli
cld
xchg
outsb
jl
insl
out
push
into
loop
dec
or
xor
lcall
loopne
fistpll
add
pop
mov
ljmp
jg
ret
add
adc
mov
mov
add
push
fucomp
rcrl
pop
xor
push
push
add
and
dec
push
mov
lods
call
sub
sub
add
lods
mov
cmpsl
mov
mov
sti
aaa
lcall
aaa
xor
call
add
adc
fdivrl
cld
inc
mov
jge
or
je
nop
push
mov
add
mov
mov
fbld
and
movsl
filds
shll
outsl
sub
or
jg
inc
jle
jae
sbb
dec
out
pop
push
add
inc
pop
xchg
mov
fbstp
repnz
imulb
inc
pusha
mov
mov
jecxz
insb
inc
dec
sbb
mov
and
in
jns
lcall
and
in
je
push
inc
aad
mov
mov
inc
inc
pop
add
cmp
pusha
adc
fsts
or
adc
xor
inc
sbb
push
mov
lock
lods
aaa
mov
mov
pop
xlat
lahf
add
test
lret
clc
and
add
sub
adc
fmulp
lods
sbb
jno
aas
mov
cmpl
mov
inc
negb
sbb
lcall
repnz
push
mov
dec
fisttpll
call
or
dec
push
inc
mov
loopne
cmpsl
push
and
cs
adc
push
clc
push
jns
and
daa
cmpsl
inc
add
int3
and
test
mov
mov
push
icebp
out
cmpl
push
sub
pop
xchg
ss
decl
mov
jno
jns
outsl
sbb
pop
jle
jns
addr16
lea
cmp
sub
mov
std
inc
xchg
adc
add
xor
out
mov
shrb
mov
or
mov
pop
sbb
fiadds
mov
cmpsb
out
iret
push
fdivl
xlat
adc
jp
popw
nop
cs
add
cmp
sbb
sbb
out
push
addr16
pop
fs
xor
aaa
hlt
cmpsl
loopne
mov
cltd
pop
xlat
push
repz
je
jmp
les
inc
cmp
sbb
cld
dec
cmp
pushf
daa
mov
mov
ds
or
repnz
xchg
xchg
mov
test
stos
js
fistl
cmp
lods
cli
in
outsl
jmp
call
in
jae
push
mov
xor
pop
ret
jp
shll
mov
sub
outsl
jnp
sbb
repnz
leave
lds
or
pop
addr16
out
push
aas
shrb
mov
jbe
jg
jp
xor
xor
inc
test
mov
mov
sahf
jmp
pop
mov
dec
out
ljmp
cwtl
in
lret
cmpsb
lret
bound
push
mov
sub
insb
mov
push
repz
cmp
mov
scas
mov
ds
shll
icebp
bound
adc
cmp
out
movsb
aad
inc
sbb
mov
cmp
stos
xchg
cmp
inc
dec
jecxz
fwait
cmp
sahf
lahf
pop
push
inc
jae
popa
mov
sub
aas
mov
ret
mov
repz
mov
cmpsl
dec
cs
adc
lods
add
je
cli
mov
sub
push
aaa
mov
mov
or
cld
imul
inc
mov
lret
xchg
or
add
jae
inc
outsb
mov
fs
cmp
aaa
sahf
xor
mov
rcll
out
push
jo
push
stos
xchg
add
loop
and
pop
jo
gs
imull
adc
outsb
enter
mov
cli
fistpll
jbe
jle
adc
or
test
sahf
aaa
jbe
std
cs
push
movsl
xchg
jns
and
rcll
cmp
xor
inc
enter
sub
aad
in
repnz
data16
xor
loop
add
mov
or
stos
inc
xchg
std
movsl
mov
hlt
push
cltd
es
push
in
rorb
sti
xchg
mov
enter
jno
sbb
mov
sti
pop
loope
roll
fdivs
out
mov
scas
out
cmpsb
mov
dec
fmull
cmp
hlt
jle
mov
adc
cmpsw
xor
xchg
out
mov
pop
loope
aad
dec
test
and
cmp
pop
vphaddubq
pop
mov
fcmovnu
and
loope
dec
loope
icebp
mov
cmp
xchg
sub
pop
cmpsb
push
mov
int3
push
inc
jmp
sbb
mov
mov
shll
mov
mull
movsl
mov
test
adc
in
xchg
int3
fcmovne
pusha
or
sbb
xchg
test
mov
push
pusha
xchg
xor
add
cmc
push
aas
xchg
or
mov
lret
push
mov
lds
push
sahf
xor
addr16
dec
dec
fiadds
cwtl
jg
sub
sbb
pop
xor
sbb
sbb
adc
divb
jle
push
sub
sub
push
add
mov
insb
aaa
pusha
lock
leave
nop
fisubs
out
xor
push
sbb
sub
xor
push
mov
imul
cmc
aaa
inc
mov
dec
hlt
lods
adc
sbb
les
popf
es
shll
fldenv
enter
xchg
ds
and
xchg
clc
xor
jmp
push
leave
push
cwtl
or
fdivs
push
mov
nop
ds
sbbl
out
cmp
dec
inc
and
xor
push
mov
cmp
sahf
sbb
cmp
jecxz
ljmp
mov
call
js
leave
test
icebp
xchg
push
or
push
adc
fiaddl
int3
lret
pop
pop
xor
xor
movb
cli
out
imul
sbb
int3
cmp
mov
and
mov
jae
cmp
pop
aaa
fmuls
sbb
pusha
sti
lcall
in
xchg
mov
popa
lods
pop
push
aaa
push
stos
repz
push
inc
in
movsb
lahf
stos
aad
stc
and
jb
dec
push
lcall
adc
cltd
pop
push
mov
mov
cmp
sahf
clc
pop
or
jae
js
jmp
mov
imull
leave
inc
or
add
mov
addr16
lods
lahf
rcrb
mov
fcmovnbe
pop
cmp
mov
sub
adc
push
std
inc
xor
push
lods
leave
aad
cmp
fildll
push
ficomps
gs
int3
das
jbe
and
adc
popa
test
ljmp
lahf
out
push
xchg
cmp
push
jnp
hlt
dec
loop
imul
cwtl
inc
call
cmp
jnp
and
jno
call
jmp
jp
addl
ljmp
pusha
adc
cmp
movsb
rcl
int
mov
push
mov
in
xor
das
jb
inc
mov
inc
bnd
jmp
ljmp
sub
loopne
and
pop
fcmovnbe
jae
xor
add
pop
or
mov
pushf
xchg
shlb
xor
icebp
inc
insb
lods
loopne,pt
fucomip
test
in
enter
in
mov
scas
adc
jle
jae
sbb
inc
int
sbb
divb
sbb
mov
or
jnp
xor
mov
jmp
sar
scas
lods
fnstsw
push
insb
ficompl
mov
pop
stc
or
jne
push
xchg
ja
ret
dec
in
and
adc
jle
cld
scas
jnp
xor
out
xorb
jle
xor
pop
dec
xchg
dec
outsl
cmpsl
imul
mov
mov
movsl
int3
push
cwtl
lret
lret
adc
insb
mov
and
movsl
das
or
mov
cmp
insl
stc
sbb
aad
out
cmp
mov
add
paddsb
xchg
int
dec
dec
push
sub
aam
push
fldt
popf
test
and
fimuls
popa
and
push
cpuid
and
lods
inc
mov
icebp
jp
inc
and
jmp
xlat
insl
sub
pop
xor
dec
or
adc
jmp
push
jno
pop
int
xlat
js
or
push
mov
sbb
ret
sbb
and
or
insl
push
xor
mov
stc
out
rcrw
mov
mov
dec
imul
std
xor
pop
ljmp
sahf
dec
add
fldl
jns
movsb
out
adc
jge
fwait
push
inc
adc
int
sbb
arpl
mov
push
lahf
shll
sub
dec
lret
dec
add
ffreep
push
sub
lock
cmpsb
cmpl
sub
mov
ret
cli
and
outsb
ffreep
fisubs
cmc
sahf
clc
cmp
cli
ret
mov
imul
bound
xchg
cwtl
adc
je
leave
pusha
popfw
mov
xchg
iret
push
iret
jecxz
jmp
mov
out
sbb
adcl
add
cmp
repnz
pop
cmp
push
push
mov
mov
aad
mov
adc
jecxz
jne
outsb
loope
outsl
jae
xchg
adc
xchg
bound
mov
iret
add
insl
sbb
dec
iret
testb
ljmp
mov
dec
arpl
xchg
sub
std
test
dec
mov
push
adc
stc
ds
call
xlat
push
cmc
js
mov
jp
pop
lcall
inc
flds
dec
jecxz
stc
loopne
sbbb
int
sub
push
sub
dec
push
scas
js
scas
inc
or
sbb
imul
cmp
jle
fbstp
popf
adc
jg
jne
xor
outsl
push
js
dec
mov
loopne
repnz
insb
pop
push
jmp
add
push
out
cld
pop
imul
push
mov
xchg
test
mov
sub
insb
js
ret
xchg
dec
sbb
popa
dec
push
lcall
push
pusha
ja
or
adc
jbe
mov
aaa
sbbl
addr16
push
in
xchg
sub
cmpsl
shrb
scas
ja
fisubl
mov
cmp
xchg
adc
and
push
push
int
push
pushf
or
cwtl
arpl
mov
cmpsl
push
repz
loopne
or
sbbb
jae
int3
fs
or
subl
adc
xchg
pop
lahf
cs
fdivrl
iret
fldcw
int3
cs
aam
ljmp
xor
loopne
dec
and
shr
dec
inc
mov
push
pop
cmp
fists
adc
lahf
jmp
pop
out
jmp
in
daa
pop
xlat
push
add
ja
es
insl
loopne
fsubrl
cmp
lret
pop
xchg
dec
sahf
mov
sarb
mov
out
sub
mov
dec
mov
hlt
imulw
jnp
and
mov
xorl
in
shlb
and
pop
insb
fidivrs
mov
sbbl
test
std
and
loope
dec
or
xchg
cmp
mov
push
push
xchg
and
decl
insb
add
pop
pop
lds
inc
and
cwtl
sbb
outsl
cmc
pop
mov
pop
outsb
jmp
pop
imul
push
push
in
out
fs
popf
mov
fcomp
xor
inc
test
popf
pop
xchg
inc
push
sbb
lods
dec
pushl
cmpsl
test
lock
outsb
xchg
xchg
hlt
mov
add
mov
in
add
mov
mov
insl
clc
les
out
bound
dec
cmpsl
bound
aad
fmuls
iret
je
inc
call
xchg
sub
jl
jmp
mov
and
or
mov
mov
ss
aad
push
pop
pop
fs
adc
mov
adc
mov
dec
movsl
fwait
lea
enter
jo
dec
xchg
rol
fldcw
inc
stc
pop
jecxz
or
invd
lahf
inc
fst
sub
pop
or
push
pmaxsw
sbb
adc
mov
lret
push
mov
inc
xchg
mov
dec
iret
dec
in
jg
adc
mov
mov
lods
jge
cmpsl
inc
testb
das
out
sbb
stos
and
stc
xchg
mov
add
adc
dec
fldpi
lcall
movsb
outsl
cli
pop
add
and
mov
data16
insl
lea
rclb
push
push
inc
and
fists
sbb
inc
pop
ret
push
pop
mov
sbb
dec
mov
jne
pop
test
movsb
int3
das
jo
lret
jnp
mov
mov
js
movhps
leave
pushf
add
push
sbb
mov
mov
jae
or
and
mov
xor
call
pusha
sub
push
mov
mov
jl
ja
jae
jns
rcl
add
add
enter
pushf
test
arpl
pop
dec
and
dec
cmp
or
jnp
mulb
mov
pop
xorb
cmp
sbb
mov
imul
iret
mov
mov
insb
xchg
push
test
add
test
sahf
sbb
push
sbb
adc
add
and
mov
sbb
jl
jo
pop
lret
addr16
pop
hlt
mov
test
inc
lret
adc
popf
je
sub
pop
mov
shrl
cli
mov
jae
sub
dec
dec
and
incb
pop
add
fmul
lods
andl
jbe
sbbb
push
xchg
imul
outsb
cmp
add
pushf
inc
push
mov
aam
jb
jg
bound
lods
xchg
mov
inc
inc
in
jae
shrb
out
push
cmp
loope
sub
icebp
movsl
inc
lret
pusha
cmpb
sub
stos
inc
cmc
jnp
dec
xchg
leave
pusha
sub
ret
enter
incb
add
xor
mov
aas
lret
add
fdiv
and
gs
and
ficoml
test
jb
inc
sub
push
jmp
pop
es
push
pop
sahf
pop
sbb
push
mov
mov
xchg
xor
mov
mov
out
ljmp
fisubl
cltd
and
jmp
dec
shlb
inc
dec
push
adcl
inc
jnp
mov
push
xchg
mov
rcl
call
insb
imull
add
push
and
cmp
test
mov
adc
test
mov
arpl
repz
xchg
or
jae
sub
cmp
adc
inc
outsl
daa
inc
sub
sarl
sub
lods
adc
sub
int
add
inc
mov
fsub
fisubs
fs
cmp
rcl
sbb
push
ljmp
pop
xchg
mov
mov
sarb
mov
sbbb
mov
mov
ja
std
mov
mov
jl
sub
xchg
stos
inc
test
jnp
push
add
aas
inc
rorb
cmp
pop
adc
xchg
ret
gs
inc
or
push
jne
or
xchg
and
andb
cwtl
mov
shl
or
jb
push
les
dec
add
div
loop
scas
inc
xchg
addr16
fsubr
addb
ljmp
mov
push
cmpsl
loop
iret
lahf
icebp
scas
dec
loope
mov
outsb
xor
or
arpl
idivb
mov
dec
fwait
shll
andb
movsb
je
xchg
jge
cmp
aas
aaa
lahf
mov
icebp
pop
add
jl
and
iret
dec
out
xchg
jecxz
data16
ljmp
lret
fbstp
pop
into
jp
jge
push
lcall
sub
sar
fsubl
repz
sbb
mov
in
push
sub
mov
push
cmc
mov
pop
cmp
sub
insb
or
fbld
shrl
pop
insb
movsl
mov
mov
aam
test
fdivrl
jno
scas
jmp
adc
push
mov
test
dec
movsl
imul
jns
mov
mov
call
push
mov
and
leave
adc
rclb
test
das
std
sub
stos
jno
test
sbb
insb
sbb
stos
bound
mov
cmp
test
xchg
adc
loop
and
push
sbb
dec
cmp
std
je
xor
outsb
mov
loopne
xor
mov
out
pop
cmp
mov
mov
rcrl
outsb
test
push
dec
xor
xchg
je
adc
sub
and
adc
or
fs
repz
aas
xlat
xchg
mov
es
repnz
mov
cs
jg
jne
outsl
dec
jns
pop
cld
lea
and
insb
and
xchg
push
sbb
and
and
bound
adc
daa
mov
lods
and
add
add
mov
lahf
sub
push
cmpsb
inc
stc
adc
das
add
mov
mov
outsb
pop
cmp
shrl
adc
fisubl
movsl
and
sarl
imul
ja
mov
int3
mov
ljmp
scas
mov
movsl
in
pop
ds
mov
out
mov
inc
pop
int
adcl
sbb
out
aas
jge
jno
jle
repnz
shll
fcompl
addr16
enter
sbb
in
leave
cmp
bound
insl
sahf
jge
imul
les
rcrl
dec
mov
adc
movsb
cs
out
mov
xchg
or
cli
xchg
sub
shll
into
gs
mov
mov
mov
add
pop
jns
xchg
or
inc
mov
push
sub
frstor
arpl
outsl
rclb
popa
iret
jp
divl
dec
push
cs
adc
xchg
scas
inc
scas
vshufps
xor
adc
sub
scas
ret
pop
dec
or
popf
mov
loopne
sahf
xor
sub
mov
jl
dec
inc
scas
repz
or
in
clc
adc
sub
dec
iret
das
insb
inc
inc
cmpsl
lcall
mov
dec
push
inc
or
xor
push
fbstp
xor
xchg
jbe
jp
push
shll
in
mov
mov
sbb
iret
ret
and
xor
xor
push
pusha
xor
lods
xchg
mov
pop
ja
add
dec
sbbb
lcall
outsb
dec
push
add
jo
adc
jmp
subl
inc
lods
ljmp
pop
mov
jb
xor
sti
cwtl
lods
and
mov
mov
mov
pop
sub
jo
jle
sbb
push
xchg
jg
pop
xchg
push
jmp
icebp
addb
sbbl
mul
push
xchg
pop
mov
ret
sbb
cmp
orps
cli
cmpsb
sbb
loope
dec
mov
aas
mov
push
loope
mov
icebp
sbb
mov
mov
arpl
cmp
ret
add
sarb
and
sub
pop
cli
jne
andl
and
adc
xor
mov
popf
lods
sub
lcall
sbb
mov
push
in
pop
cwtl
mov
fnstcw
push
dec
mov
sbb
or
cmp
ret
or
sub
jnp
push
xchg
dec
inc
inc
mov
scas
into
sub
outsb
pop
ljmp
jno
fisubrs
popf
push
nop
inc
cmp
cmp
mov
fs
mov
clc
mov
jb
xchg
xor
test
xlat
sub
fucomip
ss
add
cmpsb
mov
loope
adc
and
es
and
cld
mov
xor
add
and
xor
vmwrite
cmp
xchg
xchg
test
pop
js
mov
loopne
add
inc
add
sub
sbb
dec
or
daa
out
mov
lret
cmp
roll
decl
xor
pop
mov
sbb
roll
or
loope
movsl
adc
in
push
jle
add
jnp
xor
and
int
jno
mov
jmp
jnp
shrb
inc
cmc
sti
sbb
out
sbb
rorb
pop
mov
mov
aaa
sti
lcall
es
and
jle
pop
add
loope
inc
push
sbb
dec
out
daa
call
jge
mov
pop
out
jo
mov
add
cmp
js
out
add
jbe
jg
mov
shl
add
data16
and
iret
sbb
xor
xor
ret
cmc
cwtl
sbb
in
das
ret
daa
mov
jne
pop
push
mov
fidivrl
push
xchg
test
ljmp
xchg
mov
mov
cmp
aam
mov
int3
pusha
sub
pop
outsb
push
testl
and
jmp
xor
rcr
jno
mov
xchg
mov
daa
mov
jns
jle
js
sub
rcrl
rcrl
addr16
hlt
sbb
ja
minps
mov
iret
pop
aad
loope
adc
xorb
rol
pop
insb
std
jnp
mov
mov
orl
cwtl
in
jg
adc
outsl
inc
ficompl
in
aas
ret
movsl
mov
in
stc
push
dec
shrb
pop
xorb
mull
ret
add
gs
insl
push
rcll
iret
shrl
lods
inc
inc
notl
imul
and
or
test
mov
fnstenv
into
xchg
pop
push
cmpsl
push
push
dec
and
mov
xchg
pop
bound
or
jg
sti
xchg
xor
ret
fstps
scas
or
call
test
push
test
stos
adc
out
pop
dec
pop
push
into
adc
out
cmp
ds
shl
sbb
test
dec
dec
outsb
enter
iret
rcrw
push
sub
sbb
dec
push
sbb
mov
or
jbe
mov
divb
lret
pop
aad
mov
pop
inc
loop
out
callw
jp
sbb
insl
mov
mov
test
sbb
sbb
inc
aaa
loopne
in
cmp
insb
aam
add
lret
cmp
mov
mov
scas
mov
or
pusha
xchg
inc
into
and
lock
cli
dec
cs
in
les
xor
in
scas
pop
adc
xchg
ja
or
cmp
adc
sbb
lcall
sub
add
mov
daa
mov
ss
outsl
in
mov
adc
sahf
frstor
fucomi
sbb
cmp
pusha
outsb
xchg
cmc
xor
sub
ss
std
xchg
sub
xchg
jle
dec
lcall
aam
mov
mov
cmpsb
xchg
jecxz
mov
rol
push
les
add
jno
ret
dec
dec
add
mov
fmul
ret
mov
dec
loopne
clc
std
adc
fcmovnb
xchg
daa
or
push
out
xor
mov
pop
insb
repnz
daa
dec
pop
inc
xor
fucomp
jbe
adcb
ja
es
fimuls
dec
shr
jmp
jo
sbb
mov
jo
pop
xor
xchg
lods
inc
ret
push
daa
xchg
add
es
dec
dec
jnp
stc
lods
outsl
shrl
xchg
in
push
gs
jne
es
sub
push
int
imul
and
call
inc
xor
test
jno
push
cwtl
subl
les
cpuid
jne
jecxz
gs
inc
pop
mov
fnstsw
xchg
inc
pop
movsl
jno
mov
mov
pop
push
or
push
push
adc
jb
adc
cltd
xor
pop
mov
movsl
sbb
pop
mov
popf
mov
je
mov
mov
mov
das
cmpsb
jp
push
push
pop
push
call
push
cs
loope
adc
jmp
test
popf
push
xchg
xlat
scas
and
leave
ljmp
out
cmp
sbb
cmpsb
sbb
sub
lds
adc
cmp
mov
pop
and
cmp
cmc
sbb
cld
xchg
jne
lcall
adc
jno
outsl
jmp
sbb
popl
add
xor
mov
xor
outsl
call
cltd
jne
inc
sbb
inc
adc
fdivl
fcoml
jnp
cli
push
aas
aaa
xor
add
jo
and
sbb
ret
outsb
xor
fs
jbe,pn
mov
addb
jmp
mov
jns
add
and
jnp
stc
negl
and
pop
mov
inc
mov
or
sahf
sbb
mov
push
movsl
lret
xlat
lea
mov
inc
lret
cld
hlt
jmp
pop
loop
loopne
jmp
idivb
adc
mov
daa
sahf
mov
popa
or
push
popa
test
pop
out
mov
mov
cs
loopne
ret
mov
outsb
aad
adc
mov
les
jge
les
fsubr
nop
mov
xorl
fstpl
xchg
fldl
push
inc
retw
outsl
out
loopne
out
aad
mov
jno
enter
testl
inc
xor
or
or
xchg
sub
scas
mov
in
jmp
pop
in
xchg
pop
xor
loopne
adc
cmp
outsl
xchg
mov
ljmp
mov
xchg
test
ds
sub
leave
out
test
sbb
sbb
sub
addb
sbb
mov
jb
out
push
xchg
pop
adc
or
shll
pop
adc
cwtl
mov
or
icebp
stc
nop
mov
adc
xor
fcoml
shll
test
in
es
mov
push
into
xchg
out
jae
push
and
cmpsb
push
xchg
repz
icebp
and
inc
inc
les
out
fistps
mov
lahf
ss
fdivs
aad
xchg
aaa
mov
jmp
fcmove
push
or
and
adcl
and
icebp
mov
lods
mov
test
inc
sub
in
push
cmp
dec
dec
das
into
xor
in
xchg
dec
push
int3
mov
cltd
mov
add
test
mov
rcrl
decl
sub
inc
ficoml
iret
outsb
icebp
popa
enter
orb
inc
sbb
or
pop
jg
gs
mov
inc
xchg
pop
out
loope
push
pop
std
fdivl
stc
shlb
fdivr
jbe
jl
test
and
mov
icebp
icebp
mov
mov
adc
shl
in
clc
or
sub
jns
lret
sahf
push
out
fdivl
push
mov
mov
inc
pusha
stos
xchg
shll
push
faddl
adc
jne
stos
insl
enter
xchg
or
jae
ds
test
jle
sub
das
mov
add
xchg
cltd
in
mov
outsl
push
xchg
sbb
push
ret
mov
nop
mov
mov
lods
out
jae
sub
lret
shlb
inc
cli
add
pushf
add
jp
inc
dec
nop
jg
add
xchg
xlat
out
mov
pop
mov
out
cmp
push
insb
roll
shl
ljmp
std
movsl
pop
hlt
jmp
sub
adc
sub
push
jb
std
jns
clc
push
and
popf
insb
push
dec
and
cmp
add
push
cs
rorb
divb
dec
imul
inc
fcmove
mov
and
lods
fidivs
fs
push
dec
clc
mov
cmpsl
in
shrl
lea
das
scas
push
cs
sbb
sub
cs
and
arpl
lahf
addb
daa
or
jbe
lds
xor
mov
or
std
or
and
shlb
jns
ljmp
mov
xlat
add
lea
and
pushf
lods
lret
add
jmp
aad
popf
push
xlat
jb
hlt
inc
pusha
mov
and
mov
dec
cmp
cmp
testl
inc
cmp
ret
loop
push
xor
aad
xor
flds
dec
arpl
test
rcll
xor
clc
cmp
jb
mov
lods
xor
lea
push
dec
push
dec
pusha
stos
cld
sbb
leave
fldenv
mov
pusha
or
lds
flds
push
ds
push
std
aam
pop
pop
sbb
clc
inc
xor
mov
mov
sub
adc
clc
js
lods
xorl
insb
arpl
add
rorb
add
xchg
adc
mov
rol
les
cwtl
pop
std
orb
cs
xlat
mov
jl
xchg
or
dec
aam
mov
pop
scas
and
or
jle
jo
sbb
mov
imul
add
jl
sti
mov
fstpt
int3
xorl
jg
or
loop
adc
or
ja
hlt
push
mov
jbe
xor
cli
jbe
xor
idivb
adc
jno
push
ror
sti
pop
loope
sbb
vmovdqu
jae
and
aaa
or
adc
push
xor
shll
mov
aaa
mov
bound
rcl
mov
orl
mov
pop
push
xchg
xchg
mov
cwtl
ja
jns
and
mov
popf
insl
fnsave
into
mov
sbb
cmc
cmp
push
mov
jnp
leave
daa
andl
js
xchg
stos
sarb
xchg
aaa
aam
xor
dec
out
cld
jle
add
mov
scas
loop
inc
stc
jbe
xor
inc
dec
cmpsb
push
outsl
mov
jl
cmc
jl
pop
push
pop
cmp
pop
mov
xchg
jno
mov
cli
push
ret
jg
idiv
or
lods
push
lcall
push
or
mov
push
push
rcr
sub
cld
or
stos
shl
scas
std
lods
and
push
or
pushf
xor
push
out
push
lea
jl
mov
and
cmc
in
mov
and
pop
jns
insl
mov
lret
jnp
pxor
in
xchg
lock
mov
std
addb
mov
aad
add
pop
ficoms
sti
faddl
leave
xchg
add
bound
mov
or
dec
pop
pop
dec
push
and
cwtl
mov
and
incl
mov
fwait
aad
fsubr
adc
ja
cwtl
or
jge
dec
mov
jne
stc
cmp
cmp
mov
icebp
cli
xor
or
xchg
sub
shlb
stc
fs
int
leave
imulb
out
dec
xchg
jno
popf
stos
xor
stc
mov
arpl
pusha
std
ret
cmp
mov
inc
mov
xchg
ja
pop
ja
xchg
aaa
mov
cs
push
cli
lds
inc
push
fwait
lahf
inc
mov
lods
push
dec
adc
pop
mov
je
sbb
pop
aam
cmpsl
add
lock
lcall
xchg
test
jle
ret
loopne
mov
in
aam
adc
lea
out
out
add
das
stos
jb
popa
jp
or
push
push
push
mov
aam
into
adc
imul
inc
cmp
cmc
ja
and
and
ds
xor
jmp
adc
scas
xchg
push
mov
or
test
ljmp
lahf
jns
fiaddl
out
mov
aaa
adc
in
imull
xchg
aad
or
scas
scas
fiaddl
sarl
in
repz
add
in
cli
std
push
std
loop
dec
les
jb
or
inc
inc
push
lea
stos
addr16
mov
icebp
sub
adcb
cltd
mov
pop
or
lret
les
arpl
cwtl
pop
pop
inc
adc
bound
sbb
xchg
pop
out
lret
push
cmp
cmp
int3
cs
sbb
ds
xchg
sub
sahf
test
imulb
mov
pop
popf
stc
js
cmp
jge
jmp
sub
fstps
jb
jbe
and
or
adc
ret
push
sub
mov
xchg
in
jmp
inc
fstpt
or
fnstsw
ja
popf
mov
int
fs
pop
jg
cmp
sbb
data16
sub
aam
daa
mov
pop
ljmp
test
xor
pop
and
adc
jne
dec
mov
jne
xchg
and
subl
adc
ljmp
pushf
and
je
pop
ljmpw
or
int3
sbb
mov
pop
push
inc
mov
mov
xor
sahf
cmpsl
scas
cli
cwtl
jg
lcall
dec
mov
or
dec
xlat
in
call
sub
jg
pop
jl
pop
insl
arpl
into
shll
dec
push
rcrl
mov
rorl
inc
sub
cld
lds
pop
loop
packsswb
and
shrl
or
ds
jmp
inc
js
out
bound
inc
jmp
dec
sub
lcall
jnp
mov
cmp
mov
ss
sub
idivl
add
test
mov
push
mov
cmp
in
pop
adc
imul
cmp
xchg
iret
sbb
jb
sub
push
test
inc
shll
fs
xor
jp
dec
sub
cli
xchg
dec
out
iret
into
cmp
int
and
jp
xchg
xchg
imul
pop
cmp
sub
jb
pop
sub
ja
inc
in
cmp
adcl
loopne
mov
cmp
sub
jae
jg
add
decl
push
push
scas
sub
jge
in
scas
jge
xor
mov
dec
vshufps
push
push
mov
or
cmp
mov
pop
enter
jnp
and
pop
push
mov
xor
sub
sbb
fidivs
shrl
cld
mov
pop
push
jmp
sbb
jo
cmc
pop
mov
lret
xlat
push
xchg
lret
das
scas
mull
imul
push
out
mov
adc
jmp
mov
ret
sbbl
mov
insl
inc
xor
mov
sbb
out
xchg
and
sub
add
sbb
sbbb
lahf
add
and
negl
adc
lock
lahf
shrb
pop
fstp
ds
fcoms
adc
adc
and
jmp
mov
xor
adc
mov
sarb
jno
pop
ret
loope
cmp
lds
popl
cmpsl
push
xchg
fsubs
iret
inc
daa
cwtl
fdivr
dec
mov
and
out
ja
lahf
fnstsw
and
int
cmp
inc
pop
and
cld
pop
decb
mov
pop
in
xor
pop
iret
shll
cmc
push
nop
lods
adc
test
sbb
pop
outsl
rclb
sub
lea
cmp
cmp
leave
pop
stos
inc
shr
jmp
mov
es
ret
int
mov
pop
jbe
or
mov
mov
scas
add
in
lock
loopne
imul
mov
sub
inc
pop
enter
inc
cmp
cld
pusha
fsts
test
dec
and
sub
mov
test
idivl
dec
push
lret
inc
test
cmp
sbb
inc
addr16
adc
std
icebp
sbb
ret
inc
cmp
lahf
nop
clc
sub
and
add
cmc
mov
or
hlt
lret
es
sub
adc
outsl
mov
sub
mov
push
cmc
inc
frstor
xor
pop
cli
adc
sub
out
mov
fildl
sbb
xchg
fs
in
xchg
or
scas
inc
jp
shlb
mov
js
and
ficomps
stos
insl
fadds
rcrl
in
fbld
pop
pop
fld
bound
mov
pop
pop
inc
sbb
lds
aaa
jp
inc
mov
out
movsb
push
add
sub
in
rolb
xor
test
push
les
sub
xchg
mov
dec
gs
sub
orb
outsl
mov
out
dec
lods
jg
pop
and
aam
cli
dec
add
xor
adc
push
sub
push
mov
jno
pop
es
incb
mov
cmp
adc
movsb
jb
xor
pop
sbb
cmp
inc
xchg
into
sub
or
testb
xchg
fstl
dec
lcall
jbe
loopne
inc
outsl
or
cmp
popf
les
xchg
ret
loope
inc
sbb
pushf
or
sub
dec
inc
xlat
js
cmc
mov
loop
cmp
ret
js
repz
xchg
dec
shlb
in
mov
cmp
shlb
and
mov
dec
testb
dec
mov
stc
iret
iret
fbstp
pusha
fs
sar
xchg
or
sbb
jmp
push
fcomip
mov
popf
pop
jo
pusha
jbe
popf
pop
xchg
adc
dec
std
cltd
loop
cmp
inc
mov
test
jp
or
and
xor
scas
sbb
cwtl
popf
jb
jmp
mov
jg
sub
repz
and
inc
adc
inc
fs
push
mov
out
push
insl
add
add
int
daa
dec
mov
aas
dec
mov
sysenter
push
or
mov
and
jg
add
arpl
stc
mov
mov
daa
sbbl
cmp
lods
mov
sub
push
mov
imul
scas
adc
mov
out
cmp
mov
hlt
insb
setne
cmp
loope
mov
cmp
or
mov
dec
loopne
mov
push
aaa
int3
inc
jne
les
sub
inc
adc
cmp
xor
out
ret
push
push
scas
mov
xor
fists
fcoms
xchg
mov
mov
mov
insl
ss
inc
je
xchg
icebp
ja
add
jo
dec
fnstenv
push
sbbl
jmp
mov
in
orb
sbb
ja
jecxz
cmpl
cwtl
int3
cs
mov
mov
mov
adc
xor
push
test
lods
leave
sbb
cmp
mov
js
movsb
sub
xchg
pusha
dec
rep
inc
jp
sbb
jnp
add
movsl
fiaddl
or
and
repz
inc
dec
testb
cmp
in
nop
ret
mov
jae
and
inc
push
mov
and
cmp
frstor
insl
ljmp
jl
push
scas
adc
xchg
and
adc
out
hlt
xlat
sbb
das
ret
imul
fs
sub
push
popa
leave
mov
xchg
jno
dec
pusha
sahf
stos
push
insl
jne
jnp
sbb
dec
cmp
iret
push
inc
fs
lret
es
xchg
mov
clc
xor
rorl
daa
sub
fistl
movsl
into
inc
fbstp
xchg
or
cld
aad
adc
adc
pusha
repz
pop
test
jne
mov
inc
mov
lret
inc
sbb
loope
cwtl
mov
or
sub
cmp
mov
shll
mov
adc
nop
push
xor
mov
dec
xchg
or
dec
nop
sbb
dec
inc
xchg
test
mov
jnp
adc
or
push
pop
std
mov
xor
xor
pop
fldt
add
pusha
aaa
cld
sbb
mov
mov
jbe
aam
sbb
hlt
cmpsl
ds
mov
xchg
call
add
mov
cmp
ret
sub
or
data16
jp
scas
sahf
hlt
sbb
sub
sbb
jp
sbb
jb
dec
sbb
cli
xchg
popf
test
adc
jp
or
add
push
jge
bound
dec
sub
in
sbb
dec
dec
mul
data16
push
sub
loop
cmp
shr
inc
loop
mov
js
or
out
pop
mov
inc
push
push
dec
das
das
sub
fcoms
jle
int
div
stc
sbb
das
stc
nop
popa
pop
or
mov
push
inc
or
sti
and
adc
xor
and
fadd
mov
jg
xor
mov
or
dec
inc
cmpsl
repnz
pop
and
ds
xlat
lea
xchg
jge
adc
pop
jno
mov
mov
mov
fwait
cmpsb
xchg
inc
jle
dec
push
rcl
jle
stos
es
les
mov
out
ret
sarb
aam
in
test
pop
adc
fwait
movsb
cmp
push
ret
dec
fsubrp
mov
loope
loopne
stos
inc
jb
jmp
push
popa
enter
pushf
xor
and
orps
ret
iret
fildl
negl
sub
cld
mov
jnp
pop
inc
pop
andb
cmpsl
ja
mov
hlt
jbe
mov
insb
mov
sahf
std
lcall
in
cmp
mov
pop
test
sbb
idivl
sub
shrl
outsl
cmpsb
xchg
test
sub
sar
or
push
popa
rcl
out
lret
into
jecxz
scas
call
push
jp
stc
inc
add
xor
mov
nop
loop
dec
ror
add
jnp
inc
pop
push
cli
push
or
sub
sbb
or
std
fbld
mov
lods
or
pop
mov
xchg
push
xor
out
jb
test
push
mov
ret
push
je
rolb
inc
xor
push
nop
inc
or
mov
pop
add
jo
imul
xchg
adc
xor
dec
std
pop
sub
or
shl
dec
push
rol
lret
sti
or
bound
mov
mov
cmp
add
aaa
inc
jmp
mov
sub
add
add
gs
jne
jno
and
pop
mov
jge
push
adc
scas
cmc
mov
lds
sarl
lret
jo
imul
fwait
imul
movsb
mov
fwait
add
xchg
int3
pop
push
xchg
lahf
add
xchg
and
out
add
or
daa
dec
sti
sbbb
xchg
js
mov
testl
mov
fisttpll
xchg
js
and
cwtl
out
not
xchg
stos
jb
lcall
xor
in
nop
or
mov
fdivrs
inc
icebp
adc
add
xchg
mov
sub
pop
js
mov
arpl
cmp
outsl
loop
adc
xorl
test
sub
out
test
cltd
dec
data16
rcr
adc
xor
sti
aas
dec
xor
sub
insb
lret
mov
imul
xchg
lret
clc
nop
sbb
aas
pop
add
inc
mov
in
add
test
arpl
sbb
aaa
sub
or
test
movl
mov
test
jecxz
lods
cmpsb
clc
enter
js
adc
adc
cmpl
sub
add
rol
rcrl
das
in
gs
jne
scas
jb
sahf
cmp
sbb
cwtl
sbb
jp
pushf
or
adc
push
xor
xlat
pop
jno
dec
mov
testl
fistpll
aaa
push
cli
jne
add
lods
mov
lret
sbb
sti
lea
stc
jl
ficoms
hlt
mov
xchg
xor
push
inc
sub
sub
les
ret
inc
loope
repnz
rorb
pop
add
and
add
inc
repz
mov
les
aaa
jae
mov
mov
outsb
nop
pop
cmc
push
rcrl
nop
out
mov
pop
pop
pop
lea
insl
mov
and
inc
cmp
outsl
data16
sub
bound
cmpl
cltd
jl
or
jmp
lahf
test
data16
es
xchg
idivb
xor
xchg
inc
xor
adc
addb
in
iret
or
imul
imul
pop
sbb
std
mov
insb
loopne
outsl
stos
cmp
cmp
sbb
mov
xchg
scas
push
and
lea
es
fmul
mov
loop
test
movsl
inc
fisubrl
mov
inc
sub
test
dec
mov
add
push
and
cld
daa
ret
int3
shrl
jno
jb
inc
mov
arpl
inc
call
add
mov
push
mov
xchg
sub
push
cmc
jge
sbb
push
mov
icebp
hlt
repnz
jp,pt
jo
xor
inc
leave
jecxz
pop
xchg
ljmp
jno
add
dec
in
mov
insb
mov
out
cmpsl
pop
es
dec
sub
cld
js
dec
out
lcall
mov
pop
mov
jo,pt
dec
scas
inc
mov
jg
adc
outsl
aas
inc
lods
adcb
lret
inc
fdivr
mov
pop
imul
lahf
jnp
push
fmuls
imul
ja
repz
jecxz
insl
dec
add
mov
xor
fxam
mov
pop
jae
pop
and
movsl
addr16
enter
push
add
out
and
out
fnstenv
pushf
sub
and
sbb
outsb
sbb
lahf
sbb
dec
jbe
mov
sbb
or
jg
es
and
outsb
out
adc
shl
sub
loop
cld
adc
sbbl
movsl
int
add
mov
in
insl
cli
lahf
neg
pop
push
scas
jp
imul
adc
int3
mov
arpl
fisubl
mov
icebp
mov
mov
push
mov
inc
cpuid
pusha
jnp
movsl
nop
inc
mov
xor
jl
sub
jb
xlat
add
push
mov
mov
inc
add
lcall
mov
das
add
mov
inc
ret
xor
xor
call
adc
lea
or
mov
es
xchg
sar
sahf
mov
mov
and
testl
jmp
push
and
sbbl
fcmove
ret
loop
sbb
push
insl
push
jp
inc
lods
jno
xor
pop
cmp
in
push
jecxz
shl
xchg
test
cmp
ficoms
push
lock
mov
pop
das
addr16
cli
adc
bndldx
jbe
test
pop
sbb
dec
jge
push
cs
mov
sahf
dec
sub
cli
and
mov
cld
es
pop
in
xor
js
stos
es
jl
mov
lds
and
lds
sbb
mov
and
or
jge
es
and
outsb
add
shrl
movsl
ret
dec
cli
inc
sti
in
in
jp
sbb
push
add
or
sub
insb
push
or
jno,pt
push
in
dec
xchg
pop
pop
add
pop
cwtl
and
inc
icebp
sbb
jmp
mov
cmp
sbb
mov
loopne
cld
icebp
lock
arpl
xchg
inc
into
in
cmp
mov
mov
les
idivw
sbb
imul
or
sbb
cmpsb
mov
test
dec
lock
in
mov
notb
mov
jecxz
push
pushf
cmp
add
pop
loope
mov
jb
bndstx
arpl
movsl
mov
out
mov
or
icebp
cmp
sbb
pop
push
lcall
aad
xor
aas
mov
jo
mov
jmp
cmpb
xchg
xchg
mov
and
lret
inc
aaa
pop
mull
push
in
gs
fisubs
xchg
add
cmp
add
xorb
xchg
xor
cmp
mov
jp
add
jmp
mov
rol
lcall
fnsave
icebp
xchg
push
neg
in
fdivrs
sub
cwtl
mov
cmpsb
dec
pop
je
xchg
mov
xor
lock
mov
scas
ja
xor
xor
mov
lcall
dec
arpl
fwait
mov
sub
inc
and
das
jge
loopne
xchg
js
stos
insl
lret
int3
pop
mov
mov
add
inc
js
xchg
mov
adc
roll
mov
jo
loope
stc
js
mov
movb
dec
pop
int
enter
xor
ds
lcall
mov
xor
std
mov
inc
mov
mov
mov
js
lds
push
test
or
and
dec
mov
add
xor
ds
jne
xlat
andb
imul
mov
sub
adc
sbb
rclb
faddl
inc
dec
int3
iret
mov
fstl
mov
stos
inc
push
xor
inc
test
adc
gs
jne
mov
xchg
inc
pop
repnz
in
xor
into
mov
push
dec
inc
cmp
std
dec
sti
or
loopne
shlb
mov
lods
lcall
or
sti
and
jbe
mov
xchg
sbbl
je
xchg
sub
inc
scas
cmp
mov
dec
mov
out
adc
imul
pop
mov
leave
adc
pop
or
and
sub
inc
lods
ljmp
pushf
xor
mov
leave
cmpsl
aas
aad
jecxz
cltd
clc
cmp
jnp
push
clc
jae
scas
add
cmpsl
enter
mov
into
jg
mov
add
mov
xchg
push
and
out
pop
ds
dec
ljmp
ficomps
dec
subb
add
js
jns
or
retw
bound
repz
xchg
ljmp
add
inc
imull
adc
bound
leave
push
pop
push
call
loop
xor
sarl
add
cli
ret
and
or
pop
sarb
pushf
push
inc
es
inc
lods
jnp
inc
outsb
test
add
pushf
cli
in
sub
push
out
ja
sbb
jne
in
mov
leave
loop
lock
out
nop
test
orb
cld
inc
push
push
adc
cld
lcall
in
lret
lea
push
cmp
data16
cmp
inc
pop
inc
add
daa
mov
inc
ds
push
inc
fnsave
aad
xchg
sahf
sti
sub
mov
sbb
fcoms
xor
jge
mov
mov
mov
xor
pop
hlt
xor
xchg
clc
lcall
or
pushf
mov
sub
pop
cmp
insb
xchg
ljmp
mov
lods
divb
pop
mov
lds
dec
sbb
mov
add
inc
xchg
mov
inc
cwtl
push
pop
and
mov
gs
xorb
int
xchg
or
hlt
jecxz
add
icebp
xchg
in
repz
fisttps
pop
sbbb
dec
mov
cmpsl
mov
inc
gs
push
iret
cli
xchg
mov
mov
das
jno
fdivrs
or
test
xchg
dec
add
je
sub
inc
call
scas
leave
jae
push
fnstenv
mov
jp
and
inc
cltd
test
fdivrs
adc
aas
cmp
and
divb
jp
sbb
sbb
adc
push
cld
pop
xor
xor
jmp
or
mov
test
pop
xchg
je
in
mov
outsb
pop
jns
cmp
mov
mov
sbbl
in
mov
push
insl
scas
iret
cmp
dec
sub
rcll
ds
lods
cld
mov
sub
dec
mov
jle
xchg
pop
hlt
xchg
cld
mov
ret
mov
add
mov
and
push
adc
in
sbb
jae
lcall
mov
push
int3
outsl
adc
mov
jmp
add
out
bound
jb
lds
daa
fcomps
inc
lds
push
push
or
push
inc
std
mov
insb
add
jno
notl
inc
cs
cmpsb
aaa
mov
mov
push
js
insl
add
aam
inc
ret
mov
jle
dec
scas
jno
inc
cltd
cmpsl
mov
add
arpl
fdivl
sub
add
push
out
xor
repz
jbe
or
pop
repz
stos
ss
lahf
movsb
ja
pop
sbb
push
jne
mov
sub
jle
adc
ficomps
xchg
push
aad
mov
adc
test
lea
ljmp
ret
and
popf
xor
icebp
mov
inc
aam
push
jbe
inc
outsb
mov
dec
pop
mov
push
xor
aad
movsl
adc
ret
inc
pop
jecxz
jmp
lret
std
cmove
and
into
test
movsb
gs
sub
hlt
mov
outsl
hlt
mov
out
out
neg
xor
fdivrl
mov
mov
or
popa
rorb
fwait
imul
sbb
and
lcall
push
cwtl
loope
sub
push
fidivl
in
stos
pop
leave
xchg
dec
and
test
mov
cmpsb
in
or
add
imulb
and
mov
mov
xchg
pop
mov
mov
in
adc
xchg
dec
cmpl
xchg
lods
pop
clc
mov
pop
adcl
ja
int3
xchg
mov
push
mov
int
das
xchg
sbb
iret
jnp
xor
push
mov
or
fcoml
sub
and
push
and
sahf
sti
iret
mov
add
sub
mov
jg
sub
loopne
xchg
push
hlt
fucomp
icebp
xchg
insl
sbb
imulb
outsb
cmp
and
dec
or
jbe
fldl
cmovns
dec
sub
shlb
cmc
jl
dec
fnstsw
shrb
xlat
cmp
sub
xchg
gs
bound
inc
mov
push
mov
fstps
je
test
dec
jb
xchg
mov
in
test
add
andb
push
and
fcmove
rorb
outsb
std
int
mov
mov
stos
cwtl
stos
xchg
dec
pop
cmc
ret
insl
jbe
cmp
push
adc
or
xchg
xchg
push
in
cs
cmp
test
mov
dec
mov
jg
or
in
fwait
ss
test
pop
jne
add
sbb
mov
mov
push
in
scas
add
mov
in
jb
jl
ss
inc
jo
or
pop
sbb
fmull
test
jg
jbe
cmpsl
jbe
loop
cmp
ljmp
jb
push
xor
xor
mov
popa
mov
xchg
or
rolb
and
in
xchg
mov
shrl
pop
mov
out
jae
inc
lret
cs
xor
fs
sti
mov
dec
lea
sbb
xchg
cmp
xchg
sahf
std
mov
mov
inc
add
mov
pushf
mov
mov
lock
cs
adc
aad
jmp
or
sbb
rol
aam
clc
ret
mov
jo
rol
mov
xchg
push
fldl
js
ja
xlat
and
inc
mov
xor
sahf
mov
in
or
dec
es
jle
inc
popf
push
addr16
out
aas
enter
js
shrb
and
icebp
loopne
and
popf
popa
mov
outsl
push
and
aaa
jecxz
add
int3
cltd
cmc
adc
std
outsl
lds
shlb
mov
pop
cli
les
mov
leave
fcmovbe
cmp
sbb
jge
mov
out
scas
mov
xor
xchg
jp
sarl
push
imul
jb
fs
mov
and
jbe
icebp
imul
dec
test
xchg
imul
out
out
push
pusha
jbe
ljmp
imul
popa
sbb
xor
pop
ljmp
dec
mov
lret
cmp
mov
add
ficoml
mov
add
xor
stos
das
or
lea
insl
shrl
cmp
in
cmc
jecxz
add
pop
mov
add
imul
mov
cmpl
cmp
xor
inc
clc
sub
cmp
aad
sbb
mov
add
sub
cmpsb
lock
daa
in
adc
sub
cmp
sub
outsl
loop
ret
jecxz
lret
sbb
jle
cmp
negl
stos
es
sbb
mov
push
insl
sbb
ds
dec
pop
push
lahf
jb
dec
fdivrl
fwait
push
dec
mov
jbe
rcl
les
icebp
movsl
pushf
push
loope
loope
dec
dec
negb
mov
cmp
les
pop
mov
jb
ss
sbb
mov
repz
push
pop
adc
repnz
xchg
add
xor
cmp
lea
pop
sbb
sub
pop
stos
and
je
dec
mov
fs
test
loopne
sub
adc
mov
xor
mov
jmp
movsl
popa
fisttpl
fwait
in
leave
xor
pop
cmp
scas
jno
fiaddl
pop
push
sbb
pop
out
mov
imul
push
jp
pop
sub
sub
cmp
add
xchg
scas
dec
sbb
in
adc
out
push
mov
xlat
outsb
inc
pop
pop
adc
xlat
adc
outsl
jge
js
xchg
mov
mov
fcomps
enter
push
scas
jno
iret
sub
pop
or
mov
sub
loop
push
dec
push
sbb
lock
sahf
fidivrs
sbb
into
bound
xchg
sub
jmp
or
inc
push
pusha
sub
int3
imul
mov
js
call
jmp
sbb
in
ret
jl
jecxz
leave
pushf
push
les
ficomps
cld
xlat
xchg
popa
or
xor
cwtl
cmp
clc
ljmp
dec
lea
mov
adc
mov
xchg
xor
xchg
addr16
sbb
jb
lods
and
pop
stos
imul
add
int3
mov
fwait
jg
lock
popf
mov
loopne
imul
add
inc
ficoms
sbb
pusha
rcrb
adc
cmpsb
mov
lahf
cmp
mov
dec
add
fisubs
pop
dec
push
dec
inc
call
lock
adc
cltd
data16
and
jecxz
je
mov
push
jo
add
jnp
and
popaw
fs
movsl
and
mov
sbb
mov
mov
lods
and
nop
xchg
andb
mov
scas
xor
push
dec
cltd
sbb
mov
ret
mov
mov
pop
into
jne
or
imul
add
dec
jb
cmpsl
jb
fdivs
jl
test
cmc
pop
not
xor
add
cld
xchg
mov
fstpt
push
mov
and
sbb
imul
pop
cmpsl
pop
sbb
jl
sarb
sbb
pop
inc
rorl
aam
add
outsb
cmc
sbb
jb
cmpl
inc
clc
cmpsb
aas
cmp
icebp
sub
add
sti
lds
fs
testl
es
mov
sub
push
repnz
ret
sub
mov
lret
jnp
in
pushf
jmp
sbb
sbb
cli
lcall
test
hlt
add
mov
mov
dec
es
out
xor
lods
out
dec
sahf
sbb
cmp
jo
mov
lret
outsl
enter
enter
inc
push
push
add
mov
int3
lret
push
push
insl
mov
lods
inc
stc
outsl
mov
int
mov
sahf
cmc
out
push
pusha
iret
inc
test
mov
adc
jmp
xlat
loope
rorb
cmp
sti
lret
push
mov
dec
data16
frstor
inc
in
pop
lret
stc
je
test
shlb
mov
loope
inc
lret
dec
mov
jmp
cmp
mov
adc
or
cmp
xchg
stc
push
iret
ficomps
xor
cmp
ss
pop
aad
or
mov
arpl
add
in
sahf
mov
inc
and
fistps
jo
or
addb
push
xchg
adc
push
jnp
xor
repnz
push
push
loop
jbe
jbe
mov
scas
jns
lahf
loopne
test
in
into
leave
outsb
lods
jo
jge
les
push
rcrl
adc
xor
je
fs
adc
xchg
sbb
mov
ljmp
js
cmpsb
imul
in
in
push
push
mov
adc
mov
rcl
mov
and
dec
pop
push
pusha
decb
divb
lret
push
stos
int
push
out
mov
outsb
jp
mov
lcall
cwtl
stos
mov
xor
sub
insl
test
dec
std
repz
dec
mov
lahf
xchg
in
idiv
lods
lahf
incb
jb
or
or
mov
cmp
ss
push
push
xchg
pop
lcall
mov
mov
imul
into
or
jp
sub
mov
mov
xchg
or
push
inc
xchg
dec
test
daa
sbb
cwtl
scas
mov
inc
negb
cmp
and
iret
movl
cmp
or
sub
add
inc
pxor
pop
movsb
shll
ret
mov
daa
add
push
adc
negb
jg
and
adc
dec
out
cmc
sbb
cmpsb
mov
cmpsb
mov
pop
jle
sbb
add
nop
and
or
fsubrs
xlat
or
loope
inc
pop
je
add
xorl
ss
xlat
push
cmp
fisttps
pop
sbb
mov
test
loopne
pop
or
enter
mov
stos
or
cmpsb
inc
dec
pop
and
daa
arpl
jmp
dec
roll
mov
jge
mov
jl
cmp
sub
dec
jecxz
je
adc
clc
ljmp
daa
mov
cmp
inc
jb
sub
inc
cwtl
dec
movsb
ja
scas
mov
pop
mov
add
fdivrl
and
pop
js
jo
enter
adc
xchg
loopne
mov
adc
mov
repz
and
test
hlt
std
out
xchg
cltd
sbb
mov
hlt
lock
mov
aad
ss
jge
pop
lea
into
dec
insl
adc
sahf
imul
mov
insb
pop
inc
sub
mov
add
in
call
adc
adc
sbb
outsl
sbbl
mov
sarb
inc
xor
inc
pop
pop
push
cltd
das
popf
jo
shr
mov
js
mov
inc
clc
pop
test
sbb
outsb
push
push
stos
rorl
adc
add
or
cmp
cltd
in
dec
in
insb
clc
xchg
jmp
push
gs
out
ret
fiadds
cmp
das
jmp
loopne
fimull
lods
mov
or
inc
xlat
sub
xor
xchg
sbbl
push
jns
out
sub
inc
sbb
addr16
int
enter
or
lock
repz
pop
xchg
mov
inc
enter
adc
loopne
mov
cli
insl
cld
fcmovnb
ret
jmp
cwtl
scas
cmpsl
adc
imul
push
jle
lock
fidivrl
stc
iret
inc
pop
pusha
sbb
sbb
push
xor
inc
lret
bound
rcrb
ljmp
jl
jbe
dec
mov
gs
pop
ljmp
push
dec
pop
nop
out
pop
dec
jnp
push
push
outsl
jbe
dec
xor
push
add
xchg
bound
pop
out
aam
fimuls
out
rcrl
mov
daa
dec
mov
and
stos
adc
push
push
mov
paddsw
and
cld
movb
imul
sti
pusha
aaa
xlat
outsb
test
or
sbb
and
fidivs
jg
sub
xorl
cmp
sbb
pop
add
xchg
and
inc
sahf
jne
icebp
sbb
pop
ret
jmp
lea
cmpsb
in
and
dec
xor
mov
shlb
mov
inc
mov
mov
nop
sbb
or
ret
lret
mov
sahf
mov
idivl
icebp
mov
push
cmp
stc
popf
inc
add
hlt
cmp
cmpsl
push
scas
xchg
mov
xchg
pop
out
or
jo
inc
lea
and
in
fisubl
sbb
jno
aaa
imul
pop
push
call
pop
aad
push
mov
adcb
insb
inc
dec
sbb
or
ds
scas
xor
pop
xor
imul
aad
js
mov
rorl
arpl
shll
mov
inc
fwait
jl
int
ss
mov
shl
cmp
add
add
scas
add
mov
ret
je
push
mov
orb
cld
scas
mov
xchg
inc
push
cs
cs
push
mov
xorb
fiadds
mov
lods
mov
adc
dec
data16
dec
fildll
inc
push
leave
cmp
data16
pop
push
ret
gs
and
inc
loop
cltd
pushf
cmpsl
popa
mov
xor
mov
push
and
fadds
pop
icebp
jp
nop
aaa
das
sub
cld
sahf
sahf
sbb
adc
jle
pusha
and
mov
inc
out
icebp
sti
sarb
ss
cmpsb
sbb
imul
nop
cmp
and
push
nop
shll
fdivs
frstor
lds
pop
add
inc
repnz
out
sbb
cs
xlat
sahf
xor
push
sbb
aam
hlt
inc
shlb
call
dec
sbb
sub
stos
push
pop
jecxz
sub
out
cmc
push
xor
insb
xchg
sub
imul
call
ret
xor
xor
adc
add
pushf
mov
mov
jge
add
lcall
pop
or
lods
xor
lock
fistpll
ror
mov
out
mov
xchg
sub
and
sbb
les
in
test
das
mov
addr16
mov
mov
and
mov
stos
in
xor
popa
std
inc
stos
hlt
fs
mov
in
dec
push
iret
stc
or
push
cwtl
mov
rolb
push
push
out
mov
adc
cmp
pop
or
fiaddl
pop
mov
xchg
test
inc
fcmovnbe
lret
shrl
mov
test
in
adc
mov
dec
je
popf
add
ss
cmp
push
pop
mov
ret
cld
or
dec
add
jmp
jae
mov
and
sbb
test
push
jo
and
lret
insl
gs
push
push
mov
mov
mov
and
dec
rolb
sbb
ds
aaa
jae
mov
lahf
leave
int
std
ret
stc
sbb
pusha
push
adc
jp
sub
mov
or
push
add
inc
lea
sbb
aas
or
xor
pop
inc
cmp
lock
outsb
jecxz
ret
sub
repz
cmp
imul
imul
repz
mov
in
jns
test
jp
out
decl
cwtl
call
mov
jae
sbb
imul
in
mov
xchg
scas
push
outsb
sbb
jmp
dec
mov
inc
retw
ljmp
shlb
mov
je
dec
ds
int
dec
jbe
jbe
aaa
mov
pop
push
outsb
es
pop
or
sbb
popf
lods
lret
mov
mov
decl
out
and
jl
pop
rol
rcrl
pop
test
loope
and
jmp
stos
fcom
fsubr
pop
push
mov
jl
enter
sti
leave
add
gs
add
stos
xchg
insl
and
pop
in
mov
push
lock
and
sbb
aaa
jecxz
shll
std
les
mov
mov
insl
cmc
xchg
inc
mov
stc
mov
adc
fs
dec
cmp
adc
ror
push
test
jne
fnstsw
stc
aas
push
insl
repnz
mov
stc
adc
addr16
adc
es
sbb
mov
outsl
jnp
xor
adc
or
xchg
sete
orb
mov
push
cmc
jmp
and
mov
scas
aad
stos
pop
sahf
fisttpl
es
xchg
icebp
mov
adc
push
fcmovnu
jae
fistpl
push
cmp
dec
int
cld
xor
cmp
push
es
arpl
addl
or
push
push
jne
sub
mov
add
mov
in
outsl
jecxz
push
fildll
mov
mov
fists
cmpsb
shlb
iret
or
jne
mov
stos
xchg
dec
xor
out
data16
std
sub
ja
rcrb
add
out
lock
fcmovnu
cmc
aaa
shl
jecxz
dec
inc
dec
pop
dec
jp
pop
aad
loope
outsb
add
mov
ja
sub
gs
insl
inc
stc
xor
pop
sbb
fdivs
lcall
and
popf
pop
lea
jle
and
mov
imul
adc
mov
in
test
sub
xlat
xor
adcb
dec
mov
pop
adc
inc
das
mov
xor
adc
cwtl
das
inc
sbb
dec
add
imul
push
inc
inc
fwait
add
fcompl
fisubrl
sbb
mov
inc
jb
add
push
inc
mov
repz
addl
push
hlt
pop
les
outsb
cmp
repnz
jae
addb
jmp
mov
jge
les
iret
xor
int
aam
scas
ret
mov
sbb
sub
cmp
insl
mov
adc
lret
cmp
stos
sub
mov
jae
insl
lock
dec
jge
mov
inc
in
xchg
imull
shll
mov
jp
shrl
popf
shr
mov
push
pushw
out
scas
cs
sub
in
xchg
jle
fldl2t
cmc
jg
dec
add
cmc
ds
sub
jecxz
mov
inc
gs
push
fwait
cmpsl
andb
push
sub
add
mov
aas
sub
jne
mov
add
shll
out
movsb
in
xlat
ret
or
mov
cmp
out
out
lods
inc
shlb
sbb
sub
mov
ljmp
popa
dec
or
lock
stos
xchg
jmp
mov
aaa
mov
inc
ljmp
sahf
push
mov
cld
ds
aas
sti
ljmp
ja
and
sbb
in
clc
xchg
or
mov
cmp
loop
mov
mov
push
mov
out
jle,pt
mov
ficompl
mov
js
popa
mov
in
sbb
mov
inc
adc
out
stc
pop
nop
into
cmp
jbe
loop
cs
xchg
lods
ljmp
bound
inc
cli
adc
inc
ret
dec
cwtl
hlt
dec
leave
xor
and
adc
rcrb
mov
cs
adc
leave
popa
clc
cli
jbe
leave
insb
cwtl
call
test
std
mov
in
and
mov
inc
xor
xor
or
sub
insb
outsl
rcrb
mov
sbb
ja
out
lret
add
lods
inc
gs
sub
sub
imul
movsl
xor
push
iret
popa
or
dec
in
dec
cmp
cmp
xor
bound
andl
xchg
es
cs
dec
mov
mov
mov
rcrl
rcrl
mov
inc
fisubl
nop
out
nop
aam
inc
fwait
or
and
divb
sub
xchg
dec
hlt
out
aam
xchg
imul
lock
stos
imul
pop
xor
aad
add
cmp
pop
out
sbb
push
mov
lea
insb
mov
cmpsl
jecxz
leave
push
and
push
inc
dec
add
xchg
and
movsb
mov
add
inc
mov
ret
insl
pop
add
mov
inc
mov
adc
dec
pop
pop
dec
mov
xchg
popf
cmpsl
xor
fdivrl
stos
int3
daa
shrb
mov
daa
jbe
aad
dec
shlb
jnp
mov
test
scas
daa
mov
xor
mov
cmp
stos
hlt
pop
jl
mov
pop
or
pop
sbb
cmp
fwait
hlt
jae
arpl
arpl
stos
push
or
cwtl
out
rol
jg
in
icebp
lret
repnz
pop
dec
and
mov
stos
sub
mov
cwtl
sub
es
stc
adc
mov
sub
testl
je
out
pop
add
movsb
in
popa
ss
insl
push
cmp
xor
cmp
shlb
out
sub
imul
pop
sahf
enter
in
out
out
xor
mulps
jecxz
nop
pop
lret
and
add
daa
add
xorl
xchg
outsl
sub
mov
adc
cmp
aas
cltd
inc
jl
inc
fadd
push
xor
rep
insb
popf
lods
push
xor
xchg
or
pop
int3
lcall
mov
cmpsl
out
imul
xlat
std
movsb
xorl
rorb
jns
and
xchg
sub
fmuls
or
sub
inc
test
cmp
xchg
add
scas
inc
iret
cmp
int
popf
stc
shll
mov
loope
xchg
dec
mov
loopne
adc
or
scas
imul
jmp
push
aaa
mov
sub
cmp
mov
pusha
inc
popf
sbb
shll
xor
mov
cmp
cmp
popf
lds
inc
sbb
mov
test
mov
or
sub
jp
cli
repnz
into
loopne
sbbb
inc
pop
sub
adc
dec
pop
pop
imul
leave
pop
lea
movsl
fisubrs
add
mov
push
imul
out
sahf
xor
jle
mov
xlat
xchg
into
sbb
add
mov
push
stos
cmpsb
arpl
clc
ljmp
dec
mov
insb
push
jp
adc
push
notb
or
ljmp
gs
xchg
xchg
cmp
call
sbb
stc
or
je
scas
mov
xlat
push
xorb
dec
scas
scas
mov
fcomi
sbbb
loopne
cmp
outsb
cmpb
loop
ret
fwait
int
adc
xor
push
mov
mov
cmp
push
sub
lods
xchg
pop
in
insb
hlt
sub
sarl
xchg
dec
imul
imul
call
nop
mov
rolb
xchg
nopl
ret
imul
pop
push
or
jb
inc
scas
in
xchg
mov
inc
cmp
in
xor
test
ror
fsqrt
mov
aaa
into
nop
mov
aam
sub
cmpsb
movsl
subl
sbb
pop
addr16
sub
int
outsb
sti
push
mov
js
or
mov
pop
xchg
or
cmp
in
fbstp
dec
xchg
push
fdivrl
fldenv
in
or
mov
lock
out
sbb
pop
rcrl
jmp
pop
shl
mov
imul
sub
mov
fs
push
int
fisubrs
push
and
push
add
xchg
sbb
gs
fdivrl
jecxz
loop
add
mov
cmp
mov
xchg
jnp
out
cmpsl
pop
xor
stc
xchg
jle
cmp
dec
in
shrb
stos
jne
mov
jne
cmpsl
cmpsb
out
mov
jmp
xor
aam
mov
adc
aad
sub
aas
mov
dec
icebp
mov
ret
or
repz
pop
lods
push
or
push
jbe
pusha
cmp
xchg
out
outsl
adc
mov
mov
inc
pop
adc
sbb
adc
outsb
jns
fiadds
jb
mov
sahf
in
lcall
std
mov
ret
insl
fcomps
adc
mov
lock
push
andb
enter
sahf
xor
dec
sbb
mov
push
pop
xlat
or
sbb
inc
clc
fwait
xor
jg
rolb
repnz
push
lock
cmp
je
xchg
xchg
insl
mov
call
aam
xor
lds
popf
stc
ret
loopne
jmp
dec
xor
xor
mov
mov
test
insl
xor
jmp
xor
jmp
int
pop
mov
lea
cmp
sbb
jnp
aaa
dec
mov
cmp
leave
lods
cmp
sti
inc
ret
insb
xor
data16
inc
daa
xor
dec
sub
cmp
cmovle
ja
sub
cwtl
das
jns
je
adc
lcall
icebp
mov
aas
imul
lods
dec
xchg
inc
dec
int
mov
nop
cld
xchg
lods
in
dec
or
stos
inc
mov
jo
test
and
std
jo
rcrb
cmpsb
jmp
out
pop
inc
mov
mov
jne
cmpsb
lcall
and
push
xor
rcrl
adc
aaa
clc
sub
push
pop
popf
divl
testb
in
enter
popa
push
jbe
push
ret
pop
sub
out
rcrl
in
movsl
in
push
popa
mov
sub
sbb
mov
in
aaa
out
add
ja
sub
dec
shll
js
insl
mov
in
mov
adc
mov
ficoml
lcall
adc
xchg
cltd
xor
scas
inc
lea
incb
addr16
outsb
push
out
cmp
cld
ja
cmp
lods
push
inc
inc
sbb
sahf
jp
aaa
dec
in
push
fwait
lock
add
jg
xor
insb
daa
js
jae
jnp
adc
mov
lock
jno
cmp
shl
jno
mov
nop
testb
cs
adc
xchg
int
and
xor
lea
lea
sub
lret
xor
push
push
pop
jl
fucom
or
mov
sbb
and
fldz
xchg
jbe
loopne
sbb
mov
mov
loope
enter
lret
fchs
jmp
stc
mov
or
jle
push
cmp
loope
movsb
insl
idiv
jnp
insl
out
popf
sbb
lods
aad
dec
loope
jb
push
xchg
jbe
ror
inc
rcl
dec
mov
jge
and
inc
push
mov
push
xor
test
test
arpl
mov
pop
clc
cmp
pusha
mov
js
jecxz
cmp
dec
pop
and
fimuls
into
lods
mov
mov
push
add
mov
lcall
out
mov
mov
xor
sub
les
frstor
nop
inc
es
sbb
adc
pusha
ljmp
add
dec
cmpsl
mov
add
push
fdivrs
inc
mov
test
outsl
push
push
fst
in
push
jle
mov
inc
xchg
imul
add
adc
adc
mov
push
loope
ss
push
sbb
movsb
clc
inc
lea
and
sub
xchg
add
scas
jno
or
xchg
dec
cmp
mov
pop
pop
hlt
push
lods
add
inc
test
aad
xor
in
lret
lahf
jae
or
in
sbbl
aas
adc
cmpsb
mov
xor
lods
enter
pop
mov
add
insl
in
stos
fists
push
mov
sti
jp
hlt
mov
add
or
mov
data16
mov
testb
icebp
push
or
int3
pop
insl
loopne
xor
daa
jl
mov
mov
movsb
notl
fsubp
hlt
mov
idivb
fldenv
stos
stos
fldl
push
cld
push
jnp
jmp
movsb
cmp
test
mov
je
add
out
xchg
fcmovnb
fisttps
xchg
mov
push
dec
and
and
pop
loop
jo
bound
jns
cmp
add
outsl
xchg
mov
imull
int3
aaa
stos
mov
lods
inc
mov
xchg
push
mov
les
xchg
and
jns
jp
adc
je
mov
mov
mov
outsl
mov
sahf
and
sbb
hlt
mov
or
outsb
push
adc
xchg
lods
jle
pusha
mov
icebp
orb
daa
outsl
push
lahf
push
fnstsw
fs
push
jecxz
mov
xchg
add
aas
pushf
push
ds
test
fldl2t
js
and
xor
lea
fiaddl
or
mov
sub
pusha
pop
sub
mov
lea
ficoml
ss
xchg
cld
les
call
or
enter
jae
mov
fs
cmp
xor
add
sbb
lahf
mov
out
sub
dec
mov
gs
mov
and
push
cmp
or
jae
xor
cmp
iret
out
or
mov
dec
shrb
pushl
data16
pop
cld
out
and
fidivrl
fldl2t
jo
add
cltd
xor
jae
or
flds
or
cmp
lret
aam
mov
test
test
mov
adc
push
pop
or
mov
bound
and
es
xchg
adc
sti
test
arpl
push
fistpl
push
mov
adc
jno
mov
adc
std
pop
movsb
mov
xchg
shll
ficoms
js
adc
cmp
mov
fsts
and
nop
sbb
in
push
mov
ffree
insl
push
mov
bound
bound
stos
pop
sbb
inc
cmp
lret
cli
je
mov
inc
movzbl
mov
sbb
ss
push
and
inc
hlt
addb
push
idivb
xor
mov
mov
iret
fistpl
xchg
ljmp
push
sbbl
and
scas
dec
das
push
mov
inc
pop
andl
lods
mull
sbb
daa
imul
mov
pop
mov
pusha
inc
cld
scas
loop
mov
cmpsb
mov
add
aaa
into
pop
mov
push
xchg
add
adc
aam
push
pop
movsb
jno
ja
fnstsw
js
lahf
mov
js
cmp
inc
clc
ja
std
cltd
cltd
mov
adc
jno
jmp
stos
mov
push
addl
into
insl
sub
out
cmp
xor
pop
mov
push
fimull
jne
mov
pop
lock
adc
loop
xchg
les
or
adc
push
or
repnz
rcrb
xchg
repz
mov
mov
and
xchg
mov
sbb
in
jl
mov
testl
js
cltd
cmc
in
push
out
push
aas
aad
xchg
lahf
lods
leave
sbb
ds
or
cwtl
mov
or
and
inc
mov
incl
ret
hlt
sbb
sub
mov
std
insb
into
and
mov
push
cmp
ss
lcall
pop
je
rol
bnd
ds
mov
or
fisubs
stos
add
cmp
repz
mov
shrb
add
rcll
out
sahf
add
ss
movsb
hlt
pop
repnz
out
jmp
or
push
out
mov
pop
hlt
push
adc
push
sbb
xchg
and
js
or
scas
jg
cmp
push
jecxz
push
stos
and
movsl
cmp
pop
adc
ficoms
fimuls
mov
les
xchg
addr16
gs
cmp
call
sti
mov
rolb
rolb
sarb
fcompl
pop
movl
push
sti
or
ret
sbb
mov
pop
outsl
mov
jne
fs
and
inc
aam
mov
test
notl
scas
cmc
adc
pop
xor
jmp
push
jmp
sbb
sub
loop
pop
stos
cmp
cmp
addr16
xchg
mov
lcall
in
rcll
mov
or
dec
push
or
ljmp
xor
dec
insb
jle
std
lret
call
and
mov
inc
jle
stos
inc
adc
push
mov
pop
shrl
mov
push
jno
into
dec
ja
cmpsb
test
dec
mov
xchg
ficoms
sub
sbb
in
ds
and
sbbb
ds
mov
add
out
add
inc
mov
je
and
adc
pop
mov
fbstp
mov
fs
gs
cmpsb
test
test
mov
push
pushf
fistps
push
test
adcb
mov
cmc
pop
fdivrs
scas
inc
or
insl
test
hlt
pop
mov
mov
cltd
cmp
cld
aas
in
and
lods
inc
idiv
je
addl
ds
xchg
add
outsb
scas
ss
jmp
and
jb
push
dec
pop
mov
xor
jns
push
lock
and
inc
fsubl
pop
int3
sti
jbe
repnz
outsl
inc
dec
sub
push
roll
inc
mov
stc
in
mov
in
nop
addb
pop
jno
cmp
mov
push
xor
sahf
cmpsb
xor
jp
leave
adc
fbstp
push
mov
jge
jp
mov
cmpsl
dec
pusha
sub
xor
adc
imul
popa
jle
shrb
lahf
call
pop
cmp
sahf
loopne
mov
sbb
addb
shlb
in
js
rcrl
pop
ret
xor
add
cmpsl
adcl
push
inc
and
push
data16
out
cmovs
cmp
daa
inc
sbb
push
loopne
ret
cmpsl
mov
in
ror
ss
add
push
call
lods
pop
xchg
push
stos
sahf
push
scas
inc
mov
push
mov
out
mov
jae
fs
les
aam
jbe
popf
ficoml
add
arpl
mov
stos
cmpsb
cmp
repz
pop
jae
mov
add
push
test
inc
scas
pop
out
out
cmp
jne
repz
jmp
fisubs
lea
mov
test
push
shlb
imul
cli
out
xchg
scas
dec
xchg
jnp
sbb
scas
and
ljmp
mov
cmp
push
xchg
cwtl
loopne
lods
jno
sub
mov
pop
cmc
stc
stos
nop
xchg
jl
fwait
nop
ffree
sub
sbb
dec
in
mov
mov
pop
ffreep
xchg
mov
loop
mov
fisttps
xchg
js
sub
inc
lods
test
shrb
sbb
and
insl
push
jmp
jle
bound
fs
repz
scas
inc
pop
push
inc
sbb
or
jp
add
imul
jge
call
mov
add
iret
scas
fwait
xor
gs
inc
sbb
mov
mov
aam
sub
ret
mov
or
call
xchg
test
pop
lcall
cmp
push
inc
je
popa
aaa
sub
mov
xor
or
jo
aas
mov
in
add
xchg
inc
mov
fwait
mov
lret
cmp
in
sbbb
sub
xor
cld
mov
sub
xor
xor
test
fnsave
cmpsl
adc
add
cmc
inc
data16
ljmp
xor
imul
jge
dec
pop
push
mov
ficoml
adc
jl
fwait
std
inc
sbb
add
push
lods
pop
xchg
xchg
add
xor
cltd
mov
ret
add
out
and
lods
xor
push
and
cs
add
repz
sbb
imul
or
leave
adc
jo
je
stc
popa
ja
sysenter
sbb
mov
sbb
aad
sub
dec
ljmp
sahf
fidivl
inc
jmp
sbb
xchg
js
xor
adc
mov
movsl
adc
or
or
sarb
jbe
jns
loope
lcall
pop
nop
repz
dec
lock
fists
rcl
jmp
test
lret
into
int
mov
fwait
data16
hlt
icebp
dec
sbb
roll
mov
loope
daa
pop
mov
popf
gs
sbb
sbb
cmp
sub
fwait
sub
xchg
stos
mov
xchg
mov
rcll
or
icebp
mov
dec
jo
test
or
gs
jmp
cli
shlb
outsl
imul
movsb
pop
ja
push
lret
shlb
pop
jl
add
jle
in
outsl
mov
imul
jmp
and
inc
cmp
sarl
push
mov
mov
dec
mov
out
data16
loopne
pop
popf
mov
jle
lret
das
cmpsl
push
push
inc
mov
mov
lock
mov
dec
add
cmp
and
out
sbb
and
mov
jb
push
mov
mov
stc
adc
stos
jb
add
push
add
and
dec
sub
cwtl
pop
push
popf
or
pushf
addb
mov
sub
xor
lahf
std
cltd
rcr
data16
jl
ljmp
sbb
daa
out
push
push
mov
out
cmpsl
sbb
pop
mov
inc
scas
sbb
inc
mov
mov
xor
rcr
out
mov
int3
js
and
jno
jne
cld
pusha
push
add
cwtl
out
push
sub
int
jg
ljmp
mov
aas
ljmp
or
cmp
pusha
jp
aas
jmp
pop
sbb
inc
jp
lcall
enter
daa
sahf
and
cmc
sub
scas
mov
lds
cmp
or
cmpsl
fidivs
in
es
adc
pop
mov
fisubrs
mov
popa
push
mov
dec
clc
dec
fsubrl
not
ret
jle
xchg
popf
jmp
pop
fidivrs
mov
mov
sub
insl
jecxz
sub
leave
je
incl
faddp
cs
xlat
or
mov
xor
add
test
sbb
fidivrs
fisubs
sub
cmpb
ret
pop
imul
cli
mov
aaa
push
xchg
add
xchg
cli
jne
ficompl
inc
stos
enter
stos
push
sahf
shll
or
cltd
fldenv
sbb
xor
ljmp
stc
fsubr
and
sbb
in
xchg
jns
add
mov
xlat
jns
fdiv
aaa
inc
adc
clc
push
daa
outsl
dec
scas
lcall
popf
sbb
push
rcrb
push
or
movsl
jecxz
repnz
mov
stos
xchg
sahf
aaa
or
loope
jmp
popa
fs
les
mov
jmp
add
cld
sub
andl
aas
enter
sbb
std
jo
add
andb
or
into
fcoml
daa
jecxz
mulb
cltd
je
pop
adc
cmp
lods
movsl
js
adc
jecxz
mov
mov
das
cmp
dec
scas
sarl
pop
or
movsl
icebp
int
xor
sub
stos
sub
lods
lret
fsubrs
and
cmp
pop
insb
push
bound
sub
jo
adc
sbb
jnp
inc
sub
xlat
xchg
jo
or
loope
addb
je
push
xor
movsl
xorb
imul
push
pop
pop
mov
mov
push
hlt
add
stos
push
push
insb
or
in
or
ret
daa
mov
adc
icebp
inc
or
mov
mov
pop
jmp
rcl
clc
mov
jmp
faddp
imul
pop
leave
pop
int3
cmpsl
ljmp
cmp
arpl
jl
or
cmp
into
mov
in
xor
out
scas
xor
xor
xchg
mov
dec
adc
or
cmp
scas
and
mov
out
pop
imul
pusha
xlat
jne
push
push
adc
jecxz
push
xor
lea
mov
push
call
in
movsl
cmp
push
ds
and
lods
mov
pop
cmpsb
xchg
mov
mov
mov
les
insb
aaa
push
js
or
mov
xchg
js
into
inc
jecxz
inc
out
test
and
fidivs
cmp
add
xlat
xor
jo
mov
mov
lock
cmc
stos
mov
xchg
inc
add
cmc
add
jae
shll
pop
mov
out
inc
call
out
xchg
push
loop
inc
inc
fists
inc
push
or
into
jle
add
stos
cltd
dec
sub
aam
push
outsb
dec
insb
push
jp
mov
cmp
or
stc
ja
dec
xchg
cmc
sbb
mov
mov
iret
mov
mov
aas
inc
sub
pop
xchg
dec
lods
jmp
jmp
mov
mov
insl
push
fimuls
stos
add
das
insl
in
mov
xor
push
stc
scas
fildll
mov
inc
rorl
out
xor
pop
clc
dec
mov
nop
int
enter
sti
or
out
test
pop
sbb
adc
push
or
sub
insl
movsb
arpl
insl
clc
cmp
mov
mov
mov
jns
fldenv
das
push
jb
adc
test
sar
inc
mov
ds
mov
in
pop
insl
test
jns
insb
push
bound
sti
or
in
enter
repnz
mov
dec
aam
mov
jbe
xchg
pop
add
insl
sbb
inc
xchg
sub
and
mov
lea
push
stos
inc
popf
ljmp
mov
pop
and
fucomip
adcb
jp
mov
aaa
stos
mov
insl
mov
push
adc
sbb
ds
push
lcall
nop
adc
or
sbb
outsl
shl
jns
stos
jecxz
cmp
ljmp
out
push
test
sbb
push
mov
or
jle
sbbb
sahf
xor
roll
ret
xchg
add
dec
and
xchg
test
aad
dec
frstor
mov
negl
add
jae
dec
mov
mov
arpl
xorl
mov
push
add
andb
das
shlb
sbb
rolb
xchg
out
and
gs
jmp
mov
call
mov
inc
fisubs
xor
sbb
fsubr
lds
orl
cld
popf
mov
xchg
jno,pn
fucomip
jl
xor
int3
decb
mov
loope
repz
pop
lods
out
xor
cmp
or
fisubl
or
xchg
pop
scas
ss
out
mov
mov
push
test
aas
ficoml
add
loopne
and
inc
inc
fs
adcl
fldl
mov
add
sahf
in
pop
mov
insl
ds
mov
push
nop
std
jecxz
fstl
lods
fsub
shlb
and
or
fldt
bound
jae
push
add
ljmp
xchg
push
ror
xorl
fdivrs
outsb
enterw
into
xor
stos
fcompp
in
orl
push
fisubs
sti
push
pop
ficoms
sbb
test
sahf
adc
sbb
xor
ffree
test
test
in
ret
fmull
and
dec
xchg
lods
fcmovne
pop
mov
inc
sbb
dec
or
push
push
fsubrl
dec
mov
fdivs
xchg
popa
mov
aad
sub
mov
xor
and
cmc
flds
pushf
mov
aas
aad
aaa
cmpsl
jb
sub
frstor
push
ljmp
sub
cli
and
test
test
aas
mov
sahf
cmp
and
addl
int3
inc
and
xor
add
jne
test
mov
mov
cmp
jge
and
out
leave
clc
fdivrs
mov
sub
inc
stos
stos
jnp
into
adc
cmpsl
aad
sbb
sbb
xchg
icebp
cmp
into
cmp
inc
loopne
test
lods
mov
in
or
outsb
stos
shll
cli
bound
mov
popf
addr16
jl
xchg
xchg
inc
stos
fisubs
push
orb
arpl
fxch
cmp
dec
sarb
mov
pop
mov
jnp
loopne
mov
scas
mov
push
into
and
addl
mov
ljmp
nop
fadd
dec
push
in
bound
hlt
addr16
mov
pop
mov
xchg
fcom
push
jmp
sbb
and
or
orb
add
jbe
pop
aaa
dec
sbb
adc
out
js
stc
in
div
icebp
movsl
psllq
jns
dec
js
divl
mov
dec
cwtl
pop
adc
pop
or
pop
push
sbb
push
lret
enter
jnp
dec
fcmovnu
subb
pushf
or
das
mov
pop
stos
pop
pop
aaa
into
pushf
sub
outsb
cmp
lret
xchg
jg
mov
pop
jecxz
aas
nop
or
adc
popa
test
stos
sub
je
insl
xor
rorl
mov
adc
aas
jae
mov
rep
add
lods
jno
test
push
test
dec
add
test
rol
fwait
test
cmp
mov
fs
xchg
sahf
xor
pop
bound
pop
orps
mov
push
push
cmpsb
out
sbb
test
and
daa
mov
hlt
adc
mov
addr16
aam
inc
lcall
cmp
mov
add
inc
ss
cmp
jmp
aas
mov
rcl
std
shrb
mov
movsb
mov
mov
call
pop
loop
lods
jb
mov
out
lods
xor
repnz
repnz
sbb
sub
in
pop
cmp
dec
dec
inc
mov
dec
cmpsl
ja
in
push
in
in
xor
and
pop
jmp
mov
arpl
mov
push
jo
xor
jae,pn
and
push
pop
push
cltd
pop
lret
test
or
and
push
cmp
call
pop
iret
sahf
or
cmp
arpl
lcall
jbe
clc
sbb
push
ret
pop
outsl
leave
call
outsl
imul
aad
nop
push
fadd
sbb
pop
mov
insb
shl
cmpl
fstps
test
int
xchg
out
add
cli
push
test
out
fnstsw
pop
adc
divb
aad
je
jg
out
push
mov
jge
mov
mov
and
mov
fiaddl
and
dec
jo
cmp
jno
sarb
and
aad
orl
popf
adc
jae
jb
push
inc
cld
mov
inc
jecxz
das
movsb
inc
cmp
push
dec
pushf
add
test
ret
pop
ja
dec
repnz
stos
jmp
mov
jb
iret
aad
cli
push
icebp
mov
pop
fs
dec
push
and
roll
or
mov
or
sub
jae
cmp
or
hlt
xor
inc
cltd
lea
cmp
mov
or
push
addr16
and
xchg
orl
stc
test
test
enter
cmp
in
sti
xchg
dec
lcall
push
aas
cmpsb
in
and
mov
aad
outsb
jmp
daa
popl
or
loopne
addb
jmp
clc
mov
dec
and
divl
pusha
xchg
or
adc
push
mov
stos
jmp
adc
mov
out
push
sahf
pop
jecxz
or
std
xchg
push
scas
jnp
sub
push
movb
dec
mov
test
mov
push
pusha
testl
or
mov
imulb
daa
add
push
pushf
insb
lods
dec
pop
sarb
xchg
add
cmp
cmp
rcrl
iret
mov
insb
into
dec
mov
push
int
in
cmp
mov
jmp
add
addb
mov
sti
pop
cmp
mov
mov
cmp
jae
adc
sbb
xor
or
jne
rcl
xchg
movsb
jecxz
push
inc
pushf
lret
push
jb
movsb
mov
lea
ret
out
gs
sbb
mov
sbbl
mov
cmp
mov
lock
aaa
or
popf
sub
loopne
xchg
iret
inc
add
jae
mov
push
cmp
lods
dec
rolb
sub
shlb
lods
sub
rolb
int3
lret
jo
stc
jbe
call
out
push
lods
and
mov
test
ja
cld
push
add
hlt
sub
adc
add
push
push
inc
dec
add
sub
pop
pushf
sub
les
addr16
push
fildll
fnstsw
cmp
ds
ret
and
sub
adc
jnp
das
mov
mov
add
and
stos
nop
daa
fdivrl
les
addr16
push
adc
mov
pop
cmpsl
ret
cmp
leave
lea
cmc
or
dec
leave
jle
or
fs
je
push
push
xchg
xor
pop
add
cmp
xchg
xlat
outsb
jecxz
out
jp
jns
arpl
repnz
push
mov
push
xchg
mov
sbb
xorl
test
out
inc
or
leave
out
lods
or
popl
in
into
xor
adc
or
push
jne
hlt
int
sbb
mov
cmpsb
into
pop
mov
in
adcb
icebp
lahf
cmp
mov
nop
and
add
cmpsb
xchg
inc
dec
sbb
inc
sbb
sub
sub
popa
push
lock
xchg
shl
lods
mov
int
jns
dec
or
mov
mov
fmulp
mov
rclb
jae
pop
in
cmp
xor
sub
mov
mov
jmp
pop
fiaddl
push
mov
ja
xor
es
jbe
fnsave
xor
jae
adc
mov
sub
and
cmp
fildl
testb
shr
fldcw
dec
inc
mov
gs
dec
add
add
xchg
mov
popf
mov
xor
call
stc
out
fsubs
and
cli
jne
std
mov
sub
stos
hlt
mov
fwait
iret
lods
inc
jns
insb
cmp
lcall
int
call
mov
add
ljmp
add
mov
leave
pop
add
mov
jbe
imull
adc
cwtl
cmpsb
mov
arpl
std
adc
push
inc
bound
push
out
imul
jbe
das
mov
ss
add
arpl
mov
lods
push
cmp
aaa
cmp
adc
fwait
push
jg
test
aas
push
out
ljmp
sub
push
in
jp
psubd
andb
mov
push
cs
xchg
xor
fiaddl
jecxz
push
fisubrl
and
inc
cmp
cmpsl
jg
adc
mov
jns
add
inc
cwtl
jae
mov
popa
jmp
mov
cmp
and
int
cmpsl
xchg
mov
jp
test
popf
cld
push
dec
cmp
cmp
loop
sub
inc
jmp
insl
pop
sbb
div
adc
mov
scas
xor
jo
jae
xorl
pop
fnsave
jmp
inc
lods
pusha
fcomi
jb
inc
lods
mov
in
ja
adc
lret
ss
and
add
xchg
lea
inc
fdiv
popf
shll
aas
xchg
stos
jg
mov
pop
mov
loop
cmp
or
shrl
divl
outsl
mov
repz
loop
ret
popl
sub
mov
xchg
cmpb
mov
mov
xor
cmp
mov
lret
xchg
sub
aad
inc
push
shl
cli
mov
pop
inc
pop
dec
roll
or
pop
push
inc
stos
mov
push
cmpsl
mov
add
add
test
cld
lret
ss
sub
or
cmp
mov
out
mov
popa
hlt
push
xchg
mov
push
xorps
js
jle
pop
into
loop
ret
xor
js
pop
or
repz
or
sub
xchg
pop
jmp
pop
mov
push
addr16
jne
jae
sub
push
cltd
addr16
leave
xor
stc
xchg
inc
movl
dec
adc
int3
int
mov
pusha
xchg
sbb
mov
or
nop
push
out
inc
in
xchg
stc
and
mull
shrd
stos
and
bound
repnz
and
xchg
xchg
scas
notl
add
repz
sbb
jg
or
sbb
cmp
jecxz
xchg
leave
dec
loope
mov
mov
test
ds
bound
fwait
lret
mov
bound
sub
xlat
jo
lea
add
das
je
jg
lds
arpl
jge
cwtl
data16
mov
add
test
push
in
mov
xchg
iret
data16
outsl
and
sub
imul
dec
loop
push
imul
xor
andb
in
aaa
push
or
lret
sbb
movsl
xor
jbe
or
add
and
push
aad
inc
or
into
inc
movsb
jae
jp
and
addb
mov
rcll
aad
insl
lss
repnz
in
adcl
pusha
lods
sti
pop
mov
aad
cli
push
icebp
xor
aas
xor
mov
loope
inc
sbb
fcmovne
jp
mov
sub
aad
push
push
popf
sbb
jle
repnz
xor
int3
mov
fidivrl
or
sub
dec
add
jo
lods
pop
and
lret
shlb
icebp
jmp
cmpsl
xchg
in
pop
dec
ss
shl
inc
ljmp
jns
das
repnz
cltd
or
or
int
xor
jns
dec
pushf
aaa
pop
and
movsb
arpl
xchg
pop
dec
xor
xor
ds
popf
imul
jo
adc
mov
mov
fildl
cmpsl
leave
frstor
sub
push
pop
xor
add
cmp
dec
fucomi
mov
out
mov
jae
mov
dec
sbb
xchg
and
out
pop
add
call
fisubl
enter
push
push
cmp
icebp
cmp
pop
imull
stc
test
fwait
int
loope
js
sbb
cmp
ret
sub
jb
and
ss
jo
xor
mov
or
xchg
in
or
xchg
push
not
xor
add
stc
or
mov
add
in
testb
loope
jle
mov
subb
xchg
leave
inc
fwait
aam
pop
cltd
mov
cmc
addr16
push
pop
inc
add
ja
push
mov
pop
shlb
lret
sbb
push
data16
push
push
add
sbb
jl
dec
adc
sub
dec
mov
and
ljmp
pushf
or
adc
push
pop
adc
loop
xchg
mov
aas
adc
pushf
ja
and
addr16
imul
xchg
es
ss
andl
in
push
jnp
fmul
mov
dec
sbb
push
inc
xor
mov
movsb
cmpl
addr16
scas
dec
fmuls
jne
push
in
aam
popa
mov
cli
mov
mov
lahf
or
shrl
ss
fs
jnp
or
or
mov
out
int3
cmc
scas
outsl
sti
or
rolb
in
adc
push
pop
enter
sti
sub
test
inc
or
push
xor
and
adc
cmp
arpl
inc
outsl
ret
lcall
sbb
imul
dec
pop
adc
xchg
dec
xlat
loopne
fwait
outsl
inc
push
movsl
cmp
not
shll
dec
mov
mov
sbb
leave
pusha
imul
or
pop
mov
push
cmp
and
mov
aas
lcall
cmpsl
rclb
ret
lcall
sbb
loope
shrl
mov
dec
pop
and
out
inc
xchg
adc
rcl
loop
test
nop
pop
mov
out
je
leave
sbb
push
addl
lods
adc
add
pcmpeqw
fcmovne
mov
shlb
pop
dec
mov
scas
loopne
adcb
jl
fmul
add
out
add
out
push
push
fdivr
leave
xor
jbe
cmp
adc
xchg
jg
fs
mov
push
lcall
fdecstp
int
push
mov
mov
jle
inc
test
sub
pop
xor
sub
int3
pop
dec
aam
mov
cmp
rcl
jbe
loop
dec
mov
jbe
jo
mov
fdivrl
mov
mov
jg
pop
test
dec
pop
jne
popa
arpl
dec
prefetch
xlat
mov
addr16
jecxz
add
sub
mov
xchg
cli
inc
push
jae
int
enter
add
xchg
nop
add
loop
push
sbb
fimull
cwtl
cmp
mov
roll
rorl
aam
cmp
mov
repnz
les
mov
mov
or
add
cmpsb
cmp
hlt
add
in
out
out
test
pop
je
inc
scas
inc
pop
js
push
inc
mov
cmp
imul
inc
push
mov
les
fs
bound
jnp
fisubrs
push
iret
add
dec
dec
or
push
fstl
push
in
inc
mov
dec
adc
xor
mov
adc
pop
imul
sbb
or
adcl
push
push
ret
ss
xchg
cmp
mov
call
movsb
jecxz
fiadds
aad
jmp
or
xor
loope
mov
add
mov
and
les
cmp
xchg
repnz
lods
sbb
rol
out
dec
jmp
push
cli
inc
xor
fs
pop
rorb
mov
add
aaa
shll
jecxz
repz
sub
pop
adc
int
add
loop
pop
and
out
xchg
xchg
xchg
loopne
mov
inc
outsb
sbb
test
mov
popf
lcall
xchg
cmc
iret
adcb
ja
mov
inc
repz
mov
mov
add
pop
cmp
push
cltd
mov
imul
jge
push
add
loope,pt
push
into
gs
xor
push
push
mov
dec
scas
add
jnp
lods
xchg
xor
lcall
and
cmp
shl
pop
xchg
fisttps
sub
mov
int3
popa
fadds
mov
pop
cmc
adc
sbb
sbb
xlat
pop
fdivrs
add
add
mov
cmpsb
and
aam
xchg
mov
adc
out
adc
and
aad
lods
bound
test
mov
add
iret
fwait
subl
addr16
frstor
inc
jnp
jl
bound
and
aam
fcmovb
dec
fidivrl
or
fdivrs
les
lahf
repz
jge
dec
in
adc
sbbb
cmp
test
xlat
add
popa
sti
cmp
sub
mov
pop
fdivrl
dec
dec
inc
ret
push
stos
outsl
stos
sbb
push
mov
ret
push
adc
mov
sbb
mov
lret
je
inc
push
sbb
in
nop
push
cmp
dec
push
or
xchg
xchg
rcrl
lahf
mov
subl
dec
in
xchg
mov
inc
inc
imul
push
mov
pop
jp
aaa
fwait
or
jle
inc
mov
arpl
mov
push
xchg
lahf
xor
orl
fbstp
sub
insl
sbb
movsl
aas
jmp
daa
outsl
shl
sahf
fs
add
mov
sti
call
jmp
testb
movsl
ret
clc
mov
inc
popf
sub
mov
negl
cld
outsl
lds
pop
cmp
dec
pop
je
mov
movsb
mov
jo
inc
dec
popf
push
pushf
sub
inc
lods
in
mov
sub
scas
cmpsb
mov
jmp
jb
xchg
aaa
push
sbb
pop
adc
push
test
mov
sti
enter
sbb
gs
jno
test
add
cmp
cmc
sub
xchg
aam
rolb
push
add
bnd
inc
xchg
xor
pop
es
push
push
add
js
loop
push
adc
push
arpl
push
subb
xchg
pop
jl
stos
dec
testl
xorb
addr16
adc
fmulp
adc
sarb
adc
mov
stos
mov
jae
sub
test
push
sbb
pop
xchg
xor
mov
imul
fiaddl
adc
cli
push
enter
jae
mov
outsb
xchg
scas
mov
gs
testb
adc
push
xor
inc
xor
jo
fdivr
push
push
pusha
fistl
sbb
loope
cmpsb
sub
sub
push
push
scas
out
arpl
inc
dec
mov
ljmp
dec
clc
jp
idivl
movsb
pop
mov
testb
pushl
fists
in
lcall
inc
xchg
push
scas
mov
jns
in
mov
jecxz
push
adc
fnsave
stos
jmp
add
cwtl
fsubrs
int3
push
xor
fadds
jo
sub
sub
jne
pusha
xchg
adc
cs
push
add
pop
ja
repnz
stos
rcl
sti
push
daa
inc
es
stc
fnsave
aaa
pop
add
add
fnsave
push
fmuls
jno
mov
mov
test
jno
add
mov
movsl
insb
ss
jne
xchg
lret
or
outsb
outsl
adc
mov
mov
cmp
iret
les
bound
orl
jne
ja
cmp
fdivrl
andl
cmp
aam
leave
rorl
fisubrl
stos
jle
out
push
sahf
lock
push
jmp
mov
gs
xchg
cmc
inc
cld
jecxz
mov
or
in
popa
loop
subl
loop
jle
and
idiv
leave
loopne
jp
push
das
xchg
jg
fistpll
push
mov
adc
cltd
das
or
fs
sub
push
push
aas
out
adc
add
add
mov
mov
mov
xor
jmp
stc
sbb
pop
cmp
mov
mov
insl
cmp
lret
push
insl
sub
mov
gs
outsl
lret
rcll
or
jecxz
or
mov
push
addb
pop
push
jmp
aam
pop
cmp
ret
or
mov
sub
cmpl
and
lcallw
cltd
sahf
xor
push
xchg
jne
ljmp
inc
jg
dec
andb
xchg
xchg
add
cmp
test
rcll
out
fsubrl
loopne
fcomps
stc
andb
or
mov
lahf
loopne
call
loopne
cld
adc
and
and
lods
lods
data16
lods
or
pop
pop
or
jns
jg
push
push
addb
es
mov
push
sub
out
xor
mov
filds
mov
aas
lahf
inc
lcall
xchg
pop
jno
xchg
pop
gs
test
dec
addr16
mov
and
mov
pop
xchg
mov
cmc
cmp
pop
outsb
xlat
sbb
testb
mov
mov
push
cmp
test
adc
cmp
xchg
push
fsts
pushf
sub
sahf
jo
push
nop
jns
add
cmc
nop
icebp
pop
inc
dec
lods
inc
pusha
test
imul
lods
mov
pop
fildl
cmp
pop
jae
inc
mov
inc
add
push
jmp
loopne
sti
ljmp
pop
fwait
out
rcll
sbb
xlat
repnz
add
cmp
sub
jbe
mov
jae
hlt
add
das
enter
int
push
scas
xchg
sarb
jle
call
xor
lock
int
mov
pop
mov
jne
daa
jns
xchg
test
roll
in
mov
lret
xlat
dec
pop
inc
lods
push
mov
int
das
stos
jmp
lods
shl
fwait
mov
mov
dec
mov
mov
addr16
xor
xor
mov
add
lods
cmp
rorl
jmp
mov
jb
and
jp
push
sub
xchg
adc
pop
xchg
test
mov
fimull
or
mov
fwait
xlat
repz
inc
test
cmp
pop
sub
faddl
stos
inc
jmp
les
jge
push
pop
psrld
jno
loope
xchg
dec
in
test
xchg
add
pop
jp
inc
movsb
out
sub
cmpsb
dec
lods
jne
ljmp
inc
ljmp
filds
gs
mov
ret
xor
jge
cld
loopne
jge
movaps
push
test
fsubl
jns
dec
in
call
xchg
xchg
and
inc
push
adc
insl
hlt
outsl
add
jle
mov
xchg
stos
push
mov
fistpl
sub
mov
outsl
jnp
mov
and
lods
inc
inc
cwtl
inc
mov
in
jnp
mov
dec
in
ret
cld
push
mov
testb
cmpsl
push
imul
ret
in
in
inc
ficompl
insl
mov
movaps
mov
movsb
adc
cmp
push
add
cmpsb
push
fwait
shl
enter
movsb
loope
bound
and
xor
out
into
mov
lock
ds
inc
cmp
cltd
cmp
sub
es
aas
test
or
popa
jns
push
pop
add
dec
mov
or
outsb
sbb
mov
push
xlat
jnp
push
ret
mov
scas
daa
inc
dec
pop
shlb
jg
rcrl
sahf
xor
sarl
enter
mov
sub
pop
scas
add
jb
inc
les
gs
fs
pop
movsb
xor
jmp
push
mov
push
push
inc
sbb
cmp
xchg
xchg
inc
jge
in
out
hlt
sahf
in
scas
cmp
pop
sub
lcall
aam
shll
lock
neg
xor
stos
xchg
jne
insb
scas
cld
test
loope,pn
repnz
inc
push
sbb
sbb
stos
xor
xor
or
daa
test
mov
cmp
scas
sbb
loope
dec
mov
adc
or
or
and
test
mov
cltd
jecxz
inc
pop
stc
or
push
rcl
add
out
aad
jg
jmp
clc
xchg
sub
mov
mov
pop
in
adc
cmp
das
rcrb
ds
cmp
lds
loop
jnp
pop
dec
lahf
add
push
sub
pop
inc
inc
lahf
hlt
in
test
or
cs
add
adc
push
add
xchg
jb
ffree
out
jecxz
aas
adc
jp
pop
mov
insl
stc
or
sub
pop
stos
add
jo
or
outsl
arpl
jno
ret
pop
int3
dec
repnz
int
xor
subb
daa
xchg
pop
sbb
push
xor
mov
xchg
popf
xchg
out
aad
or
push
mov
jmp
popf
iret
mov
popf
sbb
sbb
inc
rolb
repnz
mov
aaa
sub
cli
mov
add
mov
adc
mov
xor
out
push
add
dec
test
dec
ret
jns
je
push
push
stos
and
push
and
dec
out
int
jecxz
fisubrs
push
pusha
aad
imulb
fs
nop
mov
icebp
repz
dec
in
cmp
cmpb
jge
dec
in
dec
clc
outsl
cmpsl
repnz
mov
ret
push
adc
rorb
jge
sbb
aas
adc
push
dec
sub
dec
outsl
push
in
lods
cs
push
cld
mov
lcall
dec
aam
popl
xchg
mov
lock
scas
lock
test
jl
into
inc
cmpsb
je
dec
and
cmp
sub
xchg
iret
jecxz
dec
sbb
insl
and
clc
push
cs
xor
cmp
adc
push
in
cmp
lcall
sbb
rolb
mov
jge
scas
push
cmp
test
ret
mov
mov
fildl
filds
lea
cmp
xchg
cmp
imul
call
cli
std
push
leave
mov
cmp
mov
and
test
scas
jmp
pop
pop
repnz
or
xor
jg
inc
push
or
add
sbb
mov
loope
push
cmp
pop
jle
mov
push
xchg
inc
test
add
fcmove
cmp
dec
adc
mov
movsl
or
mov
sub
jnp
daa
enterw
inc
lahf
aaa
int
ds
fistpll
es
popa
mov
int3
mov
cmpsl
pop
mov
jge,pn
fwait
scas
xlat
push
or
shlb
inc
rorb
pop
adc
pop
sub
sbb
mov
lea
daa
push
sbb
jmp
mov
and
adc
jno
cwtl
inc
cmp
sub
pop
out
sbbl
insb
adc
dec
mov
xchg
stos
cltd
outsb
xchg
in
std
jg
pop
mov
mov
cmp
ds
mov
and
push
sarl
flds
popf
dec
jne
pop
mov
or
push
nop
pop
push
out
shll
loop
sarb
das
add
ja
lds
in
into
fisubrs
dec
lcall
xor
rcll
dec
xchg
jne
inc
cltd
mov
rcrb
pop
fisubrs
cmp
movsl
push
je
mov
jno
add
sub
inc
scas
fsubp
std
or
xor
lret
pop
addr16
jge
mov
fildl
call
or
lahf
adc
pop
pop
cmp
scas
push
pop
pop
mov
jnp
xor
push
enter
add
push
dec
imull
leave
push
push
out
xor
inc
xchg
repz
outsb
roll
outsb
mov
mov
out
xlat
push
jae
or
mov
pusha
lock
xchg
push
and
mov
xor
pop
xlat
mov
dec
lods
lods
jbe
sbb
xchg
inc
mov
insl
mov
add
sub
fs
movsb
in
fistpl
orb
movsl
sbb
inc
lods
imul
aaa
hlt
or
lods
sub
and
stos
call
mov
shll
lds
mov
or
jp
xchg
call
dec
addr16
dec
in
int
lds
mov
mov
pop
divb
and
fidivl
addr16
push
push
ss
xchg
in
icebp
inc
popf
xor
outsl
cmp
mov
stc
popa
adc
sbb
outsb
push
push
push
cmpb
push
insb
mov
pop
sub
sub
push
les
cmp
ja
aad
jl
mov
mov
sahf
jl
sbb
out
pop
outsb
out
test
fists
mov
mov
scas
imul
ljmp
fidivs
pusha
idivl
xchg
scas
repz
lock
test
jg
sti
xchg
pop
mov
cwtl
mov
int3
sub
add
jl
inc
shl
and
mov
mov
scas
dec
pusha
ljmp
xchg
cmp
mov
in
dec
pop
add
decl
inc
push
mov
gs
mov
xchg
push
inc
adc
adc
int3
out
cmp
push
outsb
call
fdiv
in
icebp
xchg
push
pop
xchg
adc
mov
mov
jnp
mov
cmp
mov
cmpsl
adc
inc
fbstp
arpl
aad
adc
repz
test
or
and
lods
fldcw
loop
repz
adc
cmp
add
divl
fisubrs
cs
mov
std
mov
xchg
jge
movsb
xchg
pop
fiadds
xchg
lods
jae
shrb
mov
add
pop
in
orl
daa
jns
push
or
jle
push
or
pop
adc
inc
inc
jmp
push
xor
aad
xchg
dec
add
hlt
and
jo
push
push
popf
mov
push
inc
out
cmp
shrl
push
push
aaa
cld
pop
sub
iret
and
iret
fnstsw
and
scas
pop
add
sub
push
in
fcmovnb
aas
repnz
xor
cmpb
cmovl
xchg
push
jno
adc
out
mov
in
movsb
sbb
push
ds
ftst
mov
in
sub
out
or
scas
lea
mov
mov
shlb
dec
mov
sbb
jae
dec
imul
outsb
sbb
dec
push
insl
push
jnp
cmp
movsl
loop
pop
xlat
iret
push
pop
ret
xor
mov
ljmp
jno
inc
mov
sub
or
outsl
cli
add
data16
imul
sub
add
cmpsb
test
inc
sbb
dec
int3
fmuls
stc
inc
xchg
jmp
ss
jo
xor
push
repnz
inc
popf
or
lods
add
lods
or
pminub
call
test
inc
fnstenv
push
push
or
jge
js
inc
cmp
jb
lock
sub
stos
cld
push
xor
js
or
ljmp
es
mov
movsb
ds
push
pop
jl
test
stos
jg
push
ja
imul
jne
xchg
dec
push
in
jns
in
cmp
push
mov
stc
popl
push
loop
iret
into
dec
or
push
cmp
insl
lea
mov
jb
adc
addr16
jo
andb
ja
ret
mov
push
cld
push
pop
cmp
cmpsb
scas
enter
sbb
ljmp
insl
les
pop
and
sub
dec
pop
cmp
nop
xlat
jns
int3
cmp
stc
jns
adc
adc
or
orb
lcall
mov
push
imul
push
insb
mov
or
adc
imul
out
popa
xor
dec
jp
testl
mov
lret
out
pop
repz
in
jp
push
jge
adc
mov
mov
jbe
cld
cmpsl
mov
dec
aad
ret
shrl
dec
loop
jbe
dec
negl
dec
stos
inc
adc
xadd
js
mov
pop
sub
sbb
pushf
rol
push
dec
cmp
rcl
mov
sub
ficoms
lcall
mov
xchg
mov
mov
or
popf
adc
add
movsb
mov
leave
mov
pushf
or
test
mov
repz
test
shll
outsb
stos
jmp
pop
lds
outsb
test
fsubl
mov
stos
into
outsb
cmp
cmp
sub
or
push
sub
lcall
fldln2
dec
push
das
pop
iret
mov
cmp
and
jno
push
lahf
dec
rcrl
sarb
mov
and
cld
lock
insb
cmpsb
mov
add
clc
and
cmpsl
inc
adc
in
inc
mov
xchg
mov
jne
sub
in
bound
nop
sbb
mulb
inc
scas
cld
push
in
and
sbb
xchg
push
xor
stos
jae
and
xor
shrb
mov
mov
ret
daa
outsl
push
mov
mov
movsl
and
enter
andl
bound
inc
add
pop
lods
pop
jmp
dec
inc
call
arpl
jle
test
or
icebp
or
cmpsb
mov
loopne
dec
push
aad
leave
jecxz
rclb
addr16
pop
data16
xor
sti
inc
or
mov
in
sub
je
mov
cmpsl
insl
push
or
out
push
lock
mov
cmp
clc
xor
iret
sbb
sbb
cmp
repnz
mov
lret
rcrb
mov
jns
push
sub
jo
mov
xor
repnz
arpl
adc
aaa
test
test
das
test
pop
outsb
adc
shlb
mov
pop
adc
je
pop
fdivl
stc
lock
cltd
loopne
aaa
into
jnp
dec
pop
in
and
mov
cmpsb
cmp
int3
adc
lret
aam
push
mov
jo
pop
mov
shr
mov
fwait
pop
dec
rol
jge
and
jp
fidivl
fildl
inc
outsl
pop
out
cltd
and
xchg
test
push
inc
jle
gs
sbb
test
inc
js
je
inc
push
out
lods
inc
lds
or
xlat
inc
ja
mov
setb
inc
push
mov
fiadds
dec
pop
arpl
pop
test
pop
pop
addr16
xchg
insb
sbb
hlt
mov
add
mov
sub
subl
lret
jb
call
aad
push
mov
mov
jns
repnz
fistl
dec
loop
jno
into
mov
jb
jge
cli
inc
mov
gs
inc
inc
xor
lods
jp
jne
cmp
mov
add
out
cmp
add
add
xchg
xor
sub
jl
cltd
xor
jle
mov
or
scas
adc
jb
subb
dec
or
rcr
aaa
inc
xchg
xor
mov
test
xchg
ucomiss
clc
das
test
pusha
sbb
shlb
scas
add
cwtl
ljmp
mov
sbb
xor
outsl
mov
dec
lds
add
pop
pop
repnz
jns
cmp
ret
xchg
gs
mov
and
test
adc
dec
sub
xchg
or
shrl
or
popf
stos
mov
mov
jne
jbe
jge
mov
idivb
addr16
mov
mov
pop
cwtl
lret
out
addr16
cmp
ss
cmc
mov
into
mov
das
xchg
inc
ss
cmc
mov
ds
pop
test
pop
scas
nop
into
xchg
mov
popf
xor
pop
ret
push
out
out
jle
mov
mov
shll
out
movsl
in
lea
outsb
mov
fsubr
dec
jae
and
fdivrs
mov
xlat
cmc
mov
mov
push
aad
mov
sub
jle
xchg
cwtl
pop
add
icebp
mov
lea
enter
push
sbb
ds
jmp
insb
out
jb
stos
mov
jg
push
and
push
in
fldl
jno
xor
test
adc
ss
mov
xchg
or
xor
pop
sbb
lcall
sahf
xchg
pop
in
add
pop
insl
test
dec
and
fs
js
lret
jmp
mov
inc
jnp
add
popf
sub
jp
mov
lods
addr16
sbb
add
xor
cltd
les
pop
add
jno
stc
add
or
fwait
xchg
xchg
shrl
and
stc
nop
push
shrl
ja
jg
hlt
sbb
imul
imul
loop
movsb
cwtl
in
ss
xchg
in
push
jno
mov
sbb
mov
jp
pop
jnp
pop
jns
or
jae
mov
scas
mov
pushf
outsb
pop
or
popf
aas
fdiv
mov
inc
fidivrs
arpl
dec
loopne
sbb
mov
dec
in
ficompl
rorb
sbb
jl
adc
push
mov
sbb
punpcklbw
cmp
mov
call
dec
cmc
mov
cmp
sbb
add
pop
lock
jno
sub
pop
dec
mov
test
push
lcall
insl
add
test
and
cmpsl
repz
repnz
or
add
jne
loop,pn
clc
xlat
push
and
mov
fists
xor
imul
mov
std
jns
inc
fdivr
test
rolb
pop
xchg
cwtl
jns
ret
xchg
mov
popa
sbb
xchg
int
pushf
lret
in
mov
popf
push
lret
bound
xchg
jp
out
jmp
sbb
inc
repz
dec
push
cmpb
or
insb
xchg
sub
inc
movsb
push
cmp
pop
cwtl
das
push
xor
pop
jb
xor
sti
insb
sub
insl
into
ljmp
and
loopne
push
outsb
sahf
aas
mov
dec
rcrb
inc
push
mov
dec
mov
aad
cmp
insl
aad
rcrl
scas
pop
hlt
xchg
addr16
repz
dec
shrl
int
mov
sbb
and
das
addl
das
cld
daa
jae
jg
cmpsl
push
mov
jl
aad
cs
je
jo
scas
inc
gs
call
mov
int3
xchg
repz
xchg
push
jo
loop
and
lahf
push
imul
in
push
and
fs
arpl
inc
out
shrl
sub
aaa
pop
and
jb
insb
jb
pop
mov
into
sbbl
sbb
jmp
xchg
cs
dec
pusha
sti
lahf
shrl
sarl
ljmp
and
jp
jne
jle
icebp
add
repnz
das
cmp
dec
rorb
outsb
and
adc
movsb
adc
xchg
cmp
pop
or
push
cmpsb
std
mov
fcoms
mov
clc
cs
inc
inc
aas
testl
xor
ja
in
and
movsl
push
popf
daa
lods
test
sbb
push
or
adc
jnp
push
jnp
rdtsc
jp
lock
push
xchg
pop
js
cmp
outsl
cmpl
jge
inc
inc
sbb
xchg
les
mov
repnz
fs
sub
add
mov
xchg
cmc
mov
cmc
je
pop
xchg
fidivrl
adc
ljmp
mov
out
outsb
pushf
sbb
cmpsb
adc
fldl
cmp
pop
movsb
sbb
xor
sarl
stos
hlt
or
or
mov
je
ja
orl
cmp
call
jp
dec
dec
or
aad
ret
movsb
icebp
jl
fnstsw
lcall
mov
xor
ljmp
sarb
push
push
lcall
and
dec
cmc
pop
xchg
insl
adc
xchg
add
ret
xchg
ret
ja
pop
xor
sub
xchg
movsl
pop
jns
jl
mov
aas
hlt
ja
cmp
ret
imul
lods
jo
loope
int
lods
push
dec
pushl
xor
push
xchg
jb
out
mov
pop
mov
fistps
stos
jbe
mov
addl
stos
fidivrs
pop
jne
fisubrl
iret
popa
clc
add
inc
shll
dec
fstpt
and
xchg
xchg
and
mov
imul
aaa
push
mov
jb
leave
cwtl
mov
std
lahf
inc
push
xchg
inc
imul
call
mov
push
mov
scas
mov
mov
cltd
add
je
sbb
jl
inc
adc
nop
clc
mov
and
jmp
inc
sbb
add
in
mov
cmpsl
mov
mov
lret
iret
sbb
xor
mov
enter
mov
fld
iret
mov
push
sbbl
into
test
sbb
fs
push
ds
loop
rorl
std
sub
insl
data16
movsl
popf
push
mov
fs
mov
add
jbe
mov
mov
sub
rcrl
sbb
and
or
and
cmp
sbb
or
lods
andl
shrb
clc
xlat
add
iret
out
jge
testb
adc
in
jle
mov
dec
std
and
sub
repnz
xchg
sbb
dec
repnz
clc
fildl
cwtl
hlt
jne
arpl
sub
and
sub
divl
mov
pop
adc
rcrl
push
dec
and
push
push
outsb
fidivrs
jg
inc
fmuls
jns
mov
fisubl
xlat
jne
and
ss
jmp
jns
inc
dec
push
std
cltd
sbb
in
mov
sub
int3
test
xchg
mov
pop
xor
mov
imul
push
xchg
idiv
movsb
pop
call
and
cmpsl
inc
js
cmp
push
fmull
in
and
mov
dec
xchg
pop
jmp
inc
or
out
mov
mul
mov
clc
jmp
data16
lock
push
divl
lods
ljmp
in
xchg
arpl
xchg
ficoml
push
in
add
popf
loope
jp
mov
lods
sbb
mov
filds
cli
xor
xchg
mov
adc
rcrl
xchg
pop
push
mov
push
jae
jp
lea
shr
inc
insb
adc
fistps
mov
push
cmp
pop
pop
push
lock
lds
and
sub
xchg
mov
sub
xchg
adc
dec
clc
lock
jecxz
adc
fnstcw
mov
cmpsl
out
std
fdiv
mov
sbb
jne
aam
aaa
inc
xchg
jmp
arpl
and
repnz
fdivr
ss
sub
repz
lock
cmpsl
xor
testb
sub
jmp
push
enter
mov
sbb
mov
and
push
xor
outsb
push
mov
or
cmpsl
pop
push
subl
pop
mov
and
xchg
cwtl
ja
mov
into
push
dec
arpl
mov
fldcw
mov
int3
pop
and
pop
movsb
adcb
notb
xor
sti
ljmpw
aaa
mov
iret
inc
nop
mov
lahf
mov
inc
push
jne
pop
mul
stos
xor
aam
lea
aad
adc
gs
lahf
inc
repz
cmpsb
shrl
pop
mov
xchg
pop
mov
sub
nop
loope
jmp
xchg
push
push
push
lcall
xor
ret
pop
std
dec
adc
lret
rorl
js
fstps
or
xorl
pop
sarl
xchg
imul
repnz
test
xchg
mov
nop
out
std
xchg
add
cltd
outsl
and
xchg
inc
push
mov
sbb
ds
cltd
pop
push
and
pinsrw
mov
push
cmpsl
ret
pop
xchg
clc
or
out
test
stos
jmp
sub
fwait
adc
js
iret
jecxz
adc
lahf
enter
inc
mov
and
sub
push
mov
jb
in
out
imul
or
ja
loop
out
sbb
cltd
cmc
and
loopne
test
cmc
dec
fwait
inc
jo
sti
test
inc
cmp
cltd
dec
fcmove
push
ret
movsb
in
les
loopne
hlt
or
xchg
ljmp
jmp
into
int
pop
lds
jg
aas
es
sbb
fdivrl
sub
sub
enter
ja
sub
mov
sub
add
jmp
shr
jmp
pusha
sbb
pushf
lods
loop
loopne
and
jnp
testl
dec
cs
js
lea
cmp
mov
jnp,pn
pop
imul
add
push
mov
sbb
jl
cs
and
ret
pop
push
movsl
push
pop
js
js
jg
imulb
or
aaa
jp
hlt
xchg
xor
movsl
sub
sub
testb
pushf
ret
push
dec
cmp
jecxz
jbe
adc
imul
test
inc
mov
push
jmp
sbb
int
insl
xor
sub
push
stos
aad
fwait
cmp
jl
pop
pop
lcall
mov
pop
push
mov
lret
adc
dec
push
xor
adc
mov
pop
jmp
popf
and
and
in
sub
mov
enter
sbb
push
jge
pop
lock
xchg
sbb
lret
mov
push
jno
notb
xchg
push
lds
jge
arpl
mov
fucomi
jecxz
aam
aaa
xchg
movsl
movsb
aaa
add
mov
xor
dec
rorb
aaa
pop
jo
adc
arpl
jbe
nop
fs
xchg
push
push
cmp
cmp
lahf
lods
insb
xchg
subb
add
push
inc
lods
dec
rolb
dec
loopne
sti
dec
hlt
mov
xchg
push
and
incl
dec
mov
js
int3
shrl
or
mov
sbb
icebp
push
out
cmp
scas
test
lock
je,pn
ja
adcl
mov
push
xabort
xchg
iret
data16
shlb
loope
ss
jns
div
push
push
lea
add
adc
ljmp
add
mov
subl
pop
sbb
enter
adc
xor
cmc
push
and
out
lahf
sbb
mov
cmp
icebp
or
subl
cwtl
mov
push
mov
adc
aam
jecxz
xor
inc
fidivrs
jge
pop
pop
cmp
mov
stos
in
fs
fnsave
repz
mov
ljmp
int
in
repz
iret
adc
push
mov
pusha
cmp
je
ret
push
dec
cwtl
push
aaa
xchg
arpl
push
dec
js
nop
lret
sti
icebp
adc
rclb
sbb
adc
mov
sbb
jecxz
and
cmp
mov
int
adc
mov
int
add
push
fwait
push
lods
add
shll
adc
sub
inc
ret
js
sbb
lods
xchg
gs
gs
xchg
les
ja
jne
fs
std
xchg
ds
les
arpl
cmp
adc
iret
push
clc
push
and
push
sbb
pop
lret
addr16
sbb
dec
in
repz
add
ret
dec
dec
jp
cmpb
cmpsb
push
or
shrl
inc
stos
add
and
movsl
icebp
aas
fnstenv
dec
aad
push
push
call
inc
cmpsb
xchg
lods
mov
sbb
popf
mov
ss
ficoml
int3
push
sub
pop
xchg
pop
faddl
lcall
fadds
leave
into
or
dec
xor
push
cmpl
lea
stos
pop
inc
mov
dec
movsb
cmpsb
fidivl
lds
imul
out
push
xchg
pushf
dec
sbbl
in
mov
rolb
outsl
mov
push
adc
pop
inc
roll
push
aaa
jge
inc
xor
dec
popa
mov
mov
add
test
mov
push
adc
dec
incb
cmp
cld
push
cmpsb
sbb
mov
xchg
mov
bound
cs
fstp
xchg
fs
adc
sub
pushf
push
and
cltd
adc
test
rcrl
fimuls
in
mov
fstl
imul
inc
test
push
cli
adc
test
mov
push
into
lea
mov
lret
mov
or
movsl
mov
popa
fiaddl
jmp
push
mov
push
fwait
mov
dec
ret
fistpll
fcomip
xchg
mov
dec
outsb
fidivrs
stos
mov
ja
nop
mov
or
push
sbb
sbb
fs
aaa
fwait
cmp
movsl
cmpsb
xor
mov
ss
mov
push
mov
lret
sub
lret
outsl
ret
pop
mov
dec
loope
shlb
mov
rcrl
in
xor
xchg
loope
dec
sbb
out
mov
pop
adc
fwait
cmpsl
jl
and
jecxz
mov
stc
push
sbbb
dec
mov
and
clc
cmp
pop
xchg
or
sub
cmpsb
and
jg
push
je
mov
mov
hlt
mov
xchg
or
test
repnz
xchg
sub
mov
fwait
dec
dec
dec
sbb
dec
pop
fdivl
lds
push
add
jge
inc
sbb
jns
mov
mov
pushf
sahf
popl
mov
push
repnz
fdivrl
adc
mov
repnz
cmp
add
aad
das
sbbb
mov
mov
push
in
sahf
push
addl
add
insl
arpl
mov
adc
pop
or
jbe
frstor
popa
add
fs
mov
clc
rcr
push
ficoml
mov
and
jo
imul
mov
push
das
outsl
dec
fistl
lcall
jbe
xor
jecxz
sub
dec
pop
pop
jmp
inc
scas
mov
xlat
pop
mov
ret
sbb
into
imul
push
clc
dec
mov
mov
mov
loope
mov
inc
xchg
cmp
dec
lahf
mul
ds
and
rorb
sub
inc
scas
testb
and
pushf
push
jo
sbb
idivl
mov
loop
push
jne
in
xchg
mov
clc
and
movsl
inc
imul
lock
inc
aaa
insl
aad
mov
imul
or
mov
jl
fstl
pop
jb
mov
cmp
mov
out
jo
shll
xor
mov
cmp
int
bnd
sbb
cld
popf
pushf
cmp
adc
cmp
test
and
sub
inc
mov
js
test
repz
ret
icebp
cmpsb
popa
xor
dec
and
js
cmp
and
in
sahf
dec
and
adcb
pop
push
mov
scas
aam
lods
sbbb
rcr
test
ret
cmp
sbb
hlt
mov
mov
fwait
cmp
insb
inc
mov
sbb
cmpsl
adc
fildll
aam
leave
jns
push
mov
movsl
in
mov
gs
js
inc
aad
or
in
leave
xchg
cli
push
push
push
cs
mov
jne
nop
and
adc
pop
ficoml
mov
push
repz
dec
sub
andb
and
lods
mov
ljmp
jb
aam
mov
icebp
jmp
and
ret
sub
test
pop
xchg
xchg
cltd
test
nop
xchg
int3
xor
mov
lret
ljmp
pop
ficoml
orl
js
jle
lods
loope
scas
out
jae
xchg
scas
sub
test
mov
mov
push
pushf
cmp
cmp
popf
outsl
mov
fnstcw
xchg
sti
and
call
push
jmp
lock
adcb
lret
inc
mov
and
jnp
mov
cmpsb
movsl
ret
ja
loopne
dec
adc
or
push
or
fldt
xchg
sub
push
das
inc
xchg
adc
sbb
out
cmpsl
je
mov
xlat
fcmovnbe
xchg
jecxz
rcrl
dec
mov
lahf
lods
sbb
out
sbb
fcomi
idivl
adc
push
push
dec
data16
or
cmp
out
mov
mov
jne
pop
movsb
mov
mov
xchg
xlat
mov
popf
mov
pop
in
icebp
pop
xchg
dec
pop
test
aas
repz
pop
and
pop
test
and
mov
pusha
pop
cli
xchg
mov
pop
call
repnz
ss
add
iret
lea
stc
movsb
dec
mov
gs
xorb
adc
dec
dec
push
in
mov
dec
addl
mov
mov
xlat
sbb
loop
pop
jle
pop
aad
movsb
insl
std
adc
xchg
aas
andl
popa
popf
dec
xchg
sub
mov
fists
cmp
jmp
bound
nop
mov
xchg
clc
sahf
fwait
mov
std
and
xchg
mov
add
xor
fildl
popa
lods
and
popl
fidivrs
mov
dec
add
mov
jecxz
jnp
mov
leave
push
inc
add
inc
and
fildl
popf
or
add
mov
roll
pop
mov
or
and
jmp
dec
adcb
lcall
out
shl
mov
sbb
mov
pop
testb
loopne
cmp
dec
inc
sbb
lret
das
jp
jecxz
lds
cmp
mov
fdivs
dec
mov
pop
sub
sub
dec
sbbb
jo
mov
inc
xchg
mov
push
fdivrs
movsb
dec
in
outsl
add
aaa
mov
xor
inc
mov
cli
push
sub
das
repnz
std
sub
aam
or
and
out
cld
and
jle
ret
gs
ljmp
xor
jmp
scas
xor
js
adc
xchg
xor
call
imul
mov
xor
xor
cmp
scas
mov
sub
test
jb
ret
outsl
mov
xchg
xor
mov
inc
mov
adc
orl
std
mov
jge
xor
iret
xor
pop
jno
mov
adc
pop
add
pop
dec
and
int3
sbb
mov
push
mov
inc
jno
ljmp
pmaxub
or
jnp
xor
jne
xorb
fucomp
jo
pop
sahf
mov
add
and
mov
xor
movzbl
mov
dec
jnp
jmp
out
mov
sbb
nop
pop
sub
jmp
dec
cmpsl
pusha
scas
pop
shrb
pusha
fdivrs
int3
cmp
mov
ret
sub
mov
pop
adc
add
sub
jne
adc
fs
xchg
jmp
into
mov
and
sub
cmc
pop
insb
lock
pop
mov
mov
or
sbb
int
movsb
cmp
mov
ja
inc
mov
jge
cmp
popa
stc
out
add
mov
sbb
shr
imul
inc
push
push
cmp
sub
repnz
sub
imul
ss
mov
inc
popa
fstpt
ja
fstpt
jmp
sub
lods
inc
imul
dec
idivb
cmp
ss
xchg
ss
adc
adc
leave
bound
add
mov
fldl
flds
cmc
pusha
mull
clc
adc
stc
outsl
sub
push
add
mov
ret
jg
mov
jnp
jns
sbbb
sbb
push
or
das
mov
adc
add
lcall
pusha
and
push
sub
jnp
mov
mov
push
cmp
call
loopne
sahf
adc
jmp
test
push
je
jecxz
jmp
mov
mov
test
sti
stos
ds
flds
mov
out
jl
pop
mov
in
mov
pop
mov
fwait
cmp
movsb
lahf
mov
cld
jl
rcrb
pusha
addr16
ja
mov
ds
jns
aaa
or
xchg
mov
or
movl
jo
imul
aas
lock
mov
insb
popf
xor
and
scas
lods
aam
imul
lock
cmp
jmp
icebp
mov
pop
xchg
add
sub
inc
pop
outsl
outsl
loop
test
lods
pop
jno
fdivl
jo
jl
jbe
sti
lcall
je
push
mov
jl
aas
pop
dec
mov
daa
mov
cmpsl
arpl
xor
push
push
inc
push
sbb
pusha
ficompl
push
mul
insb
cli
ss
xchg
jmp
sbb
dec
aad
stos
mov
xor
jg
xor
loop
in
test
mov
mov
push
lahf
movsb
push
mov
xchg
ret
and
add
aad
xor
jmp
icebp
lret
rorl
pop
addr16
roll
into
push
or
stc
icebp
or
push
dec
cmp
out
sbb
dec
pop
and
bound
adc
adc
enter
xchg
les
pop
mov
inc
loopne
js
outsl
ss
fs
notl
xchg
mov
push
fs
dec
add
xor
arpl
or
incb
and
clc
mov
bswap
scas
inc
std
push
jnp
xor
adc
adc
std
xchg
or
ljmp
imul
mov
iret
jle
cmc
cmc
adc
push
lret
pop
adc
popa
cmp
jle
mov
divb
fsubr
mov
les
lret
push
jmp
push
outsl
jo
mov
and
jecxz
push
ljmp
xchg
add
lods
mov
repnz
clc
or
lcall
cwtl
xor
scas
push
stos
jge
xchg
in
enter
mov
mov
call
test
xchg
and
stos
jbe
pop
xchg
mov
or
cmp
inc
push
mull
add
enter
out
inc
into
jne
ud2
loopne
ljmp
pusha
jae
push
movsl
and
push
fdivl
pop
inc
test
inc
nop
test
fwait
out
das
loope
stos
dec
movsl
out
scas
push
loopne
movb
out
cwtl
data16
cltd
or
je
stc
dec
sbbl
cli
cmpsb
mull
xorl
mov
sub
cmp
scas
dec
push
sarb
pop
or
or
loope
fs
lds
sub
mov
mov
cmp
push
das
adc
push
in
or
stos
cmp
in
test
and
dec
leave
mov
fnstcw
je
out
mov
adc
mov
push
in
dec
mov
jnp
lock
faddl
cltd
nop
and
and
aad
or
insb
aas
dec
fbstp
and
xchg
sub
sbb
jmp
mov
inc
popa
clc
rorl
gs
mov
in
inc
scas
js
xor
std
cmc
cli
into
enter
icebp
pop
enter
outsb
or
clc
aaa
sub
sti
jne
shrb
enter
in
cltd
repnz
clc
sarl
loope
jl
jbe
lret
fistl
inc
pop
or
pop
pop
ja
jmp
mov
push
mov
xchg
pop
fs
jmp
mov
jl
and
addr16
jne
xchg
fucomp
ret
and
test
jno
lods
cmpb
aad
imul
rcrl
ja
pop
and
mull
fs
adc
push
test
data16
mov
movsb
cmp
in
out
push
dec
and
test
sarl
test
and
mov
inc
fdivr
push
push
inc
push
sbb
shrb
in
pop
icebp
lahf
mov
jns
xor
dec
repnz
hlt
jne
or
test
or
or
and
mov
push
push
shr
push
dec
out
ja
cwtl
das
mov
ss
loopne
xor
into
push
mov
mov
dec
fadds
mov
inc
sti
test
iret
jae
lret
xchg
into
pop
fistpl
add
add
sbb
sarb
repnz
add
movsl
das
sbb
push
sbb
ja
cmp
fdivrs
fnsave
aaa
sub
sbb
add
add
shll
shr
in
popa
xor
dec
decb
xchg
pop
lcall
lods
pop
add
pop
movsb
or
mov
hlt
and
loopne
or
repz
xchg
push
add
outsb
sub
xor
cmp
jns
and
push
dec
insl
cmpb
or
call
test
jae
xchg
mov
push
mov
sahf
lds
xlat
mov
lret
jnp
cli
lods
mov
fisttpll
cmp
in
stos
cmpsl
mov
fdiv
test
test
ljmp
push
lcall
jle
push
and
ret
push
ret
inc
mov
pop
loop
xor
jmp
mov
aas
gs
push
pop
loop
cwtl
gs
cmp
jl
rep
out
pop
jb
push
cmpsl
testl
lods
stos
rolb
dec
icebp
lcall
adc
add
mov
xor
push
outsl
das
cmpsl
inc
sub
push
rcl
ljmp
out
cld
mov
mov
leave
and
stos
or
pop
mov
sbb
inc
inc
divl
into
movsb
out
sbb
cmp
xor
dec
mov
cld
mov
xorl
sub
xlat
sbb
mov
shlb
data16
xchg
push
movsl
or
mov
cwtl
das
or
add
and
rclb
mov
mov
jge
inc
mov
aaa
pushf
push
cmp
enter
nop
mov
dec
mov
mov
adc
xchg
gs
rcrb
pop
fsubrs
in
addl
xor
jge
adc
pop
push
arpl
dec
jmp
sbb
inc
imul
clc
push
sahf
stos
cmp
test
out
mov
scas
mov
inc
and
testb
loop
adcl
addr16
xchg
out
inc
mov
cmp
inc
hlt
push
xchg
pop
out
pop
mov
por
sbb
lahf
icebp
cmp
mov
dec
out
and
lahf
cmc
inc
cmc
mov
adc
rorl
lock
jno
cmp
sub
and
mov
and
jb
inc
adc
jg
adc
cmp
in
in
sub
out
or
sysenter
lret
ds
push
inc
or
out
pop
push
in
out
mov
push
insl
jl
and
faddl
sbb
pop
cmp
lods
movsl
inc
fsubs
loope
xor
cmp
push
mov
xorl
or
inc
clc
push
push
iret
cmc
push
neg
cmc
adc
jmp
cmpl
xchg
push
out
or
cmpsl
inc
ret
mov
push
scas
push
mov
adc
pop
jecxz
dec
stc
pop
jle
sahf
xor
lret
loop
popf
dec
insl
push
jae
aas
mov
lahf
in
inc
fcmovnu
adcb
jne
fadds
xchg
add
daa
cmp
loop
mov
std
inc
imul
push
outsl
lea
loopne
dec
push
lcall
jo
sub
hlt
pop
jnp
sarb
loopne
pop
fiaddl
mov
adc
lds
cmp
jbe
sarb
mov
mov
lcall
lods
pushf
sbb
ror
in
cwtl
xor
cltd
aas
mov
fidivrs
je
pop
pop
adc
push
lods
jo
mov
mov
lahf
cmp
aaa
subl
fstpl
mov
push
in
jle
out
ficoml
xor
cmc
test
jno
loope
jecxz
push
push
addb
xchg
jno
arpl
sbb
out
inc
jle
aad
loop
fisubs
mov
adc
sti
sarb
fmuls
js
pop
lds
cld
jmp
mov
popf
lock
stos
aad
jle
test
shrb
imul
xchg
pop
mov
aad
cmp
xchg
jno
lea
jbe
or
push
push
inc
or
push
push
lahf
sbbl
xchg
mov
insl
fnstenv
jge
pop
test
push
pop
adc
or
jo
lcall
add
push
mov
push
pusha
or
test
sbb
fs
gs
cmc
pop
int
xchg
sub
xorl
inc
sub
xchg
xlat
inc
add
mov
cmc
mov
dec
insb
push
popf
hlt
add
cmp
fcmovnu
mov
xchg
test
outsb
shr
lds
insl
cmp
arpl
sbb
xlat
cmp
scas
mov
stos
out
lahf
xchg
xor
jl
pusha
mov
xor
xchg
lods
mov
inc
sbb
stos
mov
inc
call
adc
clc
jl
jmp
lahf
and
scas
push
add
call
mov
add
fs
adc
push
sbb
out
pop
xor
stos
movsl
out
mov
adc
jge
stc
push
test
rclb
xlat
outsb
pop
sbb
push
div
xchg
pop
lods
cmp
sub
hlt
nop
sub
shlb
imul
jl
dec
iret
pop
jo
popa
shrb
mov
and
out
sub
or
pusha
scas
pop
cmp
stos
daa
clc
popf
xlat
dec
xchg
jo
sbb
mov
pop
ja
imul
cli
lods
inc
out
lcall
push
pushf
xchg
sub
js
inc
stos
inc
xor
dec
stos
jno
and
pop
inc
shll
orb
pop
daa
cwtl
jb
aas
sbb
xor
ds
inc
cltd
xor
pusha
mov
rclb
mulb
mov
push
mov
icebp
xor
fisttpll
lcall
cmp
int3
out
aad
adcl
jne
out
xchg
push
imul
adc
or
adc
and
mov
fs
adc
pusha
inc
out
and
pop
aad
add
push
cmp
fwait
cld
mov
inc
fcompl
add
sub
sub
pop
popa
push
or
or
pop
xchg
mov
jno
leave
es
scas
movsb
add
stos
add
test
add
cmpl
leave
sub
nop
inc
scas
pop
push
jb
jno
inc
xchg
adc
pop
cmc
es
push
fcoms
lcall
pop
and
outsl
scas
push
inc
popa
pushf
jns
or
icebp
into
add
imul
lahf
lods
mov
add
cmpsb
jg
dec
ja
shrb
sbb
ret
inc
sub
es
bound
mov
add
cmp
xchg
nop
cmpsb
and
jge
sbb
mov
aad
leave
pop
or
movsb
or
in
push
cmpsb
push
xchg
cmpsb
adc
out
repnz
loope
lea
sbb
sub
aaa
iret
cli
iret
outsl
daa
gs
rcrb
pusha
decl
call
mov
out
stos
pop
das
scas
jmp
fcompl
and
ret
fsubrp
sarl
add
pop
out
js
movsb
lea
imul
test
jb
int3
mov
xorl
sub
push
fdivrs
sti
sub
scas
js
cmc
jp
cmpsl
jo
ds
data16
dec
fs
rol
mov
jns
bound
jmp
and
adc
test
shlb
sbb
repz
out
roll
pop
pop
mov
mov
cmpsb
gs
stos
aad
add
xchg
in
lcall
xchg
mov
rorb
popa
push
add
sbb
xchg
mov
mov
xor
push
mov
aaa
xor
sahf
movsl
adc
ja
mov
or
ja
pop
sub
dec
mov
daa
aas
pop
scas
cmp
sbb
in
add
add
mov
stc
aam
push
out
ret
cmc
xchg
sub
xchg
mov
dec
pop
lea
xchg
test
insl
jo
lods
popa
iret
xchg
out
sbb
mov
mov
popf
and
xor
ficoms
outsb
or
pushf
or
sub
push
pop
adc
push
ljmp
pop
inc
pop
hlt
ja
enter
sbb
leave
sub
adc
sbb
mov
decl
std
push
xchg
data16
adc
pop
inc
push
xor
add
sahf
cmp
repnz
dec
dec
dec
xchg
or
dec
fdivrs
leave
xchg
dec
lahf
dec
movsl
nop
jle
xchg
das
dec
stos
jecxz
ret
cmpsb
sub
xor
pushf
or
mov
inc
or
outsl
andl
adc
or
dec
pop
in
adc
adc
sbb
fdiv
shll
push
imul
jg
cmp
push
push
inc
push
loope
or
lahf
rcrl
lock
rclb
nop
js
sbbb
push
adc
lods
enter
repz
out
int
cmp
push
mov
dec
xchg
add
add
cli
add
arpl
sarl
dec
lds
inc
push
ret
pop
jmp
js
jo
int
leave
popa
lret
sub
popa
push
push
cmp
insl
movsl
push
fimuls
sub
mov
push
xchg
jl
fnstsw
pop
sub
imul
inc
cs
test
jmp
sbbb
xor
sbb
rorb
scas
dec
in
aaa
jo
and
xchg
inc
pop
pop
bound
and
rolb
adc
mov
add
das
ror
jae
or
jl
dec
add
jg
outsb
imul
int
mov
adc
mov
ja
xchg
movb
pop
loope
dec
lret
push
sub
aam
mov
mov
outsb
insb
push
sub
xchg
sub
push
xor
leave
in
in
ss
xchg
mov
pop
call
or
mov
lcall
lea
int
aad
aas
fsts
test
cmp
xor
pop
cmp
mov
fistpll
push
add
lods
inc
cli
sub
outsb
insb
fisttpll
mov
subl
notl
notb
jno
inc
in
test
sub
lcall
data16
xor
scas
lret
bound
sub
testl
add
mov
inc
jecxz
xchg
ja
int3
loop
dec
and
test
mov
or
pop
jo
jg
cli
xchg
xor
pop
mull
jo
insl
inc
push
xchg
ds
shll
and
jb
mulb
push
fdiv
push
ja
adc
sbb
pop
cmp
pop
js
mov
mov
mov
push
fimull
xchg
jle
scas
xor
popa
je
jae
add
loop
jecxz
fsubrl
sub
mov
jg
push
sub
scas
repz
and
mov
pop
outsl
inc
std
or
das
out
out
mov
out
pop
mov
insl
outsl
rolb
ret
movsl
pop
pop
notb
jns
push
mov
mov
push
mov
subl
fsubrs
pop
ja
sarl
rol
rorl
and
jmp
ret
jle
das
xor
pop
js
mov
int
xchg
push
mov
dec
test
cmp
mov
and
mov
mov
or
insl
jmp
and
push
daa
sub
mov
movsl
or
inc
insb
add
jns
sub
out
push
dec
dec
and
push
push
int3
cmp
fisubrs
roll
cltd
and
or
mov
sbb
mov
lret
arpl
mov
ret
jmp
pop
xchg
add
mov
or
dec
pushl
jle
out
adc
inc
or
movsl
pop
arpl
icebp
int3
push
out
orl
mov
aaa
arpl
scas
std
or
adc
fnstsw
or
push
jg
jb
add
push
mov
mov
rcll
add
int3
mov
or
es
jo
jae
lea
mov
and
test
mov
popf
icebp
popf
int
sub
push
jmp
lahf
hlt
sbb
popa
xor
lahf
jns
mov
in
cs
jnp
xor
shlb
dec
jle
frstor
inc
clc
mov
ss
pop
dec
or
negl
pop
push
cmpsl
out
push
lea
mov
outsl
sti
test
xor
push
movsl
fildll
adc
mov
out
or
int3
arpl
xor
ret
repz
lret
inc
adc
ret
imul
inc
add
arpl
mov
in
stos
cs
jge
or
out
rclb
or
lds
xor
inc
es
sub
adc
pop
xor
movsl
cli
push
jbe
andb
and
mov
push
inc
loope
repnz
ds
shrb
mov
push
push
pop
mov
imul
cmp
xchg
cwtl
cs
mov
xor
fdivrs
push
or
int
push
mov
or
xor
mov
xor
in
ror
jo
xchg
sub
inc
push
xor
ror
inc
sbb
inc
test
push
dec
scas
mov
pop
popa
push
lret
pop
in
dec
and
dec
push
mov
test
cmpsb
fsubrl
icebp
xchg
mov
push
cli
pop
xchg
push
cmp
jl
cmpsb
mov
push
mov
jecxz
mov
sub
ja
cld
mov
and
test
xor
enter
sbbl
cltd
roll
xchg
mov
inc
mul
pop
sbb
or
imul
fmuls
mov
cmc
rorl
adc
negl
lods
push
out
test
fistl
pushf
fnsave
loope
jl
insb
out
adc
or
add
scas
sub
and
jle
mov
jns
xor
cld
mov
test
xor
shll
je
lahf
das
ret
xlat
pop
mov
rorl
frstor
pop
xor
or
lea
cmp
fsubr
sti
xchg
jmp
loopne
fistpll
leave
sub
inc
xlat
cmp
mov
add
sub
add
pop
in
decb
or
pop
inc
jle
pop
insb
lock
mov
xchg
into
aad
cmp
mov
cmp
pushf
xor
lea
pop
mov
fcomps
pop
daa
lods
pop
test
shrb
lods
xorb
and
into
xor
insl
fisttpl
xor
cmp
sbb
int
in
add
stos
cs
call
aam
mov
cmp
fnstenv
pop
push
adc
inc
jg
std
mov
push
mov
in
imul
test
add
mov
sbb
mov
hlt
cs
push
jecxz
psllw
icebp
scas
push
add
add
sub
mov
sbb
popf
ret
push
mov
fsubs
insl
inc
aaa
add
jo
pop
js
push
rcll
mov
adc
nop
daa
pop
adc
scas
inc
xor
enter
push
jae
inc
pop
push
cwtl
aam
cltd
pop
fdivr
add
lds
fwait
cmp
aaa
inc
dec
xlat
jg
cwtl
das
and
je
ret
mov
mov
sti
cmovs
aas
dec
or
jmp
mov
mov
mov
btc
and
jmp
adc
sbb
mov
sbb
insl
pop
push
mov
or
sbb
push
sbb
dec
popa
xor
inc
fdivr
pop
or
popf
stc
push
aaa
cmp
add
xor
bound
testb
loope
push
repz
push
mov
jmp
fbld
pop
loop
mov
negl
jle
fwait
jbe
filds
aam
cmp
leave
xor
sar
push
sbb
punpcklwd
test
mov
int
loop
mov
sbb
cmp
push
sbb
push
les
testl
pop
adc
clc
mov
sahf
aad
adc
js
lds
fadds
pop
or
addr16
jno
stos
call
cli
xor
pop
es
popa
cmpsb
add
sub
and
es
mov
inc
pop
push
movsl
mov
sub
pop
adc
aam
negb
cmp
notb
mov
insl
loope
xchg
or
pushf
sub
xchg
sbb
adcl
sbb
dec
in
pushf
inc
push
nop
lock
movsl
mov
cltd
shll
dec
mov
cld
arpl
cmp
cwtl
pop
and
lods
add
jne
test
jns
test
aam
pop
cmp
enter
stos
mov
loope
xor
jae
sub
movsl
into
inc
mov
std
sub
out
es
mov
clc
xor
or
inc
loopne
sbb
dec
push
xor
or
fcoms
inc
add
arpl
lret
popf
fisubs
cmp
jle
add
xor
mov
inc
sub
and
arpl
scas
out
pop
lret
test
sbb
adc
fldcw
les
popf
xor
ret
xor
outsl
sahf
or
pop
and
dec
shrl
rcrl
mov
ret
rorl
das
fs
ret
aam
dec
lock
outsb
add
iret
cmp
icebp
jno
inc
xor
addr16
push
mov
sbbb
cltd
pusha
mov
nop
push
mov
cmp
pop
mov
jg
loop
popf
lret
aam
cmp
in
rolb
ja
lret
loopne
jnp
inc
xchg
gs
jbe
fwait
das
adc
insb
test
and
gs
int3
sub
pop
or
inc
pop
ljmp
add
inc
fs
cs
clc
imul
cmp
inc
sub
subb
popa
push
lahf
call
cwtl
setle
test
std
mov
jne
aas
movsl
cmp
and
xchg
aaa
stc
cmpsb
dec
cmpsb
cmp
mov
lock
inc
fstpl
inc
fsubrs
cs
popf
scas
testb
pop
lock
or
movsb
rcr
mov
cmc
mov
xor
lock
dec
xchg
sub
xlat
outsb
stos
mov
push
in
movsl
int
aaa
sarl
mov
or
call
mov
and
mov
mov
ds
scas
and
mov
mov
inc
test
and
xchg
xor
sbb
pop
icebp
cmpsb
mov
push
ljmp
xor
push
xchg
and
repz
adcb
push
shrl
cmp
lods
in
daa
fcoms
push
in
lods
out
pop
xlat
mov
xchg
std
adcl
pop
and
dec
insb
testb
ret
mov
test
ljmp
lret
aas
loop
jnp
pop
jno
xor
inc
test
and
stc
shlb
add
cmpsl
sti
and
pop
mov
jg
popf
pop
xor
cmpsb
jge
fstpt
pop
or
pop
insl
mov
jae
and
xor
pop
fst
sbb
movsb
dec
pusha
xchg
jae
les
mov
push
dec
loope
jb
dec
fs
sahf
out
aad
jl
dec
repz
pushl
push
or
push
inc
inc
enter
into
in
inc
lret
rcl
sbb
or
push
mov
out
jns
inc
fdivl
pop
push
or
push
arpl
out
insb
aas
shlb
or
xchg
mov
mov
sti
adc
xor
add
cmpsl
cmp
or
push
fnstcw
mov
and
cmpsl
and
sbb
sahf
and
pop
iret
jb
sub
outsb
jno
cli
and
xchg
nop
add
or
jbe
push
push
mov
rorb
cli
hlt
sub
mov
pop
imulb
inc
in
sub
call
jb
lods
or
mov
mov
xchg
push
jb
pop
jae
xor
sti
xchg
fwait
push
setae
push
lret
aas
jp
jecxz
imul
jl
gs
imul
int3
adc
pop
iret
imul
sub
mov
sbb
inc
adc
iret
inc
mov
lret
mov
pop
repnz
fsub
insb
addl
adc
pusha
das
add
mov
mov
xchg
push
mov
inc
scas
pop
sahf
push
lods
push
ljmp
cltd
xor
pop
mov
aad
xor
adc
jecxz
mov
cmp
aad
sub
pop
sti
mov
jae
xchg
xor
dec
and
jle
push
je
xchg
repz
lret
jae
fs
test
outsb
repnz
dec
adc
sti
and
scas
and
cltd
fstl
sub
mov
inc
pushl
in
and
sub
enter
mov
ret
repnz
or
scas
aaa
cld
add
sub
inc
mov
lret
stos
fdiv
push
push
in
push
xchg
jno
inc
lea
fists
mov
fsts
mov
add
mov
stos
ds
sbb
push
into
add
aas
xchg
gs
push
xchg
test
mov
add
subl
or
aad
jno
pop
inc
sub
dec
push
xor
sbb
ret
jne
ret
push
es
addr16
mov
sub
xor
les
dec
pusha
pop
sahf
xchg
aam
push
xchg
adc
gs
sub
jle
aaa
es
mov
into
into
mov
cld
sti
mov
insl
test
sti
push
shll
sbb
jl
sub
aas
mov
insl
mov
cs
jle,pn
scas
xchg
sbb
cs
dec
sbb
jbe
out
shlb
lret
loopne
jmp
aam
ret
fildll
or
add
xor
adc
xor
fptan
shl
out
outsl
mov
sbb
mov
rol
xchg
int
add
popa
add
out
imul
pusha
test
mov
pop
push
lds
push
jle
ret
popa
fstp
pop
dec
sarl
fxch
sub
cld
jbe
and
dec
movsl
cmp
push
xchg
jo
into
repz
add
stos
cwtl
sub
fdivl
bound
insb
lret
jb
jp
mov
push
icebp
mov
pop
outsb
fisttps
loope
jl
sub
aam
fistpll
cltd
out
add
cmp
out
mov
xchg
xchg
xchg
and
outsb
sbb
fistpl
inc
es
xor
push
sub
jg
cmpsl
mov
push
mov
mov
mov
lods
jp
jne
and
jbe
pop
in
test
jmp
jmp
jb
push
jae
std
cmpsl
push
sbb
cs
hlt
add
pushf
sub
fadds
jns
and
xor
xchg
cmp
loop
jp
nop
aad
imul
scas
outsl
enter
lea
xchg
mov
cmpsb
lea
sub
roll
sub
push
mov
pop
and
push
je
test
cmp
mov
fistpl
rclb
pop
adc
dec
adc
shl
sbb
mov
cmp
sub
rcrb
clc
das
fwait
lods
mov
stc
xchg
lahf
mov
out
rcrl
add
ja
adc
out
ljmp
add
enter
push
inc
arpl
daa
hlt
cmp
ror
icebp
nop
out
xor
scas
popa
aaa
lcall
dec
dec
gs
clc
in
sub
in
xor
jbe
aaa
in
in
mov
pop
lea
adcl
xor
mov
cltd
push
add
popa
rolb
fstpl
sub
int3
ja
gs
mov
or
jb
loope
lods
and
push
mov
cmpsl
pop
jl
xor
sti
lret
xlat
dec
scas
inc
clc
cmpsb
pusha
or
loope
add
stc
jb
orb
xor
xchg
push
or
aaa
push
imul
cltd
jo
in
in
dec
and
scas
push
inc
popa
cmp
aaa
cwtl
pop
xchg
mov
lods
jl
add
aas
xchg
ss
loope
adc
stos
add
sub
xor
xor
and
jne
xor
xor
jbe
fsubrs
sbb
pop
and
shr
cltd
jl
stos
or
scas
mov
xor
sub
push
hlt
pop
xor
fildll
mov
push
fiadds
fisubrl
in
mov
xchg
daa
xchg
adc
test
mov
subl
sub
jecxz
xchg
aam
outsb
es
aad
icebp
add
xor
loop
inc
pop
mov
adc
adc
sub
stos
sub
sub
cmc
dec
jbe
mov
jae
or
fs
adc
shrl
xlat
or
xlat
daa
movsb
dec
ret
data16
dec
mov
dec
test
mov
out
shrb
add
jbe
adc
cltd
pop
jg
outsl
cld
mov
insl
jle
sub
jg
sub
cli
inc
stos
enter
inc
popf
or
mov
scas
mov
neg
imul
scas
push
add
icebp
jle
jmp
lea
xchg
push
mov
jb
loope,pt
adc
jne
cmp
imul
mov
fcomi
sbb
frstor
stos
xor
add
mov
loopne
inc
bound
mov
inc
hlt
push
inc
push
push
mov
or
mov
cltd
cmpsl
movsb
pop
addl
stos
rol
xlat
std
fdivrl
add
cwtl
pop
inc
sar
inc
sbb
sbb
mov
and
xor
push
mov
xor
inc
pop
sub
test
repnz
cmc
adc
mov
fnstenv
dec
add
cmp
push
shll
push
or
int3
incl
js
iret
mov
out
push
arpl
and
push
int
rcl
lock
xchg
incl
xchg
sti
mov
imul
push
xchg
pop
fcmovbe
push
mov
gs
stos
lds
cmc
xchg
push
shlb
in
cli
movsb
fstpt
inc
jmp
lds
fsubrl
push
mov
adc
cmpsl
push
sub
lahf
mov
int
sub
sub
sbb
aam
sti
inc
inc
mov
xchg
cmp
pop
jl
jo
stos
xlat
lahf
mov
cli
lds
repnz
lods
lahf
xor
jmp
inc
shrl
cmpsb
dec
dec
xchg
jbe
aam
push
push
out
in
das
inc
movsb
xor
fucomi
mov
pushf
popa
dec
and
inc
negl
loope
in
push
int
idivb
mov
pushf
loope
lret
call
stc
and
add
pop
das
jb
les
pushf
loop
incb
xchg
decl
jmp
cwtl
das
dec
ret
and
ret
sub
fbstp
mov
sarb
pop
aam
dec
mov
sbb
ficoms
or
push
jbe
mov
xchg
out
in
aam
stc
je
jo
daa
aam
xor
or
adc
rcrb
repnz
jecxz
inc
jmp
leave
push
inc
popl
inc
push
subb
sbb
outsb
adcb
lock
fwait
pop
fwait
mov
cmc
out
mov
cwtl
jle
movsl
mov
push
out
je
mov
cmp
dec
dec
hlt
mov
push
lcall
in
mov
pop
pop
jb
or
stos
shrb
test
pop
mov
mov
sarb
pop
cld
aas
imul
pop
mov
dec
adc
or
jle
push
lcall
and
out
push
pushf
sbb
pop
pop
pusha
push
out
cmp
in
ja
fwait
jne
fsubr
mov
mov
test
xchg
xchg
xchg
add
lods
int3
xchg
jnp
push
push
fst
jmp
sti
lret
sub
dec
mov
pop
xchg
lret
clc
cmp
scas
pusha
aam
push
dec
mov
nop
cwtl
inc
stos
leave
sbb
ret
stc
adc
repz
ret
cmp
push
icebp
pop
sbb
pop
sbb
pop
inc
and
fdiv
push
sahf
comiss
dec
and
fldenv
insl
pop
aas
push
mov
leave
aad
clc
ds
push
inc
xchg
or
inc
mov
mov
add
add
xchg
push
mov
sti
test
sarb
adc
cmp
mov
icebp
mov
inc
dec
dec
jmp
mov
pop
jg
fcomi
repz
movsb
mov
mov
ljmp
xchg
mov
test
sub
bound
ds
enter
pusha
cli
push
sbb
sahf
adc
inc
ret
xor
idivb
inc
mov
insb
mov
cmp
mov
xchg
cmc
mov
shll
dec
mov
loope
xlat
lods
mov
inc
pop
out
das
outsb
jge
cmp
mov
loopne
cmp
and
pop
js
dec
sahf
mov
inc
pop
je
fsubr
sub
je
in
push
cmp
fdivrl
push
fstpt
popa
cmp
jnp
je
nop
mov
mov
pusha
das
inc
inc
push
gs
int3
xor
sbb
or
cmp
incb
sbb
adc
mov
popa
sbb
ds
pop
pop
filds
in
mov
add
out
and
or
mov
dec
or
scas
adc
inc
in
xchg
daa
test
rcrb
add
leave
lods
mov
fs
sub
mov
lds
push
push
mov
fisttpl
popa
mov
rcrl
inc
cltd
cmp
out
add
push
jnp
sub
jno
sahf
lret
in
nop
jmp
jae
push
mov
fsubr
xchg
scas
mov
pop
dec
lea
mov
add
scas
dec
dec
fisubs
mov
movsb
test
pop
xor
mov
mov
int
pop
loop
in
rcr
cmp
cmp
bound
dec
add
push
mov
jno
cmp
mov
lock
mov
fwait
push
loopne
loopne
push
stos
rcrl
mov
ficomps
pop
pop
inc
jnp
icebp
ljmp
and
daa
cli
test
imul
mov
push
xlat
dec
sbb
nop
stos
pop
icebp
js
popa
add
jae
subl
inc
adc
sbb
lcall
lea
jge
test
xchg
mov
arpl
and
mov
repnz
lock
daa
push
mov
dec
mov
mov
add
push
mov
int
sahf
cmp
fwait
cmp
aad
das
mov
dec
popa
mov
push
icebp
push
lock
addr16
repz
jle
shll
sbb
push
jmp
cmp
icebp
fldl2t
add
cmpsb
sbb
push
nop
xchg
ret
loopne
push
in
pop
ret
fnstcw
mov
sbb
xlat
pushf
fstps
neg
sub
adc
or
lret
jp
ret
js
or
or
sahf
loopne
add
sbb
pop
push
sub
pop
lret
into
fsubrl
jge
lods
test
jmp
xor
mov
shrb
lea
pop
test
add
sarl
nop
in
out
mov
pushf
repz
dec
xchg
ret
add
sahf
xchg
out
dec
loop
inc
cwtl
mov
aad
loop
xor
pushf
xchg
aam
adc
jecxz
cmpb
add
rolb
aam
ds
lods
std
loop
sub
stos
fnstcw
fcoml
push
sahf
ss
in
jnp
call
jbe
cmp
xchg
jecxz
test
adc
sbb
arpl
mov
popa
mov
ucomiss
sbb
add
hlt
dec
cmpsl
pop
cmp
pop
mov
in
loope
cmpsl
push
jmp
pop
cwtl
pop
icebp
dec
mov
mov
jle
pop
iret
jno
jl
push
jbe
pop
fs
rcl
xor
adc
sub
daa
test
fistps
dec
add
jge
pop
mov
test
jle
shlb
lds
dec
cwtl
inc
fimuls
loop
ljmp
inc
xchg
fcoml
jmp
aam
pushf
daa
imul
js
mov
jno
jle
sub
test
cli
fldcw
push
add
inc
inc
sub
rcrl
pushf
adc
and
mov
cmp
or
adc
les
xchg
in
shrl
pop
lds
lahf
outsl
sub
push
mov
enter
push
scas
out
push
cmpl
stos
sub
movsb
push
sbb
push
xor
xor
jns
mov
adc
bound
xchg
addr16
inc
outsl
popf
nop
gs
mov
inc
bound
lret
dec
mov
and
or
push
pushf
sub
push
shl
fnsave
mov
xchg
sti
xchg
leave
jl
add
arpl
loopne
out
cs
pop
jl
dec
pop
jne
jge
call
icebp
aam
mov
sbb
xchg
sbb
sbbb
xchg
push
mov
cmp
inc
in
and
idivb
mov
pop
cmp
inc
out
rcr
dec
out
ficoml
add
cmp
mov
mov
inc
mov
pop
fidivrs
xchg
adc
jb
into
jae
ja
adc
data16
repnz
out
stc
pop
cmp
jl
hlt
mov
aaa
mov
int
xchg
cmp
lock
mov
leave
jns
push
stos
call
xor
and
iret
sbb
scas
sarb
enter
cmp
int3
lret
dec
nop
ficomps
cmp
mov
shll
jmp
ret
sbb
or
test
cs
add
lods
and
divb
dec
xchg
roll
mov
cs
je
jno
xchg
xchg
repz
sbbb
mov
cmp
sbb
dec
pop
cli
repz
aaa
or
sub
mov
cltd
ret
movsl
or
mov
ret
adc
and
inc
arpl
lret
sbb
cmpsb
jg
xor
push
or
cld
stos
mov
aam
mov
data16
adc
ss
inc
scas
xchg
dec
sbb
cmpsl
push
shlb
js
cmp
aam
mov
sbb
jns
pop
mov
xchg
sbb
jo
pop
fisubs
lcall
inc
cld
sbb
lods
sub
pop
sub
lcall
rorb
fwait
mov
shll
xrelease
out
test
inc
into
xor
fists
out
cltd
mov
shll
mov
dec
popa
and
out
pop
std
leave
or
mov
call
sahf
jg
adc
push
fistpl
jmp
lea
jne
cmp
testl
das
jle
inc
ret
jno
dec
jmp
dec
in
hlt
adcb
iret
xchg
ja
fidivl
adc
in
push
imul
push
sarl
lret
xchg
add
xchg
test
nop
ret
and
mov
pusha
adc
or
inc
shll
into
out
adc
int3
lret
lods
fildl
pop
icebp
subb
xchg
hlt
adc
imul
dec
add
movsb
inc
gs
push
sub
lret
add
ss
xchg
fisubrl
ljmp
jg
or
ds
std
xlat
orb
cmp
icebp
insb
jmp
sti
jbe
pop
dec
out
repnz
dec
adc
jl
aam
jno
pop
scas
xchg
xor
adc
cwtl
test
xor
and
add
or
lea
cwtl
sti
jno
dec
lahf
popa
scas
mov
cmp
cmc
add
xchg
adc
inc
pop
sbb
mov
or
adc
and
sbb
popf
mov
hlt
shrb
ret
jmp
jge
sbb
push
inc
call
pushf
fs
inc
arpl
cmp
outsb
inc
dec
mov
out
add
test
mov
and
sbb
lock
xchg
lcall
mov
rcll
mov
dec
dec
pop
and
xor
push
repnz
js
sub
pop
cmpsl
sbb
and
inc
pusha
or
pop
mov
shr
jg
test
dec
dec
or
jp
clc
sahf
int3
pop
push
jo
popa
inc
sub
sub
push
test
test
outsl
xchg
sub
inc
frstor
push
loopne
aas
pop
sbb
cwtl
lods
lret
mov
cwtl
mov
ret
aam
scas
dec
and
ss
fsts
test
lahf
imull
cli
mov
inc
pusha
inc
insb
mov
sub
arpl
dec
stos
insl
repnz
outsl
popf
loop
shl
xor
jle
std
es
pop
mov
test
fwait
lods
jp
and
dec
jmp
jp
inc
inc
test
rdmsr
icebp
or
das
out
inc
fadds
and
pop
push
out
add
add
addr16
test
in
jns
fwait
cwtl
cli
xchg
clc
inc
out
movsb
sbb
std
shll
or
rcrb
pop
icebp
fisubrs
xchg
jo
test
inc
xchg
dec
outsb
xor
inc
xor
xor
xchg
les
dec
add
mov
add
mov
push
push
pop
into
cmpl
push
inc
pop
ljmp
pop
rcr
jae
add
mov
stc
nop
test
dec
pop
xorb
dec
inc
bound
push
sub
in
xor
cwtl
sbb
shll
add
in
xor
mov
sbb
push
shrb
or
xor
jae
xchg
mov
jbe
and
aaa
sbb
inc
jle
pop
mov
fidivl
bound
sbb
pop
sti
and
std
or
pop
xor
cmpsl
adc
cmp
jge
out
sub
cld
imul
je
xchg
pop
dec
lods
xlat
filds
add
lret
push
mov
cltd
jmp
andl
clc
popf
pop
jo
xchg
mov
add
in
js
addr16
xchg
jge
adc
mov
mov
fs
push
faddp
fstps
add
jne
test
push
stos
test
aas
inc
push
dec
and
fldl
inc
lods
mov
test
cmpsl
sbb
sbb
mov
and
jle
stos
jns
adc
fcoml
push
cmp
sbb
inc
inc
and
push
stos
cmp
push
call
lods
mov
loopne
add
addr16
push
adc
stc
or
dec
shlb
shll
sbb
cmp
iret
push
adc
mov
add
fsubr
mov
mov
xchg
daa
je
mov
roll
push
scas
mov
rcrl
mov
push
push
enter
mov
dec
mov
xorb
stos
lea
sbb
nop
hlt
movsb
int
fnsave
jo
mov
pop
in
fs
mov
push
inc
loope
into
push
js
xor
imul
in
aaa
push
fidivrl
adcb
mov
push
sti
mov
push
fwait
dec
add
out
sahf
inc
data16
outsl
push
xor
out
sti
cmp
out
pop
int3
test
mov
lret
xchg
test
sbb
sub
fcmovne
outsl
sub
test
and
xor
xchg
xor
inc
lea
sbb
cmp
push
and
cli
jne
sbb
jecxz
addr16
ficompl
mov
lds
cmpsb
rcrl
xorl
mov
loop
fldcw
out
cwtl
inc
push
add
fstp
out
hlt
sbb
movsb
aam
lret
mov
out
push
lods
push
mov
mov
sbb
mov
lret
movsl
paddusb
push
stos
jl
sub
ss
pop
adc
je
int
mov
push
cmp
ret
ljmp
js
pop
push
sahf
mov
gs
fs
adcl
mov
or
pop
ret
in
clc
repnz
and
sti
cmp
mov
jno
pop
and
mov
adc
fistpl
rep
lcall
sub
dec
sbb
jecxz
pop
lahf
sub
cmp
call
add
cmpsl
xchg
push
movl
jae
cmp
push
dec
nop
push
mov
mov
iret
pop
sub
sbb
mov
insl
aas
test
jl
cmp
pop
mov
jmp
cli
pop
sub
xor
lods
and
loopne
addr16
nop
scas
ror
pop
sub
insb
mov
xchg
sub
adc
xchg
shll
int3
jle
jne
lahf
push
outsb
mov
scas
lods
test
pop
or
xchg
push
sub
adc
popf
aad
cli
pop
mov
jmp
pop
lods
jmp
mov
add
frstor
fidivl
outsb
andb
jno
jno
push
mov
adc
push
fdivr
sbb
pop
lock
cmpsl
sub
js
and
adc
mov
repz
cmc
sub
xchg
insl
imul
and
ds
out
lahf
outsl
pop
mov
dec
out
data16
popa
mov
sbb
sub
test
push
jo
popa
leave
fimull
ljmp
pop
push
pop
shlb
adc
dec
test
adc
in
clc
popf
dec
jb
cmp
mov
push
mov
xlat
xor
ja
push
cmpsl
test
lret
stc
xor
aaa
or
dec
adc
mov
pop
adc
push
jae
sbb
sub
pusha
pop
xor
iret
pop
out
je
cmp
cmp
mov
hlt
arpl
and
insb
test
lods
mov
push
mov
repnz
lea
mov
cvtdq2ps
lea
xchg
jno
std
push
les
pop
mov
add
jo
imul
mov
pop
lds
aam
xchg
pop
and
mov
ds
test
or
add
jp
stos
jge
jns
rcrl
adc
pop
outsb
fbstp
pop
pop
xchg
and
pop
icebp
add
push
jp
lret
cmpsl
xchg
and
loopne
sub
insb
cmp
mov
ret
or
mov
loopne
les
mov
pop
pop
mov
sbb
push
or
sub
pusha
jg
rol
aam
notl
repnz
cld
scas
addr16
fcomps
enter
cwtl
addr16
push
fwait
leave
call
push
outsb
mov
pop
jge
mov
rcr
add
or
pop
imul
in
decb
stc
jge
sub
ret
cmpb
test
scas
sbb
sub
popf
cmpsb
push
dec
or
or
imul
mov
iret
fistpl
in
pop
mov
inc
loopne
jge
outsb
lea
ret
loopne
or
movsl
push
add
push
mov
out
repnz
je
pushf
inc
pop
and
ljmp
cmp
lahf
ljmp
xorl
pop
iret
mov
scas
push
frstor
jbe
das
cmpl
adc
push
aam
sbb
mov
je
test
insl
iret
popf
out
sarb
cwtl
push
cltd
call
pop
xor
jge
out
lcall
push
daa
movsb
add
push
outsl
loop
cmpsb
cld
pop
cwtl
dec
js
adcl
in
arpl
xor
int
xchg
sbb
add
ljmp
xor
xlat
jl
cwtl
repz
fmull
pop
ljmp
loopne
mov
and
int
dec
repz
daa
mov
clc
popl
cmp
jg
inc
pusha
lcall
pop
stc
push
and
mov
xchg
cli
or
lcall
dec
aas
mov
movsl
js
push
inc
int3
and
outsl
push
pushf
int
adc
cli
or
sbb
lret
imul
sbb
mov
cltd
mov
or
jne
mov
adc
adc
jle
aad
cmp
negb
lods
cmp
adc
mov
insl
cmpsl
pop
mov
fwait
sub
ret
fimuls
cld
movsl
cmp
sub
cs
inc
xor
xor
fstl
cmp
scas
sbb
iret
cs
pop
adc
sbb
or
loop
add
pushf
xchg
sub
mov
jne
mov
cmp
xor
outsb
fs
sbb
js
adc
andb
sub
xchg
mov
or
es
sbbl
addr16
rcrl
push
daa
popf
fsubrs
rorl
in
dec
push
push
clc
daa
or
cli
pop
sub
or
lret
mov
mov
negl
aas
call
in
push
mov
in
movsl
repz
dec
and
aad
or
test
out
pop
pushf
add
adc
fidivrs
outsb
xchg
test
sahf
push
jmp
push
lods
jb
cmp
sbb
add
inc
xchg
mov
jge
push
mov
dec
popa
mov
pushf
and
lods
sbb
je
psrlw
sbb
aad
xlat
cli
add
scas
stc
sub
cmp
movsb
push
in
push
movsl
in
int
cli
outsb
leave
mov
push
add
fwait
cmp
dec
push
inc
mov
lods
addr16
xchg
inc
push
add
es
stos
mov
jbe
cmp
stc
nop
cld
or
iret
pop
jg
cmpsl
cmp
sub
mov
in
cmp
inc
push
sub
jns
ret
popa
xor
dec
sbb
push
fbld
cmpsb
xor
fists
lahf
sub
xchg
adc
aam
shll
cltd
sbb
int
jmp
sbb
push
push
cmc
pop
sub
push
sub
inc
testb
icebp
fs
and
xor
sbb
negl
imul
loop
in
push
sahf
and
inc
and
xchg
and
daa
push
sub
icebp
fdivs
js
loop
loope
imul
out
test
add
testl
movsl
dec
inc
mov
sbb
incb
mov
mov
out
pop
stos
jbe
mov
xchg
ret
or
movsb
pop
add
shlb
and
push
loop
xor
in
add
and
cltd
pop
inc
data16
mov
fnstsw
xchg
cs
mov
xor
push
mov
mov
fsubl
lods
push
lock
mov
outsb
out
rorl
je
in
fucomip
push
loope
ds
and
jle
inc
mov
mov
sub
loop
adc
dec
sbb
mov
push
test
iret
jbe
cmc
and
daa
loopne
push
test
ds
mov
data16
sbb
test
adc
xorl
add
add
jg
add
mov
sbb
push
ljmp
jno
ljmp
rolb
mov
jne
data16
mov
cmp
adc
pop
rcrl
fsubl
mov
lret
and
jbe
lea
icebp
xchg
pop
idivl
lahf
lock
call
mov
stos
andl
gs
imul
mov
jmp
test
dec
dec
bnd
in
push
pop
jbe
lret
mov
std
adc
push
or
jg
pop
imul
mov
jg
andl
into
inc
or
adc
loope
mov
mov
mov
xchg
cld
out
push
stos
sti
cmpps
sub
mov
loopne
sar
xchg
in
in
or
subl
test
repz
andb
push
insl
sbb
aad
sahf
xor
notl
mov
pusha
push
sbb
test
mov
dec
imul
out
xor
jmp
aas
dec
lret
xchg
shrl
xor
aaa
sbb
addr16
out
push
pop
fisttpll
or
xor
sbb
and
push
js
test
ljmp
push
jmp
out
in
push
mov
sbb
or
mov
xor
ja
xor
fs
mov
lods
inc
cmp
lcall
subl
inc
testl
inc
mov
dec
cmp
cmp
imul
lods
hlt
add
leave
or
out
jg
push
xchg
pop
pop
jmp
clc
xor
fadds
push
test
push
sti
and
push
mov
and
add
fnstenv
notl
scas
andb
addr16
mov
les
cli
jle
sbb
in
cld
push
jo
pop
pop
dec
mov
mov
jmp
mov
mov
push
sub
out
jl
daa
sahf
stos
xor
ljmp
mov
fldl2t
subb
sub
les
repnz
adc
rcrl
push
mov
lds
mov
rorb
clc
out
imul
mull
ret
pop
cmp
lcall
sub
pop
sbbl
adc
pop
pop
cltd
mov
inc
out
movsb
sbb
iret
stos
lret
mov
fwait
outsl
xchg
mov
push
sub
xchg
mov
mov
dec
sar
jnp
popf
stc
dec
mov
lea
out
ret
xchg
xchg
pop
cmp
xor
dec
and
pop
add
xor
sub
movb
ftst
nop
pushl
lea
mov
scas
fidivs
jl
jns
dec
jg
lcall
addr16
int3
js
and
test
nop
stos
dec
movsb
push
shl
mov
xor
cltd
xchg
daa
cmp
jle
mov
test
push
lahf
ficompl
test
push
cmp
ljmp
inc
outsl
jmp
out
into
shll
pop
or
ss
sub
mov
and
jmp
and
jl
and
push
xchg
jmp
sbb
aas
int
push
insl
adc
popf
jns
mov
or
sbb
and
cmp
lock
movsl
idivl
aam
or
or
fucomp
sbb
mov
jge
pop
mov
mov
jne
inc
std
aam
test
push
jbe
mov
add
inc
movsl
and
int
mov
aaa
lahf
shl
icebp
cwtl
lods
dec
call
dec
xchg
pop
sahf
push
pop
mov
sahf
cmp
jnp
mov
add
lds
push
cmp
rcr
lea
mov
test
int3
pop
cmpb
cmp
inc
mov
mov
les
std
inc
clc
mov
adcb
jg
mov
cld
cwtl
cmpsl
out
cwtl
or
dec
xchg
push
popf
pop
fbstp
fbstp
cmp
out
lcall
dec
push
in
cltd
call
leave
xorl
inc
xlat
add
ss
shlb
out
orb
add
dec
push
hlt
fisubrl
mov
cld
out
cmp
pop
test
inc
sbb
pop
cmc
cmp
pop
add
pop
and
mov
pop
jecxz
stos
sbb
xchg
in
fsts
pop
popa
sbb
jno
cmp
jnp
sti
int3
mov
ds
add
xchg
adc
jnp
mov
ss
sub
jnp
cs
test
xor
test
add
push
repz
andb
shlb
mov
in
mov
pop
ja
add
loop
cmpsl
cld
out
xor
mov
cmpsl
out
cwtl
out
pushf
loopne
int
cmp
cmp
push
mov
lock
cmp
hlt
mov
lods
lret
sti
popf
inc
shrl
mov
les
cmp
pop
pop
pop
subl
pop
in
mov
push
and
mov
fucomp
inc
adc
movl
std
sub
xor
das
cmp
pusha
loop
inc
roll
shll
jmp
lea
jne
jle
scas
push
call
inc
push
daa
fadds
fmuls
ficoms
adc
inc
pop
imul
cmp
dec
jp
sahf
ficoml
or
fsubl
ficompl
push
jne
inc
rol
mov
mov
scas
or
sbb
push
fidivs
pop
sub
lods
fs
arpl
add
sub
rep
inc
and
hlt
lret
xchg
loop
leave
in
in
ljmp
dec
shll
mov
das
sbb
daa
sub
mov
mov
rclb
movsl
orl
in
inc
lahf
inc
adc
daa
mov
mov
bound
fwait
jecxz
sti
incb
movsb
int3
pop
ror
mov
loop
mov
ficoml
adc
sahf
cmpb
test
and
mov
ret
imul
gs
xorl
and
iret
test
mov
push
inc
fldcw
inc
sti
repz
lcall
sahf
lea
mov
mov
jb
mov
dec
stc
in
addl
mov
inc
daa
inc
add
in
sbb
jge
outsl
sub
insb
outsl
xor
stc
xadd
sbb
add
sub
or
sub
mov
xor
mov
stos
adc
adcl
mov
mov
loope
mov
dec
adc
mov
daa
dec
sysret
sub
sbb
movsl
pop
fistps
insl
add
fwait
cs
shrl
pop
cmp
mov
mov
pop
test
shll
xchg
inc
addr16
shll
pop
push
jo
or
std
stos
pop
scas
addb
js
adc
jne
sbb
xor
repnz
cld
lcall
push
fisttpl
mulb
mov
incl
mov
jmp
int3
xor
jbe
xor
push
inc
cld
dec
lret
test
dec
jp
push
jmp
add
mov
sub
pop
adc
ss
testl
es
mov
pusha
inc
lea
add
xchg
jl
rcr
jno
xchg
pop
test
sbb
adc
out
jp
aas
in
jo
jle
push
xchg
dec
pushfw
int
pop
sti
or
push
outsl
mov
je
rcl
push
inc
or
mov
pop
push
sub
aaa
mov
sbb
push
repnz
fisubl
xchg
jnp
orl
xchg
pop
mov
repnz
jbe
pop
sub
or
inc
shlb
popa
xor
push
mov
cmp
ljmp
bnd
dec
jge
ja
adc
sub
into
push
mov
xor
movsl
in
shl
and
pop
add
call
pushf
xor
xor
push
adc
lret
cmp
mov
pop
mov
push
fdivs
push
pusha
fidivs
test
lcall
mov
enter
jns
jg
daa
inc
mov
div
jne
jno
xchg
push
dec
pop
mov
loopne
ljmp
loopne
scas
cmp
or
lock
add
xchg
fdivrs
sbb
inc
test
xor
stos
mov
add
mov
orb
scas
mov
pop
cs
hlt
dec
inc
sbb
inc
inc
push
in
ret
adc
pop
dec
aaa
daa
icebp
fcoms
negb
push
mov
cmp
bound
test
es
iret
sbb
fdivl
cmp
int
cmp
push
pushf
xor
fidivrl
xor
and
mov
je
test
sbb
jno
adc
sub
pop
sahf
es
pop
mov
shrb
jp
or
and
notl
fstps
pop
rol
cmp
testl
push
call
in
rep
ret
adc
jbe
insl
rcl
and
adc
shrl
repnz
in
imul
push
in
dec
hlt
mov
adc
push
pop
mov
adc
cmpsl
sbb
cmpl
push
xor
pusha
ja
adc
pop
pop
rcrl
ja
sbb
mov
push
xor
in
mov
jl
imul
cmp
xchg
sbb
imul
in
xchg
out
test
leave
lret
lock
leave
icebp
outsb
add
popa
hlt
test
cmp
arpl
out
int3
out
cmpsl
addr16
repnz
int3
mov
sub
int
sbb
cmp
and
inc
cwtl
xchg
dec
xor
inc
dec
xlat
xor
pop
xor
cld
inc
fcoml
jb
sbb
aam
loope
std
push
push
gs
in
in
or
daa
notb
or
insl
test
mov
scas
mov
lret
mov
ljmp
sahf
cmpsl
add
aam
mov
xchg
das
stos
icebp
aad
pop
out
jg
mov
cmp
fsub
jg
repz
mov
cs
ss
inc
shlb
dec
out
push
in
dec
mov
js
inc
out
icebp
adc
jg
pop
lea
xor
loop
stc
fcoms
jl
fcoml
push
jo
push
and
xchg
add
cli
or
das
push
loope
addr16
sub
lret
sbb
fcompl
out
sbb
add
loope
mov
jg
in
xchg
cmp
or
adc
add
fadd
mov
xor
cmpsb
mov
testb
movsl
xor
stc
scas
xchg
ds
mov
rcr
stc
adc
fstpt
mov
lahf
mov
fbld
mov
push
adc
rcl
jae
xor
dec
ficompl
mov
add
gs
imul
shll
inc
inc
push
pop
ljmp
push
lods
and
mov
push
sbb
pop
aaa
lret
es
addr16
test
fstp
pop
inc
push
ds
fnsave
inc
int
ljmp
aam
cmp
in
mov
pop
add
jns
lods
loope
pop
es
call
out
jo
fwait
xchg
data16
daa
lcall
and
cmc
mov
xchg
cmp
adc
adcb
fstpl
mov
cmp
push
mov
mov
inc
sti
push
jmp
aaa
aam
pusha
inc
pop
loope
mov
pop
aas
int3
mov
movsl
and
add
xchg
shrb
dec
out
das
loop
push
cli
inc
imul
cmpsb
dec
and
aad
insb
jle
ret
adc
adc
xchg
test
mulb
into
xor
xchg
clc
mov
loop
jae
xor
cmpsb
adc
mov
jae
shll
mov
cltd
insb
imul
and
add
mov
andb
mov
insl
test
loope
je
pop
cmpsb
jmp
test
into
scas
inc
add
mov
pushf
dec
mov
pop
add
es
rcl
insl
add
adc
and
pop
lods
mov
push
test
mov
test
outsb
add
xchg
mov
mov
adc
dec
fdivs
xchg
inc
imul
outsb
and
cwtl
mov
fs
fdivrl
sub
dec
jg
shrb
mov
dec
data16
lock
ss
loop
sub
lea
dec
test
sbb
mov
push
xor
insl
cmp
mov
scas
mov
ror
sub
lea
sbb
outsl
aam
or
push
jl
cmpsl
cli
mov
sub
fwait
sbb
pushf
and
inc
arpl
dec
aas
shlb
repz
stos
cli
andb
inc
push
imul
pushf
jg
movsl
mov
inc
lret
cwtl
inc
lret
repz
loope
xor
inc
loop
jno
daa
andl
loop
adc
lods
mov
mov
mov
adc
mov
xchg
inc
and
push
dec
cmpsl
daa
jle
mov
insl
outsb
jns
push
sbb
sub
or
xchg
pop
push
cmpsb
add
ret
inc
and
xchg
shll
out
mull
xchg
or
mov
cld
hlt
inc
movsl
cmp
dec
out
popf
mov
push
jo
xchg
or
lcall
imul
div
sbb
cmp
ret
xchg
pop
jnp
mov
mov
fadd
sub
ret
and
cwtl
loopne
adcl
push
popf
mov
cli
fnsave
lret
add
push
jnp
mov
inc
leave
test
outsb
clc
rclb
mov
clc
movsl
fidivrs
xor
mov
xchg
xchg
add
and
mov
adc
push
sub
fisubrl
push
lods
mov
js
add
mov
dec
jno
add
adc
test
lods
push
mov
adc
pop
fsts
mov
and
mull
cmp
popa
dec
sbb
add
jno
cmp
rolb
movsl
popf
dec
shl
cld
cmpb
mov
mov
fpatan
in
sbb
jp
jns
loope
jg
sub
xchg
lods
ljmp
sbb
adc
jp
stc
addl
ret
andl
pushf
cmpsb
mov
fistps
mov
pushf
das
pop
jmp
cmc
int
mov
add
lret
mov
rol
pusha
bound
sbb
mov
sub
xlat
cmp
roll
and
add
clc
xchg
dec
jecxz
fldenv
jge
popa
or
mov
inc
shlb
xor
xor
and
sbb
outsb
and
dec
adc
jne
sarl
add
std
sub
sbb
cmp
jo
mov
adcl
movsl
inc
arpl
nop
sahf
cld
js
sbb
test
mov
out
cld
aam
idiv
mov
mov
test
fsts
xchg
inc
jne
into
ja
and
ds
inc
pop
loop
dec
scas
aad
mov
jno
into
repz
inc
cmpsb
fstl
push
je
or
or
adc
xchg
sub
and
lds
aam
and
in
incb
push
lods
or
xor
outsl
cmp
dec
cwtl
stos
jb
dec
dec
cmp
in
call
in
mov
cmp
lock
xlat
pop
mov
push
cmc
bound
lahf
and
in
dec
test
arpl
out
addr16
jns
adc
mov
pop
xor
dec
pop
sub
inc
sbbb
aad
jnp
sub
imul
ret
loope
cld
xlat
incb
stos
mov
ss
sti
cmp
repnz
ljmp
and
pop
fistpl
push
in
or
adc
or
es
std
adc
mov
cltd
out
popa
or
mov
push
lods
mov
sub
cmpsl
cli
xor
mov
ret
outsb
adc
cli
push
mov
rcrl
aam
cltd
cmp
jg
ficompl
add
jmp
jno
aam
and
aas
push
sahf
pop
sub
xor
sbb
push
loope
aaa
and
in
xchg
xchg
cmpsl
das
ret
mov
dec
cmp
dec
loope
cmpb
aaa
pop
repnz
scas
mov
mov
stos
sub
test
mov
das
cmp
aas
pop
jo
push
lods
add
sar
scas
xchg
push
push
xchg
push
jmp
dec
mov
addr16
xchg
push
mov
je
cmp
xlat
icebp
sub
dec
sub
cld
add
stos
in
aaa
popf
lods
addr16
mov
mov
shrb
aam
mov
stos
and
mov
pop
inc
xor
cmpsl
test
push
mov
push
xchg
inc
lods
aas
or
pushf
ds
je
sbb
xlat
outsb
and
cmc
lret
outsb
cmpl
enter
sahf
lods
sub
outsl
out
not
and
and
mov
addr16
lahf
and
inc
xor
mov
dec
mov
cmc
adc
mov
mov
orb
dec
or
and
daa
jnp
mov
sbb
lret
notl
out
xchg
push
rorb
mov
push
cmp
pop
ret
jge
pop
ljmp
cmpsl
popa
and
sbb
imul
cmp
int
inc
int
adc
adcb
fisubrs
out
cmp
imul
jae
jbe
dec
jno
mov
or
lods
ds
test
inc
dec
xchg
clc
iret
fdivs
cli
jecxz
pop
xchg
pop
xlat
subl
and
adc
inc
cli
or
push
pop
pop
andb
xchg
cmpsb
push
popf
sbb
stos
shl
insb
push
nop
adc
inc
sbb
mov
dec
jecxz
clc
in
or
jbe
dec
push
push
jne
add
leave
or
inc
hlt
repz
les
clc
aam
loopne
mov
mov
pop
cmc
or
into
inc
pusha
and
push
sub
add
mov
gs
lds
data16
sbb
sub
popa
mov
sbb
fsts
dec
cmp
insl
add
jne
dec
and
adc
mov
push
pop
movsb
xor
mov
xlat
ds
imul
cs
sub
sbb
scas
inc
fildl
scas
repz
daa
push
sbb
das
test
dec
and
jmp
out
jmp
sti
mov
loop
and
fcoml
add
mov
xchg
sub
xor
sahf
xor
mov
jmp
push
loopne
test
lods
stc
sbb
pop
repnz
fidivrs
fwait
jle
shrl
add
nop
js
inc
cmp
lcall
cmp
mov
or
loop
daa
out
mov
test
stos
jp
lcall
push
movsl
sbb
enter
mov
es
sbb
adc
mov
aaa
into
dec
aam
mov
push
or
ljmp
cmp
cmp
int
outsl
push
mov
repnz
stos
or
cs
pop
into
sbb
ljmp
jmp
es
addr16
testl
and
ja
mov
pop
inc
or
push
popf
movsl
push
and
lea
add
cli
rol
lods
mov
rcll
aaa
push
dec
cmpsl
pop
sub
pop
mov
mov
jecxz
jmp
iret
loope
push
andb
popf
jne
xlat
dec
mov
pusha
mov
push
cld
cltd
or
cwtl
cwtl
adc
scas
jns
cmp
in
aaa
rorl
cmpb
mov
xchg
sub
into
inc
or
fmuls
or
out
test
adc
mov
ret
ljmp
cs
sbb
push
sbb
repnz
enter
xor
dec
or
cmpsl
mov
test
arpl
mov
push
and
fcom
ss
or
dec
mov
pop
mov
les
leave
mov
xchg
cmp
jno
cmp
mov
add
mov
or
sbbb
xor
test
mov
cmp
scas
push
pop
and
insb
arpl
int3
lahf
xor
in
rclb
jl
or
lds
repz
test
mov
or
and
cmp
out
dec
in
jns
mov
xor
ret
xchg
xchg
dec
ljmp
pop
pop
aad
mov
test
setle
std
dec
lret
xchg
imul
cmp
sar
push
rorl
mov
ret
push
mov
push
inc
test
sbb
cltd
push
jae
stos
repnz
movswl
pop
cmp
roll
inc
pop
mov
and
jp
jnp
into
and
or
mov
push
pop
ds
imul
shlb
inc
andl
lret
hlt
lcall
inc
cmp
cld
insl
and
adc
and
fwait
push
je
xor
repnz
enter
pop
adc
mov
cli
sub
and
mov
aad
out
fsub
cwtl
mov
test
sti
xchg
sub
fsubrl
pop
xor
inc
pop
jo
lahf
in
hlt
and
lret
xchg
mov
outsb
lret
in
inc
sahf
mov
testb
inc
pop
aaa
fwait
out
pop
shll
xor
stos
addr16
aad
adc
push
push
mov
bound
xchg
outsb
loope
mov
mov
pusha
xchg
ffree
fldenv
inc
xchg
push
jp
shrl
xchg
jg
sub
aaa
mov
imul
jge
out
in
rcl
mov
cmp
hlt
ljmp
int3
cwtl
stos
outsb
jb
push
xor
mov
stc
push
mov
and
into
shrl
jno
pushf
pop
push
shl
adc
loopne
int3
outsl
fwait
stc
pop
repnz
jecxz
lods
cmp
pop
sub
mov
lret
in
iret
mov
cli
dec
pop
mov
sbb
cmp
aas
in
dec
out
mov
jg
lea
int
jle
outsl
fnstenv
fidivs
fs
cli
les
or
daa
mov
push
add
icebp
push
xor
pop
mov
fxam
cmp
xchg
std
or
and
call
cmp
lcall
xchg
dec
dec
jnp
test
ja
into
pop
jmp
xor
and
cmpsb
cmp
int
sbbl
pop
dec
mov
jmp
insl
add
cltd
out
inc
adc
pop
les
pop
mov
adc
enter
cmp
sub
pop
jmp
sahf
sub
adc
into
in
dec
arpl
fwait
pop
shll
cmp
hlt
mov
mov
add
dec
inc
insl
mov
xlat
mov
aam
jb
mov
mov
shll
mov
sbb
idivb
cmp
mov
xor
or
mov
xor
popa
dec
mov
cmp
andb
movsb
sub
jmp
cwtl
and
fmul
test
xchg
das
sub
xor
in
out
jns
int3
test
js
add
or
jnp,pn
xchg
test
lods
add
insl
sub
fldenv
mov
mov
bound
and
cmp
imul
mov
int3
pop
mov
divl
jecxz
sbb
cs
mov
rclb
and
cmpsl
dec
sub
sbb
icebp
icebp
mov
test
loop,pn
add
leave
dec
jecxz
dec
mov
gs
mov
add
mov
inc
mov
iret
out
xchg
data16
iret
popa
push
das
out
into
hlt
test
clc
xchg
lods
inc
stos
arpl
pop
int
bound
popf
jmp
jae
in
loopne
fdivs
int
js
lea
aas
dec
popa
cld
sbb
or
lcall
stc
and
push
jecxz
test
push
popl
sbb
popf
dec
mov
jmp
nop
mov
inc
cs
add
xchg
push
cmp
cltd
pop
jge
or
sbb
sub
popf
xor
hlt
aaa
lret
in
pop
sub
test
push
pop
sub
pop
insb
jb
cmp
iret
lret
imul
sbb
adc
dec
fstpt
jecxz
inc
fnstenv
sub
xlat
repz
inc
mov
leave
mov
jbe
fsubs
aaa
mov
fbld
push
icebp
jae
inc
mov
lock
mov
out
and
out
stos
cmovb
ret
gs
inc
inc
jae
jge
clc
or
cs
mov
add
dec
xchg
sahf
add
lods
push
or
sti
jno
repnz
add
cs
xor
sub
adc
lds
or
out
fwait
addr16
insb
sub
loop
mov
cs
into
movsl
add
sbb
sbb
std
or
pop
adc
and
loopne
xchg
push
imul
fsubrs
mov
lahf
fdivrl
pusha
cld
mov
jg
cmp
add
sbb
push
out
jg
lahf
pusha
setp
cmp
mov
int3
in
jb
scas
adc
xchg
icebp
jle
sbb
mov
jge
jns
mov
adc
dec
movsb
je
lea
xor
cwtl
pop
imul
pop
jne
aas
iret
subb
es
jns
mov
cli
jle
cld
inc
outsb
dec
sbb
jmp
pop
out
cld
sub
mov
cmp
and
push
inc
in
xor
stos
pop
les
push
dec
jo
ljmp
das
pop
xchg
outsl
xchg
in
push
mov
push
add
mov
xor
lcall
ljmp
pushf
pop
in
les
sub
and
jmp
out
add
pop
out
insb
sbb
mov
sarl
scas
jle
movsl
sub
ret
pop
push
or
not
rcr
xlat
mov
fwait
mov
cld
mov
leave
mov
xchg
dec
inc
scas
sub
mov
push
into
mov
in
fbstp
add
dec
cmpl
mov
loope
rcl
ficompl
ret
xchg
push
inc
out
xor
xchg
sub
subb
daa
inc
sub
idivb
sarb
jo
call
les
add
int
call
dec
rcrl
in
mov
sti
loop
xchg
jecxz
jns
mov
pop
js
sbb
and
pop
jns
test
jbe
ds
cmp
outsb
not
mov
fwait
sbb
fldpi
adc
cs
sbb
je
xchg
popa
inc
push
bound
lods
xchg
imul
test
add
cld
sub
shrl
or
sub
add
scas
jne
jg
mov
idivl
or
repnz
pop
ret
rcl
fisubl
cmpsb
fbstp
inc
inc
movsb
mov
pop
mov
sub
test
stc
popf
outsl
xor
js
mov
out
push
movsl
dec
mov
jae
call
test
and
cmpsb
and
dec
mov
aaa
cmp
push
push
stc
shr
aaa
int
jbe
fs
scas
sbb
sub
outsb
mov
mov
and
xorb
jno
jg
cmp
dec
push
repnz
jecxz
mov
sbb
mov
clc
and
or
in
sbb
xor
or
inc
leave
dec
arpl
ss
sub
into
xor
scas
fs
imul
push
mov
dec
insl
and
cmc
or
shl
push
xchg
sub
push
mov
mov
push
mov
push
pop
insb
pusha
mov
pop
scas
pop
inc
pop
add
ja
into
xchg
insb
dec
inc
or
mov
adc
jne
and
inc
jbe
lock
jmp
sbb
ja
jmp
or
fadd
lods
push
xchg
push
shrd
dec
or
ljmp
leave
insb
ret
push
add
stc
xchg
fstpl
mov
movb
fdivrl
and
xchg
bound
dec
sub
outsl
sbb
je
mov
dec
dec
nop
push
jnp
je
in
sti
and
fmul
iret
scas
and
jl
xlat
repz
push
push
xor
xchg
inc
loop
mov
movsb
ja
jno
mov
fisubl
sub
push
push
out
mov
jb
test
leave
stos
sbb
leave
gs
jmp
in
inc
jae
pusha
jnp
xchg
lret
xlat
mov
inc
out
sbb
shrd
pop
movd
jo
mov
adc
popa
mov
push
rorl
popa
les
pop
push
loop
xchg
pop
flds
mov
cli
iret
xor
cs
sbb
lcall
or
stos
imul
fistps
cltd
nop
stos
nopl
arpl
ficoml
cmc
and
daa
lret
adc
repnz
push
jge
mov
jge
dec
scas
dec
adc
bnd
mov
mov
sub
jns
or
ss
jmp
ficompl
pusha
mov
mov
xchg
pop
leave
lods
mull
pop
cmp
fisubl
adcb
mov
cmp
ficompl
push
or
xlat
ret
sub
scas
pop
lahf
aad
xchg
ret
cmp
xchg
aaa
cwtl
repz
mov
movsb
subl
fnstcw
add
stc
cli
dec
cmpsb
xchg
arpl
outsl
sub
int3
cmp
cmp
cwtl
icebp
push
test
pop
jno
xor
call
rclb
add
push
cmc
in
test
movsb
inc
int3
or
jl
lret
pop
into
xor
std
loop
add
cmp
out
repnz
fsubrl
popf
add
popf
in
push
sahf
push
cld
and
xor
movsl
push
ds
scas
test
and
mov
push
adc
cltd
sbb
loop
fsubp
or
pop
in
inc
in
sub
repnz
mov
or
stos
mov
movsb
inc
mov
cmp
les
mov
dec
int
mov
ja
jns
jmp
orl
dec
or
in
nop
mov
fiadds
mov
roll
imul
repz
cmp
sbb
iret
fcmovb
sub
aas
iret
cltd
faddl
cld
push
stos
arpl
adc
add
inc
rep
mov
iret
idiv
aam
push
jo
cmp
push
xchg
mov
sbb
push
push
in
inc
pop
testb
inc
adc
mov
fidivl
dec
mov
mov
mov
jno
jae
cwtl
iret
sub
enter
jl
jmp
int
divb
jecxz
inc
daa
js
or
sbb
addl
xchg
mov
mov
pop
dec
inc
pushf
imull
inc
add
sbb
dec
dec
mov
and
dec
lea
pop
fisttpl
add
jbe
and
jb
adc
jge
into
and
das
pop
sbb
dec
loope
push
and
data16
pop
outsb
push
pop
push
icebp
movsl
mov
and
in
mov
mov
cmp
sbb
test
jns
add
add
mov
xor
cmpsl
cmc
xchg
mov
mov
fs
mov
push
mov
or
and
and
in
sarb
dec
rolb
or
sub
rclb
lds
pop
repnz
lods
sti
xchg
or
sub
fdivrl
lock
ljmp
adc
sub
sbb
scas
pop
pop
into
adc
nop
sbb
mov
dec
add
rclb
sub
or
fdivp
cld
test
mov
and
cmp
push
dec
mov
push
std
push
inc
and
popa
xor
inc
bound
push
mov
aad
fsubrs
cmp
dec
sbb
mov
mov
jo
test
mov
mov
fnsave
jbe
sbb
xchg
pop
out
inc
jg
sbb
mov
into
je
jmp
stc
sub
cmp
insb
add
and
inc
data16
lock
inc
fsubr
adcb
or
sub
loope
loopne
movsb
push
and
dec
push
cmp
outsl
and
int
push
or
nop
stos
push
insb
xchg
xor
inc
cmp
in
jge
lcall
jge
loop
nop
cmp
jge
out
in
push
ret
mov
mov
ficoml
fdivs
aad
sub
jp
sahf
mov
in
jbe
rcr
push
jns
inc
pop
mov
fsubl
out
cmp
mov
test
inc
into
inc
fistpll
ret
mov
mov
int
mov
adc
xlat
ret
inc
loopne
mov
push
jnp
fimull
pop
cltd
pusha
jne
imul
dec
int3
js
cmc
outsl
push
xlat
sbb
orb
jle
dec
fists
outsl
faddl
adc
xor
mov
push
addr16
scas
call
add
mov
or
out
out
sbb
push
rolb
mov
jg
add
pusha
dec
fisttps
push
jb
mov
jp
sahf
jp
jecxz
or
mov
movsb
mov
sbb
jecxz
and
sub
pop
fistps
jno
shl
and
or
leave
gs
rclb
dec
add
cmpsl
push
jo
and
xlat
aam
xchg
in
push
imul
test
add
aas
mov
scas
ret
mov
rol
pop
dec
dec
pop
sub
push
push
fs
mov
inc
adc
mov
push
bound
sbb
scas
mov
sub
jmp
xchg
xchg
and
xor
mov
push
mov
cmc
or
push
imul
cld
push
andb
les
pop
sbb
or
subb
and
js
cmp
jecxz
sub
mov
fists
fisubrl
push
jbe
mov
add
bnd
lods
pop
and
xchg
jns
and
data16
in
mov
fstpt
cmp
test
cmp
cmpsb
test
cs
cli
jg
imul
imull
add
mov
lret
lret
sbb
int3
imul
mov
cmp
aas
mov
cmp
xchg
pop
xor
js
pop
hlt
test
inc
pop
fisttpl
in
aam
cmp
pop
mov
out
xor
popf
mov
adc
cmp
mov
mov
imul
repz
cmc
and
bound
add
xlat
nop
xor
sbb
in
adc
xchg
insb
repnz
sahf
hlt
daa
lcall
xchg
adc
cltd
scas
call
aas
je
das
lock
sbb
divb
scas
cmp
mov
xchg
jecxz
xor
inc
xchg
es
dec
adc
loope
js
lret
jne
sub
dec
inc
and
cmp
dec
mov
in
xchg
mov
popa
cld
xchg
xchg
sbb
fnsave
and
dec
iret
cmp
out
std
inc
jb
fisttps
push
outsb
daa
inc
jge
jg
xor
dec
mov
inc
shlb
popf
std
out
push
cmp
jge
lcall
test
dec
or
call
adc
inc
hlt
xor
or
push
nop
or
cld
mov
testb
aaa
adc
push
fwait
jbe
pop
sub
sbb
cli
dec
mov
aam
dec
data16
int
lods
enter
cmc
or
out
dec
dec
sbb
rorl
sub
mov
pop
ss
pop
inc
or
jnp
mov
mov
pushl
iret
in
push
xor
int3
xor
xor
inc
aas
lcall
jmp
mov
and
jne
cmpsl
add
cmp
sbb
add
or
dec
mov
je
js
xchg
jmp
stc
inc
dec
outsl
dec
push
push
xlat
push
fildl
mov
mov
pop
icebp
nop
lahf
add
add
jg
repz
sbb
repnz
push
fmuls
shrl
xor
cmpsl
orb
or
pop
out
sarl
outsl
and
jae
dec
push
leave
push
xchg
mov
hlt
out
lods
inc
mov
in
roll
shrl
in
mov
ljmp
pop
mov
test
insb
xchg
sub
pop
scas
mov
xchg
test
dec
mov
into
and
push
aad
lret
neg
jno
xchg
mov
jbe
lret
inc
push
lods
js
popl
pop
dec
int3
pop
mov
test
mov
popf
or
mov
inc
jle
push
push
ljmp
jno
imul
daa
aaa
adc
sbb
ds
lods
repnz
in
pcmpeqw
hlt
xor
xchg
sub
xor
jge
frstor
int
push
mov
inc
arpl
rcll
mov
xor
mov
mov
adc
ficomps
xor
mov
lahf
cs
loope
int3
shrl
dec
xchg
test
lahf
data16
andb
lods
jns
push
xchg
jno
ja
pop
push
pop
call
cs
add
and
scas
lods
ljmp
testb
icebp
and
ds
xchg
xchg
mov
push
xchg
mov
pop
jl
jg
sub
enter
data16
outsb
jmp
dec
cmc
cmp
ds
out
pushf
icebp
dec
mov
mov
rcrb
adc
in
mov
rcrl
fsubrp
cwtl
xor
in
mov
mov
fldenv
cld
xchg
in
popa
popl
inc
lret
sti
popa
dec
pop
mov
fiadds
jns
push
fxch
pop
lock
pop
stc
test
cwtl
repnz
ss
mov
loop
sarl
sbb
jb
mov
adc
or
cmp
incb
sbb
aad
fcom
xchg
mov
sub
push
jge
rcl
dec
push
cmc
outsl
mov
das
or
cmpsb
sbb
xchg
mov
xchg
cmpsb
xchg
mov
lahf
inc
jbe
es
sbb
adc
mov
pop
cltd
cs
mov
sub
mov
enter
std
in
sub
rcr
and
and
push
out
push
add
test
in
inc
mov
pop
lret
loope
mov
shl
pop
jp
ss
mov
add
mov
aas
mov
and
adc
mov
stos
add
push
lahf
push
test
outsb
sbb
jl
fnstcw
dec
push
mov
push
push
std
insb
fucomip
add
jb
mov
gs
mov
cmp
add
push
dec
adc
cld
mov
mov
daa
or
xchg
mov
xor
pushf
adc
popa
fsubl
shlb
cmp
lcall
jp
and
pop
adc
int3
jnp
ret
or
or
or
enter
cmp
push
and
mov
sbb
in
sbb
or
jno
and
xchg
mov
call
hlt
mov
inc
mov
dec
into
movsb
jns
mov
jg
jnp
int
inc
sbb
daa
mov
test
xor
mov
push
and
loope
xchg
xchg
dec
in
inc
andb
lock
jle
stos
cld
int
out
inc
fildll
stos
xorb
fbstp
mov
mov
cmpsl
les
mov
add
xchg
jle
sbb
shl
pop
out
outsb
adc
pop
shlb
mov
push
outsl
mov
xor
sub
jecxz
xchg
rcll
mov
xchg
jg
push
shll
sbb
fwait
inc
cmp
or
loop
les
dec
push
mov
mov
inc
dec
pop
movsb
addr16
test
cmp
stc
out
jg
shr
dec
add
or
gs
pop
loopne
sbb
js
pop
mov
pop
jge
aas
movsl
dec
adc
cmp
cmp
xor
mov
or
cmp
cltd
sbb
call
lods
mov
es
js
frstor
fdivl
out
clc
ret
pop
or
lea
xchg
push
sub
mov
xchg
cmp
cli
pushf
jbe
pop
push
imul
loop
cmp
adc
dec
jle
jg
inc
push
cwtl
xchg
dec
out
jb
fwait
xchg
mov
pop
cmc
inc
shl
push
out
inc
push
fs
test
xor
cmpb
xchg
mov
imul
xchg
lock
inc
in
ja
mov
push
jmp
adc
adc
pop
adc
es
xchg
jno
lcall
push
es
into
adc
or
mov
lret
xchg
jo
inc
adc
mov
fisubrl
fs
and
adc
rcrb
cmp
sub
gs
and
add
rcll
xor
mov
inc
xlat
inc
in
jbe
push
inc
adc
dec
fsub
in
js
leave
and
inc
xchg
mov
pop
sahf
lods
jns
xor
int3
xchg
push
and
mov
adc
out
rol
inc
mov
loop
es
push
mov
int
ja
nop
xor
and
or
mov
stos
in
pop
adc
popa
movsb
cmp
add
insl
fiaddl
cmpsb
stos
inc
or
insb
loope
jnp
pusha
cwtl
pop
xchg
into
cmpsb
in
jbe
ss
mov
mov
imulb
mov
rcll
jnp
add
xchg
xchg
cmp
push
jbe
shlb
sbb
vpaddd
dec
push
orb
or
nop
jnp
popf
clc
dec
dec
lods
subl
cli
cmp
mov
pop
jl
dec
rclb
mov
scas
jno
xchg
lahf
mov
shll
test
lods
fisubrl
repnz
push
mov
pop
clc
or
dec
cmp
das
mov
repnz
push
mov
test
icebp
mov
aam
test
or
add
pop
jmp
lea
lret
xchg
pop
adc
mov
push
in
hlt
popf
ss
push
in
xor
jb
xchg
stos
mov
dec
add
xlat
and
sbb
cmpsb
rorl
lods
cmp
hlt
aaa
adc
or
ljmp
pop
cmp
mov
pop
icebp
cmp
push
call
and
xchg
or
sahf
cld
cmpsl
pusha
into
and
and
lret
lret
aam
dec
inc
ja
stos
out
xchg
mov
sub
push
sbb
mov
ja
pop
push
push
cld
jae
dec
sub
mov
jg
orl
mov
cmp
jl
cmpsl
push
ds
sub
int3
lret
xchg
cmp
fldcw
and
clc
sbb
sbb
sti
fwait
sbb
pop
jbe
jp
push
push
call
push
or
sub
sbb
and
pop
jb
stos
xchg
mov
mov
xchg
adc
push
pop
mov
cmp
pop
movsb
testb
pop
ficoml
fildl
pusha
add
aad
sti
adc
ret
pop
dec
repnz
ljmp
call
loopne
enter
repnz
pop
std
pop
pusha
push
hlt
rolb
mov
loopne
push
ret
int3
imul
mov
mov
xor
dec
mov
push
inc
fimull
xlat
pop
stos
mov
ret
xor
mov
mov
xchg
cmp
pusha
repnz
test
inc
sub
lea
dec
push
pop
mov
mov
mov
adc
sbb
cmp
mov
inc
sub
xchg
aaa
mov
cmp
mov
jae
fistl
cmpl
sbb
pop
or
or
imul
jb
pushf
hlt
mov
push
add
jns
mov
xchg
js
movsb
aam
out
and
cltd
stos
stos
push
xchg
mov
push
mov
pop
push
add
sbb
sub
jno
mov
dec
dec
hlt
int
scas
out
sti
sub
popf
push
mov
sbb
fs
pop
cmp
into
push
aam
dec
dec
cmpsb
js
cmp
inc
movsb
inc
mov
pop
mov
scas
jbe
std
xor
daa
jnp
fwait
and
and
int
fdiv
lcall
sbb
lahf
adc
stos
test
jecxz
ror
dec
out
loop
fld
xchg
fs
insl
adc
data16
or
or
or
out
repnz
out
repz
iret
mov
repnz
xor
sbb
lahf
push
scas
rolb
mov
mov
addb
out
and
mov
mov
cs
push
inc
mov
ja
cs
rcll
pop
adc
cmp
push
out
jge
add
sarl
icebp
ljmp
xchg
xlat
xchg
adc
sbb
popf
push
push
repz
adcb
arpl
push
iret
mov
repnz
add
xor
pop
mov
jne
xor
addl
inc
push
lods
loop
sub
lcall
mov
pushf
in
adc
pop
imul
lods
cmp
data16
icebp
lea
cmpsl
clc
sub
push
or
loope
lods
es
and
xor
ljmp
cmpsb
lahf
or
inc
or
mul
push
cmpsb
in
mov
jnp,pn
xchg
mov
xchg
jmp
sub
or
testl
lcall
fldt
out
data16
push
dec
inc
popa
jl
or
lea
and
dec
and
insb
push
jae
repz
sbb
add
adcb
sub
cmp
cmp
mov
pop
mov
push
mov
adc
mov
sbb
addb
fildl
sarl
add
mov
cli
dec
fwait
push
in
push
out
adc
mov
pop
sbb
xor
push
mov
inc
les
jg
sahf
enter
jp
add
jnp
into
xor
dec
addr16
push
leave
rorb
shrb
inc
pop
push
out
cltd
mov
xchg
outsl
mov
cmp
mov
and
lret
jl
jo
or
movsl
imul
jae
rcrb
fisttpl
push
mov
jmp
int
lahf
mov
rcll
adc
jae
jno
ret
pop
pop
push
andb
push
mov
out
cmp
mov
fldt
shl
mov
sbb
jbe
lods
fwait
pop
fdivrl
into
sub
sbb
push
add
enter
pop
xchg
movsl
clc
clc
nop
cs
adc
xchg
dec
pop
jg
loopne
fistl
nop
daa
push
jbe
inc
xor
jle
xchg
pop
loopne
push
cmpl
enter
mov
mov
mov
js
ss
hlt
cmp
fstps
mov
outsb
mov
aam
jle
sbb
int
mov
push
je
out
xchg
pushf
pushf
arpl
jecxz
nop
mov
mov
push
jl
outsl
inc
or
sbb
scas
jecxz
pop
dec
jno
pop
movsl
es
sbb
jp
push
es
aaa
cltd
add
outsb
add
fcomi
cli
or
nop
pushl
enter
test
fcmovbe
addr16
ds
lcall
push
sahf
xchg
lods
push
add
out
cli
das
push
sub
ljmp
in
std
lock
gs
jmp
std
sub
stos
jbe
lret
jcxz
aad
pop
cltd
cwtl
movsb
pop
notb
push
add
mov
inc
arpl
mov
or
mov
adc
shll
test
mov
push
ss
stos
cmpsl
out
into
jmp
bound
push
test
pop
notb
cmp
jmp
cmp
jge
xor
jmp
cmpsb
ds
inc
adc
dec
xor
mov
loopne
adc
mov
push
or
mov
mov
in
rorb
rcl
bound
sahf
mov
add
lock
inc
std
rorl
inc
pushf
mov
test
into
loope
xor
mov
inc
test
add
cli
pushf
lcall
pushf
xor
lods
in
std
mov
addr16
pop
push
in
and
xchg
aaa
cmpsb
lock
nop
outsl
or
sbb
pusha
data16
cmp
orl
adc
jns
jae
les
insl
cld
sub
pop
outsb
and
jl
subl
mov
pushf
ret
popa
imul
jb
lds
js
dec
lret
pop
and
jnp
cmp
dec
cs
or
out
arpl
cmpsb
setle
cltd
std
cmp
mov
add
sti
xchg
mov
pop
add
jb
mov
in
adc
mov
xchg
sub
cmpsb
push
jae
movsb
inc
mul
add
sub
outsl
fsubl
int
subb
xor
xchg
pop
out
cmp
out
jno
cmp
push
pop
jmp
mov
lcall
sbb
popa
push
jo
sbb
clc
cmc
mov
mov
inc
pop
fiadds
das
inc
les
aas
cltd
sbb
out
std
repz
shlb
mov
mov
cmp
leave
sbb
hlt
lret
mov
test
sub
daa
stc
mov
xchg
and
repnz
popa
sub
inc
testb
mov
fisubs
adcl
sub
dec
sti
push
test
and
rol
inc
test
out
in
js
fwait
push
and
std
inc
push
mov
pusha
xor
inc
jp
sub
sub
jnp
arpl
jecxz
jmp
adc
fdecstp
les
push
push
scas
or
loop
sub
mov
into
jecxz
add
dec
fsubl
shlb
cmc
xor
cmpsb
jle
mov
fs
insl
and
cmc
and
jp
xor
add
pop
sbb
push
sbb
dec
mov
push
pop
rcl
daa
or
jecxz
cwtl
sub
mov
negb
scas
sub
je
sbb
insb
xor
mov
mov
mov
pop
xor
bnd
and
xchg
ljmp
xor
jecxz
lret
lods
fidivs
ret
call
cltd
fdivp
pop
shl
dec
mov
fisubrs
insl
jg
imul
movsb
ss
pop
mov
test
dec
xchg
adc
dec
inc
movsb
pop
mov
fnsetpm(287
mov
and
shr
repnz
xchg
repnz
mov
icebp
mov
mov
repz
adc
cmp
mov
mov
lods
xchg
sbb
into
orl
dec
lahf
jg
mov
fldcw
aam
mov
pusha
xchg
jl
lds
lcall
movsb
std
pop
mov
adc
hlt
or
in
add
push
lds
stc
mov
test
popa
push
push
mov
or
mov
out
mov
popa
xor
inc
sub
pop
lret
cmpps
call
orb
andl
out
aam
pop
jne
mov
test
in
rcl
jl
decb
xchg
xor
lods
sbb
or
imul
xchg
add
into
incb
shll
push
jp
rcrb
insb
inc
push
lds
inc
adc
dec
mov
sbb
pop
xor
mov
mov
dec
adc
jnp
imul
imul
sbb
jb
cmp
cmpsl
mov
mov
stos
shlb
mov
nop
inc
mov
pop
fwait
pop
jmp
cmp
push
xor
mov
xchg
or
and
sbb
sbb
call
repnz
out
push
jne
mov
jno
mov
cmpsb
xchg
lcall
or
aaa
xor
add
push
test
dec
mov
jne
mov
shrl
in
inc
in
add
pop
fiadds
add
xor
push
cli
test
inc
jecxz
xchg
push
stc
lea
in
insl
ret
dec
in
in
add
pop
je
and
out
push
and
les
adc
xor
cmpsl
loope
add
fs
sbb
test
mov
push
cmc
in
push
ficoml
adc
fs
inc
adc
mov
insb
xor
mov
rorb
scas
inc
jo
xchg
movsb
sbb
mov
gs
loopne
pop
adc
xlat
jns
pusha
idivl
fldcw
sbb
dec
mov
sbb
push
loop
je
jecxz
outsb
xchg
add
lea
es
movsl
mov
dec
push
test
inc
cmpsl
out
add
bound
loopne
repnz
sbb
push
pushf
cmpsl
mov
pop
cmpsl
mov
je
movsb
mov
pusha
in
loope
push
xchg
das
stos
xchg
decl
dec
adc
push
aas
mov
popf
xor
xchg
adc
scas
cmp
add
dec
inc
bound
mov
pop
fldenv
jno
push
mov
push
bnd
sub
and
fstenv
or
jl
add
push
cmp
mov
or
addr16
sub
sarl
pop
movsl
sub
dec
sti
icebp
jno
pop
scas
and
int3
repnz
adc
jno
and
mov
lock
jo
ja
or
lahf
inc
or
lea
pop
mov
sahf
push
ljmp
mov
dec
push
push
mov
push
and
cmpsb
pop
jns
dec
cmpsl
push
mov
add
xor
mov
sti
jp
aam
xchg
xlat
dec
aad
mov
jo
sbb
jg
faddl
test
faddl
out
mov
fstl
xor
mov
stos
push
faddp
dec
mov
fdivl
pushf
xor
adc
sub
inc
push
in
gs
daa
or
dec
push
int
lods
andl
stos
push
dec
cmpsb
or
sahf
jo
aas
or
lods
and
mov
hlt
mov
jle
pop
insb
inc
add
and
mov
push
imul
xlat
fs
iret
test
divl
shl
cmc
xchg
ljmp
push
or
lahf
sub
xchg
and
cmp
cmp
xor
xchg
add
pop
adc
cwtl
arpl
and
mov
iret
xchg
lret
dec
inc
jg
xor
out
outsb
faddl
or
lods
sbb
ret
jae
repnz
adc
cmc
add
jns
imul
sahf
lahf
pop
dec
mov
ret
movb
push
cwtl
decb
sub
sahf
js
jo
xchg
sbb
jbe
in
xor
add
shrb
divl
loop
jmp
repz
aad
sub
cmpsl
sahf
test
sub
popa
fsubl
dec
push
sahf
out
sub
fstl
jns
add
xor
sub
addr16
les
insb
jge
imul
sahf
scas
pop
call
xor
in
adcl
aaa
push
xor
or
push
loopne
xchg
cmp
cld
push
sbb
outsb
test
inc
notl
mov
pop
add
shr
outsb
jle
stos
scas
pop
sub
shll
out
test
cmp
mov
idivl
aaa
iret
sbb
scas
fstl
mov
pop
pushf
or
fsubr
lock
int
cli
je
jle
ret
arpl
jno
psrld
push
stos
fisttpll
adc
ja
inc
dec
daa
jnp
adc
movsb
js
cmp
mov
ja
sbb
push
hlt
lret
dec
call
rcrl
inc
sbb
ret
jo
mov
dec
loopne
jle
dec
sub
mov
stc
iret
data16
in
pop
mov
aaa
xchg
aad
into
push
testb
and
push
inc
push
out
mov
jg
arpl
pop
mov
mov
stc
loopne
add
add
pop
les
ja
pushf
push
out
or
lods
pushf
in
repz
jge
xchg
mov
aaa
mov
iret
repnz
lret
xchg
xchg
dec
pop
stc
scas
fldt
mov
or
cmp
lds
xchg
popa
aaa
dec
mov
mov
clc
cmpsb
cmp
sbb
imul
xor
aas
aam
lods
add
mov
pop
lret
pop
test
sbbb
jns
add
mov
xor
push
stos
hlt
dec
stos
lret
fsubr
gs
sbb
mov
bswap
lock
test
and
push
testl
loop
pop
lret
sbb
push
mov
fldl2e
leave
mov
out
test
pusha
ljmp
ljmp
cmc
xchg
mov
dec
in
jnp
mov
sub
cli
out
xor
mov
lock
outsl
js
sahf
dec
int3
xor
iret
pop
scas
mov
lock
pop
mov
imul
mov
lret
push
ret
in
out
enter
in
push
adc
subl
aad
icebp
dec
cmp
into
sbb
daa
cltd
std
or
push
mov
icebp
aam
cld
or
inc
test
imul
xor
jno
push
loop
adc
sbb
cmp
ficompl
fildl
jne
ja
jo
cmc
ja
dec
sbb
fmuls
mov
in
leave
adc
je
mov
adc
stos
ds
and
popf
push
nop
cltd
sti
inc
jbe
js
pop
jg
dec
dec
add
add
out
push
cmpsb
cmp
fs
mov
test
fcomip
dec
lock
scas
pop
daa
cli
iret
adc
mov
add
sbb
data16
sub
pusha
gs
mov
or
inc
xchg
or
inc
idiv
mov
xchg
adc
xchg
jae
xor
aas
stos
jns
je
notl
xchg
xchg
and
int
cmc
sbb
scas
out
sbb
xchg
sbb
rcrb
shlb
adc
clc
sub
sub
shlb
inc
mov
xor
and
pop
adc
pop
repnz
jae
pop
lea
orb
dec
xor
fbstp
inc
movsl
xor
add
sub
or
fcmovne
add
sbb
shrl
leave
mov
lods
cmp
mov
dec
fnsave
lods
out
mov
sti
cmp
int
roll
dec
and
cld
adc
add
aas
hlt
add
cmpsl
xchg
mov
in
mov
push
cmc
xor
cmc
pop
xor
movsb
movb
adc
out
mov
sbb
mov
shrl
pop
dec
pop
xchg
sub
push
rclb
mov
cmp
subl
into
fdivl
xor
outsl
pop
jbe
testl
mov
outsl
cld
xchg
adc
popa
int3
dec
cs
xchg
lods
xchg
outsl
sbb
data16
mov
insl
shr
push
hlt
imul
mov
push
sub
aaa
cwtl
movsb
inc
mov
sbb
ret
push
bound
sbb
xor
insb
je
xchg
mov
jecxz
xor
insl
outsl
push
jge
loope
xor
cmp
sbb
jecxz
cmp
pop
mov
shlb
push
push
add
push
pop
mov
jecxz
pop
or
or
loope
lds
xlat
movsb
pop
ret
pop
push
sarl
je
lods
sub
and
adc
fisubs
cs
pop
iret
pop
lret
ret
shl
push
stos
mov
fdivl
mov
fcmove
aaa
push
dec
dec
aad
das
push
sbb
dec
aas
dec
je
popa
xor
mov
push
fwait
xor
dec
fwait
xchg
or
unpckhps
cmp
insb
mov
subl
jns
outsb
cmp
adc
mov
pusha
add
add
xor
sahf
je
fidivl
fadds
fisubrs
andb
test
rcll
cmp
mov
mov
jae
jo
outsb
lahf
imulb
lret
je
add
xorb
in
dec
aaa
sbb
add
xor
mov
or
stos
cmp
pusha
mov
lock
fsubrs
push
xchg
xchg
testb
mov
add
push
je
aaa
pushf
repnz
or
push
adc
insl
or
push
popf
cs
adc
inc
pop
movsb
push
scas
dec
dec
cmc
mov
orb
fmuls
jle
into
push
sub
in
xor
rclb
dec
dec
arpl
adc
xorl
loopne
pusha
xchg
dec
inc
mov
mov
mov
daa
outsb
mov
and
mov
or
aaa
ret
pop
icebp
hlt
fists
mov
pop
mov
insl
aam
lea
or
divl
mov
mov
push
adc
aad
mov
and
mov
jle
movsl
cli
mov
call
shrb
insb
mov
mov
dec
pop
sub
push
pop
je
mov
ret
mov
stos
dec
mov
ljmp
jno
das
jne
add
fsubr
mov
xor
push
outsl
push
push
ljmp
pusha
cli
push
arpl
nop
jns
stc
lea
sbbb
pop
out
aad
sbb
adc
icebp
bound
and
adc
mov
sbb
pop
mov
jg
lea
and
sub
and
pushf
push
jl
sbb
stc
cmpsb
dec
pmullw
nop
xor
sub
sub
iret
cmc
sub
lea
mov
std
xchg
cmpsl
sbb
pop
movsl
int3
dec
xlat
insb
data16
mov
cmpsb
cli
mov
xchg
pop
je
add
movl
dec
cld
push
incl
or
cld
inc
xor
ss
cli
insl
jo
stos
mov
pusha
or
xor
pop
fwait
out
call
mov
in
cltd
jbe
aam
mov
enter
mov
mov
cli
imul
inc
ficoml
adc
mov
push
inc
into
xorl
push
xor
push
test
lret
dec
push
out
dec
jb
and
or
daa
inc
test
pop
mov
pop
add
sti
fwait
adc
ja
pop
sbb
mov
sbb
in
sub
scas
mov
add
popf
fs
adc
mov
inc
pop
mov
xchg
jmp
inc
adc
xchg
mov
pop
insb
sbb
jl
pop
cmpsl
mov
cmp
scas
imul
xchg
add
loop
test
dec
xchg
ljmp
test
scas
jl
fisttps
add
xor
fucomp
push
mull
lcall
or
nop
fistl
pop
movsl
int3
out
cmp
cltd
add
and
mov
and
adc
cs
mov
les
push
adc
mov
push
shrl
jge
aaa
adc
push
mov
pop
and
adc
jl
xor
dec
jns
arpl
test
mov
xchg
dec
fiadds
mov
popa
loopne
in
jl
inc
sbb
fidivrs
rolb
fs
sbb
adc
imul
ljmp
imul
xor
jo
fisubs
inc
inc
jmp
fstl
sub
cmpsb
mov
jae
add
test
out
cmpsl
mov
scas
mov
sahf
and
rcrb
sarl
adc
mov
not
jl
mov
rorb
int3
loopne
std
aam
add
and
mov
cmp
insl
pop
mov
sbb
fs
leave
xchg
xchg
sahf
leave
stos
mov
xlat
shl
push
xlat
pop
ret
sub
popf
dec
mov
push
jmp
mov
cmp
jne
not
repz
movsb
icebp
int
not
imul
cmp
xchg
push
ds
lds
iret
jg
rcll
pop
in
cltd
add
mov
ds
fwait
mov
xchg
xchg
jge
lds
insl
sbb
arpl
bound
cmp
xor
pop
addr16
pusha
adc
xchg
sub
xchg
mov
sub
xchg
stos
cmp
scas
pop
hlt
in
cmpsl
push
sbb
sbb
stos
push
ret
add
repnz
sub
sarl
pop
fisubrl
xorl
jge
and
mov
jns
into
sub
dec
mov
xchg
clc
or
adc
mov
out
insl
lahf
jp
stos
or
icebp
pop
add
xchg
mov
popa
addr16
jg
outsb
mov
lcall
cmp
xchg
mov
inc
xchg
jo
push
out
sbb
sub
sti
push
pop
or
xor
and
push
jle
cmpsb
fidivs
data16
out
adcb
cs
jg
cmpsb
ds
movsl
lods
jae
das
mov
mov
pop
push
aaa
push
pushf
dec
ret
jnp
cs
jo
jno
aad
or
dec
movmskps
pop
cmpsb
pushf
cmp
in
push
jmp
jecxz
xchg
pop
adc
dec
sbb
das
dec
call
sub
sahf
xchg
push
rol
shlb
cmpsb
or
cmpl
cmpsl
dec
xlat
push
add
punpckldq
sarb
test
add
notb
ljmp
in
push
insl
push
or
push
dec
pop
cwtl
jl
outsl
stos
and
ret
pop
shrb
xchg
out
stos
mov
fdivrs
jp
add
pop
cld
xchg
push
inc
inc
lds
inc
cli
popf
jmp
jbe
js
and
ret
jge
dec
push
xorb
outsl
fisubrl
loopne
fsubl
push
xor
jge
jo
jmp
mov
ret
mov
mov
sbb
loopne
sub
fincstp
xchg
loope
fsub
dec
add
sbb
cltd
sahf
movsb
jmp
imul
inc
lock
jno
inc
push
fmul
sbb
aam
pusha
pop
and
shlb
dec
loopne
push
sub
pop
inc
pusha
mov
add
pushf
or
jl,pn
sbbl
stc
test
dec
dec
jne
fs
jle
inc
pop
enter
sbb
mov
xchg
rcll
adc
xchg
push
testb
push
add
loop
pop
and
rcrb
sbb
mov
inc
dec
dec
dec
sbb
mov
jecxz
lods
in
push
xchg
inc
icebp
cmp
mov
mov
insb
subl
cwtl
cld
xchg
loopne
sub
mov
inc
pop
imul
xor
outsl
jge
test
sahf
das
push
mov
mov
inc
lock
inc
and
pop
mov
mov
jl
sbb
notl
fnstenv
mov
lds
push
ret
fisubl
lret
push
int
sbb
std
mov
jg
bound
xchg
stos
sub
xor
push
movsl
sbb
and
or
sub
aad
cmp
jg
sarl
pop
cmp
in
rorl
jl
lcall
inc
jmp
fs
sbb
fwait
jbe
xor
push
push
fldpi
cmp
mov
dec
fwait
lret
outsl
sbbb
fs
scas
jno
sbb
jb
jle
imul
push
in
add
je
pop
push
adc
test
aad
pop
aad
pop
inc
stc
mov
pop
push
aad
or
and
push
and
rcl
in
pop
addr16
jmp
mov
mov
je
jg
divb
cmpsl
mov
and
cmpsb
adc
mov
call
or
imul
sbb
ds
ja
dec
add
test
inc
popa
lock
mov
loop
mov
ficomps
mov
adc
or
cmp
bound
sbb
add
add
mov
daa
cmp
inc
dec
outsl
repnz
jge
push
inc
outsb
adc
adc
or
popf
lods
nop
out
mov
aad
test
jle
sbb
and
ficomps
cmp
out
xchg
push
mov
icebp
mov
testl
rcl
pop
xchg
pop
cmp
sub
cmp
pop
dec
mov
test
scas
xor
mov
je
outsb
rcrl
cmpsb
cmp
jg
shll
jb
jnp
push
mov
lahf
and
daa
lcall
jns
inc
outsl
in
test
push
cmp
push
enter
cli
in
ret
inc
lea
sahf
clc
adc
add
sub
movl
adc
push
dec
stos
jp
jb
fldl
adc
add
int3
mov
jno
lock
icebp
loope
push
dec
shrl
into
in
push
mov
xor
push
stos
pop
jp
ficoml
xchg
testb
mov
mov
aam
into
into
fdivrl
lret
jnp
or
push
mov
cmp
stos
mov
dec
int
cmp
xchg
ss
push
add
int
shl
xchg
addr16
mov
bound
in
inc
jl
fdivrp
dec
and
inc
bound
icebp
jmp
cmp
aad
rorb
repnz
cmp
mov
hlt
jo
popf
jmp
xor
mov
mov
aaa
or
and
rorb
mov
dec
aas
xchg
mov
incb
aad
aas
mov
popf
je
xchg
push
dec
dec
ds
stos
rcr
fists
in
mov
inc
mov
scas
mov
mov
call
fcomip
mov
adc
les
or
xbegin
std
cmp
loop,pn
or
jnp
stc
mov
push
out
pusha
sub
pop
into
mov
or
cmp
iret
test
popf
fnstenv
popf
stc
jae
jmp
in
push
mov
je
mov
movsb
add
jnp
out
loop
es
into
or
jo
pop
jae
jne
push
and
fidivl
repnz
leave
mov
popa
out
mov
mov
add
loope
push
jne
bound
lahf
daa
fcomip
ds
or
pop
ljmp
cmc
push
inc
loopne
adcb
pusha
ss
xchg
mov
inc
push
inc
fmull
stos
arpl
mov
mov
lock
stos
sbb
testl
sub
sbb
jecxz
cld
cltd
lock
out
sub
or
cs
mov
mov
xor
lock
mov
aam
test
mov
mov
xchg
push
inc
dec
ja
xor
scas
sti
inc
sbb
das
mov
mov
scas
ret
decl
push
out
movsl
repnz
pop
jmp
mov
mov
or
inc
mov
sbb
cld
shll
mov
in
enter
xor
repnz
adc
xor
mov
pop
mov
je
je
push
icebp
loopne
std
push
test
jl
mov
dec
outsb
mov
icebp
aaa
xchg
faddl
out
add
cmp
dec
jl
sti
mov
dec
stos
mov
jp
and
mov
dec
shlb
xor
int
test
stc
hlt
push
movsl
push
lds
or
shr
mov
pop
mov
cltd
xor
mov
push
pop
je
icebp
push
imul
in
ja
or
aam
dec
lods
push
movsl
adc
pop
mov
sbb
dec
aad
mov
aam
scas
mov
ret
ss
hlt
aas
andb
xchg
icebp
mov
xor
add
shr
iret
mov
rol
loop
iret
enter
sub
sbb
sub
pop
sbb
xor
sub
xchg
scas
lcall
jmp
iret
enter
movsl
cmp
add
icebp
fadd
jle
fwait
dec
in
icebp
movsl
iret
adc
loope
fldenv
ljmp
add
sbb
daa
movsl
mov
shll
jb
xchg
sti
jl
ret
mov
insb
sub
repz
mulb
vmread
push
cltd
and
lret
test
dec
mov
cmp
xlat
lods
mov
aaa
mov
xor
sarl
xchg
jmp
or
add
jae
adc
xor
ret
sub
jp
filds
xchg
js
lods
test
hlt
push
add
dec
xchg
inc
leave
int
rorb
push
push
movsb
inc
push
pop
jb
mov
adc
inc
gs
jno
pop
mov
inc
xchg
cmp
mov
cmp
mov
ss
aad
addb
shrb
xlat
loopne
lods
gs
mov
fwait
and
push
or
fwait
xor
das
or
jl
sbb
sub
scas
fiadds
add
mov
fisttpll
repnz
subb
addr16
ret
sub
std
fisubrl
lds
pop
pop
xor
fstl
addr16
or
or
clc
fldl
add
int3
xor
data16
mov
or
pop
cmp
jecxz
sbb
dec
dec
loop
push
dec
jns
push
imul
test
and
inc
pop
fwait
es
or
lea
cs
stos
mov
stos
sub
dec
out
sub
adc
mov
rorb
out
stos
sbb
mov
mov
mov
iret
push
cmp
or
cmpsl
fisubrs
add
idivl
movsb
adcb
imul
push
xor
icebp
test
into
movsb
out
add
jge
je
push
sub
or
sbb
and
iret
bound
inc
push
test
adc
pop
and
lahf
mov
mov
clc
shrb
fisubs
stc
fs
push
dec
push
xor
add
fmull
jg
pusha
pop
into
adc
test
cwtl
xchg
or
fidivs
jle
mov
lea
pushf
cmp
xchg
and
push
pop
arpl
dec
addr16
lret
cli
aam
inc
gs
jne
out
bound
rol
addr16
pop
dec
push
js
aad
je
sbb
fucomi
dec
fsub
aad
shlb
cmp
arpl
loop
cmp
int3
sti
xchg
jns
imul
xchg
or
fwait
xor
cmpsb
fbstp
pop
sarl
pop
cs
pop
mov
test
sahf
data16
lret
push
add
cli
or
stos
enter
or
out
xchg
subl
mov
inc
mov
loopne
int3
lret
jp
icebp
test
imul
hlt
mov
in
imul
sbb
lcall
ja
push
mov
push
dec
popa
insb
movsl
cmp
and
push
xchg
push
xlat
je
stc
arpl
in
mov
push
sti
dec
fdivs
enter
pusha
bound
push
inc
adcl
and
out
pop
mov
sar
cmp
cs
aas
out
pop
loope
inc
push
jmp
or
enter
lret
lret
fbld
mov
stos
or
mov
xchg
push
jns
fdivl
fldt
inc
fnstenv
xchg
mov
sub
add
in
popf
mov
andl
es
inc
test
shl
out
mov
cmp
outsl
scas
mov
push
mov
add
pushf
jecxz
and
mov
jae
and
add
xor
dec
aam
or
repz
push
inc
and
idivl
xor
outsb
and
jb
mov
loop
mov
in
cmp
movsb
or
stos
inc
inc
shl
push
xchg
enterw
adcl
jmp
xchg
out
out
jo
out
jnp
jnp
push
push
add
xor
cli
cmp
icebp
imul
test
dec
sub
jo
hlt
cmp
fld
data16
icebp
ss
mov
sbb
and
lahf
mov
pop
cwtl
adc
sub
cmp
mov
mov
adc
dec
out
adc
push
test
adc
out
popa
fidivrl
mov
push
inc
jo
icebp
mov
pop
insb
jle
test
rclb
sbb
cltd
stos
fbld
enter
jl
xchg
xchg
es
pop
lahf
cmp
inc
sbb
mov
adc
popa
xor
rolb
testl
mov
and
adcb
fisubs
in
out
dec
sub
lret
pop
fiadds
add
sub
push
pop
out
cld
pop
sbb
mov
aas
movsl
loop
popa
mov
sub
cltd
shrl
mov
pop
addr16
ljmp
dec
or
sahf
push
lea
sbb
push
push
outsl
xchg
xor
sbb
aaa
into
rorl
jecxz
lods
cmp
push
out
push
inc
clc
jae
outsb
loope
mov
js
into
scas
js
dec
pop
dec
cmpsb
fldl2t
repz
cmp
and
lds
movsb
ja
and
fidivrl
clc
mov
sub
and
outsb
cmp
daa
jmp
popa
adc
xchg
add
cmp
filds
or
mov
pushf
rcl
out
cltd
push
outsl
ret
ja
sbb
icebp
scas
mov
je
jnp
mov
pandn
cmpsb
dec
and
inc
cli
test
out
xchg
push
leave
movsl
mov
hlt
inc
fisubl
sbb
mov
fcompl
cmp
add
in
pop
sbb
sub
imull
dec
mov
ret
imul
shll
test
lcall
and
iret
insl
sbb
push
mov
and
jb
pop
movswl
sbb
dec
insb
rcrl
mov
insl
es
inc
pop
inc
cmc
pop
sub
les
pop
push
dec
mov
call
lds
mov
negl
jns
fwait
rolb
mov
jp
test
or
arpl
and
je
fisubrs
mov
inc
mov
jo
aad
inc
pop
rcll
addb
inc
pusha
popl
test
stc
xor
sbb
sub
ljmp
divb
mov
push
jge
mov
mov
mov
arpl
into
inc
filds
imul
pop
lock
in
jne
mov
cltd
jns
sub
loope
in
dec
stos
push
lret
insb
ljmp
bound
loope
sahf
dec
addr16
mov
testb
xor
iret
lods
mov
lds
je
aad
adc
rcrb
jne
mov
ret
jnp
pusha
fldt
inc
push
mov
lock
sbb
repnz
loopne
testl
or
dec
and
push
mov
or
xor
inc
clc
cli
adc
adc
mov
xorb
inc
call
roll
cli
dec
or
mov
fwait
sbb
imul
adc
call
xchg
add
fcoml
jne
jne
mov
add
lret
inc
and
sbb
andb
shrb
mov
test
jp
test
or
push
lods
fwait
xor
mov
sub
cmc
aam
shrl
stc
pop
add
add
mov
in
rcll
ss
in
in
push
leave
pop
test
aad
cmp
dec
das
shll
iret
or
cmp
bound
into
push
pop
into
xchg
das
insl
in
add
sbb
pop
push
pop
and
pop
sub
push
stos
aam
imul
add
or
outsb
pop
mov
xchg
scas
mov
or
jle
test
jno
popa
inc
insb
add
adc
sbb
addr16
testl
cmp
pop
adc
nop
push
lahf
addb
xor
jmp
clc
push
and
fisubrs
mov
icebp
mov
xchg
add
cmp
sub
test
ret
adc
hlt
popa
xor
adc
test
stos
mov
jnp
dec
mov
popf
enter
pop
or
xor
mov
les
xor
scas
fnstenv
fiadds
mov
push
mov
push
mov
push
adc
adcb
fildll
or
jnp
inc
loopne
pop
cmpsl
xchg
incl
xchg
movsl
imul
jnp
mov
insl
shrl
dec
add
sarb
andb
push
imul
mov
iret
imulb
loop
mov
jno
xor
daa
lret
push
movsl
test
push
iret
test
sub
xor
adc
mov
dec
pusha
mov
out
inc
scas
xchg
outsl
pop
dec
dec
mov
insl
mov
dec
lret
lahf
lods
push
mov
lcall
in
xchg
jmp
cltd
test
loope,pt
addr16
cmpl
inc
sbb
or
mov
push
jo
ljmp
jmp
orb
lret
std
cltd
mov
pop
xor
clc
dec
loopne
jnp
mov
pusha
addr16
popf
out
mov
out
mov
mov
inc
sbb
out
loopne
shlb
mov
into
xchg
in
test
jp
fnsave
test
stos
repnz
jbe
inc
aaa
pop
icebp
aaa
sbb
int3
xchg
in
sub
inc
cmc
xor
pushf
cld
sub
es
pop
xor
dec
sub
les
imul
rcl
mov
mov
sbb
jnp
xlat
jns
xor
inc
lret
decb
dec
jl
stc
ds
fdecstp
pop
imul
sbb
dec
push
xor
and
test
stos
xchg
in
loope
out
mov
push
mov
push
out
iret
pop
push
inc
fld
push
inc
js
push
sub
popf
mov
dec
push
in
ret
sub
jnp
cmp
jecxz
pop
mov
pop
pop
loop
test
call
dec
insb
shl
inc
mov
mov
mov
push
pop
out
and
jo
inc
mov
sub
cmp
pushf
dec
lahf
and
loopne
ljmp
push
or
lcall
dec
fs
mov
sbb
or
push
jmp
rclb
dec
and
cmpsl
in
mov
clc
and
xor
xor
andl
adc
rorl
and
insb
dec
fistps
xor
jl
adc
movsl
ss
add
add
pop
cmpsb
adc
inc
xchg
jbe
dec
mov
and
fwait
jp
dec
ret
test
shlb
cmpsb
sbb
push
xchg
fisttpl
fcomi
adc
inc
adc
repz
stos
lahf
push
je
xchg
pop
loop
cmpb
test
rorb
repnz
cmp
lods
loope
rol
sub
lret
cmp
rcrl
dec
in
fsts
cmp
cli
or
push
and
imul
xchg
arpl
enter
out
fbstp
jmp
cmp
mov
ljmp
or
lret
ja
shll
or
loope
adc
xor
movsl
push
jle
push
push
stos
mov
sbb
adc
mov
xchg
mov
test
rol
or
add
cltd
xor
push
push
push
iret
xor
insb
cltd
jge
int3
or
repz
fadds
iret
cmc
sub
dec
mov
and
pop
adc
test
je
sub
mov
sub
std
movsl
mov
push
cmpb
in
aam
sub
push
push
cltd
out
stos
push
and
fimull
leave
ret
fs
out
dec
pop
xchg
in
into
gs
mov
adc
inc
mov
inc
repnz
pop
push
lock
lret
scas
inc
std
xchg
lahf
decb
cwtl
int
mov
jg
dec
mov
mov
mov
mov
mov
inc
pop
in
mov
xchg
push
add
push
sbb
cwtl
pop
jmp
fistl
add
test
mov
xchg
ljmp
lahf
or
jne
mov
lea
stc
out
jbe
out
and
inc
pop
dec
dec
out
jg
outsl
cltd
fucomip
pop
int
out
cmpsl
in
xor
popa
lds
mov
push
fidivl
loop
cwtl
stos
popl
repz
xor
mov
jb
mov
pop
jbe
push
into
mov
cld
mov
push
ficompl
std
idivl
inc
dec
xor
nop
mov
daa
or
fbld
dec
fs
movsl
mov
out
push
sub
mov
popf
and
xchg
push
jmp
in
pop
mov
add
push
lods
aaa
pop
cltd
add
pop
es
cmp
lret
filds
shrb
sub
ljmp
inc
and
xor
or
bound
test
scas
shlb
xlat
mov
js
mov
mov
popa
push
cmp
mov
rorb
cmc
add
rolb
scas
or
lds
mov
in
xor
iret
arpl
movsl
inc
xorps
xchg
pop
cmp
and
iret
das
insl
inc
mov
imul
frstor
xlat
or
mov
sarl
arpl
mov
mov
fldl2t
insb
and
fldcw
faddl
lea
out
movswl
rorb
stc
out
mov
pop
das
dec
pop
outsl
notb
xor
bound
or
xchg
stos
mov
cmp
fldenv
mov
sbb
xchg
sbb
imul
mov
in
cli
inc
jo
ficoms
in
fiaddl
dec
push
cmpsb
mov
xchg
sub
int3
xchg
sbb
and
pusha
xchg
or
mov
mov
imul
sub
mov
cmp
pop
mov
jg
fadds
xchg
jbe
sub
jmp
inc
fst
push
lea
xor
cli
and
sti
sbbl
mov
jbe
fdivl
aaa
mov
movsl
adc
fisttpl
or
fwait
push
outsb
adc
mov
pop
std
xchg
dec
sub
fwait
aas
sub
cmc
ret
daa
out
fstpt
incb
iret
adc
ret
sbb
sti
les
xchg
sub
push
jnp
stos
das
push
jp
mov
stos
add
setnp
aaa
adcl
cmp
fdiv
loope
push
popf
cltd
std
xchg
jns
outsl
es
mov
or
aaa
jmp
leave
test
inc
xchg
push
pop
stos
dec
push
in
push
or
dec
outsb
cwtd
hlt
push
nop
xchg
scas
leave
push
cmpb
jae
jle
jnp
stc
lahf
dec
loopne
sbb
jmp
xor
jno
xlat
outsb
aaa
xchg
dec
mov
sbb
fidivrs
mov
mov
ljmp
sbb
lea
and
outsb
movl
or
dec
bnd
xor
mov
pusha
stc
cmp
or
mov
mov
imul
inc
ja
cmp
and
push
out
stc
push
sbb
sub
cmp
inc
fnstcw
ja
push
pop
sbb
popf
adc
mov
scas
push
inc
xchg
je
cmpsb
nop
pop
addr16
lods
sub
mov
xor
in
stos
mov
push
and
mov
push
mov
jno
fadd
aaa
adc
scas
xchg
shrb
imul
hlt
inc
mov
add
pop
adc
int3
scas
push
dec
pop
pop
jg
aam
loop
aam
popf
inc
int
cmc
mov
popa
loop
mov
test
push
lods
xor
ja
jo
xor
nop
mov
out
loope
ret
mov
mov
lret
iret
or
loop
pop
ds
sub
mov
imul
loop
dec
adc
insl
push
test
les
int3
cltd
mov
push
add
cmc
dec
or
cs
jo
add
sub
cmovae
adc
push
cmp
xor
test
inc
es
rcr
mov
gs
mov
adc
mov
push
cmp
or
adcb
lods
mov
inc
out
push
popf
pop
bound
pop
int3
mov
sub
cs
fiaddl
nop
and
lods
add
add
sub
mov
inc
pop
sub
push
cmp
dec
dec
pusha
jne
sub
les
lret
xchg
into
gs
std
popa
jmp
iret
jnp
xor
dec
and
cltd
stos
sub
es
jle
cmp
lods
lahf
lods
inc
adc
dec
divb
xor
mov
xchg
call
cmp
stc
insb
inc
inc
fcoms
subb
adc
dec
xchg
imul
in
hlt
addl
lea
jmp
rcr
adc
xchg
out
lds
mov
adcb
jbe
outsb
add
sub
lea
sahf
add
mov
add
xor
xor
test
xor
lahf
mov
cs
adc
xchg
dec
adc
push
shld
mov
adc
jecxz
inc
add
cwtl
xchg
dec
jno
fsubs
adc
push
cmp
stos
push
jmp
sub
mov
int
xor
adc
scas
je
xchg
out
xchg
ljmp
es
aas
add
pop
pop
lahf
push
rcrl
sbb
sahf
mov
popf
call
cmp
and
xchg
int3
in
xchg
jecxz
xor
pop
outsl
push
ss
inc
daa
imulb
jecxz
pop
mov
jo
mov
rolb
repnz
adc
repz
ds
mov
and
mul
stos
and
aad
stc
popf
inc
dec
sub
mov
xchg
sub
mov
js
call
inc
push
and
mov
mov
xor
or
mov
adc
pop
hlt
lods
xchg
fnstcw
lock
lods
mov
ja
cmpsl
js
int
mov
sarl
stos
sub
inc
pop
cmp
test
cmpsb
add
cmp
xchg
jns
push
in
inc
pushf
scas
xor
pop
xor
jae
push
imul
aam
dec
dec
fwait
gs
xchg
cmp
lods
sbb
inc
pop
jbe
js
test
inc
fnsave
call
dec
mov
xchg
fiadds
xchg
mov
repz
mov
stos
lret
iret
cmp
das
push
xor
popa
and
lea
push
mov
and
mov
stos
call
aas
mov
xchg
or
xor
in
pop
out
push
and
push
dec
notb
xchg
fdivp
add
loop
xchg
sub
mov
and
adc
or
insb
and
lcall
xchg
cld
lcall
push
mov
das
xor
test
inc
inc
ret
cmpsl
mov
dec
pop
adc
sbb
rcrl
movsb
pop
mov
sbb
mov
dec
jge
hlt
fs
sub
mov
pop
or
mov
mov
out
adc
daa
dec
dec
arpl
stc
sti
movsb
and
out
test
xchg
mov
ret
mov
mov
inc
mov
enter
mov
and
cmpsl
jno
xchg
mov
jmp
cmp
pop
fisubs
sbb
mov
fadds
cmp
shll
push
pop
gs
xchg
adc
push
push
nop
fildll
int
mov
iret
mov
pop
xchg
pop
mov
mov
xchg
shrl
ret
lahf
bswap
iret
pop
adc
iret
cmpsb
and
mov
cmpsb
cld
fcoml
imul
addr16
roll
adc
popa
ja
test
es
out
pop
fnstenv
cmp
mov
inc
push
cltd
mov
bound
mov
and
sub
enter
and
clc
testl
xor
jge
fld
ret
dec
and
adc
xor
shl
popf
aas
inc
xor
or
sbb
call
push
sub
cli
inc
or
sbb
movsl
mov
out
into
and
mov
mov
in
dec
ficoml
pop
test
mov
fimuls
lret
mov
fs
cmpsl
push
cmp
stos
or
sbb
out
cltd
sarb
pop
aaa
into
dec
in
icebp
and
pop
sub
subl
push
scas
sarl
dec
sub
sub
js
xor
aad
arpl
push
mov
outsb
xor
ffreep
iret
xchg
adc
add
sub
push
inc
sub
mov
fbld
popa
add
aaa
sbb
nop
mov
lea
movsl
and
loop
adc
mov
cmp
sub
inc
fs
jge
aad
and
adc
inc
icebp
adc
aas
test
in
cmp
push
sub
sti
xlat
das
push
inc
add
pslld
mov
pop
jae
and
mov
std
push
fldcw
or
popf
out
jl
mov
bound
cltd
pop
or
out
cld
add
push
mov
mov
outsl
push
xor
cmp
mov
mov
push
xchg
cs
mov
mov
je
stc
dec
and
xlat
or
xor
mov
sbbb
je
mov
cmp
into
and
mov
dec
cmpsl
or
hlt
add
mov
add
pop
sbb
xor
jbe
pop
add
inc
jo
cwtl
jae
mov
sub
cli
ficomps
or
or
fsub
add
jle
push
mov
les
ret
jmp
jnp
cmp
push
dec
xorb
das
mov
add
adcl
fists
dec
and
clc
dec
cltd
popa
faddl
mov
xchg
pop
sub
fidivrs
imul
aas
cwtl
sbb
lock
xchg
lods
imul
int
push
push
inc
jb
lahf
xor
rorb
dec
mov
mov
in
bswap
popf
mov
xchg
add
xchg
imul
cmp
fistpll
sbbl
lret
in
test
test
mov
std
xchg
or
sub
sbb
sbb
jbe
sub
dec
or
imul
testl
jl
xchg
and
adc
pop
dec
jecxz
sbb
loope
lods
jmp
inc
nop
popf
xor
fs
xchg
mov
cld
push
pop
mov
ljmp
notb
cld
xchg
mov
add
ret
fnstsw
xchg
add
cmc
sbbb
cs
inc
loope
mov
sub
loope
and
int
lcall
mov
push
jmp
dec
in
addl
adc
test
lret
mov
insb
sub
pop
pop
call
sbbb
pop
cmp
test
ret
jmp
dec
mov
stc
push
xchg
imul
lds
data16
insb
add
std
inc
fwait
sub
lcall
lea
jle
sub
mov
imul
sub
add
mov
inc
mov
mov
xchg
xchg
fs
jp
xchg
scas
icebp
jle
xor
xor
in
insb
add
add
gs
nop
or
adc
or
nop
pop
mov
pop
cmp
ja
cs
xchg
clc
das
sub
mov
adc
arpl
sub
mov
add
in
ljmp
sub
push
cli
rol
test
xor
sbb
jp
and
mov
add
mov
pop
jl
xor
lcall
iret
aad
add
stc
sub
ja
fisttpl
pop
je
or
pop
or
movsb
repnz
sbb
lret
lea
push
movsl
push
or
pop
adc
mov
jge
push
mov
mov
xor
pusha
ss
test
hlt
insl
add
dec
mov
pop
xchg
pop
ret
mov
addr16
iret
cwtl
fsub
or
subb
dec
jl
sub
pop
dec
arpl
xchg
and
and
lahf
cmp
aaa
dec
sbb
mov
sub
out
arpl
daa
js
xchg
add
inc
push
cld
pusha
pop
sbb
mov
popf
xor
xchg
jno
adc
mov
push
movsb
call
arpl
fildl
pop
insl
loopne
cli
jno
xor
jnp
aas
xlat
mov
clc
add
sbb
jmp
stos
js
or
sti
stos
outsb
clc
fistpl
sbb
jmp
movsb
repnz
dec
mov
fists
or
andl
jecxz
adc
mov
cmpsb
adc
sbbb
sub
mov
mov
or
sar
addl
test
dec
push
xchg
or
cltd
and
lods
xchg
cld
pop
popa
dec
bound
les
or
and
sbb
iret
bound
cs
shl
add
movsl
push
fnstsw
ret
outsl
mov
mov
pop
subl
enter
cs
loopne
aas
stc
or
xchg
pushf
arpl
not
pop
popa
and
push
andb
inc
std
push
fidivs
pop
dec
mov
xor
mov
mov
loope
or
rep
es
ja
sub
cwtl
adc
cmc
ret
jl
loope
sub
sbb
xchg
sbb
lahf
out
or
movsb
sub
xchg
sub
mov
outsl
adc
imul
repnz
pop
xchg
shl
inc
mov
popa
in
dec
cmc
jge
or
scas
sahf
cmp
ror
xchg
stos
icebp
std
das
adc
stos
dec
xor
inc
or
jbe
push
inc
in
movsl
mov
arpl
stos
sbb
and
adc
or
or
sub
orl
popa
or
xor
idivl
mov
push
insl
add
mov
insl
fcmovbe
ret
dec
pop
adc
int3
sub
pop
or
push
popl
adc
adc
inc
popa
sub
xchg
adc
stos
ret
dec
dec
jecxz
push
push
add
push
or
push
leave
add
mov
lret
ss
inc
xlat
xlat
dec
inc
inc
sar
pop
insl
cmp
rorb
mov
inc
adc
jb
or
cmp
xor
sbb
pop
dec
adc
ret
js
rcrb
mov
andb
jmp
into
out
mov
popf
adc
or
cmc
int3
sbb
inc
push
jae
and
decl
rep
jge
add
sbb
gs
pop
out
aam
out
mov
cmp
inc
repnz
in
xor
mov
pop
int3
jg
mov
repnz
aam
mov
dec
stc
or
pop
mov
scas
scas
push
adc
mov
popa
ret
dec
cmp
push
mov
daa
xor
push
xor
cs
aaa
sub
shl
xchg
dec
fildll
cmpsl
sub
cmp
mov
shrb
pop
dec
repnz
inc
fcmovnb
loop
xchg
cltd
xor
mov
iret
imul
xchg
cs
inc
aaa
push
jnp
jb
xor
mov
fdivs
out
jecxz
push
mov
movsbl
and
adc
sub
shl
mov
incl
xor
fmul
mov
outsl
dec
sbb
gs
movsl
lret
movsl
mov
loope
lret
and
push
pop
lods
dec
sub
jno
ret
rcr
push
push
inc
and
jmp
push
xchg
loopne
pusha
push
and
jns
fs
jb
pop
pusha
lods
mov
cli
sbb
pop
xor
and
and
std
push
mov
xchg
pop
rorl
fsubrs
in
xchg
mov
fdivl
fidivrl
push
call
add
lods
mov
popa
inc
rol
jle
imul
or
mov
mov
inc
jl
enter
jae
pop
clc
xchg
xchg
xor
sbb
stos
enter
out
xor
xchg
dec
or
and
sub
ja
adc
lahf
cwtl
test
lods
je
push
lret
xor
xor
fnstenv
outsl
mov
mov
loop
and
adc
int
loopne
scas
xor
add
aad
inc
jns
repnz
and
into
enter
cmp
imul
dec
mov
dec
sub
lret
outsb
fistl
sub
rcl
insb
add
mov
jecxz
xor
jge
inc
andb
add
lret
sub
jnp
sti
mov
xchg
cs
rol
cltd
xchg
out
int
sbb
and
pop
xchg
insl
ja
popf
scas
or
divb
repnz
dec
jge
mov
stos
push
movsl
fcmovnb
add
mov
push
sub
cltd
pusha
ss
test
mov
jmp
mov
gs
dec
out
into
icebp
xor
shrl
mov
mov
fwait
fldl
mov
mov
scas
enter
iret
data16
leave
mov
cmp
sbb
pusha
cmpsl
imul
fisttpl
xchg
jmp
popa
lock
cmp
xchg
fwait
mov
insl
sbb
cmp
in
clc
push
mov
xor
bound
shll
arpl
sbb
adc
mov
add
enter
out
jb
ds
mov
sbb
jg
fisubrs
sarl
dec
mov
jge
pop
aas
cwtl
scas
dec
and
mov
push
movsl
or
dec
xor
test
pop
add
loop
inc
inc
aas
jb
imul
xor
jge
sub
jle
rorl
mov
cmp
add
mov
mov
into
lods
sub
aaa
xchg
mov
sbb
scas
or
pause
push
mov
adc
and
dec
xor
adc
scas
mov
jae
jbe
fidivrs
xchg
xor
or
sub
data16
orps
scas
cld
and
out
bound
xor
popf
xchg
fsubrl
enter
cwtl
jmp
add
xchg
jmp
in
aas
pop
cmp
mov
jge
sbb
sti
popl
adc
push
cs
cltd
test
faddl
fucomi
int
out
test
inc
aas
xor
movsl
int3
shrb
xor
shrl
push
pop
scas
inc
out
mov
sub
int3
dec
mov
fsubrp
mov
jne
int
fidivrl
mov
lods
ficoml
inc
xor
adcb
aaa
add
fadds
lcall
scas
push
popf
mov
pop
add
nop
repnz
sub
mov
scas
out
jne
xor
xchg
cli
adcb
sbb
shrb
mov
ret
bound
cltd
imul
mov
stc
jnp
cmp
rol
jo
insl
fistps
fcoms
cmpb
fucomp
jbe
add
pop
mov
nop
in
dec
dec
push
enter
cwtl
sar
jb
mov
test
sub
fxch
dec
out
mov
cltd
hlt
ja
imull
pop
movsb
dec
mov
inc
sbb
dec
sbb
mov
jb
out
mov
int
cwtl
mov
pop
test
sub
sbb
xchg
cmp
jg
adc
aad
les
xor
aaa
fstl
or
inc
popf
xchg
xor
jbe
sub
xchg
jecxz
outsb
sbb
lods
test
insl
int
jb
adc
shrl
call
mov
and
out
or
mov
add
roll
add
cwtd
xchg
stos
cmp
imul
loop
adc
xchg
and
mov
push
mov
les
mov
mov
aam
sbb
cltd
stos
arpl
xchg
inc
xor
ja
mov
cmc
mov
repz
push
das
mov
into
push
mov
add
cmp
lret
push
fwait
xor
jo
lret
in
adc
rolb
lock
dec
insb
push
fldt
push
or
rcrl
sti
mov
in
and
cmp
sbb
mov
cmp
cmp
and
and
loopne
bound
sbb
scas
jno
cmp
mov
sub
sub
mov
push
pop
mov
fdivl
pusha
mov
les
cmp
pop
insl
pop
mov
mov
cmp
cmp
sti
pop
repnz
jle
adc
push
cmp
adc
and
rorb
mov
imul
imul
imul
cmp
jno
and
pop
cli
dec
out
nop
cli
pushf
inc
cmp
stos
pop
test
lods
std
fnstenv
dec
fidivl
int
mov
inc
sub
fisttpll
adc
xor
pop
scas
jno
jmp
out
cwtl
mov
mulb
mov
les
add
lea
xor
inc
mov
aaa
lods
sbb
sbb
sbb
cmpsb
add
sbb
push
adc
fsubr
mov
jnp
mov
pop
jecxz
enter
sub
cmpsl
or
mov
mov
jno
add
xchg
jno
sahf
cli
push
out
jmp
or
outsb
fstps
sub
dec
dec
xor
mov
and
rcll
jle
ss
dec
pop
xchg
jns
out
jbe
inc
xlat
in
or
test
jno
aaa
push
imul
sbb
nop
adc
push
cwtl
jae
int
out
aam
cmp
movsl
pop
das
push
dec
dec
loop
sahf
loop
cmp
shll
mov
in
or
sub
pop
lret
icebp
or
nop
lmsw
jmp
iret
or
inc
iret
push
inc
pop
adc
outsb
scas
mov
test
mov
mov
ss
push
in
stc
adc
cmp
inc
inc
sbb
arpl
lahf
lret
movsl
xchg
fwait
out
inc
in
adc
loopne
mov
xchg
xchg
and
mov
sarb
push
mov
test
sub
aad
cmp
test
loop
imul
ret
loope
jecxz
out
popf
and
ret
pushf
nop
out
andl
xchg
movsb
dec
out
fwait
repnz
sub
pop
loop
mov
jle
lret
and
sbb
inc
es
sub
aas
cs
addl
das
filds
repz
or
cmp
dec
insb
pop
lahf
xor
aad
mov
repz
frstor
jne
stos
xor
ffree
jns
arpl
dec
aad
cmpsb
in
jg
scas
mov
cmpl
pop
push
daa
pop
jbe
xor
dec
pop
imul
fsts
adc
data16
les
fists
dec
mov
idivb
mov
and
arpl
and
add
xor
mov
pop
xchg
xchg
adc
sahf
jecxz
inc
pop
add
jne
jnp
push
mov
adc
gs
sbb
jno
lret
dec
jl
addr16
and
xor
ljmp
and
mov
cmpsl
xchg
dec
notl
imul
rorb
adc
dec
fsubs
cmp
rcll
das
pop
dec
inc
pop
ds
aam
rorb
mov
xor
mov
inc
fcmovne
arpl
stos
cwtl
mov
les
loop
rol
jl
andb
mov
cwtl
jne
aam
mov
enter
jg
jmp
popf
mov
jno
xchg
add
lods
jbe
lock
inc
test
inc
fcmovu
adc
sti
lret
xlat
xor
ljmp
jbe
data16
mov
jp
xchg
add
adc
add
mov
rorb
mov
xor
test
adc
dec
loope
add
in
dec
pop
sbb
or
hlt
and
leave
xchg
jmp
xor
add
icebp
xchg
fidivs
jbe
jbe
out
mov
insb
push
js
gs
push
jbe
iret
inc
shll
xchg
mov
mov
jbe
in
xor
and
aad
sbb
nop
add
mov
sti
jl
fnstenv
lahf
aaa
cld
ds
shlb
cld
cmpsb
mov
popa
ret
pusha
aam
or
jl
std
sahf
xor
inc
and
mov
pop
rcl
fsubs
aaa
pop
stc
lahf
add
xchg
add
out
in
pop
cld
xchg
xor
mov
stos
jecxz
push
lcall
imul
in
stos
jmp
iret
enter
out
stos
push
cltd
cltd
repnz
xor
and
pop
adcb
xor
jg
clc
enter
pop
and
nop
in
jnp
loope
ficoml
mov
in
push
jae
mov
adc
jge
fnstenv
cwtl
loope
push
in
cltd
bnd
mov
test
jno
mov
pop
push
inc
inc
addb
int3
cltd
hlt
cmpb
out
xlat
mov
aas
xlat
sbb
ret
pop
xlat
insb
xchg
xchg
icebp
jg
leave
out
pop
add
and
adc
in
or
and
ljmp
aaa
adc
test
je
je
xor
lcall
loopne
sti
pop
mov
mov
nop
scas
mov
mov
lcall
and
std
mov
cmpsb
nop
loop
je
out
adcb
jns
xchg
scas
adcb
rcrb
xchg
lea
cmp
out
jecxz
fwait
pusha
inc
and
int
hlt
push
insb
cmp
xchg
lahf
pop
repz
pushf
inc
enter
faddp
aaa
xchg
scas
jns
adcl
or
mov
jge
in
push
lods
shlb
jo
xchg
je
out
and
push
xchg
insl
test
leave
enter
dec
dec
pop
sub
out
shll
pop
push
cli
fistpl
push
pushf
mov
enter
fistl
xchg
ja
andb
jnp
dec
jecxz
pushf
mov
negb
incb
pop
cltd
repnz
fldcw
xor
lret
xor
inc
push
popa
subl
decb
das
sub
pop
pop
jmp
stos
mov
mov
pop
fcompl
in
mov
jns
jecxz
sbb
call
js
push
cmp
add
xchg
adc
ror
xor
sbb
pusha
xchg
iret
fcmovne
iret
call
lcall
shlb
daa
inc
inc
add
cli
filds
test
mov
fists
cmpsb
sbb
add
and
mov
jmp
inc
sbb
push
and
mov
xor
jle
cmp
sti
cmp
sub
aam
lcall
xor
xor
inc
push
test
rclb
cltd
inc
mov
fwait
das
adc
or
mov
push
icebp
inc
imul
out
cmpsl
out
sbb
aaa
jb
cmp
out
mulb
int
daa
pop
dec
gs
push
mov
adc
push
cmp
cltd
outsb
dec
adc
jno
dec
mov
roll
sbbb
xchg
das
test
pop
das
enter
push
or
dec
dec
cmp
fnstsw
mov
imul
jae
jle
icebp
dec
out
mov
in
stos
mov
adc
add
inc
push
shrl
popa
shrl
push
pusha
and
xorb
mov
stos
inc
dec
pusha
call
fwait
out
ss
jge
xchg
push
movsb
or
aas
lds
inc
fstpl
leave
push
out
shl
scas
enter
adc
lret
shr
mov
loopne
jo
aam
xchg
or
loope
sub
inc
inc
cmpsb
div
jo
les
cmp
std
cwtl
stos
push
repz
stos
jns
mov
loope
jbe
dec
into
ja
or
adc
sub
adc
dec
jne
cmpsl
ret
imul
or
cmp
insl
pop
or
mov
jne
dec
push
pop
cli
xchg
lea
loop
lea
xchg
pop
mov
cmp
cmp
fisubrl
out
loop
pop
cmp
mov
shlb
cld
mov
dec
aas
aam
or
ffreep
jnp
xor
cli
sbb
aaa
sbb
insl
imul
mov
aad
mov
inc
call
sub
loop
ss
in
test
mov
pusha
pop
test
cli
xchg
push
lock
mov
sbb
and
insl
sub
in
cmp
xor
push
mov
mov
mov
gs
outsl
xchg
popa
mov
push
mov
cli
push
aaa
scas
push
sub
jge
clc
sub
sarb
pop
fistps
dec
ljmp
and
jecxz
xor
out
mov
and
fdivs
ret
cmp
pusha
jge
shll
fbstp
into
and
lods
add
pop
pop
adc
lcall
popa
mov
cwtl
sub
movsb
out
in
ja,pn
sbb
in
enter
and
push
les
fdivrs
xchg
or
cli
xor
popa
subl
jno
mov
daa
call
rol
xor
ret
push
mov
push
fimull
cmpsb
pop
cltd
stos
cmp
cli
outsb
mov
cmp
jge
adc
sbb
pop
mov
push
sub
negb
stc
lret
test
cltd
pop
cltd
mov
outsb
push
xchg
fstpl
lea
push
outsl
insb
lock
pop
in
mov
xor
sub
add
or
push
mov
js
test
outsl
cmpsb
mov
and
mov
xor
adc
adcb
lods
fwait
dec
jnp
xor
xor
testl
adc
xchg
cltd
addr16
fidivrs
sbb
out
push
lods
int
mov
inc
and
fistpll
push
or
lcall
jg
mov
xor
in
stos
aaa
mov
ss
jmp
mov
add
int
dec
xchg
popa
jns
pop
cmpsb
ja
pop
cmp
mov
mov
inc
js
mov
sar
call
dec
pop
mov
sbb
push
sahf
or
dec
js
lods
lods
pop
pop
call
push
pop
dec
mov
in
cs
xlat
lahf
or
jo
out
aad
push
mov
test
add
test
sbb
les
bound
push
bound
popf
ljmp
mov
scas
xor
or
and
call
mov
mov
imul
mov
push
jno
lcall
push
add
adc
out
jg
xchg
add
sub
fnstsw
pop
imul
mov
push
add
dec
sub
aad
call
mov
fcmovbe
ja
fbstp
cwtl
movsb
adc
mov
ficomps
mov
int3
push
mov
lea
ss
in
shlb
jg
aam
gs
ja
fs
bound
cmpsb
adc
jnp
sbb
jle
stc
mov
lock
shrl
mov
hlt
fidivs
mov
push
xor
push
push
std
inc
xchg
sar
stos
std
adc
movsl
pop
sub
sbb
pop
outsb
dec
popa
jl
sbb
xchg
mov
int
push
cltd
fwait
adc
adc
lcall
cmp
cmpsl
rol
or
popa
sub
mov
pop
shll
dec
mov
subl
jno
shlb
jp
jecxz
mov
cmpsb
jb
dec
or
es
sti
push
xorl
out
sub
xchg
or
insl
add
gs
push
stos
xchg
xor
sbbl
dec
es
loop,pn
and
cmp
mov
jnp
mov
mov
and
sbbb
jbe
incb
je
xchg
jle
jg,pn
cs
adc
outsl
add
es
mov
inc
inc
mov
mul
sbbb
imulb
pop
jne
push
cmpsb
mov
fnstenv
lods
lods
out
xor
cmpsb
gs
mov
sbbl
cmc
cmp
insl
push
int
lcall
push
and
fidivl
pushf
es
aas
push
mov
fsubs
add
or
and
pop
sub
aad
cmpsb
push
xor
fistl
sti
int
pop
cmp
mov
repnz
xchg
sti
inc
movzwl
and
cmpsl
cmp
nop
mov
lret
jb
es
jns
push
and
push
repz
jge
cmp
repz
or
add
pop
ljmp
xchg
pop
icebp
and
imulb
loop
sbb
adc
ds
arpl
inc
aam
mov
ljmp
or
jecxz
cltd
xor
iret
pop
test
sarl
mov
cmpsb
adc
sbb
pop
test
out
pop
ret
pop
sub
mov
sub
mov
dec
dec
pop
jmp
ret
push
sub
popf
mov
sbb
add
stos
shlb
sbb
icebp
xor
mov
ret
in
jecxz
or
sub
lcall
fidivl
cld
jge
cmpsb
push
mov
loopne
dec
bound
sti
jne
or
call
xchg
sbb
movsbl
push
fstl
push
cwtl
xor
cmpsl
sbb
mov
stos
add
add
dec
repnz
dec
test
xchg
add
inc
mov
insb
ret
dec
jmp
mov
sti
mov
adc
movsl
loopne
pop
adc
and
mov
push
sub
mov
sahf
push
add
enter
in
out
sti
out
inc
es
movsl
add
jno
xor
mov
mov
popa
sub
mov
or
dec
adc
jo
loope
pop
mov
push
xchg
add
out
data16
sbb
test
loope
adc
std
dec
xor
pusha
and
pop
call
scas
cmp
or
in
sbb
es
int3
arpl
or
jmp
xor
jmp
or
movl
jecxz
pusha
testl
jle
sbbl
add
fwait
and
mov
rcl
subl
adc
xchg
push
xor
sub
add
mov
jp
inc
dec
push
sbb
fs
mov
idivb
push
cmp
hlt
xchg
nop
aas
add
push
leave
mov
out
cmpsl
xchg
dec
test
enter
jl
insb
lret
push
mov
mov
mov
or
movsb
sbb
push
dec
shl
repz
or
ret
pop
inc
jecxz
pop
adc
mov
cltd
pop
les
sub
push
jmp
into
data16
pop
icebp
aad
xchg
sub
movsb
stc
nop
scas
jb
cmp
pop
scas
add
xor
fsubrp
outsl
dec
push
and
cmp
imul
dec
rclb
cwtl
pop
jb
leave
jne
fmulp
arpl
sarl
clc
or
sbb
push
enter
jno
jecxz
mov
mov
sbb
mov
cli
out
or
push
xor
mov
and
adc
rorl
cld
mov
sbb
sub
call
and
outsl
cmpsb
ss
jae
repz
jg
in
jns
sub
das
fldenv
pop
icebp
push
cmpsb
jge
and
loope
mov
data16
push
pop
insl
jnp
mov
adc
cwtl
test
inc
shr
jb
mov
mov
xchg
in
pop
popa
fs
aam
in
and
movsl
push
cwtl
ljmp
and
aam
jle
mov
mov
mov
or
jecxz
xchg
test
pushl
push
jmp
ror
cltd
cmpl
jo
in
push
pop
pop
cmpsl
out
lods
mov
test
cmp
cli
or
add
into
std
andb
ret
pop
pop
scas
mov
fdivs
aam
inc
push
fimull
loope
pop
imul
mov
jg
pusha
movsl
push
shll
sub
pop
and
xor
and
popf
xor
ljmp
pop
js
xlat
cmp
pop
test
and
dec
cltd
or
xchg
lods
xchg
pop
imul
push
jns
cmp
in
loope
dec
or
mov
subl
stos
call
imull
sbb
dec
sbb
push
daa
adc
fisubrl
subb
pop
mov
fdivl
push
push
xchg
std
adc
hlt
inc
push
sbb
sbb
shll
mov
bound
adc
dec
dec
ss
pop
int3
cmp
test
fstpl
out
dec
loop
notb
jbe
pop
mov
lea
xchg
mov
push
dec
movsl
mov
push
in
mov
add
and
pop
daa
sahf
dec
arpl
push
ss
ljmp
js
sub
gs
mov
push
enter
adc
nop
sbb
sbb
lahf
mov
addr16
imul
push
mov
test
arpl
xor
push
push
mov
out
imul
cs
jns
decl
in
test
add
cmp
pop
cmc
adc
fimuls
adc
in
xlat
pop
aad
lcall
sbb
aas
jmp
and
pop
mov
in
jnp
xchg
mov
pop
dec
ja
dec
mov
mov
adc
cmp
sub
pop
xor
pop
out
jp
xor
pop
jmp
or
cmpsb
push
sub
ds
rclb
outsl
xor
out
xor
pop
mov
jno
int
idiv
iret
jle
inc
cltd
add
lret
bound
xchg
jbe,pt
out
or
mov
pop
and
out
nop
jp
push
lock
sbb
pop
repz
xchg
fistps
arpl
jnp
mov
ljmp
push
or
adc
push
dec
mov
mov
sbb
mov
bound
inc
cmc
adcl
sbb
dec
in
xor
sbb
mov
dec
dec
data16
xchg
data16
fdivrl
les
inc
clc
js
mov
shrb
orl
clc
movsb
fs
sahf
loope
adc
inc
sbb
sbb
lcall
out
sarl
idivl
and
pop
add
adc
aas
cs
jge
ja
add
jle
and
lea
imul
repnz
push
test
mov
jmp
sbb
mov
mov
shrl
and
sub
cmc
pop
jae
lcall
scas
push
xor
jle
mov
cmc
push
faddl
mov
cmp
les
xor
dec
or
arpl
imul
stos
lret
xor
mov
jbe
ficoms
ficompl
sti
cld
pop
clc
and
jne
mov
adc
leave
lods
jp
daa
mov
mov
in
cmp
sarb
add
ds
in
sub
add
enter
in
or
xor
scas
ds
cs
mov
pop
jp
mov
fnstenv
pop
iret
rorb
and
sub
stos
movsl
pop
lock
add
mov
clc
shll
dec
sbb
push
xlat
loope
cmc
sbb
repz
inc
and
in
adc
jno
pop
jg
push
fs
sahf
cmp
mov
xchg
adc
sbb
sbbb
mov
mov
push
shlb
int
push
imul
hlt
push
jp
push
sub
cs
adc
jb
adc
mov
and
mov
int3
lret
cs
int
push
fxam
clc
mov
mov
mov
int
stc
pop
idiv
std
lods
xor
jge
xchg
pusha
mov
mov
fmull
mov
xor
and
xor
shrl
psraw
push
pop
mov
mov
pop
lods
xchg
pop
sub
rcll
lret
push
and
jge
fmuls
popf
sub
fnstsw
fs
mov
mov
stos
shlb
mov
jbe
cmp
adc
or
sbb
aad
and
or
out
mov
cmp
pop
imul
inc
and
loopne
or
and
stos
mov
es
lret
clc
int3
movsl
call
fwait
scas
popf
stc
sbbb
sbb
mov
cmpsl
lahf
aas
add
adc
pop
sbb
test
pop
sub
dec
int3
mov
add
test
cwtl
lods
test
mov
and
cmpsl
push
cs
jbe
repnz
cld
lcall
in
test
adc
jg
arpl
leave
int
mov
pop
out
in
aaa
mov
jb
jmp
frstor
xorb
test
imull
or
aad
sub
sub
mov
pop
dec
insb
out
jecxz
jne
aaa
hlt
ljmp
in
addl
or
cmc
inc
push
cmp
mov
outsl
lret
lret
sbb
mov
cmp
mov
pop
rclb
sub
jecxz
xor
xchg
jmp
out
mov
xchg
repz
inc
shr
add
enter
jns
bound
cmpsl
mov
mov
xchg
inc
call
cmp
pop
incb
cs
mov
imul
xchg
test
add
shlb
dec
in
call
fldenv
inc
cmp
xchg
inc
shl
and
repnz
fs
mulb
pop
pusha
mov
pop
lret
fnstsw
icebp
movsl
shll
addr16
imulb
cmp
push
mov
push
xor
inc
push
sub
or
mov
mov
fstps
mov
mov
jge
pop
sub
shlb
add
aam
or
pop
imul
insl
sbb
leave
jnp
mov
insl
adc
fcoms
nop
mov
test
loope
inc
xchg
loop
mov
adc
pushf
jo
insb
cmpsb
jns
push
lods
repz
out
mov
mov
cs
cltd
pop
hlt
sbb
adcl
xlat
inc
push
pop
sbb
xor
cmp
mov
push
imul
inc
sbb
xor
out
stos
push
test
cmp
push
cmp
aam
clc
pop
adc
test
clc
fcoml
cmp
xchg
rorl
imul
fisttpll
xchg
adcb
popa
outsl
jns
dec
jo
in
popf
add
arpl
push
imulb
push
add
mov
iret
or
sbb
push
cmp
mov
jno
in
in
out
cmpsl
push
cmp
scas
jp
and
push
pusha
stos
jo
lea
jne
decb
and
rorb
cltd
adc
mov
out
jle
xchg
mov
fwait
mov
xchg
mov
adc
add
out
dec
jecxz
push
push
movb
loop
adc
push
pushf
xor
xchg
mov
jl
mov
rcll
mov
lcall
sar
xor
ret
pop
insb
test
ljmp
testb
or
xor
mov
mov
lcall
loopne
fstpt
loope
xchg
icebp
and
iret
sub
lret
sbb
mov
into
int3
or
cmc
cwtl
mov
inc
push
sub
in
cmp
add
pop
xor
lea
shr
jns
out
jl
sahf
fdiv
xchg
ret
ss
sub
dec
das
loope
mov
mov
inc
mov
and
cmp
jmp
pop
shll
orb
dec
pop
adc
inc
movsl
push
or
or
jle
jl
mov
dec
stc
inc
lret
scas
stos
push
sub
dec
fidivrl
push
sub
mov
stos
mov
mov
mov
jbe
add
ds
sarb
push
jns
pop
arpl
pop
ja
lea
call
test
jg
call
hlt
nop
outsl
push
inc
push
add
push
jne
pop
xor
pop
inc
into
mov
mov
push
je
insb
in
clc
outsb
dec
shl
mov
sub
or
fnstenv
mov
mov
jl
mov
daa
fldenv
sti
xchg
ljmp
pop
imul
in
and
test
rcll
add
xor
dec
xor
or
jno
adc
pop
mov
or
xchg
mov
mov
pop
test
pop
inc
pop
callw
movb
sbb
call
dec
mov
push
ljmp
or
int
lret
js
rcrl
or
mov
fs
lcall
push
add
outsl
sub
testb
ljmp
leave
cmp
xchg
insb
jmp
sbb
ljmp
and
fnstcw
dec
in
cs
pusha
cmp
xchg
adc
mov
shll
mov
lcall
jnp
mov
xchg
adc
adc
pop
inc
loop
ljmp
pusha
divl
dec
pop
shrl
add
in
stos
std
and
push
mov
sbb
jne
adc
push
and
or
ret
notb
mov
mov
in
add
jl
push
shrw
je
mov
sub
dec
mov
mov
dec
sahf
cmpsb
mov
stos
repnz
sub
or
lods
inc
inc
cmp
je
xor
mov
cli
pusha
in
push
dec
nop
mov
scas
sbb
inc
pushl
push
aam
mov
sub
jno
into
pushf
push
adc
adc
pop
out
or
arpl
mov
jecxz
jmp
int
test
int
loop
mov
inc
sahf
xor
cs
arpl
cmp
lods
cmp
push
stos
mov
mov
pop
cs
mov
imul
dec
ja
fstps
lds
vminss
int
sahf
xor
cmpsl
pop
in
lds
lods
push
das
xchg
dec
inc
lods
sarl
add
lods
cltd
out
lret
inc
into
lahf
add
pop
sbb
mov
and
subl
das
or
cmp
mov
mov
fsubl
cltd
test
rorl
lea
adc
push
push
sub
ret
je
aad
in
cmp
sbb
pop
out
das
jmp
cmp
mov
test
test
xchg
sbb
mov
es
jg
add
cltd
test
outsb
xor
mov
aaa
mov
inc
test
xchg
jbe
loopne
dec
sbb
ret
dec
mov
or
cmc
je
mov
std
lods
dec
pop
test
insb
aas
shrb
ret
aas
in
mov
xlat
pop
imul
aam
out
and
pop
push
bound
jl
and
or
cli
add
mov
int
std
enter
test
cmp
adc
push
in
sub
pop
into
cmpb
cld
fstpl
dec
mov
out
shrb
dec
dec
iret
ret
inc
xchg
add
loop
cmp
mov
movsl
sbbl
xchg
add
inc
and
jge
adc
ss
fistps
mov
jne
sarb
inc
arpl
std
xchg
pop
loope
scas
xchg
ds
xchg
test
lahf
pop
pop
es
inc
loopw
sahf
dec
add
jb
mov
jge
daa
lock
push
les
jp
jno
mov
xchg
jne
cmp
aaa
rcll
scas
in
xor
sbb
mov
and
movsb
repz
xchg
add
inc
stos
in
jae
and
xor
ret
loope
in
jge
in
das
jl
cmp
cwtl
loope
or
bound
inc
dec
or
ljmp
scas
stc
jle
addr16
mov
and
movsl
xchg
add
dec
mov
loope
jnp
mov
int
pop
push
mov
fiadds
or
mov
dec
mov
xchg
stc
mov
dec
mov
mov
test
shrl
hlt
pop
scas
add
repnz
outsl
adcb
inc
jl
pop
loope
movl
sbb
sub
out
or
pop
in
jp
add
xor
ficomps
mov
fwait
mov
add
xor
xchg
in
sarb
xchg
xor
cmc
cmp
inc
or
sbb
sub
pop
sbb
outsb
mov
xlat
mov
mov
sub
adc
adcl
xchg
inc
fwait
inc
xchg
cltd
clc
test
mov
in
add
inc
cli
fsubs
and
jb
loop
stos
cs
adc
into
add
jge
out
dec
mov
mov
imul
call
out
outsl
inc
adc
stos
and
scas
jl
dec
shlb
shll
xor
popf
stos
mov
push
test
mov
aaa
leave
sub
push
lods
lods
adc
jne
dec
cmp
outsl
test
sbb
jo
push
sub
inc
sub
int
mov
inc
js
fsts
or
mov
out
push
mov
fxch
sub
popf
shll
popa
inc
xchg
gs
mov
cs
adc
in
cmpsb
and
rcll
jl
dec
scas
push
sahf
lods
jne
shll
subl
lret
cmp
add
or
cmpsl
xchg
cmp
mov
fidivs
stc
fidivs
out
mov
or
push
hlt
ret
mov
sub
out
xor
lds
inc
in
mov
dec
notl
cwtl
cmc
mov
sub
sbb
mov
shll
incl
aad
pop
setnp
push
and
push
push
jb
add
clc
into
xchg
mov
sbb
push
loopne
icebp
dec
pop
stc
cmp
imul
aam
es
fsubl
jns
xor
ss
or
pop
into
push
sub
sub
loopne
dec
popf
leave
scas
xchg
cmp
scas
gs
mov
rcll
sub
mov
imul
jmp
insb
sarl
add
sbb
push
lock
fldenv
das
mov
pop
pop
cmp
popf
sbb
negl
sub
mov
test
outsl
dec
decl
mov
pop
add
aam
ret
jb
popa
call
dec
fnstenv
test
lret
es
jp
fidivl
dec
daa
outsl
call
cmp
jb
add
test
adc
test
out
js
jmp
mov
aad
aas
jmp
fsts
pop
ljmp
lock
int3
movsl
in
rolb
das
out
cmpsb
sub
lret
out
insl
push
ja
inc
pop
imul
addr16
jge
inc
mov
outsl
aas
lret
leave
inc
aaa
jle
jecxz
adc
shrl
pop
xor
test
inc
repnz
inc
mov
add
gs
or
mov
bound
es
mov
fnstsw
ror
rcrl
outsb
sub
das
cmp
adc
inc
xchg
lods
adc
outsb
test
outsb
ret
ljmp
jno
cld
and
enter
push
out
aaa
xor
aas
cmp
aad
xchg
xchg
inc
cltd
outsb
pushl
stos
and
dec
mov
pop
mov
cwtl
movsb
sar
popf
mov
cli
or
popf
orl
cmpsb
jl
mov
fldenv
repz
mov
das
mov
bound
mov
bound
jge
lret
das
repz
mov
iret
push
inc
rclb
orl
adcb
inc
mov
sbb
popf
lods
cmc
mov
iret
xor
imul
mov
xchg
cmc
aad
or
in
push
sub
jbe
shll
xchg
jge
lds
mov
xor
sub
jecxz
stos
inc
sbb
inc
cltd
out
shrb
je
rorb
pop
les
and
ss
mov
jp
xor
aad
adc
inc
jnp
jmp
pop
cltd
xchg
inc
data16
pop
mov
imul
inc
add
sub
popa
xchg
mov
jmp
dec
in
push
aad
push
sub
aaa
xchg
xor
jmp
mov
push
jnp
jno
xchg
add
cmpsb
pop
and
dec
outsb
inc
mov
enter
xchg
jl
into
jmp
or
testl
jge
cld
push
fistpl
leave
push
mov
das
fcmovbe
xlat
test
xor
in
cmp
in
jg
fidivl
sahf
fidivrs
insb
clc
aas
jno
add
in
aam
and
sub
outsl
mov
xchg
pushf
or
shrl
sub
mov
popf
inc
fcmove
xor
pusha
cmp
pusha
popf
xor
adc
jl
nop
cmpsb
adc
scas
mov
xorl
add
notl
outsb
rolb
mov
mov
lds
mov
lahf
sub
mov
andb
fsincos
or
test
mov
sbb
jns
loop
loopne
pop
adc
push
mov
rcr
sub
dec
xor
clc
inc
and
leave
dec
or
push
or
push
xchg
mov
leave
sar
dec
pop
sub
pop
shrb
mov
ljmp
cwtl
pop
and
cmpsb
xchg
shlb
das
call
xchg
jg
cmp
sbb
jecxz
xchg
jecxz
aad
jbe
notb
test
addb
cmp
lret
stos
jae
push
cld
sbb
fisttpll
mov
xor
fisttpl
xchg
stos
in
cmpsb
fbstp
pop
scas
aas
loop
sti
les
scas
mov
mov
fdivrl
jmp
mov
shl
test
add
push
js
mov
mov
les
adc
sbb
iret
gs
clc
pop
shlb
ficomps
mov
into
bound
sbb
lds
mov
andb
mov
lea
cmp
xor
testl
cmpsb
lock
outsb
inc
pop
lcall
out
test
rorl
std
xchg
pusha
das
sub
test
xchg
subl
in
outsb
push
test
push
scas
xchg
dec
or
cmp
ja
cmp
clc
mov
add
lds
outsl
jae
and
or
pop
shll
dec
movsl
mov
clc
jle
aad
xor
loopne
xchg
jmp
stos
cli
inc
push
cwtl
test
push
mov
push
pop
stc
push
dec
std
pop
mov
dec
push
jl
mov
fwait
push
sub
stos
negb
scas
shrb
ret
mov
or
jbe
push
xchg
mov
js
pop
hlt
and
hlt
sbb
sahf
xor
pusha
cld
cmp
popa
pusha
aam
fadds
scas
inc
int3
adc
fbld
movsl
into
pop
popa
test
pop
lahf
cmp
push
jno
push
mov
into
aaa
add
push
notl
jo
sub
shrl
dec
outsb
orl
stc
lret
daa
xchg
movsb
loop
leave
fisttpl
add
ret
int
out
jb
dec
loope
scas
enter
loopne
lods
cmpsl
out
fld
push
imul
add
sbb
leave
mov
jns
stos
mov
or
jle
ficomps
lret
gs
jg
pushf
scas
mov
outsl
mov
pop
movsl
or
rcl
push
jle
inc
pushf
pop
hlt
xchg
in
mov
in
ljmp
or
xchg
test
xor
stos
jne
and
add
outsb
jle
dec
loop
jne
mov
mov
pop
fs
cmp
daa
out
and
push
aad
adc
inc
and
xchg
cltd
xor
dec
arpl
mov
mov
adc
aas
test
int3
clc
mov
sahf
inc
mov
or
mov
push
stos
mov
jecxz
rcrl
call
mov
addr16
mov
in
cli
loope
push
stos
sbb
cmpb
adc
cmp
cs
in
pop
and
ret
shl
jecxz
ficoml
fmull
clc
jo
pop
mov
adcb
mov
mov
out
pop
pop
pop
inc
movsb
mov
pop
jg
push
in
jno
cmp
roll
aas
xlat
outsb
stos
in
addb
add
arpl
aaa
xchg
pushf
adc
les
dec
xlat
jo
fdivrs
mov
jecxz
outsb
mov
enter
adc
ret
xor
fisubrs
sub
mov
xlat
repz
sbb
ror
sub
jbe
iret
mov
nop
jle
test
jae
std
xchg
fadds
sahf
mov
lret
loope
scas
push
mov
or
fldcw
jl
add
inc
mov
dec
insl
outsb
cmpxchg
hlt
push
mov
and
sti
test
push
test
fwait
add
xor
pusha
fimuls
in
insb
rorl
or
into
sub
cli
cmp
data16
pop
jbe
orps
inc
pop
xchg
add
inc
sti
pop
push
stos
test
sub
push
adc
cltd
in
sti
lcall
gs
cmpsl
mov
smsw
shlb
sbb
loope
lcall
ljmp
inc
lea
out
cs
iret
push
fimuls
popf
cmp
pop
ljmp
jns
mov
cmp
xchg
popa
repnz
or
stos
std
mov
daa
sub
mov
push
lret
bound
cmpsb
cli
push
aam
pop
mov
inc
cmpl
push
push
dec
cwtl
dec
std
push
int
inc
lcall
test
mov
pop
xchg
lds
repz
ret
add
ret
and
or
out
loope
fsubrs
or
mov
jl
mov
stc
mov
sarl
mov
pop
hlt
lahf
jle
ficompl
mov
pop
test
xchg
insl
loope
or
in
jno
xor
xchg
arpl
adc
fsts
and
add
push
mov
push
pop
cmp
mov
ret
and
push
sbb
sahf
xor
test
mov
jp
mov
je
dec
adc
push
jb
mov
or
fnstcw
lds
testb
or
pushf
xchg
insb
dec
insb
sub
and
arpl
addb
dec
and
sub
mov
mov
out
jb
or
pop
pop
mov
dec
cmp
push
out
mov
sub
pop
es
sub
push
and
dec
fs
cmp
sub
repnz
dec
movsb
ja
fisttpll
jge
in
pop
ficomps
pusha
inc
and
call
or
sub
pop
xchg
xchg
mov
jmp
ret
fsubs
adcl
inc
iret
push
xor
xlat
jg
cwtl
gs
jnp
andl
shll
adc
test
pop
test
push
cmp
dec
mov
subb
cwtl
jbe
fbstp
inc
gs
push
popa
sbb
insl
push
cmp
stc
dec
lds
out
cs
adc
mov
mov
push
sub
fadds
test
jmp
jp
fs
int
adc
in
sbb
adc
add
aad
lret
push
mov
push
lods
mov
movsl
and
push
das
cltd
cld
xor
sub
iret
sub
out
ret
mov
adc
lods
inc
fcmovnu
or
iret
xor
fidivl
mov
lahf
xor
clc
add
mov
sbb
sub
stos
inc
cs
push
pop
es
pusha
bound
adc
push
push
add
ud2
inc
inc
cld
sub
into
gs
test
clc
cmp
pusha
mov
adc
es
sti
lods
cmc
jo
mov
mov
push
setl
int3
xor
fcomip
mov
push
mov
pop
pop
int
cltd
dec
dec
xchg
ljmp
movsl
shl
ds
mov
loopne
dec
pop
mov
cmp
pushf
js
or
pop
das
lret
jne
in
notl
mov
cmp
push
leave
icebp
mov
lcall
and
pop
outsl
aas
ljmp
call
dec
insl
or
xor
mov
or
fst
ja
mov
out
mov
addr16
rcrl
cli
or
fldenv
add
daa
mov
fs
stc
aad
mov
mov
or
cmp
mov
fsub
jnp
dec
pmaddwd
test
pop
or
push
sbb
xor
cmp
push
sti
cmp
mov
dec
add
cmpsb
pop
cmp
loopne
or
mov
cmp
xchg
arpl
cmp
mov
mov
mov
and
insl
add
popa
rcr
sbb
data16
add
enter
sbb
addr16
push
pop
imul
pop
mov
and
add
nop
andl
test
cli
xchg
sub
adc
push
add
sbb
std
out
pushf
jge
lods
daa
mov
sbb
es
addr16
std
dec
movsb
jnp
shlb
das
testb
inc
and
jg
sub
lahf
fnsave
mov
cmp
add
jne
mov
fwait
aam
shll
dec
pop
jle
or
outsl
sub
stos
pop
pop
mov
pop
mov
mov
or
inc
repnz
ja
and
loopne
push
test
mov
ficomps
add
fidivs
cmp
xchg
mov
dec
cmp
call
pop
arpl
pop
and
push
popa
loop
xchg
xor
aaa
fldcw
negl
test
out
clc
or
fisubrs
jmp
dec
xchg
decb
in
ret
mov
inc
lods
push
mov
add
jno
push
sub
loopne
outsb
out
inc
xchg
add
xchg
ss
xor
ror
stc
or
arpl
lahf
mov
mov
push
cmpsb
or
mov
rolb
stos
pop
out
push
arpl
test
adc
pop
in
add
push
jg
bound
leave
jmp
add
std
dec
outsb
or
mov
lret
movsb
cmp
fsubrs
sub
jmp
in
xchg
push
pop
dec
sub
pop
jnp
jb
shlb
inc
mov
inc
das
fisubs
and
sti
pop
and
fs
mov
ret
mov
fnop
inc
fucomi
jg
mov
ja
sub
call
movsb
iret
or
ja
aas
gs
sarb
jl
and
push
push
aas
mov
ret
dec
ljmp
adc
popa
inc
mov
call
inc
add
pop
mov
sahf
xchg
sbb
out
push
ljmp
pop
fimull
cmp
jb
xchg
sub
out
fcomps
jg
jle
aad
sub
divl
jmp
cltd
vpsubw
add
sbb
jo
sbb
scas
dec
movntq
mov
lds
add
mov
jp
push
adc
mov
pop
jns
aaa
pushf
insb
aaa
sbbb
add
insb
into
stos
mov
pop
mov
test
add
mov
pop
xchg
cmp
testl
je
mov
dec
out
mov
or
fsubl
dec
xor
jmp
pop
push
loopne
jbe
call
frstor
lret
cld
inc
arpl
xchg
sbb
and
xchg
sub
mov
pop
ljmp
push
aam
lods
repz
xchg
xor
rcr
xor
or
mov
aam
cmp
ja
cmp
add
arpl
in
testb
es
pop
popf
mov
jbe
sti
xor
mov
jno
outsl
xchg
sti
mov
mov
mov
inc
inc
jns
mov
shrb
test
sbb
and
mov
mov
sti
dec
xor
cld
xchg
jecxz
stos
stc
mov
mov
lret
jg
std
dec
out
push
fsubl
dec
test
int
push
lods
xchg
das
int
jno
sbb
imul
push
adc
sub
ret
push
and
dec
adc
out
mov
ljmp
fadd
out
ret
cmp
dec
dec
xchg
add
pop
add
sbb
pop
rclb
dec
es
das
ficomps
cmc
cli
cli
inc
and
sbb
cs
xchg
sbb
add
repz
add
repz
sti
out
pusha
inc
push
pop
mov
ja
rcrb
pop
inc
push
popf
jge
icebp
test
and
pop
fbld
scas
mov
fidivs
pop
mov
or
fidivrl
scas
cmp
mov
out
mov
fidivl
jbe
pop
or
xor
xchg
test
push
add
mov
into
nop
addr16
fsubr
inc
pop
push
fbstp
pop
inc
adc
idivb
dec
cmp
and
stc
xor
inc
pop
inc
insl
jecxz
lahf
data16
mov
sahf
outsl
mov
mov
fwait
aas
xchg
inc
or
fsubs
inc
imul
addr16
and
mov
sbb
cs
scas
scas
xchg
xor
jg
loope
cmp
pop
pop
push
icebp
pop
xor
sti
xchg
repnz
mov
mov
out
mov
and
call
movsb
xor
fsubrs
push
jmp
push
xlat
addl
xor
mov
cli
mov
outsb
sub
sarl
repnz
and
pop
cmp
push
clc
or
test
insl
push
aas
cmp
outsb
je
lea
fstpt
xchg
mov
mov
les
xchg
stos
mov
sbb
xorb
xchg
sub
ret
cmc
or
std
mov
popw
add
cwtl
mov
adc
pop
sbb
insb
sbb
inc
fs
call
inc
aad
ret
sub
xor
in
xor
xchg
mov
inc
xchg
mov
fcoms
jl
out
inc
lods
xchg
push
test
ret
cs
iret
sub
pop
ret
pop
inc
in
and
and
std
addb
and
cmp
out
jge
mov
or
sub
mov
or
xlat
loope
outsb
sub
xchg
jg
clc
outsb
add
std
aam
pop
push
cltd
adc
in
xor
mov
repz
push
dec
xchg
sub
rcll
sub
xchg
and
mov
insb
pop
and
imul
daa
inc
mov
aam
pop
mov
adc
dec
loop
mov
dec
jne
sub
jne
orb
ds
lods
jg
std
push
push
das
scas
push
popf
loopne
inc
pop
xchg
iret
popf
adc
cmp
stos
loop
ss
pop
idiv
mov
jge
insb
dec
fisttps
pushf
xor
jle
xor
dec
rcrl
xorl
rcrb
xchg
xchg
dec
adc
jns
popa
insl
scas
fisubrs
push
addb
cltd
mov
and
movsb
scas
scas
push
mov
xchg
mov
xchg
jl
out
sub
mov
sti
mov
imul
pop
imul
adc
iret
xor
adc
xchg
xchg
adc
push
in
test
pop
adc
jge
ljmp
jbe
push
adc
ret
sbb
loopne
ss
jl
adcb
outsb
idivl
pop
mov
aam
and
mov
movsl
mov
faddl
sbb
jne
add
xchg
dec
jo
clc
lods
lcall
mov
mov
fisubrs
test
add
jbe
adc
inc
stos
pusha
jge
pop
inc
loop
mov
sbb
sub
cld
xor
adc
aam
dec
and
int
mov
push
cwtl
cmp
fdivr
xchg
sub
pop
xor
dec
sbb
sbb
push
cmp
lahf
ss
stos
jnp
jmp
pop
jle
dec
movsl
in
nop
and
test
adc
sub
mov
cmpsb
jno
sbb
jp
sub
cmpsb
int3
and
lret
or
adc
cmpsl
push
aad
out
pop
mov
xor
nop
mov
xchg
aas
and
sub
fwait
out
and
fsubl
repnz
mov
push
aad
add
mov
xchg
mov
les
push
xor
inc
lods
mov
inc
cmpsb
test
das
push
int3
mov
pop
push
push
outsb
xchg
inc
cmp
add
xor
in
mov
sbb
inc
shr
jle
adcb
mov
and
into
xor
xchg
xor
fisttpll
rorb
iret
adc
cltd
pop
loop
jp
xor
bound
mov
jae
int3
mov
lret
test
arpl
or
dec
cmp
fsubrs
bound
jns
push
int3
mov
mov
roll
or
push
dec
repz
cmc
fs
xor
cwtl
xchg
sbb
lcall
lcall
mov
fidivrs
cmp
sub
cwtl
pop
sub
xor
and
push
sub
jecxz
les
push
cmp
jg
mov
das
lret
sub
and
inc
lock
popf
and
pop
inc
and
xchg
lods
inc
xchg
mov
cmp
mov
sub
insl
lods
xchg
imul
inc
inc
xor
xchg
cmp
je
mov
mov
dec
jecxz
inc
inc
lret
lds
push
mov
cmp
pop
in
inc
pop
pop
clc
push
sub
rcrl
jmp
bound
nop
mov
rolb
mov
decl
sbb
push
ss
add
cs
std
cltd
cwtl
not
scas
out
test
mov
inc
mov
xchg
push
rcll
repz
cmp
pop
andb
std
xchg
push
xchg
add
mov
andl
mov
lock
and
jecxz
enter
ss
or
popf
fsubrs
and
nop
clc
add
add
in
pushf
add
xchg
call
cs
out
test
call
fsubp
dec
imul
rclb
adcl
jb
mov
mov
mov
pop
push
test
push
stos
inc
jne,pt
shl
fmul
pusha
fidivs
lods
out
repz
pushf
fcoms
aaa
scas
imul
es
push
push
dec
call
mov
sbbw
mov
popa
test
xor
cmpsb
call
mov
cltd
incl
out
cmpb
mov
inc
jnp
cmp
fwait
dec
scas
cli
or
pop
int3
add
cmp
enter
jne
push
cs
and
lock
pusha
jns
pop
sahf
mov
out
popf
xchg
dec
dec
popf
andl
movq
out
jae
lds
lds
inc
imul
hlt
xor
inc
popf
rolb
inc
dec
fistps
mov
xchg
lods
cli
push
pop
mov
jmp
pop
cmp
mov
jne
or
mov
or
mov
mov
dec
mov
fnsave
and
popf
sub
shrb
xor
jns
insl
in
jl
mov
mov
int
mov
mov
dec
sub
sub
inc
pusha
dec
xchg
mov
int
fdivs
xlat
clc
xor
cmp
push
aaa
mov
in
xchg
xchg
cmp
push
push
pop
jmp
ds
inc
aaa
incl
nop
xor
or
jle
out
std
pop
dec
sbbb
lcall
jmp
mov
std
dec
lahf
ja
push
jg
inc
sbb
cmpsl
adc
mov
adc
fistpl
pop
je
jl
push
lock
sub
jne
xor
xchg
mov
ret
pop
movsb
stos
lods
sub
hlt
mov
cmp
or
and
into
push
test
adc
fcmovnu
ja
repnz
mov
aad
or
std
push
mov
clc
xchg
mov
push
or
xor
dec
cli
lea
dec
lods
decl
sbb
cld
xchg
shlb
shl
icebp
sbb
test
mov
clc
in
outsl
pushf
pop
mov
addl
jbe
movsb
je
gs
lea
sub
pusha
or
testl
pop
outsb
hlt
test
mov
fldenv
or
sub
popf
pop
pop
hlt
xchg
movsl
cmp
adc
test
adc
fnsave
mull
out
repnz
or
adc
jp
aaa
icebp
sub
sub
jle
aad
jmp
fdivs
or
sub
pop
repnz
lret
test
fistl
dec
jbe
int3
test
mov
mov
cld
dec
jp
lods
stos
inc
pop
dec
jp
or
stos
daa
outsl
dec
xor
repnz
inc
add
sub
in
fs
xlat
paddusw
push
mov
aaa
imul
scas
and
and
std
cmpsl
lock
or
add
cmp
or
xor
lock
out
pop
ret
repz
lock
pop
push
adc
sub
lods
jmp
and
mov
cmp
sahf
and
sbb
dec
pop
xor
dec
in
rcrl
loop
ja
adc
cs
loopne
jge
xchg
xlat
push
pop
sahf
gs
push
outsl
cli
push
andl
pop
out
inc
sahf
jns
pop
and
loope
sbb
mov
test
insb
add
xchg
xor
xor
ja
aam
leave
cmp
aaa
push
out
rcll
in
mov
mov
lret
push
les
cli
lret
lret
pop
leave
ret
add
call
jno
ss
mov
aad
int3
dec
call
push
dec
int3
pusha
das
xor
sti
add
jmp
sub
cmpsb
push
jecxz
std
cmp
mov
add
loope
lret
std
imul
dec
bnd
add
ret
pop
test
fidivrl
cs
bound
lea
xchg
outsl
loopne
ds
adc
jb
jae
fsub
fs
nop
xchg
pop
mov
inc
pop
repz
mov
cld
cld
jo
pop
sub
fstl
jno
pop
outsb
jl
jmp
mov
and
jp
ja
and
inc
fcmove
scas
call
aas
pop
sahf
notl
popa
pop
popf
iret
seto
inc
in
out
xor
sub
repnz
mov
adc
cmp
xlat
jnp
cmp
jge
mov
or
out
orb
mov
ret
xchg
push
shld
mov
push
fxam
mov
stc
cmc
inc
jecxz
xchg
mov
sarb
cmp
push
inc
mov
repz
push
insb
push
mov
xchg
stc
test
xchg
imul
sbb
mov
or
lods
sub
add
stc
pop
data16
data16
and
les
out
xor
stos
loop
or
sahf
lods
push
sub
aam
inc
push
repnz
mov
shlb
outsb
pop
and
add
fbstp
lea
outsl
stos
mov
xor
cs
out
jg
xor
and
and
lret
pop
xor
mov
jl
clc
mov
addb
cmp
cltd
add
out
mov
mov
jb
xor
jns
es
rolb
pop
leave
mov
icebp
and
lret
pop
xchg
cmpl
xor
dec
call
push
fwait
mov
pop
mov
xchg
and
cli
imul
or
dec
mov
xor
sub
mov
xor
mov
hlt
vxorpd
daa
jge
insb
out
ret
fidivl
shr
inc
add
stc
rol
pop
push
test
imul
mov
scas
dec
insl
jnp
mov
mov
leave
pop
add
pop
push
fwait
xor
xchg
xchg
fcoml
jecxz
js
push
sbb
jo
jp
cs
jb
mov
xorb
movsl
std
jbe
jg
fistl
xor
into
fsubrl
ret
push
cmp
loopne
sbb
daa
aam
inc
loop
js
fnstsw
mov
ret
ret
shrl
xor
stos
arpl
fstpl
pop
and
rorb
push
inc
push
pop
mov
and
sbb
pop
adc
mov
and
xchg
stos
xor
lods
shrb
out
sarb
and
mov
add
fmull
mov
cmc
out
lds
inc
push
sar
cmp
imul
mov
push
xor
shlb
mov
pop
xor
pusha
fdivr
into
mov
or
cmp
sub
jb
loopne
sbb
loopne
je
ljmp
lods
out
cmp
addr16
aas
nop
imul
int
xchg
and
and
add
or
test
jge
fs
fs
pop
push
lock
cltd
and
or
ret
jge
cmc
cld
test
xor
add
out
jecxz
fucom
push
cltd
cltd
idivb
int
jo
dec
stos
faddp
rclb
cmp
in
xchg
mov
lret
movsl
lock
lret
bound
sub
dec
fwait
sbb
test
shl
push
sbb
mov
mov
fcoms
adc
je
arpl
pop
sahf
jbe
mov
cld
andl
fucom
cmp
pop
push
sarl
mov
stos
lret
test
movsb
cltd
ret
lds
fcmovnbe
jecxz
notl
xchg
cmp
int
popf
sbb
adc
mov
pop
xchg
nop
scas
lds
mov
xchg
insl
movb
out
mov
loopne
out
roll
jbe
rcl
add
or
add
test
or
stc
jmp
xchg
es
pop
inc
xchg
ss
insl
push
ret
imul
test
loope
lds
fnstsw
incl
stos
in
sbb
pop
xor
ja
xchg
test
cltd
pushf
xor
cmovle
lods
mov
imul
add
cmc
or
popa
clc
dec
fnop
cmp
insb
lahf
cs
mov
jo
outsb
lret
and
stos
lock
nop
and
lcall
push
test
xlat
xlat
xor
push
icebp
testb
inc
scas
mov
push
fstpt
loopne
adc
shll
and
test
mov
mov
rcl
sub
aaa
fistps
scas
jns
out
in
push
fisttpl
mov
movsl
fsubrs
jl
lret
or
sub
xor
xchg
loop
scas
mov
xchg
test
mov
lods
mov
mov
jge
shll
jle
imul
in
iret
pop
fnstcw
xorl
mov
cmc
mov
sub
int3
pop
jns
sti
dec
ret
aaa
test
xchg
sbb
pop
cmp
bound
in
xor
mov
gs
ljmp
jno
mov
sub
push
mov
fcmovnu
lret
mov
imul
lcall
mov
or
popl
ja
pop
ljmp
or
cmp
outsl
or
mov
mov
test
mov
movsl
mov
sti
mov
jnp
ficomps
xchg
sti
loopne
cmp
or
jae
daa
arpl
rclb
hlt
ret
jl
add
and
test
stc
ja
push
out
jne
adc
mov
xchg
push
pop
mov
mov
popf
call
push
and
xorl
in
test
mov
fsubr
jle
cli
push
int
cs
xchg
pop
sub
or
jno
icebp
sbb
into
sbb
sbb
inc
aam
mov
movsl
xchg
add
daa
gs
nop
out
jle
icebp
mov
pop
addr16
jbe
adc
xchg
dec
jecxz
shrl
dec
lahf
jae
dec
inc
push
sbb
fwait
inc
mov
loopne
ja
adc
andb
cmp
loopne,pn
mov
dec
fistpll
xchg
mov
sub
pushf
in
mov
mul
inc
sbb
sbb
dec
ja
jnp
imul
inc
sti
pusha
push
sub
lret
or
or
cmp
ss
aad
lods
or
dec
push
fsubl
cmp
sub
push
shll
mov
or
sub
ljmp
scas
stos
cmp
fsubrl
jbe
js
ret
mov
aam
xor
lcall
jne
and
cmp
ret
jge
mov
test
push
mov
jecxz
mov
addr16
in
gs
mov
sbb
arpl
mov
sub
push
or
jle
pop
jae
lahf
sub
rorb
sbbl
iret
lret
rcrl
push
cli
movsl
fwait
cmp
mov
stos
int3
arpl
js
inc
adc
outsb
adc
mull
les
add
push
mov
out
iret
arpl
xchg
dec
or
add
lahf
xor
insb
sub
movsb
fcomps
sbb
addr16
hlt
and
sub
ficoml
test
loop
add
mov
fisttpl
movsl
mov
aam
daa
mov
or
inc
fdivr
sub
subb
pop
or
or
outsl
lods
dec
loope
nop
lcall
cmp
or
add
fwait
mov
lret
pop
repz
fsts
xchg
push
push
iret
out
xor
xor
xchg
insb
cwtl
push
fdivrl
rcrl
insl
mov
xchg
jnp
add
mov
adc
mov
adc
mov
xor
push
out
cmp
xor
dec
dec
loopne
shl
leave
dec
loop
dec
sub
sahf
xchg
fstl
fldcw
or
xchg
inc
and
and
mov
xlat
sbb
loopne
jbe
sub
lea
arpl
push
sub
sbb
aas
dec
xlat
or
fiadds
sahf
xor
xchg
mov
adc
push
lea
adc
ret
inc
fdivr
out
mov
inc
mov
shl
outsb
push
out
or
adc
mov
push
test
mov
aaa
xchg
fildl
mov
out
stc
cs
sub
pop
in
dec
dec
rclb
lock
pop
fucomip
xor
adc
mov
mov
ds
add
mov
mov
clc
sbb
xchg
push
cmpsl
push
hlt
aaa
mov
sub
pop
jnp
inc
xor
stos
sahf
mov
enter
inc
inc
sbb
adc
ret
movsb
sbb
pop
fwait
mov
loop
jecxz
jg
dec
out
adc
push
popf
pushf
test
cmpsb
mov
inc
sbb
ja
in
cmp
jo
fwait
test
dec
out
loopne
jo
addr16
sbbl
leave
pusha
lds
out
lahf
xchg
lods
cmp
ss
fistpl
test
clc
je
xchg
adc
mov
sub
loope
sbb
arpl
xchg
stos
test
popf
mov
sbb
inc
jp
xor
pop
mov
out
loopne
xchg
call
lcall
adc
pop
movsl
adc
xorl
popf
fistps
dec
fisttpll
and
test
inc
dec
jp
loopne
xor
xor
pop
inc
push
inc
popf
mov
push
pop
std
pop
inc
loop
sub
fdivr
xchg
mov
dec
enter
cwtl
fs
int
cmp
icebp
inc
cmp
jecxz
das
outsb
jns
dec
std
xor
and
cmp
imul
jecxz
std
cmpsl
sbb
xchg
movsb
cmp
lds
push
aas
int3
sub
inc
mov
push
inc
xor
adc
or
push
call
mov
mov
cltd
mov
lds
pusha
notl
insl
repz
push
repz
lods
mov
jne
ret
sbb
or
push
stc
popa
outsb
add
cmpb
xchg
lock
cmpsl
cmp
and
push
adc
pop
pop
lret
sub
pusha
pop
jmp
ret
cmp
mov
add
shrb
ret
pop
in
hlt
js
imul
push
in
jo
add
dec
inc
sbb
paddb
sahf
sbb
xlat
dec
dec
push
movsl
insb
mov
dec
pop
jb
sbb
pop
call
not
imul
pop
mov
lea
jle
in
adc
aas
shll
push
xchg
in
push
ret
loop
aam
lds
adc
jbe
movsl
ret
xchg
pop
aas
or
dec
loop
cli
push
sbb
and
mov
ret
xor
sti
add
mov
fisttpll
sbb
test
aad
mov
jmp
aas
mov
push
ds
insl
or
cld
out
cmp
mov
fadds
fnstenv
and
sub
jns
xchg
xor
das
lds
lea
lret
loopne
enter
hlt
shll
or
shl
out
mov
jne
out
lret
sbb
xor
fucomip
or
lods
outsb
clc
loopne
add
ret
xor
inc
inc
dec
idivl
mov
push
movsl
out
fstpt
leave
sub
clc
pop
xor
cmpsb
cli
or
sub
shl
pusha
cmp
pop
fwait
xchg
mov
fstpl
mov
mov
leave
adc
inc
mov
xor
mov
adc
test
and
scas
add
sbbl
and
test
push
dec
push
lods
test
out
mov
sub
sbb
mov
sbb
mov
sti
popf
push
mov
ret
pop
notb
mov
or
sub
ja
cmp
mov
xor
aad
in
and
dec
or
xchg
mov
psllw
mov
das
xchg
or
sbb
fwait
mov
push
lret
sub
adc
leave
or
and
inc
imul
ficompl
lret
jmp
cld
xchg
fisttps
push
test
popa
or
iret
inc
movsl
or
pop
imul
xlat
sub
scas
inc
mov
fs
cmp
mov
add
movsb
js
sub
and
mov
subl
add
mov
repnz
loop
fidivs
clc
and
add
fwait
pop
stc
mov
xchg
notl
movsb
in
cld
int
mov
notb
push
sub
jnp
push
insb
sbb
mov
push
sbb
cmc
pop
or
adc
xchg
sub
outsb
insl
adcl
adcl
cmp
imul
push
icebp
dec
lds
mov
fdivrl
lret
inc
hlt
movsl
addr16
imul
add
dec
adc
movsl
pop
mov
push
jmp
mov
or
fwait
insl
mov
outsl
sub
fsubrs
xchg
mov
jl
push
cmp
cmpsl
addr16
jle
or
jb
mov
inc
pop
lahf
mov
insl
movsb
cmp
add
jecxz
jbe
push
add
adc
mov
les
lods
pop
sub
adc
cmp
fstl
xor
cwtl
cmp
test
nop
xchg
sub
and
mov
mov
mov
fucom
ss
jbe
movsl
push
push
xor
cmc
fdivrl
stos
mov
push
loop
dec
and
inc
xlat
mov
cmp
pop
loop
ds
repz
ja
lret
ds
repnz
jnp
in
sub
cmp
lahf
cs
push
cmpsb
or
test
repz
adc
dec
add
test
pop
in
jmp
mov
cmp
dec
out
jae
inc
frstor
in
sub
inc
test
out
jo
hlt
mov
data16
and
mov
scas
pop
repnz
scas
jecxz
xchg
adc
cmp
clc
insb
cmpsb
pop
in
or
dec
dec
out
in
cmp
mov
addl
out
sti
fisttpl
sbb
sbb
data16
vmwrite
push
jmp
and
mov
sub
dec
push
pop
stc
iret
nop
mov
jae
ja
ja
pop
and
jecxz
mov
cs
push
mov
push
es
ds
scas
lods
fistps
push
out
sti
outsl
imul
sub
xor
jge
shrl
mov
and
imul
bound
hlt
leave
xor
xchg
stos
mov
popa
loope
shr
lds
scas
gs
filds
lcall
pushf
dec
sub
jmp
sub
sbb
mov
insl
repnz
int
xor
and
jl
jbe
int3
sahf
fiadds
out
mov
jb
out
jbe
or
sub
xchg
pop
sub
and
dec
fdivrs
cs
dec
fists
xor
out
adc
inc
mov
daa
movsb
test
xor
inc
loope
ss
into
xchg
cli
mov
data16
out
dec
fisubrs
xchg
mov
fisubrs
pop
in
jge
add
lahf
add
add
mov
les
testl
fdivl
fdivrs
adc
or
mov
push
into
mov
xor
xor
lcall
sbb
mov
out
imull
and
inc
mov
neg
mov
aas
pop
sbb
xor
stc
nop
inc
xchg
out
js
pop
xor
inc
mov
std
out
sbb
lret
pop
je
enter
clc
jecxz
aam
or
pop
ljmp
ljmp
mov
jg
ret
lods
jne
test
mov
rcrb
xor
xchg
jns
add
fs
jae
push
in
aaa
adc
mov
push
sub
ja
xor
pop
movb
rolb
push
sub
push
lods
xor
lahf
shlb
imul
lods
jne
mov
or
jg
das
adc
cwtl
pusha
cmp
mov
jo
push
and
cmpsb
loope
xor
faddl
jno
mov
js
movsb
test
aad
adc
jo
lods
call
mov
test
insl
fistl
addl
jnp
jbe
aaa
xor
pop
xor
xchg
inc
rclb
mov
mov
orl
call
or
movsb
xchg
jl
fsts
cld
pop
into
ret
in
mov
rcll
int
cmc
lcall
push
orb
dec
in
inc
push
pop
js
imul
and
mov
xchg
sbb
nop
lcall
jecxz
mov
xchg
into
insb
and
sbb
xchg
and
and
inc
idivl
push
mov
push
push
leave
fisubrl
mov
lahf
dec
lahf
lea
push
mov
lods
mov
inc
fwait
pop
sbbl
sub
add
mov
jb
adc
jle
shl
test
mov
test
mov
jne
dec
cmp
xchg
cmpsl
movb
nop
aas
push
adc
cld
outsb
jge
add
cmp
repnz
arpl
outsb
sbb
inc
pop
mov
push
in
adc
pop
jl
mov
scas
or
cmpsl
out
repnz
lea
jbe
push
scas
clc
dec
push
fstps
add
xchg
mov
jno
addr16
or
xchg
cmp
fistps
inc
lea
js
pop
mov
xor
xchg
inc
mov
add
test
insb
lods
pop
adc
fiaddl
sbb
and
xchg
sub
fwait
stos
pop
xor
js
mov
adcb
cmp
sbb
lds
aad
dec
mov
aam
pop
repz
push
hlt
out
adc
sbb
push
fiadds
daa
jne
xchg
and
repz
add
pop
push
adc
ljmp
test
add
iret
and
inc
ljmp
in
inc
pop
into
faddl
and
push
push
pop
ret
xor
jg
sub
ss
push
iret
pop
pop
idivb
std
mov
rorl
mov
lahf
test
icebp
pop
fisubs
sub
daa
stos
cld
push
xor
pop
mov
or
jns
xor
or
xor
sbb
fsubrl
repnz
sbb
xor
lods
add
ss
je
jp
pop
cmp
mov
data16
or
popf
inc
and
cltd
in
inc
inc
jno
cmpsl
insl
lock
fldt
lcall
add
push
inc
and
push
cli
pop
lock
and
mov
mov
sub
and
pop
jae
out
sub
mov
bound
push
jns
or
xor
lahf
xchg
imul
cltd
mov
je
jg
shrb
push
add
inc
mov
hlt
pop
mov
adc
inc
sbb
in
leave
movsl
xchg
sub
adc
rol
push
or
cwtl
sbb
and
xor
cmp
inc
mov
lock
dec
movsb
mov
fbstp
inc
cmc
sub
pusha
pop
push
rorb
imul
mov
mov
mov
test
inc
dec
sbb
lock
frstor
push
pop
mov
pop
and
or
out
jecxz
push
pop
mull
sub
cmp
mov
gs
or
mov
bound
lahf
enter
inc
pop
xchg
insl
movsb
ds
mov
jne
mov
jge
fcoms
or
jle
lds
nop
mov
bound
sbb
xchg
arpl
packsswb
adcb
js
inc
repnz
lods
ljmp
popf
xor
mov
xchg
sub
rolb
ret
inc
jno
fidivs
aad
lock
gs
pop
jae
xchg
bound
xor
push
cmp
xchg
add
adc
jne
scas
inc
mov
cmp
jo
addr16
fistl
cwtl
das
lcall
icebp
inc
inc
leave
pusha
cmp
and
daa
divb
enter
cmp
insl
mov
movsb
lock
es
inc
fdivrp
imul
pop
jns
inc
insb
push
aas
mov
hlt
mov
dec
jb
mov
xchg
and
add
or
jns
push
jecxz
mov
pop
out
dec
fildll
jbe
sbb
ret
xlat
adc
sub
dec
sahf
pusha
insl
shll
dec
popa
pop
stos
or
popf
je
ret
movsl
mov
dec
loope
xchg
scas
out
cmp
mov
pop
mov
lods
clc
stos
mov
jns
mov
lahf
leave
mov
mov
loope
lahf
or
jecxz
xchg
xchg
push
xchg
mov
lock
lods
cmc
test
jbe
add
imul
or
stc
inc
pop
cs
xchg
imul
leave
mov
leave
sbb
add
pushl
xor
out
inc
test
fmull
fiaddl
jmp
bound
xor
sti
push
sar
or
xor
push
xchg
fcmovbe
mov
pop
popf
call
lods
and
fsubrs
dec
sub
xchg
loope
adc
pop
add
test
jge
sub
iret
push
cmpsl
jne
adc
movsb
stos
or
cld
push
std
cltd
lret
mov
dec
push
pop
sub
pushw
std
pop
sub
sti
xor
or
or
jne
scas
inc
seta
mov
pushf
jnp
lods
lods
mov
hlt
insb
pop
xchg
xchg
je
sub
sbb
mov
dec
popf
stc
repz
pop
adcl
jo
mov
sbb
dec
in
rorl
fwait
cmc
pop
int
mov
data16
lahf
sub
in
addl
sub
testl
jns
inc
sbb
adc
xchg
mov
imul
sub
dec
lcall
add
lock
xchg
lahf
ss
lahf
cmp
xchg
push
aas
shlb
pop
mov
test
imul
popf
add
fcompl
or
adc
or
sub
negb
mov
fdivs
sbb
and
lret
cltd
std
test
jmp
xchg
push
call
xor
movsb
cmp
stos
mov
sub
pop
mov
jle
xchg
movsb
inc
clc
inc
xor
jecxz
aas
xchg
add
jb
mov
mul
movsb
out
pusha
push
aas
dec
cmp
sbb
push
cmp
inc
sti
xlat
mov
sbb
push
or
cs
push
push
or
jmp
adc
addr16
or
insl
jl
outsb
sub
lea
mov
pop
mov
add
or
cmp
mov
ret
bound
push
cwtl
and
fisubrl
push
xchg
add
test
add
pop
sti
ret
jbe
ret
outsl
dec
and
inc
or
cs
hlt
mov
minps
xchg
push
mov
jo
pop
add
mov
xchg
push
pop
lds
aam
and
cmp
mov
push
lcall
es
xchg
sub
out
jo
mov
cltd
in
testl
cmp
ds
xor
push
stc
rcr
inc
sbb
sti
cmpsl
insb
xor
jg
adc
ret
rorl
stos
addr16
cmp
test
and
jp
stos
ret
pop
and
and
inc
sahf
jne
xor
sbb
es
cmp
pop
sti
mov
add
iret
lret
sbb
jae
incl
loope
pop
lret
push
nop
push
int3
or
stc
cmp
push
cwtl
outsl
test
cmp
rorb
inc
or
mov
loope
sbb
outsb
adc
push
fdivl
bound
xchg
cwtl
pop
xor
aas
fsubrs
xor
scas
inc
fcoml
cmc
test
int
or
add
xchg
push
fbstp
aaa
xchg
mov
xchg
pop
rcrl
fcmovnbe
fdiv
push
je
mov
jecxz
roll
ss
jne
push
cltd
xor
je
and
inc
mov
mov
arpl
and
xchg
jae
ret
mov
popf
or
dec
push
mov
add
daa
adc
dec
pop
xor
xor
stos
sub
movl
rclb
cmp
jle
aad
jnp
add
fmuls
leave
sub
dec
pop
aas
cmp
gs
dec
pop
ss
inc
pop
mov
jnp
xchg
outsl
das
pop
outsb
imul
or
out
xor
xlat
imulb
sub
ret
dec
cld
mov
repnz
push
cwtl
push
dec
dec
in
and
mov
xor
xor
inc
mov
jmp
add
cwtl
dec
sbb
adc
jle
sub
andb
mov
mov
add
insl
iret
jl
out
jle
sbb
ds
sbb
repz
or
roll
mov
fisttpll
dec
sbb
jp
iret
xor
sub
enter
and
xorb
pushaw
xchg
mov
ret
popf
and
les
mov
lods
enter
icebp
adc
dec
loope
jle
xlat
jae
pop
jns
rol
cli
xchg
hlt
cld
inc
jecxz
popf
lahf
scas
inc
add
xor
test
xchg
lock
push
jb
dec
add
jmp
and
iret
iret
mov
out
lds
ds
mov
out
and
adc
and
pop
nop
pop
xor
popa
clc
and
das
jg
lods
pop
and
add
aaa
sub
lods
mov
adcl
cmc
test
pop
ror
aaa
aam
jp
or
stos
xchg
jno
dec
mov
mov
jg
jne
in
loope
inc
fisubs
mov
sbb
sub
jbe
cmp
cld
cli
dec
sbb
sbb
mov
xacquire
into
mov
and
mov
xchg
call
arpl
and
popf
push
jl
adc
push
cwtl
stos
aas
push
cmpsb
push
push
in
jmp
ds
imul
std
or
fstl
imul
mov
call
cmp
neg
lock
fsubl
clc
push
ljmp
insb
jb
add
xor
andb
mov
xor
jnp
clc
sub
cmp
adc
push
and
lcall
mov
inc
gs
sub
dec
sbb
xor
cmp
xor
push
add
lods
in
adc
daa
lret
jo
jns
jmp
pop
hlt
daa
jne,pn
push
sbb
jne
rep
sti
pop
xchg
ret
mov
cli
pop
shr
jle
stos
aam
mov
sub
in
jne
push
inc
and
inc
std
inc
inc
cmp
push
bnd
pop
xor
negl
loopne
out
xor
or
sbb
and
cmpsl
push
gs
inc
add
je
adc
xchg
jne
mov
outsb
push
jne
pop
sub
out
adc
xlat
out
rcrb
cmp
test
push
mov
mov
in
pushf
dec
mov
cmpsl
hlt
adc
mov
xchg
xor
jmp
loop
insl
xchg
add
mov
cmc
mov
je
add
sub
mov
fisttpll
adc
xchg
xor
ss
arpl
add
adc
dec
sbb
data16
mov
sbb
pop
aaa
sahf
pop
sbb
mov
mov
out
out
inc
fimuls
lcall
inc
mov
sbb
fwait
popf
xor
sti
mov
and
adc
inc
xchg
lods
mov
sbb
push
call
jnp
outsl
test
adc
dec
leave
test
xor
xchg
inc
les
arpl
push
sahf
cmpsl
fbstp
mov
aam
fcomip
or
xchg
mov
xor
stc
add
addb
dec
incl
xor
push
push
jecxz
mov
dec
imul
pop
pop
ja
daa
mov
enter
fdivrp
out
jle
push
movsl
and
mov
ss
mov
lcall
imul
int3
xchg
decw
jle
div
stc
dec
lods
cmp
and
dec
sbb
xchg
cmp
jbe
jmp
or
or
je
or
loop
cmpsl
and
sarb
mov
loope
jle
ds
ss
add
dec
dec
pop
lahf
lea
inc
sub
aas
fwait
bnd
out
lods
fstpt
dec
fsubr
das
jno
decl
inc
jecxz
in
pop
xor
xlat
push
jp
add
mov
daa
leave
and
jae
mov
inc
inc
mov
xor
xlat
inc
xlat
repnz
jb
lcall
add
ljmp
cltd
mov
push
sbb
push
mov
sbbl
cmp
mov
popa
rorl
add
mov
cmp
xchg
and
scas
mov
aad
shrb
mov
mov
and
mov
lret
test
std
int3
xchg
mov
mull
sbb
faddl
rcrl
test
mov
jne
ljmp
cli
xor
dec
std
andb
shrl
dec
or
sub
loop
sbb
cmp
insb
insl
adc
test
inc
and
dec
push
jmp
or
ss
adc
jl
push
lcall
and
pusha
jae
mov
in
sti
xchg
xor
xchg
push
dec
lret
ficomps
stos
xchg
pop
dec
xor
xor
out
sub
pop
sbb
inc
adc
js
pusha
leave
dec
mov
xchg
stos
cmp
loope
adc
pop
push
insb
jo
int3
pop
sahf
sbb
pop
sub
pop
out
fistl
insb
dec
sub
ficomps
add
adc
or
xor
jecxz
inc
push
movsl
xchg
sti
mov
sub
push
mov
jno
jl
lods
cltd
pop
clc
xor
mov
outsb
imul
in
push
cmpsl
test
jge
cmpsl
cs
cmp
cmpsb
pop
xchg
sub
mov
dec
push
adc
fidivs
push
adc
aam
xlat
add
scas
out
mov
mov
jmp
les
js
xor
pop
pop
fidivl
jne
int
lea
aaa
dec
movsl
fdivrs
push
inc
xchg
mov
and
imul
inc
add
mov
icebp
add
add
insb
or
jns
mov
pop
mov
or
fistl
insb
add
lahf
nop
mov
cmpxchg
inc
aaa
mov
sahf
clc
xor
or
insl
add
cmp
adc
dec
push
ljmp
jmp
mov
jo
sub
mov
inc
xchg
outsb
dec
pop
cwtl
add
popf
movsl
cmp
push
jmp
xor
insb
and
mov
scas
cmp
mov
arpl
xor
leave
dec
or
jbe
enter
xchg
sub
insl
fidivl
shrb
aad
enter
jg
or
jge
and
mov
stos
inc
xor
sub
jns
enter
dec
outsl
outsb
add
pop
dec
sub
je
pop
dec
out
hlt
rorl
mov
inc
dec
jns
insl
test
lds
test
or
in
cmc
sti
and
mov
out
sbb
inc
pop
cli
out
scas
scas
insl
push
sbb
mov
js
mov
pop
cmp
nop
pop
jnp
rcrb
mov
add
xchg
sbb
into
sub
cwtl
or
sbb
jmp
dec
fstl
xlat
nop
imul
notb
andb
pop
and
and
ficoml
imul
jp
repz
push
bound
sbb
ds
shr
add
or
pop
mov
cmp
in
xor
add
adc
andl
loop
shl
inc
inc
mov
cmp
add
nop
aam
hlt
add
fiadds
pop
adc
icebp
dec
lock
addb
jp
popa
orl
sbb
mov
add
jge
mov
and
inc
das
icebp
call
jb
pop
out
inc
fsubs
outsb
pop
negb
sti
mov
jle
push
xor
call
jne
shll
cmp
lods
or
das
sbb
sbb
jge
ret
sbb
icebp
dec
mov
add
mov
fcom
sub
jecxz
rol
lods
cmpsb
jo
in
aam
xchg
cmp
dec
imul
out
stc
xchg
xchg
pop
mov
mov
sub
out
cmp
inc
mov
ds
ljmp
cmp
test
repnz
xchg
subb
inc
push
jo
out
popa
mov
pop
and
push
push
std
roll
lods
pop
insl
fisttps
sbb
les
stos
outsb
xchg
mov
pop
pop
push
mov
adc
cmpsl
and
gs
push
lods
inc
maxps
call
or
mov
and
cld
pop
fildll
cwtl
push
xchg
loope
ljmp
roll
clc
dec
cmp
addr16
ret
mov
xchg
cmp
push
push
es
ljmp
mov
pop
xor
test
pop
mov
test
xor
xor
adc
or
jle
repnz
in
lods
call
dec
inc
adc
mov
iret
and
nop
popf
xchg
xchg
add
out
cwtl
je
adc
mov
shll
sub
or
insl
add
lods
mov
xor
cmp
scas
mov
jbe
mov
jmp
and
ds
or
fistl
push
daa
lcall
push
mov
mov
lea
ds
jo
mov
xchg
lock
xor
and
inc
adc
inc
out
arpl
sbb
push
popf
push
sub
mov
mov
fsubl
and
sub
sub
pop
movsl
in
scas
rcr
pop
dec
in
sub
popf
jmp
add
dec
out
subb
popa
pop
clc
push
lods
sub
fidivrs
jns
into
out
inc
push
sbbb
data16
mov
popa
movsl
mov
adc
mov
mov
js
pop
push
inc
pop
sub
xchg
cmc
cmp
daa
inc
mov
push
outsb
pop
fisubs
push
pushf
das
jmp
cmp
jle
call
jp
cmpsl
shll
and
pop
shl
fsubrs
ja
stc
jge
stc
mov
pop
je
loope
cmc
jmp
call
les
xlat
mov
pushf
lret
pop
pop
idivb
dec
xor
pushf
jge
adc
shrl
inc
cmp
add
fwait
mov
mov
sub
cs
cwtl
imul
mov
inc
or
cmp
dec
stc
jg
mov
inc
inc
cmp
mulb
pop
jno
dec
push
out
jno
sahf
push
pushl
fadd
popw
scas
mov
xchg
rorb
add
and
dec
repnz
xchg
jecxz
push
jns
or
sahf
sub
in
test
mov
fnsave
stos
push
mov
ret
hlt
lahf
mov
xchg
out
and
arpl
dec
add
jle
out
pop
xor
test
push
pop
sub
repz
pop
imul
push
push
mov
stos
aad
sbb
daa
xor
cld
sbb
sub
inc
popa
and
push
clc
out
cmp
push
push
jno
mov
stos
cmp
xor
add
fdivrp
xor
aam
jno
sarl
sarb
mull
stc
jnp
pop
repnz
rclb
and
xchg
push
lcall
out
jge
fwait
mov
sbb
inc
mov
adc
lret
jl
pop
push
xchg
hlt
push
lds
cwtl
sbb
repnz
in
xchg
mov
movsl
or
clc
mov
repz
pop
ja
adc
jg
movsl
mov
scas
int
cmp
aas
push
fwait
jecxz
mov
gs
xchg
lds
or
pop
gs
jnp
push
and
out
out
lcall
mov
icebp
xlat
xchg
mov
and
inc
push
pop
or
in
xorl
stc
cmp
ss
pop
addb
mov
push
nop
jmp
mov
fs
pop
jb
jns
dec
sahf
sahf
xor
lcall
xor
adc
or
cmp
add
data16
rclb
pop
imul
xchg
clc
les
cld
fisttpl
jl
cmpsl
imul
test
dec
movsb
inc
nop
pop
loopne
in
orb
xchg
iret
pusha
push
clc
push
adc
das
insb
aaa
sarb
xchg
loopne
push
in
cld
xchg
fistpll
xchg
das
gs
xor
cmp
mov
xchg
fsubs
mov
mulb
cmpsl
aas
test
xor
out
repnz
in
test
aaa
inc
add
pushf
xor
test
add
mov
ja
fsubl
hlt
push
push
and
xchg
in
mov
cmp
cmp
pop
jle
enter
push
cltd
aam
out
loop
scas
mov
adc
jge
xchg
add
jo
xorb
imul
in
ds
mov
inc
mov
ficompl
push
movsb
es
pop
or
sub
shrb
xchg
mov
addb
lcall
sbb
je
jnp
push
mov
shlb
fcompl
dec
xor
fisubrs
or
xchg
xor
adc
jp
stos
or
push
cld
add
adc
mov
sbb
inc
cld
movsb
xor
pusha
sbb
push
jae
mov
jb
sbb
out
sub
dec
rep
pop
test
test
sub
or
ljmp
scas
int
out
jae
or
or
push
cmp
xchg
xor
popa
sub
loopne
jp
in
xlat
and
das
jp
data16
inc
cmp
imulb
out
lret
push
cmp
filds
stos
jbe
ds
out
jne
dec
gs
push
loop
mov
push
cmpsb
and
jecxz
inc
xchg
js
adc
das
xor
sbb
mov
mov
popf
movsb
add
cmpsl
dec
popa
sbb
dec
jecxz
ds
repnz
mov
jle
movsb
cmp
ret
jb
aam
rcrl
adc
sarl
xor
or
xchg
mov
mov
imul
cwtl
and
leave
sub
xchg
inc
out
mov
inc
jo
cmp
jb
mov
dec
lcall
push
andb
fcomps
and
arpl
sahf
cmpsb
cmp
sub
es
xchg
inc
and
in
cltd
mov
xlat
test
pinsrw
scas
rorb
jo
sbb
mov
push
hlt
and
mov
cmp
dec
sbb
stos
jle
dec
jo
xor
xchg
dec
jle
jg
and
in
and
fmul
or
sbb
jnp
adc
cmp
leave
sbb
dec
mov
push
mov
notb
lea
sbb
jge
addb
jae
aad
sahf
loopne
cltd
pop
jae
data16
mov
es
fwait
mov
lahf
fistpll
cmp
xchg
loop
mov
rcl
pop
les
xor
push
mov
push
dec
cld
mov
xor
outsb
push
decl
push
gs
and
ljmp
mov
pop
es
mov
sub
jae
shl
je
pop
cmpsb
cmpb
subps
pusha
adc
mov
fcomps
pop
jecxz
out
mov
inc
aam
into
jecxz
std
sahf
xor
xchg
aas
push
xorl
lods
cld
loope
notb
jne
sbb
push
push
cmp
test
lret
jne
jns
and
enter
in
or
mov
and
inc
mov
add
hlt
hlt
mov
sub
loop
sbb
pop
add
jo
xlat
shll
xor
sub
pop
or
inc
mov
shlb
push
repz
sub
out
test
xor
sub
stc
pop
sahf
mov
stos
pushf
in
lret
addb
mov
movsb
xchg
or
shll
js
jle
mov
add
andl
jl
cmp
pop
js
daa
mov
inc
fcoml
mov
cmc
stc
pusha
lret
jecxz
fwait
sbb
imul
faddl
xchg
sbb
lods
lcall
mov
test
idivb
jo
das
loopne
fs
adc
dec
xchg
std
pop
push
lea
push
xor
adc
push
mov
mov
jb
cwtl
mov
inc
je
pop
cmpsb
popa
notb
xchg
sbb
cmp
and
rorl
mov
mov
adc
mov
mov
int3
push
ret
pop
mov
mov
mov
aam
in
mov
mov
or
scas
mov
or
mov
adc
jno
data16
mov
push
ret
inc
xchg
add
inc
outsb
mov
push
and
mov
das
jne
aad
fmull
out
jns
push
stos
es
cmpsl
dec
cli
push
enter
mov
out
dec
dec
test
out
and
ja
mov
ja
and
add
mov
pop
lea
lods
lods
outsb
pop
scas
stos
sbb
int3
je
addr16
and
inc
addr16
cwtl
xchg
jmp
push
jae
and
mov
into
adc
add
cld
mov
icebp
in
dec
xor
jle
stos
jle
shr
cli
inc
mov
cmc
fsts
sbb
and
push
imul
jnp
int3
inc
out
mov
movsl
into
mov
inc
pop
int
sbb
or
test
ja
cs
push
sub
or
mov
pop
sub
ficomps
mov
fstpt
push
test
mov
cltd
push
push
imul
jle
push
inc
cs
mov
inc
insl
leave
mov
sub
aaa
dec
mul
add
add
sbb
mov
mov
jmp
mov
mov
js
jecxz
pop
xchg
ror
jnp
cmpsb
arpl
push
divl
in
sub
inc
sub
aad
ja
adcb
icebp
in
xchg
fidivs
jns
pop
ds
cld
jne
test
mov
ljmp
es
sbb
add
popf
test
leave
testb
mov
ds
insl
scas
cltd
cmp
bound
dec
orl
loop
push
sahf
and
add
pop
mov
dec
bnd
mov
or
pop
icebp
inc
mov
pop
aad
pop
sti
lods
loopne
xchg
pop
xor
mov
outsb
dec
pop
pop
in
js
pop
and
pop
pop
adc
subl
mov
gs
mov
pop
dec
mov
dec
divb
jmp
stos
adcb
test
mov
xchg
mov
popf
jmp
lret
xor
loopne
mov
jl
jno
aaa
stc
mov
add
xor
shrb
mov
lds
inc
shl
int
ljmp
xor
int
sub
mov
and
ss
push
pop
mov
sbb
shlb
push
dec
push
and
add
pop
bnd
out
mov
ljmp
pop
inc
fisttpl
stos
call
pop
push
sbb
sahf
pop
add
inc
push
mov
cmpsb
inc
mov
pop
jge
add
push
in
in
cs
rcll
mov
jbe
inc
bound
dec
mov
pop
add
test
mov
lds
jb
fs
push
push
rcll
in
addl
dec
adc
arpl
bound
adc
icebp
cs
test
or
stos
shlb
mov
testb
xchg
test
outsl
cwtl
and
mov
negb
jo
clc
imul
cmp
jg
enter
cli
sbbl
out
inc
xchg
scas
mov
mov
test
sub
cli
ds
mov
sarl
pop
sub
test
mov
subb
lcall
jmp
push
insb
rcrb
dec
lcall
sbb
in
jle
mov
mov
loop
jmp
test
sbb
mov
loop
in
or
mov
sub
push
aam
dec
and
int
cmpsb
dec
sub
mov
bound
loop
inc
fiadds
arpl
jle
loopne
test
shll
add
mov
arpl
shll
enter
imul
gs
mov
sti
in
pop
loope
mov
and
out
add
aad
pop
or
pop
jmp
pop
rcrl
test
clc
pusha
xchg
addb
cmp
mov
shl
xchg
aaa
or
mov
cmp
loope
andb
cmp
or
cmp
sub
sahf
leave
andb
mov
pop
imul
jns
sarb
inc
sbbl
mov
add
fsubrl
mov
mov
mov
mov
sbb
push
mov
inc
adc
out
scas
test
inc
push
and
add
cmpsl
data16
fadds
push
mov
fldl
push
pop
and
out
jne
pushl
jnp
addr16
out
mov
xor
les
pop
and
mov
jne
or
cmpsb
imul
scas
dec
loopne
mov
lods
add
sbb
jge
and
sbb
push
push
emms
dec
mov
pop
aad
mov
pop
mov
iret
das
pop
cmp
pop
mov
lcall
lret
jb
inc
sub
rorb
add
test
je
jno
repz
adc
gs
imul
inc
and
popf
sbb
push
sti
pop
outsl
inc
add
test
fistpll
in
cwtl
scas
lods
ret
fimull
add
in
and
fs
rcll
sar
sarl
loopne
daa
xchg
test
clc
push
mov
adcb
repnz
dec
adc
sbb
push
mov
dec
dec
fwait
xor
push
insl
sahf
cmpsl
aam
stc
sub
shll
outsl
lock
pop
sub
inc
fcomi
cli
cmp
mov
pop
addb
xlat
lods
add
jp
dec
in
and
jae
push
cltd
and
ret
jns
xor
cmp
cmp
push
sti
push
mov
lock
or
leave
sti
and
enter
or
aaa
lret
inc
sub
add
outsl
mov
enter
call
std
inc
dec
insl
push
ljmp
cmpsl
cmp
mov
adc
aad
in
xchg
out
pop
repz
mov
rcrb
cmp
stos
dec
aas
xchg
pop
mov
and
inc
ret
mov
cmpsl
push
lret
std
inc
movsl
in
xchg
inc
pop
mov
shll
dec
lret
or
fs
and
push
xchg
outsb
sub
pop
push
in
outsb
sahf
cmp
push
js
push
roll
rolb
cli
cmpsl
loope
pop
in
shrl
je
xor
rcl
rolb
inc
into
sub
into
repnz
adc
adc
mov
and
addr16
nop
shl
jmp
addb
js
mov
cmp
in
gs
add
sub
in
inc
test
ljmp
divb
mov
lcall
and
sbb
and
push
inc
mov
cmp
in
sub
int3
data16
insl
shlb
mov
pusha
int
test
xorl
mov
lods
imul
fdivrl
add
xchg
pop
test
and
pop
es
xlat
shl
inc
rol
jo
adc
xchg
lret
push
inc
push
test
das
cs
adc
movsb
icebp
enter
mov
stc
adc
lock
test
enter
inc
cmp
pop
mov
jge
sti
aad
push
add
jg
mov
stc
aad
adc
or
cmp
inc
addr16
mov
loopne
test
inc
pop
push
push
js
sub
shrl
sti
stc
mov
loopne
xor
enter
js
xchg
scas
fisubs
jecxz
cs
sbb
hlt
inc
testl
pop
adc
lds
fs
cmp
int3
stos
mov
jg
sub
mov
repz
push
or
repnz
mov
fcoms
push
shrl
rcrb
icebp
or
rcrb
int
shrb
add
pop
sbb
mov
jg
idivl
cmp
pop
pop
cmp
xor
jmp
dec
iret
mov
imul
loope
dec
int
jno
or
dec
loop
cmpsb
mov
fimull
sbb
mov
mov
inc
lcall
sbb
imul
mov
xchg
xchg
mov
pop
ret
add
sub
roll
rorb
push
rclb
lods
fs
fwait
lods
adc
and
sbb
mov
cld
push
shrb
bound
in
xor
dec
std
mov
das
pop
shll
push
jg
repnz
mov
push
mov
xlat
outsb
iret
shl
bswap
shl
adc
inc
pop
shl
jp
xor
jg
call
xchg
dec
push
inc
ss
mov
sahf
xchg
cmpb
cmp
add
repnz
inc
loopne
negl
add
cmp
push
cmp
sub
xlat
cmpsl
aas
fnstenv
cmp
jp
test
inc
inc
aas
mov
out
call
call
xchg
mov
cltd
icebp
inc
xchg
and
sbb
or
xor
fldl
xchg
push
pop
inc
fisttpll
stos
gs
fildl
jp
cs
in
add
sbb
aam
aad
test
rcrb
mov
inc
cmp
js
aad
jno
mov
lcall
sarl
push
sbb
xchg
lret
aad
es
mov
and
sbb
xor
aad
inc
out
mov
inc
ficompl
lods
push
fidivrs
push
lret
addr16
int3
dec
arpl
cmp
sbb
mov
incl
dec
push
les
fdivs
xchg
lods
repz
loopne
mov
jecxz
iret
out
lret
sbb
sbb
cmpsb
sti
lahf
pop
movsb
xor
sub
mov
xchg
push
push
inc
stos
cmp
sti
cmp
sub
fs
push
leave
pop
push
fnstcw
mov
jp
hlt
inc
add
arpl
in
jae
stc
dec
lea
fwait
adc
out
pop
xchg
adc
mov
cmp
and
test
inc
cli
pop
mov
mov
add
ss
push
cltd
lcall
repnz
repnz
sahf
inc
sbb
pusha
leave
pusha
xchg
mov
fwait
cmpsl
push
call
repz
fsubp
xor
fcompl
leave
xchg
out
push
sbb
ret
pop
adc
cwtl
jmp
push
jecxz
mov
mov
sbb
jp
test
cli
and
and
in
jle
pop
int
mov
pop
xchg
dec
repnz
fnsave
sahf
xor
jno
mov
adc
out
sahf
xor
cmp
mov
adc
dec
push
in
stos
cwtl
lahf
pop
les
cld
cmpsb
push
cmp
dec
fs
aam
clc
cmp
jp
out
out
jl
insl
out
test
xchg
sbb
jl
dec
loope
lret
les
cmpb
mov
pushf
out
jae
cltd
xor
inc
jecxz
popf
mov
dec
notl
fsubrl
jecxz
jmp
test
push
cmc
sti
mov
and
pop
hlt
rorb
cmp
xchg
test
jne
mov
xor
cmp
mov
das
ret
and
adcl
adc
jne
in
fwait
repnz
test
testb
lret
jae
sti
push
sbbb
xchg
es
jne
arpl
adc
inc
xor
and
mov
dec
mov
xchg
sub
orl
inc
mov
cwtl
outsb
cmp
push
shl
jl
adc
ljmp
push
jnp
sahf
sbb
movsl
imul
nop
icebp
mov
sbb
les
sti
sarl
push
push
js
xlat
mov
jle
add
in
fstpl
loope
jp
pop
repz
adc
inc
dec
bound
pop
adc
stc
clc
add
mov
sub
cmp
jl
fsubrs
lahf
pop
xor
adc
inc
imul
ljmp
sahf
cmp
sub
or
jnp
push
xchg
xor
nop
ja
inc
enter
fdivl
push
fidivs
mov
insb
or
mov
cmp
cs
out
and
movsl
push
in
and
xchg
push
hlt
decb
cwtl
inc
rclb
mov
sbb
inc
sub
mov
xor
loope
jnp
insb
mov
aaa
push
mov
mov
mov
xchg
jl
push
pop
mov
push
xor
les
mov
sbb
jl
clc
sbb
lds
dec
dec
jmp
roll
lret
mov
pushf
les
cld
jge
mov
es
mov
insl
adc
pop
scas
fsubs
dec
dec
es
mov
and
lds
mov
pop
loope
sub
mov
sub
ds
data16
cwtl
jbe
push
test
stos
mov
push
jb
add
shrb
adc
daa
mov
push
test
das
fisubl
call
int3
inc
sbbl
ds
lahf
stos
mov
fldcw
iret
jle
icebp
in
jg
pop
pop
lahf
int
jnp
xchg
and
loop
mov
mov
shrb
pop
ret
or
jno
dec
sbb
xchg
lcall
shlb
adc
les
aas
outsl
jmp
aad
int
push
push
push
nop
xor
xchg
or
insb
add
sub
pusha
jnp
adcl
inc
pop
es
gs
test
push
sub
push
enter
sbb
aad
sbb
iret
jge
ja
mov
gs
bt
add
aaa
push
cmpsl
sbb
fstl
xchg
hlt
cltd
std
mov
add
push
adc
je
jno
fisubrl
nop
lods
mov
fidivs
xchg
outsb
loopne,pt
lcall
in
add
push
or
inc
clc
test
cmpsb
fildll
ss
cs
cmp
int
cmpsl
sbb
mov
outsl
outsl
daa
push
out
shrl
xchg
pushl
cmpl
jo
stos
mov
add
orl
out
cmp
xor
mov
jg
imul
lea
xor
cmp
ret
and
inc
clc
xlat
or
xor
or
movsb
es
xchg
xor
pop
or
arpl
fdivrp
jp
xchg
mov
popf
test
inc
inc
scas
xor
fiaddl
out
lods
cmc
jo
rclb
pop
aaa
ljmp
and
xor
jmp
adc
aas
xchg
dec
leave
pop
or
adc
cmp
mov
dec
jmp
int
jns
fdiv
fidivs
adc
xchg
sub
xor
fucomp
daa
dec
push
aam
sbbb
icebp
test
sub
gs
sbb
scas
sbb
fucomip
mov
test
and
jmp
dec
fidivrs
xchg
loop
and
daa
mov
in
imul
in
dec
push
adc
sub
jno
pop
scas
push
sbb
orb
mov
lock
jl
arpl
inc
pop
inc
packuswb
xchg
sbb
pop
or
mull
xchg
clc
mov
adcl
mov
sub
cmp
pop
scas
adc
add
lock
lret
shld
pop
sub
and
jnp
xchg
jl
ds
mov
add
in
aas
pop
sbb
xchg
fadds
jnp
mov
or
stos
data16
orl
cmp
xlat
cmc
cltd
jl
fiadds
sub
mov
mov
shrl
fsubs
add
sbb
mov
es
jmp
nop
mov
inc
mov
sub
jge
fwait
mov
mov
cmp
add
jb
shr
cli
jbe
icebp
sbbl
pop
xor
add
enter
cmpsb
sbb
mov
push
lea
mov
sbb
notb
xor
test
mov
test
mov
je
push
das
insl
sbbl
mov
push
outsl
mov
retw
mov
inc
out
and
mov
inc
out
imul
xchg
mov
outsb
sahf
andl
xor
stos
repz
bound
mov
ds
pusha
cld
out
jb
push
mov
pop
stos
int
pop
cmp
imul
xlat
lds
loopne
subl
daa
jg
iret
inc
pop
sub
rcll
mov
mov
jmp
insb
push
jno
addps
mov
adc
mov
dec
lcall
popa
mov
std
push
aas
outsb
push
out
out
pop
and
loop
leave
sbb
mov
dec
inc
sbb
adc
loop
test
cli
mov
into
adc
mov
add
movsb
ja
decb
pop
push
mov
or
rep
xor
jmp
in
pushl
in
cmp
cld
mov
fsts
xchg
or
pop
out
mov
shl
out
add
sub
pop
stos
mov
stc
je
pop
icebp
xchg
xchg
shrl
jb
inc
in
pop
add
push
in
out
cs
xor
call
into
pop
test
mov
cli
mov
sub
shrl
jae
mov
push
xor
pop
aas
flds
loopne
loope
insl
popa
dec
lret
dec
icebp
mov
popa
sub
push
shrb
or
mov
daa
jo
sbb
in
xchg
or
cmp
and
add
mov
cmp
pop
insl
inc
or
sbb
cmpsl
sub
vrsqrtss
add
inc
ja
ja
sbb
jp
and
stos
mov
mov
mov
pop
ss
pop
div
sub
push
sub
gs
lret
and
dec
loope
cmp
xchg
fidivrl
pop
lret
sar
mov
adc
push
andl
fsubr
or
xchg
jne
dec
jle,pn
xchg
mov
sub
sbb
leave
xchg
cwtl
pop
push
ss
or
clc
cli
aas
cli
adc
aam
imul
aad
aaa
pop
mov
fnsetpm(287
add
jne
lods
sub
sar
popf
orb
andb
mov
inc
les
cmpsl
notl
jmp
dec
xlat
dec
movsl
lea
mov
ret
pop
xlat
testl
icebp
stc
popf
inc
mov
jmp
adc
mov
dec
aaa
stc
or
dec
fnstsw
aaa
enter
dec
jl,pn
pusha
test
cmp
loope
pushf
dec
pop
movb
mov
std
mov
sub
cli
clc
leave
pusha
sub
xchg
ret
lds
outsb
ror
jno
xor
aam
out
inc
mov
repnz
jnp
mov
xchg
pop
mov
sbb
cli
pop
sbb
daa
xchg
add
sbb
xor
sbb
xchg
sub
xchg
lahf
inc
bound
xor
inc
push
add
stos
mov
adc
cmpsb
push
xchg
daa
outsl
lcall
mov
push
fwait
mov
and
adc
in
cmp
push
inc
mov
fldl
mov
loopne
cmp
leave
xlat
sbb
fimull
mov
and
mov
mov
and
andl
rcrb
lds
dec
cmc
mov
sarl
repz
aam
iret
sbb
sbb
stos
shrl
iret
gs
push
and
pop
outsb
inc
sahf
pushf
mov
sub
hlt
or
xor
mov
stos
stos
mov
test
cs
pushf
sti
inc
lcall
push
jb
push
push
xor
fidivl
cmp
clc
filds
sahf
jno
xor
sub
leave
xor
stos
aas
pusha
pusha
mov
pop
iret
and
mov
mov
add
lock
xchg
jecxz
mov
mov
inc
outsl
mov
iret
es
jl
les
cmp
cltd
jecxz
hlt
out
cmp
insl
in
lret
ret
inc
mov
and
sub
ds
int3
xor
std
in
sub
ret
add
inc
in
inc
xchg
xchg
or
hlt
xchg
sub
hlt
xor
pop
out
mov
sahf
lds
xchg
daa
cmp
inc
xchg
cmpsl
jb
push
mov
ret
dec
es
movsb
push
aad
xor
xchg
gs
loope
les
divb
push
mov
xor
or
cmp
in
mov
push
lcall
scas
xchg
pop
xor
iret
test
data16
push
or
add
mov
ss
out
push
test
dec
test
add
sbb
add
leave
fdivl
mov
inc
sbb
movntq
sti
adc
sub
xor
in
sub
push
fsubs
xchg
add
xor
andl
jecxz
fisubs
in
psllw
std
mov
insl
clc
scas
movsb
xchg
mov
sbb
stos
or
push
lods
xchg
jae
cmpsb
xchg
in
ss
sub
add
nop
push
mov
xor
cmp
add
inc
jle
jbe
push
sub
lods
outsl
pop
jecxz
jae
xchg
mov
out
imul
sub
fsts
and
loop
push
jmp
dec
pop
not
sbbl
shrl
jns
xor
adc
push
jo
mov
mov
cmp
xor
loop
cmp
and
inc
adc
lret
mov
jne
push
add
fcmove
cmp
rcll
repz
mov
imul
std
rcr
and
fistps
arpl
lea
sbbb
adc
push
sub
cmp
mov
mov
xchg
xor
and
mov
vaddsubps
dec
jle
jmp
pop
dec
jmp
repnz
lock
ljmp
test
jbe
in
mov
ljmp
in
mov
movsb
push
dec
push
dec
dec
push
lahf
outsb
stos
icebp
adc
mov
or
lds
cmpsb
mov
or
and
rclb
popa
push
into
aad
jmp
cmpsb
xchg
mov
lret
addr16
aad
inc
lods
pop
lret
out
sarb
nop
mov
mov
push
mov
or
shlb
add
aas
push
xchg
push
xchg
imul
cltd
or
jmp
push
xor
mov
data16
xor
loopne
adc
cmp
lods
inc
jp
add
cmp
fcmovnbe
je
scas
cmp
movsl
stos
dec
mov
fsqrt
jecxz
lock
pop
stos
into
push
mov
mov
arpl
mulb
popa
add
add
or
dec
idivb
and
movsl
fcmovnbe
pandn
jne
sbb
adc
sbb
int3
sub
int3
mov
mov
lcall
ficomps
leave
ds
add
pop
pop
push
ficompl
jmp
decb
ljmp
ds
add
pop
cmc
and
push
xchg
fistpl
jmp
xchg
ds
test
mov
icebp
sub
push
outsl
jbe
test
aam
ret
imul
mov
push
pop
das
cmp
cs
fldenv
xor
push
push
mov
push
xor
sbb
push
jmp
sub
cmp
fwait
shrb
add
movsb
imul
jp
aad
mov
sbb
insb
cwtl
jne
sbb
mov
pop
inc
pop
mov
lret
or
test
repz
mov
xchg
inc
scas
xchg
notl
mov
pushf
fs
mov
sbb
dec
leave
inc
icebp
mov
pushf
push
fildll
mov
lds
jg
jns
fwait
xor
rcrb
repnz
in
pop
loop,pt
pop
pop
lcall
in
cmpsb
push
xchg
out
mov
test
mov
xchg
jno
ret
add
ljmpw
leave
enter
scas
inc
pop
popf
pop
push
into
test
mov
and
shrb
imul
mov
outsl
mov
mov
jecxz
adc
in
idivl
jo
mov
xor
aad
and
fnstcw
stc
ljmp
jne
xchg
pop
cmp
testb
daa
test
push
mov
testl
subb
pushf
in
ret
repz
ss
movsl
out
in
mov
mov
mov
mov
repz
ja,pt
cmpsl
jp
lods
add
sbb
push
leave
js
ss
cli
xchg
sub
nopl
cmp
xchg
and
pop
mov
sub
scas
mov
nop
pusha
sbb
mov
pop
adc
leave
and
cli
arpl
movsl
pop
loope
lahf
out
jl
data16
addb
add
daa
or
jmp
hlt
jae
mov
push
cltd
std
aaa
loopne
and
xor
pop
loope
pop
mov
mov
std
mov
mov
lret
adc
xchg
leave
mov
ja
mov
sub
jb
movsb
cmp
popa
neg
andl
mov
push
xor
push
inc
cmc
pop
xchg
outsl
pop
sbb
jge
shll
iret
jno
data16
or
int3
data16
int3
test
rcll
xchg
and
cli
ret
mov
call
mov
mov
dec
test
ss
rcrl
xor
es
adc
into
enter
adc
bound
enter
adc
sbb
int3
adc
push
ret
inc
sti
inc
test
call
mov
mov
fdivrs
xchg
adc
adc
pop
rcll
jecxz
jae
bound
and
pop
cmp
clc
in
stos
pop
ror
stc
sahf
cmp
dec
mov
cmp
enter
cwtl
xor
out
out
int3
cmp
push
lahf
loopne
jns
jge
push
das
mov
add
pop
add
mov
jae
cmp
push
dec
pop
loopne
mov
dec
or
and
sub
repz
sub
push
fsubrl
xchg
push
and
or
inc
out
mov
hlt
in
mov
mov
push
xor
dec
xlat
fldcw
jnp
stc
or
jnp
icebp
std
outsl
inc
rorb
mov
lret
mov
mov
cld
sbb
popa
mov
mov
lea
aam
and
sub
mov
fadds
test
push
and
adc
aad
movnti
ljmp
lods
add
adc
cwtl
insl
mov
adc
fnstenv
xor
push
repz
stc
ss
push
xchg
jne
rcrb
das
inc
mov
dec
xlat
mov
notb
dec
cmpsl
xor
cltd
mov
ja
lret
cli
and
mov
mov
mov
js
adc
in
mov
push
cmp
icebp
std
insb
inc
aam
popf
stc
mov
fdiv
dec
sub
lret
lahf
and
in
add
xchg
sbb
repnz
and
ficompl
pop
jbe
push
xor
ret
push
inc
hlt
test
sub
adc
push
cmc
adc
xlat
sub
add
dec
je
mov
dec
push
in
mov
loopne
scas
es
pushf
push
xor
pop
pop
test
out
xor
inc
enter
andl
popf
add
mov
fcompl
add
daa
sub
stos
lods
jp
mov
icebp
mov
jg
pusha
pop
or
push
popf
lret
notb
jno
push
setno
int
mov
out
enter
lock
sbb
sbb
adc
dec
popf
push
adc
sbb
push
pushf
test
insb
inc
lock
arpl
pop
adc
dec
fstl
adc
fcoms
adc
daa
inc
or
insb
xor
dec
mov
aas
out
sub
dec
cmp
sub
push
and
push
fucomip
mov
idivl
inc
in
outsb
mov
xor
or
les
loopne
loope
daa
out
insb
pop
data16
pushf
mov
out
cmp
out
lcall
movsl
adc
pop
xor
pusha
dec
fs
sbb
mov
sub
inc
es
lds
and
fiadds
and
mov
push
adc
mov
cwtl
sub
fcom
repz
aaa
test
pop
pushf
movsl
adc
lds
dec
sbb
shll
out
mov
sbb
add
sbbl
lods
les
pop
test
and
roll
xorb
ror
mov
cmp
int
movsl
std
mov
push
movsl
ret
push
cmpsl
movsl
lret
and
into
pop
cmp
lahf
ss
in
jecxz
push
and
cltd
inc
pusha
mov
or
and
mov
add
shll
mov
xlat
stos
xor
andb
imul
mov
sub
and
dec
push
xor
push
sbb
jae
push
aas
jmp
inc
mov
lods
mov
sahf
jl
push
aas
mov
es
insb
dec
movsb
sbb
iret
mov
rclb
das
inc
stc
pop
or
push
mov
mov
inc
sbb
test
leave
sbb
ret
push
mov
cld
mov
imul
sub
dec
cmp
jo
adc
mov
xor
mov
pusha
sbb
sub
dec
in
push
dec
dec
xchg
jnp
sbb
in
jecxz
jge
into
push
fnstsw
fsubl
pop
dec
aad
cwtl
outsb
dec
adc
pop
and
mov
jl
mov
rclb
mov
mov
pop
das
or
xor
pop
fildl
arpl
dec
popa
inc
push
lahf
pop
stos
mov
mov
repz
push
xchg
inc
jg
pop
repz
mov
addr16
int3
arpl
out
test
fdivs
gs
je
shlb
push
xchg
push
icebp
xchg
sbb
cmp
sahf
flds
dec
pop
cmp
push
in
cmp
cltd
aam
xchg
dec
testl
lahf
cmp
sarb
push
out
icebp
push
jbe
aas
mov
repz
inc
das
jp
cmpsl
pop
sub
jae
shrb
bound
sahf
push
imul
aas
and
push
icebp
add
push
jl
mov
ret
mov
gs
lret
jb
jne
and
xor
out
dec
daa
jno
stos
cmc
pop
fnstenv
sub
or
fs
ret
loope
out
xchg
insl
jbe
xchg
shll
adc
arpl
jns
pop
ret
inc
and
in
arpl
scas
outsl
loop
add
in
sub
mov
fisttpll
add
mov
mov
and
push
and
lock
test
repnz
and
roll
cwtl
das
xor
jmp
adc
inc
add
jb
sbbb
mov
mov
lret
movsl
jle
leave
jo
xor
or
mov
jne
mov
cld
lcall
jbe
xlat
dec
loop
mov
add
int3
imul
rcrl
loopne
or
mov
aaa
cmpsl
imul
mov
xor
mov
enter
in
mov
add
std
xchg
insb
and
stos
push
mov
mov
frstor
push
out
rcl
cmp
rolb
inc
dec
mov
xchg
sub
mov
out
mov
mov
sub
popf
cmp
insb
mov
test
daa
call
dec
in
cld
int3
lret
mov
repz
jp
test
pop
addb
hlt
fcoml
lods
or
adc
jno
mov
or
and
push
dec
xchg
add
rcrb
dec
xor
rol
aas
sub
inc
xlat
cmpsb
sbb
leave
dec
pop
cmp
mov
adc
ljmp
sbb
in
ja
pop
sahf
mov
ret
and
sti
inc
push
pop
pop
test
lods
mov
fidivl
or
imul
sub
pop
mov
ret
hlt
xor
scas
pop
xchg
ja
iret
out
test
jmp
or
pop
cmp
xor
insb
insl
mov
ret
hlt
hlt
lea
sbb
dec
push
stos
inc
sbb
je
movsb
leave
pusha
sub
scas
inc
es
adc
cmc
std
xchg
daa
mov
sbb
cmp
insl
add
out
testb
inc
adc
js
push
call
sarl
scas
adc
inc
fldl
xchg
sub
cmp
test
cmp
fxch
push
in
cli
cli
pop
icebp
das
pop
gs
push
pusha
mov
mov
call
add
jnp
std
mov
cltd
add
jo
sub
pop
mov
adc
inc
sbb
enter
cmp
nop
scas
inc
ret
shr
int3
arpl
add
stos
inc
pop
in
mov
jl
pop
scas
aaa
cmp
lds
cwtl
xchg
insb
out
movsb
cmp
mov
ja
dec
sbb
pushl
cmp
push
add
aaa
jl
inc
scas
inc
popa
clc
js
inc
fsubrl
shlb
add
xor
fs
int3
test
ljmp
jno
movntps
mov
mov
enter
dec
adc
push
ljmp
nop
daa
dec
test
mov
rcll
stos
push
leave
mov
jmp
rcrl
mov
cmp
lret
mov
add
xchg
mull
pop
push
pop
pop
out
inc
je
fsubs
rcr
divl
mov
inc
push
jmp
xor
add
xorl
rolb
repz
repz
sub
inc
nop
dec
mov
loop
mov
cmp
xor
testl
ja
jle
loope
xchg
sub
or
aas
decl
mov
popl
inc
jae
addr16
fsts
imulb
add
jnp
in
test
jnp
int3
nop
loope
jmp
fisubl
loop
into
adc
clc
ja
in
insb
cwtl
jg
int
dec
loop
push
pop
lock
pop
jne
mov
ficomps
pop
lea
hlt
jl
add
pop
pop
lock
into
test
aad
iret
pop
xchg
mov
cld
test
lods
inc
rclb
cmp
dec
inc
fdivrs
lods
inc
iret
mov
xchg
sub
sahf
aad
iret
movsl
mov
add
sahf
daa
mov
loope
add
jno
testl
xchg
movsb
iret
lods
test
push
sbbl
push
and
sub
push
fwait
xor
xchg
jnp
ret
js
pop
jae
mov
out
insb
cwtl
test
in
xchg
cmpl
pop
insb
mov
push
out
jecxz
imul
jne
dec
loopne
stos
or
cmp
sarb
in
test
dec
loopne
lods
dec
out
lcall
outsb
pop
iret
lea
test
imul
mov
lods
inc
les
rcrl
stc
nop
mov
dec
loop
cmp
js
pop
sbb
out
mov
data16
push
jge
xchg
and
xchg
imul
xchg
int
pop
mulb
imul
mov
sbbl
daa
insl
add
push
sbbl
repnz
xor
int
shrl
pop
fbstp
rcrl
iret
and
test
outsl
push
mov
dec
loopne
mov
dec
in
inc
jecxz
jb
imul
movsl
and
pop
inc
lea
into
fnstenv
cmpsb
inc
fcmovbe
sub
pop
inc
daa
mov
jmp
arpl
pop
inc
lret
bound
push
out
jmp
xchg
cs
inc
add
ljmp
mov
inc
inc
push
out
jno
outsb
add
xlat
adc
mov
jb
jg
pop
fbstp
sbb
jnp
enter
adc
xor
in
test
mov
jl
mov
imul
ss
xchg
gs
mov
mov
mov
sbb
sbb
sub
mov
insb
dec
mov
jecxz
fwait
pop
out
rcr
adc
and
pop
cmc
pop
inc
pusha
divl
push
xor
leave
lret
aam
add
and
push
cmp
repz
mov
cmpl
sbb
lods
pop
imul
mov
movsl
cmp
aad
jg
adc
lea
les
jle
xchg
lods
mov
cmpsb
cmp
cmp
pusha
notl
gs
xchg
jno
pop
cmpsl
mov
cmp
lds
testl
push
call
xchg
outsb
stc
nop
pushf
mov
loope
mov
jae
ss
pop
addr16
ljmp
cmp
xchg
mov
sbb
xchg
pop
rclb
add
les
stos
xchg
pop
in
adcl
inc
fstpt
arpl
mov
es
hlt
mov
adc
inc
or
je
addr16
daa
xchg
push
out
xchg
scas
testl
and
inc
fiadds
stos
sub
ss
sbb
aas
mov
and
and
inc
push
push
or
imul
movsl
mov
xchg
in
dec
pop
mov
mov
imul
inc
mov
mov
scas
and
pop
lods
inc
add
js
loopne
sti
mov
pop
jo
testb
jno
jmp
ret
jb
cmc
fwait
jns
int
sbbb
bound
cwtl
cmp
in
icebp
mov
jbe
fistl
popf
sub
repz
xor
mov
xchg
sub
pop
mov
outsb
mov
pushf
sub
pop
mov
jnp
movsl
push
out
xor
mov
std
pusha
ret
pop
xchg
pop
mov
inc
mov
lret
or
arpl
mov
cmp
pop
ljmp
fwait
pushf
xor
mov
sub
jno
inc
inc
fxch
adc
sbb
ss
ds
xor
ret
gs
roll
call
hlt
pop
int3
cmp
push
jge
lret
xor
inc
js
mov
stos
inc
jge
loop
je
xchg
addr16
ss
push
mov
bound
mov
test
repz
mov
add
inc
cmpsb
inc
jo
inc
jmp
jge
pop
fbstp
loop
stos
mov
es
jl
pop
inc
rcr
sub
dec
les
pop
scas
shrb
jl
inc
dec
mov
jno
push
mov
roll
in
lods
jbe
mov
inc
push
mov
jae
pop
inc
out
gs
ret
push
pop
in
das
icebp
push
movsl
arpl
int
and
mov
cmp
inc
xchg
jns
test
xchg
push
pop
lds
pusha
sahf
jl
and
test
loopne
pop
inc
int3
dec
sbb
sbbl
xor
mov
imul
pop
js
imul
push
out
dec
out
pop
mov
add
mov
icebp
pop
repz
push
mov
clc
push
jmp
es
or
xchg
mov
sbb
xchg
call
and
push
loope
sarl
pop
leave
je
shrb
xchg
smsw
add
imul
inc
jge
das
fstpl
lods
jne
dec
inc
fnstsw
xchg
js
fwait
xchg
mov
lods
movsb
pop
repz
xchg
notl
fcmovne
sbb
int
dec
cld
inc
jno
das
psubsb
test
pop
scas
rorl
roll
arpl
and
sbb
in
std
xor
cld
arpl
add
pop
xchg
cs
out
adc
shrl
imul
or
hlt
mov
mov
fnsave
sbb
xor
sbb
cld
xchg
push
jnp
sbb
ljmp
jb
sub
sti
mov
jb
test
lds
adc
fisttps
ss
je
cmp
push
popa
clc
pop
shl
sub
repnz
and
lahf
dec
rcrb
ds
sub
and
adc
sub
adc
sub
add
push
sahf
std
ljmp
adc
inc
inc
or
sahf
xor
insl
cwtl
jl
xchg
hlt
popf
test
mov
sub
mov
inc
add
mov
or
inc
mov
sbb
jo
lahf
nop
pop
imul
rolb
scas
cmp
or
fwait
and
sub
arpl
loopne
addl
lcall
xchg
sahf
pop
rcll
call
ret
mov
pop
in
lods
mov
leave
int
popf
ljmp
sbb
int
fmuls
scas
or
sub
aaa
or
xor
or
popa
jl
mov
pop
jae
mov
nop
adc
scas
sbb
add
inc
repz
ljmp
bound
out
ja
pop
clc
jno
cltd
pop
xchg
mov
cwtl
shrl
gs
fnstenv
in
and
pop
hlt
mov
icebp
aaa
fcmovb
xchg
add
stos
inc
xchg
out
negb
sub
movsb
icebp
sub
in
call
or
jne
lahf
les
pop
pop
mov
daa
gs
inc
dec
and
mov
and
fadds
outsl
lahf
xor
outsl
push
jl
xor
iret
mov
fnstenv
pop
dec
fld
cmp
dec
mov
inc
shll
mov
cli
stc
mov
or
sub
xor
mov
or
cmp
gs
xor
or
cmp
push
mov
std
arpl
mov
lcall
push
cli
lock
int3
mov
and
hlt
xchg
fdivr
cltd
and
lahf
es
sub
cmp
sti
cmp
leave
cmp
fwait
inc
ljmp
data16
or
call
xchg
dec
adc
pop
push
sbbb
cmp
xor
sti
sarl
ljmp
push
push
or
add
mov
dec
repnz
mov
xlat
sbb
mov
repnz
add
cmpsb
pop
ficoml
fstp
mov
push
lret
daa
fnstcw
sbb
xchg
ljmp
ffree
jne
fisubrs
addb
jne
ret
xchg
cltd
mov
movsl
adc
outsl
push
lods
sahf
push
int
into
insb
cwtl
shrb
mov
jmp
jle
and
popa
fildl
pusha
stos
mov
test
sbb
gs
int3
mov
dec
mov
pop
notl
rcrl
mov
mov
sti
insl
scas
lret
add
loopne
les
cmp
mov
sti
sbb
add
lret
loope
out
test
add
call
cmp
push
lods
jae
sbb
xor
mov
mov
mov
inc
xchg
out
and
jo
pop
push
cmpsl
pop
jp
mov
dec
dec
data16
inc
jnp
push
aas
insb
stos
stos
inc
pop
lock
xor
jmp
lods
adc
std
in
decb
stos
sbb
imulb
xchg
cld
dec
movsl
enter
popf
into
pop
rcr
sbb
push
adc
push
out
ds
imul
adc
dec
xchg
jne
rclb
pop
jnp
lret
pop
mov
arpl
es
test
sub
mov
insl
dec
mov
inc
adc
fnsave
je
mov
and
ret
flds
addb
or
or
cltd
cmp
sti
pop
mov
fimuls
sti
call
or
jmp
loope
adc
test
jbe
mul
out
leave
movsb
inc
mov
adc
rcrl
aas
movsl
pusha
daa
mov
fnstenv
mov
pop
and
push
insb
xor
hlt
mov
jl
stc
sbb
scas
roll
je
fildll
cs
xchg
or
mov
cvtps2pd
push
dec
cs
pop
jbe
sbb
jno
mov
jl
out
mov
call
cli
xor
pop
arpl
cmpl
push
adc
inc
mov
shll
mov
fnstenv
push
jmp
and
pushf
mov
pmuludq
sbb
movsl
mov
pop
or
shl
cmp
dec
lods
push
loopne
jne
jne
push
xor
mov
jbe
in
js
pop
mov
mov
adc
sti
outsl
loop
dec
mov
cmc
adc
cmc
xor
and
cs
fdivl
dec
inc
fwait
insl
mov
inc
add
jo
popf
and
aam
sbb
lahf
add
adc
mov
mov
lret
mov
pop
testl
stc
fstl
add
jl
mov
ss
jg
mov
cli
insl
subb
cmpb
cmp
pop
ret
jb
mov
inc
mov
mov
mov
mov
mov
mov
fbstp
out
sub
es
loopne
icebp
ss
idivl
test
loop
ja
fmuls
push
test
imul
mov
mov
pop
sub
popf
mov
jnp
dec
lods
fidivl
iret
xor
mov
add
push
fisubs
jmp
jbe
sbb
push
stos
das
jge
ret
popa
cmp
sub
pop
fsts
sbb
push
imul
popf
mov
pop
insb
add
clc
mov
inc
sarb
repnz
mov
sti
or
iret
mov
cmc
rep
jge
or
fists
and
push
test
scas
je
or
and
stos
or
inc
jb
xchg
cs
lret
repnz
cwtl
pushl
sub
out
inc
mov
insl
cmp
mov
pop
and
sahf
jbe
xchg
mov
pop
repz
mov
clc
and
inc
int
inc
ficoml
inc
mov
imul
out
scas
jmp
mov
fmul
aam
test
out
out
into
mov
fwait
test
lcall
mov
xchg
inc
enter
xchg
addr16
shll
aaa
jmp
icebp
ja
stos
ss
dec
mov
inc
dec
data16
addr16
xor
shlb
outsl
sub
or
lock
jmp
dec
jecxz
mov
lret
scas
fcomps
cwtl
lea
les
loope
std
sub
movsb
pop
stc
cli
mov
xchg
sub
cmpl
pop
xchg
outsl
movsl
jns
scas
cmp
mov
dec
fcompl
push
fiaddl
jecxz
xlat
jmp
in
smsw
stos
jne
and
std
xor
jecxz
inc
leave
call
lret
cmp
cmpsl
pop
aad
sbb
lret
data16
xor
jnp
push
push
sub
push
jmp
pop
adc
adc
xchg
js
dec
in
fsub
sbb
jmp
in
and
adc
loopne
jo
ds
or
loop
dec
pop
xor
imul
pop
sbb
dec
scas
sbb
xor
and
add
mov
out
mov
or
push
mov
out
mov
inc
daa
rolb
cmp
jnp
shrl
jo
jo
lds
xchg
dec
fdivrs
or
mov
mov
out
pop
cmc
cld
pop
cmp
pop
mov
jmp
xor
out
dec
and
ret
aas
aas
shll
shll
nop
push
and
push
aad
out
xor
hlt
pop
cmpsl
loop
jecxz
leave
icebp
sbb
mov
adc
mov
outsl
into
mov
xchg
or
cs
mov
add
ret
test
lds
clc
mov
in
and
sbb
push
pop
cmp
add
cli
testl
cmpsl
jb
xchg
sub
cltd
inc
jl
dec
mov
fisubrl
jo
aaa
fimull
and
cmp
sbb
sub
cltd
xor
mov
in
pop
xlat
xchg
lds
mov
ret
stos
or
mov
sbb
cltd
inc
sar
sbb
jge
cmp
adc
lock
or
fistpl
addr16
shll
cltd
xchg
mov
mov
mov
call
cmp
mov
pop
mov
jmp
imul
jbe
or
mov
add
enter
or
pushf
adcb
xchg
jnp
xorl
ret
sarl
jns
into
mov
fmull
leave
jp
jmp
cmp
fimuls
out
mov
or
out
or
cmpsb
adcl
aaa
xchg
pop
imul
mov
jmp
loope
in
shll
push
lods
ja
push
cmpsl
push
jmp
xchg
mov
mov
ja
sbb
sub
jns,pn
jecxz
hlt
sub
push
add
inc
frstor
mov
and
test
insl
fidivl
pop
fs
jns
in
sbb
cmp
mov
and
xchg
inc
rcrb
bound
orl
push
jbe
push
or
push
orl
pusha
mov
mov
pushf
clc
sub
test
aam
xor
arpl
gs
sahf
mov
mov
mov
fiadds
lcall
adc
add
addb
or
imul
push
jne
clc
je
fcoml
ljmp
shl
xchg
mov
movsb
cmp
je
or
les
pop
ret
aad
in
add
shlb
rcl
into
jmp
mov
add
push
adc
fistl
or
je
insl
jge
dec
rcrl
jp
in
inc
adc
sub
idivb
paddw
test
or
push
or
nop
stos
outsl
xor
fwait
ret
cmp
enter
pop
loopne
push
mov
in
fs
cmc
dec
cmp
push
mov
or
mov
and
jnp
dec
rolb
and
add
inc
xor
sbb
pop
in
xor
lret
frstor
jle
into
data16
lahf
test
sbb
lahf
jle
pop
enter
test
jmp
iret
je
fists
dec
mov
in
lcall
jp
in
push
aad
mov
mov
stos
cs
sti
sub
jg
sbb
adc
int
jl
test
adc
andb
push
repnz
cltd
push
in
mov
ficoms
in
loop
cmp
pop
pop
loopne
mov
mov
mov
push
mov
cmpl
sarl
test
loope
rcll
push
jns
je
loopne
sbb
inc
sbb
es
popf
xchg
ds
inc
xchg
jb
jae
sbb
in
pop
nop
sarb
and
sub
fnstenv
imul
ds
cmpsl
jne
jl
dec
inc
pop
stos
xchg
push
sub
loope
mov
outsl
hlt
inc
sbb
pop
mov
pop
arpl
xchg
js
lock
pusha
movsb
cmp
mov
negb
pop
push
shrb
add
mov
lcall
lds
ljmp
mov
div
xchg
negl
cmpsb
mov
out
ss
pop
and
hlt
loop
rcrb
pop
mov
sbb
sbb
pop
clc
sbb
lahf
mov
call
add
mov
mov
imulb
lret
sub
lds
mov
mov
dec
mov
stos
pop
ds
lds
push
lret
cmp
aaa
outsb
push
lods
adc
dec
pop
xchg
test
dec
insb
jnp
xor
mov
jge
gs
adc
and
fistl
xor
mov
je
mov
ss
xchg
lods
pop
or
mov
pop
and
clc
pop
je
mov
mov
fadds
fdivr
sub
xchg
sub
fcomi
sbb
xchg
in
loopne
inc
in
call
push
sbb
mov
jb
das
mov
push
xor
pop
ds
mov
dec
rolb
push
inc
repnz
lods
inc
xor
mov
push
xchg
sub
mov
aas
cmp
add
jnp
imul
sub
jnp
shrl
pushf
stc
sub
sbb
cmp
out
fiadds
jmp
das
pushl
push
xlat
mov
xchg
mov
inc
push
out
mov
stos
adc
adc
fwait
lcallw
popl
inc
xor
jle
outsl
pop
mov
fwait
adc
xchg
xor
nop
jnp
or
dec
stos
sub
dec
mov
out
ret
mov
mov
mov
mov
fistl
loopne
sub
jecxz
pop
std
not
pop
xlat
shll
pop
int
jb
scas
dec
cld
adc
mov
ljmp
dec
cmp
push
pop
loop
pop
mov
daa
mov
rclb
mov
hlt
cmpl
stos
jno
mov
sbb
pusha
cwtl
mov
in
jae
mov
out
push
ljmp
sub
test
and
mov
test
out
jb
mov
push
mov
dec
movsb
rcll
push
mov
lret
leave
jne
insl
lcall
xchg
testb
out
mov
psrlq
pop
and
and
loope
mov
mov
xchg
test
test
lods
or
mov
sbb
imul
pop
fs
pushf
es
push
rcrl
or
ds
fdivr
insl
clc
and
shrl
loope
jl
outsl
mov
lock
mov
push
leave
movsl
out
adc
loop
xlat
mov
into
ja
mov
lcall
rcll
leave
xor
mov
fiadds
syscall
pop
int
xor
xlat
mov
pop
adc
xchg
or
inc
das
add
fwait
jl
ljmp
inc
sarb
jmp
push
rolb
iret
inc
jecxz
inc
mov
fldl
xchg
inc
inc
mov
sti
rorb
mov
mov
outsl
lods
xor
jg
or
lds
gs
lods
stos
repnz
sahf
xchg
sbbb
andb
push
sarb
inc
gs
sahf
push
dec
fnsave
pop
ret
lods
lret
jae
lock
sub
sbbb
rcr
push
call
jmp
push
stc
pop
out
mov
dec
xchg
push
push
push
out
bound
lret
data16
cwtl
sbb
sub
mov
sarl
xchg
mov
pop
or
loope
jns
mov
cmp
adc
push
adc
mov
dec
dec
cwtl
xchg
cmp
sbbb
sbb
adc
cmp
stos
testb
je
lock
ljmp
xor
aaa
dec
sbb
cld
xchg
jns
mov
pop
pop
into
imul
xor
sub
sub
and
mov
xchg
lea
out
xor
sub
jg
in
dec
mov
mov
cmpsl
mov
xor
test
dec
es
lock
jae
xchg
push
push
push
shll
add
imul
pop
ret
in
fstl
ret
repnz
repz
inc
xchg
jb
xchg
dec
adc
std
dec
enter
ds
mov
xchg
insb
mov
sbb
hlt
es
out
push
mov
mov
test
adc
scas
lret
imul
rcrb
out
ret
aas
and
and
lock
mov
cmp
dec
rolb
test
fldl
cli
push
icebp
scas
xchg
jo
movsl
mov
sbbl
cwtl
imul
cmp
dec
scas
out
push
clc
in
std
ret
inc
sarl
jl
inc
jp
pusha
mov
dec
scas
stos
or
cmp
sbb
push
aaa
out
cmp
es
xor
js
cli
inc
mov
dec
das
push
sbb
push
jle
push
pop
sbb
pop
jmp
fists
hlt
dec
into
pop
stos
jne
into
ss
push
xchg
push
fbld
adc
js
xor
scas
pop
xchg
jg
loop
sarl
in
pop
sahf
push
andb
test
jns
incb
cld
mov
fiadds
sbb
rcll
aam
loope
adc
pop
mov
pop
scas
jge
std
xchg
aam
pop
pop
mov
cmp
add
dec
cmp
xchg
mov
and
aaa
push
cwtl
push
xor
jmp
inc
sarb
fistpl
shll
pop
mov
mov
jae
sbb
mov
data16
in
stc
or
mov
and
or
fdivl
add
mov
std
dec
leave
cmp
int
out
fs
fisttps
cmpsb
xchg
pop
jmp
push
arpl
pop
lahf
test
push
insl
add
aam
out
mov
sbb
rcll
stc
nop
or
leave
mov
jecxz
subl
xor
push
jl
push
xchg
mov
and
data16
nop
dec
inc
cmp
imul
push
testl
xor
mov
mov
mov
pop
aad
loop
dec
aad
sub
pusha
call
fmull
es
movsl
gs
sbb
inc
mov
and
jbe
pop
sub
cltd
test
add
adc
mov
jnp
mov
pop
lret
cmp
cmp
in
dec
push
ss
mov
add
mov
in
aam
xor
stos
xor
xchg
out
sbb
mov
push
inc
das
xchg
push
mov
sbbl
pop
mov
addr16
out
mov
and
pop
jae
fimuls
add
loopne
fcoms
rep
add
lods
cmp
jge
ds
inc
rorb
sub
ds
pop
pop
nop
add
inc
jge
fwait
imul
enter
fs
inc
inc
mov
mov
push
sahf
jp
or
cmp
divps
pop
inc
mov
stc
mov
jmp
pushf
jne
add
ja
icebp
das
push
cmp
push
fsubl
cmp
xor
out
testb
dec
bound
jns
filds
xor
std
pop
ss
push
mov
lock
cltd
cmp
js
pusha
dec
cmp
pushf
das
aas
pop
pop
push
aas
das
bnd
sti
and
pop
fwait
shrb
je
enter
mov
pop
sahf
and
cmpb
add
popf
mov
mov
sarb
cmp
push
mov
fcompl
orl
or
aaa
or
xchg
popa
and
mull
jo
jbe
movlps
pop
divb
and
cwtl
imul
test
xor
sub
mov
push
inc
cmp
pusha
je
movsb
cmp
xchg
out
das
xlat
hlt
sub
insb
cli
xor
rcll
push
fmull
lds
pop
cmpsl
cmp
sbb
sbb
ljmp
cmc
sub
mov
leave
pusha
call
or
inc
mov
and
sbb
lahf
mov
cmp
shrb
adc
bound
loope
mov
sbbb
pop
sahf
ljmp
mov
test
fisttpl
scas
stc
loopne
js
sub
sbbl
jge
lahf
xchg
mov
imul
inc
lock
stc
nop
sbbl
sub
sbb
xor
loope
inc
push
ljmp
jno
lret
loope
sbb
pop
xor
lods
inc
jb
ret
xchg
lret
ja
out
sbbb
xchg
popa
cmp
sahf
imul
mov
add
daa
pop
out
pop
xor
bound
or
mov
xchg
sub
popf
xor
and
push
pop
jae
push
scas
out
xchg
iret
testl
push
insb
sub
popf
je
lret
dec
loope
push
call
inc
sbb
dec
arpl
and
call
or
pop
cmp
lret
bound
loop
mov
xchg
scas
add
call
or
mov
test
fisttpl
stc
fdivp
jns
sub
sbbl
jl
lahf
test
mov
push
cli
inc
icebp
mov
stc
nop
jg
xsha1
mov
sub
int3
and
dec
loop
inc
push
ljmp
jno
leave
loope
push
adc
es
lods
inc
jo
ret
pop
mov
fndisi(8087
js
in
adcb
call
imul
cmp
add
daa
pop
lock
das
popa
clc
pusha
jns
push
stos
cmpl
jnp
sub
dec
into
es
clc
push
out
int3
arpl
xor
xchg
mov
les
xchg
inc
fiaddl
or
mov
sub
lods
jns
mov
dec
inc
xlat
cld
and
xchg
cmp
sti
mov
pusha
neg
xorb
stc
pop
cmc
sub
jl
jge
xlat
outsb
push
fwait
lcall
mov
out
push
or
xchg
das
cmp
int
dec
sbbb
negl
sub
push
in
jp
xlat
outsb
and
dec
jae
xchg
sub
xchg
shrl
loop
xchg
xor
mov
push
movsl
imul
ret
jecxz
insl
add
add
lret
out
sub
mov
ljmp
pop
enter
xor
cltd
int3
and
imull
ret
pop
and
cmc
jg
loope
mov
shlb
lods
mov
inc
aaa
in
popf
rcrl
repnz
cmp
sbb
leave
sbb
inc
stc
mov
les
into
mov
xlat
adc
jp
and
cltd
lods
and
enter
in
dec
call
xor
mov
adc
mov
adc
xchg
int
stos
inc
aas
or
lret
dec
enter
mov
cltd
mov
cmp
pusha
enter
lock
scas
cmp
add
sbb
cmp
cvtps2pi
jl
lods
mov
or
js
inc
out
xor
out
xchg
jo
pop
into
add
mov
sbb
dec
sub
in
push
xor
shll
cmp
fmul
lahf
mov
xchg
or
sti
insb
ds
mov
or
in
mov
xchg
stc
fiaddl
sbb
pop
arpl
inc
lret
cmpsb
stc
xlat
mov
test
cmp
push
and
dec
xor
mov
inc
mov
inc
sbb
lods
imul
inc
push
subb
ret
fwait
cmp
cmp
mov
std
stc
add
dec
jnp
cmc
decb
sbb
lret
push
sbb
aas
lods
dec
push
outsl
jmp
mov
ret
xor
adc
rorb
or
fs
push
cmp
in
mov
idivb
xchg
mov
inc
or
push
enter
adc
jecxz
les
int
js
mov
dec
or
adc
mov
shrb
imul
lods
mov
mov
mov
hlt
cli
or
xchg
popa
popf
jne
lods
fistpll
xlat
lret
mov
fsub
icebp
jl
dec
test
inc
push
xchg
fnstsw
cltd
jb
lea
inc
fdivrp
pop
and
xor
jne
mov
neg
jns
or
jnp
push
adc
adc
fs
fwait
out
ss
xor
jns
pop
outsb
ficoms
orl
aas
ljmp
cs
adc
lahf
fs
pop
mov
pop
mov
push
cmpsb
stos
lcall
jae
mov
js
cwtl
das
cltd
shl
ret
push
pop
pushl
insb
stos
test
cmc
dec
adc
or
stc
nop
leave
test
push
data16
ss
mov
xor
mov
push
in
test
rcrl
lret
fisubs
inc
fsubs
fnstenv
or
pop
sahf
mov
cmp
test
mov
sub
pushf
loope
shlb
dec
loop
jge
adc
dec
gs
cmp
fsubrs
int
sahf
mov
dec
mov
movsl
jns
cmp
jecxz
mov
fs
push
push
jmp
mov
push
sub
shrl
fidivrl
ror
xor
loopne
in
push
out
sbb
jne,pn
pusha
fldcw
jbe
and
aad
stc
pop
xor
das
das
pusha
test
mov
add
adc
roll
inc
mov
cmp
cltd
mov
mov
in
popf
mov
repnz
sbb
sbb
mov
ds
imul
adc
lret
mov
outsl
push
xlat
push
mov
nop
mov
or
rcrl
and
out
xchg
inc
or
negb
push
and
lds
sbb
shlb
mov
mov
ficoms
es
nop
cmp
int3
fwait
cwtl
jno,pt
es
outsl
sbb
or
push
and
iret
jle
aad
inc
dec
push
in
andb
mov
mov
test
out
jp
add
cmp
cmp
stc
dec
sub
mov
or
ja
mov
push
repnz
push
jl
xchg
loope
and
mov
lods
jge
sub
enter
insl
into
push
jae
lahf
and
addr16
iret
and
sarb
clc
fwait
add
xchg
mov
aas
dec
pop
cwtl
mov
pop
lds
cmc
pop
push
xchg
test
popf
xorl
rcl
and
adc
mov
add
pop
push
fwait
inc
inc
mov
int3
adc
movsb
cli
dec
cmp
js
mov
insb
das
mov
dec
sbb
movl
xor
ja
mov
adc
lea
push
ss
dec
cwtl
inc
inc
mov
jno
cwtl
lods
xor
add
mov
sub
push
sub
sub
ret
jmp
xor
pop
mov
in
and
push
aaa
pusha
jmp
fcompl
pop
test
insl
push
push
add
or
stc
pop
fiaddl
test
mov
aaa
inc
and
pop
add
adc
inc
fildl
add
cmp
movsl
ja
cli
and
jge
lock
lods
loopne
dec
scas
mov
outsl
lock
rol
push
outsl
call
addr16
adc
mov
sub
pop
popf
adc
push
out
push
xchg
sbb
xchg
cmp
scas
cmpsl
daa
dec
mov
and
outsl
notl
andl
nop
cltd
inc
adc
pop
inc
adc
out
in
lret
std
mov
fmul
mov
test
rcrb
ret
xchg
adc
push
int
dec
aad
lock
pop
das
test
enter
mov
cmp
pop
mov
or
add
cmp
mull
and
push
cmp
and
lcall
cmp
xchg
cli
lea
cltd
mov
mov
mull
sbb
movsl
inc
jl
push
shlb
cmp
iret
mov
ret
test
sbb
cwtl
ret
cld
pop
pop
ret
xchg
cmp
xchg
stos
sbb
pushf
xor
daa
mov
sarb
mov
in
std
cmp
mov
mov
sbb
sbb
pop
jno
cmpsb
xor
imul
mov
mov
sahf
cmp
jbe
test
xor
out
jmp
xor
test
roll
adc
stc
xchg
or
ret
mov
xor
jle
push
lods
or
mov
jae
xchg
mov
jno
add
les
fucomp
adcl
add
pusha
hlt
xchg
sbb
jns
std
adc
cwtl
stos
mov
outsb
scas
mov
sbb
pop
adc
stos
push
pop
xor
xchg
outsl
call
push
aaa
or
in
es
dec
sti
nop
xchg
xchg
mov
pop
add
loope
mov
cld
pop
out
mov
and
test
cltd
xor
sub
pusha
lock
dec
ja
fcoms
cltd
cmp
les
jmp
hlt
cltd
cmp
je
negb
cmc
iretw
test
mov
int
lds
in
mov
xor
pop
in
jmp
mov
movsb
ss
lods
mov
sub
cli
ret
clc
add
add
gs
shlb
xor
mov
sub
dec
add
jg
pop
push
mov
sti
movsl
xor
adc
stos
cs
daa
cmp
setb
call
push
push
mov
sub
xor
iret
mov
lret
mov
adcl
in
loopne
inc
dec
repnz
lret
int
mov
cmpsl
sub
repz
jg
sub
push
stos
repnz
mov
addb
pop
lcall
jp
push
mov
and
lods
pop
not
test
xchg
adc
insl
adc
pop
clc
imul
adc
pop
cltd
push
add
nop
dec
lcall
pop
jp
dec
call
mull
mov
iret
mov
sarl
pop
cltd
mov
push
mov
enter
jmp
shlb
in
lods
dec
or
mov
mov
mov
mov
sub
sub
mov
cmp
gs
mov
les
or
test
push
decb
xchg
popfw
dec
adc
ja
jmp
lret
roll
mov
xchg
out
imul
dec
or
xchg
push
loop
adc
pop
jge
sub
adc
daa
test
dec
mov
fiaddl
ret
jecxz
adc
ljmp
inc
push
or
andl
sbb
xor
out
add
fcmovnb
push
lds
xor
call
int3
or
adc
add
shrb
adc
lahf
ds
dec
dec
or
pop
pop
notl
lret
jp
or
pop
incb
loopne
out
mov
cs
fucom
jbe
lcall
lods
fisttps
push
jg
inc
adc
mov
xor
cmp
push
fs
push
jno
loop
mov
out
popa
repnz
std
cmp
pop
cli
push
add
add
js
adc
dec
arpl
xchg
int
mov
gs
mov
in
outsb
jns
inc
adc
pop
fdivrl
adcl
push
ret
xor
test
mov
rclb
stos
sub
gs
jg
jp
and
push
fs
or
adc
mov
dec
add
shr
sbb
cwtl
cmp
nop
pop
clc
mov
movsl
imul
jmp
dec
or
pop
sub
lea
xlat
cmpl
mov
and
inc
fistpll
add
cmpsl
mov
cmpsl
das
mov
mov
call
push
ja
mov
xchg
sub
repz
pop
fnstsw
dec
push
jecxz
cwtl
mov
lea
iret
scas
xor
add
dec
fsubp
mov
xlat
les
imul
movsb
fsubrs
pushf
mov
stos
lcall
mov
ljmp
stos
inc
mov
in
je
mov
mov
or
fstps
lret
mov
sub
stc
mov
outsl
cmc
outsl
push
rcll
int
mov
iret
lods
sub
mulb
lcall
jns
mov
pop
inc
mov
sbb
cld
fdivrl
xchg
xchg
jecxz
testl
and
daa
jmp
lea
movsb
sub
in
loope
cwtl
inc
push
lea
jp
cli
fisubrl
mov
rcrb
movb
fldl
sub
aas
imul
ljmp
xchg
xchg
jnp
dec
iret
cmp
mov
adc
jne
cwtl
cmp
pushf
cmp
andb
push
dec
or
jl
jmp
mov
or
ja
fcoml
rclb
out
push
or
xchg
aas
lret
push
jg
mov
jo
imul
mov
cmpl
push
mov
test
repz
or
pop
daa
lods
insb
or
shrl
inc
or
cmp
repz
lcall
or
push
enter
inc
push
dec
sahf
cmp
lods
lock
inc
adc
xchg
fsubl
roll
mov
push
mov
icebp
mov
imul
loop
orl
nop
inc
mov
pop
shl
mov
and
sub
push
add
xor
xchg
mov
mov
fistpll
cmp
xchg
pop
lahf
jb
rorl
xchg
jnp
nop
daa
push
pushf
adc
adc
mov
pop
push
inc
fnstenv
jp
xchg
or
add
adc
inc
callw
mov
mov
mov
iret
sbb
inc
adc
out
and
push
stc
pop
in
push
jbe
fstpt
push
leave
fwait
jge
fsubrl
int
mov
ja
mov
adc
pop
mov
lods
jp
lea
pushf
inc
adc
xchg
cmp
lea
shll
test
rol
xchg
aaa
adc
xor
adc
fwait
es
in
iret
xchg
push
cmp
mov
mov
sbb
push
lds
stos
push
xchg
ds
mov
xor
pop
push
int
pop
pop
sbb
push
jne
push
jmp
out
out
or
inc
add
and
lds
cmc
xchg
cmp
incb
leave
cmpsl
mov
movsb
push
mov
xchg
pusha
xchg
cmp
pusha
sbb
or
add
lds
in
sbb
sbb
loope
mov
cwtl
sub
xchg
int3
xchg
cmp
push
add
mov
mov
fimull
and
ret
xor
daa
outsb
hlt
dec
loop
inc
inc
pushf
inc
adc
cltd
lock
inc
adc
and
mov
push
int3
xchg
popfw
pop
mov
push
or
mov
jge
adc
clc
pop
and
mov
mov
xchg
gs
inc
adc
lods
mov
cwtl
psraw
pusha
pop
add
lods
imulb
test
loope
sub
orb
cwtl
imul
mov
mov
stos
cmpsb
sub
fiaddl
scas
inc
cmp
enter
loope
data16
aad
mov
push
mov
mov
mov
iret
lea
sub
rolb
jle
mov
pop
push
cltd
outsb
jmp
xchg
lea
inc
sbb
lret
rcrl
mov
int
lds
add
test
lcall
jnp
jecxz
pop
jae
push
xor
sub
dec
insl
jge
cmp
in
push
push
dec
inc
jp
cs
lahf
scas
daa
pusha
mov
pop
cli
ja
iret
xchg
push
or
data16
jns
pusha
adc
or
scas
dec
dec
pop
mov
movsl
push
out
pop
repnz
divl
cltd
cli
pop
jbe
mov
xchg
cmp
stc
push
ret
jl
pop
lods
xor
mov
jg
jbe
adcb
dec
or
addr16
std
mov
add
ffree
jecxz
sahf
add
test
ret
push
cmp
insb
push
inc
fcmove
nop
mov
mov
shl
jbe
mov
sbb
fisubl
sub
lds
mov
pop
adc
sbb
xchg
mov
sub
sahf
loopne
dec
lcall
push
or
enter
imul
repnz
mov
pop
and
sbb
sti
out
inc
jg
stc
mov
mov
or
pusha
mov
test
fs
jnp
jo
sub
add
les
mov
jae
cli
xor
mov
cmp
dec
or
pusha
adc
shlb
mov
mov
aaa
mov
aaa
sub
adc
call
xor
dec
adc
sarb
les
xor
imull
mov
lods
xchg
cmp
loopne
sbbl
cmc
pop
aam
cmpsb
sub
shl
fs
loope
mov
mov
pop
cli
and
mov
ds
or
aad
sub
pop
out
add
jno
cltd
js
xor
movsl
xor
sub
test
xor
xchg
or
push
out
imul
mov
inc
push
add
lahf
mov
jb
les
fwait
inc
jns
push
int3
mov
and
inc
cs
popaw
inc
inc
fnstenv
mov
popf
ljmp
pusha
mov
cmp
adc
push
out
jb
jae
pop
inc
cmp
jne
mov
mov
bswap
xchg
mov
data16
push
mov
ja
adcl
mov
lock
je
inc
xor
mov
sub
xchg
mov
mov
cmpsb
xor
push
push
jmp
div
xchg
push
mov
pusha
lret
jbe
cmc
jb
xchg
call
fiadds
outsl
lret
xchg
repz
mov
mov
stos
inc
or
aad
push
jno
xor
scas
dec
sub
fstps
or
xorb
cmpsl
flds
pop
mov
outsb
in
leave
outsl
ljmp
fisubrs
mov
add
jns
dec
mov
or
xor
push
montmul
cmpsb
test
jge
fldt
jle
leave
jb
and
sbb
or
and
push
test
xor
jle
push
cmp
dec
dec
ret
lahf
adc
sti
sbb
xchg
inc
addr16
lea
jge
pusha
dec
mov
es
mov
mov
fcompp
xorb
add
pop
xlat
jo
mov
add
insb
pop
sub
outsb
lcall
cs
pusha
icebp
cmpsl
dec
ja
test
mov
mov
je
lods
mov
jg
out
xor
inc
push
dec
ja
and
cltd
xchg
enter
add
jo
cmp
mov
xor
fsubl
test
sti
popa
ljmp
aas
movsb
in
data16
movsl
neg
sbb
gs
mov
mov
mov
xor
push
outsb
mov
mov
or
aad
pop
add
add
xchg
sbb
pusha
in
notb
mov
in
nop
xchg
sti
sbb
cs
xchg
inc
or
scas
jecxz,pn
nop
inc
xor
inc
rdmsr
sub
mov
sub
jae
stos
out
out
and
jns
mov
sub
mov
gs
aas
jnp
and
bound
or
int
ljmp
mov
sbb
movsb
repz
push
mov
enter
sbb
inc
sahf
stos
ss
les
rcrb
dec
add
lret
nop
push
sub
push
lret
ficompl
sub
add
sbb
mov
adc
add
sbb
jnp
push
add
cmp
outsl
inc
mov
ja
cmp
cmp
push
insb
ss
arpl
lcall
dec
or
or
sahf
cltd
sub
add
inc
dec
flds
stos
lahf
jns
daa
cltd
les
movsb
sub
mov
cmp
jge
lods
daa
shlb
daa
push
mov
mov
cmpsl
cs
aam
add
pusha
or
xchg
scas
xor
insl
mov
mov
mov
push
add
mov
push
shlb
mov
int
adc
cmpsl
xor
adc
imul
in
xchg
cli
in
push
dec
or
lahf
mov
mov
mov
mov
movsb
pop
mov
fidivs
lcall
xchg
mov
xchg
inc
cmp
mov
mov
push
lret
sti
sub
or
cltd
aas
xlat
lea
push
sub
inc
jmp
data16
dec
stc
mov
lods
jns
jo
cmp
and
lds
sarl
mov
dec
push
repnz
test
rorb
xorl
lock
ret
push
sub
sbb
mov
pop
mov
stos
mov
jge
mov
icebp
jge
sub
mov
jbe
xlat
scas
mov
or
mov
inc
lret
in
fwait
cld
pop
cmp
and
push
adc
pusha
cmc
push
ja
dec
stc
outsb
mov
roll
hlt
cmp
es
fs
fld
mov
jmp
dec
push
scas
cli
push
cli
xchg
mov
xchg
push
adc
xchg
and
inc
sbb
pop
ret
data16
adc
fs
lock
movsb
sahf
mov
shl
loop
xchg
stos
out
fwait
xchg
fdivrl
shll
mov
cmpsb
adc
dec
lret
jno
adc
fucomi
dec
or
and
outsb
in
push
cmp
pop
nop
push
push
adc
inc
adc
cmp
jb
mull
out
jne
jge
hlt
pop
rorl
test
xchg
mov
negb
mov
jg
mov
scas
std
add
scas
xor
cld
xchg
adc
ss
aaa
and
lret
lret
test
sub
mov
ds
or
and
mov
and
out
je
xor
idivb
mov
outsb
mov
les
jp
jno
loope
inc
or
testb
dec
and
fmuls
pop
or
mov
test
jbe
mov
movsb
ds
pop
lds
xchg
xchg
int
or
int3
add
repz
in
jmp
or
mov
mov
jbe
icebp
in
insb
cltd
jo
push
pop
ret
inc
pop
jne
loopne
xchg
xchg
cli
pushf
cmp
sbb
stos
sub
call
push
xchg
scas
dec
mov
xchg
xchg
inc
or
or
push
xchg
inc
clc
xchg
lret
gs
sbb
pop
cli
insb
push
mov
pop
loope
out
jns
ds
test
loopne
fdivl
call
divl
iret
imul
pop
mov
jle
sbb
jno
pop
shlb
mov
sbb
mov
and
inc
sbb
jbe
xchg
loop
pop
cwtl
jmp
lahf
popa
jmp
in
xchg
js
dec
xchg
int3
insb
jmp
shlb
enter
loope
sub
aad
or
push
adc
mov
outsb
xchg
and
dec
mov
cld
aaa
xchg
int3
mov
sub
pop
aas
adc
arpl
push
xchg
push
xlat
in
jbe
aaa
push
stc
mov
stos
test
cmp
push
cld
push
icebp
int
sbb
stos
sub
inc
popa
lock
mov
inc
test
cmp
sub
xchg
sub
in
pusha
testl
lret
bound
push
call
stc
cs
fdivrl
loope
sti
cmp
in
lahf
inc
shl
pusha
in
jl
ret
imul
rorl
pop
jno
mov
sti
or
leave
out
in
addr16
clc
xchg
inc
dec
mov
cwtl
xor
cmp
mov
rcll
cmp
scas
out
dec
sub
pop
stc
cmpsl
xor
adc
jmp
ja
and
stos
sub
sahf
cmp
mov
mov
test
jnp
xchg
inc
adc
lcall
dec
add
hlt
outsb
add
pop
jmp
and
sbb
pop
xchg
shrb
cli
bound
sub
icebp
cwtl
push
movb
fiadds
sub
out
add
sarb
lods
cmp
mov
stos
cmp
push
push
stc
test
out
or
xchg
scas
mov
into
call
add
cwtl
imull
sbb
loope
data16
ret
xchg
mov
nop
pop
shl
fs
mov
xorb
add
push
ja
icebp
arpl
popf
mov
push
push
dec
movsb
outsl
push
fcomps
aad
dec
and
pop
jae
sarl
scas
xor
iret
jne
cli
pop
ds
inc
adc
arpl
repnz
xchg
cld
push
imul
addr16
dec
repz
lahf
inc
adc
mov
fsubl
test
cltd
aas
insl
mov
jge
cmpl
push
rcrb
push
sti
sbb
out
faddl
jle
mov
imul
call
divb
ljmp
push
enter
push
in
jnp
xchg
inc
daa
push
ss
hlt
movsb
repnz
in
and
call
or
pop
mov
inc
push
inc
fisttpl
insl
xchg
add
test
mov
inc
or
out
push
mov
cltd
push
loop
pop
mov
orb
mov
cs
inc
or
cmp
mov
in
out
repnz
or
pop
das
mov
repz
mov
cmpsb
cmp
dec
dec
cltd
inc
rcrb
cmp
jo
sub
jge
mov
out
xchg
mov
in
adc
xchg
std
dec
or
mov
sub
adc
sti
pop
cmp
and
mov
jnp
mov
pop
data16
pop
adc
leave
mov
js
in
ja
jle
hlt
dec
or
pop
hlt
mov
xchg
sub
xchg
sbb
test
inc
std
pushw
lahf
inc
pop
jns
cmpsb
jnp
in
jbe
push
std
add
pop
add
pop
mov
mov
dec
dec
fidivs
aaa
pop
and
cmp
sub
mov
xchg
push
sti
fwait
inc
jg
loope
lock
xor
or
sub
and
sbb
mov
repz
scas
or
fbld
sub
add
and
mov
xlat
movsb
sub
lds
ds
push
clc
pop
sahf
xor
jl
and
aaa
push
xor
repnz
out
imul
sub
popa
scas
xor
pop
jg
push
push
rcll
pop
stc
adcl
cmp
fiadds
aam
push
mov
in
daa
mov
xchg
adc
xor
test
in
or
cwtl
pop
add
dec
lret
stos
lahf
iret
xchg
loopne
cmp
sbb
out
pop
nop
cmp
mov
lods
iret
xchg
or
pop
xchg
cmp
std
add
mov
in
orb
cmc
rcl
mov
or
shlb
push
add
loop
movl
pusha
ja
imull
test
in
mov
ret
mov
mov
ja
adc
mov
inc
adc
scas
scas
daa
mov
mov
test
xchg
iret
xchg
mov
dec
adc
ret
dec
and
sub
dec
int3
pop
add
popf
popf
inc
pop
xor
jne
mov
out
les
test
sbb
mov
movsb
sub
cmpsb
and
imul
pop
add
adc
mov
or
fiadds
jmp
test
std
pop
in
in
stos
xchg
divb
sub
outsl
dec
or
jmp
cmp
and
xchg
pop
aas
fwait
stos
into
stos
sub
mov
mov
loope
data16
enter
unpckhps
rcl
in
lods
xchg
push
outsl
call
shl
sub
sbb
montmul
cmpsb
inc
or
adc
pop
inc
pop
push
dec
sub
cs
iret
es
out
mov
pop
add
lds
dec
ja
push
lcall
ss
fildl
jle
mov
ficoms
mov
mov
mov
jecxz
jo
push
pop
adc
into
inc
or
outsl
cmp
jge
out
pop
push
dec
cmc
jbe
scas
popf
out
je
mov
addr16
mov
push
scas
jl
xchg
addb
push
jne
stos
sub
cltd
xor
xorl
test
mov
int3
movb
shlb
flds
sbbl
loop
cltd
inc
xchg
cmc
cmpsl
jp
test
insl
out
outsl
shll
or
adc
inc
xchg
cmp
pop
outsl
lock
pop
add
xchg
xor
pop
jg
xchg
popf
mov
test
lret
adc
cmp
ret
cmp
sub
dec
shll
cmpsb
sub
ror
lock
fildl
cmp
dec
out
adc
mov
ret
fdivrs
cmpsb
test
test
xchg
push
cmp
push
int3
es
xchg
adc
test
mov
movsl
hlt
push
inc
push
add
jnp
adcb
int3
sub
std
int
gs
dec
adc
pop
mov
out
pop
dec
out
jbe
lahf
add
aas
push
fldl
adc
mov
xchg
xor
and
loope
mov
push
cmc
nop
fs
and
mov
xchg
cmp
bound
adc
test
jb
mov
xchg
inc
jl
push
add
arpl
shrb
lcall
mov
sbb
jae
clc
popa
push
arpl
hlt
xor
fdivrl
and
lret
enter
inc
push
jne
or
pop
xchg
aaa
dec
out
mov
fwait
sarl
inc
test
rclb
std
add
fiaddl
cmc
popa
xchg
fs
xchg
int3
push
out
incl
movsl
jg
sub
cmp
daa
lods
pop
sub
push
lret
jp
out
dec
fwait
dec
adc
inc
sbb
subb
inc
cmp
or
cmp
lret
fdivr
inc
adc
or
adc
dec
push
mov
xchg
data16
aam
xchg
or
push
fcmove
xchg
outsl
enter
jg
jbe
popa
test
mov
insb
mov
lods
rorb
inc
pop
add
scas
add
push
sbb
addb
mov
cltd
and
sbb
jne
cmpsb
inc
lods
sub
cmp
lret
daa
pop
ret
xor
or
xor
enter
dec
adc
inc
test
mov
mov
mov
add
mov
dec
or
xlat
adc
sbb
xor
imul
idivl
js
stc
popa
fsubrs
mov
jge
jns
pop
imul
xchg
mov
dec
jmp
insl
aad
push
ja
std
aas
mov
aam
es
repz
mov
popa
clc
popa
rsqrtps
in
inc
or
mov
int
shlb
movsl
sub
jmp
popf
or
jns
daa
popa
xchg
cmp
xor
push
shr
mov
cmp
scas
rcr
adcl
inc
pop
cli
xor
data16
mov
cmp
and
stos
push
jne
jne
call
repnz
mov
pop
jno
cmpsb
ja
ret
data16
inc
notl
out
jno
in
fldcw
cmp
subb
mov
mov
mov
pop
cmpsb
mov
jp
addr16
push
rclb
mov
mov
nop
pop
jb
inc
add
fstpt
adc
xchg
iret
pop
fldt
or
push
in
imul
in
fdivrl
data16
mov
push
roll
test
notb
cmp
iret
psadbw
lds
int
movl
add
push
adcl
roll
xchg
clc
fstpt
into
xchg
inc
mov
cmpsb
cwtl
cmp
adcl
std
adc
cs
lret
xchg
push
dec
xchg
jo
jno
fnstcw
insb
cltd
cmp
dec
fdivl
sub
sub
xor
cmovo
out
xchg
inc
mov
test
or
fnsave
push
xchg
inc
push
aaa
int
popf
lea
in
xor
std
and
xor
in
or
js
out
mov
in
std
stos
adcb
cmp
cltd
outsl
sub
pop
in
jno
adc
lcall
xchg
xchg
cmp
icebp
pop
fldcw
jmp
subl
pop
fidivrl
shl
or
add
push
mov
jb
sub
jl
sti
insb
notb
push
lock
xchg
out
pusha
jmp
hlt
jge
or
filds
pop
cs
pop
clc
arpl
inc
add
lock
sbb
out
out
adc
cld
and
xlat
popf
inc
sub
pushf
xor
pop
mov
mov
jmp
rcl
imul
add
inc
pop
movsb
callw
repz
sti
add
callw
loope
xchg
fidivl
lcall
sbb
pop
pop
pushf
cmp
lret
ljmp
sub
ret
adc
cmpsb
sbb
scas
das
xchg
inc
adc
cmp
mov
out
insl
add
or
pop
pop
lret
mov
jp
dec
xchg
dec
pop
and
cmp
mov
push
gs
jo
cmpb
fsubrl
ljmp
mov
movsl
add
push
jbe
xchg
lods
add
mov
mov
and
out
orb
stos
inc
es
cmp
js,pn
pusha
stos
dec
and
scas
xor
ja
mov
jb
cmp
jp
xchg
sarb
je
imul
insb
fnstcw
sahf
pop
jno
mov
xchg
ror
negl
sub
or
sti
addr16
cmp
mov
fildll
rorb
movsb
add
jb
mov
stc
nop
notl
fadds
mov
popf
aaa
pop
xchg
mov
pop
mov
lds
jnp
popf
fs
jbe
mov
mov
adc
dec
scas
xorl
dec
xchg
push
jns
or
test
mov
push
cld
pop
outsl
into
xchg
jmp
cli
shlb
mov
add
and
xchg
iret
faddl
ljmp
stos
xor
mov
mov
xor
xor
scas
xor
inc
or
cwtl
negb
sti
pop
into
pushf
dec
adc
sub
push
stc
push
cmp
orb
repz
xor
call
std
xchg
cmp
lret
lahf
push
ljmp
jno
arpl
jecxz
je
cltd
insb
xlat
jnp
addb
sets
pop
pop
notb
je
pusha
mov
lods
jo
xor
fnstsw
ja
scas
push
pop
mov
lds
lcall
push
or
outsb
out
repz
mov
ror
cmc
and
pusha
jmp
test
mov
sub
inc
or
cmp
pop
mov
scas
es
out
dec
adc
mov
jg
or
mov
jge
xor
mov
dec
aam
scas
out
xchg
notb
clc
inc
push
mov
adc
test
mov
sub
cwtl
cmp
dec
pop
jmp
les
test
adc
mov
mov
divl
adc
dec
pop
adc
cwtl
cmp
ds
mov
adcb
rolb
subl
mov
pop
icebp
and
cmp
jp
jmp
cmc
inc
fsubl
imul
cli
mov
orl
in
outsl
mov
or
lahf
cmpsb
xchg
cmp
into
inc
or
push
std
clc
bound
mov
fstpl
sti
pop
jg
enter
orb
lds
iret
jne
and
sbb
jne
push
out
mov
push
mov
mov
fsub
mov
stc
push
fs
aaa
sbb
sbb
stos
mov
jl
mov
fwait
inc
push
fdivl
data16
mov
sbb
cmp
ss
pop
jge
fwait
push
jmp
mov
xor
in
jb
pop
add
push
ss
nop
daa
jb
fsubrs
xchg
scas
inc
lds
int3
arpl
adc
das
cmp
subl
lahf
mov
fbld
mov
daa
xor
dec
mov
jp
stc
mov
stos
inc
int
adcb
out
enter
sahf
xor
je
mov
fwait
rcr
jno
call
clc
push
cmp
imul
test
pop
cmc
mov
fidivrs
sbb
ljmp
jno
mov
rorl
or
hlt
mov
arpl
mov
xor
add
or
push
popa
daa
mov
movsl
mov
fsub
mov
clc
add
test
sbb
stos
mov
jl
std
mov
fwait
inc
push
fdivl
and
aad
inc
xlat
call
or
cmp
int
pop
jge
mov
fwait
xor
in
jb
push
add
daa
jno
fsubrs
xchg
scas
inc
les
int3
arpl
std
adc
cs
subl
or
rcr
es
xor
inc
mov
jns
stc
mov
stos
inc
int3
aad
pop
pop
out
enter
sahf
xor
jae
mov
fwait
jno
out
mov
push
cmp
push
push
lods
cmpsl
mov
mov
fnstsw
sbb
dec
xor
or
rorb
or
inc
inc
sub
mov
int3
arpl
mov
xor
decl
dec
out
pop
daa
mov
movsb
mov
fsub
lds
sti
xor
stos
inc
dec
push
sbbb
imul
popf
test
aaa
fidivrl
mov
pushf
inc
dec
fdivl
and
shll
sbb
cmp
int
pop
jle
lea
pushf
xor
ljmp
xor
nop
daa
outsl
push
fnstenv
nop
scas
inc
ret
mov
jecxz
arpl
aaa
ljmp
mov
lahf
mov
fsubl
mov
and
inc
lea
andl
lret
roll
pusha
pop
daa
sahf
xor
jb
mov
pushf
int
jno
in
mov
push
aaa
inc
fsubrs
pop
scas
movsl
mov
mov
fstpt
or
cs
xor
jb
popf
cmpl
outsb
push
adc
mov
int
xchg
jp
stos
stos
mov
xor
std
or
mov
dec
pop
sub
mov
ret
mov
cmc
add
xor
stos
inc
dec
push
sbbl
imul
cmp
mov
mov
popf
inc
dec
fnsave
and
xchg
lahf
sti
xchg
shll
mov
pop
popa
clc
cmp
jne
jg
mov
popf
xor
call
mov
sub
fidivl
mov
fsub
int
adc
push
lods
sub
xor
jge
or
iret
fisubl
mov
and
mov
mov
lods
inc
leave
roll
popa
sbb
ds
push
stos
xchg
push
popf
ret
jb
jecxz
mov
push
xor
sbb
mov
fnstcw
or
push
in
dec
sub
xor
jae
fwait
jg
push
mov
xchg
sub
rcr
outsl
add
mov
inc
and
into
gs
js
stos
test
lret
sti
or
mov
dec
pop
sub
mov
push
mov
rorl
xor
sbbl
push
mov
jg
idivl
sahf
inc
dec
fnsave
and
xchg
iret
mov
lock
aaa
inc
aaa
into
jae
adcb
xchg
push
in
lds
jae
sbb
mov
sub
jno
lea
xlat
loopne
fs
push
lods
sub
andb
lret
jl
or
into
fldenv
mov
and
and
scas
xchg
lods
inc
enter
add
lret
and
ss
cmp
mov
popf
ror
jb
loop
mov
push
xor
fldenv
sbb
mov
ss
fdivrs
or
push
in
inc
sub
lcall
sub
rcr
outsl
add
mov
inc
and
lea
into
gs
ja
stos
test
in
and
xor
cli
or
mov
dec
pop
sub
mov
push
lahf
lods
inc
rorb
das
adc
inc
inc
push
sbbl
addr16
mov
call
push
sub
pop
sahf
aas
dec
fnsave
and
xchg
into
mov
out
sbb
ss
aaa
into
jb
adcb
xchg
push
in
les
jae
pop
mov
sub
fidivl
mov
fs
push
lods
sub
jmp
gs
xor
jnp
or
int
daa
mov
and
inc
fcompl
and
scas
xchg
lods
inc
iret
sbbl
sbb
lahf
ss
cmp
jg
jbe
push
test
push
popf
ror
jb
loope
mov
dec
xor
fs
scas
mov
ret
repz
jle
or
pushf
xor
or
mov
fsubrs
push
mov
inc
and
lea
into
gs
jbe
stos
cmpsl
mov
and
xor
stc
pop
or
dec
pop
sub
mov
sahf
stos
inc
mov
gs
adc
andl
cmp
mov
mov
sahf
ds
fnsave
and
xchg
int
inc
out
sbb
xor
push
adcb
xchg
push
in
ret
test
jae
push
std
mov
sub
fidivl
mov
aad
int
adc
push
lods
sub
jmp
fs
xor
jp
or
int3
xlat
daa
mov
and
inc
fcompl
mov
lods
xchg
lods
inc
into
sbbl
sbb
lahf
ss
cmp
jg
jne
push
cmpsl
mov
popf
mov
loopne
mov
dec
xor
arpl
scas
mov
shll
repnz
jle
or
xor
jae
cwtl
jl
push
scas
mov
fsubrs
or
testb
jne
stos
cmpsb
mov
and
xor
clc
push
or
dec
pop
sub
mov
push
popf
stos
inc
mov
gs
sub
dec
sbbl
gs
mov
call
push
es
sahf
cmp
pop
and
xchg
int3
mov
in
sbb
xor
aaa
into
jo
adcb
xchg
push
in
ret
xor
adc
aaa
xchg
sub
fidivl
mov
aam
int
psadbw
lods
daa
xor
andb
lret
jns
or
lret
daa
mov
pop
sub
pop
inc
mov
lods
xchg
lods
inc
sbb
out
popa
sbb
mov
jg
je
push
cmpsb
mov
popf
mov
fisubs
nop
xchg
dec
xor
popa
outsb
sbb
mov
aaa
into
icebp
aam
adc
inc
daa
pushf
xor
je
xchg
jp
push
lods
mov
fsubrs
or
mov
iret
xchg
jae
lods
movsb
mov
test
lds
lret
or
xor
push
sub
xchg
pop
fwait
test
mov
data16
sub
lods
inc
inc
dec
test
jle
lret
bound
mov
sub
rclb
or
ja
es
lret
fcmovnu
jmp
mov
add
xor
sbbl
shlb
or
cli
mov
sub
mov
nop
rcr
into
gs
das
in
andl
int3
ja
or
leave
aam
mov
sbb
ds
es
fs
stos
xchg
lods
inc
ret
lret
sbbb
in
bound
pop
mov
subb
push
movsb
mov
sahf
mov
fsubl
xchg
dec
cs
ficompl
sbb
mov
cmp
out
sarb
add
push
out
inc
and
jne
xchg
js
push
stos
mov
sub
lret
fnstenv
or
push
pop
shlb
jno
lods
mov
ret
xor
hlt
add
ljmp
jno
cltd
cmpsb
dec
loopne
mov
addr16
sub
scas
inc
inc
dec
test
popa
int3
arpl
mov
and
or
mov
jne
daa
mov
enter
fucomp
sbb
xor
shrb
sbbl
mov
loopne
or
clc
mov
sub
xchg
nop
rcr
iret
data16
pop
scas
and
in
test
xor
mov
shrl
rolb
or
es
ficoms
outsb
js
cld
test
lret
cld
loop
bound
mov
andb
push
mov
fidivs
fisubl
xchg
dec
sub
ficompl
sbb
scas
mov
jg
add
pop
out
inc
and
or
test
xchg
sub
leave
fnstenv
or
dec
pop
shrl
outsl
push
lods
mov
shll
add
movsl
xor
push
ljmp
jno
xchg
movsl
dec
loope
mov
push
inc
ds
xchg
xchg
pushf
movsb
cmp
mov
and
push
or
je
daa
mov
stos
inc
call
arpl
cmp
shrl
sbb
mov
jbe
adc
mov
sub
xchg
nop
into
fnop
addr16
pop
scas
and
xor
mov
vcvtsi2ss
add
jno
sbb
es
ja
std
test
lods
inc
mov
loopne
bound
sbb
jmp
pop
mov
ret
fbstp
fsubs
xchg
dec
sub
pop
push
mov
jl
clc
lods
mov
jg
add
pop
lock
and
push
xchg
je
push
cmpsb
mov
sub
fnstenv
pop
mov
cmp
clc
dec
pop
shrb
insl
push
lods
sahf
lods
lock
mov
xor
push
ljmp
jno
xchg
movsb
dec
loop
mov
es
or
push
jnp
int3
arpl
mov
and
add
mov
je
daa
mov
test
call
arpl
sub
cmp
insb
dec
sbbl
mov
fbstp
adc
mov
sub
inc
xchg
nop
int3
push
pop
sub
xor
movsb
mov
push
ljmp
jno
pop
and
es
addr16
test
lods
inc
mov
fmulp
bound
sbb
jmp
pop
mov
ret
loopne
cmc
and
xchg
dec
sub
pop
push
mov
jp
clc
stos
mov
jg
decb
pop
icebp
aas
pop
sahf
xor
xchg
jb
push
movsb
mov
sub
testl
stc
nop
dec
pop
shrl
imul
pushf
lods
icebp
mov
mov
xor
push
jmp
push
sub
or
nop
daa
out
imul
cmp
push
jp
int
mov
jmp
loope
ret
pop
and
or
jae
sub
cmpsl
inc
fstp
out
mov
cli
fs
sub
cmp
imul
mov
mov
fidivs
adc
mov
sub
inc
fdivl
test
xchg
lret
fcom
push
push
sub
xchg
ss
jg
movsb
mov
push
jmp
shrl
ret
jb
push
and
loopne
aaa
nop
daa
imul
inc
mov
arpl
sbb
cmp
ljmp
orl
mov
loopne
hlt
aad
mov
dec
daa
inc
fistpl
sbb
stc
stos
mov
adcb
or
lahf
ss
pop
js
xchg
jno
push
mov
add
cli
xchg
dec
pop
shrl
push
scas
fwait
stos
icebp
mov
mov
das
andnps
inc
push
sub
or
mov
sub
hlt
imul
cmp
push
jns
into
lea
in
and
ret
pop
pop
add
mov
jb
sub
test
inc
out
mov
stc
gs
sub
cmp
push
sbbl
mov
mov
fnsave
pslld
sub
inc
fnsave
mov
mov
sti
xchg
lret
push
sbb
ds
into
outsl
jle
movsb
scas
nop
push
in
rcl
ret
jae
adc
ss
sub
addr16
cmpsb
mov
sbb
fmul
fs
sbb
popa
outsb
ret
orb
mov
loopne
repz
mov
inc
es
fcoml
sbb
cli
test
lret
cld
or
icebp
cmp
pop
js
nop
jo
push
mov
ret
fdivl
add
dec
ss
sti
xchg
dec
push
shrl
imul
mov
mov
cs
push
in
aas
dec
sub
or
mov
sub
repz
cmp
push
js
iret
data16
in
test
in
ret
pop
push
add
xor
loope
jno
sub
test
dec
in
mov
clc
data16
sub
cmp
imul
lock
fdivl
push
icebp
rclb
xchg
sub
inc
fidivs
xorl
leave
shrl
jmp
mov
sub
xchg
iret
outsb
jge
movsb
scas
push
in
ror
ret
je
adc
dec
loopne
xor
addr16
movsl
mov
sbb
fcmovne
gs
cs
andl
pop
lahf
orl
ja
shrl
mov
inc
and
sbb
sti
test
cmp
ljmp
icebp
cmp
mov
jg
mov
sub
hlt
add
xchg
inc
push
shrl
push
icebp
mov
mov
sub
dec
sub
or
mov
xchg
sub
repnz
cmp
push
ja
shlb
cwtl
movsl
cmp
lods
out
test
jmp
pop
sbb
loope,pt
jo
sub
adcl
loopne
in
mov
mull
sub
cmp
push
mov
mov
or
das
xchg
sub
inc
fbstp
xorb
enter
pop
ljmp
pop
cmp
shrb
or
out
mov
loopne
or
and
push
xor
jmp
xchg
or
movsl
cmp
sub
test
ret
pop
sahf
jg
mov
icebp
shrl
rolb
add
push
gs
mov
jne
cld
cmpsb
mov
shr
movl
cmp
adc
scas
xchg
loopne,pn
fidivs
add
xchg
inc
push
aam
xchg
mov
cmpsl
repnz
mov
adc
cmp
lds
jbe
sahf
dec
jecxz
mov
sub
lock
and
dec
ss
mov
jne
shrl
xchg
cmpsb
cmp
fsubr
les
decb
jns
push
sub
adcl
push
mov
cmc
addr16
es
test
xchg
mov
fnstcw
or
rcrl
xchg
sub
jae
mov
mov
std
xchg
rcl
imul
cmp
shrb
push
movsl
stos
mov
mov
fidivs
adc
dec
loop
xor
add
les
or
cmpsb
cmp
pop
imul
popf
jge
mov
lock
sub
add
add
push
fs
mov
jae
cld
movsb
mov
aam
lds
repz
mov
adc
cwtl
das
fistpll
mov
xor
std
xchg
inc
push
aad
test
xchg
cmpsb
repz
mov
shl
stc
adc
cmp
jl
jbe
lea
xchg
sub
out
imul
add
and
push
test
xchg
call
or
jp
dec
sub
jg
add
shl
pop
mov
repz
and
cmp
sbb
xchg
mov
mov
adc
in
rcrl
xchg
cs
aas
fbstp
jg
dec
mov
std
xchg
rcl
push
out
mov
es
mov
cmp
imul
out
mov
fdivl
push
push
dec
jecxz
das
xchg
sub
push
mov
ret
mov
cmc
aad
popw
pop
cmpsl
ds
sub
test
lds
or
out
int
sar
add
push
bound
mov
jno
std
mov
ret
test
cmc
push
pop
hlt
aaa
push
mov
adc
stos
cltd
xor
mov
mov
xor
xchg
inc
push
aad
andl
xchg
movsb
repz
mov
shl
notl
test
or
cmp
jp
ja
mov
xchg
sub
in
imul
add
jb
shrb
xchg
cmpsl
lds
lds
push
movsl
sub
jecxz
insb
dec
sub
jle
add
rcr
pop
mov
repnz
aam
inc
xchg
mov
movsb
cmp
jns
or
ret
sub
ja
jge
dec
scas
xchg
xchg
ret
rcl
push
in
mov
and
mov
cmp
push
mov
mov
or
cs
sub
push
mov
rorl
push
adc
out
test
lds
or
stos
mov
sub
std
push
add
dec
pusha
and
mov
ret
hlt
add
hlt
xor
push
jnp
mov
pop
lcall
ja
cld
mov
ud0
andl
mov
mov
shl
cmc
adc
cmp
js
js
mov
xchg
sub
sbb
mov
jo
shrl
xchg
cmpsl
ds
cmpsb
icebp
mov
in
pop
push
cli
sub
jecxz
push
sub
cwtl
mov
fstpl
mov
icebp
imul
mov
push
mov
mov
or
mov
rorl
inc
lret
xchg
dec
std
clc
lret
fwait
xor
decb
mov
sub
jo
imul
push
pusha
xchg
mov
fcompl
mov
jle
jg
mov
call
sbb
sub
pop
call
dec
add
pop
insl
mov
nop
fwait
jno
mov
sub
fidivrs
xor
orb
push
xchg
sbb
mov
jge
mov
dec
fwait
and
inc
lret
mov
in
mov
adc
xorb
std
push
lret
cmpsb
and
mov
inc
std
fisubrl
push
cltd
push
pop
sub
push
cld
xchg
mov
mov
lock
add
jp
jnp
and
xchg
icebp
stos
pop
xchg
ret
int3
xor
test
lret
mov
mov
mov
mov
test
into
hlt
imul
adc
fcmovnu
mov
std
push
xor
pop
adc
mov
mov
add
leave
jno
cs
scas
aas
sbb
and
lods
mov
outsl
cmc
lea
movsb
ret
mov
in
jge,pn
and
inc
jg
movsl
insb
dec
dec
aas
das
mov
inc
lds
popf
sbb
jne
and
sbb
clc
adc
mov
int3
mov
or
mov
testl
loope
sbb
and
cmp
push
jecxz
mov
je
outsb
dec
ja
jg
mov
imul
ficoml
lds
sub
fsin
mov
cltd
fstps
repnz
push
cwtl
lret
mov
or
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
out
sub
mov
inc
jno
cs
and
sbb
call
fisubrl
stos
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
jnp
push
mov
shl
jp
enter
loopne
pop
pop
es
lret
push
frstor
mov
add
int
int3
sbb
pop
movsb
mov
dec
adc
mov
adc
bound
inc
push
pop
jle
ret
xchg
add
loope
jge
push
fistl
loope
out
mov
lret
mov
popa
leave
push
nop
les
fisttps
into
dec
cld
pushf
es
outsb
cmp
pushf
test
lcall
add
stc
scas
sbb
in
es
in
call
dec
cmpl
jo
jp
mov
push
or
add
mov
pop
mov
loope
adc
icebp
addr16
and
nop
sub
cmp
jb
in
mov
shlb
insl
jno
into
xchg
nop
pop
jmp
add
adc
std
mov
and
int3
sbb
pop
jns
aam
iret
push
aas
es
cmp
cs
push
xchg
mov
mov
pushl
repnz
dec
jno
jbe
stos
mov
or
mov
and
xchg
mov
xchg
cs
call
xor
xchg
push
adc
adc
mov
outsl
lahf
mov
test
or
xchg
or
push
sub
sahf
push
jl
dec
insl
xchg
lods
bound
xor
jo
add
icebp
sub
xor
mov
pushf
les
daa
pop
and
jae
sti
fcompl
mov
mov
inc
mov
iret
lahf
xor
dec
lods
push
popa
xchg
mov
xor
and
dec
enter
in
add
lds
xor
mov
sub
push
mov
mov
dec
mov
stc
lret
test
mov
imul
call
xchg
xchg
xor
add
push
orb
shl
push
scas
mov
mov
popf
inc
or
