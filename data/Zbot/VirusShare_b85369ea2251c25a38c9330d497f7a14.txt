lcall
sbb
and
xchg
push
in
clc
repnz
movl
pop
push
cli
lcall
stos
ret
cmp
mov
pop
outsb
test
je
pusha
into
cwtl
jg
leave
or
call
jmp
fimuls
bnd
push
dec
fdiv
stos
cltd
fucomip
xchg
jmp
jecxz
and
int
jmp
and
pop
scas
jecxz
sbb
sti
rcll
pop
mov
push
pop
push
jnp
xor
addr16
ljmp
xchg
arpl
jb
sahf
mov
mov
sbb
ja
jg
push
enter
push
idivl
loop
hlt
in
nop
das
push
out
and
fidivrs
scas
xlat
xlat
cmp
pushl
fwait
pushf
std
jne
xchg
cmp
leave
inc
shl
jle
inc
push
jg
dec
addr16
mov
and
sbb
mov
pop
mov
fisttpl
jle
out
push
cmp
ficoms
inc
int
add
popaw
ret
sub
call
push
sbb
repnz
cmpsl
mov
jl
or
mov
cmp
adc
lcall
mov
adc
and
adc
sbb
inc
imul
mov
xor
addr16
incl
xor
cmpsb
stos
sahf
jmp
sbb
add
xchg
cltd
jg
push
adc
flds
call
out
xchg
call
loopne
addr16
mov
xor
daa
sub
fcomip
mov
sub
js
cs
ret
jae
add
lods
add
push
stos
sbb
decl
neg
jnp
mov
cmp
mov
or
xchg
fcoms
ljmp
leave
cmp
dec
fsts
into
and
push
daa
push
js
data16
notb
lea
or
cwtl
xrelease
test
add
mov
sub
incl
dec
sub
or
push
inc
incb
lret
cld
add
jae
shl
adc
lret
mov
adc
pop
or
outsb
sbb
sahf
and
stc
or
out
in
xor
jg
lcall
out
scas
dec
adc
scas
push
and
sub
ret
mov
mov
sbb
mov
decl
jo
xchg
call
add
cmc
or
sub
imul
lods
pusha
incl
or
pop
cmp
inc
dec
loopne
mov
add
mov
incl
dec
mov
cs
pop
sti
pop
jo
sbb
and
push
sti
cli
inc
push
mov
cmpsl
aad
stos
push
and
fdivrl
loop
sub
jae
or
and
pushl
shlb
pop
push
sub
adc
sbb
jmp
inc
enter
jl
negb
inc
rcl
out
iret
inc
into
outsl
mov
shll
and
dec
or
into
lret
std
decl
imul
aaa
adc
cs
dec
sbb
pushl
mov
xor
cmp
and
pop
cli
adc
sahf
aas
fidivs
fdivr
jg
ret
jmp
sbb
xor
sbbb
pop
inc
xchg
inc
jle
in
lret
fcomip
jmp
ds
scas
dec
sbb
adc
je
aaa
call
cs
xchg
lcall
push
fmul
push
cmp
jl
out
jge
roll
jl
or
inc
add
or
out
insb
in
jg
popl
imul
sbb
mov
jle
ss
outsb
testl
loopne
jp
mov
jl
outsb
into
cwtl
imul
push
inc
cltd
aam
decl
mov
out
inc
je
mov
dec
fidivrs
les
ror
icebp
enter
std
pop
mov
incb
inc
or
sub
imul
rcl
bound
jg
xchg
lods
cmp
jg
inc
xor
and
mov
sbb
inc
mov
mov
call
shlb
dec
xor
xor
fldt
sub
inc
enter
aaa
push
js
xor
in
loope
xlat
xchg
add
mov
sub
pop
mov
sti
incl
lods
xchg
in
std
xor
dec
shlb
cmp
push
lret
mov
push
js
and
mov
jg
xchg
imulb
pop
mov
and
and
xlat
cmp
jo
movsl
shrl
decl
lcall
inc
imul
test
das
mov
sub
aaa
mov
fs
dec
lods
int3
mov
pop
push
ja
leave
imul
outsb
shl
fmuls
mov
incl
cmp
hlt
shl
pushf
xor
insl
cmpb
pop
and
test
sbb
stos
fmul
and
pop
mov
jno
cmp
iret
pop
xchg
mov
lods
xchg
lods
push
sub
decl
shr
push
push
fstps
dec
or
xor
lret
dec
fsubs
rolb
rorb
mov
incl
das
mov
mov
add
sbb
sahf
push
sbb
jecxz
cwtl
js
enter
pop
lock
in
cmp
add
bound
cltd
cmp
sbb
call
insl
dec
cmpb
jnp
ljmp
lea
cmp
mov
sub
sbb
rolb
add
jne
ret
icebp
clc
or
sub
ljmp
jge
inc
lcall
enter
pop
sti
dec
sbb
test
mov
arpl
sbb
inc
mov
jmp
mov
add
xchg
add
and
dec
jb
ljmp
xchg
cmpsl
jno
out
xor
aas
cmpsb
fcmove
add
push
fdivrs
gs
cmp
ljmp
imulb
in
addr16
lret
jmp
call
lret
and
loop
sbb
mov
dec
add
hlt
scas
jae
dec
sbb
mov
out
jmp
mov
jne
inc
push
sub
shl
enter
call
inc
cmp
arpl
pop
cmp
xor
in
mov
sahf
and
dec
and
jmp
stc
cmp
js
cmp
nop
imul
mov
int
jno
movsb
push
decl
or
aad
jns
push
sbb
ja
adc
movsb
out
mov
lcall
clc
sbb
pop
mov
mov
xor
xchg
out
mov
lods
push
cwtl
es
mov
mov
rcll
push
cltd
int3
ss
aas
sarb
xadd
mov
sbb
sbb
cwtl
aam
push
push
xchg
jo
in
inc
jmp
fstps
and
test
cmpsl
ljmp
dec
sbb
jns
xor
cld
decl
cmp
movsl
pop
mov
imul
lret
int
mov
out
int3
fnstcw
jle
and
insb
push
fistpl
out
cmp
lret
or
imul
xchg
sbb
add
adc
push
sbb
gs
adc
in
movsb
push
inc
cmp
pop
lods
pushf
and
mov
cmp
fnstenv
xchg
pushl
fwait
and
lods
jl
jmp
insl
frstor
in
in
lods
out
fmuls
mov
scas
cltd
inc
rcl
hlt
loopne
sarb
cld
inc
les
lret
pop
hlt
mov
pop
push
sub
xchg
inc
pop
iret
xor
inc
mov
mov
lods
lcall
xor
jl
jg
das
push
xorb
or
sub
pusha
or
or
ds
popa
cmp
add
repz
dec
cmp
incl
pop
add
loop
cmpsb
adc
div
jb
dec
ds
stos
imul
push
flds
gs
lcall
adc
push
mulb
and
loop
movsl
cli
rcrb
repz
add
mov
ljmp
loope
and
imul
or
test
add
ljmp
pop
and
insl
jg
sub
mov
scas
add
shr
jmp
jmp
fdivrs
clc
test
pop
sub
insl
mov
xor
and
pop
ja
inc
jle
call
push
stc
cmc
dec
ja
les
nop
and
pop
dec
push
xor
ja
mov
fcoms
cs
mov
ds
out
ljmp
sbb
das
or
jle
dec
push
lods
cli
mov
stc
inc
pop
push
fprem1
jge
fldenv
add
cmc
out
or
aam
inc
idiv
mov
iret
es
and
mov
sahf
ss
xor
in
push
lock
repz
mov
push
pop
popa
ja
jne
sub
add
cmp
insl
push
in
ror
bswap
aaa
test
fnstsw
mov
int3
sub
lock
daa
adc
xchg
je
cld
shrb
adc
shl
iret
popf
loope
fwait
lcall
repz
jb
mov
cmp
mov
or
lcall
out
add
sbb
movsb
and
jp
je
in
jo
bound
cs
andl
inc
fimull
push
jno
jb
fldenv
xlat
mov
ds
icebp
bound
das
clc
mov
inc
sbb
xchg
scas
int
adc
mov
ljmp
sub
add
push
and
mov
dec
rorl
gs
xor
call
and
sbb
pop
out
out
add
in
les
sub
fists
ljmp
enter
inc
pop
ret
or
jp
inc
xor
addr16
jge
cmp
lcall
cmc
push
imul
lods
ret
mov
adc
fisubrl
jno
push
sub
adc
lds
and
pminub
inc
xchg
xchg
sbb
fnstenv
jmp
jmp
out
xchg
lods
pop
pop
push
popa
mulb
fildll
imul
mov
pushl
fldenv
or
jp
xor
pushf
sti
push
mov
ljmp
jae
dec
cli
cmpsl
add
jbe
sbb
push
push
add
out
jmp
xchg
sub
insl
loop
idivl
or
mov
movsb
jne
rol
ljmp
xor
mov
add
push
sub
repnz
dec
pop
das
push
imul
decl
push
push
les
jb
inc
and
incl
mov
fwait
popf
rcrb
jbe
mov
insl
aas
hlt
jmp
lahf
test
adc
push
rcrb
push
dec
add
fwait
cltd
push
rcl
pushl
stos
scas
icebp
lret
inc
loop
sbb
imul
loope
add
mov
lret
dec
mov
push
inc
hlt
inc
pop
cmpsb
add
or
mov
ss
sub
cmpl
in
mov
aad
lock
add
ret
jbe
jno
sbb
decl
into
popf
rcrb
aaa
jns
sub
inc
mov
dec
jmp
mov
jb
jl
out
cmp
dec
sti
aaa
aad
repnz
hlt
movsl
or
loopne
pop
mov
clc
push
lret
pop
jp
enter
lds
mov
sti
sbb
mov
xor
or
pop
leave
sbb
out
cmp
decl
in
pop
in
add
jb
sub
gs
je
in
xchg
add
mov
mov
cltd
push
mov
cld
jnp
inc
dec
push
xchg
dec
pop
sti
inc
data16
or
mov
lcall
xchg
cmp
add
call
jnp
and
or
lods
fadd
out
andl
xor
jmp
std
out
pop
loopne
add
push
add
jge
mov
sbb
lods
cmpsb
inc
enter
inc
imul
xchg
and
jb
adc
or
test
dec
pop
scas
rcr
ja
push
or
ss
test
outsl
test
hlt
mov
xlat
jl
sbb
cld
bound
insb
adc
fisttpl
or
testl
in
adc
or
add
xorl
cmp
scas
cs
fildl
push
outsl
sarb
cld
pop
jl
scas
mov
enter
and
clc
divl
in
jb
pop
pushf
push
loopne
and
pop
inc
push
dec
in
lahf
inc
pop
mov
adcl
aam
jge
lret
stc
repz
pop
mov
push
push
shll
xchg
incl
inc
inc
mov
aad
mov
pusha
mov
cmp
sarl
jg
imul
ret
out
mov
jmp
mov
shrl
sbb
sahf
or
pushl
sarb
ja
out
pop
sbb
cmp
fnsave
decl
jo
sbb
leave
pop
test
adc
lods
dec
or
int3
lahf
mov
imul
pop
fiaddl
movsl
xchg
test
loopne
mov
xlat
mov
push
xchg
sbb
inc
xor
ljmp
jb
lds
decl
les
fistl
push
jo
or
inc
es
je
push
jg
decl
xchg
mov
fs
adc
add
inc
int3
xor
subl
in
push
lock
in
out
hlt
xor
inc
xor
fcompl
pop
cmpsl
stos
ds
dec
dec
fucomi
loopne
std
cmpsl
xchg
adc
mov
inc
sub
sbb
hlt
sub
xchg
decl
stos
xchg
sbb
icebp
dec
shll
sub
ja
stc
cmp
jg
sbbl
add
mov
outsl
xchg
mov
inc
lods
push
into
push
pushl
aaa
xor
pop
sub
inc
inc
mov
insb
mov
and
cmc
addr16
or
aaa
ljmp
or
rol
mov
sub
movsl
pop
pop
cmp
xor
mov
test
iret
test
jg
in
push
shlb
decl
ljmp
lods
jnp
stc
xor
bound
pop
iret
cmp
mov
lret
push
push
call
sub
xchg
adc
mov
mov
cmp
jp
cmpsb
inc
das
test
cmp
cli
addl
push
mov
nop
mov
ljmp
mov
nop
push
imul
xor
ljmp
popa
inc
movsl
faddp
and
adc
loop
mov
mov
mov
mov
add
xchg
jmp
xor
pushf
cs
data16
pop
in
ljmp
xchg
lock
dec
imul
cmc
jl
or
push
cmpsb
jne
iret
dec
jl
lea
ja
fisubrl
jmp
popf
loopne
or
pop
cmp
cmp
cmp
sbb
inc
dec
dec
add
in
jmp
or
mov
xor
add
mov
mov
dec
cmpb
out
xor
popa
lahf
jl
sub
push
sbb
inc
adc
xor
sbb
dec
xor
out
jmp
adc
repnz
xchg
adc
sti
xchg
push
cmp
and
decb
mov
mov
shr
ds
sahf
mov
cli
push
icebp
rol
and
cld
ljmp
outsl
daa
lds
loop
test
or
push
sub
cs
dec
xchg
fdivp
fmull
call
xor
push
lods
sub
pop
daa
pop
push
int
mov
lret
mul
mov
decl
adc
sub
or
push
inc
pop
inc
xchg
inc
add
stos
jg
clc
mov
mov
outsb
rclb
xchg
loope
popa
xchg
popa
mov
imul
jbe
aad
fwait
push
scas
lcall
dec
insl
ret
mov
inc
push
dec
outsl
sbb
scas
jne
push
push
call
pop
fucomi
cmpb
aad
push
adc
mov
clc
daa
in
lods
sti
cmpsb
pushf
mov
scas
bound
mov
mov
cmp
inc
repz
aad
sub
test
lcall
in
pushl
std
dec
fdivrl
outsl
add
enter
loop
sbbb
push
sub
push
std
decl
push
push
std
push
add
pop
popf
sbb
mov
js
adc
jb
mov
jmp
jo
xchg
ja
xchg
das
pop
pop
fildll
andl
movl
decl
call
or
xor
jbe
fsubs
xchg
into
inc
lret
jmp
push
stos
or
fsubl
dec
cmp
mov
xchg
mov
pushl
xchg
incb
pusha
jb
pop
mov
mov
pop
test
inc
es
lcall
push
test
mov
loop
push
push
push
dec
ja
cmp
add
aas
rolb
aad
sub
pushf
mov
xor
ja
iret
dec
or
movsl
out
mov
mov
sbb
dec
fwait
shl
fisubl
xchg
je
dec
cmp
xor
shrl
ljmp
imull
sub
int
aaa
out
mov
sbb
pop
cmp
sub
jno
jae
iret
push
dec
pop
cmp
sub
inc
push
out
lret
cwtl
dec
movb
sub
lock
jnp,pn
pop
mov
pop
out
arpl
cmp
sub
cs
mov
adc
sbb
jo,pn
add
xor
cmpsb
sahf
aaa
int3
daa
test
dec
mov
adc
aaa
pusha
xchg
lcall
lock
popa
sbb
push
test
xlat
jmp
inc
xchg
mov
aam
jbe
sti
call
popf
dec
lcallw
lret
cmp
rorl
ret
leave
outsl
lret
lods
or
ljmp
clc
xor
inc
jae
xchg
lret
jmp
adc
sbb
mov
movsl
cmp
adc
xchg
data16
pushl
out
mov
cmp
xchg
ljmp
push
sbbb
and
fstl
ja
subl
cmp
pop
sbb
loop
cli
sub
sbb
jecxz
xor
mov
pop
repnz
dec
les
pop
jae
aam
mov
mov
or
arpl
lcall
jle
adc
loopne
pop
mov
cmp
inc
cs
fcomps
test
jge
call
out
incb
and
cmpsl
fisubl
inc
fwait
mov
pop
mov
fildll
push
ljmp
or
xchg
js
mov
dec
cmp
xor
and
add
or
dec
out
adc
push
icebp
mov
xor
ret
outsb
clc
pushl
pusha
ss
inc
aas
mov
daa
pop
xchg
mov
std
in
dec
fadds
inc
pop
dec
adc
ja
dec
push
mov
push
das
xchg
jp
mov
sahf
xlat
xchg
add
je
rcrl
mov
sbb
inc
sub
adc
jmp
mov
ss
push
cmp
and
gs
push
movsb
jg
jmp
adc
clc
xchg
add
orl
insl
xorl
jge
xchg
subl
pop
adcb
jmp
repnz
repz
adc
cmp
cmpsb
add
and
mov
jbe
cwtl
mov
lret
mov
or
addr16
push
roll
aam
fdivp
xor
ljmp
push
push
je
dec
notl
mov
fwait
xor
lret
mov
je
sub
rol
add
rorl
adc
mov
mov
mov
lcall
into
dec
add
outsb
jne
pop
push
mov
mov
andb
cmpsl
mov
push
ficoms
in
mov
mov
push
dec
mov
pop
out
out
data16
outsl
pop
jecxz
jmp
mov
mov
xchg
in
movsl
mov
pop
or
jae
stc
jg
test
out
dec
enter
push
push
fsubrs
int
movsl
mov
or
mov
push
push
sub
les
lret
mov
rsm
cmpsl
les
out
ret
sbb
cltd
test
outsl
cli
push
ret
sbb
repnz
movsl
test
cltd
movsl
mov
fstl
add
call
orb
stos
lahf
pusha
mov
cmc
les
icebp
mov
cwtl
les
cwtl
jl
and
loop
dec
fisubs
mov
enter
mov
mov
out
jle
xor
sub
mov
mov
or
mov
mov
add
and
add
mov
mov
repz
inc
sub
sub
mov
lahf
lods
das
dec
fstp
out
out
mov
mov
cltd
inc
mov
mov
fincstp
lea
jge
mov
pop
std
imul
imul
inc
or
fldenv
fisttps
dec
pop
pop
addr16
std
mov
jge
add
push
and
mov
jle
decb
test
orl
sub
xchg
iret
jbe
xor
movsb
pop
out
ds
shll
loope
out
adc
add
cmp
orl
jne
xchg
orl
mov
dec
xor
out
xchg
fwait
loope
push
aam
mov
xchg
ud0
mov
adc
jnp
mov
loop
gs
daa
push
addr16
repz
push
xor
nop
push
push
into
in
addr16
xchg
shll
mul
nop
mov
cmp
sti
addr16
in
xor
flds
adc
mov
mov
jmp
repnz
mov
push
shl
into
icebp
xlat
leave
adc
xor
scas
aaa
jmp
daa
xchg
push
cmp
mov
jmp
dec
xchg
leave
mov
out
jb
mov
xchg
jb
push
sub
jmp
pop
sub
inc
xchg
add
xchg
add
testb
jl
pop
movsb
ret
call
fmull
je
sub
xchg
andl
outsl
push
sbb
daa
xchg
xchg
and
dec
cmp
arpl
sti
orl
mov
lret
add
in
pop
repnz
adc
in
vpmulhuw
mov
jmp
cmp
mov
repnz
xor
out
adc
pop
cmc
or
lcall
inc
sub
mov
aad
test
repz
jle
in
out
pop
imul
jp
loopne
pop
fs
xchg
push
lock
jne
pop
inc
enter
incl
insl
sub
loopne
movsl
imul
mov
mulb
sti
mov
outsl
mov
sbb
das
rorb
aaa
sbb
iret
fidivs
or
jmp
scas
into
cli
lods
jns
inc
mov
lret
sbb
negl
mov
call
outsb
ud0
in
pop
cmp
mov
cltd
in
cld
mov
cmp
inc
cmp
and
ficoml
call
pop
sub
clc
popa
popf
movsb
mov
imul
xchg
sub
adc
arpl
sbb
add
lcall
stc
adc
mov
aaa
enter
call
adc
insl
dec
push
fildl
jmp
jae
push
pop
jp
stos
fsubs
cmp
pop
cmp
xor
push
and
xchg
adc
test
cltd
enter
addr16
divl
fsubr
and
xor
or
mov
ficomps
adc
mov
iret
pop
sbb
adc
loope
outsb
sar
lcall
push
data16
scas
push
dec
mov
or
cs
pop
and
fiadds
jmp
lcall
mov
xchg
ja
mov
push
pop
jmp
xor
and
mov
sub
mov
cmp
jnp
icebp
push
shll
jl
cmp
push
enter
pushl
or
jge
jp
inc
adc
cwtl
lds
xor
xchg
or
jmp
xor
inc
xor
iret
daa
push
xchg
jecxz
lods
xchg
xor
jno
push
pop
add
sbb
hlt
aas
outsl
shr
mov
ret
xor
fcomps
push
bound
and
xchg
in
lcall
xchg
cmp
in
or
jns
mov
xchg
les
lds
jmp
out
insb
xchg
imul
fstps
mov
pop
pusha
sbb
cmp
call
iret
xor
adc
insl
clc
or
push
adcb
cmp
pop
leave
pop
xor
cmp
xor
imul
pop
mov
mov
add
fnsave
dec
mov
adc
ljmp
push
ja
lahf
test
iret
jge
test
push
xchg
sub
int
into
or
stos
jne
cmp
mov
xchg
pop
jecxz
pop
jne
fcompl
pop
xor
cs
addr16
shlb
leave
cwtl
and
cmp
repz
push
xorl
cli
inc
and
outsb
stc
out
ret
insl
inc
or
pop
jl
sbb
push
imul
adc
call
inc
sub
inc
xor
dec
lcall
insb
aad
loopne
mov
std
pop
add
sbb
push
scas
or
int3
push
xor
ljmp
in
adc
mov
cmpb
popf
mov
cmpsl
inc
std
sub
adc
add
push
fwait
and
push
adc
pop
sub
or
inc
int3
insl
test
sbb
jmp
sbb
xchg
test
imul
or
lea
inc
testb
repz
and
decl
adc
pop
outsb
out
repnz
cmp
insb
sar
decl
imul
xchg
pushf
popf
cmpxchg
or
adc
sbb
add
sub
lcall
dec
mov
xorb
int
in
ljmp
gs
mov
std
insl
push
mov
daa
decl
xor
jle
fmuls
or
jmp
mov
add
aaa
cld
incl
loopne
idivb
arpl
fwait
int3
pop
cs
xor
fsubrl
add
mov
xchg
jae
int3
insb
xlat
and
pop
push
xchg
or
inc
add
add
leave
push
jns
in
or
shll
nop
dec
in
sub
xor
call
sbb
fsubrs
or
and
into
mov
cmp
pop
push
testb
call
mov
push
mov
sub
sti
sub
daa
shl
imul
mov
inc
out
test
decl
std
hlt
sbbl
cmp
jg
movsb
notb
jnp
push
ret
xchg
xor
add
lcall
inc
int3
push
or
popa
push
or
mov
cli
cmc
jbe
fidivrs
xchg
push
data16
hlt
xchg
cmc
data16
add
hlt
incl
in
jnp
pop
or
je
stos
daa
aaa
xor
sub
mov
fbstp
push
push
andb
push
and
sub
mov
call
enter
pop
cs
stos
jecxz
adc
cltd
xor
jo
and
sbb
in
jge
pushl
jo
orb
jbe
jae
clc
addb
jae
movsl
mov
stos
and
sbb
cmp
into
lret
lock
pushl
ficoms
jg
jae
popf
stos
movsb
sub
enter
sbb
sbb
out
xchg
and
test
fsubp
xchg
push
jnp
pop
addb
mov
inc
inc
or
ljmp
addr16
sub
leave
push
fistl
imulb
push
push
ss
fldcw
out
sbb
adc
pushl
pop
sti
xchg
jg
dec
xor
ret
push
mov
lods
pop
cmp
push
add
xchg
enter
loop
lods
lcall
dec
hlt
stc
fsubrl
pop
xor
sahf
xchg
int3
push
mov
lds
fists
inc
xchg
sbb
sbb
lcall
loopne
push
mov
hlt
mov
mov
add
add
mov
mov
push
loop
adc
adc
push
push
test
fbld
lds
je
jge
jbe
push
and
push
sub
sti
mov
ret
inc
push
mov
jl
xor
mov
out
fwait
sub
cmp
sti
imul
ficompl
std
pop
or
out
jb
imul
lea
shll
movsb
fwait
cmp
fisttps
sub
pop
xchg
shll
cmp
fistl
add
mov
pop
cmp
pop
dec
nop
pop
daa
leave
sti
and
adc
fcomps
mov
mov
fsts
or
pop
mov
insb
pop
stos
pop
test
imul
jge
jmp
and
scas
and
aad
jmp
pusha
mov
adc
cmp
add
push
stc
push
xchg
push
add
imul
rcll
rclb
mov
mov
gs
leave
xor
and
jmp
sub
sub
dec
pop
push
pop
popf
jge
mov
arpl
addr16
adc
repz
popa
sub
int
pusha
in
cmp
pop
and
mov
pop
sub
andb
xor
ret
cmp
repnz
and
insl
jne
and
sub
and
pop
aas
mov
and
xchg
scas
jns
iret
and
dec
or
lds
roll
shll
mov
inc
ss
pop
mov
lods
lods
mov
jae
jbe
and
enter
pop
popa
push
mov
fistl
xchg
subl
lret
or
mov
pop
inc
push
pop
arpl
pop
sbb
mov
adc
leave
ret
or
pushl
jbe
inc
loop
gs
outsb
aaa
push
sbb
xor
loope
cli
push
sbb
and
cmp
call
pushl
sbb
andl
stc
inc
push
rorb
push
jg
sub
aad
leave
push
pushl
imul
sub
pop
pushf
sub
cmpb
mov
decl
aaa
and
idivb
inc
insb
sub
sbb
out
mov
sbb
and
jp
cwtl
in
out
outsl
ljmp
das
and
sub
adc
cwtl
cmpsb
and
xchg
lods
fdivr
pushl
xor
ljmp
push
fnstcw
xor
lea
mov
jbe
jno
ljmp
stc
lock
or
out
dec
push
scas
sbb
push
lret
enter
mov
pushl
cmpb
xchg
cmp
popa
call
jle
sbb
mov
ljmp
and
js
mov
jbe
data16
push
out
clc
insl
jge
popf
push
pop
xor
ljmp
and
xchg
xor
test
cld
cmp
call
hlt
daa
cmpsl
adc
jecxz
out
cmp
shll
dec
mov
mov
jo
push
es
stos
sti
xchg
xor
ljmp
mov
inc
cmp
sub
push
mov
leave
mov
std
dec
ret
sub
push
dec
mov
pop
incl
enter
mov
scas
or
aas
jnp
push
and
jae
std
lds
push
sbb
dec
jne
mov
inc
mov
pop
leave
fwait
mov
lret
pop
les
mov
jne
mov
jle
out
lcall
jmp
push
xor
ror
cs
jmp
xor
testl
outsl
mov
xchg
xor
dec
les
pop
iret
pop
dec
mov
mov
ja
pushf
fnsave
outsl
pop
sbb
cmp
lock
lret
ret
jmp
dec
adc
push
pusha
bnd
and
dec
lret
int3
cwtl
bound
push
ds
arpl
call
cld
sub
movsb
push
nop
imul
add
roll
stos
gs
pop
outsl
clc
call
xor
mov
pop
sbb
jns
push
enter
repnz
or
fnsave
imul
in
xor
jecxz
in
dec
cld
inc
rorl
jecxz
mov
mov
ss
jns
push
xchg
cmp
jns
mov
ss
daa
xor
pushf
mov
ljmp
jl
loop
mov
mov
and
es
test
bound
xlat
popa
jl
aad
arpl
sub
add
adc
pusha
imul
jmp
andb
adc
mov
cmp
add
int
sbb
imul
jg
jl
pusha
push
icebp
out
dec
jl
outsl
or
enter
mov
adc
call
pop
lea
cmp
int3
pop
jecxz
ret
shrl
lcall
fdivl
xchg
or
stos
mov
jmp
sarl
pop
xchg
sub
inc
jo
outsl
clc
fdivrs
push
shlb
idiv
fistpll
pop
add
sbb
fwait
leave
addr16
ljmp
mov
or
jmp
xor
mov
mov
decl
ljmp
jno
jg
mov
fstp
stc
loop
push
aas
lods
call
ljmp
add
gs
pop
lock
loope
scas
ret
jmp
xlat
outsb
jno
and
cltd
das
daa
fsubr
cmp
loopne
adcl
pop
sti
dec
and
iret
mov
clc
jg
jmp
mov
adc
dec
lds
xchg
loopne
push
pushf
std
sub
lcall
pop
push
jno
xchg
cvtdq2ps
pop
jae
xor
push
mov
mov
loope
ljmp
loope
insb
inc
mov
lahf
hlt
jno
mov
xchg
sahf
pop
and
mov
shl
jle
and
sti
xchg
mov
iret
loopne
push
lcall
fdiv
inc
ret
inc
cmc
cld
add
aam
sahf
insl
pop
inc
data16
sar
decl
orb
aas
enter
push
jg
pop
dec
pop
test
push
sbb
sbb
lcall
cmp
frstor
sub
loop
pop
rorl
mov
cwtl
fstpl
frstor
and
rclb
sbb
xor
lcall
daa
lock
incl
ds
stos
out
frstor
cmp
sub
fimuls
push
mov
inc
push
dec
add
or
adc
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
push
jmp
mov
and
xchg
push
in
clc
repnz
inc
loop
add
sahf
push
aad
push
cli
stos
ret
cmp
mov
pop
outsb
test
incl
inc
je
pusha
into
cwtl
jg
leave
or
jmp
fimuls
bnd
push
dec
fdiv
stos
lcall
sbb
stc
and
int
and
pop
scas
jecxz
sbb
sti
rcll
jmp
pop
mov
push
pop
push
jnp
xor
sub
mov
sahf
mov
mov
sbb
ja
jg
push
enter
mov
sub
in
nop
das
push
out
jg
cli
fidivrs
scas
xlat
xlat
cmp
pushf
std
jne
xchg
cmp
leave
inc
shl
jle
inc
call
jg
dec
addr16
mov
and
sbb
inc
pop
mov
fisttpl
jle
out
push
cmp
in
push
cmpsl
inc
int
mov
xchg
sub
mov
repnz
cmpsl
mov
jl
decl
mov
cmp
adc
mov
adc
and
adc
sbb
incl
inc
imul
mov
xor
addr16
cltd
xor
cmpsb
stos
sahf
jmp
sbb
add
decl
cltd
jg
push
adc
flds
push
push
out
xchg
call
loopne
addr16
outsl
clc
jmp
xor
daa
sub
sub
js
cs
inc
call
sub
sbbl
out
pop
xchg
mov
cmp
jmp
or
xchg
fcoms
lods
inc
ret
leave
cmp
dec
fsts
xchg
push
and
into
and
push
daa
push
js
data16
notb
push
or
cwtl
xrelease
push
test
add
mov
sub
sub
or
push
inc
incb
dec
cld
add
jae
shl
adc
lret
mov
fsts
or
outsb
sbb
sahf
and
decl
out
in
xor
jg
sbb
mov
xor
push
and
incl
sub
ret
mov
mov
sbb
sti
imul
call
add
cmc
ret
fisttpl
dec
inc
sub
imul
lods
pusha
mulb
int
pop
cmp
jg
inc
dec
loopne
mov
add
mov
movsb
mov
pop
cs
pushl
jo
sbb
and
push
sti
cli
inc
push
mov
cmpsl
aad
stos
push
jmp
fdivrl
loop
sub
jae
or
and
shlb
pop
push
sub
adc
sbb
incl
jmp
inc
enter
jl
negb
out
iret
inc
into
outsl
mov
call
movsl
movsb
imul
lret
jb
cmp
imul
aaa
adc
cmp
dec
sbb
mov
xor
cmp
ret
dec
mov
and
pop
cli
adc
sahf
aas
fidivs
fadd
jmp
sbb
clc
pushl
sbbb
pop
inc
xchg
inc
jle
in
lret
and
in
scas
dec
sbb
ljmp
jge
je
aaa
call
cs
xchg
push
mov
fmul
push
cmp
jl
out
jge
sar
decl
aam
mov
sbb
ret
inc
add
and
insb
in
jg
popl
imul
jmp
xor
push
divl
jb
outsb
testl
mov
jl
outsb
into
fcos
decl
cwtl
imul
push
inc
cltd
aam
push
out
or
xchg
je
mov
incl
fidivrs
les
ror
icebp
enter
std
pop
jp
andb
inc
or
sub
imul
jmp
shrl
bound
jg
xchg
lods
cmp
mov
cmp
mov
mov
sbb
inc
mov
mov
cld
nop
shlb
dec
xor
ljmp
divb
fldt
sub
enter
aaa
push
js
xor
in
loope
xlat
xchg
add
mov
sub
pop
mov
add
std
xor
dec
shlb
cmp
mov
mov
push
js
and
mov
imulb
pop
mov
and
dec
imul
cmp
jo
movsl
shrl
les
mov
jbe
stos
jmp
je
or
es
sub
aaa
mov
fs
dec
lods
int3
mov
pop
push
ja
leave
imul
jg
ljmp
fmuls
mov
jne
hlt
shl
pushf
xor
insl
call
pop
and
test
sbb
pop
pop
mov
jno
cmp
iret
pop
xchg
mov
lods
xchg
lods
push
sub
shr
push
push
fstps
decl
in
xor
lret
dec
fsubs
rolb
rorb
mov
das
mov
mov
add
sbb
out
clc
jmp
push
sbb
jecxz
cwtl
js
enter
sub
mov
push
xchg
add
ljmp
bound
cltd
cmp
sbb
insl
dec
cmpb
jnp
ljmp
mov
lea
sarb
mov
push
sbb
rolb
add
pushl
ret
icebp
clc
or
sub
hlt
inc
sbb
jge
inc
lcall
fcomip
sub
pop
sti
dec
sbb
test
sub
loope
les
mov
jmp
lcall
mov
add
xchg
add
and
dec
jb
xchg
xchg
cmpsl
jno
out
xor
aas
cmpsb
pop
cld
dec
add
push
fdivrs
gs
xor
pop
repz
lret
incl
jmp
call
lret
and
loop
sbb
mov
add
hlt
scas
jae
dec
sbb
mov
ljmp
ret
mov
jne
inc
push
sub
shl
enter
cmp
arpl
pop
cmp
xor
call
adc
in
mov
sahf
and
dec
and
mov
stc
cmp
js
cmp
nop
imul
push
loope
push
push
mov
int
jno
movsb
push
test
or
aad
jg
dec
push
sbb
ja
adc
movsb
out
mov
clc
sbb
pop
mov
mov
xor
xchg
out
fcomip
decl
cwtl
es
mov
push
rcll
push
cltd
int3
ss
fcomip
pop
lock
sarb
xadd
dec
or
sbb
sbb
lcall
aas
insl
cwtl
aam
push
push
xchg
jo
in
inc
jmp
fstps
and
test
cmpsl
ljmp
dec
sbb
jns
xor
or
movsl
pop
mov
imul
call
xchg
xor
or
dec
mov
out
int3
jle
and
insb
push
lcall
pop
out
cmp
lret
or
imul
inc
ljmp
adc
call
pop
push
lods
gs
adc
in
movsb
push
inc
cmp
pop
lods
pushf
and
mov
cmp
fnstenv
xchg
fwait
and
lods
jl
jmp
clc
lcall
jae
in
in
lods
out
fmuls
cmc
scas
cltd
inc
rcl
das
cli
hlt
loopne
sarb
cld
inc
les
lret
sub
mov
scas
ljmp
xchg
inc
pop
iret
xor
inc
mov
mov
lods
fbstp
jl
jg
ljmp
decl
lret
mov
or
sub
pusha
or
or
ds
popa
cmp
lcall
repz
dec
cmp
pop
add
loop
cmpsb
adc
div
jb
scas
decl
stos
imul
push
flds
gs
adc
push
mulb
and
push
loop
movsl
cli
rcrb
repz
add
mov
loope
and
imul
or
push
ret
add
inc
and
lds
jg
cli
sub
mov
scas
add
shr
jmp
fdivrs
clc
test
lcall
call
xor
and
pop
ja
inc
jle
pop
push
stc
cmc
dec
ja
les
dec
pop
nop
and
pop
dec
push
xor
ja
mov
fcoms
cs
mov
ds
out
ljmp
sbb
das
or
jle
dec
push
lods
cli
mov
stc
inc
pop
push
fprem1
jge
fcos
jmp
add
cmc
out
or
aam
inc
idivl
iret
es
and
mov
sahf
ss
call
xor
in
push
lock
repz
fsts
popa
ja
jne
sub
fcomip
repz
test
cmc
in
ror
bswap
aaa
test
fnstsw
mov
mov
lock
daa
adc
xchg
je
shrb
adc
shl
iret
popf
loope
fwait
lcall
fstpl
and
cmp
mov
or
out
add
sbb
movsb
and
jp
je
jmp
divl
bound
cs
andl
inc
fimull
push
jno
jb
fldenv
pop
cld
call
mov
ds
icebp
bound
sbb
inc
sbb
call
loopne
xchg
scas
int
adc
mov
sub
add
push
and
mov
and
loop
rorl
gs
xor
xchg
push
pushf
jp
and
sbb
pop
out
ljmp
out
add
in
les
sub
fists
push
enter
inc
pop
ret
or
jp
incl
idiv
addr16
jge
cmp
pop
out
push
imul
lods
ret
mov
incl
fisubrl
jno
repnz
adc
lds
and
paddb
fisubrl
inc
xchg
xchg
sbb
fnstenv
jmp
mov
pop
pop
push
popa
idiv
pushl
fildll
imul
fldenv
or
jp
xor
xor
sti
push
mov
scas
out
stc
add
dec
cli
cmpsl
add
pushl
sbb
push
push
add
out
cmpsb
ljmp
insb
lret
cmpsb
dec
insl
loop
cld
push
jnp
or
mov
movsb
jne
rol
push
mov
mov
add
push
sub
call
repnz
dec
pop
das
push
mov
pushf
test
ret
les
cld
cmp
pop
lret
mov
fwait
popf
rcrb
jg
jbe
mov
insl
aas
hlt
and
lahf
test
adc
call
popf
adc
fcompl
shlb
stos
scas
icebp
lret
inc
loop
sbb
imul
lcall
jmp
popf
add
mov
lret
dec
mov
pop
cmpsb
add
or
mov
ss
mov
call
sub
cmpl
in
mov
aad
fisttpl
clc
ret
ljmp
clc
jbe
jno
sbb
dec
mov
popf
rcrb
aaa
jns
sub
incl
and
pop
stos
dec
jmp
mov
jb
jl
out
cmp
dec
sti
aaa
aad
repnz
decb
movsl
or
loopne
pop
mov
lret
pop
jp
enter
lds
mov
jg
movsl
sar
sbb
lea
adc
or
pop
into
adc
leave
sbb
out
cmp
cld
mov
in
add
incl
jb
sub
gs
je
in
xchg
add
cmp
push
mov
cld
jnp
inc
dec
push
xchg
dec
pop
sti
inc
data16
or
mov
xchg
cmp
add
call
jnp
out
cli
jmp
or
lods
fadd
out
andl
xor
jmp
std
out
pop
loopne
add
push
add
jge
mov
sbb
lods
cmpsb
inc
enter
dec
ficoms
adc
or
popf
fs
or
rcr
ja
stos
ss
jg
dec
and
shl
xlat
jl
sbb
adc
fisttpl
or
idivl
incl
xor
movsb
pop
in
adc
or
xorl
ja
add
shrb
es
sarb
pushl
pop
jl
scas
mov
enter
and
divl
in
jb
pop
pushf
push
loopne
and
pushl
fstl
inc
push
dec
in
lahf
inc
pop
mov
adcl
lret
stc
repz
pop
mov
fldt
sub
loop
inc
shll
xchg
lds
inc
inc
mov
aad
mov
mov
sbb
cmp
sarl
xor
pop
push
adc
ret
out
mov
jmp
mov
shrl
sbb
sahf
or
sarb
ja
out
lcall
sbb
cmp
fnsave
cmp
fwait
nop
add
leave
pop
test
adc
jg
lret
lods
dec
or
int3
lahf
mov
imul
lahf
or
movsl
xchg
test
loopne
mov
lcall
mov
xchg
sbb
inc
xor
push
fadd
loope
getsec
inc
jmp
lds
xchg
mov
les
fistl
push
decl
pushf
jo
or
inc
es
je
push
or
xchg
mov
fs
adc
mov
and
inc
int3
xor
subl
in
out
hlt
xor
inc
xor
xchg
addr16
fcompl
pop
cmpsl
stos
ds
xchg
std
cmpsl
xchg
adc
decl
mov
inc
sub
sbb
hlt
sub
xchg
mov
xchg
sbb
icebp
dec
shll
jmp
call
leave
jg
sbbl
lcall
mov
es
icebp
push
lods
push
into
push
mov
shrb
aaa
xor
pop
sub
inc
inc
mov
jmp
and
cmc
addr16
or
aaa
sub
or
rol
mov
mov
pop
xchg
mov
cmp
xor
mov
pusha
adc
dec
jg
ljmp
in
push
shlb
sub
int3
or
bound
pop
iret
sti
incl
dec
cmpsb
and
ret
adc
xor
xchg
adc
mov
jg
push
mov
cmp
jp
cmpsb
inc
das
test
int
cli
addl
das
ljmp
mov
nop
mov
fstpt
sahf
mov
lcall
mov
sbb
cmpsb
rorb
fisubrs
popa
inc
movsl
faddp
and
adc
decl
or
xor
dec
add
xchg
fs
pop
xor
pushf
cs
data16
ficomps
ljmp
xchg
lock
dec
imul
mov
jne
iret
ljmp
mov
ja
fisubrl
dec
or
pop
cmp
cmp
loopne
jae
cmp
sbb
inc
dec
dec
add
cmpsb
push
mov
nop
jns
xor
push
incl
subl
xor
jp
out
xor
popa
lahf
jl
sub
push
lcall
add
repz
sub
xor
sbb
out
jmp
adc
repnz
xchg
outsl
call
sti
xchg
push
cmp
and
push
lods
mov
mov
shr
call
sbb
or
push
icebp
rol
and
outsb
inc
outsl
daa
lds
loop
test
or
sub
call
push
sub
cs
dec
xchg
fdivp
fmull
sbb
push
push
lods
sub
call
pop
daa
pop
push
int
mov
lret
mul
mov
add
sti
pusha
iret
push
mov
or
push
push
inc
pop
inc
xchg
inc
add
stos
jg
mov
mov
cld
pop
rclb
xchg
loope
popa
xchg
popa
mov
imul
fwait
push
mov
inc
out
insb
dec
insl
ret
mov
push
dec
outsl
sbb
scas
jne
push
push
call
mov
pushl
cmp
xchg
aad
push
adc
mov
lods
sti
cmpsb
pushf
mov
and
bound
mov
mov
repz
aad
idiv
sbb
in
push
shlb
fdivs
std
dec
fdivrl
outsl
add
mov
loop
sbbb
push
sub
dec
fiadds
push
std
push
add
pop
popf
sbb
mov
lods
adc
js
adc
jb
mov
imul
ja
xchg
das
pop
lcall
sub
arpl
inc
pop
xchg
xchg
jge
enter
sub
orl
jg
jbe
fsubs
xchg
into
inc
lret
xor
stos
or
fsubl
dec
cmp
ret
outsb
jo
mov
xchg
mov
xchg
incb
pusha
jb
pop
or
aaa
negb
cs
pop
test
inc
sub
or
mov
loop
add
mov
out
ja
cmp
add
or
aas
aas
rolb
aad
sub
pushf
mov
xor
ja
iret
dec
or
jmp
into
jbe
pushf
sbb
dec
fwait
shl
fisubl
xchg
je
dec
cmp
xor
shrl
jmp
imull
sub
int
aaa
out
mov
sbb
pop
cmp
sub
jno
pushl
iret
push
enter
fsubrl
inc
push
out
lret
cwtl
dec
movb
sub
lock
or
ljmp
jnp
pop
fistpl
insl
arpl
cmp
sub
cs
mov
adc
cmp
fsubrp
pop
outsl
mov
xchg
sub
test
dec
mov
adc
jmp
pusha
xchg
popf
pop
mov
sbb
push
test
xlat
jmp
inc
xchg
mov
aam
out
jbe
sti
popf
dec
lcallw
lret
cmp
rorl
ret
leave
outsl
lret
lods
or
mov
push
inc
pop
movsl
inc
jae
xchg
lret
jmp
adc
sbb
mov
movsl
cmp
adc
inc
xchg
data16
jb
out
mov
cmp
xchg
ljmp
push
sbbb
and
rorb
movsb
push
ja
subl
cmp
pop
sbb
loop
cli
sub
sbb
jmp
push
xor
inc
dec
les
pop
jae
aam
mov
mov
std
or
arpl
jle
adc
loopne
pop
mov
cmp
inc
cs
fcomps
incl
mov
xor
incb
and
cmpsl
fisubl
inc
fwait
mov
pop
mov
jg
nop
cmp
test
ljmp
or
xchg
js
mov
jmp
dec
das
xor
and
add
or
dec
out
adc
push
icebp
mov
loopw
pushl
and
xchg
jo
pusha
ss
inc
aas
mov
daa
pop
xchg
mov
in
dec
fadds
inc
pop
dec
adc
ja
dec
push
mov
push
lcall
das
xchg
jp
sub
sahf
xlat
xchg
add
je
rcrl
mov
lcall
orl
lds
adc
jmp
mov
ss
push
cmp
and
push
cld
jmp
push
movsb
and
jmp
xchg
add
orl
insl
xorl
jge
xchg
subl
clc
pop
adcb
repnz
repz
adc
cmp
cmpsb
add
and
mov
pushl
cwtl
mov
stos
xor
mov
sahf
sub
aaa
push
roll
aam
fdivp
xor
stos
repnz
ljmp
notl
mov
fwait
xor
lret
call
lcall
rol
add
rorl
adc
mov
decl
test
mov
jne
pop
push
mov
mov
andb
cmpsl
mov
and
push
je
mov
mov
push
dec
mov
pop
out
out
data16
jge
pop
jecxz
dec
mov
mov
xchg
in
movsl
mov
pop
or
call
jae
stc
jg
test
out
dec
enter
push
push
fsubrs
int
movsl
mov
or
call
push
sub
les
lret
mov
rsm
cmpsl
les
out
ret
sbb
jmp
cltd
test
bnd
sbb
repnz
movsl
test
cltd
movsl
mov
fstl
add
orb
stos
lahf
pusha
mov
cmc
les
icebp
mov
cwtl
les
cwtl
incl
mov
mov
loopne
mov
enter
mov
mov
loopne
jae
xor
sub
mov
mov
or
mov
adc
call
jge
sbb
mov
push
mov
into
mov
enter
inc
call
jb
addr16
lahf
lods
das
dec
mov
mov
cltd
movsl
mov
ja
mov
lea
xlat
mov
imul
imul
addr16
in
insb
inc
or
mov
dec
cmp
pop
divb
pop
mov
jge
add
int3
outsb
sti
popf
push
and
incl
mov
insb
pusha
shld
push
sub
fistpl
movsb
pop
out
mov
fistpll
pop
mov
adc
add
popf
jne
and
orl
jne
pop
idiv
or
pusha
mov
in
jle
cmp
ret
push
push
mov
dec
or
ret
testb
das
mov
adc
jnp
fidivrs
sar
loop
gs
daa
push
sub
in
adc
push
xor
xor
add
jg
or
dec
cmp
jl
add
in
xor
flds
adc
jmp
cmp
cs
push
shlb
movl
cmp
insl
lock
scas
aaa
jmp
daa
xchg
scas
ljmp
cmp
mov
xchg
leave
mov
out
jb
mov
xchg
jb
push
clc
ljmp
jmp
jp
sub
xchg
add
xchg
add
testb
jl
pop
movsb
ret
ljmp
add
and
cmp
out
xchg
andl
incl
daa
xchg
xchg
and
dec
cmp
arpl
sti
orl
incl
xor
add
in
pop
repnz
adc
in
vpmulhuw
out
mov
pop
cmp
mov
repnz
xor
out
adc
pop
cmc
or
jg
xchg
inc
sub
mov
aad
test
repz
jle
mov
pop
imul
jp
loopne
pop
fs
xchg
push
lock
jne
jmp
pop
inc
enter
insl
sub
loopne
movsl
imul
mov
mulb
sti
mov
outsl
clc
mov
push
mov
jns
and
xor
iret
fidivs
ljmp
or
scas
into
cli
lods
jns
inc
mov
lret
sbb
negl
mov
call
mov
paddsb
mov
cltd
cltd
in
cld
mov
cmp
inc
cmp
and
decl
nop
testl
movsb
mov
imul
xchg
sub
adc
decl
add
stc
adc
mov
aaa
enter
call
adc
insl
dec
call
test
mov
movsb
jae
push
pop
jp
stos
fsubs
cmp
pop
cmp
xor
push
and
ljmp
or
mov
pop
sbb
divl
fsubr
jmp
xor
daa
mov
sub
pop
sub
pop
sbb
call
sahf
dec
dec
adc
imul
dec
mov
or
cs
pop
and
mov
movsl
popf
push
es
cmc
mov
xchg
ja
mov
push
pop
jmp
jmp
stos
xor
and
mov
shll
sub
mov
cmp
jnp
icebp
push
shll
jl
cmp
push
enter
dec
jnp
or
jge
jp
inc
adc
cwtl
lds
xor
jmp
xchg
or
out
iret
inc
xor
iret
daa
push
xchg
jecxz
lods
xchg
xor
jno
push
pop
jg
incl
clc
sbb
shr
mov
ret
xor
fcomps
push
bound
and
incl
xchg
in
lcall
adcb
jb
in
or
jns
mov
xchg
les
pushl
jnp
lds
jecxz
xchg
imul
fstps
mov
pop
pusha
lcall
cmp
iret
xor
adc
insl
clc
or
push
adcb
cmp
pop
leave
pop
xor
jmp
imul
pop
mov
mov
add
fnsave
scas
cli
incl
mov
adc
pop
mov
push
ja
lahf
test
iret
jge
test
push
xchg
sub
int
dec
or
stos
jne
cmp
mov
xchg
pop
jecxz
pop
jne
fcompl
pop
xor
cs
addr16
shlb
dec
leave
cwtl
and
andl
mov
cli
inc
and
outsb
stc
out
ret
insl
inc
or
pop
jl
push
std
fstps
lods
push
imul
adc
inc
sub
inc
xor
jg
daa
dec
dec
insb
aad
loopne
mov
std
pop
add
sbb
push
scas
or
dec
push
xor
stos
xchg
adc
push
in
adc
mov
cmpb
popf
mov
jmp
adc
fwait
and
push
adc
pop
sub
or
inc
int3
insl
test
cmp
and
xchg
test
imul
or
lea
inc
testb
cmp
cmp
and
pop
jge
adc
pop
outsb
out
repnz
jmp
cmp
insb
rorb
imul
xchg
pushf
popf
cmpxchg
or
adc
lcall
aad
xor
sub
dec
mov
xorb
int
in
ljmp
gs
mov
std
insl
push
mov
daa
mov
add
xor
jle
fmuls
or
jmp
mov
pushl
out
leave
andl
mov
pop
aaa
fwait
int3
pop
cs
ffreep
xor
movsb
add
mov
xchg
jae
int3
insb
xlat
and
pop
push
xchg
or
cmp
inc
add
add
in
or
shll
nop
dec
in
sub
jg
ljmp
mov
jl
stos
mov
in
mov
cmp
cmp
or
mov
push
mov
sub
sti
sub
daa
shl
imul
mov
cmp
inc
out
test
sahf
mov
ljmp
out
sbb
adc
call
adc
push
ret
xchg
xor
add
lcall
incl
push
or
popa
lock
mov
cli
cmc
jbe
fidivrs
xchg
push
data16
hlt
xchg
cmc
data16
fistps
inc
sub
mov
adc
je
stos
daa
aaa
xor
sub
rcr
xor
leave
mov
add
subl
fdivrs
adc
enter
pop
cs
stos
jecxz
adc
cltd
xor
jo
and
jge
sbb
in
jge
int3
jo
orb
jbe
jae
clc
addb
jae
movsl
mov
stos
and
sbb
ljmp
cmp
into
lret
lock
jg
jae
popf
stos
movsb
sub
enter
sbb
jmp
sbb
xchg
and
test
fsubp
xchg
push
jnp
pop
addb
mov
pushl
inc
inc
or
sub
sub
leave
push
fistl
imulb
push
push
ss
fldcw
out
sbb
jmp
adc
xor
xchg
jg
dec
xor
ret
push
mov
lods
pop
cmp
push
add
xchg
enter
lcall
pop
jnp
aam
pop
mov
hlt
stc
fsubrl
pop
xor
sahf
xchg
int3
cmp
call
mov
lds
fists
inc
xchg
sbb
sbb
lcall
incl
jae
loopne
push
pop
mov
pop
call
add
jecxz
adc
lcall
adc
adc
push
push
jl
in
dec
test
pcmpeqb
jge
jbe
push
and
loope
outsb
or
imul
repnz
ficoms
xor
pop
mov
and
cmp
jne
sbb
cmp
dec
mov
or
lods
jge
mov
addb
and
sbb
and
sarl
xchg
cli
shll
cmp
sbb
fstl
outsb
outsl
push
pop
cmp
inc
xchg
mov
or
and
jnp
jno
mov
mov
fsts
imul
cmp
bound
imul
imul
jge
pop
inc
aaa
or
and
insb
insl
mov
push
pop
adc
icebp
ss
cmp
pop
sbb
xchg
stc
push
xchg
adc
adc
pop
push
mov
xchg
test
pop
xchg
test
scas
and
sub
rolb
pop
mov
mov
jge
mov
push
aaa
addr16
fdivs
repz
jnp
cli
int
jmp
adc
pop
and
orb
cmpsb
leave
mov
les
leave
stos
mov
or
xchg
inc
and
sub
mov
pop
popa
aas
mov
sub
mov
insl
jmp
sbb
pop
and
or
gs
stos
mov
arpl
add
xchg
sbb
mov
lods
mov
fidivl
xchg
cmp
sub
xchg
push
dec
aas
mov
sub
sub
xchg
mov
cmp
jg
or
arpl
insl
sbb
fwait
dec
lock
leave
ret
or
arpl
out
jbe
inc
loop
gs
outsb
aaa
push
sbb
xor
loope
cli
push
sbb
and
pushl
cmp
call
fildl
fs
orl
push
rorb
push
jg
ljmp
jge
aad
leave
mov
mov
fisubrs
inc
sub
pop
pushf
sub
cmpb
xchg
rorb
mov
aaa
and
idivb
inc
insb
sub
sbb
out
mov
sbb
and
jp
cwtl
in
out
outsl
test
xchg
stos
inc
das
and
sub
adc
cwtl
cmpsb
and
jmp
jne
fdivl
xor
ljmp
push
fnstcw
xor
lea
pushl
mov
stc
lock
or
out
dec
push
scas
sbb
push
lret
dec
std
mov
mov
mov
mov
pop
popa
call
jle
sbb
ljmp
mov
outsl
cli
and
js
mov
jbe
data16
push
out
clc
insl
jge
popf
push
lcall
adc
xlat
popf
sub
enter
mov
cld
cmp
call
hlt
daa
cmpsl
adc
decl
out
rcl
and
pop
mov
jo
push
es
stos
sti
xchg
xor
ljmp
out
pop
mov
cmp
sub
push
mov
leave
mov
std
dec
ret
sub
push
dec
mov
pop
cld
test
pop
xorb
insb
enter
mov
scas
or
aas
jnp
push
and
jae
jmp
sbb
jne
mov
inc
mov
pop
leave
fwait
mov
lret
pop
les
mov
testb
push
popa
jle
out
lcall
jmp
push
xor
incl
ror
cs
cmp
fwait
gs
mov
xchg
xor
dec
inc
insl
sbb
iret
pop
lret
mov
mov
ja
pushf
fnsave
outsl
pop
sbb
cmp
push
cmp
lret
ret
dec
adc
push
pusha
bnd
and
dec
lret
int3
cwtl
bound
push
ds
incl
xlat
sub
movsb
push
nop
imul
add
shl
incl
stos
gs
pop
push
xor
scas
xchg
into
arpl
mov
pop
sbb
jns
push
enter
mov
xor
mov
cs
push
imul
in
xor
jecxz
in
dec
cld
inc
rorl
incl
mov
ss
jns
push
xchg
cmp
jns
mov
ss
daa
xor
lcall
mov
cmp
or
jl
loop
mov
mov
and
es
mov
mov
imul
popa
jl
aad
arpl
sub
add
adc
pusha
imul
insb
adc
dec
mov
andb
adc
mov
cmp
add
int
in
lcall
out
imul
jl
pusha
push
icebp
out
dec
jl
outsl
or
enter
mov
ss
adc
outsl
call
notl
enter
int3
pop
jecxz
ret
shrl
pushl
sbb
lcall
xchg
or
stos
mov
jmp
sarl
pop
xchg
loope
ljmp
jae
inc
jo
fdivrs
push
shlb
idiv
fistpll
pop
add
mov
stos
stc
mov
loop
adc
or
jmp
xor
decl
mov
scas
or
bound
push
jno
jg
mov
fstp
stc
loop
push
aas
lods
call
int
testl
pop
lock
loope
lcall
ret
fucom
xlat
outsb
jno
and
cltd
das
daa
fsubr
cmp
loopne
adcl
pop
sti
dec
and
dec
mov
jecxz
xchg
repnz
and
mov
push
pushf
push
dec
lds
xchg
loopne
push
lcall
sbb
jno
xchg
cvtdq2ps
pop
jae
xor
push
mov
mov
clc
mov
insb
inc
mov
lahf
hlt
jno
mov
xchg
sahf
pop
and
jae
andb
and
sti
xchg
mov
iret
loopne
push
incl
fdiv
inc
ret
inc
cmc
cld
add
aam
sahf
pushl
std
insl
pop
inc
data16
rorb
xor
aas
enter
push
jg
pop
dec
pop
test
ljmp
push
sbb
sbb
cmp
frstor
sub
loop
pop
rorl
mov
cwtl
frstor
and
rclb
sbb
xor
lcall
in
cs
fstps
out
frstor
cmp
sub
fimuls
mov
ret
adc
push
and
adc
sub
or
adc
nop
inc
add
add
cmpl
iret
add
mov
call
adc
shlb
add
int3
test
movsb
jge
dec
popl
insl
cmp
jmp
adc
add
fwait
mov
sub
das
xchg
loopne
push
bound
call
iret
push
call
fdivrl
jp
cmp
bound
xor
loopne
push
fdivrp
stos
mov
sbb
pop
lock
or
ja
call
jmp
fidivrl
mov
inc
out
pop
cli
int3
sbb
iret
dec
repz
or
call
and
adc
fidivrl
add
xchg
or
push
imulb
test
test
daa
cmp
icebp
sub
enter
jle
shlb
aaa
mov
inc
stos
out
mov
jmp
in
testb
js
xorb
popa
push
push
cmp
mov
jo
jmp
inc
adc
jl
sub
push
adc
repnz
ficompl
inc
xor
xor
rolb
nop
jns
lea
out
push
sti
movsb
dec
pop
mov
mov
jg
loop
icebp
andb
aad
mov
movsl
inc
ret
adc
sar
cmp
aad
sahf
lds
hlt
sbb
xchg
xlat
pop
ret
fcmove
or
addl
jecxz
jno
mov
push
or
xor
xor
les
jo
adc
mov
inc
dec
push
mov
rolb
ds
mov
movsl
sbb
mov
pushl
mov
shll
adc
push
inc
sbb
aas
push
xchg
repz
lock
out
les
or
mov
sbb
hlt
adc
sbb
out
or
inc
movsb
rcll
jmp
int3
push
xchg
les
fcoml
sub
pusha
ret
loop
xchg
cld
inc
decl
sbbl
inc
or
jg
sarl
cmp
and
imul
das
xor
mov
cmp
and
loopne
movsb
add
mov
rcrl
xor
data16
je
adc
cmp
mov
cli
outsb
or
call
cld
fildl
pop
xchg
lcall
cld
push
sub
ret
adc
inc
xor
jnp
cli
or
decb
fdivs
jb
push
dec
xor
mov
or
push
sub
jg
out
inc
pop
repz
push
sub
rorb
inc
das
cmpl
jmp
call
jle
push
ret
movsb
cmp
jecxz
jbe
dec
jge
push
cltd
and
rolb
std
mov
jecxz
push
push
das
jnp
mov
xchg
cmp
rcll
je
add
mov
fadds
jo
push
lock
imulb
push
and
jecxz
lcall
lods
js
inc
push
inc
push
lods
push
push
cmp
push
pop
and
jg
sub
cmp
sub
xor
cmp
dec
sbb
scas
xlat
aad
inc
cld
ljmp
xchg
push
and
xor
sub
xchg
jp
mov
imul
push
lods
push
push
cmp
mov
push
xchg
push
and
ljmp
addb
inc
mov
inc
iret
cmp
pop
and
repz
mulb
test
pop
dec
daa
push
add
xchg
int
xchg
enter
aas
into
scas
dec
ss
push
dec
xor
dec
dec
add
jmp
pop
lock
cld
inc
divl
aad
xor
lods
xor
dec
cs
pop
xor
testl
jmp
test
dec
sub
inc
ss
pop
cmp
cld
repz
inc
dec
loopne
mov
and
aaa
mov
dec
cmp
loopne
scas
push
mov
test
push
add
loop
mov
insl
sti
lcall
aam
adc
xchg
les
cmp
mov
dec
movsb
jle
cmp
jnp
ds
pop
cmp
dec
add
sbb
mov
push
cli
aam
bnd
or
xorps
mov
push
push
cld
incl
push
stos
outsb
pop
cmp
mov
push
jl
inc
add
mov
pop
mov
lods
pop
and
push
fadds
ret
jbe
cld
fildll
aas
popf
cmp
xchg
push
add
lcall
cmp
add
js
sub
movnti
inc
out
inc
movl
pop
cmp
cmp
mov
lahf
sbb
mov
jecxz
xchg
dec
cmp
xchg
mov
sub
mov
mov
out
sbb
cld
addb
push
jg
mov
cld
int3
push
daa
cmp
fisttps
ss
ds
je
push
cmp
cs
out
rolb
roll
cmp
iret
xchg
int
call
inc
es
sub
mov
push
add
pushl
dec
xlat
dec
push
jge
push
inc
jnp
ljmp
or
aad
fistl
xchg
rcr
mov
std
xor
fldt
rcrb
inc
call
jmp
inc
xchg
testl
pop
fwait
je
neg
fnstcw
out
pop
inc
push
push
push
xchg
push
mov
in
iret
dec
pop
cld
fists
nop
mov
mov
push
outsl
sahf
inc
cltd
push
dec
testb
dec
mov
fbstp
jno
jg
cmp
es
mov
push
and
or
jmp
inc
sub
fmul
and
add
adc
dec
sub
jmp
dec
addr16
xchg
push
int
mov
cwtl
pinsrw
mov
adc
flds
pop
jno
cmp
mov
iret
iret
hlt
cwtl
push
idiv
imul
dec
inc
xchg
sbb
movb
imul
enter
outsb
sti
mov
ficoml
clc
pusha
es
xchg
roll
ficompl
or
decl
cmpb
aas
push
aad
mov
shlb
fidivl
xorb
hlt
jg
or
cld
inc
sub
je
iret
jne
decl
mov
popa
jnp
and
sahf
test
mov
imul
cmp
jno
sarb
out
pop
dec
cs
xchg
dec
jg
fstpt
dec
jbe
cmp
push
fisttpll
dec
cmp
dec
inc
dec
cs
cli
jg
dec
push
ds
je
dec
out
fs
cmp
xor
notl
das
js
mov
fcoms
xlat
dec
movsl
test
adc
and
cmpsl
shlb
test
aaa
aam
and
fimull
cld
push
aaa
add
sub
jno
lods
in
cmpsb
pop
mov
les
incl
xorl
shll
mov
cs
cmp
shl
pop
outsb
add
scas
pop
int
xchg
dec
inc
mov
pop
inc
mov
pop
das
add
mov
inc
inc
dec
jg
adc
pop
jbe
xor
dec
cld
imul
std
xchg
imul
mov
mov
xor
decl
incl
dec
sub
in
xchg
nop
pop
cmp
xor
arpl
dec
inc
les
fcmovb
push
jns
xlat
mov
jp
pop
cmp
add
xlat
pop
mov
mov
in
outsb
xchg
jno
dec
stos
fcmovb
add
fdivr
subb
fisubrs
dec
movsl
into
jmp
mov
push
std
mov
mov
into
ss
pop
enter
outsb
mov
jb
aaa
add
rcll
or
xchg
cltd
arpl
popa
lahf
daa
push
xorl
xchg
in
dec
xchg
or
out
aas
adc
test
lock
movsl
cltd
push
addr16
add
mov
or
push
or
cmpsb
jns
cmp
ds
loop
add
out
fildl
push
mov
or
js
cmp
lret
dec
mov
push
lcall
loopne
ljmp
jns
js
ret
test
cmp
std
sbb
mov
pop
pop
jno
ss
inc
push
push
ja
xor
ja
arpl
or
lock
xor
aaa
xor
xor
imul
ja
ljmp
fs
xor
ss
push
push
imul
jo
pop
jae
decl
jne
push
push
pop
inc
push
gs
dec
arpl
push
jne
inc
bound
imul
notb
addr16
popa
dec
jne
dec
outsb
inc
inc
jno
call
mulb
jo
cmpsb
push
outsl
jns
inc
fs
insb
inc
insb
popa
xor
aaa
push
lcall
push
je
jno
push
inc
inc
dec
pop
fs
imul
xor
dec
imul
lcall
cld
ss
insb
pop
sbb
dec
push
cmp
imul
fs
pop
jo
in
in
call
dec
push
jne
xor
inc
jno
jp
push
pop
dec
inc
push
push
outsb
shrb
std
jmp
jb
inc
imul
push
jbe
jo
dec
inc
push
imul
dec
incl
outsb
push
js
ja
insl
ja
je
inc
ja
dec
xor
outsb
inc
push
push
jno
push
push
addr16
dec
adc
xor
incl
jne
push
pop
push
imul
jno
push
js
dec
addr16
push
push
push
aas
cwtl
push
dec
imul
dec
cmp
push
jp
dec
dec
outsb
push
fistl
cld
incl
dec
xor
dec
pop
inc
pop
dec
push
push
inc
hlt
dec
outsl
je
xor
cmp
mov
pop
arpl
jns
jns
push
pushf
jo
insb
ja
imul
outsb
jae
jo
stos
sti
imulb
add
je
je
or
mov
mov
add
cmp
imul
cmp
imul
in
or
test
jbe
loope
daa
shl
mov
push
out
push
fcompl
in
ljmp
sub
adc
jmp
in
test
dec
in
sahf
inc
jecxz
mov
add
js
mov
dec
pop
cmc
inc
sti
mov
jo
cmp
inc
sub
outsb
sbb
jbe
push
or
push
insb
ss
mov
pop
aaa
inc
push
adc
mov
add
push
or
cli
sbb
jbe
dec
lahf
xor
sti
xor
mov
lods
aad
rorb
int
cwtl
xor
loop
loopne
inc
xorb
idiv
divl
jbe
xchg
dec
dec
mov
push
mov
sti
pop
subl
cmpsb
xchg
push
xchg
adc
decl
jbe
fucomi
jbe
std
out
idivb
daa
out
dec
test
fcmovu
in
jbe
dec
push
popf
inc
test
pop
jnp,pt
js
rolb
fsubs
shl
sti
jbe
adc
sbb
adc
push
sub
sarl
push
inc
jb
push
aaa
fisttpll
inc
push
sbb
adc
addr16
repz
dec
jo
jmp
cmp
ret
jbe
shll
jbe
xchg
loop
xlat
inc
aas
inc
enter
mull
ret
ss
pop
jbe
pop
iret
test
outsl
outsb
push
cmp
ret
popa
outsl
and
inc
adc
es
or
adc
xor
cmp
mov
loopne
aas
leave
mov
sub
mov
cmpsl
push
fadds
out
icebp
rcrl
add
mov
nop
mov
int
ss
jmp
pushl
jns
test
psubq
pop
push
insb
ss
fiaddl
das
jge
insb
les
out
jmp
out
dec
ljmp
jl
daa
fisttpl
arpl
out
pop
inc
icebp
dec
push
scas
ds
out
xor
inc
mov
lds
in
mov
shrl
out
imul
gs
xor
cs
outsl
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
pop
sti
push
cs
gs
jbe
add
pop
jb
push
mov
imul
jne
insl
rcr
and
gs
outsl
arpl
or
jo
insl
aaa
pop
xor
push
xchg
jg
jbe
imul
call
jns
push
outsw
jb
popa
outsb
arpl
mov
mov
push
adc
sbb
jne
mov
popa
fs
fs
scas
adc
add
cs
ds
adc
dec
or
in
out
jmp
loop
popa
jb
outsl
dec
jne
mov
jns
data16
sub
sub
sub
jge
in
insb
jae
movsb
mov
pop
arpl
sbb
jnp
mov
jb
jns
js
push
sub
dec
cmc
and
push
and
jo
rolb
push
jb
or
fs
jae
imul
hlt
gs
push
arpl
daa
inc
imul
mov
cltd
and
inc
cmp
addl
outsl
insl
mov
xor
sbb
clc
ficomps
sub
bound
sub
push
imul
xor
call
push
outsb
push
in
fs
cmp
xor
out
int
mov
fwait
push
outsl
xchg
and
cmpl
add
insb
xorb
cmp
in
mov
popa
imul
outsb
lret
xor
pop
push
adc
inc
in
sbb
inc
shl
aam
pop
and
jb
sub
shrb
push
gs
pop
jb
jae
mov
jae
fsubl
int
loop
gs
outsl
mov
dec
gs
push
inc
jbe
pop
fwait
adc
lods
xor
push
add
es
movsb
outsb
lock
push
adc
add
mov
je
push
jns
sbb
data16
lret
pop
pop
aas
and
push
mov
daa
lret
push
or
pop
pop
rorb
inc
add
mov
jo
adcb
inc
xchg
inc
xor
cmp
push
insb
adc
dec
bound
repz
jl
jg
jo
cmpsb
sub
mov
ret
into
scas
mov
jbe
xlat
jbe
arpl
push
out
mov
into
mov
inc
imul
adc
pop
and
add
xchg
arpl
test
shll
fnstsw
repz
sti
lods
inc
inc
insb
push
stos
push
lods
stos
sbb
adc
mov
imul
pop
mov
scas
mov
add
outsb
stos
daa
push
mull
inc
sbb
ret
test
mov
frstor
pusha
shll
sub
xor
sub
ja
das
les
inc
jo
inc
dec
mov
push
and
adcb
sub
jecxz
lock
sbb
add
hlt
es
add
pop
pop
ss
xor
sub
add
lods
pop
loope
in
jnp
push
pop
xor
sbb
xor
pop
adc
mov
insb
loopne
insb
js
stos
rcrb
and
insb
fisubl
pop
mov
mov
imul
insl
xorl
mov
ret
gs
js
jo
dec
pop
inc
loop
lock
jecxz
sub
or
inc
pop
add
cmpsl
push
xchg
adc
mov
sub
daa
sub
je
std
xor
dec
incl
jne
push
push
repz
push
or
iret
je
jmp
in
fildl
sbb
fsubs
aaa
or
sbb
mov
ret
xchg
pop
inc
lret
xlat
or
and
pop
ficoms
push
xchg
lcall
xchg
or
add
adc
stos
dec
ljmp
nop
inc
push
sub
add
push
adc
addb
test
incl
sub
or
test
push
add
subl
inc
add
fs
add
nop
add
and
mov
and
push
adc
nop
inc
add
mov
xor
pusha
or
inc
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
daa
xchg
cmpsl
andb
xchg
cmp
test
testl
out
repnz
sbb
sub
jns
out
inc
push
fs
iret
repz
mov
fdivp
push
sahf
out
lcall
xor
out
shl
lock
repz
repz
inc
pop
push
idivl
nop
mov
out
dec
adc
cmp
cmp
inc
pop
jle
cmp
mov
sahf
jae
and
repz
repz
push
jp
mov
repz
ret
testb
sahf
out
sahf
sbb
cmp
xorb
jns
into
hlt
inc
jne
sahf
out
sahf
cmp
pop
test
jns
repnz
fs
repz
cwtl
stos
mov
into
loopne
add
sahf
out
sahf
cmp
push
out
pushf
ret
or
out
fidivrs
mov
stos
mov
repz
rcll
sub
pusha
jb
repz
test
sahf
out
add
cmp
jge
out
xchg
cmpsb
int3
faddl
jnp
out
ficomps
adcb
mov
out
cmp
out
sbb
inc
push
iret
mov
jge
out
sahf
ss
insb
xchg
movsb
mov
sahf
out
fsubr
cli
or
repz
shll
inc
push
fs
repz
mov
sahf
out
add
dec
pusha
jo
sahf
out
xchg
cmpsb
mov
fdiv
cmp
out
adc
repz
jle
sahf
ljmp
or
push
inc
push
iret
sahf
mov
call
jns
xor
push
push
out
pushf
scas
mov
dec
repz
push
es
pop
iret
repz
jo
xchg
mov
jns
test
dec
jo
jp
out
xchg
movsb
mov
ljmp
test
sub
iret
repz
jb
xchg
mov
fdivp
or
and
pop
jb
lahf
out
sahf
sahf
mov
fdiv
adc
and
push
pop
repz
rep
xchg
cmp
loopne
cld
push
mov
sub
pop
push
sahf
out
je
cwtl
stos
mov
jns
out
fsub
hlt
jg
cmp
mov
dec
pusha
jb
repz
test
sahf
cmpsl
stc
cmp
add
sahf
out
push
pop
data16
out
sahf
out
mov
shl
iret
repz
testb
adc
inc
cmp
repz
insb
xchg
repz
jns
sbb
notb
out
sahf
out
bound
sahf
out
sahf
stos
mov
cmp
sarl
and
cmp
repz
repz
push
mov
mov
loopne
add
cmp
mov
sub
repz
jo
mov
repz
out
cli
add
jns
out
push
xor
push
outsb
out
sahf
out
xchg
movsb
mov
jns
jns
loop
ficoms
jns
out
pusha
jb
mov
mov
into
fdiv
cmp
repz
push
xchg
adc
and
cmp
repz
bound
repz
mov
repz
xchg
jle
and
repz
ds
push
insb
jle
adc
pop
mov
fs
adc
add
add
and
mov
out
xor
inc
shrl
adc
aas
aam
clc
fwait
inc
inc
push
pop
cmpsl
orb
lea
pushf
test
in
sarl
jns
pop
or
mov
sbb
stos
aam
test
stc
sub
cs
mov
cmp
xchg
imul
out
pushf
or
ljmp
mov
pop
sub
or
aas
xor
movsb
pop
push
mov
insl
or
pop
xchg
or
scas
jle
out
stc
lret
lock
movsl
sbb
xchg
jb
add
inc
xchg
fiadds
rolb
lgs
jg
fildl
in
adc
mov
jae
sub
decl
cmp
int3
xchg
leave
xor
xchg
popa
cmp
sub
mov
add
pushf
mov
mov
adc
cld
fs
lods
out
cmp
jo
pop
pop
mov
frstor
ljmp
push
mov
cmpsb
lret
sub
jmp
test
test
pop
and
outsl
test
pop
add
adc
fxch
fisttpll
das
clc
lcall
outsb
sbb
push
and
mov
mov
lahf
sbb
pushl
cmp
dec
or
sbb
divb
inc
nop
and
lea
ret
loope
or
loope
mov
outsl
sbb
adc
insb
pop
data16
in
inc
lea
icebp
ss
mov
ds
test
mov
inc
mov
cmp
mov
add
fsubs
pop
enter
call
enter
xlat
mov
jo
sti
push
out
dec
stos
insb
fwait
lds
inc
adc
jmp
addr16
xchg
daa
int
add
sub
xchg
lret
pop
push
mov
lcall
aad
jb
pop
dec
stc
ficompl
xchg
roll
nop
add
inc
pop
mov
fcoml
sar
lock
jnp
repz
adc
dec
pop
call
sbb
add
jle
outsb
shr
in
loope
jp
mov
movsb
js
mov
pop
flds
fmuls
cmp
pop
call
rcrb
adc
out
sbb
dec
adcb
sub
pop
pop
popf
loope
out
in
fdiv
es
icebp
jmp
mov
aad
das
lret
xchg
adcb
pusha
lret
int
das
xchg
mov
outsb
cs
out
arpl
mov
outsl
outsl
inc
lret
dec
dec
add
fsubr
xchg
dec
mov
ror
pop
xlat
aaa
jg
jmp
or
and
and
pushf
shlb
push
mov
xor
stos
cmpsl
pushf
out
add
pop
inc
sub
xchg
les
pop
or
ds
push
adc
mov
dec
stos
fsub
ret
jbe
mov
mov
shll
pop
pop
fdivs
dec
dec
in
ja
push
pop
pop
rcrl
jmp
mov
das
jbe
or
test
nop
data16
mov
jmp
gs
les
pop
push
repnz
test
lods
incl
push
mov
fdivp
fbld
test
cmc
pop
rorb
adc
inc
jmp
loopne
in
loopne
ss
pop
scas
jne
jg
add
test
decl
push
ss
push
sbb
jne
xchg
jecxz
and
jbe
mov
cltd
jbe
scas
fcomip
ljmp
jp
inc
adc
adc
adc
or
je
in
ret
imulb
decl
ret
dec
imul
lods
jno
mov
xchg
fisubrl
imul
in
inc
lcall
sub
scas
adc
lahf
adcb
addl
fstl
ljmp
movsb
add
push
jp
fnstcw
and
movsb
push
jle
pop
in
aas
push
fwait
ljmp
inc
sub
sbb
imul
out
mov
decl
inc
pop
inc
pop
inc
pop
shl
sbb
mov
mov
mov
mov
decl
cmp
and
nop
push
cmp
xchg
fwait
shlb
xchg
mov
mov
fs
bound
cli
decl
add
xchg
sub
xchg
repnz
sub
push
dec
test
and
push
call
ljmp
data16
std
pop
and
cli
mov
dec
pop
scas
addr16
push
xchg
mov
or
jo
sub
sbb
mov
push
push
and
adc
pop
jmp
dec
inc
ds
aas
lcall
cld
clc
sub
iret
sub
frstor
pop
inc
push
dec
imul
mov
outsb
jno
and
mov
sbb
fnsave
stc
test
lods
mov
jp
lret
loop
and
cmp
or
popf
lock
out
sub
push
cmp
std
mov
into
xchg
mov
fidivrs
ficoml
adc
incl
push
loope
pop
movsl
lock
sbb
add
add
jp
test
sti
incl
cli
mov
aam
cmp
je
push
add
and
jge
fld
sbbl
decl
rorl
leave
mov
fsts
inc
sub
dec
xchg
mov
adc
lock
lcall
fstpt
dec
mov
mov
mov
cmp
sub
pushl
fcomi
shll
int
mov
mov
pop
mov
mov
outsl
cmp
xchg
ss
pushl
dec
sbb
sub
insb
cltd
and
bound
out
inc
and
loope
stc
loopne
sub
jmp
repz
adcl
imul
pushf
cmp
xor
out
clc
adc
pop
cmp
sahf
cld
fxch
cmp
in
inc
xor
push
lcall
lods
and
xchg
add
dec
cli
xor
and
or
xor
jp
pop
xlat
popf
adc
cld
push
xchg
in
or
jl
les
shl
pusha
add
call
test
nop
mov
test
shrb
jle
es
in
fldl
lods
xor
cmc
incl
jle
int3
add
add
jle
push
daa
xchg
inc
incl
ret
mov
fistpl
add
sbb
incl
add
sbb
mov
or
xchg
inc
lret
in
imul
push
mov
aaa
js
insl
or
jg
daa
pop
in
or
test
push
ret
jecxz
ljmp
inc
xor
add
fidivrs
or
xor
push
pushl
xor
mov
leave
fwait
sti
push
fnstsw
mov
in
clc
adc
and
call
inc
shrl
jb
or
mov
mov
negl
imull
ficomps
jmp
lock
aad
inc
xor
outsl
test
mov
mov
pop
pop
mov
clc
push
in
and
jmp
adc
xchg
dec
cmp
or
je
rolb
int
cli
stos
xchg
dec
aas
aam
adcb
or
loope
inc
xchg
imul
aam
bound
lea
cmp
push
repnz
ss
mov
mov
out
not
lds
add
mov
pop
iret
fisttpl
inc
lods
cld
decl
nop
xchg
int
out
inc
insb
cmp
popf
xor
mov
push
scas
jmp
jle
aaa
bound
sub
push
xchg
mov
jmp
push
aas
fwait
sub
add
cmc
sbbl
cmc
pop
sbb
mov
add
jg
sahf
mov
push
pop
enter
mov
adc
or
je
sub
jmp
cli
sbb
ljmp
xchg
sarl
pop
xchg
xchg
rolb
cmc
cmp
mov
call
sub
push
mov
inc
sbb
or
mov
push
mov
sets
sub
mov
incl
stos
test
test
ljmp
cmpsl
lock
push
out
mov
add
cmc
ret
call
mov
xlat
adc
push
loope
and
aaa
push
das
mov
jbe
incl
sub
sbb
scas
scas
xchg
pop
push
mov
add
and
cmp
lahf
div
data16
and
es
jg
sub
jge
cli
pushf
fsubrs
cld
das
cli
dec
in
cmp
fists
cmpsl
mov
cli
out
testb
pop
dec
pop
pushl
leave
outsb
dec
ja
mov
fnstcw
shlb
add
out
repnz
cmpsl
pop
ljmp
rclb
cmp
test
dec
inc
pop
cmp
jno
dec
sar
xchg
icebp
pushl
push
movsb
push
jecxz
scas
loopne
xchg
push
mov
or
hlt
imul
pop
test
lahf
adcl
add
fstpt
in
cmp
cmpsb
inc
inc
stos
mov
jp
les
mov
cld
pop
xchg
add
nop
or
clc
cmp
scas
js
pop
push
lods
sbb
jns
mov
mov
lea
lds
fcomps
push
cs
inc
and
aad
movl
push
cmpsl
incl
loop
ret
sbb
add
push
dec
pusha
les
cmp
cmpsb
pushl
ds
sbb
and
mov
pop
sub
jbe
mov
lcall
das
xchg
fsubl
lods
and
mov
dec
loopne
xchg
sub
sbb
loope
call
sub
fildl
xchg
add
fists
add
add
mov
dec
clc
ffree
dec
cmp
lcall
push
or
sbbl
movd
adc
call
repnz
dec
inc
cmp
loop
push
pop
repz
mov
outsb
shrb
push
adc
call
push
lcall
jle
test
or
das
ficoml
decl
dec
cs
dec
adc
movsb
and
pop
sbb
lods
jge
pushf
imul
notb
call
scas
mov
xchg
push
cmp
sbb
dec
ds
push
inc
sbb
decl
roll
pop
scas
outsl
push
cmc
pop
cmp
es
sub
cmpsb
flds
call
inc
into
xor
jae
hlt
mov
inc
mov
data16
mov
inc
ja
cmp
jg
cmpsb
lsl
outsb
sbb
mov
and
and
out
mov
xor
pushl
call
push
cmpsl
jmp
ja
xchg
ret
jne
or
inc
mov
clc
pop
and
jmp
jmp
mov
pop
mov
movsb
rcll
cmp
dec
xchg
lcall
outsb
dec
es
mov
stos
inc
dec
cmpsl
dec
mov
out
mov
mov
inc
jmp
sbb
mov
sub
in
fmuls
jnp
dec
sbb
dec
inc
jo
int3
imul
adc
lcall
mov
and
add
in
dec
cltd
in
dec
or
pushl
xchg
test
jns
adc
dec
clc
sub
sbb
xor
daa
hlt
cmp
push
sbb
mov
push
ds
push
das
add
cwtl
mov
call
iret
pop
fcmovb
les
mov
or
dec
out
push
dec
pop
popa
arpl
push
inc
js
or
std
decl
clc
inc
mov
lret
cmc
mov
or
push
insb
push
jb
sub
mov
push
and
cmp
rcll
mov
test
pushl
pushl
xor
pop
add
xorb
xor
sti
push
cmp
hlt
adc
lcall
add
test
inc
movsl
add
and
loopne
in
jle
mov
adc
ljmp
adc
movl
rorl
movsb
push
fcompl
lret
shrl
mov
xchg
test
dec
aas
inc
push
jmp
aam
mov
and
aas
xor
push
int3
aas
or
xlat
fnsave
clc
call
pop
int3
addr16
and
xor
lods
dec
cli
cli
lock
cmp
jg
dec
adc
jmp
mov
mov
sub
sub
lcall
dec
add
fists
mov
sub
mov
push
xorl
pop
test
or
and
mov
xchg
dec
xor
xlat
dec
rol
in
cmpsl
mov
adc
iret
jmp
pushl
rolb
sub
shlb
jo
cmp
lret
andl
lcall
xchg
push
jmp
es
mov
loope
and
popf
mov
or
ret
call
xor
pop
mov
pusha
scas
je
inc
xlat
mov
lahf
sub
mov
mov
mov
out
jb
mov
daa
xor
push
cmpsl
inc
ja,pt
jnp
mov
lret
shrl
sahf
cmpsb
mov
jge
frstpm(287
into
in
ret
icebp
mov
decl
sub
cmp
in
pop
xchg
mov
imulb
out
stc
jg
push
adc
xchg
add
aas
mov
adc
aad
imul
xchg
xchg
dec
loope
mov
and
lahf
testl
test
lcall
int
cli
shl
xchg
xlat
sub
mov
mull
imul
xchg
fdivl
sar
mov
mov
cmc
fisubl
dec
insl
dec
pop
dec
or
dec
sar
shlb
push
push
cmpsb
xchg
and
sub
test
jg
pop
icebp
bound
adc
mov
jbe
push
es
sub
add
push
cld
mov
les
dec
mov
stos
shrl
inc
xor
lcall
inc
cld
nop
mov
fld
and
push
movsb
add
mov
pop
mov
push
dec
int3
fcomip
decl
sti
inc
ja
or
out
leave
mov
sti
dec
pop
mov
adc
sub
pushl
jp
and
loope
jmp
pop
mov
shlb
pop
hlt
inc
add
aad
dec
sbb
into
mov
stos
mov
inc
mov
pop
std
fucomi
pusha
fldl
dec
outsb
stos
sti
ret
jl,pt
or
pop
xor
decl
pop
movsl
push
inc
pcmpeqd
out
sbb
jns
bound
hlt
incl
xchg
mov
cmp
fs
aad
xor
ljmp
rclb
out
mov
fnstsw
in
push
mov
mov
out
aaa
lcall
dec
or
push
inc
push
pusha
xor
push
hlt
js
mov
jae
mov
add
push
jnp
ret
insb
inc
cmp
fwait
jns
inc
ja
and
sar
mov
mov
adcl
aaa
cmpsb
rcrb
and
roll
pop
loop
clc
decl
in
sub
lods
pop
stc
push
push
leave
cmp
xorb
fcomps
ud0
fildll
lds
xchg
nop
xchg
mov
sub
ljmp
ljmp
xchg
dec
int3
cmp
int3
jns
push
push
divb
sbb
popl
in
in
or
cmp
cmp
push
mov
jns
aaa
movsl
ja
in
mov
in
dec
scas
mov
cli
xorl
dec
push
jns
push
mov
pop
mov
ljmp
lret
dec
push
js
lock
lahf
fs
int
je
mov
adc
sbb
inc
fcomip
lcall
lock
mov
pop
dec
iret
adc
aad
jmp
ljmp
rcrb
adc
jo
add
push
inc
lret
ret
popw
dec
jae
sahf
es
jg
decl
or
shr
pop
lahf
xlat
mov
jge
jns
dec
push
adc
cmp
or
addb
pop
jl
pop
jns
int
mov
rcrb
mov
insl
mov
stc
cltd
inc
mov
push
adc
push
test
shrb
add
push
inc
jmp
cmp
scas
pop
mov
mov
sub
push
popa
out
mov
notl
push
sti
pushf
cmp
jae
push
jne
rcrl
stc
and
dec
test
mov
fs
add
push
je
xchg
je
mov
cld
inc
loop
ljmp
addb
add
jne
mov
and
sti
jne
cmp
lcall
fstps
call
cmp
fdivr
outsb
in
out
test
loop
pop
mov
loope
xor
dec
loopne
pop
insl
insb
loop
pop
dec
add
pop
mov
sub
call
outsb
mov
insl
mov
out
ds
jnp
sub
inc
jae
in
sbb
call
dec
lret
ja
sub
push
xchg
les
leavew
cmp
into
lods
or
sbb
jmp
ljmp
aas
popa
cmp
sub
or
xchg
leave
ljmp
inc
fsubrl
cld
lcall
add
loopne
lahf
inc
add
ja
sbbl
xchg
sahf
cli
sbb
stos
das
incl
adc
or
inc
cmp
lret
in
cld
jne
sahf
inc
jge
insl
sti
mov
push
sub
ljmp
pop
movsl
stc
adc
iret
sbb
sti
push
dec
arpl
inc
pop
imul
xlat
fs
nop
in
aad
inc
pushl
mov
add
xchg
scas
cmp
icebp
fisttpl
in
sbb
xchg
xchg
fidivs
push
sub
jge
movsb
mov
mov
dec
and
lds
stos
lock
stc
std
jmp
and
daa
xchg
sbb
loope
xor
hlt
or
mov
imul
push
arpl
pushl
fmul
dec
out
je
jnp
xchg
sti
aas
cs
cld
cmp
jg
sbb
push
scas
mov
lret
xor
sub
scas
rclb
jl
das
lea
call
xchg
sub
jecxz
cmpsb
fcom
dec
arpl
dec
xrelease
out
jbe
ljmp
jp
jmp
cwtl
pop
push
add
cwtl
xchg
dec
idiv
ljmp
rorb
ja
mov
pop
pop
addl
inc
loop
fstl
pop
cld
call
inc
test
mov
dec
std
clc
lret
push
bound
decl
jle
out
cmp
inc
or
inc
xchg
sub
outsl
pop
outsl
pop
shll
cli
jg
stc
ljmp
add
and
jmp
stos
mov
int3
shrb
xchg
pushf
es
pushl
fiaddl
and
xchg
loop
ljmp
and
fcompl
lcall
mov
jbe
mov
pop
push
mov
adc
faddp
lcall
sbb
nop
out
fwait
sahf
push
or
cwtl
mov
push
mov
rolb
xor
stos
xchg
add
dec
jnp
cmpb
sbb
fnstsw
lea
loope
ficompl
sbb
jno
mov
dec
add
enter
xchg
xchg
inc
xor
out
push
cmp
ljmp
into
pusha
sub
lret
lahf
sub
add
adc
pop
mov
out
mov
pop
sti
mov
inc
pop
loopne
outsl
pop
or
js
dec
dec
sbb
pushl
pop
insb
xchg
or
idivb
outsb
rcrl
popa
lea
adc
cltd
ret
sahf
dec
push
xchg
mov
outsl
loopne
and
into
clc
test
aaa
ret
pop
mov
push
and
add
push
out
lcall
lcall
cld
pushf
xlat
lret
mov
sbb
push
fidivrs
movsl
hlt
cmpsl
call
add
sar
dec
fcmovb
mov
or
mov
xchg
and
movsb
ljmp
out
or
mov
loopne
push
or
or
xchg
or
js
dec
data16
ljmp
shr
or
out
fldt
push
pop
jae
xchg
lahf
iret
int3
xor
sbb
jmp
inc
fwait
mov
xchg
inc
push
scas
push
movsb
popa
sub
jg
xchg
jb
jl
data16
fnstsw
mov
repz
inc
adc
call
sbb
ja
call
xor
jge
sub
in
pushf
pusha
xchg
mov
jmp
ret
sub
aas
stc
cmc
pop
rclb
jp
addr16
scas
push
popa
xchg
or
sti
in
call
jmp
decl
cmp
jae
xchg
testl
andb
pop
push
les
mov
xchg
in
add
cwtl
stos
fdivrp
int3
lret
mov
enter
fs
mov
mov
push
stos
cltd
in
rol
loop
inc
pop
scas
xchg
mov
pushl
lods
xor
data16
sub
jo
inc
inc
lea
sub
mov
xor
decl
decl
dec
enter
scas
inc
sbb
stc
adc
sbb
lcall
sbb
xchg
or
pop
fcoms
sahf
xchg
les
arpl
sbb
xor
jp
or
out
mov
or
push
popa
push
insl
sub
sar
call
scas
ss
imul
jne
push
mov
mov
sub
inc
adcb
mov
incl
lahf
pusha
into
into
cmp
jo
push
fwait
out
ljmp
orb
ds
jmp
test
sbb
mov
leave
mov
dec
inc
mov
fcoms
decl
add
das
sbb
add
xchg
xor
mov
push
cmp
jecxz
mov
jg
and
sub
clc
mov
mov
sub
and
ljmp
fnstenv
fcomps
jae
enter
jae
sbb
or
idivl
call
mull
repnz
cmp
sub
sahf
push
dec
pusha
adc
loop
rolb
fwait
lea
sbb
dec
popa
mov
and
sub
mov
arpl
loop
nop
jg
mov
push
lea
imul
jne
push
jle
lea
neg
push
pop
push
xor
inc
decl
loop
mov
push
sahf
out
jecxz
sub
repnz
pop
dec
fcoml
movsl
imul
incl
in
sbb
push
jmp
lahf
mov
ret
cltd
mov
incl
jno
mov
rep
aaa
pop
aas
push
ret
scas
nop
jecxz
shl
lods
jecxz
scas
int3
pushf
cmp
lcall
jle
outsl
lea
lahf
lcall
inc
sbb
inc
insb
mov
dec
jmp
lret
mov
sub
xchg
jo
adc
in
test
dec
fiaddl
jmp
push
mov
into
add
lock
fmuls
std
iret
gs
jmp
adc
rclb
pop
and
outsl
lret
jns
lock
mov
loop
sub
push
jbe
sbb
inc
out
xor
pop
nop
mov
push
inc
ret
xchg
push
jp
cmp
lods
js
jecxz
sbbl
add
pop
sbb
cmp
call
xchg
int
aad
das
and
xchg
or
lcall
xchg
jno
jae
push
imul
je
inc
je
mov
xchg
jnp
rolb
pop
xor
cmp
xor
mov
scas
jmp
mov
or
or
js
test
pop
cmp
sbb
mov
call
repnz
mov
xchg
fs
fisttps
jg
jmp
adc
push
pop
xor
xor
loopne
add
into
outsb
fwait
pcmpgtb
xor
sbb
fldcw
add
add
push
test
mov
sub
pusha
out
adc
mov
fisttpll
rorb
xor
and
pop
incl
pushf
jg
or
mov
je
ljmp
xor
popf
loope
std
mov
ljmp
inc
mov
sbbl
adc
or
leave
push
xchg
mov
popl
pop
fisttpl
adc
mov
leave
mov
cli
scas
dec
xor
stos
cs
enter
fcoml
xchg
jo
mov
xor
and
sbb
pop
mov
mov
incl
mov
xor
fdivr
lock
lret
jg
bound
xor
push
decl
aad
mov
out
xchg
cltd
bnd
add
add
jmp
sub
clc
push
mov
adc
jge
jecxz
iret
mov
inc
lret
shr
inc
stos
ss
jbe
mov
stos
add
lahf
fcoms
nop
xchg
loopne
ljmp
pop
jmp
aas
inc
scas
loopne
popf
cmp
int
sub
dec
inc
jle
dec
push
fsts
aad
leave
adcl
jle,pt
cmp
push
lods
mov
imul
call
mov
add
jb
and
cld
cwtl
or
xor
add
outsl
cli
shlb
into
inc
int3
sahf
or
movsl
js
mov
call
loopne
in
js
jmp
xor
xorb
pop
loopne
pusha
lret
mov
icebp
jp
stc
lods
jmp
inc
es
cmpsl
and
xor
js
dec
orb
push
mov
incl
rcr
testb
call
out
pop
out
je
icebp
push
incl
xchg
ds
xchg
cmp
nop
mov
pop
jecxz
mov
push
jmp
xchg
push
testl
mov
cmp
adc
ret
xchg
adcl
pop
ja
mov
call
fdiv
jmp
js
in
mov
out
enter
cmpb
out
clc
mov
dec
xchg
cmp
mov
lea
call
fldt
mov
insl
or
mov
mov
and
jne
data16
mov
lock
les
rorb
inc
fs
int
ficomps
mov
movsl
xor
lcall
jl
inc
push
idivl
pop
jbe
dec
out
mov
js
mov
xchg
pop
ljmp
pushl
lea
pop
lret
sbb
adc
push
sub
xchg
jp
sarb
cltd
in
pop
rep
jo
xorl
scas
daa
mov
imul
xchg
and
xchg
cmpsl
cs
pop
cmp
sub
aam
outsb
and
mull
jge
imul
mov
shld
decl
mov
mov
mov
das
pop
insl
jmp
dec
jp
mov
push
or
or
jl
idivb
cwtl
xlat
and
jg
ret
leave
add
call
repz
aam
jae
movsl
loope
push
sti
pop
pop
out
push
clc
pop
in
les
cs
push
lock
and
mov
cmp
out
leave
cli
sbb
aas
inc
jo
dec
stos
sahf
lock
mov
dec
jnp
cmpsb
mov
clc
hlt
cld
and
pushf
push
push
sahf
inc
dec
outsl
xchg
or
push
inc
ja
shrb
aas
outsb
ljmp
loope
call
mov
rcrl
sbb
test
lock
pop
mov
std
dec
aad
cmpsb
jo
in
jae
ret
sbb
mov
jo
test
pushl
dec
sbb
mull
iret
push
pushf
xchg
cwtl
test
cmp
mov
or
mov
sahf
sub
nop
cmp
jbe
jbe
dec
ret
push
sbb
insb
cmpsb
pushf
inc
mov
ljmp
out
popa
and
mov
aam
cltd
cmp
scas
add
sbb
and
ljmp
fnstsw
test
out
cmp
adc
push
push
inc
repnz
nop
aam
test
adc
decl
inc
and
or
add
aad
jecxz
cmp
out
test
add
mov
mov
push
push
jne
mov
mov
lahf
jbe
mov
adc
arpl
lea
lahf
add
lahf
out
jecxz
call
xor
lods
inc
pop
loope
or
jb
orl
push
adc
mov
cli
pushf
push
mov
ja
in
pop
loopne
insl
fcmovnbe
rclb
incl
mov
mov
mov
sbb
push
jl
scas
je
adc
movsl
aad
adc
jno
dec
xchg
cmc
cltd
mov
dec
or
imul
flds
inc
jecxz
xchg
adc
cmp
fsts
dec
mov
cs
lds
loop
mov
jns
orb
clc
loopne
and
fsubrs
sbbl
fdivrs
nop
cmpsb
cmp
push
icebp
and
add
sbb
xorb
ljmp
pop
and
gs
cmpsl
fwait
xchg
mov
mov
imulb
pushl
lods
rol
negl
add
dec
mov
nop
mov
enter
incb
sub
mov
inc
xor
pop
stos
and
adc
mov
movsb
or
mov
and
leave
rcrl
aas
fidivs
outsl
jns
daa
ret
call
frstor
adc
lods
pop
jne
sub
test
cmpsb
push
loopne
push
xchg
aas
adc
jecxz
xchg
call
test
fwait
cmpsl
push
mov
mov
lock
jno
int
into
xor
ja
ret
das
clc
lcall
clc
int3
push
cmp
addl
adc
dec
int3
cwtl
mov
dec
sub
insl
mov
xchg
and
pop
aad
inc
aad
lcall
mov
or
push
test
test
cmp
aas
and
mov
xor
loopne
adc
xchg
lret
stos
decl
pop
sbb
movsb
cmp
add
pushf
xchg
je
xor
or
scas
xor
ljmp
xchg
xchg
lods
and
pop
and
mov
arpl
inc
xchg
xchg
dec
xchg
or
inc
cltd
shl
push
mov
pop
ret
ja
das
jg
ror
dec
pushl
rclb
mov
loope
sub
mov
les
adc
inc
sub
call
cmpsb
ss
adc
push
mov
sbb
mov
push
pop
sar
dec
mov
mov
inc
aaa
cwtl
movsl
int
hlt
sbb
xchg
and
lea
lcall
lock
shll
mov
pop
ljmp
dec
call
in
add
out
push
push
push
mov
and
dec
mov
lea
int3
xor
decl
cltd
fisttpl
ja
stos
push
lcall
pushf
add
pop
cld
dec
out
and
xor
jno
pop
stos
test
lock
push
xchg
lcall
inc
xor
lcall
lods
movsb
dec
out
push
movsb
pop
sbb
xor
fwait
call
pop
loop
adc
push
mov
insl
pop
ljmp
fwait
push
lahf
pop
jmp
dec
repnz
jecxz
idiv
xor
stc
pop
jge
inc
lret
jecxz
pop
sbbl
incl
inc
sbb
lret
pop
sbb
pop
jp
sarl
fwait
imul
sub
mov
lret
lcall
sahf
and
out
dec
jge
loope
insb
push
leave
lods
pop
data16
imul
call
push
imul
adcb
stc
mov
popa
data16
push
jmp
jmp
leave
pushf
mov
rorb
cmpsb
out
or
pop
mov
xchg
xor
jmp
lock
decl
and
clc
push
or
iret
sub
idivl
loope
pop
rolb
push
cmp
decl
int3
jmp
out
mov
or
hlt
jbe
fsubl
and
jl
cli
xchg
xchg
lret
cmp
xor
out
sahf
add
loopne
pop
rcrb
shlb
mov
cmp
loope
fwait
jl
loope
in
fadds
sbb
lods
lahf
xchg
inc
ljmp
or
sub
cmp
push
clc
and
and
in
sbb
lcall
ljmp
sbb
jnp
repz
daa
cmp
and
mov
xlat
jne
push
movsb
fdivr
dec
or
movsl
ficoml
fldt
andl
mov
add
bound
sub
or
dec
loope
push
arpl
pop
cs
mov
fnop
inc
imul
jne
inc
cmpsl
xchg
jo
shrb
pop
pop
mov
jmp
jmp
mov
imull
leave
dec
jb
sahf
mov
xlat
call
ret
sub
lcall
repz
inc
ds
repz
shrb
cli
mov
inc
loop
out
fcomip
lcall
icebp
push
sbb
cmp
jb
leave
insb
inc
xchg
cwtl
jg
out
xor
mov
fistpll
mov
sub
and
xchg
outsl
cli
ljmp
mov
fistps
test
xchg
sbb
fimuls
add
jnp
pop
fistpll
and
cmp
movsl
scas
lock
in
jmp
sbbb
jg
jmp
jns
sub
adc
push
outsb
adc
aad
sbb
mov
aas
jnp
dec
stc
aam
outsb
sbb
arpl
cmpsb
subl
scas
ficoms
push
push
mov
lock
call
fisttps
shll
imul
repz
lret
mov
rcrl
cwtl
sbb
popa
in
cmp
in
sarb
pop
clc
mov
adc
je
lret
inc
das
das
imul
jge
inc
jge
mov
jmp
shlb
testb
add
sbb
mov
sub
mov
push
jmp
nop
sarb
sub
pop
fsts
mov
xchg
ljmp
popa
in
bound
decl
push
pusha
cmp
fstps
xchg
mov
mov
test
movsl
mov
jmp
push
mov
subb
xchg
in
xchg
add
inc
pushf
insb
lret
leave
fs
dec
std
loop
test
adc
sbb
cmc
cmp
cmpsb
fsub
or
fcos
in
mov
hlt
xlat
jns
dec
enter
xor
shll
mov
jno
and
jecxz
lcall
push
xor
sub
jno
nop
mov
or
imul
sbb
fstpt
pop
das
push
push
gs
cmp
add
xchg
aas
dec
xor
outsl
pop
loopne
cmp
and
jae
data16
int
and
nop
jecxz
or
int
repnz
test
cmp
decl
and
sbb
rcll
sub
or
xchg
cmpsb
incl
jmp
out
idivl
adc
lcall
cmp
mov
scas
std
jmp
outsl
jmp
daa
sbb
xchg
pop
pushf
inc
inc
out
clc
pop
or
mov
pop
add
rclb
adc
sbb
pushl
mov
or
add
xor
pop
and
push
cmc
cs
aas
in
sub
add
sahf
sbb
lcall
add
sti
jmp
test
mov
stc
dec
in
enter
idiv
cmp
cli
mov
sub
hlt
adc
sub
leave
aam
in
clc
outsl
mov
ljmp
sbbb
push
jp
push
jle
lock
jmp
pop
repz
jg
jo
mov
jmp
push
sbb
cmp
notl
xor
xor
xor
sub
hlt
mov
pushl
call
fidivl
das
enter
mov
ds
pop
jmp
imul
mov
adc
mov
pop
or
mov
mov
sbb
pop
mov
sbb
in
inc
test
sub
xor
xchg
add
incl
mov
call
jecxz
mov
movsl
pop
mov
sbb
inc
pusha
js
ljmp
imul
test
jecxz
xor
mov
cs
fs
mov
xor
out
push
ljmp
popa
lock
daa
sbb
pop
les
in
mov
scas
lcall
clc
push
pop
loopne
stc
pushf
xor
gs
dec
sub
sbb
jp
mov
pushl
dec
enter
push
adc
sub
xor
shr
leave
mov
jbe
sbb
and
incl
pop
hlt
add
adc
mov
add
cmp
mov
jmp
ljmp
sbb
fdivl
xchg
adc
push
clc
mov
aam
mov
jecxz
lcall
inc
mov
mov
idivl
sbb
cmp
jle
pextrw
mov
shrb
dec
inc
push
fs
cmc
out
dec
aaa
sub
pop
pop
add
jg
lea
cld
mov
mov
adc
les
loop
mov
test
xchg
mov
outsb
call
pop
popa
pop
sbb
pop
aad
ljmp
xchg
mov
mov
daa
push
sahf
sub
scas
mov
fdivrs
dec
cs
pop
sub
adc
test
push
push
jmp
push
out
gs
and
outsb
push
stos
sub
push
dec
and
push
jg
in
jle
loop
imul
mov
inc
sarl
xchg
lret
cmc
rorl
cmp
dec
ljmp
js
or
movsb
fistpll
mov
cs
mov
push
sub
sub
rol
das
jle
xchg
setb
jns
testl
je
adc
adc
jnp
jg
sub
sub
call
test
or
add
jae
sub
lret
rcrl
incl
lds
cmp
mov
lcall
mov
mov
popa
mov
jl
dec
inc
pop
div
and
sbb
je
and
and
fimull
mov
mov
xchg
dec
mov
ror
add
ljmp
sub
aas
fimull
mov
in
lea
outsb
cmc
push
cmpsb
int3
push
pushl
call
ja
xor
in
es
sbb
jmp
lods
and
insb
ljmp
or
cmc
sbb
lods
mov
xchg
pop
pop
adc
xchg
mov
fwait
jmp
lock
mov
stos
push
mov
stos
pop
and
loopne
leave
xor
xchg
pop
xchg
dec
or
pushf
popf
add
out
stc
in
mov
mov
dec
add
push
mov
sbb
jp
push
push
lds
jns
lea
incl
or
sub
push
dec
push
test
jo
loope
cmp
add
mov
decl
jmp
or
sub
pushf
out
mov
lock
aad
mov
adc
cltd
xchg
and
in
idiv
loop
jge
push
ficoml
pop
adcb
and
sahf
dec
jae
xchg
jg
in
push
fwait
adc
add
xor
les
lret
mov
jg
incl
test
daa
into
daa
mov
or
ljmp
pop
xor
xchg
movsl
into
fadds
test
bound
push
mov
into
int
and
jl
in
sub
and
fidivs
jmp
pop
js
nop
mov
cltd
mov
int3
ds
xchg
aam
xor
int3
shll
inc
add
jg
cld
xor
rorl
loope
push
cmpsl
mov
movsl
mov
xor
mov
ja
mov
int
fsub
push
or
or
push
lock
ljmp
repz
insb
pop
out
bound
xchg
lret
and
pop
sub
xor
push
dec
sub
sbb
and
mov
jp
push
sub
jmp
xor
jae
pop
lds
sbbb
push
add
lods
mov
add
inc
arpl
out
or
scas
pop
push
mov
push
es
cmpsl
jl
jp
cmpsb
mov
jmp
notb
inc
ss
mov
inc
popa
sbb
out
sbb
or
out
loope
idivl
mov
cltd
adc
pop
stos
dec
or
sbb
inc
out
xchg
xchg
jae
pop
stc
or
lret
and
jnp
push
xchg
sub
or
out
sbb
scas
dec
popa
jmp
dec
and
call
inc
push
dec
es
mov
jbe
xrelease
pop
add
test
test
fimuls
mov
and
jbe
mov
adc
out
arpl
adc
dec
std
test
clc
pop
lret
adc
lea
jne
pop
mov
sti
push
daa
mov
mov
lret
aaa
jmp
xor
insl
xchg
adc
xor
in
pop
movb
add
ja
cmp
mov
icebp
jg
addl
adc
add
ret
or
rcl
mov
inc
sub
xlat
jge
imulb
jmp
jecxz
inc
push
out
stos
outsb
sbb
mov
xchg
pop
in
dec
sti
add
xchg
loopne
add
out
inc
or
add
cli
mov
mov
fiaddl
and
pushl
xchg
push
cmp
jne
sub
xchg
inc
xor
lcall
inc
fistpll
add
fimull
das
sarl
mov
incl
sarl
push
xchg
fwait
mov
sahf
les
jo
sbb
scas
adc
pushl
sub
sub
push
push
aas
mov
leavew
xchg
or
decl
jo
xor
pop
arpl
sub
mov
clc
repnz
dec
push
jp
fidivrl
add
test
mov
mov
dec
or
repnz
lcall
scas
adcb
icebp
mov
mov
cld
sbb
rolb
pop
add
incl
adc
aas
dec
mov
sarb
pop
mov
or
insl
ss
jmp
les
ss
das
xor
push
xor
nop
push
es
out
aad
sub
or
mov
js
in
mov
test
enter
sbb
jmp
cmp
lcall
mov
or
add
js
in
dec
adc
mov
push
loop
inc
mulb
inc
lret
jmp
inc
repnz
and
cld
les
adc
rclb
enter
stos
push
lahf
fnstenv
mov
mov
repnz
jne
lcall
or
adc
cmp
and
push
mov
pop
inc
inc
insb
push
imul
jp
mov
dec
or
aad
cmc
cltd
push
mov
pop
xchg
sub
dec
xorb
test
inc
leave
xchg
aaa
test
sbb
mov
test
iret
fsubr
movsl
adc
pushl
add
shll
jecxz
jne
cwtl
enter
stc
cli
enter
sub
dec
or
sar
inc
xchg
sub
fxch
loopne
sbb
popf
lahf
sbb
pop
lea
clc
outsl
clc
cmp
mov
sbb
sbb
outsb
dec
fwait
roll
ljmp
mov
fidivl
lret
cmpsl
cmp
adc
jg
lods
out
outsb
ljmp
call
mov
dec
sub
cmp
cltd
repnz
sub
mov
aas
incl
cmp
push
pop
imul
jno
sub
mov
stos
add
mov
out
push
fbstp
add
ficoms
out
xchg
cld
ret
mov
lcall
insl
mov
fnstcw
in
es
popl
jae
sub
out
jl
jmp
jmp
in
push
fcomps
add
inc
cmp
pop
popf
and
mov
clc
in
inc
pop
aad
inc
out
jle
mov
jnp
mov
sbbb
ss
pop
hlt
pop
cmp
sub
lods
js
xor
mov
pop
in
xchg
loopne
test
sbb
cld
test
iret
call
push
lcall
and
leave
ja
arpl
leave
in
sub
lcall
add
lods
sub
sbb
xchg
xchg
out
hlt
into
jbe
mov
test
mov
decl
lds
or
mov
and
into
sub
lret
xchg
mov
data16
sbb
cld
aas
sub
ljmp
cmp
sar
incl
xchg
cmp
fs
and
jecxz
add
sbb
cmp
pushf
add
pushl
cltd
xchg
fsubrp
loope
push
push
fs
fstpt
push
bswap
cmp
mov
mov
cmp
inc
incl
ret
jne
fdivl
xlat
cmp
mov
adc
xorl
pop
mov
test
mov
sbb
movsb
jecxz
imul
adc
add
jl
pop
xlat
sar
call
pusha
jno
and
and
lods
movsl
ds
sti
and
xchg
notl
adc
push
dec
call
jbe
xchg
push
movsl
mov
addb
xorb
cwtl
cmp
dec
mov
pushl
sbb
dec
xorb
xchg
pop
push
adc
out
cmp
mov
and
test
enter
push
dec
andb
lahf
lcall
inc
in
adc
aaa
addr16
xor
fdivp
sub
pop
push
mov
add
mov
pushl
clc
insl
mov
add
adc
fdivrs
call
push
sti
mov
scas
mov
ss
mov
je
inc
or
addb
xchg
cli
hlt
adcl
decl
scas
sahf
xchg
cmp
sub
repnz
push
fmull
cs
pop
and
std
and
add
decl
fsub
sbb
imul
add
fsub
cmpsb
mov
inc
mov
adc
ds
inc
ror
xor
jno
and
mov
ljmp
std
rcll
pop
xchg
mov
int
es
aaa
cmpl
inc
mov
iret
mov
ljmp
shl
lret
jns
xchg
mov
pop
mov
aad
mov
lcall
mov
cmp
adc
pop
add
and
jle
adc
push
lret
int
pushl
mov
mov
sahf
nop
sbb
mov
inc
mov
cmpsb
or
jg
incl
mov
or
testl
dec
sub
rcll
call
dec
popa
outsl
push
cwtl
call
cmp
cmp
cwtl
xchg
dec
mov
mov
nop
or
outsb
testb
insb
mov
mov
and
sbb
ljmp
inc
xor
mov
cmp
aas
dec
dec
push
mov
loope
iret
sar
icebp
adc
popf
jp
enter
dec
adc
stos
pushf
jmp
mov
jg
sub
decl
pop
gs
lcall
dec
mov
int3
lret
inc
mov
sub
sub
decl
call
rep
adc
lcall
pop
push
xchg
mov
incl
push
aam
pop
cmpsb
lcall
and
dec
dec
das
and
test
decl
mov
adc
adc
add
mov
das
mov
idiv
decl
clc
or
mov
cmp
inc
xor
popf
orl
test
btc
xor
mov
adc
scas
mov
test
lods
adc
add
dec
idivl
inc
cmpsl
cmp
aam
int3
xor
test
daa
jbe
xor
pop
xor
lcall
aad
cmpsb
mov
ss
pop
les
pop
push
adc
or
adc
fldl
dec
popf
aam
lcall
in
js
in
mov
incl
adc
jno
lcall
mov
test
movsb
cs
push
ds
push
lods
stos
xor
xor
dec
mov
pop
mov
stos
or
push
popa
out
mov
mov
push
jae
cld
mov
popa
sbb
pop
push
repz
lcall
push
add
adc
mov
fnstcw
pop
and
lcall
dec
js
pusha
cs
fldcw
test
enter
sahf
or
cmp
movsl
jg
call
sbb
aam
popa
xchg
add
cmp
xchg
jle
aas
das
ror
add
xchg
sahf
aas
and
inc
ljmp
mov
push
sub
and
dec
fsubrl
dec
clc
mov
push
jo
loop
jne
test
push
mov
in
cmp
ss
xor
mov
cs
xchg
in
dec
aad
pop
jne
insb
xchg
repz
jb
add
call
int3
out
xchg
dec
dec
sub
xor
js
scas
sti
xor
dec
push
ss
jns
mov
es
sub
outsl
inc
sub
addb
movsl
sub
jmp
cmp
jle
dec
out
cmp
daa
dec
mov
inc
aad
repnz
add
arpl
nop
fistpl
in
ljmp
cmp
mov
xchg
lods
jo
inc
sahf
sbb
add
bound
mov
dec
loope
call
push
cli
lahf
xchg
test
or
xor
icebp
fsubl
jg
cltd
loopne
sbb
rcrb
pop
xor
cmc
jns
mov
push
out
lahf
pop
stos
xchg
dec
push
xchg
out
push
fistpl
ds
cmpsb
sbb
pop
mov
add
jge
sbb
jg
decl
in
sbb
js
cmpl
jne
xchg
cmpsl
repnz
sar
pushl
xchg
scas
addr16
xchg
ret
dec
int3
jl
xor
int3
pop
popf
sti
push
add
in
jg
sub
cli
test
push
mov
cmp
fimuls
or
lock
in
add
lahf
das
test
jl
jnp
pop
les
clc
push
aas
js
inc
and
mov
jnp
mov
repz
mov
push
imul
decl
adc
movsb
insl
pop
enter
clc
icebp
sbb
fs
insb
call
scas
push
xor
call
dec
inc
aad
popa
xorb
es
xchg
and
or
mov
std
loopne
mov
mov
or
test
dec
lret
push
leave
jle
ja
shr
adc
cmpsb
xor
pop
int3
and
test
fcmovnb
xor
mov
dec
loop
push
mov
hlt
ficompl
push
ficomps
mov
add
sub
out
fistps
cmp
jmp
sub
mov
scas
bswap
mov
popf
movsb
and
xor
das
out
fbld
incl
mov
sbb
cmpsl
xchg
sub
mov
push
ret
inc
cmpsb
aad
push
add
inc
or
rcr
in
jp
adc
cmp
jge
pop
pop
pop
dec
xlat
pop
mov
mov
xchg
push
dec
fcoml
push
inc
andb
push
jmp
dec
test
vmovntpd
addr16
push
sbb
out
int
pop
push
inc
jmp
push
adc
lea
repnz
xor
lret
mov
mov
in
js
repz
push
xchg
and
icebp
cmp
jmp
dec
call
insl
inc
and
xchg
mov
lea
in
mov
add
mov
jmp
jns
int
mov
xor
addr16
cmpsb
xchg
push
pop
push
xchg
imul
not
cld
aaa
xor
dec
jl
popf
nop
stos
mov
cmp
call
push
fwait
lahf
or
fmuls
sbb
or
or
fmuls
test
inc
lcall
test
cmp
and
jne
push
cmpl
das
sar
insb
mov
sub
js
lods
pusha
sarl
or
ljmp
jmp
ret
fimull
lcall
inc
lds
dec
ds
sbb
sub
jle
adc
aas
outsl
mov
add
mov
jp
mov
call
pop
js
pop
test
mov
movsb
sub
rcl
es
pop
loopne
aam
stos
incl
cwtl
mov
and
dec
cmp
and
loope
sbb
mov
aas
or
ds
jecxz
mov
jne
incl
mov
inc
xor
fwait
jno
inc
clc
bound
mov
mov
icebp
xor
subb
jg
add
aas
stos
mov
pop
loopne
call
imul
aam
out
ja
jge
js
mov
xor
in
daa
scas
xor
mov
js
cmp
xchg
int3
jnp
loope
xchg
or
insl
push
ljmp
dec
pop
push
jp
scas
pushf
pop
imul
push
es
jge
inc
sub
jmp
inc
mov
mov
out
out
repz
adc
daa
ret
pop
adc
stos
jmp
jbe
sub
insl
loopne
mov
pop
sbb
mov
mov
cmp
lcall
ret
cld
mov
xchg
pop
xor
mov
lock
aaa
sub
jno
jmp
lcall
repnz
std
out
movsl
shr
outsl
xchg
sbb
stos
fsub
in
jno
add
xor
ljmp
or
push
push
fstpt
cltd
or
cwtl
or
sarb
test
mov
mov
movsl
decl
mov
cmp
nop
shlb
lret
xchg
mov
stc
dec
popa
push
pop
pop
inc
sbb
setbe
jl
pop
clc
dec
add
mov
add
jae
adc
cmp
in
xchg
jne
add
mov
sbb
jae
mov
jno
rolb
outsb
clc
jmp
cmp
sub
into
in
clc
test
jmp
cmpsb
js
repz
mov
rcrl
imul
dec
mov
call
push
mov
mov
jo
push
sbb
sarb
out
fstpl
mov
dec
push
loope
dec
cltd
push
mov
pop
sub
lea
or
call
jb
inc
inc
push
cmc
adc
cmp
lret
and
adc
sti
lea
fistpl
mov
jns
push
mov
ljmp
rcrb
in
addr16
sbb
imul
push
ja
out
movsl
sub
and
jecxz
incl
aad
mov
ss
bnd
push
adc
mov
push
es
add
cmpsl
incl
dec
cmp
stos
iret
fdivl
icebp
inc
je
addb
cmp
push
popa
loop
push
push
jg
sahf
sbb
pop
pop
les
and
inc
push
mov
arpl
adc
incl
or
add
enter
cmc
popa
cmpsl
push
mov
jge
push
int3
push
out
jb
fst
in
dec
mov
mov
push
jecxz
ja
pop
sbb
test
xlat
pushl
scas
cmp
nop
loop
jnp
xor
push
mov
pop
adc
push
jge
push
jmp
push
test
mov
and
mov
dec
lods
xchg
dec
add
lods
fidivrl
fidivrs
out
jg
dec
je
sbb
clc
add
stos
push
push
movsb
or
sub
vmovdqu
lret
ljmp
sub
inc
mov
insl
and
cmpsl
imul
mov
filds
pop
std
pop
call
cmp
pop
dec
pop
test
ror
mov
lahf
stos
or
pop
adc
mov
loop
shll
adc
clc
lock
lcall
xor
push
mov
aaa
adcl
mov
dec
hlt
mov
lcall
imul
xor
jbe
out
jns
sbb
cmp
dec
fnstsw
xor
imul
mov
aad
add
adc
lcall
das
outsb
cmc
pop
aaa
cs
or
add
fs
jl
loope
inc
jle
ljmp
xorb
decb
aaa
dec
cwtl
loope
fldcw
cld
add
js
push
lret
sub
or
out
mov
enter
cmpsl
jbe
jne
jg
out
pop
xchg
data16
push
inc
inc
sub
or
addr16
ljmp
in
add
test
fs
adc
aaa
mov
popa
testb
ds
mov
add
loop
add
shl
mov
aam
mov
add
fadds
xchg
sbb
pop
iret
call
cmp
into
rorl
cmp
xor
mov
jbe
sti
or
ret
xor
decl
mov
inc
xchg
cmp
cmp
fimull
mov
dec
add
push
ret
mov
rolb
mov
jmp
cs
inc
mov
js
scas
jmp
mov
pusha
into
xor
sub
jg
decl
pop
or
jg
les
movsl
dec
inc
add
filds
test
push
inc
sbb
jp
pop
call
jnp
gs
aas
dec
loop
mov
push
sbb
cld
test
sbb
leave
test
call
adc
ja
and
xchg
dec
loopne
sub
cli
out
push
jp
fcomps
pushl
sbb
or
mov
pop
pop
filds
cmp
in
in
movsb
jmp
pushl
je
in
in
das
mov
es
add
push
repnz
mov
lahf
fdivrp
inc
jb
push
pop
popa
inc
mov
enter
fbstp
dec
in
movsb
jae
ret
decl
cs
lock
add
mov
outsl
cmp
mov
divb
std
stc
test
sar
inc
fwait
xchg
mov
jge
mov
adc
mov
inc
inc
dec
test
orb
hlt
fwait
shlb
push
mov
xchg
inc
in
push
outsl
sbb
pop
cld
cmp
xor
lret
decl
test
dec
push
lahf
fisttps
push
jecxz
mov
mov
sbb
call
cmp
mov
adc
into
sti
pop
push
inc
and
lods
int
dec
mov
test
jg
movsb
jb
arpl
dec
adc
aas
pop
andl
int3
jp
shlb
and
sub
mov
test
pop
mov
mov
test
jbe
adc
push
mov
cmp
out
pop
or
fdivs
scas
notl
pop
je
xchg
les
loopne
pushl
pop
xchg
fsubs
sbbb
push
ror
test
push
xchg
mov
add
test
jmp
cld
fadds
int3
gs
nop
pop
mov
jno
fsubs
xchg
aad
int3
mov
mov
mov
std
jne
ss
push
addr16
clc
not
cmc
js
pop
add
mov
mov
outsl
call
in
rorb
in
cmp
inc
push
movsl
gs
jmp
shrl
cmp
fnstenv
js
outsl
sub
fstl
mov
pop
mov
add
cmp
dec
dec
clc
dec
ret
rcll
les
jl
pusha
call
lcall
push
dec
xchg
ret
test
lret
push
rorb
cmp
jmp
call
into
jbe
cmc
sub
ds
insb
in
je
push
mov
pop
cld
jnp
mov
pop
and
cmp
inc
sbb
sub
mov
cli
daa
pop
add
out
ljmp
incl
jp
repz
stc
jne
cmpsl
pop
pop
add
mov
cmpsb
mov
or
push
cmp
decl
mov
fcompl
mov
adc
mov
mov
pusha
in
dec
adc
mov
sarl
sub
fwait
and
xchg
repz
inc
fs
adc
pop
jb
leave
outsb
xchg
ljmp
dec
push
fstpl
push
push
dec
add
cs
int
push
icebp
jecxz
outsl
mov
leave
mov
scas
add
xor
mov
rcrl
pop
ljmp
add
subl
or
mov
addr16
push
shr
adc
mov
lods
mov
out
cmp
xor
test
cld
sbbl
popa
movsl
lcall
jnp
push
push
lcall
icebp
fsub
std
jno
insb
loope
int3
jg
fldenv
inc
call
cld
lcall
push
adc
ficomps
adc
call
call
incl
mov
cmp
jge
and
pop
enter
or
xor
jmp
pop
or
das
dec
add
fsub
sbb
cmp
int
jno
mov
inc
icebp
push
cld
pop
push
dec
cmp
pushl
popa
out
add
shrl
pop
clc
lret
nop
sub
mov
scas
ffreep
insb
inc
lret
rorl
repnz
lcall
out
ret
fs
psllq
mov
mov
mov
sub
movsl
adc
sbb
addb
sbb
mul
sbb
std
cwtl
incl
and
stos
std
push
jns
mov
mov
mov
cmpsl
dec
int
arpl
push
or
out
sub
incl
mov
bound
dec
cmpsl
adc
es
mov
int
sbb
pop
inc
cmp
cmc
pop
inc
std
mov
ljmp
fsubl
sub
outsl
sub
jae
into
sub
jg
stc
ret
repz
push
cmpsb
jg
inc
and
mov
stos
sbb
sti
ss
sbb
push
pop
cmc
pushl
xor
jl
aas
imul
mov
movlps
push
rclb
sarl
xchg
scas
cmpxchg
aad
jle
nop
js
dec
ret
cmpsl
out
jmp
nop
mov
jg
inc
ja
adc
ljmp
jo
dec
ja
push
fisubs
incl
dec
dec
test
inc
lret
add
pop
rclb
inc
dec
mov
adc
mov
aaa
std
or
push
and
push
cmp
jle
hlt
shrb
lcall
fbstp
pop
jl
jg
repz
mov
sahf
inc
test
lcall
ljmp
mov
pop
lcall
dec
or
jne
bound
xchg
shrb
ds
xchg
fucomi
jmp
mov
jns
sub
jle
xor
jp
mov
sub
in
xchg
hlt
incl
insl
out
faddl
push
inc
mov
cld
std
cmp
loop
push
xlat
adc
std
push
fwait
xor
dec
js
and
jns
popa
fs
jnp
adc
adc
loop
repz
mov
mov
incl
insl
hlt
dec
cwtl
or
gs
aam
mov
loopne
sbb
loopne
fbld
movsb
jmp
test
ds
popl
ljmp
jg,pn
daa
icebp
sub
incl
loop
call
ret
push
xchg
fwait
daa
outsl
pop
bound
xlat
fstpl
mov
jmp
ljmp
jmp
pop
add
popf
mov
add
mov
cwtl
cwtl
jg
dec
push
cmp
add
inc
xchg
and
lret
mov
jns
loope
pushl
cld
lcall
lret
ret
dec
inc
pop
xchg
fstpl
mov
mov
mov
cmc
fcomip
scas
aam
mov
sbb
xchg
cltd
mov
sahf
inc
mov
ljmp
movsl
scas
lcall
and
dec
mov
sub
add
in
inc
xlat
lds
dec
mov
xacquire
cmc
les
mov
lret
sub
adc
sbb
xlat
sbb
add
pop
subb
fidivs
cmp
push
loopne
xlat
xor
addl
mov
mov
mov
pop
push
and
xchg
cs
add
enter
xchg
repz
decl
das
xchg
and
pop
shl
addr16
decb
iret
and
cmpsb
jp
xchg
sahf
stc
or
data16
call
stos
aas
xor
les
push
sti
repz
mov
add
mov
scas
sub
jge
jmp
popf
divl
mov
jmp
mov
hlt
in
dec
test
call
jge
mov
sahf
cmpsb
sahf
pop
lret
dec
ljmp
ss
addb
add
mov
sbb
es
cmp
dec
std
push
cmp
lahf
in
push
inc
dec
mov
adc
shrl
scas
xor
or
push
clc
mov
cmp
incl
xchg
inc
fmull
push
loope
xlat
jp
xchg
mov
call
mov
js
push
xor
rcrl
pushl
roll
lcall
scas
or
insb
in
ret
in
hlt
pop
pop
lret
in
or
xlat
movsb
pop
or
jg
xchg
fnstsw
les
imul
test
aad
adc
ja
out
jge
stos
pop
mov
repz
cmp
shrl
inc
pushf
pop
stc
pop
andl
lcall
inc
xchg
pop
cmp
jle
or
dec
test
fisubl
mov
mov
dec
shrb
xchg
push
pushl
flds
gs
mov
adc
sub
jge
aad
rcrl
fs
pop
mov
clc
mov
dec
cmc
mov
dec
cmp
xlat
es
push
pop
jbe
repz
mov
xchg
lcall
and
je
sub
shll
bound
jbe
dec
or
mov
ljmp
push
sbb
inc
or
in
fimuls
adc
jmp
sub
jg
pop
test
cmp
mov
sbbl
arpl
mov
ljmp
push
xor
bound
neg
push
mov
cld
lret
mov
pop
andl
and
xor
sub
and
or
test
pop
fs
std
and
push
xor
frstor
scas
insb
cmp
fistps
test
mov
or
mov
sbb
inc
jae
repnz
loope
inc
lds
xor
xor
sub
pop
popf
int3
jecxz
xor
mov
cwtl
fwait
lret
mov
xchg
loope
lea
fistps
movsl
mov
dec
enter
pusha
ljmp
xor
jmp
push
test
shl
hlt
mov
mov
jne
xor
rol
and
je
jnp
fistps
xor
pop
mov
jle
inc
xchg
inc
xchg
xchg
inc
push
push
adc
in
loop
add
lock
call
adc
daa
ret
std
adc
adc
pusha
and
rcrb
mov
pop
out
mov
adc
and
pop
lret
push
cmp
and
jg
je
js
jecxz
pop
push
lock
jp
movsl
mov
ret
sarb
xor
mov
or
and
in
loope
ljmp
shl
outsl
push
xchg
addr16
mov
jmp
hlt
mov
cmp
push
je
jo
adc
sub
sahf
in
xchg
cmpsl
jle
add
pop
pop
call
cmp
cmp
pop
mov
adc
mov
in
ret
push
rcl
imul
push
js
icebp
rol
push
cld
jmp
or
push
aas
je
sub
cs
mov
mov
jg
lock
aas
out
mov
pop
andl
cld
cmp
cmc
out
cmp
lock
jmp
in
js
push
frstor
cmp
stos
push
mov
orl
decl
ret
shrl
adc
out
inc
hlt
jp
jo
mov
call
scas
test
add
dec
repz
push
out
sbb
scas
aaa
xchg
xchg
in
pop
and
xchg
scas
jg
pushf
cmpl
adc
int3
pop
and
push
add
or
test
aas
shrl
adc
pop
add
jne
add
mov
mov
xchg
fdivr
and
lret
push
push
iret
pop
imul
decl
adc
test
xor
push
je
and
xor
xor
ret
repnz
pop
ljmp
incb
lea
in
cmp
sahf
mov
aaa
je
fstpl
mov
imul
lcall
inc
push
ret
js
imul
in
pop
stos
dec
lock
test
add
out
push
ret
mov
jmp
lret
xchg
pop
inc
pop
fdiv
bound
pop
shrd
xchg
mov
jg
jg
pusha
cmpb
pop
or
repnz
insl
dec
pushf
rorb
and
faddp
jo
mov
mov
icebp
lcall
aas
jae
dec
arpl
mov
mov
cmp
fisttps
fcmovb
sub
sbb
dec
aas
ljmp
int3
stc
push
sbb
lcall
in
or
in
icebp
mov
test
xor
and
out
clc
mov
fnstenv
mov
push
jge
adc
pop
pop
loope
ds
or
ljmp
or
imul
lock
dec
into
cmp
pop
add
jg
xchg
int3
mov
orl
pop
jnp
push
loop
and
sar
rorl
xlat
xchg
jmp
mov
test
xchg
cwtl
imul
dec
jns
add
out
or
les
ljmp
pushl
fimull
and
inc
push
sbb
or
push
and
push
loopne
lcall
jp
stc
jae
fadds
rcr
jge
addr16
jl
out
sub
andb
mov
inc
addr16
sti
cmovb
or
mov
pushf
add
sbb
idiv
decl
stos
idivl
pop
jne
or
nop
lcall
lock
push
lcall
js
mov
clc
xor
and
sub
aas
in
lcall
aam
jg
fdiv
insb
xchg
push
movsb
lahf
lret
push
decl
lods
mov
shrl
xlat
imul
cld
mov
jnp
jns
push
bound
pop
ret
cmp
sbb
in
add
iret
clts
and
cli
nop
push
fwait
pop
mov
mov
push
push
fisttps
fildll
push
xor
mov
sbb
cmp
stc
lea
push
into
outsb
xor
push
pop
sahf
cmpsb
mov
fwait
icebp
incl
mov
movsb
loope
addr16
dec
fwait
enter
jp
loope
fs
push
sub
insl
andl
sbb
pusha
push
add
pushl
cli
push
sbb
dec
sbb
cmp
sbb
pop
jo
jno
inc
jl
mov
addr16
frstor
int3
push
mov
sbb
mov
inc
add
adc
xor
xchg
inc
jo
or
addb
sahf
jg
scas
and
call
hlt
pushf
out
pusha
fsqrt
cmp
in
push
xor
dec
jl
je
mov
pop
cmp
in
fcmovnbe
cld
and
repnz
adc
and
std
push
stc
sbb
cmp
inc
scas
cmp
jmp
repnz
pop
out
jg
jb
or
xchg
pop
sub
sub
mov
repnz
out
fisttpl
sahf
fldenv
inc
add
push
nop
mov
pop
and
xchg
jnp
mov
int
dec
pusha
dec
pop
sbb
dec
dec
cli
rorb
jp
inc
es
lahf
xchg
scas
cli
xchg
push
xchg
push
lahf
adc
dec
into
dec
fdivr
jl
inc
pop
dec
call
or
jp
ljmp
sbb
imul
xchg
cmpl
out
mov
mov
dec
aaa
fbstp
sub
hlt
sub
cli
xor
push
mov
ret
jmp
sbb
push
or
mov
sbb
cs
xchg
or
lcall
mov
mov
or
bound
sbb
test
xchg
inc
and
cmp
ficomps
pop
in
lods
sbb
ljmp
push
mov
in
xchg
aaa
cld
mov
dec
inc
fwait
out
int
push
push
or
push
ret
imul
add
ds
mov
cmp
add
mov
shlb
sub
incl
int3
jae
jo
add
lods
xchg
lahf
jge
adcl
bound
pop
ljmp
push
aam
add
inc
or
mov
ja
mov
adc
cli
ret
in
in
adc
cmp
sbbb
jge
xor
cmpsb
cmpsl
add
subb
fisttpll
fldcw
jmp
insb
push
lcall
dec
or
inc
jl
push
inc
adc
push
xchg
lcall
fldenv
int3
icebp
cmc
or
setne
pop
or
in
lret
fwait
pop
push
sar
jg
jle
into
jecxz
mov
mov
out
test
addb
or
xor
jg
les
imul
dec
xchg
outsl
int
mov
icebp
adc
jg
cmp
cli
mov
int3
clc
movsb
cwtl
fnstenv
out
js
add
rcrl
in
int3
cld
call
cs
cmp
outsb
add
add
js
sbb
jbe
mov
ss
add
pop
fisubs
imul
cmp
xor
cmp
or
jg
aad
lcall
pop
push
pop
cmpsb
js
enter
lock
pusha
xchg
and
dec
or
cmp
or
and
dec
push
shll
xchg
mov
test
leave
xchg
cmp
xchg
gs
pop
rol
mov
push
jmp
in
aaa
mov
shlb
fimull
fcomip
dec
pop
mov
jnp
push
cli
jmp
int
cli
xchg
xchg
pavgw
xor
and
push
sahf
nop
and
xor
mov
outsb
mov
sub
pop
loopne
imul
inc
cld
and
mov
sbb
imul
jae
xor
int3
in
cmp
adc
mov
sub
dec
mov
int
pusha
jnp
adc
mov
sti
leave
ss
data16
gs
addl
enter
lahf
icebp
jno
rol
or
adcb
jmp
lcall
testl
jnp
pop
inc
cwtl
shll
insb
jg
mov
or
ljmp
sbb
jecxz
arpl
ljmp
fstl
clc
fisttpll
xor
dec
pop
std
pop
mov
fldl
popa
sub
mov
mov
pop
lds
push
ficoml
xchg
xor
push
push
push
xorb
cmp
inc
and
jecxz
dec
outsl
cli
lcall
cs
movsb
or
push
push
data16
leave
bswap
imul
call
out
into
mov
into
sub
xlat
ja
call
ljmp
sbb
pop
out
fwait
cmpsl
loop
pop
lcall
add
xor
xor
cmp
fwait
inc
ds
add
imul
adc
push
mov
popa
stos
xlat
lock
jo
incl
inc
xchg
mov
je
sahf
mov
mov
sbb
ljmp
pop
add
cs
push
imul
xchg
mov
and
sub
call
cs
popa
lret
les
push
cmp
jle
dec
es
cmpsb
add
push
popf
lock
fcomip
or
fsubrl
mov
mov
xlat
clc
inc
add
das
cwtl
enter
push
jnp
xor
xchg
mov
orl
push
sub
and
jo
mov
jle
dec
jmp
and
lods
xor
mov
mov
sti
xor
xor
fs
xchg
outsb
movb
sbb
pushl
mov
call
pushf
cmp
int3
shl
xor
jns
inc
mov
and
push
subb
call
lds
lret
inc
arpl
add
cmp
jge
add
decl
icebp
or
fildll
lea
pop
call
pop
mov
shlb
fwait
ss
ja
ds
in
loopne
xor
mov
ljmp
dec
pop
sbb
mov
jno
sub
shl
fs
aas
in
push
out
mov
movsb
and
pushl
xor
mov
or
xlat
jge
pop
and
xor
dec
ret
sbb
push
fnstenv
decl
adc
dec
lret
fstl
ja
loop
bound
rolb
mov
lcall
push
out
xchg
sub
mov
aam
or
pop
mov
decl
mov
and
sbb
int
clc
lahf
std
ds
into
sarl
mov
cli
stc
pushf
lahf
mov
int
ljmp
mov
adc
outsl
mov
dec
out
in
sub
jg
lock
fsubrs
sbb
rorb
loope
leave
pop
fs
incl
test
scas
adc
mov
jnp
push
xor
jae
js
jmp
jmp
ljmp
or
mov
pop
fs
lods
fcom
test
jecxz
sbb
ljmp
test
outsl
or
popf
push
dec
cs
pcmpgtd
jg
xchg
repz
xor
push
cld
sahf
mov
or
scas
jns
pop
mov
fs
jmp
mov
ds
or
cmp
sub
mov
inc
and
incl
lods
outsl
push
std
mov
mov
movsl
inc
mov
pop
es
sbb
icebp
fs
jmp
je
dec
cmpsl
pop
jae
mov
scas
out
scas
cmp
xor
adc
scas
sbb
decl
jb
jmp
push
stc
xlat
adc
sub
shrl
pop
fdivrs
adc
push
mov
xchg
into
push
inc
das
sahf
cmpsb
call
mov
lods
add
fcomip
pushl
mov
int
and
out
mov
outsl
lds
aam
mov
cmp
mov
ljmp
lcall
testl
jmp
hlt
mov
jne
jl
sub
pushl
jne
cmpsl
dec
pushf
sub
jae
mov
outsl
repnz
call
arpl
scas
pushf
mov
int
pop
decl
xor
fiaddl
sbb
sub
arpl
jne
cli
lcall
jmp
and
adc
jnp
popl
je
mull
mov
add
mov
sbb
decl
mov
test
fcomps
adc
inc
into
push
and
lahf
mov
call
mov
cwtl
cmp
jp
outsl
inc
mov
cmp
pushl
mov
mov
fsub
xlat
insl
lds
popa
mov
das
mov
jbe
inc
movsl
push
jns
test
jmp
ss
repz
jge
fisttpll
lcall
das
cmp
jae
call
ss
mov
jnp
mov
out
fxch
int3
imul
outsl
cli
dec
push
inc
pop
jl
into
fisttps
arpl
outsl
sub
popa
test
mov
add
loopne
loopne
call
std
nop
xor
jmp
sbb
gs
mov
test
test
jp
mov
mov
hlt
in
cli
pop
pop
sub
cmp
lcall
push
sub
jmp
mov
ljmp
rorl
jmp
or
and
cmpsb
jmp
call
fnstsw
pop
jg
push
ficoml
or
cmp
clc
pushl
push
std
lahf
mov
mov
ds
and
ret
aam
xor
test
decl
push
into
cmpsl
and
jg
dec
fcmovnbe
pop
jne
popf
nop
jg
push
sub
sbb
lock
jp
mov
sbb
jno
mov
je
cltd
aad
pop
pop
enter
push
movsl
jnp
stos
test
adc
rcr
aam
cmc
dec
insl
mov
mov
pop
mov
sub
das
clc
cmp
adc
repnz
bound
mov
fidivrs
mov
ljmp
dec
mov
and
int
mov
int3
add
iret
and
mov
jmp
scas
clc
xchg
call
lods
lods
jl
or
add
bound
scas
rolb
mov
jp
lret
add
jmp
imul
inc
out
cmp
lds
xor
jnp
js
ljmp
pop
sub
fbld
sub
or
in
cmp
mov
or
push
call
sti
push
adc
and
jo
dec
push
cmc
imul
dec
and
pushf
dec
jle
mov
pop
jno
ja
mov
out
popf
jae
pop
jle
lret
nop
jno
int
incl
clc
xchg
pop
push
and
jns
inc
repnz
cmp
je
pushl
add
cmp
test
pop
pop
xchg
inc
andl
mov
xchg
cli
rolb
idivl
out
lock
push
cmpsl
mov
push
add
out
dec
push
hlt
int
pop
out
push
nop
dec
cld
jge
xchg
cmc
cmp
xchg
les
jo
outsl
adc
adc
out
fwait
xchg
and
in
adc
loop
pushl
inc
mov
mov
scas
lea
inc
imul
lods
adc
jmp
out
lret
mov
sub
inc
icebp
scas
mov
xor
lds
jle
ret
mov
ss
jmp
repnz
sbb
scas
mov
scas
fwait
pop
mov
divl
lcall
jno
push
xor
lahf
cmp
movsb
adc
lea
add
shl
das
clc
lcall
cmp
outsl
addr16
inc
cmpsl
dec
jecxz
int
arpl
mov
inc
lods
repz
jb
call
jg
into
xchg
test
cmc
dec
and
aam
push
mov
call
push
jmp
mov
aad
sbb
mov
test
ljmp
pop
and
mov
cltd
jmp
pop
rcrl
add
pop
xor
jno
sahf
rorb
scas
add
pop
lcall
pop
dec
clc
push
ss
loop
sbb
mov
mov
std
out
je
dec
rcll
mov
fwait
sbb
mov
rcr
cs
decl
or
inc
xchg
dec
push
cmp
and
call
rcrl
mov
lcall
dec
mov
dec
divb
or
popa
leave
dec
fldcw
sar
mov
jle
jns
jmp
lods
mov
fxch
sub
push
push
sub
inc
xor
push
add
pushl
out
inc
mov
xchg
je
mov
xchg
scas
fstpt
cmp
mov
inc
clc
movsb
jecxz
pushl
test
xor
jnp
mov
lds
test
shll
sub
das
mov
dec
arpl
sub
xor
in
add
scas
cmp
sbbb
lods
std
adc
mov
mov
push
adc
orl
and
lods
decl
xchg
nop
sub
ds
xlat
hlt
sub
mov
xorb
push
sbb
push
sti
imul
inc
stc
in
add
and
popf
ret
sbb
add
pop
in
xor
inc
hlt
add
mov
add
inc
fistl
push
xor
stos
sub
pop
cmc
call
push
inc
adc
adc
addr16
ficomps
mov
into
mov
lods
cli
jg
in
dec
xor
int
inc
pop
xchg
push
shrb
call
lret
mov
jecxz
xlat
inc
mov
std
dec
mov
and
mov
dec
call
out
jo
xchg
pop
xchg
push
ss
insl
push
add
pop
push
pop
setle
dec
int3
inc
or
pushl
repnz
add
call
data16
mov
pushl
loope
aam
in
sarb
xorl
inc
cmp
mov
nop
fs
jg
out
xor
fwait
or
aad
and
ds
shll
xchg
cmp
call
nop
arpl
imul
mov
inc
mov
pop
popa
iret
mov
ljmp
int3
sbb
scas
dec
jmp
push
push
jecxz
popf
in
popa
subl
xchg
clc
cmp
cmp
fiaddl
pop
pop
add
xchg
out
fcmovbe
push
push
cmpsl
int3
out
push
push
aam
imul
inc
sub
js
in
sahf
push
sbb
jo
iret
sbb
sbb
jg
and
aam
aas
inc
ja
push
inc
adcb
and
pusha
jl
ss
mov
push
pop
push
xchg
loope
push
mov
jmp
popf
bound
adc
xchg
loop
jge
jbe
loopne
jno
lock
decl
adc
gs
std
xchg
sub
adc
xchg
faddl
decl
push
push
iret
adc
or
hlt
mov
andl
cmp
ljmp
cmp
pushf
js
xchg
add
jle
push
sub
lock
decl
divl
repz
in
repz
xchg
sbb
aad
ret
jg
jae
cmp
nop
mov
decl
incb
sbb
movsb
int3
sbb
fcoml
or
incl
mov
bound
out
lods
lods
inc
jge
ljmp
mull
pop
mov
clc
fnsave
mov
scas
stos
lret
stc
mov
mov
add
adc
mov
jmp
xchg
push
inc
xchg
mov
push
aas
pop
xchg
mov
add
inc
cmc
mov
stc
push
ljmp
repz
insl
imul
sahf
and
icebp
in
jl
push
fidivrl
cld
fadds
and
and
and
lcall
aaa
int
imul
jp
popf
out
out
stc
cli
xlat
mov
loope
shrb
scas
shrd
rorb
mov
incl
je
movd
push
in
arpl
xor
jg
push
push
push
pop
adc
insl
lods
push
cmp
xchg
into
push
mov
pop
lcall
decl
in
andl
dec
cmp
notl
push
inc
gs
jae
mov
ljmp
xor
imul
pop
mov
pop
repz
mov
or
inc
inc
push
stos
or
ds
mov
adc
test
ds
stc
mov
decl
push
xlat
mov
dec
cmc
mov
xchg
repz
sti
xchg
cmp
incl
or
les
jo
pop
sbb
rcll
daa
and
sub
in
scas
orl
aaa
jl
jmp
xchg
jge
lods
out
mov
pop
dec
mov
xchg
popf
test
push
scas
fbld
nop
cmp
repnz
inc
jns
dec
or
stc
adc
jmp
addb
lock
cld
inc
call
outsb
and
scas
xchg
jne
idiv
dec
test
int
aas
adc
nop
pop
addl
call
jecxz
xor
inc
push
cltd
jae
or
test
push
fsubrl
stos
fwait
outsb
xor
mov
push
add
cwtl
sarl
fidivrl
inc
cmp
fstpl
mov
xchg
ljmp
xchg
adc
or
sub
xchg
int3
js
cmp
xlat
cmpsb
nop
cmp
push
incl
and
rclb
les
sbb
loopne
scas
mov
jecxz
insl
sub
adc
rolb
push
mov
test
rorl
jge
icebp
sub
call
push
fs
imul
mov
inc
dec
cmp
scas
cmp
cwtl
fnstcw
test
pushl
mov
or
pop
mov
in
mov
js
decl
mov
add
fcoml
repz
test
mov
lds
or
bound
pop
es
xor
push
xchg
add
nop
jle
daa
fwait
test
jmp
jne
mov
lcall
inc
jo
dec
mov
test
sti
divb
lcall
mov
icebp
mov
xorb
aad
jo
push
test
aaa
cld
incl
mov
cmp
vpmaxub
repnz
add
pop
and
sbb
lcall
ljmp
aad
fwait
jmp
or
dec
gs
sbb
mov
jmp
and
in
pop
or
ret
mov
mov
cmpb
ja
sub
jae
lcall
xchg
testl
call
les
lcall
jns
mov
add
out
mov
add
inc
sbb
loop
inc
mov
mov
fwait
pop
jg
jmp
jbe
cs
int
cli
add
adc
jns
xchg
mov
mov
xchg
fdiv
fwait
or
mov
mov
pusha
and
into
and
cld
pusha
call
fsubrl
xor
push
pop
cmpsl
mov
sbb
push
je
mov
aas
movsb
cmc
test
jg
into
sarl
sbb
mov
cmp
cmpsl
push
jne
lods
adc
mov
jbe
jo
ljmp
pusha
int
inc
adc
mov
leave
js
fsubrs
mov
push
sub
sub
scas
pop
int3
add
in
jns
jmp
mov
andl
add
movsl
lock
add
int
xchg
aam
xchg
test
xchg
jmp
pop
out
add
into
sbb
adc
fwait
pop
clc
data16
ljmp
mov
xchg
test
mov
cmp
sub
push
decl
arpl
xchg
cmpsb
mov
and
test
add
ljmp
mov
je
jle
xchg
xor
xchg
fidivl
jo
mov
or
push
dec
ds
ljmp
test
clc
jnp
or
xchg
stos
lds
shll
xchg
aaa
lret
std
cmp
inc
cmp
nop
subl
fmuls
adc
aam
sbb
ljmp
inc
pop
shll
outsb
stos
daa
in
movsl
sbb
scas
push
cmp
sub
push
popa
xchg
adc
call
mov
leave
jnp
push
testl
shll
and
pop
shrl
push
inc
mov
add
sbb
in
test
sub
push
imul
dec
pop
and
add
jle
dec
adc
adc
lret
aas
mov
incb
xchg
hlt
iret
push
push
int3
push
popf
cmp
sbb
or
or
add
in
xlat
test
popf
sub
test
push
sub
hlt
add
std
inc
pushw
or
jmp
mov
adc
stos
cmp
jmp
ja
mov
pop
sub
subb
fsts
testb
int
adc
ds
dec
or
stos
iret
in
inc
push
push
jp
call
add
inc
add
out
xchg
dec
test
out
enter
xchg
inc
xchg
sahf
insb
insl
mov
mov
adc
cli
pop
rclb
aad
xchg
or
add
mov
pushl
insb
jns
scas
add
inc
inc
adc
out
mov
adc
mov
xchg
adc
jmp
sahf
fnstenv
stos
jge
xor
fnstcw
mov
lcall
mov
pop
pop
mov
mov
pop
imul
cwtl
xchg
dec
lea
push
mov
jno
jecxz
pop
cmpl
add
mov
js
jmp
or
sub
cli
push
loope
inc
jne
rol
lods
mov
push
push
cwtl
fcomi
andb
iret
or
jg
and
repnz
sti
sub
sahf
dec
sbb
pushl
cli
adc
hlt
test
jno
lret
outsb
jp
bound
push
or
xchg
mov
push
out
popf
mov
xchg
shll
xor
or
mov
decl
add
lods
cmp
aad
les
ret
xlat
aam
sub
add
out
dec
jg
pushl
dec
sub
xchg
or
icebp
jae
dec
pop
loop
add
push
outsb
call
cmc
inc
fldt
xchg
gs
add
je
add
ficoms
mov
ret
inc
push
xor
fnstsw
bsf
ja
orl
push
incl
cmp
cs
cli
punpcklwd
mov
inc
out
mov
push
cli
call
pop
or
sbb
cmpsl
dec
pop
repz
sbb
lods
pop
sahf
lret
jo
cmpl
mov
pop
pop
mov
adc
pop
nop
fistl
std
pop
pop
push
add
ja
test
leave
in
pop
mov
cltd
ja
jg
pusha
xchg
clc
push
fisttpll
jno
cmc
pushl
pop
outsb
enter
or
add
dec
rcrb
sbb
dec
pop
iret
mov
lcall
sbb
rcll
nop
push
inc
dec
cmp
add
mov
les
jmp
out
mov
push
cmpsb
les
and
loop
jb
decl
faddl
dec
adc
in
in
test
cmpsb
cld
push
popf
xor
ljmp
dec
cld
sub
xchg
sub
mov
jno
xchg
mov
xchg
fsts
mov
ds
mov
push
into
out
imul
lret
fisttps
cmp
jg
pop
mov
sti
cltd
xlat
lret
out
xor
pop
mov
sahf
pop
sbb
loope
iret
add
or
mov
sbb
xor
and
mov
cmp
inc
xor
pop
fs
cs
iret
xchg
xorl
dec
add
enter
sub
call
mov
shr
mov
pushf
scas
jmp
mov
in
pop
jg
sbb
pop
sub
pop
adc
jmp
jmp
cwtl
ret
cmp
rcll
clc
call
fwait
mov
call
mov
test
adc
popa
popf
sbb
leave
int3
enter
jge
fdivr
mov
and
int
pop
int
and
iret
test
shl
xor
add
mov
jb
sbb
jo
inc
mov
repnz
jns
xchg
movsl
mov
stos
enter
cmp
in
mov
fstl
cmpsl
mov
andl
lret
inc
les
pushl
ljmp
sbb
ja
jge
test
add
in
int
dec
pop
hlt
call
dec
inc
sahf
cltd
fisubs
dec
mov
movsl
fimull
sar
pushl
jo
enter
push
bound
cli
popa
cmp
or
loop
loope
aad
pop
dec
adc
mov
sbb
sub
inc
jae
mov
mov
cltd
mov
xlat
into
mov
sub
dec
push
ljmp
es
or
aam
repz
loope
arpl
fsubl
loopne
mov
jb
mov
mov
decl
insl
aam
and
sub
sbb
jmp
mov
inc
cwtl
lret
or
dec
movsb
popa
pop
dec
aad
pop
mov
int3
and
popa
push
fdivs
lret
in
stos
loop
test
bound
dec
bnd
xor
nop
pop
cmp
decl
in
or
mov
xor
cmpsb
stc
push
repz
sbb
sbb
ljmp
das
push
imul
dec
fnstenv
out
xlat
mov
test
pop
adc
movsb
inc
mov
mov
jns
sub
mov
stos
dec
mov
mov
in
in
out
call
out
mov
scas
mov
int
push
xor
jl
sahf
dec
jns
pop
adc
ljmp
jmp
pushf
div
and
push
cmpl
jl
mov
dec
push
fisubrl
call
sbb
hlt
mov
pop
push
mov
outsl
movsb
fstpl
lods
movsb
mov
jmp
push
imul
loopne
mov
adc
add
incl
cmp
enter
push
or
dec
dec
inc
dec
addr16
pushw
std
jmp
mov
push
sahf
faddp
enter
fildll
out
es
dec
cltd
lea
lock
xchg
loope
pop
xor
mov
pop
addr16
xchg
xchg
int3
rolb
pop
cmc
jno
dec
add
or
inc
push
add
jmp
lods
mov
pushl
sbb
lock
out
test
jo
fistpl
setae
cmc
mov
mov
fs
stos
xchg
inc
mov
pop
imul
or
lahf
jae
cmp
mov
ljmp
mov
inc
in
xchg
dec
xchg
inc
fs
cli
or
int3
out
or
lcall
les
lods
xchg
cmpsl
jmp
or
icebp
sbb
jno
xchg
inc
arpl
call
sub
xor
insb
push
adc
scas
sbb
scas
mov
xchg
jmp
inc
pop
xlat
xor
jmp
mov
or
or
dec
lds
dec
cs
test
dec
and
lcall
sarl
cltd
aas
or
or
bound
stc
mov
jle
icebp
repnz
out
cld
aas
aaa
pushf
xchg
push
hlt
adc
adc
lods
push
inc
mov
ss
xlat
xor
jmp
loopne
mov
inc
lahf
les
insb
jae
push
faddl
push
gs
test
sbb
and
neg
pushl
scas
or
sub
xchg
sbb
push
jp
int3
sub
adc
cltd
add
cmp
sahf
mov
dec
jp
ret
imul
or
and
bound
int3
xchg
pop
cmc
cmp
xchg
int
lds
adc
test
cmc
ljmp
dec
negb
or
inc
adc
call
ret
jge
notb
dec
repnz
push
insl
pushf
push
repnz
jl
jl
pop
cmp
mov
rolb
cmp
pop
cmp
imul
inc
dec
and
scas
int
mov
mov
imul
mov
push
ret
inc
insb
pop
and
cwtl
in
sub
pop
stos
sbb
cmp
scas
scas
xchg
push
add
pushl
mov
ficompl
push
adc
or
dec
xchg
jl
pop
push
aad
mov
jg
sarl
sbb
sub
inc
mov
mov
lock
xchg
ljmp
pop
cmp
pop
dec
fmuls
scas
fiadds
ficoms
mov
adc
ljmp
dec
jo
xchg
into
dec
cmc
dec
icebp
arpl
js
xor
pushf
or
ljmp
insb
xchg
inc
add
xchg
ja
lds
jl
jne
inc
or
mov
mov
jle
fsubs
dec
push
or
cmp
pusha
insb
mulb
or
inc
icebp
pop
mov
cs
decl
stc
pop
cld
sub
mov
rorb
sahf
xchg
sbb
pop
or
adc
jmp
imul
pop
mov
cmp
push
test
add
cmp
stc
adc
cmp
call
push
ljmp
sbb
mov
subb
negb
mov
mov
dec
mov
fs
or
xchg
pop
inc
or
mov
ljmp
lcall
iret
xchg
in
sbb
sub
in
xor
ja
sub
xorb
push
scas
incl
sbb
adc
sbb
mov
aas
add
add
xchg
je
mov
test
mov
incl
jge
and
bound
add
xor
mov
cmp
call
rcll
mov
inc
movsl
lcall
icebp
adc
cmp
lcall
incl
iret
sbb
jbe
rorl
rcrl
jp
lods
xchg
inc
adc
loop
xor
mov
adc
xor
xchg
aas
lea
enter
mov
clc
gs
dec
mov
lea
jo
decl
jmp
xchg
ficoms
or
xor
push
sbb
test
jmp
pop
sub
cmp
xor
scas
lea
test
adc
mov
lcall
xlat
loopne
inc
sub
sub
cmp
sahf
mov
popa
bound
lcall
mov
incl
aaa
sbb
xchg
cli
and
sarb
dec
aas
pop
rorb
psubusb
lcall
sub
cmp
mov
adc
push
leave
adc
iret
or
adc
insb
and
decl
test
push
sbb
and
adcb
into
mov
call
jmp
xchg
add
repnz
fdiv
pop
push
mov
hlt
or
mov
das
cli
mov
hlt
xchg
and
mov
xchg
xchg
xor
dec
xor
mov
fsub
inc
inc
addr16
mov
out
mov
dec
xorl
stc
jne
loopne
xchg
call
mov
insl
push
pop
sbb
push
xchg
je
xor
cltd
lock
das
cmp
call
cmp
out
jne
lds
and
cmpsl
ja
and
stos
mov
fdivl
std
sar
imul
arpl
cs
mov
bnd
call
inc
popw
sbb
iret
fs
repz
jmp
push
aam
out
cmpb
mov
lcall
xlat
addb
adc
jmp
adc
decl
jecxz
ror
cmp
adc
cwtl
sub
jns
cmp
adc
icebp
xchg
dec
push
loope
and
mov
mov
inc
inc
test
cmp
push
test
std
or
bound
ja
aad
push
push
jg
and
aad
in
je
pop
and
aad
cwtl
out
mov
pop
icebp
and
testl
lods
sti
dec
xchg
dec
xchg
xlat
fisubl
push
dec
xchg
lcall
mov
mull
insb
mov
cmp
ret
pop
xchg
shlb
cmp
incl
mov
movsl
jae
in
xchg
xchg
ljmp
mulb
cltd
cmp
gs
decl
jbe
fwait
xchg
adc
xlat
mov
lret
inc
add
pop
icebp
dec
push
pop
dec
jecxz
movsb
lcall
ljmp
scas
push
insl
mov
aaa
dec
jle
lcall
sbb
xor
ljmp
push
add
xchg
mov
push
pop
mov
xlat
mov
xor
mov
pushl
xor
dec
mov
popa
push
in
ljmp
push
lahf
arpl
mov
scas
pop
popf
cmc
push
xor
jne
stos
mov
pusha
leave
mov
je
add
cli
mov
call
cmp
sahf
dec
sub
or
imul
cmc
push
lods
je
push
mov
jge
or
imul
shrl
clc
jmp
jge
aam
push
movsl
mov
add
call
xchg
lahf
es
incl
orl
jns
push
les
or
syscall
cmp
mov
loopne
jmp
int3
cmp
pop
sbb
js
mov
sub
sub
and
jp
cmp
sbb
jmp
add
sbb
mov
dec
xchg
lock
jmp
pop
mov
sub
fmul
mov
inc
lods
cmp
ret
insl
std
pop
addb
xchg
sbb
push
ss
call
dec
sbb
dec
mov
cmpsb
leave
roll
add
cmp
xchg
mov
aaa
jns
mov
cmp
sti
outsb
mov
loop
mov
inc
fwait
adc
sub
int
cmpsl
lret
aam
lods
jecxz
push
ret
int
movsl
xchg
or
jl
lahf
das
icebp
sub
call
fucompp
mov
sub
xchg
xchg
cs
ljmp
stos
add
adcb
add
call
mov
ret
ljmp
incb
inc
clc
cmp
and
shrb
cs
cmp
repz
fwait
arpl
incl
sub
movsl
and
inc
pop
test
push
push
push
lods
aad
jb
cmpsl
call
fidivl
xchg
cmp
push
imul
push
adc
sub
dec
jo
pop
cmp
jle
jae
loopne
cld
das
clc
jmp
or
jns
dec
xchg
sbb
sbb
mov
add
mov
fldenv
gs
enter
push
adc
lcall
xchg
ja
mov
or
push
inc
fnstenv
inc
lods
sub
lcall
jo,pt
and
or
mov
scas
mov
sub
inc
aad
inc
pushl
xchg
es
inc
mov
leave
xlat
xchg
ret
cmp
mov
and
dec
and
push
lds
daa
xor
inc
lods
jecxz,pn
xor
mull
pop
xlat
ret
lock
mov
cli
loope
lods
fdiv
popf
jno
ljmp
or
dec
test
mov
or
inc
sti
imul
xchg
ds
sbb
decl
out
aas
mov
shll
jo
xchg
in
stos
ret
andb
ja
ljmp
test
das
jg
insb
xchg
idiv
push
jb
outsb
movsl
ds
lcall
push
outsb
rclb
fnstenv
jb
repnz
mov
pop
decl
add
out
decl
out
scas
mov
lret
divl
mov
or
clc
pushl
xchg
out
outsl
xchg
in
test
lea
push
adc
dec
or
std
ss
lret
out
push
stc
dec
push
in
and
adc
and
iret
cmp
push
int3
dec
scas
dec
or
pusha
fcmovnbe
or
jae
sbb
push
data16
jg
jb
or
inc
push
add
inc
scas
fwait
add
imulb
xchg
or
mov
incl
and
inc
mov
xor
or
icebp
test
push
insl
cmp
jmp
pop
shl
test
dec
mov
rol
test
insl
jle
adc
push
fwait
push
dec
int
mov
jo
dec
repz
jmp
jae
mov
aaa
xor
jl
fisttpll
mov
bound
imul
stc
xchg
fcmovnbe
movsb
cmp
and
sub
sahf
lahf
decl
out
pop
iret
fldt
mov
xchg
xchg
cltd
sub
call
rclb
dec
ja
jns
clc
cwtl
or
dec
mov
and
clc
shrl
dec
test
orb
push
push
mov
ret
int
lret
into
neg
leave
ljmp
jl
push
pushl
arpl
jge
or
pop
sbb
mov
fdivrs
call
push
sub
push
xchg
pusha
lods
pop
push
jo
mov
inc
mov
or
mov
dec
mov
idivb
adc
iret
dec
xlat
mov
imul
insb
dec
pop
cmp
jp
pop
lock
outsb
int
and
pop
adc
push
jecxz
jne
test
cmc
decl
fidivrs
xchg
clc
cmp
outsl
jbe
push
mov
push
insb
insb
cmp
dec
jmp
mov
repnz
daa
sbbl
fistpll
mov
decl
setae
in
mov
jl
dec
add
lea
jle
stos
mov
lods
int
sbb
popf
int
fcomip
clc
sub
rep
cltd
cwtl
shll
aas
pop
sahf
std
inc
insl
repz
mov
sub
ljmp
cld
jmp
rcr
sbb
inc
jge
mov
repnz
hlt
bnd
push
arpl
sub
jmp
xchg
movsb
das
shlb
adcl
xchg
lcall
mov
adc
inc
pop
dec
pushl
xchg
ret
scas
mov
pop
xchg
test
sub
loopne
pop
jo
cs
enter
std
push
fiadds
nop
mov
jg
push
out
xorb
cmpl
movl
call
cwtl
enter
gs
or
out
adc
sub
or
mov
xchg
mov
dec
xchg
add
xor
xor
xor
push
pusha
jno
sub
cwtl
xor
xor
lcall
test
mov
lcall
js
int3
lcall
jg
pop
jg
out
icebp
dec
or
mov
lahf
push
fcmovu
push
xor
leave
mov
ljmp
fiadds
and
in
add
rcrl
xor
notl
mov
push
pop
mov
jmp
ljmp
sbb
mov
push
pop
mov
repnz
cmpsl
push
pop
push
int3
mov
rolb
cld
ljmp
test
in
pop
mov
scas
bound
xchg
cmp
fcomip
pushl
inc
test
call
xchg
push
jb
enter
sahf
cmp
sbb
aam
mov
call
ss
inc
jmp
fistps
decl
test
sub
mov
adc
xchg
ss
loope
push
and
mov
pushl
pop
jo
cli
je
call
push
out
jnp
xchg
cld
jo
jle
aam
pop
js
ret
mov
cli
adc
mov
leave
jbe
cmpb
pusha
sub
sbb
jge
sub
xor
cmp
sbb
out
mov
pop
sbb
out
push
dec
xchg
insb
ljmp
jg
push
sarl
push
mov
mov
hlt
mov
pop
xchg
test
dec
xchg
mov
lcall
add
sbb
cmp
push
mov
gs
out
outsl
fs
decl
and
mov
lods
add
lods
dec
daa
add
repz
push
pop
pop
mov
incl
sbb
push
push
jp
xlat
lods
aam
add
fistpll
mov
jp
rcrb
mov
jnp
push
inc
add
inc
out
xchg
insb
lea
mov
stos
adc
je
cmp
jmp
sub
cmc
in
idiv
sub
inc
les
and
iret
sbbb
ljmp
or
test
clc
lcall
ret
add
lds
pushl
in
in
shlb
js
jmp
daa
jnp
xchg
ror
inc
mov
adc
add
jg
in
jno
xchg
das
push
int3
sahf
mov
inc
cwtl
das
dec
arpl
inc
pushf
jmp
inc
imul
sub
sbb
add
js
mov
mov
xchg
scas
sbb
ret
and
inc
pop
adc
or
adc
lcall
push
mov
pop
mov
lcall
adc
jl
fs
xchg
add
pushl
sarb
nop
xchg
lock
pusha
in
pop
adc
add
lock
xor
mov
fcmovb
aam
adc
mov
lcall
sub
add
mov
adc
rorl
lods
xchg
mov
dec
cmp
lcall
cwtl
fisubrs
mov
lcall
notb
imul
stos
jmp
mov
repz
sub
mov
pop
push
push
adc
lcall
mov
les
aas
dec
add
push
lods
inc
adc
leave
dec
bound
lcall
sub
inc
jg
sub
push
and
push
in
pushf
inc
das
fdivrs
push
cmp
jl
nop
aam
dec
out
ljmp
lret
jmp
lods
data16
add
or
call
cld
inc
rorb
addr16
mov
in
out
xlat
js
pop
shlb
dec
push
jg
fs
push
ret
sub
andl
pop
mov
pop
sub
outsl
decl
jo
and
scas
loopne
movl
shlb
ljmp
outsl
lret
mov
daa
data16
adc
inc
clc
clc
xchg
fmul
aas
sbb
dec
mov
jg
jp
icebp
push
mov
mov
out
push
jb
data16
decl
out
ja
ljmp
scas
inc
stos
fst
popf
push
xchg
cltd
in
cmp
mov
cs
or
jns
jg
xchg
fs
repnz
shrb
or
fwait
push
cmp
les
testb
decl
adc
mov
ljmp
imul
dec
outsl
pusha
mov
cs
push
or
jge
sahf
mov
call
xor
int
arpl
push
inc
pop
aam
sub
fwait
cmp
sub
outsl
pop
and
pushl
popa
cltd
jae
mov
std
xorl
loopne
jg
adc
mov
incl
dec
fbstp
bound
out
ret
movsb
add
repz
dec
cmp
pop
and
add
pop
sbb
inc
lcall
xchg
cmpsb
adc
divb
sub
pop
push
repz
pushl
xchg
cmc
cld
addl
mov
push
adc
xchg
loope
push
mov
call
jnp
jno,pn
push
or
push
jnp
or
int3
cmpb
jp
mov
push
mov
push
mov
xchg
or
pop
and
jo
push
les
out
inc
fnstenv
cs
ljmp
mov
popa
xor
mov
jg
gs
mov
mov
call
jno
lods
bound
inc
xlat
stos
add
mov
std
lds
test
stos
pop
incl
pop
inc
mov
mov
aas
fcomps
sbb
decb
jle
call
ss
xchg
mov
es
xor
add
mov
loop
repz
sub
jmp
in
or
lahf
je
jae
add
and
ficoml
jmp
ret
jecxz
clc
jns
leave
adc
fscale
stos
adc
inc
sbb
ret
mov
rcl
incl
sti
or
les
imul
xchg
in
dec
mov
or
xchg
decl
mov
inc
inc
rcr
test
pop
push
sbb
xchg
inc
jmp
jp
mov
insb
cs
dec
dec
jno
jg
repz
add
mov
daa
adc
out
dec
cmc
cmp
sbb
cld
and
sbb
dec
dec
add
hlt
icebp
push
fbstp
das
push
mov
fimull
push
incl
jb
xchg
pop
icebp
dec
sbb
xlat
stc
es
fsts
jnp
xchg
out
test
decl
je
sbb
fs
adc
mov
mov
mov
out
clc
incl
test
cmp
fbld
or
andl
inc
decl
lret
mov
cmp
out
push
addb
mov
pop
ljmp
xchg
jns
add
mov
scas
test
stos
test
or
in
pop
mov
and
jmp
jg
js
es
adc
sbbl
in
lcall
pop
and
adc
stos
jle
daa
or
and
jns
inc
xlat
in
jmp
leave
xlat
mov
divb
add
rorl
sti
xchg
lahf
push
testl
popa
pop
addl
js
sbb
minps
pusha
out
stc
aaa
mov
shll
push
out
pushf
pop
mov
xchg
rorl
mov
out
aas
int
out
ljmp
mov
lret
aam
cmp
xlat
jns
pushf
ljmp
mov
imul
hlt
mov
cmc
cltd
les
jl
dec
sbb
pushf
fwait
dec
out
jge
jecxz
incl
dec
cltd
mov
or
adcb
lcall
jns
jp
mov
add
mov
mov
pop
add
call
movsl
jno
cmpsl
sbb
mov
scas
lcall
jmp
imul
adc
stc
xlat
sbb
clc
jge
mov
out
jp
sub
mov
sbb
mov
into
push
add
lret
outsb
push
push
lcall
jle
xchg
divb
push
lret
movsb
adc
jmp
movsl
ljmp
mul
xchg
mov
into
xchg
loopne
add
rcrb
in
sbb
decl
xor
adc
sarb
arpl
daa
cmp
add
cmp
jle
fdivrl
popa
jo
loopne
movsl
cmp
mov
push
dec
icebp
push
lods
lret
add
mov
pop
pop
aam
and
iret
frstor
notl
xchg
push
pop
popa
cmp
or
pop
cltd
cld
pop
loopne
lret
or
mov
lock
jmp
rcr
pushl
xor
int
fisttps
subb
scas
stc
push
imul
cltd
xor
call
jle
iret
sbb
mov
repz
lds
xorl
inc
lods
cmp
mov
int3
loopne
inc
arpl
aaa
dec
das
pushf
xchg
sbb
inc
out
out
mov
adc
dec
jmp
int3
aam
pushl
nop
enter
insl
loope
jnp
xchg
arpl
and
xchg
fmul
mov
scas
shll
dec
mov
das
cli
decl
inc
mov
cmp
add
push
cltd
jmp
fcmovb
sbb
incl
in
sbb
xchg
cmp
lea
fists
dec
push
push
add
arpl
push
push
aam
out
pop
xchg
jl
mov
mov
fs
inc
push
inc
idivl
push
into
iret
mov
lcall
mov
xor
pop
mov
inc
imul
sbbl
decl
iret
in
cmp
outsb
out
insl
pop
xor
xchg
jge
ds
pop
and
fst
in
ljmp
cli
les
push
test
inc
loopne
push
ret
push
and
jno
cmpb
test
ror
cwtl
sbb
cmp
and
enter
loopne
cmp
rcrb
ljmp
mov
stos
mov
mov
sub
es
fcomip
dec
jecxz
jecxz
mov
jnp
jge
push
in
ret
and
sbb
mov
insl
inc
add
mov
adc
orb
jbe
push
jmp
sahf
xor
push
pop
lcall
lcall
pop
imul
jl
cmpsb
int
dec
shrl
testl
push
mov
add
test
inc
mov
dec
in
push
repnz
or
cmp
or
mov
mov
lock
or
insb
jmp
aas
in
or
and
into
pop
movsb
inc
pop
push
dec
and
imul
fs
inc
out
es
mov
jle
jnp
fiaddl
in
mov
or
sbb
lock
enter
das
sti
cld
clc
test
push
sahf
mov
sbb
xchg
mov
lahf
andnps
cmp
dec
rcrb
dec
cmpsb
test
inc
jns
push
jge
xor
mov
js
push
cmp
jg
test
pop
cmp
mov
xor
add
aad
cmp
fcos
incl
out
sbb
pop
jae
ljmp
lea
inc
fdivrp
jg
xchg
sbb
mov
test
bound
scas
je
cwtl
adc
jmp
imul
jge
out
push
dec
xor
bound
int
test
aad
or
mov
xor
jmp
cmp
ljmp
mov
inc
mov
je
imul
xchg
call
add
subl
sbb
mov
sub
dec
into
jmp
push
outsb
mov
rorb
stos
mov
imul
sub
mov
repnz
or
add
nop
lret
and
xchg
into
inc
rol
and
push
mov
jnp
push
idivb
cmp
addr16
dec
inc
lods
and
jmp
xchg
adc
ljmp
inc
push
jo
dec
mov
cmp
sub
call
and
sbb
mov
incl
filds
xor
push
jb
repz
es
test
jae
out
ljmp
lods
lcall
sub
adc
outsb
ljmp
jno
ljmp
fs
aad
hlt
fdiv
pop
mov
subps
js
adc
mov
lods
jmp
decl
dec
adc
cmp
mov
aad
jns
inc
push
add
mov
ret
test
mov
jecxz
test
in
rcrb
xchg
jno
jp
adcw
sbb
hlt
fcomip
call
push
cmp
push
cli
mov
dec
ret
scas
dec
adc
gs
jmp
lret
sub
inc
bound
gs
stc
push
push
in
stos
push
js
dec
fs
jecxz
jns
fdivr
or
jmp
xor
in
pop
ja
inc
mul
sbb
xor
fwait
cmc
nop
and
fcoms
mov
adc
mov
ljmp
fisttps
xchg
movsb
testl
pushl
pop
pop
scas
cwtl
bound
ds
push
js
pop
aam
dec
inc
ljmp
icebp
imul
cmp
push
daa
dec
pusha
popf
repz
xchg
or
cmc
cltd
cmpsl
testl
scas
jl
incl
call
jge
mov
sbb
imul
pop
jmp
pop
sbb
jp
es
jmp
popf
cmc
cs
ret
or
mov
fisubs
addr16
xor
lcall
icebp
fwait
xchg
sub
rcrl
fadds
and
push
or
lcall
adc
inc
loop
bound
adc
xchg
add
mov
incl
clc
sbb
mov
cli
push
jge
push
lock
mov
pusha
sbb
mov
mov
iret
xchg
cmc
ja
sbb
out
mov
aas
xlat
lret
insl
xchg
push
mov
or
push
mov
arpl
test
clc
jp
mov
call
ljmp
sub
push
mov
push
gs
lcall
xor
push
sbb
cs
call
call
and
adc
jg
hlt
and
inc
cmp
sahf
insl
jl
stos
cmp
out
decl
sub
add
push
sbb
and
jne
xlat
scas
jb
inc
jae
pushl
mov
aas
xchg
lcall
nop
inc
inc
xchg
mov
idiv
mov
arpl
test
scas
out
pop
cmp
test
les
or
test
ss
in
loopne
pop
std
call
insb
clc
loopne
movsb
xchg
nop
pop
xchg
mov
sbb
popf
or
jg
test
adcl
fbld
jbe
mov
scas
loop
push
xor
push
jmp
jmp
mov
cmp
iret
fdivrs
ret
jge
sub
dec
aad
pop
mov
xchg
ss
cmp
mov
into
jae
fs
lea
pop
sub
mov
ret
jae
lahf
fisttps
ljmp
dec
adc
stc
aam
lret
jecxz
ficoms
push
add
inc
out
xor
in
push
outsl
imul
gs
sbb
std
adc
mov
or
sub
shr
cmp
lcall
pop
dec
sub
add
inc
sub
addr16
sub
mov
jg
ljmp
push
xchg
xchg
add
je
mov
mov
adc
xchg
sahf
sub
outsl
lcall
mov
push
and
and
dec
lods
push
add
push
mov
push
or
in
test
add
lcall
stc
sub
inc
icebp
push
hlt
or
sarb
sub
pushl
dec
push
mov
in
sbb
or
loope
mov
imul
ljmp
negb
hlt
in
cwtl
and
cmp
sbb
or
decl
jg
repz
jl
push
cwtl
jno
cli
pop
aad
xchg
out
mov
faddl
mov
decb
add
xorl
dec
add
jl
dec
ds
adc
pushl
cld
lcall
jg
jmp
cmpsb
testb
movsl
jae
push
pusha
fsub
js
call
out
repnz
adc
ret
sub
lock
mov
incl
test
out
pop
imul
aad
jmp
lcall
ljmp
xor
xchg
lea
xorl
clc
std
stos
jle
jns
decl
mov
xchg
bound
cmp
addr16
adc
lcall
movsl
fldl
pop
push
and
ficompl
pop
pushf
mov
inc
es
xchg
pushf
jbe
jmp
push
push
or
push
push
mov
adc
xor
and
popf
mov
fidivl
xchg
sub
ret
inc
mov
js
mov
mov
jmp
jg
cmp
add
das
mov
jl
gs
mov
scas
cmpsb
andl
ljmp
xchg
mov
aam
cld
inc
lock
dec
pop
jecxz,pn
adc
and
and
xchg
push
ret
mov
mov
insb
sbb
dec
adc
loope
pop
movsb
push
mov
call
stc
mov
and
cli
xlat
push
push
shll
inc
push
mov
pushl
les
ljmp
xlat
mov
jae
mov
std
lret
xor
lock
cmp
outsb
or
cmp
dec
lods
loopne
push
sub
lcall
ds
mov
sbb
addl
insl
aas
adc
or
decl
adc
xchg
sub
ret
cmp
fcoms
int3
xchg
dec
insl
adc
push
mov
sahf
dec
push
and
fwait
xchg
rcll
fdivrs
add
ss
movsl
std
mov
xchg
loope
and
or
pop
pop
fsubl
pop
in
loope
lret
add
mov
mov
lds
mov
ja
jge
dec
aaa
out
inc
roll
jg
call
inc
mov
mov
incb
dec
dec
loope
mov
mov
movsl
fstps
popa
jmp
lret
pop
mov
and
inc
fisubs
and
mov
push
mov
outsb
js
lret
push
ret
pushf
sbb
push
ljmp
xor
mov
mov
sbb
adcb
mov
dec
fnsave
xchg
incl
imul
xchg
mov
test
mov
int
or
pop
decl
or
inc
jb
fmuls
mov
push
test
mov
jns
fbstp
dec
cwtl
int
sahf
fistl
inc
inc
dec
jo
subl
jmp
push
incl
mov
lahf
mov
mov
and
mov
sbb
lock
decl
bound
push
divl
mov
shr
into
lea
mov
loop
jb
ljmp
sub
xor
je
sub
xchg
bound
out
pushf
fwait
mov
push
dec
cmp
pusha
and
lcall
mov
mov
or
fsubs
out
loopne
outsb
mov
call
sbb
movsb
popa
xchg
loop
loop
inc
sub
nop
mov
jg
add
sti
pop
sub
fimull
data16
lods
pushf
in
jle
jecxz
xchg
jno
call
cld
add
mov
and
inc
xchg
push
mov
ret
movsb
lcall
mov
dec
out
adc
mov
push
push
push
or
cli
xchg
and
pop
mov
jge
mov
add
sti
xchg
inc
scas
mov
cmc
imul
adc
stc
pushf
ffree
inc
mov
sar
out
jp
fwait
imul
call
cmpsb
hlt
test
bound
daa
fsubrl
shrl
cmp
mov
iret
mov
sbb
push
xchg
push
cmp
jg
jmp
ja
push
popa
dec
pop
js
cld
and
leave
bound
nop
jbe
test
pop
std
call
stos
xor
adc
or
addr16
inc
add
rcrb
pop
adcb
pop
out
lret
mov
js
jb
aaa
bound
dec
and
sbb
scas
shl
lahf
or
shll
xchg
ret
jmp
hlt
sub
mov
sub
enter
add
mov
imul
cmc
popf
xor
or
xor
push
and
mov
adc
stc
add
decl
clc
fs
mov
test
sub
add
mov
popf
push
cmp
pop
jp
ljmp
hlt
cmp
testb
stos
cld
popa
inc
fdivrp
adc
sti
mov
xor
rcrl
pop
pop
inc
mov
and
sbb
xor
loopne
loopw
es
inc
lods
xchg
iret
je
pop
cli
sar
lcall
into
push
lea
pop
lcall
sahf
xchg
stos
pop
popa
mov
jo
sar
jmp
lods
ds
cmpsb
aaa
pop
outsl
ret
loope
int
lock
iret
pop
jbe
adc
add
dec
adc
cli
pop
icebp
ror
ljmp
jmp
in
daa
les
jmp
mov
scas
mov
addr16
jbe
decl
test
fs
push
fldl2e
cld
adcb
sbb
jmp
notb
sub
pop
rcrb
jmp
jmp
pop
jb
punpcklbw
jge
loopne
jno
sub
dec
sub
mov
popa
mov
incl
xchg
cltd
nop
push
adc
mov
xor
lods
jnp
in
push
and
mov
fs
js
dec
pop
pop
add
jmp
je
xchg
dec
inc
cmp
and
cmp
inc
mov
push
xlat
or
outsb
pusha
cmpsb
adc
inc
xor
cld
ljmp
mov
iret
test
mov
daa
cmp
adc
jmp
and
inc
lods
jmp
daa
sbb
js
fwait
cmp
int
xchg
in
inc
mov
in
call
xor
push
adc
shlb
mov
in
pop
and
pop
add
push
js
xor
inc
ror
cmc
and
or
lds
popl
lcall
push
xorb
fsubrl
in
dec
mov
push
inc
fwait
cmp
andl
rorl
incl
cmp
inc
mov
adc
sbb
dec
fsubrl
xchg
xchg
mov
xchg
xor
ds
or
add
out
mov
xchg
push
sbb
jg
mov
adc
arpl
jg
push
pop
clc
ret
pop
adc
pop
inc
sbb
mov
xchg
out
adc
lcall
incl
int
sarb
dec
push
push
scas
int3
in
sub
mov
popa
or
sbb
test
sahf
out
pushf
mov
inc
out
xlat
pusha
pop
ds
mov
or
sbb
push
lock
pop
and
cmp
call
iret
ss
mov
xlat
mov
int
in
adcl
sbb
jmp
cmp
push
sahf
rcr
pop
cld
outsl
les
mov
cli
incl
jo
jl
jo
out
std
jae
mov
sbb
fmull
push
pop
in
pop
jbe
outsl
inc
fcmovb
xchg
dec
push
das
mov
xchg
xchg
push
xchg
adc
call
cli
jg
add
push
push
dec
sbb
push
xor
sub
sub
ljmp
adc
pop
cmp
add
rcl
dec
outsb
or
cli
xchg
lock
jmp
enter
fcmovnbe
test
mov
mov
pop
and
mov
fstpt
ljmp
xor
sub
add
cmpsl
jbe
testl
xchg
mov
mov
ljmp
pop
jp
adc
push
xchg
cmp
stos
mov
sbb
movsl
xchg
cltd
jo
call
xchg
sub
dec
add
mov
mov
lret
xchg
bnd
jne
lcall
xor
pop
sbb
inc
add
outsb
mov
pop
pop
and
add
fcoml
inc
add
xor
xchg
out
int
cmp
sub
lcall
xchg
sbb
xchg
xchg
push
aas
sahf
xchg
xchg
jno
notb
fists
lds
incl
sub
repnz
bound
adc
dec
pop
mov
popa
sub
ss
push
inc
lock
jo
fs
xlat
lret
decl
aad
mov
hlt
cld
mov
addl
mov
ret
inc
jecxz
ljmp
push
mov
xchg
icebp
daa
pop
imul
dec
daa
loope
push
jmp
and
sub
jmp
pop
cwtl
out
popf
adc
sub
sbb
loope
cli
sub
cmp
add
pop
push
rolb
decl
cmpsb
fnstenv
or
xlat
cwtl
das
mul
repz
mov
push
fisubrs
les
mov
loop
jg
cli
mov
mov
mov
mov
ljmp
and
out
cli
outsl
xchg
pop
jbe
pushl
push
sahf
mov
pop
pop
push
rcrl
lcall
and
test
fists
sub
inc
es
icebp
mov
pop
in
push
and
push
mov
jnp
xchg
mov
das
lret
je
lods
fistpl
mov
data16
push
inc
loope
rcrb
test
dec
pop
ds
sti
loope
jg
pushf
mov
adc
or
adc
jmp
sbb
dec
outsl
sub
sub
mov
mov
cmpb
pop
dec
add
sub
push
mov
jl
mov
call
inc
lods
mov
jecxz
les
or
std
mov
pop
pop
cmp
cld
and
ljmp
pop
inc
insb
arpl
into
and
rorl
test
adc
sub
icebp
call
cmpsb
movsl
shl
push
push
ret
das
je
sub
jne
pop
ds
in
lods
jno
dec
fsts
mov
outsl
addl
iret
pushf
outsl
insb
fiaddl
cmp
nop
or
repnz
dec
mov
pushl
ret
mov
mov
sbb
jmp
inc
ljmp
xorl
orb
mov
loopne
aad
jecxz
push
sub
jl
hlt
fcmovnb
sub
add
pushl
outsl
icebp
or
xchg
xchg
mov
decl
mov
inc
test
fcomp
lea
repz
mov
imul
out
sbb
stc
ja
xchg
jae
int
mov
add
clc
sbb
cld
add
shlb
cmp
fcomip
cmp
ret
mov
push
add
adc
and
repz
lcall
add
mov
aaa
aad
fs
push
sbb
jmp
xchg
jecxz
aad
lret
pop
or
fcomip
call
inc
xor
xor
outsb
icebp
mov
jns
decl
or
aam
lahf
add
fst
xchg
add
out
shrb
dec
jge
fwait
test
xor
call
push
cwtl
cltd
fsubl
push
fildll
push
lock
ds
stos
loopne
inc
xchg
inc
mov
jbe
sahf
dec
mov
repnz
cmp
mov
jp
test
aam
incl
data16
cltd
pop
cmp
mov
outsb
fwait
xor
in
push
jg
xchg
sub
aaa
push
push
dec
add
jp
inc
xchg
adc
or
decl
jbe
test
fstpl
jg
aaa
xchg
fcmove
adc
add
dec
cld
shrl
or
out
movb
sub
lock
outsb
call
adc
jge
stos
inc
dec
inc
dec
or
sti
andb
shrb
lahf
nop
roll
lods
fdiv
stos
xlat
dec
hlt
and
imul
lahf
popa
pusha
pop
std
xor
mov
std
incl
jge
pop
adc
cmp
fcompl
imul
mov
or
decl
xor
inc
or
out
enter
mov
mov
add
ljmp
mov
pop
sbb
add
fmull
pop
xorb
add
pop
movsl
ret
sub
in
subl
cmp
xchg
add
mov
testb
sub
or
fidivs
cmpl
sti
mov
cmpsl
mov
jg
in
inc
mov
ja
fwait
inc
lahf
xor
aad
pop
lea
lcall
hlt
int
lret
xchg
lea
lret
pop
mov
std
iret
mov
call
lcall
jp
and
mov
fdivs
and
sbb
sbb
jo
incl
imul
je
jo
sbb
and
adcb
inc
jecxz
adc
sti
jmp
mov
shrl
inc
js
sub
decl
pop
mov
sub
jb
push
mov
mov
push
sbb
mov
inc
jno
jo
xchg
dec
pop
mov
cmpxchg
ja
or
fisubrl
pop
lcall
or
test
test
test
xchg
je
adc
sbb
lcall
add
or
xor
xor
mov
push
xor
cmp
jecxz
mov
ljmp
movsb
and
mov
jg
decb
nop
xor
mov
ds
popa
inc
aas
stos
je
xor
mov
jp
cmpsl
dec
das
mov
call
adc
cld
jmp
push
ljmp
push
sbb
ret
pop
ror
stos
add
or
xor
lcall
jb
cwtl
fwait
xlat
scas
lcall
mov
dec
inc
rcrb
jno
inc
fcomip
incl
jecxz
scas
mov
insb
aad
push
repnz
sub
mov
lcall
loopne
out
mov
push
dec
add
jp
mov
in
push
add
xor
out
in
jnp
aaa
and
lcall
xorb
cmpsb
cli
cwtl
int3
imul
cmp
adc
jmp
fs
sbb
into
adc
mov
daa
lret
xchg
pop
loopne
insb
sub
andb
lcall
flds
dec
insb
data16
daa
mov
popf
aad
dec
sbb
adc
mov
std
pop
test
in
jne
fildll
lret
pop
mov
jecxz
lcall
or
fdivrl
push
push
std
pop
xor
pop
mov
incl
in
sti
shld
mov
pop
inc
test
xor
push
cld
xor
in
fcompl
movsb
ljmp
mov
mov
xor
rorb
rorb
repz
and
cld
xchg
movsb
cmpl
pop
cmp
sbb
std
fnstsw
test
cmp
push
adc
ljmp
faddl
notl
mov
lret
dec
loope
cmp
imul
in
cltd
div
mov
scas
xor
fsubl
ja
xor
jnp
cmp
sbb
mov
mov
inc
xchg
adc
arpl
stc
sti
mov
mov
sbb
lods
jbe
mov
push
cli
daa
pushf
jmp
mov
test
and
fbld
jbe
into
test
je
add
gs
imul
popa
jecxz
pop
pop
pop
xor
mov
pop
fsubrs
xor
push
sub
pushl
lods
mov
dec
lea
pop
mov
jnp
pop
mov
out
sbb
idiv
out
cli
fwait
xor
hlt
loop
xchg
aaa
test
cmp
gs
jmp
scas
pushf
gs
mov
fsts
cld
adc
dec
push
cmpsb
xorl
cmp
shrl
xchg
inc
xchg
incl
or
mov
mov
pop
imul
jg
leave
fdivs
call
mov
xor
into
mov
aad
cltd
pop
pop
pop
les
mov
mov
rolb
in
movl
pop
push
rcrl
pop
mov
sbb
addr16
fmulp
cmp
xlat
mov
xchg
xor
jbe
sub
adc
aaa
std
decl
xchg
jns
or
subb
into
negb
sbb
call
scas
fldl
ret
push
and
mov
mulb
fiadds
inc
xor
jb
ret
lcall
mov
test
aaa
pop
push
leave
mov
lcall
xor
cmp
xlat
push
mov
push
adc
dec
lcall
push
call
rcrb
xor
sub
jae
jae
out
test
pop
push
hlt
decl
mov
sub
movsl
ja
notb
ljmp
mov
jnp
movsl
mov
lods
mov
and
es
push
jnp
out
test
pop
into
rclb
mov
nop
lods
xchg
cmc
push
clc
scas
sbb
cmc
xchg
lock
jmp
scas
mov
lods
cmp
scas
js
int3
fnstcw
xchg
cld
cld
cmp
mov
sbb
dec
ljmp
ljmp
sti
push
mov
popa
add
loopne
sbb
sarb
sub
notrack
loopne
sbb
and
xchg
pop
mov
mov
push
push
call
push
gs
push
leave
mov
mov
ss
imul
xchg
rolb
and
jbe
andl
out
int3
pop
in
add
push
sub
sbb
scas
ljmp
sub
push
push
sub
in
mov
dec
mov
hlt
add
dec
mov
loopne
or
repz
cwtl
jbe
lret
mov
xchg
and
push
mov
cmp
dec
and
out
cmp
ret
mov
dec
xchg
test
jle
lcall
jmp
mov
hlt
loopne
or
pop
mov
outsb
xor
incl
cmpsb
jae
mov
lods
xchg
loope
push
push
pop
and
addr16
out
and
in
insl
pushl
jne
test
mov
lods
jnp
stos
push
aas
in
ds
icebp
and
or
aad
inc
decl
mov
daa
incb
or
dec
sbb
push
lret
cld
ss
imulb
cli
jmp
xchg
lahf
adc
iret
push
mov
leave
sarb
cli
and
out
sar
iret
push
sbb
fs
sub
push
imul
cmpsb
lahf
inc
fcoml
fistpl
lret
sub
ljmp
add
mov
or
inc
xchg
mov
mov
mov
push
out
push
lea
cmp
ljmp
lods
mov
fwait
or
sti
mov
ljmp
sub
aam
dec
dec
push
stc
inc
decl
decw
xchg
aam
jae
pop
fisttpll
jno
pop
sbb
call
jecxz
sub
hlt
jb
cmpsl
imul
fldt
insb
xchg
stos
addr16
xchg
adc
sub
ljmp
push
lret
xchg
mov
sbb
enter
sahf
fadd
stos
das
xchg
es
ljmp
xor
dec
mov
jo
aas
cwtl
pop
loop
jno
jne
fistps
pushl
inc
mov
shlb
cltd
mov
mov
mov
and
js
aas
enter
aad
jnp
xor
mov
mov
xchg
insb
aas
xchg
add
mov
mov
pushl
cmp
ficomps
andps
mov
adc
hlt
aas
out
lret
ljmp
cmp
test
rcrb
out
idiv
pop
sub
fnsave
lea
decl
clc
push
cli
adc
stos
adc
add
cmp
xchg
shlb
lea
pop
test
sbb
jmp
jle
adc
in
adc
mov
movsb
sub
pop
xchg
mov
test
lret
cli
call
push
fwait
sbb
mov
cmp
push
adc
pop
add
stos
inc
inc
xor
sub
decb
mov
xchg
icebp
outsl
jmp
stos
test
pop
in
inc
mov
and
inc
jne
pop
scas
mov
lcall
sub
fdivrs
pop
pop
sub
aad
jb
push
push
dec
dec
js
mov
add
lahf
pop
fildll
sub
xchg
push
icebp
jl
std
and
jecxz
sti
sub
out
mov
push
sarl
jmp
scas
dec
xchg
dec
pushf
iret
sbb
pop
or
mov
inc
shrl
mov
dec
lcall
fwait
adcb
in
mov
adc
push
and
pop
pop
cmp
jne
loop
movsl
pushf
lds
push
in
shl
sub
ljmp
dec
stos
ljmp
inc
fsubrl
fsubrp
jge
cs
nop
mov
imul
call
std
mov
or
fcmovnbe
ret
sub
push
push
mov
cmc
mov
mov
push
mov
xor
ljmp
rolb
lea
das
test
ficoms
mov
lahf
in
xchg
adc
mov
push
je
lods
adc
mov
push
mov
hlt
xchg
mov
xor
pop
je
into
mov
adc
inc
loope
push
sbb
daa
fcoml
xor
lcall
add
inc
daa
cmp
gs
stos
xlat
sub
lods
mov
jg
incl
out
das
mov
data16
add
cmc
in
imul
push
adc
in
push
cld
lcall
jbe
mov
mov
aas
imul
jns
cs
repz
call
fdivrl
xchg
call
mov
xchg
popf
mov
movl
in
adc
xor
pop
loopne
aas
dec
inc
repnz
sbb
clc
shll
lods
and
sub
loopne
mov
xor
xchg
cmp
aaa
cmp
mul
sub
mov
fstpt
test
add
jle
mov
hlt
pop
icebp
mov
lahf
push
mov
cmpb
or
ljmp
cmp
pop
imul
inc
test
push
int
push
clc
incl
data16
negb
or
mov
pop
cmp
testb
pop
push
mov
out
ja
incl
pop
js
and
andb
add
data16
ss
jg
mov
lcall
test
adc
lahf
mov
mov
rorb
mov
pushl
test
jmp
rorl
mov
adc
push
cmc
mov
xor
adc
dec
cli
fwait
cmp
adc
imul
xlat
mov
mov
mov
decb
or
out
add
mov
dec
lret
jne
aad
cmc
adc
ss
sbb
cld
das
jge
shlb
jae
lret
fbstp
lret
lods
lea
inc
inc
push
js
inc
lret
jg
jecxz
xor
dec
sub
lret
fs
fcoms
push
sub
cli
dec
mov
mov
decl
rol
xchg
pop
and
and
xchg
inc
mov
pushl
inc
pop
sub
sub
ds
stc
xor
inc
push
lds
hlt
inc
xor
mov
clc
sbb
mov
gs
orl
lcall
cwtl
jmp
daa
ret
ud0
ret
mov
iret
ja
or
enter
xchg
add
mulps
int3
stc
rorl
sub
and
call
lcall
fildl
in
rcrb
mov
fists
push
jg
dec
loop
out
inc
mov
xor
sbb
xor
xor
scas
lret
mov
pop
mov
fsubrl
ljmp
inc
add
xor
jnp
mov
adcl
ja
lcall
aad
add
dec
repz
setp
incl
aaa
and
dec
xchg
movb
popf
push
fcmovne
or
push
mov
ljmp
test
and
adc
jmp
out
enter
pushf
jl
pop
xchg
push
pop
pop
sti
sub
cld
incl
jb
xchg
je
test
mov
lret
sbb
mov
popa
pop
cld
decl
icebp
les
mov
loop
jno
add
pop
roll
scas
icebp
mov
mov
call
das
push
mov
add
or
jl
xlat
daa
dec
pop
cmpsl
pop
fstps
ss
mov
aad
pop
or
jae
mov
xchg
scas
cld
inc
lahf
xlat
std
sub
decl
movsl
loopne
add
inc
out
sbb
dec
jnp
loopne
aam
test
pushl
or
divb
cmp
sub
sub
out
or
scas
imul
cs
cmp
decl
push
call
mov
cmp
add
pushfw
fcmovu
dec
add
ret
call
push
dec
xchg
and
jg
dec
mov
scas
xor
adc
sahf
cmp
pusha
loope
fwait
incb
cmp
imul
adc
sub
lea
mov
ljmp
leave
pop
dec
inc
cmp
pop
mov
daa
js
pushf
xchg
xchg
and
sarl
jg
decl
ret
pop
xlat
fdivrl
ret
fbstp
cmp
sbb
jge
insb
sar
inc
lret
fists
inc
mov
mov
adc
cld
sbb
or
mov
decl
jge
xchg
inc
lods
cmp
je
push
push
js
mov
ss
sbb
push
js
fcomip
in
scas
push
ss
hlt
fistps
ret
xchg
xor
insb
push
bound
dec
ljmp
pop
dec
dec
pop
movsl
xor
mov
pop
fdivrp
pop
mov
add
jmp
mov
aaa
ss
xchg
mov
inc
ljmp
mov
dec
arpl
jecxz
inc
fst
gs
sar
add
and
mov
push
clc
sarl
jo
lods
fnsave
mov
dec
outsb
mov
sarl
pop
mull
incl
jbe
and
jno
aad
dec
imul
adc
decl
or
das
and
f2xm1
sub
lret
push
or
push
xchg
daa
ljmp
push
pusha
in
ljmp
mov
ja
lock
mov
pop
hlt
push
hlt
xor
xchg
cmp
pusha
sar
call
jp
cs
movsb
dec
test
je
cli
out
aas
rcll
test
sbb
call
test
pop
add
mov
mov
shl
jge
scas
xchg
repz
jno
cwtl
std
or
lcall
test
out
gs
mov
mull
dec
jnp
pop
popf
and
jns
add
incl
imul
test
cmpsl
jp
lods
inc
add
dec
add
pusha
call
ljmp
bswap
out
inc
hlt
clc
gs
xchg
enter
mov
jne
sbb
mov
imul
jmp
mov
sub
jmp
insl
mov
or
push
pop
dec
dec
xor
imul
mov
jb
mov
mov
ljmp
jecxz
mov
decl
aas
imul
test
mov
jge
mov
push
mov
fisubs
and
fdecstp
xor
mov
push
movsb
xor
mov
ja
xor
dec
cmpsl
cmp
dec
dec
jne
mov
or
mov
push
leave
mov
lds
dec
cmp
inc
xchg
mov
popa
jns
and
mov
add
or
in
inc
fildll
push
add
test
push
or
push
jnp
and
stc
mov
xchg
sbb
gs
rorb
and
cld
sub
pop
and
mov
sbb
pushf
arpl
pop
xor
call
add
mov
clc
cmp
jnp
ret
out
jg
in
pop
cltd
ss
stc
dec
lods
mov
and
scas
mov
jp
jb
dec
inc
cmp
jne
jl
lods
out
xor
xor
scas
mov
sub
pushf
dec
xchg
fsubrp
and
fnstcw
imulb
rcl
in
punpckhbw
add
lods
aaa
sub
inc
mov
jl
push
into
pop
xor
leave
cmp
aaa
shlb
xchg
adc
and
dec
jmp
fnstenv
sbb
out
xchg
xlat
mov
mov
out
pushf
push
jb
mov
ljmp
in
aas
or
sbb
cs
aas
mov
call
lahf
pusha
dec
hlt
mov
cmp
cld
xcrypt-ctr
cmpsl
fiadds
jl
add
sbb
in
sbb
std
dec
outsb
and
xchg
mov
movsl
iret
in
adc
add
decl
xchg
and
jge
mov
inc
int
xorb
rolb
inc
repnz
pop
push
pop
mov
cmp
sbb
ja
cld
shl
xorb
imul
das
cli
daa
mov
sti
xlat
jbe
cmpsb
mov
inc
ffreep
sub
imul
arpl
mov
jmp
add
lcall
sub
call
jp
and
sbb
int3
adc
and
sbb
lcall
repnz
add
mov
adc
cmp
inc
mov
jg
lcall
aam
sub
inc
loop
test
xchg
cld
push
nop
cmp
pop
adc
shrl
cmp
mov
jb
push
nop
pop
xchg
lock
cli
rcr
lods
push
mov
movsb
inc
xor
lea
mov
adc
and
shlb
insl
shrb
dec
cmpsb
aas
push
fdivrp
mov
js
jae
sub
mov
popf
jns
mov
pushl
mov
cmp
xchg
jecxz
push
xlat
dec
mov
jno
into
adc
scas
dec
rcrb
sahf
dec
pushl
adc
stc
cmpsb
xchg
imulb
lods
test
and
jae
ret
or
xchg
dec
stos
stos
ljmp
clc
roll
pop
popf
rcll
mov
incl
cmc
ljmp
enter
jbe
ds
xchg
cltd
or
daa
jg
outsl
cli
lcall
adc
jmp
je
mov
loope
sarl
jp
popa
sbb
clc
pop
dec
jmp
sub
lods
out
fs
loope
inc
mov
jl,pt
hlt
dec
and
jae
mov
in
imul
loop
pop
dec
call
call
shlb
mov
push
iret
pop
pop
sti
movsl
lret
add
xor
ljmp
incl
xchg
iret
cmc
inc
and
sbb
cltd
icebp
jb
out
div
gs
mov
cld
ljmp
or
in
mov
in
jmp
sbb
sub
aam
adc
loope
push
cmpsl
inc
test
xchg
mov
push
pop
scas
out
movsb
hlt
or
flds
add
mov
cmp
stos
ss
mov
push
outsl
inc
lock
test
dec
xor
pop
cmp
loop
inc
imul
jp
inc
sarl
scas
xchg
data16
mov
sbb
jp
jge
fdivs
fiaddl
xor
and
icebp
dec
xchg
or
and
xchg
fwait
call
xchg
or
add
ja
sub
andl
je
xchg
sbb
xor
incl
cmp
inc
fmul
iret
outsb
adc
xchg
imul
xchg
push
cltd
mov
pushl
mov
pop
push
daa
mov
aam
orb
fistps
pop
repnz
xlat
inc
jmp
or
jnp
ss
inc
push
and
xor
xor
jle
lret
adc
test
sar
fcomps
push
enter
int3
dec
loopne
movsb
std
or
cmp
ljmp
pop
mov
pop
inc
inc
sub
pop
pushf
ficomps
clc
pop
icebp
xor
out
pushl
and
or
mov
dec
xchg
or
loope
ljmp
jge
mov
mov
or
movsl
fnstcw
mov
inc
stos
or
test
popf
adc
scas
push
lock
ja
xlat
xchg
stos
sahf
add
subb
adc
in
outsl
loope
mov
and
arpl
cmp
jmp
mov
loope
out
xchg
push
in
or
add
mov
cmp
ljmp
inc
daa
pop
ja
mov
inc
mov
pusha
sarl
ljmp
sub
mov
call
cli
push
or
les
insb
mov
js
test
test
jl
lds
aad
mov
mov
dec
das
sar
push
jns
sbb
lahf
jge
cmp
and
xor
lock
or
fimull
and
xchg
and
arpl
ffree
pusha
enter
dec
or
gs
lcall
movsl
inc
cltd
pop
inc
pushf
adc
lcall
add
bound
loopne
inc
leave
pusha
cwtl
jnp
ljmp
sar
xchg
xchg
jle
jle
pop
ret
mov
or
fisubs
fnsave
push
movsb
xchg
xchg
jg
mov
cmp
pushf
or
outsb
into
cmp
jnp
xchg
insb
fcompl
jae
ds
std
xor
pop
sarl
pop
dec
or
mov
dec
arpl
sbb
ljmp
adc
es
mov
and
sbb
stc
xor
sbb
mov
pop
test
icebp
xor
xchg
cld
enter
dec
int3
in
dec
ljmp
bound
rcll
adc
mov
mov
mov
mov
popf
fsubrs
aad
mov
sbb
mov
jge
cmp
jne
add
aam
xchg
pop
ja
push
fistl
adc
call
fsubs
js
fmul
stc
pop
add
jnp
stos
sbb
aaa
lahf
or
ja
mov
bound
outsb
xor
sub
push
xor
pushl
jg
lret
repz
jns
xor
xor
xor
mov
arpl
jg
jg
mov
jno
ja
pop
dec
repz
shlb
aam
pop
sbb
mov
jo
jmp
dec
xor
push
sbb
shrb
add
into
push
das
ljmp
xchg
jmp
adc
cmp
push
test
test
test
test
pop
pop
outsb
sub
cmp
jecxz
mov
jae
pop
push
jno
cli
add
inc
iret
out
inc
jg
daa
fwait
ret
div
cmp
in
cli
cli
data16
stos
sbb
xchg
xor
lret
sbb
lcall
cmpsl
sbb
mov
std
int3
and
es
mov
movsl
or
cli
enter
jmp
mov
adc
jns
es
push
cli
insl
adc
lret
aad
push
inc
xchg
jne
roll
adcl
fcmovu
mov
mov
ljmp
or
xor
pop
adc
or
mov
xchg
mov
or
sahf
jecxz
cmp
ljmp
mov
jno
pusha
icebp
pop
and
test
pop
cli
push
ljmp
mov
lcall
push
cli
test
lret
xchg
add
fistpll
es
mov
stc
pop
stos
sar
jmp
int3
in
mov
lods
and
jecxz
add
xchg
mov
ljmp
push
sti
mov
push
push
outsb
jge
or
jmp
adc
ljmp
cmpsl
cmp
clc
inc
xchg
cmpsb
xchg
pushl
sarl
or
and
xchg
clc
nop
jg
stos
push
sti
call
movsl
mov
loopne
cmpsl
inc
push
jne
mov
xor
xchg
mov
repz
lock
ljmp
mov
push
decl
sub
addr16
in
dec
xor
mov
loop
lcall
and
mov
enter
loope
stos
imul
mov
mov
mov
inc
or
clc
xlat
stos
test
lock
inc
bound
mov
push
cmp
and
sahf
mov
cmp
xchg
int3
or
js
jg
call
pop
mov
mov
dec
and
xor
dec
jge
pop
mov
and
hlt
xchg
sbb
dec
cmc
xchg
fs
cwtl
jp
mov
das
push
dec
pop
cld
ljmp
pop
in
rclb
xchg
je
fdivrp
dec
std
pop
and
out
adc
mov
or
frstor
cmp
fsts
fisttps
cmp
lods
xchg
shll
jge
jmp
iret
cmp
jbe
mov
decl
outsl
xor
dec
jecxz
ja
mov
and
addr16
sub
sbb
cltd
lods
mov
mov
mov
stc
cmp
or
mov
idivl
jmp
clc
dec
add
ret
outsb
ffreep
mov
loop
adc
pushl
enter
inc
cmp
xchg
lcall
pop
dec
inc
negl
ja
fisubrl
ljmp
mov
popf
mov
fimuls
sub
out
nop
test
dec
sub
xchg
push
fst
sbb
or
xlat
outsb
pop
insb
pop
xchg
mov
pushl
ficoms
push
mov
sub
or
xor
mov
inc
xchg
jp
ret
mov
push
fucomp
mov
jl
cmp
outsb
pop
cli
cmp
lds
xchg
cmpsb
shlb
lcall
mov
arpl
out
adc
xor
mov
jo
lea
shl
xchg
in
repnz
push
pop
ljmp
sbb
insl
sub
std
pusha
fwait
pop
imul
jo
sahf
jge
movsb
scas
xchg
lcall
insb
aas
adc
jne
test
lds
hlt
push
lret
into
mov
adc
std
push
mov
popa
jg
inc
cmp
cmp
jg
adc
dec
inc
inc
mov
popa
push
gs
ds
call
sub
jle
xchg
push
mov
dec
inc
mov
mov
or
clc
mov
test
adc
rorl
adc
add
xor
ljmp
lret
in
and
mov
test
bound
into
inc
dec
pop
iret
decb
das
dec
push
pop
lock
sarl
mov
xchg
mov
inc
sti
movsl
adc
cltd
ret
jg
test
imul
fldenv
movsb
movsb
outsb
call
xchg
mov
pop
mov
mov
cli
testl
ljmp
fadds
aam
xchg
rcrl
icebp
push
adc
daa
ret
sbb
jg
inc
jne
mov
dec
std
mov
sbb
decl
push
aaa
mov
and
in
pop
push
xor
cwtl
sbb
addr16
ljmp
push
loopne
sub
out
jae
fdivs
pushf
mov
xlat
movsb
jge
addr16
xlat
mov
or
and
call
out
call
xchg
xlat
lods
movsb
push
addl
cwtl
int
jns
xchg
xor
dec
inc
jmp
jle
lods
inc
ret
fcoml
sbb
lds
adc
shl
testb
jns
cmp
leave
std
mov
cld
fdiv
inc
cmpsb
inc
sbb
dec
push
cltd
popf
mov
in
shll
into
cmp
jecxz
xchg
mov
xchg
xor
inc
push
cwtl
jb
add
cmp
pushl
push
insb
inc
out
xor
roll
push
lcall
mov
cmp
inc
jmp
fiadds
inc
repz
js
mov
lds
cmpb
cwtl
ss
sbb
scas
mov
sbb
sbb
xchg
imul
jl
jle
incl
push
jmp
leave
or
dec
push
pushf
pop
inc
insl
inc
jecxz
pop
inc
dec
jle
jns
lcall
loopne
insl
ja
inc
out
lock
iret
cwtl
push
and
xor
mov
loope
insb
or
scas
mov
cwtl
out
dec
push
push
push
mov
insb
fcompl
ret
incl
push
xchg
and
fisttpll
pusha
jge
clc
cmp
or
cmp
stos
push
filds
fistpll
and
decl
push
fstpl
or
mov
popa
cmp
xchg
mov
ljmp
push
in
adc
call
pop
scas
rolb
xchg
xchg
add
call
dec
xchg
cmp
fcom
jmp
pop
dec
lds
shl
push
ret
inc
movsb
loop
test
daa
popa
inc
shlb
dec
mov
and
pop
into
imul
dec
and
ljmp
stos
add
or
gs
push
fdivl
add
sub
push
jo
ljmp
mov
xchg
mov
std
mov
add
es
fs
pop
ljmp
fsubs
jle
cwtl
jmp
dec
bound
imul
cmp
std
into
pop
push
sbb
fimuls
sti
pop
add
jnp
adc
ret
jl
jnp
jge
dec
sub
aad
add
jg
push
call
int3
es
loopne
and
jge
pop
mov
lahf
imul
mov
push
das
out
call
pop
xor
or
xlat
and
cld
add
ss
or
shlb
jno
js
mov
shrl
fcomip
cmp
pushf
pop
lret
sub
add
and
jmp
sub
xor
shl
add
imul
addr16
push
add
popf
jge
adc
mov
jg
call
repz
fimull
lcall
lcall
xchg
ljmp
ljmp
test
loopne
mov
ds
mov
jmp
les
sub
call
out
add
bound
lods
test
dec
push
fbld
jmp
push
aaa
or
sarl
xlat
lret
fs
jns
mov
jns
out
mov
es
jmp
jge
int
aam
pop
mov
push
mov
incb
and
pop
lock
lea
inc
loope
xchg
negl
in
push
push
sbb
sbb
push
jmp
aaa
push
cmpsl
lock
jno
dec
icebp
jns
xor
push
mov
sub
jmp
lret
xchg
cmp
adc
ror
lea
jo
push
jg
or
pop
iret
je
pop
ss
xchg
scas
push
push
push
nop
out
xor
inc
or
jae
hlt
sub
jl
out
pop
xchg
jmp
rcrl
sahf
les
jmp
mov
xchg
lcall
ret
inc
shrl
or
xchg
jge
add
incl
sbbl
inc
test
cmp
seta
jp
in
push
cmpsb
mov
idivl
inc
lcall
adc
outsb
js
popa
pop
or
decl
xchg
cmp
sbb
pop
ja
inc
or
jae
sub
cmp
pop
std
std
xchg
aas
push
movsb
push
ds
mov
mov
test
mov
call
loopne
inc
negl
shll
cmpsl
mov
fs
jg
sbb
lea
pop
cmpsb
shlb
cmp
push
iret
jae
xor
mov
sbb
jg
push
mov
jo
pop
cmpsb
xor
inc
movsb
rcrl
hlt
je
sub
popa
mov
add
mov
call
cmc
stc
add
sbb
mov
pop
push
xlat
or
incl
adc
push
repz
bound
loopne
xchg
sbb
call
lret
sub
lods
jne
sbb
dec
pop
xchg
mov
andb
iret
icebp
lcall
jae
xor
les
fldt
nop
mov
push
dec
insb
cs
fbstp
xlat
js
dec
cs
push
inc
in
sub
pop
clc
imul
rolb
mov
in
lds
mov
and
pop
out
rclb
scas
jg
mov
gs
iret
jmp
movsl
push
mov
mov
pop
test
aaa
std
lcall
sub
cmp
pop
sbb
xor
jle
loopne
add
outsl
cld
ljmp
lcall
enter
jns
out
inc
sub
in
mov
fldenv
call
test
cltd
jp
pop
pusha
mov
ljmp
fidivl
in
sbb
js
jb
push
pusha
add
clc
cli
ljmp
mov
leave
mov
stos
shl
lea
mov
aam
sub
xchg
sub
call
loop
mov
fisubs
xchg
xchg
js
inc
aam
push
popa
mov
jg
lock
adc
std
out
sti
addr16
repnz
mov
outsl
fstps
lods
imul
lcall
loop
pushf
mov
jge
neg
xchg
inc
repz
lahf
nop
scas
inc
stos
lret
pushl
int
jp
xor
or
xchg
das
pop
pop
mov
inc
push
out
arpl
test
mov
mov
lock
xor
out
inc
roll
or
mov
dec
sbb
or
jnp
pop
pop
movsb
sub
inc
xchg
fwait
mov
add
cmpsb
jo
js
dec
fistl
push
rcrl
stos
idiv
call
jb
jecxz
fwait
mov
push
add
sbb
pop
icebp
faddl
outsl
data16
je
test
dec
cmp
es
dec
inc
mov
sbb
xor
jne
jmp
decl
xchg
mov
loop
call
inc
jle
xor
lock
dec
jb
sub
adc
gs
scas
cmpsl
insl
mov
ja
sbb
loop
aas
jecxz
clc
movsb
ss
inc
push
pushl
dec
movsl
flds
test
add
lcall
inc
push
xchg
mov
loope
mov
stc
pusha
sbb
adc
jp
in
loope
lea
imul
rcrb
decl
daa
out
call
add
and
scas
out
movsl
adc
add
fs
cmp
call
loopne
push
loopne
call
xor
xchg
mov
cli
cs
iret
aaa
jle
cmpsl
pop
inc
add
dec
stos
mov
aaa
das
xchg
sub
cmp
addr16
push
xchg
movsb
iret
add
call
push
pop
and
je
add
push
adc
mov
cwtl
push
and
incl
or
or
cs
in
push
adc
es
scas
das
jnp
call
loope
lcall
cld
jne
mov
into
testl
pop
push
and
out
sti
adcl
adc
fldl2t
jmp
sbb
fistpll
mov
call
enter
mov
fisubrl
and
insb
inc
test
cli
xor
in
test
lret
lods
jle
loop
and
and
out
cmp
ja
mov
js
adc
or
add
sub
or
or
std
jmp
xor
dec
shlb
jns
fsubrs
rorl
imul
clc
mov
lods
aam
pop
inc
pop
fs
push
mov
jne
shlb
sub
dec
fcoms
dec
jp
push
xor
cld
decb
out
mov
mov
popf
jmp
mov
lcall
jle
sub
pop
sti
gs
inc
or
pop
cmc
ljmp
dec
lock
and
out
mov
jo
dec
mov
add
decl
xchg
in
push
das
mov
add
aas
adcl
sub
insb
ret
fcomip
incl
xchg
mov
gs
adc
inc
xor
scas
pop
cmp
subb
call
inc
mov
inc
jb
js
loop
xchg
int3
mov
mov
jg
push
lock
push
pop
push
jne
in
ljmp
sbb
sub
call
sahf
scas
push
dec
stos
fadd
xor
jns
insl
rclb
ljmp
repnz
dec
cmp
mov
or
push
jb
xchg
sahf
and
lds
mov
ljmp
sbb
fisubrl
jbe
xchg
sub
xchg
push
xchg
mov
cmp
cmp
pmaddwd
arpl
add
fnstsw
sarl
repz
jg
aam
insb
and
ficoms
sub
push
sub
mov
or
incl
cmp
hlt
cmc
pop
movsl
adc
inc
popa
xor
pop
int3
cmp
sahf
jle
call
fs
mov
or
fldcw
jns
jnp
inc
je
ret
ret
jecxz
jmp
hlt
inc
test
push
cmpsb
mov
aas
outsl
lock
jo
decl
movsb
jle
xchg
cmp
into
js
jo
sti
aam
push
xchg
into
mov
push
loope
adc
cmp
xchg
jae
fcomp
out
cld
jp
cltd
dec
cmp
jmp
adc
pop
xor
call
sub
ja
cmpsb
icebp
sahf
cmp
jns
dec
repz
fldl
xor
cmp
sahf
sub
je
xchg
pop
fwait
out
sub
cmp
loop
cmp
mov
inc
dec
sub
xchg
adc
add
loope
adc
fwait
cmp
pop
test
test
lcall
inc
fisubrs
sub
fs
aaa
pop
or
movsb
mov
es
movsb
inc
dec
or
push
dec
pop
lcall
in
loopne
fsubrl
mov
test
inc
fistpl
pop
das
call
inc
lods
sbb
add
or
decl
xchg
std
pop
fiaddl
cli
mov
ljmp
cli
lcall
inc
add
mov
mov
lret
mov
shll
mov
out
push
and
push
sbb
add
test
jl
cmp
cmpsl
loopne
sub
inc
cli
call
add
sub
mov
mov
add
cmc
add
outsl
adc
lods
loope
mov
mov
rolb
and
pop
imul
mov
call
adc
cmp
js
js
and
repnz
pop
jae
lcall
stos
dec
push
pushf
adc
sbb
ja
cmp
inc
xor
stos
and
in
insb
jo
ljmp
add
dec
jecxz
fsubr
in
sbb
cld
and
inc
jnp
inc
jp
mov
sarb
sub
push
decl
pop
mov
and
inc
adc
clc
mov
data16
xlat
sub
dec
ret
lcall
inc
out
or
adc
mov
ja
pop
and
pushl
imul
mov
divl
cmp
cmp
pop
icebp
push
pop
xchg
dec
hlt
mov
or
stc
xchg
rclb
pop
sub
sbb
jb
mov
mov
push
call
lods
fldenv
push
fbstp
fwait
jmp
movsb
mov
stos
daa
fs
jnp
ljmp
pop
aam
pop
ret
loopne
ljmp
cmp
dec
out
in
sbb
push
mov
jbe
call
cld
lahf
xlat
mov
mov
mov
sbb
jl
xor
lock
push
dec
lahf
cmp
lock
or
mov
fcomps
cltd
dec
fbstp
jp
loop
push
andb
push
das
mov
dec
xchg
mov
outsl
xorb
in
jmp
push
fwait
adc
sahf
js
sbb
mov
or
adc
aaa
cld
std
add
sbb
mov
mov
xor
mov
push
inc
call
cmp
rorb
shlb
xchg
push
cmp
pop
pushf
and
cli
pop
repz
xchg
dec
dec
pop
add
leave
jnp
and
ljmp
mov
mov
jmp
ja
and
push
push
andl
imul
enter
incl
jmp
dec
push
and
mov
jle
mov
test
cmc
push
mov
mov
adc
rcrl
sbb
mov
mov
mov
push
and
adc
pop
loopne
movsl
sub
ret
inc
pop
int3
cmp
sbb
lcall
in
lcall
push
out
out
mov
bound
cs
subb
nop
cmp
jmp
and
jae
cmp
outsl
cli
cmp
jmp
test
dec
sbb
adc
out
stc
mov
popa
jle
cmc
add
inc
movsb
sbb
add
arpl
in
push
and
test
inc
pop
repnz
mov
cmpsb
mov
repnz
mov
lods
loopne
xchg
cmp
stc
push
xchg
fs
lcall
pop
xor
fisubrl
xor
inc
mov
mov
pop
insb
xchg
add
push
scas
insl
sti
mov
incl
or
aam
sbb
cwtl
pushf
jp
cld
push
movb
jae
das
mov
add
shl
fs
mov
das
hlt
lret
add
sbb
add
repz
push
test
std
jge
jo
lock
or
and
lcall
adcl
shld
xchg
xchg
push
divl
inc
mov
cmc
es
sub
and
cld
cmp
shl
mov
not
loopne
pushl
xlat
lret
jbe
adc
push
jne
or
pop
cmc
cmc
and
or
lret
adc
decl
ljmp
cmpsb
cmpsl
sub
sub
lcall
pop
jle
inc
cmp
sbb
hlt
fistpll
jge
lods
jnp
jg
loop
cmc
jbe
mov
adc
pop
ds
push
movd
push
pop
push
std
jmp
xchg
stos
loopne
lock
sub
outsl
outsb
mov
imul
inc
add
jns
icebp
sub
cmp
nop
jno
push
mov
xchg
int3
mov
or
bound
call
jg
lods
insb
js
mov
subb
adcb
pop
bnd
jno
in
incl
sub
out
shl
adc
push
pop
jg
jae
jle
xlat
ret
inc
loope
add
add
js,pn
mov
jns
stos
test
rcl
sbb
jb
sbb
bound
insl
sbb
or
es
sbb
in
rolb
cmp
mov
bound
pop
in
lcall
adc
out
in
jge
push
pop
pop
jns
dec
and
fisubl
push
push
lods
movsl
mov
dec
adc
jge
add
adc
pushl
inc
or
push
sbb
and
push
add
fwait
out
jge
mov
mov
adcl
inc
or
jecxz
adc
cmpsl
jl
pop
rol
push
jmp
mov
dec
dec
cltd
in
out
das
aas
leave
out
fstps
mov
mov
pop
roll
iret
xor
aam
pop
mov
xchg
pop
sahf
mov
lcall
mov
pop
cs
jg
adc
lods
js
ret
in
pushl
movsl
cmp
push
xchg
and
repz
scas
popf
pop
inc
adcb
aaa
cld
or
jge
adc
dec
fsubrs
lcall
ret
mov
add
xor
jp
push
ljmp
xor
in
fbstp
repz
or
or
xchg
stos
push
fcmove
jo
push
sub
xchg
decl
pop
mov
cmp
and
stos
test
gs
ret
test
add
adc
loope
ljmp
sub
dec
cltd
mov
or
xchg
insb
mov
jo
and
jmp
dec
pushf
push
adc
sub
sbb
dec
pop
xchg
lock
insl
push
lods
mov
inc
xor
or
pop
pop
pop
adcb
adc
push
push
loope
mov
out
nopl
les
aaa
idivb
shll
push
enter
mov
incl
dec
cmpl
inc
pop
fnstcw
jae
pop
mov
icebp
decb
jmp
repnz
dec
push
shrb
or
in
test
pop
push
jmp
pushf
xor
cmp
lcall
pop
dec
mov
push
mov
add
sub
int3
sub
push
mov
lcall
test
jmp
addr16
scas
jecxz
pop
xchg
aam
and
xchg
cmpb
enter
test
xchg
adc
imul
lcall
cmc
pop
adc
int
outsl
test
loopne
lds
push
in
mov
push
enter
pop
incl
repnz
and
or
add
mov
push
scas
pop
mov
pop
das
mov
push
cmp
lcall
jo
mov
xchg
lods
or
mov
arpl
cli
call
jo
aam
jle
mov
and
insb
sbb
pushl
dec
sti
lret
xor
xchg
inc
mov
leave
mov
cmp
push
insb
sbb
aaa
push
scas
pop
xchg
daa
mov
decl
test
mov
nop
cltd
dec
test
sahf
loop
dec
cmp
cltd
inc
sbb
lods
mov
pushl
js
fs
ds
xchg
push
test
cmpsl
in
dec
repnz
and
mov
sbb
ljmp
mov
jle
lahf
xchg
jnp
push
test
call
mov
leave
ljmp
ss
push
in
addb
movsb
insl
push
gs
fidivrs
sub
out
pop
mov
adc
push
or
xorb
sbb
cmp
lcall
and
mov
mov
or
addb
lock
jae
sbb
ljmp
inc
cld
ja
shrb
outsb
loope
xor
and
push
cli
add
fs
call
xchg
idiv
jnp
lahf
mov
xor
mov
bound
mov
das
dec
dec
sub
mov
pop
lret
and
icebp
xchg
call
mov
loope
push
push
mov
mov
mov
mov
shrl
pop
jge
andb
pop
outsl
push
dec
out
fcompl
mov
pop
dec
sbb
incl
push
imul
pop
orb
mov
dec
xor
dec
jmp
cmp
movsb
add
sub
jae
sbb
bound
int3
jecxz
pop
inc
jg
cmpsl
aas
repnz
jne
mov
add
jb
loop
addr16
decl
push
wbinvd
jp
adc
add
sbb
out
adc
xor
jns
fidivrl
sti
dec
cld
fcomip
adcb
repnz
cmpsb
mov
test
lret
decl
mov
lret
pop
xor
push
push
xchg
movsl
mov
daa
jecxz
dec
enter
sar
jp
lock
cmpsb
lcall
into
cmp
jnp
sub
call
loopne
cmp
insb
sti
gs
mov
dec
and
dec
ss
aaa
lcall
fisubrs
jb
xor
sub
jp
sub
mov
je
lods
stos
lods
adc
ljmp
aas
xchg
outsb
shr
dec
fisttps
inc
push
pushf
stc
lds
into
fdivl
lret
incl
stc
mov
push
adc
push
ss
xchg
inc
cmp
jns
xchg
bnd
xchg
in
popf
mov
mov
xchg
out
mov
repz
mov
add
sti
sub
adc
lods
imull
shrb
out
cltd
pushf
adc
mov
mov
shlb
cmp
shlb
inc
xchg
fildll
rcrb
sbb
jmp
cmp
push
sbb
xchg
mov
jg
xlat
test
xchg
in
js
jmp
mov
sarl
idivb
call
scas
mov
pushf
xchg
rclb
dec
push
dec
clc
call
mov
enter
mov
in
sbb
xor
dec
jg
inc
imul
xlat
call
repnz
rol
insb
cmpsl
xchg
incl
mov
test
pop
pop
fisttpl
roll
outsb
xchg
xchg
adc
mov
and
jne
cmp
pop
clc
movsb
stos
cli
out
inc
xor
xor
cwtl
xchg
sar
jmp
nop
dec
sbb
mov
sbbb
repz
mov
cmpl
mov
adc
mov
pop
call
in
mov
or
push
mov
cmp
gs
mov
lret
aam
ljmp
rcll
push
aad
adc
sbbl
add
call
push
int
imulb
pushl
mov
lcall
lret
pushf
push
insb
ficompl
mov
ljmp
jecxz
out
cli
ds
xchg
cmpl
out
dec
sbb
xor
sbb
lcall
or
dec
nop
mov
shll
ja
lahf
jbe
cs
ret
arpl
scas
mov
pop
fcomps
int
test
shll
insb
xor
leave
or
orb
cmp
lcall
adc
inc
xor
addr16
push
dec
xlat
xchg
sbb
mov
imul
cmp
je
mov
aam
inc
lods
faddl
std
rcrl
into
cmp
loop
inc
adc
rcrl
mov
inc
cld
call
movsb
in
pushf
daa
ja
mov
ljmp
imul
rorl
icebp
outsb
mov
inc
push
xor
scas
test
in
call
lcall
pop
add
lahf
aam
cltd
push
xor
dec
fcomps
fisttps
cld
div
ss
adc
cli
mov
xor
decl
adc
ss
lds
shrb
int3
add
in
mov
jg
pushl
lock
add
cmp
and
xor
inc
jg
jmp
gs
fwait
notl
movsl
adc
cmp
imul
and
push
fidivl
dec
jae
pop
cmp
lea
in
popf
dec
fmulp
pop
cmp
fdivr
pushl
outsb
jle
xchg
dec
test
adc
adc
jge
out
and
adc
pop
mov
ljmp
pop
push
popa
in
mov
test
or
jl
arpl
xchg
and
std
adc
mov
jmp
lcall
aad
xor
iret
xchg
insl
jo
lret
and
incl
mov
fiadds
or
jb
add
stos
in
adc
xchg
arpl
aam
lea
mov
and
jnp
xchg
cmpl
outsl
push
inc
pop
ss
mov
pop
jg
test
bound
push
sub
scas
aam
js
jno
sar
call
xchg
leave
ss
sbb
mov
test
push
incl
ja
push
inc
mov
fmul
adc
lret
lock
aas
pusha
mov
nop
popf
mov
pop
sbb
roll
pop
adc
jmp
pop
jne
rorl
movsl
sub
mov
jp
test
push
pop
daa
ljmp
add
and
pop
icebp
add
xor
ficompl
loopne
push
or
gs
lcall
push
mov
lea
xchg
ret
sbb
das
push
std
lcall
push
int
out
pop
cmp
xor
aas
or
ljmp
ss
jg
sbb
inc
rorl
cmp
mov
lcall
xor
pop
insb
movsl
loope
add
sbb
dec
and
sbb
in
int
inc
decl
mov
mov
ja
insl
test
aad
mov
in
xchg
decl
push
movsb
ja
insl
out
dec
push
xchg
xchg
sbb
test
push
lret
gs
cld
decl
fbld
push
mov
test
push
push
scas
add
arpl
push
mov
jmp
sti
cmpsb
push
mov
pusha
lods
dec
xor
fcmove
pop
fisttpl
rcr
cmc
decl
stc
pop
ret
movsl
test
cli
pushf
jo
ret
push
inc
movsb
call
or
repz
mov
inc
clc
push
mov
out
cli
dec
jb
xchg
sbb
xchg
xlat
mov
call
xor
cmp
inc
mov
pushl
pop
dec
es
xorb
aas
or
mov
add
rclb
xchg
jmp
mov
call
imul
seto
mov
push
stos
xchg
mov
lea
cmc
fcomip
or
lcall
cwtl
mov
fcoms
push
dec
mov
enter
fcoml
mov
je
pop
loop
dec
cli
sub
stos
xlat
and
outsb
inc
call
dec
scas
mov
pop
clc
pop
ret
adc
jno
arpl
aaa
jl
inc
push
daa
mov
call
aad
adc
aam
xor
push
mov
testb
add
call
and
cmp
pop
insl
push
call
jl
pop
xor
inc
in
push
aas
push
gs
mov
xchg
call
cmp
push
lret
repnz
inc
jge
mov
repnz
pop
leave
jmp
push
add
mov
in
and
mov
mov
iret
jle
pop
jne
lcall
push
cmp
jge
cs
pop
enter
aam
mov
sub
out
scas
jmp
fxch
xlat
inc
sbb
sub
shll
je
xor
nop
shll
add
incl
pop
jb
xor
aas
sub
jmp
ret
cmp
movsl
xchg
mov
aaa
cld
jmp
sub
lahf
aaa
icebp
aad
test
ret
push
insl
cmp
aas
lods
xlat
jmp
fucomi
movsb
mov
or
movsl
dec
push
mov
stc
jae
mov
mov
xchg
adc
mov
cmc
xor
mov
mov
scas
cmpsl
or
sub
jg
mov
stos
stc
ret
xchg
test
pop
cli
pop
lds
pop
mov
ja
rol
pop
hlt
push
aas
cmp
outsl
add
dec
inc
loope
mov
cld
jnp
lock
popf
sar
xor
inc
xchg
arpl
lods
xor
shll
sbb
lock
ds
xor
push
mov
mov
and
xor
lcall
les
movsb
cmc
cmp
jmp
lock
ror
imul
jge
sub
fmuls
jne
ss
adc
inc
ret
or
fs
and
ds
mov
pop
insl
dec
sub
cld
sub
js
outsl
xor
test
aaa
pop
negb
ljmp
jb
jns
insb
dec
pop
xchg
mov
and
out
imul
pop
stc
cmp
pop
ljmp
lea
leave
aad
sbb
jbe
xchg
fdivr
movsl
call
cld
sahf
push
pop
dec
fidivrl
shll
push
xor
fwait
pop
sbb
push
scas
xor
dec
lcall
std
movsb
xchg
sbb
or
faddl
xor
mov
call
cmp
adc
dec
xor
and
pop
inc
movsl
xchg
mov
in
sbb
mov
mov
faddp
cltd
fnsave
jecxz,pt
insl
xor
inc
inc
sub
jmp
dec
test
aaa
out
xor
mov
call
cmc
mov
mov
ror
pop
decl
mov
and
jle
pop
pusha
push
jmp
sub
push
jne
sbb
adc
aad
mov
movsl
sbb
inc
mov
cld
inc
and
mov
pop
lcall
or
jnp
inc
movsl
outsb
int
out
call
pushl
cltd
jg
fwait
ljmp
aad
sbb
ret
jg
push
mov
in
adc
jmp
icebp
pop
lret
ret
xor
popa
dec
cmp
jns
mov
cmp
decl
push
push
mov
push
call
xor
mov
jmp
ficompl
lea
call
test
inc
push
cli
ss
or
push
mov
mov
ljmp
xchg
sub
adc
pop
xchg
popf
ret
inc
shl
aas
mov
call
cmpsb
cmc
movsb
mov
inc
sub
icebp
xor
sbb
mov
cmp
sub
call
cld
les
and
pusha
mov
fidivs
sub
adc
hlt
scas
push
add
inc
pop
jmp
in
jns
push
mov
daa
gs
push
inc
mov
arpl
push
push
ret
push
push
js
xchg
cmc
daa
popf
cli
movb
stc
es
xchg
add
lret
scas
in
push
into
push
xchg
jle
loop
mov
outsb
aam
jbe
sbb
pop
and
mov
jmp
sub
jmp
daa
mov
xor
push
jns
adc
enter
pushl
ficoms
push
dec
mov
xor
arpl
inc
clc
les
push
out
xchg
pop
add
jbe
lcall
call
cmp
adc
and
mov
call
dec
and
jns
sarl
test
rcll
pop
paddd
jmp
or
lods
and
insl
and
xchg
xchg
ret
cli
push
test
das
orb
call
call
jle
pop
push
adc
repz
shll
pop
push
add
add
popf
pop
fwait
jg
call
decb
jecxz
jge
icebp
add
lock
jae
mov
aad
ljmp
cmp
pop
fcmovb
lock
or
fbld
xchg
dec
sti
push
fucomi
ja
push
pushf
ljmp
lcall
call
mov
sahf
movsl
dec
loop
mov
out
loopne
pushf
add
dec
rorb
stos
addb
sti
xorl
push
std
icebp
and
pop
out
call
dec
jecxz
fildll
cld
lret
and
stos
adc
fsubrl
dec
cs
cmpsl
pop
push
cli
fisttps
sbb
lock
and
sub
es
in
loopne
cld
jmp
sbb
imul
pop
or
and
mov
rcr
mov
inc
mov
inc
cmp
xor
jg
adc
outsb
dec
arpl
sahf
movsb
call
into
je
cli
mov
pushl
ret
fs
out
pushf
scas
jg
or
fidivs
in
xor
incl
sub
rcr
inc
cld
pop
push
scas
lret
ret
mov
out
jmp
add
test
xchg
ret
cmp
mov
dec
ds
and
call
clc
call
aam
pop
in
add
xchg
fmuls
xor
mov
inc
mov
insl
fcompl
inc
xor
data16
jg
mov
xchg
ficoms
test
pop
adc
adc
sub
inc
cmp
mov
xor
cld
jp
std
sub
push
into
lock
push
dec
dec
fs
or
jg
in
sbb
push
decw
repz
push
rcrl
mov
mov
push
adc
movsb
mov
sti
adc
repnz
inc
lahf
popf
xlat
ret
jmp
push
mov
sbb
push
mov
cmpsl
adcl
jecxz
fmulp
jmp
outsl
out
daa
aas
inc
or
sbb
mov
mov
loope
fisubrl
pushf
leave
add
aad
lcall
scas
and
mov
scas
cltd
sub
les
mov
jmp
and
pop
cmp
adc
subb
gs
into
xchg
rdpmc
fdivrl
clc
movsb
xchg
mov
jmp
stos
mov
jg
outsl
mov
lret
ljmp
out
jmp
pushf
fmulp
ja
mov
mov
cli
sub
pop
dec
call
outsl
sbb
mov
ljmp
ret
movsb
stos
and
lret
lret
rorl
pop
add
lcall
fstpl
xor
fcom
cmpsl
jnp
add
imul
or
push
ror
mov
inc
mov
std
mov
divl
xor
push
call
jl
jecxz
lcall
push
adcl
jno
rol
lahf
sbb
jns
pop
repnz
mov
cmpb
pop
aam
loop
lds
outsb
clc
decl
mull
out
daa
cmp
jbe
jge
stc
pop
loopne
xor
pushf
push
pushf
add
adc
push
outsl
idiv
mov
jb
imul
pop
incl
mov
rcll
mov
add
mov
inc
inc
xor
mov
gs
sahf
mov
jnp
or
jno
xor
call
idiv
mov
pop
insl
and
bound
jb
mov
pushf
lods
mov
mov
jb
jp
add
xchg
sarb
pop
sbb
xchg
mov
adc
call
imul
shrb
shl
shl
in
push
add
popa
sub
fs
sub
ljmp
cwtl
push
push
mov
mov
jle
dec
xor
pop
dec
jno
packsswb
lret
pushl
dec
cltd
mov
incb
pop
lea
sbb
scas
and
incl
into
bound
mov
push
pop
and
and
rclb
ficomps
ss
pop
mov
hlt
lods
fsts
aam
aas
jne
roll
cli
mov
ljmp
rolb
xchg
dec
cwtl
inc
adc
pop
sbb
gs
decl
push
mov
pop
push
inc
loop
mov
cs
pop
movsb
shrl
ljmp
mov
decl
mov
xor
mov
imul
xchg
lea
fldt
cmp
ljmp
add
iret
lea
push
pop
stos
fnstsw
or
adc
adc
cli
dec
in
mov
lcall
push
rol
cmp
fisubrl
sub
add
and
pushl
inc
sbb
mov
scas
lahf
daa
testl
icebp
xchg
jle
push
std
call
and
popa
out
sub
dec
pop
loop
mov
lcall
ds
sbb
mov
cmp
or
addl
subb
loop
les
stos
inc
xchg
and
lods
inc
add
sbb
insb
mov
push
push
and
add
pop
adc
cmp
out
pushl
test
les
mov
jb
cltd
ficompl
cmp
dec
push
fcmovu
sbb
pop
ja
rcrl
or
ret
scas
mov
hlt
test
jg
jp
jb
je
cmp
in
leave
daa
repz
push
and
jns
jge
movsl
aaa
and
sti
out
push
fcomip
lcall
jbe
xlat
rcr
xchg
rorb
nop
ret
test
jmp
fs
and
mov
out
cmpsb
lahf
sbb
mov
fisttps
fcos
ljmp
lret
adc
or
jl
mov
cmp
shlb
dec
in
fisttpll
out
push
mov
dec
pop
add
mov
loop
push
stos
xor
std
test
dec
or
jg
decb
and
dec
nop
jae
loop
stos
cs
mov
pusha
jg
or
lock
xor
movsl
cmp
popf
daa
add
out
mov
mov
mov
nop
fisubl
daa
mov
fsubrs
mov
inc
fadd
dec
mov
incl
and
daa
sbb
sbb
out
push
jle
shrl
inc
inc
mov
mov
mov
repz
lock
mov
push
cmc
call
dec
sbb
push
xchg
mov
push
adc
xchg
add
subl
fistps
and
jo
movsb
loopne
add
stc
sbbb
pop
test
lock
jmp
and
push
mov
cltd
dec
rcrl
test
mov
shrb
pop
sahf
rcrb
xorb
lods
mov
insb
jmp
jl
aas
mov
incl
dec
or
setae
scas
fldl
mov
jae
outsl
jno
aam
pop
xchg
xor
mov
mov
mov
popf
xor
cltd
push
sub
mov
and
mov
pop
xor
jmp
mov
enter
adc
imul
jo
cmpsl
mov
jg
repz
decl
lea
pop
mov
and
fimuls
push
adc
arpl
sub
pushl
add
xchg
and
cmc
adc
mov
sub
push
cltd
lods
adc
push
mov
hlt
dec
xor
ja
jmp
fbld
jl
mov
ljmp
xchg
jl
sub
negb
inc
jmp
cmpsb
lods
and
out
inc
pop
ret
or
ljmp
fdivl
xlat
sbb
imul
test
test
test
out
outsl
clc
decl
mov
testb
adc
cmp
sar
aad
jmp
call
adc
in
mov
mov
push
add
mov
xor
push
dec
jg
ljmp
in
jnp
jns
insl
and
xor
and
mov
mov
push
pop
pop
std
jmp
or
jg
xor
insb
push
jb
bound
rorb
jmp
shrl
jnp
inc
call
out
loope
std
dec
jb
adc
test
push
aas
pushl
pop
adc
popaw
ret
ret
cmp
in
sti
push
out
and
mov
decl
pop
gs
mov
mov
fcomip
mov
or
int3
stc
mov
push
fwait
decl
call
fs
lea
test
xchg
jp
leave
in
dec
faddl
xchg
add
int3
add
or
data16
pop
push
fsubrp
ja
cmp
pushl
jle
rcll
sti
addr16
mov
adc
cmc
jbe
mov
push
mov
mov
cld
stc
xor
and
nop
test
stos
lcall
mov
arpl
jg
pop
test
and
mov
pop
pop
js
es
push
xor
sbb
jl
adc
incl
cmp
xor
repz
icebp
dec
cmp
fldt
in
insl
pop
jmp
shr
gs
and
cwtl
int3
xchg
jne
push
jbe
xchg
pop
aad
mov
mov
jmp
add
loope
leave
das
cli
and
sti
pop
adc
orb
in
std
adc
jmp
pop
lcall
push
loopne
not
add
ljmp
mov
test
mov
mov
outsb
lock
push
add
lcall
or
lods
add
shll
xchg
add
xchg
push
add
mov
movsb
fmuls
test
in
sbb
aad
call
pop
pop
sahf
leave
sbb
dec
adc
adc
pop
cmc
jmp
jle
aas
or
jmp
imul
and
pop
mov
lcall
repz
xor
sub
dec
adc
pop
lret
xor
xchg
push
add
out
pop
mov
xor
movsb
jmp
sbb
pushl
pop
out
int3
cwtl
push
inc
aas
shll
fwait
sub
into
fimull
pushl
or
repz
es
sarb
and
xchg
pop
ret
inc
inc
rcll
lcall
sbb
or
icebp
inc
loope
xor
out
test
push
mov
ja
jg
inc
jp
pop
xor
arpl
scas
popa
aam
arpl
ror
jmp
xor
aaa
dec
adcl
mov
sti
andl
adc
mov
lret
dec
cmp
cld
push
arpl
pop
add
inc
std
pushf
pusha
push
or
call
add
call
xchg
add
lcall
push
loope
sub
fs
out
sar
mov
aam
mov
insl
dec
add
jbe
rorl
adc
push
lcall
push
mov
mov
xchg
ds
sub
js
mov
sbb
jl
ret
incl
cltd
lods
testb
adc
sbb
adc
clc
dec
mov
xor
incl
ja
push
cwtl
sbb
add
mov
sbb
xchg
lcall
mov
jb
sbb
lahf
add
push
in
mov
add
lcall
xor
in
jb
sub
test
push
mov
pop
add
cld
call
inc
add
inc
inc
ja
sbb
push
int3
inc
pop
inc
divb
insb
orb
adc
scas
mov
sbb
inc
sbb
pop
fsts
jle
jbe
bound
jno
add
incl
push
sbb
or
icebp
int
fistps
dec
dec
imul
call
sub
das
cld
jmp
loope
and
xchg
in
jne
xor
cltd
dec
push
fwait
or
or
jmp
add
sti
sbb
cmpsb
sbb
mov
mov
cmp
xchg
out
mov
sub
movsl
adc
leave
ljmp
mov
nop
sbb
ret
maxps
in
ja
jns
idiv
addb
lcall
int3
and
insl
jne
jae
adc
test
and
mov
movsb
test
push
jmp
adc
cmp
adc
mov
repnz
out
gs
push
scas
jne
pop
ljmp
add
ret
in
jns
push
pop
pop
cltd
mov
ja
sahf
mov
decl
ffree
xchg
mov
fmul
jmp
mov
cwtl
sub
out
cmp
lcall
and
arpl
add
js
dec
mov
pop
mov
in
push
jmp
and
sar
jmp
or
and
fs
pop
xchg
inc
rclb
roll
loope
std
jle
pop
cmpb
stos
or
ret
and
xchg
out
popf
arpl
jp
mov
cmpl
adc
dec
int
fwait
push
dec
repz
jmp
dec
iret
insl
add
or
cmpsb
in
mov
xor
and
mov
inc
std
and
pushl
push
int3
call
push
std
jecxz
imul
test
add
js
push
outsb
jle
mov
incl
xchg
movsl
cwtl
sub
jge
outsb
fmull
xchg
adc
mov
out
xor
push
adc
hlt
pop
xchg
xor
mov
sub
mov
lds
or
in
shrb
inc
dec
test
pop
mov
pop
scas
cmpsl
push
push
in
mov
clc
incl
push
out
xchg
cmpsl
or
imul
repnz
push
test
pop
in
mov
jg
scas
sub
lret
cmp
inc
adc
xor
mov
loop
push
std
popa
jo
hlt
lcall
mov
pop
cltd
fwait
int3
inc
daa
add
aad
lcall
imul
pushl
jecxz
dec
adc
cli
fcmove
pop
inc
insb
hlt
or
xor
mov
add
ljmp
js
and
adc
add
dec
sbb
mov
jae
decl
mov
into
ret
pop
imul
add
adc
es
incl
mov
jl
loope
inc
pop
rol
mov
pop
mov
fbld
xchg
les
mov
mov
lods
repz
movsl
subl
pop
gs
in
jmp
cmp
outsb
icebp
pusha
fsubs
popf
dec
pop
push
rolb
mul
and
scas
jbe
ljmp
out
adc
inc
push
push
pop
dec
dec
push
sbb
js
mov
std
ljmp
imul
arpl
hlt
pop
call
xchg
lret
sbb
jmp
jl
add
or
outsl
xor
mov
sbb
ret
adc
lret
test
stos
in
mov
mov
ret
out
mov
push
movsl
mov
jp
xchg
jmp
push
scas
inc
out
mov
pushl
cmpsl
aaa
shl
ret
pop
std
pop
sbb
jb
mov
push
popf
pop
or
ljmp
addr16
into
pusha
scas
mov
sbb
add
mov
ljmp
xchg
adc
nop
push
aam
pop
or
lods
mov
xchg
xor
pop
nop
lcall
fcoml
mov
jp
or
sub
enter
daa
sar
decl
icebp
iret
call
ja
lret
add
dec
cmp
mov
sbb
ljmp
jecxz
pop
push
xchg
mov
jmp
mov
lock
call
pop
mov
rcr
adcl
test
xor
mov
sarl
sbb
ret
in
cmc
sbb
insb
push
sarl
xor
ret
dec
stos
xor
fsubrs
sub
inc
fisubrl
dec
add
mov
dec
adc
subl
mov
and
xchg
pop
test
out
cli
bnd
add
rol
mov
sar
jg
test
or
push
push
fistps
mov
xchg
and
incl
xor
and
inc
cmp
mov
cmc
loope
mov
decl
ljmp
ror
scas
pop
fsubr
xor
push
mov
fs
inc
fidivrs
addl
pop
sbb
sarb
or
popa
lock
xchg
mov
lock
call
sub
sbb
js
sbb
aad
mov
pop
mov
sar
lcall
insl
imul
sbb
sbb
push
add
push
jae
lcall
insb
lea
jae
cmpsl
xchg
mov
push
or
loope
imul
dec
ret
iret
lods
cwtl
mov
je
mov
int3
and
aas
or
pop
inc
push
int
ljmp
repnz
std
push
xchg
in
cmp
pop
xor
fidivs
incl
imul
cmp
es
xor
hlt
imul
aas
pop
imul
or
call
adc
mov
int3
inc
into
jb
cmp
lahf
jle
xor
call
test
cmp
les
jno
xlat
mov
decb
mov
mov
mov
daa
mov
daa
adc
pop
flds
jmp
adc
jae
xor
cmp
cmp
out
sar
cwtl
or
pop
pop
int
fcmovnb
inc
mov
mov
cmp
push
mov
pop
pop
das
mov
sbb
mov
dec
jbe
call
push
into
xor
sub
inc
mov
ljmp
popa
or
add
movsb
mov
ljmp
xchg
je
lods
and
jo
stos
mov
pushl
xchg
fisubl
outsl
sub
jge
sub
push
sub
and
les
dec
popa
stc
push
sti
lods
and
or
incl
mov
dec
ljmp
sbb
decl
shld
arpl
xor
lods
cmpsl
mov
rcl
sti
pusha
jp
and
and
cld
pop
fcmovbe
repnz
scas
mov
mov
jae
shrl
mov
xchg
jg
jmp
jg
dec
test
jne
shl
divl
adc
nop
xor
push
fldl
fstl
sbb
aam
jg
ficoms
je
imul
cmp
adc
test
cmp
add
lret
sbb
cltd
and
movsb
ljmp
sub
pop
and
cmp
xchg
ficoml
push
mov
add
inc
orl
inc
andl
push
jne
pop
int
std
lahf
sbb
shlb
mov
testb
mov
sub
and
stos
test
mov
imul
mov
and
jmp
loope
out
popf
sbb
mov
lcall
sbb
fcomps
push
iret
insb
inc
adc
add
xlat
xor
ja
inc
incl
repnz
rol
fsubl
cmp
cmp
adc
dec
cwtl
mov
push
dec
stos
dec
popa
push
push
into
ss
jle,pn
daa
jecxz
adc
lcall
test
pop
pop
adc
imul
movd
mov
call
jae
jae
loope
loop
push
cs
emms
jle
fiaddl
neg
jne
xchg
call
adc
andb
pop
enter
sub
mov
xor
xor
mov
inc
mov
test
xchg
xchg
xchg
int
idivl
mov
fdivr
jmp
jmp
enter
mov
cmp
leave
aam
sub
xor
or
push
jmp
call
mov
clc
ljmp
mov
cmp
cmp
mov
add
pushl
or
in
mov
cmp
cli
pop
repnz
sahf
adc
ficoml
repnz
mov
popf
sub
push
sbb
push
add
decl
add
and
ljmp
in
jge,pt
xor
iret
inc
aaa
xchg
inc
fcomip
in
sahf
leave
xchg
fiaddl
mov
scas
lea
incl
mov
or
sub
into
mov
jnp
pop
inc
aad
xchg
insb
mov
ljmp
pop
jecxz
jle
and
sbb
push
sbb
cmpsb
outsb
cmpsl
movd
jmp
lcall
adc
inc
ss
movsb
js
sahf
fwait
xor
fidivs
lahf
xor
out
ret
insb
scas
mov
or
mov
test
ljmp
cmp
push
dec
sub
ljmp
aad
xchg
aad
addr16
scas
pusha
xor
rcrb
lcall
cmp
pop
jle
sbb
mov
dec
mov
scas
je
jnp
lds
in
decl
imul
shll
jge
cwtl
adc
jae
push
arpl
or
incl
jb
dec
sbb
pop
outsl
insb
jns
ja
mov
sub
xchg
and
lods
xchg
xor
ljmp
fldenv
xchg
mov
pusha
inc
xor
push
pmaddwd
in
outsl
sub
push
cmp
and
add
incl
jg
push
into
push
mov
pop
fnstsw
iret
popa
cmp
inc
int3
adc
mov
jg
lcall
add
ljmp
push
pop
inc
aad
out
addr16
or
pop
clc
cmp
mov
mov
fistps
negl
ljmp
pop
xchg
inc
xor
call
orb
bound
outsl
mov
fdivrl
lea
xorb
shrb
scas
adc
clc
and
sbb
clc
in
rclb
frstor
mov
pop
pop
out
fwait
pop
cmp
lods
pop
sbb
push
add
arpl
sar
jae
mov
aaa
sbb
test
add
jo
imul
pop
decl
cwtl
fs
and
or
mov
cmp
cwtl
mov
inc
jmp
mov
xchg
or
xchg
mov
push
pop
inc
adc
incl
adc
cmp
sar
bound
mov
push
in
ja
bound
fwait
push
push
mov
jmp
fbld
es
xor
jg
enter
cltd
push
test
outsb
adc
lret
inc
movsb
push
outsl
test
call
xchg
shl
mov
loope
cwtl
bound
pop
daa
mov
sarb
ljmp
xor
lcall
pusha
roll
lcall
lods
sbb
pop
cmc
call
movsl
mov
movsb
test
pop
push
shrl
and
add
cli
lods
call
incl
je
sub
stos
loope
aam
fimuls
pushf
push
or
jmp
in
in
shll
adc
xor
outsl
fdecstp
mov
xor
shlb
adc
cmp
mov
cmp
mov
roll
loop
or
subb
sti
dec
lcall
call
and
jo
add
mov
xchg
mov
or
mov
lock
std
test
sub
cmpsb
push
cmp
in
stos
xchg
ds
xor
mov
out
lcall
jl
fcom
loopne
movsb
ss
xchg
pusha
shlb
jo
add
xor
add
call
je
mov
test
out
push
and
add
pop
push
lret
jmp
xchg
push
pusha
out
jl
mov
xchg
sti
shll
shl
push
ljmp
mov
fcomps
loopne
xor
stos
mov
mov
jecxz
mov
or
int3
cmp
ljmp
sub
lahf
sbb
push
xor
inc
loopne
in
in
pop
lcall
jns
bnd
cld
cmp
inc
cwtl
adc
incl
scas
sbb
cwtl
dec
jno
xor
push
and
fsubrs
mov
pusha
loop
stos
in
xchg
fcompl
sub
fwait
push
cmp
fwait
dec
mov
sub
sub
and
daa
sub
insb
push
shr
pop
fsubs
adc
pushl
outsb
jne
aas
xor
out
dec
inc
or
fistps
and
ds
fistps
pop
push
iret
data16
fildl
lret
adc
lds
xlat
inc
dec
mov
dec
lods
xor
in
in
dec
lock
jnp
test
mov
dec
jmp
sub
cmpsl
insl
dec
sbb
cmp
inc
shll
pushl
rcrl
or
pop
stos
sbb
out
cmp
test
mov
ret
cmc
out
clc
out
repnz
fldt
xchg
loope
mov
sub
cmp
push
int
lock
mov
outsb
dec
cmp
repnz
or
mov
or
decl
jl
xchg
out
ss
push
xchg
das
and
lods
and
pop
and
daa
cmp
add
test
pop
sub
pop
ljmp
into
movsb
in
mov
mov
in
iret
out
mov
adc
mov
jns
adc
loop
in
es
push
or
push
xorl
pusha
mov
ljmp
stos
xchg
add
xor
inc
pop
xchg
pusha
fdivl
pop
shll
scas
sub
shr
pop
and
jne
sub
xor
or
jns
push
push
movl
lds
jo
cli
ljmp
aaa
dec
sbb
decl
push
out
push
and
mov
je
dec
ror
and
shll
mov
sti
jno
fstps
jo
add
lret
cmpsl
sub
jle
les
inc
sbb
insl
insb
sub
incl
mov
fimull
imul
ret
nop
in
inc
das
lds
mov
int3
add
lret
pushl
dec
movsb
movsb
sarb
outsb
mov
aad
icebp
out
ret
mov
incl
push
mov
sub
dec
je
cmp
add
mov
push
adc
mov
and
cmpsl
lds
lock
adcl
xor
loopne
std
lcall
popa
jecxz
call
xor
adc
or
xchg
and
and
mov
push
in
push
sub
lcall
shll
ficomps
dec
rcr
jbe
cmp
jnp
mov
lret
lret
adc
into
or
enter
dec
xchg
dec
js
call
push
mov
je
loopne
sti
enter
xchg
pop
loopne
sbbb
jns
xchg
mov
lret
jmp
shl
bound
stc
sub
les
mov
out
pop
cmp
cmp
lea
lret
test
push
cli
notl
enter
xchg
push
pop
sub
inc
imul
notl
and
imul
call
subb
nop
xlat
adc
gs
cmc
mov
push
loop
in
adc
int
add
xchg
add
pop
cld
jnp
into
jge
scas
mov
popa
iret
push
mov
aam
jnp
jmp
add
push
mov
add
mov
or
pushl
cmp
push
jmp
and
std
or
aaa
push
sub
mov
jno
xchg
add
mov
push
incl
mov
adc
pushf
mov
or
stos
rclb
cmpsb
xor
incl
adc
jns
in
lods
mov
xor
int3
addr16
jg
pop
das
test
stos
cmp
aam
faddl
movsl
int
test
xchg
adc
xor
mull
dec
xor
ja
decl
add
mov
popf
inc
test
in
jecxz
adc
pusha
test
cmpsl
xor
pushl
and
xchg
push
in
arpl
das
mov
dec
sub
and
outsb
mov
pushl
dec
imulb
adc
xor
loope
mov
ret
lea
sbb
scas
fstl
xchg
push
pop
dec
adc
inc
add
inc
pusha
cli
addr16
cmp
pop
inc
jecxz
movsl
mov
cmp
cli
arpl
jg
sub
mov
sarl
xchg
gs
jns
ljmp
pop
mov
cmp
xchg
sti
aas
mov
mov
aas
das
jns
adc
push
jmp
mov
ss
mov
ret
xchg
cwtl
lods
arpl
int3
dec
cmp
cltd
or
in
and
or
cmp
out
imulb
mov
xlat
leave
call
lcall
daa
fadds
cli
fbld
in
scas
sbb
mov
and
scas
push
rdpmc
mov
icebp
sub
movsl
out
push
fidivs
hlt
lcall
push
jno
test
inc
nop
sub
call
call
adc
and
mov
pushf
cmc
divb
mov
test
incl
insl
sub
mov
jno
in
xor
xchg
scas
mov
inc
cmpsb
fsubrs
pop
lret
xor
stc
lea
sub
fnstcw
fs
movsb
rcll
inc
cli
dec
outsl
mov
insl
mov
outsl
insl
stos
mov
aam
push
dec
lods
push
mov
popf
clc
pushl
icebp
inc
jle
aaa
pop
scas
pop
sahf
imul
mov
mov
push
shl
mov
push
jle
cmpsl
addl
push
xlat
stos
push
xlat
insb
fidivrs
push
hlt
sub
sub
ret
int
sub
jae
mov
int
pushl
dec
pop
sar
sub
xchg
mov
ljmp
addr16
cmp
cld
and
ja
pop
rorb
mov
cmpsb
sbb
scas
neg
or
stos
dec
jae
cmc
sbb
imul
in
orl
movsb
sbb
inc
loop
std
out
dec
int3
leave
pop
cmp
xchg
cmp
enter
call
mov
movsl
push
xchg
filds
in
jmp
jecxz
aam
addr16
sbb
mov
cmc
fwait
or
mov
in
mov
sbb
popf
mov
movsb
dec
pop
mov
jne
aam
push
inc
jbe
ljmp
je
scas
sub
xchg
jg
dec
sub
das
or
out
pop
stos
incl
gs
jb
xchg
lahf
cltd
cmp
loop
add
inc
push
gs
loope
dec
push
pushl
aaa
popa
jl
and
sbb
inc
cwtl
jno
xchg
insl
adc
sub
data16
jnp
jns
call
add
shrb
sbb
test
fsubs
je
aas
and
push
icebp
xchg
mov
clc
in
fimuls
les
sbb
xchg
pop
ds
jg
adc
lock
cltd
and
mull
lods
bound
cli
lock
aas
lcall
call
popf
pop
push
scas
push
mov
xor
fldcw
sub
xchg
cmp
decl
mov
js
mov
popf
imul
push
jo
ja
in
fisttps
fcmovne
push
xor
mov
inc
das
xor
outsb
or
mov
adc
decl
cmpsl
push
sub
insb
mov
in
hlt
add
and
push
scas
call
dec
scas
addr16
mov
lock
push
lea
or
test
and
ljmp
cli
lcall
pushf
inc
arpl
pop
jo
daa
xor
clc
je
lret
sar
inc
mov
ljmp
mov
or
or
sbb
icebp
imul
pop
add
jae
adc
dec
icebp
sub
dec
inc
fs
dec
jbe
fbstp
mov
cmc
dec
lcall
cwtl
xor
lcall
jnp
inc
adc
movsl
dec
test
cwtl
or
sbbl
es
xor
call
shlb
lds
adc
movsl
les
out
and
xchg
call
je
incl
inc
cmp
data16
jmp
mov
mov
cmp
das
cmp
cli
sbb
and
mov
mov
popa
mul
icebp
stos
xor
call
sbb
xchg
stc
inc
enter
sub
push
aaa
fsubr
cmpsl
push
cld
jecxz
test
or
fmull
push
call
push
incl
mov
stos
sbb
fists
mov
std
mov
push
mov
fimull
lcall
xor
subl
jmp
outsl
xchg
push
test
adc
jmp
sub
add
inc
incl
inc
adc
aaa
fwait
xchg
ficompl
pusha
mov
cmp
xchg
call
inc
stos
lret
fsubrs
xchg
enter
out
mov
leave
push
add
decl
test
int3
xor
adc
jge
sub
test
push
mov
push
mov
filds
add
sbb
jae
js
sbb
mov
loop
xchg
xor
inc
fld
pushl
lds
pop
in
frstor
dec
cld
or
mov
dec
mov
fadds
out
insl
xor
into
dec
push
xorl
ljmp
sbb
dec
mov
into
popf
or
xchg
xor
ljmp
mov
lret
inc
cs
mov
sbbl
pop
cltd
jp
shll
jmp
fcomip
insl
jb
sub
je
filds
sbb
xchg
push
push
push
jmp
scas
ss
jb
jb
daa
out
enter
call
decl
dec
mov
adc
ja
push
pusha
test
pop
and
dec
dec
insl
pushl
mov
pop
xor
dec
pop
sub
clc
dec
icebp
enter
sbb
and
rcll
fcomip
les
ds
or
das
pop
sbbb
ss
call
std
dec
icebp
lea
push
je
movl
les
mov
dec
gs
call
lahf
cmp
fldt
movsb
sahf
inc
movsl
mov
mov
ror
or
ljmp
out
pop
call
sub
inc
sub
lds
cmpsb
push
leave
clc
cmp
aam
sub
jne
cld
adc
cmp
sarb
jmp
mov
and
mov
and
pop
sbb
inc
jnp
lcall
jmp
jmp
add
jmp
xchg
mov
push
mov
test
inc
fsubrl
xchg
shlb
pushl
je
cmp
out
jbe
test
mov
mov
dec
cmpsb
jb
and
std
and
jecxz
cli
pushl
dec
jmp
mov
mov
dec
gs
aas
xchg
xor
fistl
notb
test
aaa
pop
sti
popa
sbb
mov
mov
adc
lret
cli
decl
mov
movb
loop
iret
icebp
xor
pop
cmc
fistpll
cmc
lcall
out
inc
subb
jmp
and
movsl
dec
lock
sti
and
in
loopne
push
jg
or
mov
cmpsl
push
pusha
ds
loop
lcall
push
out
stc
stos
jo
sbb
pop
clc
dec
cmp
and
jo
out
xchg
icebp
stc
pop
fs
push
or
nop
popf
es
and
or
and
inc
iret
daa
dec
jne
adc
sbb
incl
adc
add
mov
jp
and
pop
pop
lahf
repnz
cmp
xor
cs
push
xor
jg
lods
lret
xchg
push
mov
xor
cmp
in
jb
dec
or
ds
out
scas
mov
mov
dec
jg,pt
pushl
cwtl
sarb
lahf
pusha
pop
ja
push
inc
xchg
xchg
sub
adc
arpl
gs
xchg
dec
jnp
out
xchg
xchg
sbb
sbb
cmp
add
mov
cmp
mov
faddp
inc
fs
andl
outsl
jg
mov
testb
insb
pop
xchg
shl
mov
mov
mov
cmp
jmp
adc
or
mov
in
cld
xor
fcomp
mov
or
mov
or
loop
jp
adc
je
movl
mov
out
lods
scas
sahf
or
in
lcall
lock
mov
cmpsb
sarl
jno
and
push
cmc
pcmpgtb
mov
jmp
rorb
push
addl
stos
lods
in
roll
scas
sbb
cmp
incl
orb
stos
imul
adcb
lea
fsubrl
aas
xor
jmp
stc
mov
aas
xor
adc
mov
cmp
int
mov
mov
jnp
and
flds
ljmp
xchg
daa
sbb
cwtl
sub
cld
mov
loopne
pop
add
mov
cmp
jo
cld
xchg
fists
add
sahf
ret
push
sti
mov
dec
sti
cmpl
sar
fwait
test
das
mov
add
adc
out
mov
or
mov
pop
shlb
mov
in
loop
mov
loope
outsl
pop
ficoml
lcall
xchg
lds
aad
int
sbb
ret
arpl
mov
or
fisttpll
adc
dec
out
jmp
pushl
lods
mov
jmp
les
cmpsb
cmpl
outsb
push
adc
incl
jns
mov
push
sub
loop
push
dec
jl
xor
inc
lahf
mov
incl
stc
in
insl
nop
xor
into
fs
jb
push
jmp
add
jmp
pop
int3
out
mov
dec
xchg
mov
mov
jns
in
fwait
stos
jbe
push
pop
mov
push
xor
push
push
fwait
sbb
mov
jns
dec
dec
daa
int3
dec
call
loope
push
jbe
sub
mov
jnp
aad
scas
mov
enter
mov
ljmp
int
movsb
ret
pop
subb
stos
sub
pop
inc
cmp
xchg
mov
ja
sub
incl
test
ljmp
js
and
sbb
sar
popa
popa
repnz
fnstsw
pushl
std
jg
mov
movsb
int
pop
iret
test
insl
inc
and
pop
mov
dec
repz
icebp
decl
jnp
stos
jno
xor
pop
movsl
xchg
push
xchg
jg
or
cmc
xor
push
sar
pop
xor
fistps
ret
lcall
ror
inc
data16
out
cli
mov
push
dec
cs
aam
mov
mov
mov
loope
pushl
outsb
lods
xor
cmpsb
stos
icebp
mov
cwtl
or
lcall
push
cltd
sbb
int
add
mov
sub
adc
rolb
and
incl
ljmp
rcll
push
gs
sub
mov
ret
dec
adc
ljmp
pop
mov
std
jbe
outsl
movsl
sahf
stos
xor
jl
lahf
scas
das
push
jno
or
inc
push
sbb
push
pop
test
inc
bound
je
clc
sub
shlb
push
decl
test
nop
adc
sbb
fcoml
mov
bound
add
sbb
pop
outsb
sahf
ljmp
call
xchg
mov
mov
into
je
out
dec
and
xor
or
xchg
ret
shll
cmp
dec
test
or
adcb
sub
fisttps
xchg
sub
push
sti
out
sti
je
sarl
xor
mov
xor
xchg
push
jbe
es
sub
aaa
cld
mov
push
test
xlat
sub
push
lahf
cmp
sbb
mov
fisubrl
jp
adc
cwtl
rcrl
push
shll
test
or
adc
cli
fptan
dec
int
push
int3
xor
outsl
cmp
movsl
bound
mov
xchg
daa
mov
fmull
ss
inc
cli
enter
outsl
mov
mov
ja
mov
jg
call
push
jl
test
sub
push
lret
mov
call
loop
mov
lcall
in
sbb
popf
dec
js
sbb
pop
fcmovb
pop
leave
arpl
inc
lds
mov
insl
aad
call
lret
data16
xorl
out
jg
jle
adc
clc
icebp
aaa
arpl
js
inc
push
cmpsl
pop
movsl
fbld
inc
sub
stos
fidivs
mov
xor
call
adc
cmp
adc
das
pop
and
shl
mov
aas
addl
data16
ljmp
lret
int3
ss
outsl
pop
rorl
fisttpl
incl
mov
mov
ret
xchg
fmull
cli
mov
inc
sub
outsl
push
push
lret
hlt
inc
movsl
loop
in
mov
and
out
cli
dec
mov
push
es
mov
scas
lcall
add
push
scas
push
jmp
and
jo
je
sbb
in
sub
popa
int3
in
xchg
or
enter
fcoms
decl
lods
rcrl
cs
dec
pop
sbb
dec
or
xchg
int
lcall
xchg
sbb
adc
push
int3
jmp
and
pop
jnp
mov
dec
clc
stos
mov
xlat
or
jmp
pop
loopne
mov
push
inc
xor
push
cmpsl
mov
pushf
fcomps
ljmp
cli
in
jnp
imul
out
in
inc
mov
sahf
ror
imul
adc
or
je
test
mov
jmp
in
mov
mov
sbb
jns
ds
xchg
loop
ja
orb
mov
incl
pop
fst
pop
mov
xor
sub
and
movsl
add
jg
xor
push
and
sub
imul
in
lods
xchg
out
loop
clc
jmp
cmpsb
jns
outsb
mov
cwtl
shlb
mov
push
aad
mov
xor
into
xchg
jo
and
data16
cli
or
xor
jg
inc
ss
xchg
dec
adc
push
push
dec
inc
movsl
incl
add
mov
mov
mov
test
rcrb
subl
lret
js
lcall
daa
sub
xchg
repz
mov
mov
pop
pop
test
xor
xorl
ret
insl
loop
es
ljmp
imul
dec
call
mov
cmp
decl
repnz
dec
xchg
inc
dec
lock
loopne
xor
into
add
jno
mov
jmp
mov
add
mov
loope
int
negb
push
pop
mov
ss
and
pop
cwtl
call
inc
lds
or
jns
leave
insl
insb
and
out
ret
push
pop
ret
sbb
lret
pop
add
dec
cmp
sub
push
inc
push
fldl
insl
push
sub
test
loopne
sub
pushf
test
sbb
push
xorl
stos
cli
popa
mov
fnclex
mov
hlt
jmp
cld
lock
inc
int
fbld
mov
mov
adc
jne
inc
pop
or
xor
or
sub
jle
rol
jo
ret
sbb
pushl
or
mov
lds
aam
ret
scas
out
adc
xchg
les
push
sbb
ja
cmp
clc
decl
aaa
fcmovnbe
divb
insl
push
lock
pop
iret
mov
ds
call
adc
and
xchg
mov
jo
push
bound
ljmp
mov
shll
jnp
or
xchg
cmp
xchg
push
scas
ja
cmp
dec
addb
sbb
aam
ljmp
jno
push
or
mov
xorb
pop
sbb
adc
adc
mov
imul
xor
jmp
pop
imul
mov
ljmp
ret
lods
xchg
push
or
sub
aam
inc
stc
scas
xor
in
outsb
sbb
test
jmp
lock
jne
mov
jmp
es
rcll
mov
ljmp
lods
cmp
add
mov
jp
out
and
cmp
ret
clc
sar
pop
icebp
call
loope
fmuls
jbe
das
mov
dec
add
sbbl
out
adc
in
mov
sti
cmp
fwait
outsb
clc
jmp
jmp
imul
ficoms
outsl
test
cld
pushl
cld
dec
adc
or
or
cmc
in
dec
and
cld
cmpb
dec
mov
in
repz
into
in
pop
mov
lcall
push
test
aas
cmc
and
mov
jbe
jnp
int3
popf
loop
mov
or
xchg
adcb
shll
lret
mov
mov
mov
mov
into
fdivp
filds
lds
loopne
jo
pop
xor
cmp
enter
rolb
decl
cwtl
fsubrl
jecxz
sbb
jno
jnp
dec
xor
mov
mov
lahf
lods
pop
cmpl
jmp
sub
sub
mov
loop
into
mov
push
push
cmpsl
cmp
ljmp
add
pop
mov
sub
stc
leave
test
lret
push
xchg
dec
dec
mov
jmp
andb
inc
mov
dec
out
aaa
mov
pop
call
mov
mov
pop
cs
cmpsl
js
or
das
dec
in
lock
push
ss
dec
inc
das
ja
decl
xchg
and
iret
test
int3
lahf
mov
and
jp
popa
push
outsb
popf
pop
notl
dec
outsb
jl
mov
cmc
xor
mov
sbb
rcll
js
pop
sbb
fcomps
je
rol
ljmp
les
xor
push
lods
stos
pop
mov
mov
jae
xor
dec
lock
cs
incl
pop
pop
out
fwait
xchg
cmp
int
das
inc
or
push
xor
xlat
or
in
repnz
out
inc
mov
fidivs
jp
or
cmp
inc
decl
mov
pop
xchg
inc
pushf
sbbl
imul
ret
add
call
adc
xchg
pop
inc
cmp
mov
and
adc
mov
sbb
negb
pushl
and
push
and
adc
xor
aas
cmpb
std
sbb
int
mov
cmp
and
ss
add
in
fwait
mov
scas
loopne
push
sbb
xor
popf
push
pop
test
outsb
add
push
imul
pop
rcll
and
jno
mov
nop
lahf
insl
pop
mov
and
and
add
lods
sub
jg
pop
idivl
mov
inc
pop
pop
jle
mov
or
sbb
fs
jnp
mov
sarb
jp
jnp
xchg
inc
lock
arpl
xor
lcall
fstps
sti
mov
mov
jne
mov
mov
loopne
rorb
movsl
cmp
incl
adc
ret
test
jge
sbbb
lods
pop
movsl
lds
movsl
push
push
dec
xor
cld
xchg
imul
jl
repnz
cmp
mov
mov
pop
jno
push
sbb
lahf
std
jmp
add
lods
into
mov
cmp
imul
test
inc
into
mov
sbb
rcll
add
faddp
xor
jg
clc
and
and
and
push
dec
jno
fs
loopne
decl
bound
sub
xchg
xor
add
ja
out
pop
and
cli
fcomip
lcall
sub
pop
vfnmaddss
dec
aam
fsubs
cmpsb
decl
push
mov
fwait
cmp
pop
mov
adc
mov
dec
pusha
pop
adc
push
dec
push
xor
dec
out
mov
frstor
pop
iret
dec
sbb
pushl
and
xchg
mov
dec
scas
jle
pop
sub
call
repz
xchg
mov
inc
js
pushl
dec
mov
insb
fidivl
or
xor
inc
xchg
and
pop
xor
pushl
adc
mov
cmp
ret
pop
pop
xchg
fdivrs
fidivrl
adc
push
in
xchg
cmpsb
repnz
add
add
push
movsb
xor
cld
mov
imul
push
clc
lods
or
pushl
stos
add
inc
out
in
roll
mov
push
sub
and
pop
or
adc
lcall
lcall
xor
rclb
xor
fldcw
pop
cwtl
mov
cmpsb
icebp
insl
pop
pop
int3
pushl
xor
jmp
xlat
cltd
loop
adcb
jae
insb
mov
xchg
mov
xor
sbb
pushl
pop
xchg
test
shll
add
sarl
lcall
dec
xchg
add
lcall
fisubrs
rcrl
popa
push
notl
mov
in
push
cwtl
fcoms
test
xchg
movsb
lods
pop
push
lret
sbb
ljmp
clc
and
xchg
mov
cmp
int
js
outsl
or
les
sub
decl
jns
fdivr
dec
cli
mov
cmp
inc
jecxz
les
fbstp
and
dec
stos
and
jmp
out
push
jns
lcall
xchg
lret
aas
xor
inc
cmc
pop
icebp
incl
xchg
dec
aad
bound
aaa
adc
lcall
push
xchg
sbb
mov
xchg
jle
mov
add
and
xchg
test
ljmp
popa
cmp
xchg
clc
aaa
cli
movsb
adc
cmp
mov
jno
lods
push
std
lcall
rorb
shl
int3
scas
adc
iret
lods
imul
fwait
lock
stc
push
jge
pop
adc
lret
loop
mov
jmp
pushf
lret
pushl
dec
mov
dec
lock
mov
xchg
mov
out
adc
cltd
inc
push
fldl
mov
outsl
movsb
mov
decl
pop
mov
mov
jge
cli
fildll
les
cmp
jae
out
sub
leave
iret
ret
incl
rcrb
iret
mov
xor
sub
sub
cld
scas
jmp
fcomps
mov
adc
xchg
cmp
call
xchg
mov
mov
fmuls
lahf
imul
add
mov
xor
fmull
push
gs
fstpl
data16
pop
sub
mov
inc
les
stos
pushl
xchg
popa
popa
std
mov
xchg
push
mov
push
add
loope
jbe,pt
pop
mov
pop
inc
int
pusha
adc
cmp
xor
mov
ds
jne
mov
dec
and
sahf
push
dec
in
js
lcall
orb
sar
sbb
insl
mov
outsl
ds
xor
cmpl
fcoms
call
fisubs
xchg
icebp
movsb
push
and
push
xchg
and
xchg
xor
gs
popa
xor
dec
jle
ljmp
in
bound
lret
cmp
insb
adc
adc
aad
cmpsb
jne
ss
push
ljmp
sbb
push
lods
adc
cli
out
bnd
sub
jo
pop
pop
or
inc
cmc
push
xchg
pushl
scas
out
cmpsb
mov
push
fwait
pushf
xor
pop
cltd
xchg
and
cmp
int
pusha
sub
hlt
push
jmp
movl
adc
mov
loope
mov
lods
pop
sub
inc
leave
add
jg
test
push
mov
hlt
into
jmp
stc
lods
ljmp
fnsave
cs
xor
add
jmp
aaa
int
jp
mov
sub
pop
sbb
out
xorb
adc
jbe
push
jo
jmp
or
jmp
hlt
and
jecxz
dec
outsl
repz
jmpw
sbb
inc
and
push
ficomps
mov
cmp
xchg
jmp
jne
or
adc
jge
cmpsl
inc
pop
dec
push
pop
jae
repz
mov
mov
lcall
jecxz
adc
daa
orl
lods
pop
adc
sbb
sub
decl
fcmovnb
rcl
mov
arpl
pop
or
mov
call
clc
stc
das
ret
daa
mov
lock
mov
xorl
jg
jge
lea
sbb
mov
lea
pop
lods
mov
mov
outsb
adc
cmpl
js
add
xchg
mov
loop
inc
addl
sub
jae
mov
fucom
orb
shll
jg
push
push
enter
mov
push
cmp
in
iret
push
insl
lcall
ja
out
ljmp
cmpsl
xor
sub
inc
sbb
outsl
dec
pop
ja
sub
add
pop
mov
xchg
lcall
lret
dec
loope
mov
push
rcrl
test
and
mov
cmp
decl
in
and
pop
mov
call
imul
insb
incl
test
jnp
stc
sbb
push
fwait
inc
leave
push
or
mov
in
scas
mov
ret
stos
add
xchg
pushl
inc
lds
dec
push
mov
sarl
arpl
xchg
mov
xchg
cmc
mov
movsb
in
ljmp
pop
in
xor
mov
and
fildl
and
data16
or
ljmp
clc
push
jbe
scas
popa
dec
jnp
cmpl
adc
push
sbbl
cmpsb
sub
mov
jns
mov
push
nop
lret
inc
xor
jmp
hlt
xor
or
mov
add
flds
fwait
call
js
mov
pushl
lcall
lcall
or
xor
fldt
push
cmpsl
jne
test
xlat
sbb
sub
imul
shrl
or
jge
test
add
xchg
and
and
sub
sbb
lods
mov
inc
and
jmp
xor
dec
add
bound
out
int3
xor
pop
lods
jbe
jo
and
movsl
inc
inc
mov
je
movsb
jg
inc
stos
mov
cmp
ss
bound
jmp
pushl
adc
adc
fdivr
nop
jp
pop
sbb
or
cmp
loopne
aad
imul
stos
jle
pushl
ds
stos
sbb
je
xlat
dec
push
or
hlt
dec
daa
lcall
stos
dec
mov
pop
dec
xor
xlat
mov
jns
or
pop
xor
cmc
clc
pop
dec
mov
ja
and
inc
decl
sbb
adc
xor
add
rcrb
add
out
js
adc
ljmp
fs
sub
mov
lret
cwtl
jl
jge
loope
fldcw
sub
mov
test
push
arpl
xchg
xor
xchg
mov
fidivrl
lret
hlt
incl
cld
loope
xor
sbb
push
sbb
lahf
jle
adc
jb
xchg
decl
and
push
inc
or
or
out
jg
rcr
sub
push
mov
and
and
pop
loopne
push
lcall
sar
bound
test
jmp
fisubl
inc
xchg
loope
repz
test
push
fsubs
lock
or
cmp
pop
mov
test
inc
adc
inc
std
inc
ja
clc
sarb
sub
xchg
lds
test
outsb
fildll
repz
fildll
pop
pop
or
fs
dec
popf
jecxz
inc
or
mov
shll
movsl
dec
in
aam
rolb
call
sub
cwtl
mov
sub
test
xchg
xchg
in
fcoms
lcall
dec
lods
adc
cld
add
mov
rclb
push
adc
fisttpl
subb
jmp
aam
nop
arpl
sub
add
pop
lds
aad
cmpsl
out
sbb
xorb
lock
and
and
cmpb
xor
lcall
dec
lcall
into
addr16
outsb
mov
mov
iret
fidivrl
out
push
rcll
incl
ss
aam
clc
sub
sti
cmpsb
outsl
jle
pushf
loopne
add
lock
ljmp
mov
fistpll
adc
in
inc
dec
inc
and
sti
dec
cltd
xchg
or
and
mov
lret
es
int3
push
push
mov
jns
sarl
scas
int3
cmc
shl
jmp
std
aaa
pushf
inc
cmp
dec
mov
rcr
inc
jno
lds
xchg
push
adc
lcall
rcll
outsb
add
dec
sahf
clc
es
mov
push
loopne
enter
adc
incl
jg
int3
in
dec
jno
adc
call
sub
test
mull
dec
push
sbb
rclb
in
xchg
nop
sar
cmp
testl
sbb
aam
std
fs
ds
push
ficompl
push
repnz
incl
in
add
or
inc
leave
mov
mov
xchg
and
lds
in
cmp
jbe
pushl
jg
insb
not
daa
sbb
xchg
push
cltd
inc
jg
xchg
test
jmp
mov
pop
pop
or
bound
mov
nop
pop
cmpsl
aad
lret
ljmp
fdivs
leave
dec
adc
xchg
iret
xchg
outsb
and
out
xor
js
sbb
mov
pushl
cs
outsl
mov
xor
jecxz
in
ljmp
cmp
std
pushl
push
aaa
mov
add
sub
jge
andl
rcr
mov
jmp
jmp
popf
fdivs
adc
aad
popf
lret
jns
icebp
je
lret
mulb
idivl
cmp
mov
jno
mov
jmp
push
orl
mov
into
cmp
sbb
dec
push
inc
aam
loope
icebp
fs
mov
pop
lock
sub
rcrb
sbb
jl
mov
out
pop
xor
pushl
adc
rclb
jbe
je
pop
xchg
loope
outsl
jns
js
stc
add
jg
jae
add
sub
cltd
clc
fbstp
mov
stos
out
decl
push
nop
jno
sub
loope
leave
xor
les
sbb
or
push
xchg
inc
mov
mov
addr16
jle
xchg
test
inc
addl
fdivr
push
adc
pushf
out
and
pop
dec
fwait
call
mov
lods
xor
cmpsb
addr16
push
lcall
pushl
sahf
cmp
test
mov
hlt
mov
lock
adc
fsubl
decl
mov
pop
outsb
jp
cli
lods
mov
cmp
scas
mov
or
dec
pushl
incl
outsb
lds
adc
fwait
and
xor
leave
clc
xor
daa
add
xchg
je
sbb
adc
jb
ret
adc
aas
jecxz
and
pushl
fcoml
fiaddl
vprotd
rcrb
jno
push
icebp
imulb
ds
decl
pop
jmp
out
and
jg
inc
test
imull
cld
add
cmp
push
decl
pop
cli
std
shll
mov
xchg
xor
mov
jne
xchg
lcall
popa
jp
xlat
push
ficomps
jecxz
mov
das
mov
cmp
imul
ljmp
jmp
mov
xor
fcoms
bound
movsb
ja
add
incl
mov
xor
cli
insb
adc
ret
imul
cmp
lcall
cmp
lcall
sub
sbb
mov
icebp
or
xor
mov
xlat
ljmp
or
mov
or
es
das
je
arpl
xchg
lcall
sub
cmc
dec
negb
int
xchg
xchg
adc
jns
xor
imul
test
jmp
mov
enter
shld
dec
inc
or
das
mov
mov
mov
cmp
xchg
mov
xchg
call
and
jg
sub
mov
call
pop
inc
jnp
cmp
jns
sbb
repz
lcall
lea
xchg
jnp
sub
ret
daa
jo
mov
xchg
pushf
cwtl
sub
push
jg
mov
cmp
mov
mov
adc
adc
inc
cmc
jmp
inc
or
add
add
add
int
add
bound
mov
orl
icebp
dec
out
jecxz
mov
mov
xor
stos
mov
inc
push
cmp
fistps
repnz
jp
das
lods
push
jae
lea
xchg
popf
mov
mov
mov
icebp
test
out
xor
or
lods
cmpsb
insb
dec
sub
addr16
push
push
call
cmpl
cld
sub
jbe
mov
cli
int
pop
nop
pop
and
call
mov
int
stos
insb
shl
repz
dec
sbb
cmpsl
and
rolb
aam
scas
jmp
jnp
lret
jge
imul
daa
xchg
jne
inc
rclb
das
cltd
lcall
sbb
fnstcw
pop
sbb
mov
mov
pop
loop
cli
add
aas
ljmp
ljmp
xor
jne,pt
xchg
iret
lahf
pop
rorl
sub
fists
xor
testb
rorb
pushf
clc
add
jae
and
sbb
stc
mov
mov
xchg
jg
xchg
mov
mov
pop
sahf
jecxz
scas
clc
dec
outsl
mov
subl
fdivs
and
icebp
clc
mov
scas
lret
outsl
out
or
pop
cwtl
cltd
mov
fisubrs
jb
add
in
mov
loopne
cmp
or
mov
or
inc
push
and
or
inc
push
xor
xor
adc
out
jmp
adc
push
je
dec
mov
inc
mov
and
mov
and
pushl
jb
push
adc
cltd
sbb
xchg
lahf
push
test
sbb
call
cld
pushl
mov
test
push
imul
clc
call
mov
orb
adcl
stos
rcl
lahf
sub
cltd
jo
cli
mov
dec
pop
sub
add
test
int3
push
je
jl
out
cmp
call
add
sub
aam
loop
es
repz
mov
or
mov
or
cmpsl
dec
dec
out
test
dec
push
and
add
inc
outsl
cli
jmp
leave
push
loope
movsl
cli
pop
xchg
mov
push
loope
push
adc
mov
cmc
fidivrl
lret
add
inc
cmpsl
outsb
popl
cli
test
in
jns
jo
outsb
adcb
out
fisubl
mov
sbb
pop
outsl
inc
dec
pop
and
adc
or
jl
pop
fisttps
nop
inc
cmp
mov
dec
cmp
mov
iret
clc
jmp
pop
add
adc
lcall
inc
xor
out
jbe
negl
mov
pushl
push
inc
daa
and
mov
popa
fidivs
xor
aas
adc
ljmp
stos
adc
lcall
mov
or
mov
mov
cmp
mov
incl
dec
loopne
movsb
ss
jo
sub
jbe
mov
stos
xchg
sub
incl
add
mov
xchg
jl
pop
adc
stos
addr16
xchg
rcl
out
dec
cmp
mov
or
mov
cmc
jb
cmp
mov
mov
ret
or
mov
ljmp
fs
xchg
dec
push
xchg
pop
pop
cmp
cwtl
into
aaa
and
das
jge
jmp
outsl
jle
test
inc
repnz
jae
fstl
lea
jbe
repz
mov
int
xor
sbb
pop
popa
test
out
adc
rcll
decl
adc
cmp
jns
test
adc
aas
and
pop
aam
cmp
cmp
mov
jne
das
out
xchg
lcall
push
jne
idivb
fucomp
data16
pushl
iret
cmp
imul
mov
pavgb
dec
scas
xchg
imul
pushl
jp
arpl
push
test
fiadds
cmpsb
imul
clc
inc
mov
fwait
and
incl
stos
cmp
mov
cld
cmpb
sub
mov
and
adc
daa
decl
decb
aas
lds
jecxz
pop
push
xchg
and
dec
mov
ljmp
fcompl
dec
push
mov
aad
sub
out
push
ror
adc
mov
mov
jmp
dec
and
sbb
fnstcw
mov
jecxz
push
push
fcoms
stc
insb
lods
sub
fidivrs
aaa
or
sbb
dec
out
mov
cmp
adc
xor
jbe
pop
jg
call
test
sub
in
shl
out
mov
xchg
scas
incl
out
testb
in
push
cli
adc
inc
stos
jp
lcall
sub
xchg
sbb
aaa
xchg
dec
rcl
add
push
ds
adc
fdivrl
out
dec
pushf
mov
ja
push
hlt
out
lods
hlt
lods
pushl
add
lods
mov
rorb
pop
push
pop
lock
lcall
in
cmp
shlb
repnz
cmp
sbb
cmp
sti
add
fdivs
popf
ljmp
xor
cmp
outsl
scas
xchg
popa
ds
add
pushl
mov
or
cmp
arpl
std
out
and
daa
fbstp
add
and
das
adc
sbb
mov
in
sub
cmp
pop
es
fistpl
pop
fbstp
sub
cmpsb
lock
inc
jecxz
roll
ljmp
push
push
adc
inc
adc
xchg
ss
dec
xchg
and
xor
out
int
xor
mov
out
inc
adc
cmp
mov
daa
xor
sti
pop
out
int
lock
jno
repz
pop
in
lcall
pop
scas
stos
cmc
std
cltd
repz
les
or
add
mov
pop
mov
std
jno
mov
cmpsl
fwait
sub
lods
jge
ljmp
dec
jecxz
push
movsl
in
mov
enter
sub
ret
es
loope
sbb
jle
push
fs
adc
xchg
decl
lock
or
enter
jmp
mov
xor
push
incl
jbe
pop
cmp
add
mov
push
mov
je
out
aam
div
inc
jle
or
lds
jbe
jg
call
jno
xlat
jmp
and
les
call
sbb
cld
jmp
lcall
popf
xor
cli
es
lock
sub
mov
cmp
movsb
push
sub
mov
dec
aam
sti
jg
sub
popf
inc
cmpsl
in
push
jnp
out
mov
lock
aad
ljmp
stos
jp
xchg
fwait
leave
mov
push
stc
fwait
ss
out
xchg
nop
adc
mov
test
jl
mov
fwait
lods
sbb
out
js
pop
cmp
push
fimull
dec
xchg
mov
xchg
js
sti
cmp
sar
inc
nop
divb
jmp
inc
and
stos
ficompl
and
cmp
mov
sahf
pop
lods
dec
pusha
jne
cmp
in
clc
ljmp
out
test
les
dec
jo
add
decl
adc
fs
inc
sbb
jle
popa
stos
scas
mov
outsb
inc
lcall
ljmp
adc
jno
repnz
es
loope
testb
icebp
cs
xchg
add
push
cltd
clc
fmulp
fisubrs
rclb
pop
add
decl
fdiv
dec
jecxz
imul
lock
dec
mov
mov
xlat
out
clc
int3
pushl
data16
sti
sbb
jno
out
mov
mov
cmp
ds
pushf
rol
cmp
lods
jmp
jg
cmp
cmp
adcl
jae
push
cmpsb
pop
add
cli
jmp
arpl
dec
mov
test
add
arpl
inc
mov
into
fnsave
sbb
popa
hlt
jns
incb
mov
xor
loopne
xor
sar
lcall
xor
aam
push
and
fcomi
sub
or
jl
jg
xchg
xchg
sbb
mov
adc
rcll
iret
popf
scas
inc
andb
adc
sti
bound
pushl
and
push
push
add
inc
fsubr
add
fdivp
test
inc
mov
pop
cmp
cmp
mov
decl
push
cwtl
inc
pop
push
xor
adc
shlb
mov
dec
lret
scas
xchg
jmp
pop
and
lea
gs
dec
outsb
push
lea
inc
mov
daa
stos
add
jg
cmp
inc
scas
daa
rclb
cmp
ljmp
cld
adc
add
jmp
dec
popf
test
sti
push
stos
jne
ret
add
mov
pop
push
notl
fldcw
adc
inc
mov
mov
inc
pusha
into
sub
inc
icebp
je
mov
call
jg
push
mov
cwtl
loopne
pop
add
cmp
xchg
js
jbe
sahf
or
jmp
sub
rcll
lcall
mov
inc
es
ss
jno,pt
loope
push
pop
rorb
mov
xor
dec
push
pushl
adc
imul
mov
fildl
sub
push
mov
ljmp
xor
das
push
or
xchg
pop
add
psllq
and
push
mov
ljmp
js
sti
std
movsb
fstpt
rol
pop
add
es
adc
pop
mov
sbb
call
cli
mov
js
shrb
in
push
bnd
rorb
outsb
cmc
jo
mov
call
clc
mov
mov
adc
inc
call
inc
mov
lock
cld
cmp
dec
lods
ret
lea
std
pushf
repz
xor
mov
aas
lods
push
pop
push
and
lods
faddl
xchg
mov
cli
out
adc
data16
into
decl
fcoml
push
pusha
or
push
out
mov
lret
jmp
mov
lcall
int3
mov
daa
push
mov
les
xchg
pop
sbb
insb
mov
push
loopne
inc
andb
addb
mov
fwait
xor
call
sbb
pop
dec
mov
cmpsl
cmp
sbbb
clc
xchg
cmp
jnp
cmpsl
xchg
add
pushl
sub
mov
or
scas
sub
push
jl
repnz
xor
xor
inc
jp
lcall
popf
std
dec
sbb
cwtl
iret
lret
mov
xor
in
ja
jb
jmp
out
jmp
or
adc
xor
adcb
pushf
out
imul
sbb
ljmp
mov
fdivr
subb
adc
or
sub
jmp
or
cmpsl
mov
push
in
add
mov
push
fistps
or
imul
jmp
cmc
adc
lret
xor
jnp
inc
mov
jo
xor
icebp
push
cmp
jmp
fimuls
sub
lret
cmc
push
call
loop
mov
loopne
movsl
xlat
or
jle
dec
xchg
inc
mov
push
inc
pop
lock
pop
test
jg
insl
fimuls
or
push
rorb
dec
in
lcall
add
mov
dec
clc
rcrl
pop
push
jg
xor
icebp
and
clc
lods
ja,pn
shlb
push
aaa
push
lahf
shlb
je
lock
mov
cmp
ret
push
in
mov
mov
xchg
ds
mov
mov
scas
jl
cltd
movsb
adcl
jge
and
in
aam
jmp
out
ljmp
sar
aam
repz
lret
sub
addb
pop
pop
frstor
fs
mov
mov
aaa
repz
fldcw
xchg
jns
lds
scas
andl
inc
mov
add
mov
push
jno
cwtl
xchg
mov
fistpll
ja
ret
dec
inc
ss
inc
aad
loopne
mov
cltd
mov
jbe
xor
xor
pop
dec
in
call
cld
jp
in
and
push
hlt
jecxz
jmp
sub
or
push
lret
xor
push
adc
incl
stos
sub
and
and
mov
into
xchg
pop
pop
inc
jns
or
xchg
scas
jp
push
mov
push
xor
loopne
shlb
inc
shl
loope
and
or
lahf
mov
adc
mov
ljmp
lock
mov
lods
inc
fidivl
enter
xchg
cmp
pop
leave
out
or
decl
lds
push
imul
pop
dec
mov
popa
pop
mov
fldl
xor
dec
ljmp
sub
lock
mov
jb
mov
imul
inc
adc
and
mov
add
repz
dec
xorl
dec
test
or
out
outsb
clc
sbb
lcall
xchg
xchg
iret
xor
andl
lcall
jmp
insl
jp
popf
in
pushl
push
popf
xor
cmp
adc
idivb
jne
data16
cmp
jmp
mov
out
cli
test
mov
jg
repnz
mov
cld
loopne
mov
int3
jmp
pop
in
sub
pop
shll
shlb
pusha
decl
pushl
mov
cmp
push
add
push
cld
mov
into
sbb
pusha
jb
push
cwtl
daa
push
push
cmpsb
repnz
xchg
and
jge
inc
nop
rorb
aad
mov
xchg
mov
ret
sub
push
jno
add
mov
inc
fistl
decl
out
fdivrl
pop
pop
and
shlb
ljmp
jo
sbb
xchg
xor
sbb
dec
push
in
sub
fidivrl
lcall
xchg
sub
pop
movsb
cmpsl
push
andb
adc
xor
call
roll
cmp
push
cmp
mov
mov
and
add
jo
jmp
ret
and
sub
jmp
sbb
sub
fdivr
dec
js
lock
jmp
jb
mov
sub
aad
ret
dec
cs
sub
out
adc
int
lret
xchg
arpl
lcall
repnz
fs
sbb
loop
clc
lret
push
sbb
movl
lcall
popf
mov
sub
xchg
pusha
inc
ja
out
cmp
sbb
adc
xchg
inc
sbb
lea
imul
push
fidivrs
lods
push
mov
adc
nop
scas
aas
lods
cmpsb
call
sbb
xor
fistps
in
fidivrs
lods
cmp
lock
jg
cmp
xor
mov
fcompl
aam
ret
sbb
decl
out
in
mov
mov
adc
into
cwtl
push
adc
mov
inc
adc
lcall
pop
lcall
sub
hlt
and
inc
dec
das
adc
pop
dec
or
xchg
scas
jns
push
dec
cmpsb
sar
js
shrb
pop
mov
in
int
pushf
cmpb
mov
jle
push
inc
outsl
je
call
xchg
xchg
stos
sub
inc
and
rclb
mov
decl
iret
sbb
and
ja
xor
add
in
push
call
ss
and
jno
rcr
leave
js
pop
push
fwait
arpl
aaa
lcall
and
lcall
mov
popf
push
ret
sub
lret
adc
jmp
test
sbb
aas
jp
add
push
sub
cli
add
push
pop
mov
and
mov
call
push
xor
jmp
adc
imul
cli
pop
cmp
cmp
fwait
pop
incl
fldenv
push
pop
lret
xor
xchg
pop
loopne
cmpsl
xlat
bound
test
test
pushl
movsb
and
dec
js
fs
ja
cmpb
sub
cmp
cmp
fucom
jb
mov
cltd
adc
lahf
je
add
dec
xchg
lods
inc
cmovne
push
leave
jo
mov
js
cmp
ljmp
add
fldl2t
fimull
push
mov
fldenv
sarb
jbe
stos
incl
je
xor
lea
lock
jns
nop
push
pop
pop
mov
ficoms
adc
ljmp
lret
ret
shrb
mov
adc
jmp
sbb
mov
jnp
lcall
gs
jb
jge
test
or
in
aas
or
pop
in
pop
imul
orl
addr16
sbb
outsb
iret
ljmp
rcr
scas
pop
sbb
stos
pop
dec
iret
lock
das
xlat
subb
decl
jno
and
adc
xor
mov
outsl
movsl
repz
subl
adc
pop
aaa
hlt
mov
icebp
push
call
mov
pop
je
imul
jg
fisubrl
dec
sti
and
lods
pop
jecxz
pop
pop
add
das
adc
jmp
push
jp
mov
dec
fdivl
fs
movsb
pop
xor
popa
jp
cld
decl
lds
sub
inc
sub
sbb
xor
dec
bts
xchg
insb
xor
inc
sahf
jns
xchg
nop
pop
hlt
sub
cltd
in
dec
popa
xor
out
inc
sub
stc
dec
xchg
stc
scas
popa
mov
cld
out
inc
icebp
adc
test
cmp
out
mov
xor
sbb
mov
repnz
je
mov
and
test
sbb
lea
push
sub
add
sbb
std
subb
or
xchg
push
test
push
jns
incl
int3
dec
jecxz
fadds
push
fisttpl
clc
aas
mov
mov
int3
cmp
paddd
jmp
inc
lock
mov
sbb
gs
mov
pop
fdivl
cmp
lods
ret
xchg
lret
imul
incl
stc
popa
xchg
jle
in
or
dec
push
lds
mov
es
sbb
mov
and
ds
sub
push
and
out
mov
fiaddl
cs
cs
or
mov
in
in
mov
adc
and
mov
sub
stos
ljmp
call
sbb
loopne
sbb
jmp
ss
and
clc
imul
push
push
insb
stc
mov
sub
mov
nop
push
test
push
and
sbb
cmp
add
sarb
xor
mov
sub
ret
xor
jae
jae
cmpsl
cwtl
stos
xchg
mov
jl
insl
lcall
loope
cmp
decl
loop
loop
pop
sub
xchg
in
or
pushl
pop
dec
leave
push
cltd
jns
pop
into
pushf
jle
dec
shll
and
cltd
stc
hlt
xchg
popf
or
adcl
std
decl
in
imul
cld
add
stc
insb
mov
mov
mov
fstpt
sub
fistpll
sbb
jl
daa
cmpsl
dec
push
fnstenv
or
pushl
int
xor
push
repz
mov
add
loopne
jns
movsb
add
dec
adc
incl
ss
cmp
fidivl
add
stos
xchg
pop
cmpsb
push
out
inc
push
adc
add
popf
sub
ret
aad
iret
xchg
iret
test
incl
and
outsl
pop
stos
add
pushf
addl
call
ljmp
or
inc
sbb
pusha
push
lcall
push
xchg
decl
sub
test
out
xchg
cmp
dec
or
inc
shll
mov
mov
inc
cwtl
xor
jns
xchg
fimull
data16
sub
sbb
rolb
mov
mov
jmp
test
or
shll
ja
lods
xor
push
nop
lcall
xor
gs
adc
pop
push
push
jns
loope
fistl
enter
mov
jb
xchg
mov
into
shrb
lcall
test
js
decb
ljmp
or
bound
fwait
adc
mov
pop
inc
jb
xor
push
out
xchg
jns
std
mov
lret
or
fdivs
inc
xor
push
mov
incl
pusha
adc
mov
push
push
mov
adc
pop
or
dec
xor
sti
mov
xchg
orl
jle
mov
sub
mov
pop
jg
out
rcr
and
aam
mov
xchg
push
insb
sarl
cld
mov
pop
loopne
decl
mov
lock
cmp
xchg
pop
insb
imul
call
in
or
jo
pop
les
mov
jge
mov
xchg
lock
inc
pop
xchg
add
enter
or
mov
jns
or
ror
fcomip
in
shl
and
inc
push
out
adc
xchg
scas
movsb
popa
aam
sbb
inc
ja
xchg
or
int
hlt
mov
jmp
jne
xchg
popf
push
cs
xor
dec
mov
sbb
in
xchg
jnp
push
js
aad
mov
cmp
cmp
mov
insb
rcll
fldt
pop
jb
stos
call
and
cmpsl
adc
rorb
inc
insl
adc
push
mov
aad
aad
and
enter
push
xor
push
das
daa
jecxz
and
sar
call
clc
mov
fwait
xlat
andb
push
pop
int3
iret
pushf
das
fists
cli
enter
sbb
jecxz
sub
out
pop
cmp
pop
pop
lods
shrb
xor
pusha
push
lcall
call
data16
out
lahf
push
mov
nop
pop
ljmp
sbb
jns
decl
push
mov
flds
fwait
mov
xor
mov
shlb
ljmp
movsb
dec
les
outsl
test
fwait
add
pusha
shlb
lods
inc
ret
xchg
and
lods
scas
icebp
imul
adc
or
test
int
sub
mov
hlt
jno
cmp
mov
lcall
mov
cmp
mov
dec
loop
jg
or
sub
test
mov
sub
mov
sub
test
daa
fwait
jns
mov
mov
fwait
pop
mov
sahf
loopne
inc
push
sub
inc
ja
xor
push
and
lods
mov
lcall
test
movsb
mov
lret
nop
cmp
nop
in
into
cmp
ficompl
fsubs
les
aaa
sahf
aaa
ljmp
int
daa
enter
mov
mul
filds
push
pushl
movsb
rolb
pop
xchg
movsl
sbb
or
clc
scas
lock
dec
rclb
inc
push
cmp
call
mov
ficoml
lds
ret
lods
ret
xchg
repz
add
jg
insl
and
and
cmp
adc
and
jp
pop
filds
dec
dec
push
xchg
lcall
shl
add
mov
nop
xor
xchg
incl
aas
js
popa
addr16
adc
dec
xor
inc
jp
pop
gs
push
mov
jmp
loopne
sbbl
mov
adc
xor
mov
cmp
pop
pop
ljmp
clc
mov
ss
xor
pushf
sti
mov
imul
jecxz
push
lods
lcall
xrelease
xor
lret
inc
lea
push
pop
fcoms
lret
sub
cmp
or
jmp
push
pop
xlat
xor
test
push
cmp
inc
xor
mov
pop
repnz
and
out
shlb
stos
push
xchg
mov
push
mov
cmp
jb
out
pop
dec
mov
inc
xchg
adcb
fmul
arpl
jns
jae
ljmp
pop
fisubl
inc
pop
and
shrb
out
outsb
pop
inc
int3
xchg
test
sub
pop
je
inc
push
mov
push
pop
inc
mov
and
and
icebp
or
out
int
mov
aas
test
jg
in
jl
pop
int3
mov
popf
xor
jb
testb
lock
pop
lods
pusha
lock
mov
fisubl
add
ret
aad
add
pop
xorl
scas
pop
jle
add
add
sbb
incl
push
addr16
fdivs
mov
inc
sub
adc
aaa
jb
dec
sbb
cmc
outsl
fsubs
loopne
fs
fstp
decl
jecxz
mov
fdivrs
int3
jno
or
jle
mov
sbb
repnz
sub
add
call
jns
lods
scas
jl
call
mov
push
push
jg
push
sub
mov
sti
loope
call
inc
cmpsb
sbb
lcall
jge
adc
in
sub
pushf
ret
aaa
stc
fadd
mov
pop
xchg
fsts
push
icebp
mov
fcoms
clc
decl
cmp
mov
addr16
out
dec
bound
hlt
xlat
cld
lea
adc
stos
or
xchg
cmpsl
lcall
gs
test
sbb
pop
jmp
cmp
fwait
mov
movsb
or
xchg
cs
ja
pop
dec
push
in
clc
push
or
lcall
inc
fs
mov
sbb
out
pop
xorl
push
fimull
incl
sub
jmp
divb
ficoms
jmp
std
mov
into
jae
mov
loopne
mov
xchg
into
add
les
ljmp
sbb
sub
mov
adc
pop
mov
inc
mov
iret
mov
movb
pushf
mov
xchg
jmp
mov
in
adc
jmp
push
mov
popf
insl
add
test
dec
xchg
cmpsb
jge
int3
mov
or
fcomps
sbb
in
lret
mov
shll
xor
xor
fsts
jg
add
scas
jne
stc
arpl
rolb
or
inc
add
rcr
test
ljmp
cmp
add
add
sbb
into
adc
jbe
test
repz
call
fnstcw
hlt
cmp
mov
push
mov
int
inc
fbstp
notb
xor
call
hlt
push
jb
inc
inc
je
std
push
pop
shlb
imul
iret
sar
mov
jns
repnz
pusha
rclb
jmp
out
pop
xor
fmull
jns
clc
int
pop
inc
ja
decl
add
aad
idivb
xlat
filds
mov
rorb
jo
lcall
addps
jb
mov
mov
push
rcrb
mov
xchg
xor
clc
movsl
loop
mov
jle
and
movl
jmp
roll
je
sub
inc
and
shrl
xchg
lcall
ljmp
leave
enter
pop
mov
mov
sub
in
jl
or
mov
cli
cmp
test
adc
decl
pop
pop
insl
xor
push
xchg
add
push
out
shl
and
js
rorb
xchg
pop
call
or
incb
or
adc
ret
test
fdivl
mov
fbld
mov
xchg
sub
sbb
jnp
enter
or
movsb
movsl
inc
mul
mov
ljmp
repnz
mov
fwait
inc
xchg
popf
push
out
fxch
mov
xchg
dec
dec
cmp
incl
mov
movsl
ja
xor
inc
add
sahf
xchg
cwtl
mov
and
insl
sub
push
xchg
inc
test
or
nop
aam
jmp
add
lcall
fistpll
push
mov
push
cltd
jle
lock
dec
imul
lret
mov
lcall
xlat
fisttpll
pop
push
scas
add
pushf
jg
xor
sub
xchg
dec
cmp
adc
xor
shll
mov
lock
hlt
into
loope
sub
incl
fucomi
pusha
fcomps
xchg
pop
sbb
aas
adc
fs
mov
into
cmp
das
cli
pushl
ret
add
bound
or
data16
dec
lods
call
push
or
sub
ret
pop
leave
repz
sub
loopne
incl
subl
add
mov
push
sub
cmc
push
call
jecxz
inc
sbb
push
cmp
insl
stos
rclb
xor
imul
xchg
push
decl
adc
les
inc
in
pop
push
cmpsb
loope
fs
sti
sub
lcall
js
ret
sub
push
icebp
imull
movsb
inc
sub
inc
adc
ljmp
cli
in
pop
fmul
test
iret
and
mov
pop
cmp
cmp
es
or
lret
ret
adc
insl
mov
push
ds
push
xor
decl
movsb
mov
or
aad
lret
js
clc
cs
test
out
es
mov
dec
or
stos
test
sub
push
xlat
pop
inc
push
adc
sbb
mov
mov
pop
aad
push
mov
test
insl
loop
sbb
int3
movsb
hlt
in
pushl
loop
pop
mov
mov
ja
sbb
push
dec
xor
repnz
dec
and
ljmp
ljmp
loopne
fnstsw
lea
outsb
xchg
aam
jge
mov
or
insb
int
push
lock
popf
dec
out
mov
je
cmc
sti
lock
pop
or
cli
out
scas
add
cmp
int3
leave
ror
pop
xor
gs
clc
or
lods
jg
push
daa
sahf
pop
ljmp
pushl
jne
imul
nop
mov
jge
cmpsb
sub
rclb
sub
dec
mov
and
push
scas
dec
sbb
call
jmp
mov
in
add
mov
xor
into
dec
test
neg
sub
jl
cmp
lock
pushf
sub
scas
shlb
pop
sub
ds
xor
fdivs
push
adc
ror
or
aad
into
addr16
or
cmp
lea
ljmp
iret
fwait
dec
clc
pop
sahf
ds
sub
in
sbb
xchg
push
dec
cld
cmc
ljmp
fcmovbe
aas
movsl
cmpsb
sbb
iret
jne
lret
sub
mov
xor
stc
pop
xchg
decl
in
movsl
push
lret
lahf
mov
jl
jp
xchg
cmc
mov
dec
aas
add
cmp
mov
negl
ficomps
in
push
and
mov
decl
cs
xlat
xchg
jge
mov
mov
mov
dec
subl
mov
je
dec
decl
fisubl
ljmp
mov
clc
scas
test
mov
popf
push
mov
std
decl
movsl
and
jb
pop
daa
iret
sub
xchg
push
jmp
fwait
stc
cmp
ljmp
jmp
jle
stc
add
push
xor
adc
jl
xor
adc
sti
fcos
call
lods
adc
hlt
sub
sbb
xchg
lea
mov
sti
nop
outsb
iret
popf
iret
pop
fistl
call
loopne
or
lea
add
fldlg2
cmp
jge
cmp
cli
loopne
addb
incl
in
call
fldcw
mov
xchg
inc
fnsaves
loopne
jl
outsb
je
lods
int
push
cmp
aad
pop
mov
sub
icebp
pop
jg
mov
call
mov
mov
inc
xor
lret
dec
insl
out
pop
jnp
pop
and
divl
jmp
fsub
test
mov
scas
xchg
pushw
cmp
sbb
inc
pushl
cld
sub
and
adc
daa
sarb
push
pop
jae
pop
pop
pop
push
push
cli
pop
and
fwait
incl
aaa
shll
cmpsl
cwtl
pop
inc
jge
dec
cwtl
sub
mov
mov
clc
lcall
jne
push
jge
cmp
mov
clc
dec
decl
inc
das
jmp
dec
jo
pop
out
lds
lahf
mov
fldenv
push
ljmp
dec
sarl
inc
in
nop
js
dec
sbb
sbb
inc
shlb
das
add
aaa
sti
out
and
and
out
loop
pop
pop
mov
jmp
push
xchg
mov
jp
mov
sbb
mov
addr16
mov
jns
call
sub
shlb
or
pop
push
je
test
push
ss
mov
decl
push
sbb
mov
sbb
sahf
push
data16
negl
sub
ljmp
int
mov
xchg
dec
call
add
mov
ret
or
cmp
jle
aam
cmp
mov
and
sub
push
mov
gs
bound
and
dec
cmpsb
jbe
mov
call
lds
push
popf
rcrb
scas
xor
inc
ficoml
xor
loopne
pop
fdivs
popf
inc
inc
jmp
popa
cmp
push
jb
clc
mov
sbb
popf
adc
aam
or
pushl
push
mov
testl
push
lcall
push
popa
ljmp
mov
mov
outsb
cwtl
negl
mov
outsb
in
pushl
out
dec
mov
xor
iret
and
cmp
std
fstps
mov
call
outsb
mov
pop
scas
inc
jg
dec
mov
gs
cmpl
decl
rclb
notb
vcmpsd
movsb
jecxz
addr16
sub
mov
fnsetpm(287
sbb
mov
test
push
into
test
sub
and
in
mov
decl
xor
cmp
out
lret
sbb
call
mov
cmp
das
sar
push
push
loop
pop
sbb
incb
push
inc
adc
clc
pushl
and
movsb
fstps
aam
jl
adc
mov
rorl
adc
test
add
push
xchg
cwtl
mov
and
iret
inc
or
addb
pushl
loope
dec
dec
loop
call
cld
add
mov
add
incl
fistpll
jge
push
je
jne
push
ds
push
movsb
shlb
dec
repnz
mov
mov
gs
sub
in
je
arpl
pop
lds
jns
lcall
fdivs
rorb
lds
adc
mov
pushl
dec
jle
cmpsb
xchg
mov
test
sbb
arpl
cli
in
jl
scas
ret
cmpb
mov
pusha
std
pop
rclb
push
inc
call
jmp
nop
out
pusha
aas
insl
mov
sar
sub
orb
incl
pushf
hlt
mov
mov
pop
popf
int3
gs
test
js
pushf
sub
lock
cli
rcrb
jno
push
inc
dec
cli
xchg
cltd
aaa
ds
cld
cmp
sbb
push
mov
mov
jns
cmp
inc
std
xchg
xchg
incl
clc
fwait
shll
mov
rorl
add
outsb
push
sub
test
incl
mov
push
sbb
es
into
xchg
scas
int3
and
add
mov
outsl
lcall
test
enter
stos
sub
ror
add
mov
adc
dec
lds
call
cmpsb
jmp
es
ljmp
xchg
adc
dec
ja
cwtl
jmp
lcall
sbb
dec
hlt
lods
rcrl
popa
call
jmp
inc
xchg
push
ds
pop
mov
cmpsl
dec
fldcw
jl
inc
xchg
sub
dec
cltd
xchg
int3
jmp
out
sub
adc
xchg
cmp
xor
call
cmp
call
pushf
cmp
mov
icebp
cmp
and
jmp
push
cmp
sbb
mov
jno
cmp
jae
dec
mov
pushf
jecxz
mov
loope
xchg
push
test
cmp
jae
jns
push
cmpsl
xchg
push
push
dec
stos
fistpl
rcll
pop
push
adc
mov
das
jb
sbb
filds
adc
and
push
adc
mov
mov
jno
sub
rclb
xlat
mov
incl
inc
aas
dec
stos
mov
into
push
cmp
xor
cmp
and
incl
sbb
and
orb
inc
mov
adc
ficomps
popa
adc
pushl
pop
cmp
stos
adc
jg
test
sbb
cmpsl
sarb
pop
jge
ljmp
sub
cmp
cmc
cltd
movsl
pop
xchg
dec
add
jbe
jp
mov
xor
and
dec
jg
xor
es
cmp
out
fsubr
mov
pusha
mov
int
pop
cmp
push
fs
mov
sbb
aam
mov
stos
and
incl
scas
sbb
lea
scas
add
pop
movsl
sub
push
roll
jmp
fiadds
xchg
jae
iret
call
mov
sub
xchg
cltd
loopne
xchg
clc
idiv
inc
or
adc
inc
adc
loop
ds
sbb
dec
pop
and
push
popf
jbe
sti
lcall
test
sbb
pop
js
das
loopne
rclb
jne
lock
lea
mov
adc
sar
loopne
cmp
test
cmpsb
loopne
jge
pop
inc
ret
fwait
aad
fcomip
das
xlat
push
dec
sbb
adc
xchg
jne
mov
stos
orl
mov
sbb
in
js
lahf
sub
mov
sbb
sbbb
jae
out
xchg
test
incl
cwtl
lcall
icebp
jbe
mov
imul
pop
or
hlt
loope
cmp
rolb
cmp
inc
bound
divb
cmpsb
bound
in
lcall
lods
mov
xor
icebp
loop
out
scas
insb
test
sti
jbe
pop
ds
popf
xor
pop
lods
xchg
sub
pop
in
mov
out
inc
decl
dec
dec
cld
rclb
dec
jl
pop
sbbl
cltd
mov
cmp
sbbl
and
flds
push
push
repnz
in
and
sub
les
mov
sti
pushl
test
sti
inc
in
xchg
push
sbb
jbe
sahf
int3
push
and
push
sar
outsl
mov
mov
or
mov
sahf
sub
andb
sti
xor
das
add
push
inc
adc
idiv
mov
sbb
sbb
pop
lock
mov
mov
lods
js
pop
in
insl
pop
dec
stc
out
fcomip
push
pop
jge
adc
lcall
repnz
dec
fisttpl
mov
sar
incl
mov
xor
and
rcl
xchg
xor
cli
movl
jg
or
std
dec
aam
or
mov
loopne
fistl
insl
adc
ljmp
inc
in
in
mov
and
movb
idiv
shrb
movsb
push
call
leave
repnz
sbb
out
cmp
pop
pop
cli
or
push
pop
push
lds
cs
jg
movsl
std
adc
cltd
add
and
dec
in
add
ljmp
adc
sub
lods
cmp
or
xchg
jl
inc
ss
xchg
pop
jecxz
xchg
add
call
mov
data16
xchg
pop
cltd
sub
in
pop
dec
int3
pop
add
xor
pop
pop
into
jo
leave
xchg
lcall
leave
out
sbb
dec
pop
jns
adc
mov
push
daa
sbb
call
mov
data16
sub
imul
outsl
adcl
cld
aad
add
mov
icebp
adc
jle
jmp
mov
xchg
jae
cmp
dec
inc
pop
cmp
in
stc
jb
add
mov
icebp
jp
mov
jecxz
ret
idivl
imul
adc
imul
dec
xchg
jmp
xchg
push
cmp
in
sub
jns
pop
cli
mov
in
xchg
fisubrs
ds
loope
inc
decl
cmp
ror
mov
lods
jle
xor
and
mov
add
pushf
cmp
fstps
jg
invd
sub
das
cli
inc
andl
les
dec
enter
mov
in
dec
fstp
out
fbstp
mov
sbb
xchg
inc
push
mov
pop
or
pop
aas
flds
cmc
popf
loopne
inc
xchg
fwait
outsb
pop
incl
outsl
ffree
je
fists
lods
jecxz
xorb
daa
les
cld
pop
arpl
aaa
scas
fs
rorl
push
pop
es
shl
add
push
cmpsl
cld
in
in
clc
repnz
sbb
call
in
lds
dec
aam
insb
in
add
jae
pushl
inc
xlat
sbb
cmpsb
dec
stos
sbb
int3
jns
addr16
cmp
enter
imul
jmp
mov
in
scas
cmp
cmpsb
xor
ljmp
fsubs
pop
fildl
shl
aaa
lcall
sti
movsb
lcall
pushl
enter
loopne
loope
push
divb
inc
xchg
and
sub
gs
jge
fsubrs
leave
ds
add
lcall
mov
or
loop
lcall
fdivr
inc
scas
loope
cs
mov
mov
data16
bound
enter
mov
jmp
movsl
mov
stos
pusha
aas
lcall
jp
inc
lea
adc
ljmp
pop
mov
pop
iret
cmpl
call
add
add
das
clc
decl
cli
push
and
rcrb
mov
insl
mov
jo
jae
cmp
fcmovu
cmpsl
and
and
ret
jb
pop
lret
std
ss
aad
mov
sahf
and
sar
jmp
fbstp
sarl
dec
andl
sbb
mov
lcall
mov
sbb
pop
das
sub
and
pop
lcall
call
jno
fcomps
ja
push
pop
cmp
jg
addl
sbb
popa
pop
mov
lock
decl
pop
mov
test
wrmsr
je
or
loope
sub
incl
mov
xchg
xlat
repz
pop
dec
fstl
shr
aad
or
incl
mov
pusha
and
jae
adc
loope
in
dec
and
xchg
ljmp
dec
scas
incl
js
pushf
js
jmp
je
sub
cmpsl
lret
pop
jg
int
dec
subb
cmc
xchg
mov
push
pop
cmpsb
popf
outsb
fwait
adc
xchg
jmp
xchg
adc
movb
sbb
incl
das
jl
mov
and
xlat
aad
flds
xchg
nop
addl
lcall
cmpsl
xor
scas
sub
mov
add
jo
add
add
jb
ljmp
push
adc
insb
sub
ljmp
out
push
xchg
movsb
fildll
lock
jl
xor
mov
adc
sar
insl
nop
bound
mov
ljmp
clc
pusha
bound
jbe
fsubs
cmp
iret
sub
mov
insl
inc
pushl
cmpsb
add
mov
or
jb
mov
mov
sar
outsl
shll
mov
call
sahf
sub
fistpll
xor
ret
shlb
std
arpl
lret
or
insb
adc
gs
jl
inc
leave
xor
mov
inc
rcr
testb
fs
scas
lcall
decl
ret
pop
fs
ficoml
dec
adc
in
mov
lcall
or
or
mov
fisubrs
add
inc
and
sub
lea
ja
loopne
loop
pop
jp
xor
es
ja
ljmp
xor
sahf
hlt
add
inc
fistps
cwtl
out
mov
idiv
insl
sub
jo
test
xchg
jg
sub
pop
fnstenv
xor
jno
out
cli
dec
fld
xchg
enter
adc
cmp
out
stos
dec
fs
mov
jne
add
or
fdivrs
push
pushf
int3
inc
mov
lcall
loopne
fsubrl
repnz
loope
push
sub
incl
dec
pop
fidivs
dec
test
sub
mov
sub
xchg
xchg
jmp
shlb
adc
cmpsl
scas
stos
loop
ljmp
adc
lock
insl
cmp
pop
fwait
add
pushf
scas
out
scas
and
jg
lea
push
xor
lods
popf
lret
scas
add
fidivl
cmp
sahf
push
push
pop
test
mov
jne
pop
or
cmpsl
push
std
add
jmp
dec
cltd
insb
pop
sbb
sbb
cmpsl
loopne
inc
jno
imul
and
test
incl
cwtl
push
sub
leave
jo
lcall
mov
adcl
sbb
clc
dec
add
xchg
addb
jg
scas
test
pop
ret
inc
adc
dec
std
imulb
sbb
dec
xchg
xchg
lea
mov
jg
cmp
inc
pop
jbe
mov
sbb
push
sub
pop
lock
dec
mov
lret
fildl
out
sbb
popa
daa
mov
fildll
xchg
ja
mov
adc
mov
ljmp
xor
out
mov
aam
cmp
sahf
pcmpgtw
or
and
fwait
cmc
repnz
push
jne
jmp
sarl
sbb
stos
sbb
jle
and
inc
lods
sub
nop
mov
call
jne
cltd
pushf
cmp
jb
sbb
ret
push
push
jmp
pop
mov
xor
ret
mov
xchg
mov
inc
pop
inc
loop
aam
cs
lcall
dec
lods
call
xchg
mov
dec
fs
repz
shrl
fildll
fs
cmpsl
lahf
adc
dec
out
pop
movsl
lods
movsl
repnz
call
stos
mov
addl
xor
fwait
sti
and
ljmp
cli
mov
add
push
arpl
decl
aaa
or
xchg
push
or
xchg
mov
sbb
pushl
shl
stc
negl
add
ret
test
pop
xchg
sbb
pop
xchg
mov
fprem
repnz
jmp
jg
mov
call
mov
into
inc
xlat
pop
shlb
sbb
call
loopne
or
nop
mov
pushf
push
out
cltd
push
dec
dec
lock
jge
fcos
pop
icebp
decl
mov
push
inc
int
jle
shlb
stos
in
jo
decl
pop
add
cmp
sahf
pop
pop
push
cmpsb
jnp
cmp
cli
movsb
xchg
movl
pop
je
ret
sub
sub
test
jmp
or
pop
loop
or
loopne
xor
popa
je
movsl
ret
js
mov
ljmp
pop
imul
push
stos
xlat
gs
aaa
aas
in
mov
push
jmp
mov
jp
out
aas
das
pop
mul
mov
mov
pop
icebp
add
lcall
and
repz
xchg
cmpsb
push
mov
das
cmp
add
rorb
test
or
ljmp
jp
jecxz
cmp
arpl
xor
jns
xor
fcmovbe
push
lcall
sbb
pop
push
icebp
xchg
outsb
insl
movsb
adc
shr
loop
dec
dec
push
and
mov
lcall
ficompl
scas
syscall
sbb
mov
lods
les
xchg
pusha
scas
sti
sbb
inc
push
cmpsl
stc
jmp
xlat
idivl
push
xor
jne
sub
or
lcall
sbb
imul
sbb
cmpsb
mov
xchg
pop
aam
in
pop
add
frndint
lcall
push
adc
outsb
inc
jmp
mov
out
pop
fsubrl
mov
dec
stc
fisubl
push
mov
call
mov
mov
stos
fwait
add
dec
xor
dec
loop
lcall
dec
inc
lret
imul
pop
and
mov
fisttpll
in
pop
lods
mov
aam
nop
lock
dec
sub
inc
inc
sub
jno
leave
lcall
mov
lea
adc
mov
mov
push
cmpsb
dec
push
pop
cmp
cld
out
fnstenv
pop
fdivr
xchg
mov
add
out
ror
test
arpl
mov
repnz
sub
aaa
cld
incl
and
fisubrs
inc
shlb
sahf
cmp
pop
icebp
adc
clc
test
or
sbb
test
lret
lcall
pushf
add
sbb
outsl
fisubrl
insb
inc
add
add
sar
outsl
xchg
mov
cld
stos
pusha
dec
cmp
dec
add
ja
inc
jmp
push
out
xchg
mov
and
and
loopne
jp
jg
mov
jno
or
mov
movsl
pop
cmp
pop
lods
je
dec
decl
lods
test
cmp
mov
cmp
add
cmpsb
in
lea
and
sub
decl
push
push
int
int
jmp
cmp
pop
popf
insb
sbb
in
lcall
ds
aam
adc
mov
lods
data16
sub
mov
add
icebp
mov
push
cmp
cmpsl
cmp
fwait
rcrl
push
xlat
scas
push
into
std
inc
adc
or
out
sub
subl
ljmp
pop
pop
gs
pop
sbb
mov
icebp
sub
jbe
mov
in
test
dec
push
pop
mov
ljmp
or
xchg
inc
mov
icebp
dec
jae
out
jecxz
int3
jg
dec
fwait
sub
popa
dec
std
ljmp
dec
cmpsl
insb
cmpsb
icebp
cmpsl
fisubrl
rcrb
mov
fxam
and
cmp
lahf
daa
pop
adc
push
enter
ljmp
lcall
aaa
sar
inc
les
push
mov
mov
fcomps
rcrb
mov
ljmp
in
por
push
push
outsb
dec
ja
and
inc
adc
dec
push
das
mov
shl
jl
shl
xor
dec
jle
dec
mov
mov
pop
loopne
aaa
sahf
mov
add
js
add
inc
ret
scas
clc
decl
iret
push
cli
fcomip
enter
mov
xor
repz
sub
ljmp
add
jg
mov
push
movsl
sub
mov
xchg
test
decl
cwtl
xlat
and
insb
cmp
shrl
repnz
jae
jmp
rol
push
pop
sbb
repz
pushf
imul
jb
out
sti
aam
call
int3
push
and
mov
bound
jecxz
pop
xchg
mov
mov
test
test
lcall
xchg
sbb
ja
stc
int3
lock
pop
sub
pop
xchg
mov
call
sub
pop
icebp
decl
shlb
or
sbb
mov
aad
icebp
or
es
mov
xchg
jmp
pusha
jb
insl
ja
sahf
mov
lahf
aam
cmp
shlb
jmp
mov
push
and
rcrb
xor
and
push
dec
and
push
mov
cmp
pop
out
cmpsl
pop
sti
jnp
pusha
stos
outsl
or
mov
outsb
xchg
andl
push
loope
push
mov
ljmp
add
test
or
push
push
aad
sub
mov
lock
insl
test
outsl
push
push
neg
jo
mov
cmpsb
into
cli
stos
mov
sbb
decl
fldl
ffree
cltd
jne
cmpsl
fmul
mov
popf
sub
in
xor
lock
sub
cs
decl
xchg
push
xchg
in
inc
lret
jg
mulb
and
aaa
popf
cmp
mov
popf
movsb
test
adc
outsl
clc
dec
adc
pusha
inc
std
pushf
mov
adc
sti
daa
mov
sbb
clc
lcall
rolb
pushfw
pop
inc
pop
xchg
fbstp
dec
punpckhbw
dec
repnz
sub
addl
adc
mov
push
movsb
or
sbbb
ror
dec
pop
icebp
lcall
push
pop
xor
xchg
inc
push
push
and
add
cmp
jbe
jmp
cwtl
or
jg
xchg
pop
push
adc
fdivrp
rorl
jmp
ret
mov
inc
xchg
aaa
xor
pop
push
jmp
fsubrl
sub
jg
mov
nop
pop
and
xchg
cmpsb
sub
enter
or
fucomi
inc
mov
pop
loopne
xor
fdivrl
mov
mov
jb
mov
inc
arpl
lcall
or
cmp
loopne
popf
pop
pop
cmp
push
push
das
or
mov
cmc
pushl
cmpsb
push
mov
rolb
xchg
mov
push
jp
ljmp
cmp
scas
jg
lds
push
rorl
mov
jp
sbb
push
cmpsl
movsb
xchg
or
scas
lcall
lods
cli
into
cmp
out
adc
stos
sbb
insb
cmpsl
mov
vmaxsd
ljmp
das
fucomi
mul
inc
sbb
jb
jp
leave
mov
orl
push
and
dec
shlb
or
mov
aad
jle
int
inc
out
test
test
fisubrs
movsl
mov
dec
dec
mov
flds
pushl
arpl
push
sub
push
out
cmp
xlat
mov
aaa
stos
xchg
je
call
xlat
cmp
int3
insl
dec
test
mov
into
daa
xchg
mov
clc
clc
aam
aam
mov
sbb
push
xchg
inc
out
pop
jae
in
pop
push
cwtl
fldl
notl
outsb
pusha
enter
mov
lret
call
jmp
lret
insl
stc
test
push
add
in
dec
or
adc
mov
mov
test
xchg
inc
mov
pop
jbe
jo
fnstsw
cwtl
xor
cmp
xor
inc
pop
push
subb
sbb
cmp
aad
call
jne
xchg
sbb
and
push
jle
roll
jg
jns
dec
adc
js
push
push
mov
jne
sldt
imul
fstpl
add
pushl
cmp
pop
add
jmp
xchg
or
add
mov
pop
outsl
sti
sub
jmp
xchg
cli
push
add
jg
mov
inc
out
aam
loopne
and
mov
imul
jl
outsl
and
ja
addl
sbb
leave
xchg
sub
xlat
and
das
clc
incl
addr16
jl
cmp
push
data16
or
sbb
lcall
inc
xor
xor
cwtl
fdivp
xchg
jbe
jecxz
loopne
lods
or
mov
mov
and
ljmp
mov
jmp
test
loope,pn
lods
lea
les
lret
incl
lahf
movsb
cltd
push
xor
adc
mov
lock
cwtl
lret
stc
add
cwtl
mov
call
cld
and
cmpsl
rol
ret
push
and
mov
mov
aad
inc
in
and
lock
ljmp
mov
scas
pop
punpckldq
lret
orb
inc
inc
aam
add
decl
lods
mov
pusha
into
mov
pop
roll
decl
inc
and
adc
repnz
xchg
int3
insb
aas
push
into
jno
sbb
push
adc
loope
lcall
mov
lock
cmp
mov
loope
fsts
jb
lcall
ds
mov
stos
sahf
jo
push
add
cmp
sti
clc
or
xor
imul
ljmp
or
in
mov
roll
and
push
sub
push
dec
inc
repz
xchg
ljmp
or
sbb
fldenv
sub
push
cmp
decl
rcrl
xor
xchg
sbb
pop
adc
idiv
jmp
ljmp
mov
pop
dec
cmp
std
enter
ljmp
dec
fisubs
addb
mov
pop
inc
test
mov
or
inc
outsl
fadd
inc
inc
mov
push
lcall
dec
scas
or
lds
pop
leave
fwait
and
call
aaa
fs
add
sub
pop
mov
into
iret
fprem
arpl
jmp
lahf
pushf
inc
jne
jge
es
pop
pop
sbb
cmp
push
test
adc
lea
fwait
cmp
mov
cs
xor
mov
stos
aad
dec
sbb
ss
cmp
and
pop
cmp
push
cmpsl
mov
out
out
sub
and
outsl
jg
lcall
push
addb
sar
mov
push
dec
addr16
rorb
mov
pop
lret
ljmp
pop
aad
mov
mov
psubsb
dec
ja
jne
mov
or
ljmp
inc
cmp
jns
fdivrs
pop
dec
sbb
cmp
sbb
fcoms
cmp
xchg
hlt
enter
ret
add
in
cltd
mov
fcos
call
sub
imul
divb
addr16
ret
adc
fstpt
adc
das
mov
hlt
and
jbe
popa
pop
fidivl
sbb
out
cmp
rclb
cmp
mov
jecxz
push
roll
and
add
sub
push
test
loop
cmc
iret
mov
mov
pop
mov
jns
outsb
mov
and
mov
adc
hlt
test
ljmp
add
mov
loopne
arpl
xchg
xchg
cmc
in
neg
and
xchg
call
data16
mov
fldenv
imul
scas
or
mov
sbb
mov
cli
decl
xor
ret
push
xchg
mov
add
or
test
scas
cli
fadd
sub
loop
hlt
leave
mov
mov
call
xchg
push
ss
lods
sbbb
xor
xor
lcall
and
xor
mov
es
jns
and
xchg
cs
jnp
pop
sub
lahf
adc
and
inc
dec
cmp
stc
out
or
pop
xchg
inc
std
cmp
push
lahf
lahf
or
mov
or
loopne
adc
jmp
les
rcrl
sbb
jmp
add
mov
ljmp
dec
push
rcll
arpl
push
lret
jg
push
lret
mov
mov
sub
int3
sub
addb
int
jb
mov
lcall
dec
jmp
push
dec
inc
xlat
and
cmp
pop
aam
das
fdivr
dec
arpl
fists
adcl
sub
shlb
mov
stos
sti
lock
adc
in
call
shr
out
xor
sarb
inc
inc
mov
adc
lods
icebp
in
dec
cmc
dec
ljmp
xchg
stos
mov
dec
push
push
loope
fisttpl
mov
jne
aas
not
sub
mov
fdivs
in
adc
pusha
push
into
imul
dec
outsb
sbb
add
sahf
jnp
in
aaa
pop
and
dec
or
pop
std
incl
jecxz
test
enter
dec
sti
sub
ljmp
cmovae
cltd
cmp
gs
dec
hlt
mov
stos
and
jno
nop
in
decl
movsl
testl
rcrl
add
cmp
pushl
push
inc
cltd
jmp
xchg
mov
sub
mov
imul
or
sbb
incl
and
mov
insl
fisttpll
iret
loop
sarb
inc
iret
aam
jno
imul
or
mov
ja
bound
dec
int
int3
mov
pop
and
lcall
mov
xor
mov
lods
push
mov
xchg
push
jecxz
sub
cmp
or
lret
inc
pop
fsub
repz
sub
sbbb
popf
mov
fisttpll
dec
xlat
pushl
push
pop
mov
outsb
cmp
mov
and
push
dec
mov
divps
std
test
mov
xchg
ja
in
cld
ljmp
xor
mov
loopne
jne
decb
outsb
repz
or
js
cmp
dec
and
int3
clc
cmp
inc
mov
nop
inc
xchg
js
test
jne
cld
inc
mov
loopne
ljmp
mov
add
idiv
mov
mov
in
lret
cwtl
int3
adc
dec
incl
mov
sbb
fadds
testl
lcall
dec
iret
shlb
add
sar
xchg
push
inc
repnz
pop
xchg
int3
hlt
jmp
les
cmp
test
mov
stc
or
and
jg
pop
add
jne
lcall
inc
jb
sbb
xor
and
dec
sarb
mov
xor
hlt
pop
inc
jl
bound
ret
mov
add
jg
or
pop
insb
cld
dec
pushf
mov
jge
lcall
pop
mov
or
jae
add
test
pop
xor
popa
dec
lahf
inc
sub
test
es
jmp
fwait
std
mov
ljmp
dec
mov
andl
sub
and
pushf
les
mov
pop
test
popf
ret
push
pop
inc
aad
incl
mov
push
pusha
jo
mov
aad
adc
and
push
and
idiv
jg
sub
sbb
repnz
ret
neg
nop
jne
pop
jmp
add
call
into
push
mov
dec
rcrl
sub
imul
jb
das
xchg
dec
movsb
mov
dec
mov
mov
fcmove
xchg
and
mov
test
push
cmp
incl
cmp
pop
addr16
pop
out
or
aam
sub
xor
repz
dec
mull
inc
andl
insl
push
cmp
mov
jge
ret
jmp
test
mov
jle
or
cmp
adc
out
adc
cld
incl
cmpsl
jg
xchg
mov
jne
jnp
int3
lahf
pop
xor
incl
idivl
lods
shlb
pop
or
in
add
jmp
popf
push
mov
je
fwait
shrl
aad
push
dec
sub
push
cwtl
popf
pop
mov
pop
lock
mov
sarl
add
or
or
mov
ja
push
fstps
incl
sarb
pop
in
add
loop
adc
call
pop
jmp
pushl
cmp
adc
scas
lret
xor
adc
hlt
call
sbb
bound
and
push
scas
xchg
movl
pop
cmp
pushl
adc
sbb
sub
pop
fs
mov
inc
rclb
pop
inc
jb
popf
push
divl
ljmp
xor
sbb
aaa
add
imul
lahf
ret
lds
nop
pop
call
pushl
ret
test
inc
daa
cmc
sub
dec
sahf
or
pushl
fists
cmpsb
fildll
imul
jmp
daa
sub
lods
mov
lahf
into
pop
sbb
loop
jns
das
lea
fwait
cli
jae
dec
pop
cwtl
push
or
add
out
lds
pop
jo
insb
cmc
mov
loop
push
pop
movsb
addr16
movsb
les
lcall
addr16
scas
adc
push
mov
mov
xor
inc
pop
mov
mov
fwait
in
inc
test
inc
xor
xchg
rcll
push
sbb
jmp
into
jae
nop
mov
cmp
add
xor
lret
pop
outsl
jecxz
frstor
jle
cmp
mov
lcall
push
fmull
mov
cltd
add
adc
scas
and
dec
jge
das
xor
fiadds
sahf
pushf
jae
ljmp
cmp
jno
xchg
lret
pop
add
or
jg
incl
fwait
imul
mov
repz
fstpt
cmp
push
outsl
sti
xchg
fcmovnu
push
jle
mov
call
fistpll
cmpb
pop
ffreep
gs
pop
insl
imul
leave
and
in
dec
push
aam
std
push
push
pop
pushf
push
inc
xchg
mov
fstps
mov
insl
mov
or
cmp
add
pop
repnz
lds
repnz
push
inc
dec
sahf
sbb
mov
jb
mov
pop
push
bound
sbb
xchg
push
sti
lods
inc
out
push
mov
lcall
push
clc
xor
push
sarb
lahf
cmpsl
ja
push
incl
ret
jp
xor
add
fsubs
xchg
jmp
jmp
mov
int3
mov
jg
jmp
or
cld
xor
jne
loope
loop
imull
pop
les
push
lret
jns
add
repz
fwait
jb
mov
stos
out
add
sbb
scas
ss
jle
loopne
mov
xchg
xchg
dec
cmpsl
rcr
jnp
and
mov
test
and
mov
jg
cmc
incl
js
dec
or
and
xor
in
movsl
cmc
test
std
jmp
push
js
and
pop
pop
dec
add
es
imul
ds
repz
sub
push
decl
jecxz
sub
pop
mov
bound
xor
xchg
pop
testb
fdivr
aaa
std
ljmp
inc
call
push
js
insl
inc
loopne
loop
rolb
jg
test
mov
dec
addb
sbb
pop
ss
push
pop
xlat
lcall
inc
aam
xor
fdivr
dec
dec
sbb
dec
arpl
sbb
sbb
add
or
ret
sbb
push
out
lcall
imul
movsl
test
mov
fistpl
insb
xchg
cmpsl
repz
mov
mov
shlb
lock
sub
push
inc
dec
jl
das
xor
adc
xchg
sbb
pop
decb
lret
xor
scas
push
loop
pushl
shl
jp
pop
leave
cmpsl
imul
xor
fisubl
sbbb
pushl
add
mov
pop
fucom
and
mov
jecxz
in
push
dec
rcl
pop
stos
sub
push
mov
les
je
ja
fstpt
and
test
xchg
mov
add
mov
add
loopne
lret
jo
dec
popf
filds
aas
arpl
jo
in
mov
decl
pop
xchg
dec
jmp
xor
rcrb
inc
lret
mov
popf
sbb
outsb
dec
inc
xlat
int3
bnd
sbb
jg
push
dec
xor
and
pop
mov
xchg
popf
lret
jge
lcall
inc
cld
std
loope
fs
cltd
movsl
cmp
push
into
sub
lcall
push
and
movsb
or
and
fwait
and
xorl
call
push
negl
pop
pop
sbb
enter
push
in
shl
sbb
je
pop
scas
rcll
mov
ljmp
xchg
les
fwait
mov
cmp
mov
jge
mov
mov
push
pop
in
pop
adc
push
decl
inc
or
enter
cltd
and
and
sti
push
mov
jmp
mov
out
jg
ljmp
cltd
lods
mov
pop
inc
sub
push
outsl
pop
dec
xor
and
scas
negb
pop
cli
ljmp
ret
enter
lods
in
out
dec
and
and
cmp
aaa
xchg
fidivrl
fwait
push
xlat
test
movsl
stos
popa
popf
xchg
push
sti
jmp
aaa
and
cs
ss
imul
mov
jo
es
cmpb
cs
xchg
push
aas
and
or
jmp
lods
add
movsb
addl
pop
mov
xor
jmp
mov
out
inc
cmp
movsl
sub
cmpsb
inc
shrl
callw
fbld
loopne
mov
sbb
mov
pop
stc
imul
jmp
cwtl
inc
movsl
cmp
sub
and
xchg
in
inc
inc
jmp
decl
push
mov
loope
mov
mov
fisubs
adc
mov
sub
fidivs
add
dec
mov
imul
mov
fstpl
lret
cwtl
aad
out
jb
call
in
pop
dec
daa
or
int
xor
scas
mul
lock
ret
push
or
addr16
and
out
lret
leave
and
les
insl
ror
cs
mov
inc
push
sub
decl
test
dec
sbb
xor
js
add
jl
dec
nop
in
mov
dec
sbb
aam
fcom
imul
stos
mov
out
xor
jp
jg
pop
gs
iret
jge
pop
inc
pop
inc
pop
and
xchg
cmp
ljmp
adc
xchg
pop
jg
adc
adc
fs
repz
loope
jmp
fsubr
mov
inc
jl
scas
mov
movb
push
xchg
inc
and
sbb
ljmp
xchg
mov
xchg
pop
cmp
add
or
cmpsb
mov
fidivrl
xor
pushl
pop
cld
mov
pcmpeqw
sub
add
shll
mov
and
ljmp
dec
aaa
scas
js
xchg
dec
adc
xchg
or
push
or
cld
test
xchg
jle
mov
pop
imul
pop
mov
andl
jno
inc
cmpsb
pop
fs
hlt
cmpsl
jmp
stos
sbb
push
aaa
cmp
test
pop
inc
les
pop
outsb
adcb
pop
xchg
cmpsb
incl
mov
pop
jmp
xchg
and
rcrl
test
pop
in
mov
ljmp
push
add
sti
xchg
xchg
sbb
bound
add
sbb
mov
das
dec
call
push
scas
loopne
push
lret
sbb
push
arpl
xchg
in
adc
dec
nop
xchg
mov
je
icebp
dec
clc
call
xor
div
cmp
xchg
int
ret
mov
add
cmpsb
in
imul
fimull
stos
cmpsl
fucomp
lcall
decl
adc
mov
pusha
enter
add
sbb
decl
inc
loope
mov
movups
das
pop
jne
scas
mov
jecxz
pop
adc
incl
mov
and
repnz
add
sub
test
popf
jl
andl
mov
repz
movsl
mov
mov
pop
aam
jge
int3
dec
mov
jmp
jg
push
out
sub
pop
mov
out
loopne
cmpl
pushl
call
loopne
loop
aam
cmp
rorl
xchg
mov
les
pop
loopne
incl
push
pop
mov
push
xor
psubsw
xor
call
movsb
dec
or
mov
mov
dec
sub
jecxz
pop
pop
fsubl
jae
hlt
fistpl
fstl
call
pop
fcomip
adc
mov
mov
filds
xchg
aaa
cltd
les
movb
out
clc
jmp
shl
push
sub
imulb
or
adc
xlat
rclb
xor
call
sbb
test
jns
arpl
repz
sahf
push
movsb
cmp
arpl
xchg
incl
xchg
mov
call
pop
xlat
mov
repnz
pop
jns
lea
ljmp
xchg
jge
cltd
std
or
loopne
out
adc
into
cltd
repnz
out
cld
dec
out
inc
imul
add
and
shl
in
inc
xor
mov
add
mov
pop
jne
mov
arpl
cli
push
aas
adc
loopne
inc
xchg
aad
mov
repnz
loope
sub
ss
jecxz
int
dec
pushl
cwtl
jmp
mov
inc
cmp
repnz
outsb
fidivl
pop
push
decl
add
push
ret
repnz
inc
ds
aaa
pop
aaa
fadds
jns
mov
pushl
outsb
dec
stos
sub
mov
cwtl
dec
and
inc
push
lret
mov
jecxz
inc
pop
icebp
or
lcall
adc
mov
inc
mov
sub
rol
sbb
test
jns
mov
fldcw
lcall
fdivs
stc
addr16
shll
inc
inc
pop
xchg
mov
push
pop
xor
pop
in
push
cli
xor
addl
jl
fmuls
dec
dec
arpl
cmp
mov
adc
fwait
sbb
stos
out
jg
fwait
ja
icebp
cld
dec
repz
inc
mov
mov
fcmovnb
dec
dec
dec
fwait
xor
dec
sbbl
mov
call
rclb
bound
pushf
cmp
pop
dec
jle
repz
sub
jno
dec
jmp
sub
xchg
xchg
xor
cmp
mov
and
add
mov
adc
mov
stos
int3
ret
lds
incl
mov
mov
cmp
inc
inc
and
sti
cmp
and
aam
pop
mov
mov
ret
sub
lods
mov
lcall
or
sub
lret
out
loope
mov
cld
test
dec
jno
out
mov
push
adcb
addps
test
popl
pop
dec
lds
and
sahf
pop
xor
scas
lcall
loope
adc
iret
xchg
xor
dec
test
jl
cmp
adc
decl
xchg
inc
inc
sub
iret
enter
aam
sub
addr16
jg
loope
into
adc
adc
jmp
shll
imul
cld
lret
add
and
setl
lods
incl
add
data16
sti
sahf
neg
dec
or
dec
mov
iret
lcall
jle
hlt
mov
int
rcrl
adc
mov
fdivr
cmp
scas
mov
xlat
cmc
fnsave
ss
sub
insl
xchg
mov
sub
push
rorb
incl
mov
int3
jb
push
stos
push
jne
mov
add
popa
inc
movsb
mov
nop
jecxz
jl
mov
dec
cmp
mov
pop
jnp
pop
mov
cmp
inc
fwait
adc
decl
xchg
pop
iret
fwait
bound
in
out
pop
or
cmp
mov
xchg
ss
test
sbb
pushl
or
out
xchg
pop
xor
xor
adc
int3
push
push
xchg
add
and
repz
jns
iret
inc
cmp
pop
pop
gs
mov
rclb
sbb
mov
mov
decl
sub
loop
aam
and
jmp
out
jne
jb
faddp
gs
fcomip
decl
lods
data16
pop
cmpsb
aam
lods
lahf
push
sub
clc
pop
std
or
add
or
jg
sbb
cs
or
cmc
incl
js
ja
clc
negb
into
adc
cmp
mov
dec
loop
sub
xchg
ss
stos
inc
push
or
mov
dec
das
jmp
sub
mov
jb
lret
scas
add
lret
push
sbb
pop
incl
adc
jecxz
repnz
jns
mov
push
lea
repz
mov
push
sti
adc
movsb
clc
nop
lcall
insb
push
push
insl
mov
or
sbb
pusha
or
dec
jg
and
add
cmpsl
jl
xchg
xor
cld
enter
fnstsw
clc
mov
mov
ret
mov
cmp
dec
pop
and
add
xor
hlt
int3
decl
dec
rcl
les
ljmp
cmp
or
decl
fwait
xorl
call
outsl
mov
lods
lahf
xlat
pop
dec
inc
xlat
mov
mov
jg
pushl
jae
das
xchg
sub
daa
jbe
jl
subb
inc
and
push
out
mov
sub
lcall
shll
pusha
cmp
push
sti
clc
inc
movsb
in
or
xchg
mov
sbb
adc
in
adc
pusha
push
lea
inc
stos
or
sbb
stos
ljmp
add
pop
cmp
divb
jmp
lea
shll
sub
mov
cmp
arpl
sbb
pusha
es
lret
mov
scas
aam
test
mull
testl
push
fs
mov
sub
clc
mov
es
subl
xor
ljmp
sbb
adc
cs
imul
fmuls
pop
arpl
std
lock
inc
xor
xchg
jo
cld
pop
in
xchg
js
es
mov
xchg
pop
add
incl
mov
adc
xchg
es
gs
push
sub
repnz
jp
cmp
data16
lcall
loope
xchg
or
push
pop
add
cwtl
mov
aaa
jae
push
or
adc
adc
mov
rcr
mov
jmp
mov
jg
dec
inc
data16
push
or
fwait
clc
loop
jp
mov
ljmp
xchg
popf
stc
xchg
sahf
adc
mov
sbb
inc
test
dec
xchg
dec
mov
dec
jnp
fmuls
sbb
inc
into
es
lret
pop
incl
inc
sahf
daa
insl
sti
push
cmpsl
addr16
mov
int
rep
sti
arpl
sbb
jmp
jp
sbb
call
aas
bound
cmp
cs
and
or
stc
aas
outsb
inc
pop
call
and
xor
sub
rol
pop
cmc
xchg
iret
test
jbe
xchg
xor
sub
decl
je
mov
lods
sbb
cmp
push
mov
pop
out
aaa
lahf
popf
sub
sbb
or
jp
xlat
test
pop
lods
aas
pop
ljmp
push
cmp
xchg
ret
mov
in
out
int3
mov
and
out
jbe
stos
test
out
psubsb
incl
dec
lret
push
lods
mov
cld
xor
call
push
sub
lret
jg
orb
mov
dec
inc
mov
jmp
jg
and
pop
out
push
je
in
adc
movsl
lods
jns
inc
and
push
pop
cmp
jmp
in
sar
mov
lcall
loope
or
xchg
push
ret
push
sub
adc
outsl
xor
xor
stc
fwait
adc
cmpsb
sbb
ljmp
test
sbb
or
pop
xor
ja
ljmp
add
mov
aas
xor
aam
call
lahf
pop
cmpsb
fidivs
sbb
push
imul
push
pusha
ret
push
ljmp
adc
mov
or
xor
jmp
jnp
dec
decl
add
mov
and
mov
pop
and
cmc
jecxz
js
jmp
jl
ja
xchg
andb
js
sbb
sub
pushf
stc
out
out
ljmp
jl
jl
insb
xchg
cmpsl
pop
or
xchg
insb
les
pop
repz
int
decl
test
inc
jbe
dec
inc
jns
mov
jno
insb
inc
imul
mov
in
movsb
ljmp
mov
in
sub
test
aam
sbb
jno
rolb
jl
dec
cmp
cmp
xchg
icebp
sahf
test
enter
arpl
xchg
dec
decl
movsb
adc
aad
shlb
mov
scas
mov
fimull
pop
jmp
rolb
mov
sti
lcall
cmpsl
cmp
add
inc
fnstenv
std
jmp
mov
enter
pop
fcmovne
orl
sbbl
lea
pushl
cmc
rcrb
imul
inc
js
test
add
je
and
inc
loopne
xchg
fwait
aas
scas
outsb
lods
stos
movsl
adc
ja
mov
xchg
lret
pop
jl
mov
lcall
adc
pushf
stos
out
cmc
add
ja
dec
jbe
ljmp
popf
ja
mov
jmp
jp
loopne
shlb
pop
rolb
jle
push
cmpsb
push
comiss
jbe
or
data16
decl
and
push
and
xlat
pop
sahf
xlat
movsbl
ljmp
shrb
mov
out
ljmp
jg
lcall
xlat
cmc
mov
jg
push
movsl
jge
fcoms
xchg
lock
push
inc
ret
call
mov
iret
xor
and
add
negb
pop
xlat
test
jge
fcomip
pop
lret
sub
sbb
mov
imul
dec
push
adcl
push
outsb
and
pushl
fsubrs
ret
mov
cpuid
fisttpl
sub
or
lcall
es
addr16
pop
js
mov
mov
mov
mov
push
xchg
fadds
nop
add
add
push
je
push
pop
pushf
rorl
ljmp
lds
popf
insl
stos
sbb
sbb
inc
fs
mov
test
or
add
aad
lret
jb
mov
xchg
sbb
decl
aad
xlat
jnp
daa
cmp
mov
mov
mov
and
pop
and
es
outsl
pop
rcrl
lcall
mov
jns
lods
jecxz
outsb
cmp
clc
xor
cmp
js
dec
jmp
fnstcw
and
frstor
int
repz
dec
ja
roll
out
lods
cmpsl
outsl
idiv
call
adc
mov
push
adc
nop
lret
lahf
cmp
mov
int
sub
xchg
lcall
std
sbb
sbb
cmp
mov
add
lahf
aam
or
ljmp
ror
jle
sbb
push
repnz
fstps
and
sbb
or
mov
dec
cli
lcall
popl
std
inc
fsubr
dec
fs
xor
cmpsb
mov
dec
pop
or
sub
clc
pop
outsb
push
ljmp
mov
sahf
cmc
imull
sbb
aad
rolb
push
mov
pop
add
dec
repnz
xchg
frstor
xchg
movsb
into
xchg
add
xor
test
mov
les
popa
push
push
mov
dec
fldt
rclb
cmpsl
jp
lods
adcb
sub
xchg
test
add
cmp
and
sbb
mov
mov
mov
push
enter
mov
pushl
pop
ljmp
cmpsl
or
mov
dec
xchg
lock
xor
xor
cmp
movsl
or
in
mov
cmp
xor
nop
movsb
fcmovnb
call
aad
stc
popf
jmp
je
cmp
inc
jne
movsl
jno
fiadds
mov
out
outsl
jecxz
cmp
mov
jmp
mov
cltd
mov
in
xor
cmc
cmp
jge
enter
mov
fisubrs
hlt
decl
push
les
add
lock
out
es
sar
add
or
mov
push
xor
adcl
pop
pop
ljmp
mov
imul
bndmov
fidivrs
fiadds
fists
scas
xchg
loop
nop
adc
jmp
sub
mov
mov
pop
push
mov
jg
cmp
lcall
push
jp
or
vcvtdq2pd
nop
call
push
fwait
test
push
fldcw
outsb
xchg
shl
mov
imul
repnz
mov
decl
fwait
cmpsl
mov
mov
shll
cli
cmpsl
mov
mov
pop
pusha
jecxz
rol
lcall
lcall
pushl
fistps
pusha
fnstcw
imul
popf
xlat
stos
data16
jecxz
decl
xchg
xchg
cmc
pop
mov
add
fsts
das
fmuls
shrl
sbb
push
lcall
push
cmp
add
dec
imul
pop
mov
out
pop
adc
mov
lcall
adc
sub
inc
inc
jns
adc
or
jb
es
xor
call
call
cmp
aas
into
sub
push
xlat
cmp
push
cmp
inc
cltd
dec
aaa
pop
scas
dec
add
xchg
cwtl
call
int
les
aas
add
adc
xor
gs
pushl
sti
aam
push
les
out
ss
sahf
push
push
mov
sbb
push
xor
add
iret
push
push
lahf
and
ljmp
in
mov
xor
jmp
jecxz
and
lret
fldlg2
dec
sub
aas
call
out
jno
int3
out
push
push
xorb
inc
lods
and
cmpsb
sub
or
minps
and
push
add
push
push
stos
jne
jne
mov
dec
fcomps
bound
fs
xor
mov
pushl
pushf
leave
int3
les
insl
rol
fsubl
ja
gs
sbb
data16
mov
pop
inc
ss
pop
sbb
mov
movsl
or
mov
out
cli
and
dec
adc
jg
mov
es
movsb
ja
adc
ljmp
fwait
pop
jno
mov
popf
lods
cs
lcall
loop
add
ljmp
in
test
ja
push
sub
mov
test
jb
push
mov
mov
push
pop
xchg
lret
es
sub
pop
mov
push
cltd
pop
xchg
jmp
in
inc
ds
add
fmul
loope
jmp
push
std
xchg
cld
pop
or
xor
call
cld
add
pop
push
cmpsb
and
sbb
sbb
ljmp
dec
cwtl
sahf
mov
and
mov
stc
loop
xchg
add
and
jp
adc
icebp
lods
ljmp
adc
push
mov
push
fiadds
push
inc
leave
mov
push
inc
aam
pop
xchg
push
xchg
inc
sub
iret
popf
enter
lret
cmc
jne
fidivrs
jge,pn
mov
or
decl
gs
aaa
mov
es
cmpsl
ret
fdivrp
cmp
aam
mov
mov
out
cmp
in
and
ficomps
out
or
or
faddp
sub
call
ds
mov
cmc
cli
std
push
cld
fisttps
sahf
test
sbb
mov
js
testl
mov
or
mov
addr16
push
imulb
xchg
daa
aad
mov
daa
sub
stc
xchg
push
fs
stc
dec
add
mov
addr16
dec
mov
lcall
lret
test
dec
test
xor
aaa
in
stc
or
dec
lcall
aas
stc
sub
mov
gs
add
jb
and
ljmp
loopne
lcall
adc
ss
sbbb
mov
bt
lret
aaa
mov
int
mov
sbb
gs
out
mov
imul
sbb
decl
lock
lods
xorl
cli
pop
cmp
add
push
jmp
jle
push
jbe
flds
outsb
jecxz
dec
iret
mov
mov
movsb
jecxz
fnstenv
sub
std
call
dec
or
or
mov
or
shll
xlat
xor
divl
pop
ljmp
sbb
inc
mov
jns
ljmp
lahf
inc
mov
pop
mov
nop
call
outsb
xlat
sti
aas
out
push
push
outsb
pop
inc
call
popa
xor
std
fs
out
out
lods
pop
aad
jg
subb
ljmp
iret
fnstsw
push
pop
arpl
call
mov
sbbl
mov
mov
mov
sbb
xor
jmp
jle
vphsubdq
pop
sbb
inc
cli
fdivl
inc
mov
add
pop
jecxz
jmp
push
and
js
lock
sti
mov
and
xchg
cld
call
dec
int3
out
mov
ja
es
movsl
cmp
rcr
out
clc
lcall
lods
cmpsl
idivl
stc
cs
shrb
sub
stos
or
lea
jmp
inc
js
es
movsl
mov
das
dec
dec
bound
jg
mov
aam
push
fld
dec
roll
popa
subl
add
xchg
mov
ja
or
int3
pop
pop
add
incl
mov
jge
inc
mull
fcomps
cmp
inc
jb
sub
dec
mov
cmpl
call
jmp
xchg
les
lcall
xor
stos
call
push
cmp
jmp
xchg
dec
in
icebp
jle
inc
jecxz
xor
mov
mov
lcall
fcomip
push
dec
dec
sub
adc
fcmove
popa
int
adc
mov
jmp
jl
fmull
jmp
in
mov
in
mov
fstpt
push
mov
andl
outsl
jmp
outsl
ljmp
dec
aad
mov
jno
icebp
mull
shl
in
xchg
ja
out
mov
cli
ror
js
pushl
insb
and
sbbl
push
adc
fmull
cmp
push
push
fiadds
sub
xor
icebp
sbb
andb
jne
imul
push
sahf
xor
jg
incl
adcb
aas
lea
rol
cltd
jb
inc
mov
dec
incl
lahf
mov
ficomps
jns
call
pop
push
sbb
cltd
pop
sub
dec
lcall
pop
and
pop
or
pop
and
pop
stos
push
ss
test
into
outsl
mov
jmp
add
dec
shrl
lret
lock
fwait
jae
ret
ror
out
sub
testb
arpl
mov
dec
dec
outsl
push
ljmp
cld
scas
cmpsb
cmp
jg
cmp
leave
mov
push
arpl
pop
xorb
xorl
mov
or
mov
adc
mov
or
push
mov
fnstcw
repz
dec
orl
out
ficoml
adc
lods
sar
xorb
adc
lcall
mov
lret
cltd
xor
dec
fsts
aam
pop
mov
jl
jb
decl
call
stos
mov
jle
popa
aas
and
cmpsb
loope
test
loopne
pop
cmc
xchg
jl
sahf
ljmp
jae
cs
bound
sbb
call
push
sub
jmp
pop
xchg
push
and
pop
mov
jmp
push
ret
mov
mov
pop
sbb
dec
out
cmp
rorb
jmp
cmc
mov
xor
enter
andl
data16
pushf
cmpb
movsb
mov
decl
dec
jg
or
cwtl
lea
ljmp
xor
ljmp
pop
jo
push
shrl
add
insb
mov
fimuls
dec
mov
jle
cmp
dec
push
jns
enter
sub
mov
loop
mov
jle
push
imul
incl
adc
pop
mov
inc
ljmp
mov
incl
stos
pop
sbb
bound
dec
arpl
adc
ds
inc
daa
movsl
mov
add
jge
shlb
loope
push
nop
inc
adc
push
cmc
setns
jl
jmp
cltd
xchg
scas
pusha
js
mov
repz
out
sub
pushf
inc
sub
or
adc
lcall
adc
pop
adc
bound
fcom
movsl
popa
mov
repz
lods
int
loopne
decl
cmpl
out
repz
subb
pop
in
lods
cwtl
addr16
cmp
in
pop
pop
pop
fisttpl
cli
pop
test
mov
mov
and
lcall
adc
test
frstor
add
shrl
ljmp
mov
fcompl
mov
push
fdivs
adc
mov
mov
mov
popf
pop
adc
push
xor
stc
out
nop
mov
pop
jp
inc
mov
mov
lods
ror
stos
scas
or
mov
fcmovb
or
data16
inc
in
fadd
call
divl
in
imul
dec
lcall
mov
pushf
jl
push
cmpsl
sub
test
and
cs
div
mov
nop
push
insl
xchg
xor
incl
mov
int3
stos
inc
test
stc
pop
int3
adc
add
adc
sub
push
cmpsl
decl
sarb
sub
add
fdivl
dec
and
lcall
fildll
xchg
add
shl
sbb
frstor
jp
cmp
aaa
cld
incl
sbb
fs
adc
insl
add
leave
mov
test
addr16
lcall
das
es
out
pop
out
add
nop
aaa
gs
jp
dec
add
mov
call
and
adc
xor
call
les
repz
mov
sbb
ljmp
xor
jo
inc
fxtract
jnp
jnp
incl
pop
sub
pushl
aaa
nop
add
outsl
leave
lods
fwait
jo
in
pop
dec
jge
rorb
mov
mov
jmp
mov
ss
sub
inc
jno
push
ljmp
sub
cmp
push
push
and
out
sahf
fs
push
cmp
hlt
mov
fcomip
incl
inc
loopne
pushf
sub
aad
and
leave
add
xor
and
cmp
xor
xor
pop
movsl
xchg
aam
xor
or
sub
int
jb
mov
fcompl
inc
test
push
fs
sbb
arpl
push
fdivrs
ja
iret
inc
mov
ds
mov
xor
stos
and
mov
cld
fninit
or
insb
sub
hlt
outsl
aas
js
jmp
inc
mov
jg
pop
cmp
loop
add
loop
std
test
pushf
lahf
repz
cmp
cmp
sbb
out
pop
insl
aaa
cld
aaa
cld
ret
dec
cmpsb
js
push
test
rcrl
pop
insl
dec
mov
or
push
lcall
fwait
mov
mov
out
call
cmp
mov
adc
mov
pop
mov
xor
stos
push
add
fildll
lock
clc
inc
or
sub
or
int
test
scas
jl
test
filds
stos
rclb
jbe
sub
jecxz
repz
cmp
lods
xchg
out
jl
or
decl
and
pop
divl
adc
repz
insb
lods
jle
lcall
stos
push
jl
pop
incl
sbb
int
movsl
adc
or
xchg
jp
rcll
sub
call
mov
xchg
les
mov
xchg
xor
pop
cmp
mov
incl
inc
mov
daa
es
dec
inc
mov
jbe
lret
repz
test
fidivl
sub
out
sub
adc
jg
add
lcall
nop
call
xor
mov
js
mov
cmp
call
scas
inc
fmulp
lahf
or
push
cmp
sbbl
int
pop
inc
jmp
scas
pushl
mov
dec
fsubr
pop
outsb
cmp
pushf
jns
fs
fistps
inc
gs
adc
fildl
testl
mov
inc
xchg
lock
in
xor
xchg
and
incl
cld
test
xchg
pop
lcall
ret
xchg
xchg
ds
incl
dec
xlat
daa
fdivl
inc
add
repnz
cmp
dec
mov
lods
int3
mov
sarl
or
out
imul
cmpsb
fs
dec
xchg
jp
xchg
sarb
jne
inc
ja
jmp
xor
jmp
cmpb
mov
mov
out
loope
ret
ljmp
addr16
or
rorl
bound
enter
fs
sbb
or
decl
sbbl
cmp
fldl
popa
enter
imul
ret
decl
add
sub
stos
pop
or
je
in
pusha
lods
dec
lods
cmp
mov
cmp
out
mov
mov
fists
aaa
movb
sub
imulb
fbld
js
xchg
pop
xchg
and
pop
or
es
scas
fstl
in
inc
in
mov
call
aas
repz
mov
aam
push
jbe
mov
sub
insl
and
out
clc
add
jns
sub
lret
out
mov
mov
jg
scas
pop
push
int
repz
bound
inc
fmuls
mov
shll
outsb
aaa
lcall
jo
lock
xor
pop
imul
aas
insb
bound
xor
stos
sbb
fwait
pop
xchg
enter
mov
inc
into
and
jns
mov
xchg
push
cmp
subb
jg
fimuls
mov
insl
rcl
xor
loope
fsts
xchg
push
outsl
adcb
imull
mov
cmp
dec
leave
pop
pop
mov
or
lahf
jne
ljmp
pop
or
lret
sub
imul
mov
mov
lods
int
xorb
aam
call
jle
ds
sub
fisubrl
orl
fcoml
inc
clc
sbb
pop
fiaddl
decl
mov
aas
lea
cmpb
and
iret
pop
ss
fildll
sub
or
into
xchg
jae
or
mov
push
xchg
sub
mov
in
push
xchg
cmp
fidivrl
inc
xor
loopne
scas
incl
incl
dec
mov
std
dec
daa
cli
loope
push
dec
clc
mov
sbb
imul
mov
out
sub
sub
data16
decl
cmp
mov
test
mov
cmp
or
jge
lods
adc
xchg
xchg
mov
icebp
mov
fists
adc
xchg
sub
push
orb
adc
inc
sbb
push
pop
pop
cmp
cmp
ljmp
or
imul
rcll
mov
add
jmp
stos
sbb
adc
lcall
jb
in
xor
push
aad
test
ret
lahf
fdivp
pop
push
jmp
insb
popf
xchg
pop
mov
cmp
push
adc
adc
shl
xchg
lcall
push
jmp
cmp
in
sbb
jbe
in
sarb
repnz
ss
subl
xorl
xchg
out
xchg
popf
xor
leave
cmc
into
cld
pop
aad
sbb
inc
fidivl
shlb
shrl
pop
shrl
dec
adc
adc
incl
in
xor
ja
test
sti
inc
xchg
push
cltd
inc
jae
jg
ljmp
cs
cli
sbb
push
lods
jl
into
iret
cmp
xor
xor
adc
inc
cmpl
jne
jg
movsl
xor
xor
inc
push
insb
jg
cmpsl
scas
loop
mov
inc
and
test
adc
out
clc
jmp
or
or
pop
iret
jne
cmc
dec
lock
fildll
fstps
fsubrp
idiv
dec
push
insl
test
xlat
pop
inc
or
repz
pop
popa
incl
mulps
and
rolb
mov
repz
shrb
or
or
leave
jmp
fwait
mov
xchg
xor
aaa
lcall
stos
stos
adc
and
jle
stos
enter
mov
xor
push
sbb
inc
add
imul
jne
rolb
je
xor
test
xlat
das
leave
mov
loop
xchg
push
out
pop
insb
sbb
scas
stc
fisttpll
jp
mov
inc
les
sbb
inc
insl
movsb
dec
loopne
jmp
fdivrs
and
sbb
push
gs
ljmp
cwtl
sub
pop
repnz
nop
in
je
adc
and
incl
enter
adc
xchg
cmp
xor
xor
je
xchg
push
cmp
pushl
jno
push
pop
icebp
cmpsl
add
sahf
sub
call
cld
insl
mov
mov
hlt
incl
push
fdivrs
loopne
or
dec
leave
lcall
sti
push
lahf
dec
mov
mov
cmp
xchg
test
outsb
xor
test
mov
inc
test
jns
mov
cltd
jecxz
dec
and
aaa
mov
in
add
inc
sbb
popa
push
mov
push
aaa
add
stos
xor
xchg
ja
incl
add
jg
faddp
xlat
mov
cmp
jo
push
jae
sbb
mov
push
js
adc
pop
or
cmc
pop
shlb
sub
mov
adc
aam
adc
jno
inc
sub
adcl
sbb
ret
push
lret
mov
cld
xor
pop
sbb
mov
push
ljmp
add
ja
fisttpll
push
inc
and
lret
sar
ljmp
int3
daa
inc
out
lods
cmp
hlt
icebp
mov
inc
aaa
cmp
jnp
push
jnp
inc
in
ljmp
ret
inc
popf
ljmp
daa
jb
mov
fists
xchg
mov
rcrl
fldcw
ret
mov
pop
in
or
xor
fs
in
sub
jns
stos
or
cmpsb
jge
jge
sbb
rcr
or
popa
dec
xlat
pushl
push
xor
outsl
and
jg
sbb
fiadds
cmc
adc
fcoml
inc
mov
pushl
cmp
push
cmpsl
arpl
xor
loope
mov
xchg
or
mov
ljmp
insl
or
mov
shrb
or
data16
test
add
pop
mov
enter
add
outsb
ret
sbb
mov
mov
sarl
cli
mov
pop
mov
leave
int3
insb
xchg
and
test
daa
cmp
dec
mov
rcrb
addl
jns
push
dec
adc
cmc
das
pop
icebp
cmp
push
lret
fwait
scas
rcr
add
jb
pushl
loope
popa
sahf
mov
push
sub
and
imul
jge
cmp
fiadds
inc
hlt
out
int
or
mov
xor
sub
xor
sub
lret
dec
and
outsb
pushf
add
cmp
enter
sbb
push
bound
sbb
dec
jp
inc
pop
xor
xchg
ret
ss
jmp
addb
lods
popf
shrb
mov
and
jle
jbe
xor
sarl
pushl
lret
shl
movntq
lahf
fucomip
outsb
insl
cld
cmpsb
pop
mov
fiaddl
pop
sub
decl
shl
inc
sbb
movsl
ret
cmp
or
xchg
xchg
jl
incl
push
sti
push
repnz
push
mov
mov
repnz
cwtl
push
cli
add
into
rorb
faddl
dec
inc
and
inc
leave
adc
add
call
pushl
mov
arpl
js
pop
mov
mov
pusha
xchg
idivl
jmp
into
mov
xor
daa
mov
das
or
rcl
adc
jge
in
jmp
xor
ds
or
dec
inc
mov
sbb
add
repnz
mov
xchg
or
ljmp
cmpsb
xor
mov
jnp
shr
jns
test
cmp
sbb
or
add
scas
test
hlt
dec
cmpsb
ret
call
cli
ljmp
scas
ljmp
jo
lds
xor
stos
call
inc
popa
cmpsl
cmp
int
ljmp
fldt
cli
fidivs
cwtl
std
lret
popa
and
xor
inc
pushl
mov
ja
cmp
jb
xchg
and
mov
fsubrs
idiv
jmp
outsb
xor
jno
lods
cli
mov
mov
into
loop
mov
into
ljmp
jl
xorb
mov
fidivs
dec
gs
pushl
data16
mov
int3
xor
out
fisubrl
fistl
scas
mov
int3
into
or
call
xchg
inc
or
and
sbb
aaa
fistpl
leave
xor
jne
inc
clc
ljmp
push
test
jp
inc
pop
test
mov
divb
decl
incl
mov
pop
or
jle
test
adc
iret
sub
fisubrl
jp
cmp
push
jle
pushl
mov
xchg
xchg
dec
arpl
test
outsb
add
imull
mov
mov
fdiv
pop
aad
lcall
or
paddd
popa
pushl
aad
xchg
outsl
pop
fs
insl
mov
jecxz
jne
jo
fxch
pop
stc
shll
test
incl
inc
mov
mov
jnp
mov
lret
sub
or
sahf
jns
adc
adc
icebp
adc
fisttpll
xor
das
inc
ss
pushl
cmc
mov
push
fcomp
sbb
sahf
es
cli
add
dec
outsb
xchg
push
inc
nop
mov
mov
ret
add
std
mov
das
popa
pop
mov
cmp
sahf
sar
rorl
lcall
and
add
ret
pcmpeqd
or
fdivrl
lods
pushl
in
mov
sub
pop
dec
add
adc
decl
fmuls
js
mov
sub
loopne
pop
sbb
sub
mov
cmpsb
fs
pop
mov
jmp
loopne
adc
push
out
adc
leave
pusha
popf
or
call
repz
cwtl
mov
or
inc
mov
lods
andl
push
es
lods
ljmp
jecxz
lret
and
xchg
pop
and
jb
in
adc
call
arpl
movsb
das
sub
mov
orb
lcall
and
lcall
and
dec
rol
xor
and
jmp
mov
adc
push
xor
mov
jb
rep
lcall
xchg
cld
jbe
mov
cmp
enter
fs
cmp
stc
xchg
ss
xchg
add
imul
jecxz
and
cli
scas
mov
test
stos
mov
addb
rol
jae
xchg
test
mov
les
mov
decl
adcb
or
lea
loopne
cmpl
lods
lods
ljmp
dec
imul
lea
jecxz
js
mov
aad
push
std
shlb
loop,pt
mov
pop
jmp
xchg
push
jle
lret
pop
push
mov
pop
cs
lret
pop
repz
lock
and
jmp
outsb
iret
mov
jno
sbb
movsl
adc
push
xchg
jne
or
hlt
mov
adc
mov
decl
mov
add
stos
mov
adc
inc
inc
insb
pop
in
ds
jne
add
lods
lock
incl
lret
jl
jne
incl
int3
je
cmp
rcrl
inc
ljmp
adc
pop
nop
call
sahf
xor
into
popa
jnp
popf
sub
decl
xchg
dec
xor
jl
or
jle
pop
in
ficoms
cld
ljmp
xchg
cmp
push
pop
mov
lods
adc
jmp
cmpb
mov
pusha
lock
lcall
push
das
dec
gs
incl
push
scas
leave
fists
in
outsl
adc
notb
and
andb
std
cwtl
fisttps
sub
cmpsl
mov
xchg
mov
addr16
inc
mov
add
mov
pop
pop
cmp
decl
loopne
and
mov
mov
in
es
loopne
fisttpll
pusha
out
gs
ss
dec
imul
pop
movsb
push
and
ljmp
add
test
popa
mov
mov
das
sbb
jmp
clc
incl
ja
loop
xchg
icebp
pushf
out
jns
test
mov
jmp
mov
shrb
adc
leave
sbb
push
fs
mov
and
incl
sbb
ds
mov
mov
lret
mov
xchg
shrb
cmpsb
test
push
push
es
push
sbb
sub
push
out
addb
jge
enter
mov
fwait
incl
push
bound
pop
fcompl
cld
fisttps
dec
mov
push
xchg
in
ss
jo
decl
mov
rorl
and
pop
pusha
add
test
jbe
push
mov
sbb
adc
es
push
imul
ljmp
or
dec
lcall
enter
pop
pop
sti
add
xor
lea
and
shll
fwait
sbb
pop
es
out
cmp
stos
in
lret
add
incl
jecxz
mov
and
jecxz
ss
xor
movsb
pop
incl
mov
xor
and
popf
cs
jmp
enter
imul
sub
jl
push
mov
rol
imul
mov
jmp
cltd
pushf
aad
mov
or
mov
incl
rcrb
push
lea
push
cmpsl
into
inc
mov
lock
sub
decl
out
xchg
jnp
aaa
mov
sub
icebp
inc
inc
sti
popl
lcall
inc
or
mov
sbb
xor
jbe
mov
cmc
sbb
scas
clc
dec
sub
test
inc
jno
bound
xor
repnz
pushl
cmp
or
jns
lds
jg
test
mov
dec
adc
adc
pop
ja
adc
jmp
mov
lods
test
jp
mov
add
mov
pushl
xor
lea
sub
push
cmc
jmp
jbe
mov
ffree
push
ficompl
push
cvtps2pi
ljmp
lahf
cli
cmpsl
out
aad
cmpsl
cwtl
xchg
pushf
subb
imul
stc
aad
movsl
pop
ds
insb
lret
js
int3
mov
push
adc
mov
je
mov
decl
jnp
das
xor
mov
dec
inc
icebp
je
ficompl
lcall
add
push
jne
mov
jb
cwtl
stos
dec
add
scas
dec
xchg
ds
dec
xchg
xchg
or
movsb
pop
repz
call
test
ss
sbb
dec
jb
into
lock
add
out
cmp
mov
mov
js
fwait
and
jg
adc
mov
orl
pop
lock
or
push
fdiv
mov
dec
hlt
cmpsb
mov
dec
adcb
jp
jle
test
add
lcall
xchg
into
and
cmp
fmull
jbe
push
jg
add
in
sti
nop
sbb
scas
pusha
cmp
xchg
daa
cli
cmp
adc
jg
mov
std
and
jle
xchg
mov
decl
cmc
sbb
push
xlat
add
cmp
mov
out
mov
mov
loop
clc
call
cmp
out
cmpxchg
or
movsl
or
outsl
jg
call
adc
movsb
mov
in
xor
cmpsb
lea
dec
push
pop
sub
sub
daa
fidivrl
loopne
pop
std
add
push
and
leave
push
sub
cmpb
dec
mov
sti
shrb
test
cwtl
std
sbb
js
or
dec
jnp
jns
decl
push
pop
scas
mov
sbb
xchg
jg
fdivr
ret
decl
pusha
mov
xchg
cli
jno
push
mov
int
push
push
outsb
icebp
mov
sub
mov
pop
jne
mov
inc
adcb
inc
and
jle
lea
mov
movsb
mov
or
jmp
lds
push
adc
lock
and
xor
decl
dec
or
xchg
imul
pop
rcr
es
xchg
xchg
cmp
dec
dec
out
cli
ljmp
popf
mov
cltd
popf
out
cmp
imul
outsb
das
sarb
pop
outsb
leave
jnp
lods
jne
call
ljmp
andl
bound
test
cmp
insl
repnz
decl
pop
xchg
jbe
bound
test
stc
pop
inc
pop
cwtl
push
push
das
dec
push
fistpl
mov
ffreep
ss
popf
lods
mov
pop
jg
cli
push
fidivrl
decl
ljmp
lret
sbb
ds
mov
sbb
mov
pop
mov
mov
mov
pop
icebp
fcmovnbe
mov
dec
std
imul
push
push
fs
pop
push
jo
push
call
mov
jle
dec
stc
pusha
dec
jae
sub
and
or
out
popa
rcrl
xor
sbb
mov
pop
and
loope
or
fldt
jmp
decl
movsl
stos
xchg
nop
mov
sub
clc
repnz
iret
cmpsb
xor
sub
decl
adc
add
ljmp
cwtl
daa
sub
mov
dec
rorb
pop
and
loopne
test
push
push
mov
jae
mov
mov
xchg
mov
dec
and
stos
mov
mov
jle
cld
sub
pop
fmulp
nop
mov
push
std
pop
test
es
or
xchg
lret
repz
cmp
adc
mov
call
shlb
sbb
std
mov
ja
ret
out
push
adc
dec
pop
cld
lcall
add
stos
arpl
test
sub
sti
loop
lods
mov
lds
movb
xor
imul
pushl
cld
jmp
les
or
mov
pop
xchg
inc
aaa
add
sub
add
icebp
arpl
jmp
ljmp
dec
cmp
call
lret
xor
test
repz
insb
sub
decl
aaa
sub
fwait
stos
dec
cmpsb
lds
xchg
sub
aad
mov
pushl
or
jbe
repz
push
aaa
incl
cmp
scas
lcall
rorb
rcrb
cmp
jns
and
sbb
add
push
jecxz
mov
lret
xchg
lods
popf
into
movsl
push
adc
jg
sbb
pop
shrl
fcmove
jg
add
add
aas
mov
fdivs
xchg
xchg
into
push
dec
testb
nop
loop
dec
cmp
ret
push
mov
inc
hlt
add
lret
fdivr
test
cmp
mov
lods
pop
sbb
pushf
in
cmp
test
incl
lock
jmp
mov
sub
pop
daa
lret
push
das
add
decl
xor
sbb
sahf
test
inc
jg
jg
push
xor
inc
xlat
out
cwtl
push
mov
and
sub
scas
jbe
pop
ljmp
ret
or
in
mov
outsb
dec
mov
pop
mov
daa
int3
daa
inc
inc
jbe
sbb
jge
je
xchg
dec
gs
loopne
inc
fs
pushf
aaa
mov
mov
jge
cmp
jg
out
inc
mov
pop
dec
rcrb
pop
js
jo
test
int3
outsl
cmp
rcrb
scas
mov
es
stc
jmp
inc
push
pop
out
xor
loope
decl
arpl
int
aad
repz
lds
lea
bound
push
shll
jg
fisttpl
aad
in
lahf
push
sbb
adc
data16
jmp
ljmp
arpl
out
xchg
push
test
sub
sti
loopne
push
xchg
lods
xchg
jae
inc
mov
add
out
dec
insb
fwait
lcall
and
push
sarb
aaa
repnz
xor
ljmp
movsb
subl
into
fs
movzwl
outsb
mov
incb
dec
sub
stos
stos
push
xchg
xchg
notb
xchg
std
and
int3
es
fisubrl
clc
pop
testl
lods
or
pop
push
rcrl
sahf
jno
shlb
test
jg
stc
cmp
out
ffree
in
notw
ret
ret
sub
mov
idivb
pop
jg
in
push
decb
lds
cmp
sarl
mov
lcall
pop
cmp
enter
aaa
out
aas
lea
divl
lahf
test
fcomip
sub
sarb
inc
fwait
cwtl
inc
mov
mov
xor
ljmp
xor
mov
cmpb
push
sbb
arpl
jmp
pop
lea
inc
sub
in
ljmp
sub
loopne
mov
bound
push
mov
push
mov
mov
pop
dec
rclb
faddp
pop
loop
push
sub
loope
pop
sbb
insb
cli
and
outsl
aas
mov
cmpsb
movsl
push
cmp
fs
jmp
push
sub
sbb
dec
or
call
adc
cmp
adc
push
mov
gs
popf
add
jge
mov
cld
lahf
test
xor
mov
pop
sti
adc
mov
add
dec
push
adc
loopne,pn
sub
xchg
bound
pop
jp
jmp
jl
lds
into
jg
fwait
mov
pop
hlt
ja
cmp
lds
add
mov
sub
mov
rorb
call
pop
mov
sub
popa
rolb
push
sti
cld
and
fnsave
sbb
push
and
cld
incl
std
loope
push
mov
into
jp
or
jp
jge
adc
call
or
lods
popa
dec
mov
add
aad
mov
xchg
sub
call
add
dec
inc
sbb
sarl
jg
ja
ds
faddp
cmp
jle
call
in
pop
jecxz
dec
daa
pop
cmp
rorb
cmp
call
std
into
push
inc
xchg
xchg
je
fistpl
fwait
cmp
orl
cli
jns
in
pop
cmpl
cmpsb
stc
xor
adc
int3
dec
ror
mov
pop
call
or
int
xlat
or
cmpsb
mov
sbb
lcall
dec
in
xchg
pop
add
mov
push
sahf
clc
push
shrl
xchg
xchg
jmp
insl
rol
mov
xchg
mov
movl
dec
push
das
je
das
das
rorl
lea
lods
mov
loopne
xchg
adc
mov
js
test
fisttps
fs
stos
cmpb
gs
pop
repnz
jmp
dec
and
push
shll
movsb
pop
dec
insb
mov
xor
cltd
or
out
rorl
in
and
sar
cmpsb
scas
push
cs
les
xlat
jg
jp
add
mov
mov
clc
xchg
scas
into
jl
lcall
add
call
pop
filds
pop
movsl
push
push
cli
cmp
and
loop
test
inc
jmp
push
push
sbb
mov
push
mov
xchg
cmp
mov
sub
dec
fs
dec
decl
test
sarb
dec
hlt
adc
dec
int3
stos
pop
xchg
cld
mov
faddp
mov
push
sti
adc
or
decl
pusha
mov
sub
pop
std
insb
test
mov
sub
pop
je
int
idiv
jg
addr16
fcompl
sahf
push
into
xor
je
ret
pop
dec
pop
test
add
dec
push
pushf
aam
mov
lock
addps
out
into
in
pop
xor
out
sub
or
push
mov
xchg
pop
fsubrs
mov
arpl
and
in
inc
mov
inc
xor
fsts
and
dec
mov
iret
xchg
mov
jo
loop
adc
pushl
mov
jo
jbe
xor
push
loopne
addr16
sbb
mov
dec
lods
jmp
addr16
rol
jmp
ret
mov
xor
dec
sub
inc
ds
sbb
aam
rep
movsl
aam
or
daa
or
cwtl
call
sbb
mov
xchg
repnz
sarl
jbe
push
mov
sbb
jge
inc
sbb
jle
ret
sbb
inc
mov
fidivrs
shll
jne
push
mov
pop
rclb
sbb
mov
push
call
dec
xchg
xchg
pushl
mov
cmp
ds
sbb
ljmp
mov
dec
sub
mov
lret
jns
outsl
gs
and
addl
inc
push
xorl
pushf
popa
insl
jb
mov
fsqrt
xchg
mov
push
loop
insb
call
mov
andb
dec
and
scas
mov
pop
shr
insl
mov
pop
add
mov
call
sbb
sub
lods
aad
fstpl
setp
js
stos
adc
daa
incl
fdivl
ljmp
xor
xor
sti
mov
xchg
test
push
popf
jle
movsb
sbb
decl
adc
pop
xchg
jae
dec
testb
push
mov
cwtl
adc
js
jmp
cmpsl
mov
insb
jb
rol
in
mov
push
xchg
aam
nop
mov
clc
call
shll
add
in
jo
pop
add
loop
lock
and
outsl
lret
decl
sbb
xor
jle
sbb
push
sub
jns
sbb
push
pop
jnp
cmc
sarb
cmpb
ljmp
and
jg
push
cmp
iret
cltd
push
push
hlt
push
int3
mov
popa
or
jnp
pop
jmp
repnz
pop
nop
and
jge
imul
mov
mov
cwtl
popf
jo
inc
in
outsl
es
and
push
std
decl
cmpsl
dec
aam
pop
pop
xchg
cmp
and
insb
addl
cltd
movsb
les
mov
enter
xchg
repz
xor
mov
rclb
shr
imul
int3
xchg
xor
lcall
inc
mov
jmp
andb
test
xchg
jle
lcall
xchg
inc
jb
sub
dec
or
test
add
aam
pushl
mov
inc
cld
aad
cmp
push
sub
xchg
mov
mov
jmp
push
mov
cmp
nop
movsl
push
jl
aam
ret
push
aam
rol
sar
decl
mov
lret
dec
insb
int
iret
inc
xchg
push
scas
inc
ror
insb
push
bound
test
incl
test
mov
sub
stc
gs
jge
sbb
pop
pusha
imul
fnstenv
std
call
loopne
add
insb
pop
ret
shrb
mov
iret
or
pushl
ljmp
push
xchg
mov
scas
fstl
leave
cmpsb
rorb
aas
cwtl
call
pushl
sti
mov
ret
inc
inc
jmp
mov
hlt
inc
call
std
mov
pop
mov
mov
mov
fstps
add
xchg
clc
jmp
loopne
adc
xchg
filds
jnp
lret
adc
lods
inc
imul
or
sbb
pushl
and
mov
pushf
out
call
jns
push
leave
adc
ja
out
jl
insb
daa
mov
inc
nop
pslld
push
fdiv
pop
mov
inc
subl
inc
dec
lock
sbb
nop
add
push
fdivp
aad
ss
mov
lahf
ss
or
mov
pop
mov
jle
loopne
or
and
rorb
ja
insl
push
mov
pop
or
lods
dec
cltd
mov
or
push
or
mov
or
fildll
out
mov
pusha
or
jmp
adc
push
push
inc
jbe
pop
mulb
adc
int3
xor
out
xchg
xchg
call
aam
repnz
pop
clc
sbb
mov
pop
aad
lcall
push
fildll
pop
add
xor
pushaw
stos
lods
call
dec
jmp
ds
in
into
jne
std
repnz
sub
pop
les
pop
inc
mov
clc
std
inc
xchg
aaa
xchg
or
mov
stc
mov
sbb
in
mov
xor
out
sahf
loope
cmp
xor
adc
decl
mov
out
push
fcomps
jo
cmc
lock
jmp
mov
int
out
fstpt
xchg
xor
sub
mov
dec
inc
les
xchg
incl
push
aas
xor
mov
shlb
mov
pop
or
scas
lods
cmpsl
aaa
pop
push
aas
sahf
ljmp
cli
jg
inc
push
std
pushl
lea
add
jae
mov
or
lock
xor
adc
mov
add
jne
dec
fisubrs
outsl
mov
sub
cmp
and
cmp
sbb
divb
shll
jb
call
mov
notb
lods
sub
jnp
mov
int
addr16
movsl
jnp
leave
stos
pop
outsb
or
in
ds
and
sub
inc
gs
insl
adc
imul
test
decl
mov
enter
push
jle
add
sub
push
inc
sub
or
scas
cli
pushl
mov
mov
adc
mov
mov
inc
pop
fsubl
pushl
sbb
xor
sbb
nop
mov
sbb
ljmp
cmp
out
call
cld
cmp
dec
int
roll
add
sub
nop
nop
sub
call
sbb
and
lds
lea
push
shll
inc
ss
sbb
int3
andl
pushl
pop
xchg
test
xor
cmp
pop
xchg
jbe
ljmp
je
mov
loop
arpl
mov
dec
cmp
push
rcll
jb
testb
push
jmp
nop
insl
pop
or
ss
mov
adc
mov
jecxz
add
inc
movsl
dec
repnz
aam
and
xchg
lods
jle
in
jle
sbb
repz
mov
adc
in
push
push
jae
lcall
shll
notb
pop
test
cld
adc
lahf
add
lret
incb
aas
mov
pop
add
stos
sbb
xchg
int
mov
mov
in
mov
pop
gs
and
repnz
and
movsl
dec
cltd
js
pusha
rcl
jmp
push
jg
cmpsb
fistps
js
push
int3
loop
or
scas
clc
incl
add
sti
xlat
dec
xchg
mov
or
outsb
jnp
das
xor
dec
test
leave
jns
out
cli
and
add
sub
rol
sub
jmp
call
cmpb
sahf
or
inc
sbb
sub
jle
jg
push
mov
fs
lea
ljmp
stos
dec
aas
sub
cwtl
xchg
decl
outsl
and
pusha
fstl
scas
int3
fildll
pop
mov
pop
fwait
aaa
dec
push
xchg
insl
fmuls
sbb
push
lock
data16
jo
adc
decl
or
ret
icebp
aam
mov
cmp
mov
scas
xchg
lea
or
pushl
fistl
dec
and
insb
mov
push
out
int3
call
cmp
mov
in
dec
aam
lods
jmp
bnd
imull
xchg
arpl
in
push
jmp
cmp
sahf
mov
mov
ljmp
mov
xchg
popf
shll
inc
jp
mov
aas
push
gs
mov
or
ljmp
jmp
xchg
adc
adc
test
add
test
cmp
scas
test
cmp
cmpb
enter
mov
sub
lods
paddsb
sub
xor
mov
adc
xor
mov
cmp
mov
decl
jo
adc
jne
test
cmpsb
cltd
xchg
xor
pusha
ja
mov
pushl
xchg
test
andb
jbe
mov
jo
inc
adc
add
pop
jnp
xchg
out
jns
cmp
imul
iret
add
adc
cmp
lcall
mov
ljmp
cwtl
and
jp
pop
or
fistpl
push
mov
decl
rcll
mov
push
loope
pop
ljmp
dec
out
jo
jecxz
into
inc
xacquire
inc
adc
push
sub
mov
jmp
std
scas
xchg
lahf
dec
and
je
and
fsubrs
xchg
xor
repz
sar
fcoms
das
cmp
arpl
cld
xchg
aam
add
or
lock
pushl
sbb
inc
sub
pop
aas
fmuls
xor
mov
jg
cld
push
cmpsl
in
cmpsl
and
aad
xor
ds
push
cwtl
lcall
sub
fsts
stos
lea
push
es
jl
xchg
add
inc
imul
fcompl
aad
fdivrl
nop
ljmp
adc
sar
mov
push
into
push
jmp
dec
jle
push
xor
rcll
aaa
push
lcall
in
test
ret
paddusw
push
inc
adc
cmc
pop
inc
lock
cmp
inc
add
dec
imul
ljmp
push
std
mov
adc
dec
lret
addr16
push
mov
pushl
mov
or
add
xorl
scas
js
dec
lods
cwtl
lret
js
jge
xchg
pop
jno
mov
jmp
inc
test
out
adc
jmp
enter
mov
add
mov
fdivrp
mov
cmp
movb
mov
shl
ret
in
pop
mov
pushl
fiadds
lcall
int
and
adcl
sub
mov
incl
cld
push
xor
rcrb
dec
out
pop
jge
sarb
sbb
lcall
pop
shlb
or
mov
lods
adc
sub
push
pop
pushl
jp
mov
movsl
test
dec
xorb
rcr
cmpsl
fldl
adc
pushl
sbb
push
daa
stos
inc
out
lock
movsl
and
push
lods
in
jmp
mov
xchg
cwtl
mov
push
jb
adcb
or
sub
add
incl
int
inc
cld
in
inc
sti
je
popf
mov
lret
insb
inc
cmp
stc
pop
call
xchg
xchg
sti
mov
data16
mov
scas
sbb
leave
int
fldl
xchg
ljmp
decb
or
test
lret
arpl
je
hlt
sti
outsb
pop
iret
mov
aad
call
sub
inc
insl
in
sub
in
inc
lods
stc
rclb
stos
lcall
pop
ds
push
test
xor
jb
pop
iret
xchg
repz
movsl
adc
cwtl
popa
jg
fists
movsl
pushf
decl
mov
mull
inc
push
inc
and
add
loop
mov
shlb
adc
adc
call
push
cmpsb
and
aaa
fwait
loope
ret
dec
mov
mov
xlat
pop
repnz
cmp
cmc
incl
ret
pop
mov
imul
pop
inc
adc
scas
aas
bound
bswap
lds
push
jmp
add
rcrb
rcl
cltd
sbb
fucom
and
xchg
mov
pop
xor
out
lods
xchg
ret
aam
ret
or
jge
fisttpl
xchg
inc
out
jg
call
xor
stos
mov
incb
xor
or
jp
mov
fstpl
outsb
xchg
jg
stos
adc
imul
aas
mov
pop
cmc
outsl
lods
fwait
cmp
les
mov
mov
in
inc
leave
xor
fwait
ljmp
adc
mov
inc
pop
lods
add
fmulp
leave
adc
mov
jge
sbb
int3
sbbl
push
push
in
fucomip
iret
xchg
sbb
xor
and
xor
in
cld
cmc
xchg
dec
jl
and
jns
sub
inc
jg
inc
scas
push
cmp
push
push
lret
and
xchg
xchg
outsb
das
jmp
dec
inc
inc
mov
jno
pusha
jmp
lcall
hlt
xor
jle
pop
pop
lcall
push
xchg
jno
pushf
shrl
sahf
in
in
jg
add
pop
stos
das
lods
sbb
mov
inc
lcall
inc
mov
mov
addr16
hlt
cwtl
mov
leave
fldenv
cmpsb
push
pop
jle
mov
jno
jp
enter
cmc
sbb
dec
mov
das
rolb
es
enter
inc
mov
enter
ret
aad
ljmp
mov
insl
cmc
inc
cmp
xchg
adc
fwait
nop
ljmp
imull
testl
sub
inc
iret
mov
or
inc
mov
jmp
xor
mov
insb
inc
sub
xor
cwtl
repz
push
xchg
jmp
jns
fildl
sbb
xchg
dec
pop
dec
jb
sub
ja
in
xlat
lcall
jmp
jbe
aad
xchg
or
pop
ljmp
repz
pop
jno
sbb
dec
fidivrl
pushl
add
das
mov
mov
shll
and
repz
leave
mov
mov
xchg
or
xchg
notb
sbbb
mov
mov
fcomip
xor
ss
testl
inc
nop
movsl
sbb
push
in
shll
stc
xchg
dec
push
dec
bound
or
or
pusha
jg
mov
pop
jmp
int3
outsl
push
cmpsl
insl
neg
xor
loop
scas
jg
inc
and
out
xchg
jae
mov
sbb
ret
repnz
mov
lea
decl
bound
xchg
adc
sahf
pop
shll
mov
ja
rorl
in
out
out
lcall
mov
out
mov
fisttpll
mov
lcall
adc
dec
mov
les
dec
inc
xchg
cwtl
push
pop
cmp
lea
fisttps
jns
out
mov
pop
repz
insl
adc
pushl
icebp
or
cmp
fs
dec
inc
hlt
scas
mov
stos
jg
lods
cli
add
pop
cmc
lock
mov
loopne
adc
and
xor
pop
push
push
jp
mov
cmp
mov
xchg
stc
xchg
mov
add
jnp
lods
stos
adc
xor
decl
and
mov
call
lea
mov
shrl
and
nop
mov
jg
in
cwtl
sub
ret
dec
jg
sub
pushl
stos
or
test
cwtl
les
insl
pop
lods
pop
in
push
lds
inc
fbstp
pop
sub
imul
shl
movsl
stc
pop
xor
shll
pusha
push
jecxz
decl
neg
out
pop
sbb
xlat
push
mov
lea
fmull
push
pop
popa
or
sbb
call
lcall
mov
push
mov
mov
pop
dec
insb
out
sbb
fcomip
xchg
jmp
jecxz
inc
mov
imul
stos
and
or
lcall
xlat
fisubs
mov
xor
es
lock
pop
xchg
mov
add
testb
rcl
loope
sub
pop
int
mov
call
xchg
sarl
inc
pop
ud1
rcll
call
in
lret
xor
mov
es
pop
mov
pop
in
dec
cs
add
jo
mov
lds
inc
inc
shl
sbb
frstor
xor
jns
push
roll
push
inc
push
insb
movsb
shlb
and
cs
inc
inc
subl
test
fisubl
incl
cmpb
movsl
push
sbb
mov
nop
cmp
mov
out
arpl
cli
stos
aam
inc
sahf
inc
push
insb
cld
outsl
sub
inc
in
add
clc
mov
orb
out
xor
out
mov
or
cli
sub
hlt
or
imul
call
sub
jne
orb
push
test
xor
mov
xor
mov
sub
mov
ss
fistl
pusha
arpl
fucomi
pop
testb
iret
and
movsl
call
dec
aas
leave
std
dec
test
filds
inc
arpl
mov
mov
push
cmpsb
test
aas
cmp
dec
pop
adc
clc
pop
mov
rcll
mov
inc
adc
pop
push
std
into
std
mov
incl
lret
push
xchg
fcomps
cmp
jecxz
outsb
push
test
mov
lds
sbb
add
inc
enter
and
in
xchg
mov
xor
cld
imul
add
negl
mov
xor
dec
aam
movsl
push
push
xchg
inc
mov
outsl
xor
mov
cmp
jno
sub
cld
jmp
pop
jb
loopne
lret
lret
pop
out
jb
dec
and
pop
ret
sbb
outsl
cmc
mov
jg
mulb
or
jne
dec
dec
aad
aad
jb
pop
testl
iret
addr16
sbb
sbb
push
decb
dec
ljmp
sub
and
sbb
subb
incl
in
jo
dec
shl
bound
imul
call
std
lods
fisubrl
dec
lret
cmp
out
ss
pop
jle
lea
aaa
cld
pop
loopne
imul
test
or
ljmp
ss
and
out
push
add
ds
cmp
cmc
loope
and
or
adcl
push
mov
addb
pop
ja
cmp
and
adc
cwtl
cltd
inc
and
testl
adc
mov
enter
dec
mov
sub
iret
adcl
adc
repnz
sbb
cmpsl
inc
mov
dec
repnz
jmp
je
cs
iret
cmp
xor
jae
cmp
and
cmp
mov
test
push
adc
xor
lock
ljmp
cs
scas
pusha
loop
xchg
repnz
lds
leave
adc
decl
arpl
loope
mov
inc
leave
fsubl
xlat
ljmp
mov
pop
cmp
pop
or
mov
push
push
adc
into
insb
mov
mov
in
mov
jno
add
mov
addb
sub
test
int
xor
cmc
pushl
xchg
jp
xor
xchg
lea
testl
dec
mov
popa
and
xor
or
ljmp
xor
lcall
ret
or
lahf
push
in
aad
lret
jno
xchg
out
jle
xor
sbb
int3
mov
mov
test
or
xchg
fwait
and
add
ljmp
inc
xor
xorb
incl
jle
loop
iret
bound
jecxz
addb
jecxz
incl
inc
xchg
mov
mov
push
cli
das
mov
pop
shll
filds
mov
jnp
decl
and
jmpw
mov
mov
mov
sbb
cmp
testl
pop
pop
pop
pop
mov
cmp
mov
das
sbb
xor
outsl
in
stos
popa
push
xorb
in
mov
iret
into
pop
xchg
popa
mov
add
xor
sub
push
mov
cmp
es
imul
and
dec
std
popf
sub
ds
test
dec
pop
jnp
fcomip
in
mov
jne
mov
in
in
aad
call
mov
dec
xor
lcall
jb
xorb
cmp
int
and
mov
jg
and
jg
or
push
das
loopne
in
xchg
inc
test
lock
das
mov
faddl
mov
shll
push
adc
test
xchg
fnsave
rcrb
repnz
cmp
out
dec
cmp
mov
lds
decl
sbb
inc
ja
xchg
outsb
es
loop
mov
scas
out
clc
fisttps
inc
lahf
push
cmp
xor
xor
es
pop
loopne
jno
adc
and
aam
fdivl
repnz
out
lea
mov
into
mov
scas
mov
scas
and
add
rcrb
and
stos
popa
jecxz
pop
mov
mov
xor
dec
sahf
fisubl
popa
subl
lret
sbb
xor
mulb
aad
icebp
aad
dec
jmp
mov
or
mov
aaa
push
xchg
pop
arpl
lret
bound
mov
test
jg
pop
adc
clc
addr16
jg
clc
pop
lret
jmp
scas
add
sub
les
pushf
lock
rcrl
jmp
icebp
addr16
adc
jp
test
into
stc
jl
movsb
mov
xchg
cmp
std
xchg
push
decl
jp
movsl
pop
aam
push
lods
test
ret
imulb
pusha
rolb
add
adc
push
fadds
mov
pop
icebp
jmp
fdivrs
xchg
aas
fmul
cmpsb
fcmovnb
fsubl
or
xchg
jns
mov
push
loopne
fs
mov
pop
xchg
sub
imul
sbb
lret
and
mov
mov
je
hlt
push
pop
lods
les
mov
pop
fcomps
xchg
or
and
out
or
jnp
xchg
adc
js
mov
mov
leave
aaa
sbb
xchg
push
lcall
cmp
das
je
outsb
fs
scas
enter
fcoms
rclb
cs
push
ljmp
mov
sbbl
ret
inc
gs
scas
push
add
adc
jecxz
cmp
add
rclb
push
ja
push
insl
sbb
cli
shll
lcall
mov
xor
add
jmp
aam
aas
rolb
mov
decl
cmp
add
icebp
ret
sahf
pop
adc
rolb
gs
jb
fsubp
mov
push
add
jbe
mov
jmp
inc
jl
adc
aad
pusha
cwtl
and
or
push
cmp
add
ljmp
and
lods
jns
movsl
movsl
js
mov
cmp
xchg
outsb
xorb
int
rclb
fmuls
jg
sar
pop
or
lods
push
into
ja
and
stc
xchg
sbb
adc
scas
fildll
cltd
xlat
lcall
int3
xchg
jmp
pop
adc
xchg
push
cli
push
and
adc
push
or
inc
push
mov
pushl
lahf
in
adc
inc
and
adc
jle
sbb
push
imul
add
shrl
les
fcomps
cmp
cltd
pushl
push
orb
sbbb
fmulp
pusha
in
push
insl
mov
jbe
jg
sub
pusha
jo
fldl
imul
inc
dec
shrl
popf
movsl
ds
icebp
sti
ljmp
push
icebp
mov
pop
cmp
mov
adc
mov
scas
pop
mov
mov
ret
jmp
loopnew
mov
mov
imul
call
decl
mov
std
cmc
fsubl
aaa
pop
mov
int3
insb
lods
out
aaa
xchg
xlat
sbb
add
aam
add
dec
push
cmp
mov
roll
jae
leave
sarl
dec
pushf
mov
or
inc
push
dec
call
xchg
xor
pop
mov
mov
decl
sahf
jne
mov
pop
sub
lea
inc
shll
pop
popf
pop
sub
ja
call
stos
in
loop
cmp
jg
ss
shlb
test
mov
sbb
roll
lcall
xor
fs
mov
mov
add
jb
adc
inc
fisubrs
mov
jns
xchg
fs
push
pop
shlb
mov
sarl
negb
xor
push
out
cmp
xchg
pop
ljmp
aad
outsl
sti
fwait
addb
aad
xchg
and
sbb
ljmp
xor
dec
xchg
jecxz
and
test
es
ljmp
in
fcomps
xchg
int3
adc
sbb
inc
jmp
test
adc
rcll
out
pusha
mov
call
les
test
jl
mov
iret
pop
enter
dec
pop
mov
aam
andl
jg
xchg
jg
inc
jmp
add
push
lea
jge
add
push
ds
jmp
aaa
add
push
out
jl
lea
sub
add
xchg
repnz
sbb
inc
fildll
or
into
mov
je
add
inc
jecxz
xchg
and
leave
and
pusha
mov
adc
cwtl
hlt
jge
leave
adc
or
cmp
jmp
ss
jae
and
aad
mov
sbb
cwtl
adc
pop
sbbl
cmp
sahf
popf
inc
push
xchg
xor
call
sahf
adc
gs
xor
movzbl
jecxz
out
cmpsl
ljmp
push
sti
sub
lods
js
pop
cmpsl
xchg
xchg
jo
sti
mov
cmp
jnp
adc
call
ss
or
push
popa
repz
fidivrs
fsubrp
sub
mov
call
pop
jg
xlat
dec
iret
test
test
sub
fisttpl
inc
loopne
cli
jmp
xor
cmc
dec
loope
and
fdivrs
fbstp
out
adc
push
mov
sti
sub
push
stos
dec
jl
jecxz
std
orl
cmp
mov
jecxz
cmp
mov
movsb
sahf
test
mov
or
popa
xor
adc
fldcw
mov
jge
aad
inc
mov
std
adc
das
cwtl
mov
push
andb
clc
aaa
stos
cmp
sti
mov
adc
inc
mov
int3
test
test
fldcw
sub
or
jle
add
sbb
push
jmp
cmpsl
jno
ja
movq
inc
loopne
add
hlt
popf
fistpll
lret
add
sbb
cltd
sbb
lcall
ret
push
jl
or
jg
jmp
ficoml
jno
dec
xor
inc
push
xor
imul
mov
aam
movsb
out
xchg
imul
or
fldt
inc
push
push
cmp
fimuls
adc
sbb
xor
inc
stc
dec
mov
jns
mov
mov
mov
sub
pop
push
pop
popa
aaa
pushl
sahf
dec
das
pop
outsb
sub
cmc
repz
mov
sarb
push
jg
lods
sub
xor
mov
pushl
lret
jo
pop
and
jno
das
scas
mov
in
or
andl
arpl
sub
jle
fidivrl
add
in
ret
icebp
and
mov
inc
mov
call
call
loopne
imul
cltd
jo
lods
fadds
mov
cmp
jp
into
fcmovu
jl
inc
rcll
inc
xchg
xchg
push
data16
test
addr16
jg
filds
lret
pop
adc
into
jecxz
lds
shll
or
movsb
xor
lock
push
call
jmp
lods
dec
xor
inc
scas
and
or
dec
ljmp
cmp
mov
and
cli
pusha
mov
incl
fadds
call
mov
in
xchg
jo
sbb
repz
test
lcall
je
mov
stc
adc
outsb
enter
and
sarl
lcall
mov
mov
mov
xor
leave
js
xchg
lret
std
lcall
jne
out
subl
je
dec
mov
cs
je
jle
call
inc
cmpsl
adc
mov
repz
sub
cmc
sub
mov
sub
stos
mov
xor
inc
push
aaa
xchg
repz
scas
ret
ljmp
pop
lock
mov
jo
pop
lret
int
xchg
aad
sub
fadds
pop
dec
add
pop
cmp
sub
pop
sbbb
ret
sbb
jmp
jle
mov
insl
inc
enter
fiadds
mov
stos
out
xchg
and
or
add
mov
pop
adc
adc
adc
mov
xor
cld
decl
loopne
push
std
jmp
jnp
pushl
test
xchg
ljmp
mov
je
cld
lcall
adc
sbb
insb
jg
lret
enter
ss
mov
fstp
cwtl
pop
loopne
push
push
and
lods
loop
cmp
or
call
loopne
sbb
xchg
push
push
test
fxch
jnp
pop
out
and
loope
rcrb
jbe
cmp
jmp
mov
lret
fiaddl
imul
or
aam
repnz
incl
xchg
push
pop
dec
push
mov
push
mov
cli
push
or
sbb
inc
cld
dec
aaa
add
popf
test
dec
xlat
xchg
add
inc
mov
pop
mov
stos
fldcw
pop
out
dec
out
push
call
cld
lcall
ljmp
push
xor
movsl
lods
enter
sub
cld
and
call
in
jmp
add
loope
mov
lods
aad
push
lahf
jmp
sbb
inc
stos
mov
sahf
and
pop
xchg
mov
les
mov
ret
xchg
mov
mov
lret
lcall
push
push
or
shrl
iret
fiadds
cld
addr16
push
ljmp
inc
and
adc
pop
inc
inc
fs
nop
je
decl
incl
aas
fisubrs
mov
cmp
js
ljmp
push
xchg
or
mov
dec
push
jecxz
sar
inc
sarl
push
mov
incl
push
leave
pop
or
aad
mov
ret
fstpl
pop
iret
xchg
cmp
jmp
sti
arpl
push
inc
xlat
push
rcl
in
dec
in
popa
mov
fs
insl
xor
fisttps
fistpl
imul
jmp
jne
sub
jmp
hlt
xchg
pop
adc
lcall
lods
jbe
stc
mov
emms
or
push
push
jmp
stc
scas
jmp
stc
test
ds
mov
flds
sub
pop
pop
pop
inc
sub
movsl
loopne
negb
lods
sub
lcall
mov
add
test
cmp
pop
arpl
dec
frstor
ljmp
frstor
mov
sbb
aam
in
xchg
inc
fucomip
and
leave
dec
pop
xchg
mov
mov
daa
xor
pop
sub
mov
ljmp
pop
adc
inc
adc
insb
jne
in
imul
inc
sbb
jmp
cmp
fdivrp
dec
push
fistpl
push
out
dec
movsl
pop
lcall
mov
jge
mov
xchg
lahf
mov
cltd
cmpsl
inc
xchg
aaa
mov
mov
mov
jmp
test
imul
cmp
add
inc
xchg
pop
or
test
jmp
dec
mov
sbb
enter
and
sti
lcall
out
jge
ljmp
pop
jns
ljmp
push
shlb
xlat
bound
dec
loope
stc
icebp
or
sbb
ljmp
lods
adc
jnp
insl
push
mov
js
pop
mov
cltd
pop
cmpsl
jbe
mov
xor
jo
movsl
pop
or
cld
pop
je
xchg
jne
add
mov
mov
sbb
decl
pop
jge
aad
cld
ds
mov
daa
add
jg
out
inc
xchg
das
fiaddl
lahf
jo
mov
xchg
in
mov
cmp
mov
xchg
jnp
repnz
pop
xor
stos
dec
push
sahf
sbb
movsb
ret
lea
inc
or
decl
in
and
mov
ljmp
les
adc
mov
push
decl
jne
jne
jge
std
dec
lahf
dec
xchg
xlat
cmp
push
mov
ljmp
rclb
cmp
decl
jno
addr16
push
imul
mov
fsts
sub
pop
sbb
push
arpl
pusha
ret
sub
imul
call
push
push
test
mov
xchg
cmp
mov
xchg
ds
push
rcrb
add
xchg
and
insl
push
fdivs
into
pop
movsl
inc
inc
sub
mov
ds
call
cwtl
loopne
ja
jnp
pop
or
adc
xorl
sbb
xor
ret
daa
mov
adc
std
in
mov
les
pushf
enter
cltd
mov
subb
mov
inc
and
jmp
sbb
enter
mov
cmpb
mov
inc
push
push
mov
lcall
jmp
in
aam
jg
lods
sbb
push
fucom
dec
fisttps
mov
push
jecxz
std
dec
xchg
lds
dec
cmp
add
js
das
xor
mov
pop
das
test
mov
js
cmc
movsl
out
sub
bound
ljmp
push
or
pop
pushf
lods
insb
dec
pop
loopne
add
xchg
stos
mov
jge
jno
jmp
ljmp
repnz
les
pop
ss
stos
je
popf
incb
jae
pop
push
or
pop
add
loope
inc
pop
pop
lcall
xchg
dec
cmpsl
add
fadds
pusha
mov
fwait
mov
and
push
sub
ret
fs
push
out
lock
out
ficoms
push
jge
jns
and
mov
fildl
addb
call
aas
aad
jp
dec
in
jge
dec
mov
ljmp
cmp
sbb
push
sub
inc
mov
ret
sub
movsb
fs
lods
mov
cwtl
test
lds
test
xor
mov
mov
add
mov
out
cli
fists
mov
fldpi
incb
fwait
push
cmp
cld
leave
sub
std
in
lods
jnp
adc
jg
cmp
lret
pop
repz
push
mov
imul
mov
sub
mov
decl
mov
outsb
xchg
sub
push
lock
outsl
xlat
mov
pop
mov
xchg
int3
fnstsw
int
push
fs
add
pop
fnstcw
out
and
popf
test
mov
xchg
fistpl
jmp
mov
sti
jmp
out
fcoms
xchg
or
pop
jne
and
sti
shrl
inc
push
loop
pop
cmp
jmp
or
adc
jl
xor
fdiv
and
pop
and
xor
cmpsb
fwait
inc
insl
sbb
lcall
mov
inc
icebp
ljmp
movsl
cmp
out
repnz
lret
pop
dec
mov
ret
fsubr
daa
ret
stos
inc
pop
mov
shlb
xchg
xor
mov
iret
cltd
pop
adc
cli
cs
int3
adc
lret
xchg
jp
mov
add
jg
movsb
out
and
mov
xor
in
imul
pop
jecxz
int3
jg
in
mov
xchg
mov
pop
adc
mov
add
ljmp
fcoml
push
pop
fwait
iret
xor
sub
or
pushf
fxch
sbb
ficompl
ljmp
xchg
pop
loope
outsl
cmp
jecxz
mov
jnp
inc
leave
push
add
or
call
xor
dec
inc
xor
stos
lahf
repnz
pop
xchg
mov
mov
mov
pusha
movsl
inc
scas
xchg
adc
mov
cmp
mov
out
js
repz
push
lret
add
jl
mov
lcall
cwtl
in
and
inc
leave
cmpsl
dec
ret
sbbl
cmp
cld
enter
inc
stos
lcall
jnp
out
jp
into
lods
loope
out
sub
icebp
sbb
jae
xchg
mov
outsb
or
inc
cmpsb
xchg
outsb
fstps
fnsave
sbb
mov
daa
loopne
stos
push
out
sahf
xchg
jbe
mov
loop
lods
addb
mov
out
jmp
mov
xor
outsl
sub
sbb
mov
je
mov
sbb
push
cmp
cmp
sahf
fcomp
push
cmp
xchg
xchg
test
sub
mov
out
lahf
lret
and
pop
test
adc
sub
xchg
jae
stos
jmp
call
sub
in
aam
or
jle
imul
aaa
ret
cmp
into
popa
push
es
jle
lcall
push
xlat
icebp
mov
or
jl
dec
jle
pop
push
xor
das
mov
xorb
call
ret
xchg
push
call
jns
mov
pop
daa
cmp
inc
or
cmp
lea
hlt
cmp
or
div
fsub
cmc
ret
push
test
jle
leave
in
test
rcrb
je
xchg
push
dec
call
andb
sub
incl
or
fisubl
iret
cmp
shlb
xor
imul
dec
jle
pop
mov
lcall
xchg
jb
insb
pop
pop
add
test
loopne
decl
out
mov
xchg
ret
xor
lret
or
add
or
cltd
xor
dec
ret
cs
cmc
mov
mov
mov
and
arpl
push
aaa
jle
addr16
repz
ljmp
mov
or
inc
outsb
bound
cmp
sbb
adc
flds
mov
jmp
stos
loopne
fwait
mov
xor
dec
mov
adc
and
mov
jmp
lcall
mov
pop
add
inc
pop
lods
es
ljmp
loopne
lcall
ljmp
stc
xor
movsl
fsubl
jge
sub
int
lds
nop
cmp
jg,pn
cmp
ret
aad
and
inc
xor
fistpll
and
call
std
mov
idivb
fidivrs
fisttpl
inc
sub
or
jmp
sbb
pop
repz
or
jg
in
in
push
pop
jnp
mov
or
or
push
rcll
add
jo
ficompl
jns
xchg
pop
lcall
dec
push
jmp
mov
call
call
dec
jl
dec
pop
in
test
cltd
test
rcl
mov
je
pop
out
xlat
add
punpcklwd
in
stos
push
push
adc
mov
inc
js
shrb
adcl
in
loopne
fdivrp
inc
into
jb
arpl
arpl
ret
cwtl
cmp
in
int
add
fst
cmp
cs
ljmp
mov
mov
dec
mov
ljmp
dec
cmp
push
jo
clc
pushl
cmp
loop
fbstp
cwtl
push
push
les
js
push
fs
dec
mov
jle
add
ljmp
sbb
xchg
ss
or
push
mov
mov
jp
jo
and
push
xchg
sub
cmp
sbb
pushl
repnz
stos
call
sub
push
les
and
adc
xchg
pop
cmpsb
push
mov
imul
out
pop
add
movb
xor
fcom
decl
xlat
cs
jle
fwait
push
subl
push
std
push
lds
outsl
jne
and
outsl
mov
mov
adc
fstpl
pop
lds
enter
test
lcall
pushw
mov
mov
jno
repz
cwtl
pop
or
in
push
std
sarb
aas
cmpsl
pop
lods
dec
mov
mov
or
cwtl
and
push
aad
jmp
add
fsubp
divl
mov
mov
leave
dec
cmp
or
mov
cmc
jg
lods
push
mov
mov
mov
ljmp
cli
jg
popf
in
nop
mov
pushf
fistpll
lods
mov
out
push
ja
in
fldl
shr
ljmp
xchg
ljmp
pop
outsl
and
clc
push
mov
ljmp
cli
decl
cli
aas
sbb
xchg
sbb
mov
orb
xchg
cmc
xchg
shrb
fs
add
dec
stos
fadds
mov
mov
push
out
or
incl
xor
jnp
scas
xchg
pop
imul
mul
mov
ljmp
sub
movsb
sarb
jns
fidivs
fwait
js
repz
icebp
fwait
pop
into
aaa
cmp
popf
out
sbb
jmp
sbb
cmp
stc
stos
mov
idiv
sbb
in
enter
out
mov
pusha
dec
jecxz
andb
fsubrp
lea
ljmp
scas
cli
fnstsw
or
push
data16
lcall
xor
adc
add
fsubl
std
scas
int3
lods
or
xor
cmp
jge
sub
lret
and
adc
test
push
cmp
movsb
sub
mulb
xor
mov
ljmp
pushf
scas
jle
fcmovnu
cld
sarb
out
ret
daa
inc
iret
sub
pop
add
repz
pop
clc
or
push
dec
scas
loope
ljmp
addb
jnp
push
jge
lds
add
jbe
cli
adc
pop
cmp
ljmp
nop
mov
sbb
into
popf
inc
loop
xor
cmp
negl
ljmp
or
in
xchg
fwait
xchg
mov
in
cmp
push
outsl
or
je
stos
adc
jmp
push
lcall
cmp
dec
mov
sbb
hlt
shl
out
sub
add
or
faddl
sbb
clc
push
movsl
adc
sbbl
push
and
pop
add
jbe
inc
insl
pop
fists
incl
in
xchg
mov
outsl
push
out
lods
mov
out
and
adc
add
and
in
adc
push
nop
pushl
jge
cmc
xchg
pop
mov
outsb
xchg
jae
lods
add
fwait
mov
in
xrelease
mov
decl
pop
ss
nop
jne
roll
dec
sbb
inc
out
je
sub
call
and
out
fidivs
rcr
xchg
pop
in
outsb
ror
lds
ljmp
out
imul
adc
lret
movsl
addr16
lea
lahf
mov
mov
dec
and
lea
jge
pop
test
sbb
push
out
inc
int3
int
aaa
cld
lahf
sahf
adc
mov
push
das
cs
sub
inc
aad
mov
mov
scas
or
dec
ficoml
adc
sbb
incb
inc
pusha
mov
fldenv
sbb
ss
xchg
mov
push
sbb
xlat
aaa
mov
aam
sti
mov
mov
pushf
mov
mul
rorb
call
push
int
inc
repnz
jns
call
add
mov
jecxz
lret
in
into
adc
push
push
daa
out
out
shrb
popf
cmp
pop
ja
loopne
pusha
mov
fstpl
sbb
lods
or
fadd
sbb
pop
testl
fcomp
outsb
scas
clc
fisttps
jp
sbb
out
movsb
movsb
mov
jb
push
shlb
js
mov
jg
adc
stos
loopne
jo
pop
sbb
or
jecxz
incl
sbb
dec
push
in
add
jne
push
xchg
lods
out
adc
imul
jg
pushl
enter
sti
js
inc
dec
mov
iret
add
jmp
xor
xlat
js
pop
inc
fildll
push
cmp
cmp
pop
mov
xlat
call
mov
shll
mov
pop
hlt
rcrl
outsl
add
inc
lods
jo
adc
jle
leave
cmpl
mov
aaa
insb
push
fstps
in
lcall
mov
cmp
or
mov
lahf
add
pushl
sub
add
mov
icebp
push
mov
jle
jne
xchg
dec
cli
xchg
enter
incl
adc
out
mov
lret
jnp
loop
mov
imul
inc
mov
push
outsl
mov
loop
mov
push
xor
mov
jbe
pop
js
cmc
cltd
dec
sub
ret
inc
in
pop
mov
or
push
mov
mov
outsb
dec
mov
dec
out
pop
add
out
je
test
imul
dec
ss
mov
jns
push
mov
push
xchg
in
decl
pushf
aaa
xor
dec
push
cmp
sub
mov
stos
xchg
lock
ficompl
dec
push
mov
sbbb
mov
sti
add
dec
or
std
test
ret
and
inc
cwtl
fisubrl
sub
loop
xchg
add
pushl
pop
cwtl
mov
ja
xlat
sbb
call
movsl
push
jae
fimuls
decl
hlt
repnz
push
incb
out
call
mov
add
or
pop
stos
sbbl
ds
mov
rcrb
jmp
ffreep
adc
sbb
outsb
sbb
pop
pop
dec
ljmp
adc
mov
loopne
ss
or
hlt
fcmovnbe
jle
fwait
lcall
lock
mov
push
leave
lea
sub
adc
mov
lret
or
jmp
rcrb
cmpsl
jmp
popf
sbb
mov
jno
lret
cmp
ror
mov
int3
nop
mov
out
pop
cmc
stc
cld
pop
rcr
jle
sub
jnp
lahf
cmpsb
xor
mov
push
jg
mov
les
jmp
sub
mov
or
ret
lcallw
jbe
push
rclb
call
adcb
int
dec
jo
mov
mov
add
add
das
xchg
ds
pusha
das
sbb
jg
push
jg
loope
mov
cmpsb
clc
ds
daa
cli
xchg
xor
push
pop
fs
out
inc
jmp
pushl
sar
nop
sar
pushf
ljmp
aam
jmp
out
enter
cmp
cmp
mov
cli
fcmovu
mov
cld
loope
dec
mov
xchg
popa
or
fldenv
decl
and
mov
push
fimull
negb
jge
cmp
cltd
aam
add
lret
in
lods
insl
lcall
cmp
call
jo
lods
stc
jl
inc
adc
or
jnp
push
pop
mov
hlt
out
mov
cld
pushl
jb
mov
int3
fbld
lahf
pop
push
incl
inc
pop
mov
clc
xchg
or
call
dec
jb
out
pop
push
push
mov
lcall
mov
dec
ret
es
call
sub
fisttps
pop
mov
insl
dec
or
jb
lret
rcl
addr16
inc
inc
fs
sahf
mov
mov
mov
mov
dec
lcall
rcr
xchg
and
clc
dec
rorb
mov
lods
loope
ds
jno
jns
fildl
cmp
fsubl
aad
xor
in
jl
cmp
pop
jg
or
mov
xchg
int
js
mov
lcall
inc
push
ret
jle
dec
fs
add
decl
scas
out
pop
sub
adc
xor
mov
imul
cli
push
push
mov
lcall
mov
decl
mov
fucomp
and
fnstsw
jbe
ficoml
and
jg
ficoml
stos
dec
or
and
push
les
in
pop
incb
mov
lahf
shr
mov
call
ret
cltd
mov
adc
mov
cmp
adc
inc
or
decl
mov
nop
mov
add
xchg
pop
aas
lcall
mov
orl
xor
pop
add
and
cmc
mov
cmp
stos
or
pop
xor
fwait
lcall
ljmp
inc
repz
ret
jae
inc
ja
fidivl
adc
gs
test
pushl
nop
ja
sbb
inc
and
xchg
stc
inc
fldenv
cmp
addr16
test
and
inc
xor
in
aad
sbb
push
and
sub
lods
push
xlat
mov
dec
lcall
jg
mov
mov
cmpsb
rclb
mov
int3
mov
testl
inc
inc
xlat
dec
mov
jmp
and
cmp
lods
push
scas
ljmp
out
mov
mov
cmp
xchg
ss
cmp
pushl
lock
lret
es
popf
ficompl
jecxz
call
cmp
mov
or
loopne
mov
lcall
sahf
cmpsl
test
add
leave
or
jmp
push
and
inc
add
fsub
in
icebp
push
jg
incl
shrb
pop
cmpsl
or
in
bound
mov
fcompl
jne
dec
fdiv
addl
clc
repz
stos
mov
xchg
jmp
lods
mov
push
movsl
das
jmp
stos
fstpl
out
xchg
mov
add
rcll
and
call
insl
or
aad
push
jne
orb
test
xor
mov
pushl
std
add
out
adc
pop
push
dec
push
leave
loopne
inc
jg
lret
repz
out
fwait
dec
inc
jo
pushf
or
push
push
ret
lea
and
decl
jg
xor
in
inc
cltd
repz
mov
cltd
out
adc
daa
xchg
leave
sar
inc
movsl
add
mov
leave
jmp
bound
les
ss
mov
dec
jnp
pushl
ljmp
leave
mov
test
add
shll
sbb
sti
arpl
shlb
decl
adc
cmpb
jno
push
cmp
stc
lcall
mov
stos
inc
mov
loope
push
sub
test
mov
idiv
lcall
outsb
sub
dec
repnz
insl
test
pop
mov
icebp
push
fyl2xp1
or
xorb
cwtl
sar
pushl
sbb
fs
and
bound
stc
xor
out
mov
mov
xor
mov
xlat
shlb
push
pushl
aad
push
add
or
lods
idivl
cwtl
xchg
call
sub
test
adc
call
call
jnp
jle
and
and
jge
enter
jae
call
push
xor
pop
mov
flds
mov
popa
lea
int
sub
in
decl
ljmp
icebp
iret
test
cmpsl
shrl
pusha
ret
fisttps
das
dec
out
xchg
cmp
test
loop
inc
in
cltd
inc
mov
aaa
jecxz
cmpl
add
iret
nop
sbb
push
vmulsd
add
mov
jmp
adc
adc
xor
scas
test
xor
or
push
or
cli
rcl
mov
iret
jge
add
lods
dec
jns
nop
je
cmp
out
inc
div
pushf
ss
movsl
ret
and
sbb
and
insl
pop
xchg
loopne
xor
mov
outsb
scas
pop
sar
clc
jmp
adc
inc
dec
pop
pop
cmpsb
test
cltd
fdivl
add
mov
pop
pop
mov
pop
pop
stc
adc
jge
test
mov
jb
xorb
adc
mov
outsl
dec
sbb
out
adcb
filds
shrb
cltd
jge
test
jbe
jg
lods
outsb
es
dec
aad
in
fwait
xchg
or
push
mov
jmp
adc
leave
in
aas
aaa
pop
dec
rclb
popf
pushf
sahf
in
and
mov
sub
mov
cs
add
jbe
dec
sbb
cmp
push
or
inc
ljmp
or
stc
and
lret
test
insl
nop
fisttpll
into
aad
or
add
pushl
jle
adc
ret
imulb
jmp
adc
push
jl
sub
add
stos
nop
sub
lods
xchg
dec
push
xor
cmp
aad
addr16
jmp
repnz
mov
jl
inc
out
pop
cmc
jmp
sbb
jb
sub
push
adc
ret
xlat
xchg
cmp
stc
or
cmp
and
jg
add
xlat
add
pop
and
fcoml
mov
bound
cmp
cmpsb
sahf
test
ret
or
inc
lods
xor
test
add
and
xor
cmp
clc
leave
sub
push
xchg
orb
xor
jmp
out
jl
lock
hlt
stos
xchg
jo
dec
scas
adc
push
data16
shl
and
mov
arpl
push
xchg
es
mov
mov
xchg
lock
je
inc
cmc
es
mov
repz
mov
cltd
push
pop
pop
ss
mov
sub
push
sub
or
sbb
in
pop
outsl
add
adc
push
into
push
incl
dec
cmpsl
jecxz
shll
inc
mov
adc
xor
xorl
push
js
mov
fists
sbb
pushl
inc
cmp
fwait
xchg
and
cmp
mov
add
or
loope
lods
lods
insb
call
loopne
jno
js
inc
lods
mov
in
divl
jne
fcmovbe
lds
jg
call
sbb
fistl
dec
lea
fdivr
push
mov
and
call
fdivs
rorl
sbb
aad
ror
push
gs
cwtl
lods
loope
pop
test
repz
fcomip
jmp
cmp
je
sub
mov
gs
movsb
mov
jmp
pop
inc
mov
scas
adcl
pushf
cmp
adc
jecxz
xor
mov
add
pop
incl
or
aaa
jo
mov
lret
das
addr16
mov
push
ljmp
dec
stc
test
mov
xor
xor
in
js
frstor
push
adc
in
mov
or
adc
push
aad
lock
xor
dec
cmp
sarb
call
ror
pushf
cmp
mov
jg
lds
or
pushl
pop
mov
mov
jo
repnz
inc
cmp
adc
jmp
decl
imul
fsubr
lahf
frstor
subl
push
scas
shll
jle
cmp
decl
pop
xchg
mov
ds
jg
sub
mov
lahf
inc
lea
cmp
adc
decl
mov
or
repnz
pushf
xorb
xchg
popf
jp
inc
hlt
mov
mov
testl
mov
push
clc
ljmp
out
mov
std
fnstcw
push
outsl
dec
mov
pop
decl
pop
dec
add
inc
push
pop
push
push
loope
or
xchg
sahf
std
aas
xchg
pushf
pop
cmc
cs
call
cld
call
lods
cmp
sbbl
xor
mov
sar
incl
xchg
bound
cltd
mov
dec
mov
xchg
mov
das
mov
jg
insl
into
imul
cltd
push
cltd
jo
mov
ficoms
sub
add
cmp
call
dec
jbe
in
dec
in
test
incl
jb
lcall
sbb
faddp
push
adc
je
add
icebp
dec
cltd
push
xchg
push
lods
xor
mov
pop
les
sbb
ljmp
pop
aas
lods
inc
sub
sub
fisttpll
lret
sar
fildll
outsl
sti
or
pop
ret
jl
call
push
shr
jne
dec
jg
hlt
dec
mov
nop
cld
in
insb
jmp
mov
aas
sbbb
cmp
into
and
inc
push
and
mov
push
aas
adc
push
js
outsl
fiaddl
out
adc
aam
push
pop
mov
jae
push
sahf
push
cltd
or
repz
sbb
sar
js
sti
jg
popf
pop
fs
cmpsb
pop
out
jns
repnz
clc
adc
sub
cmpsb
arpl
shll
int3
mov
inc
loopne
adc
lahf
in
pop
cmc
incl
jno
pop
bound
into
add
inc
stc
push
fscale
cmp
lahf
add
sti
insb
clc
mov
adc
and
sbb
sbb
es
push
pop
push
jg
and
mov
daa
push
xor
mov
ljmp
sbb
in
pop
stos
out
sti
cmpsb
sbb
mov
add
pushl
xchg
sbb
lods
adc
cmp
pop
xor
xlat
popa
js
insb
cmp
ja
das
xor
mov
ljmp
jbe
sub
adc
sub
or
pop
push
jge
adc
jb
lret
ljmp
adc
mov
sub
sub
sbb
push
mov
fdivs
jle
pushl
sbb
jecxz
aas
xchg
imul
push
push
mov
mull
cwtl
paddsb
pop
std
pushl
mov
inc
imul
pushf
aam
jnp
pusha
push
xchg
xor
pop
outsl
cmp
jns
xchg
jbe
std
fisubs
mov
lret
sbb
mov
pop
xor
or
call
push
pop
mov
jno
sub
mov
sub
lcall
sbb
lds
push
xor
mov
adc
pop
xchg
call
add
cmp
andl
nop
shlb
push
add
jb
mov
cltd
dec
jmp
mov
cltd
out
adc
cmp
and
andb
adc
push
jbe
lret
mov
ljmp
shrb
jmp
sbb
adc
rcrl
push
adc
pushl
mov
mov
jno
or
dec
popl
xlat
xchg
mov
mov
popf
in
xchg
ljmp
push
mov
sbb
rcr
data16
jnp
and
jno
ljmp
or
rcrb
insl
mov
mov
xor
fnstsw
inc
lcall
ljmp
in
jecxz
dec
jle
jno
lret
outsb
lret
rorl
or
ljmp
call
lods
push
mov
ja
jbe
cld
xchg
inc
shlb
mov
mov
mov
fimull
aam
xlat
rorl
fisttpll
jg
jle
xchg
pop
je
dec
jne
dec
jl
lds
test
loop
push
add
or
scas
sti
fstpt
jmp
dec
cs
call
push
test
push
inc
into
add
aaa
rcrl
or
jg
push
cltd
dec
mov
test
nop
or
inc
pushl
test
and
int
xchg
arpl
rolb
xchg
sbb
clc
push
jl
add
dec
popa
adc
push
lret
test
iret
or
or
fistpl
lret
lods
inc
lods
or
mov
lcall
pop
test
jno
inc
decb
cltd
les
mov
inc
mov
call
xchg
lcall
and
push
sub
aam
movsl
daa
push
add
inc
mov
fimuls
mov
mov
pop
push
push
pop
cmp
xchg
out
mov
mov
ss
mov
fsubrl
ljmp
push
push
inc
loop
insb
lret
pop
add
cmpsb
xchg
pop
insb
sbbb
call
dec
adc
dec
das
inc
aam
test
mov
addr16
mov
jns
mov
adc
icebp
adc
out
sbb
ss
jg
sub
inc
loopne
mov
add
xor
rorl
mov
cltd
lock
ljmp
test
jge
push
loopne
cmp
sbb
mov
jne
in
in
sti
xchg
mov
sub
decl
sbb
ljmp
jae
adc
push
cmp
mov
dec
out
jns
cs
fidivs
push
mov
in
push
sti
push
jmp
outsl
pushf
inc
xor
cs
lcall
mov
outsl
repnz
int3
add
addr16
xlat
mov
xchg
sub
aam
loope
inc
jge
inc
lods
push
sbb
in
pop
pop
rcrl
in
ret
xor
sbbl
jl
xchg
push
add
mov
data16
mov
stos
pop
outsb
cltd
xchg
lcall
data16
add
mov
fcomip
pop
xchg
lret
sbb
std
sti
out
imul
mov
cmpsb
fdivl
nop
out
ret
ljmp
lock
inc
push
jp
jle
jge
xor
jmp
sahf
push
or
xchg
push
imul
add
loope
xor
or
adc
push
inc
push
mov
and
sbb
pop
call
decl
push
xor
mov
xor
lods
cmp
dec
ds
adc
mov
out
cli
es
fdivl
lret
add
mov
pop
fidivs
ret
lds
idiv
aad
fistps
in
aas
cmp
out
hlt
data16
add
call
pop
popf
push
lret
mov
shl
jg
mov
scas
push
ljmp
mov
std
mov
pop
xor
push
clc
inc
cmp
lret
repz
dec
lock
mov
inc
xchg
movsl
dec
cli
xor
fwait
adc
mov
cwtl
sub
jg
dec
mov
sub
iret
cmpsb
jnp
cmp
dec
inc
in
pop
fsubrl
ljmp
fucom
sub
in
mov
push
adc
pop
cmp
mov
pop
hlt
insb
rorb
inc
das
daa
dec
inc
adc
sub
push
arpl
rolb
mov
out
pop
pextrw
call
adc
data16
fwait
sbb
jmp
push
xor
mov
mov
pop
addb
andb
data16
mov
or
ret
mov
jns
mov
cmp
mov
repz
xchg
js
in
not
fisubrs
dec
dec
or
cmp
mov
notb
repz
mov
pop
pop
sbb
int3
popa
mov
xchg
rclb
pop
es
call
dec
xor
rcrb
pop
or
pop
ret
mov
int
call
push
mov
push
mov
lahf
jb
mov
add
lock
leave
into
clc
and
xchg
push
push
sahf
rcll
sub
call
adc
lret
jns
pop
loopne
push
in
mov
test
sbb
jne
es
loope
scas
adc
and
incl
xor
call
jo
or
es
push
jno
iret
xchg
ss
mov
fcomip
stc
xor
sbb
add
dec
sarl
push
aaa
pop
aad
jne
jl
lock
push
mov
sub
inc
orl
test
incb
mov
adc
ljmp
mov
add
lock
jmp
cs
lds
call
ljmp
jmp
sahf
xor
add
sbb
mov
jg
jg
mov
repz
fadds
mov
lods
mov
cmc
jns
pop
es
aas
je
bswap
fs
pop
push
int
xor
push
into
pop
ret
mov
dec
sub
pop
xorb
or
fildll
jg
xor
lcall
decl
icebp
cld
leave
inc
in
dec
xor
outsb
fcoml
xchg
cmp
ja
push
dec
int3
lods
jle
adc
adc
cmp
inc
sub
push
test
jnp
mov
lcall
dec
pushf
lods
pop
xchg
fstl
push
outsb
sub
hlt
mull
aaa
pop
push
hlt
stc
clc
incl
push
ret
jmp
cwtl
push
into
xchg
sbb
or
jae
mov
adc
int
cld
lcall
or
mov
enter
jge
sbb
sub
in
movb
mov
mov
mov
push
les
and
jmp
incl
arpl
mov
xlat
sbb
jno
pop
pop
jbe
int3
jp
call
adc
jmp
cli
inc
shll
mov
xchg
lret
movsl
out
ja
ljmp
rcrl
mov
push
fwait
xchg
mov
cmp
mov
adc
test
lcall
push
mov
outsl
cmpsb
clc
outsb
pop
xchg
testl
aaa
add
decl
pop
mov
pop
jae
frstor
dec
aas
cli
jg
dec
or
pusha
mov
cld
push
mov
xchg
je
xchg
loope
outsb
pop
call
cltd
and
icebp
notb
clc
es
pop
and
outsl
scas
aam
aad
pop
xor
ljmp
add
sub
ss
dec
adc
imul
rcr
stc
inc
lcall
or
lock
xchg
add
mov
insl
mov
ljmp
stos
dec
int3
testl
cs
out
mov
in
jl
aad
pop
fnstcw
jmp
lods
jp
lret
cmpsl
mov
sub
xchg
hlt
cmp
fwait
add
push
push
repz
loopne
sarb
jmp
dec
insb
insb
cmpsb
pop
loope
jnp
leave
insb
xchg
dec
lods
push
mov
push
cwtl
cmp
cmp
mov
xchg
cmp
push
xchg
notl
scas
stos
pusha
xor
cmp
dec
das
xlat
dec
js
adc
add
jmp
mov
cld
sahf
mov
xchg
jne
out
test
mov
loop
mov
ss
addr16
in
mov
xchg
and
test
xchg
cltd
mov
xchg
adc
xor
jmp
aam
mov
les
orb
sti
cmp
lds
ja
xchg
adc
negl
call
jmp
adc
mov
or
dec
insl
loope
push
mov
jne
mov
rcr
incl
cmp
mov
jl
je
pusha
fcmovnbe
mov
cmpl
hlt
jg
call
push
test
dec
data16
mov
xchg
fidivrl
loop
and
ss
push
mov
lcall
sbb
shlb
frstor
repz
stc
mov
xor
push
dec
push
xchg
xchg
mov
jge
jmp
or
dec
mov
cmpsl
add
adc
cmpsb
daa
insl
das
mov
and
imul
or
bound
and
or
mov
clc
and
insl
or
test
push
subb
in
fwait
scas
push
mov
mov
adc
push
pop
icebp
fwait
jecxz
pop
out
mov
dec
cltd
lods
mov
pop
xor
add
mov
pop
cmp
or
pop
out
jecxz
and
ds
lcall
ret
fisubrs
mov
jecxz
cmp
sahf
loope
jmp
cmc
inc
xlat
repnz
cmc
sub
les
sbb
lds
inc
int3
jmp
jno,pn
rolb
jl
sbb
cli
add
clc
mov
int
mov
enter
inc
push
pop
jb
jmp
add
icebp
inc
incl
sbb
int3
pop
pop
xchg
inc
icebp
fbstp
inc
jge
and
decl
cmc
xorl
lret
pushf
in
inc
xchg
stos
iret
dec
popa
jge
xor
xor
mov
jg
lcall
data16
xchg
sbb
mov
repz
jmp
ret
out
scas
add
dec
push
pop
add
adc
je
in
and
mov
sbb
outsl
aas
cmp
xor
stos
and
int3
loope
adc
dec
stos
pushl
mov
mov
rorb
stos
add
xor
test
sbb
adc
xor
or
decl
lea
jge
or
jnp
and
insl
mov
jg
js
mov
out
insl
out
inc
dec
addl
stos
lcall
jmp
mov
sbb
es
sub
lahf
and
jle
push
pop
sbb
jle
pop
decl
jmp
mov
shl
fadd
sub
inc
out
out
aad
cld
icebp
add
push
and
cmp
jmp
sub
adc
xorb
andl
fisttpll
mov
jecxz
enter
addr16
inc
movsb
popa
shll
xor
rclb
inc
or
pushl
shrb
adc
inc
fisttpll
jns
push
pop
mov
adc
jmp
mov
scas
ljmp
shll
mov
loop
dec
aaa
cld
jmp
push
adc
xlat
ret
cld
lods
fwait
pop
bnd
add
data16
loope
test
movsl
jo
aas
mov
fiaddl
mov
or
xchg
pop
sahf
jnp
gs
mov
call
stc
dec
inc
dec
rcrb
adc
aad
andl
outsb
ja
jecxz
and
push
adc
push
push
clc
lcall
in
pop
insb
flds
push
daa
inc
add
jmp
stos
inc
mov
cmpsb
mov
loopne
or
pop
out
or
call
sub
xchg
dec
mov
aaa
sbb
lods
call
icebp
xchg
in
popf
cmp
test
sti
jg
fldenv
rol
push
xchg
or
fdivrl
loop
xchg
xlat
call
ljmp
jnp
notl
push
fidivrl
push
mov
and
sahf
pop
jno
pop
nop
push
gs
mov
incl
frstor
movsl
dec
adcb
pop
pop
lahf
mov
jle
es
call
mov
ljmp
leave
in
xchg
mov
sti
pop
xor
add
lret
in
clc
adc
lcall
xchg
or
ja
push
jle
clc
push
xor
insl
cld
or
iret
push
ret
sub
or
scas
clc
addr16
addr16
outsb
es
arpl
test
ds
dec
xchg
jl
movsl
daa
fstl
or
ret
dec
fs
fistl
pop
and
pop
outsb
cs
mov
xor
push
and
adc
repnz
push
imul
mov
incl
jae
test
loope
mov
mov
mov
lcall
jae
int
or
xor
imul
push
adc
mov
sub
mov
sbb
xor
imul
mov
decb
orl
out
bound
js
sbb
push
mov
mov
incl
dec
mov
pop
js
push
les
jo
outsl
pop
bound
sbb
lret
mov
or
mov
scas
insb
insl
cli
push
cmpsl
push
push
mov
pop
call
loopne
xor
and
test
pop
outsl
cmc
insl
pop
or
ja
ljmp
adc
cmp
cltd
loopew
cmp
cltd
mov
jg
mov
daa
hlt
rcl
push
stc
sub
mov
jge
sbb
mov
inc
xchg
mov
sti
clc
inc
jge
dec
jle
popf
clc
xchg
jbe
sti
clc
fnstsw
push
iret
loopne
test
aam
add
mov
pushl
jns
add
mov
mov
push
movsb
inc
or
arpl
call
sbb
rcrb
dec
pop
mov
stos
mov
mov
test
adc
mov
pop
sub
mov
adc
push
ss
xchg
icebp
jbe
mov
push
scas
out
mov
xchg
call
fwait
jno
push
xchg
out
jg
push
addb
cmp
mov
xchg
arpl
daa
je
xchg
pop
and
test
mov
movsb
sbbl
aaa
cmp
shlb
push
popf
pop
adc
inc
mov
pushl
push
fs
mov
aas
cmc
push
int3
arpl
cmp
mov
lcall
movsb
adc
ret
imul
repnz
jno
cli
and
imul
sti
mov
xlat
ja
jmp
insl
movsb
ficoms
fcoms
je
test
ret
xchg
jg
jg
mov
mov
loop
add
outsb
insb
repz
adc
std
fcomip
ljmp
fistps
movsl
inc
push
mov
out
test
clc
lods
add
mov
aaa
cmovo
test
roll
jne
inc
or
xchg
adc
pop
outsl
fmulp
repnz
cltd
outsl
lods
mov
jo
mov
mov
rorb
daa
and
pop
les
ret
fiadds
lcall
dec
mov
shll
or
add
test
pop
je
mov
xor
mov
jmp
mov
dec
pop
or
rorb
imul
fdiv
or
ds
jp
scas
pop
adcb
ret
int3
xchg
push
std
int
fadd
flds
mov
xlat
jae
ljmp
clc
sbb
adc
xchg
nop
xchg
xchg
cmp
and
ret
xor
movsb
test
addl
xlat
jge
popf
aad
popf
push
popf
and
incl
sbb
pop
scas
xchg
xor
outsl
fcompl
idiv
push
cmpsb
xchg
insl
sub
xor
test
into
dec
pop
xor
mov
lcall
frstor
sub
movl
call
insl
insl
xor
shrl
inc
addr16
sbb
xlat
xchg
rcrl
mov
ljmp
lcall
xchg
cwtl
data16
pusha
pop
jecxz
jge
jno
xor
cmp
jmp
or
bound
adc
cmp
sub
push
mov
inc
mov
jl
gs
jo
mov
cmp
sti
ljmp
jge
mov
inc
cltd
daa
es
dec
xor
and
rclb
jmp
pusha
inc
ret
cmp
inc
or
and
pop
jae
loop
orl
int
pop
arpl
incl
ss
xorl
outsl
dec
repz
mov
inc
xchg
adc
xchg
adc
xchg
mov
pop
in
lds
dec
or
repnz
outsb
push
orl
dec
repnz
incl
imul
dec
xchg
mov
mov
popf
call
inc
xchg
cmp
out
lods
ljmp
mov
clc
xor
xor
sarl
jns
cwtl
inc
or
push
sbb
sbb
mov
call
cs
daa
mov
jb
subb
cmp
mov
pop
cmp
cs
jge
incl
sub
mov
out
stos
sti
add
mov
mov
adc
add
inc
test
ljmp
ja
ja
xor
daa
jmp
scas
and
or
push
jmp
stos
xchg
inc
mov
sarb
inc
loope
cmp
mov
incl
ret
add
adc
test
mov
push
inc
mov
sub
pop
mov
jnp
sbb
adc
push
xor
movsl
push
mov
and
outsl
xchg
sbb
dec
js
dec
ficoml
lahf
js
xchg
mov
xor
mov
and
xchg
pop
mov
fmull
ret
pop
pop
repnz
add
das
mov
mov
das
jno
and
pop
cmp
lcall
cmpb
leave
mov
sarl
fisttps
nop
and
popa
inc
shlb
jle
sbb
movsl
push
dec
cmp
decl
out
test
ficoml
in
xchg
dec
inc
dec
pusha
pop
int
mov
lock
scas
fistps
and
test
shll
lahf
push
inc
pop
pop
stos
mov
incl
sbb
test
int3
push
mov
adc
add
push
dec
pop
pushf
push
mov
incl
adc
lock
xor
inc
test
jl
mov
fcomps
jg
push
lods
pop
pop
add
adc
aam
jmp
add
scas
outsl
loopne
call
sub
popl
fiaddl
xchg
mov
xchg
dec
ja
call
pushf
mov
ss
add
pop
scas
and
push
sub
ljmp
add
dec
mov
xchg
lods
xchg
and
mov
or
arpl
sbb
push
xor
ret
in
in
xor
leave
mov
movsl
fs
andl
inc
mov
mov
mov
xor
mov
inc
pop
dec
xchg
int
jbe
xorl
fcoml
mov
fs
mov
xor
pop
std
scas
cmp
jns
xor
insb
pusha
xchg
push
scas
es
xchg
pop
sbb
divb
gs
adc
call
mov
rorb
xchg
sub
sbb
adc
ljmp
scas
dec
ffreep
fst
lcall
fs
jno
cld
inc
insb
out
inc
xor
fwait
js
shll
das
and
jg
sbb
stc
jmp
jns
dec
sbb
xor
scas
mov
jge
lret
jecxz
call
pop
mov
add
iret
mov
and
fwait
imul
mov
sbb
add
js
lret
sbb
jmp
push
mov
sar
jg
decl
pop
lahf
sar
sarl
aad
jle
mov
addr16
cmp
dec
cmp
lds
cld
enter
dec
fsubrl
stos
cwtl
repnz
cmc
adc
or
outsl
clc
pushl
test
mov
and
xchg
hlt
call
out
mov
or
add
mov
mov
sub
lcall
jecxz
inc
inc
sub
push
xchg
dec
cmp
or
jno
adcl
adc
cmpb
cmpsb
xchg
xchg
mov
sbb
mov
jecxz
dec
mov
push
fdivs
fists
adc
lahf
imul
les
call
lret
xor
test
inc
pusha
lds
in
sahf
xchg
out
ljmp
ljmp
mov
mov
adc
shr
inc
pusha
fstl
mov
jg
lret
daa
dec
call
lods
cmp
cmp
mov
fcomps
add
in
scas
push
popf
das
jl
leave
in
jnp
jae
sahf
mov
roll
cld
xor
enter
jge
mov
mov
in
push
mov
outsb
out
inc
push
sti
pop
push
sub
cmp
pushl
sahf
adc
rcrl
xor
fsubr
and
add
jmp
inc
in
jp
xchg
add
dec
sub
mov
call
cwtl
mov
jg
lds
mov
lcall
into
jp
aaa
cmp
or
sbb
mov
scas
add
test
fsubs
pop
es
popf
cmp
cld
sarb
inc
jno
mov
mov
mov
mov
data16
js
fwait
mov
pop
jnp
jmp
pushl
mov
data16
jo
pop
jo
push
push
inc
repz
mov
inc
imul
dec
jno
xchg
mov
es
pop
dec
mov
and
pop
imul
inc
sbb
add
mov
cmp
or
xor
fcomip
jg
mov
clc
push
jne
mov
popf
push
adc
outsb
or
mov
stos
add
les
mov
xchg
or
jle
xchg
mov
mov
jg
sub
loopne
inc
sahf
jb
dec
mov
lock
shrb
nop
fcomip
inc
xchg
mov
scas
mov
and
push
jge
ja
ret
mov
aaa
loopne
add
inc
mov
sti
jp
adc
pop
xor
std
xorl
stc
push
pop
inc
lcall
lea
and
xchg
cmp
ljmp
jmp
jle
jmp
ss
lret
pop
push
mov
aam
sub
frstor
mov
lods
fstp
out
push
enter
lahf
cmpsb
pushf
jmp
daa
sub
ljmp
lods
sbb
pop
mov
scas
and
std
aad
push
test
mov
pushl
push
mov
dec
addr16
cli
xlat
lock
and
pop
push
jno
add
fwait
jmp
jg
incl
or
dec
sahf
xchg
loop
lret
xchg
arpl
mov
mov
aas
jg
dec
or
cld
daa
cmpsl
pop
mov
jbe
shrl
mov
pushl
mov
jecxz
cmp
push
sub
jle
mov
cli
ja
cmp
pop
push
pop
jp
xchg
icebp
ljmp
test
jbe
xchg
loopne
jg
icebp
rcrl
xchg
pop
xchg
aad
movsb
fstps
cli
out
and
sub
fcoms
jg
lahf
xchg
add
jo
inc
xor
and
xor
mov
mov
mov
or
dec
fcmovnbe
or
xor
xor
xchg
adc
ret
jmp
fdivrl
ja
in
mov
mov
jo
sub
mov
dec
adc
call
fidivs
mov
aad
mov
lret
lcallw
in
ljmp
flds
push
inc
fcmovnb
jno
subl
sub
cs
mov
push
setl
sarl
jmp
je
inc
fistpl
inc
or
dec
outsl
jmp
mov
mov
and
lcall
ror
and
cs
dec
aad
stc
clc
jno
test
ficomps
mov
jno
pop
imul
mov
ds
mov
inc
hlt
push
inc
fwait
inc
mov
into
sbb
arpl
sub
ljmp
cmp
in
push
mov
std
pop
movsl
test
add
daa
aad
xchg
vmovss
adc
divb
out
xchg
hlt
bound
int
fdivrs
mov
push
nop
jmp
stc
loope
pop
cli
stos
roll
mov
mov
mov
pushf
jg
scas
push
scas
leave
call
mov
gs
movsb
xor
daa
pop
xor
mov
push
adc
mov
jmp
mov
mulb
pop
incl
cld
cmp
test
mov
in
dec
push
dec
mov
add
xor
jg
fwait
jo
mov
les
and
test
xchg
inc
sti
cmp
mov
std
fadds
cmp
sbb
dec
mov
cmpsl
inc
out
scas
adc
adc
dec
pop
inc
mov
popa
cmp
sbb
cmc
mov
push
jecxz
or
movsl
in
jbe
pusha
mov
insb
ret
push
das
mov
add
scas
ret
sub
pop
adc
xchg
lahf
inc
subb
adc
adcb
movsb
cmp
fistps
insb
mov
sub
out
fisubrs
cmp
cmc
adc
cmp
inc
stos
jmp
jl
hlt
orl
jb
mov
sub
pushf
stos
cld
incl
stos
and
stc
ljmp
fs
call
test
jg
sub
xor
lds
mov
dec
fdivs
and
shll
xor
xor
mov
xor
fdivl
out
rcl
sti
in
int3
lahf
add
dec
cld
xchg
ljmp
stos
push
push
jae,pt
testb
mov
pushl
mov
popa
fsubr
cs
pushf
sahf
arpl
fisttpll
cmp
pushl
fsts
fisttpll
push
xor
push
sar
xchg
jge
mov
sub
jge
push
es
jmp
rorb
add
add
bound
cmp
mov
cld
sti
push
outsb
jg
loope
loope
sbb
mov
mov
jg
clc
pusha
mov
xor
pop
movsb
loope
in
mov
mov
mov
scas
or
and
decl
pop
add
dec
daa
and
jl
dec
nop
test
sbb
mov
call
jo
lock
sub
fwait
mov
shrb
sub
push
fdivrl
lret
cmp
fwait
loop
fs
insb
mov
lret
in
jno
pusha
repnz
in
inc
scas
in
adc
mov
cmp
mov
xlat
jno
aaa
sbb
inc
dec
cltd
leave
inc
stos
cs
jle
xchg
sub
inc
jmp
sbb
pop
mov
and
sahf
xchg
adc
call
xor
mov
jle
out
and
jbe
cs
xchg
iret
mov
inc
movsb
dec
les
testb
loopne
lock
push
pushf
test
addb
out
std
and
mov
or
dec
dec
lock
jnp
repz
cmp
shl
incl
in
arpl
arpl
add
or
jl
fisubrs
int3
mov
add
mov
add
add
leave
jno
insl
arpl
dec
mov
xlat
jg
jp
xor
test
cmpb
sbb
sub
stos
jecxz
pop
lods
add
in
mov
inc
mov
mov
push
or
jns
jb,pt
add
mov
push
mov
in
fisttps
pop
lock
test
out
cli
imul
xor
mov
mov
decl
cmpl
js
and
pop
in
negb
call
ljmp
dec
cmp
sub
jge
movsb
lea
loope
lods
add
push
push
jmp
pushl
lret
in
xchg
fmull
mov
mov
lret
es
adc
dec
aas
push
incl
mov
js
mov
mov
int3
sarl
adc
movsl
clc
mov
test
sbb
push
mov
xchg
loopne
fbstp
call
mov
incl
loop
add
adc
mov
ja
pop
ret
xor
jecxz
sbb
jge
stos
cmp
cmp
nop
xor
mov
dec
fadd
pop
jmp
hlt
sub
scas
push
push
lds
stc
movsl
xchg
ret
fwait
out
cli
out
lods
popf
mov
cli
fidivl
xor
xchg
fsubrs
lcall
cmpb
cwtl
mov
sub
jno
jmp
jb
aaa
push
mov
push
and
jae
or
adc
es
decl
nop
sbb
jo
jnp
dec
add
sbb
mov
pusha
cli
dec
repz
jge
mov
mov
dec
sbb
std
fnstsw
lds
add
add
push
mov
je
andl
int3
add
jns
jne
mov
mov
mov
jae
ljmp
mov
fidivs
or
rdmsr
out
dec
out
icebp
pop
add
in
mov
out
cli
fdivs
cmp
test
clc
je
movsb
push
out
cmovg
daa
dec
mov
inc
loopne
cmp
push
jle
xor
aas
or
call
xlat
cltd
jecxz
push
dec
inc
xlat
xor
daa
test
pop
pop
andb
jmp
cmp
mov
pop
and
inc
push
ljmp
xor
lea
insl
mov
call
in
aad
stc
loopne
mov
jle
push
bts
pop
out
dec
jbe
add
loope
call
jns
gs
pop
ret
adc
push
movsb
pop
cmp
dec
cmpl
jo
decl
jmp
stc
test
push
pop
mov
out
or
fadds
jle
dec
rorl
inc
pop
fdivrs
fldt
sbb
xchg
mov
xchg
mov
imul
and
mov
loop
xor
stos
mov
insb
and
ficomps
mov
adc
add
imul
shlb
xor
fiaddl
lcall
jmp
in
or
aam
mov
xchg
stc
cmpb
fcomi
adc
cmp
xchg
add
out
sar
inc
movsl
in
mov
js
imul
jb
jle
pop
cmp
inc
stos
cmp
andl
scas
sbb
add
inc
pop
jnp
imull
arpl
inc
stos
iret
xchg
dec
cmovle
xchg
shlb
jmp
ficompl
add
jg
add
jmp
jb
inc
pop
out
dec
popl
decl
test
aaa
xor
dec
enter
cwtl
push
call
insb
lret
fidivrs
addl
call
stos
cmpsb
mov
leave
rcrl
sti
lahf
and
das
clc
push
sbb
or
loope
int
cmpsb
es
lcall
jp
cmp
and
flds
dec
pop
fbld
adc
cmp
aaa
std
dec
xchg
sti
mov
lods
jmp
icebp
test
cmp
hlt
arpl
es
outsb
pop
rclb
add
xor
lahf
pop
xor
repnz
pop
lcall
ljmp
mov
mov
lods
jle
iret
cld
cltd
cmpsb
xor
rorl
movsb
mov
and
lods
in
jg
xor
jno
ljmp
pop
bound
xor
sbb
into
rcrb
jecxz
inc
fnstcw
ficoms
loope
jns
jp
idiv
call
adc
jo
es
rcr
arpl
adc
cmp
xchg
out
and
incl
mov
clc
dec
pop
pop
sbb
aam
lods
dec
stc
iret
aaa
loopne
cmp
decl
shr
push
and
dec
paddusw
sub
inc
pop
cli
gs
dec
push
mov
mov
je
es
add
push
sbb
into
into
popa
xchg
pop
mov
mov
xchg
hlt
mov
ljmp
cmp
cltd
aaa
xlat
lods
or
fwait
in
sbb
pushf
and
fdivrl
jb,pt
clc
outsb
push
loopne
jle
push
or
call
push
xchg
out
or
pop
or
adc
jle
mov
cmp
decl
pusha
mov
push
shll
inc
repz
xor
decl
aam
es
aas
cmp
dec
jno
dec
inc
add
insb
adc
cs
or
mov
call
ret
bound
inc
pop
push
ss
inc
inc
add
jg
aam
pop
rorb
insl
lods
js
sub
adc
jae
pop
ljmp
enter
dec
adc
loopne
add
push
mov
rorb
lcall
into
outsl
pop
test
dec
add
mov
fildll
dec
cs
cmp
sub
push
loop
jmp
cli
adc
jp
or
fcompl
mov
and
mov
and
mov
imul
push
mov
orl
xchg
dec
sub
add
adc
call
ret
and
call
add
mov
cld
ljmp
sahf
mov
cmp
fs
jne
pop
pop
push
aaa
testb
call
rolb
mov
pop
ds
lock
int3
adc
lcall
jmp
subb
xchg
jno
outsb
dec
cmp
push
ret
jns
add
test
add
loope
incl
lahf
mov
mov
rclb
jl
lock
iret
dec
jecxz
pop
cmpsl
mov
ljmp
or
sbb
aam
pushf
xchg
sub
out
jb
xlat
aam
stos
push
stc
cmpsb
mov
clc
dec
adc
imul
mov
fidivs
sub
dec
or
add
pop
adc
ret
ja
inc
int
call
cmp
das
jmp
in
iret
push
int3
or
cmc
vshufps
int
out
ljmp
call
mov
adc
das
cmp
icebp
adc
sahf
jns
push
rclb
decl
mov
jle
adc
sahf
adc
lods
js
in
or
mov
test
dec
incl
addr16
idivl
fwait
test
mov
je
fmuls
sub
incl
test
enter
and
cmpsl
adc
ss
lret
add
adc
dec
or
xor
lcall
jbe
js
jle
pop
mov
iret
mov
inc
sbb
mov
xchg
add
call
test
or
add
push
cmpsb
jne
cld
sbb
mov
in
out
or
mov
jg
loopne
lock
lret
pop
out
pusha
in
loop
ds
incb
adc
lock
mov
std
mov
and
in
mov
mov
movsl
pop
dec
or
add
je
ljmp
pop
jl
repnz
sub
decb
fldenv
icebp
jns
lret
clc
adc
pop
and
das
clc
decl
jnp
rcr
mov
clc
sbb
dec
jbe
push
and
mov
sub
fdivrs
sbb
fstp
or
adc
mov
mov
decl
mov
int3
cmp
das
nop
xorl
loope
jle
sub
test
ljmp
lea
imul
xor
inc
adc
cld
mov
mov
sub
incl
dec
sub
xchg
ja
out
in
insb
and
jns
xchg
push
pop
sbb
xchg
xor
and
pushl
int
dec
scas
mov
mov
push
jne
sbb
fwait
inc
stc
push
cmpsl
das
loope
cwtl
sbb
jb
std
call
inc
jae
shl
in
fwait
add
mov
pop
popf
cmp
lret
loope
pushl
sub
push
xor
outsb
daa
roll
xor
sub
leave
ret
push
cli
mov
inc
fucomp
ljmp
out
sub
into
lret
popa
mov
ds
fisubrl
out
scas
pop
out
ja
push
gs
pop
decl
fldl
mov
and
pop
inc
mov
call
outsb
mov
insb
dec
mov
nop
shll
shll
cwtl
daa
mov
mov
stos
add
call
cld
ss
push
outsb
add
je
mov
lea
aas
leave
hlt
aas
inc
xchg
inc
add
incl
xchg
into
fdivs
cmp
inc
aaa
lods
insb
loopne
sahf
mov
mov
jle
inc
dec
ljmp
xchg
jge
cmp
sti
jns
lds
xor
jne
subl
mov
ljmp
sub
jecxz
dec
adc
xlat
repz
stos
mov
popa
push
iret
out
dec
inc
scas
sub
incl
out
mov
aam
xchg
out
xchg
pop
and
inc
and
mov
lret
aas
adc
data16
sahf
incl
outsl
outsb
xor
fisttpll
es
sti
aaa
bound
hlt
pushf
iret
outsb
or
repz
cld
out
sub
push
mov
ss
jno
das
push
stos
cltd
jne
stos
and
in
es
outsl
and
ja
lds
iret
scas
fdivrp
incl
dec
ja
repz
mov
nop
pop
or
scas
inc
lret
ss
lds
add
incl
mov
xchg
loop
add
rcl
mov
jg
repz
ljmp
stos
lods
int
mov
fisttpll
bnd
cmp
decl
add
pop
fsubrs
aas
add
or
hlt
mov
shrb
fwait
sub
and
arpl
cwtl
test
pop
mov
cs
ljmp
sbb
popa
and
mov
popa
or
or
hlt
mov
hlt
push
xor
es
push
sahf
sti
mov
push
xorl
xchg
sub
rcrl
dec
push
incl
lret
and
and
ucomiss
and
rolb
in
xchg
mov
in
shll
mov
cmc
jmp
jmp
mov
xchg
aaa
jne
jmp
shl
jbe
adc
cltd
adc
mov
inc
inc
xchg
xchg
aad
jmp
test
aam
xor
icebp
ret
pushf
pusha
xor
add
loope
fcmovu
div
cmpsb
andl
lcall
xchg
and
pop
jae
cld
stos
bound
sub
inc
mov
lret
clc
mov
sub
push
ss
sbb
pop
cld
aas
repnz
sbb
push
lret
imul
in
addb
inc
lock
call
lcall
mov
sbb
xor
mov
xor
and
fcomip
jmp
scas
fcompl
and
and
and
repnz
pop
inc
add
out
ljmp
xor
and
inc
lods
push
push
sarl
ret
imul
movsl
and
hlt
fdivr
pushl
sbb
or
rcl
sar
inc
or
add
jge
divb
xchg
lcall
movsb
jae
dec
add
fnstcw
pop
mov
jg
icebp
imul
dec
in
jge
loope
inc
jb
inc
out
outsb
psrld
call
lods
xor
xchg
repnz
imul
addr16
or
int3
add
jnp
cld
mov
lock
inc
test
xchg
loope
pop
ljmp
dec
sarb
into
adc
ror
jg
outsb
aam
incl
shl
sub
xchg
mov
das
in
stos
jnp
es
mov
cwtl
test
mov
mov
adc
push
inc
or
fdivp
cmp
pop
inc
int
fcomip
imul
imul
cli
jmp
ja
cmp
add
jge
sub
sbb
je
adc
imul
call
aam
mov
outsl
mov
gs
adc
xchg
clc
dec
xor
cmpsl
pop
or
clc
movsb
ja
ljmp
mov
aad
cmc
sub
repnz
test
or
jecxz
repnz
les
notl
clc
incl
aas
xor
adc
cmp
cmp
pop
outsb
sub
popa
addr16
sbb
adc
out
adc
add
pusha
jo
mov
rep
pop
ret
mov
jl
jg
fnstenv
ret
mov
xor
push
into
in
xchg
movsb
fcmovbe
cmc
mov
mov
mov
stos
aam
jae
mov
inc
movl
dec
cmp
ljmp
clc
ljmp
fistl
adc
add
dec
pop
sbb
aam
stos
stos
or
adc
add
lods
jge
lods
ljmp
cmpsb
mov
adc
clc
jmp
xchg
inc
xchg
lods
pop
mov
xor
test
cltd
nop
ljmp
divl
out
push
dec
popf
and
mov
mov
mov
es
jmp
in
dec
movsl
outsb
or
ljmp
mov
cmp
mul
xor
jno
sti
mov
or
fisubrs
sahf
ljmp
loopne
mov
adc
js
xchg
xchg
test
or
lret
add
push
jnp
xchg
sbb
push
into
insb
dec
pop
add
xor
jo
push
dec
mov
int3
jb
cli
in
out
clc
pop
mov
add
ret
inc
sub
and
sub
adc
dec
subl
inc
and
pop
test
cwtl
mov
scas
and
leave
add
loop
loopne
jmp
cmp
outsl
inc
inc
cltd
lock
mov
out
imul
pop
jmp
dec
lock
push
mov
mov
nop
loopne
inc
xor
loopne
push
cmpl
inc
push
or
sbb
fs
fstps
repnz
in
jge
mov
mov
incl
icebp
das
push
aas
xchg
cli
mov
dec
testb
xchg
outsb
mov
mov
test
cli
add
call
cmp
mov
inc
je
xchg
add
pop
insl
dec
roll
iret
loope
inc
ljmp
fldt
lcall
push
xchg
imull
xchg
jmp
clc
push
lcall
or
movsl
dec
inc
jnp
mov
mov
sub
fs
mov
fcmovnb
push
mov
ss
mov
lret
rorb
enter
jle
xchg
dec
into
cmpl
jle
jp
mov
xchg
scas
ja
cmpsb
pop
clc
mov
leave
mov
mov
std
insb
xchg
pusha
outsb
xor
cmp
imul
fs
ljmp
pushl
fcom
or
mov
jmp
call
jl
jg
call
dec
mov
jb
xor
add
pop
add
popa
lcall
jmp
repnz
insl
shrb
dec
xchg
fmuls
leave
sbb
fcompl
mov
addl
adc
xchg
jne
orb
jns,pn
fists
mov
call
or
mov
and
fmull
xor
xor
jns
mov
cli
call
std
test
icebp
xchg
sbb
lcall
int
sub
cmp
inc
sti
xchg
pop
push
out
push
mov
fidivrs
xor
es
test
popa
aas
xchg
fisttpl
jmp
add
gs
jns
pop
stos
mov
lds
pop
push
lret
sbb
incl
or
add
mov
push
in
pop
ja
pop
fildl
in
pop
dec
xchg
pop
inc
popa
fnsave
shl
adc
into
pop
mov
jnp
out
arpl
xor
loopne
leave
sbb
addr16
out
mov
and
push
out
aam
scas
and
incl
hlt
pop
cmpsb
inc
repz
popa
mov
mov
ret
shl
incl
fcmovnb
push
cmp
add
mov
push
dec
dec
testb
adc
lods
popf
imul
nop
in
in
and
sub
insl
xor
lods
out
aaa
jnp
or
add
mov
jg
fnsave
pop
hlt
add
ja
mov
in
in
jl
jno
adc
push
ljmp
xor
inc
int3
loope
decl
sub
or
sbb
lret
pushw
stos
gs
jp
decl
repnz
jo
fs
and
insl
inc
pop
movsb
mov
mov
icebp
incl
insl
mov
xchg
aad
dec
bound
mov
cmpsb
das
ds
adc
fsubs
add
int
pusha
pushf
jo
gs
ficoml
xor
dec
outsl
cli
int
imul
scas
cmp
call
jecxz
push
lret
in
xor
fisubs
scas
lret
pusha
je
int
and
sub
repnz
cmp
push
sbb
cmp
jmp
add
nop
sbb
mov
or
call
leave
push
lcall
cmpb
xchg
cmp
pusha
dec
jp
outsl
decl
loopne
rcll
repz
test
push
xor
ja
test
cmp
fimuls
push
insb
inc
adc
ljmp
push
pop
inc
popa
mov
jmp
pop
add
adc
enter
ljmp
dec
add
dec
sub
mov
xchg
lcall
pop
test
inc
xchg
dec
int
out
fcos
ljmp
fwait
ja
sbb
push
dec
dec
outsl
dec
nop
addb
lret
int
mov
rcrb
decl
test
dec
jae
mov
sbb
lock
inc
jg
push
out
decl
cmc
or
dec
negb
cld
mov
mov
xchg
mov
dec
aas
inc
fwait
mov
xor
inc
repnz
loopne
leave
bound
pop
inc
fucomip
jo
sub
xor
jbe
mov
insb
xchg
fldcw
xchg
adc
decl
pushf
out
lds
lahf
jae
cmc
outsb
adc
lds
pop
or
and
repz
jmp
inc
jo
jge
in
lock
cli
pop
xchg
xchg
mov
xor
sbb
inc
push
clc
in
add
push
pop
mov
cwtl
roll
in
pop
push
pop
ret
loope
imul
loop
xlat
sub
imul
jbe
call
repnz
lret
js
xor
cli
push
add
dec
mov
xor
and
push
pop
inc
cmp
cmc
lcall
cmp
mov
jb
ret
adc
inc
mov
in
mov
pop
add
js
ljmp
outsb
outsb
out
mov
inc
jb
xchg
lock
dec
pop
jge
inc
sbb
push
clc
shl
cmc
dec
stc
dec
jmp
loopne
in
pop
cld
push
std
push
push
jns
cmp
mov
inc
inc
sbbl
insb
mov
call
or
ja
xchg
push
and
dec
into
mov
mov
push
jmp
lcall
int3
test
lret
sbb
add
stos
xor
hlt
out
push
cmp
enter
jmp
xor
leave
test
pop
jecxz
iret
fcompl
incl
in
stos
cli
add
sahf
jno
push
jo
stos
dec
dec
aas
add
stos
decl
or
filds
or
shlb
cmpsb
ret
inc
xorl
cmc
inc
out
mov
lahf
pop
mov
or
popf
jmp
xchg
lock
ljmp
or
shlb
mov
leave
aam
push
bound
js
inc
xchg
cmp
jmp
cmp
add
push
push
shll
sarb
das
and
inc
pop
jbe
pop
gs
pop
cltd
lret
or
xor
jmp
adc
push
dec
add
sub
mov
icebp
cmp
stos
pop
sbb
mov
mov
inc
jo
or
mov
jmp
or
or
dec
xchg
hlt
adc
xchg
out
daa
mov
xchg
sbb
jmp
lahf
out
pop
pop
lea
xor
pop
ss
sbb
int
call
sarb
push
int
jae
xchg
mov
cmc
mov
xchg
les
decl
jb
out
mov
andl
test
push
outsb
pop
mov
mov
dec
ret
adc
sbb
mov
and
shrb
mov
xchg
das
in
scas
stc
data16
dec
mov
pop
mov
sbbl
sub
or
push
out
mov
mov
add
xchg
mov
out
mov
cmp
cltd
cmp
push
outsb
adc
mov
and
call
imul
mov
out
mov
sbb
inc
cmpsb
jge
sbb
xchg
xchg
push
cli
mov
in
aam
out
xchg
mov
pusha
les
xchg
mov
mov
mov
insl
shrl
test
mov
push
fcmovnb
aas
dec
fbld
aad
loop
incl
inc
std
das
xchg
js
or
xchg
cs
mov
mov
mov
pop
pop
scas
pop
push
jns
scas
int3
sbb
dec
std
jecxz
arpl
mov
stos
cmpsb
inc
push
shl
mov
repz
sbb
fstps
loopne
sbb
incl
mov
dec
inc
sub
xor
iret
sub
pop
inc
jp
outsl
push
inc
call
cltd
xchg
stc
xchg
shr
imul
and
dec
test
mov
push
jmp
mov
jmp
push
lret
sbb
xor
sbb
sub
cwtl
jno
stos
lcall
inc
pop
testl
ret
pop
jmp
xlat
cmp
sar
jmp
xchg
cmp
repnz
addl
outsb
out
sub
or
and
mov
sbb
ljmp
push
inc
jae
popf
jae
and
incl
sbb
inc
jnp
ljmp
das
das
xor
jae
mov
divb
or
es
cmp
std
pop
cs
sbb
xchg
jmp
xchg
dec
push
mov
inc
sub
call
sti
xchg
cwtl
fisttpll
or
mul
jo
mov
xor
mov
pusha
mov
iret
test
push
daa
aaa
mov
inc
sbb
sti
fwait
jmp
mov
call
push
cli
fisttpl
push
pop
sti
jb
inc
xor
xchg
daa
push
call
decb
testb
inc
cmp
mov
in
movl
lcall
pop
sub
push
dec
test
jno
nop
add
jmp
cmpsb
fisubl
inc
add
mov
xchg
add
int
pop
repz
pop
cmp
jnp
iret
fadds
sarl
adc
call
cltd
push
orl
ret
sbb
out
sahf
movl
incl
shl
lods
in
add
pop
rcrl
test
mov
movsb
cli
lcall
imul
mov
aas
dec
negb
sbb
push
push
add
ljmp
cmpsb
pop
xor
ret
pop
dec
mov
inc
lret
mov
sub
pop
mov
mov
and
mov
xchg
es
fldt
ljmp
pusha
adc
mov
xor
lods
cs
cmp
add
inc
pop
or
out
jno
push
ret
fmuls
call
hlt
aad
rorl
repz
mov
test
in
inc
cli
jg
mov
xchg
daa
pop
ds
insb
jle
xchg
out
jp
mov
pop
pop
push
fsubrs
ja
cmpsl
add
incl
lret
lods
and
dec
mov
out
dec
ljmp
iret
mov
and
push
push
mov
pop
je
rclb
jge
ret
push
mov
jecxz
popf
ljmp
mov
and
fisubrs
mov
ja
mov
js
test
movsb
mov
or
jno
mov
stos
sbbl
cmp
sub
adc
adc
daa
adc
cmpsl
and
rolb
push
mov
ret
jmp
jns
mov
and
iret
testl
cmc
push
lahf
mov
pop
jl
in
adc
lds
outsb
adc
js
pushl
mov
rcrl
insl
cmpsl
cmp
aad
xor
and
ret
jge
incl
sub
mov
mov
mul
pop
mov
out
jl
ja
dec
test
pop
fldt
test
cs
into
out
jle
jmp
mov
popf
mov
leave
jge
stc
xchg
hlt
lret
or
jmp
in
repz
addr16
dec
pop
iret
push
jle
inc
add
or
sbb
addr16
dec
push
movsl
repz
insl
dec
ret
fstps
pop
push
pop
cmp
xchg
aaa
gs
sbb
jnp
mov
ret
sub
mov
add
sub
les
addr16
mov
xchg
jne,pt
mov
inc
call
loope
sub
das
and
or
out
mov
or
jg
pop
cmp
inc
push
cmp
pop
ljmp
jno
scas
lds
cmc
pop
adc
cmp
add
sub
jnp
mov
dec
fldl
das
push
out
das
lds
clc
decl
pushf
lds
xor
jns
out
adc
out
or
inc
inc
mov
mov
mov
adc
dec
push
inc
scas
and
arpl
adcb
lcall
xor
pop
mov
cmp
mov
push
pop
jecxz
add
mov
sub
inc
fisubrl
call
cmp
fstps
fwait
push
pushf
sub
xchg
dec
sbb
out
mov
jbe
dec
js
push
popa
pop
cmp
jle
mov
enter
sub
insb
cmpsl
cmp
data16
pop
jns
loopne
pusha
shrb
aam
inc
int
push
test
dec
pop
sbb
xor
jmp
test
aad
fcmovnb
leave
dec
popf
push
lret
xchg
cmpsl
test
in
incl
dec
dec
aad
mov
mov
jmp
xor
add
outsb
inc
or
lcall
pusha
sub
cld
sbb
and
mov
clc
and
mov
call
jmp
pop
mov
in
mov
movsl
jno
dec
push
inc
ret
imul
add
lcall
fildl
mov
and
mov
int3
adc
xchg
inc
ror
loopne
pushl
std
dec
ret
decl
xor
or
jle
lods
and
jge
mov
fcomip
lcall
pop
push
sarb
movsb
movsl
push
push
cmc
fdivrs
fistpl
popf
aad
cld
ljmp
out
jb
jp
jl
adc
fwait
mov
xchg
push
leave
mov
stos
push
jmp
call
pop
jl
xor
jge
sahf
push
push
pop
ficompl
dec
ljmp
cli
decl
imul
hlt
mov
xchg
lret
push
push
repz
push
hlt
add
insl
xchg
clc
jle
ficoms
jge
cmpsl
pop
xchg
clc
jmp
movsl
push
sbb
popf
or
xor
ljmp
popf
test
into
xchg
clc
add
into
mov
movsb
in
sub
inc
or
rol
mov
sub
loopne
pushl
push
push
subb
jnp
decl
xlat
icebp
cli
outsl
add
add
and
lea
sub
decl
gs
pop
adc
xchg
addl
js
insertq
ret
dec
pushl
cld
sbb
ja
jns
mov
sarb
bound
dec
lock
aam
and
jg
roll
cld
lock
stc
hlt
sahf
mov
jne
lods
lret
or
lahf
es
decl
and
sbb
sub
dec
cltd
pop
mov
out
mov
push
cmp
out
fnstenv
inc
leave
xchg
mov
js
pushf
sub
xchg
sbb
daa
cmpsl
js
movsl
and
clc
lret
mov
mov
cli
jns
mov
sub
xchg
adc
lods
incl
clc
addr16
mov
repz
mov
call
es
cltd
jne
lods
add
cmp
cmpsl
adc
outsb
insl
int3
xchg
mov
repz
aaa
enter
lds
inc
jmp
incl
ficomps
xchg
xchg
mov
push
sub
cli
call
jp
lds
jnp
pushf
ror
mov
es
cmp
daa
clc
mov
das
and
and
lock
loopne
lea
sub
or
jne
test
xlat
call
getsec
push
adc
push
pusha
call
call
daa
sbb
add
jmp
adc
jae
xchg
mov
mov
mov
call
icebp
in
imul
outsl
jp
stc
or
mov
dec
and
mov
push
pop
dec
jmp
insl
inc
jmp
outsl
shlb
insb
or
pushf
stc
sbb
insb
adc
test
or
incl
repnz
sbb
pop
fisttpl
ss
sbb
xor
cmp
nop
popf
pushl
pop
scas
cwtl
pop
mov
dec
int
cmp
or
sahf
shrb
mov
pushl
push
pop
lds
mov
stos
cmovnp
inc
xor
sub
nop
xor
int3
add
test
jae
and
mov
or
mov
imul
or
mov
negl
push
adc
mov
movsb
xor
aaa
mov
push
test
mov
add
ljmp
dec
pop
leave
imul
mov
jmp
scas
lret
out
or
sbb
cmpsb
ret
fprem1
and
dec
ftst
and
and
ljmp
mov
fsubrs
mov
or
cmp
add
test
ss
fisubrs
sbb
jmp
push
xchg
xor
loope
imul
adc
inc
cmp
jne
push
decl
push
mov
jmp
mov
rcrl
push
and
push
mov
xor
mov
ror
mov
add
xchg
and
jp
jl
outsl
cli
incl
mov
pop
in
or
mov
and
data16
xchg
in
mov
enter
cmp
lret
xor
mov
cld
adc
xchg
call
push
xor
push
mov
fidivrl
inc
sbb
mov
aas
sbb
cmpsl
outsl
inc
rcrb
pusha
and
mov
or
add
lret
into
incb
xor
fimuls
inc
sbb
sbb
sub
mov
in
push
addr16
mov
mov
pushl
mov
lcall
shll
scas
stos
mov
mov
jge
imul
inc
lahf
and
mov
sub
scas
and
xor
mov
iret
bound
cli
lcall
repz
jp
fdivl
stc
sbb
lock
push
jae
ljmp
pop
insl
movb
aaa
xchg
xchg
mov
add
mov
push
fwait
pushl
loopne
call
in
or
aaa
mov
lock
xchg
je
and
dec
and
test
rclb
inc
mov
jo
sub
dec
jg
add
inc
mov
inc
xor
inc
mov
mov
and
fsubr
outsl
or
decl
fs
mov
repnz
shll
pop
push
jecxz
inc
sub
xchg
cmpsl
adc
fildll
mov
pop
in
mov
out
aaa
cwtl
sbb
ljmp
inc
out
clc
dec
ss
and
jno
cs
mov
xchg
jae
stos
pop
dec
popa
out
mov
loope
scas
xchg
xlat
mov
jg
push
jo
mov
out
sbb
xchg
fstp
lret
lsl
and
cwtl
std
mov
adc
push
inc
inc
push
ja
cmp
add
mov
in
outsb
scas
push
rorl
outsl
int
lcall
lcall
js
dec
out
pusha
sar
jnp
call
insl
decl
xor
or
add
pop
mov
int3
lret
popa
adc
and
incl
fdivp
movsl
cwtl
adc
sub
pop
pop
jmp
jge
pop
dec
cmpl
call
mov
jecxz
fldenv
insb
sub
das
mov
xchg
mov
inc
imul
leave
sahf
enter
int
cmpsb
jecxz
icebp
ret
add
icebp
cmpsl
sub
mov
sub
pushl
xor
mov
xor
mov
add
push
or
jnp
or
cmp
and
lock
mov
mov
dec
cmpsl
fdivrs
fcomip
incl
ja
mov
aas
fs
pop
ja
ljmp
cli
pop
sub
es
mov
push
xchg
lret
aad
cmp
jmp
orl
testl
pop
hlt
cmp
adc
pop
add
xchg
mov
pushl
loopne
cmp
xor
push
lret
sbb
push
jle
cld
lds
sub
aas
je
jmp
addr16
jmp
xor
nop
hlt
inc
jnp
pop
nop
pop
imull
jmp
xchg
test
leave
or
movsb
xor
sarb
cld
stos
shrb
mov
mov
pushl
cmp
mov
repnz
mov
push
jmp
jecxz
test
or
ret
movsl
icebp
lea
rclb
xor
xor
cltd
aad
push
add
incl
sub
pop
iret
pop
cltd
arpl
add
and
push
aam
inc
out
call
jmp
sbb
ret
cltd
ret
dec
or
mov
pop
shrb
push
pop
std
incl
mov
xlat
pop
pop
adc
mov
out
insl
pop
std
call
cli
mov
das
jp
push
xor
add
jae
lea
mov
sbb
fldl
xor
sub
loopne
outsl
ror
and
jb
test
out
adc
jg
and
movsb
sbb
add
negb
xor
aas
mov
pop
dec
addr16
jmp
cli
mov
out
xorb
mov
mov
xor
or
repz
mov
jmp
leave
push
dec
call
imul
push
sbb
mov
adc
stc
in
push
sbb
dec
rcll
push
cmp
fs
push
test
adc
inc
adc
lcall
int3
cmpsb
and
adc
jg
and
and
inc
cltd
imul
sub
add
add
sahf
shl
pushl
jmp
add
add
data16
pop
sub
mov
jmp
lret
aad
pushl
fwait
xchg
add
mov
jae
sbb
jae
popa
push
cmp
mov
mov
int
in
pop
xor
dec
jae
cmp
lods
cmp
jg
mov
leave
add
fimuls
scas
jecxz
adc
sbb
push
loope
and
jae
push
popf
add
incl
scas
hlt
adc
push
int3
inc
and
mov
out
rdtsc
bound
loopne
jmp
dec
pop
and
dec
hlt
rclb
shrl
jnp
sub
push
sar
mov
push
xor
pop
cld
cmpsb
xchg
ljmp
nop
fs
insl
or
stc
cmpl
popa
je
loopne
mov
mov
jl
das
adc
out
es
jmp
add
loope
xchg
jmp
mov
repz
iret
test
jnp
in
movsl
into
fdivrp
jg
jo
cli
les
daa
xchg
push
call
dec
jns
xorb
add
std
int3
xchg
push
sarb
or
enter
es
mov
mov
rcll
cmp
stc
xchg
mov
push
popa
mov
push
xor
lea
mov
inc
dec
adc
cli
sbb
or
mov
mov
ds
inc
dec
aam
shll
sahf
jmp
xchg
ljmp
push
xchg
enter
or
gs
inc
fistl
lahf
je
das
in
imul
sbb
pop
shll
xor
rorb
out
imul
dec
cli
je
jg
cmpsl
nop
push
mov
scas
push
push
xchg
inc
cmp
nop
outsb
adcl
mov
jnp
clc
movsb
mov
cwtl
fwait
ss
push
push
movsb
mov
and
mov
call
lret
xchg
sahf
out
mov
imul
icebp
sbb
adc
fadd
lret
xor
push
xchg
sub
cs
dec
mov
fbstp
add
adc
xchg
mov
stos
add
jns
inc
pushf
pop
adc
sub
dec
cwtl
add
call
lcall
imul
and
dec
je
mov
jo
test
loopne
out
decl
ja
imul
ret
jle
cli
scas
sti
cs
pop
test
mov
jp
or
add
mov
mov
ljmp
push
sbb
adc
movsl
es
stos
data16
xchg
cmp
jae
push
js
jbe
mul
test
jnp,pt
pmulhw
lret
fcompl
xchg
popl
ja
mov
cmp
das
cli
pushl
enter
adcl
hlt
xor
xchg
dec
ja
pop
addl
pushl
ret
xor
lods
cmpsl
xchg
dec
fwait
jbe
inc
jo
call
mov
aaa
scas
jmp
leave
out
jns
in
mov
call
pop
mov
adc
arpl
scas
fadds
lods
cld
test
inc
add
cwtl
xchg
pop
js
scas
mov
sub
adc
out
rcr
mov
jnp
fisttpl
add
imul
dec
mov
xchg
mov
and
test
mov
jg
pop
pop
add
sti
jge
pop
xchg
lret
mov
repnz
js
fwait
insl
stos
loopne
jmp
pop
inc
out
ja
pushf
shufps
sahf
enter
cmpsb
mov
xchg
pop
jns
sbb
xchg
hlt
mov
mov
dec
inc
mov
sbb
and
adc
inc
mov
jb
jle
scas
jns
gs
push
ficomps
xchg
mov
shlb
and
jae
or
lret
ret
sarb
in
sbb
ljmp
pop
leave
jmp
xchg
adc
pushf
sub
mov
outsl
cld
in
dec
xchg
mov
outsb
jae
out
stos
inc
rolb
ljmp
decl
add
outsb
fcompl
push
push
inc
notb
and
mov
call
std
sub
scas
xchg
adc
xchg
outsb
test
sbb
jae
mov
imul
ljmp
pop
loopne
ficompl
or
rcr
pop
mov
aaa
cmp
pushl
sub
add
hlt
xor
int
mov
das
out
pushf
in
cmpsl
and
call
in
push
mov
gs
sub
adc
mov
xlat
notb
mov
or
in
decl
ret
and
mov
fdivl
mov
sub
push
arpl
lea
idiv
ljmp
repz
repz
bound
in
pop
cmpsl
or
ljmp
mov
add
push
push
pusha
push
cmpsb
or
mov
mov
mov
cmp
incl
mov
insl
pushf
pusha
mov
add
insl
add
shlb
ds
outsb
xchg
pushl
pop
adc
or
jp
fs
outsb
sbb
scas
cmp
pop
repnz
test
lcall
cs
arpl
cmpsb
or
add
fld
mov
lcall
jbe
lahf
lcall
or
mov
cmc
mov
leave
inc
shrb
call
pop
pop
add
adc
loop
aam
daa
dec
test
mov
pop
rolb
xor
lcall
pushl
xchg
fcompl
test
test
cli
xor
lds
jbe
in
push
xor
adc
sub
movsb
sbb
lcall
pop
mov
add
jl
mov
push
jno
cld
imul
lcall
call
xor
pop
and
lods
fwait
lock
scas
push
cmp
jnp
mov
add
fistps
cmp
mov
sub
sarl
pop
jmp
mov
jmp
sbb
sbb
lds
pop
jg
lcall
mov
sahf
adc
adc
inc
or
out
cli
imul
push
mov
pop
test
and
cmc
ljmp
sbb
inc
add
stos
dec
test
sub
push
ljmp
mov
xchg
out
out
jb
cmp
sbb
sub
sbb
mov
hlt
jp
cltd
ds
insl
jb
mov
scas
mov
or
clc
cld
cmp
cltd
ficomps
aas
movsb
fmull
jge
cs
iret
add
inc
cwtl
pop
cmp
mov
loop
sub
push
test
cli
and
sub
das
cmp
scas
xchg
test
loopne
xchg
push
bound
sbb
and
jmp
cmp
pop
jmp
imul
mov
mov
or
add
call
clc
pushl
fs
fists
test
mov
repz
btc
jbe
lcall
xor
and
popf
xor
mov
cmc
jns
mov
dec
jno,pt
in
in
incl
out
push
mov
lods
pop
out
push
js
xchg
fcomps
and
or
movsb
outsl
push
fsub
pop
jo
jns
outsl
mov
mov
cltd
ret
dec
push
jle
js
ret
push
icebp
outsl
cmp
decl
dec
lea
in
ljmp
cmp
xchg
cmpb
mov
loope
pushl
pusha
xor
push
flds
popf
push
xchg
mov
loope
mov
dec
mov
or
mov
sbb
lods
add
and
jmp
pusha
notb
xor
fstpl
sbb
rcl
jl
adc
xor
popf
subb
or
pop
aas
adc
sbb
cli
out
fdivr
push
daa
inc
mov
pusha
test
fst
mov
mov
push
dec
mov
decl
call
inc
pusha
sub
sub
movsl
xor
cld
sbb
imul
inc
imulb
fs
popf
sbb
or
jbe
shl
in
mov
add
mov
ljmp
insl
push
mov
adc
xor
lahf
sbb
mov
fnstenv
je
icebp
nop
push
inc
ljmp
insb
pop
ret
test
and
lea
add
pushl
outsb
cmp
push
in
loop
pop
leave
fsubl
popf
scas
sbbl
push
pop
add
ljmp
push
pop
jae
fstps
rclb
dec
sbb
inc
and
push
shrb
sub
inc
add
sub
stc
adcb
add
cmp
pushl
jecxz
add
rcr
xchg
fisubrl
mov
cmp
imul
ficomps
xchg
imul
lret
movsl
gs
lea
push
lret
enter
mov
pop
int3
and
movsb
lcall
pushw
addr16
and
cmp
aad
sub
cmp
and
adc
dec
ss
mov
sbb
in
cs
decl
mov
lea
adc
insb
ds
jp
fnsave
dec
andl
or
and
cltd
addr16
jmp
jg
ja
loopne
push
je
jnp
inc
push
sbb
clc
roll
lea
pop
mov
pop
das
int3
test
fcomip
inc
jp
lret
lahf
and
lds
inc
adc
data16
or
or
jl
dec
mov
mov
ljmp
mov
lcall
adc
pushf
mov
or
mov
pop
mul
cmp
decl
dec
es
or
fisubrs
xchg
mull
cmpsl
and
ljmp
das
mov
call
xor
xchg
test
pop
fcoml
xor
or
inc
add
mov
mov
les
rcll
ja
sbb
ljmp
lods
sbb
shlb
and
jno
xor
sbb
icebp
call
jbe
mov
js
scas
shrb
add
daa
mov
ljmp
decl
bound
xor
mov
sbb
inc
mov
jp
dec
outsb
cli
or
mov
fwait
mov
lret
sub
shlb
fwait
cmpl
imull
xchg
std
mov
xchg
ja
in
popa
fisttps
sub
inc
jp
jne
repz
mov
fwait
add
xchg
xor
add
pop
or
and
inc
scas
sbb
daa
sarb
pop
cltd
add
decl
xor
fwait
xchg
jb
test
loope
cmp
jg
insb
push
push
add
inc
push
or
gs
sbb
hlt
in
pushl
into
sbb
fs
sub
lret
rolb
adc
lcall
adcl
lods
jge
iret
int
xor
xchg
int
ficomps
cmp
sub
js
addr16
dec
xorb
pushl
xor
add
push
xor
shlb
or
push
aad
ss
ja
push
xchg
decl
dec
dec
js
push
jbe
xchg
pop
push
mov
cwtl
incl
das
push
outsl
into
or
test
xor
sbb
dec
fs
add
fstpt
fldt
jmp
decl
xlat
dec
cld
rol
adc
mov
mov
dec
sbb
jbe
loope
aaa
mov
adc
negl
lods
or
repnz
fdivs
mov
dec
dec
add
push
cmp
test
mov
inc
mov
movsl
cwtl
jl
xlat
call
push
jmp
dec
pop
cli
jle
inc
mov
jbe
lods
scas
xchg
add
lock
decl
pop
and
cmpsb
scas
add
rcrb
movsl
xchg
loopne
pop
fs
neg
xchg
mov
sbb
call
cmp
cmp
ret
cmp
jno
sub
inc
mov
push
xor
aad
lcall
not
in
cmp
and
sub
and
fwait
addr16
ja
insb
jmp
fnstenv
mov
cs
sub
cmp
rolb
add
xor
fucom
stos
incl
sub
insb
idivl
pop
shlb
jns
cli
pop
sbb
adc
cltd
scas
aam
icebp
adc
jae
sti
lret
test
jns,pt
gs
rclb
mov
lcall
dec
jmp
mov
mov
out
cmpsl
clc
je
fstps
test
aam
test
push
or
xchg
ret
in
ja
xchg
filds
xchg
dec
adc
add
mov
add
ds
and
or
into
sub
jl
lret
jmp
or
xor
hlt
lahf
pop
jo
and
xor
scas
loop
test
and
fists
mov
lcall
add
test
lea
xor
out
sub
cmp
adc
add
mov
ljmp
mov
inc
adc
outsl
push
jge
mov
scas
fildl
ljmp
decb
lahf
jne
jmp
es
unpcklps
repz
adc
ljmp
pop
cmc
loopne
jp
notb
push
xor
xchg
cli
call
enter
pop
xchg
adc
shll
pop
scas
pop
push
popf
xchg
out
clc
mov
lea
insb
fadds
filds
and
xor
pusha
lret
xor
mov
ret
int3
push
faddl
fmulp
rolb
mov
pop
inc
mov
and
repz
call
mov
repz
gs
mov
in
ret
popa
xchg
xchg
pop
scas
cmpl
add
icebp
mov
pop
andl
std
cmp
mov
das
mov
insb
pop
xchg
lahf
aad
adcl
fs
jecxz
rcll
mov
lods
pop
clc
inc
iret
test
mov
push
sti
push
dec
cltd
call
stc
push
repz
sub
fdivrl
jno
push
xor
pop
pushl
mov
ljmp
mov
movsl
dec
inc
and
mov
cmp
outsl
pop
sarb
inc
subl
test
loopne
push
lcall
fimull
mov
bound
and
insb
popf
ja
iret
sub
out
lret
jge
push
bound
sbb
je
or
mov
cld
xchg
or
xor
icebp
ret
ljmp
lahf
pusha
mov
je
push
push
shll
add
xor
out
cwtl
and
ljmp
xchg
lea
cmpsb
movsl
imulb
push
mov
sub
inc
jmp
movsl
pushf
pop
divb
dec
adc
incl
or
add
push
shrl
addr16
mov
jb
mov
and
and
inc
shrl
dec
negb
add
push
dec
stos
div
adcl
loopne
nop
adc
inc
addr16
aad
nop
jg
or
bnd
mov
fs
std
test
jnp
and
mov
sub
pushl
out
ljmp
and
fdivrl
iret
or
jbe
lcall
mov
movsl
add
mov
std
sbb
lock
loope
fwait
cmp
dec
std
add
ljmp
ljmp
ds
call
pop
scas
cs
jg
mov
imul
in
sbb
pop
data16
sub
stos
mov
or
pop
incl
daa
mov
cmp
outsb
and
sub
rolb
mov
jne
in
out
sbbb
push
or
jle
cmp
punpckhwd
loopne
push
or
aam
mov
jo
and
sti
xchg
stc
rorl
in
adc
scas
in
lahf
rcrl
push
xor
test
push
inc
mov
jmp
idiv
call
les
fnstsw
inc
xchg
test
push
or
xchg
mov
dec
pushf
xchg
mov
sub
mov
mul
xchg
push
fwait
in
lcall
pop
xchg
inc
pop
cmp
add
ds
sub
mov
sahf
ss
cmc
fmulp
or
adcb
xlat
cli
mov
stos
ljmp
mov
lods
icebp
jl
inc
fadd
fstps
push
in
loop
fwait
inc
cmpsl
xchg
enter
das
clc
fcmove
fs
je
push
popa
cld
jb
jne
adcb
push
outsb
hlt
loope
incl
gs
jae
cmp
popf
push
xchg
out
pop
inc
mov
cmp
hlt
test
fst
dec
jl
cmp
fstpt
or
pop
orl
jns
dec
dec
pusha
insb
push
ljmp
pop
test
fisubl
call
ret
pop
je
mov
lcall
lock
cmp
xchg
mov
mov
or
std
sub
lcall
inc
inc
mov
mov
dec
ret
mov
xchg
pop
mov
inc
repz
fwait
add
scas
push
push
lret
cmc
jae
inc
mov
and
pop
jg
pop
cmc
jbe
lret
inc
pop
pop
dec
not
cwtl
addr16
mov
push
jmp
sti
imul
xchg
mov
add
jmp
push
cltd
jb
jp
incl
ja
mov
loop
enter
and
ljmp
pushf
cmp
ret
add
jb
or
push
sbbb
lret
out
cli
pop
dec
ljmp
cmp
out
hlt
out
test
jg
pop
pushl
jbe
dec
cmp
ja
jne
cmp
cmpsl
cld
inc
out
dec
push
mov
pop
pushf
cs
pop
mov
cmpl
sar
test
add
jno
int
imull
or
cld
mov
mov
lds
and
mov
cmp
popf
add
lcall
xlat
xchg
out
loop
jno
xor
cli
mov
gs
sbb
imul
push
sti
in
outsl
cli
lcall
sub
std
repz
jmp
push
andl
jg
push
dec
decl
sub
mov
cld
lcall
dec
or
pop
inc
and
std
pop
mov
pushl
insb
or
das
out
jb
in
xchg
out
js
out
repz
jmp
or
inc
and
lret
nop
jae
sbb
lods
movsl
jbe
cmp
incl
pop
mov
push
leave
lock
lret
sub
push
mov
jmp
and
adc
mov
xor
push
or
std
ljmp
out
fisttpll
setne
mov
decl
lcall
add
pop
ja
and
push
xor
cmp
inc
repnz
stos
popf
jns
or
insb
sbb
in
incl
sbb
les
std
ss
jns
add
dec
adc
cmp
xchg
sub
outsb
fimuls
jno
or
sarb
jg
adc
in
subl
ret
aas
cld
mov
inc
ret
mov
mov
lock
ljmp
xorb
lahf
fwait
mov
pop
sbb
push
add
js
mov
push
pushf
sub
decl
incl
dec
lret
sub
push
outsb
adc
xor
or
xchg
loop
jp
lret
fwait
sar
ljmp
cld
fwait
pop
cmp
mov
mov
outsb
adc
call
fmull
cmp
mov
mov
ljmp
mov
pop
addr16
das
shrl
or
aad
jmp
lret
xchg
loopne
call
jb
mov
cmp
push
call
stos
pushl
rclb
jbe
lahf
pop
push
cwtl
jle
hlt
mov
ret
add
in
and
dec
test
out
iret
out
xchg
shr
xor
sti
adc
xor
xchg
movsb
leave
sub
dec
in
pop
testb
pushf
jp
cmp
roll
inc
or
adc
in
bound
jmp
inc
or
dec
mov
lret
adc
xor
repnz
loop
sbb
jo
lods
fsub
cwtl
mov
lret
daa
or
clc
push
xlat
dec
mov
mov
lods
mov
les
jo,pt
adc
data16
push
std
and
mov
rclb
je
mov
fs
mov
pop
fs
fwait
aaa
xlat
fcmovnu
mov
call
mov
or
hlt
sbb
decl
inc
push
bound
mov
sub
lret
jmp
mov
mov
loope
aam
and
sbb
xchg
fs
mov
fisubrl
imul
xchg
iret
fs
pushl
fstps
adc
fcomi
ds
les
ljmp
repz
push
cld
mov
xchg
add
and
out
dec
aas
mov
mov
jnp
scas
rcl
lea
fbld
ljmp
jmp
dec
dec
push
and
sub
adc
sbb
insb
cld
imul
xor
fisttps
loop
enter
fcompl
and
out
mov
mov
nop
icebp
push
loope
adcl
outsb
adc
sbb
xchg
jbe
ljmp
mov
imul
mov
movsl
mov
mov
jge
es
aad
push
xor
and
fs
cmc
xchg
sub
jmp
sbb
pop
lea
jmp
cld
outsl
imul
push
js
mov
xchg
ds
iret
shrl
and
or
jg
decl
sub
inc
mov
popa
lods
pop
xlat
push
mov
push
push
icebp
icebp
mov
cli
mov
jge
pop
mov
or
dec
mov
push
mov
into
std
and
outsb
sub
or
sbb
cltd
inc
lods
fdivrs
fucomp
ljmp
inc
enter
leave
movsl
test
xor
in
xchg
fcoml
sub
xchg
xchg
cmpsb
mov
jmp
mov
cmp
add
lods
repz
int3
mov
inc
leave
jae
clc
lcall
xor
and
cmp
enter
pop
adc
mov
jmp
rolb
pushl
rorl
mov
in
push
mov
ss
pop
jo
push
push
pop
ret
pop
xor
call
pop
xchg
je
mov
push
cmp
push
push
pop
adc
dec
js
sbb
into
cmpsl
pop
fimuls
ljmp
push
subl
lods
xor
inc
inc
xchg
adc
incl
sbb
pusha
ds
inc
mov
inc
adc
hlt
pop
and
cmp
decl
ja
arpl
sti
or
pop
insb
nop
imul
adc
xchg
lods
sarb
mov
or
scas
inc
sbb
push
pop
sbb
imul
xchg
in
jmp
cmp
test
shr
push
inc
ret
rcl
add
cmc
jns
shlb
mov
movsb
scas
adc
adc
js
jae
mov
dec
nop
mov
clc
aam
loop
test
incl
add
jmp
pop
cli
test
testl
aas
add
mov
push
xor
movl
aad
xchg
decl
clc
pop
imul
dec
push
mov
ja
cmp
pop
push
push
xchg
incl
lds
test
or
xor
jmp
movsl
add
adc
loope
xor
flds
mov
dec
stos
xchg
fs
incl
pushl
pop
sbb
pop
mov
and
in
outsl
inc
push
sub
lcall
and
es
loope
push
jp
testb
jne
arpl
mov
pushl
lcall
mov
mov
push
inc
sbb
and
mov
pusha
stc
xor
adc
and
scas
inc
push
xor
ljmp
jg
hlt
inc
loop
sub
inc
scas
pop
in
addl
jbe
repz
jg
decl
stos
dec
pop
xor
lcall
cwtl
les
in
xchg
inc
outsl
orl
add
arpl
lcall
rcl
push
out
adc
xor
cld
sbb
mov
sub
mov
xchg
adc
add
in
adc
cmp
mov
stos
ret
insb
sahf
push
fnstsw
mov
push
std
lcall
lret
sarb
add
and
sbb
jg
or
aas
sbb
xorb
push
fs
cwtl
call
in
jnp
jmp
push
mov
or
push
in
fidivl
int
mov
xor
mov
fistpl
decl
aad
repz
jo
push
jge
pop
fwait
outsb
and
xchg
push
mov
jmp
pop
inc
ss
lock
add
inc
mov
mov
mov
lds
lock
ljmp
pop
shll
popa
bound
leave
jecxz
test
jp
repz
mov
or
push
dec
inc
in
sbb
jg
sahf
mov
pop
lret
mov
sahf
testl
pop
and
or
sbb
mov
push
sbb
dec
ljmp
mov
mov
mov
push
sbb
dec
xor
sub
icebp
aaa
mov
cmpsl
mov
ljmp
pop
clc
pusha
and
lds
adc
sub
icebp
dec
nop
mov
mov
lcall
lcall
stos
and
ja
popa
mov
in
add
int3
sbb
fwait
sahf
inc
addb
cmp
lcall
pushf
adc
jnp
insb
outsb
mov
push
ss
add
xchg
loopne
incl
dec
xor
test
mov
xlat
cwtl
int
or
imul
hlt
add
push
sbb
aam
outsl
jnp
sahf
xchg
addr16
es
cmpsl
rclb
push
mov
sbb
lds
push
jne
test
jne
das
jge
fnstenv
mov
out
ja
decl
cld
mov
cmpsb
loopne
repnz
fyl2x
cwtl
loop
xorl
fistpl
shl
jmp
xchg
dec
mov
cmpsb
rsm
dec
iret
lds
repz
ja
call
fildll
or
cmp
mov
lcall
and
cmpsl
cmp
inc
sbb
adc
enter
push
dec
mov
fisubl
sub
inc
adc
call
pusha
pusha
pop
test
les
std
jle
dec
push
je
xchg
dec
pushl
dec
jge
cmp
push
and
lcall
in
mov
je
das
sar
push
jl
mov
sub
add
sti
negb
cmp
ljmp
das
cs
dec
push
cs
movsl
pop
push
mov
inc
stos
xchg
arpl
popf
inc
test
inc
psadbw
add
sahf
jo
ljmp
push
in
inc
dec
cmp
sub
push
sbb
xor
jl
incl
stos
call
mov
mov
xchg
inc
mov
sub
test
dec
xor
lcall
adc
mov
pop
and
shlb
mov
fcomip
sbb
mov
sub
jb
pop
ljmp
mov
mov
pop
mov
push
sub
leave
clc
call
aam
out
mov
inc
add
scas
cmpsl
jmp
movsb
into
dec
pushl
push
stos
jae
mov
pop
or
pop
mov
out
movsb
movsb
push
js
jns
das
add
ljmp
cs
cmp
xchg
cmpsl
aas
lret
xchg
pop
dec
iret
mov
flds
jb
xchg
cmc
jmp
sub
repnz
push
push
popf
jp
jns
rcrb
lcall
ret
icebp
ds
pop
lret
pop
sahf
inc
div
lcall
fldcw
incl
adc
enter
lds
jl
mov
jl
dec
dec
or
sbb
cmp
ljmp
or
pop
pop
orb
mov
arpl
dec
call
ljmp
jne
and
inc
mov
sub
sub
adc
incl
and
cmp
inc
jp
push
jne
sti
fwait
push
sub
push
lcall
jne
lahf
sahf
inc
pop
add
mov
adc
notl
add
xchg
icebp
lcall
lods
fwait
xor
call
cli
pop
fistpl
sbb
or
mov
incl
xchg
mov
cltd
cmp
mov
pushl
lds
addr16
out
rolb
lcall
add
inc
xlat
loope
jbe
push
pop
stos
stos
jo
shll
in
lret
and
in
dec
hlt
and
clc
add
xchg
leave
arpl
std
pop
inc
or
ffreep
sub
mov
xchg
inc
test
ss
cwtl
adc
es
xor
incl
xchg
neg
loop
push
rol
push
int
and
fsts
add
rcll
cwtl
push
dec
loope
lret
ljmp
xor
xchg
arpl
inc
cmp
mov
pop
cmpb
test
mov
out
mov
inc
jmp
lcall
sbb
mov
in
dec
pop
mov
xor
inc
mov
or
in
outsb
inc
pop
loope
mov
cmc
orl
mov
xchg
mov
ljmp
lret
aaa
mov
daa
nop
rol
push
icebp
aas
aas
out
mov
mov
adc
mov
sbbb
inc
cmc
mov
xchg
add
fsubs
dec
sahf
jg
scas
out
xor
stc
mov
xchg
fs
ljmp
lods
fs
pop
mov
fwait
mov
sarl
cltd
imul
loopne
test
ljmp
or
mov
sbb
dec
pop
pusha
jo
or
cmp
cli
aas
cld
cld
loopne
incl
mov
xchg
adc
pusha
stos
fldcw
mov
sub
aas
pop
mov
add
dec
repnz
call
inc
mov
xor
sbb
inc
arpl
ja
addr16
rcrl
call
jge
inc
int
repnz
cltd
enter
int
ja
cld
daa
xorl
and
outsl
inc
mov
push
in
push
sbbl
inc
fwait
repnz
push
adc
add
cmp
pop
lods
test
rol
leave
cld
repz
and
mov
cltd
ja
cltd
adc
lcall
xlat
add
jne
mov
cmp
add
enter
call
mov
icebp
call
dec
dec
roll
pop
insl
sub
xchg
aaa
xchg
mov
lahf
jb
shrl
shlb
cmp
xlat
ret
xor
cmp
lcall
inc
mov
idivb
xor
or
push
and
incl
pop
push
rcrb
mov
rcl
push
gs
lcall
push
cltd
clc
std
jg
mov
cmp
sbb
and
out
dec
dec
xchg
fimuls
jno
xor
jbe
std
add
mov
jp
in
fdivrp
arpl
cmpsl
lock
loopne
mov
push
jmp
push
lahf
cwtl
xchg
cld
lret
push
imul
push
xor
jmp
mov
decl
adc
shrl
pushf
or
or
jns
dec
js
or
xchg
add
jno
add
xchg
sub
push
movsl
test
mov
or
xchg
sahf
fsubl
movsb
cmp
dec
push
sbb
pushl
lcall
pop
jo
jmp
push
adc
sbb
das
xchg
cld
test
repz
push
pusha
es
test
and
cwtl
aam
jnp
xor
ss
decl
push
hlt
leave
fsubp
aas
testl
les
pop
shl
bound
arpl
je
iret
fcomip
or
jne
xchg
std
imul
mov
lea
imul
idiv
incl
test
ljmp
lcall
into
push
jp,pn
icebp
popf
xchg
out
clc
ljmp
mov
xor
push
pop
ljmp
sti
pop
mov
and
pushl
push
loop
inc
xchg
pop
lods
imul
add
or
jbe
leave
clc
lcall
sub
popa
mov
sub
gs
mov
push
loope
mov
adc
or
sub
pusha
mov
sub
add
mov
xor
movsl
xor
js
outsl
jg
mov
cmp
out
nop
sti
leave
push
add
push
jecxz
push
mov
sub
pop
add
jle
repz
dec
push
or
fildll
call
add
adc
dec
stos
or
or
cmpsl
add
ret
jmp
mov
mov
pop
fdivrp
jg
shll
int3
and
in
scas
loop
mov
mov
sbb
into
pop
jns
and
jmp
js
push
lock
adc
popf
cld
jne
xchg
orb
mov
lds
xlat
sahf
push
lea
cmp
rcrl
xchg
leave
push
lahf
push
jne
shrb
mov
scas
xchg
shlb
into
sub
push
lcall
sarb
jnp
sbb
mov
xchg
lock
repz
inc
push
mov
cmp
shl
cld
ljmp
cmpsl
jle
je
daa
shll
xor
dec
mov
jns
shl
repz
mov
outsb
insl
pop
testb
mov
xchg
lahf
mov
cld
mov
rcl
lods
sbb
repnz
cmc
xchg
and
scas
add
xor
loope
or
jmp
call
add
pop
or
xor
mov
call
mov
adc
mov
jmp
out
call
mov
push
push
call
data16
xchg
js
subl
lods
dec
sub
mov
enter
mov
pushf
and
stos
fmuls
jae
xchg
les
into
xlat
sbb
inc
and
incl
data16
pop
adc
ja
and
cmpsl
ds
ds
mov
cwtl
mov
ljmp
pushf
daa
cmp
add
cmpsb
aas
dec
xchg
imul
ja
insb
hlt
stos
jbe
imul
pushl
pop
push
pop
test
push
or
test
je
cmp
xchg
out
mov
push
add
push
xor
xor
out
pusha
mov
pushl
jmp
adc
mov
repnz
jle
sub
insb
cld
lods
jno
adc
decl
in
mov
add
in
movsl
and
mov
and
decl
mov
lods
in
push
sbb
aas
and
cmpsl
leave
pop
dec
sbb
mov
ljmp
pop
ficoml
sub
lds
aaa
pop
shrb
push
xchg
sbbb
idiv
in
pusha
gs
push
inc
cld
sub
ds
out
cmpsl
movsb
stc
cmpsl
pop
popl
cltd
lret
pop
xor
lcall
scas
fldl
sub
lahf
xor
cmp
mov
outsb
mov
sub
push
ss
adc
dec
push
lds
and
fwait
jo
xor
outsb
hlt
mov
and
les
dec
fcomi
jl
mov
pop
cmc
scas
and
sahf
jge
push
es
decl
sbb
and
mov
fucom
stos
repnz
orl
push
inc
mov
nop
rolb
adc
jge
xchg
ljmp
jb
cmp
adcl
fsubl
addb
int3
repnz
inc
or
lcall
sbb
rcrl
addr16
ljmp
rcrl
vmaxsd
xchg
xchg
cwtl
jle
dec
jb
outsl
add
mov
jg
mov
lret
stos
pop
nop
arpl
in
xchg
xchg
je,pt
rcrb
ljmp
xchg
add
adc
adc
cmpl
into
push
in
out
sbb
sub
incl
push
movsb
xchg
push
test
xor
dec
testl
repnz
adc
xchg
aad
ss
adc
pushl
outsb
mov
lret
fimuls
inc
or
push
addb
clc
lret
xchg
fisttpl
out
and
adc
pop
hlt
outsb
inc
push
lods
imul
hlt
jmp
mull
jle
mov
test
mov
push
icebp
ljmp
aam
mov
xor
mov
cmpsb
push
ljmp
out
sahf
insb
mov
cld
stc
mov
jmp
fnstsw
pop
jb
xor
insl
and
pop
push
dec
cltd
xorb
sarb
mov
stos
fstp
in
mov
xbegin
lds
and
sub
mov
cli
mov
adc
and
mov
xor
in
sbb
push
cmp
call
jmp
shrl
out
push
stos
scas
lea
dec
lret
inc
xor
mov
mov
mov
pusha
outsb
jne
xor
negl
xchg
lock
out
call
adc
sub
jnp
lds
call
into
sbb
pop
dec
inc
jle
out
dec
sub
repz
pop
or
out
fisubl
xchg
cmp
test
sub
pop
scas
jnp
fwait
xchg
or
in
mov
lock
rcr
cmp
sub
addb
leave
jno
decl
lock
mov
jns
and
sub
mov
decl
testb
push
and
xchg
pop
jns
hlt
xor
aas
in
mov
pop
loopne
jecxz
or
lret
cld
repnz
inc
mov
xchg
sbb
mov
dec
and
int3
xchg
and
ss
xorl
lods
imul
push
pop
adc
or
incl
adc
jmp
xchg
dec
pop
mov
sub
es
jle
pushf
fsubp
decb
arpl
sbb
dec
cmovb
ror
dec
dec
add
rcr
pop
cmpsl
jae
lock
xchg
js
inc
jmp
mov
pop
outsl
mov
mov
mov
push
mov
or
push
sub
inc
push
mov
push
push
xor
cmp
push
or
orl
xor
ds
cmp
xchg
mov
or
push
js
outsb
add
mov
mov
xor
mov
rorb
in
sub
cmpsl
aam
push
sbb
in
or
adc
inc
or
mov
repz
out
daa
mov
jmp
aad
sbb
pop
xlat
outsl
sub
rorl
test
push
adc
inc
push
in
in
fnstenv
mov
in
inc
lods
inc
bound
and
cmp
cmp
or
outsb
lods
lcall
test
jmp
rcll
dec
or
movsl
sbb
into
or
xor
mov
mov
lcall
mov
sbb
divl
jne
mov
pop
ljmp
call
sahf
pusha
pop
cmpsb
popa
sbb
int
mov
ljmp
movsb
cmp
into
mov
pop
add
jmp
mov
out
push
add
pop
cld
jbe
mov
lock
in
bound
into
pop
decl
and
dec
add
sbb
dec
nop
xchg
push
in
mov
ret
in
decb
and
fs
mov
pop
aad
inc
iret
ljmp
loope
enter
cli
xor
adc
push
inc
in
and
insb
pop
loope
call
jmp
repnz
outsl
pop
aas
inc
xchg
fimull
or
and
aas
call
bound
outsb
sbb
and
or
loopne
mov
and
mov
cmpsb
incl
add
cmp
test
dec
cmp
jno
mov
add
jmp
adc
sahf
cld
xor
push
xchg
push
and
pop
add
movsl
sarl
push
mov
mov
xchg
insl
les
call
stc
sbb
testl
pop
imul
xor
enter
cltd
jae
cmc
testb
incl
pushf
mov
aad
out
lcall
mov
cmp
fwait
andb
cmp
outsl
cli
sub
fsubrp
mov
xor
sbb
test
sti
decl
cmp
sbb
daa
test
popa
into
sub
pusha
mov
pop
call
cmp
das
rcrl
cmp
cwtl
and
mov
mov
jo
decl
xor
and
out
enter
sbb
decl
add
ljmp
jno
movb
sub
mov
shlb
rcrl
jp
cli
aaa
adc
js
sti
mov
enter
mov
mov
frstor
fisubrs
add
std
and
and
pop
jg
sbb
sbb
push
pusha
inc
cwtl
cmp
xchg
gs
add
decl
dec
je
ja
push
sahf
fidivs
out
pop
js
jle
icebp
sahf
jecxz
sub
imul
incl
fimull
mov
lods
pop
sarl
loop
sbb
or
lcall
push
jl
xchg
push
into
mov
sbb
ds
loopne
sub
mov
ss
pop
incl
pop
xchg
pusha
stos
bound
adc
pop
mov
or
jbe
je
push
insb
mov
cli
test
aaa
imul
jae
cli
push
add
pop
stos
push
mov
mov
inc
and
cltd
bound
ljmp
xacquire
add
adc
outsb
lcall
and
in
push
sub
loope
mov
loope
scas
mov
repnz
dec
mov
adc
pop
sarb
fstl
inc
repz
mov
bound
add
sbb
std
cmp
dec
dec
add
pop
inc
mov
and
mov
fsubrl
or
push
lret
mov
notl
aas
cld
loope
sub
xor
aam
cld
pushl
stos
jbe
cld
in
rcl
repnz
add
dec
push
stos
pop
dec
decl
or
mov
and
fs
sarb
popf
push
ret
cmp
ljmp
jecxz
and
jns
mov
push
push
fstpt
pop
shrb
pop
xchg
fldcw
sub
xlat
cmp
testl
roll
inc
call
pop
inc
ja
mov
cltd
call
xchg
movsb
push
rorb
repnz
outsb
dec
adc
mov
not
push
lret
mov
pushf
push
push
or
inc
inc
call
ret
mov
daa
sti
nop
jns
cmp
data16
out
sub
stc
ret
mov
xchg
mov
imul
push
fcmovnu
add
lahf
cmc
inc
dec
stos
adc
fwait
mov
sbb
sti
pop
dec
outsl
lret
clc
lcall
dec
cmp
pop
mov
push
adc
popf
int3
lea
fildll
sub
sub
sub
ja
faddl
mull
mov
mov
outsl
add
push
add
dec
adc
pop
daa
pop
mov
lcall
jl
in
ja
cli
mov
bound
test
daa
jae
lret
mov
sbb
fmul
inc
sub
jge
xchg
pop
sahf
mov
js
call
xchg
clc
sub
xor
icebp
aas
pop
scas
and
int3
cmp
push
iret
in
decl
jecxz
add
pop
sub
and
ficoml
mov
xlat
bound
pop
fsubrs
fdivr
mov
loop
cli
loopne
repnz
cmc
ret
fldl
pop
lea
incl
in
mov
outsb
dec
mov
add
sbb
les
mov
mov
in
mov
push
lcall
testl
push
sarl
decl
dec
xor
aas
push
je
sbb
mov
push
dec
mulb
daa
nop
aas
fldcw
mov
push
aaa
lea
jne
and
hlt
and
decl
sub
js
in
sub
sbb
cld
out
js
lahf
jp
pop
adc
call
inc
adc
adc
and
sbb
aas
mov
ja
sbb
imulb
mov
jns
mov
addr16
xchg
call
lret
inc
sbb
imul
pop
mov
dec
filds
pop
aam
daa
push
push
aam
sub
lcall
and
mov
dec
xchg
adc
aas
mov
in
inc
movsb
cs
pop
stc
fs
mov
and
into
mov
test
adc
pop
out
push
mov
call
add
lea
das
loopne
sahf
pop
js
ljmp
fsincos
adc
dec
mov
decl
xchg
dec
adc
jmp
fldenv
cli
xlat
leave
or
out
mov
test
mov
rclb
dec
adc
push
stos
mov
fnsave
stc
notb
pop
into
andl
dec
cmc
push
mov
ljmp
rcl
sbb
test
push
mov
xor
mov
dec
ret
jle
decl
loope
movsl
rorl
inc
sbb
mov
dec
pop
mov
scas
cli
mov
das
pop
or
cld
mov
cs
shrb
mov
sahf
imul
jl
in
mov
sbb
enter
stc
inc
xchg
in
pop
push
cs
test
lods
pop
js
fisttps
mov
xor
lret
rorb
enter
rol
and
ljmp
push
call
jb
cld
or
sbb
adc
sbb
incl
dec
jno
dec
inc
in
leave
add
imul
mov
in
cmp
lcall
adc
fdivrs
call
or
jns
cmp
jmp
and
cli
in
sub
fcomip
fwait
push
sbb
repz
lret
into
mov
call
nop
movhps
jo
mov
in
iret
adc
inc
subl
out
cmp
insb
imull
inc
lahf
mov
inc
add
or
sbb
xlat
fs
jne
inc
aaa
mov
outsb
xlat
cs
call
mov
mov
fidivs
add
jl
out
jne
mov
xor
pop
lret
mov
mov
test
mov
sub
imulb
lcall
cmp
add
pop
rclb
adc
loopne
cwtl
shll
fsubl
push
add
lcall
lods
aas
or
sbb
out
icebp
pop
in
cmp
add
cs
lcall
fs
aam
mov
push
xchg
cmp
jg
das
add
decl
push
cltd
or
xor
inc
pusha
inc
adc
xchg
sub
mov
ljmp
pusha
test
dec
mov
movsb
add
sbb
pop
push
or
and
xchg
jmp
jae
les
lcall
mov
stos
stc
shrb
rorb
cwtl
xor
out
incl
sub
out
mov
push
mov
or
jns
std
jle
ljmp
out
mov
add
lahf
mov
cmpsl
neg
cs
sub
mov
movsb
cmpsb
mov
dec
mov
jmp
movsb
add
lcall
mov
sub
bound
ret
xchg
jle
dec
push
cld
add
shll
cmp
ljmp
enter
jecxz
rcr
mov
and
mov
mov
xor
jg
adc
in
outsb
sbb
imul
popf
inc
ljmp
jmp
cmp
lods
and
and
jb
or
out
aad
fs
loope
push
fidivrs
mov
loopne
out
movsl
scas
ja
dec
lret
xorl
jnp
in
ljmp
es
repnz
icebp
xor
sbb
lods
sbb
shrl
sbb
adc
xchg
call
jo
pop
and
add
lods
or
push
xor
cmp
call
icebp
xchg
adc
or
adc
inc
cmp
mov
mov
ljmp
pop
xor
lock
cmp
cltd
loope
adc
aam
push
and
fmull
mov
fsts
incl
jmp
into
adc
and
add
dec
ljmp
mov
sub
adc
idiv
inc
call
jg
pop
or
aad
sbb
int3
addb
adc
jnp
incl
cmp
adc
sarl
inc
lret
cmp
or
adc
adc
popl
lret
hlt
addr16
mov
cmpb
add
jg
push
sbb
aaa
jg
aad
int3
cli
add
jg
push
ret
mov
xor
jne
shlb
mov
push
sbb
pop
ljmp
jno
sub
in
hlt
cmp
test
loope
popa
addr16
lds
push
jl
decl
fs
mov
les
in
dec
imul
pop
push
lahf
xor
sub
cmp
shll
and
xor
popa
enter
sub
fnstsw
lds
jmp
mov
and
int
xchg
inc
sub
rclb
inc
add
cmc
dec
or
iret
int
pop
in
xchg
xchg
mov
ret
xchg
or
mov
xchg
out
gs
xor
dec
add
mov
sbb
jp
incl
lds
test
inc
fistpl
aam
fmuls
xchg
adc
fsubl
js
dec
fisubl
je
decl
dec
push
addr16
and
jmp
mov
dec
mov
or
jb
int
test
decl
adc
aas
lret
add
jg
shr
and
jg
cs
out
mov
inc
mov
cli
stos
jl
xor
ss
inc
das
jecxz
xchg
jmp
push
xor
jle
movsl
push
stos
scas
insb
and
pop
stos
jmp
mov
stos
andb
imul
or
loopne
cmp
sub
inc
mov
xchg
sub
pop
in
dec
aas
fdivl
adc
cltd
in
and
pop
add
clc
aaa
scas
dec
stos
aas
out
cli
mov
ljmp
sub
pop
xor
cmp
mov
leave
push
roll
shll
aas
mov
popa
std
cmpsl
mov
push
sahf
mov
jle
cmp
vmovq
clc
pop
sub
xchg
call
aam
das
rorl
outsl
cmp
movsb
popa
cmp
jno
nop
jbe
jle
jbe
rcl
cwtl
je
ljmp
mov
sub
cld
and
cmp
dec
xchg
lcall
inc
lcall
mov
mov
and
xchg
stc
outsb
mov
scas
mov
xor
cmp
call
stos
mov
pop
pop
jecxz
push
addr16
sub
imulb
dec
cwtl
mov
loope
mov
mov
call
jne
aaa
call
mov
pop
jp
xchg
std
fldenv
repz
jne
sti
imul
ljmp
jg
cmp
clc
xchg
sbb
dec
testl
stc
outsl
and
adc
cltd
in
sub
sahf
xchg
xlat
ret
mov
fcos
incl
mov
inc
out
xchg
ret
xchg
and
out
lcall
push
nop
mov
mov
fnstsw
inc
stc
in
dec
mov
xor
je
addr16
andl
sub
rcl
outsl
push
inc
mov
in
pop
push
adc
mov
shl
out
shlb
and
lcall
push
jmp
addr16
push
ret
push
pop
jecxz
jno
in
jbe
ja
dec
data16
sub
dec
push
cli
jg
sub
mov
dec
shll
push
mov
jl
xchg
movsl
add
insl
xchg
mov
ja
xchg
roll
xchg
int3
es
popa
sbb
fistpll
push
call
jns
mov
mov
pop
sbb
pop
xchg
push
repnz
xor
mov
sbb
js
jno
lds
jl
std
stos
mov
cmpsb
mov
loopne
add
ljmp
fsubrs
mov
sbb
lock
mov
xlat
xchg
lock
call
xlat
out
ds
in
inc
enter
sti
push
fstpt
mov
pop
xchg
icebp
inc
xor
inc
mov
jae
jge
xchg
arpl
pop
mov
pop
inc
call
mov
or
cmp
lcall
fdiv
arpl
sub
push
pop
adc
mov
adc
imul
pop
out
enter
dec
hlt
fimuls
cmpsb
or
mov
push
mov
lcall
fwait
roll
pusha
lock
lods
aas
inc
pop
jno
cmp
push
xor
call
imul
es
fwait
cmpsb
jle
aad
aam
inc
mov
sub
scas
jmp
mov
dec
pop
aaa
and
xor
outsl
mov
or
dec
push
cmp
cs
incl
mov
loop
int
adc
jmp
mov
inc
stos
sub
dec
ret
lock
mov
leave
mov
pop
push
or
jae
and
xor
ljmp
xor
cld
mov
shlb
pop
shlb
sbb
mov
and
into
dec
lcall
int
push
repz
cmc
push
out
out
mov
xchg
ret
js
loope
scas
push
push
mov
jmp
jbe
sub
inc
push
test
dec
in
cmp
cltd
pop
lret
inc
fucomip
mov
ret
xor
cmp
jne
pop
pushf
add
loopne
inc
xchg
mov
sub
mov
xor
mov
cwtl
add
sti
fcomip
call
mov
pop
movsl
in
xchg
push
arpl
int3
push
fisubrl
and
dec
and
pop
lock
mov
icebp
daa
and
inc
loopne
pop
faddl
ja
std
out
add
ljmp
mov
sub
dec
icebp
in
and
fs
imul
lcall
jp
add
jp
mov
mov
incl
mov
test
add
idivl
inc
and
js
jns
xor
jg
jp
or
call
adcb
xor
adc
pop
cmp
fcmovnb
dec
movsl
push
lret
hlt
in
mov
decl
xor
dec
xchg
lret
test
test
stos
cli
and
push
popa
mov
movsl
scas
mov
es
ljmp
fs
xchg
stos
jns
dec
cld
hlt
pusha
shll
lahf
aas
scas
pop
faddl
movsl
enter
mov
jbe
andb
out
inc
and
decl
push
lret
jo
in
rol
sub
add
mov
mov
gs
adc
decl
push
adcb
ljmp
xor
mov
adc
ds
and
xchg
in
mov
push
cmp
rcrl
aad
fcomip
call
dec
popa
pop
cmp
rolb
sbb
push
clc
out
nop
lcall
incl
adc
add
push
pop
out
jg
xchg
dec
jno
arpl
inc
lcall
cmp
cli
test
outsl
cwtl
push
xchg
jmp
jno
iret
cmp
jge
pop
add
pusha
push
pop
xchg
scas
in
ret
jp
stc
icebp
push
or
aaa
repz
outsl
push
push
adc
rol
test
mov
ret
pushf
jbe
xchg
sahf
or
adc
mov
ljmp
add
cmp
ljmp
push
dec
jo
xchg
movsl
inc
sbb
decl
cli
lea
jbe
inc
mov
decl
jb
int3
push
jle
leave
mov
adc
ss
jmp
call
mov
out
xchg
ficoml
iret
pop
test
inc
stos
stos
cmp
cltd
stos
xor
mov
call
sahf
add
sahf
call
cmp
mov
dec
dec
loop
cwtl
in
inc
push
out
add
sub
movsl
or
enter
fnstsw
dec
insl
mov
sub
ljmp
ljmp
dec
addr16
or
clc
repnz
cmp
lods
xor
ds
add
pop
fimull
adc
push
je
and
sub
into
aam
and
lock
lret
stos
add
fisttpl
mov
cmpb
xchg
jns
sub
xchg
jle
ret
ss
or
adc
js
xchg
cmp
sbb
xchg
filds
jecxz
movsw
dec
mov
sahf
pop
and
sbb
lcall
inc
fdivrp
outsl
cli
incl
cld
lea
enter
les
data16
inc
orb
lcall
adc
lock
leave
adc
fldenv
lea
dec
jae
ret
lock
std
pop
subb
mov
stos
pushf
fistpl
test
out
clc
call
dec
and
imul
sub
int3
push
rolb
inc
scas
xor
xchg
fnstcw
jecxz
scas
add
sub
push
or
iret
sbb
outsl
cmp
dec
xchg
pop
inc
in
mov
pushl
mov
xchg
popf
mov
xorb
pusha
xchg
jbe,pt
cltd
push
dec
or
jnp
das
call
jbe
fcoml
push
test
fidivl
call
ds
adc
or
or
mov
subb
mov
dec
and
bound
push
clc
cmp
jo
adc
subl
or
iret
or
and
jp
or
and
into
gs
bound
mulb
divb
shrl
out
aam
cli
pushl
mov
mov
out
mov
out
nop
mov
mov
shll
je
pop
into
sbb
sub
dec
movsb
ficoms
xor
xchg
lods
in
decl
cmp
maskmovq
testl
xor
outsl
in
int3
ret
ljmp
push
das
jecxz
out
fcom
mov
inc
out
outsb
fs
sub
pushl
or
negl
inc
nop
inc
pop
jge
push
movsb
mov
lods
mov
decl
mov
inc
imul
mov
or
mov
jns
xchg
cmpsb
mov
pushl
dec
mov
and
in
dec
fs
dec
xchg
sbb
out
push
sar
js
or
in
aam
adc
jae
fists
les
pop
cmp
dec
ljmp
insl
or
fsubrs
jg
mov
mov
mov
sub
sahf
inc
xor
jb
negb
push
test
mov
pushl
dec
out
inc
or
adc
add
mov
pop
mov
fcomp
imul
pop
push
mov
enter
out
jb
xor
push
sub
add
pop
and
dec
out
adc
xchg
push
scas
mov
jle
mov
and
bound
js
dec
cmp
je
cmp
xchg
pop
jne
xor
xorl
adc
iret
mov
cmp
into
jle
cmc
imul
orl
mov
test
scas
jge
xchg
xor
inc
jg
test
push
jne
call
loopne
rcrb
lock
cmp
jp
mov
or
call
sti
pop
dec
push
xchg
inc
sbb
cli
pop
pop
sbb
adcl
stos
sub
sbb
push
jle
add
lcall
or
in
push
mov
jae
xchg
call
jb
inc
int
inc
sbb
fldcw
xor
mov
or
xorb
push
sub
nop
sbb
jmp
cld
jle
insb
mov
into
jp
dec
and
sarb
sub
insb
dec
outsl
rclb
add
sbb
pop
lods
adc
fcmovnbe
add
or
cmp
scas
mov
jo
cmpsb
cmp
shll
xor
pop
inc
stc
aam
ljmp
cli
jne
pop
cmp
jecxz
push
mov
lea
aam
xchg
pop
mov
in
in
pushl
mov
xor
cmp
xchg
cli
mov
test
push
in
fstl
pop
int
push
jmp
or
jp
adc
lcall
mov
or
pop
clc
shlb
stos
pop
push
cwtl
jo
inc
inc
aad
dec
jnp
mov
lcall
jmp
mov
push
mov
dec
jge
add
out
aad
sbb
inc
aam
sbb
jge
dec
mov
adc
out
sub
pop
sbb
pop
jns
mov
daa
inc
js
jnp
mov
bound
ljmp
xor
dec
fiadds
jnp
popf
call
jae
cmp
push
mov
adc
incl
add
data16
je
ret
sbb
dec
sub
mov
insb
jbe
adc
ljmp
adc
cwtl
iret
inc
data16
into
xchg
mov
pop
aad
aas
call
mov
jns
dec
xchg
mov
daa
lock
sub
jbe
push
scas
push
ss
push
fcmovnb
cwtl
mov
xor
jns
add
ret
add
mov
jne
movsb
insb
add
incl
faddl
in
roll
fwait
test
imul
jmp
gs
push
mov
leave
xchg
dec
rcrb
jnp
lcall
mov
stos
mov
iret
mov
sub
cmpb
xor
push
dec
jp
push
mov
pushl
add
adc
ja
sarl
dec
mov
fsubs
mov
fsqrt
test
dec
ret
sahf
jne
pop
and
imul
mov
lret
cmp
cmpsb
pop
ret
call
mov
ljmp
mov
into
clc
das
cmp
call
adc
inc
daa
or
je
fsubr
out
mov
nop
cld
mov
call
sub
fcos
mov
in
shrb
mov
shrl
pop
test
add
ljmp
mov
pop
lods
rcrb
lcall
outsb
push
inc
mov
push
xor
into
cmc
pop
add
jb
in
mov
push
ljmp
out
cmpb
cmp
es
loope
pop
pop
std
jl
loopne
dec
xchg
xor
shlb
in
cmp
add
lods
repz
in
in
cmp
jp
pop
cmp
mov
out
enter
stos
pop
lods
andl
cmpsb
pop
mov
popf
aaa
adc
xor
shll
call
mov
data16
add
xor
fcomip
nop
sub
push
and
jo
ds
pop
pop
iret
lea
adc
jg
pop
sbb
inc
fbld
mov
xchg
cs
xor
popa
int
add
ss
mov
inc
dec
bts
mov
mov
pop
aad
in
mov
sbb
mov
sbb
or
push
mov
pop
jno
dec
push
cmp
xchg
out
out
insl
int3
mov
pop
lea
cltd
call
dec
pusha
cmp
jmp
popf
mov
scas
mov
sub
rcrl
in
stos
das
pop
jmp
rclb
jg
xchg
daa
les
push
xchg
lods
imul
xchg
dec
ljmp
call
adcl
pop
pop
scas
movsl
pusha
mov
add
outsb
mov
sahf
int3
pop
fstp
lock
xor
mov
fwait
dec
lret
ret
or
mov
sbb
aaa
popa
and
inc
mov
dec
xor
mov
in
ret
xchg
sbb
sar
lcall
sbb
fsubr
inc
sub
sahf
inc
pop
mov
xor
cmpsl
mov
jg
aam
xchg
and
je
xchg
fistps
clc
xor
xchg
pop
mov
bound
aaa
push
cld
inc
xchg
sbb
out
es
push
cmp
out
adc
stos
lcall
gs
sbb
data16
test
daa
cltd
or
bound
jno
ja
movsl
sbb
mov
sar
lcall
repnz
sbbl
adc
jmp
lcall
dec
in
push
mov
scas
mov
call
js
sub
lcall
adc
mov
mov
test
sar
ss
add
mov
adc
or
jbe
jmp
pushf
testb
shll
mov
mov
dec
mov
fsubs
ret
insl
dec
xor
cmp
mov
add
test
jmp
mov
push
aas
xchg
stos
sbb
shlb
std
jno
add
pop
add
xor
repz
xchg
inc
hlt
loopne
mov
sub
xchg
sbb
test
lret
xor
pop
cmp
xor
jo
sbb
ret
into
jge
push
in
pop
test
stos
insb
sub
jg
inc
out
dec
shrb
fwait
icebp
cs
cltd
or
xchg
inc
cmpsb
mov
sbbb
pushl
arpl
cmp
jle
std
imul
in
inc
sub
xor
or
clc
call
cld
clc
cmp
jge
vxorpd
xchg
andl
mov
lock
and
outsl
ret
and
dec
pop
fbstp
into
sti
push
call
hlt
and
jno
mov
arpl
xchg
movsb
out
pop
subb
imul
clc
loop
decl
cltd
ret
push
push
cmpsl
inc
sub
ficoml
adc
movsb
gs
mov
jp
dec
int
lods
lock
decl
mov
movsb
clc
and
lret
popa
mov
dec
into
jmp
xchg
mov
push
sbb
or
sti
xchg
das
xor
and
popf
xchg
jecxz
push
out
adc
incl
add
in
inc
insl
add
pop
mov
sbbl
cmpsl
pop
cmp
lcall
negl
fnstsw
add
xchg
dec
mov
adc
push
js
outsl
lret
nop
stos
mov
mov
mov
jmp
fildl
jns
mov
mov
call
mov
xchg
xchg
push
mov
mul
xorl
dec
push
jnp
stos
or
scas
mov
push
mov
push
int
push
bound
and
bnd
xor
loop
pop
test
scas
clc
inc
mov
bound
lods
add
mov
xor
decl
sub
lret
aas
lret
cmpsl
push
movsb
ret
adc
cmp
loop
aaa
ret
in
mov
call
ljmp
cmp
jg
cmp
push
arpl
popa
notl
cwtl
jnp
ja
ret
push
push
dec
add
sbb
fwait
dec
and
and
lcall
sbb
or
stc
inc
mov
adcb
in
sbb
ljmp
xchg
arpl
mov
sbb
mov
out
dec
fs
mov
ljmp
fs
sbb
loopne
bnd
push
ds
arpl
fstp
mov
incl
sub
ljmp
push
mov
call
mov
mov
jle
data16
outsb
int
jecxz
jae
aad
ret
jle
pop
movsl
or
pop
fcmovu
pop
outsb
test
andl
ja
subb
jecxz
dec
loop
scas
daa
pushf
pushf
sub
and
ds
ds
jg
mov
inc
ds
mov
jle
lret
pop
test
jmp
adc
push
lea
call
and
lds
dec
sbb
sti
xor
jb
mov
sub
push
inc
fidivrl
loop
inc
fisttpl
or
dec
or
jg
pop
repnz
rcll
in
cmpsb
movsl
ljmp
jnp
les
xchg
ss
xchg
adc
xchg
adc
testl
add
jnp
clc
hlt
shl
pusha
movsb
inc
stc
mov
mov
fistl
fcomip
jle
and
cmp
mov
in
or
sbb
arpl
xchg
push
sbb
test
int
mov
loopne
rcrb
pushl
adc
and
dec
lock
and
cmp
fnsave
mov
adc
xor
and
mov
scas
xchg
sbb
push
mov
adc
and
jmp
xchg
xchg
jmp
sub
or
cmpsb
pop
adc
test
jbe
cwtl
movsb
mov
pushf
lock
in
test
lcall
dec
out
or
das
jae
xchg
inc
add
cmp
incl
sahf
loop
stc
insb
fcompl
xor
daa
mov
pop
xlat
xchg
int
jmp
lcall
push
test
fistps
mov
sub
pop
sub
dec
scas
mov
sub
call
jecxz
rolb
sbb
cmp
xor
dec
cli
insl
stos
cmp
sub
lea
decl
push
xchg
adc
jmp
xlat
fbld
push
lock
cmpsb
ret
test
js
and
decl
push
inc
jno
jb
push
out
jg
es
mov
push
mov
jo
aaa
test
jl
gs
scas
stos
mov
pop
testb
push
divl
pop
cmp
cld
add
outsl
sbb
adc
imull
loope
xchg
test
cmp
sbb
loope
orl
insl
xchg
push
sbb
std
push
cmp
pop
sbb
incl
outsl
fisttpl
inc
mov
into
pop
pop
test
jno
ja
sbb
mov
pushl
mov
cmc
jae
adc
mov
in
cwtl
cs
jbe
sahf
inc
sub
cmp
xchg
jbe
dec
movsl
pop
jg
imul
aaa
insl
inc
ljmp
inc
mov
ja
shrl
mov
sub
sbb
aam
xchg
jmp
cmp
push
js
sbb
rorb
cmp
icebp
inc
or
sub
nop
test
test
in
lea
mov
dec
inc
jno
mov
js
mov
mov
shlb
push
das
or
adc
dec
adc
pcmpgtd
inc
add
push
popf
adc
lods
lock
incl
fdivr
mov
mov
hlt
jne
imul
addr16
push
out
incl
or
dec
loop
inc
jmp
mov
add
in
inc
out
xor
jns
fmuls
cmp
xchg
and
arpl
ret
ss
in
or
xor
test
xor
call
outsb
mov
ljmp
fstpl
sbb
add
jne
add
pop
fiaddl
decl
out
rcrl
push
in
mov
hlt
and
and
pop
xchg
jmp
scas
hlt
loop
or
push
sahf
xlat
imul
scas
ret
adc
pop
pop
mov
sub
outsb
pop
enter
call
ficoml
sub
call
xlat
stos
xor
or
in
test
add
clc
xor
push
movsb
inc
inc
lret
push
lock
dec
and
fld
orb
inc
andw
sti
ljmp
inc
pop
xorb
fnstcw
in
insb
test
cld
in
xchg
pop
loopne
cmp
ret
lahf
into
stos
das
fcoms
mov
movsl
mov
xchg
mov
pusha
cli
xor
movsb
add
es
add
outsb
outsl
cwtl
jb
das
pop
scas
dec
clc
and
mov
or
and
lods
add
fisubrl
or
mov
xchg
add
and
ljmp
push
inc
pushf
and
ja
jmp
movsb
test
insb
lret
gs
cs
int3
aaa
mulb
cmp
sub
push
es
cmpsl
sub
mov
sbb
ljmp
aaa
ja
arpl
adc
jno
int3
repnz
dec
out
nop
clc
cmp
mov
pop
mov
dec
mov
repnz
cmp
or
sub
xor
inc
fcomps
sub
inc
dec
mov
mov
adc
andl
sub
loop
subl
lcall
or
roll
mov
sarl
lcall
and
xchg
hlt
jo
pop
not
xchg
xchg
inc
aam
and
out
add
loope
mov
incl
arpl
movsb
pop
aas
outsl
lods
imull
jmp
inc
icebp
cltd
sub
jnp
adc
cltd
fsubl
pop
pop
jl
cltd
mov
cltd
dec
int3
jns
cld
pop
scas
xchg
xorl
aas
push
mov
out
adc
call
dec
ret
shl
xchg
lods
nop
aaa
adc
push
xor
mov
out
cld
mov
xchg
idiv
jge
xchg
jge
cmp
xor
roll
imul
cli
cmp
or
pushl
out
push
mov
into
fisttps
mov
shlb
jmp
mov
decl
lock
xchg
pop
xor
mov
sbb
jg
imul
push
jecxz
stos
cwtl
nop
cmp
clc
mov
shlb
in
jne
xchg
movsl
hlt
cmp
pushl
push
jle
notb
xchg
inc
push
xchg
andl
sti
repnz
movl
mov
sbb
sbb
fldl
incl
roll
sbb
add
sbb
cmp
jp
add
popa
fiaddl
mov
std
dec
cli
jb
cmp
lahf
jae
cmp
ds
push
dec
mov
or
xor
mov
inc
cmp
xchg
cmp
movsb
mov
int3
popw
push
or
les
fcomip
jge
cld
cli
xchg
js
lahf
cmp
jg
adc
mov
jle
add
sbb
lcall
aad
cmpsl
sbb
pushf
mov
bound
bound
jge
cli
movsl
divb
mov
shr
aad
xlat
pushl
mov
ljmp
xchg
mov
xchg
sub
in
test
jns
decl
push
dec
pop
fnstsw
dec
and
stos
jae
push
sbb
lock
shrb
decl
addr16
cld
es
aaa
mov
ret
or
imull
xchg
mov
mov
mov
inc
out
mov
clc
inc
push
add
inc
mov
jmp
lret
mov
adc
sbb
mov
or
shlb
mov
lret
xorb
arpl
adc
call
mov
pslld
adc
pop
aas
xchg
jns
fistl
clc
insb
inc
push
pop
and
lcall
mov
pop
jnp
jp
scas
bound
inc
xor
mov
xorb
decl
sub
fstps
js
loopne
fwait
mov
jl,pn
inc
cmp
sub
mov
cmc
dec
dec
jle
sbb
pop
push
add
jmp
and
sub
xchg
inc
mov
insl
xchg
push
push
std
push
push
adc
push
mov
add
les
fdivr
jmp
cmp
hlt
sahf
adc
xlat
pop
push
lcall
sub
in
inc
jg
icebp
mov
pop
adc
pop
imul
call
sbb
xor
push
inc
cmpsl
inc
je
dec
fidivl
dec
jl
lds
xor
add
push
and
decb
into
enter
sbb
ja
cs
mov
ljmp
adcl
dec
lahf
scas
jmp
fildl
xchg
incl
subb
sub
xchg
sahf
sub
inc
imul
xor
jo
lcall
arpl
cli
jge
iret
pushf
mov
stc
push
pop
sbbl
mov
icebp
mov
lcall
jnp
pusha
mov
in
mov
out
in
insl
jp
cmpsl
mov
push
xchg
sti
add
scas
pop
sbbl
inc
mov
adc
int
aam
dec
int
cs
in
and
addr16
sub
dec
inc
aas
mov
push
fdivs
pop
push
and
jmp
aad
test
dec
xor
xchg
loop
mov
cmp
ljmp
lcall
lahf
xor
movsl
sbb
mov
jmp
mov
push
pop
mov
shlb
ret
inc
cld
pushl
sub
mov
mov
inc
stos
xchg
ljmp
outsb
cmc
mov
cli
cltd
dec
jno
lret
lret
xchg
mov
mov
call
mov
xor
in
push
test
adc
xchg
adc
push
aas
sti
icebp
xor
clc
pop
lock
fsts
jne
das
mov
clc
in
mov
mov
outsl
jb
jl
mov
sbb
out
bound
sbb
rclb
mov
loopne
sbb
dec
push
cmpsl
add
sub
dec
hlt
sub
call
sbb
xor
add
mov
xor
pushl
xchg
rcll
sbb
or
add
jp
mov
mov
incl
adc
add
inc
pop
xchg
xchg
imul
in
sub
jbe
xchg
jge
inc
push
dec
imul
jg
cmp
push
xchg
mov
jmp
clc
lods
lret
gs
aam
adc
mov
aam
push
jo
xchg
or
in
add
ret
xchg
dec
movsb
cltd
inc
add
cli
inc
adc
jb
cmpsl
or
addr16
loope
jecxz
xchg
rcll
lods
stos
mov
fbld
mov
cmp
insb
mov
outsb
pusha
cs
jbe
fidivrs
icebp
int3
xchg
mov
mov
xor
adc
mov
mov
daa
cmp
lcall
pop
data16
push
cmc
and
mov
cwtl
pop
push
hlt
mov
sbb
mov
push
add
push
insl
mov
sar
mov
bswap
push
mov
rcll
jb
ret
addb
in
andb
cmp
add
mov
in
daa
jno
xor
testb
jne
ret
ljmp
dec
ds
call
loopne
mov
clc
push
jecxz
xchg
icebp
pop
mov
imul
dec
xor
imul
mov
aaa
in
pop
adc
hlt
incl
lahf
adc
jl
sbb
aam
inc
mov
pop
xchg
pop
jg
mov
into
insb
test
fisubrl
enter
xchg
imul
add
data16
or
cs
lcall
xchg
movsl
xchg
add
lret
test
adc
mov
add
xchg
dec
sbb
incl
jns
add
add
push
fucomp
fimull
movsb
test
mov
in
or
aam
xchg
call
or
in
jmp
pop
lods
imul
mov
xchg
sbb
and
adcl
out
ljmp
hlt
push
push
outsb
mov
sbb
outsb
adc
icebp
lcall
mov
data16
fisttpl
sahf
sbb
aaa
cltd
cmp
jmp
cmp
scas
xchg
andb
stc
dec
push
out
pushf
lods
sarb
fldl
call
movsl
cltd
stos
dec
jno
lock
pop
pop
dec
in
ret
xor
in
movsb
mov
add
ljmp
mov
mov
jmp
jp
mov
or
call
push
xchg
add
fcomi
jb
pop
test
mov
inc
in
or
insb
adc
fcomip
cmp
xchg
and
lret
push
outsb
sbb
cmc
mov
pop
adc
ljmp
mov
notb
or
cld
mov
outsl
rcr
ja
gs
dec
xor
jbe
push
jb
call
add
sbb
pusha
pop
lret
inc
mov
jb
out
ljmp
out
fnstenv
or
shlb
lcall
push
ffree
push
mov
cltd
in
pop
shl
test
das
pop
sub
cs
cmp
int
daa
lods
je
sbb
xchg
cwtl
add
mov
mulb
incl
repz
push
out
loope
mov
rcl
into
aam
std
inc
aas
out
push
pop
mov
add
daa
mov
adc
dec
mov
in
aad
ret
decl
mov
imul
or
gs
call
mov
loopne
mov
xor
das
dec
sub
stos
in
pop
enter
mov
jne
je
dec
and
ret
and
cmp
and
test
out
mov
cli
push
lcall
add
repz
sub
call
lcall
jge
jmp
ljmp
jg
mov
push
cmpsb
jle
fsubl
loope
adc
sahf
xchg
mov
sub
cmp
cmc
mov
ljmp
sbb
loop
out
cltd
push
ja
or
jae
mov
dec
aaa
decl
stos
push
aas
arpl
in
lds
xlat
mov
ljmp
xchg
addr16
call
adc
push
inc
jne
test
push
mov
mov
jecxz
fsubrp
mov
subb
call
iret
adc
clc
sub
adc
data16
push
mov
imul
inc
shlb
cmp
out
mov
sub
xor
dec
inc
dec
ret
and
dec
out
ljmp
or
loop
daa
sbb
xor
jnp
aaa
and
sub
std
lcall
loope
mov
lods
mov
bound
xchg
leave
incl
inc
mov
jg
mov
fnop
fmul
scas
mov
imul
dec
pop
aad
push
int
ljmp
hlt
push
rolb
inc
pop
add
sbb
jmp
das
mov
cld
pushl
jae
insl
lods
inc
sbb
xchg
push
loope
fldlg2
hlt
cmp
push
mov
cmp
out
icebp
hlt
add
xchg
loopne
mov
rcll
je,pt
push
mov
pushl
jecxz
aad
not
mov
inc
mov
cmpsb
and
sub
mov
push
aad
adc
dec
aas
jns
idivb
xlat
inc
inc
sbb
leave
lods
repz
jg
test
fstpl
lds
add
jg
iret
sub
pop
sbb
cmp
movsb
sub
dec
mov
test
inc
add
decl
sub
mov
mov
lcall
rorb
lds
inc
cmpl
xchg
daa
jo
add
fcmovbe
aaa
in
mov
push
jns
decl
jl
add
xlat
xchg
scas
cld
lds
mov
stos
jmp
cmp
xchg
sti
clc
sub
mov
test
cmp
xchg
dec
stc
arpl
mov
fcomip
pop
insb
lock
pop
pop
pop
cmp
in
xchg
push
adc
pop
out
lcall
fsubl
adc
rcrl
mov
ljmp
ljmp
mov
dec
push
das
andl
ja
cmp
jmp
cmpb
in
rclb
xchg
push
outsl
jl
sub
push
add
rolb
lods
loopne
mov
mov
push
or
xor
adc
lcall
loope
lcall
aas
stos
clc
mov
or
xchg
aas
sub
out
imul
js
fwait
out
adc
mov
pop
push
testl
test
xchg
incl
out
pop
sbb
scas
stc
jmp
in
shrd
mov
pop
call
cli
lret
loopne
lcall
jp
jge
popf
jecxz
sbb
mov
fildl
es
test
cltd
das
and
xchg
jge
mov
adc
call
outsb
pop
loope
xchg
je
sub
mov
lret
out
mov
jg
add
dec
xchg
and
adc
out
inc
mov
aam
mov
add
pop
icebp
jmp
leave
adc
andb
pop
rdmsr
lahf
and
push
imul
js
adc
ficompl
fs
lret
mov
call
mov
sbb
incl
enter
insl
mov
mov
stos
arpl
rcll
incl
lret
cli
inc
xchg
add
mov
mov
inc
adc
mov
clc
sub
or
insb
es
add
call
add
cmc
xchg
jae
and
xchg
mov
mov
cmp
lods
xchg
dec
mov
rcrl
in
pushl
movsl
orl
pushl
xor
loop
rorb
enter
jne
lcall
cmpsl
cmp
pop
iret
lcall
add
data16
cwtl
inc
adc
sub
test
jb
repnz
in
lret
mov
imul
fisttpl
test
fstpt
jl
pop
add
cmp
aaa
andps
fildll
call
xchg
les
xor
incl
or
pop
mov
cli
pop
or
call
incl
mov
xchg
test
fistl
mov
cmpb
popf
xchg
gs
outsb
lcall
push
cs
out
jmp
pop
cmpsl
test
mov
adc
repz
ret
outsb
icebp
stc
sahf
sub
dec
cmpsb
scas
inc
fisttpll
popa
out
fstpl
cmp
imul
adc
stos
mov
mov
in
ret
test
mov
sbb
clc
lcall
inc
jle
imul
jmp
and
in
es
les
xor
or
fwait
mov
lods
xchg
sbb
out
adc
jg
mov
mov
pop
jne
push
icebp
jg
rorb
cmp
pop
or
pop
dec
out
out
mov
call
aaa
sub
jns
cmc
xor
test
arpl
imul
mov
into
scas
inc
push
jnp
addl
stc
xchg
sbb
mov
sahf
std
int3
fwait
sbb
repz
add
pop
mov
popa
aam
adc
ss
ljmp
outsl
in
cmp
ljmp
xchg
stos
negl
fisttps
sbb
pop
lcall
loopne
sarb
out
xlat
lahf
pop
mov
adc
js
icebp
add
or
jg
popa
adc
sbbl
nop
leave
ljmp
sub
sbb
popa
add
cmp
mov
push
sub
mov
fcoms
mov
adc
scas
test
xlat
pop
ja
mov
call
cmp
call
dec
in
lock
xchg
jns
fsubs
xor
mov
or
lahf
enter
aad
fstpt
dec
pop
scas
dec
add
mov
sets
loopne
pop
repz
adc
and
jbe
pop
mov
les
dec
out
mov
loopne
mov
repnz
scas
pop
popa
sub
adcl
sub
data16
mov
jg
lcall
inc
add
ret
das
cmpsl
pushf
cmpsb
fwait
sbb
push
or
adc
mov
or
pop
adc
jg
xor
pop
push
inc
xor
icebp
dec
repnz
inc
std
out
jae
sarl
shl
mov
sbb
shlb
mov
je
push
bound
pop
lcall
xchg
nop
rorb
int3
or
push
and
orl
sti
jp
add
mov
mov
jp
rorb
cmp
enter
xor
pop
jns,pt
pop
cmpsb
aam
addr16
sub
jmp
cmp
lret
in
das
push
out
cmpsl
iret
adc
jbe
sbb
lock
jg
push
shl
lret
and
mov
jmp
push
ja
and
mov
pop
je
jmp
jns
jnp
in
outsb
test
loopne
inc
or
subb
sub
jae
jae
fiaddl
movsl
dec
in
mov
clc
cmp
js
enter
jae
mov
pusha
subb
mov
mov
ret
repnz
loop
sbb
mov
inc
adc
inc
inc
cmp
xchg
sahf
jmp
movsl
in
int3
sar
sbb
push
push
icebp
jmp
inc
lret
push
adc
ljmp
imul
imul
jnp
aas
lock
mov
xor
insl
incl
dec
mov
mov
ja
js
mov
inc
fnstcw
adc
add
lcall
fldlg2
push
movsb
sbb
push
in
xchg
sbb
hlt
into
aas
xlat
and
jmp
add
in
inc
sbb
pushf
adc
sbb
pop
mov
jp
add
lcall
jnp
jge
jo
pusha
xor
sub
and
lea
jns
xor
data16
mov
mov
or
inc
flds
add
bound
scas
incl
adc
mov
icebp
xor
sub
call
insb
push
xor
testb
in
cmp
cmc
sub
adc
lcall
cwtl
nop
dec
push
push
ret
dec
add
lods
or
es
fdivs
add
mov
in
hlt
cmp
leave
mov
and
jecxz
faddl
or
jmp
imul
icebp
fwait
inc
xor
or
loopne
dec
repnz
sbb
out
mov
sbb
ss
bound
lea
idiv
lcall
test
xchg
lahf
sub
push
sbb
popf
mov
sub
data16
mov
xlat
hlt
pop
sub
bound
inc
and
out
test
pop
rol
dec
push
je
mov
inc
fidivl
xor
xor
xchg
testl
inc
pop
scas
test
repz
and
xor
cld
pop
roll
inc
sbb
dec
add
pop
stc
push
das
decl
xor
xor
and
mov
push
mov
cmpl
pop
leave
sbb
cmp
call
scas
movsl
in
add
mov
xchg
into
js
and
sub
test
push
jecxz
decl
sbb
inc
addr16
shll
xor
mov
push
adc
inc
fisttpll
jmp
adc
clc
sti
cmp
movsl
inc
push
mov
or
inc
cld
sub
jle
iret
movsb
dec
mov
cmp
mov
cs
sub
mov
cmp
fstp
dec
in
sbb
fiadds
pushf
xor
sub
pop
ljmp
add
dec
cmp
movsb
cmpsb
clc
mov
pop
loopne
adc
inc
inc
mov
stos
push
sahf
mov
add
cld
dec
pop
pop
lods
data16
pushf
cmp
dec
pop
xor
add
ljmp
fdivrs
and
jmp
int
decl
sahf
arpl
mov
leave
lea
andl
mov
or
lcall
decb
jno
jmp
adc
xor
jecxz
sbb
bswap
daa
call
js
pushf
mov
xorl
pop
ret
insl
aas
ror
insb
dec
mov
and
dec
mov
filds
cmc
push
shrb
out
mov
insb
loopne
scas
jl
jl
mov
inc
mov
jbe
xchg
neg
int
inc
lret
shr
push
int3
cmp
ljmp
bound
and
pop
repnz
scas
aaa
and
add
lahf
arpl
hlt
jg
and
das
push
inc
xor
push
sar
or
pmulhw
cmp
xor
push
iret
cmp
jg
out
in
int3
lret
and
push
or
sub
or
out
sahf
fmull
popf
pop
mov
repnz
sub
fdivrs
dec
ljmp
jl
incl
push
add
cmpsb
mulb
ds
fdivr
jg
xchg
mov
cs
push
out
je
mov
pop
or
je
sub
decl
loopne
dec
adc
jecxz
inc
push
daa
jg
mov
test
adcl
jp
insl
mov
xor
dec
out
mov
cmp
cmc
test
mov
cwtl
cwtl
cmp
arpl
inc
cmp
neg
jecxz
sub
mov
aad
inc
mov
mov
add
fiadds
call
mov
jmp
ja
mov
push
mov
rep
jge
aad
ja
mov
jle
dec
jmp
pop
aaa
xorb
es
add
pushf
sub
pop
mov
jp
jns
push
sbb
outsl
aaa
ficomps
mov
loop
stc
cwtl
cld
mov
push
xor
pop
lcall
xchg
dec
icebp
mov
xchg
dec
out
outsl
or
xchg
dec
test
pusha
in
xor
fcomip
pushl
sbb
xchg
fisubrs
aas
xchg
popa
mov
mov
shl
mov
dec
icebp
test
xchg
arpl
push
mov
xchg
pop
pop
mov
sbb
stos
in
mov
adc
and
fcmove
sbb
loope
xchg
cmp
sbb
call
jmp
xchg
cmc
xchg
cmp
fists
or
idivl
insb
jnp
jo
ljmp
fs
push
adc
imul
sub
pop
iret
xor
incl
test
jge
lods
xor
jnp
nop
mov
jno
and
push
test
ljmp
pop
cmpsb
loopne
fnstsw
stos
push
push
and
imul
stos
adc
and
pushl
pop
sbb
hlt
clc
mov
and
jl
addb
pop
pop
insb
fnsave
mov
in
std
in
mov
push
fcompl
xchg
pop
adc
neg
out
jg
and
outsb
lock
lcall
lock
push
rcll
nop
mov
push
adc
jle
jbe
leave
enter
cmpsb
cmp
call
loopne
loopne
scas
jbe
in
xor
gs
loopne
sbb
imul
pushf
adc
adc
jb
stos
std
dec
and
and
pop
ret
xor
es
arpl
icebp
call
int
stos
add
mov
push
dec
ds
scas
das
outsl
dec
jecxz
in
std
or
stos
repz
lcall
adc
pop
pop
out
stos
enter
fidivs
rcrl
add
popf
cmpsb
push
or
add
shrl
cli
pushl
setae
pop
cmp
imul
mov
sbb
jmp
dec
mov
sti
sbb
imul
mov
cmpsb
xor
cmp
push
or
cli
push
mov
inc
push
jns
cmc
inc
mov
fbld
decl
xor
mov
xor
and
jg
jg
clc
jbe
cmp
bound
mov
bound
mov
decl
mov
xor
stc
int
mov
mov
cmp
lcall
inc
xorps
sub
push
sub
sarb
loop
jbe
mov
test
decl
clc
loope
aam
xchg
ljmp
push
scas
mov
or
shrb
negl
add
outsl
cli
call
outsb
iret
je
mov
fs
fidivl
scas
hlt
push
sub
mov
ljmp
out
mov
int
sub
test
add
and
nop
js
icebp
cld
repnz
cld
decl
sub
mov
and
sarb
xor
dec
lret
cmc
lcall
lea
inc
enter
mov
xor
lahf
xor
push
or
popa
mov
mov
fcomip
mov
adc
nop
inc
fwait
pop
cmpsb
scas
ficoms
decl
mov
lods
in
xchg
push
mov
sbb
pop
xchg
dec
or
cli
mov
or
and
pop
ljmp
mov
ljmp
adc
dec
test
jbe
add
push
adc
call
adc
sbb
lcall
xor
adc
clc
adc
dec
sti
mov
cmp
add
mov
lods
push
push
dec
or
call
clc
mov
ss
jecxz
pusha
sti
pop
xlat
out
out
out
je
bound
xchg
xchg
bound
jp
movsl
adc
xchg
xlat
leave
icebp
cmp
out
jae
test
in
mov
and
ds
test
dec
cmp
out
aam
pop
shrl
jg
sahf
out
mov
shll
sbb
arpl
ljmp
pushl
dec
jb
enter
mov
je
cmpsl
orl
out
and
cli
sarb
jecxz
adc
mov
ljmp
in
flds
stos
sbb
pop
fcmovb
and
jne
daa
rclb
bound
cld
jp
push
stos
dec
cmpsl
mov
pop
or
insl
fldcw
mov
jp
int
sub
jg
es
iret
or
loope
mov
sbb
add
adc
loopne
out
or
jbe
test
inc
aam
loope
repz
xlat
inc
mov
out
xchg
and
xor
sub
cmpsl
jmp
js
ja
outsb
lret
pop
scas
ljmp
std
push
sti
pop
stos
ds
inc
nop
dec
jno
jo
add
bound
pop
push
call
mov
data16
pop
aad
repnz
es
call
push
mov
add
push
add
xchg
lock
in
mov
in
ljmp
mov
pushf
lea
adc
push
in
sbb
pusha
in
cmp
ljmp
fwait
call
and
and
popl
cmp
ds
mov
popf
test
rcrb
jg
push
adc
cmp
pop
mov
pop
fldenv
push
push
or
fnsave
push
pop
jne
jo
sahf
in
xchg
adc
inc
jge
call
mov
stc
scas
pop
lcall
cwtl
icebp
je
jl
or
outsl
push
lcall
cltd
and
fs
xor
or
popf
in
aas
int3
jbe
inc
cmp
lcall
ret
xor
add
dec
jae
enter
dec
daa
and
dec
and
inc
sahf
push
mov
mov
or
add
push
xchg
mov
icebp
popa
in
aam
add
idiv
jmp
pushf
int
aaa
adc
out
xchg
es
fidivl
les
jl
pop
inc
sub
les
pushl
icebp
xchg
pop
jmp
cmp
cmpsl
sarl
inc
or
inc
pusha
xor
cmp
jecxz
sar
call
pushf
ds
xor
lret
iret
mov
lea
mov
jmp
mov
enter
es
and
push
cli
loope
iret
sbb
ret
and
icebp
dec
jp
lret
das
push
andb
mov
lret
jg
call
adc
or
push
mov
sub
test
pop
hlt
int
mov
xchg
jl
xchg
stos
movsb
push
adc
add
out
dec
or
fisubs
das
dec
pop
mov
ss
cld
ljmp
push
int3
ds
jno
nop
or
fwait
jg
xchg
jp
in
push
xlat
pop
push
sbb
das
sti
cli
not
push
sub
xor
lcall
push
je,pn
pusha
pop
pop
inc
push
int
and
push
jmp
mov
insl
in
decl
movsb
mov
fcom
mov
ljmp
inc
out
into
lock
pop
rcll
dec
dec
mov
mov
sub
jno
xor
inc
mov
adc
out
push
mov
mov
out
popa
push
pushf
push
cltd
jg
testb
push
stos
push
stos
xor
jg
decl
fwait
sbb
and
roll
ljmp
add
lahf
inc
test
int3
or
pushl
push
dec
jle
and
push
jmp
mov
lds
sarb
loopne
aam
jbe
dec
push
dec
and
movsl
in
mov
mov
lret
and
aaa
mov
std
adc
cmc
mov
enter
jns
xchg
xchg
cmp
pop
bound
sahf
loopne
arpl
insb
popf
and
sbb
das
mov
outsb
jbe
inc
mov
jmp
mov
cmpl
fbld
adcl
in
repnz
jmp
inc
xor
pop
or
add
mov
mov
cmc
std
clc
insl
outsb
mov
les
pop
decl
lock
adc
sarb
dec
into
cs
in
sbb
inc
jo
stc
iret
sbb
jmp
or
cwtl
ret
aaa
mov
call
das
and
jecxz
lock
ljmp
lods
outsl
sbb
fwait
push
stos
shlb
jno
ret
iret
fcoml
jmp
mov
pushl
cmp
mov
into
pushf
and
cmpb
push
and
add
xlat
mov
xchg
mov
cmp
ja
lcall
mov
jne
adc
lock
and
adc
dec
repnz
cld
mov
lea
repz
sub
xor
pop
repz
jns
mov
xchg
call
insb
or
xchg
addr16
sub
mov
arpl
mov
insl
and
mov
mov
pushl
adc
test
in
ljmp
dec
push
nop
sbb
dec
mov
mov
pushl
pusha
stos
pop
push
cmpsl
and
mov
fnsave
out
sti
popf
or
or
in
mov
das
cmp
pushl
cltd
shll
lods
xchg
push
rclb
arpl
mov
cmpsl
pop
cmpsb
hlt
jo
mov
and
dec
call
sbb
lret
pmaxsw
jnp
inc
sbb
ss
mov
mov
cwtl
jmp
std
jle
pop
aam
int3
popf
dec
shll
inc
dec
clc
pop
inc
push
sbb
not
push
stc
mov
pop
incl
push
ret
addl
dec
lcall
push
inc
aam
out
insb
jmp
adc
xor
pop
sbb
stos
mov
pushf
xor
sub
adc
addr16
lret
push
cmp
call
pop
and
pop
fdivrp
jg
call
or
idiv
xor
mov
in
or
mov
dec
xchg
into
adc
je
or
iret
in
data16
es
and
xchg
add
cmp
add
and
lcall
insl
cs
add
addr16
sbb
xchg
adcb
out
rorl
shll
sbb
mov
rcrb
mov
lea
loope
loop
add
add
pop
stc
pop
hlt
arpl
std
jnp
pop
add
addr16
scas
mov
and
mov
dec
cmp
cmpsb
pushl
lock
jg
mov
shll
enter
fisttps
mov
sub
insb
ret
mov
int
scas
andb
nop
mov
jmp
lcall
setl
mov
mov
les
test
jne
jmp
xchg
scas
cltd
aas
cwtl
push
jmp
stos
xchg
dec
mov
xor
xchg
bound
or
xor
clc
mov
ja
push
sbb
cmp
push
or
cmp
jg
in
imul
scas
pop
testl
fiadds
xchg
jmp
jge
dec
jl
inc
sub
inc
sub
jns
aam
and
std
xor
mov
repnz
outsl
pop
fildll
inc
dec
xchg
in
xlat
lcall
or
dec
insb
decl
cmpsb
sub
lret
xchg
xor
gs
pop
into
stc
mov
xchg
and
mov
jae
xlat
sar
fldl
cmp
mov
sbb
je
sub
sub
jnp
cmp
arpl
dec
xlat
icebp
js
pushl
lcall
sahf
frstor
jno
cltd
out
cltd
sub
int3
or
call
mov
mov
sub
inc
out
test
pop
outsl
sub
jmp
xchg
lds
call
inc
inc
or
lods
fstps
xchg
push
fildl
fs
sub
mov
nop
ds
jmp
add
pop
adc
or
ss
incl
adc
sti
push
int
mov
xchg
or
xchg
aad
adc
jae
sbb
sub
pop
decl
push
jg
testl
mov
mov
sahf
stos
push
in
jbe
or
jmp
insl
sub
adc
movsb
scas
mov
xor
mov
repnz
ljmp
cli
outsl
dec
out
test
cmp
lds
fcmovb
xchg
inc
inc
inc
pop
dec
out
mov
lcall
testb
mov
idivb
ficoms
es
xor
mov
cmp
sub
ljmp
mov
cmc
inc
outsb
repz
ret
gs
inc
jmp
or
in
dec
mov
lods
das
dec
push
into
bound
xchg
jp
sub
or
fnstenv
lahf
pop
adc
ljmp
in
dec
cmp
andb
frndint
adc
jp
sbb
decl
cmc
shl
jp
pop
xor
faddp
pushf
ja
test
iret
lods
jo
out
call
inc
es
scas
fsubrs
jg
out
add
xchg
ljmp
cmp
add
ljmp
dec
nop
lcall
in
push
fxch
xor
adc
in
mov
mov
push
xor
imul
cmova
inc
lods
pusha
rcrb
lods
xchg
adc
int3
xor
jp
lcall
mov
fistps
enter
test
pushf
inc
ds
xchg
cmp
jg
dec
xchg
les
je
and
mov
and
jecxz
movsl
jge
repnz
pop
fsub
outsb
mov
mov
or
incl
mov
or
add
lds
push
pop
adc
mov
inc
adc
sbb
cmp
movzbl
stos
mov
add
test
aam
and
icebp
and
es
jl
arpl
cmc
arpl
dec
roll
repnz
and
cmp
testb
jg
inc
and
xchg
into
jne
and
js
adc
gs
xchg
addr16
or
dec
add
loope
sub
out
btrl
push
inc
mov
int3
jecxz
cmp
xor
sbbl
test
lcall
daa
sbbl
adc
push
xlat
pop
out
cltd
mov
dec
inc
dec
jb
sti
icebp
decl
xchg
out
mov
test
dec
inc
lods
ud0
lcall
and
ds
adc
icebp
loopne
adc
jp
mov
sub
pop
sbb
insl
inc
mov
aad
cwtl
dec
cwtl
popa
movsb
das
mov
jg
es
cmp
or
mov
dec
adc
out
and
adc
pop
fs
and
ljmp
mov
out
cmp
jmp
lods
sub
xchg
sarb
fcomp
lea
pop
or
leave
fidivs
mov
inc
scas
icebp
mov
and
lret
dec
add
add
pop
sahf
hlt
xchg
loopne
push
xor
jmp
push
icebp
xlat
pop
rcrb
cmp
jecxz
outsl
sub
cltd
lea
and
ja
jnp
decl
or
daa
outsb
mov
push
mov
sbb
loop
xchg
lret
mov
inc
clc
call
fwait
out
outsw
cmp
out
fwait
ja
imul
ljmp
add
mov
sub
push
inc
ja
fucomp
mov
lcall
insl
pusha
jl
cmp
jbe
icebp
pop
shl
jecxz
popa
jp
ljmp
cli
dec
pop
ror
test
int
sbb
jb
or
inc
insl
mov
jmp
pop
xor
sub
push
pop
lret
outsb
insb
add
les
std
not
xchg
call
add
cld
mov
inc
aad
decb
sbb
pop
mov
dec
cld
ja
decl
xchg
mov
sbb
clc
sub
mov
scas
jl
cmp
dec
adc
ret
incl
call
sub
mov
popa
mov
sbb
lcall
dec
jae
push
adc
mov
add
cmp
call
mov
lret
outsl
inc
inc
outsb
pusha
xchg
movsl
mov
test
or
push
test
out
push
pop
add
mov
add
sbb
movsb
ret
iret
pop
pop
xchg
inc
scas
xor
pop
xor
dec
adc
ficoml
xor
cmp
imul
push
pop
stos
adc
push
fdivr
fwait
loopne
andb
jl
nop
adc
or
addr16
ds
aaa
dec
mov
dec
popa
rcll
push
mov
mov
fcomi
mov
enter
out
adc
xchg
sbb
cmc
lock
or
pop
cli
addr16
enter
jg
inc
clc
ds
lock
sarl
mov
cmp
cltd
pop
lds
pop
add
push
mov
stc
sub
and
sbb
jb
es
outsl
mov
mov
inc
aas
mov
lcall
jg
les
and
mov
xchg
and
jae
jmp
incl
adc
pop
mov
outsl
stos
call
scas
cltd
arpl
jne
xor
test
dec
mov
aad
jle
fcmovnu
popf
xchg
and
test
test
cmpsl
sbb
jo
add
popf
jns
mov
mov
jne
adc
push
pop
std
push
pop
pop
adc
inc
adc
dec
inc
enter
mov
ret
inc
pop
and
push
mov
push
mov
inc
mov
lods
cmp
fstl
cmp
sahf
add
frstor
enter
mov
std
aad
mov
es
add
aam
lret
in
fmuls
lahf
cltd
jnp
cmpsl
pop
gs
inc
pushl
mov
and
ljmp
xorb
xchg
pop
mov
jmp
xlat
fwait
sbb
rcll
lret
cmp
jg
add
cmpsl
insb
mov
inc
jge
dec
loopne
das
pop
lea
mov
shr
xchg
lcall
push
out
mov
add
stc
ret
movsl
js
mov
jmp
into
jp
dec
jmp
inc
cmp
iret
add
push
orl
push
adc
mov
push
aaa
jb
and
ljmp
dec
pop
adc
cmpb
xchg
sub
push
push
push
add
test
ljmp
push
enter
out
and
ret
cmp
sbb
iret
or
aas
shlb
jmp
sbb
rcrl
fidivrl
xchg
fcmovnu
cmp
rorl
outsl
xchg
nop
pop
dec
aad
jae
jl
mov
test
arpl
xlat
or
add
cmp
push
ljmp
or
jecxz
sbb
lock
push
rcll
jmp
dec
jmp
ja
cwtl
jnp
inc
or
push
mov
mov
adc
pushl
lock
sub
insl
jg
imul
movsb
repz
fcoms
lods
xor
mov
xchg
test
incl
pop
imul
adc
xor
cmpsb
mov
std
stos
imul
lea
dec
adc
mov
jnp
cld
inc
aaa
and
inc
sbb
mov
test
movsb
rclb
and
or
insb
mov
test
pushl
and
ret
fsubl
add
rorl
mov
subl
sbb
mov
bound
and
and
sbb
repnz
add
sub
les
lahf
add
rorl
popf
jae
dec
add
sbb
pop
jecxz
push
loope
mov
call
jle
in
and
lods
iret
sub
sbb
cwtl
scas
add
push
dec
xor
shl
lret
ficoms
stos
mov
mov
mov
or
in
mov
ror
inc
loope
inc
arpl
decl
add
and
outsb
iret
push
xorb
dec
test
cmp
pop
xchg
lcall
in
leave
add
imul
pop
cmp
mov
ret
jnp
sbb
sar
mov
in
jge,pt
ja
lcall
idivb
add
test
call
mov
dec
orb
mov
lds
aam
jge
cmp
xchg
stc
mov
mov
pop
mov
pop
push
sti
mov
jge
sub
push
push
lcall
mov
movsb
mov
xor
cmpsb
or
outsl
adc
repz
decl
xlat
inc
inc
and
cltd
cwtl
mov
dec
movsb
jo
dec
pop
sbb
xchg
mov
ljmp
scas
pop
jns
jb
inc
adc
aas
jno
and
fwait
into
incl
int3
lret
insl
iret
push
dec
outsl
mov
test
push
or
dec
adc
scas
push
lock
test
pop
nop
out
mov
lret
and
call
sbb
ror
xchg
out
int
bound
in
mov
shll
ss
sub
pop
add
aad
and
fdivr
insb
into
push
pop
fdivr
inc
dec
pop
scas
xchg
add
cli
or
mov
out
jo
cmc
and
jnp
int
lods
mov
jmp
ljmp
cld
cmp
sbb
pop
add
and
hlt
and
or
jg
add
adc
jne
lret
mulb
add
cld
ja
les
jo
lcall
test
cmpsb
cmp
aaa
mov
jg
mov
gs
test
or
lcall
inc
das
rclw
aad
or
shrb
xor
xchg
pop
sbb
mov
clc
pop
mov
and
in
add
mov
inc
lcall
adc
pop
or
call
aas
push
mov
pusha
dec
xchg
rcl
movsb
test
repnz
pop
pushl
sub
adc
xlat
out
sbb
push
imul
inc
notb
aas
inc
adc
jmp
xor
jp
xchg
mov
fdivrp
das
inc
insb
inc
ret
mov
cmp
iret
mov
ret
lret
incl
adc
cmp
mov
sbb
outsl
clc
das
jbe
enter
sub
ss
movsb
and
cmp
push
repz
call
addr16
fcmovnbe
sub
jmp
ljmp
inc
divl
in
xchg
idivl
cmp
mov
bound
fdivs
jno
xchg
and
data16
jo
ret
loop
xor
pop
add
decl
int3
xchg
pop
push
test
adc
dec
cmp
jo
xchg
push
mov
cmp
iret
push
pop
adc
mov
and
adc
or
dec
mov
pop
and
fdivrp
pop
mov
xchg
lods
push
mov
or
ja
or
or
or
call
std
call
clc
dec
xor
ljmp
imul
xor
mov
stos
pop
aad
inc
cld
xchg
fwait
mov
or
sbb
int
call
inc
out
loope
fwait
cmp
icebp
data16
or
jne
sub
sar
lret
jb
ljmp
outsl
in
jnp
ljmp
and
sbb
sbb
xor
mov
mov
ljmp
dec
inc
cs
jmp
sub
jo
shlb
xor
lcall
je
push
pusha
add
shl
mov
jmp
mov
xchg
ss
jns
mov
inc
push
jmp
cs
sub
mov
je
into
dec
bound
pushl
mov
js
adcb
sbb
mov
jmp
push
pop
push
lahf
dec
xor
test
adcl
ret
sub
lds
clc
rorl
pushl
mov
sbb
sub
dec
and
into
mov
je
fwait
sarb
pop
jge
stos
push
das
clc
adc
cli
xor
es
repnz
fisubrs
inc
push
aas
fidivrl
movsl
lods
adc
lret
and
push
clc
mov
push
add
repz
fdivp
add
jmp
adc
cmp
test
lds
test
and
addr16
std
mov
mov
sbb
sbbb
es
sbb
enter
inc
mov
sar
dec
out
ljmp
divb
jle
mov
daa
xchg
mov
call
push
jle
out
dec
mov
cmp
pop
imulb
mov
sti
leave
mov
ret
call
cmpsl
jg
dec
sub
in
leave
sbb
test
out
xchg
push
adc
push
adc
mov
dec
mov
add
inc
mov
xor
pop
loopne
inc
adc
repz
stos
lahf
pop
dec
mov
push
jns
sbb
pop
mov
mov
dec
filds
andb
or
and
jg
pop
stos
fisubl
xchg
xor
inc
je
clc
sub
inc
ret
pop
sti
jg
out
call
jg
scas
inc
or
lea
fistl
enter
test
lcall
jg
xchg
push
mov
and
adc
lcall
pop
dec
out
test
call
fisubl
in
stc
std
adc
lret
push
jmp
inc
xor
aaa
flds
flds
pushf
push
xlat
enter
stc
nop
cmc
lock
sub
orps
outsl
sbb
dec
mov
ret
xchg
or
jp
in
adc
jnp
pop
cmpsl
subb
jmp
ss
xchg
fisubl
rclb
adc
fisubl
loope
incl
data16
pop
stos
and
push
lret
or
loop
jne
mov
inc
adc
popf
jmp
scas
rcrb
out
popa
jp
fistpl
jne
ds
push
subl
incl
fldenv
xchg
cmp
fildl
cmp
sbb
imul
cld
lcall
fcmovnbe
mov
adc
lahf
mov
jmp
jb
add
js
roll
enter
sub
or
dec
adc
mov
cmp
ljmp
loopne
or
lods
test
sbb
and
shll
pop
sbb
clc
sbb
imul
std
decl
std
jge
fmuls
xchg
test
decl
pop
in
sbb
cmp
xchg
inc
pop
mov
imul
scas
add
aad
sub
nop
hlt
mull
dec
ret
push
mov
inc
jg
call
call
xor
dec
out
cmp
fcoms
mov
shrb
adc
cmc
mov
mov
aaa
sbb
inc
mov
cmp
dec
call
xor
xchg
adc
imul
sub
push
in
fwait
mov
push
call
insl
clc
fnstenv
dec
jns
mov
loope
mov
or
pop
adc
arpl
push
out
add
push
inc
and
dec
sub
bound
movsl
dec
dec
dec
popf
lcall
call
cld
ljmp
cmp
mov
enter
jmp
repz
add
test
cli
xor
incl
mov
push
mov
popf
cmpsl
jecxz
sbb
leave
mov
bound
inc
and
loop
mov
pop
add
cmc
dec
cmc
and
pop
testb
mov
iret
insb
clc
incl
cld
pop
nop
xchg
scas
sbb
scas
inc
movsl
data16
movsl
ret
ljmp
rcl
rcl
or
cmp
das
pusha
mov
mov
sbb
fwait
ret
inc
mov
pushl
xor
ss
sub
cmpl
cmp
and
in
insb
mov
call
lcall
out
push
mov
mov
sbb
lods
das
xchg
mov
xchg
test
cli
lcall
dec
hlt
mov
jae
sbb
bnd
jno
mov
in
loopne
pop
roll
sar
adc
lock
loopne
jl
mov
aam
in
fs
movsb
addr16
pop
jmp
cs
cmpsl
xchg
dec
adc
int
dec
cmp
subb
dec
lea
fimuls
mov
ljmp
addr16
mov
mov
sbb
ret
in
sbb
jo
adc
jmp
fs
out
out
push
xchg
push
and
add
bound
pop
cmpsb
call
aaa
loopne
adc
cmpb
pop
and
dec
mov
add
gs
dec
cmp
or
jmp
or
xchg
daa
int3
or
ds
jg
testl
fsubrl
xor
lock
das
inc
mov
lea
jge
push
cmpb
push
add
aad
push
cltd
cmp
repz
aaa
xchg
ljmp
pshufw
jle
inc
shl
fwait
and
cs
adc
dec
cmp
cwtl
dec
icebp
and
xor
pop
push
ret
push
push
daa
cmp
std
xor
cmp
pop
out
sub
mov
xor
lret
push
jmp
scas
jg
sub
decl
pop
repz
cmp
jae
cmpsb
fwait
stos
js
mov
mov
out
hlt
jge
lcall
pop
pop
pop
sub
push
js
and
add
sbb
lcall
dec
xlat
call
ljmpw
stc
cmp
sbb
divl
sbbl
jno
popf
inc
add
jg
jg
xchg
lds
lret
jg
or
imul
xchg
mov
decl
adc
mov
pop
fsubrp
and
lea
xchg
fcomip
pop
into
cmp
sbb
pushl
fwait
cli
cmp
sbb
out
xor
in
ret
je
xorl
je
pop
stc
add
xor
pop
in
ret
lcall
pop
je
popa
nop
pop
ficoml
aad
and
fsubr
loop
ret
call
sbb
insb
inc
push
jmp
in
mov
popa
imul
pop
xlat
pop
incl
shll
xchg
push
pop
repnz
mov
jae
push
jl
rcrb
or
jmp
mov
or
jl
and
out
push
mov
aaa
cld
imul
cld
js
and
jnp
popf
cmpsb
mov
or
ds
test
inc
adc
stos
inc
popl
sahf
in
push
idiv
aas
push
cs
mov
or
add
jmp
data16
ljmp
arpl
inc
xor
bound
call
pop
pop
sahf
adc
lret
insb
mov
and
stc
stos
push
and
jge
out
xchg
movsl
shll
andl
cmp
xchg
imulb
mov
es
rolb
xchg
sub
pop
add
in
fimull
xchg
js
jnp
inc
test
ljmp
xchg
pop
cmc
cltd
push
cmp
dec
shll
aas
or
dec
stos
and
add
scas
push
mov
ljmp
sbb
ss
add
jg
or
mov
sub
xor
xorb
insl
add
pop
cmp
pop
test
popf
std
out
sbb
dec
inc
scas
popa
jbe
lcall
pop
mov
lret
inc
repz
pop
jl
dec
mov
jl
adc
xlat
std
cmp
mulb
pop
cmc
cmpsl
leave
xchg
jge
fs
cltd
pop
sbbb
push
sub
ljmp
clc
ja
popf
pop
out
xchg
das
sbb
mov
mov
jmp
incl
add
fs
mov
mov
adc
push
adc
cmp
lret
pushf
xchg
js
loop
sbb
cmpsb
add
hlt
fcomps
pop
push
fdivrs
cld
fldt
sub
sub
imul
jle
and
sahf
xchg
mov
inc
sub
jb
iret
icebp
mov
pop
push
ljmp
add
sub
and
lret
decl
loope
xorl
push
mov
xchg
inc
cwtl
xchg
es
test
fldt
pushl
cld
stos
and
push
mov
mov
inc
sahf
xchg
push
shll
ffreep
scas
sub
jp
loopne
call
negl
into
out
ror
pop
xchg
adc
call
lds
or
dec
pop
add
or
add
sti
sbb
pop
outsb
iret
mov
sbb
incl
mov
inc
sub
xchg
bswap
jnp
pop
addb
lds
jmp
and
sahf
fisttpll
cli
call
ja
scas
adcl
sar
test
mov
outsl
fadds
outsl
clc
pushl
int3
roll
scas
ljmp
push
pop
push
rorl
scas
lcall
out
call
sub
outsl
pushf
lret
ja
pushf
sbb
jmp
lea
shrb
es
mov
mov
mov
cli
loop
scas
lock
out
pusha
push
pop
xchg
scas
and
inc
movb
rcll
addb
or
mov
test
lret
inc
in
mov
xchg
xchg
add
adc
insl
jnp
add
mov
sbb
or
mov
repz
adc
mov
stos
pop
cmpsb
add
inc
out
loope
pop
push
pop
pop
sbb
cmp
ljmp
push
sub
sbb
add
xchg
in
cltd
cmpsb
add
mov
inc
popf
mov
in
push
out
cmp
cs
pop
movsl
adcl
loope
cld
iret
aad
cmp
jle
test
dec
dec
and
les
xchg
std
add
out
jmp
jns
clc
call
lcall
test
mov
dec
adc
inc
sbbl
mov
stc
or
dec
lretw
shll
scas
js,pt
inc
icebp
in
push
mov
in
rorb
out
push
mov
push
int3
in
and
lock
xchg
jmp
adc
pop
mov
push
jg
push
mov
jnp
jp
mov
adc
cmpsl
popf
fsubl
and
aas
iret
mov
es
test
inc
fs
out
and
lcall
jmp
nop
scas
inc
dec
and
xor
xor
loop
mov
cmp
jne
ljmp
fimull
sub
adc
or
lods
adc
outsl
mov
fwait
dec
pushf
adc
cmp
sti
and
ret
out
push
aaa
out
sahf
out
int3
mov
lret
decl
xchg
xchg
inc
fisubl
pushf
adc
mov
test
xchg
bound
xchg
hlt
mov
mov
inc
gs
outsb
jl
push
out
aaa
lods
xor
test
cmp
fildll
rorl
jmp
scas
jecxz
inc
jecxz
cs
cmpsb
xor
lcall
xor
push
fiadds
adc
clc
jmp
js
xchg
pop
aam
and
push
xlat
hlt
imul
cs
ljmp
punpckldq
andb
pushf
xor
xor
shll
fldl2t
scas
es
fnstcw
callw
pop
pushf
xchg
adc
pop
adcl
and
push
mov
mov
mov
xorb
mov
mov
shrb
lock
aad
mov
xlat
out
fs
sti
mov
in
aam
popa
xor
aad
mov
mov
jp
dec
jno
dec
mov
sub
clc
decl
pop
mov
and
push
xor
push
mov
cmp
pushl
push
cmp
pop
mov
mov
mov
xor
mov
sarb
js
dec
sbbl
ljmp
push
xor
and
cmp
or
and
adc
fisubs
pushl
mov
dec
and
int
mov
fsubp
bound
lret
sbb
insb
call
ljmp
push
lock
fmuls
out
sbb
ja
push
adc
push
cmp
mov
decl
cmp
outsl
or
cmp
jo
push
mov
in
push
cltd
inc
loope
mov
std
dec
lahf
dec
mov
outsl
adc
ror
adc
xchg
dec
je
scas
popf
sub
jae
adc
jg
addl
rcll
mov
mov
pop
cmp
daa
inc
push
ljmp
fwait
push
sbb
mov
leave
push
lds
call
jecxz
jle
add
fldenv
jnp,pt
dec
lock
loopnew
icebp
rcrl
or
adc
inc
incl
or
add
notb
adc
fiaddl
incl
test
and
loope
mov
sahf
add
mov
lcall
rcr
add
xchg
daa
scas
cmc
in
mulw
jb
adc
outsl
rcl
outsl
bound
mov
cmpsb
jne
push
adc
lret
xor
incl
cld
xor
mov
mov
data16
aam
push
mov
lcall
aad
push
mov
movsl
imul
lcall
mov
push
imul
or
lcall
fisubl
cmpsb
call
sahf
lret
mov
mov
lret
push
adc
pop
xchg
insl
lcall
mov
push
dec
sbb
adc
rolb
daa
test
call
clc
cmp
test
jmp
dec
leave
cli
das
pop
sahf
test
xor
push
and
dec
inc
sbb
rclb
call
ja
adc
loop
push
pop
xchg
cmc
xchg
call
mov
cld
mov
jo
loop
jmp
jp
jge
pop
lods
dec
outsb
push
inc
in
dec
cmpl
fldcw
sub
add
pushl
loope
bnd
test
and
cmp
popa
lea
cltd
inc
out
lods
pop
add
outsb
loop
sbb
mov
call
popf
dec
int
mov
rcll
push
inc
sub
xchg
cmpsb
push
and
push
cs
cmp
pop
inc
popa
icebp
mov
sar
pushl
push
sub
pop
lahf
cmpsb
pop
int
int3
sbb
shll
repz
mov
mov
pushl
push
je
sbbl
call
add
cmp
negb
ljmp
test
cwtl
js
xor
sarl
js
sbb
pop
push
mov
add
lock
cmp
stc
mov
stos
push
mov
mov
loopne
push
pop
out
out
lcall
call
lcall
in
mov
dec
inc
daa
jecxz
leave
add
pushl
jl
mov
mov
ljmp
cmp
lods
push
sbb
std
pop
cwtl
cmpl
hlt
int3
cs
xor
cmc
jmp
cld
jl
xor
push
es
mov
inc
repnz
fwait
adc
rcr
incl
and
mov
cmc
cmp
cs
push
andb
adc
test
in
or
ljmp
cmc
test
inc
xorb
pop
imul
out
jmp
dec
enter
test
in
incl
mov
add
fsubrs
out
add
fisttpll
jle
es
sub
cmp
incl
mov
loop
imulb
addb
xchg
push
nop
sub
fsubrs
cli
lcall
cmpsb
mov
lahf
setg
test
iret
lcall
add
hlt
pop
mov
push
ljmp
add
mov
inc
inc
xor
test
dec
jns
inc
sbb
imul
cmc
adc
dec
push
push
jl
in
mov
xor
jno
paddb
mov
mov
inc
std
jne
imul
jmp
ds
mov
jle
mov
mov
push
test
loopne
cmp
add
ror
fisttpll
movb
xor
insb
imulb
lcall
es
lea
sbb
sub
loopne
stc
mov
sbbb
xchg
incl
push
out
dec
fcomps
sbb
mov
dec
in
jle
xor
and
sub
ljmp
push
loopne
mov
and
push
dec
cmp
push
cmpsl
lcall
fistps
push
cmc
jns
aad
je
maxps
mov
lods
inc
and
cmc
inc
sti
les
cld
inc
push
decl
adc
or
shrl
push
addl
fbld
push
clc
imul
pop
icebp
call
dec
cld
jl
xor
pusha
dec
sbb
test
orb
mov
call
sarb
ljmp
rclb
arpl
int
and
imul
xchg
xor
insl
lahf
jge
int
fs
sub
jmp
xor
mov
ret
push
aam
sub
shll
cltd
jle
sbb
cmpb
inc
fisubs
jmp
repnz
mov
sbb
pop
mov
test
nop
jo
sbb
call
std
jmp
int3
jo
adc
jg
fsubr
out
mov
js
shrl
sahf
hlt
dec
push
add
incl
sub
shrb
or
call
jo
push
std
dec
dec
test
pop
jmp
fldl
jp
xor
push
mov
push
into
add
mov
mov
mov
divl
iret
lock
mov
sbb
lock
mov
pop
mov
and
ss
inc
pop
rclb
aam
dec
mov
incl
sub
loopne
ljmp
inc
jnp
inc
lods
cmp
ss
push
cmpsb
add
inc
cmp
hlt
pop
push
mov
ds
scas
enter
push
mov
es
and
dec
jecxz
lret
incl
loop
int
xchg
cwtl
pop
sbb
mov
incl
sbb
sar
adc
mov
and
les
cmpsl
outsl
shlb
sub
push
scas
fnstcw
and
xor
jecxz
pop
pop
lods
shlb
or
fdivs
pop
divl
cmp
jbe
in
das
les
insb
add
stos
pop
test
mov
dec
fwait
arpl
lret
cmp
lret
pop
mov
ja
jb
aas
push
sbb
mov
call
mov
lret
je
xor
cmp
shlb
lcall
jmp
stos
and
dec
sub
into
push
pop
aaa
in
push
and
sar
mov
lret
ja
sti
sti
pcmpeqb
pushf
xor
jecxz
jl
add
ret
ret
testb
out
inc
sub
dec
adc
lcall
mov
inc
dec
jle
ds
pop
repz
lds
test
pop
aad
dec
or
mull
ficoml
les
push
sub
fwait
pusha
outsb
fldt
sbb
loope
cs
push
sbb
ljmp
fwait
pop
repnz
cli
fldl
out
mov
inc
les
push
insl
shll
scas
pop
test
lods
sub
push
jl
in
mov
call
mov
orb
inc
mov
jg
loop
nop
ltr
pop
clc
cmp
cmp
jo
sub
jne
loope
adc
in
fldenv
repnz
pop
hlt
cli
pop
adc
loop
adc
push
lret
mov
inc
push
xchg
lcall
cld
jmp
fsubs
push
fildll
pop
jge
out
je
mov
in
lret
scas
xor
incl
fdivrl
lock
aam
fistl
cmc
cmp
fcoms
and
lahf
add
mov
test
int3
ss
cmp
mov
sub
dec
test
imul
sbb
xor
jg
mov
rolb
add
fisubrl
pop
repnz
out
pop
mov
ljmp
pop
mov
repz
scas
nop
mov
xchg
mov
lods
cwtl
popa
dec
mov
incl
add
out
inc
jge
inc
jmp
mov
and
int
sub
leave
mov
decb
sbb
mov
inc
out
clc
ljmp
dec
sub
hlt
outsb
cmp
pop
popf
movsb
shrl
je
icebp
mov
jmp
std
dec
mov
push
and
ret
push
mov
fildll
loopne
jmp
adc
push
in
inc
pop
rcr
mov
dec
push
and
decl
cli
popf
jmp
idivb
cltd
or
dec
push
mov
inc
adc
fnstenv
iret
push
mov
incl
and
xlat
dec
mov
out
das
mov
pop
dec
adc
ljmp
inc
cwtl
ljmp
jg
xchg
jge
push
adc
sub
mov
sub
lock
jecxz
test
fcmovu
or
adc
out
sub
adc
sbb
out
cmp
std
test
add
xchg
hlt
pusha
push
jnp
mov
sbb
out
inc
mov
arpl
jg
call
push
out
mov
inc
mov
jp
push
pop
jno
cmp
mov
int3
push
xor
adc
pop
cmc
add
xor
imul
and
push
loopne
push
leave
lds
fistpll
pop
rclb
ds
inc
dec
pop
loopne
imul
jecxz
mov
out
int
es
clc
dec
mov
in
inc
shl
ret
mov
decl
mov
lret
daa
out
sahf
pop
enter
jecxz
mov
and
and
call
incl
adc
jbe
test
std
rorb
popa
mov
add
jmp
clc
mov
mov
ret
add
cmovno
icebp
cld
push
ljmp
pop
js
jge
cmp
xor
int3
inc
xchg
ret
insl
pop
sbb
ljmp
xor
cmpsl
xor
mov
adc
out
xor
fcomip
lods
out
xor
inc
mov
cmp
sub
test
fdivp
call
adc
inc
es
lock
dec
dec
mov
sub
sub
jmp
shl
xlat
aaa
mov
je
pop
add
mov
ret
in
mov
ljmp
or
adc
arpl
js
inc
andl
lock
sbb
enter
jmp
push
mov
fistl
pop
sub
mov
lret
push
sti
das
cmp
aad
rcrl
pushf
notb
ss
lret
jmp
and
shrb
jno
xor
inc
jge
push
adc
cmp
bound
inc
aaa
std
mov
mov
pop
sub
and
cs
lcall
aaa
popf
mov
insl
call
jns
inc
loop
cld
jns
mov
incl
dec
push
mov
or
mov
adc
stos
mov
jl
pushl
int3
lds
enter
into
mov
movsl
sbb
sbb
xlat
cmpsl
inc
inc
push
mov
idiv
push
int
push
shlb
mov
stos
cmp
and
sbb
mov
pushl
js
mov
fs
jns
outsb
cltd
in
addl
loopne
push
or
mov
les
pop
xor
mov
mov
movsl
mov
jns
ret
into
pop
mov
mov
hlt
fbld
mov
roll
out
shll
inc
cmp
adc
test
jne
aam
int
enter
pop
lret
pushl
loope
outsl
das
or
mul
inc
es
xchg
mov
inc
daa
pop
popa
sub
or
jmp
inc
xor
movsl
mov
std
out
imul
je
xor
mov
out
scas
inc
mov
pop
std
jns
dec
pop
sti
lods
scas
pop
std
mov
leave
pop
cwtl
pop
fdivr
jmp
enter
sub
aam
pushf
cmp
sbb
jo
iret
in
inc
aad
loopne
out
fdivr
decl
fldenv
dec
jne
lock
inc
mov
aad
and
adc
out
jmp
outsb
or
xchg
dec
pushf
arpl
mov
loope
inc
inc
in
cmp
addr16
and
jmp
stos
and
nop
pop
lret
dec
call
push
jns
outsl
mov
xchg
es
incl
ss
mov
mov
aas
idiv
call
cmpsb
pop
cli
and
cli
iret
mov
xchg
sub
loopne
add
inc
and
sbb
dec
jmp
cmp
jle
cmc
jne
adc
pushl
std
pusha
mov
int3
mov
jns
jne
cmp
daa
jmp
lock
fistl
jns
fidivs
cltd
fcomps
popf
shl
jle
push
lds
aam
outsb
aas
pop
jmp
ljmp
push
in
inc
push
lea
adc
call
sbb
shrb
or
sarb
mov
call
lds
call
xchg
inc
scas
mov
clc
jp
sub
push
je
addr16
pop
lock
fcomip
jle
jo
jp
js
test
cmp
jnp
cmp
pop
sub
call
icebp
fstps
test
pusha
sarb
decl
dec
dec
pop
std
push
xchg
or
xlat
rclb
int
incl
mov
test
mov
or
sbb
xlat
imul
incl
cmp
and
xorl
filds
rorb
push
vpshuflw
or
xor
xchg
push
push
pop
std
jge
pusha
adc
iret
pushf
mov
and
fpatan
je
andb
mov
or
les
add
xor
pushl
lcall
mov
shl
and
pop
sti
inc
sub
insb
test
push
ljmp
push
add
add
ret
aad
lods
pop
in
jno
mov
mov
clc
movsb
pop
mov
ljmp
in
pand
scas
ljmp
mov
fidivs
xchg
xchg
insb
cld
add
std
jmp
hlt
mov
xchg
push
or
movsb
dec
add
mov
std
arpl
les
pop
ljmp
sub
xchg
aas
mov
pushl
dec
pop
testl
cmc
inc
mov
sub
test
adcb
lcall
xchg
add
mov
inc
loop
call
sbb
cwtl
mov
rorl
mov
sbb
out
pusha
dec
cmp
jg
stos
je
mov
in
movsl
aam
sub
jnp
loope
dec
mov
jecxz
or
imul
ret
mov
mov
push
add
pop
repz
cmpsl
cltd
leave
push
push
test
jg
ljmp
sti
stos
ljmp
test
icebp
mov
lods
loope
addl
pop
cmc
and
jne
or
mov
lea
popa
mov
mov
lock
or
mov
je
or
mov
jo
das
cli
add
out
aam
decl
cmp
jne
loope
push
pop
xchg
sub
sbb
push
jl
into
pushf
adc
mov
cmp
es
enter
jnp
aam
js
cmpsl
pop
insb
cmp
divl
sub
ja
cwtl
rclb
fldcw
lcall
shlb
ja
push
mov
jne
repz
enter
xchg
push
incl
lret
popf
test
call
push
and
push
xchg
sbbb
ret
xor
arpl
lds
lock
fnstcw
cli
push
sbb
pusha
lahf
pop
jmp
xchg
insb
pop
pop
push
mov
jl
lds
sub
lahf
adcl
out
xchg
jmp
stos
jmp
and
cmp
ret
pop
sarl
fst
adc
xlat
inc
ret
ljmp
decb
xchg
fs
flds
stc
mov
mov
mov
xor
loop
push
jbe
xchg
inc
outsb
and
fwait
mov
mov
jae
push
icebp
inc
enter
incl
or
ret
hlt
je
push
test
sbb
cltd
dec
fdivrs
jns
daa
lods
jmp
imulb
mov
daa
pusha
mov
adc
shr
fidivs
decl
sti
mov
jmp
das
pop
add
fcompl
and
lcall
clc
jg
decl
sub
dec
add
jp
outsl
arpl
mov
decl
pop
cli
insl
xor
and
scas
cmc
lret
and
jmp
push
or
fmuls
insl
sti
filds
jmp
shlb
orl
xlat
std
out
inc
or
pop
mov
add
in
xchg
adc
jp
mulb
xchg
shrl
sbb
mov
adc
sahf
jp
test
push
scas
pop
push
pushf
addr16
and
push
fs
cmp
out
sahf
sub
and
jne
and
cmpsb
push
movsb
mov
inc
jnp
popf
int
inc
mov
daa
nopl
jle
outsb
out
dec
mul
in
testb
data16
cmp
ljmp
pop
scas
xchg
or
mov
loop
bnd
cli
mov
sar
decl
xchg
mov
jnp
push
lcall
lods
fmuls
fcmovu
mov
cmp
dec
pop
dec
mov
lock
push
movsb
inc
mov
test
cld
fsubrs
mov
lea
enter
in
sti
sbb
pop
shll
fisttpll
inc
shlb
scas
pushf
pop
xchg
xchg
test
xchg
shrb
sti
das
cli
jmp
jge
pop
aam
fidivl
dec
push
add
mov
jo
xor
xor
test
call
jnp
pop
xlat
dec
ja
xor
movl
pop
cmp
adc
mov
dec
ljmp
andl
roll
cmp
inc
xor
dec
adc
es
aaa
xor
outsl
call
adc
xchg
push
cltd
gs
and
dec
push
es
ds
xchg
roll
pop
mov
and
out
js
in
dec
inc
mov
inc
into
out
lock
lcall
lods
push
mov
and
dec
push
test
testl
fcmovnb
scas
mov
icebp
subl
pop
jo
sub
imul
xchg
cltd
xchg
add
mov
cli
arpl
aam
xchg
rcll
fnop
sar
jae
inc
cmp
pusha
sbb
mov
and
sub
bound
mov
pushf
jle
out
and
aad
out
loop
xchg
int3
mov
adc
call
popa
cmc
stc
pop
fcmovnu
pop
pop
es
repz
sbbb
lret
mov
add
cmpsl
cmp
fidivrl
test
sbb
les
inc
inc
ret
dec
sub
jne
pop
fsub
mov
jmp
mov
aas
sbb
mov
sti
cmpsb
mov
leave
xor
jmp
dec
ljmp
stc
push
sti
out
inc
lds
cli
nop
repnz
insl
iret
jns
test
fcomp
push
sbb
inc
dec
ljmp
xchg
push
sub
cmp
lods
imul
lcall
dec
mov
mov
dec
mov
pop
xchg
in
ljmp
call
lock
xchg
xchg
inc
pop
push
mov
fisubrl
push
mov
add
test
xchg
mov
xchg
mov
and
cs
call
and
pop
pop
imul
jo
jge
pop
push
add
xchg
sbb
jb
dec
mov
xchg
jbe
xor
jp
cmp
fadds
pop
pop
test
lods
loop
jbe
pop
mov
jb
ja
lahf
ret
fsub
sbb
jge
mov
mov
sub
push
pop
xor
shlb
xor
jae
push
cmp
in
fldcw
lock
decl
mov
rorb
out
dec
sti
jl
sti
dec
cli
mov
aaa
pop
pop
adcb
mov
pushl
cmp
dec
fldt
test
jge
pop
inc
scas
dec
push
sbb
mov
mov
jne
cmpsl
pop
fisttps
mov
dec
sbbb
mov
int3
sub
orl
mov
ljmp
sbb
in
jg
push
fdivl
mov
sub
popa
jno
ljmp
xchg
fwait
cs
rcll
dec
data16
or
or
out
idiv
incl
jb
lret
in
aam
icebp
xchg
out
test
outsl
lods
xor
rcll
mov
jg
jnp
cmpsb
stc
add
push
pushl
lret
cmc
mov
cmp
xorl
pop
cmp
incl
sub
loop
in
rcr
mov
gs
flds
sbb
xchg
icebp
jmp
loopne
and
xchg
add
out
push
inc
pop
iret
addr16
pop
je
xchg
pop
cld
pop
ljmp
repnz
or
xchg
pop
js
push
aaa
arpl
sub
mov
push
mov
mov
inc
test
addb
in
mov
ret
mov
push
and
les
loope
sbb
jle
mov
arpl
ficoms
ljmp
movsl
add
push
call
dec
aas
jns
jmp
arpl
inc
add
cmpsb
addr16
mov
in
nop
andb
sti
rorb
out
mov
adc
stos
mov
call
push
popf
idivb
xor
sub
js
lds
jae
cmp
fistpl
sti
frstor
and
adc
cmc
jmp
mov
cld
inc
xor
push
clc
out
xor
fmul
fistl
cmp
out
xorb
dec
sbb
xchg
push
or
jp
lret
out
idiv
les
je
mov
cmp
in
fcmovne
hlt
or
jmp
mov
mull
paddw
lcall
idiv
test
cmp
loope
inc
clc
xchg
out
or
or
imul
jp
cli
sub
jge
arpl
cmpb
xlat
out
fwait
in
aas
xor
out
and
js
add
lcall
int
lds
icebp
jno
pop
hlt
lods
dec
dec
imull
push
nop
mov
and
lcall
or
and
ljmp
or
cli
jne
push
inc
mov
mov
jae
lret
gs
icebp
scas
out
aam
jns
push
cltd
scas
cmp
loope
out
push
movsb
sub
sbb
addl
popa
shl
je
cs
inc
jnp
sbb
mov
jg
aas
lret
int3
dec
jb
push
fbstp
das
js
cltd
inc
xchg
mull
dec
cmc
push
add
pop
icebp
decl
xchg
pop
dec
ret
pusha
movsl
cltd
mulb
dec
subl
dec
movsl
call
xor
lock
mov
data16
ds
ljmp
insb
out
jo
int3
leave
lock
movsb
in
lds
cmp
inc
cmp
or
jmp
jmp
loopne
push
outsl
cmp
nop
data16
adc
jnp
test
test
add
sarl
les
push
xchg
cli
xchg
inc
and
in
mov
dec
shlb
jg
loopne
push
mov
or
popa
incb
stc
sbb
inc
sarl
stos
jmp
inc
rorb
scas
js
jmp
nop
mov
mov
sub
cmpxchg
call
inc
push
jnp
test
mov
pop
push
pop
inc
lret
push
sbb
ficoms
pop
ud0
decl
mov
es
inc
ss
inc
xorl
loopne
and
dec
adc
aad
inc
mov
push
mov
int3
sub
xchg
ret
push
pop
popl
add
jg
push
sbb
xchg
sub
lcall
xchg
inc
or
inc
out
mov
rolb
dec
test
fldcw
or
xor
in
sub
xchg
xor
push
loop
lcall
dec
jmp
addr16
sbb
ret
mov
sti
andl
aas
cmp
jmp
fs
pop
scas
testb
shlb
movsb
aaa
jbe
jmp
loop
rorl
scas
imul
lods
lea
adc
je
pop
mov
cmp
icebp
lock
mov
pop
lret
sbb
push
mov
test
xor
jmp
xchg
push
pop
mov
daa
orl
push
iret
cmp
mov
mov
andl
idivb
insl
sahf
mov
es
decl
inc
add
arpl
cmp
addr16
sub
mov
jp
jle
dec
loope
call
rcrb
iret
push
adc
mov
mov
fcoml
cmp
or
inc
sbbb
pop
sub
push
stos
sub
in
lods
jmp
pop
mov
out
cli
dec
jbe
ds
mov
ret
mov
pop
pushl
dec
jmp
loope
xor
lret
jo
dec
dec
out
pushf
lret
loope
sub
mov
in
mov
xchg
adc
mov
stos
icebp
sub
decl
push
arpl
push
and
sbb
pop
nop
xchg
cld
call
ficompl
mov
fwait
enter
xchg
ljmp
cmp
mov
sub
scas
push
mov
push
adc
push
jecxz
mov
xchg
leave
inc
push
and
decl
inc
push
and
ficoms
sbb
dec
cs
jbe
cmp
lcall
push
sbb
outsl
mov
cmp
inc
das
jecxz
nop
mov
rsm
mov
fwait
cmpsb
mov
mov
pop
push
xlat
xchg
mov
leave
ljmp
add
xor
pop
mov
pusha
mov
mov
int3
loopne
call
mov
push
fisubrl
push
in
add
xchg
cmp
jl
mov
inc
cmp
mov
cmpsl
pop
movsl
mov
jecxz
flds
sub
ja
pusha
mov
or
out
xlat
mov
jns
ljmp
pop
inc
aas
cmp
fld
push
mov
mov
int
fcomps
mov
lahf
loope
orb
dec
std
ja
xchg
js
in
movsl
sub
call
in
inc
sbb
or
xor
scas
mov
pop
imul
mov
fwait
mov
xchg
mov
mov
cmp
jg
dec
adc
fdiv
add
cmp
inc
popf
push
js
gs
imul
loop
in
mov
loop
lds
movsl
xor
xor
adc
mov
push
pop
xor
jl
push
adcb
jns
pop
sbb
js
mov
cwtl
mov
cmp
in
sbb
jmp
pop
add
test
sub
jmp
push
cltd
je
add
std
mov
mov
aad
repz
loope
lods
xchg
sub
sub
adc
jne
mov
push
testb
jmp
in
lock
fnstsw
orb
in
mov
mov
push
push
adcl
test
inc
xlat
jnp
jge
and
sahf
cmp
mov
inc
pop
jl
cmp
icebp
enter
stos
jl
popf
insb
jle
call
enter
xor
xchg
xchg
fistl
and
rcl
in
pusha
push
sbb
mov
incl
pop
inc
arpl
push
cmp
aam
pop
data16
shrb
ret
dec
push
mov
xorb
repz
clc
cmp
dec
imul
sub
in
outsb
mov
sarb
pop
xchg
scas
sub
pop
sarb
ljmp
mov
shlb
cmpl
or
fcmovnu
mov
jae
jb
push
cld
cld
rolb
mov
popf
inc
pop
in
jmp
mov
das
mov
lcall
mov
push
jle
aaa
mov
sub
rclb
pop
sarw
ljmp
icebp
pop
xchg
data16
push
ret
cmc
or
mov
out
and
jmp
or
ljmp
cltd
cmpl
push
dec
pop
or
xchg
aaa
stos
add
lds
lcall
incl
sbbb
cmpsb
inc
xor
shr
cmp
int3
jg
call
andl
inc
shr
jle,pt
negb
fidivrl
jns
or
mov
vsubss
nop
sbb
mov
lret
ficompl
insb
ret
fwait
push
cwtl
jg
pushl
pop
cld
sti
xor
mov
mov
mov
gs
sahf
lock
jg
jnp
sub
cmp
movsb
movsb
jg
push
xor
and
ret
cli
imul
jb
repz
jb
xlat
jmp
xor
pop
sbb
in
out
xchg
pmuludq
hlt
mov
imul
and
pop
dec
dec
fstpt
xchg
xlat
push
scas
setno
sar
mov
scas
out
gs
dec
mov
jle
xchg
lcall
mov
xlat
push
jmp
sub
mov
incl
pop
bound
cli
push
fnsave
jg
adc
in
cmpsl
xchg
add
fmuls
xor
inc
push
mov
jo
idiv
aad
icebp
pop
pop
xor
mov
aaa
cmp
mov
xor
lcall
lods
aas
jge
push
pop
and
jecxz
dec
or
ficompl
pop
test
mov
mov
push
cmpb
dec
popf
pop
mov
push
pop
jb
adc
pop
push
push
mov
mov
mov
outsl
xchg
fdivr
pop
fsubrp
mov
add
and
incl
push
sub
fstpt
int3
dec
xchg
cmpsb
lcall
int3
and
mov
jbe
jg
cmpb
mov
sub
sub
push
sti
jmp
jmp
or
incl
std
jg
push
rorl
pop
mov
test
cmpsl
repnz
scas
inc
adc
loopne
push
add
add
sbb
adc
cmp
ficomps
test
or
dec
repnz
int3
push
das
add
hlt
jmp
int3
mov
xchg
in
push
dec
enter
jecxz
es
call
loopne
frstor
ja
icebp
jns
mov
push
xor
ljmp
push
lds
or
push
stos
ret
shll
push
out
lcall
rolb
mov
lret
xchg
stc
les
xor
insl
inc
mov
out
decl
push
rcrb
xchg
aaa
push
ds
jno
and
ljmp
xchg
loope
call
test
sahf
cmpsl
pop
fucomi
mov
mov
pop
inc
add
out
popf
icebp
in
lcall
ds
gs
out
push
sbb
jne
sub
fbstp
pop
fdivrs
xchg
mov
adc
mov
pop
lods
packssdw
mov
pop
negl
test
dec
or
out
sti
lock
mov
movsl
js
dec
inc
xchg
mov
mov
lock
jnp
idivb
shrb
sbb
jno
scas
mov
jg
std
mov
aas
popf
mov
pop
inc
ss
test
jno
shl
popf
lret
out
ljmp
scas
popf
push
push
inc
in
mov
pop
xchg
dec
inc
dec
adc
testl
ljmp
add
fwait
pop
arpl
or
mov
mov
mov
in
cmp
push
cmp
out
call
add
mov
lcall
lret
mov
adc
test
bound
inc
punpckhwd
xor
xor
imulb
mov
push
pop
outsb
fisubrs
mov
pop
jg
movsl
jnp
int
add
loopne
je
nop
dec
aad
scas
and
mov
add
mov
jb
outsb
mov
inc
stos
dec
xlat
js
pop
push
es
outsl
push
cld
incl
fdivrs
fwait
scas
shlb
inc
add
mov
sbb
outsl
ljmp
mull
mov
iret
das
ja
fs
jge
insl
cmp
arpl
pop
loopne
lret
ja
push
jno
add
mov
repz
fstpt
call
ss
std
inc
mov
lea
jb
nop
cwtl
orl
cwtl
inc
ljmp
fwait
xor
fs
inc
sbb
and
and
pop
in
xchg
loope
mov
fmull
in
sub
mov
incl
xor
mov
jb
and
adc
mov
adc
out
xor
dec
xor
add
ret
in
outsl
push
in
mov
xchg
cmc
push
jge
push
in
cmpsb
out
mov
add
imul
aaa
sbb
mov
call
popa
arpl
mov
or
ss
jecxz
mov
add
mov
pushl
cmpb
cld
ljmp
movsb
movsb
shlb
stos
out
psubusw
mov
lods
sub
or
add
sbb
cld
call
cld
add
mov
adc
sbb
sbb
outsb
outsl
jg
push
pop
push
push
out
xor
sbb
fwait
sbb
rcr
es
jnp
cmp
jle
dec
test
push
scas
out
or
addr16
jecxz
xchg
repnz
pop
addr16
cli
adc
jmp
addb
je
in
lods
cmpsl
mov
xchg
test
xchg
add
inc
mov
push
jns
inc
push
add
push
jmp
call
pop
push
sarl
je
lcall
mov
fdivl
rcrl
push
int
xor
mov
dec
call
mov
xlat
pusha
call
adc
or
lock
loope
ljmp
cs
mov
rorb
lods
lock
data16
fildll
pop
sub
mov
mov
rolb
sub
cld
pop
and
lret
add
lahf
inc
ja
notl
and
ljmp
lock
pop
fildl
add
jb
xchg
mov
sti
jmp
js
ss
je
popf
dec
test
add
fstl
loope
ret
jmp
fmulp
mov
sub
lcall
pusha
pop
jmp
or
outsb
jg
repz
decl
test
adc
arpl
loope
loopne
jg
hlt
pop
mov
add
jp
mov
imul
cld
aaa
cmpsl
sbb
sbb
adc
adc
ret
out
das
sub
sbb
fsubs
and
call
out
sbb
dec
inc
cli
jb
push
and
cs
xchg
sbb
lea
fistl
inc
loopne
inc
cwtl
add
sub
insl
insl
mov
stos
jo
lds
mov
jg
lcall
pusha
jae
jmp
sbb
jnp
int3
cwtl
nop
cmp
pop
enter
shlb
pop
flds
push
sub
pop
mov
inc
sub
lret
jmp
jmp
add
incl
or
sbb
push
andb
into
shrb
and
jge
xor
ljmp
or
cld
in
enter
push
push
call
std
in
sbb
mov
pop
cmc
fcmovb
imul
sbb
cmp
gs
jle
adc
je
pop
adcl
sarl
out
sti
pusha
jmp
lcall
inc
mov
inc
inc
mov
out
jg
push
xchg
jp
js
shll
xchg
movsl
sahf
fcos
pushl
xor
sarl
out
imul
mov
mov
lahf
cld
or
incl
fdivr
inc
push
leave
cmp
fisubrs
xchg
cld
and
leave
cli
sub
dec
jl
push
call
push
pop
xor
cmp
leave
incl
shlb
jmp
int
mov
outsb
cmp
pop
mov
mov
mov
xchg
mov
call
jns
js
mov
mov
ret
sbb
or
lret
mov
and
dec
pushl
pop
mov
call
jl
out
jg
push
sarb
sbb
add
jmp
add
xchg
dec
mov
mov
pop
or
scas
icebp
sub
push
xchg
pop
out
inc
subl
jl
inc
adc
pushl
sbb
xor
xchg
aaa
pusha
jnp
add
andl
mov
scas
mov
ljmp
addr16
fcompl
rorb
jno
dec
xchg
addb
inc
out
fsubl
mov
int
popf
mov
xchg
mov
insb
lret
in
adc
jns
div
xchg
jnp
xchg
jg
inc
hlt
adc
mov
xor
decl
in
sbb
inc
cwtl
mov
ret
push
loop
scas
and
movsl
shlb
loop
cmpb
mov
andl
cmp
clc
leave
je
adc
inc
sub
int
iret
mov
sbb
lea
jae
call
call
pop
or
lds
cmp
or
dec
je
mov
pushl
ss
push
pushf
pop
xchg
ret
mov
xor
test
xchg
xchg
push
stos
and
cmp
pop
sbb
lock
pop
scas
inc
pop
int
outsl
fsubrl
test
test
xchg
jg
or
inc
mov
adc
stos
mov
fsubl
incl
pop
and
nop
stc
adc
pop
in
imul
lahf
movsb
jmp
icebp
outsb
insb
dec
fst
jmp
inc
xchg
mov
nop
pop
push
in
adc
scas
and
push
ret
cmp
lret
decl
nop
pop
lock
aam
imul
mov
int
aad
outsl
xor
cld
insl
mov
aaa
jb
fiadds
addl
loop
aas
imul
cmp
out
repnz
mov
mov
dec
jb
dec
add
jo
ljmp
out
cmp
cld
loope
push
outsb
jns
shlb
cli
sbb
sbb
mov
mov
aas
mov
and
lahf
leave
scas
rcpps
adc
adc
mov
call
lret
outsl
out
or
repnz
and
lea
les
cmp
enter
into
outsb
mov
iret
sub
sub
repz
int3
and
call
add
aas
xchg
or
cmpsl
mov
arpl
ret
pop
inc
adc
sub
sahf
and
ss
jmp
and
adc
incl
jmp
adc
xchg
into
mov
mov
cld
push
mov
adc
adc
jmp
add
pushl
arpl
cmpsl
push
decb
cmp
lret
lods
jp
mov
fmull
jg
sub
shlb
jae
popf
adc
idivb
mov
jmp
sub
jmp
push
sub
pop
mov
pop
inc
lea
pushl
sbb
mov
pop
jle
mov
cmp
divb
mov
lret
sbb
incl
fdivrs
mov
sbb
ss
fmull
mov
sub
cmc
test
scas
clc
pushl
sbb
mov
dec
pop
das
sbb
xchg
out
fisubrl
jmp
imul
dec
loopne
sarl
lahf
mov
sbbl
mov
fimull
rcl
cmpl
aaa
sub
aam
mov
jne
cmp
add
mov
lret
inc
jno
lret
and
data16
cmp
in
out
pop
cmp
xchg
sbb
xlat
popf
jns
add
sub
rcll
sub
xor
or
push
xchg
add
incl
push
xor
push
pop
xor
add
addr16
ret
mov
cwtl
insb
xchg
imul
decl
add
jbe
aas
dec
push
into
xchg
pop
and
pop
out
pop
dec
aaa
push
fsubl
cmpsl
xchg
rolb
xchg
mov
scas
push
xor
popf
adc
cs
psadbw
shll
lcall
sbb
lods
or
loop
cmpsb
push
xor
mov
adc
push
xor
decl
sti
adc
push
stos
pop
popf
dec
mov
jge
mov
movsb
fiaddl
data16
add
decl
adc
insb
and
arpl
cwtl
inc
daa
xchg
insb
pusha
addr16
push
push
jl
fdivrs
cmp
xchg
or
cmp
xlat
fnsave
rol
sarl
jg
sbb
mov
and
in
adc
push
lods
cwtl
push
adc
push
push
mov
jecxz
pop
sub
ja
sarb
test
sbb
pushl
cs
loopne
dec
idivl
or
pushf
sub
add
mov
fldt
out
sub
fcomip
decl
aad
mov
xchg
xchg
sub
cwtl
test
jmp
jo
push
imul
push
xor
insb
xchg
fbld
jnp
gs
ficompl
decl
addl
loope
stc
mov
aas
jle
cmp
xchg
je
call
negb
lret
stc
scas
cwtl
std
addr16
mov
jmp
xchg
mov
xor
xchg
sub
dec
xchg
adc
sahf
scas
adc
mov
add
fdivrp
cmp
adc
xlat
sti
mov
mov
xchg
lds
ljmp
subb
sbb
mov
outsl
mov
iret
aaa
int
sub
icebp
or
or
pushf
scas
mov
lock
mov
adc
sub
lock
lcall
mov
cmpsb
mov
sbb
out
sti
push
call
dec
mov
out
jg
call
repz
xchg
out
lock
orl
or
fdivr
mov
imul
out
dec
stos
pushf
pushf
dec
subl
ja
or
cli
call
hlt
jp
mov
mov
mov
push
imul
mov
out
dec
rcll
sbb
ja
push
adc
pop
inc
fisubs
or
xor
push
test
dec
jmp
xchg
fstp
gs
shrb
dec
popf
das
ss
mov
fldl
js
repnz
int3
nop
mov
mov
jb
pop
insl
stc
inc
add
lcall
sub
pop
js
int3
push
sbb
add
pushl
mov
inc
or
subb
decl
fimuls
push
and
xor
or
xchg
int
aas
or
or
call
jno
in
out
cmp
ss
cmc
cmpl
movb
fisttps
cmp
push
pop
xchg
testl
pop
stos
push
daa
outsb
push
cmc
jbe
push
ds
incl
add
out
and
mov
jno
in
add
mov
inc
negl
xchg
std
decl
dec
std
mov
xchg
frstor
ja
adc
fdivs
dec
fnstenv
push
in
int3
aad
jp
cld
add
jp
or
cmp
sbb
inc
mov
pushl
lock
xchg
mov
jns
addb
popa
incb
sub
cmpb
loop
jmp
daa
and
sub
dec
aas
repz
and
cmc
mov
insl
cmpsb
xlat
mov
ljmp
xor
les
adc
pop
popa
push
sub
add
mov
scas
push
mov
pop
push
jmp
in
stos
fisubrs
pop
lods
ss
lcall
in
cmp
pop
add
pop
test
and
iret
inc
xchg
sub
scas
and
and
jg
scas
cli
xchg
in
imul
mov
lahf
xlat
or
dec
cmp
lcall
push
xchg
idivb
repnz
fdivr
scas
cmp
stos
mov
mov
repnz
das
mov
cmpsb
pop
in
les
repz
aad
sub
mov
into
bound
pushl
cli
cmpsl
mov
movsb
rcrb
int3
addr16
ljmp
cmovp
add
dec
repnz
push
daa
sbb
sub
out
xchg
in
pop
out
inc
frstor
call
andb
scas
in
mov
lret
cmp
push
lcall
cmp
mov
push
pushl
js
es
add
cmp
sahf
repnz
aaa
xlat
leave
cld
inc
shlb
incb
pusha
push
fcmovne
sbb
pushl
mov
ror
in
int3
adc
int3
ljmp
lods
adc
lods
adc
call
pop
push
mov
xchg
cltd
add
in
push
mov
scas
xor
sbb
in
shlb
ret
push
sub
mov
sti
mov
adc
pusha
stc
push
dec
out
fiaddl
sub
mov
pop
ljmp
cmc
lahf
movsl
add
ljmp
jl
dec
imul
xchg
insl
test
sub
xor
sbb
or
and
ds
push
xchg
aad
ljmp
xor
mov
push
cmp
inc
in
in
mov
aaa
rcll
decl
int
ficomps
fildll
clc
pushf
cmp
je
inc
fwait
jle
mov
mov
xor
dec
or
sbb
xchg
int3
xchg
push
mov
add
loop
jl
pop
sbb
jg
or
test
push
sti
mov
mov
out
jno
xor
mov
xchg
fsubrp
mov
push
mov
mov
out
xchg
cltd
fistl
mov
jl
ljmp
lods
aam
xor
lea
inc
pop
mov
rcl
dec
and
lods
xchg
push
aaa
or
cmp
imul
dec
adc
xchg
scas
jbe
icebp
std
or
add
addr16
dec
mov
mov
cmp
adc
movsb
rolb
aas
call
cmpsl
mov
xchg
rcrb
fdivrs
out
cmpsl
loop
movsb
dec
cmc
stos
and
call
popf
push
ja
sbb
test
insl
push
cmp
dec
lcall
inc
loopne
xor
test
dec
leave
xchg
addr16
xor
mov
hlt
xor
loopne
inc
andl
in
add
adc
aaa
adc
add
add
call
std
fucomip
cmp
shl
mov
fidivrs
decl
cmpsl
repz
sbb
pop
std
cmpsl
adc
je
cli
cs
sub
and
push
mov
pop
adc
push
call
xor
inc
imull
mov
lds
inc
mov
jp
and
stc
aaa
mov
ljmp
and
pop
ret
mov
jne
popf
loope
adc
sub
lds
fmuls
fwait
pusha
loopne
fdivrs
test
push
cli
push
test
dec
jmp
mov
in
xchg
cmp
shl
or
mov
lcall
xchg
push
or
mov
movsl
mov
and
mov
in
and
sub
jl
pop
test
andl
xor
xchg
inc
fwait
cmc
add
in
mov
inc
sbb
push
fwait
and
jl
in
lcall
mov
testl
popa
sub
pop
fstpt
popa
sbb
pushf
push
lret
push
fisubs
adc
pop
add
add
push
pop
cld
ret
test
jnp
clc
call
mov
sbb
pop
jb
shl
push
cmc
pushl
sbb
push
and
sbb
mov
sub
shrb
mov
ljmp
mov
daa
rolb
sub
les
dec
push
sbb
scas
mov
ret
dec
pop
sbb
repnz
xchg
daa
das
in
jmp
mov
ljmp
fdivs
outsl
mov
inc
fdivrs
std
adc
lods
mov
jl
insl
mov
sbbb
sub
or
inc
mov
cld
jmp
fisubrs
enter
call
add
add
fmuls
xlat
in
pop
fimull
add
je
lock
jp
add
dec
adc
jae
fdivr
jg
push
mov
pop
xor
adc
lret
mov
adc
loopne
ljmp
fbld
jmp
jmp
int3
xchg
mov
jmp
mov
cs
or
mov
loop
dec
icebp
ret
leave
adc
mov
lds
mov
cld
lcall
cmp
add
out
pop
mov
into
clc
out
lcall
das
and
int3
adc
je
adc
ljmp
stos
scas
xorb
cld
in
xor
jns
adc
mov
or
cmp
mov
cwtl
scas
pop
test
ret
pushf
in
leave
mov
jge
xchg
repz
and
sahf
add
or
sub
repnz
addr16
out
pop
scas
out
jmp
add
jnp
call
rorb
sub
fwait
decl
cmpb
jae
faddl
aam
push
sub
fs
mov
popf
xchg
call
clc
mov
push
sti
cmc
mov
decl
in
call
and
xorb
scas
pop
loop
pop
xlat
lret
sti
repz
add
pushl
xchg
xchg
mov
fnstenv
lcall
dec
stc
mov
or
mov
jne
popa
push
inc
sbb
adc
pop
jb
mov
jg
mov
aad
mov
and
dec
dec
mov
addr16
mov
repz
jae
push
rol
pop
or
loop
pop
pusha
imul
cmp
decl
fwait
loopne
jp
add
inc
push
insb
inc
mov
icebp
cmp
push
adc
mov
pop
xchg
cmp
pop
fbstp
xchg
cmp
jo
insl
mov
lcall
and
mov
dec
fisubrl
loopne
clc
and
mov
mov
sbb
mov
rorl
ljmp
sub
mov
in
cltd
mov
xor
lcall
dec
mov
rcr
je
xchg
call
inc
or
lock
les
pusha
lds
jmp
decl
adc
je
lahf
aad
xor
adc
into
or
cmp
orb
adc
xchg
cwtl
pushl
dec
ret
lods
cld
jns
cmp
inc
cmp
jmp
ss
push
jo
fidivrl
mov
fsubrp
cmp
add
xlat
add
and
push
dec
int3
pop
push
das
pop
inc
and
lcall
mov
dec
push
dec
out
adc
mov
xchg
ror
repz
mov
shl
ficompl
scas
iret
add
cmp
fisubrs
orl
test
cmpsb
adc
lods
rcll
mov
push
jp
push
sti
jno
mov
pop
dec
sahf
lock
pop
cmc
jl
lea
mov
fcoml
lcall
lret
rcll
mov
jmp
jmp
push
in
inc
mov
inc
pop
shll
jle
mov
popl
mov
bound
lret
fsubrs
mov
cmpsb
push
iret
mov
mov
lods
stc
adc
call
and
loop
xor
into
adc
inc
mov
add
push
mov
arpl
add
rcll
cmp
mov
decl
repz
xor
add
push
xlat
adc
jmp
addr16
jne
call
sbb
es
test
sahf
in
sub
psllq
cmp
mov
ljmp
cmp
xchg
mov
dec
mov
cli
ljmp
pop
cld
movsl
lcall
das
mov
test
leave
pop
ret
dec
cmp
push
pop
scas
leave
clc
ret
or
xor
mov
jmp
inc
adc
hlt
mov
cwtl
cmpsl
push
mov
fcom
mov
and
push
inc
jo
xor
pushl
pop
mov
pop
dec
cmp
jae
shrl
or
cld
orl
sbb
sub
and
fdecstp
loope
ds
mov
jmp
cli
add
outsb
insb
outsb
lea
jg
mov
fisttpl
add
jns
xchg
imul
out
adc
pop
pushf
or
mov
sbb
and
sbb
jg
call
insl
inc
jmp
lock
mov
js
jmp
pop
or
jp
sar
jmp
xor
in
inc
std
test
pop
aaa
ss
addr16
cmp
fdivr
cmp
aaa
push
jmp
decl
cmp
mov
loopne
ljmp
aad
cli
int3
icebp
cmp
add
cmc
lret
cli
push
mov
mov
add
faddp
jnp
cmp
stc
clc
and
push
dec
push
mov
adc
jg
push
loop
inc
mov
push
adc
in
movsb
jg
sub
ret
mov
ljmp
sbb
clc
outsl
sub
sbb
cmp
mov
mov
pop
out
adc
lock
sbbb
add
adc
jmp
es
lods
cld
sbb
push
scas
movsb
xchg
popf
inc
fcom
cmp
adc
xchg
jmp
je
loopne
jmp
pop
inc
cmc
outsl
incb
movsl
int3
sahf
jecxz
mov
sahf
jg
jmp
pop
ja
or
push
cmp
lcall
sub
fcmovu
or
pop
dec
adc
cmp
inc
and
cmp
mov
mov
adc
pop
mov
je
push
inc
pop
pop
das
iret
adc
push
xchg
lods
pop
cwtl
jae
fdivrs
cmpsl
jp
xor
das
cmp
inc
iret
pop
inc
xor
aas
xor
lret
pop
scas
ss
cmp
frstor
lock
jb
andb
add
mov
cli
jecxz
scas
int
fisubrs
jae
pop
lods
inc
mulb
sbb
add
xorl
jmp
jg
add
xor
ret
jecxz
ds
xrelease
in
xor
bndstx
sbbb
or
aaa
sbb
je
pop
subb
mov
jg
mov
xchg
inc
arpl
sub
add
iret
add
cmp
ljmp
pop
es
lret
ret
stc
jo
mov
arpl
nop
insb
mov
out
mov
ljmp
hlt
adc
dec
push
or
imul
push
out
mov
decl
cmpsl
loopne
lods
push
cs
mov
mov
dec
mov
xchg
adc
xchg
cmp
dec
aam
jbe
ljmp
xchg
jg
inc
daa
inc
imul
bound
add
movsl
sub
xor
ret
or
mov
test
fmuls
fisubs
pop
sub
bound
int
decl
das
es
or
lods
push
ljmp
push
push
jns
mov
hlt
ljmp
mov
inc
push
push
pusha
adc
jmp
cltd
pop
inc
popf
pop
cmp
mov
lcall
ljmp
jl
cmp
in
insb
icebp
cli
add
in
pop
cmpsl
push
idivb
or
xor
test
pop
mov
push
sarb
xchg
add
push
stos
es
lcall
mov
push
arpl
cltd
lret
push
pop
xor
addb
pop
push
imul
jo
fwait
inc
mov
pop
scas
mov
das
fdivrl
sub
pop
inc
or
pop
sub
insl
je
iret
ret
mov
inc
xchg
clc
pushl
mov
pushf
data16
cmpsb
xchg
imul
push
xor
orb
divb
xor
test
aad
push
enter
movl
loopne
cld
es
adc
xlat
push
xchg
jmp
add
push
div
aaa
nop
ret
ja
dec
push
xchg
andb
incl
mov
insb
mov
mov
sub
mov
mov
or
int3
stos
pop
inc
out
inc
inc
inc
jmp
scas
sbb
testl
inc
test
repnz
test
incl
cld
jno
sub
fsubl
adc
ret
out
and
jle
mov
pop
cltd
cmp
inc
cmpsl
dec
cld
outsl
jbe
push
aad
push
sahf
pushf
loopne
insb
cmp
jg
mov
sbb
push
fcmovb
xchg
or
pop
aas
lret
mov
clc
lcall
out
iret
adc
jbe
gs
in
aad
or
cmp
dec
aam
jbe
rcl
jecxz
jecxz
mov
les
sbb
test
mov
outsb
rcrb
jns
or
xchg
sti
test
hlt
mov
jg
add
loope
icebp
cmp
jae
aad
sbb
cs
decl
inc
add
sbb
leave
push
mov
and
cs
pop
or
add
test
pushf
mov
lea
and
jg
push
das
or
push
and
sbb
clc
xchg
add
sbb
in
cmp
in
jg
call
in
sub
out
nop
fbstp
mov
call
dec
or
pushf
adc
xor
adc
out
std
lods
fcmovu
aam
gs
adc
icebp
bound
xchg
xchg
jecxz
inc
cld
clc
jmp
nop
nop
or
and
movsb
test
sub
stos
mov
imul
inc
cld
sahf
scas
push
cs
add
scas
mov
das
cli
aas
inc
ds
mov
daa
sub
or
lahf
xor
mov
jbe
xchg
mov
sar
push
cmp
xorb
outsb
mov
dec
and
sarl
dec
fcmovnb
mov
int
mov
or
mov
jle
cwtl
stos
adc
clc
lret
inc
sbb
call
jo
xor
push
or
pop
cmp
push
inc
dec
and
dec
outsl
lods
jns
int3
xchg
push
lcall
cmp
out
inc
push
pop
push
test
adc
push
push
and
nop
jp
ret
clc
mov
cld
add
ljmp
and
clc
mov
and
cs
aam
jmp
push
push
xor
pop
hlt
lcall
lret
in
das
pop
das
and
jmp
dec
xchg
icebp
adc
cmp
test
ljmp
pop
lret
mov
ljmp
ljmp
cld
inc
adc
push
mov
pop
repz
pop
adc
jmp
neg
out
mov
mov
mov
ljmp
scas
ja
shrl
test
fdivr
xchg
xor
sbb
push
lcall
mov
dec
add
push
dec
sub
sbb
aad
fcomip
ljmp
fstps
mov
push
sahf
arpl
ret
sub
inc
stos
mov
or
mov
xchg
pop
and
jo
movsb
loopne
call
mov
or
std
push
mov
mov
ret
inc
jg
cmpsl
xorb
bound
sbb
jl
adc
pop
xchg
pop
gs
xchg
and
sbb
cmc
scas
popa
mov
pop
shlb
es
out
test
int
add
or
jmp
rcll
jecxz
stos
pop
cmp
hlt
mov
sarb
cld
add
cwtl
cmpb
fwait
adc
dec
in
ljmp
add
enter
ja
imul
popa
cmc
xchg
mov
cwtl
fwait
les
scas
dec
clc
call
xchg
push
push
loope
lods
dec
lcall
lret
xor
pop
sub
and
jne
dec
ja
ljmp
es
cmp
sub
les
outsb
inc
mov
loope
jp
out
jae
arpl
pushf
aad
jmp
repz
push
jne
arpl
cmp
and
frstor
fnstenv
and
pop
stos
jl
inc
jecxz
jnp
jl
int3
ret
dec
dec
cmp
dec
jb
dec
pop
cmp
adc
mov
mov
mov
popa
icebp
stos
cmp
call
add
adc
pop
adc
xchg
xor
stc
mov
insb
std
in
mov
outsl
push
cld
mov
or
pop
adc
adcl
fs
mull
cmc
std
cmp
lods
cvtps2pd
mov
int
add
jle
mov
jg
add
cltd
je
out
fs
adc
cltd
cmpsl
rolb
mov
rorl
mov
jne
pusha
movsl
roll
pop
jns
xchg
cmp
inc
fcompl
mov
cmpsl
pushf
stc
cmp
hlt
pusha
inc
push
dec
mov
decl
push
mov
mov
jp
xchg
push
aad
pop
mov
push
adc
scas
decl
in
stc
xchg
out
and
or
inc
dec
dec
mov
imul
ss
mov
xlat
jmp
movsl
pop
jbe
and
and
xor
mov
sbb
cli
arpl
mov
xor
lahf
sub
xchg
push
push
jmp
dec
popa
mov
xlat
xchg
fistpll
xorb
jno
aaa
xchg
loope
push
push
cmpsb
inc
pushl
pop
arpl
or
and
es
sbbl
jecxz
push
lret
sbb
jno
and
movsl
enter
xor
outsb
dec
jl
inc
scas
rolb
mov
test
push
insl
jge
cmc
and
notl
bound
adc
lcall
sbb
lods
cwtl
jle
int3
sahf
out
es
daa
arpl
and
jg
mov
add
lock
sbb
push
test
inc
xor
bound
add
stos
push
out
adc
inc
adc
mov
movsl
daa
test
int
and
stos
cmp
xlat
out
pop
sbb
xchg
popa
pop
ret
scas
out
xchg
jmp
inc
out
aam
mov
xor
dec
fildl
in
subl
fistl
decl
push
lea
dec
jo
and
aam
ret
mov
loope
cmp
dec
adc
cmp
rcrl
cld
decl
cmp
popf
xchg
mov
and
out
imul
jg
in
fsubrs
sahf
jp
es
std
push
scas
lods
inc
push
xor
out
iret
sub
jmp
xchg
cwtl
sarb
add
ffreep
std
inc
pop
fs
add
cmp
std
mov
lret
jl,pt
push
mov
repz
dec
sub
xchg
mov
je
aas
popf
mov
nop
imul
dec
int
outsb
aad
cmp
nop
jle
clc
bound
xchg
or
mov
jo
ljmp
pusha
gs
xor
out
xchg
int3
nop
call
pop
xchg
sub
mov
pushl
adc
pop
push
stos
push
cli
push
dec
pop
dec
add
and
mov
aas
in
sub
out
jmp
sub
mov
popa
adcb
inc
xlat
stos
adc
sub
mov
decl
lea
imul
add
fidivl
push
roll
lcall
xchg
adc
xchg
jg
clc
fiaddl
cmp
or
call
mov
and
rcrb
sbb
dec
or
shll
ljmp
into
push
sbb
dec
or
daa
stc
add
xchg
pop
xchg
lret
mov
dec
and
outsl
sub
lcall
xchg
dec
out
test
movsl
ficoml
push
lret
push
rolb
into
pop
add
in
pushl
dec
add
pop
push
ss
outsb
mov
or
pushf
dec
cmp
sbb
lcall
lahf
cmpsb
and
insb
daa
lods
test
int3
clc
pop
scas
mov
jmp
in
rdpmc
jge
mov
pop
inc
add
inc
mov
pop
push
je
push
inc
jnp
jle
xchg
push
clc
fwait
or
incl
add
add
adc
dec
clc
jnp
cmp
mov
add
mov
xchg
ja
leave
xchg
fcompl
ljmp
cmpsb
orb
pop
mov
in
fidivs
decl
sbb
into
jmp
add
mov
inc
jg
popf
cld
cmp
stos
mov
pop
dec
jbe
cmpsb
mov
jecxz
mov
add
outsb
xor
mov
enter
and
movl
stc
repz
sahf
int3
or
lahf
loop
dec
shl
mov
mov
jp
and
fisubrs
mov
ss
add
push
js
out
outsl
pop
popf
out
loope
sahf
or
incl
nop
cs
int3
bsf
push
pushl
jl
fwait
sub
outsb
pusha
pushf
mov
mov
ficoms
mov
inc
push
pop
fisubl
bound
mov
je
add
push
mov
pop
clc
xchg
stos
out
popf
xor
mov
push
pop
rclb
sub
inc
pop
jmp
js
push
std
xchg
jle
jb
lods
adc
mov
push
lods
mov
jnp
pop
hlt
add
out
mov
pop
add
push
cmpsb
lcall
out
sbb
out
out
sub
or
xchg
dec
out
outsl
dec
jp
sub
jmp
xor
push
inc
mov
int3
sbb
ljmp
mov
icebp
push
cmp
push
cli
jns
jne
jge
fwait
push
loop
jg
xor
mov
dec
mov
xchg
xor
cmp
push
outsl
xor
hlt
sub
out
inc
adc
pushl
sbb
popa
adc
dec
hlt
mov
test
addr16
xor
mov
dec
pop
ret
mov
jle
inc
stc
push
mov
call
lea
cmc
inc
test
push
push
test
lds
std
call
popf
mov
pop
in
sub
push
fldl
ficomps
cwtl
fwait
ret
rcll
ljmp
push
lods
xor
arpl
mov
or
or
lcall
outsb
sub
aam
nop
fwait
mov
push
in
mov
or
std
scas
jns
rclb
xchg
jecxz
xor
dec
push
decb
movsl
lods
mov
fbld
mov
es
sub
in
insl
imull
jno
call
pop
test
popa
sbb
sarl
icebp
aad
xor
mov
mov
pop
int3
jne
test
adc
cmp
inc
dec
arpl
pop
or
pushf
daa
jg
test
in
gs
test
inc
mov
xchg
cmp
jmp
or
dec
gs
add
push
dec
dec
int
push
sub
cmp
push
std
hlt
inc
xchg
mov
dec
ljmp
out
lock
addr16
sub
das
out
mov
mov
clc
scas
and
incl
pop
push
adc
push
sar
and
popf
fwait
xor
add
xchg
ret
cs
jbe
mov
pop
cld
or
add
pop
int3
int
ljmp
jnp
adc
jno
aad
jecxz
call
shlb
pop
lock
cmp
outsl
incl
jbe
js
inc
xchg
pop
push
shrl
mov
inc
mov
jg
out
pop
and
outsl
push
sub
adc
ja
rcrl
mov
out
mov
out
jnp
sbb
xchg
scas
xchg
int3
dec
cmp
arpl
inc
mov
cmpsb
pop
subb
adc
mov
mov
cld
subb
rclb
loop
call
or
aad
mov
lock
stos
inc
mov
stos
shrb
pop
bnd
inc
clc
fstpl
xor
mov
xchg
jns
ja
or
call
dec
mov
add
loop
adc
out
pop
cmp
mov
mov
jl
mov
jne
clc
aas
les
rorb
stos
addr16
dec
pop
leave
icebp
mov
jns
dec
lret
mov
in
pop
xor
fcompl
ljmp
xchg
data16
xchg
sbb
inc
cltd
dec
mov
mov
into
pop
xor
js
mov
decl
xor
scas
dec
xchg
adc
and
mov
inc
adc
mov
rol
and
movlps
push
dec
dec
xor
incl
push
push
rol
out
mov
push
les
pop
push
rol
incl
out
push
push
data16
xchg
scas
mov
mov
jle
nop
dec
cmp
fwait
adc
inc
mov
add
jns
mov
cmpsl
ljmp
lods
mov
fidivl
lods
push
int3
in
xchg
sub
pusha
or
test
jno
lret
mov
out
add
dec
repnz
jecxz
and
call
leave
dec
xor
fnstsw
aaa
fs
mov
mov
pusha
in
push
les
movhps
ret
mov
lret
inc
stos
mov
jbe
decl
cld
push
stc
clc
mov
mov
jmp
pop
jmp
xor
ret
movsb
cmp
push
aaa
or
popf
lcall
adc
mov
incb
inc
stos
es
ljmp
sub
sub
fs
lahf
lods
loopne
lds
jb
scas
aas
cmp
dec
xchg
sub
dec
xlat
cli
aad
ss
jnp
xrelease
enter
loop
adc
loop
xchg
dec
xchg
xchg
out
je
inc
jecxz
push
es
std
jb
mov
ja
dec
test
mov
ror
sub
shl
repz
xor
mov
int3
aas
pushf
scas
gs
push
cltd
or
sub
mov
stos
leave
lahf
jae
js
scas
cli
jp
or
inc
inc
mov
andb
cmpb
push
sub
mov
xchg
cmp
push
aam
loop
cmp
adc
stos
lahf
dec
imul
push
cmpsb
ljmp
pop
insl
xor
in
mov
push
mul
jge
repnz
repnz
mov
imul
lcall
repnz
das
enter
int3
daa
and
mov
or
icebp
pop
mov
jb
or
cmp
sbb
enter
cmp
pushl
lea
add
cmp
sub
jge
daa
lret
add
lcall
pop
pop
aam
inc
inc
mov
cmpsb
mov
jle
jp
jg
leave
in
pushf
ror
js
lcall
test
xor
negl
adc
dec
stc
jg
inc
cld
sbb
inc
mov
fidivl
ljmp
in
imul
repnz
add
cmp
or
or
imul
push
pop
sub
fcomip
jmp
mov
fiadds
fdivrs
ficoms
push
cmp
ds
or
scas
cli
stc
icebp
popf
push
jno
pop
jae
fst
sarb
xchg
leave
push
sub
arpl
ljmp
imul
xchg
lea
out
into
jb
xchg
sti
nop
or
push
mov
lods
push
xchg
inc
out
pop
sub
lahf
and
lahf
xchg
shl
or
xlat
lcall
std
aaa
add
sub
jo
push
cmp
loope
dec
sub
pop
icebp
incl
test
gs
mov
sbb
pop
mov
inc
mov
jg
xchg
nop
int3
es
sahf
roll
ret
mov
movsb
loop
pop
ljmp
jne
cmp
push
pop
jns
inc
in
cwtl
pop
sub
and
mov
rcrb
decl
out
rcll
cmp
or
push
cmp
inc
icebp
cmp
or
push
add
cli
lcall
cmp
scas
into
sub
lahf
adc
call
pushf
mov
fnstsw
sbb
mov
jo
aam
cs
push
ud1
ss
jmp
aam
repz
mov
lock
lock
add
sbb
sub
xor
lcall
sahf
cmpsl
gs
js
mov
call
adc
adc
je
mov
inc
adc
inc
push
ljmp
jp
iret
es
mov
or
mov
inc
lcall
sub
pop
mov
push
cld
inc
mov
mov
lds
fsubp
jo
lds
jb
push
shr
in
inc
mov
adc
scas
xchg
call
mov
ljmp
cmp
mov
test
adc
jle
cmp
int3
call
cmp
xchg
test
pop
in
in
pop
jo
cmp
pop
mov
dec
mov
ljmp
add
fstpt
mov
sub
call
pop
pop
insl
mov
push
pop
bound
pop
aaa
ja
sbb
push
mov
lret
sub
test
mov
xchg
ss
bound
inc
xor
mov
int
xor
shll
and
sar
fisubs
push
xor
and
ds
test
pushf
mov
repnz
ret
sbb
fwait
mov
sbb
cmp
jg
push
pop
mov
pushf
roll
pop
rorb
jmp
adc
add
pusha
jmp
scas
jb
fcomi
jmp
mov
pop
push
insl
pop
cltd
cmp
pop
xlat
lahf
xor
stc
lds
sbb
lret
fwait
jg
dec
int3
mov
mov
decb
sub
enter
clc
fmul
ja
js
fstps
fwait
and
mov
loop
add
jnp
fucomip
mov
clc
jmp
cs
pop
sahf
mov
jno
in
lcall
aas
ja
movsb
iret
push
ficoml
jns
ljmp
jle
sbb
xchg
mov
inc
sbb
push
incl
fcomip
inc
cltd
jecxz
mov
repz
cli
out
xor
xor
adc
in
pushl
fdivl
aas
pop
push
scas
ss
loop
and
pop
arpl
lret
sub
push
cmpb
mov
sbb
xor
jge
nop
xchg
in
jg
insl
push
push
hlt
jnp
shll
sahf
cmp
pop
repnz
jge
cli
pop
pusha
ljmp
cs
and
icebp
les
pop
mov
cmp
sbb
xchg
mov
fisubrs
pop
cmpsb
xchg
lcall
cwtl
push
pusha
mov
inc
push
push
mov
fstpt
add
sub
mov
inc
sbb
fildll
xchg
add
testb
pushf
lods
test
call
and
or
xchg
divb
sub
mov
dec
cltd
out
cmpsl
and
or
decl
lds
out
adc
jl
test
dec
pushf
pushf
arpl
movsl
imul
cli
cmc
ds
lods
loopne
neg
cmc
stos
stos
nop
ds
fucomp
jp
call
sub
jno
lcall
setns
jmp
negb
psrld
sbb
repz
xchg
pushl
and
mov
and
repnz
mov
daa
mov
or
clc
dec
pushl
add
inc
cmpsb
sarl
sub
enter
pop
pop
jp
pop
pushf
sub
dec
jbe
sar
sub
pushl
sub
shlb
xor
fnstcw
inc
mov
idiv
jg
mov
icebp
add
fdivl
jle
jbe
es
and
decl
jns
cmp
lcall
mov
iret
cwtl
adc
popf
stos
cmp
ljmp
add
add
push
push
inc
loop
and
or
fcmovne
dec
ds
subl
jge
and
jmp
mov
lahf
pop
fwait
inc
mov
sarl
and
in
dec
loop
repnz
aam
push
std
add
xor
decl
inc
popa
push
inc
sub
mov
xor
daa
pop
xchg
adc
jno
mov
call
scas
into
mov
xchg
jne
in
inc
je
mov
sahf
mov
flds
decl
cwtl
adc
outsl
adc
ja
movsb
pop
xlat
mull
adc
aaa
outsl
adc
jmp
cmpsl
fidivl
das
dec
xor
pop
push
push
jnp
es
call
out
aad
jmp
mov
cli
mov
mov
insb
sbb
int
cmc
cmp
or
sub
aam
jae
movsb
adc
xor
pushf
lds
sbb
decb
icebp
arpl
mov
call
ret
in
fistl
das
push
sub
out
ja
out
cmp
lcall
and
jp
inc
pop
aad
bound
xchg
xchg
xchg
lock
pushl
and
jnp
les
pop
pop
movsb
rolb
mov
or
pop
adc
cmp
aam
scas
out
jg
lds
rorl
scas
not
xchg
sarl
cmc
nop
lcall
or
cs
and
test
lods
sub
pushl
cmp
lahf
mov
xor
push
stc
adc
cmpsb
xor
jae
fdivrp
or
fs
shlb
into
xor
test
mov
xchg
int3
jg
call
inc
and
insb
xor
add
push
push
and
dec
insl
decl
mov
mov
adc
jmp
xchg
popa
pop
add
xchg
sar
dec
xchg
dec
fmuls
pop
inc
and
nop
into
ljmp
push
lcall
sbb
dec
mov
inc
jmp
in
loopne
fldenv
loop
xorb
sbb
inc
aas
ret
movsb
push
das
jae
adc
loopne
mov
std
xchg
nop
loop
leave
cld
push
fbstp
std
or
jecxz
xor
jecxz,pn
pusha
xor
jnp
add
add
or
incl
or
rcr
outsb
ljmp
push
push
xorl
pop
dec
pop
jp
mov
jg
mov
push
out
loope
xorl
mov
xchg
sbb
xchg
iret
inc
jnp
in
dec
adc
cli
fsubrl
dec
pusha
cld
pop
icebp
dec
mov
cmp
and
inc
outsl
test
mov
scas
adc
adc
jmp
cmpsb
add
xchg
dec
adc
mov
mov
je
cld
xchg
ret
xchg
add
ljmp
div
dec
cli
int3
sbb
push
lret
pop
jnp
scas
xor
xchg
repnz
rcrl
das
adc
ror
mov
sub
hlt
jle
popf
std
stc
adc
dec
daa
dec
andl
leave
or
cmc
js
push
mov
xchg
outsb
dec
mov
icebp
call
cs
fstpl
rcl
xor
andb
jbe
rol
stc
repnz
jg
or
mov
cmp
pop
leave
push
inc
xlat
ljmp
jg
rorb
bound
addb
jg
mov
rclb
sbb
sbb
fistpll
sbb
fs
out
adc
sub
mov
incl
lfs
cli
testb
icebp
pop
mov
inc
xlat
loop
ljmp
add
jg
jle
add
test
push
lds
mov
push
enter
decl
aas
insl
and
aad
cwtl
clc
std
dec
cmp
pop
or
je
mov
call
pop
leave
stos
lods
xor
daa
test
mov
jp
ljmp
sub
or
and
mov
jecxz
jmp
or
xchg
in
push
aam
xor
pushl
add
xchg
lret
mov
mov
dec
in
push
add
sti
push
add
int3
add
pop
sbb
cli
icebp
out
xchg
std
fisubrl
inc
xchg
and
fisubs
cs
xor
test
enter
pop
fcoml
mov
mov
jg
cmpsb
ficoml
loope
xor
xor
dec
mov
pushf
sar
pop
add
fidivl
call
or
incb
test
dec
xchg
push
test
sbb
ljmp
cmp
in
pop
lock
or
mov
sbb
idivl
orl
out
ljmp
in
inc
insl
filds
dec
mov
shll
ret
in
mov
test
int3
lock
jg
mov
push
int3
pushl
pop
inc
or
cmpsl
sbb
test
lcall
loopne
daa
xchg
mov
aaa
xor
cwtl
incl
ja
inc
std
lcall
and
inc
lahf
rep
xor
ja
mov
data16
cmp
or
pop
repnz
icebp
cmc
add
mov
mov
cmp
cmp
inc
cmpsl
xchg
pop
ss
jns
add
lods
pop
fwait
in
push
imul
clc
ds
push
dec
cmp
dec
lret
icebp
stc
xchg
mov
jne
mov
ljmp
daa
sbb
sbb
cltd
cwtl
les
out
insl
testb
inc
pop
mov
pop
xor
xor
or
fnstcw
pushf
scas
bound
mov
cwtl
cld
ret
xchg
adc
xchg
out
cmp
enter
dec
dec
jmp
mov
inc
pop
pop
nop
cvtpi2ps
loop
xor
decl
test
mov
xor
adc
add
adc
out
jle
mov
call
inc
fisttpll
jl
popa
adc
inc
fs
je
clc
fidivs
and
jg
mov
and
cmpsl
jno
sbb
sub
into
dec
hlt
ja
ja
cmp
mov
sbb
or
fisubs
test
pop
dec
adc
lds
and
pop
aas
ss
test
aas
sub
sub
ljmp
pop
cld
xchg
mov
test
pushl
mov
push
mov
jne
in
sti
pop
je
sub
fidivs
cli
jmp
jmp
xchg
pop
jp
inc
dec
push
addr16
lcall
in
jl
cmp
shlb
lcall
add
dec
and
ffree
rolb
cltd
xor
adc
push
inc
mov
in
ja
rolb
ficompl
repz
imul
cmp
lea
inc
xchg
aad
xchg
arpl
pushl
mov
mov
and
ss
push
addb
idiv
dec
shlb
pop
fld1
sti
mov
add
shl
in
test
jl
ljmp
jg
fldt
js
dec
adc
shld
jns
imul
in
inc
fcmove
sahf
mov
adc
stc
incb
jo
mov
sahf
jo
xchg
sub
ret
cs
or
decl
xchg
push
add
mov
xor
jbe
push
cld
mov
fsubl
ret
fucom
inc
popf
mov
pushl
rclb
rcrl
lds
fisubs
pushl
or
inc
lahf
in
cmpsl
inc
les
sar
mov
mov
loopne
out
and
das
cmpsb
and
jo
loope
inc
jbe
mov
adc
ljmp
scas
roll
cmpsb
stc
cld
xor
sbb
jbe
rolb
lock
bound
ret
push
xchg
sbb
cld
inc
cld
pusha
aam
in
pop
clc
pop
loope
dec
mov
sti
xchg
or
jb
mov
aas
rcr
test
mov
decl
inc
mov
ljmp
andl
xor
popf
xlat
mov
or
out
add
jmp
pop
je
lret
xchg
shl
incl
jl
mov
fimuls
dec
cmpsb
inc
out
pop
or
jmp
xlat
repz
clc
scas
cli
call
sub
popa
jb
push
add
push
aad
pop
sbb
pushl
push
negb
imul
mov
mull
daa
and
dec
cmp
xchg
shlb
daa
mov
decl
scas
mov
icebp
xor
adc
shl
dec
nop
mov
loope
nop
adc
add
dec
popf
icebp
adc
call
push
bound
cltd
aaa
mov
push
repz
mov
lods
call
ds
decb
pop
aad
out
mov
xchg
call
mov
dec
fcomps
jmp
jge
test
decl
adc
mov
aas
and
fcmovnu
mov
ljmp
sub
negl
adc
insl
shl
rcrb
mov
add
test
inc
cmp
ret
aam
mov
dec
stc
popf
jae
jmp
ffreep
jne
aaa
mov
mov
repz
loopne
mov
mov
mov
dec
cli
cmpl
xorb
call
jbe
dec
jae
mov
imul
push
mov
mov
mov
jbe
xor
and
fcoms
push
dec
and
mov
das
fbld
cmp
pop
mov
mov
xchg
ljmp
fucom
sub
icebp
cmp
test
loop
lods
mov
push
sbb
lea
movsb
orb
xchg
imul
sub
scas
jns
cmp
dec
flds
lea
xchg
cmpb
div
incl
xor
cli
jnp
or
mov
cmpsb
inc
mov
out
incl
shrb
outsl
rolb
or
cld
inc
jl
cmp
push
fwait
mov
cwtl
jge
shlb
sub
loopne
mov
outsb
lods
mov
mov
inc
xchg
mov
mov
mov
lods
mov
out
push
pushl
andb
dec
and
jp
pushf
movl
adc
pop
and
ljmp
xor
or
fdivrp
stos
insb
mov
lock
inc
mov
lock
or
ss
jno
jg
push
sbb
icebp
xchg
cmp
push
sub
iret
pop
lret
in
cld
mov
mov
orl
adc
mov
cmp
or
mov
jmp
dec
mov
jecxz
aam
lcall
pusha
jo
xlat
adcb
stc
adc
push
jge
fdivr
jmp
mov
inc
mov
pop
jbe
sbb
fwait
dec
push
mov
jecxz
cmp
incl
cmp
and
fs
push
cmc
scas
das
insb
dec
mov
inc
pop
mov
aas
test
pop
jbe
fndisi(8087
in
mov
sbb
into
mov
push
mov
lcall
movsb
jmp
stc
push
das
testb
stos
mov
cmp
sbb
mov
cwtl
out
les
clc
lds
and
ss
pop
push
pop
fs
add
lcall
ss
test
push
arpl
iret
imul
inc
movsb
inc
dec
andl
xchg
ljmp
sub
sub
jbe
push
into
inc
mov
inc
mov
lcall
jmp
neg
sbb
popf
js
mov
cld
jnp
outsl
cmpl
pushf
mov
and
inc
inc
or
and
mov
dec
ljmp
and
divl
xchg
inc
outsl
enter
hlt
in
incl
xor
xchg
xchg
cmp
fidivl
ret
movsl
add
decl
fsubrs
pop
mov
mov
insl
pop
sub
mov
lahf
cmp
or
pop
mov
ficompl
or
jg
inc
cli
jo
inc
in
sub
mov
push
std
outsl
push
cmc
sbb
adc
push
cmp
aam
movsl
jmp
mov
xor
mov
adcl
cld
and
xor
mov
dec
orb
mov
decl
jbe
rcrb
rorb
push
insb
scas
stos
sub
and
cld
aaa
loop
mov
pushl
test
push
ffreep
mov
dec
xchg
aad
scas
xor
loopne
arpl
lods
call
pop
mov
jns
push
mov
jg
aaa
cs
and
mov
addl
xchg
fs
sub
pushf
jae
cmc
sub
or
sub
inc
test
inc
loop
push
sbb
stc
adc
mov
and
mov
xchg
roll
imul
movhps
mov
jg
loope
mov
or
mov
test
mov
sbb
fwait
dec
mov
push
pushl
test
in
and
inc
mov
int
movsb
xor
movsl
add
jae
mov
call
jne
push
testb
lcall
jmp
cmp
add
inc
cmpsb
sub
sbb
sub
cld
jbe
xor
std
call
mov
push
mov
inc
int
pop
loop
mov
rcrl
sub
cmpsb
sub
inc
out
xor
sar
push
hlt
in
jnp
sahf
out
jmp
cmpsl
cmp
cld
out
ret
push
ljmp
lods
aaa
je
mov
in
mov
bound
sbb
inc
aam
jp
dec
stos
push
xor
addb
std
sub
popl
mov
lret
gs
mov
push
add
fistpl
and
loop
add
pop
shlb
hlt
cwtl
push
repz
decl
push
push
mov
pop
push
mov
fldt
out
push
std
push
aas
lcall
ja
cli
mov
pop
mov
mov
shl
push
fists
in
loope
fcos
ljmp
jmp
fimuls
gs
lcall
lcall
sahf
mov
icebp
out
pop
sbb
xor
sahf
dec
push
lahf
push
lock
test
inc
mov
pop
aas
mov
xor
stos
mov
lods
jl
fcompl
lret
mov
clc
fcoms
sub
pushl
in
nop
jb,pt
mov
pop
sbbb
jbe
cmp
mov
lcall
pop
loop
xchg
xchg
pop
push
sbbl
jl
mulb
mov
cli
ljmp
mov
xor
push
adc
push
push
aad
call
mov
and
rol
ret
test
or
mov
xchg
stc
jo
and
outsb
sub
cmc
and
push
cmp
jns
mov
fdivrs
sub
outsl
clc
incl
mov
addr16
cli
int
pusha
js
or
add
mov
rcrb
imul
xor
loop
nop
add
decb
fs
fs
add
pop
add
jg
xchg
shrl
test
icebp
mov
ror
loop
jb
lcall
scas
xchg
leave
lret
insb
lahf
lcall
pushf
imul
or
sbb
adc
or
dec
adc
jnp
js
jb
test
push
mov
loop
ds
and
jmp
addr16
fstl
mov
daa
mov
sbb
sarb
aam
xchg
push
in
ja
push
int
scas
jg
hlt
add
cmp
test
mov
mov
add
push
jns
aam
cmp
pop
push
adcl
jg
ds
scas
adc
mov
xor
pop
mov
cwtl
lcall
jecxz
arpl
jmp
mov
lds
ret
push
mov
jg
ljmp
lods
imul
ja
mov
fwait
adc
mov
add
pop
js
enter
aam
inc
fwait
mov
xchg
mov
xor
cmpb
mov
sahf
cwtl
push
pop
mov
call
test
push
push
leave
inc
out
scas
call
test
add
rol
jg
andb
xor
imul
mov
mov
pushl
mov
fcoml
nop
push
and
push
dec
add
mov
inc
push
cmp
sbb
test
mov
dec
jmp
sti
cmpsb
mov
jl
subb
sub
clc
cltd
leave
xchg
sbb
xor
bnd
incl
push
or
and
out
jp
jmp
push
adc
lret
xchg
xor
inc
mov
sub
in
pop
sbb
decl
mov
fists
pushf
sar
jo
mov
sbb
outsl
cmp
gs
pop
ud0
push
inc
cmp
cli
lods
cs
test
jbe
xchg
in
insb
or
add
sahf
xchg
decl
jno
add
lret
push
adcb
xor
dec
mov
jo
lret
jmp
scas
pushf
pop
pusha
aaa
imul
inc
or
es
dec
push
insb
pop
lea
pushl
xchg
mov
xchg
stc
mov
mov
inc
es
inc
cmc
movb
fisttps
popf
or
inc
push
mov
ret
mov
cwtl
test
cmp
push
cmpl
das
jmp
add
adc
add
pushl
das
mov
lcall
mov
lret
call
xchg
push
test
add
rol
incl
cld
and
mov
outsb
adc
mov
jmp
inc
fdivrp
jg
call
add
scas
adc
inc
push
pop
jge
inc
pushf
cld
dec
imulb
mov
fwait
jmp
arpl
inc
outsl
xchg
mov
xchg
sbb
nop
push
cmp
inc
aas
mov
mov
jecxz
jb
aad
fldenv
es
aad
fcmove
mov
fisttps
push
sub
fstpl
sub
xchg
mov
cld
incl
or
lahf
jno
outsb
popa
jg
jg
pop
jnp
sbb
jno
ds
push
aad
jae
mov
je
and
imulb
repz
test
lods
jb
mov
jb
mov
insb
outsl
push
mov
shll
ss
mov
orb
xor
loop
ret
sub
mov
dec
dec
add
stos
imul
das
sbb
jne
mov
call
pop
pop
mov
inc
and
incl
sbb
push
rcrb
sbb
dec
inc
ds
pop
jmp
imul
dec
insb
jg
js
in
lock
cs
rorl
div
sbb
ss
pop
push
xor
jp
lcall
scas
decl
nop
test
stc
filds
data16
mov
push
push
dec
sahf
call
xor
jg
push
test
out
and
push
hlt
and
adc
or
inc
push
sar
frstor
pop
lds
shll
xchg
push
adc
loopne
arpl
je
xor
lcall
dec
repnz
jae
push
sub
fisubs
in
mov
add
incl
ds
rclb
shlb
xchg
mov
shl
cmp
rcrl
clc
pushl
popa
cmp
ljmp
aam
ficomps
mov
sub
sbb
incl
cld
or
inc
inc
and
jp
pop
push
cmp
xchg
imul
std
dec
mov
and
inc
mov
sbb
push
dec
sub
sar
push
fwait
ljmp
rclb
mov
mov
cld
dec
mov
jo
mov
data16
and
jb
fwait
jle
jle
incl
xchg
or
pop
dec
pop
stos
hlt
adc
je
cli
test
inc
mov
dec
adc
xchg
int
ds
push
pop
fsub
negl
dec
adc
jp
js
sbb
or
and
dec
push
aaa
std
jg
xchg
leave
push
mov
mov
jae
xchg
xchg
clc
cmp
in
ret
push
imul
lock
andl
mov
mov
xorl
test
cmp
cwtl
sbb
sbbl
adc
add
jmp
stos
in
ljmp
test
je
push
inc
jp
adc
inc
adc
ds
or
xor
or
cmp
scas
gs
xchg
inc
dec
mov
sub
dec
ljmp
adc
sub
ja
ret
mov
mov
inc
push
or
incl
cmp
pop
inc
dec
movsl
sti
mov
flds
fcomp
rolb
jg
xchg
and
shlb
mov
xchg
mov
jmp
mov
mov
insb
jbe,pn
dec
pop
cs
sub
imul
mov
outsl
mov
stc
loopne
dec
in
addr16
out
jae
cwtl
sub
loopne
in
sbb
ja
and
dec
and
push
ffree
ljmp
push
aad
popf
fisttpll
mov
dec
cltd
data16
lods
fildll
ret
dec
in
sbb
test
sbb
push
out
sbb
lods
addr16
mov
xchg
cmp
negl
mov
sahf
jmp
repz
inc
cmp
jb
sub
sbb
sahf
mov
scas
scas
and
inc
in
mov
and
ljmp
ds
or
pop
ss
lcall
push
add
xchg
outsl
int3
iret
cmp
decl
xor
rclb
xchg
pop
hlt
push
sub
subb
iret
ror
imul
xor
and
pop
aaa
mov
inc
xchg
test
shrl
inc
add
call
cld
mov
push
mov
push
jge
pop
inc
gs
cmp
inc
shll
push
lcall
lock
or
xor
sbb
popf
pushl
outsb
arpl
pusha
movsl
sbb
rclb
movsb
enter
loope
push
or
call
leave
scas
pop
ret
std
in
jg
gs
xor
sub
call
cli
cs
addr16
jp
add
dec
das
lcall
lret
lcall
pop
shlb
mov
and
jo
mov
jbe
mov
orb
stos
andl
ljmp
sar
mov
sti
sbb
lock
leave
icebp
add
sbb
add
ja
push
gs
cli
stos
sub
sti
clc
jne
decl
out
inc
das
dec
loopne
and
mov
ds
out
lds
les
jmp
daa
dec
cmp
fbld
pop
mov
dec
daa
mov
lock
movsl
mov
in
lahf
mov
ljmp
fdiv
test
popa
ljmp
loope
push
sbb
push
mov
sbb
dec
les
lds
mov
push
adc
aad
jl
insb
orl
loop
jmp
nop
rcrl
ret
mov
mov
jle
add
jmp
fs
ret
loopne
pop
xor
mov
cmp
divb
loop
decl
xchg
dec
adc
cltd
inc
fistps
xlat
and
test
jmp
rcl
pop
jl
sub
adcb
int
adc
mov
sub
out
jbe
je
mov
out
fs
jns
incl
add
jbe
fstps
out
push
mov
fstp
into
fucomip
push
sti
sbb
out
fwait
repz
push
lods
jp
pop
movsb
lret
sarb
lds
mov
pushl
jmp
cmpsl
xor
test
and
dec
and
ljmp
pop
jecxz
out
fdivrp
xor
es
cli
mov
fisubrl
in
das
clc
incl
popf
pop
lret
pop
fstps
add
jge
outsl
lods
testb
loope
and
pushl
aam
jmp
lahf
mov
movsl
add
sbb
push
pop
or
xor
mov
scas
mov
lods
lret
imul
jbe
fnstenv
mov
out
gs
pusha
sbb
xor
inc
iret
fimull
push
jg
cmp
xchg
shr
dec
dec
mov
add
dec
cltd
jge
mov
incl
adc
in
mov
push
and
jge
mov
mov
mov
loopne
and
inc
inc
or
incl
adc
jg
cli
cltd
xchg
ja
int3
loop
inc
pop
lret
jae
imulb
xchg
into
push
testl
je
adc
inc
fstl
test
jmp
pushl
dec
int
jl
sub
loop
ds
mov
mov
pop
outsb
inc
pop
sbb
lcall
mov
xlat
cltd
sti
mov
mov
or
xor
jo
das
call
mov
or
mov
jmp
xor
inc
lea
jg
orb
lret
scas
loopne
in
push
or
je
in
or
mov
leave
mov
xor
into
cmc
jnp
daa
inc
push
jg
push
loope
sub
leave
mov
lcall
pop
xchg
enter
mov
test
cs
jmp
add
push
loopne
and
push
xor
in
lock
out
xor
sub
xchg
std
jae
mov
decb
pop
pop
xor
in
jge
lods
dec
push
sub
aas
iret
jmp
sub
popa
in
mov
cmc
aad
cli
test
cli
jg
xchg
or
loopne
cmp
addr16
mov
pushf
dec
movsl
jne
clc
and
jmp
dec
in
repz
push
iret
ret
ja
ljmp
mov
jg
ja
ljmp
in
sub
jmp
mov
leave
push
push
lret
clc
sub
fsubrl
pusha
xchg
push
sub
mov
sbb
add
mov
bound
cmp
push
int3
push
inc
xchg
arpl
lret
dec
fidivl
out
and
mov
loope
xor
jg
jecxz
es
fsubs
insl
xchg
lcall
out
sar
mov
rcrb
xchg
repz
int3
in
mov
decl
int
cltd
das
aam
loopne
jp
xor
xor
or
pusha
hlt
ja
fdivs
cmc
jns
pop
pop
mov
pop
and
push
sub
add
add
mov
push
cld
pushl
mov
lahf
pop
xor
mov
in
jg
ss
data16
test
inc
mov
cli
cmp
dec
in
pushl
push
dec
or
shll
dec
mov
js
pop
fbld
out
mov
adc
idivb
pop
sahf
jmp
dec
insl
fwait
jle
xchg
scas
testb
sbb
adc
les
mov
jmp
cwtl
mov
push
mov
adc
inc
sub
movsb
cwtl
mov
push
repnz
xchg
lock
incl
ds
pop
inc
pop
mov
fs
mov
xchg
call
jg
imul
and
mov
and
mov
or
imul
dec
push
outsl
sub
mov
jne
dec
add
fisttpll
enter
add
ret
or
mov
stc
fcompl
std
lcall
xor
leave
das
adc
mov
xor
jb
push
addl
xchg
hlt
hlt
xorb
pusha
mov
sbbb
push
fcos
mov
jg
out
cmp
mov
mov
test
leave
inc
in
mov
xor
decl
inc
pop
and
lods
out
xor
push
insb
and
repz
in
xor
call
mov
or
test
lods
imul
dec
mov
mov
pop
je
mov
mov
fwait
sahf
sub
ljmp
arpl
shlb
dec
test
loop
sbb
sbb
jg
decl
inc
cwtl
mov
inc
stc
shll
test
jp
aas
fwait
xchg
pushl
rclb
outsb
adc
inc
sub
cmpsb
lds
mov
mov
inc
or
call
add
mov
inc
push
test
test
lcall
mov
xchg
pop
push
rorb
push
mov
mov
mov
push
fisttpl
add
push
adc
adc
fstps
cmc
shll
pop
mov
sbb
jo
pop
and
js
adc
mov
xchg
jl
scas
and
pop
lret
fsubrs
mov
push
fildll
repz
pop
sub
movsb
adc
push
mov
incl
in
mov
sbb
mov
jbe
cmp
das
mov
inc
mov
test
sar
pop
loopne
stos
data16
mov
and
xchg
mov
std
into
push
mov
andb
fdivr
pop
xlat
sbb
inc
sub
imul
sub
mov
sbb
push
sbb
scas
call
fistl
cmp
sub
cmpl
loope
or
jnp
mov
cltd
ficoml
jmp
or
lret
dec
mov
jae
fcoms
mov
sti
sbb
pop
and
inc
dec
aad
outsb
jb
jl
adc
push
ja
loope
pop
xchg
lock
mov
adc
in
dec
or
sub
add
push
cs
mov
cwtl
inc
dec
out
adc
mov
clc
push
sub
adc
add
pushl
shrl
xchg
lods
jbe
sub
dec
xchg
cmpsb
inc
mov
push
xchg
loopne
jo
scas
shrl
jg
icebp
lcall
cmp
in
xor
jno
mov
adc
sbb
in
inc
push
xchg
imul
pop
in
mov
stos
inc
mov
out
inc
aam
sub
mov
sar
cmp
jmp
mov
outsl
pop
push
not
test
push
ljmp
mov
mov
popf
arpl
pop
rclb
lods
mov
test
jg
mov
xorl
inc
shrb
lock
sub
stos
jae
test
mov
lcall
addr16
mov
adc
xor
addb
xor
into
jg
in
enter
cmp
mov
or
and
mov
mov
pushl
fdivrl
add
ret
fs
inc
nop
adc
adc
sbb
push
call
imul
xchg
pop
imul
pop
fs
push
cmp
dec
cmp
decl
xlat
mov
sti
sub
and
jl
mov
mov
out
jae
or
fistpl
jmp
pop
mov
push
pusha
cld
nop
xorb
sbb
jl
add
sbb
frstor
push
pop
decl
lods
jmp
jns
int
jns
and
mov
decl
add
inc
pop
push
xor
pop
xor
push
sar
sbb
pop
sahf
movsb
or
rorb
mov
outsb
insb
stc
xor
pushl
clc
cltd
mov
jecxz
mov
xchg
inc
leave
pop
sar
jg
push
mov
scas
mov
add
lods
out
outsb
shrl
test
adc
pop
cmc
fstl
imul
mov
mov
sub
pop
lock
and
inc
mov
lods
sahf
icebp
fbstp
cmp
fs
xchg
stos
rorl
xchg
push
cwtl
ror
adc
call
jno
test
dec
clc
mov
jge
ret
sbb
and
adc
xor
out
xlat
cld
mov
in
pop
xchg
in
cmpsb
aaa
push
sbb
or
je
and
test
ja
jp
dec
pushl
mov
and
lcall
dec
cmp
int3
adcl
sub
pop
inc
lcall
dec
test
imul
arpl
cmp
popl
in
ss
ss
hlt
push
dec
xor
xor
mov
xor
mov
jg
dec
pop
pop
cmp
lcall
dec
in
jno
inc
cmp
sub
sub
pop
and
fwait
arpl
ljmp
cmp
pop
loope
fwait
les
sub
cwtl
or
push
jae
inc
add
jne
in
inc
inc
test
dec
fiaddl
mov
mov
inc
inc
in
loopne
add
jp
push
in
or
mov
mov
ret
sbb
pop
idivl
ja
shrl
repz
es
lcall
out
sahf
loopne
inc
dec
fs
call
stos
sbb
adcl
lcall
ljmp
mov
adc
jle
popf
mov
sti
mov
dec
or
pop
hlt
mov
push
mov
stc
push
pop
jne
loope
jns
mov
cmp
lcall
imul
jg
popf
jl
lret
fs
cmp
inc
dec
push
mov
xchg
pop
popa
xor
pushf
adc
or
mov
movl
jecxz
pop
or
ljmp
jp
or
cwtl
cmpsl
mov
and
mov
incl
sbb
bound
insb
in
or
stos
fcoms
pop
lods
mov
inc
movsb
xchg
fidivrl
mov
lea
mov
and
cmc
sub
outsl
call
xor
cmpsl
mov
scas
testl
or
mov
pop
in
js
jne
test
imul
mov
lret
adc
loope
call
xor
decl
repz
pop
loop
jne
pop
pop
mov
cmp
imul
lret
sbb
lcall
xor
mov
std
and
ljmp
sbb
ds
jg
dec
cld
mov
pop
mov
mov
add
mov
pushl
cmp
aam
repz
mov
inc
es
cmp
fisubrs
xorb
lahf
push
andl
cmpsl
dec
nop
pop
cmp
push
pop
lock
jle
lcall
mov
aaa
mov
dec
push
out
jo
jle
adc
lahf
test
loopne
in
imul
and
into
pop
cmpsb
mov
or
ljmpw
jmp
gs
and
ljmp
push
xchg
stc
sbb
cmp
bnd
xor
into
ret
pop
gs
push
pop
aad
incl
and
xchg
jo
pop
sub
push
push
lods
jmp
inc
lcall
push
jl
fnsave
push
aad
out
xor
and
and
push
imul
loopne
push
iret
fmuls
in
popf
call
inc
or
adc
clc
mov
aam
rorb
inc
rclb
push
gs
xor
fcomip
call
das
arpl
imul
or
fcoml
push
pop
lcall
scas
lods
fstl
das
push
sbb
insl
xor
xchg
iret
ds
jmp
mov
cwtl
sbb
lcall
ljmp
mov
fcmove
xlat
jp
into
pop
pusha
sbb
outsl
mov
lods
clc
pop
jmp
jns
jno
in
cmp
in
xor
jp
insl
in
in
mov
or
cmp
mov
in
das
int
pushf
and
decl
rolb
pop
test
icebp
out
push
stc
or
decl
mov
sub
push
jnp
lahf
mov
scas
orb
or
lcall
daa
fs
int
and
xor
xor
dec
mov
test
mov
idiv
insl
cmp
mov
cltd
mov
and
pusha
mov
bound
insb
xorb
jbe
js
pop
xor
call
je
adc
test
adc
cltd
or
adc
mov
int3
jp
outsb
pop
pop
inc
aad
sbb
ljmp
or
hlt
lcall
cmp
das
dec
hlt
pop
repz
sahf
xchg
into
or
mov
test
ret
je
and
push
or
xchg
cmpsl
jmp
dec
jnp
cwtl
dec
pop
xchg
leave
orb
leave
mov
mov
or
incl
loope
xchg
adc
cmp
xlat
jp
xchg
into
fildll
push
add
pop
mov
xor
cli
lcall
push
adc
dec
jmp
inc
cmp
enter
inc
inc
jge
cwtl
add
incl
dec
popf
sub
inc
jle
xor
loopne
cli
mov
mov
adc
ljmp
lcall
div
test
cmpsl
pop
outsl
aam
add
dec
jg
rcrl
push
cmp
mov
sti
call
leave
ror
movsl
dec
push
fnstcw
addr16
pop
cmp
mov
jb,pt
cmpsl
ljmp
imul
add
fldl
daa
xlat
inc
push
pop
mov
shl
jmp
scas
and
insb
clc
jecxz
ficoml
sub
outsl
in
mov
negl
mov
mov
jmp
add
call
fistl
pop
jbe
addr16
mov
cmpsl
adc
mov
std
ja
fisttpl
xor
cmpsl
push
aad
mov
mov
cmpsl
std
roll
mov
mov
adc
and
testl
mov
call
loop
sub
lcall
sbb
pop
aaa
adc
add
cmp
lea
inc
jo
int3
jne
lods
addr16
mov
cld
sbb
xchg
cmp
aad
js
mov
ret
mov
mov
jge
pop
and
dec
ss
or
dec
mov
mov
je
popa
sahf
xor
jg
sbb
jb
enter
mov
lret
push
mov
decl
mov
icebp
jbe
cmpl
adc
dec
xor
ljmp
test
pop
pop
cmp
inc
andb
popa
cli
cmp
sub
inc
push
push
pop
repnz
rcll
outsl
sti
ljmp
in
sub
sub
lea
in
jecxz
mov
es
jmp
or
in
and
and
ja
jp
mov
into
bound
call
std
icebp
sbb
inc
imul
sbb
lcall
sahf
cld
cmp
xchg
adc
sbb
lahf
xchg
fisttpll
cmpsl
jg
std
mov
jecxz
inc
popf
test
and
cmp
or
icebp
pop
mov
and
xor
xchg
mov
fisttps
xchg
ljmp
xlat
xor
inc
nop
cmp
je
aas
pop
push
pop
xor
fistpl
xlat
in
in
xchg
jnp
xchg
adc
inc
ja
lods
fdivs
xchg
ss
cltd
adc
rcl
mov
cld
adc
sub
mov
test
mov
jmp
fstpl
jle
cld
sub
jnp
iret
add
cld
sbb
adc
sbbb
push
jo
iret
inc
mov
mov
stos
imul
adc
mov
popf
das
ja
xchg
mov
imull
incl
stc
lcall
fs
adc
pusha
cwtl
cmp
andb
add
lcall
jns
aam
jae
sub
fimuls
or
nop
mov
incl
mov
pop
stos
xor
into
insl
jp
cmpw
in
repz
scas
pop
add
std
out
jg
ljmp
daa
mov
sbb
inc
hlt
sahf
mov
das
xchg
sbb
cmpsb
and
mov
jg
dec
adc
lea
loopne
aaa
pushf
in
pop
repnz
xor
call
jns
out
cmpsb
cmp
dec
das
push
xor
jg
inc
in
push
ret
mov
out
cli
pushl
jno
popf
inc
mov
xchg
addr16
add
andl
loop
add
repz
int3
push
jp
mov
push
inc
fs
ficoml
inc
stos
xor
in
and
pop
dec
push
pop
imul
int3
imul
and
andl
into
push
ss
push
daa
jp
pop
fnstenv
insl
out
call
inc
scas
push
sbb
pusha
push
jnp
movsb
mov
into
in
cmpxchg
scas
test
sbb
mov
cmpsb
mov
lret
or
lods
fs
dec
iret
or
mov
test
push
jmp
sub
jnp
subb
ret
xchg
pop
shll
gs
dec
xchg
fimull
loopne
mov
sub
adc
daa
push
ds
cwtl
push
cltd
out
jne
adc
mov
aas
rolb
lods
and
lods
dec
clc
fsubrl
sub
adc
pop
cmc
lcall
adc
cmp
lret
inc
std
outsl
xchg
adc
jmp
jns
push
cli
incl
loop
int
and
out
outsb
adc
cli
push
pop
out
lcall
call
daa
stos
xchg
iret
sbb
daa
arpl
mov
popa
mov
aad
sbb
ljmp
incl
popfw
lds
mov
out
xor
add
hlt
pop
or
pusha
and
xor
push
lcall
cmp
lock
fs
lcall
test
mov
flds
jecxz
lock
pop
push
mov
mov
add
testl
lret
das
xchg
xor
sar
decl
dec
aaa
test
push
or
adc
ss
stos
sub
pop
sarb
cmp
mov
inc
xchg
mov
sub
in
xor
outsb
decb
outsb
rol
fwait
cmp
data16
push
fistl
lock
das
int3
pop
adc
jnp
cld
mov
scas
aas
fwait
clc
cmp
adc
and
std
lods
pop
jecxz
cmpsb
cwtl
movsl
jmp
push
sbb
cmp
mov
push
out
fsts
push
mov
mov
and
mov
mov
aam
lahf
pop
inc
pop
fcos
jg
jp
mov
jge
lret
repz
and
push
push
cmpsb
jb
sub
inc
or
ss
stos
fdivrl
mov
shll
js
jl
data16
dec
jae
mov
jmp
insb
imul
outsl
cmp
xlat
arpl
push
mov
mov
stos
mov
lods
insl
pop
adc
jmp
jnp
std
mov
dec
in
in
cmp
or
in
dec
stc
lret
push
cmp
pushl
scas
mov
rorl
xchg
ret
sub
mov
pusha
sbb
addr16
or
mov
call
shll
dec
cltd
or
int3
bound
lea
adc
imul
cmpsb
mov
nop
lahf
mov
loope
push
mov
or
cltd
aam
or
dec
aad
aaa
cmp
jmp
sahf
cli
pop
mov
sbb
js,pn
lock
adc
lock
mov
sub
fcmovne
mov
lcall
dec
cwtl
adc
icebp
lds
shrb
mov
adc
mov
cmp
loopne
das
lcall
dec
pop
out
adc
ljmp
and
test
mov
add
fnstcw
mov
or
ljmp
insb
xorl
dec
rcrl
xor
in
sahf
not
decl
lods
sbb
cmpsl
mulb
mov
sub
ljmp
js
jnp
loopne
pushf
arpl
xlat
and
hlt
mov
xlat
and
hlt
loopne
dec
pop
cmc
inc
jp
orl
mov
jmp
dec
popa
idivb
pop
xlat
frndint
idivl
adc
ja
insb
push
jno
cmp
decl
inc
insl
sti
clc
dec
push
add
xchg
addr16
shlb
sahf
test
lcall
dec
add
or
notl
popf
adc
sahf
cmp
inc
jle
jne
lods
rcrl
ljmp
sbb
movsb
cmp
mov
imul
add
pop
std
jo
xchg
dec
sub
add
scas
incl
je
mov
in
push
jb
jmp
mov
xor
adc
lcall
pop
iret
sbb
loope
scas
add
stos
das
ret
mov
mov
mov
mov
daa
push
push
add
mov
mov
push
ja
adc
decl
jno
in
jecxz
in
and
xchg
aad
ret
pop
inc
jae
cwtl
xor
decl
push
and
push
mov
dec
mov
push
stc
aam
jl
cmc
addr16
cmp
call
inc
out
scas
sti
iret
nop
jg
aam
lret
inc
mov
je
outsb
mov
cmp
incl
rcrb
adc
ljmp
cli
cs
jb
ljmp
clc
mov
sahf
or
xchg
jne
cli
dec
mov
jnp
testb
jmp
sahf
push
cmp
push
sti
and
xor
scas
mov
insl
jns
ljmp
popf
ljmp
cwtl
test
jnp
out
or
sbb
push
dec
ds
mov
rcrl
jg
mov
xorl
pop
push
inc
pop
jl
jns
and
xlat
xchg
notb
mov
mov
in
push
rorb
pop
scas
movsb
jbe
inc
cld
adc
jmp
sub
mov
les
and
mov
or
enter
push
into
in
movb
mov
or
rorl
mov
cmp
jg
jmp
inc
daa
fistps
mov
cs
sub
pop
pushf
mov
loope
int3
jnp
sbb
ljmp
cmp
ficoms
add
add
push
mulb
inc
mov
aas
lods
fmull
mov
push
adc
add
pusha
jp
sbb
outsl
out
in
data16
push
or
xor
sbb
mov
sbb
mov
xlat
xchg
sub
xchg
call
mov
xchg
fwait
int3
mov
add
outsb
xchg
je
aaa
mov
int3
cmp
pop
jae
pushf
fistps
cmp
inc
and
dec
hlt
push
mov
mov
test
daa
lcall
jg
mov
mov
dec
mov
loop
inc
test
icebp
cmc
mov
xchg
lods
incl
lds
in
movsb
or
hlt
inc
xchg
mov
mov
enter
sub
faddl
pushl
jne
test
push
in
cmp
jno
push
xchg
inc
iret
sarl
pushl
pop
jmp
and
clc
aaa
fidivl
outsl
or
aaa
stos
decl
or
arpl
jle
mov
sarl
add
decl
ljmp
pop
data16
decb
hlt
push
lret
dec
fdiv
incl
and
xchg
lret
ja
push
xor
xorb
test
lcall
int
sahf
ret
adc
or
outsl
and
pushl
jp
push
or
push
jae
insb
sub
sbb
ljmp
gs
in
adc
mov
cmp
push
jecxz
outsb
fistl
sbbl
inc
ds
and
shl
decl
dec
fwait
dec
push
rcrb
pop
js
or
sub
fbld
lcall
sarl
call
mov
push
add
sub
outsl
shrb
sub
arpl
clc
fisubrl
ja
addr16
push
lea
imull
rclb
fucomp
xchg
jne
lret
cli
loopne
inc
xor
testb
rclb
movsb
test
push
insb
cltd
xor
fbld
sbb
xchg
pop
xchg
jg
and
adc
je
mov
push
mov
or
jb
popf
sub
inc
mov
in
in
loopne
shl
dec
cmp
cs
test
jno
xchg
ret
outsb
mov
call
and
insb
pop
pop
lret
es
lret
dec
aam
or
cmp
lret
es
out
aaa
scas
cmp
call
inc
push
sub
fstl
inc
idivb
dec
ljmp
fmull
jmp
jmp
xchg
push
pushl
jmp
pop
xchg
mov
or
jbe
negl
cltd
stos
cmp
add
pop
dec
mov
addb
and
lahf
fbstp
inc
sahf
pop
sbb
cli
movsb
sbb
popa
dec
xchg
mov
decl
xor
fcomps
push
lods
jb
pop
mov
adc
ud1
mov
dec
int
fsubs
add
xor
mov
jb
sub
imul
test
cwtl
pushl
pop
repz
adcb
dec
ret
mov
repnz
adc
lahf
stc
or
sti
mov
out
jnp,pn
rcl
loop
stc
dec
stc
stc
andl
pop
cmp
insb
xor
lcall
idivl
fucomip
push
jne
pop
ret
loope
pushl
or
or
jle
ljmp
nop
bound
dec
xor
test
sbb
test
and
dec
xchg
push
ret
cmp
pop
sqrtps
push
test
cmc
cs
out
imul
call
shrl
add
jbe
xchg
ss
std
mov
jno
jmp
fcompl
out
fsubp
add
jmp
dec
inc
mov
ret
fimuls
inc
lahf
push
call
lods
and
pop
fwait
pop
mov
inc
rcrb
dec
idiv
dec
sbb
std
call
int
cmp
pop
aaa
scas
subl
imul
add
jp
decl
dec
dec
sti
add
push
jp
push
movsl
mov
rcll
jno
imul
test
xor
sahf
lods
or
std
scas
add
mov
mov
shlb
mov
add
and
clc
aad
cmp
dec
inc
inc
xor
xor
call
xchg
mulb
es
or
and
mov
out
lea
cmpsb
dec
sbb
mov
mov
mov
ljmp
sbb
sub
rorb
clc
mov
fdivr
cmc
mov
ljmp
jl
xor
je
insl
pusha
pop
inc
and
imul
stos
pop
push
fucomp
jg
test
ljmp
aas
mov
dec
xchg
popl
dec
push
jmp
aaa
pushf
fstl
rcl
or
sub
addr16
xor
decl
xor
repz
xor
xchg
imul
int3
fdivr
jl
fwait
jge
das
cli
das
mov
push
adc
adc
jbe
adc
and
aad
decl
leave
mov
or
cwtl
sbb
imulb
add
sub
shlb
cmp
cmp
push
cmp
sbb
negb
pop
mov
xor
mov
ljmp
and
cmp
ja
cmp
aad
sub
push
negl
decl
or
sbb
or
orb
loop
sar
aaa
mov
aad
push
cwtl
mov
and
jmp
sarl
adc
jg
mov
push
mov
and
inc
and
pusha
jl
mov
mov
xor
pop
and
loope
pop
les
xchg
cmp
or
fwait
nop
cmp
adc
cmp
arpl
shl
cld
mov
aaa
xchg
adc
cltd
int3
xor
cmp
xchg
push
hlt
jmp
testl
mov
jl
lock
out
add
ficoms
sub
jp
stos
adc
pop
insb
scas
fwait
jno
bound
push
mov
outsb
inc
orl
adc
call
jle,pt
shrl
mov
test
jg
decl
ds
fdivrs
push
into
sub
loop
icebp
xchg
adc
call
ljmp
aam
push
popf
xchg
mov
out
cmp
iret
jecxz
sbb
xchg
add
sarl
imul
movsl
xor
mov
adc
jge
cmp
int3
inc
and
sahf
ss
pusha
int
insl
orl
fidivs
ficomps
mov
daa
add
sbb
jne
and
into
pop
aas
and
mov
outsl
cld
sar
mov
lods
test
jle
sbb
addl
bound
sub
add
jmp
dec
mov
xlat
sub
or
cmpsl
ljmp
clc
mov
mov
or
inc
pop
repz
push
xchg
shl
or
fcomip
ljmp
mov
mov
imulb
push
roll
decl
adc
xchg
add
das
rolb
inc
dec
mov
xchg
mov
loope
xchg
inc
jns
mov
adc
adc
add
lret
ficomps
mov
sub
inc
addb
pop
call
test
adc
divb
mov
test
push
adc
inc
inc
jnp
notl
push
add
ret
adc
xor
push
in
shlb
pop
xlat
stos
je
test
mov
fisttps
insb
test
dec
inc
test
xor
push
les
xchg
mov
in
sbb
mov
push
jne
incl
cld
mov
push
xor
in
dec
dec
idivl
rorb
test
je
repz
add
jmp
insl
outsl
jae
mov
hlt
or
shrb
cmpsl
pop
xchg
lret
add
stos
lods
mov
in
nop
fcompl
pop
in
test
cwtl
fldt
lock
push
lret
cmp
pushf
jae
push
int
decl
sub
xchg
or
push
nopl
mov
xlat
leave
lods
inc
cmc
sahf
movsl
call
dec
push
les
add
push
mov
cmp
sub
mov
pop
cmp
iret
mov
mov
loop
out
sub
pop
stos
movsb
dec
sahf
inc
xchg
in
cmp
scas
inc
fninit
dec
sub
mov
je
addb
cmpsl
decl
cli
in
int3
sbb
stos
xlat
or
imul
pop
inc
imul
inc
xor
in
std
or
and
add
sbb
ret
inc
xor
pusha
or
mov
jmp
mov
cmpsb
dec
sbbl
fimuls
sahf
mov
inc
mov
stc
add
incl
push
popa
test
rol
mov
mov
cmp
mov
pushl
sti
mov
jp
jp
nop
mov
test
cli
stc
frstpm(287
in
mov
adc
pop
add
jno
push
fs
ds
out
add
ljmp
cmpsl
cmpsb
xchg
and
mov
imul
add
addl
push
out
dec
aam
shrb
xchg
test
push
sbb
arpl
dec
fstpt
movsb
mov
mov
adc
dec
hlt
repnz
push
stos
iret
and
decl
xor
popf
push
pop
ffreep
xlat
orl
lahf
mov
sub
incl
out
mov
mov
sub
adc
or
inc
aas
sbb
lcall
leave
adc
dec
sub
cmpl
push
mov
out
daa
rcr
push
cmpsb
call
insl
lock
jae
mov
mov
mov
cmp
ja
ret
pop
cmp
mov
into
ljmp
mov
mov
or
mov
lret
inc
fdivrl
or
xchg
mov
popl
stos
mov
out
adc
jmp
incb
shll
stos
push
mov
test
les
stc
push
add
mov
mov
adcl
or
mov
fsubr
sbb
cs
mov
daa
fs
pop
scas
mov
pop
repnz
adc
push
lahf
and
mov
jg
jne,pt
lds
jmp
inc
test
or
pop
aam
adcb
out
andb
arpl
lcall
into
inc
aaa
mov
add
sub
jno
jns
call
iret
rorb
xchg
sarb
aas
and
fisttps
in
movsb
ja
inc
push
call
scas
xchg
lahf
hlt
mov
repnz
pusha
dec
enter
icebp
inc
cwtl
sbb
icebp
repz
lcall
pop
inc
fcoml
js
jb
lds
mov
imul
ja
repz
decb
jmp
pop
mov
ljmp
and
adc
in
aas
xchg
test
pop
jecxz
js
mov
ss
inc
scas
mov
jbe
aam
dec
mov
pushl
pop
cld
je
push
icebp
test
int
cld
pop
mov
shr
cwtl
add
orb
jl
mov
pushl
aas
xor
aad
cmc
mov
stc
out
sbb
xor
ljmp
into
std
fcompl
pop
cmpsl
and
stos
test
idiv
pop
loopne
xor
shrl
xor
mov
fwait
mov
cmpsb
cmc
push
xor
data16
sarb
pusha
pop
jbe
dec
pop
lods
xor
adc
push
repnz
sbb
dec
iret
add
dec
ljmp
push
inc
decl
rorb
push
out
xchg
mov
mov
jmp
push
outsb
xchg
shrb
inc
stos
or
ja
sub
and
adc
xor
sahf
cmp
daa
dec
adc
jmp
mov
jb
pmaxsw
gs
xchg
leave
ja
dec
cld
lcall
scas
mov
xor
outsl
in
daa
std
ss
js
mov
in
mov
xchg
std
ljmp
dec
inc
movsb
subb
outsl
dec
sbb
or
fdivl
fdivrl
mov
mov
lods
pop
mov
mov
insl
jmp
decl
cmp
or
add
and
or
adc
mov
dec
mov
bound
fs
jmp
movsl
lahf
sahf
xor
push
ja
jecxz
push
inc
dec
push
test
adc
das
subl
jmp
stos
cli
push
aad
xor
dec
or
xchg
fisubrl
shll
cmp
dec
xor
imul
jae
push
adc
gs
mov
cmp
or
xchg
sub
xchg
stc
and
fldcw
in
das
xchg
incl
mov
fldt
adc
aad
mov
jl
sahf
or
pop
push
mov
in
stos
push
sbb
push
test
sbb
push
push
out
test
xchg
cmp
mov
inc
jl
hlt
in
mov
jmp
loop
decl
movsb
movsb
stc
ret
mov
fs
ljmp
daa
sbb
jmp
sti
ja
test
and
incl
mov
lock
xor
xor
sbb
xorb
out
mov
cmp
xor
dec
sub
push
loop
cmc
cmp
sahf
mov
ss
mov
xor
cmp
stc
imul
lds
incl
or
jg
and
aam
sar
mov
fs
incl
inc
xor
fs
rep
add
lods
outsb
sub
dec
push
mov
lret
out
push
mov
out
arpl
movsb
mov
and
jmp
out
xlat
jne
in
in
pop
lds
outsl
ljmp
mov
call
aas
ficompl
jge
mov
mov
adc
hlt
fisttpll
xor
int
iret
jne,pn
jo
sub
cmp
fstpl
mov
stos
lock
mov
mov
push
dec
mov
ss
xchg
push
xor
dec
adc
icebp
ds
and
push
adc
fidivl
dec
push
or
pop
push
pop
xchg
inc
cmpl
xor
das
add
push
bound
pop
xor
mov
and
mov
data16
sbbb
pushl
xor
and
lahf
insl
push
fdiv
loope
mov
jge
sbb
jae
test
inc
repnz
loopne
xor
andl
xchg
inc
pop
mov
push
sti
or
sub
jg
and
push
jmp
icebp
cmpsb
mov
stc
add
decl
sbb
push
xor
lea
lahf
gs
adc
jp
mov
cmp
js
inc
jmp
out
es
ret
fdivr
decb
fidivs
pop
pop
ja
ljmp
decl
int
xor
fs
lahf
jmp
fisttps
pop
adcb
int3
xor
inc
lahf
dec
cltd
mov
in
jg
aaa
cmpsl
js
sbb
hlt
xor
fidivl
das
sub
decl
sbb
xlat
mov
jp
cmpsl
cwtl
cmp
out
loope
lcall
mov
pop
push
or
outsl
int
pop
push
mov
enter
jmp
orl
sub
icebp
xchg
in
mov
pushl
pmaddwd
mov
sbb
popf
or
dec
xchg
stos
pop
imull
fs
mov
je
aas
xor
mov
cmc
sarb
out
out
mov
jmp
je
je
bound
sub
or
sbb
mov
fistpll
mov
ret
or
sti
jp
cwtl
mov
cmp
and
das
out
cli
dec
pusha
aas
add
sbb
mov
loopne
aad
sub
push
mov
pop
mov
cltd
mov
jae
mov
push
pushl
std
call
stos
insl
arpl
dec
fdiv
or
stos
add
frstor
inc
mov
push
dec
jae
sbb
clc
pushf
popf
cld
movsl
dec
mov
or
sub
pop
cmpsl
mov
mov
imul
add
inc
xor
lods
mov
lcall
xor
pop
xchg
inc
xchg
push
pusha
rcl
hlt
ret
sbb
mov
ljmp
dec
lcall
lods
push
rorl
test
repnz
mov
enter
and
incl
adc
pop
lahf
aas
in
xchg
xor
inc
xchg
and
mov
mov
cmp
lret
jmp
gs
sar
cmp
xor
pushw
xor
mov
xchg
pop
in
mov
push
fiaddl
sbb
leave
test
out
movsl
scas
imul
jnp
lahf
mov
pop
outsb
dec
lods
enter
push
test
nop
adc
dec
aad
mov
cmp
rorl
mov
scas
mov
lcall
cmc
xchg
incl
xor
icebp
push
int
and
add
iret
mov
push
stos
stc
push
stc
leave
mov
add
dec
pusha
sbb
sahf
jne
insb
xchg
add
mov
clc
ja
outsb
mov
fld
cmp
mov
push
lods
jae
stos
pop
push
imul
popf
dec
lcall
ljmp
ret
and
xor
push
scas
fbstp
hlt
and
push
shlb
xorl
ficompl
scas
ljmp
adcl
shr
mov
rclb
aad
jns
jge
xchg
iret
pop
or
lods
data16
pop
pop
mov
aaa
call
push
bound
sub
test
aam
sub
jle
cmp
push
cld
xor
incl
xchg
dec
pop
xlat
mov
cmp
repz
clc
pop
xor
int
pop
push
sahf
stos
movsb
fisttpl
scas
cli
pushl
pusha
inc
pop
pop
ret
sub
or
add
fadd
xor
test
call
cli
sbb
out
jg
enter
xchg
dec
jo
xor
call
aas
dec
push
mov
rorl
inc
sub
mov
test
call
cld
or
test
dec
pushf
imul
movsb
sub
cmpsb
shlb
inc
popf
jecxz
jmp
shlb
or
in
and
outsl
sti
mov
push
and
jg
hlt
ffreep
xor
lods
js
sbb
xchg
mov
lcall
ljmp
jecxz
cmp
lock
out
addb
dec
fiadds
add
add
sub
adc
mov
loopne
and
outsb
push
sbb
xchg
lods
inc
pop
pop
xchg
sub
push
jmp
test
sahf
adc
jno
jo
imul
sbb
lds
in
dec
or
incb
fbld
pusha
mov
rcll
jmp
mov
inc
ss
or
cmp
jl
ljmp
pushf
lret
mov
push
inc
int
ret
std
xor
bound
mov
sub
lcall
ljmp
sbb
out
jmp
outsb
cld
or
jle
mov
inc
mov
mov
mov
xor
jp
cmpsb
add
mov
ljmp
and
idiv
movsb
inc
movsb
aas
sub
gs
mov
xor
cmpsl
enter
loope
push
push
xor
xor
out
dec
jo
and
test
insl
jp
dec
repnz
insl
mov
notb
or
jbe
push
fstpt
and
mov
lcall
xchg
outsb
out
jp
das
and
imul
push
test
fcomip
call
stos
xchg
scas
imul
or
fcmovu
pop
test
jp
test
cmp
mov
jbe
jge
inc
imul
xchg
cli
and
cwtl
aaa
inc
roll
clc
xchg
ljmp
adc
xchg
aam
daa
jne
and
or
pop
arpl
jg
outsl
sbb
or
add
mov
cmpsl
inc
adc
pushf
xchg
mov
call
fcomip
outsl
and
shrb
cld
adc
and
test
les
inc
adc
fisubrs
gs
mov
aas
sbbb
add
mov
and
loope
pushl
xlat
daa
call
shl
call
inc
fdivs
dec
adc
mov
inc
mov
jle
dec
mov
in
push
dec
fwait
mov
pop
pop
cmc
push
add
decl
out
jmp
popa
mov
mov
orb
imul
push
cmp
mov
xchg
icebp
pushl
xchg
mov
cli
dec
aam
neg
mov
fdivrp
insb
fwait
pop
lcall
lock
mov
iret
mov
addb
in
pop
movsl
ficoms
shll
jg
arpl
jmp
cmpsl
mov
add
pop
push
pop
xchg
nop
out
out
mov
inc
rcll
es
call
xchg
add
dec
lret
rorl
push
mov
mov
jo
loopne
push
cmp
cmp
cmp
adc
outsl
into
nop
mov
inc
lahf
mov
fwait
cli
ret
mov
adc
adc
incl
daa
lahf
cmp
cmp
hlt
fwait
jne
mov
popf
divb
inc
cld
pop
cmc
lret
sbb
jp
ja
adc
xchg
cmp
pop
pop
dec
jne
or
xorl
cwtl
push
xchg
adc
movsl
xchg
or
incl
dec
jmp
push
inc
std
cld
dec
cwtl
movsb
push
inc
cmp
cmp
sti
jle
unpckhps
aad
sub
je
adc
jl
es
ss
sbb
sub
test
cltd
and
cmp
sti
cli
push
xchg
clc
push
je
aad
rolb
mov
lcall
out
cmpsb
mov
mov
stc
push
rolb
jp
lods
cmp
sbb
ljmp
scas
fsubs
sub
dec
data16
push
das
stos
xor
es
cli
imul
mov
and
fsts
jecxz
xor
bound
xchg
loopne
push
dec
insb
dec
mov
incl
ja
mov
xor
repz
jl
pop
sub
mov
xchg
push
sar
dec
pusha
je
addr16
addb
pop
addr16
sbb
js
mull
ljmp
sbb
mov
loop
in
xlat
out
jae
adc
push
add
mov
mov
dec
imul
movsb
jbe
sub
rolb
mov
push
jl
loop
mov
std
mov
in
ficoml
jne
pop
loopne
pushl
ret
repz
mov
dec
xchg
pushf
and
stos
cmp
xor
jmp
es
fucomip
mov
or
pop
dec
test
jp
pop
ljmp
leave
pop
xor
loop
xchg
sub
push
adc
cltd
push
sti
adc
call
cmpsl
repnz
pop
sub
faddl
pop
xor
cli
rcrl
cld
inc
mov
ljmp
arpl
xor
aam
cmp
mov
ret
orl
andb
push
das
into
or
lcall
xchg
mov
add
jae
cmp
pop
push
imul
ljmp
rolb
mov
push
shl
add
ds
pop
mov
imul
push
lahf
rorl
mov
pop
lret
cmpsb
outsb
xchg
pop
decl
stos
ret
add
ljmp
jge
subb
mov
ljmp
mov
outsl
sarb
sub
pop
popa
or
jo
movsb
lock
push
daa
sar
jle
or
lds
rcrb
ds
test
sbb
xor
incl
je
adc
cmp
sbb
test
mov
xchg
sti
pop
aad
inc
arpl
lock
cmp
cmpl
mov
cmpsb
mov
jmp
clc
pop
xchg
cmp
lcall
and
cmp
ljmp
and
into
sbb
ds
xor
dec
jge
fcoms
push
cltd
xchg
mov
lret
enter
cmpb
data16
into
lcall
inc
dec
loopne
or
roll
jb
cmp
fisttpll
lods
in
xchg
in
jae
cmp
jecxz
incl
xchg
fisttps
and
aam
adc
scas
lcall
icebp
lock
sbb
test
mov
ljmp
imul
adc
sbb
mov
gs
mov
cmp
popf
into
cwtl
ljmp
xchg
fst
jno
leave
aam
dec
push
cld
repnz
lds
mov
int
in
mov
das
clc
fwait
stos
outsb
mov
movsb
int
dec
nop
dec
dec
mov
cmp
xor
lods
fdivl
popa
int
and
arpl
jno
jbe
stos
adc
lods
stos
ss
sbb
stos
call
ljmp
mov
jge
ficompl
repnz
mov
add
ret
dec
adc
jle
test
pop
xchg
pop
jnp
sub
pop
jnp
pusha
mov
icebp
fcmovu
adc
fists
jo
cmc
adc
jg
test
sahf
mov
push
shr
filds
mov
mov
iret
and
mov
in
push
push
mov
out
xor
push
push
xor
aad
cs
addr16
cmpsl
into
xor
xchg
aaa
push
gs
jmp
pop
js
imul
adc
mov
sub
pushf
jmp
lcall
testl
dec
or
scas
fmul
mov
in
push
add
mov
pop
lret
repnz
sbb
pop
dec
pusha
nop
idivw
cs
test
in
cltd
or
call
call
scas
fwait
movhps
lods
sub
inc
xor
sbb
pusha
insb
xchg
lea
ljmp
add
mov
cmpsb
fucomp
imul
or
sti
iret
movsb
cmc
push
mov
push
dec
fisubrl
sub
int
test
stos
cmp
out
aas
gs
popa
or
enter
es
inc
call
test
inc
sbb
jo
aad
call
push
pop
dec
sbb
sahf
outsb
dec
call
nop
pop
push
pop
mov
cwtl
pop
std
insl
nop
sti
movsl
mov
ss
jbe
pusha
mov
addr16
or
jb
js
fstpl
or
ss
ljmp
xchg
jge
dec
test
mov
movsb
and
and
push
and
dec
mov
leave
mov
fnstcw
repnz
stos
jg
inc
nop
xchg
or
mov
dec
pop
out
dec
subl
mov
stos
cmp
int
icebp
inc
cmpsb
push
pop
ficoml
hlt
daa
jmp
inc
xchg
pop
and
test
xchg
cmp
ljmp
and
push
mov
das
leave
dec
mov
sti
imul
xchg
pop
push
cld
ljmp
cld
stos
jb
and
inc
jnp
jb
push
cmpsb
cmp
scas
rclb
sbb
ds
aaa
fcomip
decl
push
inc
adc
push
ljmp
and
xor
filds
xchg
or
mov
lcall
dec
xchg
jo
pop
xor
testb
mov
jne
mov
call
je
add
jo
lcall
gs
mov
push
lcall
lar
sbb
insb
es
in
lcall
decl
loope
jg
push
inc
adc
dec
mov
jb
mov
mov
cltd
stc
frstor
dec
adc
or
cmpsl
fdivr
pop
loopne
es
fwait
mov
cmc
xor
mov
int
inc
push
fcmovb
add
imull
sbbb
fwait
lock
mov
lcall
cmp
push
pushl
sbb
stos
imul
pusha
jo
lods
and
pop
mov
add
dec
cmp
inc
jmp
adc
pushl
daa
pop
jns
lcall
jnp
fcoms
cli
mov
or
mov
aas
xchg
xchg
sbb
inc
mov
push
mov
clc
pop
cmpsb
sbb
mov
dec
f2xm1
cmp
mov
inc
jg
mov
push
dec
loope
xchg
mov
mov
movsl
xchg
jbe
push
add
andl
call
mov
addr16
dec
pop
fldt
das
inc
mov
cmp
insl
and
popa
loopne
sub
add
mov
push
call
aas
or
clc
mov
incl
adc
and
out
cmp
in
cmpsl
xchg
outsb
fdivr
ljmp
xchg
sbb
mov
xor
cld
cltd
pop
int3
incl
or
push
ret
cmpsb
lods
dec
add
test
sub
push
fldln2
push
jae
lahf
sahf
mov
loopne
out
xchg
insb
jo
stos
mov
lods
dec
pop
push
or
cmp
rorb
out
sti
ret
out
jle
or
inc
xor
push
fcomip
inc
pop
stos
bound
mov
adc
jle
cmp
xchg
pop
lea
data16
inc
jg
sbb
inc
inc
cs
and
in
movsb
push
jg
and
mov
xchg
aam
lods
sub
out
xchg
pusha
push
idivb
rcrb
aad
and
push
cltd
out
fwait
ja
sub
test
cs
repz
pop
pushf
sub
lods
stos
cmp
dec
jmp
arpl
mov
sbb
repnz
insb
incl
lret
xchg
push
fildll
ds
xor
sub
xor
orl
push
adc
lods
mov
xchg
pop
jbe
xchg
jno
test
decl
fdivrp
adc
xchg
dec
mov
xor
les
mov
push
decl
or
or
movsl
loope
xchg
fists
sbb
jp
pushl
push
filds
in
cmp
xchg
jnp
outsl
fdivrp
sbb
mov
or
push
in
pop
push
dec
scas
lcall
mov
xchg
push
or
es
pushf
push
pop
sbbl
mov
xchg
xor
mov
xor
mov
fwait
mov
and
popa
push
out
sar
aas
xchg
mov
cltd
andl
mov
dec
rcr
adc
xchg
mov
sub
xor
lcall
inc
jecxz
idivl
enter
scas
int3
icebp
ljmp
cld
ljmp
cli
pushf
inc
ret
pusha
or
lea
mov
jo
imul
ret
fbstp
pop
jne
repz
push
sbb
inc
dec
stos
insb
xchg
mov
push
sbb
sbb
jg
decl
fsub
and
outsb
ret
test
or
xchg
rcr
adc
adc
adc
adc
ss
orl
jg
xchg
movsb
loop
outsb
dec
mov
xchg
jo
in
nop
popa
mov
ljmp
rolb
les
xchg
cmpsb
arpl
decb
loop
adc
cld
andb
sti
jmp
mov
push
fadds
pop
rcrb
xchg
add
mov
fcomps
js
and
icebp
cmp
cld
lcall
jecxz
mov
test
cmp
mov
andb
ljmp
nop
stc
mov
push
and
stos
jns
pop
sbb
sti
in
mov
test
movsb
daa
cmp
pusha
popa
aas
xchg
jge
mov
sbb
inc
jae
or
or
repnz
mov
push
inc
add
fdivrs
jg
inc
xchg
mov
shlb
xor
test
jns
mov
imul
sub
ljmp
rorl
inc
push
inc
jne
cmpsb
xchg
insb
cld
jg
fcmovb
inc
js
mov
dec
jno
cmpsb
push
call
ljmp
pushl
fbld
jmp
loop
push
inc
test
or
repnz
call
mov
pop
loopne
sbb
dec
and
pop
sub
pop
leave
jp
int
add
ljmp
out
cmp
sti
cmp
and
pop
pop
lahf
hlt
adc
aas
fistl
stos
test
jmp
imul
jl
loopne
lock
test
mov
imul
idiv
incl
rorl
addr16
mov
xchg
sub
jns
lcall
mov
push
imul
sbb
cltd
pop
xchg
aaa
mov
pop
mov
mov
in
jmp
mov
out
or
icebp
lods
loope
cmp
xchg
rorb
mov
inc
sar
inc
mov
js
cmp
xchg
mov
sarb
addb
movsl
clc
xchg
iret
lcall
in
into
pop
lock
lods
inc
mov
dec
aad
mov
movsb
jmp
push
test
push
pusha
out
clc
mov
ret
cltd
inc
mov
pop
arpl
shrl
pop
mov
repnz
shrb
fnstenv
scas
scas
push
ficoms
loope,pn
jl
sub
dec
push
shrb
xchg
jl
imulb
sub
in
lock
sub
jbe
fdivr
mov
lret
dec
dec
xchg
scas
outsb
lcall
sub
pop
mov
or
cld
xchg
mov
dec
mov
pop
xor
aas
test
push
addr16
repz
test
div
inc
sub
dec
adcb
cmc
cltd
sarl
dec
dec
insl
dec
pop
aam
push
push
mov
lahf
in
bnd
js
lds
loope
daa
popf
aad
decl
repnz
into
arpl
push
mov
test
inc
sub
sub
movsl
pop
decl
pusha
stc
mov
cmc
je
addr16
rcrb
stos
xlat
movsb
mov
ljmp
mov
push
scas
mov
mov
mov
call
dec
fcmovb
outsb
shrw
push
lods
mov
popl
icebp
cmc
inc
leave
push
add
xchg
jno
cld
cmc
xchg
inc
outsl
adc
in
scas
clc
jmp
push
fucomip
bndldx
pop
mov
inc
cmp
ljmp
jae
push
aam
shl
jmp
push
mov
pop
mov
test
mov
and
je
jmp
cmp
out
lret
mov
ljmp
loopne
and
out
or
sub
pop
je
andb
decl
pushf
xchg
xchg
push
pop
out
adc
jae
stos
shlb
and
inc
or
pushl
lods
push
mov
subl
mov
jmp
lahf
das
lods
sub
bound
mov
ficomps
sarl
mov
and
movsb
mov
hlt
cwtl
dec
lcall
xor
push
jne
int
les
cltd
or
cmp
push
imul
push
ret
mov
aaa
dec
mov
or
into
jns
fidivl
std
mov
fcomip
fistl
adc
iret
inc
movsb
sbb
or
repz
xchg
popf
call
rolb
movsl
mov
je
ds
pop
fstpl
mov
fimull
call
cli
adc
xchg
add
xor
js
cmpsb
scas
or
mov
and
cmp
pop
and
ret
mov
sar
ljmp
gs
pushl
cmp
sub
hlt
push
xchg
out
push
daa
mov
sti
mov
lock
push
adc
pop
pusha
dec
sub
lret
xor
cmp
fcompl
push
mov
imul
test
jle
mov
decl
sbb
insl
out
push
push
aam
int
jge
cmpsl
push
out
fiaddl
adc
sub
outsl
xor
cmp
call
xchg
mov
sbb
sti
or
pushl
repz
icebp
jne
stc
or
mov
jno
lret
inc
pushw
out
int3
inc
jne
test
sar
jmp
test
std
mov
leave
mov
jmp
xor
and
shr
enter
mov
inc
mov
dec
sahf
movl
es
call
cld
adc
cltd
aaa
inc
xchg
loopne
sbb
push
pop
cld
xchg
jae
fcos
out
in
push
pop
cmp
test
pop
fisubs
sub
push
cmp
inc
dec
stos
or
in
data16
mov
decl
sti
inc
xlat
loop
lea
jecxz
sbb
test
cmpsl
negl
mov
jns
fisttps
mov
xor
inc
fsubr
xor
cld
xchg
mov
fisttpl
pop
mov
call
sub
jge
sub
cmp
lods
int3
fildl
imull
xchg
and
call
inc
push
jae
imul
je
test
mov
sarl
lret
sub
out
sbb
mov
mov
sub
call
and
adc
ljmp
mov
or
incb
call
stos
cmp
push
mov
push
xchg
cs
xchg
decl
mov
mov
ficoms
dec
pop
jnp
mov
sti
and
aad
mov
jbe
fnstenv
ret
jmp
mov
cmpsl
xor
xor
adc
cmp
xor
sbb
xchg
fdivs
and
ss
mov
mov
cmp
mov
lock
cmp
inc
mov
jmp
scas
cmp
fisubrl
xor
js
jg
int
repz
inc
inc
sub
sbb
jg
shlb
call
ret
mov
inc
mov
das
clc
mov
xchg
xchg
insb
and
fsubl
lock
add
hlt
icebp
lret
mov
lcall
cmp
push
adc
xchg
inc
sub
orb
mov
fwait
jbe
jno
jb
call
mov
gs
imul
cmpsl
out
mov
inc
test
sar
jl
pop
repz
in
out
scas
adc
sbb
cltd
cmp
or
pop
out
out
xlat
cmp
popf
lea
jae
rcrl
popf
cmovp
pop
lcall
imul
or
cli
aam
test
and
out
jge
adc
jl
jmp
xor
sbb
daa
mov
push
in
jge
cld
pushl
inc
mov
daa
sti
cli
pusha
jnp
aad
fidivrs
int3
mov
std
out
movsl
pop
scas
test
mov
pop
dec
pusha
jl
inc
pusha
sub
in
cmp
pusha
fwait
jnp
pop
or
out
mov
lahf
mov
aam
jae
ljmp
insb
inc
adc
mov
sub
hlt
lock
js
sbb
call
inc
out
ss
or
push
in
push
push
cs
jp
xchg
lcall
xorl
push
sbb
pop
fs
decl
inc
fisubrs
test
cltd
push
jmp
jge
inc
movsb
lret
cli
pushf
pusha
es
std
jg
je
fisttpll
xchg
lret
xor
dec
scas
inc
subl
pop
mov
mov
lcall
xor
xor
lcall
mov
mov
imul
imul
outsl
jp
bound
in
inc
cmp
dec
lods
shlb
jne
cmp
or
movsl
addr16
pop
fsubs
inc
xor
out
mov
cmp
inc
or
aas
insl
mov
lret
pop
xor
incl
pop
push
mov
xor
ss
inc
add
into
rol
ret
jne
cmpsb
jg
push
mov
pop
jg
and
fs
jl
stc
mov
push
lret
mov
sti
int3
ljmp
cmp
out
outsb
nop
in
pushf
sbb
sti
insl
xor
xor
cli
inc
faddl
jg
mov
mov
outsb
lcall
sbb
pushf
xor
ljmp
dec
push
and
out
mov
push
mov
cltd
test
stc
ret
sbb
xchg
das
xchg
push
in
dec
roll
pop
sbb
call
mov
inc
dec
jnp
test
cmpsb
mov
xor
mov
in
push
mov
jmp
mov
pop
and
loopne
into
ss
mov
lcall
sti
mov
movsl
mov
sub
pop
mov
xchg
sahf
aas
nop
mov
icebp
dec
in
xchg
test
incl
stc
int
mov
and
movsl
pop
dec
adc
out
pop
mov
mov
ficoms
push
sub
mov
bound
mov
mov
call
sub
mov
push
mov
xlat
xchg
mov
mov
pusha
in
or
mov
xor
add
dec
adc
rcrl
out
jmp
out
or
jb
cmpsb
cmp
leave
push
dec
mov
mov
mov
decl
lock
notl
mov
in
jg
aas
push
cmc
pop
sbb
repnz
mov
dec
cld
imulb
mov
push
inc
test
jb
leave
outsl
mov
jmp
and
cmp
inc
mov
test
pop
push
cltd
jl
xchg
mov
jmp
mov
jb
mov
cld
adc
test
xchg
or
mov
ja
lcall
cmp
fwait
sub
xor
enter
add
stc
mov
pushl
push
icebp
push
addb
cmp
lret
inc
adc
mov
das
enter
es
nop
gs
fwait
outsb
mov
mov
xchg
or
out
mov
mov
cmp
jb
jnp
mov
je
jnp
pop
imul
add
sbb
pop
jp
adc
adc
nop
mov
repnz
imul
lret
mov
call
lock
stc
push
push
popa
cmp
mov
jno
movsb
repz
jmp
cmpsb
inc
insb
test
jge
test
rcll
jb
pop
mov
pop
mov
lds
pop
fldl
call
test
mov
push
fimull
xchg
mov
cmpsb
pusha
xchg
lods
jge
push
adc
aas
cld
fwait
lret
or
incl
add
or
loope
aas
scas
nop
int
pop
sbb
pop
jp
mov
sti
hlt
cld
mov
mov
lcall
cmp
divl
lahf
push
aam
push
lock
pushl
xchg
push
xor
mov
mov
data16
sbb
decl
std
je
mov
test
fisubrl
addl
cmp
dec
inc
fs
mov
mov
cld
mov
mov
pop
les
sub
lcall
stos
xchg
out
testl
pop
cmp
pusha
xor
pushl
fld
cmc
js
jnp
pop
je
push
xor
fsubl
out
sbb
mov
jmp
mov
lret
loopne
jmp
mov
sub
jl
and
jp
push
cli
sbb
pop
jle
test
call
pop
fsubs
not
in
pop
in
nop
and
mov
sbb
out
adc
inc
jg
outsl
iret
cltd
mov
adc
out
and
push
sub
add
cwtl
lcall
pushl
cld
pop
push
mov
das
iret
jl
jecxz
loope
mov
lret
fwait
add
pop
out
decl
lea
dec
arpl
fdivp
ret
std
mov
mov
popf
ret
jmp
int3
add
in
and
lcall
dec
loope
imul
fsubrs
mov
sbb
loope
mul
call
imul
lcall
mov
cmp
decl
push
or
outsb
xchg
outsb
push
nop
pop
shlb
dec
inc
jns
outsb
rcrl
popa
lcall
dec
pushl
pop
andb
mov
add
mov
jae
lahf
out
scas
andl
fmull
push
ljmp
mov
setbe
popa
daa
jecxz
add
out
dec
mov
dec
hlt
cmpl
insl
repz
adc
xor
push
lcall
jp
mov
cmpsl
mov
imul
lea
pop
shlb
cmp
hlt
pop
mov
dec
ds
push
lds
ss
mov
in
ljmp
sub
jne
jge
sbbb
push
pop
and
adc
incl
imulb
pop
add
shrb
lahf
xor
ja
outsl
in
xchg
mov
pop
call
jmp
sahf
sub
jle
aas
add
xchg
push
push
add
jg
or
std
scas
cmp
in
and
cld
sbb
les
ret
sub
movsb
mov
pusha
insb
out
sbb
inc
and
pop
aad
cli
sbb
ficompl
decl
repnz
xor
xchg
leave
xor
cs
inc
sbb
jns
jo
scas
fisttps
pushl
movsb
outsb
cli
les
adc
addl
loop
adc
sub
sbb
add
mov
ss
call
mov
xor
in
xor
xchg
imul
push
xchg
pop
shlb
push
stos
lock
push
fcompl
out
into
scas
mov
decl
pop
mov
mov
jecxz
dec
and
xchg
les
mov
push
fs
repnz
sub
incl
add
lret
pop
addr16
xchg
mov
inc
pop
jo
ss
mov
sub
inc
movsb
incl
mov
push
adc
scas
shlb
cltd
in
push
into
pushl
rolb
and
jns,pt
into
lea
jge
scas
sbb
mov
cmp
mov
inc
push
push
mov
lds
sbb
fwait
ljmp
sbb
and
in
lret
cs
jmp
xor
lea
aaa
jg
push
movsl
aas
je
cli
xchg
leave
sbb
enter
mov
call
mov
mov
xchg
in
in
and
xchg
outsl
imul
call
shr
push
aad
ficomps
xor
mov
pop
rol
es
lret
incl
dec
jle
and
xlat
ds
inc
sarl
nop
or
scas
xchg
insb
adc
test
dec
push
stc
push
popl
ljmp
clc
dec
dec
lds
inc
into
in
rcrl
jmp
pop
dec
mov
push
sbb
jmp
cli
push
aaa
or
pop
push
adc
cmp
sub
in
iret
sahf
cmc
outsl
cs
dec
fwait
cmpsb
icebp
cld
mov
sahf
in
sub
rcrl
dec
jae
cmp
icebp
inc
mov
icebp
std
adc
sar
shlb
stos
jmp
mov
lock
jecxz
loope
enter
out
sub
in
dec
mov
mov
lcall
repnz
into
fwait
mov
je
dec
xchg
dec
fisubrs
push
lret
sbb
dec
rcrl
pop
imul
out
push
add
cmpsb
jb
mov
pop
xor
jmp
or
xorl
leave
and
cmp
scas
jne
mov
bound
mov
in
inc
ror
test
cltd
pop
cld
push
adc
pushl
or
jp
mov
outsl
fcompl
int
mov
decl
daa
inc
jb
leave
xchg
imul
dec
or
mov
lahf
icebp
sbb
inc
adc
mov
jl
movsb
fldl
test
xchg
scas
or
mov
add
loop
mov
lods
cmp
add
adc
sete
mov
arpl
mov
push
adc
sub
add
in
arpl
adc
fcomip
outsl
cmpsb
mov
jbe
mov
adc
mov
mov
dec
or
lcall
xor
xchg
dec
xor
stos
in
mov
sahf
mov
inc
and
or
call
and
xchg
insl
mov
and
js
push
in
clc
cmp
fsubl
or
dec
test
cld
xchg
and
lea
xchg
fs
mov
pop
mov
or
call
test
or
and
ja
das
maxps
push
imul
xchg
or
push
ret
mov
sbb
pop
cmpsb
xchg
push
jo
orl
pop
or
je
push
std
call
adc
cmc
sub
mov
mov
sbb
mov
mov
jmp
push
add
jns
xor
cmpl
dec
pop
xor
push
inc
jmp
repz
adc
inc
shr
mov
inc
jo
ror
out
xor
inc
push
pop
mov
mov
fcomip
test
lret
or
xor
testl
sbb
inc
adc
iret
imul
pusha
inc
lret
pop
hlt
and
mov
push
cmc
mov
je
lret
faddl
pop
scas
loopne
adc
mov
fistps
push
xchg
mov
arpl
std
push
cmc
fbstp
jne
decl
or
jnp
fdiv
push
lock
stc
mov
int3
cmpsb
jge
mov
and
incl
cld
pushl
push
ret
in
adc
out
les
jno
mov
sub
jle
xchg
mov
lods
pop
jmp
pop
push
pop
mov
ljmp
inc
add
push
mov
sub
cmp
movsb
std
leave
ja
cmp
in
cmc
mov
adc
cli
push
hlt
inc
sti
in
rclb
xchg
push
in
push
mov
mov
mov
cmp
pushl
cmpsb
adc
adc
call
loopne
loop
lahf
dec
lock
mov
or
mov
popa
pop
iret
pop
sbb
nop
pop
ja
cli
aad
std
xor
cli
cld
scas
pushf
shlb
fbstp
cli
jb
pop
jnp
lock
lea
incl
scas
cmp
sbb
xor
daa
jnp
cld
sahf
xor
xor
pop
inc
jg
lods
push
test
jno
call
aad
sbb
fcmovnu
scas
out
or
pop
ss
ljmp
mov
jp
add
pop
mov
sbb
gs
cmpsl
or
andl
icebp
stos
xchg
sub
jae
lret
inc
mov
icebp
ljmp
hlt
fld
lea
decl
lret
retw
leave
adc
xor
fldcw
push
aam
push
fsubs
push
lret
pop
mov
mov
hlt
cmc
jmp
mov
pushl
pop
mov
and
fmul
outsl
mov
andb
jmp
or
shlb
sub
cld
sub
pop
rclb
incb
mov
push
daa
pop
sub
clc
call
jns
push
dec
cmpsb
cmp
push
scas
cmp
jno
pop
and
cmp
jmp
mov
cmp
stc
xchg
pop
iret
int
fldenv
jmp
fildll
repnz
jb
dec
stc
push
cmc
push
bound
out
pushl
and
dec
call
clc
xor
shlb
inc
leave
mov
mov
call
lds
test
jb
std
xor
rorl
mov
fdivl
push
jnp
cmp
sbb
pop
out
fsubrl
int3
mov
pop
cmpl
jg
mov
call
loop
nop
cs
mov
xacquire
data16
in
cmpsl
push
out
lcall
mov
pushl
add
clc
clc
cmp
mov
adc
mov
aaa
sub
lret
xchg
dec
fs
inc
push
mov
loopne
sbb
mov
test
call
dec
inc
call
dec
int3
pop
aas
lahf
ret
jae
pushf
jg
cmpsl
out
cs
mov
adc
mov
xchg
mov
fucomi
cmp
movsl
add
dec
dec
dec
mov
call
push
xor
out
jge
pop
fstl
inc
iret
or
cwtl
int
pop
cmp
lcall
icebp
out
cli
inc
and
xchg
cli
cmp
xchg
or
xchg
xchg
into
fildl
push
flds
pushl
ficoml
rolb
jns
outsb
pop
imul
dec
decb
push
add
incl
add
mov
ret
stos
and
mov
xchg
sbbl
fbld
mov
or
xor
dec
mov
jne
into
orb
inc
xchg
mov
cli
cmp
ljmp
div
sub
mov
aaa
ret
mov
fsubrl
cmp
nop
mov
push
pop
mov
incl
add
push
mov
sbb
xor
push
xor
in
ljmp
jl
sub
movsl
mov
insl
pop
mov
lret
push
cli
popf
imul
movsl
dec
mov
sub
and
cld
in
stos
sub
decl
mov
mov
dec
orl
mov
and
push
rorl
xchg
lcall
push
inc
jbe
fmull
mov
xchg
add
jmp
pop
test
push
xor
lods
ljmp
sahf
sub
sti
ss
mov
xor
mov
rdtsc
leave
dec
sahf
iret
loope
cld
cmp
xchg
jns
adc
mov
sbb
data16
lods
rol
call
cwtl
adc
push
pop
sarl
clc
xchg
xchg
pushl
jge
loopne
and
mov
movsl
ret
xor
sbb
rcrl
pop
sar
int3
and
cltd
add
jnp
sbb
cmc
push
ds
decl
pop
inc
xchg
test
inc
icebp
sub
xor
into
popa
outsb
lcall
shlb
dec
divb
js
sarb
sbb
jp
mov
fnstcw
stc
xchg
pop
rol
call
je
mov
out
dec
stos
or
pop
mov
movsb
xchg
cmp
das
mov
sub
or
lds
inc
add
cmpsb
pop
and
ds
mov
jmp
pop
shll
in
fmul
sub
or
aas
cmp
mov
sub
jmp
cmp
sbb
loop
test
add
mov
cmp
dec
cmp
cmpb
push
orb
ret
push
insl
int
mov
fwait
add
jp
mov
xor
out
ljmp
lcall
pushf
mov
test
in
and
mov
push
push
xor
outsb
inc
inc
xchg
pushl
fs
cmpsl
fldt
push
fildl
stos
jmp
or
das
loopne
cmp
outsb
imul
mov
shlb
mov
cs
incl
inc
imul
and
jnp
mov
dec
arpl
in
and
xchg
dec
rcrl
inc
adc
or
jmp
cmp
gs
arpl
jg
pop
dec
outsb
xorb
jmp
rcl
in
xor
and
adc
fdivrs
jmp
xchg
pop
idiv
rclb
push
in
sub
int
fadd
mov
mov
lea
and
adc
out
mov
sub
lea
mov
mov
shll
inc
negb
test
jb
iret
repnz
sbb
cmpsb
fcomps
in
xchg
fsubr
jmp
mov
mov
dec
daa
jnp
jmp
mov
movsl
sar
outsl
add
sub
das
lret
dec
xor
ret
sub
arpl
cmp
sub
push
mov
lds
push
inc
in
cmp
and
inc
scas
in
sti
repz
or
mov
nop
jecxz
fwait
adc
in
and
test
mov
jae
push
xchg
push
and
fistpll
jle
mov
loope
ss
adc
mov
mov
out
lock
jne
inc
cmp
push
jb
xlat
jge
test
in
xchg
lcall
fsubl
imul
out
jp
sub
push
insl
or
pop
data16
add
add
call
dec
mov
cs
inc
mov
pop
xor
cltd
std
sbb
rol
mov
test
pushl
xchg
cmp
sahf
aad
mov
mov
cmp
call
fdivr
lcall
ljmp
addl
out
aad
pop
mov
sbb
pushfw
jmp
lahf
inc
fisttpll
inc
incl
les
or
mov
mov
fldt
pop
xchg
imulb
xor
ljmp
decl
je
cmpsw
mov
and
fisubs
mov
push
push
cltd
pushl
cmpsb
fmull
adc
pop
mov
jae
ljmp
mov
repnz
popa
pop
jmp
add
inc
adc
ja
jns
jne
shll
decl
xchg
mov
adc
adc
dec
stos
jp
mov
cmp
fidivl
ljmp
adc
lods
xchg
notb
inc
and
sub
mov
xchg
dec
iret
xchg
nop
ljmp
ret
cs
lret
inc
xchg
mov
in
or
jne
in
ds
push
fcos
call
es
stc
push
sbb
lcall
cs
dec
sbb
cmp
cld
lcall
inc
sahf
adc
frstor
hlt
push
pop
lds
mov
cmp
sbb
cmp
xlat
sub
cmc
stc
push
daa
ret
call
pop
cli
pop
fsubrl
sub
les
inc
lret
clc
incl
sub
push
xchg
adc
ljmp
ljmp
push
cmp
adc
and
mov
popa
lahf
mov
mov
imul
sbb
xlat
call
mov
jno
pop
push
pop
lea
xor
decl
or
jae
inc
xchg
pop
stos
fisubs
sbb
pop
je
stc
jecxz
push
jno
ficoml
ficoms
or
jno
pop
mov
or
fsubs
inc
decl
mov
push
mov
std
popf
cmpsb
mov
mov
mov
das
scas
fs
xlat
jne
fimull
mov
or
xor
js
fsubl
fcmovnb
daa
jns
mov
lods
xor
mov
xlat
mov
add
decl
gs
stc
push
mov
dec
adc
pop
ljmp
je,pn
repnz
inc
push
test
lock
cltd
push
sub
std
mov
and
call
mov
filds
jne
xchg
jae
xor
inc
jne
jmp
jbe
dec
lret
loop
inc
sbb
das
pop
icebp
sub
in
int
stc
jnp
jg
adc
loopne
outsl
cmpl
aam
popa
push
aam
or
or
jp
adc
xchg
cmp
fbstp
mov
imul
fs
in
outsl
xor
xlat
inc
jmp
inc
cmp
loop,pt
or
pop
adc
enter
pop
mov
imul
dec
pusha
cld
out
out
dec
sbb
pushf
aam
negl
in
std
out
push
inc
inc
fistpll
xchg
loopne
pop
pop
mov
inc
push
jecxz
xchg
js
cmp
add
jb
in
leave
in
jno
iret
lds
mov
fcos
call
popf
and
rorl
insl
jbe
ror
push
jp
mov
repnz
daa
xor
mov
sahf
push
jmp
inc
imul
cld
push
mov
adc
jae
mov
in
mov
mov
mov
add
pop
inc
mov
mul
out
pop
out
cltd
mov
add
movsb
leave
add
mov
decl
cmp
mov
mov
test
pushl
cld
mov
or
push
sub
and
lret
ds
loopne
jl
sbb
pop
or
jg
clc
cmp
inc
adc
sub
and
subb
les
inc
mov
xchg
or
push
fbld
shll
icebp
lcall
cwtl
xor
lods
test
fldl
and
enter
sbb
sbb
inc
mov
inc
in
mov
or
adc
das
and
sub
xor
jmp
push
xchg
movsb
pop
ret
mov
xor
xchg
adc
fidivs
insl
mov
stos
mov
out
cmpsl
push
testl
test
mov
incl
xchg
push
pop
movsl
xchg
enter
test
stc
sub
xchg
cmp
inc
push
daa
cmp
jb
out
dec
add
cmp
bsr
jbe
dec
popa
and
incl
mov
gs
add
inc
jbe
mov
mov
sahf
mov
ljmp
and
mov
dec
mov
pop
xchg
lcall
out
pop
add
arpl
jg
dec
pop
xorl
fistl
sbb
and
or
jmp
hlt
out
cmp
sbb
xchg
jge
xchg
push
pushf
int3
and
mov
push
adc
jae
decl
enter
mov
pushl
jmp
jnp
sub
mov
jae
inc
in
mov
shll
loopne
cld
adc
ss
outsb
fldenv
roll
push
pop
cld
pushl
addb
test
out
cmp
dec
ret
mov
jae
insl
leave
imul
inc
inc
cmp
mov
dec
xchg
jp
ret
andl
pop
mov
ds
les
xchg
pop
mov
xor
lahf
std
hlt
stos
push
push
int3
mov
lcall
loope
dec
mov
fwait
pop
sahf
mov
stos
int
lds
push
lds
insb
xchg
and
add
outsl
addb
cmpsl
insb
pop
fdivs
daa
jmp
addr16
jg
js
lahf
aam
cltd
xchg
loop
cmp
jecxz
xchg
punpcklwd
mov
xor
out
clc
lret
dec
jo
xorl
dec
push
es
mov
inc
push
test
sub
xor
idiv
ljmp
ljmp
fisubs
test
mov
inc
pop
fbstp
xchg
mov
icebp
pop
sbb
push
out
xchg
fistl
add
out
stos
push
ja
call
jne
inc
inc
mov
icebp
sahf
mov
lds
test
xchg
mov
pop
sbb
pop
scas
leave
stc
jmp
int
lock
xor
pop
cmp
push
popa
loope
inc
mov
jo
pop
repz
mov
dec
pop
mov
dec
xchg
gs
mov
loopne
cmp
pinsrw
fidivs
mov
xor
jge
xchg
inc
xorb
clc
incl
lea
xor
insb
call
stos
lods
adc
pushl
mov
es
dec
loopne
scas
inc
popf
nop
or
add
jge
sbb
pop
jg
jno
pop
inc
cmp
repz
pop
inc
aam
into
lcall
ljmp
cmove
je
pop
xor
mov
decl
andb
shlb
popf
jne
mov
sahf
data16
push
in
ficompl
xchg
xlat
fcompl
je
add
sub
mov
loope
rorl
out
mov
adc
hlt
adc
repz
mov
cmpb
cld
out
push
mov
das
jl
out
fisubrs
xchg
jmp
dec
xor
sahf
mov
dec
mov
popf
jno
iretw
adc
xlat
add
sbb
pop
add
lcall
push
shrb
shlb
jge
sbb
bnd
pop
daa
sbb
cli
push
stos
popa
lret
decl
lds
mov
mov
in
sti
add
and
and
jecxz
les
sub
pop
les
mov
sub
js
jge
mov
dec
frstor
cmp
ljmp
jle
mov
in
into
repnz
cwtl
pop
jg
and
ds
outsb
sbb
test
std
lret
add
pushl
xchg
fiadds
jns
cmc
cmp
xchg
nop
sub
sub
leave
jecxz
ja
aaa
sar
lcall
sub
lret
dec
aas
aam
shl
jnp
jecxz
pop
dec
inc
repz
insl
lahf
push
jnp
sbb
cmp
clc
push
mov
decl
popa
mov
jns
pop
movsb
or
pop
xor
and
sbb
sbb
jmp
jge
hlt
xor
fmul
test
sbb
scas
cmp
xor
subl
movsl
or
outsl
movsb
hlt
mov
jnp
sub
clc
test
pop
cmp
jg
xor
adc
jg
cmp
mov
mov
scas
hlt
int3
mov
push
push
sub
fcomip
ljmp
std
mov
xchg
cmpl
cs
mov
clc
dec
push
outsb
xor
test
jecxz
fs
push
jmp
scas
ss
cmp
out
dec
pop
clc
pop
inc
mov
scas
out
lcall
insb
inc
mov
cli
mov
les
add
push
push
adc
ljmp
lcall
xchg
cmp
inc
pop
cmpsl
add
decl
and
das
inc
xchg
imul
jmp
gs
es
sbb
rorb
incl
cld
mov
or
lret
jo
xchg
call
jae
jmp
jb
mov
in
xorl
push
xor
dec
ljmp
mov
fsubrs
push
rcr
je
jle
pushf
sahf
mov
iret
into
sub
inc
inc
call
dec
aaa
mov
dec
jb
or
jecxz
aad
jl
or
lcall
dec
pop
shll
int3
mov
int3
lret
pop
push
jmp
outsb
icebp
xor
nop
movsb
sbb
cmpl
movsl
mov
sbb
lcall
adc
popa
push
stos
in
test
mov
pop
jl
loopne
ljmp
cmp
nop
xchg
xchg
adc
push
fnsave
jg
addb
sbb
int
test
pop
push
ficomps
cmpsl
sbb
movsb
dec
lcall
fwait
cld
cmp
xor
loop
insl
dec
mov
ret
mov
ja
into
dec
add
dec
cld
or
rclb
cmpsl
mov
loope
incl
mov
adc
xchg
pop
cmp
push
rorb
mov
inc
pushf
out
loopne
lds
xor
or
pop
mov
or
aad
push
xor
cmp
cmp
push
jp
std
call
in
decl
xlat
mov
jl
insb
mov
mov
jnp
mov
jae
mov
mov
fwait
pop
es
or
push
xchg
push
lds
mov
and
add
jmp
stc
sub
mov
arpl
out
imul
es
xchg
sbb
xlat
add
jnp
push
cmc
push
clc
fs
cld
int3
je
ret
ljmp
imul
in
js
fwait
ja
enter
jmp
jl
adc
mov
int3
mov
pop
out
je
aad
mov
outsl
cli
bound
inc
cmpsl
aaa
mov
mov
insl
fisubs
sbb
push
fdiv
outsl
cli
fcomip
xchg
test
clc
jbe
pop
dec
jp
fbstp
in
movsl
sbb
lcall
cmpb
xchg
mov
push
inc
nop
jae
adc
cmp
mull
push
dec
imul
lcall
cmp
and
mov
pop
mov
xchg
popa
xor
mov
mov
jmp
sbb
incl
andb
sbb
cmpsl
adc
or
in
ljmp
xor
clc
idivb
add
fnsave
out
add
icebp
inc
cmp
jne
lahf
call
orb
pushf
ret
push
xor
mov
and
mov
int3
lcall
decl
mov
mov
push
loop
js
xchg
push
adc
inc
push
icebp
lahf
fs
out
scas
incl
sar
insl
push
mov
lods
sbb
mov
xor
dec
sti
arpl
jmp
cmp
adc
push
and
call
jb
shr
jle
lahf
jle
sar
jg
lcall
xor
or
adc
in
cmp
std
mov
stos
add
in
pop
and
sarb
cwtl
push
adc
aaa
xchg
dec
sbb
cmpl
ret
inc
sbb
test
dec
in
sbb
fs
mov
jae
xlat
add
subl
negl
mov
cmp
js
in
and
cmpsb
in
call
fstl
xchg
in
inc
out
sub
mov
push
mov
lock
push
lcall
xchg
std
fbld
sbb
daa
mov
push
or
popa
gs
jl
mov
pushl
ficomps
push
mov
mov
cmp
loopne
pop
dec
jmp
sbbb
sarl
pop
inc
add
jmp
sub
sub
push
jge
sub
je
mov
jnp
push
stos
add
enter
jb
xchg
call
aaa
dec
mov
adc
sahf
xchg
cmc
in
stos
in
imul
arpl
lock
scas
jl
sti
inc
lods
push
sbb
mov
push
mov
xor
insl
push
xchg
sti
outsb
jbe
lock
mov
sub
addr16
sarb
mov
cmp
dec
test
xchg
rcll
dec
mov
sbb
jge
jecxz
mov
in
or
push
bound
pusha
push
aas
and
push
mov
popf
repz
enter
enter
mov
gs
mov
bound
loopne
subb
out
insl
inc
popf
pop
out
stc
xchg
inc
pop
test
ret
ljmp
mov
push
daa
test
cmpsb
inc
sub
bound
add
cli
ljmp
out
or
in
ret
push
outsl
cld
pop
pop
push
cmp
ljmp
enter
mov
imul
bound
gs
adc
rcr
jo
ljmp
gs
push
adc
add
ret
leave
xor
filds
inc
push
mov
jle
loope
pushf
stc
pop
in
mov
in
dec
add
repnz
adc
lcall
idiv
sbb
lcall
jge
mov
ss
mov
scas
pop
add
mov
ljmp
and
sti
mov
jge
pop
inc
jmp
xchg
mov
gs
sbb
movsb
add
jns
arpl
aad
jnp
daa
sbb
mov
mov
pushf
test
push
nop
adc
jmp
pop
inc
adc
out
xor
cltd
sbb
inc
scas
mov
dec
daa
daa
call
ljmp
add
jne
xor
pop
hlt
or
das
test
pushf
sti
mov
push
cmp
popf
in
and
and
pushl
adc
nop
movsb
add
pop
pop
shlb
adc
inc
pop
in
xorl
incl
mov
mov
aam
lods
push
test
add
pusha
in
mov
sti
pop
pop
loopne
fisubl
test
dec
jns
jg
dec
add
shl
cld
sub
or
jmp
fistl
fs
loope
jne
dec
aaa
jne
and
mov
and
mov
push
dec
xchg
ficoms
test
roll
das
push
fisubl
mov
adc
cld
jno
sbb
rorb
adc
rclb
xor
lcall
not
mov
pop
mov
sahf
shlb
nop
xorb
adc
pushf
cwtl
ja
push
call
jp
popf
fisttps
cmpsb
mov
pushf
ret
mov
insl
stos
sub
outsb
mov
add
fistps
jl
clc
lcall
pop
pop
sbb
jno
inc
bound
shlb
test
ret
jle
adc
lods
mov
dec
cmpsl
or
mov
pushl
std
int
jo
add
and
test
and
sbb
outsl
fbld
cmp
call
xchg
out
test
call
stos
sbb
add
hlt
cmp
and
adc
mov
sarb
pop
inc
out
iret
mov
jmp
repnz
sahf
sub
mov
lea
loope
and
dec
mov
cmp
aam
gs
lea
in
and
lea
push
pop
xchg
jb
lods
aas
jne
inc
mov
lcall
or
int3
inc
mov
and
incl
lcall
xchg
andb
movlps
movsb
fwait
inc
add
cmpsb
xchg
pop
fwait
lcall
decl
stos
lret
and
mov
mov
dec
leave
jbe
xchg
pushl
in
decl
popa
mov
mov
push
add
pop
and
sbb
xchg
jbe
dec
idivl
jae
mov
inc
jnp
cmc
ljmp
jge
fdiv
fcmovbe
jae
lret
mov
outsb
mov
imul
push
clc
xor
int3
dec
jnp
addr16
xor
dec
imul
lods
fs
mov
jg
xor
and
and
test
mov
std
mov
xor
fdivs
push
or
pop
lock
ljmp
xchg
pop
xchg
push
push
inc
xchg
into
scas
and
iret
adc
inc
mov
fcompl
mov
push
hlt
stos
fwait
mov
cmc
mov
sahf
inc
dec
mov
psubsb
dec
int
ljmp
js
inc
fistpl
add
mov
jge
orb
mov
cmp
or
cmp
xor
push
fsubr
cwtl
das
lods
mov
pop
clc
xor
loopne
inc
shlb
popa
dec
xchg
popa
xor
mov
lahf
lcall
das
jmp
add
cltd
cld
xor
and
xchg
fsts
out
inc
xchg
lcall
dec
inc
dec
leave
sub
fnstsw
je
lods
adc
inc
and
push
and
fimull
decl
cltd
fadd
or
mov
arpl
ss
push
lods
or
rol
aam
mov
clc
dec
sub
jp
mov
push
pop
jb
neg
xchg
movsb
hlt
clc
movsl
mov
jmp
and
cld
fdivrl
mov
and
xchg
jecxz
pop
cmpsl
pop
test
inc
imul
sub
loop
jbe
aaa
pop
cs
push
jb
lods
jmp
sub
mov
mov
lock
mov
cmp
dec
out
sti
add
adc
lcall
and
dec
out
in
pop
push
cmp
sar
scas
fsubrl
adcl
pop
add
call
popa
movsb
call
or
aas
fdivs
xchg
and
outsb
cmp
popf
cli
jbe
and
jg
push
cmp
gs
lcall
adc
sbb
xchg
xor
out
add
push
xor
insb
clc
js
mov
adc
incb
xor
stos
push
int3
sbb
add
pop
insb
pop
incl
mov
aas
pop
and
push
test
or
daa
mov
cs
add
inc
int
mov
cmp
arpl
decl
lds
addr16
xlat
dec
scas
add
arpl
cs
clc
jg
push
xor
add
cld
sub
int3
in
push
fnsave
jmp
shrl
push
test
clc
cmp
xor
cld
pop
adc
jnp
andl
pushf
shl
mov
inc
out
cs
pushl
call
cmc
fs
sub
mov
cld
aam
ljmp
push
decb
mov
xchg
jnp
rclb
outsl
jno
add
cli
mov
repnz
xchg
out
cmc
lcall
xchg
outsb
push
push
outsl
or
lods
cs
stc
mov
xor
pop
lret
pop
or
fimull
cs
rolb
int
jns
test
xchg
sbb
dec
into
mov
ljmp
push
xor
stos
jg
mov
insl
jbe
stos
jnp
ret
xor
fs
pop
lret
jge
pop
sub
fdivrp
jmp
mov
je
xchg
out
or
decl
mov
pop
ss
popa
fwait
ja
clc
cmp
pop
les
sbb
push
add
push
or
push
pop
or
shl
add
jmp
lret
test
ret
rclb
inc
jns
jns
ss
lock
jns
add
incl
push
jmp
dec
rorl
lds
int3
mov
stos
das
adc
fnstcw
mov
cmp
js
loope
mov
dec
or
mov
dec
std
movsb
cmp
mov
jl
cmpsb
and
incl
jg
ret
out
cmpsb
or
subl
into
hlt
popf
xchg
sub
incl
cmp
push
lea
fs
mov
das
addr16
add
inc
iret
pushl
ljmp
jge
cld
xchg
fsts
mov
cld
stc
pop
rcrb
inc
jecxz
cs
clc
push
add
push
fwait
push
movsb
push
mov
out
and
adc
or
jmp
clc
sbb
inc
shll
out
enter
decl
cmp
sar
xchg
aaa
add
adc
sub
lcall
pop
sub
sub
sub
es
cltd
dec
inc
xor
out
sub
decl
bound
pop
daa
add
sbb
pop
lahf
fldl
and
push
mov
inc
cli
in
sbb
aaa
pusha
imulb
and
imul
fists
xchg
mov
cmp
loopne
hlt
mov
out
insb
and
popf
xchg
call
out
pop
jns
jg
addb
cmpsb
ret
xor
stos
movsb
sub
in
gs
mov
inc
lret
sbb
addr16
cmc
xorb
stos
repnz
leave
xor
cmp
jge
inc
insl
sub
jl
lahf
fs
xor
cmp
and
ficomps
cld
adc
xchg
sbb
add
sti
pushf
sub
jg
mov
push
cmp
adc
stos
aaa
cmp
or
sub
sub
cmp
aaa
xchg
pop
cmc
sti
iret
inc
jne
mov
ljmp
jno
jae
out
ljmp
add
push
dec
and
add
dec
ja
pushf
pusha
adc
lcall
dec
pop
daa
and
xor
jno
lods
jp
sub
cmp
xor
addr16
iret
aaa
inc
sar
imul
aaa
insl
test
jge
out
ss
in
aam
mov
cmp
sti
inc
insb
jl
out
es
jmp
fstl
or
fistpll
sarb
push
mov
inc
dec
xor
aam
add
call
and
mov
cmpsb
push
jmp
xchg
outsb
leave
scas
pop
mov
push
out
mov
xor
inc
pop
mov
push
sbb
jne
jp
ror
adc
pop
and
push
jg
pop
mov
or
aam
outsl
sahf
pop
mov
and
xor
loopne
cld
sub
mov
ds
mov
lcall
lret
sub
popa
add
shrb
imul
pop
or
into
add
inc
iret
jae
mov
cltd
jmp
jge
ret
jmp
jecxz
lcall
inc
add
sub
adc
aas
daa
sbbl
filds
lcall
sbb
addr16
or
inc
push
jg
out
jnp
push
aad
ret
xor
out
pop
imul
xchg
pusha
fsts
inc
lcall
fcmovnbe
sbb
loopne
sub
aad
sub
test
repz
and
incl
mov
leave
jbe
incb
ret
rolb
hlt
test
sti
cs
dec
cmpsb
test
testb
jne
iret
iret
xchg
pop
xchg
xchg
inc
adc
out
inc
roll
or
mov
fstl
and
xchg
add
call
les
shll
mov
scas
pop
sbb
pushf
jg
xchg
xchg
or
pop
and
mov
jmp
movsb
push
sbbb
lcall
lock
subb
out
sbb
ret
mov
ljmp
push
stos
stc
xchg
mov
ja
lods
decl
xor
lds
sub
xlat
push
push
or
call
rclb
rcl
fimuls
pop
mov
pusha
fwait
outsl
scas
add
lods
test
lcall
jle
imul
lret
das
outsl
jo
sub
dec
je
mov
add
imul
pushl
cmp
movsl
mov
insb
fdivrl
fsubrl
dec
jmp
insb
xchg
mov
lods
je
pop
ret
lock
ljmp
lods
pop
cltd
xor
xor
jecxz
cmpsl
daa
xor
vmovdqa
jg
mov
ss
sbb
test
ret
inc
das
pop
and
jno
dec
jmp
sbb
jmp
pop
mov
sub
jecxz
pop
popf
dec
xchg
mov
xor
leave
incl
add
in
cmp
mov
xor
pushl
adc
push
or
cwtl
stos
test
fsubrp
or
jmp
cwtl
mov
inc
insl
je
fldcw
push
adc
xchg
loop
sar
fbld
mov
cmp
cmpsb
add
push
jg
sub
mov
sub
cmpb
and
push
jmp
test
movb
inc
stos
adc
insl
xchg
pusha
jae
mov
fs
add
stos
dec
cmp
shrb
nop
xor
mov
sbb
adc
xor
les
incl
jne
shl
dec
adc
mov
xor
sbb
call
call
mov
pop
outsb
jge
jbe
push
rcrb
lods
mov
add
std
mov
xchg
push
jo
divb
mov
popa
idivb
js
sbb
clc
mov
dec
sar
aaa
nop
dec
pushl
push
pop
sbb
clc
and
addr16
out
and
int3
fnsave
jg
out
cli
ds
xchg
jo
frstor
add
jl
pop
std
xor
mov
push
leave
pop
outsb
adc
and
lret
idivb
insl
mov
pop
push
xchg
fstpt
inc
push
cmp
rcrb
push
mov
icebp
incl
test
bound
mov
inc
daa
je
push
hlt
dec
sub
add
pop
into
sub
add
cmp
int
adc
mov
and
les
mov
lock
int
das
push
icebp
pushl
jno
mov
inc
or
pop
or
inc
stc
out
ljmp
mov
jbe
jp
and
sbb
inc
mov
xchg
jg
or
popf
leave
dec
mov
mov
je
fbld
cs
enter
push
mulb
cmp
andb
divl
cmp
jmp
sbb
adc
dec
or
repz
inc
xlat
cli
imulb
lcall
mov
jmp
pusha
sub
push
stos
sub
sbb
vmovntps
aas
in
pop
icebp
aam
cmp
cwtl
mov
adc
mov
rcrb
cmp
mov
pop
jmp
inc
testb
in
pop
push
push
repz
and
hlt
mov
sti
in
mov
ljmp
xchg
xchg
jecxz
inc
in
jo
movsl
aas
mov
loopne
jp
sub
inc
sub
jo
add
loop
insb
outsl
ljmp
xchg
pop
pop
inc
jnp
js
xchg
mov
stos
jbe
cmp
repz
out
push
sub
xchg
aam
dec
sbb
jbe
dec
shl
stos
cmp
inc
push
adc
pop
movswl
repz
imul
icebp
jle
lea
cs
and
imul
sub
mov
std
sbb
incl
sub
xor
aad
fcomi
sbb
jp
push
mov
adc
sub
clc
lock
jo
adc
in
outsl
xchg
mov
imul
push
stos
and
fdiv
jne
popa
pusha
push
cmp
xchg
popa
cld
inc
mov
sub
loope
out
fmuls
fnstenv
movsl
out
cmpsl
xchg
les
outsl
mov
mov
sub
mov
rol
and
aad
dec
shll
jb
xlat
out
adc
fwait
clc
cmp
or
xor
jmp
pop
fcoml
lahf
ficomps
clc
js
inc
xor
and
rolb
ljmp
lods
push
pop
pop
pop
stc
adc
int
imul
mov
jae
cld
fldl
test
outsb
sahf
int3
sub
lock
rcr
jbe
pop
push
into
push
add
pushl
xchg
fisubrs
aas
stos
sub
in
sub
scas
jp
test
icebp
pop
idiv
aaa
cld
jmp
xor
iret
bound
and
call
aas
daa
rcll
call
bound
adc
shr
inc
arpl
clc
lcall
int
insb
push
cmp
xchg
pop
xor
sbb
fs
or
jmp
arpl
ds
adc
imul
sarl
ss
incl
jbe
hlt
xlat
stc
mov
mov
inc
aaa
mov
imul
mov
dec
pushl
in
test
sub
pop
or
out
push
adc
rclb
adc
sub
inc
xor
stos
lods
cmpl
int
fdivrs
int3
gs
or
xchg
push
push
mov
dec
mov
push
insl
xorb
js
fldenv
inc
xchg
or
hlt
xor
aam
adc
xchg
clc
scas
pop
mov
aam
inc
clc
ljmp
mov
jnp
loopne
mov
push
ljmp
hlt
or
div
push
hlt
dec
push
sbb
or
test
test
push
or
xchg
and
push
mov
push
cmp
lods
inc
jno
push
loop
add
jg
repz
xchg
insb
iret
sbb
pop
adc
inc
in
lods
popl
mov
jnp
ljmp
shll
push
pop
cmp
lea
in
std
jmp
clc
mov
push
push
sbb
incl
js
sbb
mov
cld
mov
lret
xchg
push
cli
push
mov
das
aam
and
push
and
and
sbb
push
stos
std
mov
test
pushl
ret
pop
or
add
popf
iret
mov
or
push
cmpsl
es
stc
xchg
mov
mov
decl
jmp
addr16
dec
in
cmc
or
push
imul
xor
rorb
dec
lret
mov
sbb
jnp
mov
test
inc
mov
jp
clc
sbb
push
sbb
push
jecxz
jmp
sahf
pushf
dec
or
call
adc
test
inc
daa
push
mov
addl
fmull
mov
mov
push
notb
pop
les
xor
fiaddl
mov
mov
or
cld
daa
xlat
lea
shr
iret
mov
cmp
lahf
xchg
jle
mov
push
call
jo
je
inc
inc
cmp
fnstcw
notb
test
divl
les
fdivrs
push
jo
sbbb
in
cli
popf
add
lcall
fstpt
and
xchg
jecxz
nop
add
mov
sbb
ret
out
or
sbb
or
stc
bound
call
clc
jmp
xchg
pushf
in
jnp
dec
jle
lds
loopne
in
adc
incl
aam
and
outsl
dec
cmpsb
aam
aas
cmp
cwtl
dec
cltd
pop
je
push
imul
and
xor
adc
icebp
icebp
ljmp
push
inc
mov
mov
movsl
cmp
inc
push
mov
mov
int3
add
fnstsw
mov
mov
test
add
mov
pusha
out
push
iret
dec
test
decl
jno
lea
mov
jns
pop
xchg
pop
out
mov
sahf
and
mov
cmp
fcomip
jmp
insb
sbb
fisttpl
fs
mov
mov
js
mov
adc
inc
sbb
add
adc
or
call
pop
shr
addl
fcompl
lods
fists
mov
mov
es
adc
jmp
add
mov
inc
push
push
jns
out
stc
or
cwtl
orb
lret
les
mov
loop
lea
pop
outsb
test
mov
aad
cmp
lcall
adc
sub
fbstp
icebp
sti
mov
aaa
mov
xor
lahf
sti
ret
add
scas
fcomip
push
xor
or
das
and
jecxz
adc
jge
xchg
hlt
call
pop
lahf
data16
add
push
ror
test
shlb
out
loopne
push
stos
cwtl
mov
lods
inc
pop
test
sub
shlb
in
dec
push
ss
call
and
dec
out
pop
or
jo
sub
fstpl
outsl
cli
ljmp
adc
jp
rol
dec
loopne
test
add
and
enter
pop
xlat
nop
xchg
test
sub
inc
push
push
add
addl
je
arpl
pop
clc
test
or
sub
jmp
push
lret
loop
mov
xor
or
movsl
lea
inc
cmp
ljmp
rol
int
cmp
mov
popf
push
out
loop
xchg
sbb
mov
lcall
pop
xorb
je
adc
sbb
mov
mov
incl
cld
cmpsb
loopne
cmp
fs
aam
rcl
add
shrb
mov
dec
test
adc
push
push
sbb
mov
fistps
xchg
push
sbb
ds
inc
pusha
mov
dec
repnz
hlt
insb
popf
mov
sbbb
mov
fmuls
repz
mov
in
xchg
je
pushf
mov
dec
jo
adcb
cmp
leave
xchg
pushf
sahf
inc
or
mov
pusha
jo
push
out
mov
out
cli
lcall
cmc
push
ja
jne
jge
ss
cld
rclb
cmp
adc
mov
in
dec
ficompl
and
jae
pop
scas
subl
hlt
aam
mov
sbb
dec
dec
lahf
lahf
sub
inc
xchg
inc
cltd
jg
jecxz
cmp
sti
add
or
das
inc
gs
mov
and
mov
incl
adc
loope
ja
aam
sub
idivb
sarb
cmp
mov
ljmp
push
cli
adc
cli
push
lods
hlt
es
aas
adc
mov
cmp
imul
dec
lcall
call
and
leave
stos
sbb
add
xor
push
xchg
mov
sbb
jbe
int3
and
aam
push
jns
or
push
xor
ret
outsl
push
rcrl
mov
es
sbb
cs
dec
jb,pn
in
pop
or
cmp
dec
stos
push
mov
arpl
enter
out
sti
xchg
ljmp
or
cmp
hlt
cmp
jle
mov
xchg
add
jmp
jmp
clc
mov
mov
xor
jg
inc
daa
aad
pop
jne
outsb
adc
mov
jg
test
add
mov
xchg
ret
aaa
fnsave
fldenv
arpl
jg
int
lock
dec
repz
adc
mov
lcall
jl
ret
adc
add
pop
pusha
test
enter
in
mov
lcall
pop
sub
in
cmp
adc
data16
xor
jnp
shl
jb
fadds
xlat
mov
movsl
jmp
dec
outsb
popa
insl
mov
lcall
mov
sbb
jb
insb
pop
into
pop
mov
not
mov
inc
pop
mov
sar
call
and
int
out
cltd
clc
out
adc
fisttpl
inc
jns
in
ljmp
cld
in
sbb
xchg
sbb
xchg
arpl
push
cwtl
or
cmp
mov
pop
inc
stos
loopne
outsb
cmp
sbb
pop
add
es
cltd
cmp
addb
add
pushl
divb
hlt
jnp
dec
or
scas
xchg
lahf
push
movb
cltd
pop
je
ja
cld
adcl
mov
inc
enter
jge
and
lcall
out
push
pusha
test
fildll
bound
sbb
repz
push
jns
xor
pop
xor
or
adc
ja
aaa
sub
ret
das
repz
in
ds
lcall
icebp
arpl
or
dec
clc
pop
insb
cmpsb
sbb
mov
call
xor
shlb
mov
in
fs
sbb
push
push
sub
push
incl
test
jbe
pop
sub
in
ret
lds
pushl
fs
mov
sub
cmp
popf
push
lock
mov
push
sahf
inc
dec
jns
out
fiaddl
fimuls
mov
hlt
xchg
adc
xchg
push
std
pop
aad
mov
mov
out
push
and
ljmp
hlt
stos
test
push
cmp
push
std
aas
sub
mov
push
jle
repnz
mov
cmp
sti
outsb
mov
inc
call
sbb
add
and
lcall
inc
adc
out
push
inc
push
adc
dec
mov
test
cmp
int3
lcall
rcrb
cwtl
scas
sbb
dec
mov
add
pop
and
ds
ret
incl
cmc
ja
xchg
cmc
loopne
sbb
lods
or
xchg
jl
ss
ljmp
fsubp
xchg
lcall
inc
pushf
lods
cmp
sbb
sti
pop
cmpb
call
cmp
mov
push
in
shrb
gs
xchg
push
loopne
clc
lcall
sub
and
mov
adc
mov
divl
or
mov
fisttps
cmp
decl
arpl
ljmp
sbb
ja
push
enter
cmpsl
decl
fsubs
sub
scas
test
xchg
jmp
stos
fnstenv
in
ljmp
dec
lret
and
and
inc
xor
push
sti
enter
je
shlb
dec
push
inc
sub
inc
xor
inc
add
jg
lret
mov
and
lcall
cmp
add
aas
stos
push
dec
xchg
lcall
xor
aaa
xchg
aad
hlt
stos
ret
pop
dec
nop
adcl
mov
repnz
jecxz
fildll
out
imul
jle
cmp
mov
mov
test
ds
das
clc
call
xor
movsl
jne
push
xor
les
addr16
stc
mov
lcall
jmp
insl
mov
add
inc
lods
es
pop
xchg
jno
jle
inc
imul
pop
jp
dec
lods
lds
inc
pop
dec
into
daa
jecxz
mov
gs
loopne
lret
call
pop
movsb
dec
mov
and
test
movsl
push
xor
jb
movsl
add
or
gs
enter
scas
cli
lcall
jg
adcb
pop
and
testl
sbb
pushl
push
daa
loop
insb
push
mov
jmp
push
leave
jb
and
inc
movsb
call
hlt
inc
movl
jmp
pop
jg
mov
push
sarb
xor
stc
xchg
das
stos
setae
bswap
adc
mov
in
or
movsl
jg
mov
fistpll
xchg
outsb
in
and
lcall
fstpt
add
mov
das
push
sbb
int
mov
orl
jbe
loopne
add
add
pop
gs
fdiv
gs
int
add
std
incl
lds
shll
test
dec
ret
loopne
cld
jmp
and
jp
xor
push
cwtl
mov
pusha
jg
push
addr16
add
push
fsubp
repz
cld
subb
cltd
jb
lcall
jle
aaa
or
outsl
push
jns
clc
adc
stc
sbbl
test
sbb
dec
jns
mov
and
aas
lods
repz
push
loop
lret
cli
out
leave
or
xorl
cli
fcompl
push
loope
sub
xchg
mov
pusha
pop
jp
outsb
imul
ja
sti
jmp
adc
cmpsl
pushl
pop
cmpsl
mov
in
adc
lods
and
ljmp
jno
xchg
movsl
mulb
xchg
ret
dec
out
xor
add
mov
punpcklwd
je
in
cwtl
adc
cmc
pop
lret
cmp
mov
int
out
hlt
jle
in
mov
push
decl
inc
mov
movsb
mov
sub
lods
add
in
xor
jmp
xchg
gs
inc
adc
movd
test
sahf
mov
into
in
fsubr
out
call
aas
das
cmc
in
inc
jecxz
popa
inc
pop
sub
pop
jns
sbb
pop
ljmp
jg
mov
jmp
addr16
frstor
and
and
pusha
fs
out
add
jmp
loop
mov
ret
mov
jge
sahf
std
xor
imul
jecxz
test
cli
jnp
xor
mov
lret
jp
lret
inc
lods
push
cmpsb
jp
stos
sbb
loopne
or
dec
pusha
inc
in
enter
or
fisttpl
ljmp
stc
pop
enter
pop
lea
sbbl
inc
and
inc
jbe
mov
mov
mov
mov
scas
clc
das
fidivl
in
jp
in
pop
add
jbe
or
fucomi
inc
add
sub
icebp
in
sub
xchg
lret
adc
int
addr16
decl
jne
or
push
shrb
and
fimuls
and
push
hlt
sahf
push
inc
mov
mov
daa
stc
xor
or
push
aam
mov
lret
jge
push
test
pushl
leave
loope
repz
or
add
cmp
sbb
add
jmp
jmp
lahf
pop
gs
mov
inc
mov
int
sub
dec
cmpsl
popf
aam
pushl
data16
bnd
xchg
out
imul
xlat
and
cmp
sar
push
mov
mov
shrl
add
adc
fs
adcl
pop
add
repnz
mov
rorb
test
jmp
dec
dec
jbe
bound
into
and
xor
push
adcl
mov
sbb
fcomps
incl
scas
xchg
mov
fisubrl
pop
mov
in
les
dec
je
push
push
leave
insb
cld
jl
push
inc
xchg
pop
icebp
test
mov
or
and
sbb
mov
or
xor
jg
push
jle
jae
test
mov
in
sub
shlb
icebp
lahf
in
mov
ficoms
dec
push
pop
add
test
or
cltd
outsb
call
leave
sbb
mov
mov
sbb
adc
push
mov
rcrl
out
outsl
pop
lcall
cmp
sub
adc
mov
ret
dec
movsl
sub
sub
inc
loopne
sub
lock
xlat
les
lret
cwtl
sub
and
lock
stos
mov
imul
xor
outsl
fisubs
push
lret
aaa
in
daa
lcall
rclb
fidivrl
cmp
pop
frstpm(287
mov
cmp
scas
fldt
lcall
ret
incl
out
jecxz
out
cmp
mov
mov
lock
stc
inc
dec
popa
xor
sbb
lock
cmp
hlt
data16
mov
pushl
popa
test
psadbw
adc
jae
ret
mov
xchg
sub
decl
lcall
dec
inc
cmp
or
stc
scas
mov
loope
and
jecxz
pop
icebp
call
xlat
fwait
cmp
mov
lcall
pop
mov
je
sbb
mov
pushl
cmp
ja
mov
sti
in
fsubl
and
jp
test
mov
lods
xchg
clc
enter
out
and
mov
inc
cli
lcall
outsb
mov
xlat
jb
mov
lcall
dec
out
push
sub
loop
cmpsb
adc
xor
push
lahf
out
sbb
pushl
inc
inc
pop
xchg
imul
xchg
adc
jo
mov
mov
xor
dec
lods
jle
sahf
pop
shrb
pop
push
shlb
push
sbb
jge
mov
lods
push
adc
incl
les
push
inc
call
mov
jno
pushl
xchg
mov
fidivl
fcmove
xchg
or
lcall
incl
jnp
inc
inc
cmp
bound
filds
push
xchg
inc
jmp
sbb
rcl
pop
or
sbb
mov
mov
loopne
test
inc
mov
cli
lahf
sbb
js
add
fbld
or
and
jl
outsl
and
add
rol
push
movl
sub
lds
ljmp
xor
sub
cmp
in
shrb
test
movsl
test
mov
shlb
jg
stos
pop
xchg
push
outsb
inc
out
push
mov
inc
loop
sub
imul
loopne
sub
imul
jmp
sbb
sbb
movsb
cmp
mov
inc
mov
or
xor
das
add
jmp
outsb
mov
in
push
movsl
mov
dec
adc
loop
aam
and
popf
xor
mov
daa
outsl
jge
call
xor
js
mov
pushl
mov
push
inc
xchg
fwait
xor
pop
push
stos
xchg
push
mull
pop
fstl
scas
cmp
das
mov
jbe
pop
jae
test
ljmp
cli
fs
fdivs
add
loopne
in
add
test
mov
stos
push
push
bound
icebp
and
in
incl
cmp
mov
icebp
xor
xchg
scas
ja
or
mov
xchg
cmp
mov
inc
pop
fcomip
dec
movsb
xor
lock
jb
pop
push
and
xchg
push
icebp
mov
call
jmp
test
lock
adc
jbe
lret
call
je
imul
inc
sbb
inc
aad
mov
sbbb
push
cmp
iret
xor
popf
pushf
mov
pushl
add
or
push
jb
pop
push
mov
lods
pop
fsubrl
out
and
into
movsl
stc
add
cli
mov
gs
mov
test
mov
sub
jp
ds
xchg
das
scas
adc
or
mov
rclb
sbb
mov
sbb
imul
dec
je
mov
mov
cmp
sbbl
xchg
jmp
stos
testl
popf
in
push
gs
jmp
pop
lcall
adc
int3
mov
add
in
test
cs
cmc
ret
sub
push
adc
jg
dec
ret
ret
ds
in
inc
in
push
pop
inc
repnz
and
inc
int
test
jle
das
cmpsb
mov
call
mov
push
add
inc
aam
cli
jno
out
lcall
in
fwait
add
mov
incl
pop
xchg
lea
mov
sbb
negb
inc
sub
push
and
ljmp
inc
push
es
jmp
xchg
or
and
xchg
xor
fists
ljmp
dec
fcomip
jmp
xor
testb
xlat
outsb
mov
andb
ret
outsl
cld
jns
adc
cmp
xor
sub
lods
xchg
call
in
xor
lret
je
jg
dec
out
fisttpll
dec
scas
ja
pop
mov
out
decl
jmp
adc
jo
repnz
mov
int
out
fs
mov
clc
lcall
cmp
loope
cmc
sub
inc
or
add
ficoms
fisubrs
decl
inc
push
loope
fisttpll
das
out
lahf
or
pop
fsubp
pushl
sbb
inc
jmp
gs
cmpsb
pop
xchg
inc
enter
sahf
fnsave
or
cmpsb
incl
mov
pop
jmp
nop
je
testb
or
js
dec
push
mov
dec
out
and
sbb
pushf
pop
mov
push
pop
popa
movsl
push
jae
test
jmp
sahf
ljmp
out
or
aam
jmp
cmp
sahf
mov
cmp
scas
std
mov
pop
mov
decl
mul
fwait
xchg
sbb
loopne
xchg
adc
cmp
ret
lcall
imul
jmp
dec
orb
cmpsl
xchg
nop
mov
push
and
inc
leave
sub
lock
and
jae
enter
dec
in
add
movsb
and
lock
cmp
inc
and
lcall
xor
cli
xchg
out
fldcw
xchg
push
add
fdivl
sti
inc
adc
xor
decl
cmpsb
mov
dec
sti
mov
cmpsl
cwtl
ret
jne
and
add
insl
mov
jecxz
jmp
cld
mov
je
inc
jno
cli
jo
mov
sbb
add
add
mov
ljmp
or
jo
mov
bound
cmpb
cmpsb
addl
decl
lock
add
push
mov
lds
mov
dec
fisubs
jp
pop
roll
lcall
cmp
xchg
jg
iret
push
pop
and
xchg
sti
and
adc
cmp
icebp
call
pop
or
clc
test
sbb
cmp
pop
in
addb
mov
inc
mov
fadds
enter
mov
fsts
data16
cmp
insb
ja
pushf
cld
jl
inc
xor
jns
mov
pop
in
pushl
push
fistl
adc
mov
negl
xchg
loopne
push
test
cmpl
stos
movsl
mov
fwait
rclb
inc
cmp
rorb
or
jle
gs
pop
xchg
out
pop
jmp
repz
sbb
insl
jp
pop
jno
sub
jecxz
jmp
xor
add
outsl
xor
cmc
clc
divb
stos
mov
or
and
inc
adc
fildll
call
rcrb
add
or
inc
int
add
decl
cmpsb
fisubrs
les
in
xchg
roll
inc
icebp
js
outsl
lahf
loop
pushl
imul
push
sbb
pop
aam
xor
lock
repz
jae
je
cmp
xchg
mov
incl
xor
fucom
pop
sbb
test
push
dec
cmpsl
pop
jp
sbb
mov
mov
inc
pop
inc
fnstsw
mov
mov
or
pop
gs
das
push
lahf
ds
mov
lcall
je
fistpll
pop
fnsave
inc
mul
notl
mov
inc
push
sbb
stc
fidivs
ss
decl
loopne
pop
lock
movsb
mov
movsb
dec
jmp
push
stos
decl
push
inc
xor
fs
insl
lret
insb
sub
incl
icebp
shrb
push
out
dec
xlat
fidivs
adc
inc
cltd
testl
fsubs
mov
rcll
and
outsb
pop
lahf
decl
or
inc
push
jbe
mov
mov
test
stc
sarl
adc
sbb
daa
xchg
cmp
mov
scas
jbe
cmp
xchg
mov
sbb
jmp
ljmp
xor
cmc
mov
les
push
sub
ds
pop
dec
cmp
xor
cmp
fbld
cmc
cmc
stos
push
lds
arpl
pop
test
roll
lcall
inc
jle
shrb
popa
xchg
sub
shlb
sub
lcall
fnstenv
and
ret
and
or
pop
cmp
xor
inc
incl
mov
jmp
pop
pop
mov
pop
cltd
dec
out
lods
and
or
cld
decl
sub
dec
aad
idivl
nop
push
xlat
aaa
adc
decl
insl
mov
andb
testl
stos
filds
or
xchg
iret
push
sbbl
dec
mov
pop
sub
ljmp
push
and
int
xor
fbstp
sbb
adc
cld
xchg
xchg
mov
jns
add
insb
ljmp
sbb
stc
aad
mov
mov
add
fwait
inc
loope
pop
sahf
xchg
int3
mov
sub
bswap
decl
jbe
pop
lods
cli
dec
sub
inc
jmp
jp
dec
test
mov
or
pop
pop
mov
lcall
push
xchg
inc
in
shlb
mov
hlt
loop
test
jno
repz
fdivr
pop
mov
cmp
push
jno
roll
lock
jno
pushl
in
mov
ret
andb
cmp
xor
xor
call
xchg
inc
add
lcall
stc
mov
sub
cs
or
dec
bound
lcall
inc
push
mov
pop
push
mov
push
jge
ret
fsubl
repnz
xchg
data16
mov
sbb
call
std
jl
test
add
jmp
cmc
jne
iret
sbb
xchg
and
xchg
inc
sbb
jg
add
into
sub
or
xchg
adc
nop
mov
mov
ljmp
mov
push
ret
xchg
insb
mov
lahf
adc
int
cmp
adc
decl
sbb
mov
cs
out
dec
xchg
dec
decl
inc
jmp
jl
jge
mov
sub
lock
ljmp
push
mov
lcall
xor
mov
sbb
test
leave
add
mov
dec
adc
ds
cld
dec
inc
push
lcall
jle
shl
sub
icebp
or
dec
ja
mov
imul
mov
stos
or
insl
idiv
mov
hlt
mov
hlt
call
sbb
scas
push
mov
mov
inc
sub
mov
sbb
insl
movsb
in
clc
lcall
popa
popa
rcrl
cmpsb
mov
cmp
sub
cmp
ljmp
sub
add
in
or
mov
ret
iret
repnz
jns
lcall
mov
and
lods
imul
cmc
pop
xchg
push
rcrb
adc
jns
xor
sbb
iret
int
jp
popa
adc
inc
sti
into
push
insl
inc
pusha
push
xchg
sub
dec
movsl
stos
adc
mov
mov
aam
test
mov
adc
mov
call
call
push
mov
ss
int3
inc
hlt
sub
sarl
in
addr16
pop
hlt
decl
xorl
in
xchg
daa
sub
cmp
outsl
into
pop
add
decl
adc
adc
sub
bound
cltd
scas
fldcw
pop
movsl
jecxz
mov
ljmp
adc
sub
fidivrs
cmp
mov
xchg
cli
outsl
es
jno
cmc
stc
xor
loopne
pushl
hlt
inc
mov
scas
and
push
andl
jb
jne
jmp
inc
call
js
ljmp
mov
enter
mov
lea
sub
call
cmp
xor
lods
fdivrs
adc
pop
sti
inc
pop
dec
xchg
mov
jg
pushl
je
movsl
mov
inc
in
mov
dec
enter
jmp
insb
in
or
and
ljmp
pop
mov
testl
test
mov
rcr
adcl
mov
decl
repnz
xchg
cmp
mov
mov
rcrb
xor
fcoml
sahf
cmp
loop
pop
fimuls
lds
add
or
add
incl
repnz
out
sub
in
push
in
cmpsl
push
sbb
test
pop
pop
dec
outsl
adcb
add
push
cmp
icebp
and
sbb
mov
ror
mulb
lock
decl
xchg
mov
cld
sahf
jnp
mov
pop
add
pusha
incl
sbb
ret
hlt
fs
scas
mov
mov
dec
test
lods
add
dec
daa
inc
mov
bnd
fnstenv
mov
adc
call
lods
xchg
and
lds
push
js
add
pop
stos
dec
movsl
cmp
mov
mov
jge
lcall
or
sub
xchg
imul
addb
inc
xchg
inc
mov
test
hlt
sar
decl
inc
shll
shrl
adc
mov
or
out
xchg
jmp
mov
cmp
dec
sub
xlat
sti
jns
imul
fnsave
popa
pop
call
push
fisttps
and
movsb
lahf
dec
movsb
xor
xor
cmp
dec
push
shrb
scas
adc
and
outsl
push
fbld
call
sti
adc
outsl
xchg
ror
scas
xchg
imul
push
sbb
cmpb
pop
cmc
sub
mov
sub
sub
sti
add
pushl
das
push
enter
hlt
jle
sahf
in
pop
int3
xor
into
push
das
and
sub
jecxz
gs
lea
pushl
inc
fs
sbb
arpl
lea
cmp
cmp
and
dec
jmp
cld
ljmp
jge
sarb
cmpsb
subb
hlt
sahf
ljmp
test
inc
mov
ja
call
xchg
fisttpl
inc
aam
cli
mov
jle
jmp
arpl
lds
mov
fsubs
icebp
push
pushl
outsb
dec
outsl
push
adc
mov
shlb
por
lahf
add
faddl
fbstp
xchg
mov
cmp
mov
pop
movb
std
movb
mov
imul
roll
add
ja
fs
push
fnstcw
rorl
clc
pushl
cmp
jmp
test
in
sbbb
pop
adc
lods
pop
leave
or
out
mov
mov
mov
repz
push
decl
data16
jmp
mov
nopl
popf
and
lcall
decl
outsb
xor
push
fidivrl
fisubrs
sbb
mov
orb
repnz
sub
mov
xchg
push
mov
adc
hlt
scas
ja
pop
and
outsb
cs
pop
inc
mov
dec
add
les
iret
in
mov
mov
sub
or
aad
mov
cmp
imul
dec
lahf
bound
push
and
cmp
lods
jno
lcall
jns
dec
mov
push
lahf
mov
test
jle
mov
sar
decl
sti
mov
dec
push
or
adc
gs
dec
xorl
inc
cltd
loop
mov
decl
lock
leave
jecxz
pushf
jnp
xchg
xchg
mov
in
scas
adc
adc
mov
mov
daa
push
jo
leave
cmpsb
aas
sub
pop
rol
out
cmp
lcall
cld
mov
divb
dec
es
scas
loope
jmp
xchg
push
lods
in
pop
daa
in
adc
fistl
add
jbe
pop
fisttps
ret
sub
mov
cld
cs
sub
daa
lcall
fnstcw
push
fadd
pop
sbb
dec
xchg
push
sub
inc
inc
gs
or
xlat
sub
pop
sbb
into
imul
cli
popa
jne
mov
and
pop
push
test
lcall
jp
jae
inc
mov
cltd
xchg
aaa
cld
xor
mov
adc
jg
lock
sbb
fcomip
adc
in
pop
daa
fwait
push
pop
int
fisttpll
test
movsb
call
and
cli
or
mov
xchg
or
sub
pop
aad
or
pop
cmc
jmp
mov
mov
stc
adc
add
and
std
jl
fcompl
data16
mov
out
sbb
testb
push
cltd
jmp
jo
idivb
aad
fucomp
and
mov
dec
jno
push
xor
cltd
mov
ljmp
jo
mov
in
js
in
fistpll
xchg
popf
and
scas
lock
pop
insl
out
cli
pushl
ret
lcall
fstl
xor
ss
jns
xchg
mov
mov
jg
shll
mov
incl
mov
les
sbb
push
sbb
jmp
mov
mov
popf
add
stc
lea
jmp
cmp
in
fldcw
incl
dec
lods
and
clc
inc
xchg
xchg
or
fisttpll
pop
popf
out
outsl
sti
and
mov
ja
sti
popf
fstpt
xchg
shrb
outsb
ljmp
xchg
push
arpl
testb
mov
call
pop
mov
movl
outsb
sub
in
nop
mov
loopne
decl
dec
xor
xor
push
inc
xor
cmpsb
mov
dec
mov
incb
xchg
rol
sub
sar
lcall
outsb
loopne
mov
cmp
add
addr16
sub
das
subl
loopne
cld
lcall
sbb
shld
xchg
mov
rolb
mov
aam
push
adc
adc
add
cwtl
movsb
push
and
ljmp
mov
push
imull
cmpsb
fisttpl
lods
mov
sub
push
mov
sub
jnp
sub
or
div
xor
callw
pushl
jae
sbb
lock
cwtl
dec
add
rcl
mov
int3
dec
adc
popf
mov
jp
int
xor
xor
xor
lahf
cmpb
shrb
in
mov
adc
ljmp
jno
lcall
inc
stos
lods
lcall
sbb
push
sahf
sbb
mov
mov
dec
ljmp
mov
stc
sub
pop
scas
lods
clc
test
dec
loopne
mov
out
sar
or
mov
mov
xlat
pop
or
out
nop
push
and
push
push
xchg
in
popf
mov
icebp
jnp
mov
dec
negl
ret
xchg
lret
mov
into
popa
sbb
in
into
cmc
jmp
fs
adc
dec
scas
data16
cmp
sarb
sti
lods
pop
aaa
and
jmp
out
rclb
lods
decb
lock
jge
adc
push
add
pop
aas
cwtl
mov
call
std
aaa
cmp
and
push
mov
insl
in
test
inc
sbb
push
nop
and
push
mov
ljmp
push
ss
xor
cli
fistpl
scas
push
aaa
xchg
or
cmp
mov
ja
inc
mov
inc
xchg
int3
fs
data16
mov
mov
arpl
push
push
push
inc
xchg
sub
outsl
cli
insb
test
dec
push
pusha
icebp
cmp
add
outsb
xchg
ficomps
pusha
jno
movsb
sub
sti
mov
inc
mov
sub
clc
bound
bound
cmc
xlat
jo
sbb
decl
out
rcrb
inc
push
inc
push
push
pop
ret
inc
inc
arpl
sub
jle
movsb
sbb
stos
cmp
or
es
push
dec
mov
loopne
adc
inc
pop
test
fbstp
mov
mov
pop
cltd
imul
cmp
dec
inc
mull
call
dec
js
insb
jb
and
mov
pop
into
pop
and
aad
pop
xchg
cwtl
xor
ljmp
subb
iret
aaa
ds
mov
scas
gs
shrl
mov
sub
cltd
or
xchg
lret
ja
dec
stc
lret
lcall
mov
scas
dec
test
aam
repnz
ljmp
mov
push
or
add
xor
mov
imul
fmuls
push
cli
mov
call
and
shll
inc
xchg
mov
xchg
test
push
std
jg
push
pop
sar
xchg
xlat
dec
mov
div
sbb
sti
or
call
push
negl
inc
push
pop
push
pop
sti
imul
and
mov
mov
hlt
lods
mov
decl
sub
jmp
aas
sbb
fsubs
mov
les
sbb
lcall
push
push
mov
stos
dec
push
mov
xchg
adc
imul
sbb
sbb
pmaxub
lret
xlat
sbb
jae
aaa
iret
aas
in
ret
bound
sub
xchg
or
ja
clc
sub
les
cmp
scas
jg
mov
mov
inc
inc
rorl
mov
orl
xchg
add
lcall
adc
call
inc
and
cmp
ja
mov
fmull
mov
shll
add
add
inc
out
inc
sbb
lock
incl
lock
pusha
pusha
mov
pop
xor
stos
mov
adc
ljmp
call
mov
mov
mov
sub
mov
and
ljmp
inc
and
cmp
or
mov
sti
dec
adc
mov
and
add
call
daa
imul
pop
daa
mov
add
scas
out
jecxz
in
mov
adc
mov
and
data16
xchg
dec
in
shll
sub
leave
cmpsb
cmp
in
fmull
loope
adc
clc
mov
test
pushf
fwait
pushl
or
add
std
lods
jb
pop
jmp
call
insb
mov
add
pop
cli
xor
ja
inc
jne
inc
cmp
xor
push
ret
addb
jl
add
call
negb
mov
pop
mov
and
sbb
and
mov
push
add
mov
sarb
and
jbe
data16
enter
hlt
aam
mov
mov
mov
xor
lret
inc
outsl
repnz
andb
pushl
out
shll
jns
xor
loop
out
pop
mov
mov
enter
pop
push
push
xchg
ds
adc
xchg
sub
push
into
adc
clc
ljmp
jp
sbb
insl
cmpsb
jne
mov
pusha
ljmp
xlat
xchg
fdivrs
inc
ficoms
xchg
sub
cltd
test
or
cmp
js
mov
into
mov
imul
fildll
cmp
inc
xor
jle
call
aas
xchg
mov
pop
inc
push
jnp
stc
hlt
jle
lods
push
pop
mov
ja
fs
fistpll
pop
in
enter
fmuls
inc
xor
ret
aad
xchg
data16
adcl
pushl
sarb
dec
pop
xor
mov
adc
mov
lea
hlt
fisubrs
lahf
adc
fistpl
pop
pop
push
mov
jg
add
xchg
icebp
mov
inc
xchg
dec
clc
jg
call
cmp
xor
adcl
sbb
jl
cmp
movsb
stos
mov
or
lret
aaa
or
inc
inc
adc
lret
decl
daa
pop
fs
inc
popa
adc
xchg
lods
ret
rcrl
jg
insb
je
in
enter
jle
xchg
lcall
pop
adc
rorl
out
cmp
fidivs
pop
xor
sahf
out
pop
je
jge
ljmp
stos
pushf
pop
sbb
mov
push
push
add
xchg
dec
pop
mov
xchg
adc
sbb
push
loop
ds
sbb
add
lcall
xor
or
push
ret
lods
adc
push
xchg
mov
lea
xor
xor
dec
mov
je
lea
mov
mov
cmp
pushf
jp
pop
frstor
jmp
xchg
aad
jle
or
jo
pushf
add
cmp
add
or
jge
xchg
lcall
jmp
jp
mov
lock
in
mov
lcall
dec
scas
xor
push
cld
incl
cwtl
cmp
ljmp
jl
add
lods
jg
jb
mov
jp
dec
xor
mov
cli
mov
jmp
outsb
push
lahf
push
push
jnp
jns
jmp
ljmp
add
xor
sbb
ret
pop
cmpb
dec
nop
sbb
fdiv
cmpsb
xor
dec
stos
sub
xor
mov
je
shrl
hlt
push
cmpsl
xchg
and
pop
fnstcw
dec
push
push
call
adc
jg
cmp
dec
cwtl
xchg
pop
leave
das
test
lcall
dec
test
loop
jbe
fwait
cmc
iret
out
xor
test
xchg
push
and
xor
ja
decl
fsubr
scas
fwait
movb
into
xchg
jl
int3
iret
repnz
pop
imul
jmp
lcall
es
das
fisubs
sub
cld
push
mov
xchg
and
dec
ja
dec
push
stos
cmpsl
cmp
imul
sbb
and
aad
pop
popf
mov
inc
push
cs
sub
adc
out
mov
xchg
lock
and
hlt
mov
xor
inc
sar
cmp
in
aad
cmpsl
mov
adc
hlt
daa
adc
fwait
dec
cmp
adc
xchg
fisttps
inc
loope
cs
push
push
or
test
lock
cmpsb
and
adcl
out
clc
ljmp
fnstsw
mov
insb
das
stos
mov
repz
ds
decl
xchg
aas
xor
ja
push
insl
push
iret
into
movsl
inc
dec
test
push
mov
jbe
imul
cld
ljmp
push
sub
aas
jbe
shlb
in
and
cmp
lods
mov
stc
loop
mov
mov
mov
je
mov
fiadds
adc
cmpsl
dec
mov
mov
lret
jbe
bound
jno
or
jmp
push
jp
mov
loope
sahf
push
jl
push
nop
lcall
mov
push
stos
push
cmc
mov
add
sbb
cli
imul
xor
test
outsl
add
mov
les
addb
xor
cmp
jne
jns
leave
out
pop
lock
dec
inc
shrb
jb
dec
into
xchg
lahf
mov
lock
adc
mov
and
std
sahf
cmp
call
orb
mov
enter
fldcw
lret
movsb
mov
stos
movsb
add
cmp
pop
push
iret
cwtl
pop
push
pop
dec
xor
int
add
dec
push
clc
lcall
inc
out
inc
mov
icebp
clc
adc
pusha
lcall
cmp
call
shl
filds
push
mov
repnz
icebp
pop
pushl
frstor
push
mov
xlat
mov
xor
hlt
test
rol
xchg
push
dec
les
jb
es
es
dec
out
movsb
mov
lret
dec
pop
scas
dec
ss
inc
lcall
dec
imul
stos
jbe
adc
jo
mov
neg
cmpl
mov
fnstsw
pop
xchg
fcompl
add
dec
xor
cltd
sub
add
cmpsb
jg
sub
push
les
inc
sub
add
fisttpll
pop
mov
sbb
adc
pushf
lahf
mov
mov
push
adc
incl
and
not
xchg
mov
cmp
push
data16
adcb
loop
xchg
push
fbstp
or
mov
ret
out
and
enter
add
mov
mov
dec
gs
stos
push
test
inc
jns
mov
shrl
pop
pusha
enter
fbld
xchg
sub
in
cmp
fisubs
jo
rclb
or
xor
ljmp
mov
ret
sub
hlt
xchg
jb
cmp
loopne
adcl
dec
mov
adc
cltd
mov
pop
sbb
shll
adc
imul
sub
out
cmpsb
xor
add
cmpsb
cmp
inc
inc
ljmp
push
decb
inc
test
test
repnz
inc
pusha
jo
jge
push
or
xchg
adcb
mov
pop
push
je
lock
filds
test
adc
jg
jo
sbb
jmp
rorb
rcrb
dec
push
jmp
xor
inc
or
mov
lods
lods
jae
push
aaa
adcl
ljmp
xor
pusha
jne
and
jae
scas
mov
sbb
adc
stc
jae
pushl
mov
fdivrs
sub
jbe
int3
sahf
fwait
stos
stc
mov
fcmove
dec
scas
adc
decl
jno
mov
sub
es
loope
mov
movl
pop
pop
scas
cmp
cli
cmpsl
push
enterw
sbb
rclb
mov
notl
vmovmskps
sub
rorl
ficoml
sti
rcrb
scas
pop
les
xchg
arpl
ficoml
hlt
out
or
sbb
ds
jecxz
arpl
sbb
and
pop
sbb
sub
push
xchg
decl
iret
xor
pop
pop
shr
add
je
ljmp
xor
inc
mov
repnz
outsb
dec
sbb
movsl
add
mov
sahf
outsl
sbb
pop
scas
xlat
cmp
movsb
sbb
cmp
mov
and
loop
lcall
xchg
clc
popa
out
sub
cmp
mov
inc
ret
cmp
sub
int3
mov
sub
add
addr16
outsb
out
lock
sub
shlb
inc
mov
iret
lea
es
je
push
ljmp
clc
incl
int
pop
sub
inc
loopne
dec
adc
pop
xor
cwtl
or
inc
or
mov
ljmp
mov
jnp
into
sbb
push
lcall
xchg
xchg
jecxz
xchg
fisttps
jns
push
sbb
fisubs
cmpsl
adc
mov
addr16
decl
mov
or
nop
int
add
adc
mov
cs
pop
adc
lcall
lods
outsb
jg
inc
adc
rcll
shll
pop
jl
jmp
xchg
mov
inc
rcrl
in
cmp
push
cld
xchg
sub
xor
push
jmp
out
lods
push
sbb
inc
push
lea
add
lcall
or
inc
cmp
insl
push
push
jle
xor
mov
mov
cmp
push
fidivrs
movsb
mov
pushl
decl
xchg
mov
xchg
imul
jnp
xchg
das
bound
shr
outsl
mov
cmp
pop
cmp
inc
xchg
push
and
stos
jne
inc
mov
call
lret
or
inc
sub
fisubrl
lds
push
aaa
clc
inc
xchg
sbb
pushl
xorb
lea
sarl
pop
jmp
iret
cli
mov
sub
mov
rolb
add
lcall
int3
and
fstpt
jmp
add
mov
mov
and
hlt
loopne
pushl
adc
dec
jns
shll
sti
cmpsl
mov
cmp
or
ljmp
inc
inc
cmp
outsl
sub
sarb
lcall
sub
push
or
jns
add
jns
mov
mov
in
jo
dec
jb
ret
int3
out
pushl
inc
cli
dec
cltd
sbb
push
aas
xlat
lock
push
lods
out
cwtl
push
hlt
fisubs
jge
nop
push
xchg
jg
pusha
cld
pop
cmpsl
rol
sarb
scas
mov
mov
mov
sbb
mull
and
xchg
das
cli
decl
mov
std
push
mov
lods
jecxz
ss
sub
stos
movsl
add
stc
rolb
or
mov
jg
popa
xchg
mov
hlt
in
sbb
pop
lods
adc
jo
aas
jns
mov
jmp
imul
sub
repnz
adcl
sbb
ret
sbb
incl
in
faddl
fcomip
mov
in
add
jl
lret
dec
xor
mov
addl
popf
jne
popf
xor
daa
pop
pop
mov
push
outsb
ljmp
adc
jle
testl
mov
push
xor
jb
push
jno
fistps
aas
dec
fimull
inc
add
or
adc
pushl
ja
inc
mov
push
lret
mov
aaa
dec
or
lods
mov
jge
mov
mov
stc
arpl
inc
aaa
in
mov
rorb
jg
stos
imul
pop
aaa
cli
loop
test
daa
jle
cmp
ja
out
push
loopne
and
lcall
dec
icebp
mov
mov
lret
and
ljmp
pop
mov
sub
xchg
aad
and
stos
sbb
push
push
jb
in
lods
testl
outsl
sub
pop
inc
nop
and
lahf
inc
dec
scas
rcrb
call
jns
std
out
ficomps
fbld
sub
fidivrs
loopne
test
xchg
incl
and
repz
adc
adc
pusha
add
repz
pop
push
and
or
mov
cltd
fsubrl
inc
nop
push
sbb
jmp
rolb
sbb
cmpsb
pop
pop
ret
cmovno
push
repnz
ljmp
sbb
sbb
xchg
imul
int
mov
add
jge
cltd
fisubs
ljmp
idiv
push
mov
loop
push
fsts
mov
subl
sub
mov
sub
loope
int3
pusha
push
pop
sbb
outsb
sbb
sub
mov
fcoml
sbb
add
fiaddl
imul
mov
sarl
and
push
or
jge
inc
fsubr
inc
out
fidivs
mov
leave
inc
mov
xchg
or
pop
cld
cmp
mov
ret
sbb
cli
cli
xchg
xchg
inc
cli
call
in
popf
and
pop
mov
gs
incb
push
addr16
test
pusha
xchg
dec
and
pushl
xchg
inc
loope
sub
jmp
inc
cmpsb
dec
aam
jg
dec
stos
jle
jns
jmp
test
mov
jecxz
sub
pusha
ret
in
decl
sub
jl
add
sbb
jns
test
or
mov
add
sarl
and
push
jns
cmp
fs
or
mov
call
pop
push
int
jo
dec
adc
fdivp
scas
dec
movsl
cmp
xchg
mov
mov
decl
xor
iret
cmpsl
movsl
test
jns
xchg
xchg
je
or
ret
cs
rcr
push
xchg
shll
pop
adc
cmp
mov
fildll
xchg
sub
or
mov
xor
jmp
int3
jns
loop
dec
cmp
cmp
mov
jg
es
out
mov
aaa
rcl
mov
fsubrl
int3
cmp
xor
push
inc
dec
daa
addr16
lcall
clc
cmp
and
fsubrs
push
jne
mov
cmp
pop
cmpsl
mov
jmp
lds
es
and
dec
lods
insb
outsb
into
jo
loop
cmp
or
xor
insb
xor
insb
pop
and
push
pop
mov
adc
cmp
js
popa
cmp
call
xchg
xchg
and
xor
in
push
pushf
bound
outsb
popa
jp
mov
jbe
jns
or
pop
stc
fldt
push
push
dec
gs
scas
pop
jbe
dec
jb
mov
adc
popa
add
movsb
or
mov
sub
cmp
jno
add
fbld
clc
sti
xchg
fstl
loop
cli
mov
loopne
sbb
jno
insb
pop
cmp
ljmp
enter
adc
xchg
mov
sbb
ljmp
mov
fisttpl
sub
mov
lahf
jae
adc
lea
jg
pushl
jle
inc
push
or
push
dec
jp
insl
in
xchg
fcmovb
js
loopne
lret
movsl
outsb
adc
mov
dec
xor
jge
push
sub
jecxz
push
out
stc
cmp
orb
cmp
mov
push
push
cs
notb
fldenv
js
call
push
add
jecxz
outsl
lcall
add
gs
arpl
scas
sbb
gs
aam
adc
arpl
mov
decl
shr
push
jp
dec
push
mov
push
or
sbb
ret
ljmp
movl
xchg
insb
push
pop
mov
pop
sbb
dec
mov
add
movb
call
enter
jns
xchg
push
sbb
jecxz
inc
mov
hlt
ja
lea
es
stos
xor
hlt
shld
push
mov
xchg
mov
jg
sbb
popf
jae
lahf
shr
mov
leave
movsl
mov
mov
bound
sub
and
mov
pop
inc
jno
mov
mov
xchg
shl
insl
rol
out
adc
pusha
loopne
jmp
mull
add
mov
pop
loopne
lcall
mov
mov
and
scas
pop
xchg
and
jg
mov
mov
inc
mov
jmp
cmp
pop
mov
lods
mov
mov
xor
daa
out
adc
call
test
enter
lahf
push
mov
and
ss
inc
dec
inc
lret
mov
and
call
xlat
loope
sub
arpl
loopne
in
mov
shlb
mov
jg
incl
sahf
jle
sub
pop
inc
or
rclb
test
mov
fcomip
incl
or
sub
pop
das
fwait
loope
repz
notb
clc
add
aaa
mov
out
call
outsl
push
sahf
add
outsb
stc
jmp
pop
push
mov
loopne
dec
lods
iret
outsb
sbb
adc
ljmp
cmp
mov
in
lret
sbb
in
popf
dec
fmul
push
mov
daa
fbld
or
rcll
icebp
or
cmp
in
pmaddwd
andl
loopne
pushl
mov
in
xorl
in
sub
imul
rorb
pushl
sub
imul
or
mov
mov
push
dec
pushl
push
and
hlt
or
jle
enter
imul
lret
in
mov
lods
and
call
mov
in
sub
nop
add
leave
jecxz
xor
add
adc
mov
xchg
push
int3
cld
xchg
jne
andb
jnp
adc
ficomps
inc
inc
jno
cmp
mov
cli
push
dec
cmp
aaa
cld
jg
dec
xchg
push
aaa
push
jbe
sub
jp
frstor
sar
ljmp
push
xchg
mov
popa
xor
and
sub
pusha
pop
fnstcw
jmp
aam
in
clc
lcall
outsl
idivb
jge
dec
ljmp
push
repnz
jle
ja
xor
ja
out
in
mov
test
decl
aas
dec
aad
inc
jp
stc
stos
fldl
imul
rdmsr
loope
out
mov
jne
push
push
cmpsl
mov
or
mov
adc
movsl
repz
mov
adc
call
cmpsl
pop
bound
int3
mull
jmp
shrb
in
lea
mov
mov
jns
push
leave
fsubrs
jne
subl
xchg
xchg
cwtl
gs
adc
mov
pushl
sahf
hlt
shlb
cld
icebp
or
out
jb
cmpb
sub
jecxz
ret
adc
pop
pushl
or
xchg
bound
test
out
adc
lods
inc
pushl
or
jb
cmp
mov
sbb
add
or
mov
outsl
pushf
pop
dec
bound
lods
and
jns
pop
jge
cmpsl
mov
ljmp
push
roll
mov
mov
shll
mov
lock
sahf
cmpsl
fldpi
loopne
mov
lret
aas
push
fisttps
cmp
jecxz
mov
pop
movsb
ljmp
fisubrs
pop
push
inc
add
pop
int3
arpl
mov
push
mov
cs
jbe
aas
sub
adc
lea
dec
stos
in
in
xor
incl
cld
ljmp
addr16
mov
adc
push
aam
dec
xchg
jmp
cs
ljmp
jno
pop
int
test
pop
push
ja
mov
popa
fstl
mov
lods
mov
pushl
stos
outsb
mov
sub
mov
mov
out
in
pop
push
xor
cmp
dec
movsl
adc
dec
rclb
xor
stc
sub
and
rolb
in
and
pushl
sbb
sahf
in
xor
insb
fildll
inc
mov
or
push
inc
cs
mov
stos
sub
std
sbbl
ljmp
and
loop
clc
das
push
fimuls
iret
in
sub
jbe
adc
pop
push
ret
sub
inc
adc
leave
push
test
mov
sbb
sbb
std
mov
or
push
stos
jecxz
or
or
stos
cmpb
add
movsb
fs
adcb
inc
jmp
dec
mov
pop
xchg
sub
ja
cli
mov
push
sbb
push
gs
repnz
xor
incl
xchg
push
and
mov
test
outsb
mov
mov
ret
add
das
clc
and
push
and
sbb
jmp
xlat
in
imul
aaa
pop
fildll
div
gs
iret
mov
arpl
ja
incl
movsl
stos
int
inc
push
xor
pop
es
lret
jmp
dec
mov
imul
jg
inc
addr16
lret
mov
into
cmp
scas
pop
sbb
pop
jno
push
mov
pop
aad
addr16
ret
aad
xor
jg
ds
into
and
mov
stos
push
lods
insb
cmp
fistps
add
dec
pop
adc
add
imul
sbb
jle
sbb
sub
lcall
add
fildll
repnz
push
sub
jmp
xor
mov
es
out
push
sub
or
mov
lea
cwtl
or
cmp
mov
dec
shlb
lock
jno
shl
push
pop
outsb
push
xor
ljmp
cltd
jp
ds
and
and
push
loopne
pop
orb
in
int
mov
rcrl
daa
mov
and
lcall
jmp
outsb
pop
jb
std
dec
xor
popf
pop
gs
adc
mov
adc
mov
ja
jmp
mov
inc
push
ds
sub
ret
inc
je
dec
rolb
jmp
mov
out
xor
and
mov
and
mov
insl
xor
iret
mov
incl
subl
mov
ss
jg
lds
mov
inc
scas
mov
test
mov
rcr
stc
out
jns
or
inc
dec
mov
les
jmp
xlat
dec
movsb
mov
mov
mov
scas
inc
mov
mov
and
xor
loopne
jmp
idivl
pushl
lds
inc
addr16
test
sbb
ds
sbb
lret
push
cld
call
fisttpll
negb
je
pop
andb
or
out
cmp
clc
sub
xchg
sbb
and
mov
mov
dec
cli
rcl
push
mov
mov
mov
mov
test
pushf
inc
mov
push
jle
loope
cmpsl
mov
push
dec
and
add
jmp
xchg
clc
adc
mov
inc
stc
mov
sbb
adc
aam
loopne
leave
sbb
dec
pop
std
mov
or
in
pop
push
popa
or
in
aas
mov
pushl
sbb
les
and
dec
call
idiv
outsl
xor
jecxz
jle
sbb
adc
and
fldt
clc
push
data16
loope
cmc
leave
cmp
fiaddl
shrb
sbb
xchg
rcrb
pop
inc
enter
movsb
out
and
dec
decl
add
in
add
enter
mov
ja
outsl
fcmovbe
mov
repnz
dec
sub
aam
dec
lret
call
cmp
movsb
leave
inc
cmp
xor
ret
xchg
ljmp
rcr
fidivrs
cwtl
push
xlat
add
push
mov
mov
lods
sbbl
ret
ja
call
mov
and
pop
out
imul
ret
lcall
jg
push
adc
mov
jecxz
std
push
in
ret
insb
ret
jmp
lods
xor
ror
imul
int
add
in
outsb
insl
cs
pop
je
mov
fwait
add
mov
pushl
fisubrl
push
jle
lea
imull
pop
decl
repnz
push
xorl
sub
pop
xchg
dec
dec
loope
pop
and
mov
xor
sahf
ljmp
xor
ljmp
adc
decl
lock
push
adc
jno
jmp
mov
bound
jg
clc
mov
adc
sub
aaa
push
or
in
sbb
sarb
pop
jo
sbb
cmp
lret
cli
push
mov
sub
leave
out
movsb
sub
cld
mov
sub
jnp
mov
jnp
jne
and
jg
lret
cld
insl
pop
cmp
es
jne
mov
sub
cs
incl
push
add
mov
inc
push
sbb
xchg
mov
cmc
or
push
pop
lahf
pop
mov
jmp
lcall
aad
xchg
mov
mov
cmp
aaa
xchg
mov
or
jg
loop
push
repz
pop
icebp
pushl
pop
rcrl
cmpsl
cli
cmp
sbb
jg
aaa
mov
add
cmc
stc
push
test
xchg
xchg
add
and
pushl
jno
adc
icebp
insl
loopne
subb
fsts
mov
mov
out
dec
xor
call
aad
push
js
and
add
sub
adcl
imul
call
roll
jle
std
inc
mov
bound
repz
icebp
fwait
cmpsl
imul
adc
cwtl
clc
repnz
repnz
hlt
jmp
aaa
lret
push
fimull
test
cmp
pop
fistps
jp
idivl
mov
imul
aaa
and
jl
cmp
inc
mov
adc
pop
xor
xor
stos
fisttpl
cmp
and
dec
fistl
add
push
daa
std
ljmp
xchg
ds
jne
push
fwait
and
xor
sti
sub
cli
mov
cmp
xchg
mov
pop
jg
shrb
fisttps
fstps
adc
xor
lcall
or
push
dec
ja
cmp
cmp
and
cmp
sarl
call
sub
jmp
stos
sbb
jno
aaa
cmc
cmp
add
mov
jg
push
push
insl
push
mov
mov
test
nop
dec
dec
loope
aam
mov
sub
addr16
loope
loopne
inc
sub
pop
in
jge
test
pop
lods
sub
ja
cli
jmp
mov
orl
enter
out
adc
in
sahf
mov
add
in
ljmp
xlat
popa
sarl
mov
mov
ficomps
int
ror
sbb
cmp
lds
es
lret
mov
xchg
nop
add
jb
leave
popa
aaa
jo
push
adc
sti
and
aaa
add
gs
sti
addr16
int3
popa
push
jmp
sub
sbb
shrl
mov
and
adc
pop
mov
ficompl
repnz
xor
lea
jnp
idivl
rcll
lahf
out
sub
adc
lcall
and
std
in
pop
nop
and
mov
outsl
mov
imul
nopl
xor
push
adc
inc
cmpsl
in
dec
roll
loop
mov
mov
loopne
popf
cmpl
cld
call
je
stos
lahf
xor
sahf
ret
mov
bts
lock
lock
jg
sbb
aas
mov
xor
xchg
or
sbb
dec
ljmp
addr16
mov
addr16
decl
cwtl
xor
xor
rol
adc
pop
or
cmpsb
push
fbstp
lret
xchg
push
xchg
xor
decl
icebp
xchg
ds
and
and
call
lods
rclb
adc
mov
jmp
cmp
mov
in
mov
inc
int
xor
movsl
test
daa
sahf
stc
stos
es
fucomp
cltd
sahf
out
xor
and
mov
les
clc
inc
test
lret
repnz
in
inc
and
mov
repnz
push
xchg
push
mov
mov
pushl
cmp
xor
sub
cli
sbb
lds
pop
call
call
pop
mov
popf
mov
loope
sub
cmp
jge
jbe
fdivrp
fdivs
jecxz
jae
mov
jb
and
mov
loop
or
subb
pushl
test
jp
aas
push
pop
jg
mov
xchg
scas
mov
adc
out
test
test
sub
enter
mov
fldenv
ljmp
push
add
lods
fneni(8087
lret
out
mov
cli
sub
decl
shrl
inc
and
add
fdivrs
sarl
pushl
mov
inc
and
pop
inc
mov
lds
call
dec
mov
and
sub
stc
adc
out
jmp
dec
test
ljmp
adcb
adc
lods
mov
and
inc
incl
lods
adc
dec
push
sbb
sarb
add
sbb
cmp
movzwl
dec
ret
cltd
mov
cmp
aam
lret
add
jno
push
jne
pop
decl
les
sbb
sbb
fnstenv
push
pop
push
push
sub
stos
das
or
sub
cld
loopne
scas
push
pop
cmc
jp
stos
jno
test
dec
sar
call
rol
out
fnstcw
shr
xor
call
and
outsl
mov
xor
adc
xor
je
mov
clc
nop
cli
cli
std
push
adc
adcl
push
std
xchg
xor
mov
xor
scas
cmp
call
mov
ret
inc
int3
data16
xlat
pop
daa
mov
das
adc
mov
mov
push
xchg
mov
dec
push
imul
mov
ljmp
scas
test
in
jmp
push
mov
push
pop
pop
mov
sbb
subb
add
cmp
inc
push
popl
das
mov
sub
push
decl
push
imul
mov
mov
shrb
mov
call
int
mov
jle
push
jae
call
test
add
popf
push
ljmp
mov
push
mov
fsubl
mov
sbb
dec
push
test
xor
push
xchg
sub
shl
stos
enter
out
mov
ljmp
mov
std
xor
ljmp
xchg
xor
pop
aam
outsb
std
mov
sti
test
decl
ror
ja
lock
cmp
sti
mov
addr16
cmpsb
jmp
sub
jae
iret
or
stc
mov
mov
ret
gs
or
popl
ja
fidivrl
jbe
jbe
out
aas
mov
dec
or
mov
mov
ljmp
cmpsb
lret
stos
fwait
add
rcrl
out
sbbb
incl
xor
push
mov
dec
ss
daa
insb
xor
popf
xchg
mov
jbe
add
lcall
sbb
ljmp
inc
arpl
ja
pushl
ja
sub
mov
sub
mov
test
insb
mov
stos
jg
dec
jecxz
addr16
mov
add
loope
jbe
lock
rcrl
incl
mov
xor
pop
outsl
sub
fisttps
pop
sbb
xchg
addb
mov
out
mov
push
fdiv
cmp
mov
sbb
or
add
mov
addr16
jp
sub
decl
xchg
jb
rol
pop
xor
lods
pop
xor
jmp
dec
outsl
push
mov
sub
test
loop
sub
mov
loopne
mov
incl
lret
int3
pop
mov
inc
sahf
loopne
pop
icebp
nop
mov
push
mov
xchg
loope
pop
insb
inc
xor
popa
aad
jle
push
outsb
aad
jle
out
je
call
cld
xor
rorb
sbb
add
out
sub
fisubl
incl
bound
fldcw
test
outsb
push
inc
jbe
mov
or
out
jp
mov
xor
sti
dec
mov
test
adc
decl
ljmp
divb
test
pop
nop
push
inc
insb
mov
popf
add
pushl
pop
cltd
inc
dec
sbb
pop
sub
or
mov
imul
mov
jmp
in
jnp
and
xchg
cmp
lahf
add
cmp
mov
jmp
ja
in
mov
inc
add
mov
loopne
jmp
in
scas
sub
decb
mov
orl
sbb
ret
xchg
mov
js
arpl
push
inc
aas
repnz
sbb
repnz
mov
inc
sbb
inc
sbb
into
fsubs
dec
rclb
jg
lcall
mov
cmpsb
push
cmp
es
adc
inc
xchg
pop
hlt
in
mov
mov
cmp
mov
jns
mov
aaa
pop
int3
test
addr16
das
ljmp
adc
adc
ret
fdivs
int
cmp
push
test
inc
insl
insb
test
hlt
pop
sti
xor
or
lea
adc
lcall
loopne
push
hlt
pop
sub
outsb
mov
je
jge
pop
mov
jle
loopne
cli
jmp
andl
inc
push
lock
sub
pop
mov
loop,pn
cwtl
or
loop
jle
rcrb
push
add
pop
enter
outsl
clc
sbb
bound
lea
sbb
sti
jecxz
pop
mov
adc
mov
js
jne
jnp
cmp
inc
lahf
inc
mov
std
cli
ret
jge
inc
ss
pop
push
xor
rorl
loopne
or
nop
dec
or
sub
pop
or
pop
add
fs
lcall
arpl
outsl
push
aaa
mov
sar
call
dec
mov
fidivrl
test
pop
sub
cmp
aam
stos
pop
jge
lcall
rcll
lods
add
xchg
pop
mov
or
xchg
cs
loopne
and
xor
shlb
xor
cltd
rol
loope
loope
sbb
lcall
loopne
cmc
mov
xlat
int3
jns
cld
push
ud1
add
sub
sub
push
je
ret
push
pop
sar
pushf
and
xor
int3
xor
sbb
xchg
shl
filds
jl
and
ret
loopne
mov
lahf
sbb
xor
shr
sub
jl
sub
out
bound
call
incl
xor
mov
leave
in
stos
pop
inc
push
mov
fs
mov
inc
mov
cld
xor
lret
out
hlt
pop
jg
or
and
enter
add
leave
mov
and
or
inc
aam
incl
pushf
in
insl
scas
sbb
xchg
adcl
push
dec
cwtl
rcrb
jb
mov
mov
pop
fsubrs
sbb
out
mov
sbb
imul
ja
push
std
decl
ret
jle
push
in
fld
std
repnz
outsb
das
lret
adc
clc
and
hlt
decl
shlb
jbe
fwait
mov
test
inc
bnd
ljmp
cmc
mov
in
lock
xchg
lea
js
subb
ljmp
clc
dec
mov
xchg
mov
cmp
jl
iretw
andb
sub
js
fldt
enter
out
jl
adc
out
xchg
in
pop
mov
mov
cmpsb
and
jmp
jmp
or
imul
or
addb
bound
popa
push
mov
pusha
adc
xor
lcall
xor
outsl
rcll
xchg
sbb
lcall
stos
in
pop
jle
mov
mov
and
lcall
cli
push
sub
cmp
pusha
lock
xchg
fistpll
mov
and
push
outsl
inc
dec
into
and
add
xor
sub
pop
push
xchg
jp
add
push
les
daa
mov
popa
lods
jecxz
popf
adc
cmpsb
repnz
cs
pusha
add
jb
xchg
hlt
rorl
ljmp
movb
xchg
mov
jl
daa
and
movsl
call
push
cmp
jl
fstps
fistps
out
jecxz
loopne
or
arpl
pop
fldt
jo
cmpsl
or
das
inc
dec
add
dec
lds
cmp
das
mov
mov
or
imul
in
movsb
pop
mov
ljmp
pop
aaa
lret
sbb
push
das
pop
repnz
cmp
jns
xor
fdivr
ljmp
cmp
fwait
testb
out
fs
je
movsb
out
or
insb
test
in
fwait
xor
lret
iret
ja
inc
sbb
hlt
and
sub
xchg
scas
sti
popf
repnz
popa
gs
fdivr
decl
lock
mov
lds
fdivrp
inc
lcall
in
loopne
cwtl
repz
les
stos
xchg
jns
rcll
cmpsl
bound
add
cmp
lock
lods
daa
popa
arpl
dec
mov
pop
sbb
outsb
or
decl
and
xor
ret
std
sbb
cwtl
fcomp
jmp
mov
cld
mov
adc
incb
insl
lcall
pop
lcall
adc
inc
mov
scas
adc
out
cmpsl
cwtl
das
mov
shl
xchg
popa
out
clc
decl
scas
pushf
enter
scas
mov
jge
sub
inc
inc
outsb
ds
out
cmpsl
fisubs
push
or
lret
mov
jecxz
and
or
into
lcall
inc
sahf
xlat
jg
pushf
inc
pushf
das
xchg
mov
pushl
shll
aaa
or
test
mov
inc
hlt
ds
ljmp
xor
adc
dec
out
cmpsb
jnp
shrl
mov
push
mov
cmpsb
lret
jl
clc
aaa
mov
push
xchg
out
js
fisubs
mov
push
out
or
jmp
mov
inc
xor
mov
inc
sarl
daa
and
scas
push
movsl
sti
jge
jmp
mov
push
nop
jb
mov
insb
aad
loopne
test
lcall
fucomp
mov
mov
pop
sub
cltd
pushf
insb
insb
sub
jbe
xor
idivl
call
push
cwtl
mov
push
dec
repnz
pop
xor
movl
or
outsl
sar
adc
dec
shlb
dec
loop
lds
lods
mov
outsl
call
sbb
mov
out
mov
outsb
jmp
into
std
in
cmp
sar
jmp
aad
cmpsl
inc
into
clc
es
pop
nop
push
mov
dec
inc
mov
or
incl
jns
xlat
mov
insb
jecxz
push
xchg
in
mov
mov
clc
dec
xchg
push
das
ljmp
push
into
xchg
loopne
and
push
inc
lret
jae
leave
cmovbe
incb
cmp
idiv
decl
xchg
xor
iret
jp
cmp
or
jo
xchg
into
pushl
mov
cmp
mov
cmp
sub
cmp
fwait
cltd
mov
add
push
movsl
mov
enter
leave
xor
inc
sti
dec
fists
inc
inc
mov
pop
mov
mov
xchg
push
push
sub
fwait
add
pop
sub
aas
adc
ret
and
or
movsb
ljmp
inc
mov
cmp
ja
cmp
test
shlb
ljmp
fdivs
fildl
fucomi
jo
clc
push
iret
cwtl
mov
fdivs
incl
and
dec
into
aad
jge
mov
lcall
xor
cmpsl
test
mov
aaa
pop
pop
xchg
in
stc
pop
xorb
jnp
jl
daa
push
popa
pop
insb
jl
sub
ret
pop
ret
jmp
pop
xlat
dec
push
and
sbb
lcall
popa
shrb
jbe
fisubl
scas
jmp
pop
or
enter
add
out
clc
sbb
cli
lods
push
dec
and
insb
inc
rolb
movsl
clc
mov
jns
mov
nop
cli
mov
ja
test
pop
cld
incl
push
mov
push
dec
or
loopne
sti
scas
adc
stc
mov
push
ret
mov
stc
addl
sub
shll
and
sbb
jmp
xchg
add
inc
adc
sub
mov
mov
or
xchg
mov
jmp
mov
lcall
push
pop
les
movsb
and
in
jnp
dec
xchg
incl
sbb
or
inc
adc
mov
xor
and
fdivl
lcall
sub
jge
movsl
mov
out
fistpll
mov
sub
ffreep
mov
cltd
push
scas
mov
fwait
xchg
inc
stos
out
adc
lds
adc
jg
fmull
ljmp
jo
xchg
mov
icebp
xchg
sbb
adc
aas
pusha
loopne
pop
clc
push
inc
inc
repz
push
sarb
lock
out
sahf
sbb
sbb
lret
andl
adc
and
dec
mov
cmp
outsb
xchg
iret
dec
ficoml
inc
lock
cli
ljmp
jp
pop
sbb
mov
jmp
push
dec
or
lock
mov
fucomip
rcrl
push
in
pop
in
ja
lahf
sub
add
mov
ret
mov
pop
lds
adc
pop
jo
stos
clc
pop
into
inc
add
or
xchg
loop
push
mov
pop
aaa
cld
dec
cli
mov
testb
daa
cld
push
jl
adc
mov
dec
sub
cmc
or
movsb
aad
sub
dec
push
xchg
pusha
in
dec
mov
hlt
jmp
insl
data16
imul
xchg
jmp
add
pop
push
jmp
lea
push
call
test
bound
push
mov
and
sar
pushl
ss
mov
sti
mov
sahf
outsb
xchg
subl
dec
jecxz
fcomip
cmp
ficoml
lods
clc
std
jp
mov
xchg
inc
aam
pop
and
mov
leave
movsl
add
dec
pop
cmp
fistps
xor
das
lods
mov
mov
xor
or
jl
jg
sti
gs
push
dec
loope
mulb
or
adc
adc
add
outsb
hlt
out
sub
inc
incl
sub
outsl
inc
loopne
icebp
nop
mov
in
adc
inc
je
lcall
sub
loopne,pt
arpl
inc
lea
popf
add
dec
pop
jmpw
decl
lds
les
lea
sub
jge
and
decl
lea
loope
stc
xor
cmpsl
nop
in
outsb
jne
pop
or
sub
rclb
call
dec
into
cmp
mulb
daa
push
into
push
dec
roll
fucomp
pushf
push
stc
xchg
shlb
mov
jbe
adc
push
cmp
call
pusha
or
gs
inc
icebp
add
call
lahf
punpckldq
sbb
pusha
nop
subl
jmp
pop
push
lods
push
jl
pop
sti
jecxz
sbb
dec
lcall
lret
xor
cmp
mov
sbb
cs
outsl
or
and
pop
push
inc
dec
sub
and
or
sarl
sti
fs
loopne
mov
bound
or
jbe
inc
in
repnz
jmp
call
mov
pop
loopne
jmp
scas
lock
jae
daa
idivl
cmp
mov
and
jne
jmp
inc
pop
dec
push
dec
cmpsb
lahf
sbb
insb
out
inc
ret
add
movsl
icebp
cli
ds
jns
mov
xor
pushl
pop
adc
shll
jo
mov
imul
pop
dec
cltd
fsts
cs
xchg
imul
decl
sbb
mov
fiadds
movb
insl
push
sbb
lock
pushl
jo
pminub
or
pop
sub
out
lock
mov
jae
ljmp
loope
and
inc
pop
testb
cmc
xorb
test
incl
out
inc
fistl
sahf
xor
aaa
pop
adc
mov
and
cmp
pushl
lret
fs
dec
sbb
out
call
jle
int3
mov
cs
scas
xchg
dec
adc
or
pop
daa
add
mov
mov
shll
insb
adc
outsl
adc
aam
mov
and
cmpsl
dec
inc
cltd
in
imul
lods
shl
idiv
dec
push
mov
aad
loopne
out
mov
enter
jo
ljmp
xchg
test
jnp
lcall
push
scas
dec
pop
pop
adcl
popa
xchg
in
scas
shlb
jg
ljmp
pop
and
mov
sub
lods
notl
insb
into
test
decl
dec
push
lahf
ret
push
pop
cmp
add
jg
scas
or
lods
sbb
leave
push
or
inc
fistpll
iret
out
adc
ss
fisttps
insb
aaa
sub
jne
stos
add
testl
mov
mov
sarl
enter
fcmovnbe
fbld
cwtl
repnz
lock
repz
push
movsb
aas
cs
xchg
js
xchg
test
hlt
in
std
popa
pop
cmc
sbb
dec
mov
ret
popf
xchg
mov
add
mov
fcmovb
fstl
icebp
jg
jecxz
xor
add
jae
in
ja
jecxz
and
mov
fdivs
dec
fisubs
add
pushf
push
mov
pushf
pop
mov
fdivrl
in
push
pop
sub
call
decl
dec
lcall
lods
ljmp
sti
sbb
jge
push
lea
jmp
mov
clc
xchg
dec
aaa
orb
jle
push
leave
movsb
insb
sub
std
in
movsb
inc
and
push
lret
scas
mov
ds
sub
lcall
inc
ja
push
std
mov
mov
sbb
ljmp
out
test
das
fidivs
cmova
daa
pop
cmp
decl
ret
aad
rorb
imul
arpl
imul
mov
das
jle
or
push
cmp
push
mov
dec
call
xchg
in
test
mov
push
jmp
dec
je
pop
stos
aad
add
add
sub
lods
add
mov
cmp
push
jp
cmp
sbb
mov
cli
xchg
insb
push
adc
jg
jmp
cmpsl
cld
xor
imul
pushf
xor
addr16
fldcw
cmpsb
mov
push
mov
xchg
test
adc
cmp
sbbb
into
xchg
dec
cld
jmp
fcmovnbe
in
mov
lock
jg
into
aam
clc
push
adc
hlt
inc
mov
push
gs
xor
mov
js
jmp
xor
sbb
sbb
fiaddl
pusha
dec
movl
dec
or
add
inc
inc
in
cmpb
pop
push
mov
dec
xchg
out
inc
sbb
lret
push
adc
mov
addr16
mov
fmull
push
loop
rcrl
pop
jp
jl
and
daa
repz
cli
cmpsl
leave
scas
or
pushl
call
xchg
pop
cmp
xor
ret
adc
add
data16
loope
into
call
call
sbb
cmp
pop
sbb
dec
xchg
push
lods
sbb
ljmp
ss
fldt
andl
fsubs
adc
lcall
pop
adc
js
or
lret
pusha
cld
nop
mov
std
mov
scas
cmpsb
bound
mov
cmp
dec
repnz
stos
out
dec
je
pop
loopne
pushl
cmp
stc
sbb
inc
or
imul
mov
mov
ret
add
mov
push
add
arpl
frstor
imul
mov
cmc
pushf
mov
lds
into
nop
pop
cld
decl
popf
sub
jo
inc
in
sbb
outsl
and
es
int3
pop
xchg
aas
jecxz
and
scas
pop
inc
inc
sbb
xchg
mov
ret
xchg
ss
mov
out
xchg
cwtl
pop
xor
or
mov
jge
iret
mov
and
ret
pushl
in
outsl
stos
xor
mov
daa
sbb
aam
das
out
pop
mov
lods
mov
or
test
setnp
dec
cmpsl
call
out
in
pop
mov
decl
or
jno
addr16
subl
mov
nop
mov
fwait
call
ror
add
lret
and
push
cmp
jns
dec
cmp
lock
and
int
sbb
lea
dec
sbb
sub
loopne
inc
cmc
pop
shlb
mov
mov
cld
aaa
sbb
aam
inc
lret
or
dec
mov
mov
iret
lret
aas
fs
cmp
sub
ss
mov
mov
mov
loop
cmp
mov
cwtl
or
call
cld
and
icebp
adc
in
jp
in
enter
cmp
push
imul
mov
mov
cltd
pop
gs
push
fwait
mov
test
mov
in
sbb
push
sub
lahf
int
aad
test
dec
cli
jbe
call
stos
jg
call
xor
andl
aam
mov
loope
inc
sub
sbb
push
inc
push
jno
sbb
jg
ds
pop
ffreep
xor
push
xchg
fsubr
mov
adc
imul
push
inc
push
or
push
cltd
and
push
xchg
call
and
cmp
es
sbb
push
cmp
lds
push
inc
push
mov
xchg
call
or
push
pop
dec
orb
rorl
mov
stos
icebp
pop
les
jmp
nop
sbb
je
movb
cld
inc
inc
sub
insl
jae
fs
xlat
rorb
stos
fcomip
add
bound
dec
out
dec
cmp
fdivr
lcall
bound
dec
inc
xor
mov
int3
sbb
push
cli
call
sbb
cli
lea
push
shlb
pop
lcall
int3
push
cmp
xchg
mov
shrb
jnp
and
sbb
or
mull
dec
loop
fwait
mov
adc
pop
push
push
dec
xchg
cmp
jg
mov
ds
mov
mov
fisubrl
push
pop
xor
addr16
sbb
or
pop
fdivrs
outsb
or
in
cli
jge
testl
cwtl
mov
insl
mov
icebp
into
les
xor
sub
sti
jmp
pop
dec
repnz
xchg
mov
xchg
sub
stc
inc
movsl
lock
xchg
out
mov
ljmp
pushf
jle
test
stos
ss
je
mov
das
xchg
cltd
test
data16
adc
dec
les
imul
filds
jecxz
stos
insb
dec
mov
pop
mov
mov
outsl
decb
out
loope
cmp
jne
push
mov
fdivp
popa
stos
lods
sbb
repz
mov
ljmp
repz
popa
je
adc
xor
mov
cmp
add
andl
nop
ljmp
mov
xchg
in
or
pop
mov
dec
fsts
call
jns
js
subb
loope
jmp
call
cmc
ss
pop
add
aaa
push
sbb
mov
mov
outsl
nop
test
dec
cmp
jg
inc
add
jns
xchg
fdivrs
gs
and
and
lret
cmc
insl
sar
decl
testb
inc
in
rorl
mov
loop
sahf
cmpsb
imul
xchg
add
adc
sbb
cmp
cltd
movsl
movsl
mov
push
mov
lcall
cmp
and
notl
xchg
sbb
mov
add
lcall
and
div
mov
scas
stos
mov
test
xchg
test
outsl
xchg
xchg
and
ljmp
call
cmp
jecxz,pn
xlat
sub
cli
shrb
xor
out
lcall
xor
xchg
push
push
push
or
aaa
xchg
add
sub
sahf
jns
decl
push
sub
pop
push
imul
xchg
lret
repz
outsl
out
into
mulb
hlt
ljmp
push
mov
cltd
dec
cwtl
xor
inc
jle,pt
mov
enter
fsubl
jecxz
test
fwait
andnps
call
jg
inc
dec
movsb
shrl
xor
ss
mov
or
inc
sub
pop
hlt
test
fstpl
mov
mov
jmp
pop
cltd
idivb
push
fstl
rorb
daa
or
lods
push
jnp
mov
lcall
add
push
decb
or
jg
hlt
push
mov
je
sbb
cmpsl
cmp
inc
mov
or
xlat
push
dec
jmp
inc
and
pop
icebp
inc
andb
sub
pusha
mov
mov
pop
lods
lea
jmp
repnz
inc
lahf
rcrb
into
loope
pushl
movsb
cwtl
cmp
stc
jb
add
or
mull
scas
xchg
lea
dec
pop
pop
sub
pop
pop
clc
add
clc
in
les
inc
push
pusha
insl
leave
push
mov
sarb
lcall
popa
pusha
and
or
out
aam
cmp
movsb
cmc
pushl
xor
xor
jo
push
cs
pop
jo
jns
mov
xchg
rcll
jns
cwtl
dec
pop
sarl
jbe
loopne
ljmp
inc
push
xchg
push
mov
inc
push
outsl
jg
fwait
decl
jp
dec
push
and
stos
lret
sbb
xchg
and
ljmp
lea
lods
sbb
das
movsb
leave
bound
add
stc
cs
ljmp
mov
in
ret
es
push
xchg
inc
push
es
xchg
mov
sar
js
pop
aad
or
dec
push
push
mov
adc
sub
and
scas
add
std
aas
insl
mov
int3
xor
std
stc
in
out
repnz
adcb
call
lods
cwtl
fstpt
jecxz
cmp
cmp
xor
mov
dec
adc
and
xor
sbb
data16
mov
add
mov
inc
add
jnp
or
mov
lds
sar
ljmp
mov
imul
mov
cmp
jmp
mov
loop
pop
dec
or
incl
push
scas
in
inc
pop
dec
mov
movsl
push
pushl
test
pop
sbb
or
pushf
aaa
xchg
pop
mov
repnz
call
sti
mov
sarb
aaa
jo
xchg
mov
jl
cmp
push
ljmp
cmp
cmpsb
icebp
cmp
push
xchg
or
jb
mov
xchg
pop
xchg
js
js
div
stos
loop
rorb
xchg
outsb
pushl
faddl
adc
sbb
fcompl
mov
out
jg
xchg
out
jecxz
ljmp
push
jb
clc
adc
cli
push
xchg
aad
xchg
ffree
fnsave
mov
hlt
jle
inc
test
or
lods
inc
xchg
movsl
cmpsl
test
jg
mov
ja
xchg
das
out
insb
cmp
jl
ljmp
mov
mov
cltd
das
repnz
add
or
mov
fstps
mov
mov
jmp
push
inc
sbb
cs
inc
jo
cmp
cmp
jae
pop
add
shlb
mov
pop
out
push
ljmp
dec
mov
outsl
pushf
and
fmul
dec
xchg
insl
jne
fisubl
out
pushl
push
pushf
sbb
adc
lods
fidivs
xlat
decb
and
adc
sub
call
xchg
or
xor
incb
and
and
outsl
mov
cli
aas
and
inc
cld
dec
mov
test
sub
std
stos
mov
dec
sub
shll
push
sub
push
sub
sub
cmp
inc
mov
mov
fstpt
imull
mov
movsl
pop
mov
xchg
push
jae
or
xor
mov
out
cwtl
push
xchg
xlat
std
or
or
cmp
in
add
lret
and
jmp
mov
fldl
and
aad
mov
push
js
jg
imul
sar
cmp
adc
xor
and
sub
cs
inc
mov
subb
push
cmpsl
mov
repnz
push
test
sti
ljmp
test
sub
pop
fs
fucomp
addr16
popf
inc
fsubrs
sub
call
lock
mov
aas
rcll
fs
mov
lods
stos
jp,pt
mov
push
push
cmc
cli
das
sar
cmpsb
xorb
int3
pop
je
cmc
mov
add
ud0
out
inc
imulb
test
int
std
test
ss
sub
js
or
jmp
nop
out
daa
mov
mov
cs
adc
cmp
loopne
mov
call
cmp
xor
ljmp
or
sbb
pop
ret
insb
xchg
in
or
dec
repz
push
mov
sbb
decl
sbb
xor
popa
jns
push
lods
and
leave
jg
mov
push
leave
pushf
xchg
and
fisttps
inc
mov
fmuls
icebp
ds
inc
bound
xchg
repz
call
xchg
stc
adc
nop
mov
jns
lret
es
mov
pop
cli
ja
sub
clc
cmpsb
dec
add
dec
xchg
subb
push
jne
jg
fisubrl
arpl
rcrb
fisubl
inc
sarb
dec
imul
incl
xor
sub
jecxz
and
cltd
fs
int
in
push
mov
ljmp
ror
fimuls
sub
push
inc
pop
fwait
loop
xchg
aad
dec
in
or
adc
stos
jns
sahf
cmp
cmc
shrb
fisubrl
notl
dec
bts
cmpsb
sbb
xchg
mov
cld
jmp
xchg
lock
test
and
in
and
dec
stc
scas
nop
es
pusha
pop
js
sbb
push
clc
mov
xchg
aaa
nop
pop
scas
adc
mov
loop
incl
mov
cmp
pushf
pop
clc
mov
mov
repz
out
outsl
cli
call
adc
push
jno
dec
loopne
icebp
test
iret
notb
mov
fiadds
ret
bnd
and
rorb
push
mov
inc
mov
push
sbb
js
and
xchg
pop
dec
sub
lret
lret
bound
dec
arpl
fisttps
movsb
mov
into
sub
jnp
pop
outsb
mov
rcll
cli
int3
xchg
ds
adc
fsubrs
push
inc
xor
mov
lcall
lds
in
mov
fwait
xchg
jne
aaa
pop
mov
or
js
leave
stc
add
imul
mov
pushf
adcl
dec
push
inc
ja
cmpsl
test
cwtl
in
dec
mov
pop
mov
jecxz
pop
fsubs
pushl
add
stos
mov
hlt
orb
int
dec
adc
movsb
addl
pop
lock
push
inc
mov
lret
ljmp
and
ljmp
push
mov
inc
dec
icebp
mov
lock
movsb
in
mov
mov
add
cmp
outsl
pop
enter
cmpsb
sub
jae
movsb
lret
cmp
scas
mov
lcall
ljmp
add
lahf
test
push
shl
popa
xlat
daa
jo
fdiv
idivl
mov
jg
test
popf
xchg
mov
icebp
iret
or
pop
lret
jecxz
mov
cwtl
test
adc
daa
jno
in
subl
aaa
dec
jo
lea
mov
fisubl
mov
jl
mov
repz
mov
stos
inc
sbb
jle
lret
push
in
cmp
push
mov
je
ss
call
and
mov
cmp
dec
dec
in
in
outsl
fdivrp
mov
ret
add
clc
lret
add
pop
out
xchg
pop
adc
inc
fs
fcmove
mov
jg
mov
loop
mov
sbb
icebp
out
hlt
sbb
mov
shll
xchg
divb
or
stos
scas
popl
arpl
fdivr
jg
inc
stos
bswap
outsb
inc
sbb
lods
out
lods
ljmp
lea
xor
test
mov
out
cld
jmp
dec
pushf
dec
xor
jnp
ret
mov
fisttps
insb
jmp
inc
hlt
jg
aas
pusha
sbb
cmp
cmp
xchg
jp
out
and
paddsb
jmp
xor
pop
ficoml
ds
jnp
cwtl
add
mov
out
mov
imulb
fisubl
decl
cmp
ss
jle
mov
mov
cmp
jp
in
mov
jb
jmp
decl
or
xchg
xor
out
cmp
mov
std
add
sub
decl
out
adc
sub
mov
and
inc
arpl
adc
mov
test
xor
jnp
xchg
jae
lods
dec
adc
ss
push
xor
push
cmp
cmp
and
lods
lcall
dec
jae
jge,pn
mov
xchg
sahf
mov
xchg
mov
scas
xchg
cmp
fisubrs
stos
mov
push
mov
mov
std
push
std
xchg
mov
mov
movsl
rorb
jge
sub
out
shl
ud0
std
push
mov
pushf
test
in
pushf
mov
jg
cld
mov
pop
lods
decl
loopne
rol
push
push
adc
inc
daa
ds
roll
ret
das
push
fs
in
mov
sub
or
inc
mov
xchg
jecxz
add
xchg
fcos
das
pop
dec
mov
mov
push
mov
ret
ss
mov
dec
ss
mov
adc
push
aaa
jl
mov
stos
mov
pop
jbe
ds
shrb
xchg
mov
repz
daa
insb
ficoml
ret
flds
cwtl
adc
inc
jmp
imul
cmp
scas
mov
movsl
inc
dec
dec
add
mov
sbb
ds
gs
cli
xor
mov
ljmp
mov
pushf
and
scas
arpl
xor
jg
mov
cltd
mov
daa
pop
cmp
push
icebp
ljmp
and
mov
push
pop
addr16
push
decl
pushl
inc
pusha
xchg
nop
iret
add
jne,pn
pop
or
pusha
movb
test
xchg
dec
in
xor
in
xlat
dec
fwait
leave
dec
stos
mov
or
mov
shlb
rorb
sahf
xor
mov
lret
jmp
push
int
jae
inc
sub
jb
mov
mov
mov
rorb
pop
loopne
out
adc
aad
ds
mov
cmp
nop
xchg
sbb
repnz
push
cmp
pop
leave
mov
pushl
or
adc
sub
pusha
cli
lds
std
mov
je
mov
call
xchg
sub
cmpsb
sbb
sbb
ja
les
inc
nop
and
mov
xchg
and
push
xchg
push
lcall
ret
sbb
call
das
data16
gs
mov
xchg
or
xchg
std
popf
push
jb
and
inc
clc
inc
outsl
clc
lcall
inc
or
mov
cmp
inc
push
pop
adc
mov
xlat
dec
rclb
pop
cmc
and
dec
and
sbb
cmp
xor
mov
jbe
fs
imul
movsb
ficoms
mov
xchg
sub
pop
fildl
xor
cli
aaa
js
mov
xor
pop
cmpb
in
ljmp
in
fistpl
lds
push
pop
or
dec
pusha
mov
or
jno
cwtl
pop
les
repz
jmp
pop
fiaddl
sahf
test
pop
adcl
cmpsl
js
ss
inc
nop
nop
stc
outsl
cli
jmp
ds
add
jmp
test
lods
cmp
inc
test
push
ja
fidivl
jg
jle
adc
cmove
in
lahf
pushf
jo
cli
iret
jb
scas
out
insl
or
jns
incb
jge
pop
daa
loopne
cmpsl
or
xchg
js
xor
es
pop
mov
jle
iret
mov
dec
and
call
gs
dec
fwait
mov
sub
jle
test
or
mov
shr
popa
mov
pop
push
loopne
lcall
inc
mov
ja
call
sub
ret
rolb
sahf
mov
lret
test
jl
sub
pop
or
adc
dec
dec
andb
je
inc
shlb
call
data16
into
push
ds
test
jl
inc
adc
lcall
icebp
lcall
xor
jns
sahf
inc
lcall
push
js
push
adc
adc
pop
cwtl
loopne
minps
stos
fildll
push
test
icebp
ja
dec
icebp
ljmp
mov
jnp
adc
pop
in
push
and
lret
popa
cmp
lds
imul
sbb
rorl
cld
sub
dec
cli
out
lahf
dec
call
cs
insb
push
imul
enter
loope
jno
push
js
add
push
ljmp
popf
pop
pop
insb
xchg
lret
mov
mov
incl
xor
mov
add
or
scas
ss
jg
jp
mov
jns
jbe
jl
adc
xchg
outsl
add
addr16
int3
stc
add
xchg
push
call
fiaddl
inc
jnp
popf
xchg
xchg
out
fs
dec
fbstp
popf
imul
pop
lock
call
mov
mov
jmp
pop
shlb
mov
pop
mov
jnp
lret
jg
jmp
xchg
ljmp
jae
mov
hlt
sahf
mov
outsl
mov
divb
lret
std
inc
sbb
sbbl
jle
std
pop
xchg
lret
lahf
adcb
lcall
and
roll
push
pop
cmpl
or
out
fs
jecxz
imul
mov
pop
mov
and
aaa
jbe
xchg
cs
or
add
ja
adc
mov
fistpll
call
insl
push
mov
and
ljmp
xor
sub
rol
dec
test
in
movsl
rcl
push
jg
inc
testb
cmp
dec
std
or
test
movsb
adc
incl
pmulhuw
mov
sbb
icebp
push
sbb
jmp
mov
inc
lcall
cmp
pop
push
xor
rolb
ljmp
dec
cmp
sub
pop
das
sbb
aas
fnstcw
jg
arpl
add
jmp
pop
or
sahf
leave
jp
xchg
push
loope
rorb
or
xchg
cmp
stc
cmpsb
cmp
mov
mov
cmc
pop
jbe
arpl
ljmp
call
pop
bswap
sti
add
scas
leave
les
xchg
in
jg
ljmp
lcall
xchg
cmp
or
das
lea
mov
adc
movsl
inc
test
addr16
jle
rorb
int3
dec
mov
push
adc
js
das
lcall
cmpsl
sbb
flds
out
sbb
cwtl
mov
popa
popf
xor
ds
pushf
jae
mov
jne
sub
popf
mov
shlb
inc
or
fimull
or
aam
mov
int
and
repz
and
push
jmp
in
and
xchg
mov
outsb
mov
stc
clc
decl
loopne
mov
loopne
inc
loopne
repnz
std
adc
mov
xchg
ss
ljmp
or
les
mov
shl
das
inc
jnp
mov
cmp
incb
mov
jmp
xor
pushf
mov
push
lahf
push
ficompl
jl
lds
ds
fwait
sub
outsb
sbb
aas
mov
lahf
xorl
and
cltd
jle
jg
int
jno
pop
dec
sar
jg
test
add
lcall
add
mov
dec
shl
push
imul
out
call
inc
push
in
pushf
ficoms
mov
jns
fiaddl
cmp
sub
ljmp
xorl
fwait
mov
sub
loope
ljmp
adc
pop
push
mov
cmc
decl
clc
lds
mov
push
bound
mov
lcall
sub
cmp
sarb
or
decl
sub
inc
stos
popf
inc
dec
lock
mov
push
inc
xchg
aas
sbb
icebp
push
ds
xchg
fcomip
inc
loopne
loopne
and
scas
frstor
jmp
lds
adc
and
lea
sbb
xchg
xchg
test
mov
decl
sub
xchg
inc
fimuls
and
dec
inc
jg
ficompl
in
pop
adc
decl
js
add
xchg
or
les
inc
orb
push
jnp
enter
je
mov
mov
xor
bound
nop
pop
lcall
pop
loopne
adc
pushf
orl
sbb
fnstenv
cltd
incl
fdivrl
into
movsb
test
movsl
in
mov
js
sahf
push
ds
lock
and
add
out
xchg
cmp
sbb
fdivr
jmp
push
punpckhdq
fmulp
xchg
data16
push
stos
mov
mov
xchg
decl
cmpsb
dec
or
cmc
mov
mov
test
jmp
loope
xchg
mov
push
xor
jg
or
pop
shlb
mov
pop
icebp
jmp
scas
mov
dec
cwtl
idivb
lret
dec
jns
inc
cmp
jb,pt
hlt
jl
fistpl
add
mov
sub
cmp
cmc
dec
xchg
stos
sub
inc
jae
psadbw
call
adc
push
or
and
inc
push
sub
or
mov
mov
xor
xchg
ret
icebp
cld
fisubs
int
stos
inc
cmp
fisttpll
jae
mov
leave
xor
mov
xor
push
pop
ljmp
pusha
inc
out
stos
jae
ljmp
popa
lock
pop
frstor
mov
aas
mov
cld
scas
pop
sub
mov
ss
aas
gs
mov
decl
cmc
mov
jg
jge
repnz
xor
inc
inc
shlb
dec
out
lcall
ljmp
cmp
push
xchg
dec
mov
mov
pop
add
fsubp
enter
fcoms
ret
sub
decl
inc
adc
arpl
in
test
push
int
in
sub
fsts
in
dec
clc
or
lcall
sbb
cmp
mov
inc
fstp
cmp
test
adcb
aam
push
mov
dec
xor
push
popf
inc
mov
daa
stos
dec
decl
pop
jns
in
iret
pop
mov
xchg
mov
les
push
out
vpaddw
push
je
aam
insb
fistpl
test
stos
imul
pop
stc
hlt
dec
cld
adc
enter
or
push
stos
data16
scas
in
stos
sbb
loop
aas
push
loopew
dec
cmp
dec
icebp
test
xchg
mov
out
fwait
cmpsl
addl
fldcw
hlt
je
loope
in
lret
pushl
mov
jp
pop
rcrl
xchg
les
jmp
mov
fnstcw
mov
loopne
mov
cld
orl
int3
jmp
sub
sub
sub
or
decl
jge
stos
scas
adc
or
leave
xor
mov
jle
add
ljmp
jnp
xorl
call
int
mov
xchg
sbb
mov
mov
xchg
js
inc
outsl
xor
pop
sbb
rorb
movsb
in
es
fldenv
movsb
nop
setp
or
dec
jnp
pop
movb
push
out
cs
pushl
roll
stc
scas
cmp
mov
into
lret
and
mov
and
inc
lock
sbb
hlt
xchg
das
inc
les
and
mov
lcall
cmp
faddl
mov
mov
mov
mov
cs
sub
jg
dec
pop
mov
leave
out
rcll
push
cwtl
data16
fdivrl
enter
cmp
loop
push
xor
nop
jg
cmc
dec
clc
mov
mov
dec
repz
dec
xchg
jle
lods
xchg
inc
adc
cld
xor
and
xchg
or
push
into
les
out
jns
sbb
xor
inc
xlat
pop
inc
fisubrs
inc
pop
add
ss
cld
call
arpl
pop
imul
mov
mov
mov
fcmovbe
stc
decl
jo
inc
inc
sbb
shr
popf
mov
sub
lret
cmp
mov
jge
xchg
pushf
mov
sub
xor
out
xor
nop
jmp
pushf
jmp
or
call
pusha
add
mov
mov
les
outsb
cld
test
sahf
stos
push
ret
stos
pusha
jnp
jmp
lret
xchg
out
rcll
adc
ljmp
out
ret
fwait
cmp
push
xchg
mov
inc
ljmp
add
pushl
pop
jge
sti
cmp
add
cli
push
popaw
mov
mov
adc
aas
jg
or
lock
or
into
aad
push
loopne
mov
adc
stos
imul
xor
xchg
roll
sbb
movsl
in
std
shl
cmpsl
mov
stc
incl
das
pop
inc
xchg
jne
mov
in
adc
fdivrl
lret
mov
add
pop
lock
cmp
mov
std
aam
fldl
push
jno
jmp
js
hlt
ret
mov
dec
es
roll
aaa
fdivr
jg
imulb
mov
lcall
out
jmp
adc
testl
jmp
inc
inc
sub
mov
std
mov
mov
or
mov
jge
xchg
push
test
add
stos
gs
cld
pop
sub
orl
cwtl
shll
mov
and
mov
jl
xor
add
mov
cmp
inc
add
bound
cltd
mov
stc
push
mov
rorl
inc
jge
xchg
mov
cltd
pushf
and
out
add
fcomp
mov
ljmp
fisubl
gs
int3
fisubs
jb
xchg
xchg
movsb
bound
cmp
add
fmul
popf
mov
and
fs
lods
sti
inc
in
stos
ret
test
mov
add
xchg
lock
in
xor
repnz
loopne
mov
inc
icebp
jecxz
dec
gs
mov
mov
lcall
pop
lcall
xchg
in
outsb
or
adc
iret
call
adc
je
pop
into
cwtl
test
xchg
les
mov
xchg
call
push
cmc
call
sbb
leave
das
mov
call
hlt
call
repz
push
xor
add
adc
jg
and
in
mov
popl
shll
popf
add
xchg
or
icebp
test
clc
jns
movsl
mov
pop
mov
daa
adc
ljmp
xchg
stos
xchg
and
in
int3
cmp
fstl
incl
pop
sbb
push
andb
test
inc
sbb
cmp
jl
push
cmp
add
aam
filds
dec
adc
imul
cmp
popa
outsb
addr16
and
mov
mov
jecxz
push
gs
outsl
push
arpl
pop
or
jecxz
mov
inc
adcb
xchg
inc
fnsave
in
push
xchg
push
jae
xor
xchg
dec
mov
xchg
jo
xor
cmp
dec
loop
xor
lcall
and
add
out
lea
je
xchg
sbb
push
push
inc
sbb
dec
ret
bound
sbb
ret
pop
push
mov
jae
popa
xor
ja
xchg
pop
push
lds
imul
fildl
mov
add
mov
or
or
or
push
xchg
mov
and
addl
push
es
add
aad
pxor
adc
sub
or
cmpsl
adc
push
fbld
ret
ja
mov
shlb
jecxz
popa
inc
or
pop
adc
and
pop
push
add
xor
inc
mov
xchg
iret
or
mov
or
inc
test
cmp
mov
pop
adc
or
mov
imul
les
pop
add
cmp
mov
add
push
jecxz
mov
xorl
dec
aam
mov
add
nop
and
mov
dec
je
jo
mov
rcll
jb
and
cmp
das
rorb
cmp
inc
outsl
outsb
imul
jne
mov
ret
or
mov
or
mov
loope
insl
mov
mov
movsl
and
lds
sbb
add
xchg
out
sub
pop
popa
les
inc
xchg
dec
pop
add
cmp
adc
xlat
jae
adc
push
sub
dec
add
daa
adc
and
adc
mov
roll
inc
test
inc
mov
mov
adc
sub
inc
test
ljmp
or
add
adc
fstps
adc
sbb
adcb
mov
das
mov
or
jmp
inc
mov
or
mov
test
and
add
rcll
push
adc
aaa
call
lea
aas
testl
xchg
stc
sti
pop
rolb
fsubrl
jae
jbe
inc
sub
push
dec
add
add
incl
call
loopne
popl
add
sbb
ficomps
daa
incb
add
insl
imul
sbb
idivb
lea
pop
daa
adc
outsb
xor
or
push
inc
jnp
cmp
shl
je,pn
js
shlb
mov
ss
xor
add
push
sti
sahf
shlb
outsb
fs
je
fsubs
imul
xchg
xor
jle
ds
mov
addb
cmp
jnp
pop
in
sub
push
inc
inc
push
inc
xor
inc
gs
sbb
repnz
lock
push
sub
sbb
fsubrl
fisubrs
scas
adc
dec
aaa
add
xchg
and
add
add
incl
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
adc
add
add
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
inc
adc
add
add
add
add
add
call
jnp
mov
cmp
inc
xchg
lret
adc
xchg
add
jnp
mov
cmp
inc
xchg
lret
adc
xchg
add
jnp
mov
cmp
inc
xchg
lret
adc
xchg
add
mov
test
add
stc
out
fisttpll
fcomip
mov
xchg
lock
pop
outsl
aam
add
sbb
push
mov
aam
ret
pop
aaa
rclb
rcl
xchg
adc
sbb
ja
mov
test
stos
add
movl
popf
out
mov
rcr
out
fcomps
subl
sbb
dec
shlb
mov
in
adc
mov
xor
adc
loopne
and
aaa
dec
jecxz
mov
pop
sbb
and
stos
addr16
movsl
aam
cmp
in
jp
leave
test
fcoml
sub
je
or
es
sbbb
out
je
push
xor
movsl
sub
arpl
pushf
scas
mov
lds
adc
arpl
popf
icebp
adc
jge
mov
jecxz
test
outsb
mov
ss
jne
xor
jg
sub
out
cli
aaa
mov
addr16
das
jne
and
lea
xor
int3
push
xchg
jbe
rol
sub
jns
out
repz
addb
pop
cltd
inc
cli
ret
loopne
call
dec
add
mov
clc
inc
loopne
stos
add
addb
movsl
mov
cmp
inc
adc
pop
dec
jno
rol
andl
ret
xor
pop
or
lods
test
push
add
pop
push
in
sbb
loopne
lahf
flds
jmp
dec
inc
mov
dec
pop
test
push
sbb
mov
xchg
adc
xlat
add
mov
nop
xchg
cmp
shll
inc
push
insb
jg
jmp
xor
outsb
std
or
inc
mov
repnz
cld
mov
xchg
xor
jb
dec
adc
cltd
dec
pop
aaa
dec
rol
push
xchg
xlat
out
and
dec
in
fsts
imul
aad
shrl
dec
sub
sbb
jg
mov
dec
out
inc
lods
xchg
ficompl
mov
push
mov
lods
mov
mov
es
sbb
inc
test
pop
hlt
call
clc
and
pop
jge
mov
hlt
mov
dec
add
mov
jbe
mov
or
stos
loop
std
fimull
jno
add
and
mov
stc
pop
mov
mov
fdivrl
jge
push
ds
stos
push
dec
scas
insl
sahf
insb
pushf
pop
pop
sub
and
scas
mov
icebp
inc
addr16
inc
scas
aaa
fwait
pop
mov
jns
pop
pushf
movsb
push
push
sbb
push
stos
pop
dec
fdivr
cld
mov
sti
inc
cmp
rcrb
popa
jp
mov
lds
add
in
loop
and
and
fdiv
outsb
fcmovnbe
xchg
stos
outsb
dec
jns
xchg
push
dec
push
clc
jg
pusha
adc
imul
ljmp
inc
in
cmpsb
in
mov
mov
xchg
dec
push
scas
loop
lret
ja
or
stos
call
sti
pop
mov
sub
fdivrl
enter
push
jae
and
lahf
repz
mov
fstps
pop
outsb
stos
inc
cld
outsl
movsl
sbb
mov
addr16
add
in
mov
pop
movsl
mov
mov
cmpsl
paddq
aaa
dec
lahf
mov
jmp
pop
ret
mov
ds
sub
cltd
mov
test
js
xchg
mov
lahf
adc
mov
pop
pop
or
pop
dec
sarl
les
outsb
jbe
testl
test
mov
mov
mov
imul
jmp
jb,pt
addr16
dec
fidivl
in
or
cld
nop
fidivl
lods
lcall
ds
sub
pop
adc
push
sub
adc
and
inc
js
lahf
call
lcall
ja
pushf
sub
insb
mov
mov
sbb
cmp
add
orb
inc
xchg
inc
pop
std
mov
pop
mov
xchg
out
mov
inc
jg
shll
ret
pop
sbb
in
fildl
mov
mov
mov
out
xor
std
xor
in
test
sahf
push
and
pop
push
xor
and
mov
mov
out
jg
mov
add
xchg
push
je
pop
es
push
dec
sbbl
or
test
aam
pop
adc
arpl
je
aas
inc
lea
das
xchg
jg
sub
int
fwait
stos
cmpb
fildl
add
push
aas
add
add
int
aas
add
add
add
push
aas
add
add
add
push
aas
add
push
aas
add
push
aas
add
pop
aas
add
pop
aas
add
pop
aas
add
add
add
aas
add
add
add
pop
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
