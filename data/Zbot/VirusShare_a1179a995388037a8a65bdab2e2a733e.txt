pushl
cld
push
add
loopne
add
xor
sub
and
add
jg
mov
pop
clc
sbb
pusha
jnp
push
push
adc
into
adc
fstpl
jmp
lea
cltd
add
xchg
mov
add
mov
add
ror
jno
pop
or
sbb
rolb
xchg
and
mov
add
add
lcall
add
mov
add
and
add
or
or
pushl
mov
sti
xchg
mov
and
push
add
pusha
je
pop
inc
mov
push
add
add
mov
pop
jae
cli
add
lcall
cwtl
or
add
inc
push
add
sbb
add
adc
movsl
add
add
jg
add
xchg
add
fldl
sbb
mov
add
scas
insl
mov
push
push
cmp
dec
xchg
sti
call
movsl
popl
xchg
lods
mov
cmc
jo
xchg
fsubrs
dec
mov
mov
mov
cmc
das
jae
pop
or
add
push
call
mov
pushf
lods
add
mov
and
adc
pop
jmp
add
adc
xchg
add
jmp
scas
xchg
call
es
adc
popa
adc
int
cwtl
mov
stc
add
lret
in
shr
lret
fldt
inc
je
xchg
popf
jg
mov
das
fdivrl
int3
push
inc
es
mov
sub
aaa
mov
mov
dec
fwait
xchg
add
mov
add
fs
or
cmp
es
xchg
les
test
ja
add
mov
divps
test
add
mov
mov
sbb
lods
jb
leave
xchg
js
adc
add
lret
inc
inc
sub
xchg
mov
addl
and
mov
loope
push
daa
in
lcall
push
sub
add
jb
pop
or
or
lock
sti
adc
jecxz
jp
lods
in
add
push
xor
out
mov
mov
xchg
add
mov
jae
mov
push
dec
sub
fstpt
add
xchg
sbb
or
lock
addr16
add
shrl
test
jge
mov
in
pushf
imulb
xor
jbe
incl
mov
ret
sahf
sbb
add
pop
movsb
sbb
mov
repz
popa
mov
enter
in
mov
or
adc
outsb
mov
lcall
incl
stos
xor
lcall
jge
mov
add
jbe
sbb
mov
pop
add
ret
add
jnp
mov
lock
xchg
add
push
xchg
cmp
daa
mov
aas
fdivrl
fidivrl
add
add
in
jmp
ljmp
lods
cwtl
out
mov
pop
or
sub
pop
cld
adc
fcmovnu
inc
xchg
sub
mov
and
and
or
scas
cmp
inc
add
mov
les
enter
mov
or
mov
fistl
outsb
push
or
lcall
int
sbb
inc
jecxz
pushl
adc
data16
sub
adc
adc
jo
addr16
inc
cmpsb
in
add
or
mov
adc
dec
add
add
sbb
mov
insl
push
and
pop
mov
dec
ffreep
insl
lret
sbbl
pop
adc
dec
mov
shll
inc
mov
dec
insl
push
adc
cmpsl
test
mov
xchg
fidivs
cvtdq2ps
adc
push
cmp
in
fistl
sahf
jge
push
faddl
add
aaa
or
ret
jbe
add
mov
ret
sub
dec
fimull
pop
pop
in
jmp
cltd
lock
jns
mov
mov
inc
btc
aad
or
fcmovb
sub
sub
push
jl
in
rcll
sub
mov
outsb
sbb
imul
ds
test
roll
je
xor
stos
cmc
fcmovnb
mov
outsl
mov
jbe
add
insl
push
les
mov
jl
outsl
jnp
aas
addr16
sti
xchg
pop
ss
and
add
or
mov
jno
iret
mov
and
xor
add
jle
add
xchg
mov
and
popa
jl
call
pushl
push
add
lods
gs
scas
mov
or
outsl
movsl
outsl
outsl
inc
inc
dec
add
stc
ret
popw
mov
sbb
movntps
pop
jg,pt
ss
js
hlt
fildll
incl
incb
cli
in
pop
mov
lods
neg
pop
insl
adc
dec
std
decl
sub
add
sbb
mov
jmp
jg
xchg
push
mov
add
movl
sbb
push
rolb
lret
popf
mov
jne
sub
sbb
mov
sub
push
mov
test
or
mov
insl
jl
dec
fstpt
adc
mov
sub
mov
push
fcmovne
lahf
jne
rolw
xor
xor
mov
pop
fistpl
inc
xor
pop
and
lret
aas
ja
mov
sarb
dec
dec
fdivl
rcr
pop
pop
das
int3
mov
cwtl
mov
pop
push
sub
mov
sbb
pop
fisttps
mov
negb
adc
xchg
int3
sbb
daa
pop
pop
mov
hlt
imul
xlat
mov
and
jmp
je
sbb
loopne
stos
mov
mov
outsl
pop
pop
clc
sub
rcrb
xrelease
loope
in
imul
sub
inc
mov
pop
dec
loopne
add
negl
add
outsb
fdivrs
out
jle
fistl
sub
push
cmp
lods
add
lock
add
dec
sbb
and
aad
push
mov
loopne
out
gs
jmp
bound
flds
loope
filds
cmpsb
and
adc
and
mov
pop
mov
pop
faddl
xor
aas
jb
and
lock
cmpsl
or
xor
in
lock
mov
fimull
and
mov
into
jae
insb
pop
xchg
pushf
push
nop
mov
or
fisttps
adc
xlat
sbb
mov
mov
pop
testb
dec
mov
mov
fistl
fdiv
add
push
add
gs
sbbl
push
dec
and
cmp
sbb
mov
pop
jns
inc
test
add
loope
pop
mov
pushf
cmp
sbb
outsb
js
neg
inc
not
dec
jns
and
aam
jmp
xor
clc
dec
cmp
jne
pop
loopne
push
push
int3
push
movd
dec
pop
mov
data16
pop
mov
inc
insb
dec
cld
pop
pop
int3
and
or
push
testl
push
in
push
sub
mov
push
push
or
lds
xchg
and
xchg
or
scas
adc
xor
push
jp
inc
jg
push
add
inc
fadd
push
scas
xor
sub
lret
ss
lock
pop
aas
stos
mov
push
sub
mov
ret
out
movsl
shll
xchg
add
ljmp
inc
not
ja
test
sub
in
xchg
insl
nop
jne
sub
push
adc
cmpsl
into
and
fwait
imul
mov
mov
pop
js
adc
fbld
popf
pop
test
outsl
xor
sarl
xor
dec
cmp
clc
ja
stc
lods
push
xchg
outsl
pusha
push
aaa
push
stos
stc
add
adc
xor
inc
out
push
xor
lahf
lock
imul
inc
adc
adc
add
in
pop
cmp
shl
pop
movsb
ret
add
cmp
es
mov
xchg
out
add
arpl
xor
mov
jnp
filds
push
icebp
or
scas
ffree
inc
paddusb
or
neg
nop
outsl
pop
cmp
cs
sub
stos
sub
sub
pop
clc
lcall
clc
or
not
mov
or
inc
or
sub
movsb
lods
mov
roll
sti
or
jns
call
adc
sbb
cmp
xor
inc
xor
adc
nop
mov
fwait
jle
cld
loopne
rcl
cmp
xchg
lahf
xor
push
mov
mov
push
cmp
addr16
mov
call
fstpt
jle
dec
fs
clc
and
clc
rcrl
stc
std
addl
pusha
sbb
mov
movsl
or
mov
lock
aas
out
cltd
subl
add
inc
sub
mov
sbb
pushl
ja
fdivl
push
gs
icebp
mov
adc
adc
adc
adc
les
xor
sbb
outsl
adc
cmpsb
add
sub
lods
in
aaa
fdivrl
cmp
or
or
bound
mov
insb
fimuls
xchg
sub
xchg
or
enter
outsl
fwait
add
dec
dec
mov
or
sbb
inc
mov
mov
inc
add
dec
cmc
add
mov
adc
cmc
xor
lret
shll
sub
inc
xor
mull
push
mov
push
ljmp
mov
mov
or
add
inc
mov
outsl
ss
inc
jae
xor
sarb
push
ret
shr
xor
mov
xor
in
js
fdivr
fcomps
mov
push
sbb
ret
repnz
mov
adc
mov
aas
push
scas
cwtl
ret
adc
dec
jb
insb
je
aaa
push
push
add
sub
pop
sbbl
lahf
dec
in
stos
push
loopne
ret
sarl
fdivs
lcall
cltd
dec
cmpsl
scas
pop
pop
shl
xor
loopne
xchg
jmp
sbb
add
dec
lcall
jge
push
dec
sti
cli
cs
xor
femms
dec
aas
cmp
mov
rorb
mov
mov
pop
cmp
enter
clc
out
mov
loop
sti
sti
pop
mov
mov
mov
ljmp
addr16
push
loop
lock
jne
xchg
add
clc
fucomip
inc
in
fistl
push
aad
cmp
push
in
test
sub
mov
adc
inc
es
aad
pop
ds
push
xor
cmpsb
pop
and
jo
inc
es
cltd
scas
mov
xchg
inc
jae
pop
ljmp
or
mov
pop
dec
xchg
mov
mov
jb
scas
mov
fimull
sbb
int
lea
movsl
andl
add
cwtl
cli
add
inc
xchg
inc
pop
xor
mov
push
pop
lea
popa
adc
adc
sahf
movl
dec
imul
fucomp
sub
in
pop
cld
ljmp
mov
and
push
pop
pop
or
sub
push
or
cli
xor
push
lcall
add
sbb
mov
xor
dec
sbb
aam
add
icebp
loop
loopne
mov
push
stos
rcll
ss
outsl
dec
jg
jl
adc
insl
mov
in
dec
outsl
cmc
ja
into
pop
xor
sub
sbb
aam
inc
das
shl
cli
cmp
add
leave
in
outsl
scas
mov
imul
sub
adc
adc
add
mov
mov
mov
xor
stos
sbb
mov
repnz
sbb
mov
dec
fimull
mov
stos
or
pop
cli
fildll
cmp
fstl
push
dec
sub
pop
xlat
aad
fsubp
mov
xchg
or
mov
fcoms
jg
loop
shlb
pop
and
lea
mov
filds
mov
std
add
outsb
push
aas
mov
push
mov
add
inc
sub
movsl
dec
mov
dec
inc
hlt
int
test
cld
jae
push
jo
loope
movb
add
ja
sbb
cmp
cmp
int3
mov
adc
or
jo
cmp
mov
cmp
mov
fidivl
inc
sar
sbb
cmp
and
repz
sub
xor
add
pop
daa
loopne,pn
out
and
cwtl
dec
xchg
and
push
subl
xchg
in
add
xchg
cmp
rclb
jg
add
fistpl
push
js
fwait
inc
mov
inc
mov
adc
stos
orl
fidivs
jnp
adc
cwtl
push
negb
dec
sub
adc
xlat
shll
adc
leave
mov
mov
and
imul
mov
sub
lea
inc
push
xchg
pop
mov
inc
add
insl
or
adc
mov
rcrb
mov
sbbl
xchg
add
lds
sub
clc
add
aas
mov
and
mov
or
cmpsb
scas
or
or
xlat
adc
shrb
jb
xlat
adc
jb
ret
mov
cmp
fwait
sahf
adc
inc
or
xchg
add
je
mov
xlat
jae
shrb
nop
xor
xchg
pop
shll
out
pop
mov
xor
fwait
xor
dec
mov
xor
fmuls
mov
inc
imul
mov
xor
pop
cmc
xchg
ret
pop
cwtl
inc
sahf
sbb
and
dec
or
lock
popl
dec
inc
pop
pop
pop
jle
insb
aam
mov
jne
roll
pop
call
nop
aam
test
dec
shlb
lds
mov
sbb
popf
adc
mov
out
fsts
mov
sbb
cmp
inc
xchg
addl
add
imul
xor
les
ret
or
out
sarb
xor
lea
cmc
or
push
xor
xor
pop
inc
xor
repnz
xor
adc
fsts
hlt
js
andb
add
mov
in
mov
inc
mov
mov
mov
dec
sub
pop
scas
out
adc
test
sbb
ret
sarb
inc
add
mov
xor
sti
push
xor
aas
jecxz
add
popf
or
fistps
xchg
jmp
push
push
fidivrl
push
push
int
nop
mov
aas
pop
mov
js
xchg
jnp
jae
inc
xor
loop
add
push
push
sub
sti
xlat
idivb
jo
cmp
lds
outsb
cs
bound
scas
in
shlb
ljmp
or
sbb
cld
xchg
xlat
push
mov
ss
mov
add
push
mov
fmul
icebp
jns
outsl
and
xor
xchg
inc
std
sbb
lds
in
or
mov
repz
popa
mov
jbe
inc
pop
ret
fldenv
mov
or
mov
sldt
insl
sub
inc
stos
testb
pop
roll
mov
into
test
push
test
fiaddl
cmpsb
dec
xor
adc
repz
pusha
or
mov
sbb
in
jne
adc
sub
out
cmc
lock
sbbb
mov
js
roll
testb
frstor
test
int
jb
xor
sub
mov
sbb
pop
lret
push
add
inc
lods
ljmp
mov
in
movsl
jo
js
cmp
insb
leave
mov
inc
fwait
xor
inc
inc
int
or
mov
push
xchg
sbb
push
xor
sub
aam
hlt
pop
loop
dec
ret
mov
int
mov
mov
fmul
lds
add
ret
mov
dec
sub
daa
rcrl
sar
popa
adc
leave
jbe
or
leave
or
ret
inc
fmull
adc
pop
fiadds
fisttpl
lret
fistps
or
mov
adc
pop
addl
jp
mov
loope
mov
lods
data16
and
or
pop
fs
daa
push
push
aam
in
mov
ficompl
cwtl
add
dec
rorl
push
cmp
adc
inc
rcrb
fdivs
imul
in
adcb
jecxz
mov
sbb
popf
adc
ss
add
jno
scas
jmp
addr16
ljmp
cmp
dec
adc
push
ret
ret
mov
scas
out
or
pop
cmp
adc
inc
add
cmp
fadd
aas
push
mov
xchg
out
mov
sbb
mov
mov
add
decb
fwait
out
push
clc
gs
imul
adc
lcall
jo
mov
pop
add
cmp
jmp
cmc
cmp
cmc
add
outsl
lcall
repz
popf
mov
fwait
shrl
mov
push
xorl
or
dec
sub
cld
adc
popf
subb
ret
jbe
movsl
jbe
xor
push
lret
fildl
loope
imul
arpl
mov
add
jg
mov
dec
push
jl
adc
ffreep
pop
stos
clc
dec
and
popf
or
inc
loope
inc
outsl
cmpsl
pop
outsl
incl
cmp
cmpsb
xor
popa
popl
aam
push
ja
push
adc
push
mov
enter
arpl
inc
stc
clc
test
nop
out
aas
rolb
inc
pop
test
fiaddl
adc
in
in
addr16
ja
inc
jl
pop
xor
mov
xor
jbe
stc
push
fmul
addr16
add
xchg
sub
pop
sub
aaa
hlt
ds
cwtl
adc
add
leave
das
fiaddl
dec
ja
xchg
cmpsb
mov
in
arpl
ljmp
test
orl
shl
jle
jg
mov
mov
in
mov
sub
je
inc
sar
xchg
cli
mov
mov
mov
ds
mov
bnd
outsl
aad
sub
lock
mov
push
jne
jns
and
pushl
jno
and
dec
pop
orl
push
mov
jo
xor
in
add
sbb
add
add
fxch
psrad
cli
out
scas
add
and
sahf
add
adc
add
test
cld
mov
aas
popf
sahf
dec
adc
int3
inc
shlb
lock
test
aaa
adc
sbb
icebp
xchg
mov
inc
xchg
sahf
subb
pop
pop
fidivrl
jmp
push
test
outsl
loopw
rcrb
and
jg
add
pop
out
push
mov
or
or
loopne
mov
vpmacswd
xor
decl
cmp
cwtl
xchg
jnp
push
mov
pop
xor
and
ds
xchg
cmp
outsl
fdivr
add
call
mov
add
lcall
incl
pop
das
jmp
sbb
sbb
mov
mov
sbb
adc
sarl
orl
loopne
inc
add
fidivs
xchg
push
fsub
sbb
xchg
sarl
dec
mov
add
pop
jns
lds
sbb
jmp
std
add
dec
decl
dec
mov
aaa
sub
jmp
mov
lret
shll
push
jmp
into
mov
mov
mov
mov
rcl
mov
jmp
andl
fs
js
ret
mov
rep
adc
or
es
loope
lods
es
lds
push
scas
push
lret
mov
jmp
jno
xchg
jae
test
les
cwtl
daa
into
jg,pt
hlt
jg
hlt
arpl
xchg
int3
xchg
adc
mov
mov
jp
scas
movsl
mov
inc
sbb
push
sub
aam
mov
lds
ds
or
mov
fdiv
sbb
fidivrl
pushf
or
add
add
cmpsl
in
sub
dec
data16
mov
inc
test
sti
mov
mov
and
dec
mov
and
push
mov
nop
das
pop
sahf
in
push
lods
dec
cld
dec
xor
scas
or
cmpb
and
cmp
jmp
aam
hlt
mov
cmp
pop
das
dec
inc
test
and
jno
cmp
fdivl
inc
mov
out
sbb
jl
mov
xchg
js
ljmp
mov
mov
into
cwtl
aas
inc
cmp
xchg
adc
call
lock
sub
test
adc
pop
dec
lock
incl
or
mov
rclb
jne
loop
repnz
or
pop
lcall
aad
cmpl
test
adc
push
add
lea
pop
push
sub
pop
pushf
in
and
ljmp
mov
xor
mov
into
push
fs
jne
mov
dec
iret
xchg
dec
out
push
or
cmpsb
xor
pop
inc
dec
fnsave
inc
adc
test
add
mov
lahf
push
arpl
push
dec
lds
inc
das
mov
xchg
jnp
int
movsl
push
add
mov
mov
xchg
dec
mov
add
sbb
mov
sub
cmp
or
pop
pop
mov
mov
pushf
stos
aas
imul
mov
loopne
adc
push
add
loope
lods
dec
leave
lahf
call
mov
cli
shrl
loope
arpl
mov
pop
clc
cmp
dec
pop
sbb
jle
cmp
pop
inc
leave
push
or
loopne
xor
mov
dec
pop
bnd
mov
jle
xor
and
scas
into
mov
fimull
add
out
sbb
imul
gs
stos
push
das
jnp
inc
scas
es
lea
mov
add
divps
sbb
xchg
push
sti
pop
outsl
mov
xor
scas
pusha
and
adc
mov
lock
inc
and
pusha
mov
add
add
fucomp
mov
fidivrl
sub
pop
sub
test
push
push
xchg
add
adc
sub
add
jg
decl
mov
les
add
loopne
xor
outsl
insl
ljmp
add
lcall
sub
clc
sbb
push
jbe
or
sub
mov
ficomps
push
jecxz
jo
cmc
insl
fcmovnu
ficomps
sarl
jge
mov
pop
lds
div
pop
clc
mov
jl
test
xchg
or
cmpsw
xlat
and
cmp
lea
xchg
std
pop
sbb
dec
push
jp
inc
incl
sbb
xor
sub
sub
jl
lock
cld
std
arpl
int3
mov
xchg
sub
jg
into
jl
cmp
inc
adc
pushf
loope
add
sti
call
pop
scas
popa
inc
push
cmp
xchg
addr16
out
xlat
jns
push
jne
imul
cmp
mov
in
pusha
sbb
mov
cld
call
dec
mov
and
dec
sbb
fwait
mov
push
push
mov
mov
inc
ret
insl
jp
mov
push
rclb
stos
jne
icebp
insl
subl
or
inc
call
or
mov
or
xor
xchg
in
dec
adc
int3
hlt
inc
sbb
pop
push
xor
cmp
lds
jecxz
call
insb
int3
xchg
lret
adc
insb
lods
in
shr
mov
lea
jbe
lds
lahf
mov
mov
aaa
cli
push
fisubrl
xor
mov
andb
adc
movsl
out
cmp
and
xor
pop
imul
pushf
or
decl
xorb
sti
sub
pop
sub
add
repnz
dec
mov
mov
sub
pop
ja
add
cmp
sbb
add
out
mov
adc
ja
mov
xor
ret
jge
sti
nop
outsb
imul
pop
lret
mov
movsl
mov
inc
cld
or
inc
sub
cmp
xor
or
adc
sbb
and
mov
push
in
or
jp
movsb
xchg
adc
adc
clc
in
mov
fiaddl
test
mov
incl
sbb
ret
pop
pop
or
jnp
mov
inc
mov
jno
fistpll
shrb
xor
outsl
add
stc
enter
mov
pop
leave
fnstcw
aaa
mov
test
rorb
adc
stos
adc
rcrl
hlt
insb
clc
stc
jle
and
jb
les
insl
mov
or
cmc
mov
xchg
dec
loop
cmp
jb
clc
leave
sbb
test
fwait
arpl
das
hlt
mov
xchg
fiaddl
dec
fimull
lock
xchg
adc
sti
pop
adc
and
cltd
test
mov
adcb
sarl
in
pop
ret
or
add
out
xor
xchg
jp
inc
inc
xor
gs
les
mov
push
in
bound
mov
int
out
fidivrl
out
push
rolb
xchg
in
bound
pop
fsubl
mov
in
sub
pop
mov
cmp
or
mov
movsl
das
cld
sub
scas
hlt
lds
jg
or
out
inc
xor
xlat
or
inc
or
dec
scas
and
movsb
sub
sub
incl
mov
jp
mov
out
mov
jg
push
jp
xor
call
sahf
sarl
inc
push
jp
outsl
xchg
int3
sub
mov
jae
dec
fs
sti
cmc
pop
gs
inc
adc
push
cld
ja
mov
and
pop
jl
inc
loopne
add
outsl
hlt
fimuls
mov
adc
sbb
nop
andl
or
xlat
mov
xchg
mov
sti
outsl
mov
rcrb
add
mov
add
sbb
mov
aas
dec
scas
jp
in
fnstsw
fidivs
xchg
mov
orb
jb
add
test
test
mov
sbb
mov
out
push
bound
shlb
adc
mov
fidivs
inc
rorl
xor
pop
stos
inc
cmpsb
mov
mov
scas
repz
inc
jecxz
inc
out
pop
mov
mov
or
lea
pop
loopne
test
sbb
pusha
pushf
add
lods
ja
and
adc
or
sub
jno
pop
xchg
decb
sbb
repz
fbstp
pop
in
jnp
nop
pop
insb
pop
mov
jbe
mov
jp
rclb
or
pop
outsb
lret
inc
fiadds
add
mov
mov
lcall
mov
pop
xor
lock
aad
inc
sahf
lods
and
out
pop
sbbb
mov
push
jg
int
mov
xor
pop
test
sub
and
cmpsb
call
push
jle
push
cmpsb
daa
inc
int3
ljmp
stos
inc
or
pop
jbe
or
lock
cmpsb
or
lea
mov
and
pop
cmpsl
mov
ja
mov
call
and
push
and
out
jl
loopne
andl
mulb
in
movsl
mov
clc
daa
sub
enter
pop
lods
xchg
fs
pop
cmp
notb
loop
dec
jno
and
adc
cs
adc
aaa
loopne
jmp
divb
and
jbe
pop
mov
int3
testb
std
je
roll
push
mov
subb
ss
insb
jl
pop
cmp
pop
or
out
scas
rep
pop
push
xchg
outsl
cld
outsl
sbb
mov
arpl
call
addr16
add
cs
pop
ficomps
mov
jns
je
imul
pop
push
mov
push
adc
mov
lods
pop
mov
dec
incl
or
sbb
push
das
fsubs
es
inc
out
fists
adc
and
cltd
cltd
inc
xchg
adc
mov
insb
lea
xlat
fdivl
pop
mov
les
clc
outsl
lds
inc
js
xlat
dec
xor
sbb
imul
mov
jp
sbb
push
popa
pop
cs
jmp
aad
daa
cmp
test
jbe
sbb
mov
push
fs
pop
ljmp
js
rcrb
inc
imul
add
add
dec
mov
jmp
sub
popf
and
xchg
gs
sbb
repz
lcall
fisttps
outsb
fcom
adc
cmp
fildl
imul
dec
bound
imul
dec
test
loop
sub
enter
pop
lods
xor
out
sarl
and
aaa
loopne
aam
lcall
addr16
lods
or
inc
pop
sbb
js
inc
cli
cmpsl
cld
daa
and
loope
lcall
mov
sub
mov
mov
pop
add
test
xchg
pop
test
push
jge
jbe
imul
xor
outsl
lock
je
test
xor
pop
or
pop
call
mov
fiadds
mov
pop
fsts
push
mov
imul
pop
push
ror
out
mov
mov
jle
dec
push
xchg
jg
rcrb
cmp
pushl
push
insl
popf
inc
cld
jle
fwait
into
pop
xchg
jmp
add
mov
mov
outsl
cld
push
ja
outsl
int3
fists
sbb
decl
rorl
xchg
mov
adc
imul
push
and
and
cmpsb
in
lea
cmc
test
add
popf
cmpsb
add
sub
or
cld
push
lock
add
adc
fsubs
imull
push
jle
mov
scas
inc
and
gs
in
std
test
push
js
jge
arpl
mov
and
bound
das
adc
or
mov
mov
sete
je
clc
sbb
movb
push
pusha
jp
das
mov
das
xchg
push
xlat
add
sub
push
sbb
stos
outsl
jge
adc
cmp
cmp
fstl
std
scas
shll
push
jo
cltd
adc
pop
dec
dec
mov
insb
pop
xor
lds
int
and
adcb
xor
cmovns
add
and
add
sub
mov
add
fwait
mov
xor
pop
in
lock
popf
loopne
and
sbb
sub
icebp
lret
mov
push
inc
scas
sbb
mov
add
fcoml
lret
sbb
rclb
pop
lret
inc
or
fsubrl
mov
arpl
dec
push
or
das
aaa
sbb
orb
inc
testl
sbb
rcll
inc
cmp
sub
lret
enter
cmp
adcb
pop
push
add
add
pop
xor
cltd
adc
sub
and
pusha
cmp
rorb
jno
sbb
xor
dec
lahf
or
push
push
mov
inc
sbb
add
inc
iret
push
in
sbb
jmp
inc
jl
fimull
mov
adc
add
mov
rcrl
sub
inc
lahf
sti
test
out
cmp
lcall
outsb
mov
mov
fimuls
or
inc
jmp
int
sub
fmuls
je
add
jl
lods
mov
aam
aam
xchg
mov
inc
imul
fidivl
jae
scas
call
or
add
pop
dec
jne
sbb
int3
xor
or
mov
add
adc
inc
adc
int
xor
or
xchg
and
movsb
cli
adc
sbb
out
jae
adc
leave
add
mov
iret
scas
push
jge
shll
mov
inc
pop
push
mov
push
sbb
mov
mov
or
out
mul
js
push
js
pusha
dec
adc
pop
or
add
dec
inc
insb
mov
mov
push
scas
adc
dec
adc
push
loopne
inc
das
mov
pop
or
pop
pop
cwtl
inc
adc
les
and
sub
and
or
dec
push
xchg
repz
js
jnp
mov
call
mov
jl
or
xchg
inc
mov
mov
addr16
lret
jmp
jno
mov
scas
mov
hlt
mov
lcall
push
test
aas
dec
sbb
mov
shll
adc
das
jg
pop
outsb
repnz
inc
loop
add
mov
mov
andb
dec
outsl
lock
test
add
and
xor
dec
loope
ljmp
jl
cmpb
pop
sub
add
push
push
sub
and
dec
sarl
addb
inc
pop
out
cli
xlat
adc
ret
mov
test
mov
pop
mov
xchg
push
inc
enter
fucomip
test
cmpsl
and
sub
xchg
ja
popf
or
aaa
jge
cmp
mov
or
push
mov
fcomi
sti
inc
arpl
ss
jg
cltd
into
mov
mov
mov
arpl
xor
imul
jp
mov
mov
mov
mov
into
xor
repz
fildl
add
dec
int3
arpl
jg
jg
sbb
lods
arpl
inc
adc
inc
dec
popa
pusha
dec
stos
dec
lock
pushl
and
mov
push
or
mov
lods
xchg
mov
mov
ljmp
push
js
xor
push
xchg
aas
jae
add
xor
nop
dec
and
inc
out
popa
xchg
or
loopne
out
in
and
adc
loopne
sub
shrl
enter
outsb
adc
jg
ret
pop
or
loopne
fwait
stos
je
outsl
push
and
xor
adc
pop
and
push
push
fs
pop
pop
mov
adc
xchg
or
fwait
sbb
aas
mov
jno
shl
mov
movsl
mov
pop
fcomp
xchg
in
xchg
push
arpl
cld
sbb
sbb
adc
cmp
pop
insb
rcrb
mov
or
mov
insb
cmpsb
mov
notl
ret
mov
mov
add
int3
xchg
aad
hlt
sub
aaa
ss
jg
or
mov
outsl
sarb
inc
mov
push
stos
lcall
cmp
outsb
movsl
lret
sarl
adc
add
sbb
sbb
or
mov
scas
loope
sub
dec
pusha
daa
in
ljmp
in
adc
pop
outsl
sub
jo
or
push
inc
cmp
imul
test
aad
push
fisttps
mov
cmp
push
ret
jb
xor
inc
or
sub
add
fistpll
lds
jge
cs
fbstp
cltd
scas
test
pushl
mov
mov
add
or
mov
xchg
or
cmpb
pop
cltd
dec
sub
jb
adc
adc
mov
aaa
ja
cmp
pop
mov
scas
gs
sub
bound
popa
das
je
std
or
icebp
int3
bound
jmp
jae
call
add
shl
arpl
je
aaa
lock
mov
fcomps
xchg
ja
decl
push
jp
add
movsl
push
mov
mov
enter
jb
loope
or
daa
or
out
push
sbb
cwtl
or
js
mov
imul
xchg
filds
add
jecxz
or
enter
inc
xchg
nop
fbstp
cmpsl
movb
lods
or
gs
movl
xchg
cmp
movhps
repz
mov
push
stc
mov
jbe
jnp
shll
mov
and
rorl
outsl
pop
mov
lds
aam
rol
scas
ficomps
sub
sub
pop
mov
inc
mov
data16
cmp
outsl
push
add
mov
add
ds
pusha
push
cmp
sub
push
insb
popa
rolb
mov
add
fldenv
push
xchg
decl
mov
jg
mov
sbbl
idivb
cmc
fsubs
mov
cld
out
mov
jle
mov
jl
sti
dec
mov
sbb
sti
push
fsubr
sub
aas
add
push
std
ret
fistpll
pop
outsl
cli
loopne
and
leave
rorb
sub
test
or
or
ficompl
fs
xor
test
std
inc
add
xor
cmp
and
aaa
push
outsb
clc
pop
push
xchg
cmpsl
xlat
add
push
xchg
cmpsb
push
popl
sbb
rcrb
push
lds
cmp
out
fdiv
mov
push
sahf
sahf
jge
pushl
fdivrp
enter
jecxz
push
out
inc
decl
outsl
lea
hlt
pop
xor
inc
cmp
mov
pop
arpl
repz
fsubp
jp
or
mov
push
mov
daa
push
sub
jmp
cmp
enter
testb
stos
imul
inc
sub
and
or
sbb
testb
cltd
mov
ljmp
rolb
scas
adc
outsb
shlb
stos
movsl
jg
or
jae
xor
xor
adc
push
jmp
divl
std
add
cli
lret
iret
pop
add
mov
lahf
xor
sqrtps
movsb
nop
ja
popa
hlt
outsl
les
mov
pop
sub
in
mov
jl
mov
es
call
lcall
mov
cmp
xor
cmp
decl
mov
xor
add
sbb
sbb
repz
or
xchg
ficomps
xor
outsl
dec
sbb
dec
jmp
das
push
push
in
incl
insb
mov
call
inc
dec
mov
mov
inc
mov
xor
icebp
ljmp
cmp
dec
add
shll
loop
inc
jno
not
lret
stos
push
cmpsb
cmp
jle
scas
lcall
fcompl
dec
ljmp
mov
cli
add
mov
leave
jp
or
inc
jecxz
ret
out
push
lahf
add
stc
lods
sub
and
mulb
xchg
pop
gs
mov
es
or
aaa
insb
aam
add
dec
mov
lret
lcall
and
aaa
shrb
inc
leave
pushf
jl
push
ret
pop
push
adc
loopne
jnp
jo
aad
shll
repnz
or
mov
mov
loope
xor
cmp
jecxz
neg
mov
pushf
aaa
lea
dec
push
stc
inc
xor
mov
imul
xchg
lea
jg
call
shll
add
push
mov
mov
mov
add
push
push
pmuludq
test
insb
iret
orb
xchg
push
inc
dec
mov
fs
fstpt
jmp
fxch
ds
add
mov
sbb
cmc
popf
subl
pop
cmp
test
or
or
xchg
out
mov
in
dec
or
rcrl
aas
ljmp
loopne
pushf
mov
pop
fimull
pop
fs
outsl
mov
pop
adc
cmp
jmp
popf
mov
xor
aas
mov
inc
outsb
cmp
add
loop
popf
aas
dec
leave
dec
aad
nop
add
sbb
andb
es
or
sub
pop
roll
push
mov
add
stos
cmc
lahf
fiadds
aad
repz
add
mov
pop
mov
push
lock
lock
fcompl
xor
jae
adc
jb
xchg
cmpsl
sbb
and
sub
sub
or
pop
jne
loop
adc
pusha
sbb
xor
inc
insl
inc
jg
and
add
inc
ss
cmp
pop
lock
les
rorb
repz
and
jnp
stc
push
jge
mov
mov
fistl
adc
ljmp
adc
mov
cli
daa
scas
dec
and
cmp
in
push
in
sub
jne
fldt
in
sub
adc
loopne
ljmp
sbb
cld
les
es
fists
lods
into
sub
roll
xchg
pop
sub
xchg
mov
sbb
dec
adc
xchg
popf
dec
dec
add
adc
clc
fstl
add
adc
xchg
rcl
mov
movb
bound
or
clc
jecxz
lods
push
sti
or
cltd
orl
movsb
aam
les
imul
cwtl
xor
pop
sarb
int3
mov
pop
dec
adc
out
in
xchg
test
add
in
pushf
int3
sub
jle
mov
das
cmp
sbb
insl
outsl
xor
mov
xor
sbbl
dec
shl
mov
stos
call
mov
movsb
popa
js
xchg
roll
mov
add
jno
out
cli
ret
movlps
shrb
lea
sbbb
inc
mov
call
jmp
push
fistps
xorl
lods
add
sbb
fst
lcall
test
es
call
push
xor
sub
in
push
fldcw
cs
add
sbb
hlt
test
test
xchg
jmp
or
push
addr16
ret
movb
addb
inc
mov
rolb
xor
xchg
mov
mov
mov
stos
xchg
jecxz
lds
fbld
icebp
or
call
adc
insb
cmpsb
loope
add
xchg
dec
mov
jmp
pop
and
sub
cltd
push
jecxz
lods
mov
arpl
repnz
adc
jl
rclb
jb
pop
in
adc
movsb
jnp
das
aad
shl
int
imul
jo
incl
hlt
call
cmp
mov
lock
hlt
test
addb
and
in
add
and
adc
jg
clc
mov
ljmp
dec
push
lock
mov
push
sbb
push
outsb
popa
xchg
cmpsb
inc
lcall
adc
or
fistl
mov
mov
cmpb
mov
push
enter
pop
inc
dec
enter
inc
mov
mov
hlt
into
sti
es
push
cld
or
jg
leave
in
cmp
mov
outsl
pop
lock
pop
aad
in
cmpsb
pop
or
xchg
mov
cs
sub
lock
faddl
rclb
nop
jo
and
ljmp
add
xchg
cmp
insb
push
mov
push
pop
in
cs
jl
and
push
push
fistps
jne
loope
cli
test
hlt
sub
inc
mull
insb
outsl
repz
mov
xor
lock
push
scas
mov
les
paddq
addl
adcl
cli
push
push
pop
leave
mov
test
int
jns
xor
out
pop
or
cmp
pop
test
test
sahf
and
dec
pusha
negl
int
ret
sub
pop
xor
and
mov
cmp
xchg
stc
add
icebp
lea
dec
push
jo
cmpb
add
in
mov
inc
test
mov
sbb
mov
push
xor
xor
data16
clc
push
icebp
fs
mov
cld
das
dec
push
lcall
fbld
popa
adc
movsb
dec
lds
call
mov
adc
lret
rorl
add
icebp
adc
xorb
mov
stos
shl
sbb
xchg
test
cs
ficomps
push
ss
movsl
push
addl
add
rcrb
in
inc
call
incl
mov
push
lcall
inc
push
push
mov
in
and
mov
leave
lret
int
mov
add
stos
pop
js
xchg
mov
push
popa
mov
aas
jo
push
pop
ds
jns
adc
cmp
add
or
pop
ror
and
in
cmp
pop
outsb
sbb
fwait
jp
sub
enter
test
and
pop
aam
pop
lods
hlt
xor
jmp
les
add
stos
inc
rorb
push
arpl
xchg
ja
or
das
mov
inc
addr16
scas
shr
jg
adc
nop
out
movsb
and
lcall
or
mov
out
test
mov
lcall
repnz
lret
cmc
mov
pop
mov
jmp
lods
pop
sbb
lea
jecxz
imul
jo
in
ret
lods
xor
cmp
cmp
jg
shll
aam
and
pop
in
or
cwtl
pop
jecxz
cli
ret
test
movsl
dec
mov
es
or
sbb
add
into
in
or
mov
dec
and
sbb
dec
test
test
jmp
cmp
outsl
pushf
mov
cmc
leave
add
outsl
das
std
cmp
inc
sub
decl
mov
insb
dec
mov
xchg
inc
pusha
rclb
xchg
hlt
test
xor
stc
daa
cmpsl
js
loope
sub
jle
add
cmpb
inc
pop
sbb
cltd
mov
inc
or
mov
fwait
call
mov
hlt
add
pop
mov
clc
outsl
std
jg
jno
mov
lds
mov
adc
pop
jp
lcall
lock
in
pop
sub
mov
mov
outsb
mov
add
fidivl
pop
pusha
aam
sbb
or
mov
or
push
mov
xchg
mov
mov
pushf
inc
int
mov
jo
mov
xor
push
push
repnz
aas
cmpsb
push
add
inc
fists
add
or
loop
cwtl
fstps
jmp
subb
jl
sbb
and
lea
inc
mov
push
adc
das
push
ss
arpl
test
adc
sbb
or
pushl
ss
push
shlb
pop
inc
pop
inc
and
aam
adc
adc
jae
sbb
lret
pop
pop
outsl
sub
adc
mov
mov
lahf
in
lods
mov
imulb
fidivl
adc
mov
cwtl
dec
imul
test
jle
lcall
das
add
stos
mov
sub
data16
pop
clc
jge
or
insl
wrmsr
ret
add
push
incl
xchg
rcrb
mov
in
ret
jmp
dec
pop
push
lcall
ss
jge
dec
test
outsb
andb
or
lahf
or
mov
xchg
inc
push
dec
mov
inc
mov
bound
scas
loopne
push
sub
lret
xchg
fbld
lock
push
sbb
clc
fistpll
ficoml
loope
rorl
mov
das
sbb
sbb
ret
dec
mov
pop
ds
adc
dec
adc
in
jg
and
scas
cwtl
cmpsb
dec
stos
sbb
push
loop
dec
add
push
mov
and
popf
sub
mov
and
imul
pop
xor
inc
cmp
and
out
call
xor
cli
and
xchg
repz
sub
addr16
idiv
cmpl
cmp
sbb
push
inc
cmpsl
inc
sbb
lcall
adc
scas
mov
jge
add
enter
xlat
pop
std
repnz
add
or
adc
movsl
jg
xor
sub
xchg
push
xor
inc
ljmp
cwtl
loopne
push
xor
push
push
call
jo
pop
jo
fwait
pop
int
imul
mov
push
hlt
mov
inc
ret
loop
testl
les
nop
fisttps
add
popa
fs
outsb
rcl
adc
lds
xchg
popa
frstor
adc
mov
inc
fsubs
xchg
cmp
mov
xchg
inc
or
shrl
lcall
mov
or
xor
jo
leave
adc
rorl
dec
jle
push
out
push
adc
fsubl
pop
out
dec
cmpsl
popl
je
or
fistps
stos
jg
mov
mov
cmovle
or
xchg
sbb
dec
adcb
and
and
add
sti
jmp
pop
cmp
or
pop
lods
sub
xor
or
ljmp
and
shrl
aad
jae
adc
inc
jg
cmp
pop
inc
ljmp
adc
cs
dec
xor
cltd
addr16
dec
cmpsb
cmp
lahf
mov
add
add
xor
inc
cld
pop
adc
je
xor
push
sbb
aaa
stos
movsb
dec
cltd
je
fidivs
add
fs
cmp
lahf
stos
cmc
lea
mov
dec
mov
in
mov
or
je
adc
test
xchg
mov
mov
daa
add
mov
test
dec
xor
or
cmc
fstpl
adc
and
mov
pop
shrb
sub
xchg
pop
mov
pusha
adc
pusha
inc
mov
adc
icebp
push
push
push
imul
lds
insb
sub
out
cmpsl
int3
sahf
nopl
lret
les
or
adc
mov
jbe
push
adc
dec
cmpsb
dec
loopne
sbb
cmp
push
in
aam
icebp
push
or
in
mov
dec
bound
mov
lods
call
mov
imul
stos
jbe
icebp
mov
mov
neg
sub
mov
stos
mov
cmpsb
adc
jbe
jle
incb
repnz
pop
je
sbb
jae
gs
mov
mov
arpl
nop
mov
jge
insb
pop
dec
test
lahf
mov
lahf
inc
add
xor
mov
fs
sub
repnz
sbb
adc
sbb
fbld
xchg
lret
sub
data16
cmp
and
push
and
jns
push
bound
mov
rorb
mov
lahf
cs
or
adc
mov
mov
xor
dec
rcrl
inc
mov
addb
mov
jecxz
and
cmp
mov
xchg
pop
sub
ds
mov
movsb
dec
xchg
imul
push
mov
push
push
sbb
imul
or
nop
loopne
movsl
adc
jo
fisttpl
sbb
test
xor
cmpsb
ljmp
insb
shl
int3
inc
xchg
jo
mov
add
bound
mov
jb
add
xorl
xlat
push
repz
and
inc
adc
jne
aas
in
adc
bound
mov
or
rcrl
das
dec
dec
mov
aas
aam
jg
pop
jno
or
push
and
lea
andb
int3
sub
mov
fldl
push
and
sbb
dec
and
fisubrl
aam
cmc
pop
cmp
jbe
ret
push
pop
add
test
mov
jo
pusha
lock
mov
lcall
mov
jbe
sbb
cmc
adc
aaa
xchg
out
add
ja
add
nop
cmp
pop
fwait
jmp
std
pop
cld
movsb
jns
mov
pop
xorb
data16
flds
and
pop
int3
mov
clc
jl
add
push
push
fdivl
lods
rep
inc
fstpt
or
and
inc
cwtl
arpl
lds
outsb
cmp
adc
sub
pop
mov
cmc
xor
mov
inc
pushf
inc
roll
int
push
call
clc
pushf
jno
ja
push
in
pushf
test
xor
rolb
stc
das
hlt
movsl
adc
aas
xchg
adc
xor
xchg
jbe
jne
pop
xchg
fcomps
cmc
popa
lret
std
cmpsb
inc
jae
addl
inc
ds
cld
inc
outsl
mov
fcmovne
arpl
repnz
stos
sbb
sbb
data16
jmp
arpl
ja
orb
js
iret
mov
fldt
mov
xchg
cltd
and
in
mov
sti
pop
xchg
xchg
or
fmulp
adc
mov
aam
or
sbb
add
mov
or
adc
jp
cwtl
insl
jecxz
inc
or
adc
mov
out
mov
test
xor
jg
xor
int
push
xor
mov
les
mov
jle
pop
add
pop
fucomip
inc
xor
add
or
xor
stos
cltd
stos
icebp
dec
shr
std
or
mov
ret
and
add
filds
cmp
jecxz
adc
adc
push
in
and
inc
dec
rclb
push
addl
inc
pop
add
or
popa
cwtl
addl
sbb
shll
jae
stos
mul
sbb
and
shlb
repz
cltd
add
xchg
or
adc
cwtl
bound
lods
adc
shlb
nop
add
iret
rolb
add
mov
and
xchg
mov
add
dec
xchg
inc
xor
iret
pop
icebp
data16
jle
sbb
sbbl
aas
pop
push
jnp
push
cmp
test
ds
mov
inc
incb
inc
and
cmp
xor
adc
jb
or
jge
and
fdivl
push
cmp
sub
mov
mov
jne
sbb
xor
mov
and
add
shrb
pop
push
or
lahf
call
and
push
stos
fistl
xchg
test
adc
push
addr16
mov
inc
incl
filds
sub
adc
xor
je
push
push
xchg
lahf
rorb
pop
in
in
mov
mov
stos
inc
cmp
in
push
ret
xor
sahf
loope
jbe
negl
ret
mov
adc
xchg
push
ljmp
or
xor
cmp
into
lods
or
sub
aam
inc
and
das
ds
roll
mov
mov
loop
push
inc
jb
sbb
aaa
fadds
or
mov
lcall
sub
fnstsw
clc
pop
clc
mov
push
mov
repnz
xchg
loope
mov
movhlps
decl
cmpsb
orb
push
dec
jo
push
mov
outsb
fadds
test
pop
inc
fadd
push
shlb
icebp
xchg
mov
rclb
push
dec
test
lea
bound
ret
inc
insb
repz
push
inc
push
mov
pop
adc
jne
and
sbb
movsl
mov
xchg
push
or
or
cld
mov
aad
inc
stos
orl
popf
mov
jg
aaa
jno
call
mov
mov
cmp
mov
mov
js
jge
mov
sbb
jle
sbbl
leave
cmpsb
push
xchg
mov
pop
inc
dec
push
mov
pop
enter
sbb
stos
inc
mov
xchg
fs
push
orl
pop
push
cmp
in
incb
call
movsb
daa
jne
loope
add
lahf
dec
or
xlat
xor
inc
sti
andb
lock
pop
xor
add
or
enter
xor
sti
sar
mov
push
add
mov
in
mov
outsb
inc
arpl
das
sub
xchg
jo
or
pushf
das
movsb
xor
xor
sbb
cs
adc
jne
cmovno
idivb
pop
mov
icebp
cs
sti
sbb
loope
cmpsl
mov
loopne
and
call
repz
in
xchg
shrb
mov
pop
jo
inc
jns
js
sub
or
adc
out
sbb
jmp
xchg
push
aas
xchg
mov
mov
pop
cwtl
sbb
or
icebp
mov
cmp
out
into
pusha
repz
mov
add
out
mov
xchg
ret
call
das
cld
dec
ja
add
xchg
ljmp
inc
outsb
loopne
mov
nop
dec
nop
fisttpl
add
sarl
mov
fistps
nop
inc
xchg
sbb
lret
push
mov
das
cld
or
adc
jae
imul
incl
les
push
push
dec
lret
movsb
pop
fstpl
pop
mov
push
lods
inc
jno
mov
shll
jge
in
leave
push
sarb
push
cwtl
repnz
les
outsb
mov
push
or
push
mov
push
mov
cmp
aam
pop
push
mov
mov
push
dec
aad
jnp
sbb
stos
sbb
mov
aaa
shll
adc
subb
stos
orl
xor
incb
test
dec
push
shrl
push
jne
gs
sbb
or
aaa
loopne
mov
mov
test
into
ret
outsl
dec
add
sub
mov
clc
fwait
adc
leave
xorb
sbb
jge
pop
push
fcmovnbe
ljmp
mov
jl
push
push
es
add
adc
dec
out
mov
jmp
cmp
pop
aas
push
push
inc
cli
scas
jmp
push
test
ss
fcoms
scas
insb
xor
inc
xchg
incb
sub
movsl
je
pop
inc
sahf
xchg
inc
stos
jbe
sbb
pop
mov
filds
sub
push
iret
add
sbb
bound
rcl
ss
lahf
mov
fstpl
pop
push
mov
cmp
pop
fcmovnu
xor
stc
loopne
ret
lods
cmp
adc
jg
xchg
daa
pop
and
mov
outsl
dec
sahf
dec
add
shlb
dec
orl
jmp
imul
jge
adc
or
sub
mov
mov
inc
icebp
in
test
arpl
mov
test
xor
fs
imul
and
and
inc
cmp
push
shrb
dec
popf
scas
lods
mov
pop
add
sub
cmpsb
jecxz
mov
push
xor
pop
fistl
sub
fldenv
sbb
mov
movswl
mov
and
jmp
dec
gs
imul
loopne
andb
adc
push
xor
js
rcll
aaa
sbb
rclb
mov
push
xchg
sub
inc
rcl
stc
jno
addb
jno
nop
aaa
addl
movsl
push
dec
shlb
pop
les
pop
into
or
mov
lcall
fwait
aas
and
mov
mov
push
cmpsb
outsl
aaa
in
pop
dec
jb
add
sub
outsb
sub
lea
dec
ret
cmc
out
loope
sti
fwait
mov
or
inc
mov
ljmp
cmp
dec
dec
popf
mov
jb
int
adc
test
cmc
les
shll
inc
mov
and
out
and
mov
cwtl
mov
daa
lahf
mov
mov
xchg
dec
xchg
mov
je
sub
jp
mov
and
lock
pop
shlb
add
inc
sbb
ret
in
mov
adc
imul
outsb
xlat
clc
mov
sti
insb
sbb
lea
push
adcb
pop
dec
popa
sub
or
shll
xor
inc
pop
or
add
pop
jne
push
and
mov
jo
decb
imul
mov
fidivrs
add
sub
push
dec
lret
add
outsl
shr
test
inc
js
int
sbb
into
jno
add
mov
xchg
std
es
rolb
sti
shl
stos
sbb
pop
mov
add
sbb
sbb
jl
cmp
aas
dec
sbb
movl
pop
addr16
push
inc
mov
cmpsb
push
call
push
roll
shr
xchg
dec
in
jb
xor
rol
mov
sbb
insb
clc
ror
push
sub
xchg
outsb
or
mov
xchg
jecxz
dec
adc
hlt
shrb
mov
push
mov
gs
dec
add
or
mov
and
ss
jae
jge
xchg
inc
push
test
jno
mov
mov
add
pusha
inc
and
cmc
call
push
inc
in
lahf
mov
xor
xchg
call
jne
mov
xor
pop
js
xchg
mov
test
mov
iret
in
pop
loope
repz
mov
das
bswap
rorb
adc
test
add
xor
pop
add
jo
mov
dec
lcall
outsl
sbb
mov
pop
and
fidivrl
push
dec
decb
mov
andb
sub
ds
outsb
cwtl
stos
call
test
sahf
mov
int3
ror
cmp
lcall
faddp
mov
push
cmp
jo
mov
out
int3
jo
cmpsl
jo
push
std
mov
mov
jp
lods
inc
daa
inc
sbb
addb
push
xorl
in
lret
imull
xor
ss
movsl
lods
xchg
fstl
mov
push
cmc
mov
lods
inc
pop
clc
add
mov
jecxz
lcall
cmpsb
loopne
sbb
mov
sbb
es
cmp
and
in
cwtl
dec
loop
push
xchg
or
mov
repz
inc
mov
movsb
mov
push
fistpl
cmc
clc
gs
movsl
jns
faddp
out
aaa
push
cli
jbe
mov
adc
bound
frstor
inc
dec
sti
xchg
loopne
add
outsl
stos
cmpsl
or
or
mov
mov
jnp
mov
and
adc
adc
mov
dec
add
mov
movsl
sbb
bound
ret
cmpb
pop
rcll
jmp
push
outsl
mov
pop
lcall
mov
rclb
mov
xor
pop
mov
loop
push
in
jl
in
inc
inc
lock
dec
shll
cmp
roll
loopne
je
push
push
push
and
cmc
cs
aas
or
pop
xchg
das
mov
fcmovbe
icebp
sub
sub
fldenv
pop
cli
dec
clc
packssdw
or
mov
arpl
iret
ljmp
push
cwtl
adc
scas
ret
movsb
lret
xchg
mov
dec
and
fdivr
movsb
jo
nop
xor
dec
adc
leave
xchg
xor
ss
inc
jecxz
popf
cmc
pop
nop
and
das
ljmp
mov
out
and
sarb
lods
in
movsl
hlt
int
sub
mov
fbstp
pop
inc
push
call
icebp
jb
pop
test
inc
cmp
mov
neg
mov
mov
mov
jb
cmpl
push
and
and
mov
into
adc
ljmp
mov
xor
mov
xchg
dec
mov
cmc
xor
fcoml
js
pop
and
imul
push
insl
xchg
lea
or
loopne
shll
call
addb
mov
push
jecxz
sbb
ljmp
push
cmp
jno
add
jmp
and
ja
pop
sbb
outsb
mov
sahf
rolb
sarl
out
popf
pusha
inc
pop
pop
aas
hlt
mov
out
repnz
outsl
cld
jg
je
mov
outsb
repnz
aad
cmpsb
pop
inc
xor
inc
mov
lcall
inc
das
mov
xor
xorl
mov
cmp
cld
sub
lods
mov
add
inc
pop
jo
sahf
addr16
mov
cmp
or
xor
pop
inc
dec
dec
xorps
mov
jmp
scas
outsb
pop
sub
adc
adc
stos
ret
mov
in
fcompl
inc
xor
adc
out
fidivs
loop
push
fs
rdmsr
out
sub
inc
push
push
add
jg
jo
popa
xchg
dec
mov
mov
dec
insl
hlt
jmp
mov
mov
xchg
jmp
xor
jb
ja
jmp
push
adc
sub
movb
mov
jo
sarl
inc
adc
loopne
xchg
mov
clc
popa
es
adc
fs
dec
lret
lea
xchg
rorl
out
mov
dec
mov
fisubrl
dec
add
mov
das
push
add
sar
cmp
mov
xchg
dec
jge
dec
sub
popa
loope
cmpsb
mov
pop
filds
insb
mov
dec
or
push
js
pop
xchg
pop
clc
shlb
lods
inc
mov
pop
push
sbb
loop
pusha
add
sbbl
xchg
aam
outsl
test
shl
sub
into
sbb
test
sbb
jmp
dec
lcall
fcomp
pushl
nop
push
sbb
out
repz
mov
push
mov
add
mov
xorl
arpl
add
js
push
mov
std
fucomip
sbb
scas
std
test
outsb
imul
jno,pn
pop
xchg
push
movsl
adc
mov
jg
mov
loopne
test
data16
les
outsl
pop
hlt
cmpsb
pop
rcrb
push
cmpsl
add
leave
cwtl
pop
sti
sbb
mov
cmpsb
out
iret
mov
and
inc
mov
faddp
outsb
xor
push
hlt
cltd
add
add
ret
mov
mov
cld
or
in
out
mov
dec
dec
movsb
out
mov
mov
test
xchg
adc
stos
das
fsubl
aam
aam
pop
frstor
cwtl
repz
test
popf
sbb
or
xchg
inc
dec
ljmp
das
mov
mov
cs
imul
outsb
shll
xorb
jecxz
mov
push
mov
out
push
cmc
ffreep
mov
mov
xchg
shrb
ret
inc
push
sbb
mov
and
adcl
xor
shll
push
popf
lcall
fwait
mov
mov
add
add
add
movsl
add
neg
inc
neg
inc
cmp
add
pop
push
push
mov
or
das
adc
ja
mov
lahf
dec
ljmp
mov
jno
icebp
sbbl
jecxz
shll
sbb
mov
sub
out
adc
and
sub
hlt
dec
lret
cmp
fdivl
push
add
les
or
fildll
les
push
xchg
lods
xor
mov
out
test
fildl
xor
jmp
adc
loope
mov
pop
or
stc
mov
or
test
int3
jp
pop
xor
cld
lds
jbe
outsb
std
pop
rcrl
pop
fimuls
mov
jecxz
jecxz
push
push
out
mov
pushl
fs
in
icebp
pusha
adc
sbb
subb
push
sub
ds
repnz
dec
dec
aam
in
xor
mov
cmp
xor
jae
adc
mov
push
stos
shrl
jno
xor
mov
or
adc
stos
andl
pop
loopne
insb
in
adcl
subb
sti
xor
mov
aam
push
sub
xchg
sub
arpl
jnp
nop
mov
fisubrs
sbb
test
push
jno
pop
xchg
stc
testb
xchg
subl
sbb
mov
jmp
dec
mov
inc
inc
cmp
call
inc
ret
mov
out
icebp
cmpsb
clc
pushl
pop
iret
push
or
sbb
loopne
add
add
add
mov
scas
pop
mov
aaa
add
jo
dec
mov
inc
mov
xor
mov
fwait
cs
clc
out
jnp
pop
mov
fisubrs
xchg
ja
rcrl
push
xchg
in
stos
cwtl
cmp
mov
and
mov
xchg
mov
test
fldt
xor
les
popa
mov
ljmp
xchg
cli
adc
fdivl
cmovne
and
or
fldl
test
cmp
jbe
shl
or
and
push
aaa
pop
pop
data16
call
sbb
or
es
or
or
test
xchg
iret
xor
cld
push
ss
or
push
lea
subl
add
jb
mov
inc
mov
aaa
es
mov
outsb
pusha
mov
out
add
xor
rol
cmp
mov
push
gs
in
add
leave
enter
neg
pop
out
inc
or
add
inc
jo
lods
jg
jmp
packsswb
cs
int3
or
add
std
stos
cmpsb
jg
ret
pop
sbb
pusha
movsb
jno
mov
stos
cltd
or
sbb
push
push
xchg
jns
cmp
fisubrs
sbb
jle
pop
clc
push
jbe
add
pushf
je
push
mov
pop
sub
ja
out
in
adc
cmpsb
mov
call
decb
pop
cli
cmpsl
mov
xchg
and
sti
test
test
cld
shrl
popa
ja
cmp
fscale
out
call
xchg
sub
xchg
cli
dec
inc
cmpl
jg
cmpb
das
iret
sub
or
mov
mov
out
push
mov
mov
sbb
pushf
cmp
icebp
mov
xchg
lds
out
inc
shlb
sbb
jg
incb
into
je
pop
outsb
loopne
gs
xchg
shlb
push
pushf
cmp
out
mov
push
and
mov
loopne
in
mov
psubd
jp
jnp
or
push
dec
cld
mov
mov
xor
adc
dec
mov
popf
rcr
roll
out
xchg
sarb
jp
mov
or
pop
repnz
hlt
pop
je
pop
fcompl
or
jns
nop
es
fs
decl
jbe
mov
gs
jecxz
leave
inc
inc
pop
test
cmc
test
mov
jnp
movsb
aaa
pusha
roll
adc
inc
add
repnz
rcr
mov
mov
pop
push
mov
fwait
mov
pop
std
xor
add
jmp
sbb
outsl
outsl
or
testb
seto
ret
xor
data16
scas
add
push
inc
adc
int3
loope
lcall
cmp
add
and
scas
jne
add
test
dec
nop
ljmp
adc
mov
or
xor
int3
xchg
pushl
js
sbb
or
outsl
mov
sub
mov
sub
push
or
and
call
cmpsl
popa
xor
call
push
push
push
push
lods
push
pop
outsl
inc
aaa
mov
fstps
or
or
outsb
add
and
xchg
sbb
repz
adc
pop
mov
ja
push
lea
pop
pop
cli
cmp
icebp
cmpsl
sbb
arpl
push
ss
les
int
leave
rcll
add
iret
xchg
mov
jp
ss
stos
aam
or
iret
popa
xorb
push
xor
or
xchg
lcall
icebp
sub
xor
cmp
hlt
aaa
mov
pusha
pop
cld
mov
cwtl
ret
cmp
gs
imul
or
fildll
push
fadds
pushf
cmpsl
inc
mov
decl
xchg
push
js
dec
sub
pop
sbb
mov
xchg
pop
enter
loope
nop
mov
sbb
enter
inc
jmp
mov
mov
cmp
pop
jl
jo
fdivp
mov
ss
cmpsb
sbb
add
cmp
cwtl
in
add
leave
rorl
fnstsw
lcall
push
mov
push
leave
lods
mov
lcall
jo
mov
loopne
nop
cmp
xchg
lret
and
les
lea
imul
rcrb
jbe
loope
or
ss
insl
jmp
daa
nop
xchg
int3
xor
pop
mov
xor
cltd
and
ss
jne
inc
aam
xchg
adc
push
pop
mov
and
push
repnz
lcall
mov
dec
sbbb
in
cmc
and
mov
aaa
das
push
jae
pmaddwd
inc
mov
das
out
inc
pop
mov
stc
aad
mov
xchg
lock
mov
push
or
cltd
xor
outsl
push
lahf
shrb
inc
adc
fidivl
cld
sub
outsb
inc
nop
mov
lds
cmp
push
mov
adcl
adc
push
jo
mov
mov
leave
mov
sbb
jno
out
call
pusha
inc
pop
ret
imulb
pop
inc
add
sub
rcl
xchg
mov
jbe
pop
shl
fwait
icebp
and
mov
mov
leave
loopne
bound
sahf
scas
jae
mov
push
les
adc
and
dec
sub
loope
and
aam
imul
pop
rcll
push
xlat
sahf
add
lret
outsb
loope
ret
mov
add
add
icebp
pop
or
shrl
icebp
mov
loope
popa
cwtl
js
jg
sub
out
push
pushf
xor
add
shll
divb
jmp
sti
sbb
jns
enter
test
insl
loope
sub
xchg
cmp
fmull
popa
xchg
sub
mov
xor
imul
pop
test
imul
fisttps
lret
mov
cmp
or
repnz
ss
outsl
outsb
std
mov
inc
das
addl
fisubrl
mov
neg
clc
jmp
mov
dec
neg
cmp
mov
test
sub
pusha
loopne
mov
pop
lcall
ret
mov
hlt
scas
pop
mov
enter
lods
std
add
xor
int
daa
mov
xchg
stos
lea
out
mov
lds
bound
mov
cmpsb
mov
repz
sub
clc
mov
xchg
jge
hlt
xor
mov
sub
push
cmpl
lds
add
or
mov
jnp
fimull
mov
or
or
cmp
fcmovbe
pop
jmp
lcall
cwtl
xchg
fistpll
cmc
sbb
cltd
out
sub
aas
mov
movsb
scas
add
iret
ss
and
in
data16
or
inc
mov
scas
pop
sub
mov
outsl
fcomps
int3
sahf
fmull
push
mov
ret
sbb
cs
sub
es
xchg
or
mov
adc
add
or
icebp
jb
test
cmp
push
je
mov
mov
xchg
out
adc
mov
ficoms
mov
cmpsl
and
jns
and
repnz
xor
add
inc
in
add
add
push
and
outsb
stos
std
outsl
sub
or
or
rcrb
movsl
mov
and
adc
sub
mov
inc
jmp
xor
jg
cmp
es
les
fsubs
lret
stos
push
inc
ja
je
adc
adc
cli
daa
add
sbb
shr
mov
inc
fs
sbb
push
out
push
xchg
cmpsl
or
or
add
mov
or
cltd
shlb
leave
push
repz
or
push
mov
ffreep
push
mov
hlt
cmpsl
test
dec
test
out
push
fcomps
bswap
loop
dec
or
addr16
mov
shll
lods
xchg
subb
push
pop
push
mov
cld
push
stos
faddl
roll
push
or
or
aaa
jne
mov
cld
addb
or
cli
mov
mov
adc
or
cmp
jb
mov
sbb
xchg
jae
fistpl
in
lock
mov
lea
pop
repnz
fnstenv
add
andb
imul
mov
inc
nop
adc
jb
aad
and
pop
xor
test
dec
adc
notl
push
mov
dec
add
fadd
rcll
pop
mov
adc
or
inc
mov
add
and
sbb
inc
out
je
pushf
stos
add
call
mov
add
test
sbb
and
lea
or
mov
mov
popf
push
hlt
sub
cmp
lock
mov
mov
sbb
mov
inc
sub
arpl
or
add
cmp
hlt
rorl
mov
jl
shlb
test
jns
fs
dec
sbb
icebp
dec
nop
push
xlat
add
push
mov
icebp
sahf
inc
js
lea
mov
fiaddl
pusha
xor
addb
pop
add
lds
cwtl
pop
mov
inc
adc
mov
and
adc
push
clc
adc
sti
js
mov
pop
adc
ret
arpl
inc
sbb
push
iret
add
insl
repnz
ficoml
inc
les
sub
mov
add
outsb
popa
inc
lret
aam
mov
jecxz,pn
sub
stos
sar
cld
call
jbe
das
arpl
inc
ret
icebp
roll
insl
push
pushf
mov
dec
lock
sub
std
push
fwait
pminsw
scas
enter
lods
mov
enter
pop
or
bound
dec
aam
movsl
shlb
push
jl
jb
rcll
mov
push
bound
mov
jecxz
ret
push
jp
adc
lock
jae
add
push
sub
sub
fisttpl
jns
addl
insl
jo
clc
push
mov
pusha
imul
add
adc
test
and
push
adc
mov
jge
pop
imul
aam
fwait
jg
jg
pop
sub
pusha
pop
cmp
loopne
fildl
rorl
nop
sbb
mov
push
je
mov
clc
lods
push
or
and
scas
sbbl
dec
test
fdiv
cmp
sub
mov
mov
lahf
enter
fstpt
jnp
sub
dec
inc
bound
lock
mov
adc
push
inc
pop
aas
adc
outsl
adc
sti
rorb
inc
jp
lcall
mov
mov
inc
dec
inc
mov
push
lock
mov
aam
inc
jl
lret
inc
out
or
mov
or
and
jmp
sub
xor
xlat
xor
mov
mov
cmp
cmp
enter
cmp
mov
fnstenv
fnstsw
leave
xchg
arpl
push
mov
pop
cmp
fimull
int3
js
divl
push
sbb
loopne
repz
dec
inc
lea
pusha
push
inc
out
scas
jbe
pop
sbbb
imull
jl
add
push
jae
sbb
xlat
mov
xor
inc
add
inc
sbb
xor
dec
out
mov
adc
lock
pusha
mov
or
inc
and
cmpl
adc
mov
add
mov
outsl
and
xchg
lahf
cwtl
lea
pop
adcb
pop
inc
adc
call
out
jg
fdecstp
dec
mov
push
or
addr16
sbb
jo
dec
mov
push
sarb
enter
inc
rcll
inc
xchg
jge
xchg
mov
shrl
test
fsub
test
mov
stc
rorl
imul
lock
xchg
cmp
lea
movsb
cmpb
aaa
stos
jg
imul
xorb
rcll
jnp
call
sar
ss
ret
or
pop
iret
repnz
jecxz
mov
les
jno
aam
into
pop
mov
mov
addb
pop
add
dec
inc
mov
mov
fistl
scas
call
shrb
cmp
jge
mov
lods
fcmovnbe
jle
push
sar
loopne
and
pop
jb
adc
push
imul
inc
fcmovnbe
adc
jbe
sbb
into
jp
dec
mov
mov
and
pop
repnz
sub
adc
pop
dec
xchg
js
cltd
mov
xchg
mov
outsl
mov
mov
out
mov
and
clc
nop
mov
add
adc
loop
mov
in
popa
sub
lret
inc
roll
fwait
mov
fcmovnbe
in
rcll
adc
inc
std
pop
in
add
shl
sbb
lcall
pop
sti
outsl
pop
ja
mov
sub
in
cmpsb
add
test
outsl
inc
xor
pop
pop
subl
mov
mov
dec
test
and
in
ja
mov
lahf
rolb
sub
das
mov
popa
or
sbb
test
add
nop
call
cld
sub
mov
es
sub
cmp
mov
push
mov
addr16
mov
in
mov
stos
mov
repz
add
movsb
push
hlt
fbld
imul
push
mov
xchg
mov
daa
popf
sbb
jnp
cmp
out
shl
sbb
aaa
scas
add
stos
leave
adc
pop
insb
sub
and
in
mov
ljmp
insl
dec
call
std
xchg
dec
icebp
or
push
mov
pop
hlt
shr
ja
outsl
adc
add
fldl
push
js
loop
jg
js
add
jge
in
add
mov
fsubrp
cmpsb
xchg
rcr
and
movsb
in
js
pushf
rolb
int3
add
inc
cpuid
add
ljmp
push
mov
test
imul
jnp
sbb
cmp
shrl
lea
and
or
lds
divb
add
dec
movsl
pop
jne
int
add
daa
sub
dec
cld
add
xchg
insb
mov
inc
ja
lods
sarb
fidivrs
add
and
pop
push
mov
mov
push
jle
mov
popa
sub
adc
dec
fldl
or
test
xlat
mov
push
push
je
push
pop
xor
dec
dec
xor
pop
lods
mov
sar
popf
call
mov
jae
test
and
xor
push
in
sub
xor
xchg
add
lock
and
or
sub
enter
mov
push
cld
popf
and
fwait
enter
mov
pop
add
pop
ret
add
out
sub
cmp
fstl
std
xor
sbb
push
adc
push
shll
test
jnp
repz
xor
jg
mulb
sub
xlat
mov
mov
adc
push
jnp
repz
imul
dec
dec
mov
xchg
mov
push
arpl
xor
xor
repz
or
leave
lahf
call
sbb
fldl
aam
adc
push
iret
or
inc
push
aad
mov
fsubp
adc
mov
aam
rclb
mov
leave
push
jmp
les
neg
push
cvtpi2ps
fs
sbb
cmpb
push
outsb
sbb
fcomi
sbb
mov
aaa
lcall
int
add
jp
ljmp
roll
fidivs
je
mov
cmp
adc
xor
xor
fdivl
mov
jl
jo
loope
inc
adc
jl
aaa
cmpsl
addr16
inc
sub
pmuludq
cmp
in
jg
push
out
jp
jmp
cld
rorb
and
mov
or
xchg
xchg
int3
adc
mov
xor
mulps
pusha
shrb
dec
add
data16
sbbb
jmp
outsl
mov
jns
cmp
inc
dec
pusha
push
cltd
push
lods
into
mov
std
inc
or
mov
lret
xchg
fwait
xor
mov
out
stos
pop
pop
inc
out
aas
mov
xchg
add
iret
pop
mov
push
mov
std
mov
andl
aam
xorb
jg
mov
dec
decb
subb
mov
or
cmp
xchg
mov
mov
cmp
lds
adc
call
adc
add
std
push
orps
add
xchg
push
fisubl
int3
xchg
mov
das
insb
push
divb
sbb
data16
mov
int
cmp
adc
mov
adc
jbe
andb
pop
dec
ljmp
fadd
fdivrs
es
imul
orl
jge
jno
test
mov
xchg
add
loop
lock
pop
mov
addb
lahf
xlat
cmp
icebp
orb
push
adc
shrl
dec
out
push
jnp
inc
out
adc
or
dec
inc
clc
inc
sbb
mov
dec
xchg
dec
lds
and
iret
push
jae
adc
in
int
mov
nop
mov
arpl
add
inc
lret
adc
addb
arpl
lcall
ficompl
mov
push
xlat
push
fnsave
add
or
je
nop
call
push
aad
imul
and
or
inc
adcb
jge
daa
inc
out
icebp
cmpsl
and
pop
clc
dec
clc
push
outsl
mov
xchg
pusha
aas
add
cmpsb
test
push
mov
pop
cmp
push
ret
dec
mov
jle
xchg
sub
xor
xor
outsb
je
xor
shll
dec
push
push
dec
inc
mov
inc
or
mov
rorl
out
jbe
int
push
scas
outsl
xor
xchg
mov
in
add
xchg
or
movsb
call
or
stos
dec
sbb
xchg
sarl
in
sbb
mov
xlat
loop
gs
mov
in
fnstenv
loop
imul
mov
pushl
rclb
sub
add
test
je
xchg
loopne
push
push
push
pop
jae
aas
pop
mov
fsubrl
addr16
or
inc
xchg
mov
sbb
push
add
adc
or
jp
ret
cmp
mov
out
fnstcw
repz
add
pop
jae
xchg
imul
les
shlb
and
adc
sbb
xor
mov
push
jae
mov
and
sbb
add
pop
sub
inc
in
ret
aam
push
and
push
mov
and
in
mov
push
or
push
dec
xchg
in
adc
sub
or
enter
and
lcall
popf
push
insb
xchg
add
loop
adc
jo
mov
out
outsl
shl
adc
push
push
rolb
mov
mov
cld
sbb
push
je
mov
inc
pop
adc
pop
cmc
sub
lcall
cmp
sbb
add
ss
cmpb
movsb
lcall
lods
cmpsb
and
pop
lcall
ljmp
stc
jg
pop
adc
sti
jg
stos
xor
xchg
push
popf
sbb
es
cmp
mov
sub
filds
das
insl
outsl
popf
jle
rcl
xor
jno
in
adc
mov
addl
jecxz
fsubrp
cwtl
inc
test
push
add
mov
push
insb
adc
popf
arpl
decl
push
sar
hlt
cmp
pop
sbb
repz
mov
das
aam
adc
adc
mov
dec
test
rolb
xor
and
cmp
insl
fbld
fnclex
xorb
add
ds
jo
sahf
sti
jo
jl
or
rorl
sbb
mov
cmpb
jno
jbe
cmp
stos
push
loope
and
dec
cwtl
add
in
bound
mov
div
js
dec
pop
stos
mov
dec
popa
test
lahf
inc
mov
pop
xchg
or
fisttpl
mov
call
pop
scas
mov
js
push
ljmp
ljmp
sbb
sbb
sbb
repz
aas
hlt
incl
cld
mov
push
jp
and
popa
mov
leave
push
jg
inc
mov
clc
adc
pop
mov
ja
add
outsl
clc
xchg
adc
or
sarl
movsb
push
or
int3
roll
xor
ret
cli
mov
cs
push
xor
test
push
and
or
add
pop
aad
sbb
adc
fwait
and
push
filds
add
sub
adc
sti
and
das
inc
iret
ja
repz
test
jg
pop
js
push
test
inc
mov
pop
sbb
cld
inc
cld
je,pt
jl
mov
push
sub
es
incb
out
inc
aad
mov
mov
mov
xor
jg
das
aam
mov
mov
adc
jbe
dec
mov
aaa
jle
push
pop
pop
push
iret
pop
icebp
mov
pop
je
shlb
mov
push
fisttpl
fimull
cmp
in
lods
fidivl
sbb
jge
jno
imul
mov
mov
leave
jne
jno
rcr
sar
adc
test
mov
pop
scas
imul
add
in
cmp
or
test
dec
stos
jmp
cmp
adc
xchg
imul
lahf
or
pop
clc
fists
mov
xchg
popa
call
cltd
mov
rcrl
add
cli
mov
sarl
pop
push
xchg
das
xor
adc
xchg
fistpll
mov
loope
call
or
mov
mov
mov
adc
js
jl
push
call
outsl
outsl
or
hlt
mov
movsb
pop
pop
mov
je
mov
or
fidivl
loop
mov
mov
adc
iret
mov
scas
push
mov
mov
js
mov
xchg
ds
bound
jmp
pop
pop
push
decl
or
mov
mov
or
out
sbb
fcomi
ja
mov
xchg
inc
jnp
pop
push
dec
xor
mov
addr16
mov
cli
adc
sbb
icebp
lret
mov
xchg
ja
jmp
lods
jecxz
jle
cmp
jne
xor
pop
pop
std
inc
pop
mov
add
or
mov
adc
iret
mov
rcrl
push
fisubrl
dec
enter
das
push
pop
decl
mov
addr16
in
mov
stos
fdivrs
dec
test
xorb
adc
stos
mov
add
mov
push
jp
stos
mov
out
dec
mov
and
xor
or
popf
out
sbb
lds
ljmp
add
or
shll
test
push
insl
leave
inc
out
dec
xchg
push
mov
stos
imulb
stos
sahf
imul
push
pop
test
das
aad
outsb
push
stc
and
lea
decl
jg
fcoml
sub
mov
mov
xchg
sub
pushf
fisubrs
mov
pop
test
popf
pop
push
mov
roll
andb
movsl
in
sti
inc
ror
outsl
popa
rorl
pop
fisubrl
or
mov
mov
jb
sub
xor
add
jmp
cs
sub
out
insl
sub
mov
mov
adc
js
lds
jb
xchg
push
sbb
xchg
in
movsl
je
sub
cmp
adc
insl
test
pop
fwait
jmp
aaa
or
push
in
xor
lods
aad
mov
fistpll
cmpl
cmp
inc
loop
and
popa
jg
decl
pop
or
jbe
shrb
mov
shlb
ljmp
gs
test
pop
test
orb
ds
push
inc
pop
aam
mov
and
pop
push
aam
inc
xor
test
xor
imul
je
cmp
insb
or
xor
pusha
xchg
mov
sbb
push
and
add
push
in
xchg
push
push
mov
mov
aam
mov
lock
jae
sub
rcl
aad
pop
jne
push
data16
or
ds
out
add
add
outsb
lds
mov
pop
adc
pop
je
dec
add
testb
fbld
adc
inc
sub
push
push
mov
mov
dec
dec
cmp
nop
shl
and
add
or
in
pop
fldcw
incb
push
mov
adc
xchg
rcl
xlat
loopne
decb
gs
mov
inc
mov
and
inc
fisttps
test
xchg
cmpsb
or
pop
inc
dec
iret
adc
jne
xchg
fmuls
pop
loopne
out
mov
sbb
insl
int3
in
pop
int
pusha
data16
push
addr16
lcall
je
roll
xlat
jae
cmp
sahf
push
jbe
lret
cmp
mov
aad
push
pop
mov
push
or
add
sbb
cmp
ss
mov
stos
fadds
sbbb
movsl
mov
cmp
fcomp
inc
bound
andnps
xor
pop
rcl
or
jne
fsubrs
je
notl
dec
rorb
pop
lds
imul
mov
nop
ret
jg
or
mov
ret
push
rcrb
xor
imul
xor
jns
fstpl
fistpll
adc
lods
mov
in
jne
xchg
adc
and
fbstp
mov
rolb
push
movsl
setne
bound
test
hlt
popf
adc
cmp
popa
pop
mov
icebp
xor
faddp
nop
jecxz
inc
addr16
mov
pop
ret
and
push
fucom
scas
dec
sbb
add
push
cmp
cmpsb
pop
push
sti
in
fs
push
lds
pop
xor
sbb
mov
push
ss
inc
jbe
sbbb
in
jb
inc
les
aaa
add
mov
push
mov
mov
loop
add
jno
pop
push
adc
jo
es
cli
outsl
push
xor
bound
xor
or
pop
inc
push
push
test
enter
mov
arpl
pusha
push
or
add
cmp
in
bound
or
mov
gs
adc
stos
mov
int
test
cmp
test
sarl
outsb
arpl
xor
xor
fwait
popf
adc
add
add
sbb
and
cmp
inc
add
jo
inc
insb
inc
cmp
nop
mov
movlps
inc
jne
cmp
in
add
sbb
inc
mov
pop
scas
inc
jns
jg
mov
inc
out
stc
sub
mov
xchg
jb
add
cli
mov
loopne
fcoml
neg
outsb
adc
mov
sub
sub
push
sbb
cmc
rolb
mov
jbe
xchg
daa
mov
jnp
fldl
jg
outsl
mov
sbb
sub
sub
cmp
nop
xchg
and
int3
xchg
scas
imul
mov
and
scas
leave
orb
in
add
push
les
add
mov
outsl
test
mov
add
sbb
sbb
fs
add
add
pop
jns
cli
push
mov
sahf
repnz
mov
dec
in
roll
push
fdivrs
test
sbb
pop
out
push
or
adc
out
fs
add
pop
push
sub
je
and
data16
add
push
lret
dec
or
add
test
mov
mov
clc
push
mov
sbb
add
mov
lea
lock
cmp
in
mov
data16
js
mov
addl
xor
pop
mov
push
bound
clc
lock
adc
ret
repz
and
pop
inc
shlb
xchg
add
pop
add
add
xchg
stos
add
imul
and
jge
mov
insb
movsl
enter
push
mov
push
xlat
lock
inc
mov
dec
dec
lds
pop
dec
xchg
push
pop
shll
lock
xlat
xor
or
in
inc
sub
int
outsl
mov
cmpsb
jnp
ret
add
or
nop
or
xchg
add
add
xor
xor
fwait
add
xchg
pop
pop
dec
push
lea
outsl
hlt
fstp
mov
dec
adc
lock
loopne
fistl
in
ljmp
push
dec
loopne
mov
in
jno
nop
add
inc
fwait
push
test
jecxz
insl
ss
adc
clc
add
jnp
xchg
mov
adc
pop
push
mov
mov
test
adc
mov
ficomps
and
push
les
jnp
inc
adc
dec
mov
pop
repnz
or
cmp
aaa
mov
adc
rcrb
dec
inc
cmc
xor
hlt
push
push
data16
lock
repz
mov
ret
dec
cld
lods
pop
hlt
push
jge
adc
jno
call
cmp
jns
mov
in
xchg
orb
loop
or
xchg
imul
iret
dec
sbb
sbbb
addb
mov
pop
adc
add
add
test
pop
xor
clts
inc
xor
mov
add
inc
pushf
sbbb
jmp
adc
cmp
dec
inc
jnp
test
je
inc
fs
sbb
or
mov
or
mov
fistpl
out
jl
loopne
sbb
inc
loope,pn
mov
negb
fadd
mov
cmp
add
daa
xchg
ret
cmp
pop
insb
inc
cmc
repnz
icebp
outsl
adc
in
mov
add
stos
jle
mov
pop
enter
test
ds
jo
and
addb
loop
std
ret
dec
adc
cmc
xchg
stos
imul
fwait
test
cmp
cmp
cmp
push
dec
pop
or
inc
xlat
loop
dec
ffree
pop
push
and
leave
push
dec
fs
addr16
push
push
pop
inc
cltd
icebp
dec
mov
stos
imul
adc
repnz
or
add
les
js
fsubs
and
and
mov
add
jmp
cmp
push
jae
test
jae
xor
push
sbb
ss
xchg
rcl
mov
test
roll
dec
rcrb
mov
rcll
imul
mov
call
or
sbb
cmp
ret
or
xor
dec
daa
mov
inc
adc
mov
lods
clc
mov
jmp
repnz
jp
daa
lock
out
rolb
inc
mov
sbb
and
js
in
or
sbb
add
loop
lret
mov
roll
jmp
aam
mov
rolb
or
or
add
sbb
mov
int
pop
jl
adc
push
mov
enter
nop
pop
mulb
add
shl
jmp
imul
outsb
push
push
xchg
lcall
pusha
mov
inc
orb
outsl
les
fstps
in
vmovddup
sbb
cmp
cmpb
int3
pop
pop
jo
or
int3
dec
aad
mov
jle
addl
mov
pop
sub
cmp
inc
and
cmpsb
xlat
out
leave
idiv
das
icebp
jae
in
shrl
mov
addr16
cs
pop
test
push
jmp
shrl
dec
mov
andb
imul
or
push
mov
cmpsb
sub
out
sub
mov
dec
sbb
cs
and
mov
mov
sarl
lock
add
sub
inc
inc
lcall
push
mov
and
adc
inc
lds
jle
mov
xor
xchg
in
test
cmpsl
push
or
cmp
out
xorl
cmpsb
dec
xorl
aaa
clc
sbb
mov
jbe
fcmovnu
inc
mov
and
cmp
mov
sti
outsl
fstpl
movsl
push
jno
lock
mov
pop
jmp
adc
icebp
jg
sbb
pop
pop
stos
or
lods
lea
lcall
pop
or
test
fadds
pop
dec
fsubrp
jecxz
dec
aam
outsl
push
icebp
clc
and
popa
jp
ret
std
pushl
xchg
sub
rorl
cs
bound
mov
xchg
test
push
ret
rcrl
fadds
into
push
push
push
out
adc
dec
push
enter
jno
test
fistpl
push
in
mov
insl
xchg
hlt
pop
das
jl
adc
push
sahf
push
push
and
lahf
ja
add
sub
adc
add
ljmp
sahf
add
mov
cmc
mov
adc
push
fstpt
push
push
daa
push
jge
shl
xchg
clc
or
lret
dec
bound
icebp
test
add
cmp
data16
fstps
or
jg
clc
out
or
mov
xchg
cmp
add
or
bound
mov
fcoms
add
ljmp
loop
mov
dec
xor
add
outsl
std
cli
xchg
push
lods
mov
je
and
add
rclb
mov
das
xor
inc
mov
and
mov
add
pop
add
jns
aam
cmp
sbb
fs
test
mov
mov
jne
sub
fs
sbb
xchg
test
sbb
test
inc
pop
inc
ficoms
xor
cmp
lods
mov
pop
dec
pushl
cmpsb
jp
out
cmp
dec
pop
mov
jo
test
data16
aam
adc
pushf
cmc
ja
and
sbb
insl
into
repz
addr16
mov
push
add
in
aaa
inc
aaa
in
sub
cwtl
mov
adc
aad
rorl
shrl
push
jb
mov
fidivl
mov
jbe
pop
sahf
add
lds
pop
ret
cltd
in
mov
dec
mov
mov
mov
pop
into
js
rcll
jg
imul
pop
adc
and
loop
out
pop
sahf
decl
mov
cmp
sti
mov
jnp
daa
das
xchg
out
jp
test
sbb
adc
ja
jnp
ds
jmp
push
sahf
push
mov
inc
add
inc
push
es
adc
pinsrw
cmp
add
mov
in
data16
pop
rolb
jne
test
pop
fldt
dec
lock
out
add
cli
dec
jo
std
loope
nop
xchg
or
ja
cmp
pop
cs
push
pop
out
mov
or
cmp
rclb
cmp
int3
push
and
rcrb
scas
stos
and
and
fcmovnbe
xchg
add
and
or
les
or
add
ror
mov
ret
inc
aam
and
xor
pop
pop
loopne
sahf
repnz
ret
push
mov
rclb
adc
lar
xor
fs
sbb
inc
inc
pop
pop
ror
xor
push
js
popa
sbb
push
add
in
sbb
add
mov
cmovl
shl
or
mov
pop
jle
mov
xor
neg
stos
call
iret
mov
pop
cmc
inc
or
adcl
sti
and
xchg
shrl
insl
fwait
push
addb
add
mov
push
mov
fdivrl
mov
sub
adc
ret
fidivs
cmp
cld
xchg
jle
int3
add
in
and
adc
dec
outsl
mov
js
push
inc
stos
dec
xchg
jo
pusha
adc
jb
mov
outsl
out
std
push
inc
mov
loope
xchg
sbb
pop
pop
mov
in
clc
sub
pop
sub
xchg
xchg
cmpsb
or
je
aas
pop
cmp
into
incl
addr16
mov
xor
inc
scas
daa
or
repz
or
sub
orl
cmp
xor
inc
andb
bound
dec
dec
add
inc
movsb
int3
push
mov
mov
test
jae
scas
and
int
push
jl
flds
xor
push
push
or
push
xor
push
push
divb
sbb
and
push
out
and
dec
dec
rcr
fistpll
addb
push
scas
sar
loopne
adc
dec
pop
mov
test
mov
sub
rorb
das
cs
xor
mov
fldt
pop
dec
je
inc
sub
adc
out
push
sbb
push
hlt
mov
rolb
subl
scas
mov
in
cs
fstps
cltd
pop
dec
std
push
or
cmp
pop
push
int
add
fbld
add
mov
inc
loop
xlat
test
push
cmp
xlat
rclb
push
aaa
clc
das
popa
lea
into
jno
sbb
mov
in
sbb
fldl
cmp
mov
test
mov
or
shlb
sub
push
in
push
or
lahf
ja
xchg
js
cmp
mov
jmp
dec
add
mov
ret
jno
sbb
int
test
insl
mov
test
negb
mov
inc
rolb
scas
cmp
mov
cmc
scas
jg
add
mov
call
sub
xchg
shr
incl
decl
or
test
cwtl
hlt
inc
xor
sbb
loop
shr
mov
xchg
pop
clc
mov
enter
jp
rcll
inc
xlat
adc
xchg
cmp
add
pop
dec
fiaddl
xchg
hlt
sbb
pop
or
fisttpll
loop
out
ss
jb
mov
add
cmp
jge
test
dec
in
xor
in
push
clc
lret
sub
in
xor
insb
push
jne
pop
jle
lods
push
icebp
mov
les
mov
xchg
pop
shl
mov
js
adc
test
fs
pop
repnz
and
mov
xchg
sub
fistpll
mov
jae
dec
mov
mov
lea
and
sbbl
hlt
xchg
mov
movsl
out
repnz
arpl
xlat
je
mov
outsl
scas
and
sub
ret
in
add
bound
in
jl
data16
rcll
sar
mov
into
mov
add
pop
js
adc
dec
jbe
inc
out
sahf
xor
cmp
cmp
pop
xchg
popf
fldcw
jno
add
sbb
fildll
les
aas
jns
and
fistl
sbb
or
nop
cmc
adc
leave
mov
stos
and
aad
inc
sub
shll
push
outsb
and
jbe
mov
pushl
lcall
sub
call
das
xchg
addb
xor
mov
add
adcl
push
ljmp
sub
rclb
ljmp
pop
rcr
in
add
test
aaa
lahf
push
push
mov
int3
scas
cwtl
out
js
or
add
xor
pop
aas
adc
into
mov
or
cmp
rcr
mov
sbb
jecxz
ljmp
mov
push
sub
sub
pop
pop
in
insb
jg
and
xchg
cltd
cwtl
nop
and
shrb
mov
mov
add
xchg
scas
or
mov
imul
cli
add
mov
mov
shlb
jg
add
scas
out
fdivr
dec
cltd
inc
adc
and
add
jge
orb
mov
dec
loopne
pop
in
cmp
sbb
dec
imulb
loope
mov
cmpl
pop
dec
fcmovu
pop
pusha
test
pop
dec
incl
pop
xor
push
mov
inc
mov
sarl
int3
nop
subl
mov
mov
or
mov
jle
push
push
xor
mov
js
mov
enter
fsubl
mov
loopne
sub
mov
push
sbb
das
rcrl
lds
mov
push
cmp
cmp
test
xchg
sub
and
inc
or
ja
pop
in
outsl
mov
dec
into
js
in
xchg
les
aam
xchg
fmull
out
mov
cmp
dec
adc
nop
xor
or
pop
jecxz
pop
test
dec
push
xor
shrb
and
insl
hlt
or
adcl
shlb
sub
pop
test
loop
ljmp
decb
jae
xchg
jne
in
ficoml
mov
adc
push
add
jp
mov
add
loop
popa
mov
inc
add
ljmp
sbb
mov
sbb
and
mov
ret
inc
push
cmp
lahf
aas
inc
sbb
inc
mov
add
inc
out
fdivl
xchg
js
and
jns
in
xor
and
dec
inc
xor
or
jnp
outsb
gs
loopne
dec
call
cmp
ja
jno
mov
fldl
rcrb
inc
lds
adc
addr16
test
push
test
ljmp
jge
in
cltd
in
cmp
mov
dec
mov
mov
dec
mov
adc
and
fnstcw
ret
pop
add
or
loop
sbb
das
jle
popa
outsl
and
sti
dec
push
adc
hlt
sbb
hlt
int
hlt
fwait
aas
pushf
out
fbstp
add
inc
pushf
lds
lea
sahf
fwait
cmp
repnz
mov
sbb
mov
cwtl
xor
dec
dec
mov
rcll
jecxz
jne
inc
jnp
add
jle
icebp
or
push
adc
sbb
xor
add
fimull
jnp
or
popa
outsb
jbe
xchg
ret
rcl
cmpsb
jno
lods
cmp
sub
mov
rorl
mov
div
sahf
pop
and
jp
jbe
or
xlat
mov
xor
inc
pop
test
mov
mov
insl
adc
call
pop
add
cmp
push
jno
ret
call
pushf
xor
inc
lahf
push
sbb
pop
and
xor
sahf
stos
mov
stos
fldenv
mov
add
dec
and
mov
xchg
ds
jbe
ljmp
shrl
cli
jnp
or
adc
pop
or
outsl
nop
sub
xchg
sub
xchg
and
mov
test
xchg
rcrb
stos
test
and
add
jb
in
mov
or
cld
pop
js
scas
loopne
xchg
iret
insl
dec
rol
testb
mov
mov
push
ret
lds
str
pop
adc
xor
xor
dec
in
sti
inc
das
lock
enter
int
xor
push
pop
adc
xchg
sub
xchg
mov
push
cld
scas
mov
xor
or
pop
dec
cwtl
jne
xchg
or
jmp
sarb
cld
daa
aad
xchg
imul
inc
or
gs
cli
push
mov
or
nop
mov
cmp
add
pop
jge
mov
shr
adc
dec
jecxz
loope
push
outsl
mov
xchg
fisubs
inc
and
add
inc
sbb
sbb
cmpsl
repnz
aaa
cmp
lock
or
or
aaa
mov
shll
lea
in
jno
cmpl
or
roll
sbb
cwtl
pop
test
cltd
shll
mov
icebp
sbb
andl
mov
loopne
fs
repz
mov
lahf
ss
rcrb
js
mov
add
insl
clc
sahf
cmp
shr
clc
movsl
leave
mov
ret
sub
or
test
push
imul
shl
push
shlb
cmp
lret
ds
testb
and
mov
mov
xchg
adc
das
addl
xchg
sbb
arpl
jne
cli
out
sub
mov
dec
lods
fisubrl
adc
lock
ret
imul
cltd
add
loope
pop
jo
nop
repz
or
xchg
or
jne
jb
xor
or
inc
xor
les
push
sub
inc
mov
movsb
xor
and
xor
or
in
mov
xchg
loop
rorl
mov
mov
or
ljmp
test
repnz
andb
loope
fsts
add
dec
int3
orb
shll
mov
xlat
mov
inc
fistpl
gs
nop
push
sarb
mov
mov
mov
and
add
sbbb
push
sub
bswap
xor
fbld
aad
xchg
loope
jo
add
mov
push
femms
repnz
mov
ret
test
xor
mov
dec
or
mov
dec
or
add
add
call
mov
mov
or
sbb
iret
andb
pop
int3
and
je
push
mov
mov
jge
inc
dec
mov
adc
pop
xchg
cmp
pop
outsb
jecxz
pop
das
sbb
popa
fdivp
sub
add
ljmp
popf
testb
xchg
push
mov
and
scas
test
fidivl
les
sbb
rcl
test
add
xor
sub
mov
es
shrb
sarb
or
jnp
shlb
les
inc
cmp
or
sub
mov
addb
and
or
mov
popl
and
ljmp
and
add
sbb
mov
pop
sbb
pop
loopne
scas
jg
mov
push
push
inc
sub
sub
ljmp
mov
jo
lret
adc
adc
mov
call
jge
ror
mov
and
lock
sub
sti
mov
call
int
std
mov
jae
iret
push
in
and
bound
cmp
mov
mov
add
test
sub
bound
aaa
loopne
aam
jb
mov
sbb
pop
jge
and
je
shll
arpl
pop
jecxz
pop
xchg
add
adc
push
xchg
faddl
adc
test
sbb
addr16
inc
popl
popa
add
sti
mov
ret
adc
push
and
jae
xor
mov
push
cwtl
lds
add
divl
adc
jmp
test
or
mov
xor
mov
xchg
loopne
lds
push
shrb
icebp
repnz
movsb
add
adc
pusha
mov
das
mov
mov
sub
or
call
add
cmpb
mov
pop
orl
adc
sbb
nop
jmp
cmp
cmp
ficoms
or
jns
push
les
das
cld
cli
sub
xchg
mov
cmpsl
lods
bound
cmp
in
incl
lea
xor
testb
js
add
add
mov
inc
jle
lds
push
jmp
pop
jb
mov
or
in
repz
adc
xchg
insl
pop
rcll
andl
inc
sbb
adc
add
in
cld
sbb
lret
popa
fwait
and
adc
dec
adc
dec
pop
je
adc
inc
aam
mov
shrb
hlt
or
rclb
pop
mov
pusha
sarb
and
and
dec
jle
jmp
sbb
push
aam
or
and
nop
xor
clc
andl
jne
clc
lahf
sbb
xchg
xchg
shl
sbb
ljmp
add
call
fisubrs
add
aam
and
int3
sub
inc
mov
les
std
setne
sbb
mov
loop
mov
bts
dec
pop
sub
sub
mov
lock
jge
pop
imul
filds
ss
pusha
add
and
push
and
movsb
add
adc
jnp
in
test
stos
xchg
and
pmulhuw
rcr
pop
jp
or
les
or
imul
les
jne
mov
mov
out
add
cwtl
les
push
mov
lret
xor
dec
sub
adc
push
ret
in
pop
xor
ljmp
addl
loope
sbb
enter
mov
roll
push
xlat
rolb
add
jb
cmp
lea
fldl
pop
adc
mov
mov
mov
fists
pop
aam
xchg
out
jp
push
ds
ret
icebp
add
xchg
out
mov
idivl
jmp
scas
js
dec
push
das
lods
xor
or
fldl
push
add
fisubrs
inc
cmc
loop
mov
cmp
xlat
rorb
in
xor
insl
rolb
mov
mov
mov
lahf
in
in
shl
jo
add
mov
cmp
sbb
loopne
enter
lret
rol
jo
popa
stos
data16
daa
cld
or
subb
cmp
shrl
data16
into
xor
dec
cmc
push
mov
rcll
jns
push
or
pop
aad
dec
insl
stc
fcoms
das
cmpl
movsb
or
std
inc
enter
push
int
xlat
push
sbb
adc
push
mov
add
cli
push
int3
dec
push
add
bound
arpl
jmp
cmp
xor
lret
mov
pop
cmp
clc
sbb
cmp
push
push
push
xor
rorb
int3
testb
inc
cmpsl
addr16
xor
inc
mov
adc
loopne
mov
xor
push
sbb
ss
inc
cmp
mov
push
in
frstor
xor
lahf
adcb
xor
testl
and
add
popf
adc
xor
ljmp
loopne
add
sahf
pop
cmp
lret
pop
push
add
dec
pusha
fdivs
adc
das
addb
fldenv
mov
adc
add
gs
jnp
sbb
jge
popl
add
loopne
mov
mov
mov
fsub
pop
iret
sahf
dec
adc
inc
sbb
loopne
jmp
pusha
push
xchg
dec
cmpsb
aas
pop
pop
insb
fnstsw
adc
xor
mov
movsl
movsl
jb
jne
add
add
arpl
gs
push
cmpl
scas
decb
stos
mov
dec
lods
jnp
clc
popa
std
jg
lods
xor
popf
jo
fsts
add
xchg
add
and
inc
fcoms
lcall
fistpll
cli
loopne
movsl
sbb
inc
and
loopne
test
andb
xor
lock
rorb
add
das
nop
xchg
mov
fs
popa
mov
fildl
lods
xor
in
inc
aaa
aad
lds
and
out
dec
ret
ret
and
push
push
inc
dec
mov
push
xchg
sub
mov
fwait
mov
sbb
daa
xchg
lods
xchg
and
add
scas
fldt
push
pop
xchg
mov
mov
mov
fwait
jne
loope
imul
pushf
jns
sbb
roll
lea
cmp
nop
pop
inc
mov
sbb
jg
loopne
mov
inc
imul
mov
push
lds
dec
xchg
sbb
and
jmp
iret
jp
cmp
or
or
dec
xchg
adc
push
push
or
int3
add
imul
sbb
inc
xchg
and
sub
ret
loop
cmp
dec
inc
inc
sbb
lock
popa
lock
adc
jp
inc
xor
data16
cld
add
mov
aas
mov
mov
adc
sahf
add
loopne
repz
inc
jne
xchg
push
jns
sbb
fldenv
sbb
roll
sbb
jecxz
push
push
loopne
or
fs
fistps
jb
scas
rclb
in
cltd
push
push
cld
mov
mov
fisubrl
sub
pop
inc
add
into
out
add
adc
or
clc
sbb
xchg
mov
gs
adc
mov
sbb
es
cmp
int3
mov
scas
push
les
jo
loop
sti
lret
shl
or
addb
cmp
out
sbb
std
and
orl
fsubl
mov
and
es
adc
inc
xor
jg
jo
data16
lds
cmpb
add
jno
mov
lods
xor
mov
int
sub
ret
pop
xchg
cld
cmc
xor
or
xchg
cmp
pusha
push
repz
adc
pop
mov
mov
les
icebp
inc
in
or
mov
inc
cmp
loop
mov
addl
popf
in
and
shll
out
add
hlt
cmpsl
xchg
and
pusha
into
mov
das
add
push
lea
adc
rorl
and
fwait
icebp
xchg
inc
ja
xor
ja
out
dec
or
push
lds
jecxz
pop
adc
out
push
int3
fsts
jnp
push
loope
cmp
stos
data16
lcall
inc
std
bound
pop
pushf
push
stos
xchg
dec
sarl
add
pop
mov
sbb
dec
repz
popa
pop
int3
xchg
mov
shr
mov
inc
cmpsl
arpl
pop
push
jns
mov
mov
int
dec
fldt
cli
mov
incl
or
lahf
mov
data16
hlt
push
inc
scas
movsl
sarb
cmp
mov
cli
push
icebp
enter
adc
push
gs
sbb
ljmp
add
xchg
pop
stc
push
pop
stos
mov
xchg
scas
sbb
or
inc
xchg
inc
cmp
sbb
or
push
sbb
iret
shll
test
pop
aad
in
add
mov
inc
pop
loop
mov
pop
mov
jb
rorb
lods
ss
fsubr
xchg
jae
adc
int
mov
nop
pop
sbbl
lock
sub
jno
cmp
pop
mov
mov
mov
push
dec
push
add
in
fldl
push
mov
dec
xchg
mov
jmp
repz
sub
stos
push
shrb
in
jmp
in
lret
cmpsb
insl
xor
xchg
adcl
cwtl
fwait
rcrb
push
mov
fstpt
lret
leave
pusha
pop
inc
out
hlt
sahf
adc
or
add
ficomps
fisttpll
and
test
mov
and
test
and
push
loopne
mov
ljmp
cmp
and
cli
incl
sub
push
jp
adc
xchg
mov
xchg
rcll
fsts
js,pn
xchg
push
add
inc
and
and
xchg
inc
cmp
testb
sbb
nop
je
ja
push
loop
dec
adc
cmpsl
cs
fdiv
inc
jo
xor
or
and
xchg
dec
lea
mov
shl
add
mov
xor
dec
mov
cli
mov
xor
clc
adc
or
mov
sbb
jnp
data16
shll
cmpsb
rolb
es
mov
cmp
jle
ss
mov
ret
mov
pop
cs
ret
pop
mov
dec
push
mov
mov
imul
push
and
sub
add
decl
adc
popa
push
mov
inc
sbb
insb
lods
movsl
or
pop
or
out
or
in
jl
inc
and
mov
daa
outsl
ds
fisubl
sarl
jnp
mov
cs
mov
push
or
sti
mov
addr16
das
dec
adc
and
jmp
add
jg
enter
xchg
sub
pop
leave
mov
add
pop
dec
aad
xor
jge
ds
pop
in
jg
cmp
int3
cs
add
cmp
mov
pusha
pusha
sbb
je
sub
mov
sbb
out
ret
push
pusha
inc
jecxz
lcall
push
mov
insb
jp
xor
fldl
xlat
adc
dec
dec
xor
lcall
or
movsb
fcmovnb
sub
xlat
or
dec
sub
fwait
stc
les
int3
xchg
sar
xor
loope
inc
xchg
std
scas
or
pop
clc
dec
mull
jb
cld
and
mov
jg
imul
test
sbb
adc
cmpsb
aaa
pop
and
mov
popl
dec
xor
cli
adc
insl
inc
and
cmp
sub
cmp
fstpt
or
cmp
gs
mov
inc
or
jg
pop
iret
popa
mov
mov
popa
adc
incl
loope
into
mov
not
jns
fbstp
xchg
mov
cltd
lds
out
rcrl
leave
sub
sar
fistps
and
frstor
lock
mov
test
enter
mov
add
push
clc
fbstp
das
xor
mov
lock
push
and
mov
mov
mov
or
cvtdq2ps
sar
scas
ss
inc
clc
stos
sub
jg
rcrb
test
in
mov
mov
and
fcoml
mov
cmp
insl
sub
clc
shll
add
dec
cli
fisttpl
lock
or
add
int
push
out
sub
int3
mov
stos
add
add
add
or
lds
cmp
js
lds
lcall
inc
xor
clc
cmp
std
mov
dec
sbb
rorb
lahf
fadds
push
xlat
mov
test
or
clc
push
js
enter
mov
lahf
push
xchg
push
cmc
repnz
add
fstpl
addr16
xor
data16
and
in
sub
lret
cmp
xchg
call
add
test
rcrl
cmpsb
add
inc
xor
xchg
in
sbb
add
fildl
dec
inc
push
lock
add
aam
loope
adc
hlt
mov
sub
sbb
add
out
movsl
mov
out
push
out
fdivs
sub
or
pop
and
xchg
loop
or
int
sbb
add
jnp
push
add
ljmp
test
pop
and
dec
inc
fcmovnbe
and
inc
shr
imul
inc
int
call
add
clc
inc
jb
cmp
sbb
sbb
mov
and
in
cmpsb
into
aas
aaa
push
bound
mov
sub
inc
inc
xor
inc
les
mov
pop
xchg
in
sarl
dec
adc
adc
subb
and
or
push
call
xchg
sti
test
mov
sbb
and
add
push
fstpl
xchg
int
out
roll
cmp
jnp
jecxz
std
sarl
popl
shlb
in
out
mov
cld
push
jne
call
sub
mov
aam
into
into
rorl
aam
aam
lock
inc
gs
mov
mov
mov
and
aam
popf
loopne
call
in
cmc
mov
adc
shl
loope
lahf
fnstenv
sbb
xor
cwtl
adc
push
out
jno
mov
mov
ret
sbbb
rolb
xor
lock
lods
in
jg
mov
sub
in
out
stos
outsl
jecxz
dec
cwtl
lcall
mov
inc
dec
xchg
shll
iret
sub
orl
xor
xchg
lret
and
ja
loopne
out
or
std
xor
or
push
mov
pop
cli
or
push
sbb
jns
ds
xchg
loopne
icebp
push
mov
mov
cmp
dec
xor
out
dec
xchg
or
dec
mov
pop
push
push
push
xlat
loop
ds
cmp
fistpll
rdpmc
arpl
xor
iret
outsl
out
or
stc
lock
lock
add
insl
dec
or
sbb
inc
loope
xchg
sbb
scas
mov
dec
into
inc
scas
xchg
stc
jmp
loop
nop
inc
das
push
push
stos
int
andl
dec
mov
adc
imull
loopne
mov
mov
push
push
testl
loopne
xor
fists
dec
push
lods
push
jo
pop
sub
outsl
jb
jnp
pand
cwtl
xor
call
mov
test
push
sub
fmul
shrb
popf
insl
fisttps
inc
in
xor
ret
dec
scas
pop
lahf
into
insl
pushf
add
loope
jbe
xchg
push
mov
jg
add
les
mov
mov
outsl
fstpt
jbe
adc
or
aad
rclb
xor
inc
sbb
leave
sub
or
dec
sbb
call
jle
ja
jge
loopne
jb
pushf
out
dec
xchg
test
xor
std
mov
inc
je
xor
sub
shlb
fistpll
cmp
xor
or
imul
ss
pop
fiaddl
fdivrl
mov
adcb
xor
loopne
or
test
sarb
mov
out
sbb
mov
daa
and
inc
mov
xchg
dec
fists
jecxz
pushf
gs
inc
pop
mov
ljmp
push
xchg
cmpsb
push
aaa
icebp
lods
loope
loopne
mov
mov
mov
or
test
stc
andb
in
push
push
or
lea
jg
js
fistpl
lea
xchg
lds
fistps
adc
rcr
lods
add
rcr
push
mov
and
cmp
lea
in
jb
jb
out
decl
pop
mov
push
push
mov
xor
outsl
ljmp
push
jge
jecxz
mov
das
inc
xor
pop
push
inc
push
jmp
scas
push
repnz
sub
and
stos
xchg
sub
das
cld
incl
push
adc
adc
cltd
pop
cmovs
aaa
push
cld
out
dec
decl
push
or
movsb
test
subl
sub
pop
js
pop
into
ss
jbe
push
mov
inc
sub
popf
stos
bound
mov
cmp
jmp
aaa
mov
test
cmp
fdivrs
rcll
or
add
test
test
bnd
stos
inc
rcrl
jg
pushl
addl
test
loop
and
in
inc
fnstcw
jae
adc
pop
call
inc
pop
sahf
dec
leave
hlt
jge
test
cmp
aam
pop
pop
cmp
push
rcll
dec
sbb
outsl
adc
adc
imul
inc
cmp
sti
mov
push
int
aaa
rcrl
rclb
jp
dec
mov
and
mov
bound
lret
xchg
outsb
sbb
or
stc
cmpsb
fisubs
cmp
and
jecxz
imul
js
out
inc
push
jl
in
fisttps
outsl
mov
in
or
or
inc
daa
nop
xor
lds
pop
outsl
xchg
adc
fisubs
xchg
test
or
or
xchg
adc
add
push
adc
outsb
lock
shr
add
mov
or
pop
rcrb
fstps
mov
fdiv
sbb
imul
mov
subl
movsb
ficoms
or
sbb
adc
add
mov
or
adc
and
add
adc
add
and
inc
inc
dec
pop
lods
xor
inc
push
sbb
add
mov
loopne
loopne
jge
loopne
in
add
dec
hlt
push
xchg
lock
sbb
int
add
popf
lock
mov
sahf
push
lea
in
mov
ljmp
sbb
rolb
sbb
dec
in
aam
mov
xchg
enter
push
sarl
sbb
fnstsw
hlt
and
push
sbb
out
mov
aaa
jno
and
adc
pop
fsubrl
aaa
ficompl
inc
cmp
out
bound
lods
not
dec
inc
sub
hlt
inc
sbb
cmp
jl
sub
add
mov
dec
or
or
mov
outsb
adc
xchg
mov
dec
pop
out
hlt
jae
or
andb
cld
call
jbe
ljmp
shll
loope
aam
js
mov
fldenv
popl
sub
cmpsl
dec
ret
shlb
push
out
jle
or
ds
js
sub
add
iret
add
shl
std
lea
rcrl
inc
mov
fisubrs
rclb
jne
lock
por
or
sub
and
add
lret
xor
pop
cmc
dec
pop
xchg
jo
or
roll
xchg
data16
cmp
in
adc
sbb
stc
dec
loope
lods
clc
loop
mov
jae
dec
shll
mov
cmpsb
cmp
and
ljmp
adc
and
js
inc
icebp
popf
add
add
add
hlt
orl
sbb
jg
pop
les
mov
cmc
aas
and
pop
add
outsb
ret
stc
sbb
les
push
mov
movsb
and
repnz
mov
mov
daa
cmp
das
or
mov
lret
aam
aam
dec
arpl
imul
fistl
sbb
xchg
push
or
inc
inc
daa
jle
mov
sub
cs
push
mov
inc
ljmp
rolb
mov
addb
inc
pusha
xor
pop
xchg
aam
jmp
add
xlat
add
bt
insb
sarl
xor
and
sub
loopne
xor
and
push
jo
ficoml
or
adc
pushf
inc
cmp
and
je
cld
pop
in
pop
push
sbb
hlt
xchg
ljmp
in
xor
sub
and
push
sahf
push
ss
xchg
stos
mov
mov
popa
shlb
mov
call
mov
xchg
pushf
sbb
test
jbe
clc
fwait
push
mov
iret
test
sub
jmp
or
mov
mov
testl
push
pop
adc
stos
mov
andb
int
and
cmpsl
icebp
add
test
jle
xor
pop
stos
adc
cmc
or
nop
mov
or
je
jne
xlat
adc
sbb
popa
cmpsb
mov
imul
xchg
jl
sti
xchg
mov
or
mov
push
shr
mov
fs
in
mov
std
jg
jp
aaa
mov
roll
xor
jno
or
popa
add
jecxz
add
mov
sbb
jns
and
cmp
dec
dec
pop
mov
outsb
insb
adc
clc
call
pop
loopne
and
sbb
and
mov
xor
sahf
lods
shrl
aaa
and
push
fidivrs
imul
pusha
xor
rolb
cli
xchg
mov
and
and
call
fists
rcl
sahf
cmp
ja
inc
lock
lret
pusha
idivb
add
dec
push
mov
clc
daa
xor
add
nop
pop
cld
mov
ss
pop
je
lret
jge
push
jg
movaps
daa
insb
ret
adc
clc
or
inc
lock
imul
sti
lahf
mov
jns
in
or
jg
scas
or
add
xchg
mov
sub
iret
loop
sbb
cs
je
jmp
mov
in
add
cmpsb
and
sub
nop
rol
mov
push
mov
dec
cli
push
mov
js,pt
dec
cld
mov
les
lock
mov
mov
sbb
mov
retw
lock
push
cld
pushl
mov
clc
lcall
cmp
sbb
std
mov
sarb
roll
xchg
cli
aas
or
icebp
stos
mov
or
je
xor
add
pop
imul
js
call
adc
cmp
jg
mov
shlb
rcll
or
adc
jo
aaa
fidivl
inc
xchg
pusha
xchg
or
stc
sub
cwtl
jb
or
enter
pop
dec
cltd
dec
mov
aaa
mov
pop
jns
mov
outsl
fstl
push
mov
mov
ljmp
mov
pop
in
cmp
add
push
call
xchg
faddl
push
sub
mov
in
sbb
push
add
ret
hlt
pop
push
es
push
int
cmp
mov
dec
mov
xor
and
cs
mov
xchg
hlt
add
bound
pop
stc
adc
xor
dec
and
adc
mov
loope
add
daa
adc
mov
arpl
cmp
jbe
pop
push
jp
add
pop
ss
adc
stc
je
mov
stos
mov
testl
ret
movsb
push
gs
inc
xor
or
aad
popf
aam
repnz
and
mov
inc
movsb
or
daa
and
xchg
cmp
dec
testb
popa
int3
dec
mov
or
fildll
lret
shl
and
lret
repnz
decl
add
incl
cmp
leave
adc
cmp
sub
cs
pop
jne
inc
pop
push
dec
insl
fdivrl
adc
push
sbb
stc
ss
data16
outsb
sbb
jl
mov
xchg
push
in
scas
inc
or
pop
xchg
out
mov
rol
ljmp
sbb
pop
mov
jl
icebp
cmp
aaa
add
loop
out
or
xchg
jnp
pushf
jp
jmp
bound
aad
pop
sbb
out
xchg
push
mov
pop
add
punpckldq
xor
pop
sarl
incl
movsb
mov
cmp
in
sbb
mov
ljmp
cld
cmp
or
cltd
test
push
adc
jb
stos
loopne
js
dec
aaa
mov
les
xchg
loop
movsl
or
lcall
shrb
push
aad
incl
inc
int3
add
jno
aam
arpl
sub
ficoms
adc
jno
in
addr16
mov
lahf
jl
ss
jp
cltd
pop
lret
orb
fnsave
adc
repz
int
inc
push
outsl
lock
jecxz
fidivrl
jmp
pop
jmp
fwait
mov
mov
inc
dec
insb
loopne
pop
loope
fdiv
jmp
mov
and
sub
rolb
clc
test
imul
dec
test
add
add
testb
cmp
pop
mov
out
jle
int
push
push
pop
outsl
shrl
fildl
inc
add
xor
and
cmp
mov
test
insl
movsl
jbe
inc
lcall
fsubrs
jnp
fists
pop
imul
mov
sarl
and
test
stos
out
add
mov
mov
push
loop
dec
add
out
mov
or
pop
sbb
dec
dec
xchg
outsl
pop
jg
es
fwait
pop
pop
mov
scas
xor
mov
push
mov
dec
add
in
jbe
mov
add
call
dec
push
inc
subl
jb
pop
enter
xchg
jg
jle
add
lods
icebp
movsl
lret
push
stc
popf
insb
or
idivl
loope
inc
fsubrl
adc
outsl
jg
jb
xchg
scas
or
loopne
and
add
lret
in
sbb
sub
push
insb
add
dec
call
insl
mov
fildl
dec
test
decl
lea
fisttps
pop
dec
sbb
std
sub
neg
or
jbe
lcall
pop
push
insb
or
aaa
fisubrs
call
mov
jnp
mov
ficoml
cwtl
xor
add
jb
or
fists
xor
pushl
sbb
jmp
and
dec
addr16
pop
mov
add
ja
cld
test
add
idiv
adc
ret
clc
xchg
ss
clc
mov
out
leave
inc
hlt
aad
imul
jmp
aaa
mov
or
jle
cltd
iret
nop
dec
sar
js
cmpsl
les
jge
std
mov
fildl
aaa
cmp
inc
inc
shlb
sbb
dec
sub
test
fisttps
adc
and
pop
loopne
sti
sub
andb
ja
outsb
hlt
inc
push
sti
cmp
loope
xchg
and
sti
lcall
and
inc
push
leave
cmpsb
xbegin
adc
addr16
cld
ds
ljmp
insb
insl
dec
insb
out
xor
clc
in
rcll
xor
mov
stos
push
loopne
stos
out
inc
xchg
mov
cmpsb
out
cli
mov
mul
add
je
mov
mov
push
int3
add
mov
fwait
div
add
mov
stc
lret
mov
mov
push
jmp
push
rolb
xchg
arpl
or
fstp
push
or
sti
je
push
mov
in
pop
js
jp
push
add
loop
xor
cmpsb
cli
sbb
xor
cmpb
adc
xchg
sbb
dec
leave
repz
mov
aam
pop
mov
nop
pop
insl
pop
scas
lds
pusha
pop
call
push
and
and
mov
leave
inc
cs
les
xor
lcall
mov
negb
mov
loope
sbb
inc
ret
mov
mov
mov
cli
dec
sbb
iret
rcr
jbe
cs
outsb
loopne
movsl
clc
mov
mov
out
dec
mov
and
mov
insb
in
ss
pushf
or
das
adc
inc
dec
sbb
rolb
sbb
sbb
and
xlat
fsubl
lcall
adc
sbb
inc
adc
sbb
pop
cltd
or
push
leave
cmp
or
sub
pop
xor
jg
push
psubw
lock
pop
mov
test
addb
insb
inc
push
inc
sub
loope
pop
fldl
mov
lock
mov
or
in
xor
scas
mov
pop
sahf
jle,pt
rorl
adc
and
ret
mov
adc
rorb
sbb
inc
ret
mov
aaa
lock
mov
jg
sub
mov
pop
mov
out
repz
pop
push
mov
jmp
out
mov
enter
or
ljmp
cwtl
cmp
xorb
mov
rcrl
push
mov
cmp
cmp
push
push
jle
mov
popa
mov
jnp
mov
jbe
sti
mov
add
add
push
or
push
daa
ss
pop
out
sti
lds
pusha
xchg
or
pop
loope
mov
mov
push
push
idiv
jbe
lcall
testb
iret
pop
and
movsb
ja
jge
pop
cld
aam
int3
jmp
into
xchg
leave
or
jmp
xchg
or
xchg
scas
adc
test
incb
das
scas
mov
and
lcall
and
xchg
addr16
adc
mov
xlat
push
mov
and
inc
pop
cli
out
loopne
lgs
in
mov
lods
jle
xchg
mov
adc
and
inc
or
jg
inc
addr16
dec
call
clc
iret
inc
inc
adc
xor
jp
scas
sbb
in
cmp
cmpsb
mov
sub
mov
mov
sbb
mov
mov
inc
inc
fsubs
mov
adc
pop
ljmp
test
andb
inc
lea
pop
pop
cli
ja
sbb
fs
lock
inc
mov
jbe
lods
jns
jns
outsl
add
imul
and
pop
and
stos
push
lock
cmp
fnstenv
add
sarb
inc
fs
pop
loope
repz
jae
ljmp
push
xor
or
ret
dec
xchg
fidivrl
bndldx
sub
testl
adc
cmc
mov
push
roll
mov
aam
adcb
push
inc
push
shrb
loopne
cmc
push
aas
mov
cmc
dec
sub
es
mov
dec
sub
insb
pop
lahf
add
loope
bound
insb
loope
es
xor
lds
aad
and
test
adc
and
add
outsl
mov
imul
pop
add
inc
mov
xchg
mov
jae
sub
stos
cmp
xchg
jl
adc
pop
push
dec
mov
out
fistps
fidivrl
pop
aas
cmp
loope
decl
pop
mov
push
bound
push
sub
pusha
sarb
and
cld
mov
lret
scas
mov
sub
fildll
sbb
pop
das
enter
mov
sbb
dec
orl
loop
into
xor
xor
sbb
or
sub
push
outsl
add
push
pop
mov
or
out
fisubrl
insl
adc
and
fisttpl
inc
ret
aaa
gs
and
popf
pop
cmc
inc
sahf
and
test
decl
int3
cmpsl
dec
cmc
sub
stos
stos
das
mov
pop
mov
repz
js
jbe
je
out
mov
loopne
hlt
mov
push
or
jne
adc
and
inc
sbb
inc
mov
sbb
sbb
or
into
outsb
jcxz
or
mov
mov
sbb
mov
jne
add
fisttpll
lret
icebp
ret
icebp
push
incl
aaa
pop
jnp
mov
push
stos
xor
sbb
out
sbb
ss
fldt
and
std
in
push
lret
mov
movsl
call
adc
sub
ret
lret
add
jl
cli
add
aad
lret
dec
pop
xchg
xchg
mov
cli
imulb
stos
adc
mov
dec
cld
sbb
aad
loop
and
dec
and
sbb
rolb
iret
mov
cmp
hlt
pop
sub
cmp
or
dec
push
xor
mov
or
mov
hlt
es
mov
push
shlb
or
sbb
xor
test
nop
adc
dec
jnp
lock
inc
jle
mov
les
dec
clc
and
inc
scas
jge
sub
sti
mov
jo
mov
pop
push
jge
xor
pop
loope
fildll
jle
dec
adc
fsts
cmc
add
adcb
js
mov
adc
jno
xchg
push
hlt
scas
rclb
push
sahf
nop
das
ror
xlat
adc
inc
pop
cmc
incl
ss
jecxz
sti
sub
pop
mov
mov
mov
js
ficoms
popf
dec
push
or
jne
xchg
mov
fwait
movsb
lahf
xlat
lret
and
sbb
ljmp
mov
mov
push
dec
mov
stc
jbe
cli
scas
aad
bound
adc
mov
add
dec
into
icebp
aad
mov
ljmp
add
cs
loopne
mov
mov
mov
cmp
aas
pop
jge
outsl
lock
mov
cltd
sbb
ljmp
fdivs
inc
jne
jb
adc
lock
sbb
push
push
insl
pop
mov
or
pop
sub
iret
pusha
jle
loope
mov
inc
test
mov
mov
add
je
adc
pop
add
and
loopne
jae
sub
inc
neg
cmp
je
aad
add
shlb
mov
in
mov
cmc
adc
orl
ja
push
xor
xchg
gs
jne
repz
lock
xchg
movb
insb
mov
lods
and
dec
add
sub
mov
pusha
sub
inc
lock
pop
push
clc
flds
pop
push
pop
and
test
pop
ja
pushl
aad
add
dec
push
repnz
fnstcw
js
daa
or
mov
and
and
xchg
dec
pop
iret
je
inc
xor
lcall
and
cli
rcrb
call
fwait
cmpsl
mov
clc
dec
aam
and
out
sarl
jnp
rcrb
cmp
addl
and
jmp
popf
mov
cmp
jle
jae
mov
cmp
decl
pop
cmc
popf
inc
mov
sbb
scas
cltd
xor
xchg
dec
cmp
add
jno
mov
lea
or
mov
xchg
cli
sbb
fbld
and
ljmp
stc
bswap
xchg
daa
lods
dec
lret
decl
sub
inc
iret
cmp
or
in
test
or
jl
test
das
cltd
clc
jp
scas
and
sbb
push
mov
push
mov
pop
dec
popa
call
cmp
out
stos
das
iret
lahf
test
pushf
ja
xchg
or
ljmp
mov
out
notl
jmp
rclb
push
ret
shll
sbb
push
dec
cmc
mov
jb
iret
jg
imul
mov
jmp
jo
xchg
add
arpl
adc
and
or
lods
and
and
and
loop
incl
add
xchg
loope
call
mov
lret
insb
inc
loop
jg
movsl
divb
sub
cmpsb
dec
mov
pusha
shlb
loopne
mov
imul
rorb
xchg
lea
xor
incl
insl
inc
adc
rol
or
aam
push
lock
cmp
push
gs
gs
sar
inc
mov
push
add
pop
add
insb
icebp
in
pushl
sbb
and
arpl
push
flds
icebp
scas
mov
inc
pop
push
fldenv
outsb
xor
dec
movsl
nopl
adc
mov
stos
in
decl
cmp
outsl
loop
sbb
xchg
and
jne
ret
int
mov
lock
xchg
rorb
test
loope
mov
mov
xchg
fildll
enter
dec
fadd
insb
xor
outsl
cli
sbbb
sub
mov
addr16
push
pop
cli
pop
scas
cmpsb
lahf
mov
mov
lea
dec
in
sbb
ljmp
fs
dec
pop
shl
loop
leave
ds
movsl
add
aad
rclb
fisubrl
in
or
push
or
sub
in
jge
shl
das
inc
cltd
aad
pushf
out
mov
std
jecxz
cmpsl
ljmp
mov
rcll
loope
aad
mov
stos
push
mov
cwtl
mov
xchg
sbb
scas
xor
jg
insl
loope
lods
into
mov
ret
xchg
lds
jp
mov
call
pop
shll
fisubrl
jp
in
adc
fisttpll
add
mov
loope
xor
sub
in
pushl
push
push
push
bound
push
inc
jb
imul
xor
and
ffreep
mov
call
mov
adc
std
or
or
mov
loopne
adc
nop
fwait
les
jbe
and
daa
xchg
das
xchg
scas
mov
arpl
jbe
and
je
notb
xor
cmp
mov
es
nop
je
movsl
dec
cmp
aaa
cmpb
xor
xor
stc
and
pop
addr16
and
jo
sbb
lfs
ret
pop
stos
cs
ja
test
mov
nop
fldt
repz
fldt
lret
cmp
dec
push
sbb
jg
or
aaa
dec
dec
or
incl
ret
adc
sbb
in
or
cmp
daa
movsl
fwait
jp
inc
xor
in
repz
add
mov
push
sbb
sbb
jge
repz
add
shrb
and
dec
leave
inc
sub
jbe
out
ljmp
sbb
call
xchg
push
add
in
and
mov
mov
jle
jle
pop
ja
sbb
adc
test
mov
pop
arpl
mov
add
hlt
adc
jo
jne
test
sub
int
outsl
insb
aad
add
inc
dec
push
cmp
enter
cmp
insb
in
inc
stos
aaa
ficoml
cltd
dec
mov
movsb
lods
cmp
mov
pop
ficoml
ss
movsb
enter
fs
sub
decl
dec
into
or
pushf
or
pop
or
and
fwait
cli
pop
lea
push
mov
mov
mov
sbb
nop
aaa
xchg
lcall
loope
dec
lret
jo
dec
jo
dec
mov
outsl
jns
addl
icebp
dec
mov
dec
jg
inc
xchg
hlt
lahf
lret
cmp
add
and
imul
add
mov
jle
lcall
jp
mov
es
inc
rcrl
test
in
add
push
test
rcr
push
adc
mov
mov
lea
idivl
and
insb
fisttpll
cmp
and
sbb
loop
std
iret
insl
test
sbb
dec
xchg
jle
int3
ss
xchg
outsb
das
addr16
aam
insb
mov
fadds
mov
ljmp
jl
cmp
sbb
xor
movsb
mov
es
int3
out
jb
in
es
pop
add
mull
in
lock
mov
fistl
xchg
shlb
push
jg
in
pop
and
push
clc
jl
or
gs
add
test
and
js
jle
mov
xchg
and
aaa
lods
jg
mov
adc
push
and
cltd
sbbb
fdivrs
dec
jg
push
movsl
imulb
fdivs
out
or
sub
xor
sbb
push
data16
std
pop
xor
push
rcrb
or
sbb
pop
pop
push
enter
and
mov
stos
cmp
in
dec
ljmp
mov
mov
popf
pop
call
mov
scas
pop
or
incl
out
rcrb
inc
adc
enter
xor
sub
push
jg
ja
xchg
xor
xchg
mov
shrb
mov
adc
adc
inc
mov
and
fldl
jg
addr16
cmp
cmp
mov
push
pop
push
test
pop
push
push
pushl
mov
lock
fiadds
jns
sub
aaa
sub
loop
inc
ss
enter
popa
mov
jmp
fcmovbe
loopne
add
push
imul
xor
sarb
in
cmc
fldl
xchg
cmp
adc
xor
jg
ljmp
jb,pn
xchg
adc
xchg
clc
dec
xchg
repz
je
int
mov
jp
mov
jmp
pushf
mov
or
xchg
sub
jo
or
push
lcall
dec
dec
jno
pop
jle
mov
mov
adc
add
aam
or
call
fcmovb
sarl
test
cmp
adc
mov
adc
dec
out
nop
sub
ss
cltd
sbb
testb
shll
scas
push
sbbb
call
dec
sbb
jle
push
sahf
pusha
adc
pop
daa
js
inc
jb
jecxz
cmp
es
in
les
icebp
cmpsb
hlt
clc
lds
decl
add
xor
push
dec
cwtl
outsb
aad
ss
les
lods
add
mov
les
jp
mov
sbb
ss
adcb
inc
xor
push
shrl
fdivrs
sbb
sub
push
adc
sub
or
add
fnsave
push
rorl
addr16
pop
add
sub
adc
or
out
and
adc
mov
jae
inc
push
pop
mov
shlb
xor
jno
add
push
int
sub
cltd
fisttpl
test
loop
mov
jl
and
xchg
push
addr16
mov
pop
into
cld
or
and
inc
adc
bound
mov
les
adc
pop
add
or
lock
dec
shll
and
lods
movsl
lea
fmuls
jo
jge
in
les
in
test
inc
add
push
aam
fadd
or
inc
xor
ja
inc
xchg
dec
sti
cmpsb
push
imul
lahf
fdivl
test
arpl
in
pop
test
lock
inc
ja
and
out
sahf
mov
jg
cmp
test
sbb
inc
test
pop
dec
cmp
stos
hlt
add
hlt
faddl
pop
xorb
ss
sbb
add
pop
loope
pop
jo
sub
dec
fldl
rcrb
icebp
add
sub
jg
adc
xchg
push
cmpsb
xchg
lds
mov
inc
inc
stc
mov
jg
clc
pop
or
inc
cmp
dec
pop
jb
andb
adc
add
pop
cmp
cmp
incl
jp
or
in
ficoml
add
ret
jae
bnd
in
pop
dec
or
inc
and
jb
mov
outsl
pop
pop
fistl
test
out
adc
push
popa
subb
cld
lea
dec
dec
sbb
mov
mov
cli
rorl
inc
and
cmp
mov
pop
enter
fdivrl
decl
add
fcomi
test
sbb
stos
call
pop
into
push
mov
iret
out
push
inc
scas
mov
mov
push
inc
or
and
cs
inc
push
outsl
fsubrs
mov
inc
push
or
xchg
out
ja
test
stc
out
mov
mov
int
sub
push
decl
pushl
adc
mov
or
iret
ds
xchg
std
decl
inc
daa
fimull
mov
rorb
pop
and
dec
inc
xchg
cmp
mov
lcall
and
pop
pop
mov
in
fcmovnu
outsl
cmc
enter
mov
mov
xor
arpl
jnp
jo
out
or
lock
fistps
jge
jge
ljmp
cli
jmp
ds
add
mov
dec
jmp
stos
or
js
pop
pop
insb
adc
push
push
add
push
mov
rcrb
loope
sbb
ja
lds
stos
in
mov
mov
loop
test
sub
add
ja
sbb
ret
push
je
push
sbb
and
jle
sub
mov
popa
add
pop
insl
dec
or
in
add
test
rolb
xor
pop
icebp
ljmp
inc
dec
jae
xchg
pop
add
pop
inc
and
insl
cld
mov
aad
lcall
gs
in
nop
xchg
outsb
call
dec
movsl
vmwrite
cmp
inc
hlt
and
sub
loop
mov
clc
jg
je
fcmove
inc
insl
test
insl
or
lock
or
mov
aam
adcb
and
push
outsl
mov
adc
js
push
ja
inc
pop
daa
bound
out
and
add
lds
aam
xor
repnz
add
outsb
mov
imul
data16
lock
pop
mov
outsb
insl
cmp
movsl
mov
cmc
sbb
sub
arpl
pusha
mov
push
adc
sbb
sub
ljmp
in
test
dec
dec
mov
ds
sbb
mov
xlat
push
lahf
add
insl
ret
or
xor
mov
adc
adc
mov
jno
add
adc
scas
pop
or
aas
rorl
repnz
rorb
mov
rorl
mov
cmp
jnp
loop
push
add
test
xor
mov
jp
loop
add
fsubrs
lock
pop
outsb
call
sub
push
xor
and
xor
cmp
fs
jle
pop
arpl
clc
sbb
xchg
xor
mov
inc
xor
jg
test
into
test
shlb
cmp
movb
mov
nop
dec
cltd
and
push
stos
pop
cmp
dec
add
ret
stc
mov
and
vmovapd
inc
adc
jg
push
je
xchg
pop
mov
lock
sar
and
xchg
popa
clc
daa
aas
cmp
ficoms
adc
sub
or
mov
lods
adc
add
in
inc
or
mov
push
pop
popa
add
lock
mov
daa
push
xor
mov
mov
aam
maskmovq
notl
stos
cltd
or
sbb
sub
inc
mov
sbb
adc
dec
jmp
push
fdivrl
jmp
addr16
ficoml
sbb
sbb
jb
xor
shl
inc
pop
stc
push
ret
mov
or
push
mov
push
or
mov
scas
out
inc
xorl
ss
subb
push
decl
testb
cmpl
lock
cli
and
mov
insb
loop
add
out
std
imul
fdivr
xor
fsubrl
xor
iret
adc
jb
and
sar
xor
dec
addr16
incl
pop
xorl
mov
fists
push
xor
xor
and
cmp
xlat
inc
add
nop
fbstp
cs
ret
jb
sub
xor
in
or
or
add
scas
and
push
add
or
or
and
stos
ja
push
xchg
add
dec
ret
add
inc
ror
int3
ljmp
add
es
shlb
adc
add
rol
push
sbb
xor
push
mov
in
mov
adc
lret
outsb
pop
repnz
or
and
pop
mov
adc
jb
mov
pop
sar
sub
push
jmp
cmp
call
xchg
out
sbb
jle
push
pop
sub
add
ret
jnp
adc
add
dec
rolb
test
int
mov
or
jecxz
enter
pusha
aas
test
les
int3
pop
mov
call
xchg
pop
pop
in
sbb
inc
cmp
or
stos
loop,pn
push
push
mov
call
adc
out
push
push
nop
push
ljmp
push
pop
push
jnp
scas
jb
and
std
and
lea
inc
inc
push
mov
leave
daa
ds
mov
xor
ljmp
pushf
dec
mov
cwtl
das
cld
push
xor
push
aad
mov
imulb
lcall
mov
shll
mov
sub
or
mov
movsl
movsb
outsb
push
or
xor
push
or
xorl
iret
pushl
lods
xchg
pop
mov
ret
or
sbb
adcb
sub
stos
fsqrt
mov
add
pop
cmp
sub
ja
mov
push
leave
pop
xlat
in
adcb
push
add
cmp
xchg
or
dec
mov
xor
add
and
xor
lret
adc
ss
xchg
aam
fwait
jo
push
pop
push
inc
sub
pop
sahf
jno
jecxz
and
test
iret
pop
xor
xchg
jg
les
in
sbb
cmp
jne
fs
cmp
call
ljmp
aas
fdivs
fdivrl
rolb
inc
cmp
xchg
jb
push
pop
push
aam
frstor
mov
push
movsb
insb
shr
inc
mov
orl
loope
jge
jno
dec
sbb
dec
inc
in
adc
test
cmp
fimuls
data16
mov
or
push
aad
xchg
add
je
aad
adcb
jbe
aad
sub
lret
lods
adc
inc
add
iret
inc
cmp
loopne
pop
icebp
rcl
pop
mov
mov
cmp
cs
inc
jecxz
mov
das
sbb
sub
fadd
jo
or
adc
push
dec
add
xchg
sbb
add
add
or
jp
add
and
and
test
ret
add
dec
imul
in
pop
xor
push
das
imul
or
testl
add
xlat
sbb
xor
aad
push
dec
enter
mov
addl
lahf
inc
pop
cmp
call
mov
xor
inc
shlb
out
jnp
mov
ljmp
aas
or
add
mov
lods
mov
in
pop
les
and
pop
add
insl
jp
mov
aas
stos
pop
aaa
push
pushf
sub
inc
sarb
push
sub
push
arpl
jge
test
iret
push
int3
fsubl
aad
test
jp
and
insb
pop
cmp
cltd
enter
lock
out
add
fisubl
sbb
mov
aam
sbb
xchg
popl
insb
test
cmp
push
jl
dec
sbb
mov
mov
shrl
push
sbb
mov
mov
sbb
adc
jbe
rcll
add
rorb
dec
dec
clc
adc
roll
adc
push
pop
arpl
adc
or
or
and
pop
mov
test
mov
jg
sub
mov
and
xchg
mov
add
cli
rorb
sti
ds
popf
add
or
inc
shlb
pusha
sbb
daa
mov
or
sahf
flds
ljmp
imul
jbe
add
adc
fimuls
mov
dec
xchg
cwtl
aam
or
loop
hlt
jb
or
xchg
xor
icebp
cmp
cmp
test
dec
mov
xor
sbb
lret
mov
add
xor
cmp
fdivrs
repnz
sbb
pop
jmp
or
jae
les
push
fnstsw
lea
cmp
sbb
xlat
jb
cmp
pop
add
xor
lds
into
add
aaa
sub
out
and
icebp
inc
test
jae
stc
call
ret
sub
or
adc
mov
not
xchg
loope
rcrl
adc
dec
int
mov
or
push
sub
pop
mov
aaa
jo
cs
push
mov
mov
adc
inc
push
lret
adc
cs
jg
es
repnz
das
jl
dec
test
shlb
test
push
iret
inc
jo
les
aad
daa
call
in
imul
or
inc
xor
ljmp
cmpb
outsl
inc
cmp
dec
or
adc
dec
xlat
aaa
orb
lds
inc
loop
cmp
dec
subb
mov
out
push
ret
adc
pop
shlb
sub
and
test
fidivrs
and
sbb
lock
out
pop
mov
mov
int3
bound
lret
mov
dec
adc
inc
add
ja
cmpxchg
fcompp
lods
add
fistps
adcb
dec
add
ret
sub
pop
mov
jl
fcoml
pop
push
push
ds
xchg
push
fdivrs
lahf
or
lods
bound
inc
adc
ret
mov
cmp
mov
jnp
shl
sub
insl
xchg
cwtl
lock
jecxz
lds
nop
adc
in
jp
add
std
js
sbb
sub
push
jne
mov
and
pop
iret
mov
xor
cmp
push
xchg
adc
and
sbb
scas
mov
mov
mov
push
or
ljmp
loopne
sbb
pop
add
lahf
add
xor
loopne
jae
xor
rclb
dec
lcall
arpl
mov
sub
cmp
or
pop
jbe
sbb
test
es
or
lcall
mov
cmpsb
ja
pop
in
adc
scas
ss
sbb
sbb
inc
enter
cmc
lea
pop
mov
cwtl
push
add
mov
lds
sbb
xchg
mov
sub
lods
mov
lcall
bound
xor
clc
mov
xor
mov
inc
in
xchg
pop
sub
loopne
or
sub
jb
popf
xor
test
sub
sub
xor
cmpsb
ret
adc
out
ficoms
push
mov
inc
sub
lea
cwtl
mov
subl
fistps
push
aas
pop
pop
neg
pop
outsl
pop
push
lds
sbb
sar
orb
dec
or
sbb
loop
mov
sarb
mov
jne
loope
ret
add
lds
push
xor
mov
push
lahf
push
out
cmpsl
js
sarb
loope
jmp
jae
cltd
xchg
mov
repz
push
add
push
dec
cwtl
pop
jnp
out
iret
lcall
out
int
cmp
negb
pushf
or
fmul
and
and
sbb
ret
sub
pusha
push
push
adc
jge
mov
mov
test
mov
pop
loopne
mov
sbb
xchg
push
lret
xchg
cmp
mov
sbb
sahf
add
pop
fwait
xor
jmp
push
jnp
stos
xor
das
mov
xlat
dec
std
lock
sub
roll
ret
adc
int3
in
incl
and
and
or
mov
lds
xlat
test
nop
jmp
out
mov
repz
addb
inc
mov
aas
inc
popa
ret
popf
jl
push
inc
lock
inc
push
adc
pop
add
pusha
or
cmp
jb
dec
cli
or
dec
pop
lock
das
xchg
stc
sti
adc
loope
sbb
cmp
push
push
shl
lcall
cmp
xor
arpl
xor
les
pop
add
dec
add
subl
or
xchg
loopne
push
add
xlat
out
daa
pop
push
testl
testb
mov
sbb
inc
pop
shl
shrb
es
cmp
cli
dec
jl
addl
pop
jg
mov
adc
dec
clc
faddl
lcall
loop
mov
testl
add
inc
sub
add
jmp
adc
scas
in
jge
outsl
gs
add
dec
jo
fdivrl
xchg
xor
repz
dec
mov
mov
popa
mov
test
dec
in
sub
and
subb
sub
sbb
dec
ljmp
adc
add
mov
leave
notl
inc
cwtl
outsb
and
mov
mov
cmp
and
mov
movsb
ret
or
pop
push
movsl
push
or
cli
jbe
aam
adc
ja
loopne
mov
or
add
pop
ret
test
ret
test
pop
push
aam
push
jmp
flds
inc
in
and
lock
cltd
rcrb
or
xchg
adc
pushf
or
pushf
adc
outsb
adc
shll
and
test
inc
and
jno
hlt
fisubs
push
mov
adc
fists
xor
faddl
orl
es
mov
mov
fsubrl
into
add
popf
cwtl
lock
sbb
cmp
iret
stc
add
arpl
out
add
or
dec
xchg
add
add
orb
add
jnp
ja
ljmp
lds
xchg
mov
adc
inc
mov
xor
int
rcrl
push
test
jbe
stos
sti
shrb
sub
loopne
xor
jbe
shll
and
sub
add
leave
movsl
les
cmp
fstpt
daa
cmp
clc
push
mov
xor
aam
dec
sub
pop
shrl
jno
cmp
bound
push
rorb
sbbl
fisttpl
add
or
mov
push
cmp
shlb
mov
test
xchg
and
sbb
sub
xchg
jp
ds
lcall
xchg
mov
sahf
rcll
jge
ret
dec
push
flds
and
sbb
mov
loopne
or
cmp
insl
shlb
adc
mov
jle
adc
mov
bnd
inc
loopne
pop
cmpsb
add
or
fs
inc
xchg
popf
pop
fisubs
xor
faddp
jecxz
aaa
mov
fwait
or
scas
in
movsb
adc
dec
aam
adc
loopne
add
or
or
lock
and
ficoml
lcall
mov
push
cmpsb
movzwl
cs
add
dec
xor
arpl
adc
pop
test
jb
into
inc
nop
sub
movsw
es
sub
xchg
sub
call
pop
sbb
cld
mov
and
insb
scas
mov
inc
jp
leave
push
lock
add
inc
test
repnz
adc
ret
cmp
into
les
or
out
into
xorb
or
sub
sbb
add
es
inc
mov
add
mov
jp
or
aad
icebp
mov
add
push
imul
dec
cli
imulb
addr16
jge
xchg
les
add
bnd
rcrb
aam
adc
xchg
aam
bound
xchg
cmpsb
and
sbb
pop
xor
test
sbb
xor
repnz
rcrb
and
pop
fdivl
inc
xchg
mov
xor
inc
sete
cmp
jbe
cmp
rcl
out
add
push
mov
lods
fisttps
jo
add
cwtl
stos
es
push
adc
adc
sub
or
sub
sub
xorb
add
jo
mull
mov
imul
mov
inc
scas
ljmp
sbbl
imul
sub
mov
sbb
dec
inc
cmp
jns
xor
movsb
add
enter
dec
mov
xor
scas
and
mov
or
pop
jecxz,pt
dec
add
int
gs
cmp
pop
ss
ret
les
int
sub
mov
lock
mov
lcall
shlb
roll
inc
hlt
data16
cld
xchg
test
fcomps
jg
inc
push
cmp
jbe
mov
cmp
sub
lods
push
out
add
mov
jbe
add
adc
push
add
inc
popl
adc
sahf
xchg
movsb
rcll
push
cmp
inc
mov
cmp
insl
mov
add
fistpll
aad
or
adc
mov
jbe
cmp
movsb
xchg
shrb
xor
xchg
jl
addl
sahf
add
ss
jg
sub
xor
and
pop
in
cltd
mov
xor
sbb
cmpb
sub
sbb
mov
mov
dec
push
add
xchg
dec
jno
outsl
sbb
push
mov
adc
ror
out
cmpsl
pushf
inc
clc
scas
aam
shl
mov
jbe
cmp
mov
jae
ds
ficoml
call
sub
jo
or
add
add
pusha
js
dec
adc
arpl
idiv
mov
gs
mov
lock
pop
es
rcl
lds
or
xor
je
add
repnz
movsb
xor
mov
roll
inc
sub
inc
xor
addb
cld
popf
mov
pop
mov
inc
pop
outsb
add
inc
add
add
cmp
out
inc
adc
ret
mov
shrb
sub
mov
sbb
push
add
push
daa
in
gs
lock
inc
dec
mov
push
sbb
pop
add
sbb
or
and
push
sbb
adc
ret
lret
clc
xor
add
add
loope
mov
rolb
xchg
add
loopne
lea
fdivl
add
push
ja
or
and
mov
push
movb
int
push
insl
fdivrl
cmp
add
pop
test
out
insb
lds
mov
dec
popa
into
push
jmp
shll
mov
test
adc
and
dec
and
sbb
stos
or
fidivl
mov
add
jp
xor
popf
lods
mov
jg
adc
push
inc
inc
mov
add
stos
test
rorb
jecxz
xchg
dec
sub
mov
jmp
jbe
mov
xor
xor
cmp
fsubl
outsl
push
add
and
xorb
aad
inc
outsb
andl
adc
sbb
negl
rcrb
and
add
or
scas
dec
shr
pop
data16
and
and
mov
divl
adc
adcb
leave
add
data16
stc
sbb
mov
or
xor
pop
incl
arpl
dec
add
inc
sar
pop
inc
cmp
sbb
and
mov
sbb
scas
push
dec
test
int
pop
inc
test
jo
mov
mov
jb
adc
push
mov
mov
sti
out
lock
dec
imul
mov
outsb
iret
inc
dec
shlb
js
inc
jge
adc
and
cld
mov
jmp
xchg
dec
loop
sbb
and
dec
sbb
and
addl
insb
mulb
aas
fmulp
test
in
ss
add
call
arpl
daa
dec
lods
les
or
sbb
aam
mov
cmp
in
xchg
lcall
loop
or
jp
andb
inc
fists
pop
test
fbld
es
sub
sbb
mov
xor
lcall
sub
push
mov
lea
lods
data16
mov
and
pusha
jmp
add
mov
fisttps
cld
or
int3
bound
add
mov
jne
adc
test
aaa
jmp
gs
loope
aam
cli
cli
aam
das
and
loopne
popa
adc
jmp
add
push
jo
adc
push
outsl
out
outsb
inc
and
fdiv
jmp
or
test
mov
popa
sbb
sub
cmp
sbb
and
add
sub
sahf
add
adc
popa
push
scas
enter
sbb
mov
rorb
cmovo
test
sbb
adc
aas
pushf
lock
push
cld
in
dec
fsubr
imul
push
outsb
add
inc
pop
loopne
out
stos
cmovs
inc
adc
or
repz
stos
pop
push
sub
sarl
pop
xor
movsb
adcb
icebp
or
bound
stos
and
sbb
xor
sbb
xor
sub
repz
dec
cld
mov
fwait
orb
xchg
push
clc
and
mov
push
out
nop
cmc
and
daa
adc
sbb
xor
pop
mov
adc
cli
push
loope
cmpsb
lahf
mov
cs
and
jmp
ficoms
jno
sbb
push
mov
cs
inc
bnd
sbb
ljmp
test
ret
std
cmp
push
aas
or
test
jp
btr
nop
fldcw
add
fmull
or
jns
fs
jns
adc
fldenv
and
mov
xor
xchg
mov
mov
scas
loopne
inc
mov
jmp
sbb
pop
xor
rolb
add
mov
inc
les
or
pop
in
jb
in
mov
shrl
das
cmpl
xchg
xlat
int
dec
scas
aaa
xorb
push
sbb
lcall
jb
adc
pop
adc
sub
sub
add
push
fisubs
out
pop
and
mov
jecxz
icebp
sbb
push
jo
xor
sbb
popf
addb
adc
faddl
clc
xchg
icebp
mov
addr16
xor
subl
mov
std
inc
je
push
cmpsb
aam
push
xchg
adc
test
leave
jne
mov
leave
xchg
movsb
mov
or
and
and
lea
mov
push
push
sub
outsl
sbb
shll
jg
ljmp
cli
cmpsl
cmp
mov
scas
ljmp
adc
stc
adc
sti
pushl
sub
cmpsl
push
outsl
sub
pop
mov
jmp
mov
cmp
mov
jmp
xor
add
adc
adc
xchg
jnp
push
jo
push
fistl
es
rcll
push
js
dec
cs
jmp
iret
scas
xchg
lods
dec
jne
imul
cmp
and
ja
add
sar
rorb
add
mov
or
sub
into
addb
insl
lock
in
xchg
inc
push
fsubl
into
cmp
fdivrl
pop
hlt
rclb
daa
xorb
popf
push
pusha
je
inc
xchg
in
adc
lcall
shrl
or
and
jecxz
cwtl
ficoms
inc
add
sub
enter
cli
inc
push
add
data16
int3
or
push
loop
rorb
jle
das
sub
stos
int3
sbb
adc
push
lock
stos
and
sub
pusha
add
or
test
dec
jle
sbb
adc
adc
cmpb
test
jg
rorl
or
and
in
or
vmptrld
add
call
push
jmp
scas
xor
mov
add
cs
adc
add
push
adc
mov
jns
and
gs
cmp
or
int3
fxtract
movb
sbb
xor
pushf
push
xchg
push
xchg
enter
mov
enter
mov
mov
stos
dec
sbb
call
aad
adc
push
sbb
inc
call
sarl
insb
mov
rclb
cli
aas
aad
mov
add
sub
daa
stos
fcomps
ja
dec
in
xchg
call
mov
enter
push
sbb
and
mov
lret
sbb
pop
push
adc
push
mov
push
inc
jo
xchg
enter
add
fisubs
xchg
shlb
pop
shrl
adc
jl
mov
add
aam
push
inc
mov
popf
ret
push
or
inc
push
shrl
cld
cmp
or
or
add
inc
jge
mov
pop
mull
lods
subl
shr
adc
add
xchg
call
push
add
mov
cmpsb
test
adc
add
dec
mov
ret
push
and
iret
pop
sub
or
insl
je
push
test
outsl
jnp
inc
popa
lds
and
pop
leave
add
push
add
daa
add
jmp
loope
pop
cmp
cmp
push
push
test
int
js
fistpll
cltd
pop
xor
and
jbe
clc
lahf
inc
push
xor
mov
or
xchg
mov
sbb
and
add
fldenv
popf
pop
adc
mov
notb
imul
dec
scas
dec
repz
cmp
push
sbb
sbb
inc
cwtl
addb
out
sbb
ror
shll
sbb
jge
or
loope
dec
sbb
sub
xchg
sbb
les
xor
jmp
push
pop
cld
incb
out
mov
pushf
mov
adc
xor
test
ret
xor
cld
inc
sbb
or
call
in
and
and
sub
mov
push
jecxz
adc
cld
mov
in
xor
pop
adc
and
std
add
add
pop
sbb
inc
clc
push
ja
mov
les
out
pop
shlb
shll
in
jecxz
mov
mov
adc
push
int
mov
aad
inc
fwait
jge
addr16
or
dec
mov
std
xchg
pusha
jns
sbb
add
inc
cmp
sarb
jns
inc
push
pop
lahf
sbb
dec
sub
or
in
movsl
pop
lcall
stc
loope
dec
inc
push
push
iret
popf
cld
cld
stc
and
mov
loope
mov
js
or
idiv
sbb
popf
and
into
xchg
and
fcmovnb
mov
jle
das
add
insb
xor
clc
les
loope
mov
fcmovnbe
int3
add
cmp
jmp
mov
data16
xor
jp
mov
gs
push
xor
cmp
jnp
js
inc
mov
add
stos
shrl
inc
xchg
mov
rcrb
leave
mov
cld
mov
or
mov
jmp
and
mov
ja
inc
insb
je
cmp
popf
ret
rolb
push
mov
popaw
test
and
pop
mov
cld
inc
rorl
xor
in
cmp
or
jmp
roll
cmp
inc
jbe
push
hlt
lcall
mov
cmp
mov
push
push
lret
addr16
xchg
add
addb
stos
insb
push
and
inc
outsl
adc
add
sub
xor
inc
jecxz
or
mov
inc
mov
mov
push
jmp
test
lahf
movsb
pop
pop
add
xchg
push
mov
cwtl
aaa
dec
lods
icebp
push
cld
sbb
inc
test
push
repnz
std
fs
or
outsl
rcrb
lret
push
cmp
sti
pop
lds
push
scas
call
push
sub
add
sbb
and
leave
add
push
sub
push
fimull
clc
ljmp
sub
adc
add
pop
lret
push
pop
movsl
mov
dec
cmp
pop
aas
adcb
jecxz
ss
lea
sti
lcall
bound
xchg
and
and
pop
and
pop
or
popf
dec
dec
cmp
nop
mov
lcall
or
cwtl
sub
data16
sti
jo
xchg
mov
dec
adc
sbb
jl
lcall
sbb
sub
sar
rorl
xor
outsl
lock
mov
les
inc
mov
mov
xchg
ret
sub
dec
ljmp
icebp
mov
mov
in
jo
mov
movsb
lea
les
xorb
mov
jp
jne
addr16
inc
mov
fmull
cmc
out
adc
sti
jge
add
inc
popa
xchg
notb
adc
add
test
bound
dec
sub
dec
mov
or
clc
popa
add
cwtl
fidivl
iret
mov
jbe
addr16
loop
inc
test
out
or
iret
cmp
mov
push
in
and
pop
push
xlat
sbb
ds
inc
addb
xchg
xor
pop
push
repz
sbb
pop
lods
adc
into
rorl
add
stos
dec
inc
adc
cmp
sub
dec
pop
imul
sbb
daa
xor
ror
js
add
das
pop
repz
sbb
mov
cmp
fstl
frstor
loop
jl
sub
push
adc
pop
or
mov
add
aad
xor
mov
adc
mov
sbb
push
jo
mov
push
xor
aas
push
sbb
fisttpl
fs
into
les
or
sub
lea
stos
aam
mov
cmp
mov
add
pusha
dec
xchg
or
popf
inc
mov
push
add
mov
mov
cmpl
xchg
mov
mov
jge
sarb
ret
inc
and
add
repnz
push
cmc
xchg
repz
adc
mov
sbb
mov
cmp
add
xor
xor
mov
push
loop
or
aam
inc
push
xor
xchg
adc
out
sbb
push
adc
push
xchg
test
ficomps
add
add
xor
or
sbb
dec
push
pop
stos
lods
or
loop
dec
push
mov
adc
xor
test
jb
fisubs
mov
dec
mov
dec
mov
pop
fiaddl
inc
into
cmp
iret
inc
jge
mov
sub
push
and
mov
sub
pop
dec
push
xchg
mov
mov
or
repnz
sbb
insb
pop
push
mov
xchg
push
jne
sti
xchg
inc
sub
and
push
rclb
sub
or
stos
mov
sub
push
push
into
in
xor
cmp
int3
shrl
or
mov
addb
mov
sbb
lcall
inc
dec
jp
or
es
dec
or
lcall
insb
mov
push
in
mov
test
push
roll
mov
insb
aas
cmp
mov
jmp
scas
mov
jno
xchg
inc
adc
add
dec
fstp
or
filds
shll
jnp
insb
xchg
fwait
testl
or
jbe
and
cld
push
xor
sar
out
loopne
xchg
jl
out
scas
xor
aam
dec
push
push
out
mov
add
xor
xor
movl
dec
add
call
orb
jae
insl
adc
lcall
movsb
sub
stos
std
lcall
jg
sahf
and
movsb
ljmp
xchg
cs
dec
jb
jg
pop
test
pusha
dec
add
jg
jo
pop
pop
std
lea
jmp
bound
and
and
ds
mov
add
add
outsb
and
das
icebp
cmp
xor
sbb
push
lcall
std
aaa
popf
add
aas
xchg
rolb
int3
push
xor
packuswb
push
jg
loop
mov
repnz
jb
pop
js
push
add
push
dec
pop
xor
push
sbb
and
test
and
pop
add
push
in
int
movsb
or
call
cld
xor
loope
dec
cmp
pop
sub
fldenv
repnz
or
pop
enter
sub
add
popa
addb
jg
xchg
lret
add
stos
and
ja
adc
mov
rcl
clc
pop
or
cmpsl
xchg
pop
cwtl
add
lods
mov
daa
mov
icebp
xchg
xchg
cmpsl
add
jb
dec
xchg
fildl
xor
aas
adc
pop
xchg
lods
std
push
sbb
call
addr16
dec
mov
mov
dec
mov
mov
sti
adcb
les
nop
inc
ret
call
or
cmc
pop
sub
sbb
cmp
shlb
inc
jns
add
jbe
es
repz
adc
addb
mov
mov
stos
fstps
push
xchg
insl
inc
or
outsl
push
or
mov
xchg
outsb
sbb
push
fnstenv
pop
sbb
loope
push
ss
mov
jge
pushf
inc
mov
pop
mov
sbb
xor
push
pushw
pop
inc
inc
sti
inc
inc
dec
push
mov
lods
imul
arpl
jnp
jp
mov
lock
jno
les
adc
or
lock
addb
inc
push
mov
inc
cli
adc
mov
sub
push
fwait
inc
jne
pop
call
add
sbb
es
out
mov
mov
add
xchg
cld
xor
shll
cmp
filds
cs
rol
rclb
data16
in
dec
or
pop
mov
jp
adc
mov
mov
rsm
mov
out
add
or
loopne
add
pop
adc
scas
out
push
test
scas
cmpsb
xchg
mov
add
and
lock
mov
loop
sbb
or
outsl
or
clc
sub
or
xor
lcall
dec
sub
into
sbb
loop
inc
jno
cmp
shlb
push
out
inc
add
xor
sbb
xor
enter
call
subl
out
outsb
jb
bound
adc
mov
and
ja
xchg
movsb
add
ljmp
or
sub
push
inc
or
cmp
jle
mov
mov
push
mov
adc
adc
cmp
mov
cmp
push
dec
les
rolb
cmpsl
dec
les
les
mov
fbstp
jnp
cmp
inc
ljmp
cltd
js
pop
hlt
cld
cld
inc
in
jo
adc
hlt
xchg
pushf
sbb
data16
mov
cmpsb
adc
movsb
mov
adc
dec
daa
rcrb
inc
xor
loop
mov
lds
cmp
dec
arpl
addr16
imul
cmp
cmp
xchg
loopne
jnp
clc
repz
and
pop
inc
popf
in
das
icebp
or
shr
imul
imul
push
cmp
jmp
xor
popa
mov
xlat
and
pop
out
or
inc
ret
ret
add
stc
or
repz
cmp
pusha
lods
push
std
sbbl
ljmp
push
or
add
mov
inc
aad
pusha
adc
leave
add
out
or
loopne,pt
lds
mov
inc
mov
or
push
rcll
les
inc
mov
dec
aad
adc
lea
push
jmp
enter
add
or
int3
xchg
lods
and
cmpb
jle
dec
nop
mov
adc
cmp
add
inc
jmp
mov
add
orb
dec
pop
out
push
lods
jo
std
addl
push
xor
ret
push
jge
mov
mov
adc
push
pop
bound
in
call
cmp
mov
add
into
incl
out
mov
adc
fcompl
mov
xchg
and
xchg
mov
shlb
out
add
ljmp
pusha
adc
pop
mov
mov
enter
push
cli
fistpl
adc
dec
mov
popf
inc
sbb
cltd
inc
das
xchg
mov
aaa
xor
pop
cli
jg
fsubrs
sahf
cld
pop
xchg
and
or
icebp
stc
insb
dec
cli
repz
push
addb
jno
jle
fisubrl
in
mov
or
adc
push
mov
add
outsl
rorl
mov
aaa
mov
add
pop
inc
outsl
push
or
out
lock
pop
insl
pop
fldl
call
push
inc
insb
sbb
ljmp
jl
sahf
pusha
add
cmpsl
jp
roll
mov
mov
pop
pop
out
leave
push
icebp
or
mov
loop
mov
fisubrs
jmp
or
and
mov
cmp
fbld
mov
push
sbb
inc
adc
and
cmpsl
iret
.byte
pushl
cld
push
add
loopne
add
xor
sub
and
add
jg
mov
pop
clc
sbb
pusha
jnp
push
push
adc
into
adc
fstpl
jmp
lea
cltd
add
xchg
mov
add
mov
add
ror
jno
pop
or
sbb
rolb
xchg
and
mov
add
add
lcall
add
mov
add
and
add
or
or
pushl
mov
sti
xchg
mov
and
push
add
pusha
je
pop
inc
mov
push
add
add
mov
pop
jae
cli
add
lcall
cwtl
or
add
inc
push
add
sbb
add
adc
movsl
add
add
jg
add
xchg
add
fldl
sbb
mov
add
scas
insl
mov
push
push
cmp
dec
xchg
sti
call
movsl
popl
xchg
lods
mov
cmc
jo
xchg
fsubrs
dec
mov
mov
mov
cmc
das
jae
pop
or
add
push
call
mov
pushf
lods
add
mov
and
adc
pop
jmp
add
adc
xchg
add
jmp
scas
xchg
call
es
adc
popa
adc
int
cwtl
mov
stc
add
lret
in
shr
lret
fldt
inc
je
xchg
popf
jg
mov
das
fdivrl
int3
push
inc
es
mov
sub
aaa
mov
mov
dec
fwait
xchg
add
mov
add
fs
or
cmp
es
xchg
les
test
ja
add
mov
divps
test
add
mov
mov
sbb
lods
jb
leave
xchg
js
adc
add
lret
inc
inc
sub
xchg
mov
addl
and
mov
loope
push
daa
in
lcall
push
sub
add
jb
pop
or
or
lock
sti
adc
jecxz
jp
lods
in
add
push
xor
out
mov
mov
xchg
add
mov
jae
mov
push
dec
sub
fstpt
add
xchg
sbb
or
lock
addr16
add
shrl
test
jge
mov
in
pushf
imulb
xor
jbe
incl
mov
ret
sahf
sbb
add
pop
movsb
sbb
mov
repz
popa
mov
enter
in
mov
or
adc
outsb
mov
lcall
incl
stos
xor
lcall
jge
mov
add
jbe
sbb
mov
pop
add
ret
add
jnp
mov
lock
xchg
add
push
xchg
cmp
daa
mov
aas
fdivrl
fidivrl
add
add
in
jmp
ljmp
lods
cwtl
out
mov
pop
or
sub
pop
cld
adc
fcmovnu
inc
xchg
sub
mov
and
and
or
scas
cmp
inc
add
mov
les
enter
mov
or
mov
fistl
outsb
push
or
lcall
int
sbb
inc
jecxz
pushl
adc
data16
sub
adc
adc
jo
addr16
inc
cmpsb
in
add
or
mov
adc
dec
add
add
sbb
mov
insl
push
and
pop
mov
dec
ffreep
insl
lret
sbbl
pop
adc
dec
mov
shll
inc
mov
dec
insl
push
adc
cmpsl
test
mov
xchg
fidivs
cvtdq2ps
adc
push
cmp
in
fistl
sahf
jge
push
faddl
add
aaa
or
ret
jbe
add
mov
ret
sub
dec
fimull
pop
pop
in
jmp
cltd
lock
jns
mov
mov
inc
btc
aad
or
fcmovb
sub
sub
push
jl
in
rcll
sub
mov
outsb
sbb
imul
ds
test
roll
je
xor
stos
cmc
fcmovnb
mov
outsl
mov
jbe
add
insl
push
les
mov
jl
outsl
jnp
aas
addr16
sti
xchg
pop
ss
and
add
or
mov
jno
iret
mov
and
xor
add
jle
add
xchg
mov
and
popa
jl
call
pushl
push
add
lods
gs
scas
mov
or
outsl
movsl
outsl
outsl
inc
inc
dec
add
stc
ret
popw
mov
sbb
movntps
pop
jg,pt
ss
js
hlt
fildll
incl
incb
cli
in
pop
mov
lods
neg
pop
insl
adc
dec
std
decl
sub
add
sbb
mov
jmp
jg
xchg
push
mov
add
movl
sbb
push
rolb
lret
popf
mov
jne
sub
sbb
mov
sub
push
mov
test
or
mov
insl
jl
dec
fstpt
adc
mov
sub
mov
push
fcmovne
lahf
jne
rolw
xor
xor
mov
pop
fistpl
inc
xor
pop
and
lret
aas
ja
mov
sarb
dec
dec
fdivl
rcr
pop
pop
das
int3
mov
cwtl
mov
pop
push
sub
mov
sbb
pop
fisttps
mov
negb
adc
xchg
int3
sbb
daa
pop
pop
mov
hlt
imul
xlat
mov
and
jmp
je
sbb
loopne
stos
mov
mov
outsl
pop
pop
clc
sub
rcrb
xrelease
loope
in
imul
sub
inc
mov
pop
dec
loopne
add
negl
add
outsb
fdivrs
out
jle
fistl
sub
push
cmp
lods
add
lock
add
dec
sbb
and
aad
push
mov
loopne
out
gs
jmp
bound
flds
loope
filds
cmpsb
and
adc
and
mov
pop
mov
pop
faddl
xor
aas
jb
and
lock
cmpsl
or
xor
in
lock
mov
fimull
and
mov
into
jae
insb
pop
xchg
pushf
push
nop
mov
or
fisttps
adc
xlat
sbb
mov
mov
pop
testb
dec
mov
mov
fistl
fdiv
add
push
add
gs
sbbl
push
dec
and
cmp
sbb
mov
pop
jns
inc
test
add
loope
pop
mov
pushf
cmp
sbb
outsb
js
neg
inc
not
dec
jns
and
aam
jmp
xor
clc
dec
cmp
jne
pop
loopne
push
push
int3
push
movd
dec
pop
mov
data16
pop
mov
inc
insb
dec
cld
pop
pop
int3
and
or
push
testl
push
in
push
sub
mov
push
push
or
lds
xchg
and
xchg
or
scas
adc
xor
push
jp
inc
jg
push
add
inc
fadd
push
scas
xor
sub
lret
ss
lock
pop
aas
stos
mov
push
sub
mov
ret
out
movsl
shll
xchg
add
ljmp
inc
not
ja
test
sub
in
xchg
insl
nop
jne
sub
push
adc
cmpsl
into
and
fwait
imul
mov
mov
pop
js
adc
fbld
popf
pop
test
outsl
xor
sarl
xor
dec
cmp
clc
ja
stc
lods
push
xchg
outsl
pusha
push
aaa
push
stos
stc
add
adc
xor
inc
out
push
xor
lahf
lock
imul
inc
adc
adc
add
in
pop
cmp
shl
pop
movsb
ret
add
cmp
es
mov
xchg
out
add
arpl
xor
mov
jnp
filds
push
icebp
or
scas
ffree
inc
paddusb
or
neg
nop
outsl
pop
cmp
cs
sub
stos
sub
sub
pop
clc
lcall
clc
or
not
mov
or
inc
or
sub
movsb
lods
mov
roll
sti
or
jns
call
adc
sbb
cmp
xor
inc
xor
adc
nop
mov
fwait
jle
cld
loopne
rcl
cmp
xchg
lahf
xor
push
mov
mov
push
cmp
addr16
mov
call
fstpt
jle
dec
fs
clc
and
clc
rcrl
stc
std
addl
pusha
sbb
mov
movsl
or
mov
lock
aas
out
cltd
subl
add
inc
sub
mov
sbb
pushl
ja
fdivl
push
gs
icebp
mov
adc
adc
adc
adc
les
xor
sbb
outsl
adc
cmpsb
add
sub
lods
in
aaa
fdivrl
cmp
or
or
bound
mov
insb
fimuls
xchg
sub
xchg
or
enter
outsl
fwait
add
dec
dec
mov
or
sbb
inc
mov
mov
inc
add
dec
cmc
add
mov
adc
cmc
xor
lret
shll
sub
inc
xor
mull
push
mov
push
ljmp
mov
mov
or
add
inc
mov
outsl
ss
inc
jae
xor
sarb
push
ret
shr
xor
mov
xor
in
js
fdivr
fcomps
mov
push
sbb
ret
repnz
mov
adc
mov
aas
push
scas
cwtl
ret
adc
dec
jb
insb
je
aaa
push
push
add
sub
pop
sbbl
lahf
dec
in
stos
push
loopne
ret
sarl
fdivs
lcall
cltd
dec
cmpsl
scas
pop
pop
shl
xor
loopne
xchg
jmp
sbb
add
dec
lcall
jge
push
dec
sti
cli
cs
xor
femms
dec
aas
cmp
mov
rorb
mov
mov
pop
cmp
enter
clc
out
mov
loop
sti
sti
pop
mov
mov
mov
ljmp
addr16
push
loop
lock
jne
xchg
add
clc
fucomip
inc
in
fistl
push
aad
cmp
push
in
test
sub
mov
adc
inc
es
aad
pop
ds
push
xor
cmpsb
pop
and
jo
inc
es
cltd
scas
mov
xchg
inc
jae
pop
ljmp
or
mov
pop
dec
xchg
mov
mov
jb
scas
mov
fimull
sbb
int
lea
movsl
andl
add
cwtl
cli
add
inc
xchg
inc
pop
xor
mov
push
pop
lea
popa
adc
adc
sahf
movl
dec
imul
fucomp
sub
in
pop
cld
ljmp
mov
and
push
pop
pop
or
sub
push
or
cli
xor
push
lcall
add
sbb
mov
xor
dec
sbb
aam
add
icebp
loop
loopne
mov
push
stos
rcll
ss
outsl
dec
jg
jl
adc
insl
mov
in
dec
outsl
cmc
ja
into
pop
xor
sub
sbb
aam
inc
das
shl
cli
cmp
add
leave
in
outsl
scas
mov
imul
sub
adc
adc
add
mov
mov
mov
xor
stos
sbb
mov
repnz
sbb
mov
dec
fimull
mov
stos
or
pop
cli
fildll
cmp
fstl
push
dec
sub
pop
xlat
aad
fsubp
mov
xchg
or
mov
fcoms
jg
loop
shlb
pop
and
lea
mov
filds
mov
std
add
outsb
push
aas
mov
push
mov
add
inc
sub
movsl
dec
mov
dec
inc
hlt
int
test
cld
jae
push
jo
loope
movb
add
ja
sbb
cmp
cmp
int3
mov
adc
or
jo
cmp
mov
cmp
mov
fidivl
inc
sar
sbb
cmp
and
repz
sub
xor
add
pop
daa
loopne,pn
out
and
cwtl
dec
xchg
and
push
subl
xchg
in
add
xchg
cmp
rclb
jg
add
fistpl
push
js
fwait
inc
mov
inc
mov
adc
stos
orl
fidivs
jnp
adc
cwtl
push
negb
dec
sub
adc
xlat
shll
adc
leave
mov
mov
and
imul
mov
sub
lea
inc
push
xchg
pop
mov
inc
add
insl
or
adc
mov
rcrb
mov
sbbl
xchg
add
lds
sub
clc
add
aas
mov
and
mov
or
cmpsb
scas
or
or
xlat
adc
shrb
jb
xlat
adc
jb
ret
mov
cmp
fwait
sahf
adc
inc
or
xchg
add
je
mov
xlat
jae
shrb
nop
xor
xchg
pop
shll
out
pop
mov
xor
fwait
xor
dec
mov
xor
fmuls
mov
inc
imul
mov
xor
pop
cmc
xchg
ret
pop
cwtl
inc
sahf
sbb
and
dec
or
lock
popl
dec
inc
pop
pop
pop
jle
insb
aam
mov
jne
roll
pop
call
nop
aam
test
dec
shlb
lds
mov
sbb
popf
adc
mov
out
fsts
mov
sbb
cmp
inc
xchg
addl
add
imul
xor
les
ret
or
out
sarb
xor
lea
cmc
or
push
xor
xor
pop
inc
xor
repnz
xor
adc
fsts
hlt
js
andb
add
mov
in
mov
inc
mov
mov
mov
dec
sub
pop
scas
out
adc
test
sbb
ret
sarb
inc
add
mov
xor
sti
push
xor
aas
jecxz
add
popf
or
fistps
xchg
jmp
push
push
fidivrl
push
push
int
nop
mov
aas
pop
mov
js
xchg
jnp
jae
inc
xor
loop
add
push
push
sub
sti
xlat
idivb
jo
cmp
lds
outsb
cs
bound
scas
in
shlb
ljmp
or
sbb
cld
xchg
xlat
push
mov
ss
mov
add
push
mov
fmul
icebp
jns
outsl
and
xor
xchg
inc
std
sbb
lds
in
or
mov
repz
popa
mov
jbe
inc
pop
ret
fldenv
mov
or
mov
sldt
insl
sub
inc
stos
testb
pop
roll
mov
into
test
push
test
fiaddl
cmpsb
dec
xor
adc
repz
pusha
or
mov
sbb
in
jne
adc
sub
out
cmc
lock
sbbb
mov
js
roll
testb
frstor
test
int
jb
xor
sub
mov
sbb
pop
lret
push
add
inc
lods
ljmp
mov
in
movsl
jo
js
cmp
insb
leave
mov
inc
fwait
xor
inc
inc
int
or
mov
push
xchg
sbb
push
xor
sub
aam
hlt
pop
loop
dec
ret
mov
int
mov
mov
fmul
lds
add
ret
mov
dec
sub
daa
rcrl
sar
popa
adc
leave
jbe
or
leave
or
ret
inc
fmull
adc
pop
fiadds
fisttpl
lret
fistps
or
mov
adc
pop
addl
jp
mov
loope
mov
lods
data16
and
or
pop
fs
daa
push
push
aam
in
mov
ficompl
cwtl
add
dec
rorl
push
cmp
adc
inc
rcrb
fdivs
imul
in
adcb
jecxz
mov
sbb
popf
adc
ss
add
jno
scas
jmp
addr16
ljmp
cmp
dec
adc
push
ret
ret
mov
scas
out
or
pop
cmp
adc
inc
add
cmp
fadd
aas
push
mov
xchg
out
mov
sbb
mov
mov
add
decb
fwait
out
push
clc
gs
imul
adc
lcall
jo
mov
pop
add
cmp
jmp
cmc
cmp
cmc
add
outsl
lcall
repz
popf
mov
fwait
shrl
mov
push
xorl
or
dec
sub
cld
adc
popf
subb
ret
jbe
movsl
jbe
xor
push
lret
fildl
loope
imul
arpl
mov
add
jg
mov
dec
push
jl
adc
ffreep
pop
stos
clc
dec
and
popf
or
inc
loope
inc
outsl
cmpsl
pop
outsl
incl
cmp
cmpsb
xor
popa
popl
aam
push
ja
push
adc
push
mov
enter
arpl
inc
stc
clc
test
nop
out
aas
rolb
inc
pop
test
fiaddl
adc
in
in
addr16
ja
inc
jl
pop
xor
mov
xor
jbe
stc
push
fmul
addr16
add
xchg
sub
pop
sub
aaa
hlt
ds
cwtl
adc
add
leave
das
fiaddl
dec
ja
xchg
cmpsb
mov
in
arpl
ljmp
test
orl
shl
jle
jg
mov
mov
in
mov
sub
je
inc
sar
xchg
cli
mov
mov
mov
ds
mov
bnd
outsl
aad
sub
lock
mov
push
jne
jns
and
pushl
jno
and
dec
pop
orl
push
mov
jo
xor
in
add
sbb
add
add
fxch
psrad
cli
out
scas
add
and
sahf
add
adc
add
test
cld
mov
aas
popf
sahf
dec
adc
int3
inc
shlb
lock
test
aaa
adc
sbb
icebp
xchg
mov
inc
xchg
sahf
subb
pop
pop
fidivrl
jmp
push
test
outsl
loopw
rcrb
and
jg
add
pop
out
push
mov
or
or
loopne
mov
vpmacswd
xor
decl
cmp
cwtl
xchg
jnp
push
mov
pop
xor
and
ds
xchg
cmp
outsl
fdivr
add
call
mov
add
lcall
incl
pop
das
jmp
sbb
sbb
mov
mov
sbb
adc
sarl
orl
loopne
inc
add
fidivs
xchg
push
fsub
sbb
xchg
sarl
dec
mov
add
pop
jns
lds
sbb
jmp
std
add
dec
decl
dec
mov
aaa
sub
jmp
mov
lret
shll
push
jmp
into
mov
mov
mov
mov
rcl
mov
jmp
andl
fs
js
ret
mov
rep
adc
or
es
loope
lods
es
lds
push
scas
push
lret
mov
jmp
jno
xchg
jae
test
les
cwtl
daa
into
jg,pt
hlt
jg
hlt
arpl
xchg
int3
xchg
adc
mov
mov
jp
scas
movsl
mov
inc
sbb
push
sub
aam
mov
lds
ds
or
mov
fdiv
sbb
fidivrl
pushf
or
add
add
cmpsl
in
sub
dec
data16
mov
inc
test
sti
mov
mov
and
dec
mov
and
push
mov
nop
das
pop
sahf
in
push
lods
dec
cld
dec
xor
scas
or
cmpb
and
cmp
jmp
aam
hlt
mov
cmp
pop
das
dec
inc
test
and
jno
cmp
fdivl
inc
mov
out
sbb
jl
mov
xchg
js
ljmp
mov
mov
into
cwtl
aas
inc
cmp
xchg
adc
call
lock
sub
test
adc
pop
dec
lock
incl
or
mov
rclb
jne
loop
repnz
or
pop
lcall
aad
cmpl
test
adc
push
add
lea
pop
push
sub
pop
pushf
in
and
ljmp
mov
xor
mov
into
push
fs
jne
mov
dec
iret
xchg
dec
out
push
or
cmpsb
xor
pop
inc
dec
fnsave
inc
adc
test
add
mov
lahf
push
arpl
push
dec
lds
inc
das
mov
xchg
jnp
int
movsl
push
add
mov
mov
xchg
dec
mov
add
sbb
mov
sub
cmp
or
pop
pop
mov
mov
pushf
stos
aas
imul
mov
loopne
adc
push
add
loope
lods
dec
leave
lahf
call
mov
cli
shrl
loope
arpl
mov
pop
clc
cmp
dec
pop
sbb
jle
cmp
pop
inc
leave
push
or
loopne
xor
mov
dec
pop
bnd
mov
jle
xor
and
scas
into
mov
fimull
add
out
sbb
imul
gs
stos
push
das
jnp
inc
scas
es
lea
mov
add
divps
sbb
xchg
push
sti
pop
outsl
mov
xor
scas
pusha
and
adc
mov
lock
inc
and
pusha
mov
add
add
fucomp
mov
fidivrl
sub
pop
sub
test
push
push
xchg
add
adc
sub
add
jg
decl
mov
les
add
loopne
xor
outsl
insl
ljmp
add
lcall
sub
clc
sbb
push
jbe
or
sub
mov
ficomps
push
jecxz
jo
cmc
insl
fcmovnu
ficomps
sarl
jge
mov
pop
lds
div
pop
clc
mov
jl
test
xchg
or
cmpsw
xlat
and
cmp
lea
xchg
std
pop
sbb
dec
push
jp
inc
incl
sbb
xor
sub
sub
jl
lock
cld
std
arpl
int3
mov
xchg
sub
jg
into
jl
cmp
inc
adc
pushf
loope
add
sti
call
pop
scas
popa
inc
push
cmp
xchg
addr16
out
xlat
jns
push
jne
imul
cmp
mov
in
pusha
sbb
mov
cld
call
dec
mov
and
dec
sbb
fwait
mov
push
push
mov
mov
inc
ret
insl
jp
mov
push
rclb
stos
jne
icebp
insl
subl
or
inc
call
or
mov
or
xor
xchg
in
dec
adc
int3
hlt
inc
sbb
pop
push
xor
cmp
lds
jecxz
call
insb
int3
xchg
lret
adc
insb
lods
in
shr
mov
lea
jbe
lds
lahf
mov
mov
aaa
cli
push
fisubrl
xor
mov
andb
adc
movsl
out
cmp
and
xor
pop
imul
pushf
or
decl
xorb
sti
sub
pop
sub
add
repnz
dec
mov
mov
sub
pop
ja
add
cmp
sbb
add
out
mov
adc
ja
mov
xor
ret
jge
sti
nop
outsb
imul
pop
lret
mov
movsl
mov
inc
cld
or
inc
sub
cmp
xor
or
adc
sbb
and
mov
push
in
or
jp
movsb
xchg
adc
adc
clc
in
mov
fiaddl
test
mov
incl
sbb
ret
pop
pop
or
jnp
mov
inc
mov
jno
fistpll
shrb
xor
outsl
add
stc
enter
mov
pop
leave
fnstcw
aaa
mov
test
rorb
adc
stos
adc
rcrl
hlt
insb
clc
stc
jle
and
jb
les
insl
mov
or
cmc
mov
xchg
dec
loop
cmp
jb
clc
leave
sbb
test
fwait
arpl
das
hlt
mov
xchg
fiaddl
dec
fimull
lock
xchg
adc
sti
pop
adc
and
cltd
test
mov
adcb
sarl
in
pop
ret
or
add
out
xor
xchg
jp
inc
inc
xor
gs
les
mov
push
in
bound
mov
int
out
fidivrl
out
push
rolb
xchg
in
bound
pop
fsubl
mov
in
sub
pop
mov
cmp
or
mov
movsl
das
cld
sub
scas
hlt
lds
jg
or
out
inc
xor
xlat
or
inc
or
dec
scas
and
movsb
sub
sub
incl
mov
jp
mov
out
mov
jg
push
jp
xor
call
sahf
sarl
inc
push
jp
outsl
xchg
int3
sub
mov
jae
dec
fs
sti
cmc
pop
gs
inc
adc
push
cld
ja
mov
and
pop
jl
inc
loopne
add
outsl
hlt
fimuls
mov
adc
sbb
nop
andl
or
xlat
mov
xchg
mov
sti
outsl
mov
rcrb
add
mov
add
sbb
mov
aas
dec
scas
jp
in
fnstsw
fidivs
xchg
mov
orb
jb
add
test
test
mov
sbb
mov
out
push
bound
shlb
adc
mov
fidivs
inc
rorl
xor
pop
stos
inc
cmpsb
mov
mov
scas
repz
inc
jecxz
inc
out
pop
mov
mov
or
lea
pop
loopne
test
sbb
pusha
pushf
add
lods
ja
and
adc
or
sub
jno
pop
xchg
decb
sbb
repz
fbstp
pop
in
jnp
nop
pop
insb
pop
mov
jbe
mov
jp
rclb
or
pop
outsb
lret
inc
fiadds
add
mov
mov
lcall
mov
pop
xor
lock
aad
inc
sahf
lods
and
out
pop
sbbb
mov
push
jg
int
mov
xor
pop
test
sub
and
cmpsb
call
push
jle
push
cmpsb
daa
inc
int3
ljmp
stos
inc
or
pop
jbe
or
lock
cmpsb
or
lea
mov
and
pop
cmpsl
mov
ja
mov
call
and
push
and
out
jl
loopne
andl
mulb
in
movsl
mov
clc
daa
sub
enter
pop
lods
xchg
fs
pop
cmp
notb
loop
dec
jno
and
adc
cs
adc
aaa
loopne
jmp
divb
and
jbe
pop
mov
int3
testb
std
je
roll
push
mov
subb
ss
insb
jl
pop
cmp
pop
or
out
scas
rep
pop
push
xchg
outsl
cld
outsl
sbb
mov
arpl
call
addr16
add
cs
pop
ficomps
mov
jns
je
imul
pop
push
mov
push
adc
mov
lods
pop
mov
dec
incl
or
sbb
push
das
fsubs
es
inc
out
fists
adc
and
cltd
cltd
inc
xchg
adc
mov
insb
lea
xlat
fdivl
pop
mov
les
clc
outsl
lds
inc
js
xlat
dec
xor
sbb
imul
mov
jp
sbb
push
popa
pop
cs
jmp
aad
daa
cmp
test
jbe
sbb
mov
push
fs
pop
ljmp
js
rcrb
inc
imul
add
add
dec
mov
jmp
sub
popf
and
xchg
gs
sbb
repz
lcall
fisttps
outsb
fcom
adc
cmp
fildl
imul
dec
bound
imul
dec
test
loop
sub
enter
pop
lods
xor
out
sarl
and
aaa
loopne
aam
lcall
addr16
lods
or
inc
pop
sbb
js
inc
cli
cmpsl
cld
daa
and
loope
lcall
mov
sub
mov
mov
pop
add
test
xchg
pop
test
push
jge
jbe
imul
xor
outsl
lock
je
test
xor
pop
or
pop
call
mov
fiadds
mov
pop
fsts
push
mov
imul
pop
push
ror
out
mov
mov
jle
dec
push
xchg
jg
rcrb
cmp
pushl
push
insl
popf
inc
cld
jle
fwait
into
pop
xchg
jmp
add
mov
mov
outsl
cld
push
ja
outsl
int3
fists
sbb
decl
rorl
xchg
mov
adc
imul
push
and
and
cmpsb
in
lea
cmc
test
add
popf
cmpsb
add
sub
or
cld
push
lock
add
adc
fsubs
imull
push
jle
mov
scas
inc
and
gs
in
std
test
push
js
jge
arpl
mov
and
bound
das
adc
or
mov
mov
sete
je
clc
sbb
movb
push
pusha
jp
das
mov
das
xchg
push
xlat
add
sub
push
sbb
stos
outsl
jge
adc
cmp
cmp
fstl
std
scas
shll
push
jo
cltd
adc
pop
dec
dec
mov
insb
pop
xor
lds
int
and
adcb
xor
cmovns
add
and
add
sub
mov
add
fwait
mov
xor
pop
in
lock
popf
loopne
and
sbb
sub
icebp
lret
mov
push
inc
scas
sbb
mov
add
fcoml
lret
sbb
rclb
pop
lret
inc
or
fsubrl
mov
arpl
dec
push
or
das
aaa
sbb
orb
inc
testl
sbb
rcll
inc
cmp
sub
lret
enter
cmp
adcb
pop
push
add
add
pop
xor
cltd
adc
sub
and
pusha
cmp
rorb
jno
sbb
xor
dec
lahf
or
push
push
mov
inc
sbb
add
inc
iret
push
in
sbb
jmp
inc
jl
fimull
mov
adc
add
mov
rcrl
sub
inc
lahf
sti
test
out
cmp
lcall
outsb
mov
mov
fimuls
or
inc
jmp
int
sub
fmuls
je
add
jl
lods
mov
aam
aam
xchg
mov
inc
imul
fidivl
jae
scas
call
or
add
pop
dec
jne
sbb
int3
xor
or
mov
add
adc
inc
adc
int
xor
or
xchg
and
movsb
cli
adc
sbb
out
jae
adc
leave
add
mov
iret
scas
push
jge
shll
mov
inc
pop
push
mov
push
sbb
mov
mov
or
out
mul
js
push
js
pusha
dec
adc
pop
or
add
dec
inc
insb
mov
mov
push
scas
adc
dec
adc
push
loopne
inc
das
mov
pop
or
pop
pop
cwtl
inc
adc
les
and
sub
and
or
dec
push
xchg
repz
js
jnp
mov
call
mov
jl
or
xchg
inc
mov
mov
addr16
lret
jmp
jno
mov
scas
mov
hlt
mov
lcall
push
test
aas
dec
sbb
mov
shll
adc
das
jg
pop
outsb
repnz
inc
loop
add
mov
mov
andb
dec
outsl
lock
test
add
and
xor
dec
loope
ljmp
jl
cmpb
pop
sub
add
push
push
sub
and
dec
sarl
addb
inc
pop
out
cli
xlat
adc
ret
mov
test
mov
pop
mov
xchg
push
inc
enter
fucomip
test
cmpsl
and
sub
xchg
ja
popf
or
aaa
jge
cmp
mov
or
push
mov
fcomi
sti
inc
arpl
ss
jg
cltd
into
mov
mov
mov
arpl
xor
imul
jp
mov
mov
mov
mov
into
xor
repz
fildl
add
dec
int3
arpl
jg
jg
sbb
lods
arpl
inc
adc
inc
dec
popa
pusha
dec
stos
dec
lock
pushl
and
mov
push
or
mov
lods
xchg
mov
mov
ljmp
push
js
xor
push
xchg
aas
jae
add
xor
nop
dec
and
inc
out
popa
xchg
or
loopne
out
in
and
adc
loopne
sub
shrl
enter
outsb
adc
jg
ret
pop
or
loopne
fwait
stos
je
outsl
push
and
xor
adc
pop
and
push
push
fs
pop
pop
mov
adc
xchg
or
fwait
sbb
aas
mov
jno
shl
mov
movsl
mov
pop
fcomp
xchg
in
xchg
push
arpl
cld
sbb
sbb
adc
cmp
pop
insb
rcrb
mov
or
mov
insb
cmpsb
mov
notl
ret
mov
mov
add
int3
xchg
aad
hlt
sub
aaa
ss
jg
or
mov
outsl
sarb
inc
mov
push
stos
lcall
cmp
outsb
movsl
lret
sarl
adc
add
sbb
sbb
or
mov
scas
loope
sub
dec
pusha
daa
in
ljmp
in
adc
pop
outsl
sub
jo
or
push
inc
cmp
imul
test
aad
push
fisttps
mov
cmp
push
ret
jb
xor
inc
or
sub
add
fistpll
lds
jge
cs
fbstp
cltd
scas
test
pushl
mov
mov
add
or
mov
xchg
or
cmpb
pop
cltd
dec
sub
jb
adc
adc
mov
aaa
ja
cmp
pop
mov
scas
gs
sub
bound
popa
das
je
std
or
icebp
int3
bound
jmp
jae
call
add
shl
arpl
je
aaa
lock
mov
fcomps
xchg
ja
decl
push
jp
add
movsl
push
mov
mov
enter
jb
loope
or
daa
or
out
push
sbb
cwtl
or
js
mov
imul
xchg
filds
add
jecxz
or
enter
inc
xchg
nop
fbstp
cmpsl
movb
lods
or
gs
movl
xchg
cmp
movhps
repz
mov
push
stc
mov
jbe
jnp
shll
mov
and
rorl
outsl
pop
mov
lds
aam
rol
scas
ficomps
sub
sub
pop
mov
inc
mov
data16
cmp
outsl
push
add
mov
add
ds
pusha
push
cmp
sub
push
insb
popa
rolb
mov
add
fldenv
push
xchg
decl
mov
jg
mov
sbbl
idivb
cmc
fsubs
mov
cld
out
mov
jle
mov
jl
sti
dec
mov
sbb
sti
push
fsubr
sub
aas
add
push
std
ret
fistpll
pop
outsl
cli
loopne
and
leave
rorb
sub
test
or
or
ficompl
fs
xor
test
std
inc
add
xor
cmp
and
aaa
push
outsb
clc
pop
push
xchg
cmpsl
xlat
add
push
xchg
cmpsb
push
popl
sbb
rcrb
push
lds
cmp
out
fdiv
mov
push
sahf
sahf
jge
pushl
fdivrp
enter
jecxz
push
out
inc
decl
outsl
lea
hlt
pop
xor
inc
cmp
mov
pop
arpl
repz
fsubp
jp
or
mov
push
mov
daa
push
sub
jmp
cmp
enter
testb
stos
imul
inc
sub
and
or
sbb
testb
cltd
mov
ljmp
rolb
scas
adc
outsb
shlb
stos
movsl
jg
or
jae
xor
xor
adc
push
jmp
divl
std
add
cli
lret
iret
pop
add
mov
lahf
xor
sqrtps
movsb
nop
ja
popa
hlt
outsl
les
mov
pop
sub
in
mov
jl
mov
es
call
lcall
mov
cmp
xor
cmp
decl
mov
xor
add
sbb
sbb
repz
or
xchg
ficomps
xor
outsl
dec
sbb
dec
jmp
das
push
push
in
incl
insb
mov
call
inc
dec
mov
mov
inc
mov
xor
icebp
ljmp
cmp
dec
add
shll
loop
inc
jno
not
lret
stos
push
cmpsb
cmp
jle
scas
lcall
fcompl
dec
ljmp
mov
cli
add
mov
leave
jp
or
inc
jecxz
ret
out
push
lahf
add
stc
lods
sub
and
mulb
xchg
pop
gs
mov
es
or
aaa
insb
aam
add
dec
mov
lret
lcall
and
aaa
shrb
inc
leave
pushf
jl
push
ret
pop
push
adc
loopne
jnp
jo
aad
shll
repnz
or
mov
mov
loope
xor
cmp
jecxz
neg
mov
pushf
aaa
lea
dec
push
stc
inc
xor
mov
imul
xchg
lea
jg
call
shll
add
push
mov
mov
mov
add
push
push
pmuludq
test
insb
iret
orb
xchg
push
inc
dec
mov
fs
fstpt
jmp
fxch
ds
add
mov
sbb
cmc
popf
subl
pop
cmp
test
or
or
xchg
out
mov
in
dec
or
rcrl
aas
ljmp
loopne
pushf
mov
pop
fimull
pop
fs
outsl
mov
pop
adc
cmp
jmp
popf
mov
xor
aas
mov
inc
outsb
cmp
add
loop
popf
aas
dec
leave
dec
aad
nop
add
sbb
andb
es
or
sub
pop
roll
push
mov
add
stos
cmc
lahf
fiadds
aad
repz
add
mov
pop
mov
push
lock
lock
fcompl
xor
jae
adc
jb
xchg
cmpsl
sbb
and
sub
sub
or
pop
jne
loop
adc
pusha
sbb
xor
inc
insl
inc
jg
and
add
inc
ss
cmp
pop
lock
les
rorb
repz
and
jnp
stc
push
jge
mov
mov
fistl
adc
ljmp
adc
mov
cli
daa
scas
dec
and
cmp
in
push
in
sub
jne
fldt
in
sub
adc
loopne
ljmp
sbb
cld
les
es
fists
lods
into
sub
roll
xchg
pop
sub
xchg
mov
sbb
dec
adc
xchg
popf
dec
dec
add
adc
clc
fstl
add
adc
xchg
rcl
mov
movb
bound
or
clc
jecxz
lods
push
sti
or
cltd
orl
movsb
aam
les
imul
cwtl
xor
pop
sarb
int3
mov
pop
dec
adc
out
in
xchg
test
add
in
pushf
int3
sub
jle
mov
das
cmp
sbb
insl
outsl
xor
mov
xor
sbbl
dec
shl
mov
stos
call
mov
movsb
popa
js
xchg
roll
mov
add
jno
out
cli
ret
movlps
shrb
lea
sbbb
inc
mov
call
jmp
push
fistps
xorl
lods
add
sbb
fst
lcall
test
es
call
push
xor
sub
in
push
fldcw
cs
add
sbb
hlt
test
test
xchg
jmp
or
push
addr16
ret
movb
addb
inc
mov
rolb
xor
xchg
mov
mov
mov
stos
xchg
jecxz
lds
fbld
icebp
or
call
adc
insb
cmpsb
loope
add
xchg
dec
mov
jmp
pop
and
sub
cltd
push
jecxz
lods
mov
arpl
repnz
adc
jl
rclb
jb
pop
in
adc
movsb
jnp
das
aad
shl
int
imul
jo
incl
hlt
call
cmp
mov
lock
hlt
test
addb
and
in
add
and
adc
jg
clc
mov
ljmp
dec
push
lock
mov
push
sbb
push
outsb
popa
xchg
cmpsb
inc
lcall
adc
or
fistl
mov
mov
cmpb
mov
push
enter
pop
inc
dec
enter
inc
mov
mov
hlt
into
sti
es
push
cld
or
jg
leave
in
cmp
mov
outsl
pop
lock
pop
aad
in
cmpsb
pop
or
xchg
mov
cs
sub
lock
faddl
rclb
nop
jo
and
ljmp
add
xchg
cmp
insb
push
mov
push
pop
in
cs
jl
and
push
push
fistps
jne
loope
cli
test
hlt
sub
inc
mull
insb
outsl
repz
mov
xor
lock
push
scas
mov
les
paddq
addl
adcl
cli
push
push
pop
leave
mov
test
int
jns
xor
out
pop
or
cmp
pop
test
test
sahf
and
dec
pusha
negl
int
ret
sub
pop
xor
and
mov
cmp
xchg
stc
add
icebp
lea
dec
push
jo
cmpb
add
in
mov
inc
test
mov
sbb
mov
push
xor
xor
data16
clc
push
icebp
fs
mov
cld
das
dec
push
lcall
fbld
popa
adc
movsb
dec
lds
call
mov
adc
lret
rorl
add
icebp
adc
xorb
mov
stos
shl
sbb
xchg
test
cs
ficomps
push
ss
movsl
push
addl
add
rcrb
in
inc
call
incl
mov
push
lcall
inc
push
push
mov
in
and
mov
leave
lret
int
mov
add
stos
pop
js
xchg
mov
push
popa
mov
aas
jo
push
pop
ds
jns
adc
cmp
add
or
pop
ror
and
in
cmp
pop
outsb
sbb
fwait
jp
sub
enter
test
and
pop
aam
pop
lods
hlt
xor
jmp
les
add
stos
inc
rorb
push
arpl
xchg
ja
or
das
mov
inc
addr16
scas
shr
jg
adc
nop
out
movsb
and
lcall
or
mov
out
test
mov
lcall
repnz
lret
cmc
mov
pop
mov
jmp
lods
pop
sbb
lea
jecxz
imul
jo
in
ret
lods
xor
cmp
cmp
jg
shll
aam
and
pop
in
or
cwtl
pop
jecxz
cli
ret
test
movsl
dec
mov
es
or
sbb
add
into
in
or
mov
dec
and
sbb
dec
test
test
jmp
cmp
outsl
pushf
mov
cmc
leave
add
outsl
das
std
cmp
inc
sub
decl
mov
insb
dec
mov
xchg
inc
pusha
rclb
xchg
hlt
test
xor
stc
daa
cmpsl
js
loope
sub
jle
add
cmpb
inc
pop
sbb
cltd
mov
inc
or
mov
fwait
call
mov
hlt
add
pop
mov
clc
outsl
std
jg
jno
mov
lds
mov
adc
pop
jp
lcall
lock
in
pop
sub
mov
mov
outsb
mov
add
fidivl
pop
pusha
aam
sbb
or
mov
or
push
mov
xchg
mov
mov
pushf
inc
int
mov
jo
mov
xor
push
push
repnz
aas
cmpsb
push
add
inc
fists
add
or
loop
cwtl
fstps
jmp
subb
jl
sbb
and
lea
inc
mov
push
adc
das
push
ss
arpl
test
adc
sbb
or
pushl
ss
push
shlb
pop
inc
pop
inc
and
aam
adc
adc
jae
sbb
lret
pop
pop
outsl
sub
adc
mov
mov
lahf
in
lods
mov
imulb
fidivl
adc
mov
cwtl
dec
imul
test
jle
lcall
das
add
stos
mov
sub
data16
pop
clc
jge
or
insl
wrmsr
ret
add
push
incl
xchg
rcrb
mov
in
ret
jmp
dec
pop
push
lcall
ss
jge
dec
test
outsb
andb
or
lahf
or
mov
xchg
inc
push
dec
mov
inc
mov
bound
scas
loopne
push
sub
lret
xchg
fbld
lock
push
sbb
clc
fistpll
ficoml
loope
rorl
mov
das
sbb
sbb
ret
dec
mov
pop
ds
adc
dec
adc
in
jg
and
scas
cwtl
cmpsb
dec
stos
sbb
push
loop
dec
add
push
mov
and
popf
sub
mov
and
imul
pop
xor
inc
cmp
and
out
call
xor
cli
and
xchg
repz
sub
addr16
idiv
cmpl
cmp
sbb
push
inc
cmpsl
inc
sbb
lcall
adc
scas
mov
jge
add
enter
xlat
pop
std
repnz
add
or
adc
movsl
jg
xor
sub
xchg
push
xor
inc
ljmp
cwtl
loopne
push
xor
push
push
call
jo
pop
jo
fwait
pop
int
imul
mov
push
hlt
mov
inc
ret
loop
testl
les
nop
fisttps
add
popa
fs
outsb
rcl
adc
lds
xchg
popa
frstor
adc
mov
inc
fsubs
xchg
cmp
mov
xchg
inc
or
shrl
lcall
mov
or
xor
jo
leave
adc
rorl
dec
jle
push
out
push
adc
fsubl
pop
out
dec
cmpsl
popl
je
or
fistps
stos
jg
mov
mov
cmovle
or
xchg
sbb
dec
adcb
and
and
add
sti
jmp
pop
cmp
or
pop
lods
sub
xor
or
ljmp
and
shrl
aad
jae
adc
inc
jg
cmp
pop
inc
ljmp
adc
cs
dec
xor
cltd
addr16
dec
cmpsb
cmp
lahf
mov
add
add
xor
inc
cld
pop
adc
je
xor
push
sbb
aaa
stos
movsb
dec
cltd
je
fidivs
add
fs
cmp
lahf
stos
cmc
lea
mov
dec
mov
in
mov
or
je
adc
test
xchg
mov
mov
daa
add
mov
test
dec
xor
or
cmc
fstpl
adc
and
mov
pop
shrb
sub
xchg
pop
mov
pusha
adc
pusha
inc
mov
adc
icebp
push
push
push
imul
lds
insb
sub
out
cmpsl
int3
sahf
nopl
lret
les
or
adc
mov
jbe
push
adc
dec
cmpsb
dec
loopne
sbb
cmp
push
in
aam
icebp
push
or
in
mov
dec
bound
mov
lods
call
mov
imul
stos
jbe
icebp
mov
mov
neg
sub
mov
stos
mov
cmpsb
adc
jbe
jle
incb
repnz
pop
je
sbb
jae
gs
mov
mov
arpl
nop
mov
jge
insb
pop
dec
test
lahf
mov
lahf
inc
add
xor
mov
fs
sub
repnz
sbb
adc
sbb
fbld
xchg
lret
sub
data16
cmp
and
push
and
jns
push
bound
mov
rorb
mov
lahf
cs
or
adc
mov
mov
xor
dec
rcrl
inc
mov
addb
mov
jecxz
and
cmp
mov
xchg
pop
sub
ds
mov
movsb
dec
xchg
imul
push
mov
push
push
sbb
imul
or
nop
loopne
movsl
adc
jo
fisttpl
sbb
test
xor
cmpsb
ljmp
insb
shl
int3
inc
xchg
jo
mov
add
bound
mov
jb
add
xorl
xlat
push
repz
and
inc
adc
jne
aas
in
adc
bound
mov
or
rcrl
das
dec
dec
mov
aas
aam
jg
pop
jno
or
push
and
lea
andb
int3
sub
mov
fldl
push
and
sbb
dec
and
fisubrl
aam
cmc
pop
cmp
jbe
ret
push
pop
add
test
mov
jo
pusha
lock
mov
lcall
mov
jbe
sbb
cmc
adc
aaa
xchg
out
add
ja
add
nop
cmp
pop
fwait
jmp
std
pop
cld
movsb
jns
mov
pop
xorb
data16
flds
and
pop
int3
mov
clc
jl
add
push
push
fdivl
lods
rep
inc
fstpt
or
and
inc
cwtl
arpl
lds
outsb
cmp
adc
sub
pop
mov
cmc
xor
mov
inc
pushf
inc
roll
int
push
call
clc
pushf
jno
ja
push
in
pushf
test
xor
rolb
stc
das
hlt
movsl
adc
aas
xchg
adc
xor
xchg
jbe
jne
pop
xchg
fcomps
cmc
popa
lret
std
cmpsb
inc
jae
addl
inc
ds
cld
inc
outsl
mov
fcmovne
arpl
repnz
stos
sbb
sbb
data16
jmp
arpl
ja
orb
js
iret
mov
fldt
mov
xchg
cltd
and
in
mov
sti
pop
xchg
xchg
or
fmulp
adc
mov
aam
or
sbb
add
mov
or
adc
jp
cwtl
insl
jecxz
inc
or
adc
mov
out
mov
test
xor
jg
xor
int
push
xor
mov
les
mov
jle
pop
add
pop
fucomip
inc
xor
add
or
xor
stos
cltd
stos
icebp
dec
shr
std
or
mov
ret
and
add
filds
cmp
jecxz
adc
adc
push
in
and
inc
dec
rclb
push
addl
inc
pop
add
or
popa
cwtl
addl
sbb
shll
jae
stos
mul
sbb
and
shlb
repz
cltd
add
xchg
or
adc
cwtl
bound
lods
adc
shlb
nop
add
iret
rolb
add
mov
and
xchg
mov
add
dec
xchg
inc
xor
iret
pop
icebp
data16
jle
sbb
sbbl
aas
pop
push
jnp
push
cmp
test
ds
mov
inc
incb
inc
and
cmp
xor
adc
jb
or
jge
and
fdivl
push
cmp
sub
mov
mov
jne
sbb
xor
mov
and
add
shrb
pop
push
or
lahf
call
and
push
stos
fistl
xchg
test
adc
push
addr16
mov
inc
incl
filds
sub
adc
xor
je
push
push
xchg
lahf
rorb
pop
in
in
mov
mov
stos
inc
cmp
in
push
ret
xor
sahf
loope
jbe
negl
ret
mov
adc
xchg
push
ljmp
or
xor
cmp
into
lods
or
sub
aam
inc
and
das
ds
roll
mov
mov
loop
push
inc
jb
sbb
aaa
fadds
or
mov
lcall
sub
fnstsw
clc
pop
clc
mov
push
mov
repnz
xchg
loope
mov
movhlps
decl
cmpsb
orb
push
dec
jo
push
mov
outsb
fadds
test
pop
inc
fadd
push
shlb
icebp
xchg
mov
rclb
push
dec
test
lea
bound
ret
inc
insb
repz
push
inc
push
mov
pop
adc
jne
and
sbb
movsl
mov
xchg
push
or
or
cld
mov
aad
inc
stos
orl
popf
mov
jg
aaa
jno
call
mov
mov
cmp
mov
mov
js
jge
mov
sbb
jle
sbbl
leave
cmpsb
push
xchg
mov
pop
inc
dec
push
mov
pop
enter
sbb
stos
inc
mov
xchg
fs
push
orl
pop
push
cmp
in
incb
call
movsb
daa
jne
loope
add
lahf
dec
or
xlat
xor
inc
sti
andb
lock
pop
xor
add
or
enter
xor
sti
sar
mov
push
add
mov
in
mov
outsb
inc
arpl
das
sub
xchg
jo
or
pushf
das
movsb
xor
xor
sbb
cs
adc
jne
cmovno
idivb
pop
mov
icebp
cs
sti
sbb
loope
cmpsl
mov
loopne
and
call
repz
in
xchg
shrb
mov
pop
jo
inc
jns
js
sub
or
adc
out
sbb
jmp
xchg
push
aas
xchg
mov
mov
pop
cwtl
sbb
or
icebp
mov
cmp
out
into
pusha
repz
mov
add
out
mov
xchg
ret
call
das
cld
dec
ja
add
xchg
ljmp
inc
outsb
loopne
mov
nop
dec
nop
fisttpl
add
sarl
mov
fistps
nop
inc
xchg
sbb
lret
push
mov
das
cld
or
adc
jae
imul
incl
les
push
push
dec
lret
movsb
pop
fstpl
pop
mov
push
lods
inc
jno
mov
shll
jge
in
leave
push
sarb
push
cwtl
repnz
les
outsb
mov
push
or
push
mov
push
mov
cmp
aam
pop
push
mov
mov
push
dec
aad
jnp
sbb
stos
sbb
mov
aaa
shll
adc
subb
stos
orl
xor
incb
test
dec
push
shrl
push
jne
gs
sbb
or
aaa
loopne
mov
mov
test
into
ret
outsl
dec
add
sub
mov
clc
fwait
adc
leave
xorb
sbb
jge
pop
push
fcmovnbe
ljmp
mov
jl
push
push
es
add
adc
dec
out
mov
jmp
cmp
pop
aas
push
push
inc
cli
scas
jmp
push
test
ss
fcoms
scas
insb
xor
inc
xchg
incb
sub
movsl
je
pop
inc
sahf
xchg
inc
stos
jbe
sbb
pop
mov
filds
sub
push
iret
add
sbb
bound
rcl
ss
lahf
mov
fstpl
pop
push
mov
cmp
pop
fcmovnu
xor
stc
loopne
ret
lods
cmp
adc
jg
xchg
daa
pop
and
mov
outsl
dec
sahf
dec
add
shlb
dec
orl
jmp
imul
jge
adc
or
sub
mov
mov
inc
icebp
in
test
arpl
mov
test
xor
fs
imul
and
and
inc
cmp
push
shrb
dec
popf
scas
lods
mov
pop
add
sub
cmpsb
jecxz
mov
push
xor
pop
fistl
sub
fldenv
sbb
mov
movswl
mov
and
jmp
dec
gs
imul
loopne
andb
adc
push
xor
js
rcll
aaa
sbb
rclb
mov
push
xchg
sub
inc
rcl
stc
jno
addb
jno
nop
aaa
addl
movsl
push
dec
shlb
pop
les
pop
into
or
mov
lcall
fwait
aas
and
mov
mov
push
cmpsb
outsl
aaa
in
pop
dec
jb
add
sub
outsb
sub
lea
dec
ret
cmc
out
loope
sti
fwait
mov
or
inc
mov
ljmp
cmp
dec
dec
popf
mov
jb
int
adc
test
cmc
les
shll
inc
mov
and
out
and
mov
cwtl
mov
daa
lahf
mov
mov
xchg
dec
xchg
mov
je
sub
jp
mov
and
lock
pop
shlb
add
inc
sbb
ret
in
mov
adc
imul
outsb
xlat
clc
mov
sti
insb
sbb
lea
push
adcb
pop
dec
popa
sub
or
shll
xor
inc
pop
or
add
pop
jne
push
and
mov
jo
decb
imul
mov
fidivrs
add
sub
push
dec
lret
add
outsl
shr
test
inc
js
int
sbb
into
jno
add
mov
xchg
std
es
rolb
sti
shl
stos
sbb
pop
mov
add
sbb
sbb
jl
cmp
aas
dec
sbb
movl
pop
addr16
push
inc
mov
cmpsb
push
call
push
roll
shr
xchg
dec
in
jb
xor
rol
mov
sbb
insb
clc
ror
push
sub
xchg
outsb
or
mov
xchg
jecxz
dec
adc
hlt
shrb
mov
push
mov
gs
dec
add
or
mov
and
ss
jae
jge
xchg
inc
push
test
jno
mov
mov
add
pusha
inc
and
cmc
call
push
inc
in
lahf
mov
xor
xchg
call
jne
mov
xor
pop
js
xchg
mov
test
mov
iret
in
pop
loope
repz
mov
das
bswap
rorb
adc
test
add
xor
pop
add
jo
mov
dec
lcall
outsl
sbb
mov
pop
and
fidivrl
push
dec
decb
mov
andb
sub
ds
outsb
cwtl
stos
call
test
sahf
mov
int3
ror
cmp
lcall
faddp
mov
push
cmp
jo
mov
out
int3
jo
cmpsl
jo
push
std
mov
mov
jp
lods
inc
daa
inc
sbb
addb
push
xorl
in
lret
imull
xor
ss
movsl
lods
xchg
fstl
mov
push
cmc
mov
lods
inc
pop
clc
add
mov
jecxz
lcall
cmpsb
loopne
sbb
mov
sbb
es
cmp
and
in
cwtl
dec
loop
push
xchg
or
mov
repz
inc
mov
movsb
mov
push
fistpl
cmc
clc
gs
movsl
jns
faddp
out
aaa
push
cli
jbe
mov
adc
bound
frstor
inc
dec
sti
xchg
loopne
add
outsl
stos
cmpsl
or
or
mov
mov
jnp
mov
and
adc
adc
mov
dec
add
mov
movsl
sbb
bound
ret
cmpb
pop
rcll
jmp
push
outsl
mov
pop
lcall
mov
rclb
mov
xor
pop
mov
loop
push
in
jl
in
inc
inc
lock
dec
shll
cmp
roll
loopne
je
push
push
push
and
cmc
cs
aas
or
pop
xchg
das
mov
fcmovbe
icebp
sub
sub
fldenv
pop
cli
dec
clc
packssdw
or
mov
arpl
iret
ljmp
push
cwtl
adc
scas
ret
movsb
lret
xchg
mov
dec
and
fdivr
movsb
jo
nop
xor
dec
adc
leave
xchg
xor
ss
inc
jecxz
popf
cmc
pop
nop
and
das
ljmp
mov
out
and
sarb
lods
in
movsl
hlt
int
sub
mov
fbstp
pop
inc
push
call
icebp
jb
pop
test
inc
cmp
mov
neg
mov
mov
mov
jb
cmpl
push
and
and
mov
into
adc
ljmp
mov
xor
mov
xchg
dec
mov
cmc
xor
fcoml
js
pop
and
imul
push
insl
xchg
lea
or
loopne
shll
call
addb
mov
push
jecxz
sbb
ljmp
push
cmp
jno
add
jmp
and
ja
pop
sbb
outsb
mov
sahf
rolb
sarl
out
popf
pusha
inc
pop
pop
aas
hlt
mov
out
repnz
outsl
cld
jg
je
mov
outsb
repnz
aad
cmpsb
pop
inc
xor
inc
mov
lcall
inc
das
mov
xor
xorl
mov
cmp
cld
sub
lods
mov
add
inc
pop
jo
sahf
addr16
mov
cmp
or
xor
pop
inc
dec
dec
xorps
mov
jmp
scas
outsb
pop
sub
adc
adc
stos
ret
mov
in
fcompl
inc
xor
adc
out
fidivs
loop
push
fs
rdmsr
out
sub
inc
push
push
add
jg
jo
popa
xchg
dec
mov
mov
dec
insl
hlt
jmp
mov
mov
xchg
jmp
xor
jb
ja
jmp
push
adc
sub
movb
mov
jo
sarl
inc
adc
loopne
xchg
mov
clc
popa
es
adc
fs
dec
lret
lea
xchg
rorl
out
mov
dec
mov
fisubrl
dec
add
mov
das
push
add
sar
cmp
mov
xchg
dec
jge
dec
sub
popa
loope
cmpsb
mov
pop
filds
insb
mov
dec
or
push
js
pop
xchg
pop
clc
shlb
lods
inc
mov
pop
push
sbb
loop
pusha
add
sbbl
xchg
aam
outsl
test
shl
sub
into
sbb
test
sbb
jmp
dec
lcall
fcomp
pushl
nop
push
sbb
out
repz
mov
push
mov
add
mov
xorl
arpl
add
js
push
mov
std
fucomip
sbb
scas
std
test
outsb
imul
jno,pn
pop
xchg
push
movsl
adc
mov
jg
mov
loopne
test
data16
les
outsl
pop
hlt
cmpsb
pop
rcrb
push
cmpsl
add
leave
cwtl
pop
sti
sbb
mov
cmpsb
out
iret
mov
and
inc
mov
faddp
outsb
xor
push
hlt
cltd
add
add
ret
mov
mov
cld
or
in
out
mov
dec
dec
movsb
out
mov
mov
test
xchg
adc
stos
das
fsubl
aam
aam
pop
frstor
cwtl
repz
test
popf
sbb
or
xchg
inc
dec
ljmp
das
mov
mov
cs
imul
outsb
shll
xorb
jecxz
mov
push
mov
out
push
cmc
ffreep
mov
mov
xchg
shrb
ret
inc
push
sbb
mov
and
adcl
xor
shll
push
popf
lcall
fwait
mov
mov
add
add
add
movsl
add
neg
inc
neg
inc
cmp
add
pop
push
push
mov
or
das
adc
ja
mov
lahf
dec
ljmp
mov
jno
icebp
sbbl
jecxz
shll
sbb
mov
sub
out
adc
and
sub
hlt
dec
lret
cmp
fdivl
push
add
les
or
fildll
les
push
xchg
lods
xor
mov
out
test
fildl
xor
jmp
adc
loope
mov
pop
or
stc
mov
or
test
int3
jp
pop
xor
cld
lds
jbe
outsb
std
pop
rcrl
pop
fimuls
mov
jecxz
jecxz
push
push
out
mov
pushl
fs
in
icebp
pusha
adc
sbb
subb
push
sub
ds
repnz
dec
dec
aam
in
xor
mov
cmp
xor
jae
adc
mov
push
stos
shrl
jno
xor
mov
or
adc
stos
andl
pop
loopne
insb
in
adcl
subb
sti
xor
mov
aam
push
sub
xchg
sub
arpl
jnp
nop
mov
fisubrs
sbb
test
push
jno
pop
xchg
stc
testb
xchg
subl
sbb
mov
jmp
dec
mov
inc
inc
cmp
call
inc
ret
mov
out
icebp
cmpsb
clc
pushl
pop
iret
push
or
sbb
loopne
add
add
add
mov
scas
pop
mov
aaa
add
jo
dec
mov
inc
mov
xor
mov
fwait
cs
clc
out
jnp
pop
mov
fisubrs
xchg
ja
rcrl
push
xchg
in
stos
cwtl
cmp
mov
and
mov
xchg
mov
test
fldt
xor
les
popa
mov
ljmp
xchg
cli
adc
fdivl
cmovne
and
or
fldl
test
cmp
jbe
shl
or
and
push
aaa
pop
pop
data16
call
sbb
or
es
or
or
test
xchg
iret
xor
cld
push
ss
or
push
lea
subl
add
jb
mov
inc
mov
aaa
es
mov
outsb
pusha
mov
out
add
xor
rol
cmp
mov
push
gs
in
add
leave
enter
neg
pop
out
inc
or
add
inc
jo
lods
jg
jmp
packsswb
cs
int3
or
add
std
stos
cmpsb
jg
ret
pop
sbb
pusha
movsb
jno
mov
stos
cltd
or
sbb
push
push
xchg
jns
cmp
fisubrs
sbb
jle
pop
clc
push
jbe
add
pushf
je
push
mov
pop
sub
ja
out
in
adc
cmpsb
mov
call
decb
pop
cli
cmpsl
mov
xchg
and
sti
test
test
cld
shrl
popa
ja
cmp
fscale
out
call
xchg
sub
xchg
cli
dec
inc
cmpl
jg
cmpb
das
iret
sub
or
mov
mov
out
push
mov
mov
sbb
pushf
cmp
icebp
mov
xchg
lds
out
inc
shlb
sbb
jg
incb
into
je
pop
outsb
loopne
gs
xchg
shlb
push
pushf
cmp
out
mov
push
and
mov
loopne
in
mov
psubd
jp
jnp
or
push
dec
cld
mov
mov
xor
adc
dec
mov
popf
rcr
roll
out
xchg
sarb
jp
mov
or
pop
repnz
hlt
pop
je
pop
fcompl
or
jns
nop
es
fs
decl
jbe
mov
gs
jecxz
leave
inc
inc
pop
test
cmc
test
mov
jnp
movsb
aaa
pusha
roll
adc
inc
add
repnz
rcr
mov
mov
pop
push
mov
fwait
mov
pop
std
xor
add
jmp
sbb
outsl
outsl
or
testb
seto
ret
xor
data16
scas
add
push
inc
adc
int3
loope
lcall
cmp
add
and
scas
jne
add
test
dec
nop
ljmp
adc
mov
or
xor
int3
xchg
pushl
js
sbb
or
outsl
mov
sub
mov
sub
push
or
and
call
cmpsl
popa
xor
call
push
push
push
push
lods
push
pop
outsl
inc
aaa
mov
fstps
or
or
outsb
add
and
xchg
sbb
repz
adc
pop
mov
ja
push
lea
pop
pop
cli
cmp
icebp
cmpsl
sbb
arpl
push
ss
les
int
leave
rcll
add
iret
xchg
mov
jp
ss
stos
aam
or
iret
popa
xorb
push
xor
or
xchg
lcall
icebp
sub
xor
cmp
hlt
aaa
mov
pusha
pop
cld
mov
cwtl
ret
cmp
gs
imul
or
fildll
push
fadds
pushf
cmpsl
inc
mov
decl
xchg
push
js
dec
sub
pop
sbb
mov
xchg
pop
enter
loope
nop
mov
sbb
enter
inc
jmp
mov
mov
cmp
pop
jl
jo
fdivp
mov
ss
cmpsb
sbb
add
cmp
cwtl
in
add
leave
rorl
fnstsw
lcall
push
mov
push
leave
lods
mov
lcall
jo
mov
loopne
nop
cmp
xchg
lret
and
les
lea
imul
rcrb
jbe
loope
or
ss
insl
jmp
daa
nop
xchg
int3
xor
pop
mov
xor
cltd
and
ss
jne
inc
aam
xchg
adc
push
pop
mov
and
push
repnz
lcall
mov
dec
sbbb
in
cmc
and
mov
aaa
das
push
jae
pmaddwd
inc
mov
das
out
inc
pop
mov
stc
aad
mov
xchg
lock
mov
push
or
cltd
xor
outsl
push
lahf
shrb
inc
adc
fidivl
cld
sub
outsb
inc
nop
mov
lds
cmp
push
mov
adcl
adc
push
jo
mov
mov
leave
mov
sbb
jno
out
call
pusha
inc
pop
ret
imulb
pop
inc
add
sub
rcl
xchg
mov
jbe
pop
shl
fwait
icebp
and
mov
mov
leave
loopne
bound
sahf
scas
jae
mov
push
les
adc
and
dec
sub
loope
and
aam
imul
pop
rcll
push
xlat
sahf
add
lret
outsb
loope
ret
mov
add
add
icebp
pop
or
shrl
icebp
mov
loope
popa
cwtl
js
jg
sub
out
push
pushf
xor
add
shll
divb
jmp
sti
sbb
jns
enter
test
insl
loope
sub
xchg
cmp
fmull
popa
xchg
sub
mov
xor
imul
pop
test
imul
fisttps
lret
mov
cmp
or
repnz
ss
outsl
outsb
std
mov
inc
das
addl
fisubrl
mov
neg
clc
jmp
mov
dec
neg
cmp
mov
test
sub
pusha
loopne
mov
pop
lcall
ret
mov
hlt
scas
pop
mov
enter
lods
std
add
xor
int
daa
mov
xchg
stos
lea
out
mov
lds
bound
mov
cmpsb
mov
repz
sub
clc
mov
xchg
jge
hlt
xor
mov
sub
push
cmpl
lds
add
or
mov
jnp
fimull
mov
or
or
cmp
fcmovbe
pop
jmp
lcall
cwtl
xchg
fistpll
cmc
sbb
cltd
out
sub
aas
mov
movsb
scas
add
iret
ss
and
in
data16
or
inc
mov
scas
pop
sub
mov
outsl
fcomps
int3
sahf
fmull
push
mov
ret
sbb
cs
sub
es
xchg
or
mov
adc
add
or
icebp
jb
test
cmp
push
je
mov
mov
xchg
out
adc
mov
ficoms
mov
cmpsl
and
jns
and
repnz
xor
add
inc
in
add
add
push
and
outsb
stos
std
outsl
sub
or
or
rcrb
movsl
mov
and
adc
sub
mov
inc
jmp
xor
jg
cmp
es
les
fsubs
lret
stos
push
inc
ja
je
adc
adc
cli
daa
add
sbb
shr
mov
inc
fs
sbb
push
out
push
xchg
cmpsl
or
or
add
mov
or
cltd
shlb
leave
push
repz
or
push
mov
ffreep
push
mov
hlt
cmpsl
test
dec
test
out
push
fcomps
bswap
loop
dec
or
addr16
mov
shll
lods
xchg
subb
push
pop
push
mov
cld
push
stos
faddl
roll
push
or
or
aaa
jne
mov
cld
addb
or
cli
mov
mov
adc
or
cmp
jb
mov
sbb
xchg
jae
fistpl
in
lock
mov
lea
pop
repnz
fnstenv
add
andb
imul
mov
inc
nop
adc
jb
aad
and
pop
xor
test
dec
adc
notl
push
mov
dec
add
fadd
rcll
pop
mov
adc
or
inc
mov
add
and
sbb
inc
out
je
pushf
stos
add
call
mov
add
test
sbb
and
lea
or
mov
mov
popf
push
hlt
sub
cmp
lock
mov
mov
sbb
mov
inc
sub
arpl
or
add
cmp
hlt
rorl
mov
jl
shlb
test
jns
fs
dec
sbb
icebp
dec
nop
push
xlat
add
push
mov
icebp
sahf
inc
js
lea
mov
fiaddl
pusha
xor
addb
pop
add
lds
cwtl
pop
mov
inc
adc
mov
and
adc
push
clc
adc
sti
js
mov
pop
adc
ret
arpl
inc
sbb
push
iret
add
insl
repnz
ficoml
inc
les
sub
mov
add
outsb
popa
inc
lret
aam
mov
jecxz,pn
sub
stos
sar
cld
call
jbe
das
arpl
inc
ret
icebp
roll
insl
push
pushf
mov
dec
lock
sub
std
push
fwait
pminsw
scas
enter
lods
mov
enter
pop
or
bound
dec
aam
movsl
shlb
push
jl
jb
rcll
mov
push
bound
mov
jecxz
ret
push
jp
adc
lock
jae
add
push
sub
sub
fisttpl
jns
addl
insl
jo
clc
push
mov
pusha
imul
add
adc
test
and
push
adc
mov
jge
pop
imul
aam
fwait
jg
jg
pop
sub
pusha
pop
cmp
loopne
fildl
rorl
nop
sbb
mov
push
je
mov
clc
lods
push
or
and
scas
sbbl
dec
test
fdiv
cmp
sub
mov
mov
lahf
enter
fstpt
jnp
sub
dec
inc
bound
lock
mov
adc
push
inc
pop
aas
adc
outsl
adc
sti
rorb
inc
jp
lcall
mov
mov
inc
dec
inc
mov
push
lock
mov
aam
inc
jl
lret
inc
out
or
mov
or
and
jmp
sub
xor
xlat
xor
mov
mov
cmp
cmp
enter
cmp
mov
fnstenv
fnstsw
leave
xchg
arpl
push
mov
pop
cmp
fimull
int3
js
divl
push
sbb
loopne
repz
dec
inc
lea
pusha
push
inc
out
scas
jbe
pop
sbbb
imull
jl
add
push
jae
sbb
xlat
mov
xor
inc
add
inc
sbb
xor
dec
out
mov
adc
lock
pusha
mov
or
inc
and
cmpl
adc
mov
add
mov
outsl
and
xchg
lahf
cwtl
lea
pop
adcb
pop
inc
adc
call
out
jg
fdecstp
dec
mov
push
or
addr16
sbb
jo
dec
mov
push
sarb
enter
inc
rcll
inc
xchg
jge
xchg
mov
shrl
test
fsub
test
mov
stc
rorl
imul
lock
xchg
cmp
lea
movsb
cmpb
aaa
stos
jg
imul
xorb
rcll
jnp
call
sar
ss
ret
or
pop
iret
repnz
jecxz
mov
les
jno
aam
into
pop
mov
mov
addb
pop
add
dec
inc
mov
mov
fistl
scas
call
shrb
cmp
jge
mov
lods
fcmovnbe
jle
push
sar
loopne
and
pop
jb
adc
push
imul
inc
fcmovnbe
adc
jbe
sbb
into
jp
dec
mov
mov
and
pop
repnz
sub
adc
pop
dec
xchg
js
cltd
mov
xchg
mov
outsl
mov
mov
out
mov
and
clc
nop
mov
add
adc
loop
mov
in
popa
sub
lret
inc
roll
fwait
mov
fcmovnbe
in
rcll
adc
inc
std
pop
in
add
shl
sbb
lcall
pop
sti
outsl
pop
ja
mov
sub
in
cmpsb
add
test
outsl
inc
xor
pop
pop
subl
mov
mov
dec
test
and
in
ja
mov
lahf
rolb
sub
das
mov
popa
or
sbb
test
add
nop
call
cld
sub
mov
es
sub
cmp
mov
push
mov
addr16
mov
in
mov
stos
mov
repz
add
movsb
push
hlt
fbld
imul
push
mov
xchg
mov
daa
popf
sbb
jnp
cmp
out
shl
sbb
aaa
scas
add
stos
leave
adc
pop
insb
sub
and
in
mov
ljmp
insl
dec
call
std
xchg
dec
icebp
or
push
mov
pop
hlt
shr
ja
outsl
adc
add
fldl
push
js
loop
jg
js
add
jge
in
add
mov
fsubrp
cmpsb
xchg
rcr
and
movsb
in
js
pushf
rolb
int3
add
inc
cpuid
add
ljmp
push
mov
test
imul
jnp
sbb
cmp
shrl
lea
and
or
lds
divb
add
dec
movsl
pop
jne
int
add
daa
sub
dec
cld
add
xchg
insb
mov
inc
ja
lods
sarb
fidivrs
add
and
pop
push
mov
mov
push
jle
mov
popa
sub
adc
dec
fldl
or
test
xlat
mov
push
push
je
push
pop
xor
dec
dec
xor
pop
lods
mov
sar
popf
call
mov
jae
test
and
xor
push
in
sub
xor
xchg
add
lock
and
or
sub
enter
mov
push
cld
popf
and
fwait
enter
mov
pop
add
pop
ret
add
out
sub
cmp
fstl
std
xor
sbb
push
adc
push
shll
test
jnp
repz
xor
jg
mulb
sub
xlat
mov
mov
adc
push
jnp
repz
imul
dec
dec
mov
xchg
mov
push
arpl
xor
xor
repz
or
leave
lahf
call
sbb
fldl
aam
adc
push
iret
or
inc
push
aad
mov
fsubp
adc
mov
aam
rclb
mov
leave
push
jmp
les
neg
push
cvtpi2ps
fs
sbb
cmpb
push
outsb
sbb
fcomi
sbb
mov
aaa
lcall
int
add
jp
ljmp
roll
fidivs
je
mov
cmp
adc
xor
xor
fdivl
mov
jl
jo
loope
inc
adc
jl
aaa
cmpsl
addr16
inc
sub
pmuludq
cmp
in
jg
push
out
jp
jmp
cld
rorb
and
mov
or
xchg
xchg
int3
adc
mov
xor
mulps
pusha
shrb
dec
add
data16
sbbb
jmp
outsl
mov
jns
cmp
inc
dec
pusha
push
cltd
push
lods
into
mov
std
inc
or
mov
lret
xchg
fwait
xor
mov
out
stos
pop
pop
inc
out
aas
mov
xchg
add
iret
pop
mov
push
mov
std
mov
andl
aam
xorb
jg
mov
dec
decb
subb
mov
or
cmp
xchg
mov
mov
cmp
lds
adc
call
adc
add
std
push
orps
add
xchg
push
fisubl
int3
xchg
mov
das
insb
push
divb
sbb
data16
mov
int
cmp
adc
mov
adc
jbe
andb
pop
dec
ljmp
fadd
fdivrs
es
imul
orl
jge
jno
test
mov
xchg
add
loop
lock
pop
mov
addb
lahf
xlat
cmp
icebp
orb
push
adc
shrl
dec
out
push
jnp
inc
out
adc
or
dec
inc
clc
inc
sbb
mov
dec
xchg
dec
lds
and
iret
push
jae
adc
in
int
mov
nop
mov
arpl
add
inc
lret
adc
addb
arpl
lcall
ficompl
mov
push
xlat
push
fnsave
add
or
je
nop
call
push
aad
imul
and
or
inc
adcb
jge
daa
inc
out
icebp
cmpsl
and
pop
clc
dec
clc
push
outsl
mov
xchg
pusha
aas
add
cmpsb
test
push
mov
pop
cmp
push
ret
dec
mov
jle
xchg
sub
xor
xor
outsb
je
xor
shll
dec
push
push
dec
inc
mov
inc
or
mov
rorl
out
jbe
int
push
scas
outsl
xor
xchg
mov
in
add
xchg
or
movsb
call
or
stos
dec
sbb
xchg
sarl
in
sbb
mov
xlat
loop
gs
mov
in
fnstenv
loop
imul
mov
pushl
rclb
sub
add
test
je
xchg
loopne
push
push
push
pop
jae
aas
pop
mov
fsubrl
addr16
or
inc
xchg
mov
sbb
push
add
adc
or
jp
ret
cmp
mov
out
fnstcw
repz
add
pop
jae
xchg
imul
les
shlb
and
adc
sbb
xor
mov
push
jae
mov
and
sbb
add
pop
sub
inc
in
ret
aam
push
and
push
mov
and
in
mov
push
or
push
dec
xchg
in
adc
sub
or
enter
and
lcall
popf
push
insb
xchg
add
loop
adc
jo
mov
out
outsl
shl
adc
push
push
rolb
mov
mov
cld
sbb
push
je
mov
inc
pop
adc
pop
cmc
sub
lcall
cmp
sbb
add
ss
cmpb
movsb
lcall
lods
cmpsb
and
pop
lcall
ljmp
stc
jg
pop
adc
sti
jg
stos
xor
xchg
push
popf
sbb
es
cmp
mov
sub
filds
das
insl
outsl
popf
jle
rcl
xor
jno
in
adc
mov
addl
jecxz
fsubrp
cwtl
inc
test
push
add
mov
push
insb
adc
popf
arpl
decl
push
sar
hlt
cmp
pop
sbb
repz
mov
das
aam
adc
adc
mov
dec
test
rolb
xor
and
cmp
insl
fbld
fnclex
xorb
add
ds
jo
sahf
sti
jo
jl
or
rorl
sbb
mov
cmpb
jno
jbe
cmp
stos
push
loope
and
dec
cwtl
add
in
bound
mov
div
js
dec
pop
stos
mov
dec
popa
test
lahf
inc
mov
pop
xchg
or
fisttpl
mov
call
pop
scas
mov
js
push
ljmp
ljmp
sbb
sbb
sbb
repz
aas
hlt
incl
cld
mov
push
jp
and
popa
mov
leave
push
jg
inc
mov
clc
adc
pop
mov
ja
add
outsl
clc
xchg
adc
or
sarl
movsb
push
or
int3
roll
xor
ret
cli
mov
cs
push
xor
test
push
and
or
add
pop
aad
sbb
adc
fwait
and
push
filds
add
sub
adc
sti
and
das
inc
iret
ja
repz
test
jg
pop
js
push
test
inc
mov
pop
sbb
cld
inc
cld
je,pt
jl
mov
push
sub
es
incb
out
inc
aad
mov
mov
mov
xor
jg
das
aam
mov
mov
adc
jbe
dec
mov
aaa
jle
push
pop
pop
push
iret
pop
icebp
mov
pop
je
shlb
mov
push
fisttpl
fimull
cmp
in
lods
fidivl
sbb
jge
jno
imul
mov
mov
leave
jne
jno
rcr
sar
adc
test
mov
pop
scas
imul
add
in
cmp
or
test
dec
stos
jmp
cmp
adc
xchg
imul
lahf
or
pop
clc
fists
mov
xchg
popa
call
cltd
mov
rcrl
add
cli
mov
sarl
pop
push
xchg
das
xor
adc
xchg
fistpll
mov
loope
call
or
mov
mov
mov
adc
js
jl
push
call
outsl
outsl
or
hlt
mov
movsb
pop
pop
mov
je
mov
or
fidivl
loop
mov
mov
adc
iret
mov
scas
push
mov
mov
js
mov
xchg
ds
bound
jmp
pop
pop
push
decl
or
mov
mov
or
out
sbb
fcomi
ja
mov
xchg
inc
jnp
pop
push
dec
xor
mov
addr16
mov
cli
adc
sbb
icebp
lret
mov
xchg
ja
jmp
lods
jecxz
jle
cmp
jne
xor
pop
pop
std
inc
pop
mov
add
or
mov
adc
iret
mov
rcrl
push
fisubrl
dec
enter
das
push
pop
decl
mov
addr16
in
mov
stos
fdivrs
dec
test
xorb
adc
stos
mov
add
mov
push
jp
stos
mov
out
dec
mov
and
xor
or
popf
out
sbb
lds
ljmp
add
or
shll
test
push
insl
leave
inc
out
dec
xchg
push
mov
stos
imulb
stos
sahf
imul
push
pop
test
das
aad
outsb
push
stc
and
lea
decl
jg
fcoml
sub
mov
mov
xchg
sub
pushf
fisubrs
mov
pop
test
popf
pop
push
mov
roll
andb
movsl
in
sti
inc
ror
outsl
popa
rorl
pop
fisubrl
or
mov
mov
jb
sub
xor
add
jmp
cs
sub
out
insl
sub
mov
mov
adc
js
lds
jb
xchg
push
sbb
xchg
in
movsl
je
sub
cmp
adc
insl
test
pop
fwait
jmp
aaa
or
push
in
xor
lods
aad
mov
fistpll
cmpl
cmp
inc
loop
and
popa
jg
decl
pop
or
jbe
shrb
mov
shlb
ljmp
gs
test
pop
test
orb
ds
push
inc
pop
aam
mov
and
pop
push
aam
inc
xor
test
xor
imul
je
cmp
insb
or
xor
pusha
xchg
mov
sbb
push
and
add
push
in
xchg
push
push
mov
mov
aam
mov
lock
jae
sub
rcl
aad
pop
jne
push
data16
or
ds
out
add
add
outsb
lds
mov
pop
adc
pop
je
dec
add
testb
fbld
adc
inc
sub
push
push
mov
mov
dec
dec
cmp
nop
shl
and
add
or
in
pop
fldcw
incb
push
mov
adc
xchg
rcl
xlat
loopne
decb
gs
mov
inc
mov
and
inc
fisttps
test
xchg
cmpsb
or
pop
inc
dec
iret
adc
jne
xchg
fmuls
pop
loopne
out
mov
sbb
insl
int3
in
pop
int
pusha
data16
push
addr16
lcall
je
roll
xlat
jae
cmp
sahf
push
jbe
lret
cmp
mov
aad
push
pop
mov
push
or
add
sbb
cmp
ss
mov
stos
fadds
sbbb
movsl
mov
cmp
fcomp
inc
bound
andnps
xor
pop
rcl
or
jne
fsubrs
je
notl
dec
rorb
pop
lds
imul
mov
nop
ret
jg
or
mov
ret
push
rcrb
xor
imul
xor
jns
fstpl
fistpll
adc
lods
mov
in
jne
xchg
adc
and
fbstp
mov
rolb
push
movsl
setne
bound
test
hlt
popf
adc
cmp
popa
pop
mov
icebp
xor
faddp
nop
jecxz
inc
addr16
mov
pop
ret
and
push
fucom
scas
dec
sbb
add
push
cmp
cmpsb
pop
push
sti
in
fs
push
lds
pop
xor
sbb
mov
push
ss
inc
jbe
sbbb
in
jb
inc
les
aaa
add
mov
push
mov
mov
loop
add
jno
pop
push
adc
jo
es
cli
outsl
push
xor
bound
xor
or
pop
inc
push
push
test
enter
mov
arpl
pusha
push
or
add
cmp
in
bound
or
mov
gs
adc
stos
mov
int
test
cmp
test
sarl
outsb
arpl
xor
xor
fwait
popf
adc
add
add
sbb
and
cmp
inc
add
jo
inc
insb
inc
cmp
nop
mov
movlps
inc
jne
cmp
in
add
sbb
inc
mov
pop
scas
inc
jns
jg
mov
inc
out
stc
sub
mov
xchg
jb
add
cli
mov
loopne
fcoml
neg
outsb
adc
mov
sub
sub
push
sbb
cmc
rolb
mov
jbe
xchg
daa
mov
jnp
fldl
jg
outsl
mov
sbb
sub
sub
cmp
nop
xchg
and
int3
xchg
scas
imul
mov
and
scas
leave
orb
in
add
push
les
add
mov
outsl
test
mov
add
sbb
sbb
fs
add
add
pop
jns
cli
push
mov
sahf
repnz
mov
dec
in
roll
push
fdivrs
test
sbb
pop
out
push
or
adc
out
fs
add
pop
push
sub
je
and
data16
add
push
lret
dec
or
add
test
mov
mov
clc
push
mov
sbb
add
mov
lea
lock
cmp
in
mov
data16
js
mov
addl
xor
pop
mov
push
bound
clc
lock
adc
ret
repz
and
pop
inc
shlb
xchg
add
pop
add
add
xchg
stos
add
imul
and
jge
mov
insb
movsl
enter
push
mov
push
xlat
lock
inc
mov
dec
dec
lds
pop
dec
xchg
push
pop
shll
lock
xlat
xor
or
in
inc
sub
int
outsl
mov
cmpsb
jnp
ret
add
or
nop
or
xchg
add
add
xor
xor
fwait
add
xchg
pop
pop
dec
push
lea
outsl
hlt
fstp
mov
dec
adc
lock
loopne
fistl
in
ljmp
push
dec
loopne
mov
in
jno
nop
add
inc
fwait
push
test
jecxz
insl
ss
adc
clc
add
jnp
xchg
mov
adc
pop
push
mov
mov
test
adc
mov
ficomps
and
push
les
jnp
inc
adc
dec
mov
pop
repnz
or
cmp
aaa
mov
adc
rcrb
dec
inc
cmc
xor
hlt
push
push
data16
lock
repz
mov
ret
dec
cld
lods
pop
hlt
push
jge
adc
jno
call
cmp
jns
mov
in
xchg
orb
loop
or
xchg
imul
iret
dec
sbb
sbbb
addb
mov
pop
adc
add
add
test
pop
xor
clts
inc
xor
mov
add
inc
pushf
sbbb
jmp
adc
cmp
dec
inc
jnp
test
je
inc
fs
sbb
or
mov
or
mov
fistpl
out
jl
loopne
sbb
inc
loope,pn
mov
negb
fadd
mov
cmp
add
daa
xchg
ret
cmp
pop
insb
inc
cmc
repnz
icebp
outsl
adc
in
mov
add
stos
jle
mov
pop
enter
test
ds
jo
and
addb
loop
std
ret
dec
adc
cmc
xchg
stos
imul
fwait
test
cmp
cmp
cmp
push
dec
pop
or
inc
xlat
loop
dec
ffree
pop
push
and
leave
push
dec
fs
addr16
push
push
pop
inc
cltd
icebp
dec
mov
stos
imul
adc
repnz
or
add
les
js
fsubs
and
and
mov
add
jmp
cmp
push
jae
test
jae
xor
push
sbb
ss
xchg
rcl
mov
test
roll
dec
rcrb
mov
rcll
imul
mov
call
or
sbb
cmp
ret
or
xor
dec
daa
mov
inc
adc
mov
lods
clc
mov
jmp
repnz
jp
daa
lock
out
rolb
inc
mov
sbb
and
js
in
or
sbb
add
loop
lret
mov
roll
jmp
aam
mov
rolb
or
or
add
sbb
mov
int
pop
jl
adc
push
mov
enter
nop
pop
mulb
add
shl
jmp
imul
outsb
push
push
xchg
lcall
pusha
mov
inc
orb
outsl
les
fstps
in
vmovddup
sbb
cmp
cmpb
int3
pop
pop
jo
or
int3
dec
aad
mov
jle
addl
mov
pop
sub
cmp
inc
and
cmpsb
xlat
out
leave
idiv
das
icebp
jae
in
shrl
mov
addr16
cs
pop
test
push
jmp
shrl
dec
mov
andb
imul
or
push
mov
cmpsb
sub
out
sub
mov
dec
sbb
cs
and
mov
mov
sarl
lock
add
sub
inc
inc
lcall
push
mov
and
adc
inc
lds
jle
mov
xor
xchg
in
test
cmpsl
push
or
cmp
out
xorl
cmpsb
dec
xorl
aaa
clc
sbb
mov
jbe
fcmovnu
inc
mov
and
cmp
mov
sti
outsl
fstpl
movsl
push
jno
lock
mov
pop
jmp
adc
icebp
jg
sbb
pop
pop
stos
or
lods
lea
lcall
pop
or
test
fadds
pop
dec
fsubrp
jecxz
dec
aam
outsl
push
icebp
clc
and
popa
jp
ret
std
pushl
xchg
sub
rorl
cs
bound
mov
xchg
test
push
ret
rcrl
fadds
into
push
push
push
out
adc
dec
push
enter
jno
test
fistpl
push
in
mov
insl
xchg
hlt
pop
das
jl
adc
push
sahf
push
push
and
lahf
ja
add
sub
adc
add
ljmp
sahf
add
mov
cmc
mov
adc
push
fstpt
push
push
daa
push
jge
shl
xchg
clc
or
lret
dec
bound
icebp
test
add
cmp
data16
fstps
or
jg
clc
out
or
mov
xchg
cmp
add
or
bound
mov
fcoms
add
ljmp
loop
mov
dec
xor
add
outsl
std
cli
xchg
push
lods
mov
je
and
add
rclb
mov
das
xor
inc
mov
and
mov
add
pop
add
jns
aam
cmp
sbb
fs
test
mov
mov
jne
sub
fs
sbb
xchg
test
sbb
test
inc
pop
inc
ficoms
xor
cmp
lods
mov
pop
dec
pushl
cmpsb
jp
out
cmp
dec
pop
mov
jo
test
data16
aam
adc
pushf
cmc
ja
and
sbb
insl
into
repz
addr16
mov
push
add
in
aaa
inc
aaa
in
sub
cwtl
mov
adc
aad
rorl
shrl
push
jb
mov
fidivl
mov
jbe
pop
sahf
add
lds
pop
ret
cltd
in
mov
dec
mov
mov
mov
pop
into
js
rcll
jg
imul
pop
adc
and
loop
out
pop
sahf
decl
mov
cmp
sti
mov
jnp
daa
das
xchg
out
jp
test
sbb
adc
ja
jnp
ds
jmp
push
sahf
push
mov
inc
add
inc
push
es
adc
pinsrw
cmp
add
mov
in
data16
pop
rolb
jne
test
pop
fldt
dec
lock
out
add
cli
dec
jo
std
loope
nop
xchg
or
ja
cmp
pop
cs
push
pop
out
mov
or
cmp
rclb
cmp
int3
push
and
rcrb
scas
stos
and
and
fcmovnbe
xchg
add
and
or
les
or
add
ror
mov
ret
inc
aam
and
xor
pop
pop
loopne
sahf
repnz
ret
push
mov
rclb
adc
lar
xor
fs
sbb
inc
inc
pop
pop
ror
xor
push
js
popa
sbb
push
add
in
sbb
add
mov
cmovl
shl
or
mov
pop
jle
mov
xor
neg
stos
call
iret
mov
pop
cmc
inc
or
adcl
sti
and
xchg
shrl
insl
fwait
push
addb
add
mov
push
mov
fdivrl
mov
sub
adc
ret
fidivs
cmp
cld
xchg
jle
int3
add
in
and
adc
dec
outsl
mov
js
push
inc
stos
dec
xchg
jo
pusha
adc
jb
mov
outsl
out
std
push
inc
mov
loope
xchg
sbb
pop
pop
mov
in
clc
sub
pop
sub
xchg
xchg
cmpsb
or
je
aas
pop
cmp
into
incl
addr16
mov
xor
inc
scas
daa
or
repz
or
sub
orl
cmp
xor
inc
andb
bound
dec
dec
add
inc
movsb
int3
push
mov
mov
test
jae
scas
and
int
push
jl
flds
xor
push
push
or
push
xor
push
push
divb
sbb
and
push
out
and
dec
dec
rcr
fistpll
addb
push
scas
sar
loopne
adc
dec
pop
mov
test
mov
sub
rorb
das
cs
xor
mov
fldt
pop
dec
je
inc
sub
adc
out
push
sbb
push
hlt
mov
rolb
subl
scas
mov
in
cs
fstps
cltd
pop
dec
std
push
or
cmp
pop
push
int
add
fbld
add
mov
inc
loop
xlat
test
push
cmp
xlat
rclb
push
aaa
clc
das
popa
lea
into
jno
sbb
mov
in
sbb
fldl
cmp
mov
test
mov
or
shlb
sub
push
in
push
or
lahf
ja
xchg
js
cmp
mov
jmp
dec
add
mov
ret
jno
sbb
int
test
insl
mov
test
negb
mov
inc
rolb
scas
cmp
mov
cmc
scas
jg
add
mov
call
sub
xchg
shr
incl
decl
or
test
cwtl
hlt
inc
xor
sbb
loop
shr
mov
xchg
pop
clc
mov
enter
jp
rcll
inc
xlat
adc
xchg
cmp
add
pop
dec
fiaddl
xchg
hlt
sbb
pop
or
fisttpll
loop
out
ss
jb
mov
add
cmp
jge
test
dec
in
xor
in
push
clc
lret
sub
in
xor
insb
push
jne
pop
jle
lods
push
icebp
mov
les
mov
xchg
pop
shl
mov
js
adc
test
fs
pop
repnz
and
mov
xchg
sub
fistpll
mov
jae
dec
mov
mov
lea
and
sbbl
hlt
xchg
mov
movsl
out
repnz
arpl
xlat
je
mov
outsl
scas
and
sub
ret
in
add
bound
in
jl
data16
rcll
sar
mov
into
mov
add
pop
js
adc
dec
jbe
inc
out
sahf
xor
cmp
cmp
pop
xchg
popf
fldcw
jno
add
sbb
fildll
les
aas
jns
and
fistl
sbb
or
nop
cmc
adc
leave
mov
stos
and
aad
inc
sub
shll
push
outsb
and
jbe
mov
pushl
lcall
sub
call
das
xchg
addb
xor
mov
add
adcl
push
ljmp
sub
rclb
ljmp
pop
rcr
in
add
test
aaa
lahf
push
push
mov
int3
scas
cwtl
out
js
or
add
xor
pop
aas
adc
into
mov
or
cmp
rcr
mov
sbb
jecxz
ljmp
mov
push
sub
sub
pop
pop
in
insb
jg
and
xchg
cltd
cwtl
nop
and
shrb
mov
mov
add
xchg
scas
or
mov
imul
cli
add
mov
mov
shlb
jg
add
scas
out
fdivr
dec
cltd
inc
adc
and
add
jge
orb
mov
dec
loopne
pop
in
cmp
sbb
dec
imulb
loope
mov
cmpl
pop
dec
fcmovu
pop
pusha
test
pop
dec
incl
pop
xor
push
mov
inc
mov
sarl
int3
nop
subl
mov
mov
or
mov
jle
push
push
xor
mov
js
mov
enter
fsubl
mov
loopne
sub
mov
push
sbb
das
rcrl
lds
mov
push
cmp
cmp
test
xchg
sub
and
inc
or
ja
pop
in
outsl
mov
dec
into
js
in
xchg
les
aam
xchg
fmull
out
mov
cmp
dec
adc
nop
xor
or
pop
jecxz
pop
test
dec
push
xor
shrb
and
insl
hlt
or
adcl
shlb
sub
pop
test
loop
ljmp
decb
jae
xchg
jne
in
ficoml
mov
adc
push
add
jp
mov
add
loop
popa
mov
inc
add
ljmp
sbb
mov
sbb
and
mov
ret
inc
push
cmp
lahf
aas
inc
sbb
inc
mov
add
inc
out
fdivl
xchg
js
and
jns
in
xor
and
dec
inc
xor
or
jnp
outsb
gs
loopne
dec
call
cmp
ja
jno
mov
fldl
rcrb
inc
lds
adc
addr16
test
push
test
ljmp
jge
in
cltd
in
cmp
mov
dec
mov
mov
dec
mov
adc
and
fnstcw
ret
pop
add
or
loop
sbb
das
jle
popa
outsl
and
sti
dec
push
adc
hlt
sbb
hlt
int
hlt
fwait
aas
pushf
out
fbstp
add
inc
pushf
lds
lea
sahf
fwait
cmp
repnz
mov
sbb
mov
cwtl
xor
dec
dec
mov
rcll
jecxz
jne
inc
jnp
add
jle
icebp
or
push
adc
sbb
xor
add
fimull
jnp
or
popa
outsb
jbe
xchg
ret
rcl
cmpsb
jno
lods
cmp
sub
mov
rorl
mov
div
sahf
pop
and
jp
jbe
or
xlat
mov
xor
inc
pop
test
mov
mov
insl
adc
call
pop
add
cmp
push
jno
ret
call
pushf
xor
inc
lahf
push
sbb
pop
and
xor
sahf
stos
mov
stos
fldenv
mov
add
dec
and
mov
xchg
ds
jbe
ljmp
shrl
cli
jnp
or
adc
pop
or
outsl
nop
sub
xchg
sub
xchg
and
mov
test
xchg
rcrb
stos
test
and
add
jb
in
mov
or
cld
pop
js
scas
loopne
xchg
iret
insl
dec
rol
testb
mov
mov
push
ret
lds
str
pop
adc
xor
xor
dec
in
sti
inc
das
lock
enter
int
xor
push
pop
adc
xchg
sub
xchg
mov
push
cld
scas
mov
xor
or
pop
dec
cwtl
jne
xchg
or
jmp
sarb
cld
daa
aad
xchg
imul
inc
or
gs
cli
push
mov
or
nop
mov
cmp
add
pop
jge
mov
shr
adc
dec
jecxz
loope
push
outsl
mov
xchg
fisubs
inc
and
add
inc
sbb
sbb
cmpsl
repnz
aaa
cmp
lock
or
or
aaa
mov
shll
lea
in
jno
cmpl
or
roll
sbb
cwtl
pop
test
cltd
shll
mov
icebp
sbb
andl
mov
loopne
fs
repz
mov
lahf
ss
rcrb
js
mov
add
insl
clc
sahf
cmp
shr
clc
movsl
leave
mov
ret
sub
or
test
push
imul
shl
push
shlb
cmp
lret
ds
testb
and
mov
mov
xchg
adc
das
addl
xchg
sbb
arpl
jne
cli
out
sub
mov
dec
lods
fisubrl
adc
lock
ret
imul
cltd
add
loope
pop
jo
nop
repz
or
xchg
or
jne
jb
xor
or
inc
xor
les
push
sub
inc
mov
movsb
xor
and
xor
or
in
mov
xchg
loop
rorl
mov
mov
or
ljmp
test
repnz
andb
loope
fsts
add
dec
int3
orb
shll
mov
xlat
mov
inc
fistpl
gs
nop
push
sarb
mov
mov
mov
and
add
sbbb
push
sub
bswap
xor
fbld
aad
xchg
loope
jo
add
mov
push
femms
repnz
mov
ret
test
xor
mov
dec
or
mov
dec
or
add
add
call
mov
mov
or
sbb
iret
andb
pop
int3
and
je
push
mov
mov
jge
inc
dec
mov
adc
pop
xchg
cmp
pop
outsb
jecxz
pop
das
sbb
popa
fdivp
sub
add
ljmp
popf
testb
xchg
push
mov
and
scas
test
fidivl
les
sbb
rcl
test
add
xor
sub
mov
es
shrb
sarb
or
jnp
shlb
les
inc
cmp
or
sub
mov
addb
and
or
mov
popl
and
ljmp
and
add
sbb
mov
pop
sbb
pop
loopne
scas
jg
mov
push
push
inc
sub
sub
ljmp
mov
jo
lret
adc
adc
mov
call
jge
ror
mov
and
lock
sub
sti
mov
call
int
std
mov
jae
iret
push
in
and
bound
cmp
mov
mov
add
test
sub
bound
aaa
loopne
aam
jb
mov
sbb
pop
jge
and
je
shll
arpl
pop
jecxz
pop
xchg
add
adc
push
xchg
faddl
adc
test
sbb
addr16
inc
popl
popa
add
sti
mov
ret
adc
push
and
jae
xor
mov
push
cwtl
lds
add
divl
adc
jmp
test
or
mov
xor
mov
xchg
loopne
lds
push
shrb
icebp
repnz
movsb
add
adc
pusha
mov
das
mov
mov
sub
or
call
add
cmpb
mov
pop
orl
adc
sbb
nop
jmp
cmp
cmp
ficoms
or
jns
push
les
das
cld
cli
sub
xchg
mov
cmpsl
lods
bound
cmp
in
incl
lea
xor
testb
js
add
add
mov
inc
jle
lds
push
jmp
pop
jb
mov
or
in
repz
adc
xchg
insl
pop
rcll
andl
inc
sbb
adc
add
in
cld
sbb
lret
popa
fwait
and
adc
dec
adc
dec
pop
je
adc
inc
aam
mov
shrb
hlt
or
rclb
pop
mov
pusha
sarb
and
and
dec
jle
jmp
sbb
push
aam
or
and
nop
xor
clc
andl
jne
clc
lahf
sbb
xchg
xchg
shl
sbb
ljmp
add
call
fisubrs
add
aam
and
int3
sub
inc
mov
les
std
setne
sbb
mov
loop
mov
bts
dec
pop
sub
sub
mov
lock
jge
pop
imul
filds
ss
pusha
add
and
push
and
movsb
add
adc
jnp
in
test
stos
xchg
and
pmulhuw
rcr
pop
jp
or
les
or
imul
les
jne
mov
mov
out
add
cwtl
les
push
mov
lret
xor
dec
sub
adc
push
ret
in
pop
xor
ljmp
addl
loope
sbb
enter
mov
roll
push
xlat
rolb
add
jb
cmp
lea
fldl
pop
adc
mov
mov
mov
fists
pop
aam
xchg
out
jp
push
ds
ret
icebp
add
xchg
out
mov
idivl
jmp
scas
js
dec
push
das
lods
xor
or
fldl
push
add
fisubrs
inc
cmc
loop
mov
cmp
xlat
rorb
in
xor
insl
rolb
mov
mov
mov
lahf
in
in
shl
jo
add
mov
cmp
sbb
loopne
enter
lret
rol
jo
popa
stos
data16
daa
cld
or
subb
cmp
shrl
data16
into
xor
dec
cmc
push
mov
rcll
jns
push
or
pop
aad
dec
insl
stc
fcoms
das
cmpl
movsb
or
std
inc
enter
push
int
xlat
push
sbb
adc
push
mov
add
cli
push
int3
dec
push
add
bound
arpl
jmp
cmp
xor
lret
mov
pop
cmp
clc
sbb
cmp
push
push
push
xor
rorb
int3
testb
inc
cmpsl
addr16
xor
inc
mov
adc
loopne
mov
xor
push
sbb
ss
inc
cmp
mov
push
in
frstor
xor
lahf
adcb
xor
testl
and
add
popf
adc
xor
ljmp
loopne
add
sahf
pop
cmp
lret
pop
push
add
dec
pusha
fdivs
adc
das
addb
fldenv
mov
adc
add
gs
jnp
sbb
jge
popl
add
loopne
mov
mov
mov
fsub
pop
iret
sahf
dec
adc
inc
sbb
loopne
jmp
pusha
push
xchg
dec
cmpsb
aas
pop
pop
insb
fnstsw
adc
xor
mov
movsl
movsl
jb
jne
add
add
arpl
gs
push
cmpl
scas
decb
stos
mov
dec
lods
jnp
clc
popa
std
jg
lods
xor
popf
jo
fsts
add
xchg
add
and
inc
fcoms
lcall
fistpll
cli
loopne
movsl
sbb
inc
and
loopne
test
andb
xor
lock
rorb
add
das
nop
xchg
mov
fs
popa
mov
fildl
lods
xor
in
inc
aaa
aad
lds
and
out
dec
ret
ret
and
push
push
inc
dec
mov
push
xchg
sub
mov
fwait
mov
sbb
daa
xchg
lods
xchg
and
add
scas
fldt
push
pop
xchg
mov
mov
mov
fwait
jne
loope
imul
pushf
jns
sbb
roll
lea
cmp
nop
pop
inc
mov
sbb
jg
loopne
mov
inc
imul
mov
push
lds
dec
xchg
sbb
and
jmp
iret
jp
cmp
or
or
dec
xchg
adc
push
push
or
int3
add
imul
sbb
inc
xchg
and
sub
ret
loop
cmp
dec
inc
inc
sbb
lock
popa
lock
adc
jp
inc
xor
data16
cld
add
mov
aas
mov
mov
adc
sahf
add
loopne
repz
inc
jne
xchg
push
jns
sbb
fldenv
sbb
roll
sbb
jecxz
push
push
loopne
or
fs
fistps
jb
scas
rclb
in
cltd
push
push
cld
mov
mov
fisubrl
sub
pop
inc
add
into
out
add
adc
or
clc
sbb
xchg
mov
gs
adc
mov
sbb
es
cmp
int3
mov
scas
push
les
jo
loop
sti
lret
shl
or
addb
cmp
out
sbb
std
and
orl
fsubl
mov
and
es
adc
inc
xor
jg
jo
data16
lds
cmpb
add
jno
mov
lods
xor
mov
int
sub
ret
pop
xchg
cld
cmc
xor
or
xchg
cmp
pusha
push
repz
adc
pop
mov
mov
les
icebp
inc
in
or
mov
inc
cmp
loop
mov
addl
popf
in
and
shll
out
add
hlt
cmpsl
xchg
and
pusha
into
mov
das
add
push
lea
adc
rorl
and
fwait
icebp
xchg
inc
ja
xor
ja
out
dec
or
push
lds
jecxz
pop
adc
out
push
int3
fsts
jnp
push
loope
cmp
stos
data16
lcall
inc
std
bound
pop
pushf
push
stos
xchg
dec
sarl
add
pop
mov
sbb
dec
repz
popa
pop
int3
xchg
mov
shr
mov
inc
cmpsl
arpl
pop
push
jns
mov
mov
int
dec
fldt
cli
mov
incl
or
lahf
mov
data16
hlt
push
inc
scas
movsl
sarb
cmp
mov
cli
push
icebp
enter
adc
push
gs
sbb
ljmp
add
xchg
pop
stc
push
pop
stos
mov
xchg
scas
sbb
or
inc
xchg
inc
cmp
sbb
or
push
sbb
iret
shll
test
pop
aad
in
add
mov
inc
pop
loop
mov
pop
mov
jb
rorb
lods
ss
fsubr
xchg
jae
adc
int
mov
nop
pop
sbbl
lock
sub
jno
cmp
pop
mov
mov
mov
push
dec
push
add
in
fldl
push
mov
dec
xchg
mov
jmp
repz
sub
stos
push
shrb
in
jmp
in
lret
cmpsb
insl
xor
xchg
adcl
cwtl
fwait
rcrb
push
mov
fstpt
lret
leave
pusha
pop
inc
out
hlt
sahf
adc
or
add
ficomps
fisttpll
and
test
mov
and
test
and
push
loopne
mov
ljmp
cmp
and
cli
incl
sub
push
jp
adc
xchg
mov
xchg
rcll
fsts
js,pn
xchg
push
add
inc
and
and
xchg
inc
cmp
testb
sbb
nop
je
ja
push
loop
dec
adc
cmpsl
cs
fdiv
inc
jo
xor
or
and
xchg
dec
lea
mov
shl
add
mov
xor
dec
mov
cli
mov
xor
clc
adc
or
mov
sbb
jnp
data16
shll
cmpsb
rolb
es
mov
cmp
jle
ss
mov
ret
mov
pop
cs
ret
pop
mov
dec
push
mov
mov
imul
push
and
sub
add
decl
adc
popa
push
mov
inc
sbb
insb
lods
movsl
or
pop
or
out
or
in
jl
inc
and
mov
daa
outsl
ds
fisubl
sarl
jnp
mov
cs
mov
push
or
sti
mov
addr16
das
dec
adc
and
jmp
add
jg
enter
xchg
sub
pop
leave
mov
add
pop
dec
aad
xor
jge
ds
pop
in
jg
cmp
int3
cs
add
cmp
mov
pusha
pusha
sbb
je
sub
mov
sbb
out
ret
push
pusha
inc
jecxz
lcall
push
mov
insb
jp
xor
fldl
xlat
adc
dec
dec
xor
lcall
or
movsb
fcmovnb
sub
xlat
or
dec
sub
fwait
stc
les
int3
xchg
sar
xor
loope
inc
xchg
std
scas
or
pop
clc
dec
mull
jb
cld
and
mov
jg
imul
test
sbb
adc
cmpsb
aaa
pop
and
mov
popl
dec
xor
cli
adc
insl
inc
and
cmp
sub
cmp
fstpt
or
cmp
gs
mov
inc
or
jg
pop
iret
popa
mov
mov
popa
adc
incl
loope
into
mov
not
jns
fbstp
xchg
mov
cltd
lds
out
rcrl
leave
sub
sar
fistps
and
frstor
lock
mov
test
enter
mov
add
push
clc
fbstp
das
xor
mov
lock
push
and
mov
mov
mov
or
cvtdq2ps
sar
scas
ss
inc
clc
stos
sub
jg
rcrb
test
in
mov
mov
and
fcoml
mov
cmp
insl
sub
clc
shll
add
dec
cli
fisttpl
lock
or
add
int
push
out
sub
int3
mov
stos
add
add
add
or
lds
cmp
js
lds
lcall
inc
xor
clc
cmp
std
mov
dec
sbb
rorb
lahf
fadds
push
xlat
mov
test
or
clc
push
js
enter
mov
lahf
push
xchg
push
cmc
repnz
add
fstpl
addr16
xor
data16
and
in
sub
lret
cmp
xchg
call
add
test
rcrl
cmpsb
add
inc
xor
xchg
in
sbb
add
fildl
dec
inc
push
lock
add
aam
loope
adc
hlt
mov
sub
sbb
add
out
movsl
mov
out
push
out
fdivs
sub
or
pop
and
xchg
loop
or
int
sbb
add
jnp
push
add
ljmp
test
pop
and
dec
inc
fcmovnbe
and
inc
shr
imul
inc
int
call
add
clc
inc
jb
cmp
sbb
sbb
mov
and
in
cmpsb
into
aas
aaa
push
bound
mov
sub
inc
inc
xor
inc
les
mov
pop
xchg
in
sarl
dec
adc
adc
subb
and
or
push
call
xchg
sti
test
mov
sbb
and
add
push
fstpl
xchg
int
out
roll
cmp
jnp
jecxz
std
sarl
popl
shlb
in
out
mov
cld
push
jne
call
sub
mov
aam
into
into
rorl
aam
aam
lock
inc
gs
mov
mov
mov
and
aam
popf
loopne
call
in
cmc
mov
adc
shl
loope
lahf
fnstenv
sbb
xor
cwtl
adc
push
out
jno
mov
mov
ret
sbbb
rolb
xor
lock
lods
in
jg
mov
sub
in
out
stos
outsl
jecxz
dec
cwtl
lcall
mov
inc
dec
xchg
shll
iret
sub
orl
xor
xchg
lret
and
ja
loopne
out
or
std
xor
or
push
mov
pop
cli
or
push
sbb
jns
ds
xchg
loopne
icebp
push
mov
mov
cmp
dec
xor
out
dec
xchg
or
dec
mov
pop
push
push
push
xlat
loop
ds
cmp
fistpll
rdpmc
arpl
xor
iret
outsl
out
or
stc
lock
lock
add
insl
dec
or
sbb
inc
loope
xchg
sbb
scas
mov
dec
into
inc
scas
xchg
stc
jmp
loop
nop
inc
das
push
push
stos
int
andl
dec
mov
adc
imull
loopne
mov
mov
push
push
testl
loopne
xor
fists
dec
push
lods
push
jo
pop
sub
outsl
jb
jnp
pand
cwtl
xor
call
mov
test
push
sub
fmul
shrb
popf
insl
fisttps
inc
in
xor
ret
dec
scas
pop
lahf
into
insl
pushf
add
loope
jbe
xchg
push
mov
jg
add
les
mov
mov
outsl
fstpt
jbe
adc
or
aad
rclb
xor
inc
sbb
leave
sub
or
dec
sbb
call
jle
ja
jge
loopne
jb
pushf
out
dec
xchg
test
xor
std
mov
inc
je
xor
sub
shlb
fistpll
cmp
xor
or
imul
ss
pop
fiaddl
fdivrl
mov
adcb
xor
loopne
or
test
sarb
mov
out
sbb
mov
daa
and
inc
mov
xchg
dec
fists
jecxz
pushf
gs
inc
pop
mov
ljmp
push
xchg
cmpsb
push
aaa
icebp
lods
loope
loopne
mov
mov
mov
or
test
stc
andb
in
push
push
or
lea
jg
js
fistpl
lea
xchg
lds
fistps
adc
rcr
lods
add
rcr
push
mov
and
cmp
lea
in
jb
jb
out
decl
pop
mov
push
push
mov
xor
outsl
ljmp
push
jge
jecxz
mov
das
inc
xor
pop
push
inc
push
jmp
scas
push
repnz
sub
and
stos
xchg
sub
das
cld
incl
push
adc
adc
cltd
pop
cmovs
aaa
push
cld
out
dec
decl
push
or
movsb
test
subl
sub
pop
js
pop
into
ss
jbe
push
mov
inc
sub
popf
stos
bound
mov
cmp
jmp
aaa
mov
test
cmp
fdivrs
rcll
or
add
test
test
bnd
stos
inc
rcrl
jg
pushl
addl
test
loop
and
in
inc
fnstcw
jae
adc
pop
call
inc
pop
sahf
dec
leave
hlt
jge
test
cmp
aam
pop
pop
cmp
push
rcll
dec
sbb
outsl
adc
adc
imul
inc
cmp
sti
mov
push
int
aaa
rcrl
rclb
jp
dec
mov
and
mov
bound
lret
xchg
outsb
sbb
or
stc
cmpsb
fisubs
cmp
and
jecxz
imul
js
out
inc
push
jl
in
fisttps
outsl
mov
in
or
or
inc
daa
nop
xor
lds
pop
outsl
xchg
adc
fisubs
xchg
test
or
or
xchg
adc
add
push
adc
outsb
lock
shr
add
mov
or
pop
rcrb
fstps
mov
fdiv
sbb
imul
mov
subl
movsb
ficoms
or
sbb
adc
add
mov
or
adc
and
add
adc
add
and
inc
inc
dec
pop
lods
xor
inc
push
sbb
add
mov
loopne
loopne
jge
loopne
in
add
dec
hlt
push
xchg
lock
sbb
int
add
popf
lock
mov
sahf
push
lea
in
mov
ljmp
sbb
rolb
sbb
dec
in
aam
mov
xchg
enter
push
sarl
sbb
fnstsw
hlt
and
push
sbb
out
mov
aaa
jno
and
adc
pop
fsubrl
aaa
ficompl
inc
cmp
out
bound
lods
not
dec
inc
sub
hlt
inc
sbb
cmp
jl
sub
add
mov
dec
or
or
mov
outsb
adc
xchg
mov
dec
pop
out
hlt
jae
or
andb
cld
call
jbe
ljmp
shll
loope
aam
js
mov
fldenv
popl
sub
cmpsl
dec
ret
shlb
push
out
jle
or
ds
js
sub
add
iret
add
shl
std
lea
rcrl
inc
mov
fisubrs
rclb
jne
lock
por
or
sub
and
add
lret
xor
pop
cmc
dec
pop
xchg
jo
or
roll
xchg
data16
cmp
in
adc
sbb
stc
dec
loope
lods
clc
loop
mov
jae
dec
shll
mov
cmpsb
cmp
and
ljmp
adc
and
js
inc
icebp
popf
add
add
add
hlt
orl
sbb
jg
pop
les
mov
cmc
aas
and
pop
add
outsb
ret
stc
sbb
les
push
mov
movsb
and
repnz
mov
mov
daa
cmp
das
or
mov
lret
aam
aam
dec
arpl
imul
fistl
sbb
xchg
push
or
inc
inc
daa
jle
mov
sub
cs
push
mov
inc
ljmp
rolb
mov
addb
inc
pusha
xor
pop
xchg
aam
jmp
add
xlat
add
bt
insb
sarl
xor
and
sub
loopne
xor
and
push
jo
ficoml
or
adc
pushf
inc
cmp
and
je
cld
pop
in
pop
push
sbb
hlt
xchg
ljmp
in
xor
sub
and
push
sahf
push
ss
xchg
stos
mov
mov
popa
shlb
mov
call
mov
xchg
pushf
sbb
test
jbe
clc
fwait
push
mov
iret
test
sub
jmp
or
mov
mov
testl
push
pop
adc
stos
mov
andb
int
and
cmpsl
icebp
add
test
jle
xor
pop
stos
adc
cmc
or
nop
mov
or
je
jne
xlat
adc
sbb
popa
cmpsb
mov
imul
xchg
jl
sti
xchg
mov
or
mov
push
shr
mov
fs
in
mov
std
jg
jp
aaa
mov
roll
xor
jno
or
popa
add
jecxz
add
mov
sbb
jns
and
cmp
dec
dec
pop
mov
outsb
insb
adc
clc
call
pop
loopne
and
sbb
and
mov
xor
sahf
lods
shrl
aaa
and
push
fidivrs
imul
pusha
xor
rolb
cli
xchg
mov
and
and
call
fists
rcl
sahf
cmp
ja
inc
lock
lret
pusha
idivb
add
dec
push
mov
clc
daa
xor
add
nop
pop
cld
mov
ss
pop
je
lret
jge
push
jg
movaps
daa
insb
ret
adc
clc
or
inc
lock
imul
sti
lahf
mov
jns
in
or
jg
scas
or
add
xchg
mov
sub
iret
loop
sbb
cs
je
jmp
mov
in
add
cmpsb
and
sub
nop
rol
mov
push
mov
dec
cli
push
mov
js,pt
dec
cld
mov
les
lock
mov
mov
sbb
mov
retw
lock
push
cld
pushl
mov
clc
lcall
cmp
sbb
std
mov
sarb
roll
xchg
cli
aas
or
icebp
stos
mov
or
je
xor
add
pop
imul
js
call
adc
cmp
jg
mov
shlb
rcll
or
adc
jo
aaa
fidivl
inc
xchg
pusha
xchg
or
stc
sub
cwtl
jb
or
enter
pop
dec
cltd
dec
mov
aaa
mov
pop
jns
mov
outsl
fstl
push
mov
mov
ljmp
mov
pop
in
cmp
add
push
call
xchg
faddl
push
sub
mov
in
sbb
push
add
ret
hlt
pop
push
es
push
int
cmp
mov
dec
mov
xor
and
cs
mov
xchg
hlt
add
bound
pop
stc
adc
xor
dec
and
adc
mov
loope
add
daa
adc
mov
arpl
cmp
jbe
pop
push
jp
add
pop
ss
adc
stc
je
mov
stos
mov
testl
ret
movsb
push
gs
inc
xor
or
aad
popf
aam
repnz
and
mov
inc
movsb
or
daa
and
xchg
cmp
dec
testb
popa
int3
dec
mov
or
fildll
lret
shl
and
lret
repnz
decl
add
incl
cmp
leave
adc
cmp
sub
cs
pop
jne
inc
pop
push
dec
insl
fdivrl
adc
push
sbb
stc
ss
data16
outsb
sbb
jl
mov
xchg
push
in
scas
inc
or
pop
xchg
out
mov
rol
ljmp
sbb
pop
mov
jl
icebp
cmp
aaa
add
loop
out
or
xchg
jnp
pushf
jp
jmp
bound
aad
pop
sbb
out
xchg
push
mov
pop
add
punpckldq
xor
pop
sarl
incl
movsb
mov
cmp
in
sbb
mov
ljmp
cld
cmp
or
cltd
test
push
adc
jb
stos
loopne
js
dec
aaa
mov
les
xchg
loop
movsl
or
lcall
shrb
push
aad
incl
inc
int3
add
jno
aam
arpl
sub
ficoms
adc
jno
in
addr16
mov
lahf
jl
ss
jp
cltd
pop
lret
orb
fnsave
adc
repz
int
inc
push
outsl
lock
jecxz
fidivrl
jmp
pop
jmp
fwait
mov
mov
inc
dec
insb
loopne
pop
loope
fdiv
jmp
mov
and
sub
rolb
clc
test
imul
dec
test
add
add
testb
cmp
pop
mov
out
jle
int
push
push
pop
outsl
shrl
fildl
inc
add
xor
and
cmp
mov
test
insl
movsl
jbe
inc
lcall
fsubrs
jnp
fists
pop
imul
mov
sarl
and
test
stos
out
add
mov
mov
push
loop
dec
add
out
mov
or
pop
sbb
dec
dec
xchg
outsl
pop
jg
es
fwait
pop
pop
mov
scas
xor
mov
push
mov
dec
add
in
jbe
mov
add
call
dec
push
inc
subl
jb
pop
enter
xchg
jg
jle
add
lods
icebp
movsl
lret
push
stc
popf
insb
or
idivl
loope
inc
fsubrl
adc
outsl
jg
jb
xchg
scas
or
loopne
and
add
lret
in
sbb
sub
push
insb
add
dec
call
insl
mov
fildl
dec
test
decl
lea
fisttps
pop
dec
sbb
std
sub
neg
or
jbe
lcall
pop
push
insb
or
aaa
fisubrs
call
mov
jnp
mov
ficoml
cwtl
xor
add
jb
or
fists
xor
pushl
sbb
jmp
and
dec
addr16
pop
mov
add
ja
cld
test
add
idiv
adc
ret
clc
xchg
ss
clc
mov
out
leave
inc
hlt
aad
imul
jmp
aaa
mov
or
jle
cltd
iret
nop
dec
sar
js
cmpsl
les
jge
std
mov
fildl
aaa
cmp
inc
inc
shlb
sbb
dec
sub
test
fisttps
adc
and
pop
loopne
sti
sub
andb
ja
outsb
hlt
inc
push
sti
cmp
loope
xchg
and
sti
lcall
and
inc
push
leave
cmpsb
xbegin
adc
addr16
cld
ds
ljmp
insb
insl
dec
insb
out
xor
clc
in
rcll
xor
mov
stos
push
loopne
stos
out
inc
xchg
mov
cmpsb
out
cli
mov
mul
add
je
mov
mov
push
int3
add
mov
fwait
div
add
mov
stc
lret
mov
mov
push
jmp
push
rolb
xchg
arpl
or
fstp
push
or
sti
je
push
mov
in
pop
js
jp
push
add
loop
xor
cmpsb
cli
sbb
xor
cmpb
adc
xchg
sbb
dec
leave
repz
mov
aam
pop
mov
nop
pop
insl
pop
scas
lds
pusha
pop
call
push
and
and
mov
leave
inc
cs
les
xor
lcall
mov
negb
mov
loope
sbb
inc
ret
mov
mov
mov
cli
dec
sbb
iret
rcr
jbe
cs
outsb
loopne
movsl
clc
mov
mov
out
dec
mov
and
mov
insb
in
ss
pushf
or
das
adc
inc
dec
sbb
rolb
sbb
sbb
and
xlat
fsubl
lcall
adc
sbb
inc
adc
sbb
pop
cltd
or
push
leave
cmp
or
sub
pop
xor
jg
push
psubw
lock
pop
mov
test
addb
insb
inc
push
inc
sub
loope
pop
fldl
mov
lock
mov
or
in
xor
scas
mov
pop
sahf
jle,pt
rorl
adc
and
ret
mov
adc
rorb
sbb
inc
ret
mov
aaa
lock
mov
jg
sub
mov
pop
mov
out
repz
pop
push
mov
jmp
out
mov
enter
or
ljmp
cwtl
cmp
xorb
mov
rcrl
push
mov
cmp
cmp
push
push
jle
mov
popa
mov
jnp
mov
jbe
sti
mov
add
add
push
or
push
daa
ss
pop
out
sti
lds
pusha
xchg
or
pop
loope
mov
mov
push
push
idiv
jbe
lcall
testb
iret
pop
and
movsb
ja
jge
pop
cld
aam
int3
jmp
into
xchg
leave
or
jmp
xchg
or
xchg
scas
adc
test
incb
das
scas
mov
and
lcall
and
xchg
addr16
adc
mov
xlat
push
mov
and
inc
pop
cli
out
loopne
lgs
in
mov
lods
jle
xchg
mov
adc
and
inc
or
jg
inc
addr16
dec
call
clc
iret
inc
inc
adc
xor
jp
scas
sbb
in
cmp
cmpsb
mov
sub
mov
mov
sbb
mov
mov
inc
inc
fsubs
mov
adc
pop
ljmp
test
andb
inc
lea
pop
pop
cli
ja
sbb
fs
lock
inc
mov
jbe
lods
jns
jns
outsl
add
imul
and
pop
and
stos
push
lock
cmp
fnstenv
add
sarb
inc
fs
pop
loope
repz
jae
ljmp
push
xor
or
ret
dec
xchg
fidivrl
bndldx
sub
testl
adc
cmc
mov
push
roll
mov
aam
adcb
push
inc
push
shrb
loopne
cmc
push
aas
mov
cmc
dec
sub
es
mov
dec
sub
insb
pop
lahf
add
loope
bound
insb
loope
es
xor
lds
aad
and
test
adc
and
add
outsl
mov
imul
pop
add
inc
mov
xchg
mov
jae
sub
stos
cmp
xchg
jl
adc
pop
push
dec
mov
out
fistps
fidivrl
pop
aas
cmp
loope
decl
pop
mov
push
bound
push
sub
pusha
sarb
and
cld
mov
lret
scas
mov
sub
fildll
sbb
pop
das
enter
mov
sbb
dec
orl
loop
into
xor
xor
sbb
or
sub
push
outsl
add
push
pop
mov
or
out
fisubrl
insl
adc
and
fisttpl
inc
ret
aaa
gs
and
popf
pop
cmc
inc
sahf
and
test
decl
int3
cmpsl
dec
cmc
sub
stos
stos
das
mov
pop
mov
repz
js
jbe
je
out
mov
loopne
hlt
mov
push
or
jne
adc
and
inc
sbb
inc
mov
sbb
sbb
or
into
outsb
jcxz
or
mov
mov
sbb
mov
jne
add
fisttpll
lret
icebp
ret
icebp
push
incl
aaa
pop
jnp
mov
push
stos
xor
sbb
out
sbb
ss
fldt
and
std
in
push
lret
mov
movsl
call
adc
sub
ret
lret
add
jl
cli
add
aad
lret
dec
pop
xchg
xchg
mov
cli
imulb
stos
adc
mov
dec
cld
sbb
aad
loop
and
dec
and
sbb
rolb
iret
mov
cmp
hlt
pop
sub
cmp
or
dec
push
xor
mov
or
mov
hlt
es
mov
push
shlb
or
sbb
xor
test
nop
adc
dec
jnp
lock
inc
jle
mov
les
dec
clc
and
inc
scas
jge
sub
sti
mov
jo
mov
pop
push
jge
xor
pop
loope
fildll
jle
dec
adc
fsts
cmc
add
adcb
js
mov
adc
jno
xchg
push
hlt
scas
rclb
push
sahf
nop
das
ror
xlat
adc
inc
pop
cmc
incl
ss
jecxz
sti
sub
pop
mov
mov
mov
js
ficoms
popf
dec
push
or
jne
xchg
mov
fwait
movsb
lahf
xlat
lret
and
sbb
ljmp
mov
mov
push
dec
mov
stc
jbe
cli
scas
aad
bound
adc
mov
add
dec
into
icebp
aad
mov
ljmp
add
cs
loopne
mov
mov
mov
cmp
aas
pop
jge
outsl
lock
mov
cltd
sbb
ljmp
fdivs
inc
jne
jb
adc
lock
sbb
push
push
insl
pop
mov
or
pop
sub
iret
pusha
jle
loope
mov
inc
test
mov
mov
add
je
adc
pop
add
and
loopne
jae
sub
inc
neg
cmp
je
aad
add
shlb
mov
in
mov
cmc
adc
orl
ja
push
xor
xchg
gs
jne
repz
lock
xchg
movb
insb
mov
lods
and
dec
add
sub
mov
pusha
sub
inc
lock
pop
push
clc
flds
pop
push
pop
and
test
pop
ja
pushl
aad
add
dec
push
repnz
fnstcw
js
daa
or
mov
and
and
xchg
dec
pop
iret
je
inc
xor
lcall
and
cli
rcrb
call
fwait
cmpsl
mov
clc
dec
aam
and
out
sarl
jnp
rcrb
cmp
addl
and
jmp
popf
mov
cmp
jle
jae
mov
cmp
decl
pop
cmc
popf
inc
mov
sbb
scas
cltd
xor
xchg
dec
cmp
add
jno
mov
lea
or
mov
xchg
cli
sbb
fbld
and
ljmp
stc
bswap
xchg
daa
lods
dec
lret
decl
sub
inc
iret
cmp
or
in
test
or
jl
test
das
cltd
clc
jp
scas
and
sbb
push
mov
push
mov
pop
dec
popa
call
cmp
out
stos
das
iret
lahf
test
pushf
ja
xchg
or
ljmp
mov
out
notl
jmp
rclb
push
ret
shll
sbb
push
dec
cmc
mov
jb
iret
jg
imul
mov
jmp
jo
xchg
add
arpl
adc
and
or
lods
and
and
and
loop
incl
add
xchg
loope
call
mov
lret
insb
inc
loop
jg
movsl
divb
sub
cmpsb
dec
mov
pusha
shlb
loopne
mov
imul
rorb
xchg
lea
xor
incl
insl
inc
adc
rol
or
aam
push
lock
cmp
push
gs
gs
sar
inc
mov
push
add
pop
add
insb
icebp
in
pushl
sbb
and
arpl
push
flds
icebp
scas
mov
inc
pop
push
fldenv
outsb
xor
dec
movsl
nopl
adc
mov
stos
in
decl
cmp
outsl
loop
sbb
xchg
and
jne
ret
int
mov
lock
xchg
rorb
test
loope
mov
mov
xchg
fildll
enter
dec
fadd
insb
xor
outsl
cli
sbbb
sub
mov
addr16
push
pop
cli
pop
scas
cmpsb
lahf
mov
mov
lea
dec
in
sbb
ljmp
fs
dec
pop
shl
loop
leave
ds
movsl
add
aad
rclb
fisubrl
in
or
push
or
sub
in
jge
shl
das
inc
cltd
aad
pushf
out
mov
std
jecxz
cmpsl
ljmp
mov
rcll
loope
aad
mov
stos
push
mov
cwtl
mov
xchg
sbb
scas
xor
jg
insl
loope
lods
into
mov
ret
xchg
lds
jp
mov
call
pop
shll
fisubrl
jp
in
adc
fisttpll
add
mov
loope
xor
sub
in
pushl
push
push
push
bound
push
inc
jb
imul
xor
and
ffreep
mov
call
mov
adc
std
or
or
mov
loopne
adc
nop
fwait
les
jbe
and
daa
xchg
das
xchg
scas
mov
arpl
jbe
and
je
notb
xor
cmp
mov
es
nop
je
movsl
dec
cmp
aaa
cmpb
xor
xor
stc
and
pop
addr16
and
jo
sbb
lfs
ret
pop
stos
cs
ja
test
mov
nop
fldt
repz
fldt
lret
cmp
dec
push
sbb
jg
or
aaa
dec
dec
or
incl
ret
adc
sbb
in
or
cmp
daa
movsl
fwait
jp
inc
xor
in
repz
add
mov
push
sbb
sbb
jge
repz
add
shrb
and
dec
leave
inc
sub
jbe
out
ljmp
sbb
call
xchg
push
add
in
and
mov
mov
jle
jle
pop
ja
sbb
adc
test
mov
pop
arpl
mov
add
hlt
adc
jo
jne
test
sub
int
outsl
insb
aad
add
inc
dec
push
cmp
enter
cmp
insb
in
inc
stos
aaa
ficoml
cltd
dec
mov
movsb
lods
cmp
mov
pop
ficoml
ss
movsb
enter
fs
sub
decl
dec
into
or
pushf
or
pop
or
and
fwait
cli
pop
lea
push
mov
mov
mov
sbb
nop
aaa
xchg
lcall
loope
dec
lret
jo
dec
jo
dec
mov
outsl
jns
addl
icebp
dec
mov
dec
jg
inc
xchg
hlt
lahf
lret
cmp
add
and
imul
add
mov
jle
lcall
jp
mov
es
inc
rcrl
test
in
add
push
test
rcr
push
adc
mov
mov
lea
idivl
and
insb
fisttpll
cmp
and
sbb
loop
std
iret
insl
test
sbb
dec
xchg
jle
int3
ss
xchg
outsb
das
addr16
aam
insb
mov
fadds
mov
ljmp
jl
cmp
sbb
xor
movsb
mov
es
int3
out
jb
in
es
pop
add
mull
in
lock
mov
fistl
xchg
shlb
push
jg
in
pop
and
push
clc
jl
or
gs
add
test
and
js
jle
mov
xchg
and
aaa
lods
jg
mov
adc
push
and
cltd
sbbb
fdivrs
dec
jg
push
movsl
imulb
fdivs
out
or
sub
xor
sbb
push
data16
std
pop
xor
push
rcrb
or
sbb
pop
pop
push
enter
and
mov
stos
cmp
in
dec
ljmp
mov
mov
popf
pop
call
mov
scas
pop
or
incl
out
rcrb
inc
adc
enter
xor
sub
push
jg
ja
xchg
xor
xchg
mov
shrb
mov
adc
adc
inc
mov
and
fldl
jg
addr16
cmp
cmp
mov
push
pop
push
test
pop
push
push
pushl
mov
lock
fiadds
jns
sub
aaa
sub
loop
inc
ss
enter
popa
mov
jmp
fcmovbe
loopne
add
push
imul
xor
sarb
in
cmc
fldl
xchg
cmp
adc
xor
jg
ljmp
jb,pn
xchg
adc
xchg
clc
dec
xchg
repz
je
int
mov
jp
mov
jmp
pushf
mov
or
xchg
sub
jo
or
push
lcall
dec
dec
jno
pop
jle
mov
mov
adc
add
aam
or
call
fcmovb
sarl
test
cmp
adc
mov
adc
dec
out
nop
sub
ss
cltd
sbb
testb
shll
scas
push
sbbb
call
dec
sbb
jle
push
sahf
pusha
adc
pop
daa
js
inc
jb
jecxz
cmp
es
in
les
icebp
cmpsb
hlt
clc
lds
decl
add
xor
push
dec
cwtl
outsb
aad
ss
les
lods
add
mov
les
jp
mov
sbb
ss
adcb
inc
xor
push
shrl
fdivrs
sbb
sub
push
adc
sub
or
add
fnsave
push
rorl
addr16
pop
add
sub
adc
or
out
and
adc
mov
jae
inc
push
pop
mov
shlb
xor
jno
add
push
int
sub
cltd
fisttpl
test
loop
mov
jl
and
xchg
push
addr16
mov
pop
into
cld
or
and
inc
adc
bound
mov
les
adc
pop
add
or
lock
dec
shll
and
lods
movsl
lea
fmuls
jo
jge
in
les
in
test
inc
add
push
aam
fadd
or
inc
xor
ja
inc
xchg
dec
sti
cmpsb
push
imul
lahf
fdivl
test
arpl
in
pop
test
lock
inc
ja
and
out
sahf
mov
jg
cmp
test
sbb
inc
test
pop
dec
cmp
stos
hlt
add
hlt
faddl
pop
xorb
ss
sbb
add
pop
loope
pop
jo
sub
dec
fldl
rcrb
icebp
add
sub
jg
adc
xchg
push
cmpsb
xchg
lds
mov
inc
inc
stc
mov
jg
clc
pop
or
inc
cmp
dec
pop
jb
andb
adc
add
pop
cmp
cmp
incl
jp
or
in
ficoml
add
ret
jae
bnd
in
pop
dec
or
inc
and
jb
mov
outsl
pop
pop
fistl
test
out
adc
push
popa
subb
cld
lea
dec
dec
sbb
mov
mov
cli
rorl
inc
and
cmp
mov
pop
enter
fdivrl
decl
add
fcomi
test
sbb
stos
call
pop
into
push
mov
iret
out
push
inc
scas
mov
mov
push
inc
or
and
cs
inc
push
outsl
fsubrs
mov
inc
push
or
xchg
out
ja
test
stc
out
mov
mov
int
sub
push
decl
pushl
adc
mov
or
iret
ds
xchg
std
decl
inc
daa
fimull
mov
rorb
pop
and
dec
inc
xchg
cmp
mov
lcall
and
pop
pop
mov
in
fcmovnu
outsl
cmc
enter
mov
mov
xor
arpl
jnp
jo
out
or
lock
fistps
jge
jge
ljmp
cli
jmp
ds
add
mov
dec
jmp
stos
or
js
pop
pop
insb
adc
push
push
add
push
mov
rcrb
loope
sbb
ja
lds
stos
in
mov
mov
loop
test
sub
add
ja
sbb
ret
push
je
push
sbb
and
jle
sub
mov
popa
add
pop
insl
dec
or
in
add
test
rolb
xor
pop
icebp
ljmp
inc
dec
jae
xchg
pop
add
pop
inc
and
insl
cld
mov
aad
lcall
gs
in
nop
xchg
outsb
call
dec
movsl
vmwrite
cmp
inc
hlt
and
sub
loop
mov
clc
jg
je
fcmove
inc
insl
test
insl
or
lock
or
mov
aam
adcb
and
push
outsl
mov
adc
js
push
ja
inc
pop
daa
bound
out
and
add
lds
aam
xor
repnz
add
outsb
mov
imul
data16
lock
pop
mov
outsb
insl
cmp
movsl
mov
cmc
sbb
sub
arpl
pusha
mov
push
adc
sbb
sub
ljmp
in
test
dec
dec
mov
ds
sbb
mov
xlat
push
lahf
add
insl
ret
or
xor
mov
adc
adc
mov
jno
add
adc
scas
pop
or
aas
rorl
repnz
rorb
mov
rorl
mov
cmp
jnp
loop
push
add
test
xor
mov
jp
loop
add
fsubrs
lock
pop
outsb
call
sub
push
xor
and
xor
cmp
fs
jle
pop
arpl
clc
sbb
xchg
xor
mov
inc
xor
jg
test
into
test
shlb
cmp
movb
mov
nop
dec
cltd
and
push
stos
pop
cmp
dec
add
ret
stc
mov
and
vmovapd
inc
adc
jg
push
je
xchg
pop
mov
lock
sar
and
xchg
popa
clc
daa
aas
cmp
ficoms
adc
sub
or
mov
lods
adc
add
in
inc
or
mov
push
pop
popa
add
lock
mov
daa
push
xor
mov
mov
aam
maskmovq
notl
stos
cltd
or
sbb
sub
inc
mov
sbb
adc
dec
jmp
push
fdivrl
jmp
addr16
ficoml
sbb
sbb
jb
xor
shl
inc
pop
stc
push
ret
mov
or
push
mov
push
or
mov
scas
out
inc
xorl
ss
subb
push
decl
testb
cmpl
lock
cli
and
mov
insb
loop
add
out
std
imul
fdivr
xor
fsubrl
xor
iret
adc
jb
and
sar
xor
dec
addr16
incl
pop
xorl
mov
fists
push
xor
xor
and
cmp
xlat
inc
add
nop
fbstp
cs
ret
jb
sub
xor
in
or
or
add
scas
and
push
add
or
or
and
stos
ja
push
xchg
add
dec
ret
add
inc
ror
int3
ljmp
add
es
shlb
adc
add
rol
push
sbb
xor
push
mov
in
mov
adc
lret
outsb
pop
repnz
or
and
pop
mov
adc
jb
mov
pop
sar
sub
push
jmp
cmp
call
xchg
out
sbb
jle
push
pop
sub
add
ret
jnp
adc
add
dec
rolb
test
int
mov
or
jecxz
enter
pusha
aas
test
les
int3
pop
mov
call
xchg
pop
pop
in
sbb
inc
cmp
or
stos
loop,pn
push
push
mov
call
adc
out
push
push
nop
push
ljmp
push
pop
push
jnp
scas
jb
and
std
and
lea
inc
inc
push
mov
leave
daa
ds
mov
xor
ljmp
pushf
dec
mov
cwtl
das
cld
push
xor
push
aad
mov
imulb
lcall
mov
shll
mov
sub
or
mov
movsl
movsb
outsb
push
or
xor
push
or
xorl
iret
pushl
lods
xchg
pop
mov
ret
or
sbb
adcb
sub
stos
fsqrt
mov
add
pop
cmp
sub
ja
mov
push
leave
pop
xlat
in
adcb
push
add
cmp
xchg
or
dec
mov
xor
add
and
xor
lret
adc
ss
xchg
aam
fwait
jo
push
pop
push
inc
sub
pop
sahf
jno
jecxz
and
test
iret
pop
xor
xchg
jg
les
in
sbb
cmp
jne
fs
cmp
call
ljmp
aas
fdivs
fdivrl
rolb
inc
cmp
xchg
jb
push
pop
push
aam
frstor
mov
push
movsb
insb
shr
inc
mov
orl
loope
jge
jno
dec
sbb
dec
inc
in
adc
test
cmp
fimuls
data16
mov
or
push
aad
xchg
add
je
aad
adcb
jbe
aad
sub
lret
lods
adc
inc
add
iret
inc
cmp
loopne
pop
icebp
rcl
pop
mov
mov
cmp
cs
inc
jecxz
mov
das
sbb
sub
fadd
jo
or
adc
push
dec
add
xchg
sbb
add
add
or
jp
add
and
and
test
ret
add
dec
imul
in
pop
xor
push
das
imul
or
testl
add
xlat
sbb
xor
aad
push
dec
enter
mov
addl
lahf
inc
pop
cmp
call
mov
xor
inc
shlb
out
jnp
mov
ljmp
aas
or
add
mov
lods
mov
in
pop
les
and
pop
add
insl
jp
mov
aas
stos
pop
aaa
push
pushf
sub
inc
sarb
push
sub
push
arpl
jge
test
iret
push
int3
fsubl
aad
test
jp
and
insb
pop
cmp
cltd
enter
lock
out
add
fisubl
sbb
mov
aam
sbb
xchg
popl
insb
test
cmp
push
jl
dec
sbb
mov
mov
shrl
push
sbb
mov
mov
sbb
adc
jbe
rcll
add
rorb
dec
dec
clc
adc
roll
adc
push
pop
arpl
adc
or
or
and
pop
mov
test
mov
jg
sub
mov
and
xchg
mov
add
cli
rorb
sti
ds
popf
add
or
inc
shlb
pusha
sbb
daa
mov
or
sahf
flds
ljmp
imul
jbe
add
adc
fimuls
mov
dec
xchg
cwtl
aam
or
loop
hlt
jb
or
xchg
xor
icebp
cmp
cmp
test
dec
mov
xor
sbb
lret
mov
add
xor
cmp
fdivrs
repnz
sbb
pop
jmp
or
jae
les
push
fnstsw
lea
cmp
sbb
xlat
jb
cmp
pop
add
xor
lds
into
add
aaa
sub
out
and
icebp
inc
test
jae
stc
call
ret
sub
or
adc
mov
not
xchg
loope
rcrl
adc
dec
int
mov
or
push
sub
pop
mov
aaa
jo
cs
push
mov
mov
adc
inc
push
lret
adc
cs
jg
es
repnz
das
jl
dec
test
shlb
test
push
iret
inc
jo
les
aad
daa
call
in
imul
or
inc
xor
ljmp
cmpb
outsl
inc
cmp
dec
or
adc
dec
xlat
aaa
orb
lds
inc
loop
cmp
dec
subb
mov
out
push
ret
adc
pop
shlb
sub
and
test
fidivrs
and
sbb
lock
out
pop
mov
mov
int3
bound
lret
mov
dec
adc
inc
add
ja
cmpxchg
fcompp
lods
add
fistps
adcb
dec
add
ret
sub
pop
mov
jl
fcoml
pop
push
push
ds
xchg
push
fdivrs
lahf
or
lods
bound
inc
adc
ret
mov
cmp
mov
jnp
shl
sub
insl
xchg
cwtl
lock
jecxz
lds
nop
adc
in
jp
add
std
js
sbb
sub
push
jne
mov
and
pop
iret
mov
xor
cmp
push
xchg
adc
and
sbb
scas
mov
mov
mov
push
or
ljmp
loopne
sbb
pop
add
lahf
add
xor
loopne
jae
xor
rclb
dec
lcall
arpl
mov
sub
cmp
or
pop
jbe
sbb
test
es
or
lcall
mov
cmpsb
ja
pop
in
adc
scas
ss
sbb
sbb
inc
enter
cmc
lea
pop
mov
cwtl
push
add
mov
lds
sbb
xchg
mov
sub
lods
mov
lcall
bound
xor
clc
mov
xor
mov
inc
in
xchg
pop
sub
loopne
or
sub
jb
popf
xor
test
sub
sub
xor
cmpsb
ret
adc
out
ficoms
push
mov
inc
sub
lea
cwtl
mov
subl
fistps
push
aas
pop
pop
neg
pop
outsl
pop
push
lds
sbb
sar
orb
dec
or
sbb
loop
mov
sarb
mov
jne
loope
ret
add
lds
push
xor
mov
push
lahf
push
out
cmpsl
js
sarb
loope
jmp
jae
cltd
xchg
mov
repz
push
add
push
dec
cwtl
pop
jnp
out
iret
lcall
out
int
cmp
negb
pushf
or
fmul
and
and
sbb
ret
sub
pusha
push
push
adc
jge
mov
mov
test
mov
pop
loopne
mov
sbb
xchg
push
lret
xchg
cmp
mov
sbb
sahf
add
pop
fwait
xor
jmp
push
jnp
stos
xor
das
mov
xlat
dec
std
lock
sub
roll
ret
adc
int3
in
incl
and
and
or
mov
lds
xlat
test
nop
jmp
out
mov
repz
addb
inc
mov
aas
inc
popa
ret
popf
jl
push
inc
lock
inc
push
adc
pop
add
pusha
or
cmp
jb
dec
cli
or
dec
pop
lock
das
xchg
stc
sti
adc
loope
sbb
cmp
push
push
shl
lcall
cmp
xor
arpl
xor
les
pop
add
dec
add
subl
or
xchg
loopne
push
add
xlat
out
daa
pop
push
testl
testb
mov
sbb
inc
pop
shl
shrb
es
cmp
cli
dec
jl
addl
pop
jg
mov
adc
dec
clc
faddl
lcall
loop
mov
testl
add
inc
sub
add
jmp
adc
scas
in
jge
outsl
gs
add
dec
jo
fdivrl
xchg
xor
repz
dec
mov
mov
popa
mov
test
dec
in
sub
and
subb
sub
sbb
dec
ljmp
adc
add
mov
leave
notl
inc
cwtl
outsb
and
mov
mov
cmp
and
mov
movsb
ret
or
pop
push
movsl
push
or
cli
jbe
aam
adc
ja
loopne
mov
or
add
pop
ret
test
ret
test
pop
push
aam
push
jmp
flds
inc
in
and
lock
cltd
rcrb
or
xchg
adc
pushf
or
pushf
adc
outsb
adc
shll
and
test
inc
and
jno
hlt
fisubs
push
mov
adc
fists
xor
faddl
orl
es
mov
mov
fsubrl
into
add
popf
cwtl
lock
sbb
cmp
iret
stc
add
arpl
out
add
or
dec
xchg
add
add
orb
add
jnp
ja
ljmp
lds
xchg
mov
adc
inc
mov
xor
int
rcrl
push
test
jbe
stos
sti
shrb
sub
loopne
xor
jbe
shll
and
sub
add
leave
movsl
les
cmp
fstpt
daa
cmp
clc
push
mov
xor
aam
dec
sub
pop
shrl
jno
cmp
bound
push
rorb
sbbl
fisttpl
add
or
mov
push
cmp
shlb
mov
test
xchg
and
sbb
sub
xchg
jp
ds
lcall
xchg
mov
sahf
rcll
jge
ret
dec
push
flds
and
sbb
mov
loopne
or
cmp
insl
shlb
adc
mov
jle
adc
mov
bnd
inc
loopne
pop
cmpsb
add
or
fs
inc
xchg
popf
pop
fisubs
xor
faddp
jecxz
aaa
mov
fwait
or
scas
in
movsb
adc
dec
aam
adc
loopne
add
or
or
lock
and
ficoml
lcall
mov
push
cmpsb
movzwl
cs
add
dec
xor
arpl
adc
pop
test
jb
into
inc
nop
sub
movsw
es
sub
xchg
sub
call
pop
sbb
cld
mov
and
insb
scas
mov
inc
jp
leave
push
lock
add
inc
test
repnz
adc
ret
cmp
into
les
or
out
into
xorb
or
sub
sbb
add
es
inc
mov
add
mov
jp
or
aad
icebp
mov
add
push
imul
dec
cli
imulb
addr16
jge
xchg
les
add
bnd
rcrb
aam
adc
xchg
aam
bound
xchg
cmpsb
and
sbb
pop
xor
test
sbb
xor
repnz
rcrb
and
pop
fdivl
inc
xchg
mov
xor
inc
sete
cmp
jbe
cmp
rcl
out
add
push
mov
lods
fisttps
jo
add
cwtl
stos
es
push
adc
adc
sub
or
sub
sub
xorb
add
jo
mull
mov
imul
mov
inc
scas
ljmp
sbbl
imul
sub
mov
sbb
dec
inc
cmp
jns
xor
movsb
add
enter
dec
mov
xor
scas
and
mov
or
pop
jecxz,pt
dec
add
int
gs
cmp
pop
ss
ret
les
int
sub
mov
lock
mov
lcall
shlb
roll
inc
hlt
data16
cld
xchg
test
fcomps
jg
inc
push
cmp
jbe
mov
cmp
sub
lods
push
out
add
mov
jbe
add
adc
push
add
inc
popl
adc
sahf
xchg
movsb
rcll
push
cmp
inc
mov
cmp
insl
mov
add
fistpll
aad
or
adc
mov
jbe
cmp
movsb
xchg
shrb
xor
xchg
jl
addl
sahf
add
ss
jg
sub
xor
and
pop
in
cltd
mov
xor
sbb
cmpb
sub
sbb
mov
mov
dec
push
add
xchg
dec
jno
outsl
sbb
push
mov
adc
ror
out
cmpsl
pushf
inc
clc
scas
aam
shl
mov
jbe
cmp
mov
jae
ds
ficoml
call
sub
jo
or
add
add
pusha
js
dec
adc
arpl
idiv
mov
gs
mov
lock
pop
es
rcl
lds
or
xor
je
add
repnz
movsb
xor
mov
roll
inc
sub
inc
xor
addb
cld
popf
mov
pop
mov
inc
pop
outsb
add
inc
add
add
cmp
out
inc
adc
ret
mov
shrb
sub
mov
sbb
push
add
push
daa
in
gs
lock
inc
dec
mov
push
sbb
pop
add
sbb
or
and
push
sbb
adc
ret
lret
clc
xor
add
add
loope
mov
rolb
xchg
add
loopne
lea
fdivl
add
push
ja
or
and
mov
push
movb
int
push
insl
fdivrl
cmp
add
pop
test
out
insb
lds
mov
dec
popa
into
push
jmp
shll
mov
test
adc
and
dec
and
sbb
stos
or
fidivl
mov
add
jp
xor
popf
lods
mov
jg
adc
push
inc
inc
mov
add
stos
test
rorb
jecxz
xchg
dec
sub
mov
jmp
jbe
mov
xor
xor
cmp
fsubl
outsl
push
add
and
xorb
aad
inc
outsb
andl
adc
sbb
negl
rcrb
and
add
or
scas
dec
shr
pop
data16
and
and
mov
divl
adc
adcb
leave
add
data16
stc
sbb
mov
or
xor
pop
incl
arpl
dec
add
inc
sar
pop
inc
cmp
sbb
and
mov
sbb
scas
push
dec
test
int
pop
inc
test
jo
mov
mov
jb
adc
push
mov
mov
sti
out
lock
dec
imul
mov
outsb
iret
inc
dec
shlb
js
inc
jge
adc
and
cld
mov
jmp
xchg
dec
loop
sbb
and
dec
sbb
and
addl
insb
mulb
aas
fmulp
test
in
ss
add
call
arpl
daa
dec
lods
les
or
sbb
aam
mov
cmp
in
xchg
lcall
loop
or
jp
andb
inc
fists
pop
test
fbld
es
sub
sbb
mov
xor
lcall
sub
push
mov
lea
lods
data16
mov
and
pusha
jmp
add
mov
fisttps
cld
or
int3
bound
add
mov
jne
adc
test
aaa
jmp
gs
loope
aam
cli
cli
aam
das
and
loopne
popa
adc
jmp
add
push
jo
adc
push
outsl
out
outsb
inc
and
fdiv
jmp
or
test
mov
popa
sbb
sub
cmp
sbb
and
add
sub
sahf
add
adc
popa
push
scas
enter
sbb
mov
rorb
cmovo
test
sbb
adc
aas
pushf
lock
push
cld
in
dec
fsubr
imul
push
outsb
add
inc
pop
loopne
out
stos
cmovs
inc
adc
or
repz
stos
pop
push
sub
sarl
pop
xor
movsb
adcb
icebp
or
bound
stos
and
sbb
xor
sbb
xor
sub
repz
dec
cld
mov
fwait
orb
xchg
push
clc
and
mov
push
out
nop
cmc
and
daa
adc
sbb
xor
pop
mov
adc
cli
push
loope
cmpsb
lahf
mov
cs
and
jmp
ficoms
jno
sbb
push
mov
cs
inc
bnd
sbb
ljmp
test
ret
std
cmp
push
aas
or
test
jp
btr
nop
fldcw
add
fmull
or
jns
fs
jns
adc
fldenv
and
mov
xor
xchg
mov
mov
scas
loopne
inc
mov
jmp
sbb
pop
xor
rolb
add
mov
inc
les
or
pop
in
jb
in
mov
shrl
das
cmpl
xchg
xlat
int
dec
scas
aaa
xorb
push
sbb
lcall
jb
adc
pop
adc
sub
sub
add
push
fisubs
out
pop
and
mov
jecxz
icebp
sbb
push
jo
xor
sbb
popf
addb
adc
faddl
clc
xchg
icebp
mov
addr16
xor
subl
mov
std
inc
je
push
cmpsb
aam
push
xchg
adc
test
leave
jne
mov
leave
xchg
movsb
mov
or
and
and
lea
mov
push
push
sub
outsl
sbb
shll
jg
ljmp
cli
cmpsl
cmp
mov
scas
ljmp
adc
stc
adc
sti
pushl
sub
cmpsl
push
outsl
sub
pop
mov
jmp
mov
cmp
mov
jmp
xor
add
adc
adc
xchg
jnp
push
jo
push
fistl
es
rcll
push
js
dec
cs
jmp
iret
scas
xchg
lods
dec
jne
imul
cmp
and
ja
add
sar
rorb
add
mov
or
sub
into
addb
insl
lock
in
xchg
inc
push
fsubl
into
cmp
fdivrl
pop
hlt
rclb
daa
xorb
popf
push
pusha
je
inc
xchg
in
adc
lcall
shrl
or
and
jecxz
cwtl
ficoms
inc
add
sub
enter
cli
inc
push
add
data16
int3
or
push
loop
rorb
jle
das
sub
stos
int3
sbb
adc
push
lock
stos
and
sub
pusha
add
or
test
dec
jle
sbb
adc
adc
cmpb
test
jg
rorl
or
and
in
or
vmptrld
add
call
push
jmp
scas
xor
mov
add
cs
adc
add
push
adc
mov
jns
and
gs
cmp
or
int3
fxtract
movb
sbb
xor
pushf
push
xchg
push
xchg
enter
mov
enter
mov
mov
stos
dec
sbb
call
aad
adc
push
sbb
inc
call
sarl
insb
mov
rclb
cli
aas
aad
mov
add
sub
daa
stos
fcomps
ja
dec
in
xchg
call
mov
enter
push
sbb
and
mov
lret
sbb
pop
push
adc
push
mov
push
inc
jo
xchg
enter
add
fisubs
xchg
shlb
pop
shrl
adc
jl
mov
add
aam
push
inc
mov
popf
ret
push
or
inc
push
shrl
cld
cmp
or
or
add
inc
jge
mov
pop
mull
lods
subl
shr
adc
add
xchg
call
push
add
mov
cmpsb
test
adc
add
dec
mov
ret
push
and
iret
pop
sub
or
insl
je
push
test
outsl
jnp
inc
popa
lds
and
pop
leave
add
push
add
daa
add
jmp
loope
pop
cmp
cmp
push
push
test
int
js
fistpll
cltd
pop
xor
and
jbe
clc
lahf
inc
push
xor
mov
or
xchg
mov
sbb
and
add
fldenv
popf
pop
adc
mov
notb
imul
dec
scas
dec
repz
cmp
push
sbb
sbb
inc
cwtl
addb
out
sbb
ror
shll
sbb
jge
or
loope
dec
sbb
sub
xchg
sbb
les
xor
jmp
push
pop
cld
incb
out
mov
pushf
mov
adc
xor
test
ret
xor
cld
inc
sbb
or
call
in
and
and
sub
mov
push
jecxz
adc
cld
mov
in
xor
pop
adc
and
std
add
add
pop
sbb
inc
clc
push
ja
mov
les
out
pop
shlb
shll
in
jecxz
mov
mov
adc
push
int
mov
aad
inc
fwait
jge
addr16
or
dec
mov
std
xchg
pusha
jns
sbb
add
inc
cmp
sarb
jns
inc
push
pop
lahf
sbb
dec
sub
or
in
movsl
pop
lcall
stc
loope
dec
inc
push
push
iret
popf
cld
cld
stc
and
mov
loope
mov
js
or
idiv
sbb
popf
and
into
xchg
and
fcmovnb
mov
jle
das
add
insb
xor
clc
les
loope
mov
fcmovnbe
int3
add
cmp
jmp
mov
data16
xor
jp
mov
gs
push
xor
cmp
jnp
js
inc
mov
add
stos
shrl
inc
xchg
mov
rcrb
leave
mov
cld
mov
or
mov
jmp
and
mov
ja
inc
insb
je
cmp
popf
ret
rolb
push
mov
popaw
test
and
pop
mov
cld
inc
rorl
xor
in
cmp
or
jmp
roll
cmp
inc
jbe
push
hlt
lcall
mov
cmp
mov
push
push
lret
addr16
xchg
add
addb
stos
insb
push
and
inc
outsl
adc
add
sub
xor
inc
jecxz
or
mov
inc
mov
mov
push
jmp
test
lahf
movsb
pop
pop
add
xchg
push
mov
cwtl
aaa
dec
lods
icebp
push
cld
sbb
inc
test
push
repnz
std
fs
or
outsl
rcrb
lret
push
cmp
sti
pop
lds
push
scas
call
push
sub
add
sbb
and
leave
add
push
sub
push
fimull
clc
ljmp
sub
adc
add
pop
lret
push
pop
movsl
mov
dec
cmp
pop
aas
adcb
jecxz
ss
lea
sti
lcall
bound
xchg
and
and
pop
and
pop
or
popf
dec
dec
cmp
nop
mov
lcall
or
cwtl
sub
data16
sti
jo
xchg
mov
dec
adc
sbb
jl
lcall
sbb
sub
sar
rorl
xor
outsl
lock
mov
les
inc
mov
mov
xchg
ret
sub
dec
ljmp
icebp
mov
mov
in
jo
mov
movsb
lea
les
xorb
mov
jp
jne
addr16
inc
mov
fmull
cmc
out
adc
sti
jge
add
inc
popa
xchg
notb
adc
add
test
bound
dec
sub
dec
mov
or
clc
popa
add
cwtl
fidivl
iret
mov
jbe
addr16
loop
inc
test
out
or
iret
cmp
mov
push
in
and
pop
push
xlat
sbb
ds
inc
addb
xchg
xor
pop
push
repz
sbb
pop
lods
adc
into
rorl
add
stos
dec
inc
adc
cmp
sub
dec
pop
imul
sbb
daa
xor
ror
js
add
das
pop
repz
sbb
mov
cmp
fstl
frstor
loop
jl
sub
push
adc
pop
or
mov
add
aad
xor
mov
adc
mov
sbb
push
jo
mov
push
xor
aas
push
sbb
fisttpl
fs
into
les
or
sub
lea
stos
aam
mov
cmp
mov
add
pusha
dec
xchg
or
popf
inc
mov
push
add
mov
mov
cmpl
xchg
mov
mov
jge
sarb
ret
inc
and
add
repnz
push
cmc
xchg
repz
adc
mov
sbb
mov
cmp
add
xor
xor
mov
push
loop
or
aam
inc
push
xor
xchg
adc
out
sbb
push
adc
push
xchg
test
ficomps
add
add
xor
or
sbb
dec
push
pop
stos
lods
or
loop
dec
push
mov
adc
xor
test
jb
fisubs
mov
dec
mov
dec
mov
pop
fiaddl
inc
into
cmp
iret
inc
jge
mov
sub
push
and
mov
sub
pop
dec
push
xchg
mov
mov
or
repnz
sbb
insb
pop
push
mov
xchg
push
jne
sti
xchg
inc
sub
and
push
rclb
sub
or
stos
mov
sub
push
push
into
in
xor
cmp
int3
shrl
or
mov
addb
mov
sbb
lcall
inc
dec
jp
or
es
dec
or
lcall
insb
mov
push
in
mov
test
push
roll
mov
insb
aas
cmp
mov
jmp
scas
mov
jno
xchg
inc
adc
add
dec
fstp
or
filds
shll
jnp
insb
xchg
fwait
testl
or
jbe
and
cld
push
xor
sar
out
loopne
xchg
jl
out
scas
xor
aam
dec
push
push
out
mov
add
xor
xor
movl
dec
add
call
orb
jae
insl
adc
lcall
movsb
sub
stos
std
lcall
jg
sahf
and
movsb
ljmp
xchg
cs
dec
jb
jg
pop
test
pusha
dec
add
jg
jo
pop
pop
std
lea
jmp
bound
and
and
ds
mov
add
add
outsb
and
das
icebp
cmp
xor
sbb
push
lcall
std
aaa
popf
add
aas
xchg
rolb
int3
push
xor
packuswb
push
jg
loop
mov
repnz
jb
pop
js
push
add
push
dec
pop
xor
push
sbb
and
test
and
pop
add
push
in
int
movsb
or
call
cld
xor
loope
dec
cmp
pop
sub
fldenv
repnz
or
pop
enter
sub
add
popa
addb
jg
xchg
lret
add
stos
and
ja
adc
mov
rcl
clc
pop
or
cmpsl
xchg
pop
cwtl
add
lods
mov
daa
mov
icebp
xchg
xchg
cmpsl
add
jb
dec
xchg
fildl
xor
aas
adc
pop
xchg
lods
std
push
sbb
call
addr16
dec
mov
mov
dec
mov
mov
sti
adcb
les
nop
inc
ret
call
or
cmc
pop
sub
sbb
cmp
shlb
inc
jns
add
jbe
es
repz
adc
addb
mov
mov
stos
fstps
push
xchg
insl
inc
or
outsl
push
or
mov
xchg
outsb
sbb
push
fnstenv
pop
sbb
loope
push
ss
mov
jge
pushf
inc
mov
pop
mov
sbb
xor
push
pushw
pop
inc
inc
sti
inc
inc
dec
push
mov
lods
imul
arpl
jnp
jp
mov
lock
jno
les
adc
or
lock
addb
inc
push
mov
inc
cli
adc
mov
sub
push
fwait
inc
jne
pop
call
add
sbb
es
out
mov
mov
add
xchg
cld
xor
shll
cmp
filds
cs
rol
rclb
data16
in
dec
or
pop
mov
jp
adc
mov
mov
rsm
mov
out
add
or
loopne
add
pop
adc
scas
out
push
test
scas
cmpsb
xchg
mov
add
and
lock
mov
loop
sbb
or
outsl
or
clc
sub
or
xor
lcall
dec
sub
into
sbb
loop
inc
jno
cmp
shlb
push
out
inc
add
xor
sbb
xor
enter
call
subl
out
outsb
jb
bound
adc
mov
and
ja
xchg
movsb
add
ljmp
or
sub
push
inc
or
cmp
jle
mov
mov
push
mov
adc
adc
cmp
mov
cmp
push
dec
les
rolb
cmpsl
dec
les
les
mov
fbstp
jnp
cmp
inc
ljmp
cltd
js
pop
hlt
cld
cld
inc
in
jo
adc
hlt
xchg
pushf
sbb
data16
mov
cmpsb
adc
movsb
mov
adc
dec
daa
rcrb
inc
xor
loop
mov
lds
cmp
dec
arpl
addr16
imul
cmp
cmp
xchg
loopne
jnp
clc
repz
and
pop
inc
popf
in
das
icebp
or
shr
imul
imul
push
cmp
jmp
xor
popa
mov
xlat
and
pop
out
or
inc
ret
ret
add
stc
or
repz
cmp
pusha
lods
push
std
sbbl
ljmp
push
or
add
mov
inc
aad
pusha
adc
leave
add
out
or
loopne,pt
lds
mov
inc
mov
or
push
rcll
les
inc
mov
dec
aad
adc
lea
push
jmp
enter
add
or
int3
xchg
lods
and
cmpb
jle
dec
nop
mov
adc
cmp
add
inc
jmp
mov
add
orb
dec
pop
out
push
lods
jo
std
addl
push
xor
ret
push
jge
mov
mov
adc
push
pop
bound
in
call
cmp
mov
add
into
incl
out
mov
adc
fcompl
mov
xchg
and
xchg
mov
shlb
out
add
ljmp
pusha
adc
pop
mov
mov
enter
push
cli
fistpl
adc
dec
mov
popf
inc
sbb
cltd
inc
das
xchg
mov
aaa
xor
pop
cli
jg
fsubrs
sahf
cld
pop
xchg
and
or
icebp
stc
insb
dec
cli
repz
push
addb
jno
jle
fisubrl
in
mov
or
adc
push
mov
add
outsl
rorl
mov
aaa
mov
add
pop
inc
outsl
push
or
out
lock
pop
insl
pop
fldl
call
push
inc
insb
sbb
ljmp
jl
sahf
pusha
add
cmpsl
jp
roll
mov
mov
pop
pop
out
leave
push
icebp
or
mov
loop
mov
fisubrs
jmp
or
and
mov
cmp
fbld
mov
push
sbb
inc
adc
and
cmpsl
iret
pop
or
sub
mov
nop
pop
push
aam
shlb
mov
or
cmp
push
or
xchg
xchg
es
add
dec
add
mov
dec
push
add
xor
push
add
in
cwtl
stc
hlt
pop
cmpsb
push
jae
lods
add
or
addr16
push
ficomps
adc
push
add
or
lods
adc
hlt
ror
adc
sbb
dec
sub
dec
das
std
loop
mov
aaa
add
push
fldenv
lods
cmp
scas
add
jb
and
int3
movsb
inc
loope
add
inc
pop
mov
ljmp
stos
add
or
pop
dec
add
mov
enter
add
les
sbb
dec
fs
lods
mov
sbb
andb
cltd
fsubrp
cld
rol
cmpsb
jnp
lock
in
test
aam
inc
dec
dec
inc
call
loopne
andb
cmc
insb
mov
loop
into
bound
adc
sbb
hlt
rcrl
rorl
adc
push
lock
out
adc
les
into
popa
xor
or
xor
out
ret
or
push
sbbl
movsb
jb
das
dec
cld
ficoms
sub
mov
shll
pop
inc
and
dec
xchg
je
mov
lds
jle
mov
nop
mov
inc
aam
and
js
adc
jmp
nop
hlt
dec
pshufw
xchg
jge
adc
adcl
dec
pop
inc
adc
or
loopne
sbb
pop
hlt
shrl
inc
out
pop
lock
or
dec
sahf
int
push
sahf
adc
ficompl
aas
cwtl
sub
or
bswap
jp
and
fbld
adc
clc
test
orb
ret
popf
addb
addr16
add
and
andb
fldl
xchg
mov
xor
dec
mov
add
push
cmpsb
pop
sbb
movq
orl
pusha
ret
inc
mov
lcall
scas
addb
mov
adcl
imul
test
shrl
repnz
nop
inc
and
fs
ljmp
xchg
test
adcb
push
addr16
mov
inc
xor
js
sub
and
sub
or
and
les
icebp
pushf
push
insb
icebp
push
stc
add
or
faddl
aam
js
inc
enter
inc
lds
negl
sbb
xchg
add
sti
shlb
ror
push
jno
jb
out
cmp
sbb
add
pop
sbb
mov
rcrl
mov
loopne
xchg
add
dec
or
sbb
or
xchg
mov
nop
mov
xchg
lret
xor
scas
fisubs
mov
aas
push
push
roll
testb
jl
mov
mov
cmp
add
and
inc
push
into
add
and
add
test
push
dec
lcall
jo
adc
xor
add
cmp
mov
popa
jbe
repnz
add
inc
add
pop
sub
pop
sub
ljmp
mov
mov
or
rolb
imul
shll
push
sti
pop
adc
int3
movb
lds
pop
mov
pop
jge
or
or
outsl
dec
inc
gs
dec
mov
inc
jl
sarb
out
cmpsl
mov
rol
ret
xchg
jge
lar
sbb
call
and
cmpb
pusha
ficoms
aam
add
inc
dec
xchg
inc
add
or
inc
push
mov
push
pop
push
lret
push
sbb
stc
dec
mov
sarb
sub
jae
inc
sub
testb
xor
push
shlb
or
adc
mov
out
or
andl
sbb
jle
and
push
mov
mov
mov
fidivrl
cmpsl
inc
imulb
sub
std
incl
aad
jne,pt
pusha
in
mov
sub
sbb
mov
add
inc
sub
xchg
lahf
ss
lds
mov
and
pop
mov
mov
test
aaa
sbb
mov
shrb
adc
xor
dec
and
movsl
inc
xor
ds
pop
cmp
stos
mov
inc
rcrb
add
fbstp
add
test
cltd
add
pop
adc
mov
mov
add
js
cmp
mov
rolb
cmp
lahf
nop
movsb
add
enter
jle
and
stos
xchg
out
push
loop
mov
test
or
decl
test
mov
iret
outsb
cmpsl
xchg
adc
inc
inc
sbb
clc
inc
pop
fdivrp
mov
std
iret
or
repnz
adc
pop
call
ret
jo
in
imul
bnd
push
decl
inc
in
std
clc
test
int
mov
xchg
rcrb
lret
mov
jl,pt
pop
pop
dec
movsb
add
cs
aad
mov
mov
andb
mov
or
xchg
mov
jl
mov
imul
mov
fdivp
addl
call
sbb
pop
aad
cmpsb
inc
pop
addr16
mov
push
shr
mov
cmp
adc
mov
or
adc
lret
inc
std
sub
cmp
and
add
or
jo
jge
jge
xchg
mov
cli
push
sub
dec
sbb
adc
lret
sbb
xchg
popa
push
jno
clc
call
scas
call
add
sbbb
iret
sub
pop
fwait
inc
lahf
mov
mov
sub
or
inc
cmp
mov
mov
pop
mov
mov
and
inc
rcll
ret
mov
lret
cmp
mov
imul
adcb
jne
inc
xchg
call
les
add
mov
add
insb
mov
ljmp
subb
fs
rcrl
xor
adc
adc
xchg
scas
mov
mov
mov
push
jo
cmp
push
push
shr
cld
mov
cwtl
jne
lock
out
loopne
xor
inc
push
bnd
pop
bound
add
push
jo
sahf
inc
mov
inc
out
stos
jo
inc
xchg
or
or
mov
and
xchg
fs
adc
mov
fdivl
fadds
out
or
mov
mov
mov
test
sub
in
mov
inc
cld
and
addl
test
dec
push
inc
dec
out
shll
imul
or
mov
je
mov
jo
xor
inc
out
mov
sub
dec
xchg
addb
ds
push
testb
test
lods
jne
es
call
leave
test
add
pop
fdivrl
nop
cld
or
cld
push
arpl
xchg
add
jge
jno
aam
fwait
or
jnp
push
aam
loop
incl
orl
aad
repnz
stos
bound
inc
pop
sbb
push
clc
test
mov
add
test
xchg
pop
mov
dec
add
lcall
stos
stos
xor
mov
mov
or
pop
add
xor
sbb
mov
lods
lock
outsl
insb
fistps
into
inc
xor
mov
xchg
and
push
mov
enter
cmpb
adc
adc
push
push
sbb
ret
xor
sub
fmuls
sti
lret
pusha
mov
push
and
xchg
mov
sarl
daa
adc
ljmp
call
jp
sahf
in
ss
lock
pop
inc
add
jp
dec
add
or
addb
inc
out
les
dec
mov
mov
add
pop
outsl
fisubl
push
sbb
ret
add
xor
pop
clc
xor
sahf
mov
cli
mov
and
mov
add
or
adc
pop
cmp
pusha
int3
pusha
fcomi
icebp
push
jg
xchg
orps
dec
or
clc
cli
xchg
dec
bound
in
cld
std
dec
jae
daa
or
inc
aad
add
add
repnz
in
jg
adc
sub
dec
das
mov
outsl
add
adc
pop
les
sbb
outsl
call
pop
sub
or
add
jg
fists
jmp
adc
xchg
int3
mov
aam
sbb
push
fildll
add
aaa
add
dec
mov
sbb
jp
mov
dec
add
xlat
subb
add
shrl
pop
xor
jno
sub
adcl
loopne
cld
lea
add
mov
into
add
or
mov
pop
shlb
pop
repnz
and
pop
cmp
pushf
adc
xor
xchg
fsubr
loopne
push
cwtl
addr16
mov
das
test
cld
xchg
fwait
nop
std
mov
incl
mov
mov
and
sbb
insl
mov
xor
sub
es
jb
lret
mov
insl
adc
bound
mov
roll
mov
mov
xchg
sarl
or
mov
ret
and
jg
mov
inc
sbb
jnp
clc
xchg
sub
adc
inc
mov
cmp
cmp
inc
movsb
push
inc
mov
icebp
mov
mov
fdivl
out
es
pop
dec
test
out
mov
adc
pop
mov
and
jbe
ficoml
ja
adc
scas
insl
pop
test
fiaddl
loop
sub
clc
lds
ret
mov
inc
cmpsb
dec
or
std
mov
push
xor
jg
or
outsl
outsl
jno
mov
or
add
push
inc
add
pop
jns
fucom
cmp
adc
pop
jle
mov
ret
mov
jno
jbe
cmpsl
pop
inc
jnp
sbb
adc
js
xor
les
cmp
movsl
jae,pn
jnp
insl
cltd
test
pushf
repnz
hlt
call
fimuls
sbb
lods
cmp
or
pop
mov
push
push
xchg
lret
sub
das
mov
jmp
or
pop
insl
sbb
incl
in
adc
mov
mov
leave
popf
pop
add
loope
lods
rorl
mov
ffree
push
lret
xor
iret
loopne
out
pop
adc
test
subb
mov
sti
or
sbb
add
jp
insl
sti
push
sbb
leave
mov
fildll
ljmp
inc
dec
sub
jnp
push
repz
test
jg
lods
pop
outsl
dec
inc
mov
xchg
enter
push
mov
mov
jnp
bound
mov
mov
dec
ret
es
scas
inc
xorl
lock
mov
add
cli
push
adc
rcrb
xchg
adc
or
addr16
ret
ss
pop
jnp
mov
xchg
leave
bound
sub
mov
adc
cmp
jo
das
xchg
cmpsl
dec
mov
addr16
jne,pn
inc
xor
testb
cmc
movsb
adc
jbe
adc
loope
push
push
imul
mov
mov
jl
cmpsb
adcb
inc
mov
xor
sub
push
push
aaa
je
push
inc
shlb
jo
dec
fs
mov
lcall
sti
push
sti
mov
out
inc
and
aaa
xor
cli
lock
mov
shll
mov
sbb
adc
jmp
mov
push
outsb
or
lock
ljmp
xchg
clc
or
or
mov
push
mov
push
mov
sarl
or
dec
xchg
test
mov
scas
js
adc
fdivrs
int
sar
insb
lds
call
das
aad
cltd
loope
lods
imul
or
or
mov
cs
cmpsl
loopne
push
das
int
pushl
fbstp
jns
clc
dec
jbe
sub
popf
outsl
xor
xchg
sarb
pop
cltd
pushl
shl
mov
adc
testl
in
fildl
push
repz
jecxz
mov
or
adc
cmp
imul
pop
inc
or
lcall
jl
pusha
aas
movsl
addr16
aam
cmp
sbb
rcr
pop
cmp
mov
sub
lds
or
movsb
xchg
xchg
test
adc
push
inc
mov
xor
cmp
call
mov
out
iret
push
andb
mov
in
jbe
mov
jg
or
push
rorl
test
loopne
shll
and
fiaddl
add
mov
sti
lea
xor
cs
gs
call
loopne
mov
xor
cmp
inc
stos
insl
jmp
cmpsl
mov
xor
out
mov
cld
shrl
cwtl
inc
into
fstpt
cld
mov
rorl
push
push
sbb
cmp
add
call
push
pusha
jno
lods
fldl
mov
insl
insb
fs
rcr
xlat
sarl
add
fidivl
pop
mov
sub
or
arpl
test
xchg
iret
xor
or
sbb
push
cs
xor
in
inc
jle
sub
add
mov
std
sub
incb
clc
jae
xlat
jp
loope
adc
jmp
movsl
add
pop
add
loopne
mov
add
lret
mov
add
fsubs
or
je
jle
call
add
mov
clc
sbb
mov
nop
dec
cli
imul
cwtl
insl
pop
ss
clc
ret
inc
sub
fildl
aam
pop
mov
or
xchg
push
add
hlt
adc
sub
jb
fnstenv
cmp
sti
out
pop
adc
out
lock
inc
fstpt
shr
dec
faddl
mov
inc
and
adc
pushl
xchg
or
pop
in
lret
or
push
mov
clc
xlat
cmovp
jp
inc
pop
mov
lods
call
mov
mov
inc
addb
loopne
jne
or
push
jns
push
inc
sub
fildll
not
adc
push
lret
add
sarl
and
inc
and
dec
add
mov
aaa
inc
adc
ja
cs
cmp
push
and
sahf
fldl
jbe
mov
clc
mov
ret
push
mov
adc
jmp
sbb
cmp
mov
jg
cmp
and
lea
jg
mov
jo
jns
mov
aaa
outsb
xchg
and
call
mov
mov
call
sar
add
xchg
and
add
inc
sub
jmp
lds
icebp
mov
mov
xchg
pop
cmc
mov
pusha
in
inc
push
pop
jp
or
fucomp
jnp
lret
inc
pop
call
mov
fmul
insb
loopne
pushl
stos
xchg
mov
and
push
add
add
ret
cmpl
sti
loopne
cltd
inc
xchg
pop
or
pop
lahf
add
lods
sub
test
cmpb
inc
sub
pop
sarb
in
add
lret
or
subb
jle
add
out
adc
fs
add
pop
add
orb
inc
arpl
jg
in
paddw
lods
lods
dec
cmp
fildll
push
ret
in
jne
add
jns
xor
mov
dec
in
sti
dec
push
insb
and
test
jg
outsl
pop
and
mov
mov
mov
fwait
sub
adc
dec
test
cmp
pop
pop
addr16
jge
rolb
std
pop
inc
imul
pop
loopne
aaa
test
neg
dec
loopne
repz
xchg
outsl
movsl
push
push
push
fiadds
lcall
loope
les
inc
mov
mov
test
jbe
add
push
ljmp
rorb
rcrb
icebp
movsl
sub
fists
pop
ret
push
adc
jno
pop
xor
jle
outsb
sarb
shrl
add
sahf
inc
sub
cmc
sbb
scas
jnp
jge
sub
pop
pop
mov
adc
mov
jg
push
in
jbe
push
in
aaa
ja
push
inc
nop
shlb
or
gs
sub
test
jecxz
inc
int3
repz
mov
inc
lds
sub
js
hlt
mov
mov
negl
lock
mov
pop
jle
fildll
pop
loopne
aaa
and
push
shr
jp
ret
push
fcomp
push
mov
push
mov
arpl
jno
pop
clc
scas
rcrl
or
mov
push
ljmp
nop
sub
mov
push
lahf
popa
in
vmovdqa
bound
aam
sbb
lods
out
mov
mov
in
lock
mov
sub
cmp
lock
les
or
mov
int3
inc
sub
add
xor
add
fucomip
mov
movsb
xchg
fidivs
xor
adc
fbld
loop
clc
adc
cmp
fcoml
pop
repnz
fs
test
fsub
ljmp
ljmp
inc
cli
push
pop
add
inc
xchg
sbb
mov
add
mov
xor
shlb
xchg
testl
test
inc
add
jle
imul
cmp
inc
push
test
sbb
lea
mov
ljmp
jp
ror
or
nop
imul
cmp
pop
push
js
mov
ljmp
aas
inc
fisttps
outsl
push
xor
sub
jbe
adc
add
insl
sti
pushl
dec
iret
push
inc
arpl
in
insl
jae
add
and
mov
push
add
inc
mov
adc
outsb
outsl
mov
cmp
mov
int3
dec
xor
inc
cld
push
imull
mulb
call
or
popf
call
sub
nop
addr16
mov
add
fstpl
and
or
sbb
jge
imul
sbb
inc
mov
fcomip
les
loop
cmp
cli
xchg
and
mov
sar
sbb
in
lds
loopne
lahf
or
push
pop
loop
add
mov
xorb
mov
or
jge
jo
rcrb
cmc
cmp
or
mov
pop
aad
lret
mov
mov
ljmp
scas
sub
call
stc
scas
hlt
adc
lods
test
adc
push
lds
data16
adc
icebp
rolb
add
fisubrl
mov
dec
and
or
mov
faddl
xchg
mov
mov
push
jmp
push
data16
mov
or
push
in
cmc
sbb
outsl
cmc
jg
mov
adc
iret
push
clc
sbb
mov
jmp
popa
cld
and
subb
add
loop
fadds
mov
inc
adc
xchg
adc
outsl
scas
or
fnstenv
mov
add
jge
js
stos
push
aas
mov
cmp
movl
push
mov
clc
mov
lea
daa
mov
pop
mov
adc
dec
cmp
mov
xchg
and
push
jge
iret
outsl
push
cmp
lret
sub
pop
sbb
std
inc
inc
add
add
mulb
inc
cmc
mov
mov
stos
and
jge
fstps
ret
lods
bound
test
xchg
aad
xchg
dec
mov
ja
cmp
cmc
xor
mov
mov
sar
shll
jle
cmp
push
mov
jge
inc
mov
loope
fisttps
fs
roll
mov
js
ljmp
inc
movsl
cld
ret
ror
xchg
lds
xchg
icebp
in
xchg
sbbb
cwtl
stos
sub
popa
jmp
push
mov
icebp
jmp
or
js
pop
mov
mov
push
jae
adc
es
add
clc
in
push
or
jge
addb
xlat
push
rorb
and
jle
pop
loopne
cmpsb
mov
loop
loope
push
mov
movsb
pop
or
push
rcrl
xor
add
into
adc
cmpb
fmull
stos
insb
sub
pushf
rorl
adc
fisubs
adc
int
jl
fistps
push
lds
and
shlb
jg
call
rcrl
ret
xchg
or
outsl
lods
sub
or
dec
cmc
xchg
mov
insb
cld
push
add
jnp
xlat
and
mov
or
nop
ljmp
xor
adc
int3
clc
push
stos
xchg
dec
cmp
clc
push
adc
out
stos
decb
out
jne
out
inc
or
dec
stos
cmp
xor
add
cwtl
adc
std
pop
pop
ficoms
fldt
push
rorb
orl
mov
outsl
dec
cmp
in
out
stos
clc
xorb
nop
imul
push
jno
sbb
or
nop
loop
lock
pop
call
clc
xor
mov
ja
aad
je
outsl
mov
ja
pusha
fistpl
xor
adc
ja
pop
movsl
cmp
fdivs
ret
imul
mov
inc
xchg
add
sbb
add
adc
mov
lds
popa
mov
js
fs
fadds
xchg
icebp
iret
mov
loop
rcrb
orb
adcl
xor
or
lds
or
add
add
rcr
adc
push
cmp
cmc
dec
push
and
inc
fwait
inc
ficomps
sub
aas
cmp
dec
adc
sub
mov
mov
popf
in
popa
dec
push
xor
clc
xlat
test
cmp
jns
mov
ret
mov
ret
fnstsw
pop
rcl
nop
push
inc
rorb
ljmp
shl
rolb
popf
ret
dec
push
xchg
xchg
adc
imul
ret
sub
inc
test
push
lods
mov
push
or
push
adc
and
pop
repz
and
inc
add
dec
outsl
push
fstl
rclb
sbb
test
push
cld
fisttpl
scas
jle
sahf
out
sub
or
pop
ret
xor
xchg
filds
test
push
shll
cmpb
inc
orb
push
xchg
dec
test
js
sub
sub
mov
fildll
push
lea
jmp
xor
divb
dec
jmp
mov
mov
adc
cld
imul
push
aaa
xorb
sbb
push
sti
add
aaa
out
inc
movsl
push
mov
pop
adc
and
adc
inc
push
cmp
notb
bound
xchg
jns
jmp
call
pop
mov
mov
mov
fsts
xchg
or
sbb
mov
iret
in
rcrb
subb
xor
pop
xlat
fstpt
jbe
rorl
lods
xor
xchg
sub
ja
adc
insb
shrl
data16
sbb
mov
or
adc
adc
cld
sete
jb
inc
ret
dec
cld
jg
sbb
or
mov
aam
test
add
ret
or
hlt
xchg
push
lcall
adc
mov
dec
inc
add
into
aam
add
sti
push
inc
sub
sub
add
xchg
cmp
mov
call
test
fmul
add
cltd
and
test
add
pop
xchg
inc
sub
shrb
push
mov
pop
cwtl
aam
call
pop
ljmp
mov
cmp
pusha
aad
jg
in
sub
jecxz
pushf
rcl
nop
adc
inc
aad
jle
push
insb
movsl
mov
fdivl
lcall
mov
xorb
sub
scas
adc
push
pusha
dec
mov
and
rcll
mov
addl
jmp
cli
lcall
add
je
inc
jge
or
and
js
mov
sbb
inc
and
test
shrl
dec
mov
scas
sub
push
sahf
push
outsl
mov
mov
cmp
push
mov
sahf
fdivrl
loopne
mov
in
xlat
pop
jo
and
sbb
jg
decl
mov
stos
fdivrp
cmc
mov
mov
adc
xchg
cmp
fbld
lods
mov
inc
push
push
mov
adc
mov
or
pushf
inc
repnz
push
mov
arpl
jbe
lahf
adc
fdivrp
das
das
dec
insb
adc
sbb
cmp
jne
movsb
inc
out
or
outsb
cmp
sbb
sub
aam
adc
pop
xchg
mov
cmpsb
mov
jo
andl
rorl
mov
test
adcb
pop
mov
sub
fcoml
nop
lods
aaa
pop
enter
mov
push
enter
add
addr16
aaa
cld
mov
and
pop
stos
xor
or
stos
xor
push
sub
add
push
inc
mov
lcall
push
stc
rcrb
mov
lea
shlb
sahf
cmpsl
loop
add
or
and
js
pop
shlb
xchg
imulb
dec
stos
enter
and
ljmp
dec
aas
adc
lcall
sub
mov
fisubl
cmp
dec
or
and
test
push
xor
scas
fsubrs
push
iret
mov
mov
insb
jno
sub
inc
insl
add
lea
add
test
push
add
mov
cmp
xor
xchg
cmpsb
xlat
in
push
mov
in
mov
int3
sub
bound
sub
pusha
or
stos
test
enter
push
or
stc
add
loope
pop
in
test
jne
movsb
sbb
test
xor
orb
pop
call
daa
pop
adc
roll
push
mov
pop
gs
push
subb
icebp
jae
push
xor
add
or
inc
sub
lds
repnz
pop
js
add
das
mov
mov
xchg
add
addr16
lret
mov
push
xchg
jo
call
jne
add
das
in
in
jge
push
push
mov
mov
xchg
lcall
insl
lock
out
test
es
mov
add
add
scas
sbb
add
mov
push
addr16
dec
add
hlt
repnz
jno
sbbb
orb
cmc
add
das
cmp
inc
cmp
or
xchg
inc
xchg
mov
push
sbb
cmpsl
cmpb
pushf
ret
push
mov
sbb
pop
mov
jmp
lcall
inc
dec
int
ret
inc
les
pop
adc
jo
in
fnstenv
inc
lds
movsb
mov
call
mov
and
push
filds
cmpb
sti
sub
neg
outsl
add
dec
mov
inc
mov
and
pop
ljmp
add
fs
cmpl
inc
jmp
or
inc
xor
in
sahf
sub
fdivl
andl
inc
adc
xor
sbb
xor
fiaddl
add
inc
mov
pop
adc
pop
mov
loopne
xchg
sbbl
in
lcall
roll
ja
or
dec
sgdtl
sub
mov
stc
inc
out
mov
out
icebp
clc
mov
dec
aam
lahf
push
add
sub
inc
dec
mov
push
inc
sbb
mov
repnz
insl
jg
insl
call
dec
xor
data16
or
xchg
jecxz
aas
and
fisubrs
ret
xor
adc
cltd
inc
outsl
pop
push
scas
in
mov
mov
sub
push
dec
shlb
and
jb
fiaddl
adc
imul
aaa
dec
test
subl
push
dec
and
in
cmp
cli
pop
les
dec
mov
dec
and
loopne
call
push
ljmp
push
repz
xorl
shll
xor
fisubs
xor
repnz
mov
xlat
lea
sahf
cmp
push
cmc
ds
pop
imul
sti
and
sti
push
push
jge
andl
and
idivl
scas
sbb
dec
push
and
inc
or
xor
xchg
outsb
mov
adc
int3
jb
and
and
push
int3
jns
fcomi
or
cmp
ret
add
mov
and
cmp
in
aaa
add
add
rclb
hlt
hlt
and
dec
or
adc
add
rcll
adc
rcrl
in
js
inc
leave
scas
or
push
cmc
xor
subw
lds
xor
rcll
rcrb
pusha
shlb
xor
mov
push
mov
call
adc
or
xorl
add
xor
mov
ficompl
pop
sarl
xor
test
imul
in
mov
leave
push
inc
push
mov
sbb
mov
je
adc
aam
cmp
add
bound
ficoml
pushf
and
jle
cli
hlt
add
add
push
jbe
in
push
inc
jno
sbb
push
outsl
rcl
test
push
adc
pop
mov
or
pop
shlb
ja
add
cmc
adc
push
sahf
imul
std
aaa
push
shl
movsl
ljmp
pop
pop
mov
mov
mov
clc
or
mov
movsb
nop
or
or
xchg
add
int
arpl
pop
or
rorl
dec
push
xchg
mov
inc
icebp
pop
rorl
add
popf
xchg
push
repnz
jmp
out
xor
adc
pop
loop
sub
lcall
push
clc
pusha
mov
jmp
mov
mov
and
jno
xchg
movsl
repnz
pop
enter
in
push
ja
insb
cmp
cli
mov
loop
imul
std
mov
mov
cmp
mov
out
add
add
decl
test
shrb
mov
sbb
lds
cmpb
add
ret
mov
add
and
push
sub
rcrb
xchg
dec
mov
movsb
scas
fs
or
mov
inc
roll
inc
pop
pop
inc
mov
and
push
or
or
cmp
inc
test
jp
cmp
xchg
xor
rcll
ficomps
add
mov
fbstp
xchg
sub
ja
das
stc
lods
mov
je
in
or
clc
outsl
outsb
cmp
jno
push
imul
fcmovnu
daa
sub
mov
sub
ds
push
push
shll
scas
pusha
lcall
or
cli
or
inc
sub
sub
out
testl
inc
pop
and
mov
fisttpll
pop
mov
and
add
mov
subb
das
or
pop
ds
dec
es
cmp
mov
add
adc
shr
loope
push
add
imul
adc
adc
imul
inc
fcmovb
xor
in
addb
adc
pop
inc
addb
or
push
in
sub
fs
dec
orb
je
push
popf
and
sbb
jge
push
sub
fiadds
ljmp
mov
xchg
cmp
lea
cmp
int
lds
xchg
dec
inc
icebp
or
insb
xor
rcrb
sub
scas
xor
pop
call
adc
das
xor
pop
push
xor
lret
jmp
cld
aam
inc
cmp
push
sbbl
mov
xchg
push
rcl
add
loope
std
xchg
push
inc
push
stos
cli
sbb
jne
lret
sbbb
rolb
add
test
inc
sbb
cwtl
adc
dec
mov
sti
fistl
mov
hlt
xor
es
addr16
cmp
scas
fs
lret
adc
ret
cmpsb
popl
cmp
inc
sbb
add
testb
xchg
flds
pop
sub
dec
mov
cmp
push
test
test
xchg
insl
xor
dec
push
scas
push
mov
add
call
push
adc
nop
sahf
add
inc
aas
push
daa
addb
leave
aam
sub
add
mov
cmp
stos
pop
arpl
inc
jae
sarb
xor
lds
jne
jg
push
jo
testb
js
pop
push
movsb
pop
int3
mov
pusha
push
inc
cmc
xchg
or
inc
pop
add
add
imulb
xchg
stc
pusha
test
xor
cld
add
mov
inc
adc
outsb
or
orb
xchg
in
mov
jbe
mov
dec
jbe
jp
repnz
xor
add
vmwrite
leave
inc
mov
mov
call
addl
pop
in
fisubl
or
push
inc
test
lcall
or
jge
arpl
or
and
mov
ljmp
pusha
mov
dec
jge
sbb
pop
pop
mov
pop
or
add
lock
std
push
sub
ret
lahf
test
jo
or
cld
ret
js
test
and
jo
or
pusha
xchg
mov
dec
rol
outsl
insl
mov
dec
sub
pop
sub
and
mov
std
fcomps
lods
inc
xor
inc
push
push
or
mov
xchg
sbbb
clc
sti
dec
test
data16
push
mov
cwtl
xchg
cmp
xchg
cli
icebp
pop
jns
lret
push
xor
imul
dec
dec
add
pop
jae
and
inc
je
xor
out
adc
pop
inc
sbb
pop
sbb
xchg
test
push
jmp
cmp
int3
cmp
es
fs
sti
and
sub
sbb
sbb
jbe
sub
out
addb
loope
cli
pushf
mov
fistpll
cmpsl
sbb
add
or
test
xorl
jge
rorb
xchg
sub
xchg
dec
insb
pop
inc
fucomi
mov
adc
mov
call
sub
jmp
test
dec
and
cltd
lcall
inc
inc
outsb
stc
out
cltd
lcall
out
pop
imul
loopne
sub
shrl
nop
call
fmull
push
je
ficomps
movups
mov
movsb
aaa
pop
out
cmp
add
mov
lea
inc
adc
aas
mov
xchg
push
dec
xor
sub
inc
cmpsl
dec
xchg
mov
movsb
fs
stos
inc
in
xchg
jl
mov
adc
mov
fidivrl
and
or
daa
mov
adc
pcmpgtd
and
enter
mov
sbb
adc
adc
addb
cmp
push
out
push
mov
add
cmp
or
ss
lds
cli
fisubs
and
mov
mov
sub
ret
cwtl
cs
xor
or
insl
inc
push
sbb
push
sub
dec
adc
sub
mov
xchg
adc
pop
aad
pop
mov
inc
icebp
out
dec
test
arpl
cmpsb
mov
into
inc
mov
pop
dec
clc
jnp
cmp
mov
test
inc
cmpb
ret
xor
mov
jp
inc
scas
xlat
lcall
loopne
es
loopne
sbb
push
pop
enter
sar
mov
sbb
adc
lret
inc
xchg
sbb
outsl
xor
addr16
and
push
jnp
std
and
movsb
sbb
mov
mov
pop
cwtl
sub
mov
adc
sub
or
in
out
mov
cmp
shll
jg
stos
mov
cli
pop
inc
loop
sbb
xchg
test
xor
adc
fsts
mov
or
push
cld
negl
xchg
mov
xor
loop
les
in
gs
xor
fidivrs
sbb
pop
lods
cmp
scas
sahf
shl
and
and
or
orl
stos
cmp
insl
lahf
aaa
cmc
loope
mov
add
and
push
mov
dec
mov
clc
dec
leave
nop
add
cwtl
adc
inc
lock
cmp
icebp
mov
loopne
orb
dec
adc
cwtl
sarl
cmp
in
and
xor
xchg
xchg
mov
fidivrs
loope
fs
sbb
inc
hlt
and
sub
aam
mov
or
insb
push
scas
or
jmp
inc
pushf
dec
adc
mov
or
mov
mov
xchg
xor
adc
call
sub
out
call
in
stos
shrb
mov
xor
pop
inc
jns
jp
mov
jae
sahf
ds
jo
iret
sbb
mov
or
icebp
stos
ficoml
or
xchg
or
adc
and
fadd
push
mov
or
rolb
gs
or
dec
sbb
pop
cld
pusha
fdivp
scas
jp
lahf
add
inc
arpl
inc
xor
pop
xor
test
push
test
js
mov
rorl
or
fildl
in
sub
sahf
xor
fmul
inc
adc
push
popf
rcrb
push
outsb
testl
enter
jnp
cmp
jne
xor
inc
jmp
add
ret
jle
je
and
sbb
mov
sub
add
into
add
dec
cmc
mov
jo
pop
lock
jg
test
sub
cmp
push
shl
inc
mov
inc
add
cmp
push
cmp
xchg
cmpsl
or
lock
lret
and
xchg
sub
xor
mov
das
fs
lods
call
dec
cmc
dec
loop
jae
lret
andl
ret
inc
adc
inc
mov
fst
or
ss
pop
lock
pcmpeqd
aas
pop
add
in
pop
mov
orb
aam
loopne
outsb
aad
and
fwait
popf
cmp
inc
inc
dec
aam
test
sar
push
mov
mov
sbb
sbb
lea
pusha
inc
jb
hlt
ds
mov
dec
in
les
lret
out
lea
mov
fstps
pushl
and
test
xor
jg
adc
repz
scas
dec
inc
push
dec
stos
push
scas
lds
addr16
rcrb
inc
jb
add
rclb
jl
aad
mov
mov
fs
xor
jg
pushf
into
cld
aas
mov
lock
adc
icebp
aaa
cld
sub
push
xchg
in
xor
into
mov
push
dec
fbstp
mov
sbb
mov
stc
mov
push
adc
pinsrw
adc
xlat
pop
aaa
arpl
fldt
pop
cli
outsl
lods
imul
and
push
jmp
xchg
adc
mov
jecxz
out
fcompl
outsl
decl
push
and
xor
add
and
rcrb
and
out
mov
lds
xor
sbb
nop
out
mov
cld
adc
cmc
es
inc
mov
push
daa
jl
or
xchg
stos
mov
xchg
repnz
ds
outsb
xchg
mov
jne
dec
cmp
push
int3
cltd
add
repnz
push
cmpsl
xor
mov
test
incl
outsl
fsubl
xchg
imul
xor
pavgw
sub
stos
xor
fimull
push
lahf
subb
sbb
rclb
test
iret
mov
xor
pop
mov
jne
cmp
roll
push
shr
not
insb
negb
inc
rorb
and
inc
jge
push
dec
add
testl
addb
or
hlt
xchg
sbb
xor
pop
in
add
adcb
dec
xor
pusha
sbb
imul
cmpl
mov
outsl
in
rclb
and
push
std
fbstp
mov
pop
xchg
add
mull
add
sbb
incb
nop
int3
lret
cli
mov
pop
and
add
add
jmp
mov
cmpb
aam
pop
rcll
dec
xchg
inc
mov
mov
jge
cmp
and
push
lcall
cld
sarl
mul
mov
adc
int
or
add
imul
add
sbb
dec
or
repnz
xlat
mulb
les
enter
loop
sub
jne
sub
ret
inc
fnstsw
loop
dec
aad
cmp
ds
repz
mov
arpl
xor
pop
xor
cmc
rol
and
add
in
inc
rol
aaa
dec
in
subl
jnp
mov
dec
sbbb
inc
jnp
mov
mov
mov
and
add
jo
lock
adc
out
and
ljmp
fmuls
and
cltd
shrl
and
and
fisubs
and
es
adc
out
or
push
adc
pop
fiadds
push
fcomp
jmp
adcl
orb
inc
les
inc
loope
outsl
out
lret
pop
cmc
xchg
shlb
xor
pusha
add
ret
stos
incb
lods
cmp
fstpl
xlat
test
cmp
sysretw
add
sbb
and
cmp
mov
sbb
xor
mov
and
addr16
pop
xor
push
ljmp
jnp
jo
pop
adc
sub
jne
aam
das
or
push
outsb
adc
push
loopne
xchg
xor
jne
dec
xor
rcll
pushf
sub
add
insb
je
dec
push
push
movsl
js
adc
or
pop
mov
or
call
mov
imul
addr16
lahf
add
xor
outsl
loop
mov
lods
xor
sbbb
pop
les
int
cmp
aaa
add
mov
jb
lret
mov
cmp
add
aaa
rclb
jb
mov
ds
in
icebp
dec
int
loope
push
mov
clc
repz
jle
adc
pop
sbb
mov
cmp
adc
adc
add
in
push
push
cltd
cmp
push
jmp
and
insl
sub
jae
xor
xchg
imul
sti
js
cmp
outsl
jge
add
lods
test
aas
inc
or
insb
inc
xchg
ljmp
testl
add
stos
sub
sti
xchg
push
xchg
or
lret
jmp
sbbl
pop
push
out
push
outsl
shr
mov
aad
dec
subb
aad
inc
fwait
push
clc
fwait
mov
stos
leave
fucomip
pop
scas
mov
mov
nop
sar
push
xchg
xchg
push
icebp
cld
pop
jne
iret
fcompl
add
adc
sbb
in
in
test
push
sub
movsb
cmp
push
andl
or
jp
jno
adc
or
mov
jae
cs
or
loop
fiaddl
cmpsb
dec
hlt
fldcw
cld
fwait
sub
fs
mov
dec
les
aad
das
cld
push
les
dec
push
in
xor
das
push
mov
sbb
stos
mov
mov
cld
cmp
xor
jg
repz
call
mov
hlt
mov
repnz
scas
xor
cli
mov
or
jbe
outsb
ret
mov
je
add
push
mov
push
ja
cmp
cmp
sahf
inc
pop
rcll
enter
rorl
jb
or
outsl
scas
sbb
sti
jo
test
jne
lock
repnz
bound
or
xor
iret
mov
jg
jecxz
mov
shrl
dec
xchg
dec
jne
push
cld
jo
push
xor
lret
out
bound
outsl
and
out
jno
and
mov
lds
push
mov
mov
jo
inc
pop
call
push
aad
mov
adc
fistps
jge
in
xchg
scas
insb
xchg
faddl
shrl
lahf
ljmp
sbb
lcall
mov
inc
in
mov
push
or
les
in
xor
sbb
andb
jp
mov
push
sarb
clc
das
push
fwait
mov
sub
std
jp
jo
xlat
xchg
addr16
rorb
fsts
inc
int3
xchg
inc
lahf
rcll
mov
inc
ja
out
inc
int3
sbb
sbb
pushw
pop
adc
subl
cltd
mov
rcl
sbb
inc
in
adc
mov
push
arpl
mov
add
loop
xlat
lock
mov
adc
int3
data16
sahf
rcrb
push
cmp
mov
and
push
push
out
rolb
cmp
repz
add
testb
fisubrs
test
xor
and
push
adc
shl
push
and
test
adc
in
cmpsb
dec
inc
push
insb
xor
adc
xchg
mov
dec
aad
fcoms
popf
sahf
aad
xor
cltd
movsl
js
popf
push
outsb
in
sbb
inc
loop
sub
pop
ficoms
rolb
mov
cvtps2pi
in
mov
inc
or
xor
sbb
push
mov
insl
in
sbb
enter
push
cltd
outsl
or
hlt
cwtl
mov
loopne
push
out
mov
fldt
xchg
xchg
or
xor
dec
sbb
push
cmpsl
test
mov
or
das
or
pop
mov
add
mov
das
loope
adc
bound
je
scas
mov
nop
sub
add
push
cmp
cmp
cld
fsubrp
fmull
hlt
cld
stos
mov
lcall
in
adc
jecxz
mov
xor
aad
dec
push
jecxz
cmp
pop
dec
sub
cmp
nop
movsb
mov
sub
imul
sbb
xorl
xchg
mov
sub
rcl
and
push
xchg
push
mov
sub
fs
mov
inc
fwait
dec
mov
das
nop
and
mov
mov
sbb
push
gs
call
das
add
orl
jbe
xchg
cmpsl
in
pop
xor
ret
mov
and
inc
in
outsb
cmp
push
pop
mov
clc
or
push
rcrb
dec
scas
or
xor
mov
popa
mov
imul
and
fiadds
dec
mov
dec
push
xchg
or
fwait
push
shl
pop
mov
xchg
and
ret
icebp
push
decb
dec
enter
push
xor
sub
shll
ljmp
je
cmp
arpl
pop
out
dec
pop
inc
and
mov
or
adc
add
mov
adc
dec
je
pop
cld
xchg
or
bound
loopne
rcll
add
addr16
mov
cli
xchg
stc
pop
filds
xor
add
dec
psrlw
and
out
add
ret
adcl
push
jo
pop
js
adc
aad
popa
xor
inc
orb
xor
pop
fmull
mov
popa
inc
ja
dec
je
or
or
and
add
roll
pop
and
mov
sub
xchg
aam
cmc
out
xor
pusha
mov
divl
adc
aam
insb
dec
cmp
xchg
sbb
js
imul
loop
aad
mov
inc
incb
sbb
adc
movsb
gs
lret
aad
or
push
inc
adc
push
das
jno
sarl
jnp
addr16
and
xchg
cltd
add
in
imul
push
jle
and
inc
int3
cld
sbb
or
or
sbb
test
push
cli
add
sbb
jmp
mov
fdivrp
fstpt
cltd
mov
fimuls
sbb
in
cmpsb
dec
xorb
sbb
aam
jp
mov
push
fs
in
fbstp
int3
and
fiadds
xchg
shrl
lock
cmp
jg
push
xor
test
aam
pusha
negb
adc
dec
fsubl
shrb
loope
mov
icebp
push
es
scas
mov
aad
jne
sub
mov
dec
mov
cmpsb
jbe
subl
lock
stos
mov
jns
xchg
mov
add
or
mov
xor
sbb
mov
sahf
adc
inc
fbstp
adcl
lods
call
pop
jo
mov
aad
inc
lea
mov
pop
insb
das
mov
cld
ds
sbb
xor
in
sahf
ret
jno
inc
fldt
incl
ficoms
adc
add
mov
adc
orl
scas
inc
cli
pop
or
in
cmp
stc
mov
rcrb
jmp
xor
sub
push
push
mov
rcrb
mov
cmp
test
xchg
cmp
inc
adc
adc
loopne
xchg
xorl
test
lds
xor
rcrl
cld
insb
popa
das
mov
jne
roll
mov
sub
rcrb
mov
add
xor
outsb
xor
adcl
cli
inc
lcall
lods
clc
scas
xchg
dec
xchg
test
imulb
sub
push
clc
cmpsb
ret
xlat
or
fdivrl
mov
sbb
out
mov
in
dec
adc
mov
into
dec
dec
roll
pop
fsubs
sti
fs
push
fists
jo
or
inc
mov
or
rolb
call
repnz
cmpsl
xor
and
add
lret
in
rorb
cmp
data16
push
ss
out
dec
sub
mov
clc
mov
mov
sbb
clc
mov
sbb
mov
lahf
cmp
or
or
lea
mov
sub
jb
shlb
jo
fimuls
rorb
dec
push
jb
imul
sbb
mov
dec
mov
inc
or
js
dec
lea
fcomip
lods
xor
in
push
mov
mov
pop
mov
fbstp
jge
and
pop
push
jg
shlb
dec
loopne
add
je
xchg
and
pop
shll
dec
xorb
jbe
shlb
ret
sbbb
and
and
outsl
scas
in
lods
daa
dec
data16
xor
push
or
clc
xor
push
mov
pshufw
push
jbe
jge
inc
mov
add
out
push
adc
cld
and
in
sbb
repnz
push
mov
addb
mov
cld
or
sub
popa
cmp
icebp
cmp
push
or
js
loope
or
cmp
push
and
sbb
sbb
xor
sbbb
xchg
cmp
adc
testb
cli
mov
adc
push
sbb
xchg
int3
orb
fucomip
push
dec
ja
les
pop
cmp
sbb
and
push
adc
and
xlat
inc
cld
outsb
ret
call
test
addl
cld
loope
pop
sar
inc
stc
test
xor
adcb
pop
iret
jno
rcll
sbb
adc
sarl
test
xchg
adc
lahf
add
or
inc
xchg
sarl
daa
inc
inc
mov
sub
push
xchg
pop
dec
adc
inc
and
sub
push
jmpw
clc
xchg
ret
sub
adc
adc
adc
mov
scas
fadd
in
or
inc
cmpsl
adc
dec
and
inc
adc
fdivrs
stc
sub
lock
and
or
add
mov
call
adc
pop
jo
shlb
sbb
aad
pop
aaa
je,pn
cmpsb
call
adc
outsl
movl
or
int
into
loopne
jne
adc
cmp
subl
call
sub
dec
sub
sub
jecxz
lods
mov
sbb
fs
sub
test
pop
sarl
rorb
push
sbb
and
mov
mov
call
and
ljmp
sub
and
inc
popf
fwait
lea
push
pop
incl
and
les
lock
add
int
test
xor
mov
cmpsl
sbb
and
xchg
mov
adc
mov
cmp
xchg
popa
dec
jecxz
insb
cld
stos
ljmp
jbe
rcrl
or
xor
int3
pop
dec
rcrb
in
mov
cmp
pushw
lds
lcallw
adc
es
sar
cmp
je
xlat
add
js
int
pop
stos
clc
xor
mov
mov
or
test
cltd
pop
xchg
fadds
push
js
adc
push
test
xchg
mov
push
subb
jnp
ret
mov
aam
add
loop
aam
aam
test
dec
push
xlat
push
shlb
xchg
xchg
shll
out
or
je
add
mov
inc
cltd
mov
popa
push
hlt
cmpsl
mov
sbb
call
shlb
addl
push
dec
add
mov
or
push
sbb
ljmp
jae
or
pushf
or
cwtl
rcll
imul
js
jne
jp
sahf
hlt
add
sahf
mov
dec
nop
hlt
push
inc
or
aaa
inc
lds
int3
js
and
mov
sbb
and
pop
cmp
xor
ret
sub
int3
push
pop
sbb
loopne
dec
ret
pusha
mov
add
push
lods
inc
xchg
cmp
adc
add
push
mov
rclb
cltd
cmp
fsubrs
xchg
mov
scas
mov
jp
loopne
or
or
add
ret
fimuls
ret
or
lds
adc
inc
sarl
adc
mov
and
daa
aad
hlt
mov
xchg
sub
fcmovnb
ficoml
add
add
adc
ficompl
daa
rorb
lahf
cltd
mov
out
int
fdivr
add
cmp
addl
cmp
dec
sub
scas
fisubrl
dec
call
lods
in
mov
push
stos
fcompl
push
adc
sbb
in
and
or
push
mov
xchg
sbb
into
inc
into
jl
cmp
loope
cmp
fldenv
inc
bound
popf
jns
cld
push
fsubs
mov
sbbb
add
jbe
stos
xor
pop
stos
add
mov
or
adc
mov
lea
xor
rcl
mov
push
push
or
add
adc
shlb
stos
lock
addr16
and
aas
xor
mov
inc
lods
adcl
in
jno
or
xchg
bound
cmp
and
or
xorb
inc
dec
cs
xor
push
nop
shrb
add
testl
int
aas
cs
dec
xchg
inc
sub
std
sbb
or
loop
scas
arpl
and
jnp
mov
push
loope
mov
add
adc
das
sahf
mov
insb
xor
sub
jo
pop
push
mull
popl
cs
adc
push
je
add
mov
xchg
add
sbb
loop
add
mov
shrl
dec
inc
cld
adc
mov
sub
test
repnz
push
es
hlt
in
sub
punpcklbw
out
fs
call
scas
and
daa
mov
mov
lds
mov
cmpsl
jo
subl
lret
xor
inc
jb
inc
popf
ret
into
or
add
mov
clc
ret
jmp
fimull
xlat
cmpsb
mov
xchg
adc
jae
mov
lds
or
ret
stos
jmp
or
sbbl
xor
pop
xor
or
mov
fwait
js
sub
adcl
pop
jne
dec
rolb
subb
bound
pop
adc
test
hlt
dec
fsubs
jle
cmpb
jne
dec
clc
xor
ljmp
loopne
mov
mov
jmp
out
adc
jmp
mov
add
push
loope
dec
ret
pop
cmp
mov
lea
incl
push
scas
aas
lret
repnz
loope
das
repz
pop
lea
loopne
incl
sbb
lret
mov
ret
adc
out
fwait
push
inc
into
loope
jns
negl
jns
pusha
jl
std
ljmp
cmp
pop
pop
daa
xor
mov
adc
out
mov
and
push
movsl
inc
add
in
pop
jg
lcall
xchg
hlt
aam
xor
lods
or
cwtl
or
add
leave
movsl
call
stc
inc
insb
arpl
dec
aaa
inc
cmc
lds
ss
mov
pushl
popa
add
cmpsb
sub
in
fisttps
add
cli
mov
dec
push
pop
std
push
popa
aam
sbb
xchg
stos
xchg
or
adc
out
sub
in
inc
std
ljmp
add
jb
lret
sbb
push
sub
dec
push
pop
jg
cmc
mov
xchg
jb
jmp
cmp
call
ficomps
add
inc
shrb
mov
xor
jge
bound
in
das
mov
add
push
and
jmp
popa
mov
std
inc
xor
insb
mov
xor
mov
sub
ret
aam
test
les
xor
xchg
ss
sub
xchg
idivb
cmp
mov
or
lea
fdivrs
sti
cmp
cmp
jecxz
jmp
add
imul
add
cltd
rorb
cs
lock
in
aam
test
push
xchg
lods
stc
mulb
negb
fcmovne
gs
jns
insb
cwtl
or
cmp
sbbb
aad
ret
push
mov
sbb
mov
leave
mull
dec
mov
add
lods
push
dec
inc
daa
pop
in
or
pop
adc
andl
test
cmp
inc
dec
or
cmpsl
mov
idiv
add
adc
jp
cmpsb
xor
aaa
mov
scas
mov
dec
into
mov
icebp
cmp
outsb
in
and
sbb
sbb
pushf
int3
repnz
das
scas
out
and
leave
aaa
adc
je
sti
adc
push
sbb
dec
sub
push
mov
pop
inc
out
cs
adc
mov
cmp
push
fidivs
xlat
dec
cmpsb
dec
andb
shrl
je
into
or
sbb
rolb
cmpsl
push
pop
in
adc
and
mov
or
adc
sahf
lods
push
test
insb
mov
inc
test
cmp
and
test
adc
jne
lahf
movsl
leave
loopne
cwtl
addl
adc
add
popf
add
inc
pusha
andb
enter
add
scas
jnp
stos
pop
or
xchg
rcll
loopne
testl
out
pusha
pop
sbb
push
stos
fnstsw
push
mov
hlt
jecxz
arpl
enter
lock
jno
inc
fwait
enter
inc
sbb
test
paddd
mov
sahf
cmc
lds
inc
adc
add
out
mov
inc
push
jge
add
ret
pop
cltd
mov
ljmp
popf
stos
inc
mov
sub
add
pop
jns
ljmp
cmp
cltd
sub
pusha
add
jne
inc
and
push
icebp
add
dec
mov
sub
ljmp
adc
push
sbb
cwtl
and
fidivrl
popf
and
cltd
sub
adc
sbb
jl
push
insb
inc
mov
pusha
jnp
fisubrs
xchg
andl
rol
add
test
hlt
lods
mov
arpl
and
fdivs
ret
pop
call
add
push
dec
in
jecxz
xor
or
ret
and
sub
mov
add
sbb
jb
cmp
cmp
mov
inc
xchg
fcomps
fdivrs
pop
and
pusha
sbb
add
in
push
nop
in
ss
fmuls
ja
insl
mov
or
sub
jp
insl
outsl
sub
adc
and
icebp
aas
mov
fs
icebp
pop
sarw
cmpb
xor
xchg
sbb
loop
or
fcoml
adc
lret
mov
jg
or
mov
add
xchg
xchg
push
jmp
jmp
adc
cmp
mov
xchg
stos
addb
jmp
adc
add
bound
loopne
arpl
addl
add
push
outsl
outsl
jo
mov
imul
aas
or
rol
mov
mov
and
add
stos
stos
and
popf
xchg
or
mov
sub
mov
lcall
shrb
push
pop
cmp
adc
pop
inc
clc
xorb
fs
inc
mov
fwait
sbb
inc
in
rclb
push
sbb
mov
mov
ds
add
push
jge
cwtl
lds
xor
loop
iret
push
add
mov
jmp
addr16
pop
adc
mov
lret
mov
adc
push
push
test
dec
aam
stc
jae
sbb
shlb
mov
in
adc
push
shrb
adc
dec
lahf
out
mov
in
dec
mov
jmp
rdtsc
rolb
shrb
push
xor
and
pop
fwait
mov
test
or
inc
ljmp
add
inc
outsb
inc
cmpsb
ja
push
andb
push
incl
jmp
int3
mov
cmp
adc
mov
and
adc
lods
data16
mov
hlt
sub
inc
cmp
pop
dec
sub
push
xchg
pusha
incl
ljmp
adc
pop
inc
sarb
or
xchg
sbb
push
inc
mov
ljmp
testl
hlt
push
daa
je
pushf
mov
cmp
fisttps
sub
fnstcw
sub
cmc
mov
cmp
xor
or
pop
dec
clc
sub
xchg
hlt
add
jo
add
push
mov
cltd
test
jg
nop
popf
stos
int3
xchg
and
pop
lods
mov
jmp
pop
pusha
lcall
mov
add
in
inc
inc
dec
inc
pushf
or
mov
mov
xchg
or
jmp
stos
out
paddsw
adc
and
mov
pop
fistl
dec
jo
xchg
pop
iret
lret
daa
fstpl
rcrb
ret
sahf
adc
push
movsb
push
mov
lds
inc
nop
nop
mov
push
adc
shrl
mov
and
stos
mov
je
int3
rcl
scas
lret
pop
shll
jge
push
push
hlt
dec
mov
or
sarb
iret
mov
popaw
sub
int
add
orb
pop
lock
jnp
insb
cmpsb
or
int
aaa
add
xchg
sbb
test
mov
adc
adc
and
fmuls
jbe
decl
xor
pop
jle
push
pop
bound
and
fidivrl
decl
addb
subl
pop
mov
push
pop
sbb
pop
xor
cwtl
adc
ja
imul
repnz
leave
add
in
pop
jmp
faddl
jl
mov
test
or
ret
push
cmpb
cmpsb
pop
pop
int3
popf
xchg
mov
mov
sbb
adc
xchg
inc
negb
sub
mov
jne
inc
fs
or
fldenv
fcoms
adc
inc
sbb
leave
stos
movhps
jmp
mov
jmp
shlb
add
pop
and
cmp
leave
mov
out
inc
imul
addb
std
mov
add
cmpsb
and
loop
sbb
ffree
inc
add
xchg
iret
mov
imul
loopne
xchg
lea
pop
ffree
xor
pop
mov
pushl
pushf
add
rolb
xchg
cwtl
in
outsl
mov
push
sub
jmp
fldcw
mov
xchg
js
or
add
pusha
lcall
clc
ror
mov
addl
cmp
xor
stos
pop
cmp
pop
add
jb
pop
cmpsl
dec
cmp
adc
inc
push
xchg
js
cmc
repz
aas
add
bound
inc
stos
or
mov
push
imul
or
xchg
cmc
pushl
pop
xor
and
xchg
in
or
aaa
push
xor
subb
jmp
test
fstp
sub
jbe
call
mov
notl
adc
loope
fsts
stc
loop
or
jp
in
mov
flds
xor
lcall
ds
inc
jae
add
mov
xor
clc
fldl
into
dec
jo
rol
das
push
jno
dec
and
dec
xchg
or
ja
lea
cld
jb
cmp
mov
sub
fidivs
cmp
scas
aam
cld
outsl
dec
xorb
sub
test
add
aaa
xlat
movsb
inc
adc
jno
inc
pop
aam
enter
or
add
cmp
incl
cmp
jne
adc
out
lea
push
out
xchg
pop
scas
clc
push
sub
mov
aas
cmp
inc
lock
push
adc
cli
push
cmpsl
sbb
xchg
add
enter
dec
inc
sub
cli
es
es
outsb
subb
jbe
push
sbb
sbb
jg
add
or
shr
ds
adc
int
nop
lods
lcall
decb
pop
sti
dec
xor
jmp
aad
pop
pushl
mov
stos
add
addl
call
add
xchg
jae
adc
lret
sbb
push
sbbl
aam
cli
xchg
mov
enter
les
std
cmc
in
fcoms
cld
sbb
andl
jmp
shll
inc
adc
inc
loopne
inc
xor
test
shr
jns
jno
push
sub
fcmovb
out
add
jge
fidivrs
fistps
xchg
les
jg
jp
mov
xchg
or
out
es
test
mov
je
xchg
rcll
popl
pop
scas
std
test
and
mov
jnp
lcall
out
mov
inc
stc
mov
adc
loope
sbb
and
pop
or
pop
add
movsl
jmp
je
fists
daa
fldl2e
and
mov
cmpsb
mov
sbb
stos
fsubs
repnz
pop
push
jae
test
mov
add
adc
lock
mov
pop
in
incb
inc
shrb
fcoml
sub
loop
xor
dec
rolb
cld
cmp
in
les
push
xchg
dec
or
inc
xor
and
and
dec
push
andb
add
cmp
icebp
lea
jmp
rolb
jecxz
ljmp
js
adc
test
divb
sub
add
out
or
cltd
dec
adc
sub
hlt
or
dec
jecxz
fstl
or
add
sub
inc
or
in
pop
sbbb
sub
test
ja
test
dec
add
sbb
add
test
and
adc
aad
pop
cmp
push
sbb
mov
mov
push
mov
xchg
leave
orl
je
rorl
mov
push
je
mov
inc
cli
mov
pop
add
jns
mov
out
mov
add
inc
test
push
cmp
test
mov
mov
adc
push
fisttpll
faddl
rep
sbb
sbb
push
inc
test
fadd
xor
xchg
orb
mov
cld
inc
or
imul
fdivrs
dec
sbb
add
or
xor
insb
fcoms
aas
fistps
addb
add
nop
and
jmp
mov
lret
push
and
push
pop
testb
fsubrp
adc
adc
sbb
push
dec
fcmovb
mov
fdivrl
mov
sbb
sahf
lock
dec
jb
jge
add
mov
mov
fiaddl
push
orb
xchg
xchg
xor
es
sbb
and
adcb
jne
les
push
add
push
sbb
dec
rcrb
addr16
and
push
out
adc
pop
les
ret
push
xor
fdivrs
sub
dec
js
mov
pushf
and
adc
into
inc
in
fucomi
add
adc
sub
or
clc
loop
adc
xor
add
or
fstpl
adc
jmp
xchg
stos
cs
scas
jo
aad
and
sub
and
fwait
adc
cmc
ret
mov
add
or
mov
xchg
iret
add
add
xor
mov
pop
in
jecxz
repz
and
cmp
cmc
mov
add
adc
sub
xor
mov
dec
sub
aam
add
in
dec
inc
in
bound
mov
aad
dec
testb
xchg
js
xchg
mov
mov
les
out
outsl
adc
sbb
leave
shlb
lcall
les
sub
mov
cli
dec
cmp
out
sbb
mov
sub
push
cmpsb
stos
xor
add
mov
mov
inc
xchg
rcr
shlb
rolb
addl
imul
and
dec
rclb
cmpsl
scas
stc
and
sti
and
push
rcrb
mov
mov
pop
rolb
jecxz
xor
and
hlt
and
orb
dec
or
pop
sub
xchg
dec
push
fcmovnb
insb
or
out
xor
int3
pop
adc
lods
rorl
dec
and
push
adc
adc
mov
push
mov
or
mov
adc
fdivrs
les
subb
int3
pop
adc
xor
cwtl
jl
adc
rorl
call
mov
call
pop
repz
push
dec
inc
pushf
mov
test
imul
hlt
inc
mov
dec
ljmp
in
jecxz
xor
sub
jo
cwtl
out
in
test
leave
mov
push
xchg
fisubs
and
lods
loope
fxch
xor
and
or
mov
push
xor
xchg
les
add
aam
cmp
mov
lock
js
add
inc
xor
inc
adc
stos
or
dec
xchg
dec
mov
mov
pop
js
cmp
dec
test
jnp
daa
test
fildll
loopne
data16
mov
or
mov
dec
sbb
test
push
out
push
xor
and
dec
mov
das
xchg
mov
mov
ljmp
cs
notb
mov
out
cwtl
lret
xor
pop
xchg
adcb
push
les
and
xchg
incl
idiv
sub
dec
push
fcomp
or
pop
adc
mov
stos
lret
adc
lods
or
js
scas
sbb
dec
sbb
pop
add
divl
adc
cltd
lret
inc
out
adc
jnp
cld
sub
mov
rolb
adc
mov
lret
or
or
and
add
add
addb
es
adc
test
adc
lcall
rcrl
les
add
push
push
ret
adc
daa
cld
xor
mov
scas
stos
cmpsl
push
mov
fs
add
subb
mov
flds
pop
daa
es
ret
cmp
or
scas
js
sub
movsb
or
add
inc
mov
adc
je
ds
dec
insl
cld
dec
int
xchg
push
add
xchg
and
pop
fmull
call
lods
jnp
sbb
mov
mov
add
bound
fwait
sub
out
mov
push
mov
popf
add
push
je
shl
test
push
add
sub
xor
fwait
ds
jmp
nop
movsb
fdivrl
cmpb
and
sub
ret
stos
mov
jecxz
jnp
aaa
or
push
rorl
xchg
mov
or
add
outsl
xchg
adc
movl
pop
andb
loopne
test
push
xor
imul
adc
cmp
mov
xchg
shrb
push
rclb
orb
or
loopne
add
daa
xor
sub
fistps
das
loop
loopne
xor
aad
or
mov
jo
xchg
adc
jecxz
sbb
dec
movl
stc
dec
adc
adc
xor
cmp
push
fmuls
mov
pop
lock
mov
adc
or
sbb
sub
or
aas
mov
mov
imul
jl
scas
push
int3
dec
or
add
dec
adc
jne
adc
rolb
out
cld
add
jp
cmp
mov
inc
add
or
popa
cmp
stos
push
ss
jne
aaa
pop
push
call
sbb
stc
add
push
ret
and
mov
addr16
sub
pushf
sbb
shll
pop
sub
or
mov
ja
dec
sub
in
mov
sbb
mov
fdivl
cmp
jl
jno
leave
jp
push
hlt
call
and
and
aam
add
mov
hlt
sub
and
daa
dec
cmp
mov
faddl
mov
lea
jl
repnz
push
sbb
mov
push
out
jnp
nop
incl
sbb
sbb
mov
xor
push
mov
ljmp
insb
mov
in
add
mov
add
xchg
test
push
inc
add
insl
jmp
sbb
add
lcall
mov
test
sbb
jbe
cmp
aaa
pop
mov
pop
dec
nop
sbbb
jecxz
adc
aad
js
mov
imul
data16
lahf
pop
cmp
inc
adc
aaa
sub
aaa
mov
mov
test
and
subb
jmp
ja
pop
push
mov
imul
mov
cmp
push
out
and
orl
xchg
rcrl
mov
sub
jo
pushf
loop
mov
add
add
cmpb
mov
xchg
pop
push
mov
xchg
loope
stos
and
adc
mov
and
add
sub
sahf
sbbb
rorb
cmpsb
setle
into
pop
cmp
enter
nop
arpl
add
test
or
or
jle
sbb
das
push
lea
dec
jp
push
sbb
push
adc
and
or
addr16
sbb
cmp
or
aas
cld
rclb
xchg
cmpsb
lea
and
in
subb
push
dec
lret
popa
sbb
cmpsl
sbb
jp
xorl
es
or
cmp
outsl
mov
cmp
and
mov
icebp
popf
xor
dec
mul
jl
dec
adc
xlat
mov
inc
sub
pop
adc
or
leave
test
subl
sbb
jle
or
pop
arpl
fists
and
cmp
adc
adc
shrl
pushf
xchg
shrl
sar
or
nop
cmpl
pop
ss
dec
enter
test
sbbb
push
hlt
out
cmpl
mov
adc
in
or
loopne
adc
and
mov
fs
mov
add
and
mov
or
jno
sub
mov
inc
push
push
mov
shlb
add
push
clc
loopne
push
sbb
jg
mov
enter
mov
bound
aam
std
xchg
ljmp
sbb
jg
and
faddp
test
xchg
leave
add
mov
xchg
mov
and
push
sub
fucomp
popa
aam
daa
mov
jo
pop
ja
int3
mov
stos
fistps
cmc
mov
pop
xchg
lret
inc
aad
insb
daa
inc
subl
inc
out
inc
xchg
leave
mov
dec
in
add
je
pop
mov
pop
call
orb
jl
add
cmp
subl
stos
lea
stos
mov
push
test
mov
jp
jmp
out
or
sahf
xor
bound
popa
jle
mov
dec
cmp
or
ljmp
std
inc
jp
push
lret
xor
jmp
cmp
pushf
mov
sbb
insl
and
sbb
push
jnp
imul
sbb
jbe
mov
arpl
into
arpl
lock
or
icebp
or
daa
pop
clc
jnp
sub
mov
or
mov
cmp
adc
lods
sub
in
incb
sets
enter
adc
sbb
nop
nop
mov
les
cli
js
fistps
xor
mov
dec
or
xor
fbld
fsubl
add
pop
xchg
fcom
dec
add
mov
cwtl
jno
push
mov
lahf
add
popl
jae
xor
pop
mov
lds
xchg
sbb
add
aaa
push
cmp
fcomps
pushf
or
stos
push
stc
aam
ljmp
pop
jnp
jp
xchg
insl
inc
push
mov
add
stos
push
andb
cmp
add
lock
cmc
add
mov
inc
inc
sub
or
cmp
movsl
jb
sub
cs
push
popa
mov
push
sub
outsl
cmp
decb
mov
lods
testl
xchg
push
repnz
inc
call
stc
xor
shrb
loop
add
sub
aad
pop
mov
cli
inc
loop
push
or
cltd
or
mov
dec
aam
pop
xor
rorl
popa
ljmp
loopne
pusha
inc
add
cld
dec
data16
cld
scas
pop
pop
daa
pop
jns
dec
push
dec
adcb
cmp
mov
je
out
psubb
jg
pop
cmp
jle
and
and
mov
jge
bound
xchg
orb
add
pop
faddl
sarl
stc
push
sub
fsubs
xor
std
sbb
xchg
xchg
in
fwait
call
add
out
loop
aad
dec
icebp
es
or
loopne
mov
and
mov
mov
shrl
bound
clc
mov
and
mov
cld
in
scas
std
call
inc
add
mov
push
fisubl
repnz
bound
das
fsubl
out
or
xor
dec
or
sbb
sti
mov
lret
push
dec
mov
adc
cs
cmpsb
lods
adc
lock
add
shll
scas
ds
mov
jecxz
test
jecxz
adc
cmp
inc
dec
loop
mov
les
adc
gs
ret
pop
mov
pusha
xor
push
sbb
js
js
xchg
shlb
push
cld
test
jg
ljmp
ret
xchg
pop
mov
sub
pushl
nop
push
push
cmp
lods
out
cwtl
mov
lock
aaa
ficoml
repnz
xchg
push
scas
mov
inc
pop
sbbb
sbb
xchg
adc
scas
mov
ret
pop
xchg
mov
cmpsb
in
mov
sub
xor
in
fisttps
aas
ret
push
sahf
adc
jp
xchg
jl
pop
or
or
jnp
gs
icebp
or
arpl
mov
jnp
jecxz
pop
ljmp
adc
subl
das
inc
adc
lcall
mov
push
bound
rorb
dec
neg
faddp
lods
stc
test
js
push
pop
movsb
subl
call
xchg
add
push
repnz
and
or
lock
jmp
xchg
call
sti
lea
loope
cwtl
push
jne,pt
adc
jnp
adc
shr
cmp
test
outsl
pusha
and
and
pop
jne
int
ljmp
add
add
ds
mov
daa
mov
push
stos
xor
out
inc
aas
cmp
jle
xor
or
xchg
mov
xor
aad
incl
cmp
cmc
mov
adc
aas
addb
xor
or
xorb
std
push
jbe
pushf
lods
and
adc
shr
mov
add
enter
sub
cmp
adc
xchg
mov
mov
jp
dec
mov
add
aas
hlt
addr16
movsl
sbb
add
inc
imul
mov
sub
mov
jns
mov
mov
add
loopne
adc
sub
ja
mov
sbb
and
sbb
add
fdivrl
sbb
xor
jmp
cmpl
aad
jne
sub
pop
ficompl
xor
lods
shlb
dec
push
test
jp
cmovp
movswl
mov
push
and
sub
push
sub
pop
rcl
push
test
pop
sub
and
mov
and
or
xchg
cmp
sbb
jl
stos
xchg
or
inc
adc
and
jecxz
icebp
aaa
clc
aaa
pop
inc
aas
aas
rcr
fisubl
inc
sti
mov
lock
das
adc
push
jl
pusha
outsb
mov
fldl
mov
mov
jns
ljmp
sbb
cli
push
cs
sbb
ja
pop
pop
sahf
ffreep
fbld
xor
lea
nop
cltd
out
repnz
or
popf
sbb
pop
je
jbe
outsl
incl
subb
hlt
pushf
lock
mov
sahf
xchg
jg
arpl
add
add
inc
idivb
mov
add
cmp
push
int
sbb
divb
in
call
mov
faddl
es
out
je
mov
outsl
dec
xchg
sub
dec
les
into
lret
dec
hlt
arpl
arpl
sbb
scas
jno
sub
sbb
pop
dec
and
fs
and
sub
jg
dec
or
pop
jns
jb
pop
push
xchg
jg
sbb
std
in
mov
sbbb
aam
cli
push
popf
shlb
xchg
imul
add
test
les
leave
mov
aam
push
notl
or
std
dec
inc
cmp
mov
xchg
mov
push
or
hlt
fs
sbb
fnstsw
inc
push
push
ja
pop
les
pop
insl
out
outsl
ljmp
or
jns
pop
cld
sub
je
andb
jg
out
xchg
dec
fstpt
xor
mov
shll
dec
mov
scas
push
adc
cmpsb
xchg
mov
xchg
orb
jle
pop
inc
mov
xchg
mov
mov
call
ja
call
cmp
mov
mov
add
sub
mov
pop
sub
and
sub
inc
pop
lret
sbb
mov
loopne
adc
sbb
mov
and
decb
jns
jg
mov
and
out
sbb
dec
pop
jne
out
lods
xchg
jo
in
lods
pop
fbstp
fimull
adc
cmpsl
enter
lods
movsl
jbe
and
xchg
pop
xchg
pop
dec
sti
addl
call
sbb
push
cwtl
fmull
imul
add
jg
xor
stos
inc
fdivl
adc
cmp
or
pop
mov
adc
pminub
xor
pop
add
test
ror
pushf
add
je
lret
ret
clc
add
pop
mov
push
push
add
enter
sub
sub
mov
push
cmp
sub
jns
xorl
repnz
aad
scas
lret
in
add
push
inc
je
out
add
fcmove
decl
test
insl
push
adc
cld
jno
cltd
gs
icebp
aaa
outsb
in
jae,pt
flds
jl
lock
xchg
xchg
add
sahf
push
add
inc
or
leave
cmp
or
or
jne
add
test
aaa
xchg
es
push
lea
adc
sbb
sub
push
aaa
cli
inc
adc
subb
jnp
fstpt
pop
xchg
xchg
xor
add
das
je
jnp
aad
mov
sar
loopne
fwait
jns
push
add
repz
pushl
andb
mov
out
out
bound
inc
pop
push
pop
stc
lock
mov
xchg
pop
call
xlat
in
cmp
lods
xor
inc
imul
jp
outsb
fistpl
stc
jge
pop
sar
incb
fs
xor
mov
cmp
add
aad
jg
sub
in
mov
push
jp
sub
pushf
add
iret
jmp
mov
push
inc
scas
sbb
or
mov
repnz
sti
iret
pop
cmp
test
imulb
pop
push
add
push
sub
ja
punpcklwd
fs
dec
xor
mov
adc
fildll
push
aad
ret
scas
xchg
adc
mov
cmpsl
data16
push
es
ss
cmp
xor
lea
inc
pop
or
push
add
xchg
or
and
fucomi
mov
jge
nop
mov
jbe
lcall
dec
std
mov
ficoml
and
cmc
mov
test
push
ret
loop
cmp
decl
cltd
test
jp
out
icebp
pop
push
xchg
mov
push
push
ds
pusha
mov
push
jl
aas
lods
and
test
sbb
and
roll
lcall
aaa
pusha
mov
jp
adc
mov
add
pop
mov
jne
cmp
mov
add
es
inc
mov
movups
pusha
fcompl
nop
iret
mov
dec
mov
adc
daa
mov
inc
out
outsb
jl
mov
dec
addr16
inc
or
ss
mov
rcr
xor
test
mov
or
mov
push
js
cmp
xchg
test
loopne
dec
mov
mov
push
sub
imulb
aad
movsl
cld
or
cmpsb
mov
push
bound
inc
outsl
pop
imul
xchg
pop
pushf
jl
and
test
add
cltd
cli
lret
xchg
test
add
aam
mov
add
outsb
sbb
les
lcall
or
sbb
je
mulb
fldcw
add
test
jp
stos
imul
test
mov
movsb
nop
jg
pop
orb
movsl
lea
mov
aam
aaa
mov
and
popa
xchg
into
testb
jb
stc
negb
str
ret
jns
or
sub
divb
mov
pop
jnp
ds
iret
pushf
cli
dec
push
jnp
test
hlt
xchg
int
mov
mov
cmp
push
bound
scas
add
mov
or
test
mov
mov
sbb
insb
mov
fidivs
fisttpll
mov
inc
loope
lahf
mov
outsb
and
inc
push
rcll
jg
jmp
cld
data16
mov
inc
out
pop
mov
mov
sub
dec
stos
sbb
push
iret
and
mov
scas
xor
enter
scas
rcrb
cmp
in
jmp
andb
cmp
cltd
mov
adc
insl
mov
xchg
or
test
test
mov
data16
stos
lods
mov
pusha
in
test
fcmovnu
outsl
mov
in
sub
shl
mov
lock
mov
mov
gs
dec
jae
int3
lcall
int3
inc
sahf
incl
in
sbb
or
push
pop
push
pop
mov
inc
xchg
mov
icebp
mov
shll
xchg
pop
popa
mov
jg
xchg
mov
mov
mov
in
and
sbb
sbbb
imul
mov
pop
aaa
in
mov
or
stos
testb
pop
cs
push
mov
decl
adc
mov
and
mul
lds
pop
xchg
mov
ret
dec
fbstp
into
cmp
xor
popa
popf
or
inc
dec
sbb
outsb
pushl
jl
cmp
and
pop
mov
fcmovnu
and
mov
outsb
cmp
mov
pop
jo
jnp
adc
sbb
imul
adc
popf
inc
gs
pop
xor
enter
cli
ret
ret
testb
or
cltd
inc
mov
sbb
fcoms
push
push
fdiv
mov
adc
movsl
add
out
sbb
xor
lea
imul
sahf
pop
das
inc
cmp
adc
fisttpl
and
sbb
mov
int3
fstl
leave
jno
mov
dec
sub
jge
mov
add
incl
lret
shlb
push
in
das
jnp
sub
fsubl
mov
iret
lds
rolb
mov
add
outsl
out
mov
fsubl
sub
aaa
add
mov
adc
jg
ret
inc
sahf
bound
sbb
fldcw
inc
cmpsb
and
pushl
and
dec
add
rorl
icebp
fistpll
lds
inc
ljmp
inc
jmp
scas
out
fstps
sub
dec
nop
aaa
sbb
or
in
inc
inc
xchg
dec
adc
push
repnz
cmp
in
mov
mov
jo
orl
out
mov
shr
hlt
inc
aam
dec
jg
inc
shrl
decl
jecxz
or
pop
dec
pop
subb
and
inc
outsb
test
cmc
mov
bound
pop
loope
jl
and
mov
xor
mov
or
push
pop
xchg
push
sub
mov
fidivl
add
in
adc
cmp
out
push
push
mov
jge
outsb
mov
sub
inc
push
mov
das
fildl
push
mov
ret
ja
or
jle
dec
and
xchg
outsb
dec
out
test
es
cmp
sbb
lret
adc
hlt
add
dec
sar
insb
pushf
sub
sub
lcall
std
xor
mov
xor
rolb
ss
pop
std
out
data16
insl
push
lds
lret
test
lret
dec
or
jns
test
cmp
pop
fldl
mov
sub
add
ret
xchg
shlb
mov
mov
or
add
pop
inc
xchg
or
jg
inc
ljmp
inc
sub
add
aaa
add
std
xor
incl
jno
adc
sbb
push
mov
inc
or
or
gs
cli
lods
jecxz
cmp
push
stos
cltd
pop
gs
and
lock
mov
mov
pushl
jmp
adc
add
divl
orb
pop
pop
xor
lcall
loope
rcr
mov
add
pop
pop
cmpsl
test
ret
fildll
mov
icebp
inc
mov
bnd
sbb
xor
add
sbb
xchg
push
jg
outsl
inc
in
adc
cmp
adc
das
push
clc
sbb
fisttps
add
mov
cmc
decl
fisubrs
andl
pop
xor
jg
outsb
add
jno
fsubrl
cltd
mov
daa
jne
rcrl
int3
and
rorb
cmpsl
adc
out
test
or
dec
shl
adc
rolb
jecxz
jmp
mov
stc
jb
shll
orl
pop
jg
xor
adc
std
in
xor
enter
ret
cmpsb
jle
xchg
or
pop
xchg
and
enter
shlb
cltd
xlat
pop
jg
cli
andl
xchg
xchg
cmc
dec
jns
adc
dec
pop
jp
adc
repz
xchg
fidivrs
je
imul
push
pop
clc
lods
mov
pop
dec
out
cld
add
pop
xchg
mov
mov
lods
xchg
xchg
ss
clc
push
shll
push
das
loopne
push
sti
jg
mov
add
add
enter
jp
jle
das
jo
pop
xor
inc
mov
ja
in
xchg
mov
push
xlat
xchg
out
jl
negb
dec
xchg
arpl
mov
dec
mov
ret
cmp
shl
pop
ljmp
push
in
shll
adc
pop
mov
cmpsb
loopne
and
sub
filds
daa
lea
std
and
inc
call
dec
jno
cmpsb
mov
push
test
rcll
push
fsubrp
adc
bound
cwtl
in
sub
mov
mov
es
orl
mov
xchg
movsl
loopne
int3
add
imul
sbb
cmp
and
mov
and
shlb
mov
jle
pop
clc
jbe
testl
pop
bound
xchg
pop
inc
sub
jne
insb
xchg
rcrb
mov
out
mov
int
push
or
xor
push
add
sahf
jp
inc
inc
jl
jb
cmp
mov
bound
aaa
inc
sbb
cwtl
orb
and
mov
rorl
icebp
addb
dec
pop
sarb
fsubrl
std
call
ret
and
fwait
push
push
js
cltd
cli
fcoms
xor
test
jne
in
imul
aas
sub
lods
cmpsb
in
xchg
imul
jbe
inc
jg,pt
push
stos
scas
shrl
sub
pop
inc
jle
movsl
xchg
pushl
cli
dec
nop
dec
inc
out
mov
mov
ss
call
pop
ficoms
add
mov
xor
jmp
sbb
mov
xchg
or
inc
mov
inc
push
mov
outsl
test
daa
dec
mov
xchg
mov
test
add
movsl
rcrl
arpl
sbb
jo
cmp
mov
dec
mov
mov
sub
scas
xchg
pop
xchg
ss
orb
adc
ljmp
mov
movsl
lcall
mov
jp
les
fisttps
cld
mov
add
in
mov
jbe
icebp
imul
cmp
je
fs
jp
push
push
mov
adc
add
or
enter
inc
mov
ret
clc
pop
clc
sbb
loopne
pop
int
and
in
stc
dec
ffreep
aas
aad
stos
cwtl
in
xor
ret
push
mov
and
push
mov
pushl
repnz
dec
in
lds
add
in
mov
lret
iret
movsb
xchg
rclb
add
push
jnp
mov
mov
jns
mov
mov
push
rcll
test
add
aad
outsl
insb
or
popa
repz
insb
idivl
adc
mull
shll
loope
pop
mov
sub
out
data16
negb
adc
rcrb
ret
sbb
adc
mov
fildll
jns
push
call
sbb
out
fidivrs
imul
arpl
sub
lcall
fisubl
into
insl
shrl
scas
sub
mov
test
rcrb
lcall
das
icebp
xchg
test
fs
inc
dec
sbb
fistpl
jae
sub
gs
mov
jo
fistpl
insl
sub
xlat
mov
es
xlat
and
clc
cmp
xchg
das
hlt
scas
mov
push
test
sbb
adcb
cs
mov
lods
cmc
mov
mov
inc
orb
jb
mov
fstpt
aaa
jge
outsb
ffreep
test
loop
bound
cld
sti
push
jmp
jle
leave
push
or
stos
jae
and
sub
fistps
inc
ret
mov
cmp
mov
in
in
fistl
aam
mov
jmp
mov
cmp
addr16
sbb
jle
stos
pop
push
imul
jecxz
pop
in
mov
in
jmp
and
inc
dec
mov
xor
jecxz
add
push
in
jecxz
inc
hlt
in
inc
lea
xchg
and
faddp
sbb
lods
ret
add
sbb
adc
jp
daa
lods
sub
push
roll
mov
xchg
mov
test
xchg
imul
add
pushf
fwait
in
and
in
dec
xchg
jbe
addr16
cmp
jg
std
push
xor
loop
jae
sub
cmp
loop
jg
into
mov
jp
or
jge
cmpsb
les
mov
imul
xchg
lret
pop
or
das
inc
cld
sbb
cmp
mov
mov
and
in
mov
cs
xor
aad
jno
jp
mov
outsl
jg
jb
push
cmp
sbb
adc
popa
loope
mov
in
in
imul
iret
pop
imul
mov
std
mov
aas
add
add
inc
fsubl
mov
aad
jb
push
pop
xor
xchg
jg
test
adc
jbe
ljmp
js
xor
cs
adc
jne,pn
fcmovnu
adc
pusha
int
push
ss
dec
ds
jle
jmp
add
dec
jg
mov
pop
fwait
jg
lea
and
xchg
cs
insb
xor
mov
cmp
mov
popf
pop
xchg
lock
ss
pushl
jmp
add
add
adc
out
sbb
ss
arpl
push
add
std
lods
xchg
es
lods
sbb
les
cli
dec
je
adc
push
push
ljmp
sub
mov
js
andw
clc
mov
mov
fbld
sbb
insb
cltd
lahf
addl
mov
cld
fucomip
mov
push
and
aad
mov
mov
push
jne
lods
mov
cmpsb
mov
sub
xchg
add
mov
add
mulb
clc
push
jo
nop
not
nop
test
andl
stc
iret
sarl
inc
mov
jne
popf
and
add
shlb
ss
add
push
mov
loop
or
aaa
inc
push
and
sbb
int
mov
icebp
fimull
bound
jb
imul
sub
mov
outsl
dec
shlb
icebp
inc
and
lret
out
add
fidivrl
adc
pop
pop
fwait
sahf
fdivrs
jl
and
clc
xor
shl
and
jmp
aad
movsl
hlt
mov
mov
inc
test
add
clc
adc
jecxz
lcall
loope
and
mov
adc
cmpsb
adc
add
jg
les
pop
push
outsb
in
push
jae
sbb
jmp
add
inc
insb
repz
mov
pop
leave
shrb
lcall
adc
cld
lds
mov
mov
pop
cltd
push
into
in
adc
sub
cmc
inc
js
arpl
lahf
pusha
push
xchg
pop
out
fs
into
jmp
imul
outsb
divl
mov
dec
into
sbb
xor
sar
jg
sbb
fists
mov
cmpsb
es
inc
pop
sub
mov
cmp
jg
repz
adc
dec
shlb
adc
gs
mov
push
mov
mov
outsl
arpl
mov
leave
fisubrs
vmulsd
pop
xor
jns
ljmp
xor
scas
insb
cmp
sub
cmpsl
xor
stos
lods
and
in
ljmp
lods
adc
xchg
orl
jns
clc
mov
pop
adc
movsb
and
or
icebp
fildll
push
sub
sub
mov
cmp
call
jbe
mov
cmc
cwtl
gs
push
jns
xor
inc
add
and
pushf
cmp
pop
rorb
jmp
dec
and
pop
lods
rorb
pushl
xchg
cmp
jns
out
imul
ds
int3
mov
stc
lret
stos
into
popf
xorb
iret
adc
ljmp
aas
sbb
out
cld
mov
insl
insl
mov
lods
rclb
mov
cmpsb
jp
jle
cmp
inc
jb
in
mov
mov
cltd
xor
mov
mov
xchg
popa
mov
aad
push
pop
into
cld
out
inc
out
and
dec
cltd
icebp
clc
sbb
out
fsts
loopne
jmp
fisubrs
cld
call
js
xchg
loope
push
inc
xchg
sarb
and
scas
or
sbb
decl
push
fdiv
cmp
bound
pop
adc
sub
cwtl
iret
dec
hlt
movsb
or
mov
fcompl
incl
lea
popa
xchg
adc
push
adc
dec
loopne
lods
add
aad
cmp
nop
add
mov
mov
fldenv
push
jmp
lods
push
fisttpll
sub
mov
mov
int
std
cltd
lret
aam
push
fimull
push
fdivr
sbb
test
cmc
arpl
movsb
sbb
fidivs
cmc
push
sub
dec
int
adc
sbb
inc
out
lea
jmp
lcall
mov
and
jns
movsl
or
mov
aaa
ds
mov
scas
xor
jp
aad
orb
leave
sub
test
sahf
ljmp
decb
dec
mov
push
mov
push
lcall
call
pusha
aam
pop
jbe
jne
shr
ljmp
outsb
cmp
adc
bound
dec
sub
mov
ljmp
loope
mov
push
je
sbb
in
add
ficoms
aaa
ficoml
lcall
xor
lret
call
dec
aas
mov
js
ds
pop
jmp
orb
pop
call
mov
ds
mov
out
mov
popa
cs
dec
cmpsl
xchg
xchg
repz
sbb
rolb
decl
mov
enter
ret
mov
pushl
repnz
sub
lret
leave
push
dec
es
push
inc
std
push
popf
incl
pusha
fwait
into
sahf
shrl
mov
inc
insb
rsqrtps
inc
pop
call
sar
scas
incb
add
insl
int3
jbe
xchg
mov
or
xchg
rol
mov
aas
cld
jg
dec
push
mov
repnz
shll
mov
mov
icebp
xchg
mov
lahf
std
mov
xchg
aad
test
decl
fwait
mov
dec
out
jmp
push
sub
add
mov
call
pop
int
dec
sub
add
enter
ja
call
mov
pop
enter
in
mov
test
adc
cmp
mov
out
add
mov
lret
lds
shl
in
jecxz
call
push
insl
pop
pop
loope
test
xchg
pop
pop
cmp
insl
stc
sti
sbb
movsb
mov
or
popf
sub
mov
test
ja
arpl
adc
mov
cmp
sub
test
mov
call
mov
decb
adc
ss
cmp
jl
cwtl
call
xor
fstps
sarl
aas
cmp
push
pop
insl
xchg
inc
imul
call
mov
and
fcomps
insb
or
sbb
loope
cli
pop
and
dec
scas
insl
mov
pushl
xor
mov
dec
test
fs
lods
sbb
icebp
ljmp
add
jmp
sub
mov
mov
icebp
enter
and
mov
mov
xchg
shrb
and
sti
pop
jl
bnd
mov
pop
test
cld
jnp
loopne
dec
stos
aas
mov
xchg
mov
ljmp
mov
inc
sub
jb
dec
sbb
cld
pushf
jge
pop
dec
xor
lret
pushl
das
mov
js
cs
rorl
and
fnstsw
push
rcll
push
and
fs
sub
sti
sbb
decl
sub
sbb
push
adc
fdivs
lret
xor
fs
fdivr
lcall
and
xchg
cs
movsb
scas
cmp
inc
dec
dec
push
fildll
or
stos
pop
cltd
jb
test
inc
jp
push
xor
js
addr16
popa
mov
pushl
jbe
jecxz
in
popa
xchg
scas
fdivrp
mov
pop
dec
push
cld
xor
fistl
inc
xor
sub
ds
ret
jno
xchg
cs
or
pop
mov
sbb
jns
lcall
or
push
pop
ret
idiv
push
jo
xchg
divl
dec
je
int
std
decl
add
mov
mov
popa
repnz
test
xchg
arpl
rol
jno
nop
fidivrs
stos
pop
ljmp
test
scas
or
je
stos
lods
push
sbb
lahf
xor
pop
ljmp
xchg
sbb
cmp
add
loope
mov
repz
mov
sub
inc
stos
iret
bound
jmp
xor
mov
lcall
ljmp
sbb
adc
lret
add
fwait
add
ds
xor
loopne
call
mov
xchg
ret
je
inc
sbb
test
jg
push
lcall
cwtl
xor
jae
add
xchg
jbe
cmpsb
jnp
lahf
mov
adc
sbb
mov
or
lcall
ljmp
aaa
cmp
das
pop
ja
mov
add
xchg
mov
cli
test
mov
mov
pusha
jl
jbe
lds
inc
xor
jmp
fdiv
adc
sbb
or
add
sub
jg
pushl
data16
les
int
ds
pop
dec
or
rclb
jg
cmp
repz
mov
sub
pop
or
sbb
jmp
push
adc
jp
adc
pop
bound
xchg
push
pushf
lret
jmp
cli
pushl
ficoml
in
pop
cmpb
pop
pop
out
cmp
lea
aaa
xchg
cld
stos
mov
sarb
add
inc
addr16
enter
clc
decl
in
cmpsb
adc
sub
or
mov
hlt
jb
std
lcall
std
cmpsb
inc
add
dec
test
add
bound
jae
cwtl
movsl
mov
clc
lock
aas
test
test
jle
push
mov
decl
ret
inc
ja
inc
push
dec
outsb
dec
scas
mov
jb
leave
jecxz
aam
pushf
das
sar
adc
shlb
cmpsb
mov
cmpsb
je
test
std
decl
or
mov
std
pop
fnstcw
int3
jnp
jne
jbe
or
dec
int
add
repnz
lods
into
cs
nop
loope
mov
jmp
add
cld
decl
xchg
je
pop
xor
push
loopne
and
jnp
pop
fcmovu
loopne
or
push
mov
ret
pop
cmp
decl
mov
and
fs
inc
pop
mov
je
inc
das
lods
cwtl
lcall
jle
adc
sub
mov
sti
fwait
enter
add
mov
push
lds
sbb
push
lahf
shll
repz
adc
outsl
inc
nop
and
inc
push
xchg
mov
cld
in
insb
iret
pop
dec
sub
or
mov
jnp
jecxz
jge
sub
push
sbb
sbb
popf
push
in
clc
jp
lock
clc
out
xchg
pop
or
mov
scas
sti
push
test
daa
ss
xchg
es
ljmp
leave
mov
cmpl
mov
jns
cli
arpl
fbld
xchg
xor
das
jmp
pop
push
gs
in
sub
decl
mov
movsb
adc
mov
mov
jne
pop
fucomip
fnstsw
mov
pop
hlt
push
pusha
adc
inc
int3
pusha
incl
es
jae
movsl
jecxz
insl
outsl
cmp
push
hlt
cmp
cmovge
fdiv
mov
dec
icebp
das
std
push
vpmuldq
repz
sbb
lds
push
mov
mov
xor
adcl
or
inc
pop
jnp
popa
pusha
pop
jg
mov
or
sub
outsb
repz
mov
int3
mov
jne
in
inc
pop
push
inc
pushl
pop
inc
push
fdivs
call
fs
loop
call
sub
inc
inc
cld
fcmovne
pop
mov
jecxz
mov
inc
data16
movsl
and
cmpsl
cld
xchg
mov
add
fs
or
sti
cmp
cltd
sbb
mov
decl
jne
or
ds
arpl
std
das
enter
lds
mov
mov
in
sahf
sbb
jecxz
test
inc
mov
andl
mov
pop
pop
mov
lods
std
jbe
mov
pushl
push
fs
in
dec
outsl
adc
lock
lcall
mov
decb
cmc
lret
movsl
scas
imul
pop
or
cltd
ficomps
push
fisttpl
add
or
cmp
and
xor
push
jmp
pop
cmp
fimuls
loop
cmp
mov
mov
pushl
cmpsl
pusha
scas
ret
xor
adc
int
pusha
xchg
inc
dec
je
pushl
hlt
xor
xchg
jmp
push
testl
es
stc
jmp
push
dec
repnz
cld
std
add
adc
insl
dec
stos
ljmp
decl
out
sarl
push
cwtl
pop
mov
insb
out
loope
xor
jg
inc
in
cmpsl
in
test
mov
lods
and
xchg
pop
cld
mov
dec
sbb
jge
adc
std
adc
xchg
ss
lock
mov
cld
das
std
jmp
jne
xchg
inc
adc
ret
xchg
sub
into
shlb
dec
and
dec
dec
les
sub
jbe
stos
pop
sbb
add
je
mov
js
mov
outsl
jg
jmp
lahf
cmp
stos
push
inc
bound
icebp
fistpl
xchg
rcrl
decl
mov
push
mov
int3
push
xor
test
mov
mov
xorl
cmp
dec
cmp
rclb
adc
test
mov
rorl
cmp
sub
pop
or
fcoml
shlb
shll
jl
push
and
xor
adc
sub
icebp
rorb
int3
mov
pop
pop
cmp
adc
iret
or
lret
jne
cltd
jmp
lds
js
nop
pop
outsl
stc
aas
in
imul
addl
xchg
insl
xchg
mov
adc
adc
test
std
mov
adc
shlb
sub
outsl
dec
sbb
xchg
xchg
push
jp
cltd
lea
in
in
out
fistpll
in
rcl
adc
icebp
scas
movsb
inc
xor
loope
and
and
or
fdiv
mov
lds
dec
sbb
popa
pushl
imul
mov
jmp
lahf
mov
ret
mov
je
xor
in
inc
addr16
fadds
daa
and
xchg
sub
pop
cli
xor
dec
xchg
aam
test
push
or
addl
ret
call
xchg
popa
push
test
pop
loope
test
push
add
xchg
call
shl
sahf
xor
idiv
dec
adc
dec
inc
scas
test
mov
mov
cmp
jns
outsl
sar
pushl
pop
mov
mov
aad
cmp
jae
in
pop
sub
or
aad
mov
mov
daa
mov
nop
add
dec
lea
adc
xor
cmp
in
scas
fdivr
idiv
call
push
mov
lds
jl
push
inc
test
lea
rclb
das
mov
movsl
push
mov
pop
sub
jno
out
jg
pushl
xchg
lret
mov
push
stos
daa
sbb
mov
call
aam
xchg
sub
mov
mov
out
inc
xchg
pushl
scas
or
dec
fs
push
sub
repnz
mov
lock
in
jmp
mov
mov
cld
daa
xchg
xchg
inc
mov
sub
lods
stos
rsm
jecxz
popf
sub
dec
pop
lret
adc
call
inc
fst
lds
and
jmp
sub
push
xor
or
mov
add
push
mov
outsl
lcall
dec
ljmp
pop
loop
call
mov
repz
movsl
pop
int
and
pushl
lods
jnp
lods
adc
sub
push
shrb
mov
jg
adc
mov
cmp
and
adc
incl
mov
repnz
adc
fs
or
sbb
adc
test
aad
jmp
adc
adc
pushl
and
aas
inc
adc
sbb
sbb
jg
jg
mov
fldcw
addl
jno
xchg
das
lock
mov
iret
xlat
mov
pop
stos
mov
ja
inc
jnp
shrb
xor
add
pop
int3
inc
sbb
jmp
call
or
pop
call
cmp
cmpsl
sbb
sbb
sti
cli
ja
xor
int3
popf
out
ljmp
jle
cltd
xor
js
repnz
jnp
mov
adc
adc
sbb
sub
pop
ljmp
nop
inc
aaa
xor
sbb
mov
add
mov
push
jmp
insb
mov
sbb
test
dec
and
xchg
jp
enter
dec
jne
jae
loopne
rcll
arpl
icebp
jmp
mov
cltd
std
mov
sub
loopne
inc
rol
ja
or
shlb
out
lcall
pop
or
faddl
jbe
jle
inc
mov
xchg
jnp
jmp
ljmp
push
xor
lds
shll
scas
cs
ss
decl
lock
dec
jbe
imul
pop
push
mov
cli
cmp
cltd
lock
xor
lcall
push
mov
aas
loopne
inc
dec
movsb
loop
aaa
imul
cmpsl
stos
sbb
sbb
add
cmpsb
pushf
enter
fbld
stos
pop
lds
jns
mov
lea
outsl
cmc
ljmp
cmc
test
jp
ret
jge
push
and
test
sub
aaa
cli
decl
mov
pop
xor
jecxz
popf
push
orb
call
mov
inc
test
mov
andl
sub
adc
cmp
call
pop
push
shl
jge
dec
push
rcr
sbb
inc
clc
ffreep
push
pop
inc
movsl
lahf
js
aad
inc
mov
adcb
insb
out
ret
out
mov
clc
jmp
and
mov
xor
add
pop
push
out
pop
test
lea
jl
cltd
jmp
mov
filds
sbb
call
fs
xchg
cld
inc
adc
mov
mov
xor
jl
push
fdivr
push
cli
sti
pop
xchg
repnz
sahf
mov
push
call
pop
pop
mov
dec
or
jae
pop
dec
xor
movsl
cli
xlat
jo
push
dec
mov
jmp
dec
orb
into
push
add
in
addr16
add
pop
xchg
outsb
inc
das
cld
and
jae
or
rcrl
dec
sbb
mov
and
fildl
mov
jl
pop
adc
mov
lods
mov
jg
shrl
fdivrl
add
jo
pop
aam
cld
imul
call
push
aaa
out
lcall
jecxz
fdivrl
repnz
fsub
ss
lahf
mov
test
xlat
jb
call
jg
ljmp
inc
sbb
mov
lret
mov
xor
je
mov
aaa
mov
jo
bound
int3
sbb
loopne
ret
mov
pushl
xorb
add
xor
sbb
push
mov
cmc
pop
mov
fstpt
xor
and
lcall
push
push
lods
cmp
xor
aaa
mov
rol
dec
fisttpl
leave
mov
mov
ficomps
push
mov
lcall
or
enter
cmp
cmpsb
cmpsl
decl
ret
nop
addr16
les
mov
pop
mov
add
dec
pop
ljmp
test
cld
divl
dec
sahf
repnz
sbb
jmp
ds
mov
or
mov
sub
xchg
cli
jecxz
mov
loope
mov
push
cmp
xchg
sbb
adc
rolb
mov
ss
ss
out
adcl
adc
push
add
call
insb
repnz
andl
call
mov
call
push
mov
sti
cmp
cli
fs
jmp
xchg
cmc
sub
mov
xchg
aas
adc
cmp
test
mov
pop
pop
ljmp
hlt
pop
xor
adc
mov
xchg
movsl
sti
fs
and
cmp
pop
mov
rcl
jp
movsl
call
movsl
test
insl
idiv
pushl
lock
js
xor
push
add
outsb
mov
mov
pop
dec
faddp
repnz
decl
pop
mov
push
push
push
ss
inc
popa
dec
not
sub
repz
clc
lcall
repnz
lds
cmc
push
insb
mov
imul
sbb
sub
push
or
pop
mov
and
mov
nop
add
pop
mov
dec
jg
ljmp
jo
dec
mov
dec
stc
xchg
jl
das
inc
ret
xchg
scas
fistpll
mov
dec
lods
cmp
fnstcw
into
test
call
and
mov
mov
cmp
lds
push
push
aas
orb
mov
sub
push
das
lret
mov
cld
popf
sar
inc
cli
addb
pop
ljmp
lea
mov
pop
xchg
xchg
push
enter
sbb
pushl
xor
subl
int
inc
test
push
and
faddp
sub
cmpsl
sahf
test
ljmp
lock
divl
sbb
and
mov
je
test
nop
movsl
arpl
js
dec
decl
cld
test
pop
test
sub
inc
push
gs
jg
loopne
and
fucomip
mov
in
pop
cltd
incl
or
xor
imul
jne
pop
cs
icebp
aam
pop
call
dec
bound
cmp
fwait
aas
or
cmp
push
decl
imull
pop
loop
or
test
mov
xchg
stc
push
repz
xor
cmc
jmp
testl
fcompl
fdivrs
sahf
lcall
sbb
lea
lock
in
cltd
pop
xchg
xchg
push
mov
inc
pop
lcall
mov
xor
adc
sbb
mov
decl
pop
repnz
das
mov
xchg
pop
cmp
and
subb
hlt
add
xorb
jp
or
fdivrl
stc
roll
mov
insl
inc
jmp
dec
lahf
xchg
bound
ficompl
or
dec
rolb
ljmp
cmp
dec
test
mov
pop
xor
add
mov
jecxz
lods
loop
in
jg
das
outsl
mov
push
lcall
push
push
aam
mov
incl
fdivrs
xchg
popa
not
sbb
test
mov
mov
ss
iret
test
xlat
xchg
mov
mov
jnp
inc
mov
clc
xor
inc
jnp
or
sbbl
cmc
or
pop
push
sbb
push
xchg
pop
fldl
call
vmovaps
push
xor
sub
in
out
lea
cmpl
pop
into
dec
ficoms
stos
pushf
testb
rcr
cld
test
xorb
lods
jp
dec
sti
stos
push
test
incl
js
push
dec
loop
mov
mov
ja
xlat
or
mov
xor
jle
in
dec
pop
jge
sub
aad
out
or
push
bound
sti
orl
sbb
sbb
mov
fstps
sub
or
cmp
sub
idivl
aam
rcr
int3
xchg
gs
ret
mov
mov
mov
into
mov
aas
int
sub
call
xchg
adc
mov
js
mov
mull
mov
decl
add
cmp
add
adc
movsb
mov
and
int3
and
call
sub
dec
sub
out
xor
sub
cli
call
push
sbb
pushf
bound
cwtl
pop
es
xchg
inc
jae
fistps
jb
icebp
iret
fnsave
mov
xchg
mov
cld
mov
lcall
jbe
outsb
push
sbb
bound
pop
ljmp
push
int
test
mov
mov
fadd
or
lods
sub
lcall
sub
popf
ret
pop
dec
insl
mov
cmp
cmpsl
xchg
scas
jge
ja
jg
xchg
adc
sti
inc
outsb
cmp
cmp
xchg
mov
fsubrp
test
add
incl
cmpsl
jb
sub
lds
sub
repz
push
sub
and
fcmovnb
lcall
lods
leave
jno
cli
es
out
sbb
push
loop
lock
mov
jne
popa
xchg
push
and
popa
movsb
hlt
cmpsb
inc
jmp
adcb
mov
gs
pop
mov
mov
inc
push
lahf
push
pushl
bound
rcr
test
in
jle
int
mov
sti
js
jo
clc
incl
subl
dec
stos
sbb
add
lods
dec
jg
std
jge
xchg
sub
sub
push
add
or
das
inc
lock
cmp
push
lea
pop
loopne
int3
xchg
mov
mov
and
cmovae
incl
pop
divb
cmp
mov
fcoms
mov
add
cwtl
popa
cmp
dec
lcall
aaa
psraw
lahf
insl
stos
mov
xchg
adc
movsl
xor
lods
mov
adc
mov
add
aaa
lcall
xchg
adc
push
xchg
lcall
mov
add
loop
call
sbb
sbb
xor
decl
cmp
or
movsl
adc
std
pushl
std
sti
sahf
xchg
add
xorl
inc
insb
jmp
int
call
cli
jmp
lock
mov
ret
fists
pop
stos
nop
add
lods
fmull
ljmp
int
test
adc
add
aaa
mov
shrd
mov
inc
cmpsl
and
ljmp
icebp
push
shll
cmp
lret
adc
or
xchg
js
cmp
mov
mov
orb
mov
ljmpw
mov
lock
sbb
ljmp
gs
lods
cs
mov
std
pop
cmp
cmc
adc
lahf
mov
jg
loop
movsl
stos
mov
jg
xchg
int
lods
xlat
inc
sub
lds
dec
push
cmp
or
je
daa
aam
test
dec
in
mov
movsl
fbstp
xchg
push
movb
jmp
sti
jg
jmp
cmp
aaa
aam
jg
inc
xor
adc
inc
enter
inc
call
xor
loopne
or
jg
aad
sahf
jge
fdivl
cld
sbb
and
sti
repz
mov
cmpsl
shl
sbb
sbb
in
inc
outsb
loopne
mov
enter
mov
std
or
std
pop
not
test
sarl
adc
cltd
dec
inc
add
or
clc
je
pop
ret
jne
jmp
jle
sbb
pop
jbe
xchg
inc
xchg
xor
or
dec
xor
inc
in
add
sub
call
popa
sub
fldcw
test
in
adc
dec
mov
inc
mov
ljmp
cmc
popf
lods
push
jae
lahf
loope
mov
ja
mov
icebp
jl
xrelease
jg
call
ljmp
loop
fisubs
and
sti
divl
jmp
outsl
xchg
call
add
jo
outsb
and
lret
mul
aad
js
enter
lcall
adc
nop
add
pop
sub
seto
ja
sbb
incl
xor
in
iret
loop
popa
lahf
into
push
sarb
jp
ljmp
adc
dec
mov
sarl
aas
sub
dec
roll
lcall
outsl
ljmp
shrl
clc
insb
mov
loop
clc
jo
pop
insl
dec
repz
cmp
jl
aad
ja
and
push
mov
mov
das
mov
std
inc
push
btcl
enter
leave
cs
mov
call
cmp
xor
ljmp
jmp
ljmp
mov
adc
lods
call
jp
cwtl
cltd
mov
push
mul
popf
inc
sub
mov
decl
xor
shl
mov
push
insb
cli
add
sbb
das
inc
sub
movsl
incl
xor
and
push
fstps
mov
shll
push
inc
lods
loopne
sub
lods
pop
cmp
add
pushl
pop
daa
xchg
inc
int
lcall
mov
or
movsl
ljmp
fisttpll
sahf
popa
inc
pop
adc
jp
add
shr
cli
dec
xor
test
ret
inc
fwait
rolb
jo
aaa
ficoml
and
mov
faddl
fucomip
incl
pop
add
adc
das
mov
fidivrl
lock
jmp
jmp
or
dec
stos
jno
nop
xchg
sbb
outsb
pusha
jae
jecxz
pop
ljmp
mov
pusha
xor
es
fwait
jae
cmp
pushf
cvttps2pi
dec
lcall
add
pop
cmp
cltd
sbbl
ss
inc
in
mov
sub
cmc
hlt
lret
jo
lcall
outsl
mov
fnstsw
rcrl
js
in
mov
cmpsl
or
push
mov
xor
dec
lock
push
mov
push
pop
mov
pop
rolb
into
jno
mov
popa
add
icebp
cmp
jg
insb
push
xchg
popa
lret
and
lods
das
insb
push
sbbb
sub
call
movsl
adc
xchg
pop
cmp
aaa
addr16
push
cli
int3
adc
xchg
sbb
sub
add
pushf
dec
push
decl
rol
push
sbb
mov
mov
jb
push
lcall
xor
inc
daa
or
mov
xchg
xchg
mov
lcall
cmp
incl
push
adc
and
or
sub
jmp
mov
ds
bound
sub
sub
mov
xchg
push
lds
rclb
lock
popa
mov
bound
mov
call
mov
out
in
addb
mov
test
xchg
xchg
pop
inc
mov
scas
inc
in
leave
fisubl
in
mov
lret
lea
push
add
mov
dec
xor
andb
jb
adc
pushl
pop
jge
dec
adc
cld
orl
subl
out
movsb
mov
call
icebp
call
hlt
sahf
std
imul
cli
add
mov
sbb
je
jmp
dec
adc
movsb
leave
ret
sar
aaa
add
jnp
adc
repz
ss
incl
outsl
loop
mov
arpl
jp
js
push
gs
dec
sbb
mov
push
mov
mov
sub
dec
pop
pop
sar
fistpll
iret
int
and
jb
outsb
push
mov
in
or
call
adc
out
mov
cwtl
jecxz
shr
cmovnp
hlt
jnp
int
push
mov
das
icebp
lock
fisttps
stos
and
out
test
jg
xor
jo
lcall
std
rorb
jne
mov
push
add
insl
sbb
jg
shll
rcl
jnp
dec
notl
mov
add
pop
scas
jae
jns
jno
int
call
fnsave
stos
fldlg2
cmp
mov
push
jg
popa
out
mov
popf
ret
arpl
and
mov
cltd
push
mov
xchg
in
popf
std
and
jl
and
lea
out
dec
jg
lds
mov
ljmp
mov
call
xchg
or
cld
mov
call
jmp
incl
push
push
mov
sub
fwait
pop
dec
cmp
fcmovbe
xor
insb
pop
inc
or
dec
std
add
mov
push
mov
push
fiaddl
in
jo
inc
mov
jecxz
in
add
push
mov
or
call
shll
jne
mov
dec
add
fldenv
lock
cmpsl
xor
icebp
jmp
aam
and
lods
jmp
imul
mov
add
jg
cmp
pop
mov
sbb
push
or
les
add
incl
out
cmovp
scas
fcoms
scas
pop
stos
mov
cld
dec
mov
iret
lods
dec
cltd
pusha
push
pop
cmp
mov
mov
lcall
fimuls
mov
mov
xor
out
sub
andb
incl
data16
in
test
lods
push
cmp
mov
mov
cmp
aam
data16
int
test
test
decl
sub
xchg
or
outsl
outsl
mov
rcll
cmpsl
inc
lods
lock
rclb
pop
dec
pop
fcmovb
mov
dec
pop
call
call
mov
xor
mov
icebp
or
push
stos
sbb
pushf
into
mov
cmp
cs
and
jnp
shl
mov
iret
cwtl
push
sbb
std
dec
inc
xchg
push
fbld
adc
mov
mov
pushl
stc
or
mov
jl
mov
adc
call
mov
xor
add
fs
popa
inc
enter
call
int
or
lcall
xchg
test
fildl
out
sbb
sub
xlat
jecxz
outsl
shlb
jne
add
cmp
push
add
inc
hlt
fnstenv
cmc
out
incl
test
mov
sub
xor
das
outsl
testb
shlb
inc
ret
decb
add
inc
jbe
pop
rol
out
pop
fwait
adc
ljmp
push
xor
divb
in
pushl
pop
pop
clc
or
add
out
mov
pop
xor
shl
dec
shlb
scas
pop
mov
jg
ror
test
out
sbb
test
enter
sub
out
in
movsl
jp
add
movsb
mov
inc
jl
clc
sub
jge
mov
call
fildll
fs
sti
mov
lea
mov
sar
outsl
cld
xchg
ret
and
testl
in
mov
dec
lcall
test
fwait
pop
add
dec
push
xor
lret
dec
sbb
jns
pushl
and
mov
movl
and
jmp
xchg
xchg
cmp
push
inc
cwtl
sbb
add
cwtl
sub
sbb
push
je
inc
lock
or
push
or
xchg
adc
das
cmc
sbb
jnp
add
cmp
cmp
mov
rcrl
mov
mov
inc
fs
in
mov
fnstenv
ljmp
outsl
jg
push
and
xlat
test
ret
mov
idivb
mov
sar
loope
shrl
aad
pop
and
lds
and
and
jo
in
inc
xlat
aaa
pop
jmp
loop
xor
adc
sub
pop
jg
hlt
add
pop
in
clc
popf
shll
sub
push
adc
pushf
pop
jmp
xor
repz
shll
mov
or
mov
sbb
mov
pop
or
xchg
add
repnz
cltd
sbb
xor
aaa
std
mov
or
inc
push
pushl
pushf
mov
mov
inc
cmp
mov
jl
xchg
mov
mov
lods
lods
lret
push
xchg
xchg
insl
dec
xchg
jne
mov
xchg
fistpll
shrb
cmp
dec
mov
or
loope
cli
push
dec
jmp
adc
xchg
add
jecxz
cmc
cmp
call
jo
push
mov
lock
out
mov
add
clc
xchg
sub
shr
hlt
xor
mov
cltd
cmp
dec
mov
pop
data16
push
sar
aaa
fdivrl
fs
jp
mov
push
or
sub
clc
call
and
pusha
das
loop
jge
nop
pop
mov
add
addl
mov
ljmp
aam
jns
gs
mov
cltd
xchg
xor
addl
jo
fbld
mov
mov
add
jg
incl
out
stos
xor
dec
testl
stc
pop
inc
clc
sbb
leave
mov
push
lahf
mov
push
stc
and
ljmp
mov
test
or
push
in
testl
add
mov
push
scas
mov
mov
and
outsb
sub
shll
push
ss
into
mov
pushf
sbb
jg
test
scas
dec
lahf
push
mov
mov
mov
add
adc
ljmp
cmc
aaa
or
filds
xor
mov
and
outsl
fmul
pushl
add
in
adc
inc
add
loope
bound
inc
jge
nop
addr16
shrb
ljmp
test
pop
mov
ret
cmp
test
mov
dec
push
push
das
das
std
fcomip
dec
xchg
dec
fisttpll
jecxz
cmp
jl
cmp
jo
std
dec
shrb
inc
jnp
mulb
add
xchg
mov
orl
into
gs
pop
lcall
sbb
addr16
add
aas
and
pop
mov
xorb
sbb
test
insb
push
aam
gs
xlat
lock
imul
imul
or
cld
ljmp
hlt
mov
push
cli
or
int3
push
in
in
xchg
xchg
jecxz
and
ljmp
xor
pop
push
jmp
movsb
lock
mov
filds
and
adc
pushl
cli
imul
add
push
scas
scas
pop
mov
cmp
pop
pop
fdivr
push
cs
dec
es
ja
stos
jae
jo
jecxz
cld
cmp
loopne
push
lds
test
into
cmp
cmc
fwait
cmp
and
mov
mov
xchg
mov
pop
cli
idiv
cmp
sbbb
push
or
stos
test
call
cwtl
jns
in
cmp
push
in
in
stc
sahf
ret
hlt
lret
insb
adc
inc
sbbl
aas
ret
into
jbe
fwait
lret
mov
cli
sbb
mov
mov
test
sbb
pop
xchg
mov
xchg
fstpl
fcoms
mov
lock
sub
fucomip
dec
mov
cmc
ljmp
inc
repz
fists
jmp
mov
jle
in
lahf
fdivl
xchg
cmp
pop
cmp
xchg
add
cmp
push
pop
clc
cmp
jne
pop
movsl
in
imul
jnp
lahf
call
push
ror
sub
fucomip
inc
or
inc
cmp
cmpsl
fdivs
or
dec
sub
int
popf
outsl
ljmp
cli
or
int
sbb
lods
aaa
push
in
ja
pop
mov
inc
mov
ds
sahf
mov
mov
mov
mov
lcall
testl
push
fisttps
data16
jne
jp
jnp
mov
aaa
call
outsb
or
rorl
cmpsl
and
sbb
ret
shll
push
clc
incl
hlt
cmp
clc
and
in
push
scas
lea
popf
xchg
cmp
stos
dec
cmp
push
fcoml
jp
pushf
es
cltd
inc
cwtl
lods
and
decl
addr16
xchg
fidivrl
xchg
sub
incl
in
mov
inc
dec
ret
into
cld
push
inc
bound
adcl
decl
movsb
jnp
xchg
sbb
lret
insb
mov
sub
mov
loop
mov
gs
cmp
lods
mov
or
jmp
enter
clc
scas
sub
add
out
jmp
lahf
call
pop
adc
sarl
jp
push
or
xor
jne
das
cmp
fldt
push
test
pop
pop
fwait
jl
or
pop
mov
sbbl
ljmp
ljmp
adc
pushf
add
lcall
jae
jae
pop
jge
add
xchg
jmp
repnz
adc
lods
mov
mov
fstpt
fadds
inc
les
push
pushw
int
pop
mov
push
incl
js
sub
ljmp
incl
inc
and
add
mov
mov
inc
push
jmp
push
jecxz
gs
decb
lods
aam
test
cmpb
push
xor
dec
addr16
xchg
xchg
pushl
cmpsl
or
ds
rcrb
jl
nop
mov
sti
lods
decl
push
cli
popa
mov
pop
cld
jle
mov
das
mov
adc
fwait
call
jg
sub
mov
push
push
mov
dec
pop
mov
aaa
pushl
mov
hlt
mov
aam
sub
sbb
and
fcomp
imul
loopne
fucomi
scas
mov
jbe
in
add
and
cmp
rclb
jg
and
xlat
int3
ret
mov
xchg
gs
lcall
movsl
in
jnp
lret
out
sbb
dec
lret
sbb
outsb
jg
sub
adc
push
jp
fnstsw
pop
loopne
jmp
xchg
xchg
mov
mov
cli
pusha
cmp
int3
js
dec
push
cmpsl
dec
xor
cmp
shlb
mov
jg
sar
orl
jb
dec
push
fmull
repnz
shl
roll
and
inc
jmp
fisubrs
and
lods
incl
dec
mov
lods
fcmovnb
popa
cmc
lret
insl
repnz
stc
hlt
and
dec
fwait
or
xor
negb
jg
cmpl
jmp
cmp
mov
mov
xchg
xor
mov
cmpsb
fistps
pop
das
stos
mov
and
push
shll
sub
out
dec
loop
pop
cmp
rorl
dec
inc
or
jecxz
jg
jbe
sub
repnz
fdivrl
or
add
stos
faddl
add
mov
mov
lods
shll
lret
or
xchg
xor
pop
jge
fcmovne
xchg
popa
jb
inc
sbb
test
addr16
out
mov
in
test
stc
dec
adc
cwtl
and
cli
dec
and
pop
add
dec
cltd
into
jmp
sbb
adc
adc
scas
mov
outsl
sub
push
mov
cmp
inc
jnp
push
cmp
shl
dec
xchg
mov
jmp
lcall
decl
adc
inc
sub
lcall
loopne
pop
jo
push
insb
lcall
aas
call
sarb
dec
or
xchg
mov
testb
icebp
add
xor
shrl
push
repnz
daa
out
roll
in
jge
push
std
imull
jg
jecxz
dec
stos
inc
jg
imul
in
xlat
xor
incb
pop
pop
jmp
sub
dec
pushl
and
pusha
cli
in
scas
call
jecxz
xor
into
daa
bswap
int3
cltd
adc
ljmp
ljmp
inc
inc
inc
adc
int
inc
pop
jl
inc
subl
call
rorb
orb
mov
mov
out
bnd
aad
mov
pop
push
mov
mov
mov
mul
dec
inc
idivl
pop
movsl
add
ljmp
xor
addr16
mov
aaa
out
fldt
es
ffreep
xor
pop
inc
adc
dec
test
push
pop
xor
xchg
adc
cli
add
lock
and
add
sub
fucomip
xchg
stc
stc
and
push
dec
stos
addr16
push
sub
mov
das
cmc
pushl
gs
or
push
test
push
xchg
sar
xchg
cli
lea
mov
pushl
cli
xchg
cmp
inc
mov
ss
dec
roll
decl
adc
sbbl
stos
adc
sbb
loop
push
mov
mov
addr16
test
jmp
sub
rcrl
lods
cmc
out
shll
je
aam
test
enter
incl
sub
fwait
dec
pop
mov
inc
jnp
sub
pop
fimull
ljmp
inc
js
mov
lods
mov
and
jo
xor
cmpl
adc
xchg
je
cmp
pushf
sti
movsl
js
and
xchg
push
mov
xchg
jno
cs
mov
push
frstpm(287
test
sub
enter
xchg
cs
pop
push
cld
js
mov
mov
ljmp
sbb
stos
jg
les
outsb
movb
insl
inc
into
rcll
add
imul
mov
jg
movsl
jbe
pop
cmp
xchg
dec
mov
mov
aad
cmp
jno
inc
jge
dec
sub
jbe
clc
pusha
mov
arpl
insb
mov
lcall
cmpb
mov
push
lods
jmp
mov
ret
add
test
sar
pushf
test
ljmp
sub
outsb
xchg
imul
aad
cli
movlhps
add
pop
ja
incl
mov
es
mov
push
adc
sub
in
jb
mov
cld
pushl
subl
dec
fcmovu
js
add
inc
and
call
arpl
das
cld
andb
jecxz
push
stos
and
sub
adc
ljmp
imul
adc
jne
fdiv
cmpsl
dec
xchg
push
imul
inc
lds
mov
mov
ja
leave
mov
std
aam
xchg
jne
stos
jb
or
push
ljmp
mov
mov
dec
inc
adc
adc
test
decb
aaa
jg
outsl
fwait
xchg
loope
test
xchg
mov
fcmovu
mov
ret
mov
push
inc
xchg
call
pushl
or
and
mov
push
test
jno
into
call
pop
std
out
sbb
mov
sbb
stc
jp
test
jg
ret
xor
stos
adc
push
lock
xchg
push
decl
loop
jl
cmpsl
mov
insb
add
out
add
cmp
xor
sub
mov
ljmp
jecxz
mov
cmc
jp
testl
not
in
out
push
cld
rclb
pushf
mov
je
ret
int3
shll
jp
out
inc
jno
mov
sub
jle
cwtl
push
push
es
mov
inc
pop
movsl
xchg
push
shll
sub
lea
test
mov
inc
aas
imul
out
mov
jnp
push
hlt
sbb
loop
adc
lcall
mov
xchg
xchg
dec
sub
mov
sbb
xorl
std
hlt
mov
add
dec
dec
mov
pusha
add
sbb
repz
or
cli
sbb
cmp
das
icebp
ljmp
das
std
lock
std
pop
lahf
repz
mov
cmc
fdiv
loop
jmp
jae
int3
or
xor
gs
xor
mov
mov
fnstsw
ret
and
inc
sbb
aad
adc
jno
hlt
or
decl
pop
mov
pop
test
or
sbb
outsl
lock
daa
lahf
rcrl
pushf
fistpll
outsb
std
daa
xchg
fnsave
les
incl
jmp
js
cmp
sti
ds
mov
mov
mov
ja
aad
push
jecxz
sti
cld
lea
and
ljmp
sbb
adcl
sbb
fcompl
mov
cmp
push
xor
push
or
pushl
cli
xor
in
mov
push
and
jge
push
ja
fdivs
ljmp
mov
lea
jne
mov
jae
mov
jne
hlt
xchg
cmp
xchg
add
sti
shrb
push
dec
mov
dec
stos
inc
popl
test
test
mov
jp
mov
aas
sbb
push
mov
incl
je
mov
dec
ficompl
les
and
xlat
fsubs
push
lods
adc
sub
aaa
cli
std
mov
or
push
call
cmpsb
out
sarl
sub
dec
scas
add
mov
add
or
adc
add
pop
or
leave
jp
stc
pop
outsb
add
dec
dec
outsb
and
jmp
add
add
into
add
dec
inc
xchg
ss
mov
add
sbb
inc
lea
mov
call
incb
cmp
fidivrl
pop
add
push
out
mov
add
sbb
mov
test
mov
jae
push
aas
xor
mov
arpl
push
or
fwait
iret
mov
in
rclb
leave
shrb
call
pop
es
add
cmp
cmp
add
or
mov
dec
fadds
mov
jae
shr
mov
push
sbb
dec
inc
and
xchg
mov
stos
dec
rcl
jl
addb
aam
pusha
ficoml
sbb
jl
sbb
push
adc
add
inc
imul
outsl
movsl
call
stos
lds
jge
sti
push
push
and
popa
sbb
adc
addr16
sbb
xchg
xor
push
mov
adc
jo
lret
add
pop
mov
inc
les
insb
xchg
sbb
dec
push
jl
mov
or
lods
sub
sbbl
adc
ljmp
das
int
sub
fists
inc
jmp
fdivl
mov
stos
dec
push
test
fcmovu
add
fs
mov
cld
mov
add
add
push
jb
pop
push
mov
addl
rorb
push
pushf
fwait
dec
add
aad
dec
cmp
mov
sub
test
outsb
cltd
popl
leave
jle
pop
test
mov
or
or
mov
jno
and
lcall
add
cld
or
pushf
or
jecxz
xchg
adc
roll
insl
cwtl
dec
mov
push
pop
addr16
jecxz
pop
or
or
dec
mov
addr16
mov
aaa
inc
pop
add
in
mov
xchg
paddq
adc
sbbb
sbb
inc
mov
repz
aam
lcall
add
sub
cmc
push
ret
aas
mov
out
pop
test
ds
push
jbe
push
fstpl
es
fcoms
push
rorb
sbb
dec
pop
push
push
insb
int
loope
xor
mov
push
push
mov
pop
fwait
lea
test
mov
incb
stos
add
test
out
mov
popa
or
cli
push
cmp
fwait
arpl
ss
repz
sbb
clc
mov
out
das
sub
orps
pushl
or
cmp
clc
dec
cmp
out
loopne
and
stos
ret
jp
scas
sbb
jae
mov
clc
lods
cld
icebp
and
and
mov
inc
flds
jmp
js
or
mov
inc
sti
adcl
and
mov
push
push
inc
add
pop
mov
roll
pop
inc
xchg
xchg
movsl
mov
loope
xchg
scas
out
outsl
push
jae
jg
push
hlt
outsb
cmp
mov
mov
negb
mov
daa
mov
jns
pop
push
insb
clc
pop
dec
push
and
addb
andl
pop
negl
jle
xchg
mov
mov
aas
adc
lock
dec
leave
mov
fidivs
inc
add
sub
pop
add
das
lock
out
and
and
cld
pushf
int3
std
dec
jg
mov
pop
and
imul
and
cs
imul
inc
mov
jg
iret
int
repnz
test
dec
repz
push
outsb
aad
mov
cmp
sbb
adc
mov
sti
pop
and
sub
push
nop
test
mov
or
dec
int3
fs
sarb
push
push
or
dec
jno
pop
clc
ljmp
insl
add
add
pop
fnsave
test
stc
add
cmp
push
mov
lea
pop
fldt
movsl
fstpl
and
aaa
std
incl
pop
lret
cmp
inc
ljmp
sbb
and
xor
jg
imul
or
stc
insb
pop
mov
dec
sub
mov
or
push
jne
jl
and
ljmp
mov
xchg
jge
add
xor
xor
lahf
lock
sub
sub
sbb
mov
cmp
out
inc
jne
xor
mov
sbb
push
adc
dec
pop
inc
mov
inc
popf
fsts
dec
push
mov
repz
push
jg
mov
adc
sub
bnd
cltd
es
inc
std
and
and
ss
lcall
xor
cmp
cmp
mov
xchg
push
adc
ficoml
inc
out
cmp
jg
inc
adc
sbb
loope
rcl
dec
and
cld
mov
pop
cmp
arpl
mov
std
idivb
lods
sbb
fisubrs
push
mov
cwtl
in
xchg
ja
or
add
add
lods
sbb
jp
movsl
xor
pop
dec
sub
xchg
cli
repz
jbe
adc
rcrb
pop
cld
pop
adc
sbb
aam
adc
mov
mov
mov
movsb
dec
pop
jl
xchg
push
lods
push
mov
lret
dec
das
in
add
and
jg
cmc
dec
lcall
jge
sbb
mov
daa
adc
sbb
aaa
or
stos
jbe
and
daa
inc
pop
lcall
or
rcrl
fmulp
outsb
ljmp
push
adc
inc
cltd
or
cmpsb
stos
aad
sub
or
add
outsl
insb
call
aaa
xor
push
mov
cmp
out
test
sbb
decb
fstpt
mov
lods
test
lods
pop
rclb
ljmp
nop
adc
ljmp
shlb
or
inc
cmp
push
sbb
cwtl
stos
dec
popl
movnti
in
add
andl
call
rcll
imul
out
mov
call
js
jb
imul
xchg
sub
mov
add
pop
mov
fwait
es
sarb
pop
or
leave
adc
cwtl
inc
addr16
or
cwtl
add
xor
icebp
cmp
or
add
xor
mov
lock
fbstp
or
mov
cli
lods
popa
imul
ss
dec
add
cli
cmp
cli
and
addb
cmc
repnz
pop
cltd
sbb
push
jg
int
xor
xor
popa
out
dec
adc
lods
fldcw
push
out
sbb
jmp
popf
push
aad
xor
inc
mov
sub
inc
sbb
fwait
clc
or
ja
mov
jmp
push
adc
mov
fwait
pop
cmp
pushf
add
andl
test
das
mov
lods
int
test
sub
pop
int3
jmp
rcll
test
jecxz
movsl
mov
and
ret
pop
aad
out
cmc
outsl
popa
xchg
pop
leave
flds
outsb
aaa
xor
lret
cmp
sbb
mov
shl
mov
jge
jo
mov
out
push
pop
sub
pop
and
and
insl
lahf
fsubl
rolb
add
call
jbe
out
add
jge
dec
loopne
jne
dec
cmp
dec
repz
cmp
repnz
mov
jo
loope
mov
jmp
cmpsb
dec
sub
jl
das
sub
mov
inc
and
xchg
push
lea
sbb
paddusb
jg
outsb
mov
xor
lds
sbb
insl
mov
xor
lds
lds
push
int
mov
jle
pop
loope
inc
push
cwtl
lods
lcall
mov
sbb
mov
cmp
popa
dec
sub
add
cwtl
lods
sub
mov
push
enter
incl
push
inc
pop
enter
push
and
ret
mov
clc
mov
and
jns
clc
pop
testb
mov
add
mov
fstps
or
pop
fldenv
and
in
lods
push
jg
jge
xlat
or
jbe
inc
lods
and
jge
sbb
jnp
add
sub
sbb
mov
mov
xchg
ss
jno
mov
mov
sub
xchg
out
lahf
jbe
frndint
pushl
and
cmp
adc
incl
jg
or
and
dec
inc
jb
outsb
sbb
xchg
push
or
loop
adc
and
nop
cmp
jecxz
loopne
ret
sub
sbb
psllw
dec
daa
iret
dec
xor
add
out
divb
add
xchg
dec
jmp
cmpl
or
hlt
fdivrl
pop
jno
aaa
shlb
rcll
mov
addl
or
add
pop
or
dec
ss
pop
and
jg
pop
mov
inc
test
imul
pop
mov
push
fsts
sahf
jno
fdivrl
in
inc
xchg
mov
xchg
pop
imul
outsl
aaa
fbld
ljmp
push
aas
dec
or
mov
int3
addr16
iret
shl
pop
mov
cmp
sub
adc
bound
loopne
xchg
stos
imul
das
mov
inc
and
pop
push
push
and
dec
sub
daa
add
or
jmp
xchg
scas
jge
xorb
mov
dec
inc
or
pop
cmp
fmull
adc
jo
es
mov
add
loopne
xchg
loop
mov
test
sbb
mov
mov
sub
push
or
fwait
cmp
test
les
icebp
call
mov
lock
adc
mov
dec
insl
cmp
clc
aaa
sub
push
aas
and
in
pusha
sub
sti
pop
ja
popf
sub
mov
call
jbe
vmovdqa
adc
lock
xlat
jl
dec
lods
sub
or
sbb
imul
mov
dec
in
mov
mov
dec
cmpb
aad
jmp
call
es
fisttpll
dec
arpl
out
jge
je
fisubl
mov
mov
ficomps
loopne
adcl
ja
jmp
push
add
ljmp
and
mov
mov
in
mov
push
lods
jb
xor
and
push
xchg
lea
out
imul
out
dec
shl
arpl
pusha
jns
sbb
mov
test
sub
jl
dec
add
fistpll
les
and
pop
and
dec
inc
call
inc
cmpb
dec
or
ret
fsubs
add
test
mov
popa
roll
movsl
ret
xor
jbe
jae
lcall
nop
cmp
imull
ja
in
mov
es
pop
js
jae
push
sub
pop
aaa
iret
lcall
jg
popa
bound
xchg
mov
mov
xchg
idivl
fwait
jp
outsl
cld
add
insl
jnp
or
cmc
jno
jp
adc
insb
jbe
jbe
mov
pushf
out
mov
or
mov
cmp
enter
fs
shrb
shrl
dec
xchg
jno
add
cs
stc
adc
adc
sti
loopne
xchg
mov
pop
push
sub
cld
adc
mov
add
sub
sub
mov
insb
jae
scas
adc
ret
and
insl
je
xchg
dec
cmp
mov
icebp
insb
nop
mov
push
aad
xchg
pop
dec
ret
cmc
repnz
mov
jns
xchg
mov
dec
pop
je
sbb
add
outsb
lret
mov
sbb
xchg
xor
add
xlat
xor
fucomip
std
and
xchg
jo
jp
sbb
les
pop
add
jno
or
testl
outsb
fistps
loopne
pusha
insl
jae
jmp
sub
or
xchg
xchg
cmp
mov
out
push
jo
cmp
push
mov
into
push
sti
out
sbb
sub
xchg
dec
repnz
sub
push
adc
ja
icebp
loopne
lea
jbe
insb
dec
mov
inc
cmpsb
push
sub
mul
je
sbb
pop
out
ficomps
or
jge
lods
aaa
jo
inc
or
dec
in
pop
jmp
mov
dec
mov
jne
push
xchg
pushf
mov
xchg
mov
inc
outsl
xor
je
jnp
out
sub
jb
ds
xor
mov
arpl
lods
mov
sbb
sbb
jbe
add
dec
push
aaa
sbb
push
xchg
xor
push
xchg
mov
fldt
cmp
xor
xchg
leave
lcall
xor
mov
jns
xchg
ret
push
or
mov
or
pop
jmp
xchg
xor
jne
sub
das
maxps
jo
ret
aas
inc
add
xchg
xchg
or
mov
inc
mov
jnp,pn
movsl
hlt
test
insl
or
mov
push
xchg
mov
add
mov
scas
loop
add
fsub
insl
test
ja
jbe,pt
movsl
pop
mov
cli
es
rcr
xchg
nop
stc
call
dec
sbb
mov
pop
and
fadd
push
add
pop
or
mov
and
mov
lock
inc
mov
dec
jg
je
xchg
movsb
stos
pop
mov
add
or
je
adc
shrl
and
mov
adc
les
or
call
xchg
fldt
or
mov
mov
mov
xchg
je
pop
iret
addb
lcall
and
jge
sbb
aaa
adc
cmc
mov
mov
popf
xor
add
xchg
add
or
push
out
cmpsb
xor
outsb
jae
js
repz
call
mov
xor
sbb
jge
icebp
pop
testl
gs
hlt
jg
mov
mov
stc
inc
mov
sarb
lods
push
or
dec
in
mov
or
add
test
push
push
jle
jnp
jmp
xchg
call
not
ret
lcall
cwtl
add
hlt
adc
jo
adc
ds
arpl
scas
lea
lret
mov
mov
clc
inc
loopne
mov
stos
inc
and
fwait
or
pop
or
out
and
sub
fcomps
js
loope
xor
sahf
mov
lret
or
ffree
mov
aam
xlat
mov
dec
ljmp
incl
mov
pop
insb
bswap
imul
sbb
addl
or
pop
orl
xchg
addr16
push
jecxz
cmp
xchg
lock
rcrb
mov
jp
mov
iret
add
imul
aaa
test
lock
mov
addr16
loop
cmpsl
frndint
jl
sti
mov
je
flds
test
sub
mov
mov
iret
xor
mov
sbb
xor
inc
and
inc
sbb
mov
out
inc
ss
sbb
pop
outsb
loope
mov
adc
stc
add
jmp
in
and
loop
loopne
mov
mov
push
jo
sub
std
fmuls
lock
xchg
push
jle
jno
jl
sbb
mov
xchg
jbe
rcll
xor
inc
lcall
popf
mov
out
movsb
and
mov
mov
xchg
sub
fsqrt
divb
subb
in
addr16
sbb
ja
push
or
enter
fistps
test
mov
es
mov
test
loopne
imul
pop
mov
out
mov
fdivrs
nop
sub
sbb
pop
and
and
mov
inc
sub
scas
sbb
les
das
test
xlat
push
out
iret
bound
loop
add
stos
dec
sub
in
mov
or
push
out
dec
adc
sarl
lahf
mov
adc
popl
js
adc
add
mov
mov
jo
jbe
inc
sahf
and
fiaddl
xor
imul
jbe
outsl
mov
xchg
or
dec
jno
dec
push
aam
jg
cmc
sbb
pop
inc
dec
das
dec
push
fdecstp
das
insb
add
imul
jbe
mov
fildll
mov
sub
inc
xchg
dec
hlt
iret
in
cltd
add
jg
inc
mov
jg
in
mov
or
lods
clc
dec
inc
push
jmp
sbb
inc
loopne
lahf
mov
xor
insl
popa
pop
push
jl
cmp
mov
fstpl
test
add
pushl
jg
lds
adc
xchg
xchg
pop
ror
mov
dec
pusha
paddq
sbbl
lds
repnz
test
jg
push
jb
shl
mov
mov
mov
xchg
in
mov
js
jl
pushf
or
inc
xor
bound
ret
sub
inc
mov
inc
xorl
adc
xchg
push
and
rolb
jbe
mov
cmpsb
pop
adc
jge
cld
add
push
iret
add
test
pop
xor
and
cltd
jp
ja
mov
cmp
outsl
mov
aas
pop
repz
sbb
aaa
mov
in
sarb
or
dec
jns
adc
pop
xchg
insl
sub
adc
sbb
pop
mov
or
inc
scas
test
sbb
insl
call
mov
sarl
outsl
lcall
and
mov
jl
jmp
out
xor
sub
or
arpl
pop
mov
sbb
cmpsb
or
test
cs
sbbb
xor
fiadds
out
sub
mov
movsl
stc
fbstp
and
lahf
mov
ret
jne
loope
dec
shll
cs
pop
xchg
sar
push
pop
ja
cmp
xchg
mov
das
inc
xor
into
sbb
xlat
jg
sti
fisttpl
insb
pop
cmpsl
cwtl
hlt
jo
xor
scas
pop
scas
jg
std
sbb
out
sbb
jb
lcall
add
jge
push
inc
dec
mov
jnp
xchg
shr
ror
pop
cld
decb
xchg
scas
int
or
xor
mov
cmpsl
negl
adc
movsl
lods
adc
mov
loope
cvtpi2ps
push
std
and
xor
inc
and
xchg
sub
cmp
leave
imul
mov
pop
cli
mov
xor
inc
outsl
rcrl
fisubl
pop
sti
enter
and
xchg
dec
add
imul
outsl
mov
or
adc
in
pushf
pop
mov
data16
xor
pop
xlat
cld
lods
mov
ljmp
insl
fists
dec
test
rcrl
cmp
inc
arpl
in
sbb
repnz
add
mov
mul
outsl
js
mov
mov
adcl
jg
movsl
xor
mov
mov
cmp
loopne
fcos
decl
cmp
adc
adc
cli
mov
cmp
sub
lret
pop
sbb
mov
inc
pop
xor
cmovns
and
std
lods
or
cmc
jo
or
or
xor
jno
lods
cmp
xchg
push
test
mov
call
cmp
pop
in
imul
xchg
inc
mov
mov
jg
inc
shl
ret
outsb
out
daa
mov
jg
enter
pushl
add
sub
and
repz
leave
insl
aad
pop
out
call
addr16
lahf
mov
or
movsl
jg
jle
and
cmp
in
test
sbb
cmpsb
subb
scas
xor
push
and
mov
adc
mov
test
loopne
shlb
jl
leave
sbb
jg
in
ja
lahf
addb
js
push
insb
jmp
pop
fwait
mov
cmp
sbb
adc
sub
rcll
push
repz
mov
inc
ss
test
das
std
out
pop
je
rcll
out
jl
cwtl
pop
xchg
rcr
and
out
inc
loope
add
cs
lret
call
pop
and
inc
repz
aas
jge
mov
cmp
out
movsl
jnp
mov
mov
cltd
mov
divb
ret
and
inc
add
outsb
lds
mov
xchg
add
xchg
xchg
xor
pop
or
and
jecxz
lret
and
inc
push
lods
shlb
dec
sub
call
insb
popf
js
add
jecxz
int3
pop
fisubrl
insl
mov
add
data16
cs
ret
dec
std
daa
jmp
fnstsw
sub
popa
das
es
jae
push
sbb
jmp
and
movsl
xor
adc
imul
hlt
jo
pop
call
ljmp
ret
or
cmc
jmp
aad
sti
inc
push
xorl
cltd
push
mov
loope
addr16
dec
push
out
outsl
push
pop
neg
pop
adc
push
repnz
in
jnp
cmp
inc
push
in
fstpl
push
rcll
loope
cld
loopne
pop
enter
stos
mov
sarl
clc
xlat
mov
push
xorl
adc
outsl
jmp
sub
out
and
xor
out
pop
popa
iret
lahf
dec
loopne
sub
jmp
sar
cmp
movb
inc
lods
push
pop
mov
hlt
or
add
in
cmp
shl
int
leave
rolb
les
fwait
sub
mov
inc
push
ljmp
xor
lods
mov
idivb
repz
push
jo
push
or
cltd
add
fistpll
push
adc
lret
pop
scas
fcoml
add
ss
mov
mov
xor
pop
sbb
lahf
jb
mov
lcall
inc
je
mov
jne
mov
je
jbe
inc
cmp
negb
cmp
inc
adc
jb
sub
pushf
outsl
pop
dec
and
dec
cmp
aam
js
fwait
test
and
pop
push
sbb
mov
dec
in
sub
mov
daa
in
mov
pop
cmpsl
push
cmpsb
sbb
iret
scas
add
jmp
pop
xchg
inc
test
outsl
je
ljmp
out
pop
divb
sbb
clc
shlb
pop
nop
add
das
icebp
lds
inc
jmp
and
in
incl
je
lahf
add
lahf
adc
inc
mov
mov
sahf
ret
cmp
xor
adc
mov
push
xchg
hlt
xlat
and
inc
xchg
xor
push
mov
cltd
ds
cmp
fucomi
mov
sbb
inc
xor
and
sti
cmp
jmp
faddl
jg
xchg
inc
insl
and
fwait
jecxz
pop
mov
ror
addr16
pusha
ret
pop
repz
push
or
lret
in
jg
or
push
rcll
jl
ret
dec
test
mov
jle
test
mov
jne
cmp
adc
adc
out
int
out
push
ret
in
incl
iret
jo
ljmp
sbb
adc
cmp
pop
sbbb
dec
xorb
add
push
test
aas
xchg
shl
pop
cli
jg
test
sbb
hlt
test
ret
in
data16
and
aam
aad
jnp
or
dec
fwait
iret
ffreep
insb
mov
push
fisubl
mov
sub
cld
lret
push
and
push
jg
cmc
incl
les
and
jp
mov
mov
outsl
mov
cmpsl
repz
arpl
cmpsl
fildll
mov
popl
loop
mov
aad
jg
outsb
shrl
adc
movsb
cmp
decb
lea
add
mov
add
sbb
cmpsl
out
sbb
jo
xchg
and
lds
das
outsl
jne
stos
push
lcall
in
adc
inc
and
push
test
in
or
mov
sbb
xor
add
out
aad
js
cmp
arpl
and
and
xchg
jns
call
repnz
arpl
sbb
jle
addb
pop
jbe
popa
shrb
xor
mov
out
inc
adc
and
cmp
lret
je
jbe
int3
push
inc
inc
dec
push
push
insl
dec
pop
pop
sbb
mov
ret
divl
andb
sahf
inc
or
jae
decl
add
xor
andb
adc
jns
in
mov
adc
jae
cli
mov
pop
adc
dec
push
outsl
push
pop
scas
jmp
sbb
pushf
rorb
scas
adc
mov
in
pop
data16
sub
pushf
movsb
pop
add
ret
aas
pusha
insl
sub
das
std
xchg
pop
lods
and
mov
repnz
sub
das
cld
das
mov
inc
movsb
gs
jb
xchg
adc
cli
xchg
ss
sahf
push
movsl
inc
xchg
test
push
testb
js
xor
mov
bound
inc
idivl
cmp
ja
pusha
pop
enter
loope
adc
and
push
push
jmp
movsl
inc
int3
sbb
leave
jg
dec
push
sbb
cmc
scas
cltd
sbb
adc
jne
and
adc
xor
add
ret
adc
or
je
cmp
inc
icebp
call
ja
mull
aam
and
dec
push
mov
pop
xorb
sub
pop
dec
outsl
std
or
popa
sbbb
dec
aad
push
jbe
push
or
sbbl
pop
add
lock
push
pushf
sub
test
stos
jmp
cld
fsubl
push
out
push
js
iret
xor
jne
cmpsl
add
icebp
add
fisubs
rorb
lock
rcl
xor
insb
cld
lcall
and
sahf
les
ss
fcmovnu
aam
inc
call
xor
push
nop
pop
jg
add
mov
int3
jg,pt
inc
int3
add
xchg
aam
inc
loop
lahf
or
lock
icebp
dec
or
add
call
mov
loop
rorl
and
and
lods
mov
push
mov
cmp
call
dec
sbb
rcrb
hlt
sbb
imulb
subb
xor
fs
pop
lcall
aad
adc
andl
mov
and
push
lret
mov
ret
repnz
sarb
clc
lahf
std
xor
je
les
shlb
jge
sub
in
push
ds
pop
addr16
pop
jns
jb
lret
pop
loopne
insl
xchg
cmp
mov
jne
dec
jno
inc
xor
aam
dec
cmp
pop
jl
test
test
and
xchg
xchg
push
push
std
in
inc
jbe
call
mov
sub
adc
call
and
jl
jle
dec
test
push
dec
sbb
sbb
adcb
fcomip
test
loop
lcall
stc
stos
test
std
inc
negl
dec
and
push
fwait
mov
fstl
insb
or
incb
mov
es
out
jno
jae
clc
and
mov
insb
out
test
stos
inc
sub
ret
fwait
into
xorb
xchg
lret
mov
test
add
or
scas
addr16
jmp
icebp
pusha
mov
push
cmp
push
out
mov
mov
jg
repnz
dec
push
pop
in
pop
and
aad
cld
mov
sbb
mov
popa
adc
bound
pop
fndisi(8087
mov
sub
mov
mov
mov
pusha
ret
in
or
dec
data16
mov
mov
addl
rcrl
shl
mov
movsl
or
cmp
jbe
add
sub
xchg
popa
sbb
cmpsl
xchg
sbb
sbb
jg
sbb
int
xchg
mov
ja
cld
bound
imul
jns
xchg
xorb
xor
ds
gs
clc
int3
cvtpi2ps
xor
cmp
pop
mov
add
pop
icebp
fbld
mov
sbb
sar
inc
mov
jo
mov
cwtl
in
dec
cmpsb
push
nop
jbe
add
iret
adc
frstor
add
fsubr
cmp
push
push
iret
xor
jae
subl
repnz
xor
movsb
dec
and
rol
pop
data16
movsb
sbb
fisttpl
mov
aaa
filds
call
pop
ret
add
cmp
shll
adcb
pop
js
ljmp
xchg
inc
adc
push
out
fsubrs
cwtl
mov
adc
pop
cwtl
test
mov
jns
cli
mov
mov
test
xchg
dec
jno
xor
shl
inc
jl
inc
aaa
mov
inc
push
sub
and
ljmp
add
inc
and
xor
lret
cmp
fistpl
call
jne
add
das
aam
pop
flds
shll
stc
cs
add
in
sub
dec
nop
nop
cmp
xlat
mov
test
fisubrs
lret
int3
mov
push
clc
int
cwtl
fwait
divb
mov
lea
jp
jl
adc
decl
pmaxsw
movsl
jg
sub
jecxz
dec
or
adc
push
es
leave
push
cltd
pop
clc
lods
adc
movsl
pop
out
and
sahf
push
sbb
xor
pop
test
add
out
pusha
mov
adc
fisubrs
loopne
pop
test
arpl
aaa
push
mov
mov
jmp
mov
mov
out
loope
pop
jg
adc
xchg
xchg
sbb
out
mov
push
js
or
lods
mov
xchg
xchg
xor
push
pop
ret
incl
mov
dec
aas
jle
xchg
mov
movsl
mov
fisttps
sarl
xchg
xor
dec
ret
mov
pop
imull
xchg
or
lcall
ja
fmuls
inc
orl
cmpsb
pop
ljmp
mov
shlb
cmp
movb
leave
outsb
mov
clc
pop
nop
xchg
mov
pop
jae
mov
cmp
test
inc
inc
jp
dec
mov
imul
mov
int3
and
push
rclb
push
je
dec
xor
fwait
dec
je
sbb
lret
mov
outsb
mov
or
sbbb
jbe
push
and
ljmp
pop
mov
push
xchg
addb
dec
pop
push
in
mov
or
or
insl
daa
rol
mov
mov
ficoms
sub
xchg
ja
outsl
mov
adc
add
mov
mov
cwtl
addb
push
pop
cwtl
loope
mov
xchg
add
or
inc
std
rcr
pop
in
les
repnz
dec
mov
outsb
jnp
jns
call
popa
outsb
xor
fmull
mov
iret
pop
fcomi
cmpsb
push
fiaddl
jb
out
and
fidivl
jne
mov
and
sbb
loopne
imul
sbb
lahf
xchg
mov
dec
ss
inc
cld
mov
pop
cli
sbb
sbb
fucom
cli
lahf
xor
pop
out
push
ds
cs
mov
jge
mov
cmc
ljmp
mov
lcall
enter
cmp
sub
mov
rolb
pop
test
outsl
pop
cli
aaa
xchg
xorb
push
sbb
jl
loope
rcr
js
bound
mov
dec
or
sub
shrb
inc
jecxz
fldt
xchg
push
fstpt
add
dec
xchg
test
repz
fistpl
xchg
push
push
add
pop
sbb
and
bound
test
movsl
in
sub
iret
mov
xor
push
add
mov
popa
xchg
pushf
mov
call
sti
daa
mov
cmp
add
inc
mov
inc
adc
mov
mov
je
push
mov
cmp
cmc
iret
inc
int
mov
pop
sbb
lcall
or
call
mov
daa
xor
sahf
cld
push
pop
hlt
pushl
dec
push
inc
dec
xor
push
cmc
jo
test
es
add
aad
mov
adc
mov
jle
lods
sub
aas
outsl
push
fsubl
in
xchg
xchg
test
jae
outsl
mov
inc
inc
jp
sbb
or
aaa
inc
lahf
jbe
sbb
push
shrb
xor
inc
adc
pop
sub
pop
call
adc
lds
insb
pop
adc
mov
nop
push
mov
cmp
js
int3
cwtl
pushf
inc
mov
push
bound
les
lea
and
mov
pop
mov
cmp
out
loopne
mov
mov
sub
mov
pop
cmpsb
adc
mov
or
xchg
rcrl
popa
mov
xor
js
movsb
mov
or
mov
mov
scas
pop
jl
ret
movl
lock
mov
add
dec
pop
and
cmp
decl
push
adc
jne
jle
sbb
sbb
into
sti
mov
insb
push
jmp
mov
insl
xor
pop
and
and
sbb
data16
cli
repnz
xchg
test
fcomps
les
sahf
aaa
sub
and
ljmp
dec
mov
inc
jne
dec
pop
push
and
inc
mov
out
mov
data16
add
sti
pop
lcall
dec
push
insb
adc
adc
sub
mov
mov
add
into
pop
mov
int
push
inc
xchg
xor
clc
xor
xchg
cmp
mov
outsl
cli
and
xchg
into
roll
lea
addr16
pop
sbb
mov
sbb
mov
mov
add
bound
mov
fs
sbb
cmp
fisubrl
sub
adc
cmp
pushf
or
pop
push
orl
jnp
xor
push
dec
inc
sahf
ljmp
mov
cld
ljmp
aad
xor
mov
jg
addl
movsb
push
cmp
rorl
andb
xchg
ljmp
mov
cltd
enter
jo,pt
mov
cli
mov
or
adc
sbb
jo
mov
fcomps
mov
aam
adc
mov
jge
fwait
or
add
mov
pop
mov
fstpt
daa
inc
adc
pop
icebp
aaa
rorb
adc
aas
fs
push
outsb
mov
imul
and
cld
mov
call
adc
dec
mov
icebp
sub
lock
outsl
xor
leave
mov
pop
push
xchg
push
in
push
in
mov
je
dec
bound
push
decb
ficoms
ret
roll
add
testl
inc
jb
inc
add
or
aam
xor
cmc
or
sbb
mov
dec
pop
adc
test
mov
aam
gs
sti
test
lret
sbb
dec
nop
sahf
adc
cmpl
jle
dec
sbb
add
rcl
add
icebp
test
std
pushf
jne
es
pop
cmp
pop
mov
mov
pop
mov
lock
enter
ficompl
and
pop
test
mov
lcall
decl
std
inc
mov
cmp
insb
gs
adc
jb
inc
jle
cld
sbb
mov
dec
mov
xchg
cld
push
subb
dec
insb
adc
inc
bound
ljmp
or
ja
adc
popl
mov
mov
xchg
xor
inc
pop
dec
fwait
adc
mov
pop
movsb
rcrl
aad
xchg
adc
cltd
add
mov
sar
mov
inc
sbb
mov
sbb
pop
push
push
fwait
inc
rorl
in
add
adc
lea
inc
popa
mov
and
xchg
mov
nop
stos
cmp
xchg
dec
push
rclb
inc
push
ret
pop
stos
adc
aad
sub
popf
push
or
push
call
rorb
cmpl
jae
clc
lret
ror
cs
mov
adc
adc
push
test
push
lods
scas
shlb
cmp
push
push
add
dec
pop
cmp
push
add
aas
push
fcmovnu
cli
push
subl
pusha
sbb
pop
test
ss
and
adc
xor
push
add
dec
pop
cmp
mov
push
lahf
cmp
shll
out
pop
push
and
ljmp
ljmp
mov
xchg
pop
std
outsb
dec
xchg
jns
jmp
inc
add
or
mov
mov
xorl
inc
add
adc
adc
insl
or
call
sub
sbb
and
in
gs
mov
push
mov
fiadds
lods
outsl
xchg
cmpsb
hlt
arpl
add
sub
neg
xchg
jbe
mov
mov
sti
dec
loop
icebp
aaa
xchg
and
jge
pop
test
mov
decb
rcrl
pusha
sbb
fbstp
mov
xchg
and
repnz
mov
das
add
mov
ds
daa
sahf
call
jmp
adc
les
arpl
mov
xchg
lcall
dec
fldenv
mov
nop
mov
or
pop
out
mov
scas
push
repz
int3
inc
and
call
add
add
xlat
test
cld
test
cmp
jne
cld
popl
xchg
divb
inc
inc
mov
cmp
sub
and
fnstsw
ss
pop
mov
dec
clc
pop
fadd
mov
mov
mov
pop
pop
in
divb
and
ficomps
das
filds
clc
push
arpl
cmp
jns
xchg
adc
sub
bound
jno
jg
into
dec
xlat
clc
outsl
mov
jg
inc
andl
mov
and
test
mov
daa
fsubl
outsl
push
or
mov
ds
push
aaa
jle
cmp
mov
mov
scas
cmpsb
sub
bound
inc
or
sub
out
mov
adc
mov
xchg
sbb
sti
add
xor
push
cmpsb
cmc
mov
jl
call
popf
mov
hlt
jle
hlt
hlt
mov
xor
dec
daa
out
sub
push
xor
decb
or
stos
pop
jge
sub
popf
mov
fists
cmp
adcb
sbb
leave
push
jbe
out
mov
adc
add
dec
or
inc
push
sti
jmp
popa
cmp
mov
push
lfs
xor
push
movsl
pushf
test
cmp
cld
lea
push
xchg
jne
scas
insl
ja
mov
addb
inc
mov
daa
sbb
cmpsb
fwait
dec
inc
negl
sbb
push
rcrb
xchg
enter
out
inc
inc
add
idiv
jg
mov
push
roll
lret
lods
add
lret
addl
add
push
sbb
out
lods
mov
je
ffreep
aaa
push
mov
shlb
stc
test
and
lret
cmp
or
push
aad
clc
fldt
lock
out
mov
je
xchg
xchg
mov
lods
mov
mov
add
idivl
mov
xchg
inc
fwait
lods
test
insb
jno
popa
push
out
mov
mov
add
rcll
or
mov
fcoms
pusha
mov
jg
sarb
out
into
adc
ljmp
outsl
mov
sbb
xor
adc
adc
mov
sbb
popf
cmp
dec
and
dec
and
and
jge
or
or
aaa
test
addr16
xchg
or
sbb
jecxz
mov
jno
or
cmp
inc
pusha
sbb
push
inc
add
push
into
ret
and
lahf
lret
movsb
test
mov
shr
getsec
xor
mov
ljmp
adc
ljmp
testl
cli
fistpll
les
mov
mov
push
jmp
mov
test
xchg
cwtl
mov
popa
push
pop
cmp
cmp
mov
lahf
push
pusha
inc
adc
orb
mov
push
cli
pop
sbb
xor
mov
mov
mov
pusha
repz
and
addb
mov
add
ds
adc
lds
mov
and
loope
sub
cmp
push
test
fldenv
aas
fdivrs
dec
pop
cmp
sbb
jnp
shll
and
mov
adc
mov
jo
xor
jno
fstpt
repz
jno
pop
addr16
pop
insl
rol
sbb
xor
popf
test
mov
cli
xchg
mov
outsl
pop
nop
je
jecxz
dec
or
pop
ljmp
add
ds
mov
mov
leave
aad
and
insl
mov
jbe
jno
in
xchg
add
movsb
push
mov
clc
pop
pop
or
out
pop
sub
fdivrp
pop
cmp
mov
pop
cmp
xor
mov
xor
mov
test
adc
ror
es
push
mov
mov
mov
sbb
int
aaa
jp
aad
scas
cltd
out
daa
repz
push
sub
sub
pop
cwtl
daa
sub
ret
ss
inc
pop
inc
adcb
or
mov
sarb
test
out
popf
xchg
sub
ficoms
pop
jo
adc
std
sbb
shrl
inc
shrl
or
in
decl
cwtl
sub
inc
int
sub
test
add
jg
sahf
adc
cmp
shr
pop
repz
xchg
inc
scas
cwtl
xorb
cmc
sbb
and
testb
mov
xor
adc
gs
loopne
imul
adc
sahf
shrb
aas
adc
fistpl
pop
and
std
testb
rcrl
push
lock
jo
mov
shrd
mov
xchg
pop
das
incl
xor
testb
test
xor
xor
and
mov
arpl
add
test
and
scas
cld
decl
fwait
push
sbb
dec
jnp
inc
xor
in
sbb
and
rolb
add
xor
mov
xchg
add
push
push
sbb
sub
test
dec
std
xchg
jg
cmc
push
and
call
sbb
test
dec
sub
add
movsb
adcb
adc
cmp
int
dec
add
clc
mov
lock
int3
push
xor
imul
call
sbbb
mov
jecxz
je
jb
and
mov
xor
dec
adcb
xchg
jno
das
xor
fisttps
xlat
imul
push
inc
repz
pusha
mov
jl
xchg
mov
cld
dec
jno
int3
rcl
dec
push
imul
loop
cmp
jl
mov
out
in
push
aaa
pop
stos
lock
mov
ret
cmpsb
sbb
pop
fcmovu
in
cmp
frstor
leave
jne
enter
test
or
lcall
mov
push
mov
insl
add
dec
mov
xor
stos
mov
and
mov
mov
ljmp
cmp
xor
jnp
mov
jle
movsl
sbbb
push
adc
jno
loop
cli
pop
das
cmp
cli
outsb
out
ja
dec
test
jae
lahf
jmp
stos
je
insl
pushf
lods
mov
pop
loopne
adc
push
mov
mov
adc
lock
dec
or
push
loopne
cmpsl
and
test
sar
call
push
xchg
xor
test
enter
xchg
sbb
mov
ret
enter
sub
xchg
sbb
mov
in
icebp
sub
fnstcw
jge
iret
aas
dec
les
cmp
jg
add
push
and
cmpb
scas
push
sbb
sub
push
mov
mov
fcomi
push
es
jno
hlt
ffreep
or
jg
mov
aaa
loop
pop
mov
jp
outsl
sbb
lock
pop
mov
adc
and
sub
daa
inc
pusha
cli
ds
test
push
mov
push
pusha
mov
ss
push
gs
xor
xor
movsl
shlb
mov
ljmp
push
mov
cmpsb
lock
add
aaa
fcomps
and
mov
xor
js
pop
sub
imul
mov
sbb
cmpsb
lods
insb
dec
insb
xor
pop
movsb
popa
dec
xlat
xor
inc
js
xchg
call
sub
or
mov
lea
mov
push
bound
mov
push
fisttpl
data16
ret
jecxz
fstps
push
xchg
jg
ret
add
mov
std
push
jle
or
pop
push
jg
pop
sbb
rolb
rcll
lods
inc
scas
jecxz
mov
je
sar
sub
cli
stos
xor
mov
inc
pop
sub
idivb
pushf
cmp
mov
sub
call
lahf
cltd
push
mov
inc
test
lcall
cmp
movsl
int
testb
jne
loopne
test
lods
sar
adc
xor
sar
pushf
sbb
jmp
xor
add
jo
lret
shll
push
lea
add
aam
cmc
xor
cmp
push
jp
mov
mov
addr16
ds
rol
jl
ljmp
dec
jae
mov
loope
mov
cld
in
rcrb
fdivrs
jo
int3
or
cli
cmpsb
fimuls
push
test
fistl
sub
lcall
pop
mov
and
xchg
out
dec
shrb
fildll
fsubrl
inc
sahf
aad
inc
and
dec
sub
pushl
mov
aas
sbb
or
ljmp
xchg
addr16
cld
jg
or
mov
and
xchg
in
jmp
cli
sbb
and
mov
test
jne
xchg
sub
aaa
mov
ud2
enter
cmp
lret
xor
add
mov
xor
icebp
adc
test
stc
push
inc
push
insl
xchg
mov
ret
mov
inc
jnp
cwtl
mov
mov
pop
mov
pop
decb
push
or
sub
cmp
stos
js
push
outsl
push
std
sarl
cmpsb
or
jg
dec
sbb
fdivrs
xor
inc
sub
jle
js
or
push
dec
cmc
idiv
push
or
mov
add
push
loop
sub
lret
mov
lcall
shlb
popf
push
cld
cmp
jmp
filds
outsb
aaa
push
in
cmp
jbe
mov
rcrb
mov
jne
dec
dec
push
sub
adc
test
mov
push
dec
push
and
dec
xor
jne
add
in
int3
popa
mov
mov
ret
and
jne
pushl
loop
popa
fadds
dec
aas
add
stos
hlt
in
cltd
mov
pop
pop
mov
sarb
pushl
mov
repnz
rol
in
sub
pop
pop
mov
testb
ss
aaa
mov
mov
dec
call
in
or
repnz
loope
jecxz
pop
stos
das
js
adc
inc
jmp
aas
inc
cmp
in
mov
jecxz
mov
mov
fldl
movsb
xor
adc
jbe
xor
test
ja
xor
sub
mov
je
mov
jmp
adc
add
mov
pushf
lock
jle
repnz
outsl
fistpll
cltd
iret
jnp
or
idiv
and
ficoml
mov
push
jb
push
mov
std
sbb
lock
push
sub
test
data16
xor
adc
sub
mov
lea
ljmp
pop
cmp
inc
lods
cs
sahf
xchg
fidivrl
int3
xor
sub
jb
or
xor
sbb
into
mov
add
and
add
lret
int3
mov
arpl
mov
cmc
insl
sub
mov
stc
adc
lods
outsl
outsl
out
add
cmp
jno
inc
inc
mov
mov
adc
in
mov
test
jbe
cmp
out
test
mov
jns
mov
call
lcall
mov
cwtl
sbb
push
cmp
mov
cmp
mov
adcb
cld
lods
cmpsl
xchg
imul
pop
jo
mov
pop
jge
jbe
scas
sbb
xchg
or
repnz
out
movsl
outsb
sbb
pop
dec
pop
std
or
xchg
stos
dec
xchg
lret
push
push
xor
cmc
aam
movsl
sub
xchg
mov
fwait
mov
pushf
das
xchg
mov
mov
jg
inc
mov
sahf
cmpsl
mov
adc
cmpb
int
shlb
pop
shlb
std
adc
pop
addl
shrb
mov
stc
and
jbe
std
mov
push
sub
out
cmp
fcomp
clc
and
mov
andl
push
add
bound
jg
inc
scas
add
cmc
leave
sub
inc
jecxz
mov
inc
pushf
das
inc
fistl
ret
mov
jo
mov
pushf
or
mov
lcall
add
push
and
sub
sar
stos
jnp
rorl
mov
mov
outsl
mov
push
insl
shll
push
inc
lock
mov
adc
push
pop
test
insl
call
cli
jb
push
xor
sbb
mov
xor
xchg
push
je
mov
dec
enter
push
sar
xor
gs
or
clc
adcb
mov
add
inc
sub
mov
jne
sbb
ret
jo
adc
jle
arpl
scas
pause
das
ja
push
iret
dec
ljmp
inc
mov
or
test
fld
mov
sub
mov
imul
mov
pop
aad
dec
pop
jae
mov
sbb
mov
add
shll
imul
idiv
dec
dec
push
mull
cmp
jmp
add
inc
dec
and
mov
and
mov
cld
inc
mov
into
jb
imull
dec
adc
sub
xor
mov
pop
mov
adc
jmp
or
imul
xchg
adc
jmp
inc
jp
fcoml
mov
into
lahf
pop
jnp
out
dec
aas
lcall
mov
frstor
jno
jle
mov
fstpt
mov
notb
cmc
cli
push
jp
and
xchg
icebp
mov
pop
mov
cli
ja
sbb
in
xor
inc
outsl
mov
push
insb
outsl
in
cmpsl
push
add
push
jmp
push
sub
cmp
xorb
addl
enter
add
dec
mov
xchg
dec
cli
and
jg
mov
xchg
out
aad
clc
icebp
xchg
scas
mov
stos
push
rcrl
pop
jl
xlat
adc
test
mov
les
insl
xor
mov
lock
jl
out
or
out
ds
repnz
pushf
inc
rcl
cld
xorl
pop
mov
je
push
test
adc
iret
lods
jbe
jbe
ds
in
cwtl
jno
fimuls
adc
in
dec
hlt
or
leave
cwtl
mov
ss
cmpsl
fucomi
ljmp
mov
daa
cwtl
cmp
or
scas
pop
stc
scas
xor
and
decl
test
inc
xchg
xor
jecxz
or
inc
test
fidivrl
rolb
aas
adc
imul
xchg
das
xor
or
jo
lods
cli
pop
mov
jle
xor
popa
jo
lahf
rcrb
sub
js
mov
in
inc
bound
add
inc
mov
adc
jle
repnz
js
xchg
push
mov
mov
xchg
fsubrs
ds
cli
cmp
sub
and
scas
mov
and
mov
pop
pushf
mov
mov
inc
stos
orl
out
push
jnp
fstl
pop
dec
pop
xor
cmc
mov
inc
or
iret
mov
out
or
fcomps
subb
dec
or
adc
std
sub
or
outsl
push
bound
sbb
inc
out
cli
mov
gs
jbe
push
and
les
pusha
cli
dec
adc
jg
adc
xchg
push
or
mov
dec
and
mov
outsb
cmpsb
and
test
mov
hlt
mov
decl
mov
outsl
shlb
cltd
push
fisubs
loop
mulb
shr
test
jl
pop
imul
in
mov
cwtl
push
push
movsb
adc
stos
fists
pop
push
std
dec
ffree
int
jo
add
scas
xor
test
shll
lret
and
mov
xor
jmp
fldt
cmp
out
int3
adc
jnp
mov
sahf
movsl
outsl
or
jno
jbe
sbb
pop
jp
insb
insb
push
pop
mov
std
call
test
fnstenv
loop
lcall
sub
fldenv
dec
insb
das
adc
jle
lds
test
push
xor
xor
cmpsb
sbb
xor
out
or
jne
das
add
inc
sbb
inc
imul
lods
sbb
nop
push
xor
call
movsl
mov
sbb
sbb
lcall
sti
adc
sub
movsl
xchg
cmc
xchg
pop
and
lret
sbb
xor
test
push
mov
mov
test
cmpsb
push
pop
pop
stos
dec
ret
outsl
lds
or
lea
push
or
icebp
add
cmp
cmpsl
or
scas
and
dec
lahf
and
arpl
in
shr
lret
std
lods
add
in
mov
add
cmc
mov
inc
jle
jg
hlt
xchg
adc
stos
loope
or
push
daa
popa
jmp
lds
lret
cmpsl
pop
insl
mov
jmp
adc
fcmovnu
jnp
lods
add
mov
dec
inc
adc
xadd
ret
leave
adc
cmp
stc
cltd
clc
js
jmp
mov
xor
dec
loopne
xor
pop
mov
sub
out
cltd
fwait
rorb
mov
dec
mov
add
sub
xlat
pop
inc
std
movsb
add
ja
lret
xchg
jg
dec
or
cmp
stos
fsubp
sub
xor
testb
lds
xchg
call
mov
insb
fstpt
sub
mov
lea
mov
icebp
or
loop
cmp
insl
add
call
xchg
mov
mov
sbb
xor
outsb
outsb
cmpsb
pop
scas
mov
incl
ds
call
cmpsb
add
stos
xchg
mov
ljmp
sub
mov
hlt
test
out
lea
mov
mov
imul
les
mov
fucomip
jno
xorl
mov
inc
mov
push
inc
dec
and
shrb
mov
int
cltd
push
jmp
arpl
fldl
enter
les
popf
sbb
into
cmp
pushf
mov
mov
mov
xor
pop
lock
dec
test
ljmp
adc
incl
mov
xabort
cmp
aaa
shll
and
and
xchg
or
adc
clc
push
mov
lods
test
js
mov
xchg
pop
push
xor
xor
lds
sub
jns
mov
mov
cs
adc
lcall
mov
ja
cmpsl
cmp
and
jbe
push
mov
notl
div
nop
pushf
inc
mov
mov
fnsave
xchg
in
mov
jp
lahf
adc
fidivrl
cli
or
cmp
mov
jg
dec
lock
in
insl
hlt
push
lcall
hlt
movsl
jmp
sbb
push
test
push
mov
rcl
adc
cmp
sbb
or
andl
int3
mov
mov
xlat
push
ds
ret
testb
bound
jle
ja
decb
xchg
ds
push
pushf
fsubrp
loop
repnz
rcrl
loopne
mov
aad
cmp
ficompl
out
enter
aam
ds
mov
das
les
out
add
and
adc
sbb
inc
je
in
pop
dec
inc
into
jno
or
pop
dec
nop
stc
in
gs
fwait
rcl
shl
push
rcll
push
jnp
test
into
mov
and
jne
pop
sbb
cmc
popa
lahf
mov
test
in
and
dec
fidivl
ljmp
xor
push
xor
lods
dec
ljmp
push
movsb
pop
mov
divb
pop
rclb
cmp
inc
hlt
mov
sbb
adc
jb
sbb
cmp
cli
cltd
push
sbb
test
rolb
or
jbe
inc
aaa
je
cmp
ljmp
mov
dec
idivl
test
pop
xor
jle
jl,pt
xor
pop
cld
adc
sub
gs
aad
sti
pop
cmp
pop
daa
lret
mov
mov
or
adcl
xor
notb
adc
sarl
loopne
fwait
repz
ror
jns
xor
jge
pop
sub
fstpt
push
xchg
or
mov
or
jb
add
adc
jp
xor
dec
lret
aad
roll
dec
lea
jnp
jmp
pop
rcrb
add
mov
pop
push
pop
pop
shr
psadbw
lahf
fs
decl
decl
cli
cmp
sti
mov
aaa
adc
int
or
jle
das
cld
cmp
mov
add
loope
nop
add
aad
jne
fucom
mov
aaa
push
jg
or
outsl
jge
xchg
das
bound
stos
lea
mov
mov
imul
sub
cmpsb
int
push
sti
lcall
inc
pusha
adc
cwtl
fdivrs
into
pop
es
out
cmp
dec
hlt
das
push
out
test
inc
shlb
inc
mov
arpl
ja
add
and
js
xor
lcall
testl
pushf
testb
or
dec
xor
insl
cmc
dec
add
mov
and
pop
movsb
cltd
add
add
popa
dec
repz
cmp
adc
pusha
cwtl
xchg
inc
shr
movsl
mov
out
sbb
sahf
test
pop
add
test
lret
push
movb
out
sub
ret
add
das
pop
push
xchg
xor
call
in
xchg
ss
out
fstl
mov
call
push
push
and
fs
shlb
mov
add
ljmp
out
das
mov
inc
or
mov
or
push
lds
repnz
mov
out
pop
loop
rol
es
dec
rolb
bsr
cmp
mov
std
fldt
sbb
ficoml
jge
pop
repz
jl
cmp
inc
out
mov
lock
xor
or
dec
mov
xchg
jo,pt
call
mov
ds
das
loope
pop
cmpb
add
fneni(8087
xchg
sbb
add
inc
pop
icebp
jg
les
mov
cld
inc
sbb
cwtl
push
xchg
nop
cmpb
sbb
ret
rorb
or
scas
clc
add
iret
sti
xchg
or
pushf
mov
ja
push
stc
mov
lahf
rclb
loop
pushf
push
cmp
pop
cmc
or
sarl
aam
test
in
jmp
or
mov
jnp
dec
push
andl
or
mov
lahf
jmp
pop
mov
fdivp
sub
sbbb
cwtl
mov
xor
adc
in
mov
push
outsb
push
xor
cli
sbb
int3
fbld
sbb
rcrb
push
adc
and
lock
sbb
shrl
jl
cmp
cmpl
push
mov
sub
cld
scas
mov
std
out
sub
in
push
in
or
decl
mov
outsb
sbb
jg
arpl
or
jnp
fsincos
xor
fisttpll
bound
fwait
mov
aas
mov
dec
mov
std
sti
inc
addb
je
icebp
xchg
andb
leave
sub
mov
or
shl
addl
sbbl
test
add
lret
leave
arpl
hlt
inc
repz
shlb
adc
jb
push
sti
mov
testl
sbb
mov
and
andb
pop
cli
test
adc
push
add
std
test
push
clc
xchg
clc
xor
pusha
push
js
pop
sar
pop
stos
sbb
mov
xor
loopne
adc
jecxz
out
std
xor
xchg
push
adc
cmpsl
pop
add
cmc
jne
pop
call
and
xchg
mov
adc
sbb
je
dec
aad
dec
or
into
or
ret
jo
jmp
pop
mov
push
das
lock
out
mov
pushf
mov
and
sub
pop
push
push
es
lret
enter
ud0
loop
sbb
scas
sahf
xor
mov
pop
and
xor
sub
pop
pop
push
lds
in
nop
xor
lock
or
fsub
xor
mov
insb
sbb
ficompl
aaa
add
jge
or
aam
jecxz
outsl
cld
xor
xchg
inc
push
add
or
inc
adc
fsub
mov
jg
and
addb
leave
ds
gs
mov
mov
daa
push
cmp
inc
xchg
xor
jbe
outsb
loop
sbb
or
mov
das
fmull
scas
je
mov
cmp
sbb
and
loope
and
jl
adc
mov
mov
test
mov
push
lcall
jle
mov
int3
push
push
adc
push
push
mov
jbe
mov
xchg
sub
add
rcrl
pop
in
mov
mov
push
fdivrp
push
sbb
pop
das
aam
xor
cmp
lods
sub
test
dec
pop
mov
outsl
loope
mov
pop
gs
out
jge
das
std
das
dec
stos
pushf
and
cmp
lret
gs
je
inc
idivb
jecxz
mov
bound
inc
mov
insb
mov
xor
out
xchg
hlt
mov
adc
add
xor
xor
fdivs
test
cmp
adc
sub
jg
loope
iret
sub
push
daa
push
lods
mov
ljmp
adc
sub
into
ret
mov
pop
jb
insl
jge
and
ret
cli
sub
outsb
in
mov
les
mov
cld
dec
inc
pop
fdivr
add
fwait
jno
mov
stos
dec
hlt
xchg
cmp
ret
mov
loopne
loopne
rcrl
sbb
test
inc
sub
mov
mov
cmp
je
mov
push
mov
or
lods
lods
adc
mov
cmp
sti
pop
adc
sub
cmp
sbb
pop
mov
mov
cmp
in
addb
and
fmuls
jmp
int3
loop
ja
daa
mov
sub
bswap
hlt
loop
enter
idiv
cwtl
roll
push
mov
sub
or
gs
ficomps
jo
mov
push
ja
mov
inc
lds
cli
inc
cmp
jp
dec
mov
aam
mov
sub
xorl
daa
lock
cs
cmpsb
pop
fs
in
jmp
daa
push
outsb
jg
adc
pop
inc
inc
sbb
fdivrp
jp
fs
and
and
in
inc
inc
call
in
pop
adc
hlt
cwtl
ds
and
and
adc
cwtl
or
pop
fistl
aad
fsubrs
add
rorb
subb
or
repnz
mov
mov
inc
push
adc
dec
pop
pop
mov
lcall
inc
out
or
dec
fisttpl
inc
xchg
jbe
pop
call
mov
push
pusha
dec
rcll
adc
sbb
out
mov
lods
retw
mov
add
dec
ds
mov
pop
push
mov
inc
cmp
mov
scas
mov
adc
push
es
ffreep
movsb
push
xor
in
pusha
mov
adc
or
notb
jno
pop
dec
xor
cmc
aaa
mov
inc
movsl
inc
xor
mov
std
das
add
mov
je
outsb
bound
test
ss
xlat
sub
imul
ret
sbb
aaa
and
cmpsl
push
arpl
loopne
or
lock
movsb
enter
fwait
stos
aaa
push
addr16
jbe
pop
lods
andb
nop
data16
mov
pushl
mov
sbb
mov
test
mov
lods
imul
inc
cmp
js
call
lods
push
mov
push
and
mov
stos
dec
jg
add
jne
repz
xor
and
and
mov
cli
loop
sbb
mov
push
fcmovu
cli
pop
mov
or
pop
clc
in
mov
out
movsl
repz
jae
push
add
push
jmp
jecxz
std
sub
push
int3
out
mov
sub
cmp
insb
ret
jge
aas
cmpsl
vcvtsi2ssl
test
or
mov
loop
mov
inc
xorb
es
pop
jge
mov
add
sarl
pop
xor
rcr
pop
ja
lods
push
dec
jg
fwait
mov
mov
outsb
jle
popf
movsl
or
mov
jns
fcomip
idivb
mov
add
mov
mov
divb
jmp
and
jge
sbbb
outsl
mov
lcall
cld
or
test
mov
inc
ss
fimull
loopne
dec
dec
in
mov
sub
sbb
cmpb
xlat
xchg
jae
adc
outsl
and
ret
ret
fadd
inc
test
not
pop
pop
jge
fs
and
and
stc
jnp
lods
push
dec
fisttpl
call
or
xlat
mov
clc
lahf
pop
adc
fincstp
adc
test
push
jl
stos
test
cmp
jmp
push
movsb
push
push
int
fldcw
scas
adc
lea
lds
add
xlat
sbb
jg
push
adc
or
mov
xchg
loop
lods
out
pop
test
xor
notl
xchg
loope
xor
shrl
call
pop
mov
mov
mov
add
popa
sub
insb
mov
fnstsw
lock
int3
mov
mov
inc
outsl
mov
test
mov
fimuls
push
aad
lahf
lods
jo
jecxz
and
cmpsl
in
mov
mov
in
jns
adc
and
in
aas
push
fnstenv
and
lcall
and
in
inc
ja
jle
mov
pushf
jbe
add
pushw
ds
push
mul
aaa
ss
add
mov
jl
or
cmc
xchg
dec
jg
mov
jno
adc
sbb
mov
cwtl
cld
add
lock
add
xchg
push
mov
out
xorb
adcl
popa
in
sarl
mov
mov
cmp
jg
add
sbb
stos
inc
rorb
cmc
js
fldt
or
or
push
push
sbb
enter
push
pusha
sarb
in
mov
push
jnp
pop
loop
shll
jmp
cwtl
xor
pop
popf
lea
loopne
daa
xor
xor
jnp
pop
jge
outsl
mov
and
pop
xor
mov
fdivs
adc
pop
scas
mov
sbb
in
jp
adc
repz
loope
lds
mov
xchg
ret
dec
loopne
outsb
or
inc
mov
inc
adc
ss
cmp
sub
sub
push
das
dec
inc
or
testb
repnz
test
sub
push
mov
jle
ljmp
cmpl
jae
aaa
sub
xchg
sub
jb
sub
jns
lahf
movsl
mov
add
sub
lods
lods
inc
sti
enter
pusha
bound
fildl
sbbl
mov
add
adc
mov
inc
insb
rcl
mov
pop
rolb
mov
mov
sub
jb
adc
and
lods
mov
sbb
cli
pushl
add
inc
stos
inc
pop
cmpsl
filds
push
push
xchg
push
daa
sbb
mov
xor
mov
pop
std
mov
adc
sahf
bound
sbb
or
lea
jg
fsts
mov
add
pop
pop
xchg
lods
fsts
ja
and
sti
cmpsb
not
xlat
loopne
mov
xchg
stos
pop
insb
in
test
inc
lods
pop
ss
xchg
fwait
insl
enter
dec
pushf
mov
mov
pop
aas
push
cmpsb
shl
jle
into
xor
lods
cmp
outsb
std
cmp
or
pop
clc
fidivl
imul
setnp
sbb
es
and
lret
cli
sahf
popf
ja
sub
loopne
out
add
mov
or
cld
lods
sbb
dec
jle
shl
xchg
pop
in
mov
loopne
aas
mov
mov
insb
dec
test
and
rorb
mov
inc
les
mov
out
js
add
out
push
aas
mov
and
jg
adcb
mov
pop
loop
cld
popa
adc
js
sbb
xor
nop
xchg
jp
aad
fldl
push
outsl
fisttps
sahf
cwtl
cmp
mov
daa
and
ja
and
and
add
jae
sbb
outsb
pop
adc
adc
or
or
and
mov
popa
inc
aas
mov
movsl
sub
mov
leave
data16
mov
out
fdivl
and
and
jecxz
lahf
mov
das
std
aaa
pop
cld
nop
and
inc
xchg
addr16
ja
in
xor
or
xchg
popa
shrd
lcall
jbe
and
movb
insb
cmpsb
and
js
lret
jne
add
mov
filds
roll
add
push
testl
push
and
push
addl
andb
jns
loopne
jp
ret
mov
inc
sarb
das
scas
call
inc
sbb
mov
adc
push
pop
adc
les
cld
fdiv
sarb
push
mov
gs
dec
mov
mov
dec
inc
dec
push
inc
mov
fwait
jp
mov
lds
jge
ret
mov
jp
xchg
loopne
lds
in
add
jmp
inc
pop
mov
mov
cli
add
pop
adc
ljmp
pop
adc
fdivs
add
sub
sti
out
mov
ja
insl
mov
inc
outsl
add
andb
cmc
cltd
xchg
outsb
aas
fnsave
hlt
xor
mov
loopne
fisttps
testl
shll
mov
ja
xchg
fs
pop
movsl
xchg
icebp
cltd
stos
mov
fbstp
mov
movl
mov
out
mov
jmp
sbbb
movsl
ja
dec
mov
jb
inc
cmpsb
cmp
and
jb
js
pop
xor
mov
mov
fstl
pop
adc
mov
and
aaa
or
mov
aas
pop
sbb
add
sbb
lods
fwait
xchg
lods
fsubr
cli
push
push
adc
adc
sbb
ret
stos
in
ljmp
das
mov
or
pop
aaa
mov
lods
imul
sbb
nop
sarl
sub
clc
lahf
and
and
repz
testb
inc
jle
lret
push
dec
adc
cmp
cld
cmp
shll
inc
jge
in
xor
aaa
pop
xchg
mov
inc
insl
adc
aas
cld
xchg
test
add
or
mov
and
push
loop
les
dec
cwtl
xor
clc
imul
or
cwtl
divb
or
bound
mov
adc
sub
in
test
fstp
dec
rcr
negb
sahf
mov
cmp
call
xor
clc
scas
and
adc
xor
jecxz
out
xchg
cmp
mulb
or
cmp
nop
add
and
push
aas
outsb
mov
cs
daa
pusha
dec
dec
push
je
mov
push
div
daa
movsb
xor
sahf
push
mov
push
jae
out
mov
mov
cmp
and
add
pop
add
jecxz
stos
dec
in
in
pushf
push
adc
das
cld
mov
aam
jg
lahf
cmp
pop
fidivl
in
test
cmp
add
je
mov
inc
daa
cmp
loopne
fidivs
lods
pop
jl
push
in
bound
sarb
rcr
push
scas
shlb
mov
mov
shlb
repz
xchg
cmp
mov
icebp
enter
adc
sarl
fwait
mov
or
js
xor
adc
add
outsl
js
cs
lret
je
cmp
les
jmp
xor
mov
insb
data16
subb
mov
rolb
mov
ret
orb
sub
mov
mov
jge
xor
ljmp
pop
or
test
lock
loop
data16
add
data16
fldl
push
and
addr16
std
or
aaa
mov
lods
ret
mov
lods
or
test
ficoml
or
mov
push
cmp
lods
push
jl
pop
and
push
push
cmpl
ja
imul
ret
add
jmp
adc
push
mov
mov
das
pushf
gs
and
test
lock
add
sahf
outsb
sbb
and
mov
sti
jne
push
xorl
xor
std
fstpt
or
aam
lea
cmp
std
adc
arpl
std
out
ss
imulb
pusha
adc
ret
inc
pop
fstpt
mov
cmp
inc
ds
cmp
xchg
mov
mov
mov
divb
push
add
xor
test
inc
cmp
jge
mov
adc
pop
push
pop
aam
xchg
out
in
push
mov
scas
lret
adc
js
sub
mov
push
and
outsl
or
adc
or
push
ja
repnz
sti
data16
call
dec
cmc
mov
cmp
pop
insl
and
dec
ffree
in
and
test
repnz
cmp
adc
pop
ljmp
clc
lds
rorl
dec
bound
outsl
mov
stos
fcomip
decl
in
jnp
inc
inc
xchg
jo
shlb
push
xchg
in
jl
incl
das
aam
daa
jne
and
sub
mov
push
pop
jb
sbb
xchg
les
xor
xchg
and
jmp
sub
push
mov
lahf
xchg
mov
xor
fistpll
icebp
insl
xchg
jg
mov
out
ljmp
ja
and
sub
pusha
or
outsw
xor
mov
lods
in
dec
mov
mov
adc
enter
xor
pop
or
insb
pop
shll
sarb
inc
add
iret
sbb
cmc
and
mov
xchg
sbb
mov
aad
add
sub
fisttpl
fwait
xor
jmp
mov
sub
sbb
fstps
pushl
cwtl
loop
jl
test
fdivr
ss
push
mov
js
clc
mov
add
loopne
sub
xchg
push
jno
cmpsl
inc
test
xchg
int3
nop
sub
in
leave
loop
imul
push
test
or
test
jp
stos
daa
xor
add
scas
mov
xchg
xor
mov
mov
testl
mov
xchg
loopne
fistpl
ljmp
outsl
sbb
repz
pusha
sti
or
lods
pop
fiadds
sti
ret
or
xchg
lret
shrb
lcall
aaa
fsubrl
jno
sbb
orb
pop
mov
mov
push
clc
mov
mov
cli
inc
jmp
mov
ljmp
clc
inc
lret
mov
sbb
cmp
das
pop
cs
add
test
insb
pushf
ljmp
cli
or
inc
mov
call
in
sbb
cmpb
pusha
ja
or
add
leave
mov
pop
push
inc
and
xchg
mov
push
push
xor
sub
lret
sarl
mov
adc
push
ja
int3
dec
xchg
add
jo
call
daa
ljmp
sub
sti
pop
jne
insb
ljmp
mov
jnp
addr16
push
push
dec
cmp
mov
jo
leave
inc
mov
leave
frstpm(287
jbe
mov
mov
push
push
iret
jg
xor
push
cltd
int
out
jmp
in
lret
push
push
and
loopne
sbb
xor
ljmp
add
push
mov
or
call
add
xchg
mov
pop
pop
pop
inc
mov
imul
lret
xchg
lds
fidivrs
lods
movl
inc
mov
push
arpl
and
sub
xchg
pop
mov
jno
sub
clc
or
cmp
dec
xor
ret
lods
pop
in
xchg
mov
icebp
mov
ficomps
pushf
xchg
out
dec
xchg
xor
aaa
inc
xlat
std
bound
and
pop
in
aaa
mov
adc
sub
aaa
call
outsl
lock
pop
popa
xor
ljmp
inc
test
pop
call
call
test
jno
outsb
gs
and
mov
add
inc
bound
aad
fistpll
jb
push
cmp
and
inc
adcb
in
mov
adcb
lods
popa
orl
test
fcomp
mov
cmpsb
mov
xlat
sarw
test
mov
push
loopne
pushf
mov
cmp
outsl
pop
xchg
test
or
call
mov
xor
ret
adc
mov
mov
sar
push
icebp
pop
into
inc
push
mov
xchg
or
inc
dec
inc
xchg
mov
dec
dec
inc
in
inc
jmp
jmp
lods
push
push
mov
mov
xchg
pop
sub
inc
aad
sbb
divb
loop
mov
stos
popl
sub
lock
call
jb
nop
inc
or
jb
sbb
pop
mov
xchg
lods
hlt
mov
test
adc
or
and
mov
std
mov
add
jecxz
fs
icebp
lock
add
stos
out
stos
dec
shl
mov
add
mov
inc
pusha
clc
es
andb
loope
jge
xor
mov
xor
mov
and
jl
repnz
fcomp
xchg
jle
aaa
call
daa
dec
cmp
imul
das
xchg
sbb
mov
adc
pusha
out
mov
jno
and
inc
loope
js
adc
xchg
pop
adc
les
pop
mov
add
push
sub
enter
pop
fists
jbe
icebp
add
mov
pop
subl
je
adc
pushf
dec
cld
movsl
das
mov
mov
aaa
push
mov
das
xchg
lea
or
sub
shlb
cmp
sbb
inc
ret
cmp
popa
sub
mov
push
add
sub
xor
push
sarl
sub
jmp
out
inc
dec
shll
jne
mov
mov
lea
xor
jbe
loope
mov
xor
imul
test
push
aaa
pop
test
jns
cs
adc
les
in
outsl
mov
out
xor
jo
mov
insl
outsl
mov
cmpb
inc
and
cltd
jb
jg
std
aaa
test
mov
and
cltd
loopne
sbb
xor
add
mov
or
xor
loopne
lock
insb
iret
xchg
fstps
mov
adc
dec
aam
xchg
mov
inc
sub
ss
xchg
and
repnz
mov
adc
addl
jno
xchg
inc
fsub
pop
mov
leave
push
aas
mov
loope
rcr
cs
jns
add
aam
mov
pop
push
fisttps
pop
lret
adc
mov
jecxz
orl
fcmovnbe
jns
xchg
sbb
je
and
leave
push
call
fwait
mov
or
or
loopne
sub
jns
shrb
mov
cmp
ljmp
mov
test
inc
add
mov
adc
pop
pop
lea
ljmp
cs
and
fcomp
push
mov
arpl
dec
lock
fisttpll
cmp
mov
nop
nop
fidivrs
pop
pop
push
test
and
xor
nop
pop
insb
xchg
loop
es
dec
sub
test
stc
adcb
mov
sub
ja
lods
lret
fcomi
jno
or
or
cmp
call
sub
lahf
pushf
jge
cmp
cli
pop
fcmovnbe
andl
or
mov
in
adcl
xor
aaa
dec
insl
fcoml
jg
xor
push
xchg
fwait
leave
rcrb
mov
inc
mov
insl
inc
test
and
pushf
push
outsl
movsl
push
mov
int
pop
dec
cmp
and
xor
cltd
add
mov
mov
negl
pop
sub
addr16
jne
test
iret
cld
jg
pop
and
test
adc
lock
or
inc
incl
outsl
adc
adc
test
jmp
iret
mov
loopne
fwait
pop
enter
loop
jmp
shlb
popa
dec
pushf
jno
cli
sbb
dec
or
cmp
mov
inc
inc
loope
decl
inc
mov
adc
fiaddl
xchg
push
nop
dec
ljmp
ja
fistpll
bound
aad
test
fs
pusha
or
test
inc
mov
xchg
je
ja
add
int3
sub
add
xor
mov
sub
sbb
and
mov
scas
call
cli
jmp
iret
adc
or
pusha
mov
data16
loope
dec
mov
pop
pop
sbb
mov
int3
popa
push
pop
adc
gs
cmp
adc
mov
rol
call
inc
enter
sti
jg
mov
push
mov
sub
mov
mov
vpunpckhdq
mov
ret
stos
loop
and
mov
jl
stos
sbb
xchg
jmp
and
sub
icebp
xor
and
jbe
cmp
leave
repz
enter
loop
fldt
and
dec
leave
gs
mov
and
aam
mov
sbb
test
pop
jmp
je
adc
sbb
mov
loopne
in
aaa
push
jb
push
inc
dec
and
movsb
imull
pop
mov
in
dec
in
pop
insb
aas
scas
or
mov
add
add
cmc
outsb
shl
out
hlt
inc
insb
jmp
outsl
jmp
inc
xor
or
daa
cltd
adc
mov
mov
pop
sub
push
loopne
fsubrs
or
inc
fwait
add
out
jp
outsl
popa
push
clc
inc
in
in
out
mov
sub
xor
call
mov
mov
dec
ret
je
stos
insl
sbb
sbb
fistpll
push
adc
sti
shrb
inc
inc
inc
repz
pop
jle
subb
sarl
sar
rorb
inc
cmp
outsl
insl
insl
push
inc
addr16
andl
lcall
test
les
mov
je
rcrb
mov
jmp
std
mov
idiv
push
cmc
into
mov
or
lahf
js
cmp
scas
cmp
out
lcall
fsubl
and
in
mov
ss
jecxz
sahf
rcrl
les
in
pop
add
add
sub
rorl
mov
lret
xchg
cmc
push
insl
insb
add
ret
inc
add
fdivrl
push
inc
mov
xchg
les
cmpb
ficoms
rolb
lods
mov
and
cmp
mov
ljmp
xchg
lcall
test
pavgw
cmp
jb
gs
fs
movsb
fdivrs
pop
add
orb
mov
shll
data16
mov
or
pop
aad
stos
cs
lods
ja
push
cmp
and
incl
notb
mov
out
mov
sbb
and
mov
aad
xor
dec
mov
inc
stos
or
in
pop
dec
jecxz
push
clc
cld
and
iret
jns
imul
aad
popa
jp
icebp
pop
lret
aaa
sub
xor
jo
mov
jg
fistpll
popf
inc
ljmp
add
cmpsb
fisttpl
enter
stos
inc
imull
cmp
dec
movsl
xchg
cmp
pusha
aad
or
cmp
shl
mov
and
and
data16
sub
adc
je
sbb
cli
aam
sar
push
inc
mov
and
shll
xor
ds
push
and
push
out
das
jle
in
mov
es
popl
xchg
adc
inc
sbb
sub
and
jp
cmp
and
cld
xchg
cmp
dec
imul
loopne
int
addr16
cld
xchg
das
rcrb
popa
inc
scas
rcrb
das
imul
fisttps
fadds
test
jg
cld
stc
inc
clc
sub
pop
cmpsb
jno
cld
insb
pop
sbb
std
lea
mov
mov
jo
sub
xor
aad
mov
push
addr16
aad
fistps
jne
mov
sbb
jnp
sbb
ffreep
in
add
cwtl
dec
mov
iret
movswl
rclb
inc
popl
mov
pop
inc
pop
shrl
fildll
clc
aaa
cmc
inc
push
pop
mov
adc
daa
fimuls
inc
push
pop
add
sub
mov
pop
aas
clc
mov
mov
pop
jnp
push
repz
cmpsb
jmp
pushf
sub
cwtl
imul
shrb
enter
push
js
repz
hlt
fcmovnb
cs
loopne
jo
or
push
imul
jg
fs
call
scas
lock
adc
cld
icebp
or
hlt
fistps
cmpb
push
testb
sub
and
dec
addr16
pop
cli
sti
add
mov
incb
sub
dec
mov
insl
jecxz
jo
stos
push
ds
clc
outsl
fstpt
pusha
and
icebp
jecxz
gs
mov
mov
lcall
jne
lea
xor
sbb
mov
mov
add
xchg
sub
mov
push
xlat
movsl
insb
test
je
xchg
lahf
xchg
mov
ss
rclb
adc
cs
lcall
jnp
mov
mov
push
xchg
adc
fistpll
outsb
pop
jecxz
bound
loop
inc
adc
xchg
int
addb
cmc
mov
sub
cmc
jl
add
adc
jmp
mov
adc
mov
stos
test
imul
sbb
cmc
xor
add
jge
or
jae
data16
std
outsl
mov
and
mov
rol
cmpb
xchg
bound
je
loop
fs
pop
jno
push
push
push
or
mov
dec
mov
ficoms
jle
faddp
jbe
insl
sbb
mov
cmp
cld
fnstsw
mov
add
mov
pop
mov
sti
inc
insb
cli
pop
cs
popf
stc
push
sub
pop
push
movsb
add
call
decl
cmp
cmc
and
dec
and
pop
or
jbe
cmc
dec
or
sub
je
ss
out
imul
leave
bound
xor
mov
shll
mov
test
loop
arpl
inc
or
mov
cmp
adc
int
cmp
and
mov
lods
xchg
add
es
sarb
rcrb
adc
dec
add
subl
dec
leave
xchg
cld
adc
dec
pop
jbe
mov
dec
push
clc
stos
dec
adcl
imul
xlat
pushf
hlt
imul
add
lret
aam
icebp
lods
cmp
in
xchg
xor
movsl
nop
and
fdivrl
clc
cmpsb
push
pop
xchg
inc
add
loop
mov
sbb
ja
leave
cmc
xchg
and
enter
cs
lea
push
rcrb
dec
mov
mov
mov
cmpsb
pushl
in
insb
test
xlat
cmpsb
js
sbb
mov
mov
shlb
repz
dec
pusha
add
enter
or
sbb
jnp
xchg
aaa
add
and
lret
and
shlb
push
mov
scas
cmp
mov
pop
inc
outsb
push
xor
cmp
out
adc
add
arpl
imul
xor
int
add
jg
call
jmp
push
jecxz
sbbl
pop
cli
mov
push
sbb
nop
xor
push
fldt
xchg
mov
arpl
mov
outsl
mov
and
push
or
mov
imul
dec
push
adc
adcb
mov
jne
jecxz
mov
prefetch
nop
shlb
cmpsb
or
arpl
fs
jno
dec
add
rclb
ja
mov
outsb
adc
add
shrl
adc
push
cwtl
rcrl
fcoms
jmp
pop
add
fsubp
xchg
pushf
mov
ret
xchg
pop
push
imul
lods
subl
jne
cld
inc
xorb
jae
mov
sub
sbb
xchg
or
cmpsl
inc
dec
mov
push
imul
and
sub
js
and
adc
aas
out
lods
xor
adc
xchg
mov
pop
push
pop
or
pop
aaa
cli
shll
jp
jg
lods
pop
ljmp
leave
je
sahf
repnz
xor
adc
push
mov
ficomps
jno
sar
scas
jg
cmpsb
xorb
lods
push
in
jl
add
jmp
mov
lods
add
pop
in
shrb
popa
daa
ret
dec
test
and
aas
mov
lahf
sub
fmuls
mov
jne
adc
sbb
add
push
addb
mov
mov
adc
jg
cmpl
sub
clc
dec
and
test
int
cltd
dec
iret
sarb
adc
mov
sbb
jecxz
dec
pusha
sbb
mov
arpl
push
addl
mov
push
jmp
andb
int3
add
mov
imul
mov
inc
iret
mov
mov
aad
imul
or
dec
cmc
mov
loopne
mov
pop
rolb
jl
xchg
adcb
ss
push
lods
add
add
mov
or
ds
and
xchg
jge
test
mov
push
loopne
xor
sahf
sub
testl
push
dec
xor
sub
loope
insl
rclb
lock
dec
aas
cmp
pop
xchg
lock
cmp
ds
dec
cmc
mov
movsb
in
push
inc
jo
add
adc
xor
cli
bound
push
jae
dec
mov
cmp
mov
hlt
inc
mov
insl
or
dec
or
mov
push
out
inc
aad
out
leave
cs
mov
and
add
cmp
push
mov
xor
pusha
dec
xor
pop
dec
adcl
test
nop
add
lock
pushf
leave
xor
out
stos
icebp
jecxz
out
mov
cmp
pop
push
xorl
ja
push
and
rolb
aaa
insb
jno
icebp
cmp
movsl
pusha
iret
fisttpl
dec
lods
mov
mov
ljmp
fsubr
les
insb
enter
and
daa
aam
pop
jmp
sahf
call
outsl
mov
pop
out
out
cli
pop
add
mov
inc
dec
pop
sbb
xchg
inc
scas
movsb
push
test
push
jmp
in
xchg
and
fsubrl
adc
pusha
jg
fcoms
or
and
into
push
mov
mov
xor
ja
cld
cmp
lock
pop
and
add
out
loopne
and
cmp
stos
jge
mov
ret
adc
mov
jecxz
nop
je
ss
fldl
adc
adc
mov
ja
divb
mov
and
cmp
fadds
sbb
aas
push
xchg
push
xchg
fisubrs
imul
sbb
mov
mov
stos
movsl
sub
fs
jno
lds
inc
and
popa
adc
sysenter
jg
aam
cld
push
aam
add
mov
cmp
sub
cwtl
imul
shrb
sub
in
pop
mov
jmp
pushl
inc
mov
rolb
test
jle
fildl
xor
sub
jge
pushl
and
inc
lcall
mov
mov
es
push
pop
incb
insb
cmp
sbb
add
scas
aaa
or
mov
incl
or
push
mov
int3
adc
push
xchg
add
incl
ss
imull
mov
sub
ret
pop
cmp
scas
enter
push
and
sbb
dec
pop
xchg
and
sub
mov
xor
dec
fists
mov
into
les
xor
pop
shrl
mov
adc
rol
in
rcll
sbb
sbb
rol
fs
push
inc
in
jns
jne
sbb
cmp
cltd
sti
enter
cmc
mov
jg
mov
js
pop
inc
and
mov
mov
cmp
pop
fsubrs
std
aam
jns
xchg
int3
jno
cli
xchg
adc
addl
and
add
xor
inc
or
repz
xchg
sub
or
pop
xchg
mov
outsb
fsts
pushf
add
fsubrs
outsb
jp
push
mov
call
fucomi
sahf
cmpsl
mov
jne
rcll
mov
std
or
mov
into
pop
in
mov
in
enter
dec
js
push
js
pop
adc
mov
pop
cwtl
sarb
cli
push
fcmovbe
pushf
rcr
fsub
sub
xor
inc
mov
mov
jg
fistl
call
std
xor
or
or
jmp
jp
push
lods
or
jno
fimuls
js
sub
aam
or
xchg
xchg
out
pop
push
xlat
xor
fimull
or
xor
pop
imulb
cmp
xchg
ds
xor
dec
mov
sbb
sub
pop
add
sbb
xchg
xchg
orl
out
cs
jb
xchg
aaa
jo
inc
xchg
add
lock
cmpsb
xchg
test
jle
subb
push
and
fcoml
adc
xchg
xor
mov
test
testb
ja
loopne
fistpl
scas
fdivr
incl
in
cmpsl
push
pop
adc
pusha
mov
mov
hlt
push
mov
sti
dec
add
add
cmpsl
sahf
pushf
lea
inc
mov
and
clc
repnz
aad
incb
loop
aam
fwait
or
mov
popa
aaa
jmp
arpl
dec
mov
dec
test
in
pop
mov
addr16
lret
pusha
push
pusha
add
jg
sbb
sbb
or
or
mov
sarl
lcall
and
shrl
fs
push
adc
jno
fadd
in
clc
movsl
dec
test
or
fnsave
sbb
push
mov
hlt
mov
jecxz
sbb
clc
push
test
add
adc
cli
push
jmp
push
xchg
push
sahf
and
out
ret
sub
sbb
out
loop
mov
fcmovu
xchg
push
mov
icebp
sbb
gs
in
out
add
fisttps
gs
inc
adc
or
ds
xor
cmpb
iret
jns
pop
pop
cmpsl
fs
out
adc
xor
rorl
stc
aas
or
das
jg
decb
iret
movsl
pop
cmp
ds
adcl
mov
push
xor
out
stos
ret
mov
jecxz
adc
jmp
loope
xchg
sbb
pop
push
inc
call
subl
in
outsl
xchg
shrl
and
mov
cwtl
dec
inc
mov
dec
std
cmpsl
xchg
pop
or
orl
sti
fdivs
sub
cmp
nop
insl
and
and
add
inc
dec
imul
mov
pop
lcall
mov
add
xchg
lret
and
xor
lods
and
rcrb
inc
sbbb
mov
mov
inc
mov
pop
iret
cmp
loopne
pop
cmp
leave
mov
jmp
cmpsb
mov
pop
out
cld
inc
aad
pop
int
push
insb
mov
data16
xchg
adc
out
push
addb
mov
sbb
push
arpl
cli
jle
jg
out
and
add
mov
es
pop
outsb
aas
adc
dec
inc
cmp
xchg
jb
pushl
and
int3
and
and
and
unpcklps
ljmp
cltd
cmp
mov
pop
ret
inc
mov
ret
mov
mov
aad
ss
push
push
cmp
inc
pop
call
insb
cld
mov
push
outsl
inc
mov
js
mov
mov
pusha
cmp
shrb
fs
and
jae
stos
pop
mov
loope
sub
shrb
adc
adc
aam
std
pop
cli
dec
cmp
jecxz
and
xor
xor
lods
movsl
enter
jg
ljmp
mov
cmpsl
mov
stos
icebp
scas
jecxz
add
dec
call
or
jecxz
cmc
adc
sbb
rolb
cwtl
add
stos
ror
jle
add
push
add
out
sub
scas
imul
sub
gs
ss
les
movsb
lods
and
ljmp
push
ds
mov
aam
pop
and
and
nop
test
mov
jo
push
pop
mov
mov
adc
push
rclb
repz
gs
sub
shlb
in
push
ljmp
xchg
mov
pop
cmpb
rclb
or
pushf
movsl
cmpsb
xchg
jne
rclb
imul
xchg
pushf
loopne
icebp
push
fisubrs
push
cmp
jle
in
sub
pushl
ss
sub
xor
cwtl
adc
mov
dec
das
mov
mov
or
dec
jmp
gs
inc
sbb
mov
fistl
xor
push
jae
mov
mov
dec
in
movsb
sub
sub
pop
jge
adc
stc
iret
mov
popa
add
pop
js
sub
into
xchg
push
test
cwtl
test
clc
in
push
lds
mov
jle
lahf
aad
out
in
xor
aad
mulb
imul
mov
mov
scas
fistpll
push
push
repz
jno
fdivrs
cmp
pushf
jmp
aas
mov
push
mov
out
sub
mov
call
pop
mov
cmp
and
call
cmp
out
ret
out
push
cwtd
mov
jg
inc
sub
push
es
mov
mov
and
pop
jg
and
ss
aam
and
icebp
scas
jmp
dec
sbb
cmp
push
cmc
xchg
and
scas
jge
sti
pop
lds
insl
outsl
mov
jg
addb
lods
xchg
adc
mov
ficomps
xor
inc
dec
pop
jne
inc
xor
dec
jns
dec
dec
add
mov
les
mov
clc
fst
mov
movsl
ret
mov
outsl
dec
mov
outsl
xor
sub
or
mov
cmp
sub
orl
in
rorb
out
or
orl
ljmp
sbb
and
adc
and
dec
cmp
jb
mov
push
ret
lea
mov
mov
xor
sbb
rclb
mov
dec
inc
and
loope
loope
pop
loope
faddl
fsub
dec
add
add
pop
dec
out
sub
leave
int3
jb
mov
add
inc
fnstcw
push
mull
hlt
cs
mov
cmpsb
scas
stos
xchg
push
stc
mov
sub
push
jmp
inc
or
decl
scas
pop
mov
mov
std
push
sahf
pop
dec
cmp
adc
sbb
xor
mov
jb
rolb
pusha
jecxz
dec
xlat
pushf
xchg
fcomp
xor
subb
add
shlb
xor
mov
lock
fistpll
bound
movsl
jl
or
pop
je
mov
inc
xor
outsl
sub
jecxz
pop
cld
nop
add
adc
push
push
fs
jp
das
jle
cmp
jge
and
loop
aam
or
sbb
repz
aaa
inc
shrl
and
fdivl
pop
je
fidivrs
adc
nop
jmp
in
int3
std
mov
inc
dec
and
rcll
outsl
sbbb
jb
xchg
fs
pop
add
cld
sti
cwtl
lret
lret
or
mov
lds
fadds
fisubrs
aaa
decl
std
fwait
lahf
or
push
leave
mov
test
mov
pusha
xchg
fcmovb
jmp
sub
mov
pop
pop
ljmp
enter
cmpsl
inc
out
pop
add
xor
lahf
mov
rcrl
call
mov
adc
mov
jl
mov
imul
sbb
push
xchg
out
and
dec
roll
aaa
int3
sub
in
lods
test
xor
nop
mov
out
js
sbb
mov
fimuls
nop
mov
sbb
icebp
pusha
cmp
lcall
push
js
mov
test
dec
or
idivb
cltd
add
pop
call
mov
addb
sbb
push
mov
imul
cli
popf
xchg
jecxz
mov
lock
add
popa
int3
mov
andl
stos
roll
pop
dec
cmpsb
sub
inc
jg
cmp
int
dec
repz
call
inc
fstpt
fimuls
jb
test
lods
loopne
xor
jae
push
push
add
mov
arpl
fwait
into
xor
mov
insb
inc
pop
mov
sub
jecxz
notl
push
filds
inc
cmp
stc
in
lahf
sbb
lcall
pop
hlt
or
aam
testb
mov
dec
push
cld
cli
lahf
ret
mov
in
inc
sbb
gs
or
fistl
gs
ljmp
es
test
mov
mov
incl
jle
sbb
sbb
dec
jns
adc
mov
sub
jecxz
mov
mov
roll
dec
or
add
mov
mov
call
push
out
dec
push
mov
add
pop
add
lds
pop
push
adcb
add
xor
adc
andb
adc
mov
lods
fs
mov
and
out
scas
sbb
sbb
movsl
imulb
sbb
ljmp
call
out
adc
call
adc
test
xor
xor
lock
mov
jb
gs
mov
imul
test
ret
push
dec
mov
xorl
cmc
aaa
lret
and
dec
repnz
and
push
mov
fwait
xor
add
inc
sbb
fldt
and
cmp
ret
xchg
sbb
lcall
pop
inc
cmpsl
xlat
push
add
repnz
sub
outsl
fs
push
out
sub
mov
xlat
sahf
test
mov
cs
idivl
lret
mov
daa
and
sub
adc
fst
scas
sbb
cmp
pop
lcall
bound
sub
dec
rcll
push
ja
mov
icebp
inc
cwtl
clc
inc
je
xor
ret
inc
scas
mov
nop
cwtl
pop
sbb
xchg
sub
lock
and
arpl
inc
lds
push
sbb
aas
and
cli
std
in
add
mov
loop
dec
pop
add
fwait
test
push
mov
xor
push
test
test
bound
lods
cmp
test
adc
cli
outsl
ljmp
adc
iret
xchg
jl
xchg
in
xor
ret
fldt
ljmp
adc
jns
cmp
adc
adc
fcmovnb
insl
inc
stos
sub
stos
pop
dec
and
movsb
out
aad
sbb
xchg
inc
push
mov
loopne
fisubrl
out
mov
cltd
jne
in
mov
sar
mov
addl
pushf
mov
add
fidivs
fildl
pop
pushf
jg
sub
jg
call
sub
sub
cmp
arpl
decl
mov
leave
mov
xor
and
in
out
pop
add
push
lahf
sub
fldenv
pop
fsts
mov
jb
jmp
add
aam
inc
mov
fistl
adcl
sub
shlb
pop
movsl
insb
fs
ss
lods
fbstp
movsl
pop
mov
xchg
and
jg
jle
jmp
jb
mov
rorl
mov
ss
sbb
int3
in
mov
inc
jb
icebp
fbstp
or
nop
lds
enter
mov
mov
clc
cld
outsl
jecxz
xchg
iret
push
sub
addb
add
adc
mov
aad
lea
imul
scas
push
cmc
test
popf
rorb
dec
xor
dec
out
pop
add
inc
pushf
popl
stos
fidivrl
sub
and
jmp
sbb
mov
in
and
inc
and
sub
mov
stos
xchg
mov
sbb
push
arpl
das
cld
call
mov
push
cs
movsb
mov
xchg
adc
lods
add
rcl
cmp
jge
das
jns
mov
push
xchg
sub
dec
jl
repnz
cmpsl
adc
mov
adc
outsl
dec
inc
enter
or
shlb
inc
adc
aad
std
aaa
ficomps
testl
adc
insl
jl
mov
or
fnstcw
repnz
and
popa
jnp
call
sbb
test
ss
pushf
lds
shl
or
mov
add
xchg
pusha
dec
into
and
repz
int
add
sar
popa
stos
rcll
jecxz
in
sub
cmc
enter
icebp
mov
pop
out
fcomps
mov
adc
cmp
pop
decl
jg
or
sub
sub
addl
or
and
push
pop
xchg
test
add
push
addr16
fs
clc
ret
pop
jmp
mov
clc
scas
add
sbb
push
xchg
repz
popa
push
ret
xchg
jmp
cmp
jecxz
mov
mov
cwtl
cmp
dec
lcall
xor
mov
dec
out
and
pop
loope
jmp
xchg
dec
sbb
xor
jno
mov
inc
stos
stos
ss
pop
and
mov
mov
jnp
sbb
jle
lret
xchg
sub
or
jp
mov
outsl
mov
adc
cmp
pop
push
dec
cmp
or
insb
adc
adc
dec
or
imul
pusha
mov
adc
mov
clc
dec
push
mov
ds
pop
and
xchg
outsb
dec
out
andb
xor
jb
pop
arpl
fisttpl
mov
imul
cwtl
lcall
add
test
add
cmp
jae
cmp
jle
daa
push
jle
adc
dec
pop
add
and
xchg
inc
adc
call
je
outsl
inc
daa
ja
es
mov
mov
or
sti
mov
aam
in
push
daa
xor
outsl
xor
in
popf
ds
add
and
push
in
mov
ljmp
push
pop
scas
mov
cs
pop
in
fisubs
sti
fstpt
cltd
cmp
popa
rcrl
rcll
inc
sarl
inc
pop
add
jg
push
jmp
bound
dec
call
test
adc
cvtdq2ps
mov
and
push
mov
rorb
nop
imul
xchg
in
roll
out
jb
cmpsb
jmp
adc
fs
in
cmpsl
rorb
sbb
pop
pop
or
mov
add
xchg
lea
adc
and
mov
adc
sub
lds
sbb
jo
cmp
dec
aad
scas
in
inc
dec
dec
dec
arpl
jmp
push
test
ja
lods
pop
mov
outsl
mov
mov
enter
mov
dec
push
add
ret
test
push
sub
shll
pop
sub
mov
aaa
xsave
and
push
cmpsb
dec
loopne
pop
sar
shl
and
mov
cmp
out
or
pushf
dec
sub
xchg
push
jnp
sbb
movsl
stos
insl
sarb
xchg
jb
shlb
incl
aas
xchg
or
sarb
xchg
cs
hlt
out
mov
cmp
mov
xchg
das
push
inc
xor
mov
mov
mov
xor
mov
lret
sub
loope
mov
xchg
cmp
call
dec
adc
inc
jg
push
push
stos
in
sti
call
inc
loope
popa
mov
pop
clc
loop
mov
xchg
push
xchg
mov
xchg
ret
fucomip
xchg
adc
mov
outsl
leave
ret
fistps
mov
fsubr
in
or
xchg
pusha
jmp
fiadds
dec
pop
outsb
addr16
sbb
xchg
add
in
and
mov
jmp
adc
mov
adc
jbe
movsl
fisttps
call
push
inc
inc
lds
addr16
sarl
lcall
shr
add
scas
mov
and
dec
bound
es
test
push
ds
mov
pop
mov
xor
cmp
inc
lcall
outsl
imull
and
std
mov
pusha
mov
adc
int
jle
sar
pop
cli
sbb
push
add
fildll
pop
mov
std
rcll
adc
in
stos
pop
roll
mov
cmpsl
xlat
fmuls
and
cmpsl
stos
lods
xchg
rcrl
je
fistpl
cmp
ljmp
es
test
nop
insb
inc
test
incb
xchg
adc
or
xchg
xchg
ficoms
loopne
out
repnz
pop
push
and
or
cmp
inc
pusha
mov
adc
aaa
push
add
jge
in
or
mov
mov
pop
stos
jae
scas
inc
movsb
pop
mov
divl
fidivrl
inc
or
mov
shl
cmp
lods
shrb
cmp
mov
mov
movsl
or
dec
push
xchg
sub
addb
cmp
or
stos
cmp
cmp
and
jle
hlt
nop
jg
sbb
call
filds
mov
add
push
xchg
das
sbb
pop
loopne
sti
jno
xchg
or
sahf
add
shrl
mov
dec
test
inc
in
jo
mov
loope
loop
xchg
mov
cld
mov
mov
fistpll
sbb
and
pop
call
push
inc
outsl
mov
mull
adc
into
cmpsb
lret
pop
jne
mov
clc
insl
pop
mov
stos
jecxz
stc
xlat
dec
mov
sbb
xchg
mov
rolb
cmpsb
inc
loopne
inc
shll
pop
loopne
mov
add
and
adc
adc
jmp
add
outsl
xchg
cli
sub
cltd
pop
pop
mov
fnstenv
lock
mov
rolb
fnstcw
sbb
aaa
into
mov
dec
aas
clc
outsl
adc
mov
xor
jns
mov
adc
xor
ret
push
lret
and
and
pop
jno
jnp
popa
stos
jge
mov
loop
fists
adc
cli
sahf
sti
mov
pop
mov
cmp
and
ja
add
das
mov
mov
out
and
movsl
movsb
sub
mov
sar
mov
jne
inc
sbb
cli
mov
bound
cmp
fcompl
std
pushf
cli
ljmp
or
ja
add
int
dec
xchg
dec
add
scas
roll
inc
in
cmpsb
nop
or
hlt
fwait
mov
mov
mov
add
std
fisttpl
adc
shll
popa
cwtl
mov
mov
pop
inc
sti
aas
mov
mov
fwait
pop
out
fdiv
and
int
push
mov
fstpl
test
add
cmp
mov
out
dec
cmp
dec
jno
sub
jne
mov
in
les
adc
stos
xchg
rclb
jl
mov
mov
fiaddl
dec
insl
jmp
rorb
pusha
icebp
push
push
clc
out
jl
scas
pusha
pop
ret
xor
addb
aaa
pop
jne
mov
mov
jp
cli
mov
aad
inc
sbb
ret
mov
out
inc
popf
inc
adc
jecxz
vmwrite
rol
mov
mov
lods
lea
movd
jne
ffree
jl
movsl
dec
fldl
jmp
lahf
aaa
lods
jg
jmp
add
add
outsb
lock
aam
nop
lods
dec
lock
mov
cmp
adc
test
inc
outsl
mov
mov
add
push
jle
mov
cmpsb
bound
repnz
in
js
add
and
dec
jl
call
call
out
outsl
dec
test
jb
in
inc
pop
jnp
fwait
jg
jmp
mov
dec
add
dec
dec
stos
insl
imul
mov
jle
mov
mov
pop
xchg
inc
push
outsl
jo
inc
movsl
mov
mov
sub
clc
dec
mov
lcall
out
sar
dec
mov
sub
aaa
pop
movsl
ds
loop
jp
jne
cmpb
test
sarl
pop
lea
jno
in
pop
hlt
push
xlat
jae
lea
roll
in
popf
cmp
insl
inc
stc
iret
xor
xorl
mov
data16
mov
pop
push
mov
aaa
call
roll
sti
mov
xlat
inc
add
mov
insb
mov
inc
mov
push
mov
mov
aaa
cmp
mov
mov
jg
lds
aad
cmp
adc
ret
mov
mov
jge
into
inc
cmp
lahf
cmpsl
jb
add
rol
inc
test
and
rolb
pop
mov
pop
mov
ljmp
int
or
inc
out
mov
fmuls
fistpll
sbb
fmul
inc
divb
sbb
int3
mov
mov
loopne
push
popf
xchg
xchg
dec
mov
adc
mov
ficoml
sbb
inc
lds
pop
ret
bound
jb
gs
fistl
sub
incb
movsl
jmp
jecxz
dec
lods
lock
dec
in
mov
fistps
pusha
fstpl
xchg
adc
pop
inc
and
add
out
jbe
je
inc
dec
scas
or
ja
or
cli
dec
fldenv
aam
hlt
pop
pop
jg
ljmp
inc
and
or
sub
or
adc
jl
test
mov
arpl
jmp
xor
adc
jle
ficoml
es
sbb
outsl
mov
ret
jp
jecxz
fdivrp
mov
loopne
mov
in
and
aas
movsb
sbb
incl
jl
sarl
paddusb
mov
add
push
jmp
or
and
mov
jmp
push
sub
fwait
sub
jge
fcoml
lret
mov
lock
je
cmp
add
sub
out
mov
nop
cwtl
cwtl
pop
xchg
sahf
pop
xchg
jl
das
sub
filds
adc
inc
sub
cmp
cltd
loop
loop
fdivs
mov
dec
and
std
add
push
cmpsl
pushf
pop
es
add
shlb
std
or
inc
add
cmp
decl
aad
push
fistl
dec
mov
pop
repnz
mov
sbb
xchg
push
cmp
jmp
mov
adc
xchg
arpl
mov
inc
sahf
int3
rorl
jmp
fwait
push
aad
cmp
dec
lock
push
or
std
outsl
mov
xor
fdivs
mov
call
shll
push
mov
sti
test
jo
pop
roll
mov
mov
jp
neg
loope
lahf
decb
out
jbe
and
pop
icebp
daa
or
mov
insb
dec
push
lods
and
or
ds
and
je
sti
xchg
inc
jbe
or
mov
or
incl
pop
add
and
les
xchg
fsubrs
or
inc
out
pop
mov
outsl
shll
test
scas
bound
dec
inc
call
inc
sbb
fadd
pop
pop
sub
sub
jmp
out
fwait
push
mov
add
add
insl
or
adc
jae
jne
pushfw
insb
mov
cs
enter
dec
dec
clc
nop
pop
lret
dec
push
clc
cmp
push
sahf
jb
gs
jae
sub
sbb
inc
or
inc
or
xorb
movsb
push
data16
adc
mov
mov
dec
and
les
popa
jo
fcoml
or
int
add
or
xor
or
ja
mov
push
sbb
jae
fldt
adc
add
hlt
fistpll
cmc
test
dec
repnz
jmp
gs
lock
subb
outsl
ja
das
xchg
inc
inc
fs
in
mov
xor
jl
je
ja
or
sbb
ja
or
push
jbe
push
outsl
mov
aas
rcll
aam
jnp
mov
mov
or
inc
push
lret
sbb
lea
inc
imul
add
pop
add
sub
test
cmc
aaa
jns
and
pop
adc
cmpsl
inc
inc
and
movsb
loope
lahf
leave
aad
xor
push
sub
movsl
in
pop
ret
lret
lods
jecxz
pop
xor
jne
xor
shl
js
icebp
adc
add
loopne
pushl
dec
pushf
nop
int
dec
push
sub
and
sub
add
dec
cld
mov
jge
mov
dec
cwtl
fs
sahf
or
mov
in
cld
pop
cli
pop
mov
pop
xlat
out
dec
pop
shrl
jecxz
pop
adc
adc
das
test
push
jo
xchg
in
outsl
andl
dec
pop
xor
cmp
orl
cwtl
pop
ret
xchg
add
lods
xor
sbb
pop
fstl
in
xchg
push
ret
lcall
add
xchg
aas
xchg
xor
push
add
test
mov
adc
mov
xchg
shl
nop
mov
inc
insb
outsl
bound
dec
popa
outsb
fs
gs
imul
je
push
jb
arpl
jae
gs
jns
adc
imul
in
jae
imul
and
imul
arpl
adc
push
mov
outsw
dec
push
inc
inc
outsl
jne
jbe
std
mov
push
and
gs
imul
push
adc
mov
mov
jae
jae
jb
push
imul
jns
outsb
jne
dec
cmp
popa
addr16
movsl
push
inc
js
or
fidivl
arpl
imul
pop
jmp
push
test
inc
je
imul
scas
mov
jns
jo
inc
jmp
sti
je
jb
jne
lds
jbe
hlt
dec
ss
push
inc
xchg
jbe
jle
mov
push
pop
push
push
mov
pop
adc
push
inc
jno
cmp
fsubrs
dec
and
inc
and
push
push
in
mov
jbe
outsb
fnstsw
shrd
push
sub
in
sbb
inc
insb
dec
xchg
inc
push
inc
push
push
outsl
adc
insl
fisttpl
mov
shll
jo
or
sbb
dec
dec
bound
mov
pop
xorl
jge
dec
mov
or
imul
outsl
fildl
insb
mov
push
mov
jae
fs
mov
int3
fsubrl
cmp
xchg
jecxz
in
movnti
pop
imul
imul
popa
lcall
pop
sub
jo
xlat
dec
outsl
imul
fs
xchg
adc
int
cmp
gs
push
outsl
mov
jo
jl
add
popa
addr16
pop
and
icebp
adc
popa
arpl
inc
jbe
leave
sbb
test
mov
push
shll
imul
xlat
or
sub
data16
push
rcl
cmpsb
push
mov
js
jo
add
xchg
add
jns
inc
jmp
sbb
gs
out
sub
sbb
mov
jae
imul
repnz
dec
lock
popa
inc
nop
in
popa
bound
in
sub
movsb
push
push
sbb
pop
rcrb
std
testb
dec
outsb
cmp
jae
movl
dec
adc
mov
push
inc
pop
dec
inc
jns
mov
ret
or
fs
add
adcb
inc
sub
push
and
push
dec
mov
pop
sub
fimull
lahf
adc
insl
in
cs
xchg
or
pop
inc
outsb
jno
jae
out
push
sub
mov
pop
mov
imul
jmp
arpl
mov
or
xor
je
das
call
push
sub
mov
popa
outsl
clc
jl
fcmove
or
outsb
mov
pushf
lcall
fimull
add
dec
fs
xchg
mov
pop
out
jnp
pop
aaa
mov
inc
dec
mov
imul
test
inc
add
jecxz
xchg
xor
push
add
cwtl
xor
xor
int
or
push
decl
sub
es
and
inc
and
or
push
test
sbb
inc
arpl
in
inc
dec
inc
adc
dec
dec
mov
push
das
loopne
xor
test
gs
pop
sbb
fwait
insb
lods
test
dec
and
fwait
ret
and
imul
fsubl
imul
jp
adc
dec
addr16
push
imul
mov
es
mov
and
xor
in
fldt
push
xor
popf
lock
pop
dec
gs
push
cmc
push
pop
or
lods
cmp
adc
por
mov
inc
lock
outsb
xchg
mov
inc
sub
sub
lfs
leave
fisubrs
push
xchg
push
sbb
fisubrs
mov
or
outsl
xor
and
inc
pusha
jb
adc
xchg
mov
mov
push
mov
out
andl
shrl
imul
push
xchg
jecxz
dec
push
fs
push
ficoml
popa
mov
and
js
lahf
or
arpl
cmp
jo
outsl
mov
addb
and
mov
xor
fdivrl
push
xor
imul
dec
push
fistpll
lahf
cmp
pop
outsl
jb
sbb
data16
paddq
adc
popa
lret
mov
and
movsl
xor
or
jmp
insl
dec
pusha
mov
fildl
xchg
and
push
lcall
mov
int
daa
into
je
ss
popa
sbb
push
cmp
outsb
fistpl
data16
sahf
jbe
xor
scas
add
jbe
pop
sbb
gs
or
ret
jnp
in
push
push
pop
arpl
into
bound
xchg
jp
lods
cmp
dec
inc
in
adc
jl
popa
rcr
push
xor
push
mov
inc
xchg
mov
xchg
cmp
jae
add
popa
xchg
push
cs
xor
mov
sub
push
ret
push
xchg
xor
push
xchg
cs
push
push
sub
ja
out
mov
dec
or
mov
mov
je
jecxz
nop
mov
rolb
or
inc
add
imul
popf
jb
insb
and
pop
adc
lahf
pushf
push
jne
jp
mov
push
inc
jno
fs
int3
jbe
jo
push
xchg
push
pminub
cmp
or
lret
inc
inc
call
add
mov
xchg
jno,pt
hlt
adc
xorl
fisubrs
adc
or
adc
jo
ss
shrb
adc
sahf
mov
ja
inc
mov
inc
imul
adc
rcrb
jecxz
ficoml
mov
cmp
ret
xchg
gs
cltd
in
int
mov
mov
jmp
dec
mov
pusha
pusha
mov
xchg
xor
insb
and
add
add
add
xor
sub
pop
push
outsl
fidivrl
jae
pop
insb
xor
je,pt
jae
arpl
je
dec
or
adc
stos
xorl
dec
arpl
arpl
and
mov
push
xchg
inc
lahf
outsb
sbb
mov
mov
cwtl
cltd
or
inc
insb
fcoms
inc
test
cltd
loope
addr16
pop
sub
addb
or
cltd
sbb
fisubl
xchg
in
and
inc
dec
jns
fwait
add
jns
dec
arpl
xor
ja
jo
in
inc
mov
je
jp
insl
xor
fwait
nop
adc
cmp
mov
adc
pop
and
mov
ljmp
push
mov
jne
dec
mov
xor
inc
lcall
dec
xor
adc
pop
rorl
addr16
dec
push
dec
push
dec
add
sbb
test
outsl
mull
or
or
lret
push
in
aam
arpl
mov
jae
pop
inc
lods
push
jae
leave
nop
jae
pop
insl
inc
or
ljmp
gs
add
addb
imul
mov
loop
mov
inc
mov
push
pop
dec
ss
sbb
pushf
sbb
je
push
xchg
in
and
pop
rcrb
clc
sub
insb
cmp
sbb
outsb
xchg
dec
repz
jecxz
fiaddl
loop
or
sub
test
cmp
jmp
mov
fwait
adc
or
insb
cwtl
ja
popf
add
aaa
pop
push
or
mov
push
cwtl
dec
es
out
pop
pushf
sbb
dec
outsb
sbb
insb
mov
mov
push
jo
xor
shll
jge
flds
stc
pop
aam
xor
cwtl
add
dec
mov
aam
ja
negb
shlb
test
xor
mov
pop
and
imul
mov
pop
inc
push
mov
pop
push
add
add
xchg
push
arpl
cwtl
je
outsl
aam
mov
pop
sbb
int3
data16
scas
adc
stos
xchg
test
leave
lods
adc
and
test
nop
pop
cwtl
notl
mov
jo
lcall
push
bound
mov
cmp
adc
inc
xor
jl
mov
mov
cmp
jns
inc
pusha
and
cli
sub
push
js
enter
fs
adc
sahf
mov
ljmp
add
testl
lret
out
xor
outsb
or
stos
push
push
pop
dec
jmp
dec
mov
add
pusha
sbb
clc
jae
sbb
mov
mov
dec
sub
testl
fidivrs
popa
or
xor
pop
adc
mov
or
test
loope
mov
cmp
and
mov
or
add
jb
inc
jno
mov
mov
lretw
and
pop
inc
xchg
xor
mov
cs
xchg
movsb
xchg
jae
call
dec
fsts
imul
or
mov
ss
fmull
push
jae
xor
pusha
loopne
inc
xchg
adc
rorl
sbb
push
inc
popf
push
xlat
adc
cmpsl
aaa
xor
sub
insb
cmp
mov
fistl
ficompl
pop
mov
scas
pop
daa
jo
push
test
push
mov
push
mov
jle
fsts
jecxz
int3
insl
daa
cmp
scas
outsl
and
js
adc
jno
arpl
sbb
jb
add
imul
orl
adc
popa
push
adc
leave
or
cmp
iret
and
xor
xor
bound
jb
mov
mov
inc
data16
lret
xchg
push
add
popa
inc
dec
mov
cmpb
sbb
insl
mov
or
mov
je
xor
data16
and
xchg
test
pop
popa
jae
cltd
or
add
xchg
out
in
xlat
ja
or
inc
dec
push
popa
sarl
jae
xchg
xchg
push
inc
sbb
xchg
mov
or
ss
ss
xor
mov
cmpsl
or
sub
andl
push
add
lcall
rorb
or
push
add
add
fnstsw
addl
in
or
add
cmpsb
add
rolb
mov
outsb
push
mov
je
aaa
mov
lods
add
lret
pop
add
pusha
cs
sti
mulb
push
mov
daa
iret
jbe
inc
sbb
jb
jns
jnp
inc
mov
daa
sub
add
jb
lret
jae
jmp
jnp
daa
add
mov
pop
cmp
add
add
add
add
add
incl
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
or
add
xor
add
xor
add
jo
add
mov
add
add
add
add
add
nop
add
sbbb
add
push
add
loopne
add
or
add
add
add
or
add
and
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
and
add
add
add
add
mov
add
add
add
or
add
sub
add
add
add
add
add
add
xorb
add
and
add
dec
add
subb
add
jo
add
cwtl
add
sub
add
rolb
adcb
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
enter
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
roll
add
and
roll
add
add
add
roll
add
push
dec
add
roll
add
nop
and
add
add
roll
add
and
add
add
roll
add
add
add
add
add
add
add
add
add
add
add
mov
xor
mov
out
aaa
jmp
add
jg
mov
cmp
std
ds
add
cmp
add
cli
addr16
mov
arpl
jge
jg
cmc
mov
add
aaa
add
jle
add
cmp
add
testl
jge
sub
aaa
jg
add
cmp
add
jnp
add
jnp
add
aas
add
jp
add
aas
and
xor
cmp
add
sti
add
mov
out
mov
jae
ja
repz
mov
aaa
add
imul
jmp
aas
arpl
mov
incl
aas
stos
add
jp
add
jg
mov
mov
cmp
ds
jecxz,pt
cmc
cli
repz
aas
das
add
mov
xor
cmp
add
mov
cmp
cmc
ljmp
add
imul
jnp
add
mov
daa
add
jle
add
ljmp
add
mov
jmp
jg
incl
ja
mov
add
ds
add
jnp
add
mov
arpl
jg
jg
aas
cmp
add
mov
out
aas
cmpsl
add
cmpsl
add
jle
add
mov
jnp
aas
mov
incl
mov
xor
std
jae
std
mov
jae
jne
das
add
mov
aas
add
jp
add
cmp
mov
daa
add
jnp
add
jmp
mov
incl
aas
mov
ja
std
xor
mov
aas
add
mov
mov
mov
jnp
jg
imul
ds
aaa
jnp
add
jg
cmp
mov
mov
add
mov
mov
add
incl
mov
jnp
add
mov
imul
cli
jae
jne
cmpsl
add
mov
mov
jmp
jge
cmpsl
add
sti
xor
std
jp
add
aas
and
mov
xor
aas
mov
stos
add
jg
add
jle
add
jg
add
and
xor
mov
imul
cmp
add
mov
jmp
mov
mov
aas
mov
jecxz
cmc
mov
add
mov
incl
aas
cmp
std
cli
jmp
ja
mov
aas
cmp
add
stos
add
jle
add
mov
mov
add
mov
add
mov
repz
cli
cmp
mov
aaa
add
jle
add
mov
add
jp
add
cli
das
add
ds
add
repz
cmp
add
mov
testl
jge
mov
cmp
add
sti
sti
add
mov
mov
std
mov
add
cmp
add
jg
add
jg
add
and
mov
mov
add
ja
mov
das
add
cmp
aas
mov
jnp
mov
jp
add
aaa
add
mov
ja
std
jle
add
aas
out
jge
arpl
mov
sti
add
cmp
mov
mov
daa
add
jp
add
aas
scas
add
addr16
aas
testl
xor
cmp
add
jp
add
sti
add
jae
cmc
jp
add
arpl
cmp
xadd
push
adc
inc
insl
repnz
cmc
repnz
and
jo
cmp
jo
cmp
arpl
mov
sbb
movsb
cmpsb
shl
and
repz
mov
js
aas
dec
push
nop
xor
lret
pop
and
bound
lock
ds
ficompl
dec
xchg
fldcw
shl
data16
and
movsb
mov
stos
push
inc
data16
sbb
inc
lods
sub
insl
js
xchg
and
js
lret
fists
cmp
sub
push
adc
mov
xchg
js
test
popf
lahf
fs
and
jge
clc
pop
pushf
cmp
mov
sbb
pusha
xor
xlat
pop
mov
fbld
sub
cmp
test
pop
adc
mov
enter
jns
jg
adc
iret
movsb
std
daa
fdivs
scas
pop
adc
call
xchg
xchg
lds
sbb
pop
lds
test
jns
icebp
cmp
pop
jno
and
or
imul
popl
gs
jmp
leave
pop
dec
cmp
popa
inc
aaa
rorb
cwtl
daa
sub
aad
sti
icebp
jnp
std
daa
enter
stos
addr16
popa
leave
and
pop
pop
fucomi
and
shrl
xchg
xor
sbb
and
add
and
add
push
insl
out
sbb
pop
fwait
push
cmp
in
lods
or
mov
mov
pop
sbb
movl
sub
push
in
mov
mov
mov
pop
dec
mov
sbb
adc
lea
dec
add
push
test
mov
jnp
xlat
out
push
inc
xor
insb
adc
mov
push
add
adc
lea
not
hlt
xchg
ja
stos
test
cmp
push
push
cmp
xchg
addb
popf
outsb
fcmove
gs
mov
sub
lock
xor
out
rorl
cli
rol
xor
test
lcall
mov
test
mov
sbb
js
loop
imul
adc
aaa
pop
cwtl
test
mov
jecxz
out
mov
push
test
out
mov
hlt
pusha
ljmp
mov
loope
jb
shl
mov
sbb
pop
sub
inc
mov
sbb
cmpsb
cli
mov
jmp
repz
and
adc
dec
imul
js
jbe
jnp
jo
xchg
ret
aas
inc
push
popa
inc
jg
xchg
pop
jae
xchg
adc
bswap
push
subl
xchg
lret
inc
mov
imul
mov
push
hlt
mov
jmp
jb
iret
imul
repnz
inc
in
nop
loop
test
test
mov
subb
push
mov
jl
ror
adc
ja
call
fidivrs
stos
add
xor
sti
inc
push
jge
insl
push
jae
mov
movsb
nop
fdivrl
mov
dec
sub
lahf
sbb
mov
lahf
nop
push
push
pop
btcl
adc
mov
aaa
inc
cmp
xchg
mov
scas
clc
xor
cli
fistps
lds
rcll
add
shr
xor
mov
inc
mov
cltd
testl
jecxz
adc
into
mov
dec
ret
dec
push
push
aaa
fsubrl
addr16
mov
push
outsl
cld
xchg
mov
inc
les
jno
pop
data16
nop
mov
movsl
and
jno
cs
ret
jnp
push
mov
mov
pop
in
sti
and
and
fildl
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jne
outsb
add
add
add
add
add
outsb
add
add
add
sbb
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
and
inc
add
outsb
add
outsl
add
add
add
add
add
popa
add
jae
popa
add
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
sbb
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
js
and
push
add
insb
add
and
dec
add
outsb
add
popa
add
and
push
add
outsl
add
and
inc
add
add
imul
add
pusha
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
imul
and
test
add
jb
imul
inc
add
imul
and
xor
xor
xor
xor
sub
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
popa
add
jae
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
insl
add
and
push
add
outsl
add
add
add
jne
je
jne
insl
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
fiadds
add
add
add
or
add
add
addb
add
add
add
add
mov
add
inc
add
adc
add
add
or
push
add
add
rcr
add
test
add
add
add
mov
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
and
add
mov
add
sub
add
cmp
add
dec
xor
add
add
push
xor
add
add
add
add
xchg
xor
add
add
add
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
insl
fs
xor
cs
insb
add
jns
je
xor
fs
insb
add
imul
insb
add
imul
insb
insb
add
arpl
xor
fs
insb
add
arpl
xor
cs
insb
add
insb
ja
jo
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
outsb
insl
insl
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
outsb
jne
dec
gs
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
inc
jb
jo
push
jb
je
arpl
je
add
inc
push
je
dec
push
add
inc
insb
jo
popa
inc
insb
outsb
add
push
jne
fs
jno
popa
insb
add
add
je
jae
jb
popa
insl
gs
js
add
push
jb
dec
jae
add
inc
jb
popa
je
inc
jae
outsb
arpl
outsb
fs
je
add
inc
gs
inc
add
add
jb
jne
jb
push
popa
insb
jne
push
add
insl
imul
outsb
