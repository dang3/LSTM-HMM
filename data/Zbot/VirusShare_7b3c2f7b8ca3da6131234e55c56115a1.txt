idiv
lcall
popf
add
and
cs
sti
out
and
jnp
or
inc
pop
pop
pop
ret
mov
ss
and
pop
pop
add
adc
and
pop
pop
ret
mov
cmp
and
leave
ret
ja
decl
pop
pop
leave
ret
pop
or
xor
dec
and
scas
mov
test
or
adc
test
in
lahf
idiv
adc
add
test
adc
or
adc
mov
sbb
imul
inc
push
mov
inc
dec
and
and
jb
pop
xchg
and
lea
lods
mov
movsb
inc
jae
and
adc
dec
and
inc
into
lcall
sbb
sbb
adc
sti
cltd
subb
adc
adc
hlt
adc
stc
adc
xor
xchg
and
xor
jo,pn
xor
inc
inc
adc
xchg
or
inc
adc
es
push
fldenv
push
push
fiaddl
inc
shrl
xor
pop
or
bound
add
sbb
inc
jo
fdivrl
adc
push
inc
mov
nop
cltd
mov
test
lret
or
mov
rol
or
sub
xor
test
scas
inc
lahf
inc
mov
push
cwtl
scas
push
push
in
add
jmp
mov
and
and
and
adc
add
inc
nop
and
mov
and
add
test
adc
in
dec
cli
adcb
dec
sbb
andb
and
jg
repz
inc
addb
test
inc
and
andb
inc
and
outsl
dec
adc
and
adc
sahf
orb
and
test
adc
insl
imul
retw
inc
adc
adc
push
test
leave
movsb
negb
fiaddl
call
push
adc
adc
mov
out
mov
dec
adc
add
nop
inc
loopne
and
test
adc
inc
neg
lods
jnp
mov
ds
and
and
js
cmp
push
add
and
in
xchg
loopne
mov
pop
and
push
int
faddl
mov
fwait
or
dec
ss
rcr
test
adc
mov
inc
adc
test
int3
pusha
add
dec
mov
mov
sbb
inc
mov
lods
xor
and
inc
push
imul
or
stos
test
cltd
mov
es
inc
push
subb
sbb
jbe
dec
and
add
inc
adc
in
cltd
or
jae
and
xor
ret
cs
mov
jle
and
or
movsl
pop
or
push
adcb
out
cli
and
adc
adc
cwtl
add
popa
cmpsb
fnstenv
sub
adc
sub
push
jbe
pop
xor
mov
jbe
add
inc
inc
and
dec
rorl
adc
nop
mov
adc
pop
sub
les
add
mov
popa
and
or
inc
and
push
lret
jae
mov
jle
cwtl
mov
mov
ret
xchg
adc
xor
ret
and
xchg
pop
or
adc
pop
test
orl
int3
and
or
xchg
dec
push
or
add
add
inc
lds
or
mov
xor
adc
pushf
data16
into
add
call
shl
cmpsb
xchg
push
dec
ficoml
jo
and
movsb
mov
lods
pop
or
or
je
shlb
mov
xor
insb
movsb
cmp
cltd
push
pop
adc
nop
add
adc
ret
or
cmp
sbb
aam
dec
inc
pop
cs
pop
fcomps
push
fmul
or
sub
mov
push
out
adc
xor
xor
xor
add
jb
bound
add
pusha
push
pushfw
pusha
lods
pop
adc
dec
int
sbb
or
lods
nop
xor
jbe
cmp
adc
cmp
xor
jl
and
int3
push
fcomps
pop
push
in
enter
lcall
pop
or
jo
cld
push
pop
movsl
in
int3
mov
inc
xor
push
fs
mov
data16
pop
mov
leave
lcall
push
push
in
popa
xor
push
mov
and
fimuls
movsb
in
mov
add
testb
popa
pop
cs
outsb
and
ret
inc
add
push
and
inc
adc
sbb
jp
push
data16
mov
pusha
or
sbb
outsb
mov
or
pop
jnp
imul
cmp
pop
push
xchg
pop
fsts
and
mov
lods
push
push
test
or
mov
cmpsb
xchg
pop
or
stos
xchg
imulb
xor
into
dec
adc
push
dec
clc
inc
add
popa
xorb
xor
cmp
jbe,pt
xchg
inc
loopne
mov
mov
mov
icebp
or
inc
jl
and
cmp
inc
bound
cmpb
sbb
ss
adc
sbb
lock
push
call
pushf
sub
push
sub
jnp
mov
or
imul
xor
fcompl
or
lock
and
xor
xchg
sub
aam
and
int3
or
addl
jp
bound
add
push
sub
lock
test
adc
mov
cmp
insb
jp
jl
nop
push
or
cltd
sbb
sbb
js
loop
cmc
icebp
popa
inc
push
inc
mov
test
es
cmp
dec
push
push
jbe
or
sub
sbb
fsubrl
xor
pusha
sub
in
jo
xchg
bound
lods
mov
cmp
jb
jae
lods
add
movsb
lods
jl
dec
cltd
cltd
dec
add
jb
sarl
or
and
loop
in
mov
popf
fisubrl
inc
rclb
push
push
sbbl
test
dec
mov
orb
nop
bound
ficompl
cltd
cltd
rorb
add
sub
or
cmpsl
lock
sbbl
pop
cltd
cmp
mov
inc
push
adc
adc
ds
sub
movsb
cmp
inc
popa
push
push
into
test
pop
push
cmpsl
add
sarb
test
push
int
int3
andb
pop
add
ret
test
enter
cmp
ret
sub
mov
mov
les
xchg
andl
nop
hlt
and
popa
add
mov
inc
push
pop
ret
adcl
aad
push
or
loopne
mov
addb
addb
inc
int3
into
or
xchg
and
dec
xor
jp
lods
cmpsb
adc
push
sbb
jno
inc
xchg
mov
cld
orb
scas
jl
out
hlt
js
add
adc
bound
jl
inc
je
movsb
andb
es
push
xchg
xor
fnstenv
adc
push
dec
popa
cmpsl
add
jl
fimull
ret
sbb
lcall
pop
sbb
mov
test
adc
add
sbb
dec
mov
inc
inc
stc
mov
js
or
pushf
cmp
test
cwtl
pusha
jb
push
adc
into
nop
mov
es
cmp
call
cwtl
add
xor
cwtl
push
outsb
cmp
lcall
mov
adc
loopne
mov
jo
shlb
xor
shlb
pushf
add
and
rorb
xchg
es
xor
add
xor
lods
cwtl
adc
add
cmp
add
and
hlt
dec
out
cltd
pusha
subb
jbe
js
les
add
cmp
sarb
and
out
pusha
divps
adcb
push
shlb
push
outsb
and
xor
sarb
aad
xlat
dec
and
push
xor
cwtl
cmp
and
or
lods
push
mov
push
fmulp
cmpsl
or
dec
inc
or
add
out
lods
addl
and
mov
inc
int3
lcall
add
mov
or
cmpb
cmp
inc
js
test
fimuls
in
jo
js
cmpb
test
addr16
jo
xor
sbb
add
sub
mov
mov
mov
pop
xchg
lods
and
in
sbb
add
and
xchg
shlb
fs
stos
pop
dec
cmp
rolb
or
pop
xor
inc
adc
push
jmp
add
or
xchg
jb
add
sbb
cmp
hlt
xchg
mov
or
push
adcb
int3
mov
mov
sbb
repnz
decb
adcb
in
fcmovb
imul
add
bound
fs
or
and
icebp
push
sub
mov
push
inc
mov
push
sahf
in
mov
or
mov
push
pop
mov
push
xchg
cwtl
in
rclb
and
pop
or
and
pop
lods
and
dec
sbb
insb
shrb
and
push
pushf
int3
add
bound
das
jmp
inc
loopne
xor
sub
inc
add
lahf
dec
in
and
addb
mov
adc
pushf
data16
loopne
or
jp
adc
sbb
cmp
xor
or
xor
push
sub
or
es
fiadds
or
or
sub
jb
adc
or
adc
loope
and
xor
rol
lods
loope
fisubs
cld
mov
sbbb
mov
pop
or
test
es
cmp
adc
les
mov
loopne
out
inc
loopne
nop
jb
cmp
and
xor
in
mov
sahf
aam
ret
jbe
inc
addb
call
mov
in
or
or
dec
lret
push
mov
fcompl
pushf
dec
mov
out
mov
and
dec
jbe
and
adc
stos
push
cmpsl
test
or
orb
sub
loopne
xor
xor
mov
add
sbb
dec
and
es
push
or
gs
adc
add
pop
mov
test
dec
lea
or
pop
sahf
add
mov
outsl
adc
jl
xor
adc
mul
loop
pop
ret
shlb
sbbb
repz
test
movsl
std
lcall
add
movl
mov
and
push
jno
not
mov
mov
mov
sbb
mov
out
iret
fisubrs
inc
mov
pop
sub
mov
mov
jb
push
cwtl
push
addr16
mov
push
jge
xrelease
je
add
shrb
adc
out
fidivs
jl
into
cmp
pop
enter
shll
insl
aad
mov
mov
inc
neg
not
mov
cs
fldenv
aam
inc
add
out
aam
into
dec
fistpl
stos
adc
mov
mov
mov
daa
mov
cmp
pop
xor
cmp
addr16
btr
sub
push
mov
jge
inc
adc
mov
aam
sbb
test
inc
fidivrl
fstp
cltd
push
shlb
pop
sbb
xorl
mov
adc
ret
fiaddl
sbb
sub
xlat
adc
inc
or
ret
inc
mov
lock
enter
dec
mov
loope
sbb
add
enter
enter
mov
or
shr
fistps
andl
fiadds
sti
rcrb
int
dec
push
cld
outsb
adc
xchg
pop
ret
dec
fsubrl
outsb
shrl
nop
cld
neg
std
test
sbb
filds
loopne
stos
movb
int3
mov
inc
or
mov
mov
mov
cmp
jb
gs
out
pusha
mov
repnz
mov
loop
adc
add
xor
xor
aam
add
out
xor
sub
dec
cs
arpl
jle
or
or
pop
lea
push
push
push
call
jnp
adc
lea
outsl
addr16
dec
aam
rclb
mov
sarb
lock
fcoms
stc
stos
adc
addr16
cmpsb
and
pop
sarl
fiaddl
inc
add
ret
pop
mov
xor
dec
in
xor
divl
lods
dec
pop
test
rcrl
or
sub
adc
lods
sub
pop
add
pop
cmp
fiadds
lock
adc
jg
jmp
pop
scas
in
or
or
adc
sarl
icebp
jmp
mov
jne
inc
dec
sbb
mov
lcall
add
and
jp
clc
cwtl
mov
sbb
push
and
loopne
jecxz
addb
mov
pop
and
add
repz
fbstp
sti
int3
ss
ret
sbb
dec
aam
in
jnp
neg
hlt
lock
jle
inc
add
pop
hlt
add
addl
lock
js
jge
push
hlt
adc
test
adc
cmp
insw
xor
adc
push
inc
out
cmc
ret
lock
cltd
mov
sbb
pop
or
fimuls
lock
cltd
mov
jecxz
mov
lcall
sti
out
adc
cli
add
inc
in
and
push
loopne
aam
jmp
cmp
fidivrs
adc
jne
sub
lods
dec
mov
jns
pusha
mov
pop
pop
and
hlt
or
mov
adc
add
jmp
cmp
sti
push
jae
sub
lock
add
jmp
sbb
push
mov
sbb
dec
hlt
add
mov
xor
call
aaa
cmp
add
or
imul
out
rcrl
fisttpl
adc
lock
fbstp
dec
loopne
jmp
decb
loopne
pop
mov
xlat
lock
fs
add
rol
lret
xlat
call
or
cmpsl
xor
insb
push
jb
dec
push
mov
xchg
shl
insb
add
jge
xor
fisubrs
scas
ret
sti
jo
dec
jb
in
xchg
mov
xchg
sub
add
rcrl
sbb
loopne
xor
cmpsl
mov
sbb
loopne
mov
dec
aaa
pop
std
jle
add
pushf
shll
push
test
pop
mov
hlt
arpl
mov
fcoml
adc
push
inc
push
pop
punpckhbw
fiaddl
mov
in
inc
nop
mov
divb
mov
cmp
push
push
push
scas
dec
inc
jg,pt
mov
mov
adc
shrb
adc
fcmovnu
insl
orl
and
fmull
addr16
xor
jb
pushl
push
enter
xor
inc
jmp
cmp
add
outsl
push
xor
push
mov
and
mov
jle
adc
ret
add
cli
jb
imul
push
cmp
repz
cmp
mov
addr16
cmpsb
pop
adc
push
or
dec
add
int3
movsl
jne
ja
in
outsb
stos
inc
aas
adc
adc
xor
mov
sbb
jns
iret
mov
mov
pusha
ficoml
es
push
sbb
jno
jg
sbb
sbb
mov
jo
xor
lock
shrb
loopne
imul
inc
sub
inc
mov
sbb
and
or
repz
sbb
adc
inc
jle
add
aad
inc
mov
ds
mov
ret
ret
in
push
xor
loope
loope
inc
cmpsl
mov
jnp
nop
negb
pop
pop
mov
in
repz
jo
fadds
jno
or
mov
mov
sub
mov
cs
dec
and
cmpl
mov
sti
pop
pop
cli
roll
mov
and
push
icebp
in
loop
or
aas
scas
loope
pop
cwtl
adc
mov
cmp
ret
mov
icebp
ja
ljmp
das
fbstp
dec
adc
lret
xchg
cmp
or
jmp
jmp
mov
sbbb
add
inc
inc
mov
sti
push
or
je
iret
sub
add
lods
or
mov
dec
enter
rcll
pop
and
sub
scas
mov
mov
or
bndstx
mov
mov
popl
cs
outsl
movsl
sub
popa
pop
adc
ss
inc
push
arpl
add
cmp
and
adc
aaa
sbb
add
inc
sub
add
cmp
addl
mov
push
mov
jbe
aaa
ljmp
cld
xor
push
daa
sub
aaa
icebp
testl
add
and
sub
call
pop
fiadds
sub
add
nopl
dec
out
push
sub
in
add
sub
mov
jl
out
adc
jo
pop
pusha
mov
loopne
in
insl
lret
ret
and
cs
push
mov
sbb
cld
mov
adc
mov
scas
jne
dec
jg
fs
cwtl
adc
push
and
jne
jo
pop
dec
pop
cmpsb
mov
xor
sbb
sub
hlt
add
cs
mov
outsb
mov
or
cmp
loopne
or
and
clc
xchg
or
push
icebp
sub
loope
js
out
fcomi
fidivrs
inc
jp,pt
mov
mov
or
mov
data16
pop
mov
xor
adc
jmp
insb
icebp
pushf
sbb
sbb
out
clc
les
dec
nop
xlat
add
adc
lods
sub
hlt
sbb
jo
es
das
clc
adcb
rclb
xor
loopne
lock
ret
pop
mov
insb
testl
mov
pop
clc
sub
adc
rol
sbbl
xchg
or
addb
call
lahf
loopne
mov
dec
call
mov
clc
sbb
and
mov
xlat
popa
cmp
push
sub
adc
pop
popl
lock
jb
rolb
mov
sub
lock
sub
shr
sahf
push
out
dec
test
jne
xor
rorl
dec
add
xor
clc
lret
in
xchg
inc
or
adc
lock
fadd
mov
bndstx
rcrb
mov
pop
and
in
and
ja
sub
jns
mov
xor
xlat
dec
sub
add
inc
fdivp
jbe
cmp
popa
and
jg
test
and
inc
add
hlt
and
scas
insb
push
push
xor
movsb
add
ja
icebp
add
rolb
shrb
sti
lock
xor
dec
or
adcb
scas
stos
dec
sub
sbb
lcall
loop
sbb
es
xor
popa
shlb
sub
dec
mov
icebp
xor
scas
mov
xchg
and
out
jno
lahf
pop
icebp
add
lea
mov
sub
insl
and
aaa
pop
sbb
push
std
fwait
xor
mov
es
push
jo
pop
pop
lret
mov
add
lcall
dec
in
int3
cmc
shll
stc
cmpsb
leave
ret
les
cmpl
fdiv
jg
not
neg
dec
and
call
das
js
imul
das
cwtl
or
adc
add
push
pushf
popa
test
mov
mov
xor
lahf
inc
push
dec
adc
cltd
mov
mov
sub
mov
sub
test
in
fsubs
inc
frndint
mov
clc
sub
or
addl
adc
adc
outsb
test
adc
pusha
hlt
fidivs
cs
xchg
sub
push
pop
sub
pop
jl
and
cmp
mov
mov
pop
inc
push
jns
inc
sub
push
out
adc
ds
out
or
xchg
call
add
or
mov
test
sbbb
mov
out
int
ja
adc
sbb
lret
cmp
mov
mov
mov
dec
iret
das
add
push
adc
adc
sub
or
cmc
push
scas
cmp
jae
cmp
addl
nop
add
or
jg
and
repnz
out
mov
jo
pop
xor
movsb
dec
inc
ss
stos
jge
and
push
arpl
pop
lret
push
ja
jl
stos
and
inc
or
cli
loop
test
nop
push
out
mov
jne
bound
rcll
push
rorb
mov
dec
sub
test
faddp
or
inc
pop
rcrl
lret
mov
sarb
fmull
add
adc
pop
cli
out
sbb
jp
cli
addb
mov
ljmp
movsl
xor
test
mov
aaa
mov
pop
dec
add
xor
imul
cmpb
jo
popf
sub
movsl
cmp
jo
idivb
fwait
jo
inc
adc
sahf
add
loop
add
fs
mov
jno
mov
outsl
rclb
cs
pop
mov
xor
pop
cwtl
sub
dec
cmp
add
xor
cmp
inc
dec
jl
adc
xchg
pop
in
push
flds
push
mov
stos
aaa
dec
mov
pop
dec
pushf
or
cli
sbb
adc
mov
dec
mov
test
repz
das
sbb
jmp
repnz
in
js
jl
sbb
pusha
mov
mov
loope
jnp
add
lods
dec
adc
add
sbbl
jne
cld
jb
adc
mov
test
sbb
and
add
adc
dec
cmp
or
popa
scas
shlb
add
jmp
rclb
fdivrp
jne
push
lea
jl
fdivl
push
aam
in
call
sbb
inc
ret
mov
js
test
sub
fcomps
jp
leave
popf
in
xlat
inc
fidivs
jo
lock
jo
adc
rcpps
push
sbb
or
and
push
jnp
stos
dec
stos
fidivs
jae
insb
clc
jle
add
in
je
out
jmp
inc
sbb
ljmp
pushl
ret
pop
xor
dec
jmp
dec
ficomps
adc
push
jge
add
std
movsb
dec
in
mov
dec
sub
fcmovb
sub
add
sbb
cmp
rorb
inc
or
psubusw
outsl
faddl
xchg
addr16
clc
mov
cmp
iret
not
cld
ret
bound
mov
xchg
mov
mov
sub
daa
jbe
call
movsb
int
out
add
addr16
xorl
fstp
push
daa
adc
mov
data16
lret
cs
movsl
cmp
jge
cmp
push
imul
jg
xor
jle
ret
popf
fwait
xchg
cmp
inc
ficomps
sbb
mov
adc
adc
aad
mov
pop
out
mov
jbe
add
movsl
adc
enter
adc
dec
das
mov
add
cltd
mov
xchg
push
dec
bound
pop
sbb
es
jne
loope
lahf
add
adc
dec
pop
loope
jo
pushl
sub
add
sub
jge
jnp
scas
cmp
or
add
pop
add
mov
ja
xorl
xor
shrb
xor
cmc
in
xchg
inc
add
es
cmp
outsl
daa
fdiv
dec
or
loop
sub
and
ljmp
add
je
inc
or
shll
add
jne
in
es
test
mov
cld
xchg
loope
sub
mov
xchg
in
lock
rcr
xbegin
arpl
jne
rcrl
aam
pop
aam
dec
mov
add
add
jge
adcb
mov
sarb
pop
add
lret
add
scas
vmovmskps
dec
push
int3
fstp
mov
ret
es
int3
mov
cmp
cmp
add
dec
mov
out
fdivrs
enter
jge
mov
pusha
mov
cld
ret
ss
mul
scas
inc
adc
into
mov
lret
mull
shl
add
adc
enter
pop
popf
push
or
loope
sbb
daa
ret
xchg
sub
xor
jnp
test
adc
push
dec
clc
es
loope
je
ljmp
sub
scas
push
test
mov
iret
pusha
loopne
mov
adc
or
in
push
sbb
mov
mov
adc
mov
aam
pop
push
push
rcr
dec
mov
lock
jmp
xor
sysenter
mov
cwtl
popa
jo
inc
jne
test
cmp
push
adc
out
jo
pop
dec
rolb
sub
mov
mov
add
movsb
shl
jo
test
sub
cmp
mov
ret
push
add
fmull
cmp
add
rcr
adc
or
or
adc
push
in
rol
in
sub
adc
pop
sar
mov
cmpsl
cmc
push
outsl
push
and
sbbl
and
fs
test
sbb
push
add
sbb
or
adc
outsl
xor
fdivrs
and
adcb
rcll
sub
cld
xchg
ja
xchg
fmull
call
cmc
xchg
xchg
xchg
aad
inc
scas
mov
mov
rolb
add
and
lds
rcrb
xor
lea
mov
push
ja
mov
call
bound
xor
fldl
das
test
mov
filds
push
mov
adc
push
hlt
fcomp
cmp
push
hlt
jo
cli
loop
mov
dec
add
mov
push
xabort
inc
xchg
dec
test
jle
lret
xchg
add
or
fcoms
mov
sbb
les
and
pusha
add
adc
jp
outsl
jg
sub
loope
mov
xor
push
sub
fisttpll
fcompl
jl
push
adc
testl
fimull
mov
loopne
push
mov
in
ljmp
pop
scas
add
xor
jg
fldz
ret
orb
popf
sti
loopne
and
and
push
lss
enter
xchg
push
loopne
push
loop
in
les
into
mov
lock
sbb
sbb
aad
mov
insl
inc
inc
adc
and
ja
mov
mov
addr16
add
lock
pushf
jmp
pop
xchg
sbb
cmpsl
sbb
pop
mov
xlat
and
adc
and
pop
and
fstps
push
xor
inc
xchg
mov
js
add
dec
dec
enter
push
add
adcl
push
and
push
mov
in
in
cli
push
inc
cmp
xor
inc
dec
pop
iret
pop
mov
popa
shll
lock
mov
jo
repnz
mov
push
push
or
or
lods
enter
jp
mov
jo
fsts
adc
roll
add
enter
or
push
sub
xchg
fadd
and
testb
mov
cld
and
dec
sbb
and
sub
mov
adc
pushf
add
rcl
jecxz
inc
jbe
jg
xor
inc
enter
xchg
and
sahf
rcl
cltd
enter
xor
push
test
clc
dec
stc
pop
sub
or
out
add
or
jno
adc
loopne
in
filds
push
ret
testb
js
pop
sbb
call
sbb
fists
adc
pop
int3
lods
dec
fidivrl
xlat
ljmp
xlat
mov
out
and
int
loopne
add
mov
in
dec
in
adc
fisubs
mov
xor
adcl
jbe
cmpl
hlt
push
push
lea
push
push
call
outsl
mov
push
scas
loop
jb
imul
push
mov
xchg
or
lsl
sbb
orl
cmpsb
outsb
xor
mov
mov
filds
or
jmp
mov
cmp
add
push
call
inc
in
int
push
fcoml
je
out
in
flds
adc
xor
xor
addl
shll
lret
les
cmp
cltd
jmp
scas
int
mov
adc
sbb
push
aam
testb
mov
or
lock
mov
shlb
loope
sysexit
or
loopne
xchg
test
sub
inc
sbb
aas
imul
cs
cmp
in
scas
cld
arpl
or
xchg
adc
rcrb
iret
add
add
or
dec
and
lahf
xlat
add
icebp
jne
add
loop
btr
cmpl
cld
xor
cld
xor
dec
xor
loopne
push
pop
daa
mov
sub
cld
stc
shr
push
mov
lret
xor
sbb
cmpsl
jbe
push
jns
mov
scas
inc
sub
cmp
je
movsl
mov
mov
rolb
push
mov
inc
repz
scas
push
imul
add
hlt
loope
lock
push
fmuls
cli
repz
jmp
sahf
idivl
inc
dec
and
ja
xchg
test
xlat
mov
adc
dec
test
faddl
jae
sub
lds
imul
mov
push
adc
nop
movsb
adc
jl
ret
jmp
and
add
stos
and
fnop
inc
out
sub
xchg
push
inc
sub
lds
test
add
xor
lds
enter
loop
shl
push
push
gs
aas
orb
in
and
arpl
test
add
mov
cld
sbb
sbb
push
push
or
call
add
scas
xor
xchg
pop
fs
das
or
dec
xchg
xchg
clc
xchg
push
pop
mov
push
push
add
pop
dec
add
jo
aaa
loopne
push
out
jno
mov
fisttpl
aaa
loop
mov
mov
xor
les
cmpsb
aas
fcomps
roll
dec
rcr
mov
add
mov
mov
jnp
sub
jo
push
sbb
xchg
or
or
push
inc
inc
fcmovnb
cmp
popa
sub
lods
jge
cmpsl
add
mull
fcompl
adc
imul
pop
or
mov
push
stos
sub
jl
pusha
jbe
jbe
push
and
or
inc
rol
push
cmp
outsl
and
inc
mov
or
pop
ljmp
lods
lock
inc
stos
xchg
pop
or
pop
or
movsb
sbbb
clc
in
adc
sbb
sub
sbb
addr16
dec
mov
or
mov
sub
xchg
das
sti
nop
enter
daa
sbb
jle
cmp
loopne
cli
daa
adc
enter
push
repnz
aad
jge
aad
jae
test
mov
es
push
and
dec
inc
out
loopne
add
jmp
in
fistps
jle
or
mov
cmp
jbe
cwtl
loopne
sbb
inc
adc
add
sti
jp
mov
fmul
test
xor
mov
in
call
adc
mov
inc
dec
mov
icebp
cltd
add
jo
arpl
cmp
pop
adc
imul
notl
test
lret
and
mov
incl
stc
add
rolb
add
ljmp
mov
icebp
jge
mov
jg
clc
add
adc
call
test
adc
pop
mov
pop
sbb
adc
pop
inc
mov
repnz
arpl
cmpl
inc
inc
mov
addl
inc
cld
movsb
hlt
cmp
mov
mov
or
sbb
sbb
cld
sub
or
imul
sub
std
inc
mov
or
mov
inc
popf
mov
sahf
push
add
add
das
testb
or
pop
push
das
xor
ljmp
jg
xor
rorb
popa
fbstp
jo
sbb
jbe
push
sub
or
dec
push
cld
fsts
popa
fisubrs
repz
fadd
sbb
inc
inc
pop
jg
out
gs
mov
dec
jne
loop
xor
cld
int
scas
push
sub
loope
mov
pop
icebp
add
rolb
sub
test
sub
fsubrl
sbb
daa
xchg
push
jecxz
ss
add
mov
jnp
inc
dec
sbb
aam
or
adc
subb
std
dec
outsl
fadds
add
add
das
outsb
or
dec
addl
lds
dec
in
dec
enter
and
fisubs
sbb
lret
push
mov
sub
cltd
lock
fldenv
mov
sbb
and
mov
js
mov
lret
and
outsb
out
std
or
xchg
jae
cmp
ds
addl
int3
push
add
mov
bndstx
xchg
mov
stos
xor
int3
shlb
and
sub
xchg
adc
dec
addb
add
aaa
repnz
adc
inc
cld
lods
popa
loopne
mov
out
test
mov
and
mov
icebp
enter
or
push
mov
sub
mov
cmp
push
adc
inc
js
push
add
cmp
insl
jbe
add
and
lea
ds
sbb
out
sbb
incl
inc
jno
xor
push
lea
scas
cs
cmp
jbe
adc
in
cmp
je
and
cmp
adc
icebp
shlb
add
sbb
xor
clc
adc
test
sbb
pop
cmp
shrl
scas
or
mov
jg
notb
sub
mov
and
adc
mov
outsb
outsb
dec
and
push
push
mov
repz
das
idivb
lret
cld
lcall
inc
xchg
mov
push
jbe
push
ss
or
add
xor
sub
sbb
in
test
fidivl
pop
mov
sub
cs
repnz
sbb
jbe
add
loopne
add
ljmp
leave
div
fwait
pop
fsts
push
test
imul
lret
sbb
mov
jne
xchg
idivl
push
pop
or
mov
add
and
shl
dec
sbb
lcall
and
fnstenv
xor
roll
sub
and
jo
xorl
testb
xor
call
xchg
mov
xchg
xchg
jno
and
cmp
or
test
inc
dec
repnz
ljmp
lods
mov
push
ret
or
adc
add
dec
jg
shlb
xchg
addr16
pop
ret
jmp
sbb
inc
les
push
mov
loope
cmp
adc
ss
mov
cmp
sub
std
lahf
sub
jno
sahf
std
imull
cmpsl
sub
xor
and
ds
adc
outsl
push
adc
adc
and
and
inc
sbb
xor
out
loop
mov
sbb
repnz
adcl
js
daa
popl
je
pop
dec
dec
fldt
mov
mov
rorb
pop
ret
push
mov
inc
xor
nop
loopne
daa
pop
or
popa
ret
mov
shll
xchg
repnz
dec
jp
outsl
dec
in
ds
inc
dec
add
add
and
add
or
test
sbb
loope
fmull
fidivs
inc
or
sbb
dec
cmpsb
lahf
stos
xchg
stos
mov
or
mov
pop
mov
sbb
and
enter
push
jae
fisttps
jmp
lahf
inc
outsb
sbbl
outsb
or
faddl
das
xor
test
and
or
dec
pop
roll
cmp
mov
xchg
jmp
adc
je
cmp
add
out
shll
icebp
sbb
and
cmp
ret
or
adc
pushf
or
clc
in
pusha
push
or
cmp
andl
pop
ret
adc
cld
loop,pt
pop
js
fcoms
rcr
jecxz
jp
xor
xor
or
mov
lock
jae
ja
dec
ss
shlb
std
mov
outsl
lods
fistpl
add
xor
xor
push
loopne
ret
aas
dec
and
cs
mov
pop
repz
pusha
or
add
mov
neg
pop
shll
jmp
insb
sbb
lret
filds
push
sub
jmp
jo
mov
dec
adc
divb
icebp
xchg
pop
xlat
test
sbb
and
jnp
jge
pusha
push
xchg
loope
outsb
movsl
cwtl
enter
pop
adc
adc
sbb
push
xor
mov
pop
addr16
cmc
xchg
pop
mov
loopne
xor
pop
sub
das
jne
xchg
fyl2x
in
testl
mov
add
loop
jae
sbb
in
sub
push
iret
mov
loopne
sarl
add
push
cld
sarl
mov
fwait
mov
in
push
add
ja
in
sub
ret
pop
movsl
dec
dec
nop
adc
or
in
incb
incl
pop
and
push
push
jne
sub
clc
push
xor
jl
cmpsl
cmp
sub
ret
pop
dec
inc
cmp
test
ss
push
clc
cmovs
and
in
and
xchg
icebp
xor
out
mov
inc
mov
nop
xchg
add
cmp
cli
movl
mov
mov
xchg
lds
xor
and
sbb
adc
sahf
rolb
mov
lcall
das
call
scas
loop
jle
jecxz
cmp
adc
xor
sti
ret
and
fistl
sbb
sub
addb
cld
dec
xor
sbb
jmp
adc
shll
inc
test
adc
cld
lret
add
and
addb
xchg
mov
sub
stos
filds
xor
aam
sbb
inc
or
jnp
inc
movl
xor
es
push
outsb
ret
cwtl
jb
push
xor
sub
inc
dec
in
aam
push
or
xor
dec
adc
pop
dec
jo
or
loopne
dec
sbb
lock
fistps
inc
jno
add
or
and
dec
loopne
or
or
fsubr
sar
jne
inc
adc
faddl
sub
dec
lret
jne
int3
sbb
lods
cld
cmc
out
mov
aam
mov
xchg
cmp
mov
mov
inc
xchg
cmp
and
or
cmp
inc
stc
push
or
lea
push
or
movb
adc
pusha
and
mov
scas
fisubrl
xchg
sub
push
mov
push
inc
call
dec
daa
sbb
dec
push
mov
sbb
jno
daa
loope
xchg
dec
xor
insb
sbb
add
mov
add
sahf
pusha
jno
add
lret
add
jns
cmp
ljmp
mov
cs
sbbb
jle,pt
xor
xchg
call
add
mov
shlb
cwtl
jns
xchg
adc
das
sbb
sub
sub
or
test
dec
cmp
roll
inc
sub
and
mov
sub
je
inc
andb
inc
mov
ret
fs
rcrb
sbb
cld
or
in
and
fwait
sub
inc
addr16
adc
jne
or
adc
xchg
sbb
jmp
stos
mov
mov
lock
dec
pusha
mov
repz
adc
dec
jo
pop
fcmovu
xor
inc
pop
adc
adc
bound
loop
loope
adc
adc
sbb
fists
inc
test
in
add
sbb
loop
cmp
inc
and
fsub
push
push
sbb
bound
pop
mov
dec
and
sub
xchg
push
sti
lahf
mov
repnz
rclb
xchg
fistpll
rorb
in
adc
outsb
lock
sahf
outsb
inc
inc
testb
das
insl
fidivrs
pop
pop
and
sub
out
sarb
pusha
gs
jge
pop
cmpsl
mov
sti
add
mov
stos
xchg
xchg
mov
push
andl
dec
xlat
add
mov
dec
pop
in
and
pop
clc
jo
iret
jo
xor
fldl
enter
out
movsb
sti
inc
les
in
stos
push
addr16
cmpb
scas
add
or
sbb
sub
bound
xorb
inc
popa
insb
clc
and
loopne
push
clc
xchg
js
mov
ljmp
sbb
jp
pop
fdiv
fwait
pop
jecxz
sub
jle
mov
xor
add
mov
sub
add
data16
rolb
cmp
mov
cmp
je
xchg
sbb
jl
das
mov
cmp
mov
je
lret
addl
popa
in
cmp
dec
inc
std
loop
fxch
push
ds
aas
mov
ret
xor
in
add
cmc
jne
add
or
testb
push
mov
inc
inc
stos
test
aaa
js
sbb
cmp
and
pop
mov
add
out
jmp
jne
dec
jo
rcrb
xor
mov
clc
add
inc
pop
sbb
scas
and
inc
ljmp
or
mov
test
movsl
dec
push
or
ret
xor
cmp
lahf
clc
mov
les
inc
idivb
enter
mov
cmp
and
jg
mov
test
rcrb
ss
outsl
or
lock
pop
xor
xor
addb
in
mov
shrl
inc
repnz
lock
and
mov
dec
add
clc
and
jb
stos
sub
rcll
add
icebp
lods
test
mov
dec
sbb
and
inc
ret
mov
pop
sub
movb
fisubrl
jae
lret
sbb
mov
ljmp
lret
add
dec
push
pop
mov
cltd
pop
aad
adc
sbb
pop
adc
mov
dec
ljmp
xchg
jp
xor
test
jecxz
sahf
xchg
xor
rolb
sub
cmpsb
xor
sbb
dec
or
or
pop
add
jnp
test
ja
lods
notb
xor
add
cmpsb
pop
sbb
add
pop
popf
sahf
or
add
ret
pop
in
push
loope
pop
sbb
roll
js
inc
out
inc
das
mov
adc
lcall
and
call
adc
test
bound
mov
std
rolb
mov
mov
xchg
pop
cmp
and
repnz
fmul
iret
adc
jle
ss
ror
push
jl
add
adcb
sar
mov
cmp
lahf
mov
jmp
movsl
cmp
jbe
xchg
loop
aaa
mov
subl
fnstenv
add
push
xchg
loopne
insb
inc
outsl
mov
test
jae
push
jb
and
cmpsl
leave
add
les
cmc
xor
cmpl
jmp
xor
xchg
or
les
or
out
fimuls
cmp
add
cmpsl
idivl
outsl
mov
jmp
xchg
stos
sub
pop
mov
sbb
mov
sbb
jnp
sysexit
ret
mov
fisubl
mov
or
fwait
psrlw
sub
cld
in
ret
les
jecxz
movsb
ret
add
add
adc
push
inc
mov
adc
rcrb
and
loope
movsb
push
clc
mov
mov
nop
xor
add
add
add
js
jns
jle
jmp
dec
stos
sub
roll
dec
pop
test
jnp
push
repz
fimull
cmp
jl
test
lock
cli
enter
sbb
out
stos
subl
out
mov
cmp
int3
les
push
sub
mov
and
sbb
or
popa
pop
push
and
lds
loop
aam
or
add
in
cmp
jbe
jae
or
push
test
dec
sbbl
inc
sarl
sbb
fcoml
mov
shl
push
or
inc
fwait
loop
sbb
jmp
sbb
js
pushf
dec
inc
xchg
lods
test
add
scas
inc
test
add
sub
andb
mov
sti
je
or
xor
push
push
hlt
or
pusha
bnd
mov
mov
lods
lea
mov
rep
negl
jnp
sarl
outsb
aad
mov
push
add
call
and
add
lods
enter
outsl
mov
push
dec
out
loop
add
mov
clc
js
out
jl
sub
add
ds
inc
inc
gs
inc
ret
das
js
adc
mov
jnp
xchg
xor
ljmp
ret
push
sub
std
inc
pop
pop
mov
mov
or
add
jmp
cmc
test
pop
push
or
add
pop
xor
cmp
rcll
lcall
xor
rclb
ret
jb
adc
ljmp
or
inc
clc
cmp
fisttpl
outsb
push
rcrl
movsb
jp
popf
or
sarl
push
pop
mov
inc
mov
cmp
add
mov
adc
outsl
shrb
or
inc
cs
clc
add
cmpsl
or
sbbl
push
add
insb
addb
mov
lock
rorb
jbe
cmpl
sbb
pusha
adc
fidivs
sahf
dec
or
dec
jp
loop
or
stos
pop
in
int
ss
ja
addr16
sub
xchg
pop
lea
lock
testl
mov
push
sub
jo
daa
pushf
inc
outsb
and
add
cld
ret
addl
mov
mov
mov
jae
repnz
in
inc
push
cmpsb
fimull
inc
mov
addl
mov
adc
dec
xor
mov
loopne
mov
cmp
insl
sbb
call
loope
pop
shr
addr16
sbb
pusha
add
bound
hlt
mov
or
dec
sub
jbe
int
fcomps
jbe
js
dec
nop
inc
sub
sbb
or
fstpl
bound
jge
cli
jg
add
adc
pop
and
test
lret
insl
and
cld
neg
and
call
jne
das
pusha
inc
movsb
add
stc
insl
adc
push
mov
add
rol
sbb
into
loope
rolb
jbe
outsl
sub
ret
add
ret
icebp
sbb
xorl
xor
jle
shll
jno
scas
push
out
adc
stos
jmp
mov
and
mov
cmpsl
ja
xor
jmp
movsb
popf
aas
movsb
ret
xchg
ficomps
and
shlb
data16
dec
lea
pop
icebp
stc
jo
pusha
and
in
xchg
in
cmp
mov
mov
sbb
push
cltd
imul
push
pusha
jb
inc
and
push
movsb
adc
mov
push
jge
xor
lock
and
addb
out
aaa
flds
js
stc
add
aam
aaa
add
cmp
lret
sbb
stos
stc
mov
fsubs
and
inc
mov
out
leave
les
sub
xor
fdiv
xchg
das
sbb
add
pop
sti
push
xlat
fcomi
cmpsb
nop
stos
sbb
inc
or
inc
cmpsl
inc
cmp
daa
dec
in
dec
popa
mov
jbe
das
inc
int
push
pop
inc
in
in
and
ret
jl
out
ljmp
stc
push
outsb
or
inc
push
mov
mov
fdivrs
movsl
imul
jecxz
inc
pop
add
ret
dec
rcll
add
ljmp
xchg
repnz
xchg
lock
mov
sub
mov
sub
mov
popa
cwtl
pop
repz
and
add
add
adc
std
into
loopne
cmp
aaa
fldl
fimull
cmp
test
push
mov
enter
xchg
dec
cmp
test
push
pop
nop
or
xlat
test
ret
loop
enter
fisubrl
inc
and
loope
pop
xchg
add
addb
sarl
cmp
fwait
xchg
pop
sbb
jmp
aaa
sbb
and
mov
ljmp
rcl
inc
gs
dec
subb
jl
sbb
repnz
sti
xchg
add
and
sub
mov
sahf
je
jmp
inc
rol
or
andl
loopne,pn
das
cs
sub
mov
lcall
ret
add
lods
into
pop
rolb
or
xor
flds
popf
icebp
xchg
or
addl
mov
icebp
loopne
ret
xorl
lock
xor
dec
xor
scas
add
jmp
movb
scas
mov
xchg
inc
adc
jmp
cmp
jb
scas
mov
cwtl
dec
add
inc
aas
and
dec
push
loope
mov
lock
stos
std
cmc
call
hlt
or
loopne
and
lcall
xchg
sahf
jo
lock
pop
push
fcompl
ds
sbb
mov
or
add
inc
out
repz
outsb
inc
lea
jno
rcrl
adc
cmp
inc
and
mov
adc
test
push
shlb
pop
dec
xor
sbb
pop
mov
jmp
loopne
ror
jae
sub
add
fidivrl
pushf
pop
lods
imul
dec
inc
xchg
sbbb
mov
lods
icebp
and
fs
jl
pop
out
mov
sub
pop
jne
cmpsb
xorl
shl
ja
adc
jmp
sbbl
leave
enter
and
jl
mov
pop
pop
out
xor
fcomps
xor
ficomps
popf
adc
push
jmp
lret
cmp
js
out
cmc
push
ss
shl
sbbl
add
add
sub
or
pop
mov
loope
dec
lds
rcll
push
clc
mov
scas
inc
pop
inc
and
mov
test
sarl
fistl
xor
shrl
sbb
les
cmp
adc
dec
jno
or
mov
das
sbb
cmpsl
xchg
dec
xchg
or
or
sbb
sarb
xor
xchg
or
push
lock
push
jne
cmc
bnd
lods
out
add
daa
dec
sbb
inc
jb
adc
std
xlat
sbb
out
dec
scas
leave
mov
mov
lods
cmp
fwait
sub
jmp
lock
jbe
sbb
add
fdivrs
aam
sbb
push
and
in
incl
mov
inc
addb
inc
push
fistl
clc
and
fistpl
enter
pop
hlt
pop
lock
mov
jne
or
and
fidivs
add
insb
xchg
xchg
or
xor
mov
clc
sub
clc
out
shlb
inc
fbstp
mov
in
xchg
sub
add
push
jecxz
xchg
das
mov
in
sub
scas
pusha
push
pop
pop
clc
or
add
mov
dec
out
cmp
inc
mov
jbe
rcl
pop
mov
push
mov
jne
nop
dec
stos
lods
or
cmc
jns
addl
inc
pop
mov
add
jecxz
lea
and
jb
adc
fdivp
add
dec
mov
add
or
mov
pop
rorb
in
popf
push
inc
cmpsl
mov
inc
push
sub
dec
dec
mov
adc
ja
pusha
adcl
xchg
mov
inc
dec
mov
nopl
add
jbe
arpl
cmp
mov
adcl
out
mov
jae
adc
mov
bound
es
mov
add
dec
sbb
pop
lea
ret
fisubs
inc
inc
sbb
cmp
fists
mov
adc
movsl
repnz
and
pop
adc
lret
adc
add
push
mov
test
cmp
push
xor
lea
rorl
lret
or
outsl
enter
mov
dec
mov
adc
jecxz
jne
lods
jae
rolb
jecxz
clc
jbe
mov
int3
xchg
jle
dec
add
imul
jmp
sbb
shl
inc
fnstsw
push
les
add
cmc
cmp
mov
pop
shll
add
mov
inc
cltd
jnp
addl
mov
xor
sarb
xlat
add
mov
cmp
push
and
sarb
into
jge
add
aam
lock
jns
shlb
add
aas
es
fwait
cmpsl
dec
add
test
push
mov
mov
xchg
adc
test
jmp
aas
cmpsl
inc
out
sub
xor
popf
ret
sbb
adc
and
cmpl
mov
rclb
movb
xorl
test
pop
push
mov
sbb
mov
hlt
roll
enter
dec
push
pop
imul
cmovo
nop
loop
outsl
call
test
fs
in
jle
clc
jmp
call
inc
outsb
and
add
push
add
movlps
dec
jo
lods
cwtl
icebp
inc
sub
jmp
test
jnp
xchg
mov
inc
sbb
push
push
data16
push
repz
and
fimull
mov
xorl
sub
lea
cmpb
jb
js
pushf
and
ret
aas
mov
adc
arpl
icebp
mov
push
pop
lret
int
mov
lret
movsb
pop
push
mov
dec
xor
xor
push
scas
aaa
js
adc
mov
or
and
inc
mov
aad
xchg
jecxz
imul
sbb
pusha
cs
and
cld
je
stos
sub
outsl
xlat
mov
cltd
out
clc
scas
lock
jo
loop
clc
repnz
add
das
out
push
mov
fisttpl
xchg
push
or
iret
cmp
mov
xor
sbbl
dec
imul
inc
in
in
pop
andl
add
adc
adc
or
test
mov
rorl
cwtl
icebp
cmpsl
enter
test
ja
cmp
mov
cmpps
dec
gs
sbb
scas
pusha
inc
test
mov
xorb
mov
or
jne
addb
lock
out
mov
dec
data16
xchg
xchg
sub
sub
mov
arpl
int
cmp
icebp
popl
pop
out
dec
inc
sti
inc
xchg
dec
mov
mov
andb
xchg
sub
inc
leave
dec
xchg
popa
test
ja
dec
fwait
sahf
jbe
adc
push
mov
inc
adc
pop
imul
pop
dec
je
out
adc
cwtl
gs
cmpsb
sbb
mov
movsl
lcall
adc
ljmp
inc
les
pop
xorb
pop
jmp
add
sbb
cmp
jge
test
mov
xchg
sbb
xor
or
jbe
aas
cmc
int
adc
test
jbe
cmp
andl
cmc
adc
xor
xor
pop
xor
mov
or
roll
and
jne
push
mov
mov
cwtl
movsl
aam
push
push
cmp
sbb
push
jmp
lock
sar
sbb
sbb
xchg
jp
movsl
das
test
push
rcrb
push
test
dec
std
ss
mov
push
outsl
push
aam
fmuls
push
and
add
cld
call
aaa
or
andl
add
enter
mov
push
push
test
repz
jmp
mov
lret
jg
mov
call
adc
aaa
int3
js
loop
pop
cmp
push
push
lods
sbb
scas
xor
cmpsl
leave
inc
ljmp
dec
rep
shl
mov
in
loope
xchg
loopne
fbld
or
pop
pop
out
outsb
or
pop
lods
add
add
and
daa
ret
sahf
push
shl
inc
mov
dec
add
mov
mov
mov
loopne
imul
mov
test
jecxz
xchg
add
lcall
lock
in
cmp
push
add
movsl
paddusw
sarl
or
pop
clc
or
ret
cmp
in
inc
out
cltd
xchg
call
inc
sub
and
lds
jb
fxch
sub
adc
or
leave
sub
cld
adc
mov
loopne
or
rolb
por
add
mov
xor
or
rorb
xchg
les
imul
push
ds
test
repnz
xchg
or
js
push
xor
iret
cmp
mov
icebp
push
neg
loopne
pop
inc
mov
dec
movsl
inc
jge
sub
dec
test
das
and
inc
repnz
mov
dec
arpl
jnp
xchg
lret
lods
pop
cmp
xchg
aas
sub
mov
enter
jecxz
loop
imul
lock
loopne
sbb
les
popf
mov
xor
stc
xchg
xchg
mov
or
loop
or
dec
movsl
orl
and
adc
movsl
xor
mov
call
dec
in
push
jg
cmp
test
push
cmp
inc
rorb
and
imul
popa
or
push
mov
pop
loopne
adc
mov
test
loopne
jne
or
scas
fsubrs
push
sbb
mov
ds
jg
insb
daa
jae
push
add
adc
popa
scas
incl
cmp
andl
pop
out
push
and
rclb
jge
cmpsb
cmpsl
push
inc
sub
xchg
clc
xchg
imul
or
xchg
push
bound
push
scas
cli
lret
test
int
xchg
sti
xor
test
aas
cmpsb
and
leave
push
les
cmp
jl
sub
adc
cmc
or
stc
sub
adc
scas
mov
jb
mov
push
dec
insl
testl
dec
jne
mov
lea
sbb
and
das
add
push
xlat
jmp
add
stc
sbb
repnz
loopne
push
in
ret
nop
adc
sbbl
dec
mov
ret
in
jg
mov
xor
das
orb
and
icebp
and
push
jp
adc
cmpsl
std
adc
dec
pop
xor
and
imul
pop
mov
mov
sbb
and
sbb
cwtl
and
jg
fwait
mov
adc
shlb
jmp
cmp
jae
pop
sub
insl
mov
addb
outsb
hlt
into
les
into
loope
lret
je
adc
pop
int3
movsl
jmp
sub
or
dec
cmpsb
fmuls
adc
popa
lea
icebp
int3
mov
push
xor
testl
int3
mov
lock
and
fs
jmp
je
or
out
jns
xor
mov
psrld
xchg
or
xchg
out
out
lcall
inc
push
mov
cmpsl
dec
loopne
cmp
rolb
clts
mov
push
pop
ret
stos
inc
sbb
out
xor
cmpsb
addb
xchg
in
xchg
into
inc
lcall
cld
mov
testb
mov
fs
sbb
mov
data16
pop
mov
cmpl
or
fst
jae
jnp
sbb
das
mov
or
mov
es
add
or
add
mov
cmp
xor
cmp
mov
dec
jo
pop
push
jb
or
and
pop
in
mov
mov
cmp
test
adc
add
adc
cmpsl
cmp
enter
xchg
jmp
inc
aaa
pop
mov
je
stos
pop
shll
les
pop
jmp
fdivs
sub
das
clc
lock
icebp
and
das
mov
pop
mov
call
jbe
and
or
add
mov
fisubrs
mov
mov
rolb
call
mov
repnz
adc
xor
add
ja
jnp
dec
inc
jl
jp
loop
pop
push
adc
lret
mov
and
subb
jns
sub
dec
fdivrp
sub
mov
movsb
push
js
insb
jg
push
sbb
mov
loop
pop
sbb
cmp
jnp
adc
push
in
clc
cmp
call
jmp
jnp
inc
enter
or
call
xchg
xchg
scas
andb
call
push
or
add
scas
cmc
arpl
pop
xor
rcll
movsl
dec
mov
sub
stos
loopne
inc
fmulp
sub
jo
push
mov
lock
jecxz
xchg
ljmp
cld
rcl
jmp
adc
bound
sub
clc
mov
jne
xchg
jns
ja
sbb
xchg
insb
or
mov
fs
add
mov
pop
leave
js
loop
aad
lock
xchg
mov
shlb
or
pop
push
add
push
dec
fldl
es
xor
fisttpl
into
lea
sahf
mov
sub
mov
je
pop
js
aam
movsl
xchg
pushf
jae
push
sbb
hlt
mov
dec
gs
dec
mov
popa
jecxz
pushf
and
inc
xor
into
not
inc
xchg
popa
mov
add
add
jp
fsubs
xlat
insl
pushw
mov
addr16
gs
jo
mov
push
pop
dec
imul
ja
int3
je
dec
add
or
test
shrl
clc
push
xchg
xor
pop
adc
inc
add
hlt
test
fmul
add
jp
mov
popf
lods
mov
add
mov
xor
jmp
icebp
lahf
jp
loope,pt
and
mov
loope
sbb
or
cmpsl
add
sti
mov
test
inc
arpl
jns
test
hlt
sbb
rcll
mov
mov
fiaddl
mov
mov
add
add
test
push
je
divl
pushf
ret
jo
add
js
outsl
movsb
adc
ret
lds
test
jb
mov
adc
sbb
or
test
cmpsl
cmpsb
and
xchg
xlat
das
fs
xchg
jl
inc
call
sbbl
jp
shll
stos
fcoms
mov
add
js
jg
out
add
and
xor
sbb
push
push
outsb
pop
orl
enter
and
loopne
fdivs
xchg
push
out
bound
insb
lret
aas
adc
fwait
pushf
add
adcl
aaa
sar
icebp
repz
aad
fdivrs
mov
push
xor
sub
fucomp
push
push
pop
add
loopne
dec
sub
lods
fidivrl
fiadds
roll
icebp
lret
jmp
and
inc
insb
fmuls
dec
imul
std
movsb
outsb
rorb
jge
outsb
testb
icebp
dec
and
add
mov
inc
or
lods
and
jp
cmp
movsl
fnstenv
hlt
mov
jns
aaa
cmp
fadd
adc
jb
xchg
fldenv
jo
inc
jl
ret
jg
pop
push
cmc
cmc
mov
rorb
pop
loop
pushf
dec
cld
add
cmpsl
scas
sub
pop
inc
mov
push
out
adc
aam
and
out
sbb
ljmp
negl
push
rcrb
lahf
aam
push
pop
testl
test
clc
pop
jbe
mov
rcrb
hlt
lcall
lret
xor
sarl
xchg
xchg
rorb
adc
int3
or
jp
nop
clc
and
push
push
scas
mov
pusha
cltd
cli
mov
pop
inc
sbb
xor
mov
rolb
out
mov
jmp
add
add
jb
loop
jp
ret
clc
les
pop
mov
sarb
repz
rcr
xchg
lock
dec
idivl
clc
je
pop
pop
push
out
mov
push
or
add
dec
push
push
jmp
push
sbb
xor
push
int3
mov
push
sub
push
clc
adc
insb
dec
mov
or
movsb
nop
ja
sub
jns
mov
jp
fcom
popf
ficoml
subl
adc
ja
fildl
or
popf
fmull
jle
cmp
push
js
inc
scas
xchg
and
sbbl
jecxz
lds
rorb
and
push
mov
cli
enter
dec
lods
pop
cmp
mov
mov
daa
jne
xchg
pop
insb
and
mov
sbbl
add
mov
inc
xchg
xchg
cmp
cltd
mov
and
pop
mov
cld
dec
ret
icebp
mov
inc
push
cltd
shrb
fists
imul
mov
push
xchg
testb
cmp
add
in
pop
push
outsb
sub
xor
mov
jge
lock
jbe
add
in
add
gs
xor
sar
popa
xchg
jno
add
xor
push
aaa
xlat
adc
rorb
and
js
ret
in
test
loopne
and
add
flds
pop
test
xor
mov
push
clc
inc
or
or
dec
mov
loopne
cmp
sub
push
dec
fisttps
xor
enter
jo
and
outsl
xchg
add
test
and
push
popf
inc
xor
pop
ds
nop
push
sbbb
push
xor
cli
rcll
mov
js
jne
push
imul
adc
add
mov
jo
add
call
adc
push
adc
aas
ffree
or
and
cmp
divb
push
mov
hlt
loop
fisttpl
pushf
imul
ret
addr16
lcall
mov
mov
push
stc
sbb
les
shlb
sbb
lods
call
addr16
dec
sub
insb
dec
loopne
mov
in
cmpsl
mov
decb
sti
inc
sti
add
sbb
fucomip
sub
mov
cmp
inc
sub
sub
es
xor
fs
add
hlt
push
inc
lock
push
mov
adc
div
add
dec
inc
add
adcb
repz
or
and
cmp
mov
or
int
sahf
lods
hlt
call
mov
and
inc
jge
sub
stc
loopne
adc
call
lods
push
sub
aas
xor
adc
in
sub
imul
lock
push
push
push
pop
or
stos
push
out
call
aas
pusha
and
and
adc
pop
ljmp
sbb
add
addl
insl
and
popf
lock
loopne
xlat
imul
push
add
cmpsb
aam
test
jle
std
imul
adc
es
mov
push
in
fildl
add
ljmp
je
cmp
dec
clc
mov
cmp
push
iret
jbe
push
int3
stos
sub
shlb
xchg
and
in
add
push
dec
icebp
hlt
cwtl
les
and
lahf
xchg
arpl
incb
in
in
push
pop
sti
sbbl
fdivl
cwtl
hlt
mov
hlt
cs
aad
push
add
or
or
aas
dec
mov
push
cld
push
arpl
adc
inc
mov
repnz
cmp
shr
mov
les
dec
mov
add
cmp
or
xor
rcll
jb
ret
pavgb
mov
das
dec
jnp
movsl
mov
sub
hlt
pop
ror
add
push
incb
shlb
in
dec
les
lock
ret
dec
mov
mov
iret
cmp
dec
pop
cld
xchg
jnp
adc
jb
mulb
call
add
lahf
lret
or
jl
pop
in
ljmp
pusha
sbb
loopne
mov
ret
xlat
cmp
adc
dec
xlat
add
mov
mov
rol
adc
cwtl
mov
xchg
test
pop
xchg
cli
push
push
or
xor
icebp
jge
lock
adc
shl
xchg
or
imul
dec
jg
or
out
pop
sub
add
popf
or
push
xor
and
push
aad
jg
shll
sub
or
dec
sub
mov
xlat
ret
je
mov
rcrl
mov
pop
shrb
add
int
dec
lcall
mov
test
movswl
popa
lock
aas
mov
das
insb
es
push
scas
xor
subb
xchg
push
iret
hlt
mov
dec
in
inc
add
sbb
sbb
in
push
es
rclb
push
loopne
lcall
mov
aas
xor
andb
add
subb
add
push
xchg
scas
loop
pusha
jecxz
setbe
imul
insb
lods
xchg
repz
sbb
and
leave
test
sar
mov
pop
and
jmp
lcall
pop
push
or
mov
dec
jg
add
inc
or
mov
cld
cmpsb
ret
xchg
lock
xchg
dec
jl
lods
pop
push
inc
shlb
mov
in
hlt
mov
pushf
xorl
rorl
in
mov
mov
mov
or
sub
mov
adc
scas
lcall
or
inc
ret
jnp
jp
shlb
jecxz
jl
or
and
sti
iret
cltd
dec
mov
mov
repnz
out
inc
in
out
add
dec
xor
test
loop
adc
pop
sbb
pop
xchg
rorb
mov
cmp
shll
lret
mov
andb
and
and
loope
jle
aas
mov
or
iret
pushf
cs
pop
je
xchg
js
faddl
add
cmc
cltd
jle
popf
push
sbb
hlt
xchg
dec
aam
dec
xchg
and
xor
lods
add
add
mov
popa
and
js
add
or
mov
dec
push
push
repnz
call
and
jecxz
fwait
add
rorl
add
int
iret
fsub
add
push
mov
mov
sbbl
testl
ss
fsts
dec
inc
gs
iret
inc
ja
rcr
sub
jp
test
adc
mov
cmp
lods
test
icebp
and
mov
stc
fimull
call
lret
mov
and
stc
mov
push
push
xchg
add
xor
adc
xorb
dec
sub
aam
adc
or
and
add
pop
nop
pop
mov
loopne
and
pop
sub
idiv
dec
rcrb
add
push
cmp
add
data16
adc
and
and
dec
sarb
test
lea
xor
xchg
icebp
stos
adc
mov
stc
sbb
mov
and
jle
jmp
inc
popa
clc
pop
pusha
adc
sbb
or
test
push
mov
adc
xchg
fdivs
dec
inc
inc
add
add
into
xchg
add
fbld
sub
addb
testl
shl
xchg
sub
or
adc
bswap
sbb
pop
xor
movsb
cld
es
pop
pushf
iret
push
pop
and
or
and
out
adc
dec
dec
inc
add
cmp
loop
pop
pop
pop
sbb
sti
inc
in
sbb
je
jb
aas
cmc
xchg
jg
ss
or
or
imul
push
or
loope
in
mov
push
xlat
mov
inc
and
mov
dec
pop
inc
das
cmp
mov
and
adc
into
loope
pop
mov
daa
dec
stc
add
add
push
cmp
xor
mov
mul
adc
js
jl
inc
loopne
mov
shr
mov
lock
fiaddl
loop
mov
les
cmp
mov
sub
shrb
xchg
xor
xor
or
or
inc
out
lret
je
faddl
dec
and
sbb
push
sbb
mov
pop
lret
fcompl
stc
jno
mov
and
push
mov
in
add
add
fsubs
sub
pop
ds
push
add
xchg
iret
adc
or
in
jb
ror
push
dec
xor
add
adc
gs
inc
jge
popf
adc
push
lock
xchg
jbe
idivl
mov
cmp
movsb
call
les
rorb
ret
sbb
and
mov
fcompl
lret
fmulp
out
xor
lock
push
mov
rolb
je
add
or
fistpll
sub
subb
and
outsl
je
and
add
sarb
jp
xor
movsb
test
push
inc
and
add
lods
lods
lds
xchg
aad
add
mov
scas
stos
pop
rorb
dec
dec
clc
sbb
mov
fmuls
xchg
nop
adc
jle
enter
sub
dec
inc
int3
ret
shlb
dec
jl
adc
sbb
push
push
int3
push
add
jb
pusha
dec
jnp
mov
pop
in
push
rolb
test
pop
add
lds
out
xchg
or
sti
xchg
sbb
pusha
jne
fwait
add
andl
sbb
out
jne
clc
data16
pop
xchg
sub
rorb
fwait
pop
fisttps
sbb
push
pop
negl
mov
and
and
jns
mov
lea
push
jl
popa
cmp
pop
push
jnp
adc
cmp
lds
inc
add
adc
sbb
add
and
daa
stos
enter
int3
lea
arpl
lock
repz
jne
cmc
or
mov
and
sub
insl
jmp
inc
loop
mov
xor
dec
andb
mov
jne
xorl
jo
dec
repz
divl
mov
lds
popf
xchg
sub
or
adc
fidivrs
inc
add
xchg
ret
jge
rol
fnstcw
sbb
mov
and
out
sbb
xorl
shrb
inc
cmpl
and
js
xchg
jae
bound
repnz
nop
inc
pop
fdivs
pusha
mov
fcom
xor
popa
enter
mov
push
sub
adc
mov
clc
addr16
jmp
test
jbe
jne
flds
add
sar
xchg
lock
fdivrl
sbb
enter
addb
cs
add
mov
and
mov
jle
rcrb
cmp
movsb
xor
push
add
dec
jb
xor
mov
sahf
orl
add
scas
dec
call
add
repnz
mov
xor
add
mov
push
mov
or
push
inc
xor
mov
js
push
mov
inc
jo
or
outsl
cli
xor
fdivrs
adc
cmp
fadd
mov
adc
mov
sbb
cs
inc
ja
clc
jg
sub
mov
dec
daa
and
stos
adc
scas
mov
popa
jle
call
dec
aas
loop
push
orb
jmp
ret
mov
pop
or
inc
or
add
xor
sbb
inc
cmp
mov
push
faddl
out
jl
inc
sti
fistpl
push
mov
jmp
call
filds
test
repz
movsl
xchg
pop
sarl
add
add
fbstp
adc
or
and
sub
sub
nop
sbb
pushf
mov
xchg
and
shl
and
loop
pop
adc
fstl
orb
outsl
sub
lcall
sub
out
xchg
das
or
jno,pt
pop
sub
loope
mov
out
mov
jmp
mov
test
popw
push
add
mul
out
add
shll
inc
ret
mov
and
dec
cmp
cld
adc
hlt
and
cmp
ret
cmp
xor
jb
outsb
pusha
adc
lods
mov
add
or
leave
inc
mov
jb
mov
jg
rol
cli
xor
jecxz
and
or
ja
popf
loopne
or
clc
loope
bound
push
test
add
adc
leave
rclb
stos
out
xor
pop
pop
pusha
jge
mov
std
mov
or
or
test
or
clc
les
pop
scas
push
push
shr
inc
lcall
aam
repnz
fs
orb
sub
or
cmp
clc
inc
mov
pop
sbb
cmp
popa
fmull
enter
pop
rolb
inc
jno
dec
mov
sub
inc
dec
add
scas
ret
ljmp
loopne
add
pop
or
inc
mov
rolb
das
or
add
push
popf
cli
shlb
hlt
dec
jle
mov
sub
inc
xchg
push
add
pop
addr16
aad
outsb
sbb
jnp
or
aam
mov
dec
and
sbb
int3
idivb
das
cmp
add
je
pop
add
mov
scas
push
inc
cmp
add
repnz
or
ficoms
add
imul
clc
out
push
lret
mov
lds
stos
push
test
sahf
adc
mov
push
pusha
mov
in
xor
inc
fdivs
aam
outsb
add
icebp
call
loopne
sbb
mov
xor
push
push
sbb
dec
add
call
and
sbb
sbb
inc
add
xchg
add
jg
scas
xor
add
inc
adc
fwait
jo
popa
pop
adc
push
mov
cmp
xor
fimuls
inc
loopne
scas
jnp
pop
sbb
push
cmp
cmp
add
pop
dec
stos
stos
adc
clc
mov
mov
stos
push
inc
cmp
mov
or
shrl
xor
xchg
sbb
and
shl
jbe
and
into
ljmp
fadds
xchg
sbb
aaa
lock
rclb
xchg
fimull
or
or
das
repnz
mov
and
mov
inc
std
popf
or
xchg
or
mov
out
daa
fs
bsf
cmp
ja
pop
lret
push
adc
lods
jno
mov
push
pop
push
adc
ja
or
xor
sbb
dec
aam
adc
pop
jecxz
xor
lret
loop
rcll
sbb
lea
pop
roll
dec
sbb
mov
xor
inc
lret
stos
fildl
loope
dec
js
jl
push
xchg
flds
pop
decb
cmpsl
cltd
aaa
insl
cmp
mov
mov
lods
sub
dec
xor
and
xor
cmpb
add
cltd
int3
sbb
add
movsl
mov
add
mov
es
mov
cmpsl
push
sti
or
sub
insb
adc
xchg
cli
arpl
adc
cmpsl
jns
test
aam
mov
jg
lods
cld
push
xlat
jmp
stos
xorb
mov
or
mov
or
not
sub
add
filds
add
jp
or
insb
frstor
xchg
fmull
sbb
jbe
push
or
inc
cmp
sub
lcall
pop
lock
sub
or
sbbb
pop
adc
test
mov
scas
and
sbb
fcmovb
ds
sub
bound
test
scas
ljmp
sub
test
inc
xchg
mov
mov
addb
and
mov
add
scas
test
jne
shlb
ficomps
fldt
cmp
xor
loopne
or
mov
cmc
or
and
inc
lahf
mov
roll
ja
fimuls
dec
jo
mov
sub
inc
inc
lea
xor
add
outsb
fnstenv
clc
add
mov
call
mov
mov
imul
adc
nop
ror
stos
ljmp
mov
sbb
in
push
fsubrp
push
clc
push
call
mov
pop
pop
repz
and
add
xchg
inc
jno
mov
inc
mov
bound
into
lcall
faddl
adc
sbb
loope
push
xchg
lods
jns,pt
dec
xchg
lock
lds
stos
xor
push
ret
pop
add
push
jle
lcall
mov
addr16
je
in
push
cmpsl
aad
jno
jns
arpl
outsb
or
movsb
pop
mov
and
sub
leave
mov
xchg
subb
test
inc
mov
lea
dec
mov
loop
lahf
js
repz
mov
jnp
repnz
adc
testl
mov
in
jl
push
outsl
pop
repnz
or
pop
push
les
adcl
bound
jecxz
jo
lock
shll
cs
mov
arpl
pop
out
xor
out
lret
sbbb
test
sbb
add
rcrb
and
sahf
adc
icebp
pop
faddl
adc
aas
int3
xor
add
and
inc
pop
hlt
dec
dec
add
pop
mov
or
xchg
add
fstpt
xor
sub
and
lret
jae
pop
jl
dec
add
xor
inc
and
jmp
mov
jp
fildl
call
sub
loop
cmp
or
bound
mov
sbb
add
mov
outsl
cld
fistpll
out
cmpsb
pop
dec
jbe
add
add
adcl
pushl
or
inc
adc
sub
pusha
dec
cmpsl
insb
push
and
dec
dec
adc
add
cmp
cltd
shr
iret
jmp
add
mov
insl
sbb
out
ret
sub
push
das
jl
nop
sbb
sub
xchg
cmp
sbb
cmpsl
sti
stos
push
xlat
mov
inc
sbb
or
add
pop
xor
add
repz
loopne
and
imul
pop
push
movsb
xlat
je
sbb
jecxz
sbb
xchg
push
ljmp
add
add
jns
nop
sbb
dec
jmp
test
push
xchg
rorl
inc
cwtl
jmp
pop
aad
sbb
fmuls
andl
cmp
cmpl
dec
inc
mov
adc
js
or
pop
mov
lods
add
andl
jo
cli
xor
add
pusha
sti
daa
test
loope
fidivrl
xchg
push
gs
sti
or
dec
mov
mov
and
cmp
sub
mov
cmpsl
push
mov
loope
add
in
jl
pop
mov
lock
fdivs
adc
dec
les
add
lods
inc
cwtl
inc
or
adc
add
xor
pushf
js
lock
aam
insb
mov
scas
mov
idivb
push
inc
mov
xchg
lock
loopne
das
mov
push
mov
sub
add
jno
pop
adcb
inc
jmp
movsl
imull
pop
add
scas
mov
sub
inc
or
movsl
mov
lock
je
sub
push
pop
xchg
loope
pause
dec
cmpb
lret
shrl
test
daa
sub
cmc
popa
fldl
test
imul
jb
mov
repz
and
push
test
xchg
sbb
outsl
push
dec
or
xor
or
dec
jns
je
or
or
dec
pop
mov
fsubr
push
sub
mov
sbb
dec
mov
dec
shl
cmp
jbe
dec
in
dec
outsl
adc
xor
lock
daa
pxor
mov
xor
dec
inc
pusha
and
cld
add
enter
test
jb
or
adc
add
iret
or
add
inc
out
rol
rcrb
stc
lods
test
nop
pusha
push
fdivl
jle
sbb
into
ret
les
add
cmp
addr16
rolb
mov
cmp
js
xor
add
scas
fmuls
adc
imul
addr16
and
cwtl
adc
xchg
int
push
push
pop
mov
les
or
in
enter
sub
cmp
add
add
into
sahf
sub
push
shll
mov
add
sahf
push
adc
leave
inc
mov
add
mov
sbb
sub
add
xlat
jle
mov
mov
roll
aam
sub
xor
jle
jo
ficoml
ret
mov
int3
xor
jp
push
adc
push
lock
push
mov
mov
sbb
and
mov
pop
jg
cmp
pushl
jecxz
push
test
dec
mov
dec
test
inc
nop
loopne
push
sbb
mov
orl
loope
icebp
jo
push
popf
lock
sbb
pop
test
sub
push
daa
inc
sub
push
or
add
call
sbb
sbb
lock
pop
dec
inc
popa
int
jp
mov
mov
sub
lock
cmp
jne
aad
rcrb
lock
orb
in
push
call
and
out
push
rcll
push
ficomps
fdiv
sub
addb
and
jmp
jne
test
sub
sbb
and
inc
or
fmuls
lea
fsubs
mov
sbb
xchg
sahf
cmpsb
movsl
int3
or
lods
dec
pop
cwtl
jg
cmp
push
xor
adc
lock
mov
dec
dec
imul
in
nop
or
sub
sti
inc
movsl
sahf
or
rcrl
push
scas
pop
dec
adc
jmp
cld
call
add
cmp
mov
jle
fisubs
mov
lods
mov
scas
mov
sub
pop
hlt
add
in
fadds
lods
pusha
jnp
loope
stos
push
add
push
jo
mov
mov
sub
movsl
out
mov
pop
xor
rorl
fsub
popa
add
aam
cmc
ja
adc
sub
sbb
popf
xor
fmuls
mov
jo
mov
sbb
sbb
adc
cmpps
xchg
mov
jmp
push
fs
sbb
enter
daa
fcompl
push
and
das
jle
hlt
les
dec
push
adc
shll
out
adc
mov
arpl
loope
cld
test
mov
insb
ret
popa
gs
pop
xlat
mov
push
cmp
pop
mov
es
insl
dec
dec
adc
rcr
pop
jmp
mov
or
nop
pop
lahf
and
into
test
sbb
cs
stos
jge
cld
xchg
sbb
test
and
or
mov
and
jmp
and
jno
pop
repz
cli
adc
sub
add
test
jae
inc
xchg
push
jl
inc
fimull
call
jne
push
sbb
sbbb
decl
stos
cld
and
xchg
arpl
cwtl
lock
mov
xor
mov
adcl
popa
shlb
and
and
arpl
pop
mov
es
pop
mov
daa
cmp
aas
imul
cld
rclb
test
mov
push
xor
outsb
pusha
rol
mov
pop
dec
lock
pop
dec
mov
adc
mov
sub
repnz
sub
clc
fwait
popa
fildll
sub
faddl
mov
test
popf
mov
les
negl
inc
pop
adc
adc
lock
gs
xchg
xor
int
or
out
lds
cltd
and
faddl
ja
cmp
clc
scas
xchg
je
loopne,pt
xchg
jp
stc
loop
jo
cmp
lea
pop
fdivl
pop
push
and
inc
popa
xor
sbb
add
push
clc
sub
mov
inc
lahf
mov
sbb
dec
dec
fidivrs
js
sahf
push
inc
das
in
call
xchg
xor
test
sub
aas
sbb
loop
leave
and
mov
mov
in
mov
js
mov
repz
loopne
inc
fsubl
adcb
hlt
mov
jecxz
or
sarl
pusha
faddl
or
push
aam
add
xchg
and
shlb
loope
inc
rcl
les
add
mov
mov
mov
xchg
push
shll
sub
movb
cmp
repz
push
enter
add
cs
sub
adc
in
mov
or
pop
sbb
mov
push
push
jns
fs
or
lock
pop
filds
and
push
push
clc
lods
lock
and
cmp
repz
addps
push
pop
fwait
sub
push
mov
in
clc
jo
adc
sahf
jecxz
mov
lods
out
fdivp
adcb
ljmp
add
or
adc
sbb
repz
addr16
mov
push
scas
push
int
std
push
add
cli
pop
sub
in
add
pop
lret
add
scas
pinsrw
inc
enter
loop
or
xchg
lock
popf
dec
out
add
mov
jae
xlat
sbb
fbld
mov
insl
add
mov
aas
bnd
mov
add
dec
pop
or
add
pusha
movsb
sbb
jp
cli
lea
pop
jmp
pop
stc
push
loopne
stos
loopne
xchg
icebp
inc
adc
push
inc
mov
sub
mov
popl
pop
addb
aas
mov
movsl
divl
sub
outsb
call
push
lret
shr
daa
pop
jge
imul
sbb
lahf
sbb
jbe
fs
xchg
std
mov
push
mov
test
and
or
jl
xor
fdiv
or
out
pop
imul
lds
rolb
inc
lcall
fwait
ret
jp
adc
lock
push
cld
filds
shl
inc
pusha
or
xchg
mov
icebp
rol
icebp
lcall
stos
ja
orl
jecxz
rcll
xchg
shrb
mov
nop
cmp
scas
shr
push
ljmp
xor
inc
cltd
pop
scas
loopne
xchg
js
fdivr
test
xor
inc
add
mov
fbstp
add
sbbb
adc
loopne
movsl
and
dec
dec
aas
clc
scas
pushf
and
add
sbb
push
add
add
mov
shlb
jl
jle
mov
xchg
fisubl
add
pusha
add
or
add
mov
aad
mov
in
scas
sar
test
xor
dec
in
xorb
mov
inc
lcall
outsb
and
add
xchg
lock
cwtl
push
pop
je
lock
sbb
cmp
orl
sub
loop
and
push
lret
add
jl
cwtl
sub
dec
ljmp
pusha
sbb
pusha
aad
adc
loopne
enter
jge
icebp
pop
push
lock
mov
iret
repz
enter
push
xlat
dec
sub
pop
or
inc
jge
mov
cmpsb
arpl
stos
out
shlb
repz
es
inc
filds
push
loope
jno
das
xchg
in
jnp
popf
xor
ret
dec
ret
decl
add
cmp
inc
outsl
imul
mov
mov
gs
push
pusha
movsb
add
loope
pop
repz
mov
inc
and
andb
or
aas
rcrl
sub
shll
lds
lahf
or
xchg
push
and
inc
xor
stos
movl
xchg
adc
sub
or
enter
or
adc
call
xchg
adc
test
fcomp
jbe
dec
push
sbb
imul
js
xchg
add
xor
rol
bound
unpckhps
shr
or
xor
sbb
rorl
cmp
rol
loopne
test
add
stos
loopne
negb
xor
push
in
xor
xor
jmp
sub
bound
cmc
add
repnz
sub
mov
jae
dec
add
dec
shll
sbb
xor
push
pop
mov
movsl
cmp
mov
add
adc
push
inc
add
addr16
dec
int
repnz
cltd
cli
jne
ss
or
mov
out
add
leave
xor
dec
add
inc
ret
pop
add
mov
inc
pushf
sbb
mov
out
mov
push
aam
movsb
add
mov
and
and
popa
jecxz
loopne
xchg
mov
and
or
dec
or
and
and
jns
lea
in
cli
sbb
out
inc
cli
ret
mov
sub
ret
dec
ret
in
cmp
or
sbb
int
mov
in
pop
loope
inc
mov
sbbb
loope
cli
adc
and
add
or
aam
xor
sbb
lahf
mov
adc
js
inc
add
jg
xchg
ds
aaa
xor
loopne
mov
push
cmp
popf
loopne
add
imul
mov
gs
decb
sub
lahf
pop
lea
mov
jno
pop
jo
out
jmp
iret
add
or
jmp
fs
adc
loope
mov
and
iret
loopne
inc
inc
sub
adc
movsl
shlb
or
xor
cwtl
jecxz
add
add
stos
lods
xchg
add
add
mov
adc
cmp
pop
fisubrs
cs
xabort
call
flds
add
mov
scas
mov
adc
fucomip
inc
push
inc
mov
ficompl
cld
sbb
stos
loopne
lahf
push
or
dec
js
or
jo
sub
cmp
inc
call
adc
stos
outsl
fmuls
pop
add
jns
jecxz
enter
out
push
push
test
lods
push
push
fistpll
add
dec
int3
scas
mov
jl
call
in
inc
adcl
and
dec
lock
sbb
dec
das
pop
mov
repnz
shrl
ljmp
sbb
mov
xor
inc
scas
dec
sbb
xchg
dec
outsb
xor
and
cmp
and
mov
mov
sbb
dec
ljmp
les
pop
or
lret
sbb
mov
lret
xchg
jg
cmp
adcb
imul
mov
cmp
ds
adc
fisubl
hlt
shrb
dec
in
xchg
shr
jnp
ret
mov
shl
pushf
adc
dec
push
ret
push
mov
ret
and
sbb
push
xchg
xchg
mov
inc
dec
cmpsl
jecxz
aas
out
pop
push
pop
shll
jecxz
lods
cltd
adc
push
pop
aaa
push
out
mov
lcall
pop
jl
out
mov
clc
push
sub
mov
int
mov
mov
repnz
mov
xor
repnz
jp
fwait
push
or
stos
push
cmpsl
dec
mov
lds
xchg
dec
xchg
push
fidivrl
outsb
insl
and
hlt
lret
data16
and
dec
push
movb
or
fmuls
sbb
add
jmp
sbb
cmp
cmc
inc
js
cmp
int3
imul
add
pop
mov
data16
pop
pop
dec
and
mov
fs
sbb
jmp
stos
lds
out
ds
gs
pop
dec
rorl
dec
ret
cld
lods
xchg
icebp
mov
add
cltd
adc
xor
push
bnd
pop
sbb
mov
push
mov
dec
adc
or
jns
in
sub
jge
ret
inc
and
mov
test
mov
dec
mov
xor
xlat
subl
mov
lods
daa
daa
mov
sahf
adc
iret
fwait
ret
arpl
pop
sahf
sahf
les
popa
xchg
or
mov
movsl
sub
sbb
sbb
inc
mov
pop
test
sti
icebp
add
adc
xor
and
push
and
adc
test
ja
push
pop
jo
fidivrs
inc
jecxz
dec
notb
sub
sbb
clc
and
fwait
adc
imul
lds
fcmovbe
or
nop
dec
or
loopne
jne
xor
cmpb
divb
jo
js
add
cmp
jmp
inc
insl
les
dec
cmp
pop
add
inc
mov
jmp
xchg
sbb
cmp
les
sub
sub
fsubrl
xchg
mov
dec
dec
mov
fildl
addl
mov
inc
repnz
in
push
mov
sbb
or
dec
push
jecxz
xor
pop
sub
or
es
shrl
jp
repz
maskmovq
push
or
dec
jecxz
aas
add
mov
push
add
lcall
jo
les
aaa
push
jecxz
leave
mov
jne
testb
lret
jne
push
test
dec
pop
inc
shr
fisubrs
xor
adc
test
rorb
repz
enter
aam
inc
sub
mov
clc
mov
cmp
pop
mov
loope
cwtl
push
sub
mov
test
and
xor
mov
add
sub
outsb
cmp
clc
test
mov
aam
cmp
xchg
std
push
pusha
pusha
loope
cmp
call
loopne
in
std
lret
movsb
mov
test
shlb
popf
pop
jne
and
rclb
add
lret
in
adc
push
cmp
rclb
sbb
lcall
adc
enter
arpl
stos
jle
push
inc
xorb
push
push
sub
ret
add
out
jmp
jbe
push
addl
in
pop
pop
imul
bound
inc
adc
pop
or
sbb
loop
fcom
sub
push
cmpsl
dec
xorb
scas
iret
pop
rcr
jmp
mov
add
xorb
and
jle
adcl
mov
jge
jecxz
pop
adc
xchg
inc
cmp
sub
or
xchg
cmc
hlt
dec
loopne
pop
test
jbe
sbbl
inc
dec
pop
cmp
es
adc
pop
inc
or
aas
into
dec
clc
adc
add
mov
push
lret
testl
jl
orb
add
ret
jmp
scas
and
cli
dec
xchg
call
inc
dec
mov
xchg
or
call
sbb
popa
aam
xlat
jns
adc
movsl
jno
dec
inc
pop
shrb
iret
in
fwait
dec
insb
lods
cmp
inc
jmp
nop
push
mov
jmp
add
push
or
fidivrl
or
lds
imul
scas
lods
push
insl
jge
dec
stc
mov
or
or
lods
loope
sub
scas
shrb
das
pop
aam
imul
dec
repnz
gs
in
rorb
xchg
sbb
adc
loope
shl
lret
fsubl
decb
imul
fs
sbb
sbb
mov
push
sarb
or
sbb
test
lret
push
int3
bound
hlt
enter
shl
js
sbb
shlb
mov
jnp
adc
popa
adc
addl
or
cmp
xor
scas
aam
adc
iret
adc
hlt
sub
cwtl
das
ja
rorl
or
bound
add
shr
incl
and
cmp
pop
or
dec
or
mov
add
test
and
pushf
rolb
push
add
loope
xor
enter
jle
fisttpl
or
pushl
nop
or
sub
inc
lods
mov
or
xchg
outsb
ret
fists
pop
imul
or
add
or
add
cmovb
push
jecxz
push
xchg
enter
mov
mov
inc
notb
cs
pop
loope
test
sbb
adcl
inc
push
mov
ficoms
add
popa
jns
insb
enter
jg
rclb
ret
ja
xchg
inc
out
cmp
jmp
out
test
imul
dec
push
rorb
adc
pop
test
out
add
push
adc
push
sub
loope
in
push
mov
mov
pop
mov
add
push
mov
incb
imul
test
pop
fdivl
inc
or
or
sbb
in
fbld
lret
push
adc
addb
in
xchg
je
lcall
add
ljmp
add
add
jmp
clc
fists
sub
adc
and
pop
sbb
dec
xor
test
fldt
push
loopne
fdivrs
sbb
daa
cmp
pop
xchg
xor
mov
push
sbb
cmc
jne
inc
paddw
dec
bound
add
pop
jmp
lcall
adc
push
push
and
movsl
fsub
jecxz
mov
outsl
sub
push
adc
nop
jne
pop
sar
xlat
fwait
stos
not
xor
aad
gs
push
mov
add
cwtl
inc
mov
pop
mov
test
dec
jnp
add
mov
xchg
and
mov
add
lret
inc
push
lock
or
sub
xor
xchg
or
or
inc
add
outsb
adc
xor
jne
stos
add
jge
aas
mov
lret
les
subb
or
inc
sbb
mov
add
out
xchg
into
sbb
lahf
xor
test
jmp
es
sub
mov
call
in
call
add
push
mov
inc
out
and
orb
sbb
jl
repnz
ss
fistps
mov
ficomps
sbbb
pop
loopne
dec
add
sub
outsl
mov
test
in
hlt
insb
add
popa
sub
mov
imul
or
jo
mov
fimuls
stc
adc
rorb
aas
pop
shl
dec
rorb
hlt
mov
fs
xor
mov
add
pop
clc
inc
in
xor
fimuls
into
sbb
dec
inc
dec
sub
mov
push
bound
xchg
add
cwtl
scas
jnp
jo
sub
and
les
clc
stos
add
sbb
jp
out
xchg
gs
addb
popa
shrl
mov
js
add
jge
jl
ss
das
mov
jo
add
ja
clc
clc
jp
add
sub
mov
sbb
jns
push
in
pop
pop
mov
xor
out
inc
and
in
daa
sub
pop
test
jge
cmpsb
jne
add
or
xchg
cs
push
pop
pop
inc
inc
push
addr16
add
popf
mov
adc
jo
push
inc
insb
push
jge
sarb
notb
enter
xchg
and
stc
addr16
mov
ds
js
inc
repz
sub
or
das
jge
pop
aad
inc
push
aas
push
sar
sub
mov
not
sub
jmp
ljmp
repnz
rclb
loopne
icebp
out
mov
cmp
lea
divl
xor
lcall
sarb
add
in
in
inc
xor
cs
lock
adc
add
das
dec
jmp
push
loopne
dec
es
adc
adc
cmp
mov
cmp
jge
out
je
test
int
mov
pop
cltd
sahf
mov
push
icebp
jg
pusha
and
test
and
insl
xchg
mov
sbb
mov
xor
ss
xor
dec
popa
ret
mov
test
cmp
test
pop
clc
mov
ret
dec
daa
fdivs
mov
cli
jmp
lods
sbb
loopne
test
mov
sbb
add
lret
rorb
and
add
mov
or
adc
or
and
inc
adc
sub
enter
adc
movsl
popa
aam
js
dec
dec
cmpl
faddl
jg
sbb
xor
adc
xchg
jp
or
fsubrs
mov
stos
and
or
xor
test
aam
inc
pop
sbb
mov
sbb
mov
xor
or
xchg
push
sub
or
mov
addl
add
sbb
pop
je
add
push
loope
stos
sahf
sbb
and
inc
add
popa
arpl
adc
pop
inc
jl
fadds
push
cmpsl
loop
or
adc
or
into
add
and
xchg
mov
loope
or
cmpsb
inc
add
mov
pop
mov
ljmp
sti
jmp
mov
ret
pop
sbb
jle
or
ror
out
xchg
cmp
adc
adc
jle
jmp
loope
dec
dec
cld
mov
fsubl
sub
setge
orl
mov
dec
ret
jne
aaa
or
or
pop
sar
cmp
arpl
and
lahf
xor
sarb
cmp
ja
cmp
pmaxub
and
add
rol
es
stos
pop
dec
pop
aam
iret
dec
mov
mov
scas
dec
push
dec
or
popf
dec
pop
sbb
or
dec
mov
add
lret
jne
loopne
in
mov
hlt
mov
sti
mov
das
pop
mov
lods
pop
push
adc
lods
inc
add
aas
ljmp
dec
inc
cld
xlat
shlb
orb
jnp
xchg
cmp
shll
sbb
inc
adc
xor
push
adc
cmc
push
insb
jl
call
sbb
daa
repz
sub
icebp
and
hlt
incl
sub
and
jne
xchg
int3
das
adc
mov
aas
jno
sbb
xorl
jl
repnz
cmp
and
adc
aam
repnz
out
xchg
mov
cwtl
mov
jmp
sbb
sbb
or
sahf
lret
push
cli
into
jae
mov
add
xor
dec
xor
xor
inc
cltd
mov
outsl
sbbb
push
or
dec
add
sbb
or
push
inc
ds
ljmp
ret
xlat
int
in
incb
jo
sbb
paddd
xchg
in
insb
dec
mov
sub
lea
fadd
dec
and
cld
popa
mov
dec
jmp
dec
scas
clc
out
or
xchg
cs
sti
push
inc
push
clc
pop
inc
jnp
sbb
add
fcompl
push
lds
ss
push
outsl
mov
pop
add
aaa
jmp
xor
mov
mov
insl
dec
in
xor
mov
and
loopne
dec
pop
movsb
js
cmpb
addb
ret
cs
cmpsl
xor
pop
xor
mov
jo
adc
test
addb
pusha
dec
or
aaa
ret
test
ja
lock
mov
aad
dec
rolb
fmuls
push
xor
popf
xlat
xchg
das
std
mov
loope
inc
xor
mov
popf
movsb
std
repnz
and
rcrb
js
push
add
sti
ret
dec
push
inc
lods
push
orb
push
imul
fldl
xchg
and
and
out
jno
lret
add
or
aaa
inc
mov
inc
je
dec
faddl
lods
mov
shl
dec
xchg
mov
add
inc
sbb
jb
subb
push
xor
cltd
or
mov
loope
lea
push
jp
sub
sbb
lret
adc
adc
jae
out
or
ret
adc
orl
sbb
lahf
or
push
pop
test
pop
sub
sub
dec
outsl
movsl
and
mov
rol
inc
das
cltd
xchg
or
jae
adc
mov
xor
adc
out
outsl
ret
vshufps
sbb
xchg
outsl
jl
sub
and
jnp
fwait
jno
dec
sbb
movsb
aas
pop
jmp
jb
mov
ret
pop
ljmp
sbb
sub
jmp
scas
ret
dec
inc
push
lods
jmp
dec
inc
dec
jmp
push
add
cmpsl
xor
jge
add
jecxz
sub
add
gs
loope
stos
add
jmp
sub
es
and
ss
cld
mov
or
sbb
mov
imul
adc
aad
testl
or
ret
nop
sbb
inc
icebp
xchg
xor
movsb
loopne
add
sub
jmp
or
in
adc
xor
test
pop
lret
jbe
daa
push
lcall
mov
cmpsl
mov
mov
sbb
pop
inc
jnp
dec
mov
sub
xor
cmpsl
test
lahf
and
cmp
loopne
add
inc
in
mov
mov
ret
mov
fnstsw
loopne
clc
addb
dec
sub
xor
or
inc
in
or
mov
and
sar
and
scas
subb
and
push
cli
xchg
fsts
adc
lods
adc
shr
shlb
xor
adcb
aam
les
mov
fadd
outsb
vcmppd
sub
push
dec
add
test
xor
or
push
js
cmp
pop
or
test
ret
imul
adcb
cmc
mov
sub
push
outsb
sub
addb
push
adc
pushf
adc
or
xor
cltd
jnp
cltd
les
clc
push
in
add
ds
shl
fidivs
cmp
sbb
lea
fsts
add
mov
fcomps
cmp
jl
int3
test
mov
shl
repnz
cmp
xchg
sbbb
test
adc
shll
ja
xor
repz
lods
pop
xchg
inc
inc
add
mov
test
int3
xchg
lds
in
or
das
movsb
adc
or
adc
imul
jecxz
or
mov
stos
inc
mov
inc
xchg
je
lret
addr16
iret
add
addb
es
js
ljmp
mov
pop
jo
jg
or
daa
xor
add
push
lret
xorl
in
mov
out
mulb
push
add
das
sarb
push
inc
scas
mov
js
mov
popl
sub
adcl
add
mov
sub
mov
decb
cwtl
in
and
pop
adc
arpl
mov
subl
sbbb
repz
push
fnstenv
jecxz
rol
in
aaa
inc
dec
cmc
repnz
adc
xor
hlt
sbb
pushf
cmp
mov
jae,pn
push
repz
and
adc
dec
mov
testb
sbb
pop
imul
hlt
sbb
dec
aad
cld
hlt
add
out
nop
test
or
push
sub
hlt
adc
dec
int3
cmp
sub
ljmp
popa
hlt
subl
outsb
loope
adc
rclb
pop
dec
jp,pn
inc
arpl
stc
cmc
add
lcall
jmp
xor
pop
jle
test
fbstp
adc
push
xor
addl
movsb
push
pop
dec
mov
fdivrs
or
or
mov
jmp
add
push
es
push
or
adc
or
mov
adc
test
addr16
inc
sub
pop
cld
push
xlat
sbb
xor
jbe
js
push
or
pop
lds
inc
push
sbb
fldenv
ret
mov
jge
sbb
dec
or
cmpsl
roll
pushf
hlt
mov
jecxz
lods
xchg
push
jg
int3
setle
and
xor
mov
loopne
or
decl
inc
call
dec
dec
mov
lcall
cmc
roll
call
adc
xorl
out
or
dec
mov
arpl
aad
or
call
add
sub
mov
in
in
push
inc
push
pop
call
add
dec
mov
jnp
xrelease
sbb
adc
jb
cmpsl
xor
inc
push
out
call
into
push
sbb
test
inc
insl
xchg
cmp
add
cli
cli
stos
xchg
mov
inc
loop
mov
fs
or
push
mov
adc
push
dec
or
and
ds
outsl
xchg
sbbl
shrl
adc
hlt
sbb
ds
repz
add
push
lods
cmpps
out
add
jns
loop
dec
in
push
in
adcb
rorl
nop
imul
stos
sbb
add
cltd
push
add
loopne
daa
rclb
sbb
or
add
es
movsb
fsubr
pop
fldenv
hlt
cmpsl
pause
mov
mov
jne
dec
call
ds
pusha
lock
out
lods
xchg
add
inc
cmpsl
in
cmpsl
mov
fisttpl
das
in
stc
pop
in
fsubrs
push
sub
shll
jecxz
dec
sub
or
addl
push
push
mov
adc
fidivs
hlt
ficompl
inc
push
pusha
add
push
not
lret
int3
ds
aaa
in
jne
push
sbb
shll
popa
xchg
lock
out
testl
adc
xchg
mov
leave
dec
sbb
jmp
xor
ret
fstpt
das
ret
inc
sub
scas
orb
inc
cs
push
adc
sub
xchg
dec
loopne
pop
stos
repz
ret
sub
add
adc
add
push
jg
and
adc
movsb
mov
es
fldt
pusha
cwtl
ret
push
sar
int
push
add
lea
fildll
cli
mov
dec
xor
and
pop
xor
or
or
movsl
sbb
jbe
ja
and
ret
and
icebp
es
pop
jno
inc
outsl
mov
xchg
adc
or
xchg
scas
xor
and
shll
cld
stos
push
loope
xor
and
adc
dec
dec
adc
inc
jmp
dec
add
das
pusha
testl
inc
mov
cld
in
mov
and
jmp
enter
std
adc
add
dec
sbb
xchg
loope
xchg
aaa
sti
fmuls
roll
adc
add
add
jl
and
mov
mov
mov
outsl
popf
lcall
adc
divl
insb
cld
add
xor
mov
rolb
mov
int3
and
rcrl
and
cmp
das
flds
outsl
xchg
les
cmp
push
shrl
push
mov
pop
and
add
cmp
mov
fwait
clc
mov
and
in
mov
dec
inc
or
outsb
test
cmp
inc
sbb
inc
or
pop
jne
arpl
cli
divl
adc
inc
pop
rcrb
dec
js
push
nop
aaa
cmp
jne
loop
jo
leave
mov
mov
addr16
lds
and
ret
xor
sbb
mull
lcall
mov
mov
dec
movsl
xlat
aad
sbb
out
cmp
ret
mov
sbb
call
imul
enter
int3
xor
sahf
test
rolb
clc
ret
std
sbb
adcb
rorb
mov
lock
xchg
jnp
icebp
push
add
pop
nop
adc
xor
push
lock
pop
mov
push
push
scas
and
dec
js
cmp
xchg
stos
adc
loop
adc
adc
inc
sbb
mov
test
ljmp
adc
xlat
xchg
ret
mov
xor
daa
cmp
js
xlat
adc
xchg
test
nop
pop
in
dec
insl
shrb
flds
in
adc
xchg
xchg
or
push
out
iret
test
adc
loopne
fsubs
out
add
test
inc
loopne
sbb
sub
andl
icebp
jmpw
movsb
adc
arpl
mov
ljmp
divb
and
add
dec
nop
popf
repnz
and
push
mov
inc
xor
data16
add
push
push
xor
inc
fmull
ljmp
xchg
mov
push
mov
push
xchg
out
push
call
ds
lock
addr16
push
sub
sub
mov
pop
adcb
cltd
mov
or
popa
sar
push
pop
push
add
xchg
in
mov
and
mov
pop
popf
add
dec
push
dec
sarl
xlat
jb
xchg
lea
xchg
sub
inc
xor
data16
sub
fidivs
fcompp
popf
jae
into
addl
cmp
lcall
mov
inc
and
mov
xor
cmp
jo
aad
fdiv
daa
push
add
aaa
fsubl
jne
adc
pusha
repnz
gs
cli
fsubr
and
lds
add
shrb
xor
cmpsb
add
pop
inc
repz
jl
das
push
scas
imul
xor
lds
pop
clc
test
sbb
inc
ljmp
std
mov
and
lret
push
pop
sub
mov
mov
scas
addl
mov
sub
mov
dec
lret
cmp
jecxz
fldl
fstps
inc
add
sahf
sub
rolb
ret
sbb
sub
lret
xor
pop
stos
mov
aad
push
adc
lret
test
hlt
scas
ss
jnp
outsl
and
js
inc
mov
call
jns
dec
add
or
insb
xchg
sub
jmp
pop
ds
push
mov
and
cmp
movsb
jae
inc
inc
outsb
and
das
cmp
lods
orl
es
add
in
xor
jmp
mov
jle
push
ret
cmpl
push
push
fisubl
mov
jbe
cmp
jbe
mov
lahf
data16
sub
fsts
or
pop
inc
sbb
push
ljmp
mov
lret
push
and
add
int
mov
push
inc
inc
mov
bound
add
or
loopne
out
addb
adc
pushf
adc
lods
cmp
fdivl
fimull
das
xchg
ret
or
test
insb
xchg
xor
inc
pop
push
or
and
add
adc
inc
dec
pop
in
xor
inc
and
test
aas
out
xor
ja
add
dec
testb
sbb
push
lods
cmpsb
loopne
dec
dec
mov
sahf
add
and
sub
dec
loope
jo
loopne
push
les
call
test
and
popl
mov
push
pushf
or
pop
rcl
push
lock
mov
mov
fcmovnbe
mov
xor
sbb
sbb
bound
adc
ja
mov
jg
pop
out
add
mov
les
push
add
sar
inc
lods
sbb
lods
sahf
lcall
push
pushf
jnp
or
scas
fs
push
jge
cmpb
add
lods
add
and
dec
xor
adc
add
xorb
mov
imul
lret
jno
call
inc
stc
mov
lods
sub
dec
add
jmp
movsl
aaa
jmp
jae
mov
adc
inc
pop
push
jmp
inc
insl
cmp
je
jnp
lret
punpckhwd
push
mov
ds
lcall
movb
mov
aas
mov
loopne
mov
pusha
add
popa
icebp
xor
outsl
mov
sbb
fwait
pushf
mov
push
ret
mov
fmull
imul
mov
add
test
push
or
xor
push
xor
push
out
or
and
push
sbb
jne
jp
jge
dec
cmp
push
insl
inc
or
jo
inc
sarb
aaa
jge
push
or
add
int
mov
sbb
fwait
inc
or
inc
daa
in
fs
pusha
mov
jae
sbb
xor
ds
mov
mov
movsl
adc
fildl
xchg
add
popa
cmp
vaddsubps
jl
dec
xor
movsb
xor
push
inc
cmp
stos
test
dec
inc
jmp
loopne
pop
or
xlat
enter
es
inc
dec
add
cmpsb
fmuls
adc
clc
xchg
or
pusha
pop
stos
lcall
dec
xchg
add
sub
add
xchg
shlb
jne
jecxz
add
sbb
negl
xor
jnp
cmp
adc
fnstenv
mov
xor
push
rolb
popf
in
jbe
jne
loopne
stos
mov
or
loope
lds
or
aas
xor
xchg
bound
insb
arpl
sbb
jns
adc
adc
ret
mov
mov
lret
in
and
sub
jle
xor
push
repz
jp
jns
aaa
je
jg
pop
inc
xchg
sbb
or
push
or
cltd
xor
or
inc
mov
xor
ss
movb
jo
fnsave
pop
sbb
mov
ret
push
jnp
push
xchg
push
test
cmp
jg
or
ja
jp
int
mov
inc
shll
and
sub
xchg
divb
pop
add
add
fimuls
xorb
inc
and
xchg
inc
push
push
in
add
dec
xchg
mov
or
icebp
loop
andb
cmp
inc
mov
mov
aaa
xchg
cmp
add
pop
mov
mov
loope
push
adc
in
gs
mov
xchg
jnp
xchg
sbb
sbb
dec
aam
adcb
inc
ret
xchg
movsl
cltd
xchg
mov
enter
psraw
pop
pushl
adc
mov
ja
pop
or
mov
jmp
push
push
mov
stos
mov
push
insb
int
fimull
stc
push
mov
add
add
adc
imul
pop
pop
pop
pop
push
add
xlat
lods
sbb
xchg
inc
xlat
cltd
and
ja
and
andl
sub
sbb
pop
aas
or
lock
jbe
or
or
ja
cmp
rcr
xor
popa
or
test
mull
cmp
lahf
je
push
inc
add
stos
mov
fisubrl
adc
fistpll
fyl2x
popa
sub
push
jmp
add
pop
dec
mov
mov
or
sbb
mov
adc
add
dec
lret
data16
and
test
pop
fiaddl
push
sub
dec
pop
mov
lea
ficoms
lret
xchg
rcll
lahf
push
inc
popa
inc
addb
inc
lret
add
pusha
sbb
cmp
pop
xor
dec
imul
bound
rorl
sub
cli
inc
cld
push
jl
cwtl
inc
sub
cmp
or
filds
jbe
cs
icebp
out
xor
xor
daa
sbb
fiadds
lahf
cmp
add
xchg
iret
pop
movsl
test
mov
lods
inc
adc
or
push
jmp
xor
sbb
inc
bound
inc
ltr
or
loop
out
or
mov
sbb
imul
stos
lret
add
js
dec
add
push
sti
adc
insl
mov
jnp
in
jne
xchg
in
inc
adc
dec
mov
addb
push
inc
xor
addl
movsl
adc
testl
es
xor
push
int3
xor
xor
jmp
sub
jb
xor
dec
jo
pop
push
sub
fmul
ljmp
xor
xor
fsubl
mov
leave
or
mov
data16
or
lea
push
arpl
mov
outsb
jmp
adc
sub
sbb
mov
test
mov
mov
rclb
call
jne
sub
inc
je
rolb
and
pushf
jmp
outsl
dec
cwtl
int
loope
ret
push
ja
enter
jnp
adc
push
sbbb
cmp
xchg
or
outsb
dec
loope
push
test
incl
or
sahf
push
out
and
fwait
loop
cld
pop
loop
xchg
adc
mov
daa
sarl
add
mov
int3
out
mov
sub
xorb
xlat
push
jmp
pop
cmc
mov
sbb
adc
lahf
call
jle
sub
adc
in
loop
scas
aaa
repnz
pop
push
and
int3
dec
or
sub
lds
inc
mov
clc
pop
fldenv
inc
ret
push
lds
cli
call
js
fwait
mov
xchg
ja
lock
stos
shlb
sbb
mov
inc
cltd
lods
repz
mov
push
adc
dec
cs
sbb
and
arpl
mov
cwtl
pushf
and
jecxz
popl
jp
das
adc
movsl
add
loop
aas
cmp
mov
mov
incl
jmp
test
movsl
or
xchg
jmp
cmp
loop
xor
dec
pop
push
mov
nop
jecxz
dec
and
pop
jmp
mull
add
test
inc
icebp
enter
or
mov
push
jno
mov
dec
pusha
or
orb
out
fimuls
mov
sbb
lret
inc
clc
movsb
push
adc
js
add
rcrl
adc
call
fldt
pop
adcb
push
lods
inc
cwtl
or
cmp
cmovbe
sub
push
addl
mov
xlat
out
push
push
add
pop
push
daa
mov
ret
das
pop
add
adc
and
fisttpl
or
adc
xor
out
lcall
sub
je
dec
lret
dec
and
dec
inc
rolb
ds
sbb
push
in
add
call
hlt
jae
or
dec
fists
lock
lods
sub
sbb
ds
xor
sbb
cltd
ret
les
fdivrl
sub
mov
inc
xor
loopne
jae
in
movsl
push
in
push
subb
xchg
in
hlt
or
add
jp
add
pushf
sub
mov
mov
xchg
jno
fistpll
adc
mov
pop
stos
enter
jp
xor
js
sarb
add
push
mov
out
faddl
add
xor
lea
les
jns
pop
pop
stos
mov
test
and
and
insl
outsb
push
or
mov
push
dec
xchg
push
mov
adc
ret
andl
fwait
call
imul
popa
rol
stos
mov
call
xor
mov
or
adcl
inc
and
lods
xchg
xchg
push
cwtl
andb
sub
and
add
imul
rorb
test
imul
scas
xor
dec
adc
test
mov
outsl
dec
mov
add
inc
cmp
add
adc
scas
ja
addb
add
inc
scas
mov
mov
negb
sti
hlt
lds
loope
shrb
das
aam
pop
cmp
push
mov
or
inc
dec
lahf
pinsrw
mov
cld
lods
xor
and
and
out
dec
clc
push
out
insb
mov
out
pop
out
add
enter
shrb
cmp
push
mov
dec
add
push
mov
jbe
add
xchg
xor
and
push
shlb
insb
sar
dec
push
dec
xchg
cmp
jne
xor
inc
jmp
or
cmp
add
xchg
or
test
repz
sbb
call
push
mov
popa
add
or
xchg
xchg
xor
mov
inc
push
jmp
and
aas
xor
dec
jb
or
lret
sbb
and
movsb
lock
and
rorb
call
pop
sub
sub
lret
ret
pusha
mov
inc
neg
dec
dec
sub
ja
xor
into
mov
cmp
sbb
sahf
bound
sbb
or
addr16
stos
sahf
movsb
or
inc
lock
xchg
lea
shll
pop
sbb
pop
clc
add
xor
xchg
cmpsl
imul
stc
loope
outsb
mov
adc
loopne
add
lahf
mov
fistpl
and
popf
add
popf
test
pop
add
add
sub
scas
test
daa
adc
push
lock
sub
or
pop
adc
mov
inc
mov
in
call
jns
mov
mov
in
mov
popa
cli
xchg
mov
add
je
cmpsl
lock
divl
fwait
or
inc
jg
jo
pop
leave
loop
jb
mov
xor
call
scas
nop
aas
dec
or
shrb
out
adc
sar
add
sbb
xchg
sahf
movsb
ljmp
and
iret
hlt
cmpb
or
in
push
xchg
fstpt
jmp
fcoml
fldt
and
popa
inc
or
push
push
les
push
pusha
or
adc
push
test
popf
adc
pop
nop
jae
jp
or
xchg
stos
stc
cmpsl
fdivr
and
popf
cmp
loopne
dec
lods
mov
popf
inc
fwait
insl
pop
imul
xchg
movsl
sbb
in
inc
add
adc
dec
jl
dec
jge
stos
jne
fcoms
add
mov
cmp
push
dec
push
and
jmp
sbb
pop
and
jbe
pop
pop
rolb
lods
lret
mov
out
dec
jns
add
inc
hlt
mov
fisubrl
or
sub
xchg
aam
sbb
sub
adc
rclb
stos
mov
call
aam
jo
jecxz
xchg
and
xor
cli
loopne
imul
in
sbb
subb
push
sahf
loop
movlps
push
aam
jmp
xor
in
jae
sbb
add
nop
jno
clc
inc
lcall
mov
inc
mov
sbb
test
aas
push
inc
ret
scas
xor
or
loopne
push
subb
testb
mov
mov
and
push
or
loop
push
dec
in
mov
jno
or
inc
push
in
push
test
xor
imul
cmpsl
stc
adc
jmp
imul
inc
repz
mov
pop
sar
pop
repnz
mov
mov
add
mov
ret
test
or
mov
mov
shr
lahf
outsb
xchg
lret
jne
jl
pop
lds
jg
inc
outsl
or
lock
sub
pusha
pop
sub
rclb
jae
adc
adc
lods
push
dec
rcll
dec
ja
mov
jno
inc
loopne
push
pusha
mov
aaa
sub
adc
and
inc
or
imul
sarl
pusha
adc
mov
hlt
sbb
loopne
mov
add
inc
mov
xchg
xor
nop
and
sub
inc
test
xchg
add
enter
movsl
les
add
sbb
mov
sahf
add
sub
shlb
push
data16
add
es
push
mov
xor
gs
adc
das
jecxz
adc
stc
inc
sbb
lea
ucomiss
jno
int3
inc
movsl
shll
scas
xchg
movsl
push
mov
outsl
add
movsl
push
pop
popa
cmp
push
addb
aad
enter
pop
hlt
or
dec
and
adc
cmp
lods
add
gs
and
xlat
mov
adc
and
inc
test
clc
rol
addr16
movsl
sbb
aam
fadd
test
rclb
pop
scas
test
jge
xchg
lea
xor
xchg
sbb
mov
sarb
mov
inc
sbb
xor
nop
sub
jo
aaa
inc
out
pop
and
xor
int3
iret
shrl
adc
or
ret
xchg
xor
bound
sub
mov
cmp
in
push
jp
jne
test
pop
inc
or
xchg
bound
xor
inc
cmc
pop
sub
outsl
or
xchg
push
fldenv
sub
add
cmp
ja
mov
push
cmp
popa
mov
push
adcl
adc
dec
pushf
in
jmp
mov
subb
das
mov
cmp
test
fiadds
push
mov
pusha
rolb
gs
sbb
sbb
jle
push
fidivrl
dec
clc
mov
sarb
and
out
mov
lock
pop
mov
inc
or
and
and
adc
sub
add
mov
lods
daa
fmuls
popa
xlat
pop
rcl
and
and
cmp
test
inc
add
cmp
mov
cmpsb
imul
add
and
inc
jo
jne
out
xor
xchg
cmpsl
sub
pop
movups
mov
dec
cmp
js
push
mov
cld
sbb
sub
adc
mov
int3
in
or
or
daa
js
imul
xor
lret
dec
xor
xchg
push
out
pushl
mov
inc
mov
lods
add
flds
jl
sbb
xchg
mov
dec
xchg
pop
fsubrl
inc
or
push
sub
xor
loope
pop
dec
loop
and
mov
push
pop
insb
test
sar
fadd
fmull
xor
adc
mov
mov
lret
sub
loop
jl
cmc
mov
push
cmp
pushf
xchg
mov
sbb
shlb
jl
scas
cmp
pusha
movsb
inc
xadd
scas
mov
push
mov
stos
pop
in
roll
aaa
cmp
mov
pop
sti
adc
add
pop
mov
sub
repnz
or
insb
jo
sub
jo
fadds
add
inc
aas
in
and
xchg
or
sub
sbb
mov
clc
jp
add
mov
nop
repz
aam
mov
mov
xchg
lret
fstps
std
mov
add
and
lds
clc
inc
cmp
fcmove
sbb
les
mov
xor
mov
xlat
add
pop
inc
out
cmpsl
mov
shl
add
cld
xchg
push
or
pop
test
sti
sub
and
imul
das
xchg
mov
in
lret
sbb
cmp
xchg
push
adcb
add
adc
xchg
in
movsl
and
inc
cmpsl
xlat
add
mov
inc
mov
test
adc
add
cmp
sbb
cmpsb
pop
jnp
sub
pop
xor
into
xor
jge
push
or
out
mov
outsl
mov
adcb
add
icebp
add
adc
mov
fmuls
mov
hlt
das
insl
pushf
sbb
pusha
and
or
jno
sub
dec
xor
das
pop
rcl
test
loop
or
cs
in
fldt
test
jae
pop
mov
test
ret
ds
insb
cmc
pop
daa
pop
in
sub
jae
test
bound
and
mov
and
jp
clc
xchg
fwait
les
aad
clc
add
hlt
sub
pop
adc
dec
adc
imul
add
mov
fisubl
or
or
xor
pop
push
mov
jg
loopne
jmp
dec
or
add
jecxz
xorb
jmp
jg
fs
xor
addb
rorb
sbb
sub
je
adcb
addb
inc
jmp
sub
jp
inc
cmp
inc
clc
imul
scas
mov
pop
and
mov
pop
aaa
add
jb
jo
pop
xor
inc
subb
adc
nopl
jns
sbb
pushf
stc
or
mov
adc
mov
add
and
dec
pop
mov
push
mov
add
sub
mov
push
push
mov
cwtl
cmp
mov
int3
sub
add
dec
imul
loopne
mov
jne
jp
adc
lds
popa
add
in
outsl
inc
or
add
nop
pop
test
sub
add
adc
and
jg
sub
cli
or
and
mov
gs
sbb
inc
adc
lret
test
dec
or
cltd
inc
cwtl
push
test
add
mov
lods
je
lahf
repnz
pop
out
sahf
jmp
add
cmp
addl
shll
mov
jmp
addl
rclb
cmp
rol
in
jle
popf
jmp
push
or
and
imul
or
inc
xor
pop
and
mov
mov
push
jg
push
push
push
loope
sbb
xadd
fbstp
pusha
roll
pop
mull
and
push
pushw
insl
push
pop
push
test
add
add
cltd
adc
or
sbb
push
pop
fs
inc
insb
and
xchg
sub
mov
xchg
xchg
lret
push
sbb
test
popa
pop
ret
roll
pop
jmp
add
and
or
stos
xchg
mov
mov
mov
xor
dec
cld
loopne
rolb
ret
or
imul
cmp
xchg
rcrl
add
repnz
idiv
add
mov
jge
shrl
mov
ja
sbb
add
sti
dec
sbb
sub
sub
adc
shll
add
aas
push
outsl
cli
sahf
and
pop
data16
xor
scas
mov
das
iret
movsl
cmc
shl
push
hlt
loopne
sub
loop
ds
lods
femms
or
pop
lcall
cs
in
jp
cmp
ficompl
cmp
ss
sbb
icebp
xchg
sub
adc
mov
cmp
sbbb
and
push
add
cmp
loope
outsb
mov
mov
popf
lret
mov
aas
dec
les
jb
add
add
xchg
mov
cmpsb
add
jnp
adc
xor
loopne
js
sub
cmp
fwait
rorb
mov
nop
mov
sti
xor
jo
fisubrs
push
sbb
cli
pop
aam
xchg
add
mov
adc
pop
cmpb
lock
pop
popa
lods
movsb
inc
mov
rclb
or
or
pop
mov
sbb
inc
xchg
and
sub
std
mov
fiadds
add
loopne
xlat
xor
js
mov
ds
call
addl
rcl
sbb
sub
loopne
loopne,pt
or
add
sbb
pop
cmc
fnstenv
and
sbb
add
xor
mov
test
sbb
cltd
or
cs
cmpsb
loope
cmp
or
and
insl
mov
push
stc
add
inc
fs
and
mov
std
adc
add
pop
add
jl
rorb
adc
scas
out
mov
adc
sbb
sbb
add
jbe
adc
xchg
add
pop
loopne
or
adc
imul
sub
adc
xor
test
or
pop
mov
gs
test
aaa
shll
ds
ror
and
fcoml
lock
mul
lock
lods
add
and
outsl
jae
adc
mov
clc
addl
inc
sub
shlb
lds
das
mov
pop
fiadds
in
stc
call
and
movsl
scas
test
dec
mov
movsb
dec
or
imul
iret
add
fwait
or
inc
test
push
shrb
adcb
xchg
aaa
or
ljmp
add
dec
lea
loopne
dec
rol
add
mov
mov
fs
xchg
fs
sub
daa
mov
ja
inc
shll
and
push
add
aaa
movsl
push
and
lret
mov
xchg
xor
jecxz
mov
xorb
lods
add
sbb
cmp
movsl
in
fdivs
mov
jno
xchg
aas
jno
xor
in
testb
pushf
test
push
pop
ja
dec
ja
jecxz
cld
clc
test
add
push
pop
pop
sbb
ret
ret
call
cmpsb
js
ret
mov
mov
push
mov
pop
addr16
shlb
jns
add
mov
mov
clc
fucomip
add
lods
add
xor
and
lcall
inc
stos
movsl
stos
loopne
add
repz
adc
add
invd
cmp
std
mov
es
mov
and
les
inc
add
arpl
mov
adc
push
pop
adc
add
add
add
add
jns
or
mov
or
pop
mov
xor
push
inc
add
aas
pop
mov
mov
pop
adc
testl
or
and
loope
lods
popl
div
aas
fbld
or
add
mov
adc
shrb
notrack
push
fiadds
or
loope
mov
ja
stc
std
dec
pop
jo
add
pop
ficoml
les
mov
push
dec
ret
dec
out
add
push
sub
adc
mov
add
or
xchg
xchg
sbb
jnp
mov
sti
xor
or
dec
mov
sbb
and
lock
in
aas
sbb
leave
inc
aaa
movsb
and
jmp
idivb
push
cmp
inc
sub
mov
movsl
ret
out
mov
add
lret
sahf
in
mov
jne
add
jbe
ja
test
or
pop
fs
clc
ljmp
pop
int
and
adc
mov
xchg
add
jg
jmp
add
nop
test
pop
push
xor
inc
out
iret
pushf
sbb
aas
cwtl
and
add
or
mov
mov
or
or
and
xchg
or
mov
add
add
add
fs
adc
cmp
loop
sub
ljmp
sbb
and
sbb
cmp
ja
mov
adc
xor
cltd
loopne
mov
xchg
dec
adc
sub
xchg
fisubrs
xor
popa
lret
jne
vrsqrtps
fistpll
add
add
add
dec
shlb
pushl
cli
or
pop
add
inc
add
add
cwtl
adc
mov
xchg
push
test
enter
out
pcmpeqb
inc
inc
mov
in
jae
test
fwait
arpl
aaa
pop
pop
adc
mov
push
push
arpl
jmp
and
jl
idiv
outsl
jne
xchg
fs
mov
xor
or
in
mov
subl
sti
fildll
jg
pop
fisttps
sub
pusha
mov
mov
xchg
or
clc
sub
int
push
xor
ds
push
jbe
xor
popf
add
xchg
fnsave
filds
iret
mul
decl
mov
inc
and
and
fneni(8087
inc
pop
fcompl
lds
add
repz
cld
inc
sub
mov
cmp
sub
ret
ljmp
js
jo
or
cmp
stc
mov
hlt
loopne
jg
inc
add
pushf
push
dec
cs
in
fwait
or
jbe
nop
in
in
in
mov
push
stc
decl
push
ds
mov
inc
imul
pop
mov
test
cmc
inc
out
inc
push
outsb
sub
mov
int3
pushf
xlat
push
iret
jne
mov
jle
and
nop
pusha
mov
or
mov
nop
ds
popa
pop
sub
or
and
xchg
jg
jns
push
add
push
add
sbb
or
mov
and
aaa
add
dec
inc
test
scas
mov
xchg
push
add
out
xchg
pop
adc
insl
int3
call
cld
addl
fcompl
xor
mov
and
mov
ss
rcll
call
shr
xchg
inc
leave
add
jg
pop
cs
imul
imul
mov
jb
daa
in
sub
push
xor
mov
push
add
lds
shll
subl
inc
clc
and
add
sbb
ret
lods
lea
daa
add
add
pop
xlat
mov
stc
sti
ret
outsb
add
push
loop
std
js
divb
and
div
movsb
hlt
es
or
ds
pop
cmpsb
daa
jmp
mov
push
cltd
test
mov
fcmovnbe
jo
xchg
cs
and
out
enter
dec
sub
or
hlt
push
cld
adc
aas
cmp
push
jp
call
sub
pushf
hlt
pop
movsl
dec
cmp
leave
add
mov
movsl
add
test
cmp
hlt
mov
push
fnstsw
add
inc
or
fsub
incl
cmc
mov
data16
push
and
fildll
jp
test
ss
mov
insl
andb
adc
xor
cmc
scas
cli
jg
lcall
loope
push
jno
cmp
cmp
and
outsl
cli
movmskps
dec
add
jo
aad
sub
or
movsl
inc
mov
push
add
icebp
inc
in
push
or
pop
push
cmp
or
jl
fucomp
pop
lock
lods
or
adc
mov
and
xchg
loop
aas
inc
gs
shlb
adc
cwtl
sub
mov
jl
mov
push
cmp
xchg
pop
dec
cwtl
pop
mov
pop
cmc
mov
clc
or
sub
call
mov
dec
fmul
fimull
jmp
push
repnz
cmpsl
ljmp
jle
xchg
loopne
or
add
jmp
xor
bound
pop
cmp
into
fcmovbe
jg
outsb
imul
into
call
sub
bound
hlt
dec
ret
loop
iret
mov
fstpt
jbe
cmp
in
loopne
sub
and
add
ljmp
xor
repz
xchg
adc
pop
lock
inc
stc
xchg
xor
imul
mov
xor
in
mov
cmp
jae
or
clc
inc
or
mov
lcall
movsb
mov
ss
dec
call
rorl
add
sbb
mov
ja
mov
dec
pop
push
les
dec
adc
cmp
sub
inc
hlt
in
ja
push
inc
jb
inc
or
dec
inc
sti
stos
cmp
jo
push
mov
lods
hlt
mov
push
or
ljmp
xchg
es
stos
mov
adc
sbb
xchg
test
out
aas
sbb
mov
push
inc
adc
aad
add
enter
dec
adc
das
cli
and
jae
jbe
dec
add
jg
clc
push
and
mov
mov
out
insl
cmp
ja
add
pop
jnp
lahf
cmp
aaa
mov
out
jle
sahf
mov
es
dec
icebp
push
fdivl
xor
mov
inc
or
push
clc
pushl
std
sbb
pushf
or
sti
out
cltd
icebp
nop
jle
or
xchg
aad
js
and
popl
ljmp
sub
adc
inc
jmp
jl
xchg
insb
pop
outsl
into
or
mov
int3
xchg
mov
shl
mov
pushf
cmp
scas
mov
fstpl
pop
jb
and
and
or
loopne
sub
mov
rorb
pusha
mov
dec
and
or
add
fcoms
enter
ljmp
and
outsb
sti
add
cmp
jl
cmp
push
pusha
inc
mov
test
push
call
lcall
leave
cs
ret
pop
push
cmp
ds
sbb
nop
dec
sbb
push
in
sbb
js
fcmovnu
adc
outsb
scas
xlat
and
dec
daa
in
js
or
push
sub
add
test
in
psubq
lret
add
xor
inc
push
cmpl
inc
sbb
pop
in
mov
dec
jecxz
mov
ss
pop
subb
mov
add
jno
sar
or
es
and
js
or
aam
outsl
sub
addl
add
inc
lcall
lock
add
mov
andl
ret
cmp
sbbb
stc
mov
pop
xchg
dec
jmp
push
in
les
or
xlat
out
xchg
mov
jp
loopne
dec
insb
mov
xchg
lret
out
jno
xchg
addr16
divb
enter
cld
sbb
stc
adc
cs
out
push
ja
dec
jg
push
sub
mov
or
dec
fs
test
aaa
or
pushl
or
pop
sbb
add
dec
pop
cmc
inc
mov
cs
mov
ret
mov
push
loopne
jmp
jp
mov
ret
lret
dec
mov
push
mov
dec
pop
cmp
dec
shll
push
sbb
andb
or
add
dec
mov
mov
das
cld
xor
clc
daa
mov
xchg
jecxz
repnz
push
and
cld
test
pop
loopne
sub
sbb
mov
dec
xchg
and
jmp
ss
jle
push
sub
jp
sub
ja
loopne
sbb
sbb
jp
add
in
pusha
xchg
push
mov
pop
mov
push
or
sar
hlt
jg
icebp
push
lods
cld
push
ds
jl
inc
roll
add
inc
fldl
inc
mov
adc
sarb
out
ljmp
push
cltd
inc
sub
xchg
hlt
je
inc
outsl
into
pop
cmc
mov
rorb
lock
adc
pusha
andb
mov
push
sub
cmp
lock
jecxz
pop
push
sbb
inc
cmp
dec
cli
loopne
repnz
xchg
fstps
push
hlt
add
xor
cmp
or
jb
push
lret
sub
fisubl
in
aam
shll
or
inc
outsb
into
adc
push
adc
and
js
ss
jg
mov
add
and
push
fildl
popa
mov
mov
ret
push
sbb
scas
xor
ss
push
push
ret
or
inc
sbb
xlat
adc
mov
repnz
jmp
gs
aad
sbb
loopne
xor
fs
ljmp
and
dec
cli
mov
subl
test
cmp
sub
out
loop
or
aaa
sbb
sbb
xchg
add
incl
adc
movsb
fbld
mov
movsb
xchg
stos
pop
fadds
aam
fsubs
sbb
mov
xchg
push
filds
adc
in
test
call
loop
adc
pop
sub
rclb
adc
lock
and
ficoml
stos
sub
push
pop
loop
cmp
mov
dec
dec
pop
cmp
ss
pop
lods
cld
lods
clc
or
mov
inc
out
add
mov
outsl
lds
subb
shrb
insl
lock
push
cmp
push
xor
jg
shrb
or
adc
fnsave
adc
push
test
mov
push
mov
out
mov
shll
lds
xchg
ja
stc
testl
icebp
sbb
mulb
xchg
add
pop
fwait
test
or
invlpg
inc
cld
xchg
adc
jge
out
mov
int3
and
sbb
add
clc
movsl
mov
cmpsl
cmp
xor
int3
sub
push
mov
mov
pop
js
cmp
inc
outsb
lcall
jne
scas
push
inc
mov
ds
cld
mov
lcall
inc
cmp
add
push
xchg
push
and
push
es
xor
sub
dec
lock
mov
popa
ret
rcrl
std
sbb
jmp
adc
mov
testl
or
repnz
je
push
pop
movsb
add
stos
loopne
sti
xchg
fildl
cld
adc
je
dec
out
adc
dec
rclb
cmp
mov
cld
xchg
bound
inc
fmuls
inc
loop
cmp
push
add
jnp
cld
xorb
mov
pop
jne
cmp
sub
and
inc
movsb
loop
ja
inc
dec
push
cmp
sbb
adc
dec
mov
ret
add
mov
aaa
stos
xchg
outsb
and
add
mov
sbb
stos
ret
fs
ret
cwtl
sbb
xchg
mov
les
hlt
push
arpl
pop
adc
sbb
int3
pop
inc
cmpl
push
fcomp
mov
js
pusha
fucom
and
mov
add
pusha
mov
or
adc
movsl
jecxz
cmp
fisttps
sti
add
sbb
push
cmp
push
mov
lock
sbb
cltd
outsb
out
cmp
dec
int3
fs
xchg
jno
sub
outsl
xchg
cld
mov
loope
scas
enter
fmull
in
inc
jmp
add
hlt
cmp
leave
add
sub
push
sbb
into
sub
sahf
fisttpll
inc
mov
out
cli
pusha
push
mov
add
add
ret
pop
hlt
pop
scas
jnp
sbb
adc
repz
mov
lods
div
dec
cmpl
sarb
cmp
cmp
lds
push
aas
jo
es
sti
incb
shll
mov
mov
and
scas
and
enter
inc
jb
inc
push
xor
sbb
nop
add
xor
pop
lcall
inc
cli
icebp
lods
in
aam
jl
mov
fldt
enter
fcoms
call
mov
jbe
push
cwtl
or
sbb
test
push
das
and
outsb
addb
cmp
jmp
cld
mov
loopne,pt
cmp
lds
fs
xor
sbbb
aad
or
inc
dec
inc
pop
jp
pop
insl
ror
cmc
dec
inc
fsubrp
adc
insb
outsb
js
jmp
jb
mov
pop
outsl
mov
jl
loope
xchg
mov
std
lock
inc
push
mov
sub
add
aad
pop
test
in
stos
ret
adc
mov
xlat
sti
cmpsb
and
cmp
jl
push
push
adc
sub
add
dec
and
adc
jg
out
cs
add
enter
repz
pusha
mov
outsb
jg
js
inc
pop
inc
in
mov
and
push
in
add
lcall
push
movsb
cmp
insb
es
mov
mov
lsl
push
outsl
clc
inc
mov
inc
nop
xchg
and
pop
xchg
xor
push
scas
mov
rcrb
aas
sub
push
xor
insb
fmull
clc
jne
adc
sbb
dec
hlt
mov
insl
sti
sbb
xlat
dec
bound
inc
cmp
mov
test
add
xor
std
cltd
dec
stc
roll
leave
sub
or
jg
out
imul
xor
hlt
addl
sbb
cmp
out
das
mov
bound
repz
jge
jno
cmpsb
push
aas
out
clc
ljmp
incb
cmp
es
or
dec
daa
add
lret
jne
leave
rorb
clc
cmp
cmpsb
mov
ret
in
inc
push
xchg
cmp
shr
mov
pop
dec
in
lret
scas
lea
std
add
dec
in
loope
fwait
push
hlt
inc
xchg
popf
and
mov
push
sbb
fcmovne
inc
mov
xlat
das
shlb
push
jmp
inc
jg
lds
insb
fwait
mov
ret
nop
repnz
xlat
and
cld
xchg
xlat
mov
insb
loopne
mov
lahf
test
dec
popf
add
sti
adc
mov
bound
add
lret
test
pop
call
xor
icebp
sahf
clts
sbbl
in
idivb
sti
dec
pop
xchg
ret
cmp
ficoml
or
insb
lahf
mov
inc
xchg
dec
and
nop
pop
add
or
bound
aaa
aas
repnz
or
nop
mov
adc
sbb
mov
mov
icebp
pop
xchg
cwtl
and
push
adc
addr16
in
jb
mov
sti
sub
push
add
adc
incl
jo
xchg
imull
test
loopne
mov
std
data16
mov
das
sbb
dec
or
jp
rol
sub
mov
icebp
cmp
jmp
add
cwtl
pop
sub
add
lret
aaa
sbb
jecxz
add
dec
in
push
pushf
jmp
pusha
in
adc
mulb
or
xor
cmp
cli
push
rcrl
enter
mov
testb
mov
movsb
xchg
add
aaa
insb
mov
ljmp
out
gs
jmp
mov
pop
fisubl
add
cmp
lret
faddl
fwait
mov
aas
mull
add
outsb
mov
aad
jl
jl
add
sbb
pop
test
stc
sbb
inc
cmp
xor
fwait
call
pop
loopne
scas
lock
test
push
mov
outsb
loop
inc
inc
and
stos
pop
mov
and
xchg
and
clc
scas
mov
mov
sbb
cmpsb
add
xchg
mov
jnp
lock
push
sahf
mov
jg
aad
mov
mov
adc
xchg
daa
cmp
cmp
adcl
jmp
pop
mov
mov
pusha
shrl
mov
insb
sarb
aam
jbe
jge
pop
movsl
inc
andl
loopne
inc
inc
cmpsl
nop
dec
je
push
loope
xchg
mov
adc
out
or
pop
scas
shrb
nop
adc
xor
out
popa
dec
pop
test
sbb
loopne
cmp
lret
jbe
hlt
sbb
cmp
cmp
lea
or
aam
clc
stc
xor
pop
mov
fs
mov
fistpll
xchg
clc
inc
arpl
push
dec
loope
aad
mov
jnp
fisubl
pop
dec
or
pop
rcrb
pusha
shll
xchg
dec
sub
push
test
das
clc
add
fmuls
jecxz
xchg
loope
scas
aam
push
xchg
leave
clc
pop
gs
and
sub
call
push
cld
cmp
inc
xor
cli
sbb
ss
add
loop
xchg
daa
orl
fdivrl
pusha
les
insb
inc
push
mov
mov
or
into
xchg
dec
mov
push
xor
pop
push
bound
or
aas
std
push
fs
push
fldl
mov
roll
mov
sbb
mov
pop
sbb
push
mov
fmul
repnz
icebp
mov
cmc
fmull
aas
or
int3
add
int3
scas
jo
jno
sbb
xor
pop
push
adc
push
inc
es
je
mov
or
pop
inc
cld
repnz
clc
fbstp
adcl
xchg
and
sub
cmp
push
sbb
mov
sub
cmp
or
pop
and
mov
sub
push
sbb
das
mov
mov
out
cld
cltd
clc
xor
test
aad
sub
test
loopne
sbb
xor
jp
mov
fsubr
outsl
das
add
ret
int
xor
rcll
in
andl
pop
push
jo
movhps
dec
or
inc
jnp
lods
sbb
sub
xchg
scas
xor
mov
in
test
or
push
jl
push
sarb
int3
test
or
les
in
aaa
jg
lea
scas
push
jb
lret
xchg
or
aam
imul
mov
jl
dec
int3
loop
std
sbb
andb
mov
mov
mov
mov
add
aam
mov
sbb
out
repz
cld
rcrl
or
mov
mov
loop
mov
fidivrl
add
or
dec
and
rclb
jns
jg
xchg
add
mov
xchg
loopne
lahf
and
pop
sub
xor
cld
int
insl
aaa
add
stos
fistpll
pop
inc
jbe
arpl
or
vpminsw
js
daa
lods
bound
cld
sbb
push
push
test
mov
add
mov
ja
subb
pop
call
jmp
cmc
cs
mov
insb
sbb
outsb
nop
or
adc
mov
decl
push
push
xchg
add
adc
sub
insb
xchg
sti
sub
push
loop
push
jmp
inc
and
dec
les
push
inc
or
pop
xchg
nop
inc
iret
sbb
and
movsl
mov
aam
jl
or
push
je
mov
cwtl
xor
fisttps
xor
adcl
sbb
stos
mov
mov
cmp
je
mov
setno
jle
cwtl
pop
add
push
ret
adc
adc
push
mov
adc
mov
int3
in
push
test
mov
int3
test
add
push
fiaddl
incb
cmpsb
stos
add
mov
jecxz
ljmp
xchg
je
pop
fcomps
out
inc
xchg
push
cld
and
inc
mov
ss
aaa
jns
push
hlt
or
fidivs
or
jle
mov
pop
fcompl
out
inc
push
in
and
les
jo
mov
lods
call
jae,pn
and
lock
mov
jmp
push
mov
inc
out
ret
adc
jge
xchg
jb
pop
aam
testl
dec
sarb
sub
mov
cltd
movsb
loope
ss
pop
rorl
lock
inc
mov
je
hlt
push
pop
je
std
ret
pop
mov
mov
sub
or
mov
std
pushf
test
adc
js
lcall
adc
test
pop
pushf
ficompl
xchg
loope
inc
fwait
jno
loope
dec
add
scas
jle
pushf
mov
fdivp
call
movsb
inc
jp
sbb
notb
mull
scas
cli
or
add
add
js
xor
jle
and
inc
xchg
sarb
and
adc
cltd
push
mov
and
jge
dec
pop
pop
out
gs
add
xor
ds
xor
js
icebp
mov
dec
jp
push
fcoml
das
push
mov
aam
push
test
xchg
mov
js
xor
pop
aam
pop
xchg
pop
dec
fwait
push
mov
dec
xor
dec
mov
jnp
pusha
stos
int3
adc
addb
and
and
push
add
lods
mov
lcall
xor
sbb
loop
mov
lret
push
mov
xchg
and
sub
lds
loope
decl
dec
xchg
jge
jae
daa
add
jno
movsl
shl
pop
dec
mov
decb
cmc
stos
mov
pop
sbb
xor
std
jecxz
jg
xchg
adc
mov
xor
enter
add
clc
out
sti
mov
pop
cltd
cmpsb
pop
cwtl
lods
adc
mov
add
push
mov
or
outsl
mov
jo
or
lods
or
dec
pop
jg
mov
mov
mov
mov
add
or
lds
cmp
enter
mov
inc
jb
je
inc
add
insl
push
imulb
push
xor
push
add
fwait
ljmp
mov
mov
mov
pop
mov
into
sahf
add
jo
pushl
mov
addb
decl
push
pop
pop
rorb
add
es
in
mov
cwtl
mov
shr
call
stc
wbinvd
adc
cmpl
cli
lahf
xlat
sbb
cltd
insb
sbb
and
loop
sub
aas
jle
addb
xor
aam
loopne
call
and
incl
adc
fbld
adc
lahf
fbld
jne
dec
xorb
hlt
orb
cmp
adc
dec
cld
push
lods
das
and
rclb
faddl
pop
repz
jg
add
add
mov
add
push
xchg
test
test
add
cmp
sub
orb
aam
sti
fisttpl
das
sti
mov
cmp
jo
or
rcl
popf
loope
sti
cmpsb
stos
jg
int3
loope
xchg
and
jo
xchg
and
out
push
or
ljmp
jo
scas
xchg
cltd
push
fidivrl
sbb
mov
mov
stos
lret
xor
loop
fdivp
pop
inc
or
call
scas
decl
testb
scas
and
adc
sub
sti
lds
or
outsl
mov
inc
outsb
call
cmp
outsb
outsb
int3
mov
pop
xor
mov
ffree
pop
fsubrs
add
xchg
fwait
jb
xchg
aad
mov
ljmp
out
sub
inc
and
pop
cmp
push
stos
push
cld
or
mov
fimull
mov
push
xor
loope
cli
inc
inc
cmp
push
or
jg
mov
jmp
dec
cmpsb
fs
ss
mov
cmp
mov
dec
outsl
rolb
cs
filds
rcll
icebp
add
push
xor
mov
adc
xchg
nop
pop
sbb
sti
xchg
scas
cwtl
popa
sub
dec
aad
mov
inc
test
push
stos
out
or
push
les
out
cli
add
pop
in
adcl
cmc
dec
xor
fs
ljmp
and
lock
inc
pop
and
xchg
xchg
pop
inc
mov
fiaddl
negb
or
mov
lods
lods
xor
jmp
add
out
adc
mov
inc
jl
outsl
cli
xchg
push
mov
in
adc
ret
movsb
aam
fmuls
idivb
mov
inc
push
sbb
push
in
pop
cmpl
pusha
add
adc
mov
cmpl
push
insl
ja
or
add
shr
jle
xor
sub
adc
or
data16
nop
mov
lret
push
push
adc
out
bound
pop
aad
fisubl
mov
test
ficoms
jle
pop
cmc
jl
lock
lahf
stos
les
or
fwait
movsb
xchg
adc
mov
in
rolb
push
lcall
fcomi
add
dec
mov
int3
pop
cmpsb
int3
xor
adc
or
dec
out
adc
push
dec
js
mov
inc
gs
inc
mov
jle
fadds
jno
pop
movsl
insl
jg
dec
xchg
test
lret
test
imul
dec
mov
je
mov
in
cmpsl
incl
js
aam
cmp
add
addr16
gs
or
or
dec
xchg
cs
adcl
scas
push
cwtl
js
xor
je
lcall
bound
add
push
jecxz
xchg
mov
dec
roll
scas
pop
js
lds
lcall
pop
jo
ret
mov
pushf
inc
mov
shl
into
sbb
cmp
jnp
mov
test
inc
test
cmpsb
inc
ret
add
push
sub
faddl
das
push
test
stc
jg
push
jp
mov
and
push
sub
adc
xor
lods
jle
sbb
mov
pop
insl
mov
mov
stc
in
pusha
inc
push
pushl
insb
mov
fldl
xchg
jb
imul
mov
fdivs
dec
jmp
in
push
aad
jp
test
repz
mov
repnz
cwtl
cmpl
ds
testb
sbb
ret
pop
sbb
pop
mov
ja
and
outsl
arpl
or
lock
cmpsb
jbe
add
fcomip
pop
adc
and
inc
imul
and
mov
mov
xchg
icebp
cli
adc
enter
loopne
jo
and
or
fistps
and
fidivs
inc
cmpsl
push
sub
in
push
push
push
in
fwait
xorl
lcall
nop
dec
ljmp
add
pop
mov
pop
mov
lcall
imul
repnz
test
loopne
lods
clc
sbbb
std
ret
jecxz
jo
ljmp
imulb
mov
jl
movsl
movsb
data16
dec
adc
out
add
call
push
fstpt
cmp
shl
repz
push
repnz
push
mov
loop
jle
out
in
js
sar
inc
pop
pop
jp
lods
dec
add
inc
rolb
xor
das
sub
sub
aas
pop
lods
pushl
add
stc
ds
in
cmc
cli
jg
loop
jb,pt
orl
test
xchg
jg
pusha
mov
rcll
mov
mov
or
add
movsb
sbb
icebp
sub
xor
enter
or
pop
dec
fdivrl
lods
das
test
fbld
push
sub
pop
push
xorb
fisttpl
pop
xchg
adc
cmp
xchg
rcpps
xor
cmp
jg
pop
inc
add
mov
repnz
jg
ret
lcall
add
jg
cli
or
mov
repnz
in
imulb
add
lea
ret
or
aaa
shll
or
cmp
pop
mov
adc
push
adc
stos
das
shlb
movsb
mov
jo
dec
lods
lret
shlb
add
clc
mov
clc
nop
cmp
add
or
cmp
inc
push
fisubrs
leave
jg
repz
or
mov
fisubrl
iret
imul
xor
fistpl
push
adc
movsb
jmp
sbb
sub
or
inc
xor
sub
xor
mov
sbbb
inc
push
jno
stos
dec
fsubl
cmc
jne
xor
xorl
xchg
cmp
dec
push
mov
data16
int3
add
mov
jbe
decl
shr
outsl
push
push
out
adc
rolb
add
cs
sbb
fistps
fs
push
add
outsb
sahf
loope
push
sub
and
adc
adc
mov
xchg
dec
xor
inc
fisttpl
jae
jle
and
pop
rcll
jbe
fucomp
movsl
subb
or
scas
lods
fcoms
sub
mov
lods
add
mov
pop
add
push
sub
mov
fstl
xorl
cmp
push
test
ja
mull
bnd
cmp
stc
mov
test
mov
pop
iret
rclb
mov
aas
add
fnsave
jp
subb
add
inc
decb
aas
fsts
cld
and
cwtl
insl
add
push
in
imul
inc
jle
in
adc
fucomip
bound
mov
out
sub
arpl
mov
or
pushl
cmp
cli
faddl
add
arpl
add
xchg
aas
insl
adc
call
adc
and
mov
enter
out
scas
cli
aas
push
mov
iret
xchg
push
iret
je
mov
aad
test
xchg
cwtl
xor
aam
rcrb
sbb
lock
pushl
daa
or
dec
dec
int3
xor
or
or
xchg
push
mov
cli
sub
push
or
mov
cld
and
pop
pop
aad
push
jb
pcmpeqd
insb
add
cld
mov
adc
add
mov
xlat
pushf
addb
mov
sub
mov
mov
fildl
xchg
and
cld
pop
call
inc
pop
add
xor
mov
iret
sub
cltd
mov
scas
xor
insl
mov
adc
pusha
shrl
xchg
bnd
sarl
add
inc
clc
jp
xor
in
or
mov
push
test
jge
pop
loopne,pn
test
outsl
add
es
rcrb
mov
jge
movsb
cmp
sbb
push
push
sbb
mov
test
jb
mov
fistpll
stos
test
shll
sub
add
dec
or
jp
jle
je
scas
adc
mov
popa
dec
mov
adc
mov
or
cmc
mov
xor
pop
xorb
sbb
adc
ret
lock
xchg
mov
je
and
add
xorl
push
bound
rol
aam
pusha
and
mov
clc
loop
cli
das
mov
pusha
movsb
cli
fsubs
js
outsb
mov
test
mov
aaa
adc
loop
cmp
sub
pop
mov
push
fwait
cmc
push
aam
jbe
fisubrs
sub
fbld
inc
clc
dec
pop
pop
jle
sub
cld
jp
stos
xor
testb
bound
and
cwtl
adc
inc
or
push
push
cltd
mov
sub
mov
in
adc
mov
lods
jb
cltd
pop
push
jno
lret
inc
mov
mov
push
inc
mov
jbe
lahf
mov
pushf
xor
inc
fcmove
cmc
mov
mov
push
mov
jl
inc
mov
cmp
xor
sub
rorb
mov
clc
bound
xchg
es
mov
popf
xchg
ss
loope
outsl
sbb
lret
sub
cmp
cwtl
add
mov
dec
adc
call
repz
dec
dec
mov
mov
sbb
rcr
sbb
and
mov
pop
or
mov
inc
inc
loopne
dec
out
pushf
jmp
loopne
mov
push
cmp
outsb
adc
xor
js
xchg
mov
dec
loope
add
lods
inc
shll
cltd
add
pop
cwtl
push
sbb
xchg
xchg
fildl
sub
notb
xchg
mov
mov
inc
fadds
lock
dec
or
inc
gs
dec
add
xlat
adc
lods
pop
or
jmp
and
xchg
jle
push
inc
fstpt
dec
jp
movsb
inc
adc
orb
fadds
scas
pop
push
mov
mov
push
xchg
jg
enter
jb
in
aam
pushl
xor
out
insl
lds
inc
test
jecxz
jnp
pushf
xor
xor
mov
stos
sbb
mov
into
push
lea
mov
pop
mov
call
pop
mov
imul
xchg
jb
mov
xor
jg
cs
pop
pop
test
add
xor
mov
mov
xchg
add
out
jo
jo
in
cwtl
inc
out
enter
pushf
mov
incl
into
xchg
push
movsl
and
je
jp
fisubl
jmp
sub
pop
mov
mov
rolb
pop
jmp
mov
jecxz
mov
stc
adc
stos
add
or
xchg
mov
push
mov
sbbb
or
pop
in
adc
pop
sub
arpl
jg
lods
inc
jmpw
jae
sarl
iret
mov
clc
lock
pop
sub
xchg
sbb
inc
out
add
shrl
add
dec
aaa
add
outsl
std
jno
pop
mov
sub
out
inc
or
aad
jl
mov
pop
inc
dec
mov
jmp
rclb
rcrb
pop
xor
mov
filds
pop
dec
mov
call
mov
jbe
adc
pop
adc
flds
xor
jle
or
inc
jo
lahf
data16
inc
scas
lcall
decl
add
xchg
mov
dec
xor
xorb
clc
push
cld
in
ljmp
and
cmc
scas
dec
pop
jmp
cmpb
out
ljmp
xor
test
jle
cs
int3
loope,pn
test
aaa
pop
decb
xor
push
fmulp
lcall
scas
and
add
hlt
fldenv
or
inc
xor
dec
cmp
pop
mov
pop
jo
roll
mov
inc
or
push
jne
js
mov
push
out
xchg
mov
lret
sub
decl
cli
mov
and
pop
in
or
cld
jle
lods
out
or
test
rorb
push
lret
sbb
adc
subl
loopne
jle
adc
outsb
jne
fwait
sub
xor
iret
cmp
lcall
adc
pop
loope
sbb
dec
ja
pop
push
xor
mov
outsb
xchg
jae
adc
pop
ja
fists
xor
pop
jne
mov
mov
cmpsb
out
add
lahf
lods
dec
incl
mov
fdivrl
add
push
sbb
inc
mov
xor
fcomi
or
cmp
xor
push
jae
ss
xor
xor
loopne
mov
mov
ja
popf
test
xchg
pop
ljmp
aas
dec
jae
mov
pop
push
push
cmpsl
sahf
gs
mov
data16
and
test
nop
push
sbb
pop
call
pop
cwtl
push
add
xor
fwait
stos
mov
fistpll
inc
fucomi
shl
mov
call
jne
xchg
mov
aaa
xchg
dec
movsl
hlt
into
test
push
push
test
mov
adc
add
jo
jmp
add
loopne
out
inc
or
outsl
pop
leave
mov
jb
push
rcll
movlps
bndstx
mov
sub
mov
push
ret
pusha
sub
repnz
stos
addl
xchg
mov
icebp
jmp
and
xchg
ja
or
es
inc
loopne
outsb
ficompl
adc
or
cli
leave
mov
or
sarb
sbb
out
mov
sbb
movsb
pop
jle
arpl
inc
push
orl
in
pop
scas
adc
mov
mov
movsl
add
mov
pop
sbb
js
out
adc
and
shrb
mov
xchg
js
fildll
sbb
inc
lahf
inc
jo
dec
mov
mov
ss
clc
sbb
mov
xor
add
notb
and
dec
and
les
arpl
xchg
push
fadd
adc
pop
addr16
xchg
and
xlat
aaa
je
xchg
sbb
jge
sbb
ja
mulps
mov
mov
decl
outsb
mov
movsl
imul
mov
js
movsl
mov
xchg
cmp
enter
or
xchg
hlt
sbb
push
mov
inc
into
call
loope
das
movb
cmpsb
add
mov
inc
or
add
fs
test
sub
les
jecxz
in
mov
mov
lahf
lock
aaa
lods
call
leave
cld
mov
adc
pmaxub
cmp
sbb
jns
scas
decb
in
stos
cli
xchg
adc
jecxz
or
xchg
pop
jbe
xchg
push
sbb
ss
push
mov
mov
mov
push
fstps
jbe
sbb
mov
push
call
leave
add
test
sub
ret
les
mov
pop
sub
xor
out
adc
mov
pop
pop
xchg
stc
dec
inc
movsb
or
or
js
test
rcr
jo
imul
loope
jp
xor
loopne
cwtl
pop
and
fwait
mov
dec
loopne
push
jg
das
jmp
inc
add
adc
adc
pop
mov
add
cmpsl
call
mov
jbe
shrl
out
pushf
gs
dec
push
cli
mov
cs
dec
leave
inc
and
ret
in
dec
pusha
inc
adc
push
inc
mov
shlb
movsb
jb
jg
call
jo
loope
jg
jbe
les
cli
jg
mov
test
aam
pop
add
cmp
ljmp
cmp
sub
mov
jp
daa
add
mov
push
mov
pop
and
push
and
or
clc
loopne
dec
jp
aad
clc
ja
nop
leave
cmc
das
push
pushf
push
mov
pushf
icebp
pop
pusha
rcll
adc
adc
cwtl
test
cwtl
das
js
or
xchg
movsb
jae
fidivrl
ljmp
icebp
push
cmp
orl
or
mov
jl
or
sbb
mov
iret
xor
pushl
les
shrb
out
and
xchg
jge
ret
and
into
cmp
mov
mov
xchg
pop
add
pop
or
jg
xchg
mov
push
push
xchg
cltd
test
jecxz
pop
incl
and
push
add
push
and
push
mov
cmp
push
ret
adc
enter
aad
lock
sahf
cmp
pop
hlt
mov
pusha
loop
sbb
sbb
aam
jmp
iret
jb
enter
sbb
call
subb
cwtl
push
sarb
pop
cltd
test
ret
popf
cmp
mov
mov
cmp
mov
loop
jnp
movsb
in
cmpsl
pop
je
int
nop
mov
sub
jecxz
pop
sbbl
in
inc
mov
cmp
push
mov
jbe
or
jae
ret
add
dec
in
test
mov
cmp
inc
adc
outsl
pop
hlt
cmp
sub
dec
rorb
mov
lahf
rcr
rcr
fdiv
orb
cli
test
roll
adc
inc
pop
lret
push
mov
in
das
mov
jecxz
or
dec
mov
mov
push
clc
sbb
dec
push
into
adc
das
test
pop
fdivp
in
shlb
sbb
movsl
xchg
ljmp
lret
sahf
out
jb
inc
lea
lahf
mov
mov
out
mov
xchg
repz
jg
xchg
cmpsl
mov
outsl
hlt
add
rcrb
loop
pushf
cmpsb
out
sub
mov
dec
sbb
sub
popa
mov
hlt
lret
pop
ljmp
stos
cmp
pop
lret
add
mov
fs
xchg
dec
dec
addr16
dec
add
movsl
inc
aaa
test
notl
push
push
jno
int
addb
clc
push
outsb
jo
daa
stos
mov
es
cli
test
jno
pop
mov
call
test
ss
int
or
or
sbb
movsl
and
mov
fldz
mov
mov
repnz
add
fs
sub
repnz
add
test
jo
out
cli
pop
out
aam
popf
filds
cmp
in
xchg
rolb
pop
dec
mov
insb
lret
js
mov
xchg
sbb
test
cs
sar
negb
sbb
dec
inc
loop
push
js
iret
sarb
sti
push
xor
out
dec
push
xor
scas
into
mov
nop
push
rorb
xchg
jbe
pop
stos
daa
bound
mov
pop
fisubrs
lock
imul
rcrb
aaa
fdivrl
adc
test
mov
out
pop
add
sub
insb
mov
lahf
xchg
icebp
call
sbb
mov
mov
cmp
xor
sbbb
cs
hlt
adc
sarl
mov
inc
fwait
cmp
xor
mov
sbb
push
sbb
test
lahf
das
gs
push
pop
mov
dec
fdecstp
test
lret
push
ficomps
mov
cs
adc
vmovsd
jp
mov
cmp
mov
mov
cmpsl
push
or
sub
mov
ds
fdivr
outsb
ret
lock
sub
loop
mov
sbb
jg
enter
aam
push
cmp
aam
jl
add
in
push
inc
cld
mov
push
and
sbbb
sahf
shlb
cmc
stos
push
lds
add
icebp
pushl
lods
dec
bound
hlt
xor
add
xchg
add
jecxz
mov
std
jg
fsubrp
xchg
int
rcrl
loope
mov
in
push
shr
xor
sbb
cli
and
sahf
in
out
mov
push
mov
pop
adc
mov
jge
lcall
int3
mov
pop
mov
stos
enter
mov
sub
jns
xor
fbstp
pusha
add
jmp
xchg
outsb
sbb
push
into
sbb
jo
movsb
fnstsw
inc
arpl
fcomip
jg
and
add
int
aas
jb
xchg
or
test
add
test
hlt
mov
mov
inc
imul
inc
dec
or
and
out
std
jbe
inc
addr16
cld
adc
pop
push
jg
aas
enter
shlb
xor
sbb
loop
xor
jle
pusha
add
fwait
ss
or
dec
pop
dec
cmp
mov
adc
aas
pusha
cltd
pop
popa
movsb
push
call
outsl
pop
lods
mov
in
xor
add
push
jmp
fildll
mov
dec
test
iret
addb
ds
push
add
xchg
add
addr16
in
dec
sub
sub
xchg
or
incl
mov
mov
jle
inc
pop
inc
test
pop
icebp
or
je
gs
dec
mov
orl
idivb
mov
pop
std
and
lock
decl
ret
dec
jo
stos
cmp
imul
loope
push
shlb
pop
subb
cmp
enter
movsb
jnp
dec
ss
nop
call
pop
loopne
jle
sbb
cli
inc
inc
push
mov
sbb
jno
sbb
mov
adc
or
or
aas
jle
xchg
adc
lret
pop
imul
add
ror
xlat
gs
cwtl
add
pop
mov
ret
lcall
add
lock
in
adc
xchg
mov
jge
add
scas
cmp
mov
jno
test
push
sub
and
push
inc
iret
nop
mov
mov
lcall
repnz
das
clc
pop
mov
push
inc
mov
enter
js
mov
or
sbb
push
outsb
daa
arpl
and
ss
xchg
pop
push
cmc
pop
mov
cmpsl
out
mov
push
cli
sar
mov
ror
dec
adc
dec
jns
push
loopne
and
inc
addr16
dec
cmp
fsubp
subl
push
js
es
sbb
sbb
sub
xor
xlat
add
in
xor
test
and
pop
inc
xor
cld
arpl
stos
dec
jns
add
cmp
sbb
sub
cld
xlat
sbb
lods
arpl
add
mov
dec
sbb
inc
adc
xchg
repnz
sub
mov
add
add
insl
inc
xor
les
pop
adc
andl
and
adc
inc
cmp
aad
and
in
adcl
pop
sub
mov
add
rcrl
pop
divb
xchg
and
mov
and
ljmp
mov
cwtl
fcmovu
mov
jmp
or
mov
hlt
sbb
mov
jns
fxch
clc
mov
test
sbbb
and
inc
xchg
pusha
movsl
scas
mov
sub
out
orb
loope
imul
adc
js
mov
in
sub
aas
pop
dec
jl
subb
fs
push
fcomps
sbb
mov
dec
pop
pop
lea
cwtl
mov
cmpsb
xchg
inc
cmp
stc
insb
adc
push
and
repz
inc
in
lock
jg
lds
adc
jno
add
lahf
sbb
test
dec
sbb
fisttps
shlb
inc
mov
inc
fmull
mov
jns
decl
pop
push
addb
cli
stos
mov
dec
shrb
dec
jnp
icebp
jnp
push
mov
adc
clc
mov
mov
jecxz
or
aad
mov
test
mov
insl
fisttps
dec
jecxz
pop
cs
jg
scas
lret
push
and
jmp
lds
adc
xchg
push
mov
pusha
imul
jns
mov
inc
in
into
mov
rol
dec
mov
mov
mov
cli
sbb
addr16
dec
arpl
dec
fsubrp
scas
push
and
fdivl
scas
add
rclb
push
es
call
and
xor
or
out
pop
and
jg
mov
roll
dec
cmp
xor
into
jmp
pop
lock
jle
sti
in
cltd
mov
mov
or
repz
push
and
and
cs
mov
inc
stc
mov
mov
mov
mov
push
or
mov
pop
jl
outsb
test
mov
sub
mov
loop
je
ret
pop
xor
mov
push
adc
mov
inc
lock
mov
in
adc
push
aad
ret
xor
jne
pop
mov
mov
arpl
jo
hlt
sbb
cmpsb
daa
inc
sub
bound
ret
call
mov
or
or
mov
jp
shrb
jl
or
add
dec
incl
cmp
push
add
outsb
jecxz
adc
add
clc
filds
imul
cmp
aam
ja
addr16
imul
cmp
and
lock
add
icebp
aad
aaa
xchg
push
shll
sbb
js
mov
dec
cli
call
lcall
xor
or
and
ret
incl
xchg
and
ljmp
loop
fs
lds
jge
hlt
and
cmc
std
push
jb
pusha
lret
cmp
mov
push
negb
push
mov
mov
push
ret
add
lret
or
nop
stc
add
dec
mov
aad
sub
and
mov
aas
out
pop
or
mov
dec
out
pop
add
das
js
dec
and
divl
in
addl
pop
lahf
stos
dec
ja
flds
add
hlt
fists
jne
mov
mov
xchg
adc
cmp
mov
in
or
aam
or
les
in
pop
hlt
lcall
sahf
adc
add
push
loop
cmp
cs
xchg
sbb
jecxz
sub
out
pop
adcl
xor
push
xchg
dec
pusha
sub
jo
cmp
leave
jne
stos
push
fadds
neg
add
nop
les
dec
add
or
push
pop
jo
dec
jmp
sub
mov
ljmp
or
popf
add
outsl
push
mov
pushf
xor
add
add
adc
or
add
ficoms
stos
mov
bound
sbb
inc
or
inc
loope
fwait
add
stos
outsb
sbb
rcl
repnz
cmp
scas
mov
or
femms
imul
lds
inc
xor
test
mov
rcrl
lods
add
push
rcrl
xor
aad
fcomps
or
inc
cld
cmpsl
mov
call
xchg
mov
inc
cli
sub
adc
mov
pushf
stos
and
add
repnz
xchg
mov
dec
lds
or
cmp
inc
xor
sub
repz
jb
cmp
push
movsl
leave
incl
dec
andl
cmpsb
mov
shlb
call
xor
mov
call
andb
mov
andb
loopne
pop
cmpsl
cwtl
xor
sbb
xchg
mov
inc
pushf
aad
mov
ljmp
ret
mov
sbb
sahf
clc
outsb
stos
or
hlt
jo
cli
or
call
and
and
inc
in
mov
cmp
clc
cmpsb
ljmp
and
mov
outsb
sarl
add
sbb
les
xor
sub
incl
cld
clc
les
cmpsb
and
dec
test
add
inc
pop
xchg
imul
std
incl
pop
mov
sub
rorb
outsl
pop
cld
in
push
inc
cmp
repz
cmp
loop
inc
sti
jge
in
fiadds
xchg
xor
inc
cs
scas
mov
sbb
cmpsl
jb
adc
sub
adc
sbb
and
mov
cli
addl
mov
sbb
rcll
push
loopne
jecxz
jo
sub
pop
and
ret
aad
xchg
ret
xchg
icebp
or
mov
add
mov
das
fs
int3
loope
cmp
mov
out
lcall
mov
add
std
loop
test
lods
xchg
data16
jl
out
inc
xchg
or
popf
mov
or
dec
mov
jle
mov
push
mov
movsl
sbb
cli
pop
cmp
clc
jg
ret
mov
addr16
fildll
mov
push
sub
adc
adc
sbbb
or
sub
cmp
cmp
inc
daa
pop
pop
lods
add
outsb
hlt
jp
in
mov
loop
xor
icebp
mov
pop
jge
inc
adc
sar
pop
incl
adc
scas
nop
mov
xchg
jg
je
mov
pusha
test
fsubl
xchg
cld
and
xchg
jne
dec
cli
push
fisttpl
inc
imull
xor
xor
mov
cmp
mov
mov
pop
lret
sub
and
arpl
push
xor
and
shll
jg
repnz
jle,pt
pop
pop
js
arpl
fcom
add
hlt
out
add
mov
fnsave
add
adc
adc
sar
inc
sub
xchg
push
sbbb
les
in
mov
push
adc
xor
clc
and
rorb
add
test
adc
sub
cmp
pop
orb
and
or
mov
jnp
aam
sti
mov
sbb
scas
xchg
inc
in
push
cld
and
repnz
testb
sub
int3
sub
xchg
adc
rorb
int
mov
lret
and
and
mov
clc
or
pusha
lods
and
mov
cmp
fs
sarl
cmp
mov
dec
pop
je
mov
and
jge
pop
inc
cmpsl
hlt
inc
sbb
scas
inc
xchg
ss
js
pop
lcall
inc
scas
jp
mov
and
fcom
sbb
aas
mov
cmp
inc
adc
pop
cmc
inc
rorb
cld
sahf
es
in
dec
jmp
inc
push
dec
pop
lahf
sbb
idiv
int3
cli
insb
pop
mov
dec
dec
sbb
pop
inc
jb
ja
add
mov
and
push
in
les
popf
xorb
or
push
cld
push
inc
int
pop
adc
loopne
ljmp
insl
pop
mov
inc
popf
fwait
xchg
popf
mov
push
jmp
rorl
dec
or
adc
jno
or
or
jne
add
xor
push
cmpsb
push
std
adc
and
add
subl
push
jmp
inc
mov
cmc
dec
das
cmp
and
jge
aam
sbbb
sbb
div
add
cmp
jb
loop
int3
pop
es
and
mov
push
or
sti
push
mov
adc
imul
adc
inc
jo
stc
xchg
or
xor
cmc
aad
mov
mov
in
mov
add
mov
jbe
xor
xor
sbb
jmp
clc
into
lods
mov
decl
push
test
sarb
std
arpl
jg
dec
stos
cwtl
or
xorb
sbb
sbb
sbb
sub
cltd
sbbl
icebp
push
lcall
clc
pushl
subl
xor
sahf
js
mov
mov
rolb
push
add
in
lock
pop
ljmp
cld
or
or
leave
add
or
loope
push
adc
sub
popa
js
mov
jmp
add
add
pushf
sbb
inc
pop
ss
sahf
mov
sub
sti
ljmp
pop
or
mov
fistpll
pop
inc
inc
sub
testl
and
bound
or
or
add
pop
pop
je
xor
and
add
jle
xor
insl
xchg
sbb
push
cmpsb
cltd
cmc
or
sub
adc
rolb
fs
cld
out
mov
jmp
js
addl
sbb
jno
sub
and
data16
sbb
mov
xchg
push
rclb
xchg
xor
push
push
aaa
std
lret
or
popf
ljmp
and
hlt
aad
sub
xor
es
or
orl
xchg
push
outsl
ljmp
rcrl
nop
movsb
adc
jmp
sub
in
lds
and
mov
sbb
lock
adc
xor
cmp
out
in
fcoml
scas
leave
add
xorl
add
in
out
xor
rcl
icebp
call
cmp
mov
stos
orl
in
push
je
sub
pushf
mov
into
les
xchg
adc
inc
faddp
jecxz
subb
dec
mov
testl
jns
mov
push
xchg
inc
adc
daa
fiadds
cwtl
xchg
adc
mov
mov
call
sbb
jp
enter
sti
mov
add
pop
testb
cmp
inc
outsb
cli
or
mulb
sub
pop
add
adc
adc
sarl
outsb
repnz
cmpsl
adc
stc
cltd
fdivr
jo
or
loop
roll
std
pop
rclb
test
add
sbb
xor
imul
add
sbb
jo
pop
ds
mov
pop
sarb
mov
and
int
clc
jmp
idivl
pop
sbbb
das
sub
pop
adc
imul
shl
add
loop
mov
dec
xchg
xchg
or
adc
mov
adc
ljmp
adc
call
push
lods
jno
shl
bound
pushl
inc
nop
inc
push
cs
ficoml
hlt
das
jae
mov
and
dec
xor
adcb
out
loope
mov
icebp
loopne
mov
lea
call
cmpb
mov
push
lret
stos
fnstenv
push
mov
shrb
add
outsl
ljmp
fisttpl
les
add
out
adc
mov
and
push
mov
and
ss
bound
push
das
add
dec
fldcw
lret
daa
inc
xor
lock
in
dec
sbb
loope
incl
pop
mov
inc
mov
pop
aas
and
aad
loop
test
sub
lret
enter
jbe
in
sub
xor
xor
daa
subl
adc
vaddss
inc
mov
xchg
ss
pusha
subb
jl
ss
push
inc
and
shlb
pop
loop
inc
sarb
je
dec
inc
cmp
inc
popl
xor
mov
dec
xchg
or
stos
scas
stos
fidivrl
pushf
push
mov
sbb
xchg
es
cmp
mov
pop
mov
rcrb
cli
push
inc
insb
call
sub
adc
cmpb
mov
jp
test
add
sub
test
daa
sbb
sub
ss
inc
mov
cwtl
aaa
inc
add
cwtl
pop
push
add
lcall
pop
insb
push
scas
adc
xorb
popa
mov
and
sbb
fdiv
dec
and
xlat
mov
call
add
pop
push
cmp
or
ss
cmp
add
cmove
movsl
cmp
adc
insb
jmp
shlb
dec
pop
dec
fs
mov
push
mov
push
sti
xchg
fcmovne
cmp
push
stos
xchg
sub
insb
xlat
sub
add
jo
or
inc
shll
lock
shll
mov
mov
fadds
and
adc
cli
dec
add
jl
mov
into
scas
out
sbb
ret
sbbb
jno
or
mov
stos
fsubrp
pop
sbb
push
pusha
and
fildl
call
push
xchg
rcrl
shl
les
fld
inc
mov
test
hlt
rolb
pushf
cmp
ret
scas
movsb
or
or
scas
addb
rolb
pusha
adc
pop
std
jge,pn
enter
loop
cld
mov
and
mov
dec
and
ljmp
mov
inc
push
jo
mov
pop
jl
lahf
mov
in
out
adc
xchg
mov
inc
inc
xor
cmp
out
rolb
adc
xchg
cmp
dec
cltd
pop
or
in
and
outsl
icebp
loopne
and
cmp
pop
mov
ror
push
divb
mov
clc
movsl
sub
xor
mov
stos
shlb
repnz
lock
add
in
jne
cld
or
sbb
sbb
hlt
xchg
out
push
test
in
call
les
push
dec
cwtl
cmc
shlb
xchg
cmp
ds
push
mov
and
xor
imul
and
inc
lock
out
dec
mov
mov
dec
adc
mov
cmpsb
xlat
aad
ja
mov
addl
add
imul
in
xchg
cmp
repz
inc
adc
pop
shrb
cld
test
nop
or
scas
repnz
popw
int
mov
push
cmc
push
pushf
dec
sub
movsl
lcall
jle
push
mov
icebp
stos
outsb
imull
mov
or
decl
pushf
or
push
cwtl
dec
sub
movsb
mov
xor
mov
pushl
addb
adc
aam
lcall
add
decl
fcomip
movsb
std
loope
add
mov
xchg
mov
sub
movsb
dec
mov
lods
cs
test
sbb
js
mov
test
sbb
mov
clc
inc
mov
bound
jb
fnstcw
push
cld
adc
dec
cmp
jae
incl
outsb
jmp
syscall
sbb
es
outsb
add
sub
push
nop
jp
iret
push
icebp
jg
ja
push
inc
push
ret
mov
cwtl
arpl
push
fwait
xchg
mov
mov
xor
mov
out
rolb
xchg
ss
in
test
cmp
xchg
addr16
mov
xchg
push
lret
add
imul
sub
ljmp
xor
shlb
sub
add
inc
pop
add
sub
push
daa
inc
mov
loopne
mov
enter
arpl
dec
inc
fcoml
jns
imul
jb
aas
sub
mov
sub
arpl
std
and
mov
lcall
push
push
nop
ds
test
or
enter
cmpsl
pop
jne
and
fcomip
stos
dec
pusha
lret
mov
jne
sbb
cmp
adc
xchg
outsb
les
adc
push
call
shll
xchg
sub
lret
loop
les
testb
dec
bound
int3
add
cmpsb
pop
and
pop
nop
mov
or
xchg
inc
pushf
lcall
lea
sub
xlat
out
icebp
jmp
stos
jnp
xor
addr16
add
ja
sub
ret
loopne
mov
xchg
adc
stos
pop
lods
clc
add
mov
cmp
mov
mov
xor
daa
mov
hlt
ficompl
hlt
int3
ret
into
pop
push
pop
data16
addr16
js
mov
add
adc
mov
mov
or
jg
dec
or
add
gs
push
fcom
cmp
jo
lds
push
leave
dec
imul
rorb
cmp
xchg
xor
pushf
sbb
mov
cmp
popf
jo
adc
cli
dec
push
jmp
jmp
pop
jmp
mov
sbb
std
add
adc
je
loopne
sub
add
fcomip
jmp
aad
sti
add
iret
xor
shl
dec
mov
scas
ljmp
sti
ret
xchg
add
es
dec
cmpb
es
mov
lods
std
stos
test
pop
loope
aam
or
testb
and
sub
xor
jge
cs
notb
push
dec
nop
push
pop
popl
mov
lods
and
loope
mov
mov
ss
shlb
bound
mov
ror
inc
dec
sub
repz
add
sbb
bound
adc
testb
push
inc
outsb
pop
add
inc
jo
cmpb
cmpsl
sbb
sbb
pop
sbb
pop
add
push
sbb
daa
jbe
cld
adc
jg
mov
xchg
mov
mov
cmpsb
xor
sbb
loopne
loope
ljmp
int3
xchg
add
cmpsl
lds
push
add
ljmp
push
mov
popa
mov
pop
sub
stos
sbb
movsl
es
bound
movsb
or
mov
xorb
nop
add
aad
cs
inc
inc
in
loopne
data16
stos
sbb
cmp
and
xor
pop
addr16
loopne
push
xchg
or
push
rorb
push
or
test
fs
push
mov
dec
ss
pop
cmp
mov
xlat
mov
clc
jmp
orb
iret
lret
jae
push
push
mov
cmpsb
jne
sub
cltd
mov
sbb
fmull
pop
bound
mov
dec
cmpsb
movsl
push
js
sbb
loop
or
inc
mov
jl
xlat
loope
mov
sbb
or
lods
add
xor
pop
dec
mov
sbb
popa
rdmsr
popa
inc
test
test
cmp
or
es
mov
cmp
cmc
fidivrs
add
inc
sti
daa
jmp
mov
and
loop,pt
xchg
push
ss
addb
fisttps
or
stos
or
aad
xchg
jmp
add
jo
data16
dec
loop
dec
adc
sahf
inc
and
mov
xchg
js
mov
mov
pusha
pop
inc
jecxz
xchg
sahf
daa
ds
adc
stc
sbb
mov
movsb
push
bound
mov
push
clc
scas
enter
jmp
jp
lahf
movsl
sbb
push
cli
scas
sub
mov
scas
dec
sbb
dec
dec
loopne
cld
test
testl
push
mov
mov
inc
sub
pop
cmc
add
in
fsts
push
sub
mov
add
in
fsubs
je
std
cmpsb
inc
xchg
shlb
inc
push
and
add
and
fprem
das
dec
ss
hlt
jno
add
lahf
sbb
cld
pop
jns
xchg
cld
in
int3
and
rcr
mov
xchg
dec
es
outsl
and
popa
add
inc
mov
out
mov
sbb
mov
cmpsb
xorl
repnz
cmpl
adc
mov
in
outsl
les
ljmp
fstpl
test
sbb
pushf
push
addl
mov
push
inc
push
xor
lock
and
mov
icebp
cmp
mov
pusha
xlat
pop
mov
and
dec
push
es
adc
add
in
jns
xor
ret
mov
pop
jno
dec
scas
xor
add
call
mov
jbe
sbb
or
rolb
or
test
xorl
inc
ja
loope
in
jo
pop
mov
dec
bound
das
mov
push
dec
lret
xchg
add
ret
incl
pushf
in
movsb
push
mov
call
or
sub
imull
movsl
fcompl
jb
clc
push
ret
jo
xchg
ret
push
dec
xchg
xchg
sub
add
cmp
fcompl
mov
roll
mov
pushf
aas
clc
cmpb
pop
dec
mov
sbb
sbb
mov
jno
add
das
adc
test
scas
pop
add
sub
xbegin
rorl
dec
push
jo
sbbb
lea
subb
mov
mov
push
sub
inc
daa
pop
mov
insl
lcall
dec
xor
je
inc
xchg
jecxz
ret
pop
movsb
pop
lock
jge
nop
pop
push
push
sbb
decb
push
mov
call
cs
pop
jg
pop
repz
mov
inc
pop
sbbb
test
test
scas
pop
dec
dec
fcoms
add
add
outsb
je
push
jle
mov
jle
xor
scas
out
dec
outsb
es
cmp
lock
aaa
or
xor
mov
sub
aad
fs
and
mov
push
jp
fildl
cmc
bound
cs
sub
pop
nop
mov
nop
mov
jae
inc
mov
fdivl
unpcklps
test
mov
ficompl
insb
into
subl
push
add
cli
call
lcall
mov
mov
in
cmc
es
mov
jl
add
mov
push
mov
cmp
add
or
xchg
cwtl
and
cltd
std
xor
lahf
aad
test
adc
movsb
int
test
iret
fs
js
jg
mov
adc
mov
call
or
push
cmp
lods
add
stos
repnz
idiv
aam
push
adc
push
and
pop
mov
and
mov
nop
add
xchg
xchg
loope
clc
aas
mov
mov
mov
and
ret
inc
jle
jmp
xchg
mov
xor
cmp
aad
mov
mov
fistpll
in
pop
loopne
xchg
add
outsl
pushl
and
inc
mov
mov
add
int
das
pusha
movsb
mull
cld
pop
ljmp
add
jno
mov
repz
inc
xchg
xorb
cld
mov
stos
sub
aam
mov
mov
adc
gs
mov
stos
cwtl
js
filds
xor
add
add
lcall
pop
inc
fldl
mov
or
xchg
push
fdivr
lcall
das
jp
fimuls
inc
mov
sbb
test
and
hlt
stos
jle
cli
es
push
lret
call
xor
add
jmp
mov
mov
adc
dec
or
aaa
mov
jno
subb
push
sub
pushf
es
in
fstl
std
inc
xor
enter
xor
xor
arpl
pushl
and
int3
mov
mov
pop
outsl
mov
mov
insb
mov
std
mov
xor
mov
push
jecxz
leave
add
and
push
pop
repz
pop
jecxz
mov
xchg
push
cs
cltd
jno
sub
movntps
or
ss
sbbl
pop
sbb
push
inc
and
and
mov
cld
enter
and
or
or
sub
addb
aad
in
push
call
add
fadds
fidivs
sub
dec
push
cwtl
cmc
hlt
call
popf
stos
push
addr16
push
popa
lock
addr16
pop
lock
mov
mov
xor
or
dec
or
fldenv
imul
inc
jg
add
cmp
lret
call
or
sub
inc
lea
xor
cmpsb
add
mov
jne
fsts
mov
push
cmp
mov
lea
adc
sub
mov
aad
sub
push
stos
push
xchg
inc
add
aaa
mov
std
mov
sub
cmp
bswap
out
add
sbb
inc
fs
cmp
adc
and
cmpsl
es
xor
xor
or
adc
sahf
fdivrl
jo
xlat
pushl
cwtl
adc
lret
xor
sti
fs
pop
jo
sbb
push
push
and
lcall
push
pop
shlb
imul
and
xchg
jp
pmovmskb
fcoms
pop
xor
inc
pop
xchg
sub
add
jae
ja
clc
mov
ficompl
imul
cltd
push
inc
mov
and
test
rcll
pop
dec
and
addb
lods
ljmp
test
sub
pop
dec
test
xchg
inc
hlt
mov
inc
push
ret
ret
popf
and
and
lcall
add
jecxz
xor
icebp
sub
adc
push
sub
cmp
mov
lcall
sbb
mov
sar
andl
mov
xor
hlt
inc
adc
pop
mov
ss
sub
cwtl
dec
sbb
loope
dec
push
cmp
sbb
mov
scas
inc
aaa
test
xor
outsl
push
add
jno
rorb
cmp
xchg
sub
sarb
gs
enter
pop
leave
mov
and
xchg
mov
rorb
loopne
push
shld
cmpsb
push
shrb
mov
mov
push
shlb
push
add
sbb
dec
xor
lock
out
mov
fsubrs
and
mov
pop
cwtl
je
sbb
iret
imul
or
cmp
mov
inc
icebp
ror
repz
cmc
orb
or
lock
stc
cli
lcall
sbb
pop
mov
sub
cmc
addb
adc
lock
enter
lds
es
cltd
jg
leave
fsubrl
dec
push
adc
mov
mov
clc
and
mov
call
add
xor
or
insl
pop
neg
icebp
adc
imul
or
pop
lods
call
mov
sbb
pop
int
jge
int3
xor
int
das
cld
sti
lcall
scas
stos
or
or
adc
ds
test
or
pop
mov
loope
icebp
jg
inc
pop
xchg
jmp
roll
push
or
mov
notb
add
inc
dec
add
sbb
push
push
jp
mov
and
and
adc
cmp
sarb
or
mov
cmp
and
sbb
lods
jno
imul
loop
fs
repz
mov
push
push
mov
scas
inc
lret
sub
cmpsl
inc
adc
pop
dec
xor
std
cmp
mov
or
loope
ja
pushl
loope
dec
ljmp
clc
mov
mov
ljmp
fs
mov
mov
xchg
mov
push
push
sbb
pop
scas
fwait
test
lcall
test
stc
es
loopne
adc
test
xor
push
push
popf
jge
lods
lret
jb
xchg
in
sub
pop
je
orb
mov
test
dec
inc
faddl
cmc
in
stos
clc
out
and
lds
leave
repnz
and
xlat
in
xchg
outsb
jecxz
sbb
mov
leave
movsl
mov
or
jge
cmp
addr16
clc
cwtl
ljmp
jae
iret
cltd
ret
add
inc
jb
iret
bound
or
xchg
xchg
sbb
pop
push
movsb
mov
jmp
cmp
inc
bound
xor
or
mov
js
pop
aaa
lods
fs
push
in
mov
popl
nop
and
sbb
adc
dec
addl
cli
call
dec
dec
xchg
call
push
scas
xchg
daa
call
scas
rolb
mov
cld
scas
sbb
inc
sub
cwtl
clc
jg
cld
lahf
push
mov
mov
test
hlt
in
in
cmc
jb
jb
jg
push
jecxz
or
out
add
or
fdiv
inc
xor
push
je
pop
mov
cmp
cwtl
cld
cmpsb
or
imul
or
lock
xchg
cmpsl
cmp
aaa
pop
push
sbb
jecxz
cld
cs
jl
mov
sbb
inc
inc
les
cmpsb
lcall
dec
ljmp
int3
push
jo
pop
xlat
pop
lea
es
pop
test
popf
push
mov
push
add
repz
and
fbld
mov
loopne
das
mov
aaa
std
xchg
insl
add
icebp
out
sbb
hlt
loope
decl
mov
sbb
sbb
movsl
add
jae
sub
ja
mov
pop
mov
jl
int3
and
xor
xor
int
insl
push
inc
in
jge
leave
add
mov
mov
incl
jecxz
scas
enter
push
xchg
xchg
fsubrs
ss
mov
push
std
scas
sub
cmp
fs
xor
call
xchg
out
push
arpl
mov
adcl
daa
das
push
sbb
aam
mov
aad
inc
mov
adcb
rol
jo
jmp
cmp
inc
out
inc
mov
icebp
sub
sub
cmp
or
ret
dec
fs
das
jle
mov
pushf
and
mov
cmp
sbb
add
jb
pop
cmp
lret
push
xchg
in
inc
mov
add
pop
ret
inc
ljmp
in
test
stos
loope
loop
mov
inc
sbb
pop
add
aam
rolb
nop
roll
sub
cmpsb
mov
cli
incl
add
xor
sub
dec
je
xchg
out
cli
or
in
cwtl
daa
jmp
and
dec
xor
cld
push
inc
adc
aaa
mov
ss
or
lock
dec
add
sbb
add
outsl
sub
sets
test
mov
mov
xchg
outsl
filds
pop
mov
or
call
xorb
test
insb
push
add
cld
lahf
cmp
and
push
in
pop
pop
sbb
ja
ret
inc
push
je
adc
mov
icebp
add
inc
stos
mov
cld
push
adcl
orb
std
mulb
cs
fisubrs
push
add
out
cmp
test
inc
xchg
inc
sbb
inc
out
pop
cmp
inc
incl
arpl
addr16
popf
xor
rcl
icebp
fcom
xor
lock
fs
push
pop
pop
mov
pop
sbb
or
cmp
ss
shll
hlt
insb
int3
xor
aaa
pop
cs
loopne
or
adc
sbb
into
movsb
dec
pusha
sub
xchg
adc
or
push
mov
inc
bound
push
mov
xlat
loopne
xchg
xchg
pop
add
cld
std
add
mov
inc
jecxz
inc
xor
cmp
lds
add
test
sbb
push
loopne
xchg
dec
lods
dec
aaa
fwait
popa
sub
jg
fsubl
cld
bound
inc
mov
cld
hlt
or
scas
add
jp
call
filds
insb
dec
gs
cmpsb
add
imul
cmpsl
lods
and
sub
or
cs
je
push
or
lret
rclb
daa
into
testb
in
xchg
pop
push
sarb
loope
mov
add
push
mov
inc
dec
pop
and
fiaddl
and
cmp
mov
gs
cltd
push
popl
and
outsl
xchg
sub
mov
mov
fwait
incb
sub
ljmp
sub
add
pushl
push
mov
in
inc
cmp
dec
add
ffreep
xor
dec
cmp
int3
sub
inc
mov
xchg
int3
loop
pop
cmp
mov
adc
sbb
out
add
jl
out
mov
subl
mov
bndldx
fstl
fistpl
outsl
xor
mov
pop
push
movsb
aaa
pop
pushl
ret
xchg
and
dec
cmp
inc
lcall
push
cmp
push
inc
add
lcall
cmp
cmp
push
in
ja
loope
push
dec
push
mov
mov
std
add
insl
inc
stc
test
lret
icebp
popa
roll
hlt
pushl
cld
jle
repnz
mov
rcrb
sub
loope
shll
out
clc
lcall
repz
jg
cmp
mov
add
sbb
sub
push
mov
cld
push
add
adc
aad
stos
pusha
ljmp
and
cld
loop
add
sbb
pop
xchg
in
push
shrl
push
fdivrp
ljmp
add
daa
mov
xor
jbe
fldt
test
icebp
das
shrb
mov
add
jb
adc
cwtl
pushl
add
mov
push
jb
mov
inc
rolb
fldz
adc
sti
xchg
decl
pop
aad
push
dec
ljmp
ljmp
pop
cli
int
adc
clc
xchg
je
or
or
sub
lcall
adc
cmpsb
stc
push
push
adc
pop
xor
sbb
iret
xchg
insb
push
mov
cmp
adcb
xchg
adc
frstor
jp
not
jns
cmc
and
and
call
cmc
or
mov
push
clc
into
movb
cli
lcall
dec
mov
pop
cwtl
dec
dec
ja
pushf
push
inc
iret
and
cwtl
pushf
inc
and
or
mov
push
mov
fldpi
jp
ss
cmp
aaa
rcr
jg
dec
cli
out
jne
mov
fs
dec
hlt
xor
mov
mov
dec
jecxz
or
nop
inc
test
clc
or
lcall
dec
add
fcmovb
stos
cmc
sti
clc
push
cs
jae
push
test
jbe
and
mov
xchg
jb
iret
dec
adc
jmp
adc
fsubl
xchg
aam
rcll
scas
clc
add
ret
outsl
and
pop
insb
jno
fsubrs
cmc
decl
sarl
jb
ret
sub
add
mov
sub
pop
out
orb
rcl
dec
push
repz
ss
mov
hlt
pushaw
mov
dec
insb
das
xchg
ss
mov
popf
sar
out
fnstcw
mov
inc
mov
cmp
push
scas
adc
and
sub
mov
popf
xor
jle
mov
sbb
fiadds
daa
xchg
movsl
pop
mov
push
call
mov
mov
addr16
sub
sbb
pop
push
jno
mov
pop
das
mov
clc
dec
dec
and
ja
movsb
fwait
sbb
xchg
push
add
fildll
cld
dec
lret
int
mov
stc
xor
mov
inc
std
jmp
xchg
push
jbe
fs
repz
push
jns
mov
int3
and
jae
imul
push
add
push
jecxz
scas
pop
sub
mov
shrb
add
xor
adcb
sbb
jo
sub
adc
idivb
imul
lock
icebp
xchg
cmpsb
in
pop
sbb
ret
inc
cli
mov
dec
imulb
push
jmp
call
pusha
xchg
add
cwtl
mov
into
inc
loopne
pop
inc
cmp
xchg
and
mov
sub
ss
push
add
jns
ficomps
cmovno
popa
mov
or
and
adc
aad
bound
sbb
cmpsb
and
lahf
dec
push
ret
divb
outsb
test
add
ljmp
xor
sub
push
ret
in
add
iret
test
call
xchg
cmpsl
and
aam
jl
add
shrb
adc
stos
mov
fsts
pop
mov
pminsw
fnstenv
add
lds
in
outsl
cli
das
or
shlb
pop
mov
add
jp
lcall
ficoms
test
test
loope
mov
out
push
sub
sub
pop
add
push
stos
pop
insl
push
xchg
insl
in
insl
dec
pop
dec
test
aas
int
xchg
shrl
cmp
rclb
cmp
scas
loopne
je
adc
and
and
adc
int3
flds
add
shr
jno
push
decl
stos
gs
mov
jb
enter
lods
add
outsb
mov
ret
test
loope
cmpsb
out
pop
dec
das
dec
dec
and
adc
add
cld
fwait
mov
lahf
xchg
iret
cmp
mov
fistps
fstl
gs
xor
add
enter
adc
out
lods
lds
jp
pop
push
push
repz
aam
sti
and
out
cwtl
jbe
adc
xor
shlb
cld
jbe
lds
imulb
xorl
or
pop
rcll
aad
lods
jo
div
pop
sbb
mov
push
adc
add
outsl
or
push
in
ss
ret
sbb
fwait
in
xorl
loope
incl
sbb
outsb
jp
xchg
fdivrs
xchg
push
add
incl
and
sarl
lods
or
mov
ss
ljmp
jbe
sub
das
rorb
jo
subl
aam
test
sub
insb
aas
movsb
push
out
pop
orl
jne
inc
sub
stc
mov
mov
pop
pop
sub
mov
xor
inc
inc
mov
mov
fnsave
icebp
jle
push
jno
aaa
cmovne
jnp
adc
outsb
ja
sbb
in
dec
nop
nop
pop
jno
loope
and
inc
jns
mov
mov
sti
loopne
lret
addb
test
mov
mulb
mov
subl
dec
inc
testl
lcall
nop
push
shlb
je
push
pop
jl
mov
sub
adc
adc
push
lods
add
jo
jno
clc
rclb
addl
pop
ret
test
insl
xchg
mov
bound
jno
fwait
pop
imul
sti
pop
loopne
push
xorb
jnp
jmp
add
inc
imul
bound
bound
inc
adc
mov
push
push
aam
push
sbb
les
cld
xorl
mov
movsb
sbb
or
or
cmp
int3
xchg
pop
cmp
pop
xchg
loopne
scas
aad
pop
sbb
cmp
cltd
add
std
das
xorb
lock
pop
sbb
cmp
sub
adc
pop
mov
inc
cmp
movl
mov
or
adc
nop
addr16
jo
or
call
push
cmp
and
repnz
jg
inc
xor
mov
call
mov
popa
cli
incl
push
jb
mov
mov
jle
shrl
mov
pop
adc
xchg
mov
pusha
loop
aaa
jno
pop
jle
push
sti
mov
lods
repnz
movsl
loopne
pop
aam
mov
aam
add
call
jmp
stos
adc
mov
cmp
fucompp
push
cli
sarl
sbb
xor
ljmp
roll
jns
pop
leave
pop
and
shlb
sub
cmpsb
inc
cmp
dec
mov
data16
xchg
fbld
adc
js
pop
mov
push
jns
hlt
lods
mov
std
jg
pusha
sub
cmp
lret
es
jge
sub
push
ja
xor
inc
dec
add
iret
std
ja
clc
pop
fdivs
dec
dec
jp
inc
pop
cmpl
mov
or
or
xchg
shll
jp
push
into
push
cwtl
cmp
fdivp
inc
mov
adc
ficompl
decb
cli
rol
in
pop
sub
es
mov
or
arpl
pop
lock
and
xor
mov
fstl
mov
outsl
les
inc
and
sbb
sbb
jbe
or
das
adc
aaa
or
hlt
mov
dec
push
sub
pop
aad
mov
cltd
and
inc
gs
subl
mov
mov
pop
test
mov
and
outsl
call
cmp
push
mov
dec
test
dec
dec
push
add
pop
hlt
lahf
dec
cmp
cmp
rolb
lock
or
je
ja
push
xor
orb
loopne
mov
decl
aaa
sub
sbb
add
push
lods
jb
jg,pn
out
mov
dec
push
xchg
sbbl
nop
lods
leave
xchg
cmp
add
dec
mov
hlt
xorb
loopne
or
in
xor
js
fbstp
jns
jae
sub
mov
push
sahf
fidivs
fidivs
addr16
xor
push
std
sub
mov
mov
mov
xor
push
sbb
cld
jg
dec
mov
adc
ret
cmp
jne
push
mov
lcall
lock
cld
sbb
aaa
inc
push
or
cmpsb
or
and
pop
add
popa
jp
sti
adc
xchg
lea
push
jb
shrb
or
fisubl
pusha
pop
sbb
pusha
js
int3
adc
sub
int
incb
sahf
movsl
out
mov
setle
dec
call
add
sbb
jno
push
sub
push
jae
in
test
cld
push
mov
rcr
faddl
insl
dec
push
add
clc
or
cmp
jbe
aaa
lds
scas
push
and
xor
jbe
in
pushl
mov
sub
jecxz
xor
outsl
test
push
sub
pop
loop
push
shll
lock
call
outsl
stos
mov
xor
hlt
xchg
xor
and
jg
xchg
addl
cmpsb
mov
jp
jno
movsb
mov
into
outsl
xorl
jl
push
lds
adc
shr
int
out
push
pop
xor
ljmp
cmp
loop
inc
inc
pop
leave
or
xor
add
cmpsb
xchg
or
mov
and
add
xchg
ljmp
push
iret
sbb
icebp
mov
mov
or
dec
xchg
mov
fstpt
sub
and
sub
add
sub
pushl
push
call
jne
mov
inc
pushf
dec
push
mov
sub
mov
call
in
mov
add
nop
lahf
adc
xchg
mov
sub
rcll
ljmp
cli
pop
mov
add
sbb
lods
nop
push
popl
out
inc
es
out
jmp
pop
ret
adcb
adc
inc
je
arpl
call
push
jl
mov
sbbb
mov
mov
in
push
and
cmpsl
inc
or
xrelease
icebp
jle
loopne
stos
scas
mov
pop
mov
movsb
cmpsl
push
or
orb
mov
or
shlb
repnz
mov
xor
adc
das
rorb
mov
outsl
ret
add
pusha
aaa
mov
lret
cld
pop
decl
inc
adc
inc
mov
mov
jnp
lcall
push
pop
test
test
imul
jle
mov
fs
add
addb
lret
sub
arpl
adc
or
dec
sub
xlat
sub
dec
inc
incl
pop
push
std
test
mov
xchg
push
hlt
and
xchg
cld
js
pop
cld
or
repnz
lcall
aam
bound
fnstcw
fildll
movsb
test
dec
add
adc
stos
sub
lods
daa
sarb
loopne
mov
pop
cmpb
push
test
sbbb
sahf
fs
fwait
rcl
call
jmp
push
jge
ficompl
and
insl
mov
inc
sti
mov
andl
add
cmpsl
es
movsb
lret
cmp
ret
js
lahf
lret
imul
push
aam
xchg
xchg
dec
outsb
icebp
in
stos
mov
adc
xor
loop
push
std
sahf
testl
adc
jno
cld
push
cmp
aam
adc
cmp
fdivrs
sti
pop
lahf
out
mov
repz
xchg
mov
and
push
ja
and
loop
add
out
mov
mov
fmuls
pusha
dec
add
test
addl
push
xor
inc
sbb
and
add
and
xor
push
lods
ret
dec
cmp
test
mov
jb
xchg
sub
sub
add
mov
xor
or
cmp
inc
cmpb
in
mov
fdivs
in
es
pop
hlt
jno
insb
ret
call
xchg
lock
decl
jmp
mov
mov
mov
pop
add
jg
push
or
dec
push
or
mov
jne
push
adc
sahf
inc
sbb
fmuls
dec
pop
sub
int3
mov
ret
stos
dec
cmpsb
dec
pop
mov
mov
test
adc
std
jne
dec
les
jb
or
mov
jecxz
sub
les
bound
cld
faddl
fbld
inc
adc
or
mov
mov
push
mov
and
sub
mov
mov
fcompl
ret
loop
cmp
push
loope
fdivr
jne
xchg
mov
pushf
lret
mov
imulb
xchg
mov
jle
arpl
add
xor
inc
cmp
inc
add
mov
scas
or
imul
pushf
sbb
xchg
inc
mov
mov
aaa
adc
aaa
lcall
call
loopne
pop
ds
push
divl
mov
or
sub
popa
dec
mov
jb
icebp
mov
pop
cmpxchg
sahf
dec
push
or
sar
data16
adcb
leave
mov
xlat
repz
sub
jg
push
jmp
cmp
push
sbb
add
push
test
jge
mov
adc
clc
mov
sarl
cli
ljmp
pop
add
adc
xlat
or
xchg
push
lds
addl
pop
repnz
dec
sub
sbb
sub
sahf
mov
push
push
stos
jo
cld
or
or
xchg
daa
xor
movsb
ja
adc
mov
pusha
pop
cmp
push
adcl
add
mov
js
inc
lret
adc
rclb
repnz
sti
aam
push
add
or
mov
out
lods
imul
sbb
lods
mov
or
xchg
in
pop
test
adc
loop
int3
cmp
movsb
stos
test
jno
mov
jl
lods
pop
or
sub
add
idivl
clc
lea
idivb
stos
push
test
xor
aas
clc
jg
mov
cltd
xchg
stos
into
xchg
mov
sub
or
fcomip
jbe
mov
aam
jnp
mov
inc
push
inc
pop
andb
fimuls
cli
mov
lock
cmp
or
and
in
mov
test
or
and
mov
mov
mov
xchg
dec
xor
loopne,pn
sbb
jmp
push
push
test
or
jno
lcall
pop
nop
pop
aad
add
inc
sbb
cmp
inc
xchg
and
push
xlat
movsb
inc
adc
sbb
xchg
ds
cli
decl
jns
arpl
lret
sbb
lea
xchg
sbb
lea
jl
divb
loope
xchg
lds
pop
inc
mov
inc
popa
jle
add
pop
lock
jg
in
jns
add
aaa
push
xchg
je
repz
xchg
cmp
lcall
inc
mov
lods
jp
or
push
xchg
icebp
das
pop
lock
lcall
jbe
inc
push
xor
push
xorb
into
out
fisttpll
xor
das
mov
cmp
xchg
mov
hlt
mov
mov
inc
mov
clc
sbb
call
jne
and
mov
jle
aas
repnz
sub
dec
adc
mov
cmc
incl
int
fstpt
sub
rclb
lahf
dec
dec
incl
movsl
mov
xchg
mov
add
sbb
lock
add
mov
cs
and
mov
mov
lock
fcoms
jae
sbb
fimull
ficoml
stos
test
out
cli
in
add
push
pop
xor
enter
arpl
jecxz
roll
xchg
repz
mov
fnstenv
xchg
push
es
xor
add
jb
cld
add
add
aam
divb
fsubl
enter
sub
lahf
mov
int
pop
ficompl
adc
mov
not
dec
sub
push
cld
push
loopne
mov
sub
cld
mov
adc
in
in
mov
inc
or
sahf
lahf
xor
imull
scas
outsl
cli
push
int3
dec
inc
cmc
scas
in
add
nop
loop
fisubs
push
and
test
orb
push
add
rcll
pusha
mov
subl
mov
data16
or
mov
es
mov
fsin
xchg
xor
adc
ret
mov
clc
add
cld
pop
mov
call
cmp
push
loop
xor
mov
call
hlt
sub
rclb
add
xchg
add
cmpl
jecxz
dec
inc
mov
sti
test
ror
cmp
cmp
adc
leave
jae
jg
jge
fbld
xchg
popf
fiadds
push
sar
pushl
adc
loop
cltd
por
xor
add
xor
lahf
fs
adc
shll
push
or
std
xor
add
push
jns
stos
add
iret
mov
je
or
lods
push
push
pusha
hlt
mov
fwait
fs
cltd
mov
jnp
sbb
call
rolb
das
mov
orb
es
jae
lods
scas
iret
filds
in
fists
stos
adc
pop
inc
jmp
or
js
push
lret
cli
sahf
cmp
xor
sbb
adc
sbb
lds
aaa
addl
ja
jecxz
js
insb
rcr
pop
ja
mov
and
and
movsb
push
mov
aaa
add
add
xchg
push
xlat
nop
cli
jg
push
mov
lea
vpmovsdw
aam
pop
pop
ljmp
movsl
pop
clc
jg
or
mov
les
or
cmp
lahf
sub
pushf
mov
adc
or
call
and
jle
xchg
mov
push
mov
cmp
sti
xchg
add
clc
loopne
xchg
jle
push
out
mov
sbb
loope
shlb
sbb
adc
jb
xchg
and
rorl
add
mov
outsb
sub
adc
stos
xchg
mov
adc
or
ret
jecxz
mov
leave
push
test
xorb
sub
ds
pop
fucom
rolb
fidivrl
dec
add
or
inc
push
and
dec
jbe
mov
or
inc
push
inc
cmp
add
je
cmp
sub
mov
std
fisttps
push
adc
jp
mov
adc
mov
and
mov
scas
orb
loopne
xchg
mov
push
shr
repz
pop
test
lods
dec
push
mov
sbb
aaa
pop
lret
add
adc
mov
cmp
push
add
mov
fwait
mov
xor
sub
or
xorl
add
mov
xchg
shr
jg
mov
inc
or
xor
add
stos
sbb
inc
fsubrs
mov
movaps
pop
mov
dec
mov
ds
hlt
cmpsl
stos
ds
inc
incl
xor
mov
mov
xchg
mov
mov
lock
dec
daa
stc
iret
sub
les
rcrb
sti
lahf
add
pop
roll
adc
cltd
push
repz
pop
mov
inc
and
dec
cmp
call
hlt
push
mov
pop
pop
aas
shlb
repz
mov
mov
icebp
call
add
fildll
add
gs
fstpl
cmp
adc
mov
xchg
cmc
mov
sbb
xlat
fildll
inc
in
sub
or
cs
scas
push
jb
movb
inc
imul
outsl
add
pusha
push
and
jp
sbb
fimuls
or
insb
mov
test
mov
scas
cli
js
inc
mov
bound
inc
add
decl
pop
fsubrs
int
shll
xor
scas
push
rorl
les
inc
aam
or
cltd
jno
sbb
inc
loopne
ljmp
fadds
cmpsb
cmp
scas
je
clc
outsl
xchg
outsl
or
pop
enter
cmp
pop
dec
jnp
cmpb
dec
jecxz
xorb
jl
cmp
add
add
adc
rcrl
xchg
add
rcll
xchg
xor
bound
lret
scas
jmp
nop
xor
and
cwtl
mov
inc
sub
add
pushf
out
mov
rcl
cld
je
add
mov
out
lahf
mov
jge
cltd
jecxz
pop
faddl
or
jns
out
shl
sbb
mov
and
subb
add
fwait
add
ds
repnz
stos
mov
lods
adc
in
xor
mov
pop
jp
frstor
je
pop
adc
ds
ljmp
jl
push
in
std
mov
clc
fbstp
xor
push
aaa
inc
fsubs
sbb
mov
test
and
leave
pop
ljmp
and
push
ret
idivl
vmulps
push
clc
std
sub
hlt
cld
lcall
pushf
mov
je
add
test
and
push
scas
add
xchg
xchg
data16
hlt
std
outsl
lahf
addl
data16
sbbb
and
ljmp
jb
jp
or
std
inc
adc
ftst
int
push
mov
call
sbb
pop
push
sub
mov
fwait
in
push
mov
and
xorb
or
jg
aaa
bound
xor
bound
sarb
mov
cmp
lret
loopne
test
adc
xchg
mov
fs
cli
decl
insb
out
pop
aaa
dec
add
test
inc
inc
outsl
mov
add
out
sbb
and
cld
xor
mov
aas
sti
cltd
mov
je
pop
push
and
pop
inc
in
push
hlt
push
sub
incl
rcll
sub
jg
jl
mov
aaa
or
xor
icebp
pop
sub
xchg
ja
loopne
lock
cld
xchg
dec
adc
inc
push
arpl
pop
add
mov
repz
mov
gs
inc
inc
flds
adc
sti
addr16
lret
mov
insl
push
icebp
mov
pop
loop
xor
add
inc
push
lock
les
movl
loop
mov
cmpb
in
pop
add
test
movsl
cmpsb
idiv
roll
nop
jecxz
cmp
lock
jl,pt
push
shrl
pop
xchg
sub
sbb
cli
dec
jno
inc
mov
cli
or
dec
lods
ret
jle
jecxz
push
test
pop
mov
mov
sahf
inc
mov
xor
js
ret
mov
out
mov
pop
xchg
xchg
out
push
dec
add
push
push
sti
jg
scas
adc
sub
leave
mov
das
mov
fidivs
je
js
pop
lret
mov
loop
add
and
mov
verw
orb
add
mov
out
lret
xchg
aas
xor
pushl
mov
notb
inc
cs
dec
fidivrl
dec
push
bound
jo
cli
dec
jns
test
xor
mov
mov
cld
push
sub
outsl
push
pop
cld
pop
mov
loopne
or
rol
xor
loopne
or
es
jl
rolb
in
call
test
mov
lret
mov
add
xor
xlat
jbe
inc
pop
lea
loope
inc
daa
xor
call
in
adc
jle
jp
adc
push
shrb
jle
jg
push
lret
jbe
daa
inc
jno
rol
jmp
inc
or
pop
mov
push
add
jle
xchg
cs
ret
cmp
outsb
addb
mov
xor
incb
imul
adc
dec
xor
popf
dec
or
lahf
mov
pop
cmp
call
and
insl
fnstcw
jg
dec
add
andl
sbb
xchg
mov
mov
inc
sbb
les
je
test
xchg
xchg
inc
iret
loopne
lock
loop
fsubrs
cmc
push
call
mov
int3
jl
sbb
mov
insb
loopne,pn
xchg
mov
scas
rolb
fmuls
loope
mov
sub
out
cmp
clc
enter
sbb
cld
sar
mov
mov
iret
sahf
sarl
jmp
ficomps
and
stos
sbb
xor
mov
gs
sbb
negb
call
cli
jmp
cli
push
aam
sti
lahf
adc
aaa
mov
pop
mov
xor
inc
cwtl
test
cld
in
jg
jle
outsl
jl
arpl
shrb
mov
or
clc
pop
test
rorb
xor
mov
scas
adc
jb
pop
and
adc
arpl
std
loop
addl
mov
pop
inc
mov
mov
test
int3
inc
cwtl
outsb
push
pop
mov
bound
loopne
push
lods
xchg
cmp
adc
sbbb
movsb
xor
xor
faddl
xchg
loopne
add
ss
inc
imul
push
xor
packssdw
sub
inc
xor
pop
std
cmp
icebp
add
orb
fldt
in
mov
jl
cmp
loopne
push
xlat
ljmp
adc
or
adc
xor
orl
and
fstpt
dec
ljmp
and
xor
loop
mov
inc
sub
mov
loop
jmp
pop
push
insb
adc
xabort
sar
mov
cwtl
rcll
es
adc
adc
aas
clc
mov
cwtl
mov
enter
cmp
lock
mov
out
jb
jp
in
enter
and
insb
pop
or
mov
xor
xchg
lds
hlt
inc
scas
xor
clc
add
jmp
jne
out
sub
or
mov
inc
cmp
xchg
mov
orl
xchg
outsb
and
sbb
stos
scas
out
aam
fwait
and
cmp
push
or
fstpt
lret
cmp
int3
sarb
pop
add
pop
fdivl
mov
add
adc
cmp
lods
ljmp
pop
adc
mov
outsb
push
add
decl
je
lods
fwait
jp
jecxz
in
ds
decl
outsb
dec
movsb
push
xchg
xchg
fdivrs
and
pop
hlt
out
mov
or
push
jle
and
jne
cld
jmp
nop
cmc
ret
pop
or
and
daa
fcmovnb
data16
cmp
xor
rcrb
xchg
push
mov
jl
out
inc
mov
movsl
cmc
add
cmp
mov
imul
and
out
cli
jmp
stos
stos
push
scas
pop
lret
or
push
inc
mov
push
push
lahf
sub
xchg
sbbb
loopne
xchg
test
push
adc
mov
nop
push
add
mov
jle
jns
andb
or
aas
inc
pop
adc
or
lret
mov
xchg
xlat
insl
jo
rcll
xchg
pop
out
clc
sbb
mov
loopne
std
jae
enter
decl
xlat
inc
fcomi
push
cltd
or
lret
mov
es
add
xchg
jg
cmpsl
jbe
scas
dec
xchg
cmc
rorl
lock
and
hlt
shll
adc
xlat
aam
stc
jb
inc
sbb
sbb
mov
xor
andb
add
mov
loop
ljmp
jl
sub
pushf
in
add
jecxz
push
fcom
mov
lcall
jmp
icebp
ljmp
push
adc
lret
lock
inc
and
add
out
and
fimuls
fs
cmp
adc
fcmovb
lea
xchg
ds
add
jg
mov
imul
xor
and
dec
negl
dec
outsl
push
mov
sti
in
pop
int
rolb
and
inc
cs
mov
cmpsb
insb
and
stc
mov
push
and
add
mov
repz
ljmp
xchg
push
ss
pop
iret
loop
in
movsb
sbb
or
std
in
test
pop
orb
daa
cwtl
and
and
sahf
out
es
imul
rorb
push
ss
das
loop
jecxz
pop
mov
push
pop
fadds
mov
scas
addr16
cmp
call
cmc
sub
pop
xchg
fsubr
cmp
add
lods
jns
aad
dec
push
insb
pop
jbe
dec
pop
ds
pop
mov
adc
push
cmp
adc
push
lcall
leave
icebp
call
mov
pop
pop
pop
mov
mov
mov
ret
cli
fldt
add
repnz
int3
iret
clc
inc
add
loopne
push
mov
jecxz
xchg
ficompl
xchg
cwtl
outsb
ds
stos
sub
dec
andb
pop
pop
xor
ret
jle
mov
add
jno
mov
push
pop
pop
xchg
pop
xchg
mov
cmp
sub
lock
mov
pushf
dec
jge
push
aaa
lods
xchg
xor
push
mov
xchg
mov
sbbb
pop
and
jl
or
lret
adc
popl
decl
cmp
cld
enter
ljmp
shl
jbe
hlt
add
jl
clc
movb
dec
aaa
or
test
xchg
daa
mov
jl
loopne
rorl
push
loop
adcb
inc
push
clc
xor
mov
adc
sbb
add
aaa
les
inc
and
cld
pop
push
ds
push
mov
cld
fsubrs
mov
pushf
add
icebp
dec
lock
lock
mov
gs
pop
lods
xor
jmp
mov
mov
sub
pop
out
shrb
loopne
xchg
jle
push
mov
pop
dec
rol
lods
popf
inc
adc
rorb
push
ljmp
sub
jmp
add
jecxz
jg
lcall
sbb
mov
adc
cmp
roll
or
insb
cmp
xor
or
loopne
inc
xchg
or
out
mov
es
rcll
push
mov
or
xor
mov
and
dec
mov
mov
xor
jb,pt
cmp
sub
aaa
sub
cwtl
add
fisttps
gs
mov
addl
or
les
adc
dec
aas
in
xchg
jo
and
aam
mov
insb
sbb
test
scas
testb
sub
push
testb
mov
push
clc
loopne
es
mov
pop
ljmp
lods
loop
sbb
test
pop
cmp
or
int3
stos
cmp
xor
ss
call
out
and
mov
scas
push
pop
ds
xchg
add
int3
es
push
inc
bnd
mov
push
mov
dec
fadds
lods
sbb
fstpt
test
adc
test
adc
lods
aam
fbld
push
sbb
add
pushf
lock
add
mov
add
mov
cli
test
or
jle
test
sbb
hlt
or
icebp
frndint
int
idiv
xor
xchg
pop
sub
addl
cltd
ds
das
clc
pop
jo
inc
jb
or
sbbb
inc
std
mov
inc
dec
int3
mov
xor
or
adc
aam
mov
xor
push
sbb
or
add
andl
cs
subb
decb
divb
pop
pop
mov
insl
rcr
mov
cld
les
pop
mov
clc
pusha
loope
mov
add
daa
fnsave
cmpsb
sarl
incb
mov
fucomip
mov
xchg
xchg
push
add
adc
fdivrp
and
in
lcall
mov
jae
sub
loopne
subb
pop
movsl
adc
mov
lea
push
mov
stos
shr
ret
mov
sbb
jb
jle
push
mov
int3
sub
cmpb
addr16
inc
sub
in
xchg
cld
aas
xor
or
sub
jecxz
adc
test
cmp
fsubrl
add
inc
push
push
adc
dec
iret
xor
test
push
fmull
pop
fisubl
ljmp
xor
xchg
mov
pop
inc
pop
daa
mov
adc
cmp
cmc
xchg
or
mov
hlt
dec
push
stos
mov
mov
scas
or
mov
enter
mov
dec
cmc
sbb
je
cmp
add
pop
xchg
mov
ljmp
and
pop
sub
rol
in
xchg
movsl
jns
jne
mov
push
sarl
xchg
or
fistps
xor
jns
mov
xchg
clc
outsl
fidivrl
inc
cmc
jmp
push
lock
push
pop
mov
inc
inc
ret
test
test
push
jbe
cmpb
sahf
mov
sub
sbb
cmp
punpckldq
aaa
jecxz
lea
inc
sub
dec
xchg
jb
or
cld
lcall
jne
dec
push
mov
add
mov
cld
fsts
pushl
push
jge
and
inc
lahf
xor
pop
fwait
inc
add
pop
fnstsw
pop
jg
adc
push
lret
js
jecxz
adc
or
adc
and
jge
fs
ds
cld
jecxz
inc
xchg
call
je
or
cmpsb
clc
cmp
aam
push
fstl
std
and
sub
dec
xchg
sub
xor
lcall
push
dec
add
pop
jecxz
mov
in
xor
sbb
push
cmc
or
int3
nop
push
or
in
ljmp
fstps
lock
and
push
push
int
call
mov
in
xor
sub
fdivrs
sbb
or
std
decl
cmpsl
lret
adc
jg
xchg
cld
or
fwait
decb
jge
and
xchg
jns
mov
loop
sar
fistpll
and
cmp
pop
sub
sbb
aam
jecxz
popf
add
xor
push
adc
or
outsb
pop
mov
fstl
and
sub
stos
lock
sbb
cmp
leave
add
and
inc
movsl
dec
cs
movsb
adc
movsb
fmull
out
pusha
stc
sbb
xchg
outsb
and
inc
es
out
pushfw
leave
pop
dec
stos
scas
les
popa
cmp
add
sti
iret
add
pop
add
or
xchg
xchg
mov
cmc
pop
loopne
push
test
mov
xchg
jle
jl
lcall
dec
aaa
fmul
in
jle
xchg
inc
add
arpl
inc
sbb
stc
push
mov
add
sub
mov
inc
sub
adc
das
clc
mov
aas
and
scas
jecxz
ss
add
pushf
add
js
pop
std
incl
inc
leave
fistpll
cli
cmp
sbb
cmpl
push
xor
xchg
iret
mov
xchg
les
sbb
push
sbb
out
mov
mov
or
cmc
je
adc
xchg
lcall
mov
add
rolb
push
out
add
cmpsl
push
push
mov
add
lock
jp
int
xchg
xor
fwait
sbb
dec
jl
fstl
add
xlat
mov
cmp
adc
loop
mov
les
repz
and
incl
mov
lret
repz
icebp
sbb
scas
jmp
ret
fwait
or
ss
add
push
sar
test
xor
and
dec
mov
sub
jle
push
ljmp
scas
cmp
xlat
pop
outsb
cld
mov
in
mov
aad
add
aad
pushf
mov
faddl
insb
or
add
rcll
aam
xor
adc
das
jge
insb
mov
xor
mov
imul
push
pusha
adc
mov
adc
movsl
adc
adc
lods
scas
cmp
adc
push
xchg
stc
ja
daa
cwtl
mov
xchg
xchg
cmp
orb
push
and
js
icebp
push
ret
push
xor
loop
jl
cmp
mov
test
mov
sbb
add
sar
xor
gs
jle
push
loop
lock
insb
jecxz
test
test
ljmp
or
sbb
pusha
movsl
lds
xlat
es
and
iret
pop
jo
cli
and
rorb
or
jb
call
inc
or
xlat
mov
inc
sub
and
cmp
push
pop
sbb
cli
dec
dec
imul
cmp
test
mov
mov
dec
test
lcall
loopne
adc
mov
or
jle
jg
pusha
pop
es
outsb
push
mov
addb
and
xchg
loop
push
outsb
in
cltd
lds
nop
or
mov
icebp
lret
adc
lock
subb
out
ss
cwtl
lock
push
sbb
out
pusha
and
push
mov
ret
aad
and
call
inc
adc
ret
push
iret
sbb
mov
popa
addl
js
add
cmp
inc
cmc
xor
cmp
jno
pop
outsl
fsubl
shl
daa
shl
add
pop
pop
addr16
ror
pushf
sbb
shll
jle
clc
orl
xor
fiaddl
jae
mov
jmp
or
lcall
adc
inc
rclb
jb
in
jns
xor
sub
mov
push
out
inc
dec
xchg
mov
and
orl
push
imul
xor
cs
dec
mov
sub
fbld
jp
push
rcr
cli
fwait
shrb
out
icebp
pcmpeqd
xchg
or
sbb
sub
and
and
testl
aas
jmp
jnp
ljmp
xorb
lods
mov
stos
and
xchg
stc
in
cwtl
mov
jp
push
or
xchg
dec
pushf
movsb
adc
sbb
xor
mul
add
xchg
mov
sub
outsb
jp
xchg
sub
jl
pop
mov
call
pusha
jbe
sub
data16
cmpsb
mov
loope
dec
push
jecxz
mov
decl
mov
xchg
movsl
xor
orl
adc
in
pop
clc
inc
stos
imul
push
pop
fdiv
out
sub
cmc
das
mov
dec
or
adc
adc
loopne
or
adc
fisubl
or
dec
mov
stos
mov
rcl
xbegin
mov
inc
dec
xor
add
adc
cmpsl
aaa
pop
movsb
sub
es
jne
adc
test
pop
inc
les
xchg
clc
xchg
add
mov
adc
cmp
cli
push
loope
loope
jecxz
adc
jp
test
js
add
inc
and
lea
sub
and
into
cmp
js
lret
insb
push
pop
jo
leave
sbb
in
inc
in
dec
rolb
fwait
and
xchg
push
pop
adc
lods
ret
loope
xor
repnz
iret
loopne
mov
stos
pop
das
clc
and
test
jb
mov
das
faddl
cmpsb
jl
adc
cmp
pop
jno
cmpsb
sub
aas
inc
mov
inc
test
sub
clc
jne
jbe
mov
je
jl
fwait
dec
lock
push
mov
and
cmp
xchg
in
js
test
pushf
pop
xchg
call
xor
mov
xchg
shrl
stos
lcall
clc
xchg
je
imulb
push
mov
mov
adc
push
orl
pop
lods
add
jbe
jnp
sub
push
xchg
add
cld
push
in
pusha
stc
cli
dec
and
pop
mov
or
jmp
rcl
fstps
push
dec
in
pusha
clc
in
stc
add
test
sbb
jge
in
lahf
adc
adc
sub
sar
mov
dec
xor
fisttps
icebp
or
or
int3
and
cmp
jmp
cmpxchg
decl
push
arpl
daa
sbb
dec
sbb
mov
hlt
pop
mov
xchg
adc
sub
shlb
sub
sbb
xchg
mov
shrb
aaa
icebp
jbe
fwait
ret
xor
pop
push
add
ret
das
aam
and
rclb
add
cmp
clc
mov
xor
push
ret
outsl
push
loopne
pop
xor
mov
cwtl
xor
lahf
push
inc
fstpt
cmp
cld
call
xor
add
fucomi
js
ljmp
das
adc
imul
pop
jnp
mov
rolb
js
inc
and
mov
subb
push
in
es
xchg
lcall
pop
mov
inc
push
sbb
cmpsl
pop
mov
nop
into
adc
sub
add
ss
jle
push
lret
mov
dec
mov
je
add
and
data16
dec
sub
sahf
pop
enter
sti
cmc
inc
icebp
lcall
orb
jle
dec
clc
add
pop
dec
inc
push
sub
bound
imul
cld
fnsave
sti
mov
add
cs
pusha
mov
sbb
mov
arpl
lcall
push
jns
and
cld
and
scas
jp
outsb
cld
out
xchg
shl
adc
adc
sbb
pop
das
adc
xor
mov
or
movsl
sub
xor
insb
push
stc
lret
dec
or
ret
sbb
or
je
shr
fnstsw
jo
mov
nop
xchg
sbb
andb
incl
xchg
cli
dec
add
pop
leave
xor
pop
lods
mov
xor
sbbl
loopne
cmc
xor
xor
lret
addl
mov
test
pushl
push
test
insb
lret
dec
or
and
mov
loopne
sub
int3
loopne
es
xor
xchg
addb
xor
decl
nop
popa
mov
add
jb
pop
lds
in
aad
mov
lcall
into
sarl
inc
cmp
add
xor
inc
or
xchg
sbb
jg
lcall
push
cs
movsl
dec
out
pop
adc
mov
adcb
mull
addr16
and
jno
sbb
inc
aaa
pop
mov
mov
mov
push
add
test
popa
push
inc
mov
xchg
jae
cwtl
fsts
scas
call
scas
pop
xor
lods
push
mov
xor
push
inc
inc
das
cli
test
xchg
clc
int3
ljmp
or
incl
and
pop
sbb
out
sbb
xor
jle
pop
mov
cmc
ljmp
icebp
xorb
nop
jmp
lods
ret
in
push
pop
inc
push
mov
adc
pop
addb
cs
xorb
sbb
je
loope
loopne
clc
ljmp
loope
sbb
mov
sarl
aas
dec
bound
xorb
mov
push
adc
lock
jmp
add
mov
mov
leave
add
pop
sbb
inc
cmc
mov
mov
or
scas
xor
test
inc
lret
pop
or
pop
fsubs
cmp
out
push
xchg
enter
push
sahf
mov
out
add
jle
out
hlt
or
dec
jb
pop
add
lods
push
sahf
or
mov
aaa
std
incl
xor
add
and
sbb
inc
and
aas
imul
ret
adc
clc
sbb
popa
push
cltd
mov
jmp
pushf
fcmovbe
add
xchg
inc
movsb
or
into
push
cmp
or
sub
int
xchg
lret
pop
add
add
loope
push
hlt
cs
aam
sbb
das
jne
lcall
hlt
pop
adc
nop
movsb
jne
dec
push
add
fs
adc
lcall
xor
cmp
mov
out
ret
adc
dec
fadds
inc
and
add
sbb
aam
lahf
pop
dec
jmp
cltd
jb
mov
aam
jo
js
sahf
cli
or
mov
mov
test
jns
aam
sbb
loopne
jg
pop
cmc
loop
and
pop
jb
mov
jle
sub
dec
mov
adc
inc
jnp
data16
cs
es
dec
loop
xor
or
int3
xor
jnp
add
jo
mov
es
or
aam
lock
dec
pop
adc
test
clc
push
mov
fucomi
mov
clc
stc
test
sub
aad
int
lea
sahf
cmpsb
add
out
push
stos
movsb
jp
mov
pop
xchg
loop
scas
and
ljmp
mov
push
fadds
xor
mov
jl
aaa
fistps
outsl
dec
or
and
mov
lock
mov
jg
repnz
out
ljmp
mov
jmp
enter
cmp
or
push
or
adc
or
insl
es
cli
adcb
dec
repz
ja
aas
cmpl
loopne
addr16
adc
stos
cli
out
rclb
add
mov
xchg
or
jo
jo
out
call
inc
pop
sbb
xor
int3
push
in
and
push
fsubl
mov
mov
adc
add
mov
sub
jecxz
inc
imul
lcall
push
push
cmpsb
push
sarb
jl
and
cmpsb
enter
or
dec
sbb
ljmp
mov
mov
xchg
lea
sub
cmp
loop
jmp
aam
mov
jmp
or
stos
ret
std
pop
push
cmc
adc
or
leave
sar
pop
insb
inc
cmp
pop
cmc
fnstsw
pop
lods
pop
add
loop
add
or
and
in
jmp
adc
add
mov
add
dec
repz
insb
push
add
cld
loope
dec
jae
loope
pop
clc
testb
mov
rclb
clc
fnstsw
adc
push
sbb
and
or
or
cmpsb
adc
push
loop
adc
cmp
shrb
xchg
or
add
scas
mov
das
or
xor
xlat
pop
adc
push
inc
mov
add
cmpl
mov
into
ret
mov
in
inc
xlat
repz
mov
test
mov
negb
loope
ljmp
out
test
fwait
and
sub
pop
mov
idivl
int3
rorb
popa
scas
sbb
or
and
sub
adc
push
pop
ljmp
ss
add
lods
mov
or
or
in
cmp
adc
add
mov
les
xchg
ljmp
cltd
cltd
std
inc
xchg
mov
adc
aad
sub
push
mov
aad
adc
mov
pop
ficomps
adc
sub
add
dec
mov
mov
pop
mov
movl
hlt
adc
mov
loope
rcl
jecxz
jb
cmp
stos
dec
mov
lods
call
mov
add
jbe
sub
dec
or
cmp
push
mov
cmp
jns
push
dec
jbe
jp
jg
aas
xchg
jae
rcrb
dec
mov
and
dec
das
dec
add
cmpb
mov
mov
add
mov
sarb
test
ret
xor
sbb
add
pop
jb
imul
gs
dec
mov
jno
bnd
cld
mov
push
add
fidivs
push
int
dec
stos
add
js
mov
xchg
sbb
bound
mov
call
mov
push
in
clc
negb
adc
cwtl
cmp
leave
cmpb
imul
and
jp
jb
pop
cmpsb
outsb
add
pop
xchg
or
cmp
idivl
test
mov
cld
bound
mov
add
adc
out
aaa
adc
hlt
inc
cmp
es
xchg
jb
inc
cmp
add
xchg
and
fwait
cmc
lahf
aad
dec
out
mov
pop
fwait
mov
stc
push
fisubl
cmp
sahf
aas
rorl
daa
push
jo
ud0
inc
jo
sub
jge
mov
in
fstps
and
icebp
stos
mov
xor
call
pushf
ljmp
out
rcrl
repnz
xchg
lcall
sbb
fs
test
int3
insb
arpl
popf
sbb
or
and
jo
sub
sbb
repz
mov
data16
popf
roll
jmp
inc
les
test
sub
push
test
push
enter
and
cmp
push
cltd
sbb
mov
sbb
add
pushl
push
inc
xchg
dec
cltd
dec
lcall
cld
fsubl
xor
add
inc
cmp
inc
mov
or
in
clc
fists
pop
out
daa
jns
fidivl
test
setge
out
add
and
or
ljmp
repz
sub
scas
adc
add
jecxz
jl
fbstp
movsb
cmpsb
inc
pop
adc
add
in
mov
les
cmp
or
enter
pushl
mov
sbb
sub
inc
loop
pop
cmc
orb
stos
and
xchg
xor
subb
stos
mov
test
mov
pop
jae
push
xchg
adc
and
mov
dec
pop
insb
shlb
in
loope
hlt
jle
das
mov
mov
fmul
test
repz
gs
aas
fdivl
rorb
nop
mov
inc
pushf
out
pushf
or
mov
jmp
aam
orl
mov
pop
dec
loope
daa
sarb
jg
lock
sbb
cmp
mov
loopne
mov
inc
pop
out
add
pop
loop
ret
mov
mov
hlt
subb
xchg
shl
ja
pop
adc
orb
int3
pop
aas
add
outsl
clc
add
call
bound
mov
out
add
ror
sub
jg
push
sbb
les
adc
pop
loope
pop
ja
rolb
adc
cmc
or
loopne
mov
jmp
loop
pop
and
test
imul
nop
dec
or
rcll
call
je
js,pt
lea
xchg
out
sahf
add
pop
or
mov
pop
xor
lea
or
cltd
dec
mov
pusha
sub
pop
cld
addr16
dec
pop
sbb
jae
adc
adc
sub
jbe
pop
mov
fsubrl
out
fdiv
jge
jecxz
mov
je
adc
lret
push
test
loop
std
jmp
mov
or
stc
mov
lods
sbb
lret
loop
xchg
pop
add
mov
push
es
dec
ret
or
xor
push
pop
popa
or
or
jge
lods
mov
ljmp
outsl
out
mov
cwtl
add
jl
jo
sbb
ret
rorb
popa
shr
mov
popf
sub
jp
enter
aam
test
pop
cmp
jge
jo
jl
fnsave
pop
js
xlat
xchg
inc
js
icebp
cmp
mov
repz
and
out
add
push
inc
call
addr16
mov
sub
mov
icebp
stc
ret
pop
les
test
out
dec
aam
and
sub
mov
hlt
xchg
cmpsb
add
lea
pop
mov
jle
sti
add
xchg
push
cmpsl
fdivs
sbb
xor
push
pop
adc
and
add
sub
xor
jle
test
daa
sahf
mov
lock
lock
addr16
xchg
add
dec
pop
sahf
jge
xchg
jae
test
ja
pop
push
mov
loop
ss
sbb
lods
jl
sti
jnp
push
je
dec
cmp
lods
fwait
hlt
adc
mov
sub
fst
aam
int3
aad
aaa
cwtl
insb
movsb
and
repnz
cmp
scas
cmp
sbb
push
cld
sar
sbb
ret
ret
out
jbe
pop
call
push
fdivr
movsl
jle
and
ret
push
clc
outsb
cmpsb
outsb
add
mov
pusha
inc
lods
ret
stos
aad
dec
cld
add
mov
rcl
jle
and
sti
jbe
ffreep
xlat
mov
pop
push
rcrl
divl
add
mov
push
jle
aad
subl
loop
jmp
out
jne
add
lret
in
add
jmp
pop
rcrb
push
push
mov
rorl
or
imul
push
cmp
pop
in
or
repnz
adc
cmc
scas
popa
mov
outsb
dec
arpl
scas
jb
cli
jle
mov
lcall
cli
inc
xlat
and
cmp
das
mov
enter
cmpsb
repz
pop
add
add
mov
lret
adc
pop
inc
jns
sub
jle
mov
or
decl
or
xchg
jl
or
add
xor
imul
add
stos
int
hlt
stos
sbb
mov
mov
dec
decb
lahf
mov
add
fmul
add
sbb
xor
sbb
std
jecxz
inc
and
cltd
rorl
cmp
jecxz
add
je
mov
ljmp
test
call
scas
jae
jmp
push
ja
xor
add
push
sti
bound
and
ljmp
in
test
lds
scas
js
js
inc
mov
loopne
inc
push
jle
jbe
cltd
push
decl
outsb
rcrl
dec
mov
mov
jo
add
sahf
push
inc
cmpsb
cmpsb
movsb
mov
push
lcall
js
inc
je
scas
shrb
xor
mov
xor
push
sbb
sbb
loopne
mov
push
ljmp
fstps
xchg
pushf
mov
clc
incl
push
jge
xor
test
hlt
xor
mov
lea
mov
scas
cli
push
sahf
cs
aas
pusha
push
add
mov
cld
call
fisttpl
sub
xchg
scas
cli
mov
push
xchg
xor
add
mov
test
cmp
in
testb
add
pop
adc
mov
lock
lock
sbb
jg
scas
mov
inc
std
ja
incl
mov
pusha
pop
adc
add
ss
lds
jecxz
mov
mov
adc
iret
out
clc
in
push
out
fs
and
les
cmp
lea
sbb
scas
fiaddl
pop
test
adc
loope
js
inc
mov
clc
mov
fsubrs
int3
popf
aas
adc
inc
ljmp
sbb
or
or
push
lcall
faddl
test
jl
ret
pop
xor
jmp
adc
mov
push
add
je
test
pop
mov
es
inc
inc
cmp
shl
imul
mov
inc
addl
pop
adc
push
jo
stos
loop
push
pop
and
scas
cli
ret
sub
sbb
and
jg
lods
fidivl
pop
daa
dec
pop
push
sub
test
xor
mov
jmp
sub
xor
sahf
dec
push
push
sub
add
cmp
in
loopne
or
or
cmpsl
jecxz
dec
jp
add
loope
cld
jg
mov
sbb
push
xor
rol
rcrb
jbe
add
arpl
inc
or
mov
movb
jp
insb
sbb
pop
push
add
jg
mov
in
jg
push
in
push
and
mov
ss
pushl
sbb
mov
repnz
mov
flds
mov
incb
adc
pusha
xchg
incl
mov
fcomps
ret
adc
dec
xor
xchg
aad
lahf
xor
push
push
mov
sub
fsubrl
xor
sub
mov
clc
idiv
sub
sub
jbe
popa
ret
fadds
into
add
dec
decl
pop
out
mov
cmp
adc
and
push
lahf
jp
adc
mov
shrl
fcomps
or
jp
dec
push
mov
jo
clc
dec
in
fmuls
cmpsb
fs
pop
sbb
jl
decb
xchg
push
sub
push
dec
lods
cmpsb
aas
insl
mov
sbb
dec
adc
dec
jnp
in
mov
inc
outsb
and
fdivrs
add
sub
test
push
sub
mov
cmpsb
and
and
jle
sub
gs
jmp
mov
inc
adc
sti
imul
xchg
test
or
cs
mov
fbld
mov
pop
adc
or
repnz
and
add
cltd
and
pusha
test
andl
push
ret
loop
push
leave
mov
test
cwtl
push
outsb
xor
push
sarb
std
push
dec
js
pop
mov
add
jp
inc
popf
push
loopne
dec
push
cld
jg
mov
rolb
push
or
cmpsl
fwait
les
sub
mov
ljmp
add
out
mov
testl
mov
adc
pop
and
clc
sbb
pop
stos
outsl
shlb
test
imul
aad
dec
pushf
sub
out
and
xor
push
dec
dec
xchg
or
mov
int3
mov
iret
shr
sahf
aam
cmp
jmp
stos
out
mov
jl
mov
cli
jo
por
rolb
or
or
call
cmp
das
fnstcw
movsb
arpl
mov
cwtl
lods
add
and
dec
adc
popa
sar
mov
xchg
lds
push
lods
cmp
pop
fs
cmp
cmc
jmp
cmp
xor
cli
loopne
jl
je
mov
pop
loopne
sbb
xchg
mov
mov
cmp
jl
jb
loopne
mov
dec
lock
int
pop
out
sbb
imul
sub
test
hlt
dec
and
pop
scas
and
jbe
imulb
sub
cld
mov
xor
mov
jmp
mov
jb
lcall
clc
ja
mov
adc
lahf
call
sti
cwtl
add
mov
cld
adc
push
jecxz
movsb
jae
mov
dec
adc
ret
push
cmp
jbe
dec
push
add
fsubs
call
cli
push
rorb
lret
test
sub
xor
cld
inc
pop
pop
push
inc
orb
cmpsb
pop
xchg
subl
fidivrs
xchg
mov
shlb
add
mov
movb
cmp
jg
out
push
loop
xadd
push
ljmp
cmp
andl
xor
je
sbb
add
mov
or
sub
out
es
jae
outsl
fisttps
mov
sbb
and
cvtps2pd
jg
xchg
or
sub
add
add
jg
sbb
in
imul
clc
mov
inc
sub
dec
lret
and
xor
jp
rclb
ds
iret
xchg
mov
lea
sub
adc
dec
and
andl
shlb
mov
into
xor
mov
outsb
jg
jb
sahf
push
push
test
test
incb
cwtl
sahf
mov
jbe
add
decl
cmpsl
fisttpl
fsubs
sub
addb
fists
cmc
inc
in
or
dec
lock
mov
dec
pop
push
mov
cmp
pushf
sub
sub
mov
or
shlb
shll
xchg
xor
ljmp
es
pop
loop
je
adc
pop
test
arpl
les
roll
push
push
add
pop
jecxz
xchg
sub
jmp
inc
mov
push
jb
cltd
clc
jbe
jmp
push
int3
mov
gs
sbb
inc
add
test
mov
outsl
xchg
sub
into
ret
sub
mov
lock
or
jg
push
xor
dec
sahf
scas
push
fisttps
sbb
insl
jns
inc
mov
cli
mov
fs
adc
in
mov
loope
insb
mov
xor
cmp
sbb
xchg
imulb
adc
and
sbb
mov
jp
test
sbb
sbb
mov
and
mov
pop
xchg
mov
loope
fdiv
dec
adc
mov
or
and
pop
mov
bound
push
adc
sbb
ret
and
mov
jg
lret
add
and
add
add
sti
jmp
mov
sti
add
pop
xchg
rcll
cld
and
int3
loop
stc
pop
xor
pusha
adc
movsb
sub
xor
ja
movsl
fsts
lds
mov
adc
dec
add
pop
data16
mov
insb
and
jg
sbb
push
sub
or
daa
daa
pop
into
lea
push
dec
insb
iret
push
push
mov
pop
and
fisttpll
fdivrl
lock
sbb
ss
mov
jle
push
cmpsb
xchg
or
jns
cmp
lock
mov
lods
fistpll
sbb
lret
mov
or
push
inc
out
mov
movsb
jnp
dec
push
pop
lret
add
enter
sbb
push
or
aaa
sarl
and
sub
pop
lock
daa
lods
call
push
dec
popa
push
sbb
push
fiaddl
lret
sbb
xchg
outsw
negl
inc
sub
jnp
or
call
ja
repnz
dec
jns
test
lret
sarl
adc
lods
cmp
mov
movsb
iret
jo
push
jno
sbbl
jl
cmp
mov
mov
inc
repz
je
int
or
xor
xchg
jbe
mov
sub
cld
scas
xor
insb
decl
adc
push
je
dec
push
cld
pop
or
shlb
add
and
lock
or
loop
mov
fcomps
add
mov
shlb
push
movsb
scas
jb
in
mov
push
pusha
mov
sar
roll
push
or
sbb
inc
or
jmp
ret
fnstsw
adc
jb
jmp
leave
add
mov
sbb
cli
nop
es
xchg
scas
inc
inc
xor
scas
cmp
cmp
push
out
jbe
hlt
scas
clc
pushl
rclb
pop
push
and
mov
popa
pop
xchg
lcall
cli
and
lods
mov
pop
push
lods
pushf
push
ljmp
mov
icebp
pop
test
pop
pop
incl
jo
cmp
das
ror
mov
jmp
shll
out
incl
pop
je
pop
hlt
jmp
fs
jg
jmp
adc
dec
int
pushf
lea
mov
fdivrl
jbe
in
stos
push
sub
fisttpl
jecxz
inc
out
cmp
push
lock
dec
xchg
inc
mov
shlb
mov
sub
add
shr
dec
popf
popl
movsb
cmp
cmp
jo
inc
fs
xchg
in
dec
imul
xor
outsb
cmp
adc
ja
cmp
push
aaa
stos
and
sub
cmp
enter
lock
pop
sbb
or
xor
stos
insl
push
mov
mov
xchg
xor
adc
out
jge
xchg
dec
jg
je
dec
add
push
sub
mov
mov
aaa
inc
shr
rorl
outsl
sbb
xchg
pop
pushf
mov
mov
ljmp
pusha
or
dec
test
ret
add
and
push
loope
add
rolb
clc
pop
sub
ds
fildll
mov
pop
dec
lret
loopne
cmp
lcall
xchg
mov
sbb
lock
clc
addl
ficoms
aad
mov
in
or
pop
sub
scas
mov
dec
or
aaa
adc
test
pusha
mov
mov
mov
xorb
sbb
jmp
pop
push
mov
adc
ds
push
and
push
call
jg
inc
xor
and
shl
push
adc
pop
pusha
mov
movsb
sub
cmp
mov
push
mov
pop
cmp
and
and
or
xchg
pop
decl
push
cld
out
movb
lock
outsl
bound
add
fbstp
mov
das
inc
inc
add
add
push
pop
pushf
adc
inc
cmp
mov
roll
shl
sahf
push
pop
lock
jecxz
movl
adc
pop
addb
mov
inc
rorl
mov
ret
pop
and
jl
ret
out
mov
popa
stc
mov
sbb
or
push
xchg
or
mov
loope
mov
xor
lret
xor
out
cmp
xor
js
loopne
mov
jl
popf
sub
ljmp
cld
xchg
jae
dec
repz
nop
and
mov
jb
cli
imulb
jae
add
mov
pop
rcll
xor
js
scas
or
jo
scas
loopne
movb
cltd
jge
decb
xor
rcrl
mov
je
add
pop
ljmp
or
lock
loopne
mov
xor
inc
dec
insl
fcomip
decl
lahf
mov
mov
xchg
es
ret
cmp
or
xor
cmp
jbe
sub
out
ds
outsb
add
pusha
scas
and
inc
lds
jle
pop
mov
insb
sbb
std
mov
jnp
fnsave
test
out
add
adc
andb
call
inc
lea
sahf
push
sub
pushl
cltd
or
sbb
inc
jge
dec
xchg
jp
push
mov
loopne
cmpsb
das
mov
in
shll
mov
inc
cld
or
rcl
xor
mov
mov
ficompl
inc
mov
pusha
js
push
cmp
cmp
and
jno
mov
outsb
lods
push
mov
or
jecxz
inc
push
pop
nop
mov
push
scas
clc
pop
jl
ficomps
lcall
or
mov
mov
in
jmp
rcrb
adc
adc
sub
inc
push
mov
repz
mov
sbb
wrmsr
jb
xor
repnz
pushl
jmp
adc
lret
pushf
or
loope
adc
mov
ficoml
add
ljmp
mov
gs
fisttpll
call
add
movsl
mov
cmp
pop
sbb
and
decl
pop
and
repnz
pop
sub
addb
imulb
or
or
xchg
mov
outsl
cli
ljmp
or
cld
mov
add
add
mov
adc
mov
mov
push
and
nop
mov
cltd
or
sahf
leave
shl
or
ljmp
pop
push
inc
bound
rol
cmc
xor
adc
popa
sub
mov
mov
cmpxchg
out
add
dec
decl
jl
cmp
aad
add
push
adc
sbbb
dec
int3
mov
lock
rcrl
or
js
jns
out
scas
xor
jnp
mov
lcall
idivl
xchg
mov
fstpl
jae
aaa
in
mov
mov
in
enter
clc
push
test
fmulp
fidivrl
xchg
or
sub
out
out
out
pop
add
fstps
stos
dec
push
aad
ljmp
add
je
movb
and
jae
mov
jae
xlat
data16
test
enter
pop
call
leave
lds
lods
mov
or
mov
push
pusha
mov
out
mov
roll
cs
jle
mov
nop
or
add
add
loop
dec
movsl
pushf
dec
cmp
jg
mov
xor
loopne
rcrl
and
jmp
adc
les
data16
and
sub
push
adc
xchg
gs
add
xchg
pop
mov
pop
adc
inc
shrl
sub
xlat
or
adc
add
push
or
out
lods
mov
lcall
add
cwtl
mov
ficoml
mov
in
push
sub
pushl
fstp
inc
push
add
push
pop
dec
cmp
cmp
add
lea
xchg
push
jno
fwait
cmpsb
movsl
cmc
incl
sbb
aad
shlb
sbb
and
cmp
jg
jbe
cmp
adc
xorl
es
mov
shlb
inc
fisubl
in
pop
xor
shl
mov
dec
add
push
pop
call
faddl
xlat
cmp
test
loope
mov
pusha
xchg
call
fmuls
lahf
jo
jle
sbb
inc
mov
sbb
cltd
jp
mov
inc
xor
xor
inc
fchs
xchg
test
sahf
scas
sahf
adc
sbb
pop
add
pop
xor
and
lods
ficoms
add
xchg
mov
shrb
mov
sub
xchg
mov
int
add
ds
push
cmp
dec
idiv
fildll
lods
mov
loope
sarb
mov
ljmp
decl
mov
fs
push
mov
push
xor
call
movsl
fwait
inc
ret
add
mov
push
mov
stos
jno
sub
arpl
dec
adc
mov
pop
sarw
inc
pop
jmp
fnstenv
rorb
sar
cltd
mov
or
insl
pop
jecxz
loope
inc
lret
out
gs
xorb
sbb
jno
les
mov
jbe
pop
test
adc
jecxz
pusha
and
sbb
inc
and
jb
dec
cmpsl
push
mov
adc
popa
shll
sti
aaa
clc
clc
jl
sub
or
or
leave
and
in
mov
jle
lods
jg
leave
dec
lcall
cwtl
sbb
jae
adc
ja
mov
outsb
iret
xchg
lods
adc
pop
add
dec
mov
sbb
stos
movsl
sbb
mov
notb
sbb
sbb
dec
pop
stos
sub
in
pop
xlat
mov
mov
outsl
les
sub
jle
jnp
fdivrl
jle
fiaddl
adc
lods
and
or
sbbb
push
lret
js
mov
push
.byte
idiv
lcall
popf
add
and
cs
sti
out
and
jnp
or
inc
pop
pop
pop
ret
mov
ss
and
pop
pop
add
adc
and
pop
pop
ret
mov
cmp
and
leave
ret
ja
decl
pop
pop
leave
ret
pop
or
xor
dec
and
scas
mov
test
or
adc
test
in
lahf
idiv
adc
add
test
adc
or
adc
mov
sbb
imul
inc
push
mov
inc
dec
and
and
jb
pop
xchg
and
lea
lods
mov
movsb
inc
jae
and
adc
dec
and
inc
into
lcall
sbb
sbb
adc
sti
cltd
subb
adc
adc
hlt
adc
stc
adc
xor
xchg
and
xor
jo,pn
xor
inc
inc
adc
xchg
or
inc
adc
es
push
fldenv
push
push
fiaddl
inc
shrl
xor
pop
or
bound
add
sbb
inc
jo
fdivrl
adc
push
inc
mov
nop
cltd
mov
test
lret
or
mov
rol
or
sub
xor
test
scas
inc
lahf
inc
mov
push
cwtl
scas
push
push
in
add
jmp
mov
and
and
and
adc
add
inc
nop
and
mov
and
add
test
adc
in
dec
cli
adcb
dec
sbb
andb
and
jg
repz
inc
addb
test
inc
and
andb
inc
and
outsl
dec
adc
and
adc
sahf
orb
and
test
adc
insl
imul
retw
inc
adc
adc
push
test
leave
movsb
negb
fiaddl
call
push
adc
adc
mov
out
mov
dec
adc
add
nop
inc
loopne
and
test
adc
inc
neg
lods
jnp
mov
ds
and
and
js
cmp
push
add
and
in
xchg
loopne
mov
pop
and
push
int
faddl
mov
fwait
or
dec
ss
rcr
test
adc
mov
inc
adc
test
int3
pusha
add
dec
mov
mov
sbb
inc
mov
lods
xor
and
inc
push
imul
or
stos
test
cltd
mov
es
inc
push
subb
sbb
jbe
dec
and
add
inc
adc
in
cltd
or
jae
and
xor
ret
cs
mov
jle
and
or
movsl
pop
or
push
adcb
out
cli
and
adc
adc
cwtl
add
popa
cmpsb
fnstenv
sub
adc
sub
push
jbe
pop
xor
mov
jbe
add
inc
inc
and
dec
rorl
adc
nop
mov
adc
pop
sub
les
add
mov
popa
and
or
inc
and
push
lret
jae
mov
jle
cwtl
mov
mov
ret
xchg
adc
xor
ret
and
xchg
pop
or
adc
pop
test
orl
int3
and
or
xchg
dec
push
or
add
add
inc
lds
or
mov
xor
adc
pushf
data16
into
add
call
shl
cmpsb
xchg
push
dec
ficoml
jo
and
movsb
mov
lods
pop
or
or
je
shlb
mov
xor
insb
movsb
cmp
cltd
push
pop
adc
nop
add
adc
ret
or
cmp
sbb
aam
dec
inc
pop
cs
pop
fcomps
push
fmul
or
sub
mov
push
out
adc
xor
xor
xor
add
jb
bound
add
pusha
push
pushfw
pusha
lods
pop
adc
dec
int
sbb
or
lods
nop
xor
jbe
cmp
adc
cmp
xor
jl
and
int3
push
fcomps
pop
push
in
enter
lcall
pop
or
jo
cld
push
pop
movsl
in
int3
mov
inc
xor
push
fs
mov
data16
pop
mov
leave
lcall
push
push
in
popa
xor
push
mov
and
fimuls
movsb
in
mov
add
testb
popa
pop
cs
outsb
and
ret
inc
add
push
and
inc
adc
sbb
jp
push
data16
mov
pusha
or
sbb
outsb
mov
or
pop
jnp
imul
cmp
pop
push
xchg
pop
fsts
and
mov
lods
push
push
test
or
mov
cmpsb
xchg
pop
or
stos
xchg
imulb
xor
into
dec
adc
push
dec
clc
inc
add
popa
xorb
xor
cmp
jbe,pt
xchg
inc
loopne
mov
mov
mov
icebp
or
inc
jl
and
cmp
inc
bound
cmpb
sbb
ss
adc
sbb
lock
push
call
pushf
sub
push
sub
jnp
mov
or
imul
xor
fcompl
or
lock
and
xor
xchg
sub
aam
and
int3
or
addl
jp
bound
add
push
sub
lock
test
adc
mov
cmp
insb
jp
jl
nop
push
or
cltd
sbb
sbb
js
loop
cmc
icebp
popa
inc
push
inc
mov
test
es
cmp
dec
push
push
jbe
or
sub
sbb
fsubrl
xor
pusha
sub
in
jo
xchg
bound
lods
mov
cmp
jb
jae
lods
add
movsb
lods
jl
dec
cltd
cltd
dec
add
jb
sarl
or
and
loop
in
mov
popf
fisubrl
inc
rclb
push
push
sbbl
test
dec
mov
orb
nop
bound
ficompl
cltd
cltd
rorb
add
sub
or
cmpsl
lock
sbbl
pop
cltd
cmp
mov
inc
push
adc
adc
ds
sub
movsb
cmp
inc
popa
push
push
into
test
pop
push
cmpsl
add
sarb
test
push
int
int3
andb
pop
add
ret
test
enter
cmp
ret
sub
mov
mov
les
xchg
andl
nop
hlt
and
popa
add
mov
inc
push
pop
ret
adcl
aad
push
or
loopne
mov
addb
addb
inc
int3
into
or
xchg
and
dec
xor
jp
lods
cmpsb
adc
push
sbb
jno
inc
xchg
mov
cld
orb
scas
jl
out
hlt
js
add
adc
bound
jl
inc
je
movsb
andb
es
push
xchg
xor
fnstenv
adc
push
dec
popa
cmpsl
add
jl
fimull
ret
sbb
lcall
pop
sbb
mov
test
adc
add
sbb
dec
mov
inc
inc
stc
mov
js
or
pushf
cmp
test
cwtl
pusha
jb
push
adc
into
nop
mov
es
cmp
call
cwtl
add
xor
cwtl
push
outsb
cmp
lcall
mov
adc
loopne
mov
jo
shlb
xor
shlb
pushf
add
and
rorb
xchg
es
xor
add
xor
lods
cwtl
adc
add
cmp
add
and
hlt
dec
out
cltd
pusha
subb
jbe
js
les
add
cmp
sarb
and
out
pusha
divps
adcb
push
shlb
push
outsb
and
xor
sarb
aad
xlat
dec
and
push
xor
cwtl
cmp
and
or
lods
push
mov
push
fmulp
cmpsl
or
dec
inc
or
add
out
lods
addl
and
mov
inc
int3
lcall
add
mov
or
cmpb
cmp
inc
js
test
fimuls
in
jo
js
cmpb
test
addr16
jo
xor
sbb
add
sub
mov
mov
mov
pop
xchg
lods
and
in
sbb
add
and
xchg
shlb
fs
stos
pop
dec
cmp
rolb
or
pop
xor
inc
adc
push
jmp
add
or
xchg
jb
add
sbb
cmp
hlt
xchg
mov
or
push
adcb
int3
mov
mov
sbb
repnz
decb
adcb
in
fcmovb
imul
add
bound
fs
or
and
icebp
push
sub
mov
push
inc
mov
push
sahf
in
mov
or
mov
push
pop
mov
push
xchg
cwtl
in
rclb
and
pop
or
and
pop
lods
and
dec
sbb
insb
shrb
and
push
pushf
int3
add
bound
das
jmp
inc
loopne
xor
sub
inc
add
lahf
dec
in
and
addb
mov
adc
pushf
data16
loopne
or
jp
adc
sbb
cmp
xor
or
xor
push
sub
or
es
fiadds
or
or
sub
jb
adc
or
adc
loope
and
xor
rol
lods
loope
fisubs
cld
mov
sbbb
mov
pop
or
test
es
cmp
adc
les
mov
loopne
out
inc
loopne
nop
jb
cmp
and
xor
in
mov
sahf
aam
ret
jbe
inc
addb
call
mov
in
or
or
dec
lret
push
mov
fcompl
pushf
dec
mov
out
mov
and
dec
jbe
and
adc
stos
push
cmpsl
test
or
orb
sub
loopne
xor
xor
mov
add
sbb
dec
and
es
push
or
gs
adc
add
pop
mov
test
dec
lea
or
pop
sahf
add
mov
outsl
adc
jl
xor
adc
mul
loop
pop
ret
shlb
sbbb
repz
test
movsl
std
lcall
add
movl
mov
and
push
jno
not
mov
mov
mov
sbb
mov
out
iret
fisubrs
inc
mov
pop
sub
mov
mov
jb
push
cwtl
push
addr16
mov
push
jge
xrelease
je
add
shrb
adc
out
fidivs
jl
into
cmp
pop
enter
shll
insl
aad
mov
mov
inc
neg
not
mov
cs
fldenv
aam
inc
add
out
aam
into
dec
fistpl
stos
adc
mov
mov
mov
daa
mov
cmp
pop
xor
cmp
addr16
btr
sub
push
mov
jge
inc
adc
mov
aam
sbb
test
inc
fidivrl
fstp
cltd
push
shlb
pop
sbb
xorl
mov
adc
ret
fiaddl
sbb
sub
xlat
adc
inc
or
ret
inc
mov
lock
enter
dec
mov
loope
sbb
add
enter
enter
mov
or
shr
fistps
andl
fiadds
sti
rcrb
int
dec
push
cld
outsb
adc
xchg
pop
ret
dec
fsubrl
outsb
shrl
nop
cld
neg
std
test
sbb
filds
loopne
stos
movb
int3
mov
inc
or
mov
mov
mov
cmp
jb
gs
out
pusha
mov
repnz
mov
loop
adc
add
xor
xor
aam
add
out
xor
sub
dec
cs
arpl
jle
or
or
pop
lea
push
push
push
call
jnp
adc
lea
outsl
addr16
dec
aam
rclb
mov
sarb
lock
fcoms
stc
stos
adc
addr16
cmpsb
and
pop
sarl
fiaddl
inc
add
ret
pop
mov
xor
dec
in
xor
divl
lods
dec
pop
test
rcrl
or
sub
adc
lods
sub
pop
add
pop
cmp
fiadds
lock
adc
jg
jmp
pop
scas
in
or
or
adc
sarl
icebp
jmp
mov
jne
inc
dec
sbb
mov
lcall
add
and
jp
clc
cwtl
mov
sbb
push
and
loopne
jecxz
addb
mov
pop
and
add
repz
fbstp
sti
int3
ss
ret
sbb
dec
aam
in
jnp
neg
hlt
lock
jle
inc
add
pop
hlt
add
addl
lock
js
jge
push
hlt
adc
test
adc
cmp
insw
xor
adc
push
inc
out
cmc
ret
lock
cltd
mov
sbb
pop
or
fimuls
lock
cltd
mov
jecxz
mov
lcall
sti
out
adc
cli
add
inc
in
and
push
loopne
aam
jmp
cmp
fidivrs
adc
jne
sub
lods
dec
mov
jns
pusha
mov
pop
pop
and
hlt
or
mov
adc
add
jmp
cmp
sti
push
jae
sub
lock
add
jmp
sbb
push
mov
sbb
dec
hlt
add
mov
xor
call
aaa
cmp
add
or
imul
out
rcrl
fisttpl
adc
lock
fbstp
dec
loopne
jmp
decb
loopne
pop
mov
xlat
lock
fs
add
rol
lret
xlat
call
or
cmpsl
xor
insb
push
jb
dec
push
mov
xchg
shl
insb
add
jge
xor
fisubrs
scas
ret
sti
jo
dec
jb
in
xchg
mov
xchg
sub
add
rcrl
sbb
loopne
xor
cmpsl
mov
sbb
loopne
mov
dec
aaa
pop
std
jle
add
pushf
shll
push
test
pop
mov
hlt
arpl
mov
fcoml
adc
push
inc
push
pop
punpckhbw
fiaddl
mov
in
inc
nop
mov
divb
mov
cmp
push
push
push
scas
dec
inc
jg,pt
mov
mov
adc
shrb
adc
fcmovnu
insl
orl
and
fmull
addr16
xor
jb
pushl
push
enter
xor
inc
jmp
cmp
add
outsl
push
xor
push
mov
and
mov
jle
adc
ret
add
cli
jb
imul
push
cmp
repz
cmp
mov
addr16
cmpsb
pop
adc
push
or
dec
add
int3
movsl
jne
ja
in
outsb
stos
inc
aas
adc
adc
xor
mov
sbb
jns
iret
mov
mov
pusha
ficoml
es
push
sbb
jno
jg
sbb
sbb
mov
jo
xor
lock
shrb
loopne
imul
inc
sub
inc
mov
sbb
and
or
repz
sbb
adc
inc
jle
add
aad
inc
mov
ds
mov
ret
ret
in
push
xor
loope
loope
inc
cmpsl
mov
jnp
nop
negb
pop
pop
mov
in
repz
jo
fadds
jno
or
mov
mov
sub
mov
cs
dec
and
cmpl
mov
sti
pop
pop
cli
roll
mov
and
push
icebp
in
loop
or
aas
scas
loope
pop
cwtl
adc
mov
cmp
ret
mov
icebp
ja
ljmp
das
fbstp
dec
adc
lret
xchg
cmp
or
jmp
jmp
mov
sbbb
add
inc
inc
mov
sti
push
or
je
iret
sub
add
lods
or
mov
dec
enter
rcll
pop
and
sub
scas
mov
mov
or
bndstx
mov
mov
popl
cs
outsl
movsl
sub
popa
pop
adc
ss
inc
push
arpl
add
cmp
and
adc
aaa
sbb
add
inc
sub
add
cmp
addl
mov
push
mov
jbe
aaa
ljmp
cld
xor
push
daa
sub
aaa
icebp
testl
add
and
sub
call
pop
fiadds
sub
add
nopl
dec
out
push
sub
in
add
sub
mov
jl
out
adc
jo
pop
pusha
mov
loopne
in
insl
lret
ret
and
cs
push
mov
sbb
cld
mov
adc
mov
scas
jne
dec
jg
fs
cwtl
adc
push
and
jne
jo
pop
dec
pop
cmpsb
mov
xor
sbb
sub
hlt
add
cs
mov
outsb
mov
or
cmp
loopne
or
and
clc
xchg
or
push
icebp
sub
loope
js
out
fcomi
fidivrs
inc
jp,pt
mov
mov
or
mov
data16
pop
mov
xor
adc
jmp
insb
icebp
pushf
sbb
sbb
out
clc
les
dec
nop
xlat
add
adc
lods
sub
hlt
sbb
jo
es
das
clc
adcb
rclb
xor
loopne
lock
ret
pop
mov
insb
testl
mov
pop
clc
sub
adc
rol
sbbl
xchg
or
addb
call
lahf
loopne
mov
dec
call
mov
clc
sbb
and
mov
xlat
popa
cmp
push
sub
adc
pop
popl
lock
jb
rolb
mov
sub
lock
sub
shr
sahf
push
out
dec
test
jne
xor
rorl
dec
add
xor
clc
lret
in
xchg
inc
or
adc
lock
fadd
mov
bndstx
rcrb
mov
pop
and
in
and
ja
sub
jns
mov
xor
xlat
dec
sub
add
inc
fdivp
jbe
cmp
popa
and
jg
test
and
inc
add
hlt
and
scas
insb
push
push
xor
movsb
add
ja
icebp
add
rolb
shrb
sti
lock
xor
dec
or
adcb
scas
stos
dec
sub
sbb
lcall
loop
sbb
es
xor
popa
shlb
sub
dec
mov
icebp
xor
scas
mov
xchg
and
out
jno
lahf
pop
icebp
add
lea
mov
sub
insl
and
aaa
pop
sbb
push
std
fwait
xor
mov
es
push
jo
pop
pop
lret
mov
add
lcall
dec
in
int3
cmc
shll
stc
cmpsb
leave
ret
les
cmpl
fdiv
jg
not
neg
dec
and
call
das
js
imul
das
cwtl
or
adc
add
push
pushf
popa
test
mov
mov
xor
lahf
inc
push
dec
adc
cltd
mov
mov
sub
mov
sub
test
in
fsubs
inc
frndint
mov
clc
sub
or
addl
adc
adc
outsb
test
adc
pusha
hlt
fidivs
cs
xchg
sub
push
pop
sub
pop
jl
and
cmp
mov
mov
pop
inc
push
jns
inc
sub
push
out
adc
ds
out
or
xchg
call
add
or
mov
test
sbbb
mov
out
int
ja
adc
sbb
lret
cmp
mov
mov
mov
dec
iret
das
add
push
adc
adc
sub
or
cmc
push
scas
cmp
jae
cmp
addl
nop
add
or
jg
and
repnz
out
mov
jo
pop
xor
movsb
dec
inc
ss
stos
jge
and
push
arpl
pop
lret
push
ja
jl
stos
and
inc
or
cli
loop
test
nop
push
out
mov
jne
bound
rcll
push
rorb
mov
dec
sub
test
faddp
or
inc
pop
rcrl
lret
mov
sarb
fmull
add
adc
pop
cli
out
sbb
jp
cli
addb
mov
ljmp
movsl
xor
test
mov
aaa
mov
pop
dec
add
xor
imul
cmpb
jo
popf
sub
movsl
cmp
jo
idivb
fwait
jo
inc
adc
sahf
add
loop
add
fs
mov
jno
mov
outsl
rclb
cs
pop
mov
xor
pop
cwtl
sub
dec
cmp
add
xor
cmp
inc
dec
jl
adc
xchg
pop
in
push
flds
push
mov
stos
aaa
dec
mov
pop
dec
pushf
or
cli
sbb
adc
mov
dec
mov
test
repz
das
sbb
jmp
repnz
in
js
jl
sbb
pusha
mov
mov
loope
jnp
add
lods
dec
adc
add
sbbl
jne
cld
jb
adc
mov
test
sbb
and
add
adc
dec
cmp
or
popa
scas
shlb
add
jmp
rclb
fdivrp
jne
push
lea
jl
fdivl
push
aam
in
call
sbb
inc
ret
mov
js
test
sub
fcomps
jp
leave
popf
in
xlat
inc
fidivs
jo
lock
jo
adc
rcpps
push
sbb
or
and
push
jnp
stos
dec
stos
fidivs
jae
insb
clc
jle
add
in
je
out
jmp
inc
sbb
ljmp
pushl
ret
pop
xor
dec
jmp
dec
ficomps
adc
push
jge
add
std
movsb
dec
in
mov
dec
sub
fcmovb
sub
add
sbb
cmp
rorb
inc
or
psubusw
outsl
faddl
xchg
addr16
clc
mov
cmp
iret
not
cld
ret
bound
mov
xchg
mov
mov
sub
daa
jbe
call
movsb
int
out
add
addr16
xorl
fstp
push
daa
adc
mov
data16
lret
cs
movsl
cmp
jge
cmp
push
imul
jg
xor
jle
ret
popf
fwait
xchg
cmp
inc
ficomps
sbb
mov
adc
adc
aad
mov
pop
out
mov
jbe
add
movsl
adc
enter
adc
dec
das
mov
add
cltd
mov
xchg
push
dec
bound
pop
sbb
es
jne
loope
lahf
add
adc
dec
pop
loope
jo
pushl
sub
add
sub
jge
jnp
scas
cmp
or
add
pop
add
mov
ja
xorl
xor
shrb
xor
cmc
in
xchg
inc
add
es
cmp
outsl
daa
fdiv
dec
or
loop
sub
and
ljmp
add
je
inc
or
shll
add
jne
in
es
test
mov
cld
xchg
loope
sub
mov
xchg
in
lock
rcr
xbegin
arpl
jne
rcrl
aam
pop
aam
dec
mov
add
add
jge
adcb
mov
sarb
pop
add
lret
add
scas
vmovmskps
dec
push
int3
fstp
mov
ret
es
int3
mov
cmp
cmp
add
dec
mov
out
fdivrs
enter
jge
mov
pusha
mov
cld
ret
ss
mul
scas
inc
adc
into
mov
lret
mull
shl
add
adc
enter
pop
popf
push
or
loope
sbb
daa
ret
xchg
sub
xor
jnp
test
adc
push
dec
clc
es
loope
je
ljmp
sub
scas
push
test
mov
iret
pusha
loopne
mov
adc
or
in
push
sbb
mov
mov
adc
mov
aam
pop
push
push
rcr
dec
mov
lock
jmp
xor
sysenter
mov
cwtl
popa
jo
inc
jne
test
cmp
push
adc
out
jo
pop
dec
rolb
sub
mov
mov
add
movsb
shl
jo
test
sub
cmp
mov
ret
push
add
fmull
cmp
add
rcr
adc
or
or
adc
push
in
rol
in
sub
adc
pop
sar
mov
cmpsl
cmc
push
outsl
push
and
sbbl
and
fs
test
sbb
push
add
sbb
or
adc
outsl
xor
fdivrs
and
adcb
rcll
sub
cld
xchg
ja
xchg
fmull
call
cmc
xchg
xchg
xchg
aad
inc
scas
mov
mov
rolb
add
and
lds
rcrb
xor
lea
mov
push
ja
mov
call
bound
xor
fldl
das
test
mov
filds
push
mov
adc
push
hlt
fcomp
cmp
push
hlt
jo
cli
loop
mov
dec
add
mov
push
xabort
inc
xchg
dec
test
jle
lret
xchg
add
or
fcoms
mov
sbb
les
and
pusha
add
adc
jp
outsl
jg
sub
loope
mov
xor
push
sub
fisttpll
fcompl
jl
push
adc
testl
fimull
mov
loopne
push
mov
in
ljmp
pop
scas
add
xor
jg
fldz
ret
orb
popf
sti
loopne
and
and
push
lss
enter
xchg
push
loopne
push
loop
in
les
into
mov
lock
sbb
sbb
aad
mov
insl
inc
inc
adc
and
ja
mov
mov
addr16
add
lock
pushf
jmp
pop
xchg
sbb
cmpsl
sbb
pop
mov
xlat
and
adc
and
pop
and
fstps
push
xor
inc
xchg
mov
js
add
dec
dec
enter
push
add
adcl
push
and
push
mov
in
in
cli
push
inc
cmp
xor
inc
dec
pop
iret
pop
mov
popa
shll
lock
mov
jo
repnz
mov
push
push
or
or
lods
enter
jp
mov
jo
fsts
adc
roll
add
enter
or
push
sub
xchg
fadd
and
testb
mov
cld
and
dec
sbb
and
sub
mov
adc
pushf
add
rcl
jecxz
inc
jbe
jg
xor
inc
enter
xchg
and
sahf
rcl
cltd
enter
xor
push
test
clc
dec
stc
pop
sub
or
out
add
or
jno
adc
loopne
in
filds
push
ret
testb
js
pop
sbb
call
sbb
fists
adc
pop
int3
lods
dec
fidivrl
xlat
ljmp
xlat
mov
out
and
int
loopne
add
mov
in
dec
in
adc
fisubs
mov
xor
adcl
jbe
cmpl
hlt
push
push
lea
push
push
call
outsl
mov
push
scas
loop
jb
imul
push
mov
xchg
or
lsl
sbb
orl
cmpsb
outsb
xor
mov
mov
filds
or
jmp
mov
cmp
add
push
call
inc
in
int
push
fcoml
je
out
in
flds
adc
xor
xor
addl
shll
lret
les
cmp
cltd
jmp
scas
int
mov
adc
sbb
push
aam
testb
mov
or
lock
mov
shlb
loope
sysexit
or
loopne
xchg
test
sub
inc
sbb
aas
imul
cs
cmp
in
scas
cld
arpl
or
xchg
adc
rcrb
iret
add
add
or
dec
and
lahf
xlat
add
icebp
jne
add
loop
btr
cmpl
cld
xor
cld
xor
dec
xor
loopne
push
pop
daa
mov
sub
cld
stc
shr
push
mov
lret
xor
sbb
cmpsl
jbe
push
jns
mov
scas
inc
sub
cmp
je
movsl
mov
mov
rolb
push
mov
inc
repz
scas
push
imul
add
hlt
loope
lock
push
fmuls
cli
repz
jmp
sahf
idivl
inc
dec
and
ja
xchg
test
xlat
mov
adc
dec
test
faddl
jae
sub
lds
imul
mov
push
adc
nop
movsb
adc
jl
ret
jmp
and
add
stos
and
fnop
inc
out
sub
xchg
push
inc
sub
lds
test
add
xor
lds
enter
loop
shl
push
push
gs
aas
orb
in
and
arpl
test
add
mov
cld
sbb
sbb
push
push
or
call
add
scas
xor
xchg
pop
fs
das
or
dec
xchg
xchg
clc
xchg
push
pop
mov
push
push
add
pop
dec
add
jo
aaa
loopne
push
out
jno
mov
fisttpl
aaa
loop
mov
mov
xor
les
cmpsb
aas
fcomps
roll
dec
rcr
mov
add
mov
mov
jnp
sub
jo
push
sbb
xchg
or
or
push
inc
inc
fcmovnb
cmp
popa
sub
lods
jge
cmpsl
add
mull
fcompl
adc
imul
pop
or
mov
push
stos
sub
jl
pusha
jbe
jbe
push
and
or
inc
rol
push
cmp
outsl
and
inc
mov
or
pop
ljmp
lods
lock
inc
stos
xchg
pop
or
pop
or
movsb
sbbb
clc
in
adc
sbb
sub
sbb
addr16
dec
mov
or
mov
sub
xchg
das
sti
nop
enter
daa
sbb
jle
cmp
loopne
cli
daa
adc
enter
push
repnz
aad
jge
aad
jae
test
mov
es
push
and
dec
inc
out
loopne
add
jmp
in
fistps
jle
or
mov
cmp
jbe
cwtl
loopne
sbb
inc
adc
add
sti
jp
mov
fmul
test
xor
mov
in
call
adc
mov
inc
dec
mov
icebp
cltd
add
jo
arpl
cmp
pop
adc
imul
notl
test
lret
and
mov
incl
stc
add
rolb
add
ljmp
mov
icebp
jge
mov
jg
clc
add
adc
call
test
adc
pop
mov
pop
sbb
adc
pop
inc
mov
repnz
arpl
cmpl
inc
inc
mov
addl
inc
cld
movsb
hlt
cmp
mov
mov
or
sbb
sbb
cld
sub
or
imul
sub
std
inc
mov
or
mov
inc
popf
mov
sahf
push
add
add
das
testb
or
pop
push
das
xor
ljmp
jg
xor
rorb
popa
fbstp
jo
sbb
jbe
push
sub
or
dec
push
cld
fsts
popa
fisubrs
repz
fadd
sbb
inc
inc
pop
jg
out
gs
mov
dec
jne
loop
xor
cld
int
scas
push
sub
loope
mov
pop
icebp
add
rolb
sub
test
sub
fsubrl
sbb
daa
xchg
push
jecxz
ss
add
mov
jnp
inc
dec
sbb
aam
or
adc
subb
std
dec
outsl
fadds
add
add
das
outsb
or
dec
addl
lds
dec
in
dec
enter
and
fisubs
sbb
lret
push
mov
sub
cltd
lock
fldenv
mov
sbb
and
mov
js
mov
lret
and
outsb
out
std
or
xchg
jae
cmp
ds
addl
int3
push
add
mov
bndstx
xchg
mov
stos
xor
int3
shlb
and
sub
xchg
adc
dec
addb
add
aaa
repnz
adc
inc
cld
lods
popa
loopne
mov
out
test
mov
and
mov
icebp
enter
or
push
mov
sub
mov
cmp
push
adc
inc
js
push
add
cmp
insl
jbe
add
and
lea
ds
sbb
out
sbb
incl
inc
jno
xor
push
lea
scas
cs
cmp
jbe
adc
in
cmp
je
and
cmp
adc
icebp
shlb
add
sbb
xor
clc
adc
test
sbb
pop
cmp
shrl
scas
or
mov
jg
notb
sub
mov
and
adc
mov
outsb
outsb
dec
and
push
push
mov
repz
das
idivb
lret
cld
lcall
inc
xchg
mov
push
jbe
push
ss
or
add
xor
sub
sbb
in
test
fidivl
pop
mov
sub
cs
repnz
sbb
jbe
add
loopne
add
ljmp
leave
div
fwait
pop
fsts
push
test
imul
lret
sbb
mov
jne
xchg
idivl
push
pop
or
mov
add
and
shl
dec
sbb
lcall
and
fnstenv
xor
roll
sub
and
jo
xorl
testb
xor
call
xchg
mov
xchg
xchg
jno
and
cmp
or
test
inc
dec
repnz
ljmp
lods
mov
push
ret
or
adc
add
dec
jg
shlb
xchg
addr16
pop
ret
jmp
sbb
inc
les
push
mov
loope
cmp
adc
ss
mov
cmp
sub
std
lahf
sub
jno
sahf
std
imull
cmpsl
sub
xor
and
ds
adc
outsl
push
adc
adc
and
and
inc
sbb
xor
out
loop
mov
sbb
repnz
adcl
js
daa
popl
je
pop
dec
dec
fldt
mov
mov
rorb
pop
ret
push
mov
inc
xor
nop
loopne
daa
pop
or
popa
ret
mov
shll
xchg
repnz
dec
jp
outsl
dec
in
ds
inc
dec
add
add
and
add
or
test
sbb
loope
fmull
fidivs
inc
or
sbb
dec
cmpsb
lahf
stos
xchg
stos
mov
or
mov
pop
mov
sbb
and
enter
push
jae
fisttps
jmp
lahf
inc
outsb
sbbl
outsb
or
faddl
das
xor
test
and
or
dec
pop
roll
cmp
mov
xchg
jmp
adc
je
cmp
add
out
shll
icebp
sbb
and
cmp
ret
or
adc
pushf
or
clc
in
pusha
push
or
cmp
andl
pop
ret
adc
cld
loop,pt
pop
js
fcoms
rcr
jecxz
jp
xor
xor
or
mov
lock
jae
ja
dec
ss
shlb
std
mov
outsl
lods
fistpl
add
xor
xor
push
loopne
ret
aas
dec
and
cs
mov
pop
repz
pusha
or
add
mov
neg
pop
shll
jmp
insb
sbb
lret
filds
push
sub
jmp
jo
mov
dec
adc
divb
icebp
xchg
pop
xlat
test
sbb
and
jnp
jge
pusha
push
xchg
loope
outsb
movsl
cwtl
enter
pop
adc
adc
sbb
push
xor
mov
pop
addr16
cmc
xchg
pop
mov
loopne
xor
pop
sub
das
jne
xchg
fyl2x
in
testl
mov
add
loop
jae
sbb
in
sub
push
iret
mov
loopne
sarl
add
push
cld
sarl
mov
fwait
mov
in
push
add
ja
in
sub
ret
pop
movsl
dec
dec
nop
adc
or
in
incb
incl
pop
and
push
push
jne
sub
clc
push
xor
jl
cmpsl
cmp
sub
ret
pop
dec
inc
cmp
test
ss
push
clc
cmovs
and
in
and
xchg
icebp
xor
out
mov
inc
mov
nop
xchg
add
cmp
cli
movl
mov
mov
xchg
lds
xor
and
sbb
adc
sahf
rolb
mov
lcall
das
call
scas
loop
jle
jecxz
cmp
adc
xor
sti
ret
and
fistl
sbb
sub
addb
cld
dec
xor
sbb
jmp
adc
shll
inc
test
adc
cld
lret
add
and
addb
xchg
mov
sub
stos
filds
xor
aam
sbb
inc
or
jnp
inc
movl
xor
es
push
outsb
ret
cwtl
jb
push
xor
sub
inc
dec
in
aam
push
or
xor
dec
adc
pop
dec
jo
or
loopne
dec
sbb
lock
fistps
inc
jno
add
or
and
dec
loopne
or
or
fsubr
sar
jne
inc
adc
faddl
sub
dec
lret
jne
int3
sbb
lods
cld
cmc
out
mov
aam
mov
xchg
cmp
mov
mov
inc
xchg
cmp
and
or
cmp
inc
stc
push
or
lea
push
or
movb
adc
pusha
and
mov
scas
fisubrl
xchg
sub
push
mov
push
inc
call
dec
daa
sbb
dec
push
mov
sbb
jno
daa
loope
xchg
dec
xor
insb
sbb
add
mov
add
sahf
pusha
jno
add
lret
add
jns
cmp
ljmp
mov
cs
sbbb
jle,pt
xor
xchg
call
add
mov
shlb
cwtl
jns
xchg
adc
das
sbb
sub
sub
or
test
dec
cmp
roll
inc
sub
and
mov
sub
je
inc
andb
inc
mov
ret
fs
rcrb
sbb
cld
or
in
and
fwait
sub
inc
addr16
adc
jne
or
adc
xchg
sbb
jmp
stos
mov
mov
lock
dec
pusha
mov
repz
adc
dec
jo
pop
fcmovu
xor
inc
pop
adc
adc
bound
loop
loope
adc
adc
sbb
fists
inc
test
in
add
sbb
loop
cmp
inc
and
fsub
push
push
sbb
bound
pop
mov
dec
and
sub
xchg
push
sti
lahf
mov
repnz
rclb
xchg
fistpll
rorb
in
adc
outsb
lock
sahf
outsb
inc
inc
testb
das
insl
fidivrs
pop
pop
and
sub
out
sarb
pusha
gs
jge
pop
cmpsl
mov
sti
add
mov
stos
xchg
xchg
mov
push
andl
dec
xlat
add
mov
dec
pop
in
and
pop
clc
jo
iret
jo
xor
fldl
enter
out
movsb
sti
inc
les
in
stos
push
addr16
cmpb
scas
add
or
sbb
sub
bound
xorb
inc
popa
insb
clc
and
loopne
push
clc
xchg
js
mov
ljmp
sbb
jp
pop
fdiv
fwait
pop
jecxz
sub
jle
mov
xor
add
mov
sub
add
data16
rolb
cmp
mov
cmp
je
xchg
sbb
jl
das
mov
cmp
mov
je
lret
addl
popa
in
cmp
dec
inc
std
loop
fxch
push
ds
aas
mov
ret
xor
in
add
cmc
jne
add
or
testb
push
mov
inc
inc
stos
test
aaa
js
sbb
cmp
and
pop
mov
add
out
jmp
jne
dec
jo
rcrb
xor
mov
clc
add
inc
pop
sbb
scas
and
inc
ljmp
or
mov
test
movsl
dec
push
or
ret
xor
cmp
lahf
clc
mov
les
inc
idivb
enter
mov
cmp
and
jg
mov
test
rcrb
ss
outsl
or
lock
pop
xor
xor
addb
in
mov
shrl
inc
repnz
lock
and
mov
dec
add
clc
and
jb
stos
sub
rcll
add
icebp
lods
test
mov
dec
sbb
and
inc
ret
mov
pop
sub
movb
fisubrl
jae
lret
sbb
mov
ljmp
lret
add
dec
push
pop
mov
cltd
pop
aad
adc
sbb
pop
adc
mov
dec
ljmp
xchg
jp
xor
test
jecxz
sahf
xchg
xor
rolb
sub
cmpsb
xor
sbb
dec
or
or
pop
add
jnp
test
ja
lods
notb
xor
add
cmpsb
pop
sbb
add
pop
popf
sahf
or
add
ret
pop
in
push
loope
pop
sbb
roll
js
inc
out
inc
das
mov
adc
lcall
and
call
adc
test
bound
mov
std
rolb
mov
mov
xchg
pop
cmp
and
repnz
fmul
iret
adc
jle
ss
ror
push
jl
add
adcb
sar
mov
cmp
lahf
mov
jmp
movsl
cmp
jbe
xchg
loop
aaa
mov
subl
fnstenv
add
push
xchg
loopne
insb
inc
outsl
mov
test
jae
push
jb
and
cmpsl
leave
add
les
cmc
xor
cmpl
jmp
xor
xchg
or
les
or
out
fimuls
cmp
add
cmpsl
idivl
outsl
mov
jmp
xchg
stos
sub
pop
mov
sbb
mov
sbb
jnp
sysexit
ret
mov
fisubl
mov
or
fwait
psrlw
sub
cld
in
ret
les
jecxz
movsb
ret
add
add
adc
push
inc
mov
adc
rcrb
and
loope
movsb
push
clc
mov
mov
nop
xor
add
add
add
js
jns
jle
jmp
dec
stos
sub
roll
dec
pop
test
jnp
push
repz
fimull
cmp
jl
test
lock
cli
enter
sbb
out
stos
subl
out
mov
cmp
int3
les
push
sub
mov
and
sbb
or
popa
pop
push
and
lds
loop
aam
or
add
in
cmp
jbe
jae
or
push
test
dec
sbbl
inc
sarl
sbb
fcoml
mov
shl
push
or
inc
fwait
loop
sbb
jmp
sbb
js
pushf
dec
inc
xchg
lods
test
add
scas
inc
test
add
sub
andb
mov
sti
je
or
xor
push
push
hlt
or
pusha
bnd
mov
mov
lods
lea
mov
rep
negl
jnp
sarl
outsb
aad
mov
push
add
call
and
add
lods
enter
outsl
mov
push
dec
out
loop
add
mov
clc
js
out
jl
sub
add
ds
inc
inc
gs
inc
ret
das
js
adc
mov
jnp
xchg
xor
ljmp
ret
push
sub
std
inc
pop
pop
mov
mov
or
add
jmp
cmc
test
pop
push
or
add
pop
xor
cmp
rcll
lcall
xor
rclb
ret
jb
adc
ljmp
or
inc
clc
cmp
fisttpl
outsb
push
rcrl
movsb
jp
popf
or
sarl
push
pop
mov
inc
mov
cmp
add
mov
adc
outsl
shrb
or
inc
cs
clc
add
cmpsl
or
sbbl
push
add
insb
addb
mov
lock
rorb
jbe
cmpl
sbb
pusha
adc
fidivs
sahf
dec
or
dec
jp
loop
or
stos
pop
in
int
ss
ja
addr16
sub
xchg
pop
lea
lock
testl
mov
push
sub
jo
daa
pushf
inc
outsb
and
add
cld
ret
addl
mov
mov
mov
jae
repnz
in
inc
push
cmpsb
fimull
inc
mov
addl
mov
adc
dec
xor
mov
loopne
mov
cmp
insl
sbb
call
loope
pop
shr
addr16
sbb
pusha
add
bound
hlt
mov
or
dec
sub
jbe
int
fcomps
jbe
js
dec
nop
inc
sub
sbb
or
fstpl
bound
jge
cli
jg
add
adc
pop
and
test
lret
insl
and
cld
neg
and
call
jne
das
pusha
inc
movsb
add
stc
insl
adc
push
mov
add
rol
sbb
into
loope
rolb
jbe
outsl
sub
ret
add
ret
icebp
sbb
xorl
xor
jle
shll
jno
scas
push
out
adc
stos
jmp
mov
and
mov
cmpsl
ja
xor
jmp
movsb
popf
aas
movsb
ret
xchg
ficomps
and
shlb
data16
dec
lea
pop
icebp
stc
jo
pusha
and
in
xchg
in
cmp
mov
mov
sbb
push
cltd
imul
push
pusha
jb
inc
and
push
movsb
adc
mov
push
jge
xor
lock
and
addb
out
aaa
flds
js
stc
add
aam
aaa
add
cmp
lret
sbb
stos
stc
mov
fsubs
and
inc
mov
out
leave
les
sub
xor
fdiv
xchg
das
sbb
add
pop
sti
push
xlat
fcomi
cmpsb
nop
stos
sbb
inc
or
inc
cmpsl
inc
cmp
daa
dec
in
dec
popa
mov
jbe
das
inc
int
push
pop
inc
in
in
and
ret
jl
out
ljmp
stc
push
outsb
or
inc
push
mov
mov
fdivrs
movsl
imul
jecxz
inc
pop
add
ret
dec
rcll
add
ljmp
xchg
repnz
xchg
lock
mov
sub
mov
sub
mov
popa
cwtl
pop
repz
and
add
add
adc
std
into
loopne
cmp
aaa
fldl
fimull
cmp
test
push
mov
enter
xchg
dec
cmp
test
push
pop
nop
or
xlat
test
ret
loop
enter
fisubrl
inc
and
loope
pop
xchg
add
addb
sarl
cmp
fwait
xchg
pop
sbb
jmp
aaa
sbb
and
mov
ljmp
rcl
inc
gs
dec
subb
jl
sbb
repnz
sti
xchg
add
and
sub
mov
sahf
je
jmp
inc
rol
or
andl
loopne,pn
das
cs
sub
mov
lcall
ret
add
lods
into
pop
rolb
or
xor
flds
popf
icebp
xchg
or
addl
mov
icebp
loopne
ret
xorl
lock
xor
dec
xor
scas
add
jmp
movb
scas
mov
xchg
inc
adc
jmp
cmp
jb
scas
mov
cwtl
dec
add
inc
aas
and
dec
push
loope
mov
lock
stos
std
cmc
call
hlt
or
loopne
and
lcall
xchg
sahf
jo
lock
pop
push
fcompl
ds
sbb
mov
or
add
inc
out
repz
outsb
inc
lea
jno
rcrl
adc
cmp
inc
and
mov
adc
test
push
shlb
pop
dec
xor
sbb
pop
mov
jmp
loopne
ror
jae
sub
add
fidivrl
pushf
pop
lods
imul
dec
inc
xchg
sbbb
mov
lods
icebp
and
fs
jl
pop
out
mov
sub
pop
jne
cmpsb
xorl
shl
ja
adc
jmp
sbbl
leave
enter
and
jl
mov
pop
pop
out
xor
fcomps
xor
ficomps
popf
adc
push
jmp
lret
cmp
js
out
cmc
push
ss
shl
sbbl
add
add
sub
or
pop
mov
loope
dec
lds
rcll
push
clc
mov
scas
inc
pop
inc
and
mov
test
sarl
fistl
xor
shrl
sbb
les
cmp
adc
dec
jno
or
mov
das
sbb
cmpsl
xchg
dec
xchg
or
or
sbb
sarb
xor
xchg
or
push
lock
push
jne
cmc
bnd
lods
out
add
daa
dec
sbb
inc
jb
adc
std
xlat
sbb
out
dec
scas
leave
mov
mov
lods
cmp
fwait
sub
jmp
lock
jbe
sbb
add
fdivrs
aam
sbb
push
and
in
incl
mov
inc
addb
inc
push
fistl
clc
and
fistpl
enter
pop
hlt
pop
lock
mov
jne
or
and
fidivs
add
insb
xchg
xchg
or
xor
mov
clc
sub
clc
out
shlb
inc
fbstp
mov
in
xchg
sub
add
push
jecxz
xchg
das
mov
in
sub
scas
pusha
push
pop
pop
clc
or
add
mov
dec
out
cmp
inc
mov
jbe
rcl
pop
mov
push
mov
jne
nop
dec
stos
lods
or
cmc
jns
addl
inc
pop
mov
add
jecxz
lea
and
jb
adc
fdivp
add
dec
mov
add
or
mov
pop
rorb
in
popf
push
inc
cmpsl
mov
inc
push
sub
dec
dec
mov
adc
ja
pusha
adcl
xchg
mov
inc
dec
mov
nopl
add
jbe
arpl
cmp
mov
adcl
out
mov
jae
adc
mov
bound
es
mov
add
dec
sbb
pop
lea
ret
fisubs
inc
inc
sbb
cmp
fists
mov
adc
movsl
repnz
and
pop
adc
lret
adc
add
push
mov
test
cmp
push
xor
lea
rorl
lret
or
outsl
enter
mov
dec
mov
adc
jecxz
jne
lods
jae
rolb
jecxz
clc
jbe
mov
int3
xchg
jle
dec
add
imul
jmp
sbb
shl
inc
fnstsw
push
les
add
cmc
cmp
mov
pop
shll
add
mov
inc
cltd
jnp
addl
mov
xor
sarb
xlat
add
mov
cmp
push
and
sarb
into
jge
add
aam
lock
jns
shlb
add
aas
es
fwait
cmpsl
dec
add
test
push
mov
mov
xchg
adc
test
jmp
aas
cmpsl
inc
out
sub
xor
popf
ret
sbb
adc
and
cmpl
mov
rclb
movb
xorl
test
pop
push
mov
sbb
mov
hlt
roll
enter
dec
push
pop
imul
cmovo
nop
loop
outsl
call
test
fs
in
jle
clc
jmp
call
inc
outsb
and
add
push
add
movlps
dec
jo
lods
cwtl
icebp
inc
sub
jmp
test
jnp
xchg
mov
inc
sbb
push
push
data16
push
repz
and
fimull
mov
xorl
sub
lea
cmpb
jb
js
pushf
and
ret
aas
mov
adc
arpl
icebp
mov
push
pop
lret
int
mov
lret
movsb
pop
push
mov
dec
xor
xor
push
scas
aaa
js
adc
mov
or
and
inc
mov
aad
xchg
jecxz
imul
sbb
pusha
cs
and
cld
je
stos
sub
outsl
xlat
mov
cltd
out
clc
scas
lock
jo
loop
clc
repnz
add
das
out
push
mov
fisttpl
xchg
push
or
iret
cmp
mov
xor
sbbl
dec
imul
inc
in
in
pop
andl
add
adc
adc
or
test
mov
rorl
cwtl
icebp
cmpsl
enter
test
ja
cmp
mov
cmpps
dec
gs
sbb
scas
pusha
inc
test
mov
xorb
mov
or
jne
addb
lock
out
mov
dec
data16
xchg
xchg
sub
sub
mov
arpl
int
cmp
icebp
popl
pop
out
dec
inc
sti
inc
xchg
dec
mov
mov
andb
xchg
sub
inc
leave
dec
xchg
popa
test
ja
dec
fwait
sahf
jbe
adc
push
mov
inc
adc
pop
imul
pop
dec
je
out
adc
cwtl
gs
cmpsb
sbb
mov
movsl
lcall
adc
ljmp
inc
les
pop
xorb
pop
jmp
add
sbb
cmp
jge
test
mov
xchg
sbb
xor
or
jbe
aas
cmc
int
adc
test
jbe
cmp
andl
cmc
adc
xor
xor
pop
xor
mov
or
roll
and
jne
push
mov
mov
cwtl
movsl
aam
push
push
cmp
sbb
push
jmp
lock
sar
sbb
sbb
xchg
jp
movsl
das
test
push
rcrb
push
test
dec
std
ss
mov
push
outsl
push
aam
fmuls
push
and
add
cld
call
aaa
or
andl
add
enter
mov
push
push
test
repz
jmp
mov
lret
jg
mov
call
adc
aaa
int3
js
loop
pop
cmp
push
push
lods
sbb
scas
xor
cmpsl
leave
inc
ljmp
dec
rep
shl
mov
in
loope
xchg
loopne
fbld
or
pop
pop
out
outsb
or
pop
lods
add
add
and
daa
ret
sahf
push
shl
inc
mov
dec
add
mov
mov
mov
loopne
imul
mov
test
jecxz
xchg
add
lcall
lock
in
cmp
push
add
movsl
paddusw
sarl
or
pop
clc
or
ret
cmp
in
inc
out
cltd
xchg
call
inc
sub
and
lds
jb
fxch
sub
adc
or
leave
sub
cld
adc
mov
loopne
or
rolb
por
add
mov
xor
or
rorb
xchg
les
imul
push
ds
test
repnz
xchg
or
js
push
xor
iret
cmp
mov
icebp
push
neg
loopne
pop
inc
mov
dec
movsl
inc
jge
sub
dec
test
das
and
inc
repnz
mov
dec
arpl
jnp
xchg
lret
lods
pop
cmp
xchg
aas
sub
mov
enter
jecxz
loop
imul
lock
loopne
sbb
les
popf
mov
xor
stc
xchg
xchg
mov
or
loop
or
dec
movsl
orl
and
adc
movsl
xor
mov
call
dec
in
push
jg
cmp
test
push
cmp
inc
rorb
and
imul
popa
or
push
mov
pop
loopne
adc
mov
test
loopne
jne
or
scas
fsubrs
push
sbb
mov
ds
jg
insb
daa
jae
push
add
adc
popa
scas
incl
cmp
andl
pop
out
push
and
rclb
jge
cmpsb
cmpsl
push
inc
sub
xchg
clc
xchg
imul
or
xchg
push
bound
push
scas
cli
lret
test
int
xchg
sti
xor
test
aas
cmpsb
and
leave
push
les
cmp
jl
sub
adc
cmc
or
stc
sub
adc
scas
mov
jb
mov
push
dec
insl
testl
dec
jne
mov
lea
sbb
and
das
add
push
xlat
jmp
add
stc
sbb
repnz
loopne
push
in
ret
nop
adc
sbbl
dec
mov
ret
in
jg
mov
xor
das
orb
and
icebp
and
push
jp
adc
cmpsl
std
adc
dec
pop
xor
and
imul
pop
mov
mov
sbb
and
sbb
cwtl
and
jg
fwait
mov
adc
shlb
jmp
cmp
jae
pop
sub
insl
mov
addb
outsb
hlt
into
les
into
loope
lret
je
adc
pop
int3
movsl
jmp
sub
or
dec
cmpsb
fmuls
adc
popa
lea
icebp
int3
mov
push
xor
testl
int3
mov
lock
and
fs
jmp
je
or
out
jns
xor
mov
psrld
xchg
or
xchg
out
out
lcall
inc
push
mov
cmpsl
dec
loopne
cmp
rolb
clts
mov
push
pop
ret
stos
inc
sbb
out
xor
cmpsb
addb
xchg
in
xchg
into
inc
lcall
cld
mov
testb
mov
fs
sbb
mov
data16
pop
mov
cmpl
or
fst
jae
jnp
sbb
das
mov
or
mov
es
add
or
add
mov
cmp
xor
cmp
mov
dec
jo
pop
push
jb
or
and
pop
in
mov
mov
cmp
test
adc
add
adc
cmpsl
cmp
enter
xchg
jmp
inc
aaa
pop
mov
je
stos
pop
shll
les
pop
jmp
fdivs
sub
das
clc
lock
icebp
and
das
mov
pop
mov
call
jbe
and
or
add
mov
fisubrs
mov
mov
rolb
call
mov
repnz
adc
xor
add
ja
jnp
dec
inc
jl
jp
loop
pop
push
adc
lret
mov
and
subb
jns
sub
dec
fdivrp
sub
mov
movsb
push
js
insb
jg
push
sbb
mov
loop
pop
sbb
cmp
jnp
adc
push
in
clc
cmp
call
jmp
jnp
inc
enter
or
call
xchg
xchg
scas
andb
call
push
or
add
scas
cmc
arpl
pop
xor
rcll
movsl
dec
mov
sub
stos
loopne
inc
fmulp
sub
jo
push
mov
lock
jecxz
xchg
ljmp
cld
rcl
jmp
adc
bound
sub
clc
mov
jne
xchg
jns
ja
sbb
xchg
insb
or
mov
fs
add
mov
pop
leave
js
loop
aad
lock
xchg
mov
shlb
or
pop
push
add
push
dec
fldl
es
xor
fisttpl
into
lea
sahf
mov
sub
mov
je
pop
js
aam
movsl
xchg
pushf
jae
push
sbb
hlt
mov
dec
gs
dec
mov
popa
jecxz
pushf
and
inc
xor
into
not
inc
xchg
popa
mov
add
add
jp
fsubs
xlat
insl
pushw
mov
addr16
gs
jo
mov
push
pop
dec
imul
ja
int3
je
dec
add
or
test
shrl
clc
push
xchg
xor
pop
adc
inc
add
hlt
test
fmul
add
jp
mov
popf
lods
mov
add
mov
xor
jmp
icebp
lahf
jp
loope,pt
and
mov
loope
sbb
or
cmpsl
add
sti
mov
test
inc
arpl
jns
test
hlt
sbb
rcll
mov
mov
fiaddl
mov
mov
add
add
test
push
je
divl
pushf
ret
jo
add
js
outsl
movsb
adc
ret
lds
test
jb
mov
adc
sbb
or
test
cmpsl
cmpsb
and
xchg
xlat
das
fs
xchg
jl
inc
call
sbbl
jp
shll
stos
fcoms
mov
add
js
jg
out
add
and
xor
sbb
push
push
outsb
pop
orl
enter
and
loopne
fdivs
xchg
push
out
bound
insb
lret
aas
adc
fwait
pushf
add
adcl
aaa
sar
icebp
repz
aad
fdivrs
mov
push
xor
sub
fucomp
push
push
pop
add
loopne
dec
sub
lods
fidivrl
fiadds
roll
icebp
lret
jmp
and
inc
insb
fmuls
dec
imul
std
movsb
outsb
rorb
jge
outsb
testb
icebp
dec
and
add
mov
inc
or
lods
and
jp
cmp
movsl
fnstenv
hlt
mov
jns
aaa
cmp
fadd
adc
jb
xchg
fldenv
jo
inc
jl
ret
jg
pop
push
cmc
cmc
mov
rorb
pop
loop
pushf
dec
cld
add
cmpsl
scas
sub
pop
inc
mov
push
out
adc
aam
and
out
sbb
ljmp
negl
push
rcrb
lahf
aam
push
pop
testl
test
clc
pop
jbe
mov
rcrb
hlt
lcall
lret
xor
sarl
xchg
xchg
rorb
adc
int3
or
jp
nop
clc
and
push
push
scas
mov
pusha
cltd
cli
mov
pop
inc
sbb
xor
mov
rolb
out
mov
jmp
add
add
jb
loop
jp
ret
clc
les
pop
mov
sarb
repz
rcr
xchg
lock
dec
idivl
clc
je
pop
pop
push
out
mov
push
or
add
dec
push
push
jmp
push
sbb
xor
push
int3
mov
push
sub
push
clc
adc
insb
dec
mov
or
movsb
nop
ja
sub
jns
mov
jp
fcom
popf
ficoml
subl
adc
ja
fildl
or
popf
fmull
jle
cmp
push
js
inc
scas
xchg
and
sbbl
jecxz
lds
rorb
and
push
mov
cli
enter
dec
lods
pop
cmp
mov
mov
daa
jne
xchg
pop
insb
and
mov
sbbl
add
mov
inc
xchg
xchg
cmp
cltd
mov
and
pop
mov
cld
dec
ret
icebp
mov
inc
push
cltd
shrb
fists
imul
mov
push
xchg
testb
cmp
add
in
pop
push
outsb
sub
xor
mov
jge
lock
jbe
add
in
add
gs
xor
sar
popa
xchg
jno
add
xor
push
aaa
xlat
adc
rorb
and
js
ret
in
test
loopne
and
add
flds
pop
test
xor
mov
push
clc
inc
or
or
dec
mov
loopne
cmp
sub
push
dec
fisttps
xor
enter
jo
and
outsl
xchg
add
test
and
push
popf
inc
xor
pop
ds
nop
push
sbbb
push
xor
cli
rcll
mov
js
jne
push
imul
adc
add
mov
jo
add
call
adc
push
adc
aas
ffree
or
and
cmp
divb
push
mov
hlt
loop
fisttpl
pushf
imul
ret
addr16
lcall
mov
mov
push
stc
sbb
les
shlb
sbb
lods
call
addr16
dec
sub
insb
dec
loopne
mov
in
cmpsl
mov
decb
sti
inc
sti
add
sbb
fucomip
sub
mov
cmp
inc
sub
sub
es
xor
fs
add
hlt
push
inc
lock
push
mov
adc
div
add
dec
inc
add
adcb
repz
or
and
cmp
mov
or
int
sahf
lods
hlt
call
mov
and
inc
jge
sub
stc
loopne
adc
call
lods
push
sub
aas
xor
adc
in
sub
imul
lock
push
push
push
pop
or
stos
push
out
call
aas
pusha
and
and
adc
pop
ljmp
sbb
add
addl
insl
and
popf
lock
loopne
xlat
imul
push
add
cmpsb
aam
test
jle
std
imul
adc
es
mov
push
in
fildl
add
ljmp
je
cmp
dec
clc
mov
cmp
push
iret
jbe
push
int3
stos
sub
shlb
xchg
and
in
add
push
dec
icebp
hlt
cwtl
les
and
lahf
xchg
arpl
incb
in
in
push
pop
sti
sbbl
fdivl
cwtl
hlt
mov
hlt
cs
aad
push
add
or
or
aas
dec
mov
push
cld
push
arpl
adc
inc
mov
repnz
cmp
shr
mov
les
dec
mov
add
cmp
or
xor
rcll
jb
ret
pavgb
mov
das
dec
jnp
movsl
mov
sub
hlt
pop
ror
add
push
incb
shlb
in
dec
les
lock
ret
dec
mov
mov
iret
cmp
dec
pop
cld
xchg
jnp
adc
jb
mulb
call
add
lahf
lret
or
jl
pop
in
ljmp
pusha
sbb
loopne
mov
ret
xlat
cmp
adc
dec
xlat
add
mov
mov
rol
adc
cwtl
mov
xchg
test
pop
xchg
cli
push
push
or
xor
icebp
jge
lock
adc
shl
xchg
or
imul
dec
jg
or
out
pop
sub
add
popf
or
push
xor
and
push
aad
jg
shll
sub
or
dec
sub
mov
xlat
ret
je
mov
rcrl
mov
pop
shrb
add
int
dec
lcall
mov
test
movswl
popa
lock
aas
mov
das
insb
es
push
scas
xor
subb
xchg
push
iret
hlt
mov
dec
in
inc
add
sbb
sbb
in
push
es
rclb
push
loopne
lcall
mov
aas
xor
andb
add
subb
add
push
xchg
scas
loop
pusha
jecxz
setbe
imul
insb
lods
xchg
repz
sbb
and
leave
test
sar
mov
pop
and
jmp
lcall
pop
push
or
mov
dec
jg
add
inc
or
mov
cld
cmpsb
ret
xchg
lock
xchg
dec
jl
lods
pop
push
inc
shlb
mov
in
hlt
mov
pushf
xorl
rorl
in
mov
mov
mov
or
sub
mov
adc
scas
lcall
or
inc
ret
jnp
jp
shlb
jecxz
jl
or
and
sti
iret
cltd
dec
mov
mov
repnz
out
inc
in
out
add
dec
xor
test
loop
adc
pop
sbb
pop
xchg
rorb
mov
cmp
shll
lret
mov
andb
and
and
loope
jle
aas
mov
or
iret
pushf
cs
pop
je
xchg
js
faddl
add
cmc
cltd
jle
popf
push
sbb
hlt
xchg
dec
aam
dec
xchg
and
xor
lods
add
add
mov
popa
and
js
add
or
mov
dec
push
push
repnz
call
and
jecxz
fwait
add
rorl
add
int
iret
fsub
add
push
mov
mov
sbbl
testl
ss
fsts
dec
inc
gs
iret
inc
ja
rcr
sub
jp
test
adc
mov
cmp
lods
test
icebp
and
mov
stc
fimull
call
lret
mov
and
stc
mov
push
push
xchg
add
xor
adc
xorb
dec
sub
aam
adc
or
and
add
pop
nop
pop
mov
loopne
and
pop
sub
idiv
dec
rcrb
add
push
cmp
add
data16
adc
and
and
dec
sarb
test
lea
xor
xchg
icebp
stos
adc
mov
stc
sbb
mov
and
jle
jmp
inc
popa
clc
pop
pusha
adc
sbb
or
test
push
mov
adc
xchg
fdivs
dec
inc
inc
add
add
into
xchg
add
fbld
sub
addb
testl
shl
xchg
sub
or
adc
bswap
sbb
pop
xor
movsb
cld
es
pop
pushf
iret
push
pop
and
or
and
out
adc
dec
dec
inc
add
cmp
loop
pop
pop
pop
sbb
sti
inc
in
sbb
je
jb
aas
cmc
xchg
jg
ss
or
or
imul
push
or
loope
in
mov
push
xlat
mov
inc
and
mov
dec
pop
inc
das
cmp
mov
and
adc
into
loope
pop
mov
daa
dec
stc
add
add
push
cmp
xor
mov
mul
adc
js
jl
inc
loopne
mov
shr
mov
lock
fiaddl
loop
mov
les
cmp
mov
sub
shrb
xchg
xor
xor
or
or
inc
out
lret
je
faddl
dec
and
sbb
push
sbb
mov
pop
lret
fcompl
stc
jno
mov
and
push
mov
in
add
add
fsubs
sub
pop
ds
push
add
xchg
iret
adc
or
in
jb
ror
push
dec
xor
add
adc
gs
inc
jge
popf
adc
push
lock
xchg
jbe
idivl
mov
cmp
movsb
call
les
rorb
ret
sbb
and
mov
fcompl
lret
fmulp
out
xor
lock
push
mov
rolb
je
add
or
fistpll
sub
subb
and
outsl
je
and
add
sarb
jp
xor
movsb
test
push
inc
and
add
lods
lods
lds
xchg
aad
add
mov
scas
stos
pop
rorb
dec
dec
clc
sbb
mov
fmuls
xchg
nop
adc
jle
enter
sub
dec
inc
int3
ret
shlb
dec
jl
adc
sbb
push
push
int3
push
add
jb
pusha
dec
jnp
mov
pop
in
push
rolb
test
pop
add
lds
out
xchg
or
sti
xchg
sbb
pusha
jne
fwait
add
andl
sbb
out
jne
clc
data16
pop
xchg
sub
rorb
fwait
pop
fisttps
sbb
push
pop
negl
mov
and
and
jns
mov
lea
push
jl
popa
cmp
pop
push
jnp
adc
cmp
lds
inc
add
adc
sbb
add
and
daa
stos
enter
int3
lea
arpl
lock
repz
jne
cmc
or
mov
and
sub
insl
jmp
inc
loop
mov
xor
dec
andb
mov
jne
xorl
jo
dec
repz
divl
mov
lds
popf
xchg
sub
or
adc
fidivrs
inc
add
xchg
ret
jge
rol
fnstcw
sbb
mov
and
out
sbb
xorl
shrb
inc
cmpl
and
js
xchg
jae
bound
repnz
nop
inc
pop
fdivs
pusha
mov
fcom
xor
popa
enter
mov
push
sub
adc
mov
clc
addr16
jmp
test
jbe
jne
flds
add
sar
xchg
lock
fdivrl
sbb
enter
addb
cs
add
mov
and
mov
jle
rcrb
cmp
movsb
xor
push
add
dec
jb
xor
mov
sahf
orl
add
scas
dec
call
add
repnz
mov
xor
add
mov
push
mov
or
push
inc
xor
mov
js
push
mov
inc
jo
or
outsl
cli
xor
fdivrs
adc
cmp
fadd
mov
adc
mov
sbb
cs
inc
ja
clc
jg
sub
mov
dec
daa
and
stos
adc
scas
mov
popa
jle
call
dec
aas
loop
push
orb
jmp
ret
mov
pop
or
inc
or
add
xor
sbb
inc
cmp
mov
push
faddl
out
jl
inc
sti
fistpl
push
mov
jmp
call
filds
test
repz
movsl
xchg
pop
sarl
add
add
fbstp
adc
or
and
sub
sub
nop
sbb
pushf
mov
xchg
and
shl
and
loop
pop
adc
fstl
orb
outsl
sub
lcall
sub
out
xchg
das
or
jno,pt
pop
sub
loope
mov
out
mov
jmp
mov
test
popw
push
add
mul
out
add
shll
inc
ret
mov
and
dec
cmp
cld
adc
hlt
and
cmp
ret
cmp
xor
jb
outsb
pusha
adc
lods
mov
add
or
leave
inc
mov
jb
mov
jg
rol
cli
xor
jecxz
and
or
ja
popf
loopne
or
clc
loope
bound
push
test
add
adc
leave
rclb
stos
out
xor
pop
pop
pusha
jge
mov
std
mov
or
or
test
or
clc
les
pop
scas
push
push
shr
inc
lcall
aam
repnz
fs
orb
sub
or
cmp
clc
inc
mov
pop
sbb
cmp
popa
fmull
enter
pop
rolb
inc
jno
dec
mov
sub
inc
dec
add
scas
ret
ljmp
loopne
add
pop
or
inc
mov
rolb
das
or
add
push
popf
cli
shlb
hlt
dec
jle
mov
sub
inc
xchg
push
add
pop
addr16
aad
outsb
sbb
jnp
or
aam
mov
dec
and
sbb
int3
idivb
das
cmp
add
je
pop
add
mov
scas
push
inc
cmp
add
repnz
or
ficoms
add
imul
clc
out
push
lret
mov
lds
stos
push
test
sahf
adc
mov
push
pusha
mov
in
xor
inc
fdivs
aam
outsb
add
icebp
call
loopne
sbb
mov
xor
push
push
sbb
dec
add
call
and
sbb
sbb
inc
add
xchg
add
jg
scas
xor
add
inc
adc
fwait
jo
popa
pop
adc
push
mov
cmp
xor
fimuls
inc
loopne
scas
jnp
pop
sbb
push
cmp
cmp
add
pop
dec
stos
stos
adc
clc
mov
mov
stos
push
inc
cmp
mov
or
shrl
xor
xchg
sbb
and
shl
jbe
and
into
ljmp
fadds
xchg
sbb
aaa
lock
rclb
xchg
fimull
or
or
das
repnz
mov
and
mov
inc
std
popf
or
xchg
or
mov
out
daa
fs
bsf
cmp
ja
pop
lret
push
adc
lods
jno
mov
push
pop
push
adc
ja
or
xor
sbb
dec
aam
adc
pop
jecxz
xor
lret
loop
rcll
sbb
lea
pop
roll
dec
sbb
mov
xor
inc
lret
stos
fildl
loope
dec
js
jl
push
xchg
flds
pop
decb
cmpsl
cltd
aaa
insl
cmp
mov
mov
lods
sub
dec
xor
and
xor
cmpb
add
cltd
int3
sbb
add
movsl
mov
add
mov
es
mov
cmpsl
push
sti
or
sub
insb
adc
xchg
cli
arpl
adc
cmpsl
jns
test
aam
mov
jg
lods
cld
push
xlat
jmp
stos
xorb
mov
or
mov
or
not
sub
add
filds
add
jp
or
insb
frstor
xchg
fmull
sbb
jbe
push
or
inc
cmp
sub
lcall
pop
lock
sub
or
sbbb
pop
adc
test
mov
scas
and
sbb
fcmovb
ds
sub
bound
test
scas
ljmp
sub
test
inc
xchg
mov
mov
addb
and
mov
add
scas
test
jne
shlb
ficomps
fldt
cmp
xor
loopne
or
mov
cmc
or
and
inc
lahf
mov
roll
ja
fimuls
dec
jo
mov
sub
inc
inc
lea
xor
add
outsb
fnstenv
clc
add
mov
call
mov
mov
imul
adc
nop
ror
stos
ljmp
mov
sbb
in
push
fsubrp
push
clc
push
call
mov
pop
pop
repz
and
add
xchg
inc
jno
mov
inc
mov
bound
into
lcall
faddl
adc
sbb
loope
push
xchg
lods
jns,pt
dec
xchg
lock
lds
stos
xor
push
ret
pop
add
push
jle
lcall
mov
addr16
je
in
push
cmpsl
aad
jno
jns
arpl
outsb
or
movsb
pop
mov
and
sub
leave
mov
xchg
subb
test
inc
mov
lea
dec
mov
loop
lahf
js
repz
mov
jnp
repnz
adc
testl
mov
in
jl
push
outsl
pop
repnz
or
pop
push
les
adcl
bound
jecxz
jo
lock
shll
cs
mov
arpl
pop
out
xor
out
lret
sbbb
test
sbb
add
rcrb
and
sahf
adc
icebp
pop
faddl
adc
aas
int3
xor
add
and
inc
pop
hlt
dec
dec
add
pop
mov
or
xchg
add
fstpt
xor
sub
and
lret
jae
pop
jl
dec
add
xor
inc
and
jmp
mov
jp
fildl
call
sub
loop
cmp
or
bound
mov
sbb
add
mov
outsl
cld
fistpll
out
cmpsb
pop
dec
jbe
add
add
adcl
pushl
or
inc
adc
sub
pusha
dec
cmpsl
insb
push
and
dec
dec
adc
add
cmp
cltd
shr
iret
jmp
add
mov
insl
sbb
out
ret
sub
push
das
jl
nop
sbb
sub
xchg
cmp
sbb
cmpsl
sti
stos
push
xlat
mov
inc
sbb
or
add
pop
xor
add
repz
loopne
and
imul
pop
push
movsb
xlat
je
sbb
jecxz
sbb
xchg
push
ljmp
add
add
jns
nop
sbb
dec
jmp
test
push
xchg
rorl
inc
cwtl
jmp
pop
aad
sbb
fmuls
andl
cmp
cmpl
dec
inc
mov
adc
js
or
pop
mov
lods
add
andl
jo
cli
xor
add
pusha
sti
daa
test
loope
fidivrl
xchg
push
gs
sti
or
dec
mov
mov
and
cmp
sub
mov
cmpsl
push
mov
loope
add
in
jl
pop
mov
lock
fdivs
adc
dec
les
add
lods
inc
cwtl
inc
or
adc
add
xor
pushf
js
lock
aam
insb
mov
scas
mov
idivb
push
inc
mov
xchg
lock
loopne
das
mov
push
mov
sub
add
jno
pop
adcb
inc
jmp
movsl
imull
pop
add
scas
mov
sub
inc
or
movsl
mov
lock
je
sub
push
pop
xchg
loope
pause
dec
cmpb
lret
shrl
test
daa
sub
cmc
popa
fldl
test
imul
jb
mov
repz
and
push
test
xchg
sbb
outsl
push
dec
or
xor
or
dec
jns
je
or
or
dec
pop
mov
fsubr
push
sub
mov
sbb
dec
mov
dec
shl
cmp
jbe
dec
in
dec
outsl
adc
xor
lock
daa
pxor
mov
xor
dec
inc
pusha
and
cld
add
enter
test
jb
or
adc
add
iret
or
add
inc
out
rol
rcrb
stc
lods
test
nop
pusha
push
fdivl
jle
sbb
into
ret
les
add
cmp
addr16
rolb
mov
cmp
js
xor
add
scas
fmuls
adc
imul
addr16
and
cwtl
adc
xchg
int
push
push
pop
mov
les
or
in
enter
sub
cmp
add
add
into
sahf
sub
push
shll
mov
add
sahf
push
adc
leave
inc
mov
add
mov
sbb
sub
add
xlat
jle
mov
mov
roll
aam
sub
xor
jle
jo
ficoml
ret
mov
int3
xor
jp
push
adc
push
lock
push
mov
mov
sbb
and
mov
pop
jg
cmp
pushl
jecxz
push
test
dec
mov
dec
test
inc
nop
loopne
push
sbb
mov
orl
loope
icebp
jo
push
popf
lock
sbb
pop
test
sub
push
daa
inc
sub
push
or
add
call
sbb
sbb
lock
pop
dec
inc
popa
int
jp
mov
mov
sub
lock
cmp
jne
aad
rcrb
lock
orb
in
push
call
and
out
push
rcll
push
ficomps
fdiv
sub
addb
and
jmp
jne
test
sub
sbb
and
inc
or
fmuls
lea
fsubs
mov
sbb
xchg
sahf
cmpsb
movsl
int3
or
lods
dec
pop
cwtl
jg
cmp
push
xor
adc
lock
mov
dec
dec
imul
in
nop
or
sub
sti
inc
movsl
sahf
or
rcrl
push
scas
pop
dec
adc
jmp
cld
call
add
cmp
mov
jle
fisubs
mov
lods
mov
scas
mov
sub
pop
hlt
add
in
fadds
lods
pusha
jnp
loope
stos
push
add
push
jo
mov
mov
sub
movsl
out
mov
pop
xor
rorl
fsub
popa
add
aam
cmc
ja
adc
sub
sbb
popf
xor
fmuls
mov
jo
mov
sbb
sbb
adc
cmpps
xchg
mov
jmp
push
fs
sbb
enter
daa
fcompl
push
and
das
jle
hlt
les
dec
push
adc
shll
out
adc
mov
arpl
loope
cld
test
mov
insb
ret
popa
gs
pop
xlat
mov
push
cmp
pop
mov
es
insl
dec
dec
adc
rcr
pop
jmp
mov
or
nop
pop
lahf
and
into
test
sbb
cs
stos
jge
cld
xchg
sbb
test
and
or
mov
and
jmp
and
jno
pop
repz
cli
adc
sub
add
test
jae
inc
xchg
push
jl
inc
fimull
call
jne
push
sbb
sbbb
decl
stos
cld
and
xchg
arpl
cwtl
lock
mov
xor
mov
adcl
popa
shlb
and
and
arpl
pop
mov
es
pop
mov
daa
cmp
aas
imul
cld
rclb
test
mov
push
xor
outsb
pusha
rol
mov
pop
dec
lock
pop
dec
mov
adc
mov
sub
repnz
sub
clc
fwait
popa
fildll
sub
faddl
mov
test
popf
mov
les
negl
inc
pop
adc
adc
lock
gs
xchg
xor
int
or
out
lds
cltd
and
faddl
ja
cmp
clc
scas
xchg
je
loopne,pt
xchg
jp
stc
loop
jo
cmp
lea
pop
fdivl
pop
push
and
inc
popa
xor
sbb
add
push
clc
sub
mov
inc
lahf
mov
sbb
dec
dec
fidivrs
js
sahf
push
inc
das
in
call
xchg
xor
test
sub
aas
sbb
loop
leave
and
mov
mov
in
mov
js
mov
repz
loopne
inc
fsubl
adcb
hlt
mov
jecxz
or
sarl
pusha
faddl
or
push
aam
add
xchg
and
shlb
loope
inc
rcl
les
add
mov
mov
mov
xchg
push
shll
sub
movb
cmp
repz
push
enter
add
cs
sub
adc
in
mov
or
pop
sbb
mov
push
push
jns
fs
or
lock
pop
filds
and
push
push
clc
lods
lock
and
cmp
repz
addps
push
pop
fwait
sub
push
mov
in
clc
jo
adc
sahf
jecxz
mov
lods
out
fdivp
adcb
ljmp
add
or
adc
sbb
repz
addr16
mov
push
scas
push
int
std
push
add
cli
pop
sub
in
add
pop
lret
add
scas
pinsrw
inc
enter
loop
or
xchg
lock
popf
dec
out
add
mov
jae
xlat
sbb
fbld
mov
insl
add
mov
aas
bnd
mov
add
dec
pop
or
add
pusha
movsb
sbb
jp
cli
lea
pop
jmp
pop
stc
push
loopne
stos
loopne
xchg
icebp
inc
adc
push
inc
mov
sub
mov
popl
pop
addb
aas
mov
movsl
divl
sub
outsb
call
push
lret
shr
daa
pop
jge
imul
sbb
lahf
sbb
jbe
fs
xchg
std
mov
push
mov
test
and
or
jl
xor
fdiv
or
out
pop
imul
lds
rolb
inc
lcall
fwait
ret
jp
adc
lock
push
cld
filds
shl
inc
pusha
or
xchg
mov
icebp
rol
icebp
lcall
stos
ja
orl
jecxz
rcll
xchg
shrb
mov
nop
cmp
scas
shr
push
ljmp
xor
inc
cltd
pop
scas
loopne
xchg
js
fdivr
test
xor
inc
add
mov
fbstp
add
sbbb
adc
loopne
movsl
and
dec
dec
aas
clc
scas
pushf
and
add
sbb
push
add
add
mov
shlb
jl
jle
mov
xchg
fisubl
add
pusha
add
or
add
mov
aad
mov
in
scas
sar
test
xor
dec
in
xorb
mov
inc
lcall
outsb
and
add
xchg
lock
cwtl
push
pop
je
lock
sbb
cmp
orl
sub
loop
and
push
lret
add
jl
cwtl
sub
dec
ljmp
pusha
sbb
pusha
aad
adc
loopne
enter
jge
icebp
pop
push
lock
mov
iret
repz
enter
push
xlat
dec
sub
pop
or
inc
jge
mov
cmpsb
arpl
stos
out
shlb
repz
es
inc
filds
push
loope
jno
das
xchg
in
jnp
popf
xor
ret
dec
ret
decl
add
cmp
inc
outsl
imul
mov
mov
gs
push
pusha
movsb
add
loope
pop
repz
mov
inc
and
andb
or
aas
rcrl
sub
shll
lds
lahf
or
xchg
push
and
inc
xor
stos
movl
xchg
adc
sub
or
enter
or
adc
call
xchg
adc
test
fcomp
jbe
dec
push
sbb
imul
js
xchg
add
xor
rol
bound
unpckhps
shr
or
xor
sbb
rorl
cmp
rol
loopne
test
add
stos
loopne
negb
xor
push
in
xor
xor
jmp
sub
bound
cmc
add
repnz
sub
mov
jae
dec
add
dec
shll
sbb
xor
push
pop
mov
movsl
cmp
mov
add
adc
push
inc
add
addr16
dec
int
repnz
cltd
cli
jne
ss
or
mov
out
add
leave
xor
dec
add
inc
ret
pop
add
mov
inc
pushf
sbb
mov
out
mov
push
aam
movsb
add
mov
and
and
popa
jecxz
loopne
xchg
mov
and
or
dec
or
and
and
jns
lea
in
cli
sbb
out
inc
cli
ret
mov
sub
ret
dec
ret
in
cmp
or
sbb
int
mov
in
pop
loope
inc
mov
sbbb
loope
cli
adc
and
add
or
aam
xor
sbb
lahf
mov
adc
js
inc
add
jg
xchg
ds
aaa
xor
loopne
mov
push
cmp
popf
loopne
add
imul
mov
gs
decb
sub
lahf
pop
lea
mov
jno
pop
jo
out
jmp
iret
add
or
jmp
fs
adc
loope
mov
and
iret
loopne
inc
inc
sub
adc
movsl
shlb
or
xor
cwtl
jecxz
add
add
stos
lods
xchg
add
add
mov
adc
cmp
pop
fisubrs
cs
xabort
call
flds
add
mov
scas
mov
adc
fucomip
inc
push
inc
mov
ficompl
cld
sbb
stos
loopne
lahf
push
or
dec
js
or
jo
sub
cmp
inc
call
adc
stos
outsl
fmuls
pop
add
jns
jecxz
enter
out
push
push
test
lods
push
push
fistpll
add
dec
int3
scas
mov
jl
call
in
inc
adcl
and
dec
lock
sbb
dec
das
pop
mov
repnz
shrl
ljmp
sbb
mov
xor
inc
scas
dec
sbb
xchg
dec
outsb
xor
and
cmp
and
mov
mov
sbb
dec
ljmp
les
pop
or
lret
sbb
mov
lret
xchg
jg
cmp
adcb
imul
mov
cmp
ds
adc
fisubl
hlt
shrb
dec
in
xchg
shr
jnp
ret
mov
shl
pushf
adc
dec
push
ret
push
mov
ret
and
sbb
push
xchg
xchg
mov
inc
dec
cmpsl
jecxz
aas
out
pop
push
pop
shll
jecxz
lods
cltd
adc
push
pop
aaa
push
out
mov
lcall
pop
jl
out
mov
clc
push
sub
mov
int
mov
mov
repnz
mov
xor
repnz
jp
fwait
push
or
stos
push
cmpsl
dec
mov
lds
xchg
dec
xchg
push
fidivrl
outsb
insl
and
hlt
lret
data16
and
dec
push
movb
or
fmuls
sbb
add
jmp
sbb
cmp
cmc
inc
js
cmp
int3
imul
add
pop
mov
data16
pop
pop
dec
and
mov
fs
sbb
jmp
stos
lds
out
ds
gs
pop
dec
rorl
dec
ret
cld
lods
xchg
icebp
mov
add
cltd
adc
xor
push
bnd
pop
sbb
mov
push
mov
dec
adc
or
jns
in
sub
jge
ret
inc
and
mov
test
mov
dec
mov
xor
xlat
subl
mov
lods
daa
daa
mov
sahf
adc
iret
fwait
ret
arpl
pop
sahf
sahf
les
popa
xchg
or
mov
movsl
sub
sbb
sbb
inc
mov
pop
test
sti
icebp
add
adc
xor
and
push
and
adc
test
ja
push
pop
jo
fidivrs
inc
jecxz
dec
notb
sub
sbb
clc
and
fwait
adc
imul
lds
fcmovbe
or
nop
dec
or
loopne
jne
xor
cmpb
divb
jo
js
add
cmp
jmp
inc
insl
les
dec
cmp
pop
add
inc
mov
jmp
xchg
sbb
cmp
les
sub
sub
fsubrl
xchg
mov
dec
dec
mov
fildl
addl
mov
inc
repnz
in
push
mov
sbb
or
dec
push
jecxz
xor
pop
sub
or
es
shrl
jp
repz
maskmovq
push
or
dec
jecxz
aas
add
mov
push
add
lcall
jo
les
aaa
push
jecxz
leave
mov
jne
testb
lret
jne
push
test
dec
pop
inc
shr
fisubrs
xor
adc
test
rorb
repz
enter
aam
inc
sub
mov
clc
mov
cmp
pop
mov
loope
cwtl
push
sub
mov
test
and
xor
mov
add
sub
outsb
cmp
clc
test
mov
aam
cmp
xchg
std
push
pusha
pusha
loope
cmp
call
loopne
in
std
lret
movsb
mov
test
shlb
popf
pop
jne
and
rclb
add
lret
in
adc
push
cmp
rclb
sbb
lcall
adc
enter
arpl
stos
jle
push
inc
xorb
push
push
sub
ret
add
out
jmp
jbe
push
addl
in
pop
pop
imul
bound
inc
adc
pop
or
sbb
loop
fcom
sub
push
cmpsl
dec
xorb
scas
iret
pop
rcr
jmp
mov
add
xorb
and
jle
adcl
mov
jge
jecxz
pop
adc
xchg
inc
cmp
sub
or
xchg
cmc
hlt
dec
loopne
pop
test
jbe
sbbl
inc
dec
pop
cmp
es
adc
pop
inc
or
aas
into
dec
clc
adc
add
mov
push
lret
testl
jl
orb
add
ret
jmp
scas
and
cli
dec
xchg
call
inc
dec
mov
xchg
or
call
sbb
popa
aam
xlat
jns
adc
movsl
jno
dec
inc
pop
shrb
iret
in
fwait
dec
insb
lods
cmp
inc
jmp
nop
push
mov
jmp
add
push
or
fidivrl
or
lds
imul
scas
lods
push
insl
jge
dec
stc
mov
or
or
lods
loope
sub
scas
shrb
das
pop
aam
imul
dec
repnz
gs
in
rorb
xchg
sbb
adc
loope
shl
lret
fsubl
decb
imul
fs
sbb
sbb
mov
push
sarb
or
sbb
test
lret
push
int3
bound
hlt
enter
shl
js
sbb
shlb
mov
jnp
adc
popa
adc
addl
or
cmp
xor
scas
aam
adc
iret
adc
hlt
sub
cwtl
das
ja
rorl
or
bound
add
shr
incl
and
cmp
pop
or
dec
or
mov
add
test
and
pushf
rolb
push
add
loope
xor
enter
jle
fisttpl
or
pushl
nop
or
sub
inc
lods
mov
or
xchg
outsb
ret
fists
pop
imul
or
add
or
add
cmovb
push
jecxz
push
xchg
enter
mov
mov
inc
notb
cs
pop
loope
test
sbb
adcl
inc
push
mov
ficoms
add
popa
jns
insb
enter
jg
rclb
ret
ja
xchg
inc
out
cmp
jmp
out
test
imul
dec
push
rorb
adc
pop
test
out
add
push
adc
push
sub
loope
in
push
mov
mov
pop
mov
add
push
mov
incb
imul
test
pop
fdivl
inc
or
or
sbb
in
fbld
lret
push
adc
addb
in
xchg
je
lcall
add
ljmp
add
add
jmp
clc
fists
sub
adc
and
pop
sbb
dec
xor
test
fldt
push
loopne
fdivrs
sbb
daa
cmp
pop
xchg
xor
mov
push
sbb
cmc
jne
inc
paddw
dec
bound
add
pop
jmp
lcall
adc
push
push
and
movsl
fsub
jecxz
mov
outsl
sub
push
adc
nop
jne
pop
sar
xlat
fwait
stos
not
xor
aad
gs
push
mov
add
cwtl
inc
mov
pop
mov
test
dec
jnp
add
mov
xchg
and
mov
add
lret
inc
push
lock
or
sub
xor
xchg
or
or
inc
add
outsb
adc
xor
jne
stos
add
jge
aas
mov
lret
les
subb
or
inc
sbb
mov
add
out
xchg
into
sbb
lahf
xor
test
jmp
es
sub
mov
call
in
call
add
push
mov
inc
out
and
orb
sbb
jl
repnz
ss
fistps
mov
ficomps
sbbb
pop
loopne
dec
add
sub
outsl
mov
test
in
hlt
insb
add
popa
sub
mov
imul
or
jo
mov
fimuls
stc
adc
rorb
aas
pop
shl
dec
rorb
hlt
mov
fs
xor
mov
add
pop
clc
inc
in
xor
fimuls
into
sbb
dec
inc
dec
sub
mov
push
bound
xchg
add
cwtl
scas
jnp
jo
sub
and
les
clc
stos
add
sbb
jp
out
xchg
gs
addb
popa
shrl
mov
js
add
jge
jl
ss
das
mov
jo
add
ja
clc
clc
jp
add
sub
mov
sbb
jns
push
in
pop
pop
mov
xor
out
inc
and
in
daa
sub
pop
test
jge
cmpsb
jne
add
or
xchg
cs
push
pop
pop
inc
inc
push
addr16
add
popf
mov
adc
jo
push
inc
insb
push
jge
sarb
notb
enter
xchg
and
stc
addr16
mov
ds
js
inc
repz
sub
or
das
jge
pop
aad
inc
push
aas
push
sar
sub
mov
not
sub
jmp
ljmp
repnz
rclb
loopne
icebp
out
mov
cmp
lea
divl
xor
lcall
sarb
add
in
in
inc
xor
cs
lock
adc
add
das
dec
jmp
push
loopne
dec
es
adc
adc
cmp
mov
cmp
jge
out
je
test
int
mov
pop
cltd
sahf
mov
push
icebp
jg
pusha
and
test
and
insl
xchg
mov
sbb
mov
xor
ss
xor
dec
popa
ret
mov
test
cmp
test
pop
clc
mov
ret
dec
daa
fdivs
mov
cli
jmp
lods
sbb
loopne
test
mov
sbb
add
lret
rorb
and
add
mov
or
adc
or
and
inc
adc
sub
enter
adc
movsl
popa
aam
js
dec
dec
cmpl
faddl
jg
sbb
xor
adc
xchg
jp
or
fsubrs
mov
stos
and
or
xor
test
aam
inc
pop
sbb
mov
sbb
mov
xor
or
xchg
push
sub
or
mov
addl
add
sbb
pop
je
add
push
loope
stos
sahf
sbb
and
inc
add
popa
arpl
adc
pop
inc
jl
fadds
push
cmpsl
loop
or
adc
or
into
add
and
xchg
mov
loope
or
cmpsb
inc
add
mov
pop
mov
ljmp
sti
jmp
mov
ret
pop
sbb
jle
or
ror
out
xchg
cmp
adc
adc
jle
jmp
loope
dec
dec
cld
mov
fsubl
sub
setge
orl
mov
dec
ret
jne
aaa
or
or
pop
sar
cmp
arpl
and
lahf
xor
sarb
cmp
ja
cmp
pmaxub
and
add
rol
es
stos
pop
dec
pop
aam
iret
dec
mov
mov
scas
dec
push
dec
or
popf
dec
pop
sbb
or
dec
mov
add
lret
jne
loopne
in
mov
hlt
mov
sti
mov
das
pop
mov
lods
pop
push
adc
lods
inc
add
aas
ljmp
dec
inc
cld
xlat
shlb
orb
jnp
xchg
cmp
shll
sbb
inc
adc
xor
push
adc
cmc
push
insb
jl
call
sbb
daa
repz
sub
icebp
and
hlt
incl
sub
and
jne
xchg
int3
das
adc
mov
aas
jno
sbb
xorl
jl
repnz
cmp
and
adc
aam
repnz
out
xchg
mov
cwtl
mov
jmp
sbb
sbb
or
sahf
lret
push
cli
into
jae
mov
add
xor
dec
xor
xor
inc
cltd
mov
outsl
sbbb
push
or
dec
add
sbb
or
push
inc
ds
ljmp
ret
xlat
int
in
incb
jo
sbb
paddd
xchg
in
insb
dec
mov
sub
lea
fadd
dec
and
cld
popa
mov
dec
jmp
dec
scas
clc
out
or
xchg
cs
sti
push
inc
push
clc
pop
inc
jnp
sbb
add
fcompl
push
lds
ss
push
outsl
mov
pop
add
aaa
jmp
xor
mov
mov
insl
dec
in
xor
mov
and
loopne
dec
pop
movsb
js
cmpb
addb
ret
cs
cmpsl
xor
pop
xor
mov
jo
adc
test
addb
pusha
dec
or
aaa
ret
test
ja
lock
mov
aad
dec
rolb
fmuls
push
xor
popf
xlat
xchg
das
std
mov
loope
inc
xor
mov
popf
movsb
std
repnz
and
rcrb
js
push
add
sti
ret
dec
push
inc
lods
push
orb
push
imul
fldl
xchg
and
and
out
jno
lret
add
or
aaa
inc
mov
inc
je
dec
faddl
lods
mov
shl
dec
xchg
mov
add
inc
sbb
jb
subb
push
xor
cltd
or
mov
loope
lea
push
jp
sub
sbb
lret
adc
adc
jae
out
or
ret
adc
orl
sbb
lahf
or
push
pop
test
pop
sub
sub
dec
outsl
movsl
and
mov
rol
inc
das
cltd
xchg
or
jae
adc
mov
xor
adc
out
outsl
ret
vshufps
sbb
xchg
outsl
jl
sub
and
jnp
fwait
jno
dec
sbb
movsb
aas
pop
jmp
jb
mov
ret
pop
ljmp
sbb
sub
jmp
scas
ret
dec
inc
push
lods
jmp
dec
inc
dec
jmp
push
add
cmpsl
xor
jge
add
jecxz
sub
add
gs
loope
stos
add
jmp
sub
es
and
ss
cld
mov
or
sbb
mov
imul
adc
aad
testl
or
ret
nop
sbb
inc
icebp
xchg
xor
movsb
loopne
add
sub
jmp
or
in
adc
xor
test
pop
lret
jbe
daa
push
lcall
mov
cmpsl
mov
mov
sbb
pop
inc
jnp
dec
mov
sub
xor
cmpsl
test
lahf
and
cmp
loopne
add
inc
in
mov
mov
ret
mov
fnstsw
loopne
clc
addb
dec
sub
xor
or
inc
in
or
mov
and
sar
and
scas
subb
and
push
cli
xchg
fsts
adc
lods
adc
shr
shlb
xor
adcb
aam
les
mov
fadd
outsb
vcmppd
sub
push
dec
add
test
xor
or
push
js
cmp
pop
or
test
ret
imul
adcb
cmc
mov
sub
push
outsb
sub
addb
push
adc
pushf
adc
or
xor
cltd
jnp
cltd
les
clc
push
in
add
ds
shl
fidivs
cmp
sbb
lea
fsts
add
mov
fcomps
cmp
jl
int3
test
mov
shl
repnz
cmp
xchg
sbbb
test
adc
shll
ja
xor
repz
lods
pop
xchg
inc
inc
add
mov
test
int3
xchg
lds
in
or
das
movsb
adc
or
adc
imul
jecxz
or
mov
stos
inc
mov
inc
xchg
je
lret
addr16
iret
add
addb
es
js
ljmp
mov
pop
jo
jg
or
daa
xor
add
push
lret
xorl
in
mov
out
mulb
push
add
das
sarb
push
inc
scas
mov
js
mov
popl
sub
adcl
add
mov
sub
mov
decb
cwtl
in
and
pop
adc
arpl
mov
subl
sbbb
repz
push
fnstenv
jecxz
rol
in
aaa
inc
dec
cmc
repnz
adc
xor
hlt
sbb
pushf
cmp
mov
jae,pn
push
repz
and
adc
dec
mov
testb
sbb
pop
imul
hlt
sbb
dec
aad
cld
hlt
add
out
nop
test
or
push
sub
hlt
adc
dec
int3
cmp
sub
ljmp
popa
hlt
subl
outsb
loope
adc
rclb
pop
dec
jp,pn
inc
arpl
stc
cmc
add
lcall
jmp
xor
pop
jle
test
fbstp
adc
push
xor
addl
movsb
push
pop
dec
mov
fdivrs
or
or
mov
jmp
add
push
es
push
or
adc
or
mov
adc
test
addr16
inc
sub
pop
cld
push
xlat
sbb
xor
jbe
js
push
or
pop
lds
inc
push
sbb
fldenv
ret
mov
jge
sbb
dec
or
cmpsl
roll
pushf
hlt
mov
jecxz
lods
xchg
push
jg
int3
setle
and
xor
mov
loopne
or
decl
inc
call
dec
dec
mov
lcall
cmc
roll
call
adc
xorl
out
or
dec
mov
arpl
aad
or
call
add
sub
mov
in
in
push
inc
push
pop
call
add
dec
mov
jnp
xrelease
sbb
adc
jb
cmpsl
xor
inc
push
out
call
into
push
sbb
test
inc
insl
xchg
cmp
add
cli
cli
stos
xchg
mov
inc
loop
mov
fs
or
push
mov
adc
push
dec
or
and
ds
outsl
xchg
sbbl
shrl
adc
hlt
sbb
ds
repz
add
push
lods
cmpps
out
add
jns
loop
dec
in
push
in
adcb
rorl
nop
imul
stos
sbb
add
cltd
push
add
loopne
daa
rclb
sbb
or
add
es
movsb
fsubr
pop
fldenv
hlt
cmpsl
pause
mov
mov
jne
dec
call
ds
pusha
lock
out
lods
xchg
add
inc
cmpsl
in
cmpsl
mov
fisttpl
das
in
stc
pop
in
fsubrs
push
sub
shll
jecxz
dec
sub
or
addl
push
push
mov
adc
fidivs
hlt
ficompl
inc
push
pusha
add
push
not
lret
int3
ds
aaa
in
jne
push
sbb
shll
popa
xchg
lock
out
testl
adc
xchg
mov
leave
dec
sbb
jmp
xor
ret
fstpt
das
ret
inc
sub
scas
orb
inc
cs
push
adc
sub
xchg
dec
loopne
pop
stos
repz
ret
sub
add
adc
add
push
jg
and
adc
movsb
mov
es
fldt
pusha
cwtl
ret
push
sar
int
push
add
lea
fildll
cli
mov
dec
xor
and
pop
xor
or
or
movsl
sbb
jbe
ja
and
ret
and
icebp
es
pop
jno
inc
outsl
mov
xchg
adc
or
xchg
scas
xor
and
shll
cld
stos
push
loope
xor
and
adc
dec
dec
adc
inc
jmp
dec
add
das
pusha
testl
inc
mov
cld
in
mov
and
jmp
enter
std
adc
add
dec
sbb
xchg
loope
xchg
aaa
sti
fmuls
roll
adc
add
add
jl
and
mov
mov
mov
outsl
popf
lcall
adc
divl
insb
cld
add
xor
mov
rolb
mov
int3
and
rcrl
and
cmp
das
flds
outsl
xchg
les
cmp
push
shrl
push
mov
pop
and
add
cmp
mov
fwait
clc
mov
and
in
mov
dec
inc
or
outsb
test
cmp
inc
sbb
inc
or
pop
jne
arpl
cli
divl
adc
inc
pop
rcrb
dec
js
push
nop
aaa
cmp
jne
loop
jo
leave
mov
mov
addr16
lds
and
ret
xor
sbb
mull
lcall
mov
mov
dec
movsl
xlat
aad
sbb
out
cmp
ret
mov
sbb
call
imul
enter
int3
xor
sahf
test
rolb
clc
ret
std
sbb
adcb
rorb
mov
lock
xchg
jnp
icebp
push
add
pop
nop
adc
xor
push
lock
pop
mov
push
push
scas
and
dec
js
cmp
xchg
stos
adc
loop
adc
adc
inc
sbb
mov
test
ljmp
adc
xlat
xchg
ret
mov
xor
daa
cmp
js
xlat
adc
xchg
test
nop
pop
in
dec
insl
shrb
flds
in
adc
xchg
xchg
or
push
out
iret
test
adc
loopne
fsubs
out
add
test
inc
loopne
sbb
sub
andl
icebp
jmpw
movsb
adc
arpl
mov
ljmp
divb
and
add
dec
nop
popf
repnz
and
push
mov
inc
xor
data16
add
push
push
xor
inc
fmull
ljmp
xchg
mov
push
mov
push
xchg
out
push
call
ds
lock
addr16
push
sub
sub
mov
pop
adcb
cltd
mov
or
popa
sar
push
pop
push
add
xchg
in
mov
and
mov
pop
popf
add
dec
push
dec
sarl
xlat
jb
xchg
lea
xchg
sub
inc
xor
data16
sub
fidivs
fcompp
popf
jae
into
addl
cmp
lcall
mov
inc
and
mov
xor
cmp
jo
aad
fdiv
daa
push
add
aaa
fsubl
jne
adc
pusha
repnz
gs
cli
fsubr
and
lds
add
shrb
xor
cmpsb
add
pop
inc
repz
jl
das
push
scas
imul
xor
lds
pop
clc
test
sbb
inc
ljmp
std
mov
and
lret
push
pop
sub
mov
mov
scas
addl
mov
sub
mov
dec
lret
cmp
jecxz
fldl
fstps
inc
add
sahf
sub
rolb
ret
sbb
sub
lret
xor
pop
stos
mov
aad
push
adc
lret
test
hlt
scas
ss
jnp
outsl
and
js
inc
mov
call
jns
dec
add
or
insb
xchg
sub
jmp
pop
ds
push
mov
and
cmp
movsb
jae
inc
inc
outsb
and
das
cmp
lods
orl
es
add
in
xor
jmp
mov
jle
push
ret
cmpl
push
push
fisubl
mov
jbe
cmp
jbe
mov
lahf
data16
sub
fsts
or
pop
inc
sbb
push
ljmp
mov
lret
push
and
add
int
mov
push
inc
inc
mov
bound
add
or
loopne
out
addb
adc
pushf
adc
lods
cmp
fdivl
fimull
das
xchg
ret
or
test
insb
xchg
xor
inc
pop
push
or
and
add
adc
inc
dec
pop
in
xor
inc
and
test
aas
out
xor
ja
add
dec
testb
sbb
push
lods
cmpsb
loopne
dec
dec
mov
sahf
add
and
sub
dec
loope
jo
loopne
push
les
call
test
and
popl
mov
push
pushf
or
pop
rcl
push
lock
mov
mov
fcmovnbe
mov
xor
sbb
sbb
bound
adc
ja
mov
jg
pop
out
add
mov
les
push
add
sar
inc
lods
sbb
lods
sahf
lcall
push
pushf
jnp
or
scas
fs
push
jge
cmpb
add
lods
add
and
dec
xor
adc
add
xorb
mov
imul
lret
jno
call
inc
stc
mov
lods
sub
dec
add
jmp
movsl
aaa
jmp
jae
mov
adc
inc
pop
push
jmp
inc
insl
cmp
je
jnp
lret
punpckhwd
push
mov
ds
lcall
movb
mov
aas
mov
loopne
mov
pusha
add
popa
icebp
xor
outsl
mov
sbb
fwait
pushf
mov
push
ret
mov
fmull
imul
mov
add
test
push
or
xor
push
xor
push
out
or
and
push
sbb
jne
jp
jge
dec
cmp
push
insl
inc
or
jo
inc
sarb
aaa
jge
push
or
add
int
mov
sbb
fwait
inc
or
inc
daa
in
fs
pusha
mov
jae
sbb
xor
ds
mov
mov
movsl
adc
fildl
xchg
add
popa
cmp
vaddsubps
jl
dec
xor
movsb
xor
push
inc
cmp
stos
test
dec
inc
jmp
loopne
pop
or
xlat
enter
es
inc
dec
add
cmpsb
fmuls
adc
clc
xchg
or
pusha
pop
stos
lcall
dec
xchg
add
sub
add
xchg
shlb
jne
jecxz
add
sbb
negl
xor
jnp
cmp
adc
fnstenv
mov
xor
push
rolb
popf
in
jbe
jne
loopne
stos
mov
or
loope
lds
or
aas
xor
xchg
bound
insb
arpl
sbb
jns
adc
adc
ret
mov
mov
lret
in
and
sub
jle
xor
push
repz
jp
jns
aaa
je
jg
pop
inc
xchg
sbb
or
push
or
cltd
xor
or
inc
mov
xor
ss
movb
jo
fnsave
pop
sbb
mov
ret
push
jnp
push
xchg
push
test
cmp
jg
or
ja
jp
int
mov
inc
shll
and
sub
xchg
divb
pop
add
add
fimuls
xorb
inc
and
xchg
inc
push
push
in
add
dec
xchg
mov
or
icebp
loop
andb
cmp
inc
mov
mov
aaa
xchg
cmp
add
pop
mov
mov
loope
push
adc
in
gs
mov
xchg
jnp
xchg
sbb
sbb
dec
aam
adcb
inc
ret
xchg
movsl
cltd
xchg
mov
enter
psraw
pop
pushl
adc
mov
ja
pop
or
mov
jmp
push
push
mov
stos
mov
push
insb
int
fimull
stc
push
mov
add
add
adc
imul
pop
pop
pop
pop
push
add
xlat
lods
sbb
xchg
inc
xlat
cltd
and
ja
and
andl
sub
sbb
pop
aas
or
lock
jbe
or
or
ja
cmp
rcr
xor
popa
or
test
mull
cmp
lahf
je
push
inc
add
stos
mov
fisubrl
adc
fistpll
fyl2x
popa
sub
push
jmp
add
pop
dec
mov
mov
or
sbb
mov
adc
add
dec
lret
data16
and
test
pop
fiaddl
push
sub
dec
pop
mov
lea
ficoms
lret
xchg
rcll
lahf
push
inc
popa
inc
addb
inc
lret
add
pusha
sbb
cmp
pop
xor
dec
imul
bound
rorl
sub
cli
inc
cld
push
jl
cwtl
inc
sub
cmp
or
filds
jbe
cs
icebp
out
xor
xor
daa
sbb
fiadds
lahf
cmp
add
xchg
iret
pop
movsl
test
mov
lods
inc
adc
or
push
jmp
xor
sbb
inc
bound
inc
ltr
or
loop
out
or
mov
sbb
imul
stos
lret
add
js
dec
add
push
sti
adc
insl
mov
jnp
in
jne
xchg
in
inc
adc
dec
mov
addb
push
inc
xor
addl
movsl
adc
testl
es
xor
push
int3
xor
xor
jmp
sub
jb
xor
dec
jo
pop
push
sub
fmul
ljmp
xor
xor
fsubl
mov
leave
or
mov
data16
or
lea
push
arpl
mov
outsb
jmp
adc
sub
sbb
mov
test
mov
mov
rclb
call
jne
sub
inc
je
rolb
and
pushf
jmp
outsl
dec
cwtl
int
loope
ret
push
ja
enter
jnp
adc
push
sbbb
cmp
xchg
or
outsb
dec
loope
push
test
incl
or
sahf
push
out
and
fwait
loop
cld
pop
loop
xchg
adc
mov
daa
sarl
add
mov
int3
out
mov
sub
xorb
xlat
push
jmp
pop
cmc
mov
sbb
adc
lahf
call
jle
sub
adc
in
loop
scas
aaa
repnz
pop
push
and
int3
dec
or
sub
lds
inc
mov
clc
pop
fldenv
inc
ret
push
lds
cli
call
js
fwait
mov
xchg
ja
lock
stos
shlb
sbb
mov
inc
cltd
lods
repz
mov
push
adc
dec
cs
sbb
and
arpl
mov
cwtl
pushf
and
jecxz
popl
jp
das
adc
movsl
add
loop
aas
cmp
mov
mov
incl
jmp
test
movsl
or
xchg
jmp
cmp
loop
xor
dec
pop
push
mov
nop
jecxz
dec
and
pop
jmp
mull
add
test
inc
icebp
enter
or
mov
push
jno
mov
dec
pusha
or
orb
out
fimuls
mov
sbb
lret
inc
clc
movsb
push
adc
js
add
rcrl
adc
call
fldt
pop
adcb
push
lods
inc
cwtl
or
cmp
cmovbe
sub
push
addl
mov
xlat
out
push
push
add
pop
push
daa
mov
ret
das
pop
add
adc
and
fisttpl
or
adc
xor
out
lcall
sub
je
dec
lret
dec
and
dec
inc
rolb
ds
sbb
push
in
add
call
hlt
jae
or
dec
fists
lock
lods
sub
sbb
ds
xor
sbb
cltd
ret
les
fdivrl
sub
mov
inc
xor
loopne
jae
in
movsl
push
in
push
subb
xchg
in
hlt
or
add
jp
add
pushf
sub
mov
mov
xchg
jno
fistpll
adc
mov
pop
stos
enter
jp
xor
js
sarb
add
push
mov
out
faddl
add
xor
lea
les
jns
pop
pop
stos
mov
test
and
and
insl
outsb
push
or
mov
push
dec
xchg
push
mov
adc
ret
andl
fwait
call
imul
popa
rol
stos
mov
call
xor
mov
or
adcl
inc
and
lods
xchg
xchg
push
cwtl
andb
sub
and
add
imul
rorb
test
imul
scas
xor
dec
adc
test
mov
outsl
dec
mov
add
inc
cmp
add
adc
scas
ja
addb
add
inc
scas
mov
mov
negb
sti
hlt
lds
loope
shrb
das
aam
pop
cmp
push
mov
or
inc
dec
lahf
pinsrw
mov
cld
lods
xor
and
and
out
dec
clc
push
out
insb
mov
out
pop
out
add
enter
shrb
cmp
push
mov
dec
add
push
mov
jbe
add
xchg
xor
and
push
shlb
insb
sar
dec
push
dec
xchg
cmp
jne
xor
inc
jmp
or
cmp
add
xchg
or
test
repz
sbb
call
push
mov
popa
add
or
xchg
xchg
xor
mov
inc
push
jmp
and
aas
xor
dec
jb
or
lret
sbb
and
movsb
lock
and
rorb
call
pop
sub
sub
lret
ret
pusha
mov
inc
neg
dec
dec
sub
ja
xor
into
mov
cmp
sbb
sahf
bound
sbb
or
addr16
stos
sahf
movsb
or
inc
lock
xchg
lea
shll
pop
sbb
pop
clc
add
xor
xchg
cmpsl
imul
stc
loope
outsb
mov
adc
loopne
add
lahf
mov
fistpl
and
popf
add
popf
test
pop
add
add
sub
scas
test
daa
adc
push
lock
sub
or
pop
adc
mov
inc
mov
in
call
jns
mov
mov
in
mov
popa
cli
xchg
mov
add
je
cmpsl
lock
divl
fwait
or
inc
jg
jo
pop
leave
loop
jb
mov
xor
call
scas
nop
aas
dec
or
shrb
out
adc
sar
add
sbb
xchg
sahf
movsb
ljmp
and
iret
hlt
cmpb
or
in
push
xchg
fstpt
jmp
fcoml
fldt
and
popa
inc
or
push
push
les
push
pusha
or
adc
push
test
popf
adc
pop
nop
jae
jp
or
xchg
stos
stc
cmpsl
fdivr
and
popf
cmp
loopne
dec
lods
mov
popf
inc
fwait
insl
pop
imul
xchg
movsl
sbb
in
inc
add
adc
dec
jl
dec
jge
stos
jne
fcoms
add
mov
cmp
push
dec
push
and
jmp
sbb
pop
and
jbe
pop
pop
rolb
lods
lret
mov
out
dec
jns
add
inc
hlt
mov
fisubrl
or
sub
xchg
aam
sbb
sub
adc
rclb
stos
mov
call
aam
jo
jecxz
xchg
and
xor
cli
loopne
imul
in
sbb
subb
push
sahf
loop
movlps
push
aam
jmp
xor
in
jae
sbb
add
nop
jno
clc
inc
lcall
mov
inc
mov
sbb
test
aas
push
inc
ret
scas
xor
or
loopne
push
subb
testb
mov
mov
and
push
or
loop
push
dec
in
mov
jno
or
inc
push
in
push
test
xor
imul
cmpsl
stc
adc
jmp
imul
inc
repz
mov
pop
sar
pop
repnz
mov
mov
add
mov
ret
test
or
mov
mov
shr
lahf
outsb
xchg
lret
jne
jl
pop
lds
jg
inc
outsl
or
lock
sub
pusha
pop
sub
rclb
jae
adc
adc
lods
push
dec
rcll
dec
ja
mov
jno
inc
loopne
push
pusha
mov
aaa
sub
adc
and
inc
or
imul
sarl
pusha
adc
mov
hlt
sbb
loopne
mov
add
inc
mov
xchg
xor
nop
and
sub
inc
test
xchg
add
enter
movsl
les
add
sbb
mov
sahf
add
sub
shlb
push
data16
add
es
push
mov
xor
gs
adc
das
jecxz
adc
stc
inc
sbb
lea
ucomiss
jno
int3
inc
movsl
shll
scas
xchg
movsl
push
mov
outsl
add
movsl
push
pop
popa
cmp
push
addb
aad
enter
pop
hlt
or
dec
and
adc
cmp
lods
add
gs
and
xlat
mov
adc
and
inc
test
clc
rol
addr16
movsl
sbb
aam
fadd
test
rclb
pop
scas
test
jge
xchg
lea
xor
xchg
sbb
mov
sarb
mov
inc
sbb
xor
nop
sub
jo
aaa
inc
out
pop
and
xor
int3
iret
shrl
adc
or
ret
xchg
xor
bound
sub
mov
cmp
in
push
jp
jne
test
pop
inc
or
xchg
bound
xor
inc
cmc
pop
sub
outsl
or
xchg
push
fldenv
sub
add
cmp
ja
mov
push
cmp
popa
mov
push
adcl
adc
dec
pushf
in
jmp
mov
subb
das
mov
cmp
test
fiadds
push
mov
pusha
rolb
gs
sbb
sbb
jle
push
fidivrl
dec
clc
mov
sarb
and
out
mov
lock
pop
mov
inc
or
and
and
adc
sub
add
mov
lods
daa
fmuls
popa
xlat
pop
rcl
and
and
cmp
test
inc
add
cmp
mov
cmpsb
imul
add
and
inc
jo
jne
out
xor
xchg
cmpsl
sub
pop
movups
mov
dec
cmp
js
push
mov
cld
sbb
sub
adc
mov
int3
in
or
or
daa
js
imul
xor
lret
dec
xor
xchg
push
out
pushl
mov
inc
mov
lods
add
flds
jl
sbb
xchg
mov
dec
xchg
pop
fsubrl
inc
or
push
sub
xor
loope
pop
dec
loop
and
mov
push
pop
insb
test
sar
fadd
fmull
xor
adc
mov
mov
lret
sub
loop
jl
cmc
mov
push
cmp
pushf
xchg
mov
sbb
shlb
jl
scas
cmp
pusha
movsb
inc
xadd
scas
mov
push
mov
stos
pop
in
roll
aaa
cmp
mov
pop
sti
adc
add
pop
mov
sub
repnz
or
insb
jo
sub
jo
fadds
add
inc
aas
in
and
xchg
or
sub
sbb
mov
clc
jp
add
mov
nop
repz
aam
mov
mov
xchg
lret
fstps
std
mov
add
and
lds
clc
inc
cmp
fcmove
sbb
les
mov
xor
mov
xlat
add
pop
inc
out
cmpsl
mov
shl
add
cld
xchg
push
or
pop
test
sti
sub
and
imul
das
xchg
mov
in
lret
sbb
cmp
xchg
push
adcb
add
adc
xchg
in
movsl
and
inc
cmpsl
xlat
add
mov
inc
mov
test
adc
add
cmp
sbb
cmpsb
pop
jnp
sub
pop
xor
into
xor
jge
push
or
out
mov
outsl
mov
adcb
add
icebp
add
adc
mov
fmuls
mov
hlt
das
insl
pushf
sbb
pusha
and
or
jno
sub
dec
xor
das
pop
rcl
test
loop
or
cs
in
fldt
test
jae
pop
mov
test
ret
ds
insb
cmc
pop
daa
pop
in
sub
jae
test
bound
and
mov
and
jp
clc
xchg
fwait
les
aad
clc
add
hlt
sub
pop
adc
dec
adc
imul
add
mov
fisubl
or
or
xor
pop
push
mov
jg
loopne
jmp
dec
or
add
jecxz
xorb
jmp
jg
fs
xor
addb
rorb
sbb
sub
je
adcb
addb
inc
jmp
sub
jp
inc
cmp
inc
clc
imul
scas
mov
pop
and
mov
pop
aaa
add
jb
jo
pop
xor
inc
subb
adc
nopl
jns
sbb
pushf
stc
or
mov
adc
mov
add
and
dec
pop
mov
push
mov
add
sub
mov
push
push
mov
cwtl
cmp
mov
int3
sub
add
dec
imul
loopne
mov
jne
jp
adc
lds
popa
add
in
outsl
inc
or
add
nop
pop
test
sub
add
adc
and
jg
sub
cli
or
and
mov
gs
sbb
inc
adc
lret
test
dec
or
cltd
inc
cwtl
push
test
add
mov
lods
je
lahf
repnz
pop
out
sahf
jmp
add
cmp
addl
shll
mov
jmp
addl
rclb
cmp
rol
in
jle
popf
jmp
push
or
and
imul
or
inc
xor
pop
and
mov
mov
push
jg
push
push
push
loope
sbb
xadd
fbstp
pusha
roll
pop
mull
and
push
pushw
insl
push
pop
push
test
add
add
cltd
adc
or
sbb
push
pop
fs
inc
insb
and
xchg
sub
mov
xchg
xchg
lret
push
sbb
test
popa
pop
ret
roll
pop
jmp
add
and
or
stos
xchg
mov
mov
mov
xor
dec
cld
loopne
rolb
ret
or
imul
cmp
xchg
rcrl
add
repnz
idiv
add
mov
jge
shrl
mov
ja
sbb
add
sti
dec
sbb
sub
sub
adc
shll
add
aas
push
outsl
cli
sahf
and
pop
data16
xor
scas
mov
das
iret
movsl
cmc
shl
push
hlt
loopne
sub
loop
ds
lods
femms
or
pop
lcall
cs
in
jp
cmp
ficompl
cmp
ss
sbb
icebp
xchg
sub
adc
mov
cmp
sbbb
and
push
add
cmp
loope
outsb
mov
mov
popf
lret
mov
aas
dec
les
jb
add
add
xchg
mov
cmpsb
add
jnp
adc
xor
loopne
js
sub
cmp
fwait
rorb
mov
nop
mov
sti
xor
jo
fisubrs
push
sbb
cli
pop
aam
xchg
add
mov
adc
pop
cmpb
lock
pop
popa
lods
movsb
inc
mov
rclb
or
or
pop
mov
sbb
inc
xchg
and
sub
std
mov
fiadds
add
loopne
xlat
xor
js
mov
ds
call
addl
rcl
sbb
sub
loopne
loopne,pt
or
add
sbb
pop
cmc
fnstenv
and
sbb
add
xor
mov
test
sbb
cltd
or
cs
cmpsb
loope
cmp
or
and
insl
mov
push
stc
add
inc
fs
and
mov
std
adc
add
pop
add
jl
rorb
adc
scas
out
mov
adc
sbb
sbb
add
jbe
adc
xchg
add
pop
loopne
or
adc
imul
sub
adc
xor
test
or
pop
mov
gs
test
aaa
shll
ds
ror
and
fcoml
lock
mul
lock
lods
add
and
outsl
jae
adc
mov
clc
addl
inc
sub
shlb
lds
das
mov
pop
fiadds
in
stc
call
and
movsl
scas
test
dec
mov
movsb
dec
or
imul
iret
add
fwait
or
inc
test
push
shrb
adcb
xchg
aaa
or
ljmp
add
dec
lea
loopne
dec
rol
add
mov
mov
fs
xchg
fs
sub
daa
mov
ja
inc
shll
and
push
add
aaa
movsl
push
and
lret
mov
xchg
xor
jecxz
mov
xorb
lods
add
sbb
cmp
movsl
in
fdivs
mov
jno
xchg
aas
jno
xor
in
testb
pushf
test
push
pop
ja
dec
ja
jecxz
cld
clc
test
add
push
pop
pop
sbb
ret
ret
call
cmpsb
js
ret
mov
mov
push
mov
pop
addr16
shlb
jns
add
mov
mov
clc
fucomip
add
lods
add
xor
and
lcall
inc
stos
movsl
stos
loopne
add
repz
adc
add
invd
cmp
std
mov
es
mov
and
les
inc
add
arpl
mov
adc
push
pop
adc
add
add
add
add
jns
or
mov
or
pop
mov
xor
push
inc
add
aas
pop
mov
mov
pop
adc
testl
or
and
loope
lods
popl
div
aas
fbld
or
add
mov
adc
shrb
notrack
push
fiadds
or
loope
mov
ja
stc
std
dec
pop
jo
add
pop
ficoml
les
mov
push
dec
ret
dec
out
add
push
sub
adc
mov
add
or
xchg
xchg
sbb
jnp
mov
sti
xor
or
dec
mov
sbb
and
lock
in
aas
sbb
leave
inc
aaa
movsb
and
jmp
idivb
push
cmp
inc
sub
mov
movsl
ret
out
mov
add
lret
sahf
in
mov
jne
add
jbe
ja
test
or
pop
fs
clc
ljmp
pop
int
and
adc
mov
xchg
add
jg
jmp
add
nop
test
pop
push
xor
inc
out
iret
pushf
sbb
aas
cwtl
and
add
or
mov
mov
or
or
and
xchg
or
mov
add
add
add
fs
adc
cmp
loop
sub
ljmp
sbb
and
sbb
cmp
ja
mov
adc
xor
cltd
loopne
mov
xchg
dec
adc
sub
xchg
fisubrs
xor
popa
lret
jne
vrsqrtps
fistpll
add
add
add
dec
shlb
pushl
cli
or
pop
add
inc
add
add
cwtl
adc
mov
xchg
push
test
enter
out
pcmpeqb
inc
inc
mov
in
jae
test
fwait
arpl
aaa
pop
pop
adc
mov
push
push
arpl
jmp
and
jl
idiv
outsl
jne
xchg
fs
mov
xor
or
in
mov
subl
sti
fildll
jg
pop
fisttps
sub
pusha
mov
mov
xchg
or
clc
sub
int
push
xor
ds
push
jbe
xor
popf
add
xchg
fnsave
filds
iret
mul
decl
mov
inc
and
and
fneni(8087
inc
pop
fcompl
lds
add
repz
cld
inc
sub
mov
cmp
sub
ret
ljmp
js
jo
or
cmp
stc
mov
hlt
loopne
jg
inc
add
pushf
push
dec
cs
in
fwait
or
jbe
nop
in
in
in
mov
push
stc
decl
push
ds
mov
inc
imul
pop
mov
test
cmc
inc
out
inc
push
outsb
sub
mov
int3
pushf
xlat
push
iret
jne
mov
jle
and
nop
pusha
mov
or
mov
nop
ds
popa
pop
sub
or
and
xchg
jg
jns
push
add
push
add
sbb
or
mov
and
aaa
add
dec
inc
test
scas
mov
xchg
push
add
out
xchg
pop
adc
insl
int3
call
cld
addl
fcompl
xor
mov
and
mov
ss
rcll
call
shr
xchg
inc
leave
add
jg
pop
cs
imul
imul
mov
jb
daa
in
sub
push
xor
mov
push
add
lds
shll
subl
inc
clc
and
add
sbb
ret
lods
lea
daa
add
add
pop
xlat
mov
stc
sti
ret
outsb
add
push
loop
std
js
divb
and
div
movsb
hlt
es
or
ds
pop
cmpsb
daa
jmp
mov
push
cltd
test
mov
fcmovnbe
jo
xchg
cs
and
out
enter
dec
sub
or
hlt
push
cld
adc
aas
cmp
push
jp
call
sub
pushf
hlt
pop
movsl
dec
cmp
leave
add
mov
movsl
add
test
cmp
hlt
mov
push
fnstsw
add
inc
or
fsub
incl
cmc
mov
data16
push
and
fildll
jp
test
ss
mov
insl
andb
adc
xor
cmc
scas
cli
jg
lcall
loope
push
jno
cmp
cmp
and
outsl
cli
movmskps
dec
add
jo
aad
sub
or
movsl
inc
mov
push
add
icebp
inc
in
push
or
pop
push
cmp
or
jl
fucomp
pop
lock
lods
or
adc
mov
and
xchg
loop
aas
inc
gs
shlb
adc
cwtl
sub
mov
jl
mov
push
cmp
xchg
pop
dec
cwtl
pop
mov
pop
cmc
mov
clc
or
sub
call
mov
dec
fmul
fimull
jmp
push
repnz
cmpsl
ljmp
jle
xchg
loopne
or
add
jmp
xor
bound
pop
cmp
into
fcmovbe
jg
outsb
imul
into
call
sub
bound
hlt
dec
ret
loop
iret
mov
fstpt
jbe
cmp
in
loopne
sub
and
add
ljmp
xor
repz
xchg
adc
pop
lock
inc
stc
xchg
xor
imul
mov
xor
in
mov
cmp
jae
or
clc
inc
or
mov
lcall
movsb
mov
ss
dec
call
rorl
add
sbb
mov
ja
mov
dec
pop
push
les
dec
adc
cmp
sub
inc
hlt
in
ja
push
inc
jb
inc
or
dec
inc
sti
stos
cmp
jo
push
mov
lods
hlt
mov
push
or
ljmp
xchg
es
stos
mov
adc
sbb
xchg
test
out
aas
sbb
mov
push
inc
adc
aad
add
enter
dec
adc
das
cli
and
jae
jbe
dec
add
jg
clc
push
and
mov
mov
out
insl
cmp
ja
add
pop
jnp
lahf
cmp
aaa
mov
out
jle
sahf
mov
es
dec
icebp
push
fdivl
xor
mov
inc
or
push
clc
pushl
std
sbb
pushf
or
sti
out
cltd
icebp
nop
jle
or
xchg
aad
js
and
popl
ljmp
sub
adc
inc
jmp
jl
xchg
insb
pop
outsl
into
or
mov
int3
xchg
mov
shl
mov
pushf
cmp
scas
mov
fstpl
pop
jb
and
and
or
loopne
sub
mov
rorb
pusha
mov
dec
and
or
add
fcoms
enter
ljmp
and
outsb
sti
add
cmp
jl
cmp
push
pusha
inc
mov
test
push
call
lcall
leave
cs
ret
pop
push
cmp
ds
sbb
nop
dec
sbb
push
in
sbb
js
fcmovnu
adc
outsb
scas
xlat
and
dec
daa
in
js
or
push
sub
add
test
in
psubq
lret
add
xor
inc
push
cmpl
inc
sbb
pop
in
mov
dec
jecxz
mov
ss
pop
subb
mov
add
jno
sar
or
es
and
js
or
aam
outsl
sub
addl
add
inc
lcall
lock
add
mov
andl
ret
cmp
sbbb
stc
mov
pop
xchg
dec
jmp
push
in
les
or
xlat
out
xchg
mov
jp
loopne
dec
insb
mov
xchg
lret
out
jno
xchg
addr16
divb
enter
cld
sbb
stc
adc
cs
out
push
ja
dec
jg
push
sub
mov
or
dec
fs
test
aaa
or
pushl
or
pop
sbb
add
dec
pop
cmc
inc
mov
cs
mov
ret
mov
push
loopne
jmp
jp
mov
ret
lret
dec
mov
push
mov
dec
pop
cmp
dec
shll
push
sbb
andb
or
add
dec
mov
mov
das
cld
xor
clc
daa
mov
xchg
jecxz
repnz
push
and
cld
test
pop
loopne
sub
sbb
mov
dec
xchg
and
jmp
ss
jle
push
sub
jp
sub
ja
loopne
sbb
sbb
jp
add
in
pusha
xchg
push
mov
pop
mov
push
or
sar
hlt
jg
icebp
push
lods
cld
push
ds
jl
inc
roll
add
inc
fldl
inc
mov
adc
sarb
out
ljmp
push
cltd
inc
sub
xchg
hlt
je
inc
outsl
into
pop
cmc
mov
rorb
lock
adc
pusha
andb
mov
push
sub
cmp
lock
jecxz
pop
push
sbb
inc
cmp
dec
cli
loopne
repnz
xchg
fstps
push
hlt
add
xor
cmp
or
jb
push
lret
sub
fisubl
in
aam
shll
or
inc
outsb
into
adc
push
adc
and
js
ss
jg
mov
add
and
push
fildl
popa
mov
mov
ret
push
sbb
scas
xor
ss
push
push
ret
or
inc
sbb
xlat
adc
mov
repnz
jmp
gs
aad
sbb
loopne
xor
fs
ljmp
and
dec
cli
mov
subl
test
cmp
sub
out
loop
or
aaa
sbb
sbb
xchg
add
incl
adc
movsb
fbld
mov
movsb
xchg
stos
pop
fadds
aam
fsubs
sbb
mov
xchg
push
filds
adc
in
test
call
loop
adc
pop
sub
rclb
adc
lock
and
ficoml
stos
sub
push
pop
loop
cmp
mov
dec
dec
pop
cmp
ss
pop
lods
cld
lods
clc
or
mov
inc
out
add
mov
outsl
lds
subb
shrb
insl
lock
push
cmp
push
xor
jg
shrb
or
adc
fnsave
adc
push
test
mov
push
mov
out
mov
shll
lds
xchg
ja
stc
testl
icebp
sbb
mulb
xchg
add
pop
fwait
test
or
invlpg
inc
cld
xchg
adc
jge
out
mov
int3
and
sbb
add
clc
movsl
mov
cmpsl
cmp
xor
int3
sub
push
mov
mov
pop
js
cmp
inc
outsb
lcall
jne
scas
push
inc
mov
ds
cld
mov
lcall
inc
cmp
add
push
xchg
push
and
push
es
xor
sub
dec
lock
mov
popa
ret
rcrl
std
sbb
jmp
adc
mov
testl
or
repnz
je
push
pop
movsb
add
stos
loopne
sti
xchg
fildl
cld
adc
je
dec
out
adc
dec
rclb
cmp
mov
cld
xchg
bound
inc
fmuls
inc
loop
cmp
push
add
jnp
cld
xorb
mov
pop
jne
cmp
sub
and
inc
movsb
loop
ja
inc
dec
push
cmp
sbb
adc
dec
mov
ret
add
mov
aaa
stos
xchg
outsb
and
add
mov
sbb
stos
ret
fs
ret
cwtl
sbb
xchg
mov
les
hlt
push
arpl
pop
adc
sbb
int3
pop
inc
cmpl
push
fcomp
mov
js
pusha
fucom
and
mov
add
pusha
mov
or
adc
movsl
jecxz
cmp
fisttps
sti
add
sbb
push
cmp
push
mov
lock
sbb
cltd
outsb
out
cmp
dec
int3
fs
xchg
jno
sub
outsl
xchg
cld
mov
loope
scas
enter
fmull
in
inc
jmp
add
hlt
cmp
leave
add
sub
push
sbb
into
sub
sahf
fisttpll
inc
mov
out
cli
pusha
push
mov
add
add
ret
pop
hlt
pop
scas
jnp
sbb
adc
repz
mov
lods
div
dec
cmpl
sarb
cmp
cmp
lds
push
aas
jo
es
sti
incb
shll
mov
mov
and
scas
and
enter
inc
jb
inc
push
xor
sbb
nop
add
xor
pop
lcall
inc
cli
icebp
lods
in
aam
jl
mov
fldt
enter
fcoms
call
mov
jbe
push
cwtl
or
sbb
test
push
das
and
outsb
addb
cmp
jmp
cld
mov
loopne,pt
cmp
lds
fs
xor
sbbb
aad
or
inc
dec
inc
pop
jp
pop
insl
ror
cmc
dec
inc
fsubrp
adc
insb
outsb
js
jmp
jb
mov
pop
outsl
mov
jl
loope
xchg
mov
std
lock
inc
push
mov
sub
add
aad
pop
test
in
stos
ret
adc
mov
xlat
sti
cmpsb
and
cmp
jl
push
push
adc
sub
add
dec
and
adc
jg
out
cs
add
enter
repz
pusha
mov
outsb
jg
js
inc
pop
inc
in
mov
and
push
in
add
lcall
push
movsb
cmp
insb
es
mov
mov
lsl
push
outsl
clc
inc
mov
inc
nop
xchg
and
pop
xchg
xor
push
scas
mov
rcrb
aas
sub
push
xor
insb
fmull
clc
jne
adc
sbb
dec
hlt
mov
insl
sti
sbb
xlat
dec
bound
inc
cmp
mov
test
add
xor
std
cltd
dec
stc
roll
leave
sub
or
jg
out
imul
xor
hlt
addl
sbb
cmp
out
das
mov
bound
repz
jge
jno
cmpsb
push
aas
out
clc
ljmp
incb
cmp
es
or
dec
daa
add
lret
jne
leave
rorb
clc
cmp
cmpsb
mov
ret
in
inc
push
xchg
cmp
shr
mov
pop
dec
in
lret
scas
lea
std
add
dec
in
loope
fwait
push
hlt
inc
xchg
popf
and
mov
push
sbb
fcmovne
inc
mov
xlat
das
shlb
push
jmp
inc
jg
lds
insb
fwait
mov
ret
nop
repnz
xlat
and
cld
xchg
xlat
mov
insb
loopne
mov
lahf
test
dec
popf
add
sti
adc
mov
bound
add
lret
test
pop
call
xor
icebp
sahf
clts
sbbl
in
idivb
sti
dec
pop
xchg
ret
cmp
ficoml
or
insb
lahf
mov
inc
xchg
dec
and
nop
pop
add
or
bound
aaa
aas
repnz
or
nop
mov
adc
sbb
mov
mov
icebp
pop
xchg
cwtl
and
push
adc
addr16
in
jb
mov
sti
sub
push
add
adc
incl
jo
xchg
imull
test
loopne
mov
std
data16
mov
das
sbb
dec
or
jp
rol
sub
mov
icebp
cmp
jmp
add
cwtl
pop
sub
add
lret
aaa
sbb
jecxz
add
dec
in
push
pushf
jmp
pusha
in
adc
mulb
or
xor
cmp
cli
push
rcrl
enter
mov
testb
mov
movsb
xchg
add
aaa
insb
mov
ljmp
out
gs
jmp
mov
pop
fisubl
add
cmp
lret
faddl
fwait
mov
aas
mull
add
outsb
mov
aad
jl
jl
add
sbb
pop
test
stc
sbb
inc
cmp
xor
fwait
call
pop
loopne
scas
lock
test
push
mov
outsb
loop
inc
inc
and
stos
pop
mov
and
xchg
and
clc
scas
mov
mov
sbb
cmpsb
add
xchg
mov
jnp
lock
push
sahf
mov
jg
aad
mov
mov
adc
xchg
daa
cmp
cmp
adcl
jmp
pop
mov
mov
pusha
shrl
mov
insb
sarb
aam
jbe
jge
pop
movsl
inc
andl
loopne
inc
inc
cmpsl
nop
dec
je
push
loope
xchg
mov
adc
out
or
pop
scas
shrb
nop
adc
xor
out
popa
dec
pop
test
sbb
loopne
cmp
lret
jbe
hlt
sbb
cmp
cmp
lea
or
aam
clc
stc
xor
pop
mov
fs
mov
fistpll
xchg
clc
inc
arpl
push
dec
loope
aad
mov
jnp
fisubl
pop
dec
or
pop
rcrb
pusha
shll
xchg
dec
sub
push
test
das
clc
add
fmuls
jecxz
xchg
loope
scas
aam
push
xchg
leave
clc
pop
gs
and
sub
call
push
cld
cmp
inc
xor
cli
sbb
ss
add
loop
xchg
daa
orl
fdivrl
pusha
les
insb
inc
push
mov
mov
or
into
xchg
dec
mov
push
xor
pop
push
bound
or
aas
std
push
fs
push
fldl
mov
roll
mov
sbb
mov
pop
sbb
push
mov
fmul
repnz
icebp
mov
cmc
fmull
aas
or
int3
add
int3
scas
jo
jno
sbb
xor
pop
push
adc
push
inc
es
je
mov
or
pop
inc
cld
repnz
clc
fbstp
adcl
xchg
and
sub
cmp
push
sbb
mov
sub
cmp
or
pop
and
mov
sub
push
sbb
das
mov
mov
out
cld
cltd
clc
xor
test
aad
sub
test
loopne
sbb
xor
jp
mov
fsubr
outsl
das
add
ret
int
xor
rcll
in
andl
pop
push
jo
movhps
dec
or
inc
jnp
lods
sbb
sub
xchg
scas
xor
mov
in
test
or
push
jl
push
sarb
int3
test
or
les
in
aaa
jg
lea
scas
push
jb
lret
xchg
or
aam
imul
mov
jl
dec
int3
loop
std
sbb
andb
mov
mov
mov
mov
add
aam
mov
sbb
out
repz
cld
rcrl
or
mov
mov
loop
mov
fidivrl
add
or
dec
and
rclb
jns
jg
xchg
add
mov
xchg
loopne
lahf
and
pop
sub
xor
cld
int
insl
aaa
add
stos
fistpll
pop
inc
jbe
arpl
or
vpminsw
js
daa
lods
bound
cld
sbb
push
push
test
mov
add
mov
ja
subb
pop
call
jmp
cmc
cs
mov
insb
sbb
outsb
nop
or
adc
mov
decl
push
push
xchg
add
adc
sub
insb
xchg
sti
sub
push
loop
push
jmp
inc
and
dec
les
push
inc
or
pop
xchg
nop
inc
iret
sbb
and
movsl
mov
aam
jl
or
push
je
mov
cwtl
xor
fisttps
xor
adcl
sbb
stos
mov
mov
cmp
je
mov
setno
jle
cwtl
pop
add
push
ret
adc
adc
push
mov
adc
mov
int3
in
push
test
mov
int3
test
add
push
fiaddl
incb
cmpsb
stos
add
mov
jecxz
ljmp
xchg
je
pop
fcomps
out
inc
xchg
push
cld
and
inc
mov
ss
aaa
jns
push
hlt
or
fidivs
or
jle
mov
pop
fcompl
out
inc
push
in
and
les
jo
mov
lods
call
jae,pn
and
lock
mov
jmp
push
mov
inc
out
ret
adc
jge
xchg
jb
pop
aam
testl
dec
sarb
sub
mov
cltd
movsb
loope
ss
pop
rorl
lock
inc
mov
je
hlt
push
pop
je
std
ret
pop
mov
mov
sub
or
mov
std
pushf
test
adc
js
lcall
adc
test
pop
pushf
ficompl
xchg
loope
inc
fwait
jno
loope
dec
add
scas
jle
pushf
mov
fdivp
call
movsb
inc
jp
sbb
notb
mull
scas
cli
or
add
add
js
xor
jle
and
inc
xchg
sarb
and
adc
cltd
push
mov
and
jge
dec
pop
pop
out
gs
add
xor
ds
xor
js
icebp
mov
dec
jp
push
fcoml
das
push
mov
aam
push
test
xchg
mov
js
xor
pop
aam
pop
xchg
pop
dec
fwait
push
mov
dec
xor
dec
mov
jnp
pusha
stos
int3
adc
addb
and
and
push
add
lods
mov
lcall
xor
sbb
loop
mov
lret
push
mov
xchg
and
sub
lds
loope
decl
dec
xchg
jge
jae
daa
add
jno
movsl
shl
pop
dec
mov
decb
cmc
stos
mov
pop
sbb
xor
std
jecxz
jg
xchg
adc
mov
xor
enter
add
clc
out
sti
mov
pop
cltd
cmpsb
pop
cwtl
lods
adc
mov
add
push
mov
or
outsl
mov
jo
or
lods
or
dec
pop
jg
mov
mov
mov
mov
add
or
lds
cmp
enter
mov
inc
jb
je
inc
add
insl
push
imulb
push
xor
push
add
fwait
ljmp
mov
mov
mov
pop
mov
into
sahf
add
jo
pushl
mov
addb
decl
push
pop
pop
rorb
add
es
in
mov
cwtl
mov
shr
call
stc
wbinvd
adc
cmpl
cli
lahf
xlat
sbb
cltd
insb
sbb
and
loop
sub
aas
jle
addb
xor
aam
loopne
call
and
incl
adc
fbld
adc
lahf
fbld
jne
dec
xorb
hlt
orb
cmp
adc
dec
cld
push
lods
das
and
rclb
faddl
pop
repz
jg
add
add
mov
add
push
xchg
test
test
add
cmp
sub
orb
aam
sti
fisttpl
das
sti
mov
cmp
jo
or
rcl
popf
loope
sti
cmpsb
stos
jg
int3
loope
xchg
and
jo
xchg
and
out
push
or
ljmp
jo
scas
xchg
cltd
push
fidivrl
sbb
mov
mov
stos
lret
xor
loop
fdivp
pop
inc
or
call
scas
decl
testb
scas
and
adc
sub
sti
lds
or
outsl
mov
inc
outsb
call
cmp
outsb
outsb
int3
mov
pop
xor
mov
ffree
pop
fsubrs
add
xchg
fwait
jb
xchg
aad
mov
ljmp
out
sub
inc
and
pop
cmp
push
stos
push
cld
or
mov
fimull
mov
push
xor
loope
cli
inc
inc
cmp
push
or
jg
mov
jmp
dec
cmpsb
fs
ss
mov
cmp
mov
dec
outsl
rolb
cs
filds
rcll
icebp
add
push
xor
mov
adc
xchg
nop
pop
sbb
sti
xchg
scas
cwtl
popa
sub
dec
aad
mov
inc
test
push
stos
out
or
push
les
out
cli
add
pop
in
adcl
cmc
dec
xor
fs
ljmp
and
lock
inc
pop
and
xchg
xchg
pop
inc
mov
fiaddl
negb
or
mov
lods
lods
xor
jmp
add
out
adc
mov
inc
jl
outsl
cli
xchg
push
mov
in
adc
ret
movsb
aam
fmuls
idivb
mov
inc
push
sbb
push
in
pop
cmpl
pusha
add
adc
mov
cmpl
push
insl
ja
or
add
shr
jle
xor
sub
adc
or
data16
nop
mov
lret
push
push
adc
out
bound
pop
aad
fisubl
mov
test
ficoms
jle
pop
cmc
jl
lock
lahf
stos
les
or
fwait
movsb
xchg
adc
mov
in
rolb
push
lcall
fcomi
add
dec
mov
int3
pop
cmpsb
int3
xor
adc
or
dec
out
adc
push
dec
js
mov
inc
gs
inc
mov
jle
fadds
jno
pop
movsl
insl
jg
dec
xchg
test
lret
test
imul
dec
mov
je
mov
in
cmpsl
incl
js
aam
cmp
add
addr16
gs
or
or
dec
xchg
cs
adcl
scas
push
cwtl
js
xor
je
lcall
bound
add
push
jecxz
xchg
mov
dec
roll
scas
pop
js
lds
lcall
pop
jo
ret
mov
pushf
inc
mov
shl
into
sbb
cmp
jnp
mov
test
inc
test
cmpsb
inc
ret
add
push
sub
faddl
das
push
test
stc
jg
push
jp
mov
and
push
sub
adc
xor
lods
jle
sbb
mov
pop
insl
mov
mov
stc
in
pusha
inc
push
pushl
insb
mov
fldl
xchg
jb
imul
mov
fdivs
dec
jmp
in
push
aad
jp
test
repz
mov
repnz
cwtl
cmpl
ds
testb
sbb
ret
pop
sbb
pop
mov
ja
and
outsl
arpl
or
lock
cmpsb
jbe
add
fcomip
pop
adc
and
inc
imul
and
mov
mov
xchg
icebp
cli
adc
enter
loopne
jo
and
or
fistps
and
fidivs
inc
cmpsl
push
sub
in
push
push
push
in
fwait
xorl
lcall
nop
dec
ljmp
add
pop
mov
pop
mov
lcall
imul
repnz
test
loopne
lods
clc
sbbb
std
ret
jecxz
jo
ljmp
imulb
mov
jl
movsl
movsb
data16
dec
adc
out
add
call
push
fstpt
cmp
shl
repz
push
repnz
push
mov
loop
jle
out
in
js
sar
inc
pop
pop
jp
lods
dec
add
inc
rolb
xor
das
sub
sub
aas
pop
lods
pushl
add
stc
ds
in
cmc
cli
jg
loop
jb,pt
orl
test
xchg
jg
pusha
mov
rcll
mov
mov
or
add
movsb
sbb
icebp
sub
xor
enter
or
pop
dec
fdivrl
lods
das
test
fbld
push
sub
pop
push
xorb
fisttpl
pop
xchg
adc
cmp
xchg
rcpps
xor
cmp
jg
pop
inc
add
mov
repnz
jg
ret
lcall
add
jg
cli
or
mov
repnz
in
imulb
add
lea
ret
or
aaa
shll
or
cmp
pop
mov
adc
push
adc
stos
das
shlb
movsb
mov
jo
dec
lods
lret
shlb
add
clc
mov
clc
nop
cmp
add
or
cmp
inc
push
fisubrs
leave
jg
repz
or
mov
fisubrl
iret
imul
xor
fistpl
push
adc
movsb
jmp
sbb
sub
or
inc
xor
sub
xor
mov
sbbb
inc
push
jno
stos
dec
fsubl
cmc
jne
xor
xorl
xchg
cmp
dec
push
mov
data16
int3
add
mov
jbe
decl
shr
outsl
push
push
out
adc
rolb
add
cs
sbb
fistps
fs
push
add
outsb
sahf
loope
push
sub
and
adc
adc
mov
xchg
dec
xor
inc
fisttpl
jae
jle
and
pop
rcll
jbe
fucomp
movsl
subb
or
scas
lods
fcoms
sub
mov
lods
add
mov
pop
add
push
sub
mov
fstl
xorl
cmp
push
test
ja
mull
bnd
cmp
stc
mov
test
mov
pop
iret
rclb
mov
aas
add
fnsave
jp
subb
add
inc
decb
aas
fsts
cld
and
cwtl
insl
add
push
in
imul
inc
jle
in
adc
fucomip
bound
mov
out
sub
arpl
mov
or
pushl
cmp
cli
faddl
add
arpl
add
xchg
aas
insl
adc
call
adc
and
mov
enter
out
scas
cli
aas
push
mov
iret
xchg
push
iret
je
mov
aad
test
xchg
cwtl
xor
aam
rcrb
sbb
lock
pushl
daa
or
dec
dec
int3
xor
or
or
xchg
push
mov
cli
sub
push
or
mov
cld
and
pop
pop
aad
push
jb
pcmpeqd
insb
add
cld
mov
adc
add
mov
xlat
pushf
addb
mov
sub
mov
mov
fildl
xchg
and
cld
pop
call
inc
pop
add
xor
mov
iret
sub
cltd
mov
scas
xor
insl
mov
adc
pusha
shrl
xchg
bnd
sarl
add
inc
clc
jp
xor
in
or
mov
push
test
jge
pop
loopne,pn
test
outsl
add
es
rcrb
mov
jge
movsb
cmp
sbb
push
push
sbb
mov
test
jb
mov
fistpll
stos
test
shll
sub
add
dec
or
jp
jle
je
scas
adc
mov
popa
dec
mov
adc
mov
or
cmc
mov
xor
pop
xorb
sbb
adc
ret
lock
xchg
mov
je
and
add
xorl
push
bound
rol
aam
pusha
and
mov
clc
loop
cli
das
mov
pusha
movsb
cli
fsubs
js
outsb
mov
test
mov
aaa
adc
loop
cmp
sub
pop
mov
push
fwait
cmc
push
aam
jbe
fisubrs
sub
fbld
inc
clc
dec
pop
pop
jle
sub
cld
jp
stos
xor
testb
bound
and
cwtl
adc
inc
or
push
push
cltd
mov
sub
mov
in
adc
mov
lods
jb
cltd
pop
push
jno
lret
inc
mov
mov
push
inc
mov
jbe
lahf
mov
pushf
xor
inc
fcmove
cmc
mov
mov
push
mov
jl
inc
mov
cmp
xor
sub
rorb
mov
clc
bound
xchg
es
mov
popf
xchg
ss
loope
outsl
sbb
lret
sub
cmp
cwtl
add
mov
dec
adc
call
repz
dec
dec
mov
mov
sbb
rcr
sbb
and
mov
pop
or
mov
inc
inc
loopne
dec
out
pushf
jmp
loopne
mov
push
cmp
outsb
adc
xor
js
xchg
mov
dec
loope
add
lods
inc
shll
cltd
add
pop
cwtl
push
sbb
xchg
xchg
fildl
sub
notb
xchg
mov
mov
inc
fadds
lock
dec
or
inc
gs
dec
add
xlat
adc
lods
pop
or
jmp
and
xchg
jle
push
inc
fstpt
dec
jp
movsb
inc
adc
orb
fadds
scas
pop
push
mov
mov
push
xchg
jg
enter
jb
in
aam
pushl
xor
out
insl
lds
inc
test
jecxz
jnp
pushf
xor
xor
mov
stos
sbb
mov
into
push
lea
mov
pop
mov
call
pop
mov
imul
xchg
jb
mov
xor
jg
cs
pop
pop
test
add
xor
mov
mov
xchg
add
out
jo
jo
in
cwtl
inc
out
enter
pushf
mov
incl
into
xchg
push
movsl
and
je
jp
fisubl
jmp
sub
pop
mov
mov
rolb
pop
jmp
mov
jecxz
mov
stc
adc
stos
add
or
xchg
mov
push
mov
sbbb
or
pop
in
adc
pop
sub
arpl
jg
lods
inc
jmpw
jae
sarl
iret
mov
clc
lock
pop
sub
xchg
sbb
inc
out
add
shrl
add
dec
aaa
add
outsl
std
jno
pop
mov
sub
out
inc
or
aad
jl
mov
pop
inc
dec
mov
jmp
rclb
rcrb
pop
xor
mov
filds
pop
dec
mov
call
mov
jbe
adc
pop
adc
flds
xor
jle
or
inc
jo
lahf
data16
inc
scas
lcall
decl
add
xchg
mov
dec
xor
xorb
clc
push
cld
in
ljmp
and
cmc
scas
dec
pop
jmp
cmpb
out
ljmp
xor
test
jle
cs
int3
loope,pn
test
aaa
pop
decb
xor
push
fmulp
lcall
scas
and
add
hlt
fldenv
or
inc
xor
dec
cmp
pop
mov
pop
jo
roll
mov
inc
or
push
jne
js
mov
push
out
xchg
mov
lret
sub
decl
cli
mov
and
pop
in
or
cld
jle
lods
out
or
test
rorb
push
lret
sbb
adc
subl
loopne
jle
adc
outsb
jne
fwait
sub
xor
iret
cmp
lcall
adc
pop
loope
sbb
dec
ja
pop
push
xor
mov
outsb
xchg
jae
adc
pop
ja
fists
xor
pop
jne
mov
mov
cmpsb
out
add
lahf
lods
dec
incl
mov
fdivrl
add
push
sbb
inc
mov
xor
fcomi
or
cmp
xor
push
jae
ss
xor
xor
loopne
mov
mov
ja
popf
test
xchg
pop
ljmp
aas
dec
jae
mov
pop
push
push
cmpsl
sahf
gs
mov
data16
and
test
nop
push
sbb
pop
call
pop
cwtl
push
add
xor
fwait
stos
mov
fistpll
inc
fucomi
shl
mov
call
jne
xchg
mov
aaa
xchg
dec
movsl
hlt
into
test
push
push
test
mov
adc
add
jo
jmp
add
loopne
out
inc
or
outsl
pop
leave
mov
jb
push
rcll
movlps
bndstx
mov
sub
mov
push
ret
pusha
sub
repnz
stos
addl
xchg
mov
icebp
jmp
and
xchg
ja
or
es
inc
loopne
outsb
ficompl
adc
or
cli
leave
mov
or
sarb
sbb
out
mov
sbb
movsb
pop
jle
arpl
inc
push
orl
in
pop
scas
adc
mov
mov
movsl
add
mov
pop
sbb
js
out
adc
and
shrb
mov
xchg
js
fildll
sbb
inc
lahf
inc
jo
dec
mov
mov
ss
clc
sbb
mov
xor
add
notb
and
dec
and
les
arpl
xchg
push
fadd
adc
pop
addr16
xchg
and
xlat
aaa
je
xchg
sbb
jge
sbb
ja
mulps
mov
mov
decl
outsb
mov
movsl
imul
mov
js
movsl
mov
xchg
cmp
enter
or
xchg
hlt
sbb
push
mov
inc
into
call
loope
das
movb
cmpsb
add
mov
inc
or
add
fs
test
sub
les
jecxz
in
mov
mov
lahf
lock
aaa
lods
call
leave
cld
mov
adc
pmaxub
cmp
sbb
jns
scas
decb
in
stos
cli
xchg
adc
jecxz
or
xchg
pop
jbe
xchg
push
sbb
ss
push
mov
mov
mov
push
fstps
jbe
sbb
mov
push
call
leave
add
test
sub
ret
les
mov
pop
sub
xor
out
adc
mov
pop
pop
xchg
stc
dec
inc
movsb
or
or
js
test
rcr
jo
imul
loope
jp
xor
loopne
cwtl
pop
and
fwait
mov
dec
loopne
push
jg
das
jmp
inc
add
adc
adc
pop
mov
add
cmpsl
call
mov
jbe
shrl
out
pushf
gs
dec
push
cli
mov
cs
dec
leave
inc
and
ret
in
dec
pusha
inc
adc
push
inc
mov
shlb
movsb
jb
jg
call
jo
loope
jg
jbe
les
cli
jg
mov
test
aam
pop
add
cmp
ljmp
cmp
sub
mov
jp
daa
add
mov
push
mov
pop
and
push
and
or
clc
loopne
dec
jp
aad
clc
ja
nop
leave
cmc
das
push
pushf
push
mov
pushf
icebp
pop
pusha
rcll
adc
adc
cwtl
test
cwtl
das
js
or
xchg
movsb
jae
fidivrl
ljmp
icebp
push
cmp
orl
or
mov
jl
or
sbb
mov
iret
xor
pushl
les
shrb
out
and
xchg
jge
ret
and
into
cmp
mov
mov
xchg
pop
add
pop
or
jg
xchg
mov
push
push
xchg
cltd
test
jecxz
pop
incl
and
push
add
push
and
push
mov
cmp
push
ret
adc
enter
aad
lock
sahf
cmp
pop
hlt
mov
pusha
loop
sbb
sbb
aam
jmp
iret
jb
enter
sbb
call
subb
cwtl
push
sarb
pop
cltd
test
ret
popf
cmp
mov
mov
cmp
mov
loop
jnp
movsb
in
cmpsl
pop
je
int
nop
mov
sub
jecxz
pop
sbbl
in
inc
mov
cmp
push
mov
jbe
or
jae
ret
add
dec
in
test
mov
cmp
inc
adc
outsl
pop
hlt
cmp
sub
dec
rorb
mov
lahf
rcr
rcr
fdiv
orb
cli
test
roll
adc
inc
pop
lret
push
mov
in
das
mov
jecxz
or
dec
mov
mov
push
clc
sbb
dec
push
into
adc
das
test
pop
fdivp
in
shlb
sbb
movsl
xchg
ljmp
lret
sahf
out
jb
inc
lea
lahf
mov
mov
out
mov
xchg
repz
jg
xchg
cmpsl
mov
outsl
hlt
add
rcrb
loop
pushf
cmpsb
out
sub
mov
dec
sbb
sub
popa
mov
hlt
lret
pop
ljmp
stos
cmp
pop
lret
add
mov
fs
xchg
dec
dec
addr16
dec
add
movsl
inc
aaa
test
notl
push
push
jno
int
addb
clc
push
outsb
jo
daa
stos
mov
es
cli
test
jno
pop
mov
call
test
ss
int
or
or
sbb
movsl
and
mov
fldz
mov
mov
repnz
add
fs
sub
repnz
add
test
jo
out
cli
pop
out
aam
popf
filds
cmp
in
xchg
rolb
pop
dec
mov
insb
lret
js
mov
xchg
sbb
test
cs
sar
negb
sbb
dec
inc
loop
push
js
iret
sarb
sti
push
xor
out
dec
push
xor
scas
into
mov
nop
push
rorb
xchg
jbe
pop
stos
daa
bound
mov
pop
fisubrs
lock
imul
rcrb
aaa
fdivrl
adc
test
mov
out
pop
add
sub
insb
mov
lahf
xchg
icebp
call
sbb
mov
mov
cmp
xor
sbbb
cs
hlt
adc
sarl
mov
inc
fwait
cmp
xor
mov
sbb
push
sbb
test
lahf
das
gs
push
pop
mov
dec
fdecstp
test
lret
push
ficomps
mov
cs
adc
vmovsd
jp
mov
cmp
mov
mov
cmpsl
push
or
sub
mov
ds
fdivr
outsb
ret
lock
sub
loop
mov
sbb
jg
enter
aam
push
cmp
aam
jl
add
in
push
inc
cld
mov
push
and
sbbb
sahf
shlb
cmc
stos
push
lds
add
icebp
pushl
lods
dec
bound
hlt
xor
add
xchg
add
jecxz
mov
std
jg
fsubrp
xchg
int
rcrl
loope
mov
in
push
shr
xor
sbb
cli
and
sahf
in
out
mov
push
mov
pop
adc
mov
jge
lcall
int3
mov
pop
mov
stos
enter
mov
sub
jns
xor
fbstp
pusha
add
jmp
xchg
outsb
sbb
push
into
sbb
jo
movsb
fnstsw
inc
arpl
fcomip
jg
and
add
int
aas
jb
xchg
or
test
add
test
hlt
mov
mov
inc
imul
inc
dec
or
and
out
std
jbe
inc
addr16
cld
adc
pop
push
jg
aas
enter
shlb
xor
sbb
loop
xor
jle
pusha
add
fwait
ss
or
dec
pop
dec
cmp
mov
adc
aas
pusha
cltd
pop
popa
movsb
push
call
outsl
pop
lods
mov
in
xor
add
push
jmp
fildll
mov
dec
test
iret
addb
ds
push
add
xchg
add
addr16
in
dec
sub
sub
xchg
or
incl
mov
mov
jle
inc
pop
inc
test
pop
icebp
or
je
gs
dec
mov
orl
idivb
mov
pop
std
and
lock
decl
ret
dec
jo
stos
cmp
imul
loope
push
shlb
pop
subb
cmp
enter
movsb
jnp
dec
ss
nop
call
pop
loopne
jle
sbb
cli
inc
inc
push
mov
sbb
jno
sbb
mov
adc
or
or
aas
jle
xchg
adc
lret
pop
imul
add
ror
xlat
gs
cwtl
add
pop
mov
ret
lcall
add
lock
in
adc
xchg
mov
jge
add
scas
cmp
mov
jno
test
push
sub
and
push
inc
iret
nop
mov
mov
lcall
repnz
das
clc
pop
mov
push
inc
mov
enter
js
mov
or
sbb
push
outsb
daa
arpl
and
ss
xchg
pop
push
cmc
pop
mov
cmpsl
out
mov
push
cli
sar
mov
ror
dec
adc
dec
jns
push
loopne
and
inc
addr16
dec
cmp
fsubp
subl
push
js
es
sbb
sbb
sub
xor
xlat
add
in
xor
test
and
pop
inc
xor
cld
arpl
stos
dec
jns
add
cmp
sbb
sub
cld
xlat
sbb
lods
arpl
add
mov
dec
sbb
inc
adc
xchg
repnz
sub
mov
add
add
insl
inc
xor
les
pop
adc
andl
and
adc
inc
cmp
aad
and
in
adcl
pop
sub
mov
add
rcrl
pop
divb
xchg
and
mov
and
ljmp
mov
cwtl
fcmovu
mov
jmp
or
mov
hlt
sbb
mov
jns
fxch
clc
mov
test
sbbb
and
inc
xchg
pusha
movsl
scas
mov
sub
out
orb
loope
imul
adc
js
mov
in
sub
aas
pop
dec
jl
subb
fs
push
fcomps
sbb
mov
dec
pop
pop
lea
cwtl
mov
cmpsb
xchg
inc
cmp
stc
insb
adc
push
and
repz
inc
in
lock
jg
lds
adc
jno
add
lahf
sbb
test
dec
sbb
fisttps
shlb
inc
mov
inc
fmull
mov
jns
decl
pop
push
addb
cli
stos
mov
dec
shrb
dec
jnp
icebp
jnp
push
mov
adc
clc
mov
mov
jecxz
or
aad
mov
test
mov
insl
fisttps
dec
jecxz
pop
cs
jg
scas
lret
push
and
jmp
lds
adc
xchg
push
mov
pusha
imul
jns
mov
inc
in
into
mov
rol
dec
mov
mov
mov
cli
sbb
addr16
dec
arpl
dec
fsubrp
scas
push
and
fdivl
scas
add
rclb
push
es
call
and
xor
or
out
pop
and
jg
mov
roll
dec
cmp
xor
into
jmp
pop
lock
jle
sti
in
cltd
mov
mov
or
repz
push
and
and
cs
mov
inc
stc
mov
mov
mov
mov
push
or
mov
pop
jl
outsb
test
mov
sub
mov
loop
je
ret
pop
xor
mov
push
adc
mov
inc
lock
mov
in
adc
push
aad
ret
xor
jne
pop
mov
mov
arpl
jo
hlt
sbb
cmpsb
daa
inc
sub
bound
ret
call
mov
or
or
mov
jp
shrb
jl
or
add
dec
incl
cmp
push
add
outsb
jecxz
adc
add
clc
filds
imul
cmp
aam
ja
addr16
imul
cmp
and
lock
add
icebp
aad
aaa
xchg
push
shll
sbb
js
mov
dec
cli
call
lcall
xor
or
and
ret
incl
xchg
and
ljmp
loop
fs
lds
jge
hlt
and
cmc
std
push
jb
pusha
lret
cmp
mov
push
negb
push
mov
mov
push
ret
add
lret
or
nop
stc
add
dec
mov
aad
sub
and
mov
aas
out
pop
or
mov
dec
out
pop
add
das
js
dec
and
divl
in
addl
pop
lahf
stos
dec
ja
flds
add
hlt
fists
jne
mov
mov
xchg
adc
cmp
mov
in
or
aam
or
les
in
pop
hlt
lcall
sahf
adc
add
push
loop
cmp
cs
xchg
sbb
jecxz
sub
out
pop
adcl
xor
push
xchg
dec
pusha
sub
jo
cmp
leave
jne
stos
push
fadds
neg
add
nop
les
dec
add
or
push
pop
jo
dec
jmp
sub
mov
ljmp
or
popf
add
outsl
push
mov
pushf
xor
add
add
adc
or
add
ficoms
stos
mov
bound
sbb
inc
or
inc
loope
fwait
add
stos
outsb
sbb
rcl
repnz
cmp
scas
mov
or
femms
imul
lds
inc
xor
test
mov
rcrl
lods
add
push
rcrl
xor
aad
fcomps
or
inc
cld
cmpsl
mov
call
xchg
mov
inc
cli
sub
adc
mov
pushf
stos
and
add
repnz
xchg
mov
dec
lds
or
cmp
inc
xor
sub
repz
jb
cmp
push
movsl
leave
incl
dec
andl
cmpsb
mov
shlb
call
xor
mov
call
andb
mov
andb
loopne
pop
cmpsl
cwtl
xor
sbb
xchg
mov
inc
pushf
aad
mov
ljmp
ret
mov
sbb
sahf
clc
outsb
stos
or
hlt
jo
cli
or
call
and
and
inc
in
mov
cmp
clc
cmpsb
ljmp
and
mov
outsb
sarl
add
sbb
les
xor
sub
incl
cld
clc
les
cmpsb
and
dec
test
add
inc
pop
xchg
imul
std
incl
pop
mov
sub
rorb
outsl
pop
cld
in
push
inc
cmp
repz
cmp
loop
inc
sti
jge
in
fiadds
xchg
xor
inc
cs
scas
mov
sbb
cmpsl
jb
adc
sub
adc
sbb
and
mov
cli
addl
mov
sbb
rcll
push
loopne
jecxz
jo
sub
pop
and
ret
aad
xchg
ret
xchg
icebp
or
mov
add
mov
das
fs
int3
loope
cmp
mov
out
lcall
mov
add
std
loop
test
lods
xchg
data16
jl
out
inc
xchg
or
popf
mov
or
dec
mov
jle
mov
push
mov
movsl
sbb
cli
pop
cmp
clc
jg
ret
mov
addr16
fildll
mov
push
sub
adc
adc
sbbb
or
sub
cmp
cmp
inc
daa
pop
pop
lods
add
outsb
hlt
jp
in
mov
loop
xor
icebp
mov
pop
jge
inc
adc
sar
pop
incl
adc
scas
nop
mov
xchg
jg
je
mov
pusha
test
fsubl
xchg
cld
and
xchg
jne
dec
cli
push
fisttpl
inc
imull
xor
xor
mov
cmp
mov
mov
pop
lret
sub
and
arpl
push
xor
and
shll
jg
repnz
jle,pt
pop
pop
js
arpl
fcom
add
hlt
out
add
mov
fnsave
add
adc
adc
sar
inc
sub
xchg
push
sbbb
les
in
mov
push
adc
xor
clc
and
rorb
add
test
adc
sub
cmp
pop
orb
and
or
mov
jnp
aam
sti
mov
sbb
scas
xchg
inc
in
push
cld
and
repnz
testb
sub
int3
sub
xchg
adc
rorb
int
mov
lret
and
and
mov
clc
or
pusha
lods
and
mov
cmp
fs
sarl
cmp
mov
dec
pop
je
mov
and
jge
pop
inc
cmpsl
hlt
inc
sbb
scas
inc
xchg
ss
js
pop
lcall
inc
scas
jp
mov
and
fcom
sbb
aas
mov
cmp
inc
adc
pop
cmc
inc
rorb
cld
sahf
es
in
dec
jmp
inc
push
dec
pop
lahf
sbb
idiv
int3
cli
insb
pop
mov
dec
dec
sbb
pop
inc
jb
ja
add
mov
and
push
in
les
popf
xorb
or
push
cld
push
inc
int
pop
adc
loopne
ljmp
insl
pop
mov
inc
popf
fwait
xchg
popf
mov
push
jmp
rorl
dec
or
adc
jno
or
or
jne
add
xor
push
cmpsb
push
std
adc
and
add
subl
push
jmp
inc
mov
cmc
dec
das
cmp
and
jge
aam
sbbb
sbb
div
add
cmp
jb
loop
int3
pop
es
and
mov
push
or
sti
push
mov
adc
imul
adc
inc
jo
stc
xchg
or
xor
cmc
aad
mov
mov
in
mov
add
mov
jbe
xor
xor
sbb
jmp
clc
into
lods
mov
decl
push
test
sarb
std
arpl
jg
dec
stos
cwtl
or
xorb
sbb
sbb
sbb
sub
cltd
sbbl
icebp
push
lcall
clc
pushl
subl
xor
sahf
js
mov
mov
rolb
push
add
in
lock
pop
ljmp
cld
or
or
leave
add
or
loope
push
adc
sub
popa
js
mov
jmp
add
add
pushf
sbb
inc
pop
ss
sahf
mov
sub
sti
ljmp
pop
or
mov
fistpll
pop
inc
inc
sub
testl
and
bound
or
or
add
pop
pop
je
xor
and
add
jle
xor
insl
xchg
sbb
push
cmpsb
cltd
cmc
or
sub
adc
rolb
fs
cld
out
mov
jmp
js
addl
sbb
jno
sub
and
data16
sbb
mov
xchg
push
rclb
xchg
xor
push
push
aaa
std
lret
or
popf
ljmp
and
hlt
aad
sub
xor
es
or
orl
xchg
push
outsl
ljmp
rcrl
nop
movsb
adc
jmp
sub
in
lds
and
mov
sbb
lock
adc
xor
cmp
out
in
fcoml
scas
leave
add
xorl
add
in
out
xor
rcl
icebp
call
cmp
mov
stos
orl
in
push
je
sub
pushf
mov
into
les
xchg
adc
inc
faddp
jecxz
subb
dec
mov
testl
jns
mov
push
xchg
inc
adc
daa
fiadds
cwtl
xchg
adc
mov
mov
call
sbb
jp
enter
sti
mov
add
pop
testb
cmp
inc
outsb
cli
or
mulb
sub
pop
add
adc
adc
sarl
outsb
repnz
cmpsl
adc
stc
cltd
fdivr
jo
or
loop
roll
std
pop
rclb
test
add
sbb
xor
imul
add
sbb
jo
pop
ds
mov
pop
sarb
mov
and
int
clc
jmp
idivl
pop
sbbb
das
sub
pop
adc
imul
shl
add
loop
mov
dec
xchg
xchg
or
adc
mov
adc
ljmp
adc
call
push
lods
jno
shl
bound
pushl
inc
nop
inc
push
cs
ficoml
hlt
das
jae
mov
and
dec
xor
adcb
out
loope
mov
icebp
loopne
mov
lea
call
cmpb
mov
push
lret
stos
fnstenv
push
mov
shrb
add
outsl
ljmp
fisttpl
les
add
out
adc
mov
and
push
mov
and
ss
bound
push
das
add
dec
fldcw
lret
daa
inc
xor
lock
in
dec
sbb
loope
incl
pop
mov
inc
mov
pop
aas
and
aad
loop
test
sub
lret
enter
jbe
in
sub
xor
xor
daa
subl
adc
vaddss
inc
mov
xchg
ss
pusha
subb
jl
ss
push
inc
and
shlb
pop
loop
inc
sarb
je
dec
inc
cmp
inc
popl
xor
mov
dec
xchg
or
stos
scas
stos
fidivrl
pushf
push
mov
sbb
xchg
es
cmp
mov
pop
mov
rcrb
cli
push
inc
insb
call
sub
adc
cmpb
mov
jp
test
add
sub
test
daa
sbb
sub
ss
inc
mov
cwtl
aaa
inc
add
cwtl
pop
push
add
lcall
pop
insb
push
scas
adc
xorb
popa
mov
and
sbb
fdiv
dec
and
xlat
mov
call
add
pop
push
cmp
or
ss
cmp
add
cmove
movsl
cmp
adc
insb
jmp
shlb
dec
pop
dec
fs
mov
push
mov
push
sti
xchg
fcmovne
cmp
push
stos
xchg
sub
insb
xlat
sub
add
jo
or
inc
shll
lock
shll
mov
mov
fadds
and
adc
cli
dec
add
jl
mov
into
scas
out
sbb
ret
sbbb
jno
or
mov
stos
fsubrp
pop
sbb
push
pusha
and
fildl
call
push
xchg
rcrl
shl
les
fld
inc
mov
test
hlt
rolb
pushf
cmp
ret
scas
movsb
or
or
scas
addb
rolb
pusha
adc
pop
std
jge,pn
enter
loop
cld
mov
and
mov
dec
and
ljmp
mov
inc
push
jo
mov
pop
jl
lahf
mov
in
out
adc
xchg
mov
inc
inc
xor
cmp
out
rolb
adc
xchg
cmp
dec
cltd
pop
or
in
and
outsl
icebp
loopne
and
cmp
pop
mov
ror
push
divb
mov
clc
movsl
sub
xor
mov
stos
shlb
repnz
lock
add
in
jne
cld
or
sbb
sbb
hlt
xchg
out
push
test
in
call
les
push
dec
cwtl
cmc
shlb
xchg
cmp
ds
push
mov
and
xor
imul
and
inc
lock
out
dec
mov
mov
dec
adc
mov
cmpsb
xlat
aad
ja
mov
addl
add
imul
in
xchg
cmp
repz
inc
adc
pop
shrb
cld
test
nop
or
scas
repnz
popw
int
mov
push
cmc
push
pushf
dec
sub
movsl
lcall
jle
push
mov
icebp
stos
outsb
imull
mov
or
decl
pushf
or
push
cwtl
dec
sub
movsb
mov
xor
mov
pushl
addb
adc
aam
lcall
add
decl
fcomip
movsb
std
loope
add
mov
xchg
mov
sub
movsb
dec
mov
lods
cs
test
sbb
js
mov
test
sbb
mov
clc
inc
mov
bound
jb
fnstcw
push
cld
adc
dec
cmp
jae
incl
outsb
jmp
syscall
sbb
es
outsb
add
sub
push
nop
jp
iret
push
icebp
jg
ja
push
inc
push
ret
mov
cwtl
arpl
push
fwait
xchg
mov
mov
xor
mov
out
rolb
xchg
ss
in
test
cmp
xchg
addr16
mov
xchg
push
lret
add
imul
sub
ljmp
xor
shlb
sub
add
inc
pop
add
sub
push
daa
inc
mov
loopne
mov
enter
arpl
dec
inc
fcoml
jns
imul
jb
aas
sub
mov
sub
arpl
std
and
mov
lcall
push
push
nop
ds
test
or
enter
cmpsl
pop
jne
and
fcomip
stos
dec
pusha
lret
mov
jne
sbb
cmp
adc
xchg
outsb
les
adc
push
call
shll
xchg
sub
lret
loop
les
testb
dec
bound
int3
add
cmpsb
pop
and
pop
nop
mov
or
xchg
inc
pushf
lcall
lea
sub
xlat
out
icebp
jmp
stos
jnp
xor
addr16
add
ja
sub
ret
loopne
mov
xchg
adc
stos
pop
lods
clc
add
mov
cmp
mov
mov
xor
daa
mov
hlt
ficompl
hlt
int3
ret
into
pop
push
pop
data16
addr16
js
mov
add
adc
mov
mov
or
jg
dec
or
add
gs
push
fcom
cmp
jo
lds
push
leave
dec
imul
rorb
cmp
xchg
xor
pushf
sbb
mov
cmp
popf
jo
adc
cli
dec
push
jmp
jmp
pop
jmp
mov
sbb
std
add
adc
je
loopne
sub
add
fcomip
jmp
aad
sti
add
iret
xor
shl
dec
mov
scas
ljmp
sti
ret
xchg
add
es
dec
cmpb
es
mov
lods
std
stos
test
pop
loope
aam
or
testb
and
sub
xor
jge
cs
notb
push
dec
nop
push
pop
popl
mov
lods
and
loope
mov
mov
ss
shlb
bound
mov
ror
inc
dec
sub
repz
add
sbb
bound
adc
testb
push
inc
outsb
pop
add
inc
jo
cmpb
cmpsl
sbb
sbb
pop
sbb
pop
add
push
sbb
daa
jbe
cld
adc
jg
mov
xchg
mov
mov
cmpsb
xor
sbb
loopne
loope
ljmp
int3
xchg
add
cmpsl
lds
push
add
ljmp
push
mov
popa
mov
pop
sub
stos
sbb
movsl
es
bound
movsb
or
mov
xorb
nop
add
aad
cs
inc
inc
in
loopne
data16
stos
sbb
cmp
and
xor
pop
addr16
loopne
push
xchg
or
push
rorb
push
or
test
fs
push
mov
dec
ss
pop
cmp
mov
xlat
mov
clc
jmp
orb
iret
lret
jae
push
push
mov
cmpsb
jne
sub
cltd
mov
sbb
fmull
pop
bound
mov
dec
cmpsb
movsl
push
js
sbb
loop
or
inc
mov
jl
xlat
loope
mov
sbb
or
lods
add
xor
pop
dec
mov
sbb
popa
rdmsr
popa
inc
test
test
cmp
or
es
mov
cmp
cmc
fidivrs
add
inc
sti
daa
jmp
mov
and
loop,pt
xchg
push
ss
addb
fisttps
or
stos
or
aad
xchg
jmp
add
jo
data16
dec
loop
dec
adc
sahf
inc
and
mov
xchg
js
mov
mov
pusha
pop
inc
jecxz
xchg
sahf
daa
ds
adc
stc
sbb
mov
movsb
push
bound
mov
push
clc
scas
enter
jmp
jp
lahf
movsl
sbb
push
cli
scas
sub
mov
scas
dec
sbb
dec
dec
loopne
cld
test
testl
push
mov
mov
inc
sub
pop
cmc
add
in
fsts
push
sub
mov
add
in
fsubs
je
std
cmpsb
inc
xchg
shlb
inc
push
and
add
and
fprem
das
dec
ss
hlt
jno
add
lahf
sbb
cld
pop
jns
xchg
cld
in
int3
and
rcr
mov
xchg
dec
es
outsl
and
popa
add
inc
mov
out
mov
sbb
mov
cmpsb
xorl
repnz
cmpl
adc
mov
in
outsl
les
ljmp
fstpl
test
sbb
pushf
push
addl
mov
push
inc
push
xor
lock
and
mov
icebp
cmp
mov
pusha
xlat
pop
mov
and
dec
push
es
adc
add
in
jns
xor
ret
mov
pop
jno
dec
scas
xor
add
call
mov
jbe
sbb
or
rolb
or
test
xorl
inc
ja
loope
in
jo
pop
mov
dec
bound
das
mov
push
dec
lret
xchg
add
ret
incl
pushf
in
movsb
push
mov
call
or
sub
imull
movsl
fcompl
jb
clc
push
ret
jo
xchg
ret
push
dec
xchg
xchg
sub
add
cmp
fcompl
mov
roll
mov
pushf
aas
clc
cmpb
pop
dec
mov
sbb
sbb
mov
jno
add
das
adc
test
scas
pop
add
sub
xbegin
rorl
dec
push
jo
sbbb
lea
subb
mov
mov
push
sub
inc
daa
pop
mov
insl
lcall
dec
xor
je
inc
xchg
jecxz
ret
pop
movsb
pop
lock
jge
nop
pop
push
push
sbb
decb
push
mov
call
cs
pop
jg
pop
repz
mov
inc
pop
sbbb
test
test
scas
pop
dec
dec
fcoms
add
add
outsb
je
push
jle
mov
jle
xor
scas
out
dec
outsb
es
cmp
lock
aaa
or
xor
mov
sub
aad
fs
and
mov
push
jp
fildl
cmc
bound
cs
sub
pop
nop
mov
nop
mov
jae
inc
mov
fdivl
unpcklps
test
mov
ficompl
insb
into
subl
push
add
cli
call
lcall
mov
mov
in
cmc
es
mov
jl
add
mov
push
mov
cmp
add
or
xchg
cwtl
and
cltd
std
xor
lahf
aad
test
adc
movsb
int
test
iret
fs
js
jg
mov
adc
mov
call
or
push
cmp
lods
add
stos
repnz
idiv
aam
push
adc
push
and
pop
mov
and
mov
nop
add
xchg
xchg
loope
clc
aas
mov
mov
mov
and
ret
inc
jle
jmp
xchg
mov
xor
cmp
aad
mov
mov
fistpll
in
pop
loopne
xchg
add
outsl
pushl
and
inc
mov
mov
add
int
das
pusha
movsb
mull
cld
pop
ljmp
add
jno
mov
repz
inc
xchg
xorb
cld
mov
stos
sub
aam
mov
mov
adc
gs
mov
stos
cwtl
js
filds
xor
add
add
lcall
pop
inc
fldl
mov
or
xchg
push
fdivr
lcall
das
jp
fimuls
inc
mov
sbb
test
and
hlt
stos
jle
cli
es
push
lret
call
xor
add
jmp
mov
mov
adc
dec
or
aaa
mov
jno
subb
push
sub
pushf
es
in
fstl
std
inc
xor
enter
xor
xor
arpl
pushl
and
int3
mov
mov
pop
outsl
mov
mov
insb
mov
std
mov
xor
mov
push
jecxz
leave
add
and
push
pop
repz
pop
jecxz
mov
xchg
push
cs
cltd
jno
sub
movntps
or
ss
sbbl
pop
sbb
push
inc
and
and
mov
cld
enter
and
or
or
sub
addb
aad
in
push
call
add
fadds
fidivs
sub
dec
push
cwtl
cmc
hlt
call
popf
stos
push
addr16
push
popa
lock
addr16
pop
lock
mov
mov
xor
or
dec
or
fldenv
imul
inc
jg
add
cmp
lret
call
or
sub
inc
lea
xor
cmpsb
add
mov
jne
fsts
mov
push
cmp
mov
lea
adc
sub
mov
aad
sub
push
stos
push
xchg
inc
add
aaa
mov
std
mov
sub
cmp
bswap
out
add
sbb
inc
fs
cmp
adc
and
cmpsl
es
xor
xor
or
adc
sahf
fdivrl
jo
xlat
pushl
cwtl
adc
lret
xor
sti
fs
pop
jo
sbb
push
push
and
lcall
push
pop
shlb
imul
and
xchg
jp
pmovmskb
fcoms
pop
xor
inc
pop
xchg
sub
add
jae
ja
clc
mov
ficompl
imul
cltd
push
inc
mov
and
test
rcll
pop
dec
and
addb
lods
ljmp
test
sub
pop
dec
test
xchg
inc
hlt
mov
inc
push
ret
ret
popf
and
and
lcall
add
jecxz
xor
icebp
sub
adc
push
sub
cmp
mov
lcall
sbb
mov
sar
andl
mov
xor
hlt
inc
adc
pop
mov
ss
sub
cwtl
dec
sbb
loope
dec
push
cmp
sbb
mov
scas
inc
aaa
test
xor
outsl
push
add
jno
rorb
cmp
xchg
sub
sarb
gs
enter
pop
leave
mov
and
xchg
mov
rorb
loopne
push
shld
cmpsb
push
shrb
mov
mov
push
shlb
push
add
sbb
dec
xor
lock
out
mov
fsubrs
and
mov
pop
cwtl
je
sbb
iret
imul
or
cmp
mov
inc
icebp
ror
repz
cmc
orb
or
lock
stc
cli
lcall
sbb
pop
mov
sub
cmc
addb
adc
lock
enter
lds
es
cltd
jg
leave
fsubrl
dec
push
adc
mov
mov
clc
and
mov
call
add
xor
or
insl
pop
neg
icebp
adc
imul
or
pop
lods
call
mov
sbb
pop
int
jge
int3
xor
int
das
cld
sti
lcall
scas
stos
or
or
adc
ds
test
or
pop
mov
loope
icebp
jg
inc
pop
xchg
jmp
roll
push
or
mov
notb
add
inc
dec
add
sbb
push
push
jp
mov
and
and
adc
cmp
sarb
or
mov
cmp
and
sbb
lods
jno
imul
loop
fs
repz
mov
push
push
mov
scas
inc
lret
sub
cmpsl
inc
adc
pop
dec
xor
std
cmp
mov
or
loope
ja
pushl
loope
dec
ljmp
clc
mov
mov
ljmp
fs
mov
mov
xchg
mov
push
push
sbb
pop
scas
fwait
test
lcall
test
stc
es
loopne
adc
test
xor
push
push
popf
jge
lods
lret
jb
xchg
in
sub
pop
je
orb
mov
test
dec
inc
faddl
cmc
in
stos
clc
out
and
lds
leave
repnz
and
xlat
in
xchg
outsb
jecxz
sbb
mov
leave
movsl
mov
or
jge
cmp
addr16
clc
cwtl
ljmp
jae
iret
cltd
ret
add
inc
jb
iret
bound
or
xchg
xchg
sbb
pop
push
movsb
mov
jmp
cmp
inc
bound
xor
or
mov
js
pop
aaa
lods
fs
push
in
mov
popl
nop
and
sbb
adc
dec
addl
cli
call
dec
dec
xchg
call
push
scas
xchg
daa
call
scas
rolb
mov
cld
scas
sbb
inc
sub
cwtl
clc
jg
cld
lahf
push
mov
mov
test
hlt
in
in
cmc
jb
jb
jg
push
jecxz
or
out
add
or
fdiv
inc
xor
push
je
pop
mov
cmp
cwtl
cld
cmpsb
or
imul
or
lock
xchg
cmpsl
cmp
aaa
pop
push
sbb
jecxz
cld
cs
jl
mov
sbb
inc
inc
les
cmpsb
lcall
dec
ljmp
int3
push
jo
pop
xlat
pop
lea
es
pop
test
popf
push
mov
push
add
repz
and
fbld
mov
loopne
das
mov
aaa
std
xchg
insl
add
icebp
out
sbb
hlt
loope
decl
mov
sbb
sbb
movsl
add
jae
sub
ja
mov
pop
mov
jl
int3
and
xor
xor
int
insl
push
inc
in
jge
leave
add
mov
mov
incl
jecxz
scas
enter
push
xchg
xchg
fsubrs
ss
mov
push
std
scas
sub
cmp
fs
xor
call
xchg
out
push
arpl
mov
adcl
daa
das
push
sbb
aam
mov
aad
inc
mov
adcb
rol
jo
jmp
cmp
inc
out
inc
mov
icebp
sub
sub
cmp
or
ret
dec
fs
das
jle
mov
pushf
and
mov
cmp
sbb
add
jb
pop
cmp
lret
push
xchg
in
inc
mov
add
pop
ret
inc
ljmp
in
test
stos
loope
loop
mov
inc
sbb
pop
add
aam
rolb
nop
roll
sub
cmpsb
mov
cli
incl
add
xor
sub
dec
je
xchg
out
cli
or
in
cwtl
daa
jmp
and
dec
xor
cld
push
inc
adc
aaa
mov
ss
or
lock
dec
add
sbb
add
outsl
sub
sets
test
mov
mov
xchg
outsl
filds
pop
mov
or
call
xorb
test
insb
push
add
cld
lahf
cmp
and
push
in
pop
pop
sbb
ja
ret
inc
push
je
adc
mov
icebp
add
inc
stos
mov
cld
push
adcl
orb
std
mulb
cs
fisubrs
push
add
out
cmp
test
inc
xchg
inc
sbb
inc
out
pop
cmp
inc
incl
arpl
addr16
popf
xor
rcl
icebp
fcom
xor
lock
fs
push
pop
pop
mov
pop
sbb
or
cmp
ss
shll
hlt
insb
int3
xor
aaa
pop
cs
loopne
or
adc
sbb
into
movsb
dec
pusha
sub
xchg
adc
or
push
mov
inc
bound
push
mov
xlat
loopne
xchg
xchg
pop
add
cld
std
add
mov
inc
jecxz
inc
xor
cmp
lds
add
test
sbb
push
loopne
xchg
dec
lods
dec
aaa
fwait
popa
sub
jg
fsubl
cld
bound
inc
mov
cld
hlt
or
scas
add
jp
call
filds
insb
dec
gs
cmpsb
add
imul
cmpsl
lods
and
sub
or
cs
je
push
or
lret
rclb
daa
into
testb
in
xchg
pop
push
sarb
loope
mov
add
push
mov
inc
dec
pop
and
fiaddl
and
cmp
mov
gs
cltd
push
popl
and
outsl
xchg
sub
mov
mov
fwait
incb
sub
ljmp
sub
add
pushl
push
mov
in
inc
cmp
dec
add
ffreep
xor
dec
cmp
int3
sub
inc
mov
xchg
int3
loop
pop
cmp
mov
adc
sbb
out
add
jl
out
mov
subl
mov
bndldx
fstl
fistpl
outsl
xor
mov
pop
push
movsb
aaa
pop
pushl
ret
xchg
and
dec
cmp
inc
lcall
push
cmp
push
inc
add
lcall
cmp
cmp
push
in
ja
loope
push
dec
push
mov
mov
std
add
insl
inc
stc
test
lret
icebp
popa
roll
hlt
pushl
cld
jle
repnz
mov
rcrb
sub
loope
shll
out
clc
lcall
repz
jg
cmp
mov
add
sbb
sub
push
mov
cld
push
add
adc
aad
stos
pusha
ljmp
and
cld
loop
add
sbb
pop
xchg
in
push
shrl
push
fdivrp
ljmp
add
daa
mov
xor
jbe
fldt
test
icebp
das
shrb
mov
add
jb
adc
cwtl
pushl
add
mov
push
jb
mov
inc
rolb
fldz
adc
sti
xchg
decl
pop
aad
push
dec
ljmp
ljmp
pop
cli
int
adc
clc
xchg
je
or
or
sub
lcall
adc
cmpsb
stc
push
push
adc
pop
xor
sbb
iret
xchg
insb
push
mov
cmp
adcb
xchg
adc
frstor
jp
not
jns
cmc
and
and
call
cmc
or
mov
push
clc
into
movb
cli
lcall
dec
mov
pop
cwtl
dec
dec
ja
pushf
push
inc
iret
and
cwtl
pushf
inc
and
or
mov
push
mov
fldpi
jp
ss
cmp
aaa
rcr
jg
dec
cli
out
jne
mov
fs
dec
hlt
xor
mov
mov
dec
jecxz
or
nop
inc
test
clc
or
lcall
dec
add
fcmovb
stos
cmc
sti
clc
push
cs
jae
push
test
jbe
and
mov
xchg
jb
iret
dec
adc
jmp
adc
fsubl
xchg
aam
rcll
scas
clc
add
ret
outsl
and
pop
insb
jno
fsubrs
cmc
decl
sarl
jb
ret
sub
add
mov
sub
pop
out
orb
rcl
dec
push
repz
ss
mov
hlt
pushaw
mov
dec
insb
das
xchg
ss
mov
popf
sar
out
fnstcw
mov
inc
mov
cmp
push
scas
adc
and
sub
mov
popf
xor
jle
mov
sbb
fiadds
daa
xchg
movsl
pop
mov
push
call
mov
mov
addr16
sub
sbb
pop
push
jno
mov
pop
das
mov
clc
dec
dec
and
ja
movsb
fwait
sbb
xchg
push
add
fildll
cld
dec
lret
int
mov
stc
xor
mov
inc
std
jmp
xchg
push
jbe
fs
repz
push
jns
mov
int3
and
jae
imul
push
add
push
jecxz
scas
pop
sub
mov
shrb
add
xor
adcb
sbb
jo
sub
adc
idivb
imul
lock
icebp
xchg
cmpsb
in
pop
sbb
ret
inc
cli
mov
dec
imulb
push
jmp
call
pusha
xchg
add
cwtl
mov
into
inc
loopne
pop
inc
cmp
xchg
and
mov
sub
ss
push
add
jns
ficomps
cmovno
popa
mov
or
and
adc
aad
bound
sbb
cmpsb
and
lahf
dec
push
ret
divb
outsb
test
add
ljmp
xor
sub
push
ret
in
add
iret
test
call
xchg
cmpsl
and
aam
jl
add
shrb
adc
stos
mov
fsts
pop
mov
pminsw
fnstenv
add
lds
in
outsl
cli
das
or
shlb
pop
mov
add
jp
lcall
ficoms
test
test
loope
mov
out
push
sub
sub
pop
add
push
stos
pop
insl
push
xchg
insl
in
insl
dec
pop
dec
test
aas
int
xchg
shrl
cmp
rclb
cmp
scas
loopne
je
adc
and
and
adc
int3
flds
add
shr
jno
push
decl
stos
gs
mov
jb
enter
lods
add
outsb
mov
ret
test
loope
cmpsb
out
pop
dec
das
dec
dec
and
adc
add
cld
fwait
mov
lahf
xchg
iret
cmp
mov
fistps
fstl
gs
xor
add
enter
adc
out
lods
lds
jp
pop
push
push
repz
aam
sti
and
out
cwtl
jbe
adc
xor
shlb
cld
jbe
lds
imulb
xorl
or
pop
rcll
aad
lods
jo
div
pop
sbb
mov
push
adc
add
outsl
or
push
in
ss
ret
sbb
fwait
in
xorl
loope
incl
sbb
outsb
jp
xchg
fdivrs
xchg
push
add
incl
and
sarl
lods
or
mov
ss
ljmp
jbe
sub
das
rorb
jo
subl
aam
test
sub
insb
aas
movsb
push
out
pop
orl
jne
inc
sub
stc
mov
mov
pop
pop
sub
mov
xor
inc
inc
mov
mov
fnsave
icebp
jle
push
jno
aaa
cmovne
jnp
adc
outsb
ja
sbb
in
dec
nop
nop
pop
jno
loope
and
inc
jns
mov
mov
sti
loopne
lret
addb
test
mov
mulb
mov
subl
dec
inc
testl
lcall
nop
push
shlb
je
push
pop
jl
mov
sub
adc
adc
push
lods
add
jo
jno
clc
rclb
addl
pop
ret
test
insl
xchg
mov
bound
jno
fwait
pop
imul
sti
pop
loopne
push
xorb
jnp
jmp
add
inc
imul
bound
bound
inc
adc
mov
push
push
aam
push
sbb
les
cld
xorl
mov
movsb
sbb
or
or
cmp
int3
xchg
pop
cmp
pop
xchg
loopne
scas
aad
pop
sbb
cmp
cltd
add
std
das
xorb
lock
pop
sbb
cmp
sub
adc
pop
mov
inc
cmp
movl
mov
or
adc
nop
addr16
jo
or
call
push
cmp
and
repnz
jg
inc
xor
mov
call
mov
popa
cli
incl
push
jb
mov
mov
jle
shrl
mov
pop
adc
xchg
mov
pusha
loop
aaa
jno
pop
jle
push
sti
mov
lods
repnz
movsl
loopne
pop
aam
mov
aam
add
call
jmp
stos
adc
mov
cmp
fucompp
push
cli
sarl
sbb
xor
ljmp
roll
jns
pop
leave
pop
and
shlb
sub
cmpsb
inc
cmp
dec
mov
data16
xchg
fbld
adc
js
pop
mov
push
jns
hlt
lods
mov
std
jg
pusha
sub
cmp
lret
es
jge
sub
push
ja
xor
inc
dec
add
iret
std
ja
clc
pop
fdivs
dec
dec
jp
inc
pop
cmpl
mov
or
or
xchg
shll
jp
push
into
push
cwtl
cmp
fdivp
inc
mov
adc
ficompl
decb
cli
rol
in
pop
sub
es
mov
or
arpl
pop
lock
and
xor
mov
fstl
mov
outsl
les
inc
and
sbb
sbb
jbe
or
das
adc
aaa
or
hlt
mov
dec
push
sub
pop
aad
mov
cltd
and
inc
gs
subl
mov
mov
pop
test
mov
and
outsl
call
cmp
push
mov
dec
test
dec
dec
push
add
pop
hlt
lahf
dec
cmp
cmp
rolb
lock
or
je
ja
push
xor
orb
loopne
mov
decl
aaa
sub
sbb
add
push
lods
jb
jg,pn
out
mov
dec
push
xchg
sbbl
nop
lods
leave
xchg
cmp
add
dec
mov
hlt
xorb
loopne
or
in
xor
js
fbstp
jns
jae
sub
mov
push
sahf
fidivs
fidivs
addr16
xor
push
std
sub
mov
mov
mov
xor
push
sbb
cld
jg
dec
mov
adc
ret
cmp
jne
push
mov
lcall
lock
cld
sbb
aaa
inc
push
or
cmpsb
or
and
pop
add
popa
jp
sti
adc
xchg
lea
push
jb
shrb
or
fisubl
pusha
pop
sbb
pusha
js
int3
adc
sub
int
incb
sahf
movsl
out
mov
setle
dec
call
add
sbb
jno
push
sub
push
jae
in
test
cld
push
mov
rcr
faddl
insl
dec
push
add
clc
or
cmp
jbe
aaa
lds
scas
push
and
xor
jbe
in
pushl
mov
sub
jecxz
xor
outsl
test
push
sub
pop
loop
push
shll
lock
call
outsl
stos
mov
xor
hlt
xchg
xor
and
jg
xchg
addl
cmpsb
mov
jp
jno
movsb
mov
into
outsl
xorl
jl
push
lds
adc
shr
int
out
push
pop
xor
ljmp
cmp
loop
inc
inc
pop
leave
or
xor
add
cmpsb
xchg
or
mov
and
add
xchg
ljmp
push
iret
sbb
icebp
mov
mov
or
dec
xchg
mov
fstpt
sub
and
sub
add
sub
pushl
push
call
jne
mov
inc
pushf
dec
push
mov
sub
mov
call
in
mov
add
nop
lahf
adc
xchg
mov
sub
rcll
ljmp
cli
pop
mov
add
sbb
lods
nop
push
popl
out
inc
es
out
jmp
pop
ret
adcb
adc
inc
je
arpl
call
push
jl
mov
sbbb
mov
mov
in
push
and
cmpsl
inc
or
xrelease
icebp
jle
loopne
stos
scas
mov
pop
mov
movsb
cmpsl
push
or
orb
mov
or
shlb
repnz
mov
xor
adc
das
rorb
mov
outsl
ret
add
pusha
aaa
mov
lret
cld
pop
decl
inc
adc
inc
mov
mov
jnp
lcall
push
pop
test
test
imul
jle
mov
fs
add
addb
lret
sub
arpl
adc
or
dec
sub
xlat
sub
dec
inc
incl
pop
push
std
test
mov
xchg
push
hlt
and
xchg
cld
js
pop
cld
or
repnz
lcall
aam
bound
fnstcw
fildll
movsb
test
dec
add
adc
stos
sub
lods
daa
sarb
loopne
mov
pop
cmpb
push
test
sbbb
sahf
fs
fwait
rcl
call
jmp
push
jge
ficompl
and
insl
mov
inc
sti
mov
andl
add
cmpsl
es
movsb
lret
cmp
ret
js
lahf
lret
imul
push
aam
xchg
xchg
dec
outsb
icebp
in
stos
mov
adc
xor
loop
push
std
sahf
testl
adc
jno
cld
push
cmp
aam
adc
cmp
fdivrs
sti
pop
lahf
out
mov
repz
xchg
mov
and
push
ja
and
loop
add
out
mov
mov
fmuls
pusha
dec
add
test
addl
push
xor
inc
sbb
and
add
and
xor
push
lods
ret
dec
cmp
test
mov
jb
xchg
sub
sub
add
mov
xor
or
cmp
inc
cmpb
in
mov
fdivs
in
es
pop
hlt
jno
insb
ret
call
xchg
lock
decl
jmp
mov
mov
mov
pop
add
jg
push
or
dec
push
or
mov
jne
push
adc
sahf
inc
sbb
fmuls
dec
pop
sub
int3
mov
ret
stos
dec
cmpsb
dec
pop
mov
mov
test
adc
std
jne
dec
les
jb
or
mov
jecxz
sub
les
bound
cld
faddl
fbld
inc
adc
or
mov
mov
push
mov
and
sub
mov
mov
fcompl
ret
loop
cmp
push
loope
fdivr
jne
xchg
mov
pushf
lret
mov
imulb
xchg
mov
jle
arpl
add
xor
inc
cmp
inc
add
mov
scas
or
imul
pushf
sbb
xchg
inc
mov
mov
aaa
adc
aaa
lcall
call
loopne
pop
ds
push
divl
mov
or
sub
popa
dec
mov
jb
icebp
mov
pop
cmpxchg
sahf
dec
push
or
sar
data16
adcb
leave
mov
xlat
repz
sub
jg
push
jmp
cmp
push
sbb
add
push
test
jge
mov
adc
clc
mov
sarl
cli
ljmp
pop
add
adc
xlat
or
xchg
push
lds
addl
pop
repnz
dec
sub
sbb
sub
sahf
mov
push
push
stos
jo
cld
or
or
xchg
daa
xor
movsb
ja
adc
mov
pusha
pop
cmp
push
adcl
add
mov
js
inc
lret
adc
rclb
repnz
sti
aam
push
add
or
mov
out
lods
imul
sbb
lods
mov
or
xchg
in
pop
test
adc
loop
int3
cmp
movsb
stos
test
jno
mov
jl
lods
pop
or
sub
add
idivl
clc
lea
idivb
stos
push
test
xor
aas
clc
jg
mov
cltd
xchg
stos
into
xchg
mov
sub
or
fcomip
jbe
mov
aam
jnp
mov
inc
push
inc
pop
andb
fimuls
cli
mov
lock
cmp
or
and
in
mov
test
or
and
mov
mov
mov
xchg
dec
xor
loopne,pn
sbb
jmp
push
push
test
or
jno
lcall
pop
nop
pop
aad
add
inc
sbb
cmp
inc
xchg
and
push
xlat
movsb
inc
adc
sbb
xchg
ds
cli
decl
jns
arpl
lret
sbb
lea
xchg
sbb
lea
jl
divb
loope
xchg
lds
pop
inc
mov
inc
popa
jle
add
pop
lock
jg
in
jns
add
aaa
push
xchg
je
repz
xchg
cmp
lcall
inc
mov
lods
jp
or
push
xchg
icebp
das
pop
lock
lcall
jbe
inc
push
xor
push
xorb
into
out
fisttpll
xor
das
mov
cmp
xchg
mov
hlt
mov
mov
inc
mov
clc
sbb
call
jne
and
mov
jle
aas
repnz
sub
dec
adc
mov
cmc
incl
int
fstpt
sub
rclb
lahf
dec
dec
incl
movsl
mov
xchg
mov
add
sbb
lock
add
mov
cs
and
mov
mov
lock
fcoms
jae
sbb
fimull
ficoml
stos
test
out
cli
in
add
push
pop
xor
enter
arpl
jecxz
roll
xchg
repz
mov
fnstenv
xchg
push
es
xor
add
jb
cld
add
add
aam
divb
fsubl
enter
sub
lahf
mov
int
pop
ficompl
adc
mov
not
dec
sub
push
cld
push
loopne
mov
sub
cld
mov
adc
in
in
mov
inc
or
sahf
lahf
xor
imull
scas
outsl
cli
push
int3
dec
inc
cmc
scas
in
add
nop
loop
fisubs
push
and
test
orb
push
add
rcll
pusha
mov
subl
mov
data16
or
mov
es
mov
fsin
xchg
xor
adc
ret
mov
clc
add
cld
pop
mov
call
cmp
push
loop
xor
mov
call
hlt
sub
rclb
add
xchg
add
cmpl
jecxz
dec
inc
mov
sti
test
ror
cmp
cmp
adc
leave
jae
jg
jge
fbld
xchg
popf
fiadds
push
sar
pushl
adc
loop
cltd
por
xor
add
xor
lahf
fs
adc
shll
push
or
std
xor
add
push
jns
stos
add
iret
mov
je
or
lods
push
push
pusha
hlt
mov
fwait
fs
cltd
mov
jnp
sbb
call
rolb
das
mov
orb
es
jae
lods
scas
iret
filds
in
fists
stos
adc
pop
inc
jmp
or
js
push
lret
cli
sahf
cmp
xor
sbb
adc
sbb
lds
aaa
addl
ja
jecxz
js
insb
rcr
pop
ja
mov
and
and
movsb
push
mov
aaa
add
add
xchg
push
xlat
nop
cli
jg
push
mov
lea
vpmovsdw
aam
pop
pop
ljmp
movsl
pop
clc
jg
or
mov
les
or
cmp
lahf
sub
pushf
mov
adc
or
call
and
jle
xchg
mov
push
mov
cmp
sti
xchg
add
clc
loopne
xchg
jle
push
out
mov
sbb
loope
shlb
sbb
adc
jb
xchg
and
rorl
add
mov
outsb
sub
adc
stos
xchg
mov
adc
or
ret
jecxz
mov
leave
push
test
xorb
sub
ds
pop
fucom
rolb
fidivrl
dec
add
or
inc
push
and
dec
jbe
mov
or
inc
push
inc
cmp
add
je
cmp
sub
mov
std
fisttps
push
adc
jp
mov
adc
mov
and
mov
scas
orb
loopne
xchg
mov
push
shr
repz
pop
test
lods
dec
push
mov
sbb
aaa
pop
lret
add
adc
mov
cmp
push
add
mov
fwait
mov
xor
sub
or
xorl
add
mov
xchg
shr
jg
mov
inc
or
xor
add
stos
sbb
inc
fsubrs
mov
movaps
pop
mov
dec
mov
ds
hlt
cmpsl
stos
ds
inc
incl
xor
mov
mov
xchg
mov
mov
lock
dec
daa
stc
iret
sub
les
rcrb
sti
lahf
add
pop
roll
adc
cltd
push
repz
pop
mov
inc
and
dec
cmp
call
hlt
push
mov
pop
pop
aas
shlb
repz
mov
mov
icebp
call
add
fildll
add
gs
fstpl
cmp
adc
mov
xchg
cmc
mov
sbb
xlat
fildll
inc
in
sub
or
cs
scas
push
jb
movb
inc
imul
outsl
add
pusha
push
and
jp
sbb
fimuls
or
insb
mov
test
mov
scas
cli
js
inc
mov
bound
inc
add
decl
pop
fsubrs
int
shll
xor
scas
push
rorl
les
inc
aam
or
cltd
jno
sbb
inc
loopne
ljmp
fadds
cmpsb
cmp
scas
je
clc
outsl
xchg
outsl
or
pop
enter
cmp
pop
dec
jnp
cmpb
dec
jecxz
xorb
jl
cmp
add
add
adc
rcrl
xchg
add
rcll
xchg
xor
bound
lret
scas
jmp
nop
xor
and
cwtl
mov
inc
sub
add
pushf
out
mov
rcl
cld
je
add
mov
out
lahf
mov
jge
cltd
jecxz
pop
faddl
or
jns
out
shl
sbb
mov
and
subb
add
fwait
add
ds
repnz
stos
mov
lods
adc
in
xor
mov
pop
jp
frstor
je
pop
adc
ds
ljmp
jl
push
in
std
mov
clc
fbstp
xor
push
aaa
inc
fsubs
sbb
mov
test
and
leave
pop
ljmp
and
push
ret
idivl
vmulps
push
clc
std
sub
hlt
cld
lcall
pushf
mov
je
add
test
and
push
scas
add
xchg
xchg
data16
hlt
std
outsl
lahf
addl
data16
sbbb
and
ljmp
jb
jp
or
std
inc
adc
ftst
int
push
mov
call
sbb
pop
push
sub
mov
fwait
in
push
mov
and
xorb
or
jg
aaa
bound
xor
bound
sarb
mov
cmp
lret
loopne
test
adc
xchg
mov
fs
cli
decl
insb
out
pop
aaa
dec
add
test
inc
inc
outsl
mov
add
out
sbb
and
cld
xor
mov
aas
sti
cltd
mov
je
pop
push
and
pop
inc
in
push
hlt
push
sub
incl
rcll
sub
jg
jl
mov
aaa
or
xor
icebp
pop
sub
xchg
ja
loopne
lock
cld
xchg
dec
adc
inc
push
arpl
pop
add
mov
repz
mov
gs
inc
inc
flds
adc
sti
addr16
lret
mov
insl
push
icebp
mov
pop
loop
xor
add
inc
push
lock
les
movl
loop
mov
cmpb
in
pop
add
test
movsl
cmpsb
idiv
roll
nop
jecxz
cmp
lock
jl,pt
push
shrl
pop
xchg
sub
sbb
cli
dec
jno
inc
mov
cli
or
dec
lods
ret
jle
jecxz
push
test
pop
mov
mov
sahf
inc
mov
xor
js
ret
mov
out
mov
pop
xchg
xchg
out
push
dec
add
push
push
sti
jg
scas
adc
sub
leave
mov
das
mov
fidivs
je
js
pop
lret
mov
loop
add
and
mov
verw
orb
add
mov
out
lret
xchg
aas
xor
pushl
mov
notb
inc
cs
dec
fidivrl
dec
push
bound
jo
cli
dec
jns
test
xor
mov
mov
cld
push
sub
outsl
push
pop
cld
pop
mov
loopne
or
rol
xor
loopne
or
es
jl
rolb
in
call
test
mov
lret
mov
add
xor
xlat
jbe
inc
pop
lea
loope
inc
daa
xor
call
in
adc
jle
jp
adc
push
shrb
jle
jg
push
lret
jbe
daa
inc
jno
rol
jmp
inc
or
pop
mov
push
add
jle
xchg
cs
ret
cmp
outsb
addb
mov
xor
incb
imul
adc
dec
xor
popf
dec
or
lahf
mov
pop
cmp
call
and
insl
fnstcw
jg
dec
add
andl
sbb
xchg
mov
mov
inc
sbb
les
je
test
xchg
xchg
inc
iret
loopne
lock
loop
fsubrs
cmc
push
call
mov
int3
jl
sbb
mov
insb
loopne,pn
xchg
mov
scas
rolb
fmuls
loope
mov
sub
out
cmp
clc
enter
sbb
cld
sar
mov
mov
iret
sahf
sarl
jmp
ficomps
and
stos
sbb
xor
mov
gs
sbb
negb
call
cli
jmp
cli
push
aam
sti
lahf
adc
aaa
mov
pop
mov
xor
inc
cwtl
test
cld
in
jg
jle
outsl
jl
arpl
shrb
mov
or
clc
pop
test
rorb
xor
mov
scas
adc
jb
pop
and
adc
arpl
std
loop
addl
mov
pop
inc
mov
mov
test
int3
inc
cwtl
outsb
push
pop
mov
bound
loopne
push
lods
xchg
cmp
adc
sbbb
movsb
xor
xor
faddl
xchg
loopne
add
ss
inc
imul
push
xor
packssdw
sub
inc
xor
pop
std
cmp
icebp
add
orb
fldt
in
mov
jl
cmp
loopne
push
xlat
ljmp
adc
or
adc
xor
orl
and
fstpt
dec
ljmp
and
xor
loop
mov
inc
sub
mov
loop
jmp
pop
push
insb
adc
xabort
sar
mov
cwtl
rcll
es
adc
adc
aas
clc
mov
cwtl
mov
enter
cmp
lock
mov
out
jb
jp
in
enter
and
insb
pop
or
mov
xor
xchg
lds
hlt
inc
scas
xor
clc
add
jmp
jne
out
sub
or
mov
inc
cmp
xchg
mov
orl
xchg
outsb
and
sbb
stos
scas
out
aam
fwait
and
cmp
push
or
fstpt
lret
cmp
int3
sarb
pop
add
pop
fdivl
mov
add
adc
cmp
lods
ljmp
pop
adc
mov
outsb
push
add
decl
je
lods
fwait
jp
jecxz
in
ds
decl
outsb
dec
movsb
push
xchg
xchg
fdivrs
and
pop
hlt
out
mov
or
push
jle
and
jne
cld
jmp
nop
cmc
ret
pop
or
and
daa
fcmovnb
data16
cmp
xor
rcrb
xchg
push
mov
jl
out
inc
mov
movsl
cmc
add
cmp
mov
imul
and
out
cli
jmp
stos
stos
push
scas
pop
lret
or
push
inc
mov
push
push
lahf
sub
xchg
sbbb
loopne
xchg
test
push
adc
mov
nop
push
add
mov
jle
jns
andb
or
aas
inc
pop
adc
or
lret
mov
xchg
xlat
insl
jo
rcll
xchg
pop
out
clc
sbb
mov
loopne
std
jae
enter
decl
xlat
inc
fcomi
push
cltd
or
lret
mov
es
add
xchg
jg
cmpsl
jbe
scas
dec
xchg
cmc
rorl
lock
and
hlt
shll
adc
xlat
aam
stc
jb
inc
sbb
sbb
mov
xor
andb
add
mov
loop
ljmp
jl
sub
pushf
in
add
jecxz
push
fcom
mov
lcall
jmp
icebp
ljmp
push
adc
lret
lock
inc
and
add
out
and
fimuls
fs
cmp
adc
fcmovb
lea
xchg
ds
add
jg
mov
imul
xor
and
dec
negl
dec
outsl
push
mov
sti
in
pop
int
rolb
and
inc
cs
mov
cmpsb
insb
and
stc
mov
push
and
add
mov
repz
ljmp
xchg
push
ss
pop
iret
loop
in
movsb
sbb
or
std
in
test
pop
orb
daa
cwtl
and
and
sahf
out
es
imul
rorb
push
ss
das
loop
jecxz
pop
mov
push
pop
fadds
mov
scas
addr16
cmp
call
cmc
sub
pop
xchg
fsubr
cmp
add
lods
jns
aad
dec
push
insb
pop
jbe
dec
pop
ds
pop
mov
adc
push
cmp
adc
push
lcall
leave
icebp
call
mov
pop
pop
pop
mov
mov
mov
ret
cli
fldt
add
repnz
int3
iret
clc
inc
add
loopne
push
mov
jecxz
xchg
ficompl
xchg
cwtl
outsb
ds
stos
sub
dec
andb
pop
pop
xor
ret
jle
mov
add
jno
mov
push
pop
pop
xchg
pop
xchg
mov
cmp
sub
lock
mov
pushf
dec
jge
push
aaa
lods
xchg
xor
push
mov
xchg
mov
sbbb
pop
and
jl
or
lret
adc
popl
decl
cmp
cld
enter
ljmp
shl
jbe
hlt
add
jl
clc
movb
dec
aaa
or
test
xchg
daa
mov
jl
loopne
rorl
push
loop
adcb
inc
push
clc
xor
mov
adc
sbb
add
aaa
les
inc
and
cld
pop
push
ds
push
mov
cld
fsubrs
mov
pushf
add
icebp
dec
lock
lock
mov
gs
pop
lods
xor
jmp
mov
mov
sub
pop
out
shrb
loopne
xchg
jle
push
mov
pop
dec
rol
lods
popf
inc
adc
rorb
push
ljmp
sub
jmp
add
jecxz
jg
lcall
sbb
mov
adc
cmp
roll
or
insb
cmp
xor
or
loopne
inc
xchg
or
out
mov
es
rcll
push
mov
or
xor
mov
and
dec
mov
mov
xor
jb,pt
cmp
sub
aaa
sub
cwtl
add
fisttps
gs
mov
addl
or
les
adc
dec
aas
in
xchg
jo
and
aam
mov
insb
sbb
test
scas
testb
sub
push
testb
mov
push
clc
loopne
es
mov
pop
ljmp
lods
loop
sbb
test
pop
cmp
or
int3
stos
cmp
xor
ss
call
out
and
mov
scas
push
pop
ds
xchg
add
int3
es
push
inc
bnd
mov
push
mov
dec
fadds
lods
sbb
fstpt
test
adc
test
adc
lods
aam
fbld
push
sbb
add
pushf
lock
add
mov
add
mov
cli
test
or
jle
test
sbb
hlt
or
icebp
frndint
int
idiv
xor
xchg
pop
sub
addl
cltd
ds
das
clc
pop
jo
inc
jb
or
sbbb
inc
std
mov
inc
dec
int3
mov
xor
or
adc
aam
mov
xor
push
sbb
or
add
andl
cs
subb
decb
divb
pop
pop
mov
insl
rcr
mov
cld
les
pop
mov
clc
pusha
loope
mov
add
daa
fnsave
cmpsb
sarl
incb
mov
fucomip
mov
xchg
xchg
push
add
adc
fdivrp
and
in
lcall
mov
jae
sub
loopne
subb
pop
movsl
adc
mov
lea
push
mov
stos
shr
ret
mov
sbb
jb
jle
push
mov
int3
sub
cmpb
addr16
inc
sub
in
xchg
cld
aas
xor
or
sub
jecxz
adc
test
cmp
fsubrl
add
inc
push
push
adc
dec
iret
xor
test
push
fmull
pop
fisubl
ljmp
xor
xchg
mov
pop
inc
pop
daa
mov
adc
cmp
cmc
xchg
or
mov
hlt
dec
push
stos
mov
mov
scas
or
mov
enter
mov
dec
cmc
sbb
je
cmp
add
pop
xchg
mov
ljmp
and
pop
sub
rol
in
xchg
movsl
jns
jne
mov
push
sarl
xchg
or
fistps
xor
jns
mov
xchg
clc
outsl
fidivrl
inc
cmc
jmp
push
lock
push
pop
mov
inc
inc
ret
test
test
push
jbe
cmpb
sahf
mov
sub
sbb
cmp
punpckldq
aaa
jecxz
lea
inc
sub
dec
xchg
jb
or
cld
lcall
jne
dec
push
mov
add
mov
cld
fsts
pushl
push
jge
and
inc
lahf
xor
pop
fwait
inc
add
pop
fnstsw
pop
jg
adc
push
lret
js
jecxz
adc
or
adc
and
jge
fs
ds
cld
jecxz
inc
xchg
call
je
or
cmpsb
clc
cmp
aam
push
fstl
std
and
sub
dec
xchg
sub
xor
lcall
push
dec
add
pop
jecxz
mov
in
xor
sbb
push
cmc
or
int3
nop
push
or
in
ljmp
fstps
lock
and
push
push
int
call
mov
in
xor
sub
fdivrs
sbb
or
std
decl
cmpsl
lret
adc
jg
xchg
cld
or
fwait
decb
jge
and
xchg
jns
mov
loop
sar
fistpll
and
cmp
pop
sub
sbb
aam
jecxz
popf
add
xor
push
adc
or
outsb
pop
mov
fstl
and
sub
stos
lock
sbb
cmp
leave
add
and
inc
movsl
dec
cs
movsb
adc
movsb
fmull
out
pusha
stc
sbb
xchg
outsb
and
inc
es
out
pushfw
leave
pop
dec
stos
scas
les
popa
cmp
add
sti
iret
add
pop
add
or
xchg
xchg
mov
cmc
pop
loopne
push
test
mov
xchg
jle
jl
lcall
dec
aaa
fmul
in
jle
xchg
inc
add
arpl
inc
sbb
stc
push
mov
add
sub
mov
inc
sub
adc
das
clc
mov
aas
and
scas
jecxz
ss
add
pushf
add
js
pop
std
incl
inc
leave
fistpll
cli
cmp
sbb
cmpl
push
xor
xchg
iret
mov
xchg
les
sbb
push
sbb
out
mov
mov
or
cmc
je
adc
xchg
lcall
mov
add
rolb
push
out
add
cmpsl
push
push
mov
add
lock
jp
int
xchg
xor
fwait
sbb
dec
jl
fstl
add
xlat
mov
cmp
adc
loop
mov
les
repz
and
incl
mov
lret
repz
icebp
sbb
scas
jmp
ret
fwait
or
ss
add
push
sar
test
xor
and
dec
mov
sub
jle
push
ljmp
scas
cmp
xlat
pop
outsb
cld
mov
in
mov
aad
add
aad
pushf
mov
faddl
insb
or
add
rcll
aam
xor
adc
das
jge
insb
mov
xor
mov
imul
push
pusha
adc
mov
adc
movsl
adc
adc
lods
scas
cmp
adc
push
xchg
stc
ja
daa
cwtl
mov
xchg
xchg
cmp
orb
push
and
js
icebp
push
ret
push
xor
loop
jl
cmp
mov
test
mov
sbb
add
sar
xor
gs
jle
push
loop
lock
insb
jecxz
test
test
ljmp
or
sbb
pusha
movsl
lds
xlat
es
and
iret
pop
jo
cli
and
rorb
or
jb
call
inc
or
xlat
mov
inc
sub
and
cmp
push
pop
sbb
cli
dec
dec
imul
cmp
test
mov
mov
dec
test
lcall
loopne
adc
mov
or
jle
jg
pusha
pop
es
outsb
push
mov
addb
and
xchg
loop
push
outsb
in
cltd
lds
nop
or
mov
icebp
lret
adc
lock
subb
out
ss
cwtl
lock
push
sbb
out
pusha
and
push
mov
ret
aad
and
call
inc
adc
ret
push
iret
sbb
mov
popa
addl
js
add
cmp
inc
cmc
xor
cmp
jno
pop
outsl
fsubl
shl
daa
shl
add
pop
pop
addr16
ror
pushf
sbb
shll
jle
clc
orl
xor
fiaddl
jae
mov
jmp
or
lcall
adc
inc
rclb
jb
in
jns
xor
sub
mov
push
out
inc
dec
xchg
mov
and
orl
push
imul
xor
cs
dec
mov
sub
fbld
jp
push
rcr
cli
fwait
shrb
out
icebp
pcmpeqd
xchg
or
sbb
sub
and
and
testl
aas
jmp
jnp
ljmp
xorb
lods
mov
stos
and
xchg
stc
in
cwtl
mov
jp
push
or
xchg
dec
pushf
movsb
adc
sbb
xor
mul
add
xchg
mov
sub
outsb
jp
xchg
sub
jl
pop
mov
call
pusha
jbe
sub
data16
cmpsb
mov
loope
dec
push
jecxz
mov
decl
mov
xchg
movsl
xor
orl
adc
in
pop
clc
inc
stos
imul
push
pop
fdiv
out
sub
cmc
das
mov
dec
or
adc
adc
loopne
or
adc
fisubl
or
dec
mov
stos
mov
rcl
xbegin
mov
inc
dec
xor
add
adc
cmpsl
aaa
pop
movsb
sub
es
jne
adc
test
pop
inc
les
xchg
clc
xchg
add
mov
adc
cmp
cli
push
loope
loope
jecxz
adc
jp
test
js
add
inc
and
lea
sub
and
into
cmp
js
lret
insb
push
pop
jo
leave
sbb
in
inc
in
dec
rolb
fwait
and
xchg
push
pop
adc
lods
ret
loope
xor
repnz
iret
loopne
mov
stos
pop
das
clc
and
test
jb
mov
das
faddl
cmpsb
jl
adc
cmp
pop
jno
cmpsb
sub
aas
inc
mov
inc
test
sub
clc
jne
jbe
mov
je
jl
fwait
dec
lock
push
mov
and
cmp
xchg
in
js
test
pushf
pop
xchg
call
xor
mov
xchg
shrl
stos
lcall
clc
xchg
je
imulb
push
mov
mov
adc
push
orl
pop
lods
add
jbe
jnp
sub
push
xchg
add
cld
push
in
pusha
stc
cli
dec
and
pop
mov
or
jmp
rcl
fstps
push
dec
in
pusha
clc
in
stc
add
test
sbb
jge
in
lahf
adc
adc
sub
sar
mov
dec
xor
fisttps
icebp
or
or
int3
and
cmp
jmp
cmpxchg
decl
push
arpl
daa
sbb
dec
sbb
mov
hlt
pop
mov
xchg
adc
sub
shlb
sub
sbb
xchg
mov
shrb
aaa
icebp
jbe
fwait
ret
xor
pop
push
add
ret
das
aam
and
rclb
add
cmp
clc
mov
xor
push
ret
outsl
push
loopne
pop
xor
mov
cwtl
xor
lahf
push
inc
fstpt
cmp
cld
call
xor
add
fucomi
js
ljmp
das
adc
imul
pop
jnp
mov
rolb
js
inc
and
mov
subb
push
in
es
xchg
lcall
pop
mov
inc
push
sbb
cmpsl
pop
mov
nop
into
adc
sub
add
ss
jle
push
lret
mov
dec
mov
je
add
and
data16
dec
sub
sahf
pop
enter
sti
cmc
inc
icebp
lcall
orb
jle
dec
clc
add
pop
dec
inc
push
sub
bound
imul
cld
fnsave
sti
mov
add
cs
pusha
mov
sbb
mov
arpl
lcall
push
jns
and
cld
and
scas
jp
outsb
cld
out
xchg
shl
adc
adc
sbb
pop
das
adc
xor
mov
or
movsl
sub
xor
insb
push
stc
lret
dec
or
ret
sbb
or
je
shr
fnstsw
jo
mov
nop
xchg
sbb
andb
incl
xchg
cli
dec
add
pop
leave
xor
pop
lods
mov
xor
sbbl
loopne
cmc
xor
xor
lret
addl
mov
test
pushl
push
test
insb
lret
dec
or
and
mov
loopne
sub
int3
loopne
es
xor
xchg
addb
xor
decl
nop
popa
mov
add
jb
pop
lds
in
aad
mov
lcall
into
sarl
inc
cmp
add
xor
inc
or
xchg
sbb
jg
lcall
push
cs
movsl
dec
out
pop
adc
mov
adcb
mull
addr16
and
jno
sbb
inc
aaa
pop
mov
mov
mov
push
add
test
popa
push
inc
mov
xchg
jae
cwtl
fsts
scas
call
scas
pop
xor
lods
push
mov
xor
push
inc
inc
das
cli
test
xchg
clc
int3
ljmp
or
incl
and
pop
sbb
out
sbb
xor
jle
pop
mov
cmc
ljmp
icebp
xorb
nop
jmp
lods
ret
in
push
pop
inc
push
mov
adc
pop
addb
cs
xorb
sbb
je
loope
loopne
clc
ljmp
loope
sbb
mov
sarl
aas
dec
bound
xorb
mov
push
adc
lock
jmp
add
mov
mov
leave
add
pop
sbb
inc
cmc
mov
mov
or
scas
xor
test
inc
lret
pop
or
pop
fsubs
cmp
out
push
xchg
enter
push
sahf
mov
out
add
jle
out
hlt
or
dec
jb
pop
add
lods
push
sahf
or
mov
aaa
std
incl
xor
add
and
sbb
inc
and
aas
imul
ret
adc
clc
sbb
popa
push
cltd
mov
jmp
pushf
fcmovbe
add
xchg
inc
movsb
or
into
push
cmp
or
sub
int
xchg
lret
pop
add
add
loope
push
hlt
cs
aam
sbb
das
jne
lcall
hlt
pop
adc
nop
movsb
jne
dec
push
add
fs
adc
lcall
xor
cmp
mov
out
ret
adc
dec
fadds
inc
and
add
sbb
aam
lahf
pop
dec
jmp
cltd
jb
mov
aam
jo
js
sahf
cli
or
mov
mov
test
jns
aam
sbb
loopne
jg
pop
cmc
loop
and
pop
jb
mov
jle
sub
dec
mov
adc
inc
jnp
data16
cs
es
dec
loop
xor
or
int3
xor
jnp
add
jo
mov
es
or
aam
lock
dec
pop
adc
test
clc
push
mov
fucomi
mov
clc
stc
test
sub
aad
int
lea
sahf
cmpsb
add
out
push
stos
movsb
jp
mov
pop
xchg
loop
scas
and
ljmp
mov
push
fadds
xor
mov
jl
aaa
fistps
outsl
dec
or
and
mov
lock
mov
jg
repnz
out
ljmp
mov
jmp
enter
cmp
or
push
or
adc
or
insl
es
cli
adcb
dec
repz
ja
aas
cmpl
loopne
addr16
adc
stos
cli
out
rclb
add
mov
xchg
or
jo
jo
out
call
inc
pop
sbb
xor
int3
push
in
and
push
fsubl
mov
mov
adc
add
mov
sub
jecxz
inc
imul
lcall
push
push
cmpsb
push
sarb
jl
and
cmpsb
enter
or
dec
sbb
ljmp
mov
mov
xchg
lea
sub
cmp
loop
jmp
aam
mov
jmp
or
stos
ret
std
pop
push
cmc
adc
or
leave
sar
pop
insb
inc
cmp
pop
cmc
fnstsw
pop
lods
pop
add
loop
add
or
and
in
jmp
adc
add
mov
add
dec
repz
insb
push
add
cld
loope
dec
jae
loope
pop
clc
testb
mov
rclb
clc
fnstsw
adc
push
sbb
and
or
or
cmpsb
adc
push
loop
adc
cmp
shrb
xchg
or
add
scas
mov
das
or
xor
xlat
pop
adc
push
inc
mov
add
cmpl
mov
into
ret
mov
in
inc
xlat
repz
mov
test
mov
negb
loope
ljmp
out
test
fwait
and
sub
pop
mov
idivl
int3
rorb
popa
scas
sbb
or
and
sub
adc
push
pop
ljmp
ss
add
lods
mov
or
or
in
cmp
adc
add
mov
les
xchg
ljmp
cltd
cltd
std
inc
xchg
mov
adc
aad
sub
push
mov
aad
adc
mov
pop
ficomps
adc
sub
add
dec
mov
mov
pop
mov
movl
hlt
adc
mov
loope
rcl
jecxz
jb
cmp
stos
dec
mov
lods
call
mov
add
jbe
sub
dec
or
cmp
push
mov
cmp
jns
push
dec
jbe
jp
jg
aas
xchg
jae
rcrb
dec
mov
and
dec
das
dec
add
cmpb
mov
mov
add
mov
sarb
test
ret
xor
sbb
add
pop
jb
imul
gs
dec
mov
jno
bnd
cld
mov
push
add
fidivs
push
int
dec
stos
add
js
mov
xchg
sbb
bound
mov
call
mov
push
in
clc
negb
adc
cwtl
cmp
leave
cmpb
imul
and
jp
jb
pop
cmpsb
outsb
add
pop
xchg
or
cmp
idivl
test
mov
cld
bound
mov
add
adc
out
aaa
adc
hlt
inc
cmp
es
xchg
jb
inc
cmp
add
xchg
and
fwait
cmc
lahf
aad
dec
out
mov
pop
fwait
mov
stc
push
fisubl
cmp
sahf
aas
rorl
daa
push
jo
ud0
inc
jo
sub
jge
mov
in
fstps
and
icebp
stos
mov
xor
call
pushf
ljmp
out
rcrl
repnz
xchg
lcall
sbb
fs
test
int3
insb
arpl
popf
sbb
or
and
jo
sub
sbb
repz
mov
data16
popf
roll
jmp
inc
les
test
sub
push
test
push
enter
and
cmp
push
cltd
sbb
mov
sbb
add
pushl
push
inc
xchg
dec
cltd
dec
lcall
cld
fsubl
xor
add
inc
cmp
inc
mov
or
in
clc
fists
pop
out
daa
jns
fidivl
test
setge
out
add
and
or
ljmp
repz
sub
scas
adc
add
jecxz
jl
fbstp
movsb
cmpsb
inc
pop
adc
add
in
mov
les
cmp
or
enter
pushl
mov
sbb
sub
inc
loop
pop
cmc
orb
stos
and
xchg
xor
subb
stos
mov
test
mov
pop
jae
push
xchg
adc
and
mov
dec
pop
insb
shlb
in
loope
hlt
jle
das
mov
mov
fmul
test
repz
gs
aas
fdivl
rorb
nop
mov
inc
pushf
out
pushf
or
mov
jmp
aam
orl
mov
pop
dec
loope
daa
sarb
jg
lock
sbb
cmp
mov
loopne
mov
inc
pop
out
add
pop
loop
ret
mov
mov
hlt
subb
xchg
shl
ja
pop
adc
orb
int3
pop
aas
add
outsl
clc
add
call
bound
mov
out
add
ror
sub
jg
push
sbb
les
adc
pop
loope
pop
ja
rolb
adc
cmc
or
loopne
mov
jmp
loop
pop
and
test
imul
nop
dec
or
rcll
call
je
js,pt
lea
xchg
out
sahf
add
pop
or
mov
pop
xor
lea
or
cltd
dec
mov
pusha
sub
pop
cld
addr16
dec
pop
sbb
jae
adc
adc
sub
jbe
pop
mov
fsubrl
out
fdiv
jge
jecxz
mov
je
adc
lret
push
test
loop
std
jmp
mov
or
stc
mov
lods
sbb
lret
loop
xchg
pop
add
mov
push
es
dec
ret
or
xor
push
pop
popa
or
or
jge
lods
mov
ljmp
outsl
out
mov
cwtl
add
jl
jo
sbb
ret
rorb
popa
shr
mov
popf
sub
jp
enter
aam
test
pop
cmp
jge
jo
jl
fnsave
pop
js
xlat
xchg
inc
js
icebp
cmp
mov
repz
and
out
add
push
inc
call
addr16
mov
sub
mov
icebp
stc
ret
pop
les
test
out
dec
aam
and
sub
mov
hlt
xchg
cmpsb
add
lea
pop
mov
jle
sti
add
xchg
push
cmpsl
fdivs
sbb
xor
push
pop
adc
and
add
sub
xor
jle
test
daa
sahf
mov
lock
lock
addr16
xchg
add
dec
pop
sahf
jge
xchg
jae
test
ja
pop
push
mov
loop
ss
sbb
lods
jl
sti
jnp
push
je
dec
cmp
lods
fwait
hlt
adc
mov
sub
fst
aam
int3
aad
aaa
cwtl
insb
movsb
and
repnz
cmp
scas
cmp
sbb
push
cld
sar
sbb
ret
ret
out
jbe
pop
call
push
fdivr
movsl
jle
and
ret
push
clc
outsb
cmpsb
outsb
add
mov
pusha
inc
lods
ret
stos
aad
dec
cld
add
mov
rcl
jle
and
sti
jbe
ffreep
xlat
mov
pop
push
rcrl
divl
add
mov
push
jle
aad
subl
loop
jmp
out
jne
add
lret
in
add
jmp
pop
rcrb
push
push
mov
rorl
or
imul
push
cmp
pop
in
or
repnz
adc
cmc
scas
popa
mov
outsb
dec
arpl
scas
jb
cli
jle
mov
lcall
cli
inc
xlat
and
cmp
das
mov
enter
cmpsb
repz
pop
add
add
mov
lret
adc
pop
inc
jns
sub
jle
mov
or
decl
or
xchg
jl
or
add
xor
imul
add
stos
int
hlt
stos
sbb
mov
mov
dec
decb
lahf
mov
add
fmul
add
sbb
xor
sbb
std
jecxz
inc
and
cltd
rorl
cmp
jecxz
add
je
mov
ljmp
test
call
scas
jae
jmp
push
ja
xor
add
push
sti
bound
and
ljmp
in
test
lds
scas
js
js
inc
mov
loopne
inc
push
jle
jbe
cltd
push
decl
outsb
rcrl
dec
mov
mov
jo
add
sahf
push
inc
cmpsb
cmpsb
movsb
mov
push
lcall
js
inc
je
scas
shrb
xor
mov
xor
push
sbb
sbb
loopne
mov
push
ljmp
fstps
xchg
pushf
mov
clc
incl
push
jge
xor
test
hlt
xor
mov
lea
mov
scas
cli
push
sahf
cs
aas
pusha
push
add
mov
cld
call
fisttpl
sub
xchg
scas
cli
mov
push
xchg
xor
add
mov
test
cmp
in
testb
add
pop
adc
mov
lock
lock
sbb
jg
scas
mov
inc
std
ja
incl
mov
pusha
pop
adc
add
ss
lds
jecxz
mov
mov
adc
iret
out
clc
in
push
out
fs
and
les
cmp
lea
sbb
scas
fiaddl
pop
test
adc
loope
js
inc
mov
clc
mov
fsubrs
int3
popf
aas
adc
inc
ljmp
sbb
or
or
push
lcall
faddl
test
jl
ret
pop
xor
jmp
adc
mov
push
add
je
test
pop
mov
es
inc
inc
cmp
shl
imul
mov
inc
addl
pop
adc
push
jo
stos
loop
push
pop
and
scas
cli
ret
sub
sbb
and
jg
lods
fidivl
pop
daa
dec
pop
push
sub
test
xor
mov
jmp
sub
xor
sahf
dec
push
push
sub
add
cmp
in
loopne
or
or
cmpsl
jecxz
dec
jp
add
loope
cld
jg
mov
sbb
push
xor
rol
rcrb
jbe
add
arpl
inc
or
mov
movb
jp
insb
sbb
pop
push
add
jg
mov
in
jg
push
in
push
and
mov
ss
pushl
sbb
mov
repnz
mov
flds
mov
incb
adc
pusha
xchg
incl
mov
fcomps
ret
adc
dec
xor
xchg
aad
lahf
xor
push
push
mov
sub
fsubrl
xor
sub
mov
clc
idiv
sub
sub
jbe
popa
ret
fadds
into
add
dec
decl
pop
out
mov
cmp
adc
and
push
lahf
jp
adc
mov
shrl
fcomps
or
jp
dec
push
mov
jo
clc
dec
in
fmuls
cmpsb
fs
pop
sbb
jl
decb
xchg
push
sub
push
dec
lods
cmpsb
aas
insl
mov
sbb
dec
adc
dec
jnp
in
mov
inc
outsb
and
fdivrs
add
sub
test
push
sub
mov
cmpsb
and
and
jle
sub
gs
jmp
mov
inc
adc
sti
imul
xchg
test
or
cs
mov
fbld
mov
pop
adc
or
repnz
and
add
cltd
and
pusha
test
andl
push
ret
loop
push
leave
mov
test
cwtl
push
outsb
xor
push
sarb
std
push
dec
js
pop
mov
add
jp
inc
popf
push
loopne
dec
push
cld
jg
mov
rolb
push
or
cmpsl
fwait
les
sub
mov
ljmp
add
out
mov
testl
mov
adc
pop
and
clc
sbb
pop
stos
outsl
shlb
test
imul
aad
dec
pushf
sub
out
and
xor
push
dec
dec
xchg
or
mov
int3
mov
iret
shr
sahf
aam
cmp
jmp
stos
out
mov
jl
mov
cli
jo
por
rolb
or
or
call
cmp
das
fnstcw
movsb
arpl
mov
cwtl
lods
add
and
dec
adc
popa
sar
mov
xchg
lds
push
lods
cmp
pop
fs
cmp
cmc
jmp
cmp
xor
cli
loopne
jl
je
mov
pop
loopne
sbb
xchg
mov
mov
cmp
jl
jb
loopne
mov
dec
lock
int
pop
out
sbb
imul
sub
test
hlt
dec
and
pop
scas
and
jbe
imulb
sub
cld
mov
xor
mov
jmp
mov
jb
lcall
clc
ja
mov
adc
lahf
call
sti
cwtl
add
mov
cld
adc
push
jecxz
movsb
jae
mov
dec
adc
ret
push
cmp
jbe
dec
push
add
fsubs
call
cli
push
rorb
lret
test
sub
xor
cld
inc
pop
pop
push
inc
orb
cmpsb
pop
xchg
subl
fidivrs
xchg
mov
shlb
add
mov
movb
cmp
jg
out
push
loop
xadd
push
ljmp
cmp
andl
xor
je
sbb
add
mov
or
sub
out
es
jae
outsl
fisttps
mov
sbb
and
cvtps2pd
jg
xchg
or
sub
add
add
jg
sbb
in
imul
clc
mov
inc
sub
dec
lret
and
xor
jp
rclb
ds
iret
xchg
mov
lea
sub
adc
dec
and
andl
shlb
mov
into
xor
mov
outsb
jg
jb
sahf
push
push
test
test
incb
cwtl
sahf
mov
jbe
add
decl
cmpsl
fisttpl
fsubs
sub
addb
fists
cmc
inc
in
or
dec
lock
mov
dec
pop
push
mov
cmp
pushf
sub
sub
mov
or
shlb
shll
xchg
xor
ljmp
es
pop
loop
je
adc
pop
test
arpl
les
roll
push
push
add
pop
jecxz
xchg
sub
jmp
inc
mov
push
jb
cltd
clc
jbe
jmp
push
int3
mov
gs
sbb
inc
add
test
mov
outsl
xchg
sub
into
ret
sub
mov
lock
or
jg
push
xor
dec
sahf
scas
push
fisttps
sbb
insl
jns
inc
mov
cli
mov
fs
adc
in
mov
loope
insb
mov
xor
cmp
sbb
xchg
imulb
adc
and
sbb
mov
jp
test
sbb
sbb
mov
and
mov
pop
xchg
mov
loope
fdiv
dec
adc
mov
or
and
pop
mov
bound
push
adc
sbb
ret
and
mov
jg
lret
add
and
add
add
sti
jmp
mov
sti
add
pop
xchg
rcll
cld
and
int3
loop
stc
pop
xor
pusha
adc
movsb
sub
xor
ja
movsl
fsts
lds
mov
adc
dec
add
pop
data16
mov
insb
and
jg
sbb
push
sub
or
daa
daa
pop
into
lea
push
dec
insb
iret
push
push
mov
pop
and
fisttpll
fdivrl
lock
sbb
ss
mov
jle
push
cmpsb
xchg
or
jns
cmp
lock
mov
lods
fistpll
sbb
lret
mov
or
push
inc
out
mov
movsb
jnp
dec
push
pop
lret
add
enter
sbb
push
or
aaa
sarl
and
sub
pop
lock
daa
lods
call
push
dec
popa
push
sbb
push
fiaddl
lret
sbb
xchg
outsw
negl
inc
sub
jnp
or
call
ja
repnz
dec
jns
test
lret
sarl
adc
lods
cmp
mov
movsb
iret
jo
push
jno
sbbl
jl
cmp
mov
mov
inc
repz
je
int
or
xor
xchg
jbe
mov
sub
cld
scas
xor
insb
decl
adc
push
je
dec
push
cld
pop
or
shlb
add
and
lock
or
loop
mov
fcomps
add
mov
shlb
push
movsb
scas
jb
in
mov
push
pusha
mov
sar
roll
push
or
sbb
inc
or
jmp
ret
fnstsw
adc
jb
jmp
leave
add
mov
sbb
cli
nop
es
xchg
scas
inc
inc
xor
scas
cmp
cmp
push
out
jbe
hlt
scas
clc
pushl
rclb
pop
push
and
mov
popa
pop
xchg
lcall
cli
and
lods
mov
pop
push
lods
pushf
push
ljmp
mov
icebp
pop
test
pop
pop
incl
jo
cmp
das
ror
mov
jmp
shll
out
incl
pop
je
pop
hlt
jmp
fs
jg
jmp
adc
dec
int
pushf
lea
mov
fdivrl
jbe
in
stos
push
sub
fisttpl
jecxz
inc
out
cmp
push
lock
dec
xchg
inc
mov
shlb
mov
sub
add
shr
dec
popf
popl
movsb
cmp
cmp
jo
inc
fs
xchg
in
dec
imul
xor
outsb
cmp
adc
ja
cmp
push
aaa
stos
and
sub
cmp
enter
lock
pop
sbb
or
xor
stos
insl
push
mov
mov
xchg
xor
adc
out
jge
xchg
dec
jg
je
dec
add
push
sub
mov
mov
aaa
inc
shr
rorl
outsl
sbb
xchg
pop
pushf
mov
mov
ljmp
pusha
or
dec
test
ret
add
and
push
loope
add
rolb
clc
pop
sub
ds
fildll
mov
pop
dec
lret
loopne
cmp
lcall
xchg
mov
sbb
lock
clc
addl
ficoms
aad
mov
in
or
pop
sub
scas
mov
dec
or
aaa
adc
test
pusha
mov
mov
mov
xorb
sbb
jmp
pop
push
mov
adc
ds
push
and
push
call
jg
inc
xor
and
shl
push
adc
pop
pusha
mov
movsb
sub
cmp
mov
push
mov
pop
cmp
and
and
or
xchg
pop
decl
push
cld
out
movb
lock
outsl
bound
add
fbstp
mov
das
inc
inc
add
add
push
pop
pushf
adc
inc
cmp
mov
roll
shl
sahf
push
pop
lock
jecxz
movl
adc
pop
addb
mov
inc
rorl
mov
ret
pop
and
jl
ret
out
mov
popa
stc
mov
sbb
or
push
xchg
or
mov
loope
mov
xor
lret
xor
out
cmp
xor
js
loopne
mov
jl
popf
sub
ljmp
cld
xchg
jae
dec
repz
nop
and
mov
jb
cli
imulb
jae
add
mov
pop
rcll
xor
js
scas
or
jo
scas
loopne
movb
cltd
jge
decb
xor
rcrl
mov
je
add
pop
ljmp
or
lock
loopne
mov
xor
inc
dec
insl
fcomip
decl
lahf
mov
mov
xchg
es
ret
cmp
or
xor
cmp
jbe
sub
out
ds
outsb
add
pusha
scas
and
inc
lds
jle
pop
mov
insb
sbb
std
mov
jnp
fnsave
test
out
add
adc
andb
call
inc
lea
sahf
push
sub
pushl
cltd
or
sbb
inc
jge
dec
xchg
jp
push
mov
loopne
cmpsb
das
mov
in
shll
mov
inc
cld
or
rcl
xor
mov
mov
ficompl
inc
mov
pusha
js
push
cmp
cmp
and
jno
mov
outsb
lods
push
mov
or
jecxz
inc
push
pop
nop
mov
push
scas
clc
pop
jl
ficomps
lcall
or
mov
mov
in
jmp
rcrb
adc
adc
sub
inc
push
mov
repz
mov
sbb
wrmsr
jb
xor
repnz
pushl
jmp
adc
lret
pushf
or
loope
adc
mov
ficoml
add
ljmp
mov
gs
fisttpll
call
add
movsl
mov
cmp
pop
sbb
and
decl
pop
and
repnz
pop
sub
addb
imulb
or
or
xchg
mov
outsl
cli
ljmp
or
cld
mov
add
add
mov
adc
mov
mov
push
and
nop
mov
cltd
or
sahf
leave
shl
or
ljmp
pop
push
inc
bound
rol
cmc
xor
adc
popa
sub
mov
mov
cmpxchg
out
add
dec
decl
jl
cmp
aad
add
push
adc
sbbb
dec
int3
mov
lock
rcrl
or
js
jns
out
scas
xor
jnp
mov
lcall
idivl
xchg
mov
fstpl
jae
aaa
in
mov
mov
in
enter
clc
push
test
fmulp
fidivrl
xchg
or
sub
out
out
out
pop
add
fstps
stos
dec
push
aad
ljmp
add
je
movb
and
jae
mov
jae
xlat
data16
test
enter
pop
call
leave
lds
lods
mov
or
mov
push
pusha
mov
out
mov
roll
cs
jle
mov
nop
or
add
add
loop
dec
movsl
pushf
dec
cmp
jg
mov
xor
loopne
rcrl
and
jmp
adc
les
data16
and
sub
push
adc
xchg
gs
add
xchg
pop
mov
pop
adc
inc
shrl
sub
xlat
or
adc
add
push
or
out
lods
mov
lcall
add
cwtl
mov
ficoml
mov
in
push
sub
pushl
fstp
inc
push
add
push
pop
dec
cmp
cmp
add
lea
xchg
push
jno
fwait
cmpsb
movsl
cmc
incl
sbb
aad
shlb
sbb
and
cmp
jg
jbe
cmp
adc
xorl
es
mov
shlb
inc
fisubl
in
pop
xor
shl
mov
dec
add
push
pop
call
faddl
xlat
cmp
test
loope
mov
pusha
xchg
call
fmuls
lahf
jo
jle
sbb
inc
mov
sbb
cltd
jp
mov
inc
xor
xor
inc
fchs
xchg
test
sahf
scas
sahf
adc
sbb
pop
add
pop
xor
and
lods
ficoms
add
xchg
mov
shrb
mov
sub
xchg
mov
int
add
ds
push
cmp
dec
idiv
fildll
lods
mov
loope
sarb
mov
ljmp
decl
mov
fs
push
mov
push
xor
call
movsl
fwait
inc
ret
add
mov
push
mov
stos
jno
sub
arpl
dec
adc
mov
pop
sarw
inc
pop
jmp
fnstenv
rorb
sar
cltd
mov
or
insl
pop
jecxz
loope
inc
lret
out
gs
xorb
sbb
jno
les
mov
jbe
pop
test
adc
jecxz
pusha
and
sbb
inc
and
jb
dec
cmpsl
push
mov
adc
popa
shll
sti
aaa
clc
clc
jl
sub
or
or
leave
and
in
mov
jle
lods
jg
leave
dec
lcall
cwtl
sbb
jae
adc
ja
mov
outsb
iret
xchg
lods
adc
pop
add
dec
mov
sbb
stos
movsl
sbb
mov
notb
sbb
sbb
dec
pop
stos
sub
in
pop
xlat
mov
mov
outsl
les
sub
jle
jnp
fdivrl
jle
fiaddl
adc
lods
and
or
sbbb
push
lret
js
mov
push
adc
sbb
movsl
dec
movb
in
mov
lcall
sbbl
add
add
sahf
and
mov
and
movsl
pop
or
sub
stos
push
pop
sahf
pop
cli
stos
push
lock
push
es
fcompl
ret
sub
lret
or
adc
pop
pop
aam
and
push
inc
test
xchg
xchg
cli
jmp
mov
leave
sub
pop
mov
jno
ljmp
push
mov
pop
cs
and
mov
lcall
lret
pop
xor
addb
std
mov
inc
pop
das
adc
lea
ja
fstpl
push
pop
and
cmpsl
sbb
mov
hlt
cmc
aaa
fiaddl
dec
test
sbb
sbb
mov
jmp
push
cmpb
mov
push
daa
aaa
inc
setp
test
adc
dec
insb
insb
lcall
pop
push
push
and
jo
xor
mov
cmp
ja
xchg
sti
ja
mov
sub
in
cmp
repz
push
pop
lea
push
fsubl
sub
lds
mov
sbb
inc
test
daa
cmp
pop
or
dec
xor
push
cltd
test
cwtl
aas
aas
xchg
push
out
shrb
ret
popa
sahf
insl
pop
in
leave
loope
ja
adc
movsb
jo
cwtl
inc
fisubs
inc
cmp
popa
adc
aam
out
adc
mov
fldt
aaa
fimull
scas
adc
push
cld
cmpsb
pop
add
loopne
jle
push
adc
cld
mov
push
cmp
in
xchg
xor
push
ror
add
cld
or
mov
pop
data16
push
movsb
xor
dec
fstl
jge
push
call
mov
add
pop
js
mov
loop
dec
mov
subl
sbb
fs
push
jbe
dec
adcb
xchg
lods
jbe
and
push
xor
pop
add
xor
enter
ss
xor
cli
enter
push
outsb
scas
clc
mov
adc
jl
inc
mov
js
xor
push
enter
out
add
arpl
cmpsb
add
outsb
rcrb
and
push
jmp
fmuls
sub
cmpb
inc
sbb
nop
mov
xor
test
imul
xchg
dec
in
mov
fiadds
pushf
daa
inc
mov
sub
adc
movsb
daa
or
add
cmp
out
push
sub
inc
inc
fs
in
cmp
adc
rcrl
sbb
jmp
rcl
inc
test
xor
fsts
push
aam
shrl
sub
ja
addr16
mov
cmpsl
or
mov
mov
in
jb
ljmp
clc
call
cli
or
xchg
mov
out
aam
jne
ret
test
xorb
xchg
inc
pusha
mov
push
inc
int3
jbe
sub
cld
xchg
testb
mov
test
push
es
add
fmull
fisubl
xor
and
sbb
ret
push
add
jmp
xor
imul
lahf
loopne
pusha
jecxz
adc
or
cmp
mov
adc
fmuls
sub
pop
adc
mov
sbb
clc
pop
jge
add
cmpsb
sti
cmp
mov
pop
imull
push
insl
inc
test
lds
lds
pop
add
cmp
call
shlb
push
pop
hlt
call
test
shrb
mov
in
sub
mov
pushf
fimull
insb
adc
insb
stc
cmp
cmpsb
icebp
scas
stos
js
dec
or
push
cmp
pop
sub
fwait
cs
sbb
les
cmp
sub
movsb
gs
or
js
and
aas
push
pop
pusha
jnp
int3
sub
in
and
sbb
or
mov
jg
jmp
es
cltd
dec
pop
int3
and
dec
bound
outsb
xor
mov
decb
push
popa
mov
push
notl
push
pop
mov
add
fdiv
xor
mov
add
mov
clc
jp
out
sub
push
cli
and
inc
xchg
cmp
scas
adcb
add
pusha
fmuls
sub
adc
inc
adcb
hlt
dec
dec
push
scas
div
xchg
sbb
sar
or
sub
sub
incb
mov
jbe
dec
sub
cmp
add
out
dec
sbb
push
xchg
pusha
adcl
add
mov
clc
nop
dec
fdivp
ljmp
pop
stc
aaa
pop
and
aam
aad
or
xorl
hlt
adc
mov
inc
das
test
mov
decl
negl
outsb
mov
mov
mov
dec
mov
arpl
and
pop
addl
popa
shlb
push
cmpb
push
push
mov
sub
popa
xchg
or
insl
or
mov
push
out
push
mov
xchg
jecxz
lock
ret
mov
jmp
push
push
scas
les
push
and
call
loopne
nop
pop
into
js
add
mov
call
jle
mov
aad
cmpsb
clc
dec
incl
mov
jne
add
mov
jmp
dec
paddd
inc
inc
daa
mov
lods
test
jmp
test
jg
adc
xor
dec
clc
push
xor
push
mov
cmp
sbb
dec
bnd
adc
shlb
jle
ds
jns
add
pusha
add
ljmp
rclb
pop
movsb
mov
lock
out
mov
mov
movb
push
xor
mov
or
jg
and
sbb
addl
cmp
cli
jg
cmpsl
mov
mov
lods
sub
pop
test
mov
popf
cmpb
fdivrl
pop
test
lock
je
push
sub
nop
bound
dec
mov
xor
movsl
mov
pop
aam
pushf
orl
mov
inc
in
fimuls
and
push
clc
sub
cld
push
push
jp
pushf
notb
adc
add
mov
jb
ret
and
mov
shlb
xchg
push
ss
incl
cwtl
into
sub
clc
rcrb
mov
jl
add
pop
inc
dec
push
imul
mov
cmpl
cmp
inc
in
jg
icebp
data16
stos
and
xor
out
outsb
enter
adc
or
mov
fbstp
mov
mov
mov
pop
jge
icebp
or
add
cld
lret
inc
and
or
lret
inc
cmp
mov
movsb
jl
dec
fldenv
das
or
loop
mov
and
cld
mov
push
or
or
xor
or
ljmp
dec
ret
loope
sbb
mov
adc
jbe
std
add
inc
mov
call
push
fidivrl
xchg
push
xorb
mov
adc
inc
cmp
sub
call
push
xchg
inc
dec
mov
mov
add
loop
int
dec
jno
and
ja
icebp
pop
pusha
fdivrs
ret
out
jmp
mov
loop
subl
lock
int3
mov
lret
or
lcall
out
lahf
js
repz
leave
jecxz
fsubs
movsl
cwtl
push
pushf
or
mov
jl
test
inc
in
ret
test
pop
sbb
pop
fsubl
sub
mov
testl
sub
test
push
cli
inc
lret
dec
cmp
iret
ret
mov
mov
add
stos
movsb
add
xor
rclb
cli
inc
cmp
push
fcomps
push
int
xlat
fdivrl
xor
pop
inc
add
jnp
lods
pop
mov
out
fadd
dec
adc
lds
mov
in
daa
jo
adc
in
scas
pop
fsubrs
lret
add
pop
pop
icebp
test
dec
sbb
pushf
adc
jmp
gs
ljmp
ret
ss
jle
call
movsb
mov
aad
mov
sub
mov
xchg
push
fwait
test
xchg
or
lahf
xor
cmp
call
mov
std
cld
adc
dec
iret
into
pop
add
adc
cmpl
jmp
jns
jmp
rol
jl
out
movsb
sub
fucom
into
add
or
in
push
inc
pop
pushf
lahf
loop
daa
loopne
decb
adc
shr
mov
dec
push
mov
repz
mov
xchg
pop
sbb
mov
mov
push
sbb
pusha
das
test
in
sahf
stc
push
mov
xor
cli
int3
out
pop
cmpsl
test
xchg
andl
mov
lret
jmp
and
fistl
push
and
pop
loope
mov
mov
pop
les
gs
shll
rcll
lahf
fldl
fidivl
cli
mov
adc
negb
test
push
loope
sbb
jle
pop
sbb
in
push
test
or
cmp
adc
mov
sub
call
push
clc
enter
addb
out
adc
sbb
xchg
dec
cmpb
shrb
push
pop
fcmovbe
inc
frstor
fnstsw
data16
inc
inc
mov
ret
das
ret
shl
adc
popa
push
stc
shl
shll
xchg
test
sub
fildll
ret
rol
mov
pop
mov
cmpsb
sarl
call
pop
hlt
add
clc
dec
sub
rorb
cwtl
mov
incb
stos
les
daa
jo
call
push
dec
and
pop
pop
mov
jb,pn
jg
cld
mov
sbb
pop
push
negl
and
dec
stos
cmp
jg
pushl
adc
rcr
pop
cld
push
into
ljmp
push
xor
jecxz
lcall
and
bound
pop
fcomps
or
mov
movsb
xchg
and
inc
dec
std
dec
in
mov
mov
jno,pt
sbb
mov
sub
mov
sarb
xchg
mov
rclb
incl
enter
push
mov
cmp
xchg
aas
inc
into
addr16
js
out
rclb
push
shrb
clc
pop
outsb
fistpl
lock
insb
imul
ja
mov
mov
push
repnz
movl
adc
clc
mov
pop
sbb
pop
in
add
lcall
add
sahf
jne
sahf
aam
cmp
loop
dec
xchg
jl
lods
repnz
sub
test
push
xor
and
or
xchg
push
mov
cmpsb
add
ret
or
bound
cli
fs
cwtl
scas
jg
ljmp
clc
jle
pushf
push
mov
jae
loopne
sti
ss
xor
decl
or
cmpb
sub
jle
inc
mov
mov
cmpsl
or
adc
dec
shlb
mov
jne
pop
scas
and
push
dec
call
sbb
add
ljmp
mov
push
inc
mov
push
loop
add
ja
jle
rcrb
mov
in
adc
push
fists
clc
mov
es
int3
fnstsw
jns
pusha
xor
outsl
mov
push
sub
cmpsl
decb
mov
push
push
mov
mov
icebp
decl
testb
cmp
jmp
mov
das
jb
lock
jb
and
and
add
enter
adc
jns
jmp
ret
jmp
mov
add
sahf
and
dec
pusha
pop
outsl
insb
lea
sbb
mov
dec
test
pop
insl
lea
not
mov
push
shlb
cmc
or
or
rorb
bound
repnz
adc
xlat
popf
pop
sbb
call
push
pop
ficomps
and
xlat
ss
jg
xchg
shr
xchg
dec
dec
push
in
mov
ljmp
jb
mov
mov
cmp
adc
cmp
les
sbb
inc
stos
pusha
out
push
jo
sahf
adc
sub
jns
mov
adc
bound
popa
adc
movsb
xchg
movaps
loopne
or
inc
fwait
pop
jo
and
out
jp
insl
mov
inc
cmpsb
mov
add
clc
or
pop
loope
add
xchg
sti
push
inc
push
insl
add
pop
das
je
cmc
es
out
enter
outsl
sub
out
cwtl
mov
xchg
xor
lods
sbb
jmp
movsb
int3
fwait
addl
int
sub
mov
repz
sub
cmpsl
mov
mov
add
repnz
lock
sbb
fistpll
test
pop
sub
add
ljmp
test
mul
push
gs
movsl
adc
aam
jecxz
incb
pop
jo
push
cmp
add
mov
ror
jne
repnz
mov
jle
inc
pop
cmpb
insl
shlb
std
adc
clc
lret
inc
and
ja
cmp
ret
jae
andb
xor
clc
and
icebp
shlb
or
popa
cld
jecxz
dec
sub
and
ljmp
shlb
pop
mov
je
xchg
mov
movsl
incl
pop
and
rcrl
add
pop
mov
mov
push
mov
cld
inc
aaa
fimuls
mov
dec
dec
call
jmp
or
mov
cmp
cld
enter
dec
mov
lock
xor
mov
rcrb
iret
push
xchg
xor
pop
orb
push
fnsave
xor
xchg
pop
lock
cmpsb
mov
loope
ret
pusha
mov
sub
jge
mov
xchg
jecxz
cmpl
mov
mov
xchg
mov
push
mov
ss
push
fcompl
push
jmp
dec
ss
aam
pop
or
movsb
scas
outsl
cmp
aaa
or
sahf
push
enter
fldl
cmc
dec
sti
push
pop
sub
and
mov
hlt
shrb
add
scas
and
jb
cmpsl
add
movl
loopne
loopne
mov
dec
inc
fdivr
pop
lods
mov
xchg
dec
mov
std
pop
cmp
pop
js
sti
and
inc
dec
int3
int3
clc
sarb
ret
mov
pop
aam
adc
mov
aaa
and
fnsave
gs
inc
int
in
and
cwtl
xchg
mov
jb
lock
mov
into
or
ror
pop
fs
out
inc
mov
adc
into
fcmovbe
lret
sbbb
inc
stos
inc
cmp
dec
jl
xchg
in
sbb
aad
dec
shl
stos
and
cmp
in
and
mov
xor
clc
xchg
push
pop
les
sbbb
mov
cmpsb
ficoml
sub
push
mov
add
cmp
xchg
cld
into
dec
mov
gs
test
and
dec
inc
data16
cmpsb
pop
cmp
fdivr
aaa
hlt
jo
push
mov
iret
add
sbb
push
push
sub
pop
jo
pop
jns
xchg
loopne
fsubrl
adc
sbb
dec
mov
nop
sub
adcl
jns
pop
adc
or
in
inc
mov
xchg
and
sbb
sti
dec
ljmp
pop
iret
inc
mov
and
fsubs
lods
inc
std
rcr
inc
pop
fcmovnb
repz
dec
xchg
jg
jg
pushf
imul
sub
sahf
mov
adc
sbb
mov
lcall
and
xor
xchg
icebp
pop
ja
movsl
jle
pop
cmp
push
jbe
shl
jg
inc
jbe
loopne
push
dec
movsl
pushf
pop
es
mov
mov
pop
fdiv
fwait
std
sub
jg
cmp
mov
inc
lods
fnstcw
fcomip
scas
inc
pop
test
cmp
lds
cmp
cmc
divb
stos
and
sbb
ret
mov
ret
hlt
inc
outsb
sub
xchg
pop
and
xor
pop
push
enter
and
je
cmpsl
sbb
inc
dec
xor
outsl
clc
mov
cwtl
mov
iret
cli
out
mov
inc
and
ss
sbb
icebp
dec
or
mov
dec
repz
or
ds
adc
pop
rclb
jle
ljmp
mov
popf
mov
mov
fwait
pop
mov
add
loop
mov
mul
mov
es
scas
push
cmp
insl
popl
mov
mov
mov
dec
jl
push
or
popa
pop
shrl
inc
test
lret
mov
cmp
in
jns
iret
les
xchg
pushf
pop
xchg
nop
shl
push
push
cli
rol
outsb
pop
inc
ret
sbb
cwtl
je
cmp
sbb
mov
adc
adcb
out
ret
cmp
aam
mov
jl
icebp
push
xchg
mov
mov
mov
loop
pop
lds
sub
sahf
push
xchg
push
imul
loop
inc
je
aam
fsts
filds
js
icebp
pop
push
aam
pop
shll
mov
fnstenv
lret
sbb
jo
push
js
cmpsb
fisubl
shll
lods
cmp
popf
loop
sbb
and
and
cld
leave
mov
subb
dec
pop
cmp
add
add
add
dec
pop
int3
pop
fcompl
je
lahf
inc
jl
mov
enter
xchg
dec
mov
inc
cmp
in
dec
mov
test
das
subb
sub
clc
shlb
pop
add
add
xor
pop
ret
cmc
fildl
and
fdivrs
ret
sbbb
clc
fildl
test
cmp
les
pop
mov
sahf
shlb
movl
call
push
lret
push
out
rolb
inc
call
or
roll
adcl
jge
cltd
dec
and
fmulp
push
fisttps
cld
dec
outsl
popf
xor
imul
hlt
test
daa
jp
pop
addb
dec
adc
lods
test
and
mov
fwait
roll
xchg
pop
hlt
insl
adc
push
lea
jg
inc
test
pop
cmp
pop
pop
xor
cld
stos
std
cmpsl
xchg
sbb
outsl
add
scas
inc
call
xchg
je
push
cmp
pop
hlt
mov
cmp
loope
mov
test
call
jmp
mov
les
lods
adc
or
sbb
nop
mov
sbb
mov
push
aam
pop
pop
decl
hlt
and
cmp
mov
jmp
outsl
sar
cmp
inc
movss
cmpsb
inc
nop
xchg
ljmp
mov
adc
cmp
mov
mov
mov
inc
or
jle
les
jmp
hlt
mov
es
jnp
pop
scas
arpl
dec
adc
hlt
lock
sbb
shrl
and
or
outsb
mov
ds
cmp
jmp
imul
add
cmpsl
xor
fs
sarb
mov
in
cmpb
cmc
jno
movsb
push
stc
push
and
test
in
fcmove
pop
mov
mov
outsb
inc
movl
insl
cld
lahf
cmp
xor
out
adc
xchg
pop
jno
pusha
add
stos
inc
mov
int
xchg
mov
ljmp
and
push
call
fstps
inc
outsb
pop
mov
adc
adc
dec
or
out
mov
jnp
std
mov
rcll
repz
clc
decl
lds
sarb
inc
xsaves
aad
scas
jp
cmpb
adc
incl
gs
or
mov
mov
pop
or
mov
and
jns
out
cld
mov
lods
cmpsl
loop
sbb
inc
pop
stc
dec
xor
jo
repnz
and
sbbb
adc
pop
divb
lods
push
out
mov
inc
xchg
dec
cmp
je
pop
cli
or
mov
and
sbb
mov
inc
mov
adc
stc
fcoms
scas
inc
std
inc
jecxz
stos
incl
roll
jecxz
fiadds
popf
arpl
and
mov
shll
popf
rorb
test
ss
push
bound
fidivrs
pushl
mov
mov
leave
add
and
ljmp
cmp
enter
sbb
stos
fwait
push
inc
sub
popf
pop
xchg
or
test
xlat
dec
push
dec
test
and
push
mov
mov
pop
mov
push
cmp
nop
aaa
scas
movl
faddl
xchg
lcall
mov
shr
cbtw
or
stos
sub
and
and
inc
stos
out
cli
ret
sub
add
dec
xor
cmp
test
jno
roll
adc
ss
std
xchg
sub
mov
je
out
loop
shl
push
je
insl
or
mov
cltd
fsts
fsubrl
mov
in
in
icebp
sbb
insb
clc
movsb
mov
lcall
mov
fldl
jecxz
or
push
ret
jle
inc
jo
ja
mov
incl
js
or
sbb
sbb
mov
aad
mov
cmp
cmp
sub
jmp
cmp
lods
xchg
xchg
add
push
shlb
and
jae
pop
pop
movsb
push
mov
loop
sub
lret
cmp
pop
testb
mov
mov
dec
mov
sbb
jmp
subl
mov
dec
xchg
cmp
outsl
mov
mov
ljmp
add
adc
call
dec
decl
sarb
sbb
loopne
add
fists
or
bound
jle
xor
pop
adc
cmpxchg
pop
clc
inc
inc
cld
mov
mov
cltd
jo
jo
inc
jle
icebp
pop
lret
fdivrs
mov
repz
scas
push
add
mov
pop
je
adc
sub
inc
rolb
les
orl
sbb
push
mov
and
jge
fxch
xor
cwtl
push
insl
cmp
adc
jo
mov
fisubrl
addr16
incl
dec
cmpsb
xor
push
aad
or
pop
push
fistpl
dec
lret
imulb
or
lea
sarl
shrb
pop
cmc
or
xchg
mov
imul
call
pusha
lds
add
loope
stos
mov
mov
ret
clc
imulb
add
lods
push
jmp
pop
ljmp
sbb
jno
mov
mov
dec
add
mov
jp
fs
push
pop
or
pop
mov
xchg
mov
incl
addr16
mov
das
and
add
subl
lock
lock
pop
lods
adc
data16
sbb
push
and
mov
orb
jne
sbb
pop
mov
and
and
fcoms
ret
push
js
pop
call
push
mov
or
dec
ljmp
cmc
sarl
pop
sbb
sub
push
bound
jg
and
jo
pop
bound
push
cltd
add
push
xchg
push
ret
mov
jno
aaa
push
loopne
fisttps
lea
loope
cwtl
mov
and
and
jg
push
mov
stos
add
mov
mov
fbstp
pop
or
inc
mov
nop
out
cmp
das
cli
incl
mov
repz
mov
add
add
add
cmc
pop
cmpsl
jno
rolb
add
dec
adc
test
add
mov
xor
push
adcb
and
push
fs
in
loope
inc
jl
lods
mov
xchg
xlat
sub
stos
stos
adc
adc
sbb
jnp
cmp
clc
add
cmp
pop
fwait
rcl
sbb
xor
mov
push
lds
ds
xchg
lods
clc
adc
pop
incl
push
mov
push
push
int
push
leave
adc
out
adc
and
add
mov
dec
and
mov
decb
dec
pop
add
push
push
lcall
push
je
pop
ret
call
mov
shrb
xchg
sub
sub
fstpl
push
subb
xor
movsl
ljmp
loopne
jo
jge
repz
xchg
clc
dec
push
test
lcall
sbb
xchg
inc
cmp
pop
test
rcr
pop
mov
test
fisubl
pusha
aaa
or
fdivr
or
inc
iret
cs
cli
xor
call
fstpt
mov
jo
mov
xchg
insl
das
and
xor
mov
fs
adc
push
andb
mov
adc
push
and
mov
hlt
scas
jnp
and
imul
mov
mov
mov
cli
push
adc
enter
and
mov
dec
bound
or
pop
cmp
mov
sub
dec
sub
inc
adc
add
inc
add
pop
iret
or
mov
jl
pusha
lret
push
inc
jg
shll
cld
lret
mov
loope
jle
dec
jg
hlt
add
push
lea
jmp
lahf
xorl
shll
mov
sbbb
fcoms
aad
pop
push
xor
std
fisubrs
shll
add
sbb
mov
or
ds
repnz
lods
sub
ljmp
jb
push
inc
out
add
mov
or
outsl
xor
pusha
pop
aam
in
pop
and
mov
adc
jbe
xchg
jo
add
xchg
mov
rcrb
cwtl
incl
mov
pop
or
or
popa
xchg
popf
ret
jbe
xchg
jle
les
push
insl
xchg
add
fwait
js
jg
int3
jecxz
mov
xchg
hlt
in
or
decl
movsb
adc
inc
and
mov
jbe
adc
push
sbb
inc
pop
sbb
and
daa
xlat
clc
call
cmpsb
test
jecxz
mov
or
mov
dec
je
outsl
adc
sahf
cmp
dec
int3
inc
pushl
clc
xchg
repz
push
cwtl
loopne
lea
aaa
dec
ret
ret
xchg
sbb
adc
inc
sbb
fmuls
adc
daa
shl
hlt
call
dec
mov
out
push
xor
icebp
scas
repnz
mov
inc
stos
xor
flds
fisttpl
xlat
jmp
xor
test
or
into
cwtl
ljmp
ret
shlb
push
les
lcall
pop
or
xor
mov
sub
and
insb
mov
scas
iret
subb
mulb
mov
pop
mov
mov
loop
mov
push
mov
dec
mov
inc
push
loope
sbb
je
fisttpll
ds
call
push
stos
adc
sbb
icebp
int3
outsb
test
pop
push
outsb
pop
int3
sub
inc
pop
stos
std
jg
fstl
mov
fmulp
outsb
es
add
fisubl
and
push
jecxz
jp
fidivrs
mov
jl
sbb
xchg
icebp
jle
movsl
jne
sbb
mov
jp
or
xchg
inc
test
fdivs
mov
mov
jnp
ss
insb
sbb
stos
and
sub
rclb
xor
xchg
popa
mov
adc
xchg
mov
cmpsl
cwtl
movsb
cmp
adc
mov
adc
test
mov
add
stos
aam
jno
jbe
outsl
or
pop
sti
mov
sub
or
sbb
je
jle
pop
or
call
xor
cmp
les
inc
loop
mov
xchg
mov
fs
jp
js
push
movsb
dec
sub
add
pop
orb
push
pop
mov
push
mov
ret
sti
rcrb
dec
mov
xchg
and
jns
int3
add
imull
ficoms
clc
fsubrl
and
pop
lea
ret
daa
mov
jo
or
add
jae
add
ja
mov
std
inc
addb
pop
rclb
cmpl
add
ja
call
lret
xchg
shl
mov
cmpsl
mov
sbb
and
shrl
mov
dec
orb
mov
cs
fdivp
add
add
adc
loopne
or
mov
adc
xor
jg
cmp
out
stc
jnp
mov
cltd
popa
fcoml
jl
ss
ror
add
xor
or
adc
sbb
mov
push
inc
inc
roll
das
jae
sbb
jg
rclb
push
sbb
js
pop
and
sub
mov
mov
fcmove
sub
fistps
sbb
pusha
loopne
pusha
dec
test
gs
jmp
xchg
add
add
nop
mov
pop
adc
jge
fsubl
repz
add
jbe
addr16
cmp
dec
adc
xchg
sbb
add
andl
mov
push
adc
sahf
jl
push
scas
xor
lcall
dec
clc
mov
cli
movsl
fdivl
lcall
mov
push
int
popa
subb
jle
adcl
mov
adcl
mov
mov
inc
lea
jmp
stos
in
mov
test
adc
or
sbb
ss
adc
sbb
sub
fmul
push
fdivp
jbe
jne
jp
je
jg
sahf
insb
push
push
lahf
inc
sub
aaa
hlt
aaa
rcrl
add
mov
push
jl
sbb
sbb
shl
je
jle
inc
mov
pop
cltd
js
aaa
pop
out
mov
adc
cmp
mov
test
or
insl
jbe
mov
ret
scas
je
adc
mov
notb
inc
pop
inc
scas
aas
shlb
sbb
popa
test
es
pop
outsl
and
insb
in
sbb
mov
rolb
ret
jmp
push
adc
fldt
test
cmp
mov
stos
mov
push
add
adc
popw
adc
sub
and
fildl
mov
push
ret
repnz
mov
rclb
ret
xlat
and
cwtl
ja
add
adc
cmp
outsb
and
push
add
add
adc
addr16
imul
add
push
pop
pop
mov
jle
and
jmp
inc
mov
push
enter
push
sbb
ja
push
pop
call
insb
repnz
add
out
mov
add
dec
jl
cmp
mov
dec
sub
pop
dec
sbb
jnp
scas
loopne
add
adc
movsb
dec
add
addr16
insl
pusha
cmp
sub
lds
enter
outsl
add
popf
stc
add
push
adc
cmpsb
je
add
out
dec
inc
rorb
movsb
icebp
scas
or
push
inc
add
fcmove
dec
icebp
incl
mov
mov
mov
push
mov
orb
mov
loope
cli
sbb
or
jbe
inc
out
push
and
xor
mov
push
icebp
call
jmp
push
dec
es
push
adc
lods
dec
adc
jecxz
mov
nop
adc
xor
test
call
fsubrp
jb
dec
pop
mov
fwait
push
sbb
loopne
popa
lock
fcompl
add
or
sbbl
imul
or
sbb
push
adc
xchg
push
mov
mov
mov
xchg
in
lea
xlat
or
jbe
adc
das
test
add
shl
movb
add
lret
subl
xchg
fimull
add
pushf
adc
int
aam
mov
add
xlat
or
add
out
mov
cmp
or
fwait
stos
pop
pop
mov
dec
nop
aas
cmpsb
inc
mov
pop
jbe
enter
jns
in
or
or
lret
or
adc
jb
add
xchg
pushf
sar
pushl
lea
mov
push
dec
subb
aam
cwtl
sub
sbb
push
ljmp
insl
dec
in
stos
scas
out
cli
mov
stos
push
mov
fidivs
movsl
inc
mov
leave
sbb
or
pop
loopne
adc
sub
jbe
cmpsl
mov
mov
add
gs
push
addr16
and
les
adc
pop
std
jg
rolw
or
sti
leave
or
popf
loope
inc
loope
jge
mov
decl
adc
add
cmp
jno,pt
cmpl
xor
jmp
or
cli
call
mov
pop
or
pop
scas
add
push
inc
mov
pop
fs
fimull
data16
pop
cmp
les
push
pop
add
nop
out
into
mov
filds
daa
cs
roll
shll
inc
pop
call
adcb
call
insb
clc
in
push
mov
mov
sbbb
xchg
push
bound
push
or
in
pop
in
dec
fwait
mov
ror
adc
jge
jnp
xchg
cltd
jge
pop
jmp
mov
lret
rorb
int
scas
call
mov
fnstenv
test
sbb
test
stc
daa
sarb
push
mov
sbb
push
stos
leave
or
mov
int3
les
ljmp
add
jno
in
mov
mov
inc
aam
ja
sub
or
or
std
push
inc
xor
mov
das
xor
aaa
jb
iret
or
cmp
cld
data16
rolb
in
jle
loop
push
inc
inc
sub
xchg
dec
dec
repnz
pop
ljmp
adc
je
xor
sbb
mov
ror
cmc
fbld
test
mov
push
imul
je
or
mov
stos
fildl
clc
push
jbe
and
jg
xchg
insb
or
sub
scas
xor
inc
xor
cmp
mov
or
insl
imul
lret
push
fimull
lods
sbb
out
rcl
sahf
inc
movsl
push
lcall
andl
and
in
jae
shlb
pop
rolb
sar
jg
cmp
sar
adc
sub
xchg
icebp
fdivp
dec
lcall
add
sbb
push
les
and
movl
insl
adc
fwait
adc
arpl
or
inc
mov
add
call
dec
mov
fcomi
adc
in
pop
stc
ss
icebp
xchg
xchg
xchg
inc
push
inc
sub
adc
mov
jmp
xor
sbb
test
push
jmp
sub
pushf
sbb
push
idivb
xchg
incl
pop
mov
pop
into
xchg
pop
and
and
test
das
sbb
pop
je
fcomip
cld
push
and
mov
push
ja
inc
movsl
das
adc
add
mov
dec
lret
sbb
clc
movsl
inc
gs
push
jp
movsb
outsl
hlt
ljmp
fs
inc
fidivs
lcall
push
and
pop
push
mov
sub
mov
mov
fcomps
sub
sbb
mov
adc
std
fwait
sub
incl
push
pusha
faddp
xchg
popa
out
insb
cmp
xchg
mov
in
movd
jg
push
fisubs
addr16
dec
negb
int3
and
jnp
ljmp
inc
test
dec
enter
enter
popf
lahf
addr16
push
push
stc
or
fbstp
add
jno
pop
or
push
or
xor
lret
cmp
mov
fdivs
xchg
lcall
add
fwait
sbbb
lcall
sti
sub
je
add
insl
and
xor
ds
or
xor
mov
mov
mov
hlt
jg
cmpsb
loope
inc
jmp
int3
int
subb
out
into
repz
or
cld
dec
inc
sbbb
and
test
clc
mov
jne
filds
push
clc
in
pusha
push
ror
and
out
push
inc
jecxz
add
pop
xor
jae
mov
test
ffreep
lret
jg
jp
cmp
fsub
dec
mov
inc
sub
dec
and
inc
dec
adc
lock
mov
xchg
push
sbb
mov
xchg
shl
in
fs
pushl
push
in
dec
inc
mov
fldt
lret
repz
sbbl
add
mov
incl
stc
test
mov
loop
mov
into
lods
or
or
fcomip
sti
inc
int
and
and
dec
clc
or
fs
out
inc
mov
mov
fbstp
inc
out
cli
lcall
arpl
in
imul
loopne
sbb
push
or
jmp
or
shr
test
sub
sarb
and
cmpsb
push
lret
pop
inc
jb
push
and
xor
add
inc
orl
pop
repz
xchg
mov
pop
sbb
sub
and
shl
adc
int
loopne
call
jnp
mov
adc
sub
in
add
nop
cli
jmp
push
xchg
pushl
pushw
jbe
push
shl
cmp
jno
add
add
insl
loope
jnp
ljmp
add
push
test
sbb
cmp
pop
adc
outsb
and
ljmp
negb
push
sub
adc
add
ja
adc
ljmp
pushl
and
mov
mov
mov
or
mov
out
dec
sub
aaa
into
pushf
stos
pop
mov
filds
sbb
xor
ret
and
jae
in
loope
xchg
in
ss
push
xchg
jne
scas
mov
mov
mov
das
push
adc
and
xor
mov
rcrl
incl
inc
scas
jns
je
and
imul
ja
shrb
lcall
sahf
cmp
xchg
iret
js
jnp
sbbb
int3
dec
and
sahf
inc
es
decl
rolb
sbb
daa
lock
adc
mov
ret
rcll
ljmp
aad
aaa
movsl
hlt
mov
cmpb
mov
mov
lcall
xorb
mov
outsl
cmp
frstor
jbe
mov
cmpsl
pop
cmpsb
jp
sbb
decl
xchg
adc
and
adcb
jl
sbb
mov
jmp
popa
add
mov
xor
inc
push
insl
xor
mov
iret
imul
aad
cmp
jmp
mov
dec
jb
xchg
mov
jae
and
pusha
jg
je
js
scas
dec
cwtl
loop
cmp
cmp
mov
xor
push
lock
cmp
test
cli
jmp
insb
sbb
lcall
xchg
mov
mov
cmpsb
ljmp
inc
xor
push
jb
pop
sub
call
cmp
pusha
adc
stc
lret
dec
shll
stos
loop
cs
pop
shrb
add
mov
call
std
icebp
sub
insb
clc
xor
cmp
aam
mov
dec
fwait
jne
xor
incl
push
pop
push
sub
mov
iret
mov
add
xor
xchg
daa
icebp
adc
lcall
cmp
adc
jmp
fmuls
decl
cmc
xchg
ljmp
mull
out
mov
cmp
pushf
shrl
fists
pop
imul
test
icebp
into
push
sti
bswap
pop
add
aaa
test
lcall
mov
mov
lea
mov
rclb
sbb
pusha
clc
and
jbe
ljmp
repz
push
sbb
aam
pop
jae
jmp
ja
divb
lcall
and
pushf
mov
inc
xor
push
sub
xchg
dec
insb
mov
ljmp
push
push
sbb
andb
divl
add
mov
sub
call
mov
push
cmpsb
sbb
pop
gs
dec
dec
sub
cmpsb
cmp
es
popf
jmp
fiadds
mov
xchg
mov
jb
dec
mov
mov
out
mov
mov
mov
pop
hlt
call
xchg
outsb
imul
sbb
jmp
pop
adc
jg
lds
xor
incl
lods
ss
je
xor
in
push
pop
popa
aaa
enter
sti
leave
add
fmuls
std
test
incl
addr16
fcmovu
adc
call
sti
fs
arpl
mov
in
fs
xor
pop
xchg
cs
jbe
dec
xchg
push
dec
mov
and
push
pushl
int
sbb
loope
sub
mov
in
test
fnstenv
out
push
xchg
cmpsl
jge
mov
pushl
testl
scas
mov
rcrl
xchg
and
pop
dec
inc
in
pusha
cmp
out
xlat
je
mov
or
xor
jmp
dec
pop
aam
xor
push
loope
inc
push
inc
insb
mov
sti
ficomps
mov
push
aaa
mov
cltd
mov
push
sub
adc
xor
inc
movsl
sbb
loop
and
mov
test
icebp
sbb
stc
mov
pushf
cmp
out
and
lea
lds
and
jle
jne
imul
movsb
stos
sbbb
popa
xchg
push
push
dec
jge
cmp
mov
fcomps
icebp
test
dec
insb
daa
and
out
jl
std
ds
nop
adc
mov
jns
mov
jns
pop
mov
push
mov
xchg
push
ds
popf
subl
loopne
inc
pop
jle
lods
xchg
mov
das
cli
call
adc
lret
or
loopne
in
pusha
jmp
mov
rcrb
dec
stos
ss
adc
cmp
leave
xchg
aam
push
mov
ret
lahf
and
push
lods
loopne
cltd
mov
cmp
jne
les
leave
mov
incl
xor
cs
sub
insb
dec
in
into
loop
ficoml
add
incl
lahf
insl
imull
pop
leave
sbb
dec
shrb
jecxz
mov
sub
clc
xchg
inc
inc
sbb
data16
stos
add
xor
mov
xor
pop
dec
ss
fistl
scas
fdivrp
mov
sbb
leave
push
mov
lahf
push
add
mov
shlb
or
cmpsl
shrl
fs
jecxz
dec
push
push
dec
sbb
es
inc
leave
mov
das
push
mov
mov
pop
lcall
mov
aaa
pop
cmc
mov
sbb
dec
iret
rorb
adc
imul
inc
jne
xchg
decl
movsb
and
movsl
sarb
xor
mov
xchg
push
mov
inc
jne
sbb
cld
fmuls
clc
sub
inc
or
outsl
adc
sub
nop
pop
jne
pop
dec
clc
fistps
or
pop
clc
mul
mov
pop
mov
pusha
es
sub
dec
mov
incl
insb
push
es
mov
jmp
xlat
pop
jbe
mov
iret
loope
scas
or
mov
aam
xor
movsl
pop
aam
fldl
xor
push
shrb
mov
insb
ljmp
cltd
ja
sub
bound
orl
call
call
adcb
cltd
fadd
lret
push
out
mull
shll
dec
ljmp
dec
sarl
mull
xor
push
ljmp
mov
lcall
addb
pusha
in
sahf
adc
lcall
cmpsl
insl
adc
sub
dec
mov
inc
nop
or
int3
in
xchg
js
cmc
lea
in
sti
xchg
pop
imul
das
cmc
arpl
lahf
xchg
add
mov
or
push
mov
ds
lock
mov
mov
push
dec
or
imul
pushf
aas
jno
jmp
into
in
xor
mov
mov
repnz
xchg
cld
inc
cld
jl
mov
iret
mov
repnz
mov
mov
push
in
pop
lahf
mov
mov
sbb
jno
pop
fdiv
ret
ja
dec
ja
lcall
sbb
mov
inc
inc
mov
mov
sub
add
fadds
mov
nop
stc
testb
xchg
fsubs
ficompl
loopne
lcall
das
cltd
incb
jbe
mov
push
mov
addb
and
add
aas
cmpsb
je
std
sbb
incl
xor
add
mov
mov
cmpsb
andb
les
cmp
scas
xchg
lods
std
call
adc
fists
std
rolb
jl
push
xor
cmp
lcall
pusha
mov
or
hlt
mov
jns
dec
nop
sbb
jmp
jmp
and
jle
bound
sti
icebp
popa
adc
mov
cmp
ret
jo
decl
mov
sub
imul
cmc
icebp
ror
out
push
push
test
imul
mov
lcall
mov
and
ret
fdivs
call
arpl
aas
bound
test
addr16
xor
cmp
lods
pushl
out
sub
mov
mov
repz
fsts
jecxz
jmp
jno
sub
loope
dec
stc
push
inc
sub
jns
jmp
cmpsl
mov
adc
push
add
and
lret
pop
popf
xchg
inc
lea
mov
push
mov
pusha
out
cli
xchg
leave
outsl
addb
xchg
jb
push
test
jo
stos
in
pop
lcall
xor
mov
outsl
ret
mov
xor
call
push
sbbl
push
test
pop
and
je
fildll
mov
jne
jne
call
cmp
xchg
pop
jae
sub
pusha
push
inc
aam
mov
fildll
xchg
mov
inc
sbb
cmp
jle
xor
leave
loop
nop
hlt
loop
into
test
ljmp
xor
cmp
das
add
movsl
pop
out
call
pop
mov
fcomps
call
mov
dec
and
out
out
roll
jp
fnsave
and
mov
imul
mov
mov
scas
sbb
mov
sub
or
pushl
lret
data16
daa
xchg
stos
jecxz
aam
shlb
sbb
or
jecxz
or
out
idiv
clc
xchg
in
pop
jb
push
stos
inc
test
pop
cmp
shlb
lods
jbe
movsb
dec
incl
mov
fadd
add
int3
movl
mov
push
call
lods
jle
mov
repz
inc
pop
jno
xchg
pop
push
out
adc
jg
ret
daa
into
js
push
in
adc
push
inc
test
decb
mov
mov
cmp
ret
sbb
mov
rcrl
imul
pop
sar
mov
and
pop
mov
fcomps
loope
decb
das
adc
jg
daa
cs
pushf
dec
out
adc
xlat
inc
or
fcmovnb
pop
inc
xor
addl
gs
cltd
pop
mov
sti
inc
or
mov
je
xchg
pusha
inc
cmpsb
jmp
xchg
mov
pop
adcl
outsl
mov
int3
mov
jmp
lcall
out
xchg
xor
dec
mov
xlat
jmp
pop
xor
push
ljmp
and
xchg
stc
hlt
adc
and
and
pop
testl
jg
sub
mov
into
jb
lret
pop
ret
mov
in
push
out
jmp
sahf
sbb
pushf
jb
or
push
in
test
clc
out
mov
aas
aad
pusha
pop
popl
mov
jg
cmc
jns
mov
fstpt
outsl
fwait
scas
add
pop
push
sahf
xchg
call
ljmp
and
or
and
ljmp
aam
sbb
call
push
mov
mov
arpl
jg
inc
orl
mov
jne
outsb
ss
xchg
and
mov
idivl
scas
lock
ss
inc
decl
xlat
mov
xor
out
xor
test
push
popl
cltd
fcomip
and
ror
lret
lock
imul
dec
mov
and
scas
mov
test
or
pop
push
sub
mov
sbb
bnd
push
xor
test
jg
jecxz
sar
fldenv
dec
aad
scas
rcl
sub
aas
dec
aam
lods
push
cmpsl
pushf
lcall
pop
dec
cmp
sahf
mov
lret
mov
cmp
dec
movb
add
lods
test
sbb
outsl
xchg
add
out
in
inc
rcrl
ljmp
fistps
pop
cmp
mov
pop
jne
adc
xor
and
aaa
std
cmpsb
lods
das
xor
pop
push
jmp
fimull
jg
xchg
adc
cmpsl
int
jae
cmp
mov
cmp
aaa
cld
call
and
dec
ret
mov
push
cmp
add
and
cmp
push
call
faddl
lods
sub
out
into
mov
inc
or
mov
push
leave
push
pop
pop
es
pop
inc
js
jno
xor
fcompl
das
cli
ljmp
cmpsl
int3
test
pop
sub
mov
push
dec
xchg
jae
dec
std
lcall
cmp
aad
jns
insb
push
jb
mov
sub
push
push
cmp
lods
js
jle
mov
push
xor
mov
cld
inc
fnsave
adc
int3
jo
push
in
cwtl
icebp
ljmp
pop
int3
sbb
mov
and
filds
mov
adc
enter
mov
pushl
movsl
xor
dec
sti
and
add
fnsave
and
dec
adc
cmp
cmc
cmp
daa
int
mov
roll
mov
les
outsb
pop
pop
mov
test
xchg
mov
xchg
inc
into
mov
sub
rcl
mov
jnp
adc
fcomip
push
jle
mov
stos
push
je
sbbl
mov
dec
inc
mov
bound
sbb
inc
jae
sub
mov
cmp
insb
xchg
icebp
repnz
mov
pop
xchg
ja
mov
pop
mov
and
mov
sub
push
cmpl
icebp
inc
nop
push
int3
pop
xchg
test
aam
or
das
mov
jg
cs
sub
sub
mov
dec
inc
mov
rcrb
and
stc
mov
scas
jp
sbb
sbb
fstpt
icebp
ret
jo
movsb
or
xchg
fidivl
hlt
or
call
mov
lret
jl
lock
pusha
pushf
push
or
xchg
adc
fdivrs
incl
push
inc
fisubl
fisubrl
and
es
mov
mov
inc
shll
inc
pop
dec
mov
mov
mov
ficompl
fildl
push
scas
inc
sti
scas
cli
incl
xor
notb
cld
iret
inc
cs
je
mov
push
push
gs
sbb
and
pop
jo
inc
ja
je
jp
mov
call
loop
mov
das
jecxz
mov
xchg
adc
repnz
xchg
or
lcall
cmp
dec
sarb
pop
lock
dec
dec
xchg
fiadds
xlat
push
inc
call
push
stos
mov
adc
xchg
mov
jnp
in
loopne
cli
mov
cli
jp
insl
mov
aaa
call
dec
mov
fmuls
in
mov
loop
mov
in
outsb
nop
push
lods
fwait
adc
stc
inc
popf
mov
lea
int3
mov
mov
adc
enter
decl
ds
bound
inc
scas
inc
jno
bound
popa
sti
add
lcall
pop
pop
push
pop
shr
lret
adc
cmpsb
fisubs
pop
mov
mov
in
std
mov
pushl
stc
mov
fdivr
lods
loopne
cmp
lock
jl
test
mov
mov
daa
push
test
cld
mov
xor
mov
and
test
sbb
dec
or
xchg
in
test
sub
ret
bound
add
in
cmpsl
push
mov
sbb
and
mov
cmpl
xor
xor
out
cld
sbbb
jb
insb
push
xor
lods
loopne
jge
inc
es
stos
jb
dec
in
sub
call
fst
dec
jae
inc
sub
pop
jp
flds
leave
in
push
push
cs
sbb
ret
into
push
mov
jecxz
xchg
fwait
push
mov
movsl
and
mov
int3
cld
icebp
and
loopne
push
iret
out
jne
cmp
or
dec
fcom
ficoml
push
loop
push
rcll
aad
pop
jae
adc
fbstp
push
or
push
push
lret
mov
hlt
inc
ss
inc
call
add
mov
call
lgs
mov
incl
cli
jle
aam
jo
cltd
and
lock
pusha
mov
shlb
sbb
inc
cmc
cmp
std
adc
sti
out
or
inc
mov
xor
ffreep
test
jmp
or
dec
iret
fstpl
cmp
int3
rcl
cmp
jmp
xor
loop
loop
leave
shl
bound
or
mov
stos
incb
jle
lcall
loope
call
pop
push
sbb
fldt
fs
and
xor
inc
add
pushf
pop
push
jp
int3
ficomps
decl
ret
fisttpl
sti
mov
notb
dec
mov
in
fstl
xchg
mov
xor
in
sub
push
inc
dec
int3
andl
add
pushl
pushl
test
cmp
pop
lret
jnp
ljmp
mov
and
jne
pop
adc
hlt
mov
fdivl
clc
icebp
ljmp
stos
ljmp
cmp
mov
dec
fadds
iret
sub
pop
xor
das
hlt
mov
jp
ljmp
insb
pop
sbb
shr
sbb
rcll
pop
je
mov
in
pop
fnstcw
jbe
mov
mov
incl
cld
decl
xchg
cmpsl
cmp
xor
push
ret
add
js,pn
pop
push
jmp
popa
xchg
inc
push
roll
fsubs
mov
pop
jbe
and
jp
into
hlt
or
adc
jmp
add
popa
ja
cmp
ss
and
mov
mov
stos
push
pop
xchg
mov
ljmp
cmp
add
in
xchg
push
xchg
xchg
mov
and
sbb
decl
pop
bound
add
xchg
scas
sub
imul
gs
jo
pop
jae
fs
xchg
adc
pop
cmp
sub
decl
jmp
shlb
ljmp
dec
xchg
or
je
outsl
cmpsb
gs
ss
movsl
insb
inc
incl
int
test
mov
in
cmpsb
xor
imul
cld
incl
es
sbb
dec
in
or
enter
cmp
out
mov
inc
fbstp
add
ficomps
fldt
mov
fnstenv
fisubrl
call
ds
inc
imul
dec
out
and
and
and
push
loopne
sti
leave
jne
sar
ljmp
sub
test
cs
adc
xchg
mov
add
out
adc
pop
imul
push
push
pop
lods
sub
rcrb
push
dec
cmpsl
insb
icebp
mov
pushl
push
or
pop
jnp
push
cmp
ror
les
je
add
loopne
mov
mov
xor
pop
add
mov
aas
mov
adcb
adc
or
in
add
add
mov
add
adc
je
jg
in
or
jecxz
lret
dec
sbb
pop
xor
das
add
ss
jp
add
pushl
movsb
cld
imul
xor
enter
cmc
adc
mov
testb
call
lods
adc
sbb
cmp
cmpsb
loope
mov
jbe
sbb
mov
jge
push
or
test
loope
or
add
mov
lcall
shll
sbb
nop
cld
fadds
inc
sbb
xor
es
cmp
dec
pop
push
js
push
add
call
test
cmpsb
lret
jno
fcoml
into
mov
jle
sbb
push
xor
inc
adc
incl
cmpsl
dec
adc
test
aam
push
stc
pop
cmp
push
outsl
pop
arpl
pop
sbb
in
jmp
mov
sbb
mov
mov
push
imul
incl
dec
ret
jmp
push
mov
push
pop
gs
dec
xchg
mov
ljmp
cmp
and
or
aaa
lcall
and
adc
sbb
adc
aam
or
xor
dec
repnz
mov
push
or
call
adc
sub
addr16
stc
xchg
xor
andb
pushl
cwtl
mov
aas
mov
and
ds
outsl
xorb
sar
incl
dec
stos
lahf
xchg
jo
sbb
ret
jae
addb
sub
jmp
or
fwait
mov
lcall
pop
sub
imul
pop
pop
and
aaa
inc
adc
sub
mov
push
shl
add
in
push
add
lock
decl
mov
inc
jne
mov
adc
and
jg
andb
icebp
ds
dec
push
lcall
xchg
test
dec
or
jno
flds
enter
pop
mov
ljmp
sbb
addr16
lcall
enter
sbb
push
jecxz
jae
je
scas
mov
sti
mov
pop
fidivs
push
cmpsb
cmp
test
xor
loop
call
pusha
xor
xchg
icebp
jnp
cwtl
xchg
jp
idiv
pop
mov
fs
xchg
cmp
das
sar
cmp
dec
lahf
gs
cmpsb
lahf
sub
lahf
imul
xlat
or
inc
mov
sbb
push
adc
pop
sbb
lcall
push
pop
push
xchg
pop
mov
sar
lcall
gs
dec
mov
xlat
daa
fs
and
ud0
or
int
cmp
sub
das
inc
add
inc
jecxz
daa
insl
mov
fcoml
addr16
mov
add
mov
popf
iret
xchg
mov
jns
cld
cmp
pop
cli
mov
lock
je
aam
fadd
add
adc
push
mov
inc
sub
fadds
inc
les
aas
xor
jb
flds
mov
push
cmc
cs
mov
aad
add
mulb
push
ss
cmp
sbb
mov
sub
push
std
mov
decl
fdivrl
cli
jmp
add
mov
mov
out
mov
aaa
mov
sahf
call
mov
mov
cltd
cs
ds
into
fists
jae
xor
jnp
or
adc
lcall
lcall
ret
inc
dec
sub
rorb
inc
sub
or
std
jg
decl
call
mov
dec
lock
sbb
mov
ljmp
mov
mov
xchg
out
pop
cmp
aas
ret
adc
jl
jg
add
in
mov
sub
or
pop
incb
xlat
mov
dec
mov
sbb
outsb
push
jg
ljmp
xchg
push
lea
mov
add
and
hlt
push
xchg
mov
mov
dec
enter
pop
shlb
icebp
mov
hlt
fs
loope
insb
clc
call
icebp
jb
sbb
pop
pop
mov
pop
push
and
push
rcll
int3
dec
push
jmp
ljmp
cmp
loop
pop
xor
push
test
cmpsb
adc
dec
xchg
ss
icebp
mov
mov
lcall
out
pop
mov
sbb
nop
jg
fisubl
cmp
in
mov
xchg
out
lea
bnd
jne
cmp
lcall
test
in
mov
lods
cmpb
dec
pusha
test
insb
orb
ljmp
cmpsl
shrb
cs
adc
out
test
pusha
adc
cmp
rclb
jnp
mov
lcall
mov
xor
pushl
and
stc
push
pusha
xchg
inc
pushf
xchg
addl
imul
incl
mov
subb
dec
pusha
ficomps
dec
or
hlt
inc
decl
js
xchg
es
adc
xor
add
loope
xlat
je
push
call
push
loopne
sub
in
sub
dec
push
out
comiss
add
aam
test
int3
insb
int
inc
mov
xchg
stos
mov
or
pop
mov
and
lcall
add
jmp
pop
aam
loopne
push
icebp
les
sbb
outsb
jns
sbb
ror
pushl
mov
dec
jecxz
sbb
xchg
loope
or
and
and
jge,pt
push
ljmp
or
jbe
pop
mov
jno
mov
dec
stc
add
inc
push
adc
or
cld
ds
insl
lods
js
ljmp
inc
aaa
stos
lea
and
sbb
outsb
bound
push
dec
add
lcall
ja
sbb
pop
std
fsubs
lds
sub
fs
cmp
gs
push
jmp
outsl
popa
fwait
mov
inc
inc
push
xchg
ja
addr16
mov
adcb
mov
jmp
stc
je
mov
xchg
pop
outsl
sbb
std
inc
adc
mov
out
xchg
pop
icebp
lret
mov
incl
jnp
inc
repnz
add
fnstenv
adc
movsb
pop
push
jo
leave
dec
cli
mov
incl
xchg
mov
add
out
mov
data16
int3
test
mov
incl
adc
mov
and
lods
ljmp
movsl
jl
dec
pop
jmp
add
cmp
cli
jns
sbb
or
push
jne
ror
push
ficoml
icebp
pop
push
mov
ljmp
out
or
or
lcall
clc
mov
lret
cld
pop
imul
inc
jno
nop
mov
xchg
ljmp
call
jae
ficoml
push
or
call
cmpsb
push
xchg
push
and
incl
fmull
div
dec
lahf
mov
cmp
outsb
daa
movsb
stos
pop
mov
shlb
ja
lcall
shrb
dec
fs
mov
xchg
xor
adc
loopne
and
xlat
push
aas
and
fs
push
or
mov
cmp
ljmp
hlt
call
lret
xchg
out
popa
imul
insl
stos
mov
xor
mov
movsb
add
and
popa
in
test
and
dec
cmc
aaa
inc
nop
cmp
xor
cltd
scas
loop
in
xorb
in
sbb
cmp
inc
lret
call
decl
out
lea
out
cmpsl
adc
jmp
adc
lahf
and
xchg
cwtl
sbb
int3
sbb
lcall
cltd
push
stc
cmp
adc
pop
add
inc
xchg
mov
push
lret
and
lcall
call
jo
xor
mov
ret
or
xor
aas
and
push
jecxz
out
clc
decl
loope
fsubrl
pusha
sbbl
call
cmp
sbb
sbb
mov
incl
mov
adc
cwtl
sub
jge
adc
dec
rolb
jmp
jg
mov
or
mov
leave
sbb
mov
and
jno
mov
push
shl
xor
jge
ror
or
push
inc
jnp
ffree
jmp
je
mov
mov
inc
lock
jg
loopne
mov
jae
or
mov
cmp
lcall
dec
test
ja
xchg
loopne
out
imul
sbb
nop
pop
icebp
push
push
inc
stos
inc
push
pop
iret
lds
test
mov
repz
mov
decl
jecxz
rcll
push
outsb
pusha
data16
in
push
inc
lcall
clc
lcall
in
movnti
movswl
push
push
sbb
mov
jg
pop
mov
xor
or
adc
and
fstp
pusha
push
dec
hlt
and
test
data16
aas
jl
leave
ret
push
dec
xchg
xor
jne
fildll
je
hlt
dec
jle
add
inc
imul
pop
out
add
ljmp
mov
mov
addl
incl
inc
sub
cs
stc
jle
out
push
lcall
mov
cmp
fwait
iret
iret
push
aam
dec
jecxz
call
jnp
or
or
mov
ljmp
es
dec
divb
xor
mov
sub
call
jb
mov
es
sbb
test
or
fcomps
dec
fsubr
adc
mov
push
adc
mov
push
mov
jo
lock
xor
push
scas
decl
pop
cmp
dec
sub
jae
jp
pop
fisttps
sti
jns
mul
iret
fcmovnu
int3
push
popf
sti
jnp
decl
pusha
movsl
push
add
ret
push
pusha
in
roll
fsubl
mov
ljmp
mov
sbb
ret
outsl
push
mov
or
mov
cmp
xor
lcall
push
in
ret
dec
leave
jp
pushf
xor
in
cwtl
ja
ret
imul
decl
les
and
fsubrs
ret
mov
mov
movsb
xchg
push
ljmp
stos
mov
xor
sub
mov
dec
dec
sub
popf
ljmp
dec
ljmp
push
jmp
sbb
or
pop
mov
cmp
arpl
sbb
int
pop
push
dec
dec
ds
add
aam
lret
fisttps
int3
pop
inc
or
je
xor
scas
repz
push
ret
jae
pusha
ret
cmpsb
push
mov
in
adc
add
sbb
add
pushf
mov
xlat
pop
xchg
cld
pop
fwait
sbbb
mov
rolb
xor
test
shrb
inc
pushf
outsb
lods
out
jb
mov
fstpl
mov
inc
push
sbb
jmp
push
mov
and
aad
in
psllq
das
dec
xor
or
push
sub
pushl
test
fstps
cmpsb
sahf
cmp
test
fdivs
jo
and
jmp
imul
jp
int
sub
and
decl
movsl
pushf
inc
test
stc
jecxz
and
lock
and
or
ds
and
push
xor
cwtl
inc
mov
decl
add
mov
lods
jns
mov
lret
pop
stos
xlat
icebp
call
lds
pop
outsl
jne
arpl
sbb
adc
xchg
popf
cmp
pop
lret
or
sbb
sub
and
and
fnstenv
lods
rcll
xchg
sbb
jmp
fcmovbe
mov
jle
int3
cwtl
push
dec
aam
xchg
ret
es
ret
hlt
mov
dec
pop
sub
and
dec
add
push
or
sub
lock
in
xchg
clc
pushl
adc
loopne
cmpsb
cmp
push
sbb
subb
lcall
outsl
ret
mov
pop
ret
mov
push
ret
inc
int3
dec
ljmp
lcall
pushf
rorb
lds
out
test
push
jo
push
dec
sbb
sub
push
pop
cmp
int3
shrl
js
rorl
mov
cmc
or
inc
rcll
adc
test
sub
or
clc
cwtl
push
mov
mov
aas
add
and
lret
scas
jo
jl
xchg
sub
xorl
add
xchg
adc
pop
stos
pop
es
jg
dec
in
inc
imul
xchg
negb
adc
loop
xor
int
in
insb
jnp
lock
sti
cmc
xor
test
mov
push
insl
punpckhdq
addr16
in
adc
movsb
addr16
xor
mov
jg
pushl
pusha
push
add
iret
cmp
ret
fmul
arpl
pop
dec
xchg
jbe
mov
js
inc
js
sahf
dec
xor
sub
decl
lret
lcall
movsb
mov
xlat
xchg
sbb
shrl
insb
fwait
cld
push
push
sbb
jmp
push
outsl
xchg
icebp
decl
cmc
add
dec
mov
mov
sbb
incl
inc
fimull
push
inc
clc
xor
mov
push
cmp
inc
imul
loope
sub
add
ljmp
fists
fwait
insb
mov
jmp
pop
push
cltd
cmpsl
xor
fistpl
cmp
mov
clc
sub
push
jbe
or
neg
xchg
mov
movsl
and
push
mov
inc
decl
cmp
js
add
jae
push
pop
cmpsl
mov
cmp
xchg
js
pop
es
fistps
idiv
lcall
out
or
bound
ds
xor
ret
jnp
pop
test
loopne
pushl
and
jmp
daa
outsb
and
mov
xor
inc
cwtl
pushf
lahf
test
popa
inc
ljmp
decb
addr16
add
pop
sub
ss
jns
les
in
mov
jmp
sarb
sbb
cmp
xor
mov
mov
pushf
enter
cld
call
dec
clc
fdivrl
popf
in
hlt
ret
lcall
fmull
sub
call
mov
mov
sub
jl
xor
aaa
jb
mov
adc
je
sahf
ljmp
es
je
jae
pop
fmull
push
and
xor
mov
lahf
lea
pop
addl
ljmp
ljmp
jge
or
sbb
pop
int
fstpl
jmp
jne
icebp
cmp
cmp
xchg
adc
push
jge
pop
bound
cmc
pushf
push
mov
pushl
xlat
popa
outsl
decl
lock
lock
sub
mov
cmpsl
cmp
add
addr16
cmc
jnp
mov
pop
cwtl
add
xchg
in
adc
mov
pop
cwtl
bnd
sbb
mov
lods
cmp
scas
pop
icebp
nop
mov
dec
xor
cmc
sbb
enter
and
js
mov
pop
cmpsb
add
push
add
push
pop
mov
xchg
pusha
cmp
lcall
jnp
add
push
mov
enter
or
les
cmp
jns
jmp
lds
daa
movsb
stc
dec
jmp
sbb
fnstcw
or
jp
shll
mov
es
outsb
add
ss
repz
test
cld
lock
inc
idiv
pushl
cmp
cmp
clc
mov
loop
or
jecxz
shrl
sub
lea
mov
mov
addr16
adc
popf
sub
icebp
arpl
cmp
lods
push
lods
add
jg
icebp
mov
dec
leave
mov
adc
out
jns
fnstsw
sbb
cmpsb
fistpll
and
push
pop
inc
push
inc
jb
cld
into
jge
jge
aam
add
cmp
pop
and
sub
ds
inc
or
lret
cltd
pushf
jmp
dec
cmpsb
test
lcall
mov
ss
push
and
cmp
cli
jne
adc
repz
call
pushf
lret
cmp
and
repnz
cli
mov
test
mov
xchg
pop
fucom
mov
xor
jmp
nop
mov
push
sbb
pop
dec
sub
inc
push
xlat
es
push
lcall
push
test
mov
js
xor
adc
pop
xchg
test
call
dec
pop
cltd
std
xor
in
es
pop
mov
xchg
in
pop
mov
ror
jmp
out
loopne
and
imul
sub
jg
lea
mov
in
in
decl
jb,pn
mov
testb
cltd
scas
pop
test
lods
shll
incl
or
out
jmp
cmp
mov
mov
scas
cli
dec
mov
loop
dec
cwtl
ljmp
je
lea
pop
push
mov
outsl
clc
pushl
dec
pop
pop
dec
das
stc
dec
xor
jl
fimull
jne
movsb
inc
xorl
mov
call
out
dec
xchg
movsb
jns
fdivrp
unpckhps
frstor
mov
mov
jmp
call
cli
popf
dec
outsl
cld
mov
and
inc
dec
mov
int3
call
jmp
stc
mov
jmp
fxch
lret
test
mov
xchg
mov
or
dec
jnp
push
daa
sub
jae
or
popf
or
xchg
test
test
imul
jg
mov
bound
call
and
into
inc
adc
dec
addb
pop
loopne
dec
popa
dec
pop
cld
xlat
jnp
outsl
fnstenv
rolb
call
std
jnp
lcall
jmp
adc
imul
add
push
adc
fidivrs
jl
jp
push
xor
ja
mov
fldt
inc
pop
pop
push
decl
xchg
cmp
int
jmp
daa
jbe
push
cmpsl
jle
pop
gs
xor
fs
mov
insb
xor
ljmp
fildl
mov
jmp
jb
insb
mov
pop
jg
sti
into
mov
iret
and
mov
pop
mov
fwait
ljmp
pop
insb
out
loop
aam
das
sahf
out
movsl
add
jp
jne
sub
pushl
sbb
cld
jg
or
jecxz
push
lock
fstpt
popf
cmc
aaa
notl
jecxz
popa
jg
add
pop
aaa
mov
sbb
popf
add
clc
mov
mov
test
out
nop
adc
call
jmp
fisttpll
pop
xchg
and
mov
das
mov
lahf
mov
test
xchg
pop
call
dec
stc
push
dec
test
outsl
cmp
aam
in
shlb
fcmovnbe
jl
mov
cmc
inc
cltd
push
aam
imul
pop
and
out
push
adc
imul
ljmp
pop
push
mov
add
add
and
sub
dec
xchg
pop
lcall
decl
xchg
fsts
pushf
or
add
dec
cmp
ljmp
les
dec
jp
xor
sbb
loop
xchg
not
fdivrs
pop
cli
jb
pop
cmp
xchg
out
cltd
lret
mov
push
sub
sub
mov
mov
out
outsb
adc
dec
in
incl
inc
or
sbb
ret
test
xchg
pop
adc
jecxz
mov
mov
lods
cmp
cmc
xchg
sub
sub
sub
xlat
pop
mov
dec
push
incl
push
addb
mov
pop
mov
pop
ss
and
jecxz
cmpsl
movsb
and
in
jecxz
dec
adc
xchg
jge
or
xor
mov
adc
test
xor
orb
fsub
push
fxch
mov
je
sarl
loope
adc
sahf
dec
mov
add
jmp
jg
mov
data16
push
aad
data16
outsl
cmp
xor
in
test
sbb
cld
xor
xchg
push
lret
xor
pop
test
mov
mov
jno
adc
or
out
testl
mov
xor
jmp
xchg
mov
in
mov
subl
gs
jl
cld
ja
dec
arpl
inc
std
pop
pop
or
incl
popf
inc
test
dec
in
lods
rcrl
sub
pop
and
popa
pop
pop
sarb
and
inc
in
negb
pop
push
mov
fcmove
lock
mov
cmp
jle
pop
mov
call
out
imul
addr16
push
hlt
inc
jae
cltd
insb
or
in
mov
push
inc
push
or
cmpsb
pushl
rcl
adc
lds
jl
mov
pushl
std
je
out
mov
pop
stos
loope
lods
insb
fxch
lcall
fs
cmp
call
xchg
adcb
mov
imul
cmp
add
ljmp
decl
data16
jecxz
or
add
lods
add
dec
cmpsl
pop
addr16
dec
or
call
jbe
xchg
xor
jns
loope
pusha
icebp
push
jns
mov
aad
pop
xchg
push
dec
ljmp
xchg
cmpb
dec
jp
ljmp
xchg
mov
mov
jp
xor
test
in
test
test
sbb
push
pop
push
fstl
mov
jmp
fisubl
gs
jno
repnz
dec
aas
push
xor
ds
sub
ljmp
push
push
imul
insb
fisubrl
jmp
add
movsl
xor
fsubrp
inc
cmpb
add
cmp
decl
cmp
mov
cwtl
in
lock
xor
daa
jnp
sub
subl
sbb
ljmp
jmp
dec
jbe
movb
cmpsl
jns
sub
pop
aad
mov
mov
dec
mov
push
aaa
jbe
int
xchg
ljmp
inc
out
jecxz
add
push
mov
imul
sbb
pushl
xor
fldcw
jg
or
loopne
clc
jmp
lods
jl
icebp
lods
sti
sub
sar
ljmp
push
fistps
ds
dec
into
mov
aaa
filds
and
pop
cwtl
pop
push
adc
ljmp
cmp
mov
cmc
incl
dec
cld
mov
add
sub
mov
push
movsb
push
jbe
imul
int3
repnz
or
jo
faddl
jle
sbb
ljmp
aaa
nop
jg
push
inc
aaa
mov
sbb
inc
iret
mov
aam
xchg
ss
pop
aaa
add
adc
lcall
int
cs
icebp
inc
push
in
push
mov
mov
shll
test
pushl
aas
xchg
push
ljmp
lret
addl
sti
and
pop
xor
mov
jg
scas
sbb
ljmp
xchg
push
jae
lcall
fidivs
pop
lret
repnz
rolb
fistpll
js
cmp
inc
test
pop
jo
push
lret
addr16
mov
pop
jne
sub
lcall
sub
ficompl
or
jmp
clc
cld
inc
sub
xchg
popf
in
lods
addb
push
ds
adc
imul
jmp
and
arpl
lea
pop
mov
movsl
cmpsl
test
xor
and
push
inc
sbb
lcall
jnp
lea
sbb
imul
add
out
cmp
adc
push
scas
sti
jns
ljmp
xor
xchg
xchg
mov
cmpsl
add
arpl
mov
test
mov
decl
xchg
mov
movsb
sbbb
scas
jl
mov
jg
decl
ja
repz
inc
lea
std
fsubs
loopne
repz
incl
push
inc
sbb
insl
fmulp
mov
cli
inc
mov
daa
dec
inc
inc
fs
popa
aad
jecxz
dec
inc
mov
sub
ss
lcall
mov
mov
push
jg
dec
repz
jns
int
push
out
out
call
cmp
stos
and
into
sbb
sbb
pop
fiaddl
mov
stos
movsw
ljmp
inc
jno
rcrl
loope
loopne
shll
shl
dec
test
clc
fildl
cmp
pop
or
stos
sbb
adc
mov
mov
jbe
inc
mov
int3
int
xor
fs
incl
arpl
fbstp
hlt
lds
loop
stos
incl
loopne
mov
sub
popf
leave
inc
dec
sub
push
inc
mov
test
ret
std
out
iret
inc
sti
mov
inc
out
cmc
or
sbb
add
or
mov
fwait
jns
and
mov
lock
or
decl
xchg
popa
sahf
insl
mov
fwait
pusha
fldt
aaa
in
fwait
test
xor
ljmp
stos
stos
sbb
push
fdivl
lret
push
mov
mov
pop
icebp
push
enter
mov
enter
outsb
pop
in
ret
pop
mov
push
pushl
rolb
or
call
push
cs
inc
sbb
jmp
clc
jecxz
sub
and
dec
add
jp
add
xlat
mov
pusha
ljmp
out
mov
jne
daa
sub
test
out
lods
dec
negb
jne
xor
cld
cmp
mov
aam
dec
xchg
test
or
test
mov
or
incl
mov
stos
test
pop
pop
test
movsl
mov
jge
fists
dec
stos
dec
and
fcoml
iret
cmp
out
xor
push
rorl
cmc
pushl
mov
pop
std
add
jl
and
sbb
fdivrl
xchg
fldl
cmp
dec
aaa
fcomps
pop
cmp
adc
mov
jmp
jmp
shll
icebp
dec
pop
lahf
cmp
fcoml
mov
and
lods
into
push
dec
popf
es
loopne
call
jg
addl
mov
mov
fcomp
cmp
sub
out
arpl
xor
lcall
adc
xor
pop
jmp
mov
movl
das
repnz
xchg
sbb
sar
call
loopne
xor
cmp
imul
xchg
addl
jmp
cli
add
cmp
adc
cmp
xor
icebp
lahf
xchg
test
rcll
fdiv
mov
xor
aam
push
ret
decl
sbb
jnp
adc
call
sbb
and
push
imull
ljmp
adc
fisubrs
jecxz
pop
pop
jo
sbb
or
fucomp
and
sbb
scas
xor
jmp
mov
inc
jo
fmuls
dec
adc
dec
lret
xchg
inc
pop
push
test
cmpsb
call
sub
mov
into
stos
jle
loopne
pop
inc
hlt
xchg
jle
insl
xor
dec
jns
imul
stc
sti
mov
std
pop
mov
jmp
loop
loop
xchg
or
add
sbb
fdivs
add
adc
and
ljmp
cmp
les
clc
jae
jmp
fs
lret
loopne
or
jmp
les
popl
leave
jg
decl
jl
push
int
lret
and
cmpsb
or
cmpsb
xchg
cmp
jb
pushl
aas
enter
imul
into
ja
fwait
lahf
mov
xor
aas
mov
add
inc
loop
xchg
loopne
out
ljmp
lock
mov
fcmovnu
pop
push
inc
mov
mov
aaa
jmp
test
dec
decb
ficoms
lods
lcall
lcall
fcompl
lods
and
or
mov
movsl
mov
sub
jmp
pop
push
js
cmp
mov
fs
xchg
and
and
gs
add
call
ret
fnsave
dec
push
lds
push
inc
push
add
dec
mov
movsl
in
mov
xorps
incl
pushf
mov
cmp
nop
xchg
in
loopne
adc
jmp
inc
or
add
cld
mulb
cmp
sbb
sbb
mul
leave
dec
lcall
test
or
sub
test
shrl
add
xor
adc
cmp
sbb
xchg
dec
icebp
negl
cli
jno
xchg
sbb
out
bound
aas
fisubs
cmp
sbb
adc
push
xor
imul
ret
hlt
cmp
popa
add
fistpl
jg
leave
pop
sbb
adc
and
pop
pop
scas
hlt
pop
fldenv
je
push
jmp
les
cmp
mov
jmp
adc
inc
push
insl
aaa
xchg
cmc
mov
hlt
je
push
decl
and
jg
xchg
aad
leave
shll
icebp
scas
jmp
sbb
sbb
sbb
sub
test
lock
xor
jmp
cmp
in
lock
call
in
jne
insb
add
aad
iret
adc
das
fdivl
cmp
js
clc
imul
jo
push
push
dec
mov
cli
icebp
or
pop
mov
pusha
or
nop
aas
add
cmpsl
hlt
dec
dec
push
hlt
inc
dec
dec
fcmovbe
roll
into
loope
movsb
add
popf
add
push
fldl
sbb
cmp
enter
xchg
rclb
cmpb
test
mov
jg
insb
push
add
xor
sti
aam
xchg
push
enter
sbbb
xchg
mov
xchg
aaa
inc
outsl
adc
pop
je
push
xchg
fldcw
add
lret
call
adc
sub
pop
fistl
inc
or
popf
pop
mov
mov
mov
jae
or
mov
sbb
sub
pop
add
gs
les
adc
jns
bound
out
mov
add
scas
movsl
fisttpl
add
je
mov
jae
add
rolb
xchg
xor
cmpb
pmuludq
sbb
or
adc
jns
inc
mov
cld
add
dec
mov
mov
les
imul
movsb
cmp
cwtl
xor
cli
add
testb
mov
ret
stc
add
jge
clc
adc
push
or
call
or
cltd
in
sub
ss
dec
and
ljmp
cmp
or
add
sbbb
ss
add
jno
and
cmp
dec
jge
or
cs
inc
mov
add
call
sub
mov
test
lock
mov
int3
push
or
sbb
sub
inc
adc
sub
xor
push
cmp
pop
cmp
mov
jnp
lcall
mov
inc
jnp
cmp
addl
xor
dec
mov
mov
jae
inc
mov
outsl
push
int3
mov
add
xchg
jge
fistps
imul
pop
push
jp
mov
nop
sbb
sbb
xor
xchg
jo
push
mov
add
in
push
mov
adc
ljmp
sbb
jp
cmp
sbb
outsl
add
shrl
test
adc
sub
andb
popf
cmpl
add
mov
shll
mov
push
add
ljmp
iret
inc
clc
sarb
mov
out
mov
add
add
stos
xchg
test
pop
scas
imul
mov
ljmp
cmc
leave
adc
sti
test
and
pop
mov
dec
pop
in
hlt
pusha
test
mov
fsin
add
in
add
or
inc
or
int3
test
jbe
sbb
std
daa
lret
mov
add
sub
mov
scas
lods
ljmp
and
adc
mov
repnz
in
outsb
mov
adc
lcall
lds
push
or
mov
dec
ret
cmp
dec
adc
mov
xor
jne
je
mull
lret
jmp
cmp
test
les
mov
rcr
lcall
push
and
es
data16
cli
lock
and
lret
aas
aad
ret
cld
jne
faddl
push
subb
cmp
sub
insb
mov
les
sbb
adc
sti
mov
sbb
mov
dec
pop
adcb
mov
fstps
fs
sbb
dec
mov
jp
hlt
shl
sahf
nop
out
pop
mov
pop
sub
add
ficoms
je
mov
jmp
and
testl
rorl
cld
adc
icebp
mov
pop
xor
std
or
push
int3
cmc
pop
pop
or
xor
inc
idiv
out
push
gs
dec
lret
push
inc
icebp
es
dec
jae,pn
xor
rorl
ljmp
mull
out
mov
pop
test
rcrb
sbb
jns,pn
xlat
enter
pop
rcrl
cmp
jecxz
push
ds
inc
dec
mov
out
mov
pusha
mov
mov
inc
fmulp
in
dec
push
push
xchg
icebp
orb
in
mov
test
push
dec
sub
push
dec
stc
mov
add
adc
xlat
out
in
inc
mull
push
insb
xchg
cli
xchg
xor
add
aas
add
insl
mov
jle
int
xor
iret
stos
stos
clc
inc
adc
pop
icebp
insb
cmp
sbb
or
dec
cmp
arpl
pop
mov
bound
add
lret
xor
sahf
call
iret
mov
nop
push
add
dec
or
push
add
jecxz
and
xlat
xlat
inc
mov
mov
xorl
jb
sti
pop
add
push
mov
fldl
sub
adc
std
cltd
cmpsb
decl
fmull
sbbb
xlat
leave
mov
dec
outsl
sub
dec
stos
sahf
test
cmp
jnp
cmp
les
pop
adc
jecxz
push
mov
ret
sub
sbb
scas
movsl
das
clc
sub
int3
out
jbe
out
jno
rcrl
mov
lret
sub
pushf
add
add
fisubl
call
movsl
mov
push
xor
repz
dec
sbb
bound
outsl
push
aas
push
add
repz
repnz
mov
inc
mov
ss
add
dec
mov
dec
mov
fisubs
ret
rcll
adc
add
cmc
jae
stos
popa
fsubl
push
fadds
mov
or
adc
dec
repz
das
add
andl
iret
cmc
pop
pusha
jg
adc
stos
mov
mov
xchg
addb
stos
pop
test
pop
xor
fdivr
lcall
inc
nop
cwtl
mov
sub
inc
push
lods
jnp
cmp
cmp
jle
add
cwtl
pushf
pop
les
repnz
mov
andb
or
sub
cmpsl
loop
mov
sbb
xor
inc
fsubrs
es
sbb
clc
and
pop
ss
xor
and
jnp
adc
daa
sbb
je
mov
stos
mov
imul
and
push
push
scas
push
or
mov
pop
lcall
pop
movsl
dec
cmp
jne
iret
sub
lret
pop
pop
push
bound
insb
ret
sbb
xchg
incl
aam
or
lret
scas
pop
mov
cs
add
ficoml
cli
std
enter
imul
pushf
test
loop
adc
inc
pop
fdiv
or
mov
fdiv
dec
xchg
jecxz
insl
js
mov
stc
fs
sub
out
xchg
repnz
cmpsb
lret
adc
out
mov
sbb
or
repz
sub
mov
or
call
pusha
arpl
sbb
sub
into
mov
lahf
sti
jmp
enter
insl
gs
xor
mov
aas
mov
jecxz
stos
jo
lds
int3
dec
negb
lock
mov
std
stc
xchg
addl
clc
mov
mov
in
pop
mov
jb
je
cmp
add
add
jg
jne
dec
adc
testl
pop
pop
test
jmp
or
jne
jecxz
insl
pop
xchg
repz
jg
aad
mov
fdiv
jne
inc
adcb
mov
fwait
enter
les
stos
sbb
dec
cli
sub
cmp
pand
aaa
mov
dec
test
pop
sbb
les
add
cmp
lods
xor
and
mov
addr16
ja
inc
adc
fisttpll
fildl
call
cmp
repz
dec
int3
mov
faddp
push
lock
cmp
and
stos
jecxz
jl
mov
jl
jae
cld
ljmp
add
mov
ds
mov
xor
mov
sahf
adc
mov
sti
mov
xor
pop
add
xor
inc
std
insb
test
dec
gs
bound
jo
push
xchg
pop
xor
daa
pop
decl
ds
insl
pusha
sub
lods
out
pop
rcl
shlb
dec
jl
and
push
xchg
and
mov
mov
arpl
add
scas
dec
popl
addl
jg
push
inc
jle
mov
fisubs
hlt
or
lahf
cmpsl
pop
bound
daa
hlt
or
push
aas
rolb
out
mov
lock
ret
popf
out
mov
xchg
int
outsl
negl
cltd
mov
pop
mov
lcall
adc
jae
rolb
in
adc
dec
in
sub
sbb
push
arpl
xor
mov
sti
pushf
pop
mov
sahf
ljmp
std
sub
sahf
imul
mov
inc
jp
dec
add
rcrl
fmull
in
sahf
adc
add
fdivrl
rclb
testb
add
jg
mov
les
or
fstpt
scas
outsb
add
add
mov
cmc
gs
cmp
push
jecxz
mov
push
mov
out
jp
sbb
movsb
enter
scas
xchg
pushf
insb
jle
jo
lahf
push
inc
mov
inc
sbb
adc
ds
cmpsl
aam
gs
rclb
loop
or
cmpsl
pop
icebp
insb
and
inc
jmp
test
mov
ljmp
int
cld
pop
push
add
jecxz
pop
dec
out
insl
in
enter
arpl
and
pop
add
dec
mov
mov
mov
or
fimull
bound
movsb
outsl
sub
inc
std
add
shl
xor
fs
dec
and
xchg
iret
hlt
pop
sarb
je
and
fld
nop
inc
icebp
pop
and
fcmovnu
add
mov
lock
pop
rclb
add
and
sarl
test
xor
mov
lcall
loopne
sub
xor
decb
mov
add
loope
xor
inc
push
mov
pop
push
or
icebp
orb
out
and
adc
addl
and
push
fldcw
cmp
cmp
data16
popf
clc
decl
jbe
push
clc
jp,pt
rcr
cmp
rcll
inc
xchg
mov
popl
dec
pop
cmp
hlt
adc
jg
andl
cmp
ljmp
and
adc
andb
mov
or
add
decl
and
mov
je
add
add
fdiv
cmp
xor
xchg
pop
and
out
adc
dec
inc
sub
mov
fnsave
dec
push
addr16
cmp
push
or
hlt
data16
mov
dec
mov
aaa
scas
ss
lock
pop
push
inc
fisttpl
sub
cmpsb
fstpl
fcmovnu
pop
icebp
enter
sbb
lcall
mov
int3
mov
subb
ja
push
push
out
lcall
adc
js
inc
xor
shll
xchg
xlat
je
xchg
fdivrs
inc
shlb
xchg
ljmp
or
subb
repz
hlt
pop
movsl
data16
ret
cmp
js
roll
rorl
add
adc
pop
gs
dec
adc
out
test
add
dec
or
pop
dec
inc
or
adc
pop
or
bound
loope
shl
out
test
sbb
stos
mov
lods
add
mov
inc
stos
fisttpl
js
cmpsb
call
xchg
sbb
and
ljmp
dec
sub
and
aam
std
cmpsb
mov
mov
adc
call
push
xchg
cmpsl
iret
pop
ret
pushf
enter
adc
xor
and
sbb
stc
ljmp
push
push
mov
or
int
imul
into
inc
jg
jmp
adc
test
jo
add
add
jns
popf
or
dec
imul
mov
aaa
shlb
fwait
sti
fstpl
inc
cwtl
and
lret
mov
call
out
test
fsubl
call
lds
or
xchg
push
jecxz
xchg
cmp
test
sub
cs
cli
push
int3
pop
xchg
es
xor
xchg
test
cmc
mov
sub
ret
sti
inc
and
dec
mov
and
call
pushl
lds
pushf
orb
inc
and
mov
rorb
cmp
fdivrs
add
pop
push
imul
mov
hlt
js
push
cmp
lcall
add
stos
and
push
mov
sbbb
cmpsb
mov
jle
mov
iret
inc
and
decb
inc
data16
daa
stos
cltd
push
js
pop
cmp
jmp
add
imul
sbb
mov
inc
or
inc
mov
es
add
rorl
adc
ljmp
pushf
pop
xor
pop
dec
xor
fisttpl
and
cmpsb
sub
lret
js
mov
fdivs
or
rcrb
rclb
cmp
sub
push
pusha
xor
scas
test
and
stos
loopne
addb
sbb
sbb
mov
shrl
push
or
int3
call
or
push
stos
cmpsb
scas
sbb
push
sbb
mov
inc
stos
stos
pop
pusha
clc
push
sahf
jecxz
dec
cwtl
mov
sub
and
test
push
pusha
adc
leave
int3
pop
addb
into
das
movzbl
mov
in
shlb
or
pop
add
mov
mov
stos
mov
mov
loopne
mov
mov
mov
outsb
mov
dec
add
pushf
mov
daa
ret
movsl
sub
sbb
push
mov
xchg
jbe
lock
jbe
pop
test
mov
cmp
push
sti
pop
ret
data16
stos
mov
inc
push
add
and
adc
sbb
fbstp
push
test
pop
push
jmp
test
mov
pop
mov
mov
call
dec
in
push
scas
jb
int
nop
or
xchg
jbe
pusha
xchg
add
int
clc
es
sbb
mov
js
or
jge
and
popf
je
jl
aad
and
add
shrb
mov
pushf
mov
lock
sub
inc
push
adc
fcoml
lahf
je
cwtl
mov
inc
clc
push
mov
aam
dec
roll
and
pushf
rolb
add
or
mov
sar
pop
xchg
adc
sahf
js
jl
bound
pop
adc
mov
fadds
stos
mov
cltd
test
ss
test
adc
adc
xchg
sub
mov
out
inc
aad
out
mov
jne
dec
ret
push
mov
or
movsb
sbb
push
cld
aas
pop
inc
add
icebp
mov
mov
ss
ret
or
es
lock
std
inc
inc
test
add
inc
or
sbbb
and
jo
sahf
sbb
xchg
adc
je
mov
pushf
jp
xchg
movsl
pop
cmp
sbb
jmp
mov
nop
pop
pop
enter
adc
gs
and
bound
icebp
xor
leave
lock
aas
inc
adc
test
test
scas
xchg
mov
aad
loope
aam
dec
cltd
aam
mov
lcall
xchg
jnp
mov
in
js
fisubrs
int3
int
das
clc
mov
ds
add
rcrb
ret
adc
rorb
mov
cmc
mov
mov
push
std
ljmp
test
mov
xchg
aas
mov
mov
mov
fwait
inc
std
pop
out
mov
mov
jge
push
cmc
insb
jg
outsb
ljmp
mov
cli
xor
add
icebp
dec
fstps
add
dec
outsl
or
xchg
call
push
sahf
sbb
popa
xchg
lcall
dec
cmpsb
test
pushf
daa
clc
jle
push
jmp
mov
je
fadds
sub
enter
inc
mov
fwait
and
ljmp
jns
decb
scas
ret
outsb
and
test
cmovae
pop
stos
push
ja
inc
jno
rclb
jp
mov
ret
outsl
jb
sbb
mov
lods
sub
or
dec
repz
cli
cmc
iret
push
hlt
je
jp
test
jp
in
xchg
das
js
fistpl
push
mov
push
mov
mov
clc
scas
in
lds
ret
add
push
add
in
test
jmp
push
mov
push
scas
and
lds
xchg
test
ljmp
jmp
inc
cmp
repnz
in
mov
xor
ljmp
push
adc
dec
pop
sub
sbb
or
nop
adc
sbb
xor
stos
decl
popa
lock
std
xchg
cmp
sub
add
jge
addb
lret
loope
fistps
das
mov
xchg
sbb
cli
cli
test
mov
and
xchg
lcall
and
int
jmp
lds
jmp
fcompl
icebp
loopne
mov
bnd
sbb
sbb
imul
sbb
push
mov
dec
add
jle
mov
mov
decl
aaa
mov
clc
cmp
sub
mov
pop
mov
xchg
cld
pop
mov
loop
sti
push
add
mov
sti
push
add
mov
and
les
push
pop
lea
pushf
movsl
notl
mov
aad
jns
aam
and
sbb
ljmp
cmpsb
and
xchg
sbb
inc
in
xor
or
or
adc
out
lret
ja
shlb
movsl
mov
bound
pop
ret
out
cmp
jl
or
rcl
xor
ja
cli
pop
inc
push
jle
mov
movsl
pushf
or
adc
xorl
mov
popf
into
dec
mov
jns
rclb
movb
in
repz
jns
or
xchg
xchg
stos
jecxz
push
bound
xchg
xor
daa
adc
cmpsb
adc
ja
lea
lods
je
or
cld
and
icebp
sbb
xor
fdiv
add
mov
add
adc
adc
jnp
jl
bound
and
add
mov
xchg
push
sahf
cltd
repz
add
ret
aaa
mov
insb
adcb
out
es
in
fsubrs
pop
add
lods
push
jo
jbe
decl
push
ss
into
clc
cmp
xchg
push
dec
push
frstor
aam
xor
sbb
lds
xchg
fbstp
aas
mov
inc
sub
xchg
push
fdivrs
mov
add
popa
es
mov
fsubl
cmp
hlt
fbstp
clc
pop
sub
es
jle
pop
add
into
mov
js
das
and
fcoms
dec
sbb
xor
js
ret
jg
repnz
adc
out
jns
icebp
movsb
out
jmp
out
cwtl
xor
cmpl
int
cmp
sahf
jmp
push
clc
lock
dec
push
mov
test
inc
lods
push
adc
dec
xchg
movsb
imulb
in
hlt
mov
cli
sub
je
enter
test
in
dec
lock
dec
aaa
dec
push
xchg
xchg
xor
fcmovnu
mov
xor
or
mov
mov
xchg
fldl
mov
sbbb
cwtl
mov
repz
scas
add
popf
inc
inc
push
jp
andl
pushf
xchg
and
push
mov
test
scas
or
ss
faddp
jg
notb
lcall
push
shlb
outsl
js
cmc
sub
fstpl
je
mov
outsb
sbb
mov
les
xorl
ds
push
insl
fnstsw
inc
add
dec
push
jne
inc
cmp
sbb
cli
mov
lcall
mov
xchg
bound
mov
dec
out
std
stos
adc
add
push
test
fisubrs
enter
xor
cwtl
add
pop
shl
scas
stc
inc
add
and
cmpsl
mov
dec
and
ror
adc
pop
push
pusha
movups
into
add
repnz
cmp
scas
popa
je
ljmp
dec
rcll
repz
fbstp
and
cltd
xchg
jecxz
push
cmpl
int3
je
insb
dec
dec
push
call
xor
in
sub
mov
mov
inc
jb
in
cmp
xor
movsb
rol
pop
cld
and
rorl
cmp
rcll
mov
add
add
xchg
xchg
bound
jae
lods
fisttps
xor
push
pop
mov
dec
adc
or
xchg
pop
mov
jne
pushf
inc
sahf
mov
mov
add
stc
mov
shl
es
in
inc
push
fs
jl,pn
dec
aas
pushl
std
call
sbb
fcomps
push
std
mov
cmp
dec
lods
scas
xor
ljmp
test
sbb
jae
in
mov
jb
ret
add
sbb
aas
js
sub
lods
and
scas
movsl
push
pop
faddl
xor
and
movsb
sub
inc
mov
xchg
outsl
mov
jg
ret
lds
push
push
xlat
lods
mov
sbb
pop
jle
clc
mov
cld
xchg
fistpll
cmc
and
rcr
shll
dec
mov
outsb
mov
rclb
xchg
xchg
mov
mov
aaa
insl
mov
pop
negl
mov
sub
mov
mov
daa
mov
and
xor
idivb
repnz
mov
cmp
pop
inc
sbb
dec
ja
sub
rolb
cmpsb
or
cmp
mov
dec
sbb
jbe
loopne
jl
gs
insb
flds
lock
scas
sbb
add
jmp
xchg
mov
pop
loope
xlat
loopne
sahf
pusha
sbb
test
mov
cmpsb
cwtl
dec
add
nop
movsb
add
cltd
outsb
das
mov
dec
mov
insl
push
sti
jg
clc
orb
loopne
adc
mov
test
adc
or
jge
pop
int3
ret
xchg
fwait
jp
add
mov
dec
dec
imul
jp
sar
and
ljmp
fbld
or
into
xchg
imul
sub
adc
jl
call
ss
mov
cmp
lods
jp
test
or
and
mov
pop
pop
adc
xor
out
hlt
ja
mov
lcall
xchg
dec
fsubrs
lcall
jo
rorb
add
call
dec
ja
mov
cmovns
pop
add
pop
mov
mov
push
add
fs
call
std
xchg
out
dec
dec
jmp
or
das
xorw
fwait
test
sub
xor
lods
fs
xchg
push
clc
adc
shlb
mov
mov
int3
into
push
adc
stos
mov
and
es
cmc
add
or
iret
cmp
or
rclb
add
lock
or
and
fs
push
sbb
add
cmpsb
adc
mov
dec
xchg
mov
loop
pusha
add
ljmp
jle
xchg
cli
mov
or
pusha
mov
int
add
out
in
outsb
xchg
push
hlt
dec
mov
adc
sahf
mov
xor
fcmovnb
bound
add
adc
cld
test
call
outsb
push
cmpsl
push
aad
push
fldenv
mov
call
imul
add
sti
test
cmp
movsb
pop
push
sbb
shrl
and
jp
or
or
test
jo
lahf
popf
sbb
nop
and
loop
pop
inc
adc
ljmp
dec
pusha
imul
clc
xor
test
ja
add
pusha
or
cmpsb
inc
mul
or
sub
fcomps
xchg
mov
cmp
js
xchg
pushf
dec
jnp
outsl
std
sub
xor
push
add
pop
mov
js
jmp
jle
ficoms
and
sub
adc
jnp
and
mov
add
adc
or
addl
sti
sub
insl
dec
mov
or
xor
aam
pop
and
fwait
mov
jo
test
test
pushl
subb
shlb
add
stos
testl
test
push
xorl
mov
faddl
lcall
inc
push
les
test
add
cmp
pop
hlt
decl
push
add
mov
dec
cwtl
xchg
clc
mov
push
decl
sbb
xor
mov
mov
xchg
pop
lahf
sbbb
sub
jb
decl
ror
je
mov
mov
in
pop
inc
jecxz
and
mov
inc
loopne
adc
jne
cmpsl
mov
mov
add
in
xor
gs
dec
adc
test
ds
push
ss
insb
xor
ds
and
inc
pop
pop
cmp
sbb
add
pusha
xor
jl
pop
add
cmp
inc
inc
cltd
and
push
loop
loop
hlt
clc
fildll
fdivs
dec
sbb
or
mov
lock
gs
mov
pop
xor
mov
mov
les
int3
inc
xchg
cli
rcrb
ljmp
and
orl
push
daa
dec
ss
inc
mov
jg
pop
adc
fst
jecxz
popf
enter
cmp
inc
sbb
sbb
add
sub
mov
dec
enter
sbb
adc
test
es
loopne
adc
jb
pop
cmc
fisubl
daa
mov
mov
mov
push
enter
push
jns
lahf
je
sub
pop
cmp
inc
push
pop
mov
leave
inc
bndstx
xor
add
cmp
pop
add
sti
jo
push
loop
aam
aam
inc
sbb
pop
and
cmp
enter
andl
mov
ljmp
cmpsb
test
stc
test
dec
mov
inc
adc
out
xor
mov
ds
es
enter
lret
jnp
sahf
fs
lea
cmpl
jno,pt
xchg
cmp
xchg
jle
dec
mov
sbb
shl
test
pop
mov
lock
add
int
or
and
pop
cmpsb
cmp
out
fdivs
mov
nop
dec
xlat
xchg
jecxz
je
imul
cs
loopne
js
pushl
push
xchg
dec
out
xchg
inc
add
cwtl
and
ja
test
test
inc
xor
pusha
dec
fidivl
fsts
adc
jb
pop
pop
repnz
cli
js
xorb
push
nop
xchg
sbb
cmp
push
xor
aas
insb
jle
mov
js
clc
push
pop
pop
clc
cmp
lret
dec
aam
aaa
xorl
pop
pop
jmp
nop
mov
xlat
sbb
mov
sub
push
shlb
or
dec
xchg
and
lock
jg
xchg
insb
pop
inc
add
call
add
clc
pop
sub
inc
inc
dec
jnp
and
push
dec
xchg
cli
ljmp
mov
stos
ja
cmp
loopne
inc
xchg
pushf
xlat
jmp
inc
cld
pop
or
push
fnsave
pop
les
adc
mov
push
adc
fdivs
popf
push
cmp
add
outsl
in
add
cmp
nop
leave
cmp
outsl
cli
pusha
push
dec
mov
fimull
ret
jmp
xchg
mov
push
dec
lock
es
inc
cltd
lcall
inc
in
or
mov
nop
nop
les
cmpb
fnstcw
les
mov
and
adc
mov
addr16
jnp
add
add
out
lods
mov
sbb
lock
or
lcall
jg
call
fdivp
popf
lods
nop
xor
and
pushl
lods
adc
lret
ljmp
cltd
les
divb
test
dec
lock
sub
fcomps
jg
cmp
xor
sub
sti
int3
xor
repz
add
fsubs
cmp
and
cmp
into
jle
orb
push
adcb
xchg
pop
pusha
pop
cmp
ss
sub
outsl
in
add
mov
inc
rol
mov
mov
jp
mov
fbld
fisubl
mov
clc
cmpl
enter
adc
pop
push
mov
scas
mulb
ljmp
add
dec
mov
nop
aaa
sbb
mov
lods
data16
inc
inc
add
mov
xor
or
adc
call
dec
jbe
outsb
inc
and
dec
or
lods
jge
or
lahf
mov
push
jp
mov
sub
inc
popf
mov
vpshufd
lahf
lods
aam
cs
push
jg
stos
push
int3
inc
leave
xor
and
xor
and
xlat
in
push
jno
scas
mov
aas
xor
in
jp
repnz
bound
gs
test
and
push
xor
test
mov
lret
adc
stos
xor
xor
sarl
and
clc
add
cmp
nop
aam
lods
loope
or
mov
or
mov
mov
sbb
jbe
arpl
jno,pn
mov
out
jo
or
lock
push
repz
jg
es
and
jecxz
popa
add
push
fisubs
sbb
out
addb
movsl
or
jg
pop
mov
mov
dec
xchg
mov
xlat
das
inc
inc
cmp
or
xor
push
cmc
les
in
inc
fsts
push
scas
fildll
or
js
and
jl
push
pop
xlat
lret
rolb
in
mov
mov
fiadds
lcall
jmp
addr16
movsl
add
mov
int3
sbb
pop
mov
push
mov
lea
mov
movl
fcompl
add
shlb
ret
inc
lret
stos
adc
testl
cli
dec
arpl
xchg
add
jp
adc
iret
xchg
lea
push
mov
push
mov
or
push
mov
ds
div
stc
ficoms
andb
rclb
xchg
js
cmp
arpl
inc
xchg
add
xor
ret
clc
sbb
and
std
or
push
push
sti
pop
inc
test
inc
daa
xchg
rcrb
sub
cli
ret
jp
push
cld
rcll
and
add
lret
mov
mov
add
sarb
dec
fwait
ja
bound
cmpsl
and
mov
push
adc
nop
jno
xchg
loope
inc
cld
mov
ror
push
add
push
insl
icebp
lods
push
pushf
and
adc
rcll
pop
mov
aam
dec
test
pop
test
ljmp
ret
mov
push
fisubrs
cli
aad
mov
add
or
xor
shrb
lcall
out
das
fs
adc
jecxz
lcall
test
enter
jl
icebp
stos
mov
loopne
add
and
loope
outsb
clc
in
jecxz
mov
sbbl
pop
andb
inc
mov
lock
push
adc
andb
stc
fcmovnb
mov
outsl
or
pop
adc
xor
aas
add
daa
outsb
rcl
and
cmp
pushf
push
lods
out
push
xor
fadds
movl
lret
clc
ja
mov
cmpsb
push
sub
psrlq
pop
fdivrs
pop
and
pop
outsl
cwtl
pop
aam
insl
aaa
jge
mov
pop
push
dec
repz
push
mov
clc
inc
add
inc
outsb
sub
clc
jno
sub
int3
jg
adc
bnd
testb
add
insb
out
sbbb
xor
and
lods
sbb
sti
popf
in
shll
pop
and
and
and
in
faddl
mov
mov
test
adc
add
stos
lret
test
add
fucomip
bound
jp
add
lds
add
pop
lods
push
lret
test
lock
clc
sub
rorb
or
add
addb
cmp
loop
testb
mov
dec
ret
int
subl
fcmovne
xor
ds
cltd
adc
dec
pmaxub
sbb
push
outsl
data16
cs
into
lcall
xor
mov
in
ja
add
das
mov
cmpsb
cmpsl
mov
add
in
call
int3
cmpsl
xlat
xchg
sbb
jle
jmp
repnz
rcrb
push
inc
sub
pop
mov
in
and
orb
leave
leave
mov
jg
outsb
xchg
jmp
and
cmp
roll
scas
cmc
sbb
sbb
push
cmp
or
mov
inc
mov
sub
cmpb
into
out
sub
xor
cmpsl
add
or
push
bound
inc
insl
aaa
fdiv
rcrl
cmp
decl
or
cmp
mov
cmp
scas
jg
lret
scas
hlt
xchg
jle
or
icebp
mov
adc
rolb
inc
clc
aas
rorb
add
pop
push
and
cmp
out
lock
movsb
dec
fldenv
lods
ljmp
xor
jo
imul
push
mov
insb
les
mov
ss
cld
sub
mov
inc
xor
insb
andb
mov
dec
adc
into
mov
scas
pop
mov
adc
popa
jecxz
fsubrs
div
ss
cli
pop
pop
jne
push
clc
adc
xor
outsb
mov
xchg
xchg
loopne
lahf
sbb
inc
enter
push
shll
into
xor
inc
aad
and
adc
jp
and
sbb
pop
dec
iret
es
cmp
xor
inc
push
dec
in
xor
push
dec
loop
push
xchg
xor
or
add
dec
adc
orb
xchg
sbb
inc
or
sbb
arpl
or
movsb
lock
inc
fs
scas
xor
pop
jno
xchg
jns
add
pop
cwtl
mov
add
mov
fildl
orl
faddl
mov
rolb
rolb
mov
sti
xchg
leave
xor
arpl
or
ja
push
adc
inc
dec
and
ret
add
decl
inc
mov
orl
lahf
mov
and
jle
lea
push
inc
or
inc
std
mov
xchg
sub
sbb
mov
and
fmuls
aas
sub
add
aam
sbb
pop
testl
dec
lods
or
js
sbb
lret
jl
mov
mov
pop
lock
bnd
adc
insl
dec
test
popl
xchg
in
or
pop
or
push
inc
popa
jecxz
ljmp
and
pop
pop
mov
lods
jl
mov
or
rorl
shl
sti
ficoms
pop
sbb
clc
cmp
mov
push
fadds
adc
xchg
cmp
insb
aas
mov
scas
sub
cs
cli
or
enter
mov
push
and
shlb
adc
mov
fisubl
shl
aad
lds
in
and
sbb
mov
std
sbb
icebp
in
mov
adc
dec
or
and
test
xor
jge
push
pop
jbe
push
mov
leave
dec
mov
sbb
incl
push
pusha
sub
adc
mov
dec
rcrb
rcr
test
dec
pusha
or
sub
test
int
scas
bound
sub
pop
movsl
push
jnp
data16
push
inc
int
dec
dec
out
fsubl
sub
sti
inc
jne
dec
sub
dec
push
lods
test
aas
push
push
and
ret
jo
pop
data16
out
rclb
fldenv
inc
sbb
shll
dec
popa
xchg
decb
stos
ja
mov
setbe
xchg
rclb
sub
mov
mov
adc
in
movsl
xchg
dec
pop
mov
in
aad
mov
int
sub
cli
aad
inc
mov
ret
xchg
mov
call
and
fisubrl
sub
rol
roll
dec
loop
push
outsl
pop
loopne
cmp
adcl
xor
jge,pt
mov
hlt
mov
fsubrl
sub
add
test
ds
out
mov
ds
cli
int
sub
pop
in
shll
add
pop
cmp
xchg
mov
js
adc
mov
insb
or
lea
pop
fcomp
add
sub
sub
push
add
lret
loope
mov
ret
mov
add
stos
call
inc
cmc
push
mov
pusha
mov
xor
out
pop
add
lock
cmpsl
lock
repz
pop
add
or
clc
pop
mov
shrb
add
aad
and
or
out
xor
daa
cld
in
ljmp
test
cmp
sub
test
call
add
ljmp
js
add
mov
lods
mov
cmp
test
pusha
jbe
cwtl
jp
loopne
jg
xor
lods
aam
xchg
push
fwait
pop
or
fs
loopne
sub
lahf
inc
push
jl
push
pop
add
jb
pop
jb
fs
push
das
mov
movsl
and
mov
sbb
and
dec
mov
jnp
sbb
adc
and
pusha
jge
mov
ss
loopne
mov
fadd
addb
push
inc
in
pop
xor
xlat
xor
idiv
mov
out
fisubs
mov
push
insb
cmp
xchg
insl
mov
or
loope
or
xchg
mov
stc
and
cmp
push
add
xorl
push
mov
jbe
cmc
and
out
push
jb
mov
mov
icebp
mov
or
jl
icebp
sahf
loopne
inc
xchg
cli
cmpsb
add
loopne
push
mov
lock
js
pop
insb
push
mov
aam
pushf
jecxz
int3
adc
jp
lea
cli
jecxz,pt
aad
hlt
and
or
jns
and
aas
xchg
in
cli
sub
stos
mov
mov
sbb
or
fistps
inc
inc
or
jmp
mov
cmp
mov
fucomip
aad
jl
dec
or
mov
dec
fisubrs
nop
aad
adc
adc
push
orl
mov
aaa
mov
pop
mov
clc
adc
mov
mov
mov
outsb
push
dec
mov
ljmp
mov
pushl
jne
loopne
adc
push
loope
insb
in
dec
push
mov
js
test
test
out
and
incl
pushf
fildll
mov
subb
js
mov
rcrl
xor
mov
and
and
ljmp
aas
and
rorb
sub
xchg
lret
mov
pop
cmpsb
push
mov
mov
pop
mov
sub
xchg
subb
scas
mov
in
add
push
loop
test
insb
jb
jne
and
fcmovb
fildll
sub
lds
mov
dec
nop
and
lods
jne
ljmp
js
dec
xchg
pop
xor
xchg
in
lock
sbb
insl
adc
xor
stos
shlb
mov
in
jecxz
dec
mov
cwtl
mov
dec
aaa
push
ret
shlb
xchg
cmp
stos
fwait
mov
sbb
or
jo
and
ss
call
scas
enter
jecxz
add
lods
clc
test
leave
outsb
inc
rorb
cli
ja
ljmp
push
jmp
dec
aas
mov
mov
sbb
or
sbb
aam
orl
mov
daa
cwtl
testb
and
lock
pop
out
aam
adcb
aaa
mov
jae
es
sub
scas
sti
pop
jne
push
cmp
adc
xchg
das
fsubr
inc
sub
sub
cld
out
xchg
jnp
or
cmp
sahf
sbb
mov
and
sbb
lret
pop
dec
mov
call
mov
ds
mov
test
xchg
pop
inc
jne
and
mov
leave
push
call
pop
pop
test
es
inc
pusha
les
push
lea
or
push
lcall
jb
notl
or
addr16
mov
js
jmp
mov
mov
movsb
add
dec
aam
test
andb
push
jb
sbb
push
fimuls
pop
adc
cmp
pop
jge
hlt
adc
imul
popa
mov
into
fimull
inc
mov
xchg
fwait
mov
xor
lret
fisubs
fists
pop
popf
aaa
or
cmp
pop
pop
cwtl
js
enter
sbb
ja
adcl
add
adc
xor
push
lea
mov
mov
mov
enter
mov
mov
loopne
insb
test
mov
push
ja
push
mov
lods
test
adc
add
cmp
ja
inc
mov
or
xor
mov
sub
test
push
adc
xchg
insb
enter
in
sbb
sbbb
mov
ss
cmpsb
sbb
mov
or
jnp
mov
in
lds
call
pop
pop
mov
cwtl
fs
jp
mov
mov
lret
dec
sbb
dec
std
ja
insb
aam
push
lea
cmp
adc
mov
lahf
or
out
sarl
mov
out
or
adc
call
sbb
jno
xchg
add
xor
and
pop
test
adc
das
jecxz
lds
mov
nop
adc
mov
xchg
sbbl
mov
mov
and
xlat
push
push
adc
adc
mov
loop
mov
pop
cmc
pusha
push
sub
rolb
popa
movsl
hlt
sti
inc
fildl
jecxz
xchg
add
popf
pop
push
sub
dec
push
cli
es
adc
pop
and
fisubrs
sub
cmp
loop
sbb
cmpsl
into
jb
dec
dec
adc
adc
sbb
inc
or
js
call
and
cmc
hlt
inc
sbb
loop
call
or
xlat
fstps
mov
stc
dec
pop
rolb
sbb
mov
cwtl
cli
adc
daa
mov
lret
std
decb
es
jecxz
cwtl
xchg
in
scas
pop
sub
test
pusha
jl
ds
decb
ljmp
push
inc
add
int
or
pushf
cmpl
adc
incb
adc
repnz
inc
ds
mov
incl
cs
xor
mov
jmp
ss
cld
mov
es
sbb
push
ret
xchg
test
icebp
in
movsb
mov
push
test
pusha
push
xchg
outsb
dec
sbb
pop
mov
fs
roll
subl
xchg
loop
dec
movsb
imulb
sbb
out
shlb
xor
in
jne
js
jmp
es
sub
add
push
add
pop
out
jl
xchg
inc
cmp
dec
leave
sbb
xor
sub
xchg
push
test
xor
mov
ljmp
dec
inc
mov
movsl
nop
dec
inc
mov
movl
stos
cs
test
decb
negb
jle
es
add
loop
inc
movsl
movsb
or
pop
mov
mov
pop
sbb
cmc
and
mov
shrb
pushl
ja
scas
add
test
lods
and
adc
cmp
sahf
inc
pop
nop
inc
dec
idivb
jbe
adc
inc
sbb
loope
nop
shrl
adcb
aaa
dec
clc
adcb
or
rcrl
dec
call
insb
mov
daa
inc
out
add
dec
jg
xchg
icebp
xchg
or
add
incl
sbbl
stc
pusha
sar
sbb
sub
cmp
mov
and
mov
jbe
daa
jmp
adc
fwait
mov
call
or
inc
jae
or
das
clc
add
es
les
pop
sub
mov
add
mov
cmp
movsl
jge
mov
jle
pop
jbe
stos
sbb
xor
sar
pushf
sub
mov
mov
push
mov
mov
sub
popf
adc
push
or
outsb
mov
mov
cli
push
xchg
pop
mov
mov
push
dec
lea
call
and
xor
sbb
add
inc
sbbl
adc
outsl
cwtl
loope
xchg
mov
sub
cmp
inc
jne
add
dec
or
mov
movsb
es
je
or
cmp
loope
shr
mov
mov
repnz
lcall
int
mov
nop
pop
mov
adc
mov
inc
add
outsb
lcall
mov
test
mov
and
test
inc
or
add
mov
add
jo
test
and
add
mov
dec
or
imul
adcl
lock
and
inc
leave
out
outsl
icebp
or
aaa
imul
rolb
mov
dec
sub
push
dec
aas
cmp
inc
ret
fmuls
adc
data16
mov
cmp
jno
or
or
sbb
or
or
push
sbb
sbb
mov
stos
jge
popa
clc
out
jle
call
or
mov
cwtl
lcall
fcoml
add
add
sub
int3
inc
cmp
jg
adc
out
xor
shlb
jno
xchg
data16
sub
mov
lock
push
jp
jae
mov
push
adc
pushf
mov
cmpb
inc
or
ss
mov
out
and
push
loop
cwtl
loope
and
cld
push
sbbb
into
je
xor
xchg
orb
dec
nop
jl
add
decl
cld
mov
dec
mov
xor
ss
mov
pop
xor
mov
dec
xor
out
insb
jecxz
in
push
insb
mov
lahf
push
push
pop
push
into
xlat
xor
jg
jg
cld
mov
nop
mov
ljmp
sti
int
movsb
ret
les
adcl
xchg
sbb
popa
out
cld
hlt
or
xor
in
or
outsb
mov
stc
add
das
sbb
cld
pop
mov
mov
adc
fwait
adc
hlt
jae
fists
xor
outsb
sub
outsb
add
js
mov
jle
mov
dec
mov
dec
and
ret
or
outsl
into
loopne
inc
pusha
insb
add
ret
push
or
clc
in
lret
dec
push
pusha
lds
push
loope,pn
imul
pop
lcall
icebp
popa
daa
icebp
ficoml
hlt
jo
xchg
hlt
mov
xchg
sbb
shll
dec
xchg
sub
ljmp
sub
das
inc
sbb
fistpl
push
into
decl
jbe
dec
add
dec
ficoml
icebp
cmp
and
fdivrs
fstl
cmp
ljmp
and
mov
rcrb
mov
cmp
jecxz
frstor
mov
mov
inc
pop
fsub
xchg
jmp
jg
xchg
or
ljmp
pop
cld
dec
inc
dec
lcall
bound
std
and
fimuls
add
add
cmpsb
mov
and
pop
pop
rcrb
sub
mov
push
sbb
les
cld
adc
mov
dec
sub
add
inc
addr16
outsl
frstor
jecxz
jge,pn
xchg
sbb
cltd
jnp
xor
adc
test
leave
pop
int3
mov
xchg
lock
push
aaa
imul
insl
ljmp
out
mov
sub
sub
dec
aam
mov
xchg
enter
pop
rorl
and
mov
or
jg
pop
mov
inc
and
rclb
pop
xor
fdivrl
push
repnz
sub
xor
add
adc
ljmp
push
dec
push
std
sbb
in
lock
add
lods
adc
xchg
stc
fnsave
add
scas
outsl
pop
test
icebp
inc
push
mov
mov
test
lret
or
inc
adc
or
pop
and
mov
test
fsubrs
adc
in
cs
inc
fildll
shlb
jg
test
ljmp
sti
xlat
adc
or
mov
mov
stos
mov
xor
sbb
stos
pop
test
fcoml
popa
or
jl
mov
pop
sahf
mov
andb
mov
sbb
and
andb
push
stos
pop
cmc
xchg
xor
push
inc
ret
xchg
andb
xchg
das
push
push
jle
xchg
push
xchg
fucomp
and
mov
cmp
rorb
mov
pop
bound
dec
or
sub
lcall
pop
std
aaa
lahf
jb
mov
fs
stos
fdivrp
mov
mov
jnp
cli
sub
or
jl
push
pand
dec
jbe
aaa
cmp
outsl
and
xchg
sahf
mov
fcomps
cmp
insb
fst
sbb
enter
mov
out
in
jne
cli
jo
lds
xor
jb
clc
lods
xchg
in
fildll
xchg
or
call
jecxz
cmpsb
loopne
gs
cld
mov
sub
pop
and
jmp
test
jle
xor
push
or
adc
cwtl
pop
mov
push
or
hlt
push
pop
mov
and
incl
mov
popf
add
jg
mov
call
mov
jmp
add
pop
add
push
mov
mov
lods
ret
cld
lret
clc
dec
xchg
sarb
xlat
add
adc
aam
clc
test
std
paddd
test
push
in
repnz
adc
arpl
mov
in
inc
jne
ljmp
mov
add
cmp
add
push
inc
xchg
cli
add
ljmp
adc
fcomip
mov
xchg
mov
jbe
xor
inc
add
out
cli
in
aam
jno
push
jae
add
fidivs
mov
test
xchg
fimuls
xchg
mov
inc
inc
sbb
test
adc
mov
and
sub
into
sbb
mov
pop
fs
jecxz
std
loopne
mov
ja
sarb
jge
popa
mov
gs
sbb
mov
or
pop
cli
inc
dec
pusha
jle
lcall
sbb
mov
inc
push
inc
or
jnp
fcoms
mov
pop
pusha
sti
push
fidivl
nop
add
mov
cmpsl
mov
mov
cmp
int
or
adc
cld
cmpsb
mov
jp
sub
idiv
dec
shlb
add
out
jg
mov
ret
outsb
sbb
test
addr16
les
test
outsb
jecxz
rolb
in
stos
push
adc
cmp
xor
aaa
cld
das
mov
mov
outsl
popa
push
cmpsb
push
ret
push
orb
filds
mov
cmpsb
push
and
or
lcall
jae
cmpsb
sub
out
add
into
and
jns
call
xor
and
or
incl
or
in
in
pop
dec
push
jecxz
add
mov
out
adc
decl
lret
jb
inc
mov
jg
push
test
xor
mov
shrl
incl
loopne
and
repz
enter
repz
or
jo
pop
test
sbb
dec
jb
mov
test
sbb
fildl
sub
pushl
pop
in
mov
inc
inc
mov
das
push
push
clc
loope
jae
xor
je
leave
xchg
cmc
addb
out
aaa
movsb
lcall
push
incl
sahf
into
adc
je
jmp
repz
push
sbb
jl
cmpsb
pop
out
xor
or
sub
aad
clc
ja
stos
adc
push
or
xchg
jg
je
mov
jp
inc
jno
lcall
hlt
sbb
push
mov
decl
xchg
in
cwtl
fs
xchg
pop
int3
sbb
test
pushl
cld
leave
push
pop
mov
mov
enter
sub
testl
xor
sub
jb
mov
shrd
or
ret
cld
xor
inc
aaa
add
aaa
lcall
cli
push
movsl
add
incl
lret
rcll
lock
dec
and
pop
bound
js
mov
dec
pop
cmpl
inc
push
idivb
add
xor
or
mov
loop
cld
mov
sub
and
shlb
callw
call
cmp
adc
lds
jge
loop
mov
jnp
outsl
cli
cmpsb
bound
icebp
int3
in
adc
xor
test
sub
orb
loop
jb,pt
dec
mov
in
xchg
lcall
mov
inc
and
sbb
add
mov
xor
xchg
movsb
sbb
iret
or
mov
ljmp
and
push
cltd
ss
ljmp
sbb
mov
inc
or
test
popf
lock
mov
ljmp
adc
pop
ss
sarb
scas
cli
pop
fsubs
lock
int3
xchg
pop
inc
pop
stos
push
jno
jp
incl
or
sub
mov
sub
add
lock
or
js
jle
sbb
cmpsb
sbb
in
dec
pop
pop
xor
jmp
loope
xchg
ljmp
jb
icebp
ss
imul
lds
jp
or
clc
imull
pop
push
mov
stos
push
push
xchg
arpl
fsubrs
mov
call
mov
into
popa
mov
inc
dec
sbb
mov
xchg
iret
clc
cmp
imul
mov
add
mov
dec
fldl
cmp
ret
fwait
hlt
outsl
mov
test
inc
xchg
jle
or
ja
popfw
mov
add
cli
mov
or
mov
push
or
cli
jecxz
js
mov
shrb
in
out
test
std
insl
jg
or
inc
push
jge
inc
cld
cmp
cmp
mov
pop
jb
and
sbb
xchg
mov
mov
lcall
mov
mov
add
push
mov
add
arpl
pop
hlt
ja
cmp
mov
jg
shlb
out
lcall
mov
incl
xchg
lahf
testb
push
test
ljmp
dec
mov
push
out
pop
xchg
xor
jmp
mov
ljmp
cmpsl
aad
jo
fimull
adc
cmp
mov
call
mov
dec
jmp
in
call
pop
cld
leave
ret
call
mov
insb
xchg
gs
cmpb
mov
lods
and
mov
jnp
sbb
mov
cmp
imul
inc
jecxz
add
adcb
mov
mov
mov
test
aaa
pop
and
call
xchg
mov
mov
roll
mov
and
jmp
xor
push
data16
pop
jns
clc
jg
hlt
jle
jecxz
xchg
add
pusha
dec
int3
xchg
clc
xlat
sbb
adc
xchg
clc
jne
insb
enter
jo
adc
inc
adc
mov
sub
adc
xlat
inc
sbb
sahf
sub
stc
shl
add
cmp
scas
mov
inc
test
cmp
aam
shl
cwtl
inc
mov
mov
out
fsubs
push
sahf
pop
or
call
sbb
lock
xchg
cltd
sbb
incl
ret
or
xor
pop
adc
test
mov
shll
or
into
cmp
cld
in
inc
cld
mov
cmp
and
es
shll
mov
ja
mov
hlt
incl
out
mov
test
test
sbb
and
cwtl
pop
jno
mov
test
inc
insb
jp
repz
shl
movsb
scas
and
sub
or
dec
pusha
or
xchg
es
mov
jns
daa
sub
adc
mov
cli
cmc
xor
fwait
sbb
mov
jg
mov
xor
push
inc
test
or
jno
sub
fsubrl
outsb
adc
cwtl
pop
je
mov
je
stos
std
cmpsb
repnz
dec
popf
in
add
and
jle
rolb
in
rol
add
mov
jmp
cwtl
lock
jae
pop
notb
fdivrl
ljmp
fsubrs
mov
adc
inc
dec
push
cmp
out
mov
lcall
xchg
jb
icebp
xchg
mov
into
out
imul
andl
fistl
loopne
or
loopne
rolb
stc
or
scas
dec
loop
pop
mov
fisubrs
in
fwait
xchg
pushf
imull
ret
add
push
mov
scas
xor
push
daa
mov
jle
je
outsb
cmp
sbb
aam
sub
js
cmp
or
push
lods
sbb
dec
insb
pop
dec
dec
push
mov
mov
mov
inc
outsl
into
popf
fadd
cli
pop
jl
lea
scas
mov
sbb
pop
nop
sub
lret
mov
cmp
lcall
icebp
orl
push
inc
push
pop
cmp
fbld
xor
flds
cltd
lcall
inc
xor
or
xor
pop
adc
std
add
nop
xchg
inc
add
or
aad
jle
cs
push
or
nop
mov
icebp
lods
add
lock
stos
daa
fcmovb
leave
adc
mov
fwait
rorb
sbb
mov
and
push
mov
test
mov
mov
and
pop
jbe
mov
add
aad
push
call
and
fisubs
push
inc
ret
pop
mov
movsl
movsb
pop
xor
xorl
rcl
mov
movups
add
ja
das
cmp
mov
xor
repz
and
sub
push
inc
mov
faddl
stos
adc
push
mov
pop
push
inc
adc
ds
fdivp
pop
loop
jl
bound
mov
and
xchg
sub
pop
lret
pushf
or
outsl
cmp
sbb
insb
inc
jecxz
div
inc
cli
out
pop
xor
jp
and
std
pop
adcb
push
leave
adc
push
sbb
scas
rcl
fdivrs
lcall
cld
scas
clc
push
sub
cmp
xchg
cltd
add
mov
xchg
mov
mov
adc
dec
push
pop
es
loopne
xchg
mov
adc
jnp
dec
cmp
xchg
fs
adc
push
cld
decl
roll
xchg
pop
add
cmp
mov
decl
xor
jnp
mov
or
adc
and
sidtl
shlb
scas
push
sub
sub
leave
add
push
cmp
rcll
and
lret
jns
incl
push
pop
pop
sub
rclb
out
xlat
in
inc
call
adc
add
bound
dec
jns
push
jno
test
les
sub
in
das
mov
mov
mov
mov
cld
xchg
mov
inc
jnp
mov
or
xchg
insb
xlat
push
stos
push
push
stos
mov
scas
jno
jo
xchg
shlw
fnsave
mov
add
jmp
cld
inc
ret
cmp
adc
pop
pop
loopne
mov
xorb
int
mov
dec
das
mov
cli
add
push
jmp
jp
shl
pop
mov
flds
pmaxub
movsb
test
inc
xor
add
mov
ljmp
jle
jne
stos
mov
and
xchg
xor
aam
cwtl
or
cmp
or
sbb
ss
and
xor
fwait
cmp
dec
adc
pop
add
roll
inc
adc
popa
mov
sub
xchg
sub
inc
cmpsb
mov
inc
push
out
inc
pop
test
mov
add
stos
sbb
xchg
mov
sbb
data16
mov
jmp
insl
push
dec
push
lock
mov
mov
pop
or
adc
push
fwait
mov
loopne
clc
iret
push
jae
popa
roll
xchg
dec
xchg
or
mov
inc
or
or
inc
in
cmp
imul
adc
std
mov
sub
and
cmp
iret
inc
push
and
jl
subb
xchg
pop
xor
pop
fdivl
fsubrp
enter
xor
mov
mov
fildl
dec
andl
cmpsl
sahf
cmc
movsb
stos
inc
sub
mov
mov
add
adc
lret
push
mov
xor
clc
mov
incl
or
sub
rclb
aam
push
aaa
adc
sbb
xchg
mov
fidivl
incb
sbb
or
push
xchg
or
popa
imul
mov
push
fbstp
cmp
lock
and
enter
testl
push
mov
sub
or
lret
mov
int3
aas
imul
xor
aam
jmp
fiaddl
cmp
xorb
xchg
and
add
and
push
in
xor
shl
loopne
mov
ret
fnsave
jmp
push
outsb
xorb
out
inc
push
add
mov
sbb
mov
out
mov
mov
xchg
test
cmp
sub
mov
inc
add
test
xor
cli
fdivr
xor
or
pop
sbb
xorb
jp
push
pusha
mov
ret
cld
inc
shrb
int3
aaa
push
xor
jl
arpl
lret
dec
fs
bound
push
imul
mov
cmc
das
or
incb
sbb
fucomi
mov
and
push
xchg
inc
shll
fisttps
ret
ret
add
ja
ret
ss
lahf
dec
jae
mov
mov
unpcklps
test
clc
inc
xor
pop
mov
jbe
mov
negl
inc
cmpl
add
push
repz
jbe
and
xchg
pop
inc
sbb
mov
inc
xchg
out
fwait
sub
dec
call
aaa
ret
add
or
adc
pop
loopne
push
xchg
cltd
xor
jne
cmpsl
sub
xor
dec
mov
mov
cmpsb
std
popl
and
sub
sbb
pop
pusha
clc
cmpsb
xlat
loope
gs
test
push
fisttpl
push
xor
cld
outsb
aam
aad
fdivl
inc
add
xor
call
inc
push
jbe
mov
hlt
xchg
fisubl
pop
sbb
adc
out
clc
push
and
push
or
cmp
outsb
xchg
bound
fstpt
or
into
jne
sub
aas
fs
push
jecxz
icebp
pop
and
outsb
test
lods
and
imul
xchg
out
xor
sbb
push
jbe
xchg
or
fdivp
out
mov
sbb
ds
lock
jne
xchg
xchg
sub
xchg
mov
mov
lods
dec
lret
ja
testb
lock
mov
sbb
aas
add
bound
mov
jp
dec
and
std
sub
sub
pop
add
push
dec
mov
std
sub
or
mov
push
add
clc
cmpsb
push
jge
arpl
ja
or
fcomps
test
fdivrs
sub
lods
xor
mov
xor
call
insb
pop
mov
shr
ret
addr16
cld
sbb
dec
insb
outsb
cmp
cs
dec
push
fcompl
lock
push
mov
cmp
or
jecxz
push
push
dec
incl
fsubl
scas
ljmp
xchg
cmp
out
clc
loopne
rcr
jne
dec
cmpl
push
sti
aam
xor
jnp
imul
fiaddl
jmp
inc
sbb
push
and
inc
and
push
jne
loop
inc
pop
xchg
pushf
imul
mov
shrl
dec
js
xorb
inc
mov
repnz
insl
movl
testb
ljmp
push
add
ret
fsubrs
xchg
adc
xchg
and
les
lret
mov
loop
jne
pop
push
ficoms
mov
push
add
xchg
adc
ljmp
pop
or
mov
outsb
xor
cmp
add
or
sbb
mov
jg
pop
and
cmp
pop
add
aad
bound
lock
mov
push
repnz
dec
cmp
lock
call
cltd
add
push
fstl
int3
push
push
bswap
or
aaa
nop
push
jno
inc
adc
out
rcll
lock
rcrl
mov
cli
push
incl
jecxz
jecxz
testb
dec
adc
nop
aas
testb
mov
mov
das
pop
out
movsb
xchg
inc
xchg
sub
repnz
and
xor
pop
dec
loopne
scas
mov
xor
movsb
mov
add
rol
nop
call
fs
push
dec
ret
jae
outsl
aaa
cld
jmp
add
xor
add
aam
adc
inc
or
mov
icebp
push
add
loopne
mov
sti
repz
mov
fstpl
or
cmp
dec
call
movsb
and
cwtl
push
cmp
push
xchg
incl
inc
scas
aas
lcall
add
sub
cmc
push
outsb
vmwrite
push
jns
out
clc
or
aaa
mov
shll
rorb
sbb
fs
jmp
cltd
fmull
ja
add
mov
lret
lock
add
ss
lcall
add
jp
or
adc
cli
jmp
or
add
rcrb
mov
jg
push
test
loopne
add
mov
push
jno
clc
fnstsw
pop
jo
sub
aas
push
adc
rcrb
pusha
mov
cwtl
or
jp
cwtl
rcrb
add
and
loop
aaa
pop
pop
ret
push
push
cmp
and
std
fcoml
add
xor
and
in
popf
add
pop
shll
repnz
in
jmp
ljmp
mov
out
adcb
sbb
cld
mov
je
mov
movsl
push
cmp
hlt
cli
inc
jmp
stos
xchg
jmp
test
fistpll
or
icebp
sar
loop
fsubs
bound
dec
test
stos
and
adc
cmpsl
pop
sub
lea
insb
push
mov
shl
adc
adc
insb
std
pop
outsb
or
stos
mov
inc
inc
pop
mov
push
addr16
sahf
adc
xlat
mov
dec
inc
in
mov
filds
sub
pop
sub
data16
pop
xchg
int
mov
inc
push
nop
test
adc
pushf
orl
sbb
dec
roll
inc
rol
dec
inc
mov
jno
vpmaxsw
sbb
das
insb
data16
test
xchg
js
jb
pop
shl
inc
aam
clc
int
inc
cmp
add
mov
cs
push
pop
out
movsl
dec
inc
sti
mov
adc
in
mov
or
push
inc
jg
cmpsb
pop
lahf
addr16
mov
mov
fidivrs
or
jl
inc
out
int3
cmpsb
push
add
jp
inc
mov
mov
test
imul
repz
mov
mov
loope
cli
inc
enter
pop
or
cli
loopne
xchg
enter
inc
test
pop
stc
push
enter
jnp
js
popa
shl
int
cmp
sub
loopne
inc
lret
scas
adcb
fs
sbb
add
loopne
xchg
xchg
mov
inc
fisttpll
push
add
jo
adc
aas
push
decb
mov
aam
push
push
xchg
mov
imul
ffree
add
shrb
adcl
mov
jg
cmpsb
rclb
fwait
mov
jo
imul
outsb
jge
outsl
jecxz
adc
cld
mov
pop
repz
arpl
pop
xchg
insl
xchg
add
cmp
add
lea
movd
or
mov
loop
movsl
mov
add
pusha
add
movl
inc
mov
call
addr16
aaa
or
ja
and
mov
lods
fs
inc
mov
sub
xor
xchg
cmc
das
ret
sbb
into
dec
dec
mov
loope
in
mov
rclb
xor
pop
lods
jg
cld
mov
or
or
aaa
sub
xor
sub
jmp
mov
add
push
jl
movsb
and
clc
lret
dec
movsb
jo
stc
dec
dec
movl
pop
fidivs
stc
fimuls
mov
inc
data16
sti
aad
xchg
je
aaa
leave
inc
cwtl
jp
movsl
push
add
mov
mov
cmp
clc
pop
in
pop
and
inc
and
out
push
pop
or
sti
and
jp
cmp
pop
mov
inc
dec
dec
int3
test
push
les
es
pop
jo,pt
xchg
adc
sub
adc
sbb
sahf
jecxz
mov
xor
dec
mov
outsl
aam
cli
pop
pop
adc
or
dec
stc
dec
add
ja
add
mov
push
lret
push
call
cmc
movsb
add
or
xchg
enter
aaa
mov
stos
cs
fistpll
mov
and
je
xchg
xchg
push
imul
cli
hlt
pop
sbb
sbb
adc
movsb
inc
mov
mov
ret
push
xchg
test
mov
xor
inc
jecxz
sahf
fwait
loope
sub
arpl
sbb
mov
ret
mov
mov
cmp
icebp
pop
sub
bound
ja
cmp
dec
js
stos
inc
es
stos
xor
mov
fsub
push
sbb
clc
dec
test
inc
pop
mov
ss
shll
and
inc
aad
lods
and
sub
pusha
insl
ret
out
mov
lret
icebp
lret
cld
push
push
decl
aad
aam
sub
mov
loope
lea
xor
mov
adc
bound
dec
and
shr
stos
and
push
popa
fldl
int3
jmp
lret
adc
adc
jo
mov
adc
xchg
fstps
push
cmp
fidivl
push
mov
add
adc
clc
xchg
add
xor
fnstcw
call
jbe
cli
divb
je
test
adc
sti
or
adc
sub
xchg
pusha
jbe
ds
addb
addb
pop
mov
adc
push
pop
dec
inc
lret
cmpsb
js
sub
sbb
xchg
cmc
cmp
pop
sbb
icebp
js
movl
mov
jne,pt
sbb
subb
sub
cld
inc
cwtl
mov
incl
shrb
mov
cltd
xchg
xchg
ds
pop
movsl
fiaddl
les
rclb
push
mov
loopne
adc
outsb
popf
pop
pushf
aam
icebp
cmp
out
mov
ret
pushf
mul
movsb
sti
xor
xchg
pushl
loop
xchg
push
adc
mov
jbe
sbb
sub
cld
jg
call
int3
stc
push
stos
lods
jp
out
pop
lods
mov
jbe
mov
cmp
mov
adc
xchg
das
inc
dec
enter
sub
xchg
pop
cmpsb
add
inc
rcrb
sbb
sbb
hlt
scas
adc
jmp
or
stos
fwait
aaa
mov
js
lea
mov
dec
mov
push
push
xchg
pop
inc
fs
std
pop
adc
jb
mov
loopne
and
pop
cmp
imul
dec
or
xchg
aaa
sbb
cli
push
mov
fcompl
inc
fs
clc
pop
icebp
les
xor
or
inc
push
mov
daa
push
stos
add
cmp
jg
xchg
push
xchg
dec
push
adc
shr
imul
add
into
inc
lock
nop
fxch
cmpsl
jl,pt
mov
xchg
adc
mov
push
idiv
adc
out
fisubs
jns
mov
sti
and
mov
dec
jecxz
add
push
pusha
pop
mov
ret
andb
xchg
cmpb
add
xchg
pop
add
xchg
rolb
xchg
lods
mov
dec
or
addb
mov
fs
fnstcw
adc
xchg
aam
popa
mov
psrad
dec
push
fs
test
push
add
inc
popf
mov
xor
lahf
push
pop
jmp
insl
inc
dec
test
clc
andl
cltd
mov
adc
adcl
aad
sbb
or
mov
aas
and
pop
lds
popf
mov
push
pop
pusha
jecxz
andb
adc
or
push
int3
loop
jo
pop
mov
int3
pushf
mov
mov
add
mov
xchg
pop
mov
dec
int3
cs
push
push
pop
jg
cld
fwait
mov
insl
cmp
shll
les
adc
mov
inc
int
mov
cmp
ret
sub
pop
lcall
inc
push
cmp
movsl
rorb
sti
pop
sbbb
push
adc
jl
add
fcomip
pusha
mov
fisubs
mov
enter
mov
hlt
call
pushf
inc
fistpll
adc
sbb
jne,pt
mov
scas
mov
dec
es
pop
push
stc
mov
mov
fimull
sub
aam
scas
ds
js
xchg
ds
jle
je
dec
jnp
add
push
fs
inc
lds
hlt
pop
jno
and
push
jle
push
jae
jge
cld
jns
nop
xchg
dec
inc
orb
scas
movsb
or
lea
push
mov
fs
js
or
mov
ja
add
in
push
movb
sbbb
push
jmp
inc
xchg
sub
xorb
mov
pusha
add
cld
js
lcall
mov
adc
inc
add
pop
add
cmp
adc
lock
adc
add
imul
cltd
cmp
cs
js
adc
fcomps
mov
mov
dec
mov
loopne
in
aaa
mov
rorl
clc
aam
hlt
add
cmpsb
mov
vucomiss
add
cld
push
cmp
clc
stc
ficoms
mov
cld
bound
pop
push
cld
mov
rep
ds
dec
add
xor
shll
mov
insl
ds
add
popa
clc
inc
sub
ret
lea
stos
sbb
mov
mov
pop
inc
or
ficompl
pop
add
xchg
dec
test
pop
dec
cmp
pop
push
cltd
mov
xchg
pop
call
inc
dec
orl
and
push
shrb
xchg
mov
pusha
fs
in
mov
in
adc
and
pop
mov
decl
sbb
mov
inc
inc
or
push
lret
xchg
orl
sti
fadds
cltd
sub
dec
or
cmp
ss
pop
ljmp
push
mov
mov
in
arpl
sar
test
sbb
jno
push
fmull
cld
mov
lahf
sub
movsb
adc
and
mov
je
scas
mov
jo
inc
mov
adc
mov
cli
fisubrl
loop
inc
sub
or
std
push
add
out
xchg
mov
inc
daa
mov
ljmp
inc
lock
xor
mov
jo
loope
sub
xchg
fisttpl
or
into
mov
inc
and
and
daa
mov
fildll
fisubs
out
fimull
cmc
cmpsb
mov
lock
es
or
pop
sti
orb
add
loope
fs
mov
inc
adc
mov
jg
cmc
cmpl
jg
or
pop
hlt
out
cmc
cmp
xchg
mov
clc
stos
decl
jg
pushf
mov
mov
adc
loop
jle
dec
inc
int
stos
popf
push
mov
jl
in
imul
fistpll
movsb
mov
fs
sarl
bound
inc
mov
add
add
push
xchg
fs
mov
shll
mov
pop
push
cld
jg
add
fnstenv
xor
sub
lods
push
ret
aam
clc
mulb
test
xchg
into
or
popf
xor
movsl
dec
xchg
mov
adc
jp
cld
push
jp
or
adc
in
push
push
mov
cli
lcall
pusha
arpl
ss
stos
pop
jo
lods
inc
lret
dec
cld
push
fcmovbe
jmp
push
inc
xchg
dec
cmpsl
cwtl
inc
and
ret
xor
hlt
mov
jle
push
andl
test
es
add
outsl
push
and
jle
sub
sbb
scas
push
push
mov
test
pusha
decl
sub
mov
xchg
xor
fs
mov
jg
xor
stos
inc
sahf
adc
arpl
lahf
inc
and
dec
scas
jecxz
xchg
jns
divb
lock
sub
lahf
out
call
pushf
std
cmpsb
mov
outsl
xchg
movsb
scas
lahf
cmp
mov
loopne
mov
push
jb
jmp
nop
fnstsw
test
mov
test
xchg
push
dec
cmpsb
sbb
scas
mov
pushf
mov
ss
loop
fcoms
ljmp
xchg
or
cmp
add
sbbl
jecxz
sub
mov
clc
mov
push
loop
jle
jle
call
push
cli
push
lret
scas
or
mov
pop
cmp
inc
fisttps
push
mov
cmp
fiaddl
pusha
and
dec
and
out
xor
outsb
adc
push
sub
push
xor
inc
scas
clc
lock
inc
dec
add
push
push
dec
dec
jbe
adc
cmp
mov
or
xchg
jl
pop
push
inc
adc
cmp
in
fistpl
lock
icebp
mov
and
jp
or
mov
jl
iret
ret
sbb
int3
ret
push
adc
jg
mov
loop
push
and
mov
pop
mov
mov
push
je
ss
mov
pushf
sbb
clc
js
and
fiadds
and
push
add
enter
push
sbbb
xorl
out
pop
repnz
nop
jp
loop
and
cmp
push
or
mov
mov
adc
push
sarb
out
mov
jb
or
addb
add
mov
push
jmp
bound
xlat
ret
cmp
movsb
div
pusha
push
dec
es
fmul
std
scas
mov
inc
add
xchg
jl
ret
mov
fldl
jecxz
sbb
push
lret
cmp
insb
jl
scas
ja
pop
mov
add
mov
sub
or
sahf
pop
loopne
bound
test
mov
lock
imul
adc
inc
lahf
shrl
ja
loopne
outsb
out
out
pop
movsl
cmp
les
andb
aad
dec
push
xor
pop
stos
inc
std
xchg
int3
jmp
aas
repnz
add
mov
sub
pusha
push
iret
or
mov
pusha
cmp
cmc
mov
xor
fnstcw
mov
push
mov
repnz
adc
sub
jnp
sub
outsb
inc
ret
xchg
mov
inc
cmp
or
pop
out
lsl
cmpb
loope
fistl
int3
pop
nop
cmc
icebp
mov
ss
gs
and
add
ljmp
xor
iret
not
frstor
and
jbe
rcrl
hlt
loop
mov
test
add
lods
es
stos
push
test
imul
sub
and
mov
cmpsb
pop
lock
jg
jno
lea
inc
push
inc
cli
adcl
sub
std
inc
mov
jno
into
mov
jl
cmpsb
push
movsb
or
hlt
pusha
push
in
sub
ret
fidivl
in
je
add
add
adc
jmp
jecxz
lods
outsl
sbb
sub
add
sub
call
xchg
sahf
xchg
adc
push
lret
ljmp
cmp
sub
call
or
roll
jbe
xchg
sub
push
ljmp
sbb
fimull
js
add
stc
lods
dec
inc
icebp
cmc
js
movsl
add
adc
pop
stos
incb
push
adc
fwait
inc
out
adc
ljmp
ds
test
pop
sbb
add
inc
mov
es
lcall
cmpsb
iret
in
add
leave
cwtl
ds
jb
rorb
stos
xor
ljmp
push
cmp
popa
push
and
jl
adc
lds
popa
cmp
push
mov
int
and
test
clc
push
add
nop
mov
and
or
sbb
cmp
loop
xor
add
fstpt
mov
or
sub
pushf
sbbl
enter
fsubrs
cli
inc
and
xor
shlb
mov
xor
mov
decb
pop
jnp
and
adc
sbb
push
add
mov
or
in
stos
lods
adc
dec
loopne
mov
mov
push
lret
mov
add
loope
pop
cmc
shlb
fidivl
or
jle
sbb
or
shrb
adc
cmc
adc
inc
add
cmp
mov
adc
scas
mov
loopne
cs
ljmp
out
cmp
mov
xor
sahf
out
mov
xor
mov
sbb
add
mov
rolb
insl
xor
or
xor
adc
jl
sbb
fbstp
popf
mov
cwtl
add
es
mov
dec
aad
mov
dec
xor
and
mov
xlat
iret
xor
cmp
jg
lcall
nop
cmpb
pop
inc
dec
mov
sbb
incl
mov
test
dec
adc
jecxz
aam
in
adc
sbb
mov
outsl
fcoms
jbe
sub
imul
aaa
jecxz
xor
leave
jne
xchg
jb
push
sub
push
scas
cmp
or
mov
add
pop
in
sub
add
inc
loopne
insb
push
add
cmpsl
dec
push
and
je
push
pop
cmp
dec
je
decb
cld
ljmp
mov
rcll
cmp
inc
hlt
lret
orb
cmp
lds
lock
cs
stc
mov
mov
leave
in
fcompl
cmpsl
fwait
lock
jl
nop
add
sub
dec
movsl
jne
icebp
pop
sbb
scas
es
int
call
push
js
xor
pop
mov
js
loopne
fucom
xorb
inc
xor
sub
push
lock
bound
mov
fs
data16
icebp
ljmp
mov
filds
into
xchg
aaa
sahf
jmp
repz
or
pop
cli
xorl
ds
clc
leave
fs
notl
and
sbb
or
je
pop
push
inc
mov
xchg
adc
xchg
xchg
daa
mov
mov
test
pop
jb
pop
pop
add
sub
inc
js
xor
std
sub
pop
dec
cmp
lcall
or
sub
mov
mov
xchg
add
sbb
jne,pn
push
cmp
adc
pop
in
jo
xchg
stos
cmp
loope
lods
jp
cmp
test
cmpsb
mov
test
in
loope
mov
or
fstps
insl
fdivs
or
mov
sbb
jmp
jecxz
outsb
je
jg
rcrb
cmp
mov
imul
and
js
test
roll
sub
fimull
dec
mov
inc
aaa
mov
ljmp
mov
stos
inc
mov
and
mov
lds
popa
loope
mov
scas
inc
dec
sub
push
mov
aad
inc
jns
mov
std
or
jae
pop
jg
cmpsl
add
out
jle
cli
xor
push
jo
sar
sbb
mov
lret
inc
js
out
loopne
xchg
sub
xchg
bound
movsb
ficoms
popf
arpl
push
mov
fisubrl
sub
addr16
sbb
cmp
push
pop
popf
hlt
xchg
insl
mov
push
jno
dec
stos
xchg
xchg
dec
xchg
adc
sub
push
sti
sbb
push
into
in
jbe
lahf
lods
dec
clc
pop
imul
data16
test
mov
icebp
aam
jno
pop
jg
mov
out
iret
or
mov
jl
call
sub
lahf
cmp
cmc
cwtl
push
je
daa
daa
popf
sbb
inc
push
sbb
stos
popa
jp
sbb
lods
push
or
inc
sub
xor
fnstsw
or
mov
xchg
je
iret
sub
mov
add
mov
xchg
or
cs
pushf
and
test
add
ja
cmp
mov
sti
mov
sti
dec
xchg
cli
pop
insb
icebp
inc
test
test
outsl
sahf
cmp
in
mov
inc
or
jg
sbb
mov
add
and
add
sbb
jp
add
mulb
cld
ljmp
mov
mov
or
movb
push
in
icebp
ljmp
pop
push
lret
add
popl
pusha
pop
ds
mov
lock
test
out
stos
push
mov
enter
dec
lret
out
fstpl
call
xchg
shll
adc
das
out
xchg
popa
xor
jg
sbb
adc
xchg
into
fcoms
dec
push
bound
cld
jmp
xchg
jp
into
xchg
repz
adc
cmp
stos
or
add
or
dec
pop
mov
sub
sub
es
decl
mov
mov
jno
repnz
push
add
xlat
inc
pop
or
mov
stos
out
std
xor
test
cs
mov
nop
ficoml
pusha
subl
dec
or
lods
push
xchg
inc
xor
pushf
pop
sub
cmp
stc
mov
fmull
dec
mov
jge
jl
sub
and
fistpl
add
mov
cmp
xor
push
cmpsl
lcall
data16
sbb
outsb
imul
and
iret
and
push
dec
lods
les
ss
jo
rcrl
fdiv
mov
pop
fldl
dec
fcoms
adc
cwtl
mov
fbstp
mov
rorl
and
xor
xor
outsl
outsl
out
scas
push
test
nop
and
mov
lods
out
js
adc
mov
push
loope
mov
jbe
icebp
cmp
dec
xchg
mov
bound
add
ds
stc
mov
dec
pop
push
fdivr
aas
add
std
sub
ja
mov
data16
cmpsl
or
movsb
jle
mov
sub
icebp
mov
mov
lods
push
jp
les
enter
test
pop
aam
add
ret
dec
fbstp
xor
and
into
pop
jl
movsl
jle
sub
inc
cwtl
mov
movsb
cwtl
popa
push
aad
shrl
faddp
daa
xor
das
jbe
lret
data16
push
mov
into
cmpsl
das
xchg
pop
lods
push
xor
out
or
cmp
push
popa
xor
ret
add
fmuls
push
add
inc
lock
jbe
dec
push
and
dec
int
fimull
inc
jecxz
lock
adc
pusha
bound
movsl
cmp
add
scas
scas
jns
adc
jb
xor
jp
mov
testb
pop
add
mov
mov
test
das
pop
or
xchg
fadds
mov
out
cmp
jne
inc
lock
cmp
jl
cmp
cmpsb
sub
cmp
inc
xchg
mulb
and
or
and
push
sahf
setnp
sub
mov
inc
sub
sub
mov
and
jge
je
push
mov
lcall
mov
dec
sarl
dec
lret
dec
xor
cmp
call
cli
ss
je
cli
xchg
dec
inc
jg
mov
lahf
aam
lock
sbb
pusha
test
mov
call
jg
addr16
adc
or
or
jl
sbb
cwtl
sub
or
dec
dec
sub
mov
loopne
mov
stos
add
mov
mov
imul
out
push
es
push
je
fstpl
push
mov
mov
aad
inc
dec
test
cmp
mov
add
bound
jl
mov
lea
or
lret
out
loop
xchg
sarl
pop
bound
sbb
xor
dec
enter
jg
push
hlt
pop
jns
or
pop
fcomip
mov
leave
mov
inc
push
xchg
or
movsb
mov
mov
cld
incl
or
stc
fidivl
and
push
pop
inc
shrb
arpl
lea
mov
call
dec
popa
sarl
in
imul
xchg
push
push
sbb
shrb
adc
inc
cmp
mov
inc
xchg
mov
clc
add
xor
loopne
cmp
pop
inc
in
mov
jo
mov
mov
push
jnp
lret
adc
aam
test
push
scas
pop
or
push
push
rcrl
fadd
popa
hlt
and
sub
push
push
adc
pop
ljmp
mov
fsubl
jecxz
jno
push
and
push
push
dec
stos
dec
and
jl
inc
add
stos
pusha
add
andb
sbb
xor
dec
std
cwtl
sarb
mov
lock
js
xlat
inc
xor
scas
cmovg
fsubl
adc
add
jnp
outsb
pop
xor
dec
sbbl
sbb
pop
fsubr
push
or
lahf
cmp
mov
sbb
inc
sbb
cwtl
pop
add
pop
pop
xchg
sahf
pop
jge
iret
jmp
test
mov
in
rol
lret
jo
gs
sub
repz
loope
dec
es
sbb
or
stc
scas
inc
sbb
inc
xrelease
add
mov
xchg
mov
out
loope
stos
fcomps
mov
loopne
dec
je
addr16
or
sahf
add
push
pop
lods
and
pop
jo
mov
or
faddp
shl
push
in
mov
push
and
loope
lods
xchg
inc
pop
loopne
jbe
push
adc
push
call
mov
cmp
rcrl
leave
push
lahf
mov
xor
stos
pcmpgtb
or
and
xor
jle
or
push
ffreep
shlb
shr
pop
hlt
call
pop
sub
pusha
jle
mov
xchg
fisubrl
mov
lcall
push
or
repnz
outsl
sbb
jb
shl
cmp
ret
mov
imul
xchg
mov
sbb
xchg
stos
pop
mov
cmp
pushf
add
imulb
cmpxchg
push
rorb
aaa
dec
inc
xor
sti
mov
pop
pop
push
cli
mov
insb
dec
add
jl
sti
mov
cltd
sub
adc
ss
cli
jbe
sub
jl
lds
mov
loopne
sti
rorb
ja
movsb
sub
add
dec
out
pause
or
test
in
sub
mov
faddl
dec
mov
mov
into
sti
ja
xor
mov
stos
cmp
ret
jb
or
hlt
lds
or
jg
outsb
call
jmp
jecxz
push
faddl
jge
add
and
jns
add
ret
std
insl
fs
xchg
adc
inc
lahf
shll
and
cld
add
dec
adc
sub
out
shrl
mov
mov
push
in
insl
cld
fcomip
and
xchg
ficoml
scas
shlb
stc
mov
add
lock
orb
pop
add
sahf
hlt
int
mov
mov
jne
sti
mov
pop
daa
dec
adc
adc
mov
rcr
dec
or
test
cmp
iret
test
out
pop
mov
mov
icebp
sarl
and
pop
mov
pop
and
add
ds
mov
test
or
pop
xchg
jle
sbb
push
push
cwtl
or
dec
stc
cmpsl
or
sbb
or
and
adc
dec
mov
inc
jb
pop
popa
bound
sbbb
cmp
hlt
call
or
or
fldenv
in
push
mov
cli
addb
jl
inc
data16
push
xor
fwait
mov
fistpl
and
ret
repnz
sbb
mov
jle
adc
pop
inc
pop
sbbb
jb
ficompl
pushf
aaa
cmp
xor
mov
jge
in
sub
stos
dec
fwait
push
lcall
fiaddl
test
mov
sti
mov
push
push
xor
xor
out
leave
xchg
mov
ja
cld
xor
mov
and
jge
daa
js
mov
pusha
adc
add
arpl
pop
pushf
push
mov
jo
inc
stos
inc
loopne
ss
scas
sarb
push
test
xchg
shr
mov
outsl
lds
popf
fstpt
mov
mov
or
jns
stos
scas
ds
cmpsb
push
movsl
ljmp
ljmp
in
xchg
das
fwait
dec
mov
push
pushf
pusha
push
daa
jbe
daa
insb
lahf
mov
xor
sbb
jg
pop
js
jg
mov
nop
add
add
mov
cli
loopne
xchg
int
or
jmp
sub
mul
inc
repnz
jb
fistl
popf
cmp
fldcw
add
sub
inc
ds
cmp
xor
push
sbb
pop
loop
addb
jp
test
jmp
aaa
dec
sarb
or
xchg
rorb
daa
inc
pop
add
inc
movsb
out
pushf
ficompl
adc
sahf
in
add
cmp
imul
sub
lea
mov
push
or
jg
sbb
in
push
popa
scas
xchg
int3
aaa
jg
dec
lret
mov
mov
cltd
adc
inc
and
std
jmp
mov
jb
fcompl
lret
daa
out
in
pop
jle
mov
add
out
adc
clc
push
dec
pushf
std
push
cmc
fwait
imul
rorb
mov
jl
arpl
push
and
popa
add
ljmp
inc
aam
pop
test
test
push
gs
xor
jg
xchg
mov
push
sub
dec
adc
stc
dec
mov
insl
add
loop
popf
repnz
fadds
sub
adc
sbb
stos
dec
ljmp
mov
sub
lock
cwtl
bound
push
hlt
and
cmp
aaa
pop
add
dec
inc
pop
mov
enter
mov
in
es
xor
xchg
loop
lods
mov
sti
fwait
adc
aad
add
fisttpl
or
cmpsl
pop
enter
mov
or
xchg
loopne
cmp
push
or
dec
dec
xchg
sub
data16
faddp
mov
jmp
pop
insb
dec
xor
shl
cmp
pushf
jmp
jbe
rolb
mov
mov
sbb
xchg
scas
push
in
inc
mov
rcl
xchg
lea
mov
cmp
lock
shr
adc
mov
cwtl
inc
adc
jo
les
mov
adc
clc
jne
out
add
push
mov
mov
mov
pusha
jle
push
sub
mov
add
daa
aaa
lret
dec
mov
mov
add
mov
popa
jo
push
mov
clc
xor
lret
add
test
je
inc
rcr
pop
xchg
sub
xchg
sub
dec
jne
test
aam
das
clc
sub
pop
test
cmp
cmp
and
mov
hlt
cmp
or
add
andb
push
pop
enter
jmp
shlb
sub
adc
pop
push
push
pop
std
movsb
adc
xchg
xor
pushf
pop
mov
andl
add
mov
inc
test
icebp
scas
cmp
push
rcrl
pusha
and
mov
xor
xlat
pop
cmc
or
int3
pusha
jge
push
and
in
mov
sub
mov
push
push
test
cmp
push
mov
out
mov
mov
adc
pop
or
jle
ljmp
sahf
or
repz
xor
aad
cmp
push
decl
incb
pop
sub
mov
test
xor
in
sbb
or
xor
sbb
out
ljmp
cmp
mov
les
mov
jp
xchg
inc
mov
jge
cmp
adc
dec
add
iret
mov
mov
or
push
pop
jbe
insl
jge
test
shlb
fldenv
jg
incl
inc
sub
push
shlb
adc
xorb
jp
adc
ljmp
loope
pop
lahf
cld
push
pop
pop
aaa
cld
je
xor
insb
rclb
mov
lock
das
enter
sbb
mov
jg
popa
push
fmull
cmc
pop
mov
push
ss
add
mov
cwtl
add
jmp
or
mov
inc
jno
or
lods
adc
pop
in
call
pop
lcall
xor
rdtsc
adc
insb
push
mov
icebp
ja
shrb
xchg
sbb
inc
sub
incb
cld
dec
stos
xchg
and
sti
inc
pop
rclb
ljmp
mov
add
fidivl
std
jg
sbb
inc
sbb
call
jle
mov
push
and
adc
sub
outsl
sub
dec
or
push
adc
incl
js
loopne
loope
adc
aas
pop
sub
daa
fisubrs
nop
mov
out
push
subb
adc
sub
or
cmpsb
scas
pop
fwait
ljmp
sbb
cmp
push
cmpb
xor
lret
andb
xchg
jbe
rclb
test
ret
add
adc
rolb
mov
push
cmp
push
dec
fistps
adc
inc
fbld
rolb
push
and
mov
mov
jmp
cmc
test
sbb
ljmp
pop
and
xchg
adc
lret
shlb
lds
sahf
and
imul
add
mov
imul
mov
testl
push
adc
pop
imulb
push
imulb
sti
mov
stos
stc
or
and
add
cmpsl
add
je
int3
das
clc
lahf
test
mov
inc
orb
shl
xor
xor
subb
add
out
ja
push
and
pop
xchg
push
mov
xchg
cmpsl
and
insb
dec
cmp
xchg
imul
dec
xchg
bound
or
mov
fwait
js
lods
mov
adc
shrb
lock
push
push
mov
sbb
mov
cmp
outsb
dec
adc
insb
xor
xor
xchg
fwait
shl
pop
mov
jno
stos
cld
and
dec
dec
xchg
das
add
jmp
enter
and
mov
repz
push
les
lods
test
dec
pop
out
adc
jo
xchg
decb
and
sbb
shlb
jne
jb
mov
mov
insl
ret
cmp
mov
mov
movsb
push
leave
icebp
jno
or
xor
push
pusha
dec
std
int
jnp
inc
sbb
or
nop
or
leave
xchg
dec
mov
lock
jmp
sub
inc
lock
icebp
pushl
stc
sub
cmp
mov
mov
mov
cld
loope
outsb
ljmp
in
sbb
push
and
adc
add
mov
pop
nop
rorb
nop
dec
dec
arpl
pop
arpl
fildl
cmp
decl
stc
lcall
pop
subb
pop
mov
cmp
aas
jle
mov
inc
shl
push
shl
inc
clc
mov
mov
push
fildll
mov
sbb
jno
push
add
add
popa
pop
jbe
fidivl
pop
mov
out
scas
popa
push
or
fisubrl
jl
jb
pop
adc
push
sbb
out
loopne
mull
push
inc
sub
shll
test
push
mov
xlat
pop
xor
push
faddl
dec
cmp
adc
in
loopne
jmp
test
pushf
leave
incb
stos
and
sub
rorb
pushf
int3
lret
mov
scas
jo
jge
test
inc
mov
popa
enter
add
addb
orl
push
mov
mov
cpuid
or
incb
jbe
adc
inc
xchg
and
xchg
mov
inc
sbb
pop
jno
ret
fwait
incb
icebp
and
fstpl
loope
aad
mov
sbb
pop
rolb
add
push
adc
dec
push
sbb
sbb
je
loopne
or
pop
je
dec
push
repz
push
or
lcall
scas
inc
sbb
in
inc
in
stos
and
popa
cwtl
data16
push
pop
std
mov
rorb
cwtl
pop
mov
jne
js
jbe
mov
mov
sar
and
dec
mov
mov
js
das
sbbb
cmpsl
aam
into
lea
add
int
pop
cmp
add
incl
mov
and
fbstp
push
test
stc
addb
mov
mov
roll
jg
sbb
lahf
movsl
mov
sub
cmp
scas
xor
dec
push
lods
push
or
mov
or
push
mov
stc
cmp
cmp
mov
mov
adc
mov
xchg
pop
add
rolb
cld
or
dec
jb
push
cmpsb
sbbb
inc
or
in
sarb
adcb
adc
aas
loopne
pop
sub
xchg
hlt
sbb
cmp
stc
push
add
ficoml
jecxz
add
adc
lock
out
cli
pushl
sbb
leave
addb
inc
adcl
sub
cs
xchg
dec
mov
sub
jo
cmp
ss
pop
mov
sbb
xor
loopne
adc
xor
pop
icebp
mov
mov
cmp
sahf
pop
jle
loope
push
mov
into
ss
in
jnp
jle
add
mov
sti
in
out
lcall
mov
xor
inc
pop
fistpl
enter
rolb
push
jp
or
ds
xor
mov
push
inc
fdivl
sbb
movsl
mov
lcall
clc
in
nop
icebp
outsl
xchg
xorb
adc
stc
add
and
jo
jmp
jp
jg
xchg
add
lcall
in
mov
dec
mov
lods
jbe
enter
rorl
sar
jp
push
scas
sbb
rcl
filds
xchg
push
push
jbe
movsl
pop
jp
fisttps
addl
add
cmp
push
scas
mov
adc
in
fistl
clc
add
lock
test
or
xor
pushf
daa
aas
mov
inc
sub
and
dec
pop
movsb
out
pop
bound
or
orb
outsb
inc
dec
jnp
cli
and
pop
fistps
fdivp
sbb
or
xor
add
cs
je
mov
sub
and
lock
adc
sub
xchg
jle
or
or
mov
push
lods
push
mov
mov
and
mov
dec
xor
movsl
push
xchg
daa
push
out
inc
mov
js
scas
sbb
and
mov
cld
mov
movsb
sbb
mov
sbb
pop
or
in
lret
test
add
stos
cli
xchg
stos
fs
insb
mov
fmull
in
pusha
xchg
mov
incl
or
xor
in
popa
jg
mov
xchg
add
xor
mov
sbb
pop
pop
mov
mov
aaa
out
mov
sub
fsubl
das
mov
ja
and
mov
jle
sub
mov
sbb
addb
jp
and
lea
aad
fwait
lds
or
inc
test
sbb
stos
mov
pop
hlt
nop
jb
jmp
call
sbb
mov
sbb
adc
mov
call
lock
cmp
mov
pop
and
sti
inc
popf
jno
mov
and
cmp
ret
dec
pop
mov
jg
mov
arpl
addl
inc
cmc
adcb
inc
cs
jo
mov
pop
dec
adc
jp
clc
pop
mov
loop
xchg
jno
mov
lds
lahf
xlat
dec
inc
mov
push
push
cmp
sub
sbb
add
pop
mov
pop
add
test
fcoml
adc
sub
xor
inc
mov
nop
add
or
icebp
jg
andb
sbb
cld
aaa
xchg
je
inc
lods
sar
or
jmp
orb
and
xchg
add
inc
add
adc
ljmp
jg
ret
sbb
outsb
int3
jmp
sarb
sti
int
loopne
aad
hlt
xchg
sbb
sub
push
repnz
jbe
int
and
ret
aas
inc
scas
or
pop
xchg
jle
fisttps
out
es
inc
and
test
es
js
icebp
jge
inc
enter
xor
add
mov
xchg
or
mov
push
jle
or
and
push
pop
out
scas
outsb
add
aas
push
jl
in
fisttps
mov
ss
and
scas
pushl
sub
divb
jo
add
pop
add
inc
mov
add
mov
pusha
jecxz
pop
negl
in
ja
clc
push
dec
push
jb
arpl
aaa
js
pop
push
jle
adc
test
add
jmp
stc
adc
inc
xor
out
repz
jp
std
push
lock
mov
xor
add
roll
mov
repz
cmpsl
jl
les
add
mov
dec
insl
inc
pop
xor
jae
loopne
xor
push
mov
loopne
loop
insl
lret
and
cmp
shrl
sub
out
test
cld
jge
dec
pop
or
ds
cmp
stc
movsb
arpl
rclb
ds
jg
push
cmp
pop
push
mov
cmc
fucom
pushl
pop
test
stos
out
mov
xor
inc
adc
mov
cld
mov
mov
and
and
std
mov
clc
mov
sahf
sub
mov
rol
push
jp
divb
jbe
xor
dec
pop
ficoms
pop
test
pop
push
jae
andl
inc
out
outsb
scas
daa
cmpsb
sbb
rolb
push
inc
push
jle
mov
idivl
inc
mov
loope
pop
mov
jl
xchg
jns
adc
dec
in
adc
inc
cld
testb
xorb
lods
sub
lcall
jns
xchg
xor
jb
fistpl
dec
dec
xor
js
les
push
pop
shrb
ds
mov
mov
adc
shlb
je
xchg
add
push
push
mov
out
add
mov
jo
jne
jbe
repz
add
stos
cmp
or
das
sub
cmp
lea
jns
test
pusha
test
movsl
inc
or
test
mov
pusha
ret
add
out
leave
insb
aas
xor
movsb
sti
adcb
ret
xor
mov
xchg
in
xchg
inc
sar
shlb
add
or
clc
pavgw
mov
lds
cli
and
sub
xchg
sbb
adc
xor
push
push
inc
pop
shrb
fistpl
fsubs
push
push
sub
sti
out
jl,pt
fprem
mov
add
lods
add
mov
stos
pop
lret
addl
add
mov
push
cmp
push
mov
int
cld
cmp
sbb
rcrb
incl
jl
push
mov
inc
pop
enter
call
pusha
lcall
and
repnz
mov
add
pop
xor
jecxz
pop
clc
call
ja
js
enter
leave
mov
rclb
add
cmp
xlat
mov
mov
aaa
in
push
pop
add
sub
xchg
fnstsw
and
es
jge
out
sbb
xor
jl
or
gs
lods
xchg
mov
call
popf
pop
adc
stos
push
mov
dec
lret
int3
test
outsb
jmp
aad
add
jg
push
mov
lret
sbb
sahf
jp
and
xchg
sarb
mov
imul
pushf
ret
jb
enter
xchg
out
andb
pop
pushf
push
or
xor
pop
jne
jmp
push
pop
push
or
add
adc
lds
add
or
pusha
jecxz
repnz
add
mov
loopne
xor
inc
hlt
jno
and
mov
cwtl
test
jne
mov
fidivrl
mov
scas
stos
js
xchg
pop
jbe
add
push
outsb
xchg
push
js
mov
shlb
outsl
out
adc
adc
cmpb
daa
xchg
xorb
adc
cmp
mov
outsl
sarl
incb
cld
xor
mov
loop
pop
insb
insl
aam
into
movsb
xor
cli
cmp
addr16
stos
cmc
fisubrs
popf
push
hlt
inc
data16
inc
mov
fmulp
stc
xor
xorb
push
lret
sbb
mov
mov
inc
xchg
and
lret
aam
mov
lods
mov
lods
loopne
mov
in
push
movsl
popf
jp
adc
mov
adc
push
jbe
and
adc
call
mov
lret
mov
cs
add
push
cmp
mov
icebp
add
popa
comiss
outsl
testb
inc
inc
and
sbb
or
out
push
pop
xchg
imul
test
xchg
inc
cwtl
sbb
xchg
cld
pop
and
scas
mov
inc
ret
sbbb
push
push
and
push
out
mov
sti
push
cltd
cli
loopne
jnp
inc
adc
cwtl
movsl
adc
fmuls
dec
incl
push
inc
cmp
cwtl
dec
push
shrl
or
push
mov
cmp
pop
cwtl
stc
or
dec
sti
push
mov
mov
xchg
cs
xchg
adc
push
adc
nop
add
push
shlb
es
or
lock
mov
jle
sahf
sub
mov
mov
push
jno
enter
loop
pusha
cmp
jb
cmp
movhps
mov
inc
mov
imul
cltd
popa
cmpsb
mov
out
adc
sub
cmp
mov
arpl
and
clc
loopne
add
pop
mov
xchg
and
dec
aaa
adc
ja
lahf
lcall
jo
outsl
les
xor
cmpsb
bound
into
inc
leave
pop
dec
push
add
incb
ss
mov
sub
iret
push
lock
into
enter
nop
pavgb
cmp
cmc
aad
ds
adc
testb
cld
stos
into
in
cmp
xchg
in
xchg
mov
push
pusha
mov
dec
sub
xor
xor
push
adc
test
int3
add
xor
add
inc
jmp
mov
add
sarl
shl
movsb
mov
xor
pop
mov
push
scas
movsb
adc
pop
jmp
xor
push
cmp
push
dec
xor
cltd
gs
sbb
push
test
mov
xor
mov
pop
hlt
mov
xchg
cwtl
add
int3
scas
sbb
inc
mov
xor
push
inc
mov
jnp
decl
test
and
in
sbb
xor
aaa
or
lds
sbb
jg
call
push
and
adc
ss
xor
adc
adc
inc
clc
pop
or
and
push
sbb
jl
jl
mov
and
inc
push
add
xchg
xor
xchg
cli
jg
jbe
push
sub
dec
arpl
insb
fdivs
jecxz
inc
xchg
sahf
lock
xor
dec
xchg
pop
cld
cmc
int
ret
in
cpuid
push
push
mov
sub
or
div
pusha
inc
or
pop
jo
sbb
ja
loope
push
xor
mov
mov
mov
faddl
jne
ret
clc
adc
cmc
or
cmp
inc
xlat
ja
es
loopne
daa
mov
push
xchg
icebp
push
scas
jle
add
adc
and
and
pop
pop
lods
dec
stos
loop
fs
sahf
jg
int3
sarl
nop
add
enter
or
loope
add
shlb
loop
cmp
mov
stos
push
mov
inc
repz
pop
push
sbb
dec
sarb
inc
clc
and
sub
cli
sub
aad
cmp
out
insb
in
test
lock
and
push
popf
icebp
rcr
movsw
in
xor
into
ja
jmp
lret
mov
cmp
bound
lock
mov
mov
sub
mov
jo
insb
in
mov
hlt
pop
mov
data16
aas
pusha
adc
daa
inc
cmp
mov
in
ffree
push
xor
loopne
loop
fs
cld
xor
les
aam
incb
pop
mov
ror
cld
mov
fnstenv
leave
inc
pop
mov
outsb
mov
test
shl
ret
xchg
inc
sub
cwtl
lahf
add
sbb
inc
or
aas
call
fsubp
stos
inc
push
mov
add
in
add
ret
xlat
sbb
mov
inc
inc
jp
adc
jp
pop
jb
adc
js
cmp
xchg
jnp
decl
xchg
pop
push
jl
inc
sub
dec
dec
pop
stc
bound
mov
test
cmc
add
push
cltd
push
enter
pop
rolb
ret
ds
bound
xchg
push
sti
sbb
sub
jne
fs
rolb
out
push
mov
test
scas
insl
jb
mov
insb
or
aam
out
orl
pop
fildll
call
sbb
pop
data16
sbb
or
jmp
and
add
fwait
dec
sbb
lcall
enter
push
hlt
adc
mov
cmp
push
or
loopne
je
pop
xchg
jno
icebp
mov
scas
push
js
jbe
imul
shrb
mov
xchg
aaa
lcall
and
lea
repz
inc
outsl
sub
js
mov
push
inc
xor
push
cs
mov
ja
sti
int
xchg
sub
mov
fcompl
lret
pusha
and
movsl
xchg
dec
setp
lds
add
hlt
stc
xor
adc
mov
into
sbb
ljmp
test
cmp
adc
les
adc
pop
movsb
leave
mov
pusha
xor
inc
scas
xor
stos
shl
das
and
pop
mov
inc
xor
xchg
scas
sub
xor
add
lock
out
xchg
sbb
cli
dec
outsl
mov
adcl
or
pusha
jns
testb
mov
in
or
dec
addr16
adc
sbb
mov
fs
lahf
mov
push
xor
xor
outsb
aaa
xchg
mov
cmp
xchg
loopne
jl
mov
pop
int
mov
inc
jmp
add
pop
ds
lahf
and
rcrl
popf
xor
push
sub
je
icebp
scas
inc
xchg
lret
in
mov
icebp
add
popa
add
pusha
jo
mov
inc
push
shl
repnz
test
lcall
pushl
inc
icebp
cmpsb
xchg
test
test
test
sub
mov
push
fstpt
les
jecxz
mov
or
add
cltd
cmpsl
mov
fwait
out
pop
int3
and
inc
je
js
sbb
push
sbb
and
pop
adc
push
jle
icebp
fbld
and
enter
or
mov
out
inc
aad
or
push
fiaddl
push
pop
bound
inc
adc
jl
adc
sub
or
inc
es
inc
das
cmp
loope
jmp
jg
cmpb
popa
mov
ss
xor
call
mov
cli
loop
cmp
mov
xchg
xchg
cmp
push
mov
lock
push
out
sub
loopne
add
outsb
outsl
pop
sub
fstpl
inc
adc
les
lea
adc
pop
dec
in
dec
cs
pusha
test
jmp
add
subl
adc
lock
jecxz
rclb
sbb
pop
pop
aam
cmp
xchg
push
add
fstpt
cmpsb
mov
or
sub
repnz
test
icebp
div
out
jo
je
sbb
xchg
mov
hlt
insb
daa
test
inc
stc
xchg
movsb
xchg
xor
jo
lock
push
imul
xchg
or
test
mov
bound
fadds
and
adc
clc
mov
xlat
cmpsb
push
fwait
adc
xlat
lds
sub
cltd
shl
adc
adc
mov
add
cld
data16
adc
movsb
jae
pusha
inc
mov
inc
les
and
dec
add
pop
sub
nop
mov
inc
shl
std
cltd
adcb
mov
sbb
incl
and
in
mov
test
ret
addl
out
xchg
lret
shll
cmp
sbb
inc
in
adc
jo
loopne
xlat
pop
cli
ss
mov
ret
jo
add
pop
jnp
int
sub
dec
cmp
dec
mov
mov
push
cmp
outsb
scas
xor
rclb
mov
stos
dec
mov
sub
ss
call
jecxz
ffree
lcall
incl
int
or
decl
lcall
push
imul
lock
out
loope
pop
cwtl
movsl
jmp
or
jne
jne
mov
add
lcall
sbb
movsb
leave
sbb
enter
mov
ss
fcmovb
xchg
inc
adc
sar
out
mov
jb
arpl
pusha
popa
cmpsb
fwait
gs
pop
aas
mov
mov
cmpsb
mov
movsb
xor
jge
add
or
jg
incl
addl
ror
test
mov
pop
orl
mov
ljmp
decl
cmp
xchg
cli
dec
adc
add
imul
xchg
clc
imul
rol
sbb
icebp
mov
add
fdiv
push
or
rol
sub
decl
enter
and
pop
stos
popf
adc
mov
mov
mov
nop
lcall
add
and
stos
pop
inc
stos
or
xchg
or
fisubrl
nop
xchg
mov
lcall
xlat
movsl
test
shrb
fstps
sbb
xchg
add
or
loope
aas
mov
pop
pusha
sarl
xchg
jbe
or
bound
mov
cmc
mov
lds
jmp
imul
adc
les
stos
pop
fstpl
mov
cwtl
xor
pop
push
movsl
sub
xchg
cmp
and
jg
inc
mov
lea
xchg
sti
fs
sub
or
rcrl
inc
daa
xlat
adcb
xorb
push
xor
aaa
adc
xor
dec
xor
xlat
or
ss
lock
adc
dec
pop
mov
decl
or
outsl
xchg
or
aad
or
or
enter
add
or
cmp
roll
stos
lods
movsb
fimull
jae
mov
das
mov
mov
cmp
aas
adc
add
jmp
fwait
dec
cs
adc
daa
movsl
add
sbb
cmpsb
fwait
add
aam
adc
mov
mov
cli
out
fs
loope
mov
fsubrs
sar
fs
push
mov
xor
ds
add
outsl
loope
es
pop
inc
out
pop
add
mov
andl
adc
pop
int
cmp
sub
push
loopne
push
mov
add
or
gs
loopne
loopne
call
inc
mov
inc
inc
xchg
inc
mov
arpl
cmp
das
push
sbbb
ret
push
aad
lret
or
fwait
mov
jmp
or
ss
pop
hlt
jg
ds
clc
jae
iret
pop
jl
hlt
mov
push
pop
adc
jl
mov
stc
dec
push
inc
mov
cld
and
push
mov
inc
or
pushf
call
or
or
pop
inc
dec
inc
mov
mov
adc
hlt
cmpsb
lret
test
add
or
out
cmc
pop
and
lods
cmp
sub
fnsave
and
ja
jp
inc
or
sub
aad
in
or
sub
decl
lcall
and
cs
orb
mov
sbb
push
inc
xchg
or
adc
ja
push
imul
adc
and
jo
pushl
push
add
lret
int3
pop
dec
or
sub
scas
popa
ja
movsl
adc
xchg
sbb
pop
ret
not
dec
sub
pop
xchg
sub
shrb
das
loope
push
push
out
dec
clc
mov
xor
jg
andb
sbb
scas
inc
sahf
dec
stos
sub
pop
adc
xchg
scas
pop
xchg
dec
sub
cld
lcall
sbb
jns
push
and
outsb
ret
psllw
pop
jecxz
out
mov
fidivl
mov
inc
mov
bound
outsl
or
jb
test
aad
add
sbb
or
sub
in
dec
xor
mov
or
repnz
push
daa
mov
inc
and
fldl
mov
decb
cmp
mov
flds
testl
and
dec
pop
add
clc
mov
jg
aad
das
sbb
out
ss
add
lcall
mov
roll
fadds
pop
xorb
in
jg
mov
in
in
and
movl
aas
pop
mov
dec
cs
hlt
icebp
mov
xchg
test
scas
movsl
push
xor
sub
insb
fisubl
jp
clc
ror
ljmp
outsl
das
xor
add
jno
seto
jne
ret
leave
xor
lcall
subb
cmp
mov
xlat
repz
aas
shlb
sub
ret
loope
and
mov
fdivrs
aam
jmp
cmp
xor
pop
xchg
ret
daa
mov
in
add
push
sub
xlat
cs
fnsave
or
mov
cwtl
jns
or
inc
hlt
nop
mov
mov
dec
push
add
pop
cmpsb
rcrl
iret
sbb
mov
lods
pop
xor
cmp
insb
jl
mov
push
sarb
or
add
cwtl
mov
mov
add
or
and
lret
mov
test
adc
ja
cmpsl
mov
jmp
push
mov
out
out
sahf
mov
stos
add
pusha
cld
dec
pop
lea
mov
jb
add
mov
jb
jne
repz
mov
std
lcall
jmp
lods
lahf
push
mov
xor
pop
mov
dec
cmc
jp
mov
jnp
dec
in
mov
sbb
dec
mov
loope
outsl
clc
inc
mov
adc
lock
repz
fwait
cmpsb
aad
or
arpl
subb
inc
pop
mov
lcall
mov
push
dec
ret
aam
jp
add
mov
add
data16
mov
xor
jg
sbb
pop
pop
js
adc
cltd
push
jg
sbb
test
push
dec
lods
adc
jmp
xor
repz
push
mov
cs
sahf
or
shlb
decb
lock
mov
fs
test
shrl
dec
cmpsl
sub
jecxz
mov
fidivrl
xchg
pop
push
call
mov
jnp
sub
or
mov
jle
cmp
sarl
imul
hlt
js
cmp
rclb
mov
cltd
mov
mul
mov
or
sbbb
aaa
and
mov
pop
rolb
mov
aaa
adc
sbb
mov
test
rclb
pop
sbb
add
pop
in
test
pop
fdivrs
pop
mov
sub
jg
lock
and
push
jp
hlt
push
jl
jecxz
shll
stos
incl
fsubl
mov
cli
xor
and
fisttpl
aas
js
sti
cld
mov
cmp
pop
and
mov
stos
ficoml
adc
push
add
jmp
sbb
pusha
sub
andb
sarb
cmp
adc
test
scas
ljmp
add
mov
ja
add
lock
enter
ror
out
mov
int
jnp
mov
fidivs
push
cmc
cmpsb
xchg
mov
incl
add
xchg
aad
xor
inc
pop
mov
scas
in
jge
sbb
mov
mov
scas
add
pop
push
test
ljmp
arpl
jp
inc
stos
shlb
sbb
loop
mov
adc
fs
pop
loop
mov
xchg
jecxz
jp
scas
pop
cmp
push
nop
cmp
jl
addr16
ss
inc
and
or
adc
notb
or
xor
loop
pusha
sahf
rolb
loope
aam
xor
jmp
lods
mov
out
mov
shll
add
cli
lock
addr16
adc
unpcklps
sub
mov
or
iret
xchg
test
icebp
cmc
add
cli
fwait
clc
add
and
xor
adc
cmp
int3
xchg
incb
jle
and
add
pop
add
sub
push
pop
adc
or
or
call
mov
push
mov
adc
sti
push
or
stos
dec
sbb
clc
stos
lods
cmp
pop
adc
mov
es
incl
test
mov
and
push
ds
jge
pop
out
insl
orb
mov
shl
ss
cmp
outsl
pusha
das
aam
std
sub
jge
sarb
pop
or
xchg
xchg
inc
adc
add
les
imul
sub
cmp
out
push
sahf
jle
mov
popa
ret
push
sub
pop
lock
clc
call
mov
test
and
invd
mov
xchg
cmpb
and
mov
or
xor
adc
or
adc
fists
rcrl
pop
ficomps
mov
push
scas
push
xchg
pop
inc
cmp
xor
inc
mov
js
sub
push
and
js
leave
add
jmp
fldt
or
push
imull
push
jg
cwtl
and
xchg
lcall
cs
cmp
ret
dec
adc
jp
mov
push
mov
rorb
imul
mov
repz
lds
cld
jmp
xor
cld
xorb
sub
add
jg
scas
add
adc
cwtl
lock
mov
ljmp
or
and
test
inc
mov
ja
inc
adc
out
dec
pusha
push
lcall
xchg
mov
mov
xlat
jne
mov
ljmp
dec
fbld
imull
iret
es
push
lock
fbld
mov
stc
cltd
push
xorb
aad
ss
cmp
out
pop
mov
sbb
add
and
popf
mov
test
cmp
adc
jnp
loopne
repnz
xor
add
imul
inc
xchg
and
es
dec
outsb
lods
das
pushl
aad
sarb
inc
jl
pop
dec
mov
dec
add
inc
and
cli
lcall
push
add
arpl
sbb
ds
jle
mov
cmp
movsl
scas
adc
push
pop
int
and
adc
nop
push
pop
push
and
cwtl
leave
aas
sbb
inc
sti
inc
call
xlat
pop
das
push
test
dec
dec
and
push
pop
dec
es
icebp
mov
ret
cld
aas
jle
jg
lret
pushf
insl
and
or
and
sbb
test
push
pop
add
and
mov
call
decl
jmp
or
and
lds
orb
dec
call
inc
cmpsl
daa
pop
xchg
cmpb
mov
cmp
cmc
call
xor
rol
pushf
loop
cli
push
mov
fisubs
std
mov
add
dec
lock
cmpsl
js
sub
lcall
icebp
mov
outsb
and
dec
adc
insb
es
sbb
pop
mov
cli
incl
orb
push
sbb
push
test
push
ljmp
add
add
leave
out
es
jg
or
ret
outsl
clc
decl
pop
je
push
pop
jno
pop
enter
es
xchg
stos
daa
scas
fimuls
stos
fidivrs
call
sarb
pop
and
mov
ljmp
xchg
and
dec
call
mov
mov
rcll
jg
loope
mov
xor
sbb
jge
pop
out
cmp
push
andb
jmp
dec
cmc
or
push
fs
adcb
rolb
push
mov
es
jnp
and
mov
xor
dec
dec
lahf
add
jbe
push
leave
in
cltd
sub
scas
mov
jge
cmp
push
aaa
pop
mov
test
sarb
mov
pusha
gs
js
add
fadds
scas
xchg
inc
movsb
pushf
nop
ret
in
xor
fs
and
push
das
mov
pushf
add
outsb
mov
incl
adc
js
sbb
push
sub
stos
jle
dec
outsl
push
sub
lods
adc
adc
jmp
sbb
push
cmp
xchg
adc
fildll
aad
and
insb
mov
ss
dec
movsb
lret
loopne
popa
out
scas
subb
andb
dec
adcb
rolb
push
jg
xor
adc
into
cmp
lcall
inc
ret
add
xlat
jae
popa
jo,pt
fadd
and
jns
pop
mov
scas
mov
sub
jle
cmc
bound
ret
sbb
mov
fbld
cmp
inc
scas
pop
subl
and
push
fcoms
into
ss
repz
add
or
scas
or
aad
outsb
mov
or
nop
push
outsb
fcmovbe
add
sbb
ljmp
and
std
and
outsl
lcall
adc
aam
pop
addb
fnstsw
sub
incb
test
mov
or
cli
decl
inc
fnstcw
mov
pop
ret
xor
mov
out
outsb
int3
or
jbe
xor
add
pop
inc
adc
pushf
aaa
push
clc
das
addb
fs
sub
add
mov
xor
mov
movsb
loop
inc
mov
call
scas
out
and
cmp
and
jg
cltd
in
jp
stos
mov
and
mov
or
mov
test
hlt
das
mov
mov
xchg
insl
add
js
cmp
push
popf
ljmp
test
dec
inc
jg
cltd
movsb
rclb
inc
fs
je
test
test
jle
or
xchg
and
out
push
pop
jg
xor
add
pop
pop
lock
pop
lock
lods
or
popa
dec
push
sbb
jecxz
sar
ret
call
and
add
addl
add
icebp
adc
out
adc
fists
sti
jg
push
xchg
inc
mov
out
mov
pop
lcall
xchg
rorl
shufps
cld
gs
mov
sti
dec
push
and
in
jns
or
adc
add
out
cld
data16
add
cmpsb
loope
jmp
cmp
pushf
cmp
inc
xchg
aam
mov
lock
cmp
xchg
daa
push
add
sub
inc
das
inc
fisttps
out
fidivrl
or
pop
repnz
movl
subb
faddl
mov
pop
je
lock
xor
addr16
scas
pusha
ret
incb
xchg
xlat
mov
sbb
jno
jg
decl
jecxz
fnsave
cmp
adc
inc
lock
sub
ljmp
jbe
sbb
testb
sbb
adcl
jecxz
repnz
mov
lcall
inc
xlat
inc
loopne
xor
xor
sbb
mov
pushl
std
push
sub
inc
dec
neg
test
inc
icebp
test
dec
decl
bnd
gs
xchg
xchg
test
or
lock
movsl
lock
in
xchg
jg
lods
loopne
push
mov
pop
shl
xchg
pushf
inc
mov
jg
xchg
inc
sbb
in
xchg
cmp
test
into
mov
mov
das
sub
cmp
call
xlat
pop
or
inc
nop
sub
sub
mov
pop
std
mov
sub
or
shll
sbb
ds
aaa
std
decl
xor
cmpsb
dec
cltd
pop
dec
push
ljmp
cmp
xchg
std
push
loopne
lea
dec
mov
test
fnstenv
push
add
mov
dec
fcomip
fistps
inc
test
xchg
pop
jle
out
inc
addl
xor
in
cmpb
call
sub
inc
or
lret
xchg
pushl
xchg
rorl
inc
enter
add
sbb
cld
aaa
lcall
ja
inc
test
push
adc
push
cltd
gs
jmp
pop
ss
push
ljmp
cmp
xor
mov
insl
dec
icebp
decl
mov
mov
testb
fdecstp
xor
adc
cmpb
aad
xchg
repz
das
rclb
jae
ds
int3
dec
inc
shll
inc
dec
mov
shll
pop
das
xchg
sbb
mov
cwtl
mov
or
push
sub
sarb
mov
cmp
jge
ret
cli
and
lods
fsubrs
pushf
aas
ds
in
xchg
adc
sti
mov
pop
inc
setns
sub
mov
fists
jbe,pt
mov
mov
inc
sbb
mov
and
mov
push
push
cmp
sub
mov
jmp
data16
movsb
dec
inc
inc
xor
pop
xor
div
add
ds
loop
cmc
and
fiadds
movsl
jle
loopne
dec
dec
dec
push
rolb
in
and
shll
or
jmp
mov
das
xchg
inc
push
or
mov
xor
pop
repnz
loop
daa
scas
jne
and
inc
xor
mov
in
into
inc
cmp
fstpl
mov
mov
pusha
shlb
sahf
test
jle
rcrl
sub
cwtl
adc
push
push
mov
cmp
sub
inc
push
mov
int
jg
xchg
addps
mov
orl
mov
aad
or
stc
add
pusha
sub
add
icebp
incl
or
xchg
icebp
loope
add
or
pop
ret
adc
inc
enter
push
xchg
xor
mov
setb
das
xchg
cmp
mov
lea
cld
aaa
rcll
inc
je
sbb
out
adc
hlt
and
sub
adc
or
clc
dec
or
cld
inc
loopne
jmp
call
addr16
mov
cld
cmp
int
push
cmc
rorl
scas
es
idivb
popf
test
dec
mov
and
xchg
test
push
jecxz
int3
cmovbe
adc
nop
xor
sahf
mov
add
cmp
pop
adc
ljmp
lods
pop
clc
xchg
sub
mov
add
pushl
push
push
test
xor
loopne
ss
pop
cwtl
mov
pop
jnp
scas
inc
fcomps
mov
xlat
mov
mov
cld
lock
out
xchg
fldl
in
rcr
test
xorl
pop
test
lock
clc
iret
es
pushl
xor
mov
mov
xor
cs
out
loop
testb
dec
jo
lock
dec
sbb
push
lock
and
push
ds
push
adc
add
call
mov
adc
push
test
fbstp
sub
test
cmp
rcr
adc
jae
ret
repnz
fists
cli
or
pop
inc
popa
push
popa
adcb
xchg
lret
ret
fwait
gs
fisttps
and
dec
add
imull
lock
daa
adc
icebp
pop
lock
push
sbb
movl
adc
into
addb
sbb
or
imul
shll
call
inc
and
mov
outsl
insb
mov
stos
das
shrb
decl
es
adcb
pop
daa
sub
movsl
pop
push
fdivrl
sub
jmp
xor
xchg
push
jmp
push
inc
xorb
cmp
xor
mov
inc
or
inc
push
xcrypt-ecb
cmpsl
dec
test
lahf
inc
inc
decb
xchg
xchg
mov
cs
aas
pusha
add
mov
ljmp
pop
add
sub
sbb
mov
lret
insl
mov
sahf
mov
mov
popf
popf
inc
ja
sub
or
dec
nop
sbb
xchg
xchg
clc
ss
cmp
repz
fcomip
in
xchg
imul
and
loop
mov
push
fwait
xchg
mov
jle
pop
xlat
mov
ss
pop
mov
add
and
push
jg
call
jge
mov
sub
aam
push
loopne
jl
inc
jmp
pop
shrb
push
push
js
cmp
icebp
shlb
test
inc
xlat
adcb
dec
inc
cmp
xchg
addb
cmpsb
out
popf
in
push
enter
mov
and
rcrl
loopne
sbb
leave
cmpsb
dec
mov
or
and
subl
fidivs
cmp
xchg
faddl
je
hlt
mov
std
cmp
fadds
xor
mov
rclb
hlt
add
xchg
mov
push
movsb
xor
lcall
lock
jnp
and
adc
cwtl
ja
add
call
or
pop
mov
sarl
in
or
bound
fs
shlb
nop
jmp
sar
mov
xchg
scas
sub
adc
cmpl
cltd
mov
adc
dec
loop
adc
lea
imul
inc
add
push
add
or
das
cli
push
adc
or
lock
pop
xchg
mov
jb
or
nop
les
rorb
in
mov
loopne
int3
sbb
add
add
mov
mov
int
or
movsl
add
aad
outsb
add
test
push
xchg
incb
aas
lret
repz
cmpsb
stos
jns
mov
fwait
fs
xchg
cld
pop
sets
mov
push
mov
mov
mov
stos
shrb
jb
dec
clc
mov
cmpb
daa
add
daa
dec
sbb
add
or
push
out
mov
dec
cld
xor
lahf
mov
inc
faddl
into
loopne
jmp
mov
lret
sbb
mov
jbe
xor
mov
jno
add
cli
xor
mov
xorl
movsb
loopew
jmp
scas
cmp
addr16
mov
add
aaa
movb
add
cmc
repnz
mov
sbb
xchg
cld
jmp
mov
mov
pop
adc
inc
add
cmp
popf
sbbb
and
sarb
mov
mov
out
and
add
and
fwait
fwait
or
jno
and
pop
pop
lret
dec
pop
mov
cmpb
sub
inc
mov
cmpsl
and
push
pop
or
cld
add
adc
hlt
push
mov
pop
mov
and
loope
push
int3
pop
sbb
roll
sbb
adc
loope
test
xchg
fidivrs
or
notl
add
sbb
fnop
inc
bound
sbb
add
or
and
cwtl
adc
add
mov
jbe
jecxz
repz
adc
cli
add
ja
push
lds
icebp
dec
pop
daa
in
pop
jmp
sbb
and
std
fs
sbb
outsb
or
movsb
fxch
lcall
ds
and
fs
adc
es
cli
test
fcomi
xorb
sahf
shll
dec
andl
add
and
not
add
add
push
xlat
inc
xor
sbb
mov
sbb
dec
cli
or
mov
decl
sbb
xchg
leave
ret
gs
mov
test
outsb
inc
jmp
mov
ja
sarl
pop
cmc
lea
adc
xor
pop
pop
xchg
sub
cltd
hlt
xchg
xchg
xor
jbe
stos
push
loopne
ja
jg
aaa
dec
mov
xor
aam
jno
mov
jae,pn
mov
adc
and
pop
xchg
repnz
adcb
xor
or
out
jl
js
ljmp
push
or
inc
dec
jmp
mov
cwtl
call
dec
in
jns
push
xchg
outsl
add
xor
pop
push
pop
faddl
out
inc
push
fdivr
mov
cltd
shlb
pop
mov
dec
ja
ljmp
inc
mov
mov
cld
sub
data16
and
movsb
push
je
dec
rolb
cmp
sti
clc
aaa
jmp
fstl
or
and
testl
adc
inc
and
scas
adc
nop
cmc
mov
sbb
inc
inc
push
jp
int
cwtl
nop
clc
repnz
adc
lcall
popf
std
xchg
test
sub
sub
cmpl
fistps
jo
inc
and
dec
aaa
or
int3
xchg
pop
gs
ds
stos
les
hlt
cmp
mov
data16
call
clc
xchg
add
jecxz
pop
push
sub
nop
push
or
roll
inc
in
inc
icebp
mov
testb
inc
or
pusha
pop
xchg
mov
xchg
std
pop
mov
push
inc
pop
test
lcall
inc
sbb
pop
push
cltd
inc
out
push
loope
movsl
sahf
jno
adc
pushl
ds
xor
cmpsb
pop
sti
mov
jg
push
enter
sbb
int3
mov
sub
les
cmpl
dec
xchg
mov
movsb
outsb
and
cmp
aaa
test
or
ss
push
xorb
ljmp
and
es
xor
add
test
add
or
mov
cld
jmp
xchg
jns
outsb
sub
inc
loope
int
adc
pop
sbb
sar
and
dec
jle
es
enter
xor
mov
add
icebp
stos
mov
inc
xchg
clc
add
xchg
jnp
push
js
adc
push
cli
xor
dec
cld
outsb
popa
add
mov
cmp
lds
pop
cmp
loopne
sbb
sbb
mov
adc
int
mov
cwtl
add
and
clc
jmp
pop
adc
adc
clc
push
add
sbb
xor
scas
mov
in
push
xorps
add
sub
repnz
test
dec
push
dec
cmp
push
cmp
jmp
fs
sarb
add
fidivrl
les
imul
push
jbe
sar
aaa
cmp
ss
into
pusha
cmpsl
int
fidivrl
mov
insl
std
xchg
js
jge
dec
enter
inc
hlt
push
pop
aaa
insl
push
mov
sub
pop
lahf
fdivs
repz
add
fmull
xchg
incb
stos
std
popl
mov
sbb
jp
or
xor
mov
sbb
lds
push
xor
xor
and
jecxz
aam
daa
scas
in
clc
jo
ss
xor
dec
mov
movsb
or
mov
es
cmp
pop
aaa
xchg
pusha
cmpb
daa
out
popf
add
in
xchg
les
jl
rclb
xchg
shrb
mov
call
aaa
push
inc
lods
les
mov
call
push
or
test
lods
push
loop
lret
pop
test
push
cmc
gs
add
loop
push
dec
dec
or
lods
xchg
dec
sbb
add
inc
ds
dec
outsl
clc
ljmp
fldt
jno
sbb
or
xchg
add
xchg
enter
add
fwait
dec
fdiv
push
add
or
xchg
sub
and
aam
inc
jmp
push
add
rcrb
shlb
jbe
js
and
and
mov
mov
pop
sarl
pop
jg
scas
xchg
outsl
lods
loope
push
jns
jecxz
jmp
aaa
mov
iret
movsb
xchg
push
xor
popa
and
lock
jo
in
adc
sub
pushf
xor
mov
mov
enter
xor
inc
loop
add
and
je
je
xchg
dec
and
add
bound
and
stos
cmp
jnp
inc
test
mov
ret
mov
sub
pusha
sub
movsb
mov
mov
inc
enter
stos
imul
icebp
lods
pop
data16
and
in
sbb
pusha
xor
decl
popa
push
int3
sub
cmp
aad
push
and
call
or
ret
in
sbb
loop
mov
call
adc
or
pop
dec
pop
mov
aam
mov
cmp
sbb
outsl
sbb
dec
rcrl
jnp
xchg
pop
mov
cld
fs
insb
mov
dec
inc
xchg
cld
fwait
xor
push
add
shrl
inc
inc
pop
lcall
clc
call
push
add
jp
clc
jmp
addl
icebp
mov
xchg
dec
aaa
hlt
les
mov
lret
push
icebp
stos
or
push
jns
fiaddl
push
mov
pop
and
test
dec
push
cmp
insb
hlt
mov
shr
lret
add
cs
mov
pop
mov
mov
and
push
dec
cmp
jne
cmp
jno
call
imul
push
jae
movsl
ds
dec
mov
sbb
push
mov
or
xlat
call
std
lcall
cmp
or
icebp
test
loopne
lcall
add
ret
js
push
adc
mov
sbb
je
mov
pushl
ret
pushf
and
lods
aad
xchg
aaa
mov
mov
mov
cmpsl
sbb
fs
dec
insb
ja
outsl
mov
jg
pushf
lahf
scas
inc
loopne
test
pop
cmp
xchg
and
clc
aaa
call
fstps
shr
pushl
fs
out
aad
xchg
jo
xchg
std
push
in
aas
adc
mov
add
add
outsl
xchg
call
movsb
xchg
add
adc
push
int3
cltd
pusha
lods
adc
and
pushf
and
out
push
xchg
add
fcmove
setns
sub
test
jmp
scas
movsl
jbe
loop
rsqrtps
in
daa
adc
out
mov
ret
lods
mov
loopne
push
bound
xor
push
scas
mov
and
arpl
stos
jmp
xor
add
xor
sbb
inc
cmp
jmp
push
cmp
mov
pop
mull
mov
xlat
add
jp
mov
cmp
daa
push
sbb
fldt
sub
clc
mov
scas
xchg
fisubs
sti
adc
in
adc
jns
or
cmp
jno
mov
outsl
mov
andb
xor
inc
outsl
add
push
mov
mov
js
roll
adc
inc
or
xchg
js
aaa
mov
movsl
inc
adc
mov
in
jb
push
sahf
inc
divl
lods
arpl
daa
enter
movsl
mov
jns
repz
stos
adc
lock
push
jg
dec
aam
dec
aad
add
decl
cmpb
pop
fs
and
ret
ss
shrl
loopne
adc
jge
sub
js
fs
ss
mov
dec
mov
ja
cld
scas
ret
push
push
mov
lret
and
jns
or
pop
ds
fmull
dec
inc
pusha
cs
out
ret
add
stos
adc
nop
stos
adc
xor
rclb
idivl
cmpsl
or
in
ret
stos
push
xchg
sub
ficompl
push
fwait
inc
je
call
pusha
inc
pop
mov
adc
addb
cmpsb
xor
jl
xor
adc
cmc
cmp
jno
outsb
mov
in
mov
dec
push
jge
aad
inc
mov
mov
sahf
dec
dec
and
test
xchg
cmc
outsl
mov
enter
inc
adc
push
stc
pop
ds
jg
pop
sbb
jb
adc
cmp
shr
popf
xchg
call
into
jno
add
pop
mov
sub
pop
jle
outsl
xor
jnp
xor
in
cltd
mov
out
sub
or
push
mov
mov
xchg
jo
jo
fstps
lods
xor
mov
push
xchg
push
shrb
lods
dec
push
adc
mov
xchg
movsb
mov
push
push
jecxz
repnz
xchg
loope
inc
call
sti
mov
fidivrs
into
adc
fiaddl
ljmp
test
roll
aas
sbb
outsl
cld
mov
jnp
stos
pop
cli
incb
jo
int3
sbb
in
out
push
mov
push
scas
addb
js
or
inc
add
sub
fwait
es
mov
adc
out
inc
mov
dec
js
into
jne
out
push
jo
in
roll
out
or
adc
scas
and
add
popa
data16
loopne
xchg
out
out
movsb
mov
mov
push
es
fsubs
xor
and
das
jl
mov
xor
pop
inc
jb
lods
inc
addl
xor
and
jns
push
les
ret
out
mov
and
mov
mov
fisttpll
xchg
lods
mov
adc
jecxz
sbb
xor
movsb
pop
sbb
mov
or
ljmp
xor
call
sarb
fidivrl
push
mov
rcl
insl
in
push
or
je
insb
cltd
mov
and
dec
and
mov
or
adc
daa
icebp
push
and
push
xor
addl
jge
ljmp
stc
add
cmc
xlat
shl
and
sbb
adc
leave
push
cwtl
fsubs
jo
fiaddl
imul
nop
mov
adc
jge
push
xor
cmp
jle
rcrl
add
pop
and
notb
inc
xchg
mov
push
rclb
mov
sub
ret
or
ficoml
dec
loope
cld
fdiv
mov
testl
mov
lods
pop
xchg
test
lods
rorb
adc
std
lcall
add
add
jmp
xchg
dec
adc
in
cli
hlt
or
sti
cmpsl
adc
pop
shlb
xchg
clc
mov
adc
into
or
dec
mov
xchg
pop
sub
ss
in
std
mov
xor
stc
fisttpl
inc
stc
xorb
test
enter
lock
cmpb
gs
loopne
addb
decl
rcll
inc
jl
jbe
jge
pusha
adcb
inc
ret
jmp
fcmovnb
xor
fsubs
inc
sbb
jl
adc
mov
or
pusha
popf
push
mov
rorb
mov
iret
sub
or
sbb
les
cltd
push
sbb
mov
adc
and
push
mov
int3
cltd
jbe
xor
test
pop
mov
ljmp
sub
xor
add
das
jecxz
sub
sub
adcl
sub
punpcklbw
mov
mov
ljmp
lea
mov
cld
int
call
inc
cmp
fisttpll
jg
inc
inc
pop
jno
movsl
pop
sub
and
dec
wrmsr
mov
dec
adc
test
call
jo
dec
cwtl
sub
adc
loope
sti
xor
fsubr
pop
int3
orb
das
xchg
stc
cmpsb
cmp
push
shll
push
mov
jno
dec
cld
ret
dec
pop
lea
lcall
in
nop
jo
std
or
fsubs
addl
div
out
stos
insb
cmp
push
xor
sbb
shl
push
pushf
xor
lds
call
mov
stos
sahf
insl
rclb
add
pop
fidivs
loope
jne
mov
in
shlb
les
notl
add
out
sbb
movsl
jno
jle
adc
xor
or
popa
call
out
mov
popf
mov
mov
roll
movsb
xor
loopne
jnp
or
xor
call
insl
push
outsl
mov
mov
or
mov
push
adc
adc
test
xchg
imul
stos
clc
mov
cmp
fsubrl
jo
orl
xchg
xchg
xchg
pop
lods
jl
dec
mov
xchg
adc
fmull
pop
andb
cmp
mov
movsb
inc
xchg
pusha
rolb
inc
mov
jo
outsb
ret
jg
pop
or
in
aam
out
xchg
push
xlat
sbb
cmpsl
cmc
mov
popf
jg
mov
loope
mov
mov
pop
sarb
pop
sti
icebp
push
or
jo
or
mov
and
movsl
lcall
dec
dec
xlat
scas
imul
add
cmpsl
and
adc
mov
or
pop
aad
les
cmpsl
xchg
icebp
ljmp
xchg
loopne
xor
xlat
loope
test
jle
rol
mov
sub
mov
dec
dec
or
mov
dec
in
int3
les
add
pushf
add
cmc
sbb
jecxz
movsb
rcr
jecxz
jecxz
gs
inc
aaa
mov
lret
add
out
xchg
and
shll
push
and
arpl
out
cmpsl
shll
mov
push
mov
jbe
xchg
cld
call
inc
in
js
cmc
dec
je
fwait
jnp
es
mov
mov
pop
and
test
xchg
jg
mov
daa
add
dec
das
jl
mov
fsubr
clc
mov
lods
or
add
inc
sub
pusha
mov
aam
mov
jp
jle
jle
lds
negb
mov
xor
pop
adc
xor
cmc
aaa
mov
dec
repnz
mov
add
mov
call
cmpsl
clc
mov
and
fs
dec
pop
mov
test
jae
ja
or
push
mov
stos
add
mov
loop
lock
xchg
out
loop
in
ds
mov
and
mov
push
jo
mov
rclb
les
adc
cmp
aam
sub
pop
sbb
mov
push
mov
push
test
push
loope
mov
add
movsl
or
into
decl
inc
xor
inc
mov
mov
popa
sbb
fsubl
mov
inc
mov
shrb
xchg
jle
cmp
jg
jle
push
add
std
adc
mov
adc
add
add
add
loop
insb
adc
in
cmpb
xchg
or
pusha
es
lcall
lahf
jle
les
je
mov
rcrb
sub
pushl
loop
mov
rorb
scas
int
and
std
and
movsb
push
shlb
inc
jo
inc
inc
test
dec
popa
and
mov
loopne
inc
ret
dec
push
add
bound
jno
cli
mov
pushf
cmpb
add
dec
pop
adcb
into
xor
adcb
adc
ss
out
pop
aam
mov
push
fs
movsb
es
loopne
xchg
jecxz
pop
sbb
sub
inc
push
adc
out
mov
les
dec
xchg
mov
in
jbe
fldenv
jmp
adc
sub
dec
je
sub
xor
mov
stos
call
aad
data16
dec
add
das
pop
dec
bound
or
jecxz
or
into
and
cmp
inc
loopne
inc
push
or
push
fbld
and
jmp
jp
ret
xchg
xchg
ss
sub
or
scas
bound
mov
test
add
mov
or
xor
lods
rorb
xchg
ljmp
divb
rcrl
mov
les
clc
jne
inc
data16
push
fisubrl
in
sub
andl
xor
lcall
and
lret
xor
dec
or
dec
stos
cmp
xor
mov
mov
sbb
rclb
mov
je
movsb
ss
adc
push
cld
lret
mov
push
addb
std
or
out
adc
in
fwait
inc
fucomip
sahf
rcl
adc
mov
dec
sahf
enter
test
and
push
test
xchg
shrb
jo
inc
push
and
xchg
push
clc
adc
into
insb
adc
enter
jmp
or
ficoml
int3
jne
dec
rol
sbb
cmp
pop
out
popa
push
movsl
push
loop
push
sub
gs
shl
xor
jmp
and
push
or
cli
cmp
pmaxub
push
ror
lds
xor
jnp
xchg
mov
test
add
pop
shll
and
cmp
jmp
jg,pn
mov
scas
sub
int3
out
xor
add
rol
stos
adc
sub
test
push
jnp
sbb
mov
add
mov
and
pop
push
jmp
mov
push
lods
jecxz
xor
scas
mov
stos
or
cld
lea
shlb
int
mov
pop
pop
cmpsl
stc
cmpsb
mov
push
jp
scas
addr16
cmp
scas
sbb
sbb
jns
push
aam
dec
add
rclb
ss
push
push
lcall
xchg
mov
ljmp
sbb
cmp
fstl
push
and
testb
and
js
out
push
loope
pop
adc
in
mov
into
pushf
in
cmp
stos
fistpl
fsubl
sub
xchg
add
pop
sbbb
in
ret
rclb
inc
insb
int3
and
push
xorb
push
int3
or
push
sub
cwtl
mov
dec
inc
mov
fwait
sahf
enter
lods
xchg
push
adc
jle
mov
jle
mov
lahf
dec
aaa
std
shll
lcall
lock
je
cmp
mov
loope
or
lods
lcall
mov
pop
mov
add
sub
push
ljmp
mov
mov
hlt
imul
andb
add
ljmp
xchg
test
movsl
mov
inc
jmp
adcl
cli
push
fldl
xchg
arpl
outsb
loopne
jp
cmp
call
cld
adc
negb
testb
sub
leave
test
pop
push
int3
dec
mov
int3
int3
ror
pop
outsl
mov
ljmp
loop
mov
jge
ja
push
adc
int
dec
std
xchg
xor
mov
cmp
pop
jne
jle
pop
mov
data16
lcall
cmpsl
je
adc
sti
mov
movsb
xor
hlt
ret
test
pusha
add
mov
mov
push
aaa
lcall
cmpsb
cmp
stos
xor
and
fbstp
or
or
sar
or
push
dec
sbb
sbbb
aaa
adc
fmuls
jmp
adc
ret
xchg
jecxz
ljmp
mov
daa
jp
mov
pop
fs
sahf
mov
add
nop
sti
jmp
cmpsb
js
xchg
or
rclb
mov
inc
xchg
je
xor
jl
jmp
jg
push
cmp
mov
mov
cli
mov
shl
enter
xchg
mov
icebp
test
mov
inc
adc
mov
push
and
jo
mov
mov
call
sahf
and
mov
incl
cmc
xchg
sahf
lock
std
decl
loope
cmpsl
enter
dec
aam
fucomip
rclb
pop
xchg
push
add
lahf
mov
inc
push
and
ret
sarb
enter
lcall
sub
jecxz
stos
push
aad
add
fmuls
mulb
add
mov
subb
mov
dec
gs
aaa
dec
sub
je
je
mov
or
pop
xlat
xchg
inc
in
cmpb
mov
fsubrl
xor
dec
mov
loopne
jmp
js
lahf
pop
push
sbb
enter
mov
out
jb
lock
lock
add
jns
xchg
cmp
push
dec
jg
xchg
mov
aam
or
sahf
aad
xchg
test
mov
cli
sbb
mov
lret
and
jg
lcall
sub
vpcmpgtb
nop
or
pop
movsb
xor
xor
and
and
sbb
std
lcall
int
clc
ret
adc
je
nop
mov
es
call
jg
push
pushl
xor
or
ja
mov
push
cwtl
mov
add
outsb
push
cmp
in
loopne
rcll
decl
or
aam
mov
and
es
repnz
mov
jle
fsts
mov
push
mov
pop
daa
push
loopne
pop
std
decl
push
fs
pop
mov
mov
xchg
jb
inc
jnp
and
ljmp
xor
fs
es
push
xor
jg
and
pop
xchg
incl
out
fdivrp
mov
sbb
in
dec
adc
sbb
pop
sahf
insb
xor
jl
sub
adc
cld
ret
decl
test
test
jp
xchg
xor
nop
sbb
fcomi
and
mov
cmp
std
pop
push
popl
add
cltd
add
call
ljmp
xchg
xor
xchg
add
and
xchg
leave
cmp
ljmp
and
lods
xchg
fisttpll
movsb
mov
jg
incl
or
push
push
xchg
in
sahf
sarl
or
mov
decl
pop
mov
scas
push
ret
testl
imul
stc
cld
ljmp
inc
test
test
fists
inc
sbb
jne
les
es
jb
and
lret
js
es
call
movsl
shl
jmp
lods
iret
bound
icebp
in
or
adc
cmc
adc
popl
out
mov
mov
xchg
cmp
cwtl
cmp
mov
sbb
ljmp
mov
ljmp
lods
inc
ret
add
insl
jbe
sub
jle
rorb
rcl
sbb
pop
rclb
scas
and
das
std
mov
repnz
mov
mov
lret
in
mov
fldenv
cmp
outsb
mov
outsl
mov
imul
hlt
bound
sub
lcall
hlt
nop
movsb
pop
fimuls
inc
dec
clc
loope
dec
lock
jecxz
sbb
lret
nop
ficoml
mov
push
outsl
ljmp
jo
movl
push
fnstcw
std
fisttps
loope
sub
lock
mov
sub
out
cltd
mov
mov
cli
mov
adc
jg
cmc
addl
mov
dec
cmp
mov
add
movb
push
arpl
jmp
xor
mov
sbb
mov
xor
ret
mov
insb
in
pop
or
xchg
in
push
incl
jae,pt
sbb
sbb
xchg
pop
adc
pop
sub
adc
pop
mov
out
rcll
mov
pop
or
shr
and
mov
cmpb
add
sub
cmp
sbb
or
jo
dec
pop
insb
scas
xchg
mov
enter
das
push
outsb
xlat
jbe
and
cmp
out
cld
lahf
add
mov
pop
lock
aas
inc
push
xlat
in
fstpt
sarb
cmp
xchg
or
pop
xchg
out
clc
or
fisubl
inc
push
dec
insl
inc
and
sar
fbstp
pop
inc
arpl
mov
sahf
inc
lcall
inc
pop
pushf
push
add
mov
fwait
incl
data16
je
scas
lock
int
jge
xor
adc
mov
add
addl
insl
insl
mov
xor
lret
movsb
push
mov
lods
loopne
mov
hlt
mov
fs
mov
stos
jle
scas
mov
adc
mov
inc
inc
inc
sub
or
lds
xchg
int3
and
sub
subb
adc
test
loope
push
pop
fiadds
push
pop
js
adc
dec
xor
mov
movsb
jle
push
js
sub
test
mov
insb
mov
dec
movsb
sbb
lret
das
lea
cmpsl
pop
adc
pop
push
sub
pop
jbe
fwait
and
cmp
add
lcall
push
mov
mov
jb
adc
xchg
push
cli
xchg
out
fsubl
jbe
sub
and
cltd
and
push
and
mov
sbb
sbb
cwtl
fiadds
lret
xchg
fwait
jno
pop
xchg
fs
in
pop
insb
daa
mov
add
cmp
dec
jnp
and
add
add
fistl
adc
jno
push
or
subb
and
mov
push
or
xor
lods
jne
aam
jle
inc
or
xchg
sbb
ret
push
jno
inc
cmp
dec
adc
les
gs
mov
mov
jnp
and
mov
pop
lock
pop
mov
nop
inc
movsl
mov
add
jecxz
push
das
adc
xabort
in
xchg
hlt
dec
cmp
ja
xor
int3
stc
inc
sub
mov
sahf
pop
insl
dec
and
push
add
sbb
aam
imul
inc
fneni(8087
inc
xchg
out
jo
lock
pop
cmp
in
fs
adc
out
scas
or
xchg
xor
sbbb
mov
repnz
inc
ljmp
in
lods
stos
nop
fs
xchg
mov
nop
mov
lret
add
lods
addb
and
inc
add
iret
mov
into
xchg
imul
mov
sub
mov
in
das
mov
push
jb
loope
pop
test
xor
jmp
inc
roll
inc
icebp
test
ds
cld
adc
int
int3
call
ljmp
cmovg
push
mov
mov
fistpl
mov
rclb
fists
and
adc
jno
or
rolb
push
test
mov
mov
push
out
jmp
and
daa
test
mov
add
mov
lods
aad
insb
insb
test
mov
sti
cmp
in
dec
mov
inc
inc
call
and
pop
xchg
sbb
ljmp
sbb
sub
push
iret
pop
test
push
sub
pop
mov
lods
faddp
ja
push
dec
and
enter
hlt
das
mov
iret
int3
cmp
inc
add
shlb
mov
mov
xor
add
and
cmpsb
adc
pop
pop
outsl
xchg
insl
add
xchg
and
js
das
adc
sahf
mov
stc
sbb
lock
lret
jp
lods
xor
subb
xchg
int3
jp
call
fs
mov
push
in
aas
mov
add
test
gs
or
cli
das
sahf
scas
flds
xor
xor
mov
xor
sub
push
mov
and
adc
leave
mov
jmp
ds
xor
out
cmp
clc
mulb
into
push
pop
stos
add
inc
les
mov
cmp
adc
mov
push
sbb
lahf
arpl
cwtl
push
aaa
cmc
push
out
cmc
movsl
testl
out
jne
add
pop
outsl
mov
mov
fldcw
ret
inc
sub
ss
out
jbe
mov
or
sbb
xchg
push
sub
jns
lea
clc
add
aas
popa
sarb
or
cmc
clc
and
insb
sbb
lahf
lcall
and
jo
mov
outsb
xchg
xchg
das
mov
pop
mov
xor
rcrb
push
lea
mov
mov
inc
popf
adc
inc
int3
aad
push
outsb
cli
mov
and
sti
ss
hlt
dec
dec
and
pop
xor
cltd
pushf
out
nopl
mov
push
scas
iret
pop
out
movsb
xor
in
cld
fs
mov
jp
fwait
nop
out
and
add
push
bound
add
in
jo
xor
enter
jl
mov
insb
xor
scas
popa
and
add
sbb
pusha
cs
outsl
dec
stos
inc
push
sub
mov
jb
pop
mov
pop
mov
loope
lahf
mov
mov
mov
clc
fwait
aas
imul
jp
sbb
paddusw
dec
jl
aaa
mov
es
xchg
mov
xlat
cmp
ds
dec
inc
out
test
pop
clc
lret
sbb
dec
or
add
xchg
rcll
jbe
sbb
out
cltd
jno
sub
push
pop
dec
shrl
sbb
ror
lock
jg
pusha
add
xchg
mov
leave
lret
inc
mov
adc
jle
test
imul
incl
sbb
fwait
push
pop
es
lcall
ljmp
cmpsl
add
mov
lock
mov
mov
orb
adc
inc
adc
ja
add
ficoms
xor
inc
mov
mov
loope
mov
sub
push
xchg
insl
push
jp
cltd
jne
xor
pop
sub
aaa
js
mov
cmpl
call
xor
loop
mov
inc
mov
xor
inc
and
cli
add
das
mov
loop
call
jecxz
jg
add
inc
mov
test
pushl
cmp
repz
sbb
rol
push
sarb
add
mov
addr16
push
cld
outsl
and
fldenv
inc
fdivr
insb
jmp
fldl
push
int3
addb
xor
add
and
test
pop
push
dec
loop
call
mov
or
lods
jb
aaa
lret
mov
mov
rcrb
or
rcr
mov
lds
out
cwtl
cmp
in
add
push
movl
lcall
icebp
imulb
mov
lret
cmp
push
mov
mov
and
sub
jp
push
stos
sbb
xchg
ret
pop
clc
fwait
ret
test
cli
mov
movsb
mov
fimull
ret
lods
add
cmpsb
add
mov
xor
mov
mov
rcrl
add
cld
mov
mov
jmp
aad
sub
inc
data16
loopne
sbb
sub
or
push
cmp
rclb
jae
cmp
mov
and
mov
cmpsb
outsl
mov
cli
fs
and
push
dec
add
mov
rcl
mov
in
inc
out
gs
lret
sub
and
mov
test
push
int
mov
adc
sub
cs
dec
mov
push
jne
movsb
or
mov
xchg
pusha
cmpsl
fcomps
outsl
dec
and
data16
mov
mov
sbb
popf
dec
mov
flds
std
mov
adc
stos
and
enter
ret
and
mov
xor
and
js
adc
arpl
cmpsl
jmp
push
cmp
push
xchg
sub
sub
clc
jmp
xchg
mov
mov
pop
rolb
add
ljmp
xchg
jnp
or
lret
mov
and
push
dec
jp
pop
jg
fdivp
call
cmc
mov
dec
jecxz
insl
cmp
mov
sahf
xor
xchg
pop
push
sub
pushl
or
sub
outsb
sbb
scas
adcb
xor
sub
dec
add
faddp
int
pop
and
daa
sub
xor
add
notl
jp
xor
shlb
lock
dec
adc
lcall
adc
pop
pop
pusha
shrb
out
outsb
test
clc
and
jmp
lret
add
add
jg
jmp
js
out
xchg
adc
sub
lock
fwait
repnz
lea
popf
and
dec
sub
stos
jmp
div
int3
xchg
rcl
loope
scas
sar
jg
mov
les
sub
sbb
push
cmpsb
pop
sbb
xor
and
jmp
and
jb
and
in
pop
std
fnstsw
or
movsl
sub
pop
pop
movsb
add
pop
add
add
nop
xor
push
sub
mov
or
inc
jmp
pop
out
inc
xor
mov
ret
jg
adcb
adcl
mov
repnz
and
mov
jbe
je
ja
imul
jo
gs
add
adc
and
bound
xor
ds
stos
movsb
jbe
in
mov
int
inc
and
jle
mov
jo
pop
sbb
repnz
mov
into
pop
lds
mov
dec
ljmp
cld
add
sbb
fyl2x
ds
mov
inc
jl
cmpsl
hlt
inc
jno
js
cmp
push
fdivrp
xor
or
mov
add
xchg
push
shl
incl
loop
imul
and
outsb
clc
add
je
out
jae
jmp
pop
adc
les
lods
cmp
iret
lcall
inc
jnp
add
sti
mov
sbb
fsubs
pushf
mov
xchg
imul
adc
add
and
test
jns
fwait
add
or
lock
xchg
fdivs
or
add
mov
cmp
push
decl
sahf
or
decl
xchg
mov
inc
movsl
mov
sub
aam
inc
ljmp
mov
jg
xor
and
arpl
test
add
incb
sub
adc
dec
sub
arpl
pop
sbb
pop
add
clc
cmp
cwtl
popa
clc
idiv
incl
xor
lock
push
pop
mov
cmp
imul
and
dec
loopne
inc
mov
movsb
mov
inc
stos
in
or
sbb
inc
jle
mov
test
push
filds
shl
pusha
pop
push
adc
cmpl
insb
mov
jbe
mov
push
shll
push
ret
cmp
fdiv
out
mov
adc
inc
dec
mov
outsb
mov
mov
lcall
pop
cmc
int
lcall
pushf
sbbl
mov
or
cmpsb
addb
imul
popa
scas
fnstenv
fsubs
ret
test
push
push
mov
cmp
and
pop
aas
mov
js
inc
xchg
push
decb
pop
push
test
or
xor
sbb
xchg
mov
decb
add
push
sub
inc
or
jnp
in
lods
test
lods
stos
add
cmp
add
push
sahf
loope
add
inc
jmp
push
add
movsb
dec
in
or
bound
rolb
sub
push
ret
push
mov
push
sbb
pop
inc
adc
push
nop
cli
push
sbb
dec
push
movsl
int
adc
test
cmp
add
xchg
mov
leave
jne
ret
das
jo
stos
and
lret
cmc
fdivrp
mov
arpl
mov
sub
mov
adc
test
incl
mov
ljmp
dec
jl
dec
pop
lret
pop
rcrl
jae
jg
mov
sub
or
scas
mov
adc
jecxz
jl
sar
push
xchg
and
aam
fstps
and
mov
call
movsl
cld
notb
mov
push
out
test
scas
nop
lock
or
ret
inc
push
add
nop
add
inc
cmpsb
add
loopne
test
mov
jle
mov
test
push
and
xchg
xchg
push
testl
xchg
lahf
inc
xchg
sbb
das
pop
jg
mov
mov
sub
mov
add
mov
jno
loop
pop
mov
std
cld
inc
mov
lahf
fs
jmp
cld
and
rcrb
gs
sahf
cmp
loopne
sub
cwtl
inc
mov
orb
mov
subl
mov
adc
add
cli
pushl
rorb
addl
movl
pop
adc
aam
dec
sahf
adc
jl
jo
pop
mov
sub
lods
pop
test
add
addb
mov
pop
mov
sub
add
adc
pop
test
cmp
ljmp
cmp
mov
inc
push
js
mov
adc
inc
add
outsl
jb
ret
cmc
test
mov
mov
inc
fmull
test
hlt
adc
or
push
into
or
cmp
cmp
add
xchg
repz
fidivrl
add
add
pop
pop
jl
xor
addr16
sub
push
mov
mov
push
pop
fs
push
lahf
jns
xchg
xlat
xor
push
les
inc
pop
jo
xchg
or
xchg
lods
sbb
in
pop
loop
outsb
push
adc
add
mov
ret
ss
xlat
lcall
dec
cmp
lcall
mov
cli
sub
movsl
add
sbb
mov
clc
out
adc
stos
add
int
cmc
lds
cltd
xor
sub
inc
clc
add
mov
add
pextrw
jle
adc
outsb
je
mov
push
dec
leave
mov
adc
lds
iret
pop
xchg
aaa
xor
fsubp
sbbb
xchg
xorl
mov
stc
imul
cmpl
dec
mov
jae
adc
fsubl
cmpsb
outsl
push
jl
and
and
mov
cmp
jle
pop
sarb
adcl
mov
inc
out
decl
inc
push
dec
mov
xlat
imul
inc
pop
mov
stos
sbb
hlt
movsl
aas
std
push
pop
mulb
sbb
dec
aaa
adc
xor
push
add
data16
or
std
lock
cmc
enter
mov
rcr
and
fidivrl
adc
sahf
icebp
lcall
mov
ja
mov
jp
test
mov
ficoml
inc
cld
js
pop
or
cli
mov
mov
ds
or
push
lods
or
sbb
mov
stos
sbb
sbb
cmp
push
cmp
je
and
lcall
push
int3
adc
dec
add
mov
sub
insl
std
insl
or
adc
hlt
data16
icebp
subb
xor
imull
inc
mov
mov
dec
xor
icebp
cs
out
pop
fsts
cmp
or
mov
dec
dec
movsl
mov
xchg
jmp
sub
cmpsl
lock
push
mov
rcll
adc
call
push
sahf
and
xor
sbb
in
mov
inc
xor
loop
push
xlat
push
add
jecxz
mov
add
js
js
movsl
jecxz
mov
addl
add
lea
sahf
out
mov
repz
loope
jo
scas
sbb
ret
bound
and
std
pop
and
push
movsb
push
sub
bound
adc
aam
lcall
cld
push
rolb
pop
dec
aas
and
cmp
jmp
adcb
mov
scas
jg
push
pop
jns
faddl
xor
outsl
setno
jns
inc
das
push
cmp
and
inc
test
pop
sub
fcomip
fwait
mov
cmpb
push
insl
divl
sbb
xchg
push
pop
sub
add
in
shll
add
or
lods
ret
add
ljmp
adc
add
shll
adc
test
lret
dec
shlb
push
cmpsb
sub
addb
push
std
or
insb
inc
aaa
clc
sbb
leave
sbb
je
lds
mov
cli
fwait
xchg
inc
adc
sbb
push
push
mov
arpl
scas
cli
mov
xor
or
in
mov
fidivs
add
clc
sar
arpl
xchg
mov
adc
stc
in
fcomip
aaa
mov
inc
jle
add
push
loope
dec
addr16
adc
push
inc
in
loop
sbb
jecxz
mov
iret
jg
lds
mov
js
sar
mov
dec
sub
push
dec
fisubrs
adcb
fildll
divl
cwtl
and
jne
incl
push
dec
inc
pop
repz
int3
xor
int3
cld
adcb
mov
pop
push
hlt
loope
popa
sub
int
push
cmpsb
pop
xlat
and
iret
xchg
jo
jle
test
or
push
incb
mov
sti
dec
jmp
sub
mov
dec
adc
jg
pop
add
outsl
dec
lcall
adc
lahf
cmc
fbld
scas
ss
int
push
mov
mov
fbld
add
xchg
popa
cmp
imul
fisttpl
fidivl
push
add
mov
icebp
pusha
inc
and
stc
loope
clc
mov
lods
cmp
push
subb
add
xchg
cmp
xchg
into
and
loope
push
mov
pop
or
ficoms
out
movsl
pop
cwtl
not
insl
jne
mov
into
mov
les
mov
and
cmpsb
dec
test
mov
daa
dec
pop
icebp
shll
cmp
loopne
rorb
dec
fisttps
lds
jbe
xchg
sbb
lahf
dec
push
xchg
adc
mov
lods
cli
sub
pop
cli
iret
in
ror
mov
sahf
scas
mov
lods
adc
jp
jle
mov
out
loope
out
fcmovnbe
nop
pop
or
insb
sbb
inc
mov
test
lods
xchg
and
jbe
dec
insb
adc
mov
cmp
sub
add
icebp
stos
push
adc
lcall
pop
inc
cmp
sub
or
adc
arpl
ljmp
add
adc
fucomi
nop
adc
fs
ljmp
inc
mov
add
lret
test
iret
add
lock
push
and
rcl
decl
loopne
push
popa
int3
loope
popa
add
sub
push
adc
out
push
decl
loopne
jl
pop
es
xchg
arpl
or
mov
fdivr
sbb
add
dec
cmp
mov
cmp
xorb
loope
xor
cmc
lcall
adc
icebp
dec
icebp
push
test
fbld
fmull
sbbb
ss
int3
pop
dec
jmp
mov
sub
sub
mov
pop
lock
cli
mov
aas
scas
call
movsl
bound
mov
and
xorb
ljmp
push
inc
xchg
into
xchg
push
add
lea
call
inc
xchg
pushl
mov
mov
nop
inc
jo
repnz
sub
aaa
jl
scas
mov
dec
and
jo
test
call
push
xor
jle
repnz
mov
lds
dec
rcr
call
add
lds
pop
rcr
lock
and
cmp
lock
imul
push
mov
cwtl
testb
lcall
in
mov
push
xor
pop
jbe
or
nop
and
push
movsb
or
lock
out
fwait
stc
sbb
mov
dec
loop
mov
mov
pop
fisubrs
arpl
push
idivb
leave
in
dec
das
cmp
fisubrs
xlat
movsl
test
and
test
fdivr
pushl
call
add
mov
xchg
xor
rorb
std
cmpsl
lods
pusha
into
mov
push
ret
scas
push
push
cltd
xchg
pop
add
test
cmp
ljmp
int3
cs
nop
mov
jp
sub
daa
cmpsl
nop
push
test
and
insb
daa
out
dec
adc
cwtl
adc
push
lock
sbb
insl
jmp
cmc
push
and
and
jae
cmp
add
movsl
mov
lods
ret
cli
xor
xchg
push
ljmp
hlt
and
or
jmp
or
adc
fs
pusha
les
sub
xor
add
xor
lods
cli
add
sub
mov
xor
mov
test
inc
call
ljmp
test
dec
fwait
or
dec
pop
or
jnp
stos
or
sbb
jbe
cmpsl
adc
push
and
add
xlat
mov
ret
cmp
sbb
fmulp
bound
popf
cmp
sub
dec
add
pop
push
das
ds
jg
ss
bound
add
mov
mov
xor
mov
cwtl
js
pushf
enter
push
push
mov
enter
sbb
les
dec
or
shrl
cli
test
es
add
sub
push
lock
bound
call
scas
xchg
cmpl
jbe
inc
out
push
dec
jno
mov
adc
fmull
sub
xor
cmc
outsl
lock
push
mov
mov
mov
mov
push
lcall
rcrl
sti
inc
xor
ljmp
lcall
repnz
test
add
nop
cmc
ficomps
repz
sbb
xor
sbb
xchg
xchg
mov
jne
cs
repnz
jle
lcall
nop
jmp
icebp
push
cmp
stos
add
cli
addr16
adc
orl
mov
aaa
lcall
mov
mov
push
mov
inc
mov
sbb
data16
inc
pusha
inc
sbb
in
mov
or
lds
add
pop
dec
or
or
cmp
pop
rolb
and
cmp
shlb
push
mov
ljmp
xor
pop
lcall
cld
dec
lock
push
sbb
mov
mov
ljmp
movsl
push
cmpsl
mov
and
or
xor
push
subb
clc
xchg
sub
or
and
inc
mov
mov
add
mov
mov
mov
scas
add
cmp
inc
push
js
fisttps
sbb
sub
inc
xor
loope
test
pop
inc
pop
ss
push
push
outsl
std
aam
pop
les
loopne
mov
push
sbb
add
lea
imul
icebp
nop
mov
pop
mov
pusha
xchg
xchg
lods
jnp
jbe
jl
jmp
and
xlat
shrl
andl
lret
cld
aaa
sahf
fisubl
xorb
push
test
and
sub
fisubrl
mov
pop
push
filds
mov
call
xor
loopne
xchg
pop
inc
movsb
icebp
jg
mov
shr
or
sub
jno
pop
jl
enter
sbb
jl
cmp
or
or
jb
xor
loopne
sbb
iret
test
jne
cmc
mov
lea
adc
inc
sub
scas
hlt
or
or
mov
inc
out
sbb
add
push
aam
ret
pop
adc
loopne
insb
fucomip
ror
xchg
mov
ss
cmp
pop
jo
xlat
inc
jl
test
test
add
ficoml
jge
rcrb
js
pop
movb
icebp
add
or
xchg
in
pop
test
mov
cmp
stos
push
in
sbb
push
inc
lea
adc
cmpsb
ljmp
xchg
dec
popf
aam
or
adcb
mov
gs
jbe
in
pop
mov
push
push
pop
cs
push
jnp
test
sbb
insb
and
lahf
incb
lret
in
add
fistl
cltd
call
mov
ret
icebp
cmpb
cmp
mov
or
incb
sbbb
adc
or
inc
xchg
add
dec
ret
xchg
dec
test
mov
aam
ljmp
ds
fmulp
adc
enter
xchg
clc
fistl
dec
js
mov
stos
and
inc
xor
sub
xchg
aas
mov
dec
mov
and
fnstenv
mov
std
loop
sar
jnp
js
adc
adc
out
rcr
fs
sbb
les
lea
adc
xor
movsb
push
mov
cmpsl
sub
fidivrs
adc
cmpsb
xor
mov
jbe
pop
xchg
aad
ficompl
sbb
sbb
ljmp
mov
movsl
mov
jg
adc
xlat
bound
sbb
mov
popa
push
stos
mov
mov
pop
inc
jl
push
lods
enter
stos
sbb
xchg
sarl
xor
push
sbb
fmul
rclb
cltd
xlat
into
scas
pop
hlt
or
xchg
dec
lcall
cwtl
mov
add
and
clc
dec
pusha
loope
daa
cli
sub
pusha
mov
mov
xchg
and
push
xchg
aaa
lods
lret
dec
lods
and
int3
in
push
mov
lock
push
mov
or
jnp
xor
call
inc
insl
xchg
addl
loopne
sbb
cmp
fdivs
outsb
cmp
sbb
mov
xchg
or
aam
rolb
xchg
je
mov
sbb
jo
ljmp
cs
sub
add
xor
cs
je
clc
aas
jo,pt
sub
jnp
inc
out
and
pushl
stos
aas
aad
adc
mul
push
add
jle
ljmp
jecxz
and
cwtl
rorb
mov
and
jmp
push
cs
and
ret
mov
add
ds
xchg
or
push
roll
mov
adc
add
jecxz
std
push
mov
inc
push
xchg
test
push
inc
sub
shlb
mov
push
inc
jl
addb
adc
mov
adc
inc
add
pop
adc
lock
dec
stc
mov
dec
adc
lcall
mov
cmp
addr16
xor
sar
sbb
sbb
inc
mov
xor
andb
or
dec
mov
icebp
bound
jg
lcall
fs
into
loope
xor
cmpsb
roll
dec
cmp
adc
push
out
add
adc
ljmp
cmp
mull
pop
jno
adc
lods
pop
or
mov
inc
cmpsb
push
inc
mov
sbb
or
hlt
sbb
stc
imul
aad
cmpsl
pop
js
add
std
aaa
dec
push
bound
sbb
test
push
into
mov
jmp
nop
mov
daa
lds
mov
sbb
push
push
mov
push
xchg
xor
inc
push
int
push
push
add
jge
jle
pop
and
imul
or
int
roll
adc
fwait
adc
sahf
lock
lret
inc
xor
leave
movsb
dec
jo
loope
jbe
shll
cmp
rcrl
clc
or
test
adc
mov
stos
add
push
pusha
push
call
jne
ljmp
fmull
scas
push
mov
sub
out
mov
and
fcmovnbe
or
setp
loopne
xchg
dec
hlt
pusha
fdivrp
fwait
or
hlt
jp
js
pop
inc
push
inc
jge
xchg
pop
imul
int3
dec
test
pop
inc
mov
nop
push
jne
lahf
mov
jp
dec
adc
loopne
xor
mov
or
mov
mov
cli
cs
inc
sbb
cwtl
in
in
inc
xor
ljmp
nop
jbe
sbb
jne
test
cwtl
add
pop
jo
adc
xor
push
push
fprem
idiv
cmp
jl
cmp
mov
cs
outsb
shrb
vprotq
sbb
dec
bound
mov
mov
mov
andb
out
enter
cmpsl
mov
cmc
jno
int
jl
mov
sub
mov
jb
jg
out
jo
xchg
sbb
cmc
mov
sub
add
ss
ljmp
jecxz
mov
outsl
jecxz
inc
push
cmp
cmp
xchg
cli
jg
lahf
dec
mov
ljmp
pushf
cwtl
icebp
sub
push
in
clc
mov
push
sbb
xor
push
or
dec
xor
dec
ljmp
dec
out
ja
outsl
pop
jle
xchg
mov
pusha
xor
adc
cli
dec
mov
jae
mov
inc
mov
loopne
loopne
and
xchg
mov
push
xor
add
jne
or
mov
cwtl
shlb
inc
mov
jnp
icebp
push
jnp
aas
adc
mov
icebp
js
xor
cltd
test
add
mov
xchg
mov
lods
adc
xor
jle
and
mov
add
pop
sbb
lock
sub
outsl
pop
dec
sub
mov
xchg
in
sbb
fs
inc
loope
xor
push
fsubrs
xchg
lods
mov
cmp
add
inc
movsl
mov
mov
decl
jl
mov
stos
int
dec
xchg
orb
dec
inc
jmp
in
shlb
mov
stos
inc
sti
outsl
push
mov
cmp
jl
orl
mov
push
jge
or
orb
pop
add
sub
out
das
call
or
xorl
fwait
test
inc
add
mov
rorl
ret
shll
in
sbb
inc
and
mulb
xorl
mov
sbb
mov
inc
xchg
mov
mov
outsb
fiaddl
mov
ficoml
repz
xchg
mov
shrl
sub
push
vcmple_oqsd
repnz
sub
pushf
jo
adc
movb
add
jmp
mov
adcl
pop
dec
push
incl
mov
scas
and
je
adc
lock
add
inc
push
dec
add
push
clc
je
es
test
and
pusha
nop
test
sub
test
scas
adc
shrb
sub
jne
jecxz
mov
and
cld
and
cmpsb
add
cltd
xchg
sub
push
rolb
aaa
subb
insb
jb
pop
and
push
icebp
ljmp
daa
mov
dec
sbb
mov
mov
jecxz
inc
btc
cmpsb
aas
test
lea
or
mov
pop
or
das
xchg
loopne
xchg
xchg
dec
adc
dec
dec
push
jecxz
pop
clc
inc
cmp
mov
fbstp
jl
in
and
mov
push
inc
sbb
jb
xor
adc
push
jg
adc
imul
xchg
lock
push
push
and
pop
mov
aas
cmp
and
sub
pop
sub
add
loope
inc
nop
mov
lcall
lds
inc
cmp
test
adc
ds
lock
out
mov
sbb
pop
dec
push
cmpsl
ljmp
cwtl
or
push
stos
call
jg
pop
mov
ret
jp
mov
pushf
mov
add
iret
dec
mov
das
adc
out
movsl
cli
es
mov
mov
cs
call
mov
push
into
cmpsb
scas
mov
hlt
pop
sti
pop
fdivrs
mov
test
xor
xor
and
scas
mov
push
pop
in
jp
popf
or
out
push
xor
push
imul
std
cmp
aad
inc
jp
ds
data16
js
mov
lock
push
andb
fdivrp
jb
bnd
dec
popf
out
push
mov
loope
sbb
dec
add
push
inc
and
shll
mov
hlt
enter
daa
push
pusha
push
aam
cmp
adc
aaa
adc
shll
xor
mov
mov
repz
mov
add
sub
push
cld
aaa
enter
pop
sti
imul
cld
lock
mov
sbb
add
stos
popa
push
dec
cmp
mov
neg
inc
dec
add
push
rolb
imul
cli
js
sahf
lods
das
add
cmp
push
xchg
rorl
mov
clc
outsl
jp
in
ja
adc
dec
xchg
pop
popa
push
mov
mov
xchg
sub
xchg
notb
sarb
jecxz
movsb
pop
sbb
ljmp
dec
sbb
pop
aam
std
xor
push
push
lret
fs
inc
pushf
mov
lret
pop
es
mov
test
pop
lcall
rcrl
enter
loopne
stos
sbb
jl
cs
js
out
cli
push
fsubrs
cmp
popf
mov
es
sar
cli
outsl
incl
xchg
mov
clc
add
or
and
dec
or
mov
fsts
inc
mov
rcll
add
outsb
or
lock
lcall
jmp
push
pop
imul
or
sysenter
and
xlat
ljmp
lea
dec
in
lods
rcrl
mov
pop
loopne
and
xor
adc
and
inc
aas
fdivrs
subb
popf
decl
out
push
sti
inc
dec
pop
nop
fcomps
inc
sti
cmp
cmp
test
out
jmp
mov
mov
jge
and
loopne
lret
loop
push
push
sub
sbb
xchg
js
scas
dec
rcrl
cmp
cmp
lahf
pop
lea
sbb
cltd
cmpsb
test
pushf
mov
loopne
sbb
nop
orb
and
out
cmp
jmp
dec
shlb
inc
outsb
negb
dec
ficompl
in
daa
cmp
or
aas
js
add
mov
inc
add
gs
add
mov
data16
add
decb
in
ja
aas
aam
pusha
pop
push
adc
and
push
sbb
out
sub
xor
xor
sub
mov
stos
mov
cmp
pop
mov
lret
ljmp
faddl
pop
lods
adc
pushf
sbb
and
mov
add
dec
push
sub
inc
push
or
dec
xchg
adc
mov
les
shr
and
and
push
adc
inc
inc
and
mov
and
mov
aas
leave
add
xor
or
mov
sti
fildl
stos
aas
mov
mov
loope
ljmp
add
sbb
iret
rcll
mov
aad
xor
and
mov
push
mov
xchg
in
xor
sub
add
rcl
fbstp
into
mov
push
mov
xchg
push
pop
push
mov
adc
pop
mov
jb
movsb
insl
mov
push
pop
mov
and
movsb
xchg
ret
or
sub
or
pop
push
lds
jbe
popf
or
inc
pusha
dec
cmp
outsb
mov
daa
int3
cs
xchg
sbb
bnd
mov
mov
out
and
fiadds
xchg
sub
sarb
mov
jmp
inc
fsubr
cmpsl
push
mov
inc
test
insl
loopne
xchg
out
jecxz
out
jb
pop
lret
add
ljmp
cmpsb
idivb
xchg
daa
std
stos
cmpsb
test
ret
ret
add
xchg
pop
lock
enter
shl
out
cwtl
push
sub
add
test
rcl
push
jno
cmp
jecxz
sub
pusha
jno
repnz
sbb
and
sete
decb
add
xchg
cmp
bound
rorb
push
fmull
add
jl
rcrb
cmp
sbb
sub
pushf
ss
sbb
dec
and
fs
sub
lock
scas
js
push
pop
mov
adc
dec
popa
hlt
repnz
std
push
jp
test
adc
inc
aaa
mov
in
adc
push
movsb
in
clc
mov
push
sarb
ja
lcall
loopne
or
xchg
in
int3
xor
pop
shl
inc
jp
cmp
das
sarl
adc
sub
mov
push
cld
mov
decl
lea
sahf
mov
imul
cli
roll
mov
push
xchg
ror
in
add
shlb
mov
hlt
mov
mov
outsb
xchg
mov
pop
and
sbb
jmp
mov
mov
cmp
lds
dec
xchg
push
popl
in
jbe
inc
push
movsb
test
sbb
mov
pop
cmpsb
jp
xchg
test
inc
hlt
xchg
stc
leave
mov
or
push
add
cld
fsubs
in
cmpb
adcb
jmp
test
mov
sbb
pop
jnp
sarb
sbb
xor
lret
jmp
jmp
sub
add
mov
push
sub
pushf
jp
mov
test
xchg
dec
mov
shlb
cmp
xor
pop
push
mov
xchg
pop
mov
orl
sbb
pop
mov
call
icebp
push
xchg
mov
dec
add
inc
inc
xor
dec
pop
cs
xor
notb
mov
hlt
pushf
ficoml
or
pusha
sbb
scas
rorl
filds
nop
scas
rolb
fadds
inc
dec
sbb
mov
dec
dec
jmp
inc
inc
popa
push
mov
mov
push
cmp
or
out
int3
js
fldenv
pop
incl
loope
adc
pop
jns
bound
mov
cs
inc
xchg
mov
push
repz
cmp
pop
out
inc
push
lds
inc
subb
loop
adc
sbb
adcb
push
sub
and
mov
and
inc
or
and
cld
add
mov
bound
arpl
inc
xor
call
push
fildll
cld
imul
adcl
int3
fnstcw
mov
add
jg
fsubs
sub
cmpsl
jb
pop
push
xor
add
push
daa
add
int3
cmp
icebp
cmp
cld
inc
test
inc
mov
pushf
jge
ljmp
in
ljmp
enter
loop
rcrb
jg
insb
mov
pop
mov
leave
das
mov
jmp
aad
jp
cmpsl
fyl2xp1
mov
fiadds
lahf
out
sub
testl
pop
subb
xchg
cld
or
pop
push
cmp
cmp
xchg
adc
icebp
lock
pop
addr16
inc
push
pop
and
and
or
add
pushf
jo
add
pop
fdivrs
dec
pop
ds
call
leave
pop
xchg
add
push
add
test
or
int
rorb
push
push
push
ret
sbb
cmc
bound
lds
push
mov
sahf
mov
cmpsl
jns
inc
xchg
push
lock
ret
scas
sbb
or
aad
scas
jb
rol
je
jecxz
dec
in
in
andb
xlat
nop
xor
mov
lds
hlt
pop
test
mov
sahf
out
lock
push
dec
jle
inc
test
in
push
rorl
cmpl
dec
push
dec
add
arpl
push
in
or
jg
add
push
push
fs
loopne
out
mov
pushf
mov
rcll
mov
sti
push
cli
pop
mov
cmp
cmpsb
int
sbb
cs
push
dec
call
es
loopne
mov
push
mov
nop
push
repz
jbe
jle
cmp
adc
or
addl
std
xchg
hlt
lret
mov
cli
fisubrl
je
push
cs
and
dec
lock
call
mov
je
cs
push
cld
int3
sub
into
sbbb
push
outsl
inc
mov
add
sbb
or
inc
scas
cmpb
mov
pop
or
imulb
sub
into
sbb
cld
inc
cmpsb
pop
cmp
or
pop
inc
pop
stos
add
jle
mov
mov
in
cmp
test
jge
sahf
int3
mov
xor
ficomps
popf
or
sbb
cltd
and
mov
outsb
push
ja
push
push
push
movsl
add
jecxz
mov
or
pop
repnz
inc
xchg
and
jb
adc
cmp
push
jo
mov
sti
inc
xchg
cmovle
or
sub
and
imul
cs
pop
mov
jo
out
add
sbb
es
add
or
inc
sbb
call
cld
out
out
and
xchg
dec
dec
pop
int
stc
lock
das
gs
xor
push
mov
push
adc
sbb
mov
loopne
xor
call
or
adc
rol
push
add
jmp
cmp
icebp
cmc
outsb
sbb
into
cwtl
jecxz
jecxz
jg
rclb
mov
int
mov
dec
lock
add
dec
fcmove
out
int
push
ds
mov
push
mov
scas
out
arpl
sbb
test
mov
push
xor
movsl
addr16
andb
call
push
mov
jno
jns
rclb
jmp
add
test
ja
rcrl
lcall
hlt
xchg
test
xchg
xchg
mov
call
inc
outsb
add
push
stos
push
inc
add
and
hlt
mov
pop
xchg
insb
sarl
mov
push
dec
mov
dec
das
or
push
pusha
sbb
xchg
push
div
cld
xchg
xor
fisubs
mov
cmpxchg
decl
jecxz
stos
jnp
adc
cmp
add
sub
jmp
stos
and
or
adc
scas
enter
pushf
xor
cmpb
movsl
mov
aad
je
cmpsl
enter
jno
adc
adcl
and
stos
sarb
add
sbb
pop
fisubrl
cli
out
and
movsl
fsubrl
filds
jb
lods
mov
xchg
pop
inc
ret
idiv
mov
es
fnstsw
sbb
dec
inc
mov
mov
add
and
dec
push
or
dec
cmpsl
in
or
ffree
xchg
add
add
es
pusha
sbb
cmp
decl
fistpll
lret
adc
mov
popf
xorb
xlat
mov
mov
mov
cli
xorb
push
push
pop
mov
mov
mov
lods
push
call
aam
mov
xchg
movsl
mov
out
adc
inc
xchg
call
lock
enter
sbb
dec
sbb
je
pushf
or
int
push
nop
pop
into
push
add
clc
addl
xor
jbe
xchg
inc
mov
arpl
xchg
outsb
rorl
sub
imul
das
call
out
push
xor
mov
daa
cwtl
mov
pop
shrl
or
adc
in
sbb
repnz
push
jmp
sar
dec
mov
pop
xchg
jle
mov
inc
arpl
xor
xlat
shlb
mov
mov
lret
jb
lahf
lret
xchg
data16
sbb
push
mov
pop
inc
nop
loope
or
lcall
and
xor
aam
test
add
dec
fcoml
inc
loopne
cmc
and
hlt
pop
pop
jne
and
in
popl
push
mov
cld
jg
or
out
dec
add
movsb
aas
add
or
cs
lods
cmp
pusha
xor
in
mov
inc
sub
mov
in
adc
push
jno
add
rcl
dec
pop
sub
xor
and
lods
inc
rorl
out
xchg
lahf
sbb
cmpsl
dec
fcomip
push
add
push
pop
dec
call
int
xor
mov
or
scas
jl
and
jae
loop
jp
dec
leave
xchg
das
mov
mov
adc
mov
inc
push
pop
popf
dec
sub
push
push
or
cmpsl
popf
fidivs
bnd
subl
popa
pop
clc
jg
jb
repz
xor
inc
xor
mov
inc
jo
repz
stc
and
inc
inc
les
add
sbb
sbb
decl
aam
sub
dec
jle
sbb
pusha
or
pop
pop
inc
xor
test
loop
decl
add
inc
shll
call
xor
or
loope
std
stos
add
rcll
outsb
nop
mov
mov
push
das
lds
dec
dec
lcall
sub
and
inc
adcb
pop
adc
adc
cmpsb
dec
mov
dec
scas
les
push
push
or
or
inc
fisttps
jne
movsl
les
in
cmpb
aad
cld
lcall
rcrb
stc
std
pop
rorb
mov
pop
sahf
outsl
outsl
ret
cmpl
add
test
arpl
call
mov
cli
icebp
sub
mov
sbb
sub
pop
sub
or
inc
rolb
test
jp
dec
ret
roll
ficoms
push
jg
jge
cltd
fimuls
lret
xchg
dec
or
clc
pop
mov
adc
dec
fiaddl
in
mov
arpl
or
pusha
sbb
jecxz
fcmovnbe
test
decl
sub
mov
pop
mov
out
cli
jg
add
push
lcall
inc
sbb
mov
incl
pop
loop
out
arpl
int3
ret
fstpl
add
sub
xchg
mov
add
cld
push
das
out
test
notl
mov
in
incl
inc
or
sti
in
out
jno
add
cld
inc
inc
sbb
popf
es
mov
call
les
xor
ret
add
cmp
das
ror
pushf
iret
or
mov
lret
dec
out
sub
adc
and
pusha
dec
pusha
add
push
fprem
testb
stos
jno
fwait
push
test
in
dec
mov
push
add
pop
loop
pop
imull
push
jne
add
cmpsl
mov
jl
inc
fisubl
xchg
in
lcall
push
jle
and
fs
jmp
mov
fdiv
movsl
add
pop
imul
cmp
lock
dec
mov
inc
pop
inc
test
dec
add
xchg
repz
outsb
pop
mov
insl
bound
inc
xchg
femms
inc
cmp
loope
jne
out
pop
icebp
pop
and
fsubs
icebp
mov
push
inc
add
lea
decl
fdivs
sahf
adc
pop
jg
hlt
pop
add
cs
repnz
mov
push
sti
mov
and
add
movsb
cli
xchg
ficoms
cli
inc
in
push
test
out
popf
js
add
or
out
les
orb
lcall
out
xchg
pop
aaa
xchg
add
fnstenv
popa
cwtl
hlt
pushf
cmp
push
mov
pop
xor
inc
testl
in
jae
cli
inc
int3
xchg
insb
je
lcall
mov
sbb
test
adc
or
sbb
xchg
dec
add
mov
stos
add
repnz
sar
xor
cmp
xor
add
enter
sbb
push
add
testl
or
andb
and
sub
dec
jo
sbb
les
scas
outsl
enter
insl
cmpsb
xor
jge
and
pop
cmp
in
sub
scas
fs
shlb
loopne
xor
xor
in
push
cld
ds
jnp
scas
pop
mov
rcrw
mov
roll
or
and
ja
adc
stos
loop
jbe
sbbl
push
push
insl
xor
cmp
rcll
iret
adc
sbb
xor
inc
push
dec
sub
adc
addb
xor
fbstp
ret
leave
arpl
mov
xchg
mov
xorl
jg
and
flds
push
clc
mov
jnp
push
dec
mov
mov
inc
push
aaa
and
jg
jmp
int
jae
pop
pop
or
sub
or
outsl
dec
dec
clc
out
or
push
or
repz
and
add
shr
add
push
sub
mov
jg
push
or
das
sub
sbb
leave
add
ja
cli
out
inc
clc
sub
jmp
in
call
add
pop
daa
loope
cmc
xchg
cmpl
lds
mov
cmp
decl
arpl
loop
ret
pushf
cmp
stc
loopne
xor
in
or
xchg
push
pushf
pop
into
iret
cwtl
add
hlt
xor
and
jo
test
scas
clc
aas
clc
lock
mov
mov
test
cwtl
inc
inc
mov
add
rcrb
cs
stos
mov
push
mov
and
push
push
aad
sub
dec
nop
je
dec
cmp
inc
adc
rcr
sahf
xchg
stos
jo
jecxz
mov
mov
pop
and
xchg
jb
das
mov
cld
jo
nop
push
pop
popa
fdivrs
jae
push
add
and
loop
jp
lret
xlat
xor
addl
pop
jno
movsb
je
daa
cmp
xor
adc
cli
cmp
rorl
jmp
jae
clc
popf
mov
add
dec
xchg
sub
icebp
mov
xchg
loope
outsl
jl
notl
cli
sub
push
fstps
mov
inc
or
nop
mov
aam
xchg
ds
pop
jnp
dec
adc
cmp
inc
pusha
add
mov
pop
pop
arpl
xchg
inc
mov
outsb
add
lcall
mov
xor
xor
or
fstl
sahf
xchg
mov
add
outsb
lock
mov
adc
push
cld
scas
scas
sarl
rolb
ret
inc
add
cwtl
or
adc
mov
jmp
xchg
inc
sbb
jo
fidivl
clc
lcall
fbld
mov
lcall
or
fs
xchg
int3
mov
sahf
pop
mov
sti
pop
dec
ret
out
lds
jl
stc
jo
add
cmp
clc
and
push
jle
ljmp
mov
xchg
push
add
lock
mov
cmp
mov
les
and
outsb
and
inc
sbb
rcrl
sbb
call
clc
sbb
enter
mov
mov
mov
push
jmp
mov
decl
cmc
push
mov
leave
inc
and
sbb
and
lcall
xor
jns
cmc
mov
or
xchg
add
pop
and
jo
cli
decl
pop
imul
or
scas
fidivs
test
daa
or
jmp
scas
push
cmpsb
adc
xchg
push
mov
js
jecxz
or
and
mov
mov
stos
cmp
popa
out
clc
cmpb
and
ss
int3
pop
adc
lcall
inc
dec
pusha
ret
cmp
xchg
ss
call
add
pop
lock
mov
and
or
jbe
xchg
bound
call
jbe
add
push
stos
adc
cmp
or
jmp
adc
or
mov
jno
add
lcall
mov
pop
inc
mov
loopne
xorb
daa
rcr
inc
add
push
out
and
cli
lea
bound
div
mov
leave
test
mov
xchg
cltd
sahf
sub
je
mov
xor
inc
lods
adc
adc
mov
xor
gs
incl
scas
adc
icebp
loope
fisttpll
adc
push
sbb
mov
ficomps
cld
das
nop
push
std
movsb
inc
int3
push
dec
adc
movb
add
iret
dec
fistl
addb
aam
outsl
rolb
int3
mov
mov
pop
mov
xor
jg
leave
xchg
add
mov
add
adc
jl
cmpsb
cld
jo
jb
xchg
pop
inc
or
jb
xor
push
ja
mov
add
push
loope
mov
sbb
ds
test
adc
push
imul
mov
shl
js
jmp
or
cld
or
or
xor
repz
or
les
subb
jle
or
xor
inc
push
imulb
clc
xchg
scas
dec
sub
js
inc
les
stos
mov
pop
cld
push
push
push
inc
dec
add
leave
pop
sub
xchg
loop
push
add
mov
jb
push
or
sti
les
or
hlt
into
lock
jno
leave
jge
or
xchg
push
mov
cmp
fbstp
scas
cmc
das
adc
add
push
or
lods
test
fdivrl
inc
lds
ljmp
jne
xchg
xchg
andl
cmp
arpl
call
std
popa
add
and
scas
and
jp
push
out
ds
push
dec
mov
dec
lretw
aam
jo
and
popa
pop
ret
aad
fs
dec
scas
stos
clc
fwait
insb
and
sbb
pop
mov
fwait
or
push
jl
mov
inc
jg
add
ljmp
test
pop
cld
inc
push
loopne
xchg
add
bound
push
xor
inc
je
adc
or
mov
rcl
lods
dec
adc
adc
push
in
daa
stos
mov
shlb
mov
pushl
jmp
outsl
add
incb
pop
mov
push
aam
enter
pop
lcall
and
dec
push
out
dec
adc
pop
mov
sarb
xchg
aaa
mov
dec
daa
add
mov
jle
jmp
ljmp
incl
pop
sbb
lods
arpl
cmp
std
lods
xor
fisttps
imul
or
jbe
rorl
popf
xchg
iret
mov
mov
out
add
clc
int3
loop
xorl
decb
mov
pop
fimuls
dec
out
cmpsb
push
mov
in
shll
call
dec
add
add
in
or
xchg
hlt
mov
adc
dec
outsl
decl
sub
inc
sahf
mov
inc
xor
push
lcall
pushf
das
dec
mov
add
jae,pt
test
hlt
push
push
pop
mov
stos
cli
jle
scas
cld
das
test
mov
pop
pusha
push
addl
add
out
fldt
pushl
jno
lcall
cltd
inc
jmp
push
inc
adc
mov
js
mov
dec
xchg
and
inc
push
dec
jp
movsl
enter
fldl2e
loop
inc
cmpsl
loope
jbe
insl
xor
jmp
pusha
mov
stos
mov
ret
popa
into
xchg
es
adc
cmp
aam
adc
in
inc
rclb
das
adc
jl
and
sbb
jge
adc
pop
lcall
sbb
insb
xchg
movsb
lret
push
lcall
insb
test
in
mov
stos
xchg
adc
or
fildll
sti
stos
add
or
adc
push
insb
clc
outsb
xor
push
scas
push
inc
jo
addb
pusha
imul
aaa
and
sbb
testb
loopne
fiadds
and
cmpb
addr16
pop
repz
stos
jbe
sbb
out
add
or
mov
mov
add
dec
or
clc
out
nop
pop
mov
fnstsw
sbb
or
bound
add
adc
data16
cmp
mov
xchg
ret
sub
mov
pop
ud0
push
cld
sbb
ret
mov
arpl
pop
jno
dec
mov
dec
pop
fisubs
fprem
cli
out
insb
sbb
push
xchg
pop
ss
jg
push
mov
lahf
push
popa
mov
and
add
lods
sbb
adc
xchg
data16
jmp
pushf
cli
mov
mov
mov
in
shlb
rorl
mov
bound
popa
fwait
lcall
mov
loop
xchg
cli
aam
pop
rcll
pop
repz
fistpl
cwtl
push
jo
pop
lods
loop
inc
add
lods
dec
decl
add
jb
mov
jbe
loop
cmp
and
push
and
icebp
cmp
sub
dec
mov
clc
stos
sub
imul
and
and
aam
or
mov
push
test
xor
shll
cmp
push
inc
cld
cs
jp
cmpsb
fcoml
push
rolb
dec
or
adc
and
adc
lcall
lret
lods
gs
add
add
addl
loopne
lret
push
in
sbb
add
push
jb
push
notb
mov
push
shl
jo
jl
loope
mov
mov
jl
mov
test
sbb
push
jmp
inc
inc
cwtl
jg
jecxz
jle
add
adc
jl
adc
inc
lret
icebp
mov
repz
fdivrp
das
jge
in
stos
rcll
fistpl
rcr
cli
movsb
add
call
sbb
ljmp
lds
movsb
scas
and
push
mov
dec
call
arpl
pop
xchg
std
xlat
pop
adc
dec
sbb
mov
pushf
dec
in
js
sbb
and
cmc
cmpsl
lock
push
and
and
in
mov
call
fs
out
add
ffree
jp
xor
jge
mov
lds
xor
sbb
push
popa
mov
add
repnz
push
pop
mov
dec
push
push
xor
sub
cmpl
mov
lock
movsb
scas
imul
adc
jo
rclb
std
sbb
mov
jle
cmp
aad
inc
sahf
or
ds
stc
jp
inc
inc
test
push
lret
subb
cld
sbb
inc
inc
sub
idiv
pop
xor
push
or
inc
or
sbb
int
and
xchg
push
pop
mov
cli
cmp
jecxz
cmp
fstps
clc
push
sbb
into
mov
fldcw
sbb
orb
loopne
arpl
loop
test
jl
inc
dec
enter
sbb
lods
stos
outsb
pop
inc
dec
in
mov
or
pop
and
mov
mov
push
pusha
add
jle
or
dec
pusha
lds
pop
xchg
cmp
nop
cltd
push
and
add
pop
scas
or
mov
hlt
adc
mov
and
inc
cs
mov
mov
ss
fmuls
jecxz
and
fmuls
fidivrl
test
pop
xchg
push
call
jmp
outsl
mov
sbb
jne
mov
testb
adc
mov
jle
sub
fidivl
jnp
pop
add
cld
sub
or
add
and
pop
jbe
pushf
mov
jno
out
dec
icebp
je
dec
mov
jb
into
mov
stos
negb
repnz
cld
out
xor
mov
cs
jnp
es
call
and
test
sub
orl
ja
test
push
shlb
cmpsb
xor
loope
clc
test
and
in
jno
testb
stc
popf
mov
jmp
adc
mov
fistps
add
cmp
loope
aam
movsl
clc
adc
mov
imul
push
push
add
mov
add
or
lock
mov
inc
test
stos
push
fdivr
sub
clc
scas
jge
insl
and
lea
cli
push
repz
fdivrs
dec
outsl
add
mov
sti
or
add
insb
cmp
lock
aas
or
mov
xchg
stc
mov
dec
or
pop
mov
icebp
rorb
pop
and
mov
fwait
adc
shr
repz
pop
mov
cmp
test
fisubrs
dec
xchg
sub
jp
insl
dec
jmp
cmp
mov
mov
mov
or
dec
clc
rcrb
jp
and
hlt
or
xchg
xchg
gs
pop
jo
push
out
push
or
movsb
xchg
mov
scas
sub
rclb
cli
test
adc
jg
add
dec
popa
or
lret
xchg
fildll
xor
lret
push
push
gs
or
adcb
lea
es
add
inc
dec
sahf
pop
push
loope
pop
sahf
pusha
and
xor
lods
bswap
loop
mov
jnp
mov
je
mov
ja
or
and
xchg
mov
cld
mov
cmp
in
or
jg
cs
pop
loopne
dec
pushf
xor
pop
iret
push
inc
mov
cmpsb
push
loope
jle
sbb
mov
mov
inc
mov
inc
outsb
adc
in
sbb
adc
nop
int3
mov
cmpsl
adc
mov
loopne
outsb
xor
jo
cmpsb
dec
in
in
mov
xchg
jno
rclb
pop
ret
roll
push
add
mov
test
lock
test
lahf
push
into
or
nop
mov
aas
mov
test
jp
jecxz
mov
stos
xor
or
dec
ljmp
scas
xor
dec
je
jle
pop
and
push
xlat
lahf
xor
jp
push
jle
cmpsl
sbb
je
jecxz
inc
mov
mov
mov
fadd
sbb
and
mul
cmp
pop
rcrb
ret
stos
and
push
cmp
loop
jnp
cli
scas
add
imul
mov
push
scas
icebp
scas
test
ret
cmpsl
js
ret
mov
mov
dec
filds
loop
ret
out
sahf
sahf
cmp
sbb
add
call
stos
xchg
push
stos
xor
adc
pop
insl
fs
cmp
xorb
adc
adc
jbe
ret
push
sub
mov
mov
or
fldenv
dec
pushf
jbe
and
pop
test
lcall
hlt
loope
adc
inc
mov
or
and
add
mov
lret
je
or
dec
ret
sub
adc
add
pop
inc
sub
lock
add
pushf
imul
loop
outsb
push
fcmovu
scas
and
cmp
mov
adc
das
nop
sbb
push
ljmp
outsb
pop
fstl
xchg
fmull
das
nop
push
rorl
mov
fildll
lahf
js
adc
imul
cmpsl
add
out
js
dec
ja
pop
cmc
inc
push
call
mov
add
sub
pop
xor
int3
cmp
arpl
fistps
mov
arpl
fs
call
adc
sub
push
imul
and
cmpl
xor
adc
or
push
mov
jae
mov
sub
lahf
fidivrs
push
xor
inc
mov
in
subl
sahf
int3
xor
pop
popf
ficoms
test
adc
and
mov
mov
push
in
adc
cli
adc
sahf
fisttpll
shll
mov
je
xor
andb
lahf
and
sbb
adc
or
in
in
cmpsl
mov
inc
push
andl
fcomip
sbb
add
mov
add
mov
js
adc
or
addl
adc
andb
les
data16
mov
jp
fnstsw
pop
decl
xchg
sbb
fldcw
dec
inc
mov
inc
call
test
test
je
mov
mov
movsb
jbe
fdivr
shl
or
icebp
mov
push
ret
push
sbb
mov
std
aas
and
in
push
lret
xlat
push
rorb
sarb
pop
jl
cmp
mov
fcomps
not
clc
pop
sub
orb
or
jg
fisubrs
cwtl
sahf
decb
mov
jge
mov
inc
rclb
adc
mov
cmp
stc
pusha
xchg
pushf
push
inc
repz
mov
out
es
icebp
cmp
mov
stos
cmpl
fwait
sbb
aas
push
or
mov
insl
adc
xchg
push
inc
and
inc
add
dec
xor
lcall
xchg
lretw
push
cwtl
sbb
lods
sub
jle
jmp
and
ficompl
push
mov
sub
jle
sbbb
add
and
push
jmp
pop
and
pop
in
pushf
xchg
js
xchg
mov
int3
pop
scas
adc
test
cld
testl
sub
sbb
clc
adc
cmp
ret
clc
les
and
jecxz
mov
mov
push
ret
ss
repnz
pop
or
lds
and
or
mov
fistps
inc
enter
adc
cmpsb
adc
subb
push
pop
ja
xchg
inc
adc
and
test
push
pop
sbb
inc
jecxz
mov
clc
fsin
cmp
ret
sub
sarb
or
jecxz
jg
imul
call
add
xchg
xchg
add
pop
sar
subb
cli
push
lock
sbb
ljmp
push
scas
shlb
fcomi
ljmp
sbbb
xor
mov
subl
mov
test
xchg
dec
lock
movsl
test
cltd
sbb
mov
aas
std
out
je
movsb
popa
mov
mov
push
xorb
mov
movsb
push
push
push
adc
jecxz
ffreep
out
push
outsb
stos
xchg
xor
xor
mov
sar
mov
inc
and
push
and
and
lahf
cltd
lds
stc
out
or
cli
xor
test
cmp
sub
out
push
fs
aam
sbb
pop
cwtl
adc
mov
mov
hlt
jle
lret
add
push
push
rol
push
call
std
pop
add
lret
mov
lock
mov
adc
pusha
add
addr16
pop
inc
loope
mov
scas
in
or
dec
testl
repnz
repnz
sbb
mulb
test
mov
inc
leave
mov
in
sarb
adc
pop
jge
adc
push
add
jb
sub
cmp
inc
pop
add
test
dec
adc
push
pop
mov
icebp
xchg
aaa
movsb
test
lock
in
adc
sub
cmp
jge
lcall
dec
jns
fsub
push
lds
daa
inc
nop
jg,pt
inc
mov
sbb
jo
add
test
or
adc
loopne
cmc
aas
mov
and
jbe
push
fs
sahf
lods
adc
inc
sbb
xchg
out
xor
push
add
negb
mov
cmp
in
mov
sti
push
xor
mov
icebp
xchg
inc
jge
xchg
jbe
ss
jo
mov
adc
inc
aaa
shlb
jp
xchg
add
call
les
or
pop
enter
roll
test
mov
or
add
sbbb
add
add
and
add
call
test
lock
add
loope
and
sbb
mov
inc
mov
nop
insl
in
pop
and
and
or
cmp
and
and
or
sub
lcall
inc
mov
pop
xor
sub
cmp
inc
aam
nop
fnstenv
push
and
xor
sub
adc
and
jbe
pop
outsb
shlb
dec
adc
xchg
insb
mov
nop
mov
inc
push
mov
add
and
sub
fldenv
add
mov
and
push
pop
and
jae
mov
stos
out
mov
or
xchg
fnsave
push
test
mov
adc
mov
test
jle
sbbl
fidivrl
dec
or
mov
inc
adc
mov
adcl
mov
and
insb
pusha
outsb
lods
xor
inc
pop
inc
pop
popw
adc
mov
adc
mov
mov
bound
add
and
int3
add
and
bound
xor
ljmp
dec
pusha
inc
movsb
sub
xor
xor
rclb
fimuls
pop
ret
push
inc
bound
jbe
mov
fs
push
cmp
sbb
adc
mov
loopne
adc
xor
fcomp
mov
xor
inc
aam
add
push
cmp
stos
adc
cmp
jle
in
sub
inc
fcompl
stos
push
cli
inc
and
and
jnp
push
mov
test
mov
cli
clc
cs
dec
int
and
and
cmp
popa
data16
enter
loop
inc
test
mov
inc
mov
add
scas
xor
outsb
inc
mov
adc
or
push
xor
xorb
ficomps
or
loopne
je
cmp
test
adc
inc
adc
push
adc
push
mov
lods
sbb
int3
push
dec
mov
out
push
inc
add
fidivrl
clc
rcrb
add
mov
repz
add
adc
push
xchg
and
dec
dec
shr
pop
fadds
xchg
enter
lock
push
and
sub
add
sbb
in
and
lods
rolb
and
sahf
push
enter
fdivrs
push
popf
or
in
fldenv
mov
and
and
dec
add
xor
cmp
and
xchg
test
rorl
mov
xchg
shll
test
and
inc
insl
dec
inc
xor
cmp
jne
xchg
inc
adc
cmp
fdivl
add
in
cmp
movb
out
int3
and
int3
sub
add
xchg
popa
daa
add
aam
dec
pushf
rcr
dec
add
cltd
bound
push
faddl
xor
cli
in
orb
stos
sub
xor
nop
dec
add
push
sub
andb
xor
mov
xchg
daa
rcll
push
into
and
add
jnp
mov
adc
test
jbe
sbb
sub
aam
push
pusha
mov
or
and
xchg
cltd
lods
int3
ja
cli
xchg
out
push
mov
cmpsb
or
xlat
ret
mov
xchg
in
dec
push
mov
mov
jl
or
roll
scas
cmp
cmpl
hlt
je
int3
add
lock
mov
popa
xor
sbb
add
mov
into
dec
shrl
and
mov
push
lcall
fsubs
push
or
jp
or
adc
loop
sbb
loop
test
shll
lea
adc
xchg
xor
push
push
and
in
inc
jo
and
sarl
lret
add
jmp
cmpsb
dec
cmpl
jl
imul
adc
push
inc
cwtl
inc
hlt
xorb
ret
ljmp
cltd
pusha
in
jmp
add
xor
cmpsb
or
mov
test
addb
loop
into
mov
shr
dec
loopne
add
popa
jbe
bound
jl
push
mov
inc
xor
insb
pusha
mov
xor
mov
or
dec
push
test
pushf
push
addl
lret
test
daa
cmc
inc
mov
sub
sbb
xlat
fsub
or
roll
mov
add
xchg
pusha
icebp
cmp
inc
pop
pop
push
rorb
sbbl
cwtl
pusha
popa
ret
jo
add
jbe
je
and
or
jle
and
adc
fcmove
xor
dec
je
fcoms
repnz
cmp
sub
enter
and
add
fsubrs
sub
add
pushf
pushf
mov
sbb
mov
mov
or
xchg
adc
push
cmp
stos
inc
adc
or
sub
cmp
out
sbb
or
ss
ret
pop
or
push
cltd
adc
sub
mov
call
nop
and
pusha
push
mov
add
dec
adc
add
lods
mov
xor
or
jo
lea
mov
testb
push
mov
inc
andl
and
push
push
loopne
jp
enter
subl
ficoms
or
sbb
dec
inc
es
pop
inc
push
das
orl
int3
xor
xor
jbe
inc
push
cmp
dec
jbe
es
xchg
subb
jne
loopne
pop
jo
data16
jle
jbe
push
inc
jo
jl
dec
adc
add
xchg
test
push
cmp
and
pushw
push
pusha
xor
push
out
sub
pop
test
and
inc
pop
adc
inc
addr16
sbb
xor
addb
cwtl
repnz
adc
and
push
inc
xor
pop
into
in
pusha
ljmp
int3
dec
push
and
je
cld
mov
scas
pop
pop
inc
mov
push
add
lahf
jp
int3
loope
mov
je
enter
test
sar
mov
lcall
mov
push
hlt
mov
or
cmova
adc
or
adc
pusha
mov
jb
inc
adc
inc
inc
and
rolb
inc
test
fs
loop
cs
mov
mov
rolb
push
rclb
mov
sub
xor
mov
addl
dec
mov
pop
push
mov
inc
cwtl
pusha
shrb
int3
les
mov
lret
add
les
jnp
data16
rorb
sbb
scas
int3
mov
mov
pushf
or
jge
pusha
sub
push
test
cmp
mov
pusha
sbb
sub
cmp
ljmp
inc
and
or
mov
aam
testl
mov
adc
notl
into
push
sub
xchg
push
out
add
scas
mov
xchg
clc
push
mov
or
jle
xor
mov
test
into
test
rclb
xor
add
nop
mov
loopne
add
inc
push
pop
roll
xorl
push
andb
mov
push
push
push
and
lods
add
mov
and
adc
push
mov
pop
or
inc
nop
and
fcomps
sahf
ret
dec
inc
enter
mov
xor
pop
divb
cld
xor
fsubrl
pusha
mov
add
cs
pushf
int3
insb
popa
bnd
repnz
and
daa
int3
es
icebp
fs
cmc
fdivr
and
xor
test
pusha
loop
out
rclb
enter
bound
and
inc
test
cmp
pushf
xchg
add
jl
adc
mov
mov
cmp
sbb
or
inc
cs
js
adc
ficomps
lret
and
xor
popa
aam
enter
push
pop
lock
adc
xchg
je
mov
push
pop
test
or
dec
mov
out
mov
adcl
sarb
subb
and
push
adc
push
je
sbbb
out
mov
adc
xor
inc
int
popa
sub
sbb
push
xchg
movb
fsub
out
push
push
cmp
ficomps
lods
push
daa
mov
push
icebp
mov
jl
cmp
sbb
add
adc
inc
call
int3
dec
ret
pushf
adc
push
nop
fsts
or
inc
xor
ret
pop
stos
push
movsb
in
test
cmpsb
inc
push
jbe
or
data16
and
push
sub
cmp
xchg
dec
or
push
cltd
xor
and
cmp
xlat
or
adc
and
inc
repnz
pusha
das
xchg
adc
mov
or
cmp
adc
ds
pop
push
inc
and
les
fidivs
and
inc
test
add
inc
dec
and
cs
inc
and
cmp
or
dec
leave
or
insb
or
and
inc
mov
or
or
push
inc
add
push
lea
loop
or
mov
orl
push
es
push
add
adc
cwtl
hlt
jb
dec
pusha
cmp
loop
pusha
or
pop
pushf
jl
xor
and
pusha
inc
push
push
mov
dec
rorb
push
movb
or
nop
test
add
push
adc
and
xchg
loope
rcrl
cwtl
and
xor
inc
dec
out
add
adc
xor
mov
cld
adc
popa
or
dec
movb
inc
inc
cwtl
xor
ret
sub
out
test
xchg
out
and
xchg
fs
adcb
data16
pop
fs
sub
push
xor
mov
int3
add
js
mov
sbb
pop
cwtl
pop
mov
orl
sub
lock
pusha
addb
cld
or
dec
jo
adcb
loop
xor
arpl
imul
test
cmp
or
pushf
shlb
and
test
fdivl
arpl
in
sbbb
out
push
cwtl
jb
stc
push
loope
xor
or
aam
mov
inc
mov
and
or
cmp
test
cwtl
fs
xor
push
push
dec
andl
dec
stos
decb
xchg
cltd
adc
es
push
inc
xor
sub
dec
push
pop
sbb
decb
inc
cmp
xor
shll
xchg
or
lds
mov
test
add
pop
mov
adc
popf
in
dec
data16
sbb
push
cwtl
and
sbb
ljmp
out
ror
out
cli
addr16
ljmp
inc
out
inc
out
data16
push
xchg
clc
push
xor
pop
xor
push
ss
xchg
push
or
dec
bnd
xchg
and
xor
and
sub
inc
fsubs
aaa
dec
out
mov
repnz
pop
cmp
cmp
or
push
push
mov
cwtl
movb
cwtl
push
xor
cmp
push
pop
pop
mov
mov
hlt
stos
fs
mov
mov
loop
ficoms
nop
xchg
adc
int3
or
sbb
and
push
orl
mov
int3
push
add
loopne
bound
jno
pushf
mov
dec
xchg
fstps
cmpsl
or
and
aam
push
sbb
cwtl
xor
xchg
add
inc
pushf
sbb
cs
cmp
inc
enter
incb
xor
negb
cmp
fwait
sbb
mov
inc
rolb
sbb
jbe
cmp
adcb
nop
adcl
cmp
push
cmp
mov
adc
fidivs
mulb
inc
loope
xchg
push
or
push
int3
xor
outsb
sahf
cs
adcl
cmpsl
sbb
test
adc
inc
sbb
test
in
mov
loopne
or
or
dec
test
mov
enter
sub
pop
xor
inc
sbb
mov
rclb
sbb
xor
push
xchg
sbb
in
cmp
stos
sahf
js
ret
and
ret
loop
rolb
jl
rol
jne
and
addl
loopne
cmp
push
cld
ficoml
push
movsl
les
dec
in
lret
push
push
and
push
addb
adc
jb
loop
push
xchg
mov
ret
jne
neg
push
or
push
jb
add
push
adc
loopne
cmp
cmp
ret
mov
cmp
cwtl
or
dec
push
pop
fisubrs
test
js
push
dec
push
test
stos
xor
or
or
lret
adc
push
xor
imul
and
add
adc
inc
loopne
test
add
mov
adc
xor
inc
call
mov
mov
mov
cmp
out
mov
test
push
or
or
addb
xor
out
mov
push
out
mov
adc
enter
fadds
cmp
adc
data16
and
enter
adc
popa
mov
pusha
xchg
mov
dec
stos
pop
out
mov
and
lods
and
loop
dec
mov
jmp
cmp
lret
jno
xchg
cmpb
test
jp
bound
jp
add
add
push
and
adc
adc
dec
inc
xor
inc
xchg
inc
sub
push
or
push
inc
mov
cs
lock
xchg
and
ficoms
imul
dec
add
addb
mov
and
call
and
aam
adc
inc
inc
sbb
incb
rcrl
and
out
jge
dec
xor
add
dec
cli
loopne
int3
push
testb
js
xchg
hlt
push
or
dec
inc
sahf
cmc
int3
mov
loopne
adc
ds
xor
in
mov
xchg
pusha
nop
inc
rclb
xor
cwtl
push
out
sub
cld
pop
add
int3
dec
and
xor
mov
orl
mov
xor
mov
loopne
xchg
inc
inc
and
adc
and
sbb
xchg
dec
lock
push
test
pop
test
and
add
dec
inc
cmp
sbb
lock
mov
lret
lods
mov
inc
and
xchg
test
push
inc
shlb
or
push
sbbl
and
xchg
add
adc
loop
xor
and
sbb
inc
pop
pop
add
adc
movsb
adc
or
adcb
or
jbe
pop
subb
jl
dec
sub
push
mov
aam
dec
adc
push
pop
and
movsb
xor
sub
outsb
mov
pushf
pusha
add
push
lret
test
cmpsl
xchg
pusha
push
xchg
lret
push
ret
pusha
aam
cmp
inc
into
out
and
adc
and
mov
or
rclb
xor
sbb
loopne
sub
sbb
je
mov
and
xor
xor
push
addr16
fsubl
nop
bound
inc
loopne
cmp
adc
jbe
cwtd
or
pop
jbe
push
mov
and
xchg
pushf
rclb
sub
jl
inc
xor
sub
push
adc
xor
push
mov
rolb
mov
mov
loope
inc
inc
adc
nop
cmp
orb
push
xor
imul
mov
pusha
pusha
ds
movsb
cmp
xchg
dec
adc
mov
dec
daa
cs
adc
mov
js
jb
int3
pop
lods
add
dec
pop
int3
push
inc
popf
out
cli
nop
jb
or
xchg
lock
xchg
fsub
jne
jmp
add
jb
pusha
mov
lret
push
rorb
xchg
dec
ja
ret
jbe
push
and
shlb
inc
loope
repnz
ret
cmpsb
fidivl
pop
js
adc
orb
push
out
adc
mul
xor
cmp
lret
add
inc
lods
hlt
fcomps
sub
fadds
inc
mov
fsubrp
and
nop
sbb
xor
fmuls
mov
cltd
out
mov
ret
inc
fsubrl
sbb
sub
leave
adc
inc
fildl
in
and
push
mov
xor
adcb
push
mov
shlb
repnz
cmp
mov
test
pusha
push
mov
adc
dec
xchg
ret
dec
mov
jl
inc
sbb
mov
add
and
pusha
mov
dec
add
push
xor
mov
and
clc
inc
cmp
and
cs
adc
mov
push
inc
lea
xor
or
mov
cwtl
push
mov
adc
adc
push
mov
pop
or
cs
sbb
dec
mov
xchg
pusha
cmp
scas
or
push
stos
mov
and
xchg
jp
sub
leave
dec
xor
and
loopne
rcrb
pop
pop
mov
mov
cmp
jne
loope
pop
jl
inc
xor
mov
sub
mov
adc
sub
pop
push
xchg
add
cmp
push
nop
push
fisubrl
or
ret
adc
ret
adcl
cmpl
pop
add
xchg
or
add
addl
and
pusha
add
and
inc
lret
mov
pushf
adc
adc
aam
xchg
mov
cmp
jle
in
add
pusha
jp
adc
js
js
jo
sbb
notb
or
and
cltd
inc
dec
xor
add
es
mov
adcl
lods
add
inc
lock
adc
push
rolb
push
jle
xchg
xor
fiadds
outsb
mov
loop
xchg
add
sbb
sub
mov
aad
ret
sub
jbe
int3
sbb
add
and
sarb
and
push
call
jo
and
mov
stos
mov
or
inc
push
mov
sbb
and
aaa
loopne
dec
push
or
test
test
nop
aam
or
js
xor
or
mov
imul
push
adc
cmp
ljmp
xor
and
fidivrs
add
mov
pushf
pop
xchg
je
outsb
and
mov
shrl
sub
imul
or
in
mov
jl
es
mov
sbb
pop
leave
and
pusha
mov
hlt
hlt
add
cs
sub
mov
xor
xor
add
xchg
inc
lock
cld
or
cmpsb
adc
xor
dec
sbb
xor
pusha
ss
pop
mov
ds
lock
add
cli
and
fmull
pop
cs
dec
cwtl
lock
adc
pop
mov
and
sub
or
sbb
cmp
pop
test
mov
sub
push
ljmp
mov
xchg
lock
sub
adc
cwtl
rorl
inc
adc
add
mov
push
out
cmp
mov
ret
sahf
adc
adc
mov
dec
js
dec
cmp
js
adc
sbb
xor
sub
js
clc
jle
add
or
or
pusha
popa
cmpsl
sub
rorb
mov
sahf
inc
bound
rolb
push
pusha
lods
push
adc
sub
cmpsl
pop
jo
fs
nop
and
loope
es
les
and
call
test
js
cmp
pop
xorb
je
gs
loopne
cmpb
or
out
cmp
rolb
jo
jno
or
insb
adcl
das
popa
jo
sub
es
test
lret
add
add
test
pushw
mov
pushf
fcomps
sbb
loopne
add
dec
mov
xor
add
pop
out
inc
cwtl
shrb
test
add
inc
inc
je
jo
adc
adc
cmp
inc
ret
test
or
push
ljmp
lock
nop
cld
push
aas
addb
dec
adc
or
sub
push
add
and
xor
adc
cmp
mov
jmp
test
test
or
loop
adc
mov
test
mov
or
test
sbb
ljmp
push
cmp
cltd
sbb
sub
dec
pop
push
sbb
cmp
and
dec
sub
push
ret
cmp
pushf
test
adc
push
loopne
cltd
cltd
pusha
mov
jle
add
xor
xor
punpcklbw
jno
mov
loop
mov
cwtl
add
ret
stos
pushf
mov
sbb
mov
mov
xchg
pop
ret
arpl
lret
icebp
cli
mov
jp
inc
shlb
xor
in
into
popf
inc
pusha
dec
mov
fs
ret
or
xchg
and
add
ret
sub
pushf
or
stos
int3
push
popa
inc
loope
sbb
shlb
js
mov
ret
pusha
add
mov
adcb
lea
out
int3
adc
fidivrl
push
or
sub
dec
sbb
sub
shlb
lods
pusha
loop,pt
adc
push
pop
cmpsb
and
bound
xor
adcl
aaa
push
or
add
jns
mov
cmp
push
orl
add
orb
adc
inc
into
add
and
add
jnp
add
push
add
sbb
ja
xor
rclb
mov
add
cld
movswl
sti
sti
lock
adc
ud0
movups
lea
mov
iret
mov
in
adc
xor
mov
pusha
pop
mov
mov
mov
mov
jnp
ja
mov
mov
popa
xchg
cmp
aaa
clc
bswap
icebp
jg
adc
call
call
xor
mov
jg
jg
adc
cmc
hlt
cmc
icebp
lret
in
popa
add
xor
fwait
xchg
and
rolb
jecxz
add
add
adc
out
call
add
sbb
sbb
add
pop
pop
push
push
and
fistl
and
sbb
sub
or
add
sub
jnp
fwait
mov
das
sub
xor
xor
loop
in
sti
jbe
sub
add
xor
xor
push
xor
add
xor
cmp
cmp
xor
xor
and
mov
cmp
cmp
xor
add
push
dec
dec
add
mov
or
add
pusha
add
insl
add
insb
add
jns
jae
add
mov
imul
add
jnp
popa
ja
add
arpl
add
sahf
out
pushl
jb
js
js
jle
addl
xchg
xchg
fistpl
mov
add
bound
out
aaa
ja
xorb
shl
add
imul
xchg
outsb
jns
popf
jbe
mov
mov
lea
xchg
add
xchg
add
lods
mov
popf
lcall
push
pushf
lahf
lahf
mov
mov
mov
test
add
mov
mov
mov
movsb
test
insl
in
mov
test
movsl
stos
cmpsl
lods
push
test
test
stos
int
rcr
add
scas
stos
stos
push
scas
lods
scas
lods
push
mov
scas
out
mov
mov
mov
scas
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
mov
mov
mov
es
int
mov
mov
out
mov
roll
fildll
test
enter
stos
lret
leave
aam
mov
out
imul
es
les
mov
js
mov
enter
leave
pop
leave
lret
int3
lret
into
push
int
add
rorl
rcl
iret
add
rolb
into
mov
call
rolb
rcl
aam
aad
rcl
aam
aad
add
std
pop
mov
xor
xlat
aad
aam
fsubs
fsts
fcom
xlat
xlat
mov
mov
fsubrs
fadds
pop
fistl
mov
pop
fcmovu
dec
fcom
push
push
fstpt
sahf
fldenv
fcomp
fiaddl
fstp
add
fisttpll
adc
fstp
sarl
push
fimuls
ficomps
fidivs
repz
fimuls
loopne
fiaddl
push
xchg
ja
popf
fiaddl
fmull
dec
push
fsubp
fwait
out
repz
loopne
jecxz
fsubp
loopne
hlt
fistpll
stc
add
lock
lret
jbe
sti
push
loope
loope
loop
jnp
stc
in
add
out
in
in
out
in
out
call
in
push
jmp
and
int
es
dec
push
in
jmp
mov
push
jmp
jmp
in
dec
dec
in
push
out
add
in
mov
lock
lock
dec
sti
sub
es
notl
div
add
div
push
stc
repz
sub
hlt
push
push
push
pop
out
int
add
std
cli
add
add
cld
stc
xchg
fs
andb
pop
add
xchg
pop
push
addr16
push
popa
outsl
xor
hlt
pushf
mov
movsl
lods
mov
mov
decl
mov
fwait
scas
lahf
lods
stos
lods
lahf
stos
test
inc
mov
shlb
lds
mov
outsl
mov
mov
mov
mov
mov
ss
fcomip
mov
popa
mov
mov
cmp
mov
xchg
mov
sbb
outsl
lods
imul
mov
lds
ds
inc
inc
inc
in
mov
mov
shrl
jns
popa
test
cmp
fistpl
shlb
cld
mov
ret
fisubrl
les
stos
pop
push
enter
lcall
enter
pop
push
daa
mov
mov
mov
mov
mov
dec
hlt
mov
mov
int3
and
cwtl
pop
mov
nop
outsl
fadds
inc
mov
aaa
cmp
cmp
sarb
dec
mov
xchg
jg
mov
jp
mov
sbb
lods
mov
shll
cmp
in
mov
xchg
jbe
mov
hlt
mov
mov
cmp
shl
ret
mov
pop
popa
add
sbb
xchg
mov
lods
mov
clc
ret
mov
aaa
incl
add
les
mov
jle
and
in
mov
leave
mov
incb
insl
mov
ret
and
ret
add
sub
lock
mov
test
mov
fisubs
push
jb
les
add
add
mov
mov
cld
subl
sbbl
mov
es
mov
add
in
mov
es
mov
inc
mov
out
shll
mov
mov
out
push
sub
lds
in
lcall
imulb
das
mov
jg
mov
bound
jno
pop
lock
outsb
mov
adc
test
mov
or
fistpll
jns
mov
adc
mov
loopne
jbe
test
mov
in
leave
sarb
push
mov
sbb
add
jp
mov
addl
insb
and
inc
adc
mov
stc
mov
jnp
rol
mov
sub
insb
dec
mov
mov
dec
mov
pop
shr
push
repz
daa
aam
xlat
jecxz
loop
in
aad
aad
pop
jns
in
fcomp
out
pop
leave
js
mov
aas
push
jmp
jle
push
cmpb
call
out
out
jmp
out
adc
fisubrs
es
stc
loope
mov
ret
inc
fdivrs
lret
xchg
xchg
mov
pop
pop
pop
imul
bound
incl
lcall
xchg
call
loopne
lcall
adc
call
daa
adc
or
pop
cmpb
inc
sbb
dec
jg
jg
aam
mov
dec
lret
fs
sub
dec
das
add
add
lcall
pop
push
hlt
lcall
xor
dec
imul
cmpsb
out
add
sbb
insb
mov
jnp
idiv
fbld
bound
pop
pop
push
ss
orb
outsl
mov
mov
lret
push
push
mov
into
mov
or
pop
adc
or
lods
js
incb
cwtl
stos
cli
push
sub
mov
fistps
xor
xor
aas
sub
adc
call
xchg
repnz
mov
lcall
push
adc
sbb
fimuls
and
or
add
jg
cld
incl
add
sbbl
aas
mov
xlat
cltd
xchg
xchg
add
incl
xchg
cmc
add
sar
add
out
add
fcmovu
add
repnz
jb
mov
inc
add
inc
mov
inc
lahf
push
inc
sbb
daa
fsubrp
add
and
and
push
cmp
stos
stos
sub
mov
sbb
mov
pop
xor
fcomip
mov
xor
xor
mov
aaa
mov
es
js
popf
mov
jge
fstl
xor
das
ja
pop
int
divb
pop
xor
fldl
fcoms
inc
lock
movsl
inc
arpl
jg
ret
adc
scas
add
add
mov
jae
out
or
add
push
push
sbb
adc
add
insb
add
push
or
push
or
fnstenv
mov
cmp
cmp
cmp
push
sub
data16
inc
cs
xor
push
cmp
fildll
inc
pop
add
dec
push
add
repz
int
dec
dec
push
add
pusha
pop
ja
pop
insb
cs
push
popa
jge
fs
fisubrs
popa
je
pusha
jns
inc
add
dec
add
fwait
int
add
push
add
add
mov
insb
add
add
je
int
insl
jbe
addb
test
outsb
xchg
add
js
cld
out
mov
jl
sbbb
mov
shll
mov
mov
cld
lods
ret
add
mov
fldcw
scas
inc
push
mov
add
fwait
int
mov
xchg
add
add
test
lods
add
scas
add
fwait
mov
mov
mov
add
add
add
add
mov
insb
mov
add
ret
add
add
add
ss
int
add
add
add
add
add
data16
insb
add
add
add
add
cltd
popa
int
roll
aad
out
xor
data16
add
add
add
scas
insb
ss
lods
fldl
add
add
add
add
int
mov
add
add
add
add
add
or
jmp
add
in
data16
adc
repnz
insb
ss
int
hlt
add
add
add
add
mov
sbb
pop
cli
add
sti
add
mov
in
xchg
mov
stos
and
pop
adc
add
xlat
pop
sbb
add
xor
addl
das
inc
dec
imul
dec
inc
das
das
inc
add
ficompl
cmp
dec
dec
dec
dec
add
add
imul
push
xchg
sbb
inc
cmp
inc
inc
jae
pop
idivb
nop
ja
jl
je
jl
jge
xchg
mov
adc
jge
jl
je
pop
push
add
pop
je
jbe
jbe
cld
pushl
cmpb
cmpl
dec
xchg
test
jge
jle
jne
popa
adc
pop
repz
cmpl
js
jle
cmpl
imul
jb
jle
sub
pop
pop
pop
pop
popl
mov
and
jbe
addb
sub
pop
in
add
test
repnz
and
pop
mov
adc
dec
mov
test
bound
mov
adc
jne
ljmp
ja
addb
xchg
push
cmpb
cmpl
cwtl
loopne
mov
pop
mov
mov
imul
pop
outsb
sub
jb
jbe
imul
in
fcmovnu
pusha
jp
dec
sub
jp
jbe
imul
ja
inc
adc
add
jg
and
imul
imul
insb
lcall
sub
pop
push
dec
dec
push
pop
pop
cmp
jg
jl
dec
and
adc
dec
push
jbe
dec
daa
push
sbbl
sbb
pop
lods
rclb
pop
jo
jb
pop
sti
lcall
adc
jl
dec
push
push
mov
xor
jg
notb
sbb
pop
mov
pop
or
mov
es
je
or
xchg
mov
inc
push
push
adc
insb
and
nop
cmp
mov
pop
dec
xchg
orl
mov
jle
push
push
or
jg
fisttpl
pop
orl
dec
es
push
pop
ja
nop
lea
mov
and
or
jb
pop
je
or
imul
adc
outsb
jge
mov
das
jbe
sbb
ja
sbb
sbb
dec
outsb
jl
mov
lock
cmp
insb
jnp
push
sub
imul
inc
xor
mov
pop
hlt
negb
jp
cmp
sbb
mov
adc
cmpsb
jno
pop
and
push
push
sbb
pop
addps
pusha
cli
dec
jbe
push
daa
push
xchg
adc
push
stc
bound
imul
and
nop
pop
inc
cmp
sub
sbb
jl
mov
push
jne
jle
mov
push
sub
mov
addb
ja
lds
mov
sbb
lea
insl
test
mov
pop
js
mov
add
andl
dec
jl
rcl
push
mov
je
fsubrl
mov
sub
cmpsl
sarl
sub
ss
dec
xor
adc
daa
push
mov
mov
in
pop
lods
enter
mov
aam
fwait
stos
jle
subl
mov
xorl
rcrb
mov
cmpsb
xchg
push
lret
lret
mov
fisubrl
mov
push
jle
mov
mov
outsb
push
jge
or
add
hlt
jg
pop
pushf
jl
add
sahf
and
jbe
sub
push
add
sub
sbb
ja
jp
inc
mulb
clc
push
add
jp
and
fdivrl
jg
pop
or
or
dec
mov
add
push
jle
dec
push
dec
add
pop
add
add
fldt
fstl
cmovae
mov
mov
rolb
ror
jl
or
dec
push
xor
mov
xchg
add
mov
cmp
std
lret
push
mov
rcrl
xchg
add
mov
mov
sub
jbe
cmp
adc
repnz
add
stc
and
pop
das
dec
dec
pushf
movsl
push
cmpsl
add
movsl
cmp
push
mov
pusha
add
or
pushw
inc
add
aaa
xchg
xchg
xchg
jbe
fildl
int
in
fildl
push
push
add
cld
inc
add
push
adc
or
clc
add
addl
pop
or
cmp
push
push
orl
jg
mov
decl
nop
popl
mov
mov
mov
loop
fcom
add
out
add
lock
mov
movl
bnd
inc
mov
ret
enter
int
mov
and
mov
int3
int3
cmp
mov
cmp
cs
movsl
lods
notb
mov
jnp
in
test
loop
sub
popa
sub
pushf
int3
add
mov
dec
mov
push
add
pop
enter
or
add
addb
dec
scas
rolb
out
xor
sahf
movsb
stc
add
add
and
or
sub
sbb
sti
adc
add
add
pop
icebp
sub
in
inc
add
sub
sub
add
ss
push
cs
add
aaa
push
add
cmp
pop
pusha
cmp
jbe
sbb
push
and
and
add
inc
popa
add
ja
dec
jle
mov
ss
and
cs
inc
and
push
dec
jns
add
lret
cs
push
mov
mov
mov
dec
test
push
addb
mov
pop
nop
sti
decl
jbe
mov
xor
add
pop
xchg
add
pop
xchg
add
push
arpl
jle
lea
sub
xor
push
push
outsl
lcall
outsb
lcall
xchg
add
jns
xor
add
hlt
lods
ljmp
ss
add
inc
jno
inc
inc
jge
jle
inc
jle
add
lods
call
orl
sbbb
cs
push
je
mov
xorl
jg
lea
add
mov
xchg
inc
dec
xchg
mov
push
lahf
int3
add
add
shrl
pop
add
fldl
cmpsl
les
into
jmp
add
ficoml
mov
push
scas
je
xlat
add
add
fwait
or
insl
mov
out
push
rclb
jno
in
add
testb
fimull
jle
repnz
repz
push
ja
faddl
ret
bound
cmp
mov
cmp
mov
push
xchg
xchg
nop
outsb
cltd
popa
mov
xchg
push
xchg
xchg
jbe
cwtl
push
sbb
outsb
xchg
ds
mov
cltd
pushf
lahf
add
test
add
stos
data16
mov
cmp
add
insl
mov
push
stos
test
cmpsl
stos
and
mov
test
add
mov
into
fimull
mov
scas
push
mov
sbb
mov
into
mov
iret
mov
fnsave
insb
push
iret
mov
sarl
ss
scas
iret
mov
ret
mov
lods
fst
mov
lret
mov
push
push
std
outsb
fcmovnbe
ret
ret
scas
lds
int
mov
jle
fcmovne
mov
rol
dec
pusha
push
int
mov
rol
add
aam
ljmp
fdivr
lahf
data16
jecxz
out
mov
xchg
sahf
cli
lahf
out
mov
mov
sub
ret
lret
lret
out
enter
jl
fbstp
push
ror
lret
rcr
shlb
ror
sbb
loopne
push
fcmovnbe
rcll
pop
mov
mov
in
outsb
out
roll
fstpt
loop
jecxz
push
mov
mov
jmp
mov
fstl
pop
in
add
fisttpll
ss
in
loope
int
pop
xchg
loop
jmp
push
jecxz
in
jmp
out
inc
loop
add
jecxz
in
hlt
mov
stc
mov
push
ljmp
fildl
cmc
mov
std
out
pop
sbb
fcomp
pop
les
mov
mov
std
add
push
out
add
in
in
in
jecxz
sub
out
loop
out
ljmp
jge
pop
repz
stc
call
push
in
cli
out
int
xchg
pop
push
idiv
divw
loopne
add
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
cmp
adc
xchg
xchg
ss
push
and
jae
xor
fildl
jecxz
sahf
cmp
push
push
and
add
ja
imull
adc
fsts
fcom
xlat
jecxz
jecxz
or
mov
push
sub
fdivrs
rcr
rcll
rcl
scas
test
push
cmpsl
scas
mov
ror
rcl
shrb
scas
mov
sub
xor
scas
test
in
sar
add
fwait
test
lret
sub
jnp
mov
fscale
xchg
mov
xchg
imul
fdivs
push
outsb
jbe
lahf
scas
fdivrs
jbe
jne
mov
clc
negb
pop
scas
pushf
jge
imul
sar
imul
scas
ret
sub
outsl
mulb
std
ljmp
sub
pop
sub
or
dec
mov
jl
sarb
std
jg
sti
inc
outsb
mov
pop
int
or
or
sbb
push
push
adc
int
addr16
adc
sub
jg
lcall
lods
mov
or
sub
and
std
ljmp
aaa
cmp
xor
sbb
mov
test
xor
pop
je
lods
std
stos
orb
sub
cmp
sbb
aas
rcrb
fbstp
subb
adc
sti
adc
jb
sbb
in
popa
pop
push
repz
aaa
push
jo
lahf
jo
ucomiss
push
lods
jb
pop
sbb
fs
sti
in
sti
mov
aaa
or
mov
stos
sub
mov
jg
scas
sti
jmp
mov
pop
sbb
sbb
dec
pop
mov
jmp
pop
pop
pop
addr16
inc
cmp
dec
pop
ljmp
dec
adc
cwtl
loope
adc
sbb
cmp
push
add
popf
jecxz
inc
xor
sub
cmp
cmp
push
out
clc
mov
sub
and
xor
sub
stos
dec
aam
scas
flds
daa
mov
mov
ret
notb
out
imul
sub
sti
mov
rcrl
ret
xor
sti
cmp
in
sub
lods
lret
stos
mov
call
pop
jmp
shlb
mov
pop
loope
jmp
in
jecxz
shrl
mov
ror
xor
pop
stos
stos
mov
lds
pop
icebp
les
insb
cmpsb
mov
mov
push
mov
shll
loop
fs
pop
mov
fidivs
mov
loope
mov
or
rol
out
mov
icebp
out
std
cld
insb
sub
into
mov
lds
sub
rcr
mov
aad
mov
fcmovnu
fucom
jmp
les
mov
ss
jecxz
ja
push
mov
mov
rorb
js
or
out
sub
fmulp
mov
push
mov
std
pusha
icebp
out
into
lds
les
out
into
into
aad
lods
sub
or
outsb
addr16
push
jmp
mov
mov
jp
pop
jnp
out
mov
adc
sub
gs
ljmp
or
addr16
bound
aam
test
outsl
idivb
cmpl
mov
std
fldenv
mov
push
jno
inc
jb
mov
incl
mov
cmc
pop
add
mov
jg
push
movsb
mov
mov
jae
push
push
inc
jae
ret
mov
divl
push
in
testb
push
icebp
lock
xor
pushl
movsb
andl
ja
sti
fidivs
xchg
mov
idivb
pop
pop
enter
andb
and
sub
push
xor
sub
pusha
jae
xchg
jns
dec
enter
clc
sti
mov
repz
sbb
or
pop
int
inc
ja
ljmp
jo
sub
mov
or
mov
xchg
mov
push
add
xchg
xchg
sub
mov
mulb
mov
pop
push
in
adc
or
or
cmp
mov
sbb
push
adc
leave
pop
stc
clc
stc
loop
or
divb
arpl
push
mov
cmc
jbe
fisubs
push
add
cmp
mov
data16
in
add
adc
sub
jmp
arpl
mov
mov
mov
sbb
xor
adc
sbb
notb
fnstsw
stc
cmp
cld
stc
insb
or
not
mov
jbe
cmp
add
repnz
aaa
clc
repnz
clc
cld
sarl
cld
or
add
fistpll
pop
fidivrl
mov
mov
lods
jmp
add
imul
leave
testl
leave
out
push
fnstsw
and
jnp
std
mov
arpl
push
push
dec
and
add
std
cmp
repz
sar
pop
add
push
das
cmp
aaa
jnp
es
push
and
std
cltd
cld
or
jae
add
or
and
mov
fidivs
adc
adc
xor
adc
adc
sub
rolb
cld
std
ret
pop
mov
adc
pop
repnz
mov
adc
pop
imul
xchg
xchg
and
outsl
jle
sub
and
xchg
xchg
push
and
out
data16
out
loopne
pop
sub
and
lods
xor
fisubrs
push
add
pop
aaa
cmp
cmpl
add
pusha
ds
mov
dec
push
or
or
pop
loop
insb
aaa
xor
aas
out
ret
ja
cmp
jb
fisubs
mov
inc
sub
or
ret
popa
mov
xor
xor
inc
rorl
in
mov
fiaddl
mov
dec
push
arpl
ds
repnz
mov
xor
or
jbe
pop
add
pop
adc
add
dec
mov
push
mov
arpl
dec
movsl
jns
jae
je
cld
ljmp
dec
dec
add
push
push
add
pop
arpl
or
add
insb
jae
adc
mov
fstl
jl
jbe
es
push
jae
je
dec
shr
andl
test
xchg
xchg
cmpsb
rclb
sub
xor
xor
imul
mov
dec
movsl
mov
roll
dec
pusha
rep
outsb
pushl
add
lret
ljmp
fdivs
xchg
nop
out
fwait
xchg
add
movsb
add
scas
scas
add
rorb
push
inc
aaa
aad
aaa
push
dec
mov
sbb
fwait
add
test
push
int3
or
xchg
mov
push
lods
movsb
outsb
insb
aaa
int
push
mov
aam
out
sarb
ret
dec
mov
pmaxub
fidivrs
lock
push
jmp
add
hlt
repz
push
xor
or
adc
pop
nop
incl
push
push
push
dec
xor
dec
dec
push
push
pop
clc
jbe
mov
xor
inc
dec
dec
dec
push
cmpsw
ret
lds
inc
pushf
add
outsw
sti
dec
push
inc
pop
push
dec
pusha
inc
bound
pop
sti
jmp
and
and
xor
push
out
sbb
sub
sbb
and
xor
xor
sbb
sbb
mov
mov
pop
pop
push
es
dec
pop
ja
sbb
and
popa
into
loopne
xchg
inc
pop
pop
sbb
shr
pop
popa
pop
or
rol
jnp
and
sub
add
sbb
popa
pop
or
insb
lret
into
popa
inc
pusha
add
fnsave
popa
add
lds
popa
pop
roll
stos
loop
roll
sub
shlb
sub
rcrb
and
sbb
dec
pop
pop
or
mov
and
fs
and
shlb
and
mov
shlb
les
and
arpl
xorl
es
and
aaa
and
shll
jmp
add
inc
inc
pop
push
jg
or
popa
dec
bound
and
inc
inc
aas
push
fstps
in
adc
push
pop
rorb
lods
inc
sti
sti
in
les
arpl
dec
push
dec
pop
jnp
popa
out
pusha
ret
fs
fsubs
popa
les
sbb
mov
outsb
mov
or
fcmovnu
lods
testb
dec
adc
popa
push
xchg
push
stc
decl
or
sbb
sbb
sbb
or
sbb
push
cld
cmpsl
aas
mov
pusha
or
pop
and
sbb
sbb
cmp
pop
pusha
add
loope
pop
or
ds
cmp
xor
or
outsl
push
and
pop
add
push
adc
cmp
adc
or
sbb
jnp
nop
loopne
pop
add
xor
popa
pusha
and
addr16
fsubrs
dec
pop
add
imulb
add
add
pop
mov
ret
or
iret
inc
inc
test
add
adc
or
adc
add
mov
mov
sbb
fmuls
xor
sub
xor
xor
cmp
pop
inc
movb
xor
inc
test
dec
aaa
add
jg
and
push
push
cmp
or
pop
add
dec
pop
add
inc
push
add
dec
pop
add
push
pop
sti
in
aaa
incl
push
push
add
add
push
arpl
push
jle
ljmp
add
dec
add
inc
add
inc
add
push
add
pushl
mov
add
pop
pop
pop
add
pop
pusha
pop
add
inc
add
insl
fisttps
dec
add
push
sahf
pop
add
popa
push
popa
cmp
cld
cmpsl
push
addr16
imul
outsb
outsb
dec
int
mov
add
fidivs
add
jge
addl
push
subl
mov
push
jns
add
jl
add
lea
cmpsl
loopne
insb
fwait
popf
fwait
stos
movsl
scas
mov
adc
outsb
mov
mov
mov
inc
sub
rolb
into
xlat
mov
into
clc
dec
cwtl
sub
hlt
stc
outsl
ss
inc
jbe,pn
cwtl
cmpb
out
dec
xchg
add
pop
pushf
add
in
mov
lea
add
cmpsl
mov
test
push
xchg
imul
out
stos
push
xchg
lods
mov
fwait
lods
xchg
lods
mov
cltd
mov
pop
mov
mov
sahf
mov
and
scas
mov
push
mov
out
add
mov
ljmp
roll
add
add
repz
mov
lret
lds
pop
push
pushf
int3
es
into
xchg
rorb
lds
lret
insl
mov
scas
into
push
test
aad
iret
fcmovnbe
fwait
fwait
outsl
push
rcr
add
aad
add
in
mov
xlat
cs
add
cmpsl
loope
insl
fldt
loope
in
fsubp
mov
ljmp
push
mov
loope
in
fimull
mov
fstp
outsb
fcmovnu
push
mov
mov
out
fucomi
add
lcall
mov
mov
mov
es
data16
sti
out
cli
add
mov
in
out
mov
hlt
add
mov
insb
mov
stc
call
mov
pop
or
std
add
xor
enter
shlb
fsubp
frstor
jecxz
ret
in
mov
imul
in
out
out
lret
mov
insl
push
jmp
call
add
jmp
add
jmp
mov
into
in
ss
jmp
lret
int
mov
mov
shr
lds
push
in
stc
in
push
sarb
out
decb
push
in
int
in
outsl
push
push
int3
out
shr
testl
icebp
icebp
ds
iret
fcoml
hlt
sti
push
rcll
cmc
repz
fnstenv
hlt
int
lret
data16
xor
int
enter
stc
ds
cmpsl
cltd
out
aam
cli
add
rcl
push
hlt
pop
mov
repnz
inc
in
in
in
pop
pop
in
cld
add
sub
sbb
xor
sar
outsb
rcrl
adc
cmp
jp
push
pop
mov
or
or
cmp
cmp
mov
sub
sti
add
mov
cwtl
cmpsb
stos
dec
or
pop
dec
or
dec
cmp
shlb
push
daa
idivb
mov
fsub
jmp
and
in
mov
outsl
pop
cmp
and
bound
jge
into
jmp
fstps
mov
cmpsl
in
xlat
pop
clc
jg
push
sbb
inc
dec
dec
mov
aas
sbb
adc
inc
dec
push
in
incl
inc
sbb
add
mov
lahf
nop
pop
ja
iret
loope
xchg
inc
cld
aaa
and
push
sub
clts
nop
mov
add
sbb
repnz
adc
sub
das
pop
das
sub
sbb
push
shl
loope
pop
pop
dec
push
sbb
pusha
sbb
out
fistpll
or
lock
jp
repz
and
cmp
and
sbb
mov
out
aad
sbb
and
aad
cld
ficompl
sbb
insb
fwait
mul
aas
add
dec
pop
in
lock
adc
sub
sub
adc
add
fs
insl
sahf
fdivp
out
lahf
jl
add
add
sbb
mov
bound
inc
inc
push
inc
jg
mov
pushf
lods
int3
popf
sbb
push
inc
bound
div
div
iret
pop
popa
fs
fcmovu
int3
call
inc
sbb
clc
idiv
pop
or
sub
add
jmp
cld
idiv
fidivrs
jne
mov
movsb
in
sti
cli
cli
sti
hlt
or
pusha
xor
pop
xor
scas
jmp
lock
lods
sbb
cmc
fdivr
fistps
outsl
jg
je
je
add
mov
fsubr
fmul
sbb
hlt
loop
or
aas
shrl
jns
mov
fsubr
out
xlat
sbb
sbbb
xchg
test
cmp
xchg
cltd
mov
call
test
fwait
test
jb
arpl
pop
sti
add
pusha
fdiv
loopne
iret
fiadds
cmp
mov
add
and
mov
mov
stc
add
aaa
push
push
loopne
sbb
dec
dec
inc
mov
mov
fcomp
shl
loope
add
in
xor
jae
mov
pop
mov
mov
fsub
jmp
and
xor
icebp
hlt
xor
mov
mov
out
ret
loopne
lock
out
in
pop
mov
pop
mov
mov
fldt
icebp
lock
lods
scas
mov
in
out
loope
repnz
jecxz
shlb
pop
clc
repz
mov
mov
ljmp
xor
adc
aad
add
pop
jae
add
scas
arpl
adc
jo
jo
add
and
scas
popl
int
imul
lock
iret
repnz
fidivl
xor
add
dec
scas
pop
lock
inc
ja
lret
inc
add
data16
dec
scas
ja
fstpl
add
scas
scas
cmp
ja
inc
xchg
dec
mov
dec
or
jg
xchg
inc
sarl
mov
dec
adc
push
movsl
inc
scas
mov
jne
lods
pop
dec
scas
mov
lcall
dec
dec
add
inc
pop
scas
mov
or
adcl
xchg
mov
aas
mov
xlat
dec
pushf
push
inc
add
lcall
add
ljmp
dec
or
or
cltd
cltd
stos
jmp
push
mov
into
test
or
adc
repnz
mov
cs
cld
cld
sbb
iret
cld
fists
jns
push
cltd
cltd
ja
cld
hlt
mov
in
inc
cld
dec
iret
iret
or
bswap
dec
insb
inc
lock
or
cld
cld
jg,pn
decl
stc
jmp
in
fxam
fistpll
out
iret
iret
int3
iret
cs
cld
out
lret
mov
aam
inc
add
out
out
shl
stos
cltd
xchg
inc
push
pusha
add
cltd
lcall
sbb
adc
xchg
sub
jg
add
push
movsb
and
cmp
add
pop
pop
add
or
jle
xor
cmp
enter
push
pushf
test
add
scas
icebp
fisttps
cld
int
rcr
out
loop
mov
in
add
div
adc
pop
out
add
ret
add
or
mov
lcall
mov
mov
add
in
fucom
pcmpeqd
xor
push
lock
es
or
mov
mov
shrb
or
js
ja
or
subb
iret
dec
movsl
xchg
xor
adc
test
jge
push
push
push
aaa
add
sub
lret
add
add
xchg
jo
jno
sti
xlat
xchg
push
stos
add
shl
mov
add
push
test
fucom
outsb
pop
lret
sub
mov
xor
test
dec
pop
lret
cltd
cltd
test
add
mov
jle
mov
mov
pushf
pop
gs
lea
inc
mov
xchg
lret
dec
xchg
mov
jg
xchg
cmpsl
dec
lret
cwtl
xlat
xor
adc
pop
fsubrp
pop
int3
mov
add
inc
ja
pop
in
push
adc
lret
add
add
add
jb
ds
mov
aaa
popf
cmpsb
test
xchg
sbb
and
ficompl
orb
xor
cmp
test
fidivrs
xor
add
adc
ss
int
mov
adc
adc
inc
dec
dec
add
dec
dec
push
jle
insb
fwait
dec
push
push
mov
inc
inc
push
dec
inc
add
pop
pop
outsl
fucomi
ficompl
pusha
pop
jle
pop
add
push
dec
iret
outsb
pop
sti
dec
dec
add
dec
dec
ds
insl
push
dec
je
es
push
mov
cwtl
pop
jl
add
add
push
add
push
outsl
sti
scas
push
je
fwait
fwait
jns
dec
jl
ds
xchg
cs
add
mov
mov
outsb
nop
mov
jne
pop
jp
jg
fistl
jle
xchg
lahf
cwtl
add
mov
fdivs
mov
ljmp
pop
push
sti
incb
pushf
xchg
test
jle
lahf
mov
mov
outsl
push
mov
cwtl
lea
add
hlt
out
cli
xchg
add
cltd
add
xchg
stos
movsb
add
scas
test
cwtl
mov
mov
xchg
lock
mov
mov
pop
mov
add
sarb
add
jne
pushl
dec
mov
jle
aad
mov
das
ds
lods
out
scas
push
mov
ret
add
mov
mov
idivb
rolb
mov
mov
aad
push
aam
dec
xlat
int3
xlat
into
rcrb
push
rcl
leave
add
ror
push
rcr
push
fcom
fistpll
push
rcl
rolb
fcom
add
fxch
add
fcomi
idivb
iret
add
add
push
out
pop
loop
fldt
xchg
aam
add
fld
push
xlat
push
std
fcomi
fists
subb
push
in
in
out
in
add
loope
add
ss
out
call
loopne
out
js
out
mov
int
lock
push
in
out
cld
jecxz
cli
jecxz
adc
insl
cld
in
repnz
add
out
inc
cmc
out
xor
xchg
in
in
ss
outsb
lock
xor
jmp
repnz
icebp
xlat
int
jbe
into
outsb
not
loopne
push
jmp
mov
push
fisttpll
ffreep
jecxz
add
in
add
out
data16
fbstp
fucomi
out
loope
call
in
call
mov
loope
sti
loope
add
ljmp
mov
repnz
hlt
out
push
stc
jmp
out
mov
imul
call
scas
out
push
mov
lock
push
call
jbe
divl
pop
cli
lock
repnz
icebp
out
imul
jnp
mov
push
xacquire
insl
pop
cld
push
cli
repz
bnd
hlt
cld
push
cmc
sti
test
fldt
sti
idiv
into
clc
out
sti
rorl
push
push
jmp
out
out
repz
push
hlt
outsb
push
lock
push
std
hlt
push
cld
insl
and
repnz
testb
gs
cmp
sti
stc
fdivs
jbe
lock
push
cld
clc
ss
cs
cli
incl
cmc
stc
fisubs
out
div
cli
cld
call
cli
repz
int3
push
push
ds
std
cld
sti
push
push
clc
cld
jecxz
xor
jmp
std
std
push
cld
decb
or
adc
add
push
or
adc
mov
inc
loopne
out
out
xlat
clc
fadds
mov
idiv
pop
cmp
mov
fdivr
xchg
mov
sti
fidivrs
addb
aaa
insl
push
std
decl
or
and
sbb
push
or
mov
adc
mov
jmp
sbb
and
or
pushl
incl
xor
dec
dec
add
cmpsl
test
jecxz
lret
aas
mov
out
xchg
cltd
add
xor
dec
js
push
push
aaa
insl
clc
iret
fs
mov
lret
frstor
mov
pop
pop
xor
pop
push
lods
je
arpl
lcall
mov
fabs
repnz
clc
jbe
lods
push
jg
mov
sarl
jns
in
fisubrs
in
repz
lock
mov
test
shll
icebp
stos
xchg
fwait
scas
cld
aad
mov
ret
rcl
into
sar
scas
xor
dec
insb
icebp
gs
ja
shrb
jno
insb
push
mov
lcall
jo
jae
pushl
sub
fcmovu
icebp
sti
or
push
inc
inc
xor
ds
fsubr
cmp
aas
inc
inc
inc
inc
push
pop
or
xor
test
insl
mov
sbb
adc
das
divb
adc
sbb
add
aas
or
ljmp
icebp
dec
sbb
and
inc
sbb
pop
and
fcmovu
add
or
xor
push
shrb
aad
mov
pop
in
jns
push
dec
xor
xor
jb
sub
pop
pusha
adc
pop
clc
push
idiv
push
je
je
stos
lods
add
call
xor
xor
sub
sub
fistps
xor
dec
pop
aaa
aaa
mov
in
pop
pop
xor
mov
and
bound
pop
dec
bound
cmp
cmp
je
jae
pop
daa
pop
sub
es
das
bound
out
int3
les
add
jnp
stos
jg
clc
std
test
push
xor
and
push
fs
test
xchg
push
and
mov
push
and
add
xchg
add
fs
xchg
scas
mov
call
jle
mov
cmp
pop
add
ret
jge
mov
insl
pop
testl
jl
das
fcompl
lea
cli
add
pop
push
dec
sub
subb
jle
movups
pusha
das
les
pop
pushf
add
xchg
pop
mov
adc
pop
pop
pop
adc
imul
add
cmp
pop
cmp
add
or
or
push
mov
pop
push
pop
shlb
test
call
nop
mov
mov
pusha
rorl
lods
xor
stc
mov
add
ret
push
ss
pop
jge
xchg
mov
xchg
xor
not
jnp
popf
mov
scas
cmp
movsb
or
mov
test
std
cld
out
add
inc
or
and
pop
out
stos
popf
popf
fimull
testb
add
popl
enter
and
sbb
sub
dec
aad
mov
or
and
repz
or
dec
and
aas
add
mov
or
pop
add
insb
adc
pop
add
and
outsb
lret
push
xor
js
lahf
data16
push
sub
inc
es
push
cmp
mov
in
add
js
sbb
dec
inc
cmp
push
inc
push
add
inc
mov
cs
add
xor
add
cmp
push
imul
aaa
inc
decl
add
dec
pop
add
push
or
add
dec
inc
add
pop
push
mov
push
jb
add
gs
add
dec
bound
xchg
lcall
push
pusha
push
js
mov
pop
jb
ss
popa
jnp,pt
data16
sbb
add
arpl
sbb
push
imul
je
push
push
mov
fldt
pop
jne
push
push
xchg
pop
add
sub
das
push
mov
sbb
xchg
cmp
test
ret
jg
push
mov
ss
xor
xchg
push
add
sub
test
in
pop
insb
fcoms
mov
out
push
or
out
sar
jo
clc
imul
js
add
pop
and
mov
cmp
in
mov
insb
dec
data16
mov
subb
lea
xchg
push
push
sbbl
mov
fildl
push
incl
xchg
xchg
pop
fiadds
jg
push
add
xchg
pop
mov
mov
std
inc
jecxz
inc
mov
sbb
xchg
add
xor
add
insl
xchg
push
fdivrl
adc
xchg
xchg
jge
xchg
jge
fists
inc
insl
stos
add
mov
inc
inc
les
jo
rcll
insl
out
mov
fidivs
test
add
add
andb
stc
in
jg
push
adc
mov
push
nop
scas
add
stos
adc
mov
xchg
mov
cwtl
mov
and
cmpsb
dec
mov
mov
mov
mov
add
inc
pushf
mov
push
sahf
nop
add
outsl
xchg
push
inc
lods
sahf
mov
adc
push
pushf
push
jbe
cmp
mov
add
lods
add
adc
mov
add
sbb
inc
shll
mov
scas
lods
xchg
ljmp
mov
add
roll
mov
add
sarb
iret
add
mov
pop
rcr
adc
or
int3
sti
fbstp
cmpsb
in
lret
rcl
jbe
flds
jge
fbld
mov
jecxz
lretw
mov
call
sahf
in
pushf
stos
push
test
xorb
mov
mov
mov
scas
mov
mov
mov
fsubrs
lret
shr
leave
out
mov
data16
test
lret
mov
mov
rcr
scas
sti
rorl
fisubrl
insb
insl
outsl
jmp
push
lcall
mov
mov
fildl
aad
fnsave
mov
fbld
out
clc
cmpsb
stos
lods
fwait
mov
in
mov
aam
in
das
fmuls
or
into
xchg
int3
cmpsb
mov
or
int
xlat
mov
fbld
aam
mov
data16
in
mov
add
fildl
loope
loopne
mov
pop
mov
in
cmpsb
out
dec
out
testb
sti
push
out
out
subl
cli
jbe
data16
loop
ret
icebp
add
in
hlt
in
xchg
xor
push
in
movsl
fbld
aaa
bound
mov
arpl
das
sub
push
push
adc
add
pop
pushl
cmc
aas
pop
jno
mov
sti
mov
lock
mov
repnz
pop
sbb
push
push
and
adc
mov
fneni(8087
xchg
mov
fnstsw
lret
jl
sub
sbb
and
outsl
mov
lret
fcmovu
fcomip
loope
lret
lcall
sub
pop
pop
mov
pop
das
mov
div
mov
div
out
jmp
pop
and
jg
mov
neg
std
push
mov
cmc
call
pop
int
push
imul
mov
jmp
add
pop
aad
sti
mov
ret
mov
pop
stc
fistpll
mov
cld
out
or
pop
js
repz
mul
jbe
sar
jae
mov
shrl
dec
rcrl
hlt
fdivrl
std
iret
decl
pusha
test
or
icebp
neg
or
xorl
idiv
cmc
lcall
xchg
movsb
mov
or
or
or
pop
or
cmp
aad
push
jns
hlt
sar
in
aas
adc
movsb
inc
inc
dec
dec
or
repz
or
or
or
xor
outsb
ret
mov
lcall
dec
push
push
push
dec
dec
inc
inc
dec
dec
dec
dec
inc
adc
daa
cmp
jg
clc
mov
stos
test
mov
addr16
push
push
popa
popa
push
lahf
xchg
inc
push
dec
sbb
sbb
es
xchg
jnp
lcall
cmp
pop
pop
pop
repnz
nop
xchg
dec
inc
inc
inc
lock
sbb
add
aaa
sub
jno
and
sbb
test
inc
or
cmp
sbb
lahf
lahf
mov
push
or
or
add
jne
pop
ds
mov
or
sub
jo
test
and
pop
inc
test
xchg
pop
fisubs
sti
cmp
cli
or
test
pop
incb
mov
or
lahf
call
mov
hlt
jmp
or
scas
pop
xchg
xchg
push
out
push
mov
in
cld
and
out
mov
jg
test
rcr
lret
ret
xor
pop
jnp
int
mov
rcrl
scas
inc
sahf
enter
loope
int
jg
push
xor
mov
add
sti
idivl
add
rcrl
imul
mov
mov
mov
mov
jmp
andb
sub
mov
cltd
add
das
push
cmp
cmp
pushf
das
ja
sub
or
and
jecxz
sub
xor
mov
pop
sub
inc
repnz
xor
add
cmp
iret
mov
ds
jbe
jmp
adc
adc
push
sbb
or
or
sbb
adc
add
adc
adc
sub
nopl
push
es
pop
fcompl
and
add
sub
cmp
cs
sub
cmp
ss
cmp
add
out
xor
dec
push
push
inc
ds
inc
outsb
arpl
add
cmp
sbb
push
jg
outsl
push
cmp
inc
add
push
push
aas
pop
add
dec
jo
xor
add
incl
pop
dec
inc
add
dec
add
inc
add
pop
dec
inc
jo
pop
push
pop
push
push
add
bound
pop
pop
push
popa
pop
pop
es
dec
push
jle
fwait
add
data16
imul
inc
pusha
xchg
pop
jbe
add
js
data16
jbe
test
fs
add
es
inc
add
sahf
jl
dec
call
cld
in
add
add
push
imul
stc
idivl
je
addb
fs
insl
bound
bound
jp
imul
data16
jne
js
imul
push
jo
outsb
in
repz
jle
jge
mov
add
ja
mov
push
es
lods
pop
cli
mov
scas
xchg
jno
test
mov
jl
mov
jge
xchg
add
fwait
incl
mov
mov
add
cltd
cltd
cwtl
fdivl
jle
nop
xchg
push
xchg
xchg
push
mov
test
cltd
jle
mov
mov
cld
nop
pushf
add
lods
xchg
addb
mov
es
mov
fnsave
push
and
pop
roll
ret
sbb
stos
jle
lods
add
mov
decl
aad
inc
mov
add
jmp
scas
les
lcall
call
in
cmc
cli
add
mov
or
test
add
lods
sahf
jno
aam
cmpsb
lods
mov
lods
jbe
ret
sub
push
xlat
in
fnstenv
stos
push
cmp
mov
add
test
mov
mov
dec
sti
pop
pop
mov
cmpsb
add
mov
mov
mov
mov
mov
leave
add
int
mov
cs
enter
insb
fucomip
lds
leave
into
ret
push
mov
mov
aam
add
scas
rcl
rcr
and
loope
cmpsb
in
add
or
stc
push
fcmovb
cmpsb
fidivs
aam
jle
fcmove
shrb
add
fcmovbe
add
loop
aam
fidivl
data16
fcmovu
push
loop
loop
ficomps
fisubs
out
loop
repz
jmp
dec
in
dec
fsub
push
out
sub
in
data16
js
loope
cs
out
add
out
in
push
stc
pop
mov
jmp
dec
mov
loop
clc
push
sti
fdivr
testb
cli
dec
repz
lcall
push
loopne
idiv
loope
sahf
idivl
loopne
call
rcr
xchg
repnz
pop
cs
cli
push
lcall
iret
cmp
cli
cli
out
out
push
push
push
pop
nop
dec
gs
sub
cmp
add
add
add
sub
int
iret
ljmp
jge
jl
jns
adc
popf
faddl
jge
mov
and
adc
rolb
or
scas
into
fidivs
ret
rol
cmp
jle
sti
in
fildl
sub
ret
int3
ret
ret
lds
ret
push
push
cld
jg
adc
mov
fcomp
fstp
div
hlt
je
nop
mov
addr16
cli
or
sub
fisubrs
in
cmpsb
stos
add
icebp
hlt
sub
popa
pop
and
into
test
rcrb
into
aad
aad
push
mov
jbe
jg
or
int3
into
int3
iret
fcomps
hlt
out
out
ror
add
mov
inc
insb
js
jae
jns
jbe
jo
or
jae
push
je
jp
add
je
jg
fldenv
add
jb
pop
pop
pop
pop
pop
iret
ss
stos
or
pop
pop
sub
xor
jnp
data16
jle
jg
jle
mov
jle
out
insb
mov
pop
cs
scas
mov
jg
jp
jp
mov
mov
int3
enter
adc
test
movsl
mov
movsl
xchg
cmpsb
xchg
xchg
add
mov
mov
repnz
cld
add
incb
cld
adc
cwtl
mov
sbb
add
hlt
stc
repnz
vpackssdw
push
out
cmpsb
mov
loopne
xchg
ja
imul
outsl
xchg
cltd
lods
mov
int
lret
mov
test
dec
add
lods
ja
call
dec
push
dec
dec
dec
push
push
stc
in
outsl
or
dec
ss
ss
sbb
sbb
fildll
push
sub
sub
sub
sub
dec
dec
insb
mov
pop
lcall
insl
insl
jb
mov
mov
addr16
add
mov
jne
jnp
je
jbe
xchg
jg
movsl
xchg
xchg
jnp
jp
mov
pop
pop
pop
push
add
pop
jb
imul
xor
ds
arpl
xor
xchg
cwtl
cltd
lret
or
js
ret
sbb
push
sbb
pushf
pop
shl
mov
mov
das
sbb
in
repnz
out
sarl
ds
cmp
ljmp
xchg
cltd
mov
mov
jnp
jge
push
insb
andl
sub
ss
call
jbe
inc
dec
or
and
out
loope
shr
push
sub
sbb
push
xor
dec
int3
imul
push
push
add
gs
push
insl
fcom
or
xchg
pop
xchg
add
push
addr16
inc
mov
adc
loopne
jp
xchg
xchg
xchg
bound
rclb
xchg
or
add
xchg
mov
fisubl
clc
mov
push
or
add
leave
int
ror
push
mov
cmp
lcall
mov
nop
xchg
mov
inc
add
jg
rcl
jecxz
ljmp
hlt
xor
ret
sti
and
or
insl
shlb
stc
clc
ss
outsb
out
jle
fistpll
div
imul
ljmp
and
cmp
xchg
cltd
mov
mov
stc
mov
cmp
enter
dec
inc
inc
inc
sub
and
sbb
ret
aaa
push
sub
xor
add
xor
ss
jno
sub
sbb
addl
xchg
rcrl
pop
sbb
jo
mov
outsb
insl
push
add
adc
adc
insl
outsb
gs
or
inc
aas
xor
jle
xchg
xchg
movsb
cli
cmpsb
lods
lods
mov
mov
jg
cmpsl
lods
lods
cmpsl
cmpsl
cmpsb
xchg
nop
pusha
cmp
and
cmp
cmp
fwait
adc
adc
mov
out
test
lret
clc
mov
hlt
pop
out
imul
jmp
repnz
or
clc
cld
mov
fsubr
and
clc
repnz
imul
cmp
out
xor
repnz
add
lret
mov
push
or
mov
cmpsl
movsb
and
lret
fs
sbb
popf
cmp
icebp
jl
push
pop
pop
sub
pop
add
imul
xor
sub
sbb
adc
dec
dec
pop
push
push
push
dec
sbb
and
adc
dec
jno
inc
push
push
pop
fs
mov
push
fs
dec
dec
cmp
sbb
nop
pusha
and
fs
xchg
mov
xchg
jbe
xchg
jne
sbb
xor
cltd
xchg
fs
cld
ja
and
cmpb
xchg
mov
rcr
fcmovnu
inc
lds
clc
adc
add
jp
jge
idivb
or
mov
repz
out
ljmp
inc
sbb
loop
mov
pop
movsl
mov
dec
push
sub
push
rorl
inc
inc
lock
in
shrb
aaa
inc
mov
fldt
or
push
push
and
and
jg
add
outsb
sub
adc
and
push
push
add
sbb
or
je
jle
loopne
dec
xchg
pusha
and
inc
imul
cs
fs
jb
jnp
jb
je
xor
movsl
movsl
stos
sbb
dec
insb
inc
lods
mov
mov
xchg
imul
xchg
mov
lcall
out
cmc
or
div
es
clc
add
out
loopne
sti
std
and
push
aaa
ret
leave
in
inc
and
in
out
imul
xlat
enter
mov
mov
or
movsl
mov
mov
mov
fdivrl
clc
dec
dec
lock
aas
pop
adc
mov
je
fimull
adc
adc
pop
cld
aaa
or
or
inc
inc
pushf
or
cmp
and
pop
add
push
push
dec
dec
ret
cld
ss
aaa
dec
dec
dec
inc
pop
pop
add
ficoml
out
inc
jo
jb
outsl
cmp
in
aas
mov
push
popa
outsb
adc
jl
cmp
jl
xchg
jg
cld
pop
insb
outsl
adc
lods
scas
lods
add
push
xor
daa
cmp
fs
cwtl
mov
mov
inc
cmc
stos
jmp
clc
inc
adc
and
lock
fnstenv
mov
lock
ljmp
pusha
or
shl
mov
and
and
test
arpl
mov
xor
mov
lock
dec
aad
add
push
inc
push
xor
add
add
or
pusha
shrl
inc
sub
test
push
cmp
out
xorl
cmp
adc
add
ret
addl
and
sub
insb
pop
dec
pop
sub
jmp
pop
outsb
fs
push
ret
dec
xor
or
pop
mov
mov
xchg
dec
dec
jp
push
mov
outsb
push
aaa
xor
mov
push
sub
lock
mov
jl
mov
jecxz
in
dec
cmpsl
and
ljmp
or
dec
hlt
or
or
sbb
adc
pushl
ror
mov
cmpsb
xchg
jb
das
sbb
jbe
mov
cmpsb
push
push
mov
mov
stos
movsl
pop
fidivrs
js
clc
out
dec
inc
dec
inc
inc
inc
sub
adc
rcrl
dec
xor
in
aas
out
cmpsb
cmc
aad
sbb
into
sub
aad
and
fisubrs
ss
out
cli
aas
pop
mov
cmpb
mov
adc
and
stos
jecxz
sbb
xor
dec
sbb
xchg
push
aaa
or
pop
cmp
pop
dec
cs
mov
mov
pop
xchg
lret
add
movsl
cmpsb
inc
pop
scas
push
jl
dec
cmp
je
pushf
call
sbb
cmp
fninit
add
fidivl
in
out
add
inc
jo
xor
inc
sbb
repnz
icebp
push
dec
xor
out
add
pop
je
call
mov
mov
xor
test
cmp
adc
cwtl
inc
inc
dec
or
lods
mov
fidivs
sbb
bnd
cmp
inc
inc
mov
inc
es
inc
mov
pop
cmp
sbb
cmp
cld
or
cmpl
inc
loop
dec
inc
sub
sbb
inc
les
xor
push
pushl
jge
orl
xor
and
ss
dec
dec
dec
sub
pop
sbb
jo
loopne
dec
out
rcrb
or
and
add
mov
je
hlt
mov
add
push
pop
mov
cmp
addr16
pop
adc
jmp
xchg
add
add
cmp
ret
lahf
sarb
leave
aam
jb
ror
fcmovu
xor
push
cld
cmpsb
pop
fucomp
out
fucomi
fnsave
add
fcmovnu
lret
mov
pusha
not
rcr
out
and
and
int
js
push
xor
cmp
xchg
xlat
push
push
scas
mov
sub
stos
or
popf
loope
stos
movsl
jbe
iret
insb
prefetcht2
scas
imul
inc
xor
xor
or
and
push
sub
cmpsb
cltd
pop
sub
ss
cld
mov
push
dec
inc
xor
and
insl
push
or
push
xor
insb
mov
cmp
pop
pop
inc
pop
aaa
jg
sbb
or
or
add
ss
push
push
dec
dec
or
mov
loopne
mov
mov
call
xor
mov
xchg
cmpsb
cltd
clc
pop
lock
lret
leave
les
leave
out
sti
orb
repz
cld
rcl
ror
leave
add
ja
cs
int
fstps
inc
cltd
mov
es
mov
idivl
int
xchg
fsubl
sbb
sbb
mov
cli
movsl
push
push
xchg
push
or
sti
enter
pop
inc
inc
add
xchg
ret
test
xor
mov
or
mov
ret
lock
push
or
dec
test
sub
loop
mov
dec
jo
sbb
or
add
adc
or
sbb
and
cmp
or
loope
adc
pop
dec
xor
xor
push
gs
je
jg
fbld
jle
outsb
push
nop
addr16
jbe
pusha
push
bound
lods
shll
xchg
xchg
xchg
mov
or
flds
repz
rcl
out
testl
jo
outsl
pop
xchg
or
cltd
stos
push
cwtl
std
push
xlat
outsb
lods
sbb
sarl
les
rol
movsl
pop
outsl
mov
sbb
popa
ret
lods
scas
adc
push
iret
pop
or
pusha
fildl
add
or
inc
negl
push
or
push
cmp
or
jo
cli
cmpb
add
pop
push
int
mov
add
adc
ja
fbld
mov
sbb
xchg
dec
pop
cmp
push
xor
mov
mov
xchg
and
xor
adc
ss
insb
dec
gs
mov
fcompl
and
xor
dec
pop
sbb
out
hlt
jle
insl
push
sub
cmp
outsb
xchg
ja
xor
mov
xor
les
mov
ds
aam
fnstsw
lret
cwtl
imul
cmp
pusha
add
mov
sbb
iret
lock
sbb
fimull
mov
and
es
mov
and
gs
jmp
jns
xor
stc
add
cwtl
das
push
pop
inc
add
xor
inc
inc
cld
scas
shrl
inc
sub
adc
and
in
out
and
sub
sub
or
adc
clc
jmp
add
dec
push
push
insb
push
dec
inc
incl
shrl
and
in
mov
push
in
out
dec
dec
sub
cmpl
add
xor
sbb
push
push
jle
pop
pop
pop
sub
mov
and
stos
cmp
push
and
jae
and
push
mov
adc
cmp
scas
pop
xchg
imul
and
push
adc
ret
lret
jecxz
mov
xchg
push
sbb
and
add
cmp
mov
movsb
push
and
clc
and
scas
int3
sbb
push
outsl
cmp
mov
shrb
mov
gs
sbb
out
ret
push
push
inc
add
sbb
ja
js
and
inc
sub
cmp
orl
add
adc
sbb
pop
or
int
lcall
dec
inc
inc
mov
push
in
in
movb
add
xchg
cmp
call
sub
inc
sub
or
addb
insb
xchg
cmpsb
and
xor
xor
orl
xlat
adc
ds
push
xor
je
jl
sub
and
imul
lcall
add
push
and
lret
lock
out
fmul
fadds
int3
mov
cmp
cmpl
push
push
push
ds
stos
sbb
inc
test
xor
mov
mov
nop
fsubl
mov
jo
lods
stos
lods
stos
test
or
xchg
comiss
cmp
dec
inc
add
inc
dec
push
cmp
sbb
seto
andb
mov
or
push
push
sub
or
call
jg
adc
dec
inc
pop
push
sub
mov
aaa
je
dec
or
inc
xor
xor
mov
and
ret
jg
pop
push
add
aaa
sbb
popf
mov
and
add
or
loopne
dec
cmpl
push
mov
sar
push
cmp
adcb
mov
adc
icebp
xchg
sbb
mov
int3
daa
daa
and
sbb
fs
and
mov
xor
insl
cmp
jbe
mov
in
push
and
movsl
push
scas
cmp
mov
or
add
sbb
sbb
jmp
jo
pop
pop
clc
std
loopne
or
add
sub
or
jg
pop
push
sbb
or
mov
ljmp
sub
ds
in
or
or
sub
sbb
mov
xchg
decl
sahf
cmc
mov
sub
sbb
push
cld
aaa
lods
shlb
sbb
addl
fbld
mov
dec
pop
add
cmp
sbb
adc
pop
jno
push
xor
mov
mov
in
jo
or
or
imul
xchg
scas
xchg
ja
test
mov
mov
call
lea
es
int3
iret
xor
scas
outsl
xor
pushf
movsb
and
scas
pop
or
push
push
xchg
mov
aad
jg
jge
adc
insb
xor
xor
aas
push
add
sub
mov
adc
sbb
lock
out
testb
jmp
adc
ds
call
or
adc
inc
inc
inc
add
outsl
sahf
shlb
pop
lret
cmp
sub
push
hlt
lahf
in
sub
je
sub
jns
cmc
aaa
or
lcall
xor
pop
add
test
sahf
pop
xchg
fstpt
pop
insb
pop
and
xorb
insl
jge
adc
test
jno
aas
mov
xor
cmp
xor
push
imul
push
xchg
movsb
lcall
mov
sti
sbb
shrl
mov
arpl
jo
sbb
jo
orl
in
jl
dec
xor
loopne
sub
mov
rcrl
daa
or
adc
or
sti
scas
and
adc
and
jle
call
popf
adcl
sbbl
lcall
or
out
incl
sbb
and
sub
and
push
adc
cld
scas
fcomip
push
inc
xor
or
lret
jmp
push
xor
ljmp
xor
loopne
push
sub
pop
dec
sub
xchg
and
in
jnp
test
test
imul
adc
fisttpl
add
xor
imul
pushf
mov
pop
sti
aad
lods
fcomp
fmul
iret
fadd
ja
mov
arpl
mov
add
scas
test
xor
call
stos
sub
mov
pop
jge
jnp
inc
das
sbb
stos
fs
cmp
and
rolb
ja
cmp
mov
sbb
mov
cmp
push
mov
mov
popf
test
push
test
mov
cmp
inc
add
cmp
sbb
and
add
mov
xor
xlat
mov
push
das
dec
mov
pop
fists
dec
xchg
push
pop
dec
xor
lock
fdiv
push
xor
cmp
or
loopne
fimull
stos
mov
es
test
popa
aas
mov
xlat
adc
imul
adc
mov
call
xchg
cmp
lods
xor
sti
push
add
xor
aam
add
sub
fstpt
shrl
test
jle
movups
inc
jg
inc
jmp
adc
push
sub
ljmp
sbb
imul
add
or
mov
das
rcrb
sbb
xor
adcl
pushf
jle,pn
xlat
jg
and
xchg
pop
inc
sbb
or
mov
inc
pop
jmp
cmp
cmpb
sub
jmp
push
aaa
xor
inc
cmp
das
clc
rcrl
push
push
pop
xor
and
lcall
or
scas
add
ret
testb
push
cmp
stc
lcall
mov
popf
push
aaa
cltd
repnz
xchg
cmp
in
push
mov
push
xor
in
lock
ret
mov
scas
adc
int
mov
jno
inc
inc
les
hlt
or
loopne
sbb
les
push
or
mov
cmpsb
or
pop
sub
adc
sub
mov
cs
call
addr16
sbb
xor
cmp
pop
ret
mov
push
xor
and
sbb
mov
sub
pop
pop
dec
cs
cmc
call
or
clc
sbbl
gs
and
xor
lock
add
add
aam
rclb
fimuls
lcall
in
cmc
mov
arpl
mov
lock
arpl
fsubr
adc
notb
fmulp
lock
jg
push
mov
and
stos
sbb
jl
or
mov
push
movsl
bound
jg
push
push
iret
pop
pop
clc
mov
xor
addb
scas
jb
sbb
cmp
push
or
push
scas
add
pop
rclb
xor
cli
aaa
mov
les
sub
imul
fs
xor
sub
clc
mov
push
sub
push
and
sbb
loopne
push
add
push
mov
pop
gs
sar
dec
sub
call
js
insl
push
sbb
mov
adc
rorb
xor
push
scas
mov
jg
mov
xchg
push
mov
in
mov
imul
cmp
sar
cmp
lcall
xchg
fdiv
pop
add
sbb
cwtl
test
arpl
pop
mov
push
or
lret
loope
cmpsb
or
lods
adc
lods
mov
dec
or
stos
mov
insb
mov
mov
mov
rcrl
fidivs
sub
lahf
fwait
and
popa
xchg
push
scas
inc
inc
sub
fbstp
les
xor
xor
cs
mov
pop
clc
adc
daa
mov
push
push
push
xchg
call
cmp
sbb
jp
test
push
gs
dec
cmp
cs
fs
jle
jb
pop
lock
mov
js
jmp
test
and
rorl
scas
add
lock
popa
ljmp
push
mov
sbb
arpl
stc
mov
xchg
xchg
fprem
std
sbb
add
fst
cwtl
ds
inc
cld
jg
movsb
aas
mov
or
aam
int
xchg
dec
fsubrs
or
test
scas
movsl
stos
adc
pop
stc
aaa
sbb
push
push
push
test
inc
inc
adc
sub
movb
and
cmp
rcr
xchg
xor
sub
pop
rcrl
mulb
mov
cmp
ss
or
xor
cmp
addb
test
and
jo
push
aaa
push
lea
pushf
adc
dec
and
loope
sbb
cli
fwait
push
cmc
mov
aas
pop
outsl
lods
adc
popa
les
data16
idiv
lock
fmul
adc
in
in
stos
lret
fstp
fildl
mov
push
out
xchg
cmpsb
fxtract
std
push
sti
mov
out
push
xor
movsb
lcall
add
int3
cwtl
enter
inc
fwait
xor
mov
sbb
enter
stos
adc
xchg
push
call
dec
outsb
inc
push
sub
or
dec
pushf
adc
inc
es
lcall
mov
int3
add
jg
dec
testb
mov
add
fwait
aam
push
test
dec
dec
dec
sub
in
xchg
inc
fstpl
and
ss
push
sub
js
movsb
adc
daa
and
arpl
outsb
jnp
sbb
push
adc
jnp
jg
jb
aas
jmp
add
push
js
hlt
mov
add
enter
aas
leave
enter
rcr
aam
orb
jg
mov
lock
fnstsw
popf
in
shlb
push
add
imul
repnz
push
movsb
nop
pushf
sahf
jmp
mov
movsb
xchg
mov
lret
and
cmp
mov
mov
add
cmp
mov
push
ficomps
pop
jno
xor
loopne
adc
movsb
mov
inc
daa
mov
pop
mov
mov
js
mov
push
sub
mov
sarb
subl
dec
mov
and
push
xor
cmc
mov
cld
sub
xor
sbb
mov
cmp
and
and
jo
mov
or
dec
cs
pop
xchg
add
adc
cmp
lock
popa
push
xchg
cmp
leave
fcomp
movsl
mov
rcl
mov
fdivrs
push
std
cmc
xchg
out
lock
mov
sbb
stc
out
dec
cmp
add
jne
push
loop
daa
nop
cwtl
mov
sbb
cmpb
lret
mov
lret
or
mov
xchg
cli
adc
adc
xchg
stos
jg
dec
pop
jge
push
sbb
sub
cmp
ljmp
cs
add
jb
push
add
xor
cld
fbld
cmp
add
adc
callw
jp
adc
pop
pop
push
xor
fwait
loop
sahf
mov
dec
inc
lds
je
xchg
or
lock
pop
push
pop
push
aaa
das
jbe
pushf
ret
aad
inc
jp
xchg
jnp
push
orl
mov
stos
lcall
in
test
bound
insl
or
fsts
jecxz
fcomip
fildll
notb
fucomi
out
mov
ljmp
mov
lcall
das
movsb
fwait
daa
or
cld
mov
loope
test
imul
dec
data16
mov
notb
lods
sub
scas
pop
push
dec
push
dec
inc
dec
sbb
xor
dec
cli
jmp
dec
push
push
dec
sub
loop
fwait
or
and
add
xor
or
jne
incb
add
push
push
pop
pop
xor
adc
jg
insl
push
pop
pop
add
push
ss
push
loopne
cli
ja
cmp
in
lahf
mov
rolb
popa
aaa
cmpl
mov
clc
mov
push
popf
xchg
add
push
lcall
cmp
xor
inc
mov
xchg
xlat
fiaddl
ftst
rorl
xchg
test
in
mov
fcmovnu
mov
imul
incb
cmp
jbe
out
icebp
pop
lret
movsb
or
mov
ljmp
stos
inc
or
ds
mov
je
mov
ss
mov
push
fisubrs
scas
fmuls
mov
test
lock
and
sbb
das
pushf
fidivs
or
sbb
and
xchg
add
scas
cmc
cmp
and
push
repnz
insl
xor
jo
or
add
pop
popa
add
mov
dec
push
dec
pop
dec
xor
mov
and
pop
cmp
jmp
cmpl
xchg
mov
aas
sub
lea
jne
mov
cmpsb
xchg
pusha
aas
mov
shl
push
xor
adc
data16
add
xlat
fstp
insb
out
out
mov
mov
stos
sbb
mov
push
out
stc
enter
or
adc
mov
pop
mov
movsb
mov
lret
mov
dec
in
cmpsb
push
mov
mov
fcompl
adc
add
enter
xor
push
clc
das
adc
jae
int3
adc
mov
dec
sbb
and
orb
daa
push
add
push
fs
out
ret
int3
fisttps
out
push
add
push
pop
add
shrb
rcrb
andl
aaa
stos
sub
call
andb
sahf
es
popa
add
decl
repz
je
pop
pusha
xor
ja
jne
popa
cli
or
loopne
sbb
push
lods
sbb
mov
cltd
outsl
cmp
out
dec
orl
xor
rolb
push
jecxz
loop
out
lock
cmpsb
cwtl
push
jmp
lahf
adcl
xchg
aas
hlt
repnz
fstp
in
xor
push
and
or
cwtl
push
cmp
rcl
js
repz
rcl
adc
adc
mov
dec
cmpsl
mull
stos
popa
clc
jg
test
dec
adc
test
in
shll
push
cmp
out
decl
add
ss
push
push
testb
push
add
movaps
cmp
or
fdivp
aad
jbe
popa
push
aaa
test
outsl
hlt
pop
or
push
xor
outsl
addr16
dec
lds
aas
addr16
loopne
cmp
pop
adc
cmp
push
das
dec
or
lea
loop
sahf
or
sub
test
or
adc
push
or
mov
xor
and
lcall
je
cli
or
mov
xchg
ds
orl
rolb
cwtl
fucomi
out
adc
mov
xchg
lea
add
jmp
rcr
sarb
sarb
into
jo
scas
dec
mov
and
imul
sarb
push
push
add
sbb
xor
sub
adc
mov
cld
cmpsb
arpl
sbb
push
adc
orl
gs
popa
adc
rolb
dec
les
add
xchg
add
mov
outsb
or
popa
push
push
data16
ja
test
scas
or
add
xchg
jbe
push
xchg
ja
inc
enter
popa
push
aaa
xor
mov
mov
loopne
cmp
push
jl
inc
mov
cltd
xor
cmp
mov
fwait
ret
movl
lock
cmp
mov
inc
shr
mov
mov
hlt
sbb
fld
mov
push
cmp
cmp
push
shl
ljmp
xor
xchg
and
and
leave
imulb
cmp
shlb
nop
mov
lock
icebp
mov
notb
test
enter
sbb
pop
dec
ret
cmpsb
fstpl
xchg
mov
or
test
push
dec
dec
and
sbb
pop
push
fs
mov
xor
inc
push
outsb
and
outsb
outsl
push
dec
xor
jb
adc
cmc
jbe
push
sbb
pop
ljmp
arpl
cmp
mov
add
mov
mov
cltd
xchg
push
and
lahf
test
push
push
cltd
jbe
add
hlt
divb
in
sub
in
cmc
lock
add
jo
push
movsb
pop
dec
hlt
aam
xchg
test
movsl
test
loope
or
ds
mov
loope
loope
adc
rol
mov
mov
adc
je
incl
sahf
push
sub
mov
call
aaa
sub
lock
xor
es
pushf
call
dec
test
mov
and
sbb
cmpl
cmp
adc
mov
cmp
lret
cmp
adc
jb
jb
es
xor
outsl
je
jp
push
sbb
sub
cmpsl
jnp
xchg
ja
xchg
xchg
cmpsb
xchg
cmpsb
sub
loopne
es
mov
in
and
or
nop
xchg
cltd
je
clc
outsl
or
daa
lahf
in
lcall
or
or
adc
out
test
cmc
ljmp
loop
push
xchg
push
cmp
mov
paddw
lcall
out
loop
jmp
lret
lret
mov
and
ret
fcomps
or
shl
add
inc
xchg
es
adc
rcrb
mov
mov
inc
jno
imul
xor
adc
lcall
xor
xor
adc
and
xchg
shll
adc
xchg
cmp
mov
or
dec
adc
call
sti
sbb
adc
mov
imul
add
xchg
in
pusha
mov
xchg
push
add
sbb
xor
push
andb
popf
loop
push
pop
sar
es
arpl
data16
mov
xor
and
cmp
in
mov
in
cmc
jb
imul
push
fwait
bound
repnz
imul
enter
mov
inc
adc
decl
jl
pop
cmp
push
dec
jb
inc
movsb
fwait
out
cmpl
or
add
adc
imul
rclb
jns
pop
cmp
adc
push
adc
and
sbb
adc
fildll
push
pop
pop
adc
mov
repnz
dec
or
gs
loopne
mov
mov
scas
ret
scas
cld
jne
je
push
xchg
adc
cmp
or
xchg
or
movsb
add
jo
or
lods
cmpsl
cmpsb
adc
aad
xor
nop
mov
nop
arpl
mov
jg
and
mov
lahf
mov
adc
pusha
lcall
in
ret
call
adc
push
fcmovne
cwtl
pusha
fwait
loop
cmc
mov
stc
std
or
ret
std
push
popa
jnp
cli
lret
mov
cmpsb
movsb
push
push
inc
out
mov
sahf
mov
loop
or
je
push
adc
rolb
mov
lahf
xor
cwtl
pop
sbb
jg
mov
add
xchg
mov
add
mov
and
mov
jmp
adcb
mov
dec
add
push
xchg
cmp
dec
jbe
or
or
xchg
xchg
cltd
xchg
jo
push
sub
clc
add
mov
adc
jmp
loop
cmc
mov
xchg
sbb
mov
mov
orb
in
jmp
push
adc
testb
cld
nop
aas
hlt
test
add
pushl
lods
stc
repnz
out
fxch
mov
mov
fdivp
ja
adc
mov
mov
cwtl
rcr
in
pop
mov
rcll
loopne
fistpll
fidivs
mov
hlt
stos
pop
jg
add
push
xor
mov
push
call
test
mov
sub
daa
call
andb
addr16
xchg
shll
xor
inc
lahf
pushf
fwait
shl
shll
outsb
sbb
adcl
add
movsl
add
cli
shlb
mov
mov
push
nop
nop
out
sahf
test
pushf
mov
or
repz
es
ljmp
mov
push
out
fistl
aaa
mov
cld
popf
cld
aas
cmp
lock
or
repnz
outsb
cmpsb
mov
lcall
in
mov
rol
popf
dec
mov
seta
jp,pn
jle
popa
pop
data16
pop
popa
dec
push
and
dec
aaa
ss
aaa
xor
add
sbb
xor
int3
adc
add
and
mov
cld
or
popa
cmpsl
pop
popa
jp
push
add
jp
pop
unpckhps
jecxz
insb
and
xchg
push
adc
mov
pop
push
push
xchg
nop
add
or
mov
cmp
xchg
xchg
cwtl
mov
xor
push
add
or
jno
out
in
in
out
push
and
sahf
xchg
ljmp
stc
incb
std
push
adc
mov
test
repnz
fbld
mov
cld
int
fwait
out
movsb
mov
loope
mov
and
shr
jno
mov
setae
push
xor
pop
data16
add
lea
pop
xor
push
pop
adc
sub
fcomps
adc
push
data16
sbb
pop
push
adc
outsl
or
jne
push
xchg
add
xchg
and
sti
jo
jl
sbb
add
pop
daa
sbb
xchg
cltd
sbb
sahf
mov
adc
add
push
add
push
sbb
xchg
mov
xor
dec
pop
or
in
aas
push
push
int
in
or
sbb
out
insl
mov
pop
inc
imul
dec
push
mov
hlt
loopew
sub
cmp
out
fcmovu
rcl
ficompl
mov
jnp
or
ljmp
lods
fidivl
push
cmp
and
sbb
mov
pop
addr16
or
clc
or
push
or
shrl
ljmp
fwait
addr16
or
jne
sbb
lock
add
push
add
dec
xchg
jbe
xchg
push
or
xchg
jmp
xchg
mov
add
mov
mov
push
mov
mov
mov
and
adc
pop
shl
push
out
sub
cmp
icebp
sbb
and
push
pusha
sarl
push
iret
adc
add
fcomps
and
dec
addr16
sub
and
fwait
or
data16
mov
rcll
mov
js,pt
push
hlt
mov
shrl
push
icebp
push
data16
popa
icebp
push
push
out
imul
pop
test
inc
outsb
insl
or
outsl
outsl
sbb
jmp
clc
add
xchg
pop
cmp
jo
adc
adc
jnp
jbe
or
mov
loope
push
push
pop
or
add
fcomps
loope
add
pop
pushf
push
push
xchg
or
lds
es
fxch
mov
arpl
out
notb
add
div
adc
xchg
add
out
cmp
xor
cmc
or
jmp
dec
in
xor
adc
or
xor
cmp
fadds
cli
pop
sbb
icebp
stos
mov
mov
or
add
lods
movsl
cwtl
jo
push
and
push
stos
add
stos
les
stos
mov
mov
xorb
add
sub
mov
test
mov
mov
inc
mov
push
inc
xor
clc
xchg
sbb
cs
bound
in
cmc
out
neg
test
insb
dec
incl
sti
std
or
mulb
mov
push
push
fisubrl
jnp
add
cld
and
cmp
pop
jnp
and
lcall
sbb
stc
cmp
sub
xor
xor
xor
or
rdpmc
xor
notb
aaa
dec
ss
dec
or
dec
dec
dec
xor
or
pop
dec
push
dec
push
add
in
or
es
xor
ds
push
mov
test
push
push
add
add
xor
pusha
pop
pusha
pusha
push
push
out
cmp
pusha
add
push
push
fdivrl
add
add
aaa
out
imul
add
in
pushf
inc
notb
bound
add
jecxz
shlb
popa
xor
pop
into
adc
test
or
push
adc
jns
push
mov
push
push
adc
gs
outsb
fstl
add
pop
push
sbb
pop
mov
sbb
mov
add
and
add
jg,pn
mov
add
xor
or
xor
xor
mov
cmp
ds
add
push
fidivs
dec
or
mov
add
mov
fnsave
xor
iret
into
jae
pop
xchg
movl
imul
aad
push
faddl
scas
in
and
fucomip
icebp
fiadds
fisttps
fistps
mov
cli
add
or
incb
adc
and
pop
nop
and
mov
insl
mov
push
push
inc
push
push
outsl
jg
jae
js
fbld
aaa
jnp
xor
imul
pop
js
imul
add
jb
sbb
jge
push
cmp
fsubs
sub
insb
xlat
popa
bound
dec
add
fwait
lcall
pop
add
pop
add
push
add
insb
int
mov
sahf
mov
pop
mov
pop
add
xchg
add
cmpsb
jge
mov
mov
fs
cwtl
inc
mov
repnz
mov
mov
add
xor
jbe
add
aas
insl
inc
sti
push
insb
cmpsb
adc
push
xchg
cwtl
cwtl
add
fbstp
mov
push
adcl
xchg
and
mov
or
rolb
addb
jne
movsl
mov
arpl
call
or
mov
adc
test
pop
xor
xor
mov
test
sbb
add
lret
sub
push
aaa
push
or
int
pop
dec
aaa
fwait
add
cmp
or
cmp
sbb
sbb
mov
sbb
insl
int
lods
push
inc
push
push
inc
popf
add
inc
lcall
sbb
mov
sub
and
mov
mov
sub
sub
fistl
iret
dec
nop
xchg
add
dec
cltd
dec
dec
push
cs
dec
sub
mov
mov
push
lahf
add
push
sahf
add
pop
movsb
add
dec
mov
stc
in
push
dec
push
das
push
mov
push
movsl
push
pop
pop
outsb
mov
ss
push
xor
xor
cmpsb
add
pop
movsl
add
pop
xor
fnsave
pusha
stos
ds
cmp
cmp
test
mov
out
cmp
out
push
add
dec
cmpsl
add
dec
inc
imul
jge
jle
push
add
dec
inc
insb
push
inc
outsb
mov
push
push
imul
dec
outsb
mov
inc
outsl
mov
jne
jno
stc
insl
sti
sbb
push
ja
jle
mov
push
jp
ss
stc
cmpsb
jge
jl
add
jne
add
push
jl
icebp
out
sub
pop
push
pop
jle
add
add
add
mov
outsb
mov
mov
int
ds
add
orl
enter
mov
lret
push
mov
lds
popa
xchg
mov
jmp
mov
push
mov
imul
xchg
into
std
outsb
inc
pushfw
push
jge
iret
mov
jno
fnstsw
xchg
rcrl
xlat
add
es
aad
pop
or
faddl
jg
fisttpll
push
push
fstps
fwait
clc
push
ljmp
push
rcrb
cmpsl
and
mov
mov
iret
mov
cmpsb
pop
mov
mov
mov
mov
pusha
mov
lock
mov
xchg
inc
into
cmpsb
test
push
movsl
insl
fcmovnu
mov
sahf
mov
xchg
mov
lcall
fwait
mov
subb
mov
in
mov
push
mov
into
ret
loope
loop
insl
mov
add
push
jmp
ret
fildll
shr
add
shr
rclb
mov
lods
sbb
xlat
repnz
fcmovne
adc
inc
rcl
adc
ss
fsubr
xlat
scas
stos
mov
xlat
pop
popa
ljmp
add
xchg
movsl
lcall
data16
call
bound
pop
pop
outsl
mov
call
fcmovbe
mov
jg
stc
popf
xorb
push
jns
cltd
test
ss
shl
in
nop
fcmovu
mov
pusha
pop
push
jae
push
mov
lds
sub
jg
cld
push
stc
stc
out
fnstcw
imul
sbb
mov
cmc
sbb
fucomip
dec
mov
cmp
mov
out
xor
push
repz
test
push
dec
or
fmul
out
push
cmp
jmp
add
xchg
xchg
or
jb
push
cmp
pop
add
sbb
decb
in
aas
inc
cmpb
mov
push
sbb
add
int
cmpsb
mov
sub
test
in
out
xchg
inc
jns
jle
into
push
add
cld
out
cmp
jle
imul
xchg
xor
in
cmc
sbb
inc
xor
lea
push
cmp
add
int
out
push
jo
push
int
add
movsl
add
push
call
repz
adcl
mov
add
dec
and
out
shl
aad
stos
xchg
subl
lock
lock
mov
fst
mov
cwtl
mov
push
dec
push
aas
inc
jg
mov
repz
cwtl
xchg
test
jb
pop
sbb
pop
adc
push
mov
add
push
bound
inc
inc
cmp
push
pusha
sub
inc
inc
pop
adc
push
ljmp
cmp
lret
not
lret
pop
adc
mov
ret
or
adc
add
mov
push
pop
mov
adc
inc
adc
std
cld
div
aam
rol
pop
cmpb
rorl
lods
mov
fdivrs
cld
cld
pop
testb
adc
insl
fidivl
pop
and
add
add
jmp
in
std
xchg
insl
mov
and
std
idiv
std
or
pusha
movswl
mov
pop
mov
and
pop
idiv
mov
dec
incb
add
rcrl
arpl
sbb
mov
rcrb
filds
cmpsl
push
rcrl
add
imul
pop
add
aaa
pop
add
add
sub
pop
out
jnp
add
mov
rol
dec
push
push
stos
pushf
sub
not
pop
add
sbb
push
stos
or
or
jo
and
inc
and
lahf
sbb
sbb
push
xorb
add
out
mov
adc
push
cmc
test
es
pop
push
push
push
nopl
mov
syscall
push
or
mov
mov
sub
dec
inc
les
stc
pop
psrlw
or
sub
das
outsl
inc
inc
insb
cwtl
add
sub
pop
mov
fxch
fildll
inc
inc
loopne
add
adc
pop
cld
leave
pop
inc
out
add
mov
inc
popl
rcrb
pop
popl
add
sarb
data16
pop
inc
and
inc
inc
fs
test
xchg
add
sbb
add
push
dec
cli
lahf
jmp
inc
inc
and
dec
and
push
add
adcb
push
or
rolb
andb
rol
xchg
cmp
mov
inc
and
and
and
idiv
rclb
sbb
sbb
add
or
ret
rolb
or
and
sarb
and
add
adc
add
pop
mov
addb
nop
add
inc
adc
fs
adc
addl
fldenv
aam
mov
test
dec
mov
inc
adc
push
sbb
data16
add
inc
and
adc
or
inc
sahf
add
or
xor
in
insl
sbb
cmpb
fcomi
mov
pop
inc
inc
adc
inc
adc
inc
xor
adc
sbb
rol
or
pushf
and
insl
adc
adc
push
sbb
and
or
imul
jb
loopne
push
mov
sub
mov
push
push
sti
insb
dec
out
and
loopne
mov
mov
adcb
and
xorb
or
test
fs
fsubl
push
sbb
push
das
push
add
inc
add
jbe
jbe
dec
and
and
inc
adc
push
popa
arpl
fdivs
call
mov
adc
adc
add
mov
push
dec
adc
push
cli
nop
mov
decl
add
nop
xor
push
sbb
and
dec
sub
and
and
call
fsubrl
dec
dec
jecxz
or
lods
add
mov
xchg
adc
adc
xor
test
mov
and
inc
or
adc
add
add
or
pop
ss
or
testb
sub
add
outsb
test
add
mov
shlb
sbb
and
add
push
add
push
ret
pop
jle
cmpb
adc
adc
test
sub
adc
rolb
xor
mov
fcoms
push
sub
outsl
aaa
sbb
push
adc
mov
or
or
or
adc
insl
sbb
add
adc
and
lcall
loop
and
enter
add
or
mov
cwtl
or
and
ss
in
and
sahf
test
andb
call
loop
mov
subb
lret
or
in
sub
test
movb
add
mov
push
addb
inc
push
imul
subb
inc
inc
mov
inc
dec
nop
push
jnp
push
rclb
lcall
shlb
add
push
mov
out
sbb
sub
xchg
dec
jo
jne
inc
stos
out
xchg
add
add
repz
or
mov
mov
add
mov
fildl
neg
ljmp
stc
fwait
out
push
repz
fiadds
xlat
neg
idiv
fiaddl
sti
in
jle
fldt
xlat
incb
shll
xlat
idiv
dec
ss
insb
inc
cmp
push
divl
scas
jge
shl
repz
outsb
ja,pn
mov
ds
repz
div
cmpsb
das
out
loopne
cmp
push
push
mov
sti
into
sti
cmp
sarl
pop
cli
dec
sti
dec
rcrl
jo
out
mov
scas
mov
fstl
or
push
ds
lahf
into
faddp
notl
cmpsl
out
dec
push
push
out
in
push
jle
sti
push
inc
ja
frstor
outsb
xchg
jle
mov
sub
mov
xchg
pop
fiaddl
fldl
jg
shl
xchg
mov
popw
xor
or
cmpsl
idivb
xchg
out
outsb
out
xchg
inc
neg
ja
sbb
data16
repz
pop
ja
out
out
push
xchg
decl
mull
jno
sahf
mov
dec
push
push
jo
aas
fimuls
ficomps
inc
add
pop
mov
repz
jmp
repz
xor
cs
cli
mov
mov
pop
push
cmpsl
sbb
out
cmp
cmp
fbld
pop
iret
sbb
pop
out
sbb
add
js
test
xchg
sarl
cmp
pop
jle
mov
testl
push
scas
fcmovne
mov
ja
xlat
mov
out
iret
imulb
xchg
std
clc
pop
movl
pop
outsb
testb
fchs
jecxz
out
push
ffreep
push
js
shl
out
inc
out
jbe,pt
out
sti
call
xchg
xchg
xlat
dec
mov
out
fdivrp
or
or
sti
out
out
ja
xchg
xchg
fcomip
jo
js
out
fistl
data16
je
out
outsb
out
dec
loopne
into
mov
fistps
mov
idivl
lcall
faddp
pop
adc
push
and
cli
mov
jp
or
push
xchg
daa
int
adc
jle
in
ret
push
rcll
aad
out
jmp
push
testl
dec
xchg
ficoms
in
aad
popa
jmp
lock
push
scas
fsubr
pop
jg
decl
pop
imul
scas
hlt
or
repz
sub
jl
enter
pushl
js
jno
rclb
mov
xchg
inc
les
inc
fwait
repnz
mov
jmp
ss
popf
subl
jo
es
add
fbld
push
jnp
xchg
push
sbb
adc
je
cmp
clc
incl
in
aam
sarl
mov
mov
stc
and
jmp
dec
test
adc
mov
nop
fdivrs
xor
cmc
enter
mov
gs
inc
push
andb
inc
pushf
add
cmp
fwait
dec
fsubl
call
movsl
gs
pusha
and
and
jne
xor
aad
fstl
fs
stc
xor
pushl
aaa
add
gs
mov
imul
sti
cltd
ret
cmc
outsl
mov
bound
hlt
fdivs
test
lret
lret
loopne
xlat
cmpsl
ljmp
sbb
adc
call
incl
mov
push
adc
lcall
lahf
sahf
je
pop
test
jno
dec
cmp
lret
mov
cmpsb
popa
sub
lret
sub
and
jp
rol
jmp
dec
sbb
addr16
movsb
jno
inc
js
pushf
pop
push
arpl
je
push
push
loop
xor
js
btc
shlb
shll
rcrb
cmp
mov
shlb
fldl
cwtl
xor
mov
jmp
ds
cmp
stos
test
and
jno
adc
jle
mov
dec
xchg
xchg
popf
aam
mov
mov
mov
pop
sti
push
xor
jge
out
sbb
fisttps
outsb
lods
call
xor
es
leave
int
and
push
rcrb
movsl
repz
lret
cmp
xchg
ja
mov
imul
jmp
fisubrs
add
inc
add
out
push
cmp
sub
sahf
jae
lods
sar
ljmp
jnp
adc
test
leave
dec
push
mov
add
aad
cmp
mov
or
dec
daa
sub
push
sbb
add
fcoml
xchg
xorb
adc
jnp
lcall
mov
jb
and
fsubrp
adc
decl
sqrtps
push
lcall
incl
mov
sub
fimull
mov
jmp
dec
sub
mov
inc
mov
inc
mov
bound
imul
mov
sub
cltd
adc
addb
mov
adc
ficompl
or
fwait
sbbl
stos
movsb
shlb
mov
lcall
push
ds
push
hlt
leave
gs
std
shr
jmp
mov
dec
iret
cmp
inc
cmpsb
and
call
jg
dec
popf
cmp
loope
push
das
shrl
add
mov
mov
dec
dec
aas
jnp
clc
push
pop
sub
loop
imul
or
add
dec
jmp
inc
repz
aad
xchg
push
xchg
icebp
decl
loope
stos
dec
jge
mov
cmp
add
popf
lds
add
sarl
cmpsl
test
test
add
imul
ret
dec
repz
cmp
mov
inc
repnz
je
or
incl
rorb
or
xorb
push
ljmp
and
jne
lcall
pushl
dec
jp
inc
sbb
and
cmp
sbb
inc
xchg
lock
adc
pusha
mov
jg
adcb
stos
mov
mov
addb
cli
cmp
sbb
fdecstp
aas
mov
lea
mov
test
or
pop
cmc
movsb
and
sti
mov
fstl
loopne
fisubs
js
mov
jle
push
stos
lcall
push
hlt
cmc
ret
or
mov
jecxz
idivb
sub
mov
movsb
push
push
xlat
loop
das
inc
xor
mov
mov
out
jl
aas
sti
pop
mov
and
jp
stc
jge
or
add
xchg
ljmp
icebp
pop
in
flds
loopne
int3
subb
mov
push
or
aaa
daa
lcall
mov
or
mov
fldenv
pop
mov
gs
ljmp
sub
call
add
add
sbb
cmpl
push
pop
push
lcall
lcall
cmp
mov
sti
testb
inc
enter
decl
cmp
je
rorb
mov
xor
jb
push
sbb
imul
decb
shlb
push
shrb
iret
sub
mov
xor
enter
shrb
jnp
dec
loope
pushl
iret
xor
rcrb
repz
ja
add
mov
xor
mov
lret
icebp
pusha
loopne
jmp
fisubrs
xor
inc
notl
sbb
cmpsl
mov
xchg
test
jmp
dec
sub
dec
loope
mov
mov
clc
mov
js
pop
outsl
call
adc
in
mov
xchg
and
pop
das
ss
pop
inc
std
call
hlt
movsb
lret
stos
xor
bound
jmp
jp
mov
add
gs
testb
fisubrs
scas
push
inc
subl
cmp
jns
push
and
cmp
outsb
gs
add
adc
adc
jp
adc
test
mov
and
jl
dec
call
fs
arpl
xor
push
call
sbb
inc
dec
adc
push
jg
popa
outsb
arpl
inc
gs
or
popa
imul
push
gs
gs
xor
imul
inc
gs
outsl
fs
gs
inc
or
inc
js
je
jb
lret
insl
push
jae
sbb
inc
outsl
jb
add
out
fwait
jb
dec
bound
arpl
inc
fcmovnu
sub
and
and
jns
sti
jbe
jnp
sub
sbb
gs
imul
inc
jbe
pop
dec
dec
popa
insb
push
imul
or
insb
push
push
jnp
notb
outsb
push
fisttpl
rcr
clc
push
inc
outsb
movsb
fsubrs
cmp
lods
popf
imul
dec
jae
arpl
adc
ret
cmp
push
bound
sbb
fstpt
jb
xor
outsw
push
je
lcall
insl
inc
insb
fdivl
gs
dec
enter
into
dec
mov
inc
arpl
enter
outsl
popa
fs
int3
outsl
inc
dec
inc
mov
jns
outsl
inc
popa
jp
push
cmpsl
cmp
pop
push
gs
imul
mov
push
outsb
jo
inc
push
inc
fs
movsb
inc
arpl
add
push
movsb
push
pushf
or
push
inc
cld
sbb
shlb
dec
mov
aam
loopne
js
inc
adc
add
daa
aas
inc
fpatan
sbb
and
add
add
fucomp
outsb
ds
mov
add
cltd
imul
inc
and
imul
out
rolb
adc
push
add
clc
mov
jb
lcall
add
push
pop
test
addl
jge
outsl
js
out
push
dec
or
movsl
fldl
add
and
and
dec
pusha
add
and
rcr
pop
push
dec
dec
cmp
add
cmp
shr
push
call
or
aas
pop
add
mov
push
or
inc
mov
lods
or
sahf
mov
add
jae
xchg
cmp
lds
rorb
push
addl
outsl
fldenv
push
mov
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
lock
sbbb
add
xor
add
jo
add
add
sbb
add
add
add
addb
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
clc
add
cmp
add
and
add
dec
add
cmp
add
jo
add
cwtl
add
xor
add
rolb
xor
add
call
add
add
add
xor
add
cmp
add
pusha
add
xor
add
mov
add
mov
add
fadds
add
add
sub
add
sub
sub
add
push
add
sub
add
js
add
mov
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
cmp
add
call
add
add
add
add
add
and
add
mov
add
or
add
roll
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
or
add
or
add
add
add
out
add
mov
add
or
add
add
push
lock
call
add
add
add
add
sti
add
call
add
add
add
add
push
add
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
or
mov
add
or
add
add
add
or
add
or
add
add
loopne
add
call
add
add
add
add
add
enter
mov
add
or
add
sbb
mov
add
or
add
add
add
sbb
call
add
add
add
add
add
add
es
rolb
add
or
add
add
add
add
add
add
add
add
add
add
sbb
add
call
add
add
add
add
add
add
add
or
add
add
add
add
add
ds
mov
add
or
add
jne
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
fadds
add
sub
add
add
add
or
add
add
loopne
add
xor
add
add
add
add
add
add
add
add
mov
mov
add
or
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
adc
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
push
add
imul
jae
and
push
add
arpl
jb
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
arpl
add
add
add
push
add
add
add
pusha
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
add
jo
and
push
add
jb
je
and
dec
add
jae
and
push
add
jns
jae
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
outsl
add
je
push
add
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
insl
add
add
popa
add
push
add
add
add
add
add
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
dec
leave
add
and
add
pop
leave
add
sub
add
addr16
add
xor
add
jae
add
cmp
add
or
add
leave
add
scas
leave
add
mov
leave
add
add
add
fmul
add
add
add
out
leave
add
add
add
cld
leave
add
add
add
push
lret
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
fs
xor
cs
insb
add
popa
addr16
insb
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
popa
addr16
outsb
insb
outsl
popa
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
jb
jo
inc
inc
push
inc
fs
imul
jb
inc
outsl
outsb
je
js
