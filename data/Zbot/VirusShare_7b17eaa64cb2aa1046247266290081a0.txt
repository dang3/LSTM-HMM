call
push
arpl
in
mov
sbb
jb
sub
das
mov
sahf
mov
cld
adc
inc
iret
outsl
and
imul
mov
fsubrl
inc
mov
jo
push
jge
insb
stos
xorl
aaa
mov
jmp
stc
sub
pop
jp
repnz
cld
push
and
jo
pop
xor
push
das
les
dec
jmp
iret
pextrw
cs
sub
adc
jae
insl
arpl
jne
mov
jmp
ljmp
jne
shl
nop
push
or
ret
fs
push
cwtl
or
ljmp
and
outsb
xchg
jge
sub
lcall
cmp
lcall
mov
aaa
into
cli
les
jno
fnstsw
push
xchg
mov
dec
dec
xchg
fdivs
jmp
das
mov
adc
xchg
jae
jle
fwait
inc
pop
push
push
push
int3
arpl
out
popl
scas
inc
push
mov
pusha
fnstcw
in
repz
push
rolb
pushf
insb
pop
mov
sub
cmpsl
xor
jne
mov
lods
dec
sbbb
push
sahf
inc
mov
jb
xchg
push
pop
mov
push
xorb
mov
jecxz
xor
jmp
out
cmc
rorb
inc
dec
adc
out
mov
pusha
jbe
sub
cmpsl
jg
inc
imul
and
mov
loopne
enter
daa
or
jnp
outsl
mov
shlb
add
incl
scas
adc
into
push
mov
mov
gs
and
inc
test
lods
or
daa
jo
cld
xchg
inc
push
test
or
mov
mov
popa
jns
mov
push
push
repz
out
sbb
or
push
mov
in
cs
arpl
nop
jp
repz
or
mov
adc
cs
fcoml
shrl
jecxz
xchg
sub
mov
pusha
test
adc
mov
jne
mov
decl
pusha
fndisi(8087
fdivr
out
lcall
dec
notb
dec
rol
jp
rclb
call
cld
test
ss
push
bnd
fisttps
sbb
and
sub
pusha
ljmp
inc
and
jg
sbb
inc
orb
xor
mov
jo
xor
enter
sbb
stc
adc
and
ljmp
lea
jmp
ljmp
cli
xchg
jbe
pop
gs
cmpsb
xor
stc
inc
test
jmp
ficoms
cmp
jg
incl
jmp
push
or
loopne
jnp
or
cmp
popf
adc
repz
ljmp
out
and
cmp
lret
loopne
icebp
xchg
mov
jne
lods
fnstcw
push
xchg
mov
jmp
decl
and
jns
and
jno
mov
aaa
pop
ljmp
shrb
sbb
dec
iret
or
lahf
and
sbb
sbb
into
xchg
mov
cmp
frstor
pusha
jmp
jle
mov
movsl
cmp
dec
stos
inc
aad
jmp
pop
into
cld
pusha
adc
fdiv
lret
rorl
ljmp
pop
fs
or
and
addb
add
mov
gs
jg
int
cmp
decl
lcall
xchg
jb
das
mov
dec
test
cmc
enter
push
ljmp
cwtl
jmp
pushf
sbb
in
push
mov
push
out
data16
mov
sarb
xor
pushl
popa
sub
mov
jb
push
mov
enter
sbb
jb
adcl
xor
inc
mov
dec
jo
dec
xor
rolb
bound
fcomps
jno
pushf
push
clc
or
push
incl
icebp
leave
js
sbb
in
aas
fwait
std
and
scas
inc
inc
mov
sbbb
adc
jle
lret
push
ljmp
mov
push
and
ret
test
cli
push
inc
sbb
mov
sbb
xchg
pop
decl
mov
adc
and
cmp
int3
jge
jl
inc
stc
push
push
mov
fwait
aad
sub
mov
cmp
dec
and
hlt
data16
call
cld
std
xlat
es
sbb
and
test
mov
dec
loope
shlb
pushl
jecxz
or
adc
add
sub
fbld
cltd
fdivrl
es
decl
add
das
sub
pop
mov
gs
out
pop
xlat
mov
cld
pop
jp
decl
pop
test
jbe
outsl
roll
out
sbb
cltd
cltd
jmp
sbb
xor
lcall
push
and
push
daa
dec
lods
or
and
scas
jmp
ss
ljmp
adc
xchg
aaa
dec
push
adc
addb
adc
push
repz
push
out
fisttpl
xchg
jle
rol
push
ss
and
pusha
sub
pop
or
sar
cmpsb
idivb
inc
cmp
iret
xlat
stc
cli
hlt
jg
lock
ljmp
cmp
int
mov
push
arpl
and
add
shl
jns
dec
mov
mov
ja
stos
mov
shlb
xor
lret
mov
jmp
and
pop
xor
push
jns
sahf
jo
inc
mov
inc
push
ret
decl
pop
lret
enter
xchg
pop
shrb
xchg
aas
ret
push
imul
push
mov
sbb
fs
insl
sub
mov
pavgb
cmp
scas
push
xchg
insb
inc
mov
jp
jns
and
add
cmp
pop
mov
cltd
add
stos
test
incl
xchg
repz
inc
out
fwait
cmc
mov
inc
dec
adc
outsl
inc
in
incl
lcall
stos
or
xchg
add
in
cmp
mov
fldl
insb
inc
lea
pop
movsb
sub
cmc
ficomps
pop
cmpsl
jbe
mov
jb
pusha
push
pop
pop
call
out
inc
int
inc
xchg
mov
jo
ficomps
push
jmp
mov
or
mov
in
xor
fwait
in
ljmp
ret
xchg
pop
ds
es
ret
sbb
push
pop
add
adc
lcall
outsl
stc
sbb
or
mov
jg
and
mov
mov
sahf
or
call
sub
ret
push
adc
lret
push
div
pop
stc
enter
rclb
xchg
hlt
shll
test
pop
cmp
inc
adc
int3
pop
add
mov
cmp
arpl
shl
cmp
imul
imul
inc
pop
popf
test
test
mov
aas
mov
dec
fsubrl
sbb
jle
jp
xchg
sbb
arpl
test
int
fiadds
jg
mov
divb
sbb
and
add
cmp
sbb
pop
dec
sti
fidivrl
incl
movsb
dec
lret
cwtl
push
fidivrs
pop
jge
jg
sbb
fs
lcall
test
aas
mov
pop
adcb
mov
adc
cmpsb
lds
inc
xchg
sub
lcall
jle
cltd
jecxz
mov
or
mov
pop
mov
pop
int3
int
sub
ljmp
decb
push
push
scas
adc
in
sub
mov
pop
lea
pop
les
mov
mov
mov
jg
adc
addr16
cli
pop
out
xor
je
fdivl
xlat
push
iret
xchg
pop
mov
sti
xchg
dec
stos
xchg
leave
mov
jo
mov
daa
movsb
or
ljmp
andl
insb
xchg
adc
sub
idivl
cwtl
inc
test
cmpsb
pushl
add
pop
cmp
xchg
jle
ret
sbb
fadd
xlat
notl
in
inc
add
lcall
movsl
cmpsb
push
sub
inc
inc
in
enter
sti
adc
dec
mov
mov
add
or
adc
out
push
pusha
int
jle
jbe
jmp
add
pushl
cmpb
push
stos
sti
push
mov
cmp
pop
cs
pushf
inc
xchg
stos
jmp
jl
adc
dec
scas
in
es
int
push
mov
ss
decl
sar
popfw
ljmp
jo
das
divl
cmpsl
pop
push
and
ja
lock
jmp
sbb
leave
jo
jp
xor
sbb
push
das
stos
mov
out
add
push
jne
mov
pushl
leave
add
outsb
ljmp
xor
orb
cltd
dec
fs
mov
sub
cmp
mov
mov
push
inc
inc
pmullw
mov
inc
mov
xchg
test
push
xchg
enter
dec
movsl
in
adc
pop
in
mov
xor
insb
movsl
pusha
fstl
andl
mov
push
daa
inc
add
fldt
ret
mov
mov
inc
or
mov
call
clc
sub
mov
jge
mov
cmp
jmp
push
ja
mov
mov
pop
mov
dec
out
test
push
mov
mov
adc
fwait
ret
inc
mov
cmp
in
sbb
sub
mov
mov
mov
dec
cmp
jg
in
push
pop
jl
dec
sub
cmpsb
andb
int3
jle
decb
test
lds
lahf
fstpl
cmc
fimuls
xor
dec
movsl
gs
rcrb
fnstcw
sti
loope
into
jae
dec
lods
rorl
ja
jne
sub
sbb
ja
pusha
mov
inc
loopne
ret
push
push
pop
mov
mov
add
mov
testl
jmp
inc
std
jmp
popa
gs
jo
mov
dec
push
push
repnz
lods
xchg
xchg
lds
jo
and
mov
pop
inc
sbb
inc
add
push
cmpsl
fsubs
xor
add
adc
fcompp
or
jmp
std
xchg
dec
mov
shlb
pushf
xchg
mov
or
xchg
mov
xor
addb
test
or
or
add
push
andl
orb
inc
add
nop
push
add
add
xchg
lods
pop
std
popf
sbb
push
mov
in
int3
inc
sbb
fs
aad
mov
dec
into
mov
pop
sub
mov
decl
push
jno
ret
cmpsb
cs
aas
inc
xor
pop
daa
push
sbb
pusha
daa
push
lcall
inc
pushf
push
add
popf
cmpl
and
loope
push
sub
fildll
sub
jmp
push
mov
insl
movsl
movsl
cmp
int3
jecxz
fwait
jae
movsb
cltd
das
test
jbe
mov
jecxz
in
pop
sbb
add
and
xchg
lret
mov
loop
daa
cmp
dec
sarl
testb
lods
dec
pop
fisttps
lock
test
or
xchg
das
aaa
in
insb
repnz
call
into
sub
and
shl
push
sub
scas
and
inc
enter
cmp
inc
cmp
outsl
xor
and
sbb
stos
and
incl
rcll
ret
imull
ret
mov
mov
or
pop
ds
je
sub
mov
sub
test
fistps
cmp
or
fdivrs
pop
or
mov
pop
inc
adc
mov
adc
sub
sbb
lods
arpl
cmp
xchg
and
outsb
das
xor
mov
push
mov
push
cmp
xchg
pop
cmp
imul
outsl
add
or
fs
popa
jge
scas
or
adc
dec
adc
insl
enter
in
aad
scas
xchg
sbb
or
mov
jge
sub
or
jbe
dec
lret
xor
pop
cmp
pop
cltd
aas
imul
xchg
pop
sub
adc
vphadduwd
sub
jmp
lods
imul
or
fldcw
pop
inc
xchg
pop
and
lods
decl
jno
lods
sub
sbb
cmc
sub
loop
lds
push
gs
lea
cmp
scas
pop
lods
popa
adc
insb
fidivl
stos
mov
lock
inc
mov
mov
add
mov
jmp
mov
cli
push
mov
jmp
repz
out
cmp
mov
sub
mov
stc
xor
cmp
loope
incl
push
adc
jno
rorb
dec
insb
clc
pop
push
testl
or
inc
addl
cmp
aaa
js
pop
xor
jp
lea
ficoms
lock
incb
xchg
test
sbbl
int
or
jge
mov
inc
lret
test
lahf
adc
xchg
insb
mov
dec
hlt
sbb
mov
push
ljmp
sub
mov
cli
cmpsb
jge
jnp
pop
rcll
mov
mov
test
call
push
mov
mov
mov
adc
fldenv
out
aad
in
lcall
push
mov
cmpsb
ud2
rclb
out
or
repz
out
dec
lcall
adc
inc
fucomip
shrb
rcrl
icebp
mov
jg
mov
jmp
sbb
and
dec
rcl
mov
add
mov
xor
in
cmpsb
ss
sub
dec
mov
call
mov
adc
inc
jp
or
hlt
cmp
das
dec
inc
mov
mov
pushl
push
mov
imul
push
shrb
xor
dec
mov
and
fwait
incl
lret
push
cld
add
mov
rorb
mov
xor
lret
incl
or
sub
push
mov
and
add
decl
test
cmpsb
mov
test
add
mov
jb
dec
in
pop
addr16
daa
xor
push
adc
ret
daa
test
shrb
imulb
clc
add
outsl
es
imul
cmp
mov
cmc
enter
mov
pusha
push
sbb
push
sbb
outsb
inc
popa
ja
or
sub
stos
and
mov
sbb
adc
push
add
add
xorl
and
adc
movsb
xorb
adc
fldl
loopne
in
add
sbbl
jmp
xor
leave
sub
inc
push
adc
mov
adc
add
push
adc
mov
mov
adc
nop
inc
add
add
subl
call
and
add
and
push
dec
andb
or
adc
nop
push
add
add
stos
lea
xchg
fbstp
cmp
xor
mov
cmpsl
mov
out
push
inc
test
pop
lret
mov
outsb
ja
and
jns
aam
fsts
jg
cmp
popf
scas
mov
test
cmc
sahf
push
inc
dec
xor
inc
enter
lcall
pop
push
jmp
jle
push
mov
mov
inc
push
dec
xor
xchg
and
jmp
popa
shrl
pop
mov
mov
lods
push
popa
das
cmpsl
std
sarl
cwtl
repnz
dec
dec
cs
in
lcall
sub
mov
pop
or
inc
push
outsb
push
cld
pop
sti
scas
or
leave
pop
fcomi
push
push
jo
stc
ljmp
and
cltd
scas
jl
pop
pop
mov
movsb
mov
cmpsl
mov
adc
pop
mov
mov
or
push
mov
out
and
insl
jo
and
push
filds
lcall
adc
das
jmp
dec
dec
and
push
cmc
and
and
ds
outsl
loope
ljmp
lea
mov
push
loope
inc
dec
mov
std
add
jmp
adc
out
orl
dec
mov
ja
dec
xor
out
mov
mov
mov
jge
loop
xchg
adc
lods
xlat
arpl
hlt
pop
sarl
data16
incl
mov
xlat
rorb
dec
fimuls
dec
lds
mov
lock
aas
xchg
imul
push
add
in
popa
mov
lret
xchg
xchg
adc
leave
fs
mov
push
mov
ficomps
scas
pop
divl
ljmp
mov
loopne
mov
setns
imul
jmp
sbb
js
sbb
mov
outsl
sub
into
mov
or
xor
call
lods
sub
add
lock
ss
inc
aaa
ljmp
mov
pop
scas
sub
insl
cltd
movsl
sub
dec
sbb
fadds
dec
inc
lahf
pop
mov
sub
imul
push
sub
scas
pop
cmpsl
xor
inc
jmp
movsb
cmpsb
cmpb
xchg
pop
scas
je
xor
xchg
andb
stos
hlt
fsubs
lcall
daa
inc
xchg
lea
aaa
mov
inc
aam
push
cmpl
and
mov
sbb
ljmp
imull
ljmp
adc
and
decl
pop
dec
bound
sbb
xlat
xchg
jbe
enter
jno
scas
int3
sbb
sbbb
stos
imul
test
mov
add
add
nop
push
inc
push
and
enter
mov
or
sub
adc
add
call
add
or
or
inc
push
push
or
incl
add
iret
adc
and
pop
incl
insl
cmp
inc
jge
mov
pop
and
push
adc
insb
push
mov
aas
ljmp
dec
inc
std
ja
dec
adc
test
adc
sub
and
std
lret
insb
push
inc
push
xchg
scas
adc
stc
insb
in
inc
adc
out
inc
ljmp
cmp
jbe
jae
sub
enter
pushf
xchg
adc
push
push
pusha
dec
mov
insb
test
jns
mov
pop
xchg
push
andb
iret
add
in
inc
adc
sub
pushf
inc
pop
add
outsl
sbb
test
jge
jmp
pop
popf
daa
mov
or
dec
push
or
addr16
in
ljmp
fcomps
pop
jge
xorb
fwait
jl
xchg
push
lcall
or
imul
mov
popf
aad
push
adc
jbe
out
adc
jo
xor
outsl
dec
jb
cmp
inc
inc
inc
sbb
pop
mov
jg
adcb
out
or
xchg
xchg
bound
sbb
mov
pop
jge
xchg
cmp
push
decb
in
les
call
fadds
push
test
jge
mov
jo
xchg
mov
insb
mov
xchg
icebp
jmp
add
xchg
jle
jg
ljmp
jle
xchg
jl
rclb
add
xor
ja
outsl
out
lcall
mov
popa
or
test
addl
lock
xchg
jmp
in
out
push
out
mov
xchg
outsl
decl
ss
add
mov
mov
lcall
mov
jmp
sti
mov
mov
fcmovnbe
jmp
in
fsts
fdivrl
pop
pop
icebp
dec
adc
or
jle
add
sbbb
clc
mov
jl
mov
pop
sub
inc
scas
pop
lds
xor
ja
cltd
jno
andl
cmp
popf
sbb
imul
scas
push
add
popa
push
lea
add
decb
mov
aaa
xchg
rep
pop
lock
inc
jmp
mov
jnp
mov
jg
stc
int
mov
loope
xchg
sbb
dec
mov
sahf
mov
out
mov
fisubl
or
push
add
clc
mov
out
imul
push
or
lcall
pushf
out
movsb
adc
and
loopne
pop
mov
insb
adc
sub
inc
and
in
pushf
scas
insb
pusha
cwtl
adc
fstpl
insl
jae
out
add
outsl
cmp
xor
sub
pop
cli
fistps
lahf
xor
sub
outsl
jns
adc
setne
pushl
pop
cmp
cmpsl
xchg
or
rorb
cmp
mov
lods
and
xchg
inc
out
outsl
outsb
xchg
out
mov
inc
pop
in
pop
enter
inc
xlat
rol
dec
xchg
xchg
push
sti
std
imull
jmp
pop
or
addr16
test
scas
cmp
fistps
mov
pop
and
jg
dec
mov
add
mov
jne
in
test
imul
cltd
mov
shl
xchg
push
mov
xchg
jmp
cwtl
push
jle
mov
mov
gs
add
sub
mov
addr16
out
in
xchg
ds
lock
fistpl
stos
push
arpl
jmp
cwtl
cmpsb
test
sbb
loope
ljmp
clc
fdivr
push
pop
xchg
mov
mov
sub
rcl
aam
pop
push
insb
addr16
popf
stos
sbb
mov
imul
in
and
dec
lods
sahf
out
fdivrs
fs
adc
arpl
adc
xchg
cwtl
inc
push
in
out
mov
inc
js
pusha
js
popa
fs
outsl
fucomi
popf
out
inc
inc
pusha
gs
insl
cmp
out
mov
cmp
xor
decb
in
sbb
out
loop
iret
sbb
fucomip
lcall
loope
xor
fucomi
imul
in
or
sbb
aaa
cld
pushl
ret
inc
adc
ds
cld
jl
xor
cmp
scas
mov
adc
popa
outsb
out
es
sub
pop
aaa
ljmp
cmp
inc
fmuls
sub
xchg
xchg
adc
incl
pop
fs
xchg
scas
sub
gs
push
mov
mov
or
xchg
popa
jae
jno
cwtl
popa
jnp
push
or
arpl
ljmp
pop
jo
xchg
dec
popf
and
icebp
sbb
fisubrs
out
repz
jae
call
mov
sbbb
das
loop
aam
mov
popf
mov
sub
pop
out
push
adc
insl
push
pop
jle
hlt
pushl
sub
add
sub
xchg
mov
lock
ljmp
lcall
adc
inc
inc
push
inc
sbb
je,pt
test
call
cs
clc
mov
sahf
cwtl
imul
mov
lcall
mov
out
pop
jmp
inc
call
js
les
rcrb
sar
push
imul
adc
mov
inc
dec
data16
xchg
or
call
loopne
sub
push
out
sub
clc
mov
sahf
jmp
mov
push
xchg
in
mov
fwait
mulb
in
cmp
popf
loop
and
adc
push
and
bound
ret
fwait
inc
push
push
out
jle
nop
out
add
mov
xchg
sub
push
xchg
pop
mov
adc
push
mov
outsl
mov
mov
sbb
mov
and
pop
cmp
incl
cwtl
mov
dec
movsl
sub
adc
aam
ret
shrl
push
push
fcoms
add
insb
sub
scas
xor
lods
sub
notb
sub
mov
cltd
mov
hlt
mov
cmpsl
fidivs
int
scas
jbe
push
incl
push
testb
mov
jecxz
pop
int3
in
dec
out
cld
add
int
aaa
jl
jg
lcall
add
mov
inc
mov
out
ret
das
enter
or
mov
mov
fcmovnu
call
je
jne
jo
push
dec
push
xor
dec
push
outsl
popa
bound
jno
call
inc
pop
push
xor
insl
xor
push
ss
inc
dec
pop
dec
dec
push
dec
imul
insb
inc
xor
jb
inc
js
jne
dec
inc
xor
push
push
jp
push
xor
dec
push
ss
dec
imul
inc
outsb
xor
push
push
inc
imul
jne
inc
arpl
push
push
pop
bound
dec
jns
imul
push
jmp
dec
xor
xor
cmp
insb
sbb
jno
pop
dec
push
dec
cmp
inc
dec
insb
inc
push
call
fnsave
popa
insb
cwtl
js
inc
jbe
gs
cmp
ss
dec
dec
inc
imul
mov
mov
mov
jno
push
jns
aaa
imul
incl
push
dec
js
outsl
cmp
outsb
dec
pop
xor
cmp
dec
jbe
imul
inc
cmp
xlat
mov
ljmp
pop
outsb
dec
inc
inc
xor
bound
ja
xor
inc
add
insb
bound
outsl
loopne,pn
jg
jne
inc
pop
outsb
jbe
fs
fs
cmp
jo
xor
jno
jbe
sar
fsubrl
jb
js
arpl
pop
imul
add
push
cld
negb
push
push
xchg
dec
jne
push
push
xor
popa
push
dec
jp
shll
jno
xor
xor
inc
bound
lock
and
jg
cmp
xor
inc
outsl
pop
jno
pop
inc
insb
jae
popa
push
dec
jo
insb
imul
je
jo
add
subb
add
add
xchg
push
xor
add
and
jb
or
push
mov
add
xor
movsb
jns
out
push
out
jae
iret
test
sahf
or
pop
enter
loop
jns
int
call
mov
in
sahf
inc
jecxz
jo
nop
out
add
js
repz
in
pushf
dec
pop
cmc
inc
cmp
and
ja
cmp
imul
inc
sub
outsb
sbb
jbe
push
or
push
mov
adc
data16
and
adc
adc
outsl
mov
cmp
sbb
sbb
sbb
jbe
fstps
xor
inc
ss
mov
rorb
sahf
loop
lahf
imulb
loopne
inc
xor
ret
xchg
sahf
mov
mov
dec
mov
push
mov
subl
mov
xchg
adc
lcall
and
jmp
idivb
daa
out
dec
test
dec
push
popf
inc
test
pop
jnp,pt
js
rolb
pop
sti
jbe
adc
push
or
and
pop
adc
mov
in
sarl
push
inc
fisttpll
lcall
out
adc
cmpsl
dec
jo
cmp
sbb
add
mov
popa
push
jbe
pop
xchg
loop
or
pop
xlat
inc
aas
inc
enter
js
out
mov
pop
jbe
pop
test
or
mov
cmp
outsl
ret
push
mov
and
inc
adc
es
jb
push
pop
insb
cmp
sub
aas
leave
mov
scas
leave
jne
push
push
push
mov
xchg
insl
mov
push
jo
out
icebp
sarl
add
mov
ss
mov
or
imul
jns
test
jle
or
pop
sti
fiaddl
das
jge
mov
les
out
jmp
out
addr16
call
out
into
loope
jbe
push
jae
loop
fsts
out
pop
inc
icebp
dec
push
scas
ds
lcall
jne
lds
in
jmp
out
imul
gs
xor
cs
insb
pop
inc
sbb
jg
je
inc
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
out
aad
push
add
pop
jb
dec
outsb
and
notb
and
imul
inc
jb
sbb
outsb
fwait
inc
outsl
arpl
or
pop
mov
subb
xor
inc
outsl
jne
pop
in
std
push
push
outsw
jb
popa
outsb
arpl
sbb
jg
int
push
adc
sbb
jb
cmp
cs
push
fs
push
mov
jbe
mov
cs
ds
ja
rcrl
push
imul
popa
jb
outsl
dec
jne
mov
jns
sub
mov
sub
sub
movsb
mov
add
fildl
pop
arpl
sbb
pusha
rcr
jb
jns
js
push
dec
and
and
popa
divb
rcr
mov
pop
inc
and
cmp
fs
jae
imul
push
lods
xor
push
or
inc
imul
dec
popa
insl
sub
xchg
mov
out
loopne
outsl
insl
mov
lods
mov
fs
jb
scas
shlb
bound
mov
loopne
mov
xor
incl
pop
mov
cmp
jo
sti
cmp
ss
push
outsl
xchg
fisubrl
xor
inc
pop
dec
data16
push
je
xorb
push
out
rclb
cmp
popa
imul
sbb
pop
adc
xchg
cmpsl
lea
push
jns
inc
sbb
loopne
xchg
dec
push
mov
sub
gs
add
jb
jae
int3
mov
mov
popa
addr16
outsl
mov
dec
gs
push
inc
jbe
jo
jae
cwtl
loop
addr16
add
push
cs
outsb
mov
shrl
clc
and
outsl
adc
je
push
jns
sbb
xchg
gs
icebp
pop
pop
aas
and
dec
mov
daa
lret
mov
subl
rorb
inc
lds
inc
shrl
sbb
inc
push
lcall
push
insb
push
dec
bound
repz
ljmp
jno
jb
sub
sbb
scas
mov
in
mov
stos
jecxz
jbe
out
mov
fildll
inc
imul
sub
add
fs
xchg
arpl
or
xor
or
outsl
popa
sub
sti
lods
popl
push
mov
insb
push
sbb
adc
push
aad
sahf
jae
mov
jo
jae
inc
rcrb
cmpsl
pushf
xchg
sub
sub
daa
push
add
int3
add
pop
inc
sbb
ret
add
push
frstor
push
out
in
mov
pop
sbb
mov
add
inc
jo
pop
rclb
adc
sbb
mov
pop
test
push
and
mov
outsl
adc
sbb
adc
hlt
es
add
addb
sbb
lds
jo
lret
movsb
in
jnp
cltd
add
xchg
dec
push
xor
inc
imul
mov
insb
js
stos
rcrb
ss
arpl
movsl
jecxz
add
adc
idivl
pusha
arpl
add
insl
orl
xor
and
fcoms
ret
gs
andl
fdivrl
jo
addr16
xchg
xchg
push
cmpsl
jecxz
outsl
pop
inc
popa
shll
inc
cmpsl
push
xchg
xchg
scas
adc
daa
sub
sbb
ficompl
jne
push
ja
push
push
cmp
push
in
inc
adc
and
in
sbb
fcomps
inc
hlt
popa
ret
nop
add
pop
inc
insb
adc
pop
lret
xlat
mov
mov
xchg
dec
xchg
push
mov
jo
popa
data16
sub
mov
push
call
sub
loopne
in
jb
pushf
sub
dec
sbb
adc
shrl
outsl
jo
sbb
push
jmp
test
pop
add
xorl
and
adc
push
and
sub
test
add
sub
mov
add
adc
adc
nop
inc
inc
or
and
push
or
add
or
add
nop
push
add
add
andl
inc
push
push
push
or
add
decl
inc
add
mov
add
and
add
nop
push
add
add
xorl
and
adc
add
add
push
fcos
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
mov
and
add
subl
inc
add
fs
add
nop
inc
inc
gs
incl
and
test
push
inc
xchg
incl
pop
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
xchg
inc
inc
xchg
sub
mov
sub
push
mov
inc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
inc
add
and
mov
mov
in
add
popf
cmp
sahf
mull
jns
jnp
lock
push
jbe
push
es
jns
out
push
bound
mov
iret
repz
jns
cmpsl
stc
or
out
sahf
out
jl
pushf
mov
repz
int3
loop
adc
repz
fs
xchg
sti
cmp
rep
rcl
clc
lahf
into
cmp
repz
mov
outsb
repz
repz
cmpsb
mov
iret
fsubr
add
repz
repz
data16
movsb
out
cmp
mov
fdiv
or
and
dec
pusha
jo
jns
out
cwtl
test
shl
repz
out
push
mov
repz
pop
je
lcall
cli
or
xor
jo
out
sahf
out
mov
repz
in
add
cmp
repz
js
mov
repz
clc
push
cmpsb
push
out
sahf
out
ds
data16
out
sahf
mov
cmp
sarl
adc
xor
cmp
repz
outsb
xchg
iret
mov
test
cmp
repz
ss
pop
insb
jl
repz
xchg
lods
mov
cmpsl
stc
cmp
or
sbb
inc
jns
out
pop
jb
mov
out
fdiv
or
iret
cs
push
fs
cmp
repz
mov
aam
jns
cmpsl
stc
add
out
sahf
out
insb
adcb
mov
lods
sbb
iret
repz
inc
pop
jb
repz
repz
mov
lods
cmp
cmp
lods
lods
push
sub
dec
repz
repz
test
cmpsl
stc
cmp
out
push
scas
es
out
sahf
ds
push
xchg
test
ret
out
rcl
scas
data16
scas
repz
cmp
sub
dec
pop
iret
repz
je
lcall
cmp
pushw
mov
inc
iret
repz
push
fs
pushf
mov
iret
repz
fsubr
add
adc
sahf
out
and
dec
pop
insb
out
sahf
out
mov
sahf
aam
hlt
add
sbb
cmp
repz
pop
push
nop
repz
repz
out
sahf
out
mov
and
dec
sahf
out
sahf
pop
push
jl
out
int3
fsubr
cld
adc
cmp
js
repz
mov
sahf
cmpsl
stc
cmp
or
and
inc
jns
out
push
push
mov
mov
push
mov
repz
push
cs
fs
iret
repz
lcall
repz
add
sbb
inc
out
sahf
out
push
out
sahf
test
into
in
or
cmp
repz
xor
push
fs
repz
mov
ds
fdiv
add
jns
ds
fs
lcall
in
add
adc
cmp
iret
repz
jb
lcall
cmp
lock
out
ds
fs
out
sahf
out
mov
in
iret
repz
add
sbb
inc
push
fs
repz
mov
iret
repz
or
and
out
sahf
out
bound
mov
mov
pop
mov
push
xor
push
sahf
nop
cmpsb
mov
iret
sarl
and
dec
pop
repz
rep
xchg
cmp
into
in
or
into
push
cmp
cmp
repz
pusha
jo
cwtl
out
cmp
mov
fsubr
add
sahf
out
sahf
adc
xor
jo
sahf
out
xchg
xor
out
testb
xor
repz
dec
bound
cwtl
test
iret
repz
enter
ret
jns
out
sbb
cmp
out
sahf
out
adcb
sahf
int3
loop
add
adc
cmp
repz
push
push
iret
rep
mov
cmp
repz
or
push
xor
push
cmp
repz
lcall
fsubr
add
sbb
sahf
out
sahf
inc
pop
jb
sahf
scas
jl
out
in
cld
adc
repz
shrl
dec
pop
insb
iret
repz
jl
mov
mov
into
enter
iret
repz
push
data16
sahf
mov
iret
repz
out
push
leave
push
jns
out
cs
outsb
xchg
jns
out
cmpsb
mov
ja
hlt
or
into
push
sub
out
sahf
out
jbe
mov
sahf
ret
add
push
cs
repz
pop
jb
lcall
fsubr
push
int3
out
sahf
cmpsl
push
cs
pop
sahf
out
sahf
outsb
jle
cmpsb
mov
xor
out
fsubr
cld
adc
and
cmp
repz
outsb
test
repz
lcall
cmpsl
or
dec
out
sahf
out
jo
mov
sahf
into
in
adc
sub
iret
repz
outsb
jle
cmpsb
stc
cmp
repz
out
push
shl
jns
cmpsl
push
ss
data16
out
sahf
mov
cmp
repz
push
shll
cmp
repz
repz
je
mov
iret
shl
testb
push
sahf
out
sahf
cs
fs
jns
out
mov
repz
repz
rcrl
cs
push
iret
repz
insb
test
stc
cmp
or
sbb
inc
jns
out
push
push
jns
out
out
iret
repz
push
aad
sub
pop
insb
cmp
repz
lcall
repz
adc
sub
out
sahf
out
push
idivl
ret
clc
pop
xlat
out
sahf
out
inc
push
data16
lahf
out
sahf
movsb
mov
fdivrs
repz
xor
pop
insb
repz
repz
mov
ds
loop
adc
sub
sahf
out
sahf
dec
pop
push
nop
mov
mov
cmp
rcll
sub
push
iret
repz
jp
mov
cmpsl
stc
cmp
or
and
push
jns
out
data16
mov
out
fdivp
push
fcompl
repz
xor
push
fs
cmp
repz
mov
sahf
cmpsl
stc
adc
and
dec
pop
out
sahf
out
jp
lcall
cli
adc
sub
repz
push
pusha
jo
repz
pause
mov
imul
fildll
sahf
out
sahf
push
push
nop
mov
jns
fsubr
add
adc
cmp
repz
dec
pop
push
repz
adcb
cmpsl
stc
cmp
or
sbb
inc
jns
out
push
insb
jl
pushf
idivl
out
mov
outsb
jns
out
loop
sub
push
js
cwtl
test
jns
add
jecxz
xor
jns
out
push
pusha
js
lahf
out
sahf
test
shr
clc
push
in
iret
repz
cmp
push
repz
pause
mov
jns
iret
out
add
adc
xor
out
sahf
inc
pop
jo
xchg
lods
xor
out
ret
add
sbb
cmp
repz
bound
repz
mov
repz
into
out
xor
iret
repz
pusha
jbe
mov
repz
lock
call
out
inc
push
push
xchg
out
sahf
out
mov
repz
or
and
dec
data16
iret
repz
sahf
mov
fidivrl
iret
repz
jns
out
bound
xchg
lahf
out
sahf
test
enter
jmp
iret
repz
xor
pusha
repz
repz
sahf
scas
mov
into
fdivp
add
sbb
out
sahf
xor
bound
jns
out
mov
repz
out
adc
sub
dec
iret
repz
pop
outsb
xchg
clc
cmp
fsubrp
fsubrp
out
iret
repz
push
xor
push
cmp
repz
mov
lcall
sub
out
sahf
out
insb
jl
pushf
lahf
out
sahf
lods
mov
lock
repz
cmp
jp
cmp
repz
out
cmp
call
push
inc
pop
repz
repz
mov
ds
out
push
repnz
sahf
out
sahf
inc
pop
push
xchg
mov
mov
repz
rcll
sub
push
js
sahf
mov
aam
jns
cmp
hlt
rep
hlt
push
xor
out
dec
pop
jb
sahf
out
sahf
out
int3
fdiv
hlt
into
cmc
jns
out
push
sub
bound
jns
out
mov
sarl
clc
push
mulb
ds
cmp
repz
jbe
xchg
cmpsb
stc
cmp
repz
mul
jns
cmpsl
and
dec
pop
outsb
sahf
out
sahf
test
dec
repz
adc
sub
push
repz
repz
out
ds
push
stc
sbb
sahf
out
sahf
inc
push
push
mov
mov
shl
cli
repz
repz
sub
dec
fs
repz
je
xchg
lods
mov
cmp
cli
adc
and
jns
out
inc
pop
push
sahf
out
scas
mov
xor
hlt
add
adc
cmp
iret
repz
jb
xchg
mov
mov
shr
cld
dec
cld
out
fidivrs
push
cmp
sahf
out
sahf
adcb
dec
repz
add
sbb
cmp
cmp
repz
pop
jo
nop
iret
repz
mov
sahf
out
ds
sub
push
fs
out
je
pushf
mov
in
js
out
call
push
out
sahf
out
xor
bound
lahf
out
sahf
cmpsb
mov
add
repz
cmp
push
repz
repz
out
ds
push
add
push
cs
repz
repz
outsb
test
mov
add
cmp
je
jns
out
mov
jns
push
loopne
sbb
cs
inc
out
sahf
out
bound
jl
in
push
add
iret
repz
mov
cmpsl
stc
and
inc
pop
push
out
in
cld
push
pop
iret
repz
push
cs
bound
int
cmp
pop
mov
sahf
out
cmp
lock
or
jns
out
xor
dec
pop
js
add
daa
mov
add
adc
jecxz
add
sub
xchg
and
inc
push
jne
mov
cli
fcmovnu
mov
jg
xor
adc
test
cmpsb
aaa
adc
pop
dec
scas
out
stos
insl
jo
dec
sbb
test
mov
mov
icebp
jae
bound
cwtl
lcall
mov
es
sub
dec
mov
mov
fisubs
test
nop
dec
or
jmp
or
add
sbb
mov
fxch
push
les
jo
or
lcall
mov
aad
cmp
cmp
in
adc
adc
cmpsl
inc
or
shll
cld
lcall
popa
jb
push
jge
jns
sub
jp
insl
lahf
jae
sub
sub
fists
or
jle
imul
mov
rolb
jmp
insl
push
sbb
mov
or
pop
xor
mov
sar
incl
mov
cmc
punpckldq
and
movsb
addr16
into
repnz
fsubs
mov
mov
ss
cs
daa
lret
jecxz
adc
mov
decl
leave
xor
jmp
sub
mov
adc
ds
push
dec
cmp
enter
incl
pop
leave
imul
dec
mov
shll
test
add
cmpsb
or
hlt
lea
add
das
inc
mov
mov
inc
dec
mov
mov
sti
int
dec
mov
push
push
lahf
mov
mov
xchg
mov
sbb
daa
jmp
mov
in
mov
fdivrl
aaa
fiadds
movsb
in
test
adc
mov
ljmp
xchg
out
push
pop
imul
lret
lock
jecxz
dec
pop
inc
xor
xchg
mov
lcall
and
or
cmp
pop
or
jbe
iret
or
nop
subb
inc
pop
fdivrl
cmp
jp
mov
inc
cmpsl
or
dec
push
cwtl
aas
adc
mov
stc
loope
cmp
scas
lret
aaa
jbe
icebp
outsl
sub
cmc
pushf
nop
jae
cltd
inc
ja
sub
aam
mov
dec
popa
aad
inc
test
insl
je
jns
aad
dec
xchg
leave
popf
rclb
inc
adc
loope
mov
add
push
loop
mov
repnz
sub
adc
lods
add
into
push
xor
ja
jmp
int
sub
jo
xlat
adc
shll
fwait
sub
cmp
xchg
lahf
ljmp
gs
mov
imul
mov
arpl
mov
sub
js
xchg
repnz
lcall
jno
cmovns
xchg
test
inc
scas
addr16
in
mov
sub
shl
mov
call
push
sbb
pop
push
scas
pop
andl
jmp
stos
pop
push
push
jl
inc
or
xchg
psubsb
es
idivb
add
test
jmp
cli
mov
cld
jecxz
mov
adc
stos
fs
inc
inc
cltd
jp
loope
fs
jg
dec
fcomps
adc
in
lods
out
mov
jb
mov
testb
inc
jns
sbb
push
jg
inc
lret
cwtl
mov
dec
pop
ja
testl
cwtl
jb
dec
fcos
dec
out
in
push
jbe
pushf
in
cmp
insl
sti
inc
lea
in
mov
lret
mov
in
lds
mov
int3
jo
or
jbe
in
sbb
fidivl
dec
push
push
scas
mov
xchg
sbb
loop
int3
xor
je
adc
negl
pop
jle
jle
dec
les
sub
das
inc
movsl
hlt
sarb
sub
push
jnp
das
pusha
or
pop
jno
cmp
ljmp
fimuls
mov
mov
add
iret
cmpb
or
xchg
mov
xor
jg
xlat
pop
adc
daa
pop
sub
pop
lods
sahf
int3
dec
loopne
ljmp
adc
push
mov
inc
adc
faddl
mov
mov
jo
cld
cwtl
into
and
add
and
in
mov
jmp
pushl
enter
lds
add
lcall
ss
push
or
cmp
pop
jbe
loope
sub
dec
decl
jg
jne
mov
out
clc
sub
loop
dec
fdivrl
lcall
adc
outsb
xor
outsb
add
mov
lret
jnp
ljmp
sar
jmp
lea
int
lods
call
ss
call
jg
js
pop
dec
push
mov
int3
sbb
cli
out
xchg
fistps
cmpsb
lcall
pop
int
and
gs
mov
mov
clc
addr16
sub
decl
sbb
in
xor
adc
push
mov
xor
mov
inc
mov
mov
call
icebp
fiadds
movl
jmp
mov
push
clc
sbb
mov
fidivs
decl
pop
fisttps
pusha
push
push
jne
mov
test
scas
into
sub
jl
mov
test
fdiv
repnz
sbb
notb
leave
cltd
stos
leave
fwait
cmp
jecxz
pop
call
call
mov
xor
dec
sub
frstor
testb
repz
std
mov
adc
imul
push
and
pushl
enter
insb
pop
pop
mov
stos
add
mov
out
shl
or
decl
cmp
shl
lock
or
in
xchg
sbb
mov
lock
ret
inc
mov
mov
xchg
dec
xchg
fcmovnb
adc
cmc
adc
popa
test
or
dec
lods
mov
sub
fisttpl
fiaddl
and
or
xor
dec
inc
movl
mov
sub
cs
sbb
imul
outsb
stos
sub
inc
scas
test
arpl
lcall
aad
push
lret
pop
xor
add
mov
and
pop
jno
lret
fs
pop
add
pushl
fdivrl
sbbb
xlat
arpl
stc
daa
or
lods
xor
out
repz
pop
enter
inc
pushl
repz
outsb
jg
push
jle
cmc
rolb
add
inc
in
jo
push
xchg
pop
roll
ljmp
dec
mov
lods
decb
jge
fisubl
js
mov
sub
jge
cmpsl
mov
stc
sub
xor
cwtl
fldl
outsl
pop
mov
in
das
sbb
filds
in
mov
out
std
sub
scas
or
push
mov
push
and
jmp
insl
push
pusha
insl
jp
sti
push
or
jl
jno
mov
pop
call
aaa
sahf
mov
mov
enter
sbb
push
mov
sar
incl
cwtl
leave
cmc
sets
movsb
idivl
dec
xor
cltd
xchg
xchg
push
fcomi
xchg
aad
aaa
out
arpl
jmp
or
jne
scas
jle,pt
hlt
xchg
jb
ficomps
cmp
mov
push
pop
jne
push
sub
call
icebp
leave
mov
mov
pop
enter
inc
insl
loopne
shll
decl
pop
jg
cmpl
sbbl
loop
mov
jbe
call
cmpsb
std
mov
jge
rclb
mov
xchg
icebp
insb
push
andb
pminsw
pop
adc
nop
jg
call
mov
aas
xlat
insb
and
inc
cs
xchg
sbb
cmp
iret
push
inc
aad
sub
shrd
bound
lcall
ja
add
cs
fs
or
cmp
cli
adc
jl
rcr
fs
lods
jmp
in
xchg
pop
aad
je
pop
xor
inc
dec
inc
cld
dec
and
add
xchg
pop
jl
or
cmp
sbb
push
inc
pushf
clc
cmpsl
int
ret
repnz
into
ja
idiv
ljmp
push
inc
sbb
or
sub
movsb
outsb
out
or
in
lret
std
je
out
cmp
mov
jl
xor
jp
jns
in
mov
jge
mov
aaa
xchg
pop
les
add
icebp
xor
xor
jb
adc
jmp
es
out
sub
outsl
pushf
leave
jg
push
dec
ret
dec
jecxz
loopne
in
in
fnstsw
pushl
cmp
pop
push
je
in
mov
lcall
ss
push
scas
cli
cmp
or
mov
xchg
sub
aad
pushl
sahf
sti
cltd
xor
cwtl
sbb
inc
mov
sub
movsl
dec
imul
das
rorb
sar
enter
mov
dec
add
mov
ljmp
jae
adc
mov
mov
xchg
xchg
ljmp
mov
decl
dec
cmp
popf
inc
pop
idivb
pop
jae
fwait
cmpsl
in
repnz
insb
out
sar
daa
jne
sti
sbb
ss
ror
jle
adc
stos
outsl
mov
decl
push
jge
xchg
xchg
imul
lock
loop
sbb
sbb
jle
jle
inc
pop
mov
pusha
dec
sub
daa
dec
jnp
mov
add
pop
mov
fisttps
jge
aas
push
decl
mov
lods
insb
xor
xor
xor
sti
jae
call
lock
incl
loop
hlt
lock
ds
jge
lahf
lret
jns
or
sub
xchg
dec
adc
mov
lcall
aam
adc
mov
lock
mov
test
mov
decl
jbe
aad
andb
push
pop
rcll
arpl
fs
imul
adc
popf
fdivr
ljmp
ss
jnp
scas
mov
mov
movb
and
jns
dec
rolb
aad
incl
loopne
outsl
jae
scas
and
mov
imul
jp
adc
test
repz
mov
mov
std
call
xchg
dec
rcll
sub
cmp
icebp
inc
mov
inc
scas
mov
loop
addr16
in
stos
push
cmp
in
lock
pop
arpl
jbe
js
loope
ljmp
clc
xor
dec
fnsave
ficoms
mov
jecxz
fisttpl
dec
mov
call
xchg
jne
in
and
push
jg
mov
xchg
pop
dec
aas
mov
es
mov
cs
out
fisubs
rclb
loopne
cmp
add
cwtl
lret
ja
icebp
lods
sahf
xor
das
clc
ljmp
or
mov
adc
and
push
movsb
gs
int3
insb
xor
cmp
and
call
cmp
mov
test
xor
movsl
repz
aam
push
adc
add
mov
stos
push
sbb
mov
pushf
dec
push
xchg
pop
dec
pop
push
xchg
push
out
stos
nop
fadds
mov
in
push
mov
add
mov
ljmp
leave
pop
and
push
jb
subl
pop
psllq
imul
call
inc
pop
mov
into
push
push
jno
or
dec
jne
push
or
pop
popa
ss
lret
ljmp
call
iret
cmc
cmpsl
bound
jnp
ljmp
insb
mov
decl
inc
int
inc
mov
sbb
inc
xlat
mov
push
andl
push
shlb
push
scas
cmc
mov
gs
jns
sbb
cltd
pop
push
push
lods
cmpsb
mov
or
adc
add
xorl
out
int3
cmp
fisttps
sbb
out
cwtl
pushf
adc
mov
mov
and
adc
popf
lods
cmc
lcall
ret
cltd
cwtl
push
or
xchg
sbb
mov
add
test
push
rcrb
stos
lcall
sub
xchg
fists
sahf
inc
mov
pop
inc
xchg
lret
add
enter
stos
xchg
add
push
inc
sub
mov
jle
bound
outsl
hlt
dec
out
cmp
icebp
fldt
mov
adc
popa
xchg
leave
decl
mov
inc
jne
enter
push
movsb
jmp
call
sti
mov
cmpsb
fistpl
mov
xchg
loopne
imul
aam
push
xchg
incl
in
mov
inc
repnz
add
pushl
call
cmpl
inc
add
sub
jp
ret
lahf
sbb
sar
cmp
xor
dec
rorb
sbb
scas
inc
roll
and
jmp
movsbl
js
mulb
push
mov
inc
ret
repz
push
mov
xor
cwtl
add
pop
mov
mov
decb
sub
jb
sub
jg
xchg
cld
fadds
lods
test
cli
add
popf
std
pop
xchg
subl
or
or
adc
ss
inc
jo
idivb
cwtl
test
int3
inc
mov
sub
call
inc
leave
movsb
mov
fdivrs
jae
lea
push
aam
push
dec
mov
mov
in
int
decl
push
shlb
sbb
popa
pop
orl
push
bound
lcall
mov
pop
stos
mov
jp
adc
pop
stc
jae
xchg
lods
popa
gs
adc
jmp
fldenv
jbe
and
jo
sahf
in
mov
in
xor
inc
push
cmc
adc
shlb
mov
push
int
or
das
mov
ljmp
pop
jp
pop
sbb
insb
push
dec
sbb
xchg
sbb
jmp
in
sbb
mov
xchg
cmp
inc
lods
ficompl
fwait
pop
pusha
ret
scas
mov
mov
mov
jge
daa
popf
jge
ljmp
es
pop
dec
mov
not
shrb
stos
insb
mov
pop
dec
pop
mov
fdivs
lods
hlt
cld
fildl
jns
lea
jp
xchg
push
xor
add
stc
or
push
add
out
mov
xor
xor
sti
and
mov
call
mov
cmp
inc
xor
push
stos
lds
std
cmpsl
ljmp
mov
jle
clc
or
ret
ror
dec
arpl
imul
pusha
pop
pop
popf
inc
lock
repz
sub
jmp
push
mov
sbb
mov
mov
cmpsl
je
pop
lcall
jbe
push
loop
add
call
jecxz
xor
xchg
or
loop
stos
xchg
add
stos
mov
dec
cmp
cltd
push
loopne
add
loopne
or
decl
push
jle
test
or
outsb
pop
dec
push
ljmp
stos
std
out
jno
jmp
aas
xor
jl
mov
dec
ret
orb
mov
mov
and
jmp
scas
sbb
ljmp
scas
jbe
xchg
inc
and
xor
jp,pt
and
push
mov
addr16
inc
lds
adc
pop
mov
lods
dec
jg
jg
decl
adcb
std
add
mov
xchg
sbbb
push
loopne
jmp
in
mov
call
add
inc
cwtl
jl
aad
jle
xchg
lret
aam
test
pop
rclb
out
sub
in
pop
movsb
in
loop
ljmp
dec
push
inc
cmp
loop
popf
ficomps
pop
out
das
mov
xor
add
je
xchg
cs
in
cli
mov
call
cmp
aad
cmp
lret
dec
or
cmp
or
sbb
outsl
xlat
add
ljmp
inc
inc
add
jnp
mov
stc
sub
cmp
jmp
fidivrs
test
cli
cs
mov
test
std
cmp
mov
and
adc
incl
xor
das
inc
push
pop
mov
adc
mov
push
jmp
cltd
push
mov
xor
sbb
outsb
xchg
jg
ds
nop
test
std
lahf
call
mov
mov
dec
lret
filds
push
notl
sbb
mov
scas
mov
xor
mov
pop
and
cmp
stos
push
push
call
inc
push
add
pop
xchg
jl
jb
mov
repnz
or
clc
xchg
inc
sbb
sti
andl
lcall
roll
add
sbb
pop
jno
mov
adc
lcall
dec
cwtl
fisubl
inc
sub
inc
sbb
int3
loopne
stc
inc
mov
in
and
fstps
call
mov
popf
dec
dec
mov
dec
xor
sbb
lea
mov
push
pushl
arpl
dec
or
jo
rcr
rol
xchg
adc
xchg
rolb
ljmp
xchg
jae
rcll
int
in
sbb
data16
mov
pop
lcall
pushl
mov
dec
test
cmp
call
pop
pop
inc
mov
mov
scas
and
stos
sub
adcb
fs
lcall
std
nop
push
loope
adc
ljmp
out
jmp
ficompl
xchg
shrb
or
mov
out
pop
mov
scas
or
es
loop
sbb
lea
dec
cmp
imul
dec
or
xor
enter
push
arpl
addr16
add
xor
sar
cld
xchg
jl
lea
repz
cmc
pop
xorb
jo
int
decl
cwtl
xchg
push
fldenv
lahf
mov
out
call
aaa
fwait
orb
fisttps
hlt
hlt
xlat
rol
push
mov
sub
mov
call
std
jecxz
or
fmul
cs
movsl
data16
xor
lcall
inc
and
cmc
dec
shlb
arpl
pop
mov
or
sbb
call
sub
mov
mov
mov
sub
sar
movsb
lcall
loope
inc
jg
push
lret
and
dec
xchg
mov
push
adc
mov
into
roll
jne
jmp
mov
popf
aaa
jb
lock
outsb
mull
or
mov
out
push
pushf
arpl
decl
fidivrl
sarl
sub
test
sar
cltd
and
ficoml
rclb
xchg
xchg
mov
xchg
cs
dec
incl
jno
inc
push
and
enter
mov
fnstcw
or
mov
pushl
and
push
fnstenv
test
cmpsb
adc
ja
sbbl
mov
stos
jp
fbstp
shrl
xlat
push
xchg
push
jmp
xchg
call
push
jb
xor
inc
leave
pop
incl
dec
sub
mov
pop
ja
cmp
aam
push
inc
mov
scas
mov
nop
push
decl
sbb
out
pusha
addr16
sbb
pop
cmp
call
jle
insb
icebp
dec
sub
pop
scas
stos
ds
pop
repz
adc
cmp
insb
xor
idivl
ja
pop
outsb
sub
cmpsl
jae
xor
or
jl
pop
fdivs
lcall
lods
sbb
add
xor
mov
int
mov
idivl
jmp
inc
adcl
loopne
rep
mov
sarl
xor
in
push
cmp
or
sbb
xchg
int3
and
pop
fdivr
ljmp
addr16
xchg
jl
mov
cld
and
pushl
xchg
movsl
sahf
push
sub
loop
fcmovne
cli
xor
repz
enter
incl
jbe
push
mov
lds
sub
loopne
insl
mov
cwtl
mov
call
call
movsb
ss
fstl
sub
inc
xchg
inc
sarb
sbbb
dec
jg
jmp
mov
stos
xchg
cmpsl
mov
pop
xchg
rolb
addr16
cli
movl
call
out
dec
and
xchg
pusha
loop
mov
dec
push
rcrl
sbbl
loop
pushl
sub
das
pop
fidivrl
inc
pop
lretw
adc
das
sbb
mov
in
mov
ret
jne
call
aad
scas
jecxz
decl
pop
mov
lods
cmc
in
ret
mov
pop
mov
loope
adc
pushl
std
jg
adc
loopne
jge
xchg
adc
jnp
sbb
and
xlat
lcall
in
xchg
movsl
mov
add
xor
cmc
inc
and
mov
add
jmp
adc
push
adc
out
jge
sahf
sub
rcr
xor
daa
cmpsb
mov
or
lcall
push
dec
xchg
and
cmpsl
jae
out
pop
stc
iret
pop
adc
or
xchg
repnz
leave
ljmp
inc
arpl
cmc
push
movd
sbb
fwait
jmp
xchg
adc
ja
jle
sbb
or
or
call
cld
bound
mov
sub
movsl
cmp
adc
stos
ljmp
fistpll
scas
in
dec
enter
scas
mov
mov
repnz
mov
jmp
outsl
bnd
insl
out
sub
fdivs
adc
gs
stc
aas
movsb
and
sbb
and
lret
sub
and
mov
push
ljmp
in
dec
imul
push
sbb
mov
dec
cmc
mov
add
or
pop
jmp
jp
sub
push
cmp
add
cmpb
and
xor
sbb
xchg
imul
sbb
out
lret
lcall
ret
add
ret
iret
push
stos
lret
dec
jle
fiadds
xlat
imul
lcall
loop
int3
in
and
and
xlat
ret
jp
sub
das
fwait
mov
aaa
and
out
pushl
xor
insl
and
ret
push
xchg
pop
scas
cmpb
repz
pusha
cmp
out
in
adc
add
jnp
sub
fdivs
mov
addr16
stc
adc
jge,pt
loop
push
out
jecxz
lods
jne
pop
or
fwait
pop
cmp
jecxz
xor
cmp
jne
leave
shll
les
add
jmp
inc
inc
fyl2xp1
enter
pusha
pusha
xlat
xor
mov
adc
cwtl
pop
ljmp
mov
pop
push
adc
adc
popa
mov
loopne
mov
inc
data16
dec
call
add
pop
cli
mov
andb
fwait
or
popa
jmp
icebp
mov
ds
fistps
icebp
mov
xchg
add
mov
inc
mov
and
mov
xor
call
jle
jo
or
mov
icebp
fdivr
ss
cmp
xlat
movsb
jmp
gs
push
stos
mov
iret
adc
movsl
and
stos
out
pop
add
std
sbb
ljmp
mov
pop
mov
ljmp
add
ljmp
in
popf
sbb
push
fildl
cmova
fwait
mov
lods
int3
leave
into
fwait
add
cmp
sahf
mov
jmp
inc
sub
lret
dec
je
out
andb
pusha
adc
or
lcall
js
dec
cmp
mov
jg
lock
scas
in
cmp
arpl
dec
sbb
in
mov
into
push
arpl
mov
int
inc
pop
sbb
dec
pop
popf
mov
ret
ret
jbe
mov
adc
out
or
popa
fxch
and
sub
rclb
mov
pop
inc
leave
cmp
out
stos
int3
jp
je
sbb
cmpb
cli
iret
incl
rorb
in
rcrb
mov
sbb
cmp
inc
xchg
test
fcomip
pushl
xchg
xchg
cmp
idivl
sti
push
mov
ljmp
push
xlat
or
and
aaa
cmp
jp
inc
inc
add
loop
xchg
inc
mov
outsl
jg
jle
inc
shrl
daa
and
jle
inc
jmp
rorl
fwait
inc
mov
mov
enter
pusha
push
stos
mov
or
movsb
push
sahf
push
pushf
cs
mov
adc
and
sub
lcall
jmp
popf
test
ret
jo
aad
jg
fisubl
daa
fmulp
insl
mov
dec
negl
mov
fiaddl
arpl
jno
push
mov
xchg
lcall
cmp
out
lods
cmp
pop
hlt
pop
cmp
mov
lret
add
shrb
stos
xchg
ret
aad
jg,pt
xchg
jge
pushl
inc
outsb
aas
pop
dec
or
cmp
cli
jno
sbbl
and
push
test
decl
jb
pop
mov
mov
or
xchg
sbb
fsubp
pop
movl
ljmp
das
shlb
das
pusha
ja
push
cmp
add
loop
loop
push
jnp
jmp
gs
loopne
cld
sub
xor
test
les
xchg
pop
into
mov
jns
pop
stos
mov
lcall
pop
inc
movsl
adc
cwtl
jne
int
mull
pop
lds
sarb
flds
push
loope
cmp
inc
sbbl
push
ss
and
in
sbb
js
cmp
sbb
push
cmp
arpl
sbb
popl
hlt
jg
xchg
adc
shr
jo,pt
outsb
decl
pushf
jmp
idivb
stos
jnp
jmp
inc
lcall
imul
ret
incl
inc
cmp
pushf
nop
or
test
cli
and
and
pop
jg
dec
push
or
inc
stc
cmp
xor
fcoms
aas
jb
roll
pushl
mov
push
aam
cltd
sub
loop
add
pop
xor
mov
dec
test
pop
mov
xor
les
sarl
mov
ret
mov
clc
fstl
lock
nop
call
xor
pop
xchg
imul
xchg
insb
aaa
std
pushl
iret
lret
int
sub
push
push
push
repz
xlat
dec
xlat
mov
les
daa
jae
das
pop
outsl
push
add
dec
mov
dec
dec
lcall
mov
pusha
testl
addb
cs
push
stos
sar
arpl
outsb
in
cmpsb
and
jb
fadd
call
inc
dec
add
gs
sbb
dec
jle
flds
adc
mov
lock
jg
xchg
sub
xor
mov
inc
decl
movsb
ss
mov
fists
in
negl
dec
jg
ljmp
shlb
sti
cld
out
ds
add
lcall
aad
ja
xor
lods
jmp
lods
clc
inc
mov
adc
fwait
xchg
insb
movsl
test
mov
or
iret
bound
bound
cmpsl
outsb
shrb
sahf
xchg
cmpb
in
fdivrp
lcall
cld
jne
int3
push
inc
mov
or
loope
xchg
and
jl
cmp
jp
dec
xchg
mov
dec
push
cmp
add
mov
lods
mov
repnz
sbb
js
mov
lods
aam
nop
fldenv
jecxz
jno
jle
dec
out
xchg
clc
mov
jmp
sub
outsl
dec
and
and
jne
adc
dec
and
sbb
push
adc
call
mov
jl
decl
inc
outsb
xor
lea
imul
clc
mov
push
lods
jp
and
pushl
inc
sbb
pop
test
cmp
std
shll
inc
jg
inc
xor
jmp
dec
ljmp
hlt
xor
insb
cltd
shll
lahf
inc
movsl
outsb
movsl
nop
fidivl
imul
inc
in
arpl
sbb
incl
fmul
jl
stos
repz
xlat
pop
in
add
dec
imulb
addr16
jge
push
xor
enter
incl
fisttps
mov
jne
scas
sbb
push
out
and
popa
mov
out
test
stc
ret
decl
dec
xor
push
imul
cmp
or
mov
mov
jae
add
fisubs
dec
hlt
jns
mov
jb
fcomip
rcrb
loop
sbbb
cmpb
aam
sbbb
fimuls
mov
jecxz
std
pop
pop
rcr
cli
dec
bound
and
fwait
sub
xor
jmp
inc
xor
imul
data16
frstor
rolb
addr16
inc
adc
int3
xchg
call
mov
sti
jo
jns
push
mov
inc
ret
adc
pop
mov
mov
push
mov
jmp
insl
pushl
sub
movsl
mov
xchg
xchg
cli
andb
call
ljmp
dec
out
or
sahf
dec
fimuls
sub
out
pop
cs
push
sub
pushl
aad
sub
ljmp
shrb
push
fwait
aam
lock
push
ljmp
shrb
pop
stc
inc
sub
cmp
aas
jnp
push
ljmp
push
pushl
pop
fimull
mov
cmp
mov
mov
fucomp
stc
repz
lcall
pop
ret
loop
xchg
dec
out
xor
add
and
cmp
add
dec
dec
data16
cmp
and
add
mov
leave
test
mov
outsb
and
imul
ret
xchg
dec
jmp
sub
scas
add
gs
movsl
lock
cmp
popa
push
out
sbb
inc
gs
call
pop
inc
push
ret
pop
mov
cld
mov
stos
mov
mov
in
arpl
mov
jmp
mov
pop
lds
clc
xor
imul
push
sub
jae
push
push
jmp
decl
mov
popf
and
and
fucom
cmpsl
inc
push
pop
or
mov
call
sub
repz
ret
bound
scas
cli
imul
call
jp
push
outsl
decl
mov
hlt
cmc
mov
icebp
call
sbb
xchg
push
dec
jae
cmp
ljmp
jae
fldcw
faddl
pop
push
mov
nop
xchg
and
add
cmpsb
sahf
sahf
cmp
loop
jmp
add
xchg
andl
cmc
ds
enter
addr16
pushl
and
shr
js
jae
call
or
in
stos
pushf
iret
repz
dec
xchg
out
cmp
inc
mov
and
dec
cmpl
sub
mov
sbb
fsubl
outsl
loop
jle
cld
jne
and
loope
out
sbb
divb
dec
loopne
pop
jg
mov
flds
aaa
imul
sub
sub
shrb
lea
jecxz
jne
pop
push
das
pushf
call
pushf
inc
dec
cmp
mov
lret
mov
add
imul
xchg
notb
push
repnz
mov
inc
gs
inc
push
xor
add
and
add
imul
ljmp
sar
stos
vcvtsi2sdl
mov
js
ficoml
lret
lock
incl
shlb
push
lea
dec
sub
and
popa
out
fistpl
ljmp
je
jb
add
push
and
mov
mov
push
push
mov
jg
call
inc
pop
push
cmp
and
xchg
outsl
sti
push
dec
ret
add
lret
out
ljmp
lahf
sbbb
mov
add
loopne
inc
jnp
mov
dec
inc
or
fstps
and
mov
stos
push
rorl
daa
imul
es
popl
push
pop
icebp
incl
xchg
cmp
scas
andl
addl
jecxz
imul
fisttps
shr
mov
inc
enter
out
mov
sub
mov
jle
lahf
jmp
iret
aam
adc
cmp
adc
jl
jb
ja
adc
mov
jmp
icebp
les
xchg
ret
idivb
lods
jmp
mov
test
lea
pop
lret
add
lock
inc
adc
adc
enter
ds
jbe
je
push
cli
int
lcall
push
mov
imul
loop
pop
divl
add
aas
sub
outsl
cli
pushl
rorl
jnp
inc
in
jns
imul
adc
das
clc
lcall
pop
jno
and
aas
imul
in
inc
cltd
add
jl
push
jo
invlpg
call
lret
jg
test
int
scas
sbb
and
movsb
sar
call
pushf
lret
roll
add
cmp
mulb
stc
pop
sbb
xchg
jnp
enter
ljmp
inc
jae
xchg
mov
push
mov
fs
sbb
inc
push
movsb
fisttpl
push
mov
gs
xchg
hlt
ror
fsubrl
sbb
xchg
into
movsl
mov
call
push
fxam
imul
xchg
cmp
push
outsl
jle
out
nop
xchg
inc
add
rcr
xor
pusha
xor
fistpll
int
fiaddl
and
sbb
add
aas
lods
clc
dec
es
mov
loopne
xor
cmp
nop
mov
js
pop
mov
cmp
sbb
add
pushl
sub
rolb
or
pop
pop
push
dec
popa
aam
mov
jle
hlt
dec
xchg
xorl
sub
inc
push
lock
fisubrl
push
sar
decl
xchg
int
insb
test
ret
sbb
scas
bound
sar
ljmp
pop
mov
or
pop
mov
loope
rorl
das
mov
pop
enter
mov
push
jle
pushl
cmpb
add
cmp
adc
aam
and
sar
in
xchg
daa
adc
call
rclb
pushf
sub
adc
push
ja
sbb
int
mov
aas
jmp
xchg
xchg
cs
out
push
sbb
xor
clc
sub
push
imul
jecxz
fs
push
nop
mov
jmp
or
es
popf
mov
sahf
mov
sbb
or
push
cwtl
fldt
frstor
enter
fcomip
jmp
mov
mov
mov
pop
fimull
sti
xchg
shll
loop
jmp
lcall
js
xchg
sbb
jmp
rcrl
mov
stos
roll
cld
std
jno
les
push
iret
inc
push
bound
pop
repnz
lds
push
pop
adc
or
sarb
pop
movb
incl
xor
and
lret
icebp
lahf
les
test
sbb
sub
pop
out
lret
sbb
ljmp
xchg
mull
sub
mov
aas
insb
rcrb
cmp
jo
test
push
mov
pop
sbb
push
ljmp
in
repnz
cmp
in
xchg
mov
call
or
sbb
ljmp
jle
fcomps
jmp
lods
dec
mov
popa
push
cld
punpckhbw
xchg
lds
adc
rolb
aas
sar
ljmp
insb
nop
xor
pop
cmp
lcall
and
ljmp
jno
or
and
xor
mov
adc
mov
incl
pop
mov
shrb
mov
adc
sub
aam
outsb
lcall
enter
incl
fwait
shlb
jg
fmul
push
sbb
push
xchg
shrl
push
mov
lods
push
popf
jns
dec
incl
movsb
mov
push
dec
repnz
dec
pop
fs
mov
push
scas
adc
adc
push
mov
addr16
dec
dec
push
shlb
outsl
pop
inc
xchg
mov
mov
dec
push
jb
xchg
mov
pop
test
movsb
sub
popl
dec
adc
push
iret
dec
pop
out
icebp
dec
dec
fidivl
pusha
adc
pushl
outsl
shrl
jae
movsb
ss
sbb
mov
adc
mov
sub
call
adc
jae
stos
loop
jl
std
lret
jb
xchg
orl
cmp
lcall
mov
call
pushw
jnp
xor
call
or
xor
out
jmp
lret
rcrl
daa
xchg
sti
pushl
jnp
loope
pop
cmp
fwait
adc
lret
adc
mov
or
or
icebp
jg
xor
push
loopne
lds
inc
jmp
or
js
cmpb
incl
dec
jp
ss
mov
fcmovne
mov
test
scas
loop
pop
jmp
daa
lcall
aad
stos
push
jnp
cmp
aaa
lock
mov
push
aas
out
mov
mov
mov
jmp
clc
mov
cmpsl
lahf
popa
sub
fcoms
ret
add
pop
pop
xor
push
mov
and
call
fwait
push
clc
sbb
mov
push
lret
call
push
pop
in
xchg
xor
movsl
push
es
incb
fsts
sub
sti
sbb
mov
call
inc
pushf
mov
pop
cmp
ret
push
push
jmp
dec
push
mov
or
push
mov
push
loope
sbb
pop
inc
ret
xor
ljmp
out
cmpl
rclb
mov
mov
mov
jg
fs
ljmp
push
mov
inc
inc
enter
jne
repnz
sti
dec
mov
xor
ja
repnz
mov
ss
mov
scas
mov
lret
sub
mov
pop
pop
arpl
decl
adc
jecxz
aas
in
mov
inc
adc
stc
xor
aaa
xchg
pop
or
pop
adc
in
int
ljmp
dec
fs
sub
add
xorl
pop
jb
and
cld
adc
dec
xchg
mov
aam
repz
shr
pop
insl
mov
jne
les
mul
int3
repz
test
arpl
or
icebp
adc
xor
es
cmpsb
mov
sbb
testb
test
sub
fidivrs
mov
ljmp
sub
dec
pop
xchg
iret
fs
jbe
sub
push
stc
xchg
imulb
je
push
ds
fildll
xor
mov
movsl
mov
and
sub
pop
push
add
ja
push
les
lods
decl
dec
pop
pop
adc
push
jns
or
adc
jp
insb
mov
stos
into
push
xorb
incl
mov
imull
insb
pusha
pop
ja
xchg
rcr
int3
es
jmp
mov
mov
sarb
jecxz
enter
cltd
cmp
ja
andl
lods
jmp
lret
add
loop
push
pop
repnz
mov
mov
adc
cmpl
sbb
push
out
test
jno
mov
sub
mov
aam
mov
lods
ljmp
fs
xor
or
jbe
inc
xor
mov
sbbb
ljmp
outsl
mov
push
mov
xor
shrl
fsubrl
xchg
jg
std
ljmp
fdivrs
jns
mov
mov
sbb
lcall
cmp
jo
fcmovne
fwait
jg
and
push
or
push
aas
lods
daa
mov
bound
js
outsb
mov
or
or
sti
jmp
mov
jnp
dec
call
xor
fnstcw
pop
fwait
inc
fildl
or
cmpsb
enter
cmpsb
pop
sahf
mov
insl
or
jns
inc
sub
sbb
sub
frstor
mov
insl
pop
leave
jecxz
cmc
inc
arpl
lods
and
ljmp
inc
mov
xchg
icebp
pop
in
inc
aam
aas
jl
jae
mov
jne
jmp
adc
add
sub
repz
in
pop
pop
pop
in
sbb
mov
call
jbe
out
or
sbb
mov
xchg
push
mov
fdivs
data16
adc
and
cmp
pop
inc
cltd
sahf
xchg
fbstp
mov
push
dec
mov
xlat
dec
icebp
sub
dec
addr16
jg
int
in
pusha
and
xor
xchg
and
cmc
cs
jle
out
fidivs
add
out
std
enter
cmp
or
js
call
cld
fidivrl
push
push
push
xor
xchg
mov
mov
in
push
arpl
or
adc
je
into
jns
movsb
fdivrl
xchg
fisubrl
incl
mov
inc
and
push
dec
add
into
ret
and
incl
pop
cmp
insb
xchg
das
int3
dec
pop
mov
add
push
dec
lahf
ljmp
call
pop
xor
pop
xorb
add
mov
daa
outsl
lcall
cs
push
jae
jmp
fucomp
mov
jge
cs
inc
mov
outsl
pop
push
push
and
mov
outsl
fstpl
push
push
adcl
lds
mov
incl
cmc
loope
adc
jb
add
stc
fnstenv
lcall
or
mov
hlt
jmp
cmpsl
enter
mov
outsl
push
xor
or
outsl
mov
popf
pop
icebp
jg
and
inc
dec
outsl
cli
lcall
aaa
int
outsb
movsb
in
fidivrs
ds
inc
push
mov
ljmp
lods
and
pusha
cmp
and
xor
cld
inc
cmpsb
cwtl
iret
cvttps2pi
mov
pushl
insl
pop
stos
les
jl
mov
sbb
lock
push
das
out
jp
jo
scas
sub
and
mov
fnstenv
xor
stos
add
lcall
mov
mov
mov
fcomi
iret
out
xchg
xchg
subb
decl
dec
es
std
sti
scas
rcrl
enter
hlt
dec
push
les
jnp
fdivr
lcall
push
add
test
int3
or
pop
or
lods
push
hlt
insl
scas
mov
cltd
cld
xor
xor
jl
stos
cmpsb
fcomps
shll
inc
and
and
mov
jmp
mov
cmp
cli
pop
lock
push
cmpl
insl
test
lods
jge
pushl
mov
stos
add
sub
xchg
xchg
push
dec
pushf
iret
mov
pop
lahf
xor
push
inc
dec
daa
ljmp
cmc
call
or
xor
mov
cmpsl
fnstenv
jp
ljmp
or
mov
pop
test
cmp
int
fdivr
fbld
and
subb
lods
stos
cmp
dec
outsb
push
ja
mov
cli
jae
in
mov
jecxz
inc
jg
pusha
rcll
and
or
xor
ficoms
sub
pusha
xchg
push
popf
inc
xchg
adc
cmc
scas
stc
pusha
sub
add
and
jg
pushl
sbbl
into
scas
rolb
shrb
push
dec
xchg
shlb
and
imul
imulb
pop
pop
out
mov
jmp
leave
mov
fwait
nop
cwtl
jae
add
mov
push
jl
xor
pop
aaa
stos
mov
mov
decl
dec
jo
mov
jns
and
mov
lods
lods
inc
sbb
adc
enter
aad
fldz
gs
enter
add
and
cmpsl
mov
sub
push
sbb
and
lcall
pushl
ljmp
mov
mov
inc
hlt
hlt
adc
push
shrb
lcall
ljmp
jbe
sub
std
stc
sub
push
adc
push
in
je
stos
seta
flds
pop
fstpt
or
aas
mov
push
out
push
xor
sbb
data16
and
out
pop
jne
dec
or
inc
adc
sbb
lcall
or
pop
jg
cmp
push
sbb
push
aas
mov
inc
int3
xchg
in
incl
incl
lods
jg
fsubl
jbe
mov
das
sub
decl
sar
call
and
popa
push
push
adc
jl
mov
sahf
pop
or
stos
mov
fiadds
and
js
stos
out
xlat
mov
jo
aam
fimuls
inc
fwait
mov
iret
push
mov
jno
mov
add
int3
rcl
sbb
scas
xor
call
and
repnz
ds
or
fsub
out
add
cmpsb
dec
sbb
lcall
mov
bound
jnp
cmpsl
testl
push
ss
pop
stos
out
push
mov
pushl
push
dec
and
into
push
cltd
mov
adc
push
pop
ss
decl
mov
xchg
mov
push
inc
out
ja
and
incb
mov
adc
mov
insl
push
idivb
mov
add
add
lcall
enter
outsl
jge
push
push
mov
xor
jecxz
xor
cmc
lods
fcoml
lods
or
std
mov
fcomip
lds
jge
cltd
dec
mov
stos
push
jg
cmp
mov
decl
sbbb
cmpsl
mov
mov
cmp
jbe
lods
lret
push
insb
jl
shlb
pushl
pusha
fsubrs
inc
jmp
outsl
fdivrl
int3
imul
incl
jmp
mov
pop
jle
test
push
inc
insb
push
push
ret
stc
idivl
lods
pushl
out
xchg
nop
inc
or
inc
stc
mov
cmp
iret
or
movsl
ret
sbb
pop
jg
ljmp
outsb
dec
aas
orl
pop
ss
scas
jge
arpl
push
scas
clc
jo
add
pop
adc
or
pop
aaa
and
lcall
movsl
cmpsl
push
mov
cmp
outsb
mov
je
pop
mov
mov
sarl
xchg
pop
mov
adc
popa
xchg
or
fisttps
hlt
mov
sbb
stos
mov
jecxz
xchg
aam
roll
cmpb
js
pop
mov
dec
sub
inc
frstor
clc
out
nop
jge
jmp
out
adc
adc
add
pop
xor
stc
arpl
scas
jmp
adc
jbe
cmp
and
outsb
push
xchg
push
push
das
clc
jmp
inc
mov
shl
cmp
rorl
pop
push
jg
or
paddq
divb
mov
pop
add
dec
shrl
sti
shr
ljmp
int
add
clc
jmp
adc
cmp
jmp
sub
jno
and
sub
out
dec
stos
sbb
adc
data16
sbb
lods
sti
add
cld
sbb
mov
or
pop
mov
pushl
mov
es
cmp
mov
pop
pop
sar
jmp
pushl
fs
xchg
mov
movsl
push
mov
xor
movsb
and
add
cmp
cmp
clc
test
fidivrl
pop
movsb
lahf
lahf
sbb
in
cmp
jg
push
repz
stos
dec
mov
fs
stc
adc
shrb
sbb
mov
addr16
ret
pop
sbb
lock
lret
mov
push
jnp
loopne
lcall
xor
push
dec
out
out
daa
cmp
dec
mov
jne
mov
push
fdivs
lcall
and
dec
mov
xlat
mov
xchg
jle
popa
cmp
test
decl
or
mov
jl
repnz
mov
mov
mov
lcall
inc
inc
test
adc
fs
pop
fs
andl
fistps
xchg
test
hlt
push
lea
ljmp
or
fldlg2
cld
and
out
sub
dec
xchg
aaa
xor
mov
dec
ja
jnp
mov
decl
xchg
xchg
insb
mov
movsl
or
push
pcmpeqb
loopne
rorl
xorl
cs
fisubrl
jno
sub
or
cltd
arpl
jnp
pop
in
dec
xor
movb
jmp
aas
sub
push
lock
ret
sarb
and
es
dec
jge
aas
loopne
jmp
xchg
data16
adc
aas
xor
mov
es
xchg
fs
mov
out
das
clc
pop
sahf
aas
insl
fcmovne
push
inc
les
aam
pop
pop
lods
xchg
mov
loopne
sahf
push
incl
clc
in
in
mov
and
add
aas
lret
mov
pop
add
out
sar
ljmp
cli
fbld
cltd
test
push
lahf
lock
sbb
lret
mov
mov
fstl
scas
das
jb
adc
rcrb
push
test
fwait
fwait
inc
notb
jge
insb
push
inc
dec
dec
call
in
sub
testb
inc
negb
mov
or
cmpsb
pop
les
mov
xor
cmp
sbb
cmc
aaa
cld
pushl
or
push
bound
pop
pop
jle
scas
push
clc
pop
clc
jl
inc
stos
icebp
jb
cwtl
movsb
push
push
adc
inc
arpl
nop
jmp
psraw
cmp
into
sub
adc
cmp
popa
loope
dec
hlt
dec
adc
ror
addr16
push
movsb
shrl
icebp
loop
mov
test
dec
stc
xchg
adcb
lds
int
jl
popa
outsb
rcl
loopne
adc
js
mov
loope
xlat
adc
sarb
jl
push
jmp
shrl
enter
push
push
popa
dec
pop
loope
inc
jecxz
inc
push
testb
mov
lcall
orl
fdivrs
adc
pushf
mov
sbb
dec
cld
gs
lret
icebp
ret
push
pminsw
pop
js
dec
push
mov
mov
cld
pushl
loope
bnd
sti
pop
sarb
mov
adc
scas
adc
mov
add
mov
adc
pop
rcll
sub
push
push
and
sti
dec
inc
and
je
outsl
les
mov
mov
or
xchg
xchg
xchg
jg
push
mov
fsubp
inc
les
cmp
outsb
and
lea
mov
mov
pop
sbb
mov
lcall
sub
orl
fildl
ss
push
push
xor
mov
ljmp
mov
ljmp
dec
xor
mov
stc
mov
pop
push
jle
mov
test
mov
jno
jge
xchg
add
iret
clc
mov
mov
cmp
iret
dec
mov
js
test
ljmp
int
les
xchg
dec
sub
pop
mov
rcrb
add
clc
fcmovbe
jg
call
rcr
and
sub
aad
pop
cmp
movsl
je
pop
adc
pushl
imul
mov
js
push
push
sarl
outsb
aad
push
shl
stc
in
movsb
jl
pushf
add
lcall
add
xor
adc
call
ja
lcall
jmp
xchg
pop
sub
in
mov
sti
dec
add
scas
add
cmp
mov
decl
sbb
mov
pop
push
movsb
or
xor
xchg
ja
mov
es
add
incl
in
daa
iret
mov
insl
xor
test
cmp
fucomip
inc
clc
add
push
push
int3
arpl
mov
xchg
sbb
pushl
mov
sar
jmp
ja
xchg
push
stos
mov
inc
out
std
lods
xlat
lret
mov
cli
pop
sub
rcll
fidivl
test
xor
dec
sub
xor
rcrl
mov
jg
mov
push
mov
cmpb
push
dec
cmp
xor
xor
icebp
call
test
popf
add
pop
and
pusha
cmp
popf
sub
add
mov
fwait
aaa
jp
pusha
sub
outsl
clc
jmp
fbld
repz
ret
in
xor
pop
leave
xchg
cmp
lock
ss
push
jno
outsl
decl
daa
jl
dec
push
les
or
cmp
cli
scas
movsl
cltd
xlat
mov
mov
out
xlat
push
fisubrs
push
mov
add
popa
std
inc
jle
outsb
jae
shll
ds
out
cli
decl
add
pop
or
fidivl
or
xlat
ss
jg
out
pop
xor
call
xor
andl
sub
test
enter
pop
mov
pop
pushl
lahf
std
int3
into
xchg
sahf
mov
jecxz,pn
iret
xchg
mov
jle
bound
lcall
repnz
cmp
sbb
fistps
mov
and
push
scas
xchg
xor
push
fwait
or
incl
sub
cli
xchg
adc
test
int3
or
in
scas
and
pop
fwait
sbb
cmp
mov
lcall
notb
out
sub
pop
in
xor
mov
xchg
xchg
ds
jo
leave
mov
sar
mov
out
cmp
jg
jne
push
das
mov
mov
out
xchg
daa
gs
call
inc
out
mov
fiaddl
mov
jne
jmp
loopne
adc
and
mov
clc
into
dec
jp
cwtl
hlt
int
push
xor
jnp
std
in
scas
subb
loope
cltd
mov
call
lret
loope
mov
call
enter
popa
jmp
mov
cmp
decl
push
adc
jae
xlat
or
cltd
movsb
sbb
and
mov
mov
pop
int3
jns
cmp
pushf
cmpb
lea
rorb
jne
stc
mov
xlat
insl
loope
in
jg
scas
aad
insl
movsl
aam
pop
adc
dec
mov
mov
sbb
xor
jmp
pop
js
add
cmpsb
adc
ss
das
jle
push
and
jbe
lods
insl
inc
stos
and
imul
imul
or
nop
or
adc
pop
sub
out
inc
xor
cmp
mov
lcall
inc
call
lret
mov
in
or
lret
jg
decl
adc
mov
out
cmpsl
pusha
xlat
sub
popa
and
jge
je
push
pusha
data16
push
jno
negb
xchg
std
decl
enter
mov
dec
adc
mov
push
cmp
cwtl
xchg
movsb
leave
mov
test
push
mov
loope
lcall
cld
sbb
pop
mov
imul
xchg
push
jno
push
in
jns
adc
add
or
fxtract
mov
pop
xor
out
cs
add
cld
ljmp
enter
fcoml
insl
outsb
xor
mov
push
cmp
jmp
sarl
pop
adc
xchg
cmc
insb
mov
ss
dec
popf
fldcw
jno
data16
xor
push
xchg
fucomi
sub
mov
je
lock
push
pop
repz
notb
call
jo
scas
daa
fs
int3
mov
xor
stos
dec
jbe
adc
push
and
mov
jmp
fwait
loop
xor
adc
test
add
pop
cmc
cmpsb
sahf
hlt
cmp
repnz
enter
aam
dec
xchg
fcoms
jne
decl
fildl
jmp
or
mov
es
add
inc
out
pop
ret
mov
inc
push
add
lods
jg
push
fnstcw
roll
movsb
push
scas
sbb
add
xchg
push
sub
cs
fwait
outsb
icebp
cld
sbb
sbb
call
lock
dec
xchg
js
mov
inc
xchg
mov
mov
hlt
insl
mov
call
push
jns
js
hlt
dec
xor
xchg
cmp
add
lret
adc
add
inc
cli
jg
incl
testb
cmp
adc
cmc
mov
cmp
jmp
inc
out
outsb
rcl
mov
and
or
push
incl
mov
pop
cli
pop
cmc
loop
mov
sbb
adc
jmp
add
das
fildll
inc
iret
push
mov
and
pop
adc
in
mov
or
packuswb
fstl
mov
xor
mov
pusha
dec
mov
inc
push
lcall
xor
decl
out
inc
or
leave
jmp
in
aad
scas
mov
scas
call
mov
xchg
push
test
rcl
in
sbb
pop
and
add
push
decl
mov
jb
push
fnop
mov
jo
xor
mov
pop
jae
out
ljmp
jmp
push
cwtl
or
mov
insb
popf
mov
fwait
mov
adc
fst
cmp
sbb
call
das
pop
gs
stos
pop
out
gs
dec
pushl
lcall
lret
push
pop
dec
jge
insb
ja
mov
orl
call
std
fidivrs
adc
xchg
in
test
call
mov
jl
sarl
std
and
jbe
push
roll
ret
inc
mov
mov
leave
mov
rcll
iret
mov
lcall
cmpsl
mov
ds
fldcw
mov
sbbl
push
stos
sbb
loop
pop
sar
jmp
adc
jo
push
rolb
shll
lret
test
pop
divb
xorl
jg
mov
pop
dec
jns
jg
sbb
cmp
out
sbb
pop
push
std
or
ljmp
add
push
jg
mov
ljmp
cmp
or
mov
sbb
mov
sub
dec
pusha
pop
mov
icebp
pop
inc
arpl
nop
jno
and
dec
loopne
jge
lcall
call
jno
mov
xlat
push
and
sbb
fs
bound
ljmp
js
addb
adc
test
cmc
jmp
rol
xor
cld
scas
inc
or
dec
cwtl
fbstp
inc
ror
outsb
insb
add
jbe
jns
decl
lock
incb
popf
xlat
daa
mov
sbb
out
sbb
mov
out
mov
and
xchg
mov
sub
add
jmp
adc
orl
nop
inc
cs
pop
mov
lahf
mov
pushl
subps
pop
pop
pop
xor
xchg
mov
ficoml
scas
pop
filds
lcall
hlt
loop
jbe
inc
js
addr16
xchg
mov
in
xchg
fsubrp
pushl
jbe
cmpsl
pop
xor
sub
notl
lret
fisubrl
add
inc
mov
inc
mov
popa
pusha
in
je
dec
lret
outsb
xchg
ljmp
clc
lds
imul
mov
or
subl
cmp
call
mov
push
sub
sbb
xor
mov
push
ds
jbe
loopnew
jmp
xlat
mov
pop
les
and
pop
and
js
push
ja
jmp
lret
int
incl
test
jno
cmp
cmp
sub
leave
nop
ss
pushl
inc
cmp
nop
add
mov
mov
inc
or
fwait
lods
or
cmp
fdivrs
mov
mov
orb
test
xor
lcall
push
mov
cmp
and
adc
call
je
cmp
in
pushl
push
repnz
sbb
out
in
mov
and
lds
or
lcall
fimull
out
jecxz
daa
mov
fdivrs
sbb
jbe
data16
ret
mov
orb
inc
and
imul
mov
out
fisttps
push
xchg
ljmp
and
inc
jb
roll
fwait
scas
mull
mov
lcall
popa
jecxz
inc
arpl
mov
jo
filds
mov
pop
jle
push
popf
sub
mov
mov
out
jmp
mov
jge
shll
sbb
jae
jnp
cmp
jns
loope
decl
cmp
pcmpeqb
lahf
cld
loope
mov
iret
test
lods
push
mov
incl
or
xchg
in
adc
aad
inc
cld
or
push
orl
es
pop
adc
mov
sub
pop
lcall
es
scas
mov
lret
pop
pushl
loopne
lcall
jge
dec
mov
test
fisttpl
push
jb
jo
sbb
popf
pop
frstor
fistpl
sub
xor
ja
pop
jl
in
aaa
sbbb
add
mov
push
lcall
sub
cs
jmp
sub
lcall
arpl
push
xor
int
rorb
mov
nopl
lret
cmp
call
mov
fdivrl
mov
jmp
add
sbb
decl
cld
popf
and
or
loope
inc
shl
pushf
adc
push
mov
pushl
sub
in
jae
push
std
mov
sbb
pusha
fcoms
xchg
ds
and
ds
fcomip
cmpsb
inc
les
ljmp
xor
fst
subb
pop
out
mov
mov
cmc
pop
outsl
leave
pop
sar
and
sahf
add
sbb
push
jg
jmp
sti
jmp
out
call
mov
jno
outsl
pop
cs
int
inc
rorb
cmpsl
lea
mov
dec
imul
jnp
pop
mov
xchg
mov
loopne
mov
push
shll
inc
enter
add
rcr
scas
clc
icebp
push
xchg
dec
and
sbb
mov
mov
test
jmp
sti
lds
clc
repnz
add
or
jno
jbe
jl
mov
cmp
sahf
jp
decl
xchg
add
sub
fidivrl
mov
cmc
xor
cmpsl
or
pop
push
in
pop
ljmp
mov
dec
add
sub
pop
mov
out
hlt
ljmp
mov
add
inc
xor
arpl
add
cmpsb
inc
ret
sti
jg
mov
mov
scas
mov
movsl
in
adcb
pushl
xor
or
mov
aaa
sub
andl
cs
sbb
mov
push
call
jmp
in
add
mov
shrb
sub
ja
aaa
xchg
push
flds
mov
lcall
aam
push
cltd
mov
push
int
out
movsb
jl
jmp
cmp
ljmp
jl
or
jnp
fldl
repz
mov
dec
notl
sbb
add
mov
lcall
fcomps
stos
push
scas
dec
sub
or
push
dec
test
sub
or
push
lcall
mov
inc
in
cmp
or
mov
sbb
sbb
es
decl
inc
and
pop
pop
out
or
lods
xchg
cmp
inc
pop
daa
dec
jecxz
stos
xchg
jp
out
mov
jmp
flds
cltd
push
mov
lcall
lcall
mov
outsl
lcall
and
adc
call
mov
fcmovbe
push
cmp
xor
test
dec
in
dec
icebp
leave
ret
cmp
xchg
xor
outsl
xor
int
call
es
cmp
cmp
push
xor
loop
cs
cs
cld
stc
push
sub
pop
dec
out
mov
jne
jb
shrl
jg
test
mov
sbb
jne
sbb
scas
lcall
pop
shr
xor
xchg
les
in
sbb
push
add
aad
insb
rcrb
push
adc
ljmp
sti
mov
or
lret
xchg
les
mov
inc
mov
or
ljmp
test
movsl
adc
test
sub
fdiv
mov
push
and
jg
dec
in
add
xchg
add
xchg
cwtl
mull
push
incl
mov
sahf
push
aaa
inc
test
mov
push
mov
test
or
xchg
lret
push
outsl
xor
pushl
stos
cmp
cltd
imul
or
push
fwait
lcall
inc
xchg
push
out
inc
adc
scas
aaa
sub
or
mov
leave
les
push
out
dec
stc
cmp
adc
cmp
cs
repz
in
sub
jb
jg
xchg
call
ret
adc
lock
or
xchg
les
mov
pop
pushl
mov
push
add
sub
addr16
pop
int3
dec
pop
pushf
imul
fists
pop
fsubs
sbbl
scas
shrb
adc
sbb
movsl
scas
cli
jmp
xchg
movsb
lds
out
jo
mov
lock
inc
scas
push
inc
and
scas
clc
incl
xor
iret
and
call
and
lahf
jg
mov
sahf
test
pop
les
xor
push
and
inc
inc
popf
lret
sub
cli
scas
mov
pop
mov
add
imul
lahf
js
or
fwait
imul
xchg
arpl
cmp
adc
lret
jmp
jbe
dec
pop
mov
int
cmp
sbb
movsl
push
test
xchg
into
jns
adc
call
xor
lds
stc
pop
mov
into
fiaddl
arpl
mov
dec
xorl
add
push
jns
mov
dec
nop
mov
mov
pop
js
adc
inc
mov
pop
dec
nop
aas
outsl
xchg
jmp
aaa
out
inc
jecxz
jmp
imul
and
xchg
push
inc
aam
enter
out
pop
pop
imul
mov
data16
mov
xchg
inc
xchg
rorl
xchg
sbbl
movsl
or
sub
jge
gs
jg
ljmp
ds
pop
scas
es
push
inc
inc
dec
arpl
or
dec
cltd
mov
cld
add
aad
sbb
jae
xor
xchg
subb
loop
movsl
in
insb
out
adc
cmp
mov
sub
pushf
fisubs
ljmp
fildl
scas
and
mov
icebp
dec
sub
inc
mov
mov
cmp
scas
aam
incl
addb
data16
leave
mov
xlat
rcll
pop
test
call
out
rcr
les
outsb
xchg
push
jno
lret
adc
call
in
mov
loope
cld
incl
xorl
pop
int
push
jl
adc
jae
stos
push
fs
inc
jae
repnz
or
ljmp
out
sbb
mov
adc
jno
addb
cs
xor
inc
mov
mov
mov
fiaddl
cmp
insb
xchg
push
push
jge
outsl
push
xor
lock
mov
cld
ret
dec
cli
je
mov
repz
cs
addr16
decl
cmpsb
nop
cmp
and
les
adc
adc
xor
outsl
jl
mov
aas
incl
and
aad
in
lock
cmp
ficompl
cmp
insb
mov
lret
mov
decl
mov
repnz
pop
mov
orb
jl
in
add
mov
in
pushl
or
popf
xchg
or
jecxz
fsubr
jl
outsb
aas
pop
mov
push
add
dec
adc
mov
sarl
fwait
and
cwtl
iret
push
loop
pop
inc
int3
outsl
xlat
lcall
and
add
je
leave
imul
cmp
ljmp
rep
ljmp
gs
arpl
pop
test
push
outsb
jae
lcall
push
fcmovu
in
pusha
xor
fimull
push
pop
cmc
mov
inc
adc
xchg
movsb
push
dec
movsb
repz
lcall
lahf
ret
pop
adc
jnp
sbb
and
enter
enter
call
cld
inc
cs
out
pop
lcall
sahf
xchg
and
xor
fcompl
mov
ljmp
sub
mov
jle
das
mov
xor
inc
push
xchg
mov
mov
mov
cmpsl
dec
push
sbb
mov
dec
mov
shll
jbe
and
dec
decl
fwait
lods
cmp
mov
inc
xor
adc
mov
jg
xchg
fimull
dec
adc
scas
xchg
cld
and
cmpsb
jg
jo
mov
cld
mov
add
sbb
push
adc
push
ds
data16
jmp
lods
test
rcrl
in
cmc
rcr
into
je
iret
or
lds
movb
test
call
cmp
clc
and
cmp
imull
add
lahf
repz
jns
leave
test
jl
add
ret
ds
cwtl
add
push
daa
in
sub
pop
lea
cli
fdivr
ljmp
xlat
aad
outsb
cmc
lahf
xchg
mov
mov
pusha
shl
out
cli
and
push
mov
ljmp
fildll
movsb
pop
pop
rorb
fcmovnbe
dec
mov
lcall
mov
and
jne
call
mov
jae
lea
decl
mov
outsb
jge
xchg
inc
jo
or
bound
loop
arpl
pop
cmp
out
in
lcall
scas
test
jns
clc
xchg
adc
mov
js
or
jne
sub
or
mov
call
ja
gs
cmp
sub
daa
aam
sbb
jmp
cmc
xor
jbe
ljmp
pusha
push
mov
lods
cmp
jbe
push
pop
lea
fistpll
pop
pushl
sbb
push
jne
jmp
pushf
std
push
shrb
gs
aad
pop
std
sahf
jno
ds
and
test
jecxz
popf
enter
mov
push
dec
pusha
pop
les
ljmp
stos
cmp
push
jnp
jl
sub
mov
leave
jno
rclb
jmp
dec
jp
pop
add
mov
xchg
test
pop
out
mov
inc
pop
sbb
sbb
jmp
inc
mov
mov
js
add
dec
rcrl
ret
lock
adc
mov
sub
and
loope
jnp
pop
lods
shr
sti
mov
clc
arpl
jle
stos
test
fsubrs
push
loop
aaa
sbb
pop
mov
xchg
ficoml
fldenv
shlb
dec
or
dec
imul
js
add
push
lret
loope
sub
ss
fcomip
inc
lret
fs
push
mov
pushf
xchg
pop
pop
out
pop
add
pop
enter
incl
add
repz
mov
repz
out
add
pushl
aas
mov
jle
mov
adc
incb
stc
outsb
ljmp
incl
adc
sub
outsl
lods
fisttpl
and
aam
insb
out
jb
sub
lcall
sti
ja
sub
dec
lahf
pop
arpl
mov
adc
dec
test
movsb
or
sub
addr16
decl
lea
andl
es
jnp
test
movsb
push
xor
pushl
mov
mov
inc
ds
mov
fisubl
sti
and
pop
mov
decl
enter
or
sbb
jg
test
scas
in
xchg
mov
mov
push
jno
ja
jmp
cmp
or
iret
ret
xchg
div
movsb
int3
mov
aad
inc
call
std
rclb
xchg
into
dec
lcall
icebp
add
sub
mov
das
xor
jp
add
test
ficoml
push
ljmp
ficomps
mov
int3
push
jmp
incb
imul
pop
gs
inc
push
jmp
outsb
sarb
jle
mov
adc
inc
insb
pusha
dec
js
pushf
dec
jbe
loop
out
call
gs
in
push
push
daa
inc
data16
aam
push
fdivl
out
loop
add
inc
stc
ja
lahf
push
subl
cmpsl
adc
arpl
pop
push
andb
pushl
aad
jecxz
aam
ds
mov
fimull
cld
jne
divb
test
in
loopne
pop
pushl
xchg
mov
cmpsb
shl
scas
out
push
ja
jecxz
sub
jmp
outsb
shlb
insl
jmp
add
icebp
or
dec
xor
cli
mov
cli
jl
aas
push
jecxz
dec
cwtl
and
pop
push
addb
dec
add
stos
call
xchg
aaa
jle
xchg
mov
cmp
dec
jle
xchg
mov
int
fidivl
xor
sub
xchg
mov
xchg
jb
mov
dec
sbb
mov
add
pushl
mov
test
shll
xchg
mov
mov
jmp
rcrl
shll
add
inc
cmpsl
popa
push
inc
sar
decl
push
jae
aas
imul
scas
js
rcrb
adc
mov
icebp
ljmp
movsb
sbb
mov
and
les
rcr
test
lea
call
jmp
mov
hlt
mov
mov
jge
mov
sub
decl
mov
loopne
icebp
push
push
popf
dec
xchg
call
iret
xor
push
inc
dec
in
js
icebp
repz
sahf
pop
jmp
pop
cmc
cmp
sbb
es
pop
and
push
rorl
stos
into
mov
int
call
lcall
enter
lcall
xorl
or
nop
inc
mov
int
jp
decl
xchg
std
xchg
nop
testl
mov
sbb
adc
pushl
insl
push
ljmp
mov
add
push
dec
sbb
pushl
imul
cmp
cmp
jns
add
cwtl
in
sub
and
mov
lcall
xchg
mov
scas
nop
xor
mov
push
iret
mov
mov
fmul
jl
push
lret
sub
stos
leave
xchg
jecxz
subb
arpl
inc
xlat
lods
ret
lds
notl
shll
dec
dec
mov
frndint
jmp
sti
dec
movsl
int3
stc
add
cld
pop
sbb
shlb
xchg
mov
call
call
loopne
movsb
je
fnstenv
in
lcall
bound
sub
push
lds
scas
xchg
es
pop
sarb
or
sti
add
pop
and
jmp
cmp
sub
cmp
shr
add
cmp
inc
notb
jmp
incl
cmpb
push
sti
adc
push
or
mov
ret
push
mov
dec
imul
ljmp
push
stc
popa
and
pushf
add
arpl
dec
lock
pop
fidivs
ljmp
push
sub
fildll
push
repz
jno
mov
popf
pushl
mov
mov
lret
sbbl
dec
imul
xor
pushf
mov
dec
mov
mov
scas
clc
incl
or
fnstsw
inc
mov
testl
sub
lcall
cli
lahf
mov
pop
push
xchg
sbb
push
mov
push
push
dec
push
mov
mov
push
jmp
inc
cmpsl
aad
push
data16
bound
and
jae
scas
or
int
push
stos
loope
movsl
jae
cs
inc
mov
bound
and
pop
or
inc
shrb
jne
sbb
decl
or
jb
movsl
sbb
jae
sub
dec
ret
adc
sub
lods
lcall
cmp
add
fcmovbe
fisttps
iret
xchg
ret
add
mov
mov
jae
fnstenv
test
call
repz
cmc
movsb
hlt
cmpsb
or
xor
cmpsl
jne
sub
in
scas
subl
xchg
mov
pop
std
inc
pop
movsb
xchg
mov
divl
mov
stos
mov
lcall
mov
add
lcall
dec
js
xlat
or
in
enter
lock
or
jg
and
mov
dec
hlt
mov
inc
call
push
mov
test
lock
test
mov
fdivr
jmp
xorl
shl
jae
outsb
jne
lahf
stc
sbb
test
pop
pop
js
incl
sub
scas
adc
addl
mov
or
sbb
cmpb
decl
mov
xchg
mov
jne
dec
cld
xchg
dec
jo
int3
inc
insb
adc
or
mov
mov
cmp
imul
jmp
and
pop
inc
push
decl
pop
inc
ds
sub
fdivr
pusha
mov
je
fidivrl
add
jmp
daa
pop
or
inc
sub
mov
mov
push
inc
push
jne
pop
mov
mov
and
dec
arpl
or
mov
repz
or
cmp
adc
and
xchg
lods
daa
enter
jg
ljmp
fs
adc
jg
jbe
dec
sbb
or
repnz
xchg
inc
dec
inc
lds
std
decb
scas
mov
or
and
xchg
cli
jg
fucomp
jg
call
jo
cwtl
push
test
imul
push
fcomps
jg
ljmp
clc
std
inc
xor
ja
mov
push
adc
or
stos
push
mov
lcall
insb
mov
sub
xor
lret
les
lods
iret
testl
insb
mov
repnz
repnz
jae
and
push
cli
mov
shr
jo
add
pop
or
test
cmp
ljmp
sbbb
test
sub
pop
jno
xor
ds
jp
lcall
jg
lock
cmpsb
sub
add
lods
xchg
lods
mov
pushl
mov
lock
jmp
icebp
inc
lea
hlt
adc
xor
ljmp
mov
or
sbb
cltd
iret
jp
push
ljmp
mov
sbb
lcall
repz
outsl
inc
loopne
jmp
cwtl
mov
icebp
cmp
dec
cmpsb
jl
int
push
adc
push
pop
push
scas
hlt
mov
popf
sub
sub
cmp
inc
xor
loope
inc
xchg
mov
inc
or
pushf
cmp
mov
imull
cltd
icebp
mov
push
add
push
lcall
out
pop
test
lea
xor
fadd
jge
jmp
dec
xchg
mov
pop
fsubr
dec
ljmp
lods
xor
ret
sub
dec
mov
lds
addr16
test
int
mov
push
std
jl
cmp
add
pop
mov
and
repnz
insb
outsl
scas
mov
pushl
lcall
je
out
in
mov
sahf
jnp
dec
xchg
mov
stos
pop
jg
dec
scas
xor
inc
sbb
xor
into
das
fstps
inc
xor
call
mov
aas
nop
jne
jp
mov
xor
jle
mov
jle
push
ds
ffree
sub
js
and
inc
dec
nop
lock
imul
test
std
jg
inc
adc
daa
in
xor
icebp
sbbb
loop,pn
mov
sbb
stos
ja
mov
sbb
mov
inc
dec
ja
pop
daa
mov
ds
cmp
or
cld
dec
jb
push
pop
fcmove
mov
push
inc
mov
xchg
inc
out
fimuls
aaa
pop
xor
push
mov
out
stos
jno
shr
jg
mov
or
test
repnz
push
jmp
arpl
mov
mov
call
fdivs
repnz
int
lahf
stos
dec
mov
cld
ret
sub
shll
out
cli
pop
loop
sub
fsubp
mov
push
aaa
mov
push
push
mov
mov
aas
fistpll
out
lret
bound
dec
adc
dec
lret
dec
dec
jmp
jle
and
pop
les
sub
cmc
and
cmp
daa
test
in
cmp
mov
cmc
test
add
cmpsb
add
aad
add
jmp
test
add
xor
mov
push
cmp
sbb
jecxz
mov
dec
call
cld
fmul
xchg
out
cmpsl
pop
mov
les
scas
pop
out
mov
mov
or
add
je
into
jp
sbb
adc
sub
inc
mov
lcall
dec
lods
movsl
push
jl
movsl
mov
test
aaa
add
adc
shll
rorb
incb
pop
sbb
test
lods
dec
ret
push
xchg
jge
out
jg
decl
xor
enter
inc
aam
and
es
push
mov
pop
imul
incl
movsl
nop
in
mov
fadd
scas
sub
sahf
flds
dec
popf
daa
cmp
decl
test
cmpsl
mov
mov
pusha
lret
push
push
stc
inc
mov
xor
jle
push
js
stc
call
in
inc
clc
je
rorl
fwait
testb
pop
and
adc
pop
inc
hlt
cmp
ljmp
or
mov
clc
out
bound
out
scas
jae
lea
sbb
out
cli
dec
dec
mov
mov
test
xor
push
lods
test
ljmp
es
and
addr16
std
cltd
sbb
xor
scas
add
decl
rcl
cmp
movsb
inc
sbb
shll
int
jg
sarb
and
leave
xchg
inc
jle
or
pop
add
sub
xchg
shrl
and
popf
push
loop
push
xor
test
xor
pushf
mov
popf
or
adc
sbb
js
cmpsl
mov
test
mov
inc
ja
add
hlt
sahf
pop
aad
xchg
or
stos
and
lcall
cmp
mov
xor
lods
aam
popf
scas
in
mov
fdivs
dec
nop
cli
shlb
sub
mov
pushl
fsincos
mov
repz
xor
loopne
mov
lret
fsub
ficoms
lret
jns
stos
testb
adc
xor
fldt
xorl
lcall
add
jl
js
and
arpl
out
lcall
sub
je
mov
movsb
sbbl
jmp
jne
clc
push
mov
mov
stos
pop
xorl
call
push
pop
lock
dec
cmp
lds
jae
cld
ljmp
and
dec
mov
bound
mov
pop
lcall
pop
mov
aaa
jecxz
aam
and
mov
jmp
mov
mov
cmpl
scas
pop
fdivrl
scas
xchg
sub
adc
test
sbb
shl
ret
aad
add
pop
repnz
sbb
fdivr
lcall
jp
xor
and
test
xchg
mov
outsl
jmp
stos
lock
sbb
test
insb
testb
mov
decl
add
ds
and
mov
push
sbb
fisubs
pop
les
out
pop
std
pushl
xor
mov
xchg
cli
rcr
adc
xchg
jg
ret
rcrb
sbb
cwtl
icebp
push
repz
cltd
push
insl
push
mov
js
sub
fsub
jns
adc
sub
mov
shlb
xchg
xchg
lret
fistl
jmp
pop
fisttpl
fistl
int
dec
inc
sub
cli
jbe
test
inc
repnz
ja
shrl
call
adc
mov
int
sub
ret
or
shlb
xorb
ret
mov
xlat
xor
aas
iret
xlat
movsl
stc
mov
inc
sub
cmp
xchg
mov
pushl
icebp
jmp
in
or
in
push
arpl
mov
inc
daa
sbb
fists
mov
dec
out
scas
push
outsl
fsubrs
lds
jmp
incb
inc
xor
cmp
cmc
pop
xchg
mov
call
fs
mov
decb
es
cmp
ss
mov
sti
imull
in
xor
jg
fcos
lcall
clc
sahf
test
xchg
or
je
cli
cmc
mov
xlat
mov
call
xchg
or
fwait
inc
fwait
pop
js
loop
inc
cld
arpl
fmull
stos
inc
cli
es
or
pop
push
je
adc
stc
dec
out
lret
out
jg
dec
pop
nop
stc
mov
jae
sbb
adc
test
dec
test
push
xor
or
loop
and
adc
xchg
sub
adc
insb
test
test
cs
jg
push
into
jmp
js
sub
jmp
push
sub
mov
push
scas
icebp
fildl
test
xchg
aaa
xchg
xchg
popa
ja
cmp
in
pop
ss
mov
inc
jge
cltd
lcall
mov
inc
dec
mov
and
adc
push
cs
call
call
jnp
aam
data16
jns
jne
sub
fidivl
cs
or
jle
cli
decl
loopne
cltd
mov
push
loopne
das
jecxz
roll
call
ljmp
push
repnz
rcl
fmul
xchg
add
pmaxsw
das
sbbl
push
das
loopne
call
test
add
cmpsl
xor
inc
sub
cmp
sti
imul
xor
decl
imul
call
inc
cli
inc
popa
mov
orl
or
insl
ljmp
xor
cwtl
mov
ljmp
outsb
call
xor
loopne
lcall
lock
outsb
push
ss
or
cmpsl
add
jle
loope
dec
sbb
outsl
jmp
lock
out
cmp
mov
divl
stos
insb
pop
lds
call
int3
loopne
lds
rclb
pop
mov
ja,pn
movsb
test
mov
aas
pop
loopne
incl
outsl
dec
imul
push
xchg
ljmp
jl
lock
jmp
jl
aaa
in
fbld
repnz
cld
pop
pusha
cmp
dec
loop
dec
filds
push
mov
xchg
loopne
inc
or
add
lcall
outsl
shl
inc
sub
stos
shl
jno
cmp
adc
add
bound
fsub
mov
cld
decl
addr16
in
std
mov
push
sub
pop
fs
cmpb
imul
mov
shrl
and
pop
adc
loop
xor
add
js
bound
incl
rolb
jecxz
jp
outsl
hlt
or
jae
mov
adc
mov
push
in
ret
decl
imul
mov
sub
int3
add
fdivp
xlat
arpl
js
mov
repnz
in
or
and
xor
jnp
lcall
or
ret
das
xchg
and
inc
fucomi
loopne
sbb
es
test
jns
or
xchg
adc
mov
or
fwait
enter
lahf
or
mov
call
inc
rol
and
cltd
inc
push
aaa
clc
jbe
insb
push
int
xchg
insl
sbb
mov
in
add
mov
rcll
push
loop
adc
cmc
xchg
push
outsb
mov
mov
jg
push
dec
fidivrs
pop
loope
xorb
lcall
sub
inc
push
lods
push
jbe
fistps
push
xlat
jmp
jg
in
pop
lahf
xor
sti
push
pusha
dec
fadd
push
imul
lock
lcall
cld
hlt
mov
call
int3
aas
pop
lret
pop
mov
jmp
out
mov
or
sbb
mov
pop
cwtl
in
cld
xchg
adc
leave
call
out
jmp
cmp
cmp
sub
xor
pop
xor
cmpsl
jne
outsb
int
mov
add
outsb
mov
jl
movsl
arpl
gs
cmp
xchg
push
push
sub
fdivl
bound
push
xor
out
lea
incl
mov
inc
std
daa
push
push
mov
fsubrs
dec
push
inc
inc
add
cli
pop
bndldx
mov
cmp
push
cmpsl
out
lds
lds
lock
pop
lock
sub
testb
in
push
add
fstpl
cmc
rclb
pop
jo
pop
stos
repz
inc
jnp
push
rorb
je
inc
imul
dec
cmp
inc
xor
pop
mov
js
or
mov
jmp
cmp
sahf
cmp
or
dec
fwait
stos
cmp
fwait
inc
or
jmp
sub
scas
call
outsl
jp
mov
test
test
mov
imul
ret
incl
movsb
mov
sbb
outsb
test
add
lds
cwtl
jae
call
mov
insl
jmp
push
xchg
dec
sbb
dec
xchg
mov
orb
pushl
pop
inc
dec
dec
ljmp
into
pop
lods
jno
or
in
fcmovnbe
icebp
xchg
cli
decl
shr
pop
leave
mov
lock
add
push
stos
popa
rol
add
in
movsb
inc
mov
jbe
fimuls
dec
pop
scas
add
in
lahf
xchg
pushf
mov
xchg
icebp
enter
je
mov
mov
add
push
adc
stc
adc
shlb
jge
fcomps
sub
out
xchg
in
sbb
sarb
call
inc
idivb
inc
lret
adc
xor
push
inc
std
mov
dec
inc
and
xor
cmp
data16
cmp
lret
nop
insb
pop
leave
add
push
les
sahf
pushf
dec
das
data16
push
mov
jecxz
ret
jg
cltd
pop
inc
xchg
bound
cltd
sbb
decl
shl
sbb
inc
out
xor
out
xchg
sbb
das
cmc
push
out
jp
jb
mov
leave
test
mov
in
add
cmc
icebp
mov
push
sbbl
push
fiaddl
decl
int3
js
fsubs
lret
in
cmp
add
ffree
popf
rcrb
inc
iret
inc
cmp
cltd
cmp
pop
js
cmpsb
aas
mov
and
dec
mov
sbb
jle
fcomip
call
cli
sub
stos
shr
pushf
mov
sub
push
xchg
jecxz
sbb
mov
pusha
jge
jmp
inc
pop
fidivs
or
inc
outsb
jg
mov
cld
mov
xor
outsb
arpl
xlat
or
sahf
add
mov
pop
pop
cltd
jns
call
inc
mov
scas
data16
ss
mov
xchg
outsl
enter
call
inc
orb
mov
sub
jae
popf
xchg
xor
jmp
imul
push
std
cmp
insb
lods
cltd
and
sti
jo
leave
in
shl
sub
jmp
or
jmp
int
leave
push
adc
nop
jmp
je
pop
outsl
ss
in
xorl
ljmp
repnz
inc
rolb
xchg
xor
repz
mov
lcall
into
add
pop
cltd
xlat
or
pusha
orb
jl
inc
hlt
mov
cli
fucomp
push
inc
lock
cmp
stos
in
inc
add
negl
pop
push
mov
pop
push
adc
fiadds
hlt
ret
in
out
mov
ljmp
jmp
mov
das
mov
int
mov
inc
sbb
mov
call
dec
ror
cmp
bound
sbb
xor
ljmp
incl
or
jb
jns
pop
mov
pop
pop
sub
mull
push
call
jl
mov
in
xchg
js
stos
rol
sbb
xchg
ja,pt
cmp
das
jmp
out
jns
idiv
incl
daa
test
filds
sub
cmpsl
pop
fcmove
rclb
mov
daa
pop
lcall
scas
add
and
mov
push
sbb
or
ljmp
cmp
lret
ss
or
add
inc
pop
push
fsub
ret
sbb
dec
fstpl
dec
jmp
cmp
mov
filds
jl
add
insb
pop
shl
rorl
std
incl
hlt
mov
inc
ja
xchg
dec
adcl
call
movsl
mov
lret
lods
lret
idiv
jg
lcall
adc
in
scas
mov
mov
mov
outsl
subl
pushl
repnz
fistl
inc
dec
adc
decl
sub
int3
iret
jb
popf
xchg
xorl
incl
pop
addl
mov
dec
cmpb
dec
inc
icebp
xchg
lock
push
je
lcall
repnz
mov
mov
mov
jne
dec
mov
aaa
std
push
jg
push
dec
lcall
pop
sti
pop
or
push
cmp
jne
push
inc
mov
stc
cmpsl
sub
and
inc
inc
insl
fcom
in
add
arpl
mov
mov
stc
ror
xlat
xchg
cs
in
mov
dec
jo
ret
cmp
cmpsb
jl
lds
push
ja
incl
outsl
mov
or
push
jp
sarl
stos
mov
add
decl
clc
dec
imul
leave
jecxz
sti
add
stos
sbb
data16
xchg
adc
incl
loope
inc
cwtl
mov
xor
and
jo
lods
and
iret
ficompl
jnp
lahf
cmp
cmp
int
int
push
inc
jo
pop
inc
mov
mov
cltd
sbb
ljmp
or
aaa
xor
cmp
shr
ret
lret
and
decl
mov
cwtl
and
sbbl
aad
push
fsubrs
mov
cmp
inc
dec
push
pop
jmp
sbb
push
pop
mov
jae
cwtl
negl
int
sub
mov
test
test
jmp
mov
jl
push
inc
imul
dec
std
js
push
fsubrl
call
lahf
mov
add
pushl
std
incl
and
mov
xor
fs
push
mov
xor
push
or
data16
ljmp
push
dec
or
add
cmp
dec
sub
fldenv
inc
jecxz
ljmp
inc
jmp
dec
test
push
aaa
or
mov
addr16
xchg
imul
add
jmp
test
subb
nop
inc
push
xchg
insl
jno
sub
ljmp
stos
addb
pop
jae
in
adc
js
push
ret
mov
or
call
cld
fists
add
mov
mov
int3
ds
or
add
imul
movsl
add
bound
aaa
jle
sbbl
pop
add
inc
cmp
and
xchg
mov
roll
cmpsb
adc
and
cmp
or
out
decl
ret
sarl
jp
popf
and
dec
inc
mov
mov
or
into
icebp
lcall
inc
clc
sbb
out
fwait
mov
out
push
mov
sbb
ffreep
jno
jl
test
incl
andl
icebp
mov
mov
inc
mov
jl
push
bound
outsl
dec
pop
movsb
je
mov
lods
jge
inc
outsl
repz
jmp
fdivrp
ljmp
sbb
jg
loope
cld
lahf
mov
xor
mov
stos
push
dec
into
fisttpll
mov
cmp
jnp
shl
stos
out
movsl
xchg
xchg
out
push
mov
sbb
cld
or
add
or
int3
shlb
adc
sub
data16
insl
add
xchg
xlat
cmpsb
repnz
dec
lcall
jb
jns
xor
pop
cmp
xchg
xor
sub
shrl
mov
call
movsb
jp
mov
out
inc
add
jnp
test
mov
lods
dec
pop
sub
add
call
pop
jmp
imul
call
mov
dec
pop
jmp
mov
incl
sbb
xchg
jb
or
jae
jnp
gs
shrb
push
lock
shr
jp
xchg
pop
lea
or
repnz
cld
push
cmp
arpl
mov
push
add
call
fs
jnp
push
inc
int
stos
mov
push
lock
aad
dec
xor
or
mov
jmp
xchg
or
mov
aaa
andl
scas
out
and
cmp
ds
loop
lahf
rcl
cmp
sbb
dec
xor
dec
xor
cld
out
fwait
in
jno
aas
arpl
nop
and
shrb
jecxz
xchg
in
cmp
jg
call
xchg
pop
test
stc
dec
or
xchg
mov
xor
mov
xor
adc
in
decl
add
packssdw
lock
jle
and
sbb
cmp
call
and
xchg
stos
jmp
repnz
xchg
lds
dec
pop
jge
mov
and
xchg
add
incl
js
mov
popa
imul
or
jo
in
clc
in
imul
aam
sbb
cmc
fcompl
loop
xlat
out
je
push
xchg
push
scas
add
xor
fistps
pop
call
dec
mov
add
inc
out
cmp
imul
mov
pushl
xor
aad
popa
nop
ret
loope
jle
dec
ss
mov
outsl
data16
pop
inc
outsl
push
mov
add
push
push
xor
pushf
xchg
fcoms
in
mov
inc
sbb
cli
mov
xchg
jns
scas
iret
pop
cmpl
jno
push
jae
push
jo
mov
jecxz
bound
lcall
or
cmp
inc
mov
addb
mov
xchg
pop
insl
add
sar
pushl
mov
push
into
xchg
or
cwtl
sbb
jmp
pushf
inc
dec
xlat
jle
or
cmp
dec
out
flds
and
aaa
jg
imul
out
inc
mov
add
jne
inc
cmp
lcall
lcall
push
jmp
in
je
ret
testl
push
jg
mov
fstpl
std
idivl
inc
adc
pop
aam
cltd
shll
adc
cltd
add
sbb
movsl
out
arpl
mov
test
jnp
dec
aas
repz
ljmp
mov
mov
or
mul
push
enter
adc
push
std
jecxz
jmp
enter
mov
sub
sub
mov
push
adc
sahf
mov
jle
or
pop
lcall
imul
adc
jb
jg
incl
xor
lret
pop
push
fadds
outsb
sub
pop
add
pushl
dec
add
dec
add
inc
push
pop
push
sub
mov
sbb
sar
adc
or
xchg
cs
inc
inc
push
rorb
sti
insb
in
cmp
mov
adc
mov
loopne
xchg
lcall
decl
mov
mov
fistpll
int3
jns
dec
inc
sub
call
and
dec
outsb
loop
mov
rcrb
cld
cwtl
mov
mov
mov
mov
out
cli
sarl
lcall
sub
mov
sbb
xor
jmp
jge
loop
ljmp
sbb
adc
mov
inc
sub
inc
iret
push
test
lcall
in
or
xchg
dec
pop
or
inc
jno
rorl
gs
cmp
push
cld
mov
mov
sub
jg
loop
cmc
mov
mov
xor
cli
call
fimull
or
mov
adc
xchg
js
or
call
or
push
xchg
sarl
sbb
aam
push
call
frstor
test
mov
adc
xlat
xor
sub
loope
imul
mov
push
jecxz
fdivrp
cmp
inc
push
and
repz
test
mov
ret
test
push
adc
into
inc
inc
dec
mov
js
aas
std
int3
int
push
aam
and
repz
jmp
cvttps2pi
outsl
mov
pop
int
imul
mov
jbe
sbb
and
insb
ljmp
out
cmp
test
mov
ret
mov
stc
movsl
add
outsb
xchg
mov
sbb
roll
loopne
ja
mov
insl
mov
pop
mov
incl
pushf
in
inc
vpsrlw
mov
adc
out
fcompl
xchg
push
int
xor
pop
jg
jle
das
les
mov
xor
shll
cmp
clc
jmp
sub
hlt
in
fistl
mov
jne
add
jl
arpl
decl
jno
push
mov
loop
movsb
or
jmp
xchg
in
loopne
ret
in
jmp
dec
test
mov
in
push
scas
inc
pop
pop
cmc
sbb
or
incl
push
xlat
mov
dec
jbe
loopne
jg
cld
cmp
cmpsb
aad
xor
add
xlat
jmp
cmp
jno
add
jp
lret
mov
jno
and
addr16
mov
sub
call
inc
push
rol
xchg
jp
loop
scas
outsb
lea
sub
jb
xchg
lcall
loopne
lahf
test
xchg
mov
cmp
scas
push
add
ss
pushf
mov
sti
push
inc
mov
nop
sub
and
cmpsb
jae
lahf
jo
imul
dec
jg
call
iret
repnz
sbb
jnp
idivb
and
das
icebp
lods
pop
inc
mov
outsl
cwtl
inc
xor
iret
cmpl
pushl
and
mov
add
sbb
and
add
js
repnz
jge
fs
adc
decl
gs
and
xor
cmp
dec
xchg
hlt
aaa
mov
ljmp
jmp
cmpsl
test
movsb
dec
fisttpll
pushf
aas
dec
or
repz
pop
add
scas
xlat
cld
lret
ds
call
popf
and
imul
pusha
mov
cmp
dec
or
loop
lret
cmp
cs
ret
js
test
fldenv
dec
adc
lahf
mov
mov
lds
xor
imul
das
clc
ljmp
daa
sub
int3
push
fs
sbb
cmp
pop
notb
xchg
aad
jmp
cld
pop
mov
data16
pop
sub
and
inc
fnstcw
sbb
movsb
jmp
mov
fidivrl
nop
pop
stos
inc
dec
pushl
sbb
daa
and
xor
clc
decl
xorb
adc
call
fnstcw
addb
jmp
fidivrs
js
push
adc
shl
dec
cmp
outsl
insb
mov
and
push
std
iret
mov
cmp
sub
ljmp
incl
imul
jecxz
and
dec
xchg
pop
imul
mov
idivb
shlb
repnz
shr
cmp
loopne
fisttps
wrmsr
lock
cmp
and
lock
dec
jno
adc
mov
cmp
movswl
orl
xor
cld
imul
sub
mov
loopne
mov
es
xchg
imul
ss
mov
mov
mov
jmp
sub
inc
in
dec
test
insl
into
and
mov
test
popa
cmp
clc
decl
fidivl
lods
das
push
imul
popf
cs
ficoml
jbe
cmp
pop
incl
outsb
jae
out
rcrl
push
roll
mov
loop
lcall
sti
xor
mov
rolb
fsts
cmc
addr16
sbb
fbld
popl
xchg
ja
in
and
jbe
jbe
adc
test
pop
aam
arpl
cmp
add
lcall
in
xor
call
xchg
ret
iret
push
jg
lea
lcall
and
xlat
inc
jns
movsl
aad
fsts
jl
add
pop
aad
sbb
mov
mov
cld
sub
mov
ret
xor
outsl
out
add
adc
jmp
cltd
test
xchg
fiaddl
mov
xorl
insl
or
xlat
idiv
test
jmp
push
stos
mov
sbb
iret
jecxz
in
xchg
fs
lods
shrl
jno
dec
lock
repnz
call
loope
in
pushf
adc
stos
add
mov
xor
and
call
push
test
test
sbb
std
sbb
sub
lods
shlb
lcall
fisubl
pop
dec
bound
pop
fstps
les
movsl
push
push
repnz
xor
call
cld
call
push
scas
or
lret
and
sub
decl
push
push
sti
push
hlt
add
push
mov
das
mov
and
pop
divl
cmc
cmp
popl
add
daa
xor
sbb
sbb
imul
repnz
lcall
pop
sub
jge
lret
jno
movsl
mov
stc
aaa
xchg
subb
mov
xor
mov
xor
cmpl
cmp
mov
in
xchg
or
dec
mov
mov
or
push
push
pop
rcll
inc
test
lods
sub
dec
mov
cld
or
test
add
sub
or
es
cmp
mov
mov
lahf
xor
pusha
cmp
fisubs
mov
xor
ljmp
cltd
cmpl
in
pop
jae
xchg
fwait
in
and
std
pop
xlat
cmpsb
inc
out
and
cld
decl
aaa
adc
fldcw
fnstenv
pop
inc
popf
push
xchg
test
cs
pusha
and
add
call
sub
sub
mov
in
mov
imul
xor
add
fs
push
mov
lds
pop
cmp
jmp
cmp
andb
daa
mov
adc
hlt
test
and
add
pop
jl
push
scas
fs
decl
xchg
es
or
aam
les
in
lret
xchg
les
cmp
decl
rcl
lea
popf
mov
stos
push
rcl
sbb
inc
dec
setge
inc
and
call
mov
mov
mov
jbe
sub
sti
dec
out
lahf
incl
out
xor
aaa
mull
imul
add
in
stos
lret
jmp
test
inc
aaa
std
orl
jp
jl
cmp
add
xchg
mov
inc
add
test
xchg
call
popf
testl
dec
sbb
test
cli
push
xchg
inc
imul
adc
cmp
mov
push
push
fscale
popa
in
sbb
stc
fdiv
push
test
dec
insb
cmpsl
sub
jae
and
jg
ljmp
push
push
icebp
subb
jle
repz
pop
imul
movsb
jg
icebp
xchg
loope
dec
xchg
cmc
sbb
push
push
cwtl
test
in
xor
in
jg
and
in
loop
loope
push
stc
popa
pop
adc
push
decl
or
or
xchg
mov
imul
lcall
mov
cltd
repz
lds
and
rol
repnz
mov
and
jg
clc
shl
aam
and
int3
mov
addr16
or
lods
popa
int
out
sbb
clc
push
std
or
jl
mov
xchg
mov
rol
jg
mov
pop
rcl
movsl
push
idiv
ret
dec
jo
jmp
adc
sub
push
add
jecxz
add
push
iret
js
sti
push
inc
ret
mov
sub
sub
das
clc
cmp
mov
dec
add
pushf
adcb
push
sub
fsts
clc
mov
jns
in
jl
dec
fucomip
cs
cmp
in
or
sahf
outsl
jmp
pop
repnz
cmp
dec
cmpsl
repnz
mov
movsb
push
int3
lret
mov
incl
mov
loope
movsb
add
rol
dec
in
mov
fsubrl
mov
push
ljmp
mov
fisubs
insb
jp
ret
cmpsb
push
outsl
bound
les
incl
add
iret
add
dec
in
inc
and
scas
lea
pushl
lods
inc
repnz
cmp
dec
subl
dec
js
xor
xlat
xchg
imul
jmp
out
mov
xor
xchg
aas
push
adc
cs
add
call
sbb
mov
cmova
dec
je
movsb
xchg
cmpsl
int3
mov
cmp
mov
call
mov
sub
jp
inc
xchg
jo
jge
std
mov
dec
int
loopne
ljmp
rcll
rorb
icebp
add
mov
int
out
lock
nop
push
add
call
mov
push
xor
shlb
jmp
pop
xor
imul
xchg
cmp
pop
mov
dec
stos
and
movsb
sub
jmp
xor
xlat
idivb
mov
mov
add
stos
jnp
inc
stc
xchg
mov
mov
gs
and
sub
sbb
pop
cld
icebp
mov
inc
push
sub
pop
stos
incl
cmpsl
imul
decb
repnz
adc
xchg
push
sub
and
inc
push
push
pop
ss
rol
cltd
mov
imul
lret
ret
cmp
jmp
xchg
add
int
xor
sbb
dec
inc
fs
inc
push
roll
shrl
nop
fdivs
push
mov
mov
ja
mov
lea
mov
push
cltd
ja
lock
jmp
pop
push
sub
adc
jge
cmp
xchg
mov
int3
in
cmp
pop
fidivrs
add
out
push
fnstenv
movsl
shlb
cmc
cmp
jnp
jp
push
and
mov
cld
xor
in
mov
xchg
cmp
mov
cli
nop
test
fsubl
cmpsl
fs
pushl
adc
adc
cli
repz
push
sbbl
jns
xchg
jle
cli
xlat
mov
add
popf
adc
incl
inc
lods
dec
fsubl
add
gs
mov
xchg
enter
dec
adc
rorl
lcall
sbb
and
fidivrl
adc
lcall
mov
mov
rcll
shlb
push
mov
testl
xchg
loop
sub
jne
outsb
pop
push
or
push
sbb
lcall
xchg
dec
ds
xor
ss
decl
adc
int
adc
pop
push
pop
adcb
dec
lret
dec
inc
aad
data16
mov
call
imul
iret
inc
mov
arpl
cmp
jae
iret
push
ljmp
hlt
jnp
mov
loop
push
add
jae
imul
sti
shll
insl
popf
stc
sbb
jge
mov
fs
repz
xchg
pop
test
fmull
pop
jnp
sub
incl
xchg
sub
fmuls
sub
or
aaa
pushf
insb
push
ret
or
jmp
xchg
int
jge
pop
lock
in
jno
imul
ljmp
pop
xchg
mov
jno
pop
push
aad
adc
mov
subl
decb
adc
and
jge
loope
pop
mov
pushf
out
enter
xor
mov
jns
test
cmpsb
push
aaa
rol
xchg
lret
jl
jmp
sbb
mov
call
cmp
mov
dec
and
fdivrl
test
push
cmp
sub
test
pushl
lahf
out
jnp
jo
push
add
into
dec
jg
jl
mov
sub
sub
das
loop
lcall
mov
loop
fcomps
hlt
das
adc
cld
sub
leave
pop
push
nop
cmp
cmp
mov
mov
sti
fcomi
in
mov
xchg
sbb
pop
jmp
xchg
xchg
add
push
inc
push
push
call
jno
insl
xor
jecxz
pusha
sbb
inc
js
dec
test
or
inc
mov
mov
mov
sub
pop
icebp
decl
pop
mov
movsl
lods
push
sbb
outsl
add
sbb
mull
adc
sub
jg
lods
cmc
or
dec
adc
int
outsl
popa
push
addr16
pushf
cmpsl
aad
xor
lcall
mov
push
xor
xchg
mov
fs
dec
pop
xlat
repz
jmp
jg
mov
or
push
mov
mov
or
mov
push
jge
mov
lret
pop
fs
aaa
fldenv
mov
ss
fsubr
lds
lret
mov
call
out
iret
lahf
std
mov
or
cld
daa
enter
nop
push
movsb
je
out
repnz
push
stos
cmp
mov
cltd
xchg
jg
or
loopne
pop
fcompl
push
push
popa
push
add
sub
mov
movsb
movsb
xchg
xor
mov
aad
cmp
inc
pop
mov
cmp
add
sub
inc
outsl
xchg
outsl
cmp
push
dec
shlb
sbb
xchg
push
jmp
mov
mov
dec
push
push
iret
insb
mov
pop
or
addr16
jmp
gs
mov
sub
scas
push
popa
dec
mov
adc
mov
in
mov
xchg
mov
fstpt
loope
jg
pop
scas
in
push
clc
pop
loop
cwtl
mov
cmp
lcall
push
rolb
mov
ss
fsubr
arpl
sbb
fcmovnbe
cmpsb
dec
out
clc
push
fmull
cmp
lock
adc
out
pop
cmp
cmp
sub
pushl
xor
add
pop
mov
aaa
or
add
ljmp
mov
lret
cld
pushl
in
repz
xor
inc
mov
sbb
inc
imul
cmp
push
push
insl
sub
jnp
int
lret
sub
sbb
daa
popf
mov
out
and
imul
and
gs
inc
cwtl
les
popf
sbb
add
and
xlat
push
mov
mov
inc
arpl
or
mov
cmpsb
cmovae
lods
out
test
fcmovb
mov
pop
or
fistpl
sbbl
in
mov
dec
jmp
pop
icebp
xchg
test
loope
cmpsb
sbb
add
fdivl
sti
sbb
je
lds
or
cli
or
lods
ror
inc
pusha
add
loop
xchg
push
cwtl
jns
inc
or
mov
decl
out
clc
mov
cmpsb
in
xchg
ret
bound
cmp
cmp
jno
sarb
mov
scas
pushf
add
lods
xor
inc
cmpsl
rorb
popf
aam
push
mov
xchg
mov
and
sub
add
es
in
xchg
shrl
and
aaa
aaa
mov
lods
jecxz
movsb
add
fadd
outsl
add
jge
call
add
xor
imull
pop
cmp
ss
or
incl
sub
jge
out
jl
push
mov
mov
leave
mov
mov
test
decl
repz
stc
daa
cli
mov
sub
aas
mov
ror
sbb
cmp
sub
add
dec
add
xchg
or
outsl
cmp
lcall
scas
push
inc
test
sub
push
fidivrs
loopne
sarb
xchg
dec
dec
mov
mov
cmp
add
stos
fistl
daa
mov
les
idiv
mov
incl
jae
fstpl
push
push
push
push
mov
sarl
jle
decl
nop
sub
or
rep
push
rol
lock
push
pop
mov
mov
ret
sub
mov
xor
sbb
fdivrl
call
fcomip
inc
addr16
or
test
dec
mov
lea
pop
stos
sub
incl
push
pop
out
pop
gs
dec
repz
sub
scas
pop
rcrl
sbb
popf
leave
cmp
lcall
in
decl
fiaddl
lret
jno
test
inc
into
add
xor
outsl
push
xchg
out
mov
jmp
ljmp
insl
and
cmpl
pop
xor
shll
ljmp
ret
ljmp
jp
or
inc
xor
test
cmc
jmp
jbe
lcall
out
fildll
fisubrl
loop
iret
pusha
pop
push
jp
push
or
mov
stos
jnp
jae
xchg
popf
sbb
or
repz
push
push
arpl
stos
ret
mov
xchg
adc
jecxz
jle
mov
xor
lret
xor
inc
sub
or
sti
or
adc
sbb
sahf
ret
inc
test
test
pop
popf
mov
aad
pop
cmp
or
test
subl
cmp
and
arpl
mov
xchg
jmp
out
mov
ret
push
shl
mov
and
jl
cmp
cmpsl
inc
mov
jmp
xlat
adc
cmpsb
aad
inc
int3
inc
dec
lcall
jmp
cmp
mov
inc
mov
sahf
sahf
rclb
mov
fidivrl
sbb
pop
xor
fcmovnbe
enter
insl
add
jns
mov
push
sbb
add
mov
int
js
mov
and
idiv
inc
jmp
push
fldcw
test
fdiv
pop
jno
mov
icebp
gs
pushl
jp
mov
adc
push
sub
out
sub
mov
xlat
fmull
test
pusha
jne
cmp
and
fstpt
iret
mov
add
mov
cmp
cltd
outsb
push
ret
inc
sub
std
push
icebp
cmp
dec
incl
add
jmp
adc
jle
orb
jno
ja
lcall
add
sarb
xlat
mov
mov
xor
mov
xchg
fldenv
lods
add
incl
sub
shrb
xor
aam
fldl
push
sti
aam
jmp
xchg
jge
fbld
inc
mov
push
fwait
jo
push
adc
mov
pop
shll
dec
xlat
call
daa
rsm
xchg
mov
lods
shll
jno
iret
adc
incl
pushf
jno
lea
or
jmp
cmp
stc
lret
push
std
mov
stos
adcb
js
lods
or
mov
push
iret
outsl
loop
cmp
lcall
outsb
push
jb
mov
sahf
loopne
push
cld
hlt
divb
ret
cmp
lcall
out
das
inc
push
mov
pop
scas
dec
pop
ja
lcall
jmp
stc
lcall
subb
pop
inc
push
xlat
push
enter
imul
ljmp
mov
xchg
cmpsl
pop
push
mov
xchg
lods
sub
sbb
cwtl
test
mov
mov
shl
nop
bt
in
lret
lcall
xor
dec
dec
jo
jbe
stos
insb
jae
es
pop
in
mov
out
jne
lods
cltd
cmp
lcall
xchg
pop
test
pop
or
nop
cs
enter
push
pop
adc
pop
decl
add
das
mov
hlt
data16
adc
mov
mov
popf
js
aaa
std
incl
fs
push
sarl
or
inc
mov
rorl
repz
mov
xor
ljmp
cs
ljmp
inc
mov
test
adc
out
jp
aas
lcall
xor
es
pushl
leave
cltd
xchg
add
jle
hlt
cmp
aaa
pop
mov
ljmp
jle
sti
movsb
and
mov
loop
mov
fs
xor
inc
in
mov
lcall
in
and
cli
mul
ret
lock
and
mov
jo
cmpsl
sub
fisttpll
jb
in
inc
movsb
test
stos
fstpt
sarl
lcall
sub
jmp
rcll
sysenter
imul
mov
inc
sub
fisttpl
and
or
jg
pop
or
push
push
je
xor
xchg
push
xchg
xor
cmc
push
rolb
jb
xchg
sub
in
ss
rcrl
and
aas
adc
clc
cmpsl
dec
xor
mov
pop
loope
jae
sbb
js
pop
fs
cmpsb
mov
gs
call
jbe
jae
fidivl
mull
daa
push
js
xchg
fimull
push
rcll
xchg
fdivr
cmp
cs
jne
push
sahf
mov
or
add
sub
cmp
clc
incl
mov
nop
pop
ss
or
ja
adcl
push
sar
mov
call
and
movsl
or
cmp
pop
jge
sub
testb
shl
dec
and
mov
adc
lcall
in
adc
test
lret
ficoms
adc
xchg
jmp
dec
rorb
mov
sub
fnstcw
push
fsubrp
test
sbb
mov
les
test
add
stc
xchg
std
push
icebp
lds
repz
mov
jg
inc
and
dec
int3
push
mov
std
decl
cmp
add
sar
into
add
adc
aas
les
lcall
ja
mov
pop
fwait
in
or
push
push
lods
sbbb
fbld
lcall
xchg
loop
cli
rcrb
leave
pop
repnz
mov
xlat
js
mov
jo
xchg
outsl
std
inc
scas
outsl
int3
in
add
arpl
lret
lds
or
push
inc
je
rolb
jg
xchg
out
filds
cmc
decl
fs
push
cmp
sti
movsb
lret
sub
ret
into
dec
inc
insl
jb
pop
test
out
xchg
and
aaa
test
loope
sub
test
jg
fiaddl
pop
pop
mov
inc
adc
jne
xchg
inc
xor
mov
or
je
cs
daa
sbb
push
incl
add
fisttpll
loope
mov
popa
xchg
stc
outsl
leave
out
stc
enter
lret
mov
cmp
jno
call
inc
inc
test
lcall
mov
dec
sarb
jbe
xor
nop
jle
add
fsub
out
cmpsl
xlat
mov
inc
test
or
inc
shl
jnp
test
xchg
icebp
pushl
sbb
imul
ja
es
stos
jecxz
push
in
jg
in
call
inc
pop
adc
fistl
je
hlt
or
pop
or
cmp
push
movsl
and
decl
cmpsb
or
inc
cmp
mov
xor
repnz
jge
jg
dec
mov
inc
mov
fcoml
dec
aaa
jge
jmp
sbb
push
pop
fs
cmp
push
lret
cmp
lcall
pushf
pop
outsb
mov
sub
enter
pop
adc
into
enter
lea
pop
sub
sub
enter
clc
gs
test
mov
shlb
sub
pop
mov
out
sbb
mov
les
call
jecxz
sbb
jg
clc
incl
push
and
cmc
hlt
popa
rcl
pop
pusha
and
mov
dec
insb
jne
fistpl
mov
xor
push
insl
sub
xor
dec
insl
ss
mov
mov
insl
sub
push
mov
lret
je
xchg
or
insl
sbb
ljmp
rclb
push
pop
dec
mov
dec
push
dec
roll
xor
pop
loope
test
call
push
fs
outsl
inc
cmp
add
add
testl
scas
fs
xor
ret
sbbb
mov
mov
ds
adc
aaa
xor
ret
aam
cmp
decl
pop
orb
mov
sbb
shll
sahf
sub
cmp
cltd
add
faddl
adc
mov
aaa
sarl
jg
sahf
mov
jg
mov
inc
and
pop
and
ja
lds
inc
inc
mov
jo
or
mov
aaa
push
adc
popa
repnz
repnz
add
sub
sar
lcall
or
cmp
testl
mov
xchg
insl
adc
sub
lcall
or
dec
cltd
push
cmp
pop
mov
ja
fildll
pop
jge
test
clc
filds
mov
daa
pop
daa
adc
insl
add
sbb
jg
inc
call
adc
outsl
push
ret
hlt
jbe
fwait
imul
mov
mov
jle
ds
ljmp
mov
stos
out
fwait
sbb
xchg
mov
jp
cwtl
push
xor
nop
jp
jg
sbb
out
jns
dec
ljmp
stos
or
jb
xor
sub
mov
mov
clc
pop
mov
cld
std
cs
insb
dec
push
shl
cwtl
gs
mov
das
aad
and
call
int3
mov
dec
cmp
cmpl
sub
jne
fwait
imul
sub
sbb
ret
sub
dec
call
incb
or
idivl
adc
std
insl
aad
sub
jo
jmp
xchg
jb
lahf
pusha
xchg
sub
jno
fimuls
test
sub
or
lcall
jecxz
pop
adc
and
sbb
cmp
push
mov
mov
push
outsl
jmp
or
add
aas
in
inc
add
jp
cld
gs
and
cmc
scas
cli
sbb
clc
stc
divb
mov
cmpsl
mov
inc
lock
mov
inc
pop
stos
fiaddl
pop
push
daa
stos
adc
ret
mov
pushl
or
lcall
push
cli
xchg
fistl
addr16
dec
mov
dec
push
xchg
test
icebp
ljmp
stc
aas
xchg
scas
or
jmp
test
push
ror
std
jae
test
repnz
test
or
lds
jae
mov
pop
jns
ud0
call
jp
out
mov
xchg
push
lcall
cwtl
add
fcoms
rclb
scas
arpl
mov
jge
popf
mov
jnp
loop
cli
cmp
daa
jns
cwtl
int3
hlt
adc
lcall
adc
or
incl
adc
loope
push
fisubrl
ret
fsubr
sub
adc
mov
hlt
inc
loop
loopne
xor
iret
sbb
xlat
adc
mov
cmp
push
add
cmp
cmp
sub
inc
test
mov
fbstp
sti
mov
pop
dec
jo
mov
ljmp
xor
sub
mov
sub
xor
ret
cmpsb
xor
push
dec
aad
je
lcall
fisttps
mov
pop
and
loopne
ss
jg
inc
xor
or
fwait
stos
insl
inc
push
dec
sbb
repz
pop
rol
cmp
push
xchg
jp
sub
pop
jne
insb
sub
pop
incl
or
jle
sub
add
push
leave
push
xor
fs
adc
pushl
jg
cwtl
cld
dec
out
test
test
mov
orl
jnp
jecxz
or
decl
pop
imul
enter
mov
movsb
xchg
inc
andb
pop
pop
out
subb
pop
rolb
pop
jle
jns
call
rorb
and
std
roll
push
push
cmp
mov
jnp
cmp
add
pop
icebp
cmp
pop
aas
cmp
movsl
movsl
mov
add
inc
add
rcrl
pop
mov
sub
ret
xchg
decl
xchg
dec
pop
xchg
mov
in
sbb
in
mov
add
cmc
push
nop
ljmp
arpl
lret
lock
mov
xchg
xchg
xchg
mov
ror
rcl
iret
mov
popf
int3
jns
ds
xor
push
cs
pop
inc
jnp
fmull
sub
lcall
sub
shlb
xlat
or
stos
dec
stos
call
popf
cs
ret
call
nop
dec
pop
mov
mov
mov
lods
sbb
mov
xchg
movsl
enter
add
dec
inc
push
es
stc
ljmp
rcll
push
pop
out
and
call
mov
and
cs
sbb
call
push
or
sub
add
xchg
cmpsb
mov
jecxz
test
lahf
mov
call
scas
out
push
ljmp
aam
bound
pop
aad
cmpsl
mov
adc
mov
cmp
ss
das
fcompl
xchg
imul
xlat
pop
mov
adc
out
decl
lock
into
fstpt
pop
sub
push
sbb
xor
clc
dec
lods
decl
in
xchg
jae
mov
pusha
pop
fcmovnbe
les
dec
jle
xchg
and
adc
sub
push
lcall
sti
add
out
in
fmulp
out
hlt
sub
test
dec
enter
ljmp
call
cmp
xchg
iret
sub
dec
and
and
push
mov
add
mov
lcall
lods
adc
filds
cmpsb
iret
sub
into
jnp
push
movsl
sti
fldcw
xchg
orl
push
incl
imul
inc
andb
addr16
jmp
sub
popf
add
lcall
mov
mov
sub
mov
clc
mov
outsl
mov
dec
lods
insb
sub
out
xlat
add
mov
imul
adc
cs
ss
jge
stc
sub
shll
outsb
adc
ljmp
movsl
dec
pop
mov
fwait
xorl
iret
mov
je
out
jl
add
fimull
loope
incl
sbb
insl
in
js
fsubr
lcall
imull
dec
push
into
and
jmp
mov
lcall
mov
aad
cli
sbb
mov
inc
cld
cmpsb
pop
lret
insl
fcos
incl
sahf
js
leave
adc
sahf
aaa
hlt
ficoml
repnz
jp
push
push
adc
lahf
arpl
jg
sbbl
mov
jae
jne
or
jo
xlat
pop
aaa
sar
lcall
jle
arpl
int
je
xchg
das
mov
fsubrs
cmpb
call
and
lods
into
or
lret
leave
in
push
insb
mov
insb
mulb
dec
and
iret
mov
mov
aaa
push
adc
sbb
icebp
push
imulb
cmp
stos
mov
decl
fsubr
mov
mov
xor
sbb
movsl
loop
loope
in
adc
call
mov
xchg
icebp
cmpb
sub
arpl
pop
add
or
pop
jmp
xchg
fs
xchg
lahf
shll
dec
push
test
mov
cld
mov
cmp
into
fdivs
push
arpl
nop
cmp
pop
lock
decl
repz
ljmp
lods
or
mov
pop
cmp
and
push
std
punpcklwd
lcall
pop
rcl
js
adc
mov
scas
sub
add
xor
das
sar
dec
mov
push
add
xchg
dec
test
inc
repz
sbb
push
mov
pop
stos
incl
loop
push
mov
dec
and
xchg
mov
dec
adc
call
hlt
xor
cmp
jl
andl
addr16
dec
xchg
enter
call
lret
ret
jbe
mov
inc
test
pop
inc
movsb
mov
cld
or
adc
in
arpl
imul
lds
test
push
xor
fcomip
ss
sub
sbb
mov
sbb
pusha
add
adc
pushf
bswap
insb
sbb
inc
ljmp
nop
and
mov
jg
out
add
int
cmpsl
sub
mov
out
fsubs
add
out
and
gs
lcall
int3
fiaddl
mov
lock
xchg
add
rcrb
movsl
pushf
iret
cwtl
sub
cld
jmp
std
mov
aad
or
jp
jecxz
icebp
in
and
ljmp
test
sahf
and
adc
addr16
andl
repnz
cwtl
push
xchg
add
fcos
lcall
imul
mov
mov
cs
xor
insb
stos
add
sbb
adc
fcomip
aas
mov
in
out
sti
dec
scas
pushf
add
mov
jnp
cmp
pop
add
lret
sub
andb
divb
in
pop
int3
lahf
decl
lock
mov
or
aad
jne
inc
mov
cmp
ljmp
dec
jle
or
arpl
cltd
cmp
mov
pop
movsb
in
stos
leave
sub
dec
ds
gs
sti
int3
aam
sbb
push
repnz
xchg
cmp
inc
das
jp
icebp
imul
cmpsl
push
xchg
addb
out
mov
jp
fdivl
cmp
jb
sti
fstpl
pushl
cld
lret
nop
dec
push
cmp
mov
ret
fdivrs
popf
lret
lock
call
fistpl
pop
or
addb
mov
push
decl
dec
arpl
xchg
ljmp
inc
jo
in
sub
mov
ja
xor
loopne
call
jo
dec
jnp
popf
cmp
scas
iret
repnz
mov
xchg
mov
pusha
dec
call
cmp
iret
cli
jle
outsl
xchg
pop
mov
into
int
and
cwtl
dec
xlat
cltd
outsb
call
mov
lods
xchg
mov
enter
or
xchg
ljmp
incl
inc
pop
pop
and
pop
pusha
aas
push
pop
popa
pop
adc
and
dec
pop
pop
pop
lock
enter
push
fcomip
call
aad
pop
mov
jg
xchg
or
add
mov
xor
mov
mov
fnstcw
xor
mov
and
addr16
mov
fldpi
pop
fsubrs
decl
fnsave
mov
cmp
pop
xor
push
jae
movb
jg
std
imul
ficompl
or
inc
pop
sbb
add
test
stos
mov
mov
decl
push
fnstsw
add
cmpsb
xor
ljmp
sbb
jle
cmp
out
xor
pop
dec
push
mov
subl
ljmp
shlb
es
or
jae
imul
aas
jl
lcall
sbb
test
dec
loopne
sbb
shll
or
ljmp
in
push
aaa
fistps
mov
outsb
xchg
nop
dec
dec
in
insl
dec
inc
jae
mov
mov
xor
jb
popf
dec
xchg
sbb
int
mov
sbb
scas
lahf
mov
inc
or
stc
loopne
hlt
jmp
ret
xchg
outsl
out
mov
push
test
aaa
inc
lods
mov
push
jmp
mov
mov
push
cmp
and
inc
jmp
daa
jmp
es
pop
cld
jmp
lcall
mov
popa
push
mov
dec
jge
mov
stos
ljmp
dec
xor
jle
jl
add
xor
dec
and
jmp
inc
int
test
mov
xchg
imul
arpl
dec
testl
mov
push
pop
in
xor
jmp
pop
ss
xchg
shrb
cmc
int
or
loop
xor
jmp
inc
cmc
mov
sub
mov
daa
sub
popa
data16
jb
cli
jp
push
popl
pop
incl
mov
rcll
aad
jbe
popa
lock
lcall
cmpsb
mov
sarl
cs
mov
jmp
movsl
call
dec
push
dec
inc
and
mov
fmull
jno
jg
incl
sub
mov
add
pop
and
xchg
xorb
aaa
xchg
lcall
jb
test
cs
inc
mov
xchg
out
fnsave
mov
xchg
es
lcall
rcrl
loopne
lds
add
pusha
js
and
ja
jp
cmp
sbbl
enter
ret
xchg
imul
negb
out
call
aaa
sar
decl
stos
or
add
lock
jge
cmp
jl
out
xor
xchg
decl
incb
and
mov
cmp
fsubr
in
mov
adc
xchg
dec
mov
std
gs
decl
int
jns
into
loop
pop
jae
repnz
xor
add
sub
inc
aaa
cld
ljmp
lcall
jecxz
xchg
mulb
test
or
pop
stc
xchg
lods
decl
shll
fcmovnb
pushf
pop
in
mov
inc
or
je
mov
cli
call
cs
cs
push
out
cmpsb
sub
bound
fxch
aaa
lods
mov
outsb
mov
sbb
sahf
mov
sub
mov
and
ljmp
lcall
cmp
rep
xchg
fdivp
jbe
mov
or
mov
scas
les
mov
sub
lock
jmp
jnp
xchg
orb
push
pop
pop
out
ret
lcall
xor
push
jbe
jmp
jp
std
jbe
lods
mov
lcall
daa
scas
call
cltd
mov
dec
sub
test
dec
pop
in
push
mov
lahf
push
jg
loopne
adc
loopne
add
dec
xlat
push
xchg
cmp
loope
fwait
mov
inc
popf
adc
aad
pop
or
pop
jge
loope
mov
call
ret
mov
inc
cmpsl
push
mov
sub
aam
andl
lcall
jae
and
sbb
stos
xchg
das
mov
cmc
lock
int
dec
stos
std
sub
fs
decl
mov
add
pusha
pop
shl
adc
in
dec
imul
decb
sahf
lcall
or
xor
xor
push
js
cmpsb
and
mov
incl
les
mov
movsl
rcr
rcl
inc
in
xor
pop
cmp
jmp
cld
adc
pop
xchg
icebp
sbb
into
xor
stc
pop
dec
sbb
pop
xlat
xor
cltd
pop
pusha
xor
fsub
xor
jmp
ljmp
fcompl
test
dec
inc
inc
mov
fsubrl
rcrb
dec
mov
dec
add
inc
int
ss
push
dec
jno
sub
sub
jge
movsl
stos
jg
fimuls
decl
mulb
pop
lret
sub
xlat
sbb
add
xchg
dec
repnz
js
jg
das
negl
fisttps
in
adc
and
or
mov
jp
mov
fwait
adc
sub
fbld
jge
and
fisubl
bnd
adc
dec
cmp
in
scas
pop
loopne
aaa
and
daa
mov
xor
das
sar
scas
pop
stc
xchg
adc
fstps
not
fwait
lods
and
jmp
ljmp
adc
push
loop
cmp
lea
gs
mov
out
add
xchg
daa
cli
xchg
popa
inc
inc
push
or
in
mov
js
scas
mov
call
mov
xor
outsb
lea
add
repnz
push
cmp
inc
std
jp
mov
decl
les
mov
inc
push
into
jge
cmc
mov
push
or
add
xchg
sub
aas
mov
repz
adc
sbb
add
popa
add
das
pop
push
sub
cmpsb
mov
pushl
mov
mov
add
and
outsb
mov
mov
in
sub
hlt
ret
xchg
insb
pop
jecxz
test
mul
xor
pop
scas
lahf
test
fbld
adc
inc
test
add
and
outsb
subb
ljmp
js
dec
rcrb
or
jge
mov
xchg
sbb
sub
jne
ljmp
mov
sbb
ljmp
xchg
rorl
fstps
sub
jecxz
fstpl
cmpsb
cmp
inc
mov
daa
push
mov
movsb
mov
fcmovnb
fs
jg
push
sub
sub
xlat
negl
addr16
inc
es
xchg
xchg
push
push
call
inc
lret
repz
push
aam
insb
pop
mov
fucomip
mov
xchg
arpl
dec
lcall
inc
into
loopne
mov
xchg
or
test
das
sub
lret
and
ljmp
fistps
push
mov
sbb
out
mov
adc
mov
cmpsl
aas
ficoms
incl
sbb
dec
adc
xchg
add
lea
xchg
dec
and
insb
push
lcall
ljmp
push
mov
sub
adc
lret
xor
or
dec
jbe
shrd
mov
lcall
or
je
nop
cmpb
sbb
jae
push
inc
daa
clc
out
loop
pop
mov
data16
out
loope
movsb
jae
pop
xorb
out
cld
jle
xlat
cmc
xor
inc
adc
cld
adc
int
incl
jno
lahf
push
out
clc
das
andb
jmp
jl
fucom
out
pop
gs
mov
mov
lea
jns
sub
inc
push
in
lahf
sti
loopne
outsl
test
lcall
repnz
mov
jbe
repnz
jb
ror
xchg
or
pop
jno
js
scas
xor
decl
pop
sbb
add
es
cmp
and
xchg
pop
pushf
add
call
jae
fldl
mov
ss
or
mov
sti
arpl
adc
lcall
into
sahf
cmp
sbb
out
mov
pop
or
daa
pop
in
ficompl
jne
push
ret
push
dec
or
jl
push
std
in
das
jo
insl
hlt
pop
inc
inc
shll
rcr
add
popf
or
jg
push
inc
enter
sub
or
imull
push
in
lock
lret
lcall
mov
pop
ret
xor
mov
sbb
int
popf
ret
pop
inc
sbb
pop
xor
stos
js
xchg
popl
sahf
mov
repz
mov
cmp
pop
dec
pop
jo
pop
test
int
jmp
jl
jl
or
cwtl
jl
adc
hlt
hlt
rol
fmulp
fistl
into
fnstenv
push
mov
ljmp
push
lahf
sbb
test
adc
push
hlt
mov
cmpb
xchg
leave
test
outsl
aam
stos
pushl
jp
es
test
inc
push
push
lods
jae
jnp
aam
mov
and
pushl
mov
mov
stc
pop
sbb
mov
adc
xor
stos
and
and
jne
mov
scas
add
mov
scas
jmp
mov
xor
dec
rorl
jno
dec
pop
push
inc
repnz
pop
add
pop
cmc
testb
push
jp
push
mov
rcr
icebp
clc
call
push
inc
inc
loop
loop
inc
and
pop
mov
mov
xchg
lahf
ficompl
mov
jecxz
pop
lret
call
jo
dec
mov
mov
mov
jb,pn
sbb
ret
pop
out
iret
rorb
pusha
pop
xor
xor
mov
push
rcr
mov
sbb
mov
ret
xchg
mov
out
shlb
or
repz
in
add
iret
inc
das
int3
in
or
ljmp
and
xchg
cmpsl
xchg
dec
adc
stos
lds
mov
xchg
adc
xchg
mov
jl
test
jecxz
scas
pusha
incl
inc
dec
inc
mov
out
icebp
into
sbb
sub
icebp
jbe
insl
aam
lock
mov
nop
out
call
adc
sub
movsl
or
mov
pop
fs
call
les
out
sub
jp
in
stc
inc
push
lock
stos
aas
jle
pop
sbb
push
push
pushl
jle
jle
sti
lcall
xchg
cld
xor
mov
xlat
adc
fcomip
xchg
sub
and
xor
xchg
and
mov
mov
ljmp
movsb
jl
push
cld
ljmp
cmp
jae
cmp
dec
adc
adcl
ljmp
dec
std
mov
cmp
out
and
inc
pushf
and
pushl
sub
daa
scas
mov
sub
andl
push
inc
pop
aam
sub
jmp
test
add
push
cltd
inc
dec
mov
outsb
rcr
lock
adc
movsb
mov
rolb
lret
arpl
add
mov
sub
push
cltd
and
popf
andb
test
sub
icebp
lahf
imul
inc
cltd
cmp
cmp
out
lcall
inc
cmp
imul
dec
mov
dec
fwait
push
test
loopne
aam
jp
imul
loopne
call
jbe
gs
lock
loopne
mov
xchg
ds
scas
ret
lcall
data16
cmp
dec
pop
stos
sahf
out
mov
mov
das
pop
push
cmp
mov
stos
sbb
faddp
mov
sar
dec
not
xchg
xor
cwtl
push
push
sub
pop
inc
mov
sub
pop
inc
push
loopne
leave
rolb
sarb
cmpsl
shrl
jns
arpl
jge
xor
inc
jle
mov
inc
and
out
sub
mov
outsl
clc
jg
lock
rorb
sbb
icebp
in
mov
cmpsl
pop
cld
jmp
sarl
push
sub
dec
add
adcb
sbb
hlt
in
negl
pushl
or
aas
or
insb
aaa
pop
mov
pop
cltd
and
xchg
test
sbb
lock
xchg
sarb
stos
pop
sbb
call
out
adc
pop
adc
cmc
in
mov
mov
hlt
mov
decl
adc
xchg
sti
fistl
movsb
jmp
js
es
movb
aaa
incb
jno
lcall
popa
xor
lds
lcall
adc
leave
cmpsl
es
sbb
pushf
xor
adc
adc
cmp
cmpsb
sbb
jg
int3
push
inc
inc
push
jb
jns
movsl
sahf
xor
cmp
and
scas
inc
outsb
insb
and
pushl
cli
iret
idivb
in
push
add
das
hlt
cmc
lods
mov
jns
ret
inc
sar
and
in
mov
inc
cmp
rcrl
into
inc
out
lock
sbb
cmpsl
cltd
inc
sahf
dec
ds
mov
stc
adc
sub
cli
test
cwtl
test
cmp
sub
push
xor
bound
int3
mov
ret
std
ret
lds
ret
xlat
ljmp
loop
push
mov
fisttpll
stc
dec
jns
xor
and
mov
in
jg
jg
mov
xlat
aad
add
mov
ret
inc
in
cmp
push
push
lcall
and
dec
repz
cwtl
jmp
push
lea
add
outsb
pushf
cmp
into
cmp
pushl
arpl
jl
stos
dec
push
push
pop
ss
popf
jg
mov
push
pushl
push
mov
cmp
sub
stc
mov
mov
gs
fisttps
mov
and
ljmp
inc
add
cmp
push
adcl
stos
push
sub
pushl
add
decb
jae
pusha
call
enter
iret
leave
cli
pushl
pop
inc
pushf
mov
mov
lahf
out
lcall
outsl
js
mov
aaa
cld
ljmp
sub
aad
and
out
dec
pmulhuw
adc
fcoms
push
mov
outsl
lcall
xchg
pop
mov
gs
xchg
bound
cs
adc
filds
cltd
ret
cmp
lcall
arpl
sbb
ret
shl
faddl
dec
mov
push
push
mov
in
inc
aas
pop
add
push
xchg
mov
mov
arpl
cwtl
fdivrp
fs
push
xor
ljmp
xchg
scas
hlt
sbb
shrb
sub
fcoml
test
xchg
mov
sub
mov
aas
cmpsb
in
sub
sahf
imul
lret
cmpsb
insb
imul
pop
lcall
sti
inc
stos
fisubrl
out
ret
call
aas
test
adc
lods
data16
call
jnp
xor
jp
das
in
aam
inc
mov
cmp
out
test
mov
push
adc
lretw
nop
cmp
int3
aaa
out
sub
jmp
cmc
add
cmpsl
lods
stos
pop
mov
sbb
scas
mov
jecxz
mov
incl
mov
lods
movsl
cmpsl
leave
mov
push
cli
cmp
into
ret
sub
pop
addb
add
bound
and
inc
xchg
ja
mov
mov
test
adc
cmp
mov
in
xchg
aad
cmc
jge
xchg
in
jo
jp
shll
jmp
fcom
jg
mov
je
xchg
add
hlt
jb
mov
decl
or
sbb
jge
call
fcomip
ret
popa
push
sarl
and
mov
lret
imul
sbb
jae
imul
cmpb
mov
clc
mov
out
lods
add
sahf
dec
das
push
icebp
jg
add
outsb
mov
cmp
mull
clc
inc
bound
negb
or
jmp
pop
mov
mull
hlt
inc
mov
mov
scas
into
inc
xchg
adc
cmp
push
cmp
fcomps
rcll
ljmp
xchg
add
inc
dec
pop
sub
repnz
xor
or
ds
loopnew
pop
icebp
incl
jl
sbbb
xchg
push
or
jns
arpl
mov
mov
xlat
mov
clc
fistl
adc
adc
jmp
add
fstp
xor
push
sub
lods
das
dec
leave
mov
inc
int3
cmpsl
je
jo
pop
sbb
call
jae
sbb
stos
iret
dec
xor
ds
cmp
push
mov
or
js
ficompl
decl
jnp
lods
jb
add
add
xchg
scas
insb
sub
pop
into
jg
fildl
lods
mov
into
scas
ds
mov
fs
wbinvd
sti
push
or
or
lcall
push
negl
sarb
cmc
lcall
mov
or
jne
divb
push
jge
mov
push
je
mov
jmp
lahf
jle
sub
jb
mov
mov
movsb
inc
adc
inc
sub
adc
or
xlat
cwtl
ljmp
lea
into
adc
fstpt
inc
ljmp
xor
enter
jmp
or
fildl
adc
jne
inc
mov
mov
xor
rcrl
mov
ja
dec
push
incl
ljmp
xlat
xchg
popa
sub
add
mov
andb
inc
out
push
std
cmp
repnz
iret
and
cmp
js
mov
sub
or
xlat
fs
lods
cltd
dec
add
out
test
dec
sub
mov
ss
outsl
pop
or
fmuls
stos
ljmp
pop
inc
shll
push
and
mov
repnz
or
fstpt
repz
sbb
popf
add
jno
adc
mov
push
and
mov
out
mov
in
inc
loopne
idivl
cmpsl
out
pop
das
icebp
subl
mov
push
std
nop
cmp
daa
fcom
call
mov
aaa
adc
mov
mov
mov
stos
cltd
ljmp
adc
mov
ss
jmp
cmc
inc
fnstsw
divl
leave
pop
lcall
int
jg
add
jle
cmpsl
lock
aad
addl
xor
bound
push
aas
das
xor
ljmp
out
add
decl
pop
aad
aad
add
decl
or
jns
pop
mov
xchg
lret
pop
imul
sbb
data16
popa
ljmp
jg
in
scas
cmp
mov
sub
mov
mov
repnz
je
dec
jnp
call
pop
mul
mov
ljmp
xor
int3
call
dec
mov
hlt
incl
fs
out
je
les
or
fwait
mov
adc
ret
pop
push
sub
mov
jns
sahf
ljmp
pusha
dec
cli
out
stos
cmp
adc
ljmp
mov
xor
lcall
aas
sarl
cmc
fs
dec
cmp
mov
inc
lods
add
mov
mov
add
sub
ror
xor
mov
aam
and
xchg
xor
xchg
cmp
stc
push
loop
lea
int3
cmp
jns
leave
lret
fimuls
pop
inc
xor
paddw
pop
and
gs
or
cmpsb
xchg
mov
xor
and
cwtl
xchg
cli
lods
lcall
sbb
cmp
cmp
repnz
out
and
paddusw
push
cmp
ds
push
mov
cli
shlb
lods
sbb
cmp
mov
mov
push
rclb
aad
sub
pushl
adc
mov
ret
sbb
ret
sahf
dec
test
xchg
add
jecxz
jo
cmpsl
jns
and
pusha
and
and
xor
shll
mov
push
jns
test
pop
lods
movsl
sbb
mov
clc
cmpsb
mov
inc
pop
jge
in
repnz
aad
mov
cld
inc
mov
dec
pop
inc
sbb
popa
adc
sbb
mov
mov
jg
push
add
sbb
cwtl
out
sbb
sbb
cmp
xchg
dec
pusha
cmpsb
lcall
test
mov
clc
hlt
xchg
fwait
popf
jb
pop
add
decl
mov
mov
aaa
pop
fcmovb
add
xchg
dec
testl
push
lcall
xlat
pop
rcrl
pusha
push
shll
call
inc
test
decl
test
jl
push
dec
jge
imulb
jmp
ret
jne
repnz
repz
incl
sbb
and
sub
pushl
sbb
ds
js
mov
mov
in
clc
push
aam
daa
out
aas
adc
and
push
bnd
sbb
incl
mov
mov
sub
popa
movsl
popf
mov
lcall
jg
loope
cmp
inc
mov
repz
loope
xchg
hlt
inc
pushl
addr16
jmp
lods
arpl
mov
jl
aaa
sub
pushf
ret
mov
fstpt
jmp
fwait
lds
lods
fisubrl
mov
adcb
xlat
call
dec
stos
xchg
fists
dec
jno
jb
aas
adc
xchg
dec
pop
jg
idiv
ljmp
jns
mov
dec
and
mov
decl
repnz
push
out
sub
test
in
jmp
mov
arpl
ljmp
in
hlt
sub
bound
xor
aam
test
stos
or
aaa
cld
sub
jnp
scas
and
loop
hlt
in
push
ds
mov
ljmp
add
cld
sbb
fwait
mov
and
mov
mov
mov
inc
scas
in
gs
enter
incl
aas
push
aas
ret
outsl
aad
add
mov
pushf
mov
test
shlb
ja
decl
fistpll
shll
cmp
ss
andb
xchg
dec
out
cmpsl
add
icebp
call
mov
popf
cltd
jo
cltd
pusha
outsl
test
jp
pop
stos
mov
push
pop
adc
or
not
add
aam
fs
push
and
in
fstp
movsl
fcos
jmp
push
das
adc
filds
int
aaa
mov
pop
push
dec
sub
movsb
clc
sbb
das
pop
sbb
mov
cmp
cld
out
sub
push
popl
ja
inc
inc
jmp
push
mov
fiadds
jge
loop
fsubrs
cmp
push
add
cs
call
adc
lahf
xchg
jmp
lret
sbb
inc
mov
pop
mov
fisttps
dec
xorb
xor
inc
push
call
decl
cmpb
call
mov
pop
pop
mov
dec
xchg
mov
fldcw
incl
push
popa
lock
xchg
lret
inc
sbb
cli
xor
scas
cmpsl
hlt
out
inc
sbb
dec
jae
cmp
mov
inc
lods
dec
stc
sub
sahf
adc
mov
es
push
out
dec
jge
mov
jo
sub
int3
adc
insb
xchg
mov
clc
push
inc
xor
dec
es
fimuls
or
decl
xor
sahf
les
mov
sti
jp
push
sub
ret
pop
or
incl
sub
pop
xchg
sub
or
pop
sbb
mov
test
js
cld
pushl
cmpsl
mov
mov
mov
or
hlt
inc
cmp
push
arpl
out
in
jle
or
cld
mov
xorl
fwait
sub
jle
cli
and
nop
jo
rcll
movsb
out
imul
iret
shr
mov
fsub
mov
pop
mov
test
add
in
lahf
test
add
jle
jbe
add
jnp
pop
cmp
mov
movsl
jns
subl
pusha
test
pushl
xchg
jnp,pt
push
pcmpeqb
in
stc
dec
dec
sbb
sahf
xchg
xor
lcall
out
int3
stos
xor
popf
cmp
mov
and
int3
jl
mov
pushf
cli
dec
xor
lcall
aam
shll
push
cmp
jl
aam
xchg
insl
inc
cld
lcall
call
jb
dec
push
dec
mov
pop
pop
lret
sub
cltd
ljmp
push
mov
mov
out
xor
lds
xchg
pushl
lock
lret
add
mov
sub
adc
scas
test
mov
fcmovbe
stos
pushl
or
fdivp
mov
fcompl
lds
rclb
arpl
lcall
sub
ja
mov
psraw
xchg
mov
xor
imul
pushl
mov
mov
or
push
inc
aad
jb
pop
jb
sub
out
adc
lock
lcall
std
sbb
je
cmpb
outsl
std
push
adc
in
test
mov
sbb
sti
inc
lret
push
hlt
adc
pushl
call
in
mov
mov
push
mov
jo
jmp
xor
sbb
lods
std
dec
mov
and
mov
add
mov
into
push
in
jae
stos
sub
lea
sti
xchg
jne
jmp
decl
daa
jle
push
mov
cld
pop
and
out
fiaddl
mov
into
adc
xor
push
inc
inc
dec
and
clc
mov
mov
pop
pop
loopne
scas
xor
and
push
in
incl
mov
jns
jns
lods
mov
into
ficomps
push
in
adc
add
ret
sar
in
dec
rorb
scas
mov
pop
xor
mov
xor
push
inc
daa
jl
ljmp
and
sbb
ss
push
mov
nop
jnp
pop
sub
enter
xchg
lods
add
decl
sub
aas
lahf
cmp
fisttps
js
xor
mulb
call
and
push
dec
mov
dec
xchg
std
pop
sbb
mov
mov
and
sahf
test
rcrb
xchg
aam
ds
cmpsl
sbb
push
pop
jns
pop
dec
push
lahf
jmp
shrl
inc
fmuls
enter
rclb
jns
ds
sbb
decl
sub
vprotw
test
sbb
cmpsb
dec
xor
aaa
mov
jl
push
jg
pop
gs
in
sbb
dec
jnp
sbbb
ss
ficompl
fdivrp
jg
stos
mov
push
aas
push
sub
push
notl
adc
aad
xor
jl
pop
cld
jmp
xor
ja
jne
es
bound
lret
inc
add
pushl
cmpsl
fsubp
sbb
loopne
sbb
outsb
je
icebp
cs
pop
call
rcrl
and
movsl
mov
stos
xchg
add
jge
and
jb
loopne
cmp
clc
outsl
clc
jmp
sub
jle
mov
cmp
loopne
fdivrs
enter
mov
mov
lcall
repz
insl
ffree
fidivrs
mov
cld
lcall
push
xchg
jae
stos
adc
leave
dec
fs
or
lidtl
sar
loopne
call
inc
cmc
or
ret
popf
mov
inc
out
stc
mov
push
sahf
xor
mov
fdivl
rcll
pop
dec
or
fcoms
aas
into
mov
sbb
inc
popa
jp
dec
in
xor
sbb
jb
xchg
and
popa
push
and
aas
xor
arpl
incl
and
outsl
ret
xor
shll
out
fidivl
sbb
sbb
std
mov
push
pushl
out
leave
pop
std
xchg
mov
in
mov
push
xor
pop
push
out
sub
and
std
pushl
dec
rol
mov
mov
daa
sbb
das
or
add
incl
fs
test
shlb
cmp
dec
fbstp
decl
pop
push
cwtl
sbb
inc
xchg
daa
addr16
dec
adc
jge
inc
xlat
mov
popa
or
cmp
outsl
adc
jp
iret
mov
insb
cwtl
add
out
xchg
decl
hlt
dec
mov
jb
lcall
mov
call
adc
push
std
and
call
mov
adc
add
add
adc
ljmp
jl
push
lret
ret
mov
cmp
shlb
mov
incl
or
mov
jl
sub
stc
test
insb
xlat
lcall
push
stc
mov
cmp
mov
aas
out
clc
dec
aam
pop
js
fidivs
lahf
pop
dec
dec
or
pop
sbb
push
loop
cli
jmp
fdivl
cmc
jcxz
cmp
dec
mov
xor
jmp
fiaddl
push
xor
insb
cmp
pop
lahf
js
inc
dec
cmp
adc
leave
int3
stos
push
pop
lock
faddl
and
hlt
sti
add
cmpsl
les
lds
push
hlt
dec
inc
jle
inc
dec
push
inc
lea
out
push
test
mov
and
jecxz
pusha
lock
pushl
cltd
test
lock
xchg
adc
and
stos
xor
test
and
outsb
dec
int
pop
ljmp
inc
outsl
jae
and
fcmovu
sarl
pop
add
adc
imul
rcrl
jns
mov
or
dec
push
jge
dec
lret
fs
adcb
cmp
ficomps
add
push
out
xchg
imul
lret
ljmp
mov
rorl
lret
inc
push
sbb
dec
mov
xor
arpl
lcall
test
jl
call
dec
out
mov
jne
outsb
hlt
aaa
sbb
scas
fimull
outsb
aam
cltd
loope
dec
pop
sbb
xchg
or
mov
subb
pop
lods
mov
cmp
jmp
scas
adc
dec
pop
add
inc
and
adc
jae
mov
dec
sarb
inc
ds
fdiv
jae
pop
sbb
xchg
sarl
in
imul
mov
mov
std
leave
add
mov
dec
push
push
jp
sti
les
into
sub
adc
pop
repnz
in
add
loope
ds
sbb
xor
xlat
add
push
test
test
aaa
int
mov
dec
mov
dec
jecxz
fidivrs
dec
stos
lahf
or
call
imul
jae
dec
ljmp
decl
mov
pop
repz
cwtl
insb
das
xlat
bound
pop
xchg
ljmp
out
mov
mov
inc
sbb
insl
gs
outsl
fdivrl
adc
adc
lods
sub
call
sub
cmpsb
pop
test
sub
pop
xor
dec
mov
adc
or
clc
jg
jle
push
push
icebp
outsl
popa
sub
cltd
sbb
xor
leave
clc
test
fwait
rorl
jbe
dec
cli
dec
repz
gs
pop
inc
jmp
inc
cmp
incl
bound
push
xorl
xchg
or
pop
sbb
outsb
into
mov
je
cmp
fadds
push
call
scas
fucomp
sub
rep
addb
dec
xchg
into
fwait
pop
sbb
fdiv
jno
dec
in
sti
loope
jmp
outsl
filds
mov
das
lods
lock
or
cmp
add
pop
lret
stos
ljmp
or
push
sub
lcall
int3
int3
test
out
mov
add
sub
pop
mov
xor
je
cmpsb
cmp
call
mov
mov
jmp
fisttps
sarb
mov
sbb
push
pop
lods
outsb
fists
clc
mov
clc
sub
sub
mov
cli
pushl
es
inc
test
leave
negb
subl
add
dec
xchg
mov
and
cli
push
mov
mov
and
dec
jecxz
hlt
push
push
loop
lock
clc
mov
call
mov
cwtl
xor
out
and
in
sbb
stos
rorl
pop
mov
pop
std
mov
sub
xor
adc
adc
xor
mov
jle
push
inc
push
inc
movsb
sbb
pop
inc
xor
mov
adc
jmp
les
mov
out
int
mov
cmp
leave
and
lcall
dec
mov
lock
add
loopne
lods
in
xor
jbe
mov
pusha
leave
call
cmpb
enter
xchg
jg
fdivl
cmp
loopne
mov
fbstp
mov
cmc
dec
cmpsb
xor
xchg
jle
cs
cmp
jl
shll
call
and
lret
popl
xchg
daa
icebp
pop
fstpl
lods
cwtl
cs
decl
incl
xchg
out
repnz
into
out
imul
in
pop
sbb
mov
dec
fistl
mov
call
outsb
add
filds
repnz
dec
sbb
std
mov
xor
test
xchg
bswap
push
sbb
sti
xchg
js
xlat
add
pushl
outsb
das
sbb
outsl
sub
xchg
xchg
add
out
sbb
xchg
fstpt
popa
add
stos
into
xchg
and
mov
push
dec
mov
cmp
in
sbb
sub
pop
mov
xchg
push
gs
test
mov
rolb
mov
ret
sub
inc
xchg
inc
xchg
pop
mov
push
cltd
mov
pushl
std
dec
xchg
jl
inc
aam
shlb
jp
push
sbb
lahf
mov
lcall
xlat
mov
jae
inc
fcoms
xor
scas
cld
lret
add
ljmp
lods
cltd
inc
xchg
scas
sub
mov
shrb
and
loopne
sub
dec
inc
inc
js
mull
push
lods
xchg
pop
mov
inc
lods
add
mov
gs
call
lret
filds
and
jns
sbb
rcll
adc
adc
jmp
push
xor
iret
mov
stos
jb
or
leave
arpl
sbb
decl
jae
or
shr
ss
aaa
cmp
dec
inc
pusha
stc
outsb
adc
push
mull
pushl
cmp
xor
push
adc
sbb
sub
rclb
aam
dec
inc
mov
incl
and
add
mov
add
std
pop
or
jno
stos
aam
rolb
test
mov
jmp
jg
add
stc
fs
rolb
fbld
add
clc
lcall
xchg
and
mov
mov
movsl
xchg
xor
ret
adc
shrb
aaa
es
cmp
sbb
movsl
or
outsl
das
shl
cld
data16
mov
push
fcoml
into
xchg
add
jp
cltd
int3
popf
add
rolb
fcmovnu
xor
and
pop
push
inc
adc
adc
mov
dec
incl
cmpsb
and
xor
fdivl
fnsave
inc
dec
jns
xor
incl
daa
cmc
xor
mov
add
xlat
jmp
jo
ds
push
cmp
incl
cmpsl
push
push
outsw
ficoml
test
std
xor
jl
cmp
lret
rol
test
pushf
sarb
xor
fcomps
les
dec
js
test
xchg
xor
adc
sub
lcall
add
dec
mov
dec
inc
xchg
lock
jecxz
adcb
decb
adc
in
and
fucomi
jl
test
push
divb
scas
push
xor
outsl
cld
fistpll
ret
push
cli
rcrb
cmp
imul
xchg
cmpb
pushl
mov
out
not
inc
sub
push
ja
scas
cmp
ljmp
jl
sub
cmp
adc
sub
jnp
pop
cmpsl
cwtl
xchg
lea
mov
jg
inc
je
mov
dec
adc
movsl
mov
popa
or
mov
cmp
enter
or
and
fisttps
cmp
fists
aam
out
cld
fwait
jg
xor
cmp
or
repz
pop
push
xchg
test
xchg
movsl
mov
call
and
cmpsb
loope
xchg
rorb
sub
fucom
and
popa
xor
jo
mov
fnstsw
xor
fdiv
or
sbb
cmp
push
jno
mov
inc
es
xchg
loope
das
scas
pop
cld
hlt
jmp
lods
in
test
push
cltd
in
arpl
mov
fisttps
push
popf
lahf
loop
adc
dec
pop
sbb
cmp
decl
fdivr
inc
push
pop
mov
je
movsb
cmp
mov
les
insl
jl
sahf
call
loope
push
push
movsl
or
mov
lods
mov
lock
mov
decl
hlt
adc
lods
clc
fwait
dec
adcl
push
jb
test
pop
mov
enter
jae
sub
decl
pop
leave
sub
arpl
jb
adc
mov
fucomip
test
lock
decl
imul
outsl
sub
call
nop
sahf
push
dec
aad
jge
mov
lcall
cmp
stc
mov
aaa
xor
mov
mov
jno
imul
addr16
jg
decl
ja
add
sub
jns
push
xlat
addr16
call
pop
adc
mov
xchg
pop
ss
cmp
pop
test
in
into
mov
cmpsb
decl
mov
jle
dec
lret
push
mov
cmpsl
xchg
mov
push
fcoms
push
adc
xor
mov
push
call
xchg
add
ret
hlt
sub
jecxz
xor
ds
test
inc
inc
push
loop
add
ljmp
xor
arpl
pushl
in
jl
adc
orb
mov
enter
jno
daa
add
hlt
mov
jg
outsl
pop
push
ret
iret
stos
ror
rcr
out
sbb
xchg
xchg
mov
jo
aad
cmpsl
nop
inc
ss
call
or
arpl
jb
push
cld
cwtl
sbbl
imul
lahf
xchg
or
pop
jmp
xchg
test
push
mov
repz
mov
mov
fwait
mov
pop
lahf
ja
enter
cmpsb
pop
stc
add
andl
out
pop
arpl
mov
dec
sbb
ss
dec
dec
adc
movsl
sub
pop
mov
push
cwtl
fadds
ret
outsl
or
inc
outsl
xor
sub
add
push
pop
pusha
or
cmp
adc
in
mov
dec
push
outsb
xchg
dec
pop
dec
mov
or
lds
je
mov
pop
push
push
daa
mov
negl
bound
stos
test
push
inc
xor
lret
movaps
jp
adcl
scas
pop
or
jg
and
or
incl
mov
mov
clc
sbb
fnstenv
inc
cmp
adc
dec
jle
or
cmpsl
lcall
mov
inc
repz
cltd
dec
out
out
xchg
and
cmp
aad
sbb
daa
jmp
fdivr
ljmp
sub
inc
rolb
inc
xchg
jo
dec
dec
addb
lcall
sbb
xchg
push
mov
ret
jg
pop
pop
imul
out
jne
add
cmp
mov
cmp
and
xchg
outsb
mov
icebp
mov
cmp
push
sbb
aam
test
jp
pop
jmp
jg
jle
daa
dec
cmp
fld
int3
into
mov
jae
add
pop
sbb
mov
push
lcall
loopne
ficomps
stc
imul
mov
jecxz
loop
popf
pop
mov
stos
add
outsl
filds
push
cltd
sub
mov
xchg
ret
scas
xor
fisubrl
push
jg
jmp
jnp
lods
xchg
fbstp
cltd
jmp
pop
xchg
cmp
pop
inc
pop
inc
mov
add
cmp
sbb
mov
je
out
lcall
and
sub
sbb
cmpsb
stos
inc
addr16
ljmp
or
dec
jae
add
and
ret
aaa
dec
push
movsb
lcall
pushl
repnz
or
push
outsb
xchg
pusha
push
es
mov
cwtl
addr16
adc
mov
pop
pop
push
arpl
je
mov
jbe
shrb
inc
dec
hlt
dec
add
jmp
xchg
sbb
js
and
pop
cmp
lods
insb
rolb
fadd
push
lcall
pop
xchg
inc
xchg
pop
sub
repnz
adc
jge
div
faddl
repz
decl
xchg
fcom
push
aas
std
fistl
sbbl
out
lock
out
hlt
mov
cmp
lcall
dec
cltd
add
adc
and
fwait
inc
imul
dec
push
leave
and
je
addr16
cld
jle
sub
mov
shl
and
les
push
xor
lcall
incl
or
shrb
and
loopne
stos
mov
popa
mov
xlat
cmp
jmp
push
sbb
stos
mov
dec
sbb
lahf
add
outsb
pop
dec
fadd
idiv
lcall
add
cmp
data16
jge
xchg
xor
aam
xorb
fisttpl
cmp
loopne
jmp
jne
mov
push
in
stos
cwtl
and
add
nop
out
fdivr
jmp
adc
mov
jb
mov
add
je
icebp
push
ljmp
out
sbb
mov
ja
je
push
xchg
adc
jl
loop
clc
lret
test
push
lret
xchg
ja
mov
loopne
mov
iret
lahf
repnz
dec
pop
outsb
ficompl
call
dec
cmp
cmc
pop
adc
mov
fwait
lahf
out
int
rcrl
dec
cmpsl
mov
push
cmp
test
push
push
dec
mov
enter
push
gs
pushl
cmpsl
mov
adc
jnp
loope
fiaddl
lret
xor
scas
leave
xor
insl
sar
jmp
out
rcrl
push
leave
add
fcos
orb
test
fs
or
jg
pusha
popf
adc
imul
push
xchg
pusha
dec
pop
aam
push
cmp
cmp
inc
push
dec
xchg
add
in
inc
stc
xor
lcall
cmpsb
dec
add
stc
inc
out
fs
ficoml
pushl
or
mov
loop
sub
and
add
xchg
mov
pushl
imul
sbb
into
ds
xor
mov
out
mov
inc
lock
push
fsub
push
les
mov
adc
test
dec
loopne
mov
test
fbld
test
sub
subb
pushl
rclb
shll
jnp
pop
das
int3
ljmp
incl
cmc
or
scas
call
daa
aaa
push
mov
push
dec
jnp
add
lods
sbb
lcall
push
wrmsr
cmpsl
hlt
movsb
or
pop
jnp
loop
or
lds
call
pushf
mov
into
jp
loope
addr16
jmp
cmp
push
lcall
xor
cmpsb
jbe
xchg
sub
mov
mov
loop
lcall
lods
in
sbb
or
lahf
dec
dec
xchg
pop
mov
repz
fadd
mov
incl
or
xor
dec
xchg
mov
test
jo
jne
xchg
mov
push
inc
repnz
stos
jg
mov
jecxz
push
das
xchg
imul
fmull
ret
rclb
sarb
lret
fwait
mov
dec
mov
adc
pushl
mov
xlat
inc
js
mull
out
sub
jmp
dec
jle
xor
scas
fs
in
das
sbb
test
inc
mov
mov
ja
jmp
ret
inc
outsl
stc
jnp
xchg
xor
aaa
in
ljmp
call
int
jnp
sub
xchg
test
xor
xchg
xor
pop
or
out
dec
push
xlat
negl
divb
xchg
int3
sbb
xchg
push
xor
mov
fdivrp
dec
incl
inc
loopne
jns
loope
adc
stos
lret
hlt
fcoms
jmp
loope
repz
cltd
or
cmp
sub
sub
rol
cmp
movsb
lret
popa
cmc
ljmp
cmp
push
js
bound
cld
shrl
lret
lret
aad
inc
insb
outsl
inc
cmp
xchg
mov
in
adc
mov
mov
sarb
xchg
mov
fistpl
ja
xor
dec
les
mov
nop
inc
xchg
dec
sbb
xchg
cs
fldcw
sbb
iret
or
jl
inc
xchg
shrl
jmp
pusha
stc
or
dec
int3
sub
nop
ljmp
xchg
cmp
and
adcl
add
mov
sti
pop
xchg
mov
dec
incl
sbb
mov
jne
add
sub
int
sub
mov
fadd
decl
mov
mov
out
movsl
andl
jecxz
jg
call
lahf
pusha
out
fildl
push
outsb
clc
xchg
sub
cmpsl
inc
dec
mov
lret
cmpsb
lcall
ret
enter
cmp
push
insb
lret
xor
test
push
in
cs
push
call
in
sbb
cmc
and
incl
rcrl
pop
adc
jl
jge
icebp
es
and
fisubl
aas
jg
out
lcall
js
inc
pop
iret
enter
scas
sub
xchg
dec
jecxz
mov
lcall
sub
pop
mov
or
das
xor
dec
mov
adcb
jge
push
call
pushf
sub
jb
jp
cld
mov
adc
jle
cltd
inc
mov
lods
in
pop
out
cs
lcall
out
mov
in
inc
and
or
nop
pusha
mov
cmp
or
adcl
mov
sub
scas
mov
lret
xor
push
std
and
and
mov
jo
mov
orb
jns
shlb
rclb
pop
ds
inc
sbb
std
bound
jno
inc
push
out
out
int
jge
add
data16
les
call
sub
iret
mov
sbb
push
daa
jge,pn
int3
repz
inc
mov
ljmp
fistl
cmpsb
inc
fstpl
dec
adc
xchg
xchg
lea
mov
jbe
dec
lcall
int
pop
stc
call
cs
jb
sbb
inc
mov
adc
cld
pop
dec
out
add
jnp
xchg
push
inc
jg
push
add
popa
sbb
pop
ljmp
dec
lock
add
dec
push
xchg
jg
gs
sub
jp
ljmp
mov
in
ret
mov
ljmp
cmp
dec
cmp
ljmp
ljmp
sub
mov
xchg
jle
insb
test
pop
popf
inc
cld
decl
inc
sub
popf
fs
mov
mov
dec
ret
lcall
cld
pop
hlt
mov
adc
pushf
and
cmp
aad
mov
pushl
xchg
mov
fsubrs
xor
test
aad
pop
mov
dec
sbb
or
ljmp
pop
dec
jl
subb
push
sbb
lods
jo
mov
outsl
bound
xchg
cmp
decl
and
dec
rcrl
int
push
sbb
out
xor
jp
cmc
push
xchg
loop
jg
mov
cli
testl
xchg
inc
insb
xchg
lcall
sub
sub
jg
sbb
ss
mov
mov
dec
pop
xchg
in
jge
cmp
loope
imul
cmp
subb
outsb
or
fsubs
ss
xchg
jge
jb
jbe
xor
cmpsl
xor
jmp
cmp
pop
insb
xor
std
std
lods
repz
mov
mov
push
sbb
pushl
mov
or
add
push
jmp
inc
mov
adc
movl
jmp
or
fdivr
rclb
out
out
add
mov
cmc
or
sub
scas
mov
xor
jmp
push
call
jnp
push
js
push
outsb
lods
mov
sahf
ljmp
push
xor
mov
cwtl
fdivl
fdivs
jge
push
ds
sbb
dec
jae
sub
or
push
sbb
adc
int
cmp
mov
ljmp
rclb
fdivrs
adc
inc
sub
out
pushf
jae
cmp
gs
call
shl
adc
popf
scas
sbb
sub
lcall
inc
mov
jmp
inc
mov
add
dec
addr16
in
pop
js
aam
fisttps
cmpsl
pop
jl
adc
or
add
cli
pushl
adc
dec
pop
mov
or
lods
mov
ljmp
ljmp
and
pop
add
xchg
jbe
jb
fwait
push
sti
inc
stc
fs
and
xor
stos
dec
or
loop
out
dec
cmpsb
jp
jmp
jp
cs
leave
push
bound
repnz
jo
or
cmp
je
in
xchg
sbb
dec
lock
icebp
mov
cmpsb
outsl
scas
jo
imul
lcall
sbb
mov
push
jnp
stc
mov
sbb
add
sub
cmp
les
or
ljmp
cmp
test
jecxz
das
je
jo
fistpll
jg
pop
mov
cmc
jp
out
cmp
push
jae
ljmp
imul
mov
inc
enter
jecxz
mov
push
es
movsl
cmp
dec
rol
add
insb
addr16
sub
fs
ds
jmp
inc
adc
jg
push
std
or
rol
test
ss
inc
push
loopne
lcall
jbe
out
dec
fwait
cmpsl
bound
movsl
insl
jnp
out
mov
idiv
call
jae
sub
es
das
shlb
xchg
push
jo
mov
stos
cmpl
jle
sarb
and
test
push
rclb
int
addb
push
insl
and
and
push
rorb
in
xor
ljmp
xor
xchg
adc
jmp
cmp
and
mov
test
jmp
cmp
jb
imul
mov
mov
iret
mov
popa
sub
lcall
ljmp
lock
jl
ret
cld
movsl
push
pmulhw
lea
test
out
cli
decl
fmuls
imul
nop
mov
dec
addl
or
xlat
movsl
add
in
cld
xchg
es
call
cmpsl
cmp
ret
pop
xor
aad
mov
icebp
bound
imul
stos
mov
lods
xor
imul
or
out
inc
and
jmp
test
cmp
mov
es
mov
jmp
xchg
mov
lcall
ror
jo
xchg
fidivrl
push
or
pushf
jge
inc
lret
pop
cmp
cld
decl
pushf
insl
jmp
loopne
dec
inc
push
fprem1
in
and
xor
xchg
cmpsb
pushl
push
mov
and
ds
push
test
sbb
push
mov
pushl
inc
xchg
test
cmp
add
push
pop
cmp
lods
rcrb
out
incl
sbb
cld
push
iret
inc
mov
popa
or
decl
inc
adcl
add
jp
jns
andl
inc
pushl
cmp
jb
insl
in
fwait
jmp
inc
out
inc
cmp
aam
push
mov
pushf
cmpsb
mov
push
adc
bound
notl
adcl
enter
int
push
fldt
sahf
mov
and
out
sahf
std
dec
std
int
mov
addr16
cmp
test
sti
mov
call
lcall
dec
adc
popf
das
mov
clc
jne
dec
inc
adc
icebp
aad
cld
mov
sbb
outsb
stc
ss
fmull
in
mov
rcll
inc
mov
cmp
call
fs
adc
push
mov
sarl
mov
xor
test
add
mov
js
sub
movsb
mov
xlat
addr16
jne
repnz
insl
lcall
dec
jg
mov
loopne
in
fs
repz
test
imul
mov
call
rcll
add
push
lds
lcall
sub
fs
push
cld
int
pushl
dec
lods
leave
cmp
adc
into
cmc
mov
jne
js
xor
jp
sub
xchg
lods
jmp
fnstenv
orb
outsb
add
lea
jge
mov
jle
nop
cwtl
xchg
jp
cmp
push
jno
add
es
flds
cli
jmp
ret
int3
out
insl
lahf
dec
jmp
aad
iret
into
loop
insl
scas
xchg
je
mov
mov
cld
inc
mov
es
lds
pop
test
xchg
inc
cld
into
jnp
in
add
pop
popf
ljmp
sbb
cmp
jmp
lcall
decl
cmp
push
pop
jmp
cmp
xor
pushl
sbb
lcall
shrb
add
or
mov
dec
mov
aas
aad
jmp
mov
or
mov
and
adc
add
xchg
sbb
popa
fstps
out
clc
pushf
mov
insl
gs
mov
outsl
jbe
mov
mov
incl
dec
push
call
dec
shlb
jae
sbb
mov
mov
pop
push
lock
dec
stos
or
jbe
push
fdivrp
movsl
push
mov
ljmp
mov
inc
nop
lods
daa
or
mov
sub
or
add
incl
push
mov
push
test
cmp
jb
imul
push
mov
out
xchg
mov
dec
mov
push
jg
mov
inc
cli
cmpsl
adc
xor
ljmp
jmp
mov
ret
sbb
xchg
pop
cmp
dec
xchg
iret
mov
test
lcall
jg
xchg
loop
cmp
cmp
leave
pop
inc
fsubrs
cmp
jo
push
fildll
and
fwait
outsb
mov
inc
xor
inc
out
sbb
lcall
popa
mov
push
mov
jecxz
fnstenv
lret
dec
jo
mov
adc
push
out
ds
jmp
mov
lret
ljmp
mov
es
pop
lahf
cmc
sub
aaa
outsl
sbb
xor
inc
add
out
add
imul
aaa
add
sub
das
sar
test
push
je
adc
in
mov
cmpsb
cmp
lcall
dec
cmpb
test
jb
push
les
fsubs
or
and
and
lcall
mov
push
pusha
addr16
jecxz
incb
jle
sbb
outsl
sbb
jp
pushl
jno
xor
dec
incb
mov
mov
push
sbb
push
decl
and
ffree
pop
jg
int3
adc
mov
lds
xchg
daa
sbb
jg
stos
movsb
push
jb
jbe
push
aam
jns
int3
mov
mov
sar
fbld
adc
mov
notl
pop
inc
pop
cmp
movsl
push
or
fstl
hlt
jnp
incl
pop
and
bound
sti
cli
lods
adc
pop
cmp
loop
mov
lcall
push
push
xchg
cmpsb
leave
mov
xor
outsl
cmpsb
out
scas
mov
mov
imul
incl
mov
bound
inc
mov
cltd
push
jmp
fsubrs
pusha
sbb
add
call
add
sub
loopne
cwtl
leave
ficoml
and
mov
outsb
imul
xchg
incl
or
lcall
mull
adc
jg
scas
fucompp
mov
cmp
or
mov
sbb
and
cmp
push
scas
decl
ret
adcl
iret
mov
jl
dec
mov
mov
cmp
add
fs
jle
je
repnz
and
pushl
scas
int
ficoms
xor
jns
add
repnz
pop
dec
cmp
movsb
or
pop
jle
pushl
inc
ficomps
mov
ror
pop
sbb
xchg
mov
dec
adc
pop
hlt
popa
dec
pushl
lret
int
push
pop
iret
aaa
inc
xor
add
mov
test
ret
nop
stos
adc
jmp
jnp
mov
dec
mov
icebp
cld
push
imul
stos
jae
pushl
fcmovbe
xlat
sbb
mov
jbe
scas
sbb
imul
jl
ror
enter
lcall
lds
mov
imul
and
aad
gs
cmpsl
call
push
js
ljmp
mov
and
es
jne
scas
fisubs
fadd
call
push
stc
mov
xor
scas
loope
push
stos
adc
les
ret
add
jne
and
jmp
mov
aaa
in
mov
call
cs
adc
push
addl
lock
js
in
pop
sub
push
dec
or
jmp
push
bnd
shll
popf
js
out
dec
cmpsb
addr16
and
inc
xchg
incl
fucom
fcoml
mov
arpl
sub
hlt
add
pusha
subb
fbstp
repz
xchg
popa
cmp
xor
in
push
loop
sbb
dec
hlt
push
arpl
stos
xchg
mov
xor
call
add
sub
sub
stos
push
ljmp
mov
test
inc
mov
xchg
sub
sarl
pushf
sbb
shrl
cmpsl
fwait
test
sbb
clc
fsubp
add
cli
les
cmpsl
sbb
pusha
fadds
add
incl
xor
in
sbb
enter
iret
or
clc
or
test
int3
mov
not
sub
pop
dec
cmp
ljmp
cmp
mov
shl
subb
pop
pop
orl
and
ret
mov
incl
sbb
jecxz
data16
push
out
xchg
jo
and
gs
call
dec
xor
popf
je
and
add
push
mov
cmp
clc
mov
mov
out
adc
call
mov
xor
dec
mov
insl
push
mov
orb
xor
dec
cmp
das
or
jmp
mov
ljmp
cmc
add
fwait
or
test
pop
dec
mov
xchg
fs
jle,pn
mov
pushl
cld
ja
mov
dec
push
jnp
pop
push
int
data16
xchg
cli
stc
out
mov
sbb
decl
lcall
pop
movsb
add
addr16
aaa
lret
in
and
clc
mov
hlt
iret
sub
out
cli
pop
icebp
fwait
dec
sahf
cs
stos
lret
pop
out
fdivrp
or
outsl
jg
shrb
inc
mov
hlt
clc
pusha
xchg
in
aas
divl
lea
adc
mov
jno
outsb
add
iret
add
pop
mov
out
sbb
imul
in
xlat
mov
jmp
gs
cmc
lret
cltd
mov
adc
cmp
rclb
pop
add
pusha
jb
fdivr
ljmp
out
int3
loope
std
xor
inc
call
push
cli
dec
fwait
pop
mov
popa
outsl
and
lea
iret
push
fisttpll
into
and
xor
xchg
jmp
add
sti
test
aas
shl
sub
jb
call
cld
das
mov
cmp
xlat
xchg
jne
push
sbb
movsb
jecxz
sbb
xchg
int3
sbb
sarb
sub
movsb
lds
rclb
mov
aaa
and
jecxz
cltd
add
pop
enter
imul
out
dec
push
xchg
fwait
dec
or
cmpsb
stc
push
test
daa
ss
push
and
ljmp
add
rorb
imul
out
sahf
cmp
in
sahf
and
sar
xchg
in
lret
or
xlat
jl
mov
stos
aam
leave
mov
imul
lcall
pop
icebp
xchg
jmp
bnd
out
push
pop
mov
sbb
jb
inc
bound
inc
js
inc
fisttpll
es
movsl
pushf
inc
xchg
pushf
flds
jp
add
jl
stc
arpl
adc
inc
mov
mov
mov
mov
inc
lock
int3
xchg
cmp
mov
js
jecxz
js
aaa
mov
std
jbe
cmc
loop
mov
ljmp
call
mov
notl
push
aas
and
mov
xor
adc
ljmp
and
fsubrs
dec
jo
mov
bound
sbb
push
push
mov
ljmp
jb
or
xor
cmc
pop
push
mov
mov
mov
mov
shrl
testb
sbb
sahf
mov
mov
call
add
xor
dec
fadds
push
mov
lds
dec
jbe
xchg
out
mov
cmp
ljmp
push
pop
inc
add
dec
call
ja
xchg
jae
out
pop
mov
ljmp
aaa
xor
lods
aaa
test
inc
or
aas
mov
pop
dec
mov
mov
lds
imul
call
nop
mov
dec
fbld
leave
push
inc
add
jp
or
in
pop
call
push
cli
out
pinsrw
cmp
sbb
int3
rolb
rorl
and
ljmp
xchg
inc
stos
ja
adc
jne
sbb
sbbl
popa
mov
sbb
shll
lea
and
xor
mov
testl
popf
and
mov
and
jp
lea
jg
jg
loope
jbe
insb
and
mov
adcl
aam
jns
call
or
lcall
pushf
xchg
cwtl
pop
je
test
add
add
mov
or
pop
in
mov
cmp
in
xor
xchg
je
cmp
push
insb
pop
mov
or
or
loop
or
xchg
and
xchg
imul
add
xchg
push
es
cld
in
lods
mov
jb
add
movsb
outsl
outsl
clc
in
lcall
and
sbbl
loope
addb
adc
push
jo
xchg
push
fdivp
sub
daa
cmpb
and
sub
shrb
aam
xlat
cli
push
lock
lret
call
push
jno
xchg
sbb
lea
test
fucompp
cmc
dec
sub
pop
int
mov
fisubl
or
push
add
and
and
ficoms
gs
or
decl
mov
or
jmp
push
in
call
dec
or
ljmp
xor
sbb
push
cmp
nop
cmp
cmp
mov
mov
push
dec
std
jg
cli
fiadds
pop
dec
push
test
cmpsb
push
mov
mov
in
push
xor
mov
pop
clc
dec
inc
bndstx
add
gs
in
xchg
add
mov
add
lock
ljmp
imul
inc
outsb
push
sahf
jns
jle
mov
ja
in
incl
xlat
cltd
sub
sub
inc
xchg
mov
jl
jg
repz
xchg
lea
je
push
mov
aas
call
push
stos
cmp
testb
pop
pusha
xchg
push
or
mov
call
movsb
cmpl
add
xchg
in
xor
sbb
pop
icebp
push
pop
dec
lret
push
lahf
sbb
lods
incl
or
cmpsl
jmp
mov
jns
stc
stc
decl
jl
lret
sbb
das
shlb
dec
cmp
leave
cmp
scas
insl
xchg
lcall
jne
adc
lcall
ja
pusha
pusha
cltd
imulb
testb
daa
ret
jecxz
xchg
out
ljmp
outsb
cmp
mov
jns
out
into
aas
ss
out
loopne
sbb
push
mov
imul
lods
sbb
hlt
negb
pop
inc
aaa
adc
xchg
inc
iret
loope
rclb
cli
out
divl
jo
add
ljmp
push
outsl
out
jg
push
xchg
cmpsl
and
add
aam
lcall
sub
push
ret
lock
cli
or
in
in
jbe
sub
lret
xchg
das
ljmp
add
in
and
mov
jnp
mov
push
push
sbb
mov
xchg
shl
jmp
sub
pop
cmpsl
fisubrl
fcompl
mov
call
push
enter
in
data16
jb
dec
mov
test
mov
push
scas
or
mov
into
fucomi
outsl
repz
add
cli
mov
mov
cmp
xchg
fwait
std
mov
xchg
lcall
lods
mov
jns
lods
or
jb
ljmp
lahf
adc
decl
pop
sub
call
sub
sbb
mov
mov
sbb
mov
je
push
movsb
out
movsb
ljmp
pushf
xor
push
enter
into
cmp
sub
cmc
cmpsb
push
jp
inc
movsb
rcrl
call
out
cli
imul
in
orb
inc
ljmp
jne
stos
mov
and
pop
aas
jno,pt
add
lcall
enter
pop
nop
dec
movsb
int3
jl
and
mov
sbb
jg
shr
cwtl
clc
mov
jmp
fnstsw
test
repz
and
sarl
stos
fmuls
jl
outsb
pop
ds
lods
call
push
sbb
mov
pushl
push
aad
test
jge
fimuls
push
sbb
loopne
mov
popf
dec
add
pushl
enter
add
mov
xchg
fmuls
movsb
loope
adc
das
push
repnz
out
jg
decl
cmp
lahf
sbb
js
ja
fimull
andb
adc
popf
incl
add
ljmp
clc
push
pop
sbb
push
sarl
incl
pop
cmp
ffreep
enter
and
add
push
dec
ljmp
mov
incl
js
mov
js
mov
imul
push
cmp
add
ljmp
sbb
push
push
rcrb
lea
mov
test
mov
xor
call
cld
pop
scas
adc
lds
and
mov
xor
sbb
mov
add
sub
gs
fwait
test
mov
cmc
lcall
sbb
repnz
adc
pop
add
xchg
add
mov
hlt
lcall
inc
mov
sub
lea
in
sub
xchg
cmc
push
xlat
bound
pop
pop
xor
xor
decl
mov
cmp
sub
xor
xchg
sbb
rolb
push
lds
jp
icebp
jg
fwait
pop
sti
xlat
sbb
jnp
sbb
movsb
sti
cmc
lcall
xchg
jns
xor
jnp
pop
loop
not
call
mov
adc
fadd
add
xchg
hlt
inc
pop
xchg
lea
lods
pop
push
or
push
mov
outsl
test
nop
jmp
aaa
cmp
cli
aas
idiv
inc
lods
push
outsl
pop
pushf
or
sbb
shll
addb
ljmp
mov
xlat
push
xchg
imul
push
push
inc
jb
or
push
dec
adcb
push
add
fucom
in
xor
pop
lret
in
xchg
pop
mov
push
aas
xchg
mov
fcomip
les
stos
pushl
add
int3
xchg
jns
loop
fsubs
data16
lcall
dec
xor
std
and
mov
jns
pusha
inc
loop
movsl
lret
mov
shll
pop
add
sbb
sbb
inc
cmp
ret
fdiv
or
popf
out
pusha
or
jg
out
jmp
push
ret
ret
mov
das
lcall
xchg
and
xchg
hlt
test
movsl
incl
cld
pushl
ss
in
out
sub
lds
testl
aam
call
mov
mov
mov
mov
icebp
cmpw
hlt
fs
in
in
outsb
decl
jmp
lret
mov
rolb
sub
cltd
arpl
sub
rclb
div
jmp
pop
stos
jno
push
push
fwait
pop
loop
xchg
jl
sbb
sarb
movsb
add
cmp
push
xor
ljmp
andl
std
push
loopne
or
or
and
mov
lcall
mov
or
and
insl
fcompl
out
repz
cmp
pop
mov
dec
mov
insb
insb
jmp
and
xchg
cli
mov
and
scas
pop
insl
jnp
call
mov
decl
mov
push
out
dec
cmp
out
shlb
pop
fmulp
mov
mov
mov
incl
loopne
sub
shll
or
push
push
arpl
jge
aad
in
lods
add
decl
rcll
xchg
jo
shll
add
adc
push
fistpl
lcall
in
fidivs
sbb
test
push
xor
sbb
fisttps
sar
loop
xchg
xor
jle
mov
mov
jg
mov
jmp
and
cli
popf
inc
mov
cmp
mov
icebp
aad
dec
out
decl
bound
int
jg
xchg
dec
imul
call
clc
push
repnz
lret
and
shr
pop
loop
aam
insb
inc
stc
jbe
add
fsubs
pushl
iret
mov
mov
loopne
mov
in
daa
sub
incl
mov
bound
cmp
scas
inc
mov
lret
insb
mov
lret
imul
lcall
arpl
dec
mov
mov
mov
arpl
lcall
cltd
xor
jmp
pop
mov
pop
dec
push
icebp
adc
in
xor
ret
xchg
loope
daa
ss
jmp
es
lret
stos
add
ret
jmp
aad
cmc
gs
xor
fnop
bound
ljmp
adc
pop
inc
cli
push
test
or
in
mov
movsb
out
sti
push
insl
dec
fnstenv
push
cmp
mov
mov
jns
cmc
ljmp
std
popf
out
push
fisttpll
cli
fdivrp
cmp
sbb
repz
jns
fists
cmp
and
jo
scas
test
inc
jae
outsb
cmp
rcll
and
mov
cwtl
xchg
jno
inc
add
xchg
sub
dec
sub
sti
test
fiaddl
sub
ret
fisttps
ljmp
dec
ja
ret
cmc
pop
jo
sub
aas
xchg
cli
mov
call
or
loopne
and
lret
push
or
mov
shl
mov
dec
incl
cld
incl
adc
movsbl
cmp
adc
xchg
cli
outsl
mov
jg
jg
mov
mov
mov
sub
cmc
xchg
pusha
pop
bound
or
jmp
jle
xchg
ja
cwtl
cmp
repnz
in
adc
dec
add
mov
incl
dec
sbb
rcll
shr
pushl
pop
dec
mov
cmp
push
rcrb
pop
fwait
dec
xor
addb
lods
call
add
fnsave
mov
imul
jbe
push
filds
loop
pop
xor
cmp
jb
imul
call
inc
nop
std
lret
and
imul
das
or
call
insl
test
mov
hlt
sub
cmpsl
dec
aas
and
ror
cmpsl
xor
mov
incl
cmpsl
stos
movsb
sub
pop
lret
fiadds
cli
leave
mov
mov
insb
jb
cld
xchg
mov
sub
shrb
aam
xor
xchg
mov
es
out
mov
lcall
rcl
jne
sbb
out
jae
pop
dec
mov
xchg
call
ljmp
xchg
addb
mov
mov
cmp
rorb
out
jno
inc
mov
dec
mov
xchg
jnp
push
in
pop
scas
jbe
repz
pop
xchg
lcall
xchg
insl
enter
shlb
out
mov
std
in
mov
cmp
call
xchg
pop
outsb
inc
in
mov
mov
sub
dec
sbb
pop
jmp
mov
dec
in
push
dec
call
cld
adc
sbb
outsb
and
mov
mov
incl
xor
add
mov
jg
cltd
int
add
mov
sbb
mov
repz
call
test
cltd
enter
xor
sarb
setns
pop
lahf
jns
es
ror
dec
cmp
mov
mov
cs
fstps
pop
sbb
cli
ljmp
mov
xchg
popf
push
jge
rorl
push
pop
imul
test
xchg
and
scas
or
cmp
arpl
cmovg
sbb
jmp
iret
ficoms
lods
not
mov
push
cmp
or
mov
mov
sbb
inc
jo
lret
aam
xchg
gs
sbb
xchg
dec
xchg
push
mov
push
aad
adc
dec
jl
pop
ror
pop
jge
xchg
test
cmp
lahf
or
dec
xor
fcomps
cs
frstor
fdivr
pop
rolb
jp
adc
popf
ja
adc
inc
push
repnz
adc
aas
out
mov
movsl
jp
mov
fcmovb
cmp
mov
jle
movsb
mov
jecxz
mov
ljmp
pop
pushf
pop
jnp
lahf
out
inc
cs
pushl
dec
cmp
pop
mov
pop
enter
cwtl
cltd
js
adc
shlb
ljmp
dec
js
sbb
pop
ret
dec
maxps
ja
and
push
jl
fs
push
ljmp
mov
add
xor
adc
cltd
sub
jmp
dec
xor
and
inc
mov
loope
mov
xor
fucomp
int3
adc
pop
push
dec
icebp
or
incl
les
mov
xor
jae
rcl
adc
in
push
jmp
adc
jmp
xor
insl
pop
movsb
sub
jb
lds
xor
ljmp
xlat
jp
lret
xor
mov
jle
mov
pop
mov
push
clc
fsub
add
jmp
inc
std
sbb
into
or
fldcw
push
jecxz
or
stc
and
iret
mov
sbb
inc
idiv
incl
adc
loop
mov
cwtl
and
jbe
pushf
push
sub
push
xchg
les
ljmp
dec
js
das
data16
mov
mov
xchg
xchg
add
mov
add
ds
lcall
add
push
loop
adc
sbb
fldl
ds
and
lods
into
rolb
push
pusha
dec
mov
dec
fisubrs
cmc
pop
mov
loop
test
xchg
imul
dec
adc
xchg
popl
push
ja
dec
and
lods
push
hlt
orb
pop
jb
stos
sub
cs
out
cmp
jae
cld
call
sahf
dec
mov
dec
pop
or
stos
xchg
cmp
xchg
and
loopne
dec
push
cwtl
fidivrl
das
dec
cmp
pushf
fs
sbb
xchg
xor
ret
rolb
lahf
mov
mov
neg
inc
roll
sub
mov
dec
push
jg
pushl
xchg
xor
cmp
inc
xor
adcl
incl
sub
jle
or
js
and
push
lods
pop
scas
jp
sti
repz
aaa
call
and
mov
mov
sub
push
xlat
sbbb
hlt
data16
call
cld
mov
ja
cs
rcrb
cmp
push
dec
addb
call
mov
insb
sbb
dec
iret
cmp
test
jl
adc
fmull
scas
cs
call
sub
bound
stos
inc
pop
push
outsl
xor
lds
xor
call
aam
jmp
mov
dec
in
mov
push
jae
fmull
pop
incl
sbb
or
repnz
add
fcoml
sub
call
sbb
push
or
push
add
and
and
jmp
push
sub
add
ret
repz
ljmp
subl
sub
negl
adc
dec
push
imul
pushl
mov
push
imul
addr16
pop
cli
mov
pop
inc
xchg
imul
cmpsb
inc
sbb
inc
pop
int3
fimull
xchg
xlat
pop
push
incl
xlat
pop
xor
push
sbb
push
push
mov
pop
lock
mov
jle
insl
pusha
call
add
dec
int3
andl
and
adc
push
mov
mov
lcall
mov
xchg
out
inc
out
daa
xor
inc
mov
mov
jle
aam
ljmp
sbb
int3
push
cld
mov
and
or
fsubs
lret
lods
lods
adc
dec
lods
js
push
std
call
jp
mov
dec
frstor
leave
std
pop
popa
adc
arpl
call
pop
inc
pop
mov
push
mov
add
into
jne
out
cs
cld
push
es
aam
cwtl
incl
push
sbb
scas
inc
mov
mov
fs
dec
cli
inc
cmp
jnp
cmpsb
loope
jmp
scas
ds
jmp
lahf
sbb
jle
nop
xor
xchg
xor
mov
movsl
jl,pt
add
lret
cmp
mov
rol
fbld
sub
ljmp
pop
jecxz
loopne
ret
and
call
ljmp
fsubs
stos
jmp
enter
rorb
push
pop
test
cli
lods
jg
call
insl
push
sbb
or
outsl
or
test
mov
push
clc
cmpl
jbe
clc
inc
xchg
and
inc
jmp
jnp
add
jg
sti
testl
enter
lea
mov
mov
mov
adc
push
stos
mov
xor
dec
or
into
push
int
lods
jl
mov
jnp
cmp
cmp
dec
dec
test
push
scas
iret
pop
std
pop
mov
xchg
adc
in
je
dec
call
pop
call
and
aas
jle
aad
jo
cmp
dec
leave
inc
push
mov
fisttps
mov
popf
clc
outsb
rol
arpl
sbb
movsb
cmpsb
adc
xorl
inc
sub
icebp
ljmp
jo
movsl
xor
scas
mov
xchg
addr16
in
push
dec
enter
adc
push
imul
call
fcoml
aad
mov
xchg
cwtl
and
ss
mov
out
mov
pushl
or
pusha
sarb
clc
addr16
test
xchg
xor
call
mov
popa
lods
icebp
inc
out
mov
icebp
adc
pop
jl
fs
or
ja
jmp
test
jne
loop
push
jge
sub
or
sbbb
andl
jns
lcall
in
jae
jg
jmp
shlb
dec
sbb
mov
inc
shl
stos
sub
cmp
push
shrb
clc
call
xchg
xchg
jb
mov
mov
xor
scas
imul
jmp
pusha
shl
xchg
mov
sub
pop
cmp
lret
sbb
mov
mov
jmp
pop
inc
insb
test
mov
mov
mov
bsf
fidivrl
out
mov
popa
stos
push
and
out
xlat
jmp
or
adc
out
rcrl
adc
cmp
adc
and
loope
add
das
push
sahf
pushf
test
lcall
in
shrb
add
jno
add
pop
inc
sbb
adc
push
jbe
or
jg
daa
push
xchg
inc
out
shrl
adc
in
unpcklps
decb
sub
jl
pop
adc
cmp
outsl
rorb
pop
xchg
sbb
call
mov
xor
pop
sbb
push
xor
pop
outsb
xchg
cmp
add
ud0
call
pop
jg
or
scas
push
jne
les
imul
mov
pop
stos
jb
lret
fwait
dec
lcall
inc
sub
mov
mov
ror
data16
cmp
jmp
sti
xchg
dec
in
mov
movsb
mov
mov
nop
pop
cld
shll
or
mov
call
mov
stos
xchg
movd
fs
out
adc
hlt
popa
fnsave
lcall
push
out
xor
sbb
shlb
or
push
lods
mov
or
fcomip
mov
lret
pop
dec
push
fstl
movsl
addr16
shr
imul
sbb
jb
mov
adc
or
dec
std
call
loopne
jg
xlat
push
mov
inc
and
or
or
jmp
je
scas
stos
je
or
sbb
push
add
cmp
lods
add
mov
movsl
push
pop
mov
repnz
loopne
leave
dec
cmp
fcomip
jo
and
cmpsb
push
cmp
stos
pop
and
fstpl
fcos
mov
sbb
mov
inc
out
jle
js
sub
adc
decl
sbb
xchg
jge
and
fs
inc
incl
dec
or
sahf
addr16
popf
movl
adc
std
and
xchg
mov
lcall
call
mov
cmpsb
push
sub
pop
movsb
popa
xchg
clc
rolb
bound
in
mov
cmpsl
cmp
fldenv
push
mov
cmp
cld
out
lea
mov
flds
in
inc
push
stos
lock
out
mov
jge
test
sbb
scas
sbb
xchg
inc
adc
jmp
xor
jmp
addr16
js
cltd
push
mov
sub
xchg
lock
xchg
xor
nop
cs
cld
lcall
jbe
pop
das
mov
pop
pop
sbb
popa
sti
mov
lods
jg
mov
add
aaa
xchg
nop
or
jl
insl
xchg
fwait
pop
lahf
xor
xchg
fiadds
incl
and
testb
inc
xor
insb
adc
ss
pushl
pusha
cmp
sub
int3
cld
adc
mov
sub
dec
mov
incl
xchg
test
rolb
ds
call
sarl
sbb
in
xchg
rol
or
xchg
pop
mov
inc
pusha
push
jmp
xchg
pop
lods
popa
jns
mov
pop
jecxz
in
or
add
cli
sbb
xchg
jg
nop
mov
push
mov
imul
add
mov
cli
lds
xlat
and
sbb
cmp
jl
inc
decl
pop
inc
push
cltd
cwtl
ljmp
and
movsl
or
stos
cmpsb
testb
xchg
stos
in
sbbl
fdivrp
lods
mov
lock
mov
cmpb
arpl
xchg
pop
xlat
cs
jecxz
sarb
ljmp
fcompp
sarb
fwait
pop
xchg
or
test
mov
or
xchg
inc
xor
decl
inc
imul
pop
in
cmp
push
fsubrp
push
inc
mov
xor
test
call
out
cmp
adc
push
add
loopne
mov
adc
call
and
push
xor
outsb
inc
into
lret
push
lds
mov
sub
xchg
incl
test
stos
pushl
add
xchg
pop
lock
fldcw
rcll
or
cwtl
shl
mov
ss
loop
loope
jnp
sbb
rol
jl
roll
mov
inc
aad
fnstsw
ret
dec
into
enter
xor
pop
mov
enter
jmp
mov
mov
test
insl
notb
ljmp
lods
repnz
loopne
inc
inc
in
imul
movsl
lods
jecxz
rcll
ss
mov
lock
in
incl
shl
daa
subl
cwtl
lock
jb
test
hlt
xchg
push
call
cld
sub
or
fadds
dec
ret
mov
incl
mov
add
xlat
aad
pop
out
in
jp
push
shl
scas
out
out
mov
ljmp
sti
fmuls
mov
adc
jl
fsubl
pop
clc
cmc
or
pop
dec
inc
and
lret
int
ss
add
lret
cld
pop
icebp
jbe
lcall
sub
insl
jp
fwait
pop
adc
and
push
mov
xor
mov
or
call
push
ds
jp
mov
sti
leave
rcl
in
cmpsl
aaa
inc
scas
or
addr16
in
or
pop
or
shll
xor
dec
iret
push
xor
sbb
jbe
sub
push
decl
add
repnz
pop
push
cmc
mov
lds
pushf
outsb
push
add
xor
lcall
mov
xlat
cmp
imul
add
jg
or
popf
in
inc
sti
push
push
xchg
mov
fmul
jb
sbb
mov
push
cmp
incl
push
loop
pop
lea
cmp
test
and
fs
decl
cmc
cmpsl
jp
add
ret
sub
jb
mov
jge
loope
xlat
divl
inc
jmp
ljmp
adc
das
and
jno
pop
ljmp
jno
insb
sti
mov
dec
repnz
dec
xchg
push
xor
rclb
inc
ja
or
mov
inc
dec
cld
dec
jae
lds
sub
mov
js
js
cs
cmp
and
push
inc
pop
add
hlt
pop
loopne
jne
icebp
cltd
js
jecxz
jmp
adc
xor
lods
or
adc
adc
lds
or
out
cmc
test
jmp
pop
testb
jmp
stc
mov
gs
inc
outsl
lret
lock
outsl
clc
decl
push
add
dec
fnstenv
out
loopne
popf
xchg
jno
lcall
xchg
pop
jnp
cmpsb
or
jbe
aaa
test
sub
popa
cld
ret
adcl
jg
sub
ja
cltd
pshufw
repz
dec
push
xor
push
ljmp
dec
xchg
cmp
sahf
dec
ficoms
aam
mov
das
cld
out
sbb
adc
jmp
sbb
aam
icebp
push
mov
andb
out
jmp
nop
push
mov
mov
ret
mov
inc
loope
lahf
mov
cmc
mov
dec
mov
mov
cli
dec
mov
divl
add
ror
aam
cmp
jns
adc
mov
adc
adc
lds
cltd
fidivl
inc
arpl
ljmp
lcall
aas
dec
sbb
mov
sub
inc
lods
pop
mov
iret
sbb
cmp
jmp
aad
xchg
lcall
adc
jno
inc
ret
or
cmp
xchg
das
push
dec
cmp
pop
cmp
push
sub
jae
adc
sarl
adc
push
out
in
fistl
sbb
sub
or
int
jb
xor
mov
jg
call
or
and
mov
mov
in
ljmp
cmp
jno
cmpsb
pushl
jge
popa
mov
insl
out
push
inc
adc
out
data16
repnz
xchg
inc
sub
cmpsb
iret
adc
mov
mov
ljmp
cmp
sub
js
scas
mov
mov
mov
fisttps
jecxz
imul
xchg
dec
add
xchg
divl
xor
add
mov
add
jmp
mov
lods
push
mov
xchg
xchg
aam
pop
add
jbe
fistpll
cs
xchg
popf
sti
jo
or
mov
std
lcall
rcll
jg
mov
push
movb
pop
adc
sti
pop
or
testl
cld
ja
in
add
mov
and
fdiv
mov
testb
test
testl
and
or
pop
shrb
and
decl
sub
adc
push
xchg
mov
dec
xchg
cmp
inc
ret
ficoms
mov
out
lock
stos
pushf
xchg
push
and
xor
mov
mov
decl
pushl
push
shl
jge
pop
cld
shlb
mov
ds
and
jg
mov
inc
mov
fbstp
sti
add
sbb
pop
into
sbb
call
sbb
iret
gs
xor
popf
out
dec
xchg
scas
popf
test
lret
inc
xchg
add
sbb
add
hlt
mov
or
in
stos
jecxz
dec
sbbb
xor
in
push
cmp
cmp
iret
loope
xor
into
mov
movsb
scas
cltd
push
mov
add
fsubrl
pop
in
mov
fwait
jge
add
inc
mov
fwait
dec
xchg
test
cmc
add
or
inc
xchg
fstps
lahf
or
jno
mov
ljmp
push
add
lret
in
push
fistpl
fsubs
mov
enter
jmp
pop
ljmp
jl
inc
sub
or
adc
sbb
loopne
xor
incl
pop
push
or
lock
stos
add
pop
push
sub
pusha
mov
mov
repz
add
sbb
fisttpll
push
test
popf
pop
out
inc
in
dec
jo
or
mov
cmp
cmp
test
fldenv
mov
incl
cld
lcall
aam
inc
into
ss
into
out
pop
mov
adc
hlt
adc
into
fwait
lcall
mov
test
rcrb
sahf
cmpsb
aad
xchg
test
in
jge
mov
hlt
decl
xchg
pushf
clc
pop
mov
negb
loop
mov
mov
jp
xchg
inc
mov
movsb
std
jp
push
sub
mov
pop
pop
cli
mov
jecxz
jnp
jmp
jns
ret
dec
test
mov
fbstp
arpl
xchg
cld
sbbl
or
mov
call
pop
subl
out
pslld
adc
repz
int
mov
test
pop
jmp
ljmp
add
fstp
stos
mov
mov
adc
mov
lret
int3
inc
fisttpll
mov
mov
decl
daa
clc
mov
decb
inc
push
lret
and
bound
icebp
lcall
inc
fs
or
and
jmp
xchg
adc
int3
cmp
leave
ret
mov
cmp
sti
jg
leave
xor
dec
lock
add
jo
lcall
lret
and
lods
dec
rorl
push
lea
js
out
dec
add
mov
fwait
adc
mov
add
lds
movsl
lock
rol
pop
cld
insb
pop
dec
adcb
mov
out
mov
aaa
sbb
push
sti
cmp
mov
mov
mov
push
pop
xor
outsb
cmp
mov
jb
sub
jmp
sub
fldenv
xchg
int3
lret
ficoml
xchg
dec
xchg
stos
fidivrs
jl
call
ljmp
lahf
pop
bound
roll
repnz
icebp
fdivs
xchg
xor
scas
cli
psrld
test
push
pop
js
push
push
rorl
cwtl
sbb
jmp
sub
cwtl
cmpsb
dec
lods
ret
scas
or
or
inc
adc
cmpsb
mov
in
out
or
fxch
fimull
out
int
popf
mov
push
lret
sub
sub
or
mov
mov
cmp
sbb
dec
or
and
shrl
cli
enter
in
daa
mov
push
cmpsb
nop
lcall
pop
ja
sub
jbe
lcall
cmp
xor
insl
sbb
ljmp
inc
push
sub
les
xchg
daa
xor
ud1
shll
jmp
cmp
cmp
sub
andl
icebp
insb
lock
imul
fcompl
call
cmp
inc
jp
or
jns
xor
jnp
scas
mov
ds
and
jg
fs
mov
scas
mov
adc
push
dec
sbb
mov
stos
adc
and
mov
into
xchg
fcmovb
xor
sub
sub
sbb
int
call
or
ret
mull
jmp
test
mov
in
adc
pop
pushl
into
arpl
mov
mov
inc
dec
mov
in
xchg
into
push
cmpsl
sti
inc
ret
data16
jecxz
ljmp
xchg
push
xor
aam
sub
jb
push
sub
movsb
mov
adc
xchg
daa
mov
and
and
ljmp
dec
aaa
push
bound
not
lahf
xchg
arpl
pop
popl
test
ljmp
jb
out
insb
mov
testl
aas
xor
sub
sahf
mov
add
lods
cld
sahf
and
adc
push
sti
mov
fmul
insb
mov
aas
cmp
jb
mov
pop
insb
insl
xlat
cli
sbb
call
mov
pop
pop
add
xchg
shlb
push
div
xchg
in
mov
and
ljmp
sbb
mov
xor
dec
mov
xor
push
mov
scas
les
pop
call
jg
and
mov
addr16
mov
adc
mov
mov
add
int
dec
push
roll
cmpsb
movsl
adc
mov
test
rolb
push
lcall
cmp
jmp
xchg
daa
dec
aas
pushf
inc
push
cld
call
and
out
mov
pop
cmpsl
xor
mov
dec
scas
fmuls
repz
pop
fwait
cs
xchg
dec
call
dec
xor
js
mov
or
mov
insb
xor
mov
push
push
push
call
fnstsw
das
stos
cmp
sbb
mov
xchg
enter
sbb
xor
arpl
dec
stos
js
jl
frstor
lcall
or
mov
and
pop
cmp
jno
jp
jmp
push
enter
inc
cmp
pop
jecxz
les
mov
mov
push
xor
or
sub
mov
lds
icebp
repz
hlt
sub
out
jp
dec
cwtl
nop
jo
sub
xchg
aam
test
push
repnz
mov
sub
lcall
decl
test
cmp
fnsave
cmc
sbb
mov
lret
adc
pop
xchg
arpl
popa
mov
pop
call
inc
push
scas
mov
push
in
sahf
mov
push
das
fwait
stc
insl
test
daa
mov
xchg
imul
jns
sti
mov
or
add
xlat
clc
incl
mov
div
mov
out
mov
jns
mov
push
ss
add
jp
or
test
mov
mov
or
or
aad
mov
sarb
mov
adc
fs
inc
lahf
lcall
out
push
pop
mov
fcompl
jg
xor
in
cmp
and
into
jns
cmp
stos
add
mov
mov
cmp
add
push
and
jb
and
sub
filds
test
es
decl
mov
in
clc
outsb
push
xchg
rcr
dec
xchg
js
push
ss
mov
adc
pop
mov
ljmp
xor
out
xor
push
adc
jl
mov
xlat
stos
xor
sub
insl
arpl
fidivrl
push
adc
cmc
inc
and
sti
pushfw
inc
pop
pusha
pop
popf
stos
ljmp
pop
hlt
pushl
and
sbbl
cwtl
dec
test
rep
das
add
dec
add
inc
lods
mov
imul
jp
xorb
scas
jmp
jmp
and
loopne
sti
mov
popf
imul
add
jecxz
fbld
addr16
or
cmp
call
cmp
jnp
add
int3
fstl
jbe
push
adc
mov
incl
sbb
lcall
mov
scas
arpl
cmc
cmp
push
jns
out
push
fimull
inc
sbb
sbb
adc
push
inc
cli
jo
pop
adc
enter
decl
jno
jb
inc
adc
add
je
lods
add
test
push
jecxz
mov
popa
arpl
add
push
mov
bound
pop
sarb
cli
xchg
fimull
das
and
jmp
xchg
mov
pop
lea
bound
jmp
int3
add
outsb
mov
pop
out
sub
mov
ret
inc
inc
xchg
nop
mov
jmp
xchg
mov
fiadds
mov
js
test
leave
ret
jmp
push
adc
movsl
push
aad
cmpsl
mov
daa
rol
jbe
lcall
cmp
pusha
enter
out
clc
imul
adc
pop
stos
cmc
pop
repz
cmp
or
jge
decl
cltd
lahf
adc
cwtl
inc
dec
addr16
mov
daa
ljmp
lods
xchg
cmp
decl
lret
cmpsl
ret
stos
lret
mov
insl
stc
xor
jg
add
sbb
push
push
cli
enter
jmp
xchg
hlt
xor
cmp
jmp
cltd
inc
loope
cs
into
ret
or
movb
popf
xor
inc
into
cs
call
jo
inc
outsl
js
mov
out
jne
cwtl
mov
ds
std
mov
adc
lcall
call
xor
loop
or
fcoms
or
ret
je
jbe
mov
decl
or
sub
int3
mov
fidivrs
lret
sub
adc
dec
inc
in
call
ljmp
push
mov
push
cmpsl
leave
adc
jbe
sub
cmp
xchg
out
inc
aam
xor
hlt
adc
lock
jmp
loope
daa
leave
sbb
sub
adc
test
loopne
decl
jle
in
mov
mov
jge
push
mov
and
div
mov
adc
aam
cmp
pushl
mov
pop
popa
xchg
xlat
pop
mov
mov
mov
dec
mov
mov
fdivr
add
mov
xchg
xlat
lods
fs
cmp
scas
jb
fildll
loop
mov
jbe
fbld
cwtl
xchg
lcall
in
call
jae
sysret
stos
xchg
pop
or
push
pop
aas
pop
subb
addl
inc
iret
cli
scas
and
push
mov
inc
sbb
xor
xchg
mov
jg
jmp
aas
cmpb
stos
lahf
popa
adc
nop
and
jmp
mov
xlat
cmp
or
add
das
clc
jne
subb
cmp
inc
dec
fwait
xchg
add
or
cli
decl
mov
jp
cmpsl
xchg
mov
dec
or
push
xor
je
and
xor
leave
fadd
ljmp
mov
jp
cmp
jl
dec
cs
mov
clc
add
pop
push
cs
call
xlat
dec
mov
cmp
xchg
je
pushl
mov
aas
in
ret
hlt
aad
popa
dec
mov
ds
cmp
sbb
aad
push
xchg
dec
push
inc
and
cld
incl
stc
sti
sbb
sub
cli
adc
lock
dec
out
cmpsb
mov
call
pop
into
mov
in
jae
xchg
icebp
decl
loopne
shlb
out
sub
stos
movsl
mov
or
inc
lret
jnp
ljmp
lahf
sahf
in
push
and
sbb
lret
mov
cli
arpl
incl
mov
cmp
mov
stos
arpl
iret
or
cmpsb
xor
aam
orl
push
fisttpll
dec
pop
in
cmc
movsl
stos
sahf
pop
pop
and
jl
test
faddp
mov
xchg
sbb
jg
pop
push
adc
leavew
imul
into
mov
out
call
test
lods
mov
mov
lods
scas
lea
sbb
push
mov
leave
je
jmp
nop
adc
lret
lock
or
popa
pop
les
inc
fxch
xchg
xor
dec
xchg
dec
ljmp
and
shll
fs
insl
cmp
mov
lds
sbb
decl
mov
in
push
or
fsubrs
dec
mov
mov
and
mov
mov
xor
add
ds
enter
push
inc
mov
pushl
mov
or
inc
add
xor
std
int
scas
ja
pop
xchg
ljmp
cmp
xchg
or
pusha
insb
pop
decl
cmp
pop
cmpl
repz
sbb
mov
and
jp
pusha
inc
addr16
push
mov
xchg
sbb
out
dec
bound
dec
jb
scas
lret
inc
sbb
sbb
fcomip
ljmp
insl
orb
mov
mov
popf
jns
adc
adc
loop
pop
push
jo
fcomip
jo
push
adc
inc
mov
je
les
inc
mov
adc
sbb
out
pop
mov
addr16
fstpl
outsb
mov
sub
cmp
aad
lcall
add
int
in
push
xor
daa
sbb
adc
shll
scas
jg
je
pushl
add
nop
push
bound
sbb
or
lock
cld
decl
pop
lcall
imul
das
nop
and
clc
mov
mov
jmp
bound
ret
lret
int3
test
addr16
sbb
stos
pop
pushf
sti
or
incl
ljmp
leave
add
stos
add
loopne
fcmovb
jge
popf
add
ds
popf
aas
inc
mov
cltd
sbb
int
push
push
adc
test
inc
aas
lea
imul
or
mov
leave
inc
add
lcall
aaa
mov
lahf
fwait
sbb
push
push
dec
dec
aas
cs
mov
jmp
out
outsl
ret
cmp
push
test
sbb
loope
cli
ljmp
mov
pop
popa
add
icebp
xlat
jo
jno
xor
orl
mov
int3
jge
ss
pop
sub
int
mov
mov
stc
xchg
mov
inc
sub
test
out
dec
push
pushl
dec
clc
sbb
mov
jle
add
stos
mov
call
mov
push
in
cmp
pop
inc
xchg
adc
lcall
mov
lcall
out
adc
out
scas
mov
test
call
lahf
cltd
insb
xorl
fbstp
jo
fsubr
lret
mov
test
pop
negl
push
es
xchg
inc
outsb
push
daa
bound
inc
incl
call
in
out
sbb
das
scas
imul
pop
jmp
dec
cmp
adc
shll
xor
sbbl
incl
fidivrs
cwtl
sbb
push
daa
data16
pop
pop
mov
jle
cmp
jmp
movsl
bound
test
jecxz
movsb
fwait
shll
and
cmp
cmp
lret
mov
sub
adc
dec
jl
arpl
jo
cli
adc
insl
push
cwtl
iret
dec
rorb
ljmp
icebp
cmp
xchg
rclb
jmp
xchg
jp
jae
mov
ljmp
icebp
adc
cwtl
nop
dec
icebp
dec
xchg
imul
push
dec
movsl
add
sub
cli
jg
adc
into
lods
pop
lock
sbb
and
gs
and
call
std
outsl
sbb
hlt
sbb
div
stos
xchg
fstp
fs
xor
cmc
xor
test
lcall
or
aad
sub
mov
and
xlat
sbb
inc
adc
jbe
jmp
pop
iret
ss
insb
je
sub
imul
push
dec
xor
push
jl
mov
ljmp
xchg
dec
repnz
dec
loopne
in
loopne
lret
mov
push
call
fiaddl
cwtl
repz
fisttpl
shlb
lea
iret
mov
lcall
sbb
sbb
mov
out
movsl
mov
xchg
xchg
cmp
je
mov
shlb
dec
cmp
push
cmc
xor
sahf
mov
adc
or
decl
pop
adc
das
adc
xor
dec
and
gs
decl
cs
push
cmp
pusha
data16
es
pop
push
sub
rcr
cmp
push
lcall
mov
mov
out
fisttpl
cld
ljmp
cmp
in
push
fwait
outsb
lods
movsb
out
or
popa
mov
mov
push
daa
sub
mov
mov
jge
jno
adc
or
xchg
lahf
dec
mov
pushl
fdiv
scas
int
dec
cli
jg
fisubl
mov
mov
cmp
ljmp
pushl
xor
xor
out
les
stos
aas
dec
test
insb
jne
inc
not
mov
jmp
add
idivb
adc
sahf
xchg
cmp
movb
pushl
js
xchg
add
clc
pop
js
xorb
leave
mov
aad
jae
ljmp
idivl
stos
pop
aam
test
jbe
sub
bound
xor
stos
pop
pop
adc
decl
insb
xor
loope
test
mov
or
ret
push
filds
icebp
jno
mov
adc
xchg
jmp
aaa
mov
je
in
stc
adcb
pop
xchg
jmp
xor
jp
addr16
incl
mov
stc
xor
push
add
mov
xor
iret
fs
add
ljmp
mov
mov
mov
push
lcall
lods
in
and
jmp
arpl
push
mov
adc
push
mov
lret
xchg
movsb
jb
pop
pop
push
sti
jg
push
dec
or
decl
sbb
push
xorb
push
imul
cmpsb
lahf
iret
xchg
decl
sub
loopne
fistps
into
rcl
cmp
mov
jne
stc
pop
dec
mov
ljmp
test
lret
leave
push
jg
lea
rorb
xchg
das
push
pop
add
lret
dec
call
xorb
arpl
jo
shlb
inc
popf
push
cmp
jle
adc
call
jns
and
dec
nop
faddl
dec
push
pushf
cwtl
pusha
mov
push
inc
inc
sbbb
jno
push
xchg
xchg
stos
pop
and
mov
cmc
shll
test
clc
xor
inc
lahf
dec
cmp
popl
popa
scas
xchg
in
jmp
jne
clc
mulb
push
cmc
or
sbb
fwait
mov
jge
in
pop
cmp
cmp
cmp
idiv
incl
cmp
dec
ror
mov
fstp
cmc
lods
push
cmc
sahf
dec
push
test
cld
jno
aaa
mov
dec
fisubrs
idivb
pop
jae
stc
ja
cs
jg
movsb
fs
sub
inc
loope
mov
inc
inc
and
xor
cwtl
fsubl
xchg
loope
and
incl
ret
jecxz
xor
xchg
sbb
movsb
xor
cmp
ja
xchg
sub
aam
lcall
xor
imul
aam
push
sub
clc
insl
dec
aas
gs
adc
jb
adcb
sub
cmp
jne
mov
sub
call
ds
rcll
ret
push
jno
cmc
jmp
out
inc
popa
inc
push
inc
mov
std
std
or
sbb
mov
int
insb
or
out
call
jecxz
fwait
sbb
lcall
stos
xchg
mov
push
and
call
lea
mov
push
jl
test
and
sub
shll
decl
push
fsubs
jge
mov
dec
mov
or
inc
mov
clc
shrb
jmp
dec
and
lea
add
pop
in
ds
mov
and
jmp
mov
add
inc
cli
xchg
aas
xchg
ja
mov
jmp
imul
sub
sbb
rolb
cld
adc
jp
lcall
add
pop
adc
movsb
out
lods
xor
popa
mov
incl
outsl
daa
and
fisttps
fildl
sbb
in
or
xor
data16
jmp
pushf
ja
ss
aaa
mov
dec
sbbl
lahf
prefetchwt1
negb
jge
dec
xchg
pop
aam
lcall
jne
sbb
dec
adc
fidivl
sbb
test
jmp
jae
aas
push
push
and
pop
mov
test
push
nop
xchg
stos
aam
std
nop
int
jg
xor
test
bound
enter
loope
fadds
jle
push
xchg
sbb
test
inc
cmp
xor
call
push
leave
ljmp
mov
testl
popa
insl
pusha
pop
insb
jle
mov
incl
mov
loop
mov
inc
aad
icebp
daa
mov
outsl
mov
shl
fistpl
call
call
jge
popa
es
lret
out
sbb
adc
mov
adc
mov
data16
decl
lcall
push
cwtl
andl
jle
fdivrl
mov
lock
ud0
lcall
jp
sbb
xor
xor
ret
popf
push
in
lret
push
shr
ljmp
test
cmp
xor
pop
sbb
les
cmp
test
sub
push
out
xor
stos
adc
cmc
push
sbb
ja
push
pushl
sub
pop
icebp
sahf
popl
sub
js
leave
add
cld
mov
pop
test
ja
ret
cmp
xor
mov
sahf
addb
clc
pushl
bound
cmp
adc
cmpsl
dec
sbb
jae
xlat
mov
inc
scas
add
jecxz
icebp
xchg
iret
loope
lret
sbb
cmp
or
or
push
lods
xor
or
and
ljmp
insb
mov
arpl
cmp
jmp
push
jp
inc
loope
in
add
xor
xlat
enter
and
mov
movsl
cmp
mov
rcll
rorb
xchg
lea
pop
subl
jg
je
movsb
enter
xor
sub
mov
outsl
pop
nop
mov
clc
imul
dec
lock
xchg
jae
fisubrl
pop
xor
mov
es
sbb
pop
call
jae
push
mov
ljmp
add
cmpsl
rclb
mov
notl
int3
add
mov
add
stc
rcr
xlat
dec
flds
leave
lods
je
lods
nop
cmpsb
lock
incl
xorl
sub
mov
jmp
andl
jecxz
fstps
xchg
lcall
mov
sbb
push
dec
push
in
sub
incl
push
test
xor
xchg
xor
fnstcw
cmp
dec
mov
imul
js
stos
outsl
cmp
push
pop
shrl
mov
ret
jle
sbb
mov
js
loop
pop
call
mov
orl
cmp
out
push
mov
xchg
cltd
jmp
imul
mov
jmp
push
jle
lea
fists
neg
cmpsl
shl
lods
dec
imul
sub
cmp
out
inc
aaa
xlat
ja
fcomps
xor
mov
inc
popf
in
ffree
ffreep
bound
xchg
inc
jp
cmp
out
xlat
stos
xchg
mov
mov
dec
dec
or
dec
lds
inc
das
test
shlb
push
sbb
or
pushf
inc
gs
sahf
fucomip
mov
adc
movsb
or
cltd
push
fwait
add
inc
xchg
imul
cltd
push
jmp
test
inc
xor
stos
out
push
cmpsl
mov
mov
mov
loope
or
shrl
in
test
jl
testb
orl
mov
ljmp
clc
sbb
mov
sbb
lock
jmp
pop
xchg
cs
dec
sub
pop
jg
sub
cmp
clc
push
ret
fimuls
sbb
jnp
push
mov
lret
out
cmpsl
inc
and
dec
icebp
jmp
mov
int3
stos
or
lods
inc
iret
shrl
call
pushl
es
popf
ds
push
sbb
stos
ja
shrl
ficomps
pop
push
insb
mov
clc
ljmp
inc
dec
jle
sbb
pop
les
lcall
adc
decl
mov
and
rolb
aas
iret
stos
cmp
out
dec
cwtl
xchg
xchg
xor
sub
jnp
jecxz
pop
mov
jmp
decb
call
ret
pushl
ror
fistps
inc
add
sarl
out
dec
movsl
push
adc
jo
icebp
and
xchg
pop
outsb
and
inc
mov
scas
or
mov
dec
insb
and
fisttps
fidivrs
lret
dec
ja
pusha
sbb
lcall
push
fisttps
sarl
mov
daa
mov
lea
lds
std
scas
data16
xchg
cmpl
or
xchg
addr16
ljmp
mov
jmp
jle
add
repnz
out
fadds
jecxz
sbb
jnp
sbb
xlat
xor
pop
add
and
mov
stos
pusha
cs
adcb
fadds
or
lea
outsb
lcall
push
cmp
incl
icebp
divb
outsl
sub
popa
push
aam
add
out
rorb
push
out
loope
adc
add
pushl
addl
test
sbb
pop
mov
jno
call
loopne
arpl
and
scas
adc
addl
or
jle
mov
mov
sub
push
pop
lock
sub
ljmp
jmp
mov
dec
sbb
in
sbb
addr16
es
in
pop
or
arpl
push
test
out
test
loope
jmp
fxch
xor
adc
mov
mov
mov
clc
push
pop
cmp
lcall
insb
push
aaa
hlt
outsb
fldt
mov
aas
fcomip
mov
cltd
call
movsl
or
or
es
jns
sub
idivl
test
xor
jne
mov
enter
mov
dec
pop
pop
clc
cltd
xor
lret
push
cmp
pop
inc
or
jns
imul
mov
xchg
arpl
inc
aaa
ja
mov
repz
mov
fisttps
call
dec
xchg
jl
enter
jmp
leave
ja
lret
leave
xor
sub
js
sbb
mov
es
adcb
fs
ja
push
fld
inc
scas
mov
cld
fcomip
lcall
add
aad
cwtl
fsubrp
sbb
xor
sbb
test
or
scas
std
call
xorb
pop
cmp
or
xchg
and
rclb
cmp
dec
test
lcall
add
aam
lahf
dec
out
lock
cli
pusha
or
fadds
jmp
stc
and
or
mov
mov
pshufw
inc
stos
les
mov
pushl
sub
sbb
pop
sub
xor
arpl
enter
push
sahf
sub
std
cld
int
int3
cmp
daa
shll
cmp
test
call
xor
clc
incb
dec
cmpsb
push
iret
loopne
ljmp
xchg
sahf
or
mov
call
jmp
jmp
stos
lods
mov
aam
dec
in
icebp
cmp
pop
cmpsb
dec
std
push
and
nop
into
dec
xor
xchg
lahf
aad
cmp
movsl
fiadds
and
pushl
mov
aam
sub
test
xchg
fidivs
or
dec
mov
jmp
jge
hlt
mov
cwtl
pusha
sbb
mov
cmp
jno
add
push
ljmp
loopne
mov
sahf
repz
sub
mov
loop
or
push
sbb
push
xlat
fnstenv
in
and
cmp
jge
outsl
bound
jbe
xchg
jg
fcomip
pop
or
xchg
pop
ljmp
dec
push
dec
data16
sbb
in
sti
call
lahf
shlb
add
lahf
jo
lret
jb
loopne
dec
jmp
adc
jno
add
or
ljmp
jb
out
popf
xor
sub
xchg
pop
je
and
lcall
setbe
xor
xchg
push
lcall
lcall
jmp
clc
dec
pushl
in
lock
add
fidivl
out
xchg
jecxz
inc
data16
shll
popa
dec
add
pop
imul
dec
cmc
call
mov
sti
cmp
inc
jno
or
test
mov
cld
jp
mov
sahf
std
enter
jecxz
xchg
jmp
fs
outsl
xor
incl
push
jp
and
mov
push
repz
adc
mov
in
ljmpw
popa
loop
imul
dec
cld
sbb
mov
mov
pop
xchg
fiaddl
pop
call
push
xchg
lock
dec
lcall
jnp
mov
fnstcw
movlps
sarb
out
lcall
pushf
pop
in
inc
lret
jmp
dec
sbb
sarb
testl
and
stc
xor
lahf
sbb
adc
aad
aas
lret
cmp
outsl
jae
aam
pop
popf
push
adc
mov
je
pushl
pop
xorl
cmp
add
in
cmp
sub
or
adc
fstpt
lds
mov
fucomip
mov
pop
and
jo
push
sbb
mov
aaa
sar
jg
arpl
jp
das
lahf
in
fildll
popf
mov
andb
pushl
sbb
xor
cwtl
sbb
add
ficoms
dec
adc
les
push
push
mov
ljmp
adc
mov
and
pushf
ficompl
jae
add
jl
icebp
jl
or
push
dec
push
mov
clc
push
enter
or
imul
sbb
rcrb
pushl
outsb
jmp
aad
loop
inc
mov
cld
fcomps
adcb
call
std
jnp
rorl
xchg
jl
add
cmp
lods
lcall
int3
mov
and
mov
jl
or
popf
call
cld
push
out
decb
ficompl
jnp
mov
cmpsl
inc
movsl
mov
es
js
fistpl
inc
shll
inc
popf
inc
push
call
mov
dec
mov
daa
out
loopne
pushl
jle
cmp
call
jno
or
inc
dec
mov
call
sub
jno
sbb
adc
les
cmpsb
mov
push
sub
pushl
jbe
add
in
adc
subb
sub
ret
jmp
addb
or
shrb
xorb
dec
cmp
scas
adc
aam
mov
push
outsl
pop
inc
arpl
jbe
sub
call
roll
in
enter
insb
bts
pop
mov
jnp
adc
xchg
sti
call
leave
insl
sub
jg
fmuls
sbb
repz
mov
sub
jecxz
jmp
push
jo
mov
outsb
lahf
loop
insl
out
in
aam
mov
pop
jg
pop
dec
push
lcall
call
ja
or
cmpsl
dec
pop
out
dec
test
mov
popf
sahf
xchg
sub
incl
cmpsb
or
scas
pushf
cld
or
std
and
es
nop
sub
test
lcall
js
add
or
cli
fwait
mov
push
pop
cmp
cs
add
mov
cmpb
mov
lock
incl
cmp
mov
mov
lea
jmp
add
push
sub
inc
push
push
shlb
outsb
in
test
adc
mov
add
xor
pop
xor
loopne
cmp
out
movsb
pop
mov
cmp
mov
sarb
out
sub
sbb
lds
jb
aaa
cmp
imul
shrl
dec
push
lock
ret
xchg
push
lret
cltd
fs
xchg
mov
push
jl
dec
incl
negb
cmpsb
loopne
test
xor
out
cmp
or
push
xchg
outsb
pop
outsb
jmp
xor
sbb
clc
sbb
or
lea
push
dec
mov
cld
pushl
xlat
in
andb
cmp
int3
pop
push
imul
stos
cli
ljmp
cmpsb
cli
repnz
sbb
or
out
mov
mov
mov
je
cmpsl
push
dec
jno
add
add
push
jnp
jmp
pop
mov
xor
ljmp
out
pop
xlat
lcall
aaa
push
cmp
movsb
pop
xchg
pop
lret
iret
inc
lret
test
je
mov
cmpsb
ljmp
clc
decl
outsb
jb
inc
jb
cmp
sete
mov
mov
mov
or
jmp
and
testl
xchg
repz
ja
ljmp
pop
lods
ss
pop
xor
push
dec
in
mov
cltd
call
clc
out
std
push
pop
in
push
cmp
gs
push
insl
add
sarl
add
lret
xchg
xlat
scas
roll
pop
adc
popl
cmp
scas
inc
jno
mov
fstpl
test
pop
add
sbb
push
ss
and
pop
lock
sbb
cmp
mov
sahf
push
adc
add
ljmp
cld
mov
push
mov
or
mov
push
stos
insb
mov
inc
enter
call
imul
jnp
xchg
push
xor
daa
test
cmpsl
mov
aad
insl
sub
clc
xor
jmp
cmp
inc
test
lcall
daa
mov
pop
lods
mov
outsb
incl
loopne
mov
push
iret
xor
sbbb
sti
roll
mov
imulb
cs
inc
aam
jnp
xchg
in
imul
sbb
int
cmp
mov
add
lcall
push
jno
sub
mov
or
xor
xchg
mov
pop
ljmp
xor
orb
in
dec
test
lret
adc
test
call
out
mov
adc
addl
mov
popa
repnz
fistps
cmp
mov
pushf
or
sub
xchg
cmp
inc
and
ljmp
mov
inc
cwtl
pop
out
das
cli
cld
notb
and
sub
rcll
inc
inc
cmp
into
incl
jge
mov
test
cwtl
dec
lret
xchg
mov
call
adc
mov
das
stc
cmp
hlt
sbb
pop
imul
imul
mov
es
popa
pop
xor
shll
or
fcmovne
push
push
sub
decl
cmp
push
sub
dec
jns
cmp
sbb
int3
sti
addr16
cmpsb
imul
sbb
xchg
jle
mov
jg
fldt
int3
negl
scas
daa
push
ds
jmp
into
push
xchg
pop
nop
fistpll
push
push
and
sub
pop
push
int3
and
dec
dec
je
leave
add
or
push
xor
mov
in
fdivr
lcall
std
lret
jbe
ss
sbb
aam
jecxz
call
sbb
mov
cmp
mov
mov
inc
aaa
insb
pop
inc
sarb
adcl
or
fildl
das
and
sbb
adc
stc
bound
pop
jmp
jb
call
gs
andl
stos
push
out
inc
repnz
xchg
les
jmp
cmp
inc
dec
hlt
movsl
mov
je
mov
sub
test
insb
stos
cwtl
arpl
sbb
incl
xchg
xchg
movsl
jp
bound
repz
je
data16
lods
popa
inc
inc
pop
inc
out
in
pushl
fdivrl
and
mov
loop
je
dec
push
xlat
ljmpw
clc
cmp
xchg
cltd
inc
cmpsb
mov
arpl
lcall
cld
dec
repnz
andl
inc
aam
xchg
std
dec
xchg
cli
mov
push
ret
inc
sub
mov
and
or
mov
push
xorb
dec
out
pop
and
mov
or
leave
aas
push
and
xor
and
scas
movsl
movsl
int3
mov
imul
xchg
out
sbb
cmp
mov
mov
lcall
mov
lock
push
lods
or
add
cmpsb
ss
fcomip
ljmp
mov
jg
xorl
loopne
test
decl
decb
pop
icebp
xlat
xchg
stos
mov
xchg
adc
in
ljmp
adc
mov
xchg
jae
loope
nop
lods
dec
mov
push
and
loopne
js
jl
daa
xchg
int3
rorl
scas
clc
clc
call
shl
mov
int
pop
inc
sub
xchg
pop
mov
mov
les
and
mov
and
ficoml
ljmp
lcall
jg
dec
jae
xlat
and
leave
inc
dec
mov
incl
adc
insb
or
aaa
sahf
int
cmp
stos
int
xlat
inc
mov
fimull
call
add
rcl
inc
lock
sub
cld
jg
add
outsl
xor
pop
inc
cmp
and
fwait
dec
in
inc
pop
iret
push
lods
fidivs
pushl
iret
loopne
pop
pop
in
rcll
popa
push
cmp
lods
test
or
lcall
pop
sub
aaa
test
mov
sti
mov
pushf
jp
cmp
adc
mov
mov
sbb
mov
or
pop
imul
lea
incl
rcrl
dec
and
mov
adc
leave
cwtl
test
pusha
aas
xlat
jnp
int
jmp
jns
mov
std
sbb
cwtl
jae
sahf
pop
aaa
das
xor
popf
xchg
hlt
fwait
and
pop
aas
add
sbb
push
push
jae
mov
pop
pop
mov
dec
test
sub
sbb
push
cmp
push
adc
xor
inc
ds
sbb
incb
jmp
lods
inc
fwait
jmp
ds
xchg
or
stc
in
out
inc
inc
scas
xor
in
sub
scas
pusha
popf
or
dec
jle
fmull
popa
jne
incl
mov
dec
fs
out
xlat
dec
stos
mov
xorb
dec
mov
lcall
xchg
movsl
lahf
push
fmull
mov
mov
out
or
mov
and
orl
mov
pop
insl
mov
aaa
xlat
outsb
hlt
jmp
xor
adc
lods
adc
xchg
addr16
sarb
imul
and
lock
imul
das
sub
dec
inc
pop
arpl
dec
or
incl
cmp
in
jo
xchg
add
xchg
xchg
sbb
push
ret
and
movsl
and
jg
ret
xchg
xchg
jns
test
jnp
push
fcmovnb
aas
and
jmp
sub
imul
push
movsl
xor
orl
pop
adc
sub
sahf
into
cmp
subl
imul
push
mov
dec
loopne
push
ljmp
jmp
pusha
sub
push
in
dec
mov
xlat
cmpl
or
sbbl
loopne
inc
inc
cld
pop
push
hlt
dec
test
push
leave
inc
hlt
out
sbb
dec
jg
mov
mov
mov
pop
push
xchg
xlat
les
loopne
aaa
nop
sbb
decl
xor
pusha
fs
push
inc
iret
jmp
add
lcall
fst
ffreep
shrb
jg
mov
or
imul
repz
decl
insb
pop
clc
nop
frstor
xor
and
add
mov
test
cmp
dec
aam
inc
dec
pop
ret
or
or
push
jp
push
or
jp
inc
dec
aaa
jo
fbstp
lahf
int3
lcall
cli
aad
xor
daa
repnz
jl
in
xchg
mov
jae
mov
pushl
cmpsb
jbe
leave
mov
daa
jbe
insl
or
push
test
inc
mov
lcall
lock
xchg
pop
xor
cmp
insl
lock
mov
or
sub
cmp
ficompl
incl
mov
lcall
xor
adc
fincstp
jg
adc
mov
rclb
pop
popf
mov
mov
adc
xor
jo
push
ljmp
mov
dec
dec
popa
pop
mov
jp
out
push
iret
push
adc
xchg
mov
ud0
call
cwtl
mov
mov
dec
cli
push
loopne
cli
test
int
cmp
stos
pop
les
ljmp
mov
jb
push
dec
in
mov
mov
bound
cmpsb
cltd
mov
dec
je
xchg
adc
ljmp
adc
pop
jle
stos
mov
divb
incl
cmpsl
pushf
cmp
ds
cwtl
cs
cwtl
sub
ret
cmp
sar
jmp
or
jg
or
xchg
shlb
or
sbb
arpl
cli
and
mov
cmp
mov
test
incl
dec
dec
sarl
fidivrl
xchg
add
cwtl
push
mov
dec
pop
fdivs
lret
test
jae
imul
negl
idivl
xlat
nop
fstps
cmc
jbe
cmp
pop
jno
mov
and
xchg
xchg
lahf
mov
in
xchg
popf
mov
xchg
ret
dec
xchg
mov
pop
frstor
incl
rcrb
sbbb
jmp
push
push
repnz
inc
cwtl
sub
mov
lahf
inc
push
push
insl
cmc
es
arpl
and
inc
or
incl
xor
pop
fcmovu
jnp
dec
fcom
inc
in
ljmp
sbb
inc
aam
mov
fisubrs
shlw
int3
adc
and
bound
imul
ljmp
xchg
pop
cmp
push
xorb
pop
test
loope
jecxz
arpl
jg
mov
mov
in
ljmp
outsl
add
xlat
xor
xor
mov
push
pop
and
and
sub
push
ja
test
push
and
jae
jg
xchg
or
sub
jg
jmp
leave
sub
filds
dec
mov
push
add
rcl
mov
sub
push
incl
daa
icebp
xchg
jecxz
xor
ss
rcll
arpl
jmp
mov
cmp
sbb
jmp
mov
add
xor
inc
int
bound
adc
stos
mov
and
mov
and
or
lds
cltd
mov
std
jecxz
fcmove
jns
lahf
sbb
cmpsb
cs
cmp
ret
sub
mov
frstor
ror
bound
pop
sub
mov
jns
or
mov
incl
fstl
push
dec
xchg
out
stc
insl
adc
mov
nop
fs
pop
pushl
cmpsl
aas
add
cltd
jl
mov
inc
lcall
mov
cmpsl
fcomip
enter
sarb
fiaddl
out
loope
sbb
decl
inc
xchg
imul
push
aaa
xchg
jp
xchg
loop
inc
push
fnstsw
push
xchg
ljmp
xchg
push
mov
dec
mov
adc
xchg
dec
jb
mov
jmp
dec
shll
ds
push
movsb
sbb
cmpsb
test
pop
cmp
cs
mov
jno
std
loop
stos
outsb
cwtl
rorb
adc
mov
add
lcall
push
fldt
ljmp
push
in
mov
dec
push
popf
jo,pt
fs
ljmp
jl
and
add
xchg
cmp
xchg
mov
shlb
pushl
sub
xchg
pop
lcall
and
pop
xchg
fidivrs
mov
dec
pop
xchg
leave
push
mov
dec
fndisi(8087
jg
int
fisttpll
nop
ljmp
aam
dec
xchg
lock
xchg
or
aaa
cld
jmp
scas
scas
mov
insb
mov
mov
dec
or
xlat
enter
fistl
add
mov
adc
push
sbbb
mov
mov
mov
pop
icebp
mov
mov
mov
in
mov
nop
jbe
xchg
decl
outsb
imul
repnz
dec
inc
jge
sti
loop
sbb
stc
cmp
inc
jo
mov
fucom
nop
pop
out
mov
adc
mov
pop
pop
mov
cli
jno
loope
push
xor
xchg
mov
iret
gs
mov
repnz
cltd
pop
insl
mov
adc
jg
cmp
jo
enter
repnz
xchg
loopne
cld
out
sarb
push
add
lcall
inc
xlat
push
js
jp
test
mov
cmp
jg
mov
push
repnz
fisttpl
inc
pcmpeqb
out
loope
mov
insb
les
ror
adc
loope
or
fidivrs
and
mov
in
stos
fcmovnb
fdivp
push
stos
jb
mov
xlat
adc
fs
or
mov
cmp
decl
or
out
call
outsl
dec
mov
xchg
inc
cmp
inc
sahf
pop
fistps
adc
hlt
lcall
incl
std
sti
fmul
orb
xcrypt-ecb
cmpsl
or
and
push
mov
xchg
int3
dec
int3
lods
mov
mov
sbb
lcall
pop
adc
shrb
leave
out
inc
pop
aad
jbe
adcl
ljmp
mov
int
out
xor
mov
mov
in
jbe
add
lods
add
or
cmp
sbbb
dec
imull
pop
loopne
dec
repnz
sbb
inc
pop
std
test
pop
cs
sbb
and
aam
mov
stos
lcall
mov
sbb
cltd
faddl
daa
je
jae
test
and
jmp
mov
rcrb
insb
aaa
nop
loopne
adc
cmp
and
lods
cmp
push
mov
pop
mov
int
push
and
and
push
cmp
jle
flds
xchg
in
call
cld
jno
xlat
insl
cmpsb
fwait
xor
push
loope
leave
dec
in
push
inc
add
outsl
cmc
pop
pop
or
jmp
jmp
cwtl
mul
gs
incl
mov
adc
cmpsb
push
cmp
jp
clc
push
fidivl
scas
push
in
jp
pop
adc
cmp
dec
cld
mov
jmp
nop
push
pop
daa
cwtl
repz
fcoms
es
pushf
movsb
popf
jecxz
adc
sbb
mov
lcall
leave
rcll
subl
sbb
pusha
lahf
nop
pop
andl
dec
lcall
loop
and
adc
out
hlt
addl
outsb
xchg
das
pushl
ljmp
jno
bound
jmp
sbb
cltd
loop
jno
lahf
or
pushl
xor
fldcw
fcomps
lret
xchg
dec
push
bound
push
fisubl
shrl
call
das
jae
aam
rorb
loop
jp
out
mov
or
sub
and
pushl
sub
sbb
xor
and
loop
jae
in
and
or
jb
and
mov
out
push
hlt
add
mov
sbb
sbb
dec
pop
jno
pushf
pop
jl
fs
dec
lock
std
sub
push
jno
or
dec
sahf
mov
ljmp
cltd
lock
ret
mov
outsl
stos
cli
stos
pop
sahf
shll
or
and
decl
add
jae
jne
rcr
cmpsl
imul
sub
dec
shlb
pop
fwait
int
cmp
shll
or
dec
das
testl
and
call
sub
shlb
gs
push
aaa
mov
lock
dec
pushf
lock
pushl
push
leave
xor
mov
icebp
insb
and
test
cmp
out
xchg
mov
mov
cmpsl
notl
test
pop
popa
es
jg
sbb
leave
sar
push
cwtl
stc
sbb
mov
mov
jg
jae
cmp
jb
fwait
adc
jp
inc
xor
push
push
dec
aaa
and
inc
rol
in
adcl
call
push
sub
insl
int
add
lahf
mov
outsl
shlb
inc
loopne
jns
mov
sbb
mov
jg
enter
int3
call
jg
mov
aad
dec
aam
xchg
or
incl
imul
addr16
pop
nop
out
pop
cmp
and
cwtl
pushl
shrw
mov
mov
scas
mov
fcompl
out
into
mov
ret
sbb
lcall
push
push
inc
mov
rclb
add
jle
cld
lods
call
mov
pop
and
cs
jo
outsb
std
outsb
shr
pushw
and
jne
sahf
jg
sti
mov
mov
add
je
push
dec
xor
fsub
testl
and
mov
sub
decl
shlb
pop
sub
ret
stc
jp
jg
pop
jae
outsl
test
sahf
or
fcomip
pushl
mov
or
jnp
cld
or
push
jns
or
ljmp
inc
aas
and
fldcw
mov
inc
mov
loop
repz
mov
mov
lcall
shr
sub
jge
xchg
add
iret
cmp
popf
subl
decl
iret
divl
cmpsb
push
sub
push
mov
scas
and
and
dec
clc
xor
test
arpl
bound
movsl
scas
or
jg
xor
cmp
xchg
pop
stos
mov
outsl
jns
and
loop
nop
ljmp
in
xor
xchg
jbe
test
je
xor
sahf
adc
jmp
decl
push
push
stc
lods
repz
popa
adc
xchg
mov
sahf
jae
cmp
push
loopne
sub
add
pop
call
call
ljmp
xchg
jecxz
dec
in
or
es
out
mov
les
xlat
mov
sbb
pop
xchg
int
scas
jp
jecxz
lods
push
inc
and
and
push
cmp
call
dec
adc
or
push
xor
insb
loop
mov
imul
xor
insb
pop
inc
pop
repz
addr16
cmp
fimull
sahf
inc
add
insb
test
decl
std
ss
pushl
fdivp
lcall
in
ja
cmp
dec
push
shrb
fdivrs
xchg
mov
shrb
lcall
dec
std
es
sub
dec
in
sbb
mov
add
lret
loopne
loopne
mov
fcoms
push
sub
clc
pop
xor
jo
int
xlat
lret
scas
roll
push
or
sbb
jmp
aaa
pop
push
gs
xchg
pop
add
pusha
xchg
add
mov
lods
pop
jno
scas
mov
or
pop
call
push
lods
dec
mov
and
lret
shl
bound
mov
es
repz
in
jmp
pop
out
sub
jae
dec
sub
repz
dec
jne
jecxz
mov
adc
call
pop
ret
fsubrs
test
sub
sub
push
push
roll
sub
les
dec
movsb
mov
fwait
mov
mov
dec
add
cmp
loopne
dec
inc
ds
loopne
jmp
pusha
cmp
cmpsb
jl
popa
gs
add
fwait
sub
test
les
movsb
mov
jmp
out
out
scas
aaa
cmpb
cmpsb
daa
xchg
mov
or
pop
cmp
mov
mov
inc
mov
and
mov
sub
jmp
mov
mov
xor
pop
or
incb
pop
sub
adc
pop
add
imul
mov
jmp
ds
mov
das
xchg
add
add
add
jg
fmuls
push
sahf
repz
dec
mov
fldl
push
imul
je
or
lret
in
pop
push
div
enter
aaa
cld
repnz
cmp
xchg
jbe
jmp
and
test
mov
scas
cli
aaa
scas
and
push
push
sahf
xor
jo
cmp
mov
pop
pop
test
pop
dec
loop
clc
push
mov
aaa
adc
xchg
or
adc
mov
decl
pop
or
lcall
jae
loopne
add
enter
mov
sar
pop
call
mov
and
ja
xor
push
addr16
jp
inc
ljmp
out
lods
and
out
cmp
rcll
xor
inc
adc
aad
fdivrp
dec
lret
in
aas
repz
inc
testb
hlt
lds
jnp
mov
in
pop
je
ret
sbb
inc
incl
sbb
push
and
iret
mov
lahf
jns
mov
dec
adc
adc
mov
je
stos
push
jle
mov
jge
in
lock
lock
inc
outsb
pop
add
ljmp
jmp
cmp
icebp
sarl
pop
xlat
pop
jne
pop
jle
xchg
xchg
nop
or
pushl
fldcw
xorl
ja
add
push
cmp
icebp
jmp
sarb
and
xlat
mov
mov
dec
pushf
push
outsl
sbb
pop
mov
lcall
cmp
inc
addr16
mov
test
les
in
or
ljmp
xchg
bound
pop
jae
loop
arpl
fiaddl
push
popl
cmp
add
mov
decl
jge
dec
scas
mov
inc
fsub
pusha
xchg
mov
cmc
push
pop
call
scas
lods
adc
movsl
cs
inc
das
movsl
out
dec
mov
punpckhbw
push
push
pop
mov
ds
loope
pop
adc
mov
loop
lahf
in
pop
mov
add
scas
orb
and
loop
mov
xchg
pop
pop
pushf
sub
jg
fbld
adc
inc
shrl
lahf
jo
mov
sbb
mov
incl
cld
push
xchg
lcall
adcl
shrl
fdivr
pushl
jle
add
inc
push
cld
leave
outsb
and
rcrl
inc
add
cltd
ss
pushf
leave
incl
sub
rcll
aas
pop
lods
test
inc
add
test
xchg
mov
push
repz
cmpsl
mov
mov
hlt
xor
lcall
mov
movb
cmp
jg
mul
insl
inc
inc
mov
xchg
sti
cmc
cmp
popa
sub
or
mov
jg
ljmp
add
mov
and
add
inc
mov
shlb
jl
inc
cmpsl
arpl
loope
pop
je
sbb
push
and
push
ja
sbb
add
jbe
js
cmp
dec
lock
les
cli
out
lret
lods
testb
enter
filds
mov
mov
adc
or
jno
js
ss
mov
jo
test
call
das
stc
pop
inc
pop
int
mov
lcall
mov
sbb
sub
call
pop
dec
in
sub
xchg
fisubrl
xchg
in
mov
push
inc
call
adcb
xor
inc
or
add
decl
es
sbb
push
stc
jl
testl
mov
mov
and
addr16
lahf
mov
mov
scas
sar
sbb
out
adc
dec
dec
fimull
pop
hlt
fimull
lcall
jp
ljmp
xor
clc
scas
jg
xor
test
mov
das
add
sbb
mov
mov
lods
mov
imul
inc
pop
data16
les
std
decl
roll
sub
add
cmpsl
mov
subl
cmc
insb
jmp
or
xchg
push
js
jge
popf
imul
aad
or
pop
inc
inc
jbe
out
aaa
stos
mov
lcall
popf
stos
int
ficoms
es
xchg
add
sarb
xchg
dec
cmp
inc
inc
mov
dec
adcl
pushf
das
sar
inc
xor
in
sub
call
push
bound
jbe
inc
cli
jecxz
dec
inc
test
and
sub
push
cmpb
repz
push
adc
push
out
jo
imul
inc
mov
ja
lds
mov
xchg
lret
icebp
sbb
pop
pop
or
jge
jno
int3
jne
fstpt
leave
int
loop
mov
bound
gs
push
pop
mov
jbe
adc
jp
mov
or
add
mov
mov
push
sub
sarb
imul
pushl
mov
adc
pop
sbb
mov
xor
cmp
pushl
xor
lods
inc
mov
imul
xlat
mov
adc
cmp
stos
mov
cli
mov
or
pop
mov
notb
arpl
mov
cmpsl
fnsave
jl
mov
jecxz
xchg
sbb
icebp
xor
push
es
fstps
fcoml
nop
dec
test
xlat
sarb
xor
call
aas
pop
and
hlt
call
out
xchg
out
ficoml
mov
xchg
and
sbb
fbld
xor
mov
shl
or
rolb
ret
cmp
jbe
addb
mov
pushl
das
insb
jbe
daa
in
xchg
inc
fcomps
cli
popa
clc
ja
pavgw
mov
cmp
or
push
fsubrs
mov
jae
pushl
in
sbb
std
mov
mov
orl
add
xor
es
mov
test
add
clc
fldl
mov
sahf
stos
shll
lds
add
jg
pushl
out
add
loop
jae
js
clc
pushf
testb
jecxz
cli
jmp
fcmove
int3
pop
or
lea
sbb
mov
xchg
mov
bnd
sub
cmc
xchg
scas
inc
inc
js
jge
jl
mov
popf
loope
dec
sbbl
lcall
push
lcall
rcll
or
add
scas
mov
add
cmc
decl
pop
mov
dec
loopne
inc
loop
cmpsb
cs
stc
jmp
dec
fmull
push
jne
jecxz
mov
xor
mov
add
xlat
and
out
ljmp
xchg
outsb
push
rcll
popf
mov
push
dec
mov
and
lcall
lea
stc
cmp
add
mov
mov
aaa
and
loop
insl
cmp
das
xor
jmp
pop
cmpsl
sub
dec
int3
push
inc
fildll
dec
fnsave
mulb
rcl
cmp
xor
xchg
sbb
dec
aas
popa
stos
mov
inc
mov
and
adc
jmp
pop
test
pop
adc
in
gs
add
xchg
cmpsb
jmp
js
out
pop
inc
sbbb
inc
fwait
dec
and
cmc
xor
imul
rcr
data16
int
das
sar
in
es
xchg
inc
mov
sub
out
lods
adc
add
dec
ljmp
or
add
add
jg
adc
popf
jge
into
movsb
jecxz
incl
ficoms
insb
faddl
dec
add
mov
cmp
push
and
xchg
call
adc
out
cld
leave
pop
mov
sbb
dec
jo
cmpsl
pop
lret
jg
outsb
mov
test
sar
test
push
int3
mov
push
xchg
stc
aaa
cld
jmp
pop
xchg
scas
stc
cltd
mov
outsl
les
sahf
jno
cmp
outsl
or
pop
cmc
rcr
jl
cltd
and
loop
clc
sub
sbb
jmp
ss
jp
pop
dec
xor
sub
cmp
sub
subb
jle
xor
jg
ljmp
out
add
dec
mov
add
test
call
fisttps
imul
icebp
sbb
aaa
jns
out
cmc
outsl
lret
pop
in
xchg
sub
arpl
mov
adc
inc
xor
mov
inc
inc
mov
pop
add
decl
sbb
adc
mov
mov
cld
cmp
sub
mov
ret
push
and
push
push
pop
test
scas
inc
lret
cmp
lock
test
jecxz
mov
stc
sbb
dec
cmp
jg
int3
loop
cmp
leave
push
aaa
xchg
hlt
mov
mov
sub
and
inc
xchg
jmp
testl
pop
jno
es
jge
mov
push
in
add
jae
insb
cmp
ljmp
rcrb
mov
mov
movsl
cmpsl
in
mov
and
jmp
out
pop
sub
jmp
loop
mov
mov
jbe
inc
and
jmp
jno
or
insb
push
mov
cmp
pushl
outsl
jge
imul
jne
mov
loopne
push
sub
xor
mov
inc
scas
pushl
cmpsb
cmp
bound
inc
fwait
inc
mov
inc
cmc
mov
loop
pop
hlt
fucompp
fdivrl
pop
add
jle
jle
push
into
insb
pop
ficoms
jmp
dec
dec
add
jmp
loop
xchg
lds
in
sbb
xor
inc
pop
sub
es
mov
adc
out
xchg
jecxz
mov
frstor
jg,pn
dec
jmp
push
jb
loope
inc
or
push
cmp
cmc
out
pop
ss
ds
cmp
outsb
pop
enter
cmc
or
in
adc
or
jge
jp
arpl
decl
ret
outsb
cltd
xchg
cmp
popl
cmp
or
xchg
add
jb
cmpsl
fcomip
mov
mov
outsb
adc
arpl
loopne
pop
and
in
ret
ret
jge
into
add
icebp
mov
jle
xchg
mov
insb
jge
cmpsb
sub
sbb
pop
lock
call
pushf
leave
pop
jo,pn
pop
daa
pop
xor
fdivs
push
cmp
incl
inc
xchg
pop
aam
push
sbb
push
mov
ja
sub
mov
cmp
mov
cmp
push
les
and
lea
dec
adc
cli
lcall
xchg
mov
push
ljmp
pop
or
jge
decl
iret
sub
jns
mov
fdivp
adc
in
orb
sbb
sub
jg
xchg
and
inc
into
fs
aas
enter
pop
dec
cli
ljmp
cmpsl
inc
mov
lods
fwait
cli
or
cmp
mov
and
cs
fsubrs
insl
repz
loopne
loop
cmp
lcall
out
cli
push
movsl
cmp
cmp
lds
mov
add
outsl
rcrb
add
clc
jmp
xor
outsl
or
cmc
lahf
jb
movsl
clc
cmp
popf
dec
decl
cmp
jb
cmp
repz
clc
cmp
xchg
jb
mov
inc
add
sar
pop
xor
sarl
ds
pop
out
sbb
xchg
call
rcrb
mov
xchg
fisttpll
add
shll
pop
and
xchg
lock
jbe
cmc
scas
mov
ljmp
cmp
lret
insb
out
ja
shll
adc
les
call
jl
in
subl
jae
push
loope
xchg
rcr
dec
cmp
or
mov
lea
push
sub
fwait
jmp
xor
xor
repnz
incl
scas
mov
outsb
dec
xor
jg
xor
pusha
scas
pop
cs
das
add
fwait
jp
jg
pushl
rclb
jne
xchg
repz
xlat
sbb
fsts
mov
mov
cmp
mov
adc
outsl
push
imul
insb
shl
subl
sbb
adc
imul
cltd
mov
push
pusha
stc
add
mov
xlat
stos
out
jp
sbb
data16
jg
dec
jl
pop
xchg
fisttps
jecxz
cmp
lret
adc
jo
add
sbb
xor
or
mov
mov
jmp
xchg
sbb
subl
fistpl
or
lock
jg
mov
xchg
xor
push
xchg
daa
mov
xchg
push
sub
lret
push
testl
pop
push
bound
sub
xchg
dec
ret
into
pop
int3
ret
dec
xchg
insl
inc
pop
decl
sbb
adc
or
hlt
adcl
cmp
popf
jecxz
nop
lods
push
sahf
jno
mov
mov
call
or
dec
jmp
pop
enter
cli
mov
xor
sub
shlb
sbb
in
mov
stos
outsl
in
or
pop
in
push
pop
out
push
insl
push
add
ret
jg
pop
int3
scas
push
test
mov
mov
dec
xchg
in
sub
sbb
pushl
mov
in
mov
xor
or
scas
mov
mov
lcall
js
mov
lds
jmp
sbb
sub
repnz
in
fiadds
mov
xchg
xchg
inc
sbb
imul
jo
lahf
dec
jmp
pop
call
call
jns
inc
xchg
rclb
mov
into
push
in
lcall
adc
push
inc
clc
hlt
sbbb
daa
jle
pushl
lods
insl
mov
shll
sti
cmp
ror
xchg
testb
push
leave
fistps
fstp
rorb
das
jns
sbb
outsl
cli
incb
iret
mov
mov
mov
pop
cmp
pop
jmp
decl
jno
mov
mov
movsb
insl
cmp
xor
cmp
jne
push
mov
ljmp
push
rclb
dec
stc
cwtl
inc
or
decl
in
shrl
jno
idivl
fwait
rolb
jge
mov
mov
sbb
ficoms
popl
lahf
js
mov
pop
cmp
jecxz
repnz
inc
adc
adc
lock
and
mov
adc
decl
cmp
rcrl
push
xchg
xlat
lret
mov
sbb
inc
jb
loop
scas
inc
or
call
mov
and
inc
pop
daa
nop
push
push
outsl
pop
sub
mov
jge
push
xchg
dec
push
cmp
pop
sub
mov
xor
ljmp
adc
lahf
pop
cmc
call
xor
iret
add
clc
push
xor
lods
mov
decl
fs
mov
pushf
and
pop
inc
loope
rol
or
sbb
pop
mov
dec
lock
mov
cmp
sub
mov
or
out
fisubs
sbb
push
pop
xchg
and
xor
in
or
dec
std
jg
clc
out
arpl
jmp
jno
je
int3
in
inc
add
lret
add
and
in
jge
push
add
cwtl
dec
mov
sar
lcall
es
add
ljmp
xchg
inc
xchg
adc
stos
sub
outsl
popa
dec
xor
pushl
xchg
sti
sbb
add
cltd
pop
push
pop
lahf
cld
stc
sbb
lds
jmp
pop
test
ja
incl
lods
inc
or
sub
scas
add
mov
outsl
push
decl
inc
int3
mov
sub
outsb
lock
mov
fs
shl
jl
push
sbb
mov
ret
lds
inc
sbb
mov
mov
aas
dec
dec
fisttpll
cmp
std
add
jmp
jno
loope
lods
cmp
outsb
frstor
xor
stos
adc
cld
ljmp
dec
rol
mov
dec
mov
call
lret
sub
and
lcall
into
es
addr16
loop
lock
cmpsb
es
incl
xchg
iret
sti
sbb
imul
jge
jbe
add
repz
hlt
aas
push
or
std
add
iret
and
orl
out
pop
push
ljmp
sti
es
ljmp
test
cld
fdivr
pushl
mov
mov
pop
pop
sahf
mov
push
mov
inc
adc
cli
push
pushf
shll
push
dec
movsl
sahf
lock
push
pop
pop
sbb
or
pop
or
mov
and
mov
and
insb
arpl
test
cmp
xchg
mov
ljmp
adc
dec
xlat
push
xchg
shl
sub
stos
sub
mov
mov
daa
push
pushl
ret
inc
loopne
aam
add
xor
out
xchg
cmp
loopne
addr16
sbb
nop
adc
and
aad
lcall
jle
shll
clc
pushf
lods
or
test
jnp
mov
hlt
xor
pop
lods
push
fcmovu
cmp
cmp
mov
or
popf
jmp
roll
dec
pop
outsl
mov
xor
stc
inc
dec
fcoms
shll
loop
decl
push
sahf
pushf
inc
push
std
mov
lret
fisubs
mov
mov
decl
stc
xlat
aam
sbb
lret
lcall
imul
ja
sar
notb
cmp
add
sub
gs
jne
dec
or
mov
popf
pusha
je
lea
pushl
jmp
jp
mov
scas
jge
scas
je
dec
inc
dec
sub
addr16
in
mov
stc
rcrl
in
add
mov
pop
insb
fstps
outsb
dec
or
divl
xchg
dec
das
adc
sub
xor
sbb
add
push
xchg
cltd
addr16
lea
fcmovne
adc
test
pushl
dec
out
aam
cmpsl
jp
jne
mov
cmp
nop
cld
aad
and
or
add
add
stos
scas
fsubs
popf
mov
inc
dec
add
and
inc
cmp
call
cli
cli
push
cltd
sbb
mov
sub
addl
lcall
dec
cwtl
sahf
add
push
aas
js
adc
lcall
cmp
sub
jge
rorb
mov
adc
iret
ret
or
and
iret
js
jp
into
xor
int3
decl
mov
mov
ljmp
in
je
subl
pop
jle
call
call
les
jp
adc
shll
add
sbb
ud0
xor
sub
dec
jbe
sub
mov
arpl
ljmp
xchg
cltd
mov
clc
rcrb
call
mov
sar
cmpsb
sub
imul
out
cld
jecxz
mov
in
test
sbb
stc
icebp
cmpb
in
push
and
aaa
std
jmp
or
std
pop
sub
jb
pop
jns
test
es
pop
call
div
inc
dec
mov
lret
lret
sbb
rcrb
mov
loopne
jo
jnp
mov
call
and
jecxz
xchg
into
cmc
je
pushl
cmp
xor
adc
ss
xorl
shlb
movsb
loope
scas
pushl
jle
mov
xchg
pop
cli
and
add
jae
fst
stos
test
fildll
adc
pop
loopne
cmp
push
push
stc
call
ret
cs
ljmp
mov
test
dec
stos
sub
sub
jb
pusha
xor
xchg
mov
xlat
gs
ljmp
hlt
leave
jge
sub
pop
mov
sbb
cs
mov
fisubl
fisubrl
leave
call
pushl
js
cmp
jmp
ljmp
fstpt
mov
jl
cmpsb
cwtl
pushf
sub
cmp
sub
jbe
movsb
pop
xchg
xchg
cmp
mov
mov
push
mov
jne
dec
ja
sbb
daa
testl
test
sbb
or
sbb
fdivl
mov
gs
inc
dec
jbe
inc
jns
cld
aas
adc
decl
int
mov
dec
ja
inc
arpl
testl
jmp
shll
out
insl
dec
cmp
add
loop
aaa
lds
jae
push
cmp
cmpsb
mov
add
lgs
cmpsl
addr16
inc
push
cmpsb
mov
xor
fistps
fldt
cmp
out
jb
jle
cmp
ja
in
lock
cld
jo
loopne
idiv
into
test
or
jmp
dec
ljmp
movb
and
sti
push
xor
mov
scas
cli
incl
ret
ja
mov
mov
imul
in
jg
fiaddl
inc
sub
mov
pop
sbbl
sbb
out
pop
pop
push
cltd
and
cmpsl
ss
call
push
mov
push
addr16
data16
adc
inc
sub
push
pusha
xchg
fdivs
scas
incl
cld
push
aam
or
push
dec
mov
lock
loop
push
hlt
mov
xchg
lcall
inc
cmp
addr16
push
mov
jl
nop
mov
dec
inc
jae
incl
mov
into
mov
jae
stos
xchg
mov
outsl
das
mov
incl
mov
mov
ret
xlat
pop
mov
subl
cltd
movsl
adc
cmc
fcomip
out
or
or
jo
pop
loop
arpl
das
addb
aad
pushl
popa
jp
enter
xor
imul
mov
mov
jecxz
jne
push
mov
jg
pop
mov
mov
mov
xor
jb
aam
cmp
push
incl
dec
adc
pop
mov
cld
cmp
test
pop
jle
sahf
fcmovne
nop
pop
rcrb
decl
mov
and
xor
push
and
sahf
inc
lds
xchg
int
enter
lods
popf
or
out
jmp
orl
xchg
cmpsb
out
xor
arpl
cmp
lods
js
enter
insl
fbstp
incl
mov
pop
xchg
sti
adc
or
mov
mov
cmp
into
scas
mov
add
sbb
imul
ret
jge
ficomps
call
rep
push
pop
jp
push
mov
push
dec
test
fnstenv
loop
push
pop
mov
iret
call
pop
or
cld
adc
cmpsl
aaa
sub
shll
dec
fs
movsb
xchg
ljmp
stos
out
out
inc
outsl
mov
cmp
sbb
sahf
add
pop
mov
lcall
push
fidivs
cs
sub
push
lods
cmp
popa
xchg
mov
or
decl
adc
je
dec
pop
jecxz
mov
sbb
inc
inc
je
repz
sbb
adc
push
mov
inc
vmovsldup
inc
add
inc
push
push
and
mov
int
js
fisubl
inc
pop
mov
js
dec
mov
cmp
adc
xchg
bound
addr16
sub
jne
pop
ss
and
cmc
cs
ljmp
mov
ficomps
jmp
pop
inc
inc
cld
test
lods
mov
and
jg
icebp
js
dec
sbb
into
pop
sti
cmp
rorl
loop
in
or
pushl
fldl
repnz
loope
mov
imul
jmp
mov
jb
das
call
idivb
sub
sub
aaa
movl
pop
aad
je
sub
les
icebp
lea
xor
adc
mov
outsl
and
add
js
jno
cli
ja
jo
push
xor
cmpsb
idiv
ljmp
popa
push
mov
nop
jnp
dec
into
and
dec
andb
call
jl
mull
shll
test
pop
push
movsl
call
xchg
enter
cli
stc
push
add
adc
and
mov
addr16
push
pop
inc
decl
push
pop
add
and
jmp
adc
sbb
test
decl
clc
insl
cmp
push
ficoms
jae
sub
lock
ds
sub
push
mov
pop
mov
adc
push
rcr
int3
sub
sub
shrl
pop
addb
incl
push
jl
sbb
in
fidivrl
hlt
push
and
iret
cmp
pop
into
scas
and
fbld
sbb
dec
mov
fldenv
jns
adc
out
pushl
inc
sub
enter
sub
and
push
test
adc
xor
dec
ficoml
sbb
out
xchg
jl
pop
pop
mov
push
mov
cli
jb
pop
decl
adc
inc
lcall
sbb
jmp
in
lcall
sti
test
xor
xor
jno
push
es
push
insl
jg
mov
xchg
outsl
loopne
ja
daa
and
xor
dec
ljmp
mov
test
adc
je
inc
sbbl
push
imul
dec
outsb
jmp
pop
test
cli
and
xor
scas
jae
insb
std
cmp
ret
mov
test
jae
gs
cmove
cld
pushl
or
icebp
xchg
mov
idivl
aad
xchg
lret
mov
cmp
cli
clc
mov
into
and
adc
adc
pop
fistl
mov
inc
ljmp
clc
jmp
add
clc
pop
xchg
ret
adc
cltd
aas
mov
std
das
add
lcall
lds
jecxz
addr16
xchg
movsl
shlb
jns
push
xlat
inc
jb
jmp
call
fs
push
ret
adc
pusha
je
inc
subb
int3
pop
adc
mov
das
repnz
roll
clc
call
pop
orb
push
cmp
fcoms
pop
cltd
ljmp
mov
and
jno
nop
push
out
add
cmpb
pushf
cmp
shr
inc
push
pop
add
clc
ljmp
pop
push
loop
lret
lea
cmp
cmp
jmp
jmp
sub
pop
mov
sub
stos
mov
xchg
rcrb
dec
push
mov
decl
cwtl
roll
in
fs
mov
push
pop
and
or
cmc
cmp
pop
lcall
scas
test
loope
movsb
adc
in
jle
xchg
ja
jmp
inc
mov
push
and
and
fdivrp
scas
std
ds
jbe
mov
filds
inc
jb
or
add
mov
repnz
mov
cs
clc
push
pop
and
aas
cltd
dec
ror
pop
sbb
and
sbb
fimull
aad
js
mov
xlat
fimuls
xchg
and
push
mov
cmc
mov
out
cli
imul
sbbl
mov
xchg
mov
jg
mov
out
adc
xor
xlat
dec
or
cmp
jne
pop
sub
movsb
cmp
inc
mov
fisttps
faddl
scas
outsb
movb
aaa
std
inc
fidivl
pop
jo
pusha
push
cli
loopne
jne
adc
insl
lret
add
ja
adc
pop
aam
pop
jno
ss
adc
or
mov
lahf
jecxz
pop
in
rorb
lods
je
data16
call
mov
dec
mov
inc
jne
or
insl
fwait
lahf
add
call
dec
mov
jge
aad
dec
fdivs
es
cmp
nop
insl
ss
pop
rolb
mov
jge
in
stc
orl
pushl
mov
mov
adc
imul
push
push
push
stc
icebp
jmp
ljmp
mov
mov
sar
mov
mov
out
cmpsb
addr16
xlat
int3
xor
jg
pop
mov
sub
cltd
and
jle
inc
push
cmp
sub
dec
and
mov
push
mov
cmpl
insl
or
incl
xchg
fisttps
jbe
hlt
jg
shl
insl
out
xchg
les
mull
clc
sti
cmp
gs
lods
sbb
add
ds
jl
loope
push
aam
mov
push
mov
fidivrl
jmp
mov
xor
jecxz
cltd
aad
fdivp
in
aas
loope
xchg
adc
ss
jmp
jnp
mov
in
push
sbb
inc
add
sbb
mov
or
das
sar
imul
cli
xchg
popl
aas
scas
push
imul
decl
inc
loopne
or
xor
enter
pop
movsb
inc
scas
lock
jg
adc
je
push
mov
cs
ss
fwait
inc
push
pop
fwait
daa
out
sti
out
lcall
dec
mov
jne
jo
push
jnp
add
sti
stc
cld
or
jp
mov
jmp
cmp
xor
mov
popf
mov
iret
adc
xchg
enter
sti
pop
idivl
lea
cmpsb
out
xchg
cmc
int
pop
insb
test
jns
leave
sti
xchg
fisubs
jg
fwait
dec
inc
pop
movsl
fbstp
xor
hlt
hlt
incl
push
jmp
push
fldcw
sub
jno
cmp
movsb
xchg
rorl
lret
gs
mov
jg
push
rcr
iret
xor
mov
subl
xor
xor
cmp
jmp
stos
push
nop
and
push
pop
iret
inc
and
rcl
xchg
ud1
pushl
repnz
sti
xor
pop
sbb
inc
xchg
testl
inc
jmp
push
and
pop
pop
jp
add
insb
leave
xchg
lods
adc
fimuls
push
rol
ljmp
rolb
subl
cltd
sub
jne
adc
push
es
je
filds
mov
sbb
cmp
pusha
pop
xchg
sub
dec
lahf
adc
pop
ljmp
mov
popa
mov
xor
pop
xchg
xor
mov
dec
dec
neg
jecxz
in
ljmp
fs
outsl
fsubl
mov
cld
xor
sub
xchg
adc
jns
pushf
in
push
sbb
mov
mov
dec
add
addr16
xor
sbb
push
pop
loop
fcomip
cmp
xlat
in
outsl
pushf
mov
dec
or
pop
aam
cwtl
lret
adc
pop
outsl
mov
insl
mov
add
or
mov
into
push
lret
enter
movd
jp
addr16
imul
add
lock
jmp
or
leave
cltd
out
sbbl
ljmp
loop
xchg
rorl
pop
mov
andb
add
inc
cltd
push
adc
incl
and
movsl
movb
pushf
in
cmp
dec
popf
adc
aaa
clc
and
pop
ljmp
loop
lret
negb
sbb
rorl
inc
movsb
clc
and
adc
mov
mov
push
imul
sahf
test
push
or
arpl
daa
push
loopne
imul
push
adc
sub
mov
clc
je
push
xchg
and
mov
cs
icebp
ja,pn
mov
sub
inc
mov
ja
mov
shll
data16
mov
and
push
inc
sbb
mov
leave
loop
cltd
sub
pop
push
push
push
adc
lcall
or
cmp
sti
loope
or
call
dec
xchg
jl
push
enter
push
sbb
mov
cmpsl
gs
loopne
jge
je
pop
in
mov
cwtl
jmp
jb
faddl
add
je
sti
and
push
fidivs
jo
and
adc
mov
bound
sarl
jae
ficomps
cmp
clc
mov
cs
xchg
and
loope
xlat
cmpsb
lret
cmp
hlt
ljmp
adc
rorl
sbb
out
movsb
pop
jae
pop
adc
sub
stos
imul
mov
loop
fnstsw
leave
fcompl
popa
mov
mov
outsb
imul
into
fcmovne
leave
sbb
out
subb
mov
and
adcb
sbb
or
repnz
mov
and
popf
repnz
inc
mov
mov
ds
lock
pop
pop
lret
jg
mov
rcrl
and
call
clc
xor
in
xchg
inc
out
pop
popf
and
stos
mov
ljmp
add
dec
mov
in
stc
cmp
push
and
push
xchg
cli
jmp
cmp
rcll
jg
adc
test
xor
mov
add
add
jge
xchg
mov
xor
movsb
test
in
daa
push
cmp
stos
idiv
lcall
call
in
fidivs
mov
incl
aam
dec
xor
pop
incl
dec
lods
inc
or
push
pop
clc
test
sub
xchg
dec
mov
adc
push
orl
xor
mov
push
in
loopne
push
inc
in
stos
cld
dec
cmp
test
mov
call
cmp
dec
fdivrl
gs
xor
add
xor
jmp
sti
das
or
or
push
stos
loopne
push
sub
int
push
clc
ja
cmp
mov
movsb
cmp
xor
push
dec
clc
lcall
call
jmp
outsb
pop
movsl
pop
push
pop
or
scas
fildl
push
dec
js
push
shll
fwait
cwtl
xlat
and
mov
cld
aam
pop
mov
fistpll
dec
fldcw
test
xlat
stc
jg
inc
or
ret
lea
sbb
lret
mov
jmp
add
lret
pushf
cmp
lods
shrl
fldl
mov
or
imul
fdivrs
ljmp
or
jo
je
rorb
add
push
sub
js
mov
mov
sbb
push
pop
pop
jae
sbb
push
xor
das
cli
pushl
cld
popf
mov
push
insb
repnz
jo
or
in
cli
hlt
sbb
fsubrl
lcall
mov
out
sub
in
loope
xchg
aad
push
cmp
jne
call
lcall
jmp
cmp
iret
int3
xchg
sub
xorl
pop
incl
push
sub
mov
aad
cmpl
xchg
jg
inc
add
cld
lret
jg
and
int
popa
mov
test
call
std
rolb
sbb
mov
inc
imul
in
std
mov
dec
mov
inc
add
add
mov
jbe
xchg
nop
sbb
outsl
lcall
rolb
pop
xor
inc
adc
ds
subb
shll
jo
and
lods
outsl
ljmp
sarl
insl
lret
xor
jl
cmp
adc
sahf
fwait
jg
xchg
mov
inc
mov
sbb
jg
push
cmp
scas
adc
sub
outsb
int
out
lock
ljmp
mov
divb
cmp
cmp
push
outsl
dec
add
dec
xchg
sbb
call
out
xor
shrl
jo
mov
pop
jl
pop
push
popf
push
lock
in
inc
int3
add
dec
push
cmp
xor
jbe
fs
push
mov
ds
jmp
push
ja
xchg
mov
cmpl
ljmp
les
imul
inc
int
scas
int
cmp
jb
jp
aaa
mov
inc
cmpsl
sub
lock
call
dec
mov
incb
sbb
fwait
popa
push
jl
jecxz
jl,pt
test
dec
add
lret
lcall
xor
cwtl
or
nop
mov
in
xchg
cmc
or
push
pop
adc
decl
and
sub
jo
cmp
daa
mov
dec
sbb
clc
jmp
daa
and
cmpsl
fdivrs
and
lret
push
mulb
idivl
mov
add
mov
sbbl
aam
sarb
xchg
mov
scas
xchg
pop
idiv
sbb
or
mov
pop
pop
test
mov
popa
test
inc
add
lahf
into
shll
decl
ret
rcr
outsb
dec
mov
je
out
jae
cmpsl
or
sbb
scas
xchg
ljmp
and
sub
jl
mov
out
sbb
jae
dec
std
and
dec
repnz
gs
cmp
lods
mov
push
sbb
lret
mov
rol
lret
push
mov
clc
out
orl
sbb
insb
pop
or
leave
stos
jg
sbb
mov
push
stos
aas
out
jo
inc
in
leave
pop
or
and
cltd
stos
cli
add
sbb
inc
rclb
jbe
imul
cmp
test
addr16
sbb
mov
mov
test
or
dec
dec
cmp
sbb
fstl
jns
icebp
cmp
test
es
jmp
xor
jo
addr16
out
inc
es
repz
popa
inc
inc
repnz
push
mov
add
ljmp
test
cmc
out
notl
loopne
out
mov
int3
pop
leave
adc
push
xchg
sbb
in
incl
jns
pop
ljmp
imul
bound
test
and
jns
lcall
rcll
std
call
inc
adc
pop
push
adc
clc
and
xchg
xor
movsb
je
mov
add
out
or
mov
stc
adc
pushl
xchg
clc
jle
sub
mov
inc
mov
scas
shll
aas
test
adc
icebp
push
test
call
test
pop
pop
push
test
cmp
fildl
fcoms
lcall
cli
call
ret
push
xchg
fsubl
inc
loopne
dec
call
sub
mov
push
mov
into
aas
lods
xor
outsb
jb
sub
adc
cmp
lret
nop
int3
adc
mov
pop
pushf
idivb
addr16
mov
std
enter
and
call
cmp
pop
rclb
outsb
lcall
outsb
jmp
push
add
int
adc
lods
dec
test
ljmp
imul
hlt
cmp
mov
sbb
out
jo
mov
and
call
popf
mov
jg
sub
push
inc
scas
cmp
int
cmp
icebp
mov
pushl
push
dec
inc
pushf
xchg
cmpb
xor
pop
xchg
cld
inc
mov
or
andb
call
sbb
icebp
sbb
xor
cmp
imul
inc
xchg
adc
jecxz
fwait
jmp
adc
in
mov
sub
aam
and
push
mov
scas
xlat
push
gs
in
stos
pop
mov
mov
aas
rcrb
decl
adc
sub
fmull
inc
sbb
push
fistps
call
insb
imul
mov
sbb
sahf
dec
dec
int3
inc
sub
jp
mull
aam
lahf
mov
inc
dec
or
call
pop
sub
inc
add
pushl
jmp
mov
into
dec
into
lret
mov
mov
ret
fs
mov
sti
bound
adc
mov
call
adc
pop
lock
pop
jb
add
mov
or
jg
inc
popa
push
mov
pop
dec
sub
fisttps
mov
mov
int
into
mov
andl
std
push
into
adc
inc
fisubl
popa
xor
cmp
pop
ja
loope
jg
decb
dec
mov
hlt
imul
xlat
into
pop
xchg
scas
test
jae
in
push
cmpb
push
jnp
push
dec
leave
jnp
insb
clc
jbe
add
lcall
mov
mov
xor
pop
xlat
or
cmp
and
hlt
mov
shll
push
mov
adc
out
cmp
lahf
sub
decl
dec
lret
mov
xchg
shrl
push
fcos
decl
test
xor
cmp
add
popf
insl
adc
inc
or
jg
dec
or
ljmp
pop
mov
outsb
jp
sbb
aas
sbb
icebp
test
pop
je
popa
in
pusha
sti
mov
jg
mov
outsl
add
mov
mov
cmp
sbb
pop
mov
shrb
and
fnstcw
insl
xor
mov
mov
jmp
pop
out
jmp
sub
fisubs
cmp
int3
lods
dec
pop
stos
sub
int
je
in
mov
push
call
adc
pushl
xchg
and
xor
aaa
lods
cs
lret
std
push
push
fisubrl
add
lcall
sbb
std
xchg
mov
jbe
repz
cmc
mov
xlat
ja
arpl
ljmp
gs
insb
pop
fcom
mov
push
mov
or
sub
aas
popf
xchg
sarb
jo
sbb
or
pop
or
jmp
adc
ljmp
stos
sahf
push
push
cmp
in
xor
sti
out
jns
popf
std
inc
loope
outsl
mov
and
push
aaa
add
imul
pop
sbb
in
push
jl
std
roll
mov
sbb
or
jp
inc
xor
jg
cmpsb
push
lret
imul
out
and
dec
clc
mov
in
cmp
jg
imul
jne
jne
push
fcmove
es
pop
icebp
outsb
scas
pop
scas
daa
xchg
rcll
decl
and
sub
inc
sbb
add
incl
ret
jnp
inc
xor
icebp
cmp
push
out
pop
cld
pushl
and
add
cltd
push
in
aad
out
pop
jb
adc
sub
lds
decl
jae
loopne
fimuls
lea
xchg
jge
xor
and
mov
movsb
lret
call
fwait
cmp
cmp
fsubs
xchg
je
push
pop
fucomi
vpsubw
jp
cmp
jmp
mov
and
andb
lock
push
push
xor
jg
decl
iret
and
pop
cld
andb
rclb
lds
jmp
xchg
loope
bound
push
jae
mov
push
or
or
in
sbb
cmpsb
jae
sarl
das
sar
push
into
xor
scas
add
in
mov
and
mov
hlt
lcall
sahf
repz
push
loopne
push
fistl
mov
fdivr
lcall
jne
pop
push
or
add
test
xor
loop
dec
adc
call
mov
push
push
gs
orl
sbb
xor
xor
nop
bound
push
xor
les
jno
xor
mov
cwtl
aaa
sahf
push
dec
or
insb
dec
push
bound
dec
test
push
inc
jbe
imul
or
push
xor
dec
ljmp
sub
out
xor
pop
icebp
decl
andb
push
mov
fs
dec
cmp
imul
push
mov
pusha
lahf
iret
addr16
add
mov
mov
fwait
add
sbb
sub
fldcw
cmpsb
fbld
pop
add
sbb
maxps
adc
cwtl
ljmp
and
in
inc
mov
cs
fwait
push
loope
xor
pop
lret
and
pop
sub
mov
out
ljmp
push
pop
xchg
and
pop
adc
adc
mov
rorb
mov
bound
data16
fdivrl
add
mov
ja
and
mov
sbb
push
sbb
jo
pop
xor
sbb
call
xchg
sbb
jae
lods
gs
xchg
out
hlt
popf
imul
imul
incl
in
in
cmpsl
sub
outsb
das
movsl
adc
jmp
call
shlb
adc
xchg
lret
repnz
popa
das
xchg
in
mull
lock
lcall
add
lret
jl
cltd
xlat
inc
scas
es
jno
pop
xor
rcrb
leave
decl
movsl
inc
mov
ss
es
pop
lock
adc
test
dec
out
lock
lcall
xchg
push
gs
rol
repnz
push
sahf
jne
lock
stc
sbb
test
fidivs
push
sbb
jae
insl
es
push
or
or
sbb
cmp
or
jne
ljmp
xor
jns
mov
jle
mov
clc
enter
mov
insb
xchg
test
mov
decl
test
xor
cltd
xchg
xchg
std
inc
adc
imul
pop
xchg
mov
call
mov
cmc
bound
dec
mov
loope
mov
pop
inc
mov
ljmp
das
xor
std
cltd
jp
adcb
repz
push
out
enter
jmp
inc
lods
push
and
push
pop
pop
pop
xor
in
stos
sbb
mov
loope
cmp
dec
inc
pop
mov
xchg
cmpb
bound
adc
jmp
and
inc
int
leave
in
or
xchg
mov
aaa
and
incl
int3
add
sbb
int
lahf
push
jns
sbb
ss
sub
shlb
mov
in
mov
into
out
or
fidivl
cmc
sub
add
jmp
daa
jg
cmp
push
push
xor
sbbl
andb
and
incl
dec
testl
adc
push
decl
xchg
mov
icebp
enter
inc
adc
icebp
cmp
mov
pop
mov
mov
add
cwtl
loopne
push
add
jge
sahf
shlb
jp
lock
mov
in
outsl
cli
rorl
or
mov
ljmp
adc
lret
mov
leave
call
inc
mov
or
sub
addl
cmp
movsb
mov
call
leave
sub
fildll
pop
sub
jecxz
add
decl
add
in
int3
jne
int3
pop
sbb
repz
call
add
gs
loop,pn
fbld
push
xchg
lock
lock
inc
scas
jne
fwait
inc
lcall
pop
or
or
les
pop
xchg
mov
mov
sbb
add
inc
mov
ljmp
push
out
leave
mov
pop
jno
cli
pop
mov
adc
adc
xchg
decl
loope
jge
leave
push
pop
pop
call
xchg
popf
icebp
or
add
call
jmp
mov
data16
js
push
faddl
mov
decl
icebp
push
inc
and
jne
ds
fs
sbbb
add
sahf
xor
fldl
cmp
xor
test
push
mov
daa
rcrb
in
cltd
sub
xchg
lods
shrb
icebp
or
decl
mov
inc
ja
cmpsl
js
sar
mov
ljmp
fdivr
push
in
lret
ret
mov
out
sub
pop
cmpsl
xlat
jmp
sub
and
sub
call
sub
mov
into
sub
sub
push
cli
sub
outsb
adc
mov
sti
pop
jmp
jmp
xchg
lcall
insb
mov
mov
or
iret
out
int
sub
cmc
ljmp
sbb
ljmp
addl
mov
and
xchg
sbb
xor
es
ffreep
and
mov
push
cmp
repnz
push
stos
mov
in
movsb
cmp
clc
test
bound
test
mov
mov
jle
cmp
out
jb
dec
and
push
mov
push
mov
aam
imull
movsl
jb
fisttps
push
or
and
out
mov
mov
call
aaa
mov
cmpsl
jns
movsl
test
dec
sbb
xor
sub
adc
scas
cli
decl
mov
mov
js
lock
or
inc
pop
inc
aad
std
jmp
pushf
inc
dec
in
shr
pop
xchg
dec
cmp
mov
adc
sahf
insb
not
andb
xchg
daa
in
iret
and
test
push
into
out
cli
lcall
out
jbe
mov
imul
iret
sub
call
inc
ljmp
repz
push
scas
nop
inc
pusha
cmp
push
js
xchg
outsl
inc
push
mov
mov
decl
or
adc
mov
jne
mov
aas
pop
inc
fimull
lods
in
scas
or
jmp
popf
push
or
bound
jo
mov
fdivrl
inc
mov
pushl
mov
fbstp
sarl
lods
sbb
lds
lahf
xlat
in
rcll
add
sbb
jno
popf
aam
adc
push
or
lahf
adc
cmp
jmp
iret
fneni(8087
mov
push
sahf
leave
loope
or
inc
jb
push
rcrb
jg
sti
ljmp
pushl
xor
mov
popa
sbb
imul
add
fistps
and
outsl
pop
sbb
mov
jbe
adcb
lret
lcall
sbb
pushf
lcall
push
imul
repnz
shlb
push
jne
fdivs
pop
mov
push
insl
xor
mov
mov
mov
lret
call
inc
cmp
jo
inc
mov
push
bound
cmp
out
and
or
xor
jp
lcall
out
aad
in
fidivrl
lahf
ret
fst
sbb
repnz
jae
add
repz
lcall
push
insl
push
push
js
insb
pop
out
cmc
cs
jnp
mov
sbb
sbb
lcall
adc
jle
xor
ds
inc
daa
dec
inc
lret
call
js
stos
cmp
add
sbb
stc
pop
int3
fnop
adc
lock
les
fstpt
cmpsb
pusha
xchg
movsw
xchg
into
adc
nop
push
lea
xor
jl
mov
scas
clc
fisttpll
test
dec
cmc
loopne
fwait
xchg
call
pop
mov
cmp
push
pop
pop
sub
hlt
add
pop
cmp
mov
jg
jle
sahf
and
sbb
and
scas
xchg
xchg
dec
pop
rcrl
test
or
jmp
add
xchg
lret
and
loop
and
push
dec
xlat
jge
rcrl
sbb
xor
decl
sbb
add
outsb
add
xor
int3
in
ljmp
pop
mov
incl
pop
je
mov
push
frstor
imul
aad
in
in
jmp
in
inc
push
adc
mov
lds
jle
jmp
rcrl
jmp
cmp
cltd
ss
shrb
adc
inc
pop
fdivs
mov
jp
sbb
in
loope
push
dec
push
lret
jmp
outsl
or
push
rorb
gs
and
addb
add
dec
mov
out
rcrl
mov
cmpsb
inc
jo
jge
sub
jb
lret
call
mov
pop
mov
movsl
xor
dec
in
loopne
rorb
mov
adc
and
je
cmp
add
jmp
sti
add
xor
cltd
add
repnz
decl
out
les
mov
mov
mov
mov
out
dec
inc
or
mov
mov
divl
aad
lds
jno
dec
lock
test
fwait
ja
lret
mov
jg
cmp
sbb
mov
outsl
xor
cmp
decl
loopne
decl
mov
lahf
pusha
clc
insl
xchg
lods
nop
repnz
and
ficompl
mov
ljmp
incl
xorl
iret
cmc
stos
jecxz
xor
mov
cmp
stos
lcall
xchg
mov
fndisi(8087
mov
bound
jnp
call
es
ja
inc
jae
jmp
add
and
dec
xchg
xchg
call
daa
inc
adc
sub
mov
cmp
jae
pop
jns
add
ss
call
push
jne
pop
icebp
dec
fdivs
fs
pusha
jp
xchg
cmp
repz
out
push
sbb
add
incl
push
popl
scas
aam
pop
int3
jl
ds
mulb
and
dec
or
addb
loopne
rolb
mov
add
mov
dec
inc
negb
add
pop
pushf
sarl
sub
cmp
adc
mov
ljmp
inc
push
add
mov
movsb
shl
testl
adc
incl
xor
inc
sub
mov
add
pusha
xor
sub
shrl
inc
add
in
call
push
or
xlat
imul
xchg
mov
push
testb
adc
in
je
dec
xchg
cmp
push
popf
mov
test
and
xchg
lcall
pop
mov
decb
icebp
mov
jne
outsb
add
sub
push
aaa
pop
jb
jno
jle
lods
jbe
filds
cli
outsl
and
sub
mov
hlt
mov
leave
mov
inc
cmp
shl
ja
test
mov
add
mov
es
jmp
inc
push
stos
arpl
pop
cli
xchg
xchg
xor
hlt
fwait
pop
jmp
fisttpll
sarb
fisubrs
add
sbb
daa
xor
imul
inc
mov
decl
es
rcl
int3
add
jb
stos
push
fldl
sbb
std
in
mov
or
ret
decl
inc
pop
cmpsl
sub
sti
mov
jg
pushf
and
shlb
popa
loop
sbb
hlt
ljmp
jge
add
xchg
repz
add
xor
adc
andl
mov
mov
rorb
dec
jecxz
mov
jle
mov
movsb
add
jp
imul
push
ljmp
imul
sbb
decl
aam
shrb
data16
or
cmp
and
jl
xchg
incl
cld
jmp
scas
pop
mov
aas
sbbb
adc
pop
jg
ljmp
adc
fistpl
mov
jle
cld
ss
pusha
repnz
ljmp
and
decl
push
sbb
stos
xlat
sti
adc
mov
mov
adc
xlat
dec
xor
fdivrs
xor
adc
mov
mov
lea
lret
lcall
mov
loopne
mov
hlt
xor
cld
scas
sub
cmp
or
andb
sbb
inc
cmpsl
lret
push
rcr
xlat
clc
mov
mov
inc
cli
nop
insb
test
jmp
push
mov
jnp
cs
push
loop
inc
jl
jmp
pop
in
push
loope
cld
sbb
call
mov
int3
mov
pushf
loopne
push
mov
outsl
cmp
push
or
inc
push
cli
cmp
out
push
xor
repnz
jne
pop
fsubr
scas
mov
mov
pause
jne
leave
nop
es
xchg
divb
mov
jg
and
into
mov
sub
negb
repz
clc
gs
int3
mov
or
repz
subb
jae
sti
cld
jae,pt
dec
jg
and
clc
cmp
push
cmp
call
popl
pushf
shl
lea
sub
stos
pop
arpl
std
fsubs
cmp
dec
lcall
pop
dec
jg
sub
lock
push
lock
pop
movsb
in
xor
je
js
daa
mov
pop
mov
or
adc
sarl
mov
pop
outsb
mov
push
lea
aaa
pop
pushl
orb
sub
xchg
xor
mov
jno
adcl
test
push
ret
call
mov
push
push
out
push
mov
int
xchg
mov
or
dec
arpl
negb
xchg
jns
mov
push
or
jns
ljmp
fcomp
fcos
incl
and
cmpsb
loopne
xchg
push
push
mov
adc
add
push
cltd
xchg
lods
jbe
dec
out
aam
adc
sub
aam
mov
jno
nop
std
xchg
sbb
cmpsb
pop
mov
decl
call
ffreep
fidivrl
pop
or
mov
decl
adc
mov
push
ss
sbb
ja
cli
ljmp
lods
cwtl
xor
rolb
mov
and
call
fisubl
push
addr16
movsl
adc
and
mov
std
pop
push
ljmp
pop
sbb
jne
cltd
andl
andl
mov
popf
mov
aad
jnp
pusha
cs
and
cwtl
mov
call
push
aaa
jg
lcall
mov
or
int3
iret
popa
fwait
loop
pop
jmp
inc
cltd
xor
pop
sbb
sub
mov
jbe
ja
dec
sbb
pushl
pop
lea
inc
and
fldl
enter
js
or
ds
incl
pusha
sahf
xor
inc
cmp
pushl
add
ljmp
mov
ficompl
icebp
adc
push
int3
inc
push
sbb
adc
call
push
bound
roll
pop
popf
mov
jmp
lcall
mov
mov
call
daa
into
int
sbb
xchg
push
leave
push
xor
mov
or
sbb
bound
fcomip
incl
sahf
gs
adc
dec
or
cmp
sbb
mov
add
cmp
notl
xchg
std
mov
icebp
sahf
mov
loop
ljmp
movsl
xchg
adc
lret
fstl
xorl
scas
inc
inc
push
cmp
les
dec
mov
mov
or
xorl
test
xchg
mov
xchg
leave
movsl
adc
jmp
push
jmp
mov
cmpsb
pop
js
imul
push
filds
adc
decl
cmp
or
and
mov
test
ret
leave
sbb
push
aaa
data16
ljmp
mov
jne
and
cwtl
fcmovu
rclb
pop
sti
inc
popa
push
lcall
sar
jno
adc
pop
insl
sbb
inc
push
push
add
and
into
sbb
push
dec
fdivrp
jmp
sub
fistpll
loopne
loop
lcall
pop
add
into
outsl
cmp
in
pop
ud0
jg
xor
jb
pop
mov
or
inc
loop
pop
out
sbb
fidivl
stos
mov
mov
enter
xchg
add
and
jg
cmpsl
sbb
shr
adc
jle
jg
xlat
dec
cmpsl
in
aas
test
jo
pop
call
xor
lods
mov
sti
cli
loop
or
pop
push
and
mov
xchg
push
sub
ret
jl
fucomi
xchg
cmpsb
push
and
cmp
loop
ret
mov
jo
push
pusha
pop
rolb
call
cs
stos
mov
fs
ljmp
out
insl
lods
fs
daa
loope
incl
jbe
jb
pop
insl
jge
pop
and
add
ss
mov
incl
push
pop
adc
int
xor
js
movsb
adcb
adc
adc
jge
enter
cli
xor
stc
leave
xchg
inc
add
lret
jmp
mov
decl
jne
inc
mov
ud2
loopne
mov
mov
pusha
lock
add
mov
adc
mov
cs
cmp
cmpb
jbe
hlt
insl
sub
mov
push
lret
bnd
ljmp
shrb
adc
mov
and
jp
adc
or
fdivs
sub
inc
aaa
mov
repnz
cld
fadds
ficomps
stos
imul
lcall
add
mov
popf
xchg
aaa
sar
jmp
ret
leave
inc
aad
or
adc
decl
fcmovnb
push
ss
popf
dec
incb
testb
mov
roll
sbb
xchg
add
push
xabort
sahf
cmp
adc
adc
xor
xor
stos
xchg
dec
in
adc
push
call
dec
aaa
push
xlat
mov
arpl
outsb
out
push
adc
add
fbstp
in
adc
lcall
sbb
xor
clc
out
stos
data16
aaa
scas
bound
push
dec
movsb
stc
mov
sub
decl
adc
in
int3
outsl
rep
mov
sub
mov
inc
fiaddl
mov
jmp
xor
scas
orb
pop
xchg
pop
cmpsl
adc
cmpsb
cmp
insl
cwtl
push
fsubl
pop
sti
inc
jmp
add
dec
shr
or
sarl
mov
das
test
ljmp
dec
pop
xor
push
xchg
pushf
or
and
add
in
ds
mov
pop
xor
test
adc
jge
es
fsubr
enter
test
mov
incl
push
add
xchg
mov
cltd
test
mov
cmp
or
pushl
jp
nop
inc
in
mov
sbb
xor
sub
inc
xor
add
mov
lcall
mov
mov
insl
imul
dec
push
adc
js
stos
idiv
sub
dec
repz
test
xchg
ljmp
pop
push
push
pop
push
jecxz
push
xchg
lcall
lahf
cld
push
jnp
and
mov
je
in
add
fwait
sahf
inc
inc
sub
repnz
incl
pop
dec
mov
in
mov
cmpsb
xchg
imul
xchg
xchg
and
enter
dec
je
sahf
addr16
out
testb
jge
mov
xor
adc
mov
imul
lcall
test
cld
sbb
fdivr
jae
or
sbb
mov
repz
xchg
pop
mov
inc
in
lcall
and
pop
xchg
iret
add
push
mov
mov
jns
sbb
and
imull
lcall
or
jge
mov
push
mov
test
sub
pop
jns
mov
sbb
daa
pop
jb
dec
mov
out
sbb
sub
mov
xchg
pop
dec
int3
das
in
fistl
jg
jle
or
pop
pushf
adc
push
sub
cmp
ljmp
cli
ffree
jge
movsb
adc
inc
add
aam
jno
imul
and
push
sbb
sbb
pop
sbb
lods
mov
es
mov
mov
mov
icebp
incl
add
hlt
add
imul
inc
jnp
icebp
push
mov
jge
aad
mov
mov
jg
xchg
inc
hlt
cmpsl
mov
std
dec
jbe
push
pusha
push
cmc
jecxz
xor
dec
jp
push
ljmp
dec
rolb
adc
or
lods
stc
fildll
aas
stos
push
insb
icebp
lods
add
call
cmp
ret
mov
jae
mov
jno
add
add
jle
adc
das
mov
add
pop
inc
int
pushl
cmpsb
jae
mov
aam
addl
inc
push
mov
aam
fidivl
xor
ss
incl
loopne
aaa
pop
test
fs
cmp
xor
repnz
fcmovnb
xlat
jne
loop
aam
adc
add
fisttpl
fldcw
push
xchg
lret
xor
dec
sub
js
enter
add
ljmp
aad
in
push
out
cmp
fucom
popa
mov
dec
push
sbb
jg
dec
in
push
fs
mov
or
aad
pop
cmpsl
pop
pop
ret
test
stc
fcomip
data16
sti
ss
jge
ja
pop
jge
pop
ret
repnz
cmpsb
jbe
incl
rcll
sahf
imul
dec
push
vmaxps
in
in
sbb
sub
dec
jnp
cmp
mov
das
xor
pop
outsb
push
add
dec
xor
aaa
arpl
dec
imul
xor
adc
dec
adc
cli
pusha
ss
subb
push
sbb
call
cld
jp
jge
sub
test
dec
jne
mov
dec
clc
lret
push
lcall
pop
gs
xor
cltd
js
mov
push
xchg
push
sub
mov
aas
test
in
in
pop
add
in
xchg
xor
push
jecxz
ffreep
mov
add
add
incl
inc
xor
popf
or
out
call
sub
bound
repnz
jmp
ljmp
ret
lret
repz
repnz
push
fistps
inc
sub
mul
mov
mov
lahf
rorb
test
push
sbb
jmp
pop
sbb
xchg
bound
ds
cs
fistpl
mov
test
cld
pop
lcall
lret
jecxz
and
sbb
jg
and
imul
dec
jnp
dec
dec
sub
pop
stc
and
decl
jecxz
mov
cld
call
and
dec
sbb
fisubrs
bound
sub
or
jl
mov
mov
mov
jne
or
inc
into
pop
mov
inc
add
call
decl
call
aad
xchg
pushf
and
clc
in
fwait
xor
movsb
or
add
call
dec
ja
mov
mov
sbb
xchg
pop
call
push
xchg
decl
and
mov
std
pop
dec
pop
jno
sub
jns
sbb
loopne
adc
adc
fs
pop
popf
sbb
filds
add
pushl
push
pop
mov
dec
pop
into
nop
int
das
and
sbb
gs
mov
push
pushl
xchg
ja
mov
flds
push
int
push
mov
aas
scas
push
test
mov
pop
push
scas
sub
xchg
pop
nop
sbb
adc
push
dec
inc
xlat
cld
lods
sahf
sub
xchg
push
aas
rcrb
jnp
sub
call
loop
test
cmp
sbb
aaa
sbb
mov
adc
incl
sbb
mov
in
in
ljmp
decb
or
xchg
leave
imul
ss
mov
mov
push
pop
dec
and
fxch
in
lcall
inc
jne
in
ret
pop
outsl
sbb
movsl
fstl
stos
dec
add
dec
test
fistl
jb
popa
xor
repz
aam
inc
push
cld
adc
inc
push
popf
push
fidivl
pop
decl
adc
and
outsb
out
xchg
mov
adc
add
call
repz
mov
out
mov
sti
dec
out
jl
sub
pop
mov
xor
fdivrl
xchg
insl
gs
les
scas
adcb
call
cli
jle
lods
mov
and
roll
sub
mov
jae
xor
jae
xlat
test
xor
jle
inc
rcrl
lods
pop
jl
inc
fsub
mov
rcll
push
popa
out
push
mov
test
jae
adc
xor
dec
shr
cmp
mov
dec
iret
or
cli
dec
test
cmp
sbb
nop
sub
pop
mov
jmp
and
dec
xor
pop
sub
call
dec
leave
cmpsl
inc
ds
cmp
inc
pushf
cmp
adc
push
inc
and
dec
push
mov
aas
jmp
add
and
mov
cmp
xchg
jle
repz
lahf
xchg
repz
and
mov
mov
or
mov
push
fnstsw
xchg
adc
push
jne
jge
mov
jmp
push
fimuls
fwait
push
test
fsubs
out
jae
mov
popf
repnz
jl
hlt
pop
imul
cmc
mov
ss
shlb
outsl
jns
sbb
dec
std
and
mov
repz
lcall
ffreep
push
xchg
cmpsb
dec
sbb
arpl
aas
mov
push
decl
lcall
xor
movsl
arpl
outsb
es
decl
mov
xor
mov
cmpsl
imul
aas
xlat
aaa
sub
jmp
inc
mov
int3
pop
xchg
cmp
movsb
mov
xor
rcrl
cmp
xor
sub
jmp
xor
dec
push
out
mov
pop
subl
mov
sbb
or
mov
call
jmp
fidivl
out
xchg
or
shl
aaa
mov
pop
inc
hlt
fnstenv
aad
ljmp
add
jl
push
add
xor
mov
jl
xor
pushf
mov
fcomip
ljmp
jle
dec
cmp
jns
mov
sarl
imul
adcb
sub
loopne
push
sar
bound
imul
pop
mov
imul
std
pushl
fisttpll
mov
cmp
popa
repz
jmp
sub
inc
sbb
inc
lea
pop
xor
test
inc
scas
aaa
je
inc
movsl
iret
push
jmp
inc
imul
jmp
sub
lds
inc
push
orl
push
pop
sbb
cmp
push
jnp
inc
aam
pop
push
out
loope
daa
rclb
mov
xor
loop
lcall
ljmp
xor
jns
add
cli
mov
cwtl
xlat
iret
roll
clc
call
das
nop
jp
jae
push
outsl
ret
jle
lods
stos
std
mov
mov
add
mov
call
stos
push
mov
rcrl
dec
xchg
add
dec
jnp
mov
xchg
insl
ljmp
push
mov
xlat
or
pop
push
push
int
add
loope
ja
flds
lds
dec
mov
cmp
decl
mov
push
ja
inc
fadds
xchg
lea
mov
mov
mov
jmp
imul
mov
imull
nop
push
mov
lock
inc
xor
push
jmp
add
cmp
pop
mov
xlat
fbstp
adc
pop
aaa
daa
pop
inc
adc
inc
lds
call
loope
xchg
xchg
push
mov
sub
fdivr
cmp
push
xlat
mov
adc
mov
sbb
movsb
jg
jmp
hlt
ret
xlat
ljmp
jb
sti
aas
fwait
iret
aad
lods
addr16
mov
and
sbb
pop
stc
int3
adcl
es
les
sub
xor
pushl
leave
cs
sub
pop
jbe
dec
pusha
pop
scas
add
and
jmp
out
cmp
mov
and
sub
dec
mov
pop
loopne
stos
pop
pop
push
or
inc
into
mov
mov
jne
ret
in
pushl
ja
imul
push
xlat
insb
jmp
mov
mov
cmp
mov
mov
std
xlat
cmpsb
push
outsl
sub
lea
call
int
cmp
inc
rcrl
adc
aaa
call
sbb
push
xor
mov
fsubs
ds
sbb
fs
sti
xchg
or
imul
add
das
sar
jb
outsb
pop
mov
clc
fchs
sbb
inc
in
icebp
mov
mov
pop
jae
dec
mov
adc
outsl
adc
add
inc
jbe
iret
xor
dec
mull
das
sar
loopne
les
mov
pop
push
sti
cmp
lahf
xor
jmp
mov
nop
push
mov
mov
sti
into
test
xchg
or
mov
jmp
int
push
and
pop
aad
fwait
cmp
dec
dec
sbb
pop
addr16
cmp
mov
mov
lret
mov
outsl
mov
fwait
mov
and
out
cld
dec
lcall
rcll
dec
cli
pushl
pop
movsl
repz
inc
and
in
daa
mov
cmpb
pop
adcl
scas
sbb
cwtl
xor
mov
cmp
mov
aad
cld
mov
dec
enter
enter
fs
pop
fistpl
inc
inc
adc
enter
incl
mov
pop
inc
dec
jge
cmpl
mov
inc
mov
jns
js
jne
mov
xchg
push
adc
dec
jno
mov
xchg
aaa
lods
cwtl
push
loope
sbb
in
inc
dec
dec
iret
das
jns
cli
adcl
adc
shrb
dec
or
fstl
mov
adc
add
scas
push
xchg
xchg
clc
sbb
cmpsl
fcmovnb
sub
decl
jl
dec
inc
icebp
xor
sbb
lock
test
shlb
bound
incl
cld
inc
and
jbe
add
xchg
aaa
jecxz
movsl
pop
mov
inc
lcall
test
dec
std
stc
inc
push
adc
out
jnp
push
or
push
js
test
add
push
lds
rorb
cmp
into
les
test
jno
cmpl
loopne
pop
cld
sti
int3
jle
inc
pop
testb
push
cwtl
pop
mov
out
xlat
popa
jno
lret
push
push
adc
call
outsl
pop
pop
inc
test
xchg
add
xlat
mov
dec
mov
xchg
lods
cmp
fwait
movsb
lock
sub
popa
jb
shl
mov
ljmp
xor
push
shll
add
xlat
bswap
sbb
sbb
cli
das
push
mov
jg
ljmp
push
fidivrs
sub
inc
xchg
inc
cmpsb
in
sub
cli
pop
dec
xor
imul
mov
leave
mov
lock
mov
ficomps
out
add
sbb
aad
mov
rclb
popf
stc
cmp
xchg
repz
arpl
and
test
incl
mov
jno
inc
adc
mov
daa
xchg
out
pop
or
sti
arpl
jg
cwtl
das
jp
push
jge
add
out
push
fs
and
add
push
fidivrl
or
adc
lea
scas
sbb
mov
lods
pop
pop
lahf
inc
push
push
mov
call
decl
mov
jns
hlt
pop
and
gs
inc
pop
dec
jo
or
mov
sbb
dec
pushl
cmp
xchg
int3
ds
enter
xchg
inc
loopne
push
stc
pop
mov
push
cmp
loop
ljmp
or
shlb
xchg
icebp
dec
jmp
mov
popa
mov
sub
or
cli
fs
mov
mov
lock
xlat
dec
arpl
and
test
sub
sarl
jbe
aas
repz
cmp
add
or
xchg
call
in
cmp
dec
cmp
dec
cld
cmp
iret
fwait
pushl
or
mov
cmc
sub
xor
mov
jecxz
in
pop
and
and
jge
arpl
cld
jl
pop
sub
mov
int
jg
add
clc
add
std
inc
popa
push
push
lret
cmp
inc
icebp
add
mov
adc
push
jae
call
jae
mov
cmp
ds
push
xor
movsb
jp
mov
push
xor
es
inc
mov
xor
sub
or
add
mov
fsubl
mov
xor
cmp
cmp
call
jbe
rorb
in
lods
xorl
enter
sbb
push
mov
decl
sbb
pop
ficomps
push
ffreep
sti
pop
and
add
pop
mov
jle
inc
dec
scas
ja
xchg
push
mov
clc
pop
adc
in
stc
sbb
loop
mov
inc
test
stos
das
lcall
incl
pusha
xor
test
popf
dec
sub
or
pop
xor
and
push
xchg
shl
lret
adc
adc
jo
js
and
mov
les
mov
sahf
mov
fcoml
imul
out
pop
scas
ds
cld
lcall
enter
jns
inc
pop
call
push
jno
pop
and
sti
aas
aaa
inc
cmp
cmpsl
idivb
dec
aam
sbb
cmp
cmpsl
lods
mov
in
outsb
xchg
fimuls
lock
lcall
aaa
mov
lods
cmc
sub
inc
inc
push
xchg
mov
mov
cmp
nop
sub
cmp
fmulp
and
outsl
divb
mov
cmp
ret
fiadds
inc
lds
mov
jecxz
dec
jmp
cmpsl
xchg
mov
ja
in
mov
jb
inc
out
sub
mov
or
loopne
jl
push
jg
lcall
pop
xor
xchg
out
cmp
rolb
or
dec
lds
adc
or
cmc
movsb
mov
cld
pop
cmp
popf
lea
push
mov
sti
xor
leave
inc
jecxz
fcmovu
sub
test
jle
dec
dec
pop
jbe
fs
xchg
pop
enter
jge
and
popa
mov
lods
dec
mov
bound
js
mov
sbb
fisubl
aam
pop
adc
xchg
addr16
inc
or
mov
sub
enter
jmp
hlt
mov
mov
sbb
xchg
mov
fwait
add
aaa
out
aad
stc
mov
repnz
enter
jo
pop
xor
in
mov
or
mov
incl
call
js
pop
sbb
dec
out
pop
sbb
aas
xchg
stos
cli
rorb
xchg
xor
outsl
decl
arpl
into
mov
imul
push
sahf
std
imul
sub
mov
nop
adc
es
shll
mov
push
mov
dec
xor
jl
incl
rcrb
mov
js
push
sar
push
sbb
sub
pop
inc
sub
xchg
push
cmp
insb
add
stos
xchg
pop
outsl
mov
push
adc
mov
inc
push
mov
scas
out
into
xchg
add
jnp
sti
push
jmp
xchg
outsl
mov
je
mov
inc
mov
xchg
stc
and
mov
aas
jo
push
mov
loopne
fnstsw
xor
adc
push
add
xlat
out
mov
ljmp
loopne
add
jbe
in
addl
and
adc
cltd
mov
xor
xorb
ljmp
and
xchg
movsl
enter
push
out
ljmp
out
out
test
loop
lahf
push
cld
movsl
pop
lret
mov
mov
or
mov
inc
mov
ja
cli
jmp
mov
jns
lahf
or
xchg
stos
out
lcall
aaa
fadd
ja
lods
mov
pop
push
push
jne
das
lds
cmpsl
inc
mov
pop
andb
jmp
lret
mov
pushf
shrl
push
xchg
int3
fsub
sbb
sbbl
sar
pop
popa
jmp
cmp
loopne
sub
mov
mov
call
dec
imul
outsl
rorl
jb
movsl
subb
ds
fucom
add
mov
sti
popf
imulb
idivl
shlb
imul
call
sbb
sti
loope
pop
inc
sub
movlps
cmpsb
lahf
push
shrl
mov
push
mov
dec
ret
enter
jae
xor
stos
into
jno
xchg
pushl
sar
push
or
addr16
cmp
daa
out
mov
call
rolb
adc
mov
mov
cmp
fwait
jge
cmpl
call
fistps
out
mov
rcrw
divb
push
pop
mov
xor
fiadds
cmp
cmpsl
sti
sub
mov
loopne
incl
scas
mov
cwtl
and
cmp
push
mov
shrl
xchg
fwait
sub
lcall
clc
mov
sub
lods
nop
bound
mov
shlb
lret
dec
cmpsl
cmp
popa
cltd
popf
inc
mov
icebp
iret
das
jne
dec
sahf
dec
bound
sub
test
loope
sar
setno
dec
mov
aam
mov
push
and
fildll
pop
lods
pop
cltd
int3
insl
data16
arpl
jb
loopne
inc
pop
scas
xchg
sub
or
push
xor
dec
stos
jle
inc
push
cwtl
out
test
jae
pusha
in
mov
and
outsl
cli
pushl
cmp
lods
int
inc
cmp
test
in
lods
cmp
mov
movsl
orb
dec
dec
test
mov
sub
inc
mov
fidivrl
shrb
mov
pushl
fcomps
mov
or
mov
mov
scas
jecxz
enter
mov
sti
mov
loope
dec
mov
pop
inc
fdivr
ficoml
lret
iret
push
xchg
cmc
ss
cmc
mov
loope
clc
push
and
pop
or
hlt
js
push
sub
movsl
hlt
scas
inc
mov
out
lds
test
ljmp
xchg
lcall
or
cmp
mov
shlb
dec
mov
and
add
jge
inc
sub
lcall
xorb
into
xor
out
xor
fs
ficoml
adc
and
dec
cmpsb
aam
out
clc
in
xor
xchg
lods
jae
cld
nop
mov
in
push
mov
nop
inc
cwtl
test
cmc
inc
addr16
stc
pusha
pop
fidivrl
cmp
mov
aad
or
pop
pop
mov
mov
shll
lock
and
mov
pop
cmp
call
mov
call
cld
dec
push
test
xor
scas
sbb
iret
leavew
cld
jno
dec
repz
sbb
jg
dec
inc
fdivr
nop
fstps
or
ds
and
jle
rolb
incl
or
enter
xor
adc
adcl
adc
insb
je
jmp
mov
mov
xor
lods
pop
push
add
sbb
cmc
into
loopne
mov
add
pop
icebp
ljmp
arpl
rcrl
dec
in
mov
shlb
mov
sti
addl
movsl
lcall
movsb
adc
sbb
mul
xchg
scas
cwtl
jmp
popf
mov
sbb
or
bound
ds
jne
jmp
add
incl
jbe
inc
push
adc
cmpsl
jb
add
mov
ljmp
rolb
mov
xor
fcmovu
xchg
sarb
lock
jmp
push
mov
pop
call
inc
into
sub
ficomps
inc
push
cmp
decl
push
call
imul
inc
loope
push
rcll
adc
loop
das
pushf
lcall
addr16
xchg
imul
dec
sbb
mov
cwtl
ljmp
lret
out
out
ljmp
adc
insb
and
fimull
orl
loope,pn
in
ret
jo
fs
cmp
mov
enter
arpl
pusha
ljmp
and
mov
out
test
pop
mov
stc
ja
dec
and
movsb
add
mov
cwtl
cmpsl
addl
mov
dec
xchg
cld
popa
arpl
mov
pop
xchg
xchg
xor
ficoms
jle
mov
adc
imul
xor
insb
leave
in
xor
int3
mov
jle
das
push
jle
dec
fdivp
or
add
lcall
mov
arpl
cli
jns
inc
mov
shlb
mov
sub
cli
pop
lock
stc
jne
lock
dec
adc
cmp
pop
inc
adcb
cmpl
pop
dec
dec
xchg
cmp
sbb
cmpsl
nop
iret
shlb
jmp
push
icebp
scas
mov
cmp
pop
ss
xchg
jmp
dec
sub
add
add
mov
jmp
mov
jbe
addr16
dec
adc
out
mov
mov
jg
mov
hlt
addr16
movsl
stos
or
and
cwtl
ss
cli
in
xchg
mov
sub
fmull
push
sahf
popa
das
int3
movsb
mov
pop
lea
das
call
icebp
mov
dec
pop
lods
dec
cmpsb
mov
or
xchg
aaa
adc
or
aaa
or
push
arpl
test
push
pop
and
ror
jns
jl
hlt
lcall
loop
dec
sahf
scas
cmp
or
mov
cs
and
icebp
pushl
cmpsb
out
ds
push
mov
jg
lcall
call
in
shll
jp
lahf
pushf
dec
or
popa
mov
cmpb
cmpsb
sub
sbb
cs
mov
inc
mov
lret
out
lcall
inc
test
ljmp
jmp
std
rcll
add
jb
dec
nop
fdivl
pushl
lods
hlt
or
mov
into
in
test
mov
push
pop
out
xchg
dec
insb
jge
call
loopne
xchg
clc
push
ret
fildl
mov
xor
mov
arpl
fadd
pushl
xchg
cmp
xchg
out
pop
mov
imul
and
mov
cs
push
or
cmp
icebp
testl
pop
jae
mov
imul
mov
cmpsb
jmp
mov
cmp
lret
andb
push
iret
add
sar
pop
je
mov
pop
mov
xor
mov
xchg
lret
decl
lock
sub
mov
and
sbb
sub
rclb
inc
imul
sbb
or
arpl
repz
pushl
fistps
inc
add
aam
mov
data16
and
xchg
popf
adc
fiadds
call
jmp
jae
arpl
pusha
sub
cmpsb
jmp
cmp
adc
test
xchg
subl
cmp
pop
xchg
push
jbe
orb
xor
in
out
movl
incl
insb
fidivrs
xchg
fidivrs
pop
hlt
shll
xor
push
adc
fdivrs
cld
imul
stos
mov
xchg
push
pop
fs
cmp
mov
pop
cmp
jmp
rcll
mov
mov
fisttps
jbe
test
jmp
cmpl
loopne
fdivl
sarb
xor
push
test
sbb
fistps
loopne
xor
rorb
adc
dec
pop
pop
ss
pushl
das
insb
popf
out
or
sub
movsl
mov
adc
stc
sahf
cmpsb
lret
out
jg
out
decl
push
jbe
jmp
iret
mov
and
jbe
and
and
jecxz
leave
je
push
call
faddp
cmp
psrlq
mov
xor
add
jno
pushl
inc
fwait
or
pop
sbb
inc
push
dec
test
jb
cmp
lods
mov
pop
jbe
ljmp
in
les
stos
bound
loope
sub
rolb
adc
push
jge
push
lcall
nop
cmp
scas
xchg
adc
and
cld
in
insb
inc
push
insl
std
jns
cmova
ljmp
jbe
jl
sbb
int3
fsubrs
jnp
cmp
inc
jle
fwait
adc
pop
xor
mov
jmp
lock
iret
or
mov
adcl
adc
push
or
lcall
loopne
sbb
dec
mov
fdivl
mov
mov
jmp
xor
lds
or
jbe
clc
mov
xor
xor
addr16
xchg
mov
sub
ljmp
jl
ja
pop
bound
dec
mov
out
pop
push
cltd
mov
call
mov
push
ljmp
lret
mov
xchg
out
and
mov
mov
cmp
add
add
fidivrl
imul
jmp
cmpsb
dec
aad
and
test
xchg
jns
mov
aam
ffreep
pop
and
xor
pop
jmp
xor
hlt
adc
aaa
xor
add
arpl
lds
cmp
mov
xor
pushl
icebp
pop
xchg
rorl
or
sub
or
jmp
xchg
loop
jmp
pushl
add
cmp
test
sbb
mov
mov
jb
call
ljmp
fnsave
inc
fs
and
sub
sahf
ja
arpl
push
fidivrs
sub
inc
mov
inc
out
pop
mov
xchg
jbe
adc
mov
and
ljmp
ljmp
movsl
dec
and
in
rcrl
subb
inc
push
or
jnp
jmp
je
mov
dec
jp
xlat
mov
sub
inc
lods
pop
aas
jmp
sub
fistl
fsubrs
fsub
inc
jnp
lret
adc
jg
pusha
insb
mov
ljmp
or
ja
sub
filds
pushl
movsb
stos
dec
out
mov
xor
decl
lock
enter
ficompl
mov
cwtl
inc
cmpsl
xor
je
push
pop
adc
call
jae
mov
jl
pushf
hlt
into
mov
push
inc
mov
fisttps
push
rcrl
incl
jne
mov
push
push
pop
pop
push
fcoml
dec
and
pushl
fs
std
sbb
sarb
push
nop
les
int
mov
or
jmp
lock
or
jne
pusha
ret
pop
sub
andl
enter
call
cld
scas
dec
mov
inc
push
xchg
push
fisubrl
inc
adc
sar
jmp
sub
les
jp
movntps
out
pop
fs
lods
pop
jg
mov
arpl
add
sbb
mov
mov
mov
arpl
call
push
sub
dec
xchg
mov
add
lcall
fidivrl
jbe
add
mul
fstl
negl
or
mov
ret
incl
scas
push
or
push
and
daa
fcoml
outsl
aaa
add
pop
sbb
lcall
jmp
lods
jmp
lods
adcb
fstp
outsb
sahf
dec
mov
cli
sub
pushl
xor
outsl
jb
sbb
rorl
addr16
repnz
into
or
sbb
sub
les
jmp
das
jmp
and
pop
xchg
or
jbe
xor
outsl
addr16
cmp
jmp
adc
lods
call
testb
sahf
jecxz
mov
out
inc
adc
in
add
decl
or
mov
sbb
lcall
incl
push
repnz
mov
xchg
pop
cld
lcall
sub
mov
ljmp
idiv
and
in
sbb
aaa
std
mov
and
aad
add
out
or
lds
jbe
add
decl
push
dec
aad
xlat
xchg
push
jmp
xchg
loopne
mov
loopne
data16
fidivrs
add
mov
addl
std
mov
outsl
in
je
aaa
fwait
imul
roll
jmp
repnz
pop
fwait
stc
push
loope
out
push
insb
add
mov
and
xchg
dec
decl
push
pop
imull
loop
mov
sub
cmpb
jge
mov
out
push
xlat
shrl
scas
cli
incl
cmpsb
jmp
aad
pop
and
fmuls
pop
sar
call
push
shll
or
push
mov
imulb
int
push
incl
xchg
stos
rcrb
es
mov
out
xor
mov
or
dec
lcall
ja
jo
cmp
loopne
lret
push
pop
lock
mov
and
jmp
add
lods
add
inc
cmp
jns
test
fs
adc
xchg
test
in
sbb
decl
roll
lods
inc
andl
xlat
in
enter
mov
or
cmp
loop
cmpl
mov
push
mov
pop
jle
cwtl
mov
or
or
aas
clc
in
mov
add
fsub
movsw
mov
adc
or
or
and
jo
mov
mov
add
push
jl
mov
ljmp
dec
pop
sbb
int
xor
xor
mov
inc
je
mov
inc
mov
stc
add
dec
sbb
jg
icebp
inc
ja
hlt
call
dec
fldcw
js
pushl
sub
aaa
icebp
inc
inc
loop
cmp
dec
cmc
xor
push
out
clc
pushl
repnz
xchg
pop
jge
mov
dec
jle
add
jbe
es
icebp
inc
movsl
fcompl
mov
roll
xor
ljmp
out
adc
xchg
mov
adc
sub
fsubr
jmp
stc
adc
out
mov
dec
push
jp
push
test
jne
test
inc
ljmp
fadd
jmp
out
ss
pop
loopne
pop
in
cli
pop
shll
dec
sbb
in
cltd
popf
mov
addr16
xor
inc
jns
imul
enter
lcall
and
loopne
lods
pop
sbb
mov
outsl
dec
xor
call
cmpl
mov
and
sbb
push
cltd
pop
xchg
ret
es
out
ljmp
cli
inc
movsl
sub
lret
mov
mov
in
mov
clc
mov
rcr
lock
dec
and
dec
xor
xchg
inc
jmp
dec
add
jne
inc
xor
orl
push
stos
arpl
inc
pop
inc
dec
les
fcompl
mov
and
out
in
jo
mov
jmp
fisttpl
dec
pusha
divl
pushf
mov
and
cmp
sub
test
xchg
sbb
mov
mov
jecxz
sub
lahf
adc
xorl
push
sub
and
cmp
add
xor
std
imul
pop
es
fcoml
adc
aam
lods
jne
jg
add
mov
loope
ss
js
decl
test
push
dec
ja
rcrb
aas
inc
push
adc
push
insb
xor
inc
addr16
es
xor
jmp
and
mov
ss
iret
cmpsb
inc
lahf
jmp
int3
testb
pop
test
sbb
mov
fnstcw
in
std
mov
xchg
xor
mov
bound
mov
bound
fdivrp
call
stc
inc
mov
mov
movsb
int3
mov
mov
pop
push
clc
xchg
add
mov
jne
xor
inc
sbb
mov
mov
lock
jg
test
push
push
cltd
dec
rorl
add
pushl
push
das
pop
movsl
jmp
pop
mov
mov
popf
mov
ds
or
sub
insw
jge
and
pop
stos
aaa
add
mov
fwait
shll
add
ret
xchg
jmp
incl
push
daa
imul
inc
stos
pop
imulb
shl
in
mov
jg
jg
mov
dec
popa
loope
dec
dec
pusha
sahf
out
fsubrs
dec
cmp
arpl
ljmp
jo
mov
bound
testl
ficoml
lret
test
fsubl
mov
arpl
daa
mov
sub
add
mov
icebp
in
pop
jb
popa
inc
push
fisubrs
ljmp
pop
cmc
pop
add
xchg
lock
decl
jg
incl
add
mov
pop
js
and
xchg
jge
icebp
leave
add
lcall
pop
pop
mov
sbb
jle
sbb
push
inc
sub
push
adc
sbb
ret
cwtl
mov
cld
not
out
stos
data16
jecxz
cmpsb
outsb
push
ljmp
dec
out
mov
cmp
xchg
push
outsl
mov
mov
mov
mov
mov
cmp
cli
or
xor
cmpsl
iret
add
pop
and
sbb
in
mov
mov
inc
call
loopne
xor
addb
fists
iret
in
cltd
xor
mov
lcall
stos
add
sbb
ds
jle
ret
sbb
sbb
add
xchg
push
jne
fisubrs
adc
or
add
jg
icebp
addb
je
sbb
or
fxam
imul
push
das
sub
aam
ja
adc
stos
pop
je
stos
cmp
or
fdivr
decl
sbb
fs
pop
push
pop
and
adc
loopne
pop
or
cld
pushl
xchg
add
in
out
xor
ret
inc
sbb
jge
xor
sbb
mov
cld
call
push
fistpl
mov
stos
adc
cmp
mov
call
outsb
xor
es
shlb
xchg
fxch
std
std
or
push
fcomp
fdivs
shrl
inc
sub
push
or
mov
mov
int3
sbb
insb
and
jmp
xchg
je
mov
insb
aaa
xchg
xor
push
cmpsl
mov
jg
cmp
jbe
push
add
imul
pop
cmp
xor
xchg
pop
sbb
and
incl
ljmp
aaa
push
jb
nop
and
call
xlat
scas
pop
ret
mov
jmp
int
notl
pushf
loope
xchg
lcall
lcall
add
jl
xor
inc
xchg
push
popf
pop
and
inc
push
xchg
daa
push
je
out
pop
aaa
mov
icebp
mov
arpl
mov
stos
inc
ds
stos
loope
jle
add
out
xor
stc
push
cmp
cmp
sbb
rcl
xor
in
adc
mov
ljmp
adc
add
rcl
push
in
sub
int3
loope
leave
dec
ja
imul
or
decl
pop
and
cmp
dec
call
jg
lds
scas
clc
ljmp
xor
stos
mov
fcmovnu
dec
frstor
insl
test
dec
call
std
repz
xor
cli
inc
ret
lahf
loop
scas
sub
or
popf
xchg
aam
dec
mov
inc
add
clc
cmp
jp
bound
js
mov
insb
popf
dec
push
std
jg
pop
add
jle
pop
test
cmc
sub
jge
mov
fbstp
jp
xor
mov
ja
data16
movsl
push
or
mov
in
aaa
jecxz
sar
adc
xchg
add
adc
dec
xor
mov
lcall
xor
dec
cmp
pop
mulb
aad
push
in
repnz
add
jmp
out
mov
add
stos
mov
imul
push
inc
ja
lock
lret
add
arpl
or
clc
inc
pop
xor
cli
dec
loop
das
loopne
adc
adc
inc
jns
sbb
jmp
imul
sub
call
loopne
fnstsw
push
jp
xor
fs
lods
cltd
xor
cli
in
jecxz
push
add
call
jl
ljmp
into
aam
pusha
lock
fistpll
adc
stc
ja
adc
fwait
in
cmp
xchg
std
pop
pop
cmp
fistl
add
ljmp
leave
mov
jecxz
jmp
js
cs
adc
aam
xor
xchg
jo
mov
mov
and
std
jns
vpcmpeqw
popf
xchg
stc
sti
cmp
iret
outsl
mov
xor
lds
add
push
pop
loopne
sar
dec
dec
fwait
add
pop
out
ret
xlat
stos
mov
iret
mov
mov
ljmp
inc
test
into
push
mov
insl
lret
out
inc
inc
out
xor
loopne
lds
jmp
mov
movsb
addr16
cmp
shlb
jno
incl
stos
xchg
pop
arpl
mov
sahf
ret
cmpsl
inc
test
cli
gs
jmp
fcoms
xchg
add
aad
lock
pop
adc
pop
pop
out
push
fstpl
loopne
mov
imul
inc
cmpsl
jne
adc
clc
xor
js
pop
jnp
incl
dec
sbb
xor
pop
repz
sub
sbb
sbb
lret
cli
icebp
cld
push
es
pushf
pop
mov
xor
mov
dec
xor
mov
jmp
mov
push
stos
cmp
dec
mov
add
fadd
inc
popf
and
inc
adc
ss
jbe
js
lea
decl
add
sarb
dec
ljmp
mov
loopne
sub
je
mov
adcl
adc
fisubl
pushf
in
pop
test
lret
stc
in
inc
sub
scas
inc
mov
decl
push
bound
icebp
mov
shl
push
jl
popf
inc
incl
fs
movsl
packssdw
cld
dec
or
shl
dec
adc
daa
rorl
and
sub
dec
pop
fildll
mov
addl
xchg
or
cli
lea
jb
xchg
incl
rcll
sbbl
fnstsw
pop
mov
mov
stc
mov
adc
gs
call
daa
fwait
ss
andb
dec
pop
xor
inc
mov
mov
test
inc
decl
xor
aad
adc
ss
or
pop
mov
mull
jg
incl
loope
push
leave
xchg
pop
movsl
arpl
test
mov
sub
adc
incl
ja
cld
dec
sbb
out
push
orb
or
jge
stos
in
jp
aad
decl
lock
in
data16
movb
lahf
neg
push
cmc
add
cmp
add
cli
and
idiv
addb
sahf
pop
dec
or
jge
mov
cmc
dec
pop
cmc
push
jg
sub
sub
out
add
jp
mov
ljmp
cmp
mov
into
insb
cmp
jo
iret
aad
into
dec
adc
mov
add
sub
mov
shr
icebp
xor
mov
test
cmp
mov
stos
lods
push
in
inc
sub
aaa
shrb
pop
sbb
jae
imul
out
dec
xchg
vmovq
jns
jge,pn
adc
cli
ljmp
add
rcrb
xchg
dec
adc
fidivs
pop
mov
xlat
push
push
sarl
in
in
jnp
sub
ljmp
mov
xchg
lods
inc
cmp
dec
sti
and
and
jmp
mov
loop
ret
insl
xor
ljmp
cmp
jp
push
jmp
mov
or
sbb
cmp
push
inc
cmp
hlt
xor
cmc
jne
pop
mov
ficompl
add
or
scas
jns
ljmp
loop
imul
add
lods
and
mov
sub
shlb
std
push
aad
cmp
enter
or
adc
pop
int
fs
mov
into
dec
ss
decl
in
push
sbb
repnz
add
mov
pop
std
imul
insb
ljmp
cmpsb
notb
push
add
in
add
pop
out
das
sbb
movsl
pop
pop
sbb
mov
jmp
fs
adcl
mov
ljmp
add
and
sbb
ret
daa
out
cmpsl
inc
add
decl
stos
nop
in
push
dec
cmpsb
xchg
fyl2xp1
shlb
mov
jge
jb
arpl
decl
inc
push
sbb
inc
aam
lret
pop
rclb
lods
scas
insl
cltd
xor
ss
adc
mov
cli
sub
cld
mov
inc
and
lods
mov
ds
jmp
mov
push
mov
outsb
xor
call
mov
dec
adc
bound
jp
lahf
add
bound
movsb
test
jmp
add
repnz
mov
mov
xor
vpsubd
stos
push
lods
lods
das
in
xlat
jmp
push
cmp
stos
mov
andb
mov
mov
push
mov
xor
incl
setp
pop
xor
lock
lea
movsl
push
ljmp
pop
lods
pop
ljmp
lcall
daa
mov
int
addr16
jp
push
fiaddl
lods
hlt
movsl
adc
mov
mov
sub
mov
repnz
mov
inc
lea
loope
add
call
fwait
call
pop
cmpsb
sbb
in
adc
stos
stos
bound
and
incl
fwait
jle
iret
int3
fcoms
adcl
test
fwait
pop
out
cmpsb
mov
test
mov
sbbl
sub
iret
sbb
jg
daa
xchg
es
sub
shrl
fildll
add
ret
in
pop
pop
xchg
enter
cmc
cmp
ret
fsts
inc
push
nop
adc
mov
add
inc
cwtl
push
cmpsb
fidivrs
lcall
std
bound
sahf
test
jae
dec
push
mov
pop
inc
pop
dec
sahf
subl
addl
dec
mov
jg
rorl
sub
and
jnp
fildl
push
outsb
hlt
or
dec
cmp
enter
lahf
fs
push
std
incl
enter
adc
andb
in
adc
adc
ljmp
push
inc
addr16
mov
dec
pop
rorl
mov
push
adc
std
hlt
leave
movsl
mov
lcall
incl
push
push
ja
gs
xchg
sub
mov
inc
xlat
or
leave
push
int3
or
push
loop
jne
cmp
fisubrl
sbb
cmpsl
xchg
inc
and
in
mov
stos
add
mov
push
xchg
cmp
hlt
pop
cmp
cmp
loopne
jmp
fldl
sahf
sbbl
jne
mov
or
pop
fwait
fisubl
sarl
mov
and
insb
push
mov
lcall
in
jecxz
insb
fildll
jb
or
repnz
ds
arpl
dec
imul
xor
cmp
xchg
stos
ja
jg
dec
sub
fs
inc
lock
inc
jp
fistl
data16
xchg
bound
fldenv
stc
fcoml
jecxz
insb
fimuls
xchg
fwait
mov
xor
add
repz
jle
adc
loope
jmp
mov
push
sbb
clc
dec
gs
dec
adc
je
and
lcall
or
cmp
arpl
insb
mov
pop
out
mov
mov
daa
ljmp
sbb
punpcklwd
stos
mov
xor
incl
pop
mov
out
gs
nop
popf
pushf
in
ret
pop
xchg
sub
movsl
lret
cmc
sub
jmp
shll
mov
sbb
scas
jns
decl
sub
imul
inc
fmul
add
aaa
push
idiv
stc
into
or
or
inc
cmc
insl
lock
jle
pop
sbb
mov
add
rcll
gs
mov
mov
pushl
mov
fistpll
mov
mov
cmp
pushl
push
test
leave
jmp
mov
inc
pop
rcrb
popf
in
gs
repz
adc
sar
cmp
fstps
mov
sub
push
popf
movsb
test
rcl
clc
notb
or
data16
mov
pop
jle
es
add
sar
jmp
jnp
dec
pushf
xor
mov
or
fstpl
jl
cmp
call
std
mov
push
cmp
dec
push
dec
add
ret
or
mov
lods
pop
iret
loop
xchg
out
add
mov
in
pop
rorl
fdivr
inc
dec
sbbl
cmp
call
adc
inc
cmpsl
insb
xchg
repz
inc
mov
sar
incl
xchg
mov
stos
stos
inc
xor
add
out
lock
testl
outsl
cli
ljmp
movsb
sub
inc
xor
arpl
jns
notb
jmp
cmp
inc
and
negl
push
cmp
cwtl
stc
sub
fisubl
cld
xor
mov
decl
pop
loop
je
insb
xor
mov
enter
in
xor
sar
fwait
loope
cmpsl
sub
or
and
andb
mov
adc
clc
jmp
loope
outsl
cmpsl
arpl
in
jmp
lcall
jne
or
xchg
inc
aaa
into
cmp
lods
xchg
sbb
lahf
hlt
icebp
mov
mov
or
cmpsb
call
pop
mov
sti
insb
jmp
mov
inc
add
pushl
repz
bound
fsubs
push
test
mov
ljmp
xor
push
xchg
add
dec
dec
xchg
lock
xor
idiv
push
fisttpl
shll
push
ret
pop
aam
pop
cmpsb
mov
clc
clc
mov
mov
rcrl
ljmp
cmp
push
lcall
sahf
mov
jo
decl
sbb
aam
cmpsb
aam
add
and
int
or
mov
or
inc
mov
adc
iret
cmpsb
je
shll
push
mov
dec
jge
lods
fistl
cmp
incb
jno
ja
jmp
xchg
sbb
mov
mov
sbb
push
push
inc
inc
and
test
insb
in
mov
inc
out
std
add
push
cld
dec
mov
jno
xchg
icebp
lcall
test
jecxz
sub
cmc
arpl
mov
jae
test
xlat
push
jne
cmp
add
shr
push
lret
cmp
adc
stc
mov
popf
ret
mov
mov
mov
ret
loopne
or
push
dec
fdiv
jg
pop
mov
cmp
ljmp
mov
movsl
push
in
add
jmp
push
mov
xchg
repnz
add
xchg
icebp
mov
filds
jno
out
jl
jmp
out
movsb
cmc
lcall
jmp
mov
push
dec
mov
mov
and
sbb
sbb
aam
sar
jg
clc
insl
in
aad
sbb
push
movsl
add
jne
call
mov
mov
adc
imul
mov
iret
ljmp
dec
cmpb
pop
fsubs
add
out
jp
lods
sti
call
mov
mov
pop
cltd
lea
or
xchg
out
jle
lret
inc
mov
sub
mov
xorb
insl
cwtl
inc
pop
jecxz
jnp
ljmp
out
incl
insb
inc
sub
xchg
inc
enter
mov
ljmp
dec
incl
into
scas
pop
mov
inc
add
pop
fmull
mov
pop
push
inc
cs
add
push
lock
mov
mov
xchg
push
mov
decl
pop
in
loop
xchg
mov
xor
mov
push
pop
xchg
pushl
std
decl
or
popf
cmc
cmpsb
dec
aaa
cmc
sbb
or
outsl
add
pushf
and
dec
cmp
imul
jg
jg
xchg
outsl
mov
push
imul
cmp
in
lods
jns
ret
hlt
fwait
decl
clts
or
mov
insl
xchg
pop
mov
iret
icebp
lods
bnd
mov
fprem1
jmp
pop
or
jno
jp
call
pop
mov
inc
fcomip
xchg
mov
loopne
xlat
cmp
mov
dec
cmpsl
leave
inc
neg
inc
rcrb
pop
ljmp
push
enter
shlb
pop
ljmp
adc
clc
xchg
scas
sar
out
xchg
call
add
scas
mov
fdivrl
mov
fwait
lds
and
or
push
mov
fisubrs
lret
aas
enter
sbb
mov
sahf
stos
sub
fcomip
out
mov
insb
je
lds
jne
mov
sbb
push
hlt
jmp
xor
roll
mov
shlb
ljmpw
add
dec
jo
xlat
sbb
dec
popa
ljmp
and
xor
and
pop
es
jmp
out
add
pop
adc
push
or
mov
sbb
or
outsl
xor
inc
lock
dec
sbb
das
rolb
mov
decl
xor
stos
test
fimuls
adc
push
mov
lahf
sbb
sub
cmp
push
je
test
call
jno
adc
enter
dec
lods
loope
or
xor
js
fnstsw
pop
test
jmp
lods
lods
call
add
add
lods
fists
aam
cmp
nop
lods
mov
clc
jmp
inc
add
bound
xchg
decl
aam
mov
add
jno
rcl
or
push
lcall
pop
enter
mov
jmp
mov
rolb
xor
int
mov
push
inc
pop
pop
adc
andb
sub
rcr
clc
add
mov
out
add
pushl
jbe
jg
xchg
adc
lahf
test
pop
rolb
gs
jb
cmp
inc
add
jg
sub
adc
push
in
stos
mov
roll
sbb
mov
jg
mov
ljmp
or
clc
je
sbb
jg
das
loop
push
adc
mov
mov
add
ss
into
dec
jl
sub
sbb
xor
in
stos
push
ret
cmp
sbb
leave
jns
dec
xchg
xchg
or
enter
out
inc
call
sbb
push
leave
mov
cmp
inc
jne
jl
loopne
sarl
cmp
mov
rcll
sub
testb
decl
dec
testl
mov
mov
cmp
adc
out
xlat
sbb
clc
mov
jmp
popa
and
mov
mov
sub
add
lcall
mov
pop
add
popf
jecxz
out
or
lock
call
adc
and
add
or
in
out
sahf
hlt
nop
jg
sbb
gs
lcall
push
pusha
xchg
ss
ret
popa
xor
jb
sarl
add
xor
or
inc
hlt
xchg
dec
addr16
xchg
enter
xchg
lea
mov
call
cmp
scas
fs
xlat
cwtl
and
xlat
jp
icebp
jbe
call
pop
insb
mov
in
test
out
jp
sub
lods
aaa
mul
inc
cmc
lds
xchg
xchg
add
ljmp
dec
mov
jl
sub
leave
xchg
filds
jnp
cld
mov
cmp
je
decl
jg
jnp
sub
fcoms
jne
rorb
insl
ljmp
fs
mov
js
pop
cld
ljmp
jnp
sub
adc
sbb
fiaddl
sub
jmp
clc
cmp
mov
ficoml
pushf
gs
xor
scas
dec
xchg
cmc
mov
xchg
mov
enter
pop
push
jmp
xchg
push
fcomps
lahf
add
mov
push
or
xor
dec
inc
inc
stos
call
xor
decl
push
repnz
pop
or
dec
push
fdivp
adc
inc
lcall
fdivr
jmp
mov
loopne
xchg
lds
fwait
inc
pop
lcall
fs
pushl
nop
test
or
movsl
out
jb
mov
cmp
add
mov
lods
into
ja
jmp
in
insb
imull
call
mov
mov
xchg
lcall
jbe
sti
out
add
jmp
call
pop
lcall
out
or
jg
push
push
push
adc
aas
or
lock
and
ret
mov
adc
pushl
cmp
xchg
pushf
arpl
push
adc
inc
inc
or
call
or
aad
call
pop
xor
cmp
hlt
incb
dec
xor
movsb
mov
xlat
dec
xor
jb
mov
push
ffree
repz
or
sbb
xor
mov
out
push
pop
jbe
inc
std
sahf
loopne
pop
pop
shl
mov
jg
sarb
pushl
outsb
ljmp
ds
fdivr
or
inc
cmp
scas
mov
clc
imul
out
nop
cld
ljmp
sarb
sub
sub
fsubl
mov
xchg
incl
or
push
sbb
lcall
lods
dec
out
stos
pop
ljmp
sub
and
push
std
fpatan
les
mov
and
imul
mov
add
iret
push
mov
jge
dec
cwtl
insb
jnp
inc
xchg
cmp
xchg
decl
icebp
and
stos
cmpsb
cmp
out
mov
sub
test
jno
push
das
call
sbb
push
js
stos
mov
sbb
push
scas
mov
arpl
push
mov
std
ljmp
jl
repz
push
test
fidivrs
pop
inc
push
and
adc
inc
sub
decl
js
sub
inc
insl
cmp
sbbl
mov
or
mov
push
decl
pop
adc
or
inc
fadds
xchg
rcl
push
rcll
out
out
pop
inc
jne
call
stos
js
insb
xchg
mov
icebp
aam
adc
adc
clc
iret
mov
adc
test
dec
cmp
xchg
fldl
jbe
aaa
dec
dec
sbb
cld
push
or
mov
scas
sahf
dec
push
lret
ret
push
jmp
mov
out
enter
shll
push
inc
dec
jp
or
stos
and
outsl
or
sub
incl
ss
pop
mov
das
push
xchg
jge
mov
cmpsb
dec
loopne
iret
or
call
ret
jno
sub
hlt
ret
andl
subb
jg
mov
fldt
inc
ja
xchg
or
scas
inc
xor
popa
das
ljmp
sub
sbb
xchg
sbb
dec
pushl
ja
cmc
jp
mov
fsub
fsubrs
xor
sbb
mov
std
or
stos
pushl
ss
push
enter
dec
jbe
iret
div
inc
mov
decl
call
cmp
adc
dec
and
pop
sbb
icebp
js
cli
leave
xacquire
or
rcrl
mov
rcr
sbbb
pushl
cld
xchg
sti
pop
rcr
jmp
and
loope
in
gs
fidivl
cmc
imul
aaa
cwtl
call
ficompl
cs
addb
jo
dec
test
and
fsubl
jbe
fistpll
push
jg
int3
add
fsubl
popa
sbb
push
popa
inc
inc
push
sub
ljmp
xorl
jle
aas
ret
mov
jle
lcall
add
scas
int
test
mov
push
or
dec
xlat
lcall
mov
mov
lcall
scas
stc
int3
addr16
out
xchg
lcall
xchg
inc
sub
into
sti
inc
push
mov
stc
stos
sahf
outsl
sub
imul
jg
jmp
popf
mov
mov
xor
dec
xchg
mov
decl
xorb
out
push
psllq
jb
jmp
jmp
ljmp
lcall
decl
inc
ss
or
rolb
lock
bound
andb
inc
mov
add
addr16
adc
dec
mov
sub
push
xchg
iret
inc
lcall
decl
shrl
and
or
mov
xchg
inc
xchg
in
into
mov
dec
dec
dec
push
enter
and
loopne
aas
das
dec
nop
loop
scas
cmp
divb
decl
jo
dec
mov
js
fwait
test
and
adc
inc
push
gs
cmp
xlat
push
fisubrl
mov
sahf
in
hlt
push
xchg
stos
push
pushf
mov
mov
pop
cmp
lcall
mov
cld
aaa
sub
push
movd
push
sarb
iret
lcall
inc
sbb
xchg
xlat
mov
pop
ss
mov
incl
add
bound
or
loope
cli
das
sub
mov
lret
inc
xchg
das
ret
sub
mov
add
andb
push
inc
or
push
cmp
out
cwtl
in
loop
push
sbb
xchg
add
or
enter
in
fcomip
call
jge
fsubl
aad
pop
lock
in
or
aad
jmp
cltd
pop
xchg
mov
lods
inc
ss
sahf
cmp
popf
mov
and
mov
add
je
jecxz
adc
push
shl
adc
lret
cwtl
jns
mov
mov
mov
add
jecxz
cmc
xlat
iret
and
std
push
pusha
pushl
jg
xorb
jg
mov
inc
sub
inc
jmp
push
rorb
adc
data16
out
jmp
jne
push
jl
cli
push
repz
mov
das
dec
div
jb
cmc
insl
jo
pushl
aam
mov
test
popf
mov
adc
fsub
repz
adc
lret
mov
incl
mov
jb
cmpsl
push
outsl
stos
push
insl
push
mov
sub
pop
ss
cld
fimuls
rolb
mov
cwtl
jmp
into
sbb
mov
sbb
or
aam
jns
shrl
adc
inc
addr16
into
jl
loop
test
ljmp
sbb
mov
popf
icebp
repz
dec
icebp
pop
push
daa
aad
add
or
movsl
cli
dec
hlt
push
stos
les
pop
push
inc
xchg
jge
or
add
stc
ret
add
adcl
int
out
mov
ret
xchg
fs
or
jmp
sub
out
daa
in
mov
adc
xlat
icebp
leave
shll
adc
ds
jnp
dec
mov
sbb
push
cmp
ret
xor
cmc
fists
arpl
imul
mov
mov
pushl
adc
push
inc
mov
sub
cld
subb
adc
les
mov
cli
fcomip
pop
xchg
inc
inc
xchg
sbb
mov
out
add
leave
fwait
roll
imul
fcos
fiaddl
shlb
test
pop
jbe
cmp
call
or
cmp
ss
sahf
sbb
ljmp
incl
scas
imul
mov
enter
scas
testl
in
jecxz
jmp
inc
dec
add
push
fcom
ja
lods
jae
jmp
jo
mov
ficoml
shr
and
bound
adc
cltd
push
or
ja
shlb
outsl
xor
fucomp
addl
in
ljmp
or
push
jp
or
jmp
push
mov
in
xchg
push
add
pushf
adc
xor
add
mov
inc
stos
mov
add
jmp
aas
in
xor
call
lea
jg
shll
inc
dec
jbe
in
mov
daa
insb
mov
dec
mov
inc
and
incl
pop
mov
push
sbb
ret
inc
push
fwait
ljmp
or
lcall
lods
in
or
push
push
push
mov
imul
mov
outsb
lock
test
lret
ja
xchg
test
mov
ljmp
adc
mov
adc
call
fiaddl
test
inc
aaa
push
jnp
mov
mov
jns
js
mov
call
es
mov
pop
inc
xor
mov
mov
mov
out
lcall
jne
pop
cld
call
jae
mov
mov
and
and
lcall
adc
mov
cmp
sub
cwtl
dec
jmp
ret
mov
sbb
or
fs
inc
mov
and
hlt
sbb
jecxz
dec
and
pop
xor
dec
add
cmp
push
fstpl
stos
cmc
cmp
sub
shrl
jp
mov
mov
or
adc
mov
mov
mov
addr16
imul
fsubrs
pop
in
mov
notb
cs
sarb
les
sarl
scas
cmc
in
call
cmc
inc
bsf
or
dec
sar
jmp
lcall
adc
mov
dec
push
sub
sub
sub
jo
ja,pn
xor
test
sub
cmp
scas
orl
xchg
cmp
out
xor
nop
jmp
jo
leave
test
decl
mov
pop
inc
fistps
add
and
daa
or
sbb
lcall
add
add
repnz
hlt
and
fstpt
add
jmp
pop
movsb
sub
mov
add
fildll
or
and
call
fdivrl
xchg
shl
loopne
sbbb
nop
lret
xlat
out
pop
add
lcall
cs
jl
mov
movsb
rclb
pop
xchg
mov
jg
mov
mov
loope
stos
int3
xor
movsb
xchg
or
cld
cmp
dec
jo
mov
repz
push
fldt
add
sub
ljmp
loop
int
mov
enter
popa
stos
sub
jle
mov
decl
xchg
outsb
adc
jns
dec
push
imul
mov
xchg
jecxz
js
push
cld
decl
sahf
cwtl
push
pop
repz
cltd
adc
ficoml
rorb
mov
fsubrp
jmp
out
inc
addl
xchg
lahf
mov
fisubrl
popa
mov
lret
hlt
jl
jb,pn
xor
outsl
mov
jns
xorb
bound
das
outsl
cwtl
imul
mov
pop
mov
ja
pcmpeqd
jg
jmp
xor
imul
adc
xor
sub
sbb
jmp
lea
sbbl
push
setle
shl
jmp
iret
insl
mov
push
cltd
push
ljmp
sbb
call
mov
add
pushf
jns
push
and
jmp
xor
xor
ss
lret
xchg
and
repnz
leave
inc
incl
sarb
arpl
xor
or
and
push
jle
pop
adc
jp
xchg
lods
cmp
je
rolb
sarl
repnz
jge
mov
insb
fwait
test
fidivs
fisubrs
adc
dec
inc
lcall
pushf
cmp
sbb
adc
es
decl
lock
movsb
scas
cmp
push
cmpsb
mov
pushf
popa
ret
pop
jp
mov
jmp
movl
jp
sub
test
add
add
js
xor
out
jg
ljmp
push
push
roll
addr16
loopne
or
imull
int3
das
pop
lcall
xchg
loopne
jl
enter
lods
je
fimull
je
aas
xchg
sti
mov
decl
je
sbb
mov
sahf
push
rcrb
std
outsb
imul
ljmp
jmp
dec
fs
out
pushf
mov
lcall
jg
jae
cmp
xchg
les
roll
push
mov
pop
call
cmp
xchg
fdivrl
outsl
add
scas
stos
loopne
imul
xchg
cmp
inc
cmp
call
clc
std
push
cmp
popf
inc
adc
mov
cmc
xor
cld
imul
push
lret
ss
sbb
dec
pop
dec
lods
insb
pushf
aas
jecxz
test
cld
mov
xchg
insl
mov
lea
mov
addr16
incl
inc
movsl
mov
repz
jl
xor
in
xchg
dec
inc
xor
pop
arpl
xor
mov
incl
cld
popf
idivl
test
fwait
sub
sub
xor
dec
sub
push
mov
loop
stos
pushl
stos
pavgw
adc
inc
push
xor
fs
in
jecxz
lcall
inc
push
jmp
xchg
xchg
mov
and
inc
in
pop
jge
addr16
lcall
scas
jmp
into
push
sub
and
and
repz
adcl
or
call
mov
jnp
mov
cwtl
jmp
ret
popa
push
das
ficoml
loop
jge
cmp
jg
mov
mov
dec
pop
dec
fldt
xor
addr16
adc
push
sti
ljmp
or
addr16
sbb
sbb
and
add
add
pushl
nop
push
fcomip
adc
cwtl
sub
mov
mov
ja
mov
pushf
call
add
arpl
fs
ret
push
and
out
pop
add
pushf
mov
std
xlat
jp
decl
stos
or
mov
sbb
addl
xchg
rcl
mov
call
dec
mov
pusha
mov
sbb
rdtsc
idivl
insl
std
lcall
adc
jmp
jae
sub
in
cli
decl
lret
sbb
out
xchg
stos
cli
inc
orb
sar
dec
push
inc
push
mov
jp
roll
cmpsb
ss
jmp
push
loopne
dec
add
loop
or
sbb
push
imul
jecxz
fbld
xor
mov
daa
dec
iret
pop
jo
mov
rorl
std
cld
shl
mov
incl
or
pop
es
movsl
cmp
and
insl
xchg
push
hlt
cld
ljmp
jl,pt
sbb
js
push
mov
out
add
pop
daa
xor
in
in
pusha
xor
clc
call
mov
insb
jle
xchg
add
leave
in
cmpsb
ret
or
pushf
aam
jmp
lcall
rcll
repnz
pushf
or
dec
xor
jmp
scas
add
testl
lcall
or
mov
jecxz,pt
shll
xchg
js
fidivrl
bound
movsb
mov
fnstsw
mov
in
adc
mov
dec
cmp
shll
in
inc
pop
push
incl
sbb
push
test
cmpsl
pop
pop
and
adc
xchg
and
cwtl
nop
mov
sti
push
sbb
inc
shl
cmp
or
stos
cld
ljmp
inc
orl
push
dec
add
jbe
sbb
lods
xchg
movsl
inc
outsb
or
outsl
mov
mov
cmpsl
js
rorb
das
stos
cmp
mov
sarl
lcall
lcall
arpl
jmp
cmp
sahf
dec
mov
gs
or
mov
mov
push
outsl
les
and
lea
fcompl
mov
jo
xchg
loop
rcrb
jmp
sahf
xchg
hlt
je
pop
adc
jl
mov
insl
mov
jbe
or
in
in
cmp
dec
mov
mov
pop
out
jg
xor
imul
mov
inc
pop
stc
pop
jg
inc
jp
jg
faddl
lret
jo
pop
jbe
call
pop
aad
ficompl
xor
in
popa
lock
jmp
and
ficoms
mov
pop
pop
cmc
call
sbb
push
ffree
js
push
add
cmp
push
push
gs
or
mov
stos
jns
mov
add
bound
xchg
jge
add
mov
sahf
out
addr16
and
mov
xchg
popa
popa
push
mov
pop
dec
test
or
jge,pn
lahf
push
daa
stos
mov
stos
dec
sbb
fbstp
bound
ret
sub
stos
inc
mov
push
imul
cmp
or
push
call
aas
or
and
xor
lahf
jno
adc
xor
xchg
and
lcall
or
add
les
sub
push
lcall
xor
add
stc
ret
out
or
fstpl
scas
jb
adc
lcall
dec
mov
sub
push
pushf
jp
movsb
adc
iret
sbb
cli
test
lahf
es
popa
cmpb
xlat
sub
sarb
sbb
fdivs
jmp
rcll
stos
pop
xor
add
and
ret
cmpsl
mov
subb
fwait
sbb
subb
lcall
outsb
jns
mov
or
mov
outsb
cmp
incl
lods
aaa
hlt
lahf
add
xorl
ret
dec
hlt
arpl
rorl
xor
xor
jg
in
or
jbe
adc
dec
mov
lds
in
mov
lcall
pop
or
jbe
mov
xchg
std
testl
gs
lea
mov
scas
aad
ss
xchg
mov
lret
xor
push
movl
add
call
call
sub
mov
xchg
jmp
clc
in
sti
test
xor
loopne
jle,pn
xchg
lcall
shr
xor
adc
out
sbb
clc
fstpt
jmp
pusha
and
das
ficompl
xor
sub
mov
and
inc
cltd
push
lret
aam
loope
fcomip
mov
fildll
add
call
and
rcrb
sub
out
sub
imul
and
loopne
jl
ljmp
daa
in
in
push
or
lea
daa
aad
cmpsl
adc
fs
push
in
mov
cmp
or
xor
jmp
addr16
add
addr16
xchg
aaa
or
loope
call
call
out
test
jmp
in
push
js
or
pop
xchg
push
clc
xor
adc
add
int
and
shll
mov
adc
ljmp
dec
nop
inc
test
and
or
jg
rolb
sbb
ret
fcomip
lahf
dec
gs
das
cmc
xchg
je
jg
xor
js
and
inc
jecxz
aam
es
cwtl
das
mov
icebp
repz
cmc
lods
cwtl
mov
mov
test
add
inc
imul
pop
js
js
inc
sub
dec
lds
mov
pop
push
mov
frstor
aad
and
jge
arpl
incl
xchg
leave
pop
insb
test
sbb
pusha
mov
test
sarb
xchg
inc
jecxz
push
mov
sub
inc
hlt
push
xchg
pop
inc
std
xchg
andl
lret
push
sub
gs
mov
jmp
xchg
adc
add
xor
push
xorb
mov
fucomip
xchg
roll
push
rclb
pop
push
pop
push
mov
in
mov
das
sub
push
popa
fidivl
jae
or
inc
gs
dec
adc
decl
sarb
inc
sub
sub
dec
iret
jp
pop
out
clc
lcall
cmpsb
aas
dec
sahf
aad
leave
out
mov
aas
fcos
decl
push
lahf
test
cmp
cmp
or
leave
push
loopnew
fbstp
cmc
inc
push
adc
xchg
call
ljmp
aad
xchg
fwait
movsb
sub
xchg
scas
decl
pop
xor
lods
aas
dec
pushf
inc
and
xor
or
lcall
inc
pop
sbb
ds
sti
dec
and
dec
or
ja
shl
push
testb
adc
std
shl
in
sub
imulb
xor
les
cli
dec
lods
mov
cld
xor
hlt
pushl
pop
mov
loopne
ljmp
sbb
jp
cmc
jo
fdivl
in
push
mov
in
insl
pop
xchg
push
lcall
mov
or
call
cmp
lret
push
jle
fdivrl
iret
scas
sbb
sbb
push
repnz
pop
mov
or
neg
scas
inc
cwtl
mov
jmp
jge,pt
push
pop
mov
lods
mul
shll
incl
call
divb
daa
push
mov
or
pop
pushl
xchg
pop
ret
clc
adc
xor
mov
xor
push
and
jmp
inc
pusha
ljmp
fidivs
inc
shrl
bound
out
mov
or
xor
rcll
mov
jg
jnp
sqrtps
push
fwait
cmp
out
mov
mov
je
push
fsubrs
sbb
jno
into
mov
jmp
and
push
mov
bound
scas
push
inc
push
or
bound
lcall
loope
pop
insl
push
and
nop
imul
pop
adc
mov
mov
sub
ja
int3
xchg
or
out
das
sahf
insl
lahf
loop
imul
mov
lcall
mov
imul
cmp
lcall
or
daa
and
fcomip
mov
mov
dec
mov
outsl
dec
xchg
imul
pop
test
ret
adc
call
bound
insb
ret
leave
jg
pop
inc
sbb
ljmp
push
xor
pop
adc
ss
cs
cmpsb
and
jae
cli
xchg
mov
decb
xchg
pop
pop
lret
mov
std
cmp
sub
cmpb
fs
in
jl
mov
jl
fistl
ljmp
and
cmp
ret
aas
roll
add
incl
cli
lahf
jbe
add
add
sub
pushl
adc
xor
pushf
pop
add
adc
nop
jae
dec
jmp
lock
incl
aas
sub
add
sub
cmp
add
push
aad
in
decl
sub
divl
popf
inc
pushf
sti
movsb
add
cmp
lcall
cmp
mov
cltd
cmc
dec
sbbb
cmp
ss
jmp
imul
lcall
cmpsb
and
sub
call
enter
iret
sti
sub
sar
inc
xor
enter
clc
cmp
xchg
call
sbb
daa
sar
mov
std
jb
data16
add
popf
jg
pop
jb
loopne
pop
add
cli
aam
sar
call
aam
cmp
sub
aas
mov
stos
lcall
cs
dec
jecxz,pn
jmp
and
adc
lahf
syscall
mov
loopne
cmpsl
mov
push
mov
or
cld
pushl
sub
cmp
aam
insb
sbb
orl
ret
xchg
xor
fsubr
popl
jmp
mov
sbb
rorl
add
shl
in
xchg
dec
fdivr
decl
into
in
in
enter
dec
loope
xchg
movsl
sbbl
jne
ljmp
adc
jo
or
sahf
sub
pushf
into
repz
pushl
std
ficoms
into
mov
js
ja
or
or
and
push
cmpl
fwait
cli
ja
gs
sbb
lds
call
aaa
repz
push
jae
in
pop
inc
pop
insl
cmp
and
jnp
cmc
mov
in
push
xor
imul
xchg
pop
and
mov
mov
cmovns
inc
lcall
insl
mov
aad
mov
stc
std
iret
and
adc
je
and
incl
sub
and
shll
mov
stos
mov
pusha
repz
xchg
std
and
mov
jns
rol
int3
cs
ljmp
and
mov
cmp
rcrb
inc
dec
out
sbb
gs
cld
lcall
xchg
popf
jns
pusha
cmp
push
inc
and
cmp
and
in
divl
je
cmp
mov
add
adc
test
pop
mov
test
iret
sub
dec
xchg
and
jmp
enter
xchg
call
or
dec
test
mov
mov
out
inc
inc
cmc
jne
mov
ficomps
mov
dec
push
shl
sbb
ja
mov
fidivl
jmp
test
ret
in
jbe
clc
mov
mov
dec
dec
inc
lods
push
rol
mov
jmp
push
mov
aas
mov
pop
mov
lock
inc
mov
insl
stc
lods
push
xchg
addr16
aas
jle
mov
incl
jl
mov
xchg
jbe
fs
in
out
dec
sti
mov
jb
jmp
jl
stos
cmp
jne
sub
cmp
push
jmp
mov
ret
rcl
negb
lahf
out
jge
xor
mov
inc
push
out
out
sbb
out
pop
icebp
jmp
stos
ljmp
cmpsl
adc
sbb
in
dec
inc
jno
call
or
add
ss
and
pop
movsl
js
inc
flds
incl
sahf
inc
and
fwait
adc
xchg
push
ja
xchg
sub
sar
mov
mov
cmp
call
loope
add
lock
jg
movsl
ja
xchg
push
cmpsl
in
cli
pop
adc
mov
inc
lcall
idiv
call
pop
dec
mov
add
adc
mov
push
hlt
jle
add
inc
inc
and
push
jb
jno
adc
fs
pop
sbb
push
add
fisttps
addr16
cltd
sahf
int
push
xchg
scas
push
sbb
sbb
std
scas
xor
stos
imull
add
cmp
stos
mov
pushl
movsb
cmpl
mov
lcall
jmp
push
fisttpll
stos
orl
push
sar
cmp
push
add
out
inc
xorl
add
sar
incl
mov
and
inc
push
incb
push
in
test
and
dec
add
jecxz
idiv
call
mov
pop
fdivrp
jno
mov
adc
mov
cmp
test
decl
lock
fprem1
aam
jb
mov
mov
and
decl
lock
mov
mov
aaa
loope
cld
sub
fmull
jg
mov
sti
push
mov
and
ret
ret
add
es
fcoms
xor
pop
inc
xchg
scas
out
ds
sub
ror
xlat
xor
mov
call
xchg
and
mov
push
and
bound
sbb
test
decl
divb
daa
adc
lcall
mov
mov
push
bound
dec
in
mov
or
inc
push
fsubl
pop
in
sub
pop
lahf
ficoml
cmp
jmp
xchg
fdivrp
push
add
dec
cmp
mov
xor
leave
shll
decl
ror
or
and
xor
cmp
mov
xor
js
outsb
fldl
mov
test
cwtl
ret
repnz
nop
pop
push
xor
int
jl
jecxz
mov
mov
sub
aam
mov
sub
repnz
add
cltd
jmp
lcall
dec
fidivs
push
xor
out
loopne
in
push
jb
fldt
out
clc
ljmp
mov
arpl
or
dec
notl
dec
insl
aaa
fadds
push
jle
jecxz
jnp
loop
cli
insb
imulb
add
xor
clc
insb
jnp
ret
out
clc
mov
leave
lahf
sbb
mov
sbb
pop
pop
fs
subl
lcall
or
mov
and
sbb
jbe
cmpsl
jnp
mov
jg
add
pop
lds
lcall
adc
daa
dec
lds
in
mov
icebp
xor
adc
and
dec
js
int3
push
sub
xor
jno
std
mov
add
cli
xor
mov
insl
mov
add
and
pop
pop
mov
mov
cmp
cld
lds
sub
ljmp
mov
jl
adc
orl
or
daa
stc
jns
sbbb
xchg
and
jno
js
incl
xor
mov
nop
mov
nop
add
ss
icebp
idiv
jg
ja
into
aam
mov
xchg
mov
in
faddl
js
std
incl
push
dec
xchg
je
add
js
mov
scas
xchg
push
adc
lcall
mov
pushf
mov
pop
mov
aad
sub
loop
decl
idivb
jne
mov
out
push
jae
jge
test
rclb
adc
leave
out
pop
orl
mov
xchg
fcoml
incl
xchg
gs
mov
movsb
xor
test
jnp
fsts
loope
into
daa
pop
xor
jns
add
lods
repnz
cmp
mov
xchg
dec
pop
dec
mov
sbb
mov
xchg
dec
inc
adc
es
pushl
inc
xchg
sbb
push
xor
decl
jmp
jbe
pop
fisubrl
mov
mov
roll
xchg
or
pop
js
or
lcall
clc
ljmp
mov
and
cmp
repz
push
ret
pop
lods
test
ljmp
rcl
out
fsubs
push
nop
adc
sbb
sub
jg
xchg
pushf
decl
test
pop
jg
scas
pop
xor
pop
inc
fiaddl
sbb
mov
test
fxch
inc
cwtl
add
mov
cmp
mov
adc
sub
xchg
mov
loope
out
dec
sub
push
iret
add
inc
insb
scas
imul
incl
lret
in
push
sub
addr16
fmuls
nop
leave
pop
fwait
adcl
xchg
and
imul
inc
xchg
push
and
je
mov
adc
jmp
xlat
sub
in
fwait
pop
xor
mov
push
mov
add
hlt
mov
mov
clc
sub
std
call
jl
cmp
adc
mov
sub
dec
jp
jle
xchg
dec
clc
mov
repz
out
mov
stos
xchg
push
and
testl
xor
pushl
sti
adc
aaa
add
mov
mov
mov
mov
fistpll
push
ljmp
decl
add
pusha
pop
es
movsl
lret
adc
sahf
xchg
lock
push
sbb
sti
sbb
push
sbb
movl
ljmp
repnz
push
clc
in
js
jle
movsl
xlat
stc
cmp
pusha
clc
iret
cmc
inc
push
and
mov
out
adc
fnstenv
rcrl
jns
aad
inc
mov
jecxz
sarl
mov
add
add
xor
sub
je
sub
mov
leavew
xor
jge
mov
mov
inc
and
jb
mov
sub
xchg
adc
test
movsl
jl
repz
inc
sub
stos
dec
decl
in
iret
mov
je
push
cmpsb
inc
jle
pop
in
or
adc
mov
je
lods
push
or
mov
cmpsb
ret
orl
add
sbb
bound
rcrl
push
hlt
call
jmp
jns
leave
mov
mov
cs
dec
leave
movsl
rclb
inc
mov
inc
add
inc
add
jg
dec
cwtl
rorb
out
nop
fdivrl
and
mov
pop
pushl
jl
in
lret
dec
enter
add
cmp
fwait
jp
mov
mov
aam
ss
insb
mov
ja
lcall
pop
leave
sbb
testl
push
sub
idivb
dec
loope
xchg
icebp
dec
clc
inc
xor
aad
mov
cli
pop
pop
into
es
ljmp
cmp
cmp
xor
mov
inc
mov
add
sub
movl
sti
push
cmp
mov
lods
cmp
je
pop
sub
xor
mov
aam
inc
mov
testb
mov
into
mov
or
and
sbb
pushl
push
mov
mov
mov
and
adc
daa
shr
sarl
loopne
lock
test
fmul
orl
rcl
call
xor
xlat
pop
hlt
in
int
sarl
ficoms
ror
sbb
sub
lcall
mov
repz
push
es
cmp
cmpsl
mov
pushl
ret
ljmp
and
lret
in
fnstenv
call
pop
andl
scas
fbstp
pop
outsl
sbb
push
lods
aaa
mov
jo
cwtl
cwtl
jg
std
lcall
lock
in
cltd
cmp
decl
add
ficomps
test
popa
and
adc
cld
roll
mov
popf
in
xchg
clc
out
negb
inc
ss
stos
or
pop
jle
inc
int3
orb
push
push
jbe
xorb
xor
lods
sub
jle
dec
ret
jle
inc
jmp
xor
dec
mov
or
decl
or
in
push
cmp
icebp
xchg
mov
cmp
mov
jae
push
xor
jge
and
or
shlb
ljmp
xchg
sbb
dec
in
es
filds
in
sahf
mov
mov
jmp
les
vmwrite
in
mov
adc
jle
mov
mov
adc
loopne
jmp
fst
fyl2x
enter
xchg
cwtl
or
pop
xor
or
cltd
test
jmp
movsb
lret
insb
mov
mov
cmp
cmp
xchg
stos
jmp
mov
call
out
mov
and
lods
mov
outsb
fimull
repz
lods
mov
xchg
add
cmp
inc
and
dec
test
in
pop
xor
je
stos
and
dec
sub
adc
lcall
lea
add
xchg
mov
pop
sbb
sbb
incl
inc
cmp
add
call
mov
mov
mov
sbb
jmp
popf
dec
push
rorb
pushf
lods
in
mov
in
dec
fdivrs
outsl
repnz
adc
outsl
push
test
imul
mov
shlb
lcall
xlat
mov
sbb
push
xchg
je
sbb
enter
mov
sub
shlb
dec
jno
cmp
aas
std
xchg
jecxz
cli
mov
hlt
lret
push
bound
cmc
lock
mov
push
aad
xchg
shll
push
xchg
ud0
test
pop
in
or
out
mov
lock
ljmp
and
and
fsubl
mov
rcrl
xor
or
loopne
pop
andl
cli
fiaddl
jg
adc
dec
or
dec
arpl
sahf
mov
add
xor
jmp
lds
xchg
sbb
inc
cmp
fadds
sbbl
mov
lret
ja
fs
push
in
pop
lea
inc
loope
div
push
push
add
push
or
mov
xchg
subb
jno
scas
mov
int
ret
iret
test
jo
ljmp
jne
pop
jecxz
mov
push
stos
mov
repz
mov
cmp
incl
adc
add
inc
add
mov
mov
lds
xorl
das
add
decl
inc
push
xchg
pushl
clc
and
adc
movsb
sub
decl
sub
mov
push
stos
mov
mov
pop
movsb
rorl
scas
jno
cmp
shll
lcall
movsl
or
xchg
add
scas
inc
or
mov
xor
jnp
dec
jmp
dec
pop
mov
insb
orb
mov
or
dec
xchg
lock
mov
push
arpl
cmp
jle
outsb
js
iret
ficoms
pop
mov
mov
cmpsl
sbb
out
jp
jae
ljmp
inc
aam
test
pop
or
decb
dec
aam
lods
mov
incb
decl
ffreep
mov
stos
stos
mov
fistpl
outsb
cltd
aaa
jl
jecxz
or
imul
ja
aad
cmc
inc
mov
jne
stos
int3
popf
fsub
xchg
and
scas
cs
ljmp
jmp
divb
arpl
push
sbb
fisttpll
fdivrs
rolb
jp
jmp
jo
inc
xor
pop
inc
insb
dec
scas
fstps
ljmp
imul
mov
cltd
push
xchg
pop
sbb
xchg
xchg
jmp
mov
push
andl
or
loop
test
xor
or
popf
mov
mov
je
push
nop
and
and
mulb
fdiv
scas
addl
and
aas
cmp
add
xor
loop
outsl
mov
pushf
daa
int
lcall
std
pop
call
push
lret
adc
or
ljmp
shr
in
lock
xor
or
mov
sub
popf
mov
xchg
shlb
out
jb
mov
aaa
cli
push
push
xor
enter
mov
leave
das
sti
inc
jg
mov
ljmp
dec
xchg
xor
cltd
in
inc
dec
lret
push
mov
or
push
or
lock
dec
jnp
push
fdivrs
popa
mov
sbb
xchg
add
push
int
pop
aas
daa
and
out
mov
nop
call
or
aad
jmp
inc
aam
cmp
push
in
imul
push
outsb
std
xchg
or
out
or
dec
jp
xor
xor
xchg
movsl
xor
push
nop
mov
lahf
xor
sbb
aad
mov
or
pop
cmp
std
xorl
test
push
push
mov
mov
dec
call
call
cltd
or
shll
fcmovnbe
loopne
sti
lock
jae
incl
mov
mov
lret
mov
mov
roll
fidivs
lods
fidivrs
inc
jns
and
repz
ds
decl
lret
fwait
out
out
cmp
mov
ret
push
fsubr
call
xor
decl
xor
mov
clc
insl
ret
add
adc
pop
mov
decl
mov
dec
mov
pop
xor
sti
or
mul
inc
inc
scas
pushl
mov
mov
inc
mov
mov
jo
loop
fcoml
ljmp
cmpsl
xchg
lods
sub
ds
sub
mov
pop
jbe
arpl
mov
jmp
xchg
aas
pop
lds
dec
and
fidivrl
sub
add
mov
ljmp
jmp
lods
inc
popa
ja
call
pop
mov
mov
pop
sub
out
push
xor
in
cwtl
mov
nop
push
or
ret
sti
lcall
ret
js
adc
movsb
out
and
or
hlt
xchg
jg
repz
pusha
adc
movsb
sahf
decl
arpl
xchg
pop
push
mov
popf
pop
xor
and
loope
push
jmp
ljmp
adc
sbb
test
dec
insb
pop
aam
jae
ljmpw
in
stos
jp
cwtl
mov
xchg
fistps
dec
call
jo
aas
mov
inc
inc
xor
lret
lea
and
andl
in
and
jmp
xlat
popf
cmp
push
jl
adc
mov
sub
out
add
imul
leave
adc
xor
jge
lret
mov
cmp
call
mov
incl
xlat
push
pop
and
mov
out
add
pop
inc
push
xchg
push
popa
pop
sub
cli
jg
out
test
sub
cmp
pop
sub
jmp
aaa
mov
out
call
xchg
je
out
lds
fists
int
ljmp
add
and
sbb
stos
jbe
pop
jno
adc
cmp
mov
lcall
cmp
movsl
fsubl
insl
and
adc
push
add
mov
mov
add
mov
ja
jbe
sti
ds
mov
xor
sub
sub
dec
ljmp
xor
xor
jecxz
adc
sub
repz
sbb
fdivr
incl
es
inc
jo
sub
jle
adc
inc
hlt
stos
mov
mov
mov
adcl
rcrl
sub
push
lret
popa
clc
inc
mov
stos
push
aaa
call
inc
mov
xchg
lret
gs
xchg
cld
add
incl
jg
pop
sbb
ss
inc
dec
dec
dec
cmpsl
push
scas
leave
push
cltd
dec
pushl
test
aaa
in
sbb
ja
mov
pop
add
inc
lret
lcall
pop
xchg
jmp
arpl
sub
sub
mov
in
jle
mov
sar
ljmp
loopne
into
or
push
cmc
fildll
cmp
fnstenv
repnz
cmp
push
clc
clc
lods
mov
xchg
dec
pop
mov
xchg
test
dec
mov
in
adc
or
imul
andl
jp
mov
mov
pop
ss
pop
dec
inc
je
push
std
cmp
cmpsb
add
push
mov
or
rol
lcall
dec
or
loop
jbe
call
pop
cmp
ficoms
repz
cmp
jl
bound
inc
pop
cltd
inc
xor
lahf
push
adc
add
sub
in
xchg
sbb
mov
jo
test
ljmp
imul
pop
xor
fisttps
sub
adc
decl
cmp
inc
mov
mov
mov
imul
in
cmp
and
ljmp
rolb
negb
fistps
sbb
or
jecxz
mov
test
push
pop
xchg
popf
xchg
mov
cmpsl
fsubs
mov
lret
mov
pop
loopne
jp
mov
mov
fistpl
mov
lods
jne
push
incl
and
mov
inc
adc
cmpsb
jge
popf
jecxz
and
mov
jb
in
sub
sub
fcoml
mov
add
adc
mov
lret
mov
or
icebp
ja
cmp
xchg
negl
cmp
decl
out
dec
mov
xchg
mov
or
fsubr
idivb
mov
or
push
loop
mov
pop
std
sbb
push
popa
inc
inc
call
pop
inc
push
sbb
ret
nop
mov
cli
inc
adc
idiv
outsb
mov
int
fsubr
test
scas
adc
es
pop
push
aaa
pop
cmp
push
jp
jb
psubb
pusha
jmp
sahf
bound
or
jg
sarl
ret
cli
bound
adcl
loope
pop
decl
arpl
push
xchg
mov
sub
je
mov
dec
mov
ja
fwait
insb
push
mov
mov
push
out
push
sahf
test
pop
fisubl
cltd
push
cltd
cmp
ljmp
dec
in
mov
mov
sahf
sbb
sub
jg
cltd
dec
push
and
or
call
add
int
movsb
mov
dec
ljmp
js
incl
insb
xchg
aam
bound
xor
shll
addr16
inc
dec
pop
mov
jae
outsl
ljmp
mov
mov
fidivrl
incl
clc
and
repz
lods
sub
fnstcw
das
cmpl
dec
loop
sub
cmp
push
xchg
cmp
and
outsb
out
and
call
daa
xchg
push
mov
jbe
mov
fisubrl
movsb
bswap
ret
sarb
jp
cmp
xor
mov
cwtl
xchg
dec
cmpsl
mov
pop
arpl
mov
fildl
add
ljmp
mov
or
addr16
jo
popa
cwtl
add
int3
mov
xchg
ret
push
sbb
setne
in
xor
cltd
aam
out
sub
movsl
out
ljmp
test
stos
xchg
orb
daa
out
push
fldt
scas
ret
adc
in
xor
je
paddb
adc
cmp
pop
mov
cmp
mov
pop
push
decb
in
xchg
test
jg
leave
test
loop,pt
jb
in
adc
int
lock
test
xor
pop
std
call
mov
out
rclb
jle
dec
xor
xor
int
mov
fisttps
incl
les
jp
cmp
mov
xchg
sbb
in
mov
or
push
fmuls
pushf
call
in
mov
leave
sbb
jno
mov
adc
jne
cmp
pop
dec
add
incl
mov
inc
jb
lds
mov
lock
call
pushf
daa
test
pop
jno
lock
lcall
push
mov
push
inc
fisubrl
cmp
into
cs
sbb
pop
iret
decl
xlat
cli
fidivl
push
icebp
add
push
push
call
xchg
push
popa
mov
mov
scas
cld
mov
sub
jg
je
mov
call
xorb
dec
push
clc
mov
les
cs
xor
mov
add
outsb
jmp
mov
mov
lret
push
pop
in
and
xor
cld
lods
mov
test
out
add
adc
adc
incl
lods
sbb
mov
scas
and
ds
outsb
jecxz
and
rcrl
lcall
push
pop
cmp
push
test
mov
es
sbb
repnz
jle
into
rcrb
mov
mov
ljmp
hlt
mov
cmpsb
jns
js
pop
lea
lods
mov
out
insb
scas
add
jmp
inc
dec
sarl
jbe
hlt
inc
std
push
fisubl
call
out
mov
jmp
pop
inc
xchg
mov
hlt
jle
fidivrl
jmp
inc
jge
pop
imul
fsubl
repz
xchg
sub
mov
outsb
insl
clc
repz
add
push
and
aas
xchg
mov
push
or
adc
pop
sub
out
or
dec
adcl
dec
xorb
fs
xchg
insb
out
lea
jmp
push
sub
stc
negl
adcl
mov
lods
push
in
add
cmpsb
and
std
lret
sub
push
cmp
pop
add
adc
pusha
sub
dec
jge
ljmp
xchg
add
mov
cmp
cmpsb
mov
xor
pop
pop
out
cmp
xchg
lock
jmp
inc
mov
sub
jl
xchg
int3
xor
push
ja
mov
inc
add
aam
es
cmp
xchg
je
dec
in
push
fwait
sub
and
and
call
pusha
jne
stos
mov
and
shll
into
sub
stc
stc
push
xor
jb
andb
rolb
jg
call
sub
call
pop
pop
sub
mov
or
leave
shr
push
testb
aas
icebp
call
shr
cmp
movsb
loop
jge
cmp
adc
insb
ffreep
test
ljmp
or
jl
hlt
popa
outsl
and
sbb
std
sub
adc
cmpsl
hlt
incl
imul
pushf
das
jo
and
jns
push
inc
outsb
jg
push
movsl
ljmp
stc
dec
sbb
dec
arpl
cli
sub
test
mov
stc
loopne
int
or
dec
in
pop
in
cmp
push
push
je
testb
incl
sbb
and
int3
pushf
push
test
sahf
imul
cmpsl
es
push
loop
aad
lcall
pop
jne
out
push
mov
cld
xlat
mov
pushf
fwait
add
mov
jb
inc
jae
mov
and
sub
cmp
push
jmp
xchg
cwtl
gs
jle
mov
imul
cmpsb
dec
fsubrs
in
aaa
int3
ljmp
fdiv
mov
mov
pop
ror
and
sub
sub
mov
push
mov
jmp
cmp
sub
ficoms
xor
loopne
inc
jl
or
je
mov
pop
push
dec
ds
fnsave
mov
in
xchg
inc
jne
call
icebp
add
adc
sbb
orl
outsl
loop
es
sbb
cld
pushl
movsl
xlat
ficoml
xor
mov
dec
lods
xchg
sbb
test
mov
mov
pop
and
and
addr16
add
or
cmp
mov
dec
mov
ja
fsubr
cmp
cmp
jne
orb
adc
fistps
mov
push
adc
xchg
cmp
insb
outsl
jecxz
pop
dec
add
inc
jb
mov
fcomip
cmp
push
add
mov
and
popf
test
aaa
mov
mov
and
jl
xchg
pop
jno
hlt
mov
inc
ret
test
sub
call
sbb
mov
mov
and
mov
daa
repz
std
ljmp
fmuls
repnz
and
movsl
mov
cwtl
out
sbb
mov
cmp
rolb
shll
enter
xlat
dec
gs
loop
movsl
mov
in
aaa
jmp
sbbl
ds
addl
dec
mov
repz
xchg
aad
jg
add
pop
mov
js
jecxz
test
sarl
sarb
xchg
cs
xchg
mov
dec
pop
decl
push
movsl
xchg
test
ljmp
cmpsl
sbb
test
mov
mov
call
mov
fcompl
sbb
dec
cld
jp
fstl
xor
mov
ss
popf
mov
push
out
mov
sub
push
cmp
das
lea
cli
push
out
aas
insb
inc
pop
fwait
inc
test
xchg
out
xlat
out
les
mov
call
mov
sbb
jl
inc
sbb
or
insl
push
sbb
lcall
adc
xor
dec
shlb
xor
xor
xchg
mov
insb
sub
hlt
sbb
push
pop
std
jmp
mov
stc
ficomps
xor
mov
cmp
fsubrl
jecxz
jmp
push
pushl
test
xorb
mov
lahf
nop
pushf
cld
loopne
idiv
mov
inc
dec
mov
aaa
add
jg
fisttps
movb
push
push
fidivs
sti
in
mov
inc
cltd
jns
dec
xchg
dec
jns
push
ja
jae
sub
rcrl
int3
fs
dec
lret
push
cmpsl
sar
call
and
xor
test
add
mov
dec
xchg
pushf
insb
ljmp
inc
mov
push
insl
loop
fsts
and
mov
pop
lods
mov
push
in
xor
sub
push
movsl
pop
sti
jmp
and
lret
mov
ss
dec
ds
rolb
pop
pushf
dec
inc
sub
cld
push
pop
pop
call
inc
icebp
gs
jmp
mov
test
or
int
pop
cmp
rcrb
pop
inc
in
push
xlat
insb
divb
mov
jae
cmp
test
mov
ds
or
sbb
mov
cwtl
int
outsl
push
decl
push
add
cmp
scas
and
fsubl
test
cmpb
ljmp
nop
ficoml
rcll
icebp
push
cli
pop
jmp
lcall
xor
pop
icebp
push
dec
adc
pop
push
mov
jb
push
push
jo
fcos
pushl
stos
pop
jle
adc
test
dec
pop
add
inc
or
jno
inc
lds
xchg
jp
pushl
ja
xlat
jns
hlt
fwait
mov
cltd
jne
lock
into
jnp
and
adc
call
cmp
mov
iret
sub
insb
jns
arpl
lock
pop
mov
lcall
dec
and
pop
and
inc
mov
movsl
xchg
dec
and
hlt
mov
out
test
call
sub
pop
sahf
mov
pop
inc
test
shrb
test
adcl
call
pop
lea
outsb
push
std
push
mov
push
dec
fidivl
jb
pop
in
mov
ljmp
clc
rorl
add
dec
negb
addl
cmp
leave
scas
push
insl
insb
xor
decl
dec
in
xor
insb
inc
pushf
push
nop
and
jge
cmp
dec
sub
cmp
jle
jle
inc
xor
push
inc
or
add
dec
decl
sub
test
fdivrs
push
leave
and
mov
gs
divb
sub
xorb
xor
sbb
fwait
dec
fdivl
stos
xor
loopne
lcall
cmp
das
stos
add
test
mov
insb
mov
jle
pop
xchg
xchg
dec
fs
decl
ror
xchg
cmpsl
inc
cmpl
rol
leave
inc
pop
hlt
call
mov
dec
les
xor
sbb
aas
leave
sahf
jb
aad
pushl
movsb
jns
or
pop
adc
xchg
mov
fucomi
xlat
jbe
pop
xor
pop
cmp
jg
mov
lea
test
ret
mov
mov
pushf
stos
pop
aas
ljmp
mov
inc
sub
dec
mov
dec
or
cmp
iret
lock
inc
cli
mov
ja
sbb
fists
pop
jle
in
mov
ficoms
decl
stc
adc
inc
pop
mov
mov
add
pop
mov
cmp
ror
cld
mov
cli
lods
and
shll
sbb
insb
loopne
sbb
into
adc
inc
fdivl
mov
cmpsl
incl
mov
ds
cwtl
rcll
adc
inc
lcall
add
jmp
sarb
adc
mov
repnz
lea
lods
xchg
xchg
lcall
lret
mov
lods
filds
sbb
aad
pop
xchg
shll
pop
jecxz
pushl
sub
int3
dec
mov
cs
aam
lret
lahf
mov
cmp
fildl
aam
jne
mov
push
pop
fnstenv
ficoms
in
jb
ja
lcall
mov
and
or
insb
enter
daa
jp
dec
cld
popa
cmp
mov
out
push
lods
cmpsl
and
enter
cli
cmp
lahf
lret
sbb
sbb
shll
mov
mov
scas
or
in
mov
jg
add
or
cmp
fisubrs
jnp,pt
sbb
add
mov
arpl
dec
xor
lods
das
pop
xchg
test
cmp
icebp
inc
and
test
fldt
dec
test
dec
push
sbb
cmp
leave
hlt
inc
loopne
out
cli
out
mov
push
mov
in
dec
int3
sahf
mov
pusha
sbb
push
ja
dec
or
cld
ljmp
sbb
and
dec
jbe
js
lahf
or
xchg
dec
mov
shll
dec
out
leave
xor
dec
sbb
push
dec
sbb
mov
aas
sub
mov
cmp
adc
push
out
in
cmp
sub
lret
push
idivl
cmp
test
mov
mov
mov
fs
cmp
fneni(8087
pusha
test
adc
mov
dec
jp
std
inc
sub
sub
and
adc
decl
les
sub
jp
xchg
lods
outsl
pop
stos
xchg
add
lds
mov
fcmovnu
lock
sbb
pop
mov
or
pop
fisubs
ljmp
or
mov
push
push
push
adcl
mov
insl
mov
mov
std
call
push
js
sbb
fisubrs
lcall
push
mov
inc
cli
mov
jno
cmp
mov
mov
lds
and
lcall
mov
ds
mov
cmp
and
sar
jg
add
or
xchg
lret
inc
or
xor
lds
cmp
sar
push
lea
fnstenv
sub
aas
cmp
xchg
les
ja
push
push
mov
es
inc
ljmp
add
incl
imul
ljmp
lods
inc
divl
mov
xor
xlat
sub
fsubs
lahf
ljmp
test
push
int3
jp
cmp
or
xchg
aas
hlt
fldl
mov
lock
std
pop
mov
sub
out
cmc
getsec
mov
sarl
call
xchg
mov
insb
lods
ja
cmp
cmp
into
fcoml
stos
out
mov
sbb
sbb
popf
cmp
les
incl
out
iret
cmp
xchg
jae
out
inc
pop
mov
push
shr
inc
sub
sub
std
and
jg
sahf
adc
es
icebp
push
rol
mov
push
insb
es
test
ljmp
mov
inc
inc
in
pop
mov
push
pop
imul
jp
in
call
test
inc
mov
xor
enter
sub
add
push
pop
jmp
lret
fdivrs
mov
pop
mov
mov
fldt
lds
lret
idiv
incl
dec
icebp
jnp
rorl
fwait
outsb
sbb
inc
push
or
mov
inc
inc
fadd
fildll
test
lret
fldcw
inc
cwtl
xchg
adc
and
fidivs
pop
lds
stos
adc
mov
sub
rcll
jmp
jp
sub
inc
adc
inc
or
inc
pop
sbb
pop
dec
ljmp
adc
lock
enter
xchg
movsb
in
lcall
testb
lcall
mov
mov
and
lods
je
add
xor
add
add
orb
scas
daa
leave
cmp
mov
mov
decl
xchg
sbb
jno
xchg
pop
jle
arpl
jns
push
sti
add
cs
inc
mov
imul
pop
jb
cwtl
bnd
rclb
imul
pushl
shll
jle
fisubrl
pop
or
jle
flds
call
ljmp
call
cmp
je
test
inc
and
adc
call
mov
call
xor
push
cmpsl
xchg
lds
je
xlat
fcoms
repz
adc
push
jp
inc
or
jg
cmc
sub
adc
pop
cmpsl
sbb
iret
icebp
bnd
and
gs
adc
aas
mov
popa
xchg
test
jne
mov
test
ja
jnp
les
mov
sub
xchg
mov
mov
push
out
cmp
lock
add
xlat
push
decl
add
int
adc
clc
xchg
or
mov
or
daa
stos
cmp
fisttpll
incb
aas
pop
mov
xor
addb
fcompl
int
ljmp
mov
xchg
outsb
mov
test
aaa
xchg
movsb
out
aam
sbb
mov
icebp
loopne
loop
push
and
sbb
xor
sbb
mov
pop
shr
movsl
popa
gs
inc
jmp
lahf
test
cmp
ret
inc
sti
inc
call
les
dec
icebp
dec
in
cmp
xor
push
sbb
in
and
jmp
cmpsl
pop
cmp
xor
decl
pop
or
mov
pop
daa
idivb
inc
and
or
shlb
jae
and
dec
pmaxub
jg
mov
movsb
js
ds
fsubrl
cmpb
or
jmp
lret
cltd
adc
add
adc
mov
push
cmp
cs
pusha
push
mov
nop
decl
outsb
imul
xchg
imul
inc
sbb
or
aam
pop
aas
outsb
cmpl
pop
sbb
shl
ja
decl
ficomps
fimull
hlt
mov
sbb
add
jae
rorb
cld
fwait
dec
pushl
mov
mov
bound
lahf
lcall
enter
xor
pop
je
rcll
rorb
stc
ljmp
sub
mov
fcoml
mov
dec
inc
sti
xchg
xor
aaa
shrb
jg
xor
mov
pop
xchg
shlb
test
xchg
jmp
jmp
jbe
fistpll
mov
cmp
and
mov
jmp
std
inc
in
out
dec
or
out
dec
dec
cli
add
mov
add
push
add
pusha
jle
fimuls
jecxz
and
xchg
lcall
pop
mov
mov
out
mov
mov
sbb
leave
jg
loope
cmp
add
daa
scas
scas
pop
loop
iret
push
cmpb
push
jo
call
push
and
adc
rol
loop
add
xchg
out
cli
int
or
mov
mov
jmp
cmp
xlat
scas
jecxz
mov
add
inc
mov
std
push
sbb
test
loope
and
jle
ja
lcall
das
insb
in
ja
pop
lret
pushf
or
rcrb
shr
or
push
int
leave
jle
cli
jmp
or
aaa
sub
sub
push
jnp
inc
pop
sub
fwait
dec
std
mov
jno
xchg
or
lcall
ljmp
mov
and
movsl
sub
adc
je
jns
outsl
loop
sbb
roll
call
test
lahf
jo
or
dec
jmp
sub
call
mov
cmp
icebp
jne
pop
std
aas
mov
mov
jne
out
ljmp
jg
ljmp
mov
jmp
rolb
sub
orl
and
ljmp
call
sti
xchg
jl
int
bound
pop
mov
stc
ret
sbb
push
mov
or
aas
mov
mov
and
mov
nop
jg
mov
adc
mov
pusha
sbb
cmp
jne
mov
decl
in
xchg
mov
inc
inc
into
dec
xlat
mov
xchg
pop
lock
jnp
insb
test
xor
decl
and
sahf
mov
pusha
idivb
cli
dec
fistl
push
jg
inc
int
in
fucomp
stos
repz
push
int
jecxz
cmpb
jns
std
cmp
jo
sbb
jle
mov
fdivr
cmc
adcb
or
int
jmp
movb
xchg
add
and
inc
data16
cmp
call
les
data16
mov
mov
pop
sub
lcall
and
incl
add
mov
clc
and
fidivl
xor
filds
loopne
sbb
addr16
sub
call
mov
movsb
rorl
pop
inc
jmp
lret
cmp
dec
inc
jl
mov
pop
repnz
mov
add
enter
push
into
adc
test
ljmp
rol
mov
add
add
ss
aas
push
lock
mov
sarb
stos
es
xor
inc
mov
cmp
cmp
out
movsl
jns
jg
adc
jmp
cmpsl
insb
lret
jns
pop
in
test
std
mov
popf
fstl
jnp
inc
lahf
cmp
pushl
into
iret
sbb
shrb
mov
pushf
mov
mov
out
shl
hlt
dec
imul
sahf
movsb
sbb
fidivrs
das
push
cmp
mov
add
sti
rorl
add
push
mov
and
jg
daa
in
es
cwtl
fcmove
mov
mov
jns
jmp
pop
daa
jp
decl
add
sbb
mov
xchg
outsb
fisubrs
pop
aam
push
adc
incl
sbb
inc
sub
sub
insl
ss
mov
fmull
popf
mov
pop
call
push
adc
addl
xchg
mov
inc
jl
lea
mov
jg
adc
testl
adc
xor
cli
pop
popf
mov
sbb
sar
mov
add
sti
rorl
lods
call
leave
lcall
test
lcall
dec
cmp
shll
xchg
test
ds
inc
xlat
jg
cli
stc
mov
push
adc
imul
cli
mov
cmp
sub
out
mov
std
icebp
or
jmp
les
mov
je
enter
jno
arpl
aad
cmp
sbb
sbb
clc
in
push
in
dec
imul
neg
dec
js
push
or
das
inc
jg
call
cmp
imul
mov
xchg
enter
adc
aam
leave
loope
rclb
mov
rolb
icebp
sub
insb
and
push
icebp
inc
xchg
mov
lcall
arpl
dec
xor
sahf
nop
mov
mov
lods
xor
mov
pushl
addr16
xchg
std
pop
lret
mov
cwtl
cmp
xor
lock
push
or
push
add
mov
lods
out
js
in
inc
cmp
add
inc
pop
jg
adc
and
sub
xchg
leave
cld
mov
loopne
imul
pop
push
clc
lcall
cld
pop
in
enter
test
lock
jmp
sti
add
in
lea
push
mov
outsb
mov
lea
mov
push
sar
add
jge
pop
sbb
jne
xchg
mov
add
jg
adc
je
and
repz
and
incl
push
dec
jl
test
adc
push
sbb
into
or
jmp
mov
lods
and
arpl
int3
or
das
lret
shlb
addb
cmp
lock
fs
cld
push
repnz
xchg
arpl
push
mov
sub
mov
jne
xchg
ljmp
stos
lods
addr16
incl
mov
cs
mov
mov
cltd
add
fcomip
or
mov
mov
lods
int3
inc
outsb
mov
std
mov
stc
ds
repz
inc
push
pop
mov
push
sub
adc
je
icebp
in
dec
xchg
loop
negb
jnp
pop
sub
mov
pop
pop
cmpsl
aaa
lods
fiadds
pushl
or
lret
pop
sub
int3
or
add
bound
mov
in
loope
mov
loopne
push
cmpsb
cwtl
jo
and
out
xchg
jno
or
daa
fldt
pop
fwait
and
cmp
dec
mov
push
xchg
mov
insb
jl
sub
loope
mov
adc
and
insl
add
sub
daa
fsubl
and
adc
lock
rclb
movsb
in
adc
mov
pop
mov
repz
test
std
xchg
cli
mov
sub
lea
push
push
mov
sub
and
jmp
push
in
fisubs
jne
imul
in
cld
test
push
loop
inc
aas
pop
cmc
rcl
out
bound
insl
xor
or
scas
jl
loop
pop
std
jg
mov
sub
and
jmp
inc
inc
cwtl
adc
pop
stos
jp
dec
push
call
inc
popf
pop
adc
sbb
mov
xchg
lahf
mov
out
cmp
inc
pop
jb
cmp
icebp
mov
enter
mov
sahf
cmp
push
pop
dec
pop
pop
lock
fildl
lock
not
xchg
dec
jmp
cld
jecxz
adc
jl
cmpsb
mov
mov
cmp
cltd
stc
inc
pushf
mov
hlt
jmp
cmpsb
dec
mov
dec
test
add
add
xchg
push
and
mov
fcomip
or
adc
pop
dec
cwtl
test
cmc
mov
xchg
cmp
outsl
pop
jb
shl
out
imul
inc
mov
xchg
dec
outsl
pop
clc
add
adc
adc
out
xorl
push
jae
sbb
xor
std
mov
leave
pop
sahf
aad
adc
popf
dec
and
mov
insl
ja
test
adc
sub
xchg
out
pop
xchg
push
leave
push
roll
roll
jmp
add
movsb
pop
mov
push
xchg
adc
lods
ficoml
les
repnz
ficomps
mov
pop
incl
mov
or
mov
data16
push
cmovae
loop
mov
add
cmc
push
push
lods
push
push
incl
mov
pop
pusha
icebp
inc
jg
lcall
aaa
int3
jb
lret
out
int3
cmpsb
enter
in
pusha
dec
sbb
cs
pushl
jg
or
pusha
out
mov
jbe
xor
clc
mov
andb
cmp
js
lock
incl
daa
mov
mov
push
into
mov
xor
push
push
imulb
jmp
cmp
fs
adc
sub
adc
adc
jl
xchg
je,pt
cli
call
xor
sbb
sahf
sub
and
dec
fnstsw
mov
shrl
dec
int
movsb
jl
or
imul
xchg
scas
inc
push
mov
frstor
negl
fsubs
mov
cmp
outsl
incl
sub
dec
push
dec
js
mov
in
insb
sub
xchg
push
and
cmc
decl
je
mov
stos
pop
or
and
stos
xchg
fwait
imul
pushl
dec
js
fwait
add
ss
xchg
sub
cmc
gs
jmp
insl
call
mov
mov
pop
not
or
sub
mov
es
das
cli
ljmp
push
push
popa
xor
das
int3
or
push
and
jb
sbbb
lcall
mov
adc
rorb
aas
jns
push
push
xchg
cwtl
push
incl
cwtl
sbb
dec
xor
in
out
xchg
xor
pop
jmp
jle
push
mov
ljmp
inc
xlat
sbb
call
arpl
les
pop
outsl
ds
xchg
pushl
push
imul
dec
inc
push
dec
pop
or
xchg
dec
add
mov
xchg
nop
jle
push
in
and
in
fcomip
jae
stos
loope
into
dec
add
mov
lock
sti
xchg
adc
or
in
dec
out
enter
xchg
stc
and
scas
aaa
inc
sub
ret
mov
add
jbe
cmpsb
xchg
stos
and
fstpl
push
rorl
inc
dec
popf
pop
sub
mov
pop
cltd
and
mov
inc
mov
jne
repnz
sbb
xchg
imul
pusha
adc
test
bound
insl
add
lods
sbb
cmp
cmp
mov
out
cli
loope
call
push
scas
call
inc
xchg
fcoml
adc
pop
push
pop
scas
or
xor
decl
cli
cmpsl
push
xor
mov
js
adc
jp
aaa
jb
test
lcall
push
mov
mov
jl
ficoml
xorb
mov
cmp
pop
mov
pop
or
dec
xchg
mov
lcall
insb
cmpsl
out
fwait
sbb
and
mov
pop
scas
cmp
dec
xlat
pusha
aad
lret
ljmp
ret
cmp
jb
xor
call
scas
test
divl
jmp
mov
add
or
sub
js
mov
or
imul
jl
jmp
lcall
adcl
mov
pop
add
mov
dec
ljmp
lcall
xchg
mov
faddl
insb
dec
lods
pop
push
fdiv
inc
repz
inc
and
adc
push
idiv
cmpsb
ljmp
jp
nop
cmp
jno
test
xchg
push
movsb
push
xchg
subb
incl
dec
insb
scas
insb
mov
fwait
cmp
sbb
inc
inc
hlt
mov
xor
xor
jg
jnp
es
mov
stc
and
inc
rcrb
jb
lcall
sub
sbb
enter
xor
ret
outsb
xchg
sbb
insb
cmp
adcb
ljmp
cmp
enter
inc
mov
nop
pop
roll
push
sbb
inc
xor
mov
lcall
jecxz
ficoms
sub
xchg
dec
ja
fcmovnu
mov
popa
into
jo
rcrl
mov
sub
sub
cld
mov
mov
cltd
pop
cmc
push
mov
std
addb
mov
fs
or
repnz
ljmp
js
sbb
arpl
aad
imul
sbb
push
push
xchg
add
call
loopne
mov
ja
popa
xchg
push
jb
pop
stos
xor
ret
mov
jmp
xor
xor
ficomps
out
xchg
loop
jecxz
test
cmpsb
sub
dec
insl
call
bound
insl
mov
into
repz
mov
sub
insb
xorl
lret
push
aad
stos
fisubrl
xchg
test
push
ffree
hlt
into
bound
push
out
or
pushl
testb
inc
fs
andl
pop
test
ss
or
out
lods
pushf
lret
pop
out
call
pushl
out
std
inc
adc
mov
and
adc
inc
ror
shr
push
push
jle
jg
push
jg
fstps
xorl
inc
pop
pop
cmc
pop
pop
xor
leave
lret
adc
inc
pop
mov
shlb
xor
jbe
inc
cmp
push
lahf
add
push
push
cs
cli
out
clc
mov
es
sub
pop
aad
push
fsubs
push
push
push
mov
call
in
hlt
shll
xchg
shlb
lret
mov
cld
testb
iret
mov
mov
xchg
sub
adc
jns
fwait
lcall
push
mov
insb
aam
insl
hlt
loopne
insl
pop
push
add
ret
stos
decl
jne
jb
shlb
pop
imul
icebp
test
loopne
jae
aaa
cmp
shll
mov
std
pusha
jg
call
ss
ret
sub
lcall
lods
push
push
push
cmpsb
jp
incl
adc
jp
push
and
xchg
cmpsl
loop
sahf
or
sub
add
and
jns
pushl
sub
lret
push
adcb
ficomps
sbbb
sub
scas
mov
fildll
push
call
and
orb
movsl
inc
jl
and
xor
jae
cwtl
mov
cmp
fdivrs
pop
icebp
aad
or
jp
aad
jbe
stc
xchg
lock
mov
and
pmovmskb
ljmp
jg
mov
pop
jb
adc
xor
mov
jg
sub
cltd
stc
sub
push
cmc
je,pt
adc
sub
out
into
jl
add
inc
addr16
dec
dec
inc
push
mov
jo
lea
jecxz
cmp
xor
leave
ficoml
popf
subl
stc
les
jo
movsl
imul
dec
lods
dec
and
sub
xchg
cmp
pop
dec
mov
movsl
lcall
das
push
aad
test
addr16
in
test
ficoms
movsb
arpl
insl
push
mov
jge
call
pop
rcll
xchg
or
movsb
lock
jl
int3
and
sbb
mov
lret
mov
imul
xor
xchg
push
mov
lds
mov
enter
jecxz
and
pop
pop
iret
dec
mov
cli
mov
rclb
adc
sub
mov
add
jl
jge
arpl
scas
jmp
jmp
sub
out
jle
xchg
in
cmp
pop
and
or
out
add
jmp
rolb
sti
push
fcomps
cmp
ljmp
mov
xchg
mov
int
jecxz
mov
or
pusha
std
jecxz
int3
rclb
sub
aam
xchg
add
xchg
rcll
daa
adc
decl
fisubs
xlat
mov
data16
push
jns
das
out
or
inc
call
ret
shll
subl
dec
push
daa
cli
aad
cs
jmp
call
add
clc
xor
call
or
in
imul
ret
jne
in
insl
popa
ja
and
push
loope
test
lahf
arpl
and
mov
mov
test
cmpsl
sub
call
cltd
dec
add
push
push
pop
test
mov
push
fcmovu
mov
into
jns
outsb
ret
testb
mov
jl
xor
dec
addr16
inc
sar
call
lods
clc
mov
jnp
iret
xor
jmp
aam
loopne
mov
int
cmp
popa
xchg
mov
adc
cmp
xor
ljmp
xor
flds
or
add
cmp
in
xlat
mov
push
pusha
loop
call
stc
or
pop
rcrb
fmul
frstor
mov
lcall
leave
jbe
dec
mov
or
ja
jnp
lock
fucomip
sbb
int3
push
orl
das
sar
pop
cwtl
sbb
out
hlt
sub
sub
lods
mov
jae
xor
in
outsl
jp
jecxz
out
push
add
xchg
cmp
or
sbbl
sub
xor
cmp
xchg
aam
ljmp
lret
cmp
push
dec
sub
les
and
stos
mov
or
inc
fmuls
mov
and
cmpsl
jl
std
cld
xlat
in
sub
jp
pop
mov
xchg
cwtl
movsl
xchg
je
das
adc
fs
sub
lods
mov
lret
loope
out
outsl
jnp
xor
lcall
fcomps
sti
or
mov
push
inc
pop
xchg
cmp
sbb
dec
in
mov
call
movsl
pop
inc
cmp
lahf
xchg
xor
pushl
push
mov
outsb
cmc
loop
popa
out
scas
sub
mov
lock
jg
icebp
sbb
pop
mov
adc
popf
adc
jg
mov
xchg
xlat
movsl
or
mov
es
cmp
fldt
mov
insb
gs
add
dec
pop
jmp
mov
rorl
nop
daa
dec
fldenv
pushl
inc
inc
cmpsl
mov
mov
mov
sbb
pop
add
mov
adc
decl
cwtl
pop
orb
adc
and
xor
mov
or
loopne
scas
ret
xlat
ss
popf
test
gs
dec
pop
mov
or
into
add
out
std
orl
push
jns
push
out
lret
ljmp
push
stos
insl
add
pop
or
imul
cmp
repnz
add
xor
pop
dec
loop
inc
filds
cmpsl
test
icebp
sahf
or
lcall
loop
xchg
sbb
mov
ljmp
add
push
call
push
rcrl
cmp
push
mov
add
and
cmp
mull
xor
fdivrp
dec
add
movb
decl
sbb
in
fcomp
push
lods
sbb
daa
sbb
sbb
lret
loopne
jg
in
bswap
movsb
add
jg
test
sarb
int3
sbb
jne
rcll
add
mov
or
stos
loope
cmp
call
mov
dec
jns
dec
add
enter
loop
xchg
je
dec
leave
out
loop
jmp
decl
mov
mov
out
fwait
mov
mov
and
mov
or
call
pop
lea
popf
shll
incl
dec
outsl
in
leave
sub
scas
adc
jo
jo
call
test
in
ficoml
mov
test
dec
jmp
dec
xor
jns
test
adc
scas
push
ljmp
mov
inc
fcomi
fldenv
pusha
ljmp
cmp
or
pop
pop
ds
mov
decl
mov
jno
and
cmp
push
insl
and
rclb
mov
pushl
xor
jb
fwait
add
xchg
xchg
ss
inc
push
pop
adc
jecxz
add
stc
mov
lcall
fistpl
pop
and
out
cmp
fstp
push
mov
test
test
lcall
nop
lods
mov
sbb
mov
mulb
inc
das
add
adc
out
xchg
call
das
push
sub
push
pop
cmp
jnp
jle
ret
lods
test
aam
cmp
loope
push
sarl
movsl
xlat
and
pushl
cld
repz
sbb
xor
xor
aaa
lret
fcomps
aaa
pop
shll
fcomip
mov
sbb
mov
dec
enter
lcall
lret
clc
test
push
dec
fadds
jle
mov
jne
insl
inc
xor
cmpl
sub
imul
mov
inc
jae
cmp
test
je
jecxz
clc
fsts
shl
outsl
mov
sbb
mov
jp
pop
push
jg
decl
cmp
fcmovnb
xor
arpl
cmp
fnstenv
xchg
jnp
pop
hlt
pushl
push
push
and
jl
lahf
ja
sbbl
insl
in
sub
xchg
xor
call
aad
jae,pt
cld
icebp
mov
push
call
pushl
cmpsb
ret
fs
sbb
inc
jle
dec
mov
jmp
int
ds
cmp
rcr
incl
loop
push
fsubrl
aas
call
sub
mov
lock
push
inc
nop
and
push
fdivrl
mov
ljmp
pop
lods
sbb
arpl
add
sbb
xchg
dec
imul
cmpsb
iret
or
incl
jae
fidivrs
rorl
jge
incl
mov
add
fisubrl
lods
inc
and
imul
shll
push
cmp
xor
mov
in
push
push
icebp
and
gs
movsb
mov
imul
pushl
aaa
or
ficoms
cmp
and
pop
addr16
int
ja
gs
cmpsb
decl
std
inc
movsl
inc
adc
pop
sbb
repnz
inc
daa
sbb
mov
repnz
and
lcall
and
mov
lahf
adc
xchg
sar
pop
xchg
sti
test
fcoms
stos
add
push
lods
int3
lods
loopne
jne
push
lock
sbb
cmp
cmp
lock
das
sar
mov
xor
test
jg
movsl
int3
test
sub
pop
bound
mov
xchg
data16
push
push
mov
incl
jbe
jmp
lret
push
dec
xchg
jmp
cmpsl
or
data16
fcoms
mov
adc
adc
rclb
mov
mov
jmp
add
jg
mov
add
cmp
pop
hlt
ja
movsb
jb
fs
adc
cwtl
ret
jmp
sbb
js
dec
jno
out
sub
imul
jmp
test
popa
je
das
sar
inc
test
cli
jle
imul
xchg
jns
fisubrs
or
orb
xor
dec
cld
incl
push
scas
call
addr16
sbb
and
mov
outsb
adc
jg
add
mov
aam
int3
ret
test
inc
add
cmp
shll
push
xor
subb
adc
mov
push
or
xor
cld
shl
ret
ja
jle
loopne
xchg
pop
les
mov
pop
pop
adc
call
jge
xlat
scas
imul
fstpt
or
test
mov
leave
negl
std
adc
stc
popf
lahf
cmp
mov
std
mov
imul
adc
lock
scas
pop
lock
ljmp
ja
sbb
jmp
ret
inc
or
enter
incl
ljmp
jo
movsb
push
das
inc
dec
push
cs
inc
xor
mov
dec
gs
ds
lcall
data16
scas
or
subb
lods
jae
fcompl
mov
insl
jne
jg
jg
call
mov
pop
inc
popa
andb
in
stc
ficoms
push
shrb
or
jg
lods
push
and
in
lea
rolb
bound
mov
pop
jg
pop
mov
jb
inc
lret
int
ja
pop
jae
lds
iret
sti
jg
test
pushf
ss
mov
fldt
mov
cltd
pop
rcrb
lock
dec
adc
imul
movlhps
pushl
inc
shlb
stos
or
jl
pushf
fs
push
sub
xor
decl
mov
bound
fidivrs
hlt
mov
fs
xchg
adc
cld
or
pop
and
mov
iret
ja
add
out
cld
js
iret
fdivr
imul
add
decl
pop
repz
out
jmp
out
mov
mov
sbb
pop
cmp
sbb
xchg
jae
push
repnz
pop
repz
mov
gs
sbb
jge
push
insl
xor
add
test
fistpll
out
mov
stos
mov
push
jmp
sub
insb
fs
add
jmp
ret
inc
adc
or
mov
push
loop
lods
push
repnz
pop
int
cmp
jmp
sub
call
mov
jge
lahf
push
ficompl
pop
jbe
fsts
fnsave
add
call
push
stos
popf
mov
outsb
data16
nop
sarb
aaa
stos
ret
xor
pop
dec
ja
add
jmp
sbb
arpl
fnstenv
incl
cli
xor
xor
inc
inc
dec
sub
sub
mov
into
sbb
lcall
jo
xchg
test
loop
shrl
mov
xor
ret
mov
dec
mov
out
stos
inc
loopne
pop
push
xor
lret
cmpsb
clc
and
pusha
jmp
inc
xor
jp
js
ja
sahf
aas
sub
jle
sti
sub
into
int
mov
push
je
xor
ljmp
out
push
xchg
movsl
mov
push
ss
jns
xorb
rcr
fwait
test
adc
cmp
fs
nop
mov
movsb
pop
jmp
int3
dec
aas
movsb
jo
call
adc
adc
jno
fiadds
das
test
dec
jecxz
jae
fsubl
leave
rcll
int3
idivb
lock
movsb
ds
jno
cmp
lods
rol
inc
loop
stc
je
aaa
lret
mov
cmp
loop
imul
cmp
in
ret
daa
or
arpl
cld
dec
jne
ja
dec
nop
enter
scas
xchg
sbb
incl
mov
hlt
pushl
mov
jl
push
mulps
pop
jecxz
adc
push
cmpsl
mov
cli
dec
mov
cltd
xorl
sar
dec
lock
clc
mov
leave
lods
push
cmp
bound
xlat
jg
xor
inc
aas
fs
or
sbb
push
xor
lods
cmp
fcomip
jo
insb
push
ja
repz
push
xor
xor
call
fs
mov
xor
fcompl
insb
jle
cmp
test
xchg
pop
push
xor
pop
push
and
xchg
sbb
loope
pop
dec
pop
cmpsl
cvtdq2ps
filds
addb
cltd
mov
iret
fcomip
ljmp
cmp
or
pop
lock
cmp
mov
mov
call
mov
and
sbb
cmc
dec
cmpsl
xchg
jno
dec
sub
adc
jno
adc
pop
push
ljmp
les
xorb
test
cmp
xchg
or
cmp
cmp
and
incl
scas
in
sbb
pop
lea
cmp
mov
leave
outsl
icebp
test
decl
pushf
cmp
es
shrl
sub
bound
sub
mov
push
popf
lea
lcall
pop
bound
fiaddl
add
mov
and
fmuls
nop
add
call
and
or
jne
or
cmpsb
mov
and
add
jmp
push
js
pushl
roll
push
cmc
std
mov
imul
aam
fcmove
pop
cli
js
es
dec
mov
cmp
jnp
scas
scas
sub
je
ss
rorl
jmp
or
filds
data16
lret
and
cmp
add
lcall
cwtl
orl
and
stos
enter
cmp
inc
ficoml
push
sbb
incl
jge
cmp
pop
add
leave
mov
in
pop
or
push
decl
fnstcw
xor
mov
push
ja
mov
mov
adc
mov
add
mov
jg
mov
pop
add
lds
sbb
pushl
xor
xchg
jbe
sahf
sub
mov
lret
int3
movsl
test
or
pushl
adc
dec
add
je
lock
out
xchg
out
cwtl
xchg
repnz
pop
mov
add
jmp
adc
add
and
test
rcll
outsb
incl
cld
rcr
out
sbb
xlat
push
xor
decb
loop
loop
fcomip
mov
xchg
xchg
out
or
test
mov
pop
rorb
cld
pop
cmp
cmp
jbe
cmp
mov
cld
repz
mov
sbb
leave
lret
push
outsl
xor
std
push
bound
rolb
lcall
or
orl
push
loope
in
js
mov
ljmp
stc
mov
xor
adcl
jnp
jmp
fwait
clc
mov
and
mov
jne
xor
xor
adc
cmp
imul
in
out
stc
outsb
lods
test
loop
or
outsb
add
mov
ljmp
inc
loope
mov
inc
mov
xor
jne
cmp
loopne
cmp
jmp
mov
lahf
sbb
inc
cwtl
and
or
inc
repz
lcall
dec
push
dec
mov
push
sub
jmp
push
adc
cmp
fcomp
sub
jmp
ljmp
inc
mov
adc
movsl
ds
mov
cmp
sbb
stos
insb
add
dec
movsl
jg
jno
mov
shl
adcl
inc
xlat
jmp
lock
mov
cld
test
dec
lock
add
inc
sar
jg
subl
mov
add
das
inc
fnstenv
ljmp
sbb
mov
rorb
insl
sub
in
dec
mov
jno
inc
rcrb
dec
out
push
das
pop
imul
out
or
lds
inc
push
xor
adc
bound
adc
pushf
imul
lock
cmp
ffree
push
ja
add
cmp
shlb
push
sub
jg
sbb
fcompl
lods
xchg
popf
pop
mov
shll
das
dec
xchg
lods
push
xchg
mov
jmp
xchg
cli
push
pop
add
jmp
out
repz
lcall
or
in
dec
pusha
xchg
xor
jmp
decl
hlt
call
in
mov
es
mov
mov
rcrb
or
or
pop
xchg
subl
cmp
sub
dec
mov
or
pop
pop
inc
fmull
cmp
inc
loopne
loop
mov
or
shr
pop
out
push
int3
enter
ljmp
pop
inc
jle
daa
jp
xlat
lret
push
std
dec
dec
pop
cltd
shl
xchg
xchg
and
clc
pushl
push
aas
jns
scas
insb
sub
std
cs
fisttps
or
inc
aaa
pop
mov
in
repnz
lahf
and
adc
fnstenv
out
arpl
sbb
push
or
mov
inc
mov
sub
cli
cltd
cld
xor
int3
lcall
mov
push
sub
inc
mov
add
cmp
ljmp
or
push
pop
lret
pop
xchg
push
mov
mov
cmp
mov
xor
testb
insl
ljmp
shlb
incl
pop
mov
push
push
loopne
inc
loopne
icebp
aad
jne
jle
pushl
cmp
cmp
mov
enter
xchg
jo
aaa
adc
sbb
inc
mov
mov
mov
decl
fistpl
aas
pusha
sub
jecxz
pop
cmpsl
ljmp
jmp
cmp
sbb
cmc
adc
xchg
outsl
flds
ud2
aaa
fbld
je
fucomi
mov
imul
in
adc
and
data16
jno
lcall
inc
mov
inc
push
cmp
fs
mov
mov
aad
jecxz
jle
inc
cmp
jae
dec
jmp
mov
add
inc
mov
mov
cmp
xor
fwait
fnsave
xchg
stos
mov
xchg
call
iret
and
movsl
adc
pop
xor
mov
cmc
repz
pushl
fucomi
lret
nop
jmp
mov
xor
shl
mov
das
jo
push
cmpsb
xor
cwtl
aad
mov
mov
adc
enter
ljmp
andb
arpl
pop
js
sbb
call
ljmp
lret
scas
hlt
es
cmpsl
xlat
jo
sti
fldcw
fistps
jae
sub
fwait
push
clc
call
push
mov
and
and
js
inc
ret
inc
or
jl
decl
or
test
adc
xlat
cwtl
mov
jno
sbb
decl
add
push
and
lret
or
loope
fidivrl
cld
fadds
jg
and
cmp
loopne
jp
jns
fstps
inc
stos
mov
or
testl
fsubp
mov
mov
mov
cmp
stc
mov
dec
daa
cmp
add
int3
cld
insb
cwtl
push
mov
fstpl
xchg
out
mov
fdivrp
ljmp
ret
ja
mov
insl
sub
pop
mov
out
popf
push
cmpsl
bound
icebp
jb
jmp
xchg
bound
adc
ljmp
or
jo
leave
lahf
arpl
or
push
dec
jle,pt
add
cltd
mov
mov
call
jno
cltd
imul
mov
xchg
adc
das
mov
cmp
mov
incl
jae
dec
xchg
dec
inc
repz
xchg
test
cmc
out
mov
ljmp
arpl
cltd
nop
dec
add
cmp
outsl
pop
lret
and
aad
add
sbb
jmp
outsl
jne
xor
ljmp
and
xor
hlt
sahf
clc
mov
mov
out
daa
mov
inc
imul
call
xor
lcall
dec
stos
std
dec
int3
daa
test
out
push
decl
sub
call
pop
loope
fwait
jecxz
mov
pushf
push
mov
into
or
shrb
inc
iret
inc
mov
pushl
jecxz
jp
movsl
ss
add
mov
fdivs
xlat
sbb
jmp
jo
mov
test
or
sti
xchg
push
add
xchg
decl
testb
incb
rcl
lahf
inc
mov
push
ja
mov
inc
inc
mov
call
push
cmp
dec
jle
and
hlt
stc
sbb
jge
decl
inc
or
das
jno
ds
out
ret
xchg
add
ljmp
mov
mov
pop
jne
inc
xchg
aad
fwait
movsl
dec
mov
scas
mov
mov
ljmp
jge
addr16
mov
sub
sahf
es
or
aas
xor
decl
ljmp
ljmp
dec
mov
pop
out
xchg
mov
or
loopne
jbe
cmp
adc
enter
fldt
push
cmp
add
pushl
mov
test
dec
mov
negl
shlb
fwait
adc
call
xor
out
jno
xor
fsubp
push
push
cmpsl
pop
repz
rcr
decl
sbbl
lods
or
nop
aam
out
xchg
jle
lret
aaa
cmc
lcall
subb
int3
jmp
fstpt
adc
mov
jae
fwait
push
inc
mov
jg
xchg
or
xchg
xor
add
xor
pop
add
mov
cmpsb
mov
and
pop
add
ds
xchg
jmp
or
mov
mov
push
push
mov
cmpl
loope
cmp
pushf
gs
mov
pop
fidivrl
jno
in
jge
add
pushl
sti
mov
fldenv
popa
push
les
push
jl
adc
push
mov
jns
jmp
leave
notl
or
cmp
mov
mov
imul
inc
or
push
push
jmp
mov
pushl
data16
or
test
lret
into
push
ds
ljmp
addl
xchg
fucomp
or
int3
push
js
and
jecxz
subl
xor
lcall
sub
pop
cwtl
jbe
jle
adc
rsqrtps
dec
imul
push
mov
sub
call
test
jae
pushf
inc
and
inc
mov
jbe
mov
jmp
sbb
pop
mov
jno
inc
add
lret
scas
enter
mov
out
clc
xchg
mov
mov
data16
pop
leave
sti
decl
testb
inc
fildl
sub
jle
pop
adcb
push
pop
jbe
stos
fsts
jnp
pop
and
repz
or
push
sahf
push
mov
test
lcall
in
ljmp
sub
adc
push
mov
stos
call
or
int
cltd
xchg
js
jno
mov
mull
lret
adc
push
cmp
pushl
mov
jnp
inc
xor
test
mov
xor
sarl
outsb
js
lcall
jno
mov
cmp
out
inc
in
jae
scas
add
mov
adc
jmp
int
push
mulb
pushf
out
jmp
xchg
sbb
fcomip
lcall
shr
mov
pop
adc
cli
popa
lock
push
in
out
jbe
ficoms
push
sub
adc
dec
in
pop
das
cmc
out
sahf
dec
scas
sar
mov
jns
xchg
dec
cmpsl
movsb
mov
xchg
loop
mov
call
scas
dec
lods
mov
push
jge
mov
sub
mov
insl
xchg
sub
xor
stos
insl
dec
adc
jl
movsb
or
dec
out
clc
sti
add
mov
sbb
push
push
add
sbb
or
mov
sbb
cmp
mov
out
les
sbb
xor
mov
shl
decl
mov
dec
jmp
pop
xchg
xchg
aad
push
cltd
sub
inc
push
test
aas
jmp
loope
call
sub
mov
addl
mov
push
pop
cmp
mov
ja
mov
daa
push
dec
pop
insb
int3
stc
imul
or
mov
test
clc
xchg
adc
orl
push
ret
mull
incl
inc
pusha
test
mov
inc
adc
xor
dec
add
hlt
stos
sub
sub
inc
push
fwait
push
dec
lds
int
dec
inc
push
or
mov
push
repnz
and
jns
jmp
mov
xchg
lret
jmp
fdivl
es
call
cmc
scas
xchg
rcll
or
pop
faddl
mov
pop
stos
and
decl
xchg
aam
xor
push
into
dec
es
lods
lcall
adc
andb
pop
int3
mov
scas
hlt
jle
jns
add
sub
test
jnp
out
xchg
pop
int
imul
xchg
inc
sbb
decl
popf
stos
and
mov
add
aas
pop
roll
push
add
inc
lock
mov
into
sub
add
push
decl
lcall
push
cltd
out
fsubrl
aaa
mov
sub
xlat
enter
js
test
mov
stc
mov
xchg
cltd
jle
pop
rol
in
jbe
push
adc
push
cs
add
inc
stos
mov
pushf
clc
sbb
stos
push
fnstcw
push
jae
incl
mov
shlb
xor
xchg
test
jmp
sbb
call
lret
gs
add
xchg
cmpsl
add
scas
pop
in
jae
iret
pop
cmp
mov
lcall
subb
ja
paddsb
inc
lret
rorl
daa
and
lods
jecxz
and
andb
leave
fcom
or
add
js
cltd
pop
push
in
jecxz
fildll
adc
or
mov
or
xchg
mov
cmpsb
dec
mov
pop
incb
mov
call
ret
loop
mov
dec
pop
mov
pop
mov
sbb
dec
sub
arpl
loope
adc
mov
in
xchg
test
rcrb
adc
ljmp
rclb
fidivrs
cmp
dec
ficoml
out
in
pop
call
or
testl
jo
es
inc
int3
jg
lcall
rolb
aaa
in
sub
xor
incl
loope
push
int3
pusha
adc
pop
pop
cwtl
ret
ds
testl
lcall
lret
insl
pusha
adc
ljmp
push
add
pop
fsts
inc
adc
test
decl
aad
cwtl
sub
add
clc
lods
inc
mov
sub
fimuls
sbbl
pop
xchg
mov
mov
jecxz
xor
or
adc
fs
clc
jg
jp
cmp
or
dec
inc
push
cmp
pop
inc
movsl
xchg
incl
cmpsl
xor
sub
or
adc
test
jp
mov
call
in
ds
dec
loop
fnclex
and
roll
ljmp
fwait
or
mov
fisttpll
stc
iret
xor
cmp
add
das
xchg
adc
iret
stos
les
aaa
or
add
mov
jl
xchg
pop
sbb
ficoms
push
pop
pushl
and
les
outsb
es
out
mov
or
dec
outsb
stos
std
mov
lcall
pop
and
stos
cmpsl
scas
sub
enter
adc
pushl
and
cmp
std
imul
or
mov
push
mov
in
aam
cs
jle
test
mov
pop
test
shlb
outsl
and
sub
pop
call
and
ret
jno
adc
outsl
jnp
cwtl
jl
lods
in
push
jmp
decl
sbb
dec
dec
jbe
and
stc
add
lret
leave
scas
loope
decl
out
add
pop
ret
push
addl
mov
mov
insb
or
decl
adc
call
jg
xchg
pop
lock
call
add
std
push
hlt
sub
sahf
dec
daa
inc
add
lahf
test
mov
pop
jmp
mov
add
fidivs
jns
cmpsl
rcrl
mov
pop
inc
fs
arpl
dec
push
add
add
push
ljmp
jae
jl
jbe
pop
cld
les
test
jl
mov
jns
nop
lock
mov
ret
xchg
jmp
and
rolb
imul
jge
test
test
incl
test
mov
repz
cmp
jne
loope
icebp
test
jg
rorb
pusha
rcrl
sub
pop
into
fldcw
scas
pushf
ja
or
decl
dec
shll
mov
fwait
data16
mov
lret
jle
outsb
nop
out
fcomip
mov
imull
sub
outsb
addr16
and
sub
xchg
imul
pop
adc
push
imul
loop
cmp
jg
fsubr
enter
cmpb
inc
orb
jno
jmp
mov
add
xor
scas
inc
loop
sti
jne
mov
jne
insl
icebp
in
lcall
call
lock
inc
xor
or
pushl
popa
mov
adc
pop
bound
fstpl
inc
test
fnstenv
incl
pushf
test
imul
adc
pushl
jne
imul
cli
sub
out
cltd
pop
shll
xchg
ss
push
add
jg
repnz
scas
lods
adc
cmp
mov
mov
std
pushf
adc
dec
push
push
jns
add
jns
pop
jg
aas
ja
call
call
insl
mov
jnp
dec
add
cmp
push
xlat
test
mov
es
xchg
lret
pop
pusha
inc
add
cld
je
or
clc
jg
mov
lods
and
xchg
xlat
out
xchg
mov
ljmp
dec
fs
stc
test
in
stos
data16
imul
pushl
repz
call
shrl
dec
jnp
xchg
or
mov
sbbl
dec
repz
out
mov
cld
inc
and
push
xchg
jb
int
stc
and
aas
sbb
scas
pop
and
xor
mov
out
test
jmp
inc
pop
mov
mov
pop
pusha
pop
ss
fdivr
fcomip
jmp
or
test
cmp
sahf
add
mov
dec
mov
cmpsb
jge
mov
decl
add
cmp
mov
das
addl
mov
mov
call
ljmp
ds
push
adc
punpcklwd
mov
sub
adc
in
jno
lcall
xor
dec
adc
xchg
and
xor
mov
dec
sbb
dec
scas
out
das
frstor
outsb
pusha
mov
mov
jnp
leave
inc
shll
incl
push
aam
rolb
stos
movb
sbb
ja
and
jne
push
adc
incl
enter
test
filds
in
mov
cmp
sarl
inc
pop
dec
movsl
adc
daa
mov
adc
test
push
je
xor
sbbl
mov
pushl
fcoml
add
js
aad
shlb
push
aad
dec
scas
mov
cli
es
dec
cmp
cmp
inc
push
and
add
loop
jmp
inc
sbb
out
nop
ljmp
add
and
in
dec
or
sbb
scas
cld
cmp
add
mov
rcrb
adc
mov
fmull
insl
jnp
test
lcall
or
xchg
adc
mov
adc
pop
je
adc
loop
ljmp
mov
stos
add
add
dec
jl
push
iret
jns
icebp
ljmp
pusha
push
mov
mov
insl
push
cmp
ljmp
cmp
les
push
stc
pop
mov
shlb
incl
jg
dec
test
jle
pop
jnp
jle
lahf
in
test
sbb
in
into
js
inc
inc
jg
pushl
dec
xchg
or
in
add
xchg
movsb
fdivr
stc
aad
in
dec
and
ljmp
sbb
movsl
dec
mov
add
push
xor
rorb
jnp
sbb
call
out
out
gs
pushl
cld
pushf
cs
imul
inc
jbe
push
sub
mov
adc
call
cmp
ljmp
add
lcall
jbe
cmc
mov
dec
and
or
stc
sti
sahf
xchg
outsl
flds
inc
push
cld
fstpl
inc
sahf
mov
push
fcomps
pop
mov
inc
jns
ljmp
test
or
xor
inc
jbe
inc
jle
repz
jo
incl
push
xchg
mov
shlb
cmc
fwait
pop
sar
stc
imul
outsb
test
bound
cmp
ret
dec
push
mov
push
pop
xchg
divl
xlat
nop
or
push
sub
popf
add
cli
daa
push
outsl
aaa
fwait
mov
dec
cmp
xor
mov
pushl
xchg
mov
pusha
sub
repnz
and
mov
jo
push
lcall
fistps
fmuls
fmuls
ja
push
mov
xchg
sbb
sub
jo
add
gs
call
fists
adc
in
js
shll
pop
movsl
push
in
adc
xor
imul
hlt
jne
into
sub
enter
das
adc
scas
in
push
mov
push
stos
push
sub
xor
mov
call
in
mov
aam
aas
insl
scas
notb
into
xchg
or
cld
cld
mov
sub
add
sar
nop
scas
cmpsl
shl
and
int3
jno
std
mov
rep
scas
clc
cmp
mov
jp
cmpsb
inc
roll
sbbl
loop
xor
incl
int3
scas
lret
mov
jbe
mov
sbb
add
cltd
loope
jg
jne
xchg
cmpsb
out
je
sarb
stos
imul
jb
sub
sbb
sahf
dec
ss
jns
and
fwait
andb
loop
lods
pop
mov
call
push
jb
jecxz
jno
shll
mov
dec
and
jg
sub
ja
out
add
pop
dec
or
cltd
sub
call
jno
insl
or
les
lock
pop
in
jl
test
dec
ret
loopne
sti
dec
ret
ss
jg
and
mov
mov
xor
and
xor
add
call
adc
clc
or
dec
mov
imul
sub
or
pop
pusha
jmp
hlt
punpcklbw
dec
push
outsl
mov
decl
push
sti
mov
xchg
cwtl
mov
push
scas
xchg
fs
add
into
or
or
jmp
xchg
test
pop
fcmovbe
adc
cmpsb
xor
mov
jle
pop
mov
sub
cmp
decl
mov
mov
inc
xchg
pop
pop
aas
inc
mov
cmp
dec
push
lcall
sub
pop
pop
fistps
add
push
call
adc
pop
sar
call
lds
or
xchg
aas
icebp
jg
xchg
mov
stos
add
ljmp
pusha
sub
mov
jle
add
andl
fsts
imul
js
adc
and
jmp
ljmp
shlb
nop
loopne
sbb
mov
mov
jno
mov
out
repnz
lahf
xor
mov
jge
movsl
pop
inc
stc
jmp
inc
jnp
and
int
jp
stos
dec
out
jp
cmp
adc
dec
adc
ret
insl
aad
fisubrl
push
push
and
imul
sub
outsb
loop
loopne
mov
or
test
xlat
add
mov
out
clc
jo
sub
xor
jno
jg
out
adc
cmpsl
mov
adc
add
call
pusha
xor
scas
jl
ja
mov
add
mov
popf
decl
mov
loop
jmp
insl
xchg
ficoml
mov
inc
mov
cld
pushl
test
mov
push
add
xor
dec
jg
les
jns
into
call
stc
xchg
cmpb
aaa
imul
dec
ja,pn
fs
mov
shlb
push
test
lock
jmp
popa
hlt
sbbl
inc
sub
mov
popa
gs
or
sti
clc
lods
stos
cld
das
clc
ljmp
icebp
leave
rolb
jmp
and
lea
stc
adc
and
les
dec
push
push
ljmp
or
in
das
test
aaa
and
lahf
hlt
mov
sti
decl
mov
shrl
cwtl
push
rolb
add
cltd
pop
and
pop
cmp
adcb
push
mulb
adc
add
cmpsl
jo
mov
loope
add
jg
sub
in
addr16
jl
cmpsb
xor
mov
out
bound
out
sub
dec
push
cmpsl
pop
icebp
lret
leave
movsb
sub
ss
xor
and
mov
cli
enter
pop
sbb
addr16
adc
cwtl
pop
inc
loopne
xor
mov
hlt
dec
adc
cmpsl
mov
push
ret
mov
xlat
adc
ljmp
cmp
outsl
and
cmp
xlat
and
inc
and
jnp
inc
sub
ds
stos
cmp
es
mov
imul
push
incl
mov
stos
lds
jns
shrl
inc
mov
int
xor
xor
xor
outsl
decl
jmp
lods
sbb
pop
sti
or
jecxz
cmp
je
clc
mov
dec
cli
jmp
lock
ss
fiadds
cmp
lea
insl
dec
cmp
and
cmp
and
adc
pop
outsb
icebp
dec
sub
and
in
fisttpll
clc
push
cmp
pop
fsubp
cmp
loopne
mov
decl
insb
fdivrl
add
xchg
call
jo
andb
out
das
nop
sbb
hlt
jmp
test
iret
subl
mov
test
aaa
mov
fbstp
fisttpl
lea
repz
jecxz
sub
incl
add
jecxz
jecxz
dec
or
mov
imul
mov
std
rcrl
call
iret
mov
pop
aam
mov
sbb
lea
push
inc
cmp
sbb
aad
call
and
repnz
jle
add
arpl
repnz
filds
mov
cmp
cmp
cmp
into
xor
jo
jg
insl
or
sub
rcrb
xor
ja
lret
jl
aam
fildll
loopne
cmp
sti
adc
adc
loop
fistpll
dec
jns
mov
and
xchg
ret
fs
and
test
decl
loope
push
dec
loope
pop
xchg
mov
pop
and
punpckhdq
jg
inc
cmp
fisubrs
addr16
mov
xor
push
jl
push
rolb
pushl
sub
push
test
xlat
arpl
insl
fwait
repz
jnp
push
push
inc
fscale
in
adc
fdivl
call
dec
sub
les
cmc
mov
mov
fidivrs
xchg
xchg
into
movsl
inc
clc
push
add
add
decl
lcall
pop
loop
inc
xor
adc
mov
imul
mov
fldcw
fsubs
cwtl
add
jmp
shlb
lods
xchg
add
or
stos
jbe
mov
lods
pop
hlt
ljmp
mov
cmp
adc
cwtl
or
push
decb
xchg
and
andl
mov
out
clc
call
fwait
dec
sub
insl
sbb
lds
xor
std
in
xchg
adc
mov
icebp
decl
sub
mov
mov
jmp
shrl
cwtl
and
jp
ljmp
loopne
std
cmp
inc
cli
clc
xlat
rol
stos
pop
xor
push
ljmp
cmp
dec
lea
mov
jle
hlt
cmp
mov
sarl
push
jns
lahf
add
add
out
jecxz
call
outsb
mov
xor
test
inc
cmp
nop
fdiv
gs
cmp
mov
xor
or
mov
inc
adc
mov
sub
adc
adc
fistpl
xchg
in
cmp
cmp
aas
stos
paddw
or
lods
jl
hlt
jg
cmpsb
adc
sahf
dec
popa
jns
aas
mov
xorl
dec
xor
or
lcall
cmp
pop
mov
pop
dec
addr16
test
cmp
dec
sbb
dec
push
cld
incl
cmpsb
out
pop
or
jge
incl
sub
ljmp
xchg
pop
mov
mov
xchg
add
mov
lcall
loop
xchg
sub
xchg
pop
inc
sarb
xchg
lret
sub
jbe
orl
lcall
dec
daa
fdivrs
roll
add
test
pushf
mov
testb
cmpsl
subb
xor
int3
shufps
pop
movsb
mov
sub
jb
repz
jbe
call
jecxz
movsb
add
mov
mov
psrlq
ds
jmp
push
lahf
xchg
jl
inc
xor
mov
mov
pop
mov
push
mov
and
ljmp
out
repnz
imul
mov
lods
out
addb
inc
icebp
jo
cmp
pushl
cld
inc
xor
stos
cs
cs
xor
cmp
xchg
sub
mov
clc
jl
sbb
and
pop
ret
mov
pop
mov
movsb
sti
call
cmc
and
sbb
cli
popf
add
xor
pop
ret
lock
out
pop
sub
pop
mov
mov
inc
and
mov
mov
arpl
push
and
cmp
call
cmp
shll
jno
lcall
mov
push
ret
mov
aam
movq
call
pop
cmpsl
test
cmp
lahf
icebp
insl
jmp
mov
fldcw
or
pop
mov
gs
test
xorl
mov
inc
call
xor
imul
mov
push
aad
cmpsb
jbe
pusha
pop
arpl
lahf
dec
jg
pop
lock
insb
dec
or
mov
mov
adc
mov
call
neg
or
mov
dec
and
leave
mov
lret
imul
aam
filds
jg
jne
jb
cmpsb
pop
jle
xlat
out
sub
sti
cmp
popa
and
test
mov
hlt
xchg
out
mov
pop
mov
push
mov
xchg
jno
or
loop
push
lods
and
xor
stc
mov
and
and
lcall
xchg
mov
xchg
fisttpl
pop
cmc
incl
ja
sbb
or
fisubs
mov
jl
and
movl
outsl
mov
add
xchg
or
pop
daa
lret
sub
mov
cmpl
sub
shrb
mov
mov
loopne
mov
pop
lcall
adc
call
sbb
rorb
imul
ds
inc
pop
into
add
mov
insb
fbstp
ja
mov
pop
jp
inc
ljmp
add
stos
cmpsl
repz
sub
stos
call
outsl
jg
jmp
mov
leave
mov
imul
xchg
sti
mov
rcrl
mov
jnp
movsb
sar
stos
mov
xlat
sbb
xor
out
or
mov
pop
lahf
push
push
shlb
sub
fs
data16
outsb
cmp
mov
pop
jecxz
movsl
mov
jne
orb
pushl
lcall
int
and
fcoms
jnp
mov
cmc
incl
mov
sti
jae
lret
fwait
andb
decl
mov
cwtl
pop
pusha
or
jp
or
dec
push
pop
test
pop
sbb
xor
sub
inc
les
xorl
cmpsb
test
incl
sub
jo
and
ljmp
sti
in
rorl
mov
mov
lcall
push
cltd
sbb
xor
add
fisubrs
out
push
pop
cmpb
xchg
add
xchg
sbb
lcall
lret
adc
mov
inc
xor
jle
pop
xchg
pushl
std
call
popa
cmp
sbbl
adc
mov
int3
push
repz
jg
cltd
mov
leave
dec
into
sbb
int
mov
mov
ja
repz
and
loop
addr16
ljmp
popl
fildl
aaa
xor
jbe
and
cmp
sub
mov
into
call
jne
ss
insb
shlb
inc
pushf
out
and
push
shr
pushl
int
push
dec
xor
sub
mov
jg
add
lods
in
inc
adc
cmpb
ret
ljmp
pop
out
mov
push
sarb
mov
mov
adc
adc
stos
xor
call
roll
sbb
push
mov
out
js
imul
fidivrs
in
inc
ljmp
jno
push
pop
aad
loope
clc
fldenv
pop
fcmovu
les
pop
notl
push
ljmp
and
mov
stc
rorb
inc
adc
xchg
decl
movl
jmp
lahf
sub
stc
and
lods
out
cmp
push
lods
sbb
ja
inc
bnd
push
outsb
push
leave
out
and
sbb
ss
jge
out
cli
incl
dec
call
test
xchg
int
pop
icebp
mov
inc
sbb
scas
sar
call
fisubrs
les
fs
push
jno
outsb
dec
lods
or
movsl
add
adc
int
loopne
jg
xor
cmp
mov
gs
inc
inc
test
xlat
mov
sbb
add
cmp
icebp
decl
dec
and
adc
imul
cmp
mov
mov
jns
and
orb
mov
mov
pushl
stc
pop
ss
cbtw
leave
jp
sub
push
sub
andb
decl
pop
mov
mov
jne
ja
ja
clc
pushl
lret
cmp
movsl
out
xor
mov
push
sub
mov
cli
scas
adc
pop
inc
pop
push
insb
push
jg
push
and
and
fucom
sub
mov
mov
icebp
fwait
pop
push
hlt
cwtl
sahf
push
fnstenv
push
rcr
out
rcrl
jl
not
pop
dec
and
jo
incl
cmp
mov
and
dec
cmc
pop
pop
xor
lret
ret
imul
loopne
dec
pop
mov
scas
mov
mov
ja
push
cmp
mov
stc
xchg
mov
adc
ljmp
sub
pop
movl
mov
lods
xchg
xchg
popa
repnz
in
decl
insb
fstps
mov
mov
mov
mov
jmp
push
cli
fwait
push
mov
mov
xor
dec
addl
cmp
inc
adcb
gs
xchg
movsl
js
repz
pop
xor
scas
sub
test
call
mov
fstp
xor
outsb
test
add
mov
dec
addb
loopne
bswap
sarb
xor
iret
outsb
fnstenv
pop
xorl
mov
movsb
push
test
mov
decl
jl
push
jecxz
call
add
imulb
add
cld
pushl
clc
cld
push
xchg
cmp
mov
shrb
repnz
mov
out
iret
arpl
pop
fidivrl
xchg
mov
jg
push
mov
inc
sti
mov
sub
outsl
sub
mov
xchg
push
inc
jmp
adc
mov
xchg
out
bound
inc
inc
loope
lahf
call
xchg
inc
movsb
push
add
mov
push
pop
dec
leave
and
popf
xchg
mov
decl
or
mov
pop
imul
jle
popf
popa
fwait
subb
popf
data16
idivb
lods
mov
mov
jnp
jecxz
cli
testl
jmp
in
adc
push
dec
xor
leave
jno
pop
nop/reserved
imul
leave
sub
sti
pop
fsubrl
lret
dec
enter
mov
icebp
out
sarb
sub
cmpsl
push
adc
std
pop
lods
mov
dec
sbb
js
jbe
ja
repz
jecxz
lea
xchg
stc
mov
pop
add
in
mov
sub
mov
push
arpl
je
sbb
ljmp
call
je
cmp
or
add
cmpb
mov
cli
jle
add
xchg
rcrb
mov
ja
mov
xchg
jnp
sbb
js
xlat
xchg
ljmp
sub
dec
in
int
ficompl
add
outsl
pusha
xchg
cld
repnz
fldt
xor
mov
fs
lcall
sub
push
ret
push
add
inc
les
mov
decl
mov
pushl
pop
mov
jno
pop
stc
mov
push
sub
pop
mov
mov
pushl
push
or
mov
shr
jo
ljmp
nop
enter
mov
adc
jle
inc
out
sahf
lea
mov
inc
arpl
int
adc
popa
sahf
testb
push
popf
xchg
adc
sbb
mov
cmp
pop
push
pop
xor
cmp
push
enter
je
and
imul
xchg
repnz
cmpb
or
lcall
sbb
mov
adc
mov
in
pop
mov
jmp
popa
inc
popa
xor
adc
jge
push
jg
ljmp
and
bound
push
decl
cld
jmp
lahf
repnz
cmp
enter
xchg
mov
and
iret
fldcw
loop
incl
add
cs
lods
in
fdivrs
fcoms
fildll
add
push
xor
int
mov
fwait
jns
or
lcall
pop
push
mov
jmp
sbb
pusha
xor
push
inc
add
incl
test
adc
sti
jno
cmp
das
xchg
aaa
xchg
pusha
js
ja
jno
lcall
repnz
pusha
dec
bnd
jbe
test
insb
pushl
push
gs
aad
lret
aas
cld
xchg
mov
jg
cmp
adc
dec
jmp
test
into
loop
test
out
cmp
push
loope
in
jno
iret
movsl
ds
icebp
in
xor
ljmp
cmp
pop
xchg
hlt
rcr
dec
int3
dec
filds
pop
sarl
inc
and
call
das
pshufw
add
mov
sahf
dec
les
mov
das
clc
call
sbb
ret
adc
cltd
out
insl
nop
sbb
adc
ljmp
mov
adc
cld
adc
test
cmp
xchg
ljmp
mov
pop
or
icebp
cltd
ljmp
gs
xchg
fcmovnb
je
call
nop
cmpsb
shl
rcrb
pop
scas
dec
xchg
pop
repz
pop
data16
ss
mov
push
sub
out
int
shlb
and
jo
mov
dec
popf
int
jg
jmp
inc
negb
cmpsb
js
sub
jb
jp
pushl
sar
add
scas
add
in
popf
xor
inc
pop
xchg
and
ljmp
push
mov
call
mov
rcl
ret
in
jb
dec
sbb
jg
fistps
fsubrl
cwtl
mov
outsl
nop
cltd
divl
roll
mov
and
sti
xchg
orl
das
or
in
pop
sar
decl
aad
mov
sbb
jp
xchg
sub
call
mov
adc
mov
xorl
mov
dec
dec
clc
negb
sar
lcall
icebp
fdivl
popa
pop
add
or
outsl
add
cmp
testl
lcall
int3
aas
sub
mov
push
dec
stc
jne
ret
cmp
xchg
jne
cmp
jp
push
push
clc
call
jg
sbb
mov
adc
sbbb
adc
pushl
jle
rcrb
nop
push
mov
ret
out
movsl
sbb
pushl
jg
jge
mov
cli
pushf
fucomp
push
xchg
lods
cmp
push
andps
lret
mov
mov
push
aam
xchg
adc
jne,pt
pushl
or
out
dec
inc
xchg
lahf
mov
sbb
hlt
scas
jle
pop
nop
adc
cli
sub
lcall
push
or
xchg
dec
lods
shll
mov
aad
mov
sub
jae
mov
xor
out
mov
mov
jl
mov
test
andl
aas
cmp
cld
jbe
into
lcall
push
pop
push
jl
sub
xchg
mov
sub
mov
ljmp
nop
dec
mov
insl
fwait
lret
stos
sub
rclb
sbb
movsl
insl
xor
mov
mov
movsb
decb
cmp
inc
movsl
js
movsl
inc
xlat
mov
mov
iret
adc
mov
loopne
push
sbb
mov
or
mov
stos
test
ss
mov
shlb
sbb
sti
ds
sub
mov
dec
clc
add
ds
lret
jg
push
and
and
jp
sub
jl
xor
xor
xchg
or
mov
outsb
insb
jmp
add
xchg
xor
adc
add
ljmp
das
xchg
daa
mov
int3
jo
lahf
cmp
push
mov
addr16
sarl
push
sbb
cmp
fdivrs
sbb
inc
mov
aaa
leave
inc
movsl
mov
fistps
nop
fisttps
pushl
pop
and
mov
out
test
popl
jg
pop
stos
rol
imul
add
out
add
mov
jl
notl
mov
stc
push
mov
push
fsubrs
lret
cmp
ret
ds
fcmove
mov
jge
pushl
ss
push
jae
mov
ret
mov
cli
in
push
test
pushl
inc
stos
repz
imul
into
loopne
mov
lods
and
push
xor
je
ljmp
adc
hlt
arpl
add
and
adc
adc
insb
pop
aas
push
lret
test
call
jge
jl
loop
dec
iret
jae
arpl
xchg
mov
dec
int3
imul
cs
ljmp
test
push
push
sbb
push
cmp
js
adc
xor
fsubrs
jnp
pop
add
xchg
push
arpl
jmp
scas
cli
pop
cmp
pushl
xor
cmp
or
sbb
lcall
and
repnz
data16
mov
test
mov
call
or
dec
pusha
sarb
sub
ljmp
push
out
rcll
fbld
int
ljmp
or
fidivs
ficomps
push
dec
cmpl
or
cmp
call
shr
inc
or
nop
xchg
xchg
outsb
fcoml
mov
pushf
add
mov
mov
cld
mov
test
xorl
pushl
dec
test
clc
cltd
lret
ss
scas
hlt
test
das
das
xor
or
jmp
inc
stc
rol
mov
cmc
cmp
test
sar
fildll
mov
and
xor
int3
add
es
das
pop
inc
pop
push
popa
or
out
pushl
test
adc
sub
inc
ljmp
inc
enter
xor
std
jge,pt
or
test
push
js
loop
or
cmpsl
or
incl
add
push
add
sub
mov
adc
aad
fwait
jmp
jo
push
or
jecxz
push
scas
or
sbb
les
rolb
outsb
sbb
pop
es
jae
jp
inc
lret
cmpsb
lea
xchg
jp
jmp
jb
sub
cmc
sub
insl
repnz
and
push
repz
fldcw
repnz
iret
scas
mov
jg
fs
rorl
addr16
cmp
cld
cmp
lret
fcmovnb
stc
test
es
push
rclb
push
lcall
ljmp
jae
sti
out
xor
push
lods
push
aaa
sub
nop
cld
dec
scas
aaa
dec
je
jmp
shlb
jae
popw
push
xor
into
jns
xor
cld
dec
frstor
xor
fwait
jno
mov
outsb
pushf
mov
faddp
adcb
cmp
mov
xchg
or
inc
sbb
jg
mov
dec
pushw
or
mov
lret
or
xchg
pop
jl
add
daa
add
incl
fs
popa
clc
icebp
mov
xchg
or
xlat
push
push
push
adc
and
jp
xchg
std
incl
clc
das
or
lret
das
and
jb
nop
cmp
jmp
pop
push
inc
fists
ret
jae
add
jmp
pop
cltd
jbe
daa
es
lock
lahf
cmp
insl
xor
xor
xchg
out
mov
and
jge
in
xchg
lcall
sub
push
fisubl
add
insl
std
filds
push
or
std
inc
pop
lea
lcall
fisubrs
shlb
cmp
bnd
in
cmc
jns
rcll
xor
add
lcall
gs
shrb
jnp
rolb
xchg
out
clc
lcall
mov
add
aam
out
sbb
mov
xchg
dec
sti
push
sahf
or
xor
or
in
sub
pop
addr16
push
pop
cld
decl
cltd
sub
in
stc
jl
gs
out
jmp
mov
adc
sar
call
inc
std
sahf
lahf
pop
movsb
xor
repnz
dec
dec
inc
xchg
cmp
sub
add
call
mov
lret
dec
xor
pop
adcb
dec
jb
jo
xchg
ud0
jmp
xchg
mov
jecxz
dec
jo,pn
sbb
xor
add
adc
inc
add
cmpsl
sar
incl
mov
lret
and
popf
jns
adc
cmp
aaa
add
dec
stc
in
ds
dec
cmp
pop
mov
push
mov
daa
mov
negb
push
or
push
mov
jge
and
jg
mov
lods
lods
fbstp
lock
adc
rorl
loop
xchg
test
sub
mov
push
jnp
inc
cmp
ret
test
iret
popa
jle
pop
mov
rcll
decl
push
sarl
mov
pop
and
in
idivl
in
cmp
or
decl
out
jae
test
pop
mov
mov
ret
mov
filds
xor
xchg
xor
jmp
fidivrl
out
adc
scas
mov
bound
mov
jg
sub
lea
bound
incl
lock
popa
sub
std
ljmp
jmp
dec
xchg
add
push
sbb
dec
xor
and
jg
fcmovnb
lea
push
pop
frndint
icebp
data16
inc
push
mov
decb
xchg
mov
lock
jmp
bound
aam
or
aaa
push
les
and
pop
ss
es
mov
pop
lods
repz
xor
jg
lock
mov
mov
or
enter
ljmp
pop
xor
mov
push
cmp
jmp
mov
idivb
add
adcb
pop
pop
ss
jno
push
mov
int3
ja
sub
js
push
mov
popf
cmpsl
push
dec
das
clc
jg
and
cwtl
pop
mov
sub
imul
call
cmovp
push
loope
sahf
xor
xchg
jp
push
push
sbb
adc
cwtl
xchg
lret
sarl
mov
push
fisttps
add
lods
int
inc
and
and
inc
dec
sbb
mov
cmp
lret
xor
pop
out
jg
or
cld
mov
jo
push
movsl
jnp
sbb
mov
jo
add
stos
add
int
out
gs
aas
scas
xchg
cmc
pushl
jae
pop
scas
sub
dec
mov
les
inc
ljmp
jmp
icebp
mov
mov
aaa
and
mov
outsb
repz
call
cmc
adc
sub
lods
add
jb
jmp
cmpl
fnstsw
xor
jmp
mov
inc
mov
icebp
shrb
jae
nop
lock
out
into
mov
inc
dec
movsb
pop
and
incl
inc
add
xor
daa
iret
fisubl
insb
shrl
cmpsb
int3
xchg
fstpt
ret
and
lcall
inc
push
je
aam
push
test
mov
cmp
decl
sub
notl
das
cli
inc
push
cmc
cltd
lods
daa
mov
sbb
jns
pushl
stc
pop
js
jmp
jmp
ss
mov
popf
xor
clc
das
clc
call
nop
stc
aaa
enter
loopne
imul
in
out
clc
outsl
in
imull
mov
xor
inc
cmp
sub
mov
pushl
jp
aam
je,pt
frstor
sbb
mov
sarb
scas
jg
or
adc
decl
inc
iret
call
loopne
lods
adc
or
or
ja
mov
ljmp
xchg
stc
insb
popa
enter
xorb
test
addl
sub
enter
mov
jns
imul
cmp
jmp
lods
insl
outsb
jns
scas
int3
xchg
ficomps
aam
sub
addr16
sti
or
lcall
push
repz
daa
sub
std
sbb
add
xchg
leave
or
scas
mov
ljmp
ret
sbbb
test
adc
mov
or
jmp
mov
mov
sub
and
mov
lcall
pop
cmc
outsl
add
push
sbb
outsb
or
fldcw
iret
inc
mov
sbbl
hlt
adc
fidivs
sub
jmp
popf
faddl
shrl
clc
xchg
in
icebp
repnz
mov
lock
mov
adc
ljmp
lret
out
cmpsb
js
shrb
and
dec
add
cmp
call
push
fs
imul
pop
and
xor
xor
jno
and
out
shl
jae
add
add
sub
pop
add
ss
pusha
push
mov
push
xor
ljmp
mov
shl
hlt
push
data16
out
mov
test
mov
ss
mov
cmp
push
cmc
sahf
xchg
shll
inc
jge
sbb
dec
mov
pushl
push
xchg
fbld
push
lock
jl
jne
shlb
mov
nop
das
sub
jle
call
loope
sbb
stos
jge
stos
mov
mov
sbb
or
shrb
out
das
popa
sbb
add
fisubl
jb
mov
rorl
call
loope
adc
pop
jg
out
mov
cli
and
call
xor
lcall
pop
mov
daa
xor
or
cli
mov
sbb
pusha
jmp
movsb
cld
adc
test
mov
rorb
lods
jae
xor
sub
mov
ja
mov
pop
jne
xchg
mov
inc
inc
mov
shr
add
hlt
lea
push
ds
rcl
aad
popa
mov
push
loop
cmp
hlt
cmpsb
into
test
push
ror
sbb
mov
imull
dec
push
dec
out
mov
iret
movsb
xchg
mov
out
xchg
mov
cs
mov
sbb
repnz
dec
mov
pop
mov
cmp
jmp
xor
sbb
adc
mov
mov
ljmp
dec
mov
or
enter
cmp
stc
xor
dec
jmp
sbb
lahf
sbb
push
fcomps
xchg
mov
add
into
push
icebp
or
int3
movsl
jl
pushl
std
out
rorl
test
pusha
int3
pop
ss
negl
clc
mov
stos
or
std
xchg
repz
sbb
lret
jp
and
dec
dec
clc
pop
adcb
push
aaa
std
aam
fistl
hlt
incl
in
mov
lods
es
rclb
outsl
enter
sub
fwait
lret
cmpsb
mov
mov
sahf
out
fwait
mov
dec
mov
cmc
mov
shrb
out
sbb
cmc
mov
jmp
jge
xchg
push
jecxz
cli
lcall
pushl
loope
inc
dec
xor
pop
adc
imulb
rclb
lcall
pushl
pop
sbb
jg
in
aam
dec
dec
addr16
aaa
cmp
mov
decl
loopne
sbb
decb
push
outsl
sbb
inc
stc
cmp
mov
hlt
inc
or
incl
sti
jge
je
xor
ja
adc
pushl
out
in
stc
and
mov
mov
clc
xchg
xchg
mov
ja
mov
pop
hlt
int
sub
xor
insb
xlat
jbe
push
js
out
sbb
xor
jl
jmp
and
dec
loopne
cmp
das
push
jg
sbb
mov
adc
mov
prefetch
sbb
stos
xor
cmp
scas
cmp
mov
icebp
mov
xlat
jb
jecxz
pop
inc
fisttpl
sub
ljmp
sarb
push
orl
in
stos
pop
aad
sbb
lock
decl
sbb
pop
das
ss
fsts
jle
add
xchg
pop
mov
mov
ss
push
bound
xor
jnp
push
lret
clc
scas
xchg
mov
mov
sub
pushf
cmc
mov
call
sbb
orl
mov
cmp
lret
mov
incl
add
fadds
mov
sahf
movsl
aam
ret
jbe
test
mov
or
sub
jg
loopne
in
adc
mov
cltd
cltd
xor
cmpsb
inc
scas
nop
imul
jle
add
pop
lcall
arpl
insb
test
cmp
clc
fucomi
push
or
je
push
sar
mov
or
test
inc
js
and
dec
mov
pushl
std
bound
add
or
push
fwait
in
mov
push
test
adc
jg
lcall
hlt
xor
cwtl
mov
dec
mov
out
xor
fisubs
aas
insl
mov
pop
fdivr
pop
sar
add
mov
sub
neg
or
das
sar
das
sub
cmp
dec
dec
ficompl
cltd
dec
xchg
or
ljmp
divb
inc
adc
fimuls
push
stos
rol
cmp
shll
pusha
imul
call
adc
in
sub
push
xlat
sbb
ret
jecxz
sbb
inc
in
test
add
fidivrl
test
incl
cld
scas
mulb
popf
xchg
fildll
pop
mov
jmp
gs
jmp
xchg
psllq
push
adc
loopne
ljmp
jne
xor
psrlw
dec
xchg
sub
in
add
incl
and
lds
mov
push
lret
pop
inc
cld
cmp
mov
scas
jge
mov
lcall
pushf
push
enter
jns
mov
sbb
loopne
xchg
stc
in
and
insl
jbe
out
cli
out
push
cli
fistps
popl
lods
aad
mov
ficompl
call
sub
mov
test
out
in
cmp
inc
push
jae
inc
or
call
sub
inc
cli
out
das
jne
fistpll
lods
rol
lret
xlat
fildll
std
mov
decl
or
cmp
inc
fidivrs
repnz
adc
lcall
test
loop
call
adc
cwtl
mov
add
pop
pop
incl
imul
sbb
mov
mov
pop
test
add
fnsave
sbb
mov
cmp
mov
mov
xor
ljmp
mov
and
push
andb
lcall
mov
dec
and
xchg
and
mov
sahf
lcall
xor
or
inc
mov
fiadds
in
mov
xlat
mov
out
push
xchg
inc
dec
mov
inc
jae
shlb
inc
decl
sarl
mov
fisttpl
lahf
pop
xchg
dec
leave
jns
pop
push
std
aad
cmc
dec
outsl
fisubrs
cld
incl
ja
mov
testb
xchg
mov
mov
mov
adc
push
adc
push
mov
mov
insb
inc
xlat
iret
pop
call
jmp
test
pop
std
mov
shll
cmpsb
stos
pop
cmpsl
ret
lods
mov
pushl
xchg
or
test
ja
ret
jns
outsb
mov
adc
lods
xchg
mov
out
arpl
orb
std
shlb
dec
dec
add
cmp
decl
pushf
pop
movsl
sbb
mov
jmp
cmp
insb
xchg
add
fs
incl
scas
out
shr
inc
jge
rcr
nop
call
add
movsl
fimull
xchg
dec
enter
ljmp
mov
test
call
push
pop
or
lcall
aaa
dec
and
add
nop
scas
mov
stos
xchg
in
je
inc
mov
xchg
mov
cmp
nop
adc
jmp
cli
adc
jl
gs
mov
es
push
sar
lcall
cmp
addb
or
sub
aam
and
lcall
sbb
leave
test
std
lret
into
push
cmp
imul
xchg
mov
shlb
rcr
mov
cwtl
jle
xor
outsb
push
sub
add
hlt
push
mov
pushf
adc
das
js
pop
pop
lock
jnp
into
xchg
icebp
mov
in
test
adc
fs
fcoml
jmp
lcall
roll
iret
dec
sbb
jb
jl
pop
pop
js
lcall
cli
sbb
and
call
cmp
sub
cmpsb
sbb
or
mov
in
lock
push
adc
sahf
inc
dec
jp
jmp
mov
call
mov
popa
pop
mov
jbe
push
jns
out
out
xchg
dec
cmp
inc
mov
jl
je
xchg
icebp
inc
add
mov
dec
test
mov
lods
and
enter
ret
jb
clc
sbb
lock
test
cmp
lcall
add
jge
ja
lahf
mov
fs
std
jno
inc
or
fwait
inc
in
sbb
xor
mov
sub
fisttps
add
jne
jnp
xchg
mov
mov
mov
and
mov
mov
adc
mov
aad
jg
fistpl
ret
bound
jno
push
mov
movsl
fwait
lret
lods
std
shll
data16
pushl
int3
jmp
and
cs
scas
or
shrl
and
or
sbb
adc
call
sub
in
sbb
cmp
xor
xchg
mov
jp
mov
inc
jge
push
push
stc
imul
or
out
lods
clc
inc
push
dec
stos
xor
xchg
test
or
lock
pushl
and
mov
rclb
push
add
mov
add
push
mov
lock
mov
jg
push
mov
shlb
mov
pop
adc
push
test
xorb
mov
bound
jne
incl
jns
lret
push
cmp
sub
loope
dec
in
addr16
jecxz
jno
sbb
pop
hlt
mov
add
cltd
jno
push
fsubrs
repz
xchg
in
leave
mov
ljmp
jle
xor
cmc
jo
lcall
lods
add
add
stos
loopne
arpl
lret
ficoml
js
inc
and
incl
xchg
xchg
jl
xor
lahf
sbb
pushf
adc
jo
dec
mov
mov
lea
push
decl
ljmp
test
mov
je
in
pop
sub
scas
jae
je
decl
sbb
repnz
add
jmp
jl
add
push
pop
jns
ljmp
xlat
xor
out
es
decb
jne
jae
test
xchg
aad
fildll
lock
jnp
mov
mov
push
sbbb
lahf
cmp
aas
nop
pushl
fldcw
ret
popf
sbb
sub
clc
cmc
je
pusha
sar
ljmp
add
adc
pop
mov
push
jle
js
ja
push
int
mov
repnz
ljmp
scas
cmp
xlat
mov
mov
in
pop
loopne
mov
rorb
pop
sub
sahf
push
lods
shrb
je
loop
decl
call
in
out
gs
fsubl
jge
popf
repz
leave
pop
pop
sbb
das
test
cmp
pop
ja
stos
sahf
mov
lock
cmp
cmc
dec
or
in
popa
roll
mov
xchg
ret
test
out
lea
cmpsb
pop
insl
or
mov
ss
push
ljmp
outsb
loope
sti
mov
dec
sub
ret
ljmp
push
sub
mov
mov
rorb
sbb
cmp
out
fistps
fs
push
jmp
scas
inc
stc
sbb
ret
cs
jb
push
decl
mov
in
cmp
inc
mov
pushl
push
adc
pop
dec
adc
xor
jmp
xchg
jmp
ret
rclb
ljmp
add
out
arpl
mov
shrb
jb
cmp
sar
inc
inc
sbb
imul
roll
lods
push
aam
push
sub
dec
shrb
sbb
push
ljmp
popa
xor
dec
int3
mov
into
aad
pop
adc
jbe
xlat
cmp
mov
cmp
clc
jge
icebp
pop
fld
xchg
sub
out
insl
pushf
cmp
sarb
cld
inc
xchg
xchg
dec
lcall
inc
fisubrs
imull
adc
mov
xor
into
adc
ficoml
aas
lret
scas
or
movsb
in
jmp
add
mov
mov
lea
adc
dec
jno
les
into
test
adc
ror
push
cmp
sti
mov
es
decl
adc
icebp
in
push
push
ss
inc
mov
lahf
pop
mov
cld
setae
decl
xchg
mov
imul
push
sub
add
mov
fisubs
mov
pushf
fsubr
pushf
and
inc
push
cmp
incl
xchg
clc
dec
sarl
dec
clc
dec
mov
decl
das
into
or
mov
pushf
ljmp
mov
jno
mov
cmpl
xor
ja
adc
repnz
sbb
push
imul
mov
xchg
out
mov
push
cmpsb
push
dec
inc
xchg
in
popf
in
cli
gs
repz
frstor
dec
imul
sub
int
mov
mov
fdivs
xchg
outsb
push
push
mov
or
incl
mov
jo
bound
adc
jo
scas
or
cmp
add
sbb
lds
mov
sub
filds
inc
cmp
mov
aam
xlat
sub
fs
adc
inc
inc
andb
inc
sub
adc
push
subl
stos
ljmp
jbe
sahf
mov
ljmp
push
jne
shrl
jg
mov
jae
test
mov
outsl
nop
dec
sti
addr16
ds
adc
jle
and
xchg
mov
inc
mov
fmul
cmp
jmp
shl
shrl
inc
mov
nop
stos
pop
mov
push
or
movsl
das
popa
imul
movsl
decl
dec
repnz
sahf
xchg
repnz
rcrl
mov
sbb
inc
loope
dec
jg
aas
push
ja
andb
push
cld
pop
bound
and
pushl
clc
or
addr16
andl
pop
js
pop
sbb
loope
mov
fists
iret
sbb
in
jb
call
xchg
jmp
inc
std
lcall
orl
cmp
mov
mov
icebp
es
adc
call
adcb
mov
or
enter
clc
or
xchg
fisttpll
xor
ljmp
repz
add
mov
inc
pop
es
fs
inc
clc
jnp
push
inc
in
add
dec
lock
xor
pop
push
bound
leave
cwtl
out
or
pusha
pop
mov
bound
es
fildl
bound
xchg
push
shrl
ss
pop
lcall
cmp
repnz
push
pop
hlt
fimull
mov
inc
xor
pop
loopne
or
cli
mov
mov
hlt
out
out
pop
repnz
and
cmp
push
inc
jb
push
inc
int
xchg
mov
out
lods
out
ds
in
jbe
je
push
int
inc
daa
add
call
in
sbb
shr
leave
arpl
decl
xchg
inc
sbb
inc
push
imulb
bnd
pop
lds
addr16
and
lret
fcomip
decl
or
xor
ffree
mov
pushf
add
xor
es
jbe
in
mov
ljmp
dec
jmp
outsl
or
cmc
xchg
xchg
ds
push
cmp
xlat
call
test
loope
call
ljmp
mov
ret
sub
das
xor
aad
push
xchg
std
aad
repz
in
testb
aaa
std
decl
inc
inc
push
cld
inc
divl
out
repnz
dec
mov
es
xchg
mov
fwait
and
and
scas
jbe
cmp
ljmp
mov
ljmp
insb
dec
pop
bnd
push
icebp
ljmp
xor
inc
jno
sbb
ret
and
jmp
mov
or
mov
hlt
mov
nop
fstpl
fimuls
negb
incl
push
je,pt
jo
movsb
sub
clc
mov
in
adc
hlt
inc
adc
pop
fcmove
in
push
decl
add
mov
into
stc
cmpsb
notb
or
or
mov
push
jmp
lcall
cld
dec
inc
in
jb
mov
sbb
mov
dec
sti
ljmp
imul
mov
ljmp
jg
adc
mov
jge
ja
clc
mov
xchg
call
push
cmp
stos
inc
shlb
cld
inc
mov
aaa
aaa
mov
fistps
out
pop
jbe
cmp
adc
jle
jg
or
cwtl
push
repz
xor
stos
icebp
mov
fcmovbe
cmp
xor
int3
sub
dec
lahf
jmp
fistps
mov
sbb
loopne
in
leave
push
in
gs
and
int
bound
ret
outsb
inc
sbb
out
es
fwait
jno
inc
ret
js
addr16
les
sub
sub
push
jmp
stos
mov
decl
roll
test
repnz
xor
push
lods
mov
call
std
cmp
jl
dec
icebp
add
fsubrl
mov
and
aad
pushl
dec
jo
arpl
cmp
sti
xchg
fistps
fbld
in
mov
ljmp
loopne
test
stos
mov
cmp
adc
push
int3
fs
mov
sub
cmp
push
dec
pop
adc
decb
jge
dec
cs
adc
dec
sub
mov
pop
fdiv
mov
or
pushf
jg
sub
lods
sub
and
fwait
out
add
movsb
jne
xor
and
lcall
sarl
push
add
movsl
dec
jnp
in
xor
sbb
mov
pushl
ss
lock
in
xor
stos
hlt
pop
pushf
loop
cmp
jl
mov
idiv
cmp
sub
inc
out
imul
xor
mov
lds
imul
sbb
jae
mov
mov
ds
mov
stc
mov
mov
call
or
outsl
pushf
xor
or
jb
sub
xor
ds
out
push
and
sahf
or
mov
iret
fs
xor
fildl
clc
cli
call
xchg
lods
sbb
inc
adc
in
jnp
dec
or
sbb
pop
xchg
pushl
enter
jnp
dec
sub
add
jecxz
add
or
decl
fistpl
and
and
or
aaa
add
lret
jg
sub
testb
mov
xchg
pop
ds
xor
pushl
and
movsl
cmp
push
sbb
inc
jne
stos
xor
sti
cs
lods
int3
mov
sbb
jbe
xor
stc
test
xchg
cmc
xorb
push
mov
jo
jmp
xchg
test
xchg
add
ss
dec
out
int3
fstl
icebp
inc
std
incl
push
push
int3
fisubrs
iret
test
mov
ljmp
fwait
das
bound
inc
lods
push
enter
lret
xchg
fdivrs
inc
sub
decl
in
xchg
clc
pusha
adc
push
push
incl
arpl
jmp
pop
mov
jmp
pop
clc
push
mov
clc
stc
rcrl
lret
xchg
pop
pop
scas
pop
sbb
and
stos
jbe
mov
lcall
sub
pop
dec
xchg
dec
inc
imul
inc
movsb
and
ljmp
push
cs
jg
jl
pop
sbb
aas
fmull
jmp
decl
dec
xor
ja
mov
mov
jecxz
mov
shrb
lcall
push
lods
aas
in
call
mov
fistpl
lahf
xchg
jae
sub
mov
pop
fsts
fsub
pop
hlt
pop
mov
shll
push
pop
jb
test
ljmp
es
sbb
jp
mov
mov
lcall
outsl
fisubs
adc
out
out
pop
call
add
mov
subb
push
dec
add
insl
push
xor
xor
push
incl
pusha
sub
das
int
adc
inc
sti
bound
jns
dec
dec
rorb
lods
lods
loopne
sub
fldcw
pop
jl
xchg
cmp
cmp
and
incl
neg
lds
push
lahf
int3
jge
stos
xor
xchg
push
cwtl
in
mov
rcll
in
pop
shl
jns
jns
mov
inc
in
dec
inc
pop
cmp
inc
stc
inc
mov
inc
lock
push
mov
jl
mov
xchg
stc
mov
scas
mov
call
dec
cwtl
or
mov
mov
loopne
jo
add
call
cmp
add
jp
fmulp
lcall
inc
stc
xchg
in
dec
mov
test
jg
cmpsl
shll
xchg
and
stc
out
mov
jno
test
or
jg
lods
add
or
mov
ret
xor
push
ja,pn
mov
dec
push
out
or
popa
shl
insb
out
mov
add
pop
jg
popa
xchg
pop
jne
pop
mov
sbb
mov
push
jge
cmp
xlat
jmp
jecxz
push
gs
jo
cli
dec
sarb
popa
inc
outsl
pushl
dec
rdtsc
pop
int3
loope
xchg
fcompl
and
jge
cmp
add
push
stc
cmc
insl
add
sbbb
mov
sbb
cmpsb
mov
mov
jnp
les
jle
xchg
mov
gs
pop
shll
movsb
bound
sub
ret
pop
xor
mov
arpl
jno
in
pusha
or
fstpl
xchg
jmp
and
clc
mov
stos
sub
adc
icebp
ret
ljmp
pop
loop
mov
sub
insb
fdivrl
jge
jb
mov
inc
sub
sub
call
pop
mov
ljmp
lds
rcrb
and
test
lcall
pushf
test
fwait
outsb
scas
add
sti
das
out
adcb
fs
hlt
call
mov
aad
test
test
in
or
mov
loop
cmpsl
jo
stos
rcr
incl
stos
xorl
scas
icebp
iret
clc
sub
sbb
or
push
out
add
lcall
cld
movsl
sarb
jmp
pop
add
xor
xor
push
ret
in
sub
repnz
cmp
das
push
dec
xorb
mov
adc
cmc
mov
outsb
or
dec
aad
mov
or
ljmp
out
mov
sbb
xor
out
cmp
cmp
adc
and
lcall
or
dec
mov
jb
xor
pop
pushl
sarb
xorl
cld
lret
push
std
jg
jbe
leave
push
xchg
mov
fisttps
adc
fldt
mov
mov
inc
xor
jmp
add
jmp
dec
cld
push
pusha
rcl
dec
inc
jnp
pop
pusha
push
mov
les
lods
je
lcall
mov
mov
pop
mov
movsl
mov
push
dec
adc
lcall
xchg
jne
ljmp
xlat
test
lock
dec
test
push
mov
or
loop
and
jb
decl
lock
out
je
hlt
sub
xchg
jge
mov
subb
jae
pop
jmp
ds
push
test
add
iret
jg
sbb
mov
xor
aad
lret
dec
out
mov
stos
addl
xchg
mov
pop
cltd
cmp
lret
ljmp
cmpsb
lock
inc
call
xorb
into
jae
std
ljmp
or
xchg
pop
mov
fmuls
dec
sbb
nop
push
divb
lock
call
ret
popa
fdivrl
xor
out
add
dec
mov
movsl
mov
aam
xchg
dec
and
xor
out
add
adc
mov
test
repz
mov
ja
test
sbb
in
sub
cmp
dec
lods
add
pushl
add
mov
fdivr
sahf
jb
and
inc
xor
lcall
sbb
inc
das
push
inc
outsb
inc
in
inc
dec
pop
sbb
inc
dec
mov
adc
inc
push
xchg
psubsw
mov
das
fildl
lcall
mov
sub
cmp
mov
push
inc
pop
nop
push
popf
shll
scas
adc
ret
loope
int
mov
add
pushl
sub
dec
shrl
dec
or
mov
pop
movsb
imul
cmpsb
sub
or
sbb
push
mov
dec
cmc
lcall
lds
add
push
inc
cltd
lret
add
xchg
add
out
and
push
ret
ss
fisttps
mov
es
adc
iret
adc
mov
jmp
shrl
inc
out
or
ljmp
data16
lahf
dec
cld
mov
in
lcall
pop
or
stos
mov
mov
sbb
jne
pop
add
jmp
ja
mov
dec
fsubs
shrb
ret
xor
jmp
addr16
cli
cwtl
push
or
and
fcmovnbe
out
mov
jg
dec
subl
in
adcl
fmuls
insb
lret
cld
ljmp
sub
xchg
push
lock
inc
jg
xor
inc
mov
shll
pushl
into
in
daa
xchg
popa
xchg
test
mul
and
clc
push
fdivr
stos
and
jae
adc
hlt
inc
mov
and
lods
ds
add
pop
adc
scas
and
cmp
jae
pop
mov
scas
cli
incl
shll
out
fs
push
call
rolb
iret
mov
push
dec
out
xchg
scas
push
or
xor
jmp
push
icebp
jl
jae
adc
fnstsw
push
add
cwtl
out
aad
lcall
int
incl
and
cmpsl
mov
data16
test
inc
mov
cmp
mov
mov
call
pop
sbb
jl
sbb
pushf
scas
sbb
jnp
mov
mov
or
mov
mov
cld
filds
sahf
and
stc
rorl
nop
nop
adc
pop
into
sti
idiv
jg
mov
dec
bound
sub
insl
sub
leave
sbb
incl
pop
or
pop
movsl
mov
xor
loopne
or
mov
incl
jmp
enter
fiadds
push
pushf
add
fwait
mov
pop
sbb
std
scas
int3
mov
xor
mov
inc
adc
test
xchg
cmp
repnz
in
in
mov
rorl
out
jb
adc
lret
jns
out
movsb
adc
mov
mov
fdivr
pop
cmc
pushl
dec
mov
adc
pushf
mov
rclb
aaa
mov
mov
pop
movsb
pop
ljmp
and
and
fistps
mov
popa
scas
mov
cld
in
hlt
jge
sub
fdivs
stos
sbb
das
xor
sbb
enter
push
sbb
cltd
lcall
int3
cwtl
lcall
cs
mov
push
stos
mov
lret
push
cmovns
or
ljmp
pop
mov
adc
adc
clc
mov
dec
xor
out
add
dec
sub
add
outsl
fidivrl
or
xchg
sbb
enter
insl
mov
rcr
mov
repnz
adc
sahf
mov
fdivr
les
inc
push
add
jg
loopne
cmp
push
pusha
xchg
jns
mov
fbstp
mov
in
mov
ret
cltd
adc
add
std
popf
add
jmp
out
jns
add
shlb
das
adc
stos
inc
or
fiadds
or
fsubrl
jmp
in
jo
xor
jg
mov
xchg
bound
sahf
mov
pop
mov
jg
incl
jmp
lea
je
pop
mov
add
inc
outsl
mov
dec
pop
xchg
add
or
inc
and
mov
jge
mov
xchg
clc
std
xor
jmp
fsubrl
inc
inc
movl
xchg
aam
addl
fcomp
adc
call
jmp
push
mov
push
loopne
mov
xlat
ljmp
sti
mov
cmp
lds
decl
loope
movsb
push
dec
insl
mov
roll
cmp
ljmp
jae
negb
or
xorl
subps
incl
sub
in
push
cltd
inc
idivl
mov
xchg
test
fsubrs
mov
lock
push
xlat
inc
pop
test
push
movsb
incl
outsl
ljmp
fcoms
gs
push
jbe
dec
ljmp
mov
adc
push
sbb
jns
xor
pop
xor
dec
pop
aas
sbb
pushl
lea
push
aam
pop
addr16
scas
inc
cli
insl
hlt
mov
push
in
cli
decb
pop
mov
ljmp
incl
xor
jmp
in
call
inc
or
cld
cmpsb
insb
stc
test
out
das
mov
incl
push
adc
frstor
lea
mov
jnp
jae
mov
jne
mov
dec
add
sub
add
jp
js
cmp
jg
lods
popf
push
movsl
xor
cwtl
icebp
bound
mov
stos
cmp
add
cmc
iret
add
shrb
scas
es
loopne
cmp
pop
push
je
mov
push
or
call
scas
jmp
adc
rcrl
cltd
mov
pop
dec
inc
adc
loopne
loope
int3
sbb
imul
xlat
xor
jo
hlt
mov
inc
xchg
sbb
cmp
and
lcall
mov
in
xchg
pop
sub
aas
inc
mov
adc
stos
jge
sub
shrl
mov
subb
imul
insb
and
xchg
pop
sbb
outsb
inc
xor
stos
adc
test
cwtl
and
stc
aad
adc
rcrl
jl
roll
cmp
add
movsl
pushl
les
mov
mov
xlat
xchg
pushf
ljmp
cmpsl
iret
in
xchg
sahf
popa
cmp
hlt
xor
loope
les
clc
xor
sub
add
jmp
mov
imul
movsl
fildl
incl
cld
jg
data16
jge
inc
sti
sub
xchg
sbb
out
mov
lcall
cli
pop
shll
je
push
loopne
xchg
cmpsl
and
repz
out
lret
fmull
jmp
jns
daa
int
pushw
lahf
pop
not
mov
jo
adc
jae
inc
sbb
outsl
push
sbb
mov
push
ds
jnp
xor
adc
jo
insb
rcr
push
out
addw
xlat
test
mov
mov
loop
fnstcw
test
xlat
cmpsl
rolb
stos
mov
jne
mov
pop
loopne
push
sub
or
pop
loop
lock
sbb
ljmp
fsubrs
push
shll
xchg
inc
pop
leave
mov
jmp
mov
shll
push
test
lret
lcall
cmp
test
sbb
mov
rorb
sbb
xchg
sbb
shl
cli
stos
lcall
ja
shlb
adc
ss
pop
adc
repz
shrl
nop
cmpsl
inc
std
sbb
testl
pushl
cmp
pop
push
mov
pushf
leave
mov
pop
pop
or
inc
in
jg
pop
inc
js
jno
pushl
cmc
mov
cld
and
stos
and
sub
jns
mov
cmpsl
push
fidivrl
mov
incb
out
sub
inc
xor
pop
inc
movsb
lcall
mov
jge
xor
call
inc
push
ja
rclb
int
lock
fildll
fidivrs
or
jne
call
fildll
adcl
mov
out
mov
dec
movsl
hlt
cmp
mov
mov
pop
mov
adc
push
jmp
fdivs
rcrl
rcl
ds
mov
jmp
fs
call
adc
in
rcr
ret
rclb
shll
inc
xchg
idiv
fcomip
pushl
and
push
icebp
sahf
or
push
mov
pop
inc
ljmp
xor
push
pop
mov
clc
insl
jae
std
cwtl
mov
popa
jbe
jge
adc
icebp
fcomps
aad
dec
xor
clc
adc
loop
pushl
mov
add
dec
xor
mov
icebp
push
pop
and
pop
jmp
cmpsl
pop
jge
mulb
notb
jle
inc
mov
popa
popa
xchg
jns
jp
insb
cmpsb
decl
push
lea
or
xlat
lcall
jns
fidivl
insb
push
sbb
call
imul
pop
cmp
adc
or
jae
addr16
fdiv
inc
jo
cmp
idivb
lcall
and
push
pop
pop
mov
dec
and
shrl
inc
xor
lods
call
aam
xor
lcall
push
aam
test
xchg
pushf
jne
fwait
mov
lock
jb
rcr
aam
sbb
pushl
stos
push
ljmp
mov
add
test
dec
cmp
pop
jnp
fdivrl
push
jae
jno
cmp
lods
ffreep
lock
out
and
cmp
add
aaa
sbb
fucomi
mov
cld
data16
icebp
mov
xor
add
pop
fucomp
loope
out
xor
and
cmp
decl
mov
sub
inc
push
aam
sbb
jmp
das
cmp
in
decl
push
mov
sti
dec
js
ss
add
jbe
scas
cli
loope
enter
mov
decl
aaa
into
mov
ljmp
inc
or
xchg
int
xchg
sub
and
incl
je
jmp
add
mov
popa
outsl
pop
out
cwtl
insb
sti
data16
movsl
fbld
mov
cmp
jle
mov
sub
hlt
add
fisttpl
sbb
mov
sub
ljmp
cli
dec
push
mov
jecxz
outsb
mov
push
int3
sub
xor
js
cwtl
cmpb
mov
fisttpll
cmp
jp
inc
adc
sub
jmp
pop
push
pop
pop
rcll
xchg
or
mov
sub
xchg
sbb
call
mov
repnz
test
aaa
xchg
repz
adc
cs
or
jne
sub
adc
call
mov
test
mov
gs
inc
adc
cltd
orl
sub
jmp
scas
sub
out
xlat
ss
mov
cmc
loope
into
mov
push
xor
inc
xor
pop
and
cmp
sub
shl
sub
or
hlt
xorb
ss
sar
pop
xchg
enter
mov
mov
iret
pop
xor
in
test
pop
test
xor
cmp
js
lcall
imul
fs
fcom
leave
shll
rorb
fucomip
dec
xlat
adc
lcall
and
jecxz
dec
dec
xor
dec
popa
xlat
outsl
or
fbstp
lret
hlt
cmc
mov
mov
sahf
mov
cmp
stos
jle
decl
into
data16
jnp
pop
jmp
mov
adc
cmp
decl
bndldx
push
movsl
sbb
popa
add
lds
xchg
xchg
test
insl
xchg
movl
test
mov
or
ffreep
sbb
stc
gs
push
pop
mov
test
inc
dec
enter
lea
mov
movsl
or
lods
jo
aas
jg
mov
cltd
xchg
daa
push
js
sbb
fisttpl
jmp
push
jmp
dec
or
jnp
sub
mov
or
jmp
lods
jge
cmp
mov
ljmp
daa
ja
or
lret
lret
rcrl
jge
mov
mov
push
into
sbb
mov
int3
out
call
sbb
mov
pop
sub
es
addb
jle
mov
movsb
mov
mov
mov
es
fcompl
xlat
icebp
jo
fcomip
lahf
call
xchg
fwait
and
cwtl
test
cmp
jns
fdivr
lcall
inc
mov
pop
out
pop
daa
mov
mov
mov
fildll
ljmp
imul
inc
dec
nop
lods
push
inc
mov
cmp
in
movsb
mov
cmp
inc
dec
adcb
cmpsl
movsl
pop
mov
lock
jmp
ljmp
pop
hlt
pushf
or
test
mov
jb
jb
mov
lcall
add
sbb
adc
cmp
mov
add
pop
add
sub
ljmp
sub
test
cmp
iret
dec
sub
les
lret
iret
lcall
lret
jns
adc
push
push
out
and
or
push
mov
add
outsb
mov
mov
xchg
adc
add
je
cmp
ret
incl
sub
jb
les
jg
adcl
in
mov
or
repz
cmpsb
mov
inc
or
jb
or
incl
ss
add
mov
into
or
jle
movsb
xchg
roll
sub
pop
and
hlt
stos
sbb
dec
xlat
incl
cld
call
sbb
adc
and
sbb
movsb
jmp
fstl
call
or
das
repnz
jmp
pop
test
xor
sub
aas
jno
adc
mov
mov
pop
xchg
fisttpll
jo
lret
loop
ljmp
in
xchg
inc
ret
lock
dec
jmp
mov
fistpl
cmp
scas
lds
cmp
jg
sbb
sti
xchg
je
sarl
mov
xchg
sbb
push
jno
and
add
xchg
test
sub
adc
cli
call
dec
stos
mov
idivl
push
pop
sti
flds
sub
jns
rolb
ja
mov
rcll
or
in
cmp
adc
test
pushl
jae
cmp
cltd
sbb
mov
adc
mov
or
jge
mov
adc
ljmp
cmp
sub
popf
fnsave
sbb
mov
decl
jbe
xchg
cwtl
fsubs
fcmovne
inc
add
jns
sub
leave
outsl
test
sahf
imul
jmp
pushl
push
mov
add
xorb
fadd
mov
add
call
and
push
ss
push
cmp
cmp
jmp
jnp
pop
ljmp
add
clc
int3
inc
add
xchg
xchg
cmpxchg
push
jne
fstl
and
xlat
in
fnsave
cmp
sbb
aaa
test
xchg
push
inc
nop
push
shrl
pop
sub
bound
xchg
sbb
jg
lcall
lock
or
cmp
ret
sbb
inc
fnstenv
inc
xlat
imul
cmovb
adc
mov
xor
mov
jmp
adcl
jnp
or
mov
fidivs
dec
ret
xor
fidivrl
adc
mov
push
mov
mov
xchg
stc
mov
push
outsl
mov
jnp
mov
pop
and
inc
bound
int3
lds
push
lahf
xchg
cltd
daa
xor
xor
ljmp
sub
fidivs
xor
dec
inc
adc
xchg
test
pop
adc
jmp
mov
je
scas
pop
push
in
int
in
adcb
stos
aad
leave
or
ret
aad
xlat
incl
call
sbb
ret
xor
sub
xchg
out
pop
dec
ss
jmp
ss
cltd
mov
dec
fisttps
jl
jno
outsb
subl
incl
cmp
jns
pop
and
sbb
sbb
ss
jne
push
repz
and
ljmp
es
xor
lret
push
popa
push
outsb
inc
adc
loop
test
or
scas
cmp
mov
call
xchg
mov
inc
out
test
mov
sbb
mov
pop
mov
mov
scas
call
pushf
into
in
stos
jmp
cmpsb
mov
adc
sbb
push
mov
or
incl
mov
dec
stc
add
xchg
push
repz
cld
jno
mov
push
gs
std
decl
orl
cmp
push
pushf
gs
lahf
cmp
outsl
es
pushl
add
jae
movsl
aam
mov
cltd
mov
repnz
add
jg
mov
out
xchg
stc
dec
and
loopne
xchg
fisttpl
or
lcall
add
mov
scas
mov
rcrl
stos
mov
aam
xor
ljmp
or
cwtl
mov
es
cmp
pop
sti
enter
lahf
mov
jle
icebp
and
decl
movsb
enter
loopne
jmp
mov
jg
fdivs
mov
std
or
loopne
sub
dec
push
push
mull
movsb
arpl
decl
clc
push
sub
jnp
pushf
or
insb
and
je
push
mov
dec
mov
mov
adc
dec
repz
mov
cmp
movzbl
add
pop
or
add
ljmp
cmp
push
dec
jle
frstor
cmp
dec
push
fnstcw
pop
imul
fnsave
pop
mov
pop
lret
das
mov
cmp
ja
ljmp
and
xlat
and
arpl
stc
ljmp
dec
push
inc
mov
clc
inc
arpl
daa
insb
inc
clc
mov
jle
xor
sub
std
sbbl
add
jne
test
sbb
mov
incl
push
test
pop
xchg
mov
adc
pop
dec
cmpsl
enter
clc
adc
push
int
dec
fisubrl
fcomps
outsl
je
fsts
pop
lods
jae
lret
add
icebp
je
clc
pushl
out
jbe
mov
jg
out
mov
jne
mov
insl
ret
mov
ljmp
xor
sbb
in
comiss
sarb
xchg
ud0
lcall
stc
pop
cmp
xor
or
rclb
or
fs
or
pusha
int3
pop
jno
jmp
jnp
adc
sbb
aas
pushl
adc
jmp
rol
adc
xchg
mov
or
add
js
ret
test
repz
dec
fs
and
decl
push
js
fs
repz
mov
sub
sub
scas
clc
jg
adc
jp
mov
std
mov
xor
mov
int3
popf
and
xchg
mov
and
dec
pushf
xchg
out
cli
mov
out
push
ljmp
out
xchg
push
ret
dec
xor
out
bound
decl
or
and
push
stc
shll
inc
call
dec
int
hlt
mov
adc
pop
lock
sub
dec
arpl
lret
fisttpll
addr16
lods
xor
test
imul
test
les
ror
mov
mov
outsb
add
adc
or
repz
loope
xchg
adc
pop
stc
xchg
jnp
xor
lods
in
ret
int3
lea
dec
es
sub
dec
sub
popf
sub
inc
xchg
mov
fs
repz
and
call
movsb
push
outsl
sub
lods
mov
push
mov
sarb
xchg
loopne
jmp
outsb
les
jp
push
div
pop
push
jg
insb
mov
inc
sahf
pop
negb
ret
in
js
cmp
pop
mov
fildl
mov
sub
dec
jl
cwtl
loope
push
sbb
mov
mov
push
xchg
fnsave
add
jmp
subl
or
sub
dec
add
decb
ja
sbb
cwtl
outsb
movsb
aam
cmpsl
jmp
xchg
mov
cmp
cmpsb
ds
mov
push
test
or
mov
mulb
sub
clc
inc
sti
mov
mov
pop
cld
mov
push
lret
jp
mov
stc
les
cs
out
pop
lret
ja
ds
loopne
pop
jnp
jo
adc
add
mov
mov
sub
sub
xchg
flds
adc
popa
cmp
decl
hlt
je
sti
roll
ja
jne
xchg
mov
jb
testl
incl
or
loop
cwtl
test
mov
add
in
add
fdivr
push
nop
mov
gs
xchg
into
jge
mov
leave
dec
arpl
xchg
xchg
sub
cs
clc
call
mov
adcb
jmp
or
push
xor
lods
lahf
and
xorl
and
xchg
or
inc
adc
ljmp
xor
cmpb
cli
fisubs
dec
icebp
loop
jne
push
or
into
push
mov
cltd
ljmp
cmp
int3
xlat
push
popa
fnstenv
mov
icebp
aaa
cmp
cmp
ja
cld
imul
movntps
cli
sar
or
mov
add
pop
in
out
clc
loopne
nop
mov
aam
pop
xor
or
pop
inc
push
outsb
loopne
repnz
pop
mov
push
cmp
or
mov
adc
imul
mov
xchg
add
seto
push
fistpl
pusha
mov
cwtl
xor
or
decl
mov
ret
js
pop
pusha
test
sub
shrl
dec
addr16
fbld
cmp
mov
push
out
jecxz
test
sbb
out
push
mov
test
sbb
xchg
push
inc
divb
out
aaa
mov
and
mov
pusha
pop
dec
lock
mov
add
psubusw
jmp
outsl
sbb
mov
jns
rcr
testb
mov
shll
int3
lock
adc
insb
je
ljmp
pop
push
fs
xor
sbb
cmp
or
mov
out
cmp
push
dec
pop
aas
or
sbb
jmp
and
push
test
and
or
jmp
pushl
fidivl
add
jmp
dec
dec
sbbl
roll
mov
add
mov
ljmp
or
cmpsl
out
pop
fists
or
jne
pop
into
lahf
ja
push
pop
cmc
lcall
mov
push
icebp
xchg
sbb
dec
pop
jne
das
sbb
inc
push
clc
or
insl
or
pop
mov
ss
rclb
lods
lcall
bound
lods
jnp
push
or
dec
sbb
shrl
sub
clc
call
jle
pushf
mov
and
leave
fstp
gs
xor
dec
dec
pop
daa
ljmp
scas
mov
arpl
gs
pop
adc
mov
dec
les
loop
add
imul
cmp
pop
cmp
imul
mov
in
pop
loope
adc
sbb
popa
sbb
add
in
add
or
xlat
inc
dec
push
into
pop
subb
in
dec
pusha
or
call
mov
or
popa
mov
flds
add
mov
inc
arpl
pop
or
dec
adc
popa
adc
insb
std
lods
xchg
jno
lcall
cld
jmp
cmp
or
ret
scas
jge
inc
int
pop
popf
movsb
pop
xorl
decl
pusha
xchg
mov
push
fcoml
filds
jns
xor
insb
nop
mov
pushf
roll
ss
xchg
negb
movsl
dec
mov
mov
fiadds
mov
and
jmp
pop
push
ret
jns
push
sahf
or
ljmp
fwait
jns
sub
scas
or
jo
rorl
sbb
sbb
movsl
dec
out
cmc
mul
out
ret
inc
mov
lods
sub
incl
add
test
push
ljmp
push
popf
xor
push
rorb
or
in
shl
mov
ljmp
mov
movsb
cltd
xchg
xchg
pop
int
dec
dec
dec
cld
sub
xor
push
shr
xchg
std
mov
inc
ficoms
jnp
ss
daa
in
bswap
clc
pop
xorb
jg
fisubrs
shrl
pop
ljmp
cli
sbb
cmp
pushl
jge
iret
fdivl
dec
mov
add
out
xchg
lods
sbb
inc
gs
cmp
sar
call
loopne
lret
ljmp
add
addr16
xlat
jns
jns
push
adc
mov
xlat
loop
xchg
aas
fdivr
in
mov
or
rcl
fmulp
and
fstl
mov
and
movsb
leave
scas
pushf
pop
jns
cmc
push
fiaddl
mov
fldenv
jmp
cwtl
dec
leave
push
loop
cmp
and
cli
inc
mov
hlt
push
mov
cmpsb
aas
cmp
cli
insb
cmp
or
ljmp
inc
lds
sub
jae
ljmp
clc
sbb
xor
xchg
push
add
cltd
in
or
mov
xor
xchg
out
jo
pushl
cld
fisttpl
adc
mov
in
sub
push
push
adc
mov
nop
lret
xchg
push
test
lcall
loopne
jl
loopne
dec
mov
and
addb
mov
push
sbb
lds
inc
test
push
mov
mov
insl
filds
sub
lods
dec
sbb
sub
je
cmp
jmp
lea
xor
dec
cltd
cmp
lods
push
ror
jp
sbb
inc
add
cmc
cmp
enter
or
dec
sub
adc
mov
cmp
and
sub
divl
lcallw
jo
mov
and
out
ljmp
lods
dec
adc
repz
test
notl
cmp
mull
jnp
mov
lea
inc
xchg
jb
fmull
and
push
mov
movsl
test
iret
xor
mov
jbe
jg
mov
test
mov
pop
pop
gs
mov
xor
adc
stos
jle
mov
aaa
mov
imul
imul
lret
add
sub
call
dec
out
js
xchg
scas
jle
dec
cltd
stc
push
cs
jg
loop
or
xchg
test
pop
iret
mov
inc
std
mov
test
lcall
out
loop
dec
push
rorb
sbb
sarb
xchg
xor
out
push
xlat
dec
ljmp
mov
push
inc
outsl
dec
ljmp
jo
mov
push
push
pop
push
xchg
dec
int3
jle
push
movsb
dec
dec
xor
cmp
clc
dec
mov
sbb
xchg
test
stc
sbb
andl
pop
in
xor
pushl
mov
in
add
mov
xchg
mov
mov
insb
jmp
lret
out
sub
jns
ficoms
jo
cmc
call
es
cmp
dec
jo
add
call
negl
xor
addr16
fs
out
cli
push
movsl
jle
xchg
addr16
lock
arpl
push
jecxz
xlat
rcrb
ljmp
and
mov
mov
cld
jecxz
dec
shll
adc
shll
xchg
mov
fbstp
daa
xorl
jb
idiv
cmp
mov
ret
jo
adc
shl
stos
pop
ret
mov
fwait
incl
jle
je
pop
xor
xor
and
rclb
mov
mov
xchg
add
xor
cmpsb
jae
nop
fidivs
mov
popf
sub
lcall
mov
int
jno,pt
pop
rcrl
adc
jmp
popf
mov
adc
sub
mov
xor
and
jmp
mov
add
pop
inc
mov
mov
pop
mov
sbbl
or
mov
pusha
lcall
mov
jp
bound
cmp
or
mov
int3
mov
xchg
call
ret
bnd
push
push
inc
bswap
push
mov
jecxz
das
mov
sub
cltd
incl
fimull
loopne
into
push
pop
or
out
or
inc
push
nop
int
hlt
ret
mov
decl
aad
shlb
cmp
sbb
lods
xchg
add
rorb
dec
adc
leave
stc
fsubs
mov
push
imul
xor
xchg
sub
imull
ja
arpl
cli
js
popf
stc
jmp
stos
mov
pushl
imul
std
jg
xchg
mov
sub
sbb
fsubl
scas
mov
lcall
sbb
daa
xchg
xlat
mov
mov
outsl
aaa
xor
ss
je
or
or
stos
mov
fcmove
jle
fs
cmp
cmp
and
xchg
stc
cltd
push
or
jne
dec
jmp
outsb
and
roll
in
in
jg
and
mov
push
nop
es
mov
cmp
dec
xchg
xchg
mov
repnz
sbbl
icebp
mov
ja
incl
lds
mov
inc
addr16
pushf
repnz
adc
dec
mov
cmp
decl
icebp
aas
jo
sbb
mov
mov
aad
pop
out
int
adc
dec
cld
mov
mov
sub
and
and
in
sub
lods
rcll
cwtl
push
fnsave
mov
icebp
hlt
fwait
pop
pop
xchg
xor
fneni(8087
sub
jecxz
shlb
mov
cs
fldl
or
and
lds
scas
jmp
xor
cmp
add
aam
pop
lods
pop
lods
mov
xor
cmpsb
mov
in
ds
jmp
mov
fnstenv
iret
stos
xchg
fimuls
out
mov
call
stos
and
mov
cmp
xchg
idivb
in
hlt
int3
das
push
sbb
xor
fs
add
inc
dec
aad
inc
rcll
fbld
sbb
jmp
aad
andb
sub
and
aad
cmp
and
cld
loopne
cmp
mov
movsl
fcomip
jmp
push
mov
in
insl
xchg
xchg
orl
mov
clc
ljmp
xchg
jnp
mov
daa
aaa
jmp
out
rorl
ljmp
data16
sbb
dec
pop
movsl
lds
mov
lcall
xor
into
inc
pushf
shlb
test
lds
xor
or
lea
cmp
mov
into
jle
lods
jno
dec
cmpsl
fistpll
or
imul
aam
dec
dec
xor
daa
icebp
js
mov
call
subl
mov
imul
lods
and
into
subl
decl
addr16
ds
mov
test
jbe
int3
jmp
mov
mov
dec
jo
call
outsb
push
cmpsl
push
mov
adc
sub
in
pop
push
mov
pop
or
cltd
repnz
fs
decl
sahf
dec
rcl
iret
jle
out
xlat
mov
add
pop
cltd
inc
jb
fdivrs
and
pushl
insl
inc
cld
add
sbb
pop
pop
push
sbb
jbe
adc
mov
call
jle
stos
out
fcmovb
inc
je
push
push
fcomi
add
mov
or
les
jno
push
aas
xchg
push
nop
adc
cmp
jo
cmc
mov
jmp
stos
cli
pusha
sub
cmp
or
jmp
pop
sub
mov
call
int
cmp
test
pop
adc
bound
into
orb
in
and
sub
mov
jb
cwtl
or
idivb
sbb
decl
lock
dec
mov
dec
pop
dec
out
xor
mov
push
lahf
sub
clc
fcmovnbe
push
jecxz
xchg
jge
or
sbb
xlat
jb
mov
ljmp
add
adc
xchg
insl
popa
test
in
sbb
pushf
ss
xchg
cli
lea
test
fst
lock
mov
jns
xchg
iret
out
stc
inc
imull
ret
stos
adc
jg
pop
stos
inc
lcall
xchg
jmp
mov
movsb
jmp
or
push
or
jl
testl
jl
push
sbb
hlt
adc
aam
and
push
insl
jecxz
add
push
lcall
sar
add
cmp
xchg
push
cltd
in
jo
aaa
mov
ljmp
sub
dec
jecxz
inc
xchg
mov
xor
pop
pop
enter
scas
ljmp
jae
cld
jmp
cmp
repnz
xor
insb
cmpsl
int3
repz
xchg
cmp
cltd
or
pushl
pop
xor
xor
lds
dec
jmp
add
mov
or
fnstcw
sbb
scas
and
inc
test
jmp
jno
insl
pop
popf
or
xchg
nop
inc
jno
outsl
iret
dec
leave
inc
sahf
pushl
or
lods
cmp
cmc
imul
cmpsl
in
cwtl
sub
out
xlat
popf
clc
mov
cmc
std
sti
loop
jmp
arpl
sub
ljmp
rcl
movsb
nop
push
es
pop
sbb
add
add
pop
popa
jno
inc
call
aad
xchg
loopne
dec
sub
pop
imul
movsl
out
cs
mov
add
jl
inc
test
pop
mul
push
cli
ljmp
dec
lcall
cs
test
ss
cmp
jmp
ljmp
jne
cmp
mov
pop
push
es
insb
xor
jo
in
push
insb
mov
call
std
dec
out
xor
mov
xor
ret
cs
test
loop
ja
jle
push
jmp
nop
gs
mov
and
mov
xor
stos
dec
ljmp
cltd
enter
xlat
cmpsb
push
fucomp
mov
sti
pop
daa
inc
dec
pushf
mov
decl
rolb
xlat
outsl
inc
push
xchg
mov
stos
cmc
sub
dec
out
sbb
cmpsb
jae
das
mov
lcall
fcomps
cmp
aad
cld
add
jmp
subl
cmpsl
jbe
ljmp
aaa
mov
flds
aad
call
cld
add
sbb
cmc
fs
adc
jmp
negb
push
mov
cmp
inc
inc
popf
fwait
cld
sarb
mov
push
inc
sbb
mov
rorb
pop
repnz
jg
lret
mov
cwtl
adc
sbb
in
sub
adc
mov
pop
call
sbb
ficoml
in
notb
jbe
push
jecxz
jbe
and
pop
jo
push
aad
mov
sub
jmp
out
imul
ret
js
cltd
stos
mov
lcall
fmul
aas
jmp
add
push
aaa
mov
dec
or
fwait
cmpsb
inc
decl
mov
jecxz
xchg
push
pop
stos
hlt
std
pop
loopne
or
push
cmp
ds
jmp
fidivl
leave
out
hlt
dec
ret
jp
mov
sbb
xchg
cmp
jmp
sub
xchg
sub
mov
cmp
add
mov
inc
push
pop
mov
fisttps
pop
pop
dec
sbb
mov
cltd
cmp
mov
sbb
call
jmp
stos
dec
mov
adc
or
sub
fcoml
cmp
jmp
test
mov
cld
mov
jns
push
and
and
fists
xchg
pushl
js
ret
mov
pop
cld
out
mov
inc
mov
cld
ljmp
fdivrs
or
lret
lods
push
hlt
into
mov
push
sahf
mov
out
std
dec
ret
add
jmp
mov
addr16
push
cmp
inc
fs
lods
cmp
sub
std
or
mov
or
mov
lds
sub
clc
sub
mov
mov
rclb
fucom
and
pop
movsb
imul
cld
xlat
out
ljmp
push
les
sub
dec
xchg
mov
jg
mov
lea
inc
adc
arpl
mov
inc
mov
xor
into
inc
repz
decl
call
or
xchg
stos
out
repz
fwait
mov
fbld
movsl
cmp
imul
test
daa
xchg
incl
mov
data16
cmp
xchg
sti
hlt
jae
cli
pop
mov
je
dec
mov
push
sbb
arpl
imul
mov
mov
int
das
pop
push
xchg
push
jae
inc
cwtl
sub
fbstp
sahf
inc
lods
ljmp
data16
and
mov
call
in
mov
call
jbe
stos
xor
push
cmc
cmp
aad
pop
cmc
mov
insl
call
xchg
das
cs
leave
mov
mov
sub
and
dec
add
mov
js
mov
sbb
fnsave
fucom
xchg
mov
dec
add
lcall
jp
into
cmc
mov
add
lcall
mov
dec
shrb
aad
mov
sbb
sub
pushl
into
sbb
gs
xor
mov
mov
cli
push
jle
jae
xchg
ficoml
inc
in
mov
mov
pop
dec
scas
pop
mull
dec
clc
subl
out
call
dec
cmp
nop
push
sub
imul
mov
push
stos
rcll
bound
jecxz
push
clc
mov
xorl
mov
cld
sbb
out
or
push
sbb
jbe
pushl
arpl
dec
sub
ss
push
xchg
add
or
and
aaa
sub
ljmp
and
aas
xor
inc
test
clc
int3
jnp
iret
pop
or
adc
in
aas
pop
scas
add
xlat
mov
push
cmp
dec
filds
stos
fcmovnb
mov
negb
in
mov
loop
and
push
dec
add
sub
dec
jno
adc
gs
cmp
mov
das
icebp
mov
mov
mov
loopne
jecxz
and
push
pop
lcall
aam
test
sbb
push
or
lea
lcall
and
pop
loopne
mov
mov
mov
pusha
dec
pop
cmp
or
xchg
jle
std
jmp
popa
int3
lret
mov
sub
xchg
hlt
fidivrs
inc
sbb
shl
and
dec
in
test
out
clc
mov
pop
and
test
cmpsl
nop
xchg
inc
pop
pop
mov
mov
and
inc
dec
gs
inc
mov
int3
out
pop
fs
adc
loop
lock
leave
daa
outsl
cmpsb
jle
or
add
int
dec
in
sbb
iret
jb
pop
hlt
dec
cmp
xorl
pop
adc
repz
in
add
cmp
rcl
and
fbstp
xchg
sbb
push
jge
shrb
shrl
call
clc
je
xor
or
mov
test
inc
popf
pop
stos
pop
adc
pop
xor
call
push
and
fs
add
dec
divb
stc
mov
out
sub
fimull
pusha
imul
stc
out
xor
and
xchg
stos
cld
test
lcall
xlat
sub
dec
ret
lods
mov
mov
add
decl
jno
xchg
sbb
mov
sbb
mov
xchg
lahf
or
movsl
jae
cmp
addr16
clc
push
inc
in
icebp
add
mov
inc
mov
hlt
xchg
or
imul
mov
ficomps
nop
pop
mov
js
call
orb
push
pop
push
idiv
jns
cmpsl
cltd
mov
imul
jae
mov
jg
or
test
enter
pop
sub
aam
dec
pop
shrb
dec
mov
pushl
repz
add
mov
out
lea
sbb
call
dec
es
xchg
int3
lds
push
nop
xchg
xor
icebp
jle
jne
dec
sti
aas
sub
loop
push
xor
adcb
ljmp
dec
push
test
or
loop
push
sub
and
mov
mov
das
fs
sub
sbb
stos
push
mov
xchg
outsl
xchg
mov
test
sahf
mov
pop
or
add
lcall
fcomip
mov
test
dec
pop
and
push
out
fcmove
pushf
jg
je
insl
and
aas
call
out
jnp
adc
mov
sti
inc
mov
push
cmp
adc
incl
mov
and
cmpsb
stos
xchg
cwtl
or
repnz
dec
sbb
fdivr
cmp
call
js
sarl
xor
fstpt
inc
dec
addr16
mov
pop
mov
jb
inc
popf
je
fnstsw
xor
push
icebp
jo
jno
icebp
cmc
mov
shl
xlat
scas
jnp
add
stos
mov
cmp
enter
sub
int
fs
loope
and
dec
fwait
push
jne
inc
dec
in
ret
shrb
jbe
xchg
sbb
and
scas
test
push
mov
pop
mov
xchg
or
leave
call
fwait
sbb
and
sub
inc
orl
out
dec
insl
mov
mov
incl
xchg
imul
inc
dec
cmc
mov
mov
fists
mov
incl
jae
adc
pop
mov
in
xchg
and
insl
xor
push
and
and
or
icebp
jmp
repnz
cmpsb
adc
inc
out
sbb
add
inc
fildll
sub
in
in
ljmp
push
je
push
mov
or
es
mov
das
pop
je
add
pusha
inc
sub
out
arpl
or
rclb
leave
xchg
xchg
push
subl
mov
cs
ljmp
int
xchg
mov
sahf
mov
jne
cmpb
inc
popf
sbb
lods
mov
adc
sbb
cmpb
cld
jmp
sahf
sar
xchg
inc
std
mov
icebp
mov
dec
cli
dec
rorl
sub
inc
pop
iret
mov
and
ret
pop
dec
push
jne
and
lcall
loope
lock
jg
cmp
incl
hlt
insl
adc
lods
mov
in
sarb
dec
in
jl
add
loopne
cmc
incl
fs
xor
adc
out
cld
mov
mov
pushl
outsb
arpl
lods
fmuls
fnstsw
push
inc
pop
ret
mov
mov
xor
test
or
hlt
jmp
lods
rorb
add
stc
push
out
test
add
xor
rorb
cmp
push
add
das
fldenv
xchg
nop
mov
or
mov
fisubs
pop
add
lcall
xchg
movsb
stos
sbb
out
or
mov
rorl
push
clc
fsubl
jns
or
add
ljmp
jmp
mov
inc
daa
xor
into
xchg
push
aam
push
adc
mov
dec
fildll
mov
push
pop
and
pop
repz
cmp
inc
fxch
lret
mov
rcrb
cmp
pop
add
imul
or
sahf
aad
out
int
lock
xchg
pop
add
lods
rorl
mov
incl
sbb
jnp
popf
pop
mov
mov
xchg
lods
loopne
cmp
decl
ljmp
jno
sbb
xchg
dec
sub
in
shl
lea
out
pushl
std
jg
ja
push
dec
sbb
mov
pop
cs
aad
std
jnp
addr16
mov
call
hlt
xor
push
pop
xchg
mov
xor
call
inc
loopne
call
das
push
sub
test
mov
mov
gs
mov
push
shll
xchg
pop
mov
or
cmp
push
or
jmp
pushf
nop
shrl
inc
mov
les
sbb
push
xor
insl
xor
inc
scas
jns
sbb
xchg
call
pushf
movsl
jnp
pusha
push
clc
jmp
and
insb
test
mov
or
pop
repnz
xchg
cmp
imul
adc
adc
push
lcall
xchg
loopne
jmp
add
nop
and
sti
loopne
push
pusha
xchg
jge
fldenv
in
scas
inc
mov
adc
sub
push
push
cmp
fsubs
test
or
stc
sub
fnstcw
mov
mov
jnp
sti
lahf
cwtl
inc
aam
dec
jmp
push
pop
ljmp
pop
out
adc
test
mov
out
or
scas
cli
lcall
cwtl
daa
sahf
lahf
daa
pop
and
push
fnstcw
cltd
ljmp
call
inc
xlat
lea
outsl
insb
movsb
inc
test
loopne
test
cld
cld
adc
rorl
sub
call
xor
aad
orl
cmp
aas
xor
test
shlb
jmp
fwait
jo
and
cli
es
inc
jmp
jne
inc
cmp
jmp
test
test
mov
hlt
mov
xchg
xlat
jns
xor
mov
int
repz
movsb
sub
ret
jbe
inc
push
push
loopne
xlat
add
test
pop
sar
jl
cmp
arpl
sti
iret
js
out
gs
hlt
cmp
int
outsb
mov
out
adc
ds
sbb
jno
js
pop
xchg
call
in
mov
mov
jg
sbb
xor
push
icebp
incl
jb
jmp
js
and
bound
dec
push
and
cmp
cmp
xchg
ss
fadds
cmp
jp
inc
inc
pop
into
mov
pop
icebp
lds
jge
lcall
aas
push
mov
scas
sahf
cwtl
cs
xchg
sbb
sti
mov
inc
adc
mov
incl
fs
dec
xor
sub
loop
inc
and
cmpsl
pop
adc
jge
add
outsl
xchg
icebp
call
jg
loop
cwtl
shll
shl
or
decl
dec
push
or
adc
push
popf
xchg
jae
pop
add
outsb
scas
inc
aam
shlb
dec
scas
jno
xorl
and
test
xchg
cmp
xor
pop
push
scas
lcall
shr
ljmp
xlat
jno
jbe
jecxz
loop
jo
inc
fists
test
add
bound
sbb
pop
inc
push
xor
out
std
hlt
fsubl
ret
or
push
std
xchg
lcall
xchg
fwait
leave
mov
bnd
and
inc
adc
lcall
jg
mov
adc
enter
jg
divl
in
sbb
jmp
arpl
push
sahf
shrb
mov
fsts
jo
dec
mov
pusha
icebp
xchg
mov
ror
mov
pop
mov
mov
mov
pushl
leave
sbb
lret
or
cmpsb
push
out
push
je
inc
mov
mov
add
mov
xchg
mov
push
std
sbb
sar
cmp
and
incl
xor
or
es
mov
or
mov
dec
pushf
sbb
xor
or
ljmp
push
mov
inc
stos
cli
decl
jl
dec
adc
fisubrs
decl
and
xor
jl
dec
sbb
dec
popf
std
sbb
les
push
push
pop
ret
lcall
and
sub
sbb
mov
xor
dec
testl
cmpsl
adc
decl
shrb
mov
pop
sbb
pop
jg
lcall
xchg
imul
in
push
subb
and
decl
mov
pop
roll
mov
fisttpl
std
pushf
cltd
jp
fiadds
sbb
scas
or
inc
mov
and
push
sub
pushl
bound
xchg
addr16
lcall
pop
lock
jg
test
cmc
mov
test
andl
enter
cltd
inc
jg
jle
mov
adc
mov
mov
insl
int
xchg
inc
mov
call
and
mov
mov
aas
xchg
or
dec
inc
repz
jp
inc
lret
mov
push
aas
jmp
loopne
fsubl
leave
in
lret
or
cmp
xor
stos
mov
mov
push
shr
and
xchg
js
push
lcall
sbb
ljmp
imul
cld
push
and
mov
push
mov
repz
aad
das
push
rclb
adcb
dec
enter
adc
icebp
shlb
mov
pop
addr16
cmpsl
and
ja
or
adc
fdivr
mov
out
hlt
and
outsl
and
pop
mov
mov
clc
pop
mov
inc
xchg
dec
pop
int
lods
ret
xchg
aaa
xchg
fnsave
xor
adc
xchg
cld
xlat
mov
jb
outsb
mov
pusha
js
inc
dec
lcall
dec
push
mov
repnz
jnp
or
cmpsl
pop
mov
mov
cld
decl
pop
push
or
sti
sub
setbe
fistpll
jb
dec
xchg
dec
in
cmpl
cmp
pop
imul
imul
arpl
scas
in
decl
icebp
mov
lods
enter
mov
mov
cmpsl
fsts
movsl
jno
in
mov
call
or
sbb
icebp
stc
and
dec
sbb
push
push
jmp
ljmp
mov
hlt
push
jne
inc
push
push
dec
lret
dec
fcom
out
scas
divl
fdivs
pushl
loopne
jns
mov
call
int3
stos
adc
dec
std
cmp
aam
mov
jmp
enter
mov
fists
or
cmp
sbb
dec
or
jb
mov
cmp
cmp
dec
int3
in
addr16
repz
les
lcall
in
fdivr
sub
lret
mov
sbb
outsl
mov
inc
in
test
mov
cmpsl
mov
sahf
pop
stos
push
shld
or
push
inc
mov
fsubrs
cwtl
in
inc
and
pop
inc
jecxz
addb
idiv
cmp
sbb
dec
insb
xchg
lahf
jb
pop
lock
cltd
sbb
adc
add
clc
pop
jmp
mov
pop
inc
mov
push
jno
sbb
push
call
or
je
adc
fcompl
shlb
xor
adc
pop
stos
push
pop
adc
dec
fnstcw
es
xchg
mov
decl
xor
add
aam
mov
loopne
xor
add
decl
adc
jbe
mov
and
mov
pop
dec
lods
idiv
pushl
idivl
or
popf
aaa
adc
jb
sbb
pop
add
mov
movsl
sbb
decl
adc
push
test
add
mov
movsl
fmulp
in
inc
xor
in
lcall
imul
xchg
scas
adc
rcrb
xchg
lcall
gs
inc
repnz
mov
mov
sbb
or
cli
push
fistl
push
in
push
mov
mov
insb
loop
ffreep
xchg
adc
hlt
adc
shrb
and
and
rorb
int3
add
add
aad
dec
mov
ss
jmp
mov
add
movsl
sub
sub
fldcw
push
mov
stc
mov
and
adc
or
cmp
ja
mov
scas
xor
add
into
dec
adc
stos
stos
rorl
push
add
jmp
pop
inc
cmp
repnz
mov
pop
hlt
mov
mov
adc
xor
ficoms
and
loop
mov
cli
pushl
scas
cmpsl
mov
inc
call
add
pop
jg
out
jo
test
add
fdivr
jae
xchg
mov
outsb
pop
fs
incl
sbb
lods
movsb
inc
push
inc
xchg
test
std
xchg
iret
push
cmp
mov
add
lods
loope
pushl
jle
pushf
pop
fcomip
or
cli
jnp
bound
push
mov
call
leave
cli
sub
mov
push
jmp
iret
clc
fisubl
mov
dec
ja
clc
pushl
jno
or
and
out
jns
jmp
add
lcall
aaa
pop
jge
adcl
add
jne
out
or
mov
xchg
xchg
or
stos
testb
inc
push
pushf
push
insl
or
pushf
repnz
and
fwait
pop
ljmp
pushf
lcall
or
cmpl
push
repz
adc
lds
dec
xchg
or
sti
movsl
cld
ljmp
int
or
sbb
add
cmpsl
iret
lods
push
xchg
sar
sbb
lcall
jl
mov
lret
daa
jp
mov
or
sti
leave
sub
in
rcrb
test
lds
mov
aaa
dec
aaa
clc
loope
popa
orb
enter
mov
mov
mov
sub
call
je
dec
pop
outsb
xor
cld
xchg
mov
cs
cmpsb
movsb
push
les
xor
jmp
mov
push
outsl
aam
call
pop
xor
loope
adc
jbe
dec
repnz
mov
push
js
adc
add
mov
mov
in
adc
xchg
sbb
adc
out
lods
pop
orb
call
sbb
clc
adc
mov
xor
lea
test
lcall
push
jbe
push
sub
xchg
xchg
mov
mov
and
add
aad
enter
jmp
out
enter
ljmp
inc
inc
and
mov
testb
or
jo
scas
jp
syscall
mov
and
pop
push
push
lods
mov
test
jnp
addl
cmc
cmpl
push
and
pop
mov
and
loopne
mov
cld
out
popa
pop
call
cld
stc
xchg
jmp
daa
or
mov
xchg
mov
mov
popf
jmp
dec
loopne
jp
data16
fidivrs
into
jb
sbb
and
mov
aad
mov
mov
ret
xchg
aas
and
fsts
add
mov
push
add
xchg
pop
and
aad
mov
fsubl
pushl
movsb
push
xlat
in
nop
test
fsubl
test
add
insb
clc
sub
xor
sbb
scas
lcall
sbb
and
lcall
imul
fildl
dec
lock
mov
ljmp
in
push
das
idivl
jmp
sbb
sbb
add
mov
inc
lea
jnp
mov
and
mov
out
pop
fimuls
lcall
pushl
push
ljmp
pop
fidivrl
fdivrs
subl
mov
or
mov
lahf
or
xchg
xchg
cwtl
cmp
fcomps
es
mov
ret
pop
mov
push
aad
xchg
or
mov
or
and
sub
sti
mov
push
push
sahf
and
pop
inc
jl
sub
in
mov
mov
call
mov
dec
iret
dec
fldt
push
aad
cs
andl
or
mov
push
nop
xchg
iret
lock
mov
jge
insl
out
sub
les
xor
cmp
pop
jae
ljmp
aaa
outsl
xchg
sub
mov
lds
jne
lret
mov
jg
lcall
inc
stos
mov
daa
enter
cld
and
movsl
dec
dec
xchg
mov
mov
test
add
insb
mov
decl
mov
adc
aam
sar
mov
jnp
fnstenv
jl
sti
bound
mov
mov
pop
dec
out
incl
pushf
jge
mov
icebp
pop
mov
adc
pushl
in
jo
pushl
or
stc
bound
int
adc
fdivr
es
add
pushl
adc
xor
inc
jnp
mov
lods
fcmove
incb
in
je
sub
jmp
data16
bound
push
cs
jmp
sahf
les
roll
loope
popa
add
decl
lret
cmp
enter
aas
push
cmp
or
lahf
stos
and
jl
out
ja
push
fidivl
call
jp
push
and
pushf
inc
jb
out
aad
mov
and
int
out
jg
and
lods
mov
cmp
fs
dec
push
xchg
pushl
outsl
andb
push
aaa
cmpsl
mov
in
jp
sti
decl
fimuls
jl
push
or
bound
dec
mov
push
sti
pop
hlt
mov
aam
test
call
cmp
stos
in
add
decl
in
xchg
sahf
pop
lea
rorl
inc
jg
idiv
mov
and
ja
sub
cmp
push
jg
cltd
imul
push
data16
decl
add
jg
mov
in
jbe
aam
movsb
shlb
xchg
adc
ds
jmp
sub
in
sub
enter
xlat
mov
aad
dec
popf
addr16
mov
pushl
movsl
or
inc
loopne
pop
fs
sbbl
sub
into
inc
jnp
or
into
loope
fcos
fcmovbe
js
out
cmp
aas
jae
fsubp
push
ss
gs
push
mov
inc
mov
mov
or
jge
les
mov
sbb
mov
fldcw
in
jge
int3
mov
lahf
imul
cli
mov
fistpl
aad
xchg
je
pop
inc
ret
jae
add
ljmp
jge
clc
mov
ret
lret
shll
xor
add
add
cwtl
and
push
mov
in
popf
add
jp
bound
push
imul
int
xchg
sub
cwtl
or
test
sbb
icebp
fdivr
pushl
and
ret
dec
lods
inc
push
in
cmovg
or
sbb
sahf
pushl
inc
pop
add
dec
ljmp
cld
sub
pushf
add
xchg
ljmp
sar
sub
pop
pop
jle
adc
into
js
push
ja
outsl
lea
and
incl
jge
sub
jge
movb
in
mov
imul
xchg
cld
std
inc
add
cmp
call
cmp
sub
xor
dec
js
mulb
repz
cs
adc
fcomip
aas
push
push
add
daa
cmp
shlb
pop
ja
fmul
enter
mov
dec
sti
adc
add
filds
rorb
cmp
daa
shlb
mov
jae
mov
call
push
lcall
sahf
out
ficomps
nop
add
rol
dec
inc
lods
incl
stc
adc
bound
mov
cmp
sub
int
fs
mov
rcrb
xchg
jg
sti
cmp
mov
popf
push
ficomps
sub
ja
decl
mov
jo
aaa
sti
push
dec
nop
lods
movsb
mov
cmp
xchg
sub
daa
mov
or
xchg
or
xchg
test
decl
xorb
inc
pop
xor
jo
jmp
cmc
pop
pop
xchg
iret
jmp
fdivrp
mov
pop
xchg
jmp
mov
push
inc
ss
cmpsl
jp
das
xor
adc
sbb
cmpsb
lret
add
mov
add
adc
ret
mulb
insl
lahf
mov
lods
push
test
sbb
das
push
cmp
or
xchg
scas
out
mov
or
call
dec
dec
pop
cmpsb
cli
push
jns
add
shlb
in
repz
lret
push
loopne
lods
xchg
sahf
and
jno
sub
mov
cmp
xchg
adc
sub
in
adcb
push
mov
mov
xchg
hlt
xorb
ljmp
lret
pushl
mov
pop
add
adc
loopne
inc
or
sbb
pop
out
int3
es
xchg
push
decl
jbe
and
sbb
dec
push
rcll
mov
incb
jmp
inc
cwtl
or
xor
jnp
inc
pop
out
subl
add
fildll
test
inc
mov
xor
add
jb
mov
jg
decl
jns
aaa
mov
mov
dec
in
lock
je
arpl
push
xchg
adc
cmp
test
sbb
mov
xchg
loope
jno
not
inc
fisttpll
aam
stos
decl
lahf
push
jle
cmc
inc
lods
inc
movsb
call
adc
pop
arpl
mov
ds
rorl
sub
fcmovnb
popf
imul
outsb
xchg
jecxz
inc
flds
scas
ljmp
hlt
jp
call
push
sbb
fld
mov
shll
movsb
adc
outsl
cmp
push
xchg
xchg
jae
dec
push
jl
push
jle
pop
scas
decl
or
push
bound
aam
aas
clc
pusha
in
movsb
or
hlt
ja
ljmp
incl
pop
mov
ss
pop
lcall
dec
sbb
pop
sub
decl
jmp
pop
or
mov
testb
pop
push
or
cli
incl
movsb
aaa
addr16
xchg
lods
lcall
sbb
xorl
call
cltd
shl
iret
shlb
dec
inc
mov
andl
dec
xchg
cmc
cmpsb
sub
sub
incl
shl
dec
push
mov
or
push
mov
sbb
outsb
and
decl
push
nop
outsb
ret
mov
out
xchg
pushf
xor
mov
mov
and
mov
imul
xor
cld
ja
icebp
cs
lret
cmpsb
jmp
push
push
and
movsb
cmp
jo
fcomps
mov
incl
mov
add
cmp
mov
add
add
imul
adc
fists
scas
daa
loop
test
pop
xchg
sbb
push
ss
stos
inc
jmp
fstl
lods
enter
pop
ds
jb
fldl
jo
jne
lcall
add
dec
inc
aaa
lds
andl
jecxz
sbb
sbb
mov
jns
lock
jnp
call
dec
ja
jle
dec
into
test
push
mov
dec
mov
mov
fdivr
jg
jg
mov
stos
sub
imulb
inc
ret
xor
cmp
hlt
xlat
sub
cmp
les
arpl
mov
mov
sub
or
push
jae
mov
dec
pop
pop
out
js
ret
popf
xor
jb
add
mov
lcall
ljmp
in
xchg
push
shlb
fs
xor
lcall
fs
pushl
ja
sbb
sbb
stc
les
push
sbb
outsl
pusha
cmp
rorb
jmp
mov
adc
xchg
loopne
aaa
pop
nop
mov
cmp
xchg
dec
cmp
call
push
out
xlat
sub
xchg
xchg
jae
inc
adc
fiaddl
inc
add
jmp
push
sbb
mov
negb
cmpsl
xor
jns,pt
or
movsl
mov
outsb
dec
in
enter
inc
aam
leave
push
push
xchg
and
mov
incl
pushf
jo
pusha
pop
std
ffreep
shlb
inc
dec
movsl
scas
jg
ret
and
pop
mov
dec
add
push
call
data16
dec
pop
pop
or
daa
nop
mov
aad
inc
push
andl
xor
pop
inc
mov
addr16
pop
push
imul
ljmp
mov
cld
pop
push
push
and
jmp
movsl
lods
push
lahf
pop
ja
dec
add
mov
popf
xorl
ss
dec
jnp
mov
mov
aas
sti
add
call
lret
in
push
pusha
test
pop
jge
sbb
inc
bound
lcall
outsb
mov
jb
push
rcrb
lret
and
mov
adcb
iret
sbb
adc
add
jg
rolb
popf
nop
xchg
mov
shlb
xchg
pop
jnp
hlt
xchg
inc
cli
mov
incl
arpl
cwtl
stc
add
sub
sub
jbe
xchg
fldcw
roll
clc
fcomip
jmp
dec
test
cs
rcll
cmp
and
ljmp
lock
push
rcrb
cmpsb
jmp
and
fcmovnbe
mov
pop
clc
dec
xlat
jne
jmp
into
mov
xchg
jns
or
mov
dec
pop
sbb
lret
das
dec
cld
push
std
decl
jmp
mov
jmp
xchg
xchg
dec
leave
or
mov
jl
jecxz
dec
leave
stc
icebp
shrb
inc
lahf
test
dec
mov
stos
cld
jmp
jge
mov
inc
jae
out
mov
loope
sar
lret
icebp
out
adc
fsubl
or
mov
into
jg
int
negb
inc
mov
mov
fbld
lds
mov
shrb
jecxz
sbb
mov
test
pop
pop
mov
shl
adcl
mov
lcall
and
sbb
adc
mov
push
es
loop
or
movsb
fstl
cmp
cmp
cmp
cmpsb
mov
adc
mov
push
and
pop
inc
imul
dec
bound
in
imul
jp
sbb
orb
stc
fdivrs
in
jg
cmp
mov
adc
cmpb
pop
dec
mov
inc
push
movsb
test
sub
add
incl
insb
ss
inc
mov
popf
mov
jecxz
loopne
fidivrs
xor
pop
xchg
dec
jmp
lock
mov
pop
adc
incl
and
rcrb
xchg
je
mov
mov
mov
cwtl
jno
mov
repnz
cli
mov
out
cmp
mov
insb
lahf
fildll
inc
dec
ds
fisttps
cmp
xor
cli
dec
out
dec
jmp
cld
push
cld
out
cmpsb
arpl
and
mov
mov
sub
push
cmp
adc
pushl
xor
mov
icebp
dec
in
sbb
mov
out
sahf
inc
push
test
sbb
ljmp
push
dec
and
dec
xchg
push
push
sahf
sub
aaa
mov
sbb
push
sar
jmp
adc
jnp
sub
cmpb
jbe
aad
push
les
dec
in
call
xor
out
fmulp
jge
ja
imul
add
adc
and
incl
aaa
fdivrl
jno
or
push
xor
cmp
push
enter
jae
cli
fcomip
lods
pop
adc
add
adc
sahf
push
lret
clc
xchg
xor
lcall
xlat
cmp
add
stos
lods
and
inc
into
jge
sub
mov
mov
pop
xchg
adcl
daa
aad
sahf
shl
cmp
incb
test
lcall
movsb
out
jo
rcrl
cmp
cmp
xchg
bound
jmp
sub
mov
mov
xor
lcall
jmp
ss
scas
dec
xchg
cmc
mov
cwtl
in
mov
std
adc
dec
iret
icebp
mov
jmp
call
scas
stos
xchg
push
or
xchg
daa
push
loope
or
mov
ds
movsl
and
shll
push
stos
aaa
std
mov
jb
subl
jbe
loope
cmc
fs
call
cmpsb
jle
sti
add
and
fnstcw
sub
lret
jl
ss
pop
lcall
push
hlt
dec
cwtl
mov
push
jns
fdivrl
mov
pop
xor
mov
decl
or
rcrb
dec
cmp
cmpl
sub
popa
mov
subb
adc
push
dec
testb
jns
movsb
lea
mov
jbe
mov
jle
push
xchg
cmp
cmc
mov
scas
xchg
hlt
lret
and
jp
xor
fdivl
mov
push
lock
mov
cs
xchg
fld
xchg
and
je
pop
push
mov
incl
dec
mov
scas
aam
fucom
push
inc
rorb
addr16
in
enter
sbb
pop
lret
jmp
pop
pop
cwtl
xchg
ss
push
shrb
sbb
mov
ficoml
pushf
insl
cmp
ret
insb
xchg
dec
pextrw
or
sub
add
cmp
xor
into
pop
dec
insl
shrb
jp
aad
jp
lcall
mov
or
or
ja
mov
jnp
ljmp
mov
or
clc
fwait
fs
and
xchg
int3
jne
mov
add
inc
cmp
ret
lahf
sbb
into
cmc
mov
es
scas
and
das
xor
int
ret
push
fdivs
jg
loop
push
inc
int
sub
push
cmpb
jns
add
mov
mov
pop
or
mov
shl
rorb
push
rolb
test
insl
fildll
adc
jno
and
jp
xor
in
ljmp
mov
pop
iret
mov
pop
xor
mov
outsb
ljmp
sbb
jp
jne
jge
inc
shrl
ljmp
icebp
mov
cs
mov
jmp
or
sti
lahf
push
push
test
pop
jmp
dec
data16
dec
pop
mov
cmc
out
mov
mov
mov
sbb
mov
out
ficoml
mov
clc
ficompl
mov
jae
sub
xor
js
aaa
scas
outsb
mov
loopne
fs
sbb
push
mov
dec
stos
fsubrs
filds
cld
mov
test
mov
xor
in
push
lcall
in
inc
scas
fnsave
push
jmp
mov
or
call
pop
mov
dec
les
xchg
sbb
mov
fistl
jb
fists
xchg
adc
lret
dec
ljmp
pushl
xchg
inc
fucomi
enter
pop
xchg
add
jb
pop
add
cwtl
mov
ljmp
repz
inc
pop
mov
mov
sub
nop
iret
pop
sub
pop
idivb
mov
xchg
jge
fwait
xor
dec
gs
dec
out
mov
xchg
iret
or
fldl
pop
cmp
add
pushl
mov
imul
mov
cltd
xchg
jo
mov
jno
push
call
xchg
mov
into
dec
and
dec
ja
pop
inc
fcmovne
insl
add
adc
dec
pop
rclb
std
lcall
pop
push
sti
sub
fadd
test
sub
sbb
inc
lock
popf
in
pop
ds
daa
push
push
daa
dec
xchg
pop
mov
mov
out
xor
pushl
std
mov
jge
pop
dec
sub
ja
inc
in
lret
push
test
call
std
push
jnp
je
push
jecxz
ficoml
mov
pop
adc
imulb
jl
sub
sbb
xchg
leave
movsl
xchg
xor
cli
xchg
ljmp
sahf
pushf
mov
cmpsb
jg
inc
dec
mov
lea
and
mov
and
ficomps
bound
lea
call
aas
xor
inc
ret
sarl
popf
idivl
push
push
mov
lcall
arpl
inc
mov
fcomps
inc
dec
lods
inc
adc
outsb
or
xlat
jg
pop
mov
push
jne
sarl
and
push
pop
fimull
cld
jg
in
lds
fiadds
sbb
cmp
sbb
push
adc
ljmp
in
bound
jne
sti
hlt
testl
ret
incl
push
jo
mov
xor
xor
outsb
popa
pand
and
sar
fcomip
hlt
xor
rcl
push
dec
ss
call
fs
push
cld
inc
ljmp
loopne
inc
pusha
adc
les
mov
mov
mov
push
aaa
sbb
adc
inc
push
xlat
lcall
or
xchg
sub
jmp
divb
inc
shll
push
cmc
outsb
les
jmp
lret
add
imul
mov
inc
xor
popf
dec
decl
movsb
std
fisubrl
add
cmpsb
jno
data16
push
mov
mov
ss
jae
inc
xor
imulb
ja
out
mov
mov
pop
dec
push
decl
cmc
add
jmp
pop
jno
mov
add
jb
lock
or
cli
enter
call
mov
xchg
push
sub
cmp
sbb
std
mov
shlb
aam
mov
lods
sarl
mov
dec
and
mov
scas
add
ret
imul
mov
std
ljmp
xorb
sbb
test
inc
out
push
sbb
pushf
repz
mov
sbb
dec
sbbl
sub
aam
cld
dec
std
scas
pop
sti
out
std
cmp
rorl
daa
or
int3
lea
fmulp
xor
sub
fs
mov
outsb
push
cmp
pop
or
jno
sbb
mov
push
mov
or
cmp
stos
loope
cmp
jmp
out
mov
jno
jge
shr
mov
sbb
fisubs
mov
push
fistl
lcall
les
ja
pop
sti
ret
stc
jmp
inc
in
xor
adc
inc
lcall
and
add
push
mov
lock
jg
sub
adcb
push
inc
pop
ror
xor
movsl
cmp
xor
aam
mov
jg
stos
pop
hlt
jge
ss
test
or
inc
inc
mov
dec
pusha
js
or
jno
xchg
mov
mov
out
add
rcr
jo
push
xchg
fadds
pop
pop
iret
push
in
sbb
lcall
mov
or
movsl
xchg
dec
out
push
pop
mov
scas
sahf
repz
xchg
mov
lcall
jne
jle
push
jb
dec
ss
pop
push
movlps
xlat
inc
loope
sbb
and
es
or
lahf
gs
clc
push
mov
push
inc
sub
add
or
pop
cmp
addr16
xchg
ds
inc
arpl
ss
decl
out
adc
xchg
mov
js
pusha
push
lods
xchg
mov
test
arpl
xchg
pushl
cld
inc
push
aad
aaa
jl
fmull
into
adc
outsl
ljmp
lret
out
push
push
lock
incl
out
or
push
xchg
mov
fwait
jl
movhps
pusha
cli
fisttpl
mov
aad
jle
mov
psubusw
out
shufps
jg
xchg
mov
leave
sub
mov
dec
cmp
or
pushf
pop
cltd
mov
mov
dec
pushl
cmpsb
scas
sbbl
sub
aas
enter
jne
jo
incl
pop
pop
or
sbb
mov
aad
loop
sub
lods
pcmpgtd
ret
or
mov
dec
mov
mov
gs
sub
in
mov
mov
jmp
mov
insl
in
loop
jmp
mov
and
push
stos
pushf
dec
ficompl
xlat
sbb
push
pop
rol
or
inc
es
enter
mov
pop
loopne
dec
cmc
mov
sbb
pop
mov
cmp
sub
mov
add
adc
push
rorl
cmp
lahf
dec
ret
push
add
icebp
jg
sbb
ret
lock
pop
jle
insb
jno
decl
popa
leave
cs
dec
adc
lods
outsl
out
jecxz
imul
lahf
loope
icebp
pop
stc
push
push
ljmp
rorb
inc
xor
inc
mov
in
int3
mov
call
loop
test
mov
outsb
xchg
inc
sbb
in
in
test
call
sti
fwait
push
sub
push
sub
mov
xchg
inc
cmpsb
shll
in
dec
or
pushl
dec
hlt
sbb
fsub
fbld
lret
mov
fmull
sbb
cmp
adc
pop
sbb
jne
lret
cmp
jg
pushf
mov
aas
xor
adc
loopne
sbb
and
jb
fisubs
decl
inc
and
mov
je
lahf
inc
push
testl
aam
jecxz
xlat
fildll
lea
jg
ds
mov
xor
stos
movsl
jbe
ret
dec
jbe
daa
push
pop
jne
sub
cmc
lcall
pop
dec
lret
movb
mov
lret
idiv
outsl
xor
les
loopne
add
xor
push
call
ss
decl
sbb
call
push
imul
inc
pop
cs
stos
fimuls
dec
out
orb
imul
frstor
aam
cmp
sub
lock
rolb
cwtl
or
push
cwtl
les
jg
mov
pop
pop
repz
and
dec
std
jmp
mov
fwait
fwait
jo,pt
hlt
lcall
jne
mov
test
lods
int3
push
jl
push
mov
fnstsw
push
adc
enter
pop
test
dec
cmp
sbb
pop
gs
pushl
adc
pop
xor
cmc
inc
clc
lods
negl
cli
popa
pop
or
fistps
mov
test
jle
xor
fcomp
adc
ss
pop
test
icebp
je
mov
or
pop
in
jecxz
cli
aaa
cld
inc
iret
and
test
xchg
inc
mov
xchg
pushl
xchg
cwtl
stos
xchg
in
add
push
jbe
aad
sub
movsb
mov
and
ja
movsb
push
call
repnz
mov
cmp
push
ljmp
inc
mov
inc
movups
mov
lock
inc
dec
mov
push
push
push
push
add
mov
mov
mov
add
add
jo
pop
pop
add
sarb
cwtl
lods
or
jmp
aas
roll
pop
in
enter
mov
dec
jp
mov
nop
popl
fstpt
rcr
xchg
dec
or
ret
mov
ds
inc
xchg
xchg
push
ljmp
lret
lods
dec
pop
dec
jb
loop
push
push
pop
outsl
subl
fdivrl
and
ljmp
pop
sub
mov
xchg
lods
cmpsl
xor
jecxz
cld
loope
fsubs
lret
decl
pop
clc
rol
add
cmp
sub
ds
pushl
inc
push
inc
imul
cmp
xor
dec
mov
js
mov
mov
icebp
fcmovb
lods
jno
sahf
add
sub
mov
leave
and
add
or
push
xchg
jge
pop
cmp
lods
xchg
stos
iret
addl
mov
jl
mov
inc
push
xchg
mov
sbb
xor
pop
mov
mov
pop
lock
cltd
cmc
test
mov
ds
ljmp
jae
pop
mov
pusha
jno
divl
sub
loop
mov
adc
push
cmpsb
scas
icebp
iret
xor
jbe
sbb
sbb
push
jae
fnsave
cmp
push
aaa
fwait
push
fistpll
pop
fisttpl
adc
xor
lcall
xchg
mov
or
andl
jbe
and
pop
push
into
icebp
push
int3
call
jno
scas
inc
notb
fisubrs
stos
sub
mov
push
sbb
or
sbb
addl
ficoml
cs
inc
test
outsl
pop
mov
icebp
lea
jmp
bound
daa
jg
mov
or
inc
mul
lret
rol
notl
jge
je
dec
es
xor
ljmp
xor
dec
dec
stc
gs
jb
addb
ret
mov
inc
dec
mov
icebp
push
cwtl
jl
imull
mov
lret
mov
lcall
stc
xlat
adc
jmp
sbb
das
xchg
subb
sahf
rolb
mov
test
fadds
ss
adc
arpl
mov
add
in
cmp
jmp
ret
cmp
dec
mulb
push
jno
mov
sbb
cwtd
call
adc
push
or
jb
xchg
push
mov
inc
mov
ljmp
ret
add
cmp
lea
mov
mov
sbb
fisttpl
adc
lds
call
mov
jmp
xor
and
mov
xchg
xchg
loopne
push
popa
scas
cli
call
in
dec
mov
out
add
push
xlat
lret
push
add
stos
int3
aam
stos
in
clc
jmp
push
popf
jmp
jae
mov
or
shll
addr16
ljmp
cli
pushl
dec
pop
mov
push
pop
out
dec
sbb
add
loope
aad
lock
jmp
ret
cmp
mov
adc
ror
stos
lods
or
pop
cwtl
jmp
jno
push
push
pop
cld
xor
xchg
and
hlt
lods
push
js
and
adc
mov
lahf
pop
decl
cld
fstl
mov
stos
imul
insl
aad
dec
push
jns
int3
xor
in
mov
scas
cmp
imul
or
xor
mov
pushl
mov
orb
xor
scas
jb
and
rcrl
stc
aam
ss
clc
xchg
cmpb
lea
cltd
pusha
jnp
mov
lock
sarl
sub
sahf
or
mov
mov
rol
pushf
mov
jo
hlt
aaa
mov
mov
jne
outsb
sbb
aam
push
mov
call
sbb
xor
and
inc
mov
hlt
push
cwtl
xor
pop
sub
les
xor
jl
call
ss
adc
lcall
shlb
inc
or
jae
movsb
andl
out
fildll
jecxz
add
mov
push
sbb
xbegin
add
jl
and
lret
jne
jecxz
xlat
dec
xchg
leave
or
fildll
adc
loopne
ja
push
jg
mov
cld
jg
mov
icebp
push
outsb
push
roll
repz
dec
cwtl
push
jbe
and
mov
cmpsb
in
cmpsl
daa
dec
aaa
sub
stos
cld
ljmp
or
push
sub
mul
cmp
mov
mov
pushl
push
mov
xor
dec
jae
push
add
nop
push
orb
add
sub
jg
jle
aam
cmc
ss
or
rcrb
pushl
std
jns
xlat
fdivrl
mov
xchg
push
sbb
sbb
clc
lcall
and
scas
adc
dec
out
mov
mov
rcrb
paddd
cwtl
js
mov
scas
rol
jno
jae
mov
addr16
je
call
lahf
call
icebp
dec
xchg
loop
scas
pusha
cltd
push
or
inc
stos
repz
popf
xchg
pop
loopne
lcall
icebp
incl
sub
imul
cmpsl
fcoml
loope
loopew
jle
repnz
pop
and
sbb
dec
mov
ljmp
and
hlt
jo
ljmp
push
arpl
sbb
popa
cmp
mov
test
nop
push
mov
jo
into
shlb
fcos
jno
popa
mov
clc
decl
pop
pushaw
xchg
jns
insl
mov
mov
pushl
push
xchg
movb
fsubrp
adc
test
and
xor
call
dec
ret
push
out
jno
outsb
mov
mov
lods
push
push
movsb
xor
mov
add
xor
and
in
xor
xorb
jg
add
sub
sub
xchg
ss
jns
pop
cmp
fnstcw
pop
nop
jo
decl
push
std
push
hlt
pop
fucom
js
pop
and
mov
pop
xchg
jmp
jmp
jbe
gs
adc
jno
mov
xchg
push
pushl
pop
std
inc
shr
fimuls
into
int
pop
cs
ljmp
dec
or
incl
sub
cmp
adc
repnz
inc
int3
jl
and
inc
movsl
mov
decl
sbb
sub
sbb
push
cmp
cmpsb
lret
outsb
jo
or
jne
outsl
add
push
loop
jns
jg
in
xchg
pushf
add
roll
sahf
mov
roll
adc
in
and
pop
ds
and
dec
push
sbb
sbb
ds
stos
adcl
fidivl
sbbl
sbb
dec
xor
outsl
jns
jg
or
std
mov
or
sub
decl
test
xchg
fdivs
aas
icebp
pop
insb
inc
mov
jbe
stos
insl
lsl
jmp
ja
add
outsb
push
iret
sub
imul
cmpsl
pop
lock
jle
fs
pusha
push
mov
or
and
and
loope
aaa
xchg
pop
sub
aas
iret
arpl
mov
or
add
sbbl
sub
in
adc
pop
fst
mov
or
cmp
and
test
jecxz
aam
mov
sub
movsb
nop
lods
xor
inc
push
in
pusha
cmp
pop
cmp
decl
jb
pop
sbb
lcall
bound
inc
cmp
lods
fwait
jb
sbb
clc
scas
cmpsl
and
movsb
idivl
inc
call
loopne
lcall
dec
dec
xchg
clc
stos
dec
cmp
lea
lcall
jns
dec
lock
jnp
xor
or
divl
popa
cs
add
mov
dec
adc
cmp
or
pop
sbb
dec
mov
shll
les
jnp
divb
lret
push
mov
jo
outsb
addr16
icebp
adc
lea
push
pushl
int
fcoml
stos
xlat
pop
aam
pop
pusha
aas
mov
bound
jb
imul
sub
test
mov
jmp
xor
mov
and
mov
insb
mov
in
adc
ljmp
sbb
dec
xchg
xchg
andl
pushl
jno
cmpps
ljmp
mov
pop
pushl
add
test
rcrb
data16
sbb
jg
jmp
xchg
pushf
jae
daa
pop
adc
lods
arpl
mov
jne
shr
repnz
lcall
insl
popf
cmp
das
pop
lods
dec
add
addr16
rcll
push
xchg
and
fwait
mov
call
or
ficomps
negb
pop
xor
fistl
adc
jg
call
adc
jne
es
xor
pusha
push
sarb
lahf
push
fisubl
ljmp
rolb
jnp
pop
into
sarl
popa
arpl
ljmp
pop
push
push
dec
ud0
std
jmp
in
mov
lret
cli
sbb
add
xchg
loope
adc
jmp
lcall
xorl
dec
mov
dec
push
jo
pop
fsubrl
jae
inc
jbe
decl
lret
ret
les
mul
or
repz
ja
fs
or
ja
mov
push
or
mov
lea
popf
push
sarb
xorb
xor
fbstp
adc
inc
add
aad
xchg
jbe
lea
push
dec
mov
mov
bswap
ffree
mov
sub
xchg
sbb
mov
mov
jg
jmp
adc
rcrb
nop
cmp
jg
add
adc
sbb
outsl
pop
call
cld
fldcw
and
scas
adc
xor
inc
mov
add
add
mov
cmp
and
xchg
dec
fldcw
adcl
repz
push
scas
sarl
test
fldl
pop
cld
lcall
mov
push
pop
push
fdiv
sub
and
incl
test
faddl
and
test
xchg
dec
pop
push
in
mov
xlat
imul
pop
inc
dec
adc
incl
push
pusha
scas
scas
add
repnz
mov
bound
divb
lcall
in
or
sub
js
fildll
leave
testl
xor
stc
dec
push
lods
dec
iret
ficoml
push
jg
jmp
dec
sub
mov
sbb
cmp
dec
or
jg
push
jns
repz
pop
scas
jecxz
rcr
mov
adc
ret
repz
clc
lahf
jne
mov
dec
pop
popa
sub
jle
sbb
lods
sub
clc
jg
and
add
adc
xor
subl
inc
lret
dec
das
loopne
lods
and
add
and
int3
in
or
jecxz
jl
jno
xchg
mov
inc
mov
enter
ret
or
xor
jb
jno
inc
cmp
mov
sbb
mov
adc
rorl
outsl
clc
ret
adc
push
cmpsl
mov
cmp
mov
jmp
je
jns
pusha
loopne
sub
sahf
mov
cli
and
pop
scas
mov
pop
jo
int3
push
mov
and
mov
mov
adc
arpl
mov
mov
mov
loope
add
cld
add
xor
repz
mov
jg
xor
inc
sub
push
loopne
inc
mov
rcrb
jo
push
movsb
mov
pushf
call
incl
xchg
movsl
into
inc
inc
inc
or
pop
fimuls
dec
fmuls
jecxz
shl
cwtl
call
sbb
add
rorb
scas
lahf
dec
into
mov
cwtl
fninit
sti
jle
lea
ljmp
mov
test
into
adc
sbb
pop
push
and
push
jae
in
inc
dec
pop
sbb
call
jnp
fimuls
or
or
inc
fsts
cmp
nop
adc
jne
jmp
ljmp
adcb
sub
or
out
jno
or
pushl
inc
inc
adcl
inc
xchg
test
icebp
mov
jnp
fcomp
jl
ret
std
movl
adc
xor
mov
cwtl
stos
xchg
add
repz
pushl
xor
xor
adc
sbb
stos
and
xor
lcall
mov
rcrb
gs
xlat
fsubrs
cmp
inc
inc
stc
pop
lods
movsb
call
clc
loop
dec
clc
sub
lahf
push
daa
ljmp
clc
xor
mov
sbb
cld
fwait
cs
cltd
and
push
insb
or
jle
out
pop
in
sbb
divb
adc
dec
hlt
out
repnz
dec
sbb
ljmp
in
sub
leave
mov
xlat
dec
cli
cld
jno
push
stc
xchg
bound
pusha
sbbb
push
lock
mov
gs
mov
test
das
movsb
jl
movsl
jo
imul
sub
mov
fwait
pop
cmp
push
xchg
xchg
sub
jg
jb
dec
leave
andb
inc
aad
mov
inc
add
ljmp
and
sub
fimull
cs
pop
jle
pop
addr16
mov
sar
fptan
aad
rclb
jl
sub
mov
into
je
nop
cs
fwait
cmp
mov
rol
sub
sbb
jo
xchg
scas
lret
lret
and
incl
inc
mov
aas
xor
lret
push
lcall
push
cli
mov
pop
cld
pop
test
int
rcl
enter
daa
lods
or
ret
add
pop
lods
nop
add
xchg
sub
popf
decl
leave
sbb
lahf
mov
fs
fldlg2
test
push
push
sub
aad
sbb
pushl
fsqrt
mov
push
mov
incl
pop
inc
sbb
out
sbb
cmp
mov
outsl
or
sub
jns
mov
lods
add
mov
jbe
mov
adc
iret
inc
dec
lods
jb
out
cld
or
mov
popa
daa
sbb
add
cs
lret
in
jo
mov
jns
cli
cmpsb
daa
incl
add
mov
mov
jno
adc
xchg
pop
adcb
lcall
or
data16
bound
xor
xchg
dec
mov
push
and
movsb
out
clc
ljmp
pop
in
push
shlb
sbb
add
ret
cmp
mov
xchg
testl
sub
lret
xor
and
test
out
push
sbb
inc
push
das
jbe
out
sub
xor
in
mov
cmp
or
pop
out
mov
out
andb
mov
add
pop
outsb
cmp
sbb
mov
push
cmp
das
adc
call
push
adc
rorl
js
fcomp
mov
sahf
dec
int
jbe
xchg
je
pushf
enter
scas
incl
repz
nop
icebp
outsl
cmp
adc
testl
sbb
push
sub
mov
lods
jb
jo
xchg
pop
jmp
xor
xchg
fmuls
popf
inc
jno
inc
loopne
fsubr
cmc
sbb
ljmp
outsl
lea
test
xor
jae
fs
lcall
dec
xor
xor
push
add
insb
lret
mov
mov
ljmp
clc
lds
push
xor
cmp
jne
jl
mov
pop
cli
pushf
lcall
push
call
xchg
add
aam
mov
push
arpl
sahf
loopne
out
daa
test
in
es
cwtl
jg
das
mov
addl
mov
mov
in
jb
jg
lcall
int3
add
mov
jge
jne
mov
dec
cmp
mov
ljmp
lods
jecxz
jno
sarb
mov
mov
ja
call
in
cwtl
jb
mov
jmp
fwait
push
icebp
push
xor
pushf
or
movsb
jns
pushf
icebp
sub
aam
test
jl,pn
fisubrs
push
cmp
scas
mov
ret
test
orl
push
add
ret
adc
push
lds
inc
xlat
xor
xlat
les
push
dec
xchg
jmp
mov
lret
jne
or
mov
push
movsl
pop
mov
jno
outsl
pop
loop
fmuls
bound
mov
call
movsb
in
add
lods
imul
pop
inc
sbb
cmpsb
mov
cmpsb
xchg
push
gs
lcall
jns
add
dec
sbb
pushf
or
int
and
sahf
pavgw
sti
lcall
cmpsl
inc
into
mov
mov
daa
and
push
mov
decl
daa
js
jle
iret
addr16
push
mov
push
mov
int
loopne
mov
add
mov
lds
add
or
out
push
pusha
movsb
jle
and
inc
jl
or
ljmp
jl
xchg
xchg
mov
fildl
push
or
dec
jge
jno
add
imul
cmp
pop
push
sbb
sbb
jp
sub
push
add
jecxz
pushl
lcall
std
dec
loopne
bound
repz
incl
push
mov
jne
cli
insb
push
inc
adcb
inc
sub
cmpsl
int3
ds
test
dec
ss
popf
adc
sar
incl
cld
inc
outsl
cmp
mov
and
pop
dec
sbb
mov
lcall
scas
repnz
mov
pop
push
adc
lock
or
dec
pop
mov
decl
adc
inc
mov
incb
xchg
aaa
ljmp
dec
sbb
ljmp
inc
fisubrs
xchg
ss
dec
mov
mov
mov
xchg
pop
inc
movsb
filds
push
mov
ds
pushl
rcll
jmp
fcoms
cmpsb
fimuls
loope
movsl
add
xor
add
lods
insl
int
mov
notl
xor
jo
or
frstor
jle
fdivrp
jl
stos
ds
jno
mov
mov
sar
or
int
jb
mov
jg
decl
xchg
outsb
negb
push
ret
mov
mov
add
ss
insb
roll
clc
jg
lret
ret
xchg
push
cmp
cmp
xor
inc
ss
repz
xlat
rcrl
xlat
je
mov
cmp
cmpb
out
lahf
mov
xchg
sub
pop
inc
test
loop
lcall
mov
jmp
mov
shlb
adc
fnstsw
std
ljmp
fldenv
mov
repz
adc
leave
push
sbb
adc
lcall
std
jnp
sub
ret
fwait
call
sbb
and
das
mov
in
jle
jb
mov
insl
into
jle
push
cwtl
push
pop
mov
mov
ljmp
lods
movsl
adc
mov
lods
mov
push
mov
jmp
stos
sub
fucomi
loop
incl
dec
push
mov
mulb
std
sahf
inc
ds
add
lods
pop
jp
and
out
jmp
addr16
outsb
das
xchg
daa
outsb
pop
ss
ja
sbb
jb
clc
fisubs
fisttpll
scas
pushl
and
data16
scas
dec
es
xor
sahf
ljmp
mov
arpl
and
lret
fwait
subb
aas
cld
repz
popf
mov
push
xchg
sbb
sub
lret
repz
sti
lahf
mov
mov
sub
shrb
cmp
mov
int
push
adc
mov
shrl
in
repz
loope
push
cwtl
pop
test
fs
enter
push
rcll
js
mov
inc
ljmp
sti
inc
xlat
xchg
fdivs
jnp
jmp
fwait
lea
lock
add
xorl
adc
push
jne
dec
test
pop
daa
sub
lcall
mov
cmp
sub
inc
and
or
sahf
movsb
out
sub
ror
pushl
clc
aam
xchg
mov
push
xchg
add
jb
inc
test
outsl
xchg
ljmp
outsl
mov
call
movsb
inc
and
icebp
push
out
mov
push
aam
pop
cmpsl
pop
jp
jns
push
jmp
mov
fwait
in
xor
adc
jmp
pushf
pop
icebp
mov
addr16
xchg
leave
pop
push
leave
aas
mov
sub
test
es
cmpsb
jno
or
iret
insb
push
lcall
incl
mov
popf
pop
add
pop
mov
push
and
fwait
pop
sahf
out
lcall
or
add
xor
pop
xor
cwtl
cmp
jno
pop
mov
inc
push
jecxz
decl
mov
push
loopne
js
xchg
push
mov
out
jle
jae
pop
mov
sub
arpl
jge
out
mov
enter
repz
fwait
pop
xor
stc
sbb
jo
mov
loopne
lcall
fisubrs
scas
cmp
inc
jg
int
push
mov
std
cmp
lods
ret
sub
cld
js
insb
outsb
add
lcall
es
fwait
or
xchg
xchg
popa
in
lret
lea
jg
inc
pop
xlat
push
out
vpaddb
sti
rolb
in
sub
int
lcall
dec
adc
push
lahf
mov
dec
or
sahf
mov
inc
xlat
jg
lods
push
call
mov
call
jle
push
lock
or
aas
out
jp
inc
daa
add
cmc
fcoml
lcall
rcrb
xor
popf
hlt
cmpsb
sbb
testl
aam
add
xchg
mov
incl
cs
es
cmp
lods
xchg
mov
mov
pop
mov
mov
fwait
push
dec
in
sub
xchg
aas
rorb
orl
enter
lea
pop
jecxz
jne
out
mov
daa
dec
out
mov
lcall
dec
mov
jno
ret
mov
xor
lcall
jno
mov
test
jecxz
adc
or
rorb
xor
lcall
mov
push
pavgw
insl
int3
pop
cmp
push
out
ds
cmc
cmp
daa
lods
cmp
decl
push
lock
fstpl
inc
movsl
and
lcall
leave
ret
dec
xor
jmp
add
adc
jg
test
dec
cmp
or
sahf
jmp
jg
test
and
test
sub
fldl
daa
xchg
mov
inc
lcall
xor
push
jbe
test
ljmp
or
pop
orb
inc
mov
jg
cmp
mov
cli
in
in
mov
dec
pop
add
dec
xchg
adc
xor
cmc
pushl
xor
or
mov
mov
sub
loop
push
mov
mov
outsl
and
das
imul
adc
push
xchg
mov
insl
xchg
js
sbbb
mov
push
in
mov
jmp
decl
out
popa
imul
push
inc
pop
adc
dec
and
cmp
push
mov
hlt
mov
cmpsl
and
or
call
lret
mov
or
fcmovnbe
mov
das
sar
jp
push
add
je
dec
sub
nop
cli
add
pop
cmpsb
cmc
mov
sbb
xor
add
mov
ja
mov
decl
rcrb
popa
lods
aam
mov
and
mov
stos
inc
adc
and
push
jecxz
cmp
pushl
shl
scas
or
mov
ficomps
fisubl
imulb
mov
adc
push
aaa
in
movb
mov
repz
push
or
cmp
xchg
fcoml
pop
and
mov
mov
mov
push
push
mov
sbb
mov
mov
pushl
ficoms
fists
pop
imul
cmpsb
inc
jp
lcall
push
push
mov
bound
je
add
pusha
jbe
repnz
aas
jge
ss
icebp
incl
pop
push
rcll
jnp
sti
pop
pop
and
pop
push
cs
sub
jg
pop
out
stc
mov
ss
sar
add
stos
add
stos
fbld
xor
pusha
pop
insb
sub
ds
movsb
xchg
out
xchg
mov
cmp
add
lahf
and
aad
lcall
std
aam
sbb
add
scas
insl
dec
or
cmp
fdivr
jg
add
pop
imul
push
or
iret
pop
imul
adc
dec
mov
sar
loop
pop
sar
and
movsl
sub
call
addr16
add
pop
notb
mov
nop
shlb
adc
sbb
sbb
jmp
sub
mov
gs
sub
lahf
lods
mov
mov
ss
jmp
stos
sahf
inc
fmuls
repnz
cmp
dec
hlt
dec
hlt
inc
cmp
cmp
adc
sbb
into
fcmovbe
loope
decl
push
pop
cmc
int3
subl
pushl
cmpsb
inc
mov
cmpsb
fisubs
mov
mov
daa
jge
cs
mov
and
pushl
sub
xor
ret
push
jno
pop
push
inc
pop
dec
sub
jbe
lods
inc
call
data16
in
insl
movlps
mov
or
add
lock
push
sarb
and
repz
add
add
pusha
adc
cmp
repnz
sbb
ds
dec
cld
test
ljmp
sub
jnp
pop
ds
test
cmc
xchg
scas
aaa
cld
fistpll
or
movsb
decl
mov
mov
lods
fstp
data16
inc
push
adc
cmpsl
cmc
inc
push
push
fsts
dec
xlat
mov
cs
push
mov
jno
scas
into
xchg
das
mov
lcall
pusha
sbb
xor
imul
push
lret
insb
movsb
push
es
and
jmp
pushf
sbb
test
inc
push
add
xchg
ljmp
add
jnp
jmp
outsl
inc
iret
aam
inc
lcall
aas
insb
test
or
loope
js
lret
out
pop
outsb
scas
gs
ljmp
cmpsl
hlt
shl
jmp
lds
mov
xchg
push
push
enter
mov
pop
iret
sub
jle
cltd
push
jg
xchg
fldt
inc
cld
and
add
scas
xchg
test
call
lods
mov
dec
or
sbb
xchg
jecxz
fcompl
outsl
jnp
mov
rcrb
pop
jecxz
or
sub
rcl
not
sbb
mov
arpl
push
in
mov
or
cmp
pop
in
aam
pop
sbb
lcall
loopne
or
pop
jno
xor
inc
lahf
jl
inc
jle
fwait
xor
add
cmpsb
xor
aad
out
ja
jnp
adc
arpl
mov
push
pcmpeqb
fbld
fisubs
mov
mov
fildll
adc
mov
mov
leave
jb
lret
aam
bound
dec
jnp
cmp
in
ja
lock
es
sbb
shl
dec
and
sub
sbb
nop
jg
add
mov
int
add
dec
inc
js
dec
lcall
sbb
mov
rolb
xor
add
call
loopne
stc
adc
into
je
call
jecxz
sub
jecxz
lock
jmp
push
cli
popf
fmul
push
daa
mov
jp
jecxz
cltd
push
movsl
jae
outsl
push
decl
pushf
push
scas
xchg
das
dec
rclb
sub
xchg
insb
cmp
mov
cli
into
mov
andl
lea
cs
adc
lcall
xor
or
xchg
cmp
data16
int
fbstp
sbb
movl
ds
jp
cmp
fdivrp
decl
lods
mov
int
outsl
mov
dec
clc
mov
mov
jp
notb
sar
icebp
push
sar
decl
mov
ret
je
sbb
es
xchg
or
cmp
lock
fisttpl
adc
call
and
inc
fstp
and
into
push
sbb
and
fld
mov
call
fs
dec
mov
sbb
fisubs
cmpl
mov
xchg
in
or
push
mov
mov
inc
mov
iret
lds
cltd
mov
out
push
test
aad
jmp
push
xchg
mov
lcall
push
leave
pop
les
sub
mov
jge
cltd
or
xchg
pop
std
lcall
cmp
out
fwait
clc
and
mov
cmpsl
jnp
decl
mov
fisubl
xor
cmp
into
in
ror
stc
cmp
outsb
dec
call
loop
inc
iret
int3
fwait
xchg
push
leave
adc
pop
or
pop
add
dec
pop
repz
call
fwait
pusha
rcll
ret
and
jmp
out
inc
push
mov
ds
sub
inc
fcomp
out
mov
aaa
jmp
push
jns
push
inc
and
inc
jo
aad
in
pop
dec
std
incl
inc
fisubrs
cwtl
pop
jnp
adc
lret
scas
and
adc
call
mov
sbb
xor
aas
jo
mov
aad
out
pop
push
lret
pop
lcall
dec
inc
sbb
pop
inc
fbstp
arpl
loop
pusha
sub
mov
mov
push
out
andps
mov
inc
jg
outsl
test
pop
pop
mov
pop
out
inc
fwait
inc
stc
nop
and
pop
sti
popf
aam
mov
fsubl
mov
pop
push
mov
out
pop
add
iret
aaa
ljmp
push
aaa
mov
cmp
cmp
mov
into
aad
scas
push
lret
jo
cli
lcall
movsb
lcall
ljmp
cld
das
inc
cmp
mov
inc
sarb
das
push
or
test
in
push
cmp
jg
out
iret
sub
jg
clc
add
jle
mov
cli
and
rorl
fwait
paddq
push
add
icebp
fs
stc
in
mov
rol
jmp
adc
and
push
lret
dec
stos
jmp
pushl
adc
mov
push
cmp
adc
dec
or
xor
mov
xlat
mov
ret
out
test
hlt
ja
cmp
repnz
imul
stos
lcall
call
arpl
daa
sar
sbb
jmp
incl
cld
leave
rol
test
ljmp
sti
std
loop
leave
dec
mov
pop
jnp
frstor
mov
enter
hlt
xor
loopne
repnz
stc
or
notb
aas
ljmp
jns
sahf
mov
jmp
push
adc
fistps
sbb
add
or
scas
popa
rcrl
or
fisttps
loopne
xor
push
clc
push
fwait
popa
cld
add
loop
jae
loopne
mov
les
out
sbb
enter
adc
cmc
jecxz
fldl
addb
call
pusha
jns
aam
cmpsl
add
jb
arpl
pusha
pop
jne
insl
rcrb
loop
push
mov
or
dec
out
cli
mov
push
dec
imul
mov
sub
jp
ljmp
adc
lcall
and
inc
ret
lcall
in
cmp
mov
push
lcall
rcl
cmpsb
in
push
out
jp
lea
jo
inc
fs
in
pop
cmp
int3
push
cmpsl
adc
xchg
xchg
idiv
fcmove
and
adc
pushl
ljmp
or
add
xchg
xchg
mov
pop
push
filds
cli
sbb
xchg
mov
push
xchg
in
add
mov
jg
dec
imulb
out
cmp
sbb
jae
negl
aaa
mov
adc
call
ljmp
add
faddl
mov
in
lock
pop
lcall
mov
fidivl
pop
orb
leave
popa
add
add
add
jp
arpl
int
cli
ret
addr16
cmp
and
out
cld
pop
call
cmovne
mov
mov
std
cld
jmp
cwtl
lock
decl
faddl
pop
shll
pop
push
mov
pushf
mov
pop
cmp
into
jbe
xor
dec
lret
pop
insb
xchg
aaa
pushl
jns,pt
iret
sub
lret
mov
lcall
je
cs
fistpl
adc
pop
add
and
fs
pushl
mov
lcall
sbb
mov
push
add
insl
dec
out
mov
decl
test
adc
cmp
xor
scas
fnstenv
cld
mov
xor
aam
sub
ds
cmpsb
orl
cmpsb
test
pushl
dec
mov
adc
sbbb
jnp,pn
inc
stos
popf
ljmp
fdivr
mov
aas
jbe
push
inc
outsb
in
pushf
mov
sahf
push
out
inc
frstor
outsb
push
dec
ljmp
mov
pop
mov
mulb
sbb
rolb
push
inc
xchg
test
decl
jecxz
sahf
pop
outsb
and
xor
xlat
aas
js
add
or
loop
orl
incl
imul
mov
jecxz
dec
push
and
cmp
pop
js
inc
push
xchg
xchg
movsb
xchg
cmp
sub
decl
adc
cwtl
ss
jne
clc
je
jno
xor
es
or
mov
and
xchg
test
jno
out
adc
inc
clc
ljmp
addr16
push
adc
mov
stos
add
enter
mov
jge
sub
cli
lock
jmp
or
and
enter
movsb
filds
xor
rcrl
fnsave
into
andl
mov
pop
mov
dec
push
lds
lods
rcl
leave
jecxz
lods
mov
mov
ljmp
call
and
leave
sbb
add
rorl
out
jg
cmc
push
or
loop
lcall
pop
xchg
mov
cmp
mov
cmp
aaa
and
mov
insb
loope
xor
adc
or
dec
stc
mov
add
inc
loop
int3
js
pushf
mov
mov
aaa
xor
pop
sbb
mov
jae
cmp
mov
ljmp
dec
inc
adc
pop
push
aaa
mov
cmpsb
in
ljmp
mov
jle
sub
lods
or
dec
lds
cltd
jnp
xchg
mov
pop
decl
repnz
mov
out
dec
or
aaa
ja
cmp
clc
imulb
dec
adc
lcall
xchg
xor
and
jge
lods
aam
test
dec
dec
push
pop
push
or
sub
mov
fildl
push
sarb
xor
add
mov
push
pushf
mov
daa
cld
push
aaa
sub
nop
push
cs
daa
sbb
pop
and
sahf
cwtl
mov
int
sbb
imull
movsl
pushf
inc
scas
call
lahf
fs
mov
push
subb
dec
sbb
xchg
int
loopne
leave
xor
aaa
lret
cli
add
push
adc
rorb
loop
push
mov
pop
outsl
adc
lods
cmp
pop
bound
cltd
push
mov
mov
jp
es
call
sbb
mov
pop
mov
push
xor
add
inc
adc
xchg
pop
xor
aaa
sbb
push
push
sbb
mov
loope
call
mov
gs
dec
pushf
or
pushl
cwtl
or
inc
xchg
fdivrp
mov
lock
or
mov
adc
push
nop
sbb
stos
cmp
jg
lcall
mov
sbb
pop
or
les
insl
mov
or
mov
sub
add
ret
addl
int3
sar
pop
popaw
movsb
shlb
test
leave
outsb
pop
push
stos
aaa
repnz
stos
jb
clc
fcomip
dec
add
test
adc
les
xor
stos
in
test
or
pop
test
cmp
shrl
inc
jecxz
fwait
dec
fistl
adc
inc
jns
push
xor
incl
stos
mov
mov
lods
or
mov
pusha
mov
sub
ds
xchg
mov
movsl
dec
fsubrs
adc
clc
cmp
ljmp
cmp
dec
jge
inc
mov
inc
loop
fildll
cli
ret
repz
pop
cmpb
insb
lea
sahf
jg
loope
sbb
sub
pop
stc
dec
pusha
std
pop
cmpsl
push
add
inc
cmp
mov
push
and
icebp
das
fsubr
aad
dec
sub
das
cli
sbb
adc
inc
inc
scas
pop
push
xor
push
push
or
add
push
dec
test
jg
dec
and
or
mov
rcll
cmp
mov
nop
xchg
out
jno
stos
cwtl
popa
incl
cld
out
das
addl
mov
jb
stc
loop
push
popf
push
int3
and
cmp
lcall
mov
cmp
push
les
mov
mov
adc
pop
adc
add
xor
decl
scas
add
sub
jo
inc
call
xor
ljmp
arpl
adc
mov
das
ds
scas
in
cld
adc
gs
jns
cs
xchg
mov
es
pushl
or
std
xor
add
mov
push
sbb
fs
lods
pop
fcomip
lcall
out
lret
xor
es
xor
xorl
pushl
or
cwtl
pop
inc
nop
pop
xchg
lret
push
jbe
imul
add
insl
push
push
test
mov
icebp
jl
aad
aad
inc
into
and
ds
jo
ljmp
xchg
repnz
pop
addb
sub
cld
mov
pushl
test
sub
and
sub
jne
inc
pop
fimuls
iret
pop
jmp
decl
data16
mov
aas
push
loop
pop
sub
jbe
add
div
pushl
aas
lods
call
pop
ss
inc
sar
dec
cmp
cmp
or
test
inc
jbe
nopl
call
jb
repnz
and
mov
popa
sarb
std
data16
cmp
inc
and
xor
outsl
sbb
jg
xchg
loope
mov
push
test
int
rorb
mov
loop
test
out
push
sbb
jl
add
pusha
mov
and
mov
ljmp
pop
push
and
xchg
push
adc
incl
cmc
js
sbb
shll
into
je
popf
es
jo
or
ljmp
and
xchg
xor
lods
lock
lock
or
movsl
mov
pop
lock
rcll
lcall
jmp
add
ret
ljmp
mov
mov
or
xlat
add
pop
iret
dec
push
in
clc
cmp
sub
sub
cwtl
dec
pop
pusha
pop
pushf
test
daa
inc
or
out
pop
pushl
enter
xchg
mov
mov
cli
ljmp
aad
inc
mov
ljmp
nop
call
subb
out
sbb
jbe
push
push
xchg
adcl
jmp
and
push
cld
jmp
test
sarb
popf
cmp
mov
je
gs
adc
sub
ret
push
mov
cmpsb
decl
mov
icebp
ja
pop
xchg
or
mov
imul
cmp
lock
int3
cld
push
cs
ljmp
ret
mov
lea
lods
scas
scas
pop
sbb
mull
jmp
jnp
cmc
ljmp
sbb
mov
cmc
icebp
fs
ljmp
jle
cmp
add
nop
mov
out
gs
add
mov
lock
shrb
adc
lahf
test
and
incl
fcoml
out
sub
ret
jno
fdivrp
mov
incl
call
mov
pop
cltd
pusha
js
clc
xor
cltd
ljmp
cmp
dec
stos
push
mov
call
jne
sbb
sbb
inc
fsubp
ror
mov
jle
push
loop
mov
cmp
cltd
xchg
inc
outsl
adc
mov
sbb
push
add
jge
xchg
aaa
cmp
dec
push
sbb
std
out
ljmp
push
xchg
mov
fmul
dec
cmp
jmp
fidivl
pop
pop
lock
ljmp
xchg
push
dec
jbe
sbb
popa
std
fnstcw
nop
dec
xor
sub
jmp
or
mov
sub
jg
inc
inc
outsb
jbe
sbb
adc
mov
mov
call
shrl
jl
cli
pushf
ljmp
inc
loopne
dec
fcmovnbe
xor
mov
cmp
iret
push
adc
inc
sbb
hlt
and
jmp
sti
aad
ret
mov
pop
dec
daa
test
mov
mov
sub
stc
scas
ja
fs
cmp
pop
inc
mov
incl
negl
and
pop
lods
and
sub
xchg
mov
fadd
scas
cmp
loop
push
lcall
ret
add
xor
cmp
enter
xchg
fbld
hlt
cmp
pushl
add
cmp
or
push
or
popa
imull
aaa
fdivrl
ljmp
jmp
jae
or
rolb
andl
sub
aaa
jo
rclb
imul
mov
sahf
dec
push
sub
mov
inc
jae
out
mov
fcompl
jne
add
fidivs
aaa
js
fsubrl
xchg
aas
in
scas
mov
push
std
cmp
add
pop
cltd
insb
gs
xchg
fwait
add
incl
push
xchg
lret
shrb
push
out
lret
pushw
xchg
shl
jae
ret
cmp
dec
mov
mov
or
pushl
les
leave
scas
cmp
mov
scas
imulb
jae
aam
sub
mov
inc
xor
stc
mov
stos
sahf
movsb
and
push
sbb
fmull
test
lret
or
jne
popa
and
cmp
mov
out
out
xor
sub
lcall
adc
das
and
mov
mov
icebp
jge
cmpl
call
or
xchg
add
fsubrs
xchg
aad
inc
in
inc
mov
test
enter
stos
pop
xchg
jg
ja
jbe
xor
jl
imul
mov
outsl
adc
xchg
push
sysenter
ffreep
xchg
lods
mov
incl
dec
and
add
lcall
mov
sahf
lods
ds
adc
cmp
jmp
pushf
mov
sub
adc
mov
movsl
cmp
aam
test
cmp
inc
imul
mov
es
jmp
ljmp
mov
pop
inc
in
leave
pop
pop
shlb
subl
test
lcall
push
pop
sti
fldenv
sub
adc
stc
loope
inc
mov
fs
int
and
ljmp
lea
xchg
es
xchg
cmp
negl
dec
cmp
push
movsl
lea
add
ret
outsl
pop
mov
push
int
add
mov
call
outsl
sarl
cmc
pop
call
jle
jp
aam
js
sbb
mov
or
fstpt
fstps
xchg
sahf
or
call
mov
int3
out
push
roll
xor
add
add
lcall
adc
dec
jno
sub
jno
popf
arpl
push
js
cmc
ja
les
cmpsb
xchg
jnp
movsb
mov
cltd
lods
pop
addr16
sbb
call
inc
in
or
mov
ds
pop
xlat
imul
push
or
fmuls
mov
mov
cmp
dec
test
aad
inc
ljmp
adc
jp
or
arpl
pop
inc
mov
push
cmc
lods
mov
adc
outsl
movsl
cmp
sbb
clc
inc
jmp
pop
sarl
out
popf
xchg
pop
movsl
aaa
lahf
mov
push
cmp
xor
daa
call
mov
jp
pop
or
jb
pushf
push
int
pop
mov
sbb
add
cmp
call
imul
push
xchg
scas
loopne
int
test
xchg
into
ret
fsubrs
add
rorb
ljmp
das
jp
loop
cmc
inc
sbb
pop
das
sbb
leave
clc
cmpb
test
lcall
insl
mov
sti
inc
jo
mov
xchg
xchg
xor
lret
xor
jg
call
jno
dec
lcall
andl
fdivrl
mov
int3
sahf
mov
jg
cmp
stos
push
cmp
test
dec
imul
push
jl
mov
jge
and
sub
insb
fs
cld
ljmp
add
fcompl
cwtl
push
jbe
mov
pop
call
jae
fisubl
daa
inc
rolb
insb
ss
mov
lahf
inc
in
dec
fadds
jp
pop
lods
pushl
ret
mov
jmp
push
cmp
jg
mov
xchg
bound
sar
mulb
inc
xchg
in
popa
js
pop
mov
mov
lcall
xchg
and
dec
xor
add
pop
jbe
push
push
test
push
ret
cs
mov
arpl
cmp
cmc
mov
dec
call
xchg
push
sbb
mov
out
push
in
adc
adc
sbb
sahf
out
into
cmc
push
mov
jns
mov
js
xor
cli
popf
mov
sbb
push
mov
fisttps
xchg
mov
sbb
das
jae
and
scas
adc
mov
adc
dec
mov
adc
add
cs
test
inc
mov
es
ljmp
mov
and
lret
sbb
fwait
jbe
subb
cmp
xchg
jl
pop
sarb
xchg
out
dec
cmp
inc
decl
mov
sbb
push
pusha
sbb
andb
xchg
push
rcll
fwait
fstpt
xor
inc
sbb
out
push
outsl
mov
xor
pop
inc
sub
dec
jns
icebp
test
push
call
or
jnp
jge
fdivr
pop
data16
sarl
loop
xor
push
mov
cmp
popf
jle
xchg
js
in
lret
jecxz
and
enter
jae
mov
paddsb
xchg
jnp
mov
loope
pop
hlt
add
adc
jge
jns
or
leave
idivb
decb
jecxz
imul
aas
jge
cmp
call
xorb
mov
cmpsl
adcb
js
mov
insb
data16
dec
imul
dec
mov
and
adc
xchg
in
sub
mov
cmp
loopne
mov
dec
out
je
mov
or
jg
add
arpl
mov
cwtl
and
xorl
call
xor
sti
xor
jp
mov
leave
jne
lods
sti
orb
dec
inc
popa
loope
out
jbe
loopne
lcall
pop
cli
into
push
xchg
mov
mov
scas
or
scas
mov
in
push
adc
xor
jle
or
adc
fdivrp
stc
in
dec
jge
and
push
loopne
dec
mov
je
or
pop
cmpsb
sub
pop
mov
and
in
sub
jp
cwtl
addb
mov
push
pop
aam
lcall
inc
cmc
pop
jle
sti
push
mov
lods
lcall
nop
ljmp
pop
inc
xchg
lds
mov
pushf
mov
ljmp
outsb
stos
stos
and
aas
jmp
insl
push
or
ljmp
mov
pop
push
sbb
lods
mov
adc
incl
in
cli
and
xchg
mov
mov
mov
scas
dec
dec
int
decl
lock
mov
hlt
insl
adc
hlt
arpl
sbb
mov
pop
sbb
xchg
repnz
inc
imul
fmull
jmp
xchg
jl
clc
sar
call
dec
scas
rorb
push
xor
ss
in
test
dec
xchg
jns
dec
addr16
decl
lock
iret
and
fs
ja
rcr
mov
inc
xchg
aad
xor
add
sub
mov
mov
sub
inc
jb
xor
adc
or
xorb
push
pop
mov
sbb
imul
lcall
rolb
mov
lock
dec
dec
mov
mov
ljmp
add
fiaddl
fdivr
inc
lcall
aas
fcompl
push
ja
sub
in
cld
in
sbb
dec
scas
test
call
incl
aaa
fwait
pop
xor
push
nop
add
dec
cmp
ds
add
ja
cmp
pushl
aaa
fiadds
xlat
jp
pop
shll
lods
fnstcw
sbb
in
test
sahf
or
mov
jnp
and
repnz
mov
in
dec
repnz
inc
jnp
mov
sbb
mov
cs
jg
mov
je
add
push
outsl
add
stos
cmpsl
negb
adc
pop
jmp
xchg
movsl
pop
and
inc
mov
jl
cmp
in
inc
dec
mov
add
ret
cmp
fisubs
jg
adc
std
ret
push
fwait
stos
ret
dec
pand
or
sti
dec
fsubrl
cmp
jp
inc
fldcw
bound
mov
popa
outsl
jl
push
cs
dec
movsb
pop
push
incl
jmp
mov
sbb
inc
lods
xchg
sub
loop
sbb
and
jae
incl
std
imul
mov
call
jecxz
sarb
faddl
mov
arpl
dec
pop
mov
call
xor
js
adc
sahf
shl
xchg
bound
fcomip
ljmp
adc
imul
jne
sbb
mov
test
dec
lock
push
call
and
inc
js
xchg
mov
mov
fdivrs
or
dec
mov
pushl
rorb
push
jp
scas
mov
mov
insl
repz
add
nop
ljmp
and
push
add
lret
adc
popa
ds
ret
loopne
push
jnp
mov
nop
push
push
inc
les
jb
inc
mov
sbbl
scas
mov
in
mov
pop
add
ja
sub
cli
pushl
out
push
icebp
jmp
fwait
cwtl
inc
inc
shrl
xor
scas
addr16
mov
or
lcall
dec
jbe
fcos
aaa
std
pushl
adc
mov
cmp
or
sub
jl
sarb
xor
aaa
maskmovq
notl
decl
sbb
sarb
leave
pop
test
out
xchg
push
push
orb
adc
push
dec
xchg
and
out
cmpb
push
pop
arpl
cmp
mov
les
mov
mov
inc
pop
and
xlat
scas
roll
cli
jl
inc
xor
incl
std
fnsave
mov
leave
xor
adc
test
bound
shlb
jl
ljmp
sbb
bound
mov
adc
aad
pop
loopne
ficoms
je
push
imul
push
adc
jle
or
inc
aad
dec
inc
sub
daa
lcall
or
jecxz
xchg
xor
jb
mov
je
push
add
pop
std
add
idiv
ljmp
int
gs
js,pn
imul
mov
or
mov
fldt
sub
dec
adc
adc
mov
cmpsl
clc
incl
je
orb
insb
inc
cmp
push
unpcklps
push
ljmp
fwait
push
jmp
mov
or
out
pushf
fbstp
bound
sub
dec
mov
clc
clc
pop
push
pushf
jge
sbb
mov
sbb
inc
test
cld
inc
dec
add
gs
fnstcw
mov
push
mov
push
js
call
call
add
sub
xor
test
fsubp
adc
enter
repnz
roll
mov
pop
mov
hlt
lcall
pop
cltd
xor
loope
add
jg
andl
mov
cmp
pushl
imul
fldl
jge
lahf
or
ds
mov
leave
mov
icebp
insl
xchg
adc
bound
mov
mov
jmp
or
rcrb
inc
lods
insb
mov
aas
cmpsl
mov
jns
pushl
ja
and
bound
mov
inc
arpl
stc
test
call
rcrw
mov
xorl
xchg
push
call
xchg
push
fwait
mov
lcall
lret
dec
addb
xchg
cs
cmpsb
jp
fisubl
fstps
jmp
test
cmc
mov
mov
scas
addr16
mov
sub
inc
mov
pushl
ja
int
ret
dec
and
hlt
imul
inc
lahf
xlat
imul
jnp
daa
cmp
pop
xor
inc
and
adc
test
out
das
cli
decl
call
bound
popf
rolb
cli
lret
mov
push
cmp
fimull
sub
repz
pop
mov
sub
cmp
cld
fwait
adc
js
out
sbb
outsb
push
and
sar
pop
adc
dec
pop
jle
mov
jmp
or
dec
in
stos
push
imul
push
push
lahf
or
sbb
in
inc
dec
lret
std
incl
dec
fwait
out
jmp
mov
sbb
xor
rorb
arpl
decl
test
outsl
inc
mov
fisubrs
jge
push
adc
xchg
xor
fbld
ljmp
out
addr16
jns
rcrl
and
adc
dec
inc
and
jno
dec
cmpsb
inc
int3
push
loope
mov
jo
jmp
pop
mov
xor
mov
push
adc
stos
xchg
into
insl
jno
xlat
ljmp
nop
lahf
cmpsb
addr16
mov
daa
push
addr16
cld
add
jo
ljmp
mov
lret
inc
push
out
inc
lods
bound
cmp
scas
cmp
arpl
sar
mov
mov
or
scas
out
leave
hlt
fcomi
leave
addr16
test
pushl
add
bound
hlt
mov
cmp
push
xchg
loop
push
dec
jne
rorb
inc
or
xor
aad
std
mov
std
mov
lret
add
lret
xorb
or
loope
cwtl
adc
loop
std
das
shlb
xor
xchg
gs
sbb
adc
xchg
mov
ret
xchg
inc
mov
in
inc
jo
sub
sub
mov
sub
scas
jge
xor
imul
sbb
clc
xor
lock
pop
add
xlat
or
in
repz
jb
xor
into
add
rcrl
inc
cmp
sbb
mov
xchg
mov
mov
call
and
and
mov
cmp
imul
bnd
call
jae
push
and
shlb
repz
cmc
dec
cld
xchg
sbb
mov
scas
pop
xchg
sbb
das
lock
xor
cmc
sahf
adc
jns
ljmp
lcall
mov
inc
aad
sub
fs
ljmp
xor
int3
fwait
lcall
incl
jl
cmp
hlt
scas
and
pop
int
in
cmp
push
pop
sub
dec
test
ret
int
pop
enter
mov
cmp
stc
inc
aam
test
or
sbb
jg
inc
or
daa
nop
push
loope
sar
xor
pop
jge
pushf
out
sub
scas
xchg
dec
sub
lret
and
jae
pushl
fdiv
mov
adc
or
jmp
imul
fstpl
sbb
addr16
or
mov
fcoms
stos
or
sub
insl
rclb
clc
mov
test
ret
push
iret
pop
clc
call
xchg
mov
pop
sub
inc
div
sbb
mov
mov
xor
pop
out
jae
aaa
dec
std
and
mov
shlb
bound
idiv
mov
add
insl
mov
jp
xor
popf
dec
add
inc
ljmp
cli
out
leave
clc
xchg
push
into
cmp
mov
or
in
cmp
ss
decl
dec
fwait
and
stos
out
mov
and
aas
das
push
xchg
lcall
mov
repnz
popa
inc
add
xchg
and
mov
mov
jne
repnz
sbb
repz
push
mov
fnstcw
mov
cmp
cli
mov
inc
mov
pop
dec
inc
pop
inc
movb
es
loopne
bound
pop
addr16
pop
push
pop
test
outsb
jmp
aam
xchg
popa
ja
call
xor
adc
shlb
in
jmp
fistpl
xchg
ret
mov
push
mov
push
inc
jo
add
and
mov
mov
push
icebp
lods
cltd
adc
or
sub
call
and
imul
push
xchg
in
sub
shll
nop
in
hlt
aaa
and
inc
sbb
movsl
outsb
mov
sub
xchg
jg
call
imul
fiaddl
adc
pushl
push
xchg
cwtl
stos
inc
adc
or
mov
sbbl
xchg
sub
dec
dec
ds
scas
xchg
sbbl
loop
test
or
insb
test
call
dec
into
pop
xor
movsl
cmp
orl
jg
inc
cld
das
jb
or
pushf
add
mov
push
bound
mov
inc
das
int
xor
loop
data16
fwait
sti
shlb
sbb
decl
push
clc
adc
lret
mov
xor
mov
push
mov
rcrb
data16
mov
push
rolb
flds
sbb
ljmp
shll
and
pop
cmp
in
ljmp
out
loope
inc
scas
jg
mov
jp
pushf
insb
lods
dec
in
cmpsb
decl
jmp
cmp
dec
cmpsb
push
add
faddl
mov
test
shl
jbe
mov
cmc
fnstcw
push
add
pusha
mov
mov
or
mov
movsl
test
ljmp
xchg
cmp
out
push
lret
stc
dec
pop
orb
loopne
popf
push
fs
xchg
into
mov
arpl
cltd
test
xor
loop
mov
inc
sbb
scas
xchg
test
pop
hlt
call
clc
negl
cld
pop
mov
xchg
test
hlt
xor
fcom
addr16
inc
push
mov
mov
sub
ljmp
cmp
or
mov
jno
mov
lock
and
incl
jae
scas
dec
or
and
xor
into
xchg
inc
daa
xchg
cmp
xchg
dec
mov
jmp
cmc
cwtl
mov
pop
rcrb
in
push
movsl
xor
ja
mov
in
add
fmuls
pushl
adc
cmpb
or
jl
jle
les
jecxz
sbb
lcall
push
fadd
mov
and
stos
icebp
mov
test
add
cmp
dec
bound
xor
mov
add
fnsave
and
sbb
xchg
pop
add
inc
adc
fstpt
inc
in
mov
ljmp
or
test
cwtl
mov
adc
out
pop
pop
jnp
push
mov
mov
mov
jbe
pop
xchg
inc
cmpsb
push
cmp
fisubrl
and
movsl
add
xor
add
lcall
ss
push
sahf
xor
sbb
pop
sti
cs
fsubs
jnp
ljmp
andl
lret
lods
int3
mov
decl
mov
mov
or
daa
fs
pusha
adc
out
cmpsb
push
push
pop
or
add
adc
ljmp
aad
mov
nop
mov
jmp
test
test
jg
mov
jp
mov
scas
mov
mov
fcomip
in
mov
pop
mov
xchg
or
lcall
test
xchg
mov
mov
les
sub
or
fwait
insb
lret
and
inc
imul
mov
and
or
rcll
pop
decl
lods
mov
xchg
movsl
cmp
push
mov
scas
and
aaa
fnsave
aam
jmp
mov
loop
xchg
xor
xor
push
cmp
lcall
hlt
daa
and
mov
frstor
push
pop
jne
jne
cmp
out
add
lcall
and
jge
popa
cli
inc
cmpl
jecxz
lods
sbb
dec
jle
leave
lahf
aaa
std
jmp
push
push
xchg
xlat
call
add
adc
test
decl
nop
imul
xor
add
lods
push
lock
jbe
enter
pushl
scas
push
in
out
movsbl
lret
adc
pop
insl
nop
pop
pushl
mov
fiaddl
clc
mov
add
cltd
and
ljmp
xchg
ds
dec
subb
movsb
push
xchg
xor
mov
inc
dec
dec
push
pop
nop
dec
mov
xchg
cmpsb
and
stos
mov
or
cs
lods
jg
mov
in
xchg
mov
sbbb
enter
gs
push
push
mov
mov
sbbb
adc
mov
out
inc
repnz
shl
xchg
scas
pop
sbb
fstps
push
int3
jg
adc
mov
aaa
les
test
sub
jns
loop
pop
sbb
pushl
addr16
loope
sbb
decl
in
imul
and
mov
sbb
cs
cmp
inc
jne
and
test
out
jae
jmp
add
out
push
rcll
jno
adc
xchg
mov
jl
xchg
fdivrs
cmp
loope
imul
jecxz
mov
fcompp
mov
clc
outsb
pop
sbb
lock
cmp
adc
rcll
mov
xchg
jns
adc
cld
ja
stos
inc
sbb
sti
and
mov
xchg
stos
mov
or
xchg
iret
fiaddl
shl
hlt
shlb
mov
enter
mov
adc
adc
lods
jecxz
mov
push
xchg
ljmp
inc
sti
inc
inc
adc
jb
popa
cmp
mov
jg
add
mov
bound
push
divb
push
add
outsl
pusha
xchg
adc
movsl
add
loop
xchg
dec
sbb
fsubs
decl
notl
mov
inc
mov
shlb
add
aas
pop
insl
sub
cmp
in
repnz
inc
or
gs
dec
aas
test
lret
frstpm(287
push
sbb
and
push
push
cmp
fcompl
into
cmp
or
fistpll
xchg
inc
in
icebp
mov
int
pop
add
and
outsl
cmp
xor
test
pop
sub
repz
cmp
inc
mov
dec
inc
ljmp
pop
in
jnp
dec
loopne
mov
push
rcll
hlt
and
xchg
sbb
jmp
loop
push
jmp
popf
mov
shr
xlat
stos
in
fildl
out
dec
dec
imul
jmp
movsb
add
imul
dec
insb
add
xchg
loop
sbb
int3
lea
mov
fdivl
shrl
mov
test
mov
mov
fnstenv
lods
mov
rolb
das
fidivrl
testl
inc
mov
jbe
icebp
push
inc
fistpl
mov
jbe
ljmp
pop
push
lea
jp
jnp
and
adc
jne
mov
cmp
aad
pushf
lcall
jmp
adc
mov
mov
outsb
xchg
clc
mov
mov
fsubl
jg
or
xchg
push
loop
mov
call
inc
leave
push
fmull
push
adc
mov
ljmp
sbb
popa
test
xchg
add
outsl
pop
pop
jo
xchg
jmp
mov
int
push
mov
pusha
xor
jl
pop
add
int
pop
mov
std
cmpsb
pop
lock
cmp
out
adc
jnp
dec
cltd
xor
decl
scas
out
loop
xchg
int3
out
loopne
jne
sub
inc
inc
call
loopne
mov
dec
cmpl
mov
jns
cmc
mov
cmp
inc
int3
cmp
jg
push
adc
jl
rcrb
ljmp
mov
inc
repnz
addr16
jp
ja
push
loope
inc
loop
fucomi
not
adc
inc
mov
push
xchg
subb
ss
jb
xchg
out
loopne
call
mov
mov
or
sub
cmp
clc
lcall
dec
test
scas
jecxz
dec
adc
pushf
daa
loop
lods
idiv
out
mov
sub
mov
cmp
imul
movsb
dec
lret
inc
bound
jmp
ljmp
fcmovnb
imul
inc
and
xlat
jnp
cmp
subl
call
cld
insb
lds
or
add
and
sub
dec
push
ret
decl
sbb
inc
data16
or
sbb
ficoml
jg
xor
xchg
add
clc
jo
push
ficoms
rorl
pop
lret
mov
xchg
test
pushl
push
or
dec
jo
es
addr16
jle
pop
xor
test
int
test
divb
jl
cs
aad
mov
pushl
and
cmpsb
xchg
cmpsl
and
test
movsb
mov
cwtl
mov
icebp
sub
and
sar
pushl
xchg
rcrl
shrl
cmc
push
xorb
leave
mov
inc
push
aad
out
sti
movsl
xchg
sbb
enter
sbb
outsb
in
mov
int3
cmovb
incl
and
pop
scas
clc
fs
mov
test
sti
sbb
call
enter
inc
or
mov
leave
mov
out
insl
push
or
out
call
mov
pop
pop
cmc
orl
and
cwtl
cwtl
pop
sub
add
cltd
cmpsb
inc
lret
xor
mov
hlt
cmp
fisttps
or
or
cmpsl
xchg
xor
out
ret
ret
in
outsb
xorl
sub
mov
incl
jb
nop
outsb
inc
mov
iret
mov
jmp
cmpsb
push
xchg
and
mov
ror
pop
add
scas
and
sbbl
out
shll
pop
pop
data16
mov
incl
jp
into
jns
mov
jae
xor
push
cmc
push
fidivrs
pushl
mov
mov
xchg
int3
mov
addb
pop
or
data16
mov
iret
mov
mov
jns
in
push
shlb
lock
fprem1
jae
inc
pop
popa
jle
xchg
std
inc
sub
aad
fwait
das
jae
jl
push
inc
mov
movsl
inc
rcrb
mov
sub
jmp
jns
ja
pop
daa
cmp
and
mov
iret
xchg
pop
enter
int
mov
mov
cmpsb
push
lods
mov
jecxz
aas
mov
push
mov
add
rolb
jg
hlt
xorb
out
add
xor
push
inc
stos
jecxz
bound
jnp
ljmp
les
push
aad
pop
mov
scas
arpl
punpckldq
xchg
sar
out
imul
mov
aaa
std
outsl
clc
xchg
pop
fwait
lcall
push
dec
into
insl
pop
mov
incl
fsubrl
jno
sbb
sbb
aad
fsubrl
adc
or
xchg
pushl
xor
mov
mov
daa
jmp
popa
push
jg
jg
mov
add
icebp
pop
dec
lock
lcall
sbb
repz
sub
test
xlat
gs
arpl
roll
decl
cmp
mov
outsb
xor
cwtl
or
jns
pop
lcall
pushl
add
jae
pusha
mov
jl
lret
xchg
add
cmp
popf
outsl
ljmp
and
xor
out
sti
inc
outsl
add
jbe
xor
aaa
jbe
andl
push
out
clc
push
data16
shl
add
call
sbb
or
ret
xor
push
decl
icebp
xchg
or
aam
call
call
lahf
pop
sti
imul
arpl
andb
mov
ljmp
jo
adc
cmp
sub
cmpsb
push
jo
loopne
fld1
jle
pop
fs
sti
add
loopne
push
sar
sub
xor
mov
mov
gs
push
mov
decl
je
mov
lods
lret
dec
jno
inc
sub
adc
mov
les
mov
icebp
minps
adc
sahf
lahf
adc
std
rcrb
lahf
mov
inc
adc
std
ret
aaa
mov
pop
insb
std
incb
les
sub
pop
loop
movsbl
lock
and
pushl
xor
nop
jb
repz
faddp
pop
jnp
cwtl
clc
in
jmp
adc
and
xor
loopne
rcll
dec
xchg
hlt
in
sbb
mov
sbb
mov
out
inc
imul
mov
out
outsl
xchg
mov
imul
mov
cld
mov
mov
popa
insb
xor
cmp
adc
iret
push
pop
iret
mov
pushl
cmp
mov
xchg
in
repz
cmp
adc
movsb
test
cs
fildll
out
and
aaa
push
push
adcb
scas
push
ljmp
incl
dec
cli
mov
or
data16
mov
test
lret
xor
call
jl
sub
xor
adc
adc
gs
jg
cmp
inc
adc
adc
scas
pop
push
cwtl
shrb
sub
jecxz
dec
add
int3
scas
ret
mov
pop
or
gs
add
movsl
dec
push
cs
insl
stos
inc
mov
dec
inc
pop
cmovne
addr16
nop
fidivrl
aas
dec
dec
add
mov
push
imul
pop
cmp
push
jmp
pop
push
add
cmp
or
mov
lcall
iret
daa
insb
jp
adc
jb
dec
cltd
icebp
pop
cli
dec
sbb
aad
in
fcmove
jg
in
inc
js
xor
xchg
pop
jl
and
lcall
push
in
ljmp
sub
shll
adc
ljmp
pop
neg
scas
mull
decl
xchg
iret
jp
mov
mov
push
mov
je
scas
je
mov
lret
pushl
jl
sub
pushf
pop
rorb
jbe
add
leave
push
sbb
rcrl
les
jg
call
xlat
dec
pushf
adc
jmp
jmp
jmp
inc
sub
mov
jo
adc
xor
loop
cmp
popa
adc
mov
decl
lods
mov
out
inc
jle
pop
test
js
imul
inc
sti
shll
push
pop
scas
xlat
cmp
mov
mov
loopne
xlat
in
scas
dec
in
mov
pop
sub
or
and
loopne
mov
push
sbb
in
push
jno
pop
and
pop
or
xor
sub
out
push
pop
int
sub
jg
jmp
out
shll
sub
out
sub
push
rorl
sbb
xchg
push
lcall
dec
adc
fwait
ja,pt
pop
lahf
xchg
sarb
lods
jne
pusha
icebp
stos
popa
pop
shll
das
cmp
mov
call
cltd
inc
test
mov
outsl
sub
dec
mov
lods
loope
cmpb
and
nop
call
mov
sub
mov
inc
call
testl
pop
jo
repnz
mov
bound
leave
xchg
xlat
or
pushl
xor
mov
test
sub
arpl
push
scas
or
ljmp
inc
inc
jbe
shrb
nop
jnp
cs
nop
pop
cmp
push
mov
add
inc
lcall
cld
pop
cwtl
jge
out
shr
xchg
xor
lret
outsb
cs
jg
lcall
sbb
jp
xchg
scas
dec
mov
daa
sarl
mov
cmp
jecxz
out
and
jge
int3
out
repnz
and
push
inc
jmp
ficoms
adc
jns
and
add
decl
push
inc
pop
add
clc
add
repz
fstpl
pop
cwtl
dec
mov
mov
ja
sub
adc
imul
lock
mov
cs
rcl
push
xchg
repnz
cmp
test
pushl
in
inc
mov
mov
pop
mov
clc
cli
mov
and
dec
fiadds
push
pop
out
add
sub
mov
imul
and
sbb
enter
outsb
sbb
push
repnz
mov
imul
testl
out
cmc
or
mov
adc
sarl
pushl
mov
jns
popf
and
fbld
inc
dec
jae
jle
inc
push
aas
pusha
std
fistps
mov
call
inc
xchg
shrb
jp
dec
inc
lock
sub
pushl
inc
add
divl
lahf
leave
mov
insl
lods
in
dec
inc
mov
push
and
adc
push
mov
or
loope
loope
ljmp
int
out
lods
jno
icebp
jmp
call
xor
add
push
repz
add
outsb
sbb
jmp
cmc
cmp
cwtl
sbb
mov
mov
or
add
jg
or
jnp
mov
in
pop
std
sub
loop
call
jnp
bound
mov
jne
xor
inc
and
in
mov
xchg
lock
into
lock
pop
xchg
push
sub
mov
out
test
inc
in
or
enter
ror
sti
dec
sarb
ds
daa
fldenv
mov
cli
push
add
outsl
inc
cltd
lods
xor
aam
inc
xchg
or
sbb
fs
ljmp
aad
mov
inc
xchg
dec
pop
cwtl
xor
dec
loop
dec
data16
and
mov
push
std
decl
add
ret
add
mov
fsts
or
push
sub
mov
xchg
and
jg
test
and
imul
cmp
dec
outsb
int
mov
mov
lods
inc
call
jl
push
cld
inc
xor
cmp
xchg
mov
sbb
int
les
xchg
cmc
test
jo
lock
cmp
and
incl
outsb
adc
enter
mov
aas
add
inc
sbb
xchg
cmpsl
mov
sub
testb
push
sbb
pop
cmp
incl
or
dec
xchg
dec
or
jp
add
mov
push
mov
push
fbstp
enter
pop
mov
mov
mov
fildl
mov
adc
out
cli
lcall
insb
inc
push
and
aad
in
int3
push
xchg
cld
bound
out
jns
lcall
fwait
push
dec
das
nop
or
test
cld
jg
jge
push
test
xchg
decl
ret
or
push
or
adc
mov
out
xchg
jo
imul
add
mov
lcall
enter
imul
cmp
das
cmp
xchg
repnz
jle
adc
pop
xchg
xchg
push
mov
ljmp
or
popf
dec
dec
mov
xchg
inc
outsb
sbb
aad
mov
pop
jg
les
dec
adc
scas
mov
idivl
in
pusha
stos
jecxz
lea
mov
sarl
in
sbb
push
out
and
sar
pop
sahf
in
mov
cmp
dec
sub
xchg
jae
clc
sub
mov
rol
js
jg
jnp
jge
xor
mov
loopne
mov
push
iret
inc
jg
pushl
sub
mov
pop
mov
mov
pop
std
pushl
jecxz
call
cwtl
clc
push
aas
sti
push
jg
xor
clc
ja
fwait
jl
sub
and
mov
or
pushf
push
stos
arpl
lret
push
cli
out
pop
lock
decl
xchg
mov
lret
dec
push
mov
lcall
xor
sub
decl
jmp
xor
pop
iret
loopne
mov
xor
js
into
jp
scas
jmp
pop
call
mov
xor
push
mov
push
clc
xchg
fldt
imul
std
push
nop
pop
sbb
roll
or
cltd
sub
out
mov
sahf
and
aam
mov
out
xor
xchg
sub
xchg
inc
sbb
adcb
scas
clc
pop
adc
sbb
push
pop
fwait
ds
sbb
adc
inc
mov
xor
pop
inc
mov
xchg
jecxz
xor
pushl
push
mov
mov
loop
das
push
xor
add
roll
sub
xor
push
dec
loop
dec
or
add
in
mov
mov
call
cwtl
scas
inc
mov
mov
mov
and
jg
push
cs
or
and
push
into
jne
jmp
outsl
push
shlb
repz
int
cld
jbe
pop
repnz
inc
mov
pop
out
adc
jno
jg
add
mov
fcoml
adc
push
adc
test
scas
fisubs
inc
push
xor
adc
push
xor
loopne
push
mov
adc
mov
scas
dec
mov
dec
ror
cmp
jge
pop
ljmp
scas
mov
sbb
sub
mov
mov
or
enter
jg
jg
inc
les
xor
jns
notb
call
dec
nop
jbe
ret
and
adc
ds
insb
daa
push
mov
adc
or
mov
pop
cmp
aam
cmp
mov
cmp
pop
lcall
mov
inc
xchg
or
scas
jmp
test
dec
cwtl
shl
sar
lcall
les
sub
add
cwtl
pop
jo
add
add
mov
or
movsb
ljmp
mov
loop
sti
ficompl
fsubl
push
jo
jecxz
or
inc
rep
aas
pop
cmp
inc
and
cltd
jecxz
loop
pusha
rcrb
xlat
lods
adc
jl
adc
dec
es
lcall
nop
mov
xchg
xchg
or
mov
add
dec
inc
xchg
jne
and
push
lds
inc
call
imul
into
hlt
cmp
push
fisubl
dec
outsl
loop
inc
fs
fbstp
dec
iret
in
and
fiadds
lods
roll
rolb
je
pop
lea
mov
arpl
decl
int
arpl
mov
sbb
jle
gs
xorl
lcall
int
in
fnstenv
rcrb
sbb
jge
mov
imul
or
adc
mov
pushf
iret
lock
or
mov
mov
pop
clc
sbb
xlat
shrl
pop
adc
jmp
xchg
aas
icebp
popa
fisubs
bound
fdivl
xchg
sub
das
pop
lods
cmp
js
mov
pop
xor
xchg
pop
out
sbb
jbe
shrb
ljmp
or
jg
fcompl
nop
sbb
in
sarl
jnp
ja
mov
jns
sub
adc
mov
out
lcall
jp
mov
sar
sbb
add
in
xor
adcb
add
jg
mov
sar
dec
insb
push
mov
inc
leave
push
inc
dec
repz
mov
mov
ljmp
xor
sbb
leave
out
scas
stos
xchg
jb
addr16
int
pop
xchg
bound
hlt
das
sar
lods
mov
and
dec
daa
or
into
sbb
and
pushl
sti
out
das
jg
stos
and
ret
sub
std
mov
sbb
fildll
adc
push
xchg
shrb
mov
add
xchg
ljmp
or
sahf
fs
inc
push
push
push
pop
adc
or
lcall
inc
sub
mov
pop
jmp
xor
mov
mov
mov
jmp
rorb
mov
arpl
fnstcw
xchg
add
and
loope
mov
call
ret
dec
jl
lods
mov
xlat
cli
adc
nop
jb
and
xorl
and
ret
and
gs
loopne
hlt
push
insl
popl
jl
and
jg
lcall
dec
cmpsl
adc
push
xorb
dec
pop
mov
lea
pushl
lods
mov
dec
incb
dec
mov
inc
cmpsl
stc
sub
icebp
mov
frstor
and
loopne
inc
inc
fcomps
decb
dec
lret
aas
movsl
xlat
faddl
jg
ds
push
lea
mov
fistpll
in
imul
add
add
inc
cmpsl
js
aaa
scas
adc
ljmp
ljmp
aam
xor
bound
aam
fsubp
ja
nop
lcall
mov
fwait
popf
mov
lcall
lock
ret
and
xor
out
jp
cs
add
incl
jecxz
add
xchg
mov
lret
mov
idivb
cli
sub
sub
out
lret
cs
inc
cltd
mov
aam
shll
in
ljmp
jne
pop
or
fnstenv
push
inc
in
inc
add
ja
jmp
mov
xor
jne
das
jb
push
fwait
outsl
lods
add
pop
hlt
inc
hlt
push
call
das
cli
ljmp
adc
cmp
sti
cwtl
jb
jae
scas
movsb
cwtl
cmp
jecxz
mov
test
mov
sub
inc
test
out
je
cmpsl
jp
adc
jae
sete
imul
push
lahf
insb
cmc
mov
add
xor
xor
jbe
push
leave
mov
pop
orb
cli
dec
nop
push
dec
addl
mov
xchg
xchg
add
jmp
cwtl
jae
push
out
push
shrb
movsl
sbb
stos
sbb
fcomip
sbb
sbb
data16
pop
dec
fstpt
pop
xor
popa
imul
xchg
cmp
xor
adc
lret
inc
mov
shrb
ljmp
pop
dec
loopne
mov
add
pop
adc
imul
sarb
cltd
fs
ljmp
out
adc
fs
add
insl
dec
or
shrb
inc
xor
jp
outsb
mov
in
out
into
xchg
ds
sub
pop
sbb
pop
dec
repz
in
insl
jg
inc
jle
lahf
lahf
int
push
int
out
loop
imul
push
dec
push
cmp
int
andl
enter
sub
fcmovbe
cmp
daa
and
xchg
mov
loopne
push
mov
pop
or
and
mov
rcr
jmp
push
or
push
pusha
xor
mov
inc
ret
into
pusha
push
add
xor
roll
mov
push
jmp
jne
addr16
pop
fldcw
dec
sbb
dec
push
add
jmp
cld
lcall
popa
test
pop
mov
cmp
add
lods
mov
lods
outsb
sbb
decl
movsb
or
pop
mov
push
mov
call
push
inc
cmp
push
push
aam
mov
jl
dec
scas
aam
fnsave
and
in
inc
dec
ljmp
subb
ja
and
test
imul
cs
jg
mov
outsb
test
xchg
mov
mov
ljmp
dec
jp
cmp
loop
pop
mov
push
lock
lcall
or
test
roll
xchg
leave
cwtl
adc
fs
dec
test
mov
jno
pop
add
or
std
lcall
mov
das
cmp
cmp
jmp
jo
mov
std
pushl
sub
xor
xchg
hlt
mov
jo
xor
das
mov
jns
mov
lret
movsl
gs
lods
nop
rolb
fwait
jno
inc
sub
push
inc
sti
jge
pushf
xchg
pushl
jmp
aaa
sub
xchg
add
out
movsb
fdivl
leave
outsl
add
inc
mov
cmp
daa
add
or
aam
sbb
outsb
push
mov
int
xor
xchg
inc
js
idiv
incl
sbb
fisttps
adc
icebp
jmp
mov
xlat
ret
cmc
je
addb
das
test
outsl
lock
aad
loop
dec
out
dec
fs
movsl
mov
enter
sarl
jmp
outsb
xor
and
mov
clc
out
jno
lcall
sbb
das
arpl
xchg
or
add
xlat
shll
sub
or
lods
adc
movsb
lea
xchg
sbb
inc
add
sub
push
aas
outsb
sbb
incl
or
jmp
arpl
jb
aam
in
jg
sti
andb
or
or
stc
outsl
xchg
xor
clc
pushl
testb
je
push
pop
xchg
iret
dec
enter
xor
jp
aam
ljmp
push
adc
dec
mov
mov
or
add
movsb
jg
packuswb
sub
fmull
in
aaa
cmc
into
insb
arpl
cmpsb
loop
lcall
add
or
push
test
repz
repnz
pop
pop
gs
idiv
lcall
mov
dec
or
adc
arpl
push
lcall
aaa
data16
lahf
out
mov
and
dec
cmc
jnp
pushf
and
lret
decl
cmp
jnp
add
ficompl
lds
add
popf
mov
lock
xor
cmp
loope
jle
cmp
lcall
je
mov
inc
add
add
test
test
xchg
adcl
dec
inc
inc
sbb
mov
jo
mov
adc
push
movsb
jne
dec
add
ljmp
out
addr16
loopne
sub
ljmp
xor
lret
adc
sbb
sbb
push
mov
scas
movsb
mov
push
loope
in
decl
fsubs
or
cli
mov
mov
popf
adc
ljmp
jmp
lock
incl
lret
insb
idivl
pop
mov
std
mov
faddp
jne
aaa
inc
fdivs
jb
int
dec
pop
mov
incl
aam
jl
andl
shlb
push
jmp
fwait
loop
ss
xor
and
pop
add
jmp
addr16
out
or
dec
in
add
mov
mov
ss
in
sbb
imul
dec
aas
test
enter
sbb
icebp
cmp
shl
xor
cld
mov
mov
xchg
in
push
mov
pop
int3
test
jbe
pushl
rorb
sbb
stos
xchg
rol
in
xor
jmp
cld
push
push
movsb
cmp
pushf
je
cwtl
daa
sbb
incl
ljmp
ret
add
movsl
sbb
fdiv
test
and
xor
pop
mov
loopne
jne
dec
andb
and
dec
ds
ljmp
enter
xchg
mov
dec
inc
and
add
jns
clc
sbb
decl
sub
jo
push
or
dec
cmp
sub
add
mov
stos
add
or
lret
mov
xchg
cmc
jg
dec
in
mov
cld
mov
fisttps
movsl
push
in
push
add
aas
inc
push
and
mov
and
sub
call
sub
shlb
pop
rcll
xor
fs
mov
dec
fildll
pop
bound
xor
mov
fmul
popf
repnz
cld
test
mov
rolb
mov
inc
xor
push
in
mov
pop
xor
push
call
mov
les
mov
ret
xchg
cmc
push
lret
adc
or
orb
sbb
aas
pop
xchg
sub
dec
pop
mov
or
cli
cmc
lcall
pusha
push
xor
jno
ljmp
xor
out
jae
rorl
jo
add
xchg
sub
or
mov
mov
test
push
repz
iret
inc
adc
sub
xchg
fimuls
decl
rolw
pop
adc
mov
movzwl
or
dec
cld
jmp
aas
jae
inc
inc
mov
mov
xor
add
fistpll
or
xor
push
pushl
sbb
es
js
xchg
mov
pop
xchg
mov
mov
lods
mov
inc
stc
pop
add
push
push
and
pop
xchg
cli
cmc
pushl
add
dec
icebp
sub
jno
mov
mov
loopne
mov
sar
mov
cmp
cs
outsb
mov
into
std
mov
sbb
outsb
xchg
push
or
xchg
sub
add
mov
loope
pushl
je
aad
cmpsl
cmpsb
adc
xchg
imul
jae
lret
xor
and
lret
xchg
mov
inc
mov
aam
and
jl
les
clc
aaa
inc
stos
sbbb
idiv
push
or
add
jmp
mov
jnp
lock
lock
and
mov
addl
sbb
ficompl
mov
jp
xchg
jae
sbbl
cmp
cs
lods
iret
fcmovb
out
push
cmp
decl
out
sbb
adc
xchg
in
enter
xor
xchg
pop
in
add
inc
mov
lcall
or
fs
pop
inc
popf
imul
mov
add
cmc
arpl
cmp
jmp
xchg
repnz
shl
xchg
lods
adc
cwtl
dec
daa
cmpl
jmp
fwait
cld
jmp
aam
imul
outsl
ds
stos
pusha
and
pop
push
push
cmpsb
xor
cmp
decl
cmp
mov
int
lods
jno
push
nop
xor
push
jb
call
mov
insb
lods
ljmp
inc
xor
movsl
add
push
lods
dec
mov
jg
mov
push
push
call
add
cmp
lret
fwait
xor
push
setnp
mov
pop
int3
fs
jo
add
dec
popa
push
inc
sub
xlat
jg
repz
stos
add
mov
cmp
sbb
and
test
jg
decl
jnp
iret
movsb
in
sets
jp
scas
jmp
incl
cmp
inc
cwtl
fwait
mov
dec
dec
inc
fwait
lods
dec
fsts
out
inc
mov
push
std
call
jno
ljmp
pop
in
push
ja
aaa
and
mov
mov
cmp
pop
mov
into
cmpsb
ljmp
std
xchg
aam
in
jmp
ja
push
rol
mov
ret
dec
das
fwait
loope
jns
or
fucomp
xchg
hlt
dec
add
push
inc
or
jne
jns
adc
fnstenv
pop
push
ret
add
jmp
ja
xor
out
or
pop
notb
rcrb
cmpsl
adc
mov
clc
data16
add
sbb
xor
or
xchg
ljmp
xor
cs
push
sahf
adc
pop
mov
js
inc
mov
jl
test
lcall
popa
push
sub
loopne
pop
mov
sti
dec
ja
mov
push
fisubl
incl
sahf
mov
pop
mov
aad
lcall
stos
pop
pop
stc
adc
fsub
scas
test
pusha
imul
xor
add
dec
rolb
testb
jp
aaa
arpl
adc
test
sub
inc
loopne
cmp
decl
icebp
mov
movsl
or
mov
lods
inc
mov
push
lcall
nop
and
cwtl
inc
add
lods
sbb
divb
out
ja
call
rorl
lret
or
sub
sbb
jle
fdivr
or
pop
mov
xor
cmpb
shrb
pop
mov
cltd
mov
mov
icebp
fdivrl
or
push
pop
bound
or
mov
jg
movsl
cld
inc
lods
nop
test
jne
lret
scas
inc
inc
add
ss
cmp
cmp
into
xor
sahf
dec
rorb
in
mov
ret
imul
call
popa
std
jnp
xchg
or
in
mov
mov
add
xchg
adc
jg
sarl
jb
cmpsl
test
xchg
jp
ds
pop
je
pop
movl
lcall
push
fadd
fs
xor
mov
iret
or
popa
sti
xchg
jb
inc
imul
loop
incl
mov
jbe
faddl
mov
add
mov
mov
xchg
dec
inc
cmp
or
xor
fcoms
js
unpckhps
mov
sub
jp
mov
xor
das
mov
cmp
sti
repnz
mov
loop
test
bound
jns
rclb
data16
es
cmc
in
ljmp
pusha
and
rol
ja
pop
in
pop
xchg
adc
ret
leave
pop
sbbb
pop
js
lcall
into
out
mov
or
sub
cmc
clc
xlat
adc
lahf
cmovs
and
inc
xor
decl
push
cmc
jmp
xchg
scas
push
dec
outsb
pop
mov
stos
mov
rolb
jp
and
pushl
pop
push
jo
sub
test
xor
mov
mov
imul
and
ljmp
pushf
stc
mov
or
mov
mov
jg
fdivrs
xor
xchg
sub
pop
cmp
push
cs
or
mov
dec
mov
cld
jne
fldenv
cmp
xchg
mov
cli
xchg
out
xchg
lock
xor
xor
lock
test
movsb
out
or
mov
or
jmp
fwait
push
mov
in
fs
scas
testl
and
bound
jg
jge
mov
or
mov
push
mov
and
xchg
test
lcall
pop
sbb
mov
icebp
insb
decb
fs
pushw
pop
or
push
push
addl
enter
xlat
pusha
inc
insl
imul
add
iret
shl
sbb
js
sti
add
jmp
fidivrl
cmpsl
cwtl
xor
add
popf
scas
jge
inc
andb
lret
repz
incl
or
repnz
mov
or
out
jg
dec
in
in
add
clc
fsubl
mov
in
and
jmp
fmuls
clc
stos
sbb
pop
jl
inc
pop
mov
out
sbb
call
int
cmpl
jnp
cwtl
repz
ljmp
rcl
call
sub
je
jmp
xchg
push
clc
jg
rcll
jl
imul
frstpm(287
imul
dec
mov
jne
loopne
adc
jo
ja
popa
sub
mov
lcall
data16
pop
ret
dec
loope
insb
or
or
jnp
push
outsl
aad
mov
ror
jg
and
mov
rol
ljmp
xor
mov
inc
cwtl
xchg
jecxz
out
mov
lea
mov
mov
inc
std
call
jge
stos
push
aas
jnp
je
mov
inc
cld
cmp
shlb
std
pop
out
out
out
adc
aaa
dec
mov
scas
test
stos
and
jmp
lret
and
xor
mov
in
rorb
lcall
mov
shlb
incb
movsb
cld
lock
add
xor
lcall
jno
call
adc
pop
pop
icebp
push
dec
jg
insl
inc
xchg
ljmp
sub
dec
loopne
out
pop
push
outsb
sbb
decl
cmp
shl
cld
dec
cmp
fcos
ja
lcall
jns
pushw
aas
leave
jo
jb
push
std
inc
in
fists
sar
ljmp
lds
test
jg
dec
mov
xchg
arpl
inc
int3
inc
or
bound
scas
loop
shll
pushl
xchg
ret
jo
shlb
stc
dec
xchg
xor
inc
push
mov
jmp
clc
test
dec
lods
mov
ret
xchg
cmpsb
aas
addr16
or
call
push
cli
sub
mov
ficoml
jno
mov
iret
add
pop
mov
clc
call
xchg
xchg
int
sub
int
adc
jecxz
pop
data16
jnp
nop
cmp
pushl
or
lods
sarb
ljmp
jle
hlt
mov
scas
cmp
das
stos
jle
push
dec
rcll
mov
insb
and
cmc
lret
cmpsb
xchg
mov
fistps
sbbb
sbb
cmpsb
ljmp
adc
sti
inc
pop
std
insb
aam
pop
inc
sub
rcrl
insb
lcall
insl
fiaddl
xor
xor
jbe
push
gs
cld
sub
xchg
sub
ret
cmp
outsb
sub
xchg
dec
cmp
add
push
add
cld
fdivrl
sbbl
add
mov
inc
loopne
dec
or
xchg
jg
scas
js
lahf
push
sbb
cld
cmpsl
int3
mov
out
sub
not
jg
add
inc
cs
imul
into
andps
ret
lcall
call
fcos
int
pop
xchg
inc
jmp
dec
sbb
and
scas
and
sub
inc
pop
cmp
loopne
fcomip
gs
xor
cwtl
dec
decl
stos
hlt
ret
mov
mov
ja
jmp
mov
and
jmp
iret
movsb
ja
es
mov
in
dec
dec
push
aaa
fldl2t
dec
je
out
dec
popf
outsb
lods
adc
pushl
or
jge
in
sub
nop
lcall
adc
pop
lcall
test
mov
jmp
push
cmp
mov
movsb
pop
and
cmp
xor
pop
std
cmpb
mov
jmp
test
fdivr
in
sub
xor
mov
and
add
dec
test
fwait
or
inc
ds
stc
ja
aad
dec
out
movsb
sbb
mov
mov
pop
aaa
insl
icebp
cmp
sbb
mov
push
xor
and
mov
jbe
cmp
fs
mov
xor
loope
xor
push
sbb
mov
incl
stos
into
xchg
xor
addr16
lods
mov
ja
fucomip
out
and
push
cld
decl
fcomps
mov
lods
push
sbb
sub
daa
jne
cmp
sar
ljmp
cmp
jb
sub
xchg
jo
add
pop
jno
shlb
stos
imul
ljmp
pushl
shl
flds
xchg
loopne
outsb
sbb
divb
jl
push
call
rcr
cmp
mov
fildl
pop
test
es
in
fmuls
cwtl
sbb
push
sahf
stos
call
imul
xchg
mov
jmp
idivl
lods
push
icebp
push
std
xchg
call
mov
or
lods
inc
add
sbb
lock
xor
and
dec
ljmp
aaa
mov
arpl
add
mov
mov
ds
add
iret
xor
pusha
xor
dec
and
into
ds
mov
cmp
std
jmp
xlat
xchg
mov
ljmp
lret
pop
leave
mov
mov
inc
imul
xor
sbb
arpl
mov
fildl
push
xchg
ljmp
out
pusha
push
fwait
or
insb
inc
mov
mov
mov
subb
roll
outsl
and
pop
jle
repz
and
icebp
xchg
xor
or
fisttpl
ljmp
addr16
pushf
inc
sbb
std
out
fdivs
pusha
cmp
add
and
ljmp
adc
leave
and
cmp
daa
add
out
ljmp
xchg
movsl
sbb
inc
outsb
jo
cmp
inc
push
aaa
pushl
lret
mov
ret
rcrl
sbb
inc
cld
stos
out
cmc
or
mov
pop
adc
mov
sbb
mov
pop
icebp
aam
jmp
xchg
clc
es
push
aas
sbb
adc
aam
call
jne
and
lods
loopne
or
mov
bound
cs
pushl
ja
icebp
addr16
jnp
or
mov
or
mov
and
test
call
cmp
jecxz
or
adc
insl
test
add
leave
cmp
push
js
incl
pop
or
cmc
dec
pop
sbb
rsm
sti
adc
mov
mov
add
ret
and
lcall
or
cmc
repz
mov
mov
mov
subl
movsb
pop
aam
sub
xor
hlt
pop
addr16
dec
fucomi
inc
cmp
cmp
push
lea
popf
push
push
rcll
sbbb
lcall
mov
mov
xchg
orb
or
xchg
xor
cltd
xchg
sub
lcall
inc
mov
sbb
inc
xchg
mov
push
xor
cld
mov
push
stc
push
dec
je
mov
jg
inc
scas
pop
fsub
xchg
lods
xlat
lds
jmp
push
or
mov
les
decl
sub
inc
pop
test
ja
sub
or
iret
ljmp
stos
push
and
loope
xchg
roll
jne
enter
sbb
pop
or
je
mov
pushl
rol
fdivl
out
pushf
cmc
push
dec
dec
mov
rcl
pop
shll
aad
cld
and
stos
pusha
insl
decb
push
idivl
push
mov
call
call
fsubrp
xchg
sbb
pusha
sbb
inc
paddw
jae
inc
sbb
pushl
and
jb
and
lock
mov
cmp
jecxz
in
call
xor
leave
push
icebp
mov
outsl
sarb
mov
inc
dec
adc
cmc
or
mov
jecxz
ss
mov
rolb
pop
pop
cmpsl
mov
xlat
pop
decl
add
pop
dec
or
add
jecxz
xchg
in
xchg
popa
mov
lock
lcall
loope
test
jmp
pop
cli
ret
xchg
mov
popa
adc
scas
cld
lcall
rol
movsb
push
dec
add
fadd
sbb
xchg
nop
std
push
inc
dec
inc
sbb
call
aaa
les
scas
jmp
jmp
adc
daa
sbb
mov
aam
cmp
jle
pop
mov
lock
add
cmp
enter
jmp
jbe
push
inc
mov
xchg
jae
xchg
cwtl
add
dec
jno
sahf
out
inc
push
jg
pop
mov
aam
or
ret
add
and
outsb
int
jmp
sub
loop
sub
pop
adc
mov
pop
rorb
adc
mov
lcall
ja
out
in
stos
adc
movsb
jnp,pt
fs
rcrl
sbb
rorl
ljmp
push
rolb
repnz
inc
jmp
outsl
out
pop
xor
mov
scas
inc
mov
or
pop
lock
call
ds
jmp
arpl
mov
push
insb
pop
pop
cld
scas
icebp
in
mov
pop
dec
outsl
jbe
inc
xor
mov
push
sub
sub
mov
dec
nop
xor
dec
jno
cltd
pop
shrb
pop
jmp
int3
jno
add
jmp
repz
outsl
or
or
jl
adc
push
cmp
lcall
cmp
mov
pop
insb
jecxz
aam
test
lret
decl
mov
out
test
lods
jecxz
push
push
add
mov
mov
jp
and
mov
mov
into
or
cmp
cmp
loope
loopne
jbe
adc
and
dec
adc
mov
cmp
std
sti
pop
aad
leave
sbb
ljmp
cmp
inc
daa
jle
push
or
mov
jb
fstl
scas
in
sub
loopne
bound
ficoms
filds
std
xor
frstor
aam
lcall
enter
xchg
mov
daa
lods
shrb
mov
cmc
das
xchg
sbb
add
mov
adc
inc
and
pop
cmp
inc
pop
iret
addl
cltd
push
dec
rorl
pop
mov
add
shll
decl
push
int
roll
in
sub
rolb
push
call
cmpsb
das
cmp
in
sahf
aam
mov
mov
jmp
repz
in
cltd
inc
adcb
movsb
test
bound
in
mov
or
rcrb
add
sbb
adc
xor
movsb
repnz
mov
adc
push
adc
xchg
loope
sbb
dec
outsb
ja
xchg
rclb
mov
outsb
xchg
movsb
incl
mov
stos
or
jbe
sub
mov
push
push
cmp
adc
iret
test
outsl
dec
mov
pop
lock
decl
pusha
pop
adc
xchg
or
out
add
jp
jns
inc
adc
pop
jp
lods
sub
outsb
fdivrl
decl
mov
pop
xchg
insb
sub
sbb
xchg
xor
xchg
xor
push
insl
sub
fisubrs
xchg
jbe
rcll
out
xchg
inc
cltd
adcb
insl
aaa
lgs
mov
cwtl
pop
push
sub
push
stos
jmp
inc
mov
call
sbb
fnstenv
nop
out
lahf
cld
int3
mov
das
lds
in
mov
int
clc
push
pop
out
idiv
lcall
imull
cwtl
lcall
in
push
loope
out
mov
or
sti
cwtl
int
mov
jbe
sub
xor
popf
pusha
outsl
jle
push
nop
pusha
je
cmp
fwait
dec
outsb
decl
iret
into
jns
xor
dec
push
call
fidivrl
fs
push
dec
int3
pop
sti
xchg
mov
xchg
push
fnstcw
insl
imul
jmp
mov
loop
xrelease
js
mov
shr
jmp
mov
lock
cmp
rorl
push
adc
mov
popa
xor
sbb
jp
movsl
pop
out
fisttps
clc
inc
cltd
cmp
pop
jns
xchg
jne
sub
mov
subb
fiadds
lods
mov
fidivl
int3
push
in
loop
or
fildll
xchg
das
mov
jno
mov
mov
dec
pop
in
cmp
jns
repnz
decl
add
ljmp
cld
loope
adcb
push
repnz
cwtl
xchg
sbb
sbb
cmp
arpl
mov
stos
stc
cwtl
push
dec
push
dec
movsb
pop
faddl
inc
adc
sbb
xchg
ljmp
xchg
outsb
idivb
mov
push
je
mov
clc
movl
arpl
loopne
loop
jg
icebp
lods
call
adc
scas
jno
aam
mov
sub
and
inc
xchg
lcall
lods
rcrb
and
pop
out
cld
inc
nop
stos
pop
push
out
push
sti
xchg
mov
test
add
decl
adc
and
fistl
xlat
inc
cmp
cmp
pusha
test
mov
or
cmp
push
mov
ss
nop
sbb
subb
dec
cmp
pusha
cmp
jo
xchg
imull
mov
stos
je
call
sbb
jl
je
cmp
mov
out
test
or
and
out
mov
cmpsb
jl
sub
movsl
out
cmp
xchg
push
js
sbb
ss
mov
push
incl
inc
into
lcall
clc
call
pop
dec
stos
icebp
rclb
das
shlb
mov
adc
fdivr
dec
inc
stos
out
test
pop
xchg
mov
sbb
pushf
xchg
pop
out
fs
ljmp
shl
fwait
out
mov
dec
or
xlat
pop
das
sbb
mov
call
cld
lock
sub
add
into
xchg
lret
outsb
cs
jbe
icebp
ret
dec
arpl
fisttpl
mov
insb
sbb
jbe
pop
cmc
inc
pushl
popa
ja
cmp
aad
and
add
and
and
clc
mov
das
sar
fdivrp
ja
cli
nop
pop
insb
mov
mov
js
lods
movsb
jmp
adc
xor
push
std
outsb
and
adc
adc
dec
in
mov
mulb
mov
or
xchg
mov
jg
outsb
cmp
inc
push
in
mov
nop
std
xor
rclb
repz
sub
jmp
jle
push
ss
jbe
sub
arpl
cmp
popa
mov
mov
sub
jg
aam
mov
and
pop
xor
mov
inc
lahf
cli
stos
xchg
lds
je
psubsw
popf
pushf
push
adc
decl
jecxz
mov
and
jae
mov
and
cmp
sbb
jmp
xchg
in
std
mov
adc
push
stos
sub
pop
add
addps
adc
nop
loopne
mov
pushl
push
pop
enter
xor
inc
xlat
push
xchg
aam
sbb
or
ds
pop
incb
jbe
mov
push
push
pusha
push
add
aaa
bound
sub
jg
call
xlat
xchg
pushl
cld
pushl
sub
lea
lods
sub
fdiv
push
sti
and
push
shlb
icebp
cmp
adc
mov
cltd
push
pop
push
ja
pop
push
in
jg
movb
pop
icebp
cmp
ss
inc
xor
or
pop
sub
cmc
adc
xchg
push
xor
popf
xchg
cmp
cmp
ljmp
test
pusha
inc
dec
gs
push
sti
mov
lock
outsb
xchg
mov
adc
pushl
xchg
and
in
outsb
bound
les
dec
ljmp
testb
fucomi
jo
ss
xor
sub
in
mov
int
or
push
scas
push
mov
pop
mov
mov
lods
jbe
movsl
and
lcall
dec
push
lods
dec
push
push
mov
shl
sbb
shll
jg
ljmp
push
push
xchg
adc
cmpsl
stos
test
jo
fisubrl
lret
in
cs
adc
cwtl
or
ret
ficoml
and
loop
pop
sub
loope
xor
cwtl
repnz
out
daa
xchg
jp
loopne
dec
lahf
inc
aaa
inc
mov
stos
or
mov
inc
lock
fsub
cmp
sar
sbb
ret
ss
jmp
fcoms
in
mov
push
jle
scas
ss
mov
adc
leave
leave
push
inc
and
inc
fsubrs
mov
sbb
mov
je
cmp
clc
and
ficompl
jns
add
add
lea
fs
fsubp
pop
sti
cmp
add
ret
clc
sub
filds
sbb
scas
out
jl
js
adc
adc
mov
push
inc
xchg
and
jg
test
jno
mov
pop
cmp
inc
imul
pop
pop
jae
cmp
fnstsw
sbb
cmc
faddp
lret
sti
cmpsl
mov
call
nop
mov
adc
mov
decl
sub
mov
scas
clc
jmp
dec
ljmp
fdiv
icebp
in
pop
xchg
mov
xor
rorb
adc
mov
or
test
xor
outsl
xchg
adc
ret
xor
int3
hlt
jg
out
mov
js
je
pop
jmp
fimull
stos
or
nop
cmp
and
mov
pusha
inc
jl
mov
decl
jp
sarl
imulb
out
stos
mov
in
pop
pop
add
pop
icebp
repnz
add
lcall
out
jne
pop
adc
cmp
sub
cld
jmp
cltd
pusha
insb
mov
test
mov
adc
jmp
sub
incl
clc
in
sbb
ret
dec
int3
push
sbbb
je
inc
ljmp
lock
dec
insb
jle
clc
pusha
mov
cld
stos
imul
inc
mov
dec
ds
xor
incl
rorb
inc
xorb
lea
jne
outsl
cmpsb
dec
and
mov
stc
icebp
call
aad
inc
ror
jecxz
xor
popf
inc
lds
xor
jge
or
aas
loop
int
jb
mov
jno
pop
iret
and
xchg
mov
ljmp
notw
push
pop
inc
rorl
jb
jmp
mov
mov
and
dec
jb
or
incb
inc
ds
mov
xchg
out
sub
jg
add
pop
add
stos
and
pop
xor
into
iret
push
test
push
shrb
pushl
std
dec
repz
aad
cmp
jb
mov
into
fwait
jo
jp
jmp
leave
out
cmp
imul
pop
add
push
out
shr
and
cli
push
lods
pop
jl
ud0
pushl
popf
movsb
lds
inc
add
jg
push
mov
ss
fwait
notb
call
mov
mov
mov
fistpl
rcrl
jp
stos
out
in
add
add
mov
int3
ret
push
cmp
xchg
shll
jle
in
call
std
divb
repz
jecxz
add
pop
ja
jno
cmp
cmp
call
imul
mov
mov
jg
inc
add
daa
push
ret
xchg
insb
imul
push
jg
icebp
add
push
pop
cmpsl
sbb
inc
dec
shll
sub
je
mov
scas
jp
loope
lret
mov
add
mov
cmp
in
std
push
lods
fcomip
lcall
lret
call
or
xor
stos
or
adc
imul
push
and
and
into
or
adc
je
add
int
lock
sub
das
hlt
pop
test
sub
jmp
mov
mov
popa
stc
leave
push
push
rorb
repnz
dec
pop
aad
push
cmpsb
incl
int
cmp
mov
adc
mov
adc
add
cmpsb
fidivl
cmp
push
ja
jecxz
mov
push
dec
pop
sbb
cli
insb
or
ljmp
push
mov
mov
or
daa
xchg
popa
mov
jmp
push
fadds
jnp
jae
add
mov
pop
lahf
fcmovnu
aam
push
sbb
lcall
mulb
in
test
dec
jno
dec
mov
ljmp
mov
jg
popf
mov
xor
inc
lds
aad
mov
mov
sti
imul
fildll
ret
sbb
cmp
cmpsl
out
scas
cmc
pop
popf
or
jg
cltd
decl
ficoms
neg
jmp
add
pushf
mov
in
fidivrs
jo
or
push
stos
out
insl
push
jecxz
push
cltd
std
mov
sarb
lods
adc
jmp
add
mov
xchg
pop
mov
int
push
int
adc
movsb
jmp
lea
icebp
inc
pop
jge
mov
dec
xchg
mov
xchg
adc
cld
decl
into
sub
and
lret
fidivrl
pop
or
push
scas
inc
test
lcall
fadds
sbb
cmpsl
not
sub
lret
mov
jb
imul
fs
scas
dec
sub
pop
or
or
daa
inc
lret
push
jbe
idivl
std
lcall
mov
pop
mov
lea
push
or
ljmp
jbe
cs
popa
rep
adc
jbe
dec
and
fisubl
popa
inc
pop
mov
jg
cmp
inc
popa
mov
sub
insl
jne
dec
inc
jmp
je
inc
add
dec
jg
lcall
push
call
aaa
sbb
mov
rcrb
sbb
or
es
ljmp
das
inc
add
jl
fldcw
jl
add
jno
xor
stos
jmp
and
jae
jo
aam
mov
jecxz
xor
shrl
fidivrs
into
das
sar
dec
xchg
pop
pop
leave
arpl
ja
cmp
js
pop
mov
mov
pushf
cwtl
pop
mov
fistpll
dec
lcall
push
inc
xor
fisubs
dec
jne
insl
ljmp
xor
adcl
mov
adc
and
mov
decl
les
dec
xchg
out
js
dec
or
sub
or
shrb
lcall
lret
xchg
or
and
movsb
and
vmovd
jge
jl
insb
mov
push
push
gs
lcall
jae
mov
in
or
ds
or
cmp
jmp
cmpsl
inc
aam
in
outsb
cwtl
cwtl
and
addl
adc
push
dec
jecxz
mov
lcall
sbb
or
fildl
dec
pushf
ret
roll
push
ja
and
out
adc
shll
cmp
addr16
cs
push
cmc
lahf
ss
mov
fldt
inc
or
inc
pop
pop
hlt
imul
shrl
sbb
or
outsl
lret
cmp
mov
cmp
scas
jb
adc
ret
aam
out
ljmp
addr16
add
lcall
or
lods
cmp
pop
ret
cwtl
xlat
fnstsw
sti
adc
hlt
push
ss
jmp
pop
push
xchg
repz
inc
mov
hlt
scas
cli
stc
dec
dec
sarl
push
xchg
xchg
stc
and
dec
iret
mov
fucomip
daa
into
sub
jmp
dec
enter
cmc
push
mov
scas
jl
popa
push
stos
mov
loop
cs
incl
xchg
adc
or
push
popa
daa
stc
jno
lahf
lods
rorl
xor
iret
fiaddl
stos
jg
lock
lcall
ret
rcll
test
mov
ljmp
push
lods
data16
out
scas
mov
ret
push
aad
loop
jnp
cmp
jle
and
adc
jno
jns
inc
loop
push
mov
adc
pushl
add
dec
push
loopne
shrb
mov
add
stos
push
out
in
fwait
jo
sub
mov
sar
dec
subl
cld
push
jae
xchg
cmp
in
mov
cmpsb
mov
cld
sbb
imul
mov
xlat
repnz
jecxz
sbb
pop
bound
inc
leave
pop
popa
jb
sub
push
fcomip
iret
cld
or
inc
out
dec
xor
xchg
jl
jae
test
push
adc
mov
xor
ss
enter
jmp
push
enter
dec
mov
jmp
aam
icebp
loopne
fistps
xchg
pushl
sahf
ret
adc
or
mov
sub
xor
int3
dec
pop
dec
jnp
leave
sub
addb
push
push
jmp
shlb
jo
mov
ljmp
sbb
pop
jne
jl
pop
mov
sbb
dec
int3
lock
incl
xchg
jns
cmpsb
data16
mov
inc
xor
mov
mov
fcom
and
fistpll
neg
inc
pop
frstor
jmp
stos
xchg
and
cltd
outsl
dec
lea
and
dec
inc
sar
jno
push
cld
mov
fwait
inc
loop
ljmp
stos
imul
and
insl
cmp
xor
mov
outsb
mov
sub
cmp
and
out
and
stos
cli
pop
sbb
pushl
int3
or
mov
push
inc
outsl
cmp
call
sbb
pop
daa
add
decl
clc
inc
xor
ljmp
push
in
lds
repnz
cmpl
decl
fwait
dec
gs
xchg
outsb
test
push
fimull
pushf
jbe
ss
out
and
jne
loope
push
ret
mov
idiv
pop
gs
xchg
mov
out
add
push
outsl
cwtl
hlt
icebp
sbb
fcomip
cmp
inc
fisubs
lret
inc
jge
das
div
add
call
popl
ret
bound
jae
mov
jg
aaa
adc
pop
stc
xchg
pop
and
fcoml
inc
jg
aaa
cmp
icebp
mov
dec
jp
cmp
out
sbb
gs
sub
xchg
sub
mov
inc
ja
mov
pushl
imul
sbb
xchg
xor
adc
adc
fwait
push
es
lcall
jb
sub
scas
int
push
dec
iret
stos
repz
cmp
cmp
scas
pop
lock
xchg
dec
inc
daa
enter
pop
ljmp
mov
mov
and
daa
pop
jbe
imul
scas
loop
mov
ljmp
out
mov
into
add
js
mov
mov
xor
xchg
sbb
pop
dec
pushl
in
into
ljmp
or
sbb
cmp
test
add
sub
xchg
data16
orb
out
fisttps
cmp
call
sub
mov
test
jns
test
or
mov
or
das
clc
ljmp
call
out
push
scas
imul
aam
in
call
testl
jge
movsb
rolb
das
gs
sti
in
ret
add
sub
fisubrs
mov
mov
outsb
dec
push
aaa
mulb
rcrl
xor
int
xchg
fs
repz
jle
decl
roll
pop
cs
neg
mov
cmp
outsl
leave
popa
sbbb
out
clc
call
leave
iret
xor
lret
pop
mov
cld
xorb
pushf
mov
or
lcall
adc
clc
scas
mov
cltd
and
push
imul
fists
and
ljmp
out
sbb
inc
add
ret
fidivrs
xor
dec
jb
push
pop
stc
inc
dec
mov
decl
repz
incb
mov
jp
and
in
jecxz
cld
fbld
cli
ja
fiadds
xchg
jge
jg
fs
in
scas
add
sub
adcl
pushl
or
xchg
jge
repnz
ja
inc
stc
aas
mov
scas
sbb
rolb
jmp
in
stc
rclb
mull
sub
int
lret
hlt
sahf
cld
xor
fdivrs
xchg
sti
scas
enter
sbb
rcrb
pushl
inc
out
mov
mov
xchg
sub
mov
inc
dec
dec
stos
bound
leave
ds
int
jmp
jns
sbb
push
imulb
jb
mov
pop
repz
enter
lcall
mov
outsl
outsb
jge
aas
xor
aad
inc
js
dec
clc
insb
lock
sar
lcall
outsb
imul
cmp
push
icebp
jmp
push
in
les
jmp
in
sub
cmp
mov
aas
and
adc
dec
pop
cld
call
xchg
fiadds
sbb
and
xchg
jns
push
pop
idivl
add
rorb
lock
jg
and
xor
mov
leave
or
cmpsb
cmpsb
clc
mov
cld
incl
out
mov
mov
aam
cmp
mov
xchg
mov
inc
sbb
pushf
inc
nop
lock
mov
les
mov
dec
sbb
jmp
pop
fildll
and
das
jmp
out
scas
dec
je
cmp
inc
fs
push
cld
loopne
inc
mov
inc
xchg
data16
sbb
sbb
mov
xor
jae
in
jg
call
sbb
pop
ja
cwtl
adc
adc
cli
ljmp
incl
in
aaa
addr16
dec
icebp
xchg
pushf
movsb
jl
sub
jbe
lods
movsb
fwait
xor
adcl
mov
dec
mov
mov
and
pop
mov
aaa
outsb
inc
mov
pushl
pusha
jb
inc
xor
scas
ret
lods
mov
out
je
dec
enter
ds
pop
xor
dec
fcomip
push
dec
iret
jge
notb
xlat
lcall
ljmp
push
sbb
and
jg
jmp
sbb
sti
ljmp
add
xchg
loopne
xchg
pop
leave
mov
mov
jp
out
js
out
push
mov
mov
shl
cmpsl
pop
sub
loope
bound
pop
loope
loop
dec
loope
jg
pop
addr16
jecxz
jecxz
and
sbbb
or
popa
adc
test
push
loopne
insb
sarb
into
sub
sub
sub
mov
jg
fistpll
rcll
shr
js
insl
dec
lahf
iret
mov
subl
adc
push
jle
loopne
sub
xchg
cmpsb
iret
in
sub
clc
ljmp
test
gs
xchg
or
pushf
mov
mov
cwtl
dec
push
sbb
lcall
dec
pop
mov
adc
lock
cmc
xor
dec
popa
fprem1
rcrb
mov
cmp
divl
push
jg
pop
jl
lds
push
nop
out
jl
ror
jg
sub
add
add
or
sub
sub
data16
push
or
clc
lahf
dec
or
loope
outsb
outsl
jb
insl
push
jae
sbb
fisttps
rolb
cmp
xchg
ljmp
in
jp
push
leave
pop
push
add
arpl
ljmp
pop
jo
adc
mov
push
rclb
stc
jp
xchg
into
mov
push
mov
shll
mov
enter
pop
mov
roll
jecxz
outsl
shr
jle
pop
jns
jmp
sub
lcall
jecxz
mov
repnz
push
push
test
jecxz
sub
and
lods
mov
sbb
int
lock
movsb
decl
scas
sbb
pop
mov
inc
aam
pop
inc
mov
sbb
dec
lahf
add
dec
and
cltd
cmp
ret
adc
sub
clc
ljmp
and
jo
mov
xor
xchg
popa
mov
loopne
cmp
add
sti
out
loopne
int
test
jge
mov
mov
inc
jb
stos
mov
dec
gs
or
dec
add
aaa
pop
mov
jp
sbb
int3
xor
jl
clc
sbb
pop
mov
add
push
xor
sar
or
mov
push
int
mov
jp
mov
mov
ret
jg
dec
call
das
push
sub
iret
icebp
test
xchg
in
push
adc
sbb
sar
clc
movsl
insb
and
je,pn
sarb
and
imulb
arpl
repz
ljmp
std
aaa
sti
gs
xchg
adc
test
addr16
call
xchg
pop
mov
pop
das
cli
jmp
xchg
in
scas
insb
out
adc
xor
mov
pop
push
or
push
test
call
xchg
pop
push
pop
mov
les
pop
sbb
dec
inc
clc
sbb
stos
and
xchg
mov
jg
lret
mov
call
mov
push
mov
std
jmp
movsb
adc
pop
filds
repz
cmp
insl
cmp
test
inc
xchg
arpl
decl
sti
jle
rolb
psraw
mov
dec
push
mov
jbe
push
call
pushf
or
nop
sbb
int
std
cmp
out
pusha
sahf
pop
mov
sti
pushl
in
sbb
shrl
shl
mov
cmpl
xchg
es
sub
call
inc
mov
dec
inc
inc
sub
lret
pop
jae
nop
jecxz
mov
ss
mov
call
xchg
fwait
popa
cmpsl
mov
dec
leave
test
mov
mov
push
mov
dec
xor
sub
lahf
stos
test
ja
mov
mov
xor
sub
fidivs
inc
sbb
or
push
test
inc
push
bound
ja
imul
in
pop
popa
fmul
jne
and
inc
jae
sbb
incl
fwait
jb
jnp
gs
xchg
idivl
and
xchg
dec
incl
adc
fmuls
pop
dec
jo
ds
fcomps
lock
mov
lahf
mov
int3
dec
push
fidivs
dec
aad
fisubrl
adcb
loope
or
leave
lods
xchg
mov
and
fbstp
pop
mov
sti
das
inc
sub
push
rcr
cmp
loop
mov
push
andl
std
stos
adc
sbb
cmp
lahf
add
mov
dec
cmc
mov
int3
bound
sbb
adc
int3
test
cmp
das
jp
movsb
xor
xor
or
cmp
ljmp
mov
add
mov
xchg
push
push
sbb
loopne
lods
jmp
add
mov
movsb
push
into
shlb
pop
int3
and
lret
sar
xor
ficoms
xchg
jbe
pop
or
popf
add
xchg
enter
in
and
sub
sbb
mov
xchg
dec
adc
out
cmp
dec
and
sub
int3
int3
or
or
push
mul
dec
mov
scas
adc
outsb
jecxz
outsl
push
mov
jmp
arpl
jns
cmpsl
sub
les
jne
loope
xlat
cwtl
stc
mov
ja
pop
jmp
mov
dec
in
out
pop
inc
fstpt
into
cltd
sbb
mov
mov
rorl
shl
test
clc
lcall
addl
or
xor
incl
test
xchg
gs
add
ss
sub
cld
pop
or
pop
loopne
cli
pop
pop
cmc
and
pop
movsl
sbb
mov
fildll
mov
incl
inc
xor
cmc
fisubl
ds
repnz
out
inc
xchg
jge
sbb
inc
xchg
xlat
xchg
add
push
orb
push
data16
dec
pop
or
pop
inc
lret
xorb
ret
push
lcall
int3
je
lock
xchg
je
fwait
inc
add
cld
mov
subb
jmp
pop
out
cmp
adc
xchg
adc
addl
mov
mov
pusha
fdivr
leave
mov
decl
mov
rcrl
fs
push
xchg
dec
jg,pt
rclb
jb
mov
psubq
jns
outsb
cli
jmp
pop
fisttps
leave
cmp
mov
sub
jb
pop
mov
inc
pop
mov
xor
scas
cmp
xchg
sub
add
aad
dec
mov
jns
cmc
mov
ds
push
lcall
fistpll
dec
pop
popa
xchg
xlat
mov
cmp
xor
js
mov
cld
mov
cwtl
sbb
outsl
pop
pop
scas
mov
mov
pop
lret
clc
pop
outsl
add
jg
add
fcoms
mov
xchg
add
inc
cld
dec
and
xchg
mov
dec
jmp
mov
stos
daa
cmp
mov
decl
fisubrs
jle
cmp
inc
das
cmpb
std
cmp
js
insb
aam
fnsave
adc
push
adcb
dec
stos
dec
sbb
and
push
xor
add
mov
aas
push
into
dec
cmp
xchg
jle
jmp
outsb
lret
js
push
sti
xor
cwtl
pop
aam
test
jo
sbb
xor
jno
call
pop
dec
dec
out
mov
fisubrl
sti
push
aas
and
mov
arpl
xlat
mov
into
repnz
cli
sbb
mov
ss
sub
shll
mov
add
cmc
mov
mov
pop
enter
xchg
push
div
movsl
test
and
hlt
addr16
jg
sub
pop
imul
lcall
in
call
add
dec
divl
add
push
fldl2t
aaa
and
xchg
xchg
sbb
std
inc
dec
mov
dec
adc
imul
out
mov
aaa
push
dec
fwait
and
pushl
in
push
xor
pop
popa
jp
scas
mov
fwait
jg
cs
fldt
sti
decl
mov
add
mov
fidivl
jmp
and
popf
xchg
or
push
or
lcall
mov
in
push
cmp
lock
pop
or
xor
xchg
sarb
add
cmp
sub
in
jbe
in
cmc
idiv
decl
ljmp
jmp
jl
repz
shlb
mov
incl
push
imul
mov
imul
roll
out
or
jb
jg
outsb
add
and
sub
and
xor
push
pushl
adc
fisubrl
mov
mov
xor
mov
push
pop
push
pop
mov
push
loop
and
jmp
lods
sbb
push
addr16
xchg
dec
push
daa
jns
cmpsb
int3
inc
addl
je
cmc
rclb
scas
sbb
fisttps
xor
adc
bound
inc
push
out
lods
dec
mov
cli
stos
ljmp
cli
cmp
add
js
jle
pop
or
add
jbe
ds
nop
andl
jmp
xor
ds
jno
inc
mov
fldt
sbb
insb
fcompl
xor
ja
sub
or
inc
jns
movsl
mov
insb
jne
repnz
stc
sub
add
fldt
shll
cs
inc
adc
es
lcall
ja
xor
popa
aaa
ret
test
xchg
inc
out
pop
or
call
sub
or
dec
cwtl
mov
test
jne
jecxz
add
ljmp
dec
mov
jbe
inc
and
and
sbbl
lods
jnp
push
jb
adc
incl
sbb
mov
repnz
dec
les
bound
pop
pop
or
lcall
sub
rcl
ja
xchg
mov
imul
arpl
adc
xor
cli
lcall
mov
mov
rorb
ret
jmp
or
aad
lret
ljmp
jbe
rcl
dec
jl
movsl
sbb
add
xchg
adc
aaa
out
xchg
push
sub
push
int
inc
in
aam
jne
push
jecxz
jae
incl
fs
out
lcall
aad
cltd
jns
pushf
push
push
and
stos
mov
cmp
call
std
jne
loopne
dec
enter
mov
mov
insl
clc
push
or
cmp
push
jb
cmp
pushf
or
mov
xchg
or
lea
inc
sbb
daa
sti
loopne
iret
push
or
adc
inc
push
gs
push
daa
cmp
fistpll
repnz
aam
shlb
lock
cmp
fistl
fwait
and
lea
pushl
pop
cli
dec
dec
mov
fdivrs
sub
fidivrs
jge
stos
data16
jo
ss
data16
scas
adc
in
lds
icebp
push
mov
xlat
jo
pop
adc
sub
ljmp
adc
pop
cltd
rorb
dec
ja
fmulp
scas
outsb
fmul
fimuls
adc
push
shr
add
pushl
sub
jae
cmp
pop
cmp
xor
mov
jo
or
xchg
jmp
inc
push
ljmp
dec
shlb
xor
inc
popa
pop
mov
xchg
xor
popf
adc
jmp
dec
loop
adc
sti
inc
jo
jne
pop
pop
jo
popa
sub
pop
inc
lcall
popf
sbb
or
push
scas
or
fs
std
mov
adc
ud2
jb
push
jo
jne
jge
adc
lcall
imul
in
sbb
jbe
mov
out
in
jmp
int3
xlat
enter
pop
cmp
and
cwtl
cmp
loope
mov
or
ds
nop
mov
outsb
outsb
cmp
mov
mov
pushl
fcomi
lcall
ds
mov
lahf
push
mov
push
xchg
push
ljmp
push
xor
clc
inc
dec
adc
inc
mov
adc
out
inc
jmp
lcall
jb
bound
shll
dec
jmp
pushf
enter
sarb
jno
ljmp
lods
jbe
lods
adc
inc
shll
insl
shr
xchg
and
jnp
aaa
outsb
subl
push
out
inc
mov
xchg
call
repz
fldcw
xlat
add
clc
fidivl
sar
je
lret
repnz
repnz
ret
cs
ljmp
adc
jb
cmp
out
push
inc
jns
xor
idiv
shll
xor
xor
scas
out
aad
clc
ljmp
popa
shrl
addr16
into
imul
out
pop
xchg
cwtl
imul
or
and
das
sbb
sar
or
add
cwtl
push
xchg
shrb
dec
inc
sbbl
sub
incl
mov
loope
nop
inc
jecxz
cld
cmc
inc
aaa
sub
clc
das
xor
mov
cmp
jmp
mov
pop
jg
test
push
xchg
jmp
sbb
repnz
xchg
or
fdivr
ljmp
dec
js
mov
loop
mov
inc
adc
lods
xlat
out
movb
or
je
inc
addr16
add
inc
call
fiaddl
jne
test
add
sbb
inc
adc
mov
adc
jmp
adc
mov
jmp
add
push
mov
pop
jae
lcall
rorl
jo
orb
out
mov
mov
cmpsl
daa
insb
in
and
or
push
pop
incl
and
inc
xor
mov
and
and
loope
push
fisttps
cmc
mov
xorb
imul
les
mov
enter
lods
cmpsl
js
mov
jae
addr16
cld
mov
sbb
pop
lods
sbb
push
fwait
xchg
jecxz
mov
daa
sbb
push
adc
fsubrp
das
and
adc
hlt
cmp
pop
add
orb
ljmp
cmp
fidivl
sbb
dec
mov
cld
and
dec
test
sub
mov
and
inc
push
test
ljmp
mov
sbb
cmpsl
inc
ret
push
stos
cmp
lea
lods
lock
cmp
out
pushl
push
fisttpl
into
or
cmp
cmc
xor
pop
mov
js
push
push
mov
xchg
test
mov
xchg
mov
add
dec
mov
jg
sbb
fisubrs
mov
xchg
mov
cmp
mov
add
mov
cmp
pop
push
inc
aam
and
clc
push
fcoms
orb
js
test
shl
pop
push
mov
lods
sub
ljmp
shlb
mov
push
pop
add
jmp
jae
or
loopne
mov
pextrw
js
pop
arpl
subb
lock
in
inc
dec
xlat
dec
add
jmp
std
cmp
jmp
test
add
in
es
pusha
movsl
jne
fdivr
fsubl
mov
fucomi
xor
add
xchg
push
pop
xor
push
adc
dec
push
add
jg
jmp
leave
popa
adc
cmp
cmp
push
std
jge
dec
cwtl
int
push
fstl
call
push
je
sti
pushf
inc
lods
pusha
jb
add
leave
in
pop
out
repz
inc
jge
or
popf
int
lods
jg
dec
imul
add
and
push
jmp
nop
fisubrl
mov
das
sub
xchg
aad
inc
mov
ss
decl
repz
aad
lods
test
xor
jnp
ss
iret
sub
repnz
and
jmp
mov
and
push
std
cmp
dec
sbb
imull
adc
xlat
stos
jecxz
adcl
jnp
dec
xchg
push
adc
fdivl
push
int
sarb
sbb
js
adc
jge
mov
outsl
sbb
std
jne
pop
add
add
nop
push
into
je
jno
and
inc
rcrl
sub
xchg
xchg
adc
inc
dec
rcr
outsl
mov
pop
cmc
mov
xchg
scas
lcall
in
aas
fsts
mov
push
or
movl
ljmp
in
call
sub
pop
lods
loopne
push
push
push
push
mov
jg
inc
mov
mov
or
loop
pushl
pop
in
mov
cs
adc
cli
add
ret
xchg
cld
xchg
mov
push
lcall
jmp
jne
jb
jne
xor
mov
imul
mov
mov
adc
jbe
shlb
scas
incl
fisubrl
and
gs
sub
imul
and
push
les
into
shl
clc
ja
push
lahf
mov
add
fsubrs
lret
les
call
mov
sbb
cmp
jl
push
cltd
mov
out
call
out
cmp
fidivs
xor
insl
jmp
push
incl
cld
add
sub
clc
jp
rcll
mov
in
data16
xchg
call
sbb
pop
fisttps
rorb
and
jae,pn
dec
jecxz
fisttps
mov
pop
rcrb
xor
pop
mov
mov
dec
jns
js
inc
rcrb
fwait
mov
fldl
sbb
push
mov
sbb
fdivr
mov
ljmp
sar
jmp
out
mov
pop
das
data16
decl
xor
mov
dec
cld
dec
xor
leave
aam
fldcw
xchg
cmp
out
sbb
call
jne
xor
cld
pop
out
fwait
call
xchg
xor
stos
ljmp
mov
out
cmp
std
scas
repnz
mov
loop
shlb
fnstcw
pop
adc
xlat
cwtl
adc
call
mov
jne
int3
jp
cmpsl
arpl
mov
add
jecxz
imul
enter
fstps
jmp
mov
jae
ud1
fsubs
jns
movsb
aas
imul
xchg
cs
ljmp
sbb
or
xor
fistps
lcall
cmp
dec
xchg
add
lock
jmp
cmp
in
fildll
and
jo
dec
pop
fdivrp
sub
add
mov
icebp
cmpsl
mov
cli
stos
and
mov
xor
data16
and
out
fs
inc
lahf
mov
or
xchg
mov
mov
xchg
fwait
js
lea
mov
pop
jge
dec
stc
jle
shrb
notl
mov
daa
sbb
mov
hlt
ljmp
adc
pushl
stc
sub
out
out
mov
shrb
jmp
notb
imul
mov
int
jmp
dec
bound
dec
imul
push
cmp
leave
mov
orb
cmc
addl
jb
aaa
stos
lcall
and
fwait
add
adcb
mov
jp
loop
cli
push
into
in
pop
mov
enter
inc
or
jmp
or
adc
enter
add
xchg
push
rclb
incl
cmp
mov
cmpsl
js
ljmp
push
xlat
ficomps
fstpl
scas
dec
xor
jg
jmp
add
sbb
or
adc
sub
add
ret
dec
xchg
adc
inc
mov
cld
mov
call
repz
inc
sar
fists
decl
xor
xchg
sti
push
push
add
jne
pop
enter
jg
sub
pop
fbstp
icebp
mov
pushf
lock
scas
ja
dec
dec
jg
cmpsl
adc
stos
mov
mov
adc
sub
nop
pop
sbb
lret
lea
push
pushf
push
pop
pop
lcall
das
push
xor
shlb
jbe
outsl
mov
int
cmp
das
inc
ds
gs
mov
mov
fcoml
test
push
sbb
ljmp
adc
mov
fstpl
jne
lock
sbb
lea
lcall
outsl
stos
ss
call
daa
cmp
addr16
cld
in
pop
adc
mul
pop
push
add
in
jne
inc
test
fwait
outsl
mov
scas
jno
xor
dec
pop
xor
lcall
push
dec
inc
stos
out
ss
sub
sub
mov
adc
xchg
pop
mov
jg
ljmp
cmp
stos
lea
sub
inc
fwait
cmp
jp
cmp
mov
popa
fmull
adc
decl
sti
mull
cmc
mov
xchg
stos
mov
fstpl
js
movsl
cmp
jl
out
fbld
xor
sub
pushl
jg
ljmp
pop
mov
pop
jmp
dec
iret
push
sub
aaa
mov
dec
stos
inc
sti
xchg
xor
push
jmp
data16
mov
inc
and
inc
ds
mov
popa
push
pop
clc
lods
fidivl
xor
jbe
lret
aaa
sub
and
xchg
loopne
sahf
aad
popa
bndldx
push
adc
dec
lcall
mov
mov
jns
mov
mov
scas
je
pushl
lea
cmpsb
or
mov
add
push
je
inc
add
sbb
icebp
call
les
jno
jnp
scas
mov
cld
dec
adc
mov
je
das
add
and
addr16
int3
dec
sahf
rclb
cmp
dec
negb
xchg
adc
xor
inc
pop
in
mov
in
xor
mov
push
stos
inc
cld
popf
loope
lcall
jb
mov
leave
jo
sub
jo
popa
lea
das
lods
mov
pop
popf
or
pushl
and
push
push
adc
and
mov
repz
pushl
fsubs
cmp
add
and
popf
mov
mov
mov
dec
add
pop
icebp
call
hlt
stos
pop
movsl
mov
inc
out
xchg
call
and
incl
pop
imul
aam
or
shrb
adc
repz
mov
cli
xchg
lret
jecxz
pushl
cmpsl
mov
mov
and
adc
xor
cmc
mov
pop
jns
pop
sahf
ljmp
pop
adc
movsl
aad
iret
out
sbb
xor
push
mov
idivl
adc
or
into
or
or
mov
fistps
hlt
gs
aas
push
dec
or
xchg
fcmovnbe
dec
daa
popa
cmp
or
jmp
mov
fistpll
shlb
mov
dec
adc
pop
mov
sbb
ret
in
jmp
adc
lcall
push
push
fdiv
fbld
sti
mov
andl
inc
rcl
out
jmp
jl
pusha
rcr
jmp
enter
insw
imul
adc
sahf
roll
lcall
int3
add
or
and
push
movl
or
fucomi
jno
xor
scas
sbb
or
outsb
ret
adc
cmp
push
xchg
lods
leave
stos
out
push
inc
in
arpl
dec
sub
popf
daa
and
mov
jg
xor
add
rcll
dec
adc
fimuls
jle
decl
inc
push
mov
fldt
sbb
sbb
pushf
fcoml
jnp
lcall
mov
ret
aad
aaa
jge
cmp
jnp
adc
lcall
xor
je
dec
dec
loopne
cmc
mov
ljmp
cli
xor
cmp
sub
cmp
loopne
adc
insb
loopne
xor
sbb
mov
push
and
cltd
adc
cmp
jno
jl
fs
xor
flds
jmp
and
xchg
dec
add
jnp
inc
stc
cmp
sub
cmpsb
jp
add
add
push
jo
inc
enter
cwtl
adc
jg
call
fwait
or
or
and
dec
mov
stc
test
sbb
lcall
out
and
xor
sbb
inc
fs
inc
shrb
or
jg
and
sub
inc
in
lahf
nop
in
aaa
jnp
adc
call
ud0
jmp
xor
dec
mov
pushf
adc
lret
jl
sbb
xor
mov
jmp
or
cmpsl
dec
jl
lcall
jo
movsb
mov
incl
pop
sub
dec
pop
dec
pop
loopne
sahf
dec
pop
xchg
lods
fldl
or
movsl
mov
jge
std
ljmp
jno
mov
nop
xchg
jo
enter
mov
push
call
push
push
mov
or
mov
outsb
in
daa
xchg
xchg
jl
lahf
mov
pushl
xor
jns
popa
int3
xchg
cmp
xchg
jno
or
pushf
jg
mov
clc
push
loop
jmp
adc
aas
push
fiaddl
sub
test
rolb
jb
sbb
jp
push
jns
xchg
pop
inc
and
cmpsl
pop
les
inc
test
jmp
cs
fstps
in
jge
lret
int3
pop
xor
shrb
aad
test
mov
mov
test
fildll
dec
mov
fld
dec
push
jl
pop
mov
ljmp
add
les
xor
jno
ret
xchg
dec
lcall
jmp
insb
xchg
cmp
insl
loopne
loope
std
jg
dec
ljmp
gs
xchg
mov
repnz
dec
scas
inc
test
decl
pcmpeqb
jg
out
aam
pushf
mov
stc
jo,pt
adc
xchg
scas
test
and
popa
mov
rclb
dec
popf
mov
mov
mov
jg
insb
pop
cmp
aam
sbb
fistps
push
push
in
xchg
aam
mov
incl
jle
ljmp
cmp
out
pop
lock
mov
dec
std
pushf
call
xor
or
jle
aam
outsb
xor
test
hlt
jg
inc
mov
addb
fcompl
into
test
movsl
xchg
pusha
je
decl
cmp
mov
pop
imul
mov
fsub
in
xor
dec
fcompl
jmp
adc
popf
mov
sarb
stos
lock
sub
xchg
jb
pop
scas
cmpsl
leave
mov
mov
dec
cmpsb
decl
loop
lock
mov
dec
cmpsl
add
mov
add
dec
xchg
push
jno
stc
rol
incl
aaa
jae
xchg
xchg
xor
and
fdivr
add
call
leave
cmp
inc
ret
sub
cmp
aas
dec
sub
aam
sbb
into
or
jnp
pop
nop
or
pushf
push
rcrb
mov
lcall
mov
test
in
cs
jl
fdivp
lock
insl
in
mov
pop
add
les
push
mov
fidivrl
ljmp
push
xlat
fdivrs
js
cld
mov
incl
push
adc
add
jg
inc
test
jecxz
leave
bound
push
add
call
loopne
push
sbb
loope
xchg
scas
lds
xchg
ljmp
mov
pop
mov
repnz
sbb
pop
add
or
mov
ljmp
cmpsb
jb
sub
out
loop
push
pop
aad
cmp
mov
inc
ljmp
fsubs
ss
add
push
ret
out
add
mov
xchg
lds
dec
pusha
sbb
jae
or
call
cmp
cmp
idivl
mov
in
leave
adc
sahf
call
ss
lret
pop
std
sbb
mov
outsl
xor
sbb
jb
call
mov
roll
push
or
jno
xchg
shlb
xor
stos
sub
pop
lock
mov
push
sub
cmpsb
jecxz
inc
mov
mov
xchg
mov
call
std
mov
arpl
push
push
inc
dec
mov
aam
out
int
dec
repnz
or
inc
inc
mov
fisttps
add
dec
mov
es
ds
jnp
orb
pop
aaa
stc
mov
icebp
sub
fcmovne
out
xorb
dec
mov
inc
cmp
push
outsl
inc
iret
and
fs
inc
add
push
jg
push
mov
je
push
push
rcrl
fucomi
mov
adc
cmp
add
cmp
fiaddl
push
xchg
add
cld
ljmp
ret
dec
fwait
mov
mov
jp
out
hlt
dec
jg
sub
add
mov
incl
ret
rclb
push
and
xlat
mov
cltd
fiadds
lret
mov
mov
outsb
ss
popa
cmp
aas
in
push
repnz
adc
mov
sbb
data16
das
in
aas
fdivrs
sub
pop
mov
and
ret
popf
out
lret
jbe
xchg
in
aam
test
jmp
stos
in
xchg
pop
mov
mov
sbb
sahf
mov
jmp
push
movsb
aaa
ljmp
xor
jp
aam
dec
inc
and
negb
push
cltd
push
xor
mov
incl
rol
ja
insl
sbb
into
sbb
xchg
fidivl
lds
or
outsb
jecxz
movsl
sub
pushl
push
sub
mov
jbe
sahf
test
aam
sbb
or
mulb
pushl
sub
out
sti
arpl
or
lahf
pop
jecxz
cmp
out
jmp
adc
in
test
adc
movsl
dec
or
ror
fistps
test
or
mov
std
call
call
ficomps
hlt
sub
xor
sbb
mov
pushl
icebp
jmp
pop
jnp
arpl
hlt
aaa
scas
mov
cmp
mov
xor
inc
mov
and
cli
mov
test
mov
xchg
mov
insb
and
mov
int
jmp
xor
loope
arpl
sub
cmp
pushf
jb
decl
bound
lock
int3
jo
movsb
scas
sbb
jns
push
add
gs
std
loope
fidivrs
ljmp
adc
jl
dec
std
cmpsl
and
and
add
lods
inc
xchg
aam
fdiv
mov
pop
xor
jo
mov
or
loop
lea
cmc
cltd
loope
ljmp
ss
in
out
and
lret
call
sub
dec
cltd
jg
cmc
or
pop
jmp
inc
mov
sbb
inc
aam
adc
je
cmp
mov
outsl
xor
ja
mov
iret
cmpl
pop
xorb
cmp
or
pop
mov
test
cmp
jp
dec
jle
jo
sub
enter
jae
add
add
push
xchg
mov
lock
fcomip
mov
sub
outsl
adc
cmp
icebp
cmp
popf
loop
xor
dec
xor
mov
dec
es
and
push
fcomip
pushf
loop
add
in
outsb
jnp
cs
fsub
icebp
or
mov
cli
lcall
sub
mov
pop
mov
jge
jo
je
movsw
lods
mov
dec
push
cli
lcall
push
adc
shll
movsl
jge
pop
push
jl
adc
fnstenv
xor
outsl
push
outsb
xor
fcmove
ds
out
inc
jge
cmp
mov
cmp
lods
mov
shr
scas
or
fstl
or
mov
or
inc
inc
add
cmp
jl
xchg
clc
aad
mov
call
mov
push
cs
fsub
sbb
or
pop
mov
push
out
and
dec
or
mov
cmc
stc
insb
pop
push
xchg
jnp
inc
dec
icebp
push
dec
lods
add
xchg
push
jp
mov
dec
pushl
clc
jnp
arpl
cmp
dec
push
jp
adc
inc
inc
push
stos
add
pop
mov
sbb
pop
movsb
jne
ljmp
in
rclb
js
and
xlat
push
jg
push
or
adc
stos
sar
mov
fwait
cmp
dec
adc
rorb
incl
cmp
adcl
cltd
xchg
stos
hlt
movb
cmp
aad
jb
sub
in
out
insb
or
sub
lcall
sti
mov
out
call
or
in
jno
mov
outsb
cmp
repz
pop
pop
dec
mov
xor
adc
jg
fstps
stos
mov
out
pop
xchg
in
mov
lds
call
filds
push
imul
insb
push
fcomip
mov
pop
movsb
js
xor
lock
sbb
mov
lcall
xchg
shlb
jmp
and
fdivl
cmp
iret
dec
or
stc
push
cli
lods
and
lahf
dec
sub
push
mov
lcall
lcall
mov
push
add
add
rcll
xchg
stos
push
ljmp
push
in
enter
decw
mov
out
adc
or
stc
das
push
mov
mov
mov
push
dec
sub
inc
test
out
pop
bound
aas
enter
xchg
fmull
or
repz
andb
imul
gs
sahf
out
lock
ret
lds
lret
scas
stc
jbe
jge
sar
jmp
inc
imull
dec
test
jmp
add
push
hlt
push
inc
ja
sahf
inc
push
lret
dec
decl
mov
jnp
adc
push
add
jp
mov
decl
std
or
xchg
push
aam
iret
cld
dec
addr16
mov
loope
hlt
dec
dec
movsb
mov
decl
adc
lea
mov
sub
sbb
ffree
dec
jmp
sbb
or
mov
pop
dec
mov
loopne
add
addr16
scas
fidivl
mov
mov
xchg
mov
mov
scas
das
scas
inc
daa
bound
inc
aaa
stos
in
xorps
out
clc
in
jle
push
adc
rclb
repz
ja
adc
and
lret
loop
ret
mov
mov
push
jl
in
add
clc
std
aam
jl
push
loopne
iret
push
cmp
and
jne
xadd
and
and
lcall
fwait
jns
sub
mov
mov
mov
gs
rcll
loopne
ljmp
and
and
mov
xor
ret
fbstp
test
cwtl
or
dec
in
adc
fistpll
jo
fldl
scas
fldl
inc
jno
mov
mov
inc
jae
push
out
fstpl
fcompl
mov
mov
sbb
shl
push
adc
ljmp
mov
xchg
vpmacsdd
lret
insl
jb
jnp
dec
sub
dec
push
adc
push
mov
fbld
out
mov
xor
push
js
inc
pop
and
sbb
and
lcall
or
xchg
cwtl
lcall
and
shll
add
push
xchg
push
icebp
incl
mov
cwtl
mov
cmc
movsl
lcall
or
std
decl
movsl
pop
push
pop
mul
mov
fsubp
jg
pop
jp,pn
sbb
xchg
add
decl
and
xchg
adc
shrb
xchg
je
popf
inc
mov
mov
jmp
xchg
xor
dec
mov
incl
loope
addr16
push
jge
mov
adc
dec
clc
adc
dec
fcomps
loope
out
addb
jecxz
insl
imul
ljmp
ret
sarb
pushf
nop
push
mov
adcb
mov
mov
fbstp
ljmp
jnp
aaa
sub
in
into
fistl
sub
outsb
and
ss
jle
ljmp
testl
push
cmpl
loop
outsb
rcr
std
das
sar
filds
dec
lret
jo
and
jbe
adc
inc
loop
int
ljmp
add
leave
lahf
hlt
out
repz
call
xchg
outsb
dec
mov
pusha
pop
sarb
test
je
mov
pusha
loop
mov
shl
insl
xchg
add
pop
shll
cld
ret
add
and
push
or
roll
insb
out
fisubrs
cmp
addr16
sub
aam
mov
hlt
in
movsl
test
lcall
call
data16
je
mov
cmpsl
out
sahf
cs
sbb
ljmp
cmp
sbb
rol
scas
loop
lret
mov
cli
rcr
push
loopne
adc
mov
mov
mov
ficompl
inc
mov
dec
pop
push
mov
jns
cltd
jbe
ret
inc
xor
fwait
inc
jge
mov
mov
mov
jg
decl
roll
test
or
adc
mov
jmp
inc
xor
dec
arpl
mov
adc
ret
mov
xchg
jmp
mov
sar
test
cltd
sub
aam
cmpl
lret
enter
decl
mov
sbb
or
sbbb
sahf
mov
push
negl
adc
andl
iret
mov
lods
icebp
xchg
repnz
sub
cmp
xor
adc
jns
sbb
call
testl
or
xchg
stos
dec
mov
jns
enter
loop
pusha
jecxz
test
jnp
mov
jle
js
dec
xchg
xor
cld
call
les
sbb
push
mov
xor
cmp
or
pop
sar
jg
rorb
fwait
jmp
aam
sti
and
leave
inc
ljmp
cmp
movsb
dec
lret
cli
push
sub
movsb
mov
and
cmpsl
call
jmp
andb
xorl
sub
jg
fs
inc
aaa
sti
mov
cs
ljmp
push
mov
mov
sti
in
cli
clc
enter
and
js
inc
and
andb
jle
mov
repz
jp
xor
mov
push
mov
stc
addr16
mov
dec
mov
int3
daa
ss
cmp
mov
push
inc
jb
add
add
inc
mov
int
hlt
sti
push
xorb
xchg
dec
int
pop
add
mov
dec
pushf
adc
rcr
mov
add
mov
ret
add
jno
cmpsl
loope
fidivs
dec
cmpl
sbb
comiss
cwtl
into
jmp
jbe
adc
dec
pop
mov
mov
pop
call
xchg
rolb
sub
mov
pop
mov
out
push
adc
popa
xchg
lcall
movsl
push
cmp
lods
jg
push
mov
mov
jmp
push
lcall
push
sbbb
out
test
andb
addr16
mov
dec
mov
jle
lcall
push
movsl
mov
loopne
fnstenv
adc
clc
mov
cltd
dec
dec
sub
xor
sub
mov
push
add
mov
rorb
or
adc
aaa
ljmp
insl
dec
les
xchg
lea
cs
pop
out
aam
cld
inc
jae
cmc
aaa
leave
push
push
ret
mov
ret
dec
std
dec
loopne
adcb
jg
xchg
ljmp
mov
fs
test
pop
xchg
aam
notb
pushf
in
xorb
jmp
in
xchg
data16
jg
sub
jge
stos
xchg
arpl
fsubrs
mov
dec
jecxz
adc
xchg
cmc
adc
xor
pop
loop
ljmp
pop
nop
or
pop
and
lret
adc
push
jecxz
add
pop
adc
call
lods
sti
icebp
mov
inc
mov
mov
jmp
jg
add
pop
test
xor
mov
lret
dec
xchg
cli
sahf
mov
out
ds
mov
dec
adc
imull
test
call
push
lahf
sub
adc
loopw
dec
xor
rol
xor
cltd
scas
clc
pop
out
add
repnz
aaa
jbe
dec
sub
outsb
xchg
ljmp
cmp
enter
test
mov
dec
xor
mov
mov
mov
inc
mov
aaa
insb
rclb
pop
loopne
pop
sbb
mov
xorb
fistps
imul
pushl
mov
cmpsl
fdivrs
xchg
dec
int
sub
std
leave
sub
insl
in
xchg
hlt
cmpsl
out
dec
cmp
dec
mov
outsb
daa
xor
iret
xorb
push
cltd
lret
mov
lret
je
mov
push
loope
adc
mov
lahf
pop
stos
aad
call
into
call
ja
cmp
ljmp
jmp
cli
mov
dec
mov
arpl
sub
subl
xchg
sarb
or
xor
and
cmp
lods
xchg
das
pusha
fwait
push
and
mov
dec
aad
push
fs
adc
xchg
scas
aam
sbb
clc
mov
fstl
popf
stos
sbb
pop
and
sbbb
int
push
cmp
add
mov
call
ljmp
cwtl
mov
xchg
push
xchg
cs
andl
push
ja
into
or
fwait
jge
mov
sub
cmp
dec
cmpsl
xor
jns
out
aaa
add
inc
mov
xor
sbb
call
or
fwait
inc
ficompl
or
in
cmpsl
add
cmc
rcl
out
jp
jle
mov
rcrb
push
iret
mov
std
push
mov
pop
adc
fidivrs
lcall
imul
iret
pop
xor
sbb
js
add
bound
fistpl
ret
push
ljmp
ljmp
and
jmp
sub
ljmp
loope
and
pop
lea
shld
dec
sbb
jo
add
xchg
movsl
addb
decl
repnz
xchg
test
mov
dec
adc
jne
cmp
inc
add
std
push
or
sahf
ljmp
mov
into
lods
xlat
int
fnstenv
sub
in
or
xchg
aaa
sub
adc
xor
sahf
push
stos
adc
repz
xchg
pop
inc
sbb
push
dec
ljmp
pop
cs
lea
movsl
mov
and
scas
bound
jg
mov
or
jb
enter
cwtl
or
hlt
inc
pop
adc
frstor
loope
scas
clc
ljmp
adc
cmp
in
xchg
mov
push
adc
push
icebp
push
enter
sbb
lcall
xchg
scas
lret
push
adc
mov
aad
call
sbb
add
jle
je
addr16
repz
and
incl
sbb
dec
orb
pop
in
jnp
out
stos
loopne
data16
addr16
stos
test
mov
pop
mov
aaa
shrb
insl
mov
das
int3
dec
jno
pop
movsb
jmp
cs
fwait
sub
adc
les
cld
cli
lock
loop
lcall
lcall
push
xchg
xchg
rclb
lret
or
mov
add
jle
inc
pop
out
shl
mov
out
and
bound
cmp
pushl
and
push
add
fsts
sbb
xchg
sbb
js
sbb
clc
arpl
dec
test
das
aad
ja
xchg
and
ljmp
outsl
orb
rcrb
test
ljmp
stos
rcrb
dec
mov
movsl
dec
movsb
dec
xor
cmp
test
mov
insb
mov
loopne
ljmp
int3
push
fs
cmp
jmp
push
jg
xchg
cwtl
sbb
jbe
lds
xlat
pop
out
decl
mov
test
push
ss
jmp
cmpl
imul
gs
rorw
call
mov
aad
xor
into
sub
push
sub
sub
test
and
mov
sti
call
pop
sbb
and
dec
mov
test
adc
mov
lock
icebp
sbb
sub
ljmp
jns
mov
aam
push
dec
inc
loop
pop
jmp
cmp
lahf
push
mov
push
pop
xor
in
mov
jl
xchg
adc
repz
adc
lret
jp
adc
mov
call
adc
movsb
orb
xchg
pop
jecxz
mov
push
cmpsb
mov
sahf
rcr
mov
shr
outsl
dec
jnp
fwait
stos
xchg
sub
cs
jg
pusha
adc
rcrb
push
mov
sbbb
rcr
stc
out
or
and
pop
xor
enter
adc
mov
pop
sti
sbb
push
imul
and
jne
icebp
out
ja
mov
in
sbb
inc
outsb
andb
pop
loopne
add
push
stos
arpl
push
mov
sbb
fstp
cld
cld
jg
sbb
rorl
icebp
sub
mov
incl
or
fisttpll
and
pop
repz
push
sbb
leave
or
push
decl
imul
xchg
or
cs
mov
insl
push
stc
mov
call
add
or
cmp
mov
and
in
in
cmp
test
adc
ret
xor
arpl
cmp
decl
mov
add
pop
sub
std
daa
sahf
jp
mov
dec
or
xor
arpl
mov
call
hlt
push
sbb
mov
mov
mov
adc
dec
xchg
xchg
mov
cmp
inc
sub
jle
mov
inc
sbb
inc
leave
sbb
xchg
lcall
push
pop
xor
fs
sbb
push
xor
push
pop
mov
mov
negb
arpl
ret
jmp
imulb
pushf
cmp
push
jbe
xchg
jg
lcall
call
push
arpl
lods
in
fdivs
shrl
incl
insb
ljmp
lods
sbb
or
mov
xchg
add
popa
int
jecxz
clc
dec
call
lods
call
or
nop
jb
push
push
jb
mov
decl
ja
inc
and
and
sbb
ss
popa
rolb
adc
decl
rcll
sbb
ds
fwait
lock
outsb
push
enter
gs
lcall
shll
sbb
inc
mov
jns
add
dec
das
pop
andl
cmp
push
and
jmp
shll
sbb
mov
cmpsl
add
push
pop
rcrl
xorb
mov
adc
mov
mov
xchg
adc
cmp
pop
aaa
ja
les
add
cmpsl
sub
aaa
cld
dec
enter
adc
fadds
mov
out
mov
add
fisttpl
jo
fists
mov
in
outsl
insb
idiv
fwait
lcall
pop
cmp
xchg
test
adc
out
mov
mov
out
pop
imul
push
fiadds
das
rep
incl
fldenv
dec
or
adc
movsb
add
in
inc
jl
std
repnz
ljmp
sbbb
xor
mov
popf
inc
movntps
into
out
pop
sbb
movsb
das
mov
loop
incl
sub
push
loopne
pop
aaa
sub
scas
push
into
decl
mov
push
pop
sub
cmp
add
cmc
push
lret
fs
adc
push
je
dec
cmp
sti
inc
add
jo
jb
xchg
dec
inc
pushl
mov
mov
clc
pop
pop
shrl
push
int
pusha
incl
aam
aaa
dec
add
ljmp
xchg
ret
shll
aam
dec
jle
jmp
mov
xor
dec
xchg
repz
repnz
fnstenv
adc
push
insl
push
call
aas
or
data16
stos
lret
int3
das
mov
pop
inc
sub
sbb
into
ds
pop
lea
mov
mov
jmp
aaa
out
dec
mov
push
adc
sbb
dec
data16
pop
mov
shll
lods
mov
ljmp
sbb
imul
arpl
and
mov
idivb
inc
mov
and
cmp
mov
sti
lds
loop
decl
out
jp
fstl
add
loope
sahf
dec
mov
les
imul
imul
pop
lock
and
daa
mov
loopne
stos
cmp
adc
ljmp
int3
and
push
test
negb
das
mov
push
xchg
dec
clc
js
pop
sbb
cmc
xchg
stos
push
mov
sbb
in
or
fists
sbb
jmp
inc
test
mov
cmpb
movl
adc
out
xlat
cmp
dec
scas
push
push
insl
xchg
aam
add
add
push
lret
test
fsubrl
add
into
dec
mov
movsl
test
pop
cmp
cli
movsl
jmp
jmp
push
dec
lods
and
sub
ds
movsl
nop
gs
gs
ja
call
push
inc
in
mov
sbb
sub
fadds
mov
jg
inc
cli
movsb
xchg
loopne
add
push
out
das
and
xorb
mov
loop
and
les
cmp
sbb
fidivrs
ss
lcall
mov
shll
xchg
mov
dec
aam
shll
out
pusha
lods
push
jg
mov
out
xchg
mov
clc
aam
or
dec
fimull
mov
and
dec
push
lock
imull
sbb
fucomp
lock
insl
cmpsb
scas
cmp
pop
push
push
incl
pop
inc
inc
cmc
cs
loopne
or
fidivs
pop
neg
dec
sbb
dec
or
dec
or
xchg
pop
call
mov
push
test
pop
loopne
dec
mov
mov
enter
jge
daa
push
mov
mov
jge
mov
jle
or
xchg
loopne
pop
fidivrs
js
cmp
pop
mov
rorb
ljmp
mov
je
xchg
addr16
leave
and
pop
ss
arpl
pushl
into
shrb
lahf
pop
fiaddl
fisubrl
ljmp
push
ja
pop
adc
mov
scas
fstpt
orb
incl
insb
loope
jg
imul
aam
repz
aaa
ret
or
mov
repz
cmp
ret
cwtl
fcomip
or
adc
mov
xor
popf
jno
add
hlt
mov
or
or
dec
pop
sahf
sbbl
cmp
push
mov
xchg
inc
mov
push
add
daa
mov
jno
jg
lea
dec
push
cmp
push
add
decl
xor
or
out
dec
les
cwtl
mov
pusha
out
inc
mov
push
and
jg
ja
lret
adc
or
cmp
or
scas
sbb
sub
and
push
jg
rcrl
ds
fmull
arpl
jg
jp
cmp
cmpsb
adc
iret
bound
xlat
outsb
xchg
xchg
add
and
mov
sbb
jle
jecxz
pop
loopne
dec
or
or
mov
test
or
sub
dec
pop
les
call
js
je
stos
jnp
jb
add
ds
in
lahf
dec
sti
rcll
mov
incl
and
cs
repz
lret
std
fucom
negl
mov
mov
faddl
ud2
or
decl
in
xchg
push
pop
std
lea
test
iret
cmp
test
daa
fsubl
pop
adc
gs
inc
dec
jns
sub
xchg
xchg
jg
lahf
gs
mov
adc
pop
add
pushf
scas
ljmp
and
push
int
adc
push
lods
in
outsl
adc
sbb
lcall
xchg
movsb
leave
stc
out
ljmp
push
jg
int
and
lods
pop
enter
pop
mov
mov
mov
jno
inc
xchg
mov
inc
mov
adc
arpl
sarl
mov
imul
jbe
gs
jb
mov
in
scas
inc
ljmp
clc
clc
pop
cmp
dec
mov
adcb
mov
dec
std
mov
add
push
fdivr
xor
rcl
movsl
and
sbb
and
sti
insl
movzwl
in
xlat
sahf
outsl
out
insl
push
mov
pop
cmovp
add
in
cmp
mov
push
pushl
aad
inc
cwtl
push
adc
xchg
mov
sti
fldenv
mov
mov
ja
push
lret
hlt
xchg
push
cmp
xor
test
inc
jb
cmp
ftst
cltd
xchg
cli
pop
sub
in
jge
fwait
aam
lret
sub
daa
icebp
and
lcall
mov
ret
sub
daa
fcmove
jecxz
add
ljmp
pop
cmc
decl
cli
cli
fldenv
cld
cwtl
cmp
mov
data16
adc
sbb
pop
sbb
dec
out
or
xor
xor
pusha
cld
jg
mov
xor
dec
jae
sub
jae
stos
movsl
cmp
es
jg
xor
inc
dec
and
gs
ds
ja
hlt
es
xor
fistpll
loope
mov
fldl
jnp
xchg
mov
sbb
or
pushl
dec
or
inc
jge
pushf
push
callw
cmc
daa
xor
xor
mov
mov
mov
bound
int3
cltd
ret
mov
xor
push
decl
test
mov
insb
mov
cmpsb
lret
pop
add
cmp
sub
jno
pop
inc
and
sahf
pusha
call
mov
inc
scas
arpl
aas
lcall
jle
sbb
inc
stos
pop
push
movl
and
push
jg
add
mov
add
pop
adc
cmpsb
cmp
dec
jecxz
sub
inc
cs
cmp
in
xlat
loop
jae
xchg
inc
add
and
sub
push
loop
jbe
sub
scas
testb
in
and
aas
pushf
imull
jns
out
jo
adc
mov
sarb
lcall
movsb
push
xor
cltd
xchg
das
aad
shll
std
aam
inc
fistl
dec
mov
xchg
ds
jmp
mov
fbstp
repz
dec
js
lret
mov
push
or
in
sub
sbb
cltd
dec
int
mov
add
pushl
push
add
sub
cltd
mov
pushl
xchg
movsl
imul
decl
cmp
mov
cmpsb
add
xchg
aam
mov
imull
lock
jg
lds
dec
pop
iret
rclb
cmp
mov
mov
jp
push
int
ljmp
push
ret
mov
fsts
movsl
sbb
das
idiv
pop
test
mov
pusha
daa
sbb
lcall
cmp
rorl
fistl
out
add
aam
shlb
leave
inc
xor
bound
pushl
push
cmp
add
mov
mov
sub
dec
lock
adc
adc
movsb
idivl
and
mov
add
call
shl
inc
jge
lret
call
dec
sub
push
int3
out
adc
add
repz
push
adc
decl
add
out
jge
cs
ret
sarl
adc
mov
cmp
adc
rcrb
mov
aad
cltd
mov
leave
repnz
incl
xchg
xchg
mov
dec
or
daa
cli
xor
out
cli
aad
add
xor
inc
inc
div
inc
int
aas
in
test
mov
xchg
decl
pop
pop
gs
jo
js
dec
jp
cmp
lds
ljmp
inc
adc
inc
mov
or
in
add
pop
pop
add
pop
cltd
clc
jg
sbb
dec
push
mov
jge
pop
mov
fsubrs
nop
decl
push
pop
push
push
cmpsb
dec
mov
outsl
jp
pop
xchg
dec
aaa
cwtl
mov
outsb
pop
popa
mov
ljmp
dec
pop
sahf
mov
xchg
push
js
push
test
push
fcomps
jns
inc
ljmp
aas
and
ret
into
jl
xor
bound
outsl
mov
insb
into
pop
lods
bound
mov
push
leave
cmpl
push
xchg
lods
les
or
lods
in
leave
incl
loop
andl
and
in
add
pop
lahf
ret
sbb
fists
aaa
and
sbb
lods
in
mov
data16
mov
pushl
pop
cs
xchg
ds
inc
xor
sbb
and
and
inc
ljmp
mov
fldl
pop
leave
xorb
jae
in
add
fadd
jne
push
lahf
dec
fcomip
call
sub
adc
push
shll
les
fisttps
sbb
jmp
xchg
and
icebp
outsl
mov
pop
push
daa
add
push
cld
sbb
ds
sub
imul
inc
cmp
call
shll
lods
push
cmp
mov
mov
mov
and
push
imul
jmp
jmp
mov
mov
jecxz
inc
fadd
aam
aas
jg
mov
and
mov
adc
mov
shrl
es
xor
loope
repnz
sti
jl
pop
fld
aaa
inc
pushf
ljmp
xlat
sbb
pushl
incb
cs
push
aaa
xchg
jp
or
rorl
or
insl
cld
hlt
sbb
imul
popf
jns
mov
jmp
xchg
xchg
dec
test
iret
imul
fcoml
test
jmp
jb
jno
stos
shlb
push
aad
add
jl
test
js
add
incl
inc
hlt
std
iret
and
add
sub
mov
jbe
push
icebp
int3
mov
or
jmp
pop
lcall
push
cmp
subb
and
lcall
adc
mov
inc
xchg
cmc
enter
dec
dec
sbb
gs
dec
stos
shl
test
cltd
add
mov
dec
lahf
sbb
push
test
jae
cmc
dec
xchg
int3
imul
outsb
mov
incl
cld
outsl
mov
jle
xor
inc
add
arpl
fisubl
dec
xchg
mov
jmp
movsb
inc
mov
fildll
mov
xchg
out
cld
xchg
std
cmp
incl
cld
incl
lea
or
xchg
cmpsl
mov
mov
jae
cmp
call
fimuls
testb
test
push
ljmp
add
xchg
fs
lcall
setae
enter
or
mov
pop
push
jae
in
clc
clc
dec
testb
je
out
mov
dec
cmp
mov
pop
and
fbstp
out
int
faddl
push
mov
push
es
in
scas
clc
pushl
adc
aam
jns
mov
rcr
mov
ss
or
jg
pushl
add
pop
mov
lock
mov
out
push
icebp
outsl
xchg
test
mov
lcall
mov
out
sbbl
das
daa
stos
pop
std
jmp
fs
sub
jge
lds
das
test
cli
testb
ljmp
ret
push
pop
leave
push
lds
xchg
sbb
nop
jns
jo
loopne
or
jne
aad
iret
cmp
pushl
mov
daa
xchg
or
fcmovbe
jae
nop
inc
dec
cmp
mov
mov
int3
fs
incb
jno
sbb
shl
mov
sbb
fwait
mov
fisubrs
mov
out
xchg
decl
or
and
bound
adc
add
xor
aad
pop
mov
rorb
test
clc
call
pusha
insb
sbb
filds
inc
scas
sysenter
std
int
in
xchg
cs
sub
es
inc
dec
mov
lret
mov
dec
out
dec
adc
movsb
int3
leave
pop
xor
lea
lds
into
dec
aam
jmp
jecxz
gs
out
mov
pop
inc
bnd
pop
cmpb
popa
daa
push
mov
mov
sbb
add
push
push
xchg
dec
push
cld
inc
gs
adc
and
add
scas
inc
lods
shl
rcrl
cld
in
in
jg
push
sub
insl
xor
sti
add
negl
pop
pop
jg
jb
pushf
pusha
out
dec
jae
xchg
shlb
sti
test
and
in
jns
stos
xlat
dec
jg
incl
fstpl
adc
sbb
out
out
fisubrs
and
mov
shl
outsl
sub
mov
pop
and
gs
das
mov
inc
mov
icebp
in
jle
stos
add
mov
mov
mov
lock
xchg
loop
mov
icebp
les
fiaddl
std
fisubs
jno
into
out
ret
inc
ret
lock
cmp
xor
aaa
mov
mov
insb
pop
sub
hlt
fidivrs
jp
jg
inc
jb
mov
repz
fld
jae
push
inc
xchg
adcl
cmp
ds
xor
sub
push
add
push
call
jp
orb
ret
xchg
mov
ljmp
in
or
or
cmp
push
loopne
adc
xor
adc
cmp
pushl
mov
subl
mov
push
jnp
out
shrl
lock
pop
pushl
scas
fisubrl
out
popf
jecxz
sarb
outsl
add
aam
adc
fildl
dec
jecxz
dec
jo
in
or
xor
sahf
repz
or
jl
add
adc
mov
jmp
or
sub
jo
ror
add
xor
jo
ret
jg
mov
addr16
mov
inc
out
shll
sahf
add
xorl
mov
jge
dec
lods
adc
jp
push
xor
jge
ljmp
push
fcomps
je
add
jle
or
out
ficomps
mov
call
jnp
stos
cmp
aas
cpuid
aad
mov
adc
jp
cmp
pop
push
push
adc
xor
xchg
inc
jg
adc
push
imul
fwait
imul
incl
inc
imul
nop
aam
or
mov
fisubrl
xchg
repz
loopne
test
lcall
pop
dec
add
movsb
aaa
ds
sbb
decl
push
mov
cli
mov
pop
in
push
push
addr16
lcall
test
sbb
fstpt
jl
pop
cmpsb
popa
sub
jmp
fs
ljmp
cmp
in
jo
and
jg
inc
ficomps
xlat
push
mov
fwait
ds
adc
fisubrs
jb
out
cli
sbb
jmp
cmc
cmp
rcrb
enter
jg
inc
cli
jmp
jne
cli
mov
les
xchg
xchg
fildll
cmp
bound
stc
jmp
adc
pop
xchg
adc
cld
in
lcall
pop
stos
shrl
popa
loope
inc
enter
jmp
add
mov
sub
and
repnz
push
pop
mov
ret
sbb
mov
sub
div
inc
add
rorb
jecxz
sahf
fwait
call
pop
lds
push
jne
iret
and
aam
insb
out
std
pushf
xor
mov
xchg
jecxz
xor
mov
je
sub
and
pop
std
pushl
in
inc
in
shr
and
push
pop
les
dec
std
mov
cmp
int
mov
imull
sbb
add
xchg
out
or
mov
jmp
cmp
xchg
clc
ljmp
mov
int3
iret
gs
sub
insb
sbb
push
jecxz
pop
std
ljmp
xor
mov
cmc
cmp
ret
mov
sub
sub
ret
fdivp
es
ret
sub
mov
fwait
sub
sbb
mov
mov
ljmp
adc
xorb
jnp
rcll
and
xor
and
jmp
sbb
pop
jb
xchg
pop
push
xor
mov
push
outsl
jne
decl
sbb
aas
loopne
loop
lods
out
flds
orl
pop
clc
div
incl
cmp
sub
pop
addr16
lea
add
xchg
es
shll
push
cmpsb
icebp
ljmp
and
inc
fildl
cmp
rorb
inc
loopne
std
icebp
push
cmp
dec
dec
gs
inc
xchg
lcall
inc
mov
movsl
jg
std
cwtl
xchg
ss
ljmp
jno
daa
pop
stc
mov
incl
cmc
push
push
ja
or
incl
into
jae
clc
jecxz
jo
push
push
hlt
test
lds
lea
lahf
outsl
roll
fadds
inc
aaa
into
pushf
enter
sbb
sub
mov
addb
imul
arpl
push
mov
fstl
xlat
clc
pusha
sub
lcall
movsl
mov
push
fdivrl
sarb
imul
stos
rorl
dec
lea
and
fisubl
out
add
inc
add
cmp
mov
in
stos
addr16
je
jecxz
lret
ljmp
or
imul
ficompl
jl
sub
out
stos
inc
int
notb
push
aaa
pusha
jg
out
xchg
and
fsubr
stos
sarb
in
daa
fisttps
insl
jl
out
and
ss
push
push
jp
mov
shll
add
xchg
dec
sarb
lods
adc
xor
insb
push
in
jg
mov
in
add
jecxz
xor
insb
dec
xchg
push
decl
rolb
cwtl
mov
jecxz
ret
jne
or
jmp
ljmp
xchg
cli
stc
push
aad
nop
imulb
lcall
out
xchg
sbb
mov
hlt
dec
inc
xchg
bound
mov
out
sub
sub
xchg
fidivrl
decl
icebp
and
adc
cmp
add
call
mov
cmc
lds
add
pusha
sar
nop
mov
pop
push
out
push
cmp
adc
mov
test
std
and
insb
sbb
shlb
jmp
mov
cld
jns
jle
pmullw
sahf
cmpsb
cwtl
je
xchg
iret
xlat
inc
fs
insl
mov
decl
sbb
shlb
pop
fstpl
inc
es
jmp
sub
ss
call
cmpsb
lcall
sbb
nop
cmp
jecxz
insl
out
arpl
ljmp
dec
inc
leave
lds
dec
outsb
in
xorl
dec
mov
mov
xchg
lock
decl
mov
cmpsb
out
insl
cld
popa
dec
pop
xchg
imul
lock
ret
mov
xor
test
or
mov
mov
xchg
adc
inc
int3
xchg
stos
jno
pop
incl
imul
adc
lcall
out
mov
sti
mov
xchg
fcomip
pushl
inc
out
sub
cwtl
mov
inc
push
das
jo
cltd
cmp
jmp
push
mov
mov
jmp
insb
cmp
dec
cmp
stos
cli
push
call
sbb
cli
push
mov
mov
push
push
add
lahf
outsl
push
pop
add
dec
addr16
out
xor
iret
sbb
orb
push
jmp
mov
call
fs
cs
imul
jbe
test
aas
cmp
lock
cwtl
add
push
scas
mov
scas
mov
adc
inc
nop
jae
jmp
rorb
or
lret
popf
incb
cld
cli
loop
lds
xchg
iret
push
mov
adc
fadds
repz
scas
sub
jno
in
xor
adc
test
cmp
fcomip
push
sbb
or
push
sti
aaa
and
rolb
xchg
out
lock
cltd
mov
push
dec
loope
fs
sub
xor
in
or
stos
notb
dec
ds
mov
decl
inc
mov
fsubr
push
pop
arpl
cmpsl
dec
stos
or
and
or
mov
push
xchg
and
call
push
cmp
pop
sar
mov
or
mov
pop
jl
jg
or
and
data16
fcomps
loop,pn
aam
ja
jg
dec
adc
in
mov
out
lahf
push
cmpsb
xchg
sub
and
mov
fdivr
roll
cmp
cmc
xor
pusha
out
out
push
outsb
ret
lret
subb
xor
hlt
push
mov
jo
xlat
int
push
arpl
rcr
mov
movsl
jno
mov
push
incl
aaa
add
loop
jle
movsl
xchg
mov
mov
fadds
dec
call
dec
add
or
mov
fbstp
pop
frstor
js
mov
pop
aad
outsb
stos
pop
mov
dec
loop
enter
pop
mov
pop
pop
imul
lcall
fldenv
jb
or
mov
outsb
push
lret
and
ljmp
adc
xor
pop
lret
mov
sahf
xor
imul
decl
jl
pop
add
xchg
add
xchg
iret
sbb
mov
hlt
mov
clc
cltd
popa
les
jne
sbb
lods
and
fadd
mov
cs
mov
mov
lods
aaa
shlb
jb
xor
movsl
stos
pop
paddb
mov
push
pop
pop
lods
or
andl
or
add
bts
jp
aad
dec
scas
jl
std
loopne
les
scas
cltd
xchg
or
pop
push
std
insb
and
sbb
je
sbb
inc
mov
add
inc
fdivs
lcallw
loop
in
pop
mov
mov
js
push
loope
ds
fcomip
mov
push
faddl
cmp
pop
adc
add
cltd
jbe
divb
ficompl
inc
adc
lcall
loope
mov
ja
pushl
in
adc
mov
nop
jbe
jae
push
add
dec
sub
testl
inc
or
arpl
or
jae
xor
call
mov
dec
pop
inc
cwtl
mov
mov
mov
inc
jno
xchg
xor
jbe
push
cltd
out
cmp
ret
popf
xchg
imul
xchg
xor
cli
imul
into
testl
mov
dec
inc
insb
fdivrl
fdivrp
incl
adc
or
mov
cmp
jmp
jecxz
cmpsb
lret
pslld
call
sub
das
xchg
dec
jmp
cmp
xor
xchg
fstpt
lods
and
ljmp
xchg
sbb
stos
fcoms
ja
das
rcll
mov
add
fildll
fucomp
ret
in
cmp
sbb
fadds
enter
cld
jmp
outsb
mov
incb
xor
int
pop
out
xor
fstl
cmp
sbb
lods
negl
pop
push
outsl
xor
mov
popa
add
push
outsl
mov
call
jbe
jge
sub
mov
mov
adc
jnp
add
mov
lret
mov
push
push
imul
imul
jo
push
mov
lock
fistpl
dec
lock
push
loop
sub
lds
xchg
pop
mov
jge
mov
dec
rcrl
jmp
xchg
jne
sti
das
push
push
jmp
test
aad
mov
int
or
ja
loope
and
sbb
adc
sahf
js
je
pop
xchg
stc
mov
lahf
aad
daa
xor
add
sbb
decl
push
rclb
sub
in
loop
rcrb
adc
xchg
jle
jb
out
andb
pop
int3
aaa
dec
and
in
decl
or
add
xlat
cmpsb
loope
xor
sub
loopne
mov
jge
ljmp
xchg
inc
xor
push
cmp
add
jmp
aad
or
cwtl
jns
cmpsl
ds
dec
and
adc
dec
inc
pop
mov
ficoms
mov
or
add
ljmp
xchg
mov
loope
mov
xchg
orb
xchg
add
call
jne
ret
adc
aas
loope
xor
xor
faddl
xchg
pusha
les
push
imul
lea
adc
jnp
out
cltd
in
outsl
add
cmp
xor
fldenv
xchg
or
jbe
jnp
cltd
jmp
andb
xlat
movsb
sbb
decb
cmp
sahf
push
push
adc
adc
mov
dec
test
icebp
decl
cli
movsb
xlat
mov
sbb
adc
inc
ret
insl
inc
xor
push
inc
es
lcall
push
loop
push
imul
mov
sub
lcall
cwtl
xchg
jge
mov
adc
repnz
enter
ja
nop
add
lds
adc
stc
jmp
and
lods
mov
xchg
xor
xor
xor
pxor
jne
cmp
xchg
cs
lcall
xlat
ds
sub
rcrb
push
cmp
jnp
cmp
sub
dec
jp
add
cmp
adc
mov
mov
mov
adc
add
and
or
inc
xchg
mov
decl
iret
cli
jmp
mov
jne
inc
enter
incl
clc
jmp
lds
cmpl
push
stc
push
mov
outsl
lcall
jecxz
xchg
pop
xchg
cmp
lcall
aas
arpl
xor
push
sbb
test
pop
lcall
sahf
xchg
scas
and
icebp
add
mov
adc
cmovno
ret
jle
sbb
xor
mov
jmp
xor
shrb
test
outsb
pop
imul
decl
test
movsb
and
add
aad
pop
inc
out
mov
in
loopne
mov
stos
xor
js
push
out
call
lods
sub
xor
mov
jnp
je
or
daa
es
cmp
hlt
popf
repnz
ljmp
fdivrl
jp
shlb
mov
cmp
frstor
pop
pushl
mov
cwtl
cwtl
pop
xor
pop
push
push
call
cmpsl
hlt
cmp
lcall
sbb
pusha
sbb
popf
ljmp
bound
divl
mov
mov
mov
lock
ljmp
pop
pop
repnz
push
movsl
inc
xor
movsl
into
popf
enter
gs
call
cmp
fs
lds
ret
xchg
daa
ss
leave
push
jmp
lock
in
xor
inc
fmul
mov
stos
xor
sub
test
xor
xchg
push
es
aaa
xor
pop
stos
dec
fwait
or
xor
cmp
pop
cmpsb
dec
add
add
lds
and
or
jmp
pop
xor
cmp
fst
sbb
test
mov
push
lahf
test
jg
cmp
push
movsb
lods
out
std
sbb
jns
jae
and
and
in
in
nop
mov
xchg
adc
mov
jle
push
jb
cmp
jg
push
cmpxchg
ds
xchg
push
mov
push
movsl
aas
es
xor
cvttps2pi
mov
aaa
ja
into
ficomps
cmp
dec
enter
push
mov
icebp
test
inc
cmp
shr
pop
dec
clc
lcall
and
pop
cld
fcos
dec
pop
mov
jns
fadds
jbe
subb
jno
lret
fld
stos
cmp
das
or
cmp
rorb
aaa
pop
push
mov
fiadds
test
jmp
cmpsb
dec
mov
je
ds
into
decl
ja
xor
dec
and
out
add
mov
adc
xchg
mov
test
js
ds
xchg
or
cwtl
ja
mov
stc
outsl
mov
test
filds
decl
rclb
xor
ret
push
mov
movl
mov
sahf
xor
jb
pop
dec
loopne
ljmp
dec
lret
dec
mov
aas
test
fchs
sarl
mov
decb
pop
stos
test
lahf
test
je
faddl
and
loopne
jmp
mov
imul
lret
cmp
fs
jl
fcos
cmp
push
sub
dec
fs
scas
insb
call
mov
ret
cld
sarl
in
int3
cmp
add
mov
iret
repnz
mov
sahf
jl
pop
icebp
test
inc
fwait
movsl
add
fisttps
push
add
inc
xchg
sbb
jmp
fwait
adc
cltd
cmp
pusha
dec
xchg
dec
test
loop
out
xchg
push
pop
mov
xor
loopne
call
ret
test
pop
ds
or
scas
shl
imul
mov
mov
cltd
imull
push
aam
add
inc
jmp
dec
ret
sub
mov
mov
adc
scas
mov
mov
lock
and
decl
pop
lahf
push
jle
arpl
push
mov
scas
push
in
add
stos
ja
movsb
ljmp
xorl
sar
in
or
jg
aam
pop
dec
sbbb
in
fmull
in
neg
cmpsb
adc
addr16
fisttpl
sbb
push
lcall
or
movsl
loopne
inc
pushf
dec
enter
mov
icebp
fidivs
clc
call
or
lret
and
jl
dec
jae
xchg
push
mov
cld
test
lds
push
sbb
inc
fsubl
xchg
jnp
sub
aaa
push
mov
xlat
mov
mov
or
mov
aas
dec
adc
push
aad
jle
pushf
mov
add
popf
or
push
cmc
mov
leave
mov
xchg
repnz
shrb
mov
imulb
sbb
stos
push
je
push
mov
mov
icebp
movsl
dec
mov
cmc
loopne
lods
lea
or
jnp
rclb
aam
das
leave
nop
cmp
cmpsl
lea
pusha
sbb
addr16
mov
jg
mov
xor
mov
jno
or
sbb
popa
sbb
pushf
imul
scas
push
test
rclb
sbb
push
and
push
jg
decl
cmp
mov
add
add
leave
pushl
das
rcll
sahf
and
cli
push
and
mov
adc
inc
mov
pop
and
lds
fisubrl
cs
in
inc
and
test
push
push
push
insl
mov
push
cmp
decl
or
xchg
clc
adc
mov
mov
ret
das
or
pusha
fwait
cmp
idiv
call
mov
sub
add
subb
pop
shll
mov
imul
cmpsl
sub
es
adc
scas
pop
mov
sbb
add
mov
fs
dec
pushf
cmpsb
mov
clc
jb
cmpsb
imul
push
lcall
push
das
js
es
or
and
call
dec
shrl
jae
mov
xchg
mov
sub
push
mov
pop
add
in
sbbl
fnsave
shll
incl
pop
test
adc
cmp
stos
adc
aas
sub
repnz
cltd
pop
decl
or
or
cmp
fisubl
pop
dec
add
jns
pushf
repz
xchg
add
jg
sti
adc
fnstenv
orb
es
dec
pop
in
mov
cli
jg
cmpsl
lret
ljmp
sbb
mov
in
es
dec
adc
out
int3
shll
add
mov
loope
lahf
repnz
decl
push
or
outsb
push
call
insl
add
lcall
adc
pop
sbb
xchg
ljmp
and
ret
and
mov
je
pusha
sub
pushl
jnp
cmp
mov
ss
cmp
push
mov
lea
adc
pop
cmpsb
pop
sarl
shlb
and
sti
popa
jmp
jne
das
shll
cmpsb
push
fildll
add
ljmp
roll
andl
into
je
dec
xchg
lcall
das
je
call
mov
out
gs
cmp
decl
stos
add
dec
adc
repnz
fcompl
add
hlt
and
xchg
sti
popf
inc
int3
and
cmp
mov
loope
jg
loop
cli
addr16
cmp
fld
int
mov
add
aaa
repz
fcomp
loope
je
xchg
jl
out
fimuls
icebp
pop
rol
testl
data16
cwtl
bound
and
insl
mov
and
scas
jmp
arpl
dec
fcom
lret
pop
mov
decl
sbb
cs
jno
dec
adc
add
cli
xor
mov
pushl
push
lock
xor
int
mov
addl
idivb
loope
pushl
push
and
xchg
stc
jo
adc
mov
xchg
xor
mov
ret
xchg
mov
adc
rcll
xchg
mov
lahf
mov
popf
shrb
std
sub
mov
movsl
pop
sbb
mov
xlat
loope
xor
lcall
xor
in
cli
mov
sub
pop
pushf
out
fcoms
pushl
pop
push
scas
std
mov
frstor
sti
mov
movsl
imul
mov
cld
decl
adc
or
into
mov
mov
in
imul
lock
sbb
and
adc
mov
fldt
sub
iret
test
push
mov
call
aaa
insb
jp
out
movsb
ja
mov
ret
or
jmp
mov
lods
add
sbb
jecxz
addr16
dec
nop
enter
shlb
push
add
inc
stos
jle
and
stos
push
cmpsl
stos
cltd
sbb
xor
mov
decl
cmpb
aas
mov
enter
sub
ljmp
cmp
adc
pusha
jae
jecxz
fldenv
inc
sub
jae
or
lods
loop
push
rorl
scas
cmp
imul
out
cld
mov
bound
shll
jg
dec
mov
ljmp
or
inc
xchg
outsb
mov
int
rcl
dec
cli
aad
pop
hlt
push
mov
loop
jg
ljmp
outsb
test
dec
sti
adc
shrl
rcr
filds
dec
cmc
push
into
faddp
and
inc
scas
aam
in
jns
lods
pop
fisubrs
in
push
adc
jg
ds
add
and
mov
sub
add
jns
mov
or
sbb
jmp
ret
movsl
dec
sub
outsb
movsl
rclb
decl
pop
cmp
dec
sbb
mov
fimull
add
fstpl
push
pop
and
pop
inc
mov
cmp
decl
push
or
pop
mov
sub
fwait
mov
adc
test
adc
call
mov
les
decl
inc
mov
mov
nop
add
adc
incl
outsl
imul
fbstp
cmp
adc
ret
cmc
incl
lock
xor
mov
and
es
xchg
jmp
pop
scas
out
xchg
inc
sbb
sub
je
imul
xlat
mov
sub
push
jmp
out
insl
xor
mulb
xor
sub
xchg
popa
cmp
adc
jbe
out
decl
mov
add
dec
inc
xchg
sub
bound
sub
xchg
mov
std
mov
or
xor
nop
pop
mov
add
decl
xchg
rolb
ret
ja
xchg
hlt
fdivl
mov
call
lahf
fdivr
jp
pop
lret
testb
jg
sbb
xor
add
test
sub
icebp
faddp
sub
dec
out
push
outsb
ficoml
incl
mov
adc
xor
pop
ja
lods
insb
ficoml
in
aam
sub
popf
fs
xchg
fildll
ret
in
add
fisubs
mov
sahf
add
jae
and
xchg
inc
ljmp
test
cmp
adc
xor
fnstsw
cltd
daa
xor
cld
rcrl
scas
ja
daa
outsb
test
sub
enter
hlt
sti
mov
dec
jne
ljmp
movsb
scas
lock
push
pop
loope
hlt
adc
xchg
cs
mov
lcall
push
sub
xchg
adc
pop
inc
inc
stos
push
shrb
mov
fisubs
cmp
and
imul
lods
xchg
hlt
cmp
call
and
inc
and
lcall
sbb
mov
cmp
push
pop
push
aas
xchg
push
fnstenv
sub
mov
out
pop
sbb
xchg
sti
repz
int3
movsb
pop
or
mov
lods
int
mov
cmp
mov
es
mov
dec
data16
insl
out
les
jo
icebp
lods
add
xchg
push
mov
mov
add
or
add
mov
jg
cmp
loop
nop
adc
cmc
jecxz
cmpsl
or
push
sbb
mov
mov
fdivs
xor
mov
xor
sub
mov
or
mulb
call
jge
add
push
sub
and
sbb
inc
enter
push
mov
orl
ljmp
call
jmp
cmpl
and
xchg
mov
mov
or
enter
in
das
xchg
sub
lock
inc
sahf
xchg
pushl
add
mov
pop
out
insl
pop
cmp
loop
ror
pop
std
cmpsb
mov
test
mov
dec
pop
add
adc
push
and
movsb
es
mov
mov
lcall
fnstenv
mov
pushf
lcall
push
test
xchg
jg
mov
mov
mov
adc
push
mov
decl
mov
inc
es
dec
pop
in
cmovno
stos
cmp
les
out
cli
incl
enter
adcl
daa
xor
pop
push
pop
enter
adc
data16
decl
mov
adc
or
xor
mov
sbb
xchg
mov
pop
jns
lea
and
inc
cmp
shrl
shl
repnz
xor
or
fdivr
jg
push
std
xchg
xchg
rcrb
pop
cmp
xchg
sbb
loop
incl
or
out
xor
popf
sahf
adc
shr
sub
lcall
adc
push
shr
jne
and
sbb
sbb
call
cwtl
mov
nop
aam
out
sbb
mov
lock
leave
jnp
jmp
sarb
ljmp
ljmp
mov
push
je
or
lcall
push
mov
mov
push
adc
push
lods
cmc
pushf
ror
adc
or
aaa
xchg
js
lea
das
push
movsl
scas
and
jmp
dec
or
inc
pop
mov
sti
icebp
fldl
xchg
test
or
fstl
movsb
ljmp
pop
orl
mulps
call
lret
xor
adc
stos
sti
pop
mov
cltd
xor
pop
dec
jle
sub
sbb
add
popa
scas
cmp
out
clc
jg
addr16
test
jb
jb
xchg
mov
xchg
lods
call
rol
in
push
push
push
xchg
xchg
imul
or
mov
mov
hlt
in
fs
cli
or
lock
jmp
xchg
stos
js
pop
cmp
fcom
pop
shlb
push
and
out
adc
push
push
shl
jo
mov
fmul
adc
jg
test
inc
inc
and
add
ljmp
xchg
jb
add
and
pop
or
fisttps
adcb
lcall
cmp
mov
mov
pop
xchg
jae
sbb
test
sub
jmp
ja
clc
mov
es
lock
mov
pop
fiaddl
outsb
test
roll
pop
jp
insl
add
push
push
sbb
add
dec
mov
icebp
jmp
mov
jnp
push
dec
std
fcom
pop
int
lahf
lods
incl
or
inc
rolb
popf
imul
and
push
mov
incl
sbb
sub
ljmp
mov
xor
int3
push
mov
mov
jmp
movsb
mov
fadd
jns
mov
pop
xor
repz
jae
mov
or
loope
fs
ljmp
jg
and
jg
fisubrl
xchg
sarl
movsl
dec
jge
jns
sub
xor
pushl
mov
in
pop
dec
mov
jno
add
inc
and
fstps
ljmp
push
xchg
lret
jbe
cltd
iret
sbb
loope
push
dec
sti
or
popa
mov
inc
sar
int3
cltd
loop
adc
enter
lea
hlt
adc
mov
das
push
and
call
adc
fists
pop
mov
mov
sahf
push
push
and
cmp
arpl
mov
sti
xor
decl
jns
pop
nop
jge
inc
in
jns
scas
jg
pushaw
or
cmp
inc
sbb
add
ljmp
xchg
jnp
sbb
pop
pop
adc
lea
and
repnz
push
call
stos
das
push
push
pop
mov
xchg
push
jb
push
ljmp
test
xchg
and
and
shl
inc
cmp
lcall
jb
mov
loop
into
aad
pop
inc
les
lock
movsl
mov
add
in
mov
inc
sbb
push
pop
xor
mov
rcrl
xor
add
ret
dec
and
cltd
incl
sbb
test
rcrl
aad
je
mov
add
add
add
jecxz
jmp
scas
dec
pop
mov
dec
push
fmuls
xchg
fnsave
out
jge
pushl
push
sub
or
push
pop
das
decl
fiaddl
out
fwait
xchg
mov
repz
rorb
fbstp
sbb
ljmp
js
sbb
int
sti
mov
sub
leave
lcall
lock
xor
sbb
jne
mov
pop
push
xor
popa
leave
in
fwait
jg
decl
scas
cmp
out
repz
cli
test
das
inc
inc
dec
sbbb
jg
push
jp
daa
push
ret
xor
dec
in
mov
out
sub
das
jno
fwait
das
xchg
lcall
insl
pop
imul
and
mov
testb
leave
rol
dec
jno
call
pusha
xchg
push
xchg
scas
rolb
sub
and
inc
dec
push
hlt
ljmp
jae
mov
xchg
aam
add
dec
mov
push
inc
ljmp
arpl
cli
into
sbb
xor
sub
jmp
mov
cs
sbb
xor
lcall
lcall
inc
dec
and
pushl
xchg
mov
push
mov
cmpl
sahf
xor
incl
enter
pushf
clc
and
mov
pop
or
jmp
sub
movsb
add
xor
les
daa
or
lea
aas
xchg
mov
xlat
call
fstpl
test
add
and
iret
loope
sub
popf
arpl
add
shlb
imul
jp
pop
sahf
ss
loop
jg
aas
arpl
jg
dec
out
shrb
dec
pushf
sbb
sar
mov
xchg
sbb
push
cmp
ror
incl
sbb
lea
pop
fs
adc
shlb
lahf
dec
xor
push
cmpsb
addr16
cwtl
pop
ljmp
subb
out
cmpl
out
pop
push
insl
push
and
aam
hlt
mov
addl
ds
xchg
jbe
jmp
mov
pop
ficoml
xor
push
dec
js
xchg
fstl
test
ljmp
fnstsw
lods
sbb
mov
mov
aas
int3
push
jle
push
std
adc
aaa
mov
and
fs
fsubrs
stos
daa
mov
mov
pop
jmp
mov
sti
cmpsl
push
xor
out
pop
notl
popf
aaa
loope
incl
gs
mov
imul
sub
xor
push
xchg
jb
jns
jle
push
popa
aas
ljmp
mov
push
xchg
out
or
in
inc
in
daa
mov
xchg
xchg
je
jmp
pop
imul
aam
test
pop
in
ficompl
mov
or
sar
pop
popa
ja
xchg
test
fiadds
dec
fs
fstpt
mov
sahf
jno
and
lcall
inc
int
dec
mov
push
aaa
arpl
mov
xor
or
lcall
dec
nop
mov
pop
insl
daa
dec
test
fsubl
insb
dec
xor
popa
testl
dec
loope
mov
sub
scas
outsb
and
sarb
lods
sbb
jg
mov
loop
outsl
cs
test
pop
sub
mov
mov
and
mov
lret
daa
repnz
add
mov
sti
lods
jmp
jmp
cmp
jnp
push
outsb
outsl
jmp
mov
fidivs
jl
je
mov
arpl
add
push
jle
and
arpl
mov
cmp
leave
ret
pop
cwtl
std
hlt
stos
push
cmp
popf
test
jg
mov
push
mov
mov
mov
jo
cmp
clc
std
ror
sbb
int3
xchg
faddl
pop
xorl
hlt
or
inc
adc
incl
inc
sub
andl
jo
sbb
cmp
cli
sbbl
ss
imul
daa
inc
daa
and
jnp
mov
iret
in
lcall
testl
out
leave
in
inc
pushf
arpl
jecxz
test
repnz
jnp
cmp
enter
pop
rol
push
fisubrl
maskmovq
divl
jg
xorb
or
or
nop
push
outsb
push
mov
incl
cli
insl
mov
add
sahf
fsubl
or
dec
ss
cwtl
push
lods
or
xor
sub
jmp
xchg
outsb
xchg
pushf
push
xor
xchg
push
stos
repnz
mov
mov
ljmp
jge
jnp
aad
repnz
xchg
jge
and
pop
ret
fstl
pushf
mov
mov
push
inc
je
add
xchg
pop
inc
aas
lcall
clc
call
cmp
fdivl
outsl
int3
stos
cmpsb
cli
inc
loope
add
imul
incl
xchg
mov
arpl
les
xchg
mov
jge
bound
jmp
lcall
outsb
sub
lock
cltd
inc
loop
fnstsw
ljmp
xor
add
mov
insb
adc
push
stc
scas
pop
out
call
movsb
mov
xchg
xor
xchg
in
and
mov
mov
xchg
push
mov
push
jecxz
lods
shll
loop
sahf
cwtl
xor
fwait
or
mov
push
push
lds
ja
jmp
in
and
or
repnz
dec
arpl
into
mov
push
sbb
daa
and
sahf
or
add
inc
nop
jno
hlt
push
inc
sub
ljmp
call
ret
jbe
sti
push
sarl
mov
incb
adc
ljmp
popf
xchg
in
xchg
xchg
sbb
mov
dec
mov
enter
dec
inc
scas
out
dec
mov
jmp
lahf
xor
scas
repz
sub
xchg
mov
sub
mov
xchg
rolb
adc
fsubrl
jl
push
out
aad
aaa
mov
add
mov
or
mov
into
dec
ljmp
pusha
repnz
not
hlt
mov
divb
pop
dec
add
insl
lret
push
xchg
ss
loope
lcall
push
mov
fwait
les
push
mov
jo
xchg
jge
fildll
adc
popa
clc
pop
cwtl
cmp
xchg
call
lods
stc
sbb
xor
sub
or
pop
repz
xchg
mov
inc
pop
or
fcomip
push
sarl
sub
jns
mov
inc
lds
inc
test
stos
movsb
and
cli
scas
push
inc
mov
jge
xor
lea
call
ret
jno
or
jae
fs
pushl
sbb
shll
loopne
mov
mov
ljmp
push
mov
imul
lods
dec
ljmp
inc
aam
es
nop
aas
ljmp
push
je
adc
lcall
lods
pusha
ret
cmp
mov
lds
mov
mov
rorb
dec
mov
and
or
inc
pop
cmp
cmp
or
dec
int3
mov
fisubl
push
dec
and
shrl
inc
xchg
fcmovne
jae
aas
aad
iret
push
popf
ja
mov
jle
push
inc
or
cmp
fidivl
mov
pop
mov
mov
xchg
movl
sub
dec
push
ss
push
mov
adcb
or
or
cmp
hlt
call
xor
cs
jg
sub
adc
bound
push
mov
jmp
daa
insl
jae
outsb
dec
jp
outsl
sbb
es
cwtl
cmp
xchg
or
dec
jb
inc
push
mov
jno
js
imul
push
inc
lods
pop
xor
mov
pushl
mov
pop
call
das
xchg
or
xchg
popf
mov
outsb
xchg
inc
loop
out
in
and
mov
mov
cld
cltd
push
jmp
pushl
aad
inc
insb
inc
imul
mov
int3
adc
icebp
jbe
add
popa
mov
ss
xor
inc
push
iret
pushl
mov
scas
push
mov
adc
mov
pop
loope
sbb
mov
add
mov
pushl
es
xor
rclb
pop
loop
add
data16
not
outsl
and
mov
mov
jecxz
jno
stos
les
adc
mov
mov
sub
lods
pop
jnp
ljmp
inc
test
adc
add
or
cmp
mov
xorb
xor
jmp
xchg
and
ja
pop
add
mov
sub
inc
or
pop
outsb
mov
pushl
cltd
mov
scas
jnp
addb
sbb
mov
aas
stos
adc
icebp
call
in
outsl
punpcklwd
push
shlb
lahf
xchg
int3
xchg
push
and
incl
es
popa
push
or
mov
ds
xchg
insl
jo
push
in
ljmp
daa
pop
stc
loop
inc
pusha
mov
sub
outsb
negl
test
mov
mov
hlt
hlt
add
xlat
mov
xor
inc
jl
xor
inc
xchg
pop
int
and
int
lahf
ret
jmp
dec
dec
jbe
mov
jns
add
popa
jecxz
lock
popf
and
lods
mov
iret
scas
ja
cli
ljmp
mov
and
xlat
adc
roll
add
pushl
in
xor
xchg
bound
push
sbb
insl
clc
out
cmp
hlt
mov
dec
push
inc
jp
orb
xchg
sahf
inc
lret
xor
arpl
ljmp
push
test
imul
fidivl
push
sbb
int3
fistpll
jmp
mov
sub
jmp
int3
out
cmp
mov
sub
movsl
push
cmp
push
mov
pop
inc
jnp
dec
fs
dec
pop
outsb
adc
repz
vsqrtpd
aad
adc
call
mov
sub
push
shrb
hlt
and
mov
mov
mov
mov
cltd
scas
mov
pop
lret
scas
loopne
mov
repz
repnz
fldt
sbb
aaa
lret
push
mov
inc
icebp
outsb
cmp
jge
push
in
and
and
cltd
xchg
mov
fisubrl
dec
adc
mov
push
sub
mov
cmpsb
std
mov
nop
es
paddusb
out
cli
jmp
sbb
mov
mov
mov
cmp
daa
sbb
decl
loope
sbb
test
push
pop
mov
cmp
jbe
enter
scas
lret
decl
fidivrl
sbb
and
aas
pop
decb
mov
pop
jl
mov
xlat
jp
cwtl
adc
iret
out
inc
in
in
jne
xchg
fabs
fucomi
mov
pop
jp
xlat
fstpl
test
adc
jnp
and
test
cmp
ss
push
push
negl
push
jmp
mov
addl
mov
sbb
mov
jno
sub
stc
ret
std
fwait
jge
sbb
and
lret
fcmovbe
adc
das
clc
nop
cmp
ret
mov
fildll
mov
ja
sar
out
xor
test
xchg
cmp
inc
out
xor
xchg
pop
out
out
sbb
adc
aas
mov
xchg
and
xchg
in
dec
or
xchg
test
hlt
arpl
ds
incl
in
cmpsb
insb
lcall
lret
lds
adc
dec
or
fstps
lcall
leave
or
pop
pop
push
push
push
dec
add
sbb
aas
loopne
jbe
aad
sahf
fnsave
mov
jae
pop
gs
push
xor
leave
inc
aaa
daa
inc
dec
sub
decl
cmp
repnz
jbe
and
or
outsl
inc
fisttps
lods
sbb
xchg
sbb
fwait
inc
test
into
mov
xchg
lret
das
aaa
adc
or
shll
bound
dec
push
dec
sbb
aad
cltd
das
int
adc
pop
pop
mov
pop
jns
aam
jge
loopne
push
outsb
stos
mov
cmc
nop
add
into
mov
fistps
xchg
push
mov
jl
push
xchg
pop
fidivrl
lcall
add
test
and
bt
ljmp
inc
pop
pop
adc
add
aam
push
inc
or
cltd
jg
cwtl
js
cmp
arpl
inc
insb
insb
mov
outsl
fs
outsl
imul
gs
jo
push
gs
lahf
jnp
dec
popa
jae
inc
jb
outsl
xor
imul
jne
push
jle
jb
push
dec
imul
push
push
movsb
jne
xorl
imul
in
int
testb
insl
outsb
jb
mov
jo
adc
pusha
jnp
adcb
inc
fs
inc
popa
fs
bound
lret
inc
mov
pop
jge
popf
addb
push
jns
sub
fwait
lods
rclb
add
rcl
cld
dec
mov
push
clc
mov
outsl
ja
push
fs
scas
mov
jae
popa
lods
dec
and
and
ss
xlat
pop
adc
xor
xor
add
je
jo
pop
xor
dec
push
sbb
popa
ret
add
jbe
add
inc
and
arpl
js
inc
outsl
outsb
imul
jne
lods
bound
mov
push
add
inc
outsl
xchg
fsubrs
add
pusha
pop
nop
pop
dec
add
inc
xor
add
sub
and
stos
insl
push
sbb
std
add
cmpsl
sbb
addr16
jb
push
inc
shlb
push
arpl
mov
inc
popaw
bound
push
sbb
js
dec
insl
lods
add
inc
arpl
movsb
jb
mov
in
imul
ja
lea
push
pop
adc
sub
inc
or
fs
fbstp
or
nop
repz
adc
inc
test
adc
arpl
pop
xchg
cmp
inc
adc
xchg
mov
lea
sub
add
xchg
xlat
push
sub
xlat
adc
subb
add
inc
addb
mov
adc
inc
and
fldt
adcb
push
orl
stos
es
adc
adc
sti
or
add
or
mov
inc
data16
mov
xor
addb
inc
xchg
add
ja
rolb
push
add
push
push
add
std
sbb
inc
addl
arpl
sbb
and
add
sub
pop
mov
inc
movsb
push
mov
and
adc
ret
mov
mov
or
mov
mov
out
add
push
inc
mov
push
add
bound
int
or
sub
or
dec
mov
sub
dec
lret
push
mov
adc
imul
push
or
adc
or
pop
push
push
lods
adc
mov
lea
or
adc
jnp
and
dec
repz
insb
popa
add
add
in
call
lock
add
adc
in
and
add
sub
or
or
notl
or
and
dec
lods
mov
xor
jnp
push
xor
sub
and
inc
stos
push
jmp
push
test
xor
mov
xchg
movsl
dec
xlat
or
mov
pop
add
push
or
lret
test
push
pop
les
mov
ret
adc
inc
and
jge
cmpsl
mov
inc
iret
xchg
test
dec
dec
adc
mov
ja
test
les
push
add
inc
adc
cmp
inc
pop
adc
mov
add
and
inc
add
mov
adc
cmp
test
sbb
lahf
and
push
add
pop
pop
lds
and
xor
sub
add
jns
pop
push
push
das
xor
and
sub
add
push
adc
or
arpl
mov
mov
jnp
mov
popa
inc
xor
push
xchg
inc
andb
push
sub
imul
shlb
push
push
jae
add
sbb
cmp
jae
add
mov
add
pop
add
mov
and
out
dec
lea
cmpsl
nop
xor
lea
adc
push
adc
or
mov
sbb
mov
int
test
out
movsb
adcb
out
mov
push
mov
pusha
rolb
pop
mov
aam
stos
lahf
adc
leave
sbb
add
and
mov
and
adc
sub
fadd
mov
andb
lea
or
push
rolb
test
outsl
and
test
add
adc
fcompl
add
arpl
and
inc
adcl
add
cmp
xor
popa
ja
adcb
push
pop
nop
push
xor
mov
fwait
fwait
dec
add
mov
dec
push
mov
subb
cmc
imul
adc
push
or
sbb
adc
add
push
in
int
mov
mov
xor
test
test
add
and
and
rclb
adc
inc
cmp
push
inc
and
mov
cmc
pop
adc
xor
mov
mov
int3
or
ja
mov
pusha
ljmp
fisttpl
inc
add
and
test
sbb
xchg
xor
rorl
movsl
xchg
push
and
mov
inc
and
ret
inc
stos
orl
adc
add
sbb
pop
inc
insb
test
and
or
add
and
push
call
jge
add
or
aaa
jne
inc
mov
adc
mov
dec
lahf
int
subb
push
sub
sbb
or
outsl
add
add
push
mov
jne
xchg
mov
adcb
cmp
or
movsl
sub
and
sub
mov
inc
cmp
shlb
lret
les
mov
xchg
sub
adc
aad
or
mov
add
je
mov
push
pop
inc
dec
pop
push
inc
test
pop
sbb
push
stos
mov
and
movsl
mov
dec
pop
adc
sub
ret
pop
aam
jg
shlb
add
adc
mov
xor
shrl
inc
adc
inc
rorb
pop
mov
jnp
xchg
stos
push
dec
push
xchg
mov
sub
pop
sbb
cmp
inc
mov
inc
cmpsl
push
push
sub
stos
and
push
sbb
les
sub
mov
jno
cltd
mov
dec
adc
add
mov
add
push
inc
std
jg
outsl
push
dec
add
add
dec
or
add
sub
push
lods
sbb
daa
inc
add
adc
pop
xchg
insl
fistpl
sbb
inc
pop
pop
fwait
jge
add
jge
stos
jo
cwtl
outsb
mov
push
add
pop
insl
adc
iret
pop
sbb
cs
add
mov
and
and
movsb
pusha
rolb
mov
enter
outsb
fs
je
mov
leave
shrl
jle
rorb
xchg
pop
leave
mov
pop
and
adc
xchg
pushf
test
ds
sub
and
xor
jb
mov
xchg
cmp
lds
push
xchg
loope
mov
cwtl
push
lcall
jecxz
pop
push
out
xor
dec
xchg
and
inc
inc
adc
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
adcb
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
mov
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
loopne
add
sub
add
add
add
add
add
add
add
add
or
add
sub
inc
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
in
add
add
add
add
add
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
add
add
addb
add
mov
add
in
add
add
add
add
add
add
add
test
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
mov
add
in
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
and
inc
add
add
in
add
add
add
inc
mov
xchg
or
and
and
dec
pop
sub
ds
adc
mov
imul
sbb
jo
jmp
mov
inc
inc
cmpsl
insl
lcall
stos
xor
daa
mov
int
lea
xchg
out
inc
fs
int
imul
dec
inc
daa
sbb
pop
mov
cwtl
add
mov
inc
ljmp
or
jge
rcll
jo
pop
leave
negb
aaa
popf
testl
int
mov
push
sub
jbe
mov
das
jg
lret
inc
loope
xchg
or
inc
in
or
lods
or
je
mov
loop
dec
dec
or
jnp
push
push
popa
mov
ret
fdivrs
dec
jns
cmc
call
mov
lcall
lods
mov
sub
mov
mov
add
jl
icebp
cmp
and
mov
mov
ror
xchg
shrl
pop
cmp
jb
rcr
out
and
add
pop
push
xchg
pop
and
aam
aas
and
call
sbb
sahf
repz
pop
add
xor
shlb
imul
gs
pop
mov
cmp
ds
dec
imull
iret
cld
lret
jge
mov
sahf
dec
shrb
mov
les
daa
ret
cmp
or
cmp
or
mov
insl
out
out
popf
js
dec
in
or
pusha
notl
nop
cltd
js
inc
inc
pop
mov
cmp
lahf
ror
insb
in
int3
iret
gs
mov
pop
fidivrs
hlt
sub
cmp
mov
add
add
cmp
and
adc
inc
xchg
cmp
and
test
adc
cmpsl
lret
or
popf
cmpsb
mov
jnp
push
ss
stc
push
ficoml
inc
in
addl
xor
cs
test
cmp
push
das
ds
cmpsl
mov
dec
add
mov
sbb
ss
mov
mov
and
sbb
jle
fdivrs
repz
mov
adc
and
cli
js
ja
push
lcall
xor
jle
push
or
pop
lock
pop
out
sarb
cmc
mov
cmpsb
cmp
xor
loope
in
add
and
les
xor
stos
inc
cmp
ja
jmp
xchg
pop
fcoml
add
or
dec
cmpsl
push
filds
loop
scas
rorl
adc
push
test
out
pop
cmpsl
imulb
xor
mov
pop
push
or
out
mov
mov
rcll
xchg
mov
sbbl
sub
dec
adc
cmp
lods
and
fwait
inc
push
mov
and
adc
adc
sarl
roll
push
pop
rorb
das
xor
in
and
and
mov
jns
and
fldcw
idivb
jbe
or
add
mov
cwtl
mov
sahf
idiv
xchg
in
inc
xor
stos
dec
js
in
xlat
rcrl
xor
inc
cltd
outsl
sarb
mov
fwait
shll
add
and
ds
inc
cld
lods
stos
mov
loop
ss
fstp
mov
jge
push
and
xchg
push
leave
arpl
es
stc
jmp
pushf
and
sarb
stc
cmp
mov
cmc
pop
and
into
lahf
pop
xor
adc
mov
outsl
jge
xlat
cwtl
xor
mov
nop
jmp
add
repnz
outsl
inc
push
inc
in
push
cmp
loop
inc
mov
out
ret
enter
test
sbb
mov
inc
sbb
mov
scas
lods
push
sti
and
mov
sbb
ss
jb
call
jns
stc
mov
xchg
mov
pop
and
or
xorb
or
int
shll
mov
dec
xor
les
orl
pop
out
adc
jae
bswap
sbb
xchg
fwait
ja
fiadds
jge
sbb
sbb
jb
add
out
lret
test
xchg
shrl
inc
or
dec
aad
daa
out
and
inc
shll
mov
adc
inc
cltd
lret
in
inc
nop
adc
mov
scas
insl
pop
adc
mov
clc
insb
js
rolb
jmp
cwtl
jno
jno
mov
into
das
add
shlb
in
dec
pop
jl
vpsadbw
jp,pn
pop
or
jle
enter
aaa
das
xchg
in
pop
push
daa
dec
mov
jle
fcompl
in
cwtl
cmp
push
call
or
test
leave
decb
cli
push
cmp
jmp
and
lahf
and
mov
mov
cmp
inc
jns
sarl
inc
jecxz
add
sbb
sbb
mov
mov
movl
pop
dec
sub
mov
mov
aam
data16
mov
stc
push
mov
in
inc
mov
jae
movsl
enter
xlat
mov
mov
daa
push
jl
ret
aas
rcrl
in
or
in
popa
outsb
jle
jmp
push
inc
mov
pop
mov
cmpsl
shl
scas
std
mov
flds
jbe
shl
fidivl
add
jb
fdivs
mov
leave
fnstenv
and
jb
pop
scas
pop
aam
jbe
iret
loopne
or
sub
adc
les
cmpsl
call
mov
push
push
jno
xchg
scas
lret
jne
lahf
fadds
fsubrs
push
adc
je
sbb
into
lods
cmp
imul
or
popa
sbb
movsl
pop
pop
dec
push
pop
lds
int3
std
push
xor
lods
dec
aad
xlat
mov
push
inc
in
jb
sub
mov
imul
sbb
je
push
icebp
mov
dec
adc
mov
and
sbb
dec
push
arpl
fadd
jo
je
leave
or
je
cmp
inc
scas
push
std
dec
cld
cmp
cmpl
adc
or
jp
or
ret
cmc
jmp
mov
nop
push
ss
mov
xlat
aaa
xchg
pop
es
aad
cmp
inc
mov
out
cld
cmpsb
js
push
push
cld
mov
inc
sub
push
js
dec
cwtl
xchg
stos
inc
pop
aad
xchg
add
cmp
lret
jne
call
push
pop
sub
xor
or
aas
cwtl
pop
stos
popf
mov
jb
xor
push
mov
cs
inc
popf
imul
push
sub
inc
ffreep
clc
enter
insb
jmp
psrlq
xchg
pop
add
lock
out
fwait
mov
push
sub
jg
adc
push
fidivl
xchg
mov
sbb
outsb
jae
rol
mov
inc
ja
in
jp
js
xchg
outsl
xor
fimull
inc
popa
out
push
mov
sbb
dec
outsb
sbb
or
add
push
pusha
cltd
mov
sub
mov
cmova
jle
cmp
lea
inc
push
dec
aad
aaa
pop
cli
fidivs
xchg
mov
rcrb
push
aam
arpl
lret
cmp
xchg
sar
pop
push
bound
subb
pop
push
mov
or
fdivl
jg
adc
adcb
test
sti
cmpsl
imul
jo
or
mov
push
cli
adc
push
mov
shl
scas
pop
hlt
cmp
mov
xchg
icebp
pop
fs
mov
push
mov
pop
mov
test
xchg
aas
push
aad
int3
in
mov
fisttpl
adc
jo
lret
sub
dec
lods
lcall
pop
dec
and
and
xchg
jmp
mov
in
and
jbe
jb
lods
lea
and
fwait
dec
jge
push
rcll
cmp
mov
mov
adc
adc
lcall
and
mov
dec
sahf
cmp
lea
mov
stc
cmovs
in
adc
addr16
sbb
jmp
into
xor
or
or
push
ljmp
jo
popa
lods
addr16
pop
adc
or
xor
pusha
add
mov
lods
aad
lock
ret
loopne
mov
rorl
mov
movsb
sbb
ficomps
sti
pop
or
inc
xor
lea
bound
iret
push
insb
cmp
cmc
fadd
movsl
call
repnz
sub
iret
fadds
fildl
je
lods
enter
fsubs
sub
mov
xlat
xorl
subl
sub
cmp
fcomps
shrl
mov
mov
adc
mov
cmp
add
sahf
cld
cs
adc
xchg
sub
mov
repnz
mov
mov
sbb
imul
lods
jns
lock
add
insl
das
or
bound
pop
arpl
jmp
in
shll
adc
push
daa
cmp
add
rcr
ficomps
sbb
mov
cwtl
inc
shrb
mov
test
fwait
jmp
inc
ss
das
pop
aaa
mov
push
mov
rcrl
fstpt
test
int3
das
jle
flds
jge
and
clc
test
mov
test
mov
mov
pop
xchg
pop
jbe
je
int
xlat
stc
push
xchg
push
cmp
sarb
adc
dec
fcmovne
push
aas
mov
sbb
push
xor
mov
shrb
popa
test
and
dec
pop
adc
mov
jne
out
lret
pop
shll
pop
inc
push
fcompl
and
or
arpl
aad
inc
es
ds
or
pop
repnz
imul
mov
faddl
and
or
sub
adc
pop
mov
cmpsb
lds
mov
mov
jge
sub
cli
add
push
mov
mov
add
xchg
ds
push
test
adc
fcoms
cmpsl
or
daa
test
fisttpl
jmp
cli
in
cmp
xchg
testb
add
add
enter
std
xor
inc
dec
aas
cmp
xchg
shr
lods
cs
mov
push
dec
dec
sub
pop
movsl
hlt
mov
fnstcw
notb
sbb
lret
hlt
xchg
fsts
idivl
ss
lcall
pop
add
repz
cmp
lock
into
lahf
and
fwait
pusha
stos
punpckhbw
das
or
loop
mov
mov
inc
add
pushf
gs
add
mov
loopne
pop
test
mov
cli
jno
in
shl
movsl
subl
cmp
mov
outsb
xchg
sti
ret
fcoml
mov
iret
mov
inc
cmp
add
inc
add
inc
add
outsl
inc
add
add
outsl
inc
add
add
outsl
inc
add
add
inc
add
inc
add
outsl
inc
add
add
add
add
mov
add
add
outsl
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
ja
outsb
jae
popa
jb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
add
add
jb
push
inc
popa
jb
push
xor
imul
