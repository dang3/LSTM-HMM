sbb
pop
add
xor
add
xor
add
pop
add
pop
add
pop
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
xor
add
pop
add
pop
add
pop
add
add
add
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
add
add
pop
add
add
add
add
push
mov
push
ds
mov
cs
cld
repnz
mov
push
ds
mov
aam
inc
pop
inc
mov
into
daa
inc
sbb
sbb
inc
sbb
push
rolb
sub
sbb
xor
sbb
inc
sub
scas
into
into
into
into
into
faddl
lahf
cs
cs
dec
aas
lcall
cs
adc
dec
xor
repz
dec
lods
inc
sub
inc
mov
je
inc
mov
leave
xor
cs
cmp
cs
enter
pop
aad
das
add
sbb
aad
fidivs
ljmp
cmpsb
cmp
dec
inc
sub
dec
cs
stos
xor
cs
xor
xchg
inc
sub
test
out
fwait
lods
inc
or
sar
inc
lret
je
xor
dec
push
enter
xor
cs
mov
icebp
xor
sbb
mov
inc
or
jmp
cs
mov
and
inc
ret
adc
and
xor
xor
add
les
cs
in
loop
loop
sub
mov
xchg
cs
mov
cs
xor
cs
fisubs
xor
daa
test
out
sbb
xor
xor
xchg
daa
addl
xor
cs
and
cs
sbb
push
fs
idiv
or
cs
sbb
push
inc
inc
sbb
inc
enter
iret
inc
enter
xlat
inc
enter
filds
out
in
loopne
incb
cs
ds
rcr
cmpsb
cmp
mov
xor
xor
inc
or
ljmp
push
inc
mov
mov
xor
roll
ljmp
inc
or
xor
xor
sbb
mov
mov
xor
loopne,pt
ds
cs
cs
movl
xor
cs
enter
scas
inc
or
cs
mov
xor
divl
xor
xor
enter
adc
xor
inc
sub
scas
scas
add
out
xor
cs
or
cs
mov
inc
enter
out
and
adc
xor
or
xor
lahf
lea
cs
out
mov
mov
add
jns
cs
call
mov
lret
lahf
mov
cs
mov
clc
out
add
ljmp
or
lcall
xor
xor
sub
sar
lret
add
inc
enter
xor
daa
inc
mov
mov
sbb
fdivrs
andl
inc
sub
dec
fwait
shld
dec
xor
sub
cs
inc
fsubrs
sbb
test
pop
inc
xchg
inc
fadds
sub
mov
mov
cs
xor
adc
mov
cmc
fiaddl
pop
movsb
sbb
testl
xchg
out
inc
sbb
ljmp
scas
mov
ss
pushl
add
xor
mov
or
test
xor
adc
inc
jbe
mov
jbe
movsb
jbe
adc
inc
push
sub
cmc
ds
jbe
inc
lds
cs
inc
dec
ret
mov
pop
inc
loope
cs
mov
cmp
xor
cs
dec
push
jbe
mov
add
add
outsb
test
cli
sbb
xor
xor
jbe
mov
inc
pop
rolb
inc
mov
mov
into
ss
inc
inc
into
ds
inc
inc
shlb
sub
sub
dec
popf
rcrb
mov
mov
cs
push
inc
inc
scas
sahf
mov
shll
inc
cs
inc
mov
ficoms
call
inc
mov
inc
mov
add
mov
cs
call
dec
mov
sub
and
pop
xor
cs
call
divb
cs
call
inc
scas
mov
mov
scas
inc
inc
mov
dec
enter
push
inc
mov
inc
mov
inc
sbb
dec
enter
push
fs
cs
mov
inc
ds
mov
inc
cs
mov
shlb
fsubs
inc
push
add
sub
cs
das
aas
cs
into
sub
daa
inc
sub
inc
mov
mov
push
mov
mov
cli
mov
jmp
cs
inc
mov
inc
pushl
pop
cs
mov
mov
sub
inc
push
mov
mov
call
fs
sub
shld
inc
sub
inc
push
mov
mov
call
fs
sub
cmovne
inc
sbb
xchg
scas
dec
fmul
decl
cs
sub
ds
pop
add
xchg
scas
add
fcoms
fs
sbb
into
xchg
scas
dec
pop
push
sub
fs
sub
xor
mov
inc
mov
movsb
mov
mov
enter
push
cmp
add
sub
dec
mov
outsb
cs
pop
movsb
and
cs
sub
int
mov
mov
into
mov
aam
aas
call
mov
out
stos
xchg
xor
movsb
cmovl
xchg
cs
and
adc
inc
mov
mov
cs
mov
inc
scas
mov
or
cs
into
push
add
mov
cs
inc
mov
aam
into
push
inc
mov
aaa
jne
cs
mov
aaa
gs
enter
sbb
cli
mov
dec
mov
xor
sub
dec
into
fiaddl
scas
inc
call
sub
cs
mov
inc
scas
mov
fisubrl
daa
inc
scas
mov
cs
cs
call
sub
pop
inc
sub
inc
mov
sbb
sub
daa
sub
lahf
into
inc
mov
sub
inc
scas
mov
sub
or
and
daa
inc
scas
mov
cs
cs
sub
in
mov
inc
pop
xor
mov
inc
sub
cs
inc
mov
inc
mov
mov
dec
shr
cli
inc
enter
ret
cli
inc
enter
ja
enter
inc
cli
inc
enter
daa
fiaddl
cli
inc
sbb
paddusb
inc
sbb
sub
cs
sub
inc
sub
and
inc
sub
pop
cli
inc
mov
inc
mov
inc
mov
inc
mov
cli
inc
mov
inc
mov
dec
ret
inc
enter
and
inc
enter
cli
inc
enter
pop
cli
inc
enter
sub
mov
inc
enter
jne
inc
mov
cs
inc
enter
sub
and
cli
inc
enter
sub
mov
inc
and
cli
inc
sub
sub
cld
stc
cs
or
cli
inc
enter
ret
cld
cmp
sub
add
inc
sub
fdivs
jnp
cs
dec
cmp
sub
mov
inc
mov
sub
sub
pop
dec
fcomps
sub
cs
dec
cmp
add
dec
mov
outsb
inc
scas
inc
sub
sub
out
mov
sub
test
sub
and
pop
and
mov
cs
mov
inc
mov
inc
enter
inc
dec
inc
scas
ss
pop
cmp
sbb
mov
jmp
mov
cs
cmpsb
inc
mov
scas
push
movsb
inc
mov
sub
inc
scas
sahf
xor
outsb
sbb
outsb
inc
shlb
sub
xor
cs
das
xor
cs
ds
mov
jb
cs
cmp
scas
dec
cmp
cs
mov
mov
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
sub
cs
inc
cmp
sub
push
cs
inc
cmp
sub
dec
cs
inc
cmp
sub
outsl
cs
inc
cmp
sub
jge
cs
inc
cmp
sub
sub
cs
inc
imul
mov
sub
sub
sub
inc
mov
sub
cs
cmp
dec
cmp
sub
xor
out
sub
mov
sub
sub
pop
cmp
bound
push
clc
jne,pn
bound
xchg
jmp
mov
js
cs
jmp
and
sbb
mov
cs
into
inc
mov
mov
inc
mov
inc
mov
and
cs
into
inc
mov
sub
sub
pop
inc
inc
inc
dec
inc
enter
incl
dec
enter
enter
xor
shrb
data16
inc
mov
cs
into
inc
mov
sub
sub
scas
cmp
daa
cs
js
fsubs
enter
inc
mov
enter
inc
enter
xor
inc
enter
int3
into
adc
add
inc
mov
xor
inc
push
jle
aas
outsl
cs
xor
test
testl
mov
cs
roll
inc
fmuls
push
out
dec
sarb
inc
fdivr
inc
fmuls
inc
fmuls
inc
fdivr
dec
popf
push
inc
fsubr
xor
sub
fmul
inc
fsubr
mov
inc
xor
xchg
and
or
inc
push
xor
iret
xor
xor
push
push
inc
sub
inc
inc
xor
xor
iret
inc
fsubs
cmpsb
push
inc
enter
xlat
xor
enter
inc
fcoms
xor
pop
inc
fadds
movsb
dec
ja
cs
xor
pop
inc
shlb
inc
fcoms
inc
enter
dec
cmp
sub
out
inc
enter
xor
shrb
outsb
sub
xor
add
into
inc
mov
sub
sub
outsb
inc
das
iret
xor
cs
daa
inc
enter
inc
mov
xor
cs
cs
cs
pop
mov
sub
sub
mov
inc
mov
inc
mov
inc
mov
nop
dec
mov
insb
inc
xchg
inc
mov
push
pushf
into
inc
mov
adc
inc
nop
inc
ds
push
test
xor
inc
dec
in
ljmp
inc
pop
inc
scas
ss
fimull
xor
cs
dec
aaa
sub
cs
dec
aaa
sbb
cs
xor
cs
cs
cs
dec
aaa
fldt
cs
adc
lds
cs
ret
test
xor
dec
popf
into
inc
inc
enter
mov
aaa
mov
cs
mov
ljmp
fdivrl
nop
push
sub
push
xor
dec
popf
and
popf
loop
xor
push
add
push
inc
enter
push
mov
inc
xor
lret
xor
dec
popf
and
popf
loopne
xor
push
test
push
inc
sub
inc
sub
inc
lods
cmp
divl
data16
popf
and
popf
loopne
sub
daa
ds
mov
dec
popf
and
popf
loop
inc
enter
pop
xor
inc
enter
pop
adc
enter
into
dec
dec
popf
push
inc
sub
ds
inc
enter
cmovl
lock
xchg
scas
scas
add
shll
push
inc
les
ficoml
nop
dec
aaa
sub
cs
mov
cs
das
das
cs
mov
scas
add
cs
fdivrs
dec
inc
dec
inc
enter
xor
dec
dec
aaa
lods
cs
and
and
pop
movsb
mov
inc
mov
xor
xor
mov
fisubrl
cmp
mov
sub
pop
cmp
pop
pushl
cs
mov
into
jbe
sub
aas
push
cs
sub
xchg
scas
inc
mov
rolb
inc
fadds
xchg
sarl
push
xor
inc
dec
inc
cmp
rcll
and
mov
popf
rcl
sbb
sub
inc
fdivrs
inc
les
into
sub
cmp
daa
add
mov
mov
xor
sahf
xor
xor
fdivrs
inc
enter
add
scas
mov
push
scas
add
shll
xor
sbb
xchg
scas
shll
mov
cmp
in
xor
test
mov
into
ss
fcoms
cmp
push
loopne
inc
fcoms
xor
push
mov
ds
sbb
inc
fmuls
inc
fsubs
dec
popf
push
inc
adc
sub
and
cmp
dec
xor
xor
xor
enter
inc
fcoms
xor
pop
inc
sbb
movsb
xchg
mov
adc
xor
inc
into
ss
fcoms
cmp
sbb
scas
shll
dec
inc
scas
ss
cs
fmull
cs
fadds
rorl
cs
ds
scas
scas
add
adc
xor
ds
mov
xor
ds
lret
sub
call
inc
enter
sbb
inc
sub
xchg
roll
mov
add
movsb
lret
ss
popf
inc
mov
mov
sub
movsb
sub
lret
es
movsb
and
inc
mov
sbb
mov
mov
inc
scas
sub
int
push
dec
cs
dec
inc
scas
mov
sub
push
dec
sub
dec
inc
shlb
pop
inc
mov
cmp
pop
inc
mov
enter
pop
dec
xor
sub
in
ljmp
inc
pop
xor
ds
xchg
sub
sub
mov
sub
test
sub
and
mov
cs
int
aaa
sub
cs
sbb
cs
or
cs
mov
xor
cs
and
loop
cmp
xor
cs
mov
xor
inc
mov
dec
aaa
shlb
cs
mov
inc
ds
mov
fiaddl
cmpsb
xor
inc
sbb
mov
cs
fiadds
push
cli
inc
mov
cli
inc
mov
mov
cli
inc
mov
call
inc
mov
inc
mov
rolb
pop
mov
adc
or
mov
push
adc
mov
adc
notb
clc
cli
mov
sub
mov
fdivrs
ds
enter
inc
sub
mov
nop
inc
inc
inc
into
pop
inc
mov
push
inc
cs
mov
push
inc
inc
push
pop
inc
shll
pop
movsb
push
sbb
ss
fidivrl
push
inc
into
inc
xor
sahf
movsb
sub
mov
enter
enter
mov
mov
shrb
into
inc
mov
test
decl
mov
inc
sahf
inc
mov
sub
sbb
cs
sbb
xor
sbb
xchg
rorl
outsb
cli
movsb
lret
lock
mov
inc
dec
inc
mov
push
dec
inc
lret
mov
sbb
mov
xor
into
inc
mov
xor
into
call
ss
mov
cmp
push
pop
rolb
inc
xor
ds
scas
shlb
cs
mov
xor
inc
dec
popf
mov
adc
xor
sahf
sbb
enter
enter
mov
mov
rolb
pop
sub
into
cmp
cs
incl
scas
push
sub
fcmovu
dec
daa
sub
adc
inc
lret
inc
adc
scas
push
repnz
sub
inc
xor
sahf
sbb
mov
dec
enter
sbb
inc
enter
fsubrl
jle
mov
xor
xor
sub
cmpsb
sub
sahf
pop
mov
cli
inc
fsubrl
xor
cs
fildl
inc
mov
inc
xor
mov
scas
in
in
mov
fadds
dec
popf
sarb
dec
popf
mov
aam
xchg
sub
cmp
push
insb
inc
mov
mov
inc
fidivrs
xor
xor
mov
xor
and
icebp
xchg
scas
in
in
mov
fadds
xor
pop
sub
sub
cs
inc
mov
cli
inc
mov
sub
fiaddl
ds
inc
mov
fdivr
inc
mov
aaa
test
cs
aaa
jo
cs
mov
xor
mov
add
sub
inc
call
xor
cs
aaa
lahf
cs
sub
xchg
pop
dec
popf
cmpsl
sub
ret
inc
sub
inc
sub
xchg
pop
dec
popf
cmpsl
and
ret
inc
sub
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sub
cli
xchg
and
xor
cli
mov
cli
inc
sbb
cli
inc
sub
cli
xchg
adc
xchg
and
test
inc
sbb
cli
inc
sub
cli
movsb
sub
sbb
xor
inc
xor
ds
sub
xchg
pop
cli
xor
cs
cmp
sub
xchg
pop
cli
inc
cmpsl
sub
ret
inc
jecxz
test
sub
cs
movsb
sub
insb
inc
sub
xchg
pop
inc
mov
push
out
cs
test
movsb
mov
add
in
ljmp
inc
pop
sar
inc
fisubrl
cli
test
stos
mov
cs
xchg
lret
stos
sub
cs
sub
sub
push
call
shrl
mov
sub
cs
movsb
lds
xor
fsubs
dec
fdivl
xchg
fildl
xchg
sub
inc
inc
push
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
in
and
or
xchg
lret
dec
aaa
mov
ljmp
fcmovu
mov
sub
sub
sub
cmp
nop
xchg
in
cmpsb
dec
push
lock
mov
sub
cs
inc
movsl
mov
cs
test
cs
xchg
mov
mov
cs
movsb
mov
xor
sbb
dec
adc
xchg
adc
xchg
rorl
fsub
ret
inc
pop
das
add
das
and
mov
or
xchg
mov
sar
inc
mov
inc
mov
fadds
rcr
mov
sub
sub
sub
mov
cli
test
mov
cli
xchg
ret
mov
cli
movsb
ret
push
fmull
mov
lods
mov
sub
cs
movsb
lds
xor
sbb
dec
adc
xchg
sbb
cli
inc
inc
into
out
cs
mov
cs
test
movsl
mov
cs
xchg
lds
cli
movsb
lds
mov
or
push
cmp
scas
ljmp
inc
mov
fimull
shrl
sub
cs
cs
fsubs
cli
movsb
mov
test
xor
mov
xor
cmpsb
dec
inc
int
mov
xchg
sub
cli
movsb
pop
sbb
xchg
scas
in
cli
inc
xor
daa
ljmp
pop
inc
mov
rolb
cmp
ds
dec
inc
enter
dec
inc
inc
aas
ds
fadds
inc
mov
rolb
cmp
ds
inc
mov
call
inc
pop
xor
mov
sub
or
pop
mov
xchg
adc
xor
movsb
sbb
xor
aam
inc
mov
inc
mov
mov
cmp
mov
mov
cmp
mov
mov
cmovl
dec
cs
mov
mov
mov
jecxz
sub
sub
cmovno
cli
inc
mov
xchg
loope
mov
aaa
pop
out
cs
call
jecxz
rcrl
inc
call
loope
push
out
cs
call
mov
js
cs
aad
mov
fcoms
dec
lea
mov
xchg
mov
rorl
dec
mov
cs
mov
mov
cs
mov
mov
cmp
cmp
call
stos
scas
das
adc
das
mov
xchg
filds
daa
xchg
mov
xchg
cmp
insb
movsb
sbb
xor
sub
mov
fadds
xor
pop
sub
cmovno
daa
inc
enter
daa
das
adc
inc
enter
mov
ds
dec
inc
enter
mov
mov
aas
ds
enter
mov
shll
xchg
aam
sub
inc
mov
daa
or
out
lods
mov
js
xor
out
and
jg
cs
mov
and
out
mov
mov
sub
sub
mull
or
fidivs
cs
pop
xchg
sbb
bsr
sub
or
xor
cs
mov
mov
unpcklps
inc
mov
pop
xchg
in
ss
dec
fwait
scas
mov
inc
mov
xchg
cmp
mov
xchg
mov
cmp
lds
cmovne
movsb
mov
mov
pop
xchg
mov
mov
cmovne
lret
test
xlat
inc
mov
pop
xchg
in
ss
aas
mov
inc
enter
dec
pop
das
adc
das
mov
xchg
mov
mov
iret
test
inc
enter
xor
inc
mov
into
add
inc
enter
xor
inc
inc
enter
iret
inc
mov
cmp
sub
inc
enter
dec
aaa
xor
enter
dec
pop
das
adc
das
mov
dec
fwait
roll
test
int
lds
cmovl
dec
xor
inc
mov
mov
lea
inc
enter
pop
xchg
mov
mov
cs
mov
pop
or
lret
sub
xchg
mov
dec
dec
cmp
enter
pop
xchg
mov
mov
cs
mov
pop
or
and
sub
inc
mov
int
aaa
mov
cs
mov
pop
or
subb
sub
mov
fadds
xor
pop
sub
or
daa
inc
enter
pop
mov
sub
pop
or
iret
sbb
xlat
pop
or
fists
mov
sub
or
divl
mov
sub
inc
mov
inc
enter
mov
xchg
mov
cs
xor
xchg
rcrl
xchg
lret
xor
inc
mov
xor
inc
call
cs
enter
inc
xchg
mov
inc
enter
pop
inc
mov
filds
daa
xchg
lret
xchg
mov
daa
xchg
lret
test
dec
inc
push
mov
movsb
mov
cs
mov
xchg
mov
xor
xchg
rcrl
xchg
fildl
inc
mov
mov
mov
inc
fdivr
inc
mov
filds
daa
xchg
mov
inc
mov
mov
enter
xchg
fildl
sbb
xchg
mov
test
inc
enter
daa
xchg
mov
test
movsb
rcrl
pop
inc
mov
filds
daa
xchg
mov
xor
movsb
iret
adc
inc
mov
lds
adc
inc
mov
lds
mov
fists
dec
mov
movsb
mov
push
mov
filds
call
mov
xor
sar
mulb
sub
xchg
mov
sub
inc
mov
mov
daa
dec
xor
xchg
mov
sub
daa
xor
pop
xchg
mov
pop
dec
xor
in
ljmp
pop
xor
movaps
pop
daa
or
mov
sub
mov
cmp
iret
jo
ds
lods
mov
sbb
mov
sub
or
pop
leave
or
pop
xchg
lret
xor
sbb
xchg
mov
inc
mov
mov
call
mov
mov
xor
xor
cs
sub
jmp
sub
xor
cs
mov
mov
sub
sub
mov
sub
inc
enter
xor
aas
enter
daa
inc
mov
cs
enter
xor
dec
lea
enter
cmovne
call
sbb
dec
fcoms
in
das
mov
xor
aas
enter
daa
dec
fcoms
xor
dec
lea
test
add
dec
fcoms
test
test
aas
fcoms
out
inc
fcoms
mov
mov
rol
aas
fcoms
daa
inc
fsubs
xchg
lret
xor
dec
lea
dec
iret
inc
push
bound
daa
xchg
lret
xor
dec
lea
enter
push
xchg
lret
xor
dec
lea
enter
xor
dec
lea
mov
xchg
mov
js
cs
mov
pop
cmp
mov
sub
xor
pop
leave
or
sub
or
sub
inc
mov
lret
dec
aaa
mov
cs
mov
jmp
cmp
ljmp
pop
xor
xor
fiaddl
cmp
sbb
xchg
scas
add
cmp
lcall
sub
inc
pushf
inc
filds
incl
sbb
pop
sub
sub
inc
dec
cmp
sub
sub
dec
cmp
sub
pop
sub
dec
inc
lcall
in
in
shll
add
xor
xor
cs
scas
cmp
push
nop
inc
push
add
sar
inc
push
mov
scas
inc
push
ds
rcrl
pop
xchg
sar
inc
mov
dec
cmp
sub
ds
sub
ss
inc
mov
xor
fcmovu
dec
aaa
lea
cs
cs
popf
scas
outsb
inc
mov
shll
pop
lahf
mov
cs
mov
cs
enter
daa
cs
roll
in
cli
movsb
enter
dec
xchg
shrl
sub
popf
enter
inc
dec
inc
inc
cli
mov
dec
popf
inc
lods
sub
cs
movsb
int
inc
inc
call
das
cmpsb
insb
cs
mov
ds
popf
and
dec
stos
cmpsb
insb
movsl
mov
cs
test
movsb
int
push
add
sub
enter
enter
add
add
inc
sbb
dec
popf
ret
das
cmpsb
nop
cs
push
mov
sub
sub
in
ljmp
enter
shrl
sub
xchg
scas
cli
movsb
enter
scas
add
xor
pop
inc
mov
sbb
scas
add
xchg
sbb
into
inc
mov
dec
mov
dec
cmp
inc
mov
cs
mov
cs
mov
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
xor
cs
mov
cs
inc
mov
iret
sub
cmp
cs
mov
push
xor
xor
inc
sub
lret
fisubrl
ljmp
inc
sub
mov
pop
inc
fdiv
inc
sub
movsb
and
pop
xchg
in
call
sbb
add
inc
sub
dec
popf
cmpsb
in
movsb
ljmp
adc
inc
data16
ds
cmpsb
mov
fmuls
test
ds
cs
fsub
inc
fsubs
xor
inc
mov
aam
sbb
enter
push
cmp
daa
inc
sahf
inc
mov
ss
inc
call
jmp
in
shll
inc
mov
sub
xor
inc
xchg
shll
mov
inc
dec
fbstp
cs
push
cwtl
mov
cmp
inc
xor
xor
movsl
sub
cs
movsb
mov
out
xchg
scas
cli
inc
xor
fbstp
cs
faddl
inc
cmp
xor
cs
ds
add
das
mov
aas
ds
mov
inc
das
and
or
cmp
xor
cs
in
mov
inc
pop
xor
cs
ss
mov
push
inc
roll
xor
outsb
xor
roll
int3
sbb
inc
inc
cmp
daa
sub
xor
cs
fwait
inc
xchg
mov
cs
ds
aaa
dec
cs
sub
std
sbb
fadds
xor
push
inc
scas
ss
ds
loopne
xor
inc
aam
inc
mov
inc
xor
inc
call
cmp
sahf
dec
mov
mov
mov
cmp
pop
inc
mov
enter
movsb
mov
xor
fsubrl
add
inc
sbb
mov
mov
sub
outsb
inc
enter
inc
test
inc
push
dec
xor
movsb
lret
adc
test
pop
add
add
sub
scas
into
pushl
clc
imull
mov
sub
sub
mov
sub
inc
mov
mov
cs
aas
mov
inc
mov
cs
fcoms
xchg
fnsave
dec
roll
pop
scas
aas
enter
pop
inc
fdiv
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
scas
dec
fsubrs
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
scas
inc
fcomp
inc
fcoms
xchg
fnsave
dec
roll
pop
scas
inc
enter
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
scas
sub
inc
enter
xor
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
scas
sub
enter
dec
aaa
xor
mov
mov
cs
ds
scas
call
sub
push
ds
xor
add
sbb
dec
mov
adc
inc
scas
mov
add
add
enter
iret
add
cs
mov
sub
mov
sub
mov
mov
call
add
cs
fcoms
xchg
fnsave
dec
roll
pop
xchg
enter
pop
inc
fmul
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
aas
mov
cs
rorl
pop
xchg
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
aas
mov
cs
rorl
pop
xchg
out
fcoms
xchg
fnsave
dec
roll
pop
xchg
out
push
inc
enter
xor
dec
dec
mov
cs
ret
dec
dec
xchg
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
cs
inc
fcoms
xchg
fisttpll
mov
cs
dec
rorl
pop
xchg
inc
inc
enter
dec
aaa
xor
mov
mov
cs
ds
cmpsl
inc
mov
into
inc
mov
into
jmp
sub
inc
scas
mov
inc
enter
add
sub
iret
add
cmpsl
xor
mov
xor
ds
sub
mov
sub
inc
enter
xor
aas
enter
pop
inc
call
inc
mov
movsb
enter
add
cs
fcoms
xchg
fnsave
dec
roll
xor
enter
pop
inc
fadd
xchg
int
lret
movsb
rcrl
mov
sub
das
adc
das
mov
xor
aas
enter
pop
xchg
fnsave
dec
inc
mov
cs
rorl
xor
sub
inc
enter
fsubrs
test
aas
fsubrs
fsubrs
mov
rol
aas
fsubrs
fnsave
dec
inc
mov
cs
shll
inc
fsub
inc
fcoms
xchg
fnsave
dec
roll
xor
out
push
inc
enter
xor
dec
push
mov
cs
ret
sub
xor
pop
xchg
int
lret
dec
ret
inc
fsubrs
fcoms
xchg
fisttpll
mov
cs
dec
ret
sub
inc
enter
dec
addr16
mov
cs
in
xchg
in
dec
inc
mov
movsb
enter
pop
sub
lahf
inc
enter
add
sub
inc
jmp
enter
dec
xor
xor
pop
inc
call
movsb
mov
and
mov
mov
fadds
rcl
inc
mov
mov
cs
sub
inc
mov
aam
pop
inc
mov
inc
ds
mov
inc
cs
cmpsb
inc
enter
mov
rclb
mov
cs
sub
cs
mov
cmp
mov
sbb
call
and
inc
mov
push
ds
mov
inc
xor
daa
shll
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
mov
sub
movzbl
mov
sub
cmp
mov
mov
sbb
mov
mov
mov
sub
mov
leave
ret
push
mov
sub
mov
mov
or
mov
mov
sub
mov
cmp
mov
mov
adc
mov
leave
ret
push
mov
sub
cmp
mov
movzwl
sbb
mov
cmp
movzwl
mov
adc
mov
movzbl
add
mov
leave
ret
push
mov
sub
cmp
mov
mov
adc
mov
mov
xor
mov
mov
mov
sub
leave
ret
push
mov
sub
mov
mov
and
mov
mov
mov
or
mov
mov
mov
sub
mov
leave
ret
push
mov
sub
mov
mov
and
mov
mov
xor
mov
movzwl
movzbl
and
mov
leave
ret
push
mov
sub
mov
mov
add
mov
mov
sub
mov
mov
movzbl
sub
leave
ret
push
mov
sub
cmp
mov
mov
adc
mov
movzbl
movzbl
add
mov
mov
mov
sub
mov
leave
ret
push
mov
sub
movl
mov
movl
cmpl
jl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
mov
push
push
mov
cmp
movzbl
sbb
mov
xor
mov
add
cmp
je
cmp
ja
mov
sbb
jmp
lea
mov
mov
mov
adc
mov
mov
sbb
mov
mov
mov
mov
xor
orl
add
cmp
je
mov
mov
mov
mov
mov
add
cmpl
movl
movb
je
movl
cmpl
jg
lea
mov
mov
movzwl
sub
mov
mov
sub
mov
mov
mov
and
mov
mov
xor
add
mov
test
mov
sar
mov
mov
xor
sub
mov
sub
sub
mov
pushl
pushl
mov
mov
subl
xorl
orl
pushl
call
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
jmp
movl
cmpl
ja
mov
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
cmpl
ja
movl
mov
mov
movzbl
add
mov
push
lea
and
mov
movzbl
add
mov
mov
imul
imul
mov
lea
and
mov
or
xor
mov
mov
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
movzwl
mov
add
mov
mov
xor
xor
lea
xor
mov
mov
sub
mov
mov
imul
mov
and
mov
xor
add
mov
mov
and
mov
imul
lea
and
mov
or
cmp
jne
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
cmp
mov
movzwl
sbb
movzbl
mov
or
mov
mov
mov
xor
mov
leave
ret
push
mov
sub
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
push
call
cmpl
jb
mov
movl
cmpl
jbe
mov
movzbl
and
mov
mov
mov
mov
test
lea
mov
mov
mov
adc
mov
mov
mov
movzwl
mov
and
mov
mov
xor
push
mov
add
mov
mov
mov
and
mov
mov
mov
push
pop
sub
add
cmpl
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
sub
movl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
mov
and
mov
mov
movl
cmpl
jb
mov
xor
mov
add
mov
mov
shlb
movl
mov
xor
add
mov
movzwl
or
mov
mov
mov
lea
sbbl
push
mov
subl
orl
xor
add
mov
add
mov
mov
push
pushl
add
pushl
push
addl
push
mov
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
movl
mov
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
xor
movl
cmpl
ja
mov
mov
or
mov
mov
mov
sub
mov
mov
add
mov
mov
incl
mov
mov
shl
mov
mov
or
mov
push
mov
mov
mov
mov
cmp
xorl
sbbl
shl
mov
mov
mov
shl
mov
mov
mov
or
mov
shl
mov
cmp
mov
mov
sbb
mov
mov
mov
mov
mov
mov
rcr
mov
mov
dec
not
and
mov
mov
lea
mov
mov
mov
mov
sub
mov
jmp
mov
mov
or
mov
sub
cmp
mov
mov
adc
mov
mov
test
mov
adcb
mov
mov
sub
xor
cmp
mov
jne
mov
pop
leave
ret
movl
movl
movl
movl
mov
ret
push
mov
sub
push
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jge
movzbl
sub
mov
mov
adc
movl
movl
cmp
mov
mov
adc
mov
push
push
mov
xor
mov
shl
mov
mov
add
mov
movl
call
test
je
call
mov
mov
xor
mov
and
mov
add
mov
mov
mov
sub
mov
movl
mov
movl
mov
mov
and
mov
mov
xor
add
mov
mov
mov
sub
mov
xor
mov
add
mov
cmp
je
mov
movzwl
rcr
mov
xor
add
mov
or
imul
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
jne
movl
cmpl
ja
movzbl
movzbl
xor
add
add
mov
mov
movzbl
xor
add
imul
movzbl
sub
jmp
mov
cmp
mov
sbb
mov
movzbl
xor
sub
sub
cmp
mov
mov
sbb
mov
mov
mov
rcl
mov
mov
xor
cmp
adcl
add
ror
cmp
mov
mov
sbbb
mov
mov
mov
xor
add
imul
xor
add
imul
mov
xor
mov
xor
cmpl
jnp
mov
xor
jmp
movzwl
add
mov
mov
add
mov
add
imul
incb
mov
test
mov
sbb
mov
xor
add
imul
add
mov
add
mov
xor
add
imul
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
call
cmpl
jb
decb
movl
cmpl
jae
mov
xor
mov
mov
sbb
lea
mov
mov
mov
sbb
mov
mov
xor
lea
xorl
xor
xor
mov
add
cmp
jne
mov
xor
add
pop
pop
mov
mov
pop
leave
ret
push
mov
push
push
pop
mov
test
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
jmp
mov
xor
add
mov
inc
cmp
jb
push
push
push
push
xor
call
test
jne
mov
mov
cmp
jne
call
movl
cmpl
jbe
mov
mov
mov
mov
or
xor
lea
mov
mov
mov
xor
mov
or
mov
mov
add
mov
inc
movzwl
xor
mov
cmp
jne
test
je
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
pop
mov
mov
mov
imul
mov
sub
sub
mov
xor
add
mov
dec
jne
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
inc
mov
cmp
je
mov
cmp
jbe
dec
mov
jmp
test
jne
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jb
mov
xor
mov
div
lea
mov
cmp
jne
push
push
call
mov
add
cmp
jne
pop
ret
push
push
movl
call
cmp
je
push
mov
cmp
jae
test
je
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
div
lea
mov
jmp
test
jne
mov
jmp
dec
mov
cmp
jne
pop
ret
push
mov
sub
mov
movl
movl
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
jmp
cmpl
jb
mov
mov
sbbb
jmp
mov
and
mov
rolb
mov
push
movl
cmpl
je
mov
add
mov
mov
or
mov
mov
mov
andb
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
mov
xor
movzwl
inc
mov
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
subl
xorl
call
lea
mov
mov
mov
movzbl
or
mov
add
mov
xor
pop
mov
imul
add
pop
pop
leave
ret
push
mov
sub
push
push
movl
lea
movl
push
mov
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
movl
cmpl
jae
mov
mov
adc
mov
mov
sbb
mov
lea
mov
mov
movzbl
adc
movl
mov
mov
cmp
mov
sbb
mov
test
jne
mov
mov
cmpl
je
push
addl
andl
push
add
push
pushl
pushl
call
add
mov
mov
test
je
movl
mov
jmp
cmp
je
mov
add
mov
mov
xor
xor
xor
add
lea
div
push
push
shl
orl
mov
call
mov
or
pop
pop
test
je
mov
pushl
push
push
push
push
pushl
pushl
call
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
mov
movl
cmp
jne
movl
cmpl
jg
mov
inc
mov
mov
mov
push
pushl
mov
call
mov
jmp
cmp
jne
mov
mov
cmp
xorl
subl
sbbl
push
push
push
push
push
pushl
call
add
movzbl
sub
mov
mov
dec
mov
sub
xor
mov
xor
mov
add
jne
mov
mov
and
mov
mov
xor
orl
xor
xor
add
add
div
shl
mov
pushl
pushl
call
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
cmp
jo
mov
shlb
jmp
mov
mov
add
mov
mov
andb
lea
movl
cmpl
je
mov
movzbl
or
mov
xor
mov
mov
push
test
mov
sbb
xor
pop
div
cmp
jbe
mov
mov
sub
mov
xor
inc
xor
mov
cmp
jne
pop
xor
pop
inc
movl
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
je
cmpl
jne
push
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
mov
movl
cmpl
jne
mov
mov
adcb
mov
add
mov
movzbl
or
mov
cmp
mov
adc
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
call
push
pushl
pushl
pushl
call
jmp
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
movzwl
or
lea
mov
mov
mov
mov
mov
movzbl
and
mov
add
pop
movzwl
add
mov
mov
mov
mov
xor
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
push
movl
cmpl
jb
push
mov
cmp
mov
mov
sbb
mov
xor
push
mov
mov
xor
movl
mov
add
movl
mov
mov
mov
mov
and
mov
xor
add
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
lea
mov
lea
mov
cmp
mov
shlb
lea
mov
lea
mov
lea
mov
movzwl
rol
mov
lea
mov
lea
mov
add
mov
lea
mov
lea
mov
xor
mov
lea
movl
cmpl
je
movzbl
sub
mov
mov
sub
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
test
mov
adc
mov
mov
lea
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
lea
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
shlb
mov
movl
mov
movzbl
mov
xor
mov
movl
mov
pushl
mov
push
push
lea
push
mov
mov
pushl
pushl
call
push
push
lea
push
movl
cmpl
jg
mov
xor
mov
mov
adc
mov
adc
mov
or
mov
mov
pushl
pushl
call
mov
movzbl
xor
mov
mov
mov
mov
mov
xor
movl
xorl
xor
lea
add
cmp
je
mov
mov
mov
imul
mov
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jb
add
mov
mov
mov
mov
cmp
mov
shlb
xor
add
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
xor
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
cmpl
jle
pop
div
cmp
je
cmp
je
push
cmp
mov
mov
adc
xor
mov
pop
div
cmp
jae
cmp
je
mov
mov
add
mov
push
xor
cmp
jle
mov
movzwl
and
mov
jmp
mov
mov
add
mov
mov
mov
or
mov
mov
pop
xorl
addl
andl
div
cmp
ja
cmp
je
xor
add
mov
or
mov
mov
div
cmp
je
cmp
jne
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
movl
cmpl
ja
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
or
mov
mov
add
mov
mov
add
mov
mov
orb
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
push
push
cmp
orl
sbbl
call
cmp
jle
xor
leave
ret
push
push
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
call
mov
dec
mov
jmp
mov
lea
call
movl
cmpl
jge
cmp
mov
mov
adc
mov
push
pop
push
mov
pop
push
cmp
mov
mov
adc
mov
pop
push
mov
mov
mov
mov
mov
mov
and
pop
push
mov
mov
pop
mov
mov
and
push
mov
mov
pop
push
cmp
mov
mov
sbbb
mov
pop
mov
mov
cmpl
jp
mov
sub
mov
jmp
mov
shlb
mov
rcrb
mov
mov
mov
mov
mov
mov
push
mov
mov
and
mov
mov
mov
mov
mov
movl
cmpl
jle
mov
or
mov
shr
mov
mov
mov
addb
mov
pop
mov
cmp
jp
mov
or
jmp
movzwl
or
mov
mov
add
mov
mov
push
mov
movzbl
neg
mov
mov
mov
mov
mov
pop
push
mov
pop
push
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
pop
mov
mov
xor
push
push
mov
mov
lea
mov
push
mov
mov
mov
mov
call
add
lea
push
call
test
je
lea
lea
call
movl
cmpl
jl
mov
and
xor
mov
call
mov
call
mov
call
mov
call
mov
mov
sub
lea
mov
test
mov
sbb
mov
mov
lea
call
mov
mov
call
mov
mov
call
mov
mov
mov
add
mov
call
test
movzbl
mov
adc
mov
mov
mov
call
mov
mov
mov
sub
mov
call
call
pop
pop
andl
test
je
call
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
mov
movl
cmpl
je
mov
mov
adc
mov
mov
mov
xor
mov
xor
mov
mov
mov
add
mov
mov
jmp
push
call
push
mov
sub
movl
lea
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
or
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
call
test
je
push
push
push
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
cmp
jne
movl
cmpl
jne
mov
mov
sbb
mov
mov
mov
add
jmp
cmp
jne
lea
andl
mov
call
mov
mov
add
mov
mov
mov
mov
and
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
push
push
movl
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
movl
movl
cmpl
jg
mov
or
mov
mov
and
mov
mov
adcb
movl
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
pushl
mov
mov
pushl
lea
push
call
call
test
je
mov
mov
neg
mov
mov
sub
mov
addl
jmp
mov
mov
xor
mov
mov
mov
mov
lea
mov
movzbl
add
mov
add
mov
mov
mov
movl
leave
ret
push
mov
sub
mov
mov
mov
mov
sub
movl
movl
cmpl
jb
mov
mov
and
mov
mov
sub
mov
mov
xor
mov
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
push
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
movl
mov
mov
mov
push
push
mov
movzbl
or
mov
mov
xor
xor
cmp
mov
sbb
mov
sub
mov
mov
mov
movl
mov
mov
add
mov
mov
xor
mov
add
push
test
movzwl
adc
mov
mov
movl
cmpl
jae
mov
mov
xor
mov
mov
mov
and
lea
mov
mov
mov
adc
mov
orl
mov
imul
mov
movl
addl
mov
mov
mov
orb
mov
xor
lea
mov
lea
mov
mov
mov
or
mov
xor
mov
add
mov
xor
movzwl
add
cmp
ja
movl
cmp
mov
movzwl
sbb
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
cmp
lea
mov
mov
mov
sbb
mov
mov
xor
cmp
mov
adc
mov
add
mov
movzwl
cmp
jne
mov
mov
xor
add
imul
mov
mov
mov
push
call
test
je
mov
movl
cmpl
jle
mov
or
mov
cmpl
ja
mov
mov
adc
jmp
mov
sbb
movzbl
ror
mov
xor
add
mov
rol
mov
movzbl
push
mov
mov
xor
add
imul
mov
mov
call
test
jne
mov
mov
xor
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
mov
mov
call
test
jne
movl
cmp
jl
mov
movzbl
sub
jmp
mov
mov
or
mov
mov
mov
xor
mov
mov
xor
lea
movl
cmpl
jg
mov
mov
subb
mov
mov
sub
mov
xor
xor
xor
xor
mov
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
pushl
call
jmp
mov
add
movzwl
cmp
mov
jbe
jmp
movl
mov
mov
xor
xor
lea
xor
mov
add
mov
mov
xorl
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
cmp
je
addl
mov
mov
cmp
je
andl
mov
xor
sub
movl
cmpl
jae
mov
mov
xor
add
mov
mov
imul
mov
jmp
mov
xor
sub
cmp
mov
sbb
add
mov
addl
mov
mov
xor
add
cmp
je
addl
jmp
cmpl
ja
mov
mov
add
jmp
mov
mov
sbb
movzbl
movzwl
and
mov
mov
mov
xor
lea
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
orl
mov
imul
movl
cmpl
jae
mov
mov
mov
xor
mov
xor
movzwl
xor
mov
add
xor
cmp
pop
pop
pop
je
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
lea
push
mov
mov
mov
push
mov
movl
mov
mov
mov
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
je
mov
add
xor
cmp
je
mov
cmp
jne
mov
xor
add
cmp
jb
mov
addl
mov
cmp
jae
mov
mov
and
mov
movzwl
mov
dec
cmp
ja
mov
mov
add
mov
addl
mov
andl
mov
mov
sub
mov
xor
mov
subb
mov
add
imul
movzwl
mov
lea
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
add
movl
cmpl
jbe
movzwl
ror
mov
mov
or
mov
imul
mov
add
push
pushl
mov
add
mov
call
cmpl
je
test
mov
adc
mov
xor
inc
xor
mov
jmp
mov
mov
xor
mov
mov
add
xor
mov
mov
cmp
je
mov
xor
mov
movzwl
xor
mov
mov
add
mov
mov
imul
mov
mov
mov
and
mov
mov
mov
mov
mov
imul
xchg
dec
dec
cmp
jne
mov
mov
mov
cmp
mov
mov
adc
mov
xor
lea
mov
add
mov
mov
add
dec
jne
jmp
movzbl
sub
mov
mov
call
mov
jmp
lea
mov
mov
mov
add
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
cmp
mov
sbb
mov
xor
add
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
xor
add
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
mov
or
mov
test
movzbl
mov
adc
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
and
mov
mov
and
leave
ret
push
mov
sub
mov
mov
sub
mov
mov
mov
add
mov
mov
add
leave
ret
jmp
push
mov
sub
mov
movzwl
or
movzwl
mov
or
mov
mov
mov
sub
leave
ret
pop
xor
and
and
aaa
add
aaa
xor
xor
imul
je
xor
jno
popa
je
xor
and
imul
sub
inc
add
jo
add
inc
add
inc
add
add
or
sbb
add
add
dec
jo
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
push
jo
add
ljmp
add
or
cld
fdivrp
sti
cli
stc
clc
push
push
push
push
dec
call
inc
add
inc
add
add
nop
jo
add
jo
add
jno
add
inc
add
jge
add
call
jne
add
jne
add
jne
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
add
add
add
add
std
std
xor
cli
push
std
hlt
sbb
icebp
cmp
into
std
dec
fsts
fcoms
idiv
ss
std
xor
cli
push
std
hlt
sbb
icebp
incb
std
into
std
dec
fldenv
fsubs
idiv
ss
std
decb
std
idiv
imul
std
dec
fnstenv
fdivs
sub
inc
aaa
push
ss
clc
xor
std
xor
stc
imul
cmp
repnz
std
icebp
flds
inc
sub
push
aaa
pusha
ss
xor
std
xor
stc
imul
incb
std
repnz
std
icebp
fsts
push
sub
pusha
aaa
jo
ja
incb
std
std
imul
idiv
outsb
std
repz
std
icebp
fldenv
bound
jno
jo
xorb
clc
incb
std
std
imul
idiv
sbb
hlt
std
repnz
fnstenv
jb
andl
xchg
clc
incb
std
std
imul
idiv
imul
iret
flds
daa
nop
aaa
mov
pop
std
std
imul
idiv
imul
std
icebp
fsts
daa
mov
clc
decb
std
std
sbb
cli
insl
std
stc
std
clc
fldenv
daa
mov
shlb
aaa
shlb
xlat
stc
cmp
std
adc
sti
decb
std
hlt
std
repnz
fld
fadd
sub
daa
shlb
loopne
out
incb
add
jno
add
jno
add
inc
add
add
jne
add
xchg
gs
add
add
add
int3
pop
inc
add
fs
push
or
add
inc
inc
add
ja
add
pop
jne
sbb
push
add
gs
push
add
inc
add
jne
push
add
add
inc
add
dec
add
add
add
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
sbb
jbe
test
test
mov
mov
mov
mov
sbb
sbb
sbb
jns
dec
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
xchg
xchg
xchg
sbb
inc
sbb
adc
add
add
add
add
imul
add
add
add
dec
add
add
add
add
jns
add
jns
add
imul
outsl
add
dec
add
inc
add
imul
add
add
add
inc
je
add
out
jmp
inc
add
out
lcall
add
out
js
inc
add
out
decl
and
push
std
incb
add
or
xchg
add
pop
add
pop
add
or
and
add
sbb
push
popa
insl
dec
insb
insb
push
imul
add
data16
std
imul
adc
stc
imul
idiv
push
std
cmc
std
hlt
fsts
fcoms
idiv
add
add
add
fs
bound
add
add
inc
add
push
add
pop
add
inc
add
push
add
push
add
add
add
popa
add
ja
jae
js
add
add
data16
add
add
jne
gs
xor
add
inc
push
imul
jne
imul
inc
imul
inc
dec
add
add
jbe
add
adc
xchg
or
add
jbe
jae
add
push
imul
inc
std
jle
incb
pop
idiv
mov
std
pop
mov
pop
sub
add
inc
add
popa
inc
add
std
sbb
imul
std
sbb
adc
sub
sub
std
incb
add
std
sbb
adc
sub
sub
std
push
adc
std
sbb
insl
std
adc
std
decb
xor
inc
or
arpl
jae
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
jns
pop
xchg
xor
or
cmp
inc
xchg
out
shlb
push
jbe
gs
gs
aaa
pop
ja
sbb
xchg
xchg
test
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
add
add
and
addr16
jp
push
dec
cmp
push
xor
cmp
cmp
xor
imul
sub
cmp
cs
dec
add
insl
push
and
inc
inc
aaa
xor
pop
jo
add
add
ss
pop
outsb
push
push
cmp
inc
push
xor
popa
push
addr16
ja
push
fs
and
and
addr16
push
addr16
inc
cmp
imul
add
push
gs
je
popa
and
popa
push
outsl
and
arpl
inc
je
and
and
jns
xor
xor
arpl
xor
and
dec
bound
add
pop
jne
je
push
xor
and
add
jns
xor
push
add
insl
xor
ja
push
add
pop
xor
dec
cmp
jbe
dec
jns
xor
jne
outsl
add
xor
jb
jp
and
outsl
xor
jno
and
and
jae
insl
push
add
dec
add
fs
xor
imul
sub
imul
arpl
xor
shll
add
add
add
cmp
add
ja
add
ja
add
dec
out
neg
cmp
xor
nop
nop
nop
nop
pop
pop
nop
nop
jl
push
add
insb
add
sahf
add
xlat
das
mov
aaa
xor
out
push
add
inc
jmp
lds
int3
cmp
jb
and
xchg
popa
stos
jp
ja
mov
dec
cmpsb
notb
and
repnz
cmp
int
clc
sub
adc
push
mov
roll
add
stc
push
dec
mov
sarl
dec
data16
ret
cli
test
cmp
pusha
addr16
inc
pusha
add
lret
xchg
xlat
bound
push
add
push
add
mov
jmp
adc
sub
mov
test
mov
sti
stos
sbb
jne
fadd
inc
xchg
mov
loopne
xlat
add
sbbb
fs
lret
aaa
cmc
fsubr
mov
cwtl
mov
cmpsb
push
pop
movsb
pop
lods
divb
sahf
iret
mov
and
lock
cli
pop
jge
jb
adc
pop
ss
mov
mov
es
pop
fwait
or
inc
inc
movsb
xchg
xchg
add
jmp
mov
xchg
mov
sarl
jg
sub
sub
scas
fidivl
push
xchg
push
stos
jl
xor
push
orl
mov
add
adc
enter
pop
cli
out
add
xchg
lds
cmp
test
lds
adc
ljmp
jl
pop
daa
scas
iret
mov
aam
mov
mov
sbb
shlb
fiaddl
and
pop
cmpl
xchg
push
loope
mov
scas
and
xlat
or
and
mov
addb
mov
int
mov
xor
lock
xchg
push
xchg
test
cld
scas
stos
pop
pop
xchg
sbbb
rcll
test
adcl
mov
loopne
xor
data16
hlt
lods
sarb
orl
iret
mov
dec
push
pop
xchg
xor
xchg
in
inc
push
add
andb
je
inc
inc
pushl
out
mov
scas
push
test
dec
pop
add
xchg
pushf
jno
rcll
shr
xor
mov
jae
sbb
sub
leave
sub
xchg
mov
xor
out
std
and
mov
andb
or
jnp
xchg
mov
xchg
dec
aam
mov
mov
push
and
ret
test
rcrb
mov
sbb
or
and
jp
ret
in
xchg
popf
insl
fwait
cmp
add
xor
scas
insb
jo
mov
xchg
in
movsl
ficoml
subl
or
mov
sbb
mul
ret
icebp
loop
xor
outsb
lea
pop
and
pushf
fimull
pop
jmp
push
cmp
fwait
pop
mull
xor
pusha
lret
outsb
addr16
xchg
lahf
push
xchg
fadds
jmp
inc
adc
pop
xor
pop
test
or
pop
adc
movsl
jl
jge
push
inc
fimuls
test
clc
sbb
add
stc
lret
xchg
sbb
push
les
mov
stos
push
pop
gs
and
stos
icebp
xchg
enter
inc
dec
fsubl
sub
out
add
ja
dec
lea
mov
sub
mov
pop
lock
add
je
cltd
add
nop
sbb
and
lahf
orb
jl
and
mov
pop
mov
movsl
jne
push
inc
and
nop
mov
jl
fldt
sbb
rclb
fsubr
bound
add
jle
jge
sub
insl
les
sbb
sub
std
shlb
mov
out
das
mov
push
bound
sub
das
sbb
jge
pop
push
enter
clc
fcom
movsb
xor
aaa
imul
cmp
sub
pop
roll
xchg
dec
cmp
ror
stc
out
adc
push
mov
movsb
insl
mull
inc
jo
pop
je
loope
rcr
mov
cltd
mov
xorb
xchg
insl
out
adc
xchg
into
and
inc
dec
movsb
fcompl
dec
push
xchg
push
push
fs
mov
cmc
in
iret
fs
adc
dec
insb
and
and
push
lcall
ds
lcall
pushf
mov
sub
fildl
or
xor
ror
add
mov
mov
or
inc
cmp
jo
stc
out
ja
or
jno
rcrl
insl
push
das
imul
je
xchg
adc
addl
cmp
mov
and
xchg
loope
jns
shrb
push
mov
out
ja
loope
mov
aaa
loop
mov
call
repz
mov
pop
cmc
in
dec
pop
inc
icebp
lret
xchg
jae
imul
inc
mov
adc
scas
jbe
pop
sub
clc
xor
sbb
or
mov
xchg
mov
push
negb
out
add
sub
nop
mov
jp
cmp
mov
lea
js
scas
out
cli
add
mov
pushf
xchg
in
sbbb
jbe
mov
mov
out
scas
lds
xor
je
sub
xor
adc
push
cli
adc
lahf
aas
xor
cmp
lcall
ja
sub
jo
stos
lcall
call
rol
jecxz
jns
aas
sub
out
hlt
divl
lock
mov
xor
lods
xor
jae
jmp
inc
sbbb
fnstenv
mov
fdivp
mov
test
int
fimull
push
xor
mov
iret
inc
imul
insl
cmp
cli
outsb
lds
js
cmpb
loop
iret
clc
pop
inc
mov
inc
adc
push
aas
outsl
or
add
outsb
hlt
dec
jmp
jnp
pushf
or
mov
popf
scas
arpl
outsb
jb
add
pop
cs
aam
orl
test
cmp
cltd
inc
mov
dec
add
pop
xchg
lcall
jg
sub
std
hlt
and
xchg
mov
aas
pop
je
mov
jae
xor
loopne
aad
cli
sbb
adc
adc
and
jnp
cmp
movsl
push
call
xchg
sbb
jge
in
push
ljmp
jecxz
sub
fisttps
jecxz
sbb
xor
add
mov
pushf
push
jp
aas
imul
incl
mov
mov
cmpsl
adc
sub
aaa
jmp
divb
in
xchg
cmc
faddl
cmp
and
jg
xorl
shlb
pushf
stos
inc
inc
push
ds
imul
push
mov
push
mov
cmp
in
ret
out
xchg
pop
jae
xor
lock
jge
fstps
jle
add
movsb
sbb
jo
xor
test
add
push
sti
loope
mov
loope
push
adc
fisubrl
dec
mov
sub
imul
lock
repnz
inc
xor
insb
sbb
sbb
popa
pop
test
out
dec
mov
push
aam
xor
jg
pop
das
adc
cmp
js
or
jne
ja
sbb
in
adc
popa
jl
fsubl
and
imul
dec
sbb
hlt
push
in
sbb
mov
repnz
rcrl
mov
mov
mov
rcr
lcall
push
jecxz
jge
cmc
xchg
orb
cmpsb
test
sahf
xor
adc
movsl
xor
data16
inc
sub
mov
fildll
add
pop
imul
inc
in
xor
push
test
sbb
fadd
push
das
hlt
out
into
ljmp
pop
push
pop
cmp
jns
rcrl
add
pusha
loope
pushf
fdiv
sub
mov
int
jne
adc
cwtl
loope
lds
ss
xor
bnd
test
fcoms
pushl
ret
xchg
xchg
jbe
cld
xchg
sbb
adc
push
je
push
daa
pop
xchg
push
adc
aas
inc
mov
adc
cmp
mov
out
test
adc
mov
jbe
enter
jo
fisttps
push
inc
mov
pushf
cmp
mov
dec
test
mov
push
outsb
dec
cmp
push
jecxz
test
shr
adc
lcall
mov
je
pop
je
inc
mov
loopne
push
sar
fcoms
adc
push
or
int
pop
ja
js
lods
shlb
hlt
xchg
repz
rcr
sbbb
out
out
cwtl
xor
popf
fisttps
dec
push
ljmp
or
add
scas
shl
hlt
jne
jp
mov
je
inc
shlb
int
mov
stc
pop
sub
popa
cmpl
pop
sbb
jl
clc
push
sbb
fidivl
mov
dec
rolb
cmp
cmp
lahf
mov
ret
adc
in
lahf
orl
mov
jle
inc
xor
cld
adc
pop
cmp
es
in
and
int
or
mov
ljmp
out
pop
xchg
push
mov
dec
dec
in
push
sbb
pop
les
jmp
inc
movsb
sbb
pop
cmc
or
pusha
xchg
add
xchg
dec
xchg
cmp
push
pop
push
pop
fcomip
jne
dec
cmpsl
cmpsl
shr
fdivl
std
cmpsb
cwtl
xor
push
cli
add
jge
out
enter
shll
sub
rcr
ficomps
clc
in
cs
jmp
cmp
scas
dec
into
pop
insb
nop
jbe
jle
inc
iret
mov
test
mov
xchg
pusha
sbb
fwait
jl
and
cmp
jg
stos
shll
dec
push
cmp
cli
sub
dec
cmpsb
outsb
inc
in
data16
lahf
jp
hlt
mov
je
lds
sub
in
push
loope
xor
cmpsb
adc
mov
popf
xchg
jge
or
push
in
jmp
pop
dec
mov
jge
cmp
dec
test
push
sbb
les
push
dec
aaa
sahf
or
adc
sub
lods
loop
dec
push
js
sbb
lahf
xor
aam
out
xor
js
mov
sub
insl
xchg
out
sbb
scas
shrb
mov
add
xor
pop
or
rolb
sbb
inc
push
cwtl
imulb
std
xchg
adc
push
leave
dec
fnstcw
jne
mov
stc
idivb
inc
add
loop
rclb
leave
mov
scas
sub
mov
ret
sub
xchg
mov
lret
xor
aaa
fsubrl
lods
std
mov
pop
dec
les
not
jp
movsb
mov
inc
int3
leave
adc
ret
mov
xor
sbb
mov
scas
sbb
mov
dec
or
sub
mov
sbb
hlt
scas
ds
mov
jnp
popf
jge
xchg
mov
push
aaa
dec
imul
subb
and
lds
pop
and
mov
push
repnz
and
shr
lret
js
aas
mov
push
jp
xchg
stos
pop
lods
mov
mov
sti
adc
pop
jne
adc
ret
nop
aam
outsl
bts
and
popf
adc
outsl
mov
bound
mov
or
sbb
lret
mov
or
or
dec
cmp
push
sub
sbb
shll
sbb
add
pop
lds
jbe
dec
push
cmpsb
jp
inc
testb
test
scas
push
ja
xchg
aam
pusha
xchg
lock
xor
sbb
push
cmp
push
out
sti
xor
les
lock
fcomps
and
shrl
pop
sbb
fbld
ja
mov
scas
sarb
cmp
pop
into
iret
bnd
mov
mov
pop
sbb
pop
inc
fimuls
mov
push
push
ret
fcoml
cmc
cmp
push
outsl
andb
xlat
sbbl
mov
mov
jecxz
lea
push
xor
pop
add
loope
sbb
dec
stc
adc
fucomip
xlat
jbe
shrl
in
jg
jns
jo
cltd
mov
mov
aam
mov
lea
lahf
pusha
incl
adc
outsb
jle
pop
popf
scas
scas
sbb
pop
xor
push
mov
mov
and
mov
outsl
add
nop
iret
mov
repnz
lret
das
in
daa
adc
jo
and
jmp
add
xchg
out
out
out
push
mov
xor
mov
imul
mov
ret
and
push
dec
or
mov
inc
inc
push
sbb
cmpsb
dec
sbb
fmull
add
jp
popa
mov
dec
xchg
jnp
push
inc
jb
les
jbe
test
ds
cmp
sub
fnstenv
fists
mov
je
arpl
mov
sbbl
dec
arpl
xchg
je
int
das
gs
jno
dec
nop
cmp
pop
icebp
icebp
testb
mov
add
ret
or
addr16
xchg
sub
das
cwtl
inc
repnz
popf
mov
cmp
repz
push
pop
adc
dec
mov
loop
sub
adc
push
test
in
push
push
das
clc
test
push
int
adc
mov
cmpsb
dec
sbb
push
sahf
int
int
sbb
push
mov
push
jbe
xchg
aas
imul
jns
stos
push
neg
insl
inc
pop
xchg
lds
cwtl
push
ja
inc
lret
sub
shrb
mov
mov
or
and
ljmp
mov
sahf
jne
in
cwtl
and
call
jbe
push
inc
les
std
and
movsb
push
xlat
cmp
and
out
movsb
push
cmpsb
mov
dec
hlt
sbb
fmull
mov
cmp
mov
xchg
jns
fld1
aad
sub
dec
mov
pop
push
jnp
inc
xor
test
inc
jecxz,pn
or
aam
push
dec
xchg
add
sbb
xlat
jno
push
pop
inc
and
orb
mov
add
aas
iret
daa
je
mov
sub
adc
sub
and
addr16
shll
and
or
jne
mov
aam
cmp
nop
cmp
xchg
cmp
add
aas
test
lods
push
mov
mov
inc
idivb
rcll
mov
in
or
mov
jecxz
inc
pop
dec
mov
out
sbbl
push
in
jae
mov
sbb
adcl
es
cmc
push
xor
jbe
je
fs
push
pop
pop
loop
sub
xchg
sub
pop
lahf
faddl
mov
test
jg
jmp
xchg
and
aas
fs
sbb
mov
cmc
jg
into
sbb
sub
cwtl
sbb
call
push
fcoms
jmp
jno
sbb
cli
mov
lods
clc
mov
xchg
dec
dec
gs
dec
fcmovnb
pop
stos
sbb
pop
jb
and
loopne
and
pop
cltd
int
les
in
stc
je
dec
xchg
inc
addr16
push
sbb
bnd
cltd
stos
cmp
cltd
ljmp
sub
mov
xchg
out
ds
xchg
jbe
imull
dec
add
mov
add
mov
sub
pop
pop
add
or
xchg
fmulp
xor
xor
int
xchg
xor
jbe
fwait
movsl
pop
lods
loop
or
and
leave
insb
add
mov
dec
dec
cmp
jne
aam
mov
test
cmp
inc
and
push
lcall
das
xchg
shll
jl
add
je
pop
out
adc
sub
sub
cmp
mov
push
cmp
imul
lods
psrlq
jae
xchg
ret
popa
pop
mov
fs
in
divb
cmp
lret
in
cmp
dec
inc
pop
push
sbbl
mov
ss
movsl
js
insb
xchg
push
cmpsb
mov
xor
add
ja
sbb
push
mov
in
xchg
xchg
cmp
xchg
adcl
ja
nop
xchg
or
lods
gs
push
dec
fstps
lcall
or
or
sub
in
das
dec
test
lock
shrl
pop
adc
dec
imulb
adc
stos
push
into
lcall
cmp
daa
shrb
scas
or
ficomps
inc
add
cmpsb
adc
push
jnp
mov
mov
xor
or
cmc
sbb
sbb
test
cli
push
mov
xor
push
leave
sbbb
mov
test
idivb
int3
dec
sbb
test
out
lock
mov
imul
xor
jne
loop
lret
push
push
les
scas
pop
jb
xchg
orl
dec
inc
pop
or
out
and
repnz
cmp
add
jnp
pop
xchg
sbb
and
sbb
cmp
mov
push
or
rorl
push
jne
adc
adc
mov
shl
in
call
xor
fnstcw
xchg
outsl
cmp
lea
inc
pop
push
stc
dec
inc
test
mov
sbb
or
add
adc
lds
xchg
pop
mov
or
dec
mov
push
ficoms
cmp
ss
push
xchg
dec
adc
mov
vcvtpd2psy
xorb
xlat
aaa
ds
mov
lods
inc
stc
push
jbe
dec
cmp
mov
add
insl
cltd
insb
mov
test
inc
loop
sub
pop
aas
insb
xchg
call
sub
xlat
sar
cltd
mov
mov
pop
mov
mov
xor
xchg
pop
cld
in
mov
mov
gs
sar
xchg
mov
xorb
push
leave
pusha
or
inc
outsl
bound
ror
jle
or
outsl
fnsetpm(287
xor
push
jle
shll
xchg
dec
imul
pop
dec
shll
jl
xchg
lahf
les
or
lea
aas
pop
sbb
xor
repnz
and
xor
mov
add
xchg
lea
push
outsl
cs
movsb
adc
push
mov
dec
fidivl
cmp
fcoml
xor
mov
inc
popa
pop
in
mov
movsb
and
mov
fcomps
ret
cmpsl
inc
mov
divb
and
mov
test
sbb
fmuls
cmp
inc
mov
test
hlt
roll
cmpsl
insl
add
enter
push
enter
push
iret
dec
sbb
xlat
jp
add
rcrl
push
xlat
add
xchg
testl
push
add
push
ja
loopne
dec
movsl
dec
ss
dec
inc
fisubs
std
pop
and
lock
pop
addb
lahf
sbbl
xchg
pusha
xor
insb
mov
pusha
mov
in
jo
mov
daa
xor
push
out
pop
sub
or
jge
std
inc
inc
pop
fisttpll
mov
inc
test
cmovae
mov
stc
fists
or
rcl
lahf
fsubr
sbbb
push
sbb
movsb
sti
push
fmuls
push
jle
mov
popa
xchg
xchg
or
and
xchg
cmp
xor
ss
insl
rclb
and
xchg
add
mov
int3
mov
xlat
imul
xor
xchg
pop
outsb
lcall
jae
ret
mov
cmp
inc
xchg
cs
fwait
push
lods
mov
push
sbb
xchg
mov
fs
imul
jl
sub
pop
cmp
mov
mov
pop
pop
jae
leavew
mov
xor
dec
test
mov
xchg
pushf
push
mov
pop
push
xchg
clc
mov
int3
jo
sub
xor
and
stos
mov
out
and
xchg
mov
addr16
inc
lret
mov
sbb
fsubr
dec
jle
and
inc
out
xlat
add
xor
clc
sti
xchg
js
repnz
pop
call
stc
sbb
jns
dec
arpl
call
mov
cmc
adc
fld
mov
mov
jmp
xchg
xlat
pop
js
mov
inc
shlb
test
and
jl
push
mov
loopne
push
out
sub
out
dec
lret
jns
sbb
push
aad
out
inc
mov
mov
mov
push
daa
or
ret
add
shrl
mul
mov
cmp
fsubrp
lods
lret
and
cmp
or
lahf
push
mov
iret
in
aad
cmpsb
inc
enter
push
hlt
popf
repnz
and
mov
rorl
aas
add
mov
loopne
and
adc
add
xchg
ret
test
insl
negb
push
jb
scas
cli
shll
ds
jns
cmp
andl
mov
jp
lods
call
pop
addb
mov
xor
jmp
jp
in
outsb
test
xor
xchg
fimull
cli
mov
test
pop
mov
push
sub
inc
mov
fsts
lock
mov
push
pop
out
or
pop
inc
mov
or
inc
mov
jno
outsb
mov
inc
jle
std
dec
push
and
jo
ret
popa
sbb
adc
lods
push
push
add
push
mov
hlt
pop
xchg
dec
data16
pop
pop
ficomps
push
test
xchg
loop
sti
adc
ficoms
insb
pop
rolb
imul
mov
or
fcomps
test
outsb
enter
mov
les
add
xlat
call
out
cmpsl
das
sub
ret
in
dec
rcrl
add
into
cs
sti
mov
adc
movsl
pop
mov
dec
test
jmpw
mov
mov
ret
js
cmp
jbe
jl
fiaddl
inc
sub
repz
jne
into
jne
js
jle
mov
cmp
mov
inc
mov
push
test
adc
xor
dec
fisubl
dec
insb
xchg
adc
and
mov
inc
movsb
sub
pop
shlb
cmp
mov
mov
mov
fs
mov
cmpsl
and
fstpt
stc
nop
pop
hlt
xchg
roll
fld
les
mov
data16
xor
xchg
das
out
sbb
ja
xor
fnstcw
push
add
pop
xchg
ja
add
and
mov
sbb
enter
int3
icebp
push
mov
clc
pop
jb
jg
stos
jo
xor
push
and
das
cmp
rol
sub
cli
xor
movsb
sub
xor
dec
xchg
mov
mov
and
fldenv
in
movsl
lock
sub
or
decl
cmpsl
jg
fs
mov
jge
dec
sub
push
out
test
mov
adc
jmp
push
mov
xor
mov
rol
mov
mov
mov
movsb
in
mov
xorb
push
out
data16
loopne
or
sbb
cltd
jnp
fnstcw
clc
xorb
pop
mov
ja
jbe
add
or
push
loopne
rcrb
gs
pop
xor
and
mov
cli
popa
adc
daa
adc
icebp
push
ds
into
push
jno
inc
sar
push
rorl
push
push
test
stos
cltd
imul
mov
and
adc
mov
sahf
imul
cmp
mov
dec
xlat
sti
sti
movsl
push
callw
jg
test
in
movsl
imul
arpl
ds
pop
adc
out
cmp
mov
push
mov
dec
repz
sbb
into
arpl
xor
cmpsb
mov
dec
jbe
xor
push
xor
dec
dec
mov
insl
nop
or
int
call
mov
mov
or
cmpsl
cmp
jb
mov
ja
cmp
leave
out
stos
cs
mov
cmp
or
loop
mov
cmp
iret
lcall
xchg
divb
int3
mov
push
fs
sbb
xchg
adc
cmc
push
stos
adc
adc
hlt
outsb
pop
test
push
pop
cmp
dec
shrl
xchg
xchg
shll
cmc
aad
inc
xchg
repnz
pop
ss
sub
xchg
int
cmp
call
inc
hlt
nop
push
push
shrb
mov
rep
test
aam
xchg
mov
addr16
push
fcmovne
loop
add
mov
pusha
insl
xchg
rorl
loop
cmc
fcoms
jbe
sbb
int
mov
cmp
sub
jae
pop
jl
xchg
lea
xor
push
call
ds
jno
jae
inc
pusha
pop
inc
mov
jle
push
dec
icebp
dec
mov
sti
cs
scas
dec
cmc
or
mov
push
js
gs
push
ja
bound
adcb
ficoms
bnd
fistps
or
sbb
and
xor
cwtl
dec
std
test
adc
dec
aas
mov
and
sub
cltd
inc
jbe
or
lods
fsubp
cmp
cmp
sbb
dec
movsb
jbe
mov
jno
mov
xchg
sbb
icebp
and
sbb
nop
mov
sar
test
xor
pop
add
push
fsubrl
cmp
aad
jle
pop
cmc
imul
mov
aad
mov
lahf
mov
inc
and
jns
hlt
add
sahf
in
and
cld
aad
loope
mov
jle
data16
xchg
insl
scas
sub
inc
jecxz
jnp
cwtl
dec
fidivl
push
jl
std
fisttpll
push
clc
cmpsl
imul
mov
push
cmpb
mov
and
fdivp
sub
push
pop
dec
das
push
and
fs
pusha
clc
dec
repz
push
adc
outsb
outsb
in
cmc
aam
sbb
leave
push
js
xor
scas
xchg
push
cmc
mov
imul
xor
bound
hlt
or
jo
repz
mov
mov
inc
cwtl
cs
pusha
sbb
jmp
or
push
push
jg
test
rolb
hlt
lods
das
mov
ds
icebp
adc
xor
in
pop
stos
jns
mov
mov
or
sbb
push
push
xchg
movsl
ja
loopne
jae
loopne
and
mov
es
adcb
xor
xchg
out
popa
cs
mov
enter
mov
ret
sub
inc
pop
dec
movsb
cmp
dec
mov
mov
ljmp
mov
mov
je
jne
pop
shl
mov
inc
pop
mov
add
mov
dec
and
scas
addr16
add
jecxz
fstpl
cmc
dec
pop
int3
icebp
out
push
cmp
push
or
xor
jg
int3
int3
jge
push
nop
mov
sbbl
mov
mov
add
xor
push
daa
push
cli
mov
sub
or
push
xchg
movsl
aad
dec
inc
and
hlt
pop
push
pmaddwd
pop
cli
movsb
lds
sbb
push
push
clc
inc
jge
ljmp
inc
sub
in
sti
insb
add
xor
outsb
add
cld
aas
hlt
ret
sub
cld
nop
inc
pushf
sub
jle
nop
pop
rol
jno
fsubrs
xor
push
pop
repnz
test
cld
mov
mov
shr
insb
mov
cmp
pop
cmp
in
out
mov
loope
jns
adc
sub
ret
lock
mov
cli
stc
mov
movsb
pop
rcrb
xor
xchg
sbb
xchg
push
push
hlt
adc
rcll
pop
call
addb
xchg
adc
cmp
pop
dec
loop
in
mov
xchg
mov
jno
aam
lahf
icebp
xchg
fimuls
mov
mov
xchg
outsl
int3
add
mov
and
sahf
and
daa
aad
xor
loop
test
cld
mov
out
js
or
fs
lcall
add
arpl
add
mov
xor
mov
dec
xchg
add
or
fildl
pop
mov
inc
ret
insb
xlat
out
cmp
mov
test
fsubrl
cmc
inc
pop
out
sbb
push
or
mov
jp,pt
mov
movsl
fdivrs
in
dec
adc
mov
jmp
ret
outsb
xchg
iret
out
xor
and
addr16
scas
ror
les
cmp
pop
sub
stos
mov
add
add
mov
cmc
mov
lock
lods
sub
aaa
and
mov
shl
orl
stos
int
pop
jle
rorb
jae
into
loope
mov
mov
sub
fidivrl
das
and
test
ss
repnz
icebp
fs
ss
scas
push
data16
push
cld
xchg
mov
aaa
lods
pop
jnp
sbb
mov
arpl
js
adc
sub
stos
push
inc
dec
adc
or
dec
lret
subl
int
push
add
jbe
mov
aad
in
mov
gs
clc
push
das
inc
dec
mov
mov
leave
cmp
jle
jmp
fucomip
leave
fidivs
cmpsl
cmpsl
jmp
adc
and
ss
inc
loopne
mov
or
mov
inc
inc
pop
outsb
adc
xchg
cld
xchg
push
push
push
pop
lret
mov
pop
testb
or
push
imul
inc
scas
mov
ds
mov
in
jle
ds
fmull
call
cmp
mov
adc
and
inc
test
int3
testl
test
mov
movsb
lret
xchg
js
pusha
jmp
sbb
push
sub
aas
dec
in
stos
adc
or
je
add
adc
adc
mov
inc
add
xor
ds
push
pop
sbb
jnp
in
add
std
stos
aas
int3
sub
adc
pop
stos
push
les
cmp
or
lds
mov
loopne
lock
scas
xchg
pusha
inc
notb
dec
out
iret
jp
enter
pop
inc
sbb
icebp
popf
push
lock
testl
fcompl
jmp
mov
or
mov
das
sbb
pop
mov
or
dec
mov
loop
and
scas
sbb
sarb
out
cmpsb
pop
dec
in
push
sub
mov
in
stos
jbe
xchg
mov
mov
sbb
xchg
insl
insl
subl
mov
sbb
es
xchg
stos
jns
bnd
jb
cli
fwait
stc
pop
add
seto
sbb
popa
insl
loope
imul
lcall
jo
lea
jmp
pusha
loopne
inc
jmp
dec
jle
insl
in
outsb
cmc
jo
add
cmp
adc
sbb
shrb
add
imul
or
cmc
fs
mov
movb
pop
lods
jae
iret
shlb
fisttpl
jb
pop
fcoms
mov
aaa
gs
jecxz
int
push
in
insl
cmp
fstpl
stos
push
mov
enter
sub
imul
adc
xchg
inc
cmp
dec
and
flds
push
fs
cmpsb
fldt
pop
pop
sbbb
or
jno
jmp
or
ret
jl
xor
fsubrl
push
aad
mov
in
jmp
mov
rolb
adc
pop
in
xor
mov
and
nop
imul
add
cmpsl
popa
xchg
int
jo
mov
loop
insb
flds
nop
cmp
lret
stos
jno
fdivrs
inc
xor
mov
aam
cltd
mov
push
divl
insl
repz
jge
dec
shufps
mov
les
adc
dec
loop
leave
les
xor
scas
outsb
leave
and
cwtl
and
sbb
xor
inc
sub
out
mov
neg
xor
pop
inc
jp
aam
sbb
mov
push
jne
lcall
in
and
lods
jecxz
test
jo
sub
adc
ds
gs
xchg
mov
xchg
mov
stc
inc
cmp
dec
mov
cmp
ret
lods
movsbl
popf
lret
jmp
outsb
xor
xchg
inc
je
or
repnz
movsb
adc
push
mov
mov
and
sbb
stc
test
jmp
cmp
fiadds
mov
cmp
mov
aas
out
pushf
mov
or
je
test
mov
popf
jecxz
or
cmp
insb
pushf
xchg
inc
lret
cmpsb
inc
out
test
mov
jp
cmp
loop
or
fcmovb
mov
sbb
xchg
scas
xchg
ficomps
test
scas
std
out
xor
mov
loopne
inc
xchg
adc
fisttpll
ret
cmpsl
jnp
mov
inc
sbb
inc
pop
mov
leave
xchg
sti
sbb
xorl
fsin
add
sub
fiadds
adc
push
hlt
pusha
sti
mov
or
add
mov
inc
push
in
pop
dec
ret
clc
scas
mov
mov
ret
stos
das
sarl
scas
add
or
and
and
push
out
cli
ljmp
sbb
aaa
push
cmp
dec
aas
lods
cli
sbbb
movsb
push
cmp
add
xchg
add
in
push
pushf
adc
rclb
enter
push
mov
cmp
ror
add
std
dec
jo
pop
xchg
pop
dec
insl
aaa
pop
or
dec
mov
mov
cmpb
movsl
int3
pop
sbb
sub
mov
inc
cmp
cvttps2pi
add
scas
and
fadd
and
out
insl
dec
fmuls
adc
mov
mov
jmp
lret
sub
dec
sbb
out
sahf
jae
push
jbe
mov
jmp
jp
sahf
testl
push
jno
notl
pop
loope
loopne
mov
and
shrl
mov
pop
mov
ret
mov
push
inc
scas
or
ss
pavgw
sbb
pusha
inc
xchg
sub
sbb
leave
mov
mov
fisubrs
pop
iret
das
cs
inc
adcl
faddp
cwtl
fwait
bnd
fwait
adc
cmpb
icebp
jno
sub
mov
aaa
scas
and
mov
and
aaa
lea
add
sub
push
into
cltd
js
jns
lods
xchg
or
jl
xchg
out
pusha
addb
into
adc
adc
movsl
orb
fwait
and
daa
fst
in
jge
xchg
sub
dec
pop
ds
bound
mov
pop
fs
add
outsb
stos
lods
mov
dec
pop
mov
aad
inc
into
cli
xlat
mov
xchg
out
mov
rcrl
mov
shrl
retw
js
scas
arpl
cmp
shl
pop
sar
pop
lods
push
dec
xchg
sbb
outsl
call
cli
jns
rolb
inc
insl
bound
inc
data16
push
push
divl
lret
jb
mov
movsl
xor
sti
int3
fcomps
xor
andl
out
loopne,pn
or
inc
fdivs
fiaddl
sbb
test
xchg
and
fists
pop
imul
cmpb
mov
je
or
test
fsubrl
sbb
and
bound
or
rcll
pop
int3
xor
je
lcall
cli
insl
or
and
mov
push
xchg
stos
mov
shr
pop
mov
push
add
cmpsl
imul
mov
add
movsl
vunpckhpd
fsubr
scas
xchg
jb
or
jns
push
mov
addr16
xchg
cmpsb
pop
aaa
push
add
sbb
pop
inc
xchg
dec
sbb
mov
mov
ljmp
xchg
sahf
ret
fs
pop
xchg
jge
xchg
jns
inc
xor
cmpsb
movsb
dec
dec
or
push
sbb
cmpsb
dec
mov
sub
jg
add
sarl
cmp
ret
mov
mov
pop
leave
push
xor
mov
xchg
pop
je
jmp
mov
lea
out
insl
stos
ficoml
pop
or
je
mov
jne
jo
lret
or
cmc
cmp
aad
idivl
insb
add
dec
daa
cmp
into
cmp
movsb
sbb
xchg
sub
cmp
adc
lods
fists
inc
cwtl
sbb
sub
sbb
mov
scas
aas
jmp
mov
jge
mov
add
pop
mov
mov
out
and
lock
sub
adc
test
add
pop
add
pop
lcall
adc
int
dec
push
xor
mov
pop
mov
mov
ret
jns
dec
xor
scas
js
out
insl
mov
cmp
mulb
call
and
adc
test
jg
fistpll
in
inc
sub
jecxz
shrl
adc
imul
dec
ds
fiaddl
call
inc
or
enter
in
dec
inc
mov
int3
roll
add
sub
add
push
or
adc
es
enter
jmp
subl
lods
add
xchg
mov
push
icebp
lret
out
add
mov
xchg
psraw
jge
xor
lcall
adc
stos
add
inc
and
add
add
test
sub
js
or
ret
mov
mov
loope
cwtl
and
mov
fnstcw
cmpsb
and
lea
push
stc
xor
cmp
mov
call
mov
jnp
inc
fimuls
fisttpll
jnp
push
dec
mov
test
xorb
cmpsl
int3
xchg
fldcw
lret
call
mov
dec
xchg
jmp
punpckhbw
mov
sub
xlat
xchg
pusha
jecxz
lret
lcall
nop
es
daa
ja
ja
lds
sub
xchg
sub
jle
repz
dec
or
jns
dec
dec
xor
cmp
jmp
cmp
inc
je
xor
cmp
pop
inc
add
loop
outsl
xor
and
and
mov
repnz
shrl
mov
lea
stc
lahf
shl
cwtl
jmp
or
lock
stos
fisttpl
push
mov
mov
js
mov
sbb
jno
sub
sbb
xchg
ficoms
mov
cmp
repz
lahf
loope
mov
jle
pop
int3
xchg
fcoml
pop
cwtl
enter
lret
mov
es
pushf
add
rcr
ljmp
push
push
leave
jmp
cld
add
mov
mov
xor
inc
dec
sbbb
cli
dec
mov
adc
push
and
mov
cmpsb
movsb
movsl
xlat
or
push
pop
dec
insl
mov
mov
jl
test
dec
cmc
push
out
popa
test
insl
xchg
sub
lock
dec
add
push
sbb
cmp
xchg
fcomip
pop
fcom
fiadds
xchg
pop
jb
test
dec
hlt
add
add
jmp
push
jnp
mov
sbb
ja
daa
mov
xchg
test
int3
xchg
jle
dec
int3
jo
in
sbb
ficomps
sbb
dec
fcomip
popa
imul
gs
hlt
jb
adc
test
je
aad
ss
sub
sub
pop
orb
jo
fldt
fs
cwtl
movsl
lcall
jne
add
mov
adc
ds
xchg
add
gs
cld
insl
pop
imulb
mov
mov
testb
pop
xlat
adc
lds
mov
push
std
gs
into
lock
xor
cmp
lahf
adc
sub
add
adc
mov
pop
fnstenv
fsts
add
cmp
repnz
adc
mov
es
lods
sbb
mov
pop
pop
mov
inc
lods
sysenter
xchg
fwait
pop
cmp
jb
cmp
fldl
add
mov
test
mov
lock
sub
ds
xchg
inc
es
jne
test
lahf
xlat
cmpsb
pop
insl
sub
ds
dec
mov
aaa
movsb
sub
mov
xor
mov
xchg
pop
mov
fdivs
xchg
push
out
or
es
loope
jl
mov
in
sub
xchg
mov
mov
imul
add
xchg
lret
loope
andb
shl
cmp
test
pushf
sbb
gs
or
xlat
mov
adc
in
je
pop
push
daa
push
xchg
xlat
inc
xchg
incl
movsl
inc
mov
jno
ljmp
lods
subl
cs
inc
lods
sub
and
iret
fs
mov
mov
or
in
fs
jns
push
mov
xor
dec
pop
mov
mov
aas
jg
aas
aam
inc
and
inc
data16
and
into
movsb
xchg
sub
or
xchg
mov
cmc
push
nop
mov
jne
sub
mov
sbb
mov
arpl
jmp
dec
xchg
xchg
popf
loop
sub
maskmovq
notl
pusha
pop
iret
fwait
xor
movl
stc
sti
popf
xor
push
sbb
xchg
push
pop
pop
and
pop
pop
mov
pushf
mov
or
test
push
and
pop
or
repz
xor
push
mov
and
outsb
fisubrl
iret
out
fnsave
test
fwait
lods
adc
mov
adc
aas
cmp
mov
out
dec
movsl
repz
jnp
rcl
stos
xchg
push
sbb
orb
lahf
enter
lock
test
push
xchg
inc
mov
stos
fsubrs
add
push
dec
jno
dec
loopne
lods
or
scas
rorb
pop
outsl
in
mov
out
les
test
gs
pop
fiadds
pop
and
push
out
fnstenv
pop
call
bound
inc
add
nop
sub
or
add
gs
jp
mov
mov
test
and
pop
stos
jecxz
shl
sub
repnz
pop
xchg
out
lret
idivl
mov
lret
lock
mov
cwtl
out
adc
xchg
sub
adc
lock
aad
lret
xchg
push
mov
dec
sahf
sarl
mov
scas
lea
push
test
pause
lcall
fstpl
sti
lds
pop
push
mov
lods
pop
out
mov
cmpsl
aad
add
in
lret
dec
cli
push
mov
jmp
add
dec
cli
aas
sti
jl
addr16
xor
or
shl
and
cmp
pop
jb
push
fldenv
cmp
aam
mov
cmp
popl
out
xor
cmp
jb
or
sbbb
les
ret
movsb
xchg
mov
mov
jae
pop
test
mov
bound
lock
insl
insb
dec
or
mov
jne
sbb
pushf
enter
jmp
jb
sub
or
xor
pusha
lods
dec
decb
xor
xlat
repnz
arpl
dec
push
cmp
icebp
fstpt
pop
repz
dec
imul
cmp
push
push
dec
and
inc
sahf
xchg
xchg
dec
lds
push
adc
pushf
aas
cmpsl
cmp
mov
mov
jae
pop
mov
fildll
mov
mov
rol
sub
push
inc
lret
ljmp
mov
push
mov
fcoms
sub
or
movsb
js
sub
xchg
enter
test
in
cmp
inc
fisubrs
sub
adc
sarl
adc
mov
dec
mov
int3
pushf
popa
mov
dec
icebp
adc
stos
out
push
jnp
into
ja
clc
jge
or
insl
push
push
imul
mov
movaps
jb
mov
mov
hlt
testb
pop
lds
test
pop
sbb
xor
outsl
add
cli
xchg
dec
hlt
and
mov
sbb
outsb
pop
dec
xchg
pusha
fwait
dec
adc
shll
es
out
jecxz
mov
shll
incl
adc
cmp
movsb
push
and
testl
pop
aam
std
call
int3
dec
xchg
mov
pusha
movsb
sub
jle
fwait
dec
fs
adc
ljmp
adc
add
clc
imul
adc
adc
adc
flds
push
add
add
add
add
add
add
add
add
add
lret
push
lret
lods
in
fldl
movsl
imul
mov
std
lret
sub
xor
int
stc
sbb
adc
fimuls
adc
dec
fiaddl
cltd
scas
sti
mov
rolb
sub
sub
popf
outsb
mov
cmp
mov
push
movsl
mov
pop
mov
repz
jecxz
sbb
xor
pop
adc
jg
jmp
movsl
sbb
xor
in
call
outsb
enter
push
jl
mov
and
insl
adc
mov
inc
int3
push
lods
addr16
aaa
pop
out
sbb
mov
xchg
mov
ret
xor
into
push
pop
fstpt
insl
mov
xor
jmp
adc
cld
push
sbb
orl
outsb
push
adc
leave
loopne
add
inc
lods
popa
xchg
addr16
sbb
clc
and
incb
sbbl
push
mov
xor
mov
ret
sub
jge
dec
inc
int3
loop
int3
mov
fs
mov
inc
push
dec
insb
std
jmp
dec
lock
std
sti
aam
sub
cmc
jge
test
push
push
push
enter
ljmp
repnz
mov
xchg
mov
cmp
mov
sbb
imul
in
cmp
mov
cltd
cltd
les
fdiv
cld
mov
sbb
mov
mov
xchg
adc
in
or
inc
shll
cmp
pop
xchg
mov
hlt
ret
cmp
or
cmpsb
add
fdivrp
ljmp
xor
dec
mov
pop
imul
hlt
cmp
jle
xor
push
mov
xor
sbb
jp
aaa
cltd
add
xchg
dec
in
cmpsl
stc
std
insb
adc
xor
jne
jp
icebp
arpl
mov
cmp
add
aas
fwait
out
jnp
out
xor
out
out
push
cmp
pop
xor
sbb
mov
pop
and
jns
add
shlb
fisubrl
insl
mov
stos
aaa
mov
inc
sub
push
mov
in
jae
pop
jbe
push
cmp
enter
stos
pop
inc
stc
rol
daa
push
inc
out
ret
sahf
cmp
or
outsl
stos
lock
jo
xchg
icebp
fs
xlat
outsl
push
pop
pop
xchg
adc
or
movsl
cmpsb
sub
sti
adc
xchg
adc
push
fisubl
shrb
jns
clc
andl
fisubl
jl
dec
jp
cwtl
push
cmpsb
xlat
jbe
inc
jb
loope
sub
xchg
imul
push
cmp
or
pop
mov
fstp
inc
test
das
mov
dec
test
dec
add
fbld
aad
cmovbe
stc
and
gs
push
xchg
sub
xor
cmc
xor
testl
mov
in
scas
or
popa
outsl
sub
aad
dec
cmp
mov
pop
mov
and
mov
es
roll
xor
rclb
push
popa
mov
xchg
jl
sbb
bound
mov
cmpsb
or
shlb
inc
lea
xchg
out
in
sub
inc
xchg
or
hlt
jg
xor
mov
int3
es
sarl
fmull
lahf
push
repnz
sub
cwtl
neg
pop
jo
data16
xor
leave
push
adc
loop
aaa
dec
add
sbb
inc
leave
mov
bound
scas
jno
and
inc
pop
dec
mov
cmpsb
inc
aaa
pop
stos
out
jb
xor
xchg
or
sub
mov
pop
xchg
xchg
mov
in
cmpsl
idiv
push
mov
adc
add
cmpsl
or
mov
sub
enter
cmp
sbb
sub
pop
cmp
add
lret
inc
jnp
mov
pop
and
pusha
jns
scas
fcoms
xchg
fs
adc
inc
dec
es
jp
xor
pop
lret
dec
leave
dec
cli
fstp
cmp
ss
jmp
iret
loop
sub
adc
hlt
mov
adc
push
das
lods
scas
cmpb
ja
popf
sbb
repz
sahf
les
pop
and
test
ret
sub
push
jle
mov
xor
test
loop
sbb
jb
pop
pop
sti
mov
xchg
mov
cmp
nop
das
mov
jbe
shll
fnstsw
out
mov
rcl
ret
add
fdivl
xchg
sahf
arpl
xchg
push
cmp
xchg
mov
xchg
in
mov
fcoms
pusha
add
incl
popf
dec
insb
out
das
dec
test
mov
xchg
cmpsb
mov
cmp
in
imul
and
mov
shrb
stc
mov
mov
inc
std
call
xchg
xchg
xchg
in
imulb
xchg
pushf
add
adc
data16
call
mov
push
mov
leave
mov
pop
cmp
out
xchg
push
scas
mov
fwait
add
orl
imul
inc
pop
sti
loop
push
jecxz
lds
or
cwtl
adcb
push
cmp
xchg
jg
in
inc
dec
xchg
pop
test
xchg
sub
pop
pop
outsb
movsl
xlat
fcompl
repz
idivl
lret
loopne
sbb
push
or
xor
sbb
cmpsb
call
pop
jmp
nop
xchg
outsl
fildll
push
cmpsl
inc
in
repnz
test
or
xor
movsl
pop
ljmp
stos
adc
sub
sbb
shr
ds
les
into
dec
cltd
adc
fstl
ss
cmp
enter
xor
inc
out
pop
sub
sbb
inc
push
in
xchg
lock
mov
sbb
sub
xor
or
fnstenv
add
sub
ds
mull
dec
cmp
dec
xor
push
loopne
stc
call
movsl
aad
xchg
sbb
jae
lods
mov
xchg
dec
enter
pop
jnp
inc
pusha
arpl
dec
shll
lods
jno
cmpsl
lods
mov
adc
repnz
mov
ja
je
shll
aam
mov
pop
mov
mov
ljmp
ret
xchg
adc
mov
test
popf
jne
pop
sub
popa
addl
sbb
arpl
es
rcrl
push
jp
sbbb
adc
rorb
jnp
jmp
push
lods
dec
sub
mov
push
jmp
or
repnz
adc
mov
in
cmc
cmc
es
pop
icebp
jg
fdivs
pop
fists
sbb
pushf
outsb
aaa
dec
das
mov
add
jge
sub
mov
or
inc
cli
int
sub
cld
ret
fnstcw
pop
nop
pushf
add
add
sub
scas
sbb
imul
inc
cwtl
sub
cmpsl
icebp
imul
mov
test
mov
out
mov
test
hlt
rcrl
roll
movsb
fsts
add
cmpsl
xchg
cs
mov
leave
loop
add
gs
cmp
pop
push
push
lret
outsb
pop
or
std
add
out
pop
pop
xchg
jbe
out
lahf
cmpsb
fisubs
repz
or
sub
mov
inc
fistpll
sub
sub
bound
sub
add
inc
sbb
cmpsl
xlat
jp
pop
sub
test
xchg
adc
or
insl
cld
push
jno
mov
sbb
inc
jle
das
and
pop
roll
dec
mov
dec
rcl
cmpsb
lods
jo
aam
jge
das
imul
arpl
xchg
add
mov
aaa
sub
push
repz
les
call
and
inc
mov
les
cltd
mov
adc
mov
or
insb
and
jb
mov
mov
ljmp
je
cld
mov
inc
xor
ja
xchg
cli
dec
out
pushf
mov
xor
imul
or
jmp
pop
lea
lret
je
fs
pop
pop
cwtl
pop
repnz
insb
clc
dec
fmuls
jmp
jge
pop
xor
add
out
push
sub
pop
adc
pop
jno
mov
inc
lahf
sub
adc
mov
fstl
jl
jb
cmp
sbb
or
mov
push
xchg
dec
mov
add
sti
cwtl
sbb
jle
pushf
dec
bound
ljmp
adc
dec
arpl
push
mov
dec
cwtl
outsb
out
xlat
inc
mov
push
test
cmp
std
mov
stos
jno
imul
xchg
jno
jno
pop
fisttpll
and
dec
leave
jns
mov
popf
or
ss
pop
repz
add
xlat
add
jmp
ja
jns
outsl
sbb
add
sub
dec
fsubrp
outsl
mov
jne
push
mov
mov
mov
add
shlb
subb
test
jae
and
movsb
inc
scas
movsl
mov
pushf
enter
cmp
aam
inc
loop
and
int3
and
mov
inc
cmpsl
inc
xlat
mov
ficomps
ds
jo
adc
xor
jl
xor
iret
mov
mov
or
pop
loop
cmp
push
and
mov
dec
test
in
mov
in
jns
or
divl
pop
pop
cmpl
cmpb
ds
mov
fnstenv
lock
leave
inc
mov
shr
lahf
xor
dec
mov
or
out
cmp
or
dec
cmc
lret
dec
sub
cli
xchg
repz
imul
sbb
pop
inc
and
adc
xchg
testb
xor
repz
bound
int
int
outsb
lea
cmp
dec
into
rcl
std
cmc
rcrb
push
cld
pop
push
ds
inc
inc
xchg
pop
jo
jns
fstl
jle
jbe
or
and
outsb
jns
ljmp
outsb
fs
mov
in
adc
mov
push
cs
sbb
adc
jbe
ret
lods
ret
aaa
sub
and
ljmp
mov
jecxz
dec
xchg
ss
push
orb
dec
cmp
jo
pop
mov
sti
push
daa
cmp
xchg
mov
add
mov
lcall
addr16
popa
lods
rcl
arpl
add
sbb
dec
xor
push
jns
mov
fiadds
add
mov
stos
sbb
popa
sub
mov
xchg
xor
jbe
mov
fldl2e
inc
dec
pop
test
mov
sbb
or
xchg
pop
lcall
imull
popa
jo
imul
movsl
hlt
and
addr16
mov
ss
push
dec
ftst
cmp
pop
lahf
xchg
movsl
cmp
mov
mov
lcall
outsl
sub
mov
pusha
pop
out
mov
call
loope
dec
out
inc
outsl
adc
cltd
mov
das
or
jmp
test
insb
cs
jecxz
add
inc
push
loope
pop
inc
loope
subb
xchg
addb
xor
push
pop
inc
test
push
scas
mov
test
fnstenv
inc
jle
addl
fildl
mov
adc
aad
in
mov
adc
xchg
fildll
push
push
pop
adc
sub
mov
pop
sbb
lods
andl
aad
sbb
sbb
add
pop
push
mov
inc
push
mov
sub
fstpl
xchg
push
cmp
pop
push
add
mov
pusha
cmp
push
repz
addr16
jb
jb
sub
jo
sub
adc
pop
push
xchg
loopne
or
sub
inc
mov
add
push
fnstenv
outsb
push
scas
ljmp
andl
stos
lods
dec
cli
sub
ret
xchg
mov
loop
into
push
push
ret
mov
cmp
stc
ret
sbbb
std
cld
or
ljmp
rcrb
mov
insl
cmp
xchg
pop
ss
fmull
shrb
data16
clc
cwtl
int
xor
stos
xor
clc
enter
push
push
js
out
inc
push
mov
test
mov
mov
mov
xchg
leave
cmpsb
je
ljmp
sahf
mov
and
das
inc
pop
dec
fidivs
xchg
add
sub
and
lret
je
sbb
insl
cmp
dec
xor
lea
imul
and
movsl
es
clc
push
insl
jne
jae
test
sti
add
lods
stos
push
test
xor
jmp
shll
pusha
fisubs
outsb
xchg
or
xchg
ffreep
mov
sbb
mov
daa
or
out
in
xor
mov
bound
inc
jns
outsb
sbb
or
out
dec
lds
loop
lods
push
push
sbb
xor
outsb
xchg
inc
dec
sbb
cmpsb
mov
pop
dec
push
pop
cmpsb
adc
ss
outsl
mov
mov
or
push
stos
test
pop
xchg
clc
adc
test
mov
and
mov
dec
jne
lcall
pop
fidivrs
inc
sub
fisubrl
mov
inc
mov
sub
rep
dec
inc
jne
dec
lock
add
cmpsl
bound
inc
mov
jle
sbbl
pop
pop
pusha
jp
addr16
cmp
pop
imul
cmpb
fadds
or
mov
mov
nop
jl
push
dec
cwtl
fdivrl
cli
mov
add
rcrl
stos
xchg
iret
pop
pop
popf
out
std
xor
daa
jb
adc
dec
mov
shll
imul
cltd
xchg
insb
jge
dec
lcall
mov
fwait
lds
mov
in
jg
pop
cmp
ret
mov
xor
mov
jb
ljmp
dec
in
mov
xchg
fcmovu
xchg
xlat
movsl
mov
aam
mov
cli
insb
ja
in
jg
add
scas
rorl
repz
adc
cmc
dec
orb
jo
ds
movsl
pop
mov
xchg
aaa
sbb
mov
pop
mov
xchg
and
cmp
dec
push
lcall
jbe
jmp
dec
xchg
cli
lods
jle
xchg
stos
mov
clc
fwait
cmp
sbb
push
push
cli
shlb
mov
push
mov
jo
repnz
aaa
mov
arpl
add
in
pop
xchg
int
cmc
inc
dec
lret
pop
arpl
sarb
cltd
cld
jecxz
mov
sub
sbb
mov
outsl
fisttps
lret
jle
xchg
fwait
lods
sub
stc
mov
dec
fucomi
cmpsl
add
out
movsl
fstpt
insb
into
add
or
cli
push
test
ret
loope
jbe
mov
sub
jle
or
sbb
adc
call
shrl
jbe
and
sar
incb
ds
fisubl
inc
pop
mov
call
sbbb
sbbl
cmpsl
sub
mov
imul
dec
xchg
jl
inc
stos
or
jle
imul
movsb
fxch
mov
movsl
xchg
xchg
sbb
or
push
xor
loop
loope
or
mov
xor
ss
jns
push
jg
mov
mov
aad
out
repnz
pop
mov
pop
cmp
testl
add
shrl
xor
push
push
outsl
addl
es
dec
mov
pop
and
mov
and
dec
adc
mov
xchg
lret
ja
jg
iret
mov
lret
cld
cwtl
cltd
cli
mov
push
xchg
fmulp
push
mov
lea
pop
das
lret
cmp
push
icebp
sbb
out
fsqrt
mov
and
hlt
insl
std
pop
test
mov
insl
cmp
and
mov
rclb
cmpsb
mov
js
hlt
loop
popa
inc
pop
fsubp
int
hlt
sbb
enter
ret
sbbb
mov
inc
mov
sbb
mov
xlat
stos
into
rolb
aad
das
shlb
aad
jmp
test
in
cmp
xor
inc
loopne
mov
fldenv
cmp
sbb
mov
orb
clc
cltd
fnstcw
sub
in
dec
inc
xor
int3
fldlg2
sbb
jg
xchg
into
nop
inc
movsb
fsubrl
xlat
movsl
push
xor
sbb
ret
jl
xchg
shrl
movsl
je
inc
xor
pop
clc
mov
loop
daa
fucomi
jbe
std
mov
cmc
push
sub
bound
icebp
std
mov
mov
sbb
or
loop
in
aad
les
or
mov
lods
int3
pusha
cmp
fidivrl
lcall
negb
jbe
cmpsb
inc
popa
lods
out
movsb
leave
cmp
dec
testl
and
test
pop
inc
cmp
pop
cmp
adc
xor
sbb
mov
adc
pop
js
rclb
loopne
jecxz
or
sub
into
les
loop
ja
add
addr16
in
ret
bound
movsb
loope
push
mov
mov
push
in
xchg
dec
add
sarl
and
add
scas
adc
pop
push
push
fimuls
repz
jne
push
jb
iret
pop
insl
mov
fisttpll
test
add
cltd
cwtl
pop
mov
ja
mov
mov
negb
repnz
out
mov
ss
arpl
adc
shld
iret
adc
mov
out
pushl
mov
fildl
xor
push
sbb
enter
xchg
aad
mov
out
dec
and
mov
sub
jmp
and
mov
and
in
xchg
stc
movsl
cld
test
add
hlt
jmp
je
or
push
ss
outsl
loopne
dec
mov
fcomi
mov
dec
sbb
mov
inc
mov
mov
lock
fwait
jbe
adc
jae
cld
mov
lahf
insb
mov
mov
int3
mov
adc
mov
loope
roll
cmp
fnsave
add
aas
xchg
dec
out
adc
movsb
cwtl
imul
adc
jbe
jge
xchg
cmp
cwtl
dec
sub
sbb
and
ljmp
xor
push
add
pop
mov
jg
inc
jmp
out
push
mov
int
addr16
daa
dec
shl
mov
adc
addl
cmpsl
call
xor
iret
scas
jne
test
adc
sar
pusha
rcll
push
pop
and
pop
mov
pop
mov
fdecstp
mov
push
test
pop
clc
xchg
adc
les
and
mov
add
jecxz
sbb
sbb
push
rorb
add
xchg
jne
dec
mov
cmc
adc
push
adc
sub
arpl
fabs
arpl
lahf
testb
pop
les
xchg
lret
jns
ret
sub
jl
xor
jp
inc
or
addr16
mov
repz
push
lret
xlat
movsb
mov
dec
daa
push
mov
cmp
inc
das
mov
adc
push
je
sub
ljmp
dec
or
push
push
fildll
dec
mov
cli
leave
roll
flds
dec
repnz
jecxz
cmp
cmpsl
cmpsb
push
lods
fs
push
mov
push
test
ss
pop
inc
cmp
sbb
sbb
push
lahf
int
xor
xchg
or
sub
lcall
pop
or
inc
add
and
shlb
dec
pop
mov
adc
aad
pop
adc
mov
lret
daa
push
mov
pop
cmp
das
and
ja
testb
mov
inc
test
jecxz
and
and
cmp
shrl
jo
jmp
xchg
jle
inc
cltd
jno
mov
ret
lods
lret
pop
in
jmp
mov
pushf
sub
andl
add
xchg
inc
cwtl
push
mov
cmpsb
push
jl
and
ja
in
inc
add
xchg
pop
repz
pop
popf
cmc
in
mov
push
cli
fsubl
mov
add
jo
sbb
lret
dec
push
popf
ret
lods
sbb
inc
add
add
inc
jl
xor
fcmovb
mov
sub
xchg
xor
les
lcall
mov
cltd
inc
xchg
loopne
iret
mov
psubusw
mov
sbb
dec
cmpsb
imul
cmp
pop
jmp
mov
iret
out
push
imul
test
sbb
lds
add
daa
dec
mov
sbb
xchg
push
xor
icebp
sbb
stos
rclb
xor
mov
mov
aaa
pusha
xchg
inc
push
leave
push
pop
imul
cltd
push
bound
pop
sbb
jl
fs
mov
pop
inc
and
testl
ljmp
out
xor
rcll
push
sbb
aam
inc
repz
dec
scas
cmp
shr
mov
mov
mov
cld
mov
rclb
fistps
cli
inc
xchg
cmp
mov
cwtl
mov
dec
xchg
push
inc
xor
int
adc
lds
mov
inc
test
fisttps
adc
pop
sbb
jle
push
test
iret
inc
xchg
push
and
push
jl
sti
adc
in
aad
insb
jl
cltd
mov
mulb
out
lahf
cmp
inc
mov
outsb
loope
push
leave
scas
mov
pop
bound
push
xchg
fwait
idivl
xor
sub
xor
jp
test
adc
addb
jns
out
push
mov
pop
loopne
test
call
mov
mov
imul
aam
lods
cmc
cmpsl
fs
adc
mov
ljmp
pop
mov
add
cmp
push
pusha
ja
inc
sbb
xor
adc
into
or
jno
scas
pop
lods
mov
iret
add
in
daa
pop
js
clc
mov
xchg
mov
and
jnp
jmp
cs
sbb
xchg
ffreep
and
xchg
popa
fimuls
cltd
enter
fisubrs
stos
push
or
addr16
adc
stos
andl
sbb
mov
mov
inc
lea
push
jns
call
les
sbb
stos
pop
mov
mov
pop
loope
xor
dec
les
mov
fwait
cmpsb
dec
scas
aaa
outsb
pop
mov
lcall
jbe
cmp
in
and
mov
cli
iret
cmp
daa
inc
ret
stc
jl
jnp
shlb
mov
lret
adcl
scas
mov
das
mov
push
arpl
mov
inc
repz
sti
mov
cmpb
out
filds
nop
lret
std
push
cmp
xor
push
mov
cmpsb
mov
movsb
mov
xor
push
jno
and
adc
ret
adc
movsl
sar
xchg
push
mov
add
cwtl
jbe
cmc
cmp
imul
sbb
push
iret
pushf
dec
loope
pop
xor
push
adc
enter
ljmp
aaa
gs
pop
call
mov
mov
into
jne
jge
mov
cwtl
add
clc
daa
xchg
mov
popa
jge
sbb
call
jne
add
pop
dec
and
mov
mov
jns
sub
adc
lods
push
lcall
adcl
mov
icebp
dec
xchg
inc
in
mov
and
mov
pop
mov
popf
icebp
or
push
jge
adc
cmp
cmp
xchg
sub
xchg
cmp
jne
inc
jae
mov
bound
cmpsl
lret
adc
mov
inc
imul
xchg
xchg
js
out
push
sbb
and
pop
pop
sbb
out
fs
sub
ja
add
pusha
popf
rcrb
and
fidivrs
cltd
cmpsl
je
push
ja
mov
xchg
in
dec
fsts
mov
sbb
xchg
nop
mov
jg
test
or
xchg
jbe
mov
xchg
mov
addr16
sti
mov
or
or
pop
addb
mov
jmp
pop
jne
push
fbld
dec
nop
lock
dec
xor
movsb
ljmp
mov
insl
ja
das
push
cmp
ds
jle
cmp
inc
inc
push
jns
jo
xor
mov
stc
sbb
es
lds
clc
and
ja
out
enter
outsb
push
add
or
dec
jne
xchg
ror
push
or
movsb
jno
sub
repz
inc
pop
sub
fidivs
add
pop
lea
mov
mov
call
push
ss
adc
fwait
cltd
dec
mov
xor
add
xchg
push
xlat
sbb
pop
mov
cmpsl
inc
sbb
lret
push
aas
sar
data16
mov
icebp
xor
nop
sub
call
faddl
imul
loopne
ret
xor
cmc
je
int3
dec
je
fcmovnb
sbb
arpl
std
dec
push
dec
testb
pop
shrl
test
js
pusha
xchg
xchg
dec
sti
fisubrl
jbe
sbb
pop
and
data16
pop
ret
and
dec
xchg
and
push
xchg
mov
mov
xchg
push
sti
dec
xchg
mull
in
ss
adc
and
sbb
inc
jmp
out
jmp
mov
mov
pop
sbb
fildll
sbb
pushf
ficoml
dec
adc
inc
fxam
mov
inc
and
mov
push
jp
mov
icebp
pop
pop
je
push
inc
vpackssdw
fs
sbb
sub
in
add
pushf
jnp
dec
repz
sub
mov
mov
mov
orl
idivl
shlb
sub
mov
cwtl
xchg
jle
shll
aas
hlt
inc
push
fistpll
or
stos
pop
sub
mov
inc
nop
xor
xlat
add
jae
push
daa
ret
outsb
aam
subl
mov
mov
cmc
mov
and
jb
repnz
fmuls
xor
jecxz
data16
and
jbe
xor
sub
mul
jge
js
mov
mov
pusha
das
pop
mov
add
jmp
adcl
add
xchg
stos
cld
lods
add
adc
nop
in
cmp
test
hlt
adc
pop
or
stc
mov
push
inc
test
mov
push
sbb
fnstcw
mov
outsl
inc
inc
dec
mov
pop
inc
mov
inc
inc
test
repnz
push
scas
int3
push
mov
mov
cld
out
lods
lahf
jmp
pop
fsubp
fldt
enter
cmp
dec
je
frstor
and
push
jecxz
es
cmp
out
xchg
test
adc
and
dec
xchg
add
loop
mov
adc
cmp
lods
popa
lock
jbe
clc
pop
sbb
mov
int3
mov
mov
adc
leave
push
dec
cld
clc
push
xchg
sub
addr16
adc
or
adcl
push
loope
and
es
outsl
xor
arpl
loop
insl
scas
frstor
jbe
mov
jge
sahf
pop
addb
sub
jecxz
and
inc
push
aam
lcall
arpl
movsl
xor
sub
push
push
ficoms
lcall
stos
push
dec
aaa
in
fbstp
or
mov
mov
insb
stc
stos
dec
mov
pop
pop
dec
aas
jmp
pop
incl
sbb
es
nop
push
pop
cld
sub
repnz
lahf
adc
jg
sbb
mov
sub
lcall
lret
scas
lahf
enter
xor
mov
in
leave
adc
add
pop
inc
mov
test
es
xchg
orb
xchg
or
and
push
cs
inc
push
frstor
push
jl
cmpsb
and
aas
cmp
xchg
add
icebp
ds
outsb
lds
cwtl
mov
mov
sbb
pop
addl
mov
add
sub
lahf
int
ret
cld
mov
push
shlb
mov
inc
test
pop
adc
pop
xchg
push
jg
push
stos
dec
inc
test
aam
mov
outsb
and
add
dec
rorl
jae
add
cmp
mov
sbb
pop
test
and
push
into
push
jo
out
ja
clc
dec
lods
shl
divb
inc
xchg
rcrb
pop
dec
mov
movsl
ret
rclb
rorb
jp
sbb
mov
fnstenv
xor
fsub
lea
scas
jns
lods
test
jp
jg
jo
and
mov
test
inc
mov
add
sti
pop
jne
into
ret
ja
mov
clc
sti
xchg
mov
inc
pop
xchg
dec
ja
xchg
rcrl
pop
mov
aas
xor
cltd
loop
push
adc
sub
xlat
out
outsb
jg
fidivs
cmpsb
mov
test
sub
fsts
xchg
cltd
xchg
cmc
cmpsb
fwait
xlat
daa
mov
int
sub
std
fs
or
jo
mov
cs
push
mov
mov
xchg
mov
clc
and
or
mov
pusha
stos
mov
int3
cmp
cmp
and
inc
sub
int
adc
pop
lock
test
xchg
mov
out
divb
xchg
jne
and
push
arpl
mull
mov
mov
sbb
lds
dec
rolb
mov
shrb
and
adc
mov
pop
imul
scas
jnp
mov
mov
popf
mov
mov
adc
jecxz
movsb
shlb
outsb
leave
cmp
sbb
xor
aam
cwtl
lods
and
subl
sub
outsl
mov
xchg
in
lea
xor
xor
jg
les
les
inc
lods
inc
rclb
stos
inc
mov
cmp
push
imul
movsb
call
sbb
xlat
jns
ss
in
sbb
addl
sbb
mov
es
adc
mov
cmp
loopne
call
les
mov
xor
sbb
push
dec
add
mov
push
jae
mov
test
jb
nop
xor
push
mov
cmp
cmpsb
cmp
in
es
div
negl
xchg
sbbb
cmp
shll
cmpsb
std
pop
aad
push
sbb
pop
rorb
or
push
cmp
add
xor
xchg
mov
mov
dec
dec
push
add
jne
jne
inc
cli
sbb
xchg
dec
lea
stos
test
mov
push
and
pop
or
xor
or
es
int
stos
unpckhps
jb
and
xchg
xchg
add
in
mov
lcall
fs
dec
int
les
outsl
mov
into
pop
jg
xlat
popa
dec
mov
cmpsb
out
push
sahf
lcall
sub
dec
jnp
out
test
cmp
push
out
push
xchg
repnz
fbstp
adc
int
sub
negl
mov
lret
xor
xchg
in
inc
sbb
xor
mov
icebp
mov
pop
or
imul
dec
add
xor
ja
dec
orl
dec
repnz
cwtl
pop
adcb
dec
pop
cmpsl
add
lret
cmp
repnz
pusha
sarb
or
out
inc
inc
aaa
adc
movsl
sub
push
rcrl
arpl
push
push
lods
in
pushf
in
dec
loop
xor
sbb
pop
rcrl
stos
fcom
xchg
cs
xor
cmpsb
cmpl
les
je
push
push
mov
xchg
lret
imul
rorl
gs
aas
mov
pop
pop
aas
rolb
pushf
sahf
jnp
dec
mov
mov
fucom
clc
and
int3
mov
cmp
addb
cmpl
mov
fisubrl
daa
add
cmp
xor
pop
incl
or
jnp
mov
insl
sub
scas
out
or
cltd
mov
testb
mov
mov
mov
lret
mov
clc
insl
stc
sbb
adc
hlt
lods
xchg
pop
andl
inc
repnz
mov
jmp
sub
pop
add
mov
mov
mov
and
add
out
or
sbb
jbe
add
jmp
mov
aam
data16
aad
in
out
mov
loopne
imul
and
and
push
and
mov
pusha
pop
int3
mov
mov
loope
xchg
jecxz
pushf
and
leave
sub
push
cmp
popa
sub
dec
sub
sbb
sbb
inc
punpckldq
xor
sbb
add
stos
mov
cmp
lcall
in
nop
lahf
and
jmp
sub
ds
sti
push
mov
hlt
and
or
xor
fnsave
jmp
aaa
xchg
push
cld
cs
lahf
pushf
movsl
jns
mov
ret
xchg
iret
mov
aaa
xchg
xchg
or
aad
sti
and
add
in
jns
dec
jp
mov
arpl
out
push
inc
fsubs
stos
mov
std
mov
push
pop
sub
movsb
fmull
adc
stos
lock
inc
loopne
xchg
xchg
jns
aam
dec
pushf
xlat
int
inc
fistl
mov
aas
insl
inc
out
add
inc
jl
jbe
call
inc
lods
sbb
pop
adc
fsubl
mov
fiaddl
test
sbb
aam
mov
loop
arpl
adc
daa
mov
sahf
int
out
jge
inc
dec
outsb
inc
xor
jnp
roll
mov
jb
inc
js
mov
pop
pop
inc
push
fisttpll
bound
ljmp
pop
add
mov
inc
insb
sbb
push
stos
add
adc
push
xchg
mov
mov
cwtl
adc
imul
add
add
gs
addr16
lcall
or
iret
outsl
xor
andb
pop
push
mov
into
insb
pop
into
pop
xchg
mov
xlat
orb
mov
decl
push
test
push
dec
mov
mov
ljmp
pop
inc
sbb
sti
lock
or
sahf
add
and
jns
imul
and
aam
call
sahf
sub
ja
test
repz
xchg
mov
stos
and
jmp
insb
pop
int3
loopne
push
dec
cmp
adcb
cmp
jl
xchg
sbb
enter
popf
mov
stos
or
loopne
fldenv
cli
cmp
dec
sub
add
sbb
xor
mov
test
shlb
mov
testb
sbb
mov
nop
cwtl
dec
daa
mov
xchg
push
dec
inc
or
mov
aaa
jnp
or
and
insb
adc
or
aad
ja
or
sahf
test
pop
sub
mov
xor
adc
test
jle
cwtl
ds
mov
mov
out
sbb
pop
pop
xor
in
pop
xchg
xorl
data16
sahf
rcl
adc
loop
push
ja
mov
cmpsl
fcmovne
push
lock
mov
xchg
mov
test
cmp
imul
add
ret
lahf
outsl
adc
push
dec
fbstp
fwait
repz
push
dec
out
or
call
arpl
orl
add
sub
mov
add
pop
cmc
mov
dec
mov
dec
ss
or
dec
cwtl
mov
loop
clc
movsl
dec
xchg
sub
divl
sbb
jle
sahf
mov
xor
pop
out
pop
fisttps
mov
inc
or
pusha
lock
sbb
jmp
xchg
and
push
sbbl
repnz
stos
sbb
xchg
in
adc
icebp
int
inc
iret
jb
inc
les
or
xor
xor
xchg
mov
xlat
stc
call
mov
outsl
ss
cli
leave
subl
sub
pop
loope
imul
je
mov
jae
out
icebp
test
jecxz
rcrb
inc
sbb
xlat
call
repz
jmp
shl
jnp
pop
mov
xor
add
mov
or
leave
addl
fbld
jb
mulb
test
fxch
ficoml
call
pop
in
ror
mov
cmpsl
ljmp
inc
jns
jae
xlat
inc
fiadds
mov
ret
and
int
cltd
scas
imul
or
cmc
imul
sbb
inc
jno
in
shll
pop
addl
push
lods
add
dec
mov
cli
push
push
test
int
sub
in
sar
and
or
cmp
sub
popf
lods
push
loop
cltd
jno
xor
cmp
cmp
js
add
lea
imulb
in
mov
pusha
out
or
int3
or
or
mov
dec
out
jmp
repz
pop
popa
cwtd
or
icebp
cmp
sti
out
dec
ja
mov
push
ljmp
inc
nop
xchg
push
in
out
dec
aad
rol
dec
les
jne
stos
repz
or
xor
dec
dec
scas
in
jo
xor
fisttps
loope
push
stc
orl
test
xor
cmp
les
jae
loop
inc
imul
cmpsb
sbb
les
xor
and
and
and
and
lock
in
mov
sahf
rorb
mov
pop
mov
enter
mov
popa
jp
iret
mov
js
cmpsl
or
stos
in
sti
pop
push
xor
jg
push
xor
add
jnp
test
mov
sub
out
xor
mov
jnp
pop
out
hlt
lahf
mov
sub
in
and
popa
ror
stos
push
mov
xor
fisubl
iret
mov
xor
sbb
dec
pop
xchg
enter
icebp
stos
out
jns
xchg
jmp
jnp
mov
orl
mov
mov
sub
pop
rolb
rcr
inc
mov
gs
pusha
dec
pop
sahf
add
dec
lcall
cmp
idivb
mov
call
out
fsts
dec
push
mov
sub
sub
aam
fs
cmpsb
data16
lods
dec
mov
push
mov
cmp
mov
push
idivb
adc
xor
mov
sbb
ret
je
xor
jno
inc
repz
sub
pushf
test
stos
jo
lods
jo
adc
pop
stos
pop
dec
bound
mov
or
lods
shrb
pop
daa
icebp
gs
mov
sbb
push
cmp
lret
js
pop
or
cmpsl
int
push
stc
cmpsb
pop
frstor
in
jns
inc
ja
inc
lods
push
divb
insl
pop
sub
fstpl
pop
cmpb
mov
cs
bound
ja
lds
sbb
aam
int3
mov
sub
cltd
subl
sbb
cs
push
xchg
test
icebp
mov
loopne
cwtl
adc
in
in
fucom
repz
in
mov
out
jmp
xchg
or
pop
rclb
cmpsl
jne
popa
jnp
ret
sub
jno
mov
stos
pop
push
pop
add
fimull
xlat
mov
inc
loop
jns
lahf
jb
mov
aaa
and
bound
inc
push
mov
ja
lahf
icebp
int
jg
push
lcall
gs
pop
jmp
mov
cmc
stos
xlat
cwtl
add
arpl
push
das
adc
mov
mov
fcomps
push
lahf
dec
xor
pop
shrl
cltd
nop
iret
push
dec
jl
sti
pushf
imul
ret
leave
sub
daa
sbb
shl
or
and
dec
ss
sbb
cmp
jns
push
fstpt
mov
lahf
and
sbbl
pop
mov
push
xchg
xor
testb
repnz
mov
jb
mov
negb
lret
mov
mov
jbe
pop
mov
pop
jmp
mov
ret
push
mov
out
cmp
and
std
lahf
lea
inc
dec
cmpsl
xlat
jbe
adc
mov
push
fisttpll
inc
and
mov
icebp
inc
push
and
cltd
in
leave
sbb
mov
mov
xchg
or
jns
add
cmpsb
daa
inc
cld
sbb
decl
insl
mov
js
or
add
ficompl
sub
pushf
sub
out
dec
fidivl
insb
pop
insl
xchg
jns
pop
test
pop
pop
adc
jnp
jae
push
sbb
leave
call
jmp
fwait
sub
fnstsw
mov
stos
ja
sarl
into
fs
mov
mov
inc
gs
push
popa
add
sbb
es
mov
shl
add
xchg
mov
std
daa
mov
and
mov
sbb
jmp
movsl
lea
imull
sub
cmp
loopne
popf
push
mov
add
xchg
fs
das
rol
vpsubsw
inc
jle
orb
arpl
daa
fisttpll
and
in
gs
movsb
inc
jo
mov
iret
cmp
xchg
mov
adc
xor
and
push
shl
mov
jae
or
pop
mov
xor
stc
stc
xchg
push
sub
cmp
inc
rcrb
push
mov
xchg
mov
sti
mov
dec
xchg
pop
je
dec
dec
sbb
pop
dec
testl
mov
nop
fiadds
aad
cmpsl
gs
outsl
sbb
jg
sbb
mov
es
add
or
push
inc
fdivrs
mov
mov
fistpll
test
xor
ss
mov
loop
dec
mov
addr16
aad
add
popf
sub
mov
pusha
filds
push
addr16
cltd
dec
es
add
loope
adc
push
jmp
out
adc
fstl
sub
inc
or
shll
outsl
test
mov
int3
lret
insl
ret
ljmp
addr16
cmp
cs
inc
mov
insb
rolb
cmc
cmp
mov
push
or
imul
stos
mov
lods
mov
popf
pop
push
ja
xor
mov
int
daa
sub
or
aam
mov
push
rclb
jbe
std
or
mov
out
out
push
and
pop
sub
iret
xchg
sbb
or
ljmp
lock
xchg
adc
shrb
cmp
mov
sarl
inc
pusha
inc
pop
leave
mov
jecxz
and
test
fwait
push
daa
add
in
xor
lahf
clc
gs
dec
pop
iret
roll
mov
popf
xor
gs
or
cmp
mov
clc
inc
rorb
and
dec
dec
mov
pop
or
lcall
inc
roll
imul
loopne
xor
sbb
xchg
xlat
addr16
pop
mov
iret
push
bound
push
rclb
lea
pop
les
mov
lcall
mov
in
ja
push
pop
fcomi
adc
and
adc
aad
shr
pop
xor
lods
add
das
out
lods
int3
enter
icebp
and
cmp
dec
dec
mov
aad
push
xor
jl
daa
inc
cwtl
fst
pop
repnz
inc
or
aas
imul
call
daa
in
stc
mov
hlt
ljmp
ficompl
mov
xchg
das
lret
xchg
out
xchg
cwtl
pusha
mov
adc
sti
stos
gs
ret
pop
pop
out
or
shrb
xor
aam
mov
repz
lcall
push
loop
fsubrs
js
movsl
mov
mov
cmp
inc
cmp
push
mov
hlt
jae
dec
jl
scas
add
insl
push
inc
xor
shll
loope
xchg
dec
pop
inc
notl
inc
inc
mov
mov
leave
or
movsl
cmp
xor
das
roll
pop
fildll
sbbb
shll
cli
mov
dec
imul
pop
push
adc
das
mov
cmpsl
sbb
jbe
jle
adc
movl
js
sti
mov
stc
jnp
mov
fiaddl
lea
mov
jl
sbb
pop
cs
and
sbb
mov
adc
mov
dec
xchg
arpl
rcll
fwait
imul
rorb
imul
imull
int
lret
loope
xor
jo
sbb
mov
add
outsb
mov
leave
jge
jg
addr16
cmp
iret
xor
fisttps
adc
inc
add
loopne
inc
mov
push
add
push
ret
stos
sbb
icebp
xchg
inc
push
cmpsl
mov
ffree
into
mov
adc
jns
xchg
cs
mov
das
into
int
mov
dec
push
and
movsl
sbb
xchg
adc
inc
ss
std
jnp
leave
pop
adc
xchg
imul
dec
xchg
or
jg
jmp
pop
add
mov
add
mov
mov
mov
out
inc
sbb
dec
pop
dec
pop
scas
sub
loopne
out
jl
stos
movsb
push
out
enter
shrl
and
mov
es
in
jg
fs
sub
inc
mov
andl
leave
rcrb
aad
sub
std
mov
test
popf
mov
xor
mov
cli
pusha
adc
je
jmp
or
ss
inc
sbb
mov
mov
pop
mov
or
in
aad
sub
inc
pushf
adc
scas
mov
out
ja
shrb
inc
xor
mov
repz
rol
or
lret
mov
cli
int3
mov
aam
leave
inc
xor
das
leave
fildl
mov
jnp
jne
loopne
aad
scas
out
dec
mov
movsb
or
mov
push
cs
pop
orb
out
aaa
lods
cmp
gs
shll
mov
ljmp
sub
dec
mov
cmp
push
jp
add
movsl
shrb
and
in
push
cld
or
sub
test
ret
mov
push
sbb
notl
notl
in
jge
out
xlat
filds
add
jns
xor
pop
xor
lret
sbb
rol
xchg
jno
sub
ja
and
lahf
orb
mov
xchg
and
sub
ret
bnd
push
jg
outsb
mov
je
lock
inc
shl
jmp
jne
stos
aaa
jae
clc
or
and
cmp
mov
leave
test
mov
cmp
enter
frstor
sub
xchg
je
fcmovnbe
shlb
and
mov
adc
cmp
and
cli
fcmovnbe
push
xchg
jmp
pop
nop
sti
mov
hlt
in
outsb
les
jg
jb
ljmp
mov
inc
or
mov
lods
push
cmpsb
mov
or
les
icebp
je
cmp
xchg
jae
das
ds
sbb
sar
jbe
ja
lock
dec
xchg
ror
adc
jo
mov
adc
and
push
xchg
mov
pop
les
jle
adc
mov
sbb
pop
mov
jl
loopne
shll
loop
add
or
subl
pusha
repz
dec
or
sar
sub
stos
test
rorb
inc
sub
mov
imul
js
xchg
incl
fcoms
sub
in
roll
add
push
mov
int
push
xchg
and
or
adc
sub
add
insb
test
and
pop
lods
sub
push
mov
ljmp
leave
pushf
xchg
add
add
adcb
mov
cs
xor
ljmp
int3
dec
and
lahf
insl
cmp
jo
cwtl
jmp
xor
jne
int3
scas
xor
cs
dec
lock
imul
aaa
data16
pop
ficoml
in
and
in
sub
inc
in
mov
xchg
push
mov
lock
arpl
mov
leave
int3
std
and
inc
mov
incl
dec
shlb
or
in
pop
add
dec
sub
mov
stc
icebp
pusha
dec
or
mov
ret
or
jmp
gs
insb
push
xchg
lea
aam
pop
fstps
addb
mov
add
stos
popa
subl
mov
movsb
add
inc
movsb
stc
scas
aaa
xchg
xlat
ja
mov
mov
mov
mov
rorb
dec
and
std
sbb
movsb
sub
movsl
pop
js
jge
mov
daa
repnz
inc
ja
bound
adc
xchg
test
arpl
jns
fdiv
ror
pop
cwtl
les
rorl
inc
xor
push
aam
cmpb
out
cltd
add
test
jge
jnp
lret
jp
push
mov
mull
imul
push
loop
stc
sbb
mov
shrl
add
rcll
or
pop
sub
add
inc
jl
jecxz
or
insl
stos
icebp
bound
mov
xor
pop
es
lahf
mov
sub
fmulp
sahf
dec
popa
lcall
cmp
push
std
popf
and
fwait
or
rcrb
test
mov
pop
jg
clc
jmp
arpl
pop
flds
outsl
jp
add
mov
std
push
xor
push
rolb
repz
cmp
lcall
jl
dec
mov
push
enter
jle
sbb
clc
pusha
jno
enter
dec
popf
cmp
mov
movsb
adc
movsb
icebp
repz
add
inc
or
fildl
cli
dec
fsubp
mov
cmc
mov
mov
mov
ja
add
add
pusha
add
loopne
adc
loop
int3
nop
nop
push
mov
ja
mov
xchg
or
lea
lds
aam
mov
data16
mov
xchg
hlt
repz
jbe
jo
imul
xor
pusha
pop
jle
out
mov
scas
sarb
jns
aaa
fldl
fadd
jl
xchg
popa
mov
in
aad
jp
mov
sub
pop
pop
test
in
mov
mov
sub
mov
lds
xor
mov
dec
lret
mov
pop
cmp
mov
sbbb
frstor
cmp
mov
jo
add
cmp
mov
xlat
leave
xor
jmp
jbe
or
and
mov
out
sti
loopne
sbb
sarb
leave
stos
shr
repnz
xchg
ja
test
xchg
scas
pop
mov
and
rol
or
icebp
push
pushf
ss
fldenv
pop
fwait
rcll
jmp
jle
add
inc
out
push
cmp
paddusw
andb
std
std
movsl
xchg
or
fdivrs
lock
xor
pop
cmpl
add
movsl
int3
sbb
add
mov
je
loope
clc
xchg
test
inc
jecxz
fs
jp
jmp
int
add
adc
cmp
sahf
repnz
data16
push
jnp
stos
xchg
cli
test
inc
inc
test
flds
jl
ljmp
rcrl
sti
loope
push
inc
test
dec
call
stos
test
les
fs
or
inc
lock
outsb
cli
pop
xchg
adc
fldcw
xlat
ss
lcall
jne
fists
movsb
in
out
dec
add
cmp
test
fsubrs
pop
push
std
into
loopne
test
insb
fidivrs
imul
jo
dec
mov
fsts
cli
pop
leave
enter
shr
mov
inc
dec
rcll
push
add
xchg
jge
jae
fldl
ss
int
inc
xor
mov
xchg
jecxz
or
pop
fwait
stos
mov
jb
mov
aam
fstpl
inc
sbb
sbb
ret
mov
pop
stc
xor
pop
mov
in
insl
push
and
int3
xor
scas
inc
sub
int
cli
loope
lahf
xchg
sbb
mov
push
pop
cmc
xchg
dec
pop
lock
pusha
mov
push
sbb
xchg
jno
sbb
push
mov
ja
jno
ret
mov
stc
adc
push
sbb
ds
push
bound
or
pusha
push
test
ret
nop
adc
fwait
mov
adc
jb
iret
jecxz
cld
or
cli
fdivr
in
pop
and
mov
jnp
and
pop
mov
orb
pop
mov
dec
and
rcrl
dec
les
dec
dec
addb
enter
add
pop
jbe
scas
movsb
mov
lock
in
test
xchg
cmp
les
inc
imull
or
popf
into
sub
repnz
pop
xor
cltd
icebp
sub
mov
and
rolb
int
pop
jae
mov
insb
out
add
loopne
push
xor
cmpsl
rcrb
in
addr16
xor
pushf
pop
push
test
loopne
push
jne
into
and
and
fcomp
daa
popf
pop
es
xlat
push
leave
pop
mov
test
test
int3
push
aas
mov
lret
sub
lahf
dec
movsb
roll
pop
repz
sbb
daa
scas
cmp
pusha
jecxz
call
ds
mov
jne
push
clc
je
loopne
popa
ds
pop
sbb
inc
push
jns
cmp
movsb
jae
clc
ljmp
dec
mov
jb
in
xor
and
mov
fs
inc
xor
mov
xchg
pop
push
add
adcl
pop
cld
loopne
inc
add
jbe
jl
push
les
hlt
fcomp
cmpsl
insb
xor
imul
movsl
push
xor
mov
pushf
pop
mov
das
addr16
or
scas
add
inc
iret
sub
sub
dec
insb
imul
pop
addl
outsb
jnp
sti
cmp
mov
imulb
push
sar
jnp
dec
xor
imul
pop
push
inc
daa
mov
js
pop
ret
stc
sarl
in
adc
mov
lret
xor
fwait
jmp
dec
cwtl
and
push
out
mov
shll
test
scas
lock
pop
xor
ret
xchg
into
aam
fistps
xchg
andb
jl
mov
aaa
lcall
pop
mov
imul
divl
mov
in
and
mov
sahf
or
rcl
cmp
out
and
adc
xchg
in
lock
push
mov
out
scas
sub
inc
mov
stos
movsb
lea
imul
mov
jb
pop
repz
sbb
and
mov
cmc
jae
cltd
inc
fiadds
enter
dec
mov
daa
pop
aad
sbb
lret
pop
fiaddl
mov
popf
cs
lret
mov
xchg
inc
inc
push
je
dec
or
add
lcall
aam
nop
pop
cld
inc
fdivl
adc
mov
or
sbb
ja
ljmp
or
rorl
jne
lea
jp
sahf
shlb
pop
sbb
les
inc
xchg
jns
fnsave
lahf
or
mov
div
xchg
test
dec
ljmp
ljmp
pop
jp
shrl
push
sub
mov
cs
clc
js
in
arpl
add
in
inc
test
scas
stos
cli
jae
lock
mov
and
cmpsl
sti
push
gs
add
mov
sahf
pop
loopne
cli
pop
jne
and
add
jecxz
cmp
test
cs
xchg
aas
mov
inc
pop
popl
leave
and
dec
inc
inc
adc
ja
fisubrs
push
mov
xchg
fcomp
cmc
es
xor
sbb
xchg
xor
mov
jmp
or
ds
test
popf
and
mov
cmp
dec
mov
xor
nop
divb
push
xchg
dec
jo
pop
adc
pop
incb
push
pop
lahf
movsb
dec
xchg
push
pop
gs
ficoml
adc
cmpsl
stos
mov
inc
add
inc
mov
nop
repz
lock
xchg
mov
lea
push
movsb
out
sub
mov
adc
shlb
test
out
pop
pop
cwtl
push
das
out
pop
inc
sbb
or
out
sbbb
fmull
lret
aam
or
sbb
rcrl
fistps
das
jmp
add
add
pushf
dec
loope
mov
cmp
or
mov
jnp
inc
cmpsl
dec
out
xchg
stos
mov
add
test
xchg
mov
sub
mov
mov
je
rcrl
into
jp
rorb
mov
mov
imul
lahf
jo
inc
sub
sub
adc
repnz
mov
and
mov
leave
test
or
add
xchg
xchg
adc
sbbl
je
or
ljmp
push
xchg
xchg
andl
insb
or
sub
ss
xchg
mov
popf
shl
aam
cmp
fmuls
mov
mov
mov
or
lds
sbb
push
js
pop
mov
stos
xchg
jo
outsb
cmpsb
cmp
lret
les
or
cmp
lock
daa
ret
mov
bnd
outsl
add
nop
dec
jl
xor
dec
mov
adc
mov
xchg
ds
jecxz
mov
jp
call
fcoms
addl
mov
sbb
adc
xchg
imul
psraw
data16
xor
pop
sub
dec
ret
call
test
sarl
dec
jmp
adc
addr16
jle
jle
push
sbb
lret
iret
lret
dec
mov
bound
dec
mov
mov
aas
les
jns
out
jle
jl
ret
jecxz
aam
mov
dec
add
sub
cltd
xchg
repnz
and
mov
in
je
cmp
outsl
push
jne
pop
push
iret
lods
xchg
xlat
push
aas
add
fdivrl
cld
dec
mov
pop
jb
cmp
js
jns
hlt
lret
or
int
shrb
int
dec
mov
or
repz
or
sub
cltd
fwait
and
cmp
mov
xor
dec
int3
clc
push
inc
stos
push
push
lea
movsl
mov
jno
aam
stc
outsl
sbb
sub
mov
lock
loope
pop
gs
out
enter
pop
roll
xchg
in
sub
icebp
cmpsl
test
sub
ret
inc
mov
int
mov
jns
fisubrs
sbb
testl
fidivs
mov
and
shll
je
imul
and
cmpl
or
push
cmpsl
cmpsb
cmp
mov
mov
cmp
cltd
and
pop
pop
sbb
ret
cmp
scas
xchg
sbb
xchg
jge
mov
ficomps
add
jnp
repz
jge
dec
cmp
sbb
and
jne
mov
jb
insl
xor
adcl
jp
sbb
dec
cmp
pop
push
cmp
push
xor
pop
xchg
hlt
and
add
cltd
repnz
xchg
lret
addr16
lret
fwait
mov
cld
push
push
cmc
mov
dec
sub
lds
mov
idiv
sbb
idivl
sub
negl
jns
repz
lcall
jae
lret
inc
pop
in
cmp
scas
ror
lock
and
repz
rcll
xchg
pushf
in
push
lret
add
cmp
mov
add
xor
adcl
lret
mov
fdiv
dec
xor
in
mov
push
outsl
lock
fimull
scas
xor
push
inc
pop
sbb
inc
pop
call
int3
push
jno
xor
shl
not
aam
stc
inc
adc
xchg
xchg
lcall
jno
shrl
xlat
xor
dec
dec
notl
sbb
jno
sub
jp
fidivl
gs
xchg
sbb
mov
cli
inc
in
push
sbb
out
sahf
jl
call
fiadds
cmp
std
ficompl
cmp
out
ljmp
mov
fcoml
faddl
cmc
push
inc
push
fisttpl
pop
inc
mov
add
pop
mov
jne
jecxz
add
jmp
out
out
mov
add
in
popf
in
repz
jbe
ja
stc
in
or
lods
push
cltd
jno
fdivrl
pop
jne
int
dec
arpl
lock
jo
jae
dec
or
movsl
inc
out
sar
lods
mov
jbe
ds
mov
push
aam
jae
adc
jns
xchg
mov
in
aaa
in
jl
pop
xor
mov
dec
cmp
stc
sti
mov
pop
jo
sub
lret
sbb
xchg
imul
or
mov
inc
popf
jns
xchg
xor
cwtl
popf
lods
mov
mov
xor
call
dec
inc
jmp
add
push
fadds
push
jp
jbe
fists
sub
mov
mov
fwait
sub
sub
test
mov
ss
imul
js
clc
or
xchg
repz
sub
jbe
ljmp
jnp
adc
sub
xor
sar
lock
outsb
cld
rolb
add
int
fwait
push
add
rorb
ss
out
dec
leave
pop
stos
test
notb
dec
pop
fistpll
adc
inc
push
lret
inc
fmuls
ds
pop
jmp
dec
mov
inc
negl
sub
mov
pushf
xchg
jns
sti
xor
lods
mov
fcmovbe
lcall
icebp
jb
mov
ja
fwait
dec
add
clc
out
xor
jbe
mov
fdivrs
push
cltd
pop
cmpsb
mov
cs
ret
fcoml
shll
jno
rcll
insl
xchg
jmp
sbb
jl
cmpsb
or
outsb
shlb
fdiv
sarb
pusha
addl
negb
adc
xor
jns
xor
cmp
movsl
fidivrl
push
mov
push
xchg
mov
sti
repz
sti
dec
ret
out
jb
jno
adc
into
cs
out
push
jo
cmpsl
in
push
cmp
clc
cltd
sub
stc
xor
push
sbb
mull
mov
xchg
ds
push
xor
and
push
push
xchg
mov
loope
js
cld
mov
stos
pop
sbb
sub
fidivs
inc
mov
lret
push
xor
add
movsl
aam
sbb
pop
mov
gs
pop
addr16
dec
inc
orl
pop
or
cli
in
xchg
iret
fs
jge
push
mov
mov
push
push
in
pop
or
divl
popa
ja
aas
and
mov
in
arpl
sti
loope
sbb
lock
scas
mov
xchg
adc
lods
and
or
pop
frstor
xchg
pop
mov
ret
loopne
jmp
fisubl
aaa
daa
aas
push
sbb
pop
fists
sbbl
js
movsl
movsb
mov
mov
inc
adc
mov
rorl
mov
adc
cmp
jnp
jbe
loopne
icebp
mov
xchg
fisubrl
add
aad
mov
bound
fs
sbb
ficomps
xchg
pop
sti
sbb
shl
adc
xor
in
rolb
push
add
mov
fwait
out
cmc
sbb
inc
cmp
iret
add
daa
bound
jle
xor
xchg
xor
gs
pop
jl
iret
sar
int3
int
movsl
sahf
inc
pushf
rcrl
fs
pusha
loope
aam
sub
arpl
inc
pushf
lods
std
es
cmp
repz
es
js
jl
jne
xchg
lock
stos
push
stc
xchg
mov
je
mov
loope
xchg
cmp
and
js
cwtl
fsub
push
stos
jne
test
lret
inc
and
mov
data16
mov
or
mov
je
ffree
push
push
cwtl
addr16
jecxz
enter
xchg
popa
popa
or
xabort
mov
xor
sarb
jo
pop
popa
jg
sub
insb
push
jle
mov
cltd
and
push
jg
into
shll
jecxz
in
dec
adc
jb
add
xchg
shll
xor
inc
and
cmp
mov
adc
cmc
jl
imul
stc
and
lods
add
jne
cltd
jl
jb
pop
icebp
ror
push
add
xchg
popf
add
mov
icebp
mov
pop
mov
mov
hlt
jl
cmpsl
jno
std
mov
sbb
inc
or
jg
or
xor
movsb
aas
mov
mov
sbb
adc
shlb
dec
mov
mov
sub
jge
rcl
sub
jecxz
cmp
sahf
pop
inc
cli
jns
psllq
mov
in
inc
hlt
in
cmpl
mov
rcl
ror
loopne
or
mov
test
insl
or
outsb
push
jae
add
mov
add
sar
in
inc
push
adc
sbb
insb
call
mov
and
loopne
add
adc
jns
pop
xchg
jle
imul
or
iret
mov
stos
push
jge
mov
leave
dec
pop
rorb
lcall
mov
mov
mov
stos
xchg
out
xor
out
negb
test
sub
int
roll
push
adc
inc
ss
sub
push
insb
cmp
movswl
sbb
std
fisubrs
cmp
cwtl
pop
xor
push
sbb
inc
jae
add
loopne
jno
dec
xchg
ja
repz
imul
jno
and
push
lods
andl
out
orl
sbb
seto
call
lods
int
outsb
jl
rolb
outsl
pop
cmp
xchg
xchg
testl
push
iret
fsub
ret
out
fstl
in
js
cld
fstpt
sbb
in
add
add
call
sarb
pop
fists
clc
dec
cmc
cmp
mov
jo
jae
daa
into
subl
ds
add
les
mov
mov
or
xor
xchg
dec
fsts
inc
inc
sarl
push
jl
daa
gs
adc
xor
dec
cmp
loop
stos
test
push
jns
ljmp
loope
jl
movsb
movsl
shrb
add
rorl
shlb
addr16
push
aam
dec
shll
mov
sbb
movsl
loopne
repz
daa
adc
xlat
ljmp
and
jl
cltd
jns
pop
arpl
repz
lcall
dec
jge
sbb
xchg
lock
xchg
adc
out
and
jnp
sbb
sbb
cld
dec
arpl
xchg
adc
push
xchg
cli
mov
xchg
fisubrl
sub
ja
or
repz
ds
add
clc
mov
pop
xor
fidivs
pop
dec
aas
test
pop
outsb
mov
xchg
push
ja
fwait
daa
xchg
adc
mov
pushf
jg
sub
sbb
jmp
aad
stos
call
mov
adc
mov
sbb
rcll
and
scas
in
das
sub
imulb
push
gs
xor
add
fldcw
jp
test
popf
into
push
popa
add
in
dec
cmp
lods
and
jno
and
jp
adc
lret
pop
cmc
sub
push
pop
pop
jne
push
xor
int3
xchg
or
sub
mov
mov
mov
and
int3
sbb
dec
ss
js
and
sub
push
add
push
inc
inc
aaa
cmpsb
es
sub
insl
mov
stos
dec
xor
mov
push
inc
jmp
adc
dec
dec
add
loopne
movsb
add
das
fnstsw
sbb
sbb
mov
jnp
push
mov
jg
mov
sub
jle
mov
inc
std
push
xchg
bound
jecxz
inc
icebp
je
enter
adc
sub
jle
pop
outsl
sub
std
cmpsl
icebp
cmp
jge
ljmp
sub
mov
pop
leave
pop
mov
xchg
fcomi
mov
ljmp
sarl
xchg
ds
ret
out
les
push
mov
call
clc
icebp
imul
jno
jle
inc
push
or
outsl
sub
xlat
adc
jno
sti
push
fcoms
dec
mov
scas
das
sbb
mov
in
jns
lret
movsl
fistps
dec
es
and
xor
cmpsl
add
imul
pop
scas
movsl
add
xorb
push
mov
lock
xchg
inc
jb
cmp
outsl
sub
bound
loopne
adc
pop
fidivrl
xlat
cltd
add
movsl
xlat
cli
fstps
mov
mov
adc
mov
xlat
and
jb
jmp
sbb
mov
cmp
or
mov
push
xchg
lcall
js
add
inc
pop
sbb
adc
cwtl
pop
xchg
and
rorl
test
jnp
cmp
mov
iret
ficomps
adc
addl
sbb
xchg
std
sbb
icebp
mov
and
movsb
mov
mov
xor
jbe
sbb
xchg
mov
xchg
aas
or
mov
adc
dec
dec
adc
mov
or
push
jne
call
pop
mov
sbb
ret
mov
dec
sbb
fstl
push
faddp
fists
test
xchg
jno
sub
cli
dec
negb
lcallw
lea
stos
dec
rcrb
arpl
or
mov
stc
push
sub
jp
fcoms
hlt
outsb
inc
cltd
dec
mov
jb
dec
aaa
inc
out
or
arpl
dec
imul
pushf
cmp
or
push
mov
in
pushf
inc
mov
or
lret
push
sbb
dec
cmp
push
das
push
add
mov
cmpsb
add
xor
movsl
sbb
sub
dec
repz
xor
cmp
mov
jo
clc
jmp
loopne
cmp
pop
add
test
add
adc
enter
inc
adc
enter
or
jae
imul
insl
arpl
jmp
call
cmpb
mov
stos
mov
fadd
not
sub
lods
stos
add
insb
imul
push
mov
sub
xlat
clc
and
hlt
or
movsb
cmp
int
subl
in
fld
in
in
pop
aaa
adc
pop
inc
xor
shr
loopne
adc
jl
imul
fwait
cs
int
aaa
ret
mov
out
repz
xchg
stos
mov
cli
push
fcoms
test
rcrb
mov
adc
and
xchg
in
xchg
mov
testb
jo
mov
or
mov
push
push
rcrb
ret
mov
fisttps
es
dec
data16
xlat
rol
int3
adc
and
cld
and
cld
sbb
mov
decl
fdivr
filds
fstpt
rolb
inc
cmc
add
cmp
xchg
add
in
inc
and
jle
fwait
cmp
dec
leave
fnstcw
ja
pop
movsl
pusha
jmp
jle
pop
mov
lods
cmp
mov
jmp
sub
pop
fildl
cmpsb
gs
xchg
push
pop
jmp
pop
jmp
mov
les
jno
dec
sub
sarl
cmp
xor
mov
fwait
cmc
cltd
mov
ds
add
out
sub
sbb
add
in
cmp
sub
pop
aam
and
inc
imul
sbb
or
mov
pop
and
test
jo
das
jae
test
aaa
out
cmpb
idiv
mov
jno
loope
outsb
sti
in
xor
mov
push
push
sti
mov
ljmp
mov
pop
ret
scas
mov
add
inc
push
jl
mov
inc
ja
fbld
sbb
mov
mov
xor
mov
cs
xchg
out
addr16
imul
icebp
jle
stos
gs
mov
mov
adc
outsl
sub
xchg
jae
sbb
shrl
loopne
sub
pop
mov
pop
int
xor
xor
in
jno
cmp
add
iret
jecxz
dec
in
sub
test
mov
gs
dec
leave
jecxz
cld
mov
push
adc
pop
in
lret
sub
orb
dec
insb
imul
loopne
push
aad
sbb
mov
sub
ljmp
in
sti
movb
cmpsl
mov
bsf
mov
pop
lcall
shlb
test
fnsave
sub
lods
jp
xchg
mov
push
adc
mov
shlb
divb
out
pop
insb
and
ds
cld
adc
mov
mov
das
xlat
mov
lock
movsb
cmp
xor
pop
or
and
sbb
sahf
pop
scas
repz
sub
leave
imul
xchg
das
dec
iret
sub
rcl
jecxz
scas
push
jecxz
or
sbbb
lahf
mov
fdivrl
push
pop
ja
mov
push
repz
call
bound
dec
fadds
add
pop
push
push
fisubrs
stos
fimuls
out
stos
jg
mov
es
call
mov
jmp
movsb
jl
mov
lret
scas
insl
shl
sub
mov
or
jle
push
dec
lods
popw
out
mov
leave
sub
mov
cmpsl
test
js
jp
into
rorl
mov
push
mov
leave
popf
inc
les
jmp
leave
ja
cmc
xlat
es
jmp
jl
les
xlat
inc
and
xchg
loope
addr16
cmp
mov
fmuls
inc
mov
fidivrs
xorl
fcomi
mov
dec
jle
insb
stc
stos
pop
jne
lock
fcomps
xchg
mov
and
add
push
sub
out
iret
daa
loope
xchg
inc
inc
or
pop
xchg
jno
jge
leave
sub
or
mov
xchg
jle
data16
loope
rcrl
adc
push
jge
dec
cmp
lods
jo
andl
in
or
in
repnz
outsl
sahf
and
and
lock
lahf
and
adc
je
xchg
out
or
dec
xchg
dec
sti
mov
in
aad
sub
popf
or
fdivr
sbb
lds
fs
cmp
mov
xlat
scas
cmc
ljmp
test
or
mov
hlt
xchg
daa
mov
push
push
lock
dec
arpl
sbb
negl
add
mov
push
js
sti
aad
mov
outsl
jo
enter
icebp
and
pop
xor
lret
add
ret
jmp
movsl
and
stos
adc
xchg
leave
jnp
in
sbb
ss
insl
js
test
or
repz
ljmp
push
ljmp
mov
pop
push
int
jo
divb
jns
call
pop
out
aaa
je
or
sahf
and
testl
mov
ds
pop
pop
push
mov
out
popa
clc
pop
sub
sub
subl
sbb
pop
js
fldenv
lahf
mov
push
jecxz
mov
jg
popa
test
mov
mov
leave
sbb
ljmp
mov
idivl
outsb
bound
push
push
gs
imul
das
ja
les
cs
cwtl
fbstp
push
idivl
movsb
std
jge
orb
xor
adc
pop
jne
cld
jne
xchg
jge
insb
mov
cmpsl
repnz
xchg
inc
cmp
sub
lea
nop
sbb
std
mov
cmp
xorl
stos
in
push
lods
pop
out
pushf
hlt
pop
xchg
mov
push
ret
fstpl
ret
stc
sub
push
push
sahf
or
int3
jmp
shlb
or
and
inc
pop
movsb
inc
push
test
push
pop
jno
sub
and
mov
inc
adcl
fdivrs
sti
jmp
ret
popl
fisubs
or
pop
cmovl
cs
rorl
mov
mov
mov
dec
lock
adc
rcl
es
mov
pop
mov
cmp
cwtl
fnstsw
pop
jns
pusha
pushl
xchg
imul
imul
fisttpll
orb
or
xchg
scas
addb
mov
flds
in
cli
jl
lea
xor
push
in
out
fcoms
fnstenv
scas
cmpsb
push
cli
cmp
cmp
mov
jmp
jecxz
mov
jmp
jnp
out
loope
pushf
dec
mov
add
adc
add
inc
fiadds
push
pop
std
outsl
data16
or
mov
dec
dec
jno
inc
pop
int
add
movsb
insb
inc
je
je
out
mov
es
hlt
in
movsl
jns
inc
in
out
inc
cmp
mov
lds
dec
call
and
or
sti
xor
cltd
jns
inc
ds
stos
cmp
inc
mov
cmp
data16
lds
repnz
sarb
or
pop
movsl
outsl
mov
add
dec
nop
repnz
xor
cmpsl
js
jg
jb
sti
push
out
dec
jbe
pop
sbb
movsl
je
in
fmul
rorb
aam
pop
adc
inc
xchg
scas
jb
in
rol
stos
fst
imul
cwtl
pop
adc
xchg
cmpsb
mov
int
add
leave
sbb
mov
xor
test
mov
pushw
mov
push
dec
pop
cmp
jg
icebp
test
dec
pop
shr
pop
dec
jb
push
jbe
dec
fwait
movsb
xor
es
lds
insl
jg
popf
jmp
repnz
mov
mov
push
jp
cmovo
pop
adc
jg
loope
mov
pop
or
cmp
push
mov
add
jbe
mov
aam
daa
inc
mov
lcall
cmp
xchg
data16
mov
or
push
into
xor
fistl
mov
mov
aas
pop
lahf
jns
push
in
std
loopne
rorl
xchg
shr
add
mov
pop
leave
je
out
mov
or
jns
ljmp
mov
or
nop
push
xchg
mov
iret
popf
cmpsl
sub
imulb
jge
or
mov
fs
and
and
pop
or
dec
ret
popa
cmpsb
ret
and
dec
aaa
push
fldl
fwait
sbb
stos
push
test
rcrl
dec
push
js
aad
testl
daa
dec
test
insb
test
mov
pop
lret
into
adc
sbb
shl
mov
in
add
outsl
mov
cmp
xor
xchg
push
add
outsb
mov
daa
sub
lcall
subl
mov
xchg
lea
fdivr
mov
fisttps
mov
int
in
scas
push
jmp
jle
cmp
adc
mov
or
je
ret
testl
in
insl
lcall
xor
or
sub
call
dec
xlat
xchg
mov
jno
inc
mov
subl
mov
mov
fs
cmp
les
jo
ret
add
arpl
dec
rolb
xor
lret
stos
or
adc
mov
push
mov
inc
mov
xchg
cs
pop
mov
in
cmc
inc
repnz
mov
inc
mov
jne
movsl
fstps
faddl
icebp
sbb
imul
addr16
insl
fadd
pop
xchg
lods
pop
test
dec
lods
fdivrl
jnp
movsb
mov
or
fwait
aas
add
cmp
shll
test
lock
and
sub
xchg
int3
stos
sub
scas
xchg
jmp
insb
gs
das
scas
mov
lds
and
shrb
fiadds
dec
dec
arpl
repz
sbb
sub
lods
xor
into
rcl
mov
mov
sbb
mov
sub
test
push
push
rorl
jg
jl
mov
jb
cli
mov
negb
push
cli
andb
fistpl
mov
ljmp
jmp
dec
or
inc
aam
jp
inc
das
adc
dec
in
mov
je
and
adc
nop
sahf
jmp
fnstenv
lods
into
addl
cmpsl
jbe
or
or
decb
and
pop
das
push
shll
inc
shll
stc
int3
int3
incl
fidivs
mov
int
insl
push
pop
and
inc
imulb
mov
sahf
and
jae
mov
and
divb
dec
mov
popf
sbbl
inc
dec
rorb
and
push
leave
ja
clc
int
cli
test
in
mov
stos
add
mov
inc
fidivrl
repnz
rcl
jg
or
out
xor
lods
push
add
test
mov
addr16
push
jne
dec
cwtl
sahf
push
sbb
loope
stc
jecxz
push
popa
lahf
pop
pop
int
gs
ss
mov
xor
jns
jae
mov
sub
pop
and
pop
cmp
push
push
mov
xchg
inc
stos
js
add
ss
fs
repz
add
fbld
sbb
add
int
xchg
and
adc
push
gs
aam
cli
jg
subl
int3
in
jmp
loope
inc
xchg
imul
jns
dec
xlat
cld
adc
dec
sub
mov
jno
mov
cmp
jmp
cmp
xor
dec
jo
pop
scas
outsl
jge
pop
mov
jl
add
mov
pop
addr16
inc
lds
lock
add
and
rclb
lea
aas
js
sub
mov
push
push
test
outsb
loop
sbb
iret
adc
jge
ret
mov
sbb
repnz
lods
shrb
fcompl
sbb
add
rorb
in
nop
sbb
mov
or
fnstcw
adcl
bound
cltd
insb
xor
mov
cltd
mov
cmp
cltd
int
testl
mov
mov
lods
sub
call
pop
jmp
mov
xor
sub
mov
jg
aaa
shrl
cmpsl
or
pop
or
addr16
push
das
lock
sbb
int3
xor
push
pusha
inc
mov
test
xchg
das
fwait
cltd
mov
mov
dec
sahf
mov
pop
stc
xlat
jg
xchg
lahf
push
mov
loope
fsubrs
xchg
sub
inc
lea
xchg
jnp
std
cli
lods
ret
push
aad
aad
xchg
js
pop
ja
jmp
sbb
loop
mov
hlt
jae
daa
lret
js
sub
cmp
ffreep
btc
adc
push
outsl
loopne
add
aas
sub
arpl
sbb
push
cwtl
pop
add
xor
push
or
sub
clc
jbe
mov
aas
xchg
iret
rolb
cmp
push
insl
jnp
and
testb
adc
in
inc
jmp
dec
decb
out
jp
mov
cli
ja
mov
loop
ja
addl
loope
jae
dec
jb
out
test
test
mov
out
mov
and
movsb
enter
xchg
fisubrs
xlat
xor
sbb
rcrl
popl
jmp
out
sub
loope
dec
xor
inc
aaa
add
lcall
mov
in
adc
subb
mov
in
sbbb
jno
jl
adc
push
shl
std
pop
enter
jbe
ljmp
mov
and
ret
mov
pop
js
mov
jp
and
jmp
imul
loopne
sti
adcl
xchg
jns
push
inc
fwait
cmpsb
jge
dec
mov
adc
lret
inc
ja
and
push
mov
and
out
push
aad
ficomps
fnstenv
mov
sub
into
mov
or
in
ljmp
and
cmp
cmp
cmc
stc
fcoms
call
xor
add
lock
into
pushf
dec
pop
mov
and
vpminub
push
stc
lods
sarb
cmp
mov
fldl2t
negb
popa
cmp
imul
push
jle
push
pusha
cmp
jae
into
loopne
lahf
xchg
aaa
lcall
pop
cltd
push
dec
fadds
inc
or
fnsave
mov
lds
mov
aad
xchg
inc
lret
int
jo
hlt
or
mov
push
shrl
push
push
insb
shlb
jmp
jo
dec
inc
popa
popa
jge
mov
mov
mov
jnp
int3
aaa
mov
lahf
mov
lret
or
xor
cmc
pop
sahf
push
jbe
or
sbb
mov
dec
and
clc
ret
mov
mov
das
test
mov
sub
push
loop
jb
mov
push
mov
fwait
adc
add
jns
test
mov
lcall
add
mov
arpl
jno
adc
jl
push
push
xchg
sub
test
insl
repz
popf
std
xchg
pop
pop
testl
imul
aam
xor
xchg
sbbb
add
sbb
push
test
mov
mov
cwtl
sbb
inc
xchg
sub
cmp
add
sbb
sub
sahf
jle
imul
inc
ja
sbbb
dec
jge
cmp
aad
xlat
ja
movsb
mov
sub
sub
lcall
pop
xchg
je
shll
adc
popf
mov
add
add
je
mov
inc
data16
stc
xchg
in
ret
and
or
pop
frstor
movhps
xor
add
sbb
mov
lea
push
shll
inc
jo
adcb
out
icebp
daa
or
pop
jnp
mov
adc
adc
xchg
pop
andl
or
imul
aaa
jns
lds
pop
jne
add
and
cmp
fimull
lods
lcall
xchg
pop
sub
sub
add
js
or
dec
jns
ret
sub
fists
adc
rolb
mov
xor
cmc
mov
enter
or
push
fstps
adc
mov
popf
icebp
mov
ficompl
popf
clc
repz
scas
fs
mov
mov
and
popa
roll
andl
add
idivb
dec
aas
dec
adc
std
data16
mov
inc
xor
inc
or
add
add
xor
push
in
push
inc
and
jp
lret
je
repz
pop
push
and
mov
dec
sub
scas
sahf
push
dec
pop
cmp
mov
insb
cmp
nop
xor
ds
mov
mov
lods
or
ficomps
dec
test
sub
jmp
ds
mov
mov
andb
pushf
jge
enter
mov
xor
or
imul
in
jb
cmp
jnp
ret
pop
in
out
loop
clc
jmp
mov
shrl
ret
scas
addr16
inc
jb
shlb
dec
int
sarb
nop
lds
aaa
pop
jbe
mov
pushf
sub
pop
mov
pop
icebp
mov
js
push
push
and
aas
shl
sbb
sbbl
cmp
mov
shrl
lret
js
dec
sbb
scas
mov
lock
cmovbe
shrl
adc
adc
inc
cs
xor
add
out
xor
push
aaa
lret
shrb
push
hlt
pop
dec
sbb
xor
xor
mov
and
ficoms
xor
daa
sbb
addl
push
sbb
dec
repz
sbb
xchg
sub
nop
bound
les
and
mov
sti
sbb
inc
mov
imul
inc
push
mov
jo
pop
push
call
lds
xchg
ss
je
fmuls
outsb
stc
fldpi
adc
gs
xchg
xchg
mov
and
and
mov
leave
outsb
push
lock
mov
jl
pop
popa
add
ss
popf
nop
cmpsb
xchg
fwait
and
enter
dec
repnz
arpl
mov
dec
ss
hlt
or
ja
adc
pop
and
jg
jge
or
ljmp
pop
xchg
mov
in
dec
jno
insl
stos
jle
clc
xchg
mov
or
popf
jp
fmuls
sub
mov
sub
scas
shr
jns
js
ficoml
daa
inc
pop
dec
sbb
es
mov
pop
sub
mov
cld
rclb
adc
pop
sbb
add
inc
adc
and
adc
inc
lahf
adc
std
xchg
mov
dec
inc
jl
jg
xchg
out
mov
std
out
sub
cld
in
push
xor
popf
shlb
fiadds
jle
jbe
xlat
int3
mov
out
xor
idivb
or
lahf
fs
ret
daa
adc
pushf
call
insb
mov
sbb
stos
out
pop
xchg
and
int
cmc
cwtl
mov
mov
cmp
loope
cmp
in
jb
cmpsb
cmc
shl
jp
subb
faddl
mov
insl
cmp
mov
push
gs
cs
daa
push
lds
lahf
pushf
mov
sub
fdivrs
ret
andl
or
fwait
or
and
dec
push
fistl
pop
das
daa
xor
arpl
cmp
adc
mov
dec
sub
in
lods
xchg
jl
mov
shrl
shrl
shl
push
jge
mov
das
push
sbb
pop
inc
mov
mov
sar
lret
test
in
fisubrs
push
and
mov
mov
ficompl
je
daa
pop
sbb
imul
add
add
inc
add
add
add
sub
add
add
add
add
add
add
pop
adc
ds
lcall
nop
cld
andb
jnp
cmp
adc
lret
outsb
int
insl
mov
xchg
fcmovnbe
mov
scas
lea
sbb
aaa
mov
js
mov
cmp
ds
out
push
sub
mov
pop
push
inc
mov
pushf
test
out
js
xor
ljmp
in
xor
les
push
push
sbb
mov
cmp
sub
adc
sbb
cmpl
xor
or
fcmovnb
into
and
sub
mov
pop
xchg
ljmp
jno
iret
inc
out
imull
xor
sbbl
loopne
push
sbb
fldt
cmpsb
or
add
imul
jmp
mov
mov
mov
pop
mov
push
mov
mov
ljmp
mov
xchg
loop
jne
push
sub
and
jmp
mov
scas
outsl
and
jo
repnz
addr16
mov
repz
fdivp
and
jbe
pop
lahf
das
mov
xor
rcrb
inc
fstpl
pop
out
mov
loopne
imul
push
repnz
pop
jno
push
push
push
clc
and
mov
lahf
and
xor
dec
adc
and
scas
jle
sbb
xor
fnstenv
psllw
arpl
xchg
aaa
shlb
pop
lcall
pop
mov
clc
push
popf
pop
repnz
scas
xchg
jb
and
inc
pop
push
pop
mov
xor
lea
cmp
sub
jbe
bound
push
mov
sti
mov
int3
pop
outsl
lea
fstl
ficomps
jmp
rcl
fisttpll
pop
js
fcmovnbe
lods
jmp
mov
sbb
call
les
mov
fsubrs
mov
sbb
jns
push
lods
mov
add
push
jmp
fsubs
lock
insb
dec
jnp
cmp
xchg
insl
out
aad
jmp
sub
mov
jns
aad
test
xor
pop
or
fisttps
xor
adcl
lret
orb
cmpsb
int3
decl
cs
inc
mov
and
mov
js
fldenv
out
scas
pop
ss
lock
cs
sbb
add
inc
add
imul
je
sbb
adc
xacquire
add
bound
mov
test
jmp
jl
cltd
mov
arpl
sub
jge
ret
push
fstp
xchg
mov
out
mov
inc
add
fists
xchg
adc
in
mov
cs
sub
mov
mov
and
adc
fadd
jb
pop
lea
cmp
adc
ret
cmpsl
lret
sub
out
pop
cltd
jbe
loope
insb
xor
cwtl
xchg
rclb
leave
push
push
loop
pop
mov
ret
sti
fwait
out
out
push
test
pop
es
xlat
andl
aaa
inc
and
xchg
and
sub
push
push
adc
pushf
or
xor
or
sub
mov
fsubp
jno
lahf
aas
outsl
clc
jae
pop
cmp
int3
jo
int3
push
sar
mov
inc
inc
pop
int
jmp
cmpsb
pop
mov
insb
negb
or
cwtl
fsubl
jne
or
stos
lods
xor
xor
xor
test
jle
sbb
test
int3
jmp
nop
inc
lret
scas
insb
call
ret
lods
xchg
xchg
pop
ret
mov
fadd
rclb
lahf
pusha
leave
hlt
scas
inc
shrb
mov
loope
pop
add
cmpsl
mov
iret
or
pushf
inc
test
mov
lods
or
out
sub
xor
ret
popf
mov
mov
lahf
mov
out
cmp
sahf
mov
fsubrs
bound
iret
shr
lret
negl
add
xchg
push
dec
iret
xor
mov
test
mov
insl
jbe
push
sahf
cli
inc
mov
subl
cmp
xchg
idiv
ret
cmp
mov
int
mov
pusha
xchg
imul
icebp
pop
or
in
in
mov
call
dec
fidivs
stc
cltd
jne
hlt
scas
inc
lds
nop
sahf
push
fdivl
cli
adc
shlb
cmc
dec
dec
aad
cltd
int3
jno
shll
dec
in
negl
dec
dec
mov
out
mov
es
pop
lcall
iret
out
fsts
stos
and
adc
test
in
int
jg
xchg
scas
sti
inc
mov
rcr
jp
add
xchg
data16
fcomps
cmp
repz
push
xor
pop
cmp
fs
xchg
xor
push
adc
add
out
sbb
testb
mov
sarb
repnz
das
jnp
adc
fldenv
int3
repnz
lret
cmp
fs
loop
cli
lcall
insb
cmpsb
cs
adc
call
xchg
xchg
daa
ds
es
push
cmpsb
or
dec
leave
ja
push
jns
or
mov
inc
clc
pop
fisubl
push
inc
mov
es
inc
je
fs
imul
insb
dec
mov
pop
dec
icebp
int
pop
adcb
xchg
push
pop
jo
xchg
dec
mov
inc
dec
ds
outsl
jmp
ds
xor
jecxz
das
shlb
jne
rolb
dec
addr16
scas
imul
mov
cmpsl
mov
jge
sub
inc
xor
sti
insl
mov
inc
lds
mov
das
mov
push
xlat
cmpsb
sbb
mov
popa
outsl
jmp
inc
loope
ret
lret
out
inc
dec
stc
mov
or
push
mov
dec
test
dec
inc
jnp
out
scas
sbb
test
mov
cmpsb
out
push
fcoml
fiadds
dec
mov
pop
adc
js
insl
popf
scas
adc
dec
addr16
add
scas
outsb
jbe
movb
push
daa
mov
mov
data16
dec
insb
cld
inc
jl
mov
sub
or
push
cmp
pop
test
sub
or
test
push
ljmp
sbb
fs
inc
imul
pop
insl
mov
jl
fiadds
ja
ret
sbb
xchg
flds
jg
dec
push
test
xor
adcl
popf
lods
cli
adc
xchg
jg
pop
add
mov
jp
pop
testb
mov
add
xchg
gs
orl
test
leave
and
outsl
sub
mov
repz
int3
xor
fists
in
pop
je
aaa
inc
or
jp
popa
mov
mov
jb
fnsave
mov
mov
xor
xchg
xchg
dec
sub
mov
push
push
imul
ja
mull
jb
or
xor
gs
in
repz
sbb
iret
xor
cmp
push
divl
mov
cmpsb
push
pop
mov
sbb
or
pop
pop
dec
gs
add
inc
jne
fs
jmp
mov
cmc
push
test
or
mov
mov
adc
pop
in
lret
in
xchg
sub
adc
nop
inc
aam
or
sbb
or
mov
in
push
inc
sbb
jl
js
push
dec
mov
add
sbb
cmp
jo
jno
add
mov
scas
int
jmp
jle
imul
xchg
xchg
das
push
add
cs
cmp
mov
and
mov
push
inc
jg
push
cmp
cld
in
movl
arpl
xor
xchg
sbb
cmp
xor
add
out
imul
data16
addr16
repnz
fists
out
leave
in
and
xor
cmpb
popf
cwtl
popa
dec
shrb
jnp
jbe
pand
xchg
push
cmp
mov
xchg
pop
mov
jnp
add
pop
movsb
xchg
test
xor
shrb
ja
mov
mov
adc
into
rcl
rorb
outsb
pop
int
mov
add
and
dec
push
dec
push
mov
lret
adc
leave
adc
add
int3
pop
pop
cmp
dec
sahf
fadd
fmull
rorb
inc
mov
mov
ret
add
imul
mov
push
sbb
cld
mov
push
dec
fdivr
call
pop
mov
xchg
sti
push
pop
loope
mov
mov
popa
jns
stos
in
dec
jp
js
pop
push
addr16
enter
ja
cs
and
cmpsl
stos
xchg
ucomiss
push
jp,pt
xchg
or
shrl
jns
cmp
sbb
sub
arpl
in
and
sub
sbb
dec
pop
jg
mov
pop
dec
dec
inc
shlb
xor
cmp
into
test
lock
cmpsb
dec
push
push
popa
rcr
adc
jo
push
mov
xor
ds
xchg
std
out
scas
adc
fsts
jge
clc
mov
popa
lods
sbb
lahf
rcrb
mov
mov
das
enter
adc
cmc
and
loopne
dec
jns
jns
rolb
or
mov
xchg
repnz
jns
jle
mov
push
mov
jp
mov
xchg
outsb
adc
pop
cwtl
cmp
imul
pop
pop
sarb
es
jmp
loop
cmp
push
add
dec
mov
test
insl
and
mov
jbe
sarb
aad
pop
sarb
sti
xor
data16
and
adc
sti
inc
aad
xchg
sub
cmc
sar
icebp
test
lock
std
outsl
sub
sbb
mov
mov
lea
sub
xchg
and
ret
test
add
pop
mov
inc
inc
or
ss
push
faddp
loope
arpl
push
bound
push
jmp
add
inc
insl
push
lock
insl
movl
shll
das
xchg
cmp
jo
adc
xchg
mov
repz
push
flds
xchg
dec
sti
cmp
fldt
push
out
or
pop
inc
out
test
sub
pusha
mov
cmp
aaa
xor
sti
or
jl
orb
lods
cwtl
and
repnz
cld
bound
inc
xchg
mov
sub
jae
movsl
popl
add
rorl
xchg
out
sub
add
negb
push
fldt
repz
sub
ret
sub
stos
mov
sbb
mov
xchg
cmc
jns
cmp
outsl
insl
mov
dec
mov
je
fdivp
ja
leave
out
push
cltd
and
xchg
dec
mov
cltd
mov
xor
inc
or
shll
adc
jp
cmp
cli
scas
push
aad
jb
es
cmp
xor
test
ss
xchg
popa
push
scas
adc
push
xchg
or
mov
fsubr
and
cmp
jg
sbb
jmpw
jl
sub
hlt
push
sti
lods
call
push
fwait
movsb
fs
push
outsl
repnz
cmp
test
mov
cs
jl
mov
add
ja
mov
out
or
push
lock
pushf
sbb
jg
lock
loope
arpl
out
fnstcw
push
nop
push
insl
or
ret
xchg
sarb
ror
pop
xorb
xor
cltd
xchg
and
dec
mov
jp
das
jge
pop
cs
scas
rorb
mov
popf
aam
cmp
aam
pop
repz
or
sbb
in
inc
in
and
mov
sub
rcr
scas
out
sahf
jne
mov
adc
ror
dec
daa
jge
bound
adc
cwtl
cmp
dec
mov
lea
mov
dec
js
out
push
add
sbb
rcrl
cmp
cs
test
sub
in
xorb
inc
aad
daa
incb
sbb
in
mov
mov
insb
xchg
cmp
mov
adc
scas
loope
ss
jmp
sub
xor
and
out
and
and
and
imul
in
data16
movsl
sub
inc
jp
inc
leave
sub
pusha
xor
jo
andl
mov
xchg
shll
imul
xor
data16
movsb
faddl
adc
clc
push
nop
shl
mov
imul
lret
push
jnp
jl
xlat
loope
mov
or
xlat
jae
and
sbb
pop
pop
ret
mov
inc
loope
add
xchg
push
testl
push
rol
xchg
xorl
xlat
xor
shl
sub
xlat
mov
pushf
out
jno
sbb
sub
cmp
aaa
pop
mov
jge
push
pusha
into
sbb
fidivrl
adc
jb
inc
push
cmp
call
dec
cmp
mov
sub
pminub
mov
jg
push
fdivrl
cmpsl
mov
pushf
lret
std
sahf
mov
lahf
mov
jge
mov
jo
or
fsubr
sahf
pop
sbb
dec
in
pusha
ja
into
push
xlat
xor
testb
or
mov
data16
push
mov
inc
push
and
scas
pop
jb
mov
cmp
xor
mov
test
add
rorb
adc
loope
cmp
mov
inc
lods
orl
jno
je
sub
adc
cmpsl
mov
pop
je
fadds
cmp
sbb
ja
add
ret
adc
dec
add
mov
jae
dec
mov
push
out
pop
insb
movsl
jp
jbe
js
js
xor
push
cli
orb
stc
add
repnz
movsb
add
loopne
icebp
push
movsl
adc
imul
pusha
and
shll
lods
or
sub
outsl
testb
test
add
mov
test
call
fwait
and
xchg
push
pop
ja
cmp
sbb
addr16
pop
mov
sub
divl
sub
imul
push
cmpsl
sub
and
dec
shrl
in
inc
pushf
ret
mov
fsub
push
js
cmp
and
dec
outsb
and
icebp
je
sbb
test
imul
out
outsb
and
or
adc
fnstenv
std
les
test
sbb
imul
or
cmp
pop
or
out
stos
test
test
cli
pop
adc
testb
or
xchg
pop
rolb
ret
cltd
add
cmp
push
bound
into
or
fmul
inc
loope
cltd
mov
jo
icebp
call
lret
add
pop
js
mov
sbb
jnp
mov
andb
jne
aas
sbb
cmp
dec
dec
xchg
ss
dec
jmp
jb
pop
test
inc
jmp
cmc
xchg
jae
inc
jle
xor
mov
inc
sbb
lock
icebp
movsb
mov
rorb
mov
push
mov
mov
dec
std
xchg
jae
inc
mov
xchg
push
shrl
leave
push
cmp
pusha
imul
cmp
lods
xchg
jp
or
and
pop
mov
push
ljmp
test
adc
xchg
mov
insl
jmp
pop
xchg
push
int3
stos
cs
aad
aaa
mov
les
dec
cmpsl
cld
dec
jecxz
jp
jge
or
mov
rcrl
aam
or
add
xor
mov
xchg
mov
aad
fisubl
loopne
sbb
arpl
out
jge
sub
inc
cmp
add
and
xor
jl
push
xor
add
push
ret
call
mov
inc
jns
push
out
popa
cmp
pop
mov
nop
mov
mov
hlt
inc
mov
out
lahf
push
mov
pop
mov
movsl
cmp
cs
or
rcrb
cmp
dec
jo
test
out
in
repnz
icebp
sub
mov
push
fsubl
adc
into
inc
das
nop
les
lock
js
cli
sub
cld
fbld
daa
mov
inc
xchg
push
cmp
cwtl
mov
cmp
out
push
into
lods
ficompl
roll
popf
sbb
imul
fsubr
popa
addl
jns
cmp
outsb
xchg
stos
or
mov
pop
loopne
push
arpl
dec
insb
jns
mov
pushf
sbb
cmp
xlat
ja
out
add
cmp
mov
or
push
adc
loopne
rol
pop
out
jmp
aad
pop
jle
std
inc
jns
dec
and
aad
mov
push
lods
test
push
ss
fwait
test
sub
mov
and
jns
aad
xor
fldcw
mov
inc
and
sub
cmp
mov
mov
enter
pop
out
lods
inc
out
int3
dec
out
lods
mov
ss
ja
or
js
pop
adc
cmpsb
add
pushf
repnz
sub
in
lods
xor
xor
jne
sub
push
add
push
insb
jns
popf
fimuls
xchg
cwtl
inc
push
ret
pushf
xor
jmp
rorb
push
in
je
inc
pop
xchg
push
aam
cmpsl
shlb
fisubl
sti
scas
xchg
push
mov
gs
out
add
fstl
loop
jle
outsl
aas
and
jo
xchg
pop
add
dec
push
pop
lret
pop
pop
cs
xor
jle
inc
cld
roll
dec
in
jns
std
mov
pop
xchg
jecxz
mov
xor
and
popa
pop
mov
in
push
jns
cmpsb
test
movsb
hlt
dec
aam
rolb
test
lods
inc
jnp
psubsw
notb
imul
enter
fstps
sbb
push
shrb
and
xchg
popa
mov
xor
rorl
cwtl
mov
lea
icebp
rcrl
and
and
xchg
xchg
pop
outsb
in
xor
jb
imul
mov
orb
jp
add
xorl
xor
je
and
add
xchg
shll
int
insl
sbb
lret
fistps
add
pop
and
test
stos
rclb
repz
sbb
jno
mov
dec
iret
loopne,pt
xchg
out
stc
cmc
pop
xchg
out
xorl
jne
in
lea
cltd
or
or
scas
sbb
mov
xchg
add
xchg
xchg
pop
rorb
fmull
in
aad
in
mov
lds
shl
outsb
mov
test
test
ljmp
scas
ss
loope
mov
xchg
mov
xchg
fnstcw
push
xor
add
jne
add
push
mov
outsl
push
or
call
fdivrp
mull
cld
adc
mov
inc
cltd
aaa
jo
dec
fs
pushf
mov
xlat
adc
ret
mov
jle
mov
fildl
mov
push
pop
in
inc
fisttps
push
orb
push
in
pushf
insb
jl
and
cwtl
jmp
jle
ret
pop
gs
add
sbb
daa
movsl
inc
pop
insb
frstpm(287
jmp
cmpsl
sbb
popa
loope
cs
sub
mov
or
xor
mov
or
xchg
mov
scas
jne
cmp
mov
mov
call
jmp
les
aad
in
fadd
jge
data16
sahf
insl
pushf
pop
nop
sub
xor
shrl
push
out
mov
pop
popa
pop
movsl
imul
mov
test
adc
xchg
add
mul
lahf
mov
mov
das
cmp
cmp
push
pop
sbb
mov
stc
cltd
nop
fs
xor
xlat
sbb
stc
test
insb
pop
pusha
in
mov
test
cmp
jg
lds
ficoml
std
stos
sbb
fcmovnbe
xchg
adc
dec
out
jo
inc
mov
mov
inc
inc
sbb
mov
adc
sbb
test
sahf
inc
bnd
mov
pop
and
inc
dec
imul
push
sbbl
mov
sbb
dec
dec
mov
and
jbe
fstpt
mov
sub
test
lods
cmp
out
inc
pop
insb
lcall
bound
adc
in
push
pop
mov
dec
and
xchg
into
mov
fidivrs
lahf
mov
or
and
jae
aas
xchg
sbb
mov
movsl
mov
ficompl
mov
imull
or
out
push
cld
push
or
stc
pop
fmull
in
in
or
lahf
xchg
add
push
xchg
aad
ror
mov
dec
shlb
cli
icebp
scas
loopne
pop
pop
xchg
movsb
jge
push
stos
and
or
in
inc
repnz
repnz
dec
cmpsb
push
or
mov
jecxz
int3
pop
mov
fistpl
fs
adc
sbb
cmpsl
loope
popa
jp
xor
int3
frstor
xchg
fisttps
fwait
imul
or
pop
loopne
mov
ficoml
xchg
cs
aaa
stos
jne
insb
mov
dec
out
lods
ja
insb
lods
std
mov
pop
push
sbb
test
into
mov
ret
xchg
mov
dec
xor
sub
pop
push
mov
arpl
jge
ss
jp
jge
push
cmp
icebp
push
mov
cmpsl
shr
rorl
add
fdivr
dec
fiaddl
mov
cmc
or
pop
mov
push
push
dec
je
leave
and
mov
sbb
xchg
xor
cwtl
stos
and
cld
mov
or
in
cli
inc
xchg
jg
sbb
enter
mov
and
pop
mov
mov
adc
sarb
cld
jae
jg
add
sbb
lret
xor
enter
lcall
imul
mov
jo
movb
pop
int
setge
inc
out
pop
fwait
add
das
xchg
and
or
push
lret
sbb
test
fadds
push
test
sbb
inc
sbb
mov
fwait
mov
sub
test
xchg
pop
add
sahf
pop
fwait
add
int3
pushf
push
xchg
fiadds
mov
inc
shrl
dec
xchg
data16
or
sarb
adcb
push
push
ss
dec
push
aam
out
outsl
repnz
mov
sub
fisttps
push
add
gs
xor
pop
popf
jb
decb
inc
sbb
outsb
enter
xchg
cmp
aad
xor
dec
icebp
pop
out
xor
rorb
rcrb
mov
or
jb
and
jbe
xchg
in
lods
mov
popf
stos
dec
pop
ja
stc
sub
add
jl
mov
and
in
or
add
std
or
lock
add
clc
and
mov
xchg
std
push
push
ds
sbbb
fildll
sbb
xadd
in
arpl
into
fistpl
cmc
pusha
xor
push
cltd
and
mov
push
lock
icebp
mov
outsb
mov
sub
cmp
cmovs
inc
mov
mov
loop
cmpsb
push
jmp
add
xchg
fmuls
out
test
fs
cwtl
dec
je
sbb
cmp
outsb
stc
pushf
pop
out
nop
mov
mov
xor
jno
dec
in
xlat
jle
mov
mov
inc
cmp
lods
xchg
addb
pop
mov
fnsave
cmpsb
push
pop
js
add
fldl
lods
mov
rclb
jae
jo
and
mov
sbb
popa
mov
inc
jge
pop
arpl
movntq
adc
xchg
out
nop
cmp
movsb
out
test
jecxz
pop
cmpl
leave
sub
int
mov
call
popf
sub
movsl
and
sub
mov
je
faddl
lods
push
push
mov
ret
and
idiv
mov
sub
fidivs
cs
dec
ljmp
xor
mov
adcb
in
std
lods
loop
jbe
cs
sbb
mul
and
pop
popf
push
sbb
dec
jmp
cmpsb
cs
rorl
mov
popa
push
daa
ret
es
and
lcall
push
cli
jecxz
sbb
lock
addr16
adc
push
lahf
cmp
hlt
inc
push
sub
xchg
sub
pop
icebp
mov
mov
movsl
daa
cmpsl
mov
push
loop
mov
adc
pop
repz
arpl
and
or
pushf
inc
fidivrs
cmp
into
fnstsw
mov
push
popf
or
fwait
push
jge
push
sub
fisubl
xchg
inc
jg
aad
add
sub
inc
aas
xchg
icebp
dec
mov
lock
sti
and
leave
cmp
mov
jp
mov
fstp
push
test
out
lret
lock
dec
push
push
imul
std
cmpsb
ret
push
lods
add
leave
mov
imulb
rcll
int3
sub
pusha
fs
lods
or
in
sub
in
std
or
adc
jnp
mov
xor
mov
pop
dec
mov
js
test
cmpsl
xchg
cs
xchg
pop
jle
pop
push
mov
nop
xchg
cwtl
jo
leave
jbe
je
lret
xchg
pop
fmulp
repz
jmp
jns
sbb
or
jno
imul
cld
push
xor
loope
add
outsl
icebp
inc
xor
pushf
and
push
or
jo
ljmp
or
enter
jp
aam
jnp
mov
cli
sbb
jb
mov
mov
mov
jbe
ret
and
xchg
cmp
mov
and
cmpsl
pop
inc
cmp
int
leave
std
cmp
push
das
cmp
es
cmp
pop
sar
int3
mov
js
insl
sub
jb
lods
imul
call
mov
je
adc
jle
mov
mov
adc
ret
inc
cmp
mov
cmp
mov
sub
pushf
add
imul
sahf
mov
sbb
xchg
mov
and
jmp
sub
outsl
inc
stos
nop
das
jno
dec
addr16
mov
sbb
and
call
mov
leave
sbb
xor
leave
aaa
jae
xor
sbb
negb
push
cmpsb
mov
mov
sbb
ret
adc
adc
xlat
roll
movsl
rorb
les
insl
rcll
fistl
mov
xor
sub
std
jg
cmp
cmc
or
sub
jnp
shl
cmpb
mov
vmovhpd
or
lods
mov
fimuls
ja
xchg
in
pop
mov
jmp
jge
insb
mov
push
enter
shlb
lods
sub
clc
and
cli
loop
push
gs
jmp
jne
ficompl
fisubl
sbb
xor
push
mov
fnclex
testb
test
fsts
scas
out
xchg
sbb
fisttpl
sub
add
fmuls
pop
rcrb
push
movsl
daa
add
addr16
xor
sub
mov
mov
mov
bound
cli
shrl
xchg
dec
sbbb
push
xor
repnz
sub
cs
cli
xchg
jmp
or
adc
rolb
das
ss
clc
pop
pop
arpl
pop
loope
dec
pop
ljmp
enter
ss
clc
xlat
jmp
and
push
or
dec
jo
faddl
mov
mov
in
inc
ss
shll
ret
jne
sub
sbb
add
and
ds
ret
repnz
xor
add
in
lock
lea
pusha
mov
mov
xchg
cmpsl
jnp
mov
mov
testl
mov
test
aam
cmp
add
xor
out
mov
lds
mov
jae
shlb
sub
popa
xor
jo
aas
nop
or
idivb
and
mov
fwait
lcall
lods
add
jecxz
outsb
cmp
lcall
push
inc
es
mov
ficoms
call
inc
add
pop
cmp
ret
adc
in
insb
lret
cli
arpl
jnp
call
jl
mov
sti
out
fadds
inc
and
inc
sarl
out
fistpl
iret
and
mov
lods
add
arpl
add
jecxz
in
out
fwait
lea
leave
and
nop
pushf
repz
inc
jp
pop
popf
push
stos
leave
ret
fistpl
loope
push
mov
dec
pop
mov
and
stos
jg
fs
jb
inc
or
lds
dec
and
jmp
adc
xorl
jbe
pusha
adc
push
mov
and
jns
sar
stc
pop
test
cmpsl
movsb
ljmp
and
mov
addr16
filds
lds
sbb
cmp
mov
pop
sub
xchg
jl
pop
inc
ret
ffreep
adc
or
jbe
pusha
dec
dec
bound
jge
pop
int3
push
sub
int
sarl
fists
mov
xor
stc
insl
xchg
mov
inc
dec
push
mov
out
push
out
mov
imul
push
arpl
inc
cmp
xor
shrl
pop
mov
loopne
cltd
roll
addr16
ret
inc
and
pop
shlb
mov
fiadds
jnp
push
push
sbb
cmp
rclb
push
push
or
xchg
sti
test
inc
pop
mov
fwait
test
sbbl
test
mov
pop
fwait
jae
cmc
mov
outsb
xchg
inc
pop
jno
mov
mov
jb
xchg
mov
xchg
sbb
aas
sahf
sub
aam
outsb
ret
push
pop
pop
and
popa
das
pop
mov
movsb
fs
popf
push
jns
cmpl
mov
push
ljmp
xor
push
inc
xchg
mov
push
ljmp
jmp
adc
aad
mov
cmp
je
pushl
rol
jg
pushf
xchg
mov
push
js
lock
movsl
mov
mov
push
xchg
and
lock
push
lret
and
int
lret
and
xchg
outsb
and
pop
sbb
imull
jg
fsubs
push
pop
sbb
out
cmp
leave
outsb
xor
lahf
add
insl
inc
ret
in
fs
pop
cmpsl
test
popf
dec
das
inc
int
mov
inc
push
push
movsb
sub
and
cs
jae
idivb
cmc
int3
pushf
mov
dec
dec
pop
or
pop
cmp
pusha
test
stc
cmp
jns
cmp
pop
xchg
hlt
jnp
rclb
sub
mov
imul
in
sbb
mov
jbe
aam
in
int3
ss
or
mov
mov
cltd
fdivrl
sbb
shrb
and
jge
into
jg
cwtl
xchg
dec
shl
lret
inc
jb
mov
fisubrs
pop
inc
push
mov
ja
fs
jno
jmp
shlb
add
dec
xchg
cmp
jae
outsl
shrb
test
fwait
pop
cmc
mov
xchg
das
dec
and
mov
push
dec
in
in
or
fistpl
and
mov
mov
add
insl
cmp
mov
shl
inc
xor
imul
mov
shrl
mov
push
dec
aas
pushf
mov
inc
inc
mov
push
roll
mov
bound
mov
mov
les
repnz
jg
fsubrs
jmp
fiaddl
cltd
loop
ja
inc
jp
cmp
and
addb
mov
pop
lds
xor
fildll
fs
jno
popa
inc
adc
pop
mov
les
push
sti
dec
fmuls
dec
xor
lods
and
cli
popa
jg
pusha
push
sbb
idivl
push
push
js
insb
jae
inc
push
or
insb
push
xchg
test
ds
push
adc
or
inc
dec
pop
and
sbb
push
imul
shll
sub
jp
lods
dec
je
add
je
mov
inc
nop
cmp
pop
push
mov
cltd
shl
test
adc
fs
mov
pop
xchg
sbb
es
arpl
jno
jmp
dec
mov
mov
jb
aas
std
ret
movsl
dec
notl
xor
xor
ret
in
xor
pushl
cmpsb
push
loopne
pop
push
mov
sbbb
xchg
repnz
inc
dec
dec
add
mov
mov
push
fdivr
xchg
mov
fstpt
cmp
fldln2
lret
orb
cmp
testl
stc
xchg
or
sahf
leave
mov
outsb
sbb
pop
cmpsl
push
shl
xor
cmp
dec
imul
fimuls
jo
inc
ja
aad
xlat
xlat
push
insb
cmp
mov
xchg
pop
das
push
sub
addl
push
loopne
stc
idivb
mov
push
dec
adc
push
xchg
push
pop
xchg
les
mov
xor
cmovle
xor
je
repnz
pushf
jge
decl
cmpsb
flds
sub
in
fsub
ds
pop
lret
jg
xor
adc
sbb
hlt
jl
sub
cltd
or
push
pop
cwtl
add
inc
test
js
jno
cld
and
bound
fimull
mov
adc
fucom
xchg
cmpsl
cmpb
lds
mov
xor
xchg
mov
xor
test
jns
aaa
cltd
cmpb
test
mov
jnp
fmull
or
cmpsl
dec
jae
jb
ret
movsl
mov
icebp
pop
fsubrl
mov
fnstenv
ss
mov
sbb
push
mov
add
mov
add
lahf
sahf
or
in
jne
mov
icebp
cmp
inc
fimull
mov
nop
stos
aas
xor
into
jl
pop
imul
add
add
idiv
jnp
insl
pop
mov
outsl
cmp
dec
mov
mov
xchg
add
cmp
in
push
scas
and
push
stos
mov
pushf
jle
push
aad
mov
fwait
out
jne
xor
mov
sbb
add
lods
les
cmp
mov
cmp
dec
and
les
jnp
cwtl
inc
push
mov
xchg
mov
and
mov
movsb
cwtl
sbb
mov
pop
sbb
leave
dec
insb
data16
dec
pop
movsb
dec
test
sbbl
mov
aad
call
push
cld
mov
mov
mov
inc
sti
xorb
in
daa
push
add
fidivrl
imul
add
or
dec
leave
cmp
pop
pop
cld
pop
xchg
inc
inc
maxps
sub
repz
inc
cmp
or
sbb
push
out
mov
lods
xor
and
pop
mov
jnp
imul
sbb
lods
ss
stos
cmp
dec
into
fsubrl
aas
ret
xor
and
or
imul
add
or
pop
push
mov
mov
sub
or
insl
hlt
out
daa
cmc
imul
pop
add
sahf
jb
add
cmp
inc
bound
add
repnz
sub
fsubs
icebp
fnstcw
ret
pop
xchg
xor
aas
dec
sbb
jo
fnstsw
outsb
cwtl
sbb
iret
jle
sbb
pop
cmp
jmp
adc
mov
push
insl
xor
and
xchg
mov
lcall
fstps
aaa
push
jno
fcmovnb
xchg
xchg
push
setns
xor
sarl
subb
push
mov
scas
test
dec
push
lcall
add
in
sbbl
lods
pusha
fwait
int3
push
inc
pop
jns
mov
or
ret
test
and
and
add
xchg
cmp
cmp
pusha
ljmp
sbb
xchg
xor
mov
sbb
repz
das
pop
pusha
sahf
mov
stos
pop
inc
lret
in
fwait
jne
inc
fucomip
jmp
arpl
push
cmpsl
and
lea
push
push
or
shll
repz
outsb
cmc
ret
xchg
vmwrite
inc
jg
mov
sub
lcall
ljmp
imul
xor
cwtl
fnstcw
mov
int3
push
push
clc
in
fsubs
cmp
push
add
sti
test
inc
inc
inc
sbb
cs
sub
stc
nop
cltd
push
mov
and
aad
push
orl
pop
sbb
pushf
push
mov
jbe
subb
fdivp
pop
inc
mov
data16
andb
int
mov
sub
pop
pop
ds
xchg
jne
push
stos
sbb
adc
sub
enter
adc
pop
mov
cltd
test
aaa
ljmp
pop
lea
push
ss
ror
add
hlt
push
push
sub
sbb
movsb
fdivl
in
adc
insb
in
push
int3
hlt
sbb
sbb
and
xor
lea
mov
pop
sub
seta
popf
pop
jecxz
shll
fsubs
lahf
inc
test
sbb
add
sub
push
and
dec
repz
pop
adc
aas
rcrl
cmc
iret
mov
rcl
mov
mov
add
iret
sbb
jmp
mov
out
std
mov
imul
std
mov
je
loope
or
je
cmp
popf
mov
push
pop
flds
push
subb
dec
fsub
jmp
and
mov
mov
cmpsl
sbb
je
dec
inc
cmp
pop
cmp
pushf
push
stos
shlb
lock
jg
add
or
sbb
lret
icebp
fadd
lods
fwait
int
add
pop
pop
js
loope
mov
nop
add
hlt
pop
scas
fldt
inc
jnp
jmp
shrl
insb
sbb
rcll
cmpb
mov
imul
lods
std
jl
repz
inc
out
andl
pop
idiv
shrb
pusha
iret
loopne
pop
push
lods
add
test
xchg
jge
loope
and
dec
xchg
insb
or
xor
sub
mov
jmp
or
xor
jge
int3
mov
mov
sbb
shrb
pop
cmp
or
adc
mov
push
stos
add
dec
sub
outsb
aas
dec
push
aaa
dec
stos
sub
or
fucomi
mov
sarl
or
pop
inc
fs
sbb
lahf
rolb
xorb
or
cmpsb
xchg
arpl
mov
push
pop
xchg
inc
mov
in
jecxz
ljmp
iretw
loop
xor
lret
push
stos
dec
aas
pop
stc
push
stc
ret
adc
xor
and
xchg
arpl
insb
mov
cmp
insb
inc
add
mov
in
jge
in
rcrb
jns
neg
pop
sub
lretw
stos
sbb
les
push
cmp
pushf
mov
imul
adc
insb
xchg
add
adc
xchg
in
loopne
test
fwait
and
pop
push
pop
test
insl
push
pop
dec
ss
popf
push
pop
popf
imul
cltd
pushl
in
mov
sub
mov
mov
and
xor
cmp
cmpsl
push
adc
mov
fnstenv
ret
and
and
lret
dec
jl
pop
mov
jae
sbb
fwait
xlat
cmpsb
loopne
push
mov
outsb
inc
pop
jo
mov
dec
in
mov
mov
push
xchg
int
pop
xchg
pushf
cmp
xchg
sub
scas
pusha
inc
mov
pushf
pop
or
mov
mov
stos
es
rcr
iret
cmp
inc
test
mov
xchg
xchg
out
call
and
movsl
pusha
out
out
adc
pop
inc
insb
jmp
aaa
add
xor
pop
dec
jns
and
lods
mov
or
lret
iret
or
dec
cmc
aad
mov
mov
aas
xchg
jbe
ds
movsl
mov
push
lcall
push
ret
and
inc
jnp
fdivrs
cld
mov
loopne
jecxz
xchg
sub
pushf
mov
mov
test
xor
mov
mov
je
add
xchg
cli
sub
xchg
scas
bound
and
shll
xchg
fidivl
iret
inc
cwtl
and
out
jecxz
mov
movsb
cmpsb
mov
jmp
xchg
adc
dec
mov
shll
add
rolb
dec
add
adc
inc
lods
dec
pop
inc
movl
fwait
sti
hlt
cmp
jnp
push
scas
lea
dec
mov
mov
lahf
cmp
pop
int3
mov
and
test
les
sbb
loope
lahf
cs
lods
push
loop
aaa
add
cltd
imul
das
jle
push
jne
jmp
out
mov
add
adc
cmp
ja
jecxz
mov
xchg
nop
fwait
shl
fcoms
roll
xchg
push
jne
adcl
mov
and
lock
push
pop
sbb
jb
roll
mov
adc
dec
add
mov
stc
or
push
mov
jle
push
xchg
mov
jge
daa
sub
jecxz
jns
pop
jmp
repz
pop
sub
outsb
leave
ud1
rcrb
jp
cmc
sti
xchg
cltd
fisttpll
push
inc
fistpl
adc
jle
cmp
pop
lea
jo
dec
sbb
pop
mov
xchg
in
repnz
jl
and
jecxz
jecxz
lahf
pop
add
jno
into
dec
cs
cmp
cli
in
inc
clc
mov
mov
loop,pn
xchg
ss
out
cmp
mov
add
fs
and
test
out
mov
lahf
lods
hlt
mov
xchg
mov
sub
adc
mov
fwait
sahf
sti
xor
and
lea
insl
adc
jg
imul
jge
sbb
and
cs
pop
jp
jge
lcall
dec
sub
test
xchg
jns
and
adc
and
popf
push
xchg
jae
mov
call
fnsave
out
out
jle
fisubl
nop
loop
adc
iret
xchg
xor
mov
push
loop
sbbl
icebp
or
xchg
stos
add
lods
lret
fisubs
pop
adc
mov
inc
cltd
xchg
insl
outsl
lea
cmp
push
cmpsb
add
push
loope
or
sbb
cs
jns
icebp
push
icebp
loope
lcall
jno
xchg
popa
and
dec
gs
icebp
adc
cld
rclb
cli
out
lods
fxam
repnz
aaa
sbb
inc
iret
aas
ljmp
ficomps
cmpsb
xchg
jae
fiadds
sub
and
add
sub
gs
cmc
in
and
mov
lods
pop
sar
mov
add
cmp
and
mov
clc
dec
cmp
cmpsb
jg
mov
and
sbb
dec
stos
xor
loope
add
stos
mov
pusha
jbe
lret
aam
cmp
sub
mov
or
in
fcompl
dec
in
push
cli
ja
push
fisubs
inc
sub
and
or
fwait
fwait
movl
pusha
pop
push
cmp
ret
mov
fstps
ret
dec
fistpll
cmpsb
ret
das
dec
and
aad
dec
subl
inc
cmpsb
in
push
stc
jecxz
out
ss
jecxz
mov
push
push
push
fnsave
aam
testb
arpl
dec
aas
or
and
nop
dec
aaa
add
or
lahf
cmc
pop
test
nop
fisttpll
jne
insb
pop
inc
push
push
test
in
outsl
int
xchg
mov
sti
xchg
pop
and
mov
and
call
std
or
int
mov
adc
mov
out
les
clc
shrb
pop
popw
push
insb
dec
jmp
fwait
pop
mov
bound
rorb
push
out
cmp
das
pop
or
clc
add
repz
int3
cs
in
fnstcw
mov
das
or
dec
test
adc
loope
mov
push
cmc
xor
pusha
pop
push
mov
xor
jne
cltd
pop
frstor
hlt
scas
and
sub
add
push
mov
jp
sbb
les
xlat
pop
xlat
pop
mov
aas
popa
adc
dec
pop
pop
sbb
sbb
enter
jne
cmc
push
cmp
call
testl
adc
adc
repz
mov
scas
push
mov
in
sub
cltd
dec
imul
notl
or
adc
imul
mov
xor
jae
sub
and
rorb
jmp
fimull
mov
add
add
add
add
add
add
sub
sub
shl
sbb
stos
nop
mov
mov
enter
bound
jp
mov
fnstenv
cmp
mov
loope
cmc
and
push
nop
xor
popa
or
fs
inc
clc
xchg
adc
lar
jl
imul
addr16
or
outsl
push
inc
push
xchg
sbb
sbb
add
inc
bound
adcl
jp
pop
sub
adc
rol
push
ds
push
in
add
mov
andb
dec
push
sti
inc
adc
fwait
sbb
icebp
clc
and
fdivl
call
pushf
insl
sbb
mov
ret
jl
pusha
push
pop
push
inc
push
ljmp
xor
sub
test
xor
mov
das
cli
loopne
mov
fistpll
icebp
rcll
dec
add
in
shl
ss
or
pop
mov
xchg
mov
xchg
push
gs
xor
cmpsl
or
les
ret
sarb
in
xorl
arpl
testb
mov
in
adc
push
jae
nop
mov
cmp
aas
test
test
into
xchg
cmp
sub
xlat
xor
jmp
sti
inc
dec
in
aaa
scas
fcomp
xor
iret
cmp
adc
mov
movsl
jo
adc
scas
cmp
jg
int
aad
pushl
out
cmc
mov
mov
adc
out
jne
fs
repz
dec
dec
cmp
xchg
push
roll
dec
add
movl
push
ja
adc
cld
daa
xor
sub
and
dec
mov
lret
or
gs
xlat
sub
push
enter
ljmp
pop
inc
push
xchg
lds
idivl
daa
push
mov
jge
pop
sbb
mov
shrb
shlb
inc
divl
mov
orl
inc
sub
pop
or
shlb
cmc
inc
xchg
mov
stc
add
outsb
xor
mov
leave
dec
xorl
jnp
sub
inc
repnz
mov
movsb
mov
adc
fists
sbb
inc
mov
or
dec
daa
dec
mov
xor
les
pop
dec
push
add
in
rcrb
push
and
push
popa
mov
xor
test
je
adc
movb
inc
mov
or
call
or
push
lods
adc
movsb
rcr
pop
in
xchg
mov
test
mov
xor
js
loope
sbb
out
jmp
xlat
xchg
gs
shlb
test
xlat
ret
out
repnz
js
frstor
mov
and
mov
subl
cmp
inc
int3
and
dec
je
loopne
fwait
out
test
sbb
out
mov
mov
fimuls
or
pusha
mov
nop
andb
mov
cltd
cld
push
mov
or
push
lea
pop
pushl
mov
jg
out
scas
push
imul
or
jo
or
push
or
popf
mov
inc
pusha
loopne
les
test
jl
and
imul
icebp
outsb
mov
jle
jp
shr
sub
out
iret
fadd
mov
sti
dec
scas
cmp
or
xor
xor
xchg
dec
sahf
lcall
xor
sbb
or
or
push
inc
xor
mov
mov
add
pop
xchg
or
arpl
test
stc
cmp
or
inc
arpl
cwtl
jge
out
insl
ss
fnsave
mov
lods
filds
das
xchg
stc
cmpb
sbb
push
cmpsl
arpl
xchg
popa
gs
clc
or
sub
jle
mov
sub
ret
jb
xchg
mov
loope
insb
sbbb
insb
cs
dec
add
cmp
fs
or
cmp
add
test
in
leave
xor
or
fldt
popf
nop
loope
dec
jns
mov
addr16
push
fisubs
sbb
mov
imul
push
or
pop
mov
jmp
dec
mov
jns
std
adc
test
push
outsb
jge
sahf
in
add
ss
hlt
mov
mov
out
movsb
clc
xchg
rcll
push
xchg
inc
mov
lock
out
xor
jle
and
imul
mov
cmp
out
stos
imul
push
subb
sbb
sar
cs
inc
sti
mov
pop
pop
mov
pushf
pop
mov
je
or
pushf
jmp
pop
inc
lock
xchg
cmp
cmp
out
pop
movsb
push
xchg
mov
jnp
mov
mov
test
mov
mov
shl
mov
jno
dec
hlt
sub
imul
into
test
call
popa
pop
cs
lcall
push
pop
mov
lcall
loope
cmp
loop
gs
xlat
adc
out
aaa
cmp
fcom
jecxz
movsb
mov
ffree
movl
add
adc
cltd
jns
lods
lret
push
xor
mov
pop
cmp
sbb
test
adc
push
repnz
add
inc
inc
ret
mov
out
popf
pop
mov
adc
inc
clc
xchg
test
ss
and
inc
scas
iret
call
add
sub
adc
pop
mov
arpl
out
cltd
jg
mov
outsb
fwait
ja
imul
dec
inc
mov
lods
pop
outsb
mov
popf
sub
pop
add
xor
mov
mov
into
addl
inc
repz
outsl
mov
rorb
lods
bound
shll
jg
outsb
dec
ja
or
mov
add
adc
cmp
fwait
lret
dec
test
lods
sbb
jl
sub
adc
movsb
popa
cmp
jb
movsl
mov
shll
test
mov
rcrb
fmull
das
mov
shlb
test
adc
iret
ljmp
cmpsl
xchg
je
stos
dec
jno
cmc
or
mov
in
or
cmp
mov
mov
shrl
jle
out
and
enter
mov
sbb
ljmpw
mov
movsb
ss
pushf
mov
mov
and
or
or
and
add
mov
or
test
pop
mov
sub
xchg
adc
sbb
cmc
mov
jae
xchg
push
sub
stos
lods
dec
mov
adc
fstl
jl
jmp
hlt
xchg
data16
cwtd
out
or
xchg
mov
pop
js
loope
scas
lret
xchg
and
ret
fwait
pop
fdivr
aas
xchg
paddsw
dec
je
xchg
mov
les
icebp
mov
insb
add
insl
sarb
mov
hlt
lods
sub
sub
call
bound
mov
pop
roll
xchg
mov
adc
fildll
add
imul
xchg
dec
inc
pop
je
xor
pop
stos
inc
stc
mov
mov
outsb
aaa
rclb
mov
fnsave
xor
and
sahf
jle
fidivs
negb
jno
addr16
testl
mov
cmpsb
dec
inc
pushl
sub
stc
xlat
imul
pop
mov
pop
rcrl
xchg
scas
scas
mov
jns
lret
adc
popa
cmpsl
lret
enter
jb
push
push
jmp
sbb
or
les
xor
cmp
std
pop
dec
cmc
lret
xchg
mov
std
ss
sbb
hlt
imul
jp
cwtl
aaa
cmpsb
aam
and
mov
fwait
addr16
mov
sub
in
mov
xchg
adc
sub
sti
push
ficoms
scas
xchg
sub
cmp
movsl
enter
add
xchg
cmp
fwait
sti
shll
insl
xor
adc
outsb
ds
cs
frstor
cmp
mov
sub
fsub
test
sbb
cltd
loope
pusha
jb
mov
aad
out
fstpt
mov
pop
and
flds
sbb
repz
mov
inc
enter
imull
ljmp
rolb
sbb
inc
adc
push
pusha
dec
das
and
jecxz
dec
sahf
mov
or
addr16
xor
repnz
xchg
push
sub
psubusb
or
pop
pop
push
mov
rol
rolb
lods
and
jl
inc
int3
pop
jl
movsl
push
inc
jp
call
sbb
push
ds
mov
jecxz
mov
enter
sub
outsl
mov
hlt
cmp
loopne
out
lret
dec
cmpsl
test
maxps
in
jb
sub
sbb
in
xchg
in
adc
mov
jae
inc
test
dec
rclb
mov
jl
xor
pop
das
add
mov
pop
adc
popa
inc
push
ja
jo
jno
sub
rep
inc
xchg
push
lock
loopne
mov
nop
pop
adc
das
sub
inc
fsubr
pop
mov
xor
pushf
mov
int3
ja
mov
orl
mov
stc
mov
mov
lods
and
or
xor
cwtl
adc
out
sbb
mov
cwtl
aad
ss
pusha
cmp
movsl
push
data16
pushf
cmp
and
xor
add
cld
and
sub
jmp
add
test
cmp
bound
rol
mov
jae
dec
pop
repnz
inc
int3
icebp
fisubl
add
negl
pop
adc
dec
mov
add
mov
insb
sbb
mov
mov
js
fwait
outsl
arpl
xchg
ss
aaa
xlat
mov
ljmp
lods
mov
fs
xchg
mov
call
and
icebp
popa
add
mov
clc
jge
js
mov
aad
mov
push
mov
xlat
mov
aas
lret
shll
lea
fsubrs
es
cmp
lret
stos
fdivp
pop
rcll
mov
add
adc
fbstp
out
int3
mov
mov
popf
lods
shll
mov
inc
int3
addr16
leave
xor
cmp
pop
repz
out
aas
test
mov
loope
cmpl
push
jl
test
cmp
mov
mov
xchg
movsl
into
je
imul
fistpll
clc
fdivrp
scas
mov
push
inc
inc
sub
mov
or
adc
mov
loope
sahf
jmp
ds
xchg
out
cmp
sahf
popf
icebp
jle
jnp
push
mov
int
sub
mov
js
mov
xor
orl
bound
mov
out
cmp
push
pop
ja
repz
es
in
test
stos
pop
mov
or
and
je
into
lods
cmpl
cltd
icebp
cmp
fbstp
or
std
mov
push
push
jge
inc
rcr
dec
cmp
imul
shrl
sbb
jno
jb
mov
aad
scas
mov
lods
les
adc
sub
lea
test
xor
pop
cmpsb
or
jmp
repz
cmp
jne
xchg
addr16
cli
adc
sysenter
loop
testb
mov
dec
fildll
repz
movsl
and
lods
in
xlat
sub
into
push
les
hlt
jmp
dec
jns
in
sbb
mov
fsubs
flds
adc
movsb
dec
testb
adc
mov
in
inc
adc
sti
mov
shl
mov
movsl
ljmp
nop
jbe
xor
jne
or
mov
repnz
imul
popf
inc
js
and
mov
dec
cmp
hlt
insb
jmp
test
inc
pop
add
dec
or
cmp
jg
movsb
and
push
icebp
scas
jne
ret
repnz
mov
sbb
subl
mov
rorl
popa
mov
jmp
aam
cmp
dec
and
xchg
rcl
xchg
xchg
nop
cli
insb
aam
out
push
es
and
shll
xchg
add
or
add
iret
lods
sbb
push
xlat
adc
adc
movsl
add
mov
xor
test
cmp
pushf
jle
pushf
repnz
pop
lea
lret
jbe
mov
push
test
mov
cmp
lahf
mov
fdivr
dec
or
fucom
mov
loopne
pop
inc
and
pop
data16
cmp
test
cld
je
pop
mov
in
dec
fsub
mov
xchg
iret
test
push
lcall
pop
add
ret
xchg
imul
pusha
sbb
jecxz
in
imul
popa
add
xchg
inc
repnz
rorb
mov
or
jmp
scas
iret
lret
xchg
ret
clc
push
popf
push
dec
clc
ja
shlb
push
lret
pop
sbb
mov
hlt
adc
and
das
lahf
jns
add
add
dec
jle
xchg
leave
sub
jg
insl
mov
xor
in
aam
repz
in
popf
mov
cmp
inc
shll
dec
mov
int
xor
ds
std
push
mov
stos
push
test
and
ret
mov
mov
cltd
sbb
inc
sub
xchg
popf
xchg
movsl
shll
enter
popf
shrb
mov
into
test
cmp
or
movsl
je
fnstsw
xchg
aas
push
or
sbb
push
loop
mov
fucom
repz
ja
pop
in
cmp
mov
jbe
hlt
cmp
mov
and
icebp
out
pop
mov
jp
lods
out
dec
nop
mov
add
fdiv
mov
pusha
fwait
rorl
jb
fwait
dec
test
push
movsl
jo
dec
fdivrl
sbb
jp
xchg
stc
dec
aad
pop
outsl
nop
cmp
xchg
ljmp
jae
int3
and
lods
pop
dec
or
xor
mov
adcl
mov
jo
pop
rcrl
arpl
lret
pop
in
xchg
test
popf
ret
jmp
orb
pop
dec
jnp
mov
add
sub
iret
mov
test
or
push
cmp
imul
sub
mov
shr
fldl
and
fs
outsb
mov
sbb
adc
fists
dec
in
clc
cmp
or
mov
into
jl
repnz
ret
out
push
out
push
sahf
sbb
loope
testb
les
dec
sti
mov
add
or
data16
ljmp
pop
or
xchg
mov
ja
jmp
clc
roll
call
and
loope
adc
dec
enter
adc
jbe
lcall
test
mov
mov
fstpt
ds
pop
leave
xor
push
cmc
ret
movsl
jnp
sahf
fxtract
fisubl
clc
push
add
jg
mov
mov
add
outsb
pop
pusha
sar
dec
fcom
ljmp
leave
push
inc
xor
in
mov
pop
fimull
lret
aas
sti
mov
dec
xor
enter
divl
scas
xor
insl
lea
and
sub
ja
mov
pinsrw
sar
loopne
ret
fimull
mov
loope
pop
jle
jge
jnp
dec
inc
cwtl
mov
arpl
loope
mov
jnp
and
rorl
dec
sub
pop
fs
sbb
mov
push
adcb
pop
jecxz
push
loop
scas
je
inc
mov
mov
lds
sbb
jge
in
pop
shll
leave
mov
dec
loop
jg
icebp
adc
cmp
icebp
push
mov
dec
cwtl
test
pop
repnz
jnp
lea
and
popl
aam
mov
adc
cmp
cmp
sbb
int3
roll
daa
aad
mov
call
jmp
cli
push
inc
mov
mov
cwtl
and
in
loopne
fisubrs
mov
add
pop
sbb
lret
movsb
sti
popf
and
fucom
gs
add
sbb
orl
jnp
xchg
lock
movzwl
cli
push
loop
cmp
fcoml
and
and
outsb
and
call
je
jb
ljmp
xor
daa
xor
insl
lock
lds
dec
jl
data16
cmp
aaa
mov
ret
xor
jae
fs
add
xchg
adc
stos
dec
inc
stos
and
jns
push
push
sub
ret
sbb
push
jge
fsubp
jnp
das
mov
sarb
fimull
fsub
adc
dec
inc
fs
lret
shll
fadd
lret
jg
inc
adc
push
fidivs
arpl
inc
dec
aas
mov
mov
nop
jnp
fsts
pop
nop
out
jbe
in
out
ret
adc
in
mov
out
sub
jne
enter
adc
les
pop
inc
xchg
add
inc
add
gs
cmp
hlt
and
testl
xchg
js
fs
call
push
aad
and
icebp
xchg
dec
add
xor
cs
cmc
ret
mov
and
sarb
cld
ja
jmp
xlat
mov
stos
push
push
lds
mov
call
comiss
mov
xor
push
outsb
jo
les
ret
pop
dec
repz
add
aaa
repnz
push
mov
dec
jno
xor
call
repnz
push
mov
jbe
nop
mov
mov
in
inc
pop
movb
aam
hlt
daa
xor
mov
mov
rorb
leave
cmp
push
je
lods
loopne
in
and
adc
add
xchg
mov
or
mov
xchg
loop
xor
inc
std
icebp
xor
outsl
cmp
call
inc
loope
lock
cs
push
in
or
inc
mov
pop
adc
dec
dec
fstl
sysenter
pop
xchg
subl
stc
je
int3
mov
jmp
test
and
sub
push
push
lret
push
ljmp
pop
test
shll
and
lods
jae,pn
popf
pop
ss
lods
mov
push
call
test
mov
jp
in
dec
aad
xchg
popa
push
lock
push
dec
jmp
jmp
inc
mov
into
out
push
xchg
addr16
mov
shr
cmp
mov
lahf
imul
add
adcl
inc
mov
cltd
sbb
jno
pop
jns
loope
stc
or
inc
inc
xchg
push
insb
ret
into
xchg
inc
and
sub
mov
mov
mov
push
gs
inc
mov
mov
jge
push
sarl
inc
out
hlt
jg
divb
mov
fmuls
mov
std
pop
hlt
pushf
fdivs
fwait
pop
push
sub
xor
jne
and
cmp
js
hlt
je
scas
fwait
cs
cmp
cmp
aas
mov
fst
dec
push
int3
or
push
sbb
pop
pop
and
jl
in
insl
push
pop
or
daa
inc
fdivrl
loope
cmp
fstps
jb
mov
cmpb
les
xchg
stc
in
pop
stc
arpl
mov
mov
push
inc
sti
xor
sbbb
xlat
xor
inc
add
push
cwtl
xchg
sub
jg
fldl
popa
aaa
shll
stc
jmp
or
rcrl
pop
or
test
and
imul
lds
or
fisubrs
sahf
xor
xor
lea
es
xor
add
loop
push
imul
pushf
in
and
sbb
adc
adc
adc
jne
mov
jp
pop
sub
xlat
frstor
push
pop
pop
clc
in
or
andb
adc
xchg
jb
test
push
and
mov
push
pop
shrb
ds
and
dec
imul
push
xor
mov
outsb
jne
inc
ret
dec
mov
cmpsl
jno
ret
dec
fwait
ja
push
in
orl
jecxz
jnp
ret
out
in
fs
mov
xor
nop
push
mov
cmp
push
imul
and
hlt
outsb
jnp
mov
xor
sbb
jno
insl
orl
cmp
and
int
movsb
cltd
test
add
mov
movsb
dec
fbld
dec
and
push
jb
std
fildll
adc
pop
faddl
js
push
stos
lret
pop
std
ret
or
push
js
sbbb
add
je
fisubrs
mov
call
pop
xchg
push
push
bound
imul
aam
cwtl
aas
sub
jae
arpl
inc
pop
pop
test
ret
jns
stos
jbe
outsb
les
or
mov
mov
push
jg
bound
add
mov
sbb
jge
ret
mov
jle
xchg
jo
mov
xchg
jge
mov
sbb
out
and
xor
mov
data16
push
int
push
insb
sub
mov
jmp
fbstp
and
pusha
imul
mov
fcoml
stos
sbb
cltd
scas
mov
cmpsl
shll
loope
scas
repnz
adc
fiaddl
imul
cmp
pop
gs
daa
jno
pop
dec
sbb
gs
test
jmp
sub
or
ds
mov
stc
js
pop
lds
aaa
cmc
add
jae
aad
cmc
adc
cli
loop
ds
jg
insl
inc
or
mov
sub
das
mov
mov
repz
lods
je
loopne
add
ret
int3
jg
loope
incb
ds
dec
mov
cmp
mov
out
dec
sbb
xlat
jmp
xor
movsb
movl
in
xchg
jno
popa
lret
pushf
popa
aad
dec
cmc
sbb
aas
xor
add
lock
xor
xchg
xchg
leave
inc
sub
push
jp
push
mov
rcrb
loopne
adc
jp
xchg
inc
mov
enter
pop
test
cmp
cmp
push
cmpsb
loope
sub
push
xchg
pushf
mov
mov
push
add
mov
jno
fcmovb
test
mov
mov
out
or
icebp
jne
mov
adcb
mov
ljmp
cmp
jb
inc
aad
pop
mov
add
scas
or
mov
lock
lea
add
movsb
push
dec
out
fcompl
xor
loopne
push
xorl
xchg
jmp
pop
push
testl
sbb
and
sarl
adc
cmc
cld
push
xchg
mov
inc
mov
or
ror
sub
push
sub
lcall
fucomip
and
sarb
adc
dec
pop
push
xor
pop
push
fxch
adc
leave
sbb
arpl
fimull
roll
mov
xchg
fnstcw
dec
stos
imul
sti
out
xorl
jl
subl
cmc
aad
jmp
or
inc
test
mov
out
aam
mov
add
lret
fisttps
add
push
lahf
lcall
aam
and
jp
xor
arpl
cmc
push
pop
inc
ds
out
adc
adc
les
dec
out
roll
add
in
mov
and
jae
imul
loop
lret
inc
fs
sub
xchg
sbb
in
mov
inc
leave
inc
mov
rcl
adc
or
fwait
jge
pop
xchg
mov
push
dec
out
lret
sub
orl
dec
add
push
push
pop
test
and
jnp
and
pop
push
sub
bt
je
pop
clc
xchg
movsb
outsl
jb
xchg
loopne
or
stos
or
jl
xchg
pushf
xchg
pop
stc
dec
jbe
or
shlb
jg
out
sbb
xor
cmc
add
ret
jmp
popa
pop
ret
xchg
adc
fisttpl
mov
and
add
rorb
mov
adc
mov
mov
jg
das
fsubrl
pop
dec
clc
sub
dec
enter
js
movsb
mov
out
repz
lods
mov
scas
rorb
add
pop
es
mov
shll
cmp
push
imul
mov
mov
xchg
or
jno
insl
cmp
pop
aad
mov
inc
das
daa
xor
mov
push
or
pop
dec
cld
jns
sbb
popa
in
cmp
clc
adc
push
jae
scas
push
das
lods
jl
push
lods
cmp
jns
shlb
pop
ds
mov
dec
sbb
bound
jecxz
or
out
bound
jg
in
aaa
xor
std
mov
inc
arpl
cmp
leave
inc
iret
jmp
mov
or
and
xchg
test
xchg
imul
add
rclb
int3
daa
inc
fcmovb
addb
into
jge
lds
pop
and
sarb
mov
movsb
aaa
cmp
inc
dec
pusha
aaa
testb
pop
and
xlat
mov
and
or
cs
lcall
pop
clc
sahf
cmp
rep
add
incb
sbb
mov
and
adc
out
cli
aad
xchg
xlat
mov
and
std
jnp
or
cmp
or
es
pusha
lods
sbb
xlat
jmp
fistpl
and
into
dec
rolb
xchg
mov
xor
repz
iret
fmuls
jae
in
aam
leave
push
mov
jl
iret
inc
mov
pop
inc
push
cmp
push
cmpsb
popf
mov
ucomiss
adc
aam
cld
push
add
testl
jge
pop
int3
pop
rcrb
loopne
xchg
lock
jg
cmc
lds
insl
fld
xchg
jb
test
mov
sahf
sub
xchg
dec
clc
movb
and
mov
test
fwait
cmp
xchg
enter
xchg
mov
pop
pop
loop
adc
aad
in
ficomps
std
fs
ljmp
out
jle
xor
sti
cmp
in
icebp
shl
js
mov
push
popf
in
mov
and
inc
or
dec
insl
dec
and
or
icebp
sbb
mov
inc
gs
scas
fs
sub
lds
std
into
ja
jmp
push
lds
xor
scas
mov
in
dec
addr16
or
xor
jl
mov
test
aad
aad
sahf
add
dec
fcmovne
jnp
lods
icebp
fst
nop
cltd
and
outsb
jbe
xlat
mov
cmp
daa
xchg
xchg
jmp
mov
xor
roll
mov
lret
mov
sbb
je
scas
mov
mov
xchg
loope
add
dec
vpavgb
insl
jb
xchg
mov
jo
mov
jmp
cli
inc
into
push
lods
jle
pop
int3
sti
fidivs
pop
movsl
xor
push
xorb
sub
xor
fdivrs
out
mov
les
pop
in
test
ss
movsb
mov
test
fs
mov
lret
in
in
sbb
lds
lods
xchg
maxps
fisttpl
iret
mov
lcall
pop
inc
int3
and
pop
daa
push
and
pop
pusha
out
decl
add
nop
test
push
xorl
ds
and
xchg
mov
mov
pop
std
js
lods
fcoml
in
mov
movsl
sbb
repnz
jae
mov
push
sbb
cmp
arpl
aas
mov
xchg
outsl
cmp
pop
push
jbe
ds
sti
jp
add
dec
adc
mov
inc
or
push
ret
xor
cld
xor
lret
andl
jmp
inc
call
cli
or
jo
movl
pop
or
inc
fnstcw
sub
fdivrs
push
mov
cld
xor
ret
das
push
push
inc
jns
mov
or
and
cmp
andl
mov
std
ficomps
mov
sbb
sbb
xor
mov
fbld
push
stos
pop
dec
int3
inc
cmp
cld
cmpsl
mov
pop
mov
dec
jae
jbe
xchg
fimuls
pop
or
xchg
in
sbb
and
ficomps
push
push
xchg
pop
jno
aad
mov
jno
cmp
add
mov
mov
cmp
les
nop
cmc
movsl
scas
shlb
out
push
push
test
les
pop
call
test
mov
not
mov
pop
mov
xchg
fcompp
and
lret
adc
push
and
stc
out
push
cmp
cmpl
repnz
adc
jp
adc
sti
cmp
enter
pop
inc
or
dec
shr
jnp
xor
sub
mov
xchg
add
int3
adcb
pop
push
mov
or
add
jmp
cmpsb
fadd
insl
popf
or
sbb
das
fdivl
dec
aas
pushf
xchg
lea
inc
and
xchg
ret
push
ret
jnp
je
stc
xor
fcmovbe
aaa
dec
pop
mov
push
incb
xchg
xlat
or
sub
push
mov
imul
xor
add
sub
push
lds
fwait
ja
insl
lret
addr16
cmp
dec
xor
add
push
dec
cmp
std
pop
das
sbb
cli
lea
sub
les
flds
outsl
mov
sbb
aad
pushf
adc
lds
sub
inc
cmp
daa
xchg
scas
lds
ficoms
or
mov
andl
daa
xchg
imul
mov
dec
xlat
js
push
sub
mov
and
jecxz
pushf
jne
adc
adc
rcr
mov
or
insb
imul
push
icebp
push
outsl
adc
mov
cld
loope
dec
or
jns
std
mov
mov
and
aas
insb
ljmp
int
inc
test
mulb
testb
into
stc
imul
test
out
push
addr16
imul
inc
inc
mov
jle
jle
mov
out
rorl
pop
lock
daa
ss
pop
lods
xchg
xor
sub
inc
add
out
mov
clc
sbb
pop
jmp
inc
outsl
push
cmpl
in
fists
cmp
sahf
adcl
test
fdivl
ret
lods
faddp
push
fcmove
ret
pop
inc
inc
dec
aas
dec
jp
sub
jl
sub
daa
jmp
mov
rcr
push
movsl
jmp
roll
iret
mov
inc
enter
cmc
dec
jmp
vpmulhw
xchg
dec
mov
notb
mov
mov
or
outsb
xor
loopne
mov
push
aas
dec
jge
rorl
adc
lods
fmuls
arpl
mov
rcr
ret
mov
mov
jo
mov
jnp
pushf
imul
ficompl
or
or
xchg
xchg
add
rol
push
std
push
ret
and
inc
ss
outsb
test
aas
adc
mov
inc
loope
ljmp
dec
bound
mov
rcrl
outsb
fidivl
push
mov
pop
mov
lret
jbe
sub
lcall
fsubrl
stc
jbe
push
fistpl
ja
in
xor
xor
imul
hlt
not
inc
jl
jle
cmp
xchg
addr16
subb
push
imul
data16
aaa
out
xchg
mov
fidivrs
mov
imul
repnz
adc
push
inc
xchg
das
dec
sub
in
in
lds
mov
xor
add
jbe
aas
andb
xchg
ret
inc
stos
fs
mov
repnz
push
subl
xor
scas
sti
rolb
push
pop
ret
xor
ret
mov
xchg
pop
inc
and
cmc
push
cli
mov
inc
push
lea
push
mov
inc
outsl
mov
test
andb
ret
outsb
imul
mulb
inc
out
aad
pop
scas
cmpsb
cmp
pop
mov
clc
mov
jl
test
jge
push
nop
stos
add
loope
mov
fidivl
add
cbtw
and
and
push
aad
and
dec
out
pop
lds
lret
jle
pop
pop
insb
std
and
pop
xchg
add
add
stos
inc
cli
pop
outsb
xchg
xor
mov
fistpll
and
stc
in
sbb
daa
adc
mull
sbb
rorb
shl
fs
testl
aam
aaa
push
inc
mov
sbb
sti
scas
fdivrl
push
mov
push
inc
or
daa
pushf
adc
shl
mov
mov
ret
or
pop
clc
popf
dec
imul
movb
sbb
cmpsb
adc
fwait
cli
iret
punpckldq
cmp
ficomps
subb
jae
inc
sbb
jo
in
and
fwait
sub
shlb
aad
lret
aam
int
pop
repnz
mov
cmp
insl
fdivs
ficoms
jo
push
stos
cmp
fwait
not
mov
sub
cmp
ret
mov
aad
mov
mov
fwait
cmp
in
imulb
or
ror
lea
shlb
push
icebp
pop
and
inc
rolb
das
cmp
xchg
in
std
cmp
push
cltd
aad
lret
xchg
adc
xchg
out
test
and
rcll
enter
inc
mov
inc
cmp
int3
ret
inc
jnp
jmp
testl
push
cmpsb
addr16
mov
inc
shll
pushf
dec
push
xchg
sub
cmp
cwtl
jnp
sbb
out
xor
add
test
insl
sarb
int
or
stc
jecxz
sbb
sarl
jns
push
jb
loopne
jge
mov
ja
dec
cmpsb
jecxz
cmp
cwtl
push
adc
lods
jg
jge
sub
xor
cmp
jmp
faddl
jl
sbb
loop
inc
lcall
sarl
fldpi
and
and
dec
mov
jg
mov
mov
stc
movsb
shrb
xchg
cmp
inc
mov
mov
subl
sub
dec
sarl
nop
lahf
push
aad
push
ljmp
and
out
rcr
dec
xlat
mov
cmp
push
sbb
xchg
dec
pop
dec
push
cli
or
sbb
outsl
push
movsb
or
decl
lods
imul
in
adc
popfw
ret
stc
sbb
mov
cli
jns
ss
fs
mov
dec
mov
dec
jecxz
pop
adc
xlat
sarb
push
lcall
or
movsl
ret
pushf
pop
ret
add
lahf
jo
rcl
adc
arpl
out
add
hlt
cmpsb
flds
popa
jb
sub
sbb
mov
add
sarb
daa
outsb
movsl
dec
ret
jbe
push
pop
add
addb
lea
pop
jns
movsl
dec
test
adc
ds
xor
jl
dec
or
mov
xchg
sti
xor
push
push
jbe
pusha
std
mov
std
adc
mov
and
pusha
ljmp
pop
jge
clc
lds
orl
lods
test
aam
pop
sahf
mov
xor
sub
push
xor
xor
sti
movsl
out
cmc
inc
roll
or
sbb
jp
fistps
xchg
push
mov
arpl
adc
cld
pop
cwtl
outsb
push
in
int3
and
mov
jl
mov
add
and
pusha
dec
pop
xchg
xchg
xor
pop
and
call
xor
out
sub
lahf
inc
or
adc
data16
scas
test
push
xor
aas
imul
das
mov
push
pop
insb
xor
loop
insl
std
mov
push
aad
inc
rcr
movsl
push
aas
push
mov
dec
mov
sbb
push
loope
in
or
dec
shr
mov
test
push
fstpt
lea
out
ret
mov
or
stc
mov
mov
and
fsubs
mov
popf
jns
ret
adc
nop
jb
int
inc
xchg
sub
xorl
repnz
sub
mov
roll
fcoml
pop
loope
into
cmpsb
shl
mov
mov
mov
imul
mov
xor
sub
inc
adc
ds
fldt
mov
test
and
repz
and
mov
push
sbbb
sub
or
in
imul
sub
or
cmp
ljmp
mov
mov
sbb
psubw
scas
jg
or
sub
xor
pop
push
orl
test
dec
mov
push
adc
sub
pop
jge
xchg
fistps
dec
inc
and
jecxz
mov
aad
jne
add
addr16
xor
fucomi
mov
pushf
lock
mov
or
mov
cmp
inc
mov
jle
pushf
in
cmpsl
rclb
dec
outsl
insl
mov
ret
out
ret
out
out
sub
xlat
or
rcl
mov
cmp
cmp
and
pusha
xchg
test
rcrl
test
cmp
xchg
push
cmp
nop
aaa
mov
inc
mov
mov
mov
loop
push
icebp
gs
mov
mov
dec
fidivl
cs
out
imull
insb
pop
add
mov
xchg
xor
lcall
xchg
js
and
icebp
hlt
icebp
pop
push
add
mov
pop
addl
cmp
add
jecxz
pop
es
jnp
pop
dec
leave
sti
sbb
ljmp
aas
icebp
fistps
arpl
rorl
loopne
push
fldcw
jae
or
mov
pop
dec
je
push
scas
imul
dec
push
push
jb
jg
xor
ja
lahf
fwait
mov
les
dec
inc
leave
push
in
mov
ds
cs
out
arpl
dec
push
or
pop
mov
and
aaa
xchg
in
mov
and
ljmp
xchg
dec
inc
push
arpl
inc
imul
mov
xchg
into
out
aaa
push
jge
hlt
out
daa
loopne
xchg
xchg
rcrl
jbe
lds
cmc
stos
sbb
or
ficoms
lods
pop
push
dec
cmp
push
and
push
divb
clc
rcrl
popa
pop
or
out
push
push
push
push
add
pop
les
stos
jle
outsl
mov
xchg
stos
and
fwait
cmpsl
ror
pop
mov
dec
imul
pushf
jmp
lcall
sti
xor
out
out
xchg
push
xor
xor
add
sub
xor
out
add
inc
shll
jno
sbb
pop
inc
pop
push
pop
jb
roll
pop
push
mov
imul
pop
inc
jecxz
js
std
xor
jg
notl
nop
test
fcmove
mov
xchg
scas
dec
into
fwait
jnp
insl
test
cmp
dec
js
addb
in
cmp
clc
out
ljmp
mov
adcb
dec
fsubrl
or
mov
ret
xchg
push
add
mov
dec
xor
sahf
and
adc
mov
inc
mov
mov
xchg
adc
push
sarl
cmp
xor
sahf
xchg
or
dec
ds
into
xor
cmp
mov
push
fsubrs
notl
sbb
jnp
pop
xchg
cmp
pop
outsb
movl
xchg
lahf
dec
push
sahf
insb
mov
leave
gs
pop
stc
js
sub
pop
mov
pusha
mov
and
adc
adc
mov
and
push
and
cmp
sbb
jne
cmp
sbb
mov
mov
lret
jg
ret
cltd
cmp
xor
push
mov
lahf
adc
popf
sub
call
repz
push
adc
pop
fcmove
test
add
add
add
add
add
add
add
add
add
add
add
pop
push
dec
xor
dec
ja
dec
arpl
lds
adc
fimuls
adc
pusha
jae
add
sbb
add
push
adc
mov
jb
add
push
adc
outsl
pop
adc
mov
jnp
add
or
add
adc
ljmp
add
adc
add
aaa
adc
xor
das
adc
jge
adc
or
jp
adc
xlat
xor
add
adc
adc
mov
adc
dec
push
adc
mov
sbb
add
adc
adc
faddl
adc
mov
add
pop
adc
cs
adc
loope
adc
xor
adc
cmc
push
adc
mov
jb
add
dec
adc
push
adc
add
js
add
adc
pop
push
adc
mov
pop
adc
mov
add
adc
add
and
add
and
add
adc
fmull
adc
sub
pop
adc
adc
adc
dec
arpl
push
dec
pop
imul
imul
and
pusha
jae
add
add
inc
add
add
inc
add
add
inc
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
je
add
inc
add
je
add
inc
add
je
add
inc
add
je
add
inc
add
je
add
inc
add
je
add
inc
add
je
add
inc
add
je
add
inc
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
xor
xor
add
cmp
dec
inc
pop
add
dec
ss
dec
dec
ss
push
xor
xor
dec
xor
pop
dec
inc
push
xor
ss
cmp
pop
dec
dec
inc
pop
add
xor
pop
push
dec
aaa
pop
inc
pop
push
push
dec
pop
add
inc
pop
cmp
dec
xor
pop
cmp
xor
pop
aaa
push
inc
inc
push
pop
dec
xor
add
push
xor
dec
pop
push
add
pop
push
cmp
pop
dec
dec
dec
add
dec
xor
xor
push
inc
xor
add
cmp
push
inc
pop
push
inc
add
inc
pop
push
dec
inc
dec
add
ss
dec
pop
push
pop
push
ss
pop
push
add
xor
pop
dec
xor
dec
add
pop
push
inc
push
xor
pop
add
dec
pop
dec
xor
xor
xor
add
dec
pop
ss
inc
xor
inc
dec
pop
push
dec
add
cmp
inc
pop
xor
push
inc
push
pop
push
cmp
inc
xor
push
xor
dec
add
push
add
pop
add
push
add
add
add
xor
push
add
dec
add
push
add
inc
add
add
add
push
add
add
add
pop
add
xor
inc
add
pop
dec
add
pop
add
add
aaa
add
xor
dec
add
add
pop
add
push
dec
add
push
add
inc
add
pop
add
add
add
dec
add
add
add
add
xor
pop
add
add
add
pop
add
add
add
dec
add
cmp
pop
add
inc
add
add
push
add
add
pop
inc
add
push
add
dec
add
inc
add
dec
add
add
inc
add
inc
add
pop
add
pop
add
add
add
add
cmp
cmp
pop
push
push
inc
push
jb
imul
test
lret
sldt
dec
cmp
inc
inc
imul
arpl
imul
imul
bound
fiaddl
ljmp
add
add
rolb
add
xor
add
add
add
add
add
xor
add
add
add
mov
addb
filds
rep
iret
inc
add
adc
or
loop
das
ror
dec
pusha
jl
in
cld
aad
pop
pop
nop
nop
jp
nop
nop
fmull
das
punpckldq
adc
adc
mov
out
xchg
dec
add
jmp
js
sub
mov
rorl
loop
mov
repz
mov
pop
adc
int
inc
push
popf
jecxz
or
insb
cmc
mov
push
prefetchwt1
xchg
xchg
push
jl
cmc
sub
fsubr
xor
adcb
mov
jg
shlb
inc
es
cwtl
shll
test
push
sub
mov
xchg
ljmp
out
imul
pop
push
cmpb
dec
mov
fldl
sbbb
push
les
shlb
movsl
add
push
fwait
js
addl
sbb
inc
ret
sbb
sar
lods
mov
daa
mov
pop
lds
cld
popf
sarl
aad
push
test
mov
pop
inc
ret
push
fmull
popf
inc
imul
and
popa
push
mov
mov
jle
cmp
scas
fisubrs
or
addr16
or
mov
idiv
aaa
jecxz
sub
shrl
mov
adc
jecxz
and
push
push
and
inc
sbb
subl
arpl
mov
lods
movsl
bound
add
cld
xor
adc
jle
or
in
imul
dec
in
mov
insl
push
adc
jmp
jmp
cvtdq2ps
inc
cmp
hlt
add
test
add
sbb
xor
imul
aam
mov
xor
das
sub
fwait
jns
xchg
icebp
insb
addl
pshufw
roll
and
aaa
xchg
hlt
cmp
push
imul
adc
int
sub
pop
cltd
aaa
adc
ds
cmp
mov
xlat
xchg
pop
push
xchg
movsb
dec
iret
mov
test
sub
jns
sti
fdivrs
stos
or
repz
jae
push
jns
test
push
fwait
insl
mulb
das
notl
sub
add
dec
into
rorl
add
jo
xchg
mov
mov
mov
scas
mov
cmp
pop
es
lret
jae
sub
or
test
fistps
or
sub
call
mov
jae
and
sbb
sbb
adc
mov
idivl
sub
sti
push
shlb
daa
mov
jnp
inc
dec
hlt
mov
xchg
push
dec
jbe
push
sub
xchg
in
push
cmpl
sahf
jno
faddp
ds
mov
fsubrl
jle
stc
pusha
xor
dec
repnz
call
sbb
outsl
jg
dec
lds
push
push
inc
inc
lds
fucom
stos
daa
adc
jb
inc
std
inc
cld
aas
inc
xor
cltd
popf
out
mov
dec
mov
test
repz
icebp
add
mov
mov
fistps
pop
pop
mov
xchg
push
hlt
shrl
stc
jmp
push
shll
mov
mov
push
inc
pop
movsl
sub
pop
cs
lea
and
ret
add
daa
push
pop
pushf
dec
pop
aas
call
ss
pop
jo
sbb
mov
inc
les
adc
divl
stc
mov
gs
cmpsb
push
xchg
and
shrl
jg
call
and
aaa
push
ret
cwtl
adc
gs
xlat
les
andb
xchg
out
sbb
jae
notb
jl
dec
mov
cmp
insb
lahf
push
mov
mov
adc
pop
arpl
pop
sarl
xor
in
ja
mov
out
idivl
cmp
xor
mov
repz
test
pop
or
cltd
loopne
loopne
sbb
sti
stc
push
outsb
ss
mov
push
or
push
add
adc
daa
push
mov
jmp
aaa
cmpsb
je
daa
insb
lcall
pop
pusha
mov
inc
fwait
xor
xchg
sub
mov
and
mov
fisubs
daa
push
push
lods
pop
and
in
data16
rol
test
push
jnp
pop
arpl
fistpll
adc
jo
int
dec
je
out
pop
fsubl
inc
mov
xchg
clc
mov
dec
jmp
imul
mov
mov
lods
ficoms
ja
lcall
xchg
xchg
mov
adc
mov
stos
adc
test
add
aaa
addr16
and
jle
fstpl
sbb
sbb
inc
dec
dec
push
or
jl
pushf
jle
popa
movsb
add
mov
xor
cmp
adc
cmp
push
or
stos
movb
lret
enter
rol
pop
and
cmc
es
in
jmp
loop
sub
sbb
sub
aas
pushf
jp
push
jno
add
dec
imul
popa
sysexit
xor
mov
mov
fiaddl
adc
mov
pop
mov
xchg
daa
push
sub
sahf
inc
in
add
cmp
dec
lahf
push
xchg
jmp
push
roll
in
push
pop
lods
inc
mov
stos
test
cmp
imulb
mov
orl
dec
jo
ficoms
idiv
xchg
mov
mov
inc
call
loop
xchg
and
cmpsb
and
xor
push
lea
push
mov
push
movsb
pop
xor
jmp
jne
in
sub
mov
stc
xor
jp
lret
or
xchg
adc
pop
ja
enter
in
gs
sti
jnp
and
lods
jl
enter
outsl
xchg
adc
cmpsl
loopne
push
adc
jne
ss
imul
mov
cltd
pop
dec
aaa
idivb
or
push
xor
sub
ljmp
push
sbb
sbb
fimuls
adcb
fadds
jns
or
inc
lret
stc
cmpsb
orb
jns
arpl
mov
and
addr16
enter
shl
sub
leave
mov
lcall
arpl
dec
or
data16
loop
in
pop
sub
arpl
sbb
mov
leave
push
mov
mov
sub
shlb
xchg
scas
jg
rorb
push
push
dec
out
inc
sbb
mov
ja
shrl
psubd
and
cli
ret
out
hlt
loope
andnps
pop
mov
rorl
out
jb
xor
inc
sub
mov
xor
sti
pop
xor
andl
popa
mov
mov
dec
cmp
out
adc
inc
and
fadds
or
fs
js
mov
xchg
pop
mov
jb
test
xchg
test
pushf
fistpl
sub
inc
mov
mov
cwtl
xor
clc
lds
insl
mov
inc
sti
fndisi(8087
push
nop
imul
push
pop
jmp
scas
pushf
jns
mov
popa
ficoms
xchg
pop
pop
inc
mov
sub
sbb
notl
sub
pop
inc
sbbl
push
aas
add
push
outsl
aad
xor
lret
insb
bound
adc
clc
adc
cmpsl
clc
in
sarb
adc
in
ret
sti
inc
insl
into
pop
mov
pop
adc
cltd
sbb
jg
dec
test
push
lods
idiv
hlt
cli
popa
and
adc
call
nop
call
jge
popa
testl
cli
fnsave
inc
or
and
sub
jb
pushf
ljmp
hlt
clc
mov
mov
add
popa
or
mov
in
fmull
push
jle
shll
in
xor
xor
push
in
out
push
mov
int3
cmp
std
outsb
imull
dec
in
dec
out
and
data16
sbbb
xorl
add
inc
in
sbb
xchg
xor
push
and
xor
mov
mov
or
test
push
cmp
leave
sbb
pop
jge
jnp
pop
lods
and
sbbl
push
pop
aaa
sti
outsl
xor
movsb
aam
std
in
cmpsl
push
divl
and
movsl
pop
mov
inc
cmp
dec
mov
subb
adc
push
sbb
mov
mov
movsb
lret
shr
cld
add
outsl
sub
lcall
fdivrs
psadbw
pushw
movsb
inc
insl
mov
xchg
xchg
inc
test
mov
sbb
and
and
int3
std
daa
popa
xchg
jg
mov
js
push
nop
lret
imul
mov
shr
testb
jp
jno
imul
lods
daa
jecxz
outsl
hlt
adc
out
push
div
or
push
dec
popf
push
or
nop
jle
test
pop
mov
sarl
ret
or
aad
cmp
xchg
jmp
mov
outsb
in
dec
sub
pushf
stos
dec
cltd
das
cs
out
mov
cli
ret
or
int
adc
imul
add
push
outsb
mov
mov
dec
ljmp
lods
in
sub
aas
cwtl
out
jae
test
leave
sbb
in
popa
scas
or
xchg
mov
jns
mov
mov
adc
test
xchg
test
jbe
ficompl
mov
test
pop
mov
mov
jb
mov
jecxz
xchg
std
mul
in
imul
mov
fdiv
sub
inc
leave
in
ror
dec
sub
stos
mov
mov
in
int
lods
and
inc
cltd
in
popa
shlb
sub
pop
cmp
mov
scas
push
fucomip
dec
andl
push
aaa
test
or
or
cmp
xchg
and
cs
add
loope
fldt
lods
out
mov
mov
and
mov
outsb
std
mov
popa
icebp
mov
lods
into
stos
xor
mov
lods
add
insl
cmp
mov
icebp
das
outsl
mov
insl
push
outsl
or
pop
lret
shl
mov
nop
iret
shll
imul
negb
mov
sahf
pop
fdivl
mov
loopne
xor
sub
shrb
pop
jp
and
stos
loope
fstps
int
lock
pushf
mov
jo
fisubl
jmp
xor
adc
dec
xchg
pinsrw
or
out
fldenv
mov
int
push
jl
sbb
pop
das
pop
in
adc
dec
cld
addr16
add
or
aas
dec
cli
dec
cmp
scas
dec
or
mov
mov
xor
dec
mov
icebp
fs
mov
xchg
imul
cmp
fwait
lret
rcrl
jge
into
fstpt
xchg
mov
mov
es
cmpsl
jns
shlb
mov
in
mov
push
inc
outsb
xor
or
push
shlb
xchg
add
pop
jl
out
js
and
dec
imul
adc
ss
popa
dec
adc
xchg
es
lahf
push
lds
adc
outsl
insl
xlat
jnp
cmpsb
adc
mov
addb
nopl
into
inc
mov
push
and
shll
lods
cli
cmp
aaa
inc
popa
fwait
add
cmp
cltd
inc
repz
add
out
gs
clc
data16
jae
cmp
mov
sahf
mov
jg
cwtl
call
jg
jb
inc
xchg
inc
test
out
xchg
xchg
jbe
push
push
cltd
jo
push
mov
ds
sahf
cmpsl
or
or
stos
ljmp
daa
les
mov
mov
jecxz
out
lahf
dec
mov
xchg
test
adc
loopne
inc
stc
push
sarb
push
add
jp
ret
out
imul
adc
sbb
jae
data16
mov
cmp
adc
pop
push
scas
pop
je
sbb
mov
pop
insl
rcll
sti
sbb
ljmp
push
test
mov
cmp
fwait
add
lcall
xchg
in
push
jg
xor
and
out
data16
sub
adc
sbb
and
es
cltd
mov
ja
mov
push
stc
adc
int3
mov
pop
int
push
dec
rcrb
lods
in
stos
test
sbbl
fstpl
test
pop
lret
inc
insl
cmp
push
dec
ljmp
lods
jo
sti
push
sbb
pusha
test
das
stos
stos
xor
mov
dec
icebp
mov
xchg
cmpsl
jae
jne
mov
xchg
int3
nop
je
rorl
nop
sbb
jns
or
push
add
addr16
xor
cmp
cmp
mov
pop
pop
adc
loop
cmp
enter
nop
mov
in
jns
jmp
push
adc
fucom
out
les
jle
dec
jp
sbb
jb
out
xor
out
test
repnz
outsl
lods
movsl
push
stos
xchg
js
add
mov
stos
sbb
xor
jns
or
fisubl
mov
pop
cmp
mov
mov
repnz
adc
mov
int
dec
jne
dec
stos
test
shlb
sbb
push
call
or
add
popa
mov
cmp
leave
pop
or
aad
fildll
sahf
or
scas
sub
mov
mov
lock
movsb
cmp
outsl
cmp
jmp
adc
push
mov
mov
test
loope
nop
je
push
lods
or
mov
das
inc
js
nop
pop
cmp
mov
xchg
jg
or
es
nop
sbb
and
loop
inc
pop
popa
js
int3
mov
cmp
mov
adc
pop
ror
cs
or
mov
or
push
lods
sarb
loope
rcll
jmp
push
fnstenv
mov
aad
add
cli
rol
movsb
fcompl
out
and
sub
shl
outsb
mov
xor
rcll
bound
dec
movsb
inc
mov
addl
inc
shll
mov
sub
mov
pop
xchg
ffreep
jmp
jle
mov
adc
mov
inc
pop
lock
inc
aas
cmp
in
popf
sub
xchg
dec
jp
mov
inc
xor
cmp
push
js
mov
in
inc
fistps
or
jecxz
mov
push
cwtl
mov
mov
or
xchg
or
cwtl
cmp
inc
add
icebp
xchg
lods
les
sbb
cltd
mov
shll
arpl
stos
mov
push
nop
mov
repnz
test
sbb
jae
mov
mov
jnp
sti
repz
xchg
pop
ds
stos
imul
pop
sbb
sub
push
xor
mov
sub
adc
shll
mov
movsb
cltd
push
xchg
mov
sbb
lret
lcall
fs
jae
jecxz
xchg
hlt
aaa
jg
mov
shl
cmp
xchg
aaa
fstpt
cld
popl
outsl
bound
std
ds
and
inc
add
dec
inc
rorl
enter
icebp
push
les
adc
sbb
sbb
dec
mov
inc
ss
and
push
mov
fmul
and
push
insl
sbb
xor
in
push
add
jb
push
and
cmp
xchg
mov
repz
dec
pop
cli
dec
lods
add
mov
mov
test
mov
cld
daa
pop
dec
leave
pop
js
gs
stos
xchg
push
leave
xchg
roll
pop
push
sti
jnp
cli
loope
sbb
sub
add
jmp
insl
mov
ja
into
shll
cs
sbb
push
loope
mov
inc
add
in
rolb
dec
cwtl
lock
pop
or
sub
sub
fldl
pop
lds
into
adc
add
sub
rsm
nop
jp
pop
sub
lock
iret
rorb
ret
mov
push
test
testb
dec
xchg
sub
ror
insb
pop
leave
mov
ret
fdivrl
xor
and
mov
pop
cltd
jmp
loop
inc
loopne
insb
mov
adc
iret
xor
pop
aas
jb
mov
cmpsl
es
gs
mov
xchg
lds
das
repz
dec
dec
fisttpll
loop
cmp
dec
mov
sbb
pushl
inc
xchg
je
xor
fwait
lahf
sub
aad
inc
fs
fsubp
out
inc
push
push
in
sub
pop
xchg
leave
data16
loope
mov
fstl
outsb
addb
leave
das
dec
loope
outsb
sbb
pop
sub
mov
loopne
dec
pop
jne
pop
or
loopne
fwait
nop
mov
stos
clc
call
inc
cmp
imul
mov
sub
int
push
jp
mov
cmc
test
mov
scas
test
jns
xchg
inc
aam
sti
adc
add
bound
xor
out
cmp
or
mov
xchg
addr16
scas
stos
gs
jmp
push
sbb
inc
pusha
jl
pushf
jb
les
leave
inc
sbb
fs
das
out
paddb
cmp
fisubrl
cmc
pop
mov
in
or
xor
sahf
mov
arpl
inc
js
jecxz
sbb
insb
jmp
mov
inc
xor
sub
jbe
mov
mov
xorl
lea
xor
insb
jmp
rcr
mov
jl
fs
test
push
xchg
cmp
aad
sbb
cltd
push
cmpsb
mov
lods
js
outsl
pop
cmc
jo
outsb
xor
fwait
adc
pop
cwtl
sub
lock
rol
ss
aad
pop
jl
sub
dec
std
and
pop
inc
push
movsl
sub
adc
lret
add
fmulp
scas
stos
jp
mov
and
sub
sbbl
add
push
pop
adc
cli
imul
or
jno
inc
aad
jmp
in
adc
mov
ss
dec
inc
adc
dec
shl
or
fsubrs
sbb
rcrl
gs
inc
jp
add
push
jns
int
test
add
fcoml
or
fstpl
adcb
sbbb
in
mov
sub
iret
lret
cwtl
pusha
or
mov
sbb
jae
jl
je
jge
adc
xchg
stos
dec
jne
movsl
js
inc
ret
dec
cmp
loop
in
inc
test
adc
fsubrl
jecxz
pop
fstpt
push
cmpsb
cmp
test
jo
push
mov
push
incb
mov
imul
jle
sbb
lret
mov
aas
and
mov
adc
jmp
jmp
repz
dec
inc
arpl
mov
cmpsl
push
or
leave
jno
mov
xchg
and
xchg
push
and
push
repz
loopne
inc
cltd
gs
in
mov
pusha
dec
adc
sbb
rorb
mov
lods
sub
or
xchg
in
jne
xchg
clc
ret
incb
mov
xchg
inc
xchg
dec
adc
in
xor
xorb
sub
int
mov
int3
js
lock
or
xchg
lahf
gs
cli
lods
pusha
inc
daa
and
loop
inc
sbb
or
call
xor
xor
mov
les
add
imul
ljmp
push
out
ret
push
add
or
push
push
push
lods
dec
aad
in
fwait
sbb
sbb
sub
sti
push
mov
mov
dec
sbb
in
lods
xor
jl
jp
xchg
in
out
dec
push
fbld
lahf
rcrl
mov
int3
jp
test
sub
in
xor
daa
dec
loope
fdivrs
mov
outsl
nop
pusha
lret
pushf
sbb
add
outsl
push
out
mov
lock
xor
pusha
outsb
sbb
mov
dec
push
cld
mov
sub
sbb
mov
xchg
xchg
das
push
scas
or
mov
cmp
je
push
out
roll
pushf
stc
movsb
xchg
xchg
pop
repz
jmp
cmp
or
or
push
nop
push
fidivl
or
pop
mov
in
or
repnz
fildll
jo
sub
mov
push
jp
movd
idivb
jne
fucomi
scas
dec
adc
push
mov
icebp
sbb
test
mulps
int3
leave
cmp
add
add
mov
mov
inc
in
mov
rclb
cmp
and
js
jle
ja
stos
inc
ljmp
xor
fwait
roll
mov
ret
jmp
fsub
fldt
mov
lods
lahf
mov
in
iret
cmp
xor
pop
sbbl
mov
lret
cmp
dec
stos
loopne
xorb
dec
enter
or
into
aad
jnp
fsts
out
pop
cmp
lret
leave
ljmp
and
or
pop
cwtl
mov
dec
imul
flds
sub
inc
mov
adc
nop
xchg
cld
ret
xchg
push
dec
out
mov
sbb
xchg
lcall
jno
xchg
insb
imul
ficoms
cmp
pop
pop
mov
mov
or
daa
in
fldcw
pop
ror
ret
orl
enter
int3
arpl
sub
inc
sbb
sub
adc
lret
stos
lret
stos
icebp
inc
imul
stc
rorl
mov
mov
mov
adc
dec
es
lret
shll
sub
cmp
bound
push
fiadds
cmp
lret
bound
or
fisttpl
out
pop
repnz
outsl
loop
jl
sti
xor
cmpl
dec
or
xor
dec
xor
sahf
stc
sub
daa
mov
call
mov
gs
shl
int3
in
inc
or
js
pop
jnp
push
mov
mov
fistps
roll
xor
test
mov
and
cwtl
out
rcr
pop
cmp
push
jge
mov
incb
outsl
jne
cmp
cmpsl
bound
sarb
dec
jbe
inc
add
fdiv
mov
add
add
dec
dec
pop
and
adc
fwait
push
push
jb
lret
cli
mov
inc
cmpsb
repz
mov
adc
mov
pop
cmpsb
jmp
pop
push
cmp
loopne
dec
dec
mov
jge
div
dec
fcomps
clc
sub
lds
repnz
cmp
adc
sub
jmp
js
out
dec
movsb
int
add
roll
push
add
add
cmp
lahf
fadds
inc
dec
cltd
xchg
adc
ss
stc
sahf
sub
sub
and
mov
fwait
inc
cmp
sbb
mov
shl
mov
lods
dec
xor
bsf
ljmp
test
rolb
or
xchg
enter
add
sti
or
xrelease
push
mov
and
mov
and
test
ret
pop
jp
mov
icebp
inc
adc
push
adc
mov
xchg
icebp
mov
daa
add
jb
xchg
xor
sub
add
xlat
pop
rorl
scas
inc
in
andb
cmc
fcmovu
out
ja
je
pop
mov
in
lret
add
or
outsb
sub
add
add
xchg
xor
data16
push
cmp
sub
fcoml
es
jg
outsb
sbb
adc
or
xor
rcrb
xchg
lcall
pop
out
ret
std
xchg
xor
push
jg
lcall
ljmp
bound
adc
aaa
mov
clc
sbbl
inc
or
cmpsb
imul
push
movsl
js
dec
push
jge
stos
mov
jl
andb
pop
xchg
enter
push
xchg
sbb
jecxz
add
call
loope
add
xlat
cs
dec
stos
xor
adc
sub
imull
psrad
lret
in
sub
rolb
and
or
adc
data16
push
std
sbb
leave
add
rcll
inc
outsl
je
shll
sbb
and
add
add
mov
adc
push
rclb
stos
mov
xor
aam
cwtl
stc
in
jle
cmc
movsb
jae
inc
mov
int3
cld
sti
push
jg
or
fisubrs
sbb
and
rcpps
sbb
pushw
dec
sahf
lret
inc
dec
pop
push
clc
mov
mov
je
shlb
pop
xchg
imul
in
xor
jbe
dec
lock
out
aas
addr16
addb
xchg
scas
repz
cmp
mov
push
cmp
lods
adc
push
push
pushf
mov
and
xchg
and
mov
xchg
enter
in
addr16
gs
orb
push
jns
mov
cld
je
push
popa
or
rol
bound
stos
add
push
push
inc
inc
sub
jle
mov
add
out
dec
push
arpl
fmuls
test
and
insl
xlat
mov
sub
xorl
xchg
jns
pop
stc
push
ljmp
sbb
rorl
inc
cmp
jae
ret
pop
popf
xor
stc
sti
jnp
sub
cmpsb
repnz
loopne
int
lea
test
rorl
into
add
mov
enter
ja
push
sub
hlt
call
out
sub
outsl
cs
in
fsubrs
call
mov
pusha
loope
addb
sti
mov
call
fldl
dec
fdiv
sbb
push
aam
adc
add
enter
dec
jmp
push
adc
xor
shlb
scas
xor
jnp
dec
adc
in
ja
imull
cmpsl
cltd
bound
adc
gs
or
mov
out
or
jbe
push
mov
imul
mov
or
pop
add
dec
xchg
inc
leave
jp
cld
andb
inc
add
shrb
std
cmp
pop
out
jp
mov
aaa
shll
cmpsb
int
add
flds
mov
inc
xor
orl
inc
xlat
insl
out
hlt
mov
adc
sti
in
sub
inc
jae
jns
cld
lret
xchg
jg
adc
push
mov
jp
stos
add
mov
fwait
cmp
shll
pop
inc
cmp
adc
push
jo
ficomps
dec
aad
aad
ja
inc
test
inc
inc
adc
cmp
dec
jp
xor
sbb
arpl
mov
ds
fbstp
mov
dec
xchg
pop
lods
out
iret
jnp
and
sub
int
cmp
xchg
ret
cmp
test
popa
jp
scas
and
sbb
nop
inc
fstpt
sbb
add
js
jp
and
loop
xchg
pushf
cmp
xor
daa
dec
aaa
sub
loopne
lods
jle
mov
mov
loopne
imul
and
fldl
mov
cmpsl
push
cmp
mov
adc
jne
jo
jp
add
cmp
add
out
test
jb
push
adc
sti
stc
add
add
and
adc
imul
or
dec
and
ret
xor
jb
ljmpw
sbb
loop
mov
mov
in
sti
jmp
stc
loop
fidivl
shrb
fdiv
inc
cmp
jle
bound
call
loopne
gs
mov
fldenv
pop
ss
std
pop
jecxz
jge
pop
and
pop
insl
clc
cmc
jae
push
xchg
clc
mov
cmp
mov
push
xchg
xchg
pop
mov
popa
ret
mov
add
sbb
mov
pop
lods
mov
test
mov
fsub
inc
sbb
pusha
push
xchg
aam
jg
gs
push
lret
xlat
jbe
stc
lret
fnsave
and
or
sub
lret
out
lret
push
dec
inc
push
jno
cs
inc
cmp
mov
rorl
dec
pop
inc
sub
leave
pop
fcmove
jmp
movsl
dec
leave
pusha
xchg
sbb
sub
aas
and
cmpsb
adc
mov
adc
xchg
adc
jnp
bound
lcall
mov
leave
out
popa
mov
lods
shrb
sbb
ds
sub
lret
pop
cmp
xor
aaa
lahf
or
fdivs
adc
add
inc
orl
cmpl
cmp
sbb
cltd
adc
les
add
daa
int
xor
imul
mov
test
pop
repz
mov
xchg
inc
jns
lahf
jmp
out
mov
popa
adc
fdiv
pop
test
popa
push
sub
push
mov
neg
dec
cmp
negl
push
pop
mov
repnz
mov
lret
or
stc
cmp
aam
push
inc
or
xchg
cmp
jns
dec
rorl
repz
jnp
test
in
xor
repz
arpl
call
cmp
cmp
std
into
dec
pop
add
jg
dec
es
xchg
pop
mov
jecxz
test
sbb
push
push
jbe
xor
mov
xchg
outsl
jnp
xchg
mov
jp
cmpb
xchg
adc
mov
movb
jb
jne
add
lahf
add
fldcw
cltd
fbld
lret
or
repnz
sub
jp
xchg
xchg
pop
movsl
arpl
cmp
cmc
mov
sbb
es
sub
sub
clc
je
and
adc
sub
scas
sbb
out
cmp
sbb
and
lahf
aaa
cltd
jmp
cs
pushf
aam
push
cli
xchg
loopne
dec
and
popf
aad
leave
mov
inc
adc
fwait
sbb
mov
jmp
aad
add
hlt
mov
out
and
sub
mov
lcall
lcall
pusha
fdivl
fs
xlat
lret
jg
scas
xorb
sarl
pop
inc
xchg
xor
test
or
int3
add
push
enter
add
leave
dec
push
fisubrs
iret
jecxz
cmp
lret
pop
or
cmpsb
xchg
loop
js
aam
insl
subb
cld
loop
xchg
jns
push
adc
push
pushf
dec
xor
and
xor
out
cmp
push
push
test
ljmp
adc
enter
mov
mov
jmp
mov
push
adc
xor
jp
dec
loop
pop
fstpl
stos
jl
pusha
in
fsubrs
or
push
xlat
sti
cmp
into
int
jne
bound
imul
dec
jbe
jp
jae
leave
mov
cmp
ljmp
enter
and
jnp
jp
mov
and
enter
dec
push
dec
not
mov
icebp
push
sbbl
es
inc
insb
lods
out
js
fiaddl
jg
mov
dec
out
test
cmp
jle
lahf
push
std
fsubrs
nop
lds
scas
push
adc
jns
sub
loope
cli
ret
mov
pop
xchg
sbb
xchg
aad
imul
fbld
and
lock
testl
adc
icebp
in
xor
adc
cmc
and
rolb
loope
xchg
jb
mov
mov
hlt
xlat
in
lcall
mov
cmpsl
enter
push
mov
test
cmp
dec
das
shrl
nop
icebp
ds
cmp
jp
into
sbb
pop
add
aad
cli
loop
mov
les
outsb
cmp
dec
jae
pop
jae
inc
sti
mov
jmp
adc
dec
dec
lds
mov
movsl
xchg
mov
dec
mov
xchg
push
into
push
call
bound
movsl
dec
and
addl
and
xchg
aaa
push
add
cmp
cmp
movsl
push
jle
bound
cmp
imul
inc
adc
data16
outsl
fs
ret
push
lods
mov
clc
fs
andl
ljmp
ss
scas
or
sub
sbb
lods
mov
mov
adc
out
adc
les
adc
nop
lcall
repz
or
rcr
fwait
xor
mov
mov
jmp
pop
or
out
lea
sbb
adc
mov
mov
cmp
pop
loope
mov
add
pop
movsb
push
aas
mov
enter
push
and
pop
jnp
inc
mov
adc
cs
or
jmp
push
push
mov
mov
clc
mov
dec
push
mov
sub
lods
nop
aad
cmp
add
jns
ljmp
stos
in
out
push
jg
arpl
jo
inc
xor
data16
mov
test
ja
data16
or
mov
sbb
mov
ret
pop
popf
sbb
xchg
mull
cli
stos
je
dec
adc
mov
scas
adc
sub
mov
lods
jno
jae
dec
push
jecxz
push
sub
xor
sarl
pop
enter
mov
pop
jo
aas
jmp
cmp
addl
fstpl
movsb
pop
mov
leave
movsb
lock
xchg
mov
push
xor
or
lods
call
sbb
inc
mov
cmp
cmpsb
into
inc
push
pop
inc
div
push
or
push
ds
cmp
aad
sbb
jge
pushf
in
lahf
sub
dec
cmp
ret
pop
and
xchg
xlat
scas
pop
je
and
cmp
lcall
addl
and
mov
xchg
push
sbb
or
les
out
and
or
pop
out
jecxz
popf
cmp
sub
cmpsb
push
dec
mov
arpl
mov
pop
add
or
mov
mov
fcoms
inc
cmp
into
lods
push
cmp
inc
mov
and
cwtl
mov
iret
sbb
mov
pop
xchg
pop
out
mov
jmp
in
in
add
bound
push
add
cmp
mov
adc
add
mov
cld
addl
leave
inc
add
jno
xchg
add
sbb
inc
es
lock
inc
test
jge
bound
test
cmp
push
pop
ftst
xlat
ss
ficoms
inc
dec
add
fidivrs
mov
cmp
xlat
mov
jge
xor
push
jbe
int
inc
cmp
jne
pushf
mov
jecxz
push
aam
xor
scas
adc
orl
dec
sbb
fwait
mov
mov
jp
push
das
inc
adc
fadds
add
cmp
mov
mov
outsl
aad
sbb
je
roll
push
mov
adc
fdiv
sub
xor
mov
int3
cwtl
shll
or
pop
lods
cmp
push
cmp
ljmp
jo
push
or
pop
cltd
and
adc
int
lods
cmp
and
dec
mov
cmc
sub
into
sbb
sbb
mov
pop
movsb
outsb
ss
mov
iret
and
stos
push
fadds
hlt
andl
aas
enter
jo
fdivl
popf
stc
aam
jle
ljmpw
fcomps
pop
mov
clc
cmpsl
mov
jle
mov
lock
sub
pop
int3
jg
icebp
loopne
dec
mov
push
sahf
pop
or
fsts
stos
mov
fidivrl
mov
sbb
add
mov
add
movsb
mov
ds
pusha
sbb
push
inc
lcall
int3
dec
out
sub
mov
bound
jo
pop
mov
pop
mov
adc
shl
les
inc
xchg
pop
push
mov
fnstcw
xor
fidivrl
sub
scas
cwtl
pushf
or
frstor
dec
jg
daa
sub
dec
pop
sub
add
dec
lock
jmp
pusha
and
mov
jno
fisttpl
shll
addb
ss
into
scas
in
mov
jp
mov
inc
arpl
cmc
hlt
cmpsl
adc
mov
push
jl
cmpsb
add
in
and
es
push
in
xchg
pop
sub
mov
sbb
pop
or
mov
scas
xor
pop
scas
or
dec
and
mov
xlat
bound
cmpsl
imul
clc
lcall
xor
lods
lcall
aad
and
std
jns
in
pop
cmp
cvtps2pd
and
mov
push
mull
pop
xor
mov
and
lock
lea
aam
fidivl
pop
ret
pop
jecxz
out
or
outsb
outsb
pop
or
and
sub
test
loope
sbbb
push
ds
mov
das
pop
sarl
xchg
lea
push
leave
scas
insl
sub
daa
loope
jno
stos
jmp
sahf
clc
dec
mov
shrb
shl
inc
and
clc
incb
jmp
lcall
popf
jp
adc
fwait
mov
fistpll
mov
xor
cmp
popf
hlt
ror
jno
push
jo
xchg
insb
shlb
push
je
adc
outsl
and
pushf
xchg
pop
subl
scas
jo
xor
sti
jge
jnp
push
or
sbb
inc
fidivs
xchg
cmp
cld
jne
movsl
mov
xor
popf
movsl
mov
jge
jl
pop
pop
dec
jne
ljmp
jbe
sub
cmp
cmp
add
xlat
in
xchg
outsb
loopne
push
loope
loopne
out
stc
pop
jne
jecxz
mov
inc
aad
jae
das
or
loope
mov
addb
fildl
mov
fmul
and
jl
push
pusha
xchg
dec
jmp
xchg
sahf
outsb
xor
les
inc
hlt
push
repnz
cmc
jae
sub
stos
and
js
jns
repnz
mov
jnp
ret
ljmp
mov
test
pop
jmp
lahf
rol
mov
popl
push
cmp
mov
jmp
push
sub
adc
lret
mov
enter
lret
mov
mov
cmpsb
push
mov
out
jmp
icebp
fcmovnu
addl
push
fldl
bswap
mov
push
cmp
mov
jle
pop
jne
leave
hlt
pusha
ret
xor
lea
enter
icebp
pop
shlb
lea
adc
repz
push
inc
lret
sbb
adc
popf
jbe
stc
ret
std
inc
mov
fimuls
call
push
xchg
pop
mov
test
stos
ss
inc
movsb
jl
repz
scas
imul
ss
dec
mov
mov
aas
pop
faddp
lock
jns
cmp
pop
cld
or
shl
mov
mov
inc
pop
xchg
dec
sub
mov
sbb
mov
in
jb
test
rol
inc
or
rclb
rorl
mov
addr16
sub
movsb
jae
pop
cmc
pop
pxor
jecxz
leave
test
xor
fwait
dec
adc
push
dec
lahf
aad
lock
jl
outsl
pop
mov
je
sbbl
or
rcrl
daa
and
push
xor
jo
sbb
adc
mov
xor
cmp
out
call
mov
lock
push
xorb
fisttpl
xlat
mov
xor
add
mov
mov
cmp
dec
mov
jl
enter
adc
dec
mov
popa
les
loope
test
push
dec
sub
xchg
xor
push
inc
mov
xlat
rorb
cltd
push
stc
push
jmp
mov
sbb
dec
mov
inc
std
stos
iret
mov
push
dec
pop
and
pop
push
cmp
outsb
sbb
pop
pop
push
sub
mov
push
pushf
xor
out
jne
fs
cmp
xchg
push
push
imul
xchg
xchg
pop
enter
shlb
pop
mov
dec
sbb
lcall
push
mov
icebp
sbb
lods
sbb
andb
inc
pop
push
inc
ja
lcall
pop
aam
outsl
xor
fidivl
andb
dec
sbb
pop
dec
and
stos
daa
pop
fs
testl
fimuls
lea
stc
mov
pop
cmp
mov
andl
xor
negb
int3
lods
add
adc
movsb
pop
jle
xor
and
out
insl
xchg
aas
push
mov
sbb
flds
shll
cmp
imul
sbb
in
sarl
lret
cmp
aad
or
jns
xor
ret
in
xchg
mov
jmp
test
jge
cmpsb
mov
ret
adc
add
or
xlat
movsb
jno
int
mov
adc
repz
outsb
jbe
adc
dec
jnp
shlb
cli
pop
lcall
push
jge
cmc
push
mov
dec
iret
and
enter
sbb
test
stos
cmp
dec
bnd
xchg
inc
jne
xor
pop
rcll
icebp
sti
retw
ja
push
stos
dec
jp
or
cs
es
mov
call
outsl
cmc
adc
add
adc
sbb
mov
and
filds
ds
and
mov
mov
popf
out
sub
addr16
cli
imul
mov
cmpsl
ljmp
mov
int
xchg
sbb
pop
mov
cmpsb
push
pop
std
add
daa
xor
loopne
pop
push
jns
mov
cmc
adc
xchg
loop
filds
push
stos
mov
inc
xor
pop
jb
in
fldcw
and
xor
ss
xchg
arpl
add
mov
sbb
push
fcompp
sub
into
or
sbb
jg
xor
loopne
fildll
push
xor
mov
jle
stos
add
repz
orb
xchg
push
mov
adc
inc
pusha
arpl
dec
add
jae
sbb
pop
mov
cli
mov
push
and
fildll
cli
fs
iret
outsl
dec
out
test
or
aaa
sarb
pop
mov
push
subb
test
xchg
cli
adc
pop
jo
add
and
mov
inc
outsl
sbb
dec
cmpl
ret
fimuls
stc
enter
pusha
or
xchg
inc
push
test
and
mov
ficoml
ja
aaa
shll
push
jge
add
xor
sub
adc
mov
push
add
aaa
sbb
pop
fstl
push
sbb
shl
mov
test
xor
sahf
pusha
out
filds
inc
push
mov
shlb
scas
cmp
inc
and
test
cmp
clc
jg
mov
repz
test
xchg
inc
or
ret
das
ja
int3
sbb
lret
xlat
xor
mov
je
sub
push
mov
filds
clc
jnp
iret
addb
mov
and
adc
inc
aad
fwait
push
lret
repz
xchg
aas
jge
and
mov
mov
sahf
sti
sub
dec
pop
retw
sarl
popa
add
push
inc
pop
push
and
sub
jbe
or
push
enter
pusha
or
mov
out
xchg
sbb
in
mov
shlb
push
push
push
xor
lods
cmpsb
pop
pop
jg
jb
mov
xor
mov
mov
adc
adc
mov
pop
pop
mov
les
daa
dec
and
sub
dec
stos
cmp
or
out
jg
cltd
mov
cmp
sahf
sbb
mov
sbb
pusha
sub
dec
call
inc
daa
movsb
jae
mov
pusha
leave
mov
mov
inc
jge
adc
mov
and
ret
add
dec
jnp
add
jb
sub
in
cs
lcall
test
pop
enter
sub
pop
adcb
lret
xor
bound
lds
add
dec
addr16
cmc
mov
dec
push
push
and
ror
adc
js
out
xor
mov
cltd
sbb
mov
dec
sbb
add
lods
push
ret
test
jp
scas
stc
xlat
sub
mov
add
lret
sbb
cmp
mov
mov
inc
cwtl
imul
mov
inc
pushf
lods
xor
out
mov
jmp
leave
shlb
mov
mov
fs
dec
add
xorb
cmp
jmp
cmp
adc
sbb
adc
dec
pop
xchg
sbb
nop
or
cmc
pop
out
pop
or
outsl
mov
hlt
add
jns
leave
mov
addl
shrb
pop
push
push
sbb
mov
dec
arpl
adc
scas
test
or
iret
xchg
pop
sub
cmp
inc
aaa
push
lret
jmp
ret
dec
jp
cmp
jmp
sbb
or
adc
pop
dec
addb
add
add
add
add
add
add
add
add
add
xor
mov
andb
divl
mov
sahf
ljmp
jl
jge
and
pop
or
pushf
sub
sub
in
stc
shlb
sti
mov
aaa
adc
mov
push
mov
push
sub
mov
lret
xlat
sti
mov
jmp
aad
push
mov
mov
or
push
mov
pusha
cld
mov
ss
jnp
mov
in
aam
lret
cmpsb
in
sbb
in
pop
jmp
andb
inc
in
pop
fwait
pop
mov
inc
jo
jbe
fistpl
pop
mov
cmp
fdivrs
jno
mov
nop
mov
fst
aaa
pop
popf
gs
dec
stos
shl
xor
pop
insb
dec
xchg
and
sahf
loopne
jge
lea
cmp
adc
stc
fcompl
enter
or
imul
cmp
pop
mov
inc
sbb
orb
cwtl
in
sub
xchg
test
fldcw
mov
sbb
out
call
stos
push
xchg
or
fmul
mov
inc
pop
lods
mov
fwait
aam
pop
mov
fistpll
inc
ds
mov
mov
mov
inc
arpl
sbb
ljmp
pop
xor
nop
leavew
insl
mov
sbb
inc
add
adc
pop
ret
and
jo
sub
sbb
xchg
sub
mov
mov
jb
mov
in
jl
mov
sub
push
mov
jo
dec
and
xchg
cmpsb
mov
cmp
fistpll
ljmp
dec
data16
cld
sti
leave
or
les
xor
mov
ljmp
adc
mov
sti
fcomps
cmp
mov
call
mov
and
cmp
jle
loop
sub
inc
pop
into
pop
xor
movsl
jbe
call
mov
push
xlat
mov
mov
dec
js
inc
add
ljmp
ljmp
push
lods
hlt
jbe
loopne
aas
aad
xchg
fcomps
cmp
imul
mov
gs
rorb
cmp
dec
leave
addl
in
test
push
out
out
loopne
jmp
xor
inc
int3
cld
push
mov
mov
mov
inc
dec
cmpsb
cmpsb
sub
xor
inc
popa
dec
mov
pop
xchg
outsb
push
subl
jo
jb
or
dec
paddusb
lea
lret
push
cmp
fwait
cmp
lcall
adc
mov
out
addr16
or
gs
mov
xor
je
push
adc
mov
xlat
adc
mov
lret
movsl
test
pop
hlt
cmp
mov
stos
mov
dec
xchg
addl
xchg
fsubrp
cmp
ljmp
cmpsb
shll
add
mov
or
pop
dec
xchg
xchg
jae
incb
gs
dec
lods
or
aas
or
scas
lcall
movsl
out
mov
dec
fs
sub
inc
loope
and
adc
iret
into
flds
test
gs
sahf
popa
idivl
push
inc
cmc
sub
jnp
mov
stos
cwtl
lcall
push
jne
cmp
jnp
sub
cld
nop
lods
inc
aaa
aas
std
inc
movsl
les
pop
push
lock
out
sti
aad
push
and
fidivrs
mov
sbb
pop
xchg
mov
ds
imul
shl
push
or
xchg
mov
cli
mov
sbbl
stc
mov
pop
orb
and
fadd
orb
ljmp
daa
sahf
cltd
frstor
into
lahf
loopne
push
loope
inc
test
das
frstor
enter
int3
fs
xchg
adc
xchg
orl
add
jmp
pop
lcall
sub
dec
xor
jbe
sub
mov
add
lock
jno
scas
jb
or
jge
fistpl
cmpsl
mov
lods
cld
mov
ret
adc
bound
arpl
or
ljmp
pop
inc
bound
movsl
jbe
fidivs
inc
mov
mov
dec
fs
and
cmc
test
xchg
cmp
sub
xchg
fsubrl
notl
leave
mov
jmp
xor
xor
nop
and
inc
sarl
pop
cld
roll
dec
cmpsb
leave
gs
adc
jo
sub
movsl
push
xor
lock
lcall
stos
mov
imul
sti
jae
mov
xchg
in
rclb
jb
and
out
mov
xchg
incl
bound
mov
fdivrp
push
mov
insb
add
xchg
pop
mov
sarb
addr16
sub
jg
xchg
adc
mov
xor
push
aaa
add
adc
cmp
stos
aaa
push
icebp
jecxz
xchg
test
es
lock
jbe
xorl
sbb
insb
mov
xor
pop
jne
cs
xchg
stos
rcrb
adc
sbb
loope
cmpsb
js
subl
sbb
dec
xchg
adc
dec
imul
or
int
fst
dec
popf
cld
mov
lds
pop
cmp
lods
int3
int
sub
outsb
push
pop
cmp
mov
jl
jge
jp
jne
and
int3
shlb
test
cwtl
leave
cmpsb
or
jne
stc
ja
mov
mul
xchg
and
mov
mov
ror
test
loopne
sub
imul
dec
addr16
leave
mov
mov
insb
mov
xorb
dec
mov
cmp
push
mov
sbb
xor
jnp
jg
pop
and
ds
insl
adc
lock
flds
push
mov
adc
sbb
aaa
xchg
mov
jmp
jp
addr16
push
mov
dec
sbb
sarb
in
scas
cmc
add
pop
push
jnp
mov
jp
mov
cmp
sub
sbb
jb
cmp
dec
add
jp
dec
and
in
push
movsl
subb
cmp
cmp
stc
jnp
test
mov
and
ret
push
and
lcall
mov
push
and
sub
and
xchg
and
cltd
imul
aaa
xor
jae
stc
mov
xchg
test
test
rolb
inc
aas
dec
cmp
imul
or
mov
cmp
ret
jo
lea
js
outsb
pop
push
daa
leave
cmpsb
loop
jne
dec
mov
scas
mov
sbb
roll
add
out
pop
xor
sahf
lea
ficomps
xlat
sbb
push
mov
divl
jge
fiadds
adc
fstpl
lods
push
push
imul
jne
inc
test
outsb
cmp
push
fmull
inc
push
ret
or
mov
sbb
fidivrs
insl
cmp
outsb
je
movsl
jg
imul
jp
push
push
lret
or
xor
fld
mov
mov
or
test
ljmp
pop
cs
aas
pop
bound
jb
or
stos
add
pop
xchg
inc
pop
shrl
sar
pop
loop
adc
or
aam
pop
fcomip
mov
xor
insb
mov
mov
test
lret
add
das
ss
push
stos
xchg
ret
lcall
popa
cmp
js
fs
lcall
dec
mov
popa
fwait
clc
ret
xchg
and
push
adc
mov
repnz
cmp
loopne
mov
mov
lea
mov
int
mov
sub
push
xchg
orl
push
cld
jmp
mov
inc
imul
and
sbb
stos
pop
lods
cs
loop
inc
cmp
bound
out
jmp
xchg
mov
xchg
rclb
mov
or
aas
mov
dec
cltd
add
pop
sbb
movsl
sbb
inc
mov
subb
pop
mov
jp
jge
pop
adc
fiaddl
in
jmp
fcomi
arpl
stos
lds
fwait
testl
nop
jns
and
movsb
inc
lahf
iret
or
push
pop
fisubs
iret
test
cmp
shll
mov
das
mov
push
push
pop
out
jmp
pop
sbb
mull
fdivrl
mov
sub
ret
inc
inc
sbb
mov
jge
push
test
push
jne
cmpsl
pushf
loop
mov
mov
je
leave
outsb
adc
dec
dec
in
scas
cmp
cli
cmc
sub
sub
dec
sub
mov
xchg
cltd
inc
in
fsincos
int
push
fdivrs
pop
iret
or
iret
test
mov
aad
scas
in
bound
cwtl
and
pop
arpl
pop
adc
adc
jno
cltd
add
pop
adcb
add
lods
cmp
shrl
mov
aaa
dec
xor
xchg
aad
push
imul
mov
pop
ret
pop
dec
xchg
and
fldl
sub
inc
aas
adc
add
or
out
pushf
mov
sbb
mov
cmpsb
pop
xlat
loop
or
sub
jl
xor
pop
xchg
jae
in
shll
and
sub
mov
mov
shl
mov
pusha
sbb
rcrb
je
les
shlb
imul
shll
and
lods
sahf
mov
push
mov
ja
xor
lahf
orb
inc
cmp
push
or
cmc
lcall
xchg
adc
int3
add
and
cmp
fcomps
aad
jmp
pop
adc
movsl
sahf
or
cmp
xorb
mov
lds
loop
ficomps
arpl
cmpsl
mov
das
insb
div
xlat
ficoms
pop
or
pop
or
int3
inc
arpl
cmp
xchg
mov
fdivs
aad
subb
pop
scas
push
ret
pop
fbstp
add
clc
push
das
test
lock
insb
mov
jle
rolb
or
adc
sub
push
mov
add
mov
xchg
hlt
mov
xchg
mov
fdivs
push
mov
push
push
cmpsl
clc
and
mov
mov
scas
nop
les
stos
and
js
mov
lahf
inc
mov
adc
lock
push
sbbl
mov
mov
pop
jl
inc
dec
insb
loope
in
adc
sub
lds
pushf
inc
enter
dec
xchg
cltd
adc
jp
and
sub
jg
cmc
sub
and
ror
sub
sahf
jns
jmp
cwtl
push
jb
test
push
aam
sarb
dec
clc
stc
dec
pop
fwait
hlt
inc
test
mov
aaa
jae
sbb
jo
rorl
test
imul
jp
in
jmp
pop
mov
daa
jno
repz
mov
dec
cmpsl
std
loope
repnz
inc
fstpt
arpl
dec
adc
xchg
mov
iret
out
mov
jle
jbe
stc
and
pop
ss
adc
sub
xchg
fisttpl
into
pop
lret
stos
jae
movb
sbb
jns
push
lret
bound
ja
bound
xchg
addb
cmp
sub
pop
sbb
call
mov
push
push
daa
and
mov
mul
jns
bound
mov
ja
jne
int3
cmp
sbb
adc
in
adc
fldenv
int
add
fsts
aad
cmpsb
loope
adc
stc
mov
out
mov
cmpsb
sarb
sbb
jno
pushl
mov
and
icebp
mov
push
jb
testl
fisttpl
mov
popa
jp
sti
jl
nop
movsl
xor
xchg
inc
lret
sbb
hlt
fisubs
xchg
sti
pop
out
outsl
mov
stos
add
inc
scas
jne
xchg
xchg
and
add
aam
fwait
fs
and
xchg
call
pop
xchg
and
aam
mov
pop
ja
dec
sbb
sbb
pop
repnz
adc
lds
mov
push
pop
js
lods
lods
jne
call
mov
adc
xchg
xchg
lds
xchg
push
inc
cmp
or
cwtl
cmpsb
sti
lahf
xchg
ficomps
mov
pushf
mov
pop
pop
or
jmp
xlat
nop
gs
dec
std
and
popa
cmc
pusha
add
cmp
aas
mov
adc
pop
stc
in
icebp
movsl
pop
ja
addb
call
je
mov
pop
dec
mov
ja
ret
inc
pop
mov
test
adc
dec
or
jle
loope
pushf
jmp
and
pusha
and
cs
into
scas
add
pusha
cmpsb
xchg
sub
fists
or
dec
sub
pop
push
inc
push
loop
mov
aaa
jge
clc
sbb
cmp
mov
and
sbb
inc
data16
inc
mov
add
dec
cwtl
movsl
mov
and
xchg
sbb
lea
cmpsb
rcrl
cwtl
ja
push
in
js
adc
xchg
repnz
imul
cwtl
sbb
cli
xor
cmp
std
push
cs
andl
sub
or
shlb
rcll
mov
insb
dec
xor
rcll
jnp
add
mov
xchg
adc
mov
sub
xchg
jo
jmp
sbb
out
in
xchg
movsb
pop
jp
adc
fistpll
addl
pop
or
and
sarl
rcrl
js
and
aad
js
ds
iret
sbb
sub
and
test
xchg
jge
jg
out
inc
add
jmp
push
jno
loop
pop
jns
imul
adcb
int
xchg
ss
fstpl
xor
cmpsb
push
ror
adc
imul
push
mov
sbb
pop
pop
mov
into
shrl
adc
and
dec
xor
dec
sti
fisttps
pop
jne
data16
das
jecxz
or
xor
and
movsb
sbb
sub
inc
andl
loopne
into
mov
pop
cmp
outsl
xor
mov
adc
adc
int
mov
mov
jmp
adc
mov
addb
lret
or
and
jae
mov
test
out
inc
sbbl
xor
dec
outsl
pop
cmp
cmc
pop
mov
jne
mov
fcomps
popa
and
aas
push
sbb
test
fdivp
mov
sahf
jns
push
test
inc
rorb
push
pushf
xchg
cld
jg
addr16
leave
mov
xlat
mov
xchg
xchg
pusha
lods
and
ljmp
shlb
dec
add
rorl
mov
and
js
push
jb
lods
ja
mov
add
in
sub
or
pop
pop
repz
xchg
and
repz
xchg
iret
das
dec
lret
stos
addr16
in
jae
outsl
xlat
adc
jmp
lahf
scas
sbbb
aad
cs
mov
jae
ss
xchg
movsl
lods
jne
jmp
or
dec
mov
lret
pop
aam
pusha
push
fdivrs
rcll
popf
clc
jl
sbb
mov
sbb
jl
movl
inc
mov
mov
enter
test
pop
cmc
push
adc
sbb
lock
sbb
aad
test
add
negb
movsl
subl
ror
add
mov
js
aas
mov
dec
ja
icebp
xor
sbb
mov
or
xor
or
xchg
or
cmpsl
mov
adc
jecxz
stos
popf
cmpsb
cmp
outsl
pop
addr16
sub
stos
pop
pop
out
mov
mov
jne
fmuls
nop
mov
push
dec
inc
ret
stc
pop
pop
subl
mov
xchg
jb
push
cmp
pop
sub
sahf
aam
sub
jo
sbb
jbe
rcl
push
rclb
cmp
lahf
dec
outsb
sbb
dec
or
call
icebp
aam
or
fucomp
fimuls
hlt
int3
add
sbb
mov
insl
mov
cmc
call
and
ja
getsec
adc
out
push
jbe
dec
cs
add
xchg
xor
cmc
jne
push
mov
frstor
addr16
mov
cltd
mov
popa
mov
mov
out
add
adc
stc
popa
cwtl
push
add
add
pop
sub
bound
into
pop
sbb
mov
in
je
mov
inc
cmc
fsts
jno
cmp
fists
jns,pt
test
out
jne
mov
cmp
xor
mov
push
and
push
vmread
mov
mov
clc
scas
jno
cmp
inc
add
add
xchg
mov
pop
mov
int
pop
jnp
xchg
pop
mov
push
cld
fimuls
mov
rolb
jae
mov
lret
jnp
pushf
mov
repz
jae
adcb
outsb
mov
adc
dec
out
in
xchg
adc
xchg
xchg
push
dec
daa
jnp
or
sub
imul
testb
sub
cmc
xor
push
cmp
int3
js
push
clc
jbe
ret
push
xchg
mov
mov
mov
lcall
xchg
testl
inc
sbb
test
sub
js
dec
out
xchg
bnd
in
and
or
push
push
xchg
mov
in
icebp
es
dec
fsts
std
and
test
pop
push
insl
cmp
sub
lret
fsubs
adc
rol
add
sub
mov
flds
add
in
popa
ret
jp
insl
mov
mov
cmp
mov
jae
or
xchg
imul
pop
mov
push
sahf
push
adc
sbb
call
hlt
sub
sarl
cltd
enter
cli
or
jecxz
xchg
mov
cmp
cwtl
push
stos
mov
movsb
adc
ljmp
es
cmp
jns
fwait
mov
call
pop
or
pop
nop
push
push
addl
sti
add
push
loopne
insb
mov
pop
xchg
test
aaa
lock
ja
cmp
mov
test
mov
fisubl
xlat
mov
xchg
movsb
movsl
out
call
repnz
insl
push
cs
xchg
aas
inc
or
xlat
mov
jg
or
das
push
sbb
sbbb
leave
mul
sbb
fcmovnbe
out
imull
dec
or
add
pop
inc
push
pop
xor
xor
push
movsb
xchg
mov
xchg
pop
sub
cmp
jecxz
mov
int3
sbb
aas
push
and
jb
inc
jbe
das
or
and
xor
xor
sub
sbb
ljmp
pushf
sbb
fs
xchg
cmp
cmc
dec
mov
movsb
jl
push
cmp
jge
push
aaa
inc
test
rolb
mov
fidivrs
xor
mov
fcom
bound
jbe
in
cwtl
push
add
add
cmp
inc
scas
sbb
mov
cmp
icebp
jl
idivl
push
out
ret
addr16
xor
int
loopne
cwtl
ficoms
sub
lcall
pusha
in
mov
ret
lahf
popf
scas
dec
leave
lods
int
jnp
jle
mov
jne
sub
push
scas
lret
xchg
jle
xchg
adc
sub
repnz
pusha
mov
cmp
dec
ss
dec
rcr
cmpsl
and
fcomps
mov
das
sub
mov
scas
lahf
jge
dec
cs
shl
lret
lret
push
xchg
pop
stos
cmpsb
sub
fcoml
divb
xor
loope
push
push
inc
push
or
and
adc
fbld
daa
xor
lea
push
xchg
pop
sarb
aas
adc
les
xchg
ret
lock
xlat
int
leave
xchg
ficoml
mov
mov
leave
sub
push
mov
or
add
xorb
sbb
pushf
imul
mov
movl
or
xor
int
pop
or
xchg
test
dec
mov
adc
inc
adc
out
jne
fwait
data16
push
js
add
notl
rcll
rolb
out
push
mov
cld
mov
bound
push
pop
jle
cmpxchg
imul
lods
aam
mov
jg
fists
mov
xor
fidivrs
push
inc
pop
test
xchg
into
adc
xlat
movsb
mov
and
ss
scas
scas
imul
ret
pop
push
cmp
mov
add
mov
mov
mov
and
xchg
inc
aas
aam
mov
jne
push
clc
xchg
rcll
push
xor
orl
and
xchg
mov
sbb
jnp
stos
cmp
push
cmpb
subl
lods
daa
add
mov
mov
mov
pop
xchg
mov
jmp
shlb
jns
xchg
lret
or
sbb
aad
faddl
test
cmp
div
into
or
xchg
inc
iret
popf
sbb
jg
icebp
xchg
sbb
fwait
sub
loop
adc
jmp
push
lahf
fwait
xchg
inc
xor
jmp
push
pop
lret
pop
push
rcl
mov
adc
clc
and
jns
jmp
fcmovnb
decb
negb
es
push
iret
adc
jbe
std
cwtl
xor
jae
pop
daa
adc
dec
push
dec
cmp
adc
out
and
fs
jmp
and
scas
adc
cli
mov
adc
imul
call
sbb
loopne
rolb
xor
idivb
shlb
jne
and
scas
fdivs
pop
mov
ds
pop
add
pop
stc
pop
mov
fsubl
add
repnz
enter
rclb
pop
jp
xor
add
sub
jne
pop
repz
sbb
push
imul
movsl
sarl
lods
add
repz
mov
ljmp
inc
adc
or
ss
jnp
inc
cmp
imul
xor
lds
mov
mov
dec
fsubrl
call
data16
pop
mov
leave
lret
shrb
jo
leave
lods
xchg
or
lcall
notb
sbb
inc
mov
loope
and
shrl
push
mov
fistpll
add
iret
andnps
lret
jp
movsl
and
xchg
pop
jge
push
jmp
push
sbb
out
push
aaa
pushf
push
ljmp
nopl
sarl
stos
mov
loope
lahf
cmc
shr
xchg
mov
testl
push
mov
into
and
repnz
shl
push
or
lret
fs
inc
xor
loop
ret
cld
push
push
mov
inc
std
adcb
lods
push
sub
cmpsb
incl
movsl
dec
data16
jecxz
insl
mov
xchg
pop
inc
xchg
mov
fwait
cwtl
adc
add
loope
int
inc
in
fldpi
pusha
sbb
scas
mov
push
enter
xor
cmpsl
xchg
mov
sti
sarb
sub
and
xor
push
xchg
add
mov
sbb
xor
xlat
arpl
in
push
negb
out
pop
aam
xor
sbb
xchg
cltd
jl
cs
mov
mov
jmp
mov
movsb
je
mov
imul
sti
pushf
adc
mov
push
adc
lods
das
push
sub
daa
es
pop
and
add
sbb
jg
jl
shr
stos
xchg
into
xor
nopl
dec
lret
cmp
dec
aas
cmp
adc
push
jl
inc
imul
lret
xchg
and
aam
movsl
mov
mov
or
cli
hlt
test
mov
cwtl
mov
jl
pop
jmp
sbb
add
cmp
mov
clc
xor
cmp
mov
and
add
jns
xchg
in
iret
mov
jg
mov
cltd
imul
int
mov
cli
jb
aam
ret
addr16
jmp
and
mov
ja
stos
lods
adc
movsb
fwait
inc
pop
std
adc
call
pop
dec
mov
sub
or
je
and
pop
xchg
out
std
test
das
push
xor
mov
push
clc
ret
rorl
inc
cmp
imul
add
or
js
mov
shrl
xchg
push
movsl
mov
jo
inc
xchg
cld
add
in
cwtl
in
pop
push
adc
pop
add
mov
pop
mov
mov
adc
add
rcrb
fs
xchg
nop
cmp
scas
mov
stc
sbb
pop
sbb
sbb
clc
sbb
pop
bnd
in
pop
dec
hlt
mov
dec
mov
sbb
and
pop
pop
pop
cmpsb
nop
rolb
aam
scas
rorb
jne
pusha
stos
jne
add
add
dec
add
fwait
xor
ret
mov
rolb
push
je
fldt
ja
out
mov
adc
ret
xor
repz
gs
mov
mov
fwait
movsl
xorl
loope
dec
sbb
dec
in
xchg
add
push
lea
or
and
lcall
in
jnp
loop
dec
push
movsb
es
mov
push
flds
rclb
int3
ficoms
sub
mov
and
cmp
mov
repz
fildll
loopne
sbb
loop
xchg
jle
xor
adcl
leave
dec
pop
cmp
stc
addr16
or
adc
dec
scas
push
inc
cmp
leave
mulb
dec
cmpxchg
mov
fisubrs
xor
sti
xlat
inc
aam
add
or
imul
aad
ja
rdpmc
mov
mov
jnp
testb
mov
adc
or
jno
mov
pop
enter
pop
jbe
out
fidivl
cmovno
je
int
inc
dec
push
ljmp
enter
lret
and
xor
ja
push
fcoms
jb
inc
pop
sbb
dec
andl
push
outsb
ret
movsb
out
sub
call
jae
jl
imul
mov
jmp
mov
movsb
or
cld
cmp
ljmp
adc
movq
subb
sub
xchg
mov
mov
test
ja
mov
rorb
adc
dec
mov
sbb
in
mov
xlat
jne
sub
js
push
or
sarb
push
mov
add
je
icebp
in
movsl
and
test
adc
cmc
mov
sub
adc
enter
icebp
add
gs
mov
int
xor
push
or
pop
cmp
sti
xor
jnp
or
add
lock
push
test
pop
xchg
call
and
cs
and
mov
push
push
inc
test
aaa
add
xor
push
es
cli
inc
outsl
lods
inc
lods
rorl
jl
fldenv
inc
and
xchg
clc
test
mov
add
push
clc
outsb
push
in
mov
dec
xchg
ret
mov
mov
ja
je
ljmp
lahf
outsb
mov
cmp
out
data16
inc
test
push
btc
xchg
adc
fcomps
sub
add
jns
clc
jno
out
sub
pop
jne
xchg
cmp
inc
xor
loop
xchg
stc
cmpsb
xor
pop
inc
loope
xor
xor
push
dec
insl
lea
push
shlb
lret
sbb
push
pop
jnp
outsl
lods
in
ds
scas
setae
push
and
aad
enter
inc
jecxz
es
imul
sbb
arpl
je
and
in
mov
jae
pop
sbb
lahf
out
inc
dec
mov
in
lds
push
push
bound
inc
add
out
push
rcl
sub
and
inc
rcll
mov
inc
loop
add
std
pop
xor
jo
xlat
jp
xchg
rcrl
and
mov
lcall
push
mov
rolb
dec
jb
cmp
dec
inc
nop
add
cwtl
scas
xchg
les
mov
outsl
test
inc
adc
fwait
xor
js
or
cmp
cmp
xor
inc
mov
pop
lahf
inc
lcall
pop
ret
adc
aas
out
or
js
add
jno
sbb
pop
add
sbb
mov
or
pop
dec
leave
stos
dec
scas
enter
or
push
in
clc
xor
daa
roll
sti
xchg
roll
dec
enter
adc
cmp
mov
add
out
sbb
dec
jmp
jo
fisttps
imul
jae
pusha
shrl
imul
testl
int
rclb
sbb
mov
movsb
dec
aam
jle
in
lods
or
jo
add
in
dec
adc
mov
ds
pop
call
xchg
jne
dec
fstl
or
or
add
fnstsw
xor
faddl
dec
jmp
and
jno
mov
rolb
dec
bound
pop
out
pop
lahf
outsb
push
inc
mov
loopne
imul
imul
cmp
pop
pusha
insl
rcl
jbe
aam
xor
dec
jmp
cmpsl
lret
lahf
push
pop
lret
sahf
bndstx
aaa
fwait
cmp
mov
jg
adc
bound
sub
les
jbe
std
pop
pushf
int
fldt
cmpsl
fucomp
cmp
jp
fwait
or
and
gs
sti
fiadds
rorl
mov
out
call
push
clc
pop
dec
mov
and
repz
insb
inc
fdivrl
push
push
jae
sarb
xchg
daa
mov
mov
or
pop
cwtl
lock
lret
fdivrs
pop
jnp
sarb
movsb
in
mov
push
jle
push
int3
dec
mov
repnz
leave
xchg
sarb
jae
xchg
sbb
mov
inc
xor
jno
outsl
mov
cmp
mov
sub
inc
push
cmp
repz
mov
nop
cmpsb
xchg
inc
xor
dec
jb
fcomps
cmpsl
push
cs
inc
dec
mov
jmp
daa
push
mov
dec
add
outsl
inc
and
lods
adc
adc
pop
cltd
mov
jle
mov
arpl
iret
ja
sbb
hlt
mov
sahf
dec
jecxz
test
pop
leave
icebp
jne
or
test
xor
or
gs
mov
sub
lea
jl
loope
shrl
xor
movl
loopne
lea
xor
jle
sbb
cmpsl
sbb
test
sub
mov
fnstenv
cmpsl
addb
outsl
push
jecxz
pushf
outsl
les
lods
out
cmc
cmp
arpl
stos
or
add
pusha
pop
data16
rcrl
insl
lret
dec
or
rcrl
and
inc
clc
in
das
into
push
pop
stos
fisubrs
push
mov
je
out
stos
inc
fcomip
sbb
push
shll
xor
cmp
fsubs
dec
mov
xchg
insb
shll
dec
sbb
sub
dec
xchg
lcall
frstor
enter
std
lea
fstl
fadd
cmp
jl
orb
adc
cmp
xorb
pop
jnp
or
loope
pop
gs
mov
mov
or
dec
in
and
adc
xchg
jp
add
call
in
push
mov
mov
xchg
sbb
inc
mov
push
lcall
loop
addb
inc
mov
outsb
nop
sti
lods
push
icebp
lds
fbld
in
out
jb
xchg
cmp
fwait
cmp
ja
shl
jge
adc
sbb
std
dec
xchg
fcompl
into
sbb
call
nop
in
sub
sbb
pop
sbb
fwait
out
cmp
pop
jge
sti
bound
or
outsl
stos
sub
aas
jbe
jbe
mov
js
or
hlt
add
mov
pop
call
push
lret
and
sbbb
dec
out
cmp
inc
sbb
push
cmp
into
repz
aad
sbb
dec
inc
and
push
mov
xor
stos
repz
in
arpl
and
mov
xor
mov
mov
jno
jge
jle
cmp
xchg
push
adc
pop
mov
jno
repz
and
out
addr16
ja
xor
lahf
cmpsb
lds
mov
and
sti
and
adc
sbb
push
aad
and
outsb
or
test
ret
sbbl
adc
jb
sub
or
dec
lahf
mov
sub
aaa
aas
lock
fmuls
rclb
pop
fmull
xlat
test
add
fcmovnbe
pop
or
lods
out
cmp
in
scas
push
and
test
ficomps
sbb
xchg
jns
je
dec
fnstsw
sbbl
mov
add
cmp
xor
std
xor
mov
jns
ffree
xchg
dec
jb
mov
arpl
xchg
xor
pop
pop
jb
into
and
clc
mov
pusha
mov
int
xchg
pop
pusha
ja
aaa
dec
outsb
mov
bound
adc
push
fisttpll
dec
cs
pop
pusha
cmpsb
jne
outsb
imul
jae
out
or
sub
imul
mov
cmpsb
movsb
movsl
sbbb
pop
in
cmp
push
std
popa
sbb
or
out
and
fildll
lcall
xor
shll
pop
ret
sahf
mov
sub
dec
jno
mov
or
adc
into
jmp
pop
cvttps2pi
ljmp
shrl
pop
outsl
mov
pop
mov
xchg
sub
xchg
insl
test
push
out
stc
cmpsl
jo
ds
pusha
dec
js
bound
fwait
and
dec
xor
pusha
add
push
or
xchg
or
sbbb
pop
loopne
xor
push
xlat
sti
repz
push
jmp
push
in
aas
dec
mov
test
cmc
xchg
adc
ja
imul
test
push
movsb
cmp
push
fbstp
sub
xor
push
ss
out
mov
dec
cmp
jnp
mov
ljmp
cmp
xor
pop
dec
dec
xchg
cmc
repz
sub
popf
int3
push
insl
push
mov
loop
mov
leave
mov
sub
nop
adc
pop
mov
mov
jnp
pop
lcall
loopne
cmp
sbb
mov
xchg
js
js
pop
xlat
stc
pop
loop
xchg
inc
cs
outsb
gs
inc
or
js
les
xchg
mov
pusha
je
xor
mov
fmull
or
and
sub
outsl
ret
add
add
sub
or
je
mov
fbld
push
xor
cmp
inc
pop
mov
test
inc
push
mov
fcmovbe
std
je
cmp
sbb
xchg
pop
repnz
xor
inc
lods
push
adc
and
jnp
dec
mov
lret
mov
out
xchg
iret
inc
sbb
xchg
cmp
lret
fcomps
call
mov
inc
pop
out
pop
stos
sub
xor
int3
and
movsl
enter
or
leave
push
mov
std
ficoms
push
and
ja
cmc
jmp
add
imul
mov
push
xchg
dec
and
mov
jecxz
or
jmp
in
adc
inc
push
imul
jae
loop
adcb
cmp
or
jp
shll
and
test
or
andb
adc
adc
in
add
pop
ds
jnp
test
cmp
mov
or
and
sbbb
mov
repz
ds
push
mov
mov
gs
xchg
mov
mov
imul
imul
rcrl
push
mov
push
xchg
mov
xchg
pop
xchg
xor
int
pop
jl
sti
sti
das
jnp
and
lds
dec
cs
jns
mov
lds
cmpb
sbb
xor
jns
call
pushf
add
pop
cld
pusha
add
fstpt
nop
test
xchg
fwait
xor
int3
mov
jmp
cmp
loope
mov
fcompl
orl
aas
jmp
add
dec
or
dec
fisubrl
mov
call
cmpsl
popa
mov
xchg
inc
out
lcall
out
mov
lea
movsb
bnd
pushl
mov
outsl
or
xor
push
pop
cli
jnp
push
cmp
in
idiv
outsb
dec
sbb
pop
mov
gs
xchg
int3
and
repz
pop
adc
inc
or
subb
rorb
jbe
cltd
sar
xchg
pushl
lds
test
pusha
cmp
movsb
pop
jp
das
lret
mov
call
es
cld
xchg
stc
jg
sbb
test
iret
lea
jmp
test
dec
lods
test
nop
es
xchg
xchg
out
pop
pop
lods
and
fbld
cmp
fsubrs
outsl
mov
dec
mov
dec
sti
movsl
insb
sub
aaa
mov
or
icebp
push
inc
xchg
xchg
mov
call
or
push
inc
cmp
xchg
repz
sub
shlb
jge
mov
les
hlt
out
movsl
out
pop
xchg
dec
mov
movsb
sub
adc
sahf
addr16
scas
push
aad
jecxz
fcoms
pop
lahf
mov
xchg
aas
cld
mov
sbb
cmc
rcll
in
cmp
pusha
pop
cmc
mov
cltd
hlt
in
aaa
sbb
fs
dec
out
dec
sub
jge
cmp
mov
jbe
imul
imul
push
call
loope
inc
adcb
inc
push
popa
clc
cmp
jno
and
lea
jp
add
imul
sbbl
dec
subl
sub
pop
stos
xorl
ret
popf
and
lods
popf
push
push
leave
jecxz
or
cld
dec
pop
mov
adc
dec
andl
mov
cmpxchg
push
dec
imul
push
mov
fnsave
push
and
jb
cmp
lahf
int3
jnp
mov
mov
or
cmp
sti
jg
in
adc
sbb
fisttpl
push
cmp
fcmovbe
pop
jp
popa
mov
and
push
out
jecxz
iret
ds
pop
mov
xchg
cwtl
int
outsl
stos
popa
mov
mov
jns
mov
loop
sbb
adc
nop
mov
lods
rcrb
stc
test
js
push
cli
aam
insb
adc
subb
pushf
add
cmp
pop
jne
push
lods
dec
ret
sub
or
cmpsb
cmp
ja
push
inc
stos
add
adcl
popa
xor
stos
mov
imul
icebp
add
movsl
movsb
push
cmp
mov
and
adc
or
je
ja
aam
fs
adc
les
jno
inc
xor
mov
push
jl
sahf
insl
enter
or
mov
aam
pop
jecxz
incb
into
push
notl
dec
push
mov
leave
cmpl
in
jns
enter
lcall
xor
mov
jbe
lods
and
xchg
mov
pop
inc
push
cmp
movsb
adc
push
push
testb
pop
mov
inc
aas
idiv
hlt
push
push
cmp
cmp
and
sbbb
scas
rcll
cmpsb
bound
imul
test
mov
xlat
add
add
add
test
add
add
add
add
xor
aas
push
dec
inc
xor
and
insb
je
aaa
xor
xor
and
sub
dec
inc
push
push
add
popa
xor
xor
inc
and
xor
xor
outsb
cmp
inc
js
push
dec
arpl
push
insl
jne
push
xor
ss
and
xor
addr16
xor
popa
add
sub
cmp
dec
xor
and
dec
popa
xor
jbe
xor
outsb
jbe
outsb
push
xor
xor
xor
and
pop
imul
push
add
add
shll
add
cmp
pop
add
add
add
add
add
and
add
and
add
add
mov
add
idivl
add
shrl
je
add
subl
add
insl
add
jno
add
cmp
add
mov
cmp
add
cmp
add
pop
add
pop
add
and
add
and
add
and
add
and
add
pop
add
pop
add
and
add
add
add
add
add
add
add
add
add
add
add
dec
pop
jbe
jno
jns
cs
add
dec
inc
inc
jp
insb
push
pop
pop
jo
pop
jp
jne
inc
pop
inc
push
inc
pop
push
inc
dec
inc
pop
add
inc
pop
dec
jo
pop
pop
jno
pop
push
inc
pop
inc
push
inc
pop
dec
dec
inc
pop
add
jbe
jb
insl
outsl
pop
gs
outsl
addr16
insb
pop
push
inc
dec
pop
dec
inc
inc
pop
inc
dec
push
inc
inc
inc
pop
add
pop
push
inc
je
jno
je
inc
pop
inc
dec
dec
inc
pop
add
jb
jae
dec
pop
push
inc
pop
pop
dec
dec
push
dec
inc
inc
pop
inc
pop
dec
push
inc
inc
dec
inc
pop
add
push
push
push
inc
inc
dec
inc
dec
outsl
pop
pop
pop
imul
push
push
pop
inc
inc
pop
inc
pop
inc
dec
inc
pop
add
imul
inc
dec
dec
inc
dec
pop
pop
inc
push
pop
dec
inc
inc
pop
inc
dec
inc
inc
pop
add
inc
pop
push
inc
outsb
pop
fs
je
pop
inc
inc
pop
inc
inc
push
inc
inc
inc
pop
add
jne
push
pop
dec
dec
dec
dec
imul
dec
dec
gs
inc
inc
pop
inc
dec
push
inc
dec
inc
inc
pop
add
arpl
push
inc
dec
jo
fs
push
pop
dec
pop
dec
dec
jns
inc
push
inc
inc
pop
inc
push
inc
pop
push
inc
dec
inc
pop
add
dec
push
push
push
dec
push
push
inc
inc
dec
outsl
data16
inc
pop
inc
push
inc
dec
push
inc
dec
inc
pop
add
jo
inc
dec
inc
dec
dec
push
inc
inc
inc
push
push
pop
inc
inc
pop
inc
inc
push
inc
dec
inc
pop
add
dec
dec
pop
dec
inc
dec
inc
push
je
ja
push
dec
pop
push
pop
dec
inc
inc
pop
inc
inc
dec
inc
pop
add
dec
cmp
arpl
js
pop
add
pop
add
adc
add
add
add
add
xchg
xor
add
add
mov
add
add
add
add
pop
add
adc
add
xor
add
pop
add
add
or
pop
add
adc
add
xor
add
xor
add
xor
add
pop
add
pop
add
pop
add
add
add
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
pop
add
pop
add
xor
add
pop
add
pop
add
pop
add
add
add
add
pop
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
pop
add
add
add
pop
add
add
add
add
push
gs
arpl
push
arpl
sub
jb
popa
je
inc
dec
inc
imul
push
push
imul
add
inc
dec
inc
imul
insl
bound
gs
outsb
add
gs
push
arpl
gs
imul
inc
js
inc
js
add
dec
xor
cs
insb
add
add
imul
add
gs
add
fs
insb
cs
insb
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
lds
insb
jae
jb
insl
jo
push
add
add
je
jb
outsl
arpl
fs
js
push
inc
fs
sub
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
je
jb
arpl
jae
enter
outsl
bound
push
outsb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
outsl
arpl
push
imul
insb
outsl
bound
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fldl
dec
outsl
popa
fs
outsb
jne
add
inc
insb
addr16
je
insl
dec
outsb
je
mov
inc
jb
ja
je
je
inc
add
cltd
pop
dec
outsb
push
outsb
fs
gs
popa
addr16
js
stos
push
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
lret
pop
dec
outsl
popa
fs
imul
push
inc
gs
imul
outsl
arpl
add
push
arpl
jo
jns
add
pop
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
inc
gs
gs
popa
addr16
outsl
jae
add
inc
jne
jae
jb
outsl
jae
add
or
outsb
inc
gs
je
jo
add
stc
push
inc
gs
insb
imul
je
inc
push
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
push
push
inc
push
xor
cs
insb
add
pop
add
je
dec
popa
imul
gs
jns
add
push
jo
inc
add
dec
push
inc
push
dec
cs
insb
add
add
add
add
add
add
and
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pusha
add
addb
add
js
add
add
add
add
add
add
add
enter
nop
add
or
add
test
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
inc
pop
add
add
add
add
mov
pop
add
add
add
add
add
add
push
pop
add
add
in
add
add
add
adcb
add
add
add
add
add
add
add
add
add
add
sbb
add
add
and
add
and
jge
jl
and
mov
aam
dec
cwtl
and
mov
aam
and
clc
or
mov
aam
jne
fs
mov
aam
and
mov
aam
and
inc
and
mov
add
mov
aam
dec
adc
sbb
sub
aam
and
mov
aam
and
or
mov
aam
fdiv
push
fsubrs
add
aam
and
fs
cmp
and
mov
aam
and
or
mov
aam
and
mov
sub
mov
aam
and
mov
aam
and
fbld
mov
mov
aam
shl
movsl
or
outsl
add
and
mov
aam
and
insl
and
mov
aam
and
mov
clc
and
pop
imul
and
adc
repz
mov
aam
and
mov
sbb
and
mov
add
mov
aam
and
mov
pop
in
aam
and
pop
and
mov
aam
or
mov
aam
and
mov
aam
and
and
mov
aam
and
mov
aam
and
and
mov
aam
and
mov
aam
and
mov
aam
and
mov
aam
and
mov
clc
loop
aam
and
mov
aam
and
and
fcoms
in
decb
fcmovbe
mov
aam
add
fildl
and
aaa
and
mov
aam
and
mov
aam
and
mov
or
and
mov
aam
jb
bound
cmp
frstor
aam
and
mov
aam
sti
lret
aam
and
and
call
aam
cvtpi2ps
and
mov
aam
and
mov
aam
and
mov
aam
and
mov
aam
and
mov
aam
nop
push
sub
aam
and
mov
dec
dec
add
and
mov
aam
and
mov
aam
sbb
andb
and
mov
aam
and
mov
aam
and
mov
aam
and
mov
push
lds
mov
aam
pop
xor
add
adc
aam
and
mov
aam
and
mov
aam
jmp
xchg
mov
adc
and
mov
aam
and
mov
aam
and
scas
and
mov
aam
and
mov
add
lahf
pop
and
mov
aam
and
je
aam
fstl
jecxz
push
and
mov
aam
and
mov
movsl
ja
aam
and
mov
aam
and
mov
aam
and
mov
aam
pop
pop
fiaddl
add
xor
mov
aam
and
mov
aam
xchg
and
mov
aam
and
mov
aam
movsb
pusha
mov
test
mov
fcmove
and
mov
aam
and
mov
repz
add
and
mov
aam
and
fldenv
mov
aam
and
mov
sbb
aam
js
push
stos
jle
and
mov
aam
add
mov
aam
and
inc
pop
and
mov
mov
aam
and
mov
aam
and
mov
aam
inc
or
and
mov
aam
int
imul
and
fsubl
andb
ljmp
and
jnp
xchg
cld
add
loopne
push
and
mov
aam
and
mov
aam
mov
ret
mov
aam
and
mov
adc
jle
and
mov
aam
push
or
and
push
and
mov
push
xchg
lret
scas
inc
add
and
mov
mov
out
enter
pop
and
mov
aam
and
mov
repz
and
mov
aam
and
inc
and
mov
push
xor
mov
aam
and
mov
aam
and
and
mov
hlt
movsb
and
mov
aam
mov
mov
aam
and
push
and
std
and
mov
hlt
sub
aam
addb
xchg
dec
and
mov
aam
jge
and
mov
add
mov
aam
dec
clc
stos
push
dec
or
mov
aam
dec
ret
mov
aam
scas
adc
and
mov
aam
and
mov
aam
and
mov
pop
scas
fcmove
push
cmp
and
mov
aam
add
and
mov
xchg
add
mov
mov
and
mov
aam
and
fsubl
mov
aam
mov
ss
mov
aam
and
mov
aam
in
adc
lock
mov
aam
and
mov
aam
jns
pop
test
in
and
mov
aam
data16
adc
mov
aam
and
mov
cs
and
xor
mov
sub
and
mov
aam
add
and
mov
aam
and
mov
aam
and
mov
aam
and
mov
aam
sahf
mov
aam
and
mov
aam
and
js
aam
and
mov
aam
and
mov
add
sbb
mov
aam
and
mov
aam
push
enter
mov
aam
fcomps
and
mov
pop
xchg
icebp
and
and
mov
aam
mov
add
cmp
aam
out
jmp
add
mov
lret
and
aam
mov
outsl
and
mov
aam
sbb
aam
and
push
and
mov
test
mov
and
push
iret
and
mov
dec
xchg
mov
add
mov
aam
and
mov
aam
push
mov
aam
sahf
das
test
mov
enter
fldenv
mov
jae
push
inc
cmp
mov
aam
and
mov
aam
and
mov
add
mov
mov
and
mov
aam
and
mov
aam
and
mov
aam
and
and
fs
and
mov
aam
and
mov
aam
and
mov
aam
and
and
mov
aam
and
mov
aam
and
pop
mov
fisubl
mov
jg
and
mov
add
aam
adc
and
mov
movsl
loope
aam
and
mov
aam
and
pop
cmc
faddl
add
add
pushl
add
add
pop
insb
add
push
call
add
das
loopne
add
push
add
add
add
add
add
add
add
add
add
add
add
push
add
adc
adc
adc
adc
add
addr16
outsl
cltd
lahf
int
das
push
mov
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sahf
pop
fcoms
xor
adc
adc
adc
adc
adc
ja
mov
xor
adc
loop
cmp
xor
adc
adc
adc
adc
sub
and
mov
xor
arpl
std
sarl
inc
js
test
xor
adc
xchg
adc
inc
adc
adc
test
outsl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
out
rcr
call
push
adc
adc
sub
xor
adc
adc
adc
adc
cmpsl
out
adc
xor
repnz
adc
adc
adc
out
dec
adc
adc
adc
adc
adc
adc
adc
test
mov
xor
jo
and
xor
add
inc
adc
adc
adc
adc
inc
cmp
adc
adc
adc
mov
xor
xor
mov
inc
adc
ss
jb
xor
adc
adc
cli
mov
adc
adc
adc
adc
jbe
push
mov
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jl
dec
adc
adc
adc
adc
adc
cli
shrb
adc
adc
adc
adc
adc
adc
adc
leave
int3
cmp
xchg
out
insb
push
dec
adc
adc
adc
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
add
xor
adc
adc
adc
or
adc
movsb
inc
or
xor
adc
adc
adc
xor
push
adc
adc
adc
pop
sub
xor
mov
aas
popa
mov
adc
adc
adc
adc
adc
test
adc
adc
pop
mov
adc
adc
adc
adc
adc
adc
adc
adc
cmp
add
add
xor
adc
adc
adc
adc
adc
adc
adc
movsl
mov
adc
adc
adc
adc
fsubrp
or
xor
adc
adc
adc
adc
leave
outsl
nop
adc
pop
jecxz
adc
adc
adc
adc
adc
adc
negb
lods
adc
adc
adc
adc
adc
ljmp
xor
adc
bnd
or
adc
adc
adc
adc
adc
notb
adc
adc
adc
dec
ret
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
aas
push
adc
push
ljmp
inc
adc
and
inc
fsubrs
rorl
inc
adc
adc
pushf
rcll
xor
adc
adc
adc
adc
adc
adc
adc
adc
lret
adc
adc
adc
adc
sbb
aas
fimull
adc
adc
adc
adc
adc
inc
test
xor
adc
jecxz
outsb
adc
fimuls
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
mov
adc
mov
sub
xor
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
or
adc
adc
xor
cmp
xor
adc
adc
adc
adc
adc
test
adc
adc
adc
adc
adc
adc
into
xor
adc
cmpsb
repz
and
adc
adc
fists
adc
adc
das
sub
xor
adc
adc
adc
push
mov
adc
adc
jle
pop
mov
adc
xor
adc
adc
adc
adc
adc
adc
mov
loope
mov
and
cwtl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xor
push
daa
mov
adc
push
add
add
adc
adc
adc
adc
mov
inc
adc
adc
adc
adc
adc
adc
xchg
popf
daa
adc
adc
adc
adc
adc
adc
adc
out
inc
pop
adc
adc
xchg
int
adc
inc
ret
and
das
pushf
jle
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
sbb
xor
sarb
xor
adc
pushf
mov
adc
adc
test
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
fists
xor
adc
cmp
and
xor
add
notb
xor
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
bound
adc
repz
iret
pop
loop
in
adc
iret
add
xor
adc
adc
adc
adc
adc
movsl
xlat
and
adc
adc
adc
adc
adc
adc
adc
loopne
lds
divb
adc
adc
repz
adc
adc
adc
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmc
add
xor
adc
adc
adc
sbb
adc
adc
push
inc
adc
xor
adc
imul
xor
shll
mov
inc
adc
push
fimull
inc
adc
adc
rorb
mov
int
xor
adc
out
test
xor
adc
add
jnp
add
mov
add
mov
add
or
add
jle
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jo
call
pop
call
pop
call
pop
call
pop
call
or
pop
call
pop
call
xor
call
pop
call
pop
call
pop
call
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
in
inc
lods
jns
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
add
jp
in
inc
clc
in
inc
clc
in
inc
adc
mov
in
inc
clc
in
inc
pop
jae
clc
in
inc
clc
in
inc
clc
in
inc
subb
mov
nop
mov
dec
repz
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
fsubl
sar
inc
clc
in
inc
clc
in
inc
clc
in
inc
insb
cltd
push
clc
in
inc
loop
test
in
inc
clc
in
inc
pop
call
dec
dec
clc
in
inc
es
clc
in
inc
jle
sbb
adc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
add
push
add
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
fisttpl
fwait
clc
in
inc
clc
in
inc
clc
in
inc
fmul
and
clc
in
inc
clc
in
inc
clc
in
inc
mov
test
cmpsb
mov
in
inc
imull
clc
in
inc
cmp
clc
in
inc
mov
out
adc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
sbb
inc
clc
in
inc
clc
in
inc
clc
in
inc
inc
cmp
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
push
lahf
cmp
inc
clc
in
inc
clc
in
inc
or
lods
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
push
adc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
shrb
clc
in
inc
shrl
clc
in
inc
clc
in
inc
add
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
mov
inc
clc
in
inc
push
dec
xlat
clc
in
inc
clc
in
inc
clc
in
inc
cmc
push
cmp
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
into
push
or
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
push
jle
clc
in
inc
clc
in
inc
and
scas
ret
inc
inc
and
clc
in
inc
leave
push
sbb
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
mov
jg
push
cld
clc
in
inc
sub
clc
in
inc
clc
in
inc
clc
in
inc
clc
in
inc
push
inc
add
add
sbb
add
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
popa
cmp
jns
jg
test
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
arpl
push
jg
test
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
je
stos
cmp
lret
cmp
icebp
cmp
sub
xor
cmp
push
ds
ds
jb,pt
cmpb
ds
sarl
jecxz
ljmp
aas
pop
aas
or
aas
mov
mov
add
inc
add
mov
xor
sbb
xor
arpl
jo
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
dec
xor
push
xor
insb
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
pop
xor
xor
xor
xor
xor
xor
cmp
inc
xor
pop
xor
test
xchg
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
mov
xor
fidivs
hlt
xor
addr16
mov
sahf
out
sub
popa
aaa
gs
mov
fwait
aaa
jmp
divb
add
adc
push
cmp
cmp
cmp
test
mov
stos
cmp
cmp
cmp
cmp
adc
and
cmp
jge
xchg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
insb
cmp
cmp
cmp
dec
cmp
jae
jge
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
inc
cmp
gs
mov
cmp
ljmp
cmp
pop
ds
ss
inc
test
mov
cwtl
lods
ds
ds
ds
sarb
aad
fnstsw
in
sbb
aas
cmp
pop
aas
arpl
jo
cmpb
aas
lea
mov
aas
add
add
or
push
xor
xor
push
xor
xor
xor
xor
xor
xor
sub
xor
jns
jg
test
mov
xchg
xor
xor
xor
jne
jge
xchg
mov
ret
xor
xor
xor
xor
xor
xor
xor
xor
stos
xor
insl
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
jno
ja
jg
xorl
xor
cld
xor
outsb
ss
shll
ss
ss
ss
aaa
xor
cmp
aas
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pusha
aaa
iret
aaa
sbb
jns
movsl
cmp
cmp
fnstsw
out
hlt
cmp
cmp
sbb
and
push
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
je
jp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
inc
cmp
xlat
cmp
cmc
cmp
sub
xor
aas
ds
ds
ds
ds
imul
jns
cmpsl
ds
sarb
fidivrs
jecxz
call
idivl
cld
xor
cmp
push
aas
pop
aas
pop
aas
outsb
aas
jp
cmpb
aas
enter
aam
loop
out
aas
hlt
aas
add
add
add
add
add
xor
pop
xor
jb
jge
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
insb
xor
xchg
mov
xchg
xor
xor
xor
xor
cmp
xor
jns
jg
test
mov
pushl
push
xor
outsb
xor
test
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
jp
xorl
xor
shll
mov
mov
aaa
push
aaa
pop
aaa
scas
aaa
loop
call
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
xchg
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
aaa
cmp
push
cmp
imul
xchg
cmp
stos
cmp
leave
cmp
fistpll
repz
add
add
xor
inc
xor
xor
xor
xor
je
xorb
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
mov
add
ja
jnp
jg
xorl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sysexit
adc
pop
xor
sub
aaa
xor
inc
xor
dec
xor
pop
xor
addr16
jae
add
add
cmp
inc
.byte
