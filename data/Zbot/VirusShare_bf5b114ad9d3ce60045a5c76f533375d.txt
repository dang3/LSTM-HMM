mov
push
mov
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
orb
add
mov
pusha
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
add
add
in
pusha
push
push
mov
push
mov
call
push
pop
mov
mov
lea
sub
dec
and
mov
mov
add
add
push
pop
push
pop
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
sub
test
jne
xor
push
mov
call
sub
ret
add
add
push
push
pop
adcl
mov
mov
bswap
pushl
pop
shr
add
mov
sub
jb
cmp
ja
pop
jmp
incl
add
lods
add
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
jo
into
and
fcmovu
mov
add
loopne
jns
rorl
mov
xchg
mov
hlt
jno
out
or
push
jg
push
arpl
aad
cld
test
or
pop
or
pop
cmovo
and
data16
cwtl
repnz
pop
mov
bound
mov
mov
inc
test
xchg
outsb
mov
js
iret
pushw
xor
jo
divps
decl
inc
or
push
jnp
mov
hlt
jae
rcll
jnp
outsl
hlt
lods
inc
mov
icebp
or
shrl
inc
inc
cmp
and
mov
push
data16
cmp
in
cmpsl
pusha
xor
push
pop
and
xchg
push
aas
test
jb
fsubrp
pop
fists
or
cwtl
sti
stos
cmp
insb
or
push
mov
shll
sub
xchg
sub
test
popf
mov
shrb
roll
rolb
mov
mov
xor
inc
adc
adc
add
pusha
xor
mov
jmp
pop
adc
ja
mov
stc
push
mov
leave
in
imul
jb
mov
mov
insb
jb
pop
mov
dec
divl
sub
push
push
xor
add
jg
aas
or
cmpsl
inc
jmp
sarb
mov
sub
add
pop
iret
mov
andl
cld
mov
js
xchg
jp
and
in
fcoml
outsb
sub
cmp
inc
cmp
mov
incl
push
mov
nop
sub
fs
sbb
shrl
popa
push
popa
sahf
jmp
mov
cmp
ret
push
add
rclb
inc
out
sub
scas
inc
lcall
fdivrs
dec
mov
pcmpeqb
outsb
add
lret
mov
jecxz
dec
sbb
shl
jb
sub
scas
out
pop
lea
add
add
jmp
incb
jbe
push
in
push
or
mov
sbb
ljmp
call
jne
mov
or
lcall
adc
out
test
pop
or
push
sti
push
mov
cmp
je
jl
xorl
idivl
stos
cmpsb
add
pop
lods
into
xchg
cmp
loop
adc
lret
sub
inc
push
pop
mov
dec
xor
mov
inc
jo
mov
popf
sub
bound
sarb
cmc
ss
pop
adc
mov
out
pop
int3
push
das
add
popa
cmp
dec
in
cltd
scas
aad
ja
in
xchg
into
xor
lfs
add
repz
pusha
inc
adc
xchg
lock
rcl
jecxz
xchg
sub
push
rol
bound
jmp
mov
imul
inc
inc
call
mov
cmc
pop
rcrb
mov
push
lods
add
es
mov
testb
mov
out
mov
imul
iret
jge
inc
scas
sbb
aad
or
pop
sub
mov
xor
dec
push
scas
shlb
and
dec
dec
add
cs
mov
dec
sti
out
aad
mov
fiaddl
mov
int3
cmpl
mov
int3
xorl
mov
xor
push
sub
sbb
push
fdivs
mov
fwait
xorb
jge
and
jl
es
cmpsb
pop
mov
mov
xlat
push
push
xor
xchg
add
addr16
movsb
in
xchg
or
sbb
xor
pop
popa
in
sahf
lock
gs
or
mov
cmp
popa
call
sub
sti
pop
pop
xor
lret
pop
fwait
inc
mov
jge
dec
mov
adcb
repnz
or
mov
pop
cmp
scas
jg
xor
or
pop
pushf
inc
lods
mov
ljmp
cmp
ds
jno
cltd
dec
pop
and
aas
cmp
or
inc
sarl
outsb
ljmp
dec
mov
out
int3
mov
mov
pop
jecxz
push
aad
push
sub
outsb
add
es
push
es
cmp
cli
xchg
hlt
std
xor
subl
in
mov
adc
sbb
loop
das
mov
nop
movsb
int
sahf
or
in
push
cli
jbe
jns
nop
sub
test
fimull
add
out
scas
jmp
xor
xor
mov
mov
adc
ret
mov
mov
shrl
fwait
push
pop
outsb
leave
pop
clc
ss
add
pop
int
sub
cltd
adc
popf
dec
push
ret
rolb
dec
pop
pushf
rcrl
ljmp
jp
in
cmc
cmp
adc
ja
iret
out
dec
dec
xchg
fisttps
shlb
push
dec
mov
repnz
mov
ret
cmpsb
out
xchg
mov
mov
jns
pop
mov
jnp
xchg
test
lahf
cmovbe
lahf
mov
adc
das
testb
lahf
jmp
adc
adc
mov
lea
push
mov
bnd
or
mov
mov
fcomip
mov
adc
and
dec
cltd
es
mov
incl
pop
or
and
mov
inc
js
into
ret
out
sbb
jmp
jecxz
adc
popf
sbb
pop
popf
enter
lret
popf
rsm
mov
outsl
sub
adc
add
xchg
xchg
cs
jo
fs
sub
cmp
jge
pop
cmpsl
add
out
cmp
mov
hlt
mov
arpl
add
std
add
imul
in
aaa
int3
rcll
add
jmp
outsb
sahf
rcl
ret
fidivl
mov
enter
aaa
fcmovu
ret
test
pop
cmp
dec
mov
lret
jecxz
lea
stos
jo
mov
xor
dec
out
es
ljmp
xor
imul
mov
mov
icebp
mov
icebp
mov
mov
repnz
or
repnz
or
repz
enter
mov
aaa
adc
or
mov
mov
jmp
.byte
.byte
push
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
add
push
and
add
and
add
add
add
add
aam
add
in
and
add
and
add
and
add
and
add
and
add
add
xchg
and
add
add
add
add
bound
add
add
push
and
add
and
add
add
add
add
pusha
and
add
and
add
add
and
add
add
movsb
and
add
add
mov
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
add
push
and
add
and
add
add
add
add
aam
add
in
and
add
and
add
and
add
and
add
and
add
add
xchg
and
add
add
add
add
bound
add
add
push
and
add
and
add
add
add
push
imul
je
add
gs
inc
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
je
imul
aad
inc
gs
gs
inc
imul
jb
popa
je
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
jb
imul
inc
add
data16
je
je
dec
popa
outsb
fs
add
mov
outsl
jbe
inc
imul
jns
add
cli
add
popa
imul
insb
gs
bound
arpl
add
je
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
add
dec
outsl
arpl
push
imul
dec
gs
jo
jb
popa
je
add
sbb
inc
js
je
jb
arpl
jae
adc
dec
gs
jo
imul
inc
jb
popa
je
dec
jne
gs
add
xor
inc
imul
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
popa
imul
je
jo
gs
bound
arpl
add
push
imul
je
add
add
je
jne
jb
outsb
je
imul
jns
add
sti
add
insb
gs
jae
dec
jne
gs
add
push
dec
inc
dec
xor
cs
insb
add
sbb
push
gs
jae
addr16
add
xchg
push
inc
imul
dec
gs
popa
addr16
add
jp
inc
gs
imul
outsb
addr16
add
push
pop
inc
gs
inc
add
add
push
imul
outsl
arpl
push
pop
inc
gs
inc
add
pop
dec
gs
popa
addr16
outsl
js
add
push
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
pop
inc
gs
inc
add
inc
gs
jns
inc
outsl
insb
outsl
jb
push
pop
inc
gs
inc
add
inc
jne
jae
jb
outsl
jae
add
popa
je
push
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
je
xor
insb
inc
outsl
insb
outsl
jb
add
inc
je
xor
insb
inc
outsl
insb
outsl
jb
add
inc
je
xor
insb
inc
outsl
insb
outsl
jb
add
inc
je
xor
insb
inc
outsl
insb
outsl
jb
inc
push
dec
xor
cs
insb
add
add
add
add
sub
add
dec
add
adcb
add
pusha
add
addb
add
add
add
js
add
nop
add
addb
add
hlt
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
test
add
shlb
mov
add
dec
jo
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
xchg
xchg
js
xchg
xchg
scas
xchg
xchg
xchg
fcoms
nop
cmc
lea
mov
mov
popf
fwait
pushf
cmp
lcall
mov
mov
jmp
loope
jmp
in
fcmovu
fcos
mov
mov
mov
mov
pushf
pushf
frstor
mov
mov
call
aad
jmp
loope
in
jmp
push
div
std
std
std
std
push
lock
inc
mov
fisttpll
add
movsb
movsb
mov
cli
sahf
fwait
pushf
ljmp
leave
mov
ret
aad
aam
loopne
loope
jmp
in
cli
clc
clc
std
std
stos
stos
stos
cli
mov
add
ret
les
cmpsl
test
imul
xchg
lcall
mov
ret
leave
enter
sar
iret
iret
loopne
out
out
out
sti
std
std
std
std
std
std
std
std
std
jmp
in
ljmp
mov
add
add
add
into
roll
rcl
roll
int3
int3
int3
push
lods
lods
lods
inc
cmpsb
cmpsb
cmpsb
fisubs
fwait
call
xchg
ljmp
int3
int
leave
enter
fdivrp
out
in
in
cld
std
std
std
std
std
push
repnz
dec
leave
leave
lcall
mov
add
ret
lret
rol
push
mov
or
cltd
es
pushf
xchg
sub
stos
stos
test
mov
mov
stos
stos
lods
lcall
xchg
xchg
call
mov
iret
inc
mov
fdivr
repz
std
std
std
cld
std
push
repnz
jmp
loope
call
xlat
ljmp
mov
fcomp
xlat
add
xchg
xchg
daa
xchg
xchg
xchg
xor
ja
jbe
jne
js
mov
scas
clc
les
mov
mov
jmp
nop
xchg
lcall
rol
rcl
iret
icebp
fdiv
in
loop
repz
icebp
repnz
cld
cli
std
cld
cli
ljmp
call
fsub
call
call
in
lcall
mov
add
add
sarb
jo
jo
xchg
int
rcl
sar
rol
pushl
lret
dec
mov
aad
enter
mov
test
xchg
mov
fcom
not
aad
icebp
ror
out
xlat
rcl
out
repnz
lock
stc
jmp
in
icebp
jmp
call
dec
jmp
mov
lret
add
insl
insb
pushf
xchg
xchg
xchg
enter
in
into
ror
fcomp
fdivr
ret
rol
mov
popf
cltd
jmp
stos
mov
call
ret
enter
ret
mov
aam
ror
lret
std
int3
mov
repnz
int3
lock
leave
out
into
iret
leave
hlt
out
repnz
out
sar
jmp
sar
call
xlat
out
inc
int
pushl
cmpsb
test
scas
js
js
mov
mov
lret
leave
leave
dec
lret
lret
ror
call
mov
cwtl
lcall
xchg
xchg
call
cwtl
xchg
jmp
lods
mov
pushl
int3
enter
into
lock
leave
icebp
aam
fdiv
leave
mov
pushl
popf
movsb
call
lea
decl
add
add
add
add
cmp
pop
fs
pop
pop
push
shll
and
mov
add
inc
add
add
add
and
mov
push
push
push
add
add
add
add
mov
mov
inc
rol
dec
iret
int
fcos
mov
mov
test
test
test
cmpsl
cmpsb
cmpsl
jmp
mov
call
aam
fcos
mov
aam
rcl
shr
mov
aam
lock
into
lock
stos
test
mov
decl
nop
call
nop
xchg
decl
add
add
add
add
lods
lods
decl
jge
pushl
ljmp
decl
dec
ljmp
push
xchg
xchg
xchg
lcall
pop
mov
adc
pop
add
add
add
add
lea
mov
mov
rol
lret
call
rcl
mov
mov
inc
mov
sar
mov
mov
inc
scas
cltd
call
int3
fcos
mov
mov
mov
scas
lods
lods
repz
int3
cmc
aad
iret
out
lods
stos
stos
cmc
nop
xchg
decl
xchg
mov
xchg
xchg
call
xchg
xchg
call
add
add
add
add
mov
decl
test
jmp
test
decl
fwait
fwait
mov
bound
or
push
add
add
sbb
push
fwait
lcall
ret
rol
inc
rol
mov
mov
rol
mov
mov
jmp
enter
mov
push
mov
xlat
fdivr
rcl
int
mov
mov
mov
scas
sti
mov
int
lret
icebp
scas
mov
mov
lcall
xchg
xchg
call
nop
call
add
add
add
add
int3
lret
call
jg
decl
xchg
xchg
ljmp
movsb
mov
jge
jge
mov
fwait
ljmp
jne
lds
push
push
push
add
add
lea
ja
mov
mov
inc
rol
mov
mov
decl
in
sahf
cmp
out
jp
push
lcall
jns
test
mov
sar
fdivr
loopne
fcmovnu
aad
iret
int3
enter
mov
pushf
lcall
stos
popf
mov
mov
mov
jmp
xchg
cltd
call
add
add
add
add
fdivr
lahf
sahf
popf
incl
test
call
movsl
movsb
pushl
mov
jg
jle
test
lcall
pop
test
add
add
inc
inc
jb
das
das
mov
ja
xchg
xchg
xchg
in
xchg
xchg
mulb
lret
mov
add
xchg
lcall
clc
xchg
fs
cmp
scas
mov
mov
lods
mov
mov
mov
ret
dec
lret
ror
int3
call
aam
call
aad
lret
scas
mov
lcall
xchg
xchg
call
cltd
cmpsl
ljmp
test
js
add
add
add
add
mov
fdivr
sahf
lcall
mov
decl
mov
ljmp
mov
mov
pushl
je
xor
xor
and
and
pop
pop
insb
dec
dec
dec
pushf
je
jne
jp
jns
jle
jg
cltd
xchg
xchg
std
mov
mov
push
fisubl
lcall
movsl
stos
pushl
mov
leave
call
xlat
fdivr
jecxz
loopne
out
jecxz
jmp
div
std
cld
std
out
jmp
dec
lret
int
mov
test
lcall
xchg
decl
cltd
pushf
repnz
xchg
xchg
cmp
add
add
add
add
ret
loopne
lcall
mov
call
xchg
xchg
call
xchg
xchg
call
xchg
xchg
decl
mov
lods
decl
pop
pop
mov
pop
pop
ret
arpl
pusha
bound
push
insb
jbe
jl
xchg
xchg
fwait
in
stos
scas
scas
mov
mov
jmp
cmpsb
stos
pushl
mov
ret
dec
iret
into
lock
std
std
std
std
std
std
sti
cli
cld
jmp
dec
lret
mov
scas
scas
lcall
cltd
lcall
add
add
vpsubd
out
lcall
xchg
xchg
call
cltd
lcall
cwtl
cwtl
decl
test
pushl
jle
cmp
jle
out
jp
in
jge
loope
xchg
cwtl
call
mov
mov
inc
mov
mov
pushl
scas
scas
pushl
mov
mov
ret
ret
int3
int3
call
aam
jmp
loop
push
icebp
icebp
sti
cld
std
std
std
push
repz
fcmovu
fdivr
lret
mov
lods
stos
jmp
popf
lcall
add
add
add
add
mov
lcall
cwtl
lcall
sahf
mov
lcall
mov
lcall
fwait
popf
lcall
mov
cld
mov
rol
ret
mov
movsl
test
stos
mov
lcall
sub
lcall
push
mov
mov
mov
call
rcl
out
out
hlt
cmc
hlt
std
std
cld
std
std
std
sti
cld
std
jmp
out
call
rcl
inc
ret
stos
stos
test
push
add
add
rol
out
fcmovnu
lcall
lahf
mov
ljmp
test
jmp
mov
mov
mov
fcom
mov
scas
lods
ljmp
test
call
and
adc
mov
ud0
or
call
or
lcall
gs
mov
ret
rcl
iret
call
fdivr
loopne
loope
in
in
in
push
clc
idiv
cld
std
std
clc
idiv
call
aam
mov
mov
mov
add
add
mov
sar
pushf
lcall
test
lods
stos
ljmp
movsb
incl
lods
scas
fdivr
mov
sbb
decl
or
pop
incl
add
add
xchg
add
xchg
or
call
adc
jmp
adc
pushl
jb
mov
call
xlat
jmp
out
out
out
lock
cli
stc
sti
std
std
std
std
push
repz
call
rcl
pushl
movsl
cmpsb
push
add
add
int
lcall
scas
ljmp
mov
pushl
stos
decl
test
jmp
ljmp
add
decl
sbb
decl
adc
incl
or
decl
lcall
adc
ljmp
push
add
mov
push
inc
dec
outsb
pop
inc
xchg
mov
mov
ret
ret
call
xlat
fdivr
in
in
jmp
cld
cld
std
push
repnz
loopne
lret
int3
lret
pushl
test
cmp
mov
lods
cli
aam
lcall
mov
pushl
mov
pushl
cwtl
cwtl
jmp
fcomp
mov
sbb
push
call
pop
adc
decl
add
xchg
push
add
popf
adc
jmp
adc
ljmp
sbb
ret
aas
sub
aam
push
call
push
push
call
jp
dec
popl
mov
mov
mov
mov
mov
stos
stos
cli
cltd
lcall
lods
test
cli
into
mov
sahf
mov
mov
mov
mov
test
decl
rcl
dec
mov
and
xchg
sub
call
sub
call
adc
xchg
lar
cltd
adc
jmp
push
add
scas
pop
add
mov
add
mov
push
cmp
fnstsw
fidivrs
jmp
js
jmp
jns
jmp
jns
call
subb
push
jmp
pop
fnsave
mov
scas
sti
mov
add
test
movsb
cli
ret
mov
mov
mov
mov
mov
pushl
xchg
call
aam
call
lret
int3
lcall
ss
mov
cmp
lcall
push
or
xchg
adc
lcall
adc
ljmp
sbb
mov
and
jmp
mov
out
jne
call
mov
out
mov
icebp
mov
repnz
testb
jmp
stos
mov
mov
mov
movsl
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
dec
iret
sar
fcmovnbe
sar
cltd
cmp
jmp
dec
inc
jmp
xor
call
ljmp
push
add
mov
add
mov
sbb
dec
xor
jmp
jl
jmp
mov
out
xchg
cmp
repnz
test
repz
xchg
cmc
lcall
cli
lahf
sti
mov
in
lahf
jmp
loope
inc
rol
mov
add
pushf
mov
mov
inc
ret
mov
mov
ret
mov
mov
xchg
xchg
dec
aad
jmp
fcmovnu
lcall
dec
inc
ljmp
push
dec
lcall
or
add
stos
adc
add
mov
sbb
inc
sbb
call
cmp
ljmp
push
mov
xchg
push
movsb
xchg
stc
cmpsl
xchg
cli
cmpsl
xchg
cld
cmpsl
cltd
std
lods
sahf
popf
xchg
jmp
dec
lret
mov
add
add
add
dec
sti
jno,pt
jmp
mov
sar
ret
ret
mov
mov
xchg
xchg
dec
rcl
fst
fcos
scas
jge
ljmp
addr16
ljmp
sbb
lcall
adc
ljmp
sbb
inc
sbb
inc
push
add
lret
sbb
fimull
push
lods
mov
push
lods
lahf
stc
lods
mov
cld
mov
sti
mov
std
mov
std
mov
xchg
out
mov
jmp
call
rcl
call
mov
add
cmp
inc
cmp
inc
mov
inc
rol
ret
enter
mov
movsl
dec
lret
rcl
mov
push
dec
mov
cmp
add
mov
adc
add
mov
pop
add
iret
push
add
fsubs
push
jmp
shll
cld
mov
scas
sti
mov
scas
inc
mov
inc
mov
inc
mov
push
mov
fdivr
aad
call
mov
add
inc
std
dec
inc
inc
lcall
mov
mov
rol
mov
inc
leave
enter
mov
inc
call
rcl
dec
mov
dec
mov
daa
sbb
sahf
ljmp
sbb
mov
pop
add
fsubs
add
loope
add
in
sub
stc
mov
rol
inc
mov
inc
mov
dec
mov
dec
mov
rol
dec
mov
lock
fcmovnu
lcall
mov
add
dec
decl
dec
pushl
xlat
xlat
inc
ret
sarb
inc
mov
mov
lcall
rcl
sar
aad
int
mov
pop
pushl
or
test
add
mov
add
mov
sbb
add
fisubs
add
repz
std
stos
cwtl
fxch
dec
std
rol
call
call
std
fadd
call
leave
fcmove
std
fcmovne
push
mov
sar
fdivr
mov
mov
add
repnz
out
out
repz
in
fcos
rcl
aam
int
sar
leave
lret
test
mov
aad
fdivr
fcmovnbe
xlat
ljmp
and
mov
push
add
mov
add
rcrl
fsubs
add
jecxz
add
in
and
das
inc
mov
fmul
fcmove
fxch
fmul
loopne
std
loopne
std
loop
std
out
cld
les
jmp
loopne
jmp
mov
add
stc
sti
cmp
stc
cli
lcall
icebp
in
in
out
jmp
out
dec
aam
inc
rol
jecxz
call
jmp
adc
jmp
pop
add
mov
sbb
add
fisubl
jmp
daa
add
lock
stc
push
std
fcmovnbe
std
loop
std
fst
jmp
xlat
jecxz
jecxz
jmp
std
out
std
call
out
std
into
mov
jmp
loope
pushl
mov
add
cli
cld
add
cli
cld
sub
cli
sti
sti
lcall
out
in
in
aam
mov
push
fwait
or
ljmp
sbb
mov
sbb
call
and
fisubs
add
ljmp
cld
mov
ljmp
jmp
out
out
std
ljmp
std
in
out
std
lock
std
lock
std
ret
out
aad
jmp
jecxz
mov
lea
add
std
add
idiv
dec
loop
fdivrp
rcl
sar
mov
or
ljmp
pop
add
mov
push
add
shll
add
fisubs
add
jmp
add
cmc
cmp
std
mov
push
repz
std
in
out
out
jmp
std
in
jecxz
in
loope
jmp
xlat
cld
loope
cld
fmul
cld
cli
mov
mov
loope
loop
mov
lea
push
loop
xlat
stc
int3
lret
lret
dec
mov
add
lods
adc
pushl
sbb
add
xlat
sbb
jmp
sbb
push
adc
ss
inc
mov
std
in
aad
sti
rol
sti
lret
test
lods
push
shrb
jecxz
mov
jecxz
sar
rol
jmp
into
sar
rcl
into
ljmp
fwait
cltd
flds
add
add
iret
rcl
mov
call
lret
leave
jmp
add
pushl
add
lds
add
rclb
add
ficompl
or
loope
adc
out
es
xchg
xchg
fldcw
test
fidivrl
ret
ror
fcmovnbe
sar
ror
into
sti
lret
inc
ret
mov
mov
mov
into
mov
mov
lods
lods
cmpsl
xor
add
add
shrb
aam
lcall
sub
ljmp
inc
pushl
mov
dec
mov
call
ret
rcl
into
cld
xlat
aad
sti
ror
int3
cli
mov
mov
mov
mov
loop
mov
fnstenv
mov
xchg
mov
rcl
push
fnclex
in
repz
std
or
into
int
add
mov
fmul
sar
fcmovbe
sar
fst
fdivr
aad
xlat
clc
int
int
ret
mov
scas
call
stos
stos
movsb
shrl
test
stos
cmpsl
test
lea
mov
and
rcl
add
mov
cmpsl
ss
rcl
iret
mov
mov
scas
scas
stos
ljmp
stos
movsb
shrl
test
mov
xor
add
mov
popf
lcall
stos
test
lods
lods
cmpsb
fisubrs
stos
cmpsb
outsb
stos
test
add
incl
add
incl
add
incl
add
cld
add
add
push
add
add
jmp
add
add
inc
add
add
std
addb
add
call
add
add
add
incl
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
addb
add
sldt
addb
add
pop
add
addb
add
aas
add
addb
add
incl
add
incl
add
incl
add
incl
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
add
add
jg
add
add
add
jg
add
rolb
add
add
push
add
add
add
push
add
add
add
lock
add
add
push
add
jg
add
push
add
incl
add
lock
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
std
incb
lahf
mov
lcall
movsl
mov
push
xchg
adc
incl
addb
xor
mov
jecxz
ret
fcomp
std
loop
jecxz
xlat
fcomp
jecxz
mov
lcall
add
add
jg
movsl
movsb
movsl
xor
movsl
movsb
sti
mov
int3
lret
jmp
in
sti
cli
cli
std
sti
sti
in
in
in
sti
sarb
xor
incb
std
std
std
add
xchg
xchg
sbb
lods
scas
movsl
cmpsb
cmpsl
cmpsb
sti
fwait
pushf
fwait
ljmp
leave
enter
in
std
std
std
cld
cld
cld
push
clc
clc
call
fcomp
sti
cmpsb
scas
scas
sahf
mov
add
std
std
add
xchg
xchg
pop
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
inc
vpsubd
hlt
call
out
lock
jecxz
in
call
in
pushl
fwait
cltd
aas
inc
inc
aas
or
push
sbb
add
or
add
add
add
add
xchg
xchg
jg
mov
int3
into
stc
enter
movsb
mov
test
mov
mov
sarl
dec
mov
out
aam
aam
lret
mov
movsb
test
mov
adcb
jle
push
push
popf
arpl
lahf
imul
inc
inc
inc
sbb
jp
cmpsl
cmpsl
stos
mov
mov
leave
inc
mov
ljmp
scas
mov
dec
lret
enter
shl
mov
mov
xchg
pushf
xchg
xchg
xchg
call
nop
jns
stos
test
decl
decl
xchg
xchg
in
addl
mov
jecxz
mov
mov
jge
xchg
lcall
mov
dec
mov
std
into
lret
enter
mov
movsb
lcall
xchg
xchg
cltd
notl
mov
mov
mov
nop
lcall
movsl
movsl
lcall
jl
ret
xor
fwait
test
divb
cmpsb
ljmp
jmp
mov
sar
loope
out
jecxz
int3
lret
lret
test
mov
jecxz
xchg
cltd
aas
lret
sarl
call
xchg
xchg
decl
xchg
xchg
std
mov
iret
mov
xchg
jmp
xchg
xchg
stc
lods
mov
stos
mov
int
jmp
jmp
cld
sti
sti
sti
out
lock
leave
leave
ljmp
lcall
leave
enter
mov
jmp
cwtl
cwtl
jmp
cltd
lcall
js
cld
lahf
popa
fwait
inc
inc
lcall
xor
mov
xchg
inc
ret
fcomp
fcos
out
out
out
cld
std
std
sti
cld
cld
mov
mov
movsb
movsl
movsb
xor
std
incl
mov
mov
stos
stos
stos
ljmp
mov
mov
mov
and
decl
push
push
call
ljmp
push
inc
inc
cltd
xchg
call
mov
push
hlt
repnz
out
in
out
fucomp
mov
lods
scas
scas
xor
add
add
scas
mov
mov
mov
mov
mov
pushl
insl
push
xchg
es
call
push
or
fwait
adc
ljmp
and
dec
push
inc
fidivl
fisttpl
fisubl
mov
mov
std
add
add
add
add
add
stos
stos
mov
mov
mov
mov
mov
jmp
xor
pop
jmp
pop
add
lds
adc
loopne
gs
in
mov
xchg
jle
cmc
xchg
cmp
fidivrs
mov
xchg
add
jno
je
lea
mov
mov
mov
fwait
ljmp
aaa
sub
mov
pop
add
mov
cmp
push
test
cli
stos
pushf
std
lods
sahf
std
lods
fwait
jmp
ret
mov
aam
xchg
nop
and
add
add
inc
jg
jp
mov
ret
ret
mov
mov
mov
mov
pop
jmp
adc
mov
and
jmp
mov
mov
std
lds
std
enter
int3
ret
mov
lea
data16
mov
jmp
iret
iret
cld
pushl
ret
mov
dec
ljmp
sbb
dec
pop
add
in
push
stc
jg
std
ror
call
leave
fxch
fcmove
cld
fmul
out
rol
inc
rol
xchg
xchg
xchg
dec
stos
stos
stos
or
jecxz
sbb
icebp
icebp
dec
ljmp
scas
fcomp
fcom
int3
lret
dec
inc
ljmp
sbb
call
and
jmp
ud0
cmpsb
xchg
jmp
std
in
std
in
std
call
repz
leave
dec
xchg
cltd
add
add
std
std
add
out
out
adc
call
into
jecxz
pop
push
pushl
sbb
fistpl
add
icebp
cmp
sti
mov
sar
stc
fxch
push
xlat
leave
push
enter
leave
jmp
iret
cld
icebp
lcall
add
add
add
lret
ror
lret
mov
xor
mov
pop
dec
std
fnstcw
sti
fdivs
mov
call
lret
mov
enter
mov
movsl
movsl
pop
shrl
xchg
int3
rol
ret
clc
shlb
shll
mov
mov
scas
fs
cmpsl
dec
mov
lods
and
sarl
add
incl
jg
addb
lods
stos
xor
mov
jbe
lods
lods
imul
mov
adc
add
add
incl
clc
add
push
add
inc
add
incl
add
incb
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
incl
incl
add
add
add
xor
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
inc
testl
enter
sub
lret
std
xchg
cmp
insb
negl
mov
mov
rorb
jp
lea
pushf
push
out
int
stos
inc
data16
jne
and
mov
je
out
or
cs
xchg
andl
movsb
insl
roll
add
sub
shlb
loopne
js
adc
xor
fs
fwait
xor
test
push
push
fsubs
outsl
movsb
sub
pop
pop
idivl
jbe
sbb
xchg
add
lret
sbb
out
jbe
shlb
enter
bound
or
out
xchg
sub
shlb
lea
shrl
scas
pop
sahf
fbld
xchg
mov
inc
fildl
movsb
stc
aad
dec
loope
testb
loope
sahf
xor
xor
mov
cmp
out
fidivl
test
clc
je
loope
cs
push
lods
dec
call
shlb
lret
fsts
out
cli
jmp
and
dec
sti
xchg
jp
lods
inc
inc
inc
sbb
xchg
ljmp
shrl
cs
hlt
push
popf
and
dec
and
jp
shlb
fwait
inc
fmul
pop
ljmp
stos
or
jo
es
xchg
popf
xor
push
lds
mov
jp
cmp
jo
testl
jle
dec
pop
mov
filds
xorb
pop
sahf
pop
sbbb
pop
aad
dec
pop
jnp
fisubrl
popa
clc
jle
mov
lret
lahf
jg
shr
aad
push
repz
xor
inc
repz
mov
test
cltd
fnstenv
in
push
test
movsb
push
mov
ret
lret
bound
std
xchg
adc
sbb
adc
mov
in
sbb
xor
cmpsb
inc
pop
out
js
es
jbe
iret
or
sub
pop
int3
inc
mov
jge
or
mov
cmp
ret
gs
mov
fldl
xchg
and
mov
push
xor
bound
movb
dec
in
mov
hlt
call
or
jecxz
and
ss
push
mov
lods
xor
and
xchg
push
call
mov
outsl
push
sub
jge
add
lea
and
stos
inc
sarl
push
stos
hlt
leave
pusha
es
xlat
outsb
incb
jle
pop
testb
jb
stos
mov
lds
leave
idivb
inc
fsubrs
push
call
shrl
fwait
loop
adc
mov
fwait
xor
lods
inc
inc
mov
popa
xchg
fcmovnbe
outsb
or
cs
mov
pop
sahf
cmp
and
enter
and
stc
xor
add
push
adcb
lret
cld
cmpsb
sahf
xor
dec
stc
mov
pop
mov
out
negb
add
lods
and
mov
jne
inc
fsubr
xchg
push
jmp
aas
call
jle
xchg
cmp
xor
mov
cmp
lret
pop
fnstenv
xor
jg
scas
testl
xor
and
or
test
inc
fstps
jmp
scas
clc
jo
sub
jle
add
jle
pushf
xor
lods
inc
shll
push
test
lret
lret
cld
inc
call
mov
push
popf
leave
jo
lods
mov
ret
xor
hlt
cmp
fldcw
push
jmp
mov
loopne
lds
xor
mov
xchg
mov
mov
dec
lea
mov
leave
mov
out
sbb
add
xor
jb
add
lret
xor
movsb
lods
sub
mov
pop
out
mov
mov
jg
and
and
inc
xlat
xchg
dec
addr16
fnstenv
pop
cmpsl
paddusw
dec
loope
sub
bound
test
and
inc
mov
test
push
xor
mov
lods
inc
imul
int
movsb
cmp
dec
outsb
repz
aas
movsb
jmp
in
testl
repz
lods
mov
mov
adcb
repz
clc
xor
shlb
push
in
sbb
and
int3
cmpsl
ds
imul
pop
push
aam
jmp
fwait
and
rorb
pop
sbbb
push
add
fdivl
mov
stos
inc
add
cmp
adc
dec
sbbl
loope
fcmovbe
outsb
adc
shrb
pop
xor
nop
daa
cmp
push
fidivl
dec
int
lret
bound
jo
ss
in
arpl
inc
ja
pop
mov
jle
out
xchg
cs
xlat
outsb
push
jge
inc
flds
imul
mov
mov
sub
sahf
xor
adc
sbb
xor
inc
or
vmread
xchg
lods
je
or
aad
mov
ret
dec
adc
xchg
dec
test
mov
mov
dec
fucomip
shlb
cmc
call
mov
xor
jge
ds
fisubrs
sbb
sahf
incl
sub
loope
add
sbbb
dec
ret
pop
jge
shlb
jno
dec
cmpsl
shld
xor
pusha
sbb
add
xchg
pop
mov
jmp
inc
fcoms
sbb
add
fidivrs
lds
iret
data16
jnp
mov
push
out
jecxz
popa
clc
jecxz
mov
xor
pop
xor
mov
pop
xchg
int
clc
cli
aad
pushf
add
push
in
ss
push
ljmp
or
xchg
lods
scas
inc
fcmovu
enter
jb
push
dec
outsb
add
enter
mov
popf
xor
mov
pop
out
push
out
push
stc
jo
das
cltd
sbbl
sub
inc
addr16
sub
aam
popl
mov
nop
daa
jae
mov
lods
movsb
daa
jb
push
mov
pop
out
shll
mov
jae
xor
xor
pop
imul
mov
mov
pop
lock
aaa
cwtl
pop
cmc
mov
lret
mov
add
addb
je
hlt
mov
je
insb
mov
lods
sti
xchg
fisubl
adc
dec
xchg
push
or
rolb
cmc
xor
and
hlt
scas
sahf
es
mov
jb
in
lods
les
push
add
cmp
dec
fs
xchg
scas
mov
xor
inc
dec
cli
pop
xor
in
xchg
mov
ficomps
mov
inc
and
outsb
add
mov
mov
inc
ficoms
jno
aaa
mov
mov
mov
dec
out
add
xchg
aaa
mov
cld
loope
cmp
gs
insl
add
jg
out
sub
pop
mov
dec
loop
insb
add
iret
data16
and
imul
jl
movsl
dec
lea
gs
ljmp
dec
jbe
jg
jmp
sub
mov
in
in
int
fwait
cmc
lods
inc
and
inc
fdivrp
xor
repz
jmp
jbe
jae
stos
test
jnp
addr16
cmp
adc
in
dec
fistpll
push
out
and
dec
cmpsb
xor
addr16
ja
jbe
dec
movsb
repnz
arpl
mov
add
outsl
xchg
sub
jg
adc
insb
rorb
jg
je
call
cmp
sbb
mov
adc
mov
mov
fs
cs
icebp
pop
out
es
xor
push
jle
or
rolb
test
dec
in
mov
fsubrs
cld
sbb
jne
cmp
outsl
shrb
jbe
push
insl
test
test
add
testl
push
xor
or
pop
cmp
mov
data16
or
lret
inc
xchg
sub
lahf
mov
mov
inc
loop
xor
shr
stc
sbb
leave
pusha
dec
push
push
lods
addb
cld
mov
mov
and
loope
adc
out
pop
pop
pop
sahf
mov
outsb
hlt
adc
push
push
xchg
repz
dec
cmc
mov
lds
sbb
sbb
sub
arpl
je
in
test
jnp
ljmp
popf
xor
sub
mov
inc
mov
cmpsl
push
out
xchg
fidivl
out
xchg
sub
popa
add
mov
mov
mov
sbb
jl
mov
cmp
and
ja
add
xor
das
mov
hlt
adcl
aam
mov
fwait
es
pop
pop
mov
dec
arpl
lods
jbe
ficompl
mov
rolb
std
adc
arpl
xchg
orl
inc
loope
or
aaa
add
jae
sub
mov
mov
cmp
rcrl
outsl
sub
xor
mov
jmp
lret
mov
les
icebp
jne
push
mov
mov
mov
jle
jno
imul
je
data16
mov
sahf
xor
sub
pop
movsb
dec
fnstenv
mov
adc
rcrl
hlt
jecxz
es
cltd
xor
lds
mov
int
jmp
cmc
jno
and
mov
insb
cmp
into
imul
cmp
rolb
jb
testb
cmp
or
sahf
add
fnsave
cmp
outsl
mov
out
mov
pop
or
inc
fwait
jmp
cmp
adc
push
insb
mov
add
jne
mov
mov
xchg
fsts
push
adc
outsl
pop
stos
add
aaa
aad
popa
xorl
insl
add
pop
cld
je
or
sarl
stc
shrb
sub
icebp
adc
and
decl
enter
out
dec
pop
mov
sbb
push
iret
popa
mov
jb
xchg
gs
mov
fucomp
cmpsb
popf
ss
cmpsl
fdivl
sbb
xor
in
insl
insb
xor
mov
adc
test
insb
imul
pop
ljmp
mov
repnz
icebp
push
fdivrs
sbb
xchg
mov
sub
movsl
jno
xlat
xchg
or
mov
push
dec
hlt
int3
imul
mov
cmp
rclb
ret
mov
aad
cwtl
push
fidivrs
hlt
jl
leave
jg
sti
jne
mov
sarl
mov
shll
leave
out
fs
mov
sub
push
in
cmp
jle
dec
ljmp
lret
mov
sbb
sub
and
adc
add
cmp
jbe
nop
fsts
cmp
int3
fbld
sub
mov
or
mov
lods
mov
insl
aaa
mov
mov
or
xchg
lahf
out
push
fisttps
dec
push
fldenv
adcl
cmp
mov
leave
hlt
shll
mov
or
jbe
popf
push
mov
xor
add
mov
lahf
mov
pop
push
mov
ret
les
or
xlat
sbb
mulb
sbb
cmpsb
aaa
push
inc
xchg
sti
inc
test
push
xchg
mov
std
xor
je
push
or
iret
cmpsb
bound
fstl
fdivs
in
int
and
push
mov
stc
mov
lods
sbbb
mov
push
mov
cmp
jo
sahf
cmp
xor
and
add
and
and
test
pop
jle
int3
mov
aaa
or
idivl
sub
mov
addr16
imul
rclb
dec
add
movsb
out
adc
bound
add
fistl
inc
push
inc
pushf
sub
nop
cmp
sti
rorb
pop
outsl
cmpsl
adc
repnz
xchg
xchg
pop
mov
cmpsl
jb
bound
insl
mov
cmp
push
inc
push
jmp
jbe
repz
push
dec
loope
mov
pop
movsb
js
sbb
lcall
dec
cwtl
das
cmp
mov
dec
orb
cmp
mov
pop
pop
aam
lods
jge
test
xchg
sub
adc
inc
cwtl
xor
or
push
jmp
pop
das
lock
mov
xor
sarb
dec
loopne
push
and
and
xlat
mov
mov
in
inc
fidivl
dec
out
insl
xchg
jle
add
cmpsl
movsl
cmp
sbb
or
mov
js
mov
call
lods
cltd
sbb
mov
adc
inc
fnstenv
fcoms
rcll
push
fwait
cli
outsl
push
pop
mov
sub
jl
xor
pop
jo
push
repnz
shrl
sbb
jb
jb
xchg
nop
push
xchg
sahf
pop
fsubrl
ret
and
imulb
ss
cmpl
lock
jmp
add
sbb
ss
ss
fsubrs
stc
mov
mov
lods
adc
sbbb
adc
pop
sahf
pop
aas
push
call
jbe
outsl
push
mov
lea
mov
lods
inc
bound
jp
loopne
lret
or
jg
loopne
dec
dec
loope
popf
adc
jl
cmp
mov
pop
js
int3
mov
aas
movsl
push
ljmp
jno
sbb
pop
repnz
fdivrs
scas
bound
ja,pn
lret
bound
mov
jmp
jp
lahf
pop
sahf
mov
add
aam
adc
loopne
inc
or
lret
stc
xor
pop
divb
adcb
lcall
clc
mov
push
lea
push
fsubl
pop
fdivr
stc
nop
pop
mul
jl
cmp
cmp
lea
jne
xchg
jno
stos
out
mov
inc
fstps
mov
testl
jle
adc
out
test
or
stos
inc
stos
sub
shll
pop
xchg
mov
data16
cmp
icebp
mov
push
test
jl
and
in
roll
add
pop
cmc
jp
fbstp
xchg
jl
mov
cli
xchg
enter
sbb
sbb
dec
jecxz
adc
add
push
andb
ja
mov
mov
cmpsb
cmp
adc
les
cmp
bound
mov
stc
nop
test
ret
subl
fisttpl
scas
cmp
stc
sub
pop
repnz
push
pop
dec
jns
xchg
jb
and
mov
lods
inc
les
mov
jp
lret
xchg
aam
ret
push
jmp
mov
jle
scas
lods
pop
and
out
int3
ds
or
hlt
inc
pop
repz
jae
mov
int3
xchg
sub
mov
inc
push
mov
dec
int
xchg
popa
aad
fwait
mov
xchg
push
mov
mov
aaa
sbb
fdivr
sub
mov
rorl
cmp
dec
in
pop
jns
arpl
mov
lret
mov
clc
xorl
push
test
pop
add
pop
cmc
pop
mov
inc
lock
mov
dec
loope
aad
ret
pmaxub
out
sub
cmp
xchg
sub
xchg
mov
mov
shrl
cmp
push
fwait
ret
daa
pop
mov
fsub
ja
push
sub
scas
cli
xchg
repz
dec
filds
sbb
jmp
push
cmp
stos
push
jb
adc
pop
lock
cmp
daa
jmp
add
sub
inc
divb
mov
lds
lahf
jecxz
mov
or
mov
ficoml
in
addl
push
in
xchg
xor
mov
insb
subl
sub
mov
gs
lahf
aas
fnsave
sbbl
mul
jle
das
mov
pushf
cmp
test
ret
pop
lea
lret
sti
xchg
push
push
call
std
pop
outsl
push
aam
cmp
inc
hlt
in
test
outsl
push
in
mov
or
clc
into
fcoml
lahf
ss
cmc
push
in
gs
push
mov
int
jb
aas
mov
nop
imul
pop
scas
repz
fnsave
ss
jno
sbbb
jmp
je
mov
adc
cmp
jl
nop
daa
xor
pop
scas
inc
jle
test
inc
mov
xorb
rcrl
or
push
jb
mov
cwtl
rolb
cmc
mov
mov
movsw
aaa
into
add
push
in
adc
mov
adcl
movsl
lods
mov
popa
sti
pusha
rclb
jmp
jne
lods
pop
sahf
aad
in
sbbl
or
cltd
jbe
sarl
mov
clc
mov
xlat
jg
repnz
call
add
push
mov
fcomp
jno
ljmp
and
dec
push
lods
lea
aas
mov
and
push
popa
aas
aad
jnp
gs
in
mov
add
stos
mov
pop
inc
aad
cmp
aas
enter
mov
mov
fsubl
aam
xchg
push
xor
jbe
push
popf
std
lahf
dec
in
push
and
add
adc
int
outsb
mov
jbe
push
jmp
mov
jb
jg
pop
icebp
cwtl
nop
daa
lahf
sbb
jge
mov
add
scas
dec
fdivl
enter
popf
out
sbb
ss
xor
pop
sbb
xor
or
push
out
nop
iret
ljmp
inc
out
scas
pop
gs
xor
xor
push
dec
jg
ljmp
jno
mov
sbb
stc
sbb
data16
iret
lea
push
in
pop
stc
ljmp
add
mov
call
add
test
xchg
xor
mov
aad
out
lcall
insl
cmp
insl
add
orl
stos
inc
xor
test
pop
dec
mov
out
xchg
test
add
xlat
dec
repz
add
mov
mov
ds
add
dec
loop
outsb
jle
jns
imul
lret
push
pop
jecxz
push
fdivl
mov
loopne
dec
out
testb
mov
add
sbb
fdivs
pusha
divl
sub
xchg
cltd
jle
out
mov
popf
xor
outsb
push
push
dec
xor
fnstenv
cmp
rol
mov
sti
adc
jnp
repz
jmp
add
inc
dec
adc
jbe
xor
repnz
dec
out
clc
lods
inc
out
insl
add
bswap
bound
pop
fwait
xor
push
jmp
push
ret
mov
out
popa
movl
call
lock
cmc
mov
out
push
divl
adc
dec
ljmp
push
mov
out
adc
mov
shl
xchg
inc
fwait
xor
adc
lods
inc
mov
lret
bound
ret
testl
jne
mov
int
xor
inc
out
cmp
leave
test
push
jns
repnz
xor
cmpsb
rclb
scas
inc
lock
mov
arpl
std
xchg
push
xchg
stc
nop
and
sbb
adc
xor
out
lock
jbe
inc
cmp
xchg
sub
mov
fbstp
cmp
push
enter
out
xchg
or
mov
ret
sub
std
or
dec
loope
fdivl
push
movsb
push
mulb
insb
adc
xor
inc
mov
mov
mov
mov
xchg
add
and
in
push
inc
loope
or
sarb
pop
sahf
adc
mov
adc
hlt
xchg
mov
mov
inc
fmuls
ljmp
sbb
xchg
sub
mov
xchg
lds
and
push
leave
pusha
stc
mov
test
adc
pop
mov
mov
sub
mov
repz
aad
aas
push
push
movsl
test
adcb
pop
sahf
in
dec
out
push
es
jl
inc
fisttpl
stos
stc
fcomi
test
push
das
inc
enter
sahf
xor
leave
mov
add
jne
cmp
std
xchg
jl
inc
ffree
popf
push
mov
loope
cld
adc
cmp
and
push
inc
push
jmp
mov
fidivrl
sbb
fnsave
mov
pop
xchg
jmp
int
lret
jmp
lock
xor
montmul
cmpsb
inc
xchg
mov
fldenv
or
sbbb
or
add
jle
cmp
rol
pop
add
jecxz
push
push
into
cmp
popf
test
ljmp
lods
or
fisttpll
lret
pop
repz
push
dec
loope
rolb
aam
lcall
rcrl
mov
jp
fwait
into
gs
pop
sahf
ds
in
andl
and
mov
jecxz
sub
xor
push
adcb
aaa
fs
push
mov
push
das
frstor
jno
xor
sbb
mov
adc
or
enter
mov
into
je
adc
out
xor
push
or
out
fs
pop
push
test
mov
jbe
bound
rol
pop
or
sbb
jle
jne
es
js
and
les
cwtl
push
pop
mov
dec
je
js
push
and
lret
sbb
xchg
dec
fs
popf
imul
mov
jae
out
or
stos
xor
add
lea
mov
fdivs
out
and
lods
inc
dec
inc
lret
bound
mov
xchg
sahf
montmul
cmpsb
mov
je
call
mov
dec
xor
sahf
insb
insl
xchg
xchg
lea
or
add
sub
and
outsb
pop
pop
repz
stos
xor
rol
out
add
xor
and
mov
dec
arpl
js
cmpsl
cmpsl
cltd
xor
ret
push
repnz
sbb
repz
rclb
or
loop
jae
or
cs
inc
pop
pop
jge
mov
dec
mov
cmc
or
dec
pop
dec
add
movsl
cltd
lods
inc
ret
je
add
inc
fcomps
and
ja
jge
xchg
enter
aam
xchg
push
adc
nop
pop
insl
pop
repz
jp
pop
movsb
mov
shl
push
in
adc
dec
pop
in
dec
insb
call
stos
xchg
mov
xchg
icebp
mov
inc
out
adc
dec
movups
xchg
pop
mov
xorl
adc
adc
rorb
stos
sub
mov
dec
stc
nop
jae
adc
inc
into
minps
cmp
inc
fcompl
pop
js
test
loopne
arpl
cmp
mov
fdivrp
xchg
or
xchg
std
xchg
push
cmpsl
mov
pop
scas
add
call
xchg
in
inc
test
js
adc
sub
dec
gs
ja
or
out
rcll
loop
mov
jmp
or
xchg
xor
or
addr16
loopne
mov
mov
clc
ljmp
and
test
push
xchg
loopne
test
mov
in
cmp
cmp
mov
test
stc
or
shrl
add
cmp
push
call
ficoml
imul
cld
mov
cmpsl
stos
inc
gs
jg
jae
negl
dec
loopne
out
cmp
fs
jmp
jge
leave
pusha
call
or
cmc
sbb
cmp
dec
loop
mov
xchg
and
gs
push
inc
push
ljmp
mov
cmp
jmp
mov
outsl
and
pop
lret
jnp
in
in
sub
pushl
aas
outsl
pop
ret
pop
dec
nop
fsubrs
push
sti
xchg
in
scas
inc
pop
mov
cmp
lahf
bound
movsl
cmp
cmpl
mov
fdivr
popl
cmpsb
and
push
push
add
cmp
push
cmp
test
sbb
arpl
pushf
push
xor
mov
movsb
cmp
push
dec
out
notl
outsl
popf
push
and
mov
push
ljmp
movsb
cmp
inc
mov
mov
fimull
cmp
es
dec
filds
mov
fwait
xor
std
sub
pop
inc
push
out
jg
pop
repnz
mov
movsb
cmp
fldt
lahf
jno
fs
pusha
xchg
inc
fmulp
subb
mov
fbld
arpl
mov
push
test
lahf
mov
fbld
pop
into
dec
loop
sub
cmp
je
cmp
test
movsb
cmp
leave
sbbl
inc
and
pop
add
mov
pop
scas
in
add
xor
jns
popa
push
inc
fildl
cmpsb
push
rcr
movsl
cmp
cmc
mov
and
call
je
jns
mov
mov
bound
out
cltd
adc
popf
xor
xor
mov
lods
lea
xor
fadd
pop
add
pop
mov
and
pop
pop
arpl
jae
jle
ja
mov
push
popf
cld
mov
cmp
xor
mov
shlb
rcll
add
aaa
push
insb
add
cmpsb
cmp
xchg
mov
dec
out
mov
in
fbstp
push
shrb
pusha
out
test
mov
add
cmp
sbb
mov
iret
js
imul
int
mov
add
cmp
shrl
lea
nop
dec
aad
pcmpgtb
lods
sahf
daa
repz
pusha
mov
and
xor
cmp
add
push
testb
test
fmuls
mov
sub
push
pop
jbe
jle
push
fsubrs
jg
pop
movsl
out
jns
lret
mov
mov
shlb
or
mov
fcomps
push
mov
sub
push
or
cmp
mov
rorb
or
and
add
and
xchg
xor
les
lcall
dec
jmp
and
lds
push
hlt
jmp
push
repz
aam
and
and
test
jb
subl
adc
jl
inc
loop
xchg
jb
int
je
lahf
jecxz
inc
push
mov
inc
out
xor
je
add
jno
addl
andb
lahf
clc
and
fbld
adc
mov
adc
shld
push
push
cmp
aas
push
cld
movsb
inc
sub
fisubrs
mov
adc
add
and
js
sub
mov
dec
aad
test
lock
dec
ficompl
sub
push
fcomps
cli
js
iret
ljmp
sbb
loopne
or
xor
cmp
pop
sub
dec
mov
pop
fstps
movsb
dec
out
pop
shll
ss
out
mov
inc
mov
cmc
sbb
pop
or
sub
aaa
shll
arpl
aad
push
lcall
push
stos
jne
cmpsl
push
std
mov
mov
dec
stc
cs
add
cltd
sub
movsl
xor
fadds
push
out
sub
jl
pop
inc
insb
idivl
mov
push
xchg
andl
mov
aad
push
jns
add
int
cmp
xchg
add
xchg
inc
cmpsl
pop
in
ja
mov
adc
cmp
xchg
sbb
mov
cmpsb
dec
ljmp
fimuls
sbb
jmp
xchg
push
lock
cmp
orl
pop
in
addr16
sbb
xor
mov
testb
orl
cmp
cmpsb
push
jb
dec
pushf
out
aam
sub
add
inc
xchg
ret
xor
cwtl
ljmp
jmp
xchg
and
dec
in
cmp
jge
mov
cld
jge
mov
or
ss
mov
lcall
inc
xchg
and
add
cmp
sub
sub
test
and
fadds
xchg
push
loopne
cmp
loope
fsubl
or
sbbl
loope
sbb
andb
data16
pop
pop
mov
pop
mov
fcmovnu
jno
jl
subb
pop
scas
add
cmp
flds
jnp
cmpsb
and
test
push
stos
sbb
and
insl
push
popf
sahf
push
mov
pop
lock
ret
xchg
cs
mov
dec
dec
mov
shrl
or
jae
mov
xchg
nop
wbinvd
mov
loop
xor
xchg
add
lret
pop
lock
jno
xchg
iret
data16
fisttpll
stos
movsb
cmp
dec
mov
jg
inc
fldcw
lahf
test
idivl
pop
sub
in
jae
pushf
xor
test
lcall
and
ror
cli
ret
hlt
sbb
dec
in
jecxz
dec
jae
jns
loopne
xor
loop
sub
inc
adc
cmp
movsl
leave
push
int
les
add
push
xor
jecxz
jbe
bound
and
or
hlt
pop
test
sahf
add
jne
lea
sub
fyl2x
into
pop
in
sbb
loop
pushf
stos
in
das
jp
sub
pop
mov
cs
mov
fidivs
mov
push
shrl
cmp
inc
adc
cli
and
xor
ficompl
push
cmpsl
jnp
inc
mov
bound
push
xchg
mov
push
daa
sbb
stos
add
iret
pop
jp
mov
ficoml
aas
lahf
loope
cmpb
std
xchg
sub
loop
adc
cmp
test
push
adc
pop
adc
mov
fildl
scas
push
pusha
out
hlt
or
push
pop
icebp
into
bswap
xchg
repnz
es
sub
orb
lret
push
sbb
xchg
mov
jp
pop
lods
pusha
fsub
lcall
xchg
jnp
jno
dec
addr16
push
inc
push
jg
mov
xor
and
fpatan
daa
insb
add
inc
dec
inc
mov
sub
dec
pusha
es
fld
and
jno
sbb
mov
repnz
dec
mov
jno
sti
mov
or
lock
loopne
mov
push
adc
sti
lds
inc
call
and
repz
loopne
test
stos
test
cmpsl
sub
cmpl
jl
mov
pop
jp
push
fsubrl
pop
adc
test
sahf
dec
sbb
es
repnz
lock
cli
jnp
clc
stc
call
add
repnz
xlat
and
aad
xor
mov
push
pusha
stos
adc
jae
sbb
adc
jl
pop
xchg
jl
cmp
stc
movsb
fdivr
mov
out
dec
lret
mov
test
add
push
mov
mov
dec
mov
add
push
rcr
out
out
lods
adc
inc
shr
in
mov
fsubrp
dec
lahf
adc
mov
andb
outsb
sbb
jbe
icebp
mov
fyl2x
hlt
in
push
imul
scas
ja
aaa
cmp
outsl
out
add
jecxz
xor
adc
push
cli
pop
jl
xchg
lretw
cli
xor
jno
imul
cmp
iret
inc
fldenv
mov
cmp
daa
jne
pop
lcall
imul
or
pop
inc
cmp
das
fmuls
push
adc
loope
scas
out
test
sub
das
jle
js
or
nop
jl
sarb
shr
xchg
clc
rorb
cmpb
dec
aam
jg
and
sbb
pop
loope
sub
fidivrl
push
xchg
rorb
ljmp
push
imul
jno
test
mov
notb
add
lret
movsl
mov
pop
fidivs
outsl
jle
push
mov
mov
dec
js
imul
mov
xchg
jbe
subl
hlt
push
lret
jae
push
mov
cmpsb
mov
cli
pop
loopne
jg
dec
test
leave
lret
mov
pop
popf
and
lods
bound
adc
out
mov
jmp
jnp,pn
dec
int3
ss
rorb
stos
enter
into
pop
mov
xor
lods
pop
imul
cmp
pushf
pop
nop
inc
and
pop
fcoml
or
sbb
test
rcr
mov
in
test
jle
les
fisubs
dec
inc
cmp
push
jge
xchg
pop
sar
scas
jmp
and
xchg
jb
push
inc
cwtl
mov
adc
outsb
xchg
cwtl
movsb
rorl
ja
jno
xchg
xchg
cld
inc
add
inc
pop
daa
cmc
jb
jmp
in
mov
pop
sbb
mov
sub
out
xchg
xor
push
sbb
inc
adc
and
pop
fsts
imul
aad
fs
mov
and
jge
es
andl
repnz
sub
je
add
pop
fisubl
rorb
push
mov
push
xor
inc
lret
enter
inc
mov
dec
mov
test
loope
out
lahf
cmpsb
sbb
in
je
fists
stos
mov
lods
pop
dec
push
jmp
les
xchg
fimull
add
mov
clc
dec
and
dec
xchg
out
push
push
xor
mov
xchg
lds
fidivrl
mov
mov
leave
arpl
inc
cltd
test
fld
pop
lcall
push
mov
dec
sub
bnd
aaa
cmp
jecxz
mov
sbb
enter
jae
inc
ret
push
and
adc
movsl
xchg
cmpb
hlt
xlat
in
adc
add
data16
dec
int
aas
fisubrl
movl
xor
cltd
dec
push
lods
mov
sbb
leave
out
cltd
cmp
loop
ljmp
cs
incl
or
sbb
imul
jecxz
dec
xor
xchg
adc
sub
inc
pop
call
inc
push
push
sbb
xchg
cmp
pop
mov
sbb
cmpb
and
jmp
sub
into
inc
mov
sub
outsb
aam
ficomps
imul
sti
test
ss
mov
push
pop
jg
movsb
or
cmp
aam
pop
loopne
sahf
shl
insb
fmull
mov
sbb
test
mov
scas
loope
mov
sbb
and
mov
repnz
jns
fistps
arpl
push
mov
push
or
repz
repnz
sbb
dec
pop
and
addr16
mov
and
sbb
rol
sub
inc
mov
loope
cmp
jnp
mov
mov
mov
or
adc
pop
push
sbb
mov
sti
push
jb
mov
pop
stos
pop
mov
dec
out
in
xchg
fstps
cmp
sub
and
mov
jo
cmp
out
sbb
pop
mov
xlat
clc
push
test
sub
inc
mov
sub
sub
dec
xchg
adc
popl
in
pop
inc
mov
mov
fs
cmp
mov
cmpsb
outsl
lahf
sahf
jge
popa
imul
inc
xor
xchg
mov
and
xchg
insl
cwtl
lods
jl
inc
dec
mov
divb
pop
push
jo
test
sarl
mov
xor
gs
insl
lret
jb
add
sub
adc
push
xchg
dec
mov
int
dec
stc
jg
ret
insl
xchg
xchg
icebp
and
mov
stos
inc
sbb
iret
jecxz
add
fchs
lods
push
mov
xor
loop
ja
pop
shrb
mov
les
jne
mov
aam
icebp
cmp
push
hlt
or
or
fwait
lret
enter
incb
stc
xor
sub
test
pop
lret
lret
arpl
sarb
iret
dec
push
cpuid
or
cwtl
dec
ds
aaa
pop
inc
cmpsl
aas
ret
test
leave
inc
addr16
fs
cmp
cltd
mov
push
pushf
mov
cmp
adc
mov
cmpsl
scas
xor
jb
out
js
mov
push
mov
data16
ret
rcrl
push
and
icebp
lret
sbb
pop
jecxz
mov
xor
imul
insb
in
imul
std
push
mov
mov
jae
orl
arpl
int
scas
xchg
cmp
xor
adc
sti
inc
icebp
insb
pop
aas
lds
icebp
push
or
sbb
into
push
inc
or
pop
leave
add
pusha
scas
fnstsw
mov
sub
inc
xor
sub
dec
sti
movsl
push
icebp
je
cmc
mov
icebp
sti
mov
adc
mov
scas
repz
mov
movsb
adc
repz
sarb
scas
idiv
sbb
sub
cmp
mov
jb
jne
cltd
push
jmp
fisttpl
jo
stc
aas
add
insb
out
push
dec
sbb
ret
push
movsb
arpl
rcr
mov
lock
xor
sti
out
cmp
lret
nop
mov
aad
cmp
movsl
test
sbb
dec
ds
inc
mov
fistpl
out
xchg
int3
pusha
lods
ja
pushf
repnz
rcrb
inc
int
test
lret
cmp
rolb
push
int
les
pop
pusha
lret
fdivr
or
add
xor
cmpsb
fstl
fwait
xchg
jp
lcall
jmp
fs
ret
xor
jle
outsb
nop
cmpsl
jbe
repnz
outsl
into
imul
jne
jne
xor
and
xchg
fnsave
xchg
or
add
loop
rorb
xchg
or
imul
dec
mov
fucomip
bound
imul
inc
inc
notl
xchg
dec
in
push
mov
mov
faddl
js
repz
loope
mov
xor
imul
gs
fadd
sahf
pop
jne,pn
les
mov
in
scas
cmp
jb,pn
xor
nop
xor
inc
pop
outsb
xor
std
dec
inc
xor
lret
adc
xchg
in
jp
and
les
pop
data16
fsubl
lahf
jg
ficoms
sbb
out
xchg
ljmp
scas
add
xchg
adc
imul
and
add
leave
pop
sub
xor
insl
test
out
ret
out
adc
bound
add
in
ficoms
mov
inc
and
or
adc
in
movsb
dec
pop
gs
adc
push
rcrb
and
sbb
les
in
bound
mov
mov
roll
inc
outsl
sti
shl
gs
cltd
stos
repz
int3
imul
push
repnz
sbb
dec
sub
pop
mov
or
decl
cmc
add
shr
pusha
enter
fcmovnb
fstpt
fldcw
add
dec
push
push
mov
fimull
jmp
stos
cltd
aad
and
inc
repnz
dec
arpl
clc
out
imul
add
mov
push
pop
mov
cmp
sub
movsb
int3
xor
idiv
push
call
mov
or
loop
xlat
push
popa
insb
xchg
nop
mov
cmc
dec
mov
cmp
and
mov
in
push
fs
out
dec
xchg
rorl
jne
hlt
ja
pop
lahf
dec
mov
or
test
out
pop
mov
dec
js
pop
out
iret
sbb
cmpsb
fwait
push
mov
xor
xor
arpl
xchg
xchg
pop
es
adc
out
sbb
inc
xchg
dec
mov
ss
push
lds
or
cmp
ljmp
mov
mull
dec
mov
out
inc
subb
jne
lods
inc
sub
push
imul
pop
push
or
cwtl
mov
mov
mov
mov
mov
mov
mov
insb
test
sarb
inc
xor
icebp
sbb
or
or
mov
pop
sub
xor
lret
or
aam
mov
push
xor
pop
and
pop
mov
lea
xor
jmp
jns
fs
outsl
insb
inc
inc
jae
aaa
test
and
insb
jo
stos
mov
popa
out
imull
cmp
insb
push
rolb
imul
pop
push
pop
stos
loope
xor
xchg
jb
or
pusha
add
jle
out
mov
daa
jnp
cmc
dec
sub
pusha
stos
mov
mov
pop
dec
lahf
mov
sahf
mov
xchg
push
pop
pop
fwait
sub
popf
mov
testl
add
out
pop
lds
jecxz
fistpll
push
ja
fs
add
xchg
inc
je
xor
cltd
sub
push
in
mov
jnp
and
mov
gs
std
arpl
lock
or
inc
sub
inc
mov
and
inc
pop
dec
mov
mov
leave
lahf
mov
je
mov
push
adc
mov
pop
mov
adc
and
out
xor
mov
xor
outsb
in
std
mov
xor
lods
pusha
imul
repz
dec
loopne
es
repz
push
xor
in
lods
pop
fwait
jge
cld
ret
push
lret
out
les
repz
sub
cld
test
jle
aas
and
and
mov
mov
imul
daa
lock
lret
mov
mov
and
push
or
xor
push
ret
cli
ja
push
mov
popl
push
jg
or
shr
inc
sbb
sbb
notb
ret
mov
cmp
rcr
push
in
lds
adc
in
inc
arpl
cmp
dec
popa
or
testb
int
dec
call
sub
out
imul
cs
sub
ja
test
mov
sbb
add
cmp
pop
and
cs
test
xor
jns
mov
fnsave
mov
dec
mov
call
lods
xchg
inc
cmp
mov
jge
adc
aas
pop
pop
xchg
inc
ja
ss
cmp
jns
jmp
inc
notl
jb,pn
popa
xchg
mov
jmp
mov
and
adc
repz
or
addr16
mov
add
outsb
cltd
popa
pop
stos
adc
fdivrl
iret
jle
jge
sbb
cmpsl
rcrl
jno
jnp
mul
aad
push
cli
push
and
insl
mov
stos
pop
inc
lahf
and
adc
sti
dec
lahf
mov
mov
das
lds
or
mov
movsb
pop
adc
or
push
outsb
jge
xor
mov
and
es
outsl
jne
sbb
xchg
and
lea
cmpsb
pushf
jmp
in
push
push
pop
push
cmp
mov
xor
push
loope
xor
and
jae
data16
fwait
xchg
and
sbb
test
jns
popa
push
mov
daa
imul
jmp
arpl
scas
rcl
mov
rolb
push
loopne
inc
insl
fiaddl
negl
mov
mov
dec
inc
sub
xlat
mov
in
and
roll
out
push
int
and
pop
jo
or
aaa
pop
lods
pushf
inc
test
mov
ret
int
loopne
cmpsb
icebp
out
mov
sub
imul
lock
add
shrb
lcall
mov
lods
adcl
cmp
jecxz
sbb
push
mov
andb
pop
jno
popa
cs
xor
ja
cmpsb
jne
xchg
xchg
cmp
aam
pushf
sub
repnz
pop
adc
sub
and
gs
negb
add
xchg
pop
mov
sbb
mov
dec
adc
jecxz
faddp
shlb
mov
sahf
cmp
and
stos
mov
sub
or
dec
mov
jnp
int
daa
and
cmp
xor
xor
hlt
addb
dec
cmp
test
sti
cwtl
inc
jb
mov
sub
icebp
inc
jg
xor
inc
sub
lods
jl
push
xchg
stc
pusha
loopne
test
out
imul
flds
es
jb
pop
in
int3
into
cwtl
out
xor
leave
leave
mov
notl
test
lret
sub
mov
out
jbe
add
jg
arpl
xchg
out
push
mov
pop
pop
sbb
adc
sbb
hlt
and
adc
mov
xor
insl
sbb
fsts
aad
rorb
ja
cltd
mov
mov
test
cltd
cmp
sbb
push
ds
mov
sub
push
sub
sub
mov
and
adc
pop
fs
fisubs
int
repz
mov
test
sbb
es
sbb
in
lea
xor
cwtl
push
dec
shrb
jne,pt
push
or
in
mov
movsl
repz
inc
sahf
mov
xor
fwait
cltd
xor
sub
ret
pop
mov
cltd
ds
imul
inc
or
jae
mov
pop
loope
or
popf
or
mov
icebp
outsb
jb
shll
sub
or
outsl
jnp
mov
shrl
push
stos
in
pop
cmc
rcl
add
sarl
int
adc
lods
cmc
pop
xchg
bound
jp
adc
or
pop
pop
popa
aaa
pop
mov
sub
scas
daa
std
jae
mov
jle
sub
loop
cli
leave
pop
sub
pop
cltd
or
mov
lahf
fwait
mov
mov
push
ds
mov
pop
int3
lret
sbb
arpl
dec
lods
mov
dec
push
push
pop
push
lds
and
mov
pop
outsb
repnz
xchg
mov
jnp
stc
mov
dec
popf
adc
stos
divl
insb
inc
imul
cmc
lcall
dec
adc
repnz
mov
daa
mov
jmp
stos
insb
add
aad
mov
jecxz
push
sub
push
sbb
iret
int3
add
outsl
inc
push
dec
retw
adc
mov
add
jbe
outsb
mov
repnz
cmp
push
rorb
or
fldpi
icebp
mov
jnp
adc
push
adc
jmp
mov
mulb
repz
xchg
push
sub
nop
push
pop
ja
dec
rcl
mov
cmp
sti
int3
test
push
out
add
cwtl
inc
mov
sub
jmp
int3
iret
xor
dec
out
ret
sbb
subl
jl
dec
push
mov
sub
and
sbb
sub
das
adc
jg
aas
je
mov
xchg
in
insl
mov
aas
les
push
dec
shl
sub
iret
test
inc
pop
mov
int
cmp
xlat
jp
adc
jbe
test
ret
lret
sub
xchg
xchg
ja
rorb
out
or
sarb
hlt
xchg
push
inc
popa
mov
xor
rolb
mov
add
int
pop
adcb
leave
push
out
xchg
mov
test
cltd
cmp
cmp
test
mov
xchg
movsl
aas
bound
and
cli
movsl
rorl
pop
out
scas
shll
shll
in
push
xor
sbb
and
push
cmp
inc
test
aam
dec
scas
popf
idivb
adc
xchg
les
and
movsb
push
mov
pop
stos
test
sub
sarb
add
mov
mov
imul
jns
clc
xor
cmovae
loop,pt
and
dec
rclb
imul
mov
mov
aam
mov
mov
mov
arpl
inc
ds
inc
mov
jl
pop
aaa
add
notl
mov
xlat
sti
cmp
jp
iret
ja
mov
inc
scas
cmpsl
mov
aam
sub
jnp
repz
jnp
sbb
or
push
decl
cli
sub
xchg
lods
dec
fdivs
mov
les
int3
xchg
mov
mov
dec
jne
stos
cwtl
xor
popf
mov
in
int3
and
repz
bound
lea
sbb
icebp
iret
xor
repz
rcr
xlat
imul
mov
mov
iret
xor
adc
xor
xor
aam
add
sbb
xchg
rcrb
mov
cmp
mov
inc
scas
jle
mov
daa
enter
leave
mov
push
mov
orl
imul
cmp
adc
pop
jno
data16
aaa
mov
pop
dec
adc
mov
pop
adc
pushf
iret
sub
lret
pushf
add
jp
cmp
daa
stos
sub
pop
outsl
push
cmpsb
lods
out
jp,pt
push
push
clc
fistps
popf
add
jno
insb
movsb
outsb
inc
jle
rcll
out
mov
mov
add
clc
enter
push
cmc
loopne
push
xor
xchg
mov
mov
test
loopne
cmpsb
add
push
movsl
or
sub
xchg
cmp
push
js
std
push
fnstenv
lret
lea
stos
rcl
dec
out
sbb
std
imull
inc
and
xchg
xchg
js
cmp
int
jno
fwait
aad
inc
int3
fwait
nop
pop
pop
pop
popf
lahf
cmpsb
loope
adc
mov
stos
iret
mov
add
test
fistpll
add
inc
push
cmp
push
sbb
adc
mov
sahf
jne
or
or
sub
jae
cmp
fistl
adc
into
mov
outsb
mov
iret
dec
lcall
jp
inc
shll
lock
or
shll
gs
lret
xchg
je
sub
inc
sub
out
aam
loope
adc
lods
call
insl
lret
sub
mov
inc
push
dec
mov
adc
mov
shr
jp
push
jle
addr16
shlb
scas
stos
xrelease
jae
adc
jnp
inc
leave
mov
mov
jmp
insb
sbb
mov
scas
pop
pop
add
in
lret
lret
aad
cmpsb
inc
xchg
fstl
out
loope
jnp
mov
imul
sbb
faddl
adc
sub
mov
and
in
faddl
pop
lahf
jb
xchg
xchg
sub
mov
inc
movb
sarl
mov
cmp
incb
popf
pop
dec
cltd
fildl
or
mov
mov
jne
jecxz
lods
fistps
lods
mov
movsb
dec
shrl
lock
jmp
mov
pop
clc
sbb
and
xor
mulb
int3
dec
inc
pop
inc
fnstenv
sbbl
sarb
rolb
loope
fs
mov
adc
orb
loope
movsl
cmpl
popa
dec
push
repz
mov
push
in
repz
clc
and
or
lock
add
outsb
cmpsl
sub
dec
rolb
insb
aam
mov
cmp
sbb
dec
aaa
fwait
lods
lret
jbe
xor
adc
inc
sub
mov
xor
cmp
fs
scas
popf
cmpsb
dec
ret
push
repz
fwait
mov
pop
ja
dec
push
and
cld
scas
rcrl
push
dec
mov
fsubrl
movsl
adc
add
xchg
inc
pop
outsb
imul
cli
xor
daa
lret
mull
fdivr
ret
sub
push
aaa
mov
lahf
jb
mov
push
out
insl
add
aas
dec
loop
xchg
mov
sbb
ret
dec
nop
in
jg
mov
stc
mov
loop
movsl
sbbb
mov
leave
xchg
sub
ss
std
pop
outsl
xchg
lods
cmp
lods
cmp
fs
rol
and
ret
cmpsl
mov
dec
pop
xor
jge
pusha
imull
and
cmp
mov
xor
rcl
cs
andl
cmc
xor
in
add
mov
xor
pop
faddl
sub
adc
ds
mov
xor
cmp
test
inc
out
cmc
inc
push
jge
cld
adc
leave
xchg
ja
add
and
mov
int3
mov
mov
xor
fdivs
mov
gs
lea
mov
mov
test
xchg
mov
fsub
packuswb
xlat
xchg
ljmp
aaa
xchg
jl
out
xchg
mov
sahf
loopne
pop
es
push
loop
jge
sbb
dec
and
mov
incl
daa
xor
movsl
xchg
mov
test
sbb
cmpsl
testb
lock
aaa
add
out
mov
movsl
dec
imul
xchg
jnp
mov
popf
xchg
cmp
jae
pop
pop
mov
testl
mov
test
or
cmp
inc
imul
ss
scas
xchg
pop
pop
cmp
shrb
sahf
cmp
decb
xor
aam
xor
add
adc
rol
add
mov
into
jle
leave
push
lea
pop
mov
shll
add
xor
or
fldt
dec
jle
xor
stc
repz
mov
testb
cmc
test
xchg
pop
rolb
mov
sbb
rorb
leave
or
ret
cs
add
test
xor
les
aam
movsb
sar
mov
mov
and
fdivr
and
cmp
pop
shl
sub
inc
sti
sbb
scas
int
sbb
cmp
dec
push
ficoms
xor
sub
sub
push
xor
cmp
iret
aam
and
cltd
adc
mov
fwait
outsl
xchg
mov
push
sub
xor
inc
fs
adc
in
sbb
fwait
into
enter
sub
inc
mov
ret
push
mov
clc
sub
movsb
jne
sub
xchg
sbb
xor
repz
fiadds
pushl
add
js
adc
jno
insl
dec
pop
lock
adc
pop
cmp
out
or
repnz
ror
stc
and
mov
gs
lds
cmpsl
das
add
fldcw
ljmp
xchg
lret
jae
pop
adc
xchg
or
lods
adc
ss
mov
cmp
daa
cmp
mov
add
mov
insl
lret
call
push
mov
fstpl
xchg
jbe
pop
mov
mov
sbb
add
dec
push
repz
insb
ret
fsubrl
jno
mov
movq
adc
enter
aas
xor
sub
mov
sbb
jl
lret
je
out
xchg
shlb
repz
pusha
sub
xor
push
adcb
ret
mov
mov
xlat
jge
faddl
cmpsb
sti
ljmp
sbb
lds
jb
dec
mov
mov
xchg
cld
call
hlt
xchg
scas
push
adc
orl
out
xlat
push
int
sub
daa
and
pushf
mov
push
hlt
dec
leave
jmp
jmp
jmp
imul
xchg
stc
in
ja
mov
cmpsl
dec
gs
sub
test
lock
rclb
popf
movsl
jmp
push
pop
dec
inc
pop
stc
stos
in
shlb
cli
loop
push
das
xor
mov
out
lods
xor
sahf
mov
pop
pop
lds
cmp
aas
sub
lret
rolb
add
lcall
mov
add
fiadds
daa
cmp
adc
sub
inc
inc
xor
add
and
xchg
sub
nop
mov
dec
push
dec
sub
jno
roll
mov
repz
push
jo
sbb
sub
mov
std
sbb
jge
push
sub
sbb
lret
hlt
insb
lea
dec
dec
shlb
mov
loope
push
mov
jno
cmp
mov
add
dec
mov
mov
test
xchg
xchg
inc
add
loope
dec
mov
push
jae
rcrl
addr16
insl
xor
scas
fidivrs
mov
xor
mov
ljmp
es
mov
push
das
xor
iret
lcall
sbb
push
sbb
loope
rcl
sub
mov
popf
fistpll
mov
lods
sbb
pop
lret
dec
aad
cli
imul
jl
xchg
bound
aaa
mov
shlb
lea
pop
mov
push
and
pop
add
add
adc
inc
lds
cmp
xor
add
cmc
sub
sbb
aad
stc
jge
das
mov
loopne
mov
test
ja
loop
lods
mov
ss
jnp
mov
jmp
and
inc
push
inc
das
cltd
dec
pusha
inc
push
enter
push
rcl
pusha
stos
add
fwait
cmpsb
fisubl
cli
xchg
add
xchg
xor
push
sbb
ds
xlat
out
pop
stos
inc
orb
testl
jae
jae
aam
pop
xchg
rclb
scas
inc
inc
sbb
mov
sbb
add
ss
and
fs
loop
movsb
cmp
add
inc
jmp
dec
sub
mov
js
mov
push
mov
mov
daa
loope
gs
sbb
xor
mov
scas
cmpb
rolb
xor
sub
pop
outsl
js
dec
jnp
add
mov
xor
mov
inc
jecxz
mov
pop
cmp
pop
xchg
dec
loopne
jg
loopne
add
in
test
mov
mov
mov
adc
aaa
pop
lock
push
add
xchg
xchg
push
lods
mov
fwait
xor
sarl
sti
add
call
movsb
pop
jnp
jbe
stc
nop
mov
sti
pusha
xlat
rcrb
loop,pn
lahf
xchg
mov
sbb
adc
out
data16
ljmp
sbb
xchg
in
rcll
test
and
fldcw
jp
mov
add
mov
pop
and
xchg
jb
in
cmp
insl
inc
js
repnz
stc
jp
cltd
pusha
lret
out
pushf
imul
aad
or
lods
test
mov
pop
or
push
dec
aaa
dec
hlt
icebp
jb
and
push
aad
fs
sahf
lock
lret
mov
adc
adc
cs
imul
in
insb
xlat
dec
cmp
pop
adc
pushf
xor
lods
jns
pop
xchg
not
xchg
jo
shrb
sti
add
stos
lock
add
int3
lret
bound
lock
push
shrl
out
inc
sbb
mov
add
mov
jbe
mov
mov
out
inc
mov
aaa
jmp
daa
popf
and
sub
gs
in
dec
imul
aaa
cli
pop
icebp
mov
mov
cmpsb
xor
and
incb
sti
xchg
std
bound
lret
push
in
scas
subl
mov
adc
ja
adc
daa
cmp
jns
dec
in
lcall
pop
sbb
enter
fiaddl
xor
sbb
inc
cmp
int3
xchg
fnsave
cmpsl
sub
sub
lahf
addr16
cmp
push
mov
fisttpl
loop
data16
das
jp
lods
inc
mov
fistpl
fimull
test
mov
fldcw
xor
inc
push
movsl
clc
pop
push
add
pop
xchg
inc
stos
lods
xor
cld
pop
inc
adc
cmpsl
mov
mov
fidivrs
mov
xchg
aaa
cs
ljmp
add
ja
addr16
scas
mov
pushf
add
test
leave
xchg
inc
imul
sbb
mov
fmull
push
adc
loopne
mov
jge
inc
jne
addr16
jmp
mov
dec
mov
movl
rcrb
daa
lock
loopne
fisttpl
pop
stos
adc
mov
sbb
addl
pop
xchg
out
fcmovnu
push
fisttpll
mov
out
push
jns
push
js
idivl
lahf
or
mov
negb
aas
mov
inc
jnp
ds
sbb
or
movb
xor
or
ret
adc
fwait
lret
mov
fdivs
inc
addr16
cmp
loope
mov
jnp
xchg
insb
out
sbb
daa
gs
adc
pop
ret
movsb
mov
and
cltd
xor
pop
jne
jecxz
sub
daa
mov
push
sahf
and
jo
loopne
adc
xor
gs
adcb
xchg
mov
fcoml
test
xchg
push
jmp
cs
xchg
pusha
loop
mov
cmp
mov
fnsave
insl
add
fsubrs
and
push
lods
push
js
scas
stos
daa
xor
pop
lret
xor
jmp
dec
lret
jo
std
jo
bound
xlat
outsb
pop
test
cmc
outsb
in
mov
or
cmp
push
out
cltd
outsb
add
scas
mov
dec
loop
rcrb
rcr
mov
jecxz
jne
stos
cmpsb
push
add
jle
lcall
les
adc
loopne
mov
enter
fs
in
fsubrs
jno
gs
ss
mov
cli
and
jnp
mov
pusha
mov
sbb
or
loope
cmp
or
dec
cmp
in
pop
dec
test
jle
in
push
cltd
xor
lock
and
in
mov
mov
pop
and
mov
push
pop
jmp
insl
jno
or
ret
ret
shld
push
dec
filds
sub
push
gs
xchg
mov
mov
fldenv
pop
movsb
cmp
pop
push
pop
xchg
out
lods
inc
pop
incl
das
and
and
lahf
je
subl
pop
fwait
stc
or
and
insl
inc
ficompl
mov
fwait
xor
or
scas
ja
adc
icebp
pusha
mov
addr16
mov
fs
jne
fisttps
mov
push
push
repz
inc
xchg
dec
jle
daa
movsb
pushfw
mov
dec
mov
sub
fildl
inc
xor
es
fwait
sub
popa
jl
sub
leave
push
js
in
xchg
push
fadds
in
rorb
popa
lcall
xlat
dec
out
mov
adc
orl
jae
jg
xor
ljmp
adc
scas
add
xor
mov
enter
inc
cs
xor
bnd
cmc
push
pop
adc
cmp
sbbb
aam
daa
call
sti
lods
mov
ds
push
popf
push
cwtl
popf
and
leave
stc
ficompl
jl
mov
movsl
clc
cmp
and
jns
jl
push
iret
sbb
jno
jbe
loopne
jmp
dec
ret
stos
fsubrl
mov
xlat
cwtl
mov
pop
mov
test
cmp
xor
add
pop
and
fadd
lret
mov
xchg
out
sahf
lahf
cmp
jnp
sahf
mov
stc
xchg
ret
sub
orb
test
jne
and
push
ds
arpl
nop
pop
push
clc
fcom
loop
jns
xchg
shlb
sub
dec
enter
loopne
std
and
cli
sarb
out
jl
mov
pop
iret
adc
mov
push
arpl
sbb
movsl
mov
stos
cld
sbb
pushf
fdivl
jle
lea
daa
or
add
js
nop
pop
pop
insl
andl
popa
push
sub
sbb
push
les
das
inc
add
jle
fildl
mov
push
dec
cmp
or
inc
out
mov
push
outsl
std
lret
lods
cli
pop
lock
mov
daa
jl
push
dec
mov
jo
iret
fimull
sbb
sbb
rcll
int
adc
lock
add
or
stc
push
adc
jp
fadds
fmulp
mov
addr16
jge
adc
pop
dec
orb
lret
sahf
mov
ljmp
inc
jae
push
leave
stos
sbb
out
xchg
jae
mov
sbb
and
xor
clc
jl
cltd
inc
lea
pusha
jns
icebp
scas
insl
jo
cli
cltd
pop
dec
sbb
sarl
aam
inc
lds
scas
dec
lods
xor
lods
test
mov
push
loope
std
and
xchg
cmpsb
xor
xchg
push
push
jl
xchg
mov
pop
jge
add
ret
int3
and
cmp
mov
fadds
dec
add
movsb
or
push
mulb
idivb
dec
inc
add
mov
shll
mov
stos
push
lds
jns
pusha
fmul
stos
cltd
mov
push
test
outsl
insb
pushf
cld
and
insl
cwtl
xor
aam
repz
jo
jle
adc
cmp
xor
loop
adc
test
cmp
and
mov
fsubrl
lea
xchg
inc
mov
js
cmp
and
das
mov
cmpsl
ljmp
mov
dec
push
mov
inc
push
pmuludq
mov
gs
js
jno
out
movsl
mov
mov
jns
mov
dec
xor
int
pushf
or
inc
dec
out
insl
dec
adc
outsl
notl
cmp
out
xchg
repnz
mov
push
test
and
inc
test
push
imul
sarl
clc
in
ljmp
test
push
dec
xchg
int3
rol
adc
imul
mov
int3
mov
ret
les
cwtl
cmp
mov
sub
mov
cmpsl
sarb
sub
jno
jnp
out
sub
shlb
fucom
in
bswap
sbb
test
sbb
dec
or
ret
stos
outsl
jb
adc
cmp
ljmp
xchg
loopne
mov
call
mov
jge
in
cmp
cmp
insl
mov
pop
es
mov
mov
mov
in
jae
rolb
insl
pop
pmullw
clc
xchg
xchg
dec
or
cmp
adc
add
pushf
negb
ds
inc
aam
push
imull
ror
ds
mov
fdivs
int
and
ja
mov
imul
adc
mov
or
add
loopne
xchg
nop
pusha
movsb
lods
mov
and
push
imul
inc
aam
jmp
mov
push
cmc
inc
or
aas
movsb
add
int3
xchg
pop
push
daa
stos
jle
or
in
outsb
push
mov
in
jg
mov
scas
push
aam
sbb
push
xlat
jnp
push
or
jmp
data16
cmp
jbe
shrb
mov
xchg
pop
inc
inc
lods
and
outsb
jbe
faddp
in
mov
adc
out
cmp
outsl
incl
fldenv
js
fs
insl
jle
jle
sub
adc
or
int
pop
mov
inc
scas
int3
lods
mov
add
mov
daa
sbb
test
mov
jbe
mov
cmc
and
in
cmpsb
hlt
call
xchg
pop
call
push
mov
push
xchg
into
lret
push
add
adc
enter
adc
mov
mov
inc
cld
add
xchg
push
add
fisttpll
roll
in
hlt
dec
sub
pop
mov
adc
pop
adc
or
jg
add
xor
aad
mov
or
fadd
adc
jp
jne
sub
inc
insb
mov
dec
jg
add
mov
out
pop
or
aad
pop
aas
call
jp
cmp
or
dec
or
push
jmp
push
push
mov
daa
jg
fwait
pop
es
ss
iret
jns
inc
enter
mov
imulb
xchg
aad
mov
fwait
mov
cmp
mov
sub
stos
mov
call
or
push
out
inc
jne
mov
push
faddp
insb
out
and
stc
mov
scas
pop
push
iret
adcl
dec
add
xchg
mov
arpl
inc
cmp
mov
aaa
scas
jbe
or
push
xchg
addr16
sti
cs
scas
popf
or
stc
jb
in
pop
sbb
and
lret
imul
outsl
mov
dec
pop
mov
fistpll
cli
push
push
pushf
dec
addr16
xor
pop
rorb
or
and
addr16
cltd
fidivrl
das
stos
pop
mov
xor
adc
mov
add
adc
cli
fdivrs
xchg
shlb
mov
cmp
cmpsl
decl
std
mov
pop
sub
stos
dec
fcmovne
loopne
jbe
mov
jbe
aas
lret
out
pop
push
cmp
and
dec
jmp
mov
inc
not
insl
sub
inc
fwait
dec
hlt
mov
pop
out
pushf
adc
inc
out
xor
pop
arpl
xchg
inc
dec
in
mov
mov
inc
pop
dec
out
arpl
xchg
pop
insl
add
mov
cmc
out
mov
fiadds
jge
sub
stos
inc
xor
xor
enter
mov
jge
icebp
fsubrs
cli
add
sub
lea
and
add
sbb
mov
int
stos
adcb
mov
sahf
xor
ds
push
jmp
xchg
inc
jo
jne
mov
in
mov
sub
lods
ret
sbb
or
cmp
mov
pop
out
loopne
call
xor
cmpsl
shl
scas
inc
pop
fbstp
popa
ss
mov
xchg
in
push
jmp
add
jae
sub
rol
inc
hlt
arpl
or
loope,pn
pusha
mov
out
loope
call
xor
out
scas
sahf
push
stos
imul
adc
inc
sti
push
movsl
sub
jae
int
loope
es
stos
inc
and
push
jp
enter
popf
xor
xchg
out
out
mov
fwait
sbb
lock
and
lds
xchg
sub
ficomps
dec
insb
xor
bound
sbb
xor
push
mov
jge
mov
jl
lcall
add
outsb
adc
cmp
mov
push
das
aam
cltd
stos
dec
mov
shl
mov
mov
cltd
and
in
mov
add
inc
dec
push
shll
lcall
in
fisubl
or
pop
scas
inc
sub
sbb
xor
cmp
rol
push
add
jb
cmp
nop
daa
mov
xchg
stos
lods
scas
inc
fmulp
sbb
xor
cmp
dec
push
ljmp
movsl
or
hlt
mull
mov
dec
dec
inc
fstpt
mov
fwait
fwait
stc
int3
mov
adcb
adc
xchg
sahf
xor
xchg
xchg
mov
ret
fidivl
out
loopne
shrb
sbb
mov
jno
iret
mov
rolb
jns
stos
inc
je
fidivl
xchg
fs
movl
lea
inc
ds
add
ret
sub
sbb
call
imull
lcall
mov
sahf
imul
ret
lahf
lahf
ss
ljmp
mov
fdivl
outsb
mov
pushf
jnp
out
xchg
sbb
and
addr16
lock
xor
loop
andl
je
jbe
out
push
ljmp
push
out
clc
sbb
repnz
iret
fidivs
dec
dec
out
add
xorl
mov
into
inc
fdivrp
pushf
xor
int
inc
pop
hlt
xor
fidivrl
or
adc
cwtl
das
cmp
aas
cld
dec
mov
lds
cmp
jnp
cli
xchg
imul
outsl
push
sbb
cmp
out
ret
pop
sti
out
or
push
mov
jnp
cmc
mov
call
das
in
mov
mov
jb
mov
mov
jbe
in
orl
outsb
sbb
addr16
lock
xchg
repz
repnz
jecxz
jl
pusha
not
loope
pop
adc
arpl
mov
jmp
add
pop
cmc
mov
shlb
shlb
add
loop
sar
xchg
add
pop
icebp
int3
fldcw
or
dec
loop
xlat
sbbl
ret
mov
cmpsl
or
mov
or
push
ljmp
arpl
pop
fcmovne
gs
aam
xor
aad
icebp
popa
or
dec
out
xchg
or
fs
mov
out
or
sub
popa
imul
or
pop
push
xlat
or
sbbl
jne
insl
inc
ficompl
mov
push
mov
lahf
andnps
sub
xchg
jae
fcoml
dec
out
aam
xor
out
xchg
sub
fmull
mov
aam
cmp
push
push
in
mov
xchg
bswap
xor
mov
mov
call
cmpsb
shll
lret
inc
fcompl
loope
push
adc
dec
iret
mov
pop
add
out
xchg
inc
loope
ss
inc
fiaddl
ss
decb
rorl
add
xchg
pop
notb
xchg
pop
hlt
add
dec
sub
out
push
mov
aam
repnz
mov
jmp
fmull
push
and
arpl
add
and
ficoms
or
imul
jle
jo
fnstsw
inc
shl
mov
movsb
cmp
aaa
into
or
jnp
or
inc
inc
aad
inc
push
test
or
in
sub
daa
mov
fst
or
xchg
fcompl
mov
aad
test
adc
jns
pop
scas
adc
out
insl
iret
sbb
bound
xchg
popa
push
jmp
dec
and
push
jmp
push
ljmp
or
xchg
stos
push
out
dec
mov
jg
adc
dec
in
mov
popl
dec
cmp
cmp
lock
xchg
repz
fninit
dec
ret
pop
jp
cmp
aam
out
sbb
inc
fisttpl
fidivl
leave
int3
imul
pushf
and
xchg
inc
pop
jb
sub
mov
out
xchg
test
inc
pop
inc
fmuls
addr16
popf
lea
std
inc
dec
loop
add
jb
pop
negb
jb
leave
fs
push
ljmp
and
lods
dec
dec
out
fidivs
mov
jecxz
aad
enter
jecxz
shrl
mov
jecxz
fcom
dec
inc
fidivrs
lds
inc
fdivrs
mov
jbe
mov
cmp
stos
fs
into
movsl
mov
jnp
pop
cmp
inc
inc
mov
add
mov
mov
test
inc
xor
xor
inc
mov
pop
fwait
push
add
cmc
mov
lods
push
popf
push
mov
sbb
dec
popf
xor
mov
fwait
cwtl
add
jns
es
push
mov
test
fisubs
mov
ret
lods
inc
hlt
adc
pushf
cltd
pop
cmc
mov
sub
test
out
sbb
sub
lods
inc
stc
frstor
mov
cwtl
adc
les
arpl
mov
test
ret
lods
inc
hlt
sub
pushf
cltd
loopne
rolb
les
in
and
sbb
ret
mov
lods
inc
cld
mov
subb
add
cmp
sub
iret
out
sbb
pmulhuw
lods
inc
clc
ret
stc
mov
add
jbe
dec
sub
repnz
outsl
int
lods
inc
std
pop
push
ljmp
insl
rorl
jp
push
jmp
push
adc
insl
test
xor
cli
enter
test
cltd
mov
test
jns
dec
loopne
out
and
fst
imul
push
dec
in
mov
cltd
rcl
les
cmp
push
call
sbb
gs
imul
mov
cltd
lcall
js
pop
lock
in
and
or
cmc
lret
mov
repz
fimull
cmp
pop
mov
mov
int
mov
iret
arpl
mov
iret
lret
push
popf
xor
pop
nop
daa
nop
vmaxps
mov
add
in
pop
pop
es
ficompl
fucomi
or
add
orb
jnp
and
sbb
mov
jns
lock
fmul
inc
inc
fdivl
movsb
cmp
loopne
sbb
ret
cmc
add
jno
jmp
pop
addr16
inc
fdivs
sbb
and
pop
repnz
fidivl
outsl
jmp
fsubrs
mov
xor
cmc
imul
xchg
mov
pop
icebp
jae
andb
inc
fsubrs
adc
stc
divb
sub
add
out
shrl
jnp
aas
lods
loop
xor
mov
mov
pop
mov
mov
cwtl
das
mov
movsb
sub
xor
test
add
dec
jecxz
stos
cltd
xor
mov
push
std
adcl
xor
xchg
std
xchg
sub
iret
push
mov
xor
cwtl
aas
or
sub
xor
in
cli
xchg
sub
mov
xor
pop
inc
fimuls
xchg
sub
cmp
fnsave
xchg
sub
cmp
xor
stos
aaa
into
sbb
xchg
sub
aaa
cltd
xor
ss
notb
inc
xor
cltd
xor
aaa
das
cmpsl
jbe
sub
aaa
cltd
xor
lds
xchg
sub
mov
xor
inc
das
ss
sub
cmp
xor
ds
icebp
enter
lods
inc
jge
in
xor
cmp
repnz
inc
xlat
popf
icebp
ret
pop
loop
je
jne
xor
dec
sbb
ret
cmc
lds
pushf
mov
test
jne
sub
sbb
ret
cmc
adc
mov
popf
int
mov
mov
cwtl
das
sbb
shrb
rcrl
outsl
nop
daa
mov
inc
fnsave
lock
sti
xchg
lds
xchg
add
mov
out
cmp
imul
inc
ficomps
fcoml
or
dec
sbbl
add
sub
mov
push
loop
loop
into
data16
call
insb
dec
sbb
rcrb
mov
and
inc
fisubs
outsl
add
mov
mov
xlat
sbbb
jmp
lahf
xor
outsl
jle
push
lods
mov
ja
leave
xchg
or
sub
mov
jo
mov
jl
shrl
into
pop
out
sti
adc
ljmp
jbe
xchg
jae
sub
mov
cs
scas
inc
cld
add
dec
ss
shrl
jo
jg
stos
out
xchg
ret
push
popf
hlt
std
or
mov
subb
cltd
mov
popa
clc
jmp
addr16
and
adcb
inc
test
pusha
sahf
xor
lret
sarl
lret
add
jno
cwtl
stos
inc
lret
jno
xchg
bound
sbb
leave
xchg
cmp
push
xchg
ja
leave
push
pop
cmc
inc
xchg
mov
adc
out
xchg
fwait
popf
xor
popf
inc
fcmove
dec
ret
pop
inc
xchg
addr16
sbb
hlt
cltd
dec
loop
testl
test
sbb
sbb
fwait
push
out
int3
fistps
iret
xchg
pop
bnd
sbb
lahf
dec
out
add
mov
imul
push
push
jae
or
mov
adc
repz
pop
mov
mov
stos
pop
lock
loop
sbb
xchg
outsb
add
scas
sub
data16
inc
sar
or
test
jmp
pop
test
aaa
mov
imul
clc
stc
shlb
insl
add
jnp
pop
lods
push
lods
inc
mov
les
int3
jmp
jg
mov
int3
arpl
cs
mov
movsb
lods
inc
pop
cs
pusha
inc
in
test
sub
aaa
mov
pusha
in
outsb
add
lods
cmp
gs
jmp
js
and
enter
pusha
loop
push
jg
js
add
leave
pusha
pusha
fs
js
push
fdivl
imul
pop
jp
lods
lahf
cmc
mov
xor
jnp
push
inc
fildl
enter
jo
hlt
mov
sub
mov
xlat
cmpsb
jmp
test
cmp
or
sarb
dec
and
insl
add
mov
mov
fsubs
imul
dec
repnz
insl
add
mov
pop
xor
cmp
jg
aas
imul
xor
rcrl
in
xor
cld
xchg
out
inc
lret
je
movsl
dec
test
cmp
test
insb
dec
add
aas
and
cld
inc
rorb
outsl
mov
mov
aas
xchg
sub
jns
mov
aad
je
mov
mov
daa
cmpsb
sbb
cmp
clc
xor
mov
and
mov
das
cmp
xchg
mov
aas
xor
jo
insb
add
js
pop
jb
imul
push
notb
lock
inc
inc
jg
jmp
mov
lock
dec
jecxz
add
notl
dec
push
jmp
or
loope
out
adc
pop
repz
sbb
sbb
out
mov
or
fs
add
fimull
or
push
insb
fsubrs
lahf
nop
daa
adc
rclb
add
or
iret
or
inc
ficompl
stos
or
sbb
mov
comiss
lahf
aam
fwait
add
fldt
mov
xchg
fmuls
or
add
or
jp
in
and
xchg
fistpl
or
jl
adc
es
xchg
cltd
flds
sahf
or
sbbl
pop
test
sbbl
pop
insb
add
cmpsl
cmp
adc
mov
xchg
aam
cmp
sbb
mov
lahf
shll
andb
mov
xchg
popa
int
mov
aas
mov
jge
int
pop
and
and
in
int
sti
call
mov
lea
fnstenv
or
daa
jne
int
xor
jl
scas
mov
pop
insl
int
scas
mov
mov
inc
or
gs
mov
cmp
mov
in
lods
int
out
lock
icebp
mov
loop
mov
mov
es
lahf
xor
lods
je
sub
pop
cmp
cltd
xor
xchg
sub
add
dec
fidivl
jb
sub
lods
cmp
mov
and
mov
xor
lret
sub
jp
sahf
xor
push
xchg
sub
pop
mov
xor
adc
jno
xchg
das
sahf
xor
adc
lods
inc
cltd
scas
sahf
xor
sbb
sub
cltd
sub
xchg
sub
add
inc
fistpl
mov
push
test
adc
cmp
adc
xor
les
test
inc
ficoms
nop
daa
mov
daa
movsb
cmp
test
pop
push
mov
cmp
mov
xlat
imul
inc
mov
and
mov
inc
or
sarl
cld
xchg
add
cmpb
push
mov
inc
mov
or
mov
lret
or
mov
cmp
mov
fbstp
sub
sub
cs
shrb
mov
pushf
xor
stos
nop
daa
fcompl
test
cmp
xor
lds
lods
inc
xor
mov
add
inc
cmc
jge
les
xor
rcr
lods
inc
sub
sti
xchg
xchg
mov
pushf
loop
test
lds
les
sub
cmpsb
cmp
imul
popf
fcompl
inc
mov
or
pop
lahf
mov
cmp
mov
fsubrs
mov
ds
or
pop
xor
aaa
ss
xchg
sub
inc
movsl
cmp
sbbl
xchg
sub
stc
mov
movsl
cmp
test
pop
sbb
and
mov
lea
movntq
push
cmpsb
ds
aas
cmpsb
mov
fldenv
mov
add
pop
lcall
cmp
ds
movsl
lock
arpl
mov
pop
mov
and
push
fwait
mov
or
cmp
sahf
mov
test
ret
mov
popf
xor
mov
xchg
sub
sub
xor
fnstcw
lret
sub
or
jns
popf
xor
jl
dec
outsl
lcall
pusha
xchg
popf
xor
xchg
testb
xor
loopne
shll
imul
out
test
fsubrs
mov
jge
and
jae
add
lds
shrl
jno
aaa
bound
jno
push
test
push
add
jo
inc
mov
aaa
add
sub
xor
test
fwait
jb
stos
lods
inc
sbb
iret
es
sub
cmp
loopne
jne
sub
sbb
loope
test
lods
and
jae
pop
loop
dec
inc
shlb
pushf
sbb
mov
aas
enter
adc
jae
lods
into
gs
scas
xchg
loope,pn
adc
mov
shrl
sub
or
cmp
pop
shrl
stos
mov
fnstsw
mov
addr16
sub
mov
add
pop
push
scas
mov
enter
push
mov
les
sub
xor
outsb
add
xor
sub
fbstp
sub
movsb
test
mov
rclb
mov
pop
stc
xor
jmp
sbb
rcr
mov
jo
mov
daa
les
xchg
cmp
add
jmp
dec
xchg
test
out
mov
imul
or
mov
jg
or
mov
sub
loopne
rcrl
dec
loope
inc
in
js
push
lcall
and
sub
dec
ret
nop
pop
adc
push
or
jl
cltd
mov
fstpl
mov
cmp
lret
bound
pop
aam
jo
jmp
jno
pop
aam
imul
aaa
mov
xchg
popa
jns
mov
xchg
sbb
test
xchg
mov
inc
sub
mov
fs
sbb
sbbb
shrb
aaa
ret
loop
jecxz
push
adc
fdivl
lret
cld
mov
xchg
mov
fcompl
scas
or
cs
adcb
add
add
pop
mov
and
cmp
inc
stos
push
pop
repz
lret
int3
arpl
pusha
jp
xchg
push
jmp
push
mov
das
in
or
cmp
daa
mov
xlat
sub
into
add
vcvttpd2dqx
fstl
mov
cmc
or
in
and
movsl
icebp
add
lcall
out
mov
or
sbb
cli
ja
sub
movsb
push
xchg
add
into
mov
and
stos
in
mov
mov
cmpsl
imul
or
imul
test
sub
jecxz
cmp
mov
dec
pop
mov
pop
jo
sbbb
xchg
loop
ret
into
mov
xchg
push
and
mov
jne
jae
mov
mov
fistpl
or
sbb
pop
outsb
aaa
into
lahf
adcb
icebp
shll
inc
shrb
xchg
sub
mov
push
movsl
std
or
ds
sub
test
mov
mov
hlt
add
shll
dec
filds
test
std
fnstcw
test
sub
jecxz
inc
dec
mov
cwtl
xchg
mov
pop
mov
repz
push
ds
cmp
xchg
jns
pop
testb
push
loope
xor
sbb
lahf
ss
push
mov
add
faddl
xchg
das
xor
mov
cmpl
iret
lock
mulb
sub
lea
jle
ja
adc
enter
jmp
dec
in
cmp
jno
jb
add
mov
mul
push
lods
adc
test
lret
gs
pop
sahf
xchg
mov
in
icebp
fdivs
or
add
inc
sub
mov
mov
inc
xlat
call
or
cmp
jg
pop
jge
mov
popf
test
fwait
xor
leave
and
cli
add
fimull
outsl
xchg
clc
sahf
test
fidivrl
adc
in
orb
ds
inc
iret
insb
add
jmp
repnz
mov
mov
icebp
cwtl
insb
add
adc
mov
rcrl
mov
xor
pop
cmp
popa
clc
repz
fidivl
adc
sbb
lods
push
in
cmpsb
fs
fistl
outsb
daa
jns
fwait
push
inc
dec
in
jbe
dec
pop
jp
outsb
push
jl
add
jb
filds
ss
pop
testl
sub
dec
jb
dec
sbb
packssdw
das
xor
mov
sar
in
xchg
pop
orl
jns
les
dec
loope
out
jmp
mov
fsts
test
xchg
or
dec
fprem1
mov
outsb
sbb
jp
jg
ret
ss
sbb
sahf
ss
jae
sahf
outsl
add
ficomps
jne
cmp
std
movsl
pop
push
jb
sahf
adc
pusha
clc
push
out
sbbb
jbe
sub
outsl
add
cld
add
and
shll
mov
add
jecxz
jnp
inc
fmuls
push
in
mov
cli
xchg
xchg
fmul
pusha
xor
pop
repz
loope
sbb
mov
gs
sub
mov
mov
filds
jne
or
xor
pop
lods
pusha
push
mov
movsl
sbb
ror
popa
not
repz
cmc
nop
sub
std
mov
fstpl
or
pop
nop
sub
or
mov
or
das
and
popf
je
stos
mov
popf
xor
and
test
pop
nop
cmc
mov
fmul
popa
lret
imul
pop
jmp
cld
xchg
inc
xor
sub
scas
jnp
loope
shld
and
sbb
and
js
shrb
pushf
test
daa
jp
mov
inc
insb
jecxz
addr16
push
xchg
leave
leave
nop
divl
and
mov
gs
aad
inc
jp
adc
stc
pusha
jg
shlb
pushf
push
imull
jmp
mov
push
xchg
into
xchg
test
dec
adc
inc
mov
or
rolb
push
mov
mov
jmp
sahf
inc
adc
xchg
cmp
xor
iret
or
iret
jmp
loopne
xchg
adc
xlat
mov
ljmp
fiadds
push
cmp
mov
rcl
ja
push
movsl
stc
outsb
cmp
push
cmc
out
jne
and
mov
mov
ficoml
mov
cltd
pop
stc
pusha
mov
fnsave
or
mov
xor
addb
fsubs
into
xchg
inc
fwait
mov
jnp
enter
fildll
scas
arpl
stos
int
cli
popa
lods
ljmp
mov
inc
fdivp
scas
sub
out
in
addb
fwait
push
lretw
je
jge
xchg
daa
mov
mov
frstor
jns
dec
jp
xchg
test
pusha
std
lret
rorb
push
xorps
stos
sub
mov
xor
mov
mov
jge
mov
mov
sbb
cmc
mov
aas
mov
jns
pusha
push
mov
mov
and
mov
mov
push
testw
dec
outsb
cltd
ss
insb
pop
test
sbbb
jp
pop
gs
cmp
sti
lods
pop
notb
and
pop
lahf
cmp
shll
inc
test
inc
testb
icebp
pop
lcall
rcrb
mov
sbb
mov
inc
cmp
rcll
lea
add
inc
fisubrs
je
xlat
push
sub
and
ljmp
lahf
mov
sub
insb
lcall
cmp
popa
flds
andl
and
ret
pop
loopne
arpl
lds
fisubrl
push
pusha
loope
lcall
loopne
dec
sbb
mov
inc
fcomps
imul
or
les
ja
loop
xchg
sub
add
insb
lcall
dec
jmp
adc
pusha
xchg
or
cli
sub
xchg
lcall
pop
xor
adc
fnsave
dec
dec
imul
movsb
dec
in
push
xor
ret
jne
cmc
xchg
push
fisubrs
les
icebp
pop
out
adc
xor
sub
mov
in
cltd
inc
fidivs
fnstcw
pop
adc
lds
jg
push
xchg
pop
mov
ja
sub
lret
xlat
jecxz
mov
aas
push
sbb
in
cwtl
mov
cmp
repz
out
pop
rcrb
movsb
aaa
mov
push
in
adc
pop
pop
cmp
sbb
sbb
jmp
fwait
das
jg
add
mov
jnp
xchg
sub
sahf
test
dec
push
push
lds
cmp
clc
xchg
sti
add
ret
push
push
call
imul
jmp
cmp
dec
xrelease
dec
ret
push
cvtpi2ps
pusha
ljmp
mov
lret
cltd
lods
out
fnsave
int3
in
xchg
inc
fiadds
mov
mov
inc
mov
inc
arpl
cs
in
sub
lds
dec
les
cmp
cmpsl
sarb
adc
vprotw
cmpsl
int
inc
push
inc
xlat
pop
pop
pop
xlat
and
jbe
cmp
adcb
push
inc
jb
sar
gs
xlat
or
sub
pop
ret
sarb
cmp
mov
pop
inc
jg
shl
arpl
rcrl
test
push
sub
shll
subl
ja
stos
aas
rclb
jecxz
mov
stos
ja
sbb
ret
in
pop
add
std
dec
sub
pop
jns
sbb
mov
sti
outsl
xor
es
pop
pop
dec
add
and
lods
or
lcall
mov
iret
jge
es
out
cli
outsl
sub
scas
and
shlb
cwtl
adc
loopne,pt
push
negb
and
jno
dec
add
fcoms
ljmp
add
ret
fistpl
in
cltd
push
divl
mov
and
int3
cmp
popf
jg
lcall
scas
inc
clc
outsl
push
sti
jno
mov
int3
mov
aad
push
inc
xchg
mov
mov
pop
test
cmpb
or
je
mov
cwtl
sahf
push
popa
cli
jbe
cltd
mov
popf
pop
xlat
arpl
sahf
jne
jno
mov
pop
mov
lock
iret
andl
lcall
repnz
popa
dec
pop
xchg
dec
lahf
cmpsb
outsl
out
mov
mov
and
mov
dec
pop
adc
push
jno
jbe
inc
clc
mov
lret
sub
fstl
inc
stos
and
and
push
stos
and
in
arpl
addr16
outsl
and
xchg
arpl
loope
adc
das
popf
xor
adc
lods
insb
pop
adc
xor
mov
sub
stos
cmpsl
push
or
cmpsl
into
ljmp
es
ret
shr
jmp
js
nop
inc
push
xchg
cmp
mov
aad
pop
cli
jns
inc
cltd
adc
lret
pop
into
mov
rcrl
add
fcoml
faddl
sbb
outsl
mov
cmpl
sub
leave
enter
lds
leave
call
popf
sbb
aas
mov
xor
jo
xlat
fists
sbb
mov
pop
ret
fnstcw
iret
mov
in
arpl
movsl
lds
sbb
outsl
fstl
enter
sbb
lds
xor
mov
leave
ja
clc
out
sub
lcall
pusha
xor
icebp
or
fnstenv
and
jo
pop
pop
push
movsl
pop
adc
iret
inc
fstl
mov
pop
adc
pop
push
add
popa
fidivrl
rcrl
mov
pop
mov
push
in
data16
jns
mov
loop
add
repnz
add
std
ljmp
clc
test
xchg
test
sti
xchg
mov
roll
popf
cmp
add
mov
aam
cmpl
mov
lods
add
xchg
cmc
xchg
cli
xchg
push
or
popf
push
jnp
jns
xor
mov
and
xchg
cli
push
in
test
mov
inc
clc
xchg
imull
and
xchg
scas
aaa
cmp
mov
ret
push
and
or
cmpsb
lock
fdivrl
mov
cs
cltd
rolb
test
and
pop
ljmp
push
dec
mov
sub
inc
iret
xchg
xor
jno
xor
mov
xchg
ss
nop
xor
divb
xchg
xor
cli
mov
cmpsb
shlb
negb
add
cmp
sub
mov
dec
dec
xchg
xor
int
and
xchg
out
lock
adc
fs
add
aad
push
repz
push
stos
cmp
pop
sets
jne
call
push
dec
xlat
fs
sub
sbb
std
add
imul
jne
xchg
sarl
xchg
jns
mov
fldl
sub
bound
mov
xchg
and
roll
notl
push
push
add
bound
jb
nop
loopne
jnp
cld
mov
lret
add
mov
fisubs
js
adc
scas
js
push
scas
out
or
push
cli
xor
loopne
pushf
or
cld
mov
in
je
push
or
ds
adc
mov
xchg
out
inc
or
mov
stos
xor
fsubl
sarb
and
or
mov
call
je
in
sub
add
pop
mov
push
mov
mov
lea
jno
push
mov
push
aaa
popf
xor
in
cmp
lea
push
xor
leave
pop
jecxz
xor
xchg
cmp
pop
daa
lods
xor
pop
in
jae
test
inc
or
dec
pop
incl
dec
adc
mov
cmp
push
push
stc
addr16
mov
push
ljmp
or
mov
mov
shrl
scas
jns
xor
rcll
jbe
aad
mov
xchg
cld
test
jp
push
fidivrs
xchg
cmp
push
push
ret
imul
adc
mov
aas
add
jns
pop
ss
sub
rcll
mov
cmp
add
pop
lcall
filds
aas
mov
popa
cli
push
push
stc
add
sbb
ret
sub
xchg
repnz
imull
les
dec
nop
mov
push
mov
int
arpl
sub
gs
sbb
aam
pop
loop
das
inc
cld
jae
xor
push
and
and
test
in
xchg
dec
push
in
movd
sub
add
inc
xchg
sub
pop
cltd
lods
inc
lret
enter
in
shrl
sub
pop
aas
jmp
jno
jb
stc
xchg
push
lods
ret
daa
mov
fcoml
ss
in
es
fcoml
push
jmp
cli
ficoml
daa
sbbb
sub
pop
shrb
jle
call
pop
iret
push
in
add
xchg
sub
and
es
popf
push
jae
loopne
leave
push
jmp
mull
inc
fcoml
dec
loop
leave
inc
imul
push
mov
inc
fsqrt
or
inc
fcoms
push
call
cli
mov
in
es
fsts
outsb
add
sti
push
lods
inc
mov
shrl
leave
sbb
sub
dec
jp
add
in
clc
mov
push
popf
pop
hlt
xchg
sub
enter
inc
loopne
jns
cmp
push
lcall
sti
in
es
pop
inc
enter
xchg
fdivl
daa
lds
loop
sbb
inc
fdivrp
cmp
js
daa
lret
bound
loopne
mov
jae
sub
test
xor
popf
arpl
mov
into
mov
push
jmp
pop
leave
lret
sub
mov
and
pusha
imull
int3
and
push
push
pop
repz
lret
lret
jo
mov
push
rcrl
int3
jecxz
adc
mov
and
push
gs
out
xchg
int
jns
mov
stos
call
or
cmp
jecxz
add
lea
push
out
push
scas
push
in
fbstp
add
stos
xor
dec
loopne
push
push
jmp
rcr
jbe
cmpsb
or
dec
clc
dec
out
rcl
outsb
add
sbb
lock
popf
dec
jecxz
shll
scas
and
scas
dec
inc
arpl
jae
repz
sbb
push
sbb
xor
add
sbb
push
mov
loopne
pushf
adc
loopne
xor
shrl
xchg
mov
pop
scas
dec
fdivs
or
jmp
pop
sub
xchg
pop
sbb
push
mov
sub
push
roll
xchg
add
xchg
cs
and
incb
jns
movsb
stos
sbb
push
dec
lret
lods
inc
std
rolb
sahf
add
dec
loopne
sbb
ljmp
lds
push
sbb
lds
sbbl
imul
popf
push
push
out
dec
mov
xchg
sub
inc
sbb
jmp
sub
test
out
dec
or
add
rorl
les
mov
jg
aam
and
add
push
out
dec
pop
cmpsb
cmp
push
lods
out
mov
test
xor
movsl
jne
je
out
or
xchg
inc
out
pop
cmpsl
xor
and
jo
lds
dec
fisubl
pop
pop
mul
jo
out
lods
outsl
test
lret
lods
decb
fidivs
or
or
or
lds
dec
dec
test
xchg
cmc
bound
sub
push
add
pop
aad
stos
mov
call
ret
mov
loope
ss
jo
stos
sub
insb
push
call
out
into
mov
lahf
sbb
or
out
push
ljmp
sub
xchg
mov
cmpsl
ss
stos
out
xchg
add
scas
jl
jne
shl
jge
pop
inc
xlat
and
fcom
xor
add
inc
or
mov
sub
loope
inc
and
and
or
testb
aam
cmp
lcall
fsubs
test
dec
loop
or
fidivrl
cmp
icebp
cmp
push
xor
mov
shrl
lods
fsubrs
xlat
jl
leave
outsl
jp
popf
ljmp
addr16
sbb
dec
push
testb
mov
pushl
xchg
movsl
mov
mov
mov
mov
fldcw
lret
nop
jnp
and
cmp
iret
sub
cli
adc
orl
jbe
mov
lods
inc
arpl
adc
inc
fcmovu
jo
cmc
pop
hlt
and
stos
inc
loopne
sub
or
xchg
loopne
mov
pop
xchg
arpl
iret
sub
lcall
sub
dec
add
aas
push
data16
inc
pusha
adc
push
hlt
fdivl
jae
sbb
dec
in
xchg
mov
mov
lods
fwait
lods
mov
imul
mov
daa
mov
ret
sbb
aad
in
nop
rclb
repnz
jae
xchg
enter
jnp
cmp
lahf
pushf
es
sub
lods
inc
mov
ret
mov
call
mov
or
dec
or
in
inc
movsl
cmp
or
outsl
push
push
lahf
es
jno
xor
mov
movsl
lds
lods
mov
fldenv
lret
mov
xor
loopne
dec
popa
lock
dec
adc
imul
dec
loope
fsts
cmp
test
lret
mov
fisttpll
sub
pop
out
imul
out
mov
imul
or
pusha
negl
mov
add
aas
ss
push
pusha
pop
repz
out
add
jae
cmp
insl
loopne
cmpsl
ds
xchg
mov
mov
je
dec
mov
push
lods
inc
test
sub
scas
xor
push
outsl
shlb
dec
inc
jecxz
test
and
jmp
cwtl
add
test
jl
xchg
jmp
mov
gs
mov
rcll
adc
cwtl
lds
and
xlat
sbb
jge
clc
iret
ljmpw
or
lea
fidivs
sahf
mov
imul
mov
insb
les
mov
dec
push
in
std
cmpsl
ds
roll
or
sahf
xor
in
adc
rolb
mov
aaa
into
fwait
xor
sbb
aas
mov
mov
dec
jmp
jns
cmc
xor
or
frstor
or
sub
test
rcrl
cmpsl
ds
cmp
test
lret
mov
fucomp
xchg
adc
orl
pop
out
das
add
fdivrs
aad
xchg
xor
pop
mov
lods
inc
lcall
and
dec
mov
inc
in
add
popa
clc
push
fwait
pop
lock
add
test
out
xchg
jl
rolb
daa
mov
push
sbb
mov
push
rolb
sahf
ret
mov
lock
lcall
jmp
or
jl
int3
arpl
popf
std
xchg
movq
jns
xor
push
pop
ret
dec
in
out
cmp
aad
cli
mov
mov
inc
jle
jae
dec
in
or
mov
or
test
ret
pop
or
push
call
movsb
xchg
pop
mov
push
mov
insl
add
fmuls
loop
jmp
fstpl
loopne
lock
sub
test
ljmp
cmp
imul
rclb
aam
sarl
ljmp
add
jbe
insl
cwtl
ja
or
and
popf
ret
sbb
test
push
cli
xchg
inc
arpl
cltd
gs
add
and
or
adc
test
jg
nop
cwtl
fbstp
mov
push
and
pusha
lods
inc
sbb
jne
add
dec
push
in
idivb
out
mov
mov
lds
xor
js
push
mov
cmp
mov
and
inc
in
cmp
aad
js
sbb
imul
push
fwait
xor
cmp
xchg
add
loopne
dec
and
xchg
neg
jne
mov
out
aad
jnp
dec
cmp
cmp
mov
test
lds
cmpsl
pop
jl
xchg
cmpsl
orb
xchg
in
addl
inc
fcoml
pop
cmp
inc
cmp
and
sbb
sbb
jnp
shll
push
jmp
lahf
add
adc
popa
xchg
xchg
imul
sbb
cs
or
adc
mov
lods
jmp
xchg
aas
int3
jne
xchg
addr16
adc
push
stos
inc
sbb
pop
mov
lea
lods
sub
push
adc
xchg
xor
adc
adc
add
ret
scas
in
adc
insl
add
insl
xchg
sub
push
cmp
lea
and
push
fwait
adc
pop
das
xlat
outsb
mov
sarl
rcl
fbstp
outsl
push
mov
out
arpl
sub
mov
in
ljmp
jg
js
out
mov
fidivl
xor
mov
les
fnstcw
loopne
leave
cli
movsb
cmp
jmp
rcr
lods
stc
fdivr
das
out
popf
movsb
cmp
bts
lea
repnz
xchg
sub
dec
ljmp
pop
je
mov
jg
int3
push
push
mov
in
xchg
fcomip
cwtl
das
adc
scas
inc
jae
push
mov
xchg
mov
push
jp
sbbl
cli
xchg
stos
mov
or
cmp
pop
repnz
in
test
jno
pop
arpl
jg
lcall
sbb
add
dec
cli
mov
jle
roll
fs
in
test
pop
testb
testl
inc
fwait
inc
and
lahf
push
dec
fisttps
mov
xchg
push
sar
xchg
lds
inc
push
out
imul
stc
add
cmp
mov
pop
repz
jmp
or
xchg
ret
mov
cmp
jb
sub
imull
sub
mov
fisubrl
fidivl
outsl
ret
push
xor
jg
mov
jle
je
adc
ret
xor
cmp
call
insl
shrb
ficoml
lret
push
pop
repz
mov
fdivp
pop
sub
mov
fcmovnbe
xchg
sub
add
mov
ret
and
cmp
mov
dec
loop
cmp
insb
dec
sub
cmp
je
pop
pop
mov
xor
es
jae
aaa
testb
mov
stos
mov
out
and
out
jbe
cmpsb
scas
adc
mov
iret
xor
xchg
jg
aam
jno
ljmp
adcb
cli
movsl
cmp
pop
push
popf
mov
data16
jno
stos
stc
mov
sub
iret
data16
std
popf
xor
jp
sub
cmp
jp
mov
popf
mov
push
orl
sarb
sti
std
fsubrl
adc
cmpl
fcomps
popa
clc
jmp
ljmp
or
int3
rep
add
inc
mov
push
inc
or
push
jne
fimuls
push
cmp
sbb
mov
iret
outsb
scas
sbb
rcrb
jl
and
adc
inc
sahf
call
test
cmp
add
jp
cld
and
mov
mov
leave
pop
ret
insb
aam
vpaddq
mov
dec
mov
adc
andb
xchg
out
les
rcrl
cltd
inc
int
mov
sub
fs
in
and
inc
xchg
sub
sarl
pop
test
addr16
cmpsb
ret
lock
in
push
push
push
loop
inc
mov
stc
ljmp
cltd
add
imul
mov
sti
sarl
mov
in
fists
mov
das
xchg
mov
xchg
aaa
in
enter
sbb
dec
mov
scas
xor
leave
mov
ret
adc
es
notb
or
add
mov
xchg
fwait
ds
lret
mov
ret
and
mov
stc
nop
adc
push
out
jle
pop
imulb
test
outsb
add
and
popf
xor
inc
mov
aas
push
mov
fs
fucom
jge
inc
add
test
pop
sahf
ret
andl
mov
pop
sahf
adc
aaa
inc
fsubrl
outsb
add
mov
fdivrl
jg
xor
mov
fbstp
subl
cmpsl
aad
or
leave
fnsave
cmpsl
ds
sbb
ds
inc
stos
jno
adc
in
mov
loopne
add
inc
mov
sbb
xorb
mov
xchg
push
pop
int3
mov
out
sub
mov
ret
pop
cmp
adc
gs
adc
xchg
jo
ljmp
adc
loop
mov
adc
push
out
ljmp
dec
in
insb
test
xor
mov
add
test
push
je
xchg
cmpsb
sti
pop
repz
dec
fistpll
fcompl
mov
xorb
fcompl
and
clc
ja
lahf
push
sbb
pop
dec
jb
aam
pop
mov
ret
adc
mov
int
sbb
cmpsl
xchg
adc
adc
flds
xor
pop
mov
adc
loop
mov
fldl
xlat
adc
sub
sub
ja
jl
add
pop
incl
cmp
mov
jecxz
xchg
mov
jno
or
pusha
ss
jae
ficoms
xor
cmpl
sub
mov
pop
cmc
imul
cmp
mov
repnz
mov
lcall
and
mov
scas
popa
outsb
repnz
mov
jge
pop
aad
xor
arpl
aas
mov
mov
jp
pop
mov
sahf
cmpb
icebp
das
insl
mov
dec
or
and
in
or
jns
inc
add
sbb
and
xchg
mov
cld
xchg
xor
cmc
sahf
sub
mov
cmp
mov
mov
add
sub
loopne
rorl
push
es
lock
inc
int
cmp
sbb
or
ja
pushf
jl
sub
dec
out
jmp
push
in
inc
mov
xchg
cld
pop
testb
push
push
out
inc
push
mov
sbbl
jmp
scas
es
mov
ds
sarl
add
es
xor
jns
xlat
jns
push
stos
clc
popf
xor
int
jb
dec
mov
pop
push
in
sub
mov
out
test
lret
shrb
xor
xchg
enter
xchg
add
stos
xor
jge
push
push
xor
xchg
pop
test
lret
cld
sbb
cwtl
dec
sbb
data16
inc
ret
pop
cmc
loopne
and
lahf
mov
adc
shll
into
and
push
out
jns
jne
shll
jp
movsl
xchg
insb
outsl
sti
sahf
movsl
cmp
mov
test
addr16
pop
pop
mov
jnp
insb
mov
call
jb
pop
sub
iret
in
popa
cmp
xchg
xchg
add
or
mov
imul
xor
gs
idivb
and
xchg
xchg
xor
enter
mov
mov
jbe
aaa
pusha
test
je
inc
cmp
loope
inc
fidivrs
lret
cmpsl
ds
fcoml
dec
push
push
mov
imul
pop
fistl
fbstp
icebp
aad
in
add
fisttps
mov
les
push
shrl
or
xchg
jnp
add
testl
push
loop
pop
aad
jae
xchg
mov
cmp
mov
out
xchg
and
dec
mov
xor
arpl
xchg
cmp
push
fwait
pop
out
push
inc
cmc
mov
daa
arpl
outsl
imul
xchg
jae
aas
mov
sahf
inc
ret
pop
cmp
xchg
pop
pop
fsts
cmp
pop
sahf
insb
dec
push
inc
xlat
aas
jo
push
gs
and
add
add
popf
mov
and
daa
push
lods
xchg
dec
xchg
and
repz
dec
loope
adc
lods
xchg
shlb
jbe
aam
or
mov
sbb
shr
mov
inc
popf
daa
mov
pop
or
push
out
jbe
and
sub
xor
jle
popf
jno
pop
dec
loop
push
mov
adc
mov
pushf
insb
mov
inc
fisttpl
mov
jnp
pmulhuw
les
adc
push
xchg
pop
inc
mov
cwtl
jb
xchg
stos
inc
leave
rcrl
out
fisttps
lods
fimull
repz
and
jns
inc
dec
push
cltd
xchg
fs
mov
pop
cs
add
std
and
out
jbe
int3
inc
push
xor
sub
mov
sub
or
push
data16
jl
cmp
popa
sub
scas
inc
lahf
insl
xchg
js
sbb
jae
in
mov
adc
sbb
popa
mov
ss
repz
scas
loop
stos
inc
fdivs
ljmp
jno
outsb
inc
stc
inc
popl
cltd
pop
sbb
jb
pop
mulb
rorl
clc
out
sub
push
dec
les
jbe
mov
push
push
outsb
jo
xor
ret
push
ljmp
fs
dec
inc
pop
ja
xchg
sub
push
shrl
push
aad
dec
mov
pop
pop
insl
ret
cmp
pop
mov
dec
dec
lods
mov
fisubrs
addr16
decl
dec
inc
pmullw
mov
cltd
mov
ss
mov
int
test
jns
movsl
xchg
bnd
jae,pn
loope
inc
xchg
mov
push
or
mov
ss
mulb
out
pop
scas
loopne
mov
sub
lods
call
punpcklbw
sbb
mov
mov
pop
out
mov
xor
push
jecxz
into
rolb
mov
or
mov
or
pop
jns
cmpsl
imul
sbbb
test
cmp
dec
out
pusha
adc
jbe
cmpl
sub
in
jecxz
shlb
pusha
inc
icebp
popf
xor
gs
xor
pop
mov
inc
jle
stos
inc
arpl
lods
inc
sbb
lods
inc
mov
mov
sarb
shrl
icebp
add
repnz
aam
adc
into
bound
push
addw
lea
fists
lret
jle
iret
inc
mov
pop
or
out
pop
xchg
sub
sub
fwait
popf
pop
icebp
adc
shrl
pop
insl
dec
dec
pop
out
cmp
and
scas
xchg
lds
divl
jne
mov
sahf
xor
xor
repz
push
daa
cs
xchg
jbe
dec
adc
les
fbstp
mov
icebp
and
inc
js
loopne
movsb
mov
mov
lcall
and
xchg
push
and
mov
cld
push
popf
mov
adc
outsl
mov
lcall
jno
and
notb
inc
stc
nop
adc
test
mov
pop
ss
dec
data16
inc
js
mov
fldenv
push
push
sub
pusha
jmp
add
outsb
fnstcw
sub
dec
andb
sti
sahf
or
jne
rcll
add
repz
xchg
and
cmpsb
les
inc
mov
popf
push
iret
dec
test
in
test
shll
jns
fs
xchg
pop
in
or
mov
mov
push
cld
mov
pop
cmp
mov
mov
mov
sbbl
jnp
int3
cltd
ljmp
jecxz
rcl
sarl
out
adc
aaa
ret
mov
out
mov
push
pop
mov
adc
add
repnz
mov
pusha
lock
mov
push
inc
lods
cld
mov
dec
cld
xchg
jg
jg
add
xchg
push
pop
jg
jns
push
mov
lcall
or
mov
mov
pop
sahf
outsb
dec
adc
out
bound
pusha
mov
fistpl
mov
and
xor
or
sarb
sbb
fmul
rcll
push
push
xchg
mov
dec
or
mov
int
mov
or
mov
mov
sbb
push
mov
ret
icebp
arpl
imul
jl
insl
mov
inc
mov
dec
dec
or
lret
call
std
pop
popf
xor
cld
mov
sub
xchg
notb
fwait
addl
cmp
mov
shrl
jecxz
xor
mov
jp
cmp
mov
jbe
mov
push
sub
mov
xorl
pop
mov
lods
pushf
sbbl
mov
cmp
in
lods
jae
cs
out
push
mov
push
getsec
daa
ljmp
push
std
arpl
cmp
jns
stc
stos
adc
adc
mov
das
stc
loope
frstor
adc
sahf
in
sub
add
stos
jo
je
loope
iret
sub
pop
loopne
lret
lock
movb
sub
scas
inc
cmp
daa
lret
daa
fwait
push
push
ds
cmp
xlat
push
and
or
rolb
add
cmp
pop
push
test
mov
outsb
cmpsl
xlat
fadds
pop
fisubl
push
pop
repz
jmp
pop
outsb
test
jl
sahf
lods
mov
fwait
ret
sub
fxch
mov
jmp
xor
fistps
and
jno
dec
cmp
or
rcrb
loope
cmpsl
mov
shr
push
movsl
cltd
pop
sub
mov
mov
mov
aas
push
sub
mov
xchg
mov
inc
push
cmp
test
pop
das
pop
push
pop
mov
shl
gs
cmp
je
cmp
popf
jecxz
xchg
out
sub
or
mov
shl
or
dec
cmpsl
dec
mov
pop
push
mov
aam
outsl
sub
xchg
mov
cld
mov
sti
fisttpl
pop
push
cmp
adc
adc
ss
pop
insb
movsb
push
pop
out
push
xor
mov
sti
scas
mov
lock
xchg
inc
xor
mov
outsl
popf
loopne
fmull
mov
in
cltd
mov
add
mov
pop
leave
fbstp
mov
pop
test
jae
inc
lock
fiaddl
gs
push
cmpb
sub
loop
add
aaa
mov
pusha
xor
shll
pop
insl
sbb
sbbl
dec
sbb
pop
cmpsl
popa
andl
add
or
mov
fnstenv
mov
and
xor
cmc
add
sbb
adcb
stc
pop
cmpsl
pop
sub
jle
jge
insl
pop
mov
les
pop
test
xchg
pop
jns
pop
and
or
cs
inc
pusha
mov
fidivs
push
add
push
sub
jp
mov
fnstenv
push
xor
sti
into
test
aad
mov
mov
fnsave
stos
pushf
mov
sub
adc
scas
out
data16
and
cmp
and
nop
sub
jbe
adc
xchg
adc
imul
adc
mov
imul
ljmp
in
xorb
cld
inc
lea
cmpsl
ds
push
scas
or
mov
pop
cli
pop
cmc
mov
ret
dec
inc
cli
sahf
leave
mov
mov
add
test
insl
jecxz
movsb
or
daa
dec
test
jg
dec
fistpll
push
arpl
and
rcrb
data16
pusha
xchg
data16
pop
je
testb
dec
in
or
push
jle
clc
pop
lahf
mov
rdmsr
popa
cmp
in
inc
push
sbb
inc
mov
pop
lock
and
addr16
fadd
nop
cmpsb
orl
btc
xlat
sbb
fcmovnb
push
or
cmp
xchg
mov
aas
lock
or
push
in
in
sti
orl
sbb
xchg
and
les
push
aam
enter
gs
mov
test
fmuls
sub
out
lds
jl
and
push
xchg
jmp
sbb
cltd
mov
xchg
add
inc
mov
adc
push
out
xchg
jnp
cltd
xor
push
cltd
enter
mov
test
cmp
fdivl
clc
jle
enter
out
pop
push
jo
insb
mov
std
pushf
mov
mov
stc
sbb
stos
bound
add
pop
ret
in
or
mov
ds
jne
aaa
outsl
lea
fcmovne
xchg
in
push
or
iret
movsl
dec
push
mov
mov
stos
pop
add
mov
mov
in
sub
imul
mov
push
out
xor
dec
cwtl
adc
mov
push
sbb
cs
jmp
push
dec
scas
cs
add
imul
sub
stos
push
cs
jo
insl
push
jno
ficoms
jns
pop
sub
lock
jnp
rcl
push
aas
xchg
sahf
push
sbb
push
pusha
idivb
and
sbb
scas
stos
lret
sbb
fmull
and
aam
push
or
add
testb
jmp
ja
jmp
xchg
xchg
cmpsl
popf
push
add
jne
mov
or
inc
push
fildl
popa
mov
xchg
shll
lds
shll
xor
and
pop
xchg
test
pop
jmp
adc
inc
mov
ljmp
movsl
lods
pusha
lret
and
jmp
push
mov
lret
int
jmp
aad
add
ret
call
mov
lds
movlps
cmp
or
shl
xchg
adc
fsubrs
xor
aam
mov
es
mov
out
pop
out
adc
std
dec
jecxz
cld
shr
pushf
push
int3
cmc
aad
testb
shrl
into
or
and
push
insl
or
rorb
mov
lret
outsl
call
iret
xchg
rcr
jns
mov
enter
fnstenv
and
stos
sbb
je
repnz
insl
lret
or
mov
cmp
mov
int
mov
push
jmp
out
xor
mov
in
dec
mov
lea
pusha
sahf
push
cwtl
scas
iret
sub
pop
lock
cmp
or
dec
jbe
jmp
jo
mov
push
test
sub
xchg
jno
and
outsl
mov
scas
fsubs
mov
lock
sub
cli
push
cwtl
fnstsw
jp
imul
scas
das
mov
push
inc
movsl
stc
nop
xlat
fs
add
sub
pop
pop
ljmp
pop
fldenv
inc
pushf
and
or
stc
inc
scas
ja
adc
mov
pop
lahf
imul
lods
adcl
push
xlat
or
sbb
lcall
mov
mov
lods
inc
loopne
pop
loope
cli
rcrb
ss
sbb
xor
popa
fdivs
dec
hlt
sti
mov
subb
sub
movsl
ss
xchg
mov
lock
mov
adc
subb
std
int
add
sub
jge
xchg
sub
mov
mov
dec
in
adc
cmpl
or
mov
fcomps
add
mov
pop
movsb
mov
out
aam
fidivrl
mov
pop
cmp
inc
or
add
sub
xchg
push
lock
nop
js
sub
add
push
pop
in
gs
mov
xlat
cmpsb
mov
or
jmp
mov
ss
cmc
inc
lret
mov
out
xor
out
aas
in
aam
aam
leave
or
xor
in
mov
push
xlat
fcoml
lods
and
xor
mov
sub
sbb
adc
mov
jno
das
mov
mov
ds
lret
ss
or
jge
mov
test
pop
push
pop
mov
or
jae
std
pushf
ja
in
inc
mov
ret
mov
or
mov
cmp
sub
inc
pop
adc
ja
insl
add
cwtl
xor
jg
shlb
dec
inc
std
fistps
orb
lock
mov
mov
shlb
mov
lahf
movsb
mov
lock
imul
xor
mov
push
gs
push
in
daa
cmp
rorb
push
cwtl
mov
lret
shrl
sbb
dec
fidivl
fsubl
xlat
orl
call
mov
je
push
and
mov
shll
mov
xor
popa
bound
and
adc
mov
push
jnp
xor
push
ret
je
cmp
mov
jecxz
aam
loope
sub
fnsave
xchg
inc
imulb
cmpsb
xlat
dec
loopne
enter
andl
xchg
lds
cmpsb
or
and
mov
pushf
jecxz
pop
mov
fbld
adc
cmp
adc
loope
xor
cltd
insl
repz
shl
data16
je
jne
jb
stc
jnp
ja
jl
lahf
and
lea
lock
js
or
and
rcrb
aas
adcl
push
popf
fdivrs
inc
or
inc
stc
insl
mov
in
or
and
int3
arpl
xor
out
into
bound
je
xor
pusha
dec
loop
sub
mov
jae
inc
pushf
xchg
imul
fdiv
add
cmpsb
mov
daa
mov
pop
xor
out
inc
sbb
jbe
push
int3
adc
out
test
dec
and
push
push
imul
pop
mov
aam
pop
les
xor
rclb
es
cmpsl
xor
adc
jge
cmpsb
adc
mov
xchg
sbb
push
bound
xchg
mov
dec
fwait
orps
dec
jl
icebp
lods
imul
int3
into
dec
lea
sub
mov
scas
lock
xchg
cmpsb
add
imul
lock
jno
add
push
mov
and
mov
cmc
mov
movsb
leave
in
in
add
cmp
push
dec
aad
popf
xchg
inc
fadd
mov
add
jo
cmp
in
pusha
mov
push
cmc
stos
icebp
dec
fsubs
rcrb
sub
idivl
jge
aad
popf
adc
and
jo
cli
mov
or
jns
xor
jecxz
push
out
js
daa
clc
mov
xor
dec
adc
in
push
mov
adc
call
mov
pop
lret
test
imul
xchg
clc
pop
aad
xor
pop
sbb
inc
push
push
rcrb
adc
out
jg
cmp
sub
sbb
push
cltd
lcall
retw
push
hlt
mov
cmc
jno
inc
push
lds
movsb
arpl
rep
xor
fdiv
push
add
js
and
push
inc
mov
sbb
sbb
not
insl
sub
xchg
dec
popa
test
lods
pop
jle
stc
xchg
insb
rcll
or
aaa
sub
inc
cmpsb
xor
fistpll
std
les
sub
jmp
mov
not
cmp
push
out
sbb
addr16
aam
jp
cmpsl
insb
sarl
mov
jg
or
xor
ljmp
sbb
push
in
and
cmpl
cmp
dec
push
in
mov
xchg
add
fstps
adc
xchg
xor
inc
push
inc
inc
fiaddl
aad
sbb
loop
cmpsb
mov
add
mov
ja
into
add
dec
jmp
push
cld
xchg
pop
add
mov
mov
or
push
sub
mov
pop
and
sahf
fwait
ds
cmp
inc
outsl
fisttpl
rcrl
pop
xlat
int3
jmp
gs
js
stc
loop
cmp
iret
hlt
ror
int3
pop
xor
inc
shrb
pusha
fisubl
mov
mov
jb
stc
mov
xchg
jae
aad
jb
ljmp
lea
jb
push
cmp
mov
pop
repz
neg
pop
bound
lcall
loop
mov
nop
repz
in
test
mov
push
sub
cwtl
push
das
stos
xor
xchg
sbb
out
jl
cmp
mov
mov
mov
xor
test
cs
adcb
aad
mov
cmp
xchg
adc
adc
addr16
out
sbb
mov
ss
pushf
aam
add
das
faddl
add
das
push
pop
sahf
jle
fnstcw
cmp
scas
dec
mov
fnstcw
inc
xlat
cltd
inc
clc
xor
std
sti
call
icebp
sbb
sub
lods
mov
fs
pop
les
data16
test
mov
ficomps
int
mov
ds
addb
jge
push
aad
mov
ss
call
cli
mov
mov
pop
cmp
shll
mov
sahf
push
adc
test
dec
xorb
leave
cmp
roll
cmp
stc
loop
mov
cli
jl
fstpl
push
jne
pop
push
mov
xor
std
aas
mov
adc
loopne
cmpl
aad
jns
sub
gs
fidivs
mov
lock
push
outsl
jb
lds
xor
addr16
das
xchg
test
sbbb
leave
sbb
jae
jbe
aas
jb
leave
shlb
push
dec
jo
xlat
ret
pop
cmc
insb
push
es
or
inc
dec
adc
and
mov
xorl
cld
test
and
dec
add
popf
xor
and
push
lea
ret
sub
add
and
movsl
ja
inc
ljmp
and
test
stos
sbb
dec
lret
movsl
popa
aam
fcompl
pop
mov
push
repnz
xchg
and
mov
rorl
mov
fdivrs
mov
lret
xor
push
loope
xchg
hlt
sahf
fs
clc
sub
testl
pop
adc
push
sbbb
cmp
bound
test
lds
arpl
xchg
inc
mov
mov
and
adc
enter
cmp
xchg
stc
mov
xchg
rsm
mov
insb
add
cs
stc
jno
or
loop
or
clc
adc
mov
adc
mov
adcb
push
push
cmpsb
jmp
mov
add
je
cltd
pop
cmp
rcrb
cwtl
pop
push
sub
ljmp
cmp
cmpsb
addr16
cltd
mov
lret
lock
aam
push
push
loope
out
sbb
test
sahf
mov
mov
mov
sbb
outsl
mov
add
daa
push
fcmove
add
push
push
and
aaa
movsl
inc
fwait
adc
sub
movl
mov
fidivrs
mov
ret
push
ret
divl
pop
xchg
jb
sub
mov
lcall
push
mov
cmp
pop
xchg
loopne
and
stos
adc
inc
lods
clc
fisubs
stc
push
jno
fldenv
xor
or
cltd
xor
pop
call
inc
inc
jecxz
push
shl
push
out
in
cmp
adc
xchg
mov
xor
or
fistps
jg
push
das
fisubl
xchg
sbb
fstpl
cmp
or
inc
sbb
pop
add
mov
jecxz
xchg
dec
ss
push
sbbl
add
lods
inc
push
fnstsw
pcmpeqw
insl
cmpsl
xor
cmpsl
xor
movsb
xor
movsb
mov
fimull
sub
pushf
ret
sarb
shl
sub
aaa
cmp
xor
and
xchg
jp
outsb
add
int
jecxz
inc
push
push
pop
or
xor
mov
loope
lcall
mov
arpl
insb
add
popf
xor
dec
jbe
adc
nop
pop
mov
push
mov
loope
jae
jle
out
mov
loop
sub
sbb
rorl
jnp
cmp
adc
les
pop
and
call
hlt
pusha
mul
in
and
loopne
inc
fldenv
jg
fidivl
or
pop
hlt
push
popa
out
test
daa
sbb
or
leave
hlt
mov
dec
cmp
xor
jno
andl
xor
bound
pop
mov
inc
cmp
pusha
mov
or
push
sti
enter
adc
sbb
mov
icebp
aas
mov
lea
inc
jle
xor
mov
jns
adc
dec
mov
daa
int3
loope
sub
pop
nop
daa
push
and
cmp
jmp
jno
pop
insl
add
in
fmuls
ja
ds
jl
inc
inc
mov
xor
scas
pop
aaa
mov
mov
cltd
mov
divl
out
mov
stos
dec
mov
loop
popa
clc
test
push
in
jmp
testl
inc
mov
in
and
jmp
dec
sub
jno
jno
fisubl
gs
adc
adc
lret
xchg
jg
push
or
xchg
cs
aaa
xchg
inc
mov
lret
dec
popa
stos
jb
add
push
push
stos
nop
cwtl
jb
or
mov
aaa
dec
cmp
fwait
cmp
insl
loopne
cmp
jmp
mov
loop
cmp
xlat
cmp
mov
frstor
insl
mov
int3
adc
push
xchg
test
or
pop
sbb
jge
sub
mov
cmp
imul
add
out
and
and
rolb
pushf
inc
imul
arpl
js
push
adc
jno
mov
inc
stos
lods
cltd
push
and
fwait
xor
xlat
outsb
pop
fnsave
movsb
cmp
lahf
ss
jb
pusha
push
jle
jne
jb
and
shrl
lds
cmc
jle
out
mov
dec
mov
mov
call
loop
fdivs
dec
arpl
push
mov
mov
fildl
or
iret
data16
pusha
negl
out
test
push
or
xchg
pushf
xor
sub
fisubl
dec
fildll
fsubrs
dec
data16
jle
testb
fistl
or
pop
insb
in
cmpsw
sub
dec
imul
pop
imul
pushf
testb
pop
enter
mov
and
mov
inc
mov
push
sub
add
jo
dec
shll
xchg
ret
cmp
hlt
fs
cltd
lds
js
pop
cmp
inc
dec
push
sbb
fbld
sahf
movsb
sti
dec
lcall
outsb
xchg
xor
pushf
xchg
push
jmp
mov
inc
pop
xor
ret
arpl
lahf
xor
or
push
jl
jne
fisttpll
pop
stc
cmp
loope
cmpl
imul
lcall
or
add
push
jg
add
push
pop
popa
call
leave
out
adc
push
cmp
outsl
stc
or
adc
shrb
ljmp
in
xor
sub
lret
sahf
jl
pop
inc
sahf
pusha
ds
stc
add
outsl
loope
push
fidivs
int3
mov
test
test
int3
or
push
mov
add
mov
popa
clc
xchg
mov
cli
mov
imul
movsb
adcb
test
or
movsb
iret
and
cmp
mov
mov
insl
scas
scas
insb
sub
lahf
push
ret
mov
jecxz
test
add
mov
call
or
pop
mov
pop
cltd
pop
jno
nop
mov
leave
mov
rolb
xor
movsb
gs
lcall
mov
stos
bound
push
ficoml
adcb
jl
bound
pop
jecxz
xor
pop
outsb
pusha
mov
dec
in
mov
iret
loop
loope
incl
stc
or
in
shrl
push
pop
or
icebp
call
push
xor
je
mov
cmp
imul
lods
sti
out
clc
sbb
mov
enter
cmpb
mov
rcll
jl
jo
fwait
mov
stos
adc
cwtl
aad
mov
push
stos
dec
into
loop
int3
fnstenv
xchg
pop
mov
jle
mov
std
xor
jecxz
aas
xor
and
push
pusha
xchg
mov
clc
test
fcomps
or
mov
add
and
fs
inc
inc
aas
mov
in
pusha
pop
in
xchg
inc
in
test
out
es
or
add
xchg
lret
sahf
xor
repz
mov
sbb
xchg
adc
inc
push
sbb
ds
test
cmp
pop
notb
popa
icebp
adc
arpl
and
mov
push
ljmp
and
inc
sti
lea
add
fsubr
les
repz
jecxz
xchg
out
pop
test
inc
repnz
mov
les
inc
sub
mov
sbb
mov
fbstp
jl
pop
ds
popf
jno
ret
insl
xchg
ret
inc
fmull
push
inc
int
sub
lods
inc
add
jbe
mov
inc
into
je
sti
popa
iret
dec
xlat
js
xchg
cs
cmp
and
aad
iret
es
xchg
ss
leave
push
lods
ret
mov
jbe
jbe
mov
jl
or
mov
pop
inc
cmpsl
jp
mov
add
and
lahf
jb
add
adc
incl
std
daa
mov
sub
push
pop
mov
or
sub
es
aaa
pop
movsb
xchg
cmpl
xlat
jns
roll
lods
jo
lds
inc
xchg
out
cld
addr16
xor
test
sub
jp
pop
inc
and
leave
push
and
push
fldt
popf
rcl
idivb
and
or
mov
and
push
dec
push
xchg
pop
xchg
sbb
mov
pop
pop
adc
jnp
mov
aas
sahf
daa
int
push
incl
inc
fimull
fwait
add
scas
mov
ss
push
sbb
adc
test
iret
cmpsl
cs
sub
xor
out
movsb
push
mov
mov
adc
pusha
aaa
mov
mov
into
jae
sbb
sub
pop
add
in
aas
sub
addr16
arpl
push
dec
out
push
leave
xchg
popf
xor
mov
imul
adc
lret
aaa
push
jno
mov
mov
fisubrl
out
cmpsl
sti
xchg
fcomp
shrl
lcall
mov
pushf
in
lcall
scas
adc
aas
pop
xchg
mov
lret
xorb
fwait
imul
dec
push
mov
add
sti
fs
lret
aas
into
inc
push
pop
aad
sti
hlt
push
leave
push
adc
out
insb
pop
mov
out
add
cmp
cmp
mov
push
in
pop
cmp
insl
fdivrl
sbb
aaa
push
add
mov
fstpl
mov
leave
mov
subl
push
sbb
jecxz
push
lods
js
pop
inc
les
mov
test
ffreep
pop
out
dec
xlat
pushf
fcoms
cmp
or
add
or
sbb
and
shrl
push
inc
lods
xchg
inc
daa
push
sub
xlat
mov
and
mov
bound
std
stos
jae
mov
adc
mov
xchg
xchg
fisubl
je
shl
mov
bound
rclb
imul
cli
movsb
mov
xlat
fucomp
sbb
pusha
sti
xchg
and
cli
mov
mov
inc
adc
jecxz
pop
ret
push
inc
ret
cmpsb
repnz
movsl
mov
xlat
jp
adc
inc
es
mov
in
xor
int
xlat
xchg
nop
or
sbb
push
sub
lea
dec
sub
mov
inc
sub
add
out
gs
movsl
imul
js
jg
addr16
js
xchg
xchg
shrb
mov
sbb
jecxz
lods
cld
sbbb
mov
cmp
pusha
insl
or
mov
xchg
add
push
mov
fwait
sub
pop
sbbb
bound
add
fsubr
clc
pop
jmp
lea
jns
cmpsb
dec
adc
add
mov
imul
and
in
ret
or
xchg
stc
je
and
xchg
cmp
adc
xor
ffree
dec
adc
jp
aaa
fucompp
fwait
dec
popa
int
or
fisubrl
outsb
push
or
flds
push
and
outsb
cmpsb
xor
mov
jge
xor
and
popa
int
bound
jne
scas
and
pop
repz
shl
jns
nop
inc
push
mov
dec
mov
mov
test
imul
pop
sub
inc
out
push
dec
hlt
mov
and
mov
and
loop
mov
imul
push
sbb
cmp
dec
sbb
dec
or
cltd
xor
push
dec
mov
outsl
push
sbb
xchg
cmp
ret
or
dec
cmp
sbbb
stos
nop
mov
lea
jb
aad
xchg
lds
sbb
aam
pop
mov
cmpsb
mov
and
cwtl
mov
cmpsl
shlb
cs
jl
das
scas
pop
cmp
ja
mov
sbb
push
ljmp
pop
dec
imull
flds
and
dec
fwait
inc
push
cltd
xchg
mov
fs
enter
test
cmp
int3
leave
insl
cmp
out
sahf
or
pushf
nopl
cltd
std
dec
sarb
int3
push
sti
xchg
fdivr
enter
sbb
shlb
aaa
hlt
xchg
leave
push
sbb
pop
sarl
inc
sbbl
mov
mov
inc
in
js
fstpt
mov
push
scas
xor
pop
mov
xor
xchg
sti
add
mov
jecxz
xchg
test
jne
lock
xor
dec
jecxz
ss
push
inc
cmp
inc
cmpsl
sub
ds
inc
pop
scas
push
add
ficoms
clc
push
shl
inc
je
pusha
fcomps
or
clc
aas
mov
into
movl
dec
out
leave
add
ja
sti
jle
stos
cmpsl
subl
outsl
xor
outsb
jp
arpl
adc
shlb
push
mov
out
jne
inc
push
push
push
cmp
aas
xor
jl
jg
data16
lret
rcrb
addr16
xlat
lea
aas
push
mov
fcoml
sahf
ljmp
pop
data16
cwtl
test
subb
mov
movq
lods
stos
in
push
mov
ficomps
jmp
pop
repz
mov
push
inc
lret
and
inc
test
xchg
lcall
xor
sti
push
ljmp
inc
push
mov
cmc
adc
outsl
lahf
push
pusha
add
in
add
sub
dec
push
mov
in
fsts
fisubrl
divl
aaa
sub
sbb
ret
ss
cmc
out
adcl
ds
cwtl
jo
cmpsb
mov
cmpsb
cmp
aas
pop
std
mov
mov
or
addr16
pop
add
into
and
add
bnd
aas
scas
pop
lds
lcall
sub
loopne
mov
sbb
icebp
pop
lock
jbe
arpl
or
mov
movb
adc
push
lods
outsb
lcall
and
test
mov
insb
aam
ret
daa
pop
out
jecxz
daa
cmp
add
pop
stos
flds
ss
stos
loopne
jl
or
gs
and
sub
sbb
sbbl
pop
inc
sarb
push
push
xchg
sbb
xchg
imulb
adc
stos
pop
mov
xor
jp
xchg
push
pushf
sub
cmp
out
ljmp
or
imul
lret
add
sbb
cmpl
popl
cmp
into
mov
inc
sbb
enter
iret
push
ja
xchg
lea
sub
nop
jae
mov
stc
pop
sbb
adc
imul
jge
inc
xor
cmp
push
xchg
test
lea
mov
test
mov
fmull
dec
outsb
jle
sub
movsb
xor
outsl
adc
mov
fsubl
cltd
jnp
push
loope
sub
jns
dec
stos
das
mov
add
enter
inc
jno
hlt
mov
aam
adc
aad
mov
sbb
cld
xchg
mov
push
jmp
sbb
ss
and
inc
sbb
addb
mov
fidivl
xchg
push
sub
fldcw
inc
mov
jle
ret
pop
pusha
push
add
js
shrb
ja
cmp
scas
stc
push
rcrl
sahf
lods
sub
loop
pop
xchg
icebp
insb
sbb
aas
out
pop
enter
xchg
jns
fwait
dec
aaa
stos
inc
aaa
sbb
xchg
xor
ret
decl
das
xchg
xlat
rcl
sar
repnz
mov
out
loop
cmp
or
and
xor
xlat
outsb
pop
add
cmp
ja
aaa
hlt
cltd
inc
lcall
ljmp
pop
cmp
mov
cmp
icebp
push
xchg
push
in
push
in
rcrl
scas
pushw
jmp
lret
push
push
push
mov
mov
repz
shll
add
je
out
cmpl
test
or
or
ficomps
pusha
lret
adc
cmp
sbb
je
dec
mov
xchg
and
mov
sub
mov
ljmp
push
add
mov
stc
or
repnz
dec
xchg
inc
mov
cmpsb
fbld
jp
sbbl
fildl
or
inc
iret
je
cmp
add
aad
lahf
push
aaa
adc
pusha
jge
nop
daa
adc
pop
loope
rclb
cmp
mov
xor
out
or
push
cltd
mov
xor
aam
mov
jo
mov
out
xchg
sub
test
into
cltd
xchg
fidivrs
loopne
mov
sbb
ss
and
pop
mov
incl
fisubl
fcoms
sub
repnz
test
jno
cmc
movsl
sbb
mov
push
inc
push
mov
enter
jmp
jge
jae
ret
mov
lcall
repnz
in
mov
inc
fiadds
pushf
dec
je
fidivl
mov
dec
inc
mov
shl
push
insl
call
daa
dec
xlat
pusha
jo
mov
xchg
mov
sbb
jnp
lods
mov
gs
xchg
mov
enter
cwtl
jmp
sub
repz
in
or
xchg
cmc
js
fsts
lcall
mov
fnstenv
push
adc
or
scas
movsl
cld
pop
pushf
jno
std
outsl
pslld
and
push
pop
hlt
xchg
push
aad
push
and
cmc
out
cli
adc
out
and
int3
mov
xchg
out
int3
fs
mov
std
fs
jmp
xor
pop
imul
mov
pop
fimull
dec
test
mov
push
out
xlat
ds
outsb
loope
pop
test
pop
cmp
iret
loop
stos
push
lods
divl
push
pop
repz
push
jno
or
imul
push
mov
loope
jle
mov
jl
loope
lret
ret
pusha
out
and
add
cmp
mov
jnp
add
test
lcall
imul
shrb
jle
push
daa
cmp
pop
data16
pop
outsl
xchg
xchg
jnp
pop
sub
cmpsb
push
cmc
and
out
jl
xchg
or
ss
xor
cli
push
fs
sbbl
mov
pop
or
movsb
lret
pop
cli
pushf
sbb
jp
jecxz
es
xchg
add
mov
popa
xor
cmp
and
or
lock
out
dec
shl
add
jbe
ret
sbb
data16
sbb
dec
pop
incb
sbb
sahf
jp
call
pop
shr
pop
mov
sbb
jnp
out
xchg
mov
inc
push
jno
add
jns
mov
sbbl
and
mov
push
pop
pop
lahf
ss
and
iret
sbb
ret
or
das
push
shl
sbb
lods
mov
jge
imul
jne
jbe
xchg
push
int
stos
xor
pop
jbe
mov
test
in
jmp
cmp
test
into
loope
testl
mov
mov
rcr
pop
es
and
imul
mov
rorl
es
repz
mov
xchg
test
add
sub
push
js
and
mov
stc
dec
ss
sahf
or
aaa
out
add
ss
ss
cmp
cmp
sbb
or
xor
xchg
push
lods
andb
push
outsl
mov
add
sub
mov
outsb
rcr
pop
mov
mov
das
shl
and
shll
xor
rcll
jge
sbbl
movsl
mov
xchg
loope
in
outsl
push
test
inc
mov
out
jg
call
push
adc
sbb
dec
push
mov
mov
rclb
test
jae
xor
sbb
add
add
mov
sti
sub
adc
loopne
jg
inc
push
out
xchg
push
loopne
outsb
in
add
sbb
pop
cmc
push
out
loop
cmp
pop
add
xchg
dec
dec
push
jae
cmp
xor
cltd
std
mov
bound
repnz
add
inc
fstl
mov
jp
mov
add
xchg
push
sbb
add
es
fistpll
sub
or
or
pop
cmp
lea
pusha
inc
and
or
fsub
sti
add
cmpsb
sub
mov
mov
inc
jle
pop
lret
xlat
nop
adc
sbb
enter
push
scas
or
add
rcrl
lods
inc
lcall
in
xchg
shl
mov
lcall
pop
loopne
lahf
sbbl
ss
dec
leave
jp
les
xchg
bound
push
test
into
xorb
add
pusha
sub
ja
mov
cmp
push
jge
ds
lcall
fxtract
sbb
ret
fimuls
test
mov
nop
mov
pop
or
xor
or
dec
pusha
push
fldenv
xchg
iret
subb
xchg
add
testl
in
aad
inc
je
insl
test
inc
lods
push
xchg
cmpsl
xchg
xchg
xchg
cld
cmp
clc
adc
insb
arpl
jg
rcrb
add
js
in
into
negl
int
out
dec
out
ret
xchg
pop
sahf
inc
push
xchg
mov
xor
andb
fcoms
or
aam
adcb
popf
fs
fsubrl
inc
pop
jmp
cld
pop
inc
sub
push
pushf
cmc
pop
add
xchg
js
cmc
es
sub
jnp
push
add
leave
jne
mov
lret
out
imul
clc
dec
scas
pop
outsb
pop
addr16
test
or
pop
nop
push
xor
add
sbb
dec
mov
cmp
fcmovnbe
imul
push
jmp
notb
add
xor
loope
mov
cmp
or
nop
dec
lret
xchg
inc
clc
stos
out
xchg
fs
adc
mov
in
and
mov
inc
and
fsubrl
inc
pop
jbe
stos
bound
jo
mov
pop
into
popf
pop
sub
inc
loope
test
std
inc
roll
rorb
aas
push
test
pop
add
ja
xchg
and
enter
ret
cs
add
dec
xor
dec
pop
das
ror
repnz
cs
andl
gs
adc
or
pop
arpl
mov
and
inc
mov
cs
xor
jmp
pop
inc
inc
cmp
mov
pop
lret
sub
mov
imul
sub
xchg
loope
mov
sbb
xchg
mov
or
and
xchg
sub
subb
sbb
mov
mov
push
loope
je
cmp
ret
add
mov
push
and
pop
inc
xchg
pop
lret
adcl
lods
hlt
in
scas
cmp
pop
repz
cmp
aad
jg
jno
lea
jae
push
or
add
pop
mov
push
sbbb
mov
jo
dec
ds
mov
shrl
sub
scas
inc
adc
push
test
push
jb
ret
add
lahf
orb
add
es
adc
add
aam
jmp
jbe
cwtl
stc
popf
cwtl
add
mov
pusha
jmp
nop
ret
sahf
jo
scas
inc
jp
std
adc
cmp
imul
xor
pop
add
cltd
add
mov
scas
jae
loopne
test
out
sub
lds
loopne
jmpw
dec
xchg
popf
sub
dec
xchg
sub
lds
jp
mov
dec
jecxz
adc
pusha
daa
cltd
std
or
shrb
and
bswap
cmpsl
jp
jle
ljmp
fsub
test
lret
insl
add
hlt
aam
shll
mov
hlt
mov
popa
ret
cmpsb
cmpsb
jns
in
jb
in
cmp
cmp
dec
cmpsb
cli
xchg
fsubrs
movsb
outsl
cmp
cmpsb
sub
pushl
enter
into
in
jmp
or
jnp
pop
cmp
ja
mov
and
cmp
mov
adc
ljmp
adc
stos
inc
pop
xchg
and
cmp
das
and
sbb
insl
aam
test
xchg
pop
in
inc
out
test
insb
scas
stc
or
and
jmp
mov
iret
pop
in
mov
mov
int
adc
leave
xchg
clc
push
add
out
xor
movsl
mov
test
mov
shrl
bound
daa
push
insb
fistl
cltd
and
dec
jmp
xchg
add
pop
div
outsb
pushf
negl
sbb
cs
lret
and
cli
rcrb
sub
xorl
rcll
xor
jo
stc
test
xchg
jmp
add
or
mov
imul
or
jno
pop
push
inc
std
push
xchg
sub
fsub
dec
push
subl
cld
push
fwait
or
test
icebp
mov
test
mov
sub
js
enter
decl
test
scas
push
push
ficoms
jae
mov
and
dec
icebp
mov
dec
pop
lea
les
aad
mov
es
add
out
divl
stos
mov
shl
int3
in
in
fildl
mov
add
cld
pop
mov
sbb
insb
dec
bound
inc
adc
cmpsb
lret
add
scas
jae
xchg
mov
lods
or
push
xchg
xchg
sub
inc
ficomps
xchg
and
ja
sub
stos
daa
jge
mov
jle
pop
lods
jg
pop
aam
js
jecxz
push
test
mov
dec
dec
jbe
mov
or
pop
sub
stos
fwait
jae
int
xchg
pop
sbb
sbb
pop
mov
mov
cmpl
popl
jno
cmpsl
fidivs
pop
mov
mov
ljmp
ljmp
lds
pop
mov
push
cmp
xor
jno
notb
nop
inc
lods
cld
jge
cmpsl
mov
and
rorl
cmpsl
int
out
add
or
push
pop
pushf
ror
mov
test
sub
aam
ffreep
mov
push
enter
pushl
rorl
add
test
jecxz
fwait
jle
addr16
sbb
dec
pop
aam
shrb
xchg
add
or
aad
loopne
mov
pop
push
dec
dec
test
pop
mov
sbb
add
mov
mov
jae
sub
cmc
mov
mov
sbb
adc
sub
xor
lret
and
aad
sti
add
xor
rorl
mov
cmpps
gs
movsl
je
jge
xor
xchg
insl
testl
je
repz
and
ja
inc
enter
push
gs
sub
lds
pop
push
ljmp
mov
push
cwtl
movsb
cmp
jbe
roll
movsb
pop
mov
mov
call
push
inc
push
fwait
mov
cs
pop
in
clc
nop
jecxz
cmpsb
test
ss
aaa
xchg
gs
repnz
das
lods
outsl
and
jns
pop
cmp
push
mull
push
jne
mov
lock
mov
int
mov
pop
sarl
daa
icebp
roll
dec
xchg
xor
leave
jo
xchg
xchg
sub
xor
lret
inc
pushf
jo
inc
sub
sbb
daa
lcall
cmp
ret
jg
pop
add
aas
jae
jo
pop
push
add
adc
lcall
je
and
push
int
push
imul
mov
or
fs
outsb
jl
jmp
xor
pop
mov
xchg
dec
rcll
scas
mov
add
aad
sub
adc
stos
cmp
jb
push
sbb
decl
arpl
mov
fs
cmpsl
mov
dec
sbb
in
sub
test
fldln2
std
pushf
dec
aaa
push
mov
cmpsl
sahf
push
mov
and
loope
repnz
addr16
inc
jne
xchg
rcll
sub
pop
cmpsb
mov
shl
push
mov
pushf
pop
repz
mov
aam
mov
pop
lock
jne
or
and
stos
xor
push
inc
movsw
mov
cli
loopne
test
jne
sbb
aad
push
cmpps
outsb
fs
xchg
test
leave
pusha
loop
popf
sub
mov
scas
cmpsl
add
xlat
sub
xchg
mov
dec
adc
js
pop
jl
lcall
xor
sub
nop
daa
adc
scas
pusha
je
nop
sub
adc
pop
ret
pop
mov
mov
push
fucomp
scas
cwtl
cmp
in
lods
ss
xchg
mov
sub
aaa
cli
ret
std
scas
adcb
data16
negb
fwait
add
cmpl
push
adc
stos
in
jmp
js
jo
pop
mov
fwait
scas
mov
cmp
mov
cmp
mov
push
lock
inc
add
les
scas
xor
cmc
clc
movsb
btc
cmp
mov
scas
cmp
ss
in
popf
inc
idiv
or
jbe
lcall
xchg
rcr
popa
icebp
sub
cs
dec
adc
jge
xchg
fdivrl
sahf
ret
int
xchg
ficoml
mov
push
pop
xchg
stos
push
outsl
xchg
fists
add
gs
pop
sbb
arpl
movsb
movsl
push
outsl
loop
push
xchg
xchg
lret
mov
fmuls
push
stos
xchg
mov
pop
or
push
mov
and
sbb
lret
sbb
adc
imul
sahf
sbb
addr16
cmp
repnz
inc
out
inc
iret
sbbl
sahf
lods
lahf
and
push
mov
jo
js
rsm
pop
add
orb
gs
lods
hlt
ja
and
xchg
xlat
loopne
pop
popf
addr16
int3
fnsave
fisubrs
lock
or
dec
mov
imul
adc
mov
sub
inc
inc
xor
pop
repz
sub
adc
pop
lds
iret
jnp
mov
movsb
sub
jmp
insl
mov
and
pop
idivl
pushf
outsl
hlt
shr
scas
test
jbe
pop
push
out
jg
loop
jmp
adcl
dec
mov
adc
sub
shll
push
inc
and
popf
shrb
imul
push
das
pop
xor
aaa
inc
xadd
inc
addr16
xchg
test
sbb
shl
push
popa
push
negl
or
mov
dec
push
cwtl
mov
xlat
movsb
cmp
mov
shrb
mov
push
in
sbb
jecxz
push
mov
mov
fcompl
inc
shrl
sbbl
lret
shr
scas
enter
sbb
sbbb
pop
cwtl
mov
mov
icebp
in
jo
mov
sub
jge
js
pop
popf
xchg
sub
mov
divb
pusha
test
scas
imul
mov
mov
or
stos
inc
push
aam
adcl
imul
cmp
daa
mov
pop
jge
xchg
lods
dec
call
jle
fwait
xor
mov
sbb
jb
test
addr16
clc
sahf
or
jno
xchg
and
scas
mov
arpl
lahf
jno
push
js
arpl
stos
xchg
xchg
cli
inc
enter
mov
mov
hlt
fcom
jo
xchg
mov
dec
and
shll
out
cmp
rcll
sub
daa
mov
sub
inc
lock
popa
ret
ror
das
mov
lea
arpl
data16
sbb
xchg
popa
mov
jo
add
mov
cwtl
rorb
adc
cltd
aam
lds
add
jbe
lcall
dec
sbb
sub
jl
idivb
dec
movsl
rcrb
mov
mov
cmp
in
int3
push
imul
aam
int3
mov
clc
or
dec
mov
mov
sarb
pop
movsb
cmp
pop
mov
fisubrl
sbb
xor
xchg
add
xor
and
dec
mov
insl
adc
in
hlt
adc
push
pop
scas
jmp
pop
sub
sub
jmp
add
lods
mov
inc
icebp
ja
dec
xor
cmpsl
mov
mov
sbb
imul
dec
lahf
movsl
clc
pop
fisubrl
outsl
jns
loopne
es
jecxz
dec
adc
mov
add
push
sti
mov
xchg
pop
cmp
push
adcl
push
sbb
fldt
leave
jnp
xor
jge
mov
mov
cld
lock
popa
sbb
das
lds
pop
je
add
dec
imul
jne
jmp
jne
scas
xchg
sbb
scas
out
les
int
lahf
shrl
scas
push
js
or
sbb
cltd
jae
sbbl
mov
mov
mov
inc
jmp
decb
aam
rclb
xor
notb
pop
jno
or
dec
gs
mov
pop
adc
dec
xlat
sbb
js
pop
add
jp
mov
into
popf
inc
fidivl
add
stc
sub
into
ljmp
jbe
enter
dec
test
mov
xor
add
mov
stos
and
push
mov
mov
subl
mov
cltd
pop
lcall
inc
adc
sahf
lret
or
mov
orb
sub
lds
in
sub
or
mov
test
sub
call
sbb
mov
aaa
or
jns
adc
sbb
dec
xor
mov
and
sbb
adc
insl
mov
xlat
sub
dec
inc
js
xchg
and
lcall
sub
cltd
fwait
dec
mov
jns
fsts
fiadds
add
xlat
sbb
mov
jmp
notl
cmp
loop
or
mov
sub
movl
dec
in
push
pop
call
fildll
inc
push
add
or
and
pop
pusha
dec
lahf
adc
jl
movsb
les
js
loopne
ss
cld
mov
imul
push
fwait
aaa
push
sarl
mov
fwait
dec
xchg
mov
or
add
xchg
xor
inc
cmp
and
aam
or
inc
stos
push
jge
cmp
inc
adc
dec
or
jle
jns
pusha
pop
lcall
mov
fmuls
test
sahf
repz
jmp
stc
mov
and
inc
or
shrb
pop
sbb
dec
pop
repz
fisttps
popf
leave
mov
popf
stos
push
clc
cld
or
push
outsl
in
mov
sub
lock
jecxz
mov
fwait
inc
cltd
das
loopne,pt
jmp
pop
mov
xchg
mov
dec
lcall
sub
cmp
movsl
cmp
lret
mov
jge
loop
scas
pop
loopne
iret
sbb
shlb
lret
repnz
lods
pop
fiadds
push
leave
mov
xlat
outsb
stos
or
and
insl
or
aad
xchg
or
cmpsl
movsb
repnz
pop
scas
idiv
add
das
lods
mov
mov
pop
xor
nop
sti
fstpt
scas
sub
in
sarl
jo
cmpsb
cmp
movsl
loop
cmpsl
push
out
loop
xor
test
repnz
cli
sub
clc
pop
sbb
jbe
add
mov
cmp
sub
jb
sbb
pusha
scas
pushf
bound
inc
and
jbe
fs
push
jae
nop
mov
add
cmp
adc
daa
and
jle
fs
pop
hlt
jne
sub
rclb
adc
mov
jns
rcrb
sbb
mov
bnd
mov
out
rep
daa
lcall
xchg
dec
test
or
stos
lea
mov
mov
div
xchg
pusha
iret
xor
add
push
jb
daa
add
or
rclb
inc
cmc
jno
popa
lahf
ret
push
and
mov
mov
adc
and
mov
inc
in
lcall
lea
je
xor
xor
aad
test
shrl
dec
fidivrl
cmp
pusha
insb
xor
sahf
cmp
cld
push
or
fsts
decb
loop
out
int
scas
lahf
pop
push
in
inc
enter
and
sbb
outsb
pop
not
push
push
jge
outsl
mov
xor
lret
es
testl
jae
jl
inc
popa
push
mov
popf
inc
mov
int
repz
add
cltd
sbb
adc
sbbl
adc
and
dec
fmulp
vprotq
or
in
out
xchg
out
lds
adc
or
mov
cmp
cli
adc
fadds
scas
out
sub
loope
or
xor
ljmp
cmpb
mov
adcl
or
stos
pushf
pop
cmp
mov
ds
cwtl
shll
jb
lea
mov
inc
jo
and
ss
and
cmp
inc
xchg
pop
fcoml
nop
inc
dec
inc
lods
push
icebp
fwait
into
in
pop
push
test
add
adc
mov
adc
cltd
mov
lahf
ss
or
popf
push
lds
xor
gs
in
pusha
pop
and
pop
in
add
pop
hlt
loopne
lods
ljmp
pushf
repz
popf
or
or
lcall
pop
pop
jg
dec
xchg
das
scas
loop
fists
cmpsb
xor
insb
xorb
repnz
cmp
movsb
les
clc
mov
xor
dec
cmpb
ljmp
sbb
sub
adc
insb
filds
out
xor
sahf
dec
or
rorb
mov
mov
xchg
mov
or
ficoms
int
sbb
pop
inc
dec
cmp
jb
push
xchg
out
mov
pusha
xor
jb
xor
stc
pop
add
nop
movsl
icebp
mov
add
jno
add
loope
pop
lods
jnp
pop
lds
adc
inc
pop
adc
add
xor
add
jecxz
cltd
adc
stos
test
daa
pop
ret
push
sbb
aas
mov
in
jg
testl
popf
mov
ds
xchg
pop
cmp
stos
fdivrl
pop
inc
dec
pop
jle
int
lods
subb
mov
aad
shr
mulb
out
xor
pop
jle
pushf
or
mov
xor
cmc
lock
mov
sbb
pop
addb
pop
add
cs
test
xchg
inc
push
repnz
sub
pop
cmp
stos
sub
sbb
js
dec
sub
nop
addr16
jnp
push
sub
loopne
movb
out
xchg
jno
pop
mov
mov
cwtl
cltd
aas
int
gs
js
inc
jb
popa
xchg
gs
insb
rolb
add
jne
sbb
int3
loope
mov
cld
aas
mov
push
fstps
push
repnz
mov
notl
sub
sbb
fnstenv
leave
dec
inc
scas
inc
jne
pop
jmp
and
popf
insl
jae
mov
iret
std
out
mov
add
insb
mov
scas
call
cmp
add
out
sub
mov
popa
mov
xchg
and
mov
fstpl
cwtl
inc
pop
lret
fst
or
ret
fwait
xor
xor
out
mov
pop
addr16
jns
mov
test
adc
or
jbe
jae
or
aad
adc
adc
cmpsb
jno
mov
sbb
shrb
cld
xchg
and
pop
xlat
pop
add
push
mov
inc
in
insl
jg
or
fnstenv
or
xchg
push
mov
xchg
add
in
fnstenv
inc
pop
cmp
sub
and
ja
push
and
sti
test
sub
push
jns
test
and
or
xchg
cs
hlt
mov
pop
leave
jge
pop
scas
or
sbb
insb
lods
cmp
add
xor
repnz
push
mov
xor
jo
pop
mov
pop
sub
in
inc
cmp
stos
push
push
repnz
int3
xlat
outsb
add
jne
pop
cmc
or
lcall
push
add
leave
xor
out
insl
stc
mov
rol
das
daa
add
jmp
popa
adc
mov
cmp
fwait
and
push
push
push
fistl
testl
cmc
cwtl
pop
mov
out
mov
push
xor
mov
xor
mov
mov
rol
xchg
adc
lock
jno
outsl
loop
insb
push
call
std
mov
sub
and
ret
adc
cmp
xlat
sbb
std
iret
or
mov
mov
daa
mov
mov
push
scas
jnp
call
xchg
sub
adc
fistpll
or
sti
pop
or
and
mov
int3
inc
xchg
push
in
push
aaa
add
data16
add
incl
je
xchg
inc
test
js
dec
add
add
pop
imul
scas
cld
sbb
add
adc
mov
adc
fwait
cmpsb
jo
sbb
mov
adc
push
push
jno
std
push
jb
fcomps
mov
cmp
loope
fisttps
and
adc
rorl
pop
lods
sub
or
adc
adc
out
push
imul
lret
ja
std
dec
sub
rep
xchg
inc
mov
push
int
int
and
jne
xlat
cmp
adc
cli
pop
dec
loope
or
dec
pop
orb
rcrb
loop
inc
fwait
std
icebp
movsl
inc
daa
das
mov
jmp
mov
test
and
cld
jnp
push
mov
repz
inc
jbe
je
stos
jae
push
jp
pop
mov
lahf
jmp
vmovupd
xchg
movsl
inc
cmpsl
pop
push
jne
data16
jae
mov
lea
xor
dec
adc
push
in
aas
dec
adc
nop
stos
sbb
or
cld
pop
mov
inc
jnp
aaa
add
bound
inc
sahf
fimuls
mov
xor
sbb
fnstenv
ja
jmp
adc
add
ss
fwait
push
or
inc
clc
mov
jne
out
inc
fs
push
xor
jnp
sub
lret
inc
jl
andb
aam
xchg
addr16
test
aad
xor
or
data16
stos
out
xchg
add
mov
js
xor
xor
sub
adc
jb
rcrb
daa
lcall
inc
fadd
push
cmp
leave
mov
lahf
xchg
cmpsl
fnsave
aad
jle
out
out
jmp
int
and
insb
ss
xor
jmp
lcall
loopne
sahf
push
sar
mov
jg
pushf
sarb
adc
mov
mov
aas
xor
sub
rolb
shrl
ja
xor
pusha
sub
inc
daa
push
inc
or
cmc
xor
loop
fdivrp
shr
movsl
stos
adc
cmp
sbb
mov
out
adc
xchg
movd
or
jle
xor
subl
stos
xor
in
sub
mov
cmp
cld
notl
pop
mov
aas
sahf
jae
and
test
clc
jg
cltd
scas
cs
and
stc
aas
aam
add
pop
testb
cmp
push
stos
clc
testb
add
and
push
dec
mov
cmp
bound
cwtl
movsl
pusha
inc
sub
loopne
or
mov
pop
insl
jp
jno
inc
jg
loop
popa
sub
mov
test
fcoms
in
mov
popl
cmp
pop
push
lds
xor
cmp
inc
ficomps
dec
mov
mov
fsubrl
pushf
sub
sub
shll
and
add
gs
lock
xchg
mov
fwait
jbe
xchg
fisubl
inc
jae
pop
jp
notl
sbb
cltd
gs
test
nop
mov
pop
fildl
or
fpatan
pop
and
and
cmp
in
adc
movsb
pop
shld
add
movsl
loopne
pop
out
mov
in
push
push
lea
lret
mov
scas
stc
dec
cmp
jns
adc
dec
pop
out
jg
lahf
push
push
mov
xchg
adc
and
mov
fwait
sub
push
jg
mov
ss
push
loopne
fcomi
xor
inc
lret
push
sbb
sub
pushf
scas
cmpsl
push
fidivs
movsb
test
adc
or
jmp
stos
test
fsub
sub
cwtl
pop
cmp
aaa
cmp
aas
insb
sub
mov
xchg
sub
stos
sub
sbbl
jbe
push
or
xor
mov
int3
mov
mov
test
sahf
mov
jl
jp
lods
cmp
add
jle
xor
xchg
dec
or
cmp
dec
add
sti
stos
jmp
mov
mov
push
mov
lock
outsb
lcall
and
in
test
fstp
xchg
cltd
pop
and
xchg
mov
inc
in
sub
in
adcl
dec
das
int3
pop
repnz
dec
cwtl
pop
popf
push
pop
pushf
mov
pop
lods
mov
cltd
mov
lret
in
mov
outsl
lcall
pop
add
ss
or
mov
fcompl
dec
jae
hlt
fwait
jp
push
mov
cmpsl
jb
xchg
shlb
add
sar
mov
xor
push
jmp
or
loop
push
addr16
fldl
fnstsw
mov
jns
testl
pusha
test
in
jns
jp
add
fimuls
cmp
jecxz
xchg
out
mov
mov
call
mov
add
xor
fcomip
pop
inc
adcb
shrl
push
sbb
and
xor
stc
cli
and
pusha
add
pop
mov
jno
std
and
aam
dec
mov
imul
mov
icebp
bnd
dec
dec
fiadds
cmp
xor
call
js
jmp
jge
imul
pop
shrl
push
test
mov
push
movsb
pop
cmc
adc
in
adc
dec
mov
push
lock
push
aad
or
repnz
dec
fwait
jb
or
mov
add
out
push
xor
cmpsl
add
mov
fidivrl
mov
dec
jmp
mov
mov
aad
cmp
lds
jge
cmc
fimull
mov
pop
xor
push
inc
cld
pop
mov
cmpsl
stos
cmp
loopne
les
mov
fdivs
arpl
ffree
push
or
fidivl
jmp
push
sbb
cmpsb
mov
mov
mov
cmpl
leave
sub
push
dec
ret
xchg
xor
cmpsb
aas
ljmp
insb
jno
loop
pop
rcrb
rorl
adc
lea
incl
jo
movsb
les
test
gs
hlt
pop
hlt
or
test
test
add
cwtl
sbb
inc
sahf
and
cli
inc
lcall
pop
andl
test
sub
iret
dec
xchg
std
push
imul
daa
outsb
lret
in
stc
lods
out
lods
mov
rcrl
jecxz
cmp
pop
aaa
fstpt
out
xchg
shlb
sbb
xchg
jae
or
pusha
fwait
in
cld
sahf
cld
daa
repnz
enter
addl
test
sub
jp
aad
or
imul
test
fidivrl
push
push
popa
dec
add
xlat
sub
xlat
xchg
negb
mov
cld
mov
mov
mov
pop
pop
jge
jns
push
xchg
mov
push
test
lret
cli
imul
jge
or
out
pop
movsb
call
out
shrl
inc
test
pop
iret
dec
test
lods
mov
lret
adcb
test
mov
jp
scas
idivb
fldl
int
xor
mov
cmp
lea
pop
push
xchg
mov
xor
push
or
push
mov
push
out
movsl
adc
jne
dec
jne
movsl
ljmp
hlt
mov
mov
vpackuswb
out
adc
cli
scas
out
jb
mov
mov
xchg
loopne
outsl
daa
cmpsl
sub
push
jns
subb
dec
push
dec
add
sbb
jecxz
sahf
xchg
ficompl
mov
cltd
and
enter
xchg
ljmp
mov
rcr
icebp
inc
xor
pop
adcb
loop
mov
jne
pop
xor
xchg
xchg
sbb
movsl
xchg
cli
lea
lret
and
daa
fisubrl
loop
aam
sbb
stc
sub
sub
mov
and
clc
negb
dec
dec
lea
pop
aam
mov
push
loope
xor
xchg
popa
in
aaa
std
rolb
mov
js
inc
xchg
call
cmc
cmp
sub
shl
icebp
dec
in
sti
mov
sub
and
inc
pop
add
fdiv
fldcw
mov
cli
jl
stos
mov
fwait
sti
testb
cmp
out
add
jnp
fisubl
out
mov
or
inc
fs
jno
xor
dec
das
aas
jbe
cltd
sub
scas
mov
and
inc
and
bound
popa
int3
loop
push
or
imulb
test
inc
sbb
fbld
push
xchg
insl
mov
movsl
repz
dec
fsubrs
repnz
push
xor
xchg
sbb
xchg
sbb
test
cmc
or
mov
fbstp
test
push
mov
xchg
shlb
lcall
les
and
hlt
jnp
sub
pusha
clc
sbb
inc
ds
test
addl
js
mov
imul
xor
mov
push
dec
lods
ret
sbbl
rorb
lret
test
and
shrl
pop
out
lods
dec
std
sub
addb
gs
dec
and
lods
xorl
pop
jnp
int
mov
push
pop
imul
adc
insl
daa
rcll
cmp
jno
clc
enter
leave
mov
and
jb
mov
ss
pop
mov
aas
repz
outsb
xorl
pop
push
inc
cwtl
stos
std
mov
mov
xchg
dec
xor
inc
and
call
divps
daa
cli
mov
shlb
popa
fistpl
sub
ds
jge
adc
lcall
fwait
xor
adc
dec
adc
into
mov
popa
fcoml
into
dec
in
and
inc
mov
cmc
xchg
jo
push
jmp
xchg
sbb
and
outsb
sub
out
scas
ret
dec
or
pop
xchg
dec
xchg
cld
mov
popa
mov
cli
lahf
mov
imul
loop
hlt
push
pop
enter
sub
sbbb
popa
test
loope
in
in
push
xchg
repnz
dec
cmp
insb
push
insb
mov
imul
fnstenv
fisubrl
dec
inc
idivl
sub
xor
push
pop
pushf
jp
cmp
push
dec
inc
in
xor
loope
cmc
push
or
repz
sub
rcrb
push
pusha
dec
pusha
jnp
test
mov
adc
sub
adc
outsl
dec
jl
cmp
pop
xor
jbe
mov
or
addb
mov
add
scas
sbb
test
insl
cli
mov
cmp
jg
sbbl
call
inc
xchg
sbb
adc
movsb
mov
fsubl
jne
xchg
js
bts
dec
mov
stc
add
mov
mov
xchg
inc
fsts
sub
add
inc
xchg
mov
scas
adc
rolb
pop
jae
js
adc
lea
fisttpl
daa
lcall
adc
loop
in
add
or
dec
test
repz
adc
loopne
xor
cmp
pop
jmp
cmp
lods
pop
cmpsb
imulb
repz
lods
jne
pop
sbb
test
sub
add
inc
aam
das
inc
pop
add
stos
cmp
jecxz
and
pop
data16
lods
ds
fcoms
out
adc
mov
js
shrb
neg
and
or
out
add
or
iret
xor
jns
mov
out
cmp
jmp
imul
repnz
mov
or
addr16
cmp
inc
lcall
fwait
push
push
pop
gs
mov
push
scas
sub
cs
dec
push
jns
in
cmpsb
lret
xor
add
dec
mov
dec
adc
ljmp
jb
arpl
push
add
jne
xorl
aaa
testl
adc
jo
adc
xor
daa
aaa
cmp
inc
int3
enter
xchg
inc
test
and
inc
mov
fdivrs
fadd
loop
out
pusha
sbb
dec
or
cmp
sahf
xor
or
jno
sbbb
mov
shll
movups
mov
icebp
mov
push
fsubrs
mov
add
es
imul
push
enter
cmp
in
dec
or
in
call
jmp
jno
ret
mov
loop
pop
dec
adc
in
dec
fcomps
push
lock
lods
pop
and
lret
xchg
in
fnstsw
xor
mov
call
lds
sahf
std
out
pop
xchg
xchg
or
mov
pop
mov
cmc
mov
sahf
leave
and
jg
add
mov
insb
rcrb
nop
dec
pop
imul
stos
clc
sahf
xchg
add
call
dec
pop
jns
mov
outsl
xchg
sub
adc
cmp
mov
rcl
int
sbb
jg
push
jbe
jp
negb
gs
mov
shlb
fnstsw
mov
lods
ljmp
lock
out
aam
add
push
sbb
adc
mov
jecxz
and
mov
xchg
movsl
repz
std
cld
mov
pushf
sti
jnp
ret
xlat
jae
js
jbe
mov
scas
push
lcall
jne
stos
jae
xchg
sbb
pop
int3
in
test
fcompl
aam
pop
in
test
pxor
sbb
jl
out
jns
fnsave
or
xor
jecxz
or
sub
jp
inc
inc
fidivl
aad
lods
lahf
gs
push
lret
xchg
inc
dec
sub
fdivrl
loope
fnstsw
test
sarb
add
pop
cmp
dec
enter
jae
add
cmp
ret
and
out
hlt
dec
je
cli
sbb
int3
adc
out
movsl
push
adc
xchg
aaa
pop
push
bound
lret
xor
mov
and
mov
or
das
imul
sbb
mov
dec
cmpsb
xorb
and
sti
mov
loope
push
push
jno
mov
jae
add
inc
cmpsl
sbb
pop
loopne
xchg
adc
push
add
jns
inc
popa
xchg
call
popf
sbb
dec
icebp
adc
xor
insb
dec
or
stos
add
mov
movsb
pop
fidivl
push
pop
jg
aaa
mov
data16
add
movsb
cmp
pop
lock
or
dec
cltd
std
dec
sbb
jp
mov
sti
movsl
xchg
add
ret
leave
pop
jbe
sbb
shl
addr16
ret
and
int
lret
push
stos
inc
test
stos
outsl
push
inc
push
push
scas
and
arpl
inc
xor
cmpl
xor
push
jmp
stc
pop
mov
sub
add
inc
and
bound
ficomps
hlt
xchg
mov
stos
clc
adc
pop
dec
dec
cmp
jle
ret
lahf
pop
cmp
int
cmp
loop
sbb
out
cmp
push
mov
cmpb
shrl
or
and
or
testl
dec
xchg
ja
cmp
or
stos
fiadds
xchg
jb
sti
out
inc
int
jns
dec
dec
pop
adc
test
mov
jbe
xlat
pop
sub
test
jnp
add
outsl
add
jp
lret
push
xchg
or
mov
popf
test
sbb
loope
adc
ret
jns
or
scas
je
pop
sub
mov
cmp
dec
push
dec
jecxz
pop
cmp
cmp
iret
dec
loope
jecxz
mov
xor
sahf
mov
mov
nop
daa
mov
mov
xchg
mov
cmp
pop
cmc
inc
pop
loope
mov
pushf
loope
dec
popl
add
arpl
lods
inc
xlat
and
pop
xorl
mov
pop
mov
clc
jle
jno
xchg
into
gs
mov
in
add
adc
loopne
or
adc
sub
xchg
cmp
fnstenv
flds
or
imul
mov
scas
mov
push
adcl
jle
xor
jbe
and
pusha
das
push
xchg
pop
int3
psrlq
fnsave
mov
pop
mov
mov
aad
subb
int
jecxz
out
pop
lods
out
dec
je
xor
pop
inc
adc
xor
fsubl
cltd
cmp
cld
inc
into
enter
dec
pop
xchg
xor
and
in
push
out
pop
sub
jne
std
gs
mov
jmp
or
jl
inc
jne
push
push
lods
pop
mov
xchg
insb
outsl
lahf
inc
cmp
jae
rorb
fisubs
imul
dec
dec
xor
jne
lock
hlt
ret
cmc
lds
test
or
add
fcmovbe
sbb
enter
sbb
xchg
jp
add
push
xchg
aaa
mov
ds
cld
test
int
mov
mov
push
jmp
xor
cmp
decb
arpl
sub
stos
stos
push
shll
cld
pop
sub
mov
cmp
sbb
dec
sbb
js
shll
mov
push
mov
inc
pop
dec
push
les
sbb
jnp
push
add
sbb
mov
mov
xchg
dec
test
pop
jo
icebp
insb
movsl
insb
divb
sub
inc
fsts
xor
mov
jnp
jl
sbbb
push
das
mov
add
outsb
jl
inc
jle
sahf
and
and
mov
jnp
cmp
mov
push
test
fwait
icebp
xchg
cmpsb
dec
arpl
mov
mov
jo
xchg
pop
push
adc
in
xchg
test
push
lods
loope
mov
adc
cmpsl
pop
cmc
out
mov
mov
fldl
imul
jo
pop
lret
cs
push
gs
push
es
sub
push
mov
mov
data16
cld
push
cwtl
mov
pop
test
das
push
loope
add
jae
dec
repz
ret
fmuls
fs
test
adc
testb
dec
adc
hlt
test
cmp
fnstsw
rolb
mov
and
fdivs
mov
jae
jo
sub
dec
mov
mov
shll
lods
and
cmp
imul
jge
in
adc
jle
xlat
or
xchg
stos
pop
xchg
notl
jb
add
and
lcall
add
ja
pop
push
in
dec
imul
imul
outsb
and
adc
lret
xorb
mov
adc
sub
in
fwait
pop
sbbl
add
stos
in
cmp
push
lcall
inc
push
mov
push
xor
jge
cmpsl
int
cmp
pushf
arpl
movsl
sbb
mov
push
movsb
xor
bound
mov
mov
add
cmpsl
stos
out
pop
repz
fcoml
push
pusha
enter
adc
ret
pop
lds
ret
loopne
fdivr
ja
call
or
cld
or
add
xor
push
add
leave
in
and
xor
in
mov
test
ja
repnz
and
lret
sahf
add
movsl
jl
stos
pop
cmc
daa
bound
iret
dec
jl
jnp
cwtl
arpl
adc
pop
fwait
jne
stc
push
and
sbb
pop
in
fsub
or
movsb
xchg
cmpsl
fdivrl
cmp
jp
mov
rcrl
or
pop
frstor
lcall
dec
add
mov
repz
scas
adc
ljmp
pushf
rcl
stos
cltd
das
sub
jmp
dec
jge
push
or
aam
aad
fnstsw
jno
into
int3
aaa
mov
mov
push
jecxz
fcomps
rcrb
and
lret
and
or
in
dec
jns
jecxz
ret
add
push
scas
pop
hlt
fnstenv
popa
and
inc
les
push
fisubl
xor
jg
or
mov
inc
xor
js
pop
aaa
js
lret
jge
push
mov
jmp
je
adc
lahf
inc
adc
and
mov
dec
stc
mov
sub
dec
pop
sbbb
in
jle
lahf
bound
ror
repz
push
nop
add
sbb
mov
fcoms
icebp
adc
lret
dec
mov
imul
icebp
mov
push
sbb
fsts
bound
jg
mov
ror
in
or
adc
sub
out
dec
inc
frstor
fs
mov
add
je
mov
dec
js
js
jmp
aam
pause
lea
inc
idivb
fildll
loope
xor
leave
push
inc
jp
pop
mov
inc
fadds
mov
sub
lods
fistl
xchg
ja
pop
stc
nop
cmp
or
cmp
int3
dec
in
jp
sub
insl
pop
inc
test
hlt
xchg
mov
movsl
mov
call
or
xor
cld
pop
cmp
and
inc
fistps
dec
sti
push
inc
lods
mov
insl
loop
inc
push
adc
sbb
mov
lea
fildll
repnz
ja
rep
adc
aad
xchg
scas
push
leave
sbb
shl
fldcw
dec
int3
cmc
dec
mov
xor
std
pop
mov
mov
pop
shlb
add
dec
xor
xor
data16
cmpsl
cmpsl
cmpsl
stos
mov
daa
mov
push
lock
fcmovnu
xchg
mov
fnstsw
loopne
pop
pushf
or
jmp
or
mov
add
stos
xchg
stos
xchg
test
xchg
fidivrs
fldl
adc
ret
sahf
cmp
notb
daa
inc
pop
sbb
jecxz
popa
mov
cmpb
ja
lcall
inc
push
test
and
sahf
push
mov
mov
mov
or
aam
xchg
inc
xor
cmp
adc
cmp
add
cmpsb
cld
add
mov
iret
sbb
add
into
adc
arpl
and
and
xchg
rol
jecxz
std
fiaddl
stc
mov
aaa
xor
dec
add
fsubl
dec
cmpsb
lods
aas
fisttpll
fdivrl
mov
les
sub
icebp
mov
pop
out
add
cld
loop
xor
mov
ljmp
call
fwait
sbb
pop
mov
sub
out
lret
mov
stc
leave
push
shr
andl
inc
stos
imul
dec
inc
into
cs
push
push
outsl
in
dec
dec
inc
mov
dec
pop
adc
pushf
xor
pop
jne
dec
or
lds
jno
cmpsb
xchg
stos
mov
lods
dec
cmp
imul
shrl
fidivs
outsb
xchg
stos
sbb
jae
filds
jnp
lods
icebp
inc
add
push
mov
add
aam
jb
dec
pusha
shl
incl
xor
jle
jle
ljmp
pushf
test
xlat
test
mov
test
mov
dec
jno
mov
xorl
into
outsb
sbb
inc
arpl
mov
call
xor
addr16
clc
rcrb
ja
or
mov
inc
addr16
lret
push
inc
mov
jae
ret
stc
clc
jg
lret
sbbb
xlat
inc
push
mov
mov
cli
in
add
dec
outsl
pop
pop
xlat
outsb
dec
sub
push
inc
sbb
mov
popa
xlat
cli
iret
ds
jno
fdivs
scas
or
int3
mov
movsl
aas
jno
bound
xchg
jp
push
out
mov
lcall
inc
push
push
popa
mov
xchg
insb
jno
nop
stos
mov
in
mov
and
xor
jo
test
push
lods
loopne
in
push
push
add
lret
cwtl
push
mov
jmp
movsb
push
arpl
into
movsb
pop
xor
das
xor
cltd
loop
data16
xchg
sub
add
mov
sbb
cmpsb
stos
xchg
inc
or
repnz
sbb
not
cmp
pusha
sbb
jbe
pop
mov
pop
outsl
sbb
jl
xrelease
popf
pop
adcb
imul
jge
jo
test
add
insl
lods
mov
sub
push
cmp
sub
cmpsb
pusha
push
lcall
in
jns
xor
push
out
repnz
jbe
jb
cmpl
scas
push
jmp
into
jmp
add
and
mov
cld
sahf
cvtdq2ps
stos
in
push
cmc
cmp
data16
cmp
mov
test
xchg
xchg
scas
cld
cmp
ret
les
and
add
mov
pusha
adc
dec
mov
xchg
mov
cli
in
ficompl
dec
pushf
xor
rcrl
mov
icebp
enter
sub
dec
mov
rcrb
outsb
adc
add
and
nop
push
mov
pop
lods
lcall
pop
jbe
inc
dec
mov
cli
call
jge
es
or
sbb
dec
fwait
xor
add
scas
call
xchg
mulb
in
and
pushf
adc
loope
test
ljmp
mov
lods
inc
pop
jmp
sub
and
hlt
mov
sahf
popa
mov
loopne
inc
fprem
add
shll
sbb
xlat
lcall
jnp
jbe
mov
in
decl
add
xchg
push
out
mov
cmc
repz
inc
push
in
sbb
aam
pop
xchg
xor
dec
jle
sub
cwtl
push
pusha
push
mov
push
push
out
aaa
jle
cmp
inc
mov
xchg
cwtl
xor
push
movsl
inc
mov
popa
xchg
mov
add
repz
hlt
mov
cli
jne
jle
fsubrs
mov
inc
ss
cltd
push
mov
rolb
std
jp
push
cmp
mov
lock
movsb
pop
rcrl
loop
ljmp
outsl
push
loope
mov
add
out
lahf
aas
and
adc
loop
leave
jecxz
fstpt
test
stos
test
ja
lcall
pushf
leave
cmp
inc
push
scas
pushf
mov
ds
inc
lock
stc
sub
stos
in
sbb
aas
cmp
fnclex
mov
push
out
or
sti
loop
sub
mov
out
dec
xor
icebp
xchg
cltd
jmp
xchg
out
nop
dec
dec
push
xchg
cs
outsl
test
adc
ret
repz
dec
pop
inc
adc
inc
sbbl
popa
jns
shrb
add
cltd
lock
mov
lods
inc
or
imul
insb
inc
cmp
xor
pop
sub
ficomps
cmp
xrelease
mov
pushf
xor
push
fldt
jne
mov
insl
jnp
cltd
and
or
fistpl
inc
and
add
xor
mov
scas
adc
jge
imul
and
inc
enter
aad
mov
mov
cmp
es
mov
pop
pop
test
inc
test
into
xchg
mov
cli
jb
push
and
sbbl
mov
es
push
mov
pop
popf
not
bound
pop
out
fdivrl
imul
lcall
add
je
push
jmp
int3
xchg
pop
mov
and
std
xchg
loopne
fwait
xor
test
mov
mov
xchg
or
mov
outsb
into
adc
push
rorl
and
in
ds
dec
pop
idivb
lret
mov
xchg
push
out
or
cmp
std
shrl
push
movsl
mov
shrb
mov
jmp
ds
pop
lock
or
jge
sahf
xor
mov
xchg
and
repnz
ja
repz
aam
add
aas
push
lods
mov
fnsave
push
jmp
lcall
mov
popa
decb
sub
jl
cmc
mov
mov
jnp
and
jmp
push
jb
mov
sub
mov
int
jge
dec
outsl
cmp
lods
lds
jne
pop
addr16
stos
testb
adc
mov
mov
pop
cmp
pop
mulb
lock
orl
and
lahf
push
xlat
imul
jg
in
mov
into
sub
pop
cwtl
rorl
mov
js
push
pop
jge
imul
insb
out
cmpl
insl
push
and
jge
sub
xchg
test
orl
hlt
pop
in
xchg
repnz
pop
mulb
aam
lock
addr16
lret
outsl
mov
sbb
jmp
pop
std
dec
int3
arpl
inc
jns
xor
std
xchg
or
in
mov
test
test
shrl
adcb
clc
aas
jmp
push
inc
flds
or
sub
adc
xorl
cmc
in
inc
xlat
cmp
test
insb
shlb
mov
es
int
ficomps
dec
pop
cmp
mov
lret
mov
jle
mov
mov
in
and
mov
push
popa
pop
push
push
movsl
inc
fsubrs
adc
inc
popf
xor
dec
into
gs
cmc
ds
cmp
xchg
push
testb
push
xchg
cmpsl
mov
pop
or
mov
ficoms
lods
sub
in
pusha
xchg
leave
fisubrl
test
nop
mov
push
mov
hlt
movsb
cmp
notb
mov
std
mov
mov
mov
lock
out
xchg
adc
mulb
mov
js
mov
adcb
mov
pop
jno
xchg
mov
lds
lods
xchg
push
adc
or
adc
pop
dec
mov
jl
jnp
cmp
push
les
add
mov
pop
cmpsl
sbb
sub
and
inc
pop
arpl
cmpsl
xchg
cmp
xchg
mov
cmp
adc
and
or
das
push
leave
aas
iret
jbe
mov
cmp
mov
rcll
cmpsl
repnz
fidivrl
dec
sbb
jns
push
xchg
jg
ja
xlat
mov
daa
mov
jle
mov
and
sub
jne
les
pop
cwtl
ds
lret
fdivrp
mov
adc
mov
sbb
inc
fistl
ds
int3
lods
pop
outsl
push
addr16
outsl
and
adc
adc
gs
push
add
arpl
ja
aam
ficomps
mov
orl
cs
stos
fcom
and
add
push
leave
fildll
and
test
popa
clc
insb
cmp
cmpb
inc
shlb
fstl
push
push
jae
xchg
and
pop
push
shr
cmpb
or
test
addl
or
decl
ljmp
jl
pop
movsl
sti
dec
adc
dec
imul
pop
inc
test
jno
and
add
sti
mov
in
sbbl
mov
cs
adc
stos
fldcw
mov
lahf
stos
pop
aad
sbb
call
push
hlt
xchg
mov
out
mov
push
sbb
and
mov
xorb
sub
stos
cmp
sub
fstps
lahf
and
sbb
test
sbb
test
adc
fnsave
push
das
repnz
fs
add
cmpl
es
sub
xchg
push
data16
in
jno
leave
mov
and
push
mov
mov
xor
add
mov
shlb
jmp
push
int
aas
add
mov
jne
cmp
sbb
mov
and
cmp
rclb
push
sbb
push
mov
push
inc
dec
loopne
cwtl
insl
mov
or
shll
xchg
in
mov
cs
push
fwait
fs
xor
mov
pop
adcl
pusha
cmp
jae
in
pop
mov
mov
cmp
outsl
inc
mov
xchg
mov
in
negb
leave
aad
je
jns
mov
inc
and
ja
gs
sbb
mov
cld
arpl
push
insb
mov
push
ds
jecxz
dec
jns
xchg
and
push
in
sub
sti
bound
or
jbe
ss
mov
mov
sbb
faddl
jp
pop
fisubrl
push
dec
add
mov
and
xchg
xor
or
add
enter
ret
in
sbb
and
movsl
mov
xlat
sbb
jl
jns
nop
cmpsb
push
out
jp
pop
mov
mov
scas
mov
dec
cmp
lods
stc
mov
push
jge
lret
hlt
sahf
inc
or
outsb
hlt
sub
rcrl
xor
jo
add
add
fidivrs
mov
mov
pop
xor
lcall
xor
jg
gs
es
lock
mov
lods
pop
pusha
pop
jo
push
or
shrb
jb
push
fwait
in
mov
xchg
dec
ror
in
jp
mov
jl
nop
movsl
dec
pop
fistps
inc
cltd
movsl
mov
cmp
inc
mov
lcall
fucomip
bound
add
bound
in
xchg
adc
mov
pop
push
adcl
xor
cmpsl
mov
push
mov
xchg
inc
pusha
or
loop
lods
and
pop
mov
mov
add
cmp
sub
push
out
and
cld
in
into
stos
mov
inc
pushf
push
js
mov
or
imul
xchg
dec
int3
mov
jg
xchg
sbb
lds
and
loope
flds
cltd
divl
mov
rorb
adc
inc
pusha
jnp
lret
popf
jbe
and
push
sub
inc
dec
xchg
stos
jbe
in
adcl
mov
jno
ror
cs
arpl
aad
rcrb
fldcw
fsubrs
daa
int
jno
icebp
insl
add
push
pop
mov
dec
mov
daa
xchg
cwtl
adcl
jecxz
sub
ss
push
or
pop
hlt
add
mov
and
adc
filds
add
or
mov
mov
idivl
sbb
int
mov
lret
jg
fs
pushf
xor
out
aas
movsb
lret
adc
cld
rolb
xlat
outsb
xor
cmc
gs
sbb
sbb
mov
mov
das
mov
xor
xor
lods
cmp
call
std
jmp
mov
adc
cmp
add
inc
addb
pop
stos
adc
lds
push
jbe
in
gs
jle
lret
xchg
and
nop
addl
cmp
enter
push
rclb
fdivrl
xlat
sbb
cmp
js
xor
test
rcll
sub
pop
or
add
cwtl
mov
fldenv
push
sti
mov
in
cmp
arpl
imul
pop
sub
lds
pop
sub
push
in
adc
in
mov
mov
mov
js
das
jno
and
lods
pushf
lods
xor
lret
cmp
lahf
and
jmp
sub
push
mov
or
adc
push
lea
xor
mov
inc
push
inc
pop
test
lret
xchg
adc
mov
mov
stos
mov
pop
or
call
insl
sbbl
xor
and
mov
mov
dec
sbbl
mov
mov
pop
mov
shr
push
cmp
bound
dec
out
addr16
lea
outsb
xchg
mov
push
sbb
mov
popa
pop
adc
pushf
jp
cmp
dec
rorl
cmc
mov
push
push
aaa
add
das
dec
cmp
jbe
xchg
or
pushf
rorb
xchg
fnstenv
arpl
add
xor
dec
jbe
push
fldl
and
xchg
push
and
jge
stos
cwtl
xor
cli
add
adc
sub
mov
adc
mov
push
sub
lahf
jb
cmp
iret
cmp
fnsave
inc
rcll
mov
fsubrs
sahf
das
add
mov
push
daa
adc
and
pop
out
aaa
loope
pop
xchg
push
and
test
add
inc
dec
aas
dec
jl
scas
fisubs
scas
call
subb
mov
hlt
test
dec
add
pushl
stos
inc
fstp
test
dec
mov
push
shl
sbb
jp
push
pushf
mov
cmpsl
vmovapd
call
cmpsb
add
ds
xor
xchg
push
fidivs
outsl
cwtl
fwait
xchg
cld
xchg
or
stc
outsb
mov
xor
fld
adcl
push
add
dec
ss
inc
sbb
mov
mov
dec
in
sti
push
sbb
sti
push
bound
sti
jmp
arpl
pop
lret
cli
outsl
out
fsubs
ljmp
sub
nop
daa
sub
scas
inc
negb
loop
mov
adc
push
mov
pop
mov
xchg
and
scas
inc
clc
and
in
pop
cpuid
push
xor
lahf
ret
mov
es
int
inc
fcmovnu
into
push
jbe
jb
stc
push
andl
sti
lahf
clc
ret
cmp
mov
out
ret
ror
dec
lret
loope
add
ret
mov
mov
jnp
cmc
aas
adc
sbb
jl
jle
pop
dec
aaa
into
cmp
push
shr
pop
aaa
imul
pop
mov
add
and
and
es
orb
lods
std
inc
loope
loopne
mov
inc
sbb
nop
in
out
xchg
push
rcrb
sub
loope
mov
and
sahf
sti
add
cmp
push
and
or
mov
adc
pop
adc
mov
jmp
xchg
addl
lods
in
push
add
sbb
push
xlat
rcrl
cmp
sti
fwait
and
jmp
imul
fstpl
jno
aas
je
or
insb
dec
push
arpl
push
xchg
fwait
inc
ljmp
xchg
inc
inc
jp
cwtl
das
xor
adc
cmp
inc
test
ds
xchg
nop
arpl
mov
clc
pop
shl
iret
or
and
daa
leave
sub
add
dec
adc
ja
push
movsl
inc
cwtl
inc
in
add
daa
xor
xor
rol
scas
imul
fisttpll
sarl
js
jg
hlt
fucomi
jecxz
pop
std
pop
lods
mov
loope
sbb
dec
cmp
cmp
inc
pushf
filds
call
fisubs
shll
mov
mov
fdivrl
imul
mov
dec
inc
sbb
inc
jns
or
adc
cmp
xor
push
mov
lret
jns
inc
loopne
mov
lock
mov
jecxz
xchg
xlat
jle
push
cmp
adcl
and
popa
jecxz
insb
adc
mov
fwait
push
push
fnstenv
mov
js
jl
jg
mov
popa
add
data16
out
pop
adc
add
fwait
mov
loope
mov
stos
fisttpl
aas
ja
test
and
pushf
arpl
movsb
repnz
add
ds
mov
fstps
dec
outsb
and
loop
mov
pusha
pop
stc
mov
inc
movsb
sub
dec
push
pushf
xlat
and
mov
cmpsl
push
pop
jbe
insl
shlb
jne
mov
hlt
adc
push
sbb
fcmovnu
insb
sbb
and
lods
lods
sub
mov
das
fimuls
mov
icebp
pusha
mov
les
bound
hlt
outsl
mov
cmp
sbb
inc
dec
das
das
push
or
imul
jmp
iret
adc
add
sub
lock
std
mov
cmp
push
fs
pop
push
cmpl
pop
rcl
push
xor
test
and
cmp
sti
dec
je
push
aas
push
push
add
or
outsb
nop
aas
popa
pop
sbb
test
inc
jne
fcmovbe
stos
mov
cmp
iret
data16
jne
pop
pop
idiv
enter
hlt
cli
je
enter
add
mov
shrb
inc
ss
sbb
mov
inc
mov
stos
dec
cmp
cmp
stos
adc
inc
outsb
je
addr16
pop
push
push
xor
das
sub
sbb
fbstp
les
pusha
xchg
jb
std
jecxz
in
inc
add
cmp
cmp
or
jae
stos
jb
int3
movsb
cmp
push
sub
adc
sbb
and
cmp
test
cmpsb
aas
out
movsb
dec
cld
xchg
mov
js
mov
cmc
imul
outsl
push
jno,pt
sbb
fmull
jno
mov
xchg
cwtl
push
mov
leave
divb
leave
mov
dec
mov
sahf
push
mov
or
sbb
ss
push
lock
lock
std
imul
jg
inc
and
add
stos
fisttpll
addr16
and
gs
xchg
sti
pop
repnz
and
cmpb
xchg
mov
inc
xchg
push
popf
out
addr16
add
jae
and
mov
adc
push
inc
pop
addl
insb
add
out
addl
mov
arpl
fistps
mov
mov
ret
test
aam
sbbl
test
mov
sbb
fs
stc
or
xor
pop
out
int3
leave
cs
testb
push
pushf
repz
test
sub
inc
jo
repnz
shll
dec
sbb
cmp
cmp
iret
push
mov
imul
enter
cmp
fcomps
pop
sub
xchg
js
push
ds
divb
frstor
cmp
rorb
cmpsl
xchg
sub
dec
add
xor
outsb
scas
push
fadds
sub
mov
sbb
xlat
xor
insb
js
ret
shlb
push
mov
loop
xchg
mov
sub
mov
ficomps
or
cld
scas
cmp
and
cmc
and
xchg
pop
mov
jp
mov
inc
sbb
hlt
out
sbb
pop
cmp
repz
xchg
push
sbb
fistps
ljmp
pop
jl
dec
iret
jnp
out
mov
or
push
fidivs
int
ds
mov
sti
daa
ficompl
loopne
cli
jne
ds
pop
scas
cmp
or
movsl
div
mov
pop
pop
in
fwait
ss
out
sar
xchg
inc
push
scas
xchg
or
negl
pop
outsl
inc
sbb
mov
push
xchg
sbb
rep
in
fists
mov
nop
ja
jmp
les
jg
in
sbb
ss
test
aaa
inc
adcl
jge
sahf
sub
bsf
out
xor
xchg
por
and
adc
jbe
mov
xchg
jae
push
dec
out
mov
das
mov
sub
cmpsb
or
sub
nop
push
cmp
shrb
jo
lcall
test
push
inc
sub
xchg
sti
and
mov
lcall
sahf
fsubr
das
mov
pop
popf
push
pop
and
loop
sbb
shlb
addr16
inc
dec
loop
jno
int
dec
lcall
outsl
movsl
fistps
dec
cmpsb
xor
in
test
aas
shlb
mov
inc
xchg
xor
movsl
ja
pusha
sub
xchg
push
cltd
mov
push
xchg
decl
lcall
jmp
or
popl
icebp
sbb
aad
mov
lods
xor
adc
rcrb
testl
mov
dec
jae
popf
mov
adc
push
lahf
cs
lods
aaa
mov
jb
pop
dec
pop
dec
xor
mov
push
push
xchg
movsl
cmp
popf
call
lret
xchg
lds
mov
out
add
movsb
sti
idivl
pop
pop
mov
ret
sub
incl
pushf
iret
fxch
stos
push
inc
mov
rol
fildl
or
nop
pushf
or
filds
mov
inc
fwait
ret
cwtl
ret
mov
xor
dec
fimull
or
iret
sbb
fwait
jmp
sbbl
in
push
sbb
add
popf
sub
icebp
push
testl
jno
push
mov
inc
insl
cmp
lods
aas
adc
xchg
loope
dec
stos
jbe
jp
mov
add
xor
push
mov
mov
push
cltd
cli
or
jb
cli
and
or
cmc
adc
inc
lret
sbbl
call
sahf
popa
jg
jle
out
cmpl
sub
lret
or
and
sbb
xchg
js
mov
xor
data16
xchg
or
pop
hlt
mov
add
enter
and
ds
sub
daa
fadd
movsl
cmp
std
push
stc
or
cltd
push
sbbl
je
inc
loope
pop
notl
call
iret
jecxz
dec
push
xchg
add
out
mov
loopne
xor
sbb
add
cmp
addb
stc
mov
cmp
or
nop
fisubl
fisubl
in
mov
sbb
pop
ljmp
rep
push
jbe
fs
and
fbstp
dec
pop
or
cmpsb
les
push
mov
ss
insl
fisubs
jg
jmp
jle
notl
imul
mulb
mov
pop
cmp
jo
flds
daa
addb
nop
inc
or
ds
cmpb
hlt
inc
shrl
cld
scas
jns
insb
and
adc
fcom
pop
fidivrs
cmp
mov
dec
imul
mov
mov
loopne
mov
hlt
incb
dec
outsb
xchg
push
lret
cmpsb
out
sbb
mov
out
pushf
mov
dec
loope
in
dec
sbb
incb
add
xchg
inc
in
mov
pusha
adc
and
orb
sbb
xor
cmp
insl
imul
adc
lret
cmpsl
daa
push
test
sub
mov
cmp
sub
xorb
adc
xor
out
aas
mov
test
xor
mov
mov
addr16
xchg
push
dec
xor
inc
gs
fmul
dec
push
scas
js
lods
rorl
push
cmp
and
jae
mov
bound
xor
outsl
fdivl
sbb
sti
fnstenv
push
mov
xchg
cmpsb
insb
divl
add
jae
adc
inc
mov
ja
pusha
pop
scas
jle
rclb
loop
add
adc
stos
pop
or
mov
rcll
jge
gs
inc
mov
sti
cmc
loope
pop
pop
negl
jl
hlt
loopne
into
out
in
lods
fbstp
in
jno
adc
nop
mov
movsb
xchg
ja
mov
jns
ret
sub
xor
leave
xor
sbbb
int
js
fldt
adc
rcrl
push
in
aad
push
lret
arpl
mov
mov
out
push
pop
sub
and
pop
mov
and
enter
add
push
cltd
test
out
stos
loope
fcmove
mov
mov
mov
dec
rclb
dec
dec
push
mov
jl
lret
mov
pop
in
cmp
xchg
outsb
mov
cmc
push
pop
and
jmp
cmp
popf
stc
testl
xchg
add
jae
mov
mov
stc
xchg
push
dec
scas
repz
adcb
pop
in
insb
rcrl
add
in
pop
repz
mulb
or
lds
test
or
jg
test
insl
add
cli
stos
adc
jmp
dec
fcompl
test
xchg
lds
push
add
test
inc
scas
stc
fwait
mov
stos
pop
cltd
or
jb
stos
and
mov
adcb
sub
jbe
movsb
sub
mov
xchg
mov
add
pop
mov
xchg
dec
stos
fnstsw
orb
mov
fwait
mov
dec
dec
jecxz
mov
sarb
js
stos
sahf
ss
and
mov
or
ljmp
sahf
insl
cmc
scas
xchg
xor
jbe
in
sbbl
adc
sbb
fidivrs
jp
mov
sti
fidivl
movsb
mov
jae
clc
bound
aad
mov
mov
subb
lds
pop
ljmp
push
roll
push
and
pusha
fwait
xchg
and
hlt
aaa
jge
outsl
sub
push
movb
imul
js
std
cmpsb
outsb
mov
pop
push
add
ja
xchg
sbb
lds
cmp
insl
insb
xchg
xorb
outsl
sub
mov
mov
lock
pop
cmp
daa
mov
iret
testl
inc
jb
lods
lret
test
inc
dec
test
mov
repz
jns
add
out
scas
mov
cmp
jnp
pop
cmp
clc
add
dec
popf
sbb
dec
rorl
sub
xor
scas
xchg
adc
inc
out
or
lock
xlat
sub
les
dec
data16
rol
aam
jle
mov
cmp
pop
lds
jle
dec
cwtl
mov
mov
mov
lods
dec
int
shlb
movsl
pushf
or
pop
add
pop
out
sbb
push
sub
sub
in
cmpsb
or
shrl
lahf
jmp
pop
cmp
mov
scas
push
in
jbe
stos
mov
pop
cmc
xchg
out
push
rcll
lods
fistl
pop
jp
push
pop
add
pop
dec
dec
and
jge
negb
add
in
add
loop
mov
jnp
jb
cld
push
adc
xchg
nop
out
jno
sub
and
push
jne
cwtl
in
dec
ret
cmp
fwait
add
les
jnp
lret
bound
nop
jmp
xchg
ds
push
cld
das
insl
fdiv
adc
ds
adc
xor
js
or
cld
dec
mov
jbe
lret
lock
scas
sbb
xchg
js
cmp
sbb
movsl
mov
fnstcw
sub
pusha
stos
pop
idiv
jb
lods
lods
fidivl
out
mov
loop
test
icebp
add
jp
ljmp
or
js
dec
leave
mov
jle
sub
or
push
cmp
or
jne
sbb
jge
inc
cmp
jb
or
scas
or
loopne
shrl
xor
mov
dec
push
mov
inc
xor
or
hlt
push
stc
jo
cmp
test
rcll
lahf
fneni(8087
ja
mov
decl
mov
gs
out
jmp
sub
and
cmp
mov
mov
loopne
ds
iret
xor
inc
faddl
in
js
adc
fs
arpl
mov
test
add
imul
jo
inc
inc
inc
jb
testl
fstp
stc
nop
or
push
fisttpl
movsb
jecxz
sub
mov
mov
cmp
sarl
mov
pop
shl
dec
and
ljmp
movsl
jge
call
ja
lret
pop
ljmp
jmp
mov
xor
add
imul
xor
or
ljmp
mov
fiadds
popf
xlat
sbb
jb
jnp
mov
mov
enter
sbb
js
mov
scas
inc
adc
iret
subb
popf
xor
dec
leave
test
sub
movl
dec
fs
push
add
mov
jle
cmpsb
rclb
idivl
pop
mov
mov
ficoml
or
les
jge
bnd
mov
faddl
popf
mov
jle
or
lahf
and
movsl
add
pop
lahf
stos
pop
fisubl
inc
push
lods
adc
inc
add
cs
add
les
sub
hlt
mov
and
mov
push
rcl
mov
rcrb
mov
dec
repnz
test
pop
mov
mov
orl
sbb
push
dec
fmuls
test
mov
xor
lret
lret
push
lret
and
or
xchg
or
cmc
pop
stc
mov
push
data16
or
lds
sarl
int
push
inc
loop
mov
out
dec
xor
aam
dec
push
fstpl
cmpsl
lret
cmpsb
shrl
lods
out
fcomip
icebp
xchg
scas
hlt
stc
push
nop
cltd
das
push
and
inc
jno
push
pop
ds
subl
pushf
or
rcll
push
pop
sub
imul
frstor
imul
jo
sub
adc
mov
shl
jo
push
outsl
insb
rclb
test
out
fcmovu
imul
lock
jmp
xchg
jge
das
scas
fsubl
jo
loope
jge
orb
cmp
and
add
pop
mov
mov
dec
fidivrl
mov
lret
ss
cmp
adc
mov
sti
negl
sbb
push
sbb
add
out
pop
in
std
cmp
fs
negb
push
popa
pop
orl
lea
je
scas
int
mov
adc
jmp
or
mov
pop
mov
lods
sub
push
pop
sarl
lcall
jns
adc
xchg
clc
adc
pop
push
aaa
inc
lcall
cwtl
das
mov
mov
cmp
dec
popa
xor
and
sti
movsl
sbb
sbb
mov
add
idivl
mov
fsubr
movsl
pusha
and
sbb
mov
add
cmp
ljmp
or
mov
sbb
add
cmp
fsubs
pop
sbb
pusha
mov
fwait
inc
cmp
pop
inc
add
imul
aas
mov
scas
jge
cmpsb
imul
adc
in
mov
clc
out
sbbb
sbb
jmp
xchg
xchg
das
scas
cmp
mov
sub
mov
push
mov
xchg
ds
into
sbb
lock
outsl
cmp
dec
dec
xchg
cli
jp
jmp
test
push
lea
cs
lret
cld
xchg
add
mov
adc
ss
outsl
stc
mov
mov
dec
in
push
and
sbb
jb
mov
pop
nop
mov
lret
xor
out
mov
sbbb
stos
aas
clc
ds
pop
lcall
adcb
cmp
stos
fcoms
add
jp
xor
mov
insl
cmp
testl
lock
and
xchg
lea
inc
cmpsb
call
loope
stos
decl
aam
icebp
lret
test
in
data16
bound
or
xchg
std
int
or
test
pop
shr
jl
and
mov
enter
adc
and
and
lret
ret
imul
sahf
adc
dec
mov
repnz
movsb
mov
push
aas
xchg
xor
std
aam
mov
faddl
add
sahf
mov
add
cli
rcll
ret
lret
mov
repnz
imul
out
and
loop
shlb
sbb
fdivs
std
rcrb
aad
pop
sub
mov
sub
scas
cmp
inc
dec
stos
cwtl
das
fistl
push
jno
pop
mov
les
ret
mov
sbb
lahf
movsb
jns
pop
out
int3
fbstp
lret
jb
cld
mov
gs
and
loope
mov
ficoms
sub
fsubp
mov
stc
test
ss
leave
inc
in
inc
out
xchg
mov
out
cmpsb
test
lahf
imull
shrb
push
dec
mov
jnp
lds
pop
pop
in
aas
fbstp
mov
xor
push
out
push
aas
outsb
rolb
packuswb
cwtl
inc
or
and
xchg
lods
mov
imul
dec
imul
leave
and
lret
lea
pop
fbstp
sbb
pop
add
push
add
xor
shr
addl
mov
pop
push
ljmp
aas
ljmp
fbld
mov
aam
loope
push
mov
pop
enter
xlat
xor
cmpsl
jnp
test
popa
xor
into
out
or
mov
arpl
lret
inc
dec
cmp
repnz
or
cmp
mov
call
ss
xchg
mov
jbe
lahf
push
xchg
jp
mov
adc
repnz
fisttpll
jb
shll
test
aas
aam
pop
xor
lret
sbbb
push
test
jb
add
jg
mov
int
jo
dec
repnz
xor
mov
push
push
cmp
inc
aas
insb
xchg
xlat
jmp
sub
repnz
push
push
push
xor
mov
aas
clc
dec
test
push
push
cmp
mov
cli
sub
frstor
testb
dec
lahf
xor
mov
es
iret
push
lods
ret
mov
xor
jl
push
jae
sub
jmp
mov
dec
or
lcall
enter
fs
nop
xchg
xor
sbb
subl
iret
push
cmpsb
push
xor
mov
mov
in
mov
sbb
adc
es
adc
movsb
jmp
jecxz
leave
xor
or
sbb
aas
mov
mov
fdivp
sbb
push
ljmp
xchg
insb
mov
imul
jo
pushf
pop
pushf
xlat
test
jbe
cld
es
push
mov
push
push
add
and
push
pop
or
icebp
lods
mov
add
ret
imul
mov
xlat
scas
inc
shll
or
incl
std
sbb
inc
mov
xchg
mov
std
fchs
cmp
iret
mov
int
push
fnstcw
push
sbb
jo
mov
dec
xchg
mov
pop
inc
int3
shll
xchg
bound
aam
inc
or
dec
add
xchg
xor
into
xor
xor
mov
or
in
in
cmp
fucomip
jg
ds
repz
notl
sub
inc
data16
fisubrs
in
call
je
addl
xchg
out
jb
inc
pop
push
cmp
loope
xor
ret
push
mov
add
mov
or
cmp
out
into
push
jbe
mov
fisttpl
lods
ljmp
xchg
xlat
mulb
fsubrl
mov
pop
ror
loope
push
jmp
mov
iret
ja
mov
imul
mov
jnp
sbb
push
xor
cld
add
es
push
lock
ds
cwtl
cmpl
sub
and
or
xchg
adcl
mov
into
push
jp
stos
cli
sbb
mov
pusha
push
in
lds
and
add
inc
and
push
and
inc
lahf
js
shrl
mov
xchg
pop
jle
xor
inc
push
dec
push
movsl
jle
fisubs
pop
scas
mov
fwait
sbb
mov
jp
push
xchg
cmp
adc
mov
adcl
push
mov
cmc
xor
imul
cwtl
lds
lea
mov
add
cli
dec
mov
addb
push
dec
es
lret
push
jae
popf
popa
and
cmpsb
stos
add
ret
dec
mov
lods
int
mov
scas
xor
push
popf
sbb
dec
pop
rclb
sub
loope
and
push
stos
mov
insl
jnp
pop
lods
push
sbb
dec
mov
jnp
push
ja
or
adc
mov
push
aam
cmp
call
or
cmp
pslld
inc
mov
xorl
movsl
xor
sbb
fsubr
testb
mov
bound
add
add
sub
fidivrl
fldenv
inc
arpl
int3
sahf
push
xchg
lods
in
inc
jge
or
fidivrl
cmp
rcrl
loopne
push
sub
mov
push
adc
inc
mov
inc
push
lock
lahf
jbe
aad
pop
inc
pop
std
jl
sub
sahf
pop
mov
pop
lock
sub
cmp
mov
fs
push
jp
lret
stos
jnp
aad
rclb
add
jns
jg
jo
adc
xor
mov
or
shrb
scas
mov
ja
push
test
cld
rcrl
mov
mov
mov
popa
lods
nop
and
test
mov
in
lret
fstpt
fadd
cmc
mov
push
pop
xor
xor
jb
or
adc
vpunpcklqdq
not
in
sbb
sub
pop
or
idivl
cmp
jmp
mov
push
mov
data16
out
mov
xor
lods
adcb
xor
pushf
imull
ds
loope
mov
stc
fstps
lea
and
pop
nop
inc
out
adc
inc
fnstcw
loope
leave
pusha
dec
mov
mov
scas
xchg
or
xor
sbbl
into
and
nop
das
mov
lock
or
cmpsl
mov
pop
aaa
add
and
or
xor
xchg
fsubr
test
aaa
int
xchg
sbb
cmp
push
add
push
xor
in
cmc
adc
mov
or
push
inc
xor
adc
repz
ficomps
stc
loop
testb
mov
out
lcall
and
mov
outsb
or
in
mov
or
fildl
xchg
xchg
mov
cmpb
lds
xor
pop
ror
pop
add
fiadds
xorb
sub
rcrl
cmpsb
mov
fmuls
sahf
icebp
add
ljmp
outsl
pop
imul
jne
mov
sbb
in
cmc
dec
xor
sub
shrl
mov
xor
lcall
cli
jno
mov
loopne
arpl
xchg
jl
cmp
add
jne
lock
pop
ja
mov
notl
jo
mov
dec
loop
mov
scas
inc
enter
arpl
imul
mov
pop
sbb
xor
ja
fcoms
out
add
in
jle
cmp
cltd
in
jae
cmp
lock
adc
mov
push
push
pop
pop
lds
pushf
iret
push
pop
jge
push
scas
jns
inc
arpl
shrb
add
inc
xor
adc
shlb
loope
insb
scas
mov
ljmp
xchg
scas
out
shlb
inc
mov
sti
test
arpl
sub
sub
mov
imul
andb
add
inc
mov
pop
nop
pusha
xorb
adc
add
sbb
loope
out
push
and
in
insl
xchg
orl
mov
test
imul
mov
adc
mov
mov
xchg
stos
xorl
enter
jp
mov
xchg
das
xchg
push
popf
insb
xor
push
daa
and
or
fsts
jb
movsb
sub
xchg
lods
out
and
dec
pop
dec
testb
mov
push
dec
push
add
loopne
cs
xchg
jl
mov
push
mov
pop
push
cli
dec
cwtl
ret
out
inc
addr16
adc
fs
and
les
cltd
test
jl
fdivrs
and
mov
inc
popa
inc
dec
lock
iret
push
xlat
pop
inc
add
jae
mov
enter
and
fwait
scas
sti
lcall
cwtl
cmpsl
out
mov
inc
out
scas
inc
add
xor
cmp
jbe
inc
out
shll
fldl2t
orb
es
mov
test
xchg
stos
xor
aas
xchg
adc
jbe
addr16
mov
sbb
mov
xlat
int3
mov
popf
cmp
mov
push
sub
pop
stos
mov
gs
mov
sbb
imul
repz
int3
subb
bound
push
mov
jb
pusha
scas
data16
pop
enter
cmp
stos
imul
mov
mov
out
mov
mov
les
sub
xchg
mov
push
lock
cli
jne
test
hlt
inc
mov
jno
scas
xlat
int3
push
pop
add
pop
xor
pop
and
insl
shll
in
lcall
mov
enter
adcb
mov
jp
stos
stos
popf
imul
rep
jge
aas
dec
mov
rcrb
adc
cmpl
pop
shll
insb
add
mov
iret
int3
add
or
mov
jb
test
sub
scas
jge
jecxz
cmp
in
xchg
aaa
pop
fwait
push
jecxz
xor
daa
mov
and
mov
xlat
cmp
mov
fmuls
mov
sbb
mov
push
inc
add
popa
in
mov
mov
cmp
les
imul
cs
repnz
aaa
cltd
pushf
sar
push
sub
and
or
cld
jg
xchg
ret
rolb
jl
scas
jno
sbb
cmp
jle
xor
mov
je
outsb
mov
mov
mov
rolb
call
mov
cmp
sub
cmpsl
mov
inc
sbb
jnp
push
mov
xor
loop
mov
push
add
mov
cs
pop
mov
or
stos
aad
sub
pop
xor
jle
add
sbb
arpl
fcoms
mov
push
ret
call
cmp
push
or
cmp
xlat
nop
jge
inc
ljmp
push
std
dec
mov
rcr
scas
add
inc
pop
inc
jb
je
push
pop
imul
xchg
xor
inc
mov
int3
inc
xlat
and
jnp
push
inc
pop
hlt
jne
pop
jg
stos
jnp
ljmp
lock
ja
imul
popf
mov
into
shlb
sbb
jp
and
in
xchg
push
push
stos
es
or
mov
mov
or
int
inc
sbb
sahf
ret
xchg
mov
ficompl
imul
jnp
jl
inc
jns
data16
outsl
dec
cwtl
or
leave
xchg
lahf
nop
pop
cmp
out
and
call
and
push
pushf
mov
mov
push
sub
push
sti
push
pop
ss
cltd
in
xchg
pop
push
pop
sbb
mov
out
or
int3
jno
sub
xchg
flds
and
test
adc
ljmp
add
popf
je
and
inc
cmp
mov
add
jno
sub
mov
sbb
ret
xor
bound
out
xchg
call
xchg
loop
jae
bound
xorb
push
in
fsubrs
stos
or
mull
jmp
xor
leave
cmp
cli
push
push
dec
sbbb
mov
cltd
mov
aas
push
cmc
into
inc
mov
stos
pop
movsb
lods
mov
addr16
imul
sub
xchg
inc
or
adc
popa
test
adc
test
jno
pusha
push
insl
fld
clc
idiv
adcb
sahf
dec
in
xchg
es
insb
add
mov
and
mov
stos
xchg
jmp
xor
sbb
dec
fwait
imul
dec
jl
push
fwait
xlat
jmp
pop
fbld
xchg
repz
int
js
jo
lea
hlt
mov
cltd
loopne
xchg
lret
pop
push
push
out
icebp
inc
jp
jne
pop
out
add
dec
jae
or
xor
pop
out
add
xchg
sub
inc
and
dec
rcrl
or
push
xchg
or
mov
xchg
jecxz
int3
movsl
xchg
ljmp
lea
std
mov
add
push
orl
fldcw
inc
xchg
mov
fs
shlb
ja
mov
cs
ret
lods
pop
test
push
hlt
jns
mov
mov
mov
icebp
pop
sub
pop
lds
push
sbb
xchg
es
imul
mov
adc
icebp
push
enter
pop
xor
stos
stos
fstpl
decb
sub
test
test
scas
pop
sub
mov
push
test
movsb
jg
cld
push
sub
mov
repz
cwtl
add
je
push
stos
std
jne
scas
call
jmp
sahf
xor
out
xchg
mov
call
mov
sbbb
xor
movsl
mov
sahf
jnp
inc
lods
mov
pushf
xor
scas
adc
push
sub
fisubs
aas
dec
loop
inc
in
cwtl
inc
repnz
inc
xchg
xor
sbb
test
fdivrs
ffreep
loope
lret
fnsave
dec
cmp
pop
xchg
loope
pushl
aaa
shl
stc
out
xchg
or
sahf
scas
and
icebp
iret
cltd
stos
fdivrp
xchg
add
stc
and
mov
into
sbbl
mov
cmp
movsl
mov
cmp
jnp
fidivrl
repz
add
out
test
bound
mov
push
pop
push
stos
push
jp
fidivs
lret
addl
in
cltd
sbb
out
add
xchg
add
int3
mov
dec
call
mov
shrl
hlt
cwtl
adc
rcr
inc
add
loope
pop
int3
std
mov
xchg
lahf
dec
in
mov
or
add
or
dec
lret
push
popa
ret
lock
sub
mov
push
ljmp
push
nop
shrb
out
imul
enter
add
pop
mov
xor
mov
ds
push
test
outsl
or
mov
and
mov
icebp
sbb
and
jle
pop
mov
xor
xor
or
fnsave
mov
js
sti
sbb
ds
lahf
jl
xchg
ja
test
cmc
pop
add
jmp
rep
xchg
leave
cmpb
loopne
add
inc
xchg
insl
mov
aam
inc
add
stc
or
in
rolb
scas
jnp
sub
sbb
stos
mov
push
dec
test
test
jne
shlb
cmp
jnp
bound
iret
mov
pop
inc
stos
pop
xor
xchg
repz
or
insl
dec
cld
xchg
outsb
lea
xchg
iret
sub
add
lret
xchg
xor
ret
stos
aas
or
in
les
or
mov
mov
jl
push
push
int
mov
adc
imul
lea
inc
push
nopl
stos
in
shlb
inc
test
leave
mov
cli
jle
aad
xlat
js
dec
and
mov
nop
aas
mov
in
arpl
popf
add
xchg
xchg
dec
inc
pop
mov
cmp
loopne
cwtl
jo
dec
hlt
xor
adc
mov
pop
cmp
leave
ja
idiv
pop
sub
add
adc
xchg
ja
mov
andl
push
fwait
sti
xor
push
cs
out
fiaddl
cmpsl
ret
mov
into
jmp
test
mov
pop
or
push
sbb
jno
push
orl
outsl
cmp
xchg
imul
mov
js
and
and
icebp
inc
mov
xor
dec
xor
pop
in
mov
lds
enter
loop
ret
jnp
push
jno,pn
hlt
mov
mov
or
imul
repz
push
outsb
pop
ss
out
fisubs
xchg
fidivs
int3
addr16
shrb
mov
popf
mov
fs
lods
out
inc
fstps
iret
testl
mov
aad
add
cmc
sub
push
xchg
add
andl
cmp
std
xchg
loope
hlt
mov
mov
bound
mov
jmp
ljmp
cltd
cld
pop
push
lahf
sub
or
dec
and
mov
push
inc
flds
adc
movsb
mov
fidivl
dec
cmp
outsl
jmp
push
sub
xchg
add
cld
mov
outsl
push
jo
test
out
lahf
add
mov
ja
push
lret
pop
jl
into
lods
xchg
movsb
sub
pop
sbb
xchg
cwtl
out
inc
sti
data16
les
add
test
out
and
pop
pop
lds
lahf
add
cltd
push
out
jg
ret
outsb
aam
xor
adc
ja
arpl
jo
inc
mov
mov
xchg
fcoms
mov
aas
fwait
les
xor
adc
inc
ss
pop
cwtl
movsl
jne
mov
cs
cwtl
rcll
stos
rol
mov
imul
lods
aas
mov
mov
pmaxub
ss
sub
cld
xchg
pop
je
jle
sbb
sub
jne
ljmp
ret
pop
dec
into
fidivrl
pop
or
daa
mov
jecxz
inc
pop
popa
add
fldl
pop
jmp
lret
shrb
pop
testb
movsb
cmp
ljmp
loopne
adc
ret
lock
xchg
cmpsl
lods
mov
mov
shl
push
add
shlb
sub
int
popf
popf
xlat
cmp
movsl
lds
in
jmp
cmp
mov
mov
add
mov
vpunpcklqdq
mov
test
outsb
sbb
push
pop
test
fnstenv
jo
out
cmc
adc
mov
adc
push
cmpsb
jbe
mov
xchg
negb
stos
aaa
mov
or
cmpsb
pushf
sub
push
sub
movsb
or
cmp
cmp
sub
mov
inc
arpl
and
ja
mov
fidivs
icebp
inc
mov
mov
pushf
test
jg
mov
subb
loope
push
pushf
sarb
int3
loopne
fsubr
or
sub
movsb
pop
xlat
lcall
repnz
je
daa
data16
jmp
dec
xchg
sub
mov
insb
pop
shll
push
xor
cltd
or
jno
bt
out
sub
dec
inc
int3
lcall
stos
dec
xchg
ficompl
loopne
push
fidivrs
xchg
fsubr
ret
jbe
mov
and
and
sub
dec
sbb
and
push
into
push
cmp
iret
mov
cmp
subl
fisubs
push
out
shlb
cld
xchg
xor
dec
cmc
lret
jmp
stc
and
daa
dec
out
jl
sub
fisttpl
loope
and
fsubrl
or
pushf
cmp
push
out
pop
repnz
cmp
jb
add
cmp
adc
adc
sub
lds
cmp
hlt
pop
xor
cltd
repnz
cmpsl
insb
test
push
pop
imul
nop
aam
les
dec
fldt
nop
and
lahf
arpl
inc
pop
or
outsl
jp
xlat
outsl
fs
xchg
push
cltd
push
shl
mov
jae
lret
movsl
lods
jo
add
sub
repz
jmp
pop
push
test
xor
cmp
lds
pop
pop
jo
push
pop
test
mov
pop
ficomps
rclb
sahf
lds
cmp
fsubrl
out
xchg
pop
xor
out
xchg
out
clc
out
shl
lods
aas
mov
or
shrb
bound
push
mov
mov
lret
out
and
mov
push
xchg
js
jb
outsb
mov
adc
xor
int3
push
jle
xchg
jge
sub
imul
xchg
call
jecxz
or
aam
sub
into
or
outsl
jnp
in
das
js
cmp
bound
xchg
call
xchg
adc
loop
mov
test
mov
or
adcb
pop
movsb
mov
jg
mov
xchg
push
rcrl
mov
jle
jno
xlat
inc
push
insl
dec
xor
xor
cltd
add
dec
popf
ds
ss
mov
lret
push
sbb
insb
mov
mov
mov
jbe
das
iret
pop
ficoms
and
test
jecxz
hlt
lahf
cmp
setge
lods
pop
fcmovnb
arpl
repz
dec
jecxz
popf
and
lret
cli
xchg
jae
out
xchg
in
push
cmp
lret
push
mov
push
popa
fcomps
xchg
out
mov
add
pop
jnp
push
push
mov
xchg
mov
cmp
push
loope
stos
add
cmpsl
inc
cmpsb
in
dec
pop
sbb
inc
pop
ds
lcall
sbb
rolb
or
mov
stc
mov
pop
cmp
leave
and
push
cld
notb
je
mov
rcrb
xor
gs
pop
inc
cmc
dec
test
xor
xor
in
mov
rclb
sarl
notb
aam
add
in
xchg
mov
xor
dec
cmp
idivb
fdivl
add
je
test
jae
mov
mov
jno
add
sbb
mov
push
lea
rcr
out
cli
mov
mov
sub
mov
cmpsb
out
in
es
test
into
cmpsb
lock
jp
mov
and
in
mov
inc
mov
fxam
xchg
fidivrs
fstps
mov
or
leave
in
daa
lret
xor
incl
add
imul
and
cmpsb
ja
inc
xchg
hlt
aam
cmp
in
ljmp
sub
xor
fistpl
lea
pop
les
dec
push
cmp
cmp
shlb
lock
sub
mov
ret
pop
stos
das
icebp
test
arpl
fwait
insb
sub
jo
ljmp
xor
push
addr16
mov
jp
sub
out
leave
aas
inc
test
cmpsb
and
jns
adc
mov
insb
jbe,pn
pusha
lea
or
xor
adc
or
test
pop
xchg
push
or
or
dec
add
sbb
enter
xchg
push
sub
mov
daa
and
sti
xchg
scas
mov
div
test
stos
enter
or
mov
mulb
sub
imul
jg
dec
imul
aas
lods
cmp
imull
insl
sub
push
test
mov
cwtl
leave
jmp
or
in
xchg
mov
test
or
pop
push
pop
dec
neg
inc
cmp
ss
cmpsl
sahf
push
call
test
fadds
arpl
inc
inc
cmpl
jbe
xchg
pop
bound
or
scas
lea
stc
inc
lret
shll
sub
ret
orl
sbb
dec
inc
test
mov
aaa
movsl
xchg
xor
dec
lcall
mov
call
mov
scas
jns
cmpl
orl
pop
pop
xchg
xor
test
or
inc
testl
int
shlb
lds
xchg
jge
pushf
adc
pop
sbb
das
mov
mov
cwtl
xchg
jae
cmc
mov
aad
and
aas
dec
repnz
in
push
or
nop
les
pop
imul
mov
rcrb
negl
push
jbe
cmp
sbb
jns
pop
cmp
ja
pop
mov
push
mov
cmp
push
or
out
and
jmp
pop
xchg
adc
fldcw
test
out
push
or
cmp
pop
js
pop
cltd
or
or
std
pusha
stc
cmc
cmp
adcb
outsb
sub
cmp
testb
roll
shlb
jb
sbb
out
dec
mov
test
inc
mov
ret
int3
movsl
lret
ss
cmp
cmp
push
inc
negl
in
inc
mov
fnstsw
sub
das
mov
pop
xor
inc
enter
mov
mov
movsl
stos
jae
jecxz
fwait
pop
icebp
repnz
dec
outsb
je
mov
cmc
iret
data16
mov
mov
dec
testb
dec
stc
inc
orb
dec
sub
inc
lret
out
push
lds
jg
hlt
aaa
ret
popa
sahf
jecxz
shlb
fsubrl
cwtl
pop
aam
mov
sub
popa
clc
ret
inc
dec
jb
jecxz
add
pop
je
sbb
repz
cmp
leave
cmp
es
mulb
out
xlat
pop
inc
add
add
mov
mov
jecxz
cmp
popa
xchg
add
call
push
cwtl
rep
push
mov
lods
jnp
shll
dec
daa
mov
daa
xchg
mov
dec
iret
mov
addb
fidivs
xor
clc
ja
pop
fsubl
test
andl
cmp
jnp
sub
movsb
inc
lcall
push
fwait
stc
push
dec
and
imull
enter
cmc
sbb
lods
or
mov
push
mov
aam
or
cmpsl
fbstp
adcl
push
in
ret
aad
repnz
cmpsl
jns
andb
cmp
pop
fcoms
icebp
cmp
mov
dec
cmp
pop
es
pop
mov
inc
push
sub
out
and
fcmovu
sbb
xchg
shl
xchg
cltd
mov
mov
les
cmp
mov
push
inc
push
or
vandnps
fucomi
aaa
ret
insl
sbb
xchg
xchg
inc
out
add
and
sti
jnp
sbb
popa
push
or
push
jecxz
xchg
jbe
cmp
push
adc
imul
mov
inc
xchg
jne
jb
xor
sbb
xchg
je
aas
shll
dec
add
xchg
out
lods
dec
and
xor
cwtl
mov
call
push
xor
sti
add
add
sub
repz
jne
test
stc
mov
jle
mov
sbb
and
roll
sbb
data16
stc
mov
cld
adc
test
sub
mov
push
cmp
movsb
sbb
sahf
sub
xchg
aas
xor
jo
sbb
mov
enter
pushf
jae
sbb
and
int3
clc
mov
ja
loope,pt
inc
stos
in
pop
dec
rcrb
ficoml
sbb
jbe
es
push
push
sub
stc
mov
dec
push
out
dec
inc
inc
std
test
stos
repz
pushf
dec
arpl
push
aad
mov
dec
movsb
mov
repnz
mov
pop
out
add
dec
or
repnz
out
sti
mov
mov
push
xlat
mov
jno
outsl
sti
and
xor
inc
dec
pop
inc
xor
sbb
movsb
repnz
mov
or
push
arpl
shlb
sbbl
cli
mov
mov
mov
xor
or
sti
fcomps
inc
gs
cmp
mov
aam
test
test
es
dec
cmp
and
in
shl
pop
sahf
and
inc
and
fadds
mov
xlat
jns
add
pop
push
jp
cltd
adc
lds
jbe
xchg
xlat
mov
mov
xchg
gs
clc
mov
cmpsb
sub
jo
mov
adc
jno
gs
mov
stos
ljmp
fidivrl
dec
jge
cmc
adc
je
sarl
sub
jns
clc
push
cmp
jg
lock
pop
dec
hlt
pushf
jg
iret
das
or
pop
adc
int3
pop
mov
les
push
add
or
push
jp
fmulp
add
push
pop
stos
jne
repz
mov
or
push
cwtl
icebp
call
in
fwait
adc
sbb
loopne
loop
loope
xor
jge
cmp
dec
mov
ds
into
mov
pop
in
mov
sub
mov
popa
imull
push
mov
mov
mov
or
enter
or
mov
sbbb
loop
cmp
dec
add
rcl
jnp
pop
popf
cmp
repz
out
xchg
adc
or
cmp
rol
sub
mov
xchg
fldl
xcrypt-cfb
cmpsl
and
push
out
bound
mov
jl
lea
fiaddl
jo
xor
bound
imul
sub
cmp
and
adc
rcrl
push
enter
enter
sbb
jle
adc
ror
xor
mov
push
shrl
loop
mov
icebp
mov
inc
dec
jnp
repnz
loope
arpl
int
or
fsubrs
sbb
out
cmp
or
jge
pop
das
jl
stos
jo
lcall
cmpsb
cmp
cmp
popf
push
cmpl
jle
scas
xorb
xor
stos
or
mov
subb
cmp
insl
lds
rolb
pop
scas
inc
loope
xor
fnsave
pusha
call
push
mov
xchg
les
mov
nop
jmp
jo
test
sub
inc
add
lcall
pop
enter
inc
mov
test
addb
sub
pop
or
fdiv
sub
add
popa
dec
clc
cmp
fcomps
dec
mov
xchg
or
mov
ljmp
cmp
mov
push
inc
sbb
pop
push
scas
pop
cmc
jae
mov
mov
gs
sbb
movsb
imul
test
dec
ds
mov
or
std
pop
and
fnstenv
jle
push
les
mov
or
imul
pop
add
jbe
cli
mov
lock
lds
leave
sub
roll
rorb
negl
inc
inc
nop
hlt
pusha
enter
jl
in
inc
in
pop
mulb
cmp
lods
insl
sti
inc
adc
push
sahf
popf
es
xchg
pushf
jno
dec
jle
mov
mov
mov
pop
dec
out
jle
gs
repnz
jp
shrl
jns
mov
inc
lds
arpl
inc
mov
cmp
fwait
add
pushf
jne
xchg
fdivr
inc
push
insl
dec
loopne
jae
addr16
leave
mov
jp
dec
mov
sbb
pop
loop
cld
cmp
lea
and
dec
mov
xor
scas
or
loope
test
sub
test
mov
loopne
rolb
push
or
jne
es
subl
cmp
and
in
std
fistpll
rolb
and
out
xor
push
or
adc
int
ds
xchg
out
out
inc
add
sbb
hlt
push
leave
clc
sahf
addr16
sub
mov
push
dec
pop
mov
addr16
in
andl
stc
dec
test
pop
ret
cld
push
dec
xchg
sub
cmpsl
cli
pop
sub
mov
in
push
popl
jae
mov
clc
cmp
inc
mov
sub
push
fwait
lock
cmovno
lea
mov
popf
jmp
pop
mov
fstpl
cltd
pop
imul
repnz
popa
xchg
sbb
sub
fistl
cli
in
cltd
xor
addb
pop
hlt
dec
icebp
pop
push
and
xchg
dec
adcb
divb
test
xlat
pop
sar
rolb
jg
dec
mov
sbb
mov
inc
mov
in
stos
loope
popf
mov
push
ret
lcall
sbb
cmp
out
adc
bound
fs
stos
jno
pusha
out
cmpb
or
inc
pop
cmp
sbb
icebp
pop
cmp
add
mov
insb
pusha
xor
xor
test
mov
aaa
lods
adc
jle
inc
ret
sti
dec
jo
xchg
mov
mov
sub
xor
std
les
bound
outsb
add
pop
cltd
jbe
insb
xchg
mov
ret
sbb
jb
mov
and
jmp
test
sbb
inc
popa
or
test
mov
ds
mov
sbb
mov
push
ret
outsl
shl
fxch
xchg
adc
popf
inc
jo
leave
leave
and
jle
dec
cmp
aaa
mov
mov
add
jo
cmp
xchg
in
les
loop
mov
adc
mov
add
test
dec
loop
push
mov
sbb
addr16
mov
mov
mov
adc
xor
push
mov
push
mov
call
inc
es
mov
or
sub
or
out
sub
mov
adc
lcall
add
or
push
pop
shr
dec
addr16
xchg
mov
mov
add
jbe
xor
jge
jmp
imul
ret
mov
jecxz
adc
data16
sub
and
mov
sti
iret
js
add
xchg
scas
inc
jmp
add
mov
fnstcw
xor
mov
add
mov
lret
sbb
cmp
xchg
or
std
dec
inc
sbbl
jno
xor
mov
nop
adc
jge
or
leave
or
ret
ret
nop
daa
sarb
imul
sub
or
testb
jge
out
outsb
jnp
insl
dec
adc
int
hlt
cmp
cmp
or
or
push
inc
inc
loop
jl
popa
xor
cmp
mov
pxor
hlt
cmpsl
clc
inc
or
lock
add
movsl
insl
ja
push
enter
mov
push
data16
xchg
inc
call
movsl
lods
sbb
out
cmp
lret
mov
addb
lods
mov
mov
aad
inc
mov
jg
shlb
lock
ret
or
insb
mov
sub
push
push
and
scas
lret
pusha
bound
adc
dec
sti
sub
mov
pop
push
lret
sub
loopne
push
lods
imul
lfs
popf
xchg
jl
or
outsl
mov
divb
inc
fstl
pop
adc
ret
push
test
and
xchg
lahf
gs
xlat
fstpt
jnp
hlt
dec
or
cmpsl
iret
xchg
inc
repnz
jae
call
mov
add
cmp
add
mulb
daa
pop
lods
fldl
js
loop
sahf
pushf
add
pop
push
stc
pushf
scas
frstor
leave
ret
xchg
mov
ret
xor
sub
mov
js
bound
out
mov
bound
jp
je
orl
setg
lea
rcl
outsb
popa
subl
clc
inc
dec
sub
dec
inc
xlat
cld
push
notb
jne
adc
repnz
mov
inc
ret
bound
jp
stos
mov
dec
add
mov
cli
jp
repz
sbb
push
mov
scas
push
cmpsl
inc
aad
stos
inc
insb
jno
xor
enter
es
in
stos
push
cmp
pop
mov
pop
inc
fiaddl
pop
sbb
repnz
test
stos
or
iret
in
leave
in
test
add
dec
mov
cmp
fldt
cmpsb
pop
xchg
mov
fwait
add
jns
dec
inc
outsb
std
insb
xchg
lcall
inc
push
cltd
dec
data16
cmpsl
ljmp
jns
int3
test
rclb
int
or
out
mov
inc
mov
addr16
dec
cltd
bound
cmpsl
mov
fdivl
push
sub
cvtps2pd
jae
pop
jae
imul
push
movsl
pusha
testb
test
in
push
and
adc
jg
push
mov
fstp
mov
push
mov
mov
out
lods
sbb
and
inc
mov
xchg
jne
popa
test
inc
sub
inc
pop
enter
jg
gs
mov
call
lcall
stos
push
popf
pop
test
or
push
sbb
inc
dec
push
adc
loope
sbb
cmp
inc
xlat
sbb
cld
and
jmp
ljmp
test
aas
push
mov
cmp
paddusb
inc
call
and
lcall
stc
mov
mov
test
mov
pop
sub
pop
jo
mov
je
das
and
js
sbb
loop
push
cmp
ljmp
cwtl
fpatan
cltd
nop
dec
cmp
pop
lea
pop
mov
sub
lret
shrl
inc
inc
loope
pop
jae
mov
mov
lods
jecxz
cs
lods
insl
mov
aam
ds
movsl
xlat
add
jp
dec
jl
jnp
negb
das
xlat
outsb
mov
and
mov
cmc
sub
incb
fldl
sbb
pop
jno
or
inc
sbb
cmp
cltd
jnp
pop
out
add
pop
and
jge
xchg
rcrb
add
test
ficoms
mov
fs
push
testb
dec
xchg
and
and
mov
movsl
xchg
outsl
mov
and
popl
ljmp
jecxz
jno
out
pop
and
xor
hlt
push
and
lcall
sbb
mov
jb
call
js
movsb
scas
es
inc
fs
int
stos
test
or
mov
fcoml
cmpl
mov
idivb
and
cmpsb
mov
dec
inc
mov
inc
lea
inc
adc
or
inc
into
enter
jne
loopne
js
push
cld
movsb
inc
jne
push
ret
pop
mov
fsubs
sub
enter
mov
pop
xor
insb
mov
cli
sbb
add
push
cmp
pop
pop
sarb
ja
mov
cli
insb
lods
inc
cli
adc
dec
sub
ljmp
aaa
pop
icebp
push
test
mov
bound
cmpsl
sub
cmp
xchg
sub
push
js
mov
js
out
sub
bound
sub
dec
popa
push
jg
repnz
sub
add
lret
xchg
mov
cmp
or
adc
or
xchg
cmp
aas
jecxz
sbbb
add
cmp
xlat
sbb
push
int3
cmpsb
mov
xchg
cmp
sbb
mov
in
push
or
lahf
sub
sub
pop
xchg
gs
je
adc
pop
mov
aam
mov
pusha
jge
cmp
jb
xchg
add
es
mov
sahf
scas
jns
test
adc
into
jne
add
lea
mov
push
inc
std
bswap
xor
push
xchg
adc
mov
call
out
leave
mov
adc
lcall
jbe
inc
pop
mov
imul
insb
pop
pop
or
sarb
inc
negl
mov
mov
fiaddl
in
std
cltd
or
dec
xlat
push
lock
icebp
loope
imul
add
mov
nop
xchg
jns
jg
xchg
adc
or
aas
dec
fldt
dec
inc
xor
fistps
fildl
mov
mov
cmpsb
loop
add
ds
push
cmp
and
and
int
int3
push
mov
push
pushfw
inc
mov
je
popf
into
outsb
and
add
fcomi
mov
sbbl
shll
addl
stos
and
out
lea
stos
loopne
sub
mov
pushf
cwtl
jmp
xor
xor
repz
inc
dec
dec
pop
xor
jns
pop
mov
jno
loope
icebp
pop
ds
mov
cmp
rol
inc
imul
adc
adc
adc
push
push
cmc
adc
adc
xchg
jbe
adc
pushf
inc
subl
scas
jb
sbb
xlat
enter
xchg
scas
cmpsl
pop
int3
dec
dec
negb
push
or
andb
pop
and
mov
call
mov
jmp
fcomi
ficoms
inc
and
js
push
std
lods
andb
mov
mov
pop
sub
mov
scas
icebp
fldl
sahf
mov
adc
scas
xor
xchg
inc
or
cltd
dec
push
mov
mov
sub
inc
xor
lds
movsb
repnz
mov
shrb
add
stc
shlb
cmc
push
mov
clc
and
and
call
or
loopne
test
into
jmp
mov
xchg
mov
mov
int3
ret
int3
fs
cmp
push
cmp
fcom
imul
and
push
and
jle
push
stc
nop
cs
sbb
push
mov
outsb
add
push
fisttpll
push
call
add
xchg
jmp
dec
ss
imul
pusha
call
push
lds
inc
fucomp
fcmovne
in
iret
cld
xor
in
movsb
xchg
ljmp
movsl
dec
or
pusha
pop
loope
sahf
rorb
mov
dec
test
mov
add
jae
popa
in
xchg
mov
push
lods
xchg
arpl
into
and
or
cmp
pop
jne
data16
jmp
and
lret
out
vsqrtps
mov
insb
sub
jg
data16
xor
add
push
mov
pop
notb
push
xlat
push
mov
lods
adc
jl
stc
jae
push
xchg
or
popf
scas
jecxz
jmp
xor
cmp
mov
dec
mov
xchg
out
pop
pop
sbb
push
adc
ret
mov
ss
int3
xlat
mov
dec
jecxz
cwtl
pop
pop
mov
std
xor
sahf
cmc
les
sbb
cli
flds
push
or
jg
bound
out
push
ret
fsubl
es
and
roll
or
pop
cmp
subl
outsb
scas
sub
xor
cmpsb
mov
xchg
mov
movsb
push
leave
push
dec
pop
shl
mov
shrb
movsb
mov
repz
out
mov
inc
fs
inc
movsw
fwait
test
adc
mov
pop
jb
fsincos
leave
push
ss
jp
lods
sti
mov
jge
jno
int3
inc
sahf
bound
adc
fnstsw
adc
push
adc
push
adc
pop
cmp
fisubs
adc
aaa
sbb
mov
ret
xor
jbe
inc
iret
lock
sub
lahf
push
lea
mov
mov
and
adc
sub
jg
mov
subl
shr
sub
notl
jle
or
in
jne
mov
cmp
fs
or
int3
xor
addb
cli
mov
nop
das
xchg
cmp
pop
lahf
inc
fs
rcrb
out
cli
mov
or
jo
mov
adc
mov
shrl
enter
or
dec
mov
into
cmp
dec
stos
adc
scas
rolb
sbb
mov
pop
in
jo
in
xchg
cmp
jbe
sub
inc
insb
aam
mov
mov
iret
sub
idivl
jo
jb
dec
mov
adc
out
pop
mov
push
cmp
pop
ss
out
das
rcr
and
testl
sub
lods
sbb
js
outsb
lock
add
xor
jb
pshufw
and
adc
pop
fildl
loop
xchg
pop
mov
mov
ret
mov
xchg
xor
jl
arpl
jp
mov
mov
popa
aaa
bound
inc
sbb
jmp
test
icebp
add
push
movsb
dec
cmp
push
adc
mov
clc
mov
jge
sub
imul
jae
xor
arpl
inc
and
fisubs
inc
mov
pop
jl
cmp
jl
xor
and
jno
clc
mov
jo
mov
sub
pop
cmc
imul
xchg
mov
scas
jno
xlat
cmpsb
icebp
das
add
fildll
or
adc
jae
xor
vmulss
rcr
repnz
mov
and
scas
and
sarl
jmp
push
outsb
push
push
pop
in
lods
and
pusha
adc
inc
test
lret
jb
jge
push
jns
inc
outsb
push
pop
imul
lock
inc
aas
pop
cld
pusha
ja
inc
and
add
pop
std
jo
fimull
insb
lahf
clc
sbb
inc
jecxz
mov
cmp
jne
jmp
push
ret
imul
push
int3
cs
mov
mov
or
inc
bound
stos
sbb
or
xor
test
jmp
and
push
push
add
sub
xlat
pop
ret
in
mov
adc
mov
scas
sub
cmp
ret
iret
xor
jp
fsubrl
pop
and
and
xor
cmc
sub
test
icebp
cmp
mov
pushf
scas
cmp
aam
dec
into
ret
cmp
jno
and
jns
jl
loop
xor
imul
cmp
fsubr
rorb
and
xor
pop
lret
mov
inc
mov
push
or
pushf
mov
ret
push
test
jle
add
mov
xlat
pop
inc
xchg
sub
mov
lcall
inc
push
sbb
popf
mull
jge
mov
jmp
lret
aad
jmp
shrl
or
hlt
nop
pop
jae
push
data16
inc
bnd
sub
std
inc
push
les
idivb
sbb
les
adc
jns
test
mov
dec
xor
mov
scas
cld
fadd
test
mov
jl
lea
dec
pop
bound
mov
push
or
mov
push
lock
or
push
mulb
sbb
cmp
mov
imul
push
xor
mov
andb
popf
xchg
shl
into
fsubl
loop
loope
cltd
insb
xchg
add
sbb
iret
mov
imul
sbb
xchg
stos
push
lcall
enter
mov
sti
dec
sub
add
mov
mov
sti
xlat
out
or
dec
xor
adc
orl
scas
xor
addr16
test
inc
fnstenv
loope
outsl
loop
add
mov
sub
push
xor
jge
mov
push
mov
cmp
inc
sub
xchg
xchg
or
les
add
clc
jp
sbb
ret
repz
out
aas
sub
fstps
pop
call
popa
xor
or
jmp
or
or
ja
popf
fs
push
inc
xor
xor
je
mov
jae
mov
adc
test
outsl
push
jo
jl
scas
add
sub
pop
sbb
popa
leave
push
aaa
insl
mov
sub
xor
mov
cmp
jbe
dec
pop
nop
lock
outsb
inc
inc
mov
jle
adc
mov
sarb
xor
push
bound
mov
inc
fidivrs
xchg
inc
pushf
fwait
add
dec
out
jne
je
insb
insl
jge
and
ss
xchg
cmp
lret
mov
gs
adc
call
cmp
dec
sbb
js
daa
cmp
sub
dec
pop
mov
fucom
in
sahf
mov
dec
inc
pop
cmp
out
mov
bound
lds
or
lahf
jmp
pushf
xor
and
fcomip
mov
inc
aaa
dec
fimull
pop
xor
dec
sti
lock
int3
cmp
pop
scas
loope
das
pushf
lods
mov
sbb
mov
or
mov
adc
std
ret
sub
dec
mov
fstps
sbb
movsb
mov
nop
lret
mov
inc
jno
jmp
into
subb
cs
mov
or
out
pop
dec
cli
push
daa
push
sub
js
dec
ret
in
cs
loopne
out
out
fdivrl
insl
inc
push
dec
or
fsubl
mov
sub
jle
push
mov
cmp
jo
leave
ds
cmp
mov
aaa
push
cmp
sbb
leave
test
outsl
pop
scas
mov
dec
xor
xor
mov
mov
cmp
and
cmpsl
sbb
loope
and
jge
movsb
shlb
or
jne
shl
sbb
out
fmull
cmovp
jl
imul
sbb
mov
outsb
jb
ds
mov
pop
push
repnz
cmp
inc
pop
inc
inc
dec
loope
out
das
icebp
pusha
mov
iret
sub
fcomps
mov
push
cli
adc
sarb
out
notb
mov
sbb
mov
mov
jge
xor
movsb
dec
push
push
dec
mov
adcl
imul
lret
pop
mull
sub
jle
inc
xchg
inc
scas
addb
jae
sbb
sub
and
leave
jecxz
out
and
arpl
pop
idivl
mov
int
vcvttps2dq
jge
cmp
sub
jl
adc
stos
add
ljmp
insl
or
das
loop
sub
imul
popa
xor
jb
out
lretw
pop
lods
mov
and
push
stos
punpckldq
fisubrs
and
push
or
dec
sbb
jmp
mov
lret
xor
add
mov
or
mov
push
xchg
xor
dec
push
inc
idivb
sti
call
sti
xchg
sub
outsl
push
ljmp
push
add
stc
adc
push
fcom
insl
or
notb
jo
mov
mov
cmp
dec
scas
fwait
xor
lods
mov
jb
out
xchg
adc
push
popf
data16
repnz
fiaddl
and
or
mov
jnp
lods
dec
sub
call
rorb
push
idivb
fistpll
popl
es
cmp
pop
jbe
sub
dec
je
pop
sbb
cmpsl
in
test
sbb
push
and
push
jecxz
jnp
rorl
inc
repnz
into
pop
mov
mul
dec
lods
xchg
adc
and
xor
dec
cmp
sub
inc
andb
popf
insl
add
enter
iret
mov
cld
xchg
in
lods
push
cltd
das
cmpsb
lret
xchg
sbb
mov
or
enter
loop
xor
bound
lock
andl
fs
subb
jns
xchg
outsb
stos
inc
xchg
cmc
push
bound
cmp
scas
sub
sbb
stc
xchg
push
inc
test
ret
addb
pop
mov
sbb
adc
imul
mov
pop
cltd
lods
shrl
jbe
js
jno
push
pop
stc
mov
add
pop
cli
loope
mov
stos
decl
inc
xchg
cmp
iret
push
lock
andb
ss
cmp
fsubr
adcl
fs
and
test
cmp
imul
mov
xchg
mov
faddl
and
test
test
movsl
push
push
out
stc
pop
int
sbb
cmp
stc
pop
inc
xchg
lods
in
andb
cmp
push
push
js
adc
push
mov
push
xor
adc
test
fwait
ljmp
addl
sub
jbe
mov
dec
lret
jb
cld
aaa
bound
sar
or
jle
sbb
iret
jae
std
cltd
sbb
lret
pusha
std
sub
sahf
push
push
add
inc
adc
stos
xor
adc
test
mov
mov
gs
xchg
loopne
add
jmp
js
xchg
xchg
jns
push
popf
jnp
in
or
jl
adc
dec
dec
movsl
push
fwait
mov
push
in
adc
push
inc
call
inc
cmp
addr16
or
pushw
mov
mulb
sub
test
scas
add
xchg
test
xchg
sub
dec
add
das
rcrl
mov
dec
pop
fistpl
ss
jnp
jns
add
popf
aam
inc
push
cmp
jecxz
rcll
mov
add
and
sub
inc
repnz
push
and
test
jb
or
scas
bound
jge
call
jbe
inc
mov
stc
idiv
mov
movsb
repnz
inc
xchg
inc
xor
xchg
inc
jne
imulb
sbb
add
pop
scas
adc
add
and
push
dec
dec
mov
fadd
xor
pop
in
popf
push
adcl
adc
icebp
push
aaa
push
sub
jge
lret
sti
xchg
fwait
sub
jae
mov
in
jae
xchg
cmc
cmp
insb
adc
sub
mov
mov
mov
cmp
mov
cmc
rcrl
shrb
jae
aad
movsb
mov
fdivrp
scas
ds
negb
or
jnp
pop
cmp
lds
mov
aas
aas
push
outsl
jno
xor
adc
and
or
ds
sbb
jae
out
aas
repz
or
sbb
xor
mov
outsl
adc
rol
xor
clc
adc
addl
sub
mov
xor
jae
stc
int
xchg
xlat
insl
cli
loop
imul
mov
push
ljmp
push
pop
fstpl
hlt
mov
or
sbb
mov
popf
fcmove
cmpsb
in
out
sti
sbb
pop
inc
bound
ret
cmc
call
pop
xchg
inc
negl
add
lcall
sbb
inc
push
mov
lcall
and
mov
pop
rorl
xchg
movsb
lcall
or
sub
aam
inc
lahf
jmp
adc
or
jmp
jle
jle
jnp
ss
push
cmpsl
mov
pop
mov
div
cmp
jg
push
shl
adc
cmc
leave
out
rcr
or
ret
std
dec
in
in
pop
mov
aad
push
jg
dec
and
cmp
divl
add
addr16
mov
and
cmpsl
cmp
inc
jmp
loopne
pop
lcall
sub
push
push
lods
insb
aad
xor
mov
roll
add
sbb
cmc
aas
lar
imul
and
fcmovu
int3
or
push
push
fs
mov
pop
sbbb
gs
xchg
pushf
icebp
mov
shll
ret
adc
mov
mov
out
addr16
pop
pop
mov
ljmp
and
std
rcrl
jle
push
outsb
or
mov
sti
ffreep
pop
adc
fimull
xor
popa
sahf
pop
cs
jnp
push
inc
lods
popa
rclb
xchg
and
inc
mov
in
or
mov
sbb
sbbl
imul
mov
sub
lds
pop
in
jns
push
insb
out
loop
sbb
lret
mov
pop
mov
lahf
scas
push
rcr
or
out
add
cmp
adc
rorb
std
nop
sbb
int
push
jns
mov
sub
insb
insb
pop
idivb
push
add
mov
js
inc
rcr
outsl
bound
imul
or
shl
out
mov
jmp
jp
lea
inc
jno
jnp
sbb
inc
cltd
scas
jmp
movsb
pop
je
cmc
sub
in
sbb
cmp
mov
sti
aas
sub
loope
mov
mov
andb
test
xchg
outsb
push
lods
add
das
gs
leave
jmp
and
adc
mov
bound
and
inc
jecxz
mov
push
ret
out
test
push
add
test
push
sbbb
cmp
mov
or
jo
adc
test
daa
add
cmpsl
fs
ljmp
sub
xchg
mov
sti
mov
stos
adc
push
jl
mov
mov
out
xchg
adc
mov
scas
mov
int
add
out
push
outsb
pop
fiadds
pusha
jnp
dec
inc
notl
scas
outsl
int3
mov
rcrl
add
loopne
fwait
pop
sub
bswap
sub
sbb
jnp
clc
and
loopne
leave
sub
push
push
outsb
movsl
sub
popf
and
shr
sbbl
pop
in
xchg
or
lds
push
cmp
mov
sti
xor
push
mov
add
lock
sbb
mov
sbb
pop
addl
sahf
test
adc
adc
imul
insl
lahf
mov
push
icebp
or
pop
out
mov
dec
pop
mov
inc
dec
andb
mov
mov
sbb
lods
push
scas
push
pop
repz
mov
sub
mov
out
xor
push
mov
scas
and
icebp
xchg
pop
mov
xor
shrl
mov
push
jo
les
sub
test
adc
cmp
mov
xor
pop
jbe
xchg
sbb
jecxz
lret
jp
mov
push
cmc
mov
imul
sbb
popa
pop
fsts
popf
rorl
pop
mov
dec
lods
and
xchg
ljmp
inc
mov
out
adc
mov
je
add
push
leave
inc
gs
pop
out
adc
ljmp
dec
and
mov
push
inc
fiadds
cmc
mov
jg
movsb
cmp
test
mov
outsb
add
ljmp
js
movsl
movsl
cmp
rclb
pop
add
jne
sub
iret
fwait
inc
adcb
jmp
int3
fs
push
andb
cmp
lahf
js
insl
jmp
adc
out
xchg
test
push
and
xchg
ffree
popf
push
pop
sbbl
mov
gs
mov
aaa
cmp
mov
scas
jle
mov
and
mov
test
cmp
jbe
mov
sarl
clc
stos
lock
shlb
popa
cltd
cmp
mov
mov
std
mov
es
addr16
aad
dec
pop
or
mov
cwtl
fdivl
setne
cld
jno
cmp
mov
sbb
leave
mov
enter
dec
mov
loopne
fistpl
jo
std
pushf
popa
aas
mov
mov
repz
jnp
xor
es
cmp
lock
add
sbb
add
pop
cmp
stos
dec
lods
notl
fisubrs
popa
xor
fldenv
sub
add
push
adc
jmp
xor
inc
div
sti
dec
loop
sbb
sbb
sbb
jg
add
mov
int3
stos
mov
xlat
cli
jns
sub
sti
mov
xchg
scas
cmp
les
mov
push
dec
jecxz
fdivs
adc
sub
xor
lret
pop
sti
push
jo
js
mov
int
mov
jl
dec
push
inc
xchg
jle
xchg
push
sbb
mov
fidivs
es
pop
xor
jg
scas
push
hlt
mov
stos
dec
jecxz
popf
ljmp
shlb
arpl
pushf
ss
and
fstpl
mov
iret
fwait
mov
or
sub
imul
and
pusha
popf
cmpsl
rclb
daa
jno
jns
inc
mov
push
and
push
or
mov
lods
mov
add
imul
lds
inc
test
jo
filds
sbb
movsl
call
jle
popa
inc
pop
je
or
loope
ss
mov
ret
and
xor
adc
jecxz
push
scas
jb
xor
fsubrl
add
shrb
adc
call
aas
inc
push
sbb
lret
movsl
mov
flds
bound
mov
mov
mov
or
mov
mov
out
dec
sbb
dec
push
rcll
clc
mov
cmc
mov
jb
mov
nop
xchg
lret
or
fucomp
push
popf
aad
int
lods
inc
arpl
cmp
in
and
cltd
and
inc
sbb
fucomp
push
arpl
cld
cmp
xlat
hlt
mov
pop
xchg
mov
lret
dec
or
push
outsb
xchg
clc
sbb
adc
in
pop
sbb
sub
jne
jno
xchg
push
pop
xor
test
sbb
mov
shlb
or
daa
inc
mov
mov
test
lret
cld
mov
push
fisubrs
testl
or
stos
xchg
pop
lahf
les
imul
and
jl
aas
movsl
adc
push
mov
loopne
jle
gs
lods
mov
pushf
mov
rcll
leave
pop
lock
push
bndstx
shrb
mov
test
mov
fsubrl
sahf
add
popf
sarl
es
aam
push
cltd
mov
push
arpl
push
fsubrs
jge
hlt
inc
push
mul
dec
fimuls
adc
jle
mov
cs
lods
es
lret
sbb
or
stos
lds
mov
dec
clc
subb
pop
pop
cwtl
aaa
jl
adc
mov
dec
lahf
popa
sbb
jno
scas
push
dec
dec
ja
out
push
sbb
cwtl
xor
cmpsb
jo
jno
movsb
and
add
faddp
jl
repz
sub
pop
jg
gs
dec
sahf
jne
push
lods
pop
mov
cld
shll
mov
mov
mov
adcb
sbb
cmp
sbb
fdivs
frstor
dec
in
jg
adc
adc
push
sti
ficomps
jne
sbb
cli
jnp
mov
nop
jbe
nop
xchg
out
test
pop
mov
adc
movsl
and
andb
arpl
pop
sbb
inc
shrl
xchg
icebp
pop
movsl
mov
sbb
and
cmpsl
and
iret
ds
call
pop
lock
loop
mov
add
insb
jp
js
xchg
and
je
bound
mov
xlat
mov
xchg
adc
sbb
lahf
push
mov
jg
cmpsb
sub
pop
imul
and
mov
mov
into
lods
sahf
test
scas
mov
push
or
add
imul
xor
push
lods
movsl
sti
test
adc
push
test
aas
add
outsl
out
daa
mov
rolb
nop
mov
xor
adc
xchg
pop
xor
movsb
dec
pusha
inc
sub
mov
jle
jle
arpl
ret
scas
and
dec
cmp
sbbl
push
out
loope
and
fisttps
or
outsb
pop
sub
cmc
mov
sbb
dec
sub
imul
or
lahf
movsl
in
test
mov
lahf
int3
lret
rolb
sbb
icebp
push
jns
arpl
adc
jb
dec
std
pop
or
xchg
and
adc
enter
xchg
lods
xlat
pop
xchg
movsb
mov
pusha
mov
jae
mov
lds
xor
call
push
or
in
imul
adc
data16
scas
mov
loope
and
lds
inc
sti
or
jg
testl
xchg
jns
mov
mov
mov
lcall
fbstp
pop
adc
in
sti
mov
dec
imul
mov
xchg
outsl
xorl
cmc
mov
mov
adc
test
xor
jo
iret
data16
xchg
pusha
dec
cs
sbb
pushf
subb
rcll
arpl
lods
hlt
mov
dec
mov
out
sarb
lcall
mov
aam
les
cmp
mov
repz
enter
js
cmp
inc
jo
cmpb
add
mov
add
in
repnz
int3
addb
add
pop
sbbl
or
sarb
jae
jnp
mov
out
in
or
ss
notb
jmp
xchg
adc
or
lods
or
fst
add
mov
adc
fwait
inc
mov
les
jmp
and
push
aaa
or
call
movsb
sbb
setne
dec
adc
add
pop
leave
repz
add
jmp
in
imul
int3
ljmp
insb
mov
repnz
subb
jl
dec
dec
aam
loop
xor
xor
cmp
cwtl
inc
stos
add
add
in
int
orl
movsl
dec
mov
sub
pop
inc
repz
mov
jns
sti
adc
cmp
xchg
jecxz
push
cmp
dec
ds
sti
fldt
push
sbb
aas
shlb
add
xor
das
data16
in
cmp
ffree
sbb
sub
push
frstor
mov
decl
cmpsb
in
adc
loope
push
pusha
lods
mov
push
adc
hlt
addl
pop
adc
or
pop
mov
iret
in
sub
repz
and
ret
imul
sbb
xor
mov
mov
mov
scas
addl
movsb
xor
ljmp
push
inc
inc
push
jp
in
inc
xlat
sbb
or
in
ljmp
shrb
push
push
lea
sbb
mov
inc
jne
push
push
ss
push
lret
xchg
mov
inc
push
inc
ss
inc
pop
int3
pop
push
dec
mov
imulb
lods
sbb
jp
cmp
add
xchg
pushf
movsb
push
and
jmp
stos
stc
dec
cmp
jle
int3
leave
outsb
sbb
push
dec
push
mov
fcompl
jae
sbb
test
addr16
rol
out
inc
and
dec
ror
int3
lret
or
or
aad
into
movsl
aas
lods
cwtl
aaa
mov
add
sbb
add
fbstp
fidivs
mov
jle
cmp
xlat
outsb
or
shll
cmp
inc
push
xor
ficoms
sar
pushf
imul
add
pop
fsubs
mov
imul
test
or
sub
or
in
push
mov
or
es
cmpsl
lea
fcomps
push
cmpsb
js
lahf
mov
add
add
mov
dec
adc
into
and
insl
iret
lea
push
cmc
or
popl
inc
inc
and
and
dec
scas
out
inc
sub
jae
xchg
sub
popf
cmp
inc
clc
and
imul
out
mov
add
push
ss
mov
fcom
adc
mov
jnp
dec
dec
cli
addb
inc
dec
sbbl
mov
jp
sahf
adc
aaa
test
sbb
mov
fisubl
mov
or
je
lea
sub
stos
push
shlb
pop
sbb
mov
test
mov
clc
xchg
inc
push
cld
xchg
loop
sub
dec
rclb
aaa
add
mov
fs
insb
mov
icebp
fs
test
mov
sbb
push
jl
or
int3
xchg
out
xchg
jecxz
repnz
das
mov
xlat
jns
jecxz
mov
push
mov
cmp
lea
mov
push
aas
ss
add
or
outsl
data16
leave
pop
cwtl
stc
in
pop
mov
pop
dec
mov
mov
outsb
sub
push
test
sbbl
dec
mov
or
and
fucom
dec
popa
lock
pop
je
out
addr16
cmp
in
or
lcall
jp
sub
je
xchg
push
mov
add
mov
xor
mov
or
jb
jne
adc
aas
xchg
sbb
cmc
or
xor
cli
mov
jmp
xor
mov
pop
shlb
mov
fisubrs
mov
mov
dec
jle
imul
sbb
xlat
rcll
pop
andb
jg
std
leave
iret
cmpsl
pushw
popf
xchg
cli
sarl
mov
mov
mov
jl
daa
leave
and
pop
push
sub
push
push
inc
cwtl
out
sbb
cs
and
jge
push
lahf
sub
test
cli
mov
xchg
adc
jbe
int
and
adc
aaa
sub
xchg
dec
or
fdiv
and
lret
xchg
imul
ret
lock
jg
and
int3
inc
xchg
gs
sahf
testl
push
icebp
sub
sub
and
mov
outsb
mov
lods
int
in
mov
push
call
cmp
inc
or
dec
or
loop
aam
nop
addr16
jle
jg
xor
and
ret
fadd
xchg
insb
add
fwait
pop
jno
iret
mov
aad
cmc
push
test
xchg
inc
push
pushf
pushf
ss
mov
push
jo
fistpl
push
aaa
test
aad
dec
ret
xchg
divb
cmp
sbb
je
imul
xchg
mov
or
add
xchg
daa
outsl
dec
inc
sbb
pop
sub
pop
push
subl
sbb
sbb
pushf
cmp
pop
mov
and
stc
lods
pop
jo
xor
test
ja
je
out
movsl
xor
imulb
sti
inc
cmp
dec
icebp
jle
inc
pop
lahf
cmp
xchg
pushf
mov
into
add
enter
testl
das
jge
popf
mov
fwait
popa
jecxz
repnz
and
cmp
inc
dec
xor
mov
xchg
sti
nop
out
jmp
sub
mov
fs
cwtl
loope
imul
enter
cli
in
inc
rorl
lahf
popa
xchg
call
ds
fimull
xchg
and
lcall
adc
xchg
or
movsl
push
add
stos
ret
sahf
sub
imul
popa
inc
sub
testb
inc
dec
repnz
inc
xchg
push
shlb
test
mov
xchg
push
push
jnp
mov
imul
shll
out
and
scas
jb
jno
aad
mov
push
push
pop
add
inc
fwait
ljmp
pushf
jmp
and
pushf
xor
lock
mov
push
inc
mov
inc
scas
fcomps
jo
jmp
rcrb
rolb
jecxz
aas
test
leave
cmp
popf
or
mov
movsb
dec
js
mov
lret
mov
pop
dec
pusha
push
call
dec
imul
mov
cmc
cmp
in
popa
xor
ds
xchg
rcl
adc
mov
pushf
out
lods
mov
adc
cs
insl
cli
xor
sahf
mov
imul
adc
pop
xchg
pop
lods
idivb
outsl
idivb
cmovno
dec
scas
scas
fwait
daa
mov
xlat
xchg
rep
lcall
sbb
xor
jge
xor
mov
flds
hlt
mov
scas
jg
repnz
dec
pusha
sar
shrl
dec
lock
jb
sub
movsl
pop
and
cmp
sub
or
xor
lock
sti
into
inc
cli
xor
and
or
or
cmp
adc
sbbb
fimull
andl
sbb
and
mov
in
jecxz
xor
push
add
sbb
lret
into
and
fsubl
mov
and
dec
xorb
mov
push
cwtl
les
adc
jae
call
dec
adc
jbe
mov
gs
subl
add
cmc
push
loopne
scas
in
rclb
rol
mov
outsl
fldl
mov
or
sub
or
dec
push
popf
aas
shll
xlat
sbb
les
and
cld
and
aam
push
or
lods
add
xor
lret
cmp
leave
loop
fimull
add
stos
mov
out
and
sub
in
adc
jno
push
dec
loop
movsb
sub
mov
inc
pop
imul
adc
into
lret
pushf
cmp
xchg
mov
fadds
adc
mov
sbb
pushfw
mov
in
pushf
xchg
aam
adc
mov
jle
aam
and
dec
adc
dec
sub
rclb
sbb
mov
mov
mov
repnz
xor
loopne
repnz
add
dec
cmpsb
inc
pop
rol
addr16
out
mov
jecxz
insl
leave
xor
scas
gs
cltd
iret
push
in
xor
xor
xor
mov
pop
mov
enter
mov
push
pop
jbe
rclb
test
mov
pusha
scas
int3
arpl
andl
xlat
mov
mov
test
jb
shlb
inc
and
inc
push
in
je
sbb
test
inc
sahf
sub
call
icebp
xor
and
cld
mov
data16
adc
insb
out
orb
cmp
xchg
mov
sbb
repnz
mov
ret
inc
inc
data16
sub
mov
sub
mov
dec
iret
push
cltd
out
mov
add
inc
push
je
enter
fldenv
mov
xchg
sti
mov
sub
add
das
pop
cltd
pop
cmp
inc
sbb
test
aas
pop
imul
push
add
loop
jp
or
imull
mov
lds
nop
adc
dec
cmp
lods
loop
sti
aad
adc
push
pop
out
dec
jl
cltd
mov
mov
jle
test
aad
out
dec
loop
push
imul
je
xchg
lods
add
jns
push
movsl
push
lcall
shrb
stos
cmc
scas
sbb
inc
test
daa
mov
mov
fldt
sbb
dec
fdivp
pop
test
sbb
pop
sbb
add
iret
xor
xchg
mov
lret
fadd
jmp
imul
repnz
repz
inc
fisttpll
jae
pop
test
test
nop
js
mov
in
les
mov
popf
xor
jae
sub
mov
and
mov
test
ja
das
fldenv
and
add
push
enter
push
cmc
push
mov
mov
push
push
out
bound
mov
pop
cwtl
pusha
cwtl
xor
pop
fmul
loopne
cli
stc
loopne
sub
add
mov
jne
and
xor
ftst
add
loope
pop
pop
enter
mov
sub
dec
in
lds
lea
xorb
shr
pop
push
push
bound
ljmp
or
push
test
pop
xchg
sbb
ret
call
dec
sub
std
mov
rorb
jbe
fwait
cs
cltd
mov
mov
and
aaa
mov
lods
mov
jecxz
ss
les
or
fidivl
enter
xchg
ds
ss
lea
cld
inc
out
scas
pop
mov
insb
sbb
ja
mov
mov
and
out
inc
xchg
in
push
adc
into
jb
test
test
in
pop
xor
adc
pop
xchg
pusha
jnp
je
cmp
arpl
mov
inc
and
inc
shll
push
std
out
repnz
xor
xor
inc
sbb
movsl
ja
outsl
daa
int
aam
mov
pop
mov
scas
jle
jmp
cmp
push
and
push
cmp
cmp
mov
jle
bswap
pop
pop
outsb
push
ljmp
mov
mov
ret
mov
dec
push
icebp
sbb
mov
cmpps
pop
mov
das
adc
ffree
jno
int
mov
push
jns
orl
jnp
pop
insb
addb
mov
push
mov
fdivrl
or
cmp
daa
imul
push
push
notb
mov
les
mov
push
xchg
pop
add
dec
lea
pop
xchg
mov
repnz
adc
jge
sub
xchg
mov
stos
jmp
lcall
inc
adc
push
lret
and
outsb
xchg
repnz
push
push
push
in
mov
fbstp
shll
push
jecxz
xchg
cmp
mov
push
popf
lods
push
out
sbb
sbb
jno
xchg
sbb
out
loop
shr
mov
loop
xchg
fadd
lds
imul
sbb
addb
and
mov
fcomip
call
or
sbbl
ret
push
pushf
cli
jo
icebp
mov
lds
mov
int3
aas
aas
pop
out
fsubr
mov
stc
imul
fsubrl
into
and
out
mov
jmp
inc
movsb
or
jecxz
push
dec
movsb
jle
in
enter
imul
jbe
xor
jb
js
dec
pop
xor
out
movsb
test
out
xchg
cli
cmpsb
insl
jge
sbb
idivb
adc
rorl
jge
jge
or
popa
sahf
popf
je
jbe
loopne
and
sub
stc
push
sub
cmp
mov
and
mov
mov
out
rol
inc
repz
stos
daa
sbb
xor
fucomip
test
pop
jno
jg
jne
dec
mov
push
mov
mov
adc
stos
cwtl
outsl
icebp
test
jmp
lret
push
mov
loope
or
loope
mov
ret
sub
dec
vmovdqa
lret
and
test
and
inc
mov
ja
call
mov
push
jno
mov
mov
sbb
repz
mov
call
jb
jo
fstl
dec
adc
sub
fwait
jb
pop
pop
addr16
fyl2xp1
jo
jge
mov
enter
movsl
xchg
pop
mov
fucomip
not
jecxz
mull
pop
outsb
add
pop
mov
mov
push
aad
aaa
repz
mov
pop
stos
fldcw
lahf
in
stc
popa
dec
inc
mov
fcmovne
pop
add
std
loopne
or
push
pop
xchg
imul
repnz
mov
fistl
add
sti
jb
cs
lds
out
mov
fmulp
fisttpll
iret
fsubrs
push
and
loope
mov
imul
inc
fwait
rorb
sub
dec
pop
jl
rclb
stos
out
jae
sahf
test
enter
xchg
add
cmp
adc
insl
fists
and
sbb
lods
mov
jmp
repnz
jge
btc
pop
and
mov
out
insl
push
fbstp
jbe
inc
das
mov
mov
add
mov
push
cmp
push
repz
add
mov
and
push
addr16
and
mov
cmp
jo
addr16
jae
jp
sub
div
xchg
mov
sbb
sar
nop
ljmp
cmp
nop
fimuls
scas
and
call
pop
or
addr16
stc
dec
xor
jle
xor
jge
outsb
aad
into
lds
addr16
lcall
js
clc
inc
fsubrp
cmova
jg
nop
daa
pop
cmp
push
stos
lahf
push
out
pavgw
outsb
aam
adcb
shlb
daa
fsubl
xchg
loopne
mov
hlt
ja
out
and
and
ja,pn
xchg
pop
adcb
push
adcb
cld
addr16
out
inc
xchg
cs
cmpsb
jo
sbb
daa
jno
mov
add
out
scas
nop
mov
cmp
cli
ror
les
js
ret
pop
lret
mov
jne
add
int
dec
mov
ds
adc
dec
popa
xchg
xor
sub
add
scas
les
js
pop
sub
iret
lods
xor
lahf
inc
push
lods
dec
test
xor
shl
adc
push
out
adc
jns
xchg
sbb
pop
outsb
xor
cmp
xchg
fisttps
out
mov
push
loope
push
fcomps
jle
add
or
int3
int3
xchg
jns
mov
dec
popf
push
aam
fadd
bound
fwait
and
ret
call
xchg
jae
test
pop
jg
lea
jns
mov
lock
xor
les
pop
enter
fistpl
stos
movsb
rol
sbb
outsb
movsb
repnz
mov
mov
push
add
ja
daa
shl
test
dec
and
ljmp
sub
mov
or
ja
inc
aas
xchg
add
aad
pop
pop
pop
int3
fidivrs
dec
mov
pop
cmp
in
inc
push
out
out
sub
lret
pop
or
lods
inc
push
jmp
sti
push
icebp
fistpl
popf
fnstcw
push
popa
das
fadd
sti
lods
inc
add
xor
scas
lods
dec
adcl
xchg
xorb
out
orb
fildl
nop
movsl
test
movsb
aas
push
lret
mov
push
xor
cs
iret
sahf
pop
cmc
iret
out
popa
or
lods
pushl
xchg
fbstp
jns
push
sahf
pop
lods
mov
xor
fsubrl
pop
inc
xor
lret
or
and
inc
fadd
mov
negb
xor
lea
mov
push
aam
test
orl
rcr
sbb
bound
push
push
mov
insl
mov
push
mov
shr
sub
xor
jp
fidivrs
nop
push
maxps
lods
mov
xor
or
mov
jecxz
lods
or
push
mov
push
out
cli
xchg
popa
inc
lret
sarb
xorl
xchg
and
mov
mov
xor
add
jecxz
jae
lret
scas
nop
inc
cmpsl
dec
rol
daa
mov
or
test
lret
pop
aaa
out
pop
cmpsb
fidivl
sub
and
or
inc
bound
test
push
repz
add
ja
push
fdivs
subb
dec
cmp
lea
push
rclb
fs
push
outsl
daa
jg
adc
mul
mov
pushf
enter
add
pop
pop
sub
xchg
pop
sub
rcrb
jg
hlt
in
cmp
pop
icebp
mov
sarl
movsb
lret
adcb
sub
mov
lock
ljmp
jle
adc
xchg
dec
imul
mov
pop
mov
lods
cltd
dec
out
inc
outsb
repnz
adc
decl
cmp
rclb
xchg
push
cli
xchg
sahf
orb
cmp
mov
shl
mov
pop
ret
popa
inc
in
iret
out
xchg
std
lret
jb
cmp
sbb
jle
das
stos
and
jb
mov
xchg
xchg
mov
movsl
xor
jmp
jl
jb
sub
out
call
push
testb
xchg
jb
jns
or
ss
clc
mov
push
insl
rcrb
insb
inc
lahf
test
in
jb
mov
shll
and
addl
mov
pop
subl
fldt
int
scas
imul
repnz
test
pop
div
test
hlt
jne
jge
inc
inc
and
pop
aaa
mov
mov
fs
cmp
xor
xchg
adc
inc
shld
adc
test
ret
repz
sbb
mov
insb
xchg
std
dec
xchg
adc
dec
or
adc
push
repz
adc
mov
notl
pop
lea
sbb
int3
scas
loopne
and
fadds
cld
push
jns
cmp
push
lahf
and
lods
mov
clc
inc
sbb
fsubl
xor
out
stos
push
mov
shlb
mov
test
cmpsb
and
loop
and
sub
pop
push
add
daa
mov
stc
subl
inc
jb
sub
push
aam
in
stc
aad
inc
fcomip
pop
adc
insb
outsl
and
pop
mov
sbb
stos
stc
ljmp
in
or
test
and
add
fs
inc
push
add
pop
in
fwait
hlt
sub
iret
scas
in
xchg
andl
and
pop
sbb
add
scas
mov
cmpsl
xor
pusha
stos
scas
aaa
pop
sub
stos
orb
je
mov
in
ret
push
xor
imul
repz
push
jecxz
jg
cwtl
xor
mov
mov
sub
mov
jp
inc
je
in
ja
into
fidivl
ds
in
mov
adc
lcall
and
mov
fdivrs
and
and
roll
pop
in
outsb
pop
jl
add
cmp
and
mov
int
popa
ljmp
jo
dec
js
adc
sub
lcall
insb
jl
pushf
out
mov
mov
jp
cmp
pop
cmp
fldenv
mov
arpl
xor
iret
das
jb
insb
push
sbb
test
mov
je
xchg
pop
add
pop
mov
nop
out
mov
inc
pop
test
cmpl
push
out
call
push
sbb
bound
xchg
scas
outsl
aaa
xor
sbb
sbbb
mov
test
sbb
int3
sub
icebp
adc
or
cmp
jne
mov
jo
cmc
sub
cmp
mov
mov
ss
xchg
rclb
loop
dec
jae
jno
pop
les
arpl
push
test
cwtl
popf
lds
xchg
stos
inc
xor
sub
cltd
adc
leave
inc
adc
sbb
call
ljmp
jno
mov
imull
ret
and
jl
push
and
xor
and
aaa
xchg
mov
mov
test
movsb
insl
add
xor
push
adc
lret
sub
aas
cmp
in
push
daa
frstor
das
xor
xchg
js
mov
or
xlat
cmp
sub
pop
push
or
ret
inc
lret
js
iret
data16
jnp
push
and
das
loope
imul
add
les
cld
std
adc
sbb
jo
pop
jb
fst
mov
pop
loop,pt
out
sub
rcrb
andl
cli
jo
sub
adcb
fwait
cs
cmp
hlt
ret
jg
lock
dec
jl
xchg
mov
add
mov
int
xchg
js
nop
daa
cmpsb
add
inc
ret
push
jns
int
adc
clc
insb
repz
mov
push
jne
or
cli
xor
sub
jmp
movsb
adc
mov
cwtl
movsl
pop
xor
outsb
jl
or
shl
int3
loope
xchg
mov
mov
mov
test
jg
pushf
xor
add
jge
add
mov
jl
sbb
decb
pop
iret
test
sbb
push
inc
dec
imul
aad
or
jne
cmp
xchg
jmp
mov
pusha
idivl
js
shll
xchg
add
ret
mov
jnp
sub
hlt
pushf
inc
arpl
icebp
negl
adc
mov
adc
sahf
inc
data16
and
inc
mov
sub
xchg
sbb
cmp
loopne
std
push
iret
mov
insl
shll
stos
pop
insl
int3
das
call
aam
pop
mov
repz
fnsave
int
ret
scas
aam
mov
mov
lods
push
sub
jae
mov
ja
sub
push
in
mov
sbb
es
nop
dec
std
enter
out
ret
inc
mov
mov
flds
adc
inc
enter
data16
jae
ret
pushf
iret
xchg
sub
jnp
sbb
lods
nop
add
add
mov
dec
or
stc
adc
sbb
push
cmp
loop
aam
pop
push
mov
or
stc
mov
rcrl
dec
fiaddl
mov
out
cmc
lods
jmp
rclb
sbb
test
in
lods
inc
mov
loop
aad
inc
pop
jbe
cmp
mov
sub
insb
add
cmp
fiaddl
es
cmp
fiadds
stos
jl
lret
mov
mov
jl
sbb
int3
aam
insb
lcall
popa
mov
xor
cmp
and
loope
dec
pop
in
pop
push
or
lahf
dec
pop
addr16
add
in
cmp
shll
pop
xchg
sbbl
jnp
add
testl
enter
sbb
inc
orl
mov
xor
cmp
xchg
inc
decb
jl
fiaddl
jns
ja
jmp
mov
fsub
rorb
out
or
inc
mov
ret
mov
sbb
dec
dec
test
mov
and
je
mov
movsl
lret
mov
xor
outsl
test
jno
clc
cmpsl
sarl
mov
imul
aaa
lock
or
insb
aam
xor
ret
cld
in
mov
leave
cmp
xchg
sub
shl
or
call
out
es
pop
insb
jno
sahf
js
movsl
es
and
outsb
loopne
les
sarb
or
aas
inc
outsb
inc
sbb
loope
and
inc
fcompl
jle
sub
push
add
xchg
adc
hlt
pusha
sbb
stc
pop
sbb
inc
mov
xchg
sbb
cmp
enter
daa
je
mov
mov
pop
pop
adc
shll
test
scas
setg
cmc
and
add
ja
jge,pt
jo
dec
not
pop
and
push
inc
fdivrl
cmpsl
scas
lahf
dec
cmp
popf
push
lods
ljmp
cmpsl
fdivrl
loop
mov
iret
fisubs
ja
fcoml
filds
fsubs
mov
shll
or
sarb
mov
xchg
dec
out
dec
aas
lea
pusha
xchg
inc
pushf
enter
imul
jno
imul
or
mov
pop
xor
mov
sub
push
test
js
test
ds
lock
xchg
xchg
stos
xorb
inc
xchg
xor
scas
cmpb
or
adc
fcoml
mov
push
rcll
adc
iret
and
jns
mov
sarl
mov
inc
mov
pop
push
sub
or
cmp
adc
xchg
jnp
jno
jmp
jno
fisubs
nop
hlt
fsub
pop
ja
xor
push
pop
mov
out
dec
pop
out
sbb
push
cmpsb
mov
sub
pop
shrl
out
stc
data16
add
out
imul
lcall
jmp
cwtl
sub
imull
push
call
push
push
sti
mov
call
sbb
sub
or
int
loopne
shrl
add
lret
sub
aad
test
pop
out
insb
ret
fildll
cmp
decb
out
scas
mov
loope
mov
dec
lods
mov
fcmovne
sbb
mov
aad
out
jp
sub
xor
xor
test
add
das
fsubrp
test
scas
pop
sub
or
cmpsb
adc
jmp
dec
jle
aam
jp
scas
dec
dec
pop
xchg
stos
popa
xor
jns
es
test
aad
testl
or
pop
int3
xor
and
dec
jbe
lahf
pop
lds
addl
adc
clc
xor
repz
aaa
cmp
push
mov
sub
or
push
lods
cmpb
or
push
sub
rcr
icebp
add
fwait
gs
movsb
loop,pn
mov
cmpsl
nop
inc
xor
sti
lods
cld
scas
shll
sub
jns
lea
mov
or
aas
lret
cli
xchg
mov
pop
sbb
jne
aaa
mov
shl
daa
shl
jo
cwtl
test
jbe
out
daa
arpl
xchg
jmp
rclb
arpl
sbb
in
gs
rcr
adc
repz
sbb
push
push
into
sahf
mov
dec
repnz
cld
jb
or
incl
fwait
xchg
inc
leave
cmpl
int3
lods
sub
sbb
cmpl
repz
out
and
sbb
sbb
aam
jns
fimull
mov
mov
or
pop
mov
xor
shlb
add
adc
mov
imul
call
aad
test
inc
movsl
out
movsl
repz
pusha
sbb
mov
mov
jmp
sub
jb
outsl
in
add
pop
gs
sub
push
cmpsb
jge
inc
dec
fdivl
pop
fimuls
jae
jbe
and
cld
mov
mov
xor
mov
or
ljmp
xor
mov
push
jb
movsl
insl
cwtl
ja
push
jge
cwtl
pop
mov
cmpsl
mov
adc
jno
test
enter
jmp
andl
nop
ljmp
stc
xor
out
sarl
rol
adc
rorb
lcall
imul
mov
lcall
imulb
adc
mov
push
dec
fdivl
xchg
adc
inc
xchg
adc
in
or
xorb
mov
cwtl
jae
jns
in
movsl
lcall
add
scas
xor
scas
dec
cwtl
or
or
mov
hlt
enter
movsb
cmp
push
roll
pop
icebp
pop
repz
popf
mov
mov
jmp
insb
sarb
sub
loope
mov
jle
push
outsl
das
mov
es
xor
clc
mov
sub
jno
mov
push
mov
push
jg
mov
fwait
pop
ja
xchg
incb
nop
aaa
lods
add
or
ss
jmp
es
or
js
and
cmp
sti
xchg
adc
xchg
test
push
cmpsl
mov
xchg
xchg
enter
mov
sbb
mov
mov
mov
sub
sahf
cmpsb
ret
push
sbb
mov
add
mov
cld
fcoml
je
inc
cmpsb
xor
push
jae
push
push
cmp
mull
iret
push
arpl
dec
xlat
mov
or
mov
jae
mov
mov
mov
lock
sbb
xlat
sahf
lods
mov
cmp
dec
sub
mov
ret
sub
lret
sub
pushf
outsl
add
inc
add
push
inc
lret
jecxz
lock
xor
sub
dec
push
and
mov
fs
push
loopne
ss
orl
or
or
mov
cmpsl
add
imul
mov
data16
xchg
xchg
test
sbb
xchg
cmp
jae
popa
push
push
sub
fdivrs
or
hlt
or
subl
out
ja
push
xor
mov
loope
in
xchg
mov
out
movsb
pop
adc
jmp
and
ret
xor
cmp
fs
add
add
cmpsl
mov
mov
inc
push
jnp
outsl
fbld
fnstsw
xchg
mov
imul
les
pop
arpl
test
sbb
sub
sbb
jle
cmp
fwait
or
jmp
outsl
jnp
dec
push
cwtl
mov
jo
test
jns
and
repz
icebp
adc
ds
scas
lock
lret
lea
icebp
hlt
xor
xor
js
pop
push
aad
pop
ret
xchg
into
mov
cltd
aad
lret
xchg
stc
mov
insl
test
ret
inc
sbb
xchg
xchg
pop
pop
mov
imul
popf
xlat
sub
mov
hlt
test
sahf
push
ret
xchg
xchg
pushf
scas
outsl
loopne
aad
mov
in
test
pop
repz
in
jp
cli
add
jmp
xchg
in
ds
ds
mov
add
push
xchg
adc
rol
sbb
movsl
dec
cmc
push
lret
flds
dec
and
outsb
shld
pop
jmp
mov
shll
shll
sti
inc
pop
mov
loopne
xor
into
add
sbb
jg
popa
cmp
push
or
and
iret
js
xor
call
and
pushf
jnp
dec
ds
adc
fimuls
in
pop
push
push
and
rcr
jno
ljmp
jl
push
push
and
arpl
idivb
add
pop
push
and
mov
jbe
or
cmp
shl
pusha
sbbb
imul
jmp
and
xchg
movsb
cmpl
or
lds
push
daa
popf
sbb
dec
mov
xchg
jmp
xor
add
lcall
testl
push
dec
shr
xlat
sub
mov
push
les
sbbb
out
push
lahf
xchg
fcmovu
mov
cmp
lods
imul
test
flds
fbstp
clc
mov
rol
fists
dec
mov
int3
repnz
or
outsb
sahf
cmp
out
add
and
clc
push
and
inc
push
out
insl
mov
fwait
outsb
mov
outsl
pushf
jmp
dec
nop
inc
mov
loopne
add
je
xor
arpl
xchg
jp
in
test
sub
cmc
inc
push
mov
sub
inc
adcl
cmp
mov
repz
fidivrs
int3
dec
mov
fwait
imul
ret
push
push
aaa
or
iret
xor
pop
lahf
and
push
push
mov
add
mov
add
add
lea
and
cld
jecxz
fisttpll
out
pop
sbb
or
cmp
rcrl
jp
sahf
ret
mov
push
sti
imul
cltd
aad
hlt
sub
sbb
repz
scas
pop
sbbl
and
sub
mov
je
cltd
das
dec
adc
dec
pop
sub
pop
pop
cld
leave
mov
cmp
lods
cmp
inc
sbb
xor
notb
mov
lret
rcr
cltd
xchg
jmp
les
mov
int
adc
iret
ds
xchg
sub
pop
in
push
loop
push
mov
stos
stc
popf
insb
push
adc
mov
lret
xorl
je
jne
add
sub
push
jno
inc
sbb
lock
fs
push
xor
xchg
pop
sub
dec
out
mov
es
pop
mov
push
xchg
dec
push
jb
push
das
mov
cmc
push
lods
out
rorl
jle
inc
cld
arpl
push
xchg
jg
int3
jb
insl
mov
push
sbb
aas
mov
lcall
into
inc
and
ret
pop
fs
or
pop
fwait
cmpsl
inc
nop
jecxz
mov
bound
pop
lds
push
jp
into
xor
mov
sub
mov
xchg
lret
stos
outsb
jb
negl
mov
adc
fldl
idivb
add
addr16
push
inc
mov
sub
adc
test
ss
dec
xlat
and
dec
inc
adc
jmp
pusha
enter
xchg
add
mov
rorl
je
sahf
cmp
sbb
cmpsb
add
cwtl
cltd
push
mov
xchg
aam
shll
or
jnp
out
fiadds
test
cmp
mov
jno
ret
dec
push
popf
cmp
push
call
mov
mov
xchg
jp
mov
movsl
in
sbb
std
cmp
imul
sbb
lret
cmp
daa
jns
push
mov
sub
hlt
xlat
dec
or
arpl
loop
xlat
mov
sub
mov
push
mov
mov
insb
add
rdpmc
push
mov
mov
push
lret
mov
mov
ss
jmp
cmp
inc
mov
sub
mov
mov
mov
jo
jecxz
mov
addb
mov
xor
or
jb
or
lcall
popf
lahf
in
stc
sub
andl
sti
xor
fidivs
ja
sub
inc
jp
add
inc
xor
test
sub
loop
cmp
scas
insl
jne
push
dec
stos
test
rol
aad
scas
pop
mov
mov
cmp
rcrl
dec
imul
ljmp
xor
inc
lret
and
cltd
paddd
xchg
mov
add
cmp
push
mov
cmc
mov
push
jns
sar
shr
mov
push
mov
push
and
ljmp
daa
pop
push
stc
or
into
jns
mov
test
int3
xor
ljmp
dec
jne
cmp
mov
ret
cltd
xor
push
in
adc
aaa
or
add
dec
fbld
cmp
push
sbbl
sbb
jp
sbb
and
mov
inc
and
fadds
nop
mov
stc
int3
push
inc
hlt
sbbl
out
sbb
aaa
sti
mov
mov
xor
inc
lret
or
jae
push
sbbl
pop
loopne
aaa
sub
movsb
rcrb
insl
cmp
push
lea
xchg
insl
ds
push
mov
aam
xor
popf
xor
mov
and
mov
mov
inc
lock
sub
sub
pop
fdivs
xchg
or
mov
int
xor
js
push
pop
dec
and
dec
jns
es
pushfw
xor
mov
sub
sbb
test
or
jge
test
xor
jbe
or
shll
loope
mov
add
fsubrs
outsb
mov
pop
dec
ret
shlb
xor
mov
mov
inc
jmp
push
in
mov
ss
pop
jae
lea
mov
mov
sub
xor
mov
outsl
jl
add
sbb
xor
mov
mov
and
push
into
lds
sbb
adc
aaa
ja
push
xor
call
fldenv
scas
xchg
aas
and
clc
test
mov
imul
inc
pop
push
inc
xchg
inc
pop
lods
fwait
ret
inc
popa
int3
push
dec
push
or
insb
or
scas
int
in
out
sahf
push
dec
enter
shrl
push
fwait
push
sub
inc
mov
xchg
inc
cltd
popl
jmp
add
cld
data16
fs
imul
addl
pop
arpl
or
js
mov
in
and
in
xchg
mov
loop
mov
jg
call
push
push
addr16
mov
pop
adc
push
popf
mov
mov
xchg
and
cmp
xor
xchg
mov
xchg
stc
push
jl
aam
lret
arpl
xchg
sub
mov
idivb
testl
xor
jecxz
jecxz
rcrb
sbb
push
into
inc
mov
ret
pop
cmp
jp
mov
je
test
mov
hlt
xchg
jae
jnp
out
mov
cltd
mov
popa
shrb
cmpsl
push
mov
xchg
sti
sub
mov
xchg
frstor
cmp
xor
scas
out
das
add
and
jbe
negb
aaa
xchg
ret
ja
dec
add
mov
stos
mov
adc
push
push
cmc
orl
lcall
stos
das
pop
lahf
pop
mov
jg
pop
icebp
jecxz
push
fdiv
loopne
es
adc
insl
and
push
dec
dec
idivl
jns
cmp
push
cmp
ficompl
pop
ds
xor
xor
pop
sub
es
xchg
popa
loope
or
popl
mov
sub
add
or
pop
mov
cs
lcall
sarb
stos
in
dec
stos
mov
and
lea
pop
and
ja
adc
push
xor
mov
pop
fstpt
aam
cmp
sub
mov
cwtl
cmpsb
mov
imul
jbe
xchg
cmp
aad
out
pop
sbb
in
ss
out
inc
xor
dec
icebp
jno
push
inc
in
insl
jge
cmpl
or
or
mov
cmpsb
popf
mov
jnp
scas
jecxz
push
scas
mov
dec
push
and
shlb
lock
mov
aas
lcall
and
sbb
fld
push
and
xchg
outsl
std
inc
fdivl
sbb
xchg
push
movsb
in
jns
pop
mov
sbb
add
loop
ret
add
push
clc
in
dec
push
pop
movsl
mov
dec
xchg
add
inc
mov
in
mov
rolb
add
xchg
or
or
pop
xor
pop
lds
push
mov
js
in
nop
daa
addr16
pop
scas
ret
inc
xor
loopne
adc
fwait
xor
mov
addr16
movsl
xor
stos
ds
sub
adcl
mov
adc
jge
cmpsl
mov
xchg
jmp
shrb
stc
mov
and
xchg
mov
xlat
icebp
add
cmp
xchg
pop
xor
ficomps
lret
jnp,pt
in
jmp
xchg
pop
stos
or
pop
sub
dec
fisttpl
push
mov
pop
fimuls
push
rorb
in
sbb
add
push
inc
mov
xchg
or
rorb
dec
mov
xchg
inc
jo
and
ja
lret
mov
cmpsl
mov
xor
loopne
mov
rorl
and
sbb
jns
movsl
mov
inc
xchg
push
jns
sbb
dec
mov
daa
mov
cmpsb
je
and
inc
stos
jge
xchg
popf
std
push
dec
loopne
in
std
xchg
into
sbb
int
cmpsb
mov
or
or
fdivrs
pop
mov
ja
fisttpl
sub
fdivl
data16
inc
lods
jnp
iret
addr16
loop
popa
jnp
mov
lcall
xchg
inc
push
call
sub
xchg
sub
mov
jg
adc
push
stos
mov
rorb
aad
sub
addr16
out
in
jp
inc
sbb
ja
aad
xchg
dec
cmp
dec
mov
iret
jl
xsha1
cmpsb
into
mov
rcll
ja
or
cmpsb
push
fmulp
fisttpll
fcomip
sub
mov
mov
add
cmp
push
mov
add
ss
pop
inc
fwait
repz
popa
and
in
inc
jae
pop
fs
fidivl
fidivrs
cwtl
jnp
ljmp
mov
jno
and
and
jmp
xor
jp
mov
lcall
fucomp
mov
in
sahf
gs
test
cmp
fs
stos
xchg
xor
test
jns
xor
pop
iret
push
dec
pop
aad
mov
mov
stos
xchg
rcrl
mov
sbb
lock
xchg
pushf
jg
mov
jb
mov
in
mov
xlat
jns
pusha
fisubrs
imul
movsl
mov
inc
jb
fwait
sub
scas
inc
loope
cmpsb
daa
lcall
adc
fisubrl
sti
popa
xor
mov
fdiv
aas
orps
aad
or
pop
fs
in
cmp
pop
adc
lret
inc
sbbb
cmp
pop
jle
cld
scas
sahf
xlat
arpl
fdivrl
push
scas
jnp
pop
imul
inc
mov
xchg
cmp
scas
in
aaa
mov
ret
push
dec
push
dec
popf
and
jmp
mov
jae
lret
mov
int
jg
test
ljmp
inc
sti
jns
stos
addr16
bound
aad
jl
cld
sub
jnp
xchg
add
dec
icebp
mov
fadds
push
gs
cmp
xor
pop
test
in
mov
pop
in
insl
sbb
inc
inc
dec
out
inc
adc
cli
xor
xchg
inc
insb
sub
adc
adc
testl
das
and
stos
iret
push
sub
cltd
xor
mov
push
cmpsb
test
nop
inc
stc
pop
push
repnz
adc
pop
mov
push
js
push
movsb
dec
out
jp
aas
pop
push
mov
clc
xor
dec
pop
movsl
icebp
fstl
xchg
sub
jle
nop
insb
inc
mov
sti
pop
cmp
pusha
andl
sub
idivl
cmpsb
add
inc
push
or
iret
inc
fcmovnbe
mov
mov
test
xor
xor
jmp
push
aam
xchg
or
sti
adc
movb
fnstsw
stos
dec
jmp
mov
mov
clc
cli
stos
sub
popf
lcall
movsl
adc
std
imul
or
add
adc
fbstp
push
aad
push
daa
xor
imul
sbb
sub
xchg
add
mov
sbbl
addb
jns
push
mov
fisubrl
push
pop
mov
jmp
mov
into
xor
xchg
sub
mov
cmc
out
rorb
rcl
arpl
stos
repnz
daa
ljmp
outsb
out
pushf
lahf
subb
stos
xchg
lock
out
cmpsl
cwtl
sub
jbe
outsl
addr16
ret
ret
test
loopne
cmp
xchg
or
inc
arpl
xor
out
cmp
rorl
cmp
xlat
dec
jae
xchg
and
cmpsl
pop
inc
or
ja
inc
leave
sbb
lods
fiadds
scas
dec
inc
add
test
pop
inc
bound
mov
insl
xchg
ss
mov
pop
jp
xor
cld
sbb
xor
cmp
inc
scas
xor
cltd
jno
mov
jle
data16
repz
mov
mov
and
or
xchg
and
dec
fsubr
jl
cmp
mov
sbb
adc
enterw
xchg
fcompl
jle
imul
inc
mov
adc
test
sub
inc
xchg
jmp
inc
mov
insl
mov
insl
scas
imul
sbb
rcrl
xor
lret
stc
mov
mov
dec
adc
mov
lods
xchg
xchg
mov
push
jle
cmp
in
sarl
jge
pop
add
lret
loope
popf
stc
and
xchg
test
es
das
sbb
xchg
inc
aaa
mov
pop
call
jmp
ljmp
and
pop
xchg
adc
jmp
out
js
or
test
sub
xchg
adc
rcrl
pop
xlat
into
inc
int3
fisttpll
lret
js
inc
fisttpll
jl
jns
lods
inc
push
pop
push
or
mov
pop
adc
and
mov
cmp
jg
mov
test
in
xchg
adc
mov
and
and
mov
xchg
cmp
sbb
scas
push
fnstcw
mov
decl
jp
mov
sbb
adc
push
scas
adc
in
pushl
montmul
cmpsb
les
mov
enter
in
lahf
push
orl
pop
push
inc
aas
mov
xchg
fdiv
fsubl
xor
int3
popf
push
popf
sub
ficomps
sub
mov
das
push
cs
adc
push
xor
mov
jns
add
sub
mov
out
push
test
andb
xlat
push
andb
cmp
imul
aam
lods
jns
lods
jg
lcall
sub
mov
cmp
mov
sbb
lods
inc
pop
adc
test
repnz
clc
pop
mov
push
xor
ja
mov
shrb
push
popf
sbb
cld
ret
pop
jle
pusha
or
test
shrl
lahf
mov
enter
fstl
mov
xor
and
flds
dec
jmp
xor
xor
push
pop
xor
and
inc
lock
adc
insl
cmc
mov
scas
faddp
rolb
sbb
mov
xor
popf
add
nop
aas
jp
in
pusha
pop
add
xor
jns
jbe
dec
pusha
sub
sbb
ljmp
loope
int3
cmp
sbb
mov
stos
sti
lods
add
push
sub
int
mov
aad
pop
pop
pop
cltd
popa
pusha
dec
and
out
jae
cld
add
pop
cs
shrb
sub
or
mov
fbstp
mov
adc
mov
or
int3
gs
xchg
mov
cmp
dec
inc
ljmp
bound
mov
inc
xchg
sbbl
repnz
add
stos
sub
dec
in
pusha
rolb
call
test
loopne
push
cli
mov
fcom
pop
xchg
pop
cwtl
ja
xchg
pop
sbb
dec
cmpsb
pushf
pop
pop
addr16
xor
jp
ss
xlat
pop
lea
mov
dec
mov
jo
imull
sub
je
xchg
sbb
gs
inc
or
in
fmuls
push
lods
xchg
out
stos
cmp
mov
imul
adc
inc
sbb
fwait
test
ss
aad
inc
adc
subb
and
popa
add
cld
jp
sub
fstps
mul
mov
jge
lcall
in
push
out
add
fwait
sbb
clc
pusha
push
mov
mov
outsb
cmpsl
ss
mov
in
sub
inc
into
call
lret
add
dec
sbb
dec
jle
or
stos
dec
loope
cmp
arpl
cmp
outsb
push
push
pop
xchg
mov
jb
fs
sbb
fimull
inc
cmpsl
imul
add
dec
lahf
fistpl
ss
in
jb
fildl
fimuls
xor
test
inc
pushf
lcall
popa
fdivr
inc
mov
cmp
sbb
ret
fsubr
or
hlt
cmp
das
movsl
xor
sbb
scas
testb
pop
inc
enter
push
outsb
sub
int
xor
out
and
mov
mov
fs
or
out
sbb
xchg
loopne
lcall
repnz
pop
mov
mov
dec
cmc
les
pop
xchg
fcomi
ficompl
push
fsubr
sarb
mov
push
jmp
clc
fidivl
cmp
popf
xchg
mov
inc
loopne
mulb
push
scas
cld
add
inc
test
xchg
add
xor
leave
sub
push
cmp
mov
icebp
adc
jo
ljmp
sbb
je
pop
xor
pop
xchg
jge
dec
movsb
in
cmp
xchg
mov
inc
adc
adc
push
push
pushf
xor
mov
adc
sub
ret
mov
stc
inc
sbb
mov
dec
jecxz
in
cmp
out
mov
pop
mov
push
loope
push
dec
sbb
scas
lret
sahf
or
inc
inc
fdivs
pop
scas
jns
fucomip
pusha
pop
lods
mov
ror
dec
push
fwait
sbb
mov
mov
push
lods
scas
js
ret
dec
loop
je
test
fs
push
in
imul
mov
jl
ja
cmp
jmp
pop
ficompl
adc
push
repnz
sub
int3
xchg
sub
and
lock
sbb
mov
jmp
aam
adc
stos
adc
pop
repnz
shl
mov
shrl
dec
call
pop
lahf
xor
sbb
sbb
scas
xchg
arpl
mov
add
stc
add
shll
adc
dec
popf
jne
ret
pop
jo
add
or
sbb
outsl
cli
inc
iret
cs
pop
pop
nop
xor
imul
sbb
imul
pop
pop
jp
add
pushf
mov
mov
cld
loope
push
ficoml
inc
popa
or
fdivs
imul
cmpsl
andb
push
loope
pop
mov
push
xchg
xor
out
push
jno
mov
mov
movsb
outsb
xor
sbb
xor
jl
add
push
shlb
xchg
cs
pop
stc
mov
rcr
sti
out
call
neg
imul
lcall
mov
lock
lret
nop
cmp
not
outsb
iret
mov
sbb
hlt
sub
xchg
and
jp
imul
repnz
loop
test
inc
dec
jne
repnz
scas
cs
movsl
and
iret
hlt
dec
push
fldt
push
popf
push
adc
out
adc
mov
addr16
inc
gs
gs
pop
aas
js
sahf
stos
mov
mov
cmpl
inc
pop
xorb
sahf
sbb
data16
mov
icebp
xchg
sub
lods
dec
and
jmp
pop
dec
sar
nop
add
jb
addr16
std
xchg
sub
inc
out
mov
popa
mov
sub
imul
dec
lock
jle
inc
ficoms
ret
icebp
and
cltd
push
xchg
jns
cmc
inc
je
inc
add
inc
mov
push
or
push
jb
orb
mov
imul
mov
outsb
aas
mov
call
mov
xchg
push
ljmp
call
mov
popa
fsubs
and
push
dec
filds
xlat
sti
sub
adc
scas
inc
pop
push
test
mov
mov
and
lret
movl
add
mov
lea
lcall
push
xchg
push
mov
mov
jne
cmc
jle
adc
lods
xchg
das
jae
add
pop
lock
test
dec
test
or
fisubl
jecxz
in
dec
shrb
jge
pop
adc
pop
mov
lret
mov
xor
dec
push
and
lcall
fwait
pop
xchg
mov
jl
pop
cmp
nop
push
cmp
stc
inc
repz
xchg
push
cs
jo
arpl
push
jo
mov
in
dec
pop
pushf
inc
dec
add
jnp
jl
xor
sbb
push
test
mov
movsl
clc
jae
add
and
in
xchg
stos
pop
adc
in
mov
mov
lods
sbb
int3
loopne
cs
test
push
in
sbb
mov
mov
adc
adc
int3
cmp
adc
je
in
cmpsb
imul
das
aam
add
lcall
out
sub
ljmp
out
sub
repnz
aam
push
pop
or
shll
dec
arpl
adc
lcall
mov
je
xchg
jnp
mov
int3
pop
in
jecxz
dec
loopne
xchg
adc
aas
loop
xor
stos
or
popa
lods
fwait
les
rorl
xor
clc
addr16
test
scas
xchg
sbb
orb
jp
mov
iret
mov
inc
mov
ret
lret
sbbb
inc
inc
ds
cmp
xchg
mov
cli
push
mov
stos
and
dec
dec
int
leave
sbb
es
push
push
leave
pop
cmc
pusha
add
insl
fsubr
sahf
std
jl
sbb
cmc
mov
push
scas
pop
or
jl
test
add
add
out
sbb
negl
out
add
sarl
pop
adc
test
nop
scas
in
xchg
or
or
and
mov
mov
pop
repz
movl
xchg
dec
mov
jnp
push
ljmp
mov
cmp
scas
mov
dec
xchg
pusha
imull
in
leave
icebp
cs
stos
pop
mov
imul
cwtl
mov
pop
jp
sbb
pop
xor
dec
sahf
inc
push
out
mov
sarb
imulb
in
pop
mov
sbb
push
addr16
mov
sbb
imul
lock
rcrl
xchg
loopne
mov
mov
jae
mov
mov
cwtl
sahf
mov
sbb
xchg
lahf
cmp
loop
subb
or
inc
cmp
jmp
in
mov
fdivp
cmpsb
adc
je
mov
mov
loope
es
lods
rcll
inc
test
ja
or
insl
push
xchg
lock
pushf
fistpl
xchg
xor
in
movsl
xor
push
and
pop
fildl
sbb
cmp
outsl
sbb
add
outsl
mov
shll
xchg
aad
jl
inc
dec
cwtl
pop
xchg
push
imul
xchg
mov
stc
test
push
adc
mov
push
ret
mov
addr16
cwtl
lods
ja
mov
call
sbbl
jae
movsl
cmp
addl
jns
jne
sub
push
jmp
aaa
ja
test
mov
xchg
ret
fnstcw
push
insl
fistl
dec
arpl
mov
daa
push
shl
jnp
xor
shrb
icebp
movsb
or
jno
rcrl
xchg
out
pop
pop
push
jmp
or
movsb
rcl
scas
sub
imul
shlb
ds
jp
lcall
fdivrs
arpl
pop
insb
xchg
cmc
or
les
xchg
and
inc
cli
ficoms
clc
nop
clc
ja
imul
add
mov
scas
xchg
adc
jae
add
pop
add
pop
insb
sub
repz
inc
mov
sti
mov
mov
push
mov
inc
push
and
xchg
std
dec
out
in
xchg
test
stc
sub
es
fsubs
cmc
mov
sbb
cmpsb
or
add
sti
jb
hlt
push
out
xchg
jp
mov
subl
fistpl
ljmp
mov
push
and
bound
ljmp
stos
mov
stc
or
inc
stos
jmp
or
pusha
mov
inc
and
push
rep
sbb
inc
lods
inc
jae
dec
in
cs
enter
push
mov
xorb
mov
daa
cmp
add
mov
jp
movsl
cmp
fwait
mov
dec
push
dec
pop
aam
lret
sub
adc
xchg
xchg
mov
and
in
test
jle
loope
cmpsl
cltd
cmpsl
nop
lret
inc
push
add
lods
loope
fbstp
adc
aas
stos
mov
mov
mov
movsb
sbb
xchg
push
mov
add
fnstcw
fstps
arpl
in
stos
inc
lods
jmp
xor
pop
inc
sbb
cmpsl
cmp
ja
les
mov
push
xor
xor
cs
mov
into
jo
jbe
out
stos
push
or
aaa
sti
xor
inc
xchg
arpl
cld
movsb
mov
daa
mov
into
inc
gs
jecxz
rclb
dec
pop
std
cs
aas
fidivl
push
cmpsb
scas
or
clc
jne
mov
in
loopne
and
or
insl
call
or
call
cmpb
mov
inc
fcmovnb
lods
jnp
pop
es
cli
push
jge
clc
jle
fistpll
jg
dec
mov
pop
ljmp
call
repnz
dec
pop
xchg
inc
test
mov
sub
push
mov
lret
fldcw
shrl
mov
mov
jecxz,pn
iret
mov
arpl
jecxz,pn
add
add
cmc
test
pop
dec
loope
jns
jbe
in
and
in
mov
mov
mov
pop
pop
xchg
rolb
repnz
es
xchg
xor
aaa
jnp
jb
imulb
sbb
push
shl
mov
xchg
cmp
ret
fidivrl
and
negb
test
mov
popa
in
shrl
xchg
xor
or
mov
loopne
sti
in
dec
insl
mov
xor
rcrb
adc
or
xchg
push
lcall
aam
push
mov
rcrl
insb
out
fmuls
jge
cli
xchg
ds
cltd
test
out
imul
test
dec
mov
jl
icebp
mov
scas
jle
and
mov
fisubrl
test
fists
loopne
inc
imull
jbe
imul
pop
sub
inc
mov
enter
lahf
movsl
add
mov
imul
cmp
pop
lds
xor
and
cmp
xchg
pop
cmp
movsb
shlb
inc
imull
push
je
lret
fsubl
lock
out
xchg
lahf
pop
mov
inc
xor
jnp
test
adc
lahf
pusha
clc
es
jb
xor
adc
in
cld
fcoml
shll
cmp
loop
sbbl
jl
cltd
test
cwtl
lahf
in
icebp
sarl
xor
enter
loop
sub
sub
push
pop
jns
nop
div
mov
mov
dec
lahf
into
std
and
sbb
inc
cmp
mov
loope
push
mov
je
cmp
or
cmp
mov
mov
shlb
dec
fsubrl
push
cmp
lret
xchg
jae
add
inc
dec
in
xchg
in
lret
and
fldcw
adc
loopne
popa
fsubs
test
sti
xchg
daa
mov
push
cmpsl
dec
sbb
iret
ds
jecxz
and
sti
jecxz
pop
hlt
adc
xchg
stc
sbb
lds
pop
scas
push
pop
mov
orb
iret
std
or
cmp
sub
lahf
rorb
lock
rcrl
mov
inc
call
int
lret
inc
cmp
jmp
push
pop
and
mov
jp
push
adc
inc
and
addr16
mov
add
mov
add
mov
sub
stc
sbb
sub
xlat
dec
cmp
dec
push
push
fsubrs
lea
lret
loopne
je
xchg
add
pop
lock
fildll
mul
pop
in
adc
push
loope
inc
adc
or
outsl
push
leave
pop
jno
in
sbb
mov
out
cld
enterw
push
push
cmc
xor
andb
jbe
data16
and
xlat
push
sub
cltd
add
add
pusha
fcomps
mov
pop
mov
movsl
lods
cmp
sub
imul
jno
adc
sub
test
gs
mov
rclb
out
sbbl
or
sahf
push
lcall
push
ljmp
lock
xor
and
dec
loope
adc
push
out
push
sbb
push
insl
mov
sub
add
sbb
leave
xchg
mov
enter
cli
frstor
sub
push
xor
sub
test
out
cmpsb
inc
cli
add
cmp
mov
lds
divl
cmp
es
mov
daa
cmp
jl
dec
jecxz
popf
insl
shl
adc
mov
hlt
addr16
mov
jno
mul
mov
cmp
lds
inc
add
iret
data16
lock
add
xor
das
pushf
cmp
jl
icebp
lods
sbb
pop
inc
into
mov
add
push
jns
inc
loop
pop
mov
mov
adc
adc
sub
dec
mov
dec
mov
aam
stc
nop
imul
insl
lods
fs
push
test
mov
sbb
pop
nop
jnp
push
jmp
popa
out
mov
aas
and
test
ds
inc
pop
ficoms
xchg
inc
dec
ficoml
sub
int3
ljmp
sub
jge
sbb
and
fs
push
sub
imul
pushf
pop
test
xchg
mov
aas
int3
fstl
insl
cwtl
xchg
sbb
cmp
pop
out
leave
int
out
push
and
aaa
fidivrl
push
ret
dec
or
cmc
pop
shlb
int
repz
sub
sahf
mov
dec
dec
mov
enter
in
pop
ret
daa
imul
and
outsl
or
out
jp
sub
lea
xor
sbb
test
aaa
arpl
push
jbe
xor
lods
in
mov
lret
out
mov
and
push
jmp
les
lods
ret
aad
mov
jecxz
lods
inc
ljmp
popa
repnz
sub
insl
adc
pop
inc
sub
shll
jecxz
xor
dec
pop
ja
mov
imul
setae
and
sub
xchg
sbb
out
jl
in
mov
movsl
mov
addl
clc
mov
ret
inc
jg
rclb
xlat
jp
push
mov
enter
ds
lock
lock
adc
arpl
xchg
fs
popa
lods
add
and
imul
add
cmp
test
pop
ficoml
sti
or
outsl
mov
les
aam
mov
push
adc
push
test
out
jle
jg
xor
cmc
mov
add
add
int
push
and
jge
or
add
fisttpl
mov
mov
insb
sub
pusha
or
jbe
mov
shrl
ret
adc
pop
hlt
xlat
mov
jmp
or
pop
daa
add
sub
xlat
mov
pop
lds
lret
loope
push
rol
push
ljmp
jno
clc
or
jnp
xchg
cmp
dec
mov
enter
jle
dec
and
jl
cli
cmc
mov
pusha
sbb
and
add
insb
mov
push
add
or
ret
fwait
sti
or
les
pop
dec
push
data16
sub
dec
pop
rclb
add
sti
push
xchg
or
loope
je
icebp
sbb
andb
cmpl
jbe
push
loope
inc
ljmp
cwtl
ss
aaa
pop
int3
or
sti
rcrl
dec
addb
lds
test
cld
scas
sbb
sbb
mov
mov
sub
sbb
push
xor
nop
lods
push
mov
lods
fistpll
in
xor
xor
xchg
mov
hlt
and
or
adc
mov
adcl
add
push
pop
xor
xor
int
sbb
inc
ret
pop
sti
in
inc
mov
adc
pop
or
push
aaa
in
pop
jmp
lea
mov
mov
jmp
push
inc
and
mov
push
jge
inc
call
sbb
jo
mov
dec
dec
dec
dec
jae
adc
xchg
in
xchg
lea
and
mov
sbb
push
jmp
cmp
jb
push
stos
popf
xor
das
xchg
sub
out
test
jbe
test
movsl
dec
arpl
mov
jle
lret
xchg
adc
xchg
adc
cli
popf
jg
std
out
jmp
scas
and
test
or
push
stc
shl
push
cltd
push
ss
cmp
mov
pop
flds
andl
and
adc
enter
fstl
and
inc
popa
stc
jp
loopne
lods
pop
in
cmp
mov
cmp
sahf
movsb
pop
or
cmpsl
dec
pop
jge
and
dec
shlb
outsl
mov
mov
lock
rcrb
rol
aad
out
mov
movsb
shll
aad
aaa
jbe
in
aas
sbb
inc
adc
lods
jb
cltd
mov
or
pop
es
call
movsb
xor
xor
test
mov
cltd
push
testb
jmp
xor
pop
pop
add
mov
pop
stos
test
js
pop
cmp
or
out
xchg
or
out
xor
push
jne
cmp
imul
lds
cmp
dec
and
rcll
push
inc
lret
and
insl
add
push
ss
jb
push
and
pushf
add
mov
es
or
loop
fidivs
add
jle
or
fidivl
cli
gs
xchg
mov
sbb
and
sti
dec
cmp
cli
xchg
adc
and
icebp
mov
adc
push
sub
mov
jns
adc
stos
daa
addr16
sub
and
insb
and
push
add
in
jp
lods
icebp
cmpb
xchg
jmp
pushf
mov
call
fnstsw
rolb
lods
xor
push
out
int
fwait
daa
sbb
mov
jno
cli
cld
push
xor
icebp
enter
xor
adc
stos
repnz
pop
cltd
pop
pop
inc
xchg
xchg
cmp
test
mov
add
dec
loop
pop
es
push
cli
pushf
insl
dec
xor
jp
into
jno
push
int
mov
fucomip
add
or
push
movsl
jle
sub
dec
not
mov
out
cwtl
dec
jmp
mov
and
dec
sbb
popf
mov
push
out
lcall
ja
je
add
mov
cmp
push
fwait
add
xchg
sbb
aaa
jmp
in
jecxz
sub
nop
xchg
sub
push
ss
aam
sahf
sbb
loop
dec
fbstp
pop
andl
xchg
mov
loop
mov
cmp
sub
mov
sbb
dec
jnp
fcmovu
call
cwtl
jae
mull
subb
out
bound
cld
outsl
test
ficoms
jge
inc
xchg
push
aam
jp
cmp
popa
mov
nop
insb
and
xchg
popf
into
sbb
out
pop
js
ja
stos
or
sub
out
rol
loope
xor
cmp
sub
in
fmulp
cltd
inc
daa
idiv
pop
inc
stc
mov
jno
push
mov
xchg
adc
mov
and
rcrb
pop
cmpl
mov
mov
adc
adc
mov
pop
sahf
inc
ret
mov
mov
out
push
mov
pushf
js
xchg
mov
mov
out
movsl
pop
sti
fwait
orl
shrb
mov
dec
cmc
mov
imul
test
clc
mov
bound
enter
jg
test
testl
sub
outsb
loope
sti
inc
dec
sub
fnsave
sub
lea
lret
out
movsb
mov
adc
data16
cs
fistps
mov
fnstenv
pusha
subb
jp
cmpsb
or
icebp
mov
xchg
mov
ss
outsb
out
pop
mov
insl
push
xor
es
inc
fld
inc
and
jecxz
mov
push
mov
fbld
jo
push
rcrl
pop
xor
add
xor
xchg
cwtl
imul
imul
nop
sub
pop
push
ret
mulb
pop
sbb
lret
imul
sub
push
jno
shll
rcrb
pusha
and
mov
xchg
mov
test
test
adc
inc
adc
inc
ss
insl
movsb
ja
xchg
xchg
in
push
xchg
jno
adc
jg
shrl
leave
pop
insl
scas
fisubrl
and
or
scas
mov
cmp
movsb
bnd
push
movsb
in
xor
es
mov
out
or
fidivrs
stc
movsl
not
push
fxch
inc
mov
cmc
push
addl
pop
imul
insl
rolb
mov
mov
sub
adc
xor
mov
jl
adc
imul
dec
mov
mov
rclb
in
dec
in
jecxz
mov
fwait
and
inc
mov
push
out
out
fimuls
dec
mov
aad
dec
ljmp
repz
mov
push
cmp
dec
out
mov
xchg
adc
sti
in
sub
test
dec
out
test
shrb
adc
into
shll
dec
gs
cmp
adc
loope
mov
jmp
or
cmp
lret
or
scas
xchg
rcll
add
xor
and
fwait
push
test
mov
out
mov
test
lret
je
shl
mov
inc
xchg
rolb
popa
push
xor
sbb
iret
sub
jno
cld
jmp
dec
test
sahf
xchg
ds
xor
test
mov
mov
xchg
mov
les
dec
lret
iret
cmp
mov
lret
jnp
loope
in
imul
repz
vcvtsd2ss
xchg
pusha
mov
push
sub
mov
in
inc
leave
jb
mov
mov
int
xchg
jmp
push
loope
dec
sub
leave
dec
pop
sti
cli
mov
ds
fucom
jp
mov
add
ds
pop
sahf
mov
pushf
lahf
insl
and
nop
mov
adc
mov
ffree
imul
mov
imul
popa
aad
cmp
add
push
mov
add
jno
movsb
cmp
push
push
out
int3
cmp
nop
outsl
sub
push
test
ss
push
jbe
xchg
mov
imul
jge
mov
repz
sub
push
js
pop
imul
cli
gs
jecxz
mov
repnz
xor
call
bnd
sahf
int
clc
push
mov
add
dec
sarb
pushf
xchg
xor
fsubl
dec
or
jae,pt
lret
or
shlb
add
ret
hlt
adc
imul
in
pop
sub
mov
adc
adc
mov
push
sub
xchg
ss
call
mov
mov
mov
mov
gs
push
mov
popf
sbb
sbb
push
std
jmp
mov
push
or
pop
adc
loopne
and
out
xchg
or
jmp
aaa
fwait
out
mov
insb
sbb
push
jmp
stc
push
xor
adc
repz
and
iret
mov
add
std
adc
jb
and
mov
mov
rorb
add
adc
in
jle
add
dec
sub
push
cltd
ss
push
js
cs
pop
pop
mov
push
jb
add
es
and
stos
mov
mov
adc
push
insl
subl
stc
mov
inc
cmp
add
jmp
or
dec
cmp
data16
outsl
loop
mov
jge
fdivs
popa
sbb
stos
test
imul
jle
jle
push
pushf
test
aad
test
or
lock
mov
ja
cld
sbb
lds
stos
cmp
mov
das
mov
and
sub
into
pop
or
xor
cmp
fs
xlat
ljmp
xchg
ficompl
jmp
pop
adc
aaa
insb
shrl
cs
pop
jnp
sub
mov
pop
add
or
ljmp
aas
in
ljmp
lds
ficoms
adc
incb
mov
iret
adc
ss
neg
je
inc
sahf
jns
fistpll
xchg
cmpsl
add
mov
xchg
fsubs
xchg
addps
test
add
sti
xor
mov
fsts
mov
cltd
and
test
fwait
sub
loopne
cmp
adc
mov
adc
notb
xchg
clc
cmpsb
xchg
pop
fcomp
ret
dec
xchg
mov
popa
cmp
iret
and
push
push
add
push
cmc
ja
enter
outsb
dec
cli
shl
outsb
xor
stos
fnstcw
lods
arpl
into
insl
mov
lock
jo
ds
push
in
lock
sbb
lds
jno
sbb
push
push
adc
cmc
ret
jle
push
mov
jl
push
insl
dec
fimuls
cs
jnp
fs
jns
inc
mov
lcall
or
mov
inc
stos
add
sbb
and
sub
or
dec
in
cmp
in
xchg
and
xor
lcall
mov
das
inc
adc
push
mov
or
push
pop
scas
xlat
lahf
popf
lods
shl
push
clc
sbb
jno
test
mov
rclb
push
das
lock
sbb
pop
dec
bound
pop
xchg
outsl
pop
scas
xor
ss
or
cs
outsb
mov
out
lcall
or
clc
sbb
inc
stos
andb
inc
inc
and
inc
push
out
mov
push
lret
cld
ljmp
fdivs
inc
mov
mov
lods
lret
sub
shl
enter
fwait
sbb
loop
fsubrl
add
and
and
sub
dec
hlt
mov
mov
mov
and
cs
pusha
test
jecxz
xchg
add
sub
dec
push
sub
jecxz
push
push
push
ja
sub
jb
sub
gs
movsl
rcl
mov
mov
and
jg
sub
imul
xchg
aad
xchg
nop
loope
cmpsl
fwait
test
mov
dec
enter
adc
mov
mov
scas
cmpl
lods
xor
out
dec
in
imul
fidivrl
push
cmpsl
jl
imul
rcr
lret
sub
add
shll
sbb
lock
mull
in
add
adc
mov
push
mov
arpl
xchg
jns
movb
into
lcall
in
subl
push
jg
or
test
sub
or
jns
adc
pop
mov
mov
je
jp
pop
push
jecxz
xor
xchg
sar
mov
pop
xchg
sbb
imul
popa
sbb
mov
mov
shlb
pop
negb
jg
xchg
cld
inc
add
push
inc
in
iret
data16
out
mov
int3
cmp
insl
movsl
push
jae
push
bound
ljmp
subl
cmp
sar
dec
data16
xchg
push
jo
es
or
aaa
push
push
or
push
xlat
inc
mov
mov
scas
or
sub
xchg
sub
xchg
push
call
iret
sub
cld
add
jbe
shrl
stc
loop
sti
sti
rorl
test
mov
push
ljmp
and
cwtl
iret
pop
stc
xchg
xor
and
int
test
jne
cmc
adc
ljmp
dec
loopne
cmp
xchg
mov
addr16
fsubs
inc
or
imul
icebp
mov
ljmp
cltd
cmpl
out
sub
pop
xchg
jb
jle
mov
inc
jp
xchg
sbb
outsb
add
jl
pop
cmpsb
or
rol
sub
popf
pop
incl
xor
xchg
ret
inc
push
popf
xchg
push
mov
scas
dec
popf
stc
cli
rcr
stos
mov
lret
xchg
xor
mov
shll
mov
push
sub
mov
movsb
push
or
in
cld
je
addr16
jge
pop
out
xchg
lret
cld
pop
jbe
xor
jmp
mov
ja
push
cs
shl
out
and
fisubl
xor
or
call
cmpsl
xlat
movsl
push
popf
fdivrp
xchg
mov
push
and
or
jne
ja
test
and
and
mov
je
sahf
out
inc
fisubrl
mov
mov
addr16
das
mov
adc
or
mov
cmp
stc
push
in
rorb
cmp
ret
add
orb
inc
sub
cld
pop
bound
cmp
jg
sub
pop
out
mov
mov
push
cmc
rcr
ud0
inc
xchg
loopne
mov
ss
cs
leavew
xchg
das
fs
loopne
and
xchg
sbb
xor
push
sti
cmp
mov
xchg
lretw
sbb
iret
mov
int3
adc
shll
lret
sti
xchg
xchg
cld
es
or
data16
push
daa
into
aas
stos
inc
in
scas
movb
cmp
push
repz
rol
iret
xchg
add
mov
jg
sub
mov
into
out
push
cli
loope
push
lahf
mov
es
pop
fstpt
mov
lret
test
shr
inc
int3
inc
hlt
clc
cmpsl
imul
dec
dec
mov
push
call
pop
std
and
lcall
dec
fisttpll
dec
jae
shrl
fdivp
enter
add
mov
mov
lds
faddl
in
push
mov
adc
adc
pushw
sub
aaa
pop
push
leave
test
pop
xchg
jbe
xor
scas
lahf
pop
sub
je
jb
mov
ficomps
or
xchg
mov
cmc
mov
sbb
jb
xchg
adc
inc
leave
leave
test
fistpl
mov
adcb
scas
pop
pop
outsb
xorb
mov
addb
mov
icebp
add
xchg
in
add
mov
mov
jmp
aam
adc
ds
mov
dec
sub
sti
fimuls
pop
xchg
movsb
repz
dec
mov
cmpsb
rcrl
dec
inc
and
pop
and
enter
cmpsb
jp
sub
mov
xchg
push
sbb
xor
dec
mov
xchg
aaa
insb
mov
dec
xchg
mov
pop
negl
movsb
dec
push
mov
mov
cmpsb
inc
stos
test
js
sarl
dec
add
loope
or
cli
lods
mov
pop
inc
jae
cmp
push
cmp
mov
dec
adc
pop
xor
mov
cmp
ljmp
lock
scas
and
mov
stc
jbe
mov
insl
dec
fwait
mov
add
mov
test
test
pop
cmp
inc
jle
out
dec
repz
and
jge
outsb
out
rcll
out
in
ret
dec
cmp
and
and
call
cmp
xchg
push
filds
repz
psubb
pop
scas
mov
xchg
in
cmpsb
mov
pop
xchg
fdivrp
mov
xorb
mov
cmpsl
stos
jne
scas
mov
sbb
push
in
inc
fidivs
pop
insl
mov
sbb
fwait
pop
and
cli
mov
test
aaa
mov
xor
jne
mov
rep
dec
cmpsb
js,pt
mov
inc
push
xchg
pop
imul
mov
mov
inc
mov
inc
fnsave
inc
fnstsw
add
push
aam
jnp
incb
shrl
sti
pop
cli
xor
inc
push
mov
das
mov
sti
xor
leave
jmp
inc
out
mov
jge
jbe
movsb
cs
aam
cmp
cmp
mov
dec
ret
add
imul
subl
iret
bound
push
test
fwait
negl
testl
jl
call
xchg
cmp
fldcw
dec
push
push
mov
jo
xchg
lret
and
jbe
in
inc
sahf
in
cli
push
cmp
sbb
testl
xorl
jb
pop
bound
out
and
fcoms
and
jmp
jle
in
rorb
push
lock
pop
push
pop
sub
gs
pop
cmp
dec
test
sub
and
mov
int3
xchg
adcl
sahf
andl
sarl
in
mov
xchg
test
notl
mov
dec
xor
sbb
scas
xchg
mov
sarl
insb
or
and
popa
or
fwait
add
mov
stc
push
mov
aas
ja
jl
jbe
das
test
dec
shlb
int
std
std
jg
arpl
pop
test
lds
cmp
sub
fcmovbe
add
mov
icebp
insb
mov
xchg
mov
les
cmpl
xor
in
pop
xor
xchg
repnz
jg
xor
ss
lock
pop
push
cltd
sbb
loopne
mov
je
mov
ret
jp
movsl
cmp
push
mov
pop
dec
and
jmp
xchg
xchg
mov
jl
sbb
dec
dec
and
outsl
mov
sarl
sbb
popf
sub
mov
sub
loope
pop
sub
jo
icebp
pshufw
les
in
jp
ret
aam
mov
cli
imul
push
fwait
jg
add
cmp
push
movb
dec
ds
scas
push
out
shll
fnstsw
xchg
inc
jae
mov
lock
ficoml
xchg
xor
call
xor
mov
mov
add
mov
stc
xchg
sahf
lret
push
jg
lds
pcmpgtb
and
dec
jbe
sbb
inc
jecxz
bound
mov
addb
xor
int3
pop
lret
in
test
sub
rcr
nop
mov
fimuls
mov
inc
loop
xlat
dec
xor
mov
jle
lea
sub
test
mov
mov
fcmove
sbb
push
xchg
jl
test
mov
subl
dec
pop
and
xchg
jmp
andl
mov
rorb
jno
adc
mov
xchg
pop
or
rcll
aas
sub
push
and
pushf
leave
sarl
or
rcrl
test
mov
aam
jl
fistl
pop
rep
cld
das
into
or
xchg
adc
lcall
and
pop
xchg
push
and
add
jb
add
push
ds
xchg
mov
imul
negl
out
xchg
dec
add
push
mov
lea
mov
jbe
int3
fwait
lret
xchg
data16
pop
xchg
mov
aam
mov
incb
adc
int3
mov
cwtl
pop
pop
mov
cmp
notb
addl
pop
insb
sahf
dec
fildl
push
xchg
push
cvtpi2ps
mov
repnz
sub
rclb
xchg
and
add
jl
sbb
push
xor
xor
mov
pushf
popl
adc
ret
out
dec
in
stc
sbb
test
js
lods
jge
loope
dec
lods
in
or
xor
cmpsl
sbb
xchg
push
cmc
pop
rorl
pop
andb
sti
xor
xchg
insb
adc
test
mov
dec
jne
jae
push
addl
jbe
xor
divl
outsl
scas
push
insl
sub
lret
lret
jno
in
fnstenv
popf
xchg
mov
mov
sub
or
cwtl
mov
addl
sbb
in
fwait
sbb
xor
ljmp
adc
stc
push
stos
imul
stc
push
call
mov
notb
xchg
into
icebp
inc
vpsrld
mov
cld
inc
jb
or
sbb
aad
cmp
jo
pop
les
push
stos
pop
jo
cmp
mov
jle
roll
paddq
xor
mov
test
arpl
ret
jnp
movsl
dec
imul
xor
movsl
mov
enter
mov
ds
or
cld
xchg
test
or
jp
test
sbb
add
jne
das
loopne
pop
xchg
sbbl
jo
pop
mov
push
xchg
lds
add
test
lods
mov
into
adc
lret
mov
cmp
jecxz
push
cmp
push
stos
cmp
rorb
scas
mov
shld
das
xchg
dec
inc
pop
in
cmp
data16
out
cmp
mov
push
mov
bnd
stc
lock
movsl
enter
test
add
sbb
leave
test
aas
iret
inc
outsl
test
rolb
push
or
sub
jle
jecxz
loop
lcall
xor
aaa
dec
cmp
mov
leave
mov
das
lds
mov
dec
pop
fcmovnbe
xchg
inc
mov
mov
pop
js
sbb
fisubl
idivb
cmp
fprem
inc
mov
add
test
xor
jne
iret
fnsave
popf
loope
imul
xor
sarl
cmp
adc
mov
lock
mov
int
dec
test
inc
pop
mov
jecxz
ret
mov
jne
cmp
loop,pt
sub
dec
fwait
add
inc
adc
dec
pop
movb
fstpl
in
loopne
add
add
push
movsl
ja
mov
xchg
rorb
pop
popa
mov
std
ss
push
rcl
je
or
cmp
jnp
jne
je
and
inc
test
ja
fsubs
xchg
mov
mov
sub
mov
and
sti
and
adcl
aas
pop
mov
rolb
rorb
popa
cld
iret
xor
ja
dec
bound
push
pop
movsb
out
ljmp
jae
loop
xchg
xchg
dec
movsl
dec
mov
in
jmp
or
cmp
add
jne
add
stos
stos
pop
icebp
fmuls
mov
push
mov
push
in
inc
push
mov
xchg
data16
jbe
push
movsl
fidivl
js
jns
ret
stos
inc
outsl
push
xchg
aas
ret
fbstp
loope
adc
popa
jns
stos
add
lcall
int3
xchg
add
inc
test
jmp
ss
pusha
jae
push
repz
aad
daa
jge
sbb
pushf
or
lock
mov
push
leave
int
movsl
inc
inc
push
or
dec
js
nop
daa
cmpl
sbb
jne
popf
and
shl
inc
fstps
es
ret
adc
outsb
outsb
in
lahf
sub
xchg
mov
sahf
ret
inc
adc
or
jge
lods
xchg
mov
test
clc
push
outsl
cmp
inc
pop
adc
sub
push
out
and
cmp
lock
cmp
fs
mov
jp
jmp
stc
in
dec
dec
pop
jb
add
dec
test
xor
adc
ja
xchg
mov
dec
bndstx
sar
stos
cmpb
repz
loope
sub
repnz
cs
adc
adc
rorb
dec
push
jmp
lret
push
testb
xor
or
cmpsl
addl
fildl
je
sbb
inc
dec
sahf
cld
clc
nop
cmp
inc
and
mov
lods
jg
ficompl
arpl
add
jg
loopne
push
jle
jle
inc
jnp
push
lods
mov
bound
pop
ficomps
clc
mov
inc
cli
out
xchg
mov
push
sbb
popf
jmp
pop
insl
mov
cmp
lods
lock
dec
sar
mov
cld
in
xor
jmp
pop
push
inc
inc
loopne
icebp
mov
out
fistpl
xor
mov
mov
push
jg
loopne
movsl
loop
mov
fdivrl
jecxz
test
stc
xrelease
dec
out
cwtl
andl
clc
lock
pop
xor
cli
pushf
push
xchg
repz
jle
lds
arpl
pop
cmc
enter
divl
ret
push
inc
push
adc
shl
fiadds
sub
out
xchg
cmp
xchg
dec
xor
sub
sbb
lock
out
jmp
adc
mov
push
cmp
sub
aas
mov
lods
notb
cmp
mov
push
cmp
sub
jo
dec
fcmovne
dec
push
mov
adc
push
fs
in
adc
xchg
dec
negl
dec
sub
add
adcb
and
das
push
xchg
and
jns
ds
out
inc
les
dec
mov
mov
nop
push
orl
jmp
jb
es
out
scas
test
dec
mov
in
iret
or
mov
je
sti
repz
stos
in
mov
jg
js
sbb
jae
loope
xchg
pop
dec
cli
jnp
adc
orl
lret
pop
outsl
pushf
iret
mov
xor
pop
jns
int
out
rclb
push
aaa
sub
pop
fwait
nop
inc
and
mov
int3
mov
mov
sub
jne
sarb
sub
nop
cmp
repnz
lret
loop,pn
sbb
int
push
scas
repnz
pop
adc
mov
push
cwtl
xchg
push
mov
mov
jb
mov
adc
push
xor
xor
inc
mov
je
mov
mov
pop
sahf
xor
scas
pop
stos
push
rcrl
and
cwtl
fnstsw
decl
jle
loopne
sub
cmp
jp
jbe
mov
fwait
xor
fdivrs
notl
std
xchg
bound
push
mov
popa
shr
xchg
sub
jecxz
inc
jmp
xchg
mov
jo
cmp
pop
cmp
mov
pop
push
pop
and
jg
popa
repnz
xor
out
dec
cmp
mov
aaa
add
shl
shrb
das
addr16
repnz
lahf
or
mov
mov
mov
or
inc
pushf
lods
jl
je
mov
sti
fwait
hlt
bound
mov
inc
out
pop
xchg
and
sub
rcrb
mov
mov
ret
mov
push
push
push
push
notb
jb
xchg
mov
mov
sbb
lret
pop
add
inc
jecxz
inc
push
mov
ja
subb
sti
cmp
xchg
popf
push
mov
sub
arpl
idiv
mov
mov
xchg
jge
xor
pop
push
rcrb
xor
mov
mov
adc
mov
pop
mov
or
xor
aad
js
pop
divb
mov
movsl
jmp
lcall
sbb
cld
subb
mov
sub
xchg
fistps
mov
icebp
adc
aam
hlt
xor
push
sub
cmc
pop
aaa
rcrl
cmp
pop
je
test
mov
cmpsl
and
adc
adc
scas
inc
cmp
and
push
push
addr16
xorb
movb
xchg
sub
dec
cmp
add
es
push
ljmp
lcall
and
sub
inc
inc
adc
mov
sub
pushf
pop
ss
mov
je
pop
add
mov
inc
sub
rolb
pop
in
jae
enter
stos
fnop
enter
pop
inc
cmpsl
mov
dec
scas
mov
fisubrl
addr16
stc
pop
push
xchg
scas
out
pop
jl
jle
mov
jae
or
sbbb
lods
add
sub
fldt
rorb
lret
outsb
mov
loope
push
mov
inc
imul
mov
jge
in
jne
loopne
cmc
push
push
adc
mov
js
sub
xchg
int3
daa
enter
mov
movsb
mov
push
enter
ljmp
mov
notl
jnp
cmpsl
adc
sti
cmpsl
inc
sub
xchg
adc
mov
inc
xor
or
mov
addr16
or
pop
movsl
gs
cmp
es
sahf
cmc
cmp
jbe
lret
cmp
add
shll
aam
jbe
xlat
outsl
dec
and
adc
pusha
ss
push
je
je
stos
inc
pop
outsb
push
mov
jns
pop
loop
sub
fstps
jl
xchg
dec
push
mov
daa
outsl
aas
shrl
xchg
xchg
bnd
es
push
int3
push
mov
mov
sub
fld
imul
cli
pop
mov
or
out
scas
jl
and
sbb
lock
and
dec
outsl
inc
fsubs
inc
scas
int3
xchg
and
jb
xor
leave
pop
pop
sti
nop
inc
stos
inc
out
ss
sub
arpl
into
shr
addb
or
pop
inc
pushf
or
sbb
cmp
inc
mov
in
fimuls
shlb
pop
xor
mov
jle
pusha
in
stc
lahf
lea
add
in
ljmp
or
in
inc
fs
ss
add
je
scas
inc
pop
jne
sub
out
cmpb
imul
enter
cmp
subl
in
push
pop
shll
repz
insb
lcall
sbb
imul
pusha
pusha
cmpsb
ds
orb
leave
mov
xlat
mov
in
sahf
jno
hlt
xor
xor
inc
bound
xchg
test
add
lock
push
pop
jbe
adc
pop
repnz
pop
je
js
bnd
pop
sub
inc
mov
aaa
cmpsb
push
mov
fwait
mov
out
push
jp
mov
pop
xchg
stos
test
push
push
cmp
lock
repz
bound
jge
dec
std
adc
push
or
sub
pop
out
stos
out
bnd
add
int
sbb
xor
cli
xchg
lods
inc
iret
cwtl
or
popf
rcrb
mov
dec
enter
jle
sti
js
push
je
sub
ret
repnz
aas
fcom
jle
push
iret
jecxz
imul
test
dec
enter
sub
inc
mov
pop
test
xchg
data16
xchg
lret
mov
mov
cld
or
and
cmp
mov
subb
mov
jne
push
scas
lret
shlb
sbb
xchg
or
inc
negl
pop
adc
negl
cmp
mov
jmp
xchg
sbb
pop
sahf
xchg
jbe
jnp
jg
lret
rclb
cmp
push
insl
mov
dec
test
add
lahf
inc
int3
xor
xchg
xor
mov
loop
jnp
sti
xchg
inc
mov
lret
sbb
mov
enter
nop
mov
sahf
sbb
mov
in
push
scas
xchg
lret
shrl
sbb
cld
inc
data16
in
mov
sub
xor
adc
shrb
mov
jge
bound
or
mov
mov
mov
jmp
dec
mov
xchg
cmp
call
push
movsl
subb
fistpll
fsubl
xor
jne
lcall
movsl
dec
hlt
sbb
and
mov
iret
xlat
xor
lret
jge
sbb
inc
cwtl
adc
pushw
sub
inc
jno
nop
adc
cli
dec
push
shl
push
sbb
sub
cwtl
xor
sbbb
popa
jns
push
in
push
jno
jle
insl
adcb
sbb
xchg
insl
rorb
push
pop
push
nop
jmp
enter
je
outsb
enter
jg
jnp
and
xchg
add
sahf
pop
icebp
push
fldl
ss
pop
inc
xchg
lods
les
and
push
test
dec
fwait
jp
pop
lods
cld
in
or
rolb
dec
dec
mov
push
push
dec
push
lods
inc
sbb
inc
mov
adc
inc
scas
sub
ljmp
cs
int
inc
cli
push
sti
jbe
xchg
sbb
aad
mov
mov
shlb
enter
dec
pop
outsl
dec
out
outsb
push
jo
jnp
push
jge
mov
pop
lods
jmp
sbb
fldt
nop
jecxz,pt
repz
mov
fs
rol
pop
fs
xor
jmp
inc
pop
test
or
xchg
pop
arpl
lret
cmp
add
lea
mov
sbb
les
jl
loope
aam
mov
push
shll
dec
adc
add
mov
enter
or
add
mov
test
ljmp
inc
scas
scas
ret
imul
lea
dec
rolb
imul
scas
mov
xlat
dec
inc
inc
jno
lock
fidivrs
pop
dec
pop
cmc
in
pop
mov
scas
fdivrl
aam
shlb
sbb
dec
mov
roll
cmpl
outsl
adc
push
mov
ljmp
push
push
rcr
mov
pop
push
roll
mov
cmpsb
arpl
fldt
lret
push
in
mov
push
out
push
aaa
cld
sub
mov
in
xchg
or
js
pop
pop
bound
sbb
push
and
fsubs
or
push
adc
sbb
mov
scas
int
pop
lock
int
adc
js
ficoml
or
lahf
dec
mov
fs
mov
mov
out
scas
std
xor
xor
cmp
inc
loope
adcb
dec
push
pop
test
xchg
jg
xchg
adcb
nop
push
mov
lcall
incb
icebp
rclb
adc
adc
mov
jb
mov
les
aaa
insl
add
popa
jne
in
mov
pop
jae
dec
js
out
test
andb
xchg
subb
mov
sbb
add
cmp
cwtl
push
jo
popa
and
or
scas
and
insb
add
into
mov
xor
mov
adc
testl
lods
pop
xchg
adc
scas
pop
add
fucomip
ficoms
add
jg
loopne
mull
add
cmp
gs
shl
add
sbb
in
sbb
fs
aaa
xchg
ja
imul
push
repz
lret
xchg
je
gs
fwait
xchg
outsb
push
jmp
xor
orl
mov
cld
test
test
cmp
pop
pushf
or
movsb
sub
imul
lret
test
inc
enter
les
xchg
sbb
dec
pop
les
addb
pop
mov
loop
xorl
out
inc
sbb
pushf
xchg
insl
loope
std
sub
int
jge,pn
test
mov
out
sti
in
xor
imulw
jge
cmc
pop
inc
fidivrs
pop
lods
mov
das
test
add
push
ljmp
pop
divb
jge
mov
mov
or
push
movsl
lea
idivl
dec
loop
inc
sub
adc
int3
popf
jl
mov
inc
adc
rorb
mov
or
jno
addb
sti
pop
mov
mov
mov
add
lods
cltd
fnsave
xor
sbb
dec
rcrl
stos
imul
int
sbbl
push
mov
lret
in
jmp
data16
adc
and
xor
addb
sbb
jp
aaa
leave
sbb
outsb
sbb
addl
xchg
loopne
inc
pop
and
cmp
out
adc
in
cmc
mov
imul
movsb
repz
cmp
dec
dec
mov
mov
cmp
in
ret
test
mov
push
sbb
sahf
inc
outsb
xor
push
fisubs
rolb
int3
xchg
inc
mov
mov
repz
mov
adc
popa
inc
in
pop
fwait
arpl
addr16
fistpll
dec
or
sub
add
dec
daa
test
stos
rol
insb
mov
rol
lahf
std
cltd
xchg
xchg
xchg
xor
nop
movsb
rol
dec
bound
or
mov
lea
xlat
pop
adcb
and
movsb
loop
mov
iret
mov
out
sub
shlb
inc
fsubr
ret
xor
cmpsl
sub
cltd
jnp
inc
divl
xor
push
std
cltd
outsb
sarb
notl
ret
dec
jl
lea
cltd
bound
lods
push
in
gs
sbb
fsubs
jb
arpl
push
test
or
and
outsb
jns
inc
mov
lret
push
xlat
mull
xorb
mov
icebp
insb
rcrl
sbbb
sti
jb
mov
test
lea
cmp
in
jg
inc
popa
movl
push
dec
push
inc
cmp
out
mov
leave
jae
jge
outsb
fcoms
or
subb
je
daa
push
push
pop
or
shrl
fs
push
inc
mov
adc
test
mov
jns
mov
pop
push
js
or
outsb
rcl
push
sbb
adc
sub
mov
out
cmpsl
imul
push
xor
and
lock
gs
fs
inc
hlt
mov
stos
ja
scas
sbb
sub
mov
jne
test
cmp
stos
add
into
cld
lret
push
out
push
test
add
xor
mov
xor
popf
in
lods
stos
xchg
fs
cs
and
cltd
dec
lock
loope
inc
add
xchg
pop
es
pop
test
mov
aas
mov
faddl
jae
xchg
aaa
fs
push
in
cld
cmpb
dec
mov
dec
out
int
sub
jae
aam
and
mov
sbb
fldt
cmp
testl
and
test
inc
cwtl
pop
mov
ss
jl
cmp
test
pop
fs
xor
insl
inc
sub
xchg
sbb
inc
repnz
cmp
inc
xor
mov
push
cmc
sbb
mov
adc
pop
xor
jo
das
and
sub
scas
aas
dec
sbb
dec
rolb
fs
cmp
push
cltd
je
rclb
fisttpll
cmc
mov
ffreep
fstpt
pop
aaa
stc
pusha
adc
pop
xchg
dec
dec
pop
outsb
push
pop
cmp
test
push
out
add
insb
orb
movsb
dec
adc
popa
and
push
mov
aam
test
out
dec
mov
pop
mov
adc
jb
ficoml
rclb
imul
pop
int
jne
push
pop
jle
jns
dec
pop
adc
adc
push
dec
jecxz
aam
dec
xor
sbb
rol
test
dec
imul
fwait
xor
or
divb
rcrb
add
addr16
jle
lods
int3
mov
sub
sbb
fsubr
scas
mov
mov
fldcw
int
push
ret
icebp
lods
pop
sbb
jmp
jl
adc
sti
aas
push
sub
sbb
in
aaa
hlt
xor
loop
cmp
push
mul
in
into
add
mov
or
inc
nop
sub
sbbb
push
aam
inc
lock
scas
add
pop
popa
and
shrl
jnp
fldt
shlb
ja
mov
fidivrl
sti
sbb
sub
pusha
add
mov
ja
shll
mull
cwtl
xlat
push
mov
jecxz
pop
inc
or
xor
movsl
cmc
push
mov
mov
test
cmp
lea
mov
or
mov
adc
jns
or
pop
adc
in
cmp
adc
adc
add
repnz
pop
mov
sbb
das
mov
pushf
loop
cmp
sub
push
in
cmpsl
sbb
test
clc
inc
cs
jb
subl
fldcw
sub
push
andl
push
mov
cs
in
fsts
sbbl
out
or
ja
int
add
or
xor
mov
cli
push
or
cmpsb
sub
and
xor
or
add
fsubr
sbb
push
sbbb
shlb
mov
push
insb
mov
cmp
push
ja
movsl
jmp
sbb
add
loop
data16
xchg
jns
add
es
xchg
orb
inc
inc
or
ss
jle
mov
hlt
push
pop
rolb
sub
dec
push
inc
pop
mov
cmp
push
mov
sub
out
call
mov
push
push
add
inc
pcmpgtw
mov
xchg
jg
out
out
mov
jo
imul
lds
hlt
jle
fisubrl
insb
clc
sub
jnp
cs
adc
shll
ret
adc
fdivl
mov
fimuls
insl
jg
ja
ss
je
loopne
lock
cld
jnp
jle
sub
cmpsl
arpl
insb
mov
inc
lods
stos
or
xor
lods
imul
and
inc
fisttpl
cli
orb
sbb
jp
mov
aad
js
fs
in
cmp
mov
adc
adc
or
jle
dec
inc
and
dec
xchg
rclw
test
mov
adc
dec
and
insl
xchg
lods
call
xchg
push
cli
xchg
ja
out
roll
inc
sbb
pop
aam
addr16
lcall
sbb
xchg
aam
inc
mov
cmp
sub
shrl
sarw
mov
sti
pop
xor
in
loopne
mov
add
jno
push
iret
rcrb
lret
and
sub
imull
popf
adc
hlt
sti
xchg
add
mulb
inc
cmp
shr
hlt
ss
in
nop
pop
insl
add
xchg
add
and
in
sti
test
dec
jae
jno
push
daa
mov
pop
std
das
cmp
enter
mov
fdivs
adc
sarb
mov
cmp
es
shrb
push
aad
notl
inc
or
cmp
in
sbb
inc
mov
data16
das
or
or
movsb
imul
adc
sub
cmpsb
mov
imul
add
inc
mov
loopne
lret
push
sub
sahf
mov
iret
jno
add
nop
mov
mov
mov
mull
aam
inc
mov
jnp
push
ror
int
jae
test
aas
or
test
insb
adc
imul
cli
pop
push
pop
cmp
pop
push
lea
xorl
push
or
cltd
sub
mov
iret
outsb
shlb
mov
xor
or
adc
aam
mov
sti
add
and
dec
lahf
add
mov
pop
loopne
mov
fisubrl
sub
add
out
and
orps
dec
inc
out
sbb
pushf
addr16
rorl
imul
fstps
inc
mov
mov
push
sahf
addr16
ds
xchg
xchg
shl
mov
or
fildll
mov
and
push
dec
and
sub
mov
sti
jp
and
in
shrl
push
mov
data16
sub
into
jge
adc
or
notb
mov
inc
fdivrs
sti
movsb
cmpsb
cmp
daa
js
pop
adc
icebp
data16
pusha
xchg
stos
movb
repz
pop
adcl
adc
mov
pop
sub
sahf
incl
inc
add
push
or
ljmp
mov
sbb
cmp
jg
mov
sbb
or
adc
fidivs
mov
inc
sub
or
and
test
xchg
stos
inc
out
popf
xchg
push
sbb
andb
int3
and
push
popf
sbb
int3
mov
sbb
push
imulb
cmpsl
pop
imul
mov
out
add
jbe
inc
int
push
cmovge
xor
adc
push
andl
cs
adc
clc
je
push
push
adc
mov
adc
cmp
mov
pop
lcall
ja
int3
test
aam
push
sbbl
push
adc
jl
scas
mov
loopne
push
inc
sbb
aam
es
mov
sub
leave
adc
out
jle
push
loop
dec
jbe
sub
and
ret
addr16
add
loop
jl
fbstp
lock
iret
jecxz
pushf
pop
mov
mov
push
std
xchg
mov
gs
cmp
repz
jl
cmp
test
push
inc
and
lea
mov
inc
ficoml
cmc
mov
stos
add
push
call
pop
lds
fdivr
mov
dec
dec
arpl
and
xor
insl
cmp
mov
jmp
in
pushl
sbbb
xchg
inc
scas
lods
xchg
sbb
jae
mov
mov
sbb
dec
adc
stc
xchg
xor
jo
loope
sub
xchg
dec
test
mov
mov
pop
xor
dec
pop
xor
cmc
enter
pop
data16
and
and
ror
or
xchg
inc
and
adc
sbb
ja
fistpll
pop
mov
pop
xchg
in
mov
pmaxsw
fidivl
xor
cmpsl
mov
xchg
xrstor
add
mov
cld
fs
inc
pop
adc
shll
in
incb
or
mov
xchg
add
jo
aad
sti
fs
mov
pop
sbb
pop
mov
sub
lcall
leave
hlt
ljmp
mov
push
cmpsb
sbb
xchg
outsb
jp
mov
dec
cmpsb
sub
sub
mov
out
cmpsb
sbb
inc
pmulhw
stc
test
out
sub
les
ljmp
or
sub
ror
in
test
mov
cmp
pop
in
movsb
aaa
cmp
notb
mov
bound
mov
lret
in
enter
pop
scas
lods
jb
push
mov
dec
mov
xchg
mov
mov
pop
rclb
jne
xor
xchg
pushf
imul
ror
das
add
push
neg
mov
imull
or
pop
xor
add
xor
xchg
cmp
pop
scas
cmp
xchg
sub
sbb
mov
cmp
xchg
stos
ret
push
in
or
repz
push
xchg
insb
das
sub
mov
jb
daa
les
xor
cmp
inc
inc
pop
xor
addr16
jmp
jns
mov
mov
xor
jecxz
popa
sbb
dec
orb
inc
mov
int3
lahf
leave
lods
fldenv
pop
aaa
insl
ror
popa
add
dec
dec
ljmp
loope
int3
push
cmc
mov
test
in
mov
cmp
aam
jnp
jg
inc
adc
jmp
lret
mov
xor
sarl
cmp
sub
mov
into
nop
push
shlb
mov
adc
jp
xor
fldl
sub
in
pushf
push
daa
or
jmp
mov
add
jae
je
clc
sbb
xchg
lahf
push
sbb
mov
add
rcl
xlat
je
mov
notb
xchg
mov
push
inc
mov
sbb
insb
pop
inc
arpl
mov
lods
in
movsl
cmp
jns
jmp
rol
repz
sbbb
retw
mov
mov
cmp
mov
fiadds
aad
xchg
xor
je
adc
pop
arpl
pusha
cmc
aad
loope
out
dec
xchg
jl
dec
sub
sub
xchg
lea
into
shlb
push
fwait
mov
push
mov
shlb
xchg
xor
ret
iret
pushl
insl
daa
pop
push
mov
das
adc
sbb
inc
adcl
int
repnz
daa
cmp
sub
adc
mov
jle
and
lret
ffreep
rcll
adc
and
or
imul
sub
int3
adc
ret
xlat
sahf
cmpb
jle
dec
lock
nop
dec
sbb
pop
out
les
mov
call
movsl
adc
cmp
add
inc
fiadds
push
mov
jl
in
ds
adc
jle
mov
xchg
scas
sbbl
jne
fsubs
pop
loop
pop
and
or
adc
cmp
hlt
ret
in
jns
inc
in
lods
fs
xor
es
mov
push
jns
jns
push
xchg
or
divl
addr16
std
leave
xor
ss
sub
and
jbe
and
jae
out
xchg
mov
push
in
call
hlt
jbe
xchg
scas
pop
add
xor
pop
out
jnp
int3
inc
test
test
int
loopne
mov
jne
pop
ja
ret
test
jge
es
push
xor
xlat
icebp
jnp
mov
pop
fisubs
jns
add
xor
adc
pop
and
mov
stc
dec
push
aad
push
cli
dec
adc
pop
addr16
mov
push
cltd
lock
js
push
cmp
fs
gs
adc
push
scas
mov
xor
cmp
js
sub
adc
push
lock
in
cmp
sub
stos
ss
pop
xor
cmp
scas
jge
loope
test
jmp
and
enter
enter
daa
sbb
fsts
jne
mov
sub
popf
nop
lock
sbb
sahf
js
push
ret
rcrb
mov
xor
pushf
fistps
cmpsb
fldt
xchg
mov
mov
daa
aam
les
icebp
lahf
add
inc
dec
lods
dec
push
adc
out
jle
lahf
shrl
leave
lea
out
inc
frstor
lret
xchg
cmp
out
xor
loop
cmp
sysexit
fldcw
push
cmpsl
test
mov
ficoms
mov
xor
ss
jmp
out
inc
cmpb
scas
outsb
stos
mov
mov
scas
lods
xor
pop
popf
test
jp
adc
sub
icebp
popf
inc
xlat
into
sbb
push
inc
fidivl
loopew
jne
cmpl
push
pop
push
or
scas
xchg
sub
shll
dec
negl
cmpsb
std
pop
es
sti
jns
ret
subb
loopne
or
or
and
push
xchg
ret
punpckhbw
shr
and
lock
sbb
mov
push
test
cmc
sbb
cmp
out
push
in
mov
pop
push
adc
dec
add
sti
dec
jne
push
mov
xchg
pop
cmpsb
addr16
push
icebp
mov
in
aad
stos
inc
out
out
jle
test
into
lds
addr16
inc
inc
push
or
xchg
push
jno
sbb
test
movsb
xchg
les
nop
lahf
sub
dec
nop
dec
pop
dec
lcall
or
cli
sub
mov
inc
adc
inc
sub
lcall
rcrl
mov
pop
fsubrl
lods
rorl
xchg
shll
imulb
mov
in
in
add
sbb
cwtl
test
pop
jmp
inc
and
or
cli
pushl
push
dec
xchg
jg
ret
popa
dec
ds
roll
dec
mov
fidivl
xor
inc
xchg
cmpsb
andb
clc
and
das
fidivs
cmpsl
mov
pop
aas
nop
test
test
dec
pop
jne
mov
or
inc
add
fwait
sub
pushf
andb
push
test
ficomps
mov
xor
sbbb
dec
lods
ljmp
adc
push
lret
inc
add
sahf
stos
andb
mov
lret
popa
repz
mov
mov
xorl
xor
pop
xchg
fidivrs
popf
mov
xchg
mov
mov
xchg
sbb
out
add
or
mov
jle
and
dec
stos
nop
sub
fcmovnb
in
jbe
inc
insl
inc
pop
sub
xor
loop
enter
xor
insl
test
cmp
int
shrb
pop
pop
popf
hlt
or
in
push
pop
out
adc
push
cmp
insl
in
ja
data16
mov
pop
mov
add
mov
push
jmp
push
jb
bndstx
enter
add
push
xor
fsubrs
jecxz
fisttps
mulb
mov
push
adc
inc
pop
out
or
sub
inc
pop
shl
orb
hlt
mov
xchg
out
nop
xchg
stos
shll
xchg
repnz
pop
in
xchg
aad
mov
xchg
int
inc
bound
inc
fdivrl
loopne
dec
lea
or
jp
mov
push
outsl
mov
sub
stos
push
sub
cmpb
ret
mov
les
mov
out
add
aam
mov
add
ljmp
jne
flds
jno
int3
cmp
mov
adc
inc
push
fidivl
in
adcb
pop
jne
mov
sub
pusha
int3
jg
std
add
daa
fcmovb
add
faddl
push
test
les
pop
loope
mov
popa
jo
inc
pop
pop
mov
inc
aam
and
lods
jne
mov
fisubrl
mov
rcrb
loopne
jle
rorl
jge
cmp
inc
or
lret
rorb
subb
sbb
mov
mov
sub
or
je
bound
xchg
or
dec
repz
cmp
jp
dec
jo
jns
xchg
mov
lcall
or
mov
push
push
movsl
jbe
icebp
into
xchg
sub
sbb
dec
sub
xor
xor
outsb
aad
xor
loopne
inc
mov
xor
adc
scas
jb
aam
xchg
dec
psrad
adc
sub
sub
daa
movsl
ja
hlt
sub
scas
inc
jl
pop
sahf
add
mov
into
movsl
and
into
dec
loope
push
ret
pushf
repz
rcrb
cld
dec
scas
mov
pop
adc
cmpsl
xchg
lds
andb
cwtl
pop
or
aam
lds
out
jns
push
jo
push
push
shlb
mov
xchg
sub
imul
add
dec
iret
sbb
push
out
loope
xor
cwtl
outsb
or
das
cmp
sbb
pop
pop
mov
loop
xchg
add
inc
out
push
mov
jno
ds
jb
lahf
xchg
ds
mov
xor
stc
jmp
push
gs
cmp
mov
push
mov
icebp
mov
or
push
fwait
push
int
mov
push
int
sti
outsl
and
jl
loope
push
cltd
inc
push
add
dec
mov
adc
cmpsb
dec
pop
in
stc
ret
into
into
outsl
sti
stos
mov
pop
jmp
jbe
dec
rcl
mov
mov
hlt
call
adc
push
cltd
pop
fstpl
pop
jns
mov
fldcw
pop
mov
cmp
aaa
and
mov
leave
call
pop
repz
cwtl
je
std
jmp
andb
repnz
mov
sbb
jmp
fdivr
or
movsl
in
frstor
mov
xor
mov
adc
xorl
and
loope
push
and
mov
lea
aas
adc
fcomps
xor
mov
out
adc
stc
shl
jmp
cmp
test
loopne
xchg
jmp
jmp
aas
and
inc
fnsave
fs
fmull
lods
cltd
ret
xchg
shll
xchg
mov
testl
daa
push
pushf
out
test
movsb
sub
sbb
jecxz
mov
add
push
out
or
cld
lahf
outsb
add
addr16
and
pop
cli
xchg
nop
pop
pusha
xlat
jns
dec
pop
ret
shrl
push
xchg
dec
pop
mov
mov
push
lds
das
or
lcall
aaa
ss
clc
push
mov
das
push
movsl
pusha
iret
outsb
xor
adc
jle
xchg
fisttpll
push
add
out
and
mov
in
sub
icebp
loop
pop
dec
das
jns
frstor
inc
xchg
in
push
adc
mov
jle
adc
pushl
test
and
sbb
stos
cmp
roll
sahf
xchg
push
adc
sbb
lahf
xor
push
mov
push
es
ja
mov
jo
sbb
mov
push
pop
popa
sbb
sub
cmp
jns
adc
jp
in
pop
int
push
jbe
xchg
sub
cmp
ds
out
inc
aam
js
push
pop
lret
outsl
jge
push
pop
adc
aam
fwait
arpl
mov
lret
push
push
nop
arpl
lock
adc
jle
ja
shll
repnz
sbb
sub
add
pusha
mov
lea
ret
js
push
inc
ret
fldenv
pop
inc
dec
jmp
or
mov
mov
fdivrs
pop
jg
pop
jno
aad
cmp
pop
add
lock
and
iret
push
nop
push
mov
pop
rcrb
sarl
cmp
mov
add
xor
xlat
cltd
repnz
and
and
jge
imul
imul
push
add
in
sub
orb
lcall
loope
dec
fldenv
pop
ret
imul
or
or
jnp
sub
dec
stc
test
push
ljmp
pushf
and
mov
sub
ficompl
ret
imul
adc
mov
daa
loopne
stos
jmp
daa
and
aam
inc
addr16
in
jne
xor
inc
mov
adc
ret
xor
and
xor
jge
sbb
mulb
popf
and
push
es
mov
mov
push
xor
filds
jg
adc
out
cmp
sub
movsl
enter
pop
insl
dec
into
dec
and
arpl
dec
push
jmp
sbb
sub
inc
in
pop
mov
mov
pop
jmp
fwait
jae
call
xchg
sbb
push
mov
adc
adc
out
stos
push
repz
mov
pop
mov
out
lret
es
sub
push
cmpsl
add
and
arpl
push
adc
lahf
mov
jb
mov
fiaddl
dec
cmp
ret
mov
dec
adc
out
jmp
push
jae
add
cmc
and
cmp
outsl
sub
lcall
rcrl
daa
xchg
aad
lahf
xchg
shrl
stos
cmpsb
lods
fsubr
jb
sbb
add
dec
jae
scas
add
cmpsb
dec
cmp
fwait
push
jge
xchg
rorl
pop
mov
rolb
in
addr16
fdivs
dec
lock
adc
xchg
sub
pop
sbb
push
aam
and
dec
ss
icebp
xchg
pop
inc
dec
push
fcmovb
jbe
jns
in
jne
rcrl
mov
lock
jle
jns
inc
and
andb
sbb
imul
lock
push
adc
and
xor
xchg
push
sub
sub
rcl
push
insl
repnz
and
mov
push
jmp
mov
insl
in
or
mov
dec
outsb
push
call
ret
mov
xlat
subb
stos
mov
adc
sub
enter
dec
ds
scas
pop
xchg
loopne
pop
jnp
mov
dec
aam
popa
mov
mov
add
push
and
jae
es
mov
loopne
mov
push
enter
push
push
imulb
mov
xor
inc
lods
jp
or
aad
scas
mov
je
inc
pushf
jnp
mov
lret
sbb
fwait
arpl
mov
mov
xor
sbb
mov
sbb
rorl
jo
test
push
push
and
jmp
jno
cwtl
data16
nop
out
arpl
ss
fmuls
leave
cmp
mov
imul
rep
shll
mov
out
adcb
push
lods
push
neg
sbb
xor
xor
int
pop
fsubl
popa
cli
lods
pushf
daa
and
clc
adc
mov
in
fdivs
shrb
inc
stc
nop
je
add
in
js
mov
movsl
cmp
pop
shll
out
xor
xor
out
mov
xchg
daa
fwait
lods
cmpsl
mov
xchg
int3
movsb
push
fcomp
inc
push
sub
icebp
subl
in
int
push
mov
les
mov
sub
xchg
lds
jo
lret
lcall
bound
adcl
inc
mov
mov
fstps
cwtl
xor
push
jb
xchg
in
ret
clc
cli
xchg
sub
scas
test
jecxz
rcrl
sarb
inc
sbb
cmp
ss
push
pop
push
jno
mov
das
mov
xchg
lods
sbb
and
or
scas
test
pop
ret
jo
mov
mov
jns
repz
loope
fstl
sbb
int
scas
mov
loopne
pusha
mov
in
jns
setae
gs
cmp
lock
decl
sub
movsb
jg
jge
outsl
scas
pop
repz
test
push
mov
and
pop
xchg
dec
repz
fwait
aas
xchg
jle
shlb
sbb
jmp
mov
inc
outsb
dec
add
sbb
and
js
loop
sbb
push
aaa
pop
jno
xor
lret
pop
sti
setno
mov
pop
xchg
sub
adc
mov
fcoml
lea
pusha
lahf
daa
inc
loope
loopne
lret
imul
inc
cmp
shlb
mov
cwtl
lods
aas
push
xchg
dec
popf
scas
ljmp
mov
mov
rcl
cmp
sahf
divl
pop
fidivs
loope
inc
je
jmp
movsl
cmp
sbb
inc
pop
and
jmp
out
xor
mov
sbb
mov
mov
aad
shll
shlb
out
cmp
pusha
and
cltd
outsl
inc
in
sti
loop
and
push
das
push
mov
mov
push
mov
in
loope
call
push
mov
aaa
stos
imul
dec
outsl
popa
inc
jl
jmp
xchg
push
call
mov
jns
mov
xchg
sub
pushf
sti
aas
lcall
xchg
push
inc
and
xor
jge
subl
or
inc
mov
jmp
movsl
sahf
push
roll
push
loope
inc
mov
xchg
lods
mov
mov
xlat
pop
mov
sbb
inc
cmp
aad
fnstsw
pop
push
push
mov
cmp
iret
push
and
adc
shr
xlat
inc
sahf
icebp
push
repnz
inc
mov
out
hlt
push
mov
aaa
in
xor
cltd
mov
stos
daa
push
dec
pop
push
insb
lods
inc
out
fldenv
bswap
enter
sti
cwtl
and
cld
into
cmpsl
in
jbe
subb
test
xchg
jecxz
or
enter
jge
out
cmpsl
fistpll
rcr
out
and
inc
mov
xchg
fsts
sub
lods
push
push
cmp
scas
fildl
in
inc
mov
xorl
data16
sarb
push
pop
out
fnstsw
pop
or
cwtl
out
mov
aas
and
jne
dec
ret
push
addr16
pop
test
push
and
push
outsb
inc
add
adc
sub
iret
pop
or
xor
sub
ljmp
inc
out
xchg
sub
adc
push
xchg
dec
movsb
cmp
mov
stos
and
mov
adc
es
dec
xor
cmp
stos
ret
xor
nop
push
test
dec
rcll
jp
mov
jle
stos
leave
and
dec
in
xorb
cmpsb
inc
inc
jecxz
cmovb
mov
sub
jl
sub
in
mov
or
dec
adc
mov
adc
sub
sub
jecxz
lcall
jl
xchg
mov
inc
sub
mov
lods
pop
out
testl
shll
push
pop
insb
lock
mov
mov
mov
sti
scas
jbe
mov
pop
xchg
xchg
mov
mov
iret
sub
pop
cltd
xor
out
xor
mov
xchg
jmp
push
ret
in
cmpsl
aam
mov
cmp
jo
filds
mov
ds
mov
mov
addr16
add
daa
cmpsb
loope
mov
lret
lds
lret
push
pop
repz
and
mov
sarl
push
mov
out
pop
popf
mov
xor
mov
js
mov
dec
lret
insb
xlat
inc
mov
jo
sub
pop
popa
movsl
out
adcb
nop
push
iret
insl
sbb
rorb
jg
pop
mov
dec
fwait
mov
jle
pushl
aad
or
hlt
scas
mov
ljmp
pop
testl
or
notl
outsl
lahf
mov
test
lret
sti
sbb
loope
fdivrs
and
xacquire
ret
cld
jle
inc
pusha
in
dec
rcr
sub
jge
sub
inc
mov
xchg
sub
mov
adc
sbbb
shl
adc
out
loopne
cwtl
cmp
int
mov
mov
lods
mov
fnstcw
scas
xchg
das
cmp
aaa
dec
xor
jbe,pn
cmp
insl
insb
jle
pop
xchg
loope
jae
xchg
stos
ds
push
jne
imul
insl
test
out
adc
mov
mov
loope
ficompl
rorl
fbld
loop
push
idivb
or
movsb
jecxz
xchg
or
insb
test
dec
mov
pop
js
mov
sbb
cmp
pop
xchg
orl
mov
xchg
movsl
mov
aad
inc
movsl
xchg
push
sbb
or
push
stos
fisttps
daa
cli
add
adc
mov
jb
and
in
push
jno
cmp
sub
sbb
sbb
je
mov
scas
mov
sub
out
and
jg
outsl
lods
sub
rol
xor
or
mov
jg
sbb
xchg
adc
mov
jg
mov
inc
dec
mov
mov
mov
out
lods
mov
pop
jbe
add
xor
bound
out
imul
outsl
dec
sub
outsb
lods
aaa
leave
pusha
in
call
inc
outsb
cmpsl
out
xor
xchg
inc
aam
addl
popa
lahf
scas
jne
mov
out
sbb
out
sti
mov
loope
fnstenv
sub
shr
cmp
shlb
enter
int
lea
or
ror
push
jno
repnz
mov
jbe
inc
adc
call
fstl
inc
pop
mov
push
ljmp
mov
fidivs
push
test
ret
mov
mov
aam
mov
xchg
sbbb
mov
addr16
adc
inc
push
sti
push
mov
je
stos
es
lods
lea
mov
adc
leave
push
cmp
push
mov
and
pop
mov
or
pusha
enter
push
insb
sub
xchg
jle
test
aad
jl
filds
xor
inc
inc
jno
movsb
int
mov
adc
dec
fdivrs
dec
pop
cli
pushf
into
xor
xor
inc
test
xor
xor
adc
mov
ret
ret
loop
out
loope
sub
lret
ds
jp
cld
xchg
push
ficoml
push
and
lret
subl
in
test
xchg
das
icebp
or
sahf
push
lea
xchg
scas
rorb
fildll
sbb
sub
cmp
mov
aas
adc
ja
jno
dec
mov
inc
popf
xor
rorl
lcall
xor
xchg
lret
dec
mov
push
dec
cltd
test
in
sub
test
stos
in
dec
bound
pop
lcall
cmp
test
mov
lret
fs
stos
cmp
push
mov
mov
sub
adc
cmp
jnp
mov
inc
mov
adcl
pop
repz
xchg
pop
xor
pop
mov
stc
add
sbb
in
mov
fbld
bound
sbb
dec
movsb
dec
fadd
inc
inc
orb
dec
scas
push
in
insb
mov
mov
pop
dec
xchg
add
mov
sub
dec
sbb
dec
dec
sti
jbe
in
adc
xor
or
scas
mov
dec
imull
sub
mov
sub
dec
mov
mov
push
dec
pop
icebp
jl
js
shll
mov
jb,pn
adc
into
jne
ds
jns
pop
test
fsts
adc
mov
cmp
jnp
add
rcll
cs
sbb
mov
mov
xor
inc
pop
push
arpl
xchg
lods
cmp
arpl
mov
mov
sbb
mov
sbb
inc
or
vcmpngtsd
mov
adc
mov
iret
mov
arpl
pop
mov
loopne
lock
sub
call
lock
xchg
pop
ds
rorl
push
pop
or
aaa
add
dec
or
mov
mov
sub
cs
sbb
jnp
das
cmp
js
cmp
pop
pop
rclb
popa
add
daa
iret
or
icebp
int
pop
insl
jecxz
repnz
xchg
jae
addr16
cltd
lods
fisubrs
push
mov
xchg
pop
shrb
insl
xchg
cmc
adc
addr16
nop
pop
mov
fwait
push
ja
mov
scas
lods
out
inc
pop
jb
arpl
imul
adc
ss
mov
aad
xchg
sub
xchg
sub
mov
gs
xchg
mov
xchg
jb
adc
and
mov
inc
cmpsl
adc
repz
cwtl
jae
lcall
ja
sar
mov
add
ret
or
jns
adc
mov
push
and
mov
daa
mov
cld
mov
clc
pushf
fcoms
enter
in
out
sti
push
cmp
xor
inc
add
sar
push
and
cltd
sub
aas
mov
in
sbb
cmpb
lds
cwtl
stos
icebp
repnz
xchg
out
sti
idivb
shrb
fs
pop
jb
sub
pop
inc
xchg
sub
jo
xchg
add
mov
adc
mov
adc
pusha
xchg
cmpsb
out
push
stos
sbbb
cltd
out
insb
add
jle
imul
cmp
repz
divl
sub
inc
ljmp
out
test
and
or
gs
jb
jns
jne
and
loop
lea
mov
add
js
cmpsl
jbe
int
ss
adc
mov
add
mov
popf
mov
lret
sti
into
adc
or
ljmp
test
negb
mov
jo
mov
xchg
out
push
jne
das
sbb
aad
cld
dec
pop
out
call
or
sub
pushf
ss
dec
ret
rcll
mov
ret
add
xchg
insb
jo
cmp
or
insb
jle
mov
xchg
pop
jns
xor
jg
add
adc
out
dec
jecxz
andb
sbb
pop
adc
das
pop
loopne
ljmp
inc
stos
xor
lds
test
pop
fsubrs
icebp
sahf
lds
mov
fs
xchg
in
xor
xor
mov
pop
in
dec
cmc
inc
scas
bound
xchg
rcll
mov
stos
scas
lods
cmc
cmp
add
add
sahf
xor
movsl
aas
mov
rorl
xor
pushf
or
mov
jle
ss
fmulp
cbtw
pop
aam
jbe
in
pusha
aas
push
insl
push
pusha
xor
push
mov
aad
xor
roll
mov
pop
mov
rorl
jle
js
mov
push
dec
inc
xchg
movb
cmp
sbb
dec
push
ja
sub
repz
stos
sahf
push
test
arpl
into
jns
jne
enter
aaa
cld
outsl
inc
push
adcl
and
dec
out
xchg
mov
fisttpl
push
pop
and
insb
mov
fistpl
je
mov
xchg
pop
push
push
insl
jmp
fldenv
rcrl
loop
xor
test
adc
xchg
and
dec
or
dec
cmp
lea
cmc
pop
outsb
pop
sbb
cmp
rorb
lcall
push
insb
cmpl
push
fisttps
push
shlb
shr
rcl
add
out
stc
fcoms
sub
push
sbb
jmp
sbb
and
ljmp
lahf
jle
dec
mov
popf
cmp
in
cmp
jle
jp
lahf
stos
dec
add
xchg
xlat
out
pop
sbb
sub
dec
lret
and
sub
fiaddl
cmpsb
jge
filds
aad
cmpl
mov
imul
xchg
adc
pusha
negl
ret
aam
rcll
insb
jle
iret
fsubrs
cmpsl
inc
fs
mov
inc
int
cmp
cmpsb
cwtl
mov
or
leave
pusha
jmp
repz
iret
negb
mov
pop
push
nop
in
mov
sti
add
dec
lahf
push
pop
es
pop
jo
mov
int
mov
or
xchg
jge
dec
dec
sbb
scas
rcr
and
sub
sbb
pop
mov
dec
pusha
not
add
out
xor
push
xchg
push
scas
xor
mov
std
push
add
dec
data16
jge
sub
add
cmp
cmp
lret
jg
addb
xchg
pop
les
lcall
push
sub
or
filds
ret
jnp
jns
in
xchg
push
in
push
push
popf
arpl
ljmp
testb
add
mov
xchg
xor
shl
adc
in
pop
dec
sti
push
jae
in
fldenv
pusha
enter
je
sub
arpl
ljmpw
jns
push
testl
jmp
insb
sbb
sahf
pusha
popf
push
repz
cmpsb
ljmp
dec
mov
scas
sahf
shll
mov
jbe
cmp
xlat
push
aad
enter
add
loopne
mov
mov
les
out
scas
insl
cwtl
and
in
xor
add
imulb
aam
add
lods
jae
inc
pop
adc
jle
push
test
mov
mov
mov
add
mov
adc
pop
push
inc
test
dec
nop
inc
cld
cmc
and
test
insl
pop
xchg
or
cmc
push
inc
lods
sti
push
push
mov
inc
jl
fsts
jo
fdivr
imul
out
xor
lret
jmp
iret
nop
test
jb
in
xchg
adc
out
pop
sbb
or
mov
gs
xchg
xor
push
leave
into
icebp
or
mov
jnp
xchg
add
mov
js,pt
pop
dec
mov
loop
or
mov
dec
push
xor
cmp
pop
mov
cmpsl
mov
push
js
fcmovnb
cltd
nop
add
sbb
lea
and
aad
aas
loop
cmpsb
xor
dec
cmp
xchg
pushf
cli
lcall
call
inc
sub
pop
popa
pop
mov
hlt
dec
icebp
add
ret
pop
sub
hlt
adc
cmp
push
cwtl
loop
nop
dec
test
jecxz
sub
icebp
adc
dec
into
mov
cmp
pop
push
mov
xlat
mov
inc
mov
or
sbb
xor
pop
loope
iret
jo
movsb
sub
or
jecxz
daa
cmp
icebp
jmp
xchg
add
shl
js
pusha
push
mov
pop
dec
jecxz
repnz
daa
fisubrl
mov
or
push
in
sub
std
pop
push
push
mov
xchg
xchg
pop
or
sbb
sbb
movsb
or
xchg
cmp
dec
loopne
xchg
orl
mov
loopne
sbb
jmp
adc
push
jbe
imul
mov
mov
jle
push
mov
inc
pusha
push
mov
lods
mov
mov
jl
or
jb
dec
mov
into
jne
xor
stos
mov
sub
add
push
mov
jge
pusha
jo
dec
pop
idivb
test
cmp
shrb
int
mov
or
xchg
pop
push
jbe
mov
std
xchg
fstpt
pop
in
notl
xchg
cmp
jcxz,pn
cltd
dec
pop
push
cmp
cwtl
mov
fidivs
push
out
inc
or
fwait
and
sbb
clc
or
or
jle
cli
xchg
xchg
or
pushf
popf
sbb
repz
jns
or
ret
sub
inc
or
adc
sub
xor
pop
rorl
loope
fsubr
mov
testb
mov
xor
fnsave
aad
fldl
es
je
bound
ret
in
cmp
repnz
shrl
jg
pop
mov
push
imul
inc
stc
test
pop
cmp
dec
adc
xchg
mov
push
aaa
xor
mov
jmp
xor
inc
arpl
mov
or
mov
push
push
push
lea
rol
and
xchg
pop
mov
into
mov
iret
outsl
or
shlb
pop
or
cmp
in
cmpsb
dec
jno
lret
and
mov
roll
es
jmp
and
pop
inc
lea
adc
jge
inc
setb
adc
push
add
cwtl
mov
jg
popa
mov
lds
and
addr16
mov
add
xchg
imul
js
mov
jp
or
arpl
repz
lods
mov
xlat
xchg
sub
add
fldt
jae
adc
adc
ja
lret
push
mov
test
push
sbb
repnz
stos
inc
cmpsb
pusha
adc
inc
xchg
shlb
test
arpl
mov
sbb
dec
push
and
cld
dec
mov
mov
inc
popa
and
lcall
mov
mov
incb
movl
cmp
icebp
inc
iret
gs
add
xor
ljmp
popa
pusha
dec
lahf
sbb
dec
mov
jb
or
movsb
setnp
pop
add
je
xchg
xchg
lahf
lret
jae
sub
push
scas
lods
xor
inc
in
sub
inc
cmp
or
mov
enter
shll
push
test
adc
or
sti
inc
loope
sbb
aad
shrb
cmpsb
imul
pop
jg
in
enter
pop
sub
enter
test
dec
pop
fimuls
rcr
jbe
inc
bound
cli
stos
jnp
xor
movsl
jmp
xlat
mov
movb
sbb
lcall
testl
pop
outsl
neg
incb
xor
cli
mov
movd
insb
mov
and
or
dec
jnp
fadd
cwtl
pop
shlb
cli
fnstenv
push
test
leave
pop
adc
jecxz
dec
loop
add
sub
imull
imul
add
imul
dec
movsl
icebp
sub
sbb
mov
lahf
ss
jno
lods
mov
push
daa
outsl
insb
cmp
pop
mov
jecxz
push
or
les
imul
pop
mov
aas
call
cs
shrl
push
das
cld
dec
mov
jge
dec
sub
xchg
xchg
repz
inc
push
les
inc
divb
ss
in
jno
mov
outsl
pusha
outsl
daa
rorb
mov
mov
ficoml
dec
out
jbe
lods
push
mov
or
and
dec
sahf
jbe
mov
stos
out
add
adc
es
inc
jle
mov
mov
adcl
mov
repnz
mov
or
xor
add
pushf
adc
mov
movsb
fs
xchg
roll
comiss
mov
or
jne
fwait
das
sbb
add
out
add
mov
test
push
dec
pop
and
lods
push
test
sbb
sti
adc
cli
xchg
mov
les
mov
pop
into
daa
aaa
add
add
into
xor
push
test
inc
int3
bound
in
ret
mov
mov
jecxz
mov
sub
jnp
and
mov
jno
out
xchg
scas
movsl
mov
jae
push
inc
mov
xchg
daa
adc
aaa
scas
inc
out
xor
push
loope
push
out
add
ljmp
idivb
test
test
aam
add
dec
test
adc
loopne
popa
fisubs
subl
sbb
popf
icebp
xor
adc
mov
cmp
nop
mov
cmp
or
jb
fists
xchg
and
data16
stos
inc
dec
pop
mov
aaa
out
adc
movsl
sbb
jge
popf
inc
insl
mov
ljmp
ss
cltd
pop
arpl
in
pushf
fs
inc
out
xchg
jnp
or
sbb
xchg
sub
mov
andl
push
scas
fmuls
test
adc
aaa
dec
and
movb
int
sar
jo
lods
pop
adc
mov
and
lods
popa
jmp
mov
inc
rcr
jne
jecxz
dec
cmpb
and
imul
or
scas
sub
mov
and
dec
loop
cltd
sub
out
jnp
inc
lds
dec
jns
fldl2t
adc
mov
and
add
cmpsl
push
das
iret
fstps
int3
xor
sahf
sbb
decl
inc
rolb
push
pop
mov
pop
imul
mov
ljmp
or
fcomps
inc
nop
clc
jbe
sbb
scas
sar
fdivr
fs
das
stos
jae
xchg
xor
sbb
and
dec
jp
dec
test
cmp
jp
lcall
and
cmp
mov
cltd
mov
cltd
xor
lock
cwtl
mov
ss
mov
ja
lods
xor
test
jnp
pop
sahf
lret
inc
or
and
xchg
cmp
cmpsb
cmp
jns
add
mov
sub
push
inc
les
inc
aam
lahf
stos
mov
test
or
push
popa
repnz
push
xor
gs
cmpb
or
mov
sbb
addr16
jge
adc
idivl
imul
mov
lods
into
cmp
arpl
ja
nop
or
enter
cmp
inc
inc
cmc
mov
rolb
ror
lret
and
adc
cmp
mov
adc
mov
pop
hlt
push
notb
js
movl
mov
in
int
outsb
iret
mov
stos
inc
aas
mov
stos
fs
pop
sahf
aam
cld
add
jbe
xchg
xchg
xchg
loope
rcl
dec
pop
sub
cmc
or
fs
lods
in
dec
fdivrl
nop
das
mov
fistl
rol
inc
negb
sbb
jae
sarb
push
arpl
nop
sbb
leave
in
cmp
imull
pop
mov
fisttpl
mov
das
stos
pusha
sub
iret
bound
add
mov
fcmove
addb
or
cmpsl
fisubs
mov
loop
inc
jmp
pop
insl
jge
pop
xchg
fmuls
lahf
rolb
js
dec
fstpl
push
test
sub
stos
es
enter
ljmp
fidivrs
outsb
fwait
xchg
sbb
ja
add
into
jge
bndldx
adc
sbb
cld
das
arpl
xchg
push
adc
push
out
lods
inc
and
imul
xlat
jecxz
sahf
aam
fwait
xor
jae
cmc
daa
push
mov
popf
and
pop
dec
push
xchg
pop
push
cwtl
jge
xchg
ljmp
push
or
ret
cld
sbb
ret
sbb
and
xor
xchg
mov
lcall
push
loopne
mov
enter
xchg
call
nop
daa
in
out
bound
dec
cli
jge
fsubs
xchg
adc
lcall
mov
lea
mov
cmpb
fisubrs
or
inc
lcall
push
mov
xchg
mov
mov
shrl
pop
adc
gs
xchg
pop
stos
lret
or
sub
stos
das
mov
xor
push
mov
jnp
mov
and
push
jne
ljmp
int3
add
lret
and
das
add
mov
js
rclb
xchg
push
aam
xor
stos
pushf
out
pop
bound
mov
gs
imul
push
jmp
sbb
movsb
addr16
cld
mov
and
push
push
mov
movsb
xor
add
and
loope
or
sub
stos
inc
xchg
mov
enter
dec
add
test
mov
test
call
cmp
adc
cmp
xor
mov
push
pop
fnstcw
aas
lds
pop
paddd
add
aaa
fsubrl
ljmp
call
xchg
fdiv
out
imul
xor
pop
aam
in
mov
fbstp
jnp
push
icebp
cmp
jp
out
pop
out
pop
add
pop
xor
pusha
mov
cld
pop
or
loopne
cmp
mov
js
add
aam
arpl
int3
lcall
xchg
imul
jno
loope
popa
fidivrs
xchg
pusha
xor
xor
rolb
mov
test
lret
xor
in
inc
sbb
ret
sub
mov
mov
ds
inc
jl
cwtl
outsl
repz
dec
jns
xlat
jno
jmp
adc
dec
pop
adc
cmp
mov
mov
inc
and
dec
or
repnz
push
jno
enter
mov
clc
and
cli
int3
xchg
jo
and
inc
pop
lods
cmp
mov
cmp
xor
mov
mov
data16
or
test
ficompl
push
inc
xchg
jecxz
enter
fcomp
add
xor
pop
cmp
mov
daa
push
mov
dec
jp
call
xchg
dec
outsl
dec
shr
mov
sbb
sbb
push
xchg
sub
mov
mov
jmp
mov
inc
mov
test
and
jae
mov
das
xchg
mov
pusha
ss
inc
test
fnstsw
xor
arpl
xor
xchg
inc
in
stos
daa
int
pop
hlt
divl
jnp
xchg
ficomps
outsb
lcall
sbb
sub
add
mov
xor
inc
or
lods
adc
jne
mov
push
je
xchg
into
ds
nop
add
push
in
stos
pop
jecxz
mov
popf
xchg
inc
cmp
outsb
adc
push
hlt
mov
add
sbb
and
aas
push
and
xchg
std
jbe
cmpsl
cmpsl
sbb
sbb
pop
inc
pop
add
es
out
or
dec
jb
sub
xchg
rorl
lods
and
ja
mov
sbb
dec
push
or
imull
sub
int3
fs
sub
xchg
jmp
enter
jge
xchg
movsb
and
ret
fwait
add
outsb
inc
movsb
jg
push
pop
add
sub
das
push
jle
std
scas
out
pop
add
push
hlt
cmp
jecxz
fstps
stos
mov
popa
cltd
mov
pop
mov
mov
xor
iret
mov
lret
jl
test
xchg
xlat
data16
or
std
lods
push
imul
lds
outsb
sbb
sbb
lds
xchg
pop
cmc
xor
add
cmp
lock
shrl
int
jae
outsb
out
xchg
ret
nop
sti
xchg
add
sbbb
movsl
cmpsb
lock
lahf
lcall
bound
mov
or
cmc
jle
out
fwait
fs
rorb
insb
orb
orl
mov
and
cmpsl
pop
movsl
fs
adc
loopne
fildll
addr16
xor
arpl
jmp
xor
fidivl
lret
add
sti
and
jns
xchg
jns
push
pop
xchg
adc
add
aaa
loope
push
pushf
lret
inc
pop
scas
loope
jmp
enter
gs
inc
in
outsl
and
nop
js
fsubrs
push
jge
stc
scas
jae
out
lods
jns
adc
mov
xor
jnp
inc
xor
pop
xlat
jb
mov
icebp
xor
icebp
xchg
mov
sbb
cmpsb
sub
pop
enter
daa
gs
cltd
adc
pop
mov
insl
push
push
xor
lock
sub
shrl
stc
je
jnp
mov
mov
sbb
outsb
mov
mov
jle
addr16
aaa
dec
add
and
dec
mov
mov
or
push
ljmp
call
loopne
xlat
stos
sub
ljmp
cmp
dec
inc
push
push
push
sub
jb
lret
pop
adc
mov
cwtl
cmc
cli
shlb
sub
daa
mov
sub
jl
scas
dec
cwtl
cmp
xchg
es
xchg
cld
push
dec
test
lret
dec
inc
pop
hlt
push
ja
xchg
in
shll
in
lret
xchg
dec
and
xchg
sub
lds
xor
stc
or
jle
imul
sbb
cmp
mov
fcmove
xlat
adc
negl
cmp
sub
xor
outsl
aas
pop
dec
push
insb
test
mov
add
jmp
sarb
or
dec
mov
stc
adc
sbb
dec
sbb
sub
hlt
push
mov
mov
push
call
imul
jns
adc
jl
into
stc
test
jle
mov
ds
popf
adc
cs
dec
jmp
add
daa
add
or
cmp
in
test
test
stos
mov
je
mov
outsl
shll
pop
or
repnz
shll
sub
mov
popa
int
lock
test
int3
mov
mov
pop
cmp
bound
ja
cwtl
shrl
lret
adc
mov
jle
dec
int
js
jl
mov
push
imul
adc
dec
cli
gs
add
call
aas
mov
lahf
push
sbb
mov
cli
and
ljmp
repz
xchg
push
ss
mov
aas
dec
arpl
cltd
fwait
push
dec
loop
jl
mov
cmp
sub
xor
fstl
into
jne
jne
or
cmp
in
cmpl
fsubrs
push
hlt
bound
gs
lcall
pop
std
aas
out
lock
dec
rcrl
js
mov
push
mov
dec
xchg
repnz
mov
xor
les
and
pop
xlat
clc
in
out
jnp
repz
xchg
dec
daa
mov
iret
ret
mov
and
rcll
mov
mov
jno
orb
mov
xchg
xor
clc
imul
sbb
into
out
shll
aad
ljmp
pop
data16
daa
xchg
jnp,pn
stos
mov
xchg
add
call
cld
mov
arpl
mov
ljmp
jae
test
into
cld
xchg
rcl
mov
clc
mov
ret
int3
mov
mov
popf
rclb
mov
and
iret
mov
sub
jns
stos
stos
and
push
popf
and
push
xchg
xor
jne
mov
push
subl
clc
rclb
je
ficomps
adc
pusha
mov
lock
js
fnsave
movsl
dec
cli
mov
inc
push
push
test
and
stos
fldenv
sub
std
mov
mov
jge
pop
push
jo
mov
jl
stos
cmpsb
fwait
sbb
insb
push
pop
pushf
xchg
and
je
movsb
stos
inc
cwtl
in
dec
cmp
jno
inc
movsb
out
push
lcall
cli
mov
outsb
add
fsubrs
mov
cli
ljmp
mov
into
push
cmpsl
imul
cli
push
fisttpll
sub
inc
sbb
xor
int
or
and
dec
sbb
lock
jge
js
jns
stos
icebp
sahf
sarb
gs
xchg
repnz
sbb
cmp
clc
mov
dec
adc
pop
dec
into
xor
jo
or
std
mov
mov
lahf
stc
fcompl
pop
ret
adc
jl
sub
je
imul
insl
int3
push
addr16
pop
std
shrb
dec
mov
movsl
adc
daa
fiadds
cmpsb
data16
test
mov
popf
or
lret
lahf
jg
rcrl
sub
jl
je
mov
out
out
cwtl
pop
movsb
scas
mov
and
std
pop
dec
sarl
int
inc
into
pop
dec
jns
arpl
cmp
into
and
cmp
lods
stos
sbb
or
test
lret
inc
hlt
inc
push
cmp
sbb
jo
mov
cmpsb
loope
cmpb
fimuls
movsb
cmp
cmp
adc
sbb
mov
out
fsubs
into
inc
into
decl
or
or
mov
les
xor
mov
arpl
mov
popl
clc
nop
pop
mov
stos
in
pop
scas
add
mov
pushf
and
loopne
int3
repz
mov
sti
ret
repz
push
dec
aam
jb
out
stc
sbb
subb
xchg
xchg
jle
push
pop
dec
sbb
xchg
mov
test
in
mov
icebp
fisttps
jns
mov
xchg
movsb
inc
ds
sbb
mov
jmp
add
sbb
adc
bound
lahf
test
pop
cmc
je
es
xchg
test
stc
mov
aad
xor
clc
push
inc
xchg
dec
stos
loopne
jmp
pop
dec
gs
inc
sbb
dec
cmp
add
popf
decl
out
jecxz
out
out
es
std
jmp
mov
scas
mov
jmp
sub
dec
sti
mov
sbb
adc
pop
ret
pop
mov
sub
cs
loopne
popf
mov
aaa
lret
bound
cmc
shrl
frstor
add
cltd
sbb
enter
scas
dec
inc
push
jb
push
lret
dec
mov
js
enter
test
popa
inc
adc
nop
mov
dec
rol
fsubs
sub
minps
xchg
push
ffree
jle
hlt
add
xor
xlat
adc
push
in
mov
icebp
or
mov
enter
dec
push
cmp
out
sbb
dec
jo
ds
or
or
das
mov
mov
sbb
fmull
push
sub
sarb
xchg
pop
or
sahf
test
out
shll
fcompl
cmp
pop
and
sbb
int3
arpl
aam
ret
insl
add
test
rclb
fstpt
pop
dec
push
jmp
jo
pop
mov
testb
jmp
mov
mov
mov
jp
test
outsl
stc
pop
cmc
adc
xor
adc
scas
push
push
out
je
mov
and
jb
pusha
and
imul
ja
stos
jmp
inc
pop
jo
out
shl
fisttpll
aam
sub
dec
xor
test
push
pop
pop
pop
pop
movsb
mov
sub
mov
add
cmpsb
sub
dec
sub
ficoms
mov
xchg
insl
out
cmp
and
or
fwait
mov
cld
dec
test
idiv
leave
fsubl
jp
sub
jns
mov
pop
mov
aad
aas
lea
pop
pushf
cmp
fildl
popf
sub
imul
jle
push
dec
movsb
cmp
fwait
mov
mov
sbb
mov
ret
sub
ret
pop
sbb
cmp
pop
jge
sbb
mov
daa
stc
cmp
inc
cmpsb
lock
ja
xchg
test
pop
and
je
adc
gs
xchg
push
cld
xor
add
ja
shl
hlt
mov
movsl
test
pushf
adc
into
inc
rclb
fsubl
mov
sub
mov
gs
stos
xor
push
push
repz
or
push
add
or
pop
cmpl
mov
lahf
mov
jne
cmp
adc
or
scas
pop
inc
dec
adc
outsb
jl
hlt
sub
adc
shr
pop
out
scas
adc
jbe
add
xchg
fidivrs
loop
mov
dec
pop
add
and
and
xor
cmp
mov
xor
mov
add
shll
lock
scas
cld
inc
push
andl
or
andb
addr16
jg
sub
lods
jmp
push
ljmp
pop
mov
pop
jb
xchg
sub
aas
dec
mov
inc
mov
pop
rcll
movsl
fwait
xchg
push
shlb
inc
lock
sbb
cmp
mov
arpl
push
in
xchg
xor
xchg
data16
mov
jne
xor
cvtpi2ps
push
dec
ljmp
push
out
inc
mov
dec
mov
dec
and
notl
stos
loopne
add
sarb
je
push
mov
repz
mov
test
cmp
stc
nop
lret
aaa
andb
out
outsl
fld
pop
enter
in
sub
mov
xor
test
cmpsl
push
sbb
mov
std
mov
adc
ss
lahf
xor
jb
add
push
pop
fwait
mov
mov
mov
dec
in
push
shl
popf
dec
jecxz
sub
sbb
insb
or
add
mov
rolb
mov
mov
sbb
xor
idivl
cmp
out
and
xchg
or
jns
mov
mov
stos
jae
push
lret
sbb
add
dec
pop
adc
mov
idivb
or
lcall
and
inc
xchg
xchg
shl
dec
pop
sbb
mov
test
dec
bound
xchg
mov
cwtl
xchg
jnp
xor
fsubr
das
xchg
or
pop
sbb
test
gs
mov
cli
shll
xchg
arpl
jl
inc
mov
or
inc
jne
inc
xchg
xchg
sub
lret
sbb
dec
mov
xchg
push
sarb
repnz
enter
into
pop
sahf
enter
loop
data16
jne
add
mov
jecxz
pushl
stc
and
lahf
mov
xchg
adc
pop
out
adc
pop
cmpsb
mov
subb
lea
mov
xor
rcrb
cmp
sti
mov
push
inc
cmp
push
mov
sbb
push
shrb
mov
sbb
leave
mov
mov
jo
jbe
ficomps
sbb
pop
out
insb
inc
loop
into
in
mov
pop
or
loopne
test
clc
fmulp
fdivrl
leave
cmp
mov
in
jno
lods
adcb
add
dec
cmp
enter
push
pop
pop
dec
pop
orl
mov
lret
addr16
adc
push
add
gs
sahf
outsl
adc
ss
scas
sub
popf
or
sbb
xchg
sbb
push
gs
pop
lahf
inc
mov
fwait
xor
nop
mov
fiaddl
test
scas
popf
pushf
aaa
into
int
xor
push
push
sub
out
rorb
jg
fidivrl
push
xchg
int3
arpl
xchg
mov
insb
inc
movsb
fidivs
push
sub
inc
sbb
enter
cli
mov
jb
call
or
out
mov
fnstcw
fisttpl
loop
dec
push
sbb
push
sub
fs
mov
mov
outsl
out
out
in
int
inc
int
jbe
inc
inc
cmp
inc
fldenv
fcompp
outsl
daa
push
mov
mov
mov
mov
into
jb
xlat
mov
fs
xor
subl
fucom
mov
ret
jbe
les
cmp
jg
lods
mov
pop
movsb
fisttpll
adc
leave
loop
push
sahf
fnstenv
test
js
daa
lret
inc
push
mov
xchg
pop
sbb
push
daa
cmp
add
xchg
js
inc
fdecstp
pop
in
ret
dec
pop
jno
jle
adc
enter
lret
add
add
ds
icebp
jns
sbb
xchg
lret
xor
scas
inc
sti
into
ljmp
insl
pop
repz
cmpsl
rorb
rorb
or
add
es
imul
bnd
sbb
in
repnz
imul
loopne
into
fwait
mov
scas
divl
fnstsw
les
sbbl
insl
dec
pop
and
int
sub
sbb
add
xchg
push
int
ljmp
mov
push
mov
call
repz
es
scas
jae
mov
scas
push
in
inc
cld
andl
sbb
xor
or
inc
loope
inc
lahf
sbb
pop
in
std
lret
xor
jno
mov
lret
jp
xorb
push
sti
xchg
aam
xor
test
cld
and
mov
stos
add
dec
notb
fstpl
xor
lds
add
in
jbe
arpl
dec
seto
scas
scas
sub
jae
push
in
icebp
cmp
roll
and
push
and
popa
je
mov
rcrl
icebp
mov
aad
push
sbbl
push
pusha
pop
int
mov
fistl
push
ret
xor
adc
xchg
xor
and
add
scas
mov
pushf
ret
aam
out
inc
lret
mov
std
push
push
xlat
sbb
ja,pt
dec
pusha
int3
arpl
ljmp
cld
mov
push
movsb
fisubrl
push
fcmovb
dec
dec
stos
in
aam
pop
push
sarl
add
xor
add
lock
sti
icebp
fcomp
push
or
cmp
mov
jne
sbbl
sub
pop
pop
mov
sub
push
mov
mov
dec
movsb
add
adc
cwtl
out
movsb
dec
add
nop
jnp
int3
daa
insb
pop
cltd
and
pop
clc
dec
loop
cmp
jnp
mov
iret
inc
pop
or
and
jmp
filds
lea
fistl
mov
inc
fdivl
or
loope
in
mov
xchg
jnp
lret
cmc
mov
dec
mov
push
movsl
inc
fstl
arpl
fdivrs
or
add
push
rep
sub
cmpsb
sbb
cmc
jmp
and
mov
loope
test
sub
enter
sbb
jle
cmp
mov
pusha
mov
lret
test
sub
fwait
jmp
push
sbb
loopne
and
leave
mov
mov
push
mov
loop
lcall
cmp
fsincos
js
or
cmc
fs
ja
fimull
pop
les
mov
ss
je
adc
mov
xchg
jnp
adc
sbb
push
dec
movsl
or
jae
popf
test
inc
pushf
cli
mov
and
inc
push
dec
jb
adc
popa
sahf
out
xchg
or
mov
pop
pinsrw
inc
test
jbe
inc
loope
xchg
cli
insl
lods
inc
push
sub
sbb
je
sub
add
call
test
cmp
cmp
repnz
xchg
int3
lods
cmp
mov
cmp
ds
sub
pop
cmp
jo
imul
mov
scas
adc
push
push
mov
mov
lods
and
aam
hlt
cmc
ret
mov
imul
das
lcall
fbstp
adc
sub
inc
nop
add
mov
pop
outsb
or
dec
mov
rcrb
xor
mov
xchg
lods
xchg
mov
jg
ret
lock
pop
mov
add
jle
int3
push
cld
lahf
sbb
and
in
jns
out
xchg
mov
sub
or
jge
sub
lret
adc
in
addl
je
jbe
rolb
push
aas
push
rolb
jae
icebp
leave
mov
dec
pop
ficomps
cmp
jecxz
movl
xchg
mov
xor
jp
imul
push
int3
sub
pop
insl
jmp
sahf
not
cmp
mov
and
xor
daa
push
xor
push
cli
scas
call
push
cmp
repz
mov
scas
push
xor
pop
jae
sbb
ds
xor
mov
repnz
jp
mov
shl
inc
and
das
or
fdivrs
stos
inc
sbbl
dec
lods
leave
int
pusha
lcall
dec
or
or
insl
jg
imul
popf
lods
and
mov
or
into
daa
xchg
inc
add
cld
je
inc
rclb
pop
xor
push
ljmp
jno
push
mov
add
fdivrs
push
scas
inc
dec
std
sbb
mov
pushf
mov
into
mov
mov
pop
or
inc
push
push
pushf
test
pop
jmp
xor
sbb
iret
or
fsub
xor
sub
and
mov
dec
xchg
push
and
mov
dec
xor
cmpsl
jp
cmp
xchg
call
icebp
mov
jne
pop
repz
pop
loopne
adc
mov
add
and
push
inc
nop
add
or
xor
push
jae
or
jl
in
daa
xor
push
jbe
hlt
mov
cwtl
cmp
sbb
pop
je
jl
pop
add
outsl
enter
mov
roll
xchg
cmp
movl
fnstcw
insb
adc
sbb
dec
test
out
push
mov
dec
mov
sub
sahf
mov
pop
and
push
cmc
xchg
nop
repnz
jo
pop
push
jbe
adc
dec
cmp
lret
or
test
and
fs
push
xchg
aad
imul
mov
loop
cmp
es
mov
pop
mov
test
vpcmpgtw
mov
mov
les
fstpl
shlb
ret
lods
push
std
pop
ds
pop
cltd
adcl
inc
inc
hlt
inc
push
test
repnz
lret
pop
insb
pop
fstps
cs
scas
push
pop
pushf
jl
add
adc
cltd
pop
xor
pop
add
mov
jo
jae,pn
pusha
xchg
cmc
push
dec
ja
data16
sti
add
add
mov
jg
xor
jb
sarb
lea
int3
xchg
cltd
adc
ljmp
pushf
pop
test
fucomp
push
or
cmp
es
dec
and
rclb
add
ss
push
mov
dec
out
call
and
jno
daa
xor
xchg
cmpsl
lret
inc
ror
psllw
dec
out
push
xchg
xchg
cld
dec
jbe
fimull
push
sbb
xlat
outsl
insl
adc
decl
popa
cmpsb
push
push
fwait
or
es
fwait
pop
cli
inc
xchg
sbb
adc
ficomps
ds
fs
sti
push
mov
fidivl
or
cs
andb
push
push
fnsave
shlb
xlat
ss
roll
pop
sub
pop
lret
mov
rcll
fisubrs
xor
insb
cmpsb
jo
mov
sub
mov
sub
pushf
cmp
and
outsl
test
push
cmp
pop
aad
push
dec
jge
pop
mov
mov
sub
arpl
or
mov
mov
data16
ffreep
jb
bound
fstpt
lock
xchg
call
imul
push
daa
jmp
dec
leave
jp
jg
jno
xchg
dec
cmp
sub
lock
push
in
scas
nop
push
cmp
dec
mov
push
xor
stos
add
push
mov
aaa
and
je
mov
sub
leave
lahf
adc
popf
inc
icebp
and
fldenv
bound
mov
adc
lods
xchg
mulb
lret
ds
and
mov
jle
add
cmpsl
imul
imul
ds
std
adc
dec
test
ja
loop
das
inc
in
xor
movsb
push
xchg
lret
inc
mov
stos
daa
int
jg
sbbl
stos
fstl
mov
loope
iret
ja
aam
lock
es
call
mov
cmp
sahf
xchg
mov
data16
xchg
jmp
fistpl
or
xor
scas
popf
inc
outsl
cmpsl
ret
outsb
jns
adc
subb
negb
push
mov
sub
mov
into
cmp
mov
or
or
out
xchg
int
ret
jmp
push
ficompl
mov
cld
sahf
lods
sub
or
int3
shrb
mov
sbb
or
lcall
ljmp
xchg
push
out
mov
fadds
test
jmp
mov
test
add
xchg
push
faddp
lcall
into
add
leave
into
sarb
andb
test
inc
test
xor
dec
ds
mov
clc
cmp
xor
pop
stos
mov
inc
test
cmp
stc
loop
mov
jnp
and
scas
mov
pop
dec
push
adc
inc
pop
or
sub
cmp
enter
adc
repz
jg
push
es
ret
sbb
arpl
ds
pop
repz
jbe
sub
adc
adc
jp
push
out
inc
fdivs
movsl
movsl
add
test
es
lods
sub
ffreep
cmpsb
cmc
add
pop
sbb
out
add
negb
ret
sub
ja
call
add
je
repz
push
test
lods
lcall
dec
out
int
cmp
lcall
xor
std
insb
scas
stc
sbb
lea
jno
cmc
xlat
ds
jl
rcrl
in
nop
fimull
sbb
bound
js
sbb
fsub
mov
adc
movl
sub
xchg
pop
hlt
movsb
pop
loop
sbb
jge
xlat
je
lea
cmp
or
in
es
mov
mov
pop
adc
test
mov
cmp
sub
sbb
cmp
out
ja
push
sub
subb
mov
cmpsb
pop
jp
out
js
insl
mov
cltd
jne
es
or
push
mov
jle
inc
mov
pop
push
jecxz
inc
adc
push
dec
in
push
fldcw
test
sbb
pop
out
hlt
jge
les
xor
mov
lcall
cwtl
mov
rcl
sbb
or
js
ds
outsb
mov
inc
int
lods
inc
xchg
cwtl
mov
cs
or
push
fsubrp
jno
fwait
je
inc
movsl
stc
iret
hlt
out
es
add
sbb
shlb
add
loope
loopne
dec
in
add
or
push
rorb
dec
push
lret
stos
and
xor
lret
mov
ret
inc
xor
cmpsl
xlat
je
xchg
xchg
sbb
out
jmp
dec
jg
aaa
and
gs
jbe
inc
adc
mov
dec
es
in
pop
or
push
adc
ljmp
and
cmpsb
jns
cmp
mov
cmp
pop
stos
push
fldenv
jmp
mov
ds
arpl
ret
sub
dec
pop
in
sarb
xor
fldt
push
hlt
into
aam
arpl
cs
and
and
sbb
pop
inc
lcall
and
jg
in
leave
sahf
repnz
inc
mov
lock
pusha
jne
mov
addr16
insl
outsb
inc
xchg
jmp
lea
push
pop
cld
mov
and
xchg
jo
push
pushf
cli
xchg
fs
in
cmpsb
adc
rcl
lret
scas
cld
or
inc
xchg
test
pop
sub
dec
pop
sub
test
mov
orb
pop
cmp
sub
cmp
xchg
add
cwtl
mov
cltd
inc
stc
nop
cmp
xor
cmc
and
stos
loopne
cmp
jns
imul
push
lods
push
inc
adc
in
daa
jg
cltd
sbb
dec
jle
mov
adc
dec
jbe
and
divl
cmp
jecxz
into
dec
add
pop
jb
adc
cld
add
push
cli
rcrb
sub
movsb
pop
hlt
mov
xlat
sbb
or
inc
cmp
pop
cli
sub
inc
or
and
lret
lret
nop
xor
inc
xor
adc
inc
cli
xor
imul
rcl
pop
and
sub
incb
xor
xchg
xchg
inc
popa
clc
jb
stos
lea
scas
jg
loopne
and
sub
mov
sub
movsb
cmp
rclb
sub
imul
ret
mov
mov
outsl
adc
sbb
lahf
xor
adc
mov
and
movsb
lahf
arpl
or
jnp
out
inc
int
fsubl
mov
ljmp
rcr
mov
or
push
and
loope
cwtl
jecxz
cmp
xor
arpl
sbb
push
xchg
adc
ret
mov
inc
test
and
icebp
idivb
daa
push
or
sarb
add
jo
lcall
mov
and
mov
push
int3
out
adc
cmp
xchg
dec
sbb
les
dec
cli
cltd
das
sti
mov
sub
mov
xor
jbe
jl
pusha
movsb
push
scas
out
push
movhlps
sbbl
leave
jmp
push
cmp
jmp
repnz
aam
jo
insl
add
cmp
add
cmpsb
rcrl
push
add
xor
xor
jle
ficomps
dec
and
aas
sub
xor
push
mov
push
outsl
and
shl
add
lahf
testl
ljmp
pop
out
jb
out
mov
insb
lcall
popf
and
or
cmp
in
clc
jl
movsb
xchg
push
popf
cmp
clts
je
outsl
mov
mov
sahf
xor
sbb
repnz
mov
cs
and
les
testb
cltd
data16
mov
mov
lahf
mov
mov
cmp
sarl
sub
pop
inc
mov
pop
mov
testl
js
fidivl
mov
jb
push
stc
push
dec
xchg
add
arpl
outsl
push
inc
ret
push
push
inc
push
pop
push
xor
popf
mov
lods
mov
les
ja
add
movsl
cmpsl
jns
faddl
pop
ja
inc
xlat
arpl
fprem1
or
mov
cmp
xlat
nop
rcrb
out
sbb
lret
sarl
inc
jl
add
scas
test
push
sub
mov
ficomps
jecxz
pusha
ljmp
mov
ljmp
rcrl
leave
pushf
popa
push
ss
fcmovnb
cmp
jae
cwtl
push
dec
mov
sub
mov
adc
int
popw
ja
outsb
lods
outsl
loopne
adc
cltd
sub
test
fldenv
repz
pop
insb
call
in
cmpsl
ds
xor
shlb
inc
ret
push
repz
lods
xor
jg
dec
adc
cli
xchg
mov
add
pop
push
or
lock
iret
add
fucompp
mov
test
js
push
inc
xor
cmp
add
jge
or
addr16
inc
fstpl
xor
xchg
pop
cmp
cs
or
push
lods
pushf
mov
jns
push
cmp
mov
adc
adc
and
jp
into
jne
push
gs
lds
out
xor
sbb
popf
and
popa
or
test
stos
push
adc
xor
scas
lock
fildl
arpl
add
cmpsl
test
xchg
fistps
and
jne
mov
mov
popf
aaa
js
xor
mov
not
pop
loop
mov
sub
jo
push
fs
fcomps
mov
lahf
mov
and
inc
movsb
xchg
fdivl
mov
fimull
xor
push
into
in
dec
cltd
repnz
inc
call
push
int
lea
cmpsb
cmp
scas
cmpsl
ds
and
fdivrs
test
or
inc
jle
lock
or
sbb
jnp
inc
pusha
push
ja
in
add
cli
sbb
adc
clc
xchg
xor
scas
ret
hlt
iret
mov
cltd
lock
push
lods
jmp
lea
jg
in
subl
jo
outsl
sub
stos
icebp
into
imul
fs
inc
popa
mov
cs
mov
call
cmp
add
jno
jo
push
sub
inc
push
out
xor
push
imulb
repnz
dec
adc
jo
mov
pop
cmp
lret
fstl
sub
rorl
repnz
testl
cltd
mov
lcall
cli
push
cmp
not
pushf
cmp
pushf
mov
loopne
sbb
std
movsb
mov
mov
jle
pop
and
xchg
das
cmp
in
pop
add
fdiv
inc
pop
popa
sbb
add
aaa
mov
sbb
insl
xchg
aam
mov
ljmp
pushf
or
stc
pop
lock
add
out
adc
xor
dec
push
pop
xchg
int3
push
jl
xchg
ret
pop
mov
pop
cmp
mov
loop
fucomip
sbb
out
stc
jmp
dec
pop
or
lods
aas
pop
lahf
pop
mov
test
movsb
jmp
sub
leave
int
rorl
data16
bound
sbb
mov
inc
sbb
or
ret
add
push
mov
je
sbb
es
pop
insl
stc
in
jge
daa
ret
push
test
ss
pop
pop
and
push
imul
cmp
mov
sbb
and
test
fistpll
mov
pop
jecxz
dec
in
arpl
push
aad
aas
mov
mov
jl
add
push
imul
std
push
sub
cs
or
pop
mov
das
ret
dec
dec
negl
pusha
fiadds
leave
pusha
hlt
mov
mov
mov
jp,pt
jl
or
adc
arpl
jns
or
bound
jb
mov
hlt
ljmp
fstps
mov
mov
and
pavgb
ds
mov
sub
rolb
pop
xor
and
xor
xchg
inc
push
pushf
add
mov
mov
fbld
mov
jae
imul
inc
add
divl
sbb
and
scas
pop
out
rorl
rcll
sahf
leave
mov
outsl
xchg
mov
sbb
adc
add
add
js
or
jmp
push
push
lock
push
fldt
stc
stos
inc
out
hlt
jl
sub
das
neg
and
jae
jecxz
mov
js
pop
adc
leave
fisttps
jge
mov
out
inc
inc
roll
in
xor
insl
push
push
push
std
ja
cmc
movsb
subl
dec
lahf
cmc
xor
leave
js
es
test
inc
fcompl
inc
mov
sub
xor
xchg
aad
xchg
movsb
xchg
testl
jl
fs
popf
mov
xchg
inc
sub
add
into
pop
daa
int3
and
jno
push
movsl
mov
dec
inc
lods
add
xor
mov
mov
cmc
inc
int
jle
sub
mov
sub
fistpll
scas
add
sbb
hlt
loope
repnz
ljmp
jecxz
pop
loope
dec
cmp
mov
lret
aam
xlat
cmp
fistl
outsb
jl
psubd
push
pop
mov
pushf
iret
scas
pop
std
mul
inc
pop
fbstp
inc
push
dec
loop
lock
adc
imul
sub
std
push
std
rcll
into
imul
mov
push
jno
incb
arpl
cwtl
sahf
lcall
dec
cltd
clc
imul
cmpsb
pushf
jle
dec
cmp
sub
mov
jbe
xor
cmp
hlt
iret
aaa
scas
cmp
notl
fisubrs
add
mov
cmp
add
inc
adc
fcmovne
add
das
push
cmpsl
jp
jecxz
jmp
xchg
cmp
movsb
mov
adc
cmp
sbb
dec
je
outsb
add
xchg
cmp
xor
lahf
int
dec
adc
xor
lret
dec
jp
in
push
mov
lods
jge
mov
ret
int
jmp
dec
test
call
gs
dec
shl
test
mov
mov
cmp
nop
imul
mov
pop
test
test
mov
mov
je
in
leave
xlat
push
filds
mov
in
das
int3
std
test
insb
push
clc
push
sub
xor
incb
or
xor
outsl
lret
ljmp
call
fwait
jg
repz
rorl
repz
mov
scas
iret
pusha
dec
loop
cli
shlb
and
mov
add
sub
das
ret
mov
cmp
cmp
pop
cmc
int3
mov
pop
sbb
inc
pushf
scas
and
in
adc
jge
int
add
mov
mov
cmp
jecxz
cmp
mov
pop
jns
sub
jle
mov
loope
xchg
sub
sub
adc
mov
fcmove
add
lret
jecxz
jns
rorb
mov
in
cld
lcall
cli
jne
sbbb
lret
jb
ficompl
sub
minps
fnstenv
out
push
arpl
divl
lret
or
icebp
or
cmp
shrb
adc
repz
scas
dec
ljmp
or
movsl
lcall
ja
and
pop
push
popa
jb
mov
sar
pop
aam
or
ss
xor
icebp
push
cwtl
imul
int
mov
jo
sub
mov
or
aad
jle
lret
mov
movsl
jge
and
rcrb
lods
inc
pop
lcall
pop
lds
dec
add
jb
mov
jnp
fisubs
repz
ja
lret
sbbl
imul
mov
xchg
fstp
xor
xchg
pop
dec
mov
inc
sahf
aad
loop
xchg
or
mov
out
mov
jnp
lret
in
jmp
xchg
mov
jo
and
add
inc
jmp
mov
pop
add
mov
push
push
inc
cld
pushl
cmp
call
sbb
iret
or
xchg
lock
movsl
addr16
and
push
push
push
push
push
jl
cmpsb
lock
ljmp
mov
add
clc
adcl
mov
mov
mov
mov
test
jae
outsl
mov
scas
mov
xchg
sbb
mov
jns
mov
divb
shr
fistps
or
testb
lods
dec
sub
push
sub
mov
cmpsl
addr16
idivb
aas
pop
aaa
pop
lcall
pushf
mov
leave
push
dec
mov
push
sbbl
add
test
sbb
rcr
push
dec
repnz
mov
mov
push
push
pop
xchg
aam
orl
sbb
fsub
jmp
adc
or
push
pop
sbb
cwtl
in
inc
mov
mov
in
mov
clc
jae
mov
add
push
sahf
in
mov
cmp
fwait
movsl
mov
lods
add
jbe
cmpsb
mov
int3
inc
pop
jbe
adc
jne
push
mov
repz
ds
lods
addl
adc
jb
ret
pop
dec
sbb
xor
jnp
push
xchg
inc
mov
lds
aad
sbb
inc
dec
clc
data16
pop
or
jle
imul
xchg
ret
sub
lods
inc
hlt
mov
adc
mov
out
pop
movsb
sub
cmp
loope
cmp
outsl
mov
mov
pop
repz
push
xchg
sub
push
leave
push
stc
scas
cs
cli
pop
fisttpl
xlat
cmp
xchg
fcmovu
dec
add
into
in
adc
inc
cmp
mov
pop
xchg
mov
mov
stc
dec
in
sub
xchg
mov
mov
mov
repz
int3
or
ret
dec
lock
in
outsl
ret
test
fs
imul
sub
leave
and
inc
arpl
xchg
arpl
sbb
cmp
loop
xor
repnz
scas
pop
push
jbe
lods
adc
testl
inc
add
adc
rcr
inc
pop
cwtl
hlt
push
push
dec
lret
sub
mov
loop
std
xchg
or
adc
jge
pop
mov
stc
xchg
stos
sbb
sbb
add
dec
adc
push
outsb
jecxz
leave
cld
adc
cmp
push
sbb
push
les
push
mov
add
pop
mov
das
shlb
enter
inc
repnz
fnsave
data16
add
mov
nop
jl
or
mov
mov
jecxz
cmp
mov
mov
int3
mov
icebp
adc
lods
mov
push
inc
in
add
pop
inc
cmpsl
add
stos
jle
xchg
push
mov
addb
movsl
sbb
push
mov
xor
call
int3
mov
ds
shrl
dec
and
mov
arpl
in
push
mov
jb
stc
dec
pop
scas
cmp
insl
lods
mov
pop
mov
inc
and
daa
inc
mov
pop
scas
inc
in
mov
test
into
sub
push
lds
mov
stos
push
daa
sahf
jbe
xchg
stc
cmp
push
cmp
imul
lock
stc
cmc
ss
pusha
fldt
mov
cmp
shll
xor
sbb
fiadds
xlat
mov
stos
imul
add
out
xchg
in
inc
push
push
aaa
in
nop
adc
aaa
mov
insb
fbld
sbb
jnp
jmp
shl
aad
mov
aaa
in
sub
sbb
mov
sub
imul
jbe
xchg
leave
stc
inc
fnstsw
jnp
jne
fwait
xor
mov
cmpsl
cmp
mov
fildl
mov
add
imul
jg
test
sbbb
movsl
jae
xlat
movsb
mov
mov
pop
jecxz
repnz
cmp
insl
rclb
or
sbbl
pop
sub
pop
jecxz
ret
clc
inc
ja
adc
mov
das
mov
loopne
ljmp
pushf
repz
jae
lods
movsb
jbe
cmp
xor
movsl
dec
cmp
das
jl
mov
dec
out
std
inc
shll
inc
in
cmc
das
rclb
dec
shl
jmp
rclb
shl
scas
or
inc
lods
cmp
out
jne
mov
fdivl
fs
sbb
sub
xchg
lods
mov
pop
cltd
icebp
movsl
cwtl
test
enter
dec
cmp
inc
lcall
or
out
and
lea
movsl
test
and
jne
dec
or
xchg
adc
or
mov
mov
fwait
addl
incl
dec
fimull
adc
dec
add
sub
jle
mov
jmp
daa
pop
stc
popf
insl
dec
aad
les
jmp
inc
pop
int
sbb
add
icebp
repz
mov
pop
mov
leave
pop
ss
cmpsb
sub
inc
sbb
mov
daa
cmp
cmp
adcb
pop
inc
data16
int
mov
inc
inc
insl
rorb
movsl
add
lods
dec
adc
cmpsb
mov
and
mov
mov
aad
mov
and
fstps
rcrl
into
jb
js
adc
cli
leave
addr16
lret
loope
pop
jb
or
fwait
jl
dec
or
cltd
cmp
rcr
cmc
scas
mov
adc
jmp
fnsave
dec
test
adc
jle
jno
cmpsb
xchg
aas
iret
shrl
dec
adc
repz
jmp
add
adc
jle
pop
sti
hlt
jae
mov
adc
cwtl
mov
rcl
sbb
sbb
inc
adc
lahf
pop
lret
xchg
hlt
xchg
push
ljmp
dec
andl
pop
andb
mov
pop
in
xchg
jp
call
call
idivl
inc
push
js,pt
repnz
jo
ret
inc
ds
lret
sub
pop
mov
dec
in
mov
ret
and
lock
jbe
cwtl
jg
push
pop
je
mov
jne
test
icebp
pop
subb
orb
jl
add
out
fistl
dec
scas
mov
std
aam
mov
loopne
daa
or
in
jecxz
jne
xchg
sub
mov
cmp
mov
mov
dec
decb
shll
cwtl
sub
popf
jp
out
push
push
cmp
aam
cmp
ret
and
jecxz
adc
aad
rcl
cmp
add
int3
fs
mov
dec
add
insl
and
dec
adc
xor
std
sbb
push
inc
popf
pop
fistpl
ljmp
stos
cmp
and
xchg
orl
movsb
push
pop
ds
push
dec
dec
ficoml
aas
insb
cmp
repnz
adc
pop
mov
pop
into
push
fidivrl
or
into
or
jmp
icebp
adc
push
aaa
fwait
add
xor
gs
cmp
cmpl
call
push
fstpl
clc
or
js
rorb
or
xor
outsl
add
mov
or
xchg
cmp
out
or
loopne
in
mov
fisubrl
sbb
stos
negl
scas
mov
insb
std
inc
aas
shlb
jbe
push
pop
into
pop
push
add
xchg
inc
into
movsb
dec
jbe
jmp
add
icebp
jp
pop
and
sbb
outsl
addr16
idivb
sbb
lcall
mov
scas
and
push
jge
ss
ljmp
mov
push
sbb
clc
and
out
mov
cmp
imull
shlb
or
popa
or
jnp
dec
int3
out
cwtl
jae
cmp
jns
out
push
xchg
and
mov
in
push
out
aas
adc
add
cmpsl
push
xchg
sub
test
addb
inc
dec
pop
cmpsl
out
rcll
lods
movsb
mov
addl
fimull
loop
sbb
cmp
dec
mov
iret
es
fstl
js
mov
push
mov
shrl
dec
sbb
std
call
mov
and
das
jle
repnz
popa
rcrl
lods
and
sbb
cmp
clc
in
xchg
or
movsb
lahf
sbb
mov
pop
dec
test
outsl
push
xlat
pop
loop
ja
cmc
push
jge
test
jne
je
xor
and
out
nop
jo
shll
cmpb
pop
out
xchg
xchg
xor
aas
pop
fwait
or
fsubrl
jo
int3
mov
arpl
loop
sbb
addb
test
insb
shlb
lds
in
push
add
pushf
pop
psrad
rorl
testb
inc
loope
cmc
mov
std
push
xlat
jne
adc
adc
pop
in
jbe
insb
dec
lds
les
xchg
stos
lea
call
inc
pop
daa
add
insl
lahf
jne
aaa
mov
add
in
mov
jl
fs
sbb
sbb
cmp
mov
adc
push
iret
xchg
sub
js
lds
enter
xchg
dec
and
aas
aas
fs
xchg
inc
data16
fisttpl
jle
aad
xchg
das
xchg
push
pop
repnz
add
or
and
push
loope
imul
jns
stc
or
inc
iret
mov
or
inc
inc
testl
mov
out
mov
push
iret
jae
dec
pop
popf
or
adc
js
inc
dec
int3
stos
sarl
pop
dec
mov
std
fsubl
cmp
stos
push
imul
dec
mov
add
mov
hlt
aam
shr
pop
lcall
popf
dec
pop
nop
inc
and
sub
sub
orl
or
imul
aad
xchg
aaa
push
in
ret
cmp
adc
arpl
mov
xor
aad
jp
stc
adc
sub
add
sti
fwait
pop
or
pop
das
jo
and
sub
dec
sub
ficomps
lahf
xor
mov
or
sub
pusha
stos
push
dec
inc
mov
pop
lods
aam
xchg
les
and
fwait
stos
ja
mov
sub
mov
cmpsl
rolb
out
popa
fistpll
aas
sbb
std
leave
push
mov
sahf
vpunpckhqdq
and
pop
cli
lock
sub
adc
ret
jecxz
jecxz
jp
pop
sub
cli
jne
jbe
loop
xor
push
mov
faddl
movsb
and
and
ja
fisubrs
gs
pop
pop
pop
cld
inc
loopne
nop
mov
enter
mov
stos
shrl
jl
test
push
rolb
jns
inc
std
sub
and
jg
ss
or
cmp
pop
xchg
jne
popf
add
xor
call
std
lret
add
bound
enter
dec
popa
iret
fidivs
loop
rcrl
mov
xor
ja
subl
adc
aad
mov
shrl
add
lret
mov
les
dec
push
sbb
nop
popa
mov
jg
pop
jns
mov
ja
nop
jle
cmp
out
inc
out
sbb
es
mov
jbe
outsl
fucomip
xchg
add
xchg
xor
movsl
and
sub
push
testl
aam
add
mov
fimuls
out
fnsave
pop
jmp
aaa
fldcw
and
popf
push
jo,pn
add
daa
arpl
mov
pop
out
fdivs
push
inc
loop
jbe
scas
push
shrb
sub
push
int
mov
push
repnz
xchg
insb
mov
fistl
xor
mov
mov
stos
mov
shlb
mov
add
or
roll
mov
clc
test
aad
ljmp
in
and
aam
jo
dec
jmp
xchg
jle
dec
loopne
jo
adc
xchg
mov
mov
repnz
adc
shl
inc
xlat
fwait
repz
dec
and
int3
mov
mov
movlps
addb
sbbl
mov
push
pop
outsl
jbe
iret
fcmovnb
and
dec
and
inc
sub
hlt
jne
add
dec
xchg
jno
cld
jne
dec
xchg
in
xchg
jecxz
mov
adc
mov
subb
call
xchg
push
idivb
mov
scas
inc
sbb
enter
pop
js
add
imul
decb
pop
sub
xchg
xchg
out
loop
clc
pop
pop
mov
xor
ret
cld
inc
inc
fs
shrl
rcrb
inc
pop
pop
enter
call
sub
in
sub
push
pop
add
fwait
loope
call
sub
push
sbb
pop
push
and
scas
pop
movsb
addl
test
movsl
mov
int
ss
push
mov
je
fldcw
cmp
lret
mov
mov
inc
cld
das
cmp
sbb
sub
sub
inc
orl
test
inc
pusha
pop
adc
imul
adc
das
cmp
pop
gs
add
or
cli
inc
pushf
mov
imull
inc
mov
out
pop
adc
dec
enterw
jle
inc
dec
jbe
mov
inc
ds
negl
imul
jp
xchg
mov
es
aad
sti
sarb
add
scas
fs
scas
xchg
cmpsl
or
adcb
mov
lret
pop
jae
pop
ret
sbb
outsl
ljmp
ljmp
mov
jp
out
xchg
imulb
loopne
sbb
insl
mov
add
push
sbb
test
rorl
jbe
or
sub
xchg
popa
dec
aad
sbb
xor
repz
jo
jae
mov
jo
xchg
sbbb
add
inc
jns
imulb
syscall
cmc
addl
push
lds
inc
pusha
and
mov
leave
popa
mov
cltd
cmpsl
adcl
xlat
jmp
pop
and
xchg
lea
adc
pop
mov
mov
xor
push
xchg
ffree
jmp
cmp
pop
cwtl
adcb
sub
jp
jb
or
fs
into
imul
pusha
and
ret
jge
adc
int3
push
xor
jmp
aaa
pop
je
int
xor
aad
push
insb
insl
mov
mov
ret
pop
mov
mov
push
pushf
lahf
cli
pushf
xchg
jmp
ljmp
gs
iret
aad
dec
iret
popa
jno
cmp
movsb
mov
add
loope
jne
mov
ds
xchg
cli
nop
enter
push
std
iret
in
and
lods
push
dec
jge
movsl
jge
cld
xor
cmp
push
js
adc
pop
icebp
mov
add
xchg
insl
lret
mov
xchg
mov
jg
clc
es
out
pop
movl
jnp
popf
popl
mov
frstor
push
xchg
add
nop
icebp
dec
mov
fucomp
mov
cmpsl
jecxz
xchg
jno
mov
or
add
insl
sub
roll
test
aad
test
sub
int
lahf
incb
shl
xor
push
inc
loopne
push
xor
je
sti
pop
mov
pushf
or
jl
in
xor
js
outsl
cld
lcall
jmp
pop
push
imul
dec
sub
aas
aam
mov
adc
repz
movsl
inc
popa
or
inc
mov
push
dec
aaa
dec
js
imulb
idiv
xchg
loop
push
popf
cmp
pop
and
out
mov
mov
fnsave
xor
gs
shlb
or
xchg
shrl
sbb
mov
dec
push
call
outsl
jno
pop
ja
lret
mov
pop
pop
aaa
fldcw
dec
dec
fbld
fdivrl
idiv
cmp
sub
or
fists
lahf
xchg
lock
cmpsl
hlt
jmp
add
mov
push
dec
push
xor
std
mov
cs
push
sbb
jb
arpl
pusha
das
orl
pop
call
hlt
cmp
pusha
lds
jle
popf
sub
call
mov
icebp
aad
jmp
mov
adc
lahf
fdivl
mov
xlat
xor
pop
sub
or
fisubrs
adc
out
jge
or
mov
xchg
add
pop
outsl
mov
fdiv
mov
lret
sbb
pushf
mov
in
xor
outsl
test
inc
fisttpl
or
dec
loop
lret
enter
cld
pop
xchg
dec
ret
xchg
jp
pop
in
cld
adc
mov
or
stos
push
push
je
jno
hlt
lods
xor
fsubrl
or
jae
int
cld
movl
subl
shrl
cwtl
push
mov
cmpsl
sub
repz
das
ss
sbb
and
xchg
aas
inc
push
negb
add
pushf
xor
addr16
popa
xorb
es
cld
mov
test
or
mov
roll
jp
sbb
ds
cld
out
sbb
add
xor
mov
and
mov
xor
add
mov
jbe
stc
ljmp
icebp
jl
out
push
out
cmp
iret
stc
andb
xor
jecxz
push
adc
or
jb
inc
push
jbe
out
imul
popf
pand
outsb
mov
dec
pop
in
pop
pop
xor
imul
nop
lea
test
pop
fldl
in
jle
jae
jmp
add
je
and
adcb
and
xorl
lea
je
lods
adc
jae
cmpb
into
enter
sti
xlat
mov
jno
push
mov
ja
lods
jnp
xor
pushf
xor
f2xm1
push
inc
pop
or
add
adc
inc
mov
pop
jl
stos
mov
xchg
fdivrs
jmp
mov
jno
push
jo
call
popa
push
stos
fcomps
xor
loope
or
jmp
and
cld
std
sbb
inc
mov
dec
in
mov
pop
scas
idivl
ja
push
xor
fldenv
xlat
xor
inc
sbb
aas
stc
sub
dec
and
ds
cwtl
cmc
xor
cmp
mov
mov
sar
and
lcall
fisttpll
mov
or
and
xchg
fisubs
adc
add
push
scas
inc
ljmp
mov
cltd
jl
xchg
jb
test
aaa
insb
add
mov
sbbb
xchg
or
sub
mov
mov
cmc
push
jo
das
xor
incl
xor
push
fwait
xor
or
popa
scas
adc
add
in
and
jmp
mov
mov
rcrb
das
add
insb
orb
lock
sbb
cld
iret
scas
push
mov
jae
mov
xchg
mov
sbb
test
aad
pop
cmc
add
in
jl
cmp
out
xchg
mov
fwait
add
mov
jl
ljmp
popf
cmp
es
nop
cmpsb
inc
jecxz
add
pusha
xchg
sbb
movsb
lock
and
or
lds
idiv
mov
push
mov
jns
fstpt
cmp
sub
inc
testb
cmpsl
jl
sub
rorl
mov
or
inc
mov
clc
adc
sbb
pop
add
sbbb
popa
icebp
jae
sbb
jne
push
jno
scas
scas
add
cmp
nop
and
shl
sbb
adcb
dec
scas
push
jmp
insl
cmp
xchg
or
sbb
push
pop
cli
adc
adc
and
fadds
jg,pn
or
inc
push
or
dec
cmp
jp
cmpsl
aas
lods
pushf
pop
imul
adc
dec
aas
adc
xchg
incb
movsb
dec
sub
sbb
pop
idivb
aas
sti
adc
icebp
add
dec
cli
stc
mov
mov
inc
xchg
fcomip
mov
cmpsl
inc
push
ficoml
mov
ja
movsl
das
inc
pop
lcall
mov
push
dec
push
imul
add
jg
add
xchg
mov
push
sub
mov
mov
mov
mov
cmpsl
shrb
js
add
mov
loopne
and
pop
cli
mov
mov
int3
test
mov
jge
mov
push
pushf
dec
stc
xor
adc
cmp
test
push
mov
jbe
mov
sbb
and
jmp
test
in
xchg
mov
loopne
popa
mov
iret
add
cwtl
stos
stos
jmp
std
mov
lock
mov
sbb
xor
gs
push
std
fldcw
mov
xchg
jno
int
sarb
xor
xchg
js
or
push
lret
vpcmpgtw
xchg
inc
inc
jecxz
repnz
pushf
adc
sub
inc
pop
ficoml
clc
mov
mov
and
mov
andl
dec
cld
shlb
pop
pop
mov
or
mov
sbb
sti
into
pop
mov
test
and
push
cmpsl
push
or
add
and
mov
in
stos
mov
lret
jmp
adc
xchg
sub
enter
cwtl
enter
xchg
lcall
cmpsb
jae
loopne
dec
pop
xor
nop
add
rcll
mov
xor
lods
sbb
cmpsb
xchg
xor
mov
out
test
xor
fidivrs
xor
cmp
inc
in
lock
movsl
call
push
mov
add
push
cmpsb
test
mov
and
ret
popw
sub
orb
ss
mov
mov
adc
push
pop
and
fxch
test
fistl
sub
mov
mov
lods
xor
mov
sub
pushf
sbb
lds
sub
in
mov
aas
add
and
and
push
mov
or
mov
mov
push
inc
add
sbb
ret
push
pop
and
es
or
daa
sti
inc
mov
push
mov
and
mov
ror
add
mov
jl
push
aad
or
or
pusha
and
sarb
leave
add
mov
inc
and
add
ss
imul
in
mov
popa
test
ja
mov
addb
xor
or
pop
icebp
dec
popa
adc
jnp
and
scas
dec
mov
mov
add
addr16
and
pop
mov
fdiv
and
cmp
mov
lret
jg
and
in
in
dec
repz
insl
add
jbe
adc
pop
add
out
xchg
xchg
sub
mov
cli
rorl
mov
jne
push
sub
add
and
or
jne
in
sbb
test
xor
xor
adc
push
or
insb
sub
push
pop
xor
jne
into
mov
insl
nop
jg
pop
xchg
mov
ds
loope
ja
shlb
pop
cmc
jge
add
add
fmuls
push
jmp
stos
loopne
add
dec
dec
pop
pop
ds
jg,pt
sti
mov
ja
inc
lods
imul
sub
shl
pop
push
jae
lret
outsb
int
sbb
int3
and
aaa
push
repnz
mov
xchg
int3
mov
cld
adc
adc
testl
mov
xchg
loop
cwtl
or
add
mov
sbb
inc
add
inc
adc
cmp
cmc
sbb
and
in
adc
in
bound
push
mov
stos
mov
jl
adc
mov
or
adc
lcall
fbld
cli
jecxz
sub
add
jmp
cltd
inc
dec
push
mov
int
cmp
popl
fdivp
xchg
and
sbb
outsl
pop
or
cmpsb
out
cs
clc
repnz
jbe
sahf
ss
shll
xchg
scas
xchg
fmul
pop
es
pop
xor
inc
ja
in
xchg
mov
outsl
cs
or
inc
jbe
lock
outsl
push
jle
fisttpll
pop
xchg
adc
fs
aas
sahf
stos
jo
aaa
mov
in
mov
inc
dec
fldcw
in
xor
jo
cmp
push
push
mov
inc
inc
scas
xchg
jb,pt
lret
in
popa
dec
aam
adc
nop
add
pop
sbb
fnstsw
xchg
jo
lcall
cli
and
jno
mov
xor
int
arpl
test
and
shlb
nop
adc
xchg
sub
mov
mov
repz
add
mov
push
add
repnz
cmc
mov
sub
bound
jb
mov
sbb
insb
or
leave
ficoml
pop
hlt
or
adc
fsubrs
repz
adc
pop
ja
xlat
inc
push
mov
mov
inc
dec
loop
andb
out
push
inc
jmp
aas
xlat
in
rclb
stos
cmp
loopne
sti
rcll
mov
mov
aam
sti
add
pusha
jns
mov
xchg
add
jb
sbbl
and
stos
call
lods
cwtl
insb
push
cltd
je
inc
sarl
outsb
mov
sbbl
cmp
mov
sbb
mov
out
add
scas
mov
sahf
or
cmp
lds
rorl
aad
loop
fdivp
xor
mov
mov
mov
adc
clc
or
or
adc
mov
roll
cmp
int
leave
sbb
test
dec
cmpsb
pop
pushf
add
cmpsl
subb
scas
jns
outsl
test
inc
push
outsb
jg
testl
pop
addr16
shlb
cmp
loope
aas
push
xchg
push
push
mov
movsl
insb
cmp
sub
mov
pop
xor
cmpsb
negl
out
shrl
loope
outsb
push
inc
fisubl
and
int3
cmpb
inc
dec
iret
inc
cld
fisttpll
fstl
mov
and
inc
jp
fisubl
bound
sub
push
jmp
loop
aam
fdivs
in
dec
fst
loop
rep
pusha
push
stos
sbb
jp
andb
push
lea
add
repz
lea
hlt
mov
sarb
jmp
aas
dec
ljmp
sbb
es
out
dec
sbb
xchg
jp
xchg
pop
cmp
xor
sti
pop
hlt
inc
mov
test
test
jmp
sub
pop
enter
ret
mov
insl
stos
add
pusha
inc
mov
xchg
xchg
xchg
sbb
fucom
jp
out
js
sub
xchg
jnp
icebp
dec
decb
loopne
mov
mov
adc
data16
xchg
sub
pop
mov
or
pop
ret
leave
adc
in
mov
adc
adc
xor
pushf
and
cli
mov
sub
sbb
cwtl
ficoms
inc
jecxz
popa
mov
jle
xchg
lahf
lods
jl
lds
or
jmp
sub
in
cmp
add
inc
out
daa
add
mov
into
push
rcl
or
loope
inc
xor
push
mov
mov
mov
jb
cmp
jge
mov
repnz
pop
lods
cmp
pop
stos
jmp
or
push
aaa
sbb
clc
daa
pop
repz
adc
cmp
fildl
aam
ret
dec
push
jecxz
push
lods
je
pop
ss
cltd
insl
mov
mov
nop
fs
cwtl
mov
pop
mov
fsubs
mov
ret
fsubp
or
pop
pushl
or
jmp
sub
or
repnz
ja
clc
dec
cbtw
cltd
imul
mov
shlb
pop
test
and
inc
pusha
ret
mov
push
jmp
mov
xor
scas
gs
mov
cmpsl
fs
and
mull
push
outsb
mov
insb
fimull
fs
xchg
aaa
push
xor
jae
sub
adc
js
push
xchg
jno
orl
pop
add
popf
lret
cli
xchg
mov
test
pop
push
repz
out
cmc
fadds
or
sub
sub
cmp
cwtl
pop
and
push
inc
ret
sbb
cmp
lahf
sti
scas
mov
sub
dec
lods
and
fbstp
cmp
das
movsb
and
cmp
cmp
add
aaa
push
xor
mov
testb
out
sub
in
das
add
fcompl
mov
icebp
iret
lret
adc
jae
fisubrs
pop
or
mov
fnsave
out
in
jnp
add
imul
popf
into
mov
or
lret
adc
hlt
jb
js
leave
cwtl
and
jg
enter
push
pushf
cmpb
sub
lods
or
subb
les
pop
sub
or
xchg
jno
inc
js
ljmp
cmp
jae
sub
ja
mov
mov
cmpsb
push
fsubs
mov
sub
jne
jo
jl
call
or
cli
sbb
mov
mov
jg
jge
aas
sti
scas
inc
sub
xchg
pop
jb
enter
icebp
jmp
leave
dec
jecxz
outsl
out
push
jb
mov
je
pushf
scas
mov
fucom
leave
pusha
std
mul
sub
out
sbb
sbb
lret
out
mov
xchg
pop
mov
jl
push
stos
inc
xchg
dec
repnz
push
jbe
outsb
int
leave
arpl
leave
dec
pop
mov
jns
mov
ja
popf
outsb
add
repnz
bnd
cli
mov
orl
or
lret
sti
push
pusha
std
xchg
ljmp
imul
push
dec
sbb
lods
inc
xlat
in
jnp
divl
dec
pop
popf
data16
push
hlt
mov
mov
jns
mov
fstl
push
lods
repnz
xchg
add
not
aaa
fistl
lcall
pop
insb
insl
cltd
add
xor
lea
mov
movsl
dec
mov
jl
sub
lods
xor
jmp
and
int
mov
inc
xchg
sbb
cs
and
js
adc
lcall
cmp
xor
or
insl
inc
xor
cli
push
ficompl
arpl
into
scas
mov
mov
movsl
insb
mov
lret
lds
inc
repz
xchg
mov
clc
cltd
pusha
cmp
cmp
inc
fsubrp
data16
gs
jb
je
fs
or
call
insb
xchg
int3
mov
cltd
in
in
test
sbb
imul
movsb
mov
jbe
neg
add
mov
lret
mov
pop
add
lea
ds
lea
fcomps
inc
push
lods
pop
into
sbb
and
inc
bound
mov
sbb
inc
shrb
push
or
jmp
icebp
dec
mov
jge
inc
and
imul
out
push
cmp
int
xor
inc
jmp
adc
in
es
fcompl
out
push
ljmp
jno
dec
push
xor
xchg
and
lods
mov
or
cmp
cltd
popa
aam
ja
leave
and
cmp
jno
fincstp
mov
inc
ljmp
insb
call
pushf
pop
and
jbe
popf
mov
cmpsl
sbb
rcll
mov
mov
inc
arpl
scas
cld
pop
fwait
les
leave
jbe
in
fstpl
ret
aad
xor
gs
popa
jne
test
pop
test
icebp
push
pushf
scas
and
jl
fstp
mov
int
xlat
jne
mov
jp,pt
or
leave
das
add
bound
movsb
push
out
pop
test
icebp
add
xchg
xor
xor
sbb
sub
cltd
mov
mov
leave
cmp
ljmp
clc
pop
push
sub
test
mov
cmp
sub
xor
push
mov
out
das
cwtl
outsl
mov
notb
jmp
xor
lock
jg
in
adc
or
in
cmp
dec
fsubrs
push
fnsave
or
out
sub
xchg
jmp
mov
xchg
outsb
test
jo
pusha
push
imulb
or
cltd
and
loopne
inc
and
lea
add
adc
xlat
clc
fiaddl
pusha
aas
xchg
pop
add
sub
imul
and
cmp
shrb
imul
clc
ss
imul
out
jp
gs
jg
jae
lcall
insl
stc
sub
push
dec
push
push
cmp
pop
test
scas
mov
add
popf
push
test
xchg
rorl
adc
mov
adcl
cs
stos
xchg
mov
ss
push
sar
fisttpl
and
cmp
and
sbb
in
push
pop
mov
mov
push
pushf
mov
xor
mov
xchg
test
fimull
or
inc
sarl
or
jbe
pop
test
scas
and
loopne
test
xchg
adc
or
jle
leave
sbb
jnp
add
ret
mov
pop
or
lcall
in
or
xlat
xchg
lods
jnp
les
sarl
into
incl
mov
sub
mov
daa
dec
out
xor
mov
jecxz
jmp
adc
sti
pop
mov
scas
jmp
lret
mov
adc
jb
push
int
xchg
mov
in
call
push
push
pop
cmp
xor
je
pop
ds
push
xchg
adc
push
inc
push
dec
sbb
popa
test
fistpl
cmp
movsb
subb
mov
insl
movb
ficompl
jl
insb
and
jecxz
xor
jle
outsl
icebp
mov
sbb
bndstx
lea
ret
mov
sbb
cmp
repz
push
aam
cmp
dec
cmp
nop
stos
loope
jb
dec
or
xchg
pusha
inc
fstl
xchg
mov
push
add
xchg
push
and
push
cwtl
push
fistl
pop
sbb
in
loope
movsl
cld
sub
mov
and
sbb
mov
lock
sbb
pop
cmp
jno
out
cld
jb
cmpsb
ss
pushf
in
pop
imul
sub
xchg
lea
lret
imul
movsb
nop
mov
pop
stos
inc
jo
lretw
loope
push
jb
aas
lret
cmp
test
jecxz
jp
and
sub
cwtl
rcrb
ret
sbb
in
movsb
cmp
adc
ret
fistps
jl
dec
and
addb
scas
lret
jmp
cld
jne
pop
sbb
popa
lret
out
mov
jl
push
mov
lods
inc
test
fiaddl
xchg
push
popa
clc
dec
rcl
fs
mov
jge
ficoms
fldt
iret
js
inc
mov
mov
sub
lcall
push
dec
cmp
add
or
movsl
lods
clc
pop
mov
lret
rcrl
or
test
sub
mov
out
fistps
xchg
mov
push
std
addr16
ret
xchg
inc
sbb
cli
and
mov
mov
or
outsl
mov
dec
pop
jecxz
pusha
stos
jge
das
mov
fstps
bound
nop
mov
orl
int3
fsts
mov
push
in
sub
pop
roll
lret
jb
scas
rcl
in
or
push
lcall
push
jle
lock
mov
ljmp
pushf
jno
pop
mov
scas
ja
out
mov
dec
sub
out
push
sbb
pop
xchg
mov
dec
out
lods
loopne
xor
aad
jl
movsb
lcall
ret
xor
hlt
sbb
or
jne
mov
push
push
jp
inc
push
jnp
jae
out
jae
dec
or
fs
xor
mov
pop
push
lds
xor
jo
repnz
fadds
xchg
or
cmp
loop
lahf
cltd
sbb
jbe
ljmp
imul
mov
add
jnp
push
xor
rcr
jmp
lcall
jno
mov
pop
fisttpll
xor
out
add
or
cwtl
pop
dec
popf
fs
pop
daa
jp
scas
inc
sub
cwtl
xchg
dec
int
jnp
adcl
nop
ss
lret
movsl
sarl
shrl
scas
dec
cmp
add
mov
cmp
insb
adc
orl
pop
jae
popa
test
test
jecxz
test
cmc
sub
mov
cmpsl
inc
nop
sub
sbb
in
cmp
ret
lahf
ss
imul
pop
das
ret
jae
sbb
adc
sub
insb
or
cmp
stos
aad
mov
enter
mov
gs
add
ret
lds
sbb
loop
jge
mov
shlb
jns
inc
popl
push
fidivrl
fisubl
mov
cs
fs
repz
pop
jmp
hlt
cmpl
je
sbb
jl
cmpsl
adc
clc
mov
imul
js
lods
xchg
mov
jo
faddl
in
inc
or
out
sub
xchg
insb
fstpl
repz
jmp
push
or
jne
ret
inc
mov
mov
xchg
arpl
das
sub
gs
adc
mov
jmp
sbb
mov
fisttps
dec
inc
je,pn
mov
bound
adc
popf
add
adc
stos
inc
mov
adcb
add
inc
xchg
xor
jecxz
aaa
cmpsb
imul
cltd
out
xchg
ss
xor
hlt
cmp
sti
add
aam
scas
mov
xchg
stc
mov
mov
jge
or
fisttpll
mov
scas
int
mov
imul
dec
pop
mov
aaa
int
fisttpll
jb
lods
sbb
daa
hlt
mov
add
sub
loop
mov
ds
adc
test
rorl
mov
repnz
inc
add
xchg
stos
roll
divl
in
fcomps
into
dec
test
mov
mov
aam
sbb
stos
mov
outsb
and
push
pushl
pop
lods
testl
stos
aam
xchg
in
shl
pop
cmp
and
rol
jne
fisubrl
sub
inc
testl
ret
add
mov
fidivs
aam
sahf
out
mov
cmp
xor
arpl
mov
out
pop
out
fcompl
cmp
fsubs
xchg
ss
dec
mov
sbb
imul
insb
pop
mov
lds
pop
xlat
mov
mov
cltd
std
sbbl
arpl
push
dec
mov
pop
loopne
jmp
hlt
mov
out
leave
push
push
rol
dec
movsb
stos
push
lea
rclb
push
jae
inc
ret
xchg
sbb
pop
pop
cmc
js
add
sbb
mov
fbld
inc
bound
sahf
lods
add
insl
std
cltd
cwtl
push
lret
push
fsubrl
int3
sub
das
jno
lods
std
adc
das
inc
or
popf
popf
and
mov
dec
iret
imul
andb
push
or
lods
sbb
mov
lods
daa
dec
rorl
sbb
arpl
push
fldenv
lret
nop
mov
outsb
outsb
sub
cmp
pop
mov
sti
fdivs
mov
xlat
test
and
mov
and
movb
mov
sbb
repnz
xor
mov
test
jns
dec
xchg
sbb
and
imul
mov
shrb
jmp
mov
arpl
sbb
test
or
push
xchg
jno
xchg
sub
loop
xchg
out
ds
mov
jp
cmp
pop
jmp
rcrl
xchg
push
fbstp
push
mov
and
pop
out
addr16
jno
aam
xlat
sbb
pop
loop
sti
and
loope,pt
xor
fcomps
in
int
fiaddl
dec
leave
std
jae
stc
mov
or
popf
cli
or
inc
ds
sub
mov
jb
les
out
sbb
pop
pop
cmp
mov
sbb
stos
pop
adc
pop
aam
jl
mov
imul
jb
mov
xlat
stc
popf
pop
mov
sahf
sub
jbe
les
lret
xchg
cmp
rorb
movsl
cmp
cs
lcall
icebp
fwait
fs
adc
xor
inc
mov
shrb
pop
stos
inc
xor
movsb
mov
lock
mov
xchg
push
sub
sbb
dec
fdiv
xchg
lock
in
gs
les
xchg
loop
cmp
mov
es
subb
jl
repz
cli
cmp
xor
xor
mov
sub
add
js
adc
mov
sub
xor
xorl
movb
or
cli
ss
icebp
int
inc
mov
add
pushf
xor
jl
decb
jl
jno
ret
cmpb
mov
sub
inc
or
jno
mov
xchg
cmp
inc
std
xchg
pop
fistpl
add
sbb
dec
fs
push
mov
mov
inc
sbb
fistpll
mov
inc
pop
aas
test
pop
ror
aas
test
cmpsb
mov
dec
loop
mov
jge
xor
and
mov
jecxz
mov
jl
sbb
add
ds
test
shl
pop
aas
div
push
fwait
aas
movsb
cmp
addr16
fcmovne
sub
mov
imul
jmp
in
mov
dec
push
fisubs
pop
and
je
xor
movsl
jo
and
int3
roll
cmpsl
out
inc
leave
add
adc
andl
int3
fwait
xchg
jbe
push
leave
adc
pop
adc
inc
movsl
ja
enter
jne
or
cmp
mov
mov
sbb
pop
dec
push
push
dec
movsb
or
sub
lea
stos
das
add
mov
sub
adc
outsb
xor
xor
enter
das
incl
gs
jbe
lods
pop
insb
mov
xchg
in
test
testl
pop
lret
shlb
add
adcb
leave
sbb
sti
mov
mov
adc
cmp
inc
shl
in
sbb
dec
fbstp
sbb
cltd
mov
ja
push
and
out
test
cmp
xchg
insb
cs
pusha
mov
pop
adc
or
xor
mov
push
pop
cmp
pop
ret
xchg
xor
pop
js
mov
ds
call
mov
lods
mov
push
pop
inc
cmp
jb
dec
or
lahf
xor
pop
jno
arpl
ss
or
cmpsb
dec
pushf
idivb
xchg
mov
and
mov
xor
pop
imul
xor
mov
adc
call
mov
insl
rcll
xchg
pop
ss
imul
xor
mov
andb
inc
cmp
mov
pop
push
and
andb
sahf
mov
fistps
test
lret
jb
in
xor
cmpsb
cwtl
push
sbb
mov
arpl
sub
cs
or
out
insl
xor
pushf
adc
jno
lods
lcall
negb
sub
ds
jno
sti
mov
lock
xchg
es
cmp
dec
sub
cmc
pop
int3
mov
add
sub
mov
and
in
out
ja
and
cmc
adc
fucomi
andb
test
xchg
lds
cli
or
ds
push
xor
mov
push
loopne
adc
cwtl
jl
rcr
jo
cmp
lahf
pusha
pop
rorl
test
shrl
push
jne
mov
lea
stc
out
inc
sahf
shlb
mov
das
pop
sarb
mov
dec
pop
jmp
out
jo
xchg
cld
mov
dec
mov
test
into
outsl
repz
lcall
int3
test
into
in
fstps
push
dec
sahf
mov
mov
jmp
lock
ss
push
das
stos
push
stc
mov
lods
xor
mov
pop
mov
adcb
sbb
addb
jp
or
jmp
or
cmc
pop
pop
jp
dec
repz
cmp
dec
or
cld
and
adc
inc
fsubrl
dec
test
clc
dec
sub
jge
mov
and
in
mov
mov
out
jmp
push
mov
jge
loope
inc
adc
add
pop
jmp
dec
fsts
loop
lock
push
cmp
les
or
inc
jp
xchg
push
inc
dec
mov
cmp
push
sub
insl
mov
cmp
push
mov
cmpsb
loop
loop
xchg
mov
adc
movsl
gs
adc
xchg
inc
xchg
xor
pop
adc
popa
mov
and
dec
or
adc
testb
mov
out
add
lcall
in
rol
js
imul
movsl
loop
outsl
or
cmpsl
dec
inc
arpl
mulb
nop
imul
ror
fwait
jb
ds
lcall
dec
loop
add
cmp
imul
pop
scas
sbbl
daa
adc
xor
push
rcrl
fstpl
ret
fnsave
insb
lahf
push
pop
ficoml
iret
xchg
popf
stos
jp
sbbl
stos
bound
jnp
mov
popa
push
and
aad
popa
sahf
or
and
or
xor
adc
nop
xchg
std
fcmovnbe
push
and
divl
push
decb
inc
jnp
mov
js
inc
and
push
push
enter
or
scas
inc
mov
pop
aaa
cmpsb
add
jno
arpl
or
pop
mov
sahf
and
mov
arpl
or
stos
push
jmp
cmpsb
jbe
cmpsl
and
pop
xlat
inc
cs
mov
lock
ljmp
pushf
test
push
adcl
call
cmp
mov
mov
or
cmp
cmp
pop
jae
in
mov
push
test
dec
arpl
in
xchg
push
xchg
mov
rcrl
mov
or
leave
shl
cli
pushf
adc
mov
cmp
and
ss
push
cwtl
xlat
pop
scas
or
iret
movsl
jl
mov
stos
cmp
lea
in
leave
or
cmpb
jecxz
inc
push
sub
and
sbb
adcb
mov
ljmp
lock
jl
js
enter
cmp
jecxz
jle
pushl
sbb
aas
inc
xchg
imul
inc
icebp
jnp
xchg
pop
insb
repnz
loopne
clc
mov
mov
stos
inc
ds
mov
mov
pop
mov
cmp
pop
jbe
dec
jbe
je
cmp
pop
xlat
call
xor
leave
lods
sub
in
test
or
scas
dec
je
fists
fs
sbb
fsubl
cwtl
cmp
nop
pop
scas
test
popa
xor
cmp
and
fisubs
push
jno
sarl
data16
mov
cli
inc
cmpsl
mov
pop
lcall
pop
decb
cmp
ret
ret
outsb
mov
jle
lods
adc
hlt
mov
js
or
in
rcll
scas
into
mov
int3
jns
dec
dec
rclb
dec
mov
push
fldt
rorl
and
mov
fiaddl
fistpll
addl
outsl
jnp
and
in
in
sti
or
iret
setle
add
fwait
sbb
aad
fimull
cs
test
mov
setns
mov
mov
imul
enter
int
arpl
dec
sub
cmc
or
mov
jl
and
cmp
stos
push
gs
sub
pop
lock
dec
jbe
dec
xor
mov
add
daa
mov
aad
call
push
adc
mov
orb
in
shlb
andb
sub
jo
ja
mov
mov
pop
add
enter
shrb
es
push
rclb
cmp
xchg
fnstcw
out
xor
pop
mov
mov
inc
repz
sbb
push
aas
dec
icebp
mov
xor
movsl
push
mov
outsl
inc
outsb
aam
adc
bound
xchg
mov
test
dec
lock
push
push
or
inc
stc
loopne
subb
ret
ljmp
test
sub
push
outsb
je
stc
xor
es
push
jae
data16
je
sub
inc
in
aas
addb
mov
pop
jle
inc
pop
adc
xchg
fmull
mov
movsb
insb
adcl
xchg
inc
mov
jbe
push
push
dec
pushl
pop
xor
and
xchg
cmp
pop
sub
jg
pop
es
fcomip
pop
mov
cmp
or
push
pop
les
and
push
jns
stos
add
xchg
insb
jmp
rclb
xor
xchg
iret
into
push
inc
fidivrl
leave
fs
sbb
pop
ljmp
jno
ret
pop
dec
jg
xorl
pop
hlt
cmp
jnp
mov
shrb
or
insb
notb
fcmovu
pop
mov
and
and
pop
xchg
ds
xor
inc
stos
fbstp
xchg
mov
mov
int
mov
jne
jg
and
pmaddwd
mov
lods
dec
sub
or
mov
es
push
loop
jl
xor
sarb
pop
test
inc
out
jmp
and
rol
imul
push
jae
enter
jo
inc
enter
mov
cmp
or
mov
xchg
add
jg
mov
loope
scas
sbb
loop
mov
inc
jecxz
repnz
ret
push
mov
dec
dec
daa
fnstcw
rorb
adc
or
lret
sbb
roll
dec
mov
push
into
push
scas
out
and
xchg
lea
xor
mov
fidivl
jo
xchg
ss
push
and
cmp
jns
aam
mov
ljmp
push
aam
pusha
stos
inc
xchg
fcomps
cs
push
sub
std
in
ja
mov
or
or
imul
cld
push
fwait
leave
enter
fnsave
jmp
pop
rcrb
xor
iret
dec
xchg
pop
mov
adc
rorb
das
dec
and
lds
jge
xchg
push
rclb
cmp
lret
mov
push
cmc
pop
insl
cmp
repz
lock
repz
jns
xchg
xchg
mov
push
ljmp
jb
dec
hlt
adc
or
movsb
jmp
mov
add
adc
sar
mov
aam
xchg
test
loope
loop
jno
aas
dec
jecxz
cld
popf
scas
adc
cmp
lea
aas
jno
adc
mov
jno
int3
lret
gs
xor
and
aas
or
mov
cmp
loop,pn
add
jne
test
adc
stos
les
enter
mov
and
hlt
ror
add
out
mov
rorb
ret
push
loop
ret
fists
sbb
xor
fdivrl
push
sahf
popa
add
jo
fiaddl
fidivrl
xchg
pop
enter
sbbb
test
mov
jbe
outsb
call
cmpsb
sbb
test
xor
mov
sub
jb
adc
mov
je
hlt
xor
sub
dec
lods
ljmp
call
roll
pop
mov
and
test
test
shr
lods
ljmp
pushf
jno
pop
sahf
clc
sub
pop
mov
ret
mov
outsb
jl
xor
inc
inc
out
imul
cld
fiadds
call
cwtl
cmp
jae
cmp
fildll
dec
cmp
push
push
inc
shrl
ret
dec
sub
sub
push
jns
popl
sub
mov
into
cmovnp
ja
icebp
arpl
cmpsl
das
in
popa
or
das
push
jle
xchg
mov
sti
xlat
js
ja
movsl
jle
setle
sbb
scas
pushf
ja
pop
les
fidivl
pusha
mov
push
lret
sbbl
out
mov
push
cmc
test
scas
loop
mov
aaa
xorb
sbb
cmp
mov
mov
sub
xchg
mov
xchg
jo
mov
test
dec
xor
xchg
add
arpl
and
loop
shrl
mov
mov
mov
or
or
scas
push
stos
loopne
sub
lahf
pop
jecxz
cmp
pop
lock
test
popa
cld
cmp
filds
push
in
rclb
loopne
mov
xor
jno
int
jb
jg
pop
jle
mov
mov
fidivrs
cltd
xchg
sbb
push
and
outsl
dec
lods
lock
xchg
mov
les
cld
xor
arpl
inc
cwtl
mov
and
outsl
test
push
imul
fimuls
sbb
mov
fucomi
sbb
adc
sub
push
imul
mov
cmp
xlat
jl
mov
out
cmp
insl
add
push
lock
pop
dec
inc
add
out
cmpsl
sbb
rolb
push
and
sbb
cmp
ds
outsl
sbb
pop
jmp
push
mov
test
fisubrl
adc
cs
jnp
shrl
mov
push
cmp
rol
scas
insl
jle
lahf
gs
std
sbb
in
mov
mov
mov
push
xchg
and
mov
popa
cld
mov
jle
xchg
pop
xor
jle
int
mov
fldcw
xchg
and
int
fiadds
sub
mov
push
mov
int
and
adc
outsb
out
pop
push
jne
in
outsl
xchg
add
in
pop
hlt
add
adc
dec
js
out
test
sub
add
arpl
loopne
add
jae
cs
sbb
mov
dec
jmp
cmp
add
repz
jb
xlat
daa
popa
push
adc
sub
and
pop
fadd
sbb
add
shl
out
lahf
dec
dec
loopne
sbbb
popf
ljmp
in
mov
outsb
push
fldcw
inc
cld
jge,pn
imul
outsb
cmpsl
inc
pop
out
dec
fs
pushf
xchg
add
push
in
imul
dec
shrl
imul
add
add
push
dec
insb
negb
mov
insb
jle
in
mulb
mov
fidivs
outsb
outsb
mov
ds
inc
int
scas
rcrl
in
dec
in
jecxz
icebp
cmp
popf
mov
jb
mov
sbbb
mov
jge
loopne
or
push
rorb
andl
movsl
inc
dec
icebp
mov
sub
xchg
cmp
mov
es
rcl
fdivs
clc
ret
pop
ss
mov
jge
iret
mov
xor
jecxz
mov
arpl
lods
js
xchg
cmp
push
sub
xchg
loopne
xchg
call
popa
fiadds
ds
ss
pusha
lds
adc
inc
arpl
pop
push
mov
in
imul
fld
shl
inc
call
lea
stos
push
hlt
lcall
les
mov
mov
xor
jb
push
aad
test
dec
mov
add
xchg
or
pop
andb
pop
xor
jp
fdivs
or
adc
test
sbb
lods
fiaddl
push
cli
les
scas
test
lret
rorb
lcall
adc
push
into
xchg
imul
pop
lods
mov
sbb
cwtl
and
and
pop
xchg
adc
sub
scas
jb
xor
push
or
xlat
rcrb
loopne
mov
fnclex
cmp
scas
andl
add
ljmp
jno
enter
popa
fimuls
leave
mov
jle
es
mov
jo
aaa
clc
jmp
cmp
orb
mov
loope
cmp
adc
add
je
pop
xchg
cltd
sbb
subb
cmpsb
in
and
cld
fcompl
inc
xlat
adc
cmpsl
test
addr16
xorb
sub
xlat
mov
push
sub
inc
dec
cmp
notl
insl
out
mov
ficoms
and
mov
xchg
movsb
jle
gs
pop
cmp
pop
ds
jb
mov
mov
xor
push
jns
cs
into
pop
ss
cwtl
pop
mov
xchg
xchg
jbe
mov
dec
mov
jle
mov
or
cmp
fadds
sbb
push
cmp
mov
cmp
add
push
adc
jmp
xchg
or
cmc
mov
stos
pop
movsb
sub
adc
imul
das
jle
cld
mov
shrb
push
xor
leave
int
and
adc
push
xchg
sbb
mov
adc
ljmp
mull
dec
mov
icebp
repz
mov
push
fists
es
mov
add
popa
jnp
pusha
pop
outsl
popf
sub
testb
jg
int3
jge
cld
adc
sbb
push
dec
lret
sti
popl
lods
lret
sub
jg
sbb
sti
or
lods
pop
inc
in
ja
mov
mov
popf
adc
out
push
dec
and
mov
divb
cli
xchg
repz
iret
in
outsl
push
lcall
or
sbb
shlb
mov
jo
int3
mov
and
mov
gs
test
or
cmpsb
imul
sbbb
pop
jo
xchg
shrb
push
pushf
bnd
in
aas
mov
test
mov
loopne
xchg
insl
sahf
leave
push
popf
clc
xchg
hlt
jge
push
ljmp
xchg
xchg
jae
inc
dec
test
cmpsb
sbb
lock
mov
stos
dec
jecxz
add
adc
aam
jnp
dec
mov
sbb
shll
lret
dec
adc
stc
push
mov
xor
notl
cmpsl
stos
popa
aaa
lods
dec
pop
lock
frstor
mov
mov
idivb
imul
iret
std
mov
xchg
pop
das
mov
xchg
outsl
inc
fnstsw
in
mulb
ja
out
int3
push
pop
xchg
and
scas
mov
push
jle
and
ret
add
inc
dec
pop
out
std
test
or
repz
inc
sbb
jne
aaa
shrb
movsb
push
leave
pusha
loope
test
xchg
lods
dec
nop
aam
inc
sbb
ficomps
lods
bound
jle
movsb
les
test
ja
mov
cs
cmp
cmp
jb
add
outsb
cmp
cmp
add
xor
lods
out
xchg
sbb
sahf
testb
mov
push
mov
fninit
push
add
out
sub
loop
int
int3
test
and
xchg
xor
fsubs
popf
jecxz
sbb
pop
mov
out
fs
adc
jne
xchg
pusha
imul
inc
cwtl
lret
xlat
sahf
in
xor
add
mov
popa
lock
jge
dec
lcall
or
cmp
push
jb
and
setno
imull
dec
and
in
clc
subl
jg
or
xchg
adc
stc
or
pop
orb
dec
sbb
mov
jnp
dec
xchg
enter
add
fcmovb
aas
popf
xor
jne
bound
fld
fimuls
xchg
adc
and
mov
orb
mov
rcr
mov
movsl
mov
push
push
jne
pop
cmp
sbb
push
in
xor
fwait
and
cmc
daa
xor
nop
push
dec
pop
fdiv
int3
xchg
es
es
fidivs
dec
pop
adc
call
xchg
add
fistpl
cmpsl
and
adc
adc
xor
pop
sbbl
bound
lods
dec
xlat
dec
inc
inc
int
mov
loope
cmpb
xor
xor
jne
cmp
mov
out
adc
test
pop
icebp
pop
inc
pop
mov
clc
sti
push
hlt
aad
and
and
fsts
movsb
sti
xorb
push
mov
mov
sub
outsl
pop
loop
inc
mov
stos
push
movsb
xsha256
cmpsb
aad
mov
in
int3
popa
cwtl
iret
loopne
cmovs
lret
push
psubsb
into
mov
jnp
cmp
test
fldt
and
lock
into
gs
vmovd
out
dec
inc
fnstsw
ds
jnp
jne
lock
insb
push
into
adc
jae
pusha
div
hlt
mov
mov
jl
xor
cmp
mov
adc
data16
repz
in
or
je
or
out
dec
cmp
jle
sub
jg
ss
mov
xchg
push
and
cs
in
or
aad
cmp
cmp
test
clc
pop
sub
outsl
adc
mov
lahf
inc
fcom
out
popa
sbbl
adcl
push
cld
jecxz
xchg
pop
cwtl
aam
mov
sbb
xlat
mov
inc
mov
aas
push
rcr
add
xor
mov
adc
inc
leave
es
cmp
nop
jb
mov
aad
add
popf
sbb
jns
ret
mov
xchg
or
scas
mov
fwait
insb
stos
inc
sahf
mov
cltd
or
jl
xchg
xchg
inc
int3
adc
cmp
or
addb
mov
daa
outsl
pop
shlb
cmp
or
sub
shr
xor
aaa
mov
into
loope
sub
pushf
push
test
xchg
flds
rclb
add
inc
gs
or
jbe
hlt
jnp
push
jno
shll
testb
notl
cmp
nop
imul
xlat
jbe
cmp
xchg
test
imul
inc
sub
adc
sbb
sbb
add
outsb
adc
and
add
aam
outsb
lds
xor
adc
jno
sub
add
shll
das
repnz
pop
jb
outsb
sub
mov
ret
jnp
xor
xchg
sbb
mov
movsl
inc
nop
or
shll
rcrl
sub
sub
pop
outsb
xchg
les
sbb
out
pusha
and
pop
push
xchg
call
add
popa
inc
push
aaa
dec
inc
and
and
in
adc
lds
loope
add
cmp
sub
mov
push
outsl
out
jo
outsb
jl
mov
mov
mov
jg
mov
or
mov
inc
mov
sub
mov
cltd
xorl
jl
inc
ljmp
sbb
jns
xor
push
and
loop
lods
push
test
orl
xlat
cmp
in
clc
jnp
fbstp
mov
or
mov
cmc
addr16
mov
mov
cmp
arpl
sarb
or
add
out
lret
sbb
cmc
xchg
imul
fdivrl
ds
jne
into
gs
and
mov
jne
cmpsl
insb
jl
or
out
push
jo
rorb
push
dec
aas
pop
icebp
sbb
notb
jns,pt
das
inc
test
das
push
cmp
inc
outsb
ja
test
or
jne
jmp
xchg
xchg
xchg
inc
lds
out
or
mov
mov
rcr
mov
cmc
sbb
pop
dec
mov
pushf
pop
xchg
loop
xchg
mov
adc
movsb
sbb
mov
je
loopne
jp
stos
cmp
pop
inc
repz
sahf
pusha
cltd
inc
mov
fs
push
shlb
fdivs
xor
scas
out
je
add
lcall
enter
pushf
stc
push
jb
or
in
inc
sbb
stos
dec
and
js
sub
add
lods
dec
enter
jnp
mov
jmp
push
fwait
test
imull
and
daa
push
hlt
or
int
lock
nop
shlb
xor
push
mov
in
inc
mov
outsb
cld
fimuls
xchg
scas
js
scas
stc
int3
je
subl
ficoms
add
or
mov
divb
cmp
fldenv
push
cld
fwait
push
mov
imulb
xor
test
sbb
dec
cs
jmp
icebp
popa
adc
add
lock
mov
les
ror
add
das
das
pop
jb
mov
pop
sub
cs
xor
imul
ss
int3
or
sbb
inc
std
jmp
sbb
imul
pop
mov
xchg
add
shlb
test
imul
adc
cli
and
mov
mov
cld
xchg
insl
jge
dec
jb
mov
pop
sti
and
fnstsw
dec
push
cmp
xor
mull
sbb
mov
into
jle
jbe
add
inc
lahf
or
ss
mov
push
ds
xor
or
jnp
cmc
mov
jg
push
loope
sub
inc
and
jb
dec
pcmpgtd
jge
jae
adc
pusha
push
mov
movl
mov
xor
add
iret
xchg
lock
dec
lods
mov
mov
test
and
pop
mov
cli
sahf
dec
enterw
xor
push
fldcw
scas
and
jge
aad
lods
addr16
mov
int
shl
jmp
adc
mov
loopne
inc
pop
ffreep
in
and
and
test
rcrb
sti
push
fidivs
push
adc
mov
and
lea
xchg
ret
mov
sub
sub
leave
fmuls
in
mov
push
cmp
pop
sahf
and
ja
addr16
call
mov
movsb
pop
mov
rorb
es
dec
add
aad
outsl
test
popa
sbb
cmc
xchg
inc
mov
into
inc
dec
pop
push
cli
dec
dec
ja
dec
imul
cmp
sub
in
loopne
adc
shrl
sahf
clc
inc
cli
inc
fdivr
push
cld
lods
int3
mov
xchg
jb
popf
dec
mov
cmp
jp
lods
mov
mov
daa
andb
xchg
in
lret
ljmp
sarl
in
fld
inc
repz
ret
cmc
std
movsl
push
jb
dec
push
test
rcl
xor
enter
shrl
mov
push
push
pop
into
push
ror
mov
pusha
lcall
popa
sar
mov
mov
mov
mov
dec
push
inc
jmp
or
sbb
push
leave
sti
jg
mov
and
sub
fiadds
aaa
lahf
sbb
jnp
mov
xchg
fmuls
fistl
cmp
and
sbb
adc
pop
stos
jae
dec
sub
cltd
xor
lret
pop
add
or
dec
es
ja
movsl
mov
lret
in
lods
inc
inc
xchg
ds
lret
movsb
jp
sahf
pop
jmp
in
pop
push
imul
dec
out
loopne
ja
aas
test
std
jge
and
or
outsl
mov
inc
jecxz
and
or
xor
call
decb
ss
and
mov
test
sub
jecxz
fsubrl
or
fcoml
lahf
jge
or
ficoms
xor
ss
testl
lret
mov
imul
pushf
xchg
test
popa
popa
sub
scas
lretw
enter
jns
or
add
jno
xchg
cmpsl
int
int
xor
mov
enter
movsb
xchg
rolb
push
outsb
adc
and
les
shlb
pusha
aam
leave
ljmp
fcmovnu
xor
stc
out
sbb
sub
into
add
adc
push
insb
sbb
addl
adc
jl
mov
mov
jne
pushf
inc
lcall
inc
pop
or
int
inc
mov
xchg
sub
inc
push
sub
add
xor
stc
lock
int3
sbb
sarl
sub
fimuls
dec
sar
jl
cmp
dec
mov
pop
lods
clc
add
scas
cmpsb
inc
xchg
mov
dec
ss
or
mov
adc
xchg
cs
fsubs
shrb
add
ss
shrl
cli
mov
cmpl
xchg
mov
leave
sbb
shll
repz
mov
dec
fdiv
mov
outsb
enter
cli
shl
or
out
inc
int
and
dec
addr16
cld
mov
xchg
lock
mov
stc
xchg
or
fcmovb
shrl
jnp
xchg
xchg
cmpsl
icebp
lahf
push
mov
aaa
enter
cmp
call
mov
in
sbb
jp
inc
sahf
stos
cmp
adc
in
jmp
sbb
pop
mov
mov
mov
jne
sbb
loop
das
push
jle
repnz
push
cmp
mov
push
movsl
xor
mov
inc
adc
add
jp
jbe
or
les
jns
push
js
jle
add
xchg
repz
and
flds
enter
adc
cmpsb
nop
adcl
xlat
or
add
sub
mov
das
repz
xrstor
repnz
inc
ds
push
and
lods
lods
xor
rcrb
movsb
and
test
dec
xor
cmpsb
int3
xor
mov
push
push
jns
sub
lds
or
push
xor
loopne
adc
aad
insl
movsb
sub
inc
or
icebp
loope
push
pushf
das
cltd
sub
mov
xchg
movsb
dec
fildl
gs
mov
push
mov
ljmp
mov
addr16
call
pop
movsl
sub
scas
fmulp
mov
mov
in
or
jecxz
mov
lock
sub
ljmp
loope
push
int3
rep
mov
aam
aas
add
stc
or
mov
dec
adc
mov
stos
push
insl
sub
aas
lea
cli
out
std
cmp
mov
xchg
push
lcall
sbb
cltd
and
fnstenv
rcrb
xor
jnp
lods
inc
mov
mov
mov
cltd
and
push
mov
cltd
int
jecxz
jnp
fs
insb
inc
jae
aam
das
cmp
icebp
mov
rcl
decb
lret
movsl
xchg
xlat
imul
std
sub
cs
out
dec
js
aam
gs
es
lds
cmc
mov
push
mov
out
aaa
es
mov
adc
adc
les
inc
scas
xchg
iret
lea
lret
outsl
lods
xchg
popf
test
cwtl
sub
sub
inc
repz
lahf
inc
jmp
xor
out
sub
out
inc
int3
arpl
xor
insl
icebp
data16
dec
cs
clc
jnp
test
pushf
addr16
or
daa
jae
aam
or
int
cmp
lock
lret
adc
xchg
scas
mov
sbb
rcrb
adc
push
int
sbb
insl
and
pop
and
sub
mov
int3
dec
call
test
push
rcrb
mov
mov
lret
scas
outsl
add
andb
mov
jmp
fldl2t
xchg
fnstenv
or
adc
test
mov
ret
repnz
sub
jbe
dec
or
jle
shrl
notl
mov
adc
push
cmpsb
sbb
mov
cltd
xor
mov
imul
push
insb
mov
dec
cmp
inc
and
mov
out
adc
inc
cmpsl
cli
and
ja
scas
in
and
je
pop
fsubl
pop
sbb
dec
push
stc
orb
notl
leave
cmp
jno
add
mov
xor
cmp
mov
add
pop
sbb
rclb
pop
pop
cmc
pop
insl
ret
cmp
adc
in
adc
cmp
insb
xor
or
movsl
es
sti
push
inc
fildl
stos
aam
push
cmpsl
add
xor
add
cmc
sbb
add
sarl
sbb
mov
pop
xchg
shlb
push
popa
cld
jg
push
inc
mov
pop
cmp
orb
or
divl
dec
repz
jl
sbb
fcmovbe
call
push
cld
lods
sub
rcrb
movsl
cmpsl
push
jp
lcall
jp
mov
out
es
mov
mov
and
sub
push
cmp
out
cli
loopne
shll
mov
fs
cmp
scas
nop
xor
movsb
cmp
out
xchg
mov
cwtl
or
push
test
sbb
sbb
shll
fisttpl
out
mov
pop
push
push
pop
nop
ffreep
leave
das
lret
out
loop,pt
lea
shr
pop
lods
or
jae
adcl
pushf
fldenv
pop
cmp
outsl
push
sub
loopne
mov
sarb
lods
adc
inc
or
mov
lds
jae
mov
mov
fbld
imul
jns
insb
aas
dec
dec
ret
out
cmpsb
dec
mov
fidivs
push
dec
leave
xchg
pop
ss
push
cmp
sub
lcall
mov
sti
out
push
pop
je
xor
push
dec
int3
cmp
lret
out
and
sub
icebp
push
mov
out
add
cwtl
idiv
loop
sbb
jb
hlt
adc
dec
and
fldcw
add
popf
xchg
push
ffreep
movsb
out
ds
jecxz
pusha
xchg
scas
shl
fldl
pop
or
inc
xor
aaa
xchg
fs
add
jecxz
stc
fsubs
cwtl
and
fldcw
inc
sti
ret
pop
mov
fdivrl
out
outsl
ds
jp
popa
jecxz
mov
test
iret
pop
sbbb
test
data16
imul
mov
xchg
pop
lahf
pop
or
aaa
jnp
cs
and
inc
pop
push
pop
test
insl
xchg
xor
cmpsl
test
imul
jb
pop
jg
into
mov
adc
inc
lret
in
xor
dec
popa
add
subl
and
add
xor
and
pop
cli
mov
shlb
fsubrl
dec
std
push
dec
test
pop
sub
mov
cwtl
or
out
cmpsl
sub
pop
stos
add
mov
xlat
nop
pop
dec
mov
sbb
lds
loop
rol
bound
xchg
mov
cmp
xchg
in
out
add
lret
pushf
sbb
sbb
jmp
mov
lret
clc
mov
lds
adc
jl
add
scas
int
test
stos
mov
jmp
je
sub
cmp
repnz
orb
rolb
les
or
cltd
sahf
in
inc
mov
loopne
rol
in
test
mov
fistl
mov
cli
add
mov
and
out
pop
adc
jnp
dec
mov
mov
mull
xchg
jo
cmp
iret
push
imul
sarl
cli
mov
iret
mov
mov
inc
test
das
ds
repnz
mov
testl
sbb
repz
xlat
loopne
cmpsb
int3
ret
mov
fs
sbb
mov
ficomps
in
iretw
jno
sbb
dec
xchg
adc
test
mov
jecxz
cmp
cmp
pushf
daa
jmp
jo
xor
jbe
insb
push
jmp
call
mov
mov
test
mov
int
das
push
lret
jp
lretw
data16
lock
cmp
sub
imul
mov
sub
movsl
lret
sbb
sub
push
mov
aad
ss
stc
jne
call
mov
popf
insl
sbb
aas
add
mov
mov
push
push
adc
adc
mov
adc
in
mov
cmc
mov
push
add
fs
adc
ret
sbb
inc
dec
iret
out
inc
js
dec
add
test
test
into
filds
xchg
je
xchg
pop
loopne
mov
dec
cld
pop
je
xlat
pop
cmp
arpl
mov
or
sarb
out
aam
fiadds
mov
daa
dec
fdivrl
mov
iret
push
jo
inc
hlt
ja
sub
jnp
xchg
mov
mov
mov
mov
jne
xchg
push
iret
and
daa
sub
lret
addl
sti
orl
and
sbb
repnz
movsl
jl
dec
mov
sbb
pop
sbb
ret
jb
adc
xchg
push
ss
rol
shll
int
push
aaa
into
inc
adc
mov
int3
pop
nop
xchg
jle
stc
call
lods
rolb
mov
fiaddl
mov
pop
mov
pop
outsb
or
xor
das
stos
jl
in
leave
xchg
jno
inc
sbb
js
add
push
jl
mov
add
cmp
mov
jmp
sbb
dec
shlb
pusha
pop
mov
inc
ss
cli
outsb
push
or
mov
mov
jp
aam
bndstx
lret
inc
jle
xor
ss
shll
sub
dec
daa
outsl
jae
pop
xor
popf
mov
mov
xor
and
pop
mov
fwait
dec
mov
xlat
mov
xor
pop
pop
mov
pop
outsl
std
mov
xchg
inc
repnz
jg
int
add
les
std
cmp
xor
into
dec
inc
fdivr
lahf
mov
jb
je
inc
cmpsb
ds
popa
cmp
sub
or
dec
movsb
mov
rcll
pop
xor
xchg
pusha
stos
lahf
inc
pop
pop
lock
test
jbe
xor
xchg
xor
fxch
push
in
lret
jae
mov
and
pop
loope
or
jle
lcall
out
mov
xchg
out
cmp
and
out
sahf
lds
ret
lds
push
pop
je
dec
dec
and
fs
fsubl
in
push
mov
jb
mov
xor
sbb
pop
addr16
enter
clc
and
sahf
loope
nop
xchg
loop
dec
psrlq
out
popf
jmp
or
push
sub
loopne
push
lock
pop
int3
xchg
pushf
xlat
pop
into
repz
cmc
xchg
lcall
xor
pop
inc
fiaddl
cmpsb
popa
neg
sbb
roll
jg
mov
test
xchg
mov
pop
out
lret
push
mov
call
push
jbe
rol
cwtl
mov
dec
cvttps2pi
push
inc
addb
sub
lahf
inc
push
cltd
ret
outsl
stos
stos
cmp
mov
fwait
push
dec
fmulp
mov
test
arpl
xchg
gs
pop
popf
or
jne
sbb
adc
pop
jg
mov
clc
out
jmp
mov
in
faddl
pop
jnp
mov
pop
decb
into
mov
and
mov
add
xchg
push
mov
iret
cmp
clc
sbbl
loope
push
pop
cmp
lcall
je
negb
test
mov
cltd
js
or
sbb
ret
inc
jbe
andb
vcvtsi2sd
pop
aam
aad
in
cmc
fidivrl
push
jne
jae
outsl
xchg
inc
adc
jmp
mov
movsl
sti
cmp
je
rclb
add
insb
leave
rsm
cmp
out
out
sbb
jge
sub
int3
popf
jmp
rcrb
jo
jmp
pop
das
xor
clc
nop
jo
and
jne
pop
in
lahf
xlat
scas
add
push
or
shlb
jmp
out
cmpsl
cs
pop
mov
xorb
enter
pop
out
jg
mov
mov
sub
or
mov
mov
test
mov
sbb
jns
int3
repz
or
in
movswl
add
jo
loop
stos
jecxz
ds
mov
fs
stos
push
lds
or
lods
pop
notb
imul
jge
push
mov
outsb
fstps
les
inc
lds
xor
fidivs
mov
sub
aaa
mov
dec
cmp
in
push
mov
lods
inc
aad
xlat
jb
ret
inc
push
leave
lea
inc
inc
pusha
lods
lods
mov
loope
icebp
cmp
inc
testb
lods
cmp
mulb
sahf
stos
push
pop
pop
hlt
add
imul
lds
jg
jno
cmp
cmp
dec
lods
dec
and
stos
lret
xlat
sub
out
addb
dec
fldcw
pop
xlat
jae
sarb
shl
cld
inc
pop
fiaddl
mov
frstor
push
sar
arpl
pop
in
inc
mov
ret
out
bound
fstps
test
inc
rcl
mov
dec
fsubrs
sbb
push
ljmp
jbe
outsb
xor
out
push
and
sbbb
out
xor
mov
xor
aad
dec
pop
into
jno
shr
orl
or
jp
lods
mov
pushf
mov
adc
addr16
es
mov
xchg
and
leave
cmp
xor
lahf
ss
cmp
cltd
rorb
neg
pushf
shrb
incb
jo
jp
cmp
pusha
add
psubusb
push
xchg
push
imul
pop
inc
outsb
add
cltd
imul
js
xchg
sub
dec
push
in
aaa
enter
outsb
and
xchg
push
ds
push
mov
sbb
orb
mov
jmp
xchg
sbb
pusha
cmp
fwait
jo
xchg
pop
fldcw
xor
mull
jo
mov
aas
es
cltd
cmc
jno
dec
out
xchg
lods
pop
jno
aaa
ds
push
cmp
push
out
mov
inc
and
insb
inc
test
push
cmp
js
sub
lds
jp
stc
dec
rolb
pop
mov
rcrl
outsl
xchg
sbb
lcall
sub
jge
dec
cwtl
xor
cmp
imul
and
jb
sub
cwtl
pop
cmpsl
xchg
sbb
pushf
ret
dec
and
push
push
in
sbb
inc
arpl
lret
push
mov
inc
insl
mov
ds
scas
inc
incb
int3
and
mov
rcrb
andb
and
lods
mov
rolb
test
rcl
es
push
lcall
pop
aad
cmp
scas
pusha
aad
adc
pop
add
adc
jns
mov
add
add
popf
lods
adc
testl
jp
push
mov
push
ficomps
enter
mov
fldl
push
xor
sahf
cs
inc
mov
or
dec
cmp
lcall
pcmpeqw
inc
push
jmp
rcll
out
dec
decb
jl
jne
xor
mov
lcall
cli
mov
out
xchg
mov
dec
dec
sbb
inc
je
ret
aad
ret
inc
repz
rolb
cld
rclb
jecxz
sub
push
mov
fistpll
popf
jge
sahf
pop
ficoms
mov
adc
push
or
das
stc
push
imul
and
jmp
lock
movsb
dec
or
or
mov
jmp
or
xlat
or
push
jmp
and
mov
jmp
stos
add
xor
repz
iret
popf
pop
es
repnz
jmp
outsl
inc
add
adc
add
mov
movsl
mov
sbb
hlt
add
inc
pop
scas
mov
mov
sti
xor
push
push
jle
push
mov
mov
inc
mov
mov
mov
das
outsl
adc
shll
pop
scas
push
push
fnstcw
and
ds
mov
jb
or
mov
test
cmp
jge
adc
movsl
daa
or
mov
or
mov
pushf
adc
xor
mov
imul
jno
xchg
inc
ret
out
fdivl
shll
aas
pusha
jnp
mov
sub
outsb
adc
dec
and
mov
lcall
jns
jl
adc
jno
imul
xchg
pushf
ret
enter
xchg
xchg
jmp
mov
or
jge
nop
data16
outsb
add
leave
mov
imulb
dec
cmp
jns
dec
pop
mov
fs
test
stc
aas
loopne
imul
adc
test
popa
push
cmp
pop
loopne
mov
cmp
push
mov
add
scas
sbbl
ret
sbb
jmp
xchg
out
test
pop
pop
ds
gs
test
or
push
xlat
mov
iret
repnz
push
pushf
fs
int3
mov
popf
pop
push
add
mov
repz
jb
inc
lret
inc
inc
cmp
daa
push
jno
inc
dec
shr
mov
adcb
cmp
mov
orb
jns
xor
aaa
sti
xchg
add
mov
cmp
outsl
cltd
mov
mov
sub
dec
add
rcll
mov
sub
stos
test
lock
repz
ret
hlt
or
mov
fcmovnbe
xchg
cmp
mov
sub
flds
inc
adc
or
in
test
fcompl
loopne
bound
sahf
mov
les
sbbb
jnp
lods
add
loope
inc
mov
aas
pop
in
xorl
lcall
mov
or
popa
sub
pushf
pop
adc
mov
jmp
repz
in
mov
xchg
add
rorb
adc
and
xchg
daa
mov
aam
psubusb
std
pop
das
jb
ljmp
movl
out
inc
sti
les
inc
inc
loope
popa
nop
mov
add
mov
adc
nop
push
mov
test
fisubrl
or
out
adc
sbb
out
movsl
dec
sub
dec
jbe
cwtl
daa
xor
xor
push
xchg
adc
sbb
add
xchg
test
ret
test
lds
mov
popf
or
das
xchg
sub
lahf
sahf
jge
sti
mov
xchg
sub
jno
xchg
push
mov
push
cltd
sub
xor
inc
sub
fucomip
icebp
jmp
xchg
mov
xor
fldt
xchg
jo
and
test
cmc
stc
test
jl
inc
dec
test
lcall
ja
fcoml
xor
popf
xor
xchg
jg
jl
out
mov
orl
push
fidivl
dec
sub
mov
ret
and
xchg
jg
dec
pop
pop
sahf
pop
mov
and
and
cmp
xchg
mov
jecxz
mov
mov
sbb
cmp
pusha
mov
mov
test
dec
pop
xchg
js
pop
cmpsb
cmp
int3
mov
les
push
push
xchg
mov
les
clc
and
cld
dec
and
in
jb
ljmp
inc
and
les
loope
out
dec
les
push
cmpsl
call
xchg
arpl
popa
mov
fstpl
arpl
dec
pushf
xchg
xchg
imul
inc
es
mov
inc
mov
hlt
data16
adc
pop
lret
sub
ljmp
in
jle
push
mov
stos
or
popa
or
sbb
mov
cli
iret
repnz
outsb
js
fsubp
jecxz
or
sub
insb
ljmp
mov
insb
and
std
add
inc
inc
jnp
enter
lret
sahf
scas
jmp
rcrl
cli
jns
mov
andl
fs
inc
or
in
std
gs
call
dec
fstl
inc
stc
sub
mov
out
mov
mov
dec
cli
pop
cmp
cmp
call
cmp
mov
mov
stc
and
and
cmp
cmp
ja
mov
popa
cld
push
xchg
cld
mov
cmp
out
dec
jno
lock
xor
test
inc
sbb
js
dec
popa
sub
mov
or
divl
andb
pop
dec
cmp
ljmp
xor
rcl
imul
lock
mov
push
loopne
sub
jp
pop
shl
dec
mov
adc
test
inc
jg
stos
lds
fbld
mov
scas
jl
mov
mov
outsl
lcall
inc
dec
mov
les
pusha
add
push
cmp
lock
arpl
fimuls
insb
cmp
jecxz
aad
push
dec
pop
mov
sbb
lcall
mov
scas
loope
mov
notl
or
sub
and
shll
fs
ja
aas
imul
inc
sub
cs
mov
lds
fldcw
stc
adc
dec
scas
sbb
jl
adc
mov
and
leave
leave
dec
or
cmpsl
popa
mov
push
mov
int3
inc
jbe
or
subl
fists
mov
dec
les
repz
cmpsl
jmp
adc
aas
movsb
jecxz
or
loop
jmp
lock
lret
sbb
fidivrl
cwtl
in
mov
das
lods
adc
or
inc
es
je
pop
lock
fisttpll
pop
in
dec
pop
rclb
dec
add
push
and
mov
aaa
adc
lret
adc
mov
pop
clc
popf
push
add
pop
in
lahf
jno
inc
sti
mov
test
xor
test
mov
jle
lds
pop
cltd
pop
sub
sub
add
dec
pop
cmp
in
stos
fadds
popf
divb
les
xchg
pop
inc
dec
loope
movsb
icebp
xor
and
mov
and
addw
or
or
int3
cltd
push
xchg
call
jmp
mov
adc
xor
lods
inc
push
push
and
or
scas
jb
pusha
fiaddl
and
mov
inc
das
and
push
cltd
sbb
lds
out
mov
outsb
and
push
stc
jle
sub
xchg
adc
loop
test
mov
sub
mov
mov
pop
hlt
xchg
pop
push
add
and
pop
sbb
jle
dec
clc
bound
sub
mov
push
lcall
aaa
out
cmp
pusha
ljmp
jns
mov
pop
test
mov
mov
sbb
adcb
mov
popf
dec
loope
push
xorl
xorl
xchg
xorl
imul
and
pop
jmp
jo
mov
and
aam
xchg
jo
lds
or
pusha
test
hlt
fdivrs
jbe
jp,pn
aas
push
and
stc
and
jno
call
hlt
repnz
dec
push
inc
movsl
xchg
add
jns
and
fs
or
pop
out
daa
repnz
mov
pop
cwtl
out
adc
dec
lahf
pop
popf
popl
sub
inc
fs
cwtl
jg
or
stos
repz
adc
cwtl
xor
xor
ret
push
and
es
shrl
cwtl
cmp
sbb
les
pop
mov
mov
jg
mov
mov
mov
cld
in
cmp
fstl
rcrl
mov
fidivs
push
test
pushf
dec
pop
dec
lahf
mov
dec
faddp
cmpsl
dec
cld
loope
pushf
aaa
movsl
add
popa
ds
aam
push
cli
cli
js
mov
adc
sub
cs
fdivrp
jb
mov
mov
inc
mov
repnz
stc
cmp
ss
dec
in
xor
hlt
push
push
cltd
imul
cwtl
xchg
insl
dec
dec
ljmp
ljmp
sub
dec
test
push
int
xchg
sbb
add
aas
cltd
cmp
sarb
jp
cs
mov
cltd
pop
call
sub
jns
pop
outsl
shrl
outsl
aad
lret
mov
shl
lods
push
or
xchg
roll
hlt
xchg
adc
fnstenv
mov
mov
les
xor
nop
insl
jae
mov
xor
fistpll
sub
mov
decl
dec
in
fdivrl
jecxz
shll
jmp
repnz
in
stc
jg
rcr
pop
mov
mov
or
mov
mov
inc
gs
and
in
push
sub
shll
xchg
mov
inc
jle
out
push
xchg
mov
sbb
lcall
jns
aas
push
mov
cmp
sub
dec
dec
pusha
ljmp
loope
aas
lret
sti
pusha
cwtl
push
outsb
xchg
inc
lret
dec
pop
into
sahf
or
call
fstl
sub
arpl
mov
leave
xchg
xor
out
or
mov
outsl
xchg
subb
jl
setnp
lods
push
into
dec
ja
add
cmpsb
pop
loop
ret
cmp
push
lahf
push
mov
repz
lods
mov
nop
jge
neg
xchg
sahf
insb
mov
fstps
iret
sti
inc
inc
mov
fsubrl
inc
into
test
ds
sub
leave
cmpsb
xchg
cld
add
aam
jg
sbb
mov
add
lds
sbb
aam
stc
outsb
fwait
add
loopne
sahf
add
clc
inc
adc
mov
inc
push
stc
xlat
sarb
lods
in
test
cmp
repz
add
push
add
cld
clc
cwtl
mov
jecxz
jl
sbb
js
in
sbb
mov
aam
push
xlat
repz
cmpsl
out
leave
mov
mov
adc
mov
jl
stos
xlat
push
aad
test
addb
outsl
or
rol
mov
dec
andl
push
adc
jp
add
add
int
xchg
dec
cmpsb
lret
push
xor
test
ret
fnstsw
mov
sub
rclb
negl
cmp
push
sbbl
mov
ja
dec
mov
lret
es
dec
dec
ljmp
pop
dec
fisubs
or
sahf
push
negl
daa
ror
mov
mov
mov
in
clc
bound
sub
lds
ds
decl
lds
dec
lahf
fldt
jecxz
cmp
push
sbb
jb
mov
add
mov
jg
jo
lock
xor
xor
notrack
aas
loope
pushf
test
mov
dec
add
call
out
rcrl
xchg
sub
mov
jge,pt
icebp
adc
inc
call
jno
jbe
cmpsl
gs
bound
repz
dec
fldl
push
rorl
push
repnz
xor
dec
dec
call
and
adc
movsb
jecxz
mov
jb
shl
sbb
push
sbb
add
pop
cli
push
cltd
outsl
popa
sbb
scas
cli
andl
dec
out
sarl
popa
dec
xchg
sub
rcrb
cmc
mov
push
clc
in
xor
mov
add
adc
mov
lret
sub
outsl
mov
mov
lods
test
cvtpi2ps
ljmp
pop
je
sbb
add
aaa
push
inc
inc
or
in
xchg
push
mov
push
decb
xchg
cmpsb
adc
pop
rcrl
xchg
test
fidivrl
jle
xor
sub
jl
or
xchg
jge
sahf
jle
dec
hlt
xchg
sbb
in
xor
add
sbb
je
sti
cmp
inc
stos
push
cwtl
fimuls
loopne
pusha
sbb
insb
jle
bound
sub
lret
push
mov
push
jge
shll
sub
dec
mov
lret
cmpsb
daa
sub
fmulp
adc
shlb
push
jnp
pop
mov
jnp
cs
pop
jp
mov
sub
inc
pushf
cmp
jmp
jl
sbbl
clc
or
dec
rorl
sbb
hlt
leave
pop
cltd
mov
pop
xchg
dec
pop
xor
cmp
dec
add
add
clc
inc
sub
cmp
fmull
das
shr
sub
push
outsb
or
or
stos
sbb
sub
xchg
push
jb
aad
mov
test
inc
push
imul
inc
cld
mov
push
lock
outsl
daa
call
cmp
scas
iret
sub
loop
bound
or
dec
stc
add
scas
sti
aaa
and
add
xor
push
xchg
push
push
ret
dec
jp
movsl
inc
pop
bound
sbb
adc
lret
test
jno
xchg
jg
mov
cld
xchg
in
loope
cld
push
daa
cmc
push
xor
lcall
lret
or
cltd
and
outsl
add
pop
fistl
js
mov
xlat
mov
ret
ret
mov
sub
cmp
pop
incl
dec
adc
and
mov
mov
test
lahf
sub
iret
sbb
cld
cmp
rorl
mov
and
push
pop
sbbb
sub
jns
mov
xchg
insl
mov
ljmp
icebp
inc
and
sub
lods
push
or
and
inc
ret
sub
fdivrl
rol
movsb
adc
int3
test
stc
inc
jae
pop
jo
jg
lret
divl
popa
popf
pop
aam
xor
rcrl
inc
mov
xchg
xor
arpl
and
js
ss
sub
and
pop
mov
pop
clc
pop
lods
inc
dec
mov
arpl
arpl
xor
lods
inc
fstpt
jb
lods
lahf
arpl
lcall
jl
clc
jbe
inc
enter
xlat
dec
lods
sbb
into
cmp
jb
int
out
rcrb
push
lock
inc
add
js
sub
and
subl
add
cltd
or
shrl
lret
ss
mov
xchg
xchg
jge
cmpsb
dec
or
cmp
ljmp
ss
xchg
or
repz
mov
xor
and
jno
mov
das
sbb
scas
cmp
mov
jge
xlat
repz
fmull
jno
cmp
sahf
jnp
in
jg
push
ja
lock
cmp
repz
mov
call
xchg
push
sub
mov
out
pusha
lods
inc
push
inc
test
in
pop
or
mov
mov
mov
int3
loopne
scas
and
xchg
ljmp
cmpb
cld
mov
mov
mov
inc
arpl
adc
inc
and
sbbl
lock
add
pcmpeqw
mov
xchg
ret
rcl
mov
add
and
push
adc
lods
in
stos
test
fcompl
or
mov
lret
mov
mov
push
js
bndstx
nop
jns
orb
xchg
sub
pop
add
iret
negl
jmp
out
and
ror
pminub
cmpsl
test
sbb
mov
adc
jp
pusha
add
mov
jl
inc
fcoml
mov
stc
nop
cmp
or
dec
fs
cld
test
inc
cmp
lods
inc
rcrl
push
rol
mov
stos
and
sbb
inc
adc
dec
jo
popa
in
push
and
call
jmp
inc
aaa
mov
les
in
loop
sbb
push
and
aaa
or
xchg
xchg
sbb
fucomip
rolb
sub
cmp
add
jge
inc
arpl
add
sub
mov
pop
xlat
or
sahf
fmull
orb
ljmp
jo
outsb
push
shlb
mul
iret
scas
push
fsubr
sti
mov
stc
mov
or
outsb
test
adc
jecxz
mov
mov
gs
and
inc
adc
lahf
jl
inc
or
cli
cmp
push
cmpsl
jge
cmp
mov
sub
cs
insb
enter
fmuls
xchg
xchg
cmp
fisubl
mov
mov
lea
ret
push
jle
outsl
es
fwait
pop
in
rclb
xchg
cmp
mov
into
add
arpl
bound
enter
inc
or
sbb
jp
pop
ljmp
push
mov
xor
hlt
cmp
js
cmc
mov
lret
sbb
out
xor
rcrb
sub
lret
jno
mov
adc
mov
shrl
pop
in
lret
mov
arpl
sub
push
mov
mov
sub
fdivl
rcrl
mov
insb
in
sbb
xor
cmp
rcrl
stos
or
es
or
add
popa
scas
sub
adc
loope
mov
jns
insb
popf
push
add
imul
lret
sbb
xchg
push
das
mov
das
and
dec
dec
push
mov
arpl
inc
mov
js
xor
loopne
arpl
xor
pop
mov
adc
scas
sub
or
loope
test
repz
cltd
jg
push
cmp
jo
test
ja
lcall
notb
inc
fstps
mov
popa
jmp
push
subb
or
adc
cmp
mov
fsin
aaa
mov
and
in
test
icebp
es
loope
sub
jo
pop
add
xor
fdiv
scas
add
xorb
or
cmp
std
inc
fimuls
push
test
push
test
repz
pop
hlt
mov
clc
sahf
into
mov
sbb
shr
mov
and
fbld
adc
pop
bound
xchg
pop
cmp
fstpt
sub
int3
test
pop
adc
das
mov
xlat
adc
scas
mov
ja
gs
and
fidivl
xchg
and
out
lods
mov
hlt
mov
mov
roll
aad
xchg
inc
mov
repz
sbb
jno
mov
jns
int
xor
cmpb
push
inc
addr16
push
xchg
xor
jns
xor
js
fwait
call
cld
imul
fnsave
pop
xor
push
inc
aas
data16
add
insl
or
mov
mov
mov
xchg
and
std
push
sub
nop
hlt
popa
mov
xor
cmp
xchg
fucomip
mov
decb
dec
lods
dec
inc
pop
je
sub
shr
repz
sub
adc
jmp
sub
jb
in
mov
mov
lret
nop
test
pop
mov
jmp
xchg
or
daa
adc
aaa
out
cld
pop
pop
stos
jne
cli
xchg
xor
call
rolb
hlt
ret
rcrb
jnp
push
xor
pusha
test
and
sub
push
push
jmp
ja
dec
aam
insl
cmpsl
ret
pushf
in
pop
imul
inc
pop
sub
cmp
sub
in
test
outsl
sub
inc
mov
cmpsb
sbb
aaa
add
aaa
push
jmp
out
mov
stc
xor
cmp
mov
out
shl
sub
stc
push
imul
dec
cs
adc
aas
movsl
or
lea
cmpsl
nop
or
add
loop
js
mov
gs
call
out
js
out
cld
dec
in
push
fnstsw
push
push
into
outsb
jno
cltd
out
or
mov
dec
and
jle
add
clc
pop
repz
es
jo
fsubrl
test
jno
xchg
or
gs
jbe
lods
inc
mov
cmp
and
pop
es
mov
pop
add
out
arpl
dec
shrb
repz
sub
sub
jbe
inc
rcr
mov
out
push
lret
add
mov
mov
out
adc
stos
movsl
int3
mov
dec
jb
clc
je
mov
adc
jno
mov
rorb
and
lock
or
jge
push
jbe
int
dec
sarl
dec
mov
dec
dec
ficoms
shrb
cmp
mov
loop,pt
pop
outsb
insl
addl
lods
aad
int3
pushf
nop
push
cli
mov
mov
ljmp
and
nop
test
jmp
cmc
iret
mov
inc
rolb
fwait
push
adcl
push
pop
hlt
add
mov
fcomps
inc
pop
int
scas
push
mov
sbb
sahf
icebp
cmc
into
loopne
stc
or
pop
insl
inc
shl
dec
nop
adc
pusha
loope
dec
push
shlb
jne
xchg
aas
adc
ror
push
loop
jne
mov
dec
test
cld
push
test
or
xchg
sbb
sbb
inc
mul
jnp
mov
test
filds
xchg
clc
dec
sbb
hlt
sbb
in
adc
outsl
les
movsb
mov
dec
sub
outsl
je
pop
jmp
nop
mov
inc
push
inc
out
rorb
inc
sbb
push
push
inc
jno
ja
mov
mov
ljmp
mov
int
inc
mov
pop
icebp
rolb
sbb
das
insb
mov
rol
js
cli
in
mov
clc
ja
push
incb
cmpsl
adc
jmp
lods
push
loopne
and
xor
test
rcrb
les
xor
jmp
adc
inc
fcmovb
hlt
adc
adc
pushf
lods
outsl
push
in
insb
outsl
rcll
js
mov
test
les
push
in
push
outsl
push
adc
xor
das
pusha
pop
cmp
push
or
imul
sbb
andb
imul
lds
in
mov
fisubl
test
test
popa
jno
mov
lods
cmpsl
aam
fcomip
pop
cld
jle
jecxz
lcall
sbb
xor
sub
push
jns
mov
cld
or
mov
xchg
shll
sbb
add
shlb
xchg
fistl
fs
jle
arpl
fwait
and
and
fsubl
popa
ja
ja
das
test
cmp
sbb
loopne
mov
cmpsb
lock
mov
push
mov
imul
and
fstpt
mov
xchg
mov
mov
add
insl
inc
cwtl
sub
push
std
sbbb
pop
dec
pop
addl
inc
mov
icebp
xchg
add
testl
ret
jmp
xlat
or
aad
lock
js
sub
out
mul
jmp
movsb
mov
fsubr
nop
mov
xchg
out
sub
jecxz
movsb
jb
lea
xchg
scas
nop
outsl
stc
xorb
adc
sbb
adcl
jecxz
jae
loope
dec
sub
imul
xchg
jle
scas
xchg
cmp
leave
add
jecxz
push
rcrb
fisubs
lahf
pop
or
cmp
dec
and
cmp
data16
mov
fiaddl
aam
fimuls
xchg
inc
push
repz
mov
jbe
repz
stos
adc
add
hlt
int
sbb
mov
imul
icebp
dec
lret
loopne
xchg
imul
add
outsl
test
mov
das
ret
cmp
add
add
inc
pop
inc
add
sbb
and
scas
pop
jmp
mov
xor
in
fisubrs
cmp
insb
lods
outsl
sbb
jmp
ss
push
sub
pop
xchg
repz
roll
mov
hlt
sbb
aam
or
test
jp
xor
xchg
cmp
ret
jp
mov
mov
stos
adc
lahf
pop
fs
bound
popa
xor
scas
into
xor
and
jbe
fcmovnb
sub
sub
pop
mov
aad
cs
jmp
ja
jnp
loop
mov
icebp
pop
dec
mov
call
pop
dec
stos
jmp
in
mov
jmp
es
and
push
gs
jg
push
cld
xchg
shl
jns
mov
bswap
lret
jae
or
mov
pop
adc
int3
mov
shrl
dec
cmp
sub
push
lret
or
test
cmp
jb
mov
jns
mov
mov
push
sbb
or
or
imull
nop
das
or
jmp
pop
gs
dec
cmp
in
pop
ret
cwtl
aam
aam
mov
push
adcb
imul
lods
popa
jmp
pop
in
cmpsl
pusha
mov
cmp
clc
dec
jl
in
inc
stc
sahf
cmp
popf
jns
jo
daa
test
sbb
cmpb
pop
aad
xchg
addr16
test
cmp
clc
lods
and
mov
xor
push
mov
jle
insl
loopne
mov
outsl
gs
scas
inc
icebp
cli
sbb
mov
xchg
add
add
dec
mov
push
mov
mov
push
inc
pop
insl
stc
shl
pop
icebp
adc
add
psllw
xchg
pop
jmp
movsb
push
inc
movsb
push
sahf
add
inc
push
sbb
ret
mov
pop
dec
and
lea
mov
mov
pop
aad
push
mov
stc
int
sti
dec
dec
imul
imul
or
xor
test
lret
push
sub
or
ret
rcl
push
mov
ss
adc
stc
pop
sub
mov
aaa
jle
js
inc
xchg
popf
pop
mov
lret
aam
jb
add
iret
cmp
add
and
sar
out
jge
scas
push
cli
dec
ds
or
jo
and
ffree
push
lcall
int
dec
inc
cld
leave
cld
addr16
fwait
lea
scas
dec
push
adc
jp
and
pop
and
push
dec
cmp
scas
mov
orl
cmc
jle
push
imul
lods
into
sub
sub
test
mov
imul
adc
mov
cmp
push
pop
outsb
cli
ja
adc
sbb
sahf
ret
mov
jbe,pt
add
sahf
int
movsb
fucomp
mov
sbb
and
test
or
mov
std
adc
rcll
mov
cmpsb
pop
out
ljmp
js
ret
test
inc
push
ljmp
call
adc
fdivrp
xchg
adc
scas
push
lahf
mov
into
rcrl
in
jmp
leave
daa
push
dec
xchg
cmpsl
jns
loopne
pop
cmp
stos
in
or
xor
dec
and
lods
nop
out
shlb
cmp
aaa
jle
aad
pop
mov
pushf
cs
sbb
mov
sub
push
mov
popa
cmp
mov
je
push
push
or
mov
daa
int3
xchg
jmp
xchg
dec
mov
mov
cmp
push
mov
ja
push
fs
cs
lea
add
mov
cltd
test
mov
sbb
ss
mov
lea
or
stos
ret
fists
in
sub
xlat
repz
jle
int
cmp
and
mov
adc
or
cld
mov
pop
les
movsb
jnp
fdivl
and
mov
jg
in
jo
xor
sbb
lea
add
add
mov
lahf
hlt
cmp
add
mov
mov
push
inc
test
ficomps
lods
mov
push
mov
xchg
add
cmpsb
jbe
arpl
shrl
shll
sub
bound
aad
push
lret
out
jle
into
or
mov
cwtl
das
push
pop
movsb
pop
mov
pop
fisubrl
sub
inc
outsl
push
xor
pop
lea
test
cmp
mov
sub
lret
dec
add
fdivl
loop
and
stos
xchg
jg
add
loopne
push
sub
add
jo
mov
pop
mov
push
adc
shlb
andb
adc
dec
cmp
gs
mov
mov
bound
and
mov
jbe
imulb
in
jne
out
and
jecxz
stos
inc
xchg
add
sbb
dec
push
jg
xchg
xor
test
pop
sahf
icebp
mov
shr
and
js
xchg
add
ljmp
mov
and
inc
jmp
xor
das
cmp
add
jmp
xchg
push
mov
or
adc
jo
enter
mov
shrl
or
mov
and
jmp
sub
pop
and
stos
shrb
leave
fstps
xor
iret
pop
out
push
jle
sarb
subl
mov
out
sbb
icebp
dec
jp
sahf
enter
mov
int3
adc
gs
aaa
mov
jb
lahf
arpl
sarl
pop
sbb
icebp
jbe
bound
inc
test
push
mov
and
xor
or
add
push
notb
cltd
dec
cmpsb
idivl
sub
in
ffree
inc
push
add
xchg
fsubs
or
leave
fs
inc
sub
popf
or
ljmp
ljmp
fwait
jmp
cltd
xor
jae
lcall
jecxz
cltd
adc
add
push
mov
gs
jmp
cmp
ret
inc
jg
faddl
add
mov
ss
leave
imul
inc
loope
cli
mov
notl
daa
shlb
sub
iret
cmpsl
out
mov
pop
dec
lods
cmp
scas
repz
inc
fnstsw
test
adc
mov
movsb
add
mov
stos
jnp
push
jle
dec
mov
cmpb
and
imul
inc
xchg
or
lods
push
sub
ss
ss
add
data16
lods
mov
rorb
mov
and
nop
pop
call
cli
shl
mov
int
pop
out
fisubs
adc
inc
movsl
hlt
mov
inc
mov
add
movnti
mov
imul
xor
push
daa
add
or
sbb
sub
arpl
push
bound
jge
std
add
sub
push
fnstenv
or
repnz
sbb
dec
push
ja
nop
out
dec
divb
add
mov
xchg
out
pop
sahf
aam
ljmp
dec
fnstenv
xchg
mov
jp
scas
scas
xchg
sub
pushf
xor
xchg
mov
fistps
xchg
xchg
push
jmp
out
std
sbb
mov
jmp
xchg
adc
scas
or
mov
jb
imul
js,pt
ljmp
jmp
out
popf
jg
fcmovnu
scas
pop
pop
mov
add
add
lcall
jno
jg
sbb
push
cmp
stos
inc
int3
pushf
dec
ret
jbe
test
mov
jmp
sbb
push
inc
mov
pop
das
fmulp
add
cmpsl
js
leave
jb
mov
sarb
xchg
cmp
dec
mov
pop
sbb
mov
push
mov
jnp
xor
or
mov
stc
mov
ret
mov
mov
call
add
mov
xor
in
in
aaa
push
push
je
jmp
or
pop
and
shlb
cmpsl
ret
xchg
mov
sub
push
mov
and
dec
push
pop
pushf
std
add
dec
cmp
adc
in
repnz
mov
mov
sbb
mov
fbstp
daa
or
pop
sahf
or
inc
out
lds
add
sbb
push
dec
add
cmp
xchg
xor
mov
shrl
shll
or
aad
xchg
xor
and
pop
xchg
rcrl
cs
repz
in
sbbl
sbb
jle
test
std
sub
adc
xor
mov
inc
pop
addr16
adc
push
mov
iret
cltd
outsb
aas
clc
xchg
adc
jl
dec
push
lods
test
xchg
or
dec
push
jg
sub
jl
mov
mov
mov
mov
nop
xor
and
sub
sub
mov
and
aas
and
repz
cmpsl
call
add
icebp
dec
out
mov
cltd
mov
popf
cmp
sbb
inc
push
sbb
mov
xchg
aam
lcall
loop
push
roll
push
aas
lea
push
in
ret
adc
aas
cmpsb
popa
mov
or
or
mov
jl
pop
mov
push
or
jle
repz
cli
ljmp
dec
ja
mov
ja
jns
sti
push
insb
adc
les
loope
add
xor
push
inc
nop
cltd
mov
jmp
lahf
cltd
fwait
mov
cmp
pop
ss
fcom
or
iret
je
dec
lods
pop
cld
mov
xlat
stos
mov
dec
sahf
xorl
sbbb
sub
das
in
mov
push
fldcw
outsb
cmpsl
dec
xor
or
adc
hlt
or
fbld
mov
push
repnz
lock
frstpm(287
clc
scas
push
jns
aaa
outsb
add
nop
lret
aas
xor
cwtl
gs
scas
xchg
xor
orl
inc
add
xchg
mov
lock
imul
adc
mov
fstpl
int
mov
adc
add
jnp
pop
inc
shl
movsb
inc
jl
scas
mov
xlat
pop
hlt
ja
adc
sub
mov
mov
mov
das
mov
and
dec
cmc
and
inc
cmp
jnp
pop
cmc
out
iret
stos
mov
and
decb
pop
hlt
inc
xor
mov
les
lahf
ljmp
adc
leave
popa
into
sbb
or
xor
mov
scas
subl
imulb
mulb
mov
adc
push
idivl
in
clc
adc
iret
mov
pop
mov
out
out
sub
cmpsl
fdivl
adc
sarl
bound
jnp
or
inc
popf
pshufw
adcl
inc
imul
jg
pop
daa
mov
pop
dec
or
pop
daa
pop
mov
xor
mov
mov
mov
push
mov
or
push
mov
fcmovne
xlat
sub
sbb
and
and
pop
xchg
add
rclb
adc
incb
movsb
sbb
jg
mov
rcrl
mulb
sbb
push
xlat
xchg
adc
xchg
cmc
push
sbb
aam
cmp
stos
jo
mov
xor
dec
lret
std
sti
push
and
fsts
cmp
popf
je
in
int
pop
cmp
xchg
adc
push
pop
imul
mov
adcl
jecxz
andb
mov
and
mov
insb
inc
fcompl
sbb
add
cltd
inc
jle
xchg
in
div
fucomi
sbb
outsb
fcomip
ret
dec
xor
adc
dec
cmp
roll
xor
xchg
push
xor
shr
inc
mov
pusha
int
jmp
aas
add
push
scas
xchg
cmp
in
adc
mov
and
jl
shll
sub
out
call
out
sbbl
mov
cmp
fs
bound
lret
stos
loope
dec
filds
mov
pop
cmp
lcall
cmpsb
push
sub
xchg
gs
addr16
xchg
lods
outsl
cltd
testl
pop
pop
or
aam
and
push
xor
daa
add
fs
mov
arpl
mov
sbbb
or
and
int
ljmp
pusha
int3
sbb
cld
icebp
in
cmpsl
adc
shlb
pop
mov
jo
cmpsb
sbb
in
mov
rol
jmp
adc
jmp
jnp
nop
pop
inc
movsb
cmp
movsl
ds
sbb
aam
jg
fldt
add
xor
dec
cmp
lcall
dec
in
pop
insl
xchg
xor
ret
mov
push
nop
inc
popa
ret
pop
fwait
pop
lods
mov
loopne
data16
jp
mov
mov
jne
adc
cmpsb
push
mov
int3
in
mov
mov
hlt
cmpsl
cmp
outsl
mov
fcmovnb
jp
dec
sbbb
js
lret
lock
movsb
xlat
xchg
aam
mov
cmpsb
cmc
add
adc
shrl
xor
push
cltd
sub
fs
sti
fwait
mov
jmp
add
jbe
cmp
les
cwtl
pop
add
push
outsb
push
push
mov
leave
vmread
lods
xchg
repz
and
call
movsl
sbb
je
jg
stc
push
mov
outsb
jmp
call
int3
inc
sub
mov
pop
jne
xor
pop
aas
dec
lea
push
in
sti
repnz
movsb
enter
adc
sbbb
ret
or
inc
inc
dec
and
fistl
gs
inc
mov
ja
enter
repnz
test
lods
mov
cmp
mov
push
adc
lea
stos
jp
jne
hlt
enter
adc
push
mov
mov
push
cmpsb
fsubrl
mov
sub
inc
sub
push
mov
testb
hlt
out
sub
ljmp
icebp
adc
lock
inc
ja
xchg
pop
cmpsl
jecxz
jecxz
pop
mov
jbe
outsb
or
dec
mov
hlt
mov
int
lods
push
add
imul
pxor
cwtl
add
pop
in
push
mov
xchg
mov
in
cltd
sbb
xor
dec
and
mov
mov
orb
sti
movsb
and
nop
mov
test
push
test
cltd
or
test
mov
xchg
dec
push
adc
mov
cmpsl
loop
add
jno
push
je
xchg
dec
cmc
jae
fisubs
out
push
fs
gs
xor
inc
and
mov
or
mov
xchg
call
mov
std
nop
add
mov
push
adc
add
push
add
rclb
xchg
jp
jo,pn
fwait
je
inc
jg
andl
cmc
test
push
xchg
aaa
js
adc
xor
and
call
adc
popf
shll
add
int3
xor
cmpsb
imul
mov
xchg
or
decb
jle
jge
mov
lds
lock
xor
lret
mov
outsl
dec
add
sub
in
das
cmpsb
fucomip
fnstsw
out
ja
push
test
mov
loopne
in
xorl
or
sub
add
dec
sbb
dec
jmp
fstl
xchg
push
pop
mov
idiv
mov
or
push
icebp
andb
mov
pop
and
xlat
ss
cltd
test
popa
jecxz
sub
pop
mov
sub
lret
inc
pop
ret
and
test
in
xorl
add
inc
imul
mov
in
in
sti
icebp
bound
pushw
ds
cltd
mulb
jmp
iret
pop
sbbl
xlat
or
sbb
or
es
mov
in
pop
adc
dec
insl
cmp
gs
adc
mov
mov
push
out
scas
cmc
cmp
std
stos
hlt
stos
test
sub
pop
lahf
inc
stos
shlb
xchg
and
inc
in
hlt
cmp
rcrb
iret
xor
outsl
jl
int
leave
std
pop
hlt
out
arpl
stos
fs
jle
mov
inc
fs
fstps
mov
fists
push
xor
rcr
jmp
dec
ja
icebp
call
lret
fmuls
add
dec
insb
hlt
mov
cmp
test
sbb
mov
fildll
xchg
lock
push
in
cmp
inc
mov
cmp
inc
push
mov
arpl
mov
xor
fidivrs
push
add
dec
pushl
sub
jl
sbb
adc
add
dec
jno
sti
mov
push
loop
pop
and
mov
xchg
xor
cmp
inc
cmp
ja
sbb
mov
aaa
dec
sub
xchg
sub
xchg
sarb
mov
push
cmp
ret
xchg
fisttpll
push
rcll
push
jne
test
aad
pop
imul
lahf
mov
xor
jne
cwtl
pop
aaa
pop
mov
dec
pop
repnz
sub
add
pop
imul
jle
xchg
mov
stos
jmp
jp
sub
lods
pop
out
push
lret
cvtpi2ps
sub
and
dec
inc
popa
hlt
mov
cltd
adc
pop
xor
lret
cmpb
rclb
lret
cli
mov
test
cld
dec
sahf
mov
push
lods
dec
adc
shrl
adc
dec
dec
fisttps
out
sub
pop
jmp
shrb
int3
add
outsb
sub
aad
dec
dec
or
fstpt
xor
push
adc
lods
sahf
test
inc
cmp
push
sub
sub
mov
lcall
sahf
shrl
pop
lret
mov
call
or
out
adc
in
pop
mov
loop
stc
jmp
aaa
nop
ret
xor
sbb
fisubrl
mov
and
pop
xchg
cmp
out
sub
movsb
lea
aaa
pop
das
mov
mov
and
icebp
jbe
js
sbb
mov
test
mov
push
and
outsl
inc
ds
mov
push
pop
mov
cmc
les
jp
hlt
xchg
sub
jb
mov
shufps
in
sahf
xor
push
sub
or
sahf
mov
sahf
pop
sub
jno
adcb
add
cli
sbb
inc
imul
push
and
ret
stc
mov
dec
xor
cld
push
and
imul
or
xchg
test
pop
fwait
pop
ds
or
push
movsl
xor
push
test
sbb
mov
outsl
pop
loope
push
adc
adc
arpl
xchg
add
lds
sbb
fcoms
jb
add
popf
test
or
lods
push
aas
loop
cwtl
pop
cmp
insb
sub
inc
cmp
push
out
sub
in
jno
out
loopne
insl
sub
dec
insb
idivb
in
decl
pop
mov
mov
jge
and
cld
xchg
clc
and
sbb
in
sbb
xchg
mov
test
mov
push
add
xchg
sti
cmp
mov
push
mov
push
xchg
jo
mov
jmp
incb
fldenv
push
dec
or
mov
stos
bnd
repnz
cmovns
sub
outsb
lock
push
imul
mov
fnsave
addr16
loop
pop
xor
lret
or
ret
in
dec
scas
pusha
dec
inc
sub
and
decl
xchg
popf
nop
gs
jb
ja
lret
jb
xchg
mov
jp
inc
in
mov
subl
inc
mov
xlat
xchg
add
aas
jb
xchg
incb
adc
lret
out
lock
insl
sbb
xchg
les
xchg
mov
push
fstl
orl
xor
pop
mov
mov
int3
ljmp
cmpl
aaa
movsb
pop
leave
mov
repnz
ja
movsb
imul
adc
inc
sbb
pop
jmp
adc
rolb
dec
mov
mov
testl
or
sub
mov
incl
in
or
sbb
or
je
lods
mov
cli
sub
xchg
js
mov
movsl
scas
mov
int
xor
jg
std
repnz
sbb
in
pop
jle
cmp
in
mov
and
push
out
jecxz
jl
push
jns
out
imul
scas
push
add
push
aad
adc
jo
mov
jnp
xor
xor
adc
push
mov
sub
data16
popf
cmpb
aaa
sub
mov
inc
push
mov
push
pusha
stos
mov
leave
fnstcw
fcomi
stos
jg
in
mov
lcall
push
pop
cmc
xchg
ds
pop
fs
popf
jl
repz
test
adc
xchg
and
test
xchg
pop
arpl
add
cmp
aam
jns
aas
jp
or
fnsave
stc
test
cld
jmp
roll
stos
ljmp
mov
jae
mov
scas
cmp
and
xor
dec
lcall
cmp
stos
sub
rclb
notl
loope
jg
in
push
pop
daa
lret
ret
pushf
dec
stc
roll
shlb
sub
sub
pop
mov
push
and
lea
in
iret
lahf
xchg
movsb
call
xor
sti
xchg
ret
cmp
ss
jle
pop
inc
bound
loop
aas
enter
or
xchg
stc
sarb
pop
dec
sbb
lea
vmovaps
fisttpl
pop
jmp
cld
xchg
xchg
sbb
push
movsb
jl
sbb
sbb
or
popa
lret
mov
pop
lret
push
pop
and
xchg
lods
jmp
ret
sahf
inc
out
ja
cwtl
ljmp
je
hlt
jecxz
ja
adc
xor
add
frstor
lret
fldl
lds
lret
xor
inc
popf
mov
adc
or
jecxz
mov
icebp
insl
mov
mov
std
sarl
cmpsb
jns
and
sbb
lds
add
clc
loopne
fcmovnb
loope
hlt
aam
push
pop
adc
or
scas
dec
xchg
or
repnz
push
in
push
add
xchg
jl
repz
jnp
loop
cmp
aad
mov
lret
mov
ret
hlt
jle
cltd
inc
in
mov
mov
pop
jg
sbb
push
imul
into
daa
das
mov
insb
andb
fnstenv
push
mov
pop
push
cmp
pop
and
lret
mov
mov
and
stos
cmpsl
mov
ret
in
std
ffree
leave
pop
pop
dec
mov
data16
out
xor
pushf
jg
push
lcall
fdivs
cwtl
push
stos
cwtl
data16
pop
lods
gs
das
push
mov
add
arpl
les
call
xor
fsts
mov
mov
cmp
dec
int
aam
sahf
xor
orb
mov
mov
stos
outsb
arpl
fiaddl
cs
mov
push
in
rcrl
mov
jecxz
scas
insl
adc
mov
repz
jno
xorb
nop
out
clc
xchg
or
bound
push
mov
imul
icebp
addr16
shr
leave
jge
or
cs
je
mov
and
int
mov
sahf
push
mov
popf
jne
sbb
in
mov
ret
xor
and
xchg
dec
sbb
out
pop
pop
mov
lahf
and
in
inc
shl
sub
mov
cmp
add
fwait
push
das
jle
pushf
arpl
leave
movsl
mov
adc
sbb
popa
orl
std
xchg
sub
iret
pop
mov
mov
cs
push
loop
mov
cmp
pop
pop
je
sub
ret
mov
pusha
hlt
dec
or
adcb
and
push
jb
xchg
movsl
in
test
test
and
cmp
sub
adc
mov
aaa
pop
sub
fbld
dec
ret
xchg
insb
test
inc
out
std
ljmp
loop
orl
lods
out
nop
shlb
les
adc
sub
les
out
lods
std
ss
scas
inc
ficompl
sub
xchg
pushf
jne
inc
and
mov
add
lods
rorl
imul
xchg
int
cwtl
cmp
ret
outsl
add
imul
mov
clc
push
cltd
movsb
pop
dec
cmpsl
add
inc
mov
icebp
fstpt
test
loopne
int
or
pop
xor
bound
inc
lahf
sahf
push
mov
dec
mov
out
sti
dec
lods
shl
in
mov
pushf
in
ljmp
mov
dec
aaa
sbb
sti
jbe
mov
dec
sub
ljmp
add
js
iretw
and
cmp
lea
sub
pushf
fs
and
adc
xchg
sbb
testl
cmp
mov
bound
push
ja
dec
fildll
or
lahf
stos
cmp
adc
leave
fwait
sbb
ds
sbb
mov
add
leave
imul
je
inc
pop
fwait
sub
and
push
inc
xchg
sub
sub
fnstenv
ret
insl
xor
pop
cmp
sarl
repz
xlat
loop
push
fidivrs
cli
cmp
pop
jmp
outsl
mov
jno
mov
push
out
stos
shrb
cmpsl
ret
adc
sub
or
sbb
out
mov
dec
out
dec
loop
pop
pop
xchg
in
inc
gs
gs
std
sub
jg
push
cs
xchg
pushf
cli
lcall
and
test
and
adc
das
out
lret
mov
shll
fwait
imul
icebp
mov
inc
sti
adc
or
mov
loop
ja
dec
shl
inc
pop
ds
cmp
cmp
movsl
cmp
adc
sub
add
call
popf
stc
fstps
adc
jbe
fisubrl
inc
adc
jne
fiaddl
inc
add
adc
inc
pushf
xor
xlat
and
sub
push
syscall
fwait
lock
je
cmp
scas
xchg
or
mov
push
jo
scas
int
shrl
test
add
outsb
pop
out
lods
dec
fnstenv
in
scas
inc
test
inc
sahf
mov
sbb
mov
cmc
cmp
jecxz
testl
ja
or
jp
popf
jne
xor
outsb
or
inc
shlb
add
push
mov
inc
sbb
ret
push
pusha
ret
xor
es
jb
lods
jno
movzwl
es
inc
fcomps
aas
xor
pop
sbb
subb
aas
sub
les
mov
mov
std
loope
lods
inc
sub
lret
pusha
es
rol
xchg
test
cmp
jnp
mov
cmp
jb
ret
inc
sbb
inc
js
pop
outsb
out
in
xchg
pop
insb
mov
movsb
cmp
mov
jno
mov
mov
jg
pop
fs
fsubr
mov
arpl
es
cmp
sbb
sarl
mov
out
adc
dec
jnp
or
imul
pop
ljmp
sub
cs
mov
xchg
mov
test
or
add
fcoms
mov
out
mov
xchg
dec
ljmp
dec
mov
cmp
enter
pop
xchg
sahf
mov
xchg
in
insl
xchg
test
jmp
fidivs
cmp
jge
sbb
ret
mov
sub
xchg
loope
jnp
fcomps
sahf
aam
aam
pop
out
call
and
subl
add
and
fists
sbb
fmuls
imul
fimuls
sbb
lock
and
inc
les
imul
nop
imul
mov
jb
fwait
sub
roll
sub
or
mull
push
jle
mov
mov
mov
divl
jge
mov
scas
in
sub
iret
xchg
mov
loop
out
retw
pop
pop
and
fsubl
push
aas
jo
data16
sbb
or
scas
jns
ja
movsl
mov
pop
prefetch
or
xchg
sub
sbb
cs
jecxz
xchg
lcall
pushf
insb
aam
inc
pop
mov
imul
adc
dec
or
mov
test
adc
push
inc
and
pop
gs
out
jge
lods
subl
xorb
aad
jl
mov
xor
fistps
insb
pcmpgtd
dec
arpl
hlt
scas
add
mov
int3
fs
enter
push
fimuls
das
mov
and
pushl
jo
mov
sti
cmpsl
jg
push
aad
sbb
mov
imul
jle
adc
outsl
inc
push
jo
add
pushf
jmp
fdivl
add
repnz
ficoml
es
sub
dec
inc
or
sbb
xchg
repz
jge
sbb
xor
decb
test
insb
sbb
xchg
jo
aaa
xchg
ds
xor
into
ret
cmp
dec
dec
push
das
push
dec
xchg
inc
add
mov
ds
and
cmpsb
and
jmp
rclb
je
icebp
pop
out
and
xchg
insl
pop
nop
mov
dec
mov
popa
mov
insb
sub
fldl
push
pop
pop
cmc
cmp
sbb
icebp
sub
movsb
lret
push
gs
out
cmp
dec
fistpll
cwtl
and
enter
mov
sbb
cmpsb
arpl
mov
adcb
dec
arpl
push
mov
jle
cmc
xchg
push
dec
dec
push
mov
cmp
sbb
pop
pushf
and
scas
inc
add
fisttpll
sahf
lds
in
neg
dec
ds
cmp
ljmp
out
dec
xchg
xchg
mov
hlt
ret
inc
xchg
clc
xchg
inc
loop
mov
jmp
loopne
mov
pop
mov
cmp
cmp
mov
out
sub
lds
pop
push
mov
scas
rorl
fxch
xor
push
add
out
mov
daa
jo
lahf
negl
mov
outsl
repnz
rclb
pop
sbb
aad
movsb
fsubrs
leave
push
int3
xchg
xor
inc
sbb
push
dec
dec
test
dec
xor
xchg
mov
fwait
push
loop
or
inc
es
addr16
aad
in
or
cltd
mov
out
dec
fxch
nop
sarb
icebp
push
loope
add
push
leave
dec
les
insl
imul
adcl
push
in
and
lds
sahf
gs
dec
sbbl
xchg
mov
repz
jg
push
cs
xor
add
xchg
test
and
push
int
mov
push
add
addl
or
pushf
testl
xor
iret
or
je
jmp
fstl
repnz
add
inc
mov
mov
inc
mov
xorb
jecxz
mov
dec
inc
sub
jle
xchg
add
mov
adcl
cmp
pop
xchg
pop
scas
push
xlat
in
jne
out
inc
les
ja
pop
pop
xchg
xchg
mov
sbbb
scas
popf
cld
jmp
pop
loope
jae
pop
adc
inc
pop
sbb
mov
shrl
and
movsb
stos
xlat
sbb
mov
sbb
repz
xor
imul
mov
fisubrl
insb
mov
dec
add
je,pt
jmp
jb
xor
and
adcb
les
cmp
rclb
jb
mov
mov
xor
subl
jle
ud2
cmpsb
inc
dec
repz
popa
sub
push
add
mov
test
gs
push
mov
jno
xor
test
imul
fisubs
aam
pusha
and
lahf
daa
popa
sti
push
sub
data16
adc
mov
loopne
or
scas
mov
or
or
or
jne
mov
mov
inc
jo
fwait
shlb
inc
test
pusha
cmp
pop
insb
fisttps
dec
loope
out
or
add
lods
ret
enter
jl
inc
outsl
fstpl
in
pop
cli
dec
fildll
loop
fadd
mov
hlt
in
pop
sbb
jl
jl
lock
add
xchg
les
insb
shll
xchg
cld
xchg
add
fsubr
inc
incb
int
imul
xchg
jp
dec
dec
dec
dec
aam
cmp
jmp
mov
xchg
ret
pop
sub
jae
sub
cli
xchg
mov
lock
in
scas
add
add
adcl
imul
sub
addr16
insb
sbb
xchg
sub
mov
sub
testl
cli
xchg
rorb
lods
dec
pop
mov
cmc
rorb
mov
cltd
adc
mov
sbb
and
aaa
pop
in
inc
mov
mov
outsb
in
xor
insl
inc
ljmp
rcll
adc
sub
and
sub
into
adc
fimull
push
outsb
repz
imul
aam
mov
dec
mov
rolb
rol
imul
fsubr
in
cld
mov
fistl
sbb
arpl
outsl
jb
jns
lock
push
test
add
fcoml
scas
imul
sub
repnz
xchg
inc
stos
mov
mov
outsb
fs
jne
sbb
scas
and
mov
adc
or
int
pusha
shrl
xor
sahf
ja
test
mov
lahf
js
out
popf
fcompl
mov
gs
cmpsl
fsts
or
xor
out
cmp
cmc
cmpsb
fadds
push
jge
in
xor
dec
shll
xlat
and
lret
mov
jae
inc
push
sbb
rcrl
inc
cli
inc
xor
addr16
push
pop
aas
and
fs
mov
push
aam
fisubs
loope
push
jbe
leave
jecxz
data16
push
out
mov
sbb
rorl
sub
sbb
jo
mov
dec
lods
xchg
dec
add
cltd
repz
push
inc
into
adc
fld
pop
push
scas
add
cmp
mov
push
and
mov
sub
xlat
mov
clc
sahf
or
fs
stos
xchg
dec
shlb
push
push
cs
scas
mov
mov
daa
cli
fs
jae
clc
pop
mov
in
fsts
and
lret
mov
fwait
icebp
sbb
das
test
aam
movsb
dec
lret
loope
movsl
in
scas
inc
sbb
jp
fmull
mov
xchg
jo
mull
inc
and
jae
aam
cvtps2pi
fwait
cltd
adc
loope
mov
xchg
dec
fs
clc
popl
xchg
cmp
and
arpl
dec
icebp
cmp
jne
cld
xchg
cmp
lahf
jne
mov
jge
sub
fwait
fsub
and
cwtl
std
cmp
in
add
cwtl
sbb
jnp
out
mov
pop
lds
push
dec
aas
subb
and
movb
dec
inc
dec
std
into
leave
in
out
addr16
and
test
adc
mov
cltd
mov
lock
call
xchg
fwait
sbb
inc
mov
or
repz
add
pop
aas
addl
into
jbe
jns
popa
pop
push
pop
pop
or
pop
pop
cltd
and
int
pop
cmp
flds
pop
xchg
nop
in
jne
cmpsb
xor
ret
mov
aad
adc
mov
int
mov
cmc
xchg
xchg
inc
sub
fbld
push
pop
inc
lea
notl
ret
mov
pop
ror
dec
and
jae
dec
out
in
lods
dec
xor
icebp
aas
xchg
lods
fwait
addr16
adc
in
and
inc
jae
mov
and
fwait
cmp
pusha
cli
lret
adc
enter
inc
fldt
inc
pop
mov
and
cld
jnp
repnz
mov
test
nop
push
jmp
rcrb
mov
pop
andb
sbb
add
or
cmpsl
cmp
or
fwait
out
push
stos
insb
rcr
ja
mov
jbe
mov
jecxz
dec
fnstenv
call
stos
in
xor
lock
and
je
sbb
cmp
scas
pop
cmp
dec
daa
adc
inc
mov
and
mov
jg
dec
mov
insl
icebp
xchg
ljmp
xchg
mov
lahf
mov
ret
xchg
pop
mov
xlat
repz
fwait
ds
cld
xchg
xchg
fistpl
mov
mov
loop
enter
push
divb
aam
sahf
nop
jb
xlat
ja
movsb
mov
pop
lods
add
push
sub
sahf
xor
lret
into
mov
rclb
mov
scas
ret
arpl
movsb
mov
add
out
dec
push
repnz
inc
int3
lods
inc
das
mov
lret
xor
bound
rolb
fnsave
repz
out
out
cmp
cmpsl
imul
adc
das
fbld
test
and
fnstenv
nop
das
cmp
rorl
add
jno
inc
pop
out
ja
jnp
outsb
inc
jbe
std
push
adc
adc
mul
fistpl
bound
imulb
daa
xor
stc
jo
or
mov
sub
outsl
dec
pop
mov
sbb
jne
or
sbb
xor
movsl
dec
jp
insb
outsl
outsb
mov
insl
fistps
es
push
test
addr16
daa
inc
sub
cltd
xor
dec
pop
mov
sbb
aaa
sub
inc
popa
iret
push
mov
lcall
jo
in
push
dec
pop
das
addr16
dec
test
and
cmp
mov
xchg
outsb
call
js
mov
inc
ja
aaa
pop
push
and
jbe
and
mov
in
dec
call
dec
pop
sbb
mov
xchg
dec
mov
imul
das
mov
clc
mov
jnp
lds
dec
comiss
jno
add
outsb
addb
rol
inc
mov
pop
jmp
loopne
inc
and
addb
fldt
xor
loopne
cmp
clts
pushf
scas
test
adc
scas
repz
and
sub
scas
xchg
pop
or
andl
enter
inc
pop
sub
sbb
ds
outsb
insb
pushf
push
mov
mov
jo
mov
shrl
int
push
mov
cmpsb
push
dec
add
call
push
pop
or
mov
loopne
imul
jne
cmp
fildll
sbb
call
ret
adc
test
inc
out
and
in
jmp
lea
xchg
ljmp
insb
lahf
loop
cmpsl
shr
je
mov
sub
inc
push
cld
sti
inc
gs
push
test
ficoms
clc
or
or
pushf
xor
dec
stc
popf
mov
enter
bnd
add
mov
jne
cmp
push
push
lods
adc
fnstsw
mov
push
aad
dec
and
sahf
pop
fldl
sarb
or
mov
bnd
and
cwtl
push
mov
xor
cmc
mov
mov
int3
add
lods
shrb
inc
xlat
mov
lret
pop
mov
sub
test
imul
cs
inc
inc
mov
into
cmp
dec
xor
mov
icebp
mov
mov
mov
mov
xchg
cmp
loopne
push
call
mov
stos
xchg
xor
sub
mov
push
sbb
out
push
cs
cltd
gs
pop
cmp
ds
dec
mov
mov
dec
ret
ret
and
and
movsb
jp
imul
sbb
pop
and
loope
add
shlb
mov
adc
jge
je
xor
cmpsl
out
dec
and
pop
popa
lock
lcall
push
fsts
and
fucomp
jno
lods
imul
inc
push
xchg
and
sbb
sbb
movsb
es
out
xchg
das
mov
push
dec
add
es
je
adc
push
lods
loop
in
filds
xor
push
dec
mov
xchg
rorb
dec
pop
and
mov
cmp
pop
repnz
lock
sub
cmpsb
out
roll
lds
adc
cmpsl
or
sbb
pop
loopne
or
inc
dec
loopne
test
mov
cmpsb
in
loopne
insl
adc
lds
push
js
or
mov
shl
andl
je
sub
lea
cld
push
cli
mov
dec
out
adc
cmp
mov
ficoms
and
fdivl
shlb
stos
jle
lea
mov
dec
inc
sub
jp
iret
insl
lods
or
pop
xor
aas
and
add
and
je
pop
xor
jbe
mov
sub
std
or
aam
cmp
rol
pop
push
mov
loop
call
pop
jo
mov
xlat
insl
aam
xor
mov
cmc
ret
arpl
shlb
enter
cmp
shr
jae
mull
sbbb
loop
scas
lcall
andb
mov
adc
dec
sub
push
incl
aas
push
cmp
xchg
xchg
test
insb
lods
pop
adc
push
jbe
and
test
cmpsb
repz
mov
jecxz
push
jbe
aas
pop
mov
pop
rcll
lods
push
lahf
and
aam
cmc
add
xchg
mov
pop
inc
sbb
movb
ja
stc
js
mov
pop
cli
xchg
push
dec
loop
cmp
bound
fsubrl
lret
lret
add
sbb
call
push
xor
sbb
call
fsubl
test
jge
outsl
sub
arpl
jae
xor
pop
popa
xor
jmp
push
inc
mov
mov
mov
dec
stos
mov
sub
leave
mov
decl
and
shll
dec
test
jp
and
mov
jg
das
or
shrl
jl
in
mov
lret
iretw
andl
cli
cs
scas
sbb
bndstx
sub
jle
cmpsb
mov
pop
sub
adc
enter
rcl
or
push
hlt
test
cmpsl
or
imul
xchg
dec
jbe
and
pop
in
pop
push
incl
dec
mov
dec
xor
inc
sub
push
das
pop
clc
mov
inc
sbb
loopne
or
bound
je
push
mov
fsubr
xchg
push
inc
push
push
jge
cmp
sbb
fwait
pop
cmp
add
push
jno
push
in
add
dec
mov
aaa
mov
xorb
hlt
and
pop
xchg
mov
xor
in
sti
ret
jae
push
mov
in
pop
aam
dec
push
mov
xor
pop
sbbl
adc
adc
and
js
shrl
jp
inc
andl
xchg
pushf
dec
pop
mov
insb
and
gs
inc
lret
mov
scas
push
out
rol
and
lods
js
push
in
leave
js
ds
sti
lret
mov
mov
adc
lret
ret
fmulp
into
push
mov
andb
mov
aas
push
dec
jmp
jns
and
aam
pop
mov
lds
shrb
jmp
icebp
pop
mov
cmp
inc
cmpsl
mov
addr16
insb
push
in
fcmove
movsl
nop
in
shlb
push
jb
int
aam
dec
mov
push
lret
adc
mov
es
pushf
ljmp
mov
jno
into
hlt
in
xchg
pop
cmc
push
out
outsl
xchg
call
out
movsl
ret
add
sahf
push
xchg
pop
int3
les
in
enter
push
jmp
outsl
aaa
jae
lret
cmpsl
and
mov
cltd
lret
mov
dec
add
lcall
lcall
lret
push
push
testb
je
pusha
push
jmp
mov
cmp
out
out
loope
fimull
mov
push
xor
push
pop
xchg
scas
mov
jae
stos
pop
mov
insl
notl
xor
lds
jb
push
mov
adc
adc
inc
outsl
push
jae
jae
jno
lea
or
pop
ret
adc
fldt
xchg
cmp
push
rcrb
cmp
aam
out
mov
inc
in
sbbl
pop
and
sarb
call
pop
js
ja
call
and
push
or
push
test
repnz
push
dec
xor
fidivrs
dec
ja
and
and
push
jbe
xor
cli
or
dec
daa
cmc
pop
mov
or
imul
addr16
cwtl
inc
mov
jns
test
js
scas
loop
frstpm(287
test
imul
or
sub
mov
ss
hlt
lds
cmp
xchg
mov
ret
jge
jge
jle
in
addl
add
xchg
scas
jmp
rcll
mov
movsl
cmp
or
cmp
les
dec
mov
cld
ret
repz
ja
mov
les
jecxz
push
xchg
jmp
ret
pop
scas
xchg
mov
jg
xor
rcl
enter
jp
cmp
dec
cmpsb
xchg
xchg
pop
imul
jmp
xchg
sub
mov
xchg
push
sub
cmp
subb
pop
fsubrl
les
popa
push
jecxz
or
mov
pop
dec
push
pop
pop
mov
mov
aam
int3
loopne
dec
fwait
mov
cmpsl
sbb
movd
popa
push
lock
orb
rcll
fsts
add
mov
push
pop
xchg
mov
imul
cmp
cmpsb
pop
ret
xchg
mov
mov
mov
jno
xor
sub
and
pop
push
mov
stc
dec
inc
xlat
sbb
xchg
dec
cmp
mov
push
out
test
jb
mov
inc
lods
daa
out
pop
outsb
jmp
cmp
lock
aas
pop
out
xchg
lods
pushf
hlt
pop
lds
sub
xor
sub
pop
mov
sbb
les
jle
adc
pop
cmp
je
mov
mull
into
outsl
sbb
mov
sahf
dec
xchg
or
pop
adc
cmp
ficoms
outsl
push
mov
jge
flds
and
out
inc
stos
add
sahf
cmp
xchg
push
pop
jnp
xchg
js
pushf
cmp
divl
push
scas
push
mov
mov
lret
cltd
cmp
test
xchg
cld
and
dec
stc
pop
rdmsr
or
cwtl
jp
xchg
inc
mov
movsb
or
movsl
sbb
pop
pop
and
out
daa
repnz
out
bound
inc
cmp
mov
xor
mov
push
faddp
ror
or
outsb
push
lods
int
or
mov
rolb
sti
inc
pop
hlt
movsl
fbstp
jns
pop
mov
or
icebp
adc
test
aas
dec
push
shl
lds
push
addb
cld
mov
xchg
sub
sub
mov
add
sub
pop
fidivrs
cs
gs
mov
mov
lahf
icebp
or
pop
push
outsl
cmp
jns
movb
push
data16
sti
pop
sbb
and
mov
pop
int3
movsb
imul
scas
lock
mov
add
loop
faddl
andb
repz
mov
in
pop
rep
lods
jo
xchg
cmc
jge
fisttpl
inc
jne
imul
sbb
subl
sahf
aas
fiaddl
popa
movsb
sbb
test
push
pop
ret
pop
lret
les
mov
pop
ret
pop
inc
popf
inc
les
out
in
das
iret
test
pop
add
mov
outsb
pop
add
clc
ret
outsl
iret
popf
xor
andb
scas
es
mov
addr16
cmp
iret
sub
push
test
pushl
movsl
bnd
sbb
jmp
and
dec
xor
out
sbb
sub
mov
loop
adc
mov
fisubs
sarl
sub
shlb
popa
dec
pop
sub
ret
fisubs
adc
sbb
fldenv
into
or
jmp
test
pop
cli
frstor
iret
mov
mov
sbb
add
int3
cld
sbb
insl
stc
aas
push
cmp
pop
out
fildl
pop
cmp
iret
mov
jne
dec
and
stos
mov
fsubp
test
in
jne
adc
push
mov
js
and
cmpsl
fidivs
test
shl
pop
js
push
inc
mov
es
mov
push
mov
pushf
pop
push
adc
adcb
jbe
imul
pop
pushf
imul
sahf
lods
daa
cmp
sbb
ret
jecxz
imul
lods
pop
and
insb
outsb
pop
push
inc
xchg
mov
mov
xor
mov
stos
outsl
cmp
les
lret
mov
lds
testb
lea
and
mov
sub
adc
adc
jno
hlt
jge
ret
cmp
subl
outsb
loope
lds
xchg
xchg
xchg
sub
outsl
pop
cmovge
mov
jo
cmpsb
les
jne
je
pop
xor
fprem
iret
lea
adc
aas
ljmp
push
lret
mov
mov
pop
pop
fstl
pop
popa
pop
mov
or
aad
pop
scas
and
nop
sub
out
shlb
ret
sbb
xchg
sbb
dec
push
and
cli
loopne
ret
push
mov
cwtl
lods
loope
loope
dec
push
ljmp
jg
and
sbb
mov
mov
sub
push
fbstp
scas
dec
cmpsb
push
adc
ror
jb
add
dec
pop
and
pop
popf
inc
dec
movsb
xchg
push
sub
dec
fcoml
in
xor
xchg
test
sbb
add
mov
rclb
pop
dec
lock
xchg
xor
popa
daa
pause
push
mov
mov
and
cmp
xchg
add
sbb
lods
popf
sub
jnp
cmpsl
outsb
mov
fisubrl
sub
xchg
mov
scas
cmp
fldl2e
aas
lods
leave
push
aam
xor
sub
jne
jne
in
stos
sub
sbb
pop
sahf
stos
push
imul
jae
leave
xchg
push
lcall
pop
andl
adc
enter
fisubrs
xor
in
ret
pmulhuw
vmovsldup
dec
push
jg
and
notl
dec
pop
sbb
mov
in
mov
xor
dec
shrl
pusha
jecxz
push
dec
out
push
cmp
enter
aam
xchg
mov
and
mov
xchg
ds
mov
dec
push
iret
jbe
xchg
mov
fwait
xchg
xor
mov
repz
rorl
ja
add
arpl
inc
call
movsl
test
jecxz
push
cmp
in
enter
rcr
lretw
scas
jo
xor
std
js
in
sbb
add
popf
xorl
or
push
sahf
add
test
outsb
pop
adcl
or
jne
sarl
lods
hlt
mov
fistl
repnz
mov
scas
call
pop
fldcw
xor
outsl
shll
or
xchg
or
jle
outsl
subl
fadds
mov
push
lods
xchg
mov
test
insl
cwtl
add
out
arpl
lret
pop
jmp
dec
mov
mov
mov
sbb
or
fnstsw
mov
iret
in
mov
mov
or
sarl
mov
cs
ds
jbe
xchg
jbe
fwait
into
and
aas
dec
mov
sti
xlat
lea
je
loope
adc
inc
fstpt
add
enter
sub
sti
mov
rcr
add
andl
stc
repz
popa
rcr
push
lret
call
cli
cmc
jge
jae
jno
lret
push
push
fisubrl
icebp
xchg
mov
cli
add
lret
mov
jns
ret
cmpsl
andb
pop
test
add
imul
and
jo
cmp
sub
sub
mov
scas
out
inc
pop
pop
fimuls
addr16
cwtl
shl
js
scas
not
push
js
xchg
lods
push
sbb
push
mov
xorb
movsl
popa
or
js
jb
arpl
dec
mov
jp
mov
add
test
mov
mov
jno
shr
adc
add
out
int3
mov
or
arpl
scas
loopne
mov
rol
xchg
sub
call
int
mov
push
mov
adc
add
stos
cmp
sub
dec
xchg
and
cmp
mov
sbb
push
xlat
insl
mov
fdivp
push
push
sbb
fidivrs
out
cmp
outsl
mov
adc
lea
in
fs
aaa
mulb
xor
movsl
cmp
push
movsl
outsl
dec
repz
repnz
dec
cmpsl
lds
jp
dec
mov
fucomi
inc
cwtl
das
jb
in
sbb
jbe
movsl
test
movsb
mov
jecxz
add
sub
dec
inc
push
jecxz
mov
mov
cli
adc
mov
fcomi
ret
insb
xchg
fnstsw
cwtl
or
mov
push
pop
pop
stc
nop
cmp
pop
adc
test
mov
push
mov
xchg
pop
test
jge
aaa
movsb
aas
and
int3
cmp
lret
out
rcr
xor
mov
bound
mov
fcomp
mov
mov
mov
mov
lods
pushf
das
ret
dec
dec
int
in
push
lahf
cmp
out
xor
fsubrs
fwait
mov
divl
testb
adc
inc
add
jle
dec
dec
or
shlb
sub
dec
sub
jne
sbb
mov
fnstsw
add
push
fwait
jno
fldt
jge
and
xchg
xchg
test
mov
int3
aam
add
repz
ret
repz
sbb
scas
and
xor
adc
in
inc
or
push
push
movsb
sub
ss
vdivsd
xor
fldcw
adc
mov
inc
inc
pop
or
fldl
mov
adc
sbb
pop
adc
mov
test
repnz
pop
icebp
xor
pop
and
cmp
mov
gs
xchg
in
popf
stos
xchg
loop
hlt
adc
mov
int
jnp
test
insl
lret
test
sub
lcall
jne
mov
test
sub
push
popf
mov
xchg
add
dec
sub
sub
ja
sbb
cmpsb
lea
lcall
ss
inc
lcall
and
fcoms
cmpsb
pop
testb
sahf
int3
or
sarb
add
push
mov
ficoml
sub
rcr
or
leave
add
push
insb
mov
pushf
cmp
xor
sbb
adc
jae
or
sahf
push
push
mov
xchg
leave
xchg
aaa
push
movsb
gs
insl
shrb
andb
xchg
movsb
mov
aam
loopne
movsl
mov
mov
into
aad
mov
inc
out
enter
xchg
cs
xchg
adc
repnz
loop
cld
es
jmp
or
cmp
xchg
push
dec
loop
in
jp
cltd
int3
imul
sahf
adc
xchg
mov
stos
addl
or
or
outsb
stos
mov
pop
jl
pop
cmp
mov
into
lds
imull
push
and
jns
aaa
and
pop
hlt
jnp
adc
mov
inc
out
push
push
out
or
adc
lods
mov
add
hlt
dec
stos
dec
es
jae
inc
push
jp
pop
je
sub
mov
cmp
outsl
inc
imul
xor
add
test
in
sub
dec
ds
dec
rol
in
int3
fmuls
ret
ret
frstor
std
xor
and
cmp
fstl
stos
inc
or
pop
lahf
gs
and
sbb
push
dec
mov
loopne
jge
inc
push
adc
lods
loopne
rorb
out
pop
test
adc
jge
xor
je
xlat
sbb
scas
outsb
std
cmc
into
cmpsl
mov
idivl
addps
and
arpl
mov
mov
pop
add
mov
or
bound
fists
push
pop
ret
iret
popa
bound
jl
es
xlat
in
mov
outsl
insl
xchg
cltd
cmp
shrb
jg
or
int
pop
sbb
dec
fucomip
mov
mov
sbb
ret
sti
inc
mov
test
rorb
ret
sbb
mov
dec
or
jae
jmp
pushf
incb
shlb
or
ss
sub
mov
in
or
push
adc
mov
jle
adc
dec
xor
xor
sbb
push
lds
ss
arpl
sub
hlt
adc
scas
fstpt
adc
adc
adc
sub
mov
sbbl
imul
icebp
jl
inc
mov
enter
outsb
lods
jle
sbb
dec
cmpsb
or
sub
pop
out
in
cltd
push
sti
cmp
mov
rcl
aad
movb
dec
sbb
and
add
sub
mov
dec
push
lods
mov
mov
inc
pusha
shll
bound
hlt
jmp
push
fsubs
aaa
jae
inc
pop
adc
push
fptan
push
mov
addb
cwtl
mov
fwait
inc
adc
fsubrl
pop
mov
cltd
or
add
rorl
leave
jg
call
mov
push
lock
jbe
cmp
arpl
push
sbb
fs
sub
fwait
lahf
lds
dec
mov
add
aad
cmp
fwait
aas
js
lods
cmp
jge
mov
notb
dec
sbb
fcoml
in
add
addl
and
in
dec
adc
movsl
jnp
dec
scas
sbb
xor
iret
stos
in
ficoml
lcall
sarl
inc
test
int3
adc
inc
test
xchg
push
xchg
cmpsl
pop
pushl
out
fisttpl
mov
or
imul
push
clc
adc
lods
sbb
stc
add
in
test
roll
jle
or
xor
sti
sbb
adc
dec
shll
mov
xchg
jbe
fwait
adc
lock
adc
push
shlb
je
paddb
mov
xchg
scas
lock
mov
imul
sub
int
das
jbe
xchg
xor
cltd
adc
push
pop
adc
fstpt
bound
or
or
mov
insl
mov
adc
dec
roll
xor
mov
adc
jp
arpl
pop
leave
sahf
fnsave
lock
stc
lret
jns
push
mov
sti
sub
imull
inc
sub
mov
pop
dec
fldenv
inc
sub
sarl
pop
pop
outsb
mov
int3
scas
xchg
cmpsb
push
in
shll
adc
mov
dec
xorl
add
out
jl
ljmp
xor
add
ficoml
aaa
push
mov
mov
cs
inc
mov
subl
adc
pop
repnz
xor
and
sub
iret
add
push
push
frstor
dec
movsb
fmul
rcrl
xor
dec
repnz
lods
test
push
scas
push
movsb
popf
insl
jge
xor
jb
shlb
mov
adc
lret
cmpsb
cmp
pop
lock
xchg
incl
std
leave
inc
arpl
into
lret
lock
test
xchg
xchg
ss
inc
divl
shrb
adcl
shll
sarb
stos
fildl
jmp
scas
push
xchg
or
inc
inc
test
xchg
aaa
ja
pop
rorl
or
adc
add
add
jecxz
xchg
js
in
mov
faddl
push
test
mov
adc
clc
jno
adc
dec
xor
scas
sti
dec
int
outsb
pop
mov
out
addb
push
movsl
cwtl
push
push
xchg
cmp
pop
xchg
mov
mov
stos
adc
sar
je
out
and
mov
inc
pop
xchg
jmp
in
sbb
adc
cmp
xor
and
dec
mov
cmp
andb
js
xchg
push
adc
ss
pushf
fimull
or
or
rcrw
loop
test
pop
push
inc
jecxz
sti
pop
icebp
das
push
out
inc
leave
push
fdivrs
cmp
mov
js
pop
stos
adc
pop
dec
imul
mov
negb
sbb
inc
pop
insl
add
lods
xor
push
dec
dec
xchg
repnz
add
cmp
mov
mov
std
es
nop
aaa
pcmpeqb
pop
data16
sbbb
mov
movsb
jnp
push
mov
pop
cmp
adc
jl
ljmp
push
or
dec
int
test
xor
adc
les
and
enter
adc
push
lea
loope
adc
xchg
mov
test
ds
mov
shlb
xchg
cmp
push
add
and
and
push
mov
outsb
cmp
xlat
mov
lret
xchg
scas
mov
mov
shlb
mov
xchg
sti
xchg
les
fstl
add
and
and
rol
sbb
add
jg
mov
mov
xchg
mov
dec
add
xlat
sub
mov
sti
inc
inc
mov
push
testl
lods
iret
cmpsb
xchg
jmp
stc
and
jp
xchg
or
sub
lcall
pop
jl
cs
and
testl
adc
icebp
and
test
mul
popf
ss
xchg
mov
and
nop
xchg
insb
add
inc
testb
loop
call
insl
fwait
aas
int3
nop
dec
lcall
adc
mov
cmpsl
idivl
decl
imul
push
rcll
dec
sti
ret
inc
push
test
adc
incb
adc
jg
xchg
dec
mov
lock
insl
stc
shll
xchg
loope
hlt
adc
cmp
movsl
stos
pop
jb
mov
lods
sbb
sti
inc
ja
dec
mov
push
push
lds
sbbb
rorb
cmp
cmp
mov
push
jae
xlat
outsb
mov
mov
shl
xchg
inc
or
cmpb
pushf
or
or
scas
cli
mov
ss
push
cld
xchg
xchg
hlt
js
clc
sbb
jle
mov
mov
fistl
mov
inc
cld
xchg
sub
les
insl
add
jl
xor
adcb
mov
sbb
aam
rorb
arpl
push
or
mov
and
fsts
jl
dec
mov
movsb
adc
sub
push
icebp
adc
push
je
and
hlt
mov
idivl
add
adc
sub
icebp
mov
out
pop
loopne
xchg
sub
and
or
jae
sub
cmpsb
push
inc
mov
sti
loope
xchg
sahf
int3
mov
jae
sbb
or
repz
push
adc
mov
sbbl
les
jle
add
std
jb
shlb
jp
hlt
adc
rol
cwtl
das
stc
jns
stos
mov
mov
mov
pop
mov
add
and
cmp
arpl
in
jno
leave
sub
insb
je
repz
divl
push
cli
pop
aaa
dec
sarb
jp
sbb
sub
mov
mov
loopne
sbbl
inc
cli
pop
pop
pop
std
pop
popf
fwait
movsl
sbb
test
xor
fisubl
cmp
popa
cmpsl
push
inc
dec
xor
test
in
mov
fnstsw
orb
push
mov
cmp
mov
repz
sub
fnstsw
add
add
push
lcall
subb
xor
pop
adc
jo
sbbb
pushf
and
pusha
add
lahf
push
dec
mov
out
aas
mov
cmovl
fdiv
sub
pop
mov
das
mov
pop
jbe
repnz
add
in
or
dec
mov
dec
cmpsb
arpl
xlat
lods
inc
dec
call
cmpsb
jne
aas
push
ret
push
mov
dec
testl
adc
xor
add
xlat
push
pop
xchg
scas
xchg
cmp
sub
pop
dec
icebp
int3
stc
inc
sbb
cmc
xchg
inc
faddp
sbb
outsb
shrl
sbb
mov
mov
mov
and
xchg
daa
lcall
or
fwait
sbb
arpl
add
loopne
loope
add
xchg
sub
bound
js
xchg
pop
mov
mov
subl
repz
ret
push
das
xchg
je
in
stos
adc
cmp
cmpsl
xor
data16
and
jb
nop
stos
gs
fstps
and
test
addr16
add
repnz
cmp
dec
clc
stos
inc
jge
xchg
sub
iret
mov
lcall
fstl
movsl
xor
cwtl
lahf
pop
push
jle
jb
push
dec
and
test
pop
dec
repnz
stc
lds
add
mov
adc
test
pop
inc
or
adc
mov
jae
adc
xchg
pop
popl
in
aam
pop
xchg
addb
xchg
cmp
mov
xchg
insb
aas
mov
dec
pop
add
adc
cmc
and
shlb
xchg
movsb
sub
imul
sub
xchg
std
or
adc
into
fcoml
aam
in
les
insl
nop
les
ljmp
pop
in
dec
je
call
add
xchg
push
sub
mov
xor
loop
nop
ljmp
addb
push
ja
push
mov
fdivl
shrl
adc
rclb
add
sub
cmp
lock
rol
jns
mov
jmp
sub
pop
add
inc
or
pusha
fstpt
jb
pop
xchg
int
nop
call
cmp
flds
test
xor
jle
aaa
and
or
xor
mov
and
pop
pop
push
jmp
or
jbe
mov
subl
mov
fnsave
jae
shll
cmpl
pop
xor
pop
jp
icebp
xchg
adc
imul
pop
leave
jns
bound
ret
mov
pop
scas
inc
mov
stos
sti
mov
pop
arpl
fidivl
or
int3
sub
lcall
inc
xchg
loopne
jo
sub
jo
lret
mov
sbb
gs
js
inc
dec
lds
stos
mov
pushf
push
fsubr
adcl
aas
dec
sbb
into
mov
push
or
stos
sub
pextrw
imul
xor
addl
ret
ljmp
dec
sbb
jl
sbb
inc
pop
outsb
dec
push
xor
pop
jl
or
enter
movsb
jmp
lea
mov
outsl
xchg
loop
push
jno
dec
xchg
clc
popf
aaa
iret
push
or
repnz
mov
jmp
pop
adc
sbb
sahf
stos
test
scas
jbe
and
rcrl
jne
addr16
fucomp
mov
fidivrs
pop
mov
jg
pushf
adc
insb
sbb
inc
mov
loop
fdiv
dec
ret
push
repnz
mov
jg
outsl
jmp
popf
clc
int
shlb
leave
jae
je
or
scas
pop
insb
xor
scas
push
mov
or
xchg
rcll
hlt
push
hlt
insl
add
popa
jg
inc
xor
cmpsl
inc
and
or
loope
out
test
mull
adc
pop
jmp
andl
fwait
inc
je
and
jo
sub
out
or
scas
jns
or
ret
ret
sbb
push
pop
mov
test
jne
and
lods
pop
add
xorl
daa
mov
push
test
xchg
mov
into
xor
pop
es
add
scas
scas
ss
pop
in
and
and
pop
ret
outsb
out
sbb
or
test
ret
incb
fdivs
ud1
int3
das
push
add
divl
mov
push
repz
push
sbb
xlat
lret
add
mov
loopne
mov
popa
call
pop
jbe
pop
lret
ds
pop
or
test
sbb
insl
arpl
pop
add
dec
add
pop
sahf
push
lea
mov
and
fisttps
movsb
jecxz
out
out
dec
sub
mov
arpl
inc
mov
mov
insl
xchg
ficoms
cwtl
pop
xor
mov
cwtl
jl
mov
ficomps
outsb
lea
push
lret
pop
or
bound
sub
int
ret
incl
pop
cmp
and
pfrcpit2
jp
push
inc
rorl
scas
push
cwtl
add
lock
sahf
mov
xchg
add
std
cmp
jg
aad
cld
inc
mov
popf
sbb
es
popf
push
movsb
in
scas
popf
sub
xor
test
lret
cld
gs
jg
lcall
pusha
std
ret
mov
and
popa
pop
repz
les
add
pop
mov
out
aas
push
mov
xchg
call
pop
push
xchg
fidivrl
push
xor
or
mov
in
int
sub
repz
int
cld
or
out
leave
bound
cwtl
rol
dec
jmp
aaa
push
inc
jns
xchg
ret
je
mov
pop
call
or
ja
ja
sub
hlt
mov
xor
mov
jns
shlb
sbb
sbb
mov
inc
fistps
jbe
and
push
call
and
and
sti
test
nop
xchg
xchg
push
push
shll
pop
in
jno
mov
mov
or
sbb
jp
out
aam
data16
pushf
outsb
inc
loop
orb
mov
pop
sub
icebp
lahf
inc
and
insb
adc
sbb
dec
out
cmp
lcall
pop
mov
add
lods
inc
insl
jbe
adc
arpl
rcl
lods
test
rcrl
test
adc
sub
pop
dec
push
lahf
push
enter
arpl
cmp
fnsave
adc
mov
sti
dec
mov
mov
call
outsb
jo
dec
mov
into
dec
in
xchg
pop
mov
inc
cmc
xor
and
push
jb
dec
fs
testl
push
push
ljmp
push
add
lods
inc
fstpt
push
movsb
or
xor
outsb
cltd
jbe
lret
lea
rcl
dec
insl
push
imul
test
xchg
out
dec
xor
xor
mov
call
aaa
call
sub
xchg
push
stos
dec
fs
aam
inc
dec
icebp
xchg
in
mov
repnz
popa
fisttpl
dec
and
mov
dec
dec
hlt
mov
jecxz
inc
adc
testb
mov
ret
fnsave
mov
movsb
pop
mov
scas
ret
out
add
mov
clc
xor
pop
cwtl
mov
jbe
xor
pushl
sub
mov
flds
adc
inc
xchg
fsubrs
je
cmp
pop
insb
loope
dec
aam
pop
addr16
xor
mov
nop
ret
cs
push
or
cmp
icebp
lods
stc
stos
xor
jbe
xchg
add
int
push
dec
adc
test
movsb
push
or
inc
mov
call
adc
adc
ja
loopne
adc
jo
data16
es
aas
jae
mov
cmp
push
adc
fcoms
dec
test
add
push
addl
and
pushf
stc
dec
add
movsl
or
test
cmp
fisubrs
cs
sar
sahf
sahf
lds
testb
and
inc
mov
jg
ret
test
sub
fs
popf
cmp
or
adc
outsl
stc
rclb
clc
adc
inc
sub
pop
repz
cwtl
inc
lds
cltd
test
jnp
xor
adc
divb
xchg
into
xor
mov
push
ficoms
mov
out
adc
sbbb
in
stc
sti
dec
xor
cmc
cld
dec
repz
test
imul
inc
pop
stc
test
out
sbb
stc
push
xlat
mov
jg
adc
mov
outsl
add
outsl
add
mov
dec
cli
or
pop
or
dec
mov
std
faddp
cld
push
xor
lds
mov
sbb
sbb
push
int
in
jb
xchg
jecxz
mov
cmp
inc
test
ds
in
mov
push
popa
clc
mov
cpuid
xchg
sub
mov
sub
ja
js
mov
lret
xchg
stos
xchg
dec
pop
stc
xchg
cmp
xchg
test
xchg
sub
adc
or
push
jmp
sub
out
mov
lds
bound
xchg
call
cmc
int
jmp
push
insl
push
andl
std
pusha
push
fstp
xchg
mov
inc
cld
and
insl
in
loop
pop
sbb
mov
fisubrs
iret
stos
dec
sbb
out
mov
add
shrl
lds
or
pop
push
jbe
popl
jo
mov
roll
enter
outsb
inc
cmovo
mov
push
add
ds
scas
push
push
int3
ds
out
in
xlat
cmp
fsubrl
bound
js
add
mov
test
lea
icebp
test
movsl
outsb
icebp
mov
les
mov
jmp
sbb
pop
adc
jge
adc
fsubp
ret
and
push
test
adc
push
sbb
xchg
loope
aas
loop
xchg
mov
dec
fstl
mov
jno
aam
call
in
push
jbe
add
cmc
ret
push
cmp
cmc
js
xlat
and
mov
cmpsl
mov
imul
lock
loop
and
add
pop
mov
je
mov
icebp
push
fisubrl
call
sub
sbb
mov
iret
cmp
jge
cli
xchg
popa
test
dec
lahf
inc
sahf
cmpsb
int
mov
push
push
outsl
xchg
loope
mov
fisubs
cs
orb
push
xchg
mov
arpl
or
cs
or
sub
cmpsb
rep
adc
mov
push
add
push
mov
pusha
mov
enter
int
in
sbb
dec
push
notb
xor
mov
ljmp
mov
cmc
mov
jmp
push
mov
into
aas
dec
test
vmovq
adc
xrelease
sub
cmpsl
imul
jb
dec
push
or
pop
lea
and
push
inc
test
xchg
mov
cmpsl
pop
lds
ljmp
mov
cmp
push
xchg
xchg
mov
orb
je
or
push
jp
push
je
pop
cmpsl
loopne
sbb
sub
push
jg
jne
clc
sbbb
clc
bound
xor
cmp
sub
imul
pop
xchg
in
dec
mov
sbb
mov
jp
push
cwtl
inc
jg
repnz
testl
dec
dec
and
fisttpl
xchg
adc
xor
and
das
mov
fwait
push
inc
push
mov
hlt
adc
shrb
ljmp
mov
add
jns
ja
stos
inc
sub
test
pop
add
xor
lret
leave
push
int3
adc
ds
mov
mov
mov
xchg
mov
int
mov
test
cld
mov
xchg
imul
lcall
sahf
add
std
adc
xchg
jge
mov
cmp
inc
fnstsw
push
push
movsb
xchg
or
mov
mov
out
pop
xor
lret
ret
outsb
mov
push
jle
jecxz
clc
sbb
push
mov
test
xor
pop
cmp
pop
push
and
jg
mov
fdivrl
cld
push
push
xchg
ds
jmp
dec
pop
or
call
sub
gs
add
ror
shl
out
les
jg
xor
mov
int
addl
push
insb
xlat
adc
fsubrl
imul
psrlq
mov
dec
or
mov
sub
mov
imul
stos
cmp
mov
jae
loope
fstpl
xchg
adc
std
movsb
and
sub
push
aaa
divl
inc
cwtl
lret
ds
es
sbb
fidivl
movsl
cmp
mov
cmp
sbb
xchg
or
mov
cmp
dec
xlat
icebp
dec
pop
pop
out
insb
nop
cmp
cmc
lcall
jns
xchg
sbb
add
inc
push
jns
ret
push
lods
hlt
adc
mov
cmpsl
mov
fdivrp
lcall
in
scas
pop
push
out
xchg
inc
or
iret
jb
xchg
ljmp
inc
test
rcrl
lods
inc
pop
xchg
enter
test
or
ret
push
and
mov
lret
mov
stos
rolb
fmuls
push
icebp
sub
mov
lea
cmp
lock
inc
out
in
fsubrp
add
xchg
out
dec
cmp
int
sar
inc
mov
jb
lock
and
test
movsb
xor
cmp
jle
adc
sbb
scas
inc
inc
dec
pop
sub
and
push
mov
lea
add
inc
and
mov
fildl
pop
jbe
sarl
fiaddl
xchg
mov
ds
mov
xor
push
push
fisubs
pop
ss
aas
rcrl
call
outsl
rcrl
pusha
or
inc
imul
xor
jo
dec
adc
lret
mov
or
shrl
cmp
popf
sub
je
out
jle
cmp
pop
scas
pop
ficoml
mov
and
add
mov
adc
pop
test
lcall
pop
movsl
das
test
out
js
pop
sub
xor
cmc
cmpsl
inc
push
xchg
les
nop/reserved
xchg
and
xchg
cld
mov
sti
cmpsb
push
sub
sbb
insb
fwait
in
dec
shl
shll
mov
cltd
test
dec
outsl
insb
sub
leave
push
and
mov
sbb
jg
push
push
push
mov
pop
or
aas
jmp
out
add
mov
shll
es
icebp
int3
inc
out
pushf
mov
js
pop
sub
test
mov
pushf
mov
mov
inc
fcmovne
outsl
outsl
jmp
lock
mov
rep
shld
out
insb
int
sub
cs
fdivrs
dec
loope
or
jge
std
xchg
or
push
jmp
imul
mov
mov
insl
std
xchg
cmp
sahf
and
inc
popa
clc
cmp
sub
jmp
mov
test
je
aad
push
lods
mov
pop
lret
mov
arpl
fwait
pop
xchg
mov
cmp
push
pusha
test
cmc
jbe
fbstp
push
pop
jecxz
mov
adc
mov
sbb
pop
test
inc
mov
sti
out
popa
mov
pusha
jle
mov
cld
std
daa
inc
stos
mov
push
adc
stc
imul
or
mov
aaa
es
bound
pop
rcrb
add
jle
cmp
pop
call
inc
and
iret
repz
add
cmpsl
scas
pop
mov
xor
mov
sub
adc
jmp
mov
jno
jecxz
lds
ljmp
call
ljmp
call
xchg
mov
pop
jmp
test
daa
mov
jbe
mov
inc
test
addr16
jo
clc
in
inc
or
test
in
cmpsl
xchg
xorl
clc
pop
out
mov
aam
xor
xor
mov
and
cs
mov
fwait
mov
leave
ds
aad
ljmp
xor
incl
pop
and
cli
xchg
iret
push
xor
jmp
lahf
mov
shl
mov
mov
inc
push
jmp
push
imul
xchg
mov
out
ljmp
and
shl
gs
enter
testb
or
inc
movsb
xchg
fs
fidivs
das
pcmpgtw
js
insb
xchg
mov
inc
out
subb
fiadds
push
add
jge
in
rol
dec
inc
push
mov
aaa
xchg
into
mov
adc
call
and
add
xchg
jb
std
xchg
sub
cmp
out
test
pusha
js
arpl
jp
xchg
pop
ja
and
scas
hlt
add
mov
fwait
andb
adc
inc
add
jo
inc
jnp
fimuls
popl
xor
add
loope
mov
repz
lds
jp
and
mov
push
push
fcompl
sbb
mov
repz
xchg
ss
outsb
adc
out
mov
mov
fcoms
je
cmp
into
cmpsb
pop
pop
bswap
mov
push
xchg
mov
in
mov
cmpsb
call
test
and
int3
daa
jo
out
mov
pop
jb
repnz
andl
int3
imul
daa
test
roll
outsb
mov
lret
mov
in
fsubl
adc
dec
cmp
sbbl
push
mov
mov
and
outsb
inc
or
sbb
mov
xor
pop
jns
or
nop
add
jae
and
daa
mov
xchg
sub
pop
xchg
and
outsl
xchg
cmp
xchg
sbb
push
popa
dec
push
dec
pop
cmp
notl
xchg
insl
es
pushf
sarl
mov
xor
int3
pop
jno
cmp
adc
ss
xor
enter
sbb
jmp
and
repnz
ret
mov
or
repnz
pop
imul
ljmp
and
mov
cmp
popf
lret
cmc
gs
cmp
and
xor
add
adc
outsl
or
jge
push
fcomip
dec
push
aad
imul
outsl
shlb
add
out
cs
rcrb
aas
push
ds
aas
push
and
das
jo
push
push
ja
or
cli
cmp
jg
es
push
push
push
movsl
mov
fwait
loope
arpl
jnp
push
mov
inc
jge
int
test
xchg
ret
test
push
mov
je
int
xchg
pop
pop
fldenv
outsl
outsl
sub
push
xchg
rcrb
mov
pusha
mov
jmp
cmp
mov
xor
inc
pop
jg
shll
adc
sbb
mov
jge
cwtl
les
fsts
pop
cli
repz
cltd
adc
push
sbbl
jbe
pop
push
xchg
inc
push
mov
jp
pop
or
ss
divb
fdivrs
sbb
into
sbb
arpl
inc
inc
les
and
and
or
cmp
and
mov
imul
adc
in
nop
and
cmpsl
or
out
test
jo
xchg
iret
popf
leave
psrlq
out
and
sub
jmp
lods
mov
push
jmp
inc
xchg
inc
adcb
scas
push
or
leave
ljmp
aaa
jecxz
pop
and
bound
lret
lret
lret
jmp
jl
orb
filds
mov
add
iret
jmp
lds
repnz
pop
lock
lahf
aas
int
stc
arpl
std
push
xchg
lock
dec
ja
xchg
pop
out
dec
scas
mov
sbb
push
cmp
mov
or
mov
dec
rolb
xor
dec
mov
mov
inc
jg
pop
sahf
cli
cli
arpl
xor
sahf
lods
cmp
mov
xchg
ret
jb
xchg
cld
es
loope
pop
cmp
fwait
mov
dec
dec
or
xabort
in
fdivrl
ret
bound
lret
repnz
sbb
fcoms
in
outsl
xchg
cmp
insb
inc
out
stc
dec
jmp
xchg
andb
out
cmc
rcl
add
push
sbb
fdivs
or
stc
cltd
pop
push
fnstsw
mov
mov
loopne
fldt
leave
pop
fisttpl
dec
loop
cmp
mov
sub
jno
sub
inc
sbb
push
xchg
fucomp
sub
out
inc
cmp
jns
jmp
xor
xchg
cmp
sbb
out
mov
js
mov
outsl
mov
loopne
jno
rcrl
pcmpgtb
push
out
cmp
and
pop
outsb
mov
mov
aad
sbb
scas
mov
lock
pop
xor
jg
xlat
push
jecxz
jbe
mov
hlt
push
ret
sbb
xchg
dec
or
cmp
cmp
or
imul
lock
jnp
sbb
lret
pop
pusha
add
cs
pop
scas
cs
ljmp
icebp
js
mov
idivl
repz
mov
aam
sub
and
outsb
shrb
out
cld
pop
jl
mov
pusha
mov
fbld
hlt
aas
mov
out
xor
or
sbb
es
pop
mov
sbb
repnz
inc
out
mov
ljmp
mov
iret
adc
jmp
push
shl
rorl
cmc
sbb
std
lret
mov
out
xor
sub
clc
ja
test
pop
cmp
jns
movsb
cwtl
orl
cs
mov
mov
fsubrs
dec
aad
jle
cmc
push
jae
aam
dec
mov
jb
pop
add
popa
sbb
xchg
xorb
jno
out
mov
push
dec
mov
rorb
push
or
jns
sbb
add
xor
movsb
enter
mov
push
xchg
adc
dec
cmp
cmp
cmp
dec
pop
cltd
loop
ja
fsts
xchg
pop
cltd
jle
jle
xchg
pop
call
testl
add
jb
subb
enter
xchg
mov
in
cmp
pop
imul
sahf
pop
sub
clc
ss
cwtl
sbb
arpl
sub
lea
xchg
stc
xchg
jae
stos
fwait
add
xor
fs
or
or
sbbl
push
stos
inc
push
jecxz
aaa
daa
inc
mov
xor
lahf
shlb
fs
shr
pop
out
mov
mov
fidivl
dec
jns
xor
sbb
inc
cltd
stos
or
inc
jnp
and
push
or
shrb
pop
and
scas
xor
lods
sub
xchg
sahf
sbb
dec
std
sub
je
mov
test
fnstcw
or
cmp
inc
fsubrl
push
sub
jmp
mov
mov
dec
jecxz
mov
cld
mov
mov
testl
aam
mov
std
jns
daa
xor
mov
test
cli
cmpsb
addr16
lret
jae
test
lret
cld
into
outsl
ret
lret
inc
dec
push
jne
inc
fiadds
pop
xor
stos
dec
cmpsb
out
sub
mov
sub
cmp
push
cmp
bound
xchg
std
pop
xor
ds
int3
xor
adc
mov
imul
lock
inc
pop
out
js
push
mov
pop
mov
sub
xchg
in
inc
xor
dec
test
jmp
stc
adc
inc
ficompl
js
mov
bound
jb
pop
sub
test
addr16
stos
test
or
fs
push
jmp
push
xor
aas
stc
std
lods
sub
mov
pop
jb
xchg
push
push
or
xchg
jnp
mov
jbe
add
mov
orb
rcrb
sbb
jge
ja
jmp
and
dec
movhlps
sbb
push
sbb
cmp
mov
mov
das
stos
jmp
pop
andl
mov
mov
lcall
jo
insl
mov
stos
mov
mov
mov
sbb
xchg
iret
orl
mov
sbb
aad
pop
repnz
ret
jns
cmpsb
sbb
testl
fcoms
add
fwait
or
fldl
fwait
movsb
jno
arpl
inc
mov
jl
jbe
cmpsl
xchg
sub
fdivrl
loope
push
sbb
add
daa
mov
addb
test
gs
or
test
mov
mov
or
les
shll
pop
stc
out
cmp
dec
sbb
inc
xchg
sub
ja
push
mov
shll
pop
cs
or
outsl
add
sbb
ds
ja
test
inc
stos
xchg
or
adc
jae
call
cli
inc
rcrb
push
setge
aam
jno
push
push
sbb
and
inc
xlat
mov
popa
jnp
ds
subb
mov
cld
mov
movsb
adc
pop
and
jbe
mov
sbb
outsl
push
push
sub
sarl
pop
pop
adc
mov
mov
inc
imulb
dec
jge
jle
inc
push
adcl
or
lods
jmp
out
push
cmp
cmpsb
jbe
sub
adc
cmpsb
aas
shl
adc
add
lcall
and
insb
dec
push
dec
pop
test
imul
ret
xor
jno
stc
jp
jmp
test
faddl
jbe
add
pop
push
adc
fwait
pop
cmc
or
das
cmp
lds
xor
sarl
clc
and
sub
lea
dec
mov
or
mov
ss
or
xchg
aaa
push
fsubl
inc
fidivrl
push
sub
pop
pop
popa
add
jno
pop
aaa
sbbl
mov
ret
clc
loope
clc
popa
sarl
adc
sbb
out
lds
jmp
xor
aad
dec
dec
out
mov
add
push
es
xchg
or
fisubs
nop
sub
pop
lahf
movsl
xchg
scas
cmpsl
addr16
pop
outsl
aam
cmp
jmp
jae
inc
or
jo
push
add
push
push
nop
mov
into
xor
and
jbe
add
xor
and
lods
jg
imull
call
test
dec
ss
sub
sbb
rcrl
sbb
aam
cmp
sub
mov
ret
pop
sub
gs
insb
mov
xor
hlt
stos
shl
lock
push
pop
sarl
pop
jmp
push
mov
rorb
mov
clc
xchg
add
inc
mov
mov
dec
pop
adc
testl
loopne
rcll
xor
jns
enterw
adcb
inc
add
inc
test
xor
xor
movsb
pushf
and
mov
pop
cmc
inc
aad
out
mov
outsl
sbb
pop
sbb
xor
loopne
pop
daa
jmp
testl
cmp
out
xchg
pmullw
leave
addr16
cmp
jl
pushl
pusha
xor
push
pop
popf
jg
inc
jo
leave
sub
jbe
mov
movsl
inc
push
jae
xchg
inc
push
add
inc
xchg
push
cmpsl
enter
aad
call
out
xlat
and
pop
jecxz
add
xor
sbb
xor
mov
cld
outsb
inc
add
mov
lret
jae
jmp
into
jmp
out
sbb
int3
lds
fdivrp
jo
mov
loopne
fcomip
mov
dec
hlt
and
js
sbb
mov
rcrl
nop
cmp
inc
sub
test
xchg
add
imul
pushf
sbb
pop
inc
cmp
sub
loope
sti
cmpsb
xchg
aas
fcomp
or
test
pop
outsb
or
mov
dec
addb
sub
mov
pop
add
shl
pop
inc
cltd
mov
lcall
and
dec
and
cmpsb
cmp
leave
and
pop
setbe
mov
fnstenv
xchg
mov
aas
push
add
mov
push
pop
cmp
fsubrl
push
push
leave
mov
ljmp
xchg
push
adc
or
jnp
test
icebp
loopne
lock
sti
ficoml
addr16
sbb
push
sbbl
xchg
daa
out
and
sti
push
xlat
ja
outsb
test
xor
adc
outsb
adc
sarl
jmp
rclb
jbe
aaa
inc
fisubs
pop
movsb
pop
push
bound
int
mov
cmp
addb
lock
sbb
cmp
je
xor
push
shlb
repz
sub
shrb
sub
nop
pop
pop
dec
and
decl
xchg
mov
inc
mov
loopne
in
push
add
push
cltd
cmp
je
push
insl
test
mov
jnp
adc
out
les
sub
sub
vmovsldup
jg
and
fnsave
out
cld
das
repz
addr16
es
pop
xlat
rcrb
sub
pop
jmp
enter
mov
negl
mov
mov
out
outsl
mov
jae
rol
das
jecxz
pop
ret
sub
push
rol
inc
sub
xchg
inc
sbb
in
dec
je
shlb
nop
dec
mov
data16
lret
movq
insb
inc
das
xchg
mov
hlt
cmp
jp
das
xchg
push
nop
fwait
add
and
mov
aad
adc
adc
xlat
imul
inc
pop
lahf
scas
out
inc
addb
out
pop
movsb
ret
jecxz
push
push
mov
pushf
push
push
dec
iret
lds
sub
iret
fiaddl
ret
repz
push
test
inc
popf
gs
movl
js
inc
rcll
fs
mov
mov
call
or
mov
rcrl
aad
fsubrs
jmp
insb
rolb
fs
mov
jecxz
and
inc
stos
xchg
mov
loope
out
loop
pop
adc
xor
test
mov
mov
orl
popf
inc
dec
dec
pop
enter
push
lods
add
xchg
hlt
fsubl
mov
scas
daa
dec
dec
sarl
dec
jg
addr16
sahf
xlat
push
outsl
popa
cld
or
daa
lods
cmc
iret
lods
lock
cmp
jae
jge
lahf
out
test
inc
cmp
arpl
cmp
add
pop
pop
add
aad
scas
or
mov
in
cld
sub
and
repz
xchg
sbb
js
nop
cmp
sahf
push
cmc
gs
fldt
bound
inc
push
push
mov
sarl
out
dec
inc
in
aam
mov
xlat
cmp
ss
jp
ljmp
das
shlb
add
cwtl
or
cmp
push
xchg
arpl
inc
pushf
lcall
fadds
pushf
dec
cmpsl
mov
fistpll
fwait
jae
shl
clc
push
mov
push
aam
push
xor
out
inc
es
in
adc
shlb
iret
loop
mov
pop
jl
clc
or
testl
arpl
int
mov
ret
scas
push
dec
in
shlb
add
mov
sbb
and
pop
cmp
testl
leavew
lods
in
loope
lcall
rcl
pop
lret
lds
cmpsl
push
cmpsb
pop
push
leave
cs
sub
mov
push
pop
dec
flds
lods
jno
mov
mov
hlt
push
pop
jp
imull
xchg
pop
stos
xor
pushf
popa
mov
fdivr
and
fisttpl
stos
mov
push
adc
jb
dec
add
jg
or
cli
adc
pop
ss
pop
ret
lret
lahf
push
call
jo
ljmp
push
mov
xchg
fisubs
sbb
scas
mov
push
testb
imul
jnp
and
push
cmpsb
dec
out
dec
push
add
test
repnz
imul
or
pop
xchg
push
jge
ljmp
xor
lret
xchg
mov
push
dec
jecxz
ret
xorl
push
push
ret
sbb
rcrl
cmc
in
add
hlt
jns
aaa
testb
shll
dec
scas
cmp
divl
loopne
idivl
and
pop
sahf
mov
jns
or
fsubrl
lods
jo
das
shlb
or
inc
adc
sub
add
and
cmc
das
jo
pop
enter
mov
cld
xchg
cmc
imul
aas
mov
adcl
pop
and
add
ret
out
jmp
xor
pop
rol
lea
mov
mov
imul
inc
repz
outsl
pop
lock
push
movsb
icebp
int3
or
andb
std
lds
jns
mov
popa
les
sbb
sbb
aas
pop
int
outsl
sbb
lret
mov
pop
rorl
scas
cmp
push
mov
fnstcw
enter
movsbl
mov
ljmp
inc
js
fmuls
jecxz
xor
jmp
adc
adc
xor
cmpsb
insl
pop
cmp
aaa
mov
in
push
jl
cmpsb
inc
icebp
mov
pop
xlat
push
xor
mov
aaa
outsl
sbb
mov
mov
sbb
sub
jo
repz
or
popf
xchg
ret
dec
mov
out
ja
das
or
xor
mov
or
push
sti
sbb
jle
in
es
shrl
ret
imul
ret
aad
testl
dec
mov
decl
cwtl
fs
daa
xchg
popa
jge
mov
lds
add
in
loope
test
in
xchg
lods
out
sti
loope
fwait
add
push
push
push
iret
shl
movsb
imul
hlt
stos
sub
subl
mov
loopne
pop
add
push
mov
lea
sub
sub
xor
push
mov
js
cmp
addb
nop
push
xor
adc
nop
aad
sub
nop
push
xor
into
daa
adc
in
ja
xor
sbb
cld
hlt
inc
pop
sub
mov
jmp
mov
pop
in
in
xchg
xor
sub
cmpsb
lock
mov
mov
add
sub
insb
rcl
pusha
cmp
cld
gs
negb
push
pop
out
enter
lods
mov
inc
popa
add
stos
jns
pop
pop
lds
inc
imul
pop
push
ja
lods
lock
das
cmpsl
cli
into
push
sub
xchg
xor
lahf
loope
daa
cmp
xchg
rorb
jae
xor
subl
xor
fprem
or
shld
xchg
sub
xchg
push
pop
mov
xchg
mov
loop
mov
popa
loopne
lods
lods
ljmp
pushf
jg
fldl
xor
mov
imul
sub
pop
mov
pop
cmc
or
sub
inc
iret
bound
push
test
lds
fscale
xor
popa
add
sbb
cmp
inc
xchg
aas
or
pushf
es
hlt
fwait
and
push
xor
cwtl
jmp
and
jae,pt
cmp
pop
adc
xchg
jo
xor
iret
ret
inc
inc
dec
in
aas
js
iret
push
and
sbb
into
enter
dec
cmpsb
xlat
incl
pusha
movsl
add
mov
js
clc
cmp
sub
push
in
out
adc
roll
mov
push
repnz
add
jnp
pop
push
lock
call
push
out
push
aas
rcrb
lret
aas
dec
pop
imul
dec
or
loopne
sub
or
sahf
out
dec
std
je
aam
outsb
shl
std
mov
sub
push
ja
pop
pop
push
cmp
cmp
rorl
push
fisubs
push
and
add
lret
push
sub
mov
out
adcl
xchg
mov
subl
ret
xlat
mov
pop
xchg
cs
mov
mov
mov
cmp
pop
lret
lret
js
inc
pop
lds
leave
mov
and
push
mov
xchg
out
iret
push
jne
fcomps
shll
mov
sub
push
pop
out
addr16
int3
sahf
icebp
out
pop
iret
loope
enter
adc
sbb
push
mov
aas
cmp
jbe
dec
out
push
pusha
fisubs
and
fidivs
adc
mov
lahf
jb
lea
mov
lods
fsubrl
ret
repz
or
add
jge
in
leave
sbb
push
sbb
mov
out
subb
adc
mov
xchg
repnz
cmc
pop
dec
xor
imul
mov
push
push
clc
cmp
or
adc
addl
sbb
sub
xchg
imul
je
lea
xchg
loope
hlt
lahf
mov
ss
add
xchg
fmull
adc
subb
out
sbb
inc
mov
fxch
and
xchg
xor
das
xor
pop
pushf
ds
repnz
mov
pusha
jge
and
es
fs
xchg
ja
subb
imul
adc
cmp
fistpl
inc
push
rcrb
cmp
mov
nop
inc
addr16
std
lcall
iret
out
fcoml
xor
and
pop
fimull
mov
popf
jecxz
add
jno
sahf
sub
lods
movsb
fisubs
pop
jecxz
push
and
in
ss
fs
add
mov
inc
xor
add
mov
cwtl
jl
sub
clc
in
aam
lcall
cmp
stos
ret
shlb
int3
jno
js
lcall
sahf
int3
mov
pusha
mov
xchg
sub
pop
mov
mov
lea
mov
lds
aas
inc
xor
mov
test
and
rcll
fbld
mov
fs
cmp
imulb
xor
xchg
inc
push
test
test
loope
pop
adc
in
mov
arpl
push
iret
rol
jns
inc
stos
and
call
stos
sub
mov
jns
xor
adc
lods
lcall
jp
cld
xchg
cmp
mov
mov
enter
fcoms
dec
ds
data16
xor
fsubrs
sahf
decb
mov
ret
dec
in
add
and
loop
inc
inc
inc
rolb
push
mov
jg
xor
xor
out
xchg
inc
mov
mov
pop
and
orl
repnz
sbb
inc
sub
jg
dec
push
jns
gs
fs
aam
jbe
iret
inc
sti
stos
add
in
int3
push
out
imul
dec
jle
mov
inc
pop
or
into
pop
dec
cmp
shufps
int3
cltd
mov
mov
cmpsl
lods
and
push
adc
pop
sub
mov
js
dec
mov
adc
or
jg
fdivr
xchg
lock
sub
int3
mov
pop
jecxz
shr
xlat
mov
push
mov
jo
mov
sahf
jno
xchg
cmp
push
stc
cmp
adc
push
sahf
jb
sar
xchg
aad
cmp
dec
lods
dec
pop
das
shr
pop
add
aaa
pop
mov
sarb
mov
mov
ss
out
hlt
cmp
mov
jle
lret
mov
les
loope
jmp
cmp
pusha
les
cwtl
test
mov
cld
or
xchg
out
mov
push
ds
mov
mov
add
and
in
lds
sbb
mov
pop
or
in
mov
pop
jge
sub
sahf
jno
dec
decl
push
mov
pop
mov
and
or
or
aad
xchg
pop
call
cwtl
xlat
fwait
push
jo
jge
adc
mov
jne
push
fbstp
fistl
pusha
prefetchwt1
or
outsl
movsb
xor
cwtl
inc
sahf
sbb
je
or
lock
push
cld
xchg
push
in
stc
mov
xchg
xchg
mov
jl
xor
xchg
add
daa
sbb
pop
mov
adc
adc
scas
inc
divb
enter
cmp
loop
pop
in
mov
test
ljmp
imul
lods
mov
cmp
sub
shlb
push
ja,pt
int3
add
xchg
test
dec
sarb
addr16
mov
dec
testb
push
push
lods
jle
fistpll
outsl
ret
cmp
shll
and
cmp
mov
pop
push
sub
push
sahf
stos
push
addr16
jnp
pushf
xor
inc
mov
incl
jl
enter
fxch
scas
mov
push
iret
iret
xchg
es
insl
add
sub
inc
fisubs
jae
dec
movsl
inc
ljmp
or
pop
aas
add
or
push
adc
lret
push
imul
loop
mov
dec
aaa
cmp
mov
shrb
dec
shll
push
aaa
or
mov
jbe
ja
pusha
xchg
pop
pop
pop
movsb
in
loope
xor
popa
lods
gs
pop
inc
mov
cmpsl
or
sti
cmp
xor
hlt
cmp
rcll
dec
rcrl
enter
loopne
mulb
dec
xchg
out
sub
ss
mov
push
ljmp
xchg
mov
mov
adc
aaa
inc
fs
insl
daa
inc
ljmp
shl
fwait
stc
dec
rclb
int3
sahf
sahf
xor
lea
mov
pop
dec
inc
fs
inc
xlat
cmpl
mov
and
jae
cmpb
cwtl
sub
fnsave
inc
arpl
cmpsl
das
adc
or
je
mov
dec
mov
hlt
arpl
les
out
inc
push
push
xlat
outsb
dec
cmp
cmc
xor
dec
jecxz
rcrb
pop
jb
out
pop
icebp
inc
xchg
lea
lock
push
aad
pop
ret
stc
mov
lret
sti
shll
aad
rolb
out
pop
int
and
mov
push
add
jnp
out
ss
sub
sub
jns
sbb
mov
ret
inc
insl
xchg
pop
test
dec
mov
sbb
adc
sub
repz
lcall
adc
jp
mov
add
xor
mov
cmpsl
jne
xchg
orl
pop
call
sti
inc
addr16
xorl
dec
push
push
mov
ljmp
mov
mov
sub
mov
cmp
xchg
imul
cmp
adc
inc
cmc
push
imul
push
outsl
jnp
add
cmp
mov
in
push
mov
inc
daa
cmpsb
sti
or
fisubs
mov
test
sbb
xchg
dec
lret
mov
popa
clc
cltd
jge
shlb
dec
nop
mov
mov
filds
sbb
lret
imul
dec
dec
inc
sub
push
lods
xor
lea
jle
add
mov
loopne
shrl
movsl
sub
arpl
mov
dec
cmp
shlb
sbb
or
out
xchg
dec
or
imul
cmp
sbb
lds
js
test
inc
je
jae
mov
repnz
pop
push
xor
add
sti
xor
mov
jb
ret
add
cmpsb
jne
imul
xchg
pop
ds
and
fnstcw
imul
push
mov
pop
mov
xchg
cld
fbld
mov
decb
arpl
es
or
mov
rorl
popa
cli
hlt
mov
ds
clc
jnp
cmp
call
pop
movl
add
fidivl
mov
clc
shll
push
xchg
mulb
loope
push
pop
xchg
fcmovb
mov
pop
repz
hlt
call
inc
jp
jae
xchg
ret
lea
repz
insl
lret
pop
aaa
mov
fs
dec
fs
repnz
dec
add
inc
ja
mov
cltd
shrb
xchg
mov
pop
or
sbbl
mov
dec
add
lods
adc
ja
into
xor
mov
xchg
cs
icebp
and
and
pop
push
push
and
mov
aad
ret
lds
or
scas
xchg
or
sub
jb
nop
sbb
aad
in
dec
divb
add
jle
aam
dec
fists
testb
cs
jo
dec
and
sbb
mov
stc
and
mov
stc
fwait
lahf
lcall
and
mov
lahf
stc
je
mov
test
sti
es
pop
mov
and
and
inc
dec
in
les
and
mov
rcl
inc
cltd
xor
mov
ss
lret
data16
int
xor
inc
testl
jmp
mov
fs
push
inc
mov
dec
mulb
inc
jge
push
outsb
jbe
push
add
mov
je
insl
xchg
mov
jg
shll
int
add
out
scas
mov
testb
lcall
in
xor
lods
push
mov
add
mov
je
push
je
and
cmp
loop
movsb
aas
aad
repz
mov
insl
scas
stos
jne
fwait
adc
pop
lret
out
fwait
xor
add
mov
idivl
scas
mov
sbbb
cwtl
inc
mov
aaa
addb
aaa
mov
arpl
pop
out
mulb
repz
data16
xchg
rorb
and
out
mov
cmpsl
push
inc
test
sbb
mov
movsb
out
fisubrl
add
in
sahf
ret
clc
test
pushf
test
mov
or
adc
push
dec
xor
shrl
xor
pushf
adcb
int3
dec
test
es
push
lods
push
sub
nop
daa
xchg
add
xchg
add
ss
push
push
jmp
sub
fdivl
add
fdivl
int
and
divb
dec
pop
mov
sub
loop
sub
ljmp
push
adc
flds
mov
das
pop
lds
cmp
mov
aaa
and
cwtl
jae
mov
fisubrs
sub
add
mov
jp
aam
ss
cmpsb
and
in
leave
ret
inc
das
imul
lret
scas
push
jle
fimull
shl
ljmp
adc
stos
and
sbb
xor
xchg
call
jbe
jae
or
add
sub
mov
movsb
and
push
mov
gs
xchg
in
cwtl
inc
mov
jl
aas
dec
push
out
add
add
sahf
clc
stc
push
js
mov
fstl
mov
mov
add
push
leave
xor
dec
pop
push
pop
sub
sub
jecxz
repz
nop
and
dec
fldenv
dec
push
hlt
pop
cmp
movsl
jecxz
ret
pop
dec
mov
pop
ss
sbb
xchg
dec
je
lods
and
pop
xchg
inc
xor
clc
mov
mov
sahf
push
add
mov
mov
push
loope
pop
dec
dec
cmp
adc
jge
pushf
scas
insb
fiadds
out
push
in
mov
sti
imul
or
mov
movb
es
xor
ljmp
mov
movsl
in
pop
das
xchg
or
jg
xor
ffree
xchg
sbb
stc
scas
pop
xlat
cmp
rorl
and
inc
movsl
sub
jo
out
in
xchg
inc
shlb
cmp
jns
cmpsl
outsb
dec
sub
push
pop
cmp
data16
pop
pusha
or
pop
mov
cs
stos
aaa
int
jo
jo
lea
negb
cltd
out
out
and
repnz
int3
add
sbb
movl
cmp
test
popl
push
mov
imul
femms
push
mov
inc
push
inc
fdivs
mov
lods
out
dec
push
mov
and
scas
dec
loope
inc
mov
loopne
xchg
or
push
mov
xor
mov
jmp
cmpsb
testb
idivb
mov
shll
sbb
das
aam
cmp
in
pop
ljmp
call
bound
dec
cltd
mov
inc
push
ds
loope,pt
fnsave
pop
sub
out
mov
bound
addl
lds
cmp
stos
test
sbb
sbb
lods
push
lret
mov
pushl
fdivrs
xor
jmp
xchg
and
cmpsl
inc
sbb
leave
cmp
clc
cmp
jg
loope
mov
adc
or
lahf
xor
popf
sub
mov
les
gs
pop
xchg
cmc
xchg
out
pop
in
or
jns
cli
push
cltd
mov
dec
daa
movsl
add
push
mul
mov
hlt
fildl
pusha
xchg
xchg
bound
cltd
test
inc
cmp
loop
dec
fwait
sub
mov
pop
sarb
jp
scas
in
jecxz
pop
mov
mov
mov
dec
cmpsl
push
jae
jg
aaa
sub
lcall
xchg
jp
dec
enter
jp
loope
mov
rcl
gs
xchg
and
sub
lods
cmp
sub
test
sahf
cltd
sbb
movsl
push
xor
xchg
sub
or
mov
repz
sahf
or
nop
dec
int
out
cmp
fdiv
cltd
popf
rcl
mov
push
dec
or
test
aam
lret
pop
sbb
and
popa
inc
pop
mov
jnp
lods
sub
cmpsb
sti
or
daa
mov
fcoml
ret
adc
fsubrp
dec
hlt
push
sub
add
push
aam
push
pop
xchg
xor
adc
stos
mov
pop
inc
push
sbb
fstps
push
mov
jo
jmp
pop
inc
jge
xorb
cmpsb
inc
pop
xor
jg
mov
repnz
xlat
cwtl
stos
hlt
sti
int
cmp
xlat
outsb
and
cmc
popf
aam
xchg
cmc
cmp
je
lahf
iret
push
ret
or
xchg
popa
fsubrp
pop
and
loopne
scas
xor
shll
fisubl
jnp
and
shrb
push
inc
sub
out
xchg
or
inc
and
popa
lahf
das
inc
imul
dec
cld
out
sub
divb
jp
or
pop
adc
mov
lea
push
mov
pop
adc
les
inc
test
jle
mov
and
cmpsb
jmp
test
jo
lret
lea
rcrl
ficoml
mov
les
pop
into
cmpl
and
outsl
in
aad
push
mov
mov
mov
hlt
mov
test
mov
loop
inc
dec
sbb
test
pop
sbb
imul
insl
loope
inc
inc
out
xor
or
push
adc
lds
jbe
out
scas
or
andl
es
scas
and
push
cwtl
ret
test
jae
andb
call
xchg
mov
add
shrl
aaa
mov
icebp
xor
jnp
aam
clc
push
adc
lea
sbb
pushl
test
jb
adc
les
jp
fucomip
pop
repnz
cmp
dec
xchg
cmpl
outsl
std
sbb
push
mov
lea
fs
aad
insl
inc
pop
push
test
mov
sbb
subl
push
in
xor
pop
pop
push
dec
pop
xchg
mov
mov
dec
mov
aas
test
cmp
push
mov
lods
test
pop
cs
cmp
int
add
cpuid
mov
je
or
std
insl
sbb
lret
sub
add
add
hlt
sbb
dec
fwait
sti
loope
orb
inc
pop
jl
sub
lahf
jecxz
or
jno
dec
inc
iret
push
lock
bound
and
rcrb
repz
cld
adc
inc
push
js
insl
jge
mov
enter
in
cli
nop
jnp
movsl
sbb
mov
lret
push
xor
push
int3
cmp
lea
loop
daa
mov
mov
jae
fwait
call
and
movd
imul
sub
clc
clc
xchg
in
lea
sti
lods
dec
dec
sbb
jae
insl
pop
push
sbb
xchg
push
xor
cmp
dec
mov
jo
stos
push
or
add
es
fcmovnb
nop
addb
cmp
dec
or
scas
inc
sahf
imul
push
adc
orl
jl
xchg
cs
insl
testl
pop
rcll
sti
fwait
lods
mov
test
inc
inc
fiadds
jmp
xor
add
test
inc
sbb
fbstp
adc
sub
leave
fsubrs
mov
dec
dec
adc
dec
add
enter
psrad
movsl
stos
jmp
mov
xchg
sub
mov
scas
inc
push
fsubrl
mov
mov
repnz
sbbb
lret
jb
cld
jb
in
lods
dec
sahf
notb
testb
mov
fwait
push
call
cmpsb
inc
sarb
lcall
in
in
push
mov
dec
cmpsb
xchg
jns
cmp
in
imul
gs
jge
xchg
negl
test
flds
mov
ljmp
mov
fistpl
pop
adcb
push
cmpsb
pop
dec
test
push
enter
push
je
jecxz
lock
sbb
push
leave
lahf
cmpb
xor
xlat
add
cwtl
shl
lods
ljmp
xchg
jmp
dec
sti
mov
cltd
add
mov
lahf
mov
xchg
push
jmp
jg
adc
stos
es
cs
clc
xor
jns
jecxz
es
nop
inc
loopne
xchg
xchg
pop
mov
mov
jg
mov
push
jl
stc
xor
lods
xlat
rcrl
dec
pop
mov
lea
scas
xchg
insl
test
inc
bound
jbe
push
jnp
out
sbb
lahf
popa
stos
iret
adc
lock
pop
scas
sub
andb
mov
fldenv
xor
js
scas
cltd
dec
adc
jo
ja
pop
pushf
mov
mov
mov
jl
loop
push
shl
je
cld
arpl
lcall
pop
add
sub
lahf
out
cwtl
sub
mov
jno
pop
shrb
sbb
xchg
mov
lods
in
and
insb
sub
mov
xor
xor
into
dec
cmp
push
push
xchg
pushf
sub
mov
adc
lea
mov
mov
aaa
push
test
fucomp
add
adc
les
or
add
sahf
and
insb
call
jae
or
ljmp
xor
fsubrs
xchg
gs
sub
sub
add
dec
adcb
aam
jbe
fsubrl
ja
insb
pop
pushaw
call
sub
and
cmc
sar
adc
mov
addl
xor
pop
cmp
mov
lds
inc
fwait
iret
out
push
dec
shr
repz
loope
out
sbb
mov
jg
xchg
popa
push
add
mov
xor
les
xchg
std
cmp
pop
popf
shll
jmp
insl
xchg
mov
lcall
adc
and
sarb
repz
lret
sbb
xlat
sbb
cmc
rcl
jo
mov
mov
int3
cwtl
inc
outsb
mov
jle
jne
cmpsl
adc
flds
cli
rclb
popa
hlt
lahf
or
imul
jle
mov
xor
ja
imul
xchg
aas
cmpsb
cmc
and
xchg
fnsave
jb
pop
int3
adc
clc
pop
out
fimull
popa
mov
cs
cmc
hlt
cmp
lods
push
or
mov
xorb
xchg
das
xchg
xchg
or
sbb
in
ftst
push
or
cli
push
xchg
adc
pop
hlt
repnz
push
lcall
xchg
rclb
int
inc
gs
jo
arpl
sar
and
jle
xor
mov
dec
in
cld
jl
jp
ljmp
fmul
je
dec
xor
xor
into
inc
out
cmp
packsswb
ror
jle
and
movl
arpl
inc
mov
inc
sub
xchg
jnp
xor
xchg
nop
jmp
inc
cld
xchg
jle
stos
imul
push
movsb
add
xor
and
pop
cltd
cld
sbbl
hlt
cmpl
inc
stc
jl
inc
xlat
sbb
cmpsl
jp
aam
fimuls
imul
fxch
fs
mov
adc
pusha
ret
das
addr16
adc
push
fsts
nop
stos
sti
mov
data16
incl
xor
dec
xchg
dec
mov
movsb
pop
ds
inc
divl
pop
push
or
js
sti
pop
and
push
movsl
add
jle
mov
add
mov
stos
movsl
ret
test
scas
push
aas
push
jmp
vsqrtss
mov
mov
cmpsb
fildll
shlb
aam
mov
insb
fstpt
or
mov
mov
lret
adc
bound
inc
cwtl
and
insl
ficoml
enter
stos
pop
sbb
dec
xor
stos
ja
mov
movsl
sub
add
mov
mov
aam
jg
arpl
or
into
and
loop
fldl
or
fstps
mov
push
movsb
pop
push
call
mov
push
xor
arpl
push
mov
mov
call
inc
rorl
and
jb
mov
mov
cwtl
jmp
cwtl
and
cmc
inc
mov
pop
movl
scas
lret
nop
loope
shll
sub
push
pop
lcall
and
jns
stc
fwait
sub
pop
push
int3
movsb
pop
mov
gs
int3
imul
lods
fbld
xchg
out
push
decl
sbb
mov
push
int
cmc
push
out
ret
mov
push
adc
leave
sub
jo
adc
test
mov
mov
test
test
pop
in
jecxz
shll
mov
jmp
loope
xchg
inc
scas
out
sbb
mov
mov
push
ret
mov
lock
sahf
dec
movsl
mov
mov
dec
mov
clc
mov
andb
aad
adc
jae
pushl
cs
add
mov
lods
adc
enter
jecxz
adcb
push
cld
dec
pop
es
inc
dec
cld
fcmovnb
ss
sahf
cmp
fisttps
stos
decb
jb
xchg
jne
dec
cmp
lods
aaa
xchg
sub
or
sub
push
pop
mov
fwait
mov
jle
mov
adc
and
fs
adc
xchg
enter
iret
mov
push
mov
adc
gs
fidivrs
mov
data16
mov
jmp
es
pop
xlat
outsl
rorb
adc
sub
movntps
ja
aad
jecxz
adc
push
mov
les
out
or
roll
mov
movsl
insb
pushf
frstor
dec
push
or
or
inc
dec
add
push
jns
es
jmp
int3
fs
mov
cwtl
jnp
sti
out
lods
or
fsubrp
data16
mov
sbb
into
inc
in
pop
add
fidivl
loopne
dec
pop
mov
cmpsb
movsl
sbb
sbb
cmp
adcl
sbb
icebp
dec
popa
pusha
jns
jne
push
push
das
sub
ljmp
push
test
clc
popf
xor
rcll
pop
es
and
mov
sub
and
push
rcl
mov
or
sub
push
in
and
adc
ret
int3
arpl
call
repz
and
push
movsb
jg
dec
lret
push
mov
mov
lock
es
push
mov
xchg
and
stc
inc
ficompl
ficoms
jl
dec
and
call
mov
push
xor
mov
mov
dec
hlt
outsb
sbb
mov
adc
or
negb
jo
incl
xor
dec
xchg
psrad
add
pop
xchg
mov
sahf
sub
sti
xlat
jl
scas
adcl
cwtl
daa
lahf
bound
dec
pop
loope
ds
out
faddl
clc
or
inc
push
jb
sub
in
nop
movsl
in
scas
test
test
fwait
pop
imul
sub
lds
mov
jge
inc
loop
jl
jae
mov
push
lahf
inc
cmp
imul
fprem1
jl
lret
jl
fs
add
enter
mov
mov
mov
jo
mov
mov
or
inc
sub
add
xlat
adc
xor
sbb
xor
push
dec
xorb
and
subl
test
dec
pop
pop
rcll
mov
and
fidivs
jb
psraw
subl
out
add
cld
xor
shll
dec
dec
fdivrs
sbb
xchg
push
out
sti
inc
aam
cmp
mov
sar
mov
sbb
mov
pop
mov
les
xor
ret
leave
test
insl
loopne
shrb
add
sti
push
and
cltd
ss
jae
push
cmp
mov
and
pop
cmp
shlb
lret
jge
out
shlb
int3
and
js
adc
jge
adc
dec
lock
push
push
xor
pop
lods
xchg
adcb
stc
outsl
stc
or
sbb
cmpsl
mov
add
lods
pop
ret
inc
fnstcw
test
pop
push
sub
cmc
mov
repnz
or
dec
imul
mov
xchg
sbb
jno
sub
push
pushf
or
cltd
mov
in
mov
mov
push
call
cs
push
int3
cmp
cmp
rclb
adc
ret
jmp
xchg
leave
push
jno
inc
push
cmpsb
jno
xchg
hlt
hlt
and
aad
adc
and
mov
ss
cld
fcoml
ffree
sbb
cwtl
arpl
xorl
push
leave
in
shrl
loop
test
push
out
mov
mov
je
aaa
mov
cld
jle
and
and
xor
pop
cld
inc
inc
dec
mov
dec
scas
fsubs
or
movsl
stos
es
fidivrs
dec
push
xchg
leave
call
inc
inc
in
jg
mov
push
das
lods
jge
ficomps
sarl
xchg
cmp
fisttpl
aas
pusha
pop
hlt
xchg
pop
sub
pop
jne
jmp
xor
push
cmp
stos
andb
xchg
mov
lods
imul
adc
jg
ficoml
lret
into
mov
jg
cmp
xchg
mov
frndint
js
jg
xchg
adc
adc
fisubrl
sbb
nop
mov
ja
mov
jl
lods
andb
jl
ret
inc
sti
jns
push
pop
adc
test
lret
sti
iret
lea
jae
data16
sbb
or
test
dec
cmp
inc
cmpl
push
stos
fwait
imul
adc
mov
inc
ljmp
jbe
inc
loope
mov
push
movsb
xchg
push
les
jle
repnz
aas
mov
mov
rolb
ds
push
cmc
push
adcl
cmpsl
enter
aaa
std
insb
inc
xor
les
mov
mov
cs
pop
sysexit
ja
mov
pop
jge
test
leave
mov
push
lcall
stos
sub
iret
push
dec
in
add
popa
or
xchg
fwait
xchg
sub
lds
add
repz
cltd
push
adc
ss
pop
push
mov
rcll
pop
pop
clc
stc
orb
popa
cmpl
pop
sti
mov
push
leave
ret
push
fnsave
js
lahf
pop
inc
ljmp
mov
ret
xchg
loop
mov
xlat
sarl
xchg
sbb
pop
popa
clc
jnp
and
js
divl
aaa
push
insl
loopne
ffree
ja
roll
inc
loop
mov
arpl
xor
pop
adc
push
stos
stos
push
pop
ret
fcompl
or
fwait
psllw
adc
mov
and
clc
call
fnstcw
pop
jne
int
mov
lahf
mov
sbb
and
mov
pop
subl
iret
movsb
pop
in
fdivrl
mov
fsubrl
ffree
mov
imul
sub
loope
and
int3
jae
enter
mov
daa
jno
fs
pop
and
in
mov
in
cwtl
pop
jle,pt
mov
xor
scas
lods
push
xor
xchg
add
adc
mov
in
push
test
test
xchg
add
rcll
ss
mov
adc
enter
jle
add
pop
add
mull
lea
mov
pop
nop
dec
mov
add
lds
idiv
popa
fsubr
lahf
aaa
stos
or
addr16
jle
cmp
lea
lcall
xchg
xchg
addr16
fdivs
adc
sub
push
fstl
pop
pop
cmp
mov
and
sbb
push
push
add
scas
int
pushf
negb
xchg
ss
jne
sub
sbb
test
inc
jge
data16
fsubs
and
cld
lahf
subb
sub
cwtl
movsb
outsb
push
push
pop
dec
pop
adc
popf
je
cmp
pop
cs
and
xor
mov
mov
sahf
ja
lods
xor
cmp
ds
fs
xchg
dec
es
fs
mov
test
mov
fildll
add
fdivrl
shl
gs
lcall
push
push
movsb
mov
dec
sub
xchg
cli
push
adcb
int3
rcr
clc
push
mov
jns
test
mov
dec
data16
push
out
aam
cmp
aas
dec
outsl
pop
lods
ljmp
stos
stc
push
cltd
arpl
out
arpl
pop
or
insl
adc
dec
adc
cld
sbb
insl
in
clc
pusha
aas
dec
cmpsb
mov
mov
in
sub
cli
jl
add
aam
in
clc
dec
add
xchg
jg
rolb
jl
xchg
fbstp
mov
dec
adc
nop
fistpl
lret
lock
jb
sbb
aaa
lret
jae
lcall
jnp
jecxz
ds
ds
xor
out
ret
outsl
xor
add
arpl
mov
filds
mov
movsl
sbb
inc
mov
jmp
popa
add
shr
pushf
scas
movlhps
or
dec
jno
mov
pop
and
neg
out
fwait
dec
out
mov
out
lock
cld
nop
and
inc
sahf
or
mov
inc
inc
mov
fiaddl
flds
test
push
std
jo
cmp
inc
or
cmp
cmp
add
dec
pop
mov
mov
roll
cmpsb
inc
push
push
in
arpl
test
sub
lock
or
lcall
fists
mov
jcxz
notb
in
test
gs
shrl
ja
sub
loopne
and
xor
out
mov
mov
push
push
ljmp
xchg
adc
insl
add
xchg
dec
lock
jmp
mov
or
pop
sub
xchg
adc
dec
lret
data16
sub
cmc
out
andb
inc
orb
insl
aad
data16
rolb
or
into
test
lods
pop
lahf
dec
pop
sub
adc
je
lds
inc
and
pop
shll
cltd
test
ret
inc
and
or
loop
cld
notl
mov
jno
data16
pop
shrl
sub
ret
jle
xor
or
xor
dec
rclb
sbb
movb
mov
test
sti
aas
cmpsl
ret
outsl
cmc
or
sbb
adc
and
xchg
jno
xlat
fldl
jns
jns
sub
rorb
stc
bound
pusha
sub
aaa
fwait
xchg
or
dec
jae
mov
mov
cs
sbb
cld
push
leave
flds
mov
mov
jae
in
fwait
push
sub
jecxz
jecxz
adc
mov
push
call
fldcw
rcr
arpl
call
cmpsb
cwtl
int3
dec
cltd
cmpsl
cltd
test
shll
mov
aas
stc
lret
loope
xor
push
sub
outsl
cli
push
leave
mov
pop
sbb
pop
stc
popl
idivl
mov
xor
jge
xchg
sbb
je
iret
xor
mov
xchg
dec
jle
jle
jne
pop
mov
dec
dec
push
push
cmc
push
inc
dec
lahf
xchg
imul
sbb
cmp
sub
movsb
xorl
bound
add
into
sbb
imul
stos
in
mov
sbbb
loop
popa
leave
fadds
jle
mov
and
ljmp
sbb
mov
mov
dec
dec
add
mov
xchg
mov
jmp
adc
in
pop
call
stos
xchg
in
mov
xlat
xor
jno
stos
sub
xchg
sbb
imul
xchg
dec
movsl
pop
mov
inc
shr
movb
mov
mov
add
mov
and
fldcw
je
shlb
add
push
push
mov
sbb
cld
scas
and
stos
rorb
ficompl
das
ret
cmp
sbb
cmp
or
lods
fsubrp
adc
sub
push
daa
mov
and
mov
sbb
fdivp
xor
gs
pop
push
out
test
jnp
cmp
sub
fstpt
sub
arpl
xor
test
cltd
shrb
push
sub
roll
stc
push
pmaddwd
inc
aas
adcb
lcall
fwait
dec
pop
test
cmpsb
jns
push
pop
test
dec
in
loop
int
fisttps
mov
pop
cmp
mov
push
call
mulb
dec
and
repz
mov
aas
cmpsb
cmc
xchg
rol
mov
cmp
push
std
push
inc
pop
and
sti
xor
xor
pop
dec
cmc
xchg
cmp
es
sarb
aaa
xchg
loopne
adc
call
adcb
xor
sahf
fs
imul
xor
fistps
jmp
jnp
mov
mov
push
outsl
inc
test
mov
clc
in
iret
xor
ret
adc
into
mov
mov
fdivp
mov
xor
mov
and
pop
cmp
mul
mov
sbb
mov
mov
jle
sbbb
fwait
pop
mov
mov
aaa
or
cwtl
cmc
sbb
xchg
dec
xchg
pop
data16
je
mov
int3
pop
repz
je
fwait
dec
cmp
pusha
adc
orb
pusha
jge
mov
lods
mov
cmp
mov
and
mov
xor
mov
or
sub
int
test
pop
push
repz
inc
jae
lret
xchg
dec
dec
add
and
xchg
and
das
js
jecxz
clc
cwtl
jnp
leave
sbb
or
cld
test
and
push
dec
xchg
dec
in
jns
xor
or
mov
mov
jae
xlat
repz
test
jb
jmp
pop
ds
cmp
xor
pop
inc
fmull
xchg
jecxz
jb
into
jg
sahf
sbb
xchg
cmp
mov
sbb
test
aam
push
and
fdivl
and
das
int
or
dec
adc
into
pop
sbb
notl
mov
popf
mov
sar
adc
ret
push
inc
pop
cmpsb
rol
lcall
push
cmpsb
sbb
rorl
bound
mov
or
pop
adc
cmpsb
or
rorl
enter
daa
or
push
push
stc
loop
sub
cmp
fstpl
aad
out
inc
xor
mov
rcrb
fdivrs
lret
push
lcall
es
xor
gs
mov
or
mov
jge
addr16
lds
add
roll
adc
cmpsl
fistl
pusha
popf
add
bound
and
sub
addr16
xor
popf
sbb
mov
push
pusha
xcrypt-ofb
cmpsl
out
lds
lock
or
xchg
mov
cmp
insb
popf
and
and
mov
push
cltd
jns
cltd
or
mov
and
inc
pop
cmpsl
cltd
push
repz
int3
add
shrb
sub
xchg
rorb
test
mov
jl
xchg
in
push
mov
in
push
call
adc
pop
and
flds
ret
outsb
out
jno
lock
in
cs
sbb
add
jmp
push
cmp
lret
mov
cwtl
dec
dec
into
fmull
inc
inc
or
cltd
loopne
pop
inc
out
pop
lock
cltd
cmc
push
dec
aam
add
scas
pop
mov
push
lods
adc
sbb
test
bndstx
fwait
mov
call
xchg
aas
add
xor
xor
push
test
sub
insl
inc
sub
leave
inc
mov
rclb
pop
xor
ds
jb
stos
sbb
xor
je
dec
inc
popf
nop
inc
call
inc
ljmp
and
imulb
stos
inc
or
scas
adc
hlt
mov
aam
out
or
bound
lret
movsl
loop
pop
std
jne
mov
cmc
fdivrl
cmp
mov
shl
mov
xor
mov
rclb
enter
out
data16
cwtl
mov
push
rol
shll
inc
dec
xchg
fs
sahf
mov
fildll
mov
inc
mov
test
inc
pop
cmc
ljmp
cs
mov
add
leave
mov
mov
scas
dec
and
adc
das
lock
jae
push
data16
xchg
mov
and
mov
mov
fistl
into
push
sbb
xchg
xchg
dec
aad
jle
sbb
leave
mov
out
mov
xlat
movsb
pop
mov
add
addr16
bound
pop
js
sar
int
cmpsb
push
imul
pop
cmpsl
ja
mov
xor
dec
mov
mov
loopne
mov
push
fcmovne
xor
cmp
mov
ret
int3
cli
std
jle
adc
cmp
test
fdiv
pop
in
jno
jbe
pop
icebp
cmp
repz
out
shlb
inc
push
fsubs
inc
jmp
js
inc
push
mov
out
sub
dec
xor
cmp
loop
fnsave
and
jmp
ljmp
leave
fistpl
outsb
add
into
or
push
repnz
sbb
mov
pusha
clc
or
fcoml
call
fucom
sub
pmaxub
or
jl
mov
inc
xchg
or
adc
jne
and
or
popa
mov
push
dec
add
or
and
xchg
fistl
mov
cmpsl
adc
jp
push
and
inc
sub
mov
shl
aaa
add
push
popf
in
or
and
jno
shll
cmc
jmp
adc
andb
xchg
mov
lret
mov
fsubl
xor
xchg
and
lcall
sub
bound
sahf
enter
decl
fcomip
mov
cmpb
mov
pusha
negl
testl
jle
pop
aaa
jbe
xchg
mov
jg
add
push
mov
popf
int3
imul
push
lea
lret
fwait
mov
mov
cmp
out
or
arpl
add
pop
pop
mov
mov
xchg
mov
bound
pop
sub
mov
dec
xchg
fldcw
push
enter
roll
nop
mov
jg
push
popf
jge
dec
rcl
and
sbb
jecxz
cli
jmp
cs
pop
icebp
sahf
lcall
or
shrb
add
mov
xchg
ss
mov
xor
aad
dec
aaa
inc
in
stos
jne
adc
xchg
test
adc
push
int
in
xor
fs
pop
fidivrs
sti
jo
shlb
push
push
je
int
or
icebp
mov
sbb
call
pop
sub
push
testl
and
jge
mov
out
pop
and
shlb
pusha
inc
out
sbbb
sub
cli
pop
jno,pt
repnz
xor
fwait
xor
insb
pop
pop
jp
inc
lods
out
fwait
out
icebp
popf
faddl
in
es
in
loopne
mov
dec
in
imul
fwait
scas
xchg
test
ja
in
inc
push
ret
push
sub
or
jmp
cs
imul
xchg
mov
out
call
or
cmp
aam
mov
or
push
insb
xor
cmp
filds
dec
push
pop
sahf
inc
test
out
mov
out
push
cli
push
test
push
dec
sbb
sti
mov
into
dec
adc
mov
mov
shr
mov
ficoml
lds
daa
fsubs
out
cmp
jecxz
or
sbb
stos
cmp
jnp
imul
ret
bndldx
xor
adc
push
push
or
xor
aad
stos
dec
out
sbb
sub
or
xchg
mov
adc
int3
rorl
mov
popa
xchg
test
mov
mov
je
gs
aam
loop
sub
dec
out
fwait
call
mov
lods
cmp
pusha
xlat
aas
test
fidivrl
xchg
stos
and
inc
sub
push
daa
andb
and
mov
add
mov
inc
in
fwait
and
fdivrl
test
push
xchg
push
sub
jecxz
nop
ss
cli
in
ss
mov
add
in
jl
push
hlt
push
adc
out
shll
repnz
testb
pop
int3
in
out
pop
pop
inc
mov
dec
jecxz
fsubrs
fidivrs
testl
push
repz
mov
cmp
incb
sub
sahf
pop
lods
inc
in
cmp
js
ret
mov
push
sbb
dec
cli
cld
in
pushf
adc
mov
xor
push
popa
pop
mov
push
dec
outsb
xchg
inc
pop
in
inc
out
cld
pop
or
cmp
mov
inc
adc
and
adc
mov
outsb
out
mov
dec
or
mov
mov
add
dec
imul
mov
or
js
gs
popf
jb
jp
adc
mov
arpl
insb
adc
ds
outsl
fcomps
loope
nop
push
cmpsb
inc
add
jg
mov
jle
sbb
mov
in
xchg
lods
adc
and
call
or
pop
ljmp
stos
inc
lods
fdivr
cs
mov
push
cld
sbb
insb
inc
mov
stc
xchg
ljmp
or
cltd
cmc
nop
pandn
xchg
push
cld
and
and
inc
and
cwtl
jb
push
lods
mov
dec
push
dec
or
lds
mov
jns
sbb
movsb
inc
add
push
cmp
push
ds
testl
mov
add
mov
adc
imul
das
push
mov
clc
or
mov
arpl
add
push
cmpsb
mov
sbb
xor
dec
add
fnstcw
cli
cwtl
fistl
add
daa
push
mov
aad
fsubrl
jb
aaa
test
jne
imul
jae
cmpsb
xchg
test
or
js
and
into
jecxz
fldcw
inc
rsm
xchg
int3
push
fisubrs
jecxz
icebp
sahf
nop
jnp
divb
lock
fwait
hlt
cmp
jecxz
inc
ds
inc
xor
je
fyl2x
and
xor
push
sub
pushw
fmul
inc
push
jmp
pop
or
xlat
movsb
pop
stos
mov
shlb
lcall
idivb
push
aad
ds
aas
mov
lret
mov
daa
pop
rcrl
out
cmp
outsl
int3
test
dec
fsts
sbb
sbb
shrl
iret
pop
ljmp
pop
sahf
mov
pop
sub
std
dec
mov
out
hlt
dec
cld
addr16
and
mov
mov
sub
gs
in
jns
or
dec
add
lods
pusha
rol
popa
int
sbb
lcall
mov
es
mov
movsl
loopne
sub
out
cmp
nop
ljmp
mov
dec
lret
sub
mov
pop
jg
lret
jle
sahf
loopne
cwtl
push
dec
loope
repz
std
cltd
insl
add
ljmp
mov
pop
lcall
push
scas
out
xorl
test
jne
push
mov
lret
ljmp
xchg
loopne
push
mov
rorl
dec
pop
inc
sbb
dec
gs
jae
xchg
imul
test
sub
push
xor
leave
aad
mov
and
cmp
leave
jecxz
sub
xlat
popa
push
mov
mov
sbb
jns
sub
clc
lea
fsubrs
mov
push
jo
jo
push
ret
hlt
adc
xchg
pop
dec
out
iret
fsts
lret
ljmp
rclb
das
dec
andb
or
repnz
pop
popa
call
xor
sbb
lods
fld
aas
cmp
imul
sbb
xchg
stos
adc
push
inc
or
pop
push
lret
fwait
addr16
dec
push
outsl
cli
pushf
ret
pop
jno
lahf
ss
xchg
dec
add
add
mov
push
and
mov
jl
mov
cmp
ret
inc
fiadds
out
xchg
push
pop
int
mov
jmp
push
lods
add
sub
call
or
sub
inc
in
inc
pop
mov
je
cmp
ja
mov
lret
sbb
or
insb
jp
mov
jb
ret
cmp
dec
and
rorl
pop
aas
pop
andb
mov
repz
push
jmp
dec
mov
jp
cmpsl
add
fwait
push
xor
jg
xchg
lea
testl
out
cltd
adc
mov
xchg
mov
fst
test
and
sahf
mov
sbbl
fs
jg
adc
jecxz
data16
arpl
psrad
outsl
shlb
jb
movsl
mov
std
mov
push
or
sahf
mov
add
test
jmp
aaa
sub
push
gs
in
mov
pusha
fisubrs
loop
mov
div
pop
adc
sarb
mov
xor
lret
mov
bound
mov
sub
in
xchg
test
orb
jp
lds
jne
lods
leave
loopne
inc
add
inc
hlt
and
inc
jbe
dec
add
js
loop
and
insb
sub
test
mov
cmpb
imul
test
fldl
and
sbb
mov
jecxz
pop
xchg
subb
imul
scas
out
xacquire
mov
data16
push
movsl
xchg
mov
ret
mov
shlb
inc
or
xchg
lahf
loopne
inc
inc
hlt
or
ret
push
enter
je
decb
push
sub
jb
sub
and
sti
mov
icebp
sbb
lds
imulb
and
pop
push
cmp
jmp
cwtl
and
jb
xor
repz
adc
fwait
jno
or
and
outsl
pop
into
pop
sub
jecxz
mov
add
shrb
imul
mov
movb
aad
movsl
and
pushl
outsl
cs
sahf
popa
push
in
or
int3
jns
push
es
es
jmp
mov
sub
jg
fildl
cmp
mov
mov
mov
les
daa
sub
cwtl
inc
lret
dec
outsl
jns
addr16
xor
jb
sbb
add
xor
add
int3
inc
js
dec
clc
notb
dec
inc
jmp
cmp
xor
adc
imul
sbb
pusha
push
add
andb
arpl
or
lea
fiaddl
nop
jnp
inc
inc
push
js
loop
jb
loopne
dec
ljmp
lods
sbb
push
int3
mov
bound
nop
pop
fidivrl
dec
push
mov
push
cmp
bound
mov
mov
lret
mov
fildll
scas
aad
in
adc
jns
adc
subb
cltd
push
xor
xchg
add
bound
sub
sbb
repz
push
cmp
cld
outsl
sub
push
xchg
push
add
je
xor
das
mov
int3
xchg
dec
stos
enter
lret
negb
stos
mov
jb
insl
xor
sbb
gs
movsb
jecxz
aam
lods
or
in
test
aas
stc
jno
pop
icebp
push
or
cmp
push
pop
xchg
sub
jae
mov
sub
add
mov
and
fsts
mov
mov
push
andl
lret
mov
or
mov
adc
or
push
inc
stc
mov
mov
fcmove
xchg
and
mov
leave
loop
arpl
ds
mov
inc
stc
loope
jle
les
gs
pop
popf
scas
lea
inc
bound
testl
xchg
divl
outsb
add
jnp
mov
add
rclb
mov
scas
jmp
mov
mov
flds
lcall
mov
push
repz
sbb
andb
je
cli
jne
lods
and
orb
jge,pn
mov
dec
les
loope
shlb
in
inc
test
notb
cmp
mov
mov
dec
and
repnz
sahf
pop
data16
cmp
subb
push
mov
or
inc
bound
lahf
sahf
inc
les
roll
mov
jns
cmp
out
xchg
pop
test
imulb
jo
cwtl
xchg
xor
call
cmc
ds
aaa
inc
mov
pop
sbb
cmp
daa
dec
in
inc
lods
pop
lock
js
xchg
fcmove
out
and
xchg
cld
add
mov
fucomip
inc
adc
sbb
subl
scas
test
imul
repnz
sbb
rol
scas
sub
add
rcrl
inc
push
icebp
jns
and
push
aas
lcall
fsubr
mov
lahf
jge
fs
inc
jb
lea
mov
push
xchg
mov
sub
jno
pushf
stc
cmp
mov
sbb
loopne
arpl
xchg
lods
ja
frstor
mov
jge
xor
xchg
cli
cmp
out
hlt
mov
jmp
lods
sbbb
pop
loop
pop
push
popf
stc
sub
cmp
cmp
fisubrs
mov
pop
cmp
mov
jmp
cwtl
jg
fnstcw
scas
pop
je
in
or
cmp
in
out
loop
mov
jle
pop
push
xchg
push
cmpsl
jl
inc
dec
out
jnp
inc
and
xchg
cmpsb
mov
pop
mov
stc
inc
mov
ljmp
lods
adc
push
mov
inc
test
lcall
int
aam
dec
sete
dec
pop
adc
cmp
jnp
and
jg
cmp
inc
clc
pop
insl
sub
mov
pop
test
adc
test
adc
xchg
test
fnstcw
jecxz,pt
das
inc
in
inc
std
pop
pop
push
dec
xchg
cmp
dec
lea
out
push
stos
xchg
pop
dec
fadd
cld
or
mov
push
lret
mov
scas
shlb
adc
adc
xor
je
or
or
fnsave
int
cwtl
add
or
daa
outsl
test
push
mov
adc
xor
rolb
push
sub
mov
jns
ds
gs
push
int3
sub
jno
pop
orl
push
xlat
mov
lods
cmp
arpl
inc
push
inc
gs
ss
fidivrl
adc
mov
mov
fwait
push
mov
push
xor
add
mov
push
lock
mov
adc
shll
loopne
lods
pusha
shlb
cmpsb
loope
or
stos
adc
sahf
jno
mov
fsubl
push
imul
scas
cmc
frstor
mov
or
add
add
enter
xchg
in
or
push
les
imul
fsubrs
pop
and
popf
adc
sbb
out
and
xor
leave
add
pop
xor
xor
xor
mov
insl
sub
ljmp
mov
je
mov
test
lret
xchg
adc
pop
jae
jp
sbb
cld
pusha
mov
ret
in
in
mov
in
mov
jle
jne
mov
dec
scas
sbbl
enter
out
or
sbb
mov
or
int
std
fidivl
add
dec
sahf
jne
sbb
add
push
ss
sub
pop
sbb
cmp
push
cmpsb
cli
fadds
es
push
xor
or
iret
jns
lahf
mov
sbb
mov
jae
fcompl
or
lds
push
push
call
jo
jmp
les
in
ret
inc
ret
cmp
je
jb
add
mov
scas
inc
cmpsb
jo
xchg
fs
stos
and
lret
pop
cld
int
xchg
icebp
add
dec
dec
icebp
pop
xchg
pop
fwait
test
sub
insl
sahf
dec
shll
dec
jmp
clc
outsl
sub
ss
aam
out
js
stc
ja
sub
jp
add
inc
inc
or
and
test
push
idiv
daa
lcall
inc
cwtl
mov
xchg
ret
ja,pn
mov
pushf
xchg
sub
jl
rol
mov
imul
mov
cmp
push
fs
pop
push
rol
popl
sahf
ss
arpl
mov
arpl
lahf
jbe
orb
ss
pop
sahf
pop
cmp
pop
cmc
das
es
mov
fmull
mov
dec
pop
pushf
mov
mov
into
inc
jnp
loopew
mov
inc
js
repz
das
into
enter
outsl
aas
in
push
or
mov
cwtl
jae
ja
mov
push
mov
std
fcoms
xchg
loopne
ret
xor
adc
xor
pushf
clc
jne
jp
push
xor
repnz
movsb
push
out
test
inc
add
mov
sub
sbbl
or
pop
data16
pushl
mov
js
add
sub
cmp
cmp
lahf
and
dec
pop
popf
mul
jns
fisubl
roll
push
cmc
and
aaa
jle
out
clc
push
stos
cmp
jne
jb
jns
imul
pop
sub
pop
fiadds
cmpsb
dec
pop
js
andl
xchg
bound
cmp
xlat
add
xor
pop
sahf
cwtl
pop
sarb
shlb
lret
jb
sbb
mov
xchg
in
out
testl
dec
inc
jp
mov
dec
cwtl
push
inc
fstl
or
lods
insb
out
iret
arpl
lea
jle
insb
jl
sti
or
jb,pn
popa
mov
call
jno
filds
or
hlt
mov
mov
fdivl
mov
and
fidivrl
mov
aad
mov
sub
cli
push
aam
imul
fs
xor
je
and
shll
in
push
test
sub
mov
inc
push
out
outsl
sbb
imulb
push
mov
jae
jmp
jge
fnsave
add
rcrl
stos
enter
adc
xchg
mov
lret
ret
push
loope
fidivs
xchg
xlat
mov
inc
test
jle
xor
add
stos
lds
cld
shll
jae
lahf
jne
sbb
add
sub
clc
push
pop
xor
stc
std
sbb
rol
in
les
add
adc
test
inc
or
xor
mov
leave
sub
in
jmp
push
into
not
mov
in
daa
in
jbe
lcall
jbe
sub
or
or
sbb
fdiv
sub
xchg
push
xchg
add
mov
xchg
fld
adc
mov
fcos
fistl
jl
inc
and
lock
push
shll
mov
les
lods
mov
xlat
movl
jns
orl
clc
mov
mov
dec
jo
mov
xchg
mov
outsl
inc
or
fwait
scas
shrl
leave
shrb
push
es
repnz
out
xchg
mov
xchg
outsl
outsl
xchg
sbb
cmp
lock
push
imul
pushf
xor
ret
sbb
mov
push
call
in
inc
jo
push
mov
std
xchg
xchg
rolb
int
add
pop
adc
test
mov
jmp
jl
inc
fcoml
sub
es
aad
sbb
cs
xchg
je
xchg
adc
ret
loop
jp
add
jno
ljmp
mov
loop
xchg
aad
imul
dec
and
mov
mov
in
in
or
stc
int3
cmc
data16
mov
lcall
adc
test
pop
mov
sub
push
dec
rcr
dec
add
cmp
mov
movsl
xchg
sub
mov
loope
outsb
fwait
or
out
sarl
or
pop
mov
pop
jmp
sbb
xor
out
cwtl
repz
xchg
sub
jp
mov
cmp
leave
out
sahf
sub
mov
cld
pop
pextrw
lods
es
aad
stos
sub
mov
xchg
inc
shl
xor
cwtl
or
jmp
outsl
adc
xlat
icebp
mov
ficoms
into
faddl
mov
pop
enter
sti
sub
ds
cwtl
lds
negl
inc
icebp
ficoms
mov
cmp
push
aam
daa
dec
mov
add
pushf
lods
loop
lock
sub
mov
xchg
mov
cmp
mov
data16
push
xchg
add
adc
or
test
sahf
rorl
and
ret
rcll
jle
mov
xchg
ret
fadds
cmpsb
push
popa
push
sbb
test
js
xlat
insl
and
mov
movsl
pop
cmp
in
loope
lods
test
and
cwtl
mull
call
stos
xchg
inc
fldcw
mov
movsl
mov
add
movsl
mov
fstl
cld
mov
xor
cmp
jbe
cmp
les
mov
sbb
jns
lahf
push
sub
sbbl
daa
not
ds
or
nop
mov
xor
popa
mov
rclb
inc
cwtl
xchg
pop
aas
push
cmc
fwait
sti
cmp
andb
enter
jg
xor
jo
push
push
ljmp
mov
push
shlb
pushf
mov
roll
or
xchg
stc
fisttpll
mov
call
in
mov
mull
mov
ret
bound
stos
addl
jne
fildll
clc
adc
ret
push
imul
in
out
cld
push
loop
lret
out
mov
cmpb
mov
aas
push
imul
mov
jle
js
adc
or
enter
xchg
insl
stc
nop
out
dec
hlt
inc
mov
or
dec
mov
xor
daa
adc
stos
mov
rorb
mov
in
lods
fsubl
jg
sub
adc
xor
and
add
and
pop
popf
push
inc
cmp
jle
arpl
jns
jp
xchg
lcall
in
push
inc
loope
mov
pop
mov
push
fists
inc
loop
movsb
xlat
in
lods
and
jg
shrb
cmp
and
jb
or
sub
call
sub
sbb
lock
lahf
addl
nop
sbb
aam
sbb
sub
imul
adc
test
ret
shll
and
inc
ja
adc
add
mov
mov
or
jno
outsl
cmp
dec
push
add
mov
mov
subb
jae
cli
das
pusha
pop
sub
gs
jns
in
xchg
xor
cmp
mov
sbb
jg
jge
pop
dec
dec
pop
dec
push
jnp
push
fldenv
sahf
xchg
imul
outsb
inc
inc
leave
mov
nop
add
outsb
mov
shrl
mov
inc
jbe
adc
mov
mov
push
jno
cltd
xchg
pop
jbe
push
jb
push
xchg
pop
mov
mov
cmpsb
or
jle
jnp
cld
lock
das
cmpb
sub
and
sahf
lods
popa
jns
ss
in
nop
cmp
stos
fstps
pop
js
mov
popf
test
nop
roll
call
jne
adc
adcl
jge
xchg
out
xchg
jae
add
push
lcall
push
bnd
mov
jb
mov
and
mov
addr16
push
cltd
std
gs
cmpl
idiv
jb
mov
mov
push
insb
daa
adc
xor
shrl
add
cs
test
inc
jl
mov
add
mov
negl
xchg
mov
dec
mov
ficoml
das
mov
sbb
stos
xchg
mov
cs
mov
aaa
into
add
mov
mov
rcrb
inc
inc
sbb
shld
xchg
les
fs
cld
xor
jns
add
mov
sub
or
movsl
por
push
mov
std
xor
aaa
into
push
jecxz
mov
and
sub
inc
xchg
enter
scas
rcrb
mov
sahf
pusha
pop
xchg
mov
cmp
scas
lea
out
jl
push
xor
pop
pushf
ja
movsl
push
adc
sahf
xor
push
imul
mov
jl
aad
mov
mull
sti
sub
sub
inc
xorb
mov
fidivs
adc
mov
lret
cmp
and
sbb
jecxz
jns
fimull
fs
gs
xor
ficompl
add
jne
mov
inc
les
ficoms
sub
sbbb
or
cmc
dec
mov
add
cltd
cmpsl
gs
and
cs
inc
xor
pop
push
test
mov
cmpsl
jge
into
test
or
fsubs
and
into
icebp
loope
test
xor
popf
sub
in
inc
sahf
push
xlat
xchg
loopne
test
mov
fwait
dec
enter
xchg
imul
repz
repnz
mov
adc
lcall
loope
ss
dec
outsl
jecxz
cmp
fisubrl
pop
mov
fstpl
repnz
xchg
push
sbb
or
in
ret
fadd
aas
pusha
imul
jge
xchg
mov
sahf
and
shr
adc
inc
push
fsts
gs
dec
mov
jo
ret
rorb
xchg
cmp
in
repz
xor
bnd
mov
pushf
pop
dec
ret
push
lock
mov
push
sahf
sub
jp
jmp
xchg
mov
lcall
or
and
mov
adc
jne
cmpsl
ds
in
push
shr
std
lds
cmpsl
icebp
jbe
cmp
hlt
adc
dec
mov
loopne
aad
xor
daa
cmp
mov
in
sbb
jo
lret
roll
out
hlt
jnp
cmp
ljmp
iret
add
addr16
push
inc
addl
sbb
mov
testb
pop
mov
dec
in
push
iret
shlb
sub
mov
fiaddl
outsl
stos
cmp
notb
in
rclb
out
in
movsl
push
xchg
xor
sahf
fiadds
daa
icebp
movsb
push
adc
add
cli
jg
fidivrl
push
push
mov
mov
inc
and
inc
pushf
cli
in
sub
or
sub
cld
adc
bound
inc
fmull
pop
mov
mov
iret
lds
into
mov
add
cs
fwait
inc
jno
and
outsl
dec
iret
rcl
ljmp
xor
mov
gs
xorb
std
not
lds
rcl
xchg
pop
loop
add
stos
orb
imul
jne
fstps
fs
aaa
lods
shr
sbb
mov
std
xchg
popa
aad
aam
add
stos
mov
push
aad
sub
jge
add
pop
and
loope
sbb
std
stos
cmp
bound
fwait
cs
or
andb
or
mov
loopne
int
push
and
insb
jmp
mov
xlat
or
lret
pop
repz
pusha
mov
jp
or
xor
pop
ds
pop
lret
aam
loop
rorb
popa
pop
ja
cltd
mov
out
in
and
addr16
push
mov
aaa
xchg
pop
cmp
lss
sbb
sub
mov
lock
mov
xlat
xor
jb
jae
add
into
popa
cwtl
das
mov
fnstenv
test
xchg
or
sbb
rolb
jne
xchg
mov
lret
ja
cwtl
int
call
push
ror
xchg
dec
jbe
mov
mov
xlat
mov
pop
sahf
or
and
cmp
aad
cmp
idivl
or
vshufps
aad
inc
les
shll
push
push
idivl
cmp
lret
mov
fcoml
mov
std
sbb
add
popa
lock
xchg
incl
call
js
fstpl
lahf
push
lods
les
test
mov
data16
xchg
sti
lods
jbe
fistps
mov
jnp
adc
movb
decb
sub
in
add
mov
or
sub
push
xorl
xchg
dec
or
scas
sti
inc
mov
movsb
xorb
es
cld
lcall
lock
adc
push
cmp
jp
movsb
inc
fcom
adc
cmpsb
stos
out
aas
sbb
jge
dec
mov
ljmp
stc
pop
cmpsb
push
scas
loopne
loopne
cs
xor
sub
jbe
leave
imul
testb
cmp
pusha
push
stos
mov
mov
ret
iret
mov
js
leave
xor
pusha
dec
in
rorb
das
dec
dec
cmp
subb
jle
add
or
lahf
or
inc
jecxz
jmp
fs
and
dec
out
jmp
mov
pop
mov
rorl
rcr
insb
ds
cltd
fdivs
arpl
mov
aam
fnstenv
into
iret
sub
call
int3
imul
sub
cmp
add
add
test
in
arpl
inc
add
gs
dec
loop
pop
push
nop
pop
cmp
adc
hlt
mulb
out
pop
push
in
xchg
fsubr
push
arpl
push
sub
inc
inc
dec
ret
mov
outsb
xchg
lcall
push
rclb
cmc
mov
stc
inc
lods
mov
adc
sahf
jne
xorl
arpl
xor
xchg
add
xchg
test
outsb
push
add
xor
fldcw
push
jecxz
lret
fstpl
fcoml
stos
push
and
imul
loopne
test
add
sbb
inc
cmc
mov
xlat
adc
mov
cltd
xor
enter
pusha
push
or
out
sbb
add
mov
xor
or
into
push
test
pop
test
lcall
jae
sbb
test
mov
inc
jne
inc
sahf
push
add
pop
enter
in
jg
mov
sbb
mov
arpl
mov
cmp
push
jbe
outsl
mov
test
into
popf
xor
aas
ja
in
mov
jge
imul
adc
or
xor
daa
leave
xchg
push
icebp
mov
mov
xor
mov
jno
fldt
in
pushf
add
pop
and
jae
mov
pop
xchg
sub
jb
iret
inc
pop
lret
out
push
pop
mov
add
pop
ret
jae
sahf
sub
movsb
push
std
dec
jecxz
test
jge
or
nop
std
mov
lods
outsl
or
inc
popf
mull
pop
lahf
in
add
std
ret
sbbl
das
jmp
into
sub
dec
rol
dec
xlat
mov
repz
push
cltd
push
loope
xor
lret
push
pop
or
into
mov
inc
shrl
or
mov
push
insl
add
lret
adc
or
into
inc
add
push
xor
cwtl
pushf
cwtl
popa
cmp
lcall
fidivrs
and
mov
fldl2t
scas
jno
push
sub
mov
add
sub
fcoms
mov
loopne
add
insb
sub
cld
xchg
dec
inc
and
push
or
cmpsl
pop
hlt
fdivrs
jb
cmp
mov
dec
fs
or
and
stos
mov
repnz
imul
sbb
cltd
inc
mov
and
xchg
lcall
pop
jo
ret
jmp
out
neg
adc
mov
movsb
lock
scas
sub
leave
xor
inc
jbe
jmp
sbb
rcl
hlt
push
ljmp
jne
in
into
dec
jbe
insb
push
inc
outsb
sub
sbb
lret
ds
or
push
adc
or
push
js
xorb
xchg
add
push
in
mov
leave
and
cmp
mov
mov
ja
into
imul
lcall
sub
aaa
push
push
sahf
sbb
xchg
dec
xlat
popa
clc
add
push
mov
popa
cli
inc
xorl
push
negb
mov
ret
les
or
sbb
cmpsl
push
adc
cs
jns
shll
xor
xchg
jno
sub
push
lock
in
lcall
cmp
sub
jg
inc
pop
and
imul
dec
cli
xchg
jnp
mov
xor
pushf
xor
push
pop
scas
inc
movsb
out
fmuls
mov
push
sub
fldenv
xchg
pusha
aaa
rcl
sub
orl
inc
push
jns
rcll
cltd
je
in
in
in
xlat
jbe
mov
shlb
inc
mov
jns
lret
xchg
add
mov
pop
mov
scas
mov
adc
icebp
or
lds
mov
inc
ret
mov
sbb
jecxz
pop
hlt
adc
mov
sbb
dec
push
cltd
cmp
mov
inc
jo
xor
outsl
and
push
fbstp
pop
inc
fdivrl
cli
push
ret
pop
jl
push
xorb
aad
in
lret
repnz
jns
push
aad
test
lds
adc
jp
mov
push
mov
movsb
lds
je
out
jb
inc
cmp
lcall
fsts
mov
cmc
lea
loope
mov
je
cmp
lods
int3
out
sti
or
sbb
in
rolb
neg
or
sbbb
aam
roll
dec
stos
movl
dec
xchg
pop
or
xchg
aad
jne
movsl
out
dec
mov
flds
into
int
sub
test
mov
and
sbb
sub
add
jl
scas
pop
and
jb
add
icebp
push
in
aas
push
sbbb
call
mov
cmpsl
pop
lock
xchg
jno,pt
push
xchg
pop
sbb
add
dec
popa
in
mov
lret
divb
xchg
pop
cwtl
add
dec
xor
add
repz
insb
aad
les
je
and
ret
mov
or
ja
sbb
mov
notl
xor
mov
out
jnp
pop
fcmovb
dec
pop
pop
and
test
mov
jbe
sahf
adc
popaw
adc
xchg
xchg
mov
or
inc
cmc
jnp
dec
loope
and
aas
sub
sub
mov
push
in
push
adc
fnsave
jecxz
outsb
pop
cld
xchg
push
lods
iret
bound
repz
xchg
xchg
arpl
pmaxub
xor
xchg
test
mov
push
mov
cmp
adc
pop
sbb
dec
test
mov
sub
es
les
adc
push
jnp
or
mov
or
lahf
xchg
jb
lock
mov
out
mov
and
insb
jb
sarl
out
pop
insb
dec
loopne
jnp
std
jnp
addr16
lcall
inc
mov
outsl
mov
adc
les
sti
arpl
and
adc
or
loop
mov
test
ret
mov
shlb
daa
jg
sbb
arpl
in
loop
in
mov
ljmp
sti
lock
fs
mov
xor
xchg
mov
mov
lret
imul
enter
out
loopne
out
incb
lock
push
xor
sub
add
lret
pop
and
push
fldcw
ret
pusha
pop
cmc
insl
testb
push
inc
push
outsl
push
mov
and
lods
cmc
adc
dec
and
add
xchg
jnp
mov
and
add
jg
es
rclb
push
mov
jmpw
daa
mov
sub
inc
les
mov
mov
add
xchg
xchg
jge
icebp
shrb
adc
mov
iret
lods
cmp
dec
pop
adcb
aaa
sub
push
mov
mull
push
add
jge
insb
and
xor
or
push
pop
stos
jp
mov
jmp
fstpt
nop
add
or
lods
pop
sbb
pop
push
test
in
jns
xor
mov
loop
imul
js
mov
xchg
loopne
xor
std
nop
out
and
pop
fdivs
shrb
arpl
push
lods
or
out
mov
and
pop
cwtl
inc
mov
fs
xor
dec
mov
js
xchg
pushf
push
pop
cmpsb
popf
dec
and
cs
mov
cmp
dec
pop
pop
pop
loopne
mov
das
aaa
pop
call
pop
push
movsl
dec
cmp
scas
out
pop
mov
xor
into
shr
scas
lcall
cmpsb
add
sub
leave
fistl
cmpsl
pop
xchg
orl
mov
pop
lahf
xchg
lds
fsubr
cmp
mov
in
bound
jno
ret
outsl
pushf
js
or
sarb
rol
cwtl
mov
enter
aam
xlat
cmpsl
inc
aam
mov
or
push
sub
or
jo
cltd
xor
sbb
jp
inc
inc
popf
dec
xchg
mov
fists
out
lea
pop
es
cmpsb
or
cmp
ss
jne
pop
sar
xchg
jo
sbbl
lea
push
insl
xor
push
imul
sahf
or
xchg
data16
aas
lret
out
mov
bound
rclb
jmp
cltd
int
hlt
push
mov
add
in
push
sub
test
bound
scas
jmp
dec
sub
shll
lds
jge
push
inc
daa
jg
data16
mov
mov
sahf
fs
orb
aad
push
cld
std
test
insb
push
cld
ja
orl
sbb
movsl
repnz
into
inc
repz
jmp
fmulp
adc
scas
call
lcall
rcrb
or
sub
push
insb
out
xchg
inc
icebp
mov
mov
inc
mov
pop
outsl
sub
stos
jo
aas
sub
in
in
xlat
pop
cmp
xchg
inc
fcmovnb
mov
add
lods
and
cwtl
adcl
adc
mov
xlat
je
scas
stos
cmp
xor
add
xor
lods
mov
leave
jmp
mov
xlat
inc
add
cmpl
cmpsl
ljmp
mov
addr16
pop
cmp
and
cmp
inc
fstp
pop
or
xor
repnz
jo
mov
fstps
cltd
xor
sbb
sbb
inc
test
sub
jl
jg
sahf
mov
fsub
std
push
jbe
cmp
cmp
mov
sbb
or
mov
or
call
rcll
lahf
pop
pop
sbb
mov
dec
in
into
jno
pop
nopl
in
sti
pop
or
int3
test
sbb
dec
sahf
aad
push
repz
call
aas
lea
mov
ss
shl
jmp
fiaddl
sub
lock
add
cmp
fs
add
lcall
clc
int3
or
jnp
stos
stos
ficoml
sbb
jo
mov
pop
dec
jns
jmp
jns
fnsave
sub
cmp
pop
or
lods
sub
mov
fcomip
hlt
xchg
test
and
js
dec
in
jp
jp
ljmp
pop
shrb
sbb
adc
loope
stos
xor
call
cmp
out
sub
lds
jo
add
jge
inc
adc
stos
jl
and
insb
in
pushl
jecxz
mov
dec
dec
sub
adc
fidivs
pusha
inc
jle
cmp
iret
out
inc
jnp
das
loopne
jle
xchg
lods
jmp
add
xchg
xor
addb
xchg
mov
xchg
nop
pop
jno
icebp
loop
or
xor
cltd
inc
push
cli
inc
push
stos
adc
pop
dec
and
test
std
inc
sbb
dec
mov
in
or
mov
mov
dec
mov
or
push
jg
jmp
faddl
jmp
divb
in
jbe
xor
enter
add
mov
data16
stos
mov
lods
fadd
push
pop
lahf
orb
pop
push
inc
sub
insl
push
or
lahf
ss
fsubl
pop
xchg
dec
lea
je
cli
movsb
fcmove
sub
add
adc
mov
movsl
add
pusha
fisubl
sub
push
out
lret
sbb
int3
inc
stos
jb
std
lods
sub
add
xor
xchg
scas
xchg
add
and
pop
pop
in
push
add
incl
arpl
xchg
mov
fdivrs
bnd
push
scas
cmp
add
or
push
fwait
xchg
stos
xchg
jl
das
icebp
inc
test
push
loope
fwait
cltd
mov
inc
fs
fisubs
lds
adc
je
popa
cmp
lods
je
pop
repnz
enter
mov
mov
inc
jbe
push
test
push
lods
cmc
lods
leave
test
sahf
add
lcall
inc
stos
push
or
lret
push
cwtl
cld
pmulhuw
fstps
xor
and
je
ret
call
fcmovu
pop
push
inc
icebp
mov
bound
nop
xor
outsl
roll
hlt
fisttps
xchg
xchg
ficoms
aas
mov
imul
leave
xchg
jno
mov
iret
jecxz
or
aaa
add
mov
dec
aad
frstor
inc
int3
arpl
adc
and
mov
scas
in
inc
mov
insl
stc
daa
cmp
push
xchg
pushf
dec
call
jge
lahf
mov
outsl
jbe
mov
jns
stos
test
dec
xor
repz
xchg
fsubrs
lahf
dec
shr
push
jo
dec
xor
xchg
aam
ds
xor
test
or
mov
adc
ret
add
nop
into
jae
push
lea
adc
inc
adc
cld
and
jg
add
clc
adc
mov
inc
lcall
push
ret
test
jae
orl
sarb
xchg
push
mov
sub
push
sar
or
mov
xor
mov
sbb
fwait
pop
pop
inc
sub
xor
lret
add
xchg
push
idiv
lods
ss
out
inc
mov
out
enter
xchg
cs
sahf
sbb
daa
movsl
sub
mov
xor
sbb
sahf
jno
insl
ljmp
pop
int
push
mov
outsb
rcl
sbb
out
cmp
and
inc
xchg
push
test
or
or
push
add
mov
sbb
vmwrite
aam
cmp
lret
adc
test
cmpsl
lret
dec
inc
hlt
pop
rol
popa
inc
mov
loop
ret
jecxz
mov
xchg
imul
lahf
cs
ret
lret
inc
int
cmpsl
popa
and
pop
sti
leave
inc
xor
in
pop
add
lds
xchg
outsl
fidivrl
add
mov
inc
std
dec
jne,pn
pop
ja
loop
cmc
movsb
out
out
cmp
sti
insb
testb
cmp
sbb
mov
test
inc
cltd
jnp
or
inc
fwait
dec
das
mov
dec
call
sbb
and
mov
or
mov
xchg
scas
call
in
dec
data16
adc
xchg
aaa
push
sbb
scas
mov
jnp
test
sarb
stos
mov
idivb
out
scas
sbb
enter
mov
push
push
jb
lret
das
orb
and
movl
add
popa
cmp
adc
mov
in
or
sbb
mov
mov
jle
and
inc
sub
rol
test
inc
push
stos
jl
and
lds
cmpsl
aaa
mov
jp
xor
in
jo
fs
sub
adc
stc
test
mov
loopne
push
add
jno
in
or
aad
jle
adc
or
es
xchg
je
test
push
mov
sahf
in
push
std
xor
push
and
mov
inc
fisubrl
subb
adc
nop
out
mov
sub
into
adc
shlb
lret
mov
sbb
inc
sub
cmp
outsb
mov
or
mov
mov
mov
sbb
push
and
or
cld
add
scas
jp
xchg
ret
inc
notb
or
jb
out
test
push
xchg
fdivrl
fs
mov
mov
cmp
push
push
mov
fcmovbe
je
dec
sbbb
cld
push
daa
sahf
in
insb
lock
lahf
stos
mov
stc
mov
inc
pop
pop
xchg
mov
xchg
cmp
idivl
mov
cmp
add
cmpsb
sub
and
insb
mov
jmp
inc
popa
mov
popf
and
fsubl
popa
push
repz
adc
sbb
fisttps
push
jp
loopne
and
enter
movsb
mov
pop
mov
pop
hlt
jmp
and
shl
jnp
and
push
sbb
cltd
and
or
loope
das
rcrb
sti
and
ljmp
jg
dec
popl
loope
negl
push
insl
fwait
lods
fimuls
outsl
sbbl
pop
les
xchg
dec
sub
mov
insb
insl
sbb
mov
or
mov
ret
and
add
cld
nopl
popa
jb
xchg
loopne
les
adc
inc
inc
push
mov
scas
cmpsb
mov
add
mov
xchg
sarb
sbb
inc
mov
sub
in
adc
lahf
test
pop
push
insl
hlt
cmp
inc
inc
ss
inc
jp
adcb
nop
jns
and
add
jo
add
mov
cmpsb
repnz
and
mov
xchg
jl
fidivs
mov
test
push
jb
jmp
xor
es
jp
adc
and
pop
sbb
sbb
dec
jge
fsubs
je
and
je
inc
cmpsb
insb
and
sahf
in
int3
lret
adc
fiaddl
lds
popf
call
cmp
aad
scas
push
bsf
in
add
test
es
adc
iret
mov
call
rorl
xchg
nop
fsubrp
leave
pop
out
fimuls
mov
dec
scas
call
inc
or
clc
fwait
add
lea
pop
mov
in
pusha
jp
jg
ja
adc
jae
outsl
sub
inc
pop
aaa
push
daa
gs
cli
dec
inc
aaa
adc
push
jns
push
cltd
int
es
inc
clc
dec
insb
push
adc
push
mov
mov
adc
mov
jne
push
pop
pop
mov
insb
adc
mov
cmp
imul
cmpsb
fiadds
adc
fstp
ja
shll
mov
fs
cltd
outsl
in
sbb
ds
mov
push
lret
pop
rclb
jl
and
divl
gs
and
add
outsb
loope
popa
daa
mov
sbb
jbe
icebp
jne
add
daa
clc
mov
or
xchg
dec
mov
lds
jb
mov
insl
xchg
add
adc
add
test
lds
inc
dec
pusha
jp
mov
call
outsl
repz
in
fsub
mov
xor
outsb
hlt
scas
inc
mov
push
fsubrl
fcompl
stos
repz
and
lahf
sbb
addb
mov
rcl
pop
mov
cmpsl
jge
fisttps
xchg
sub
sbb
ss
cmp
jg
cmp
jns
in
out
push
jmp
pop
fcmovu
xor
xchg
cmp
mov
dec
jb
sbbb
xchg
shlb
jmp
addl
adc
pop
or
mov
pop
mov
pusha
aas
gs
dec
pop
cmp
js
dec
ljmp
das
mov
add
iret
negl
cs
shrb
or
jle
sub
xchg
jb
mov
popa
and
cwtl
stos
add
popa
mov
add
fwait
outsb
sub
ret
shr
mov
shlb
add
das
or
test
and
dec
pushf
test
jo
mov
fstl
inc
loop
movsb
sub
dec
nop
pop
cld
mov
xor
insb
xlat
outsb
sbb
cmc
lea
xchg
mov
movsl
int3
mov
outsb
push
mov
push
scas
and
jb
jl
insb
cli
hlt
adc
and
sti
subl
xlat
and
sbb
sub
ds
outsl
sti
adc
fisubrs
or
in
ret
shrl
adc
in
sub
push
int
js
in
jae
fwait
in
scas
loope
mov
cmp
sbb
lods
sub
push
in
sbb
sub
jp
loop
cmp
in
shll
mov
imul
testb
mov
lret
xchg
sub
ss
inc
cmp
shll
jo
inc
sub
in
das
ds
adc
pop
les
jl
in
mov
pop
jae
stos
jae
xlat
cltd
adc
into
imul
pushf
imul
pusha
xor
lock
imul
cmp
testb
add
jmp
nop
inc
iret
fadd
dec
pop
mov
icebp
fdiv
jno
je
xchg
fs
xchg
scas
test
and
shrl
xchg
iret
repnz
jl
cmp
cmp
jne
movsb
je
and
add
ficompl
ja
ljmp
lods
add
inc
mov
rorb
stos
mov
ret
stc
lret
sti
fisubs
sbb
jb
xor
jno
xor
xlat
push
in
push
bound
push
pop
movsb
jecxz
inc
je
out
mov
push
repz
sub
js
adc
scas
lds
fisubs
jle
rsm
gs
sbb
pop
movsb
dec
mov
adc
fisubrl
das
jl
dec
movsl
adc
sub
adc
xchg
addl
sbb
js
dec
add
xlat
outsb
ljmp
cli
mov
es
ror
data16
lds
in
jp
and
ss
das
or
xchg
xor
jbe
int
dec
fs
inc
in
mov
call
cmc
mov
decl
push
pop
ljmp
ljmp
repz
jg
lds
or
or
movsl
lds
sahf
mov
inc
or
cmp
es
mov
or
lret
add
push
xor
std
scas
icebp
xchg
mov
mov
je
mov
add
cmp
aam
out
negb
std
inc
out
jle
popf
stc
sbb
mov
add
mov
popf
int
sbb
aas
jne
je
stc
inc
mov
test
mov
jg
cmp
xchg
outsb
add
push
cmp
popf
arpl
in
xchg
ret
mov
or
pushf
cwtl
shlb
loop
repz
ja
add
push
jge
jnp
shll
adc
leave
adc
adc
stos
pop
call
pop
mov
dec
pop
outsl
xchg
adc
outsl
push
push
ret
and
ss
and
push
stos
fnstsw
push
mov
ljmp
xor
sub
int3
or
imulb
xorl
sbb
imul
xor
push
pop
jnp
jb
cmp
mov
pop
mov
imul
or
pop
addr16
push
mov
xor
inc
xor
repnz
cltd
xor
call
test
cli
cmpsb
inc
sub
jp
mov
xchg
fs
in
test
sub
clc
orl
mov
and
in
in
inc
xor
out
mov
lret
pushf
and
loope
push
or
mov
daa
sahf
inc
fcos
andb
or
loope
push
rcrb
loop
and
leave
fs
fsubrs
ja
sbb
leave
adc
mov
movsl
addb
jle
and
clc
outsb
xchg
adc
push
jb
les
int3
add
push
pop
xor
push
adc
jae
leave
or
mov
lret
add
inc
dec
daa
es
mov
and
pop
push
or
cmp
lods
xchg
bound
shrb
jge
aam
lcall
in
sbbl
out
daa
jp
adcl
or
stos
movsb
mov
mov
inc
mov
adc
push
dec
sbb
sub
xchg
jmp
in
clc
out
inc
fisubs
ljmp
iret
les
adc
mov
push
xchg
jmp
inc
clc
stc
out
push
push
mov
push
leave
shll
lret
jb
or
pop
xor
xchg
xor
sbb
or
add
fimuls
int
lds
in
fildl
test
arpl
xlat
pop
std
sbb
mov
cwtl
int
lret
sbb
push
jbe
cmp
xor
or
call
pop
push
add
mov
add
fucomip
xor
push
pop
inc
sbb
cmp
adc
into
out
mov
mov
cmp
jecxz
pusha
iret
mov
leave
jo
sahf
xor
aas
leave
int
es
or
outsb
mov
rcrb
xchg
jo
lods
or
insb
and
xchg
aas
pop
lods
xchg
and
add
dec
pop
push
jno
and
sahf
mov
lret
push
aaa
dec
in
push
inc
int
push
and
push
ret
pop
xlat
outsl
fsubrs
jb
aas
inc
std
lods
fistl
pop
sub
cmp
subl
stos
mov
push
and
push
add
sbb
jbe
fbstp
cwtl
loopne
imul
jecxz
imul
jb
cmp
icebp
es
push
test
cmp
mov
adc
push
jae
insl
xor
xor
imul
in
jl
inc
and
aas
clc
ss
mov
pop
iret
fisttpl
lret
out
xlat
fucomp
and
cwtl
xchg
cmc
jno
inc
aaa
sbb
dec
das
stos
rcrl
aas
add
neg
int
popa
mov
xchg
lock
je
adc
pop
cli
or
dec
in
push
xchg
pop
daa
xor
jo
rcll
lods
fwait
cmp
inc
mov
add
cmp
cmp
mov
inc
out
pop
aaa
sahf
jns
add
orl
std
insb
in
pop
cmp
xlat
cmp
ljmp
pop
sbb
fiadds
das
jmp
movsl
dec
add
rep
sbb
sub
or
push
push
xchg
sub
cmp
xorl
xor
les
and
jp
mov
je
push
out
sahf
push
jbe
adc
jae
mov
popf
das
jl
mov
out
jecxz
outsl
xchg
cltd
pop
lret
xor
js
lods
mov
insb
nop
scas
dec
popf
in
nop
ret
xlat
ror
jmp
out
lcall
mov
ftst
cmpsl
sbb
mov
jmp
js
fnsave
leave
aam
mov
sub
push
icebp
rolb
outsb
sub
inc
sbb
jno
sbb
push
mov
mov
xchg
rcr
mov
roll
into
xor
pushf
lods
or
test
adc
xchg
dec
pop
dec
mov
cmp
shrb
sbb
shlb
adc
pop
scas
push
scas
data16
jl
pop
fwait
cmpsb
aaa
and
cli
mov
scas
test
mov
push
or
xor
jg
push
js
sbbl
adc
mov
rcl
adc
push
sbb
leave
adc
cmove
shlb
movsl
jne
fsubs
loop
cli
int3
test
sbb
orb
shrl
loopne
cmp
mov
out
push
ljmp
fisttps
gs
adc
dec
jne
inc
xor
pushf
jp
ljmp
jecxz
inc
adc
sub
insl
scas
mov
rorb
in
std
fs
aam
sarl
mov
js
call
inc
ror
clc
push
xor
jb
fistl
mov
enter
das
sbbl
mov
lcall
dec
mov
dec
xlat
jmp
jb
mov
outsl
sbb
shrb
mov
sahf
repz
mov
fnstenv
add
sub
scas
testb
or
aad
stos
shlb
mov
xchg
cmc
dec
push
xchg
lds
xor
dec
xor
cmp
jge
les
fisttps
mov
cwtl
xchg
insl
add
sbb
ret
xchg
sbb
es
pop
inc
or
xchg
xchg
lea
mov
or
xchg
sbb
in
mov
push
icebp
leave
and
mov
or
cmp
lahf
mov
test
xchg
fcompl
outsb
fisttpl
sbb
cmp
jno
push
sarl
add
cmp
xchg
int
test
pop
jns
icebp
cmpsl
cmpsl
sub
fadd
addr16
pop
xor
call
stc
sbb
mov
insb
push
push
jno
popf
stos
push
dec
stos
daa
leave
pop
addr16
test
add
push
mov
sub
sbbl
cltd
in
pushf
inc
lret
ljmp
mov
fcomps
push
add
cmp
jl
jne
xor
inc
shl
loopne
adc
pop
filds
and
push
sbb
jl
clc
pusha
imull
mov
jle
jae
cmc
pop
sub
lods
pop
fisubl
and
cmpsl
mov
push
in
ret
scas
sub
pusha
cli
scas
xchg
inc
fsubl
rol
das
inc
scas
jno
push
dec
hlt
dec
adc
les
mov
decl
xor
mov
in
jmp
push
les
fwait
loope
idivb
movsb
sub
cld
mov
fiaddl
pop
mov
sub
insl
fldenv
jno
mov
sar
xor
cmp
aaa
int3
arpl
rcrb
push
jno
in
fnstsw
incb
nop
stos
cmp
mov
or
gs
in
push
rol
push
enter
pop
mov
mov
aaa
adc
jg
add
or
mov
pop
dec
shl
ja
sahf
xor
mov
pop
fisubrl
or
push
mov
lock
imul
lods
std
adc
sahf
jns
sub
repz
js
enter
lea
insb
mov
xchg
mov
daa
cmp
imul
pop
mov
cmp
jp
or
jg
out
mov
pop
mov
ja
or
mov
fcmovbe
testb
adc
inc
jp
pushf
test
in
push
push
incl
fildl
mov
inc
lret
and
rorl
pop
loopne
push
xor
xchg
push
xchg
int
dec
jle
cltd
mov
popa
xor
or
rcrb
push
lahf
pmuludq
jae
and
inc
and
idiv
int
pop
jne
in
and
mov
jb
inc
test
lahf
or
xor
cmp
and
lods
imul
lock
nop
dec
and
ljmp
adc
lods
adc
cmp
out
sub
xchg
cmovns
insb
xchg
sarb
or
stc
xchg
adc
add
push
andb
insb
mov
xchg
scas
mov
icebp
inc
sub
mov
in
roll
clc
lret
insb
lcallw
enter
xchg
lret
add
aas
cmp
xchg
and
jns
cmpsb
inc
sub
dec
add
addr16
jne
xor
mov
inc
pop
cld
push
jle
cmp
xchg
mov
insb
test
add
sub
push
call
push
cmp
insb
das
es
adc
fwait
outsb
aad
dec
mov
popa
ljmp
or
jge
dec
mov
pop
cs
push
outsl
lds
mov
and
pop
stos
cli
or
int3
cmpsb
lock
or
xchg
jnp
or
or
sub
notl
lret
pusha
adc
ss
stc
jae
fwait
pop
daa
xlat
repz
jnp
mov
jb
or
inc
dec
mov
xchg
jno
xor
fldln2
xor
and
fsts
push
std
shll
or
xchg
inc
loop
daa
push
fnsave
lock
test
dec
ljmp
call
sub
arpl
pop
gs
repz
imul
xor
mov
cltd
or
mov
lods
iret
pusha
inc
or
xchg
cmp
pop
sbb
aas
jbe
jb
pop
loop
adc
xchg
add
je
mov
sub
pop
rol
rcrb
cld
pushf
jns
sub
cli
sub
jp
test
pop
movsl
cmp
pop
pop
stc
mov
sbb
loop
popa
adc
xchg
out
call
xor
or
fiadds
loope
xchg
ja
cmp
lods
jle
jg
pop
sub
push
cs
jno
jb
ret
pop
fldl
icebp
mov
scas
cli
xchg
popf
out
repz
inc
stos
iret
das
cmp
sub
inc
mov
sbb
outsl
cltd
lods
sbb
and
ficompl
in
divb
pop
and
mov
into
fwait
lods
inc
or
mov
int
add
adcl
stos
cmp
cmp
stos
outsl
adc
jmp
in
test
notl
imul
and
gs
enter
inc
pop
imul
mov
sub
fimuls
rcrb
xor
testl
int3
test
out
sbb
stc
sbb
pop
sub
test
dec
call
and
les
sti
cmp
push
pop
jns
push
pop
js
mov
mov
cmp
push
jns
xchg
lea
test
cmp
adc
cltd
jl
repnz
bound
js
adc
out
add
cmp
xchg
sub
pop
inc
add
pop
cmc
lods
ljmp
pop
fsts
xor
push
push
lods
or
cmpsl
pop
imul
add
outsl
loop
stc
cmp
mov
pushl
movb
jo
sbb
inc
shl
push
out
sub
int
pop
outsb
dec
fisttpl
jecxz
xor
aam
fcomps
sub
sbb
out
cld
xor
adc
loopne
je
sahf
add
pusha
or
jo
fsubs
aaa
out
stos
movsl
and
sbb
jnp
push
out
scas
and
jbe
or
clc
mov
xor
add
insl
jge
in
sbb
add
rcll
push
leave
call
cmpsb
sub
lcall
and
dec
inc
aas
push
inc
stos
push
ljmp
jno
decl
xchg
or
mov
xor
mov
adc
xor
out
cmpsb
cs
dec
or
mov
xor
test
cmc
adc
int3
mov
aad
jnp
lret
jg
aas
movsl
scas
or
addb
not
xchg
jnp
sbb
adc
cld
test
jb,pn
notl
mov
sub
adc
mov
pop
sub
ds
push
test
lods
out
xchg
test
or
pop
add
lea
and
fs
popl
movsb
enter
mov
cs
xchg
fsubrl
call
nopl
lcall
mov
push
popa
in
and
dec
test
inc
pop
jne
and
sub
ss
sbb
icebp
enter
rolb
push
out
push
imul
pop
add
mov
inc
loope
aam
out
insb
ljmp
or
leave
ss
loope
fwait
xor
dec
gs
mov
cmp
mov
push
mov
or
pop
scas
inc
mov
sub
inc
jbe
lahf
or
sarl
cmp
call
fadd
xor
adc
lret
xlat
jmp
mov
adc
in
mov
dec
outsb
repnz
xchg
sbb
sub
dec
xchg
in
push
repnz
les
and
xlat
and
fnstcw
push
lods
cmp
add
xchg
adc
jg
and
aam
in
pop
mov
cmpsb
mov
jl
enter
mov
dec
adc
xchg
or
fildll
sbb
pop
ds
jmp
xor
dec
fcomip
push
cmpsb
mov
aad
dec
mov
data16
stos
or
pop
repz
pop
jo
cwtl
stos
es
sbb
cmp
mov
cmp
inc
xchg
insb
cmp
xor
adc
aaa
lods
mov
inc
test
adc
jo
int
xlat
das
mov
jecxz
push
push
jbe
aas
les
out
mov
and
add
jnp
stos
fstps
sbb
inc
mov
sarl
out
fcompl
movhps
jg
and
and
mov
stos
dec
xor
test
push
inc
sub
and
adc
push
out
xchg
mov
out
aas
mov
mov
pusha
aad
xchg
ficompl
lret
mov
push
jns
outsl
ds
sub
in
int
push
jmp
push
jl
cmp
pop
fstps
cmp
ret
ss
jg
sub
dec
xor
lret
mov
push
pop
adc
pop
and
or
dec
or
cs
or
cld
or
jl
scas
loope
push
jmp
fsubs
test
push
mov
and
xchg
test
add
push
jp
into
imul
fsubrl
xchg
mov
les
mov
fdivr
stos
pushf
mov
rolb
push
ret
sub
pop
or
inc
in
pop
mov
mov
push
fsub
cmp
jno
popa
mov
mov
and
out
cmp
adc
jecxz
add
movsb
adc
bound
hlt
stos
lcall
push
inc
int
jnp
out
shrl
movsl
jbe
push
push
adc
add
pop
jge
nop
dec
cltd
mov
dec
je
sti
lret
mov
pop
mov
icebp
add
sbb
xchg
je
das
orl
repnz
out
lcall
mov
push
orb
inc
push
mov
inc
movsl
lods
ss
xchg
jge
sub
ror
gs
and
push
mov
popf
xor
jle
or
mov
aas
repz
ljmp
or
xor
xchg
jmp
xor
mov
jmp
loop
notl
dec
addr16
ds
mov
mov
fsubl
push
xchg
shll
push
mov
and
jecxz
inc
mov
pusha
mov
repnz
aam
dec
loop
in
pushf
xchg
jo
inc
and
int
mov
or
int3
pop
xor
fdivrl
pop
int
cmpsb
shll
cwtl
sbb
icebp
aam
repnz
inc
add
mov
lcall
cwtl
das
add
out
and
xor
and
push
scas
sub
popa
orl
sti
lods
call
aam
icebp
push
and
pop
cmc
inc
ret
jnp
push
in
xchg
adc
call
arpl
mov
xchg
sbb
push
jno
mov
mov
clc
inc
sbb
rcrb
mov
add
jnp
jp
stc
xchg
sbb
pop
add
inc
popf
and
or
clc
mov
fistl
or
loop
rcr
aas
jge
jno
in
push
fwait
insb
fisubl
xlat
in
sub
enter
mov
daa
mov
movsb
les
or
xor
push
jmp
fstp
out
mov
lahf
dec
movsb
ja
cltd
daa
mulb
add
inc
cmp
out
ficomps
scas
retw
sti
push
data16
js
inc
push
jg
and
push
popf
orb
fisttpl
insl
add
or
pop
test
inc
sub
rorb
cmp
and
aam
push
push
and
push
fs
flds
cwtl
adc
dec
push
rclb
push
loopne
push
fists
and
popa
in
fsubr
jo
in
or
lock
sahf
and
push
popf
inc
lods
cld
stos
sbb
add
push
mov
stos
mov
sub
xor
lods
popa
iret
lret
jle
out
cmpsb
lahf
loop
mov
mov
aaa
imul
test
mov
or
mov
fprem1
adc
pop
les
jae
push
ljmp
inc
pushf
sub
cmp
out
les
and
cli
pop
iret
lret
mov
lods
mov
pop
cli
pop
test
es
adc
push
push
test
stc
call
loope
or
push
mov
cmp
xchg
jbe
rcll
test
xor
push
jmp
sbb
jo
sub
mov
pushf
ljmp
mov
add
pop
cli
scas
adc
dec
pop
aam
lret
insl
sub
push
mov
push
nopl
mov
call
rolb
sbb
leave
sub
into
inc
inc
mov
mov
xchg
add
dec
mov
xorb
mov
dec
aam
scas
data16
inc
mov
aam
cmp
jne
xor
bound
pop
repz
xchg
cwtl
ret
mov
movsb
sti
popa
clc
sub
cmp
leave
cld
push
sti
mov
bswap
jl
jmp
sub
jp
push
xor
mov
pusha
sub
rclb
idivb
mov
fbstp
jg
and
cmp
lea
dec
inc
rorl
into
das
loop
out
sbb
push
mov
cwtl
stos
pop
clc
cltd
dec
dec
xchg
and
testb
jle
fsubr
cwtl
xor
ja
jne
lea
mov
cmp
mov
fsubr
mov
xor
iret
fimuls
mov
clc
outsl
mov
jle
scas
xor
add
or
mov
push
call
fbld
sub
lret
idivl
push
xchg
mov
loopne
and
shll
push
xor
or
push
jo
sub
mov
push
ss
push
jmp
in
add
pop
xlat
xor
jp
cmp
imul
hlt
or
jg
adc
xchg
subl
les
mov
lret
cmp
loope
inc
cmp
add
add
push
add
aam
fmull
sahf
mov
movsl
repnz
jbe
sub
xchg
pusha
popa
mov
sub
mov
mov
cmp
lods
pusha
neg
cmpsb
call
adc
cmp
and
jmp
or
gs
jns
test
rorl
test
idivl
pop
outsl
inc
daa
sbb
lods
inc
jo
cmpsb
lock
xchg
lret
add
jp
in
xchg
adc
push
in
gs
movsl
imul
inc
test
sub
adc
dec
xchg
lds
mov
pop
or
aaa
rolb
mov
lret
mov
mov
hlt
addl
loope
and
push
adc
mov
test
leave
ljmp
scas
mov
sbb
lret
inc
rolb
or
adc
pop
arpl
push
mov
mov
mov
push
sbbl
mov
leave
pop
rcll
add
xchg
dec
out
fdivr
xchg
or
in
fildll
lahf
test
dec
js
sbb
push
call
mov
ljmp
adc
mov
fists
dec
jae
int3
pop
fcoms
lret
cmc
add
ja
call
lea
push
jl
inc
lock
nop
lea
mov
std
xchg
mov
sub
pusha
pop
sbb
int3
jnp
sahf
xor
cmp
repnz
in
add
stos
inc
popf
arpl
push
lret
leave
bound
test
popa
les
cmp
sbb
stc
jp
cmp
dec
sti
std
sahf
jecxz
jbe
shlb
inc
stc
nop
jb
stos
fs
es
mov
ret
shlb
xchg
add
stos
out
test
jnp
gs
xor
pop
inc
xor
lods
fisttpll
jecxz
push
stos
rorl
lods
push
lcall
and
aaa
int3
arpl
jg
cs
loope
int
mov
and
pop
xor
xor
insb
mov
adcl
cltd
xchg
xor
jb
inc
adc
xchg
loope
add
mov
loope
out
imul
pop
icebp
cmp
xchg
push
div
dec
scas
jbe
imul
xor
mov
pushw
xchg
push
pop
into
inc
cwtl
out
divl
je
movaps
rorl
loope
jmp
pop
out
lds
pop
mov
data16
insb
outsb
std
cmp
fldl2e
imul
pop
mov
gs
dec
inc
mov
clc
arpl
int
sbb
movsb
das
mov
js
hlt
cmp
fnsave
inc
push
add
inc
in
js
loope
dec
pop
ds
dec
mov
push
sti
roll
add
mov
mov
sub
xchg
xchg
add
scas
dec
push
loope
push
jmp
lcall
je
pop
hlt
lret
xchg
ljmp
mov
mov
lds
call
push
sub
ss
div
adc
cmp
or
rcr
loope
aaa
pop
hlt
push
or
or
je
pop
insb
mov
jecxz
lahf
gs
jno
xchg
sub
scas
les
xchg
mov
xchg
xor
xchg
out
xor
pop
lods
mov
inc
loop
aaa
mov
xchg
sbbl
ds
xlat
int3
inc
fxam
aas
lods
inc
cmp
flds
xchg
enter
sbb
repz
cltd
inc
xchg
test
or
lods
add
sub
cmp
fidivrs
jmp
shll
or
pushf
sub
aad
icebp
pop
cmp
jge
shll
mov
pop
sahf
or
int3
mov
sbbl
out
lods
imul
add
xchg
mov
sti
mov
ds
xchg
fldenv
stos
inc
cli
cltd
add
lods
xor
movsb
jecxz
arpl
pop
adc
sbbb
mov
mov
mov
dec
cmp
es
cmp
inc
sub
shll
lahf
mov
xchg
push
and
stos
sti
adc
cwtl
fs
leave
inc
pop
and
ret
jae
push
sub
daa
incl
stos
jno
and
inc
clc
jb
mov
sub
pop
popf
jg
cli
mov
aad
in
mov
sub
divl
movsb
sbb
sub
rcrl
cmpsl
dec
add
notb
fbstp
push
pop
sbb
shrl
add
iret
and
movsl
jge
out
mov
test
jle
xchg
push
ljmp
jmp
leave
add
sbbb
testl
inc
sahf
std
nop
pushf
sub
cwtl
adc
push
sarb
jge
push
imulb
mov
xchg
add
enter
xchg
stos
test
ficomps
inc
or
jb
je
xchg
jmp
push
mov
fistps
dec
sbb
repz
inc
sti
int3
outsl
xlat
popa
sbb
cmpsl
mov
push
cmpsb
rolb
out
add
popf
mov
stos
andb
lock
daa
inc
idivb
inc
push
ljmp
jno
or
jge
xor
nop
mov
fistl
stos
test
add
in
lods
aas
pusha
or
mov
mov
aas
dec
test
enter
mov
mov
dec
pop
or
cltd
psubsw
in
sub
nop
or
jg
or
xor
add
mov
stos
pop
outsb
icebp
divl
adc
ret
mov
mov
jmp
scas
xchg
add
out
cmp
sub
pop
mov
shlb
pop
xchg
sub
icebp
adc
xor
ret
into
jno
or
inc
fiadds
inc
out
aas
outsb
std
pop
mov
cmc
int
sbbl
push
test
mov
and
mov
jnp
and
jg
test
lret
sub
outsb
dec
dec
stos
inc
sub
push
pushf
dec
int3
pop
hlt
mov
jb
pop
hlt
cmp
andb
cmp
dec
fdiv
mov
sbb
or
out
mov
insl
les
sub
pop
scas
mov
push
mov
push
cmp
nop
sbb
push
cmp
aad
mov
xchg
aas
shl
add
xchg
sub
inc
or
arpl
or
xor
cmpsl
insl
rcrl
xor
mov
mov
cmp
fwait
and
inc
inc
test
push
or
lcall
xchg
scas
outsl
gs
mov
mov
cld
mov
les
dec
fnstenv
stc
cmp
imul
dec
add
out
lret
mov
push
xchg
fisubl
dec
ljmp
push
sbb
dec
xlat
rcrb
addr16
sub
ljmp
nop
dec
aaa
ucomiss
dec
cmp
sbb
xchg
lret
cmp
mov
mov
cmp
filds
mov
lahf
jle
call
cmc
mov
or
bound
testb
fsubp
adc
insb
bound
pop
xor
test
mov
cmp
stc
scas
arpl
lahf
repz
sub
pop
lcall
inc
pop
pushf
pop
dec
pop
test
das
sbb
xor
adc
inc
lods
mov
dec
adc
jbe
jne
push
lds
dec
lahf
and
jecxz
inc
adc
repz
sub
and
jl
js
adc
fidivs
jne
les
mov
mov
addr16
out
inc
in
bound
fstl
leave
dec
stos
das
call
imul
cltd
imul
adc
stos
jo
in
ficoml
sub
sbb
sub
out
ja
xlat
imul
fadds
jl
arpl
jb
sbb
inc
mov
add
imul
xlat
mov
pop
clc
or
mov
add
xor
inc
sub
pop
ret
ljmp
pop
icebp
inc
cltd
stos
sub
orl
je
mov
sub
mov
jnp
xchg
xor
test
mov
movsb
jecxz
loopne
fisubrs
loope
jge
clc
mov
mov
fcomps
push
cmp
pop
testl
loopne
adcl
rcrb
dec
add
push
mov
inc
or
mov
xchg
adc
loopne
aam
jp
dec
pop
inc
cmpsb
cmp
imul
sbb
filds
push
mov
mov
sbb
add
or
adc
xchg
push
ret
je
in
fcomp
mov
scas
sub
push
and
adc
cmp
jnp,pn
pusha
fnstcw
sbb
jl
shrl
cmpsb
rcll
out
dec
adcb
jle
dec
rcrb
je
fwait
imul
out
or
adc
sahf
pusha
or
mov
or
dec
fs
outsl
xor
loopne
test
cs
xchg
xor
sbb
les
and
pusha
add
mov
dec
inc
das
jno
test
push
adc
inc
inc
scas
call
or
repnz
cmpsb
jae
sub
push
pop
push
mov
sahf
xchg
sub
clc
stos
fcomip
xchg
in
pop
pop
adc
mov
sub
or
int3
push
dec
daa
jbe
mov
cli
mov
negl
pop
sbb
push
dec
rep
adc
shlb
pop
jno
sub
and
icebp
call
iret
add
pop
mov
out
mov
add
out
and
sbb
mov
or
inc
nopl
inc
push
push
mov
daa
das
pop
push
jge
fdivr
dec
fldcw
incb
lcall
and
idivl
adc
and
sbb
pop
outsb
push
add
lods
mov
insb
jg
pop
push
mov
movsl
mov
shrb
jg
mov
xor
jb
lret
mov
fiadds
or
test
in
xchg
jnp
pop
dec
adc
sahf
cmp
cs
inc
fnsave
lret
or
xchg
push
pop
hlt
dec
add
lods
xchg
xchg
lock
in
insl
add
pcmpeqw
adc
mov
xor
icebp
jp
sub
sub
jns
jmp
add
jbe
or
push
int3
mov
ss
in
test
orl
lret
out
daa
in
inc
add
mov
sbb
in
stos
aas
movsl
sub
or
fcompl
sti
lahf
push
push
or
into
rclb
test
and
xchg
jne
stos
outsb
insb
xchg
sbb
lret
mov
lods
cmpsl
push
loope
jg
scas
mov
mov
push
pop
adc
pop
es
repnz
jecxz
jnp
jp
mov
xor
cvtps2pd
jge
into
andnps
fildll
fldcw
outsl
cmp
dec
popf
out
test
into
bound
jl
aaa
int
mov
add
je
repz
fisubrl
fsubrl
push
cld
push
xor
dec
test
inc
lds
sbb
cmpsb
ja
xchg
jne
inc
ljmp
mov
xor
das
lds
add
push
and
and
nop
mov
mov
push
insb
sub
pop
cwtl
lock
dec
call
adc
hlt
dec
jmp
sti
fcomps
shrb
mov
addr16
icebp
imul
or
iret
add
cwtl
jne
jl
jnp
aaa
in
sub
popa
mov
negl
int
push
scas
sub
in
add
sbb
push
ja
repnz
cmp
mov
mov
aam
std
add
lcall
les
cmp
fimuls
push
js
sahf
cmpb
repz
das
dec
jecxz
mov
pop
loope
lea
jg
and
mov
or
pop
cmpsl
add
jecxz
adc
cmp
jecxz
mov
dec
enter
stos
loope
rcll
int
inc
setno
outsl
and
mov
icebp
jbe
mov
push
sahf
push
mov
sub
xlat
in
std
dec
ss
inc
fwait
lcall
cwtl
pop
sbb
scas
lds
mov
popf
leave
das
into
out
sbb
gs
cltd
sub
loope
lret
nop
and
pushf
movsb
mov
shll
enter
or
inc
cltd
stos
inc
fdivrl
push
xchg
outsl
push
or
loopne
sub
gs
xchg
cmp
clc
jae
cmp
test
push
push
jbe
push
out
cmpsl
push
sbb
mov
rcrl
push
imul
mov
pop
sub
jo
mov
fsubrp
xor
das
sahf
or
jnp
cli
pop
leave
fwait
sbb
adc
mov
add
xchg
xor
cs
adc
shrb
aam
mov
push
popa
and
mov
cli
or
mov
shr
or
in
sub
lock
xchg
inc
pop
add
bound
jmp
adc
inc
in
and
repz
lea
aas
xchg
mov
cmp
jb
push
push
icebp
push
sbb
pop
sbb
mov
test
movsb
jns
mov
mov
or
mov
dec
inc
xor
sub
adc
inc
push
inc
or
xor
dec
fwait
mov
xchg
push
sbb
jnp
movsl
sbb
inc
push
inc
out
jecxz
fstpl
jl
xchg
dec
xor
pop
dec
lahf
andb
sti
push
or
mov
inc
gs
loop
push
popf
pop
fwait
sbb
loope
outsl
xor
xor
cs
out
push
xor
sbbb
inc
sbb
add
leave
mov
stos
rcrl
shl
add
pusha
mov
clc
data16
fcomps
mov
sbb
in
test
mov
xor
jae
call
insb
dec
outsl
cmp
pop
idivb
cmp
popf
stos
xchg
rolb
cmpsl
pop
mov
pushw
jle
clc
mov
outsb
daa
ret
push
cmp
loopne
pop
sub
es
sbb
clc
pop
cmp
xchg
loope
xchg
nop
cmp
sbbl
mov
aad
out
out
loop
jae
xchg
sub
les
ss
jbe
bound
jecxz
pop
add
pop
or
outsl
and
mov
ror
fdivl
fcomps
ret
dec
insb
sbbb
outsb
dec
fldenv
iret
mov
cli
shrl
mov
mov
pop
sub
mov
adc
cli
repnz
cld
data16
push
loopne
fistl
nop
jne
mov
pop
jo
push
cmp
mov
shr
adc
in
mulb
fprem1
jg
xor
into
mov
roll
mov
notb
jmp
das
mov
mov
or
dec
cli
xchg
mov
ret
mov
rorl
xchg
pop
sbb
or
push
xchg
push
cwtl
jbe
mov
mov
rcrb
cmp
ret
add
lock
rcl
out
xchg
sbb
adc
xorb
adc
popa
sbb
sub
aad
test
outsl
movsl
test
lcall
shlb
enter
push
sti
mov
cltd
cs
add
in
cltd
xor
add
push
or
pop
fadds
out
jae
lea
nop
ljmp
popa
orl
push
sbb
or
pop
jle
test
mov
dec
pop
or
pop
push
inc
or
stos
xor
gs
shlb
mov
fwait
je
ror
repz
in
cs
jne
sub
push
repz
in
cltd
jno
inc
fdivs
popf
mov
mov
fwait
xor
or
add
and
ret
test
es
pop
jne
subb
push
bound
mov
or
push
cld
mov
sbb
sub
pop
push
adc
pop
jnp
rep
push
gs
cmpl
mov
or
enter
lret
mov
jmp
sub
testl
and
lret
idivl
je
popa
xor
add
cmc
cmpsl
inc
mov
ror
loope
gs
negl
push
fptan
jg
scas
adc
inc
cld
arpl
sub
movl
fcomps
std
or
fidivl
loopne
aad
sbb
sbb
dec
xor
hlt
stos
in
cmp
mov
fnsave
rol
jbe
xor
push
xor
imulb
xchg
cmp
jnp
xor
loop
xchg
xor
adc
push
call
mov
outsb
aaa
das
jo
pop
fs
lea
cmp
lret
ljmp
sbb
add
mov
sub
fidivs
shrb
ds
push
pop
lret
jne
aas
mov
sub
lds
mov
les
imul
pop
jecxz
mov
iret
lahf
or
aas
pop
ss
ds
insl
sub
in
jecxz
mov
pushf
les
aaa
push
mov
pop
fmulp
movsl
push
xor
mov
fcoml
push
dec
in
xchg
add
or
loopne
xchg
sub
loop
adc
jns
lea
sahf
sub
push
pusha
xchg
sbb
inc
mov
out
xor
push
jmp
mov
shrl
cmp
and
popf
add
cli
mov
jb
push
popf
mov
js
xchg
mov
jmp
add
mov
popa
jbe
icebp
scas
test
jbe
lds
xchg
sbb
les
mov
daa
loope
push
neg
loope,pt
pusha
and
xchg
nop
decl
sahf
lods
hlt
dec
jle
dec
pop
cwtl
fsts
or
nop
jns
adc
jge
cs
jmp
aas
sti
es
inc
loope
sbb
sub
imul
test
ljmp
jnp
pop
out
lods
inc
xlat
fiadds
outsb
lret
sub
dec
pop
pop
dec
cmp
ljmp
in
mov
dec
stc
cmpsb
stos
dec
sbbl
int
test
mov
or
push
rcrb
pop
add
nop
je
push
or
mov
pop
xchg
std
out
test
or
data16
inc
loope
add
cltd
and
sbb
jae
jmp
xchg
xchg
test
mov
and
ljmp
repz
jno
sub
or
int3
cltd
jecxz
inc
in
in
fsubr
cmp
movaps
lds
sub
popf
cs
test
jnp
in
lods
pop
jmp
and
out
add
dec
jp
mov
addr16
dec
leave
loopne
jns
mov
jno
movsl
sub
stos
jp
xchg
fimuls
inc
stc
test
out
fsubl
pop
daa
mov
stc
fwait
inc
inc
clc
xchg
imul
and
out
js
out
lds
mov
jl
mov
adc
jbe
xor
ljmp
pop
daa
sub
pop
bound
roll
lds
mov
sahf
and
iret
pop
mov
inc
adc
jmp
insb
pop
mov
adc
and
pop
fildll
mov
add
movb
cli
das
cmp
aad
inc
cmc
cmc
pop
pusha
xchg
mov
mov
adc
sbb
cwtl
mov
aaa
mov
xor
mov
cmpl
jmp
lret
hlt
inc
pop
mov
dec
lahf
addr16
aam
fisttps
into
jne
out
test
sbbl
into
dec
cmpsb
mov
test
sub
mov
xor
jl
lret
sbb
rol
lds
icebp
mov
je
add
mov
push
sbb
ja
add
pop
repnz
fs
jns
xlat
dec
jbe
hlt
push
push
cltd
xor
dec
out
push
clc
xchg
xor
jge
xchg
movsl
ja
cmpsl
mov
fnstsw
pop
lods
or
shrb
pop
fdivl
dec
jle
mov
mov
shlb
mov
add
ja
aad
sarl
sti
test
xchg
js
cmc
and
loop
inc
ljmpw
das
mov
jne
test
adcb
ret
mov
cwtl
sub
sub
pop
xchg
fidivl
or
cmp
bound
int3
scas
cmpsl
mov
adc
shr
ja
adc
cmp
fwait
insl
cmp
orb
fsubs
or
fimull
add
cmc
test
sub
cs
pushf
mov
sub
push
mov
push
and
lcall
cwtl
mulb
fnstsw
jno
insl
fdivs
inc
clc
cmpsb
jbe
std
test
xchg
mov
fistl
inc
push
ljmp
pop
cmp
lods
xlat
mov
aad
mov
jns
add
movsb
in
add
jmp
outsb
mov
dec
push
sbb
in
stc
push
sahf
cmp
inc
imul
bound
mov
or
subl
repnz
inc
fadds
dec
bound
lea
rolb
push
adc
rcl
insl
mull
push
out
int
jle
stos
jmp
ffree
fnstenv
sbb
mov
dec
das
xor
jo
jmp
popa
xchg
push
fldenv
test
pop
icebp
dec
enter
ljmp
push
or
or
mov
orl
leave
pop
fwait
xor
lds
data16
stc
push
add
cld
sbbl
mov
jo
lret
xchg
mov
notl
push
xchg
jne
pop
mov
dec
call
and
sbb
jmp
add
js
test
fcoms
push
ret
hlt
jno
mov
sbb
sar
pop
and
dec
push
stos
ljmp
inc
push
xor
popa
lret
fucomip
dec
push
and
xchg
shll
pushf
and
push
push
shrl
add
cmp
mov
cmpsl
xchg
lock
jbe
or
mov
insb
and
xchg
clc
sbb
out
inc
ds
push
out
arpl
jnp
mov
les
cs
outsl
mov
rorb
lret
sti
and
lea
jae
aad
int
test
sbbl
adc
lahf
stos
pop
cmpb
movsl
in
mov
lahf
dec
loope
fsqrt
aaa
xlat
push
subb
add
rcll
mov
and
push
add
mov
leave
push
pushf
adc
sub
and
lea
jmp
and
fistl
mov
pop
shrb
mov
pop
enter
mov
and
shlb
rcrb
out
pop
sbbb
mov
dec
icebp
jge
push
adc
push
ret
lcall
fndisi(8087
xchg
clc
pop
adc
bound
lods
cltd
push
lahf
lea
xor
pop
out
jo
and
mov
jo
shrb
ror
mov
pop
sub
jo
sbb
cmc
pop
mov
daa
sbb
scas
clc
mov
xor
lods
lea
and
or
ds
mov
push
sub
out
pop
xor
add
dec
mov
cmp
xchg
loopne
mov
daa
mov
das
ret
ret
or
inc
rcrb
cmp
mov
dec
pop
repz
cmpsb
mov
repnz
and
dec
mov
xchg
sub
push
and
shll
push
sahf
mov
es
dec
out
jno
fsubrl
push
ret
mov
popf
cld
xor
pop
mov
push
xchg
jmp
data16
mov
cltd
jae
je
sbb
repz
jl
movl
scas
stc
adc
sbb
fsubrl
pushf
lods
outsl
add
ror
cs
mov
into
pop
icebp
inc
pop
jge
xor
pop
add
imull
and
movsl
fnstenv
pop
push
mov
daa
jne
adc
inc
add
es
push
mov
shlb
movsb
sti
cmpsl
daa
adc
cltd
mov
sub
stc
xchg
mov
jg
xor
gs
mov
outsb
inc
sbb
pop
push
inc
cmp
iret
fisttpl
cmp
push
dec
loop
idivb
shrb
pop
loope
mov
jmp
insl
aaa
lods
and
lcall
mov
sti
cmpsl
xor
push
leave
ja
daa
mov
and
stos
pusha
dec
enter
adc
stc
or
sub
aad
lock
xchg
dec
push
popa
jg
mov
sahf
out
nop
mov
or
push
mov
push
insl
cltd
pusha
dec
fmulp
outsl
jo
mov
nop
or
jp
dec
jno
add
adc
push
in
add
inc
sbb
fs
xchg
mov
or
nop
mov
std
mov
or
mov
fidivrs
xchg
push
frstor
andl
add
sub
pop
stos
inc
scas
call
out
sub
push
sub
fdivl
xor
mov
cmp
call
int
adc
dec
fisttpll
adc
add
mov
lret
xor
cld
push
mov
repz
fninit
movsl
stos
sbb
out
ljmp
jl
add
addr16
jae
pop
xor
in
scas
fdivl
je
ss
xchg
dec
in
sub
je
aas
jb
int3
sti
sahf
mov
loopne
sahf
popf
pushf
jne
hlt
mov
dec
sti
inc
jbe
jb
push
cmp
jo
cltd
idivl
cmp
addr16
ficompl
push
pop
jbe
xchg
cmp
xchg
mov
cmp
pop
mov
orl
jnp
mov
rcl
push
mov
sub
fnsave
leave
mov
not
clc
fwait
leave
sub
pop
sub
xchg
insb
daa
sbbl
add
jne
mov
faddl
jno
iret
pop
jno
bound
js
pop
sbb
ljmp
or
cmp
add
xchg
push
jno
mov
push
shll
jge
scas
fwait
dec
dec
add
sbb
cli
ror
cmpsl
push
imul
and
into
cli
pop
dec
dec
fldenv
cmpl
cmp
lods
or
xchg
std
xchg
sub
pop
sub
pop
repnz
scas
push
idivb
mov
and
xchg
nop
pop
in
test
xchg
mov
sub
stc
push
or
test
push
fucom
xchg
xchg
cmp
adc
hlt
pop
mov
mov
cmp
fbstp
add
int
insb
orl
adc
cmp
adc
dec
loop
mul
cmp
imul
shlb
sub
add
popa
fs
sbb
inc
push
or
fs
pop
cmp
loopne
jo
or
pop
mov
inc
in
scas
inc
pop
gs
sbb
sti
lods
inc
ret
lock
xor
and
and
push
addr16
xchg
and
cltd
mov
pop
sbb
dec
out
sub
inc
fistl
mov
roll
adc
stos
shrb
adc
scas
jl
fsubs
jp
sub
scas
or
push
std
add
movsl
sub
loope
jnp
jbe
out
nop
das
fldl
sub
push
dec
lret
mov
mov
and
pop
jae
mov
sti
imul
xor
stc
shrb
movsl
cmp
movsl
cmp
xchg
mov
fistl
adc
insb
dec
loopne
fs
xlat
adc
roll
out
jp
pusha
mov
lret
ja
sti
lods
mov
loope
lods
out
aas
or
clc
jb
sub
js
sbb
sub
cs
movsb
sti
pop
ja
jecxz
xor
adc
arpl
xchg
xor
test
stos
sti
pop
fsubl
mov
ds
lock
ret
repz
jbe
dec
push
js
es
divl
inc
cmp
scas
negl
push
add
aas
or
icebp
sbb
jecxz
lret
mov
arpl
xor
stos
out
iret
clc
dec
out
jno
push
sbb
sbb
inc
andl
mov
imul
pop
mov
popa
clc
cmp
daa
pop
lds
xchg
jmp
pop
mov
pop
cmp
jmp
in
ret
add
cmp
insl
iret
and
imul
mov
pop
imulb
add
cmp
rcrl
leave
das
cmc
jne
cmp
pop
out
or
rolb
enter
data16
sub
or
imul
mov
ret
inc
and
fs
and
or
inc
sbbl
sub
lock
inc
in
pop
movsb
in
ljmp
or
xor
jg
push
repz
in
cmp
roll
or
fwait
jg
push
mov
sub
pop
out
jle
sub
dec
cwtl
sti
xor
mov
jmp
mov
pop
cmpsb
jnp
je
mov
mov
pop
push
lods
es
rolb
enter
sahf
inc
lret
bound
inc
arpl
pop
jo
jb
jae
daa
xlat
mov
jb
and
dec
cmpsb
mov
clc
pop
cmpsl
pop
jge
into
nop
adc
loop
sub
jg
mov
insl
add
out
mov
jno
xchg
mov
adc
aaa
sar
ljmp
inc
inc
fidivl
xchg
or
cmc
jmp
vucomiss
sti
jb
shll
fwait
xchg
mov
lds
fimull
cmp
dec
fldcw
hlt
or
fwait
in
sbb
jne
ret
stos
pop
mov
outsl
mov
imul
sti
inc
ficompl
mov
pop
mov
sbb
mov
cmp
add
lcallw
jnp
cwtl
ds
sbb
cmp
repnz
ja
add
mov
stc
subl
or
inc
ds
cmpsl
pusha
cli
lahf
fidivrl
lock
cs
in
sti
cmpsl
add
pop
adc
or
popf
shrl
cmp
xlat
adc
mov
pop
mov
jecxz
addr16
cmp
mov
and
push
test
pop
dec
sti
and
inc
xchg
mov
bound
mov
sub
shlb
sahf
dec
jle
pop
push
rcrb
inc
loope
mov
fucomi
stc
icebp
adc
adc
adc
xor
call
pop
cmpsl
mov
enter
jns
push
jmp
inc
jo
cmp
xor
inc
and
xor
xchg
movsl
mov
push
jns
and
adc
ret
or
mov
cmp
hlt
sub
cmp
nop
outsb
pusha
sbb
dec
add
sbb
sbb
test
or
mov
roll
mov
test
dec
adc
jl
xor
mov
pop
ret
jmp
testl
lock
inc
lahf
dec
push
and
int3
sub
rcrb
dec
xchg
lea
out
cld
push
mov
cmp
popa
movsl
dec
jmp
les
jo
dec
shrl
test
jnp
test
iret
vcvtdq2pd
lret
xlat
frstor
cmp
xchg
jne
addr16
mov
jle
sbb
mov
mov
in
aaa
hlt
mov
dec
mov
ss
cmp
mov
dec
loope
fldl
and
sbb
rcll
jbe
fbld
mov
in
shrl
pop
insb
jle
cwtl
push
loopne
ret
cld
in
daa
inc
dec
shrb
inc
movl
push
cmpsl
cmp
lods
cli
movaps
adc
mov
dec
lea
push
out
int
adc
xchg
add
adcl
jbe
aam
xchg
in
and
mov
dec
in
jbe
push
daa
pop
out
push
and
int
jp
mov
adc
pop
je
adc
jl
and
nop
cld
cmp
negb
cmc
sbbb
inc
jb
cmp
leave
out
sbb
dec
and
inc
fildll
jne
push
cmpsl
and
adc
aaa
lods
dec
adc
rcrb
repnz
fldt
dec
lea
and
into
cmpb
rcrb
lods
test
lret
pop
ret
mov
scas
add
imull
test
sbb
ret
shrl
and
cmp
mov
ret
loop
out
xor
notb
daa
cmpsb
fnstenv
mov
push
ja
lea
xor
test
lods
pcmpgtd
test
and
and
cmpsl
sbb
ja
cmp
sbb
sbb
xchg
add
sub
inc
out
arpl
pop
andb
jne
loope
out
cmpsl
push
xchg
inc
es
mov
jo
int3
les
add
and
repz
cmp
xchg
insb
ja
outsl
add
mov
test
xchg
lcall
jecxz
in
xchg
mov
mov
mov
jl
push
mov
es
mov
xlat
push
test
mov
sbbb
jecxz
movsb
int
sbb
sbb
xchg
push
pop
imul
mov
xchg
imul
in
xor
push
mov
mov
cltd
cmpsl
data16
add
cli
outsb
push
add
mov
je
nop
push
pusha
mov
sahf
inc
sub
and
add
xchg
pop
dec
mov
xlat
das
dec
pop
popa
clc
sbbb
movsb
mov
outsl
dec
sub
jge
jmp
outsb
xchg
nop
daa
into
dec
lret
xlat
jge
lods
or
pop
xchg
test
fisubrl
cmpsl
xlat
out
jbe
stos
inc
js
jne
icebp
pushf
sbb
mov
lods
jo
push
mov
or
add
xor
sub
inc
cmp
mov
dec
test
push
inc
mov
test
xchg
movsb
adc
sub
push
in
cmc
add
mov
lcallw
push
flds
mov
inc
add
sub
aad
imul
sbbb
repnz
test
imul
imul
cmp
test
adc
popf
pop
cmc
pcmpgtw
xor
add
mov
aad
push
out
and
fmull
movsl
rorb
mov
testl
push
call
lods
push
xchg
sub
push
movsl
std
loop
je
insb
mov
popa
xchg
idiv
jnp
pop
shll
js
sahf
dec
add
movsl
or
sarl
cmp
xchg
daa
jmp
cltd
inc
ja
data16
jmp
adc
sbb
or
das
or
jb
push
rcll
xchg
adc
out
jae
push
test
popa
jp
and
test
xor
sub
dec
pop
movsl
out
frstor
cli
popa
lods
cmp
icebp
movsl
mov
mov
aad
lcall
loopne
scas
call
dec
mov
enter
and
icebp
mov
mov
leave
out
mov
outsb
rcrl
push
push
push
ret
outsb
or
fbld
adcb
pop
xor
jae
pop
sbb
fdivrs
adc
pop
fisubrl
push
scas
push
push
incb
dec
cmpsb
xchg
xor
pushf
repz
sbbl
fdivrl
add
push
test
repz
xchg
xchg
in
xor
xor
cmc
mov
cmp
jp
pushf
call
fsubr
push
mov
outsb
jl
mov
push
or
fwait
daa
std
or
femms
cwtl
ja
rolb
inc
mov
pop
inc
out
push
ret
sbb
rolb
nop
or
pop
loopne
int3
loope
stos
in
mov
cmp
xchg
cmp
leave
int3
call
xchg
sub
sarl
add
mov
sbb
int3
out
cmp
xchg
mov
dec
ret
leave
clc
dec
jge
cmp
mov
pop
lahf
not
inc
out
mov
arpl
cmpsl
sbb
out
add
insl
mov
xchg
scas
push
push
xor
push
jb
test
sbb
cltd
sub
mov
js
cmc
inc
jno
bound
shrb
test
rclb
dec
ficoms
adc
mov
sub
stc
sbb
add
icebp
fdiv
cltd
cld
out
rcrb
sub
lcall
lret
daa
popf
cli
inc
mov
mov
shl
bound
dec
outsb
shl
mov
mov
push
lea
aam
arpl
mov
mov
push
inc
add
nop
stos
xor
cmc
add
scas
ss
out
pop
dec
pop
or
sbb
in
jmp
test
sub
call
cmpsl
sub
mov
sbb
dec
in
sahf
sub
cmp
outsb
jle
sub
aam
mov
push
add
pop
stos
leave
xchg
sti
int3
out
cli
fsubl
push
sbb
ja
jbe
popf
jmp
mov
sbb
stos
mov
pop
sub
add
or
and
mov
lret
xor
xlat
ret
sbb
lods
adc
aaa
xor
mov
lret
outsb
add
adc
or
test
jb,pt
dec
frstor
dec
xorl
mov
push
xor
mov
fcoms
jl
inc
pop
jmp
add
cld
pop
jmp
jp
es
pop
pop
add
sub
cli
pop
mov
sbb
adc
xchg
pop
lds
test
push
lods
jbe
lcall
test
cmp
mov
mov
in
mov
mov
aad
and
adc
dec
in
stc
sub
outsl
pop
push
inc
adc
lods
jae
roll
scas
les
daa
bound
sub
xor
mov
jge
faddp
in
in
mov
cli
pushf
repnz
pop
movsl
repz
sahf
mov
enter
icebp
or
dec
dec
sub
loop
addr16
pop
cltd
fidivl
mov
sbb
add
xor
cltd
push
push
sbb
test
insb
shl
aad
pop
les
add
xchg
popf
inc
pop
xor
add
push
inc
insl
jno
dec
xor
add
mov
push
mov
cmpsb
imul
and
outsl
mov
mov
push
arpl
arpl
lret
pop
call
mov
jne
mov
dec
bsr
and
add
jle
lods
inc
adc
gs
shrb
mov
loopne
ja
sbb
outsl
je
popa
push
mov
data16
jno
jns
pop
loopnew
outsl
daa
loop
test
loop
mov
xchg
xchg
repz
add
imul
rorb
stos
push
xor
test
leave
pop
lcall
push
push
fcompl
xor
shll
dec
test
or
in
mov
pushf
push
inc
and
dec
jmp
mov
out
sbbb
push
in
mov
add
or
test
dec
and
cltd
push
insl
xchg
push
std
adc
push
sub
loopne
int3
int3
shll
sbb
ja
shl
mov
sbb
sbbl
jle
cmp
lods
nop
in
push
cmp
mov
pop
mov
popa
loope
mov
lds
adc
mov
mov
lock
iret
push
xor
cmc
cld
dec
mov
clc
inc
mov
adc
adc
mov
pop
mov
sbb
popa
jbe
mov
mov
push
scas
addl
jb
sbb
cmp
rclb
or
jle
lock
int
cmpsl
cmp
add
sarl
fwait
data16
jle
loopne
add
mov
sbbl
in
and
xchg
mov
jg
bound
jb
loopne
sub
pop
in
das
call
cmp
sti
sbb
lcall
nop
je
dec
mov
pop
xchg
inc
fisttps
mov
push
mov
ss
jne
sbb
or
sbb
outsl
add
adc
addr16
push
add
mov
test
rcrb
stos
mov
xchg
sbbb
inc
cmpsl
loope
std
fwait
imul
mov
mov
sbb
push
mov
adc
fnstcw
jbe
iret
dec
adc
jns
shlb
push
pop
mov
fbstp
and
dec
dec
in
sbb
cld
ljmp
sbb
ror
outsb
or
je
adc
call
xchg
and
sbb
lret
xlat
test
jg
lock
and
push
mov
mov
or
inc
lds
mov
dec
push
and
sbb
out
sbbl
pop
sub
inc
pop
and
dec
cmp
xchg
icebp
shl
mov
pop
idivl
dec
inc
bound
jge
push
sub
pop
mov
mov
mov
and
add
cmpsl
iret
lcall
or
fwait
push
sti
pushf
scas
lds
or
jmp
rorl
and
mov
inc
fildll
xchg
test
sub
mov
loopne
cmpsb
add
cwtl
mov
xchg
jcxz
ja
pop
aam
mov
pop
cmp
sbb
push
xchg
xor
stos
rolb
daa
jns
out
adc
cwtl
stos
jae
mov
negb
adcb
aam
gs
push
xor
xor
lods
mov
jbe
jle
adc
cwtl
sbb
int
or
sbbb
and
movsb
mov
lea
aad
mov
xchg
movsl
sti
pop
mov
sbb
test
xor
push
test
add
inc
pop
jnp
in
add
in
fistl
mov
xchg
shl
mov
ja,pn
pop
stc
popf
roll
daa
ret
jmp
sbb
and
jnp
repnz
add
jge
mov
pop
sbb
add
daa
sbbb
or
mov
mov
inc
jnp
shlb
rolb
mov
xor
sbb
sbb
addr16
inc
leave
clc
adc
sub
inc
mov
loop
in
pop
lahf
xchg
scas
mov
xchg
aas
in
rcrb
xor
jnp
cmp
inc
add
ja
fwait
sbb
xchg
lret
rcl
je
push
jp
jbe
dec
popa
js
rclb
out
neg
lods
cmpsb
daa
sbb
xchg
dec
fstps
mov
xchg
sbb
popf
push
cmp
imul
hlt
ret
cld
cli
mov
adc
sahf
lea
push
xor
push
cli
xor
sbb
adc
xor
mov
jno
mov
xchg
jno
leave
sub
stc
jo
mov
dec
add
fstps
inc
ds
outsb
or
inc
xchg
outsl
std
jns
dec
mov
pop
mulb
dec
xchg
mov
sarl
mov
stos
mov
int
fcmovnu
out
or
mov
out
fwait
daa
jmp
lods
xor
cmp
jnp
lret
psrlq
dec
enter
shrl
xor
shll
and
test
outsl
adc
inc
mov
add
or
push
imul
add
pop
adc
daa
js
cmp
sahf
dec
xor
sbb
loop
or
xchg
insb
ss
pop
mov
xchg
pop
dec
lcall
xlat
add
fsubs
incl
mov
mov
jg
or
inc
fstps
fidivl
test
mov
pop
imul
out
stc
and
dec
dec
push
or
jp
shrl
fimuls
lock
or
lods
out
outsl
scas
call
hlt
push
xor
popa
mov
push
movsb
adc
add
out
mov
in
rol
mov
push
add
dec
out
int
dec
scas
lret
jns
pop
test
das
mov
scas
call
cwtl
in
adc
push
jle
movsl
inc
push
ret
mov
ficoms
push
push
mov
jecxz
mov
popa
fiaddl
push
into
push
cs
xor
fs
and
iret
ret
test
xor
sbb
out
push
adc
test
xor
fsubr
inc
shrb
inc
xchg
movsb
repnz
aam
roll
clc
xchg
arpl
mov
dec
popa
jmp
xor
inc
xor
push
inc
pusha
aam
aas
adc
lods
mov
xchg
and
inc
xor
cld
repz
mov
idiv
out
push
mov
rcrb
je
push
enter
outsl
addr16
stos
in
mov
in
je
movsl
fadds
and
stos
out
test
push
jno
or
cmpsb
dec
in
add
push
push
cmpl
inc
cmp
dec
mov
scas
stc
inc
lods
fmul
push
jp
fiaddl
arpl
scas
adc
stos
push
jno
sbb
mov
movsb
sahf
fs
or
gs
mov
or
mov
sub
jb
mov
push
lds
ds
ret
and
ror
ds
cmp
fsubr
xor
notb
xor
stc
js
cmp
cmpsl
shll
out
cmp
jo
inc
in
sbb
cmp
call
in
rcrb
push
xchg
cmp
insl
data16
push
mov
push
mov
push
adc
mov
mov
xor
mov
xchg
sbb
or
movsb
cli
and
xchg
xchg
inc
pushf
xchg
dec
dec
cmpsl
and
pop
fstpt
xchg
sub
hlt
xchg
es
cmp
test
mov
add
xchg
sub
ja
aaa
in
daa
repz
xchg
add
test
jl
mov
flds
fiadds
sbb
inc
push
lcall
inc
lock
movsl
xor
pushf
popf
stc
xchg
pusha
cmp
inc
mov
ss
in
mov
adc
ret
mov
and
add
out
jg
cmc
adc
iret
mov
shl
push
test
or
lret
movsl
movsl
xchg
adc
test
loope
adc
ret
sahf
xorl
jecxz
repnz
xchg
insl
sbb
imul
pop
jae
repz
arpl
pop
mov
xchg
cmpsb
cmc
das
and
xchg
cmc
hlt
sarl
outsl
mov
push
hlt
xchg
lcall
mov
test
mov
scas
sbb
gs
stos
inc
stc
fiaddl
das
repz
xor
icebp
adc
pusha
push
xchg
rorb
lods
xchg
pop
adc
adc
cmpsl
and
xor
push
mov
fucom
or
mov
daa
mov
addb
or
cmp
sub
lods
add
int
gs
adc
sub
pop
jbe
hlt
jmp
lea
ret
cmp
xchg
pop
push
imul
add
mov
fldl
adc
cwtl
pop
sbb
ret
jns
push
pop
cwtl
fwait
scas
ret
test
mov
lret
out
into
xchg
iret
mov
les
aad
jbe
scas
jg
or
pop
fbstp
pop
scas
les
fnstcw
mov
add
add
push
lods
mov
xchg
aaa
hlt
mov
cmp
jp
or
adc
mov
lods
outsl
daa
xchg
cmpsl
cmp
inc
push
incb
adc
jl
mov
ds
push
popf
xor
notb
mov
je
adc
xor
insl
sub
sbbb
mul
fs
cmp
jbe
mov
out
clc
aam
lods
inc
popf
cmc
fcomip
pushl
fdivl
xor
mov
sbb
push
and
jne
mov
stos
popa
sti
cmove
and
add
mov
dec
xor
loop
cmp
mov
cmc
stos
movlps
xchg
aam
xchg
shll
dec
mov
fcoms
xchg
sub
sbb
mov
jp
fcmovnu
mov
add
jle
and
mov
inc
orl
cs
adc
sbb
pop
add
bound
or
xchg
sbb
mov
mov
outsb
xor
shl
inc
int
iret
fisubl
mov
shlb
adc
or
cmpsb
and
and
rclb
cs
lea
mov
mov
ds
psubsb
dec
sbb
or
test
push
pusha
sbb
prefetcht0
cmp
cmp
and
jno
icebp
mov
dec
js
fs
adc
mov
ret
subb
mov
insb
mov
frstor
popf
sahf
and
iret
xchg
sub
lods
scas
addr16
addr16
pop
lcall
pop
stc
adc
jmp
stos
std
insl
add
lret
xor
push
mov
push
adc
scas
fstpt
add
cmpsb
mov
dec
add
xor
xchg
in
dec
mov
and
ds
sbb
push
ljmp
or
iret
xor
sahf
xor
and
dec
in
in
sbb
shll
sub
jmp
inc
lea
inc
mov
stos
movsb
pushf
loop
iret
mov
add
dec
std
test
cmp
cmp
adcl
jge
sub
loopne
push
nop
ljmp
arpl
fwait
mov
enter
fwait
addr16
sbb
shll
xor
dec
inc
fwait
hlt
mov
jge
sbb
pop
mov
test
js
ss
sub
filds
and
jbe
mov
mov
aas
test
divb
mov
mov
into
lea
lret
data16
fcmovne
jecxz
adc
jmp
fmul
inc
jno
outsb
ret
mov
loop
movsl
xchg
inc
jecxz
or
xor
lcall
cli
sti
aaa
loop
push
mov
and
add
cmp
sahf
das
clc
inc
dec
mov
mov
outsl
mov
cltd
and
repz
mov
xor
fisttpll
adc
mov
inc
fxch
push
sarb
inc
arpl
sbb
cmpsl
jo
cmp
jbe
call
pop
test
and
lcall
or
and
fnstenv
jbe
sbb
jecxz
mov
mov
pushf
repz
nop
inc
xchg
cmc
sarb
jecxz
shlb
mov
fbstp
dec
pop
dec
stos
xor
sub
jmp
and
loopne
mov
cltd
cmp
push
out
ficomps
add
dec
add
xor
pusha
orl
mov
shrb
sbb
test
sub
pop
nop
xor
sbb
nop
push
inc
fst
lods
push
dec
xlat
outsb
jg
jb
leave
mov
mov
sub
mov
mov
push
bound
mov
pushf
out
fdivrs
adc
jb
pop
in
adc
cli
xlat
in
mov
rorl
iret
shr
fwait
mov
sub
dec
mov
int
sub
or
shll
in
push
sti
add
dec
sbb
mov
mov
dec
mov
scas
jbe
nop
mov
add
push
dec
mov
mov
int3
ficoms
sbb
sbb
sub
sbb
repz
lock
pop
push
mov
ss
enter
mov
sub
push
sub
lea
lods
cmpsl
jno
push
cli
adc
stos
and
inc
pop
daa
cmc
adcl
xchg
call
ret
rcll
pushf
mov
push
pop
dec
rorb
notb
mov
mov
jg
xchg
mov
scas
call
jl
sahf
xor
frstor
push
push
cltd
ror
mov
jb
test
adc
mov
xchg
xchg
or
mov
scas
xchg
mov
inc
fisttpll
xor
pusha
jns
orb
adc
loop
adc
stos
iret
add
fsubrl
stc
lahf
xor
cmpsb
lock
xchg
xchg
add
inc
inc
dec
std
lods
fadd
andl
pop
push
nop
push
xor
jmp
jns
aam
xchg
xchg
push
cmp
add
cmp
popa
lods
pop
fidivs
jnp
dec
inc
ficoms
or
cmp
lods
jmp
stos
push
sahf
xor
icebp
xchg
add
cmp
adc
sbb
pop
and
or
cmp
xor
pop
jecxz
aas
pop
sti
fs
add
dec
adcb
fcmovb
push
aaa
jl
inc
inc
mov
jbe
movsb
push
data16
icebp
jne
stos
test
lods
jbe
mov
inc
adc
in
add
lret
cli
stc
stos
jmp
cmp
andl
sbb
pop
push
sbb
cmpsb
jo
les
adc
mov
in
addr16
pop
adc
pushf
es
adc
les
xchg
pop
dec
sbb
lods
pop
inc
sbb
rcrb
sbb
mov
push
or
lret
addr16
mov
gs
pop
fwait
jne
daa
xor
mov
stos
out
mov
and
fucomi
idiv
pop
xor
leave
lret
xchg
ja
mov
arpl
aad
xor
pop
push
cs
notl
push
or
mov
out
cmc
adc
xor
pop
jp
loopne
fs
jae
mov
pop
sti
stos
fmul
cmpsl
out
fs
std
jns
push
push
test
push
pop
fnstsw
jg
int
mov
idivl
jle
ljmp
fdivrl
mov
shll
sbb
xchg
add
xchg
cmp
pusha
outsb
sub
mov
addb
cltd
sub
xlat
xchg
jnp
dec
call
sbb
out
cmpsl
outsb
add
imul
dec
inc
pop
repnz
sub
add
xchg
lock
pop
lcall
inc
fsubs
call
addl
push
pop
or
jae
pushf
mov
pop
sahf
jmp
cmp
daa
inc
lds
aad
imul
sbb
mulb
cmpsb
in
inc
push
jp
enter
xor
mov
add
and
inc
cwtl
popf
lods
mov
pop
insb
adc
das
inc
add
xchg
arpl
imul
in
sbb
fsubr
jp
cwtl
cmc
addr16
dec
and
mov
xor
frstor
inc
push
xchg
sub
dec
mov
lods
mov
cmp
loop
aaa
pop
mov
and
cmpsb
lcall
stc
or
loop
xor
adc
dec
xor
cmpsl
mov
out
fidivs
test
xor
push
enter
fcoml
sub
pop
imulb
lret
jge
out
rcrl
pop
scas
jae
and
rcrb
ss
mov
pop
ljmp
rcrl
xor
stc
int3
inc
int3
inc
pop
xor
shr
add
movsb
nop
sti
inc
fsubrs
and
jno
lock
xorb
pop
mov
cmc
in
mov
fmuls
repnz
fmull
or
jae
sub
adc
je
push
xor
outsb
xor
or
push
sub
adc
scas
xor
dec
adc
push
stos
add
mov
es
outsb
mov
inc
sbb
int
popf
xchg
cmp
sub
out
cli
push
test
nop
orl
mov
inc
or
cwtl
pop
mov
jns
out
cmpsb
repnz
loope
leave
push
dec
je
movsl
cmp
xlat
sahf
xor
rcrl
jno
out
jb
sbb
shlb
mov
out
dec
sbbl
enter
and
ret
mov
fdivs
lahf
adc
xor
popa
mov
repnz
lahf
mov
call
push
push
lock
arpl
or
pushf
or
sbb
mov
add
bnd
sbb
and
add
and
pop
addr16
xor
call
popl
ds
pop
faddp
les
sbb
lahf
rcl
repz
hlt
mov
xchg
jne
adc
push
mov
jecxz
andl
jnp
lods
imul
mov
add
gs
xchg
ret
xor
fiadds
popf
push
clc
mov
cmp
and
mov
adcb
insl
int3
ficoms
mov
inc
jg
shlb
sbb
lea
popl
cmc
mov
mov
pop
pop
rorb
cltd
sbb
stos
mov
call
or
mov
rcr
inc
fmull
sbb
inc
fidivs
out
fldenv
cld
xchg
cli
fwait
jg
sbb
cmp
and
mov
pop
push
clc
add
jne
scas
js
and
mov
mov
je
adc
dec
mov
lea
cmp
aaa
mov
inc
in
cltd
adc
aas
int3
mov
sahf
scas
fs
mov
movsb
imul
jle
test
pop
mov
cltd
js
or
or
cltd
pop
push
and
ret
add
mov
or
hlt
iret
cmp
das
cmp
and
xchg
push
add
sub
jae
aam
xlat
outsl
cmp
arpl
mov
fwait
sub
mov
cmp
cwtl
orl
out
lea
mov
add
ds
and
jae
jecxz
pop
adc
mov
jp
mov
out
in
inc
sbb
xor
or
mov
stc
cmpsb
pop
shrl
xorb
sbb
rorl
mov
nop
call
push
ss
lcall
popa
psllq
jl
xlat
xor
gs
xor
pop
dec
insl
std
setae
subl
mov
sbb
stos
pop
fsubrs
movsb
and
mov
cwtl
mov
ss
lods
mov
clc
inc
cwtl
cmpsb
in
dec
fimull
inc
push
and
dec
sub
sbb
lahf
or
and
xchg
pop
dec
xchg
sub
xchg
cld
loop
lods
xchg
add
xor
out
sbb
push
adc
insb
jo
loope
fwait
out
rorb
xorl
xor
inc
shrl
pushl
stos
repnz
pop
jb
lcall
mov
popf
lods
jns
stos
xchg
imul
pop
out
mov
aam
and
rorb
jle
jae
cmc
adc
cmp
and
fmul
xor
mov
jmp
mov
add
xchg
ds
filds
sbb
xor
jmp
mov
push
and
inc
mov
leave
mov
imul
mov
pop
mov
push
sub
mov
ret
jo
cmp
sbb
or
hlt
mov
sbbb
xchg
push
inc
scas
out
xor
icebp
sbb
hlt
filds
std
ret
fs
mov
int3
mov
inc
imul
andb
sbb
aaa
push
push
out
mov
cmp
std
enter
hlt
mov
loope
pusha
xchg
fidivl
xlat
xor
call
loope
ja
or
gs
scas
xchg
mov
inc
lock
xor
sahf
push
out
scas
pop
int3
mov
aad
scas
test
stos
push
aad
nop
fiaddl
push
mov
into
leave
mov
pop
pop
pusha
cmp
ja
aad
repz
cmpl
mov
sti
aas
ret
mov
jnp
icebp
outsb
adc
cli
xchg
test
add
sub
lret
sti
sbb
lds
add
fstl
sbb
repnz
push
pop
cmpsb
add
mov
push
stos
push
push
das
rorb
push
add
mov
or
andb
add
xor
jg
adc
sbb
xor
dec
sbb
cld
insl
icebp
adc
lea
enter
push
stos
sub
sbb
adc
sub
push
xchg
std
jbe
mov
in
mov
mov
xor
pop
and
hlt
mov
sarl
push
push
mov
cld
in
or
push
aaa
movsl
cmp
push
outsb
jle
aam
sub
add
xchg
mov
das
lahf
inc
popa
sbb
sub
cmp
ret
mov
sub
loopne
testb
pop
out
in
scas
dec
pop
jb
cmp
adcb
mov
inc
into
sub
clc
push
mov
cmp
mov
pop
lahf
cli
xor
dec
loopne
add
and
ret
rorl
lcall
pop
test
fsub
jecxz
iret
js
leave
push
loope
jmp
and
jb
lea
dec
test
jl
pop
outsb
sahf
sahf
iret
pop
hlt
aaa
popa
lret
in
adc
mov
or
mov
decl
jno
pop
pop
jl
and
cmpsb
cmp
mov
leave
imul
int
xchg
pop
repz
sub
lds
gs
adc
mov
clc
shll
daa
push
xor
rorl
inc
sbb
sahf
lds
mov
sahf
call
aam
and
mov
iret
cmpsl
jne
popf
and
jmp
shll
arpl
ret
pop
xor
test
mov
movsb
test
lcall
sbb
push
dec
or
sbb
rolb
sbb
push
inc
jmp
xor
xchg
sar
mov
jg
out
adc
fdivl
mov
jae
adc
cli
or
jnp
lods
xor
arpl
mov
sub
cli
or
stc
xor
cmpsl
js
es
push
es
fcom
mov
sti
xlat
mov
or
sbbb
push
pop
mov
int
aaa
add
mov
adc
dec
mov
out
push
push
sub
adc
cltd
lds
hlt
dec
notl
lods
mov
push
jb
data16
add
pop
pop
mov
or
push
or
dec
std
mov
aas
stos
inc
inc
add
imul
orl
mov
icebp
hlt
inc
xchg
jae
adc
ss
dec
and
test
out
test
push
adc
dec
shll
dec
pop
pop
add
lock
gs
daa
mov
push
into
push
xchg
out
movsb
pop
fsub
push
add
mov
xchg
inc
jp
cld
and
rorl
xchg
adc
rol
icebp
sub
xor
or
and
nop
and
rorl
or
fs
adc
test
cli
testl
stc
test
add
jge
and
inc
xchg
push
icebp
loope
vaddsubpd
jns
xor
jl
aas
fwait
and
lock
mov
out
sub
sbb
mov
adc
mov
insb
xor
adc
xchg
xor
dec
shlb
jb
ljmp
fldenv
data16
inc
ror
int
jnp
push
test
push
sub
push
xchg
fnsave
dec
mov
push
xor
ss
loopne
out
fisubrs
adc
pop
sahf
lods
pop
push
lret
cmp
rcrl
inc
lods
jmp
mov
push
mov
and
addb
mov
push
xchg
sub
sbb
mov
sbbl
out
and
add
pushf
ret
in
mov
fstpt
test
cmp
imul
xchg
cwtl
xchg
sbb
push
dec
iret
fidivrs
mov
dec
in
ljmp
mov
in
pop
ret
cld
addl
test
ja
sub
push
inc
xchg
test
fisttpl
in
jge
fidivl
cwtl
dec
pop
lret
mov
inc
mov
pusha
pop
jmp
adc
adc
andl
call
mov
lock
ret
adc
imul
pop
pop
adc
idivl
sbb
aam
jecxz
inc
and
sub
jmp
jno
sbb
je
mov
sti
pcmpgtd
fs
adcl
test
xchg
xor
fimull
push
cmp
enter
cmpsb
xchg
bound
js
aaa
test
iret
inc
fildll
shrl
out
fsts
popf
sbb
icebp
push
movsl
and
insb
stc
lret
mov
mov
cwtl
sub
popa
jo
daa
lods
or
jmp
mov
gs
jnp
ja
inc
jb
cltd
cltd
xor
lea
lret
mov
repz
adc
int
inc
pusha
shlb
mov
lcall
shr
cmpsb
mov
or
shl
adc
dec
lret
cmp
xchg
jl
pushf
andnps
sbb
mov
imul
and
jns
jg
stos
inc
dec
jecxz
faddp
das
sub
addr16
rcrl
mov
lock
mov
adc
xorw
cmp
mov
jbe
cmp
in
aaa
pop
mov
repz
push
add
xchg
insb
cli
sub
vpavgb
hlt
adc
push
sbb
inc
cmpb
mov
inc
and
fucomp
std
andb
pop
and
sbbl
xchg
fdiv
int
das
ljmp
stc
mov
add
push
lret
mov
inc
aam
add
jle
dec
mov
lret
insl
cmpsb
cmp
add
les
fidivl
or
fcmovnu
or
out
in
mov
pop
mov
cwtl
das
les
mov
cmp
xchg
outsl
stos
inc
or
leave
fadds
xchg
and
jnp
adc
in
mov
push
adc
sahf
cmpsl
adc
mov
cld
cltd
test
ret
adc
pop
insl
out
js
fwait
and
icebp
jl
inc
push
and
hlt
jle
mov
repz
mov
and
rorl
cmpsl
lods
or
dec
inc
mov
xchg
aaa
push
bound
xchg
cmp
mov
ljmp
push
inc
inc
mov
shlb
mov
jge
mov
xchg
dec
add
mov
ja
in
pop
inc
mov
and
add
clc
pushf
stos
sub
ss
sbb
lods
ret
mov
rcr
je
in
popf
leave
xchg
sti
loope
mov
fsubrl
addr16
shrl
sub
dec
dec
pop
fbld
adc
xchg
jne
lds
mov
jnp
testl
xchg
fdivl
sahf
push
out
hlt
and
inc
add
std
fwait
adc
jp
xor
mov
mov
leave
add
aad
aad
jmp
xor
jmp
in
add
fiaddl
std
xchg
dec
je
std
push
mov
loop
pop
and
adc
push
rolb
cld
lcall
call
jl
shl
clc
pushf
push
cmp
subl
pusha
adcl
mov
mov
cmp
jbe
sbb
ret
repz
lock
pop
mov
pop
cmp
in
lds
inc
mov
divl
sbb
mov
fsubrs
sub
ja
dec
push
out
cmc
aam
mov
lahf
xchg
leave
arpl
cli
xchg
push
sbb
mov
xchg
sub
ror
pop
jo
shl
imul
ds
orb
fmulp
jb
jle
sbb
stc
nop
aad
sub
imul
insl
mov
mov
inc
xlat
pop
ret
repz
loop
int3
jns
stos
in
cmp
inc
sub
inc
jns
out
lock
les
shl
mov
push
lea
xor
je
pop
cmpsb
xchg
xor
jp
jno
data16
xchg
jo
add
ljmp
jns
add
inc
and
push
cmovb
dec
pop
out
dec
faddl
xchg
sub
aam
jns
mov
adcl
and
ds
js
pusha
sbbb
xchg
sarb
mov
mov
or
ss
pop
jbe
adc
mov
push
cmp
xchg
fiadds
ljmp
cwtl
outsb
cmp
pushf
shrb
dec
mov
jns
push
stos
sti
and
dec
mov
lcall
loope
dec
fcmovnb
insb
jle
lock
jecxz
gs
dec
mov
mov
mov
cmpsl
imul
push
inc
push
ret
icebp
cs
push
inc
in
sbb
jae,pt
call
or
shrl
jb
aas
iret
or
inc
test
movsb
lods
and
jo
jg
mov
fistps
sub
mov
outsl
sub
das
pop
nop
aad
int3
icebp
or
dec
push
inc
loop
pop
insb
popf
frstor
jae
mov
lods
mov
xor
ja
ds
out
pop
adc
fisubl
out
scas
and
mov
or
bound
iret
gs
xor
mov
lret
test
lods
or
adc
jnp
fs
cwtl
sub
stos
mov
add
cld
jno
andl
sti
xor
repz
jge
inc
out
jge
mov
test
adc
lret
jbe
repz
xchg
mov
imul
test
mov
jne
add
icebp
nop/reserved
mov
inc
mov
lock
ret
jnp
add
negb
mov
cmp
sbbb
fdivr
or
sbb
jp
cmp
inc
adc
cmp
nop
mov
gs
in
push
adcl
or
cmpl
repnz
out
adc
call
mov
test
cmc
movsb
movsl
mov
pop
cmpsb
lret
inc
test
xor
stos
imul
pusha
inc
mov
add
bound
aad
mov
sbb
cmp
mov
fldl
and
xor
inc
repz
xorb
sti
xor
fistpll
jl
lods
mov
es
fdivp
lea
sbb
aam
and
add
mov
pop
mov
aas
pop
clc
icebp
dec
jbe
jbe
or
and
mov
cmp
jae
xchg
adc
and
inc
fs
inc
aaa
sub
test
insl
xchg
test
int
jae
lret
insl
repnz
jb
ror
popa
imulb
test
sti
jb
sub
pop
aas
sbb
add
bound
or
cli
sbb
add
xchg
xlat
inc
ljmp
dec
jno
mov
mov
pusha
or
idivb
mov
rolb
mov
or
enter
movsb
mov
sbb
dec
pop
mov
out
jecxz
cmp
shld
and
jg
inc
mov
ljmp
sti
and
push
mov
dec
mov
les
das
jns
popa
sti
xchg
sub
cmpsl
aaa
pop
xchg
mov
loop
inc
popa
lcall
add
sbb
fdivl
sbb
std
icebp
inc
arpl
roll
xchg
clc
lods
jb
sub
sub
mov
sub
nop
xor
and
pop
inc
push
push
lar
clc
inc
xchg
add
adc
outsb
inc
dec
mov
stc
dec
daa
push
mov
outsb
inc
aaa
and
sub
mov
push
ja
adc
sub
and
inc
and
cld
or
stos
arpl
jnp
je
jno
pop
push
cld
out
mull
mov
negl
es
ret
sub
jne
dec
cmpl
cmp
out
jl
movsl
lods
or
cmp
or
xchg
cmp
daa
enter
je
push
jns
jge
jno
sbb
inc
mov
push
xchg
jbe
pop
jnp
cmp
fcomi
jge
stc
repz
pushf
stc
or
mov
lds
enter
push
stos
sbbb
fbstp
push
aam
mov
pushf
add
sub
sbb
in
sub
subl
pop
push
dec
decb
lds
test
mov
dec
add
and
daa
jmp
bts
and
dec
hlt
ds
das
dec
sbbb
repz
mov
mov
mov
push
adc
mov
dec
mov
and
jmp
fsubl
xchg
cmc
lahf
cmpsl
shl
jge
sbb
adc
ja
xor
pop
jl
fsubrp
fwait
packsswb
cld
sbb
int
push
enter
cmp
mov
push
mov
adc
mov
or
daa
inc
dec
insl
push
mov
cmp
sbbl
cmp
and
fwait
inc
lea
in
mov
incb
jle
inc
dec
fs
movsb
adc
push
loope
mov
test
mov
sub
jle
mov
jnp
pop
pop
jmp
cmp
jbe
dec
jb
pop
push
jecxz
push
negl
cs
lods
mov
loopne
cmp
pop
jnp
in
mov
push
cmp
mov
or
in
jg
xchg
cwtl
andb
stos
js
jnp
shlb
dec
ljmp
es
fcmovne
jg
mov
in
loopne
pop
cmp
pushf
mov
cmp
cmpsb
leave
cmp
sbb
popf
add
xor
mov
bound
sbb
roll
jo
mov
jae
lds
adc
fucomp
out
and
add
gs
mov
jbe
mov
jl
mov
incb
push
mov
pop
push
jp
ss
jbe
push
lods
mov
bound
jmp
jae
aas
out
cmp
cmpsb
pusha
jae
and
ret
add
std
inc
aad
notb
insb
ficomps
leave
push
jo
push
xchg
sub
mov
sbb
jg
std
xor
leave
mov
lret
inc
fbstp
inc
out
ja
sti
add
orb
mov
dec
push
cmp
sbb
imul
jge
out
add
ss
addr16
addb
xor
sarb
and
scas
inc
inc
imul
fildl
jns
aam
mov
jge
mov
test
inc
or
jb
xchg
out
mov
mov
ret
shlb
pusha
and
out
stc
sbb
jecxz
mov
xchg
sub
imul
jnp
push
outsl
out
lock
pop
rcr
xlat
aam
cli
add
daa
adc
call
jecxz
adc
nopl
in
test
roll
or
cmp
inc
fimuls
fdiv
int
xor
mov
mov
and
ret
inc
arpl
loope
shl
sub
movsb
cmp
rorb
shlb
ljmp
out
xor
xor
adc
push
and
cmp
mov
dec
dec
xchg
in
pop
and
frstor
js
adc
daa
sub
lock
ja
daa
cwtl
lods
dec
iret
lods
out
in
push
xor
ja
sbb
jmp
pop
and
mov
repnz
sub
adcb
sub
xchg
push
xor
bound
fsubrs
dec
stc
out
mov
lahf
lret
cld
subl
mov
ret
pop
je
jne
jg
stos
and
into
sub
or
xor
mov
testl
inc
es
jmp
mov
sarb
mov
outsl
or
dec
lock
std
mov
loope
xchg
roll
add
leave
xor
sbb
add
in
shrb
imul
jecxz
add
loope
repz
add
out
sti
dec
insl
dec
in
push
bound
mov
xor
mov
divl
fildl
adc
lahf
sub
sub
test
nop
sub
xlat
mov
mov
je
dec
push
and
mov
fsubrs
xchg
mov
xchg
lcall
push
enter
cmp
or
dec
or
lds
lock
cwtl
das
dec
orb
popf
pop
lahf
lea
inc
es
out
cltd
lret
lock
in
and
repnz
ds
jae
leave
xor
fdivr
xchg
or
imul
repnz
aad
test
rcrb
cmp
stos
mov
ja
mov
adc
mov
das
and
mov
loope
push
stos
add
scas
pop
decl
push
lahf
nop
and
sbb
cmp
dec
cmpsb
and
xchg
adc
xchg
orl
sub
pop
push
imul
push
int
fnstsw
push
dec
mov
pop
jmp
repz
test
mov
xchg
fmull
out
mov
jne
out
mov
mov
loopne
jo
mov
int
ficoml
sub
frstor
inc
dec
xorb
imul
and
add
push
fisubl
push
in
adc
push
jmp
xchg
jo
inc
aad
sub
icebp
out
mov
push
and
cmp
outsl
mov
adc
mov
rorl
xor
inc
cmp
sti
dec
dec
pop
xor
cmp
or
push
dec
sub
mov
or
and
aas
cmp
push
movsl
inc
dec
sbb
dec
insl
sub
push
out
andb
jae
aam
dec
out
loope
jg
jge
sbb
movsl
cs
or
outsb
sbb
pop
insb
pushl
sub
add
inc
mov
std
pop
mov
inc
sbb
into
gs
adc
cmp
adc
xor
cmp
rclb
jge
gs
adc
push
and
push
sahf
jle
sarb
sbb
sub
sub
cli
xchg
gs
push
dec
push
arpl
jb
pusha
test
sbb
sbb
popa
jge
out
xor
mov
pop
aaa
sti
pop
in
dec
push
jne
cmc
imul
int3
cli
xchg
cmp
aaa
iret
inc
mov
add
mov
into
adc
inc
push
cltd
stc
mov
xchg
add
inc
fsubp
push
iret
gs
enter
int3
jne
xor
popf
jg
sub
xchg
push
jne
or
cwtl
cmp
fcompl
jno
movsb
dec
pop
fimuls
andb
jns
sub
cmpsl
out
jbe
dec
dec
jae
cwtl
sub
nop
and
test
push
gs
sar
and
cmp
mov
jo
cmpsl
ds
fsubp
xor
lds
int3
push
push
clc
aas
xchg
mov
push
imul
jno
mov
lods
inc
push
and
jae
cld
add
sbb
sbb
mov
xchg
and
cmp
mov
into
and
jl
lods
inc
and
pop
aas
pop
rorb
mov
dec
out
and
icebp
jg
add
cmp
dec
adc
adcl
push
popa
into
cmp
popa
out
jo
pusha
mov
push
jnp
ret
pop
xor
add
leave
xchg
pushf
and
ja
push
mov
ja
jmp
fcoms
add
fucomp
jge
and
mov
ret
add
xchg
mov
popl
fdivr
adc
push
shrl
mov
jp
dec
outsl
js
push
stos
into
cltd
idivb
addr16
mov
sar
xchg
add
ret
or
mov
or
rcl
or
hlt
sub
scas
or
mov
mov
leave
movsb
mov
mov
push
daa
insl
pop
mov
lds
stos
jbe
and
int
mov
push
push
pushf
add
cmp
popa
xor
repz
xor
and
iret
push
or
mov
jo
lcall
or
dec
push
cltd
or
pop
xor
icebp
lock
push
out
jno
aad
cmp
mov
or
adcl
and
push
adc
inc
int3
pop
lea
push
sbb
lea
cmp
stos
mov
lds
pxor
jo
sbb
cs
scas
push
add
rorb
cmp
cmp
adcb
dec
ss
js
iret
fsubrp
pushf
adc
int
ljmp
stc
sbb
dec
jne
jle
mov
mov
jnp
popf
ficomps
lea
lods
test
in
add
ret
jns
mov
push
jge
outsl
xchg
pop
lret
mov
shll
jns
xchg
mov
faddl
sti
push
mov
mov
std
scas
int3
outsb
sub
adc
mov
dec
out
dec
inc
lret
inc
push
fs
xor
or
jecxz
in
inc
mov
inc
in
push
out
cwtl
in
push
lret
add
loope
mov
mov
jae
mov
cltd
push
out
es
mov
push
fs
xorl
cmp
sbb
sbb
dec
push
std
adcb
loopne
popa
mov
sar
jae
xchg
sbb
arpl
pusha
push
dec
out
mov
mov
push
ficompl
push
cmp
push
jg
pushf
les
arpl
and
test
lret
pop
pop
cmp
in
sub
cmp
push
dec
out
aad
icebp
or
in
into
nop
sub
mov
xlat
std
xchg
repz
lret
push
sbb
dec
and
jmp
pop
jle
jns
sub
mov
dec
cmp
fwait
mov
mov
int3
or
lahf
addl
andb
insl
cmp
jmp
mov
adc
mov
movsb
add
pop
add
fisttps
das
cld
or
sub
lock
pop
or
sbb
push
mov
push
ja
fdivrs
xchg
insl
enter
stos
lods
in
out
addr16
add
in
popa
sbb
sbb
jo
sbb
cmp
sub
pusha
mov
dec
dec
dec
push
dec
xchg
mov
sub
xor
push
pop
jecxz
push
jmp
push
sub
xor
fwait
xchg
movsb
aas
test
out
insl
into
or
dec
cmpsb
inc
sub
insb
out
into
aas
fistl
push
pop
jg
adc
inc
movsl
mov
leave
xchg
xchg
sti
and
xchg
add
xor
stos
sbb
fdivr
or
gs
mov
addr16
shrb
adc
loop
dec
ljmp
popf
and
not
mov
xlat
pop
cli
inc
popa
fildll
adc
repnz
or
jp
add
cli
xchg
push
lods
cltd
scas
fistpl
int
jecxz
ss
xor
jmp
mov
jb
daa
loope
scas
in
popf
pop
push
push
sub
cmpsl
js
fmuls
xchg
in
pushf
mov
xchg
pop
scas
and
mov
mov
dec
test
jl
inc
push
movsb
pop
adc
loopne
cmpsb
cmp
data16
les
mov
loop
pushf
pushf
mov
ja
es
jmp
sahf
mov
pop
repz
sub
push
stc
adc
pop
repnz
xor
cmpsl
or
and
sti
add
ret
jne
push
insl
and
jg
aas
add
scas
mov
mov
push
imul
mov
mov
clc
xchg
mov
iret
fbstp
mov
loope
mov
mov
iret
xchg
sub
dec
mov
mov
mov
int
jecxz
mov
pop
xor
ficomps
push
int
gs
fwait
fs
fdivs
shr
push
xchg
int3
aas
shll
in
xor
into
das
push
int3
ja
cmpsl
mov
pushl
add
add
hlt
lods
pop
lods
test
push
std
fdiv
push
or
jnp
xchg
xor
mov
jge
mov
lcall
in
cmpl
or
nop
xchg
add
ret
mov
push
mov
insb
add
adc
aaa
mov
pop
cmp
push
rcrb
sbb
and
sbb
pop
xchg
aad
lahf
pusha
sub
in
aaa
push
jmp
sbb
aam
cmp
and
aaa
loopne
xchg
mov
adc
lods
sbb
dec
gs
cmp
mov
shlb
add
xchg
pop
mov
xlat
sbb
fwait
fs
ds
aam
cmp
aaa
mov
jle
shlb
shlb
and
cmp
mov
pop
and
fstpt
addr16
nop
call
sub
js
mov
fnstsw
call
mov
pop
cwtl
mov
stos
loope
andb
aas
adc
insb
mov
loopne
dec
mov
lock
out
add
push
jmp
mov
cmpsb
dec
fisubrl
pushf
dec
lods
cmpsl
sub
shl
sti
arpl
xchg
adc
pushf
xor
inc
cs
jg
fsubl
inc
jbe
xchg
lahf
leave
shrl
dec
movsl
fdivrp
jmp
mov
sub
cmp
lret
stos
lcall
jbe
push
arpl
test
mov
sbb
mov
loop
or
mov
leave
adc
int
sbbb
aam
xor
insl
sub
pop
pop
ret
mov
rcrb
das
mov
imul
ljmp
or
cmpsb
pop
movb
push
mov
jne
jns
aam
xchg
test
imul
push
sub
push
arpl
and
mov
mov
or
inc
push
jo
popa
popf
shlb
mov
out
xchg
cmp
dec
sbb
dec
fsubrs
push
call
lods
shlb
aas
push
hlt
je
scas
movsl
adc
xor
jno
adc
daa
popf
push
fsubrs
pusha
popf
stc
jo
sahf
mov
mov
pop
aas
insl
dec
ja
mov
xor
xor
not
roll
fbstp
mov
lods
jp
xchg
dec
aam
inc
push
pop
cmc
xchg
cmp
sbb
xchg
and
ret
lret
and
or
xchg
in
pushf
sbbb
pop
add
mov
pusha
cli
xor
daa
lds
fwait
lret
data16
xor
and
jp
retw
xchg
test
cmc
insl
into
mov
cmp
out
adc
cmpsb
lock
das
mov
sub
lea
mov
xchg
mov
inc
push
lods
aad
push
pop
iret
fdivrs
mov
rcrb
cmp
adc
pop
fisttpl
lahf
fdivl
jnp
cmp
rol
mov
movsl
in
mov
rolb
cmp
std
and
sbb
mov
add
scas
mov
shll
jbe
dec
ror
push
jle
sub
dec
aas
mov
cli
cmc
shlb
aad
add
out
iret
movsl
mov
mov
sub
sbb
push
sub
es
aaa
dec
movsl
aas
jp
vpaddusw
dec
outsl
push
sub
into
cmc
pusha
xor
push
testl
das
mov
pop
xchg
movsl
inc
lret
sbb
jecxz
pop
or
pslld
loope
push
test
mov
lods
das
imul
fwait
ret
xor
cs
fiaddl
push
mov
lea
or
lret
fwait
or
inc
scas
addr16
sahf
aas
aad
add
sahf
out
jecxz
aas
adc
mov
ja
mov
repnz
cli
lds
in
repz
int3
shl
add
lods
cs
inc
test
das
lea
xor
pop
fnclex
mov
jae
sub
sub
mov
bound
pop
dec
pop
dec
pop
lea
add
mov
repnz
mov
xor
cmp
pusha
mov
sbb
push
sub
adc
iret
stos
mov
or
test
int3
mov
mov
repnz
cwtl
mov
xor
ret
pop
jns
clc
icebp
imul
mov
mov
cli
xchg
or
add
sbb
in
dec
fwait
jg
rorl
aaa
fsts
rclb
popf
xor
xchg
adc
loope
inc
popf
xor
push
aas
mov
arpl
pushf
hlt
pop
subb
cmp
out
push
sbb
addl
or
cs
or
pop
mov
imul
mov
sbb
lods
sahf
mov
push
loope
dec
push
jnp
xchg
mov
orb
rcl
adc
or
outsb
leave
les
pop
sbb
je
adc
repz
mov
repz
stos
stos
or
std
sti
mov
xchg
push
jne
push
popa
add
adc
cmp
mov
mov
mov
mov
mov
insb
add
cmp
pop
sahf
adc
xor
das
inc
aad
aas
int
sub
sub
sbb
dec
mov
or
loopne
push
fnsave
mov
sub
dec
pop
andb
pop
shl
push
movsl
es
cmpsl
ds
dec
loope
jp
dec
fistpll
push
movsl
lret
mov
loope
pop
out
dec
fbld
dec
push
movsl
jnp
cmpsl
ds
loope
outsb
dec
fistps
andb
out
popa
dec
fisttps
xchg
cmpsl
mov
orb
nop
setg
and
mov
inc
adc
outsl
negl
ret
and
pop
addr16
cmp
cld
push
insb
loopne
xchg
or
ret
push
jb
adc
jmp
jnp
mov
js
sub
clc
fldcw
movsl
lcall
jmp
and
lret
jno
into
rclb
adc
lret
jae
shrb
std
es
sbb
or
test
lods
nop
stos
inc
lock
imul
add
es
loop
shrb
enter
repnz
das
push
out
xchg
mov
mov
out
imul
movsb
add
push
icebp
fbld
cmp
loopne
adc
leave
pusha
add
xor
xor
call
add
and
data16
imul
out
enter
test
and
pop
sbb
adc
ret
dec
lds
xchg
jb
jbe
mov
sti
inc
dec
ffree
pop
mov
lcall
sbb
test
push
mov
rcrb
jmp
mov
fcomi
xchg
mov
adc
push
xchg
ret
in
mov
cmp
mov
push
nop
daa
push
and
pop
stos
test
lods
or
fsubs
stos
test
or
iret
rorb
xchg
loope
popf
cmp
mov
mov
and
rcrb
lock
shr
xor
pusha
inc
lods
movsb
cmpsl
loope
xchg
lock
in
pop
leave
jo
fsubrs
in
or
or
mov
stos
xchg
mov
ret
call
adc
mov
push
jno
inc
mov
aas
jecxz
stos
in
jne
jmp
mov
cmp
and
leave
mov
mov
mov
mov
popf
scas
xchg
inc
mov
cmp
mov
out
xchg
push
arpl
lret
into
popa
cs
enter
jno
cmp
aad
shlb
mov
mov
ja
arpl
mov
xor
in
outsb
arpl
out
and
leave
rorb
xchg
jmp
rolb
xchg
cmp
jmp
xor
rcr
inc
scas
inc
jbe
aad
add
test
popa
inc
cbtw
out
out
mov
imul
cmp
push
insl
sub
test
jne
push
add
adc
inc
inc
notb
mov
cltd
es
cwtl
divb
imul
repnz
sbb
push
xor
popa
jno
sbb
xchg
lahf
hlt
ret
ja
mov
mov
ret
fucomp
lock
and
pop
inc
inc
add
shlb
dec
fisttpll
mov
mov
dec
das
mov
loope
sahf
add
ret
dec
popa
clc
jp
dec
enter
mov
les
aaa
dec
xor
cmp
mov
push
pop
jl
lods
pop
sbbb
pop
int
scas
jo
xlat
add
outsb
loope
and
out
cmc
gs
mov
call
sub
call
in
roll
int3
lcall
ret
gs
inc
loope
or
insl
cmp
push
pop
jb
adc
mov
pop
cmp
lock
mov
dec
mov
lods
push
mov
gs
add
jl
mov
data16
push
dec
pop
rorl
mov
pop
sbb
xchg
stos
loop
sub
pop
mov
xlat
sbb
test
mov
fs
xor
clc
xlat
in
and
sarb
lcall
mov
or
roll
scas
add
push
lret
xor
or
dec
or
popf
mov
mov
mov
loopne
push
push
mov
add
and
cmp
sub
ret
sub
sub
iret
popf
push
inc
mov
jno
xchg
ja
mov
sub
push
push
stos
fldenv
enter
sbbl
arpl
add
or
add
std
mov
push
jbe
aad
inc
push
inc
inc
xlat
cmp
mov
or
mov
cmp
mov
and
pop
mov
sub
ret
cmpsl
imul
lock
scas
jae
xor
test
lods
mov
cmp
pop
popf
shll
push
scas
cli
pushf
xor
and
ficoms
mov
aad
mov
mov
popf
int3
pop
dec
push
cmp
int3
ret
jnp
sub
mov
scas
sbb
mov
add
push
es
fiaddl
and
hlt
pop
aaa
mov
adc
jns
inc
xor
or
push
xor
push
jl
add
push
cmp
daa
xchg
jle
push
test
add
fnstsw
adc
mov
fiadds
and
les
dec
stc
jmp
ja
ljmp
leave
dec
das
jno
dec
popl
mov
test
pop
ds
mov
mov
testl
mov
pop
movsb
incb
xchg
xchg
cld
push
xor
ss
xor
movsl
push
out
pop
mov
icebp
sbb
dec
cmc
mov
daa
jno
xchg
stc
pop
sub
mov
sbb
pop
insl
inc
out
sub
push
xchg
nop
xchg
ret
outsl
jecxz
dec
cwtl
pop
xchg
jo
mov
out
xchg
cmp
push
outsl
mov
fbstp
and
jge
imul
xchg
scas
outsb
addb
dec
fsubr
dec
cmpsl
add
out
xchg
lds
or
movsb
shlb
sti
les
sbb
das
mov
pusha
push
sahf
cmp
dec
movsb
cmp
jns
movsl
mov
test
jne
mov
and
jne
out
push
xchg
add
jns
aas
loop
inc
test
jbe
mov
add
add
jns
in
pop
imul
icebp
mov
idivl
pusha
ds
inc
fldcw
inc
data16
movsl
int3
imul
sub
leave
xchg
ss
jnp
fidivrs
add
aad
out
cmpsb
inc
pusha
mov
cmp
cmp
mov
fldl
aad
jne
ds
xchg
jecxz
fcomps
push
je
add
pop
push
jne
xchg
mov
push
mov
jge
stos
jmp
fiaddl
inc
xchg
jp
adc
push
push
stos
jmp
lret
jmp
fmuls
xor
sbb
cltd
mov
jno
into
jns
or
and
enter
push
xchg
jmp
and
xchg
mov
stos
ljmp
lret
dec
in
add
xor
insb
jle
push
data16
push
insb
and
sbb
pushf
cltd
or
adc
pop
sub
dec
push
mov
xor
shrl
ja
pop
xor
push
xchg
lods
adc
aam
add
sbbl
in
sbb
mov
bound
outsb
jmp
int3
pop
push
pop
icebp
push
popa
xchg
sub
mov
dec
jmp
scas
sbb
iret
popa
fdivrl
insb
inc
mov
add
push
leave
enter
xchg
in
pop
xor
rorl
jecxz
push
adc
popf
sub
cmc
stc
adc
loopne
fisubrl
dec
ficoml
in
adc
pushf
xor
enter
lods
mov
cmp
rorb
cmp
sbb
out
add
lea
fstl
aas
into
fimull
jae
aas
mov
jle
mov
scas
inc
mov
fcomip
lods
lret
scas
mov
or
cmp
pop
or
mov
push
cld
sarb
je
jp
loope
push
test
xchg
xor
ror
pop
dec
loop
jno
cmp
movsb
rclb
xor
cli
cmp
movsl
add
xchg
xor
mov
push
insl
sbb
push
sahf
gs
andb
mov
out
test
xor
cmc
jae
sbb
jg
sbb
cwtl
or
cltd
sub
jl
and
popa
shl
js
inc
mov
xor
bound
jno
les
push
cmp
dec
stos
jge
cmp
scas
movsl
mov
dec
hlt
cmp
cmpsb
pop
je
adc
xchg
cwtl
jl
ret
cmc
adc
rcrl
int3
mov
and
fistl
flds
stos
fcmovnbe
pop
mov
test
inc
nop
push
jp
test
sub
or
int
push
fwait
je
pop
cmpsb
mov
push
sub
mov
mov
xor
jae
jne
rcll
push
lods
ja
dec
test
dec
iret
in
xchg
sub
dec
rcl
push
divb
repz
adcl
nop
aad
and
adc
scas
mov
and
cmpsl
icebp
jne
icebp
sub
aaa
mov
jp
mov
adc
or
popa
nop
orps
or
es
loop
inc
add
stos
xchg
and
fisubrs
mov
sbb
push
dec
and
mov
and
andb
imul
push
out
jb
fsubl
jbe
enter
jne
insl
sbb
add
xchg
sahf
push
pop
or
jae
inc
push
cmp
push
lock
stos
jne
cmc
lods
inc
lcall
pop
insb
fisubrs
mov
pop
mov
sbb
mov
cld
mov
sti
inc
dec
cld
data16
ds
movsb
call
test
dec
pushf
mov
mov
sbb
int3
fsubs
outsb
ljmp
rorl
sti
cltd
sub
hlt
add
mov
adc
mov
popf
lods
in
inc
jp
popf
call
enterw
fldenv
fucomip
std
add
inc
stos
mov
xchg
cmpb
push
icebp
cmp
xchg
fcom
jbe
pop
lods
xor
lds
andb
sbbb
fcompl
es
mov
std
fcompl
std
inc
fmuls
pop
outsl
or
sahf
hlt
inc
cmp
cwtl
pop
and
or
adc
or
cmc
cli
cs
mov
int3
daa
jne
test
push
aas
sbb
icebp
or
push
fucomp
xor
xor
cmp
dec
sbb
sti
dec
mov
sbb
or
fisubrs
dec
loop
jae
addr16
lock
inc
int3
push
loop
mov
out
lods
or
ret
pop
or
es
data16
pop
sub
clc
mov
cwtl
call
push
jno
pusha
shl
int
jg
inc
dec
cld
mov
out
outsl
jge
sub
lds
mov
rcr
into
ss
gs
aam
or
mov
add
fucomi
out
pop
mov
push
fistl
dec
and
cmp
and
sub
xor
jle
dec
dec
add
xor
push
leave
into
inc
dec
arpl
or
mov
pop
in
testb
hlt
adc
clc
sahf
es
insb
sub
ss
and
add
inc
and
lock
dec
xchg
loopne
pop
sub
xor
sub
push
push
sahf
dec
icebp
sahf
xor
imul
or
daa
ljmp
test
insl
je
lea
cli
push
sub
xor
jle
inc
in
icebp
aam
dec
adc
add
xchg
inc
pop
repnz
icebp
loopne
cmp
fadds
sti
ror
mov
in
xchg
push
jge
dec
orb
fidivs
push
in
movsl
fs
jmp
or
push
sub
inc
loopne
int
popa
in
in
xor
inc
ret
data16
add
stos
mov
inc
pop
jbe
sub
loop
add
mov
adc
insb
add
mov
sarl
ja
mov
aad
outsl
push
jne
pusha
es
xor
scas
xor
stos
inc
dec
cltd
incl
outsl
lret
mov
popa
in
add
inc
push
iret
dec
sub
inc
loop
mov
test
add
movsl
in
sub
outsb
and
in
daa
icebp
popa
lock
movnti
add
add
xchg
lods
pop
xchg
or
in
aas
pop
nop
sbb
dec
mov
repnz
inc
repz
mov
lret
jp
jo
cmp
jle
or
jbe
and
shr
mov
ss
subb
xor
idivb
push
jne
xor
pushf
aam
mov
push
sub
adc
aad
mov
scas
mov
pop
ljmp
notb
das
cmc
mov
or
xor
add
inc
stos
scas
aas
jl
sub
push
or
push
push
repnz
cld
pop
cmp
cltd
cmp
cwtl
inc
mov
sub
xchg
push
je
inc
cs
mov
inc
push
aam
clc
jp
dec
mulb
add
imul
test
xchg
incb
loopne
mov
mov
inc
mov
in
mov
out
pop
subb
cmpsb
xor
aas
lods
cs
pop
jo
fwait
cmpsl
adc
sub
sub
scas
jo
loopne
mov
aam
repz
ret
sti
add
insb
mov
cwtl
into
bswap
repz
ret
hlt
xchg
hlt
cmpsb
dec
push
ffreep
stos
repnz
fldcw
int
add
pop
cs
mov
imul
push
add
xchg
js
adc
pop
mov
jno
xor
jp
xchg
jmp
int
stos
dec
cmp
in
rcrl
ret
int3
cli
cltd
sub
clc
or
mov
fwait
mov
jb
fstl
out
mov
cmp
pop
inc
sub
mov
fsubs
inc
leave
mov
bnd
mov
and
sti
outsl
test
into
lea
dec
iret
fdivl
push
lcall
iret
imul
xchg
das
addr16
cmp
outsb
test
fsubr
movsb
push
cmp
or
and
add
adc
jne
out
lahf
mov
iret
movsb
ds
in
push
lret
xlat
fbstp
adcl
jnp
es
jae
sub
popa
xor
xor
fwait
pusha
int3
xchg
mov
fs
loopne
sbbb
dec
jp
inc
mov
in
or
mov
xor
dec
cli
xlat
sbbb
scas
dec
popa
clc
sub
mov
mov
cmpsl
and
cmpsl
inc
pop
xor
pusha
push
push
cmp
mov
inc
loope
mov
dec
aaa
fisttpl
fbstp
xchg
imul
ret
mov
daa
jg
and
sub
and
pushf
mov
dec
lock
lods
mov
add
call
or
cltd
xor
dec
mov
ds
cmp
xchg
cmpsl
lcall
insb
incl
in
js
lret
push
push
mov
dec
popf
repnz
mov
adc
mov
frstor
mov
out
popf
mov
mov
negl
out
pop
xor
and
data16
jp
lea
cmp
jge
mov
inc
sbb
pop
icebp
movsl
add
scas
ja
lock
pop
xlat
ljmp
jno
jnp
loop
mov
movsb
inc
sti
mov
dec
sbb
inc
inc
adc
pop
push
xchg
imul
lret
lock
ljmp
mov
sub
xchg
shl
movsb
xchg
popf
add
je
aaa
and
push
mov
out
int
in
jecxz
mov
ja
and
sbb
cmpsb
or
test
loopne
imul
mov
inc
out
in
add
int
xor
push
lcall
add
and
jb
mov
jne
push
test
nop
cld
in
sub
dec
jl
idiv
insl
mov
or
jbe
scas
adc
add
orl
stos
stos
out
push
sbb
inc
lds
daa
imul
jg
inc
or
and
in
xchg
add
iret
das
sti
lar
or
push
fwait
stos
bound
es
cld
lods
icebp
add
dec
scas
scas
sti
inc
fs
inc
hlt
xor
pop
cmpb
movsl
pop
test
popf
cwtl
sub
lcall
lock
pop
aas
xor
dec
fs
ret
pusha
popf
push
sbb
jp
lret
fidivl
xchg
loopne
mov
xchg
icebp
adc
add
ljmp
pop
add
sub
xchg
mov
pop
repnz
arpl
xor
rolb
sub
gs
dec
faddl
push
lock
scas
add
mov
mov
and
popf
push
push
mov
dec
std
and
xor
movsb
push
push
ja
ror
xor
js
mov
push
cli
xchg
shlb
dec
pop
popf
out
lds
or
jns
popf
lods
sub
aad
pop
jecxz
fistl
lds
arpl
int
jnp
xchg
outsl
loop
and
addr16
inc
push
aas
repz
dec
push
fnsave
mov
stos
shll
mov
hlt
jge
ljmp
cmp
imull
sub
pop
xchg
mov
inc
cmp
mov
push
rcll
cwtl
pusha
lahf
jmp
mov
addr16
dec
mov
stos
push
add
orl
lods
fimuls
lahf
sub
sbb
push
pop
imul
jmp
iret
sub
aaa
inc
and
sub
out
xchg
ret
ret
mov
insb
scas
mov
add
pop
nop
xor
xchg
jno
aad
sub
daa
leave
and
dec
add
iret
add
mov
icebp
jecxz
das
scas
push
addb
push
shlb
ret
mov
jbe
jge
cli
add
out
in
mov
in
push
call
test
jne
push
cwtl
jo
aas
jle
addl
lcall
fldenv
lret
dec
scas
jno
add
mov
popa
cmp
shlb
call
mov
leave
lods
sub
dec
aaa
push
lds
or
outsl
in
call
in
cmp
call
xchg
fcompl
sbb
mov
lahf
test
xchg
mov
ret
cmpb
outsl
lods
cs
dec
sarb
xchg
fadds
rcll
add
sbb
cwtl
sub
daa
xchg
jg
sbb
andl
stos
mov
mov
sbb
cmp
pop
repz
inc
scas
mov
mov
and
jno
ret
int3
cwtl
sbb
lret
ret
cmpsb
cs
inc
mov
loop
mov
orb
or
xchg
cmpb
adc
jo
js
aas
xchg
es
cmc
push
adc
cld
arpl
cmp
gs
les
clc
xchg
popf
adc
xchg
sahf
lock
xlat
outsl
ret
jl
pop
xlat
dec
mov
loopne
jne,pn
jle
arpl
fdivl
test
jae
pop
arpl
mov
xor
and
pop
lock
add
push
movsl
imul
leave
sub
lods
pop
les
fldl
outsb
aas
or
iret
popw
aad
cmp
inc
xchg
lods
xchg
inc
in
nop
jnp
jne
mov
xchg
scas
dec
inc
sti
ds
inc
leave
mov
jbe
dec
pop
push
push
gs
jbe
jae
xchg
cmp
jae
sarl
call
test
adc
mov
pop
push
jb
sub
movsb
xchg
sbb
xchg
andl
mov
jo
sbb
sub
mov
xor
xor
cltd
inc
push
add
push
mov
jg
xchg
jmp
sbb
dec
xor
shll
lahf
adc
int
stos
adc
sti
inc
gs
xchg
scas
inc
cltd
mov
mov
mov
loope
ss
cwtl
mov
xor
sbb
orb
mov
mov
mov
pop
stos
mov
and
insb
mov
adc
inc
add
mov
push
mov
dec
jecxz
test
aad
fs
jae
cmp
lret
shr
cli
pop
sahf
imul
inc
fcomps
sti
pop
jg
push
lock
add
push
jne
lock
and
push
inc
into
and
and
arpl
push
notb
jle
movsb
insl
or
mov
out
dec
movntq
out
std
bound
sarb
enter
xchg
xchg
dec
jecxz
in
cwtl
outsl
inc
add
testb
ret
xchg
test
dec
clc
cltd
push
cmpsb
in
ljmp
inc
inc
cld
mov
enter
inc
pcmpgtb
rcll
enter
mov
ja
lods
mov
push
lods
inc
sbb
daa
notb
insb
lcall
incl
rorl
sub
inc
and
inc
rcll
lcall
sub
insl
fdivr
scas
pusha
pop
push
test
pop
cs
pop
insb
leave
pop
jp
outsl
push
jno
ss
aam
call
sub
pop
mov
aaa
mov
and
mov
in
repnz
cmp
in
cmp
push
or
out
pop
jno
jmp
xor
ret
inc
push
sbb
in
jle
pop
dec
arpl
mov
push
inc
add
jle
dec
stos
sub
jl
sti
mulb
push
cmp
or
mov
in
sarl
xlat
addl
jp
dec
mov
add
fucom
jbe
xlat
in
pop
gs
ss
sub
pop
addr16
mov
mov
pop
lock
jae
push
cmp
mov
gs
push
mov
das
jg
pop
daa
outsl
xlat
dec
rcrl
dec
pop
jle
lcall
scas
in
mov
mov
sbb
mov
xor
andl
fbstp
ljmp
push
mov
in
in
cltd
cmp
pusha
inc
stos
mov
test
in
in
movsb
call
pop
jo
lahf
sub
pop
push
mov
xor
jge
cmp
ja
or
jmp
in
insb
xchg
ljmp
shrb
adc
ds
dec
pop
push
aam
imul
sub
dec
and
outsl
cmp
or
out
repnz
clc
dec
rol
jns
in
fisttps
mov
cmp
cmp
mov
mov
mov
xor
mov
and
insl
rclb
std
cltd
incb
and
outsl
fidivl
sub
mov
shll
test
daa
pusha
in
lea
subb
jp
call
cltd
inc
sbb
cli
div
sbb
sbb
aaa
pop
daa
add
mov
lods
imul
arpl
mov
xchg
mov
iret
js
out
cmpsb
cmp
stos
in
jp
int
sbb
movsb
jns
dec
fildll
int3
data16
out
xchg
push
or
xchg
popf
out
push
jne
js
in
sbb
push
mov
xchg
test
aam
jb
inc
fucom
aaa
into
imul
and
push
mov
jl
in
sub
in
cli
mov
ss
imul
fs
sbb
add
test
cld
sbb
add
jns
or
jae
mov
mov
loop
adc
xchg
sub
repz
sub
xchg
sub
push
sbb
sbb
dec
in
popa
mov
outsb
in
mov
testb
dec
jl
jp
testb
mov
stos
call
sbb
jle
cmp
jle
jo
pushf
mov
mov
sub
hlt
testl
je
mov
mov
rcl
imul
pop
hlt
or
repnz
jnp
pusha
subl
stc
nop
ret
lods
out
pop
scas
adc
xor
cmp
ret
hlt
pushf
inc
fmul
adc
pop
repz
jno
shll
pop
out
clc
fsubp
ja
in
inc
push
cmp
sbb
xor
pop
mov
jmp
fcomp
int3
arpl
sbb
jl
sub
sbbl
mov
mov
mov
loopne
or
xor
rorb
or
mov
push
jmp
shr
test
mov
or
pop
ja
nop
adc
xchg
add
lret
sbb
cli
arpl
push
sub
dec
movsl
cmp
testb
push
xchg
sub
call
mov
loope
sub
jbe
lds
inc
fsubs
enter
and
clc
or
jmp
sub
dec
mov
jl
push
jmp
mov
outsl
adc
and
arpl
lods
inc
cli
jne
jecxz
out
jp
sbb
dec
push
jmp
xor
xor
iret
lcall
jmp
push
movsl
fmuls
and
aad
mov
sub
scas
pusha
pop
fidivs
jbe
js
fsqrt
xchg
jmp
leave
cmc
pop
hlt
and
into
adc
in
fs
sub
jge
sub
test
scas
inc
lcall
push
cld
sti
es
push
jmp
sub
adc
mov
mov
cmpsl
cmp
scas
cmp
fnstenv
es
adcl
mov
or
loope
es
sub
pop
xchg
mov
push
jne
mov
mov
loopne
add
sbbl
popa
fdivl
inc
es
clc
sti
insl
push
call
sbb
in
test
cmp
cltd
outsb
in
nop
and
test
call
sti
xor
fnstenv
insb
and
push
rorl
mov
push
inc
fiadds
int
sar
dec
in
hlt
loope
and
xlat
outsb
dec
sub
fcomps
cmp
mov
lds
mov
icebp
push
fidivl
cld
repz
cmp
pop
outsb
and
push
gs
daa
xchg
popf
pop
mov
fidivl
leave
lar
popf
jae
jo
imul
add
ficompl
mov
mov
jl
pop
shl
notl
xor
or
lahf
push
mov
mov
int3
or
popa
cmp
and
xor
mov
lahf
insb
imul
add
call
jge
mov
add
movsl
push
shll
sbbl
in
testl
lea
in
xorl
jo
outsl
cld
pop
repnz
xchg
and
xchg
sub
mov
dec
loope
sbb
cmc
dec
push
push
out
sub
out
hlt
gs
xchg
icebp
cmp
fsts
jne
dec
inc
fnstsw
fs
les
mov
fsubrs
xor
fsubl
pop
mov
gs
repnz
lea
repnz
dec
sub
jle
shrl
jge
stos
sub
aad
out
xor
int3
in
ficoms
or
xchg
inc
push
xchg
addl
cld
hlt
mov
mov
in
lahf
ss
add
sub
inc
mov
inc
xlat
gs
repz
and
adc
or
enter
inc
adc
jae
sbbl
ja
and
movsb
jo
rcrb
ja
inc
sbb
cmp
mov
mov
or
adc
cmp
jo
or
scas
xchg
sub
stos
pop
neg
hlt
imul
sbb
push
cwtl
ds
pushf
sbbl
xor
pop
cmp
xor
das
xchg
popa
fsubrs
loopne
into
adc
aaa
push
in
fs
adc
mov
mov
add
mov
jmp
popf
mov
or
popa
ja,pt
shrb
mov
nop
call
rep
push
and
cmp
test
mov
mov
jno
jecxz
mov
sub
push
in
push
jno
dec
cmpsl
mov
test
jmp
pop
scas
and
ds
out
push
inc
fisubs
mov
out
test
cli
popf
xor
push
shlb
sub
pop
rclb
mov
stos
rclb
xchg
insb
add
or
leave
add
dec
loopne
sub
pop
addr16
xchg
mov
mov
lods
ja
frstpm(287
jg
adc
gs
jno
fidivl
mov
leave
jge
mov
and
ss
xchg
sub
adc
test
nop
jnp
into
outsl
push
cld
adc
popf
xor
xchg
cwtl
das
leave
push
lea
sbb
pop
push
test
push
mov
dec
loopne
pop
hlt
mov
sub
addr16
fistpll
rorb
push
movsl
mov
test
test
ret
mov
mov
sahf
nop
or
and
adc
dec
push
pop
hlt
mov
inc
or
jnp
push
pop
jge
nop
cmpl
cs
movsl
cmp
or
test
xor
push
xor
gs
inc
scas
jbe
in
mov
mov
adc
lcall
mov
inc
iret
data16
pusha
imull
out
xchg
xchg
adc
jp
negl
jbe
stc
xor
les
icebp
and
outsl
pop
incl
aaa
iret
and
push
push
add
test
sahf
cmp
jne
bound
xchg
cmp
xchg
adc
adcl
std
std
loopne
test
lock
loope
dec
or
bound
mov
lods
cmpsl
ds
mov
add
cli
xchg
inc
dec
clc
popl
aam
xchg
add
sbb
cmp
pop
lock
fbstp
mov
movsb
sbbl
fstl
xor
pop
icebp
test
jbe
pop
fcmovb
pop
adc
test
jl
shlb
popf
mov
xor
pop
repz
cmpsl
mov
pushf
sahf
das
inc
sarb
and
lahf
mov
inc
ja
jns
mov
rcrb
enter
out
ds
aad
mov
daa
mov
or
push
lods
sub
dec
pop
int
pusha
sti
mov
adc
fisttpl
leave
xor
repnz
call
jg
cmp
nop
outsb
fadds
mov
mov
sbb
sub
aaa
into
pusha
mov
push
lods
mov
jecxz
jmp
imul
andb
aaa
into
jo
insb
add
mov
sbbl
or
mov
popa
scas
inc
xchg
aas
aad
add
andb
pop
sahf
imull
dec
popf
out
dec
out
leave
mov
shlb
xchg
adc
pop
negb
xlat
outsb
cmc
push
imulb
mov
loop
shlb
cmp
lods
add
or
cmc
shrb
in
sbb
sbb
mov
pushf
mov
adc
stos
popa
int3
test
sbb
pushf
xchg
fimull
jp
loopne
push
add
dec
in
jb
pop
dec
add
fmuls
out
push
mov
mov
xor
cs
jecxz
call
loope
lock
lcall
fwait
xchg
sbb
popf
pop
lea
movsl
test
loop
fxch
inc
mov
cmc
jne
clc
xchg
xor
xchg
add
mov
lock
jbe
cs
xchg
adc
hlt
pop
push
mov
idivb
hlt
leave
pop
out
xchg
int
repnz
fisttpl
and
adc
push
xlat
call
lds
jne
lds
aas
jmp
add
and
lds
ret
or
mov
testl
jl
push
inc
mov
sub
es
xchg
mov
les
fdivrl
ret
mov
rcrl
or
jp
adc
push
xor
arpl
mov
lock
je,pn
jl
repz
xor
mov
and
cld
jnp
faddl
adc
movl
ret
mov
cs
mov
xchg
dec
and
jo
xchg
jp
xor
adc
hlt
cmpsb
cmp
and
int3
aaa
test
lret
fnstenv
icebp
mov
sub
das
repz
gs
pop
xor
pop
jmp
loop
mov
lods
faddp
cs
stc
or
int3
mov
cld
sbb
jo
mov
adc
xchg
xlat
mov
or
out
icebp
xchg
sub
and
fstpt
mov
int
mov
sub
lock
lcall
jne
clc
gs
cmp
in
xchg
imull
es
das
hlt
push
jo
push
cmp
mov
pop
fadds
and
jg
mov
or
cmpsb
pop
jno
push
into
aas
cmp
fiadds
movsb
cmpsl
push
inc
mov
das
jno
int
jge
xor
addr16
mov
adc
outsb
inc
outsb
mov
test
loope
jg
pop
sub
dec
or
adc
dec
sbb
pop
dec
xor
loopne
nop
sbb
pushf
aad
fwait
mov
sub
cltd
clc
jo
and
lret
aas
dec
sahf
push
out
pusha
loope
data16
adc
fisubrs
insb
mov
inc
mov
je
adc
cwtl
jae
rolb
sahf
cmpl
jae
sarl
pop
ret
pushf
xor
inc
mov
std
sub
ret
addr16
ss
xor
pop
and
jmp
adc
lahf
xchg
or
xchg
pop
inc
mov
cwtl
and
jl
pop
int3
fwait
inc
xor
push
pop
daa
mov
inc
ret
fstps
pop
pop
rcrl
sbb
mov
fisttps
sub
jmp
and
idivl
inc
cmp
insb
add
jbe
imul
xchg
mov
test
in
mov
int
xlat
movsl
pusha
enter
jg
xchg
lea
in
or
mov
add
ss
movsb
cmpsb
jmp
sub
jmp
js
push
lret
clc
pop
mov
pop
add
dec
iret
xor
push
fwait
mov
sbb
inc
pushf
mov
and
add
add
dec
xchg
mov
sub
dec
cmp
insl
xor
adc
cmp
fcoml
jne
dec
push
lods
pop
orb
jl
mov
icebp
and
xchg
and
jb
adc
int3
inc
popa
xor
push
cli
cltd
xor
jo
push
dec
sub
xchg
insb
add
dec
adc
xor
inc
cmp
gs
cmp
or
dec
mov
mov
inc
mov
sahf
and
cmpb
fidivs
pop
mov
pop
xchg
mov
sub
mov
test
cmp
in
in
cmp
jmp
pop
call
add
mov
decl
imul
jne
mov
xlat
xor
popf
add
and
jmp
inc
fiaddl
stos
gs
pusha
mov
in
dec
iret
cs
js
push
insl
inc
fimull
dec
ret
nop
push
filds
icebp
cwtl
dec
xor
pop
push
daa
in
xchg
xor
adc
stos
int3
dec
or
sarl
mov
fists
bswap
push
cltd
sub
test
imul
loop
bound
in
jo
add
sbb
mov
pop
aaa
or
les
mov
xor
and
cmp
scas
xchg
aam
les
cmpl
xor
loope
xor
xchg
inc
jmp
into
pop
jmp
adc
loop
xchg
mov
fisubl
mov
fbstp
inc
or
inc
int3
push
sbb
mov
xor
inc
sti
pop
add
std
lret
pop
mov
repnz
xchg
iret
imul
inc
lret
test
inc
adc
pop
scas
mov
js
mov
xchg
insb
dec
test
cmp
dec
nop
jnp
outsb
add
xor
lahf
jne
sub
mov
icebp
dec
aam
cmp
icebp
hlt
mov
fstl
pop
sbb
std
mov
adc
int3
push
leave
inc
jno
jo
frstor
stos
push
mov
push
out
movsl
push
dec
add
stos
push
in
mov
pop
fisttps
test
xchg
mov
jno
adc
push
enter
xchg
dec
mov
cwtl
out
push
mov
mov
cli
sub
shlb
aas
add
mov
lock
imul
scas
fidivrs
das
ja
leave
inc
jl
dec
inc
dec
and
ds
mov
cmpsb
lods
dec
xchg
lea
iret
cmp
xlat
popl
or
inc
mov
jo
pop
and
push
outsb
push
jbe
pushf
sub
stc
sti
mov
and
stos
pop
add
test
imul
ret
repz
aaa
xlat
dec
xchg
inc
insb
mov
adc
icebp
imul
mov
push
ja
mov
push
xchg
shlb
jo
push
mov
nop
push
loopne
mov
push
jmp
hlt
fsts
fs
cmp
jge
jge
cmpsl
jb
fnstenv
adcb
pop
and
ja
sarb
lret
cmp
nop
xchg
mov
test
dec
and
cltd
jnp
cmp
cli
dec
sarb
push
shlb
inc
repnz
test
mov
sub
js
cmp
scas
push
pushf
push
leave
pop
push
movsb
popa
mov
or
rolb
jle
icebp
in
popf
xchg
data16
stc
or
push
fistl
jns
pop
pop
adc
popa
xchg
sbb
pop
sahf
sti
cmp
nop
stos
fs
pop
inc
stos
mov
shll
sarl
adc
push
add
and
mov
outsl
mov
or
lret
jnp
cmp
adc
out
divl
fildl
lods
xchg
and
sbb
inc
adc
fs
xor
xchg
push
jg
scas
pop
inc
cmpb
dec
mov
xchg
daa
push
call
test
pop
or
or
mov
repz
stos
add
sub
dec
push
enter
mov
rorb
sub
arpl
out
fidivs
cld
inc
lret
xchg
mull
cltd
jns
pop
ret
je
pop
add
mov
inc
or
add
push
cmp
push
lods
insb
aam
inc
or
std
xchg
cmpsl
insb
and
mov
add
adc
pop
insl
xchg
xlat
clc
push
ljmp
pop
hlt
es
xchg
pop
sub
out
push
das
fstps
lock
ret
out
popa
into
ds
lods
cmp
sbb
je
cmp
clc
popl
lods
jbe
add
sti
mov
out
and
int3
ljmp
mov
js
aam
in
push
mov
push
call
shll
test
andb
xchg
lcall
push
mov
add
jbe
mov
out
mov
fisttps
scas
lahf
test
sahf
inc
fcmove
movb
clc
outsl
xchg
pop
movsl
loop
and
push
dec
sub
pop
popf
dec
loope
push
sbb
loopne
inc
out
sbb
adc
lds
dec
push
movsb
out
jmp
mov
int
int3
xor
or
inc
jne
xchg
sub
lret
das
adc
hlt
sub
fstl
push
int3
dec
push
mov
push
arpl
mov
xchg
adc
sbbb
imul
pop
jecxz
mov
and
add
outsl
sub
lock
add
jne
cmc
lea
cwtl
fs
push
lods
jne
sahf
andb
jne
dec
adc
stos
leave
call
lock
xchg
int3
mov
insb
mov
or
das
xlat
push
jb
pop
lods
xchg
inc
scas
jae
adc
movsl
cmp
sbb
jmp
jbe
mov
shll
sarl
jecxz
inc
test
adc
pusha
and
xor
out
and
pop
aad
mov
sbb
cmp
in
push
mov
sti
mov
push
add
push
enter
pop
hlt
sub
hlt
cmp
int
jecxz
es
or
xlat
jbe
jns
enter
leave
mov
aaa
mov
jno
add
filds
and
dec
cltd
fsubrs
pop
inc
stos
mov
pop
push
inc
jo
push
inc
cmp
pusha
jge
inc
pusha
cmp
incl
mov
mov
mov
xchg
jp
cwtl
out
sub
lcall
stc
cs
jns
rorl
cmp
imul
leave
adc
xchg
xor
das
jno
add
ret
jb
loop
pop
or
test
shl
jb
cs
mov
insl
pop
sbb
in
mov
mov
inc
mulb
out
dec
fwait
xor
push
or
std
sub
cmp
popa
clc
push
cltd
ret
push
inc
mov
push
cmp
or
jno
loopne
cmp
dec
jp
or
addr16
mov
adc
xchg
nop
jo,pn
call
roll
mov
xor
call
lret
xchg
test
lret
in
jge
fsubrs
aas
or
lahf
hlt
push
mov
lods
cmpsb
pop
roll
es
lods
jno
push
rorl
add
xchg
and
ret
and
add
test
scas
imulb
push
outsb
push
adc
cmpsl
cmp
sbb
jecxz
jb
ss
and
iret
cmp
out
jl
fprem1
daa
sarb
iret
push
xorl
inc
sbb
lcall
test
inc
test
cmp
push
fwait
xor
jno
mov
je
pusha
clc
je
pusha
mov
jl
jg
pop
lahf
repnz
xchg
or
inc
in
jmp
es
jp
and
jmp
test
xchg
jle
mov
loope
sahf
xchg
sub
jnp
pusha
hlt
xchg
xchg
mov
out
jp
into
xor
test
pop
sarb
sub
test
mov
dec
and
sub
movsb
pop
popf
xor
insb
jo
mov
or
mov
mov
scas
sbb
push
pushl
loope
stc
mov
in
sbb
mov
and
pop
repnz
fs
das
push
rorb
lret
test
out
mov
cmp
mov
or
scas
shlb
in
or
lods
add
cmp
rorb
jmp
mov
inc
stos
inc
loop
gs
push
int
ss
jns
xchg
inc
mov
push
dec
test
xchg
repz
xor
sub
and
sub
push
mov
sub
mov
xor
mov
jnp
pop
mov
imul
pop
jo
insl
lcall
test
and
mov
push
jo
inc
inc
lods
cmp
push
sub
xchg
jle
xchg
sub
imul
xor
xor
jne
add
cmp
jecxz
inc
mov
in
mov
ss
mov
fnstenv
movsb
mov
pop
push
jbe
jo
xchg
add
push
pop
pop
into
xchg
pop
mov
xlat
sub
xchg
jl
push
and
sahf
inc
dec
in
sbb
mov
push
ds
cmp
mov
cli
in
pop
out
outsl
mov
inc
loopne
mov
dec
mov
movsl
flds
pop
pop
lret
pop
hlt
cld
das
ret
cmp
test
out
jns
leave
add
mov
or
jnp
int
jmp
cmc
into
in
ror
sub
mov
jmp
pop
add
data16
xor
pop
or
incl
cltd
fnstenv
cmp
xor
ret
pop
cmc
mov
push
add
xchg
pop
mov
ljmp
lcall
jne
push
pop
adc
mov
push
and
inc
mov
gs
test
adc
es
push
jbe
popa
aaa
pop
jge
cmp
jp
cmp
leave
dec
jle
sar
insb
push
lret
xor
or
mov
fs
ds
pusha
imull
rorb
push
jge
insl
clc
inc
fdivrs
fldl
movntq
jmp
xchg
adc
fwait
inc
add
cli
jbe
iret
inc
mov
stc
in
fs
incl
xor
push
sbb
mov
push
sub
js
loope
imul
xorb
xor
dec
les
adcb
sub
in
mov
sbb
stos
lea
sarb
jb
les
dec
loop
pop
lret
cli
sub
lds
add
mov
fstl
out
sbbl
cmp
dec
mov
in
lds
push
xchg
xchg
scas
pop
vpsubb
lds
pop
shr
mov
cmp
xor
adc
fdivrs
jbe
mov
testl
mov
or
pusha
pop
test
popf
dec
adc
push
call
push
xor
cltd
jmp
inc
mov
stc
inc
stc
cmp
sub
lock
ret
jae
xlat
test
ret
xchg
daa
and
popa
out
inc
icebp
jmp
dec
pop
mov
mov
aaa
fnstenv
jp
pop
outsl
push
aad
pop
mov
gs
pop
mov
xchg
inc
and
outsb
cwtl
lds
xchg
dec
fadds
call
add
mov
repz
in
pop
add
mov
lcallw
mov
jle
jne
testb
ficoms
fildl
mov
imul
mov
pop
aad
push
mov
dec
adc
cmpsl
cmp
dec
out
bound
hlt
aad
xchg
pop
xchg
sbb
jb
push
mov
and
dec
jb
pop
aad
cmp
adc
stos
lcall
test
test
sub
jo
fcoms
and
fildl
or
xchg
or
push
stos
adc
rorl
push
pop
les
sbb
je
testl
sub
push
scas
loopne
or
mov
daa
sbb
fidivl
mov
movsl
gs
cltd
insl
lcall
addl
cmp
movsl
inc
int
or
mov
add
mov
ret
push
fnsave
popa
push
into
sub
fadds
jo
loopne
icebp
pop
cwtl
das
jb
sub
xor
adc
and
sbb
leave
push
mov
scas
in
test
mov
mov
pop
lret
js
lds
pop
xchg
dec
xchg
ja
jecxz
jns
pop
movsl
pop
data16
xchg
mov
xor
dec
adc
lods
pushf
adcb
mov
mov
les
sbb
aaa
push
adc
push
xor
mov
hlt
fiadds
gs
pusha
in
mov
pop
sub
jp
loop
adc
xchg
xchg
jbe
add
xor
mov
push
pop
pusha
mov
xor
ja
dec
dec
inc
inc
imul
push
rclb
cli
fcoms
xlat
pop
int
fisttps
in
outsb
rcrb
mov
pushf
mov
insl
repz
xor
mov
fiaddl
lods
mov
sti
adc
dec
scas
stos
sub
loop
cmp
jp
push
inc
in
sarb
mov
ljmp
test
aad
roll
lea
fdivr
xchg
loopne
mov
jae
push
sahf
fdivs
lock
pop
xlat
and
sbb
lds
ss
pushf
xor
and
rolb
rcr
jb
push
mov
in
push
insb
mov
outsb
insl
pusha
enter
sbb
adc
pop
pushf
and
or
es
mov
sbbl
and
jp
sub
mov
cmp
push
mov
mull
test
adc
xchg
xorb
adc
movsl
mov
dec
iret
xor
imulb
out
or
mov
fiadds
or
sarb
inc
lock
inc
into
movlps
add
or
sbbb
dec
sldt
inc
daa
cmp
dec
xorb
aaa
or
add
int
mov
and
push
pop
ljmp
daa
add
adc
add
sub
push
jns
std
xchg
mov
cmpsb
pop
xor
popa
lahf
ret
outsl
insb
js
mov
add
adc
ja
ja
push
popf
popa
cwtl
ds
sbb
cltd
inc
mov
movsl
mov
clc
cmp
shlb
or
mov
or
test
sti
inc
lods
add
sbbl
movsl
cmp
sub
pop
xor
cmp
sbb
outsb
ja
repz
adc
xor
xchg
rorb
enter
stos
inc
pop
mov
insb
repnz
cwtl
mov
lds
jg
ds
cmpsl
xchg
push
call
push
aaa
aas
adc
push
inc
insl
pop
std
sub
sub
add
mov
and
adc
sbb
rcll
in
cmp
in
xchg
mov
ljmp
xor
inc
cmp
sub
mov
sbb
xor
scas
mov
repnz
sub
call
data16
mov
jae
jb
imull
inc
push
jmp
cs
clc
and
sub
subb
fcoml
mov
scas
sbb
jmp
lret
test
std
sbb
loope
sbb
sbb
jmp
push
mov
jecxz
mov
jp
adc
imul
loop
pop
shrl
add
repz
cmp
or
lcall
subb
push
stos
lret
xchg
push
les
fiaddl
testl
sub
sbb
or
cmp
ss
jl
and
mov
cmp
lcall
xacquire
out
mov
sbb
and
lret
mov
inc
pop
jle
rcrb
or
jp
mov
sbb
cmp
das
mov
jnp
insb
pop
lods
dec
xchg
mov
pop
dec
out
cwtl
lahf
mov
scas
jl
pop
lahf
jb
sub
cmp
jb
test
pop
mov
into
pusha
push
test
testb
push
mov
testb
out
daa
push
movsb
fnstsw
push
imul
cmp
add
push
xchg
mov
add
movsl
movsb
add
or
loope
push
aam
xchg
mov
mov
sbb
cwtl
mov
or
xorb
jb
and
xlat
xchg
std
xor
xlat
mov
in
sub
sbb
ds
mov
inc
sbb
mov
into
and
xchg
pop
jbe
loop
push
xchg
and
lahf
pop
pop
enter
push
stos
push
sub
pop
in
pop
push
dec
sub
cmp
stos
push
jbe
adc
inc
xor
cmp
adc
dec
cmpsb
lcall
aam
ja
mov
jmp
ret
mov
repz
or
lea
adc
sub
js
xor
test
push
xchg
xchg
imul
in
cmp
stc
jle
and
cmp
mov
call
jge
mov
rcrl
inc
mov
add
pop
hlt
and
adc
add
adc
mov
incb
das
or
arpl
jle
leave
xor
add
mov
and
xlat
dec
test
lods
jl
add
cmp
and
imul
lret
mov
imul
stc
inc
mov
data16
mov
stos
outsl
nop
jg
in
test
adc
decb
xor
dec
adc
mov
cmc
mov
out
xchg
aad
sub
scas
inc
test
cld
cmpsl
insb
lret
and
mov
test
int3
cmp
sahf
lea
out
and
inc
fwait
xchg
out
rolb
mov
aam
cmp
out
shrl
lcall
incb
popf
xchg
ja
pop
notb
push
or
sub
jl
sub
sub
mov
insb
cmp
popf
lea
adc
jns
mov
bnd
int
enter
jp
loopne
xchg
adc
jle
test
adc
icebp
leave
ret
aad
fidivl
repz
push
mov
fildl
clc
mov
inc
add
cs
lret
mov
cli
jbe
das
fst
int3
push
int
cmp
mov
adc
pusha
inc
add
push
mov
add
jmp
daa
loopne
cli
xchg
cmp
dec
rcl
cmpsb
cmp
shll
push
test
mov
sahf
rorl
mov
cmp
add
repz
aam
insb
mov
mov
insb
insb
or
popa
out
and
ss
xor
pushl
std
xor
adc
fsubl
test
iret
inc
pop
jmp
enter
mov
outsb
js
mov
pop
test
jecxz
or
out
xor
xchg
xor
fnsave
cmp
fisttps
dec
rorb
mov
ret
dec
cmp
xlat
push
add
push
push
xchg
mov
in
mov
sbb
bound
and
xor
jl
dec
mov
pop
cmp
pop
imul
xchg
ss
push
pop
aam
mov
in
jl
aad
xchg
xchg
sub
lods
ret
mov
mov
push
mov
aad
call
dec
call
jnp
or
jae
filds
data16
out
fwait
cmc
dec
and
rorb
adc
inc
test
ret
js,pt
popf
mov
call
aam
test
incl
insl
addl
add
scas
jne
xchg
jo
repnz
sti
jle
jno
sbb
in
and
loopne
and
ds
nop
shl
in
push
mov
add
test
out
xor
outsb
xchg
in
add
push
scas
jb
into
divl
les
clc
xor
out
cltd
test
repnz
mov
cmpsl
mov
hlt
leave
pop
lret
mov
adc
lret
incl
enter
mov
add
mov
imul
loope
cld
jne
xor
jmp
cmp
clc
mov
push
in
test
jecxz
imul
jp
aad
repz
mov
xchg
movsb
gs
sbb
push
xor
shrl
enter
xor
push
stc
mov
js
pop
cli
sbb
out
jp
je
iret
jmp
faddl
xchg
lret
push
jnp
mov
loop
fnsave
test
push
mov
fldcw
arpl
repnz
jmp
insb
shrb
mov
pop
repnz
jmp
movsl
push
cld
pop
sbb
mov
mov
shrl
ss
fdivrl
arpl
mov
fidivs
fcoms
mov
jp
mov
push
call
ljmp
lods
je
mov
or
add
and
das
hlt
xor
sbb
xor
insl
unpcklps
mov
sub
pop
fwait
xchg
loope
sub
movb
negb
or
or
xor
xchg
cmp
sub
loopne
ljmp
xchg
stc
and
test
dec
mov
push
jmp
popa
clc
push
mov
scas
adc
mov
jge
add
cmp
push
mov
pop
jnp
rcrb
dec
mov
pusha
hlt
pusha
test
push
jecxz
xlat
enter
cmp
imul
icebp
xchg
adc
xchg
lods
mov
orl
fcomps
jb
leave
lock
iret
mov
push
mov
dec
shll
hlt
sub
int3
addb
ret
int3
inc
push
lret
popa
aad
inc
ss
subps
lea
xchg
sub
scas
sub
filds
dec
loopne
shrl
push
incb
xchg
test
jl
movsb
lods
clc
mov
ret
rcrl
dec
loopne
lahf
fbstp
jae
movsb
repnz
xchg
and
test
inc
sbb
dec
xchg
cmp
enter
sahf
jmp
loopne
repnz
insl
adc
xchg
inc
mov
mov
loope
dec
adc
iret
data16
cmp
in
test
fimull
mov
jecxz
sub
pop
add
dec
ss
fisubrs
shlb
add
sbbl
decb
cmpsb
das
jbe
cmp
leave
mov
loop
sbb
jne
hlt
imul
mov
ret
sbb
int3
adc
ret
pop
pop
push
loope
jb
jne
in
xchg
call
aas
out
mov
popa
mov
xchg
cmp
shrb
shlb
mov
mov
fdivl
push
pop
or
sub
lods
sub
fiadds
dec
loopne
shrl
push
incb
xchg
test
jl
movsb
lods
mull
ret
rcrl
dec
loopne
sahf
fbstp
jae
movsb
icebp
std
xchg
and
test
inc
sbb
dec
xchg
cmp
insb
ret
call
loopne
repnz
insb
adc
xchg
inc
lea
mov
loopne
dec
adc
iret
or
cmp
in
test
mov
jecxz
sub
pop
add
dec
ss
fisubrs
repz
lds
test
icebp
pop
lds
int3
and
std
or
sub
inc
xchg
jo
loop
rclb
scas
add
inc
fistl
mov
test
stos
cmpsl
lcall
xor
and
xor
inc
mov
push
mov
mov
test
jmp
jo
cmp
out
xchg
mov
mov
and
sub
mov
cmp
lods
jnp
mov
lret
fsubrs
fimuls
mov
xor
outsl
adc
ss
in
outsb
repz
cwtl
mov
shrl
adc
inc
lret
jg
jmp
and
xorl
imul
in
test
pop
mov
dec
adc
cmp
jecxz
and
loope
inc
add
mov
jnp
scas
pop
sub
lret
mov
in
pusha
adc
cmp
test
jns
inc
mov
movsl
out
mov
lcall
jae
inc
outsb
lds
inc
xchg
fcompl
add
clc
loopne
jecxz
in
mov
mov
ja
movq
mov
fimull
incl
out
in
mov
sub
inc
mov
addl
shll
push
jl
pop
xchg
push
mov
inc
pop
lea
dec
cld
dec
loop
stos
out
push
sub
mov
dec
or
mov
ds
iret
repnz
cmc
push
int3
movups
loope
xlat
out
loopne
test
icebp
jle
inc
lds
mov
xchg
inc
adc
push
cmp
adc
je
and
cmp
inc
mov
loop
addr16
cmp
cmp
or
push
insl
ds
inc
xchg
shlb
pop
movsb
jnp
scas
popl
ss
scas
mov
in
mov
xor
mov
ret
lock
jb
notb
mov
outsl
scas
mov
movsl
lret
popf
xor
in
dec
xchg
scas
pushf
add
jbe
jo
ja
inc
ret
sub
mov
sahf
xchg
sbb
les
subl
mov
pop
mov
pushw
js
adc
rcrl
xchg
xchg
aam
sahf
pop
and
xor
cld
pushf
or
fsubs
lock
je
nop
pop
cmp
sti
mov
cmp
xchg
inc
nop
mov
mov
jle
pop
mov
std
mov
lods
jp
aas
mov
lds
enter
sub
cltd
movsb
pop
inc
repnz
jg
arpl
fnstcw
lret
jb
mov
adcl
fistl
gs
pop
movsl
in
roll
in
or
ljmp
int3
fcmovne
das
out
jmp
out
or
nop
adcl
adc
push
fcmovnbe
cltd
dec
movsb
aaa
test
jmp
shrl
fs
outsl
inc
xchg
add
mov
cmp
das
out
and
push
cld
jnp
cmpsb
inc
mov
mov
lret
jno
inc
ss
int
sbb
les
mov
cmp
mov
cmp
dec
push
je
xor
adc
sbb
sub
fwait
sahf
xor
sysexit
pop
cmpsl
test
xor
push
inc
fildl
pop
hlt
and
mov
jb
jno
pop
arpl
inc
push
sub
jg
pop
ficoms
mov
test
mov
sub
popf
or
jbe
cmpsb
adc
addb
cwtl
pushf
aad
cmp
movsl
imul
out
pop
scas
lds
insl
add
xchg
cmp
pop
hlt
fbstp
test
mov
std
mov
leave
and
loope
jns
lret
pop
pop
cmc
les
shlb
xlat
pop
lock
test
push
xchg
mov
mov
rolb
ss
iret
mov
sub
pop
pop
mov
xchg
sarb
push
mov
mov
stos
es
sbb
xor
jo
jl
lret
filds
ljmp
loope
adc
idivl
sbb
out
inc
inc
pop
js
dec
xchg
inc
or
mov
js
je
or
subb
out
mov
divl
jp
or
mov
das
int3
addb
nop
hlt
sahf
cmp
into
call
jb
or
xlat
push
cmpsb
daa
mov
cli
pop
arpl
mov
andb
lea
mov
rcr
jp
add
mov
addb
cmp
jle
pop
and
sbb
fistl
out
pop
push
dec
or
es
inc
dec
pop
gs
mov
or
fsubrl
popa
or
lcall
mov
push
add
mov
lret
mov
inc
out
addr16
or
fbld
mov
das
cmpsl
mov
mov
ret
shrb
or
pop
sub
jl
mov
int
add
xchg
movsb
push
leave
nop
lcall
add
cmp
jne
fcmovb
mov
fldenv
leave
pop
mov
xchg
cmp
in
pop
fstpl
add
push
std
test
mov
push
add
xor
popa
fdivs
jno
mov
iret
xchg
lods
push
pushf
inc
push
mov
pop
int
mov
icebp
mov
mov
shll
xchg
mov
xchg
cmp
lret
xor
nop
push
xor
fwait
ret
or
or
sub
fistl
lcall
icebp
push
fwait
mov
cltd
test
or
xchg
cmp
adc
add
roll
pusha
adc
pushf
mov
mov
inc
pop
cmp
xchg
leave
mov
sbb
sbb
pop
push
dec
and
xor
jns
cmp
xchg
inc
jbe
addr16
sub
inc
addr16
and
push
out
ret
repz
push
jle
sbb
dec
sbb
dec
lahf
cmp
fsubrp
stos
inc
or
cli
jns
out
or
sahf
iret
fxch
xchg
fistps
jp
iret
or
iret
sbb
pop
lock
xchg
loopne
jnp
push
divl
cltd
test
shlb
add
push
outsb
lock
dec
adc
arpl
mov
mov
push
mov
into
nop
and
arpl
cmpsb
xor
out
jo
push
iret
in
arpl
xchg
hlt
mov
xor
jg
mov
mov
sub
movsl
test
mov
pop
sbb
push
inc
cltd
cmp
icebp
pusha
xor
mov
fdivl
mov
data16
xlat
lahf
ds
cs
add
fwait
cmp
adc
stos
imul
lret
shlb
sub
mov
dec
or
aad
int3
mov
mov
fidivrs
mov
adc
roll
outsl
repz
jecxz
lods
ljmp
cs
repnz
dec
xor
mov
fildl
or
arpl
lcall
jo
push
adc
stc
mov
addr16
orl
and
mov
mov
sub
cmpl
adc
and
mov
es
aaa
ds
jo
dec
dec
pop
out
call
adcb
inc
adc
dec
rolb
mov
inc
adc
stos
fnstsw
cmp
jg
pop
fwait
or
dec
and
pushf
cs
pop
sti
es
and
cmp
mov
inc
jne
aad
fdivl
or
pop
lahf
roll
test
xor
std
outsl
jmp
jo
or
ds
roll
arpl
mov
sub
fiaddl
mov
lods
jecxz
out
or
pop
add
push
test
sbb
in
aaa
dec
adc
addr16
jo
mov
bound
shr
outsl
rcr
inc
or
movsl
hlt
pop
or
test
pop
add
jle
sub
in
fdivr
popa
ss
sti
popa
inc
sub
add
pop
push
cld
jne
pop
add
pop
add
jno
outsl
aad
mov
stos
outsl
hlt
pop
cwtl
popf
inc
inc
push
negl
pop
add
jg
test
cmpsb
out
cmpsl
sub
idiv
bound
adc
lahf
sbb
cmp
pop
add
cmpsb
sub
jne
imul
jae
jns
popa
inc
rcrb
dec
incb
xchg
cltd
pop
add
ss
movsl
jne
cmpsb
ljmp
popa
dec
iret
out
je
pushf
sbb
shll
mov
mov
enter
pushf
std
scas
adc
mov
scas
in
jo
imul
sub
pop
add
dec
push
scas
addr16
mov
stos
add
jmp
popa
rclb
mov
or
dec
ret
lock
icebp
sahf
mov
inc
in
add
mov
nop
cmp
and
gs
outsl
icebp
inc
es
or
push
clc
jae
int
outsl
data16
mov
mov
fisubrs
mov
jb
repnz
cmpsb
pop
add
fwait
or
enter
xchg
gs
repz
test
ljmp
repnz
xor
push
lret
ljmp
fs
mov
mov
mov
insl
icebp
sbb
dec
or
clc
mov
inc
lock
mov
lods
xor
movl
xor
xchg
sub
pop
addr16
out
sbb
enter
adc
fcompl
sub
lds
mov
cmp
out
push
jbe
lds
dec
stos
cs
fstsw
jl
add
loop
sbb
test
fdivr
xchg
aas
jbe
add
push
lahf
cmp
or
or
in
enter
out
mov
cld
pop
testl
pop
dec
or
iret
roll
ss
lods
daa
and
pop
sahf
mov
mov
sbb
test
mov
call
in
sbb
mov
das
jae
iret
xchg
es
movsl
push
mov
sub
insl
movsl
jae
xchg
cmp
fs
jae
std
js
pop
or
mov
mov
and
inc
or
negl
bound
xchg
sub
imul
jno
nop
cld
xchg
ret
pushf
loopne
xlat
or
pop
cmc
jae
sbb
pop
addr16
adc
mov
testl
mov
insl
stc
dec
adc
or
adc
mov
dec
scas
or
lods
and
xor
pushf
test
rclb
aam
loope
and
or
inc
or
call
out
fcomip
xor
inc
or
ljmp
inc
or
mov
imul
push
mov
or
lds
and
xor
das
bnd
int3
mov
mov
sbb
jno
push
leave
mov
mov
inc
push
adc
les
movsb
dec
push
in
mov
rclb
pop
test
imul
fisubs
mov
inc
push
mov
push
call
lods
cwtl
cmp
dec
jb
cmpsb
stc
cltd
cmp
mov
hlt
pop
mov
mov
lcall
jbe
sahf
repz
lods
daa
pop
xchg
pop
scas
mov
mov
cmc
xchg
inc
repz
out
imul
idivb
xchg
pop
loopne
lods
dec
xchg
imul
inc
adc
out
xchg
inc
sub
xor
pop
fnstcw
add
dec
or
pop
js
lea
fstl
ret
shll
jmp
fs
hlt
jo
inc
loop
lcall
call
leave
add
fwait
inc
jg
pop
add
test
xor
and
sub
and
orb
xchg
cmp
test
jecxz
mov
jecxz
push
cmpsl
cmpsb
sub
mov
ret
aam
and
sbb
jl
mov
call
jle
push
and
iret
fs
adc
call
int3
pop
lds
add
repnz
mov
mov
sub
dec
cmpsl
xor
jp
mov
je
outsl
mov
sbb
rcll
addr16
jne
packssdw
outsl
mov
aam
jg
sbb
sub
cmp
cld
aas
dec
or
cmpsl
ds
addb
lods
sahf
dec
roll
pop
inc
mov
das
bswap
mov
or
pop
cld
into
adc
outsb
adc
sbb
mov
xchg
in
clc
push
aam
mov
clc
jg
sub
sbb
inc
gs
idivb
ja
mov
sub
push
inc
and
pop
push
fs
popa
out
sbb
test
psrlw
mov
loop
mov
xor
pop
sub
outsl
repnz
mov
movsl
das
clc
or
mov
adc
dec
pop
jge
or
adc
pusha
call
iret
das
jmp
or
cld
gs
pop
adc
addb
mov
fs
flds
or
cmp
cmp
push
popf
clc
popa
negl
mov
out
sarb
aas
adc
pushf
cs
data16
adc
repnz
imul
lcall
add
mov
fwait
inc
repz
adc
pusha
jp
jo
jae
xorb
std
fadds
dec
jg
mov
jmp
sub
or
inc
mov
cld
pushfw
mov
popa
jmp
dec
fwait
lods
ss
push
fld
mov
mov
mov
ja
cs
outsb
icebp
lods
out
scas
idivl
adc
push
push
adc
repnz
xchg
out
xor
out
movsb
sub
stos
sub
push
fcoms
or
jno
push
mov
add
pop
cmp
loop
stc
pop
add
aaa
lahf
mov
mov
or
mov
orl
adc
fistpll
and
pop
fisttpl
fstps
call
ret
lcall
inc
jge
shl
xchg
insl
icebp
or
pop
add
pusha
in
jnp
in
andl
sbbl
outsl
cltd
aaa
jns
pop
std
daa
popa
cli
aas
add
pop
in
js
rcll
mov
movsl
pop
mov
xchg
and
lret
push
std
mov
insl
add
test
and
insl
hlt
cmp
jnp
cs
dec
xor
hlt
pop
xor
call
add
xchg
decb
mov
scas
sub
fdivrs
movsl
mov
lods
stos
xor
dec
xchg
and
push
push
lds
pop
out
adc
xor
mov
mov
and
sbb
inc
hlt
arpl
ss
nop
sbb
popf
cmp
imul
push
add
push
jbe
faddl
je
dec
add
lods
xchg
pop
sti
xchg
cwtl
ds
pop
std
mov
mov
xchg
inc
mov
scas
daa
fistpl
sbb
or
and
es
call
popa
mov
js
push
rcrl
mov
in
gs
sub
in
dec
xor
in
push
xchg
add
cli
mov
loop
popf
inc
xchg
cwtl
shrb
xchg
cmp
and
ljmp
sbb
inc
or
mov
and
push
jp
cli
int3
push
jmp
mov
xchg
aaa
pop
fdivp
pop
mov
mov
and
bound
pop
imull
mov
pop
sbb
dec
les
idivl
cmp
inc
sub
test
mov
lock
fmull
jo
jno
rcll
aas
enter
xchg
cs
jae
lods
movsb
jae
rcrb
adc
nop
popf
negl
shll
sarb
outsb
jne
jae
subb
lret
insl
mov
lods
lret
imul
inc
call
pop
pushl
iret
dec
adc
mov
cmpsb
cmp
aaa
pushf
mov
lods
xor
ljmp
pop
outsb
lock
or
sub
mov
cmp
mov
mov
add
loop
pop
mulb
ds
mov
xchg
inc
inc
shll
push
jae
sti
pop
and
cmp
das
pushw
mov
inc
xchg
rclb
adc
jb
jmp
bound
mov
dec
or
xchg
adc
je
mov
cmp
cmp
jge
push
adc
inc
pop
add
cld
aad
imul
pop
divl
mov
enter
mov
push
xchg
pop
jp
std
lret
pop
call
lods
sub
cwtl
inc
inc
adc
les
lods
pop
pop
jnp
inc
xchg
cmpsb
loop
js
pusha
pushl
sbb
loopne
enter
mov
mov
ret
repnz
push
mov
push
xchg
iret
xchg
and
mov
sti
cmpsb
cmp
ds
mov
popa
out
test
cmp
ja
pushf
xor
shll
and
mov
and
inc
in
negl
jecxz
andl
mov
push
fs
pushf
push
ret
mov
leave
jl
dec
ljmp
outsl
mov
fs
jns
jecxz
out
mov
iret
sub
fiadds
aam
mov
mov
and
pop
inc
call
loope
sbb
lahf
ds
loope
sbb
push
jne
mov
scas
push
add
jecxz
insb
jmp
cld
aaa
movsl
sub
loop
xor
pushf
ds
pop
clc
or
push
push
mov
enter
jge
fdivrs
data16
sub
push
push
cmpsb
mov
cmpsb
xchg
rclb
ret
std
xor
test
jno
pop
xchg
inc
adc
xor
xorb
fimuls
aam
jnp
dec
dec
or
push
cmp
mov
mov
mov
test
jo
pop
mov
out
ljmp
jbe
mov
lcall
push
pushl
jle
mov
les
shrb
stos
mov
test
les
and
sbb
fstpt
mov
pop
rolb
shrb
xor
aas
ljmp
cmpsb
cltd
repnz
addr16
jge
lret
add
inc
adc
mov
mov
shl
fistps
enter
test
sub
fldt
into
enter
cmp
cld
push
std
dec
adc
call
notl
inc
pop
sti
adc
dec
xlat
add
and
imul
pop
push
mov
xchg
inc
or
mov
test
sarl
lahf
cmp
jae
xchg
cmp
lea
adc
push
loopne
aas
movsl
dec
repnz
out
cltd
xor
cltd
xchg
xchg
aaa
pop
int3
inc
or
mov
aam
xchg
stc
jle
add
out
icebp
push
pop
mov
stos
mov
stos
xchg
aam
xor
xchg
cmp
xchg
in
xlat
test
jne
and
idiv
inc
add
jno
movsl
cmp
adc
mov
ficoms
sahf
inc
add
push
sub
or
push
scas
xchg
mov
into
xchg
in
push
sti
sub
je
insb
cmp
xchg
pop
jg
inc
jl
cmp
dec
xchg
fs
aam
push
sti
sti
sti
gs
out
sti
gs
and
pop
stos
add
or
jae
xchg
stos
push
lods
cld
mov
ss
out
insb
inc
iret
pop
std
ds
sti
pop
popa
and
mov
jge
and
js
xchg
aad
xor
adc
arpl
jge
shlb
outsb
sbb
pusha
ljmp
das
mov
inc
test
adc
test
jno
jo
bound
lahf
inc
jg
in
jb
push
popa
inc
fistpl
jns
pop
fidivs
push
cmp
cmp
or
push
iret
lea
inc
sqrtps
and
mov
xor
mov
mov
adc
xor
jae
icebp
sub
nop
jo
push
pushf
insb
pop
std
lcall
add
jmp
cmc
xchg
lock
push
adc
adcb
and
sbb
daa
xor
xor
inc
in
pop
testb
mov
mov
in
int
nop
adc
jge
jle
sub
mov
ljmp
in
lret
push
or
jmp
icebp
jno
push
add
xchg
ja
xchg
lcall
inc
mov
scas
add
push
int
pop
cli
bound
mov
scas
ss
cmp
xchg
aaa
fimull
negb
adc
pop
dec
sarl
xchg
out
mov
add
shll
test
xchg
orl
aad
sbb
clc
test
mov
loope
fnsave
shr
sub
xchg
cmpl
jp
cmp
jb
add
loopne
dec
ret
xchg
or
cmc
nop
in
sbb
arpl
or
jb
jns
call
mov
sub
sub
out
orb
stc
arpl
cmp
gs
sbb
mov
dec
pcmpeqw
scas
das
push
pop
pop
push
mov
fadds
xor
lcall
mov
adc
insb
test
inc
ja
int
inc
jo
and
js
fidivrl
pop
add
scas
cs
and
lret
in
adc
pop
cmp
test
andl
lahf
push
xor
sub
adc
jne
pop
icebp
data16
xor
testl
pop
add
xchg
pusha
sbb
add
mov
loope
pop
add
movl
call
lods
xorl
mov
cmp
and
cmpsl
ss
dec
jmp
adc
das
lods
popa
pusha
adc
sti
in
cltd
cmp
sub
xorb
sub
sub
fidivl
filds
imul
lea
adc
movsb
add
mov
ss
repz
add
fldl
adc
inc
dec
adc
sarb
or
pop
addl
add
add
jecxz
ja
and
jb
mov
pop
or
sub
xchg
push
jle
mov
xchg
jae
je
mov
fisubrl
inc
sbb
dec
pop
cli
popf
add
lods
mov
add
popa
mov
pop
mov
push
add
stos
pop
stc
mov
push
add
inc
fwait
cmp
sbb
sub
mov
mov
ss
or
std
pop
andnps
cwtl
push
push
xchg
sub
mov
mov
mov
je
notl
movsb
ljmp
in
repz
pop
or
and
fxch
fsts
clc
scas
adcl
dec
mov
xor
mov
jge
inc
in
or
into
aas
sub
je
inc
or
xor
xor
repz
aam
push
test
adc
xchg
shlb
adc
imul
aaa
movsl
nop
leave
jnp
aaa
lret
xchg
cs
adc
cmc
cmpb
rcr
pop
and
stos
cs
std
push
sub
bswap
dec
aaa
stos
sub
xchg
dec
loop
add
push
and
jnp
xor
sub
pmullw
xchg
cmp
test
cmc
pop
mov
mov
aas
jmp
test
jmp
inc
leave
pop
enter
les
out
scas
sahf
inc
mov
pop
shrb
inc
or
cmp
jmp
push
std
adc
xchg
aas
inc
insl
icebp
pop
sub
out
mov
enter
jns
outsb
mov
rcrl
jns
pop
std
lea
dec
repnz
inc
in
jo
mov
mov
mov
arpl
adc
mov
movsl
lds
xor
mov
sub
movsl
mov
sbbb
imul
or
loope
push
pop
iret
sbb
push
add
inc
mov
in
or
xor
sub
fsubrl
ret
lea
xor
pop
or
mov
mov
loope
add
inc
cld
fs
sbb
xadd
xchg
cmp
adc
adc
pop
add
fwait
stos
xor
lret
into
jmp
insb
mov
mov
cltd
movsl
cmpsb
sub
and
sub
dec
sbb
dec
mov
cltd
add
stc
int
mov
jle
push
push
and
mov
cwtl
inc
cld
jns
xchg
in
adc
mov
jns
hlt
jb
jns
out
popf
cmp
popf
push
mov
enter
pop
dec
push
fstps
lcall
subl
test
lods
cmp
test
mov
lret
xchg
mov
sbb
test
or
cmp
cs
paddusb
or
outsb
das
push
rorb
mov
sub
shld
es
and
add
push
lahf
inc
mov
stos
inc
pop
jge
cli
fs
insb
hlt
arpl
ja
call
pop
inc
rclb
andb
sti
int
cs
call
cli
pop
sti
mov
in
out
js
icebp
rolb
outsl
and
loopne
inc
adcl
pop
and
adc
cs
js
in
mov
std
sti
mov
inc
in
std
pop
es
inc
pop
cmp
pop
mov
mov
sti
jns
mov
loope
add
repnz
xchg
rcrl
call
jae
dec
lods
xor
or
pop
std
cmp
and
and
sbb
dec
or
fcomps
mov
xor
popa
xor
pop
imul
jp
adcb
and
stos
dec
or
hlt
cmp
cltd
cmp
ss
fildl
scas
or
mov
mov
mov
sub
dec
ss
xor
lahf
mov
ret
fdivs
sar
or
data16
lock
pop
insb
ljmp
add
aad
push
cli
xorw
pusha
push
in
push
jbe
aam
xchg
and
ss
cmp
xchg
pushf
dec
cmp
mov
jo
xchg
inc
lds
pop
adc
dec
pop
lock
sbb
mov
mov
sbb
popa
pop
xchg
inc
cmp
mov
es
and
xchg
fiaddl
push
je
sbb
pop
sub
xor
sbb
xchg
daa
cmp
cmp
pop
jns
push
mov
clc
test
inc
xchg
ljmp
ret
je
lahf
notb
lds
pop
pop
lahf
inc
mov
fiadds
pop
inc
out
mov
mov
out
outsl
insb
outsl
flds
and
jnp
cltd
aaa
xlat
ja
rol
nop
sbb
stc
pop
insb
inc
dec
or
jbe
icebp
in
sub
jmp
icebp
xchg
loopne
test
int
out
dec
or
push
push
xchg
scas
ficoml
mov
jg
outsl
call
or
or
fidivs
bound
lods
mov
lods
adc
mov
cltd
inc
out
out
je
cmc
mov
outsl
fbstp
bnd
icebp
sbb
sub
fmuls
pop
sti
adc
or
push
dec
or
mov
jle
out
aaa
mov
sub
xor
into
outsl
adc
lds
aas
cwtl
xor
imul
jne
or
insl
insb
icebp
adc
mov
dec
ja
mov
movsl
mov
je
inc
adc
test
cmp
iret
je
cmc
popa
aaa
add
mov
or
cmp
fs
mov
add
mov
cmp
hlt
mov
iret
xchg
add
in
jmp
std
sahf
inc
lea
jne
or
aas
mov
push
loop
shr
xchg
jp
add
mov
jb,pt
add
out
outsl
adcb
fsts
rcrl
push
faddl
mull
xor
push
cmp
mov
jb
jb
cmc
mov
pop
dec
fcoms
cwtl
cwtl
push
ffree
jb
addb
sar
leave
mov
mov
enter
jbe
push
popf
cmp
scas
lods
sub
ljmp
aas
jne
push
cmpsl
pusha
mov
mov
lock
pop
and
or
dec
dec
adc
cltd
xchg
mov
into
add
scas
push
popf
inc
pushf
jge
mov
dec
cmp
inc
jns
roll
sub
and
ss
xchg
out
pop
std
enter
cmpsl
pop
loop
call
clc
push
ljmp
loope
int
cld
fs
pop
mov
out
xor
test
jecxz
pushf
aam
inc
or
shlb
hlt
shl
inc
out
jne
xchg
inc
or
out
pop
push
int3
in
inc
or
inc
jge
add
fcmove
xchg
js
push
sti
shrb
xchg
lcall
lods
mov
lock
daa
movsb
jl
xor
and
lret
xchg
lret
mov
pop
lods
inc
in
inc
mov
inc
or
mov
mov
pop
cmp
call
stc
or
ret
xor
push
insl
dec
mov
outsl
adc
sbb
test
push
sub
mov
into
xchg
jge
stc
popa
xor
flds
insb
sbb
push
stc
outsl
jbe
repnz
jl
popf
sub
lcall
mov
aas
add
cs
dec
adc
inc
xchg
cmp
add
inc
inc
mov
xchg
push
mov
add
and
fadd
or
popa
lock
int3
inc
out
out
xchg
mov
das
xchg
mov
movl
std
mov
fldcw
push
aad
and
fcompl
std
pop
xor
mov
stos
sbb
xor
movsl
ss
sub
popa
mov
mov
arpl
xor
sub
cmp
sbb
and
jae
inc
xor
add
sahf
inc
insb
pop
negl
sbbb
jbe,pt
into
cwtl
sub
mov
les
dec
mov
lods
inc
or
jge,pn
xchg
push
js
lds
mov
push
add
enter
pop
sub
es
fistpll
xchg
lock
repz
std
mov
divb
and
les
mov
inc
stos
inc
jns
dec
setge
xchg
into
faddl
cmp
add
aam
jns
cs
int
push
inc
xchg
call
aaa
inc
jbe
push
ljmp
movsl
jmp
sti
addl
movsb
daa
sub
out
outsl
jle
xor
frstor
testl
cmp
cmp
aaa
mov
mov
movsl
xor
fadd
xchg
sub
inc
out
and
cwtl
in
jne
jmp
insb
out
add
mov
jmp
mull
mov
inc
cwtl
cmp
sbb
mov
inc
mov
adc
mov
sub
ret
lds
sbb
out
addr16
mov
and
jbe
in
in
subl
aaa
xor
or
add
cmp
mov
stos
sbb
ja
adc
push
jge
jne
jo
ljmp
sub
mov
mov
jne
outsl
dec
outsb
jmp
jbe
mov
cmp
call
rorb
push
inc
adc
negl
stos
mov
adc
or
push
shll
xchg
aaa
out
je
adc
sbb
mov
add
mull
fcmovnu
jae
sbb
dec
addr16
push
mov
and
xchg
clc
push
jge
cmpsl
xor
clc
add
popa
dec
loop
ja
ffree
xchg
jbe
xchg
inc
pop
jg
fdivrl
arpl
pop
and
test
cmp
mov
mov
xchg
inc
sub
lret
xor
mov
int
mov
jae
sub
add
pusha
add
add
add
ss
icebp
scas
clc
pop
dec
js
maskmovq
mull
push
cli
mov
mov
and
xor
cmp
and
push
inc
adc
les
insb
lock
jo
lret
stc
data16
jecxz
mov
icebp
faddl
cs
fiaddl
fwait
jbe
xor
and
cmp
fsubl
cmc
fs
push
ljmp
and
adc
fnstsw
dec
scas
sub
xlat
test
cs
jno
mov
adc
dec
adc
leave
mov
or
dec
cmp
jo
mov
sahf
sti
lods
flds
and
cmp
push
or
mov
mov
sub
inc
push
jne
aas
xchg
inc
faddp
pusha
mov
sub
in
adc
xor
ds
xchg
cmp
sub
cmp
bound
sahf
repz
mov
scas
leave
xchg
mov
lods
xor
mov
scas
inc
ss
cmp
sbb
arpl
inc
dec
outsb
jmp
dec
mov
outsl
jmp
inc
leave
popf
cmp
adc
push
adc
xchg
xor
pop
es
data16
cld
xor
xor
shlb
push
push
or
mov
or
insb
scas
lcall
jne
pop
or
and
adc
inc
push
lds
in
push
and
pop
or
xchg
inc
push
pop
idivl
dec
or
ljmpw
push
inc
stc
call
cmpsl
jg
pop
cld
cmp
and
in
or
aaa
cld
loope
js
add
sub
cmp
mov
cmpsl
add
aad
int3
arpl
negb
mov
scas
inc
or
cmpb
negl
sub
or
dec
adc
sub
mov
out
out
insl
jmp
repnz
inc
pushf
clc
cmp
inc
lods
sub
scas
dec
push
mov
fidivrs
test
xchg
inc
je
gs
pop
push
cmp
xchg
xchg
jmp
into
xchg
inc
jns
push
enter
cli
stc
stos
hlt
bound
lods
sub
mov
pop
mov
mov
in
loopne
jnp
sti
addl
dec
push
lret
jmp
dec
cmp
xchg
inc
lcall
popf
addr16
rolb
jne
in
imul
lcall
rcll
push
fstps
int3
dec
stc
arpl
aam
movsl
pushf
mov
pushf
inc
xchg
push
and
cmp
loope
lahf
ja
loopne
sbb
and
sbbb
fisubl
cwtl
inc
stos
jno
imul
addr16
dec
iret
mov
cmp
or
adc
mov
stos
sbb
js
lret
mov
mov
push
call
or
js
insb
cmc
pop
inc
cmp
and
dec
sbb
test
repnz
sub
add
cmp
xor
mov
mov
scas
adc
jno
sub
dec
pop
cmp
orl
or
cmp
jo
adc
gs
fistps
lret
pushf
mov
arpl
jb
and
push
insl
in
mov
ret
loopne
and
test
push
add
fidivrl
push
aad
adc
inc
adc
movsb
das
cmpsl
push
rep
sub
jle
add
dec
xchg
rolb
insb
cmpsb
sub
test
push
stc
ds
insb
out
xor
insb
sti
roll
test
lret
ljmp
mov
jns
jg
cmp
int
push
xchg
adc
call
divb
cld
ja
mov
cmp
inc
repnz
mov
lret
ret
xor
jl
jbe
jge
cmp
repnz
inc
dec
iret
mov
lahf
adcb
movsb
out
popf
xor
cli
pop
repz
pop
mov
clc
dec
flds
add
xor
test
lock
adc
adc
cmp
xor
daa
xchg
stos
sub
cmp
aaa
and
mov
sbb
jae
jo
dec
adc
gs
and
sbb
test
lds
call
lcall
mov
mov
orl
gs
rorl
aad
insl
pop
movsl
in
rorl
in
jno
or
mov
test
mov
mov
push
push
mov
popl
leave
and
and
jae
lea
stos
and
mov
movsl
or
aas
cltd
inc
and
pop
ret
out
icebp
test
cmp
jnp
test
and
mov
cmpsb
lea
and
mov
std
and
fcoms
addr16
dec
xchg
rcrb
sbb
fxch
jecxz
sarb
icebp
push
mov
stos
adc
sub
aas
mov
aas
cmp
inc
pop
in
sbb
ret
idivl
mov
or
outsl
fistps
push
mov
inc
pop
pop
test
push
out
fnstenv
pop
js
cmp
xchg
sub
cmp
xor
mov
shrl
lods
push
jmp
test
jo
xor
mov
sub
dec
loop
clc
lret
sahf
imul
jge
xchg
and
movsl
cmp
icebp
and
and
inc
fnstenv
js
xchg
pusha
test
call
sbb
xor
cmp
adc
ss
lock
outsl
adc
ja
mov
fcoml
stos
mov
leave
or
shrl
sub
out
xchg
subb
sub
and
es
inc
pop
into
dec
loopne
jns
pop
stos
and
push
int3
out
jb
sbb
push
lds
mov
ret
inc
fdiv
imul
popf
adc
call
cltd
adc
mov
mov
cmp
xchg
or
pop
icebp
out
fnstenv
pop
jns
cmp
xchg
mov
push
lods
aaa
lods
mov
fistps
lret
mov
aam
xor
repnz
cmpsl
adc
cmp
lods
inc
aad
dec
jecxz
test
sub
call
pop
and
cmpsb
cmp
and
inc
fnstenv
loop
sbb
add
sbb
pushf
xor
cmp
adc
mov
icebp
data16
outsl
adc
testb
xchg
mov
fnstenv
leave
or
push
out
aad
xchg
jle
add
pop
rorl
lods
and
inc
push
int
loope
ja
pop
test
lret
cld
jb
push
movsb
sbb
movsl
cmp
outsl
and
dec
roll
imul
popf
adc
inc
mov
jle
xchg
adc
mov
mov
cmp
push
cmp
pop
fnstenv
push
jp
cmp
cwtl
das
mov
lods
xor
push
xor
xchg
aam
xor
repnz
adc
cmp
lds
mov
dec
jecxz
cmc
lret
popf
push
iret
dec
call
pop
and
cmp
pop
xchg
les
inc
inc
fnstenv
loop
sbb
pusha
test
in
adc
sarl
xor
cmp
adc
icebp
gs
outsl
adc
testb
xchg
mov
mov
pop
fdivs
leave
or
push
out
aam
xchg
jge
add
pop
rorb
stos
and
loope
jbe
pop
test
imul
sti
jno
push
mov
les
mov
dec
rolb
push
jns
adc
inc
mov
jle
xchg
nopl
jmp
or
repnz
fnstenv
add
testl
xor
mov
fstl
lret
xchg
aam
xor
repnz
movsl
adc
jg
lds
mov
dec
jecxz
hlt
lret
pushf
push
into
inc
call
pop
and
cmpsb
cmp
push
xchg
les
aas
inc
fnstenv
loop
sbb
add
push
push
mov
aaa
pushf
xor
cmp
adc
pop
icebp
fs
outsl
adc
testb
test
mov
mov
pop
xlat
xor
or
push
out
shl
xchg
es
movsl
push
iret
mov
add
ret
stos
and
loope
jne
pop
cmpsl
sbb
out
cli
jo
push
mov
ret
movsl
cmp
insl
and
dec
mov
loop
fwait
adc
inc
mov
jle
xchg
push
pop
mov
mov
xor
pusha
cmp
push
cmp
fnstenv
add
adc
scas
testl
xor
xor
test
aam
das
cmpsl
push
jmp
cmp
pop
sub
and
daa
mov
dec
jecxz
repz
fwait
push
int
call
pop
and
cmpsb
cmp
sbb
ds
fldcw
loop
sbb
add
adc
ss
xor
cmp
adc
pop
icebp
arpl
fsubrs
test
mov
testb
test
mov
mov
pop
xor
pop
jg
imul
jnp
add
push
into
mov
add
ret
test
lret
sti
je
pop
cmpsb
sbb
add
out
stc
outsl
xchg
mov
ret
hlt
insb
and
inc
mov
loop
lcall
xchg
in
bound
xchg
or
pushf
xor
pop
cmp
push
cmp
fnstenv
add
xor
push
cwtl
das
mov
push
lods
xor
xor
test
aam
cmpsb
push
jmp
cmp
adc
jge
lds
lahf
lods
inc
roll
jecxz
repnz
lcall
ja
mov
pop
cltd
push
popf
lret
cmp
sbb
les
cmp
loop
sbb
add
adc
push
mov
xor
cmp
adc
pop
icebp
outsl
push
test
mov
testb
adcl
sub
push
jle
imul
jp
add
push
int
and
jbe
ret
cmpsl
and
loope
jae
pusha
movsl
sbb
dec
out
clc
insl
xchg
lahf
sbb
popf
dec
shlb
pushf
adc
pop
inc
mov
loop
cwtl
punpcklwd
inc
mov
jg
xchg
or
mov
mov
xor
pop
cmp
push
cmp
fidivl
add
xor
cwtl
das
xchg
pop
scas
xor
xor
imul
mov
jno
sub
es
lds
lods
inc
rolb
jecxz
icebp
lret
bound
cwtl
push
lret
xorb
pop
sbb
cmpsb
cmp
sbb
inc
fisubrl
loop
pop
popa
clc
sarb
xchg
imul
push
mov
xor
xor
fnstsw
push
mov
icebp
pusha
fcmovnu
jo
cmpb
testl
mov
mov
pop
aam
lret
shrb
es
call
add
push
stos
and
movsl
push
int3
lea
je
ret
movsl
pop
lods
inc
push
dec
loope
jb
popa
movsb
sbb
dec
imull
push
popf
sbb
sahf
dec
mov
and
pop
inc
mov
loop
xchg
push
stc
aas
mov
xchg
call
or
mov
mov
xor
mov
mov
repnz
jb
jns
xor
xchg
test
sbb
xlat
push
ss
clc
shrl
movsl
push
jmp
dec
icebp
mov
jb
sub
nop
daa
jl
sub
inc
rolb
loop
icebp
int3
arpl
xchg
imul
jbe
xchg
sbb
movsl
cmp
ljmp
ret
fldt
loope
adc
call
adc
sahf
xor
or
cs
lock
fcmovnu
jno
xorl
pusha
aam
sub
adcb
mov
mov
pop
aam
lret
add
es
jmp
add
pop
stos
and
and
movsb
pop
lods
inc
push
lds
divb
bound
jmp
sbb
dec
mov
es
inc
mov
loope
xchg
push
arpl
aas
mov
xchg
out
sbbl
cmp
cmp
mov
mov
icebp
fstpl
jae
js
xor
xchg
sub
xor
into
xor
imul
dec
lock
or
sahf
push
movsl
iret
dec
xchg
sub
ret
and
dec
loope
icebp
int
and
jmp
jbe
xchg
leave
cmp
sbb
inc
fsubrl
loopne
adc
xchg
data16
sbb
mov
mov
fidivrl
rorl
mov
out
pop
fcmovnu
jb
jg
or
pusha
rclb
mov
mov
push
aam
int3
add
es
ljmp
jno
stos
pop
or
es
jno
ret
scas
inc
push
ret
dec
loopne
jno
arpl
ljmp
pop
or
in
imul
pop
aas
mov
loope
xchg
or
call
xchg
push
push
mov
mov
aaa
in
cmp
mov
pop
icebp
fistpl
je
cld
js
lods
sti
xchg
fimuls
sub
xor
aaa
into
xor
imul
dec
lock
jae
sub
xchg
sub
sub
and
dec
loope
lock
and
xorb
sbb
enter
imul
mov
mov
loopne
ja
mov
mov
loopne
sbb
xchg
mov
fnstcw
rorl
xchg
out
pop
fcmovu
jb
jle
or
pop
rcll
mov
mov
push
shll
stos
and
out
test
ja
or
lret
cld
jo
ret
scas
inc
dec
ret
repz
arpl
ret
ljmp
push
or
jmp
daa
mov
ds
loope
xchg
or
sti
cmp
pop
sbbb
add
mov
rorl
test
fnsave
js
sub
dec
xchg
sub
das
mov
aaa
into
xor
push
in
aam
lock
jae
daa
pushf
push
movsl
int
xchg
sub
sub
pop
pushf
scas
inc
into
inc
dec
loope
out
int
and
jmp
je
xchg
cmp
sbb
fsubrl
loopne
adc
xchg
filds
mov
xor
rorl
xchg
out
pop
jb
jge
or
pop
rclb
mov
mov
push
shlb
addr16
lret
cld
jbe
or
leave
es
outsl
sub
mov
rorl
outsl
int3
arpl
ret
hlt
xchg
inc
mov
daa
mov
cmp
pop
loope
nop
or
mov
xchg
jecxz
sbbb
add
mov
mov
aaa
loop
cmp
xchg
mov
icebp
fsts
je
cli
js
sub
sti
xchg
fmull
sub
mov
aaa
into
xor
imul
inc
lock
jae
es
push
movsl
int3
inc
xchg
sub
sub
push
fwait
scas
inc
int
dec
loope
out
int
and
jmp
jae
xchg
aaa
movsb
cmp
daa
mov
mov
fsubp
ja
mov
mov
fiadds
mov
xor
rorl
test
out
pop
fcomp
jb
jl
or
pop
iret
xchg
sub
jg
scas
mov
mov
push
shll
addr16
push
ljmp
jno
cmpsl
sbb
movsb
dec
enter
outsb
sub
lahf
sbb
loopne
outsb
int3
arpl
shr
xrelease
inc
mov
cmp
data16
mov
cmp
inc
fsubr
pop
loope
cmp
sbbb
add
mov
scas
mov
roll
cmpsl
pop
icebp
fcoms
je
stc
js
sub
xchg
sub
sub
dec
aaa
into
jg
shrb
mov
lock
jae
and
inc
xchg
sub
sub
sbb
ds
loope
in
int
pop
xchg
push
xorb
sbb
lds
movsb
cmp
daa
mov
mov
fucom
ja
mov
mov
fldl
mov
xor
roll
test
out
pop
xlat
jnp
or
pop
into
xchg
sub
jle
scas
scas
and
int3
add
cmpsl
and
push
enter
je
or
es
insl
sub
sahf
sbb
loopne
insl
int3
arpl
shr
repnz
mov
call
or
pop
cmp
loope
mov
fs
cmp
sbbb
add
mov
scas
mov
roll
cmpsb
pop
icebp
xlat
push
fnsave
js
sub
xchg
sub
sub
mov
rorl
into
jle
shrb
mov
lock
jae
and
push
movsl
lret
sub
sub
sbb
scas
inc
lret
cmp
int
push
nop
push
xorb
sbb
les
daa
mov
mov
fsub
ja
mov
mov
faddl
mov
das
lahf
ss
aad
roll
cmpl
pop
jp
or
pop
int
sub
jl
scas
lods
and
int3
pushl
push
push
out
xchg
jb
or
nop
daa
imull
ret
pushf
sbb
loope
imul
popf
punpckhwd
inc
mov
xchg
xchg
adc
mov
out
sub
cmp
loop
lea
gs
cmp
sbbl
add
mov
lods
mov
aam
mov
repnz
push
fnsave
jns
sub
xchg
jl,pn
sbb
rorb
into
jl
shrl
sahf
push
in
iret
inc
icebp
mov
jae
and
xchg
sub
sub
inc
leave
cmp
loop
ljmp
sarl
push
adc
or
jcxz
mov
mov
fsub
js
mov
mov
fiaddl
mov
sub
cmp
push
cmpl
jb
jp
push
lods
daa
stc
nop
pop
int
sub
jp
scas
stos
and
std
jae
imul
jo
or
ret
nop
daa
cmc
imul
dec
mov
int
fwait
punpckhdq
inc
mov
mov
xchg
mov
out
sub
cmp
jecxz
lea
add
mov
and
fcoml
aad
std
mov
repz
push
fnsave
jp
sub
das
jl
sbb
rorb
into
jp
aam
and
mov
jae
and
xchg
sub
lds
xchg
scas
inc
cmp
jecxz
call
push
sarl
subb
pop
adc
or
loopew
mov
mov
fsub
jns
xchg
mov
add
or
lahf
ss
aam
roll
es
icebp
push
rcr
jb
jns
bts
xchg
sub
test
lret
sti
jb
push
sbb
jmp
imull
or
rcll
fwait
adc
inc
inc
mov
int
cltd
push
imul
mov
mov
xchg
or
cmpsl
ds
sub
cmp
in
mov
gs
xor
add
xchg
and
fistl
aad
cld
mov
repz
fnsave
jp
sub
cwtl
das
jnp
sbb
iret
dec
aaa
into
jns
aam
and
repnz
jae
pop
xchg
adc
jb
lds
xchg
scas
inc
cmp
out
sbb
jmp
insb
loope
pop
adc
cmpsb
cmp
adc
inc
fsubl
loop
or
add
or
lahf
ss
sarl
add
mov
icebp
push
rcr
jb
js
rsm
and
nop
push
lret
xchg
sub
test
mov
push
leave
xor
push
sbb
icebp
mov
insl
jb
lahf
pop
adc
repnz
inc
inc
mov
int
cwtl
or
jmp
jmp
mov
xchg
or
mov
in
sub
cmp
in
mov
gs
xor
sbb
test
cmp
push
ds
sti
mov
repz
fnsave
jp
daa
mov
cwtl
das
jp
sbb
into
inc
aaa
into
js
aam
and
repnz
or
xchg
adc
jno
lds
xchg
scas
inc
lds
dec
jecxz
out
sbb
jmp
imul
pop
adc
cmpsb
cmp
adc
inc
fsubl
loop
or
arpl
mov
add
or
lahf
ss
sarb
add
push
scas
and
icebp
push
rcr
jb
ja
pop
and
nop
push
lret
cld
jbe
scas
cmpsl
sbb
xor
push
sbb
ret
icebp
mov
insb
jb
sahf
push
adc
icebp
push
scas
inc
inc
mov
int
xchg
or
add
mov
mov
xchg
or
mov
in
sub
aaa
scas
inc
fucom
pop
in
mov
gs
xor
sbbl
std
and
aad
cli
mov
repz
je
hlt
jp
mov
cwtl
das
jns
sbb
int
aaa
into
ja
aam
and
repnz
jae
sbb
ds
sub
lds
xchg
scas
inc
les
dec
jecxz
in
fs
mov
mov
fisttps
mov
fisubs
mov
mov
jns
andl
sub
xchg
pop
aad
sbb
jg
mov
sub
roll
jl
push
scas
and
push
iret
jbe
push
and
nop
push
leave
xchg
sub
cmpsb
sbb
dec
dec
xor
push
sbb
ret
hlt
imul
adc
nop
daa
lock
inc
inc
mov
int
xchg
or
cmp
pop
mov
nop
or
mov
jecxz
sub
ss
inc
fstp
push
in
mov
gs
xor
sbbl
cld
and
fmuls
aad
stc
mov
repz
jle
jp
and
inc
cwtl
das
js
sbb
int3
inc
aaa
into
jbe
aam
pop
cwtl
push
in
leave
inc
repnz
jae
sbb
adc
outsl
out
lds
xchg
scas
inc
ret
cmp
in
fs
mov
mov
fimuls
mov
arpl
daa
mov
mov
inc
fsubl
loop
or
add
push
jle
mov
daa
lahf
ss
sarb
add
push
lods
and
push
into
jne
xcrypt-cfb
cmpsl
and
nop
push
enter
je
scas
movsl
sbb
int3
imull
push
sbb
shl
repz
or
nop
daa
out
lds
mov
int
xchg
or
cmp
jmp
call
or
mov
loop
sub
xor
push
in
mov
fs
xor
sbbb
cld
and
xlat
dec
ds
clc
mov
repz
jae
repz
and
inc
cwtl
das
js
sbb
int3
inc
ss
in
aam
pop
xchg
push
jmp
inc
repnz
jb
sbb
daa
outsb
out
lds
nop
scas
inc
ret
jecxz
jecxz
arpl
ss
mov
lahf
mov
fsubl
mov
mov
inc
fistpl
loop
test
outsb
xchg
es
fistpll
xchg
and
nop
sub
and
sbb
scas
adc
leave
dec
les
jnp
stos
push
test
xor
or
mov
jp
xor
pop
and
adc
enter
lret
movsb
rcrb
and
pop
push
pop
call
mov
shl
xor
lock
addr16
mov
push
adc
or
sub
push
rorl
pop
xchg
sub
jmp
inc
or
ret
out
mov
and
fistl
mov
mov
in
aad
dec
jmp
cmp
xchg
and
sub
popa
loop
movsl
pop
adc
cld
mov
lock
mov
inc
xchg
sbb
dec
cmpb
stos
ror
jecxz
mov
fptan
icebp
jmp
cmpsl
sbb
jg
cld
cmp
decl
out
sbb
loop
cltd
lock
jo
shlb
dec
jmp
jle
sbb
ret
test
jl
scas
xchg
cmp
cld
stos
sub
mov
adc
xor
jno
mov
add
push
inc
jbe
push
jae
mov
sbb
loope
cmp
ja
test
pusha
sbb
pop
out
call
xchg
mov
lahf
stos
rolb
movsl
jg
jle
inc
andb
push
xchg
lods
add
push
mov
mov
mov
inc
mov
jp
push
mov
xorl
dec
jne
mov
cmp
sti
mov
mov
lret
adc
jecxz
add
mov
insl
arpl
adc
mov
mov
sbb
sub
fnstcw
rcll
jl
es
xorl
aad
js
xor
lret
xchg
cmp
xchg
into
jns
mov
jns
pop
cltd
icebp
popf
xor
cmpsl
ret
and
xchg
add
push
dec
fisubrs
jb
lcall
mov
mov
or
jbe
vcvtss2si
out
cmp
fcoms
xchg
jae
adc
jns
adc
jne
sahf
xchg
xchg
mov
fwait
push
dec
mov
mov
loop
fsubr
jae
xchg
scas
scas
call
dec
inc
xor
or
hlt
lahf
xor
mov
xchg
and
and
mov
in
stc
mov
sub
mov
xchg
sarb
outsb
insb
sub
out
mov
push
jp
xchg
push
mov
and
xchg
add
je
js
cmp
mov
mov
cmp
pusha
jle
pop
mov
shr
xor
inc
into
sub
mov
pushf
xchg
pop
gs
adc
xchg
in
subl
push
cwtl
out
lret
xchg
lock
fisttps
push
roll
lcall
leave
adc
sbb
leave
push
jle
hlt
sbb
xchg
jno
and
test
ret
jle
jns
mov
inc
and
pop
cmp
nop
js
sbb
push
lods
scas
add
inc
movsb
cmp
xchg
or
inc
adc
cwtl
dec
cmpsb
xchg
lcall
inc
mov
cmpsl
dec
lret
jmp
stc
pop
mov
mov
leave
daa
xor
mov
or
push
ds
mov
cwtl
mov
push
dec
sub
outsl
mov
pop
hlt
aam
outsl
push
jmp
add
xchg
hlt
jns
pushf
xor
cmp
push
sbb
pop
and
loope
addl
and
inc
mov
pushf
call
