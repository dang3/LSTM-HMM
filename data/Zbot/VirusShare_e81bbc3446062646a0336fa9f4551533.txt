decl
xchg
loop
sahf
pop
sub
scas
adc
jno
stos
dec
jle
cs
or
ljmp
mov
jle
lods
stos
xchg
xchg
sbb
clc
inc
push
stos
hlt
pop
loopne
dec
sar
decl
imul
inc
pushf
gs
lock
fisttpll
cmpsb
jo
imull
leave
cmp
pushl
imul
aam
and
dec
fadd
dec
pop
mov
mov
lcall
jmp
pusha
call
scas
or
fstpl
inc
and
lahf
jg
dec
add
xlat
stc
ret
push
jne
decl
dec
add
lret
mov
pop
mov
xchg
incl
xchg
and
test
or
jo
xchg
sub
daa
nop
add
shl
sbb
out
incb
pop
aas
call
and
outsl
inc
push
adc
subl
xor
sbb
incl
push
xor
cmp
cld
push
mov
xor
andb
loop
add
fldt
mov
pushl
movswl
and
pop
jo
in
mov
xchg
cld
push
aas
add
jns
cs
sbb
sub
ljmp
arpl
jge
pop
fsubl
mov
xor
shl
cs
dec
lcall
or
lret
xchg
imul
adcb
push
dec
jp
popf
or
andb
incl
dec
sub
push
popa
mov
pusha
push
adc
gs
xchg
xchg
adc
adc
sbb
sub
fcmovne
mov
add
inc
sti
js
inc
cmpb
repnz
inc
dec
aam
imul
xor
incl
lods
and
push
push
sti
daa
loopne
imul
jno
cld
inc
cmp
lea
call
xchg
out
pop
loop
mov
sti
orb
mov
jmp
cmp
xor
pushl
faddp
lret
push
jo
and
sbb
mov
jmp
xlat
sub
jb
das
inc
pop
mov
mov
xor
jne
test
iret
fdivs
jmp
in
sub
gs
xchg
in
cmp
in
xor
sbb
inc
idivl
stc
jbe
mov
push
jle
movsb
sbb
pop
jno
add
cmp
pop
push
mov
mov
lods
clc
outsl
clc
call
sub
insl
mov
cld
gs
mov
ljmp
popa
jp
push
dec
cs
call
pop
xor
push
outsl
cltd
xlat
xchg
pop
mov
mov
adc
push
ret
aas
jecxz
addb
into
mov
pop
push
sahf
data16
lea
xchg
pushl
adc
pop
test
popf
cmp
jno
fistl
jecxz
clc
repz
pop
cli
push
sbb
pop
cmp
mov
dec
jmp
and
pop
inc
loopne
mov
add
hlt
inc
lds
addr16
sub
ffree
roll
mov
push
mov
aam
adc
push
xchg
pop
dec
dec
test
mov
jecxz
mov
arpl
and
daa
inc
in
cmp
push
push
adc
pop
push
pop
sbb
sub
aaa
push
in
rorl
or
stc
int3
das
sbb
jmp
insl
mov
or
and
lds
test
xchg
pop
dec
test
xor
stos
push
xchg
mov
decl
cltd
ret
pop
dec
dec
inc
dec
sbb
add
mov
cmp
xchg
and
jno
decl
push
inc
jbe
push
arpl
pusha
aas
fsts
aad
and
aaa
mov
push
mov
mov
mov
mov
mov
addr16
push
mov
sbb
in
add
jg
add
cmp
fst
out
stc
ja
xchg
pop
into
repz
movsb
ret
push
pop
cld
adc
icebp
adc
fcoml
pop
mov
jo
xchg
adc
mov
push
add
add
jno
cli
test
dec
scas
bound
imul
std
push
xchg
cs
xchg
arpl
xchg
pop
mov
inc
shll
nop
mov
dec
fucomi
je
push
outsb
movsl
or
std
or
xorl
jns
add
je
xchg
sub
or
ljmp
int
repnz
jecxz
pushf
fidivrs
mov
sbb
flds
or
and
gs
jecxz
aad
movb
jmp
sub
ret
pop
dec
cmp
hlt
dec
aam
ljmp
sbb
sbb
es
mov
lcall
call
insb
push
test
fistpll
sahf
sahf
or
mov
jmp
adc
inc
ljmp
sub
jmp
iret
or
push
jae
jne
cmp
aam
xchg
cmpsl
pop
jl
push
pop
fcoms
pop
pop
sbbl
jae
nop
pop
addr16
jmp
xchg
pop
imul
push
add
loopne
cwtl
push
add
rcrb
cs
and
popa
lods
or
outsl
fldt
pop
adc
mov
decl
mov
xchg
push
push
push
mov
inc
sub
mov
lods
inc
adc
jge
scas
cli
pushl
aam
push
push
or
sub
xchg
inc
cmp
lcall
inc
and
popf
ret
pop
push
add
hlt
fsubr
and
cltd
cmpsl
adc
stos
adc
dec
jp
out
sbb
xchg
mov
add
and
cmc
ret
outsb
repnz
adc
ljmp
test
es
in
cmpsl
xor
add
pop
arpl
adcl
cmp
incl
jecxz
mov
cmpb
cmp
cmc
add
int
pop
shll
add
fdivl
out
and
jmp
hlt
xor
mov
cld
fildll
mul
push
jg
add
mov
jb
mov
iret
pop
out
addr16
cmp
incl
mov
lcall
mov
stos
ljmp
and
and
call
stos
call
in
call
xchg
repz
leave
mov
xor
jno
aas
mov
call
sbb
xchg
dec
aas
int3
cmp
dec
mov
add
pop
ljmp
sbb
inc
push
inc
jmp
xchg
add
in
clc
xlat
dec
cmp
cmp
sti
sbb
xchg
adc
pop
icebp
jmp
mov
testl
std
inc
xor
mov
notl
jmp
movsl
jb
jl
xor
sbb
adc
insl
xor
lods
out
std
jo
fwait
rolb
and
mov
jnp
and
call
popa
inc
inc
shlb
bound
xor
loop
hlt
std
jb
jo
pop
rcrl
pop
sub
push
xchg
out
pop
jne
inc
push
jb
jg
xor
cmp
or
mov
mov
jnp
shl
ljmp
or
jbe
sbb
arpl
pop
mov
inc
hlt
mov
jmp
ljmp
jmp
fisttpl
clc
lds
sub
shrl
cmp
rep
sbb
cld
jmp
leave
mov
dec
mov
stos
shl
sub
push
cmpsb
repz
push
push
pushl
sub
fs
sahf
aad
rclb
xchg
and
clc
mov
aam
inc
daa
int3
ljmp
cmp
inc
fbld
lea
add
lock
inc
xchg
lret
out
inc
clc
scas
dec
ret
pop
push
std
subb
dec
test
inc
xlat
mov
shll
cltd
push
aad
pop
push
repz
and
sarl
xchg
mov
das
push
sub
mov
pop
ficompl
push
lock
jg
push
mov
loope
addr16
dec
movsl
notb
jmp
adc
adc
pushl
lret
xor
movsb
cmpsl
inc
or
ficomps
icebp
aad
xchg
notb
out
decl
in
dec
cltd
cmp
xchg
inc
mov
dec
test
cmp
xorb
ffreep
stos
xchg
cmp
pop
cmpsl
es
or
mov
jmp
push
rol
dec
xchg
xchg
pop
sbb
subl
hlt
stc
out
push
call
decl
lret
idivl
rcrb
cli
push
jg
jns
mov
adc
push
mov
enter
cmp
mov
and
sub
lods
mov
clc
cmpsb
mov
cltd
xchg
mov
cmpsl
lea
pushl
add
xchg
add
mov
sbb
mov
sub
cltd
mov
and
push
mov
pop
jg
jmp
adcb
imulb
pop
sbb
jb
outsb
roll
fidivrl
or
mov
dec
cmc
dec
adc
sbb
adc
jbe
mov
sbb
lds
aam
jmp
icebp
punpckldq
cmp
push
push
in
jo
cmp
xor
jmp
pushl
lods
in
cmp
jge
mov
int3
andb
enter
lcall
pop
movsb
gs
bound
xchg
iret
fcompl
mov
mov
testb
enter
cli
lcall
in
and
clc
cmp
mov
lahf
mov
cld
ret
mov
xor
sarl
xchg
sbb
ljmp
pop
jns
cmp
jns
add
sbb
or
mov
cli
scas
xchg
decl
lcall
push
lds
push
pop
test
xor
mov
jo
or
sub
in
out
and
push
nop
sub
aaa
sarl
jle
mov
ds
sub
push
lock
sub
push
inc
mov
std
sub
jg
call
and
or
inc
jg
or
xor
dec
push
mov
decl
std
frstpm(287
cmp
jecxz
pop
sti
addr16
mov
push
dec
push
push
lcall
pushl
mov
xor
dec
je
push
les
jl
arpl
pop
ljmp
clc
xchg
push
fidivl
fneni(8087
pop
pop
inc
mov
inc
mov
loopne
sbb
ljmp
fs
mov
xor
out
xchg
xchg
jl
les
jmp
insl
notb
in
lret
lcall
addl
xchg
dec
lea
cmp
adc
std
add
cmpsl
fimuls
push
ss
sub
jl
pop
sub
mov
lea
xlat
cs
cld
cmp
dec
cmp
mov
arpl
call
cmp
inc
insl
xor
stc
ret
cs
sub
mov
add
sub
push
pop
cmc
mov
fdiv
rorb
fxch
xor
add
call
jno
xchg
xchg
or
fildll
pusha
sbb
jl
adc
lcall
fnstsw
add
pushf
sub
xchg
add
cmpsb
mov
push
xorb
imul
sub
decl
lock
pop
add
inc
test
imul
jg
incl
fisubs
add
xchg
xchg
mov
dec
loopne
lret
filds
pushl
jge
cmp
push
imul
pop
icebp
sbb
jmp
decl
shll
ja
and
test
inc
sarl
aad
testl
rclb
dec
mov
cmc
ss
and
repz
daa
in
mov
xor
mov
jle
xchg
jmp
lods
push
xor
mov
stc
push
jmp
mov
push
mov
lcall
daa
mov
dec
xor
fdivr
fisubrl
je
cmpsb
inc
out
sahf
push
loope
xor
decl
mov
fiadds
lea
cltd
mov
jns
sbb
lret
test
mov
mov
pusha
fwait
mov
cmc
sbb
lret
rorl
mov
pop
adc
dec
lds
mov
cmp
dec
mov
push
push
loopne
daa
test
mov
ss
cmp
subl
int
mov
fdivl
lea
jo
bound
ljmp
jp
stos
pop
jnp
xchg
pop
imul
ljmp
sbb
loopne
jne
leave
pop
jg
js
cmpsb
pop
aam
push
lahf
dec
jae
pushw
mov
ja
add
lods
adc
xorl
push
pop
neg
lcall
add
addl
in
sarb
inc
stc
lea
xchg
bound
pop
dec
xlat
fsubrs
jmp
and
cs
xor
jmp
push
mov
fisubrs
cli
jg
mov
cmpsb
pop
add
arpl
cmp
mov
stc
mov
pushl
fiaddl
in
stos
rcrb
rorl
mov
push
mov
enter
push
jae
inc
into
cwtl
push
push
dec
dec
jo
stos
ja
sbb
pusha
fsubrs
xor
lcall
lods
push
xor
or
into
loope
sbb
pop
sub
in
imull
or
lock
hlt
pop
pushl
std
jmp
enter
lahf
aad
lahf
js
mov
cmp
shll
data16
call
cld
rcll
inc
test
xchg
mov
add
mov
push
cmp
es
popa
call
mov
scas
idivl
incl
movsl
push
push
cmp
dec
mov
jle
inc
xor
cld
xchg
fcoms
inc
lcall
xchg
filds
es
stos
add
cmc
jmp
push
icebp
decl
dec
mov
mov
lret
mov
sbb
cld
pop
lret
inc
cli
lea
out
inc
pushl
push
sub
sarl
cli
pop
in
popf
mov
push
addr16
cmp
lods
jle
sbb
add
jmp
mov
add
add
shl
test
les
mov
ja
mov
insl
lret
aam
out
les
xor
sbb
imulb
lods
mov
lock
lret
jmp
sbb
sub
jne
jb
es
cmc
out
ds
push
fwait
inc
std
movsb
fdivs
ljmp
mov
mov
lcall
jns
mov
popf
mov
add
sbb
mov
xchg
pop
imul
fucompp
inc
clc
sti
mov
push
hlt
jge
incl
pop
xor
pop
hlt
ficoml
xchg
pop
and
loopne
xor
xchg
outsl
js
add
inc
ljmp
jecxz
imul
aaa
xor
jge
cmc
movsl
fadd
jns
shlb
push
decl
lcall
test
std
or
add
imul
adc
push
mov
out
movsb
fs
and
cmpsb
pop
pop
cmpsb
int3
or
mov
mov
mov
jmp
repz
push
xor
aas
outsl
mov
daa
fistl
mov
iret
incb
mov
lcall
sbb
cwtl
xor
movaps
inc
in
xchg
add
mov
push
out
and
push
bound
xor
and
adc
push
cs
lods
push
xchg
push
or
insl
xorb
hlt
push
enter
fwait
std
stos
xor
out
add
push
mov
decl
cwtl
enter
daa
cmp
flds
in
outsb
sub
incl
lods
dec
repnz
mov
and
jp
jle
push
mov
xlat
or
insl
adc
pushl
sbb
mov
push
jae
adc
cwtl
loope
flds
push
xchg
ljmp
scas
les
pop
std
mov
idiv
add
mov
sub
enter
incl
std
sti
sub
sbb
popf
adc
pusha
repnz
push
stos
cwtl
cmp
movd
aas
das
add
jbe
jne
sbb
jmp
xchg
out
xor
leavew
add
add
fwait
ljmp
clc
ljmp
mov
add
or
mov
stos
jp
fwait
cmp
idivb
push
decl
jbe
xor
xor
xor
rolb
in
add
cld
and
dec
leave
xchg
or
ljmp
cmp
repz
add
jno
ret
pop
insl
pop
shll
xor
xor
push
xchg
sbbl
inc
lea
push
xchg
mov
cmp
cld
jb
sar
popa
xchg
push
push
push
inc
push
adc
sbbl
adc
add
jmp
mov
lea
jl
xor
clc
int
xor
bound
push
fstpl
xchg
inc
pop
stos
jo
mov
aam
sbb
loopne
fwait
aas
loope
dec
pop
in
outsb
scas
fstpt
pinsrw
sub
bound
pop
lods
cmp
clc
incl
push
or
mov
repz
rcrl
cs
push
mov
jns
mov
dec
out
cwtl
mov
out
clc
jmp
add
fidivrs
iret
sbb
int
xchg
ficomps
cli
ds
decl
test
sub
xor
xor
adcl
cltd
ret
loopne
jne
cmpsl
ljmp
jp
sub
mov
int3
shlb
xchg
ja
rolb
incl
add
sub
lds
xor
cmp
pop
iret
and
shlb
mov
mov
iret
cltd
addr16
mov
inc
mov
pop
leave
pextrw
dec
mov
imul
sbb
pop
cld
out
decl
sub
dec
adc
or
repz
jns
les
loop
cmp
push
clc
in
sti
xor
inc
pop
add
lock
fdiv
add
fistpl
ficomps
dec
mov
sub
test
call
xchg
lds
sbb
imul
jle
or
inc
mov
int
dec
or
call
cmpsb
push
daa
pop
pop
test
test
sub
and
movsb
xchg
icebp
shrb
std
je
jle
ljmp
inc
icebp
inc
nop
mov
sub
and
repnz
in
dec
mov
ja
and
jne
pushl
push
xor
inc
les
out
out
repz
sub
sbb
ss
fnstcw
inc
sbb
and
jmp
xchg
aas
stos
fs
and
out
faddl
xchg
mov
into
pop
sub
jmp
inc
ret
jl
repnz
mov
and
nop
and
mov
cwtl
and
jl
dec
cmc
add
out
xchg
out
ss
mov
in
xor
stos
das
push
xchg
ficoms
sbb
mov
call
xchg
push
dec
cli
cmp
cmp
shll
mov
lret
repz
in
jl
mov
mov
out
push
rorb
pop
push
testl
lcall
lock
or
ss
fsubrl
imulb
fidivrs
mov
add
inc
loop
out
js
daa
and
ljmp
loope
das
rclb
mov
and
mov
pop
inc
fcomps
incl
jg
and
cmp
sbb
cwtl
into
lds
adc
mov
sub
push
cmp
scas
clc
iret
test
xchg
test
mov
idiv
hlt
adc
mov
fs
incl
sarl
ja
icebp
movaps
mov
sahf
jnp
aaa
inc
out
data16
in
in
add
in
xchg
mov
mov
lods
movsl
outsb
mov
nop
in
aaa
mov
pusha
ljmp
lea
movsb
lcall
stc
scas
test
ss
cmp
aaa
mov
jmp
scas
clc
lcall
gs
mov
outsl
daa
popf
jmp
cltd
jp
fmul
xor
daa
call
pop
sub
lcall
stos
xchg
add
adcb
rorl
gs
ds
hlt
rcrb
out
push
mov
xor
iret
icebp
cmc
jnp
das
mov
jmp
std
xor
daa
fildl
mov
orb
ret
sbb
int3
lahf
xor
mov
mov
push
add
cmp
pusha
aad
decb
and
ret
mov
incb
imul
push
repnz
cmpsl
shl
rcll
je
push
scas
and
cltd
mov
and
testl
jmp
ret
or
in
stos
das
jl
stc
lret
push
inc
xchg
je
in
enter
dec
arpl
call
jns
xchg
lea
push
popa
adc
imul
divl
mov
pushl
mov
stc
and
mov
cs
test
insl
lea
incl
mov
xchg
xchg
shrb
jp
scas
dec
js
and
push
es
out
imul
testl
and
dec
mov
sbb
incl
xor
adcw
push
fcompp
cmp
mov
pop
sbb
dec
sub
mov
sub
jp
std
fucomip
aaa
lock
mov
mov
push
or
mov
call
clc
sub
mov
aad
adc
adc
dec
std
icebp
mov
dec
inc
sub
mov
jnp
jge
stos
dec
mov
and
inc
mov
cld
ret
lods
sub
mov
inc
imul
jnp
int3
cltd
mov
adc
cmp
mov
jae
dec
xorl
adc
popf
stc
lds
test
je
mov
inc
dec
add
paddusw
mov
addr16
xor
sub
loopne
or
sub
add
inc
sbb
cmp
jne
sbb
pusha
mov
xor
xor
push
push
inc
dec
sbb
dec
push
jno
cld
push
pop
xor
jns
push
add
repnz
popa
adc
testb
ret
adc
cmp
sbbb
mov
xchg
ret
and
negb
xchg
ret
inc
add
add
and
xor
popa
add
mov
int3
cmpsb
mov
sub
pop
ret
repnz
dec
cli
out
push
shrb
iret
dec
lock
cmc
jne
xchg
aaa
adc
lcall
add
ja
in
sub
xor
leave
outsb
jns
or
pop
push
cmpsl
push
push
jmp
and
add
int3
mov
or
mov
mov
rol
out
lds
int
and
cltd
mov
scas
clc
call
jo
hlt
fisubl
push
inc
sarb
mov
xchg
jb
cmp
je
cmp
incl
xchg
mov
jnp
mov
sar
std
hlt
pop
out
add
loop
fwait
pushl
xor
leave
imul
jb
cmpsb
push
pop
xchg
cmc
testb
sbbb
inc
adc
mov
ja
dec
out
push
lret
inc
sub
mov
lds
push
jmp
mov
xchg
movsb
mov
jnp
sbbl
imul
popf
pushf
test
inc
lds
aam
push
inc
insb
cli
xorl
out
test
decl
xchg
add
push
cli
sbb
mov
mov
or
xor
jbe
incl
push
sbb
jle
scas
lret
repnz
xor
rcl
loopne
adc
jbe
sbb
jmp
pop
test
fimuls
add
push
inc
cld
gs
icebp
push
fcomi
nop
xor
pusha
xchg
dec
andb
jne
jmp
mov
insb
push
notb
fnsave
push
cmp
ljmp
mov
inc
mov
cmp
fsubrl
jmp
cmpsb
hlt
adc
mov
cmp
or
sbb
jmp
xchg
pop
sarb
push
fstpt
inc
xorl
jl
or
jne
cs
ljmp
dec
fs
dec
in
rcrl
pop
pushf
loope
dec
addr16
sub
fisubs
fisubs
in
dec
outsl
bound
mov
jl
adc
fsts
call
xchg
adc
mov
mov
or
aaa
roll
push
lsl
ret
xchg
cmp
lcall
cmp
ficompl
xor
add
pop
into
jmp
push
mov
insb
adc
or
int3
es
aaa
inc
adc
mulb
ss
lods
mov
pushf
push
lret
iret
push
fildl
xchg
dec
and
shr
out
rclb
out
out
popa
aam
adc
xor
sti
and
sbb
xlat
xchg
xchg
jle
jp
pop
cltd
jbe
inc
jo
mov
cmpsb
jg
xor
js
mov
lods
cli
es
clc
push
mov
into
std
lahf
sub
pushl
notl
dec
rol
gs
popa
ret
jnp
push
outsl
lret
or
aaa
jb
jp
or
jge
inc
mov
mov
mov
push
jmp
mov
pop
add
mov
pop
std
decl
fidivs
ljmp
loopne
jae
aad
mov
popf
negb
std
jmp
jl
and
pop
cmpsb
test
inc
in
xor
jae
mov
mov
and
cmp
mov
les
in
out
push
or
pop
or
jbe
lret
into
sbb
sti
xor
decl
push
leave
das
call
out
mov
jl
adc
sti
sub
cmp
cmpsl
arpl
sub
add
movsb
mov
adc
fiaddl
or
jl
jnp
incl
dec
lods
and
inc
add
jp
and
adc
mov
xchg
push
jmp
pop
lret
cmp
movsb
loope
pop
lcall
sub
lret
in
push
ss
lods
add
std
mov
ret
or
sbbl
mov
ja,pt
stos
mov
ja
jmp
fisttps
and
cmp
and
dec
fistpll
jle
cmp
incl
ret
mov
inc
push
cmp
jecxz
pop
xchg
fsubrp
mov
test
paddd
jne
call
fisubrs
mov
adc
out
pop
and
jmp
pop
movsb
in
adc
aaa
loope
test
loope
mov
fs
inc
js
jmp
decl
lret
mov
and
dec
clc
push
test
inc
leave
icebp
inc
imul
mov
and
mov
mov
mov
ja
mov
test
lock
sti
cmpsb
fldenv
push
test
jmp
popa
sar
add
push
xchg
sbb
pop
daa
lcall
adc
adc
shlb
int
je
arpl
cwtl
or
or
roll
cmp
sbb
in
lods
inc
or
in
xchg
imul
jns
movsl
lcall
cli
fisttpll
test
imul
dec
les
lret
jne
cmpl
std
push
lock
mov
cmp
xor
dec
xchg
popf
pop
fisubl
js
repz
inc
test
lods
and
jmp
push
inc
pop
mov
inc
movsb
lods
adc
xchg
call
pusha
imul
inc
ret
dec
or
shr
test
adc
push
in
jmp
stos
mov
fidivl
mov
mov
loopne
test
fcomip
js
sub
or
or
test
out
call
mov
loopne
mov
cmp
outsb
int3
imul
add
add
inc
inc
push
and
test
inc
push
add
sub
call
iret
pushf
push
push
imul
adc
nop
repnz
data16
jge
std
pushl
xor
push
push
lret
sub
roll
sub
jmp
sub
and
cmp
scas
pop
decl
jmp
fwait
cwtl
cs
jecxz
iret
xchg
xor
mov
inc
ret
cmp
and
jnp
ss
jns
cs
sbb
inc
rorl
loop
nop
mov
repnz
sub
popf
pop
aas
inc
push
add
pop
in
xchg
pop
xchg
outsl
daa
icebp
rcrb
dec
cmp
xchg
loopne
jge
mov
xchg
stos
out
fadds
pushf
mov
ss
add
scas
or
bound
push
lcall
jmp
push
loop
lea
inc
fstpl
jae
mov
icebp
in
dec
or
jbe
aam
jg
incl
dec
sbb
inc
add
ja
in
sub
js
shrb
xor
adc
jmp
pop
cmp
sar
loope
mov
add
push
pop
mov
push
add
add
add
mov
pusha
mov
jae
call
or
pusha
add
sbb
cmp
mov
sub
pop
jb
shll
push
jb
and
leave
and
fs
cmovle
mov
or
inc
out
cmpsb
js
push
jp
fmull
scas
and
inc
adc
enter
pop
sbb
dec
inc
cmp
xchg
aaa
xor
jae
int3
insl
mov
pop
mulb
pop
sub
mov
cmp
inc
push
xchg
pusha
push
inc
fimuls
rolb
mov
and
inc
mov
ja
aaa
jnp
dec
adc
dec
jmp
enter
inc
std
cmp
or
mov
inc
pop
ficomps
adcb
or
sub
adc
inc
dec
and
and
or
inc
icebp
adc
mov
jne
fidivl
pop
mov
scas
and
cltd
lea
mov
or
push
insb
outsl
jnp
stc
pop
pop
outsl
mov
mov
shrl
push
mov
push
icebp
sbb
lods
popa
xchg
in
xor
fldt
scas
sub
inc
jno
and
mov
and
and
ret
mov
in
inc
out
inc
inc
sti
pop
xor
inc
imul
or
dec
lds
jbe
pop
xor
push
faddl
sub
mov
scas
aad
push
inc
andl
pop
push
pusha
inc
or
rorl
adc
and
and
das
inc
and
mov
push
and
and
or
mov
mov
repz
pop
mov
push
insl
sbb
sub
sub
nop
movsl
inc
cmpsl
add
lret
pop
inc
fst
adcb
fidivl
xor
inc
inc
insl
incl
mov
mov
mov
dec
dec
dec
sub
lcall
data16
mov
xorps
ret
lods
adc
test
mov
nop
sbb
aas
push
ds
jg
lcall
shlb
ja
push
es
in
bound
pop
popaw
sahf
loop
dec
inc
jg
or
popa
cmp
int3
push
repz
pop
jg
inc
cmp
sahf
dec
sub
sahf
shrl
push
jbe
fadd
adc
out
pop
ljmp
in
out
fistpl
data16
pop
sahf
pop
mov
cltd
mov
adc
lcall
test
dec
movsl
movsb
lods
sub
call
cmovb
seto
dec
dec
subb
cwtl
es
daa
or
ret
mov
ljmp
imul
lock
dec
mov
dec
stos
outsb
or
and
inc
dec
out
mov
lods
in
mov
dec
filds
in
xor
jmp
jge
mov
incl
and
cmc
popf
hlt
movsb
outsb
ficomps
lods
insb
jae
xchg
or
ret
xor
jl
dec
mov
push
cmpb
dec
xchg
push
rcll
jne
jns
mov
ljmp
push
mov
loop
sti
xchg
push
rcrl
inc
call
jne
call
sbb
xor
inc
gs
aaa
test
lods
mov
loop
jmp
hlt
push
adc
dec
dec
adc
sbb
cmp
pop
mov
sbb
xchg
shlb
arpl
daa
mov
call
pop
call
xchg
jo
sub
mov
push
jb
xor
jg
incl
xlat
fiadds
sbb
or
in
dec
pop
jb
stc
mov
es
sbb
rcrb
mov
aam
dec
aad
pushf
out
scas
insl
fcmove
mov
gs
shrl
ljmp
xchg
and
ds
or
lds
lock
lret
loopne
call
push
insb
mov
in
inc
adc
xchg
push
xor
mov
sbb
dec
pop
mul
fwait
xchg
mov
decl
mov
pop
inc
sar
imul
jl
aam
pusha
js
sbb
jge
push
pop
lret
jmp
mov
sbb
bound
pop
cwtl
rol
rclb
and
push
or
fidivrl
out
pop
cmp
cs
xchg
cmp
fmuls
sbb
cld
jno,pt
jb
pushf
in
mov
bound
out
pop
test
addb
and
stos
jl
sbb
ss
xor
cmp
sbb
push
jmp
push
cmpl
jl
mov
pop
dec
xchg
or
cli
ljmp
mov
xor
fdivl
push
ja
imul
hlt
and
adc
ljmp
inc
inc
dec
push
push
mov
pop
shl
cmp
leave
inc
inc
cmp
pusha
scas
mov
test
ret
pop
xor
pop
lret
test
clc
mov
xor
dec
insl
push
pop
sub
out
rcll
decl
pop
loope
mov
jo
mov
dec
cmp
stos
testb
lcall
adc
loop
stos
in
fidivl
push
rorl
int
imul
inc
test
jg
pop
pop
sbb
adcb
mov
sar
les
std
cmp
jmp
adc
in
pop
cmp
int3
fsubrp
push
daa
jmp
out
jbe
in
decl
leave
insb
test
popf
cmpsl
inc
shlb
outsl
into
sti
adc
inc
sbb
xchg
fwait
hlt
imul
fcomip
lcall
sbb
xchg
stos
and
dec
ret
aaa
jae
jmp
mov
pushl
ja
mov
fs
sub
int
push
sarl
lcall
cli
test
mov
and
je
cmp
mov
mov
jmp
lret
dec
jb
mov
jecxz
in
aad
popf
xor
adc
mov
xchg
xchg
and
lcall
gs
inc
cmp
loop,pt
inc
adc
jnp
leave
sarl
nop
push
jmp
incl
out
inc
mov
lods
aad
pop
addl
jo
mov
mov
popa
pop
fistpll
push
lahf
lcall
fdivrl
push
pop
mov
call
push
jecxz
mov
popf
out
dec
cltd
xchg
scas
add
out
jge
cmp
xchg
cmpsl
cmp
mov
movsl
mov
sbb
fsts
inc
negb
ret
aad
outsl
push
repz
out
adc
push
lsl
pop
stos
adc
cli
jge
ret
jg
mov
lods
jno
pushf
js
jns
inc
clc
sub
mov
inc
adc
arpl
je
inc
pop
xor
call
dec
dec
push
scas
mov
push
xorb
xlat
dec
lret
inc
and
nop
xchg
pusha
adc
adc
sub
or
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
rclb
mov
adc
xchg
loop
sahf
pop
sub
xor
sbb
pop
xor
stos
dec
jle
cs
or
sub
jle
lods
stos
xchg
call
sbb
inc
push
stos
hlt
pop
loopne
dec
rorl
imul
inc
pushf
gs
pushl
mov
fisttpll
cmpsb
jo
imull
leave
cmp
mov
pop
ds
imul
incl
inc
outsl
enter
rorb
jmp
pop
adc
mov
mov
scas
decl
and
lahf
jg
dec
add
xlat
stc
ret
push
jne
aaa
dec
add
lret
jmp
mov
pop
mov
xchg
add
out
test
or
pushl
jo
xchg
sub
daa
nop
add
shl
sbb
out
incb
pop
aas
adc
and
outsl
inc
push
adc
mov
sub
outsl
cmpb
out
inc
iret
std
sbb
inc
pop
push
xor
cmp
cld
push
mov
lcall
int
andb
loop
add
fldt
mov
mov
or
pushl
in
mov
xchg
cld
push
aas
add
jns
cs
sbb
sub
notb
leave
insb
aam
jge
pop
fsubl
mov
xor
shl
cs
dec
sbb
lret
xchg
imul
call
adc
adcb
push
dec
jp
popf
or
andb
add
aam
popa
mov
pusha
push
adc
call
gs
xchg
xchg
adc
adc
sbb
sub
mov
add
inc
sti
js
inc
cmpb
repnz
inc
dec
aam
imul
xor
lods
and
push
push
sti
daa
loopne
dec
imul
jno
cld
inc
cmp
lea
inc
push
xchg
out
pop
loop
mov
sti
orb
mov
jmp
cmp
xor
faddp
lret
ljmp
push
jo
and
sbb
mov
sbb
xlat
sub
jb
ljmp
inc
pop
mov
mov
xor
jne
test
iret
fdivs
in
repz
sub
gs
xchg
in
cmp
in
xor
sbb
inc
idivl
stc
jbe
lea
push
jle
movsb
sbb
ljmp
jno
add
cmp
pop
push
mov
mov
lods
xchg
scas
sbb
cmp
scas
mov
decl
lock
xchg
cwtl
cld
gs
mov
pop
popa
jp
push
dec
cs
call
pop
xor
push
outsl
cltd
xlat
xchg
pop
mov
mov
adc
push
ret
aas
jecxz
ljmp
into
mov
pop
push
sahf
data16
lea
xchg
sbb
imul
stc
adc
jno
fistl
jecxz
clc
repz
pop
push
sbb
pop
cmp
mov
decl
cld
ja
andb
pop
inc
loopne
mov
add
lds
addr16
sub
decl
mov
push
mov
aam
adc
push
pop
dec
dec
test
mov
sti
fucomip
or
lret
in
cmp
movsb
pop
push
pop
sbb
sub
aaa
ljmp
lock
movsl
in
rorl
or
stc
int3
das
sbb
insl
mov
or
and
decl
sbb
test
xor
stos
push
xchg
mov
pop
dec
dec
inc
dec
sbb
add
lea
lods
mov
cmp
xchg
and
jno
dec
adcb
sub
jbe
push
arpl
jmp
pusha
aas
fsts
aad
and
aaa
mov
push
mov
cmp
mov
mov
mov
mov
cli
pop
cld
dec
addr16
push
mov
sbb
in
add
sbb
xor
shr
mov
ja
xchg
pop
into
repz
movsb
ret
push
mov
pop
icebp
adc
push
std
incl
pop
mov
jo
xchg
adc
filds
push
add
add
fbstp
cli
test
dec
scas
bound
imul
insl
xchg
arpl
xchg
lcall
adc
insl
jmp
xor
mov
fucomi
je
push
outsb
movsl
or
std
or
inc
lods
loope
jb
repz
add
je
xchg
sub
or
insl
add
repnz
jecxz
push
pushf
fidivrs
mov
sbb
flds
or
and
gs
jmp
out
aad
movb
jmp
sub
ret
pop
dec
cmp
hlt
dec
aam
or
arpl
lds
out
mov
lcall
test
jb
adc
inc
sahf
sahf
or
mov
mov
dec
lret
adc
inc
ljmp
sub
iret
or
push
jae
jne
cmp
call
sete
pop
fcoms
pop
pop
sbbl
pop
addr16
ljmp
cmp
int
pop
imul
push
add
add
rcrb
cs
and
call
out
lods
or
outsl
fldt
pop
adc
mov
mov
xchg
push
push
call
xor
arpl
inc
sub
mov
lods
inc
adc
jge
jne
aam
push
push
or
push
decl
test
cmp
fldl
into
popf
ret
incl
push
add
hlt
fsubr
and
cltd
cmpsl
adc
stos
adc
sbb
xchg
mov
pushf
xchg
sbb
lock
xchg
cmc
ret
outsb
repnz
adc
daa
call
iret
mov
jae
in
jmp
lret
pop
arpl
adcl
cmp
bound
jecxz
mov
cmpb
pushl
cmp
cmc
add
int
pop
shll
aaa
out
and
jmp
hlt
xor
fidivrl
jecxz
sbb
xor
loopne
jg
add
mov
pop
cmp
jb
mov
iret
pop
out
addr16
cmp
or
call
sub
addr16
ljmp
and
and
or
call
pusha
xor
repz
leave
mov
xor
jno
aas
mov
aas
xchg
dec
aas
int3
cmp
decl
jae
out
test
cmp
aaa
sub
shrl
dec
dec
inc
jmp
xchg
call
add
in
clc
xlat
dec
cmp
cmp
sti
sbb
xchg
adc
mov
testl
ljmp
cmpsb
std
inc
xor
mov
notl
jecxz
jb
jl
xor
sbb
adc
insl
pushl
jnp
lods
out
std
jo
fwait
rolb
and
mov
jnp
and
popa
inc
inc
shlb
bound
xor
ljmp
cltd
hlt
std
jb
jo
pop
rcrl
pop
sub
push
xchg
out
pop
jne
inc
push
jb
jg
xor
cmp
ljmp
or
mov
mov
jnp
shl
ljmp
or
jbe
sbb
jmp
es
mov
inc
hlt
mov
jmp
ljmp
pop
mov
cmp
clc
lds
jmp
inc
sub
shrl
cmp
rep
sbb
loop
mov
dec
mov
xchg
dec
stos
shl
sub
push
cmpsb
repz
push
push
sub
fs
sahf
aad
sar
call
xchg
and
clc
mov
aam
inc
daa
int3
insl
test
fildl
pusha
or
call
push
out
inc
clc
scas
dec
ret
pop
push
std
subb
clc
inc
xlat
mov
shll
lea
aad
pop
push
repz
and
or
xchg
mov
das
push
sub
mov
outsl
das
js
pop
ficompl
push
lock
mov
loope
addr16
sti
dec
movsl
notb
jmp
adc
adc
mov
mov
jmp
cmpsl
inc
or
ficomps
icebp
aad
xchg
notb
out
in
dec
cltd
cmp
mov
lds
cmp
xorb
xchg
cmp
ljmp
add
pop
cmpsl
es
or
mov
and
mov
ret
dec
xchg
xchg
pop
lcall
subl
hlt
stc
out
push
call
cmp
idivl
rcrb
ljmp
push
jg
jns
mov
adc
push
mov
enter
mov
and
sub
ljmp
clc
cmpsb
mov
cltd
xchg
mov
cmpsl
lea
add
xchg
add
mov
cli
lcall
mov
sub
cltd
mov
and
push
mov
pop
jmp
adcb
imulb
ljmp
xor
pop
sbb
jb
outsb
roll
fidivrl
dec
cmc
dec
adc
sbb
cmpsb
jg
adc
jbe
mov
sbb
lds
repz
push
icebp
ud0
jmp
cmp
push
push
in
jo
cmp
xor
jmp
clc
andb
mov
sbb
or
jge
mov
int3
andb
enter
test
pop
movsb
gs
mov
iret
fcompl
mov
mov
testb
enter
sbb
adc
add
cld
ret
mov
xor
sarl
xchg
sbb
xor
sbb
sarb
add
mov
xchg
in
or
mov
cli
scas
xchg
pop
xchg
push
lds
push
pop
test
sti
jg
xor
mov
jo
or
and
push
nop
ljmp
sarb
adc
sarl
jle
mov
and
cmp
dec
incl
mov
std
sub
xchg
cmp
mov
xchg
and
or
ljmp
cli
inc
jg
or
xor
dec
push
mov
std
frstpm(287
cmp
jecxz
pop
sti
addr16
shlb
ja
push
dec
push
push
jae
mov
xor
dec
je
mov
or
les
jl
arpl
pop
push
cs
fidivl
ljmp
loopne
pop
inc
mov
inc
mov
loopne
sbb
pop
mov
xor
out
xchg
xchg
jl
inc
push
stc
jmp
insl
notb
in
lret
mov
lods
xchg
addl
jmp
lock
cmp
adc
pop
or
stc
pushl
ss
sub
jl
pop
sub
adcb
lcall
cmp
dec
cmp
mov
arpl
shll
inc
push
popl
xor
ljmp
ret
cs
sub
mov
add
sub
push
mov
fdiv
rorb
ljmp
incb
inc
imul
xchg
xchg
or
lcall
fildll
pusha
sbb
jl
adc
fnstsw
add
pushf
sub
xchg
add
mov
mov
push
xorb
imul
sub
fistpl
loopne
jg
pop
add
inc
test
imul
jg
mov
mov
decl
imul
adc
adc
filds
cmp
push
imul
cmpsb
or
lcall
or
aaa
ja
and
test
pushl
testl
rclb
dec
mov
and
repz
daa
in
mov
lret
je
cmpsb
mov
jle
xchg
mov
lods
push
xor
pop
xchg
mov
stc
push
jmp
mov
push
mov
daa
mov
dec
xor
fdivr
pop
icebp
ljmp
je
cmpsb
inc
out
sahf
push
loope
xor
test
pop
mov
fiadds
lea
idiv
lcall
dec
sbb
lret
test
mov
mov
cmc
sbb
pushl
lret
rorl
mov
pop
adc
dec
lds
mov
xor
push
push
loopne
fldenv
test
mov
ss
adcl
out
loope
mov
mov
or
in
push
fdivl
lea
jo
bound
cli
stos
pop
jnp
xchg
pop
imul
cmpsl
iret
enter
inc
pop
ljmp
sbb
leave
pop
jg
js
lcall
cmpsb
pop
aam
push
lahf
dec
jae
pushw
mov
push
or
adc
xorl
or
mov
pop
mov
testb
in
sar
mov
inc
stc
lea
xchg
bound
pop
dec
fsubrs
jmp
and
cs
out
cli
pushl
xor
adc
test
pop
cmp
sub
jecxz
mov
icebp
lock
jmp
aas
inc
nop
arpl
mov
stc
mov
mov
dec
xlat
mov
stos
rcrb
push
rorl
mov
push
mov
enter
jae
inc
into
cwtl
push
push
decl
jo
stos
ja
sbb
pusha
fsubrs
xor
sbb
into
loope
sbb
cmpsb
lcall
cmpsl
in
imull
or
lock
hlt
pop
jmp
enter
call
lahf
js
mov
cmp
shll
rclw
inc
test
lcall
cmpsl
sub
cmp
es
dec
hlt
popa
call
mov
scas
idivl
inc
add
int3
mov
sbb
pushl
or
jle
inc
xor
cld
xchg
fcoms
inc
pushf
adc
xchg
filds
es
ljmp
jo
jmp
push
icebp
or
dec
mov
mov
dec
mov
sbb
cld
pop
lret
inc
cli
lea
out
inc
mov
bound
mov
sub
sarl
cli
pop
ret
jmp
jns
mov
push
addr16
cmp
lods
jle
sbb
add
enter
cld
jg
add
shl
test
les
mov
ja
int3
ret
insl
lret
aam
out
les
call
xor
sbb
imulb
lods
mov
lock
lret
movsl
lcall
xlat
jne
jb
jmp
dec
cmc
out
ds
push
fwait
inc
std
movsb
fdivs
mov
mov
lcall
jg
jns
mov
popf
mov
add
sbb
mov
and
xchg
fcmovu
jmp
push
clc
sti
mov
push
hlt
jge
add
cmp
xor
pop
hlt
ficoml
push
daa
inc
xchg
pop
and
loopne
xor
xchg
outsl
js
add
inc
push
jecxz
imul
aaa
xor
or
lahf
cmc
movsl
fadd
jns
shlb
dec
int
cmpsb
std
fisttps
lock
imul
adc
cmc
mov
out
movsb
fs
and
push
cmpsb
pop
pop
cmpsb
int3
or
mov
mov
mov
repz
push
xor
aas
outsl
mov
mov
mov
iret
incb
mov
sbb
cwtl
xor
decl
sub
inc
in
xchg
add
mov
and
push
bound
pushl
fsubl
jnp
adc
push
cs
lods
lock
push
or
insl
xorb
hlt
push
enter
jmp
dec
fwait
std
stos
xor
out
add
push
mov
sbb
cwtl
enter
daa
cmp
incl
xor
pop
in
outsb
sub
dec
repnz
mov
and
jp
ljmp
rclb
or
xlat
xlat
or
insl
adc
sbb
mov
ficoml
sti
adc
cwtl
loope
flds
push
xchg
lods
jne
adc
ljmp
push
clc
add
mov
sub
enter
std
sti
sub
sbb
lcall
fimuls
adc
pusha
push
stos
cwtl
cmp
sbb
fcmovnu
mov
mov
mov
jbe
jne
sbb
inc
xchg
out
xor
leavew
pushl
std
add
add
fwait
lods
pop
jne
test
gs
or
mov
ficomps
fistps
stos
jp
fwait
cmp
idivb
out
xorb
sbb
fistpll
inc
scas
jb
add
cld
and
dec
leave
xchg
or
sub
repz
add
pushl
stos
jno
ret
pop
insl
pop
shll
xor
xor
fs
inc
decl
jge
xchg
mov
cmp
cld
jb
sar
popa
xchg
push
push
push
inc
lcall
adc
sbbl
adc
add
mov
lea
jl
decl
sbb
clc
int
xor
bound
push
fstpl
xchg
inc
pop
stos
jo
mov
pushl
loopne
fwait
aas
loope
dec
pop
in
outsb
scas
les
inc
sub
bound
jnp
js
pop
lods
cmp
clc
inc
jbe
or
mov
repz
rcrl
cs
call
jns
mov
dec
out
cwtl
mov
add
fidivrs
iret
sbb
int
lcall
or
lret
call
jecxz
cld
outsl
cltd
jnp
sub
out
xor
jg
incl
outsb
imul
and
jp
sub
mov
loopne
jmp
shlb
xchg
ja
rolb
mov
push
lds
xor
jns
pop
iret
and
shlb
mov
out
pop
sub
iret
cltd
addr16
mov
shlb
leave
pextrw
dec
mov
cld
dec
shrb
inc
xchg
mov
sbb
pop
cld
out
sub
dec
adc
or
repz
push
sub
jns
les
loop
cmp
push
clc
in
sti
xor
inc
pop
add
lock
fdiv
add
pushl
fistpl
ficomps
dec
mov
sub
test
pop
xchg
lds
sbb
imul
ljmp
xor
or
inc
mov
int
dec
or
push
cmpsb
push
daa
pop
pop
test
test
sub
ljmp
xchg
icebp
shrb
std
je
jle
inc
icebp
inc
nop
mov
sub
and
lcall
xchg
in
dec
mov
ja
and
jne
mov
xor
inc
les
out
out
repz
ljmp
sub
sbb
ss
fnstcw
inc
sbb
and
xchg
aas
stos
fs
and
out
faddl
lcall
andb
sub
jmp
inc
ret
jl
repnz
mov
and
in
call
sbb
cmp
adc
jo
cmc
add
out
ss
mov
call
cmp
mov
push
xchg
ficoms
sbb
dec
xchg
push
dec
cli
pushl
shll
mov
lret
repz
mov
mov
lcall
out
push
rorb
pop
push
testl
adc
mov
clc
or
ss
fsubrl
jl
fidivrs
mov
add
inc
loop
out
js
daa
and
loope
das
rclb
pushl
mov
and
mov
pop
inc
fcomps
std
mov
jg
and
cmp
sbb
adc
into
lds
adc
mov
sub
push
or
adc
xchg
test
lock
pushl
adc
mov
fs
cltd
and
sarl
ja
ffreep
icebp
movaps
mov
sahf
jnp
aaa
inc
out
data16
in
add
in
xchg
mov
mov
ljmp
lods
movsl
outsb
mov
nop
in
aaa
mov
pusha
ljmp
ret
lcall
dec
sahf
stc
scas
test
ss
cmp
aaa
mov
jmp
lahf
frstor
js
ret
mov
outsl
call
jmp
cltd
jp
fmul
xor
daa
adc
int
add
movsb
ror
shrb
incl
mov
adcb
rorl
gs
ds
hlt
rcrb
out
push
mov
clc
mov
scas
fmul
icebp
cmc
jnp
das
mov
jl
xor
daa
fildl
mov
incl
daa
ret
sbb
int3
lahf
xor
mov
mov
push
add
or
loop
aad
decb
and
ret
mov
std
adc
mov
cmpsl
call
repz
je
push
scas
and
cltd
mov
and
testl
shlb
or
in
stos
das
jl
stc
lret
push
inc
xchg
je
in
enter
dec
arpl
xchg
lea
push
popa
adc
push
imul
divl
mov
pop
push
add
aaa
xchg
call
mov
xlat
dec
fwait
scas
cs
test
insl
lea
push
pop
lea
xchg
pushl
adcb
scas
dec
js
and
cmc
es
out
imul
testl
mov
push
mov
stos
sbb
xor
adcw
push
fcompp
cmp
mov
cmpsb
pushl
sbb
dec
sub
mov
sub
jp
lock
mov
mov
sti
adc
and
dec
dec
dec
mov
sub
mov
cmp
out
mov
mov
dec
out
fdivp
incl
mov
pop
mov
mov
and
inc
mov
gs
mov
lods
sub
sub
pop
dec
pop
inc
imul
add
mov
mov
psadbw
jae
or
jl
pop
sub
sub
lds
jne
mov
je
mov
inc
dec
add
in
mov
adcb
outsb
paddusw
std
xor
negl
adc
inc
ret
jge
and
adc
pop
add
inc
xor
xchg
ja
test
and
mov
pusha
mov
xor
xor
push
push
mov
out
pop
mov
add
mov
sub
jmp
add
pop
or
aas
jmp
popa
frstor
lret
imull
adc
adc
stc
int3
mov
pop
cmpsl
addb
ret
insl
sbb
and
jne
ret
pusha
add
xor
lock
rcr
into
mov
stc
sub
mov
cli
out
push
shlb
leave
cmc
jne
xchg
aaa
addr16
adc
out
add
ja
in
ljmp
xor
leave
outsb
jns
or
pop
push
cmpsl
push
push
jmp
and
add
call
push
xchg
int3
mov
or
sbb
mov
out
lds
int
and
cmp
hlt
add
cltd
mov
jo
hlt
fisubl
push
inc
sarb
mov
incl
arpl
je
cmp
xchg
mov
jnp
mov
sar
std
hlt
pop
lcall
xchg
loop
fwait
loopne
pop
leave
imul
jb
cmpsb
push
pop
xchg
cmc
ljmp
sbbb
inc
adc
or
popa
push
lret
inc
sub
mov
fsub
jecxz
or
insb
js,pn
divl
mov
movsb
pop
lcall
mov
dec
sbb
push
push
inc
lds
aam
push
inc
insb
cli
xorl
jmp
dec
out
test
mov
sahf
mov
cli
sbb
mov
mov
decl
aad
idivl
stos
movsb
jbe
inc
int3
push
sbb
jle
scas
lret
repnz
xor
inc
rcl
loopne
adc
jbe
sbb
pop
test
fimuls
add
push
inc
cld
gs
icebp
push
fcomi
nop
pushl
stc
pusha
xchg
dec
andb
jne
cmp
cmp
mov
insb
push
notb
fnsave
push
cmp
ljmp
mov
je
mov
mov
cmp
fsubrl
jmp
cmpsb
hlt
adc
jmp
cmp
or
sbb
xchg
pop
sarb
push
fstpt
inc
xorl
jl
or
push
push
imul
ljmp
dec
fs
dec
in
rcrl
pop
pushf
loope
dec
jmp
sub
fisubs
fisubs
in
dec
outsl
bound
mov
jl
adc
jge
iret
mov
xor
adc
mov
mov
or
aaa
inc
add
lsl
ret
xchg
xorl
lock
cmp
ficompl
xor
fstpt
add
pop
into
jmp
adc
or
int3
es
aaa
inc
adc
addr16
ljmp
mulb
pop
lods
cld
iret
cmpsl
pushf
push
lret
iret
push
fildl
xchg
dec
and
sar
jmp
int
xchg
sub
out
out
popa
aam
adc
xor
sti
and
sbb
xlat
xchg
xchg
jle
jp
incl
cltd
jbe
inc
jo
mov
cmpsb
xor
js
mov
lods
cli
es
clc
push
decl
ljmp
notl
dec
rol
gs
popa
ret
jnp
push
outsl
lret
or
jmp
aaa
jb
jp
or
jge
shlb
insl
add
add
jnp
mov
ljmp
pop
jbe
add
mov
fidivs
ljmp
loopne
jae
aad
pushl
negl
mov
gs
jl
and
pop
cmpsb
test
inc
in
xor
jae
mov
ljmp
xor
sbb
cmpsb
les
in
out
push
or
pop
or
jbe
mov
into
sbb
sti
xor
sahf
shll
push
leave
das
call
out
mov
jl
adc
sti
sub
cmp
sub
add
movsb
mov
adc
fiaddl
or
cmp
dec
jl
jnp
lods
and
inc
add
jp
and
mov
xor
fsts
cmp
movsb
loope
pop
lcall
sub
lret
aas
ss
push
ss
lods
add
dec
pop
ret
or
sbbl
mov
pop
decl
push
ja,pt
stos
mov
fisttps
and
cmp
and
out
dec
fistpll
jle
cmp
ret
mov
inc
push
cmp
jecxz
pop
xchg
incl
mov
test
adc
pop
jne
call
fisubrs
push
jae
mov
sti
out
pop
and
clc
add
in
adc
aaa
loope
test
loope
mov
decl
mov
sbb
jmp
sbb
mov
and
dec
clc
push
test
ds
leave
icebp
inc
imul
mov
mov
mov
ja
mov
test
ljmp
lock
sti
cmpsb
fldenv
push
test
jmp
popa
sar
add
push
xlat
call
xchg
sbb
pop
daa
adc
adc
shlb
int
je
arpl
cwtl
or
decl
roll
fistpll
sbb
in
lods
inc
or
in
call
cld
call
mov
fisttpll
test
imul
dec
les
lret
mov
jns
rol
push
mov
cmp
xor
dec
xchg
popf
pop
ljmp
mov
sbb
jg
clc
stos
lods
and
jmp
push
inc
pop
mov
inc
jg
jmp
pop
fs
xchg
pusha
imul
inc
ret
dec
or
shr
mov
loopne
mov
cld
mov
in
cmc
mov
je
fmuls
xchg
ja
mov
loopne
test
js
sub
or
or
test
out
js
pop
lahf
mov
mov
je
jae
cmp
outsb
int3
imul
add
push
add
add
xchg
sub
test
call
push
iret
pushf
push
push
imul
adc
nop
push
push
data16
jge
std
jbe
xor
push
push
lret
sub
roll
sub
jmp
sub
and
cmp
scas
pop
dec
mov
cs
jecxz
iret
xchg
xor
mov
inc
ret
cmp
ljmp
jnp
vmwrite
cs
sbb
inc
rorl
loop
nop
mov
repnz
ljmp
popf
pop
aas
lds
jl
in
xchg
pop
xchg
outsl
daa
icebp
rcrb
dec
cmp
ljmp
xchg
loopne
jge
mov
pop
pushf
mov
ss
add
scas
or
bound
jmp
push
lcall
loop
lea
inc
fstpl
jae
mov
icebp
in
in
dec
or
jbe
aam
inc
jb
sbb
inc
add
ja
in
sub
js
jg
shrb
xor
test
sar
loope
mov
add
push
pop
mov
mov
add
mov
mov
adc
xor
data16
pusha
in
add
js
add
push
mov
in
rcr
mov
dec
push
and
mov
js
cmovle
fs
mov
inc
out
cmpsb
pusha
or
push
jp
or
inc
adc
sub
inc
out
int
popa
inc
cmp
out
fdivs
xor
insl
mov
scas
mov
mov
sub
mov
lea
cmp
push
shll
rolb
inc
cmpl
xor
mov
leave
aaa
jnp
sbb
jmp
enter
sub
inc
inc
push
dec
cmp
sub
sub
imul
inc
repnz
adc
inc
jbe
dec
and
mov
and
or
jne
and
sbb
mov
inc
scas
and
nop
cltd
lea
sub
or
outsl
jnp
pop
and
pop
pop
dec
lds
push
sub
mov
popa
shl
xchg
in
or
sub
cmp
fistpl
insl
roll
push
movsl
pop
mov
and
insl
in
mov
inc
out
inc
xor
inc
ret
inc
sti
imul
sub
negl
pop
vmaxpd
push
xorl
mov
mov
mov
in
sub
push
pusha
inc
aad
or
xchg
pop
or
sbb
and
pop
sbb
and
mov
and
mov
push
scas
cmpsb
bound
and
or
mov
insb
jae
shrl
lods
mov
sbb
and
sub
jbe
movsl
inc
stos
lret
cmpsl
inc
pop
inc
adcb
and
mov
arpl
inc
inc
clc
mov
rolb
add
daa
mov
dec
dec
sub
call
and
add
xorps
jg
sbb
test
mov
nop
sbb
js
es
push
ds
lds
lcall
shlb
ja
push
es
in
bound
jg
incl
popaw
sahf
loop
dec
inc
or
popa
cmp
int3
push
repz
pop
jg
inc
cmp
sahf
dec
ljmp
sahf
shrl
hlt
jbe
fadd
adc
out
pop
ljmp
in
out
lcall
data16
pop
sahf
pop
mov
cltd
mov
adc
lcall
test
dec
jmp
push
jo
rcr
fimull
inc
mov
xor
nop
mov
dec
dec
subb
cwtl
jmp
dec
daa
or
ret
mov
insl
mov
sub
fstps
push
dec
mov
dec
stos
outsb
or
and
test
out
mov
lods
in
mov
dec
filds
in
xor
jmp
in
sub
jge
mov
outsl
pop
bound
sub
popf
hlt
movsb
outsb
ficomps
lods
insb
jae
xchg
decl
ret
xor
mov
push
cmpb
dec
xchg
push
sar
call
jne
jns
mov
mov
loop
sti
xchg
push
rcrl
inc
call
mov
es
pop
pop
sbb
xor
inc
gs
aaa
test
lods
mov
loop
jmp
cmp
hlt
push
adc
dec
leave
adc
sbb
cmp
pop
mov
sbb
xchg
shlb
decl
je
adc
mov
rcrb
mov
pop
roll
mov
push
jb
xor
jg
xchg
inc
out
sbb
or
in
dec
pop
jb
stc
mov
es
mov
in
ja
rcrb
sbb
arpl
mov
gs
ljmp
popa
loopne
out
in
xchg
and
ds
or
lds
lock
jle
lret
loopne
push
insb
mov
in
inc
adc
xchg
push
xor
mov
sbb
dec
pop
push
loope
xchg
mov
loopne
movsl
and
sar
imul
jl
aam
pusha
js
incl
pop
lret
addr16
mov
sbb
bound
pop
cwtl
rol
rclb
and
call
or
fidivrl
pop
cmp
cs
xchg
cmp
fmuls
sbb
cld
mov
jno
jb
pushf
in
rclb
out
pop
test
addb
and
cmp
ljmp
ss
xor
clc
push
jmp
push
cmpl
jl
mov
call
pop
dec
xchg
or
cli
sub
mov
xor
fdivl
push
ja
imul
hlt
and
mov
aad
mov
in
or
dec
push
push
mov
pop
shl
cmp
leave
incl
cmp
pusha
scas
mov
xor
pop
lret
test
clc
mov
xor
dec
insl
push
pop
sub
mov
add
push
xchg
lcall
scas
dec
cmp
ljmp
xor
aam
adc
adc
loop
stos
in
fidivl
push
rorl
int
imul
inc
jecxz
and
test
pop
pop
sbb
adcb
mov
sar
inc
cmpsl
sbb
cmp
adc
in
pop
cmp
int3
fsubrp
push
daa
jmp
jmp
rcll
in
lret
test
popf
cmpsl
inc
shlb
outsl
into
sti
adc
inc
sbb
xchg
fcomip
lcall
cmpsl
sub
sbb
notl
loopne
xor
jbe
aaa
jae
das
cli
jmp
mov
cmp
xchg
mov
and
sub
int
lcall
std
push
sarl
cli
test
mov
and
je
cmp
mov
jmp
mov
jb
aas
jecxz
in
aad
popf
xor
adc
mov
xchg
fwait
mov
jg
fucomp
gs
inc
cmp
loop,pt
inc
adc
jnp
leave
sar
jl
xchg
nop
push
jmp
dec
loopne
out
inc
mov
lods
aad
pop
addl
jo
mov
jmp
jmp
and
jle
popa
pop
push
push
lahf
lcall
jg
push
pop
mov
push
jecxz
mov
popf
out
dec
cltd
xchg
scas
add
out
jge
cmp
incl
aaa
mov
mov
movsl
mov
sbb
fsts
inc
idiv
outsl
jg
or
ret
div
mov
out
adc
push
lsl
pop
stos
adc
cli
jge
jg
ret
loop
push
lods
jno
pushf
js
jns
inc
clc
sub
mov
inc
adc
arpl
cld
pushl
pop
xor
dec
push
scas
mov
push
xorb
xlat
dec
lret
inc
and
nop
xchg
adc
adc
nop
aaa
inc
add
or
adc
nop
inc
add
mov
decl
cmp
add
nop
and
cmpsl
add
movsl
loop
ljmp
in
pop
enter
movsb
imul
aam
scas
lods
inc
mov
xchg
das
fninit
fcomps
ljmp
stc
ret
ss
jae
inc
mov
jecxz
mov
out
fistpl
push
pop
aaa
pushf
mov
jmp
xchg
and
fsubrl
pop
adc
icebp
mov
xor
aad
sub
shl
out
or
mov
cwtl
fmull
mov
out
insb
inc
cmp
bound
cmpsb
jne
inc
jg
decl
adc
xor
xchg
outsb
jae
std
dec
rcr
inc
inc
adc
fwait
test
ljmp
sbb
cmpb
mov
test
mov
mov
inc
adc
ljmp
mov
xchg
xlat
mov
sbb
xchg
inc
into
cld
lods
out
idivb
scas
mov
stc
iret
jp
ja
xchg
push
cmp
cmc
or
adc
mov
imul
pushf
push
jge
mov
pop
loopne
repz
adc
push
pushf
pop
sbb
mov
mov
push
pop
sub
inc
jne
sbb
in
repnz
jmp
pop
dec
cwtl
iret
aas
popf
pop
push
aas
xchg
imul
call
lcall
imul
sub
outsb
jecxz
sub
scas
fistps
pushl
ljmp
mov
adc
sub
subl
jno
and
and
dec
mov
imul
sbb
inc
mov
out
or
jmp
cmp
ds
inc
cmpsl
repz
popa
push
dec
sbb
or
jbe
sub
push
add
decl
jecxz
ret
std
mov
int3
push
jno
dec
dec
test
test
outsb
jbe
scas
jns
and
mov
popa
ret
inc
jmp
movsl
jb
test
jle
push
mov
jne
fnstenv
lods
aam
dec
sti
adc
xchg
and
shlb
pop
sub
dec
cmp
mov
ljmp
mov
out
mov
adc
cmpsb
test
mov
cmc
push
jg
xchg
out
stos
popa
jle
inc
sbb
sysret
les
cmpsb
cmp
xchg
sbb
jp
insl
scas
scas
test
jg
ljmp
scas
cmp
lds
bsr
adc
sbb
and
inc
add
push
lods
pop
fdivl
adc
cmpsl
bound
adc
lret
inc
mov
addb
inc
subl
add
and
mov
sub
or
add
or
add
nop
add
mov
and
decl
or
nop
test
inc
inc
addb
sgdtl
add
hlt
sub
in
xchg
or
cld
cld
mov
ss
shrb
xor
xchg
in
cmp
idiv
jns
sahf
jb
push
les
pop
add
lock
sub
xchg
sub
push
jmp
sub
and
test
jns
xchg
jo
rcr
sbb
and
idivl
sbb
icebp
jmp
pop
xchg
add
mov
rcl
dec
ficoms
cmp
mov
adc
jg
cld
movsl
jne
cmpsb
test
sbb
scas
inc
bnd
jns
mov
pop
adc
pushl
jne
les
jne
rolb
adc
mov
movsb
push
in
stc
jns
testl
dec
mov
stos
add
mov
mov
adc
mov
sub
test
inc
inc
cmp
add
fwait
inc
js
repz
pop
cmp
loopne
sti
ss
mov
test
adc
aaa
int
mov
test
push
iret
ja
nop
shl
call
cwtl
or
ret
or
xchg
cmp
cmp
push
shlb
sbb
sub
cld
addb
adc
nop
xchg
or
mov
cmc
jl
out
test
or
mov
gs
fildll
mov
sbb
xchg
and
test
ss
push
mov
repnz
movsb
js
mov
or
icebp
mov
sbb
in
decl
mov
cmp
nop
das
sub
add
cld
push
ret
int
inc
cmpsb
dec
movsl
in
jg
mov
sti
mov
cmpsb
adc
mov
sbb
mov
push
jbe
cld
aaa
fucomip
or
movsl
pusha
imul
mov
imul
jo
pop
dec
mov
add
aas
inc
adc
imul
push
lods
rcrl
jmp
jecxz
pop
xor
loop
fcompl
rcrb
jecxz
out
fdivs
mov
sub
aas
sti
je
inc
rcll
sar
sbbb
rorl
aam
cld
xchg
push
lock
repnz
int3
sub
mov
pop
lods
cld
add
inc
ror
cld
repz
in
mov
sbb
xchg
lret
adc
loopne
gs
cld
addr16
mov
rclb
sub
or
adc
movsl
mov
out
dec
or
sbbb
test
rorb
mov
push
movsb
aas
xor
out
movzbl
adc
js
ret
add
dec
cmpb
les
inc
xchg
lcall
jl
jp,pn
aaa
cmpsb
push
pop
inc
mov
stc
jge
mov
jno
nop
mov
jmp
dec
add
adc
and
stos
adc
mov
xchg
ljmp
cld
sti
jg
mov
mov
in
or
in
ljmp
jmp
mov
pop
lods
pop
movsl
or
sub
mov
jp
arpl
mov
push
add
nopl
jbe
mov
ljmp
fbld
imul
inc
cwtl
dec
out
sbb
fnstcw
ud0
ficompl
fs
pop
mov
stos
fwait
inc
adc
outsl
call
xchg
rclb
enter
vpsubsb
mov
xchg
mov
adc
dec
or
or
mov
fistl
inc
js
ror
ds
or
js
push
lret
cmp
leave
inc
lret
jbe
iret
mov
push
push
lcall
dec
mov
repz
mov
sub
cmp
xchg
data16
push
xchg
mov
xchg
mov
repz
sbb
xchg
ret
inc
inc
jle
into
sarb
fwait
jbe
outsl
jle
mov
jbe
xor
decl
xchg
cmpsl
or
shlb
mov
xchg
pop
fldt
push
mov
cmp
and
mov
fistpll
icebp
push
ret
js
pop
pop
orb
mov
mov
push
fdivrl
int3
xchg
sbb
dec
icebp
push
add
je
mov
push
adc
repz
scas
into
mov
jg
adc
nop
test
adc
loope
sbb
push
cmpsb
adc
lds
xchg
roll
shll
ret
jnp
in
inc
pop
stc
repz
and
js
mov
xorl
mov
scas
cmpsb
subb
scas
xchg
mov
mov
push
fs
mov
mov
jmp
dec
push
pop
mov
outsl
xchg
dec
into
mov
mov
das
push
mov
fsub
adc
lock
rclb
pop
pop
jg
jae
loopne
jle
pusha
roll
xlat
ja
int3
jbe
loopne
jns
roll
flds
jl
or
gs
pusha
roll
cld
mov
cld
push
adc
jbe
repz
fbstp
cmp
repnz
mov
adcb
ja
mov
divb
sbb
pop
cmp
jmp
out
data16
adc
dec
fcomip
roll
jg
outsl
push
add
pushf
pop
inc
sbb
pop
mov
ja
dec
cwtl
jnp
cwtl
outsl
dec
dec
push
pop
and
sti
add
dec
rolb
adc
cmp
pop
push
inc
mov
sub
push
inc
xor
or
sub
inc
push
xchg
mov
sub
add
incl
in
xor
rorb
jb
pop
xlat
pushf
dec
stos
fdivrp
adc
push
nop
xchg
mov
dec
xor
es
stos
std
mov
mov
jle
jle,pt
adc
inc
cs
cmp
in
out
arpl
fnstcw
push
leave
popf
jle
lock
inc
outsb
mov
jne
outsb
cli
outsl
call
ret
push
push
xchg
and
jg
es
scas
popf
mov
xchg
push
cld
pushl
fcompl
dec
das
inc
mov
shll
cmp
clc
sub
add
cmc
decl
push
push
movsb
mov
mov
xor
ds
outsl
lcall
pushf
ja
push
pop
test
xchg
add
push
fisubrl
repnz
movsb
popf
aam
ljmp
test
mov
xchg
jp
jnp
push
inc
inc
fs
jo
insb
pop
push
inc
popa
push
divb
pop
jb
jae
dec
arpl
inc
xor
cs
inc
jno
push
inc
bound
push
fld
jp
mov
jp
dec
inc
inc
push
push
pop
aaa
pushl
xor
cmp
push
xor
jns
insb
pop
popa
inc
dec
addr16
dec
dec
outsl
xor
xor
insl
sbb
add
insb
dec
dec
inc
jno
inc
jns
bound
xor
popa
push
ss
bound
push
push
push
push
dec
idiv
fbld
imul
push
insl
xor
dec
bound
push
das
clc
incl
imul
inc
jp
inc
xor
push
dec
bound
inc
dec
inc
addr16
add
pushl
push
dec
inc
jo
dec
inc
jae
jns
xor
dec
popa
jo
pop
push
xor
fistps
popa
jbe
dec
inc
jns
inc
jne
push
jns
cmp
insl
pop
dec
ss
outsl
xor
mov
jns
xor
jae
push
push
stos
xor
insb
ja
dec
push
xor
push
push
gs
arpl
outsl
das
clc
insl
pop
push
pop
dec
add
xor
je
xor
xor
ljmp
js
inc
outsb
data16
jns
push
push
insl
push
dec
jno
inc
gs
pop
jne
push
dec
jo
data16
outsb
outsb
or
aaa
js
dec
jno
subb
dec
into
push
xor
jno
je
xor
jno
inc
jp
push
push
and
push
jo
imul
pop
pop
mov
cmp
xor
push
jae
xor
imul
dec
insl
pop
fcoml
jp
dec
push
mov
decl
xor
jns
inc
push
jo
insb
test
push
call
dec
xor
push
inc
adc
inc
dec
jae
jo
movsb
mov
insb
add
je
je
or
outsb
adc
popa
xchg
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
insl
adc
sub
psubb
push
dec
leave
xor
push
iret
repz
sub
push
fs
cmp
repz
mov
neg
repz
push
cmpsb
adc
and
sahf
out
push
push
pusha
push
xchg
out
sahf
out
mov
into
loop
repz
out
add
cmp
repz
dec
bound
cmp
repz
stc
cmp
aam
in
add
sahf
push
sub
dec
push
jns
out
pusha
je
xchg
pushf
out
sahf
out
mov
shl
iret
sarl
clc
or
and
cmp
repz
push
cmp
repz
cmpsl
stc
cmp
in
cld
or
sahf
xor
push
data16
sahf
out
jl
xchg
cmpsb
mov
jns
out
rcr
lock
iret
repz
adc
cmp
repz
adcb
repz
ljmp
mov
push
xor
sahf
out
sahf
dec
push
pusha
je
xchg
jns
out
cmpsb
mov
xor
out
cli
add
adc
iret
repz
and
cmp
cmp
repz
jl
xchg
sahf
repz
repz
enter
imul
mov
sub
ds
pop
push
jns
out
mov
sahf
out
out
cli
push
mov
sbb
dec
pusha
je
iret
repz
mov
iret
repz
repnz
out
sahf
out
mov
sahf
out
sahf
pop
insb
js
mov
jns
fsubr
clc
repz
repz
sbb
dec
iret
repz
push
pop
jb
xchg
scas
mov
sahf
cmpsl
stc
add
jns
imull
push
jbe
cmpsb
sarl
rcr
or
cmp
sahf
mov
into
out
push
mov
jns
bound
test
jl
out
fsubr
push
mov
iret
cmp
sbbb
int3
loop
push
mov
jns
push
jo
mov
mov
sbb
repz
xor
xchg
test
iret
repz
aam
add
push
push
iret
repz
xor
xchg
scas
lcall
or
and
out
cmp
sbbb
loopne
adc
iret
repz
sub
jb
mov
mov
sbb
out
xor
je
repz
out
mov
iret
repz
sbb
inc
pop
je
cmp
repz
mov
jns
sbb
jp
sahf
out
xchg
stos
rcr
repz
repz
and
push
iretw
repz
jle
mov
loop
sahf
out
ds
es
push
insb
jns
out
test
dec
repz
sbb
dec
fs
repz
jl
scas
fdivp
repz
mov
ds
insb
iret
repz
sbbb
cmp
ds
lret
push
push
inc
pop
outsb
iret
repz
mov
sahf
out
ds
int3
xor
js
sahf
out
xchg
lods
ret
repz
repz
and
push
insb
iret
repz
xchg
mov
inc
cmpsl
add
filds
lds
and
sbb
jmp
push
sahf
lret
pop
adc
or
sbb
dec
and
mov
sub
jne
shlb
decl
xchg
stos
push
sbb
xchg
or
jle
lds
insl
adc
push
les
inc
lods
adc
mov
push
jp
rcll
xor
icebp
jmp
add
int
leave
inc
push
pusha
nop
int3
enter
orl
pop
loop
xlat
scas
lock
jge
and
ljmp
sub
xchg
je
mov
fstps
and
inc
or
decl
xor
ss
and
push
movsl
outsb
mov
scas
cld
pusha
jae
out
ljmp
cmp
loopne
sbb
mov
jmp
testb
jnp
adc
stc
jmp
jp
repz
aas
pop
cmp
test
aad
xor
mov
sub
mov
shll
data16
fcmovu
sub
pop
push
and
nop
sbb
xor
xor
sub
jmp
mov
sub
pop
out
ret
out
jae
cmp
pop
jg
js
call
push
int3
sti
add
out
je
insb
out
mov
scas
out
fcomi
sub
sub
jmp
cld
in
mov
insl
cmpsb
add
stos
jl
mov
cs
mov
mov
mov
add
pushl
ljmp
add
lcall
dec
sub
xor
mov
lcall
add
dec
inc
int3
xchg
aas
in
sbb
mov
mov
aam
fiaddl
outsb
xor
jmp
sub
mov
and
adc
jmp
xchg
lahf
fnstcw
mov
dec
lret
rorl
decl
push
cmc
rcrb
fdivrs
mov
sbbb
jle
out
or
stos
repnz
call
or
mov
dec
std
dec
sahf
dec
and
mov
and
das
icebp
arpl
lcall
mov
stc
cmpsl
mov
mov
push
or
mov
iret
pop
icebp
pushl
pop
outsb
jp
xor
mov
pushf
sbb
dec
movsl
gs
lcall
bound
adc
inc
pop
test
dec
sbb
lds
mov
aad
pushf
mov
incl
leave
or
and
push
test
ja
mov
in
pop
cmp
ja
rolb
lret
inc
jbe
out
sbb
fdivl
pop
outsl
ja
aas
mov
jmp
push
mov
xchg
insl
xor
add
cwtl
ds
mov
jecxz
fwait
addr16
imul
lods
cs
ljmp
sti
jns
cli
pop
adc
and
sti
xor
lret
fadd
rorb
imul
push
mov
sbb
fildl
out
int3
push
fwait
xchg
adc
jl
cmp
gs
fists
shrb
addr16
mov
stos
das
loope
insl
sbb
inc
cli
push
decl
loop
mov
cmp
push
inc
out
jo
xchg
cmpsl
negl
sbb
xchg
incl
fisttpl
iret
in
sbbl
sbb
or
lods
add
sub
cmp
jmp
in
inc
mov
cli
shll
ljmp
shll
into
aas
stos
or
dec
jmp
aam
cmp
cmp
mov
sub
mov
sahf
cld
dec
sbb
pushl
js
stc
ja
sahf
jno
xchg
and
adc
movsl
and
xchg
xor
xchg
addr16
std
jmp
lahf
adc
leave
jne
sbb
pop
adc
jl
inc
cmc
dec
in
jecxz
pushf
xchg
or
sar
out
arpl
mov
or
stos
das
shrl
mov
add
pop
xor
push
mov
cmc
lods
insl
repnz
sbb
pop
enter
pushf
jge
cmp
movl
add
fsubl
cmp
icebp
mov
cmp
sahf
or
shl
add
mov
sti
sub
subb
data16
dec
fldl2t
or
xchg
ja
fisubl
mov
mov
loope
in
loopne
aas
push
testb
pop
es
mov
js
cmp
push
xchg
push
into
dec
sbb
pushl
jmp
fs
cwtl
out
cmc
push
adc
mov
push
das
mov
call
jo
ss
fsubrl
dec
mov
fdivp
outsb
inc
sbb
dec
xchg
push
push
hlt
inc
lcall
call
test
xchg
push
int
movsb
pop
or
or
cwtl
loopne
mov
mov
loop
cli
inc
cmp
dec
nop
inc
jmp
out
mull
xor
cmp
jnp
add
shll
mov
rorb
pushl
decb
xorb
push
mov
push
popf
xor
mov
or
mov
sbb
jo
dec
inc
cltd
mov
add
mov
ljmp
sbb
dec
cmp
mov
arpl
cmp
cwtl
fcoml
push
sbb
repz
in
paddsb
pop
js
xchg
aaa
imul
mov
mov
cmp
ret
popf
jb
js
push
movsb
scas
cmp
jmp
pushf
xchg
sbb
ret
push
fadds
loopne
mov
repz
icebp
or
jmp
repz
lods
xchg
cltd
cmp
push
mov
test
addb
xchg
mov
jmp
lock
mov
test
test
pop
test
add
push
pop
mov
cmp
push
fsubrl
jns
lret
bound
and
jge
fldcw
and
loopne
fcomip
cmp
jne
jno
in
cltd
sbb
adc
add
inc
cmp
lcall
push
divl
mov
je
gs
ficoml
pushf
iret
das
xor
mov
fisubl
iret
jmp
shlb
lds
mov
jae
sub
sbb
mov
cli
mov
inc
inc
mov
dec
push
gs
push
jo
dec
nop
ljmp
mov
scas
ljmp
loopne
notb
mov
push
sub
ret
ja
or
inc
int
jne
into
mov
sbb
stos
pop
movsb
adc
shlb
cmp
or
xor
lcall
mov
pop
mov
push
imul
movsl
mov
out
cwtl
decl
mov
mov
mov
mov
insl
bound
cmp
iret
mov
sar
lcall
mov
mov
rorb
inc
fisubrs
pop
ds
xchg
pop
push
dec
int3
call
mov
inc
pushf
adc
les
mov
jae
pop
jl
and
mov
add
dec
mov
pop
and
cli
mov
lea
jg
xor
mov
mov
out
sar
decl
push
pop
jnp
lret
nop
fsts
rcrl
push
dec
fisttpl
lcall
lods
sub
cli
jge
aaa
and
fadd
stc
fxch
cmp
xor
sbb
mov
dec
xor
pop
jp
jne
mov
sub
clc
inc
xchg
daa
jno
xchg
mov
fmull
mov
call
pushf
mov
icebp
cs
lret
call
mov
rolb
sbb
push
cltd
mov
pushf
adc
daa
sahf
aam
cmpsl
push
cmp
call
lods
imul
cmc
mov
test
in
inc
andb
fsubl
add
sub
pushl
and
cmp
cmp
loopne
outsb
mov
lock
cmp
add
xchg
aaa
mov
jecxz
push
jecxz
aad
cmp
push
imul
incl
ds
ffree
lods
inc
cmpsb
ljmp
sbb
test
fs
xchg
roll
fs
lods
int
aas
std
out
cwtl
inc
cwtl
ds
iret
xor
cs
int
popf
cli
mov
add
sbb
call
mov
jne
repnz
fwait
mov
fsub
add
addr16
in
mov
fwait
jns
outsl
clc
decl
test
sbb
jae
scas
and
pop
rol
and
jne
add
inc
mov
mov
jmp
lods
xor
js
insb
dec
stos
in
out
jae
jp
call
loopne
push
sbb
hlt
test
dec
jno
clc
xchg
cmpsl
mov
cltd
fdivrp
add
jg
loop
scas
xchg
ss
sub
lods
jnp
sub
and
add
xchg
out
insb
inc
fistl
jno
decl
jmp
inc
sarl
cmc
imulb
repz
aad
test
scas
out
loopne
jmp
inc
in
xor
mov
xor
push
test
jae
sbb
mov
sub
pop
or
out
dec
push
or
jg
mov
push
leave
dec
jnp
mov
pop
lret
add
mov
xchg
xor
jmp
ljmp
mov
movb
ss
add
add
push
ds
xchg
xchg
mov
jns
cmpsl
push
add
cld
shlb
repnz
call
add
push
out
shl
jne
inc
std
add
add
aad
cmp
sbb
mov
push
and
nop
dec
mov
bound
popa
lea
loop
xchg
ja
xor
cwtl
sar
dec
add
adc
mov
jns
fwait
out
mov
lds
int
dec
call
add
aaa
std
incl
mov
jne
sub
mov
call
sub
or
call
push
jno
lahf
or
sub
repnz
leave
xchg
mov
pushl
xchg
add
inc
add
popf
into
mov
fadds
dec
adc
jg
sbb
push
ret
ljmp
adc
lret
les
dec
jecxz
adc
sti
insl
flds
inc
cmpsb
pop
push
rcr
into
pop
push
in
mov
std
jae
sarb
xor
in
cmp
imul
lds
aaa
loope
dec
fs
push
add
sbb
subb
iret
and
cmpsb
les
mov
addb
inc
mov
push
in
scas
mov
fdivs
je
xlat
lock
mov
loope
repnz
stos
mov
jo
inc
jae
lahf
aad
mov
inc
lret
fucomip
popa
pop
push
cmp
jl
scas
mov
out
sbb
lock
cli
adc
and
ljmp
lahf
lret
or
lret
roll
adc
xor
cmc
mov
int3
jnp
mov
jg
movsb
insl
push
aaa
loop
ja
mov
out
pop
sti
mov
ss
or
cli
decl
out
jno
cmpsb
and
mov
mov
and
out
fdiv
nop
jb
int
xor
cmp
or
push
pushl
and
or
dec
sub
jg
cmp
mov
lahf
cmp
mov
add
jnp
inc
je
cmp
inc
push
stos
call
lods
adc
push
std
xor
xchg
aaa
ret
and
cltd
imul
mov
cli
cmpsl
inc
roll
call
or
fnsave
rcrl
addr16
adc
jmp
repz
pop
add
add
jle
dec
push
pop
dec
scas
stos
cmpsb
adc
cmpsl
pop
fcomip
jg
cmp
clc
jae
inc
add
ss
mov
inc
mov
inc
jl
lods
cmc
mov
sub
sub
ljmp
sbb
or
jg
dec
ret
incl
cmp
cmp
addr16
rcrb
mov
ja
mov
test
into
daa
call
dec
leave
adc
icebp
adc
or
mov
repz
scas
loopne
pop
pop
aas
loop
pop
lcall
push
sbb
pop
nop
mov
mov
leave
mov
stos
xchg
push
xchg
adc
mov
jnp
ja
pop
jmp
jge
into
dec
hlt
mov
hlt
fisttpl
push
and
fsubr
lods
sbb
gs
je
movsb
shll
incl
outsl
js
and
insb
fwait
dec
cmp
add
cmp
fstpl
mov
sbb
daa
arpl
jne
in
mov
sub
test
loop
popf
jbe
mov
mov
clc
test
mov
loope
mov
pushl
std
ret
das
dec
hlt
and
push
pop
mov
inc
adc
stc
pop
sti
ljmp
xchg
sti
fimuls
mov
push
xchg
test
cwtl
decl
dec
xlat
or
shrl
sub
sbb
push
mov
cwtl
call
scas
adc
rcr
dec
je
not
hlt
mov
push
addr16
or
jnp
inc
and
mov
aam
cmc
int
jno
out
lret
or
jmp
sub
decl
add
add
mov
dec
xchg
inc
imul
fcmovb
jl
cmpsl
and
shl
or
pushl
shrb
lods
out
pop
inc
or
adc
mov
out
fwait
call
pop
lcall
push
pop
icebp
mov
jge
in
xrelease
mov
lahf
xchg
xchg
outsb
adc
test
aas
xchg
xchg
jmp
ljmp
sbb
jne
hlt
add
test
sbb
divb
cmp
mov
insb
pop
cmp
loopne
jns
sub
mov
push
pop
out
pop
jno
mov
pop
js
outsl
pop
lahf
pop
cmp
mov
scas
pop
jae
or
jmp
jmp
sbb
xchg
mov
dec
lods
mov
lcall
xchg
decl
pop
sub
and
dec
cmp
ljmp
push
scas
cmpsb
fucomi
test
or
idiv
inc
mov
xchg
mov
pop
jmp
popa
and
fmull
xchg
ja
sub
dec
hlt
leave
jb
jbe
jp
shl
test
scas
aad
push
sbb
push
in
nop
mov
cmp
mov
movsb
mov
cli
push
lret
outsb
in
gs
insl
lods
mov
inc
adc
outsl
push
decl
pop
ret
cmp
xchg
mov
pop
mov
fwait
mov
repz
mov
push
jmp
cmp
xchg
icebp
sbb
stc
aad
insb
icebp
mov
adc
or
mov
xchg
out
incl
iret
icebp
adc
or
and
xchg
scas
cltd
mov
loope
or
jmp
fsts
xor
mov
stos
mov
jecxz
or
inc
push
push
sub
mov
lcall
lds
fs
addr16
mov
ret
mov
test
jns
jge
cmp
lcall
push
cmp
std
test
pop
fistpl
cltd
and
lret
ljmp
lret
pop
xchg
adc
or
cmp
test
add
imul
xor
xchg
xchg
mov
push
fidivl
lods
jns
pop
jnp
lcall
xchg
inc
inc
scas
ljmp
xchg
cmp
push
popa
addr16
jg
mov
cmp
dec
adc
outsl
insl
jne
ds
test
enter
cmp
imul
clc
pushl
daa
or
sar
mov
stc
sub
jle
incl
xchg
ret
sbb
sub
and
dec
mov
jne
clc
mov
imul
mov
mov
movsl
lret
push
in
cmc
xchg
data16
movsl
movsl
iret
xor
sahf
decb
decl
lcall
mov
test
add
jo
xchg
data16
shrl
imul
shl
sti
inc
mov
imul
subb
mov
sbbl
insb
test
jmp
sub
mov
jnp
insl
addl
mov
or
jmp
fistl
mov
push
out
mov
aam
mov
push
aad
cld
in
sub
push
xchg
scas
xor
inc
push
movsb
call
xchg
sbb
pop
jp
xchg
jo
or
mov
xorl
mov
adc
lcall
incb
fldenv
xor
shlb
push
pop
or
enter
xor
lcall
mov
mov
push
out
push
xchg
mov
aam
sub
lcall
stos
rcrb
ret
fxch
pop
int
pop
or
xchg
jnp
pop
sti
mov
scas
mov
clc
mov
cwtl
das
push
mov
jo
fwait
mov
pop
jns
inc
out
adc
ljmp
push
shl
cmp
and
in
shlb
rol
lods
rorl
clc
jmp
in
cwtl
outsb
clc
or
sbb
dec
jmp
add
cs
clc
mov
lcall
adc
aam
fildll
xor
jmp
adc
xchg
inc
cmp
add
sar
test
push
flds
or
sub
imul
out
jns
out
call
mov
fsubs
not
inc
rorl
daa
nop
adc
mov
and
cmp
inc
pop
lods
mov
rorl
xchg
mov
outsb
out
dec
idiv
inc
out
repnz
out
outsb
cltd
in
in
ss
jmp
lock
and
xchg
call
dec
insl
sub
xor
stc
push
fistl
sub
pop
mov
lods
pop
push
xor
jnp
call
into
fbstp
or
mov
scas
mov
pushf
xchg
or
lods
addr16
aaa
data16
mov
mov
ja
decl
ja
and
sub
jp
cmp
cmp
push
push
inc
or
call
sbb
cld
fwait
insb
push
mov
push
push
dec
xchg
xchg
and
xchg
add
jnp
bnd
xchg
sub
add
mov
mov
xor
lock
mov
cmp
pushl
jo
insb
mov
aam
ljmp
ds
jmp
shll
jg
inc
rol
push
or
scas
lock
jle
dec
test
lods
nop
outsb
add
jmp
iret
mov
ljmp
xchg
pop
notl
mov
mov
jae
push
fnstsw
out
dec
dec
inc
int
ret
sahf
xchg
pop
mov
call
loope
arpl
sti
js
sbb
or
lcall
out
sti
push
test
shll
jmp
aaa
ficoml
adcb
out
mov
adc
ror
sarl
les
cmc
into
inc
mov
in
std
les
mov
xor
adc
mov
loopne
jno
decl
cmpsl
mov
xor
ret
adc
mov
jp
pop
nop
mov
adc
lcall
lcall
das
mov
xchg
lock
push
sbb
dec
aam
ja
pushl
nop
std
jl
mov
mov
lret
xchg
pop
add
push
or
mov
xlat
pop
fildll
dec
xlat
adc
xchg
call
xor
xchg
mov
int3
movsl
pop
int3
add
incl
fsubp
insl
ljmp
add
xchg
and
jne
push
mov
adc
pushl
or
into
ljmp
fnstenv
rcll
adc
push
sub
int3
aaa
std
out
cwtl
lcall
and
cmpl
dec
or
out
dec
jb
popa
nop
ljmp
pushl
movsl
and
push
outsb
add
mov
add
push
or
or
mov
outsl
scas
xchg
loope
sbb
ljmp
out
faddl
arpl
and
test
ljmp
movsb
pop
mov
xor
mov
fidivrl
dec
daa
enter
dec
outsl
adc
xor
stos
or
ljmp
arpl
scas
add
popf
or
xchg
cmp
lock
add
jmp
sarb
sub
cmpl
inc
stos
ds
inc
jae
push
jne
and
movsl
sub
imul
jmp
adc
push
pop
cli
or
mov
leave
loop
aaa
in
or
lret
add
dec
pushl
xchg
inc
pushw
ljmp
dec
cmpsl
popl
out
xchg
mov
push
popa
loopne
sar
data16
aaa
sbb
mov
mov
adc
lcall
push
ss
push
mov
sti
fcompl
or
adc
adc
mov
mov
outsb
dec
push
sub
les
jg
icebp
sub
adc
dec
sub
sbb
push
push
rcrb
add
mov
inc
aas
mov
out
fisttpl
mov
cmc
inc
dec
sahf
jbe
scas
sub
mov
add
ljmp
xor
push
bnd
sub
clc
sbb
ljmp
or
cltd
sahf
inc
addr16
mov
or
pop
std
cli
stc
jle
fisubrs
outsb
pushf
cmp
rcrb
dec
jecxz
loop
or
pop
hlt
ljmp
mov
mov
std
leave
scas
mov
inc
cmpsl
jmp
mov
or
jns
stos
jb
mov
sub
mov
cli
push
push
fsts
scas
shll
je
scas
clc
fcmovne
ret
clc
loop
and
cmp
mov
scas
lds
and
decl
fwait
insl
lret
sti
into
and
mov
or
or
imul
lret
sar
xchg
pop
sub
jl
jno
lahf
dec
dec
hlt
mov
cltd
imul
pop
and
adc
fldcw
dec
mov
mov
cmovs
fwait
mov
pop
icebp
push
cld
cmp
adc
or
and
inc
jg
mov
sbb
push
ds
sbb
scas
sar
fistpl
call
inc
mov
add
repnz
cmp
jl,pn
sub
cwtl
icebp
jb
in
addr16
adc
and
jmp
inc
and
and
jnp
adc
ds
mov
mov
jno
pop
mov
inc
repz
pop
lret
cmpsb
jns
mov
jmp
mov
notl
xchg
repnz
lods
mov
or
std
or
sub
mov
cmp
ss
sbb
jge
jge
jg
lcall
nop
jl
popf
inc
mov
cmp
xchg
test
data16
andb
push
xchg
mov
push
pushl
cltd
sub
sub
cltd
std
and
dec
in
inc
sti
pop
fldl
xor
sub
aaa
sub
cwtl
mov
cmc
outsb
pop
inc
pop
sbb
push
sub
nop
xchg
mov
mov
xor
mov
pop
ss
pop
lret
ss
pop
out
fsts
mov
xchg
mov
jnp
adc
aas
inc
pushf
aaa
push
and
call
int
insl
daa
add
fbstp
sbb
leave
cmp
adc
out
add
lcall
jbe
jns
sub
sbbl
inc
test
mov
aam
jg
jge
call
call
xchg
sub
sbb
pop
or
mov
lcall
mov
stc
je
xchg
repz
dec
xor
aad
sbb
pop
jp,pt
addr16
inc
xchg
ss
jnp
imul
aas
pop
cmp
bound
jge
inc
push
push
in
int
faddp
inc
lcall
mov
addr16
mov
push
sbb
or
xchg
pusha
push
out
adc
call
imul
xor
stos
mov
test
push
daa
mov
cmp
lods
loopne
call
lahf
imul
and
fstl
lods
iret
test
in
ljmp
mov
cltd
cmp
cli
mov
imul
orl
pop
lcall
inc
pop
mov
cltd
mov
cli
push
cld
lcall
adcl
fmul
xor
mov
cmp
test
das
add
loop
cmpsl
pop
loop
dec
or
push
inc
pushf
cwtl
mov
aam
cltd
repnz
ret
jmp
cs
and
ret
dec
jnp
pop
cmc
sbb
add
xor
fsubl
pushl
cli
into
ss
les
mov
sub
pushf
in
ljmp
xchg
push
inc
push
inc
push
xchg
dec
mov
pop
pop
lret
aas
insb
sbb
and
dec
orl
dec
lcall
xor
adc
and
in
mov
ljmp
gs
sub
clc
mov
clc
outsb
mov
sbb
lods
movswl
je
pop
cmp
xor
dec
imul
cld
in
xchg
dec
and
incl
outsb
sti
xor
divl
sbb
das
mov
lea
pop
mov
ljmp
shlb
jp
nop
imul
fbld
xchg
mov
lcall
cmc
mov
jmp
xchg
in
jae
or
pop
push
idivl
adc
pop
ret
pop
incl
je
adc
push
push
aad
cmp
scas
mov
and
in
pushl
mull
push
imul
jo
addr16
dec
lods
mov
mov
xchg
xchg
inc
xor
push
ret
mov
sbb
xchg
loope
pop
pushaw
lea
mov
xchg
dec
or
mov
sbb
ljmp
sub
mov
xchg
mov
dec
cmp
ljmp
jmp
jp
bound
cltd
push
add
ljmp
cmpsl
pop
adc
add
sbb
lods
clc
ljmp
jg
shlb
push
dec
enter
sbb
lea
fisubs
stc
cmp
jg
push
cld
fstpt
int3
sub
fisubrl
push
push
aad
int3
add
loop
loop
ljmp
ljmp
xchg
lret
in
fwait
das
mov
mov
in
enter
cli
add
stc
mov
jmp
sahf
adc
cmp
cmpb
rcrb
icebp
xchg
cmpsb
imul
call
and
loopne
repz
nop
rcrb
sub
and
xor
scas
sar
pushl
lcall
sbb
sbb
mov
scas
jmp
scas
or
addr16
fbstp
xor
lds
inc
cmpsb
mov
call
insl
maskmovq
mov
cmc
mov
dec
cli
mov
push
or
jno
mov
sahf
mov
lock
adc
inc
fnstenv
push
lcall
mov
xchg
gs
cli
pusha
fdivrs
call
sahf
mov
sub
enter
leave
mov
dec
cmp
hlt
fistpl
jecxz
mov
xchg
mov
ret
jmp
add
jno
jno
ljmp
shl
mov
sbb
shrl
pop
or
jnp
data16
adc
jb
call
pop
ret
pushf
imul
int3
lds
xorl
or
jmp
push
insl
jnp
xor
push
adc
lahf
mov
sbb
jg
cwtl
pop
incl
xchg
cmpl
mov
or
subb
mov
xchg
inc
mov
xor
ljmp
push
clc
xor
out
pop
imul
mov
xor
in
in
mov
pop
decl
push
cmc
cli
jl
movsb
sub
sbb
add
xor
mov
andb
pushl
push
lret
xor
sbb
push
add
outsl
mov
stc
xor
push
jb,pt
stos
push
dec
incl
push
nop
mull
mov
dec
imul
inc
cmc
cmp
int
cmc
mov
or
aam
incl
lea
xor
bound
mov
mov
pop
add
adc
icebp
shrl
data16
pop
sub
in
or
icebp
lods
jo
movl
cmp
incl
cwtl
fimuls
and
iret
out
scas
add
and
iret
jmp
sub
imul
lahf
sub
or
xor
jb
loopne
rolb
sahf
push
out
loopne
cmp
movb
adc
nop
xor
or
jb
loope
cmpsb
dec
add
mov
cmpsb
dec
dec
push
sbb
pop
sbb
roll
jp
xlat
xchg
loopne
aad
pushl
cmp
cmc
mov
add
or
ret
xchg
rorb
ss
incl
push
insl
mov
lahf
mov
fwait
aad
incb
jecxz
push
idivb
add
lcall
cmpsb
loope
sbb
mov
xchg
sbb
and
mov
sti
mov
xor
sub
aam
or
cwtl
sub
inc
adc
mov
lds
jmp
or
outsb
mov
out
mov
xor
loopne
sbb
ljmp
std
sub
dec
jmp
dec
mov
inc
fdivp
jle
pop
push
cs
xor
pushl
xchg
leave
mov
push
sbb
popf
xor
xchg
aas
pop
inc
call
mov
data16
cld
mov
add
adc
pop
add
xchg
sub
inc
ja
lahf
push
popa
rep
or
repnz
mov
std
xchg
jns
push
jl
ret
push
inc
lcall
ret
dec
and
mov
stos
add
mov
sbb
pop
sbb
pushl
icebp
adc
or
out
xor
inc
fdivrl
andl
jl,pn
pusha
xchg
loopne
ljmp
mov
or
lret
and
nop
push
jae
jg
dec
or
pop
stos
mov
sub
loope
jne
addl
pushl
movsb
push
push
test
inc
gs
les
fisubl
loopne
jno
bound
sub
ljmp
sbb
fs
roll
mov
test
sahf
ss
fnsave
add
insl
add
testb
jo
neg
cmp
mov
lods
insl
dec
jle
sub
movsb
fsubl
cld
adc
data16
ljmp
inc
add
xor
out
dec
rolb
mov
jge
imul
xor
inc
je
sub
lock
jne
and
cmc
call
push
adc
adc
jnp
pop
push
dec
sbb
mov
jbe
adcb
sar
mov
push
xchg
mov
jne
push
or
int3
dec
mov
test
sub
outsl
adc
incl
or
xchg
mov
ja
mov
pushf
cs
test
ljmp
mov
jg
sub
rclb
cmp
pop
xchg
daa
iret
jge
xor
push
leave
mov
cmpsl
repz
scas
cmp
stos
inc
pushl
push
inc
mov
mov
jp
stos
mov
push
push
sub
jmp
movsl
or
lret
or
mov
xchg
shl
rorl
test
icebp
movsb
mov
cmp
mov
sahf
inc
add
repz
cld
or
jmp
data16
cmp
dec
fldcw
aad
sub
fs
incl
popa
jnp
cmp
xchg
nop
mov
shl
pop
lcall
scas
scas
jnp
push
lock
xchg
jmp
lods
jmp
sbb
je
mov
sbb
jne
out
fdivr
inc
jmp
add
cmpsb
inc
mov
xchg
ljmp
inc
sbb
enter
das
jg
decl
sbb
fsubs
notl
sbb
or
jmp
cld
mov
imul
lcall
jle
ljmp
pop
dec
les
jp
xorb
add
mov
das
clc
call
jg
jp
xchg
pushf
movsl
jp
or
mov
enter
scas
mov
scas
ljmp
loopne
fldt
xor
arpl
jg
pusha
shll
mov
or
decl
push
lods
cltd
scas
jl
int3
hlt
jo
xchg
arpl
imul
fstpt
sub
cli
mov
and
inc
out
sbb
jns
clc
aaa
mov
mov
push
adc
xlat
xchg
int3
dec
pusha
int3
push
mov
les
mov
xchg
inc
sarb
decl
enter
fidivrl
push
notl
test
outsb
push
sub
sub
dec
xchg
push
repnz
scas
xchg
fucomp
sti
ja
ljmp
test
sbb
push
pop
mov
icebp
mov
pusha
rcrb
push
mov
adc
push
dec
add
mov
fisttps
xchg
xchg
jg
add
push
mov
xchg
inc
movsb
xor
fnstenv
scas
call
pop
divb
test
shr
pop
mov
and
shlb
mov
sub
pushl
ds
dec
mov
aas
xor
adc
mov
push
pop
clc
push
push
xchg
outsb
xchg
push
pop
sar
call
sarl
mov
jge
popw
lret
push
cmp
xor
jg
inc
inc
lock
popa
loope
pop
icebp
pop
js
xchg
jo
xlat
dec
in
hlt
xchg
ljmp
dec
inc
sti
dec
jl
pop
and
roll
icebp
iret
cmc
movsb
insl
or
nop
jl
cmpb
pushl
sbb
sub
test
lds
and
repz
pop
ljmp
cmp
xor
xor
fdivl
mov
cmp
jle
xor
fwait
jne
push
andl
push
test
add
fcomip
cld
popf
std
and
mov
test
rcrl
adc
xchg
call
subl
or
inc
aad
cld
mov
mov
pop
leave
dec
repnz
jg
decl
inc
sar
sub
fstpt
fdiv
mov
call
cmp
mov
imul
sbb
out
rol
int
sub
pushl
jmp
push
pop
xor
mov
cmpsl
push
jmp
lea
test
data16
xorl
repnz
incl
cmp
jg
lahf
pop
cwtl
shrb
dec
mov
add
add
ljmp
mov
test
xor
call
aam
add
bound
cli
or
mov
mov
push
sti
add
dec
clc
in
ljmp
or
repz
or
decl
mov
test
repnz
int
clc
icebp
das
jne
and
jle
fnstenv
incl
xchg
inc
scas
add
std
jo
out
int3
arpl
mov
jbe
push
inc
addr16
xchg
cmpsb
imul
call
loop
pop
aaa
mov
and
imul
add
dec
mov
aad
or
addr16
cmp
add
pusha
and
cmpsl
popf
loop
or
mov
or
dec
sbb
out
jo
cmpsb
xchg
cltd
mov
push
mov
out
xor
sarl
inc
rcr
sub
cwtl
int
cmp
fdivr
cmp
jp
mov
loope
test
in
in
push
sub
clc
test
mull
lcall
xor
jl
cltd
inc
imul
pop
lds
jmp
fsub
jmp
mov
call
gs
in
enter
nop
popa
mov
adc
push
cld
and
lods
push
inc
push
xor
pop
jmp
adc
faddp
aas
jo
xor
fwait
sub
in
ret
push
cmpsb
jne
sbb
popa
incb
ljmp
mov
movl
cwtl
cmpsb
cli
cwtl
pusha
inc
sbb
incl
sub
mov
addr16
cmp
or
repz
call
js
pop
test
movsb
in
outsb
or
in
call
cmp
jg
dec
jbe
mov
jne
jg
scas
sub
pushf
popa
pusha
loop
aad
xchg
xchg
out
cmpsl
out
xor
mov
loopne
inc
mov
fstps
xchg
aas
cmp
adc
lcall
lds
dec
push
lret
pop
movsb
pop
imul
loopne
call
xchg
mov
cmp
repnz
clc
add
mov
lret
ficompl
ss
mov
xchg
and
jb
cld
cmpsb
jp
inc
adc
push
pop
pop
xor
call
inc
stos
sub
ret
mov
imul
jge
les
orb
inc
push
add
jg
jmp
ja
pop
add
adcb
cmp
mov
push
push
dec
push
jg
decl
mov
or
mov
ja
pop
sub
dec
push
sbb
jl
clc
in
call
ret
xor
lods
test
lahf
push
cmpsl
je
rep
push
inc
mov
and
incl
mov
xchg
lret
jbe
push
or
cmp
movsb
lods
sbb
sbb
xchg
lods
cwtl
lret
xchg
dec
cmpsb
fnstenv
cmp
clc
cmp
iret
lret
orl
push
pop
jmp
lock
jmp
mov
adc
mov
loop
lods
mov
jg
push
fadd
sbb
cltd
xlat
sub
in
push
inc
dec
push
call
bound
clc
mov
lock
sbb
aad
dec
and
mov
dec
ljmp
push
mov
cld
lcall
and
mov
pop
cltd
cmpb
push
inc
repz
inc
es
xor
pop
and
inc
mov
psubsw
vrcpps
fmuls
in
in
popf
mov
mov
jmp
adc
xchg
adc
sbb
icebp
push
stc
clc
incl
js
mov
inc
sub
insl
xor
ret
data16
sub
ljmp
xor
pop
xlat
mov
add
sbb
fldl
pop
hlt
jmp
xchg
testb
jns
sahf
cltd
clc
fistl
jl
out
pop
mov
pop
loopne
dec
sbb
inc
xlat
out
and
sahf
push
movsb
and
lcall
mov
sub
sarl
jmp
fmull
fsubr
ret
fmul
mov
jmp
js
mov
popf
mov
sub
popl
fnstenv
inc
pushl
pushl
popa
and
or
test
push
cld
lret
insl
movsl
lods
xor
lcall
or
cmp
xor
add
pop
mov
lea
test
imul
fs
lock
stos
stos
incb
mov
push
cmp
xor
lahf
scas
popa
shrl
jmp
enter
outsl
iret
mov
ja
outsb
lcall
pop
dec
lcall
jg
stc
mov
rorb
rorl
mov
push
call
jg
push
popf
and
idivb
adc
popa
movsl
push
incl
mov
xchg
jo
jmp
jg
sti
fisubrl
jg
lret
push
aaa
aad
shrl
es
mov
push
cmp
and
insl
jbe
or
or
push
mov
movsl
std
addr16
repz
pushl
test
sub
in
inc
jge
xor
lret
sub
repnz
pop
ljmp
pushf
out
mov
div
ret
mov
movsl
aam
or
dec
mulb
sub
push
cmp
andl
fdivl
leave
or
push
and
pop
repz
xor
lret
sbb
jnp
push
clc
hlt
sbb
push
mov
addl
lret
dec
dec
loopne
xor
mov
faddl
push
sbbb
icebp
push
call
adc
xchg
adc
aad
jp
imul
xor
fisttps
jmp
mov
repz
mov
sbb
cli
mov
push
decl
call
push
cwtl
xor
pop
gs
aas
loopne
xchg
in
adc
clc
repnz
dec
in
dec
sbb
mov
push
cmpsl
xor
movsb
mov
insl
decl
or
xchg
mov
sub
arpl
out
or
or
push
out
faddp
ljmp
mov
mov
push
jecxz
and
das
xchg
negl
std
jecxz
jge
lea
out
imul
shl
pushl
jle
fstl
fidivs
jge
rclb
ljmp
outsl
gs
add
loopne
stos
jne
clc
lahf
fwait
adc
mov
xor
push
push
cmpl
cld
call
fdivl
push
into
outsl
bound
mov
adcb
scas
loope
mov
jmp
in
les
inc
outsb
adc
mov
dec
mov
test
pop
out
incl
cwtl
ljmp
mov
out
incl
dec
gs
jae
dec
mov
decl
lods
and
filds
in
mov
loope
roll
pop
ss
jg
pushl
ret
sbb
and
and
cmp
cmc
dec
dec
lods
mov
dec
mov
lods
cmp
pushl
insb
and
dec
inc
xchg
xor
addr16
jp
xchg
mov
jg
mov
imul
push
lcall
into
xor
lea
stos
out
mov
test
mov
and
call
xor
inc
mov
inc
mov
fildll
or
lret
dec
aaa
and
cwtl
mov
scas
aas
dec
jecxz
pop
call
jl
pop
mov
sahf
out
pop
mov
ljmp
sub
xor
ss
mov
fcos
jmp
cmp
sbb
sbb
movsb
std
push
lret
pop
out
mov
pushf
nop
mov
and
mov
cmp
fistl
cmp
jo
dec
sub
es
incl
push
cltd
fisubs
inc
push
mov
mov
cmp
mov
cmpsl
in
outsb
fimull
ret
push
mov
movsl
and
mov
rcl
push
lcall
pop
repnz
pop
inc
xor
out
sbb
repnz
mov
pop
jmp
call
and
fisubrs
jle
push
data16
push
cltd
leave
fistl
sbb
push
jecxz
dec
mov
sub
ss
pop
imul
push
mov
jns
mov
jbe
decl
jns
mov
jns
mov
or
inc
ss
pop
push
subl
xchg
inc
test
cmpsb
gs
lcall
jge
jge
out
adc
imull
mov
sbb
mov
in
test
pop
pop
ja
sbb
adc
jbe
std
ja
push
xchg
clc
ljmp
mov
mov
mov
popf
mov
das
jecxz
sbbb
dec
and
add
addps
dec
xor
mov
sub
in
xchg
mov
ret
out
mov
sbb
push
push
int
ret
xlat
mov
cmp
ret
add
inc
xchg
int
mov
imull
addb
adc
inc
in
inc
insb
xchg
popa
mov
mov
sub
inc
outsb
xchg
sub
push
movsl
clc
inc
mov
call
sub
mov
incb
mov
pop
adc
or
add
mov
or
int
icebp
shlb
add
imul
ja
xchg
adc
dec
inc
sti
ljmp
inc
nop
incb
leave
movsb
test
push
jl
inc
aaa
mov
xchg
lret
lods
repz
jmp
jo
adc
mov
hlt
enter
and
sub
dec
push
add
fwait
ljmp
sbb
jg
inc
mov
mov
lret
sub
test
and
cltd
inc
jns
testb
mov
push
jno
add
sti
mov
pop
push
std
call
sbb
xchg
jae
popf
pop
jp
out
aas
iret
jmp
daa
call
or
in
popf
dec
outsl
mov
push
mov
into
jne
pop
loope
ljmp
inc
call
rorb
mov
jnp
into
add
push
inc
mov
loopne
jnp
mov
mov
stos
dec
incl
add
or
out
xchg
loopne
sub
jne
scas
leave
lcall
pop
mov
pop
sub
pop
cmp
aas
push
clc
mov
jb
cli
push
inc
arpl
pushl
jae
stos
lds
cmp
xchg
loopne
sub
loope
clc
pusha
jge
std
or
aaa
push
sbb
mov
aam
cli
pop
leave
sub
je
adc
icebp
lret
cwtl
ds
fidivl
incl
inc
inc
pop
mov
ds
lea
mov
fcmovnbe
popf
jne
pop
hlt
mov
daa
push
jmp
mov
xchg
adc
movsl
sbb
mov
aaa
pop
fsubs
pop
and
movsl
adc
decl
xor
inc
int3
dec
rcl
dec
pushf
adc
lods
pop
xchg
adc
incl
xorb
out
add
jg
mov
adc
rorl
jecxz
mov
out
addr16
in
ret
movsl
xchg
jae
cld
inc
push
and
test
mov
xor
pop
mov
lods
nop
stos
insb
pop
mov
cmp
inc
sub
cmpsl
popa
mov
xchg
mov
dec
movsb
add
xor
bound
mov
cmp
jmp
ljmp
sbb
sbbl
rol
mov
imul
into
fprem
cmp
mov
xor
out
rcr
jl
pop
pop
rorb
push
movsb
hlt
ljmp
clc
jecxz
push
loopne
lcall
inc
sahf
int3
mov
pop
pop
outsl
push
lcall
pop
mov
mov
cmpsl
scas
cmp
fisttpl
ss
cmpsb
adc
adc
cmp
shr
sub
or
fstpt
adc
scas
leave
popa
xchg
add
push
inc
loopne
in
imul
sbb
bound
mov
shlb
hlt
ja
aad
and
adc
test
or
pop
dec
int3
mov
jmp
sub
loop
ret
dec
rcrl
push
sub
clc
xor
or
mov
std
inc
lods
cltd
daa
mov
dec
xchg
sbb
xor
adc
ja
add
mov
add
and
stos
into
and
xor
pop
mov
mov
ljmp
push
dec
adc
or
stos
pop
add
jmp
add
scas
jb
incl
fstl
int3
mov
dec
gs
mov
jb
lret
mov
sahf
loop
arpl
mov
call
int3
shrl
cmp
sub
mov
or
mov
push
mov
xor
mov
fcomip
ljmp
mov
pop
cmp
jecxz
in
sbb
xor
sub
mov
pusha
and
mov
mov
mov
cmc
out
sbb
pop
sbb
cmp
out
das
call
data16
or
dec
push
adc
xlat
push
aam
mov
inc
pop
cmp
test
mov
movsl
dec
xchg
loopne
dec
mov
in
shlb
or
mov
jae
adc
mov
lahf
mov
movb
or
lcall
repz
sbb
dec
xchg
aas
imul
xor
mov
add
sbb
pusha
mov
add
incl
mov
mov
inc
pop
repnz
nop
push
outsl
lock
add
mov
mov
call
xchg
in
ret
inc
pop
xchg
jbe
add
mov
shll
scas
sbb
dec
dec
cmc
mov
sti
jbe
in
mov
lods
cmpsb
jbe
sub
xor
jmp
fs
packssdw
push
and
xor
and
outsl
pushf
les
jg
adc
lock
inc
and
mov
and
fwait
adc
imul
das
jmp
xor
mov
in
ds
adc
dec
mov
mov
leave
daa
inc
test
shlb
cmpsl
insl
push
incb
sbb
sbb
pop
out
jae
lcall
test
pop
jg
push
imul
xor
or
insb
sub
mov
mov
dec
movsl
adc
test
pop
mov
sbb
xchg
notb
in
stc
xor
pop
cmpl
cli
cld
daa
mov
mov
loop
ds
mov
xchg
mov
enter
pop
push
pop
lcall
mov
stos
and
imul
xchg
inc
clc
icebp
mov
cmp
ss
leave
loopne
fldenv
cmpsb
adc
icebp
sarl
xlat
aas
lahf
cmpsl
mov
xchg
hlt
pop
mov
decl
push
push
cld
cmpsl
push
mov
mov
mov
daa
cmpsb
xor
inc
insb
push
jb
adc
cmp
inc
out
stc
movsb
lret
call
push
imul
mov
push
cmp
decl
jge
mov
and
cmp
sbb
lea
movsb
sbb
inc
dec
adc
sub
out
sub
ljmp
pushf
test
test
cltd
mov
decl
xchg
jp
sti
mov
mov
dec
mov
loop
jnp
mov
sub
sar
jg
call
push
in
or
push
sub
jno
sbbb
mov
inc
pushf
cmp
mov
out
shll
pushf
jge
outsl
mov
std
outsl
push
inc
inc
mov
push
push
clc
cld
ljmp
ljmp
or
lret
dec
lea
cwtl
pop
repz
subb
xor
pushl
mov
sub
lret
add
mulb
xchg
inc
sub
xor
sbb
call
sbb
test
jp
insl
les
xor
or
xchg
std
jg
cmp
jg
incl
inc
inc
xlat
mov
jno
test
jo
arpl
sbb
mov
jl
ficomps
xchg
test
xlat
ljmp
jbe
cs
hlt
jmp
int3
mov
mov
push
jmp
dec
popa
hlt
mov
scas
insb
mov
sbb
xor
test
stos
mov
cmp
lcall
sbb
out
lret
xor
addr16
adc
xchg
lds
orl
call
popa
test
push
sub
arpl
arpl
das
adc
incl
pop
lcall
in
inc
or
lret
jns
push
mov
fdivrl
lods
fisubrs
repz
std
decl
pop
fisttps
jb
lock
imul
loope
out
jmp
pop
mov
sub
les
jne
ja
fidivrs
decl
jne
bsr
push
pop
dec
lods
dec
test
test
mov
xchg
inc
inc
pop
imul
cmp
ljmp
mov
js
pushf
into
dec
std
fs
notb
lods
repz
orb
add
sbb
pop
fsubrl
pop
in
cmc
cltd
cmp
or
jge
cmpsl
out
call
je
lods
adc
sbb
xchg
dec
cmp
mov
int
fs
sbb
cmp
pushl
xchg
xchg
addl
pop
subps
bnd
daa
cmpsl
xor
insl
scas
mov
jns
mov
out
lods
xor
dec
daa
sbb
mov
sbb
test
mov
cld
and
mov
xor
outsl
adcb
movsl
mov
mov
sbb
test
fwait
sub
mov
add
sahf
mov
fisubrs
xorb
pop
adc
sbb
add
adc
or
dec
pop
or
jmp
and
lret
jp,pt
aad
mov
out
sub
fistps
mov
xlat
sbb
repz
decl
adc
das
jbe
jne
or
mov
or
xchg
cmp
or
aas
js
push
andb
mov
clc
decb
fsts
push
push
scas
push
adc
mov
jle
push
dec
loop
addl
lahf
mov
sbbl
fldt
test
sar
push
aam
sub
dec
sbb
push
pop
test
inc
jecxz
lods
nop
lds
lds
pop
sub
pushl
mov
int
int
and
bound
stos
xchg
push
sub
fsubl
pushl
jmp
mov
add
inc
adc
add
lret
dec
sar
incl
cltd
jns
push
push
shlb
jp
lds
inc
mov
sub
std
ljmp
test
jp
aam
aam
jo
jg
es
test
insl
xor
stos
xor
pushl
mov
test
mov
mov
imul
xor
mov
jg
inc
xor
andb
push
cmpsl
jae
faddl
mov
int3
sbb
jmp
mov
es
push
mov
and
inc
out
imul
push
jmp
in
mov
ljmp
leave
pop
lea
pop
imul
jg
jle
int3
clc
ss
sub
into
jp
mov
jle
outsl
sbb
cmp
inc
mov
loopne
xor
loope
clc
sub
jg
nop
xchg
push
test
push
pop
fstpl
repnz
or
pop
les
pusha
jecxz
repnz
jmp
cmp
les
adc
out
or
mov
inc
int
sub
clc
jmp
lahf
test
jg
gs
mulb
pop
push
lods
mov
cmp
mov
imulb
call
adc
shrb
dec
add
pop
pop
pushf
push
mov
decl
and
inc
inc
xchg
inc
cmp
adc
inc
adc
popf
fdiv
adc
sbb
dec
add
addr16
xchg
dec
sti
adc
cmp
mov
lret
xchg
addr16
xchg
scas
sarl
jmp
insl
rcrl
rcrl
mov
sbb
insb
push
xor
daa
xor
cmp
sub
decl
xchg
into
test
sbb
imulb
imul
adc
imul
popf
push
in
aad
cmp
decl
sub
jo
xchg
and
inc
push
enter
add
jmp
shrb
jmp
inc
sbb
es
inc
dec
lret
andl
stos
in
repz
insb
pop
add
pop
pushl
sahf
test
inc
pop
out
idivl
push
cmp
mov
sub
pushf
sbb
test
ljmp
adc
pop
outsl
ss
fstp
scas
add
iret
bound
pushl
lds
xor
jno
out
adc
cmp
jno
adc
data16
adc
xchg
pusha
push
loop
pop
mov
mov
mov
cmpsl
add
sbb
dec
incl
adc
inc
mov
jg
jb
out
sbb
popl
fstps
jmp
movsl
xchg
lret
in
das
lock
mov
test
int3
cmp
sarl
pop
ret
jns
daa
lahf
and
add
ljmp
test
testl
push
clc
xchg
pop
adc
clc
pop
aas
rcrl
cwtl
push
sar
lcall
mov
mov
cltd
dec
fsubl
fld
mov
rcrl
in
subb
jmp
dec
roll
lcall
push
xchg
xchg
dec
xchg
inc
mov
testl
ljmp
outsb
lock
iret
aas
push
xlat
dec
adc
lods
rolb
cmp
sub
mov
jmp
or
roll
stos
add
gs
test
push
push
mov
inc
shll
jp
dec
and
insl
add
mov
sbb
xlat
call
imul
sahf
lds
mov
decl
adc
sbbb
bound
cmp
mov
std
xchg
lahf
adc
les
js
loope
xchg
fs
cmp
mov
fs
pushl
add
cld
pop
out
cmp
cmp
hlt
lcall
movsb
ljmp
mov
inc
nop
das
shlb
dec
pop
cli
add
adc
loop
jne
enter
dec
call
test
es
orb
or
aas
arpl
xchg
lds
fcomip
sub
adc
es
mov
jge
loop
inc
cmp
cmp
sar
xor
stos
jl
pop
push
pop
lcall
jno
std
ljmp
xchg
jo
mov
ss
and
mov
and
decl
pop
inc
pop
sub
test
pop
xor
cld
mov
mov
adc
mov
clc
jl
pop
or
push
es
pop
jnp
xorl
aaa
pop
jo,pn
in
or
lcall
fadds
xchg
pop
movsb
adcl
or
or
jae
outsl
pop
mov
add
mov
inc
sbb
sbb
sahf
add
cmp
rol
outsb
add
imull
jbe
gs
decb
jae
jbe
aam
popf
sbb
jp
es
decl
or
pop
aaa
jns
mov
fcoms
add
lock
jg
fimull
sti
movsl
movsb
in
shlb
xor
cmp
ljmp
sub
adc
or
inc
sbb
fnstenv
xor
xor
hlt
repnz
mov
jge
hlt
jno
lods
sub
ss
sub
add
aam
and
cltd
dec
stc
shll
setb
pushl
shrl
push
roll
hlt
les
inc
inc
jg
in
scas
shl
push
mov
pop
loopne
xchg
add
sub
shll
dec
mov
mov
fldcw
and
adc
mov
stc
add
test
mov
js
inc
das
xorb
mov
std
xor
cli
inc
jecxz
adc
mov
rcrl
dec
ss
into
jmp
gs
mov
jg
jbe
cmp
mov
lcall
push
pushw
iret
mov
sbb
or
incl
mov
lock
leave
es
sub
dec
xor
xchg
lds
incb
sbb
fistpll
xor
lods
cmp
mov
ret
mov
stos
fnstcw
jle
int
outsl
push
call
pushf
ja
out
je
sarl
pop
inc
sub
sub
ficomps
mov
xor
mov
ja
ds
sub
fmul
sub
sub
lret
gs
mov
outsl
clc
inc
xchg
xchg
adc
cld
and
jmp
mov
ficoms
and
mov
repz
popa
jns
push
pop
inc
cwtl
jno
jmp
pop
ret
test
push
nop
cs
call
push
push
outsl
xchg
jns
cli
mov
add
jge
movsb
push
xchg
outsl
push
lock
jnp
scas
pushl
std
call
pusha
cmpsl
shrb
rolb
xor
insb
call
cld
sub
shrb
jno
jg
mov
add
fbld
inc
add
mov
movsb
cmp
dec
out
cmp
xchg
fwait
out
adc
and
dec
fiaddl
sbb
add
or
aam
jae
cmpsl
push
fsubl
ljmp
push
lds
dec
and
fstps
pop
repz
aad
xor
fimull
mov
popf
xchg
push
imul
mov
leave
outsl
sub
aas
vmread
in
in
cmpsb
jg
imul
out
sbb
nop
pop
fnstenv
fscale
dec
in
test
sub
incl
adc
cli
push
pop
insb
jns
js
xchg
pop
sub
pop
inc
adc
push
and
xlat
mov
and
loope
add
xlat
pop
lock
fcoms
adc
mov
lods
mov
dec
xchg
push
and
push
mov
enter
jg
inc
lea
loop
sub
xor
dec
imul
test
or
int
call
jg
push
jmp
xor
lods
xchg
les
jmp
imul
sub
pop
cmp
jnp
mov
inc
mov
iret
jmp
mov
sti
add
decl
test
xchg
pop
mov
jmp
addl
sub
decl
rcll
fistpl
sbb
sbbb
into
enter
cmp
jmp
jmp
push
push
push
ficompl
test
roll
insl
push
pusha
xorb
pushf
and
popf
incl
dec
rclb
add
push
and
lods
pop
dec
jo
push
shrb
stos
idivb
pop
loope
insb
cmp
call
jnp
mov
sahf
in
xchg
sbb
ret
mov
insb
pop
in
sar
incl
pusha
test
jmp
and
stos
add
jg
mov
lcall
and
into
cmp
mov
out
neg
mov
xchg
fucomip
sbb
int3
test
adc
push
loopne
cltd
call
sti
filds
js
leave
cmp
xor
inc
stos
and
sbb
jg
jo
decl
sbb
cmpb
push
mov
cwtl
sbb
mov
cltd
inc
inc
or
imul
xchg
sahf
push
lock
push
push
das
cs
rcrl
call
bound
inc
add
lret
incl
in
push
cmc
sbb
xor
orb
push
jg
stc
push
fwait
and
flds
ljmp
insl
stos
insl
call
xchg
daa
pop
pushl
popa
iret
popa
loope
cmp
sbb
xor
lods
add
push
cltd
ljmp
clc
ljmp
ja
push
shr
xchg
adc
popf
adc
push
jnp
mov
lcall
mov
xchg
push
outsl
xchg
test
test
xchg
inc
xor
jg
call
fwait
xchg
fucomi
xchg
push
sbb
pop
sub
sub
cmc
aad
decl
inc
mov
rcr
andl
sub
dec
mov
inc
xchg
jg
arpl
xchg
jbe
fs
pushf
dec
mov
sti
dec
movnti
lods
movsl
push
and
mov
decl
mov
xchg
jnp
xor
push
std
adc
lret
sub
mov
pop
sbbb
popf
sbb
lods
into
out
lahf
ljmp
addl
shl
mov
loope
addr16
or
push
push
pop
mov
mov
jns
hlt
or
lds
xor
push
inc
arpl
jmp
stos
shrl
iret
repnz
clc
and
cmp
push
sub
xchg
cmp
mov
stc
adc
cmp
lods
jo
push
pusha
pusha
scas
pop
mov
fisubrs
mov
push
push
or
sti
pop
sub
or
dec
inc
jecxz
call
loopne
mov
push
call
es
lret
out
rolb
arpl
mov
cld
cmpsb
or
in
or
nop
or
lret
dec
pop
das
ljmp
jg
rcl
fildll
in
adc
mov
cmp
mov
sar
incl
cmpsb
imul
mov
in
aaa
and
ret
pop
repz
cli
decl
add
hlt
enter
add
xchg
xchg
js
push
adc
jecxz
scas
inc
lock
jg
mov
into
jmp
int
cld
lock
aad
pop
lahf
mov
in
mov
je
ds
adc
decl
lock
ret
push
mov
push
jnp
cltd
lea
fwait
push
mov
or
ds
cltd
mov
mov
subb
cmp
fstp
cs
repz
jg
decl
inc
mov
mov
aam
sbb
and
int3
inc
shlb
dec
ljmp
fwait
or
in
dec
jno
adc
shrl
add
fdivr
mov
push
sub
jb
mov
jmp
ljmp
mov
ljmp
jbe
mov
arpl
pop
call
scas
cmpsl
cs
test
stos
lock
incl
dec
leave
lret
jg
mov
xor
loop
lods
rorl
sub
clc
jmp
clc
push
enter
cwtl
popf
pop
test
push
mov
jne
mov
cld
or
das
mov
jg
ds
mov
insb
sbb
lcall
fdivrl
jbe
lcall
jne
mov
dec
repnz
adc
jb
cli
pusha
xor
xlat
push
push
inc
push
lcall
insb
nop
clc
out
shll
adc
push
int
inc
fidivs
arpl
jmp
push
fimuls
jne
adc
push
popa
mov
xchg
rcll
call
push
aas
push
cmpsl
inc
movsb
repnz
icebp
shrb
in
mov
fisubl
lods
dec
mov
pop
xchg
pop
cmp
pushf
mov
push
rolb
jge
ret
fcompl
jo
mov
movb
mov
or
adc
aad
je
mov
fs
aaa
inc
jo
loope
or
sbb
lea
out
clc
push
popa
xchg
arpl
sarb
or
fnstcw
or
lcall
and
ljmp
xchg
out
lods
scas
sub
ss
mov
lcall
inc
cmp
and
sub
dec
aaa
mov
inc
aaa
shll
fwait
loopne
mov
cmp
ljmp
repz
loop
push
mov
cwtl
jo
dec
push
push
and
jge
call
and
andb
in
movsb
outsb
sbb
cmp
mov
jge
mov
dec
adc
push
les
or
sbb
jecxz
sbb
scas
xlat
and
inc
adc
repnz
xor
cld
lcall
aam
pop
xchg
lcall
inc
push
add
mov
sub
adc
punpckhbw
call
and
repz
push
sub
fs
insl
in
push
jg
jl
lret
outsb
dec
xor
repnz
aaa
xor
push
test
jnp
xor
fdivp
mov
cmp
inc
mov
mov
push
cmp
loopne
fstpl
jns
dec
adc
bound
mov
mov
frstor
mov
xchg
es
adc
push
dec
push
hlt
addr16
mov
and
loope
pop
xchg
xchg
cmpsl
shr
push
ljmp
mov
pushl
cmp
mov
aas
nop
mov
xor
dec
sub
inc
mov
into
push
sub
inc
pop
jecxz
mov
in
sbb
mov
in
cmpsb
cmp
daa
ud0
call
fstpl
ss
cmp
cmp
icebp
adc
hlt
mov
inc
je
leave
loope
leave
incb
icebp
outsb
jp
ret
in
inc
pop
add
cmp
sub
xor
clc
pop
dec
mov
fiaddl
movsb
pushf
cs
cmpl
jg
test
mov
push
hlt
icebp
out
sahf
push
or
adc
or
int
pusha
mov
mov
std
sub
cld
out
or
sti
ret
mov
dec
mov
xor
decl
lret
into
ret
ret
jmp
daa
add
fldcw
sub
cs
arpl
dec
xchg
jo
stc
inc
cmp
sbb
inc
and
sub
out
mov
in
aas
ds
nop
bound
mov
call
mov
inc
push
fdivrp
cmp
xor
jmp
ficomps
cmp
sbb
pushf
das
and
rol
fdivr
shr
neg
repnz
push
in
push
or
cmp
mov
mov
lret
dec
and
jecxz
push
clc
cltd
pushl
in
scas
xchg
fnsave
aaa
pop
fsubl
fadd
adc
jo
push
test
mov
adc
push
adc
push
pop
stos
fstpt
cld
xchg
lret
push
shrl
jae
mov
mov
pop
or
in
imul
pop
nop
mov
jno
dec
dec
push
call
mov
pop
sub
jo
dec
clc
jmp
test
out
sub
std
shrb
add
out
pop
fadd
push
out
push
xchg
popl
push
test
dec
in
dec
aaa
sub
les
es
jbe
stos
test
in
icebp
or
incl
add
jae
test
fistpll
cs
popa
mov
decl
ficoms
loope
jp
icebp
xchg
add
inc
outsb
clc
gs
fbstp
stos
insl
lods
adc
call
dec
cmpsb
jp
fimull
jg
lret
push
pop
cmp
push
lret
sub
jmp
mov
incl
aad
scas
pushf
fwait
pop
pop
clc
dec
lret
scas
sbb
cli
jae
mov
pop
push
jo
nop
mov
pop
fiadds
jecxz
mov
pop
jg
sub
mov
sub
mov
push
jmp
mov
and
inc
rclb
inc
pop
mov
or
cs
mov
pop
push
out
or
pushf
cltd
lret
lcall
pushl
mov
ret
or
inc
mov
xchg
icebp
out
jo
jecxz
jns
sbb
jmp
js
insb
ljmp
popa
lcall
outsl
or
out
cld
js
cmp
andl
pushl
sub
mov
aaa
in
mov
imul
sbb
das
into
pop
ret
test
mov
loope
cmp
imull
pop
mov
mov
repnz
movsl
add
mov
jg
repnz
out
mov
pushf
fst
insl
sub
scas
add
or
orb
cmp
fcomip
nop
adc
pop
enter
and
xchg
xor
loope
movsl
pushw
push
aad
mov
jmp
mov
je
cmp
fcmovb
mov
sbb
daa
push
popl
mov
test
cmovp
shlb
sbb
mov
mov
in
incl
ljmp
sahf
out
mov
in
pop
lret
jnp
dec
add
jae
xchg
cld
mov
call
push
add
pop
inc
loopne
shlb
xor
push
inc
mov
arpl
lcall
pop
xor
add
test
rorl
leave
add
rcrl
fnstcw
xor
add
adc
dec
popf
aad
mov
push
or
inc
jg
inc
mov
jmp
add
rorl
xchg
je
mov
mov
mov
add
jge
ljmp
pop
xchg
push
rcll
and
inc
push
les
int3
jg
mov
adc
push
add
jno
sub
addl
pop
mov
pop
aad
ret
pop
mov
repz
mov
cs
out
aam
mov
sahf
push
ja
aas
cwtl
int
int3
or
push
ret
jg
inc
fisubrl
imul
outsb
mov
mov
imul
lds
popa
mov
sub
or
ret
loop
push
stos
jg
fmuls
mov
xchg
scas
clc
jmp
loopne
js
xchg
xor
test
cmp
mov
jg
into
jge
movsl
fwait
call
lods
push
sbb
push
sbb
pop
jbe
lcall
add
mov
lcall
fadds
leave
add
jne
mov
jmp
sti
adc
idivl
ljmp
xlat
mov
sub
adc
mov
pusha
xchg
add
jg
int
push
pop
dec
loope
cltd
rclb
jns
jb
xchg
sbb
dec
adc
in
iret
ja
enter
incl
pop
or
daa
inc
int
jecxz
movsb
inc
cbtw
xchg
loop
scas
pop
fisttps
mov
rclb
pusha
ljmp
pop
mov
jb
jmp
jno
das
imul
cmp
xor
decl
dec
jmp
xor
mov
orl
push
loope
lret
inc
pop
mov
popf
addb
dec
pop
sbb
mov
xchg
xchg
in
jmp
xchg
adcb
sub
mov
sbb
and
int
stos
push
ljmp
dec
mov
push
mov
or
xchg
push
mov
inc
mov
and
adc
lods
in
and
push
jmp
es
and
jle
fdivrp
cs
outsl
and
lea
mov
loop
insl
leave
data16
aas
pop
call
cld
jne
cmpsb
inc
repz
inc
rorl
jnp
bound
fwait
and
addr16
jmp
pop
mov
mov
outsl
aas
cmpsl
mov
mov
dec
pop
mov
ljmp
mov
push
subb
cmpsb
rclb
sub
addr16
sub
lcall
incl
fisttpl
cmp
aas
mov
les
lds
call
xchg
jge
cmp
xor
call
push
divb
sahf
xchg
call
and
sub
sbb
test
cmp
incl
xor
es
jno
scas
jns
aam
std
add
outsl
mov
cmp
mov
out
clc
jecxz
into
sbb
out
int3
in
inc
inc
add
outsl
sti
mov
insb
jns
inc
sub
sub
dec
cmc
xor
lcall
pop
mulb
call
mov
mov
incb
and
gs
pop
xchg
pop
scas
or
call
hlt
fmull
test
xor
xor
cmp
fists
push
je
incl
insb
adc
movsb
sub
jp
jle
jle
lods
pop
mov
mov
std
nop
jno
call
cmpsb
mov
aam
mov
rcrb
ud0
cmp
adc
outsb
sar
push
xchg
cmp
and
push
xchg
mov
or
icebp
sub
mov
pushl
insl
imul
push
push
mov
movsb
xchg
shrl
loopne
sub
fldcw
pushl
dec
and
les
loop
dec
aad
loop
or
cmpb
push
xchg
std
jnp
jecxz
sbb
cmp
mov
std
in
cli
and
sub
pushf
hlt
daa
je
hlt
mov
ds
das
ret
idiv
or
std
adc
jne
pop
out
mov
pop
fildl
mov
ret
shrb
test
jmp
adc
adc
hlt
adc
push
shlb
sub
jae
lcall
jae
inc
fcmovnbe
push
arpl
cmp
pop
adcl
int3
cltd
js
mov
or
mov
jbe
and
ret
fsubs
popf
jecxz
hlt
push
mov
add
fsub
incl
sbb
cli
xor
push
insb
pusha
push
mov
popf
mov
scas
xor
aas
fsubrs
cs
pushl
divl
jne
xor
push
mov
ret
xor
test
aad
push
xchg
pop
mov
dec
cmpsb
pop
cmp
pushl
and
dec
mov
jne
xor
pop
add
sub
cmp
ljmp
jmp
dec
pop
sub
stos
inc
jns
scas
or
fstpt
adcb
xchg
pushf
lea
ficoms
shrb
pop
cmc
mov
sbb
pop
std
add
add
jb
and
pop
inc
pop
mov
adc
push
rol
cs
call
add
ret
cli
ja
cmp
sarl
call
stos
faddl
add
ret
mov
jns
xor
jmp
insb
add
push
mov
lcall
xchg
stos
js
stc
adc
dec
and
push
insb
adc
xchg
sub
mov
addr16
cmp
stc
test
mov
test
jae
mov
inc
into
ret
and
shlb
call
icebp
mov
mov
inc
data16
pusha
in
lds
loopne
pop
sub
ljmp
sahf
pop
inc
dec
mov
fwait
inc
jne
mov
add
pop
add
mov
xor
xchg
test
sahf
pop
out
incl
jmp
push
jmp
fdivl
fildl
outsb
je
mov
flds
cmp
fists
mov
sub
out
rolb
shll
outsl
mov
dec
scas
jp
lcall
push
fiaddl
dec
fstl
sbb
lock
repnz
popa
je
sahf
stos
jmp
in
adc
sbb
je
add
cvtps2pd
lock
lock
jg
pushl
fwait
aas
mov
shr
mov
nop
insl
dec
sbb
testb
sbb
cmpl
addb
out
cmp
xchg
or
xchg
ljmp
inc
fsubs
pusha
adc
xchg
push
inc
push
aaa
and
enter
rclb
mov
jle
lods
add
aas
je
push
dec
jecxz
std
ret
push
ja
iret
das
sbb
hlt
jmp
mov
popa
movsb
int3
push
lret
pop
xor
push
push
pop
mov
mov
fsubl
in
cmp
push
data16
lahf
xor
pop
jge
xor
or
fs
push
adc
and
jne
cld
std
mov
push
pop
jg
pushl
push
add
add
add
out
mov
push
cmp
outsb
xchg
popa
sbb
xchg
ljmp
fdiv
push
add
int
ret
dec
inc
ja
outsl
aas
jo
mov
mov
fdivs
jb
fucomip
test
jg
incl
int
insb
orl
pop
dec
popa
xchg
ds
cli
mov
inc
and
pushf
les
mov
nop
adc
fucom
sub
dec
inc
mov
sbb
jecxz
call
fidivrl
in
insl
sbb
fcompp
popf
jp
rol
fldenv
decl
lock
push
and
push
cmp
fidivs
pop
mov
lcall
fisubrs
in
mov
scas
xor
das
lods
jnp
jne
fsubl
and
mov
movq
mov
mov
decb
fs
incl
jo
push
dec
fiaddl
jo
mov
xchg
mov
filds
loopne
dec
mulb
jno
sbb
std
decl
xchg
inc
mov
insl
sbb
data16
jmp
push
and
xor
jecxz
scas
jmp
jmp
roll
cmp
andl
pop
leave
xchg
mov
push
xor
faddl
push
mov
push
das
xchg
imul
int
ds
repnz
dec
in
jmp
rol
ret
adc
jle
add
movsb
pop
repz
jg
insb
and
push
arpl
lcall
roll
aas
popa
dec
cwtl
in
pushf
mov
pushf
xorb
popa
add
jle
lcall
pushf
mov
stc
add
mov
jne
push
bound
sub
dec
xor
lods
sbb
mov
jp
mull
jns
and
mov
sbb
adc
out
aam
paddw
cwtl
push
mov
sti
push
sub
xchg
cmp
cmpsl
ret
in
add
decl
rorb
jae
test
jle
pusha
push
ficompl
push
loop
adc
insb
pop
subl
pop
lock
decl
and
sbb
and
fldcw
bnd
mov
jp
lret
pushl
insb
sub
cld
xor
addr16
sbb
out
clc
fdivp
inc
js
mov
and
add
incl
add
dec
imul
cmpsb
jp
decl
push
sbb
dec
mov
lds
arpl
push
push
mov
shrl
daa
jle
stos
xchg
paddusw
fsubl
rcrl
adc
pop
ret
cmp
dec
jge
jecxz
fnstsw
test
lcall
ja
sub
adc
aad
and
clc
xchg
repnz
xor
mov
xor
rorb
push
lret
cmp
dec
test
ljmp
pop
movsl
push
andb
sub
inc
popa
jg
push
rclb
mov
push
push
incl
std
ficoml
insl
fdivr
sbb
int3
insb
fnstsw
cld
adc
repnz
cmp
popf
out
shrb
std
and
push
jecxz
loope
adc
pushf
sbb
add
lcall
cmpsl
xor
test
push
adc
mov
pop
mov
aas
out
gs
call
push
sbb
loope
and
inc
mov
dec
jae
sub
xor
or
out
mov
repnz
adc
inc
push
outsb
movsb
shrl
xor
inc
adc
sbb
jmp
shll
mov
int3
mov
shll
jnp
cmpsl
loopne
dec
push
jmp
cmp
incl
and
jg
std
in
mov
je
xor
mov
cmpsl
out
cld
xchg
bound
out
sbb
pushl
out
js
jp
inc
jmp
mov
pop
or
sbb
jne
ret
test
sbb
test
ficompl
push
movsb
pop
imul
pop
sub
jmp
mov
test
sbb
into
sub
not
xor
cwtl
rorb
xchg
repnz
ljmp
sub
cmp
and
or
mov
xchg
bound
scas
fisubl
faddl
in
and
aas
push
pop
xor
jbe
pop
mov
push
cmp
enter
sbb
rcll
ljmp
loopne
adc
int3
pop
adc
add
lock
sbb
jg
ss
cs
aam
add
jb
dec
dec
dec
out
out
or
inc
into
mov
add
pop
adc
cmp
dec
sbb
out
lods
das
iret
mov
rolb
mov
addb
ret
call
and
inc
mov
jo
push
dec
sub
and
lcall
jg
sarb
outsb
cmp
xchg
xor
andb
decl
add
jp
cmc
dec
push
lock
xor
mov
repnz
inc
jmp
icebp
cmpsb
and
jecxz
mov
jne
and
ss
outsl
xchg
ljmp
into
mov
mov
pop
and
orb
ljmp
test
push
gs
aad
inc
inc
and
mov
das
std
mov
push
cmp
push
ljmp
mov
cmp
mov
scas
mov
in
or
or
lcall
cli
cli
push
mov
aaa
jg
mov
ss
jno
std
push
jno
sub
sar
cld
mul
push
imul
lcall
lock
ljmp
cmp
jne
fdiv
adc
push
push
xchg
mov
stos
cmp
inc
cmp
or
add
call
adc
xchg
scas
or
cs
sub
leave
xor
lcall
dec
dec
xchg
test
and
cwtl
inc
es
xlat
jnp
or
adc
jg
fcompl
jne
dec
dec
iret
stos
push
test
jbe
dec
jno
push
fstpl
and
arpl
push
int
aas
divl
mov
dec
stos
push
adc
aaa
daa
xor
sbb
lcall
pop
pop
sbb
mov
stos
arpl
pusha
pushf
jne
inc
cmc
fisubrl
xchg
mov
pop
std
mov
shl
ss
ljmp
jge
and
push
rorl
fcomip
incl
scas
lahf
ja
xchg
sbb
or
sahf
dec
push
xchg
das
sbb
pushl
fsubs
arpl
subb
adc
iret
mov
cmc
sti
js
pusha
cltd
pop
or
adc
sar
pop
sbb
fisttpll
test
sbb
or
ret
mov
ljmp
aad
jg
cmc
ficoms
cmp
nop
imull
sub
pop
add
ja
stos
inc
ljmp
mov
push
pop
clc
dec
xchg
sub
fs
aaa
aaa
push
insb
mov
inc
jmp
cmpsb
xor
gs
mov
lret
jne
int
cmp
ret
test
mov
fidivs
pop
das
fstpl
mov
cmp
pop
and
pushl
mov
jge
mov
test
add
into
imul
icebp
push
lea
mov
add
ds
mov
inc
cwtl
push
inc
mov
cmp
fs
push
cmp
jmp
loop
clc
cmp
and
jmp
fstp
jl
loop
mov
pushl
std
shl
fcomps
or
mov
pop
xor
out
neg
xchg
cmp
dec
gs
pop
fildll
jge
mov
mov
mov
xchg
add
jmp
mov
sbb
xor
mov
int
shl
jnp
stos
inc
fxch
call
mov
add
or
inc
push
sub
adc
lret
subl
xchg
mov
jno
push
jo
inc
int3
mov
mov
cmp
sbb
dec
adc
call
cmp
adc
aaa
ds
inc
cmp
ret
out
mov
movsb
xchg
outsl
xchg
inc
in
inc
push
fwait
push
jae
mov
add
dec
mov
dec
int
or
adc
push
xorl
mov
mov
test
pushl
sbb
imul
cmc
mov
inc
loope
or
addr16
fcomip
jmp
and
loope
imul
mov
push
mov
addr16
fs
movsb
adc
cmc
decl
das
leave
std
stos
xchg
fnstenv
dec
ss
je
mov
cmpsl
and
mov
xchg
and
mov
pop
cmp
movsb
or
insb
aaa
fistpl
stos
inc
incl
sti
xor
clc
inc
add
dec
mov
shlb
aas
test
ja
cmp
call
cmc
daa
or
insb
xchg
mov
xchg
test
pop
flds
aam
mov
add
or
push
in
jp
dec
insl
outsb
jg
out
xchg
sub
inc
test
shl
mov
sub
dec
sysexit
es
call
stos
mov
or
mov
push
rolb
dec
mov
lods
sar
jae
push
incl
stc
int
mov
xchg
push
xor
imul
mov
mov
popf
or
ljmp
xchg
and
jle
jne
pop
out
sub
adc
sub
mov
mov
push
xchg
xchg
rclb
and
jmp
test
mov
and
fcomip
lcall
repz
lds
inc
movsl
fwait
push
mov
stos
mov
add
jg
push
jbe
jnp
repz
pop
mov
pop
fwait
jnp
dec
mov
xchg
fbstp
fstpt
addl
ljmp
pop
push
fsubs
add
push
nop
sarb
notb
lcall
cld
ds
mov
call
sbb
sbb
inc
inc
mov
add
fwait
xchg
jecxz
outsb
jle
mov
mov
dec
dec
mov
in
outsb
js
lret
mov
cwtl
push
cmp
mov
nop
lret
xchg
mov
cld
xor
sti
xlat
mov
sbb
pop
imul
mov
push
pop
repz
lcall
addb
mov
aas
orb
xchg
fmull
mov
decl
imul
bound
cmp
xchg
and
aas
rorb
jg
lods
push
and
and
and
and
and
fiadds
mov
or
loopne
mov
inc
jmp
mov
inc
dec
xor
call
sub
andl
xor
xchg
mov
mov
cli
and
ds
or
decl
xor
mov
ret
mov
mov
lahf
mov
add
inc
pop
push
sub
xor
xchg
cmp
jb
pop
cld
adc
lcall
mov
xchg
push
cs
cmpsb
lods
jp
cmp
jns
lret
lahf
rcll
jno
mov
mov
xor
add
lock
dec
mov
fidivrl
mov
xor
mov
mov
lock
jge
sub
pop
pop
fdivrp
cmp
sub
push
inc
scas
jl
pop
pushl
in
pushf
test
lds
or
push
ret
inc
xchg
test
cmp
stos
add
insb
push
rolb
add
jp
add
sub
pop
xchg
out
xchg
mov
out
cli
outsl
cwtl
xchg
insb
sbb
outsb
xchg
jg
pop
push
or
cmp
xor
das
cli
ljmp
rorl
cltd
repz
call
imul
out
inc
push
push
bound
in
inc
mov
mov
and
cmp
std
jbe
stc
mov
fcomip
test
repz
sub
mov
dec
rolb
jbe
out
add
jmp
adc
mov
mov
or
rcrb
and
leave
mov
dec
xor
add
adc
jns
pushl
jmp
repz
dec
pusha
xchg
sbb
loopne
rclb
add
sar
push
out
sbb
lcall
shrl
mov
incl
push
mov
scas
mov
test
sub
test
push
mov
test
mov
mov
push
mov
xchg
dec
popf
pop
lea
decl
sub
xor
pop
sub
daa
lret
mov
inc
cmpsl
jl
lret
xor
sti
cwtl
mov
leave
cmpsb
incl
lret
push
sar
xchg
ret
int3
mov
ret
rcrl
pusha
mov
cmp
iret
mov
icebp
and
push
inc
cli
movsl
xor
sar
cmp
decl
mov
scas
lcall
std
int3
cmp
je
jne
sbb
clc
push
out
mov
jmp
lds
pop
sti
clc
call
fwait
cmc
insl
imul
clc
jmp
jg
aaa
cmpb
xchg
leave
ret
xchg
daa
mov
ljmp
adc
push
adc
push
hlt
lock
push
push
movsb
call
in
ja
jg
icebp
shll
pop
push
xchg
inc
mov
jno
clc
lds
mov
scas
pop
stc
pushl
js
imul
lret
jno
sarl
test
shr
mov
out
movsb
in
lret
mov
mov
sbb
icebp
cmpsb
pop
jnp
repz
cld
sbb
cltd
inc
mov
add
repnz
iret
icebp
xchg
loopne
aaa
and
or
out
adc
lcall
xchg
mov
loope
xor
mov
and
lcall
std
pop
scas
dec
push
ljmp
or
lods
inc
loop
cltd
mov
dec
repnz
or
scas
ljmp
and
movsl
popa
inc
mov
dec
idivl
push
leave
lea
mov
gs
adc
mov
jo
scas
cli
decl
inc
outsl
outsb
je
and
xor
iret
movsb
lret
icebp
add
fists
ljmp
mov
stc
sub
pop
mov
arpl
or
pop
xchg
or
adc
cmpsb
jb
dec
sbb
cmc
in
pop
jns
or
cmp
aaa
jmp
mov
pushf
outsl
clc
out
dec
jo
dec
jae
jnp
ja
sbb
ljmp
call
nop
out
leave
test
in
mov
jb
pop
jnp
mov
inc
push
xchg
cmp
sub
in
mov
in
inc
lcall
std
adc
sub
mov
call
int3
iret
cmpsl
mov
or
lret
test
outsb
jb
scas
push
mov
mov
ljmp
cmpsl
add
imul
push
pop
inc
js
pop
push
mov
jl
mov
jb
push
sbb
mov
leave
sar
mov
xchg
mov
pop
out
or
icebp
jmp
out
scas
inc
outsl
shll
jg
outsb
jmp
mov
inc
push
or
sbb
out
adc
xor
incl
test
es
mov
mov
mov
dec
push
sub
mov
xchg
decl
mov
fstpt
inc
push
rcll
test
sub
call
ficomps
pop
es
or
cmpb
loop
addr16
shrb
mov
incl
adc
dec
insl
rorb
mov
nop
add
cmp
pop
adc
jle
mov
shlb
pop
dec
cli
aam
cld
outsb
scas
mov
cmp
dec
mov
repz
cli
in
icebp
lahf
fcomps
lahf
cmp
andl
mov
mov
fdivr
push
gs
jp
std
cmp
jecxz
mov
push
cmpsl
mov
iret
push
addr16
mov
sbb
mov
xchg
sub
or
xor
fildll
jnp
mov
out
pushf
das
jl
lcall
pop
ss
movsb
or
jns
dec
sbb
mov
cmpb
and
hlt
nop
xchg
ficoml
jmp
lods
sbb
insl
push
push
popa
hlt
sti
out
in
fmul
shll
adc
mov
iret
jae
fwait
stos
and
scas
fwait
inc
sbb
aaa
enter
jge
ds
mov
stc
movsb
xchg
mov
pop
sbb
push
xorl
stos
lock
lds
push
sbb
pushf
cmp
mov
movsl
int3
ljmp
loopne
insb
loope
popf
lods
push
fcmovb
enter
jmp
insl
xchg
movsb
dec
pop
movb
xchg
jl
mov
pop
stc
mov
call
cwtl
aad
lock
jp
or
clc
mov
fwait
jg
leave
arpl
imul
and
xchg
jl
inc
cmp
icebp
mov
mov
sahf
sti
jbe
arpl
or
out
jne
xchg
add
pop
and
adc
cli
incl
pop
mov
xchg
sbb
mov
push
push
int3
adc
add
sbb
jg
jmp
imul
call
mov
sbb
mov
xor
fwait
dec
sahf
aam
call
test
test
pop
pop
roll
aam
lcall
sub
push
decl
cs
inc
dec
ljmp
and
js
leave
xchg
push
inc
jl
dec
mov
jmp
mov
pop
call
mov
mov
jno
pop
inc
ret
mov
ljmp
xor
sarl
push
inc
call
test
jmp
out
xchg
sbb
push
popf
add
ja
fmulp
mov
aad
pop
subb
cmp
mov
shrl
jo
pop
repz
dec
sbb
scas
ret
pop
icebp
mov
mov
add
push
cltd
push
mov
pusha
push
sub
xchg
in
mov
mov
pop
sub
lret
dec
dec
insb
inc
fmull
es
jmp
loopne
shll
pushl
add
cmp
cmp
gs
mov
mov
int3
cltd
push
add
shrb
roll
xchg
inc
push
insb
into
insb
jmp
jle
enter
push
xor
mov
pushl
shr
sbb
mov
cmc
sbb
fiadds
fsubrl
cmp
ljmp
xchg
dec
mov
push
mov
inc
sbb
inc
fildll
jne
lods
jb
shlb
negb
jp
addr16
fcmovu
or
lahf
es
decl
mov
push
inc
mov
test
jb
and
inc
adc
ds
mov
lcall
mov
mov
and
xor
jae,pn
adc
hlt
add
mov
fadds
and
ret
mov
scas
push
pop
inc
popa
xchg
fisttpll
bound
sub
adc
mov
fcos
ljmp
push
inc
cltd
test
out
dec
cmp
ret
mov
sahf
fildl
decl
repnz
out
xchg
test
adc
loop
lock
push
test
loope
hlt
jbe
std
sbb
jmp
decl
lock
xor
jnp
and
jecxz
push
sub
jno
call
incl
leave
adcb
stos
add
je
mov
cmp
mov
pop
movsl
nop
test
test
lods
mov
mov
add
jne
lods
xchg
xor
je
sbb
fdivs
jmp
leave
cli
adc
lock
test
or
enter
dec
test
xchg
push
sub
loop
ljmp
lods
jae
dec
xchg
test
or
fmul
dec
xchg
scas
xor
lcall
push
incl
sub
and
jg
cmc
test
scas
into
push
ja
xorl
ret
outsl
dec
xor
xchg
ja
shlb
imul
and
pop
ss
stos
sub
addl
sbb
in
mov
push
subb
lods
stc
outsl
stc
xorb
call
fs
mov
sbb
mov
sbb
mov
in
cmpsl
setns
mov
dec
inc
leave
jae
lret
mov
inc
xchg
lret
mov
adc
ljmp
pop
stos
loop
aas
repz
into
cwtl
outsb
aas
dec
insl
bound
rol
cld
cltd
std
es
incl
inc
or
inc
scas
xchg
outsb
les
or
je
mov
jmp
scas
int3
imul
addl
push
jae
and
jge
pop
cmp
cs
cmp
pusha
jno
leave
jle
xchg
jge
stc
popf
xchg
adc
mov
repz
and
cmp
scas
sub
add
push
cmp
cmpsl
cmp
push
out
in
pop
push
mov
fldt
aaa
std
mov
outsb
gs
or
mov
scas
cwtl
shrl
mov
sbb
call
pop
inc
addr16
ds
add
inc
repz
outsb
mov
pop
xor
xor
mov
cmpsl
jne
xchg
rol
jmp
es
popa
jo
jb
jnp
mov
incl
xchg
mov
loop
pop
lcall
mov
incl
mov
xchg
into
pop
or
fdivrp
jmp
add
push
add
xchg
decl
xor
test
test
loopne
cmp
fwait
jb
aad
cs
ja,pn
ja
jmp
or
fmull
mov
push
stos
mull
dec
cwtl
xor
mov
push
ljmp
xor
ljmp
aaa
cld
insl
jbe
sbb
in
add
dec
dec
clc
mov
incl
xchg
iret
outsb
jno
and
jmp
and
stos
jg
adc
sub
out
push
push
xchg
sub
mov
pop
ret
mov
mov
sbb
mov
mov
pop
rcrb
clc
out
mov
dec
xchg
cmpb
cwtl
sbb
cli
xlat
lcall
fbld
jl
mov
mov
test
xchg
dec
insl
lods
xchg
leave
pop
inc
dec
mov
jle
cli
xchg
incl
jns
adc
fmulp
scas
mov
jmp
mov
ljmp
data16
dec
sbb
pop
push
incl
cld
pop
cld
xor
jmp
daa
mov
mov
loop
not
in
mov
jmp
sti
cmp
and
jno
xor
jmp
mul
sub
int3
mov
out
stc
xchg
mov
lds
inc
xor
aad
pop
ljmp
mov
mov
test
push
dec
stos
lcall
scas
sbb
into
add
xor
js
decl
mov
repz
fsubs
mov
sbb
sarl
dec
or
adc
mov
fisubs
ljmp
jno
insl
ds
jae
fsts
xchg
inc
mov
mov
mov
loopne
incl
mov
sbb
push
int
xor
sti
push
inc
push
xchg
xchg
jmp
inc
sbb
push
mov
pop
sub
sub
or
cmp
popf
cld
inc
ljmp
pushl
sub
out
out
or
push
loopne
mov
ljmp
jg
loop
jmp
dec
fwait
imul
adc
mov
mov
mov
cmp
pop
mov
outsl
cltd
push
aad
in
daa
cmpl
fildll
pop
mov
jno
jns
test
leave
out
das
xchg
subl
call
add
xchg
xchg
mov
adc
in
add
repz
mull
popa
mov
std
adc
dec
sbbb
xorl
aas
or
push
mov
add
xchg
ljmp
subb
ljmp
mov
jne
mov
fsubr
jle
faddl
lock
or
stc
cmp
inc
jbe
loopne
lahf
movsl
cmp
cld
imul
xor
xchg
push
andb
cli
and
mov
imul
fidivl
fst
xor
and
add
xor
adc
cli
cmp
jecxz
std
add
lcall
cmpsb
sbb
jns
lea
loope
cmp
mov
inc
sub
call
cmpsl
mov
imul
loope
mov
pusha
xchg
int3
loope
sub
call
or
gs
out
adc
cmp
xor
lea
nop
bnd
or
jmp
jnp
pop
pop
mov
sub
jmp
sub
hlt
mov
cld
jmp
nop
lret
dec
dec
aam
lock
add
cmp
jl
and
aad
or
and
lahf
movsb
adc
cltd
test
xor
mov
jg
test
dec
xchg
mov
mov
jne
jns
in
mov
scas
cli
decl
iret
stc
xlat
lea
js
mov
outsl
rcrb
pusha
lahf
inc
gs
in
clc
or
sub
pop
into
pop
cmpsb
sarb
lock
jo
out
and
lds
incl
and
jge
xchg
push
faddl
xor
pop
push
addb
scas
in
in
mov
mov
scas
ljmp
and
jnp
push
inc
cmp
fimuls
sub
jmp
jmp
out
popf
shl
jns
adc
insl
push
pop
cmp
push
cmpsl
nop
sti
scas
aas
scas
decl
nop
mov
popa
adcl
aad
jne
and
shrl
adc
pushl
enter
jbe
mov
and
xchg
js
or
sahf
mov
cmp
dec
repz
outsb
and
add
xchg
shr
jge
adc
sub
push
sbb
incl
out
fcomps
add
sar
cmp
adc
stc
stos
adc
stos
or
in
fisubs
decl
push
cmp
mov
inc
test
mov
fs
cs
call
outsb
push
mov
loop
inc
outsl
aaa
idivb
mov
bound
mov
jno
js
jne
ljmp
aam
adc
mov
sahf
jne
leave
shll
dec
lods
fisubl
ljmp
jl
cld
mov
jbe
lds
hlt
loopne
inc
sub
jmp
or
pushl
cmp
push
xchg
ror
and
adc
and
inc
test
mov
sbb
and
out
imul
cmp
hlt
add
call
les
popf
iret
jne
pop
and
decl
xor
or
fsubr
rcrl
out
ret
les
call
decl
mov
push
lds
inc
sbb
iret
aas
rcrl
daa
mov
and
push
in
xchg
clc
out
stos
push
jmp
adc
jne
stc
inc
adc
icebp
dec
jmp
mov
and
sbb
pop
mov
or
push
mov
fstpt
shll
xlat
scas
mov
inc
das
sbb
xchg
loop
faddl
mov
sbb
fcompl
gs
in
sub
sbb
or
loope
inc
repz
push
aas
jge
hlt
outsb
mov
and
push
push
je
gs
sti
stos
sub
nop
cmp
cmp
pop
test
lcall
mov
mov
hlt
sub
lret
jle
inc
rclb
pop
jb
test
imul
push
aam
xchg
nop
out
mov
ds
push
nop
in
jl
lcall
orb
cs
test
inc
xchg
jmp
rcll
fnstsw
idiv
pushf
pop
jge
jb
mov
call
inc
mov
enter
mov
or
mov
jmp
cmp
pop
cmpsl
push
out
and
enter
cmpsb
enter
and
xor
loope
jmp
push
xor
add
pop
lret
xchg
jae
inc
in
lock
mov
out
aam
subl
loope
or
push
xlat
pop
or
sbb
sbb
mov
orb
aas
xchg
aaa
jmp
adc
call
mov
lods
int3
fiaddl
inc
add
cmpsl
mov
jle
fcomip
fistps
mov
pusha
std
sbb
mov
mov
je
repnz
inc
push
jo
dec
testb
add
popa
arpl
cmpsl
sub
push
xchg
popf
insl
adc
jle
or
and
xlat
dec
mov
adc
insb
lret
push
pop
dec
jg
adc
decl
ret
adc
mov
mov
adc
jno
in
mull
test
pop
scas
nop
jb
push
pushl
test
sbb
push
adc
push
cmp
xchg
loop
mov
or
jne
cmc
decl
xchg
jbe
adc
inc
xchg
cli
xchg
loop
ja
xor
sti
jge
sbbl
das
inc
xchg
test
mov
or
push
dec
mull
subb
fcomip
decl
xchg
mov
jb
shl
inc
xchg
repz
bound
das
pop
out
cli
incl
fcomi
xchg
movsb
imul
rcrl
cmc
pop
in
mov
fnsave
mov
sub
mov
sahf
fsts
adc
clc
mov
ljmp
cmp
pushl
movsb
mov
or
jg
dec
push
push
fidivl
cltd
jp
scas
hlt
mov
jbe
incl
loop
jb
sub
jmp
mov
test
xchg
or
lods
dec
push
mov
push
mov
sbbb
ds
jae
fmuls
and
aas
pop
push
mov
mov
clc
mov
lahf
arpl
lret
test
into
scas
mov
cmp
sub
sti
aam
call
out
mov
cmp
xchg
mov
orl
push
es
xchg
daa
xor
jnp
add
cs
int
insb
rclb
out
adc
insl
fldcw
fwait
dec
xor
mov
push
js
data16
mov
jno
pop
sub
mov
fistpl
ret
push
sbb
push
lret
push
sbbl
jecxz
mov
pushf
out
or
clc
mov
incl
xchg
push
dec
mov
xchg
mov
call
mov
or
jmp
cs
add
fcmovnu
enter
jno
add
mov
mov
jmp
xchg
mov
xor
mov
push
xchg
or
xchg
aas
ss
aas
clc
call
daa
stc
sarb
imull
xchg
movsl
jl
enter
pop
mov
lahf
orb
or
dec
adc
bound
mov
bound
xor
push
push
and
jge
sbb
loop
push
sub
lret
pop
mov
stc
cmpsl
xchg
xchg
add
into
mov
add
in
jl
ljmp
and
push
push
test
es
cmpsl
leave
lret
jmp
xchg
jno
and
insl
sbb
push
cmp
fbstp
pop
adc
sar
jmp
rcll
pop
dec
clc
rcrb
bound
adcb
les
lock
cld
sti
pop
xchg
ret
pop
lods
repnz
xchg
sbb
mov
xchg
pop
sub
lock
lcall
mov
aaa
popa
lock
mov
jbe
int3
or
xchg
es
mov
int3
aad
popa
dec
xchg
jg
jmp
xchg
data16
sbb
or
mov
addr16
jg
call
andb
sub
repnz
sbb
xchg
adc
mov
sti
cmp
push
decl
jmp
loopne
in
ffree
cltd
push
popf
out
jne
mov
scas
sbb
dec
dec
sti
add
lea
in
int
mov
push
jmp
and
sbb
and
sbb
and
pop
jns
mov
inc
insl
das
pop
addr16
clc
call
inc
lock
jg
inc
mov
imul
into
push
xchg
sar
ljmp
push
push
or
mov
js
aas
iret
and
jecxz
lcall
jle
fcmovu
pop
cs
xchg
sub
xchg
mov
xor
mov
adc
mov
push
jmp
enter
aaa
addb
push
push
cmpsb
xchg
outsb
scas
push
shlb
int
jmp
xor
arpl
pushl
fildll
xchg
sbb
xor
add
movaps
xchg
mov
push
insl
cltd
jb
xchg
mov
xor
int3
sub
hlt
call
repz
mov
jnp
xor
stc
adc
xor
xchg
call
iret
or
push
inc
cmc
and
pop
dec
mov
xchg
pop
adc
jp
jmp
aam
fcmovb
pop
sub
xchg
jge
popa
mov
shl
idivb
add
sar
pop
dec
fsubs
adc
jl
imul
adc
icebp
rcrl
vmovss
pusha
stos
or
iret
cmp
ljmp
dec
xor
add
jmp
or
mov
jae
xor
sahf
jnp
scas
push
xchg
sbb
call
pop
scas
lahf
inc
rcr
push
jmp
test
out
shrb
mov
inc
loope
pushl
mov
push
pop
xor
fcmovb
in
stc
mov
add
sahf
pushf
mov
js
out
add
sbb
jmp
mov
jns
or
adc
std
mov
and
mov
pop
push
inc
xor
mov
adcb
ficoms
and
xor
mov
pop
pop
lods
mov
decl
pusha
subb
fisubrs
sahf
inc
push
in
sbb
cli
mov
rorl
lret
jle
push
fs
add
rol
repnz
pop
addb
inc
dec
jmp
jecxz
movsl
inc
jns
cmpl
pop
imul
sbb
in
jne
or
lcall
fcomps
movsb
mul
mov
xchg
sahf
dec
cmpsl
aad
lea
es
movsb
adc
cli
ljmp
mov
mov
jmp
cmp
mov
xchg
mov
sbb
mov
ret
push
sbb
bound
imul
jecxz
imul
loop
and
cli
add
xchg
and
inc
mov
js
test
dec
sbb
mov
push
mov
ret
mov
negb
scas
jg
arpl
cmpsb
loop
int3
or
out
or
push
popf
mov
daa
out
ds
lcall
loope
shrb
sbb
fldenv
fwait
outsb
aad
pop
mov
sub
jmp
ss
loop
int3
push
mov
mov
push
cmp
push
jns
and
repz
add
xor
out
inc
lock
sar
loop
mov
outsl
in
lods
cmp
inc
mov
aaa
cld
decl
int3
pop
push
push
push
xchg
imul
adc
or
sbb
fidivrl
ds
mov
push
mov
pop
mov
repz
gs
lahf
lock
push
jmp
cmp
jne
ret
dec
loopne
pop
inc
ja
pop
inc
enter
fsubs
mov
and
cmp
mov
popa
fwait
mov
inc
and
nop
mov
insl
cmp
aad
lahf
xchg
mov
inc
jecxz
cmp
in
sahf
icebp
sub
call
cmc
mov
mov
ja
mov
lcall
mov
int3
add
imul
in
dec
out
xor
out
sub
iret
sar
call
mov
jmp
cmpl
std
lcall
test
lret
or
mov
inc
clc
call
repz
int3
out
out
fldl
mov
imul
xor
xchg
pop
enter
jmp
aad
dec
xchg
ret
shlb
enter
push
pop
sbb
xor
jb
cmp
insl
cmpsl
jl
test
pushl
fdiv
mov
mov
dec
and
fwait
lea
adc
call
loope
js
inc
js
xchg
ljmp
cs
adc
mov
pop
and
ljmp
scas
sub
and
iret
addr16
mov
jae
das
or
lret
pop
notl
ror
xchg
jmp
mov
inc
adc
push
inc
inc
pop
xchg
notl
pop
cmp
or
ljmp
scas
inc
push
add
aas
shlb
mov
in
dec
xchg
mov
or
aaa
std
ljmp
gs
daa
or
lret
aaa
jb
fwait
add
mov
je
lds
incl
xor
jae
fidivl
aaa
jge
jg
gs
loope
mov
jno
xor
inc
in
test
pop
ret
loope
xor
or
push
mov
sub
dec
cmc
decl
testl
pop
mov
mov
or
jmp
pop
jmp
loop
je
push
cmp
pop
add
jb
add
xlat
ja
je
adc
mov
jns
pop
inc
cld
mov
daa
cmpsb
mov
lods
dec
fistl
jne
inc
add
xor
movups
adc
jno
cmp
sub
pop
dec
or
ds
push
jbe
in
jne
lea
stos
ja
rclb
inc
pop
mov
daa
lret
xchg
xor
int
jmp
jle
mov
jmp
mov
fdivl
aad
aad
jmp
loopne
sbb
xchg
push
aam
negl
push
push
adc
pop
jne
mul
in
sbb
shll
lcall
decb
inc
out
lahf
cmp
cld
adc
imul
xor
jmp
hlt
aas
jge
inc
mov
adc
out
and
dec
push
test
jns
sti
cmp
incl
cmp
and
iret
pushf
lcall
pop
fdivs
push
lahf
cmpsb
adc
lcall
cmpsl
mov
jl
scas
inc
lret
push
xor
pop
push
lcall
pushl
lahf
cltd
pop
insl
jnp
and
loop
inc
push
add
xchg
sub
push
ja
sbb
loope
and
cmp
test
mov
push
push
mov
test
push
mov
mov
daa
cmp
pop
add
ljmp
push
mov
jno
pop
push
jl
icebp
xor
add
bound
jae
xor
cmp
jg
addb
or
push
xchg
sti
push
subb
mov
cmp
push
xchg
push
std
aaa
cld
repnz
into
enter
adc
inc
out
lods
mov
outsl
enter
push
test
stos
andb
stos
test
jg
stos
les
mov
loopne
xor
mov
leave
pop
pop
mov
mov
dec
mov
fsts
sti
jbe
xchg
and
decl
dec
mov
jb
or
loop
fcmovnu
addl
xor
sti
mov
jmp
loopne
mov
jp
and
cmpsl
loopne
gs
fisubs
cli
in
lcall
pop
pop
jnp
daa
mov
idivb
orl
in
mov
mov
add
push
incl
inc
mov
mov
fidivl
xchg
fistps
add
stos
push
fidivs
add
jmp
mov
insb
fxch
inc
insb
lea
mov
stc
insb
les
popa
lret
sub
lock
xchg
js
mov
sbb
pop
fidivs
roll
rclb
out
lahf
adc
std
sti
inc
push
insl
call
mov
test
fisubs
cmp
and
mov
jbe
xchg
outsb
popa
cmpsl
nop
stos
mov
jmp
push
inc
xchg
stos
sbb
iret
mov
cmp
divl
outsb
lods
cmp
rorb
incl
sbb
pop
pushf
push
or
or
imul
rcrl
xor
test
loope
cli
cmp
fdivrl
push
jl
push
sbb
cmp
xor
cld
or
mov
mov
and
icebp
cld
sbb
jmp
scas
mov
xor
lock
stos
inc
into
jo
mov
fdivrs
ss
lcall
in
or
test
daa
and
push
inc
mov
pop
jno
push
lock
int3
push
lcall
dec
pop
outsl
dec
outsb
dec
js
ret
mov
push
add
je
lcall
decl
jb
or
repz
xor
sbb
repz
fbld
mov
xorl
pushf
xchg
xor
fwait
sub
decl
cmp
mov
enter
ret
scas
dec
arpl
lret
adc
popl
xor
jmp
cmpl
lret
loopne
push
out
fidivrl
pop
pop
movsb
push
ficoms
dec
jl
lret
data16
call
add
fidivrl
sub
jb
cmp
in
test
cmpsb
xchg
lret
call
sbb
int3
jp
push
ss
shrb
clc
cmc
cs
enter
sub
add
adc
movb
cltd
adc
pop
mov
mov
mov
add
inc
sarl
mov
mov
xchg
idivl
hlt
pushl
push
ja
push
pop
cmc
dec
lea
call
xor
or
push
fists
mov
sti
mov
shll
mov
out
shlb
or
ljmp
sbb
xor
arpl
xchg
aas
dec
addl
hlt
lea
pop
std
cmp
xchg
push
cmp
shll
test
and
add
cld
pushl
shrl
stc
sub
pop
fcoml
call
in
stos
fcmovnbe
pop
and
ljmp
xor
mov
push
fcoml
jbe
sub
sti
mov
push
pop
dec
test
aam
ret
into
dec
sbb
inc
and
add
mov
mov
sarb
movsl
mov
mov
out
adc
sbb
and
aas
push
addr16
mov
push
push
and
xchg
mov
jno
ja
mov
jne
inc
js
scas
clc
push
dec
lds
jp
mov
int3
hlt
out
xchg
icebp
jl,pt
call
fld
jge
bound
push
sbb
xor
in
shll
inc
filds
cli
stc
je
or
in
js
cmpl
scas
jmp
add
mov
rcl
pop
enter
fwait
rclb
lahf
daa
fwait
adc
dec
cmpsb
cmp
imul
aam
dec
mov
push
xchg
xchg
les
push
outsb
neg
in
lcall
mov
pop
in
or
pop
or
sbb
mov
jo
outsb
sti
xchg
pushl
dec
jge
inc
dec
call
dec
loopne
outsb
out
jecxz
xchg
sbb
roll
test
lcall
shr
daa
cmp
mul
push
ljmp
loopne
mov
jne
pop
fcoms
call
mov
sub
jge
jns
pushw
lret
std
dec
and
sbb
or
movsb
ljmp
dec
cmp
or
test
sarl
test
cmp
decl
sub
inc
or
test
aaa
pop
enter
push
xchg
incl
in
adc
or
vucomisd
lods
mov
sub
xor
rolb
xchg
and
mov
sti
addr16
xor
cmpsl
ljmp
rorl
in
sbb
push
sbb
inc
push
std
call
mov
insl
scas
adc
xchg
push
xor
std
out
jmp
lret
xchg
xchg
nop
and
dec
aaa
lds
dec
lahf
jge
popf
or
sub
addr16
je
leave
adc
cmpsb
dec
pop
incl
jo
sbb
push
stos
mov
call
pop
clc
sub
jle
notb
dec
leave
pop
fmuls
lret
lcall
stc
sahf
loopne
push
addl
xor
cmp
cmpb
cmpsl
mov
jmp
jb
daa
lock
add
cmp
sub
lahf
leave
dec
mov
decl
lock
ds
sub
xchg
jbe
aas
cmp
jns
sti
imul
js
xchg
ja
pushl
dec
sbb
std
mov
push
idiv
mull
ret
sti
cwtl
loop
sbb
ljmp
pusha
test
jge
add
sahf
sti
xor
mov
cli
lahf
out
mov
cmp
mov
aam
idiv
ljmp
jnp
xor
add
and
cmc
cmp
add
sub
cmp
xor
arpl
scas
pop
cli
dec
and
lahf
add
and
shrl
pushl
filds
fcomps
dec
pop
pushl
loop
push
ljmp
aas
dec
lcall
repz
es
sbb
mov
or
xchg
dec
pushf
loop
clc
call
inc
mov
adc
cmp
hlt
imul
ss
std
ljmp
push
lods
outsl
outsl
adc
test
and
push
cli
repz
mov
std
rcrb
loope
stc
jno
xor
mov
mov
mov
mov
pop
fimull
psubw
leave
rcrb
das
mov
pop
cwtl
clc
xchg
and
lcall
dec
xchg
lea
jmp
int3
push
pop
mov
fcomip
lcall
and
gs
jp
inc
and
jb
pop
cltd
mov
pop
stc
xor
cld
incl
pop
cmpsl
jge
sarb
and
sbb
sbb
sub
lcall
add
xor
push
add
cmc
pop
mov
jp
pushf
fwait
push
mov
stos
push
sar
jmp
mov
lret
sti
rcrl
pop
clc
xor
addl
jp,pt
cmp
xor
daa
das
pop
lock
push
push
data16
dec
mov
arpl
xor
pop
mov
push
std
call
or
pop
xchg
ret
stos
push
mov
push
cli
in
ret
jne
mov
xchg
mov
aad
xchg
dec
in
sub
pop
or
add
and
ret
push
cmpsl
lods
mov
inc
out
cli
push
xchg
adc
jl
xchg
xchg
cmp
sti
lods
es
dec
sbb
lcall
lcall
std
enter
fsts
pop
fs
sti
xchg
das
popf
jb
subb
cmp
adc
inc
push
add
aad
cld
or
push
adc
lcall
jecxz
add
ljmp
addr16
jbe
inc
inc
fs
jg
adc
in
jmp
xchg
pop
push
and
jle
shl
adc
addl
ljmp
xor
inc
icebp
lods
ja
loopne
xchg
mov
mov
push
push
lret
sub
fcomip
pushl
pop
js
addl
cmp
xchg
pop
pop
decb
dec
or
mov
push
mov
and
and
push
inc
lcall
mov
jo
gs
call
adc
addr16
mov
lret
testl
fs
jg
dec
or
xchg
dec
adc
xchg
push
clc
xchg
test
dec
add
rcrl
mov
push
fnstsw
jmp
and
imul
add
xor
cmp
lds
ljmp
icebp
cltd
and
add
pop
lret
cmpsb
icebp
xchg
aam
call
push
dec
push
xor
sbb
mov
pushl
cmpsb
fistps
je
test
mov
sar
jo
mull
and
aad
xchg
scas
in
lcall
cmp
or
popa
push
xor
iret
nop
imul
dec
out
call
shlb
xchg
jp
adc
daa
pop
xor
jo
and
push
imul
test
inc
inc
lahf
adc
fstps
xchg
in
sub
loopne
mov
dec
inc
stos
iret
sub
sbb
pop
inc
cli
loope
xchg
int
xor
xchg
popa
mov
daa
int
sahf
mov
or
mov
sub
pop
movsl
dec
loopne
inc
es
test
xchg
movl
sub
mov
sub
ja
inc
and
or
outsl
push
sbb
ja
leave
ficompl
and
rcrb
xor
decl
cmc
push
repnz
jg
cmpsl
pusha
shll
divl
add
xor
mull
int3
and
popf
jp
pop
cmp
mov
dec
or
jl
call
cmp
int
mov
fs
out
fwait
mov
imul
inc
mov
int3
jns
fwait
add
fidivl
sub
xor
js
adc
jns
jno
push
ret
in
in
push
mov
shrl
push
inc
add
cs
jmp
stos
rcrb
push
or
pop
xchg
in
rorl
loopne
jne
pop
data16
lcall
test
push
scas
jle
call
sub
dec
mov
mov
cmpsl
jns
shrb
mov
or
jmp
cmp
or
mov
push
or
or
out
mov
aad
stc
lret
mov
cld
test
sbb
and
fcmovnb
lods
ret
pop
xorl
aad
in
stc
nop
das
adc
xor
fbld
mov
pop
addr16
and
add
cmc
or
lock
push
mov
jmp
incl
mov
xchg
mov
pushf
mov
rcl
in
movsl
mov
and
fs
pop
or
lcall
bound
imul
out
rorl
cwtl
loope
pop
loope
lret
inc
dec
jmp
daa
push
loop
cs
xor
lret
cld
xchg
xchg
iret
jle
inc
or
repnz
jns
sbb
ficompl
or
pop
test
cwtl
xor
es
fwait
cs
aad
add
movsb
cmp
ret
jmp
sbb
in
pop
cmp
cmpsl
pop
mov
sahf
out
mov
js
cmpsl
addr16
xchg
into
jg
popf
sbb
inc
cmp
jmp
ret
mov
in
or
outsl
clc
mov
jne
aad
shl
xchg
mov
adc
test
xchg
stos
incl
inc
sbb
cmpsb
and
mov
roll
decl
test
loope
insb
cmp
cmp
xor
icebp
test
mov
sub
sub
lcall
xchg
push
cmp
add
jl
jbe
shr
fwait
mov
fidivs
fimuls
pop
adc
xchg
sbb
call
lds
mov
inc
cmpsb
jmp
int3
cmpsl
mov
lret
xchg
adc
mov
sub
xchg
or
pop
dec
pushf
test
pop
pop
lcall
fisttpl
outsb
lcall
inc
test
insl
iret
testb
fdivr
cmp
fildl
rcrl
pop
icebp
cs
mov
mov
shr
call
sub
fs
jmp
test
aam
mov
sub
push
in
mov
inc
mov
fucomip
push
mov
mov
lret
fs
sti
pop
pusha
push
sbb
sub
or
pop
or
call
orb
jecxz
insl
int
dec
lods
xor
cmp
mov
mov
lock
fcomip
nop
cltd
jbe
inc
jecxz
ss
mov
mov
sbb
sbb
int
sub
popa
fsubl
mov
cwtl
imul
jl
inc
bound
push
jge
dec
fisubl
xchg
ss
adc
ss
stos
push
jnp
test
movsb
into
fwait
inc
cmp
mov
mov
incl
and
lods
mov
lahf
inc
mov
xchg
and
jmp
pop
clc
cmpl
push
inc
dec
jp
pop
outsb
out
jg
lcall
push
push
nop
scas
xchg
dec
call
nop
sbb
mov
decl
dec
add
adc
pop
popf
sbb
call
out
stos
lock
lea
mov
decl
xor
hlt
pop
push
addl
fdivs
push
aam
dec
insl
outsb
jmp
out
jge
push
lods
jg
jmp
mov
fstps
lods
scas
nop
lock
dec
and
outsl
xor
inc
mov
add
arpl
sbb
xchg
push
ret
loopne
inc
ret
jae
pop
test
adc
mov
xor
sbb
mov
call
xor
mov
push
iret
imul
incb
cwtl
mov
repnz
lcall
ret
mov
cmpsl
sbb
lods
push
decb
mov
sbb
mov
mov
dec
pop
repz
mov
pop
cmpsl
jmp
and
aaa
jge
sahf
loopne
lret
sbb
jae
cmp
xorl
shlb
sub
dec
push
int
js
inc
idiv
add
call
adc
sub
xorl
test
push
cmc
sarb
mov
sbb
shll
cmp
fisttps
test
mov
or
push
mov
xor
jg
lcall
imul
cmpsb
xchg
arpl
cltd
mov
pop
xor
or
pop
out
mov
push
or
sub
sbb
aas
ret
arpl
repz
lods
xor
sbb
adc
pop
ljmp
inc
xor
pop
add
in
outsl
movsb
and
push
xchg
faddl
movsl
and
and
xchg
mov
cmp
sub
ss
incl
or
add
push
mov
sbb
lods
shl
ds
stc
icebp
lcall
mov
xchg
insl
sbb
pop
xor
push
daa
aaa
mov
jmp
cmpsb
pop
push
lock
pop
push
out
fstpl
push
pop
jae
ds
cld
cmp
fadd
xchg
pop
or
pop
pop
push
sub
popf
xchg
cmpsb
incl
outsb
in
pop
jbe
or
ret
xchg
jno
add
in
lahf
mov
pop
pop
push
jp
in
cmp
jg
lock
mov
jbe
les
pop
push
enter
stc
xchg
mov
jmp
gs
aaa
add
and
popf
dec
nop
das
dec
les
ljmp
insb
ljmp
mov
sti
push
mov
jbe
xor
mov
cmp
or
mov
sub
adc
cmpsb
jno
adc
shrl
gs
lods
jbe
sar
xor
push
push
aam
or
mov
das
scas
jo
scas
stc
cwtl
outsb
jmp
dec
jae
ret
sub
mov
xchg
xchg
dec
in
dec
sub
shll
scas
lcall
imul
jl
clc
mov
loop
jne
paddd
jne
lcall
mov
ja
jno
rcrb
mov
mov
jecxz
xchg
decl
xchg
sbb
xor
repnz
movb
mull
add
cld
lahf
cwtl
inc
jne
test
testl
mov
mov
jp
mov
movb
dec
jmp
cmpsl
push
mov
xor
pop
pop
jns
ss
dec
jno
xchg
loopne
daa
push
mov
jmp
testb
imul
cld
inc
add
jmp
mov
jg
add
into
cmc
lock
ljmp
jo
out
stc
cmp
decl
sarb
das
pop
leave
sbbb
inc
lret
cld
sbb
test
push
lcall
repz
mov
sti
dec
push
mov
or
push
mov
jg
incl
mov
mov
xchg
test
jecxz
inc
shll
mov
sbb
jae
hlt
lods
sar
incl
rcrl
jmp
shll
xchg
es
fsubs
jns
cli
jne
or
lret
aaa
or
ljmp
xchg
orl
adc
cld
xchg
loope
sub
insb
pop
enter
xor
mov
push
in
add
ror
sub
leave
lret
into
mov
decl
inc
sahf
mov
lahf
mov
iret
pop
cmpsb
fistpll
pop
pop
inc
adc
sbb
push
outsl
add
decl
insl
jmp
mov
xor
daa
mov
pop
popf
jns
imul
fisttpl
call
insl
ret
fwait
or
test
incl
and
mov
and
arpl
sahf
mov
adc
jo
cmp
cmpsl
inc
add
lcall
xchg
sub
jmp
adc
dec
div
add
ljmp
testl
push
aas
adc
mov
mov
imulb
decl
call
dec
lods
mov
or
lods
sbbb
dec
xlat
pop
arpl
daa
push
aam
or
adcb
push
ja
int
add
push
movsb
subl
jl
cmp
scas
ffreep
jnp
or
jnp
in
mov
xlat
sub
icebp
jne
ljmp
and
arpl
push
cld
jmp
pop
jbe
dec
in
imulb
jl
add
movsl
scas
mov
sbb
lods
outsb
xor
stos
lret
nop
jmp
mov
push
hlt
in
je
push
cmp
sbb
incl
pop
in
and
aad
xchg
xor
push
pop
aam
and
inc
jns
int
xor
xor
inc
call
inc
cwtl
arpl
int3
add
lcall
xor
mov
aam
dec
pop
shr
inc
testl
jb
call
add
incl
and
dec
rclb
push
inc
xchg
sbb
lods
fs
test
fcomip
inc
cmpsb
mov
lcall
cmpsl
sbb
sub
mov
incb
jecxz
push
lods
call
aad
addl
jns
dec
jne
dec
mov
scas
xchg
adcl
cmp
std
inc
sub
je
inc
arpl
call
mov
xchg
or
fwait
jmp
cli
incl
scas
das
xchg
mov
stos
rcrb
pushf
jmp
into
sti
cmp
inc
sub
nop
xchg
xchg
out
xor
and
imul
and
xlat
mov
ret
divl
sti
mov
test
int3
mov
mov
mov
pop
pop
fwait
cmpl
jp
out
sbb
sbb
test
loopne
or
mov
roll
and
lcall
add
pcmpgtd
mov
mov
push
ja
rcll
cmc
call
sub
aad
lods
dec
add
je
test
arpl
mov
lcall
decl
push
jle
cli
scas
andb
xor
mov
push
int
adc
inc
mov
lcall
fcomps
xor
bound
or
je
jo
jno
sub
inc
lods
push
mov
lea
out
sti
pop
test
test
stos
mov
sub
dec
cwtl
std
hlt
jne
or
flds
les
push
mov
mov
mov
sbb
jp
ja
mov
push
cmpsb
sbb
scas
in
jns
movsb
aas
hlt
loop
sbb
mov
aad
daa
je
decl
push
xlat
mov
sbb
jg
cmpsb
cmpsl
sbb
scas
inc
call
in
sbb
jle
jno
mov
repz
shl
jae
dec
lods
jp
decl
mov
adc
call
ljmp
cmp
inc
decl
lock
dec
inc
les
xchg
dec
pop
push
jle
mov
rcrb
pop
mov
inc
sub
cli
aam
inc
filds
sbb
xor
mov
repnz
ljmp
inc
fdivrl
xchg
adc
idivl
sub
mov
repz
mov
incl
mov
out
stc
sub
dec
dec
add
in
cmc
dec
ss
pop
das
cwtl
pop
stc
mov
push
lock
fsts
mov
fcomps
cmp
iret
mov
mov
inc
out
add
sar
decl
js
mov
add
ja
jg
sub
xchg
cltd
push
cmp
or
fwait
mov
mov
push
xchg
or
pop
movsl
dec
cmp
pushf
cmpsb
and
lock
push
pop
xor
fs
shrl
dec
mov
inc
and
data16
xor
xchg
add
in
jbe
add
incl
mov
stc
addr16
dec
push
in
arpl
pop
loop
or
scas
mov
sahf
jmp
pushl
mov
sbb
xchg
dec
jae
sub
mov
lahf
js
add
clc
call
cmp
dec
loopne
lds
inc
push
repnz
add
fldt
shl
cltd
xchg
pop
jecxz
add
addr16
add
insb
fildll
outsl
mov
ud0
push
ret
mov
scas
dec
enter
sub
pusha
js
and
popa
mov
jno
cmpsb
std
pop
es
pop
js
sub
jmp
popf
jecxz
xchg
mov
jg
jle
lret
test
pusha
in
daa
xor
push
mov
push
js
cli
ret
xchg
dec
cmp
outsb
fidivs
xchg
xchg
mov
or
adc
shll
ljmp
and
es
jmp
fstp
imul
push
and
cld
into
push
push
mov
mov
aas
shlb
ficomps
push
push
pop
xor
roll
mov
jg
mov
and
xchg
or
sub
scas
pop
push
bound
dec
jb
jb
int3
in
incl
popa
jmp
add
or
insb
cmpsb
mov
addr16
sahf
adc
adc
pop
sti
call
xlat
mov
jmp
bound
xchg
rorl
ja
cmp
jne
lcall
and
mov
xchg
mov
jnp
push
in
fistpl
dec
mov
dec
test
inc
ds
and
mov
jp
xchg
ret
or
lcall
lcall
lods
adc
or
je
inc
cli
mov
jl
insl
in
call
sahf
inc
mov
add
stos
clc
and
or
lods
inc
inc
repz
xor
fcompl
push
push
jge
call
mov
nop
mov
jp
adc
mov
cmc
test
xor
or
call
mov
mov
shrl
add
daa
lock
movsb
push
push
sbb
stc
fidivrl
in
sub
lea
mov
mov
fimuls
fmuls
ficompl
mov
stc
adc
inc
add
lret
bnd
fmull
sahf
sub
pop
cmp
call
std
mov
lcall
loopne
test
test
jle
popa
dec
inc
int3
add
data16
loopne
lcall
pop
push
xchg
add
mov
scas
into
cld
int
aas
repnz
or
and
and
pop
mov
leave
test
cmp
ret
pushl
lcall
stos
and
inc
mov
jl
stos
jge
push
dec
jmp
push
shl
push
add
push
sbb
lret
cmp
clc
cmpsb
lcall
push
sbb
adc
or
mov
rcll
cld
lret
fisubrl
mov
sarb
call
xor
cltd
xchg
inc
lcall
lahf
mov
lock
mov
sbb
push
loopne,pn
pop
popa
push
repz
pop
xchg
or
call
out
mov
movsl
sbb
in
outsl
jne
test
or
incl
mov
mov
stos
add
fwait
inc
xchg
jae
imul
jg
decl
xor
mov
push
jb
or
dec
cmp
sub
inc
sbb
cmc
add
push
out
jl
aas
cld
shld
rol
scas
dec
mov
mov
es
xor
add
xchg
fcomp
push
ljmp
adc
cmc
pop
fwait
pop
std
in
popa
in
xchg
jmp
imul
int
mov
lcall
sbbl
xor
and
jl
mov
cmp
mov
cld
jl
cmp
cli
std
lahf
icebp
sub
mov
cmpsb
popa
sbb
adc
outsb
inc
add
das
cli
pushl
in
sti
lea
imul
pushf
mov
ljmp
sarl
sbb
rcrb
push
sub
rolb
jne
repz
fcoms
imulb
mov
jmp
and
lds
inc
pop
insl
call
push
pop
aam
xchg
in
and
imul
lahf
les
mov
insl
int3
dec
sub
inc
adc
mov
push
cltd
aad
mov
clc
call
inc
cmp
inc
jbe
aad
xchg
mov
inc
xchg
daa
inc
lahf
adc
xchg
shlb
dec
xor
dec
lock
dec
cmpsb
push
fisubl
sbb
je
xor
int3
xorl
mov
addb
movb
aad
mov
sub
mov
scas
push
mov
xchg
cmpsb
outsb
xchg
sbb
mov
cmc
arpl
adc
inc
arpl
dec
inc
mov
inc
scas
pop
or
shrb
repnz
or
dec
psubusb
repz
xchg
test
adc
cli
das
ffree
jecxz
data16
mov
sub
mov
mov
sbb
fnstenv
sahf
xchg
pop
imul
pushl
mov
mov
lcall
repnz
movsw
ja
lds
pop
icebp
ljmp
imul
inc
jnp
or
mov
lcall
shrl
lret
outsb
test
sub
dec
imul
dec
lock
mov
call
mov
ljmp
push
mov
repnz
sub
mov
mov
dec
iret
jmp
sbb
lret
es
xor
jns
ret
sbb
loop
push
inc
xchg
mov
jno
loop
mov
pushl
or
push
dec
xlat
mov
push
roll
xor
mov
decl
test
test
push
aad
dec
cmp
and
jnp
jb
xchg
xchg
cmp
daa
cli
ja
sub
add
fs
fistpl
mov
jne
sbb
sbb
jmp
das
bound
push
hlt
in
ficompl
mov
rcll
insb
lods
dec
nop
in
jne
lods
imul
and
cmpsb
out
cmp
ljmp
mov
inc
sub
lods
xor
sub
jmp
pop
out
test
popf
cmc
or
movsl
test
and
es
pop
pushl
dec
lods
icebp
movsl
stos
enter
jbe
pop
lret
hlt
data16
jbe
out
jl
mov
inc
push
jmp
sahf
je
add
movsb
xchg
xchg
ja
xchg
gs
mov
lods
xchg
fcomps
dec
fldt
setae
sbb
xor
sarl
xchg
in
test
sub
pushl
ja
insb
scas
scas
mov
ret
hlt
mov
sbb
in
cmpsl
aam
sbb
jnp
xor
pushl
dec
scas
loopne
jbe
jne
movsb
sbb
jno
push
daa
fwait
xchg
push
mov
jae
cltd
inc
or
arpl
rol
pop
push
cmpsb
push
lcall
out
xchg
int
mov
or
push
or
xchg
xchg
add
add
mov
std
insl
sub
mov
stos
test
push
or
mov
push
lret
lods
adc
sub
dec
mov
mov
fidivrs
ljmp
test
std
push
add
je
call
jmp
mov
push
mov
jnp
pop
mov
loop
add
test
xor
adc
cmp
call
in
clc
clc
and
loope
js
jne
fwait
nop
ficoml
mov
ja
pop
mov
fstpl
sub
xor
pop
loope
or
inc
decl
fisubrs
in
push
int3
inc
leave
imul
dec
and
mov
inc
jno
sbb
jecxz
or
pushl
test
into
push
rorl
xor
push
push
mov
sbb
shrl
loopne
out
movsl
xchg
stos
jge
dec
and
daa
add
cwtl
incl
clc
mov
mov
aam
andb
addb
cltd
call
call
push
in
out
push
and
xchg
jge
push
jno
and
pop
adc
clc
cmc
or
lcall
fs
cmp
dec
push
dec
ljmp
into
pop
popa
sub
sub
jge
xor
mov
lret
jl
incl
jecxz
movsl
mov
jge
cmovns
dec
mov
cmp
mov
incl
fwait
or
pusha
ss
xor
fldl2e
mov
decl
add
cmp
mov
ljmp
lds
xor
adc
xchg
add
xchg
mov
ret
les
push
repz
xchg
cltd
shlb
ret
repz
arpl
mov
sti
cld
movb
cmp
push
dec
add
fcmovnbe
jle
push
cli
pop
decb
dec
repz
cmp
push
lock
pusha
faddl
je
fildl
subb
shrb
inc
dec
mov
lods
test
push
sub
pop
mov
ljmp
sbb
adc
cmp
and
adc
test
mov
sub
repz
cmp
xchg
in
add
cmc
sub
incl
ret
xchg
fbld
hlt
loopne
dec
jmp
out
mull
test
shr
inc
or
lcall
cmpsb
sbb
push
xor
jo
jp
jne
adc
push
mov
sbb
arpl
push
sahf
rclb
fisubl
imul
dec
lret
clc
cmp
and
incl
shll
mov
out
rcrl
pop
jge
inc
scas
movsb
idiv
fcompl
insl
xor
insb
test
lahf
jg
sbb
adcb
or
inc
adc
std
arpl
mov
sarl
ds
mov
movl
push
or
mov
das
clc
cmp
add
push
push
push
jp
faddl
out
test
xchg
mov
incl
pop
cmp
and
and
mov
inc
jge
and
insb
xchg
push
inc
adc
aam
xor
out
mov
xor
nop
outsl
inc
add
test
mov
lcall
sbb
mov
outsb
push
aaa
adc
sbb
ljmp
sub
es
cmp
inc
mov
pop
or
mov
sbb
push
mov
or
pushl
cmp
rorb
stos
test
addb
call
xchg
fs
std
sbb
in
int3
rep
xor
mov
mov
pop
icebp
int3
test
jg
mov
cmp
mov
push
xor
je
push
xor
sbb
loop
mov
sub
mov
cmp
imull
or
dec
sbb
pusha
mov
mov
xchg
push
std
pushf
mov
and
inc
sbbb
xchg
addr16
ljmp
decl
or
or
pop
xchg
cli
adcb
das
loope
loope
cltd
jo
dec
in
dec
daa
sub
shll
sbb
sarl
icebp
mov
lret
adcb
leave
jae
scas
xor
jl
cmpsl
or
ret
fsubl
fbstp
xchg
test
cmpb
adc
adc
lcall
mov
sbb
add
pop
push
stc
adc
sub
xor
adc
dec
sbb
inc
loopne
int
test
sub
mov
fdivrl
cmc
add
xlat
dec
pop
inc
in
pop
adc
incl
out
popa
das
mull
popa
pop
pop
lea
mov
mov
mov
mov
lcall
cmc
gs
adc
ret
lock
mov
xchg
lea
test
add
pushl
lret
xchg
xor
aaa
sub
fwait
clc
lods
jbe
sti
out
jg
xchg
or
cmpsb
mov
ja
inc
or
add
jl
jge
incl
inc
lcall
aaa
addr16
jp
sarb
pushl
cltd
sbb
nop
mov
dec
lock
pushf
or
xchg
mov
movsl
mov
cli
ljmp
xchg
es
loopne
sahf
mov
inc
lods
mov
xchg
jl
gs
ljmp
fstl
lret
gs
or
movsl
adc
jp
push
stc
sbb
sub
decl
mov
push
mov
mov
pop
ljmp
lahf
int
xor
incl
xchg
jne
add
mov
ret
imul
sti
xor
mov
jo
xchg
lcall
pop
cmp
icebp
in
in
test
adc
adcl
nop
push
pusha
sti
xchg
shlb
fstps
stc
push
mov
pusha
mov
cmp
fwait
test
adc
inc
and
test
mov
outsb
mov
fcmovbe
ret
aad
jae
cltd
stos
decl
adc
dec
das
repnz
jno
lret
aad
test
mov
addl
in
sub
test
xchg
outsl
adc
dec
adc
repnz
mov
fcos
scas
clc
jmp
mov
fisttpll
and
int
or
mov
sbb
jmp
dec
pushl
arpl
add
inc
out
cwtl
into
aas
xor
pop
xchg
adc
sbb
decl
daa
adc
lea
int3
call
adc
pop
repnz
clc
push
cmp
and
or
ljmp
jns
incb
stos
lcall
subl
xchg
loop
push
leave
mov
xchg
push
or
jl
out
xchg
decl
push
push
dec
data16
iret
outsl
movsl
push
cmp
push
fwait
sti
je
les
incl
aam
sbb
aaa
in
dec
push
and
ss
jle
fcompl
jg
jnp
loope
mov
push
ss
loope
mov
lret
adc
sbb
or
test
or
pop
dec
adc
outsb
dec
or
adc
cwtl
ja
cmc
pop
std
or
push
cmp
mov
cld
pusha
push
repnz
pushl
in
add
adc
popf
mov
ret
mov
push
rcll
fs
sub
or
shl
mov
and
cmpb
lods
mov
push
out
dec
push
and
cltd
pushf
mov
cmp
das
push
test
aam
dec
dec
loop
sbbb
hlt
sbb
fildll
clc
pushl
ds
jo
out
inc
stc
aaa
and
inc
push
scas
repnz
call
xor
xchg
push
add
test
xchg
and
push
loope
call
adc
aas
or
stos
pop
adc
mov
les
loope
add
sub
xchg
and
jmp
jmp
int3
mov
fcoms
jae
inc
xor
stos
addr16
shl
shll
clc
js
mov
mov
ljmp
adc
je
adc
movsb
dec
cwtl
sbb
incl
or
cmpsl
mov
pusha
cmpsb
movsl
clc
or
cmp
insl
insl
cmp
jns
incl
stc
fimull
sahf
outsb
and
enter
fldenv
insl
add
pop
fwait
subl
outsb
jg
jl
push
or
mov
test
gs
mov
jl
inc
mov
ljmp
je
rcll
xlat
mov
in
aam
mov
inc
sub
and
pop
in
fwait
jge
inc
test
mov
inc
push
inc
test
mov
pop
mov
sbb
push
test
test
cld
decl
or
mov
fadd
lahf
sub
xor
cltd
mov
ljmp
orb
pop
int3
cli
adc
xchg
sub
ret
jg
pusha
repz
jae
cmp
test
fcmovb
jo
loopne
jg
jmp
inc
popf
mov
aam
sub
int3
sbb
popa
mov
imul
call
insb
inc
pop
les
push
imul
sahf
cmc
jge
lods
xor
inc
arpl
outsb
cmpsb
out
mov
xchg
adc
cmp
in
push
push
test
aam
imul
jg
mov
sarl
mov
push
pop
in
xor
pop
xchg
and
cmp
incl
js
inc
stos
or
dec
pop
sbb
nop
insl
xlat
push
adc
insl
cli
out
fildll
das
rcl
xor
bound
jg
jmp
cmp
lods
imul
decl
fcomi
lock
mov
mov
stos
add
pushf
jmp
jmp
jne
adc
aaa
push
mov
aad
pop
ret
mov
lret
cmp
cmp
decl
jecxz
lea
pop
mov
daa
cld
into
mov
jecxz
fsubr
repnz
decl
fcoml
push
iret
push
cld
test
mov
push
mul
dec
idivb
add
push
ja
call
mov
icebp
hlt
or
pop
mov
cld
jecxz
fwait
sar
inc
cs
and
push
lods
or
inc
in
mov
and
xchg
popa
ja
xchg
outsb
jo
xchg
cmp
mov
pop
aas
jle
dec
imul
out
push
mov
xor
sbb
pop
imul
xor
loopne
mov
out
sub
mov
or
mull
jnp,pt
inc
cmp
mov
les
addr16
add
gs
add
sbb
push
aas
cli
incl
addr16
inc
testb
push
and
testb
mov
jmp
push
sub
sbb
xor
mov
push
call
add
mov
sahf
inc
push
cmc
add
lds
sub
push
sub
stc
sbbl
aaa
push
mov
inc
lcall
sbb
adc
pop
pop
decl
fsts
sti
mov
je
addl
jmp
fnsave
adc
mov
mov
popa
push
loop
aaa
cli
daa
jp
cmc
jp
pop
dec
xorb
lcall
icebp
jmp
sbb
loopne
out
push
out
test
mov
or
mov
decl
out
and
pop
outsb
into
jo
cld
scas
insl
sub
lds
fisubs
jg
aad
xchg
pop
cmp
dec
jne
push
movsb
cmp
fsubl
jge
lock
call
in
inc
push
dec
pop
insb
sub
mov
and
sti
xchg
gs
ljmp
fnsave
or
and
inc
out
hlt
test
in
popf
stos
cmp
xchg
push
mov
push
clc
les
xor
xchg
push
sbb
icebp
cmp
jmp
cld
xchg
jnp
jo
pusha
pop
stos
insb
decl
fsubrs
test
fwait
adc
and
call
cmp
push
outsb
jnp
push
jecxz
xor
adc
incl
adc
pop
inc
sbb
daa
std
add
dec
out
xor
xchg
bound
das
rorb
mov
int
or
mov
or
dec
dec
popf
es
daa
xchg
or
or
xchg
je
call
nop
dec
mov
lret
xchg
and
in
push
push
and
sbb
add
incl
std
scas
mov
cwtl
nop
lods
lea
lds
cmp
pop
cmp
mov
jmp
pushf
movsb
loop
adc
cwtl
or
pop
and
xor
in
adc
jg
cmp
movd
or
sub
iret
cmp
shlb
pushl
dec
imull
and
leave
mov
and
lret
mov
jmp
jp
adc
lret
stos
pop
imul
js
es
loop
pushl
add
hlt
jns
pop
cmp
pushf
inc
sbb
and
in
cli
gs
decl
lret
sbb
push
mov
sarl
mov
cmc
pop
sub
shrl
sbb
ret
mov
or
or
ljmp
les
xor
inc
lret
jl
mov
fisubrs
inc
lods
repz
dec
cmp
push
inc
jo
adc
dec
div
xor
call
jbe
lds
push
gs
lret
lahf
pop
cli
mov
mov
jge
mov
incl
add
mov
pushf
xchg
sbb
pop
add
jp
jle
mov
decl
adc
fwait
aaa
loope
jmp
sarb
loopne
jno
pop
loopne
lods
cmc
jmp
out
xor
insl
roll
pop
aas
push
sub
gs
mov
idiv
arpl
xchg
xor
aas
test
sahf
adc
fwait
loopne
rcrl
cli
ret
adc
jmp
jmp
mov
das
pop
dec
fxam
insl
jbe
outsb
xchg
adc
aad
sbb
dec
sub
or
dec
popa
add
xchg
icebp
shr
sub
adc
lcall
shll
sahf
dec
xor
shl
dec
fbld
cmp
xchg
ret
ljmp
das
sub
inc
pop
les
xor
out
sub
push
inc
dec
jp
mov
jle
mov
xchg
fidivs
jne
pop
inc
fimuls
fstps
mov
lcall
jns
rolb
outsl
mov
arpl
add
inc
movsl
aam
test
ljmp
jl
insl
bound
aas
jb
and
in
push
out
out
mov
movsl
std
inc
mov
jle
in
adc
repz
out
daa
or
xchg
out
jae
aaa
dec
push
sysexit
stc
testl
out
adcb
mov
xor
sti
mov
pushl
fstl
sbbb
pmaxsw
mov
call
cmp
push
ss
shlb
mov
out
mov
push
ficomps
hlt
scas
pop
pushl
xchg
fdivr
sbb
les
frstor
ljmp
test
stos
bound
jne
ja
pusha
xlat
pop
adc
ss
jmp
idivl
xchg
sbb
mov
dec
cmp
jmp
movsb
lock
mov
movd
call
fmulp
lahf
cmpsl
or
or
dec
shrl
scas
adc
ljmp
jmp
mov
stc
aas
pop
cmpsl
test
dec
adcl
mov
cmp
ljmp
pusha
push
inc
adc
inc
mov
push
xor
mov
mov
mov
mov
mov
mov
test
cld
xchg
jbe
lea
push
dec
mov
xor
cmp
movsb
movsb
sbb
jmp
les
in
fs
xor
adc
mov
push
loopne
adc
incl
inc
movsb
xor
dec
pop
je
jb
or
sbb
fcomip
mov
xor
inc
and
pop
push
pushl
add
jnp
mov
mov
inc
int3
and
test
insb
fisttpl
call
decl
lea
mov
das
bound
inc
adc
xor
mov
or
sub
repnz
in
push
dec
test
mov
push
mov
mov
mov
push
fimull
mov
dec
insb
insb
sub
or
lcall
dec
lret
sub
mov
subb
inc
cld
hlt
sub
pop
and
leave
clc
mov
je
std
imul
int
shrb
shrb
pop
lock
sbb
incl
aaa
ret
leave
sbb
pop
xchg
jne
and
dec
mov
pop
in
jb
ljmp
sbb
xchg
lret
pminsw
ss
in
cld
in
xchg
sarl
jmp
out
pushf
mov
cmc
xchg
jno
xchg
mov
data16
adc
popf
jmp
mov
pushl
mov
mov
repnz
cli
or
popf
pop
or
in
hlt
movb
fs
lcall
sti
nop
xchg
mov
test
ret
xor
loope
ljmp
fidivrs
dec
pop
xor
sub
es
das
xor
leave
xor
call
loopne
ljmp
in
mov
test
pop
add
xchg
cmp
arpl
mov
iret
andl
sti
pop
call
sub
imul
fdivr
sbb
sbb
rclb
cmp
aas
cmp
cmpl
popa
sub
lcall
cmp
shl
pop
ss
or
outsl
popa
jle
jle
sub
mov
repnz
sbb
incl
mov
fcomps
fwait
jmp
mov
xchg
cmpb
lock
clc
jg
fsts
inc
and
hlt
fidivrs
psadbw
sub
stc
jp
and
fcoms
incl
mov
lret
scas
and
xlat
mov
ss
xchg
cmpsb
cmc
in
or
or
cld
incl
cs
adc
cmp
fprem
pop
enter
pushl
cmc
mov
inc
es
adc
jg
incl
popa
mov
fidivl
or
pop
les
icebp
push
sbb
std
aaa
cld
dec
add
les
sti
or
dec
sarb
std
pushl
scas
jmp
faddl
jns
mov
adc
mov
call
or
inc
pop
cltd
test
aam
xchg
repnz
outsl
popf
jl
push
inc
xor
cmp
push
js
mov
jb
aam
push
cmp
fbld
adc
sbb
out
test
mov
pushl
jne
xor
addr16
outsb
push
dec
fiaddl
inc
push
insb
clc
jmp
repnz
aaa
add
jmp
pop
inc
inc
hlt
cli
pop
sub
out
adc
inc
fdivs
push
les
shrb
pop
mov
pop
cmp
popa
outsb
xchg
lods
cld
xchg
sbb
div
cli
push
pop
mov
and
insb
jno
in
mov
push
jo
push
cmp
add
lea
jnp
push
fidivs
test
or
dec
rorl
jmp
mov
scas
or
pop
aaa
adc
cmpsb
int3
ret
lea
mov
cmp
insl
push
or
xchg
lea
fmull
mov
rcr
movsb
inc
scas
adc
call
inc
cwtl
mov
xchg
mov
pushf
inc
into
int
sbb
jnp
xchg
and
nop
cmp
lret
pushl
mov
push
xchg
jg,pt
cmc
and
fs
inc
xchg
jns
cwtl
cmpsb
in
mov
cmpsb
mov
sub
lcall
movsl
mov
das
jns
in
nop
hlt
dec
adc
or
add
aaa
int3
je
pop
pop
cmc
inc
or
cwtl
inc
add
adc
adc
xchg
push
inc
mov
and
orb
test
mov
push
cs
adc
in
lcall
sahf
pop
cmp
mov
call
call
lcall
les
or
dec
mov
and
rcrl
popa
add
or
dec
xchg
mov
push
leave
adc
repnz
dec
shr
or
clc
inc
cmp
add
call
pop
jmp
lods
ss
mov
inc
xchg
subl
push
test
ficoml
jl
daa
popa
lock
inc
int
outsl
in
pop
and
dec
lret
mov
out
stos
add
mov
ljmp
xor
sub
mov
xor
xor
jmp
or
jp
mov
sub
mov
dec
xor
out
hlt
ret
imul
idivl
std
xor
or
dec
in
pop
mov
mov
incl
push
sarl
imul
ss
sahf
xor
mov
int
mov
jb
and
dec
loop
rorl
mov
loop
mov
pop
lahf
and
push
es
cmp
xchg
lcall
outsb
lea
or
jmp
icebp
push
xor
call
push
sbb
xor
push
roll
das
xor
imul
cmp
push
and
xor
js
mov
imul
pop
adc
or
fcomip
outsl
clc
test
faddp
or
div
mov
je
mov
xlat
jne
decl
xor
mov
popa
pop
adc
mov
adc
or
dec
sahf
ja
jecxz
push
dec
add
jmp
cs
cmpsb
mov
cwtl
cmp
fcoms
add
jmp
cmp
fadds
out
xor
xchg
mov
jge
movsb
data16
jno
outsb
inc
add
mov
arpl
pushl
dec
lea
lods
lret
nop
iret
jbe
or
hlt
inc
cltd
ja
sahf
sbb
or
fwait
mov
mov
out
adcb
and
repz
or
repnz
pop
clc
xchg
incl
addr16
dec
mov
hlt
inc
xor
ret
dec
test
pop
sbb
lcall
add
mov
aaa
and
repz
mov
bound
or
dec
shl
stc
sbb
jo
xor
push
ljmp
jno
xchg
sub
flds
fdivs
mov
hlt
or
fs
push
inc
jge
cmp
call
sub
ljmp
std
mov
rcrl
pusha
xchg
loop
popa
add
jg
inc
arpl
rorl
int
idivb
push
mov
out
mov
pushf
add
decl
and
inc
cmp
gs
adc
mov
and
xor
fldcw
lcall
cmp
fldt
aas
mov
or
outsb
imul
incl
push
or
mov
inc
pop
mov
dec
mov
mov
call
jbe
inc
dec
hlt
sub
mov
testl
mull
inc
pop
movsl
pop
in
mov
push
dec
lret
or
sub
push
jb
mov
adc
mov
test
mov
mov
or
cmpsb
xchg
ja
sbb
xchg
sahf
hlt
adcb
adc
sti
mov
shrl
xchg
sbb
add
imulb
testl
cli
lcall
dec
mov
push
xchg
pusha
jns
call
and
pop
sub
jmp
mov
xchg
push
inc
push
stc
add
sbb
fsubl
fmul
or
or
filds
xor
jae
iret
ljmp
push
jmp
lcall
cmp
imul
mov
jg
imul
sbb
push
mov
jbe
scas
push
hlt
push
aam
sbb
fsts
sub
stc
mov
int
rorb
ja
jno
mov
jne
stc
test
nop
cmpsl
lret
dec
pop
mov
aam
inc
cli
stos
pop
iret
inc
hlt
call
mov
arpl
inc
jmp
sbb
in
out
cmpsb
decl
adc
paddsb
adc
out
mov
test
pop
or
pop
sub
pop
gs
push
pusha
mov
arpl
imul
repnz
pop
dec
cmp
push
test
call
add
js
out
sbb
cltd
ret
enter
and
rolb
xor
rcl
cmp
arpl
rclb
sub
popf
in
and
adc
ret
xor
hlt
jp
pop
das
cli
decl
push
xchg
mov
enter
xor
dec
pop
loop
mov
int
test
ljmp
cmp
pushf
inc
nop
dec
and
xchg
or
pop
jg
pop
xor
orb
or
clc
jge
aad
jmp
shlb
jmp
pusha
xor
xchg
pushf
push
inc
test
arpl
add
or
dec
pop
decl
cmp
scas
push
notb
fmull
mov
mov
xlat
xorb
jl
sub
cmc
jmp
jmp
popf
fpatan
jmp
cwtl
inc
mov
outsb
adc
ret
pop
decl
xchg
mov
sbb
or
je
mov
inc
mov
fists
js
mov
fsubr
sbbb
es
jmp
add
incl
aad
rclb
cld
aaa
and
fwait
jp
int3
pop
fdivs
lret
test
xor
mov
aam
and
cmp
std
pop
sbb
loop
and
scas
jb
inc
movsl
nop
xchg
lret
xor
inc
push
or
and
jmp
iret
dec
jmp
adc
out
add
cld
out
cli
into
sub
das
fdivr
ljmp
cmp
popa
or
lds
push
jne
into
mov
imul
jg
das
into
cmp
sbb
popf
stc
adc
xchg
pop
jns
or
fs
loop
stos
loop
call
jge
test
movsl
clc
test
cmp
addr16
push
adc
mov
push
cmc
mov
ljmp
imul
push
sahf
rorb
and
scas
stos
push
test
out
shrl
adc
add
jns
test
dec
lret
inc
pop
cmp
add
mov
push
mov
fadds
cmp
lds
incl
idiv
bound
rorb
popa
mov
outsl
inc
xchg
jecxz
adc
movsb
call
call
sbbb
adc
mov
add
arpl
jmp
lea
int3
dec
inc
cmp
cmp
rcl
ds
sbb
inc
pop
bswap
in
sbb
dec
jl
aad
in
mov
jno
into
mov
xchg
fs
fisubl
popa
mov
mov
sar
incl
lret
mov
cld
sbb
and
jge
incl
lahf
pop
add
insl
int3
xor
and
daa
xor
test
mov
lcall
hlt
fldt
xchg
rcr
out
inc
mov
out
jecxz
cltd
add
out
mov
sarb
and
testb
mov
or
sub
mov
mov
inc
mov
dec
mov
push
pop
inc
adc
jl
xlat
inc
out
in
push
lock
sbb
cmp
dec
rclb
and
js
enter
sub
addr16
fistpll
inc
sbb
jbe
mov
push
push
jno
iret
and
add
adc
loopne
lcall
iret
clc
cld
inc
dec
daa
dec
jae
cld
hlt
inc
js
insb
ljmp
repz
loop
mov
and
in
bound
mov
inc
cmp
call
pop
insl
push
xchg
jno
loope
loopne
mov
cmp
mov
std
cld
lahf
cs
jmp
inc
lock
push
jmp
cmp
loop
or
call
and
decb
clc
push
push
pop
jecxz
xor
aaa
inc
scas
sub
dec
jne
jbe
lcall
jbe
mov
cmc
jge
mov
sbb
dec
arpl
ljmp
cmp
push
dec
bound
int3
add
and
adc
fwait
cmp
push
fcomip
pushl
dec
mov
or
pop
dec
orl
jmp
jne
xchg
cs
pop
pop
incl
cld
fs
test
nop
push
xchg
decl
lock
cmp
sbb
pop
dec
cmpb
jmp
es
pavgw
push
fnstcw
jae
pop
js
cmp
aaa
subb
mov
cmp
mov
icebp
push
add
imul
in
fisttps
lods
mov
inc
xor
ds
jmp
ss
nop
and
mov
push
pop
iret
mov
sub
sti
adc
and
call
shrb
addr16
pop
jno
fucom
xor
mov
shlb
cmp
push
cwtl
loop
std
cmc
lret
mov
cmp
push
xchg
pop
xchg
stc
mov
mul
push
adc
mov
clc
js
sbb
pop
fnsave
xor
js
outsl
xchg
call
push
add
incl
shll
pop
mov
inc
jnp
enter
add
idivl
incl
repz
loop
xor
es
repnz
iret
incb
jecxz
mov
cld
outsl
fsubr
in
xchg
add
add
sbb
or
inc
xchg
lds
xchg
aas
adc
fsubrs
test
cmp
mov
ret
inc
cmp
mov
jnp
pop
lcall
dec
pop
testb
cmpsb
pop
test
incl
xchg
add
pusha
movsb
cmp
ficomps
out
sbb
ficomps
gs
lcall
test
dec
adc
imulb
loopne
lock
fisttpl
and
lock
push
mov
xchg
jp
stos
add
mov
call
test
ja
int
mov
dec
es
hlt
mov
add
xchg
divl
xchg
xlat
aaa
push
fdivl
lcall
push
lock
inc
cmp
pop
xchg
aaa
xor
xchg
pushf
loope
rcrl
jne
cmp
pushf
cmp
sarb
sbb
mov
outsb
data16
adc
push
out
xor
mov
jg
xor
dec
add
ljmp
clc
sbb
jmp
ret
push
lahf
int
test
add
popf
add
dec
jp
test
jmp
xchg
adc
mov
sbb
mov
jl
mov
fbld
stos
add
testl
ret
or
imul
js
mov
fidivl
or
adc
mov
mov
lcall
or
pushf
cmpsb
add
imul
push
popa
push
ljmp
das
mov
sbb
mov
and
jmp
pop
hlt
ret
mov
mov
or
enter
push
ljmp
push
sbb
movsl
inc
sub
mov
xor
sbb
xor
test
lcall
in
jbe
stc
push
push
push
js
in
xor
and
sub
lods
push
aaa
dec
inc
xchg
adc
fsts
ja
add
push
inc
add
inc
dec
mov
add
inc
and
in
repnz
jmp
dec
aaa
push
cmp
or
mov
andl
xchg
adc
push
mov
adc
inc
mov
push
test
or
mov
scas
ficomps
popf
stc
ja
mov
push
js
xchg
lock
pusha
sbb
decl
xor
mov
pusha
fstps
dec
popa
cmc
mov
rorl
push
pop
out
jb
aaa
dec
movsl
push
or
call
fninit
scas
ds
imul
mov
repnz
add
inc
push
clc
movsb
rorl
mov
decl
mov
and
push
stos
xor
int3
sbb
cmpsb
test
xor
mov
push
xchg
cmp
sbb
xor
mov
add
pop
insb
jae
pop
aaa
or
jg
sbb
testb
clc
inc
mov
jp
mov
ljmp
mov
test
andb
mov
ret
jbe
xchg
mov
jbe
or
or
stos
pop
les
popa
leave
mov
fdivs
jp
jmp
mov
js
in
pop
and
xorw
pop
mov
movsl
lret
mov
jg
pop
inc
cmp
lahf
iret
inc
das
add
inc
shlb
push
push
mov
mov
std
lcall
jo
hlt
mov
cmpsb
fs
shl
push
mov
jg
pop
mov
fdivp
cld
mov
add
lahf
aam
add
fdivrp
lcall
pusha
int3
or
cmp
and
ss
lret
stc
jecxz
call
shl
insl
in
mov
cld
insl
xlat
sub
mov
repz
lahf
mov
scas
lret
adc
adc
mov
cmp
jnp
cwtl
movsb
repnz
out
adcb
test
in
out
imul
mov
push
pop
into
insl
xchg
push
mov
pop
push
mov
mov
shlb
push
andb
inc
scas
mov
xchg
add
mov
and
xlat
mov
outsl
test
cmpsl
outsb
aam
or
hlt
cmpsb
stc
jae
cli
jg
xchg
sbbb
sbb
cmpsl
and
mov
adc
sub
jle
cmpsb
ljmp
hlt
pop
mov
jns
push
mov
xor
and
dec
aam
in
ljmp
aam
orb
in
inc
mov
movl
jo
fsubp
lods
or
add
incl
lret
rcrl
gs
mov
inc
and
cmp
js
ja
int3
fidivrs
push
stos
jnp
out
add
sahf
dec
push
pop
dec
clc
stos
push
lea
lods
adc
dec
fprem
mov
mov
aad
cmpsl
add
cli
mov
aad
es
fcomip
push
orl
decl
cmp
add
sbb
xchg
mov
sub
fisubs
pop
or
sahf
mov
fldcw
mov
je
ret
mov
sbb
into
mov
cmp
mov
jmp
pop
sub
sub
stos
cmc
add
dec
in
iret
inc
dec
add
js
jbe
sub
xchg
mov
inc
mov
mov
int
mov
lret
filds
lods
cmpsl
cmp
sub
push
inc
xchg
push
mov
call
imul
pop
inc
mov
sbb
cmp
insb
jge
mov
cmp
pop
xchg
rcrl
jmp
lds
fcompl
ds
int3
and
inc
inc
fdivr
adc
lods
repz
pushl
rorb
scas
mov
aad
popf
in
jb
js
jmp
cs
iret
loope
insl
mov
fwait
pushl
subl
pusha
dec
fdiv
pushl
mov
adc
fiaddl
mov
mul
cld
adc
jle
dec
xrelease
jg
jecxz
lods
outsb
mov
xchg
out
add
fsubrp
xor
cmp
pop
stos
jbe
int3
decl
add
repnz
addr16
sti
push
and
add
ss
inc
jnp
popa
sar
pop
cmc
test
xchg
push
pop
jae
movsb
mov
daa
fbstp
sbb
jle
ja
decl
mov
stos
cwtl
test
lcall
rcr
jae
cli
push
stc
dec
dec
insb
sub
popa
jno
ljmp
lds
inc
mov
js
mov
jg
xchg
ret
sub
cmp
test
push
filds
sti
xchg
mov
xchg
push
lcall
inc
les
cs
and
and
pushf
bound
inc
sbb
inc
hlt
nop
xchg
mov
dec
sub
pop
adc
fsubr
loope
dec
lcall
notl
push
dec
sub
test
xchg
pop
or
pop
hlt
mov
lock
outsb
cmpsb
cmpsb
xor
cs
jmp
ret
insl
sub
mov
jne
mov
add
inc
mov
fldt
inc
mov
and
xlat
jae
sub
cmp
cmp
decl
pop
daa
jbe
movsb
push
xchg
jp
lock
daa
push
sub
xor
mov
mov
mov
daa
pusha
dec
mov
jae
repnz
push
xor
imul
xor
add
mov
out
ljmp
adc
cmp
jg
fwait
and
addr16
mov
out
adc
push
cmpsl
mov
jae
or
jp
in
out
mov
out
adc
pop
cmp
mov
jg
adc
ret
pop
fistpl
stos
jle
repnz
call
ret
aas
in
sub
and
sbb
xor
or
es
lcall
pop
stc
addr16
cli
pop
scas
jo
mov
repnz
cmp
call
mov
xchg
inc
mov
addr16
int3
and
jmp
cli
inc
adcl
insb
mov
jns
xor
xor
pop
arpl
lea
loop
push
sarl
adcb
incl
rolb
jnp
gs
mov
inc
gs
pop
mov
pop
orb
xchg
cmc
jl
mov
cmp
ret
mov
mov
and
idiv
scas
mov
jle
mov
push
xchg
loope
in
mov
pushl
dec
pop
pop
pop
push
jne
and
aas
aam
les
in
sbb
fistpll
insb
sahf
add
mov
into
dec
stos
divl
decl
mov
cld
xor
mov
dec
or
cld
test
sbb
ljmp
add
sub
lea
sarl
rcrb
bound
cltd
psraw
lcall
test
pop
adc
js
dec
pop
imul
sbb
rcrb
leave
xchg
jns
jmp
aas
push
mov
and
repz
scas
aam
rol
scas
mov
push
mov
cli
fs
mov
mov
sub
pop
or
inc
pop
mov
sarb
incl
inc
xchg
loop
jl
xor
jmp
push
icebp
out
inc
mov
xchg
out
int
inc
incl
adc
les
clc
add
push
mov
pushl
push
or
pop
xlat
adc
hlt
xor
filds
frstor
xchg
xlat
pop
test
add
mov
dec
or
or
ljmp
ss
pop
or
sub
dec
mov
sbb
jl
mov
adc
out
scas
and
dec
icebp
push
aam
mov
jmpw
cld
xchg
jb
pop
imul
add
mov
mov
popf
or
cmp
test
cld
jmp
ret
pop
mov
in
xchg
cmp
xor
cmp
adc
repnz
jg
call
data16
testl
push
jg
call
dec
out
insb
lock
call
dec
adc
scas
repz
sub
pop
sahf
ficomps
adc
mov
fistps
stos
jp
cwtl
xchg
or
ja
mov
cmpsb
inc
pop
adc
mov
xchg
pusha
call
iret
xor
jmp
fs
out
mov
sub
xchg
call
xchg
mov
cmc
inc
movsb
sub
test
orb
es
xor
sbb
incl
jge
iret
cmp
fildll
lret
jle
js
hlt
dec
push
scas
push
fwait
incl
xlat
mov
sbb
popa
inc
nop
ja
xchg
mov
bound
incl
out
pop
sbbb
or
daa
pop
mov
cld
fidivs
js
sbb
movl
cmp
mov
push
fucomp
imul
add
inc
sbb
mov
inc
sub
jne
shlb
aad
mov
fildl
and
insl
in
lahf
push
mov
lcall
jl
or
push
mov
push
iret
mov
popa
lahf
push
das
rcr
popa
dec
cmp
xchg
inc
jnp
in
jge
subl
sbb
sahf
or
jnp
sbb
mov
int
pusha
cmp
ljmp
fst
xorl
adc
fldenv
push
jmp
sbb
fists
call
into
mov
pop
repnz
popf
pop
xchg
das
and
sbb
pushl
std
xor
push
push
cld
addr16
jp
lea
jns
call
loope
leave
stos
dec
popa
xchg
xchg
mov
sahf
mov
jnp
iret
jge
cmc
fistps
loopne
aad
jmp
popf
cmp
lret
bound
dec
int3
int3
arpl
push
ret
inc
dec
inc
push
pop
dec
out
jg
jecxz
out
in
or
scas
push
mov
xlat
pushf
dec
fsubrs
test
std
pop
aas
and
stc
gs
out
clc
add
lret
es
pushf
adc
cmpsb
sub
adc
in
lcall
incl
adc
adcl
stos
insb
xchg
jne
imul
clc
inc
mov
repnz
bound
out
xor
inc
dec
loopne
in
mov
mov
inc
pop
es
xchg
aad
decl
sarb
cmpsb
jmp
call
add
ret
out
push
inc
jecxz
ljmp
loop
ljmp
pop
lea
movsl
movsb
mul
pushf
dec
pop
push
push
test
push
cltd
dec
movsb
push
jg
adc
inc
push
inc
fsubrp
push
pusha
lock
pushl
fwait
shrb
or
test
push
lahf
xchg
xor
cmp
jmp
ljmp
ljmp
cli
ret
adc
sbb
cli
inc
pop
mov
add
das
ja
stos
aad
cltd
call
adc
stc
popf
and
add
xchg
shl
push
jg
push
xchg
movq
call
inc
addr16
js
rolb
mov
jmp
push
inc
and
mov
sub
xor
aam
lret
mov
jmp
fidivrl
jecxz
sbb
push
sub
lcall
add
jecxz
dec
loopne
sub
mov
jmp
movsl
sub
adc
cmp
inc
out
ja
pop
aad
inc
add
out
jle
and
es
push
shlb
das
aad
popf
adc
mov
in
arpl
stos
insl
sbb
inc
lret
shrl
fsts
push
adc
pop
movsb
xchg
adc
subl
mov
mov
cmc
cmc
inc
xchg
lcall
incl
dec
das
ficoms
icebp
jg
gs
mov
sub
or
icebp
and
cld
decl
push
pop
stos
jle
cs
xchg
dec
xlat
ss
fucomip
sarl
dec
movsw
mov
incl
sbb
adcl
pusha
add
mov
pop
dec
xor
int3
xchg
push
pushl
push
xor
dec
bound
inc
cvtdq2ps
pop
sub
pop
out
xchg
call
paddusw
dec
cmp
sti
jl
cmp
cs
movsb
stos
mov
aas
call
out
jne
aad
out
cmp
in
jbe
ret
pusha
rcrb
adc
jg
out
add
rol
cwtl
out
sbb
cmpsb
stc
ret
repnz
dec
xchg
sti
xor
xchg
mov
addr16
in
lcall
mov
inc
or
inc
or
mov
sarb
push
lock
mov
and
sub
xor
fbld
ljmp
dec
mov
outsl
mov
sbbl
and
enter
fcompl
and
jb
aaa
js
push
scas
fmuls
incl
inc
mov
xor
loopne
in
add
aas
cltd
pop
mov
xorl
lcall
out
or
or
outsl
mov
xlat
std
mov
dec
sub
in
jo
mov
fs
adc
add
cmc
pushl
mov
mov
cltd
aaa
mov
in
call
sti
lea
sahf
hlt
cli
fcomip
mov
out
jg
cld
clc
inc
test
mov
ljmp
pop
fsubrp
or
shl
xchg
fsubrl
cwtl
gs
jb
sub
add
call
mov
and
fnstsw
pop
out
aam
push
repz
call
pusha
mov
aam
dec
scas
iret
sub
mov
popf
xor
jl
jl
add
ljmp
mov
scas
pop
mov
fildll
sahf
or
mov
dec
sbb
or
call
jb
ret
aad
xchg
sbb
pop
mov
or
mov
jb
bound
testb
push
mov
mov
jmp
ud0
and
imul
inc
dec
jno
cmpsl
push
aam
push
lods
sti
push
jp
xor
fidivrl
adc
pushf
mov
mov
ficompl
push
addl
rcrb
dec
ss
lea
fidivrl
and
pop
pushf
std
pop
mov
jmp
pop
lods
fadds
jl
xchg
jmp
cmp
and
push
push
ffreep
lods
push
push
xor
mov
or
add
lds
jecxz
sbb
aas
hlt
mov
mov
data16
test
sbb
pop
mov
pop
mov
decl
add
jmp
mov
pop
sbb
push
subl
decl
xchg
inc
push
jb
in
aam
subb
sarl
adc
lods
adc
mov
shrb
outsl
sub
shr
mov
bound
cli
add
pop
push
cmp
pop
hlt
fucom
test
add
mov
scas
jne
in
sub
fs
xchg
dec
mov
sbb
add
sub
or
dec
rcrb
js
pop
jge
jmp
aad
jmp
in
pop
gs
mov
push
inc
es
dec
roll
adcb
outsl
add
mov
ljmp
dec
push
insl
test
out
int3
fdivrs
ret
cwtl
addb
in
sahf
adc
xchg
pop
push
sbb
ljmp
xchg
addr16
and
pop
int
jl
push
and
fcmove
adc
inc
test
sbb
dec
sub
sub
pop
cmpsl
push
mov
cmc
mov
or
shr
inc
mov
rcrl
or
lcall
fwait
sub
sarb
shr
loop
lods
sbb
sbb
mov
decl
lock
aam
movsb
jle
push
xchg
pop
mov
adc
jmp
pushf
pop
ja
lods
cld
xor
push
mov
lcall
ljmp
lahf
fisubs
icebp
push
cmp
mov
inc
leave
movsl
cmpl
lret
mov
decl
repnz
add
in
je
into
xchg
mov
gs
xchg
fwait
call
jp
and
adc
and
out
pop
mov
and
scas
leave
xor
call
popf
sub
xor
add
or
jae
cli
pop
cltd
push
movsb
pop
popf
or
lcall
out
out
lahf
xlat
cltd
mov
mov
pop
arpl
mov
inc
jnp
mov
daa
dec
adc
imul
call
call
dec
xor
xor
inc
cli
insl
xor
sbb
pushl
fmuls
stos
adc
jmp
stc
popa
adc
cwtl
mov
inc
dec
mov
incl
repnz
jns,pt
cmp
or
or
sub
sbb
ljmp
push
call
mov
dec
out
dec
pop
repz
push
xor
js
out
lods
and
scas
mov
push
imul
mov
stos
int3
cltd
div
stos
lds
pop
jmp
incl
adc
cmp
insb
sbb
aad
lds
loop
sub
ja
cmpsb
lods
mov
movsl
adc
mov
fdivs
inc
cmp
pop
sub
mov
fimuls
ret
movsb
in
mov
cmpsl
inc
aaa
xor
push
ror
out
or
mov
stos
fsubrl
imul
fisubs
mov
xlat
loop
outsb
jle
pushl
loope
jae
movl
adc
inc
lahf
push
iret
mov
aad
and
push
inc
aas
insl
cmpsb
push
and
xlat
pop
scas
out
das
pop
je
push
push
xchg
pop
dec
stc
neg
mov
jecxz
call
jo
sbb
fnstsw
xchg
jns
ljmp
cli
std
sub
sub
mov
cmp
jbe
push
jl
and
pushl
jmp
lods
in
mov
dec
mov
mov
mov
js
lds
int
sbb
xlat
js
jg
sub
inc
pushl
arpl
pushl
pop
cmpsb
cs
ret
in
cmpsb
lds
jl
das
test
jmp
icebp
adc
mov
arpl
jmp
mov
fs
imul
iret
je
popf
add
sub
dec
pop
popa
fisubl
lahf
fdivrl
std
push
dec
xchg
mov
mov
fs
imul
mov
addr16
xchg
jb
testb
mov
icebp
ljmp
rcll
inc
ds
mov
mov
xorl
gs
fisttps
xchg
sbb
cmp
pusha
mov
dec
loopne
fwait
testb
mov
jmp
sub
mov
out
leave
inc
xchg
cmp
lret
xor
aaa
cmpsl
mov
pop
pop
popl
xlat
cli
in
jg
ret
in
pop
pop
sbb
mov
call
xchg
decl
cs
jle
imul
jg
pop
in
mov
scas
and
adc
mov
cli
mov
xchg
loopne
mov
mov
mov
push
ret
shr
adc
call
int3
imul
mov
mov
lahf
sub
push
insb
nop
in
pushl
xchg
push
xchg
inc
jge
inc
cmp
addr16
popf
sub
jae
shlb
addr16
jecxz
or
adc
js
jmp
jno
push
data16
stc
es
sarl
jecxz
add
jb
sbb
mov
shll
clc
pop
rorb
jmp
pop
lds
popa
mov
lret
repnz
mov
movsl
cwtl
sbb
test
in
mov
pushl
inc
repnz
pushf
sub
push
lds
mov
fidivrs
jmp
decl
dec
or
nop
shr
data16
cmc
das
and
pusha
pop
add
pop
cwtl
xchg
xor
lea
sub
inc
aam
cmp
mov
and
xchg
dec
sub
jmp
sub
sub
pop
jecxz
aaa
inc
repnz
aaa
scas
mov
xor
or
xor
call
push
pop
test
push
xor
popa
addr16
jae
pop
inc
and
rcr
aaa
pop
clc
cmp
lock
mov
push
sbb
into
in
clc
outsb
add
cs
inc
test
test
or
sti
lcall
cmp
push
inc
mov
int
mov
push
sarl
rolb
mov
jbe
or
add
xor
fucom
out
test
ja
frstor
lret
addr16
push
push
fimuls
jmp
ret
fidivl
push
insl
mov
test
in
xchg
pop
push
je
pop
je
inc
or
jmp
add
ljmp
cli
fildl
dec
inc
xchg
rorl
les
into
xchg
push
mov
push
repz
jge
hlt
maskmovq
idivl
rorb
sbb
fidivl
loopne
pushl
xchg
lcall
rorl
xchg
adc
faddl
dec
cmp
mov
or
idiv
cmp
fiaddl
dec
fidivrs
cmp
jnp
mov
and
xchg
lock
incl
ud2
loope
pushf
loop
sbb
push
and
mov
shlb
call
popf
popa
cltd
leave
and
mov
jmp
cmp
int3
lcall
fdivrl
pushl
int
jns
mov
mov
int
mov
push
int3
push
testb
decl
sbb
cmp
dec
pop
xchg
xorl
fucomi
mov
ja
stc
inc
or
fwait
int
sub
decl
pop
add
arpl
push
aam
orb
mov
sarb
mov
xchg
fdivs
int3
inc
pop
jg
test
jbe
lea
cs
ljmp
test
or
add
sar
mov
nop
jne
mov
fwait
js
insl
mov
adcl
ljmp
mov
out
mov
stos
cltd
xor
cmp
aaa
das
jmp
jo
mov
xchg
repnz
fwait
or
and
fldenv
jbe
fs
orb
fdivr
lcall
dec
cmp
mov
cld
jbe
jmp
test
mov
hlt
lahf
nop
outsl
pop
and
call
les
repnz
xor
das
pop
mov
add
inc
imulb
cmp
int
fadd
push
mov
std
fwait
decl
decb
ds
xchg
mov
insb
pushf
loope
mulb
pushl
fwait
ja
or
mov
mov
ljmp
loop
push
lods
cltd
push
decl
sub
cmp
xor
jae
aaa
mov
xor
ret
adc
and
and
lahf
xor
sub
test
xchg
lret
pop
jl
addl
pop
into
sub
test
and
pushl
ljmp
jns
or
cs
xchg
and
mov
insb
cltd
mov
and
or
lods
jo
pusha
cmp
dec
outsl
sarl
cwtl
clc
add
mov
pop
xlat
loope
xchg
clc
inc
cltd
mov
fcoms
pop
lea
fistpll
rcll
pusha
decl
test
add
cli
sahf
mov
sbb
cs
adc
inc
repnz
sahf
lock
lret
aad
add
mov
popa
jmp
sub
clc
mov
fisubl
test
arpl
ljmp
pop
nop
inc
xor
mov
lock
xor
adc
sbb
jnp
rolb
pop
xchg
jnp
jmp
inc
pop
fistpll
mov
ljmp
out
pushf
fmull
jo
dec
lods
aaa
std
ljmp
cmpsl
in
mov
scas
mov
mov
inc
mov
pushl
aam
cli
rdtsc
aad
push
lds
out
clc
sub
xchg
or
push
mov
push
decl
scas
out
test
bound
cmpsl
pushf
jo
mov
dec
jecxz
dec
and
ljmp
or
fdivrl
or
mov
cmp
lea
scas
ret
fcomip
mov
push
push
mov
pop
push
push
mov
mov
lcall
push
clc
fadd
stos
fbld
inc
les
call
incl
shll
mov
sarb
das
mov
repz
mov
add
jbe
jge
mov
dec
cwtl
xchg
push
sub
sbb
insl
xchg
fdivrs
imul
cmp
cmp
in
mov
dec
pop
adc
jle
imul
call
test
add
cltd
pop
into
sub
mov
popa
sahf
jp
out
mov
mov
fwait
jg
fisubs
ljmp
sub
xor
push
pop
and
movsl
mov
mov
out
gs
lcall
add
add
inc
xchg
in
jl
ret
jp
decl
sbb
xor
lea
aam
subl
dec
inc
daa
enter
movsb
push
cmc
xchg
jae
ret
xor
fwait
xchg
test
mov
dec
add
mov
lock
push
decl
pop
insl
sub
dec
in
pop
fmull
mov
or
xchg
inc
sub
aaa
cmpsl
stos
inc
adc
inc
push
or
push
xor
into
or
loope
cmp
scas
dec
push
jg
xchg
cltd
mov
mov
and
push
pop
jle
stos
push
inc
cli
and
and
clc
push
ljmp
fstl
push
inc
sbb
or
imul
clc
and
mov
int3
push
sub
js
or
sub
bound
das
sub
cmpb
jno
pop
or
cld
cmpsb
push
ret
scas
pop
clc
pusha
clc
fsubrl
test
hlt
pop
flds
fbld
call
ljmp
pop
inc
and
sahf
pop
repnz
lods
test
aas
es
fnstcw
mov
sub
sahf
scas
rol
dec
out
xchg
dec
mov
push
push
decb
out
scas
mov
dec
mov
fs
fwait
push
sub
xor
out
sar
decl
insb
stos
adc
jp
repnz
inc
pushf
pop
mov
stc
outsl
mov
sar
adc
ljmp
adc
cwtl
enter
mov
cmp
jle
mov
adc
sbb
scas
cmp
mov
sahf
call
dec
cli
popf
push
adc
fsubl
lret
xor
push
cmp
decl
lock
fisubl
mov
mov
mov
cmp
pop
inc
fbld
xor
ja
popf
mov
scas
pop
loopne
movsb
shlb
sti
mov
decl
add
icebp
jnp
lds
aaa
sub
or
cmpsl
dec
mov
enter
clc
movsl
decl
inc
cmp
mov
inc
shll
add
jle
nop
cltd
out
bound
cmpl
dec
call
lcall
inc
pop
fs
xor
lcall
test
fwait
xor
xor
fcomps
xlat
sub
jmp
adc
sti
pop
add
or
ja
loopne
jl
fwait
sbb
fildll
addr16
adc
or
pushl
xchg
pop
xchg
push
in
jae
pushf
lret
push
fisubl
add
push
mov
decl
cmpsb
dec
leave
fsub
mov
sti
fimull
inc
aas
or
pop
pop
cmp
addb
jae
test
test
and
call
jmp
fs
mov
cmpsl
inc
mov
mov
stc
jge
cltd
push
jnp
js
sar
call
bound
xchg
adc
push
lods
adc
sub
in
std
add
pop
push
cld
pop
ljmp
pusha
js
pop
mov
cmc
or
jl
sti
mov
in
std
lret
mov
inc
jg
fs
rol
adc
fmuls
jmp
dec
outsl
mov
mov
les
lcall
sbb
cmc
sbb
jb
and
stos
or
cld
out
je
call
jecxz
mov
sub
add
int3
cmp
fidivl
lds
call
sbb
add
mov
movsb
dec
adcb
pop
fisttpll
jp
fwait
dec
sahf
inc
push
movups
or
mov
cli
loopne
outsb
and
pop
cs
xchg
incl
sti
in
inc
in
lds
je
push
xchg
andl
pop
mov
inc
cltd
popa
idiv
stc
dec
lahf
or
and
dec
jmp
lahf
lods
and
push
ds
jg
lcall
pushl
loope
repz
inc
cli
jmp
lods
mov
int
repz
clc
jmp
adc
sbb
and
inc
cli
or
dec
mov
insb
jae
adc
ficoml
incl
mov
pop
mov
hlt
jle
test
fwait
xor
push
aaa
fs
mov
mov
lods
int3
adc
mov
jecxz
sar
adc
movsl
and
mov
lock
pop
sbbb
sub
shr
scas
xchg
inc
jge
push
test
mov
aad
fsts
mov
sub
test
xchg
data16
jmp
xchg
jns
mov
cli
dec
mov
rclb
cmp
test
lcall
jg
fsincos
test
stc
and
mov
dec
testb
and
adc
cli
incl
dec
repnz
iret
scas
or
adc
test
lods
scas
dec
sbb
mov
mov
sub
ljmp
je
add
clc
sub
lods
inc
punpcklwd
ljmp
or
jg
in
lcall
and
pop
pop
sbb
push
add
rcrb
jne
loope
jns
icebp
mov
xor
das
aad
xor
lahf
icebp
imul
push
inc
lcall
ljmp
dec
and
scas
xchg
pop
sub
xchg
mov
cwtl
jmp
mov
pop
pop
lret
pop
jbe
call
dec
test
inc
add
xor
dec
xchg
push
neg
sbb
adc
pop
mov
lret
adc
leave
inc
mov
add
lcall
repz
xchg
mov
int
adc
fcmovu
xchg
add
push
rorb
dec
punpckhbw
and
pop
ljmp
lret
dec
mov
out
in
mov
jae
rcrl
inc
adc
pop
xchg
lcall
cmp
pop
mov
test
in
xchg
inc
or
pushl
ud0
xor
xchg
dec
iret
dec
imul
cld
mov
inc
shll
adc
pushl
outsl
jb
xchg
inc
addr16
dec
mov
clc
or
pop
adc
psubb
mov
pushl
xlat
loop
inc
dec
cmp
scas
jmp
dec
push
push
dec
push
lea
out
mov
xchg
scas
arpl
jmp
mov
push
add
mov
into
push
les
fstpt
mov
scas
fistl
mov
mov
hlt
cmp
ljmp
push
scas
mov
jno
push
pop
orb
mov
stos
loope
in
mov
loop
hlt
mov
jo
xchg
mov
and
push
incl
xor
xchg
pop
les
xchg
repz
push
xchg
out
aam
aas
and
cmp
push
pop
add
sbb
xchg
stos
jbe
roll
hlt
or
sub
jmp
ficoml
aas
pop
ffree
pop
rorb
mov
fwait
pop
add
push
lea
sbb
sub
jmp
stos
push
imul
jmp
mov
pop
cmp
fcmovnbe
int3
inc
in
rolb
xchg
clc
das
cmpsb
dec
xchg
push
and
mov
push
mov
xor
addr16
sub
xchg
cmp
insl
test
pop
fs
fbld
sub
stos
gs
push
rorl
add
loope
aas
inc
jl
int3
mov
jnp
jp
popa
ljmp
pushf
or
pop
aad
jmp
mov
popf
popa
or
leave
flds
fmulp
in
std
pushl
divb
repz
or
xchg
shr
jl
adc
or
test
loop
lcall
sub
pop
push
loope
pop
mov
mov
mov
inc
cli
decl
jmp
mov
stos
add
in
in
push
push
dec
mov
and
outsl
jmp
into
scas
aaa
mov
mov
outsb
jb
pop
sub
sarl
dec
xchg
xchg
stos
mov
jmp
insl
or
out
sbb
mov
out
lcall
cld
popa
scas
push
mov
aas
pop
orl
push
loopne
mov
adc
mov
in
pushl
int
xchg
popf
sub
adc
pop
add
or
ss
insl
jge
or
xchg
rclb
cs
stos
arpl
mov
rcrb
dec
mov
cmp
decl
xor
orb
pusha
fmulp
std
xchg
lret
adc
decl
jge
sti
sbb
mov
arpl
push
pushf
ljmp
pushl
js
mov
fs
rcrl
xchg
and
mov
adc
sbb
cs
call
mov
xchg
outsl
inc
jg
adc
lods
and
cwtl
repz
clc
popf
dec
into
jns
call
lret
clc
xor
cld
lea
inc
fmul
sbb
jecxz
jne
pop
add
xor
cmp
daa
mov
push
pop
aas
push
hlt
xor
ljmp
les
mov
pop
ret
outsl
dec
dec
inc
and
or
mov
cmc
and
mov
jmp
mov
lea
aad
jne
inc
sub
jb
inc
push
dec
arpl
jmp
push
aas
pop
jb
cltd
ja
fdivp
adc
mov
dec
pop
jge
hlt
rcll
dec
ret
gs
decl
and
bnd
mov
cmpsl
call
xchg
shl
hlt
rolb
dec
jae
pop
cmp
push
inc
add
out
mov
inc
lcall
jae
mov
dec
push
pop
decl
mov
and
jb
pop
lock
incl
ss
imul
int
xchg
popa
add
out
push
shr
mov
loopne
or
call
mov
orb
enter
cltd
jno
icebp
lea
pop
loop
add
hlt
mov
xchg
mov
fcoms
pushl
popf
mov
outsl
popa
pop
inc
xchg
icebp
mov
aas
dec
mov
or
ret
mov
aaa
orb
mov
or
push
outsb
adc
fisttpl
push
rcrb
jmp
fldcw
mov
sti
pop
mov
imul
jmp
push
dec
out
fsubs
push
xchg
hlt
loop
lret
lds
stos
cltd
popa
dec
mov
dec
xorb
rorb
sub
int3
clc
pushl
inc
adc
jecxz
adc
ds
pop
flds
dec
cwtl
das
xchg
sti
mov
cwtl
inc
jbe
mov
cmpsl
push
dec
cs
into
mov
adc
ss
inc
stos
jp
adc
mov
mov
cli
jns
mov
lcall
jg
dec
cmpsb
mov
or
aam
test
xchg
add
pushl
dec
mov
insb
jo
ss
xchg
mov
or
jae
cmp
jnp
and
pushl
cmp
jmp
mov
movsb
and
mov
adc
xchg
and
inc
cwtl
cld
mov
jl
test
test
sub
int3
xchg
and
insb
fwait
pop
sub
lcall
cmp
ret
xchg
frstor
dec
cmc
inc
addr16
push
insb
xorl
incl
mov
mov
mov
jge
jae
pop
subl
lret
call
adc
stos
enter
pop
ss
cld
fistpll
repnz
in
stos
aas
out
xor
or
push
jnp
xchg
jecxz
xor
sub
scas
icebp
or
pushf
clc
call
loopne
or
mov
ret
xchg
mov
cltd
mov
jp
inc
push
inc
xchg
mov
cmp
int3
push
test
mov
insl
cli
and
shlb
ret
test
push
aaa
and
lret
outsl
fsts
cld
andb
push
mov
mull
sbb
enter
in
aaa
es
jge
jnp
cmpsl
xchg
incl
inc
and
xchg
lds
xchg
or
sub
mov
push
cld
decl
mov
mov
pop
jmp
subb
mov
push
nop
in
xchg
jp
pusha
je
das
clc
call
jne
cmp
sub
mov
clc
fisttpl
jmp
push
fistl
jbe
shll
adc
gs
call
out
jg
icebp
xor
xor
pop
das
sub
jns
fwait
cld
fldenv
jle
cmp
test
xchg
mul
movsl
testl
call
pusha
rol
test
stc
xchg
cmc
cltd
mov
hlt
dec
push
dec
jp
divl
scas
in
xor
cmc
lcall
fucom
jne
in
fsubrl
cltd
cmp
pop
loopne
jecxz
inc
sbb
and
arpl
pushl
push
pop
mov
xor
cmp
sbbb
add
jl,pt
call
dec
clc
cmp
pop
xchg
out
movl
sbb
or
sbb
in
mov
xchg
add
rorl
or
inc
shll
add
shl
adc
shll
mov
jg
push
insl
imul
or
or
jle
xlat
pop
cmp
cld
and
fwait
out
push
movsb
xchg
adc
xchg
lods
or
sbb
ret
pop
cmc
arpl
test
decl
orb
xor
sub
shrb
jg
scas
add
lods
in
lret
pop
lods
and
xchg
push
jo
clc
decl
add
cmpb
sub
rcll
or
out
and
sub
out
ss
popf
fucom
or
dec
out
mov
xor
cmpb
add
jge
mov
lcall
icebp
cmp
xlat
push
pop
enter
movsb
push
outsb
cmp
movsl
mov
xlat
jg
jmp
xchg
xchg
movsl
popa
and
jns
adc
fwait
jno
jge
adc
sub
jmp
or
idivb
cmp
inc
push
sbbl
pop
out
test
lods
mov
lcall
dec
scas
mov
cmpsl
hlt
lea
ljmp
xchg
xchg
adc
iret
sti
mov
ljmp
mov
scas
or
ljmp
icebp
scas
lcall
or
inc
bound
adc
xchg
loopne
jmp
leavew
data16
fistps
mov
cmp
and
call
pop
fs
push
jne
adc
imul
pop
mov
pop
jmp
jo
insl
push
arpl
les
push
fimuls
push
sub
fldt
out
jb
mov
rolb
mov
es
aas
out
pop
push
scas
lcall
sbb
inc
pop
add
mov
fst
mov
loop
sub
daa
movsb
rcrb
jmp
movsb
mov
push
scas
es
adcl
out
sarl
iret
jl
lds
ljmp
xchg
add
stc
inc
xor
and
add
push
mov
fwait
sbb
sbb
pop
xor
lds
cmpsl
fisttpl
xor
in
add
arpl
sbb
or
dec
sub
xor
test
shr
fmulp
nop
push
cmpsb
out
add
imul
mov
mov
jmp
hlt
cmp
out
sbb
arpl
test
pop
lea
adc
daa
sub
in
jle
jg
pushl
or
jns
iret
into
mov
fcompl
dec
daa
popf
cmp
add
decl
pushf
test
leave
dec
mull
sbb
movsl
xchg
insl
je
jbe
lods
stos
and
call
mov
push
cmc
add
out
mov
stc
xor
jmp
xchg
popa
cmc
mov
dec
xor
shrb
mov
jl
mov
decl
arpl
cmpb
sbb
dec
jo
sbb
jnp
iret
push
out
out
cld
loopne
rorl
cmp
inc
sub
pushf
mov
gs
inc
pop
mov
mov
loop
jle
xchg
jg
jp
mov
pop
jg
sub
add
or
ljmp
cmpl
push
mov
movlps
jge
divl
and
mov
loop
jmp
enter
rolb
mov
jb
pop
push
enter
mov
call
mov
pop
push
or
mov
stos
xchg
ljmp
cmp
cmp
and
popf
pop
bound
subb
fs
cmpsb
stc
and
sbb
out
xor
pop
xchg
cltd
add
xor
adc
sub
push
dec
lock
add
adc
sub
pop
adc
seto
les
call
inc
inc
movsl
clc
addl
sbb
daa
repz
repnz
or
push
aad
jmp
decl
cmp
mov
subl
hlt
repnz
icebp
cmpsb
jg
dec
stos
xchg
aam
dec
fnstenv
xchg
data16
adc
out
and
xchg
stc
pop
jmp
aam
std
pushl
lods
xlat
inc
jns
cltd
sbb
arpl
mov
mov
xchg
call
mov
dec
or
adc
loopne
inc
andb
xchg
jbe
or
mov
and
xchg
ljmp
rcrb
ret
jae
in
push
mov
sub
pusha
add
incl
loopne
in
ret
outsl
jns
ds
fs
addb
cmc
icebp
cmpsl
and
jbe
gs
in
addl
push
imul
ljmp
fsub
and
test
inc
dec
stos
movsb
test
mov
jge
sbb
mov
lcall
jecxz
in
data16
out
xor
jle
xorb
sub
push
call
adc
pop
xchg
jns
popa
lods
adc
or
jnp,pt
jmp
mov
ljmp
push
or
test
mov
or
pushl
xor
movb
cs
and
rolb
mov
ljmp
push
sub
gs
cmpsb
into
cli
cld
push
icebp
std
sbb
insl
mov
fsubs
and
add
ljmp
add
cmp
mov
sbb
push
test
add
cld
repz
dec
pushf
nop
add
test
popfw
mov
data16
fstps
add
lcall
and
imul
and
push
shrl
sar
call
mov
sti
jo
shlb
sti
sbb
pop
rcrb
mov
stos
or
mov
int3
hlt
call
loopne
inc
sub
inc
dec
lret
add
pushf
lcall
outsl
lret
sub
mov
and
in
cmp
xchg
mov
jg
cmp
jmp
mov
orl
notb
jmp
fsubl
mov
ret
aaa
pop
or
roll
xchg
xor
sbb
scas
lods
jl
clc
push
imul
imul
xchg
ret
mov
jae
cmp
push
repz
test
in
inc
test
data16
push
pop
pushf
jmp
insl
mov
dec
std
pop
call
imul
icebp
icebp
pop
push
push
dec
xchg
in
pop
rcl
leave
push
xchg
jecxz
pop
inc
int3
inc
call
sbb
or
icebp
sbb
jbe
xchg
stc
insl
pop
out
pop
add
add
lods
fidivrl
popf
xor
pusha
or
mov
stos
aad
jmp
mov
test
call
and
in
nop
dec
and
add
sub
mov
lods
jg
sub
stos
add
sbb
ret
xchg
enter
pop
pop
lods
xchg
nop
xchg
jp
jl
loop
mov
jns
ljmp
es
or
sbb
mov
mov
and
ljmp
les
mov
mov
decl
cmp
adc
xchg
rcrl
push
dec
jnp
fidivl
stos
repz
jl
push
pushl
xchg
and
cmpsb
icebp
shlb
sub
mov
out
and
lock
ljmp
call
cs
sbb
push
mov
xchg
pop
out
push
dec
loope
adc
aad
mov
bound
mov
insl
aad
sti
cmc
sub
ljmp
mov
adcb
jae
adc
or
jg
nop
fst
jae
stos
imul
inc
push
stc
sbb
and
jl
lahf
cli
daa
cmpsb
out
clc
cmpsb
dec
inc
imul
rorb
xchg
pop
pop
into
hlt
outsb
cli
jmp
fstpl
cmp
and
xor
ljmp
inc
mov
test
mov
loop
das
imulb
or
pushl
jge
leave
or
fcoml
das
pop
addb
jnp
sbb
decl
fucomi
test
pop
mov
and
ror
xor
incl
arpl
jg
sub
or
jl
mov
lcall
xchg
jnp
call
sbb
shlb
mov
test
jmp
decl
les
dec
inc
std
scas
js
mov
mov
vandps
cld
mov
mov
popf
add
int3
push
or
leave
and
sahf
in
jnp
outsb
test
incl
push
push
lcall
xchg
addr16
lret
ret
sub
jl
inc
js
or
decl
insl
bound
sub
push
sbb
nop
mov
mov
cli
stc
sub
imul
or
es
and
xchg
xor
cmp
and
adc
scas
call
push
cmp
fistpl
or
and
pop
xchg
rcr
ja
test
call
mov
mov
rolb
loopne
ret
outsb
xchg
outsl
add
mov
lcall
cmpb
sti
jge
xor
mov
rorb
nop
inc
sar
ljmp
icebp
aaa
scas
flds
loope
jl
inc
push
aad
jbe
and
je
aam
fmulp
aad
dec
jmp
iret
test
mov
stos
mov
sub
mov
lahf
pusha
insb
mov
stos
cld
lcall
mov
adc
dec
mov
pop
aam
xor
mov
cmp
mov
jmp
lahf
pop
or
mov
sub
negl
jge
cmpsl
push
rol
insb
mov
sub
mov
shrl
and
je
jge
mov
subb
incl
out
push
daa
pop
and
adc
sbb
pop
jne
icebp
lret
and
repnz
mov
aas
sub
pop
jmp
aad
imul
mov
icebp
mov
rcll
movsb
push
pushl
frstor
jge
jl
jmp
mov
adc
dec
push
or
mov
decl
or
mov
push
dec
in
nop
jle
daa
addb
in
fistpl
decl
cmc
fidivrl
sbb
cmp
inc
repnz
mov
lcall
cli
pushl
push
xorl
aas
scas
dec
dec
xchg
jno
ss
je
dec
fdivr
incl
and
push
lods
or
pop
or
into
lea
inc
push
xlat
jecxz
sbb
mov
loope
jmp
add
je
rcll
mov
test
gs
test
stos
mov
dec
adc
iret
fidivrl
push
mov
add
and
mov
adc
xor
and
pop
bound
xor
or
mov
lret
call
iret
push
sub
aaa
fdiv
sub
pop
mov
scas
out
ljmp
jno
scas
xor
dec
jmp
adc
fwait
jmp
insl
out
xchg
mov
cmp
pushf
fistpll
shll
stos
cmc
or
cmp
mov
adc
incl
cmc
add
mov
les
pusha
aaa
je
xchg
push
arpl
mov
mov
ljmp
in
mov
jecxz
mov
fimull
sbb
sar
test
addr16
movsl
dec
hlt
fwait
add
lcall
jle
adc
push
mul
jo
fisubrs
push
pop
iret
jecxz
lock
cmp
negl
jg
dec
add
pushl
push
sub
ret
pop
cli
lcall
inc
sti
das
scas
cmp
pop
xor
and
imul
loopne
cmp
and
mov
add
inc
insb
mov
movsb
js
mov
mov
idivl
lods
popa
add
push
sub
sbb
js
jg
popa
pop
sbb
mov
or
xchg
xor
xchg
scas
fstpt
dec
xchg
ret
ljmp
test
sbb
xlat
cmc
sbb
mov
ror
add
ljmp
cmp
mov
inc
dec
xor
or
call
pushf
pop
pop
mov
jecxz
jge
cmp
mov
add
adc
int
mov
lret
out
push
sbb
loop
hlt
hlt
jmp
jns
mov
xchg
pop
stos
hlt
lcall
aam
icebp
xchg
int3
ret
mov
mov
call
mov
adcl
lret
lahf
adc
lods
mov
mov
stos
cmp
mov
cmc
push
sub
test
imul
call
rorb
add
fs
cmpsl
repnz
test
push
fdivr
dec
cltd
inc
ret
jns
aad
imul
in
mov
incl
mov
push
adc
insl
ljmp
stc
adc
sahf
dec
inc
inc
jg
pushl
repz
cmp
cmp
ret
push
rclb
dec
fwait
lcall
mov
lret
stos
ret
test
push
sbb
aad
lcall
pop
insb
mov
xchg
rolb
bnd
xor
jb
jg
and
scas
stos
out
push
movsl
cltd
popf
fnstenv
call
dec
xorl
push
add
outsb
adc
icebp
loope
incl
pop
test
push
stos
clc
or
mov
jecxz
cltd
add
js
call
sub
test
sbbl
push
in
jbe
bound
xchg
ljmp
sbb
arpl
inc
lock
scas
cli
jmp
mov
scas
inc
cld
pop
dec
and
push
or
lods
jge
adc
or
aas
in
or
and
jne
pavgb
ss
xchg
adc
pop
sub
stos
mov
cmc
cmpsb
test
call
roll
xor
mov
xchg
js
mov
aas
rclb
mov
fdivr
out
cli
mov
pop
lock
push
pop
jo
adc
sub
pop
cmc
pushl
lahf
neg
gs
cmp
add
xor
faddl
mov
or
cmp
je
push
jo
fisttpll
pop
mov
ds
lea
mov
std
xchg
das
xchg
mov
outsb
mov
or
jge
leave
mov
push
jns
enter
mov
mov
xchg
sub
sub
into
shl
iret
lds
lea
xorps
call
in
lock
in
mov
sbb
push
out
ds
aaa
add
mov
xchg
sbb
sbbb
cmp
jo
inc
lods
sahf
adc
ret
pop
dec
cwtl
xchg
mov
frstor
fcmovbe
pop
ljmp
sahf
mov
mov
jecxz
fmulp
loope
sub
sbb
push
daa
cmpsb
leave
orl
lds
enter
mov
push
loopne
mov
dec
add
out
ljmp
dec
ljmp
push
xor
mov
test
push
pusha
push
clc
jg
mov
sbb
and
sti
icebp
jnp
or
xor
ljmp
and
fdivr
inc
or
popa
and
jne
popf
jo
scas
mov
cmc
or
adc
inc
test
sbb
enter
cmp
out
or
sbb
dec
fisubl
pop
mov
cmc
lods
daa
xchg
imul
inc
sub
outsl
cld
icebp
ss
cmpsb
pop
mov
mov
jge
jno
lods
or
xchg
jg
xchg
cmpsl
and
movsb
jg
mov
mov
call
call
js
mov
ljmp
mov
lea
jo
iret
or
arpl
add
cmp
cltd
aas
dec
ljmp
inc
idivb
push
cmpb
and
inc
popf
and
adc
lcall
xchg
icebp
leave
jns
mov
mov
mov
cmp
jno
loope
lcall
adc
dec
popf
jge
shrl
loopne
sbb
adc
or
push
sbb
lds
cmc
push
ret
sbb
sub
and
push
mov
jo
push
rorl
lcall
test
rorb
ljmp
ss
ja,pt
mov
sub
call
sbb
xor
dec
divb
push
cmp
scas
in
pusha
xchg
pushl
into
cmpsb
sub
fnsaves
jp
js
cmp
fistps
pop
and
and
pop
jecxz
lcall
push
dec
dec
or
cli
mov
inc
cmc
xchg
test
je
xchg
fstpt
and
sti
jg
mov
les
mov
arpl
mov
adc
pushl
adc
xlat
xchg
adc
xchg
das
and
rcrl
lahf
enter
push
sbb
hlt
xchg
xchg
lea
adc
dec
cmp
sarl
lods
mov
mov
fs
ljmp
aam
fsubrs
jmp
mov
jb
jmp
cltd
in
out
pop
adc
cmp
mov
push
pop
out
pop
push
mov
mov
jl
imul
fcmovne
pop
mov
mov
mov
dec
in
test
and
cmc
pushl
lcall
mov
adc
fs
adc
push
mov
loop
mulb
mov
ss
fcomip
and
leave
imulb
adc
jp
mov
mov
incl
aad
popf
out
sbb
test
mov
mov
notl
std
jae
cmp
jo
movl
push
jae
add
xor
sbb
aam
and
ret
ljmp
cli
jmp
loope
and
negb
push
popf
into
and
push
sub
adc
and
sar
pushl
cld
push
clc
xchg
mov
fwait
push
cmc
push
xchg
cmpsl
xorb
adc
sub
loopne
sub
inc
pop
add
repnz
orl
lcall
push
out
out
mov
jp
inc
popf
idivb
les
add
lcall
cli
mov
push
js
jo
arpl
adc
in
inc
ljmp
inc
into
pop
ret
out
neg
jecxz
adc
aas
inc
cmp
xor
cmp
decl
lock
sahf
shll
jl
fs
faddl
dec
cmp
mov
loope
pop
lret
xor
in
jne
sarb
push
inc
adc
repnz
scas
lods
pop
pop
jmp
jns
mov
pop
into
stos
cmp
push
rol
je
xor
dec
outsl
sbb
mov
sti
incl
insb
dec
fadds
inc
in
jo
adc
jg
arpl
outsl
push
loopne
lods
js
aas
cmp
mov
rorl
into
test
xor
mov
decl
sarl
sbb
mov
call
jp
loopne
sar
push
es
insl
sbb
lahf
xchg
rclb
mov
mov
dec
mov
cmpsl
fsub
out
ss
cmp
jno
loopne
daa
shrb
inc
inc
fdivp
inc
cmp
xchg
xor
push
mov
cmp
call
mov
decl
test
or
in
in
int3
shl
push
jg
add
push
jnp
incl
mov
mov
insw
stos
xchg
cmp
lds
pushf
inc
std
jnp
in
mov
jns
shll
xor
jo
dec
das
imul
sbb
mov
sbb
std
mov
mov
leave
es
fcoml
adcb
cld
inc
call
dec
cmp
inc
push
dec
mov
mov
cmp
adc
push
std
add
mov
ja
sahf
sub
inc
hlt
cmp
xchg
inc
add
out
dec
jb
sub
sub
xchg
or
lcall
xchg
push
hlt
mov
pushl
cltd
ffree
ret
xchg
outsb
ds
add
push
das
jmp
xchg
sub
test
call
cmpsb
dec
xchg
bnd
aad
mov
gs
movsl
mov
ss
ja
imul
leave
sar
cmp
dec
fists
mov
stos
stos
divb
pop
jle
fs
adcl
popa
cmp
aad
cmp
mov
mull
mov
pop
les
mov
push
lcall
mov
cli
xchg
mov
mov
cltd
or
jecxz
mov
repz
xchg
adc
fbld
inc
pop
into
dec
pop
xor
pusha
mov
and
jno
dec
scas
decl
mov
and
lods
je
psraw
add
test
das
cmc
or
std
outsl
clc
xchg
addr16
dec
decb
ss
nop
dec
adc
inc
ret
jmp
mov
push
push
cmpsl
cmp
shrl
jae
or
jae
ljmp
faddl
sub
mov
or
jbe
xor
cmp
sbb
push
mov
xchg
jl
mov
fldt
dec
test
out
test
pop
push
cli
cmp
or
fstpt
movsb
xor
popf
mov
bound
fwait
mov
lock
inc
push
ja
movsl
icebp
nop
mov
incl
pushf
imul
cli
leave
cltd
into
push
xchg
push
test
push
pop
and
push
cld
incl
fistl
mov
push
pop
cmp
cmpsl
mov
aam
rorl
lcall
das
or
jl
repz
dec
adc
and
outsl
das
pop
mov
fisubrs
sar
pushl
sbb
cmp
dec
lea
mov
push
imulb
outsl
cmp
lret
std
lcall
ljmp
fiaddl
das
and
and
pushf
sub
or
pop
incl
fisubl
push
and
push
shrb
mov
pop
scas
lcall
icebp
ljmp
jp
ret
dec
push
xchg
cmc
pushf
bound
repz
ljmp
inc
rorb
push
jne
leave
jo
mov
bound
adc
cmp
inc
or
ja
fadds
jmp
sbb
rcrb
fisttps
lahf
sub
sbbb
lock
jle
or
test
sub
pop
scas
jns
decl
loopne
outsb
sub
add
cmp
adc
pusha
dec
pop
lret
enter
jle
aaa
add
adc
pop
jmp
xchg
or
scas
add
pop
sar
mov
not
aad
imul
inc
mov
cmp
repz
cld
fsts
leave
jns
pop
xchg
pusha
pushf
aaa
ds
loopne
cltd
mov
cwtl
or
pop
lcall
hlt
in
add
xor
repz
mov
push
in
mov
call
push
push
aas
iret
xchg
test
pushf
fiadds
dec
add
dec
sub
movsb
pusha
inc
jecxz
pushl
adc
xchg
inc
ja
cmp
adc
pop
mov
js
insl
sbb
mov
xlat
test
imul
push
pop
mov
sbbb
lea
in
push
xchg
loope
cld
inc
pushl
add
repz
fstpl
add
addb
in
es
in
pop
aaa
mov
cmp
lcall
loopne
push
inc
loop
xchg
int
sub
pushf
cmp
mov
or
lcall
pushf
cltd
insb
outsl
xor
pop
int3
sbb
jge
das
stos
mov
out
out
repnz
lcall
mov
notl
xor
or
adc
repz
sbb
rolb
decl
outsb
xchg
jno
push
push
roll
xor
mov
or
xor
fiadds
icebp
decl
cmpsl
rolb
and
fldt
outsl
mov
pop
out
pop
jecxz
lock
ljmp
mov
in
pusha
jg
es
mov
jnp
and
les
inc
sub
dec
push
clc
lcall
mov
push
shll
ret
adc
xchg
lods
mov
ds
sti
iret
mov
pushl
push
mov
js
xchg
test
pop
mov
jb
pushf
jge
sti
ljmp
and
addr16
push
inc
push
dec
rep
call
inc
pop
or
cld
pushl
add
mov
jae
mov
cli
mov
aam
repz
or
in
pop
dec
mov
fcoml
shlb
pop
outsl
imul
lret
decl
ss
jo
jl
xor
rcrb
mov
les
imul
mov
jns
fistl
fisubl
xchg
cli
mov
pop
fcomip
push
pop
lahf
cmp
pushl
shl
push
movsl
sub
dec
test
cmp
movsl
lcall
mov
mov
mov
cli
push
cli
std
nop
push
repz
add
sbb
or
and
incl
xlat
outsb
es
mov
addr16
push
arpl
cwtl
mov
js
xlat
data16
xor
xchg
int3
int
fdivs
mov
in
out
inc
jecxz
shrl
es
jmp
test
mov
fnsave
or
cmp
or
push
lcall
jno
xchg
lock
popa
adc
xchg
push
in
lods
mov
subl
cmc
addr16
jmp
xchg
fdivs
dec
add
cmpsl
cltd
and
mov
neg
iret
jb
pop
scas
mov
movsl
xchg
dec
arpl
mov
fisubs
add
xor
not
xor
inc
inc
adc
icebp
aaa
sub
cmp
aad
and
test
cmp
in
push
jecxz
aas
ret
andl
pop
call
dec
pop
sbb
jp
inc
inc
push
aas
cmp
loop
xchg
inc
add
in
jge
and
xchg
mov
sbb
mov
mov
out
pop
aas
out
xchg
call
jg
ljmp
lods
sub
and
leave
dec
xchg
or
leave
bound
mov
in
inc
leave
push
add
sahf
pop
sub
outsb
in
faddl
in
mov
lcall
push
cmc
sub
mov
in
aas
inc
sbb
or
pmullw
lret
xchg
mov
jecxz
aam
add
pop
sarl
push
cs
int3
adc
ja
incl
stc
xchg
ret
dec
pop
divb
fistl
xchg
dec
ret
adc
and
mov
incl
pop
ljmp
or
mov
arpl
ds
dec
fisttpll
or
lods
pop
popf
mov
sbb
outsl
xor
ds
mulb
add
mov
cmp
jg
dec
mov
push
cld
sub
insb
or
dec
xor
movsb
cmp
xchg
add
mov
push
sub
fcmovnu
pop
jmp
addr16
mov
pop
out
lcall
loopne
jle
es
fisubrl
dec
adc
push
fwait
mov
xor
xor
pop
clc
sbb
dec
cmp
or
mov
test
scas
pushf
push
inc
xor
adc
ret
scas
cmp
jl
jecxz
adc
add
cltd
push
sahf
sub
fldl
ljmp
push
jp
cld
clc
mov
jne
xor
test
popa
daa
inc
pop
xchg
imul
decl
adc
mov
adc
call
add
mov
jg
lahf
repnz
jae
enter
inc
mov
jmp
sbb
inc
fstl
cmp
xchg
push
imul
ljmp
out
sub
das
add
add
push
jp
cmp
icebp
stos
shlb
add
pop
decl
jge
cmpsl
jb
imul
int
int3
aaa
mov
pop
in
ret
stos
add
ljmp
mov
dec
mov
dec
xorl
repnz
sub
adc
or
xchg
fsin
rcrb
incl
mov
mov
das
and
adc
scas
mov
cmp
jge
js
mov
int3
jo
cmp
inc
add
stos
or
cwtl
dec
cmpps
lcall
mov
mov
fisttpl
pop
rol
add
pop
mov
push
fidivrs
jmp
xchg
mov
sub
sbbb
call
call
push
pop
xchg
test
inc
or
sbb
push
in
push
jl
inc
in
mov
lock
outsb
jmp
decl
stos
ss
enter
xchg
push
jae
dec
adc
add
je
lods
js
add
imul
push
push
fcoml
mov
adc
fldt
aad
mov
hlt
test
incl
cltd
inc
push
xlat
cmp
mov
shll
ret
xacquire
inc
ret
ljmp
out
loop
in
jno
popf
pop
mov
lret
jl
andb
sar
mov
or
push
icebp
xor
ds
add
movsl
inc
sti
push
jle
std
mov
mov
adc
or
pop
xchg
xor
inc
xor
jg
jbe
ljmp
sbb
push
jp
fisubs
fadds
pop
shl
or
popa
ja
lcall
sbb
push
add
push
out
pop
fstl
ret
cmc
fiadds
or
pop
incl
dec
xchg
cmpsb
add
stc
push
sbb
bound
dec
test
mov
clc
std
int
pop
inc
mov
ljmp
xor
adc
cmpb
pop
fistpll
xor
out
and
fbstp
pop
mov
jg
orb
incl
popf
rolb
iret
popa
pop
mov
fstpt
mov
pop
push
lods
not
sbb
test
xor
sub
incl
inc
sbb
sub
pop
data16
sub
scas
jmp
sarb
push
jb
cmp
les
push
dec
dec
movsl
push
cmp
loopne
jmp
arpl
mov
in
ljmp
test
jge
rclb
mov
or
push
je
dec
sahf
sahf
aad
movsl
sub
jg
push
lds
or
xchg
jns
jg
ss
lret
jg
mov
push
into
scas
xor
lock
or
mov
sbbl
call
pop
aam
icebp
cmp
xor
or
push
push
and
int
inc
std
push
cmp
lods
aam
sbb
incl
push
fldcw
lcall
inc
rcrb
mov
insb
mov
int
push
pop
jne
lds
jle
sbb
sub
pop
hlt
add
mov
insb
movsb
jne
fstpt
jg
in
in
out
xchg
cmp
mov
jg
mov
cld
out
xchg
mov
inc
cmp
lret
push
lcall
inc
addb
lahf
fisubrl
popa
cmpsl
test
xchg
movsl
cltd
xor
clc
adcb
jmp
sub
xchg
fsub
fwait
testl
jle
sub
jno
ret
jge
cmpsl
test
dec
decl
mov
stos
stos
out
dec
mov
or
sub
jle
push
adc
sub
js
jmp
xchg
mov
pusha
cmpl
bound
clc
iret
jg
fyl2x
cs
fsubrs
jg
jmp
imul
mov
ret
mov
pop
mov
clc
dec
aad
push
ss
insl
xchg
push
test
push
push
sarl
mov
or
ljmp
cwtl
repnz
add
repnz
inc
ret
push
iret
shrb
push
in
mov
cltd
jns
nop
adc
call
cmp
xchg
fistpll
xlat
adc
dec
xchg
mov
outsl
mov
cli
mov
pop
xor
pop
jle
insb
add
adc
test
fcoml
idivl
jmp
xchg
xor
or
xor
inc
imul
push
cmpsb
lret
or
jne
enter
fldl
gs
mov
mov
pop
loopne
cli
sbb
mov
sub
fistpl
insl
pop
in
dec
add
push
dec
mov
sbb
cmpsb
mov
jge
mov
cmp
std
call
and
cmp
data16
jo
clc
sbb
lock
arpl
and
pop
or
pushl
xor
shlb
clc
lcall
je
xchg
lods
test
lcall
rorl
aam
xchg
outsl
addr16
jl
rorb
pop
daa
mov
add
jae
xor
dec
pop
add
mov
mov
mov
jmp
xchg
xor
ss
notb
loop
insb
ljmp
cli
sbb
decl
mov
mov
dec
vmovsd
pop
adc
jmp
incl
jns
fistps
enter
or
outsl
cmp
test
mov
inc
pusha
call
push
stos
cmp
lods
mov
jecxz
mov
shl
mov
sbb
incb
xchg
call
mov
or
push
jmp
jno
inc
pop
enter
or
mov
push
add
xor
ja
hlt
lret
call
push
movb
jns
or
loope
mov
jge
dec
mov
dec
fimull
sar
mov
cltd
cmp
jg
jbe
sarl
addr16
std
sub
ficoms
sbbl
add
pop
in
scas
push
inc
jno
enter
lret
stc
push
les
or
xor
lcall
jno
mov
call
pop
xchg
incb
dec
mov
test
cli
mov
push
jle
mov
push
sarb
call
jo
jbe
mov
lcall
aam
mov
dec
aas
xchg
inc
or
mov
pop
xchg
mov
push
adc
ret
int
add
ljmp
ret
cmp
lret
test
movsl
dec
les
push
xchg
inc
data16
jg
int
arpl
adc
add
bound
xchg
xor
mov
mov
lcall
bound
mov
cmp
push
xchg
shl
pop
cmp
pop
adc
popf
pop
repz
jmp
and
clc
sub
mov
in
cmpsl
and
fstpt
loop
jl
addr16
es
and
ret
xchg
jg
mov
jmp
pop
jno
mov
rcrb
lods
cmc
add
mov
inc
fbstp
xchg
xchg
jno
xchg
popa
mov
fdivrs
inc
push
pushf
push
fadd
daa
fwait
xchg
sub
xor
mov
jg
cs
mov
sbb
jl
add
test
xchg
ja
add
jo
pushl
scas
xor
dec
inc
and
js
xchg
sub
sarb
adc
std
pushf
jo
fldenv
call
stc
lds
cmp
push
dec
push
adc
outsb
arpl
mov
cmp
pop
push
mov
insb
or
fldl
pop
jecxz
ds
and
cmp
nop
lea
dec
sub
add
push
pusha
xchg
mov
fnstsw
jp
das
dec
push
fiaddl
add
xchg
and
inc
incl
icebp
insl
add
aam
mov
pop
lcall
clc
rclb
xorb
popf
loope
in
jb
mov
mov
mov
dec
sub
jne
jmp
adc
xchg
daa
dec
adc
push
sub
loopne
push
bound
pop
push
cmpsl
mov
mov
pop
xor
adc
pushf
mov
orl
inc
mov
push
pop
test
dec
cmp
mov
call
push
iret
xchg
sbbl
test
call
dec
cmpsl
add
sarl
mov
ja
in
rclb
mov
push
je
cmpl
repnz
movsb
stos
add
jle
setle
jmp
xor
push
cmp
inc
sub
data16
mov
fdivs
sbb
and
fsubl
mov
push
jb
fistps
out
in
push
sbb
sbbb
cmpsb
and
cli
xchg
adc
push
ss
popf
cwtl
jbe
fcmovne
int3
fimuls
lret
mov
pop
faddl
mov
jmp
std
xchg
xchg
push
xor
stos
dec
dec
sub
clc
jbe
dec
mov
shrb
dec
incl
nop
xor
mov
loope
or
and
mov
out
mov
adc
dec
cmp
xchg
xor
cli
arpl
push
xchg
insl
ljmp
and
lods
sahf
popf
xlat
or
jmp
daa
test
loop
xchg
into
repz
insl
incl
mov
mov
imul
pop
mov
pop
sbb
mov
sahf
stos
push
cli
sub
push
cmp
mov
xchg
hlt
fucom
decl
mov
mov
mov
adc
aam
xchg
dec
fwait
jmp
in
mov
outsl
mov
lret
test
pop
imul
inc
ret
cli
decl
jp
ret
cli
push
rol
xlat
dec
mov
addr16
adc
jecxz
ljmp
lret
std
jno
test
int3
outsl
push
imul
mov
xchg
pop
mov
aas
rcrb
mulb
int
ds
pop
adc
or
xchg
fcomip
xor
in
mov
mov
mov
ja
pop
xchg
mov
iret
xor
call
jp
xor
aam
pop
inc
xor
jmp
adc
dec
pusha
mov
decl
and
fs
lcall
fmull
xor
call
push
fcoms
lds
leave
adc
pop
sub
mov
cltd
mov
ljmp
pop
pop
cmp
loopne
insl
inc
sbb
movlps
ds
incl
in
shll
push
iret
enter
in
enter
push
mov
mov
and
pushf
add
mov
lods
inc
xchg
sbb
pop
faddl
notb
and
cmc
fimuls
shlb
inc
div
int3
mov
xor
inc
jg
mov
inc
sbb
jle
in
or
or
lods
xor
cli
xor
xchg
mov
inc
xchg
cli
decl
lock
adc
sbb
add
loopne
js
scas
sar
movsl
scas
shl
ret
xor
mov
mov
ljmp
xor
es
mov
mov
inc
sbb
aad
dec
iret
subl
out
stos
cli
ljmp
jno
stos
and
call
inc
insl
call
dec
cmp
add
pop
sub
aaa
inc
pop
jl
sub
pop
dec
fldenv
sbb
jno
dec
sub
fcmovb
ljmp
inc
mov
in
jecxz
pop
add
lcall
sbb
repnz
dec
pop
xchg
mulb
outsb
xchg
push
push
xor
int3
addr16
pushf
jle
mov
fsubr
sub
rdpmc
leave
ret
cmp
push
push
adc
stos
call
pop
imulb
das
test
notl
mov
std
decl
adc
xchg
out
pop
xlat
fs
in
lds
out
sub
stos
cmp
push
adc
fisubrl
add
call
push
dec
ret
out
popa
lahf
pop
leave
sbb
jp
mov
pushl
pushf
les
std
and
push
pop
add
lods
add
out
xchg
push
cs
mov
outsl
ljmp
lods
cmp
std
xlat
in
xchg
outsb
push
pusha
jns
xor
mov
mov
cmpsb
and
sarl
inc
mov
cmc
cmp
imul
xchg
int
out
scas
cmp
movsb
in
add
roll
call
pushl
inc
inc
ljmp
out
mov
jne
pop
sub
dec
cwtl
add
sub
and
test
and
jge
mov
xchg
mov
ljmp
out
xchg
and
push
add
jmp
inc
aam
lcall
mov
fwait
sbb
rorb
movsb
mov
js
sbb
ficompl
mov
decl
test
cltd
add
xchg
pop
add
ss
cmp
fldcw
stos
sub
jmp
es
mov
adc
cmp
add
test
lods
and
icebp
cmc
sub
aaa
adc
popa
cmpsl
mov
cmp
cmc
pop
pop
and
mov
addl
cmpb
lret
pushl
int
mov
call
mov
ja
addr16
mov
dec
daa
push
jmp
add
cmp
mov
data16
jbe
addl
cmp
lods
fs
jnp
loope
sub
pop
aad
decl
or
or
aam
xor
mov
aam
out
cmc
lret
sbb
jae
xchg
mov
loop
decl
dec
in
ds
adc
insl
cmp
aad
orps
scas
push
adc
or
fildll
inc
jle
fmuls
lret
push
push
jno
xchg
jge
incl
jb
out
out
jnp
push
sarl
push
pop
fisttpl
or
inc
mov
in
add
xorl
mov
mov
scas
andl
mov
sbb
mov
loop
iret
outsb
jg
mov
stos
xchg
fdivr
repz
fidivs
fidivrl
movsl
xor
fwait
repz
aad
in
aad
jmp
stc
xchg
mov
divl
testl
popf
test
cmp
adc
cmpb
ja
aad
jne
test
lods
lock
imul
call
enter
inc
hlt
adc
fmul
lds
dec
push
dec
shlb
mov
sti
and
ret
lock
sub
int3
ljmp
cld
pop
clc
es
cs
sti
orb
jb
dec
negb
add
shlb
sarb
mov
xor
or
ljmp
xchg
hlt
js
pop
mov
jmp
std
popa
inc
push
popa
sub
lahf
movsl
imul
icebp
dec
xor
shlb
ds
cmp
xor
push
mov
sub
jg
adc
xchg
bnd
shll
cltd
sub
fucomi
ljmp
js
shlb
cltd
or
dec
pop
fstp
in
lret
mov
xchg
jnp
add
pop
push
push
out
cmp
insb
hlt
mov
cmp
or
rclb
cmpsb
dec
cmc
data16
pop
pop
fcomip
cmp
mov
mov
add
xor
or
pushl
push
lret
push
cmpsl
mov
xchg
fwait
jnp
imul
cmp
cmp
fistps
aad
arpl
xchg
pop
sar
call
mov
in
lret
jecxz
sahf
cmp
mov
fdivrl
inc
or
push
outsb
pop
jg
std
add
clc
sub
or
push
inc
or
sbb
xchg
push
inc
iret
mov
add
jnp
and
lods
cmpsl
rolb
sbb
in
sub
lcall
mov
mov
test
mov
bound
dec
int3
inc
nop
nop
cmp
and
and
cmp
ficoms
fincstp
lret
mov
adc
or
fs
mov
ljmp
jnp
cmp
shl
xchg
scas
enter
insb
add
mov
mov
sbb
jmp
adc
repz
jg
xlat
lea
leave
loop
sub
push
xchg
xor
xor
pop
sbb
aaa
loope
loope
sbb
jmp
xor
decl
sbbb
xor
inc
dec
mov
mov
pop
in
sbb
jmp
sub
push
adc
popa
in
mov
add
mov
shlb
arpl
xor
ljmp
inc
lds
lcall
pusha
jae
enter
sub
in
sub
outsl
mov
xchg
dec
push
lea
mov
dec
jle
fbstp
shlb
mov
xor
mov
jns
fdivl
adc
imul
pop
decl
jp
iret
xchg
shld
fs
push
adc
fwait
dec
repz
aam
call
xor
sbb
scas
xrelease
pusha
test
stos
inc
pop
cmp
lods
imul
add
mov
push
aam
decl
mov
inc
ret
mov
lods
push
hlt
jle
imul
xchg
int3
or
int3
mov
inc
mov
lock
or
insl
xlat
cmp
adc
sbb
sti
decl
jnp
int3
subb
jnp
xor
sbb
mov
inc
dec
out
repz
ljmp
shrl
sub
outsl
adc
and
ret
and
dec
sub
add
push
incl
cmp
fs
xchg
js
xor
aad
ficomps
mov
sar
call
mov
sahf
cmp
aaa
mov
mov
lret
icebp
out
dec
dec
shlb
popa
jnp
stos
add
iret
test
lahf
dec
out
mov
mov
xlat
iret
out
mov
inc
js
ret
cli
dec
sbb
adc
xor
sub
mov
movsl
mov
fdivs
ljmp
js
mov
pop
hlt
or
cmp
mov
mov
dec
and
cmp
and
repz
loop
cmp
inc
lds
push
adc
cld
mov
fildll
arpl
and
inc
fnstcw
inc
lret
jl
data16
hlt
aas
hlt
jl
std
call
inc
fpatan
sub
jnp
ret
fistl
repz
cmpsb
clc
xor
pushf
shll
pop
aaa
lea
lock
xor
pusha
call
pop
and
in
push
incl
mov
mov
add
retw
ljmp
flds
aaa
push
lcall
in
mov
sahf
cli
adc
cmp
ret
and
jmp
loopne
pop
out
test
out
ret
ret
jg
fwait
jae
leave
inc
fimull
dec
mov
xchg
or
and
jno
cmp
into
test
cmp
xor
call
inc
jbe
aam
outsl
xlat
mov
mov
clc
ljmp
jo
inc
adc
addr16
test
dec
add
lcall
xor
add
pop
lock
cmp
gs
sbb
mov
dec
xchg
sub
loop
ljmp
mov
and
jbe
pop
nop
fldenv
mov
lret
jle
aad
pop
std
lret
rclb
or
mov
bound
xchg
mov
cmp
jg
sub
repnz
xchg
pop
test
andl
dec
dec
xchg
nop
shlb
push
add
dec
inc
inc
adc
outsb
in
or
test
push
movsb
repnz
incl
pop
jbe
and
and
inc
insb
dec
xor
xlat
adc
daa
and
call
test
adc
mov
lds
push
inc
imul
push
in
mov
sbb
and
and
leave
lods
hlt
dec
jge
fistps
mov
inc
jb
adc
scas
out
sbb
add
xchg
push
and
mov
push
add
xchg
imul
jmp
sti
ja
mov
lahf
or
push
hlt
xchg
xchg
add
pushl
ja
sarb
mov
outsl
add
dec
xchg
mov
pop
loopne
incl
adc
arpl
daa
push
ficompl
sbb
mov
inc
pusha
sbb
sub
decl
movsb
addb
cmpsl
jno
cld
ret
bound
mov
hlt
xchg
ja
xor
out
lock
les
adc
test
rclb
test
inc
dec
add
inc
ficomps
fmul
dec
pop
jno
or
pop
sahf
insb
adc
mov
mov
sub
jmp
and
repnz
stos
adc
test
sti
fistpl
add
mov
ret
mov
mov
out
mov
cmp
mov
sbb
add
sarl
mov
dec
xchg
shll
lods
inc
mov
jne
xchg
call
xor
adc
das
or
sbb
mov
pop
and
iret
daa
mov
cwtl
decl
jle
pop
jno
in
out
int3
into
mov
pop
jb
xchg
cmp
or
xchg
lcall
lea
and
enter
and
int3
dec
call
inc
add
sbb
lret
xor
jbe
push
das
mov
jae
sbb
mov
cltd
or
sti
xchg
lahf
xor
mov
loope
jecxz
ja
test
ret
cld
ret
mov
cltd
push
add
lods
push
les
std
mov
xor
sub
pop
insb
add
mov
pop
mov
out
gs
mov
ja
insl
or
frstor
mov
cmc
sbb
cmpsb
push
popf
clc
sahf
in
cmp
mov
push
mov
shr
fs
test
jne
xchg
mov
and
push
fimull
push
mov
cld
cmp
push
mov
popa
or
sbb
cmp
ljmp
add
cmpsb
arpl
add
and
and
dec
mov
jg
pop
pop
rcrb
or
jns
iret
add
jnp
cltd
sub
fbld
es
mov
dec
mov
cmp
mov
sub
jno
xor
mov
lret
dec
mov
xorl
test
jge
jns
mov
cmp
mov
push
insb
xchg
add
clc
xchg
xor
jg
ljmp
insb
insl
pushf
or
cs
mov
and
mov
pop
lock
lcall
rol
pusha
iret
filds
icebp
xor
cmp
addr16
mov
jle
mov
dec
pusha
jl
cmpsl
push
push
shl
lea
sahf
cmc
push
popa
mov
pop
cld
pushl
xor
lea
int3
or
sti
xlat
mov
dec
sub
das
loopne
lcall
fstl
outsl
xchg
inc
xchg
lods
out
inc
mov
sub
call
ss
addr16
fildll
adc
test
imul
lcall
pop
out
or
mulb
icebp
in
lock
mov
mov
in
in
add
lcall
in
pop
push
inc
or
add
cmp
andl
popa
cmp
scas
pop
decl
lock
lahf
jl
jno
or
into
xchg
and
add
mov
adc
mov
cltd
cmc
ss
add
pop
jb
push
scas
mov
test
in
movsl
inc
xchg
ljmp
xor
xlat
fxch
pop
or
and
lahf
mov
and
loope
incl
sub
je
repnz
dec
mulb
vmread
call
sbb
mov
or
inc
add
mov
mov
dec
push
adc
outsl
ja
jmp
ret
jge
inc
and
pop
mov
jnp,pt
xor
test
add
sub
jmp
fisttpl
mov
add
push
or
lidtl
popa
lcall
hlt
andb
stos
lret
push
outsl
adc
rcl
jmp
incl
jo
adc
ret
jno
fidivs
out
mov
jmp
xor
jb
pop
xchg
call
sub
inc
xchg
and
in
cvttps2pi
dec
fmuls
mov
aaa
mov
mov
dec
or
jl
mov
fiaddl
mov
or
out
inc
adc
jmp
jp
mov
mov
aas
and
or
xor
ret
ljmp
aam
sub
add
repz
push
sbb
mov
add
neg
imul
sti
call
fsubs
ret
mov
je
inc
movsb
arpl
fimuls
in
jbe
push
mov
ljmp
std
adc
inc
dec
cmpsb
jns
cmpsl
negb
add
or
loope
mov
jns
sbb
inc
aam
adc
mov
out
filds
mov
lea
mov
or
ja
fxch
mov
int
inc
push
and
adc
lock
mov
sahf
sub
movsl
mov
jae
outsl
mov
xchg
add
cmp
push
sbb
addb
lcall
lcall
mov
icebp
cwtl
sub
jo
xor
or
rcl
rcrb
nop
mov
out
mov
mov
inc
sarl
daa
xchg
sub
sti
mov
sbb
jb
shlb
out
jg
loope
lods
dec
inc
ds
sbb
dec
and
mov
xor
add
loopne
call
pop
pushf
scas
and
pop
rolb
pop
and
dec
inc
mov
lcall
call
in
cld
add
outsb
jecxz
xlat
mov
push
out
mov
aas
and
lcall
into
jmp
inc
ds
xchg
imul
filds
mov
popf
mov
testl
clc
out
fldt
inc
aaa
push
jg
mov
adc
and
insb
out
stos
add
jno
das
xchg
ja
sub
jmp
pop
out
inc
je
or
push
ret
pop
pop
test
or
sub
mov
es
jg
xlat
pushf
inc
add
pusha
insl
in
or
push
hlt
xchg
shll
pop
mov
shll
fcoms
pop
add
mov
call
ret
lahf
push
testb
ss
and
xchg
dec
mov
mov
mov
push
adc
or
push
je
push
test
adc
ret
mov
adc
rol
rolb
sub
mov
xor
sub
mov
mov
add
mov
andb
pushf
fmull
xor
ss
rorb
add
inc
inc
push
mov
push
decl
hlt
decl
rclb
inc
cli
mov
jp
lock
fbstp
cmpb
adcl
mov
lock
xor
xor
pushf
je
loop
push
idiv
mov
dec
inc
popa
pop
sbb
mov
hlt
jmp
hlt
or
sub
call
test
lods
jne
outsl
adc
and
lods
popa
push
xchg
clc
mov
test
fdivrl
lcall
push
jle
pop
xor
xlat
stos
pop
xchg
sbb
ja
in
incl
std
stos
or
and
mov
pop
and
inc
xchg
aas
mov
call
clc
loop
pop
imul
nop
fsubs
jp
inc
dec
cmp
jecxz
sahf
mov
ret
mov
add
insl
fwait
push
xor
ret
push
scas
lock
push
fwait
mov
movsl
xor
movsl
pushl
lods
adc
movswl
sahf
pop
mov
and
test
jne
loopne
lcall
jnp
mov
dec
mov
dec
xchg
add
fbstp
jge
push
add
bound
ljmp
pop
inc
xlat
leave
inc
dec
arpl
sbbb
rcrl
dec
jecxz
jo
jl
insl
arpl
pop
hlt
inc
mov
sti
mov
xchg
xor
std
aas
stc
lret
mov
adc
jg
repnz
sbbb
icebp
pop
xchg
pop
cli
roll
repnz
xchg
ljmp
lret
push
in
fidivs
cmp
mov
iret
out
test
mov
sub
ret
sti
cld
mov
adc
repnz
sub
incl
cld
jno
push
jo
jp
dec
hlt
inc
lret
insl
add
lret
sti
adc
cmp
std
ljmp
cltd
push
jl
push
fs
cmp
push
ljmp
les
cmpl
movsl
pop
loopne
ljmp
sbb
nop
loop
aas
inc
push
mov
sarb
or
mov
inc
loop
addr16
subl
pop
sub
rep
int
roll
jl
dec
push
or
jmp
fisubrl
mov
adc
or
dec
dec
jno
or
call
movsl
sub
mov
sbb
les
cltd
addl
mov
pop
jle
mov
in
xchg
push
jle
iret
decl
adc
mov
jb
push
jns
aad
mov
inc
add
shll
ss
ljmp
test
push
xlat
xor
lods
push
or
mov
es
test
ljmp
decl
lods
cli
adc
jno
cmc
mov
push
xor
lcall
popl
fsubrs
jp
jp
decl
lret
fdivs
push
lods
shrl
or
mov
xchg
out
xchg
mov
cmpsl
imul
lret
outsl
and
add
xchg
mov
iret
imul
fs
and
dec
pop
cmp
clc
in
fwait
ljmp
cmp
fwait
add
pop
lret
dec
pop
sbb
clc
pop
lods
aaa
mov
mov
pop
inc
mov
in
jge
inc
out
lahf
adc
sar
inc
push
and
sbb
adc
ljmp
push
ds
mov
mov
dec
mov
mov
jp
and
and
es
decl
lcall
or
das
pop
mov
pop
sub
pop
pop
mov
adc
test
out
sbb
push
xchg
jmp
xor
in
outsb
imul
lahf
mov
adc
out
push
in
mov
pusha
test
fwait
and
loope
adc
push
movsl
sbb
fcmovb
xorl
pop
inc
pop
cmp
enter
cld
jp
mov
sbb
scas
mov
aam
adc
test
imul
pop
lcall
mov
jg
mov
hlt
cmp
inc
push
fwait
jns
cs
push
sub
cs
les
inc
pusha
std
or
fdiv
cs
cmp
sub
out
cwtl
mov
xlat
push
decl
incl
jne
mov
xchg
cmp
popf
test
mov
sbb
jmp
daa
jg
mov
scas
sbb
test
fs
add
jl
and
out
push
mov
sbb
ss
xchg
pop
inc
scas
cmp
out
mov
add
call
or
and
arpl
push
push
cmp
ljmp
jb
sbb
ljmp
out
fiaddl
hlt
dec
dec
shlb
popa
adc
outsb
movsb
stos
pop
xorb
push
dec
cmp
or
shrb
dec
dec
mov
push
mov
data16
jg
cmc
add
dec
std
out
jmp
dec
lock
xor
insl
ja
push
push
pushl
stos
fs
xor
inc
mov
std
clc
cmp
stos
cmp
sbb
test
sti
into
add
in
xchg
mov
mov
and
inc
add
pop
scas
mov
jle
addr16
ja
dec
popa
test
cwtl
mov
movsb
inc
je
jp
xchg
dec
jecxz
call
loope
xchg
cmp
mov
jmp
hlt
aad
cld
lds
jl
jb
push
scas
into
jno
sarb
das
mov
in
aaa
mov
fisttpl
cmp
mov
push
jg
pushl
push
pushf
shrl
icebp
int
inc
inc
into
jg
es
test
jmp
inc
add
jae
aas
xor
push
fwait
nop
fnstenv
sbb
mov
sub
fdivrl
ds
mov
inc
in
push
pop
int3
daa
lea
gs
jae
ljmp
xchg
test
ss
push
inc
callw
icebp
mov
adc
or
pop
orb
pop
mov
xor
incl
popf
inc
dec
mov
inc
cmc
mov
xor
cld
repnz
ficoml
jb
dec
popa
inc
push
cmp
pop
scas
cmp
leave
dec
mov
pop
lea
jl
jne
lcall
scas
scas
pushf
jno
rorl
pop
sbb
sarb
and
mov
decl
loop
xchg
sub
add
imul
push
pop
lea
dec
dec
std
push
sub
fbld
arpl
and
or
in
dec
jnp
ds
dec
pop
in
loop
test
fcmovu
lahf
or
incl
cmp
mov
sbb
inc
bsr
sbb
decl
lock
lock
test
cs
mov
pop
outsb
jmp
lcall
mov
jbe
arpl
in
push
inc
adc
hlt
stos
pop
aad
mov
les
add
jecxz
mov
push
pop
mov
jg
sqrtps
mov
idivl
popf
push
jnp
call
inc
mov
adc
and
sti
loopne
cmp
push
cltd
mov
stos
addr16
shrl
daa
rcll
pushf
xor
adc
std
daa
xor
pop
jmp
push
flds
jle
adc
pushl
mov
adc
jl
cmp
je
push
sub
cmovnp
lcall
adc
mov
mov
xchg
aad
clc
push
fs
mov
nop
and
ficoms
mov
lea
jl
mov
cltd
addr16
and
decl
je
push
mov
subb
outsl
xor
push
imul
dec
mov
sub
ret
pop
rorb
loopne
je
sub
mov
jl
mov
or
add
cli
push
add
inc
int
das
and
add
ss
jno
mov
cmc
pop
stc
jmp
dec
add
movsl
fcomps
pop
pushf
xchg
nop
inc
push
jno
ds
data16
imul
jmp
or
bnd
jle
insb
std
test
xor
mov
int
push
fisttpll
mov
pop
and
test
in
jp
mov
xchg
dec
xor
mov
fisttps
std
call
pusha
out
add
aam
stos
rorb
ljmp
sub
inc
mov
lret
cmp
mov
popf
push
xor
and
das
inc
mov
loope
call
sbb
jnp
stos
ret
xor
fdivrs
inc
and
xchg
jnp
pop
insb
imul
and
xchg
sbb
ja
inc
dec
dec
pop
push
inc
pop
cmpsl
cmpb
jmp
add
andb
test
ds
push
inc
mov
movsb
xor
xchg
nop
insb
test
or
xor
loope
inc
mov
cmp
pushl
call
cmpsb
xchg
mov
dec
je
fmull
push
stc
dec
nop
repnz
movsb
push
stc
ljmp
rcl
dec
sbbl
mov
xchg
cmpsb
gs
lods
sub
cmp
adc
sbb
inc
cmp
sub
and
xchg
les
sub
jnp
sub
sub
add
lcall
hlt
sub
xor
dec
mov
sbb
test
pushl
xor
add
stc
test
roll
pop
or
sbb
push
jle
lods
pop
cmc
in
jmp
push
inc
inc
jns
cwtl
fdivr
es
xchg
mov
icebp
jo
fisttps
decl
push
xchg
sbb
call
movsl
nop
pop
push
icebp
inc
pusha
mov
lock
cmpsb
xor
incl
and
ficoml
inc
stc
mov
cmp
push
mov
mov
pusha
shll
pop
pushl
stos
das
inc
test
out
push
lods
iret
into
xor
stc
scas
sub
mov
pop
out
das
lahf
imul
lcall
add
cmp
stos
mov
inc
jge
pop
inc
in
pushf
into
jg
cld
int3
pop
lcall
mov
lock
cli
aad
pop
mov
pop
mov
sbb
xor
rcl
inc
in
icebp
fimuls
adc
leave
mov
lock
mov
sti
xor
mov
pop
shrl
clc
jmp
addr16
scas
pop
test
mov
jnp
inc
ss
daa
out
loop
call
fs
push
push
shll
and
adc
or
mov
sub
lcall
push
cwtl
sbb
push
ret
and
sub
loope
jns
push
or
cmp
mov
mov
aam
nop
xchg
outsl
cmp
adc
jnp
outsb
jecxz
stc
call
andl
mov
outsl
imulb
push
mov
cmp
out
pop
push
dec
and
call
int3
sub
lock
aam
cmp
mov
jle
pushl
daa
mov
mov
inc
negb
adc
insb
dec
pop
push
mov
mov
lcall
pop
rorl
inc
ljmp
pop
jnp
jne
fisubl
rcrl
sbb
clc
inc
cltd
aas
call
xchg
push
das
xchg
aaa
jge
mov
mov
and
pop
aad
mov
out
ds
dec
mov
jno
lahf
mov
js
xchg
and
jmp
mov
ljmp
sbb
or
mov
push
xor
call
and
stc
jle
popf
xchg
push
negb
into
rcrb
push
cmc
ret
sahf
insb
ja
add
inc
movsl
dec
jae
inc
xchg
inc
jnp
gs
jmp
jp
adc
pushl
ret
lds
push
ret
inc
negl
sub
jmp
push
aam
stos
mov
pop
push
out
jb
loope
ljmp
je
cmpsb
jg
aad
stc
cmp
xlat
ds
mov
sbb
xlat
out
adcb
sub
imull
lea
sahf
in
mov
xchg
dec
test
pop
mov
repnz
cmp
xlat
xor
jae
jle
xor
rol
sbb
stos
xor
mov
ret
outsl
fstpt
sbb
imulb
popa
aad
ds
adc
mov
jnp
in
pushl
mov
inc
clc
out
xchg
sbb
adc
or
or
sbb
outsl
cli
hlt
je
adc
aaa
mov
pop
in
mov
into
xchg
outsb
push
pop
int3
mov
push
insb
arpl
ss
nop
repnz
pushf
mov
icebp
jne
pop
inc
pop
jns
cmp
ljmp
pop
add
mov
add
callw
jb
lock
sbb
jp
xchg
jecxz
pop
incl
lods
popf
and
push
daa
mov
enter
xchg
mov
icebp
scas
inc
sub
out
cli
decl
mov
loop
outsw
loope
test
mov
cmpsb
inc
jmp
jns
inc
jmp
xchg
loop
pop
mov
lea
xor
and
cmp
jo
cmp
cli
out
clc
dec
aas
aas
insb
mov
lea
repz
jle
pop
ljmp
mov
incl
popa
stos
and
mov
mov
add
lods
inc
pushf
mov
out
cmpsb
mov
stos
add
das
sar
and
adc
sbb
mov
rcrl
sbb
mov
jle
mov
xor
loop
imul
movsl
push
mov
push
cmp
decb
dec
inc
inc
in
in
outsb
xchg
fisubrl
and
xchg
dec
clc
aam
cmp
incl
hlt
lds
adc
cltd
xchg
in
inc
cmp
cmp
xor
xchg
lret
pushl
jecxz
stc
inc
jb
daa
mov
inc
popa
outsl
int3
sbb
add
mov
data16
jecxz
pushl
in
jae
sbb
xor
xchg
in
inc
jae
mov
decl
lret
outsl
addr16
jae
into
mov
cli
pop
mov
ss
push
ljmp
jg
add
lea
ret
cmc
xor
cmc
ffreep
xchg
ja
jmp
dec
xor
fldenv
ret
jmp
jecxz
push
sub
pop
xchg
dec
pop
fnstenv
pop
ja
loope
lcall
rcr
stos
inc
cltd
test
popa
add
jp
jmp
pop
ja
mov
mov
sub
ljmp
mov
test
lock
aas
mov
jl
xchg
jge
xor
insl
push
inc
loop
and
cmp
lcall
or
xchg
xchg
dec
dec
xor
mov
fs
out
add
adc
cmp
decl
aas
cmp
xor
add
int3
jmp
ds
pop
orb
ljmp
cmp
mov
inc
push
sbbb
fdivs
arpl
fsub
push
mov
jns
push
and
xchg
call
popa
xchg
fs
pop
js
mov
xor
xor
jb
add
roll
notl
incl
xchg
jo
loopne
pop
or
scas
cmp
jb
decl
fwait
jle
xchg
fcoms
divl
pop
lcall
pop
std
jecxz
out
jnp
insl
iret
aam
jae
call
inc
lret
xchg
fnstcw
fiadds
mov
push
push
push
in
test
adc
mov
aas
pop
fsubr
mov
fwait
push
ret
ss
sahf
push
imul
sub
fwait
fadds
jp
jae
loop
jmp
and
mov
push
addr16
not
xchg
bound
cvtps2pd
cmc
decl
insb
ds
mov
out
add
rcrb
inc
dec
cmc
je
fstl
sbb
jmp
sub
push
xor
out
hlt
add
rclb
decl
pop
cs
aam
pusha
push
lock
or
mov
inc
sbbb
popf
loop
sub
scas
lahf
add
jmp
test
mov
jecxz
out
iret
call
xchg
xor
mov
push
pushf
mov
jmp
xchg
lods
outsb
pusha
push
insl
imul
mov
mov
dec
das
pushl
sbb
inc
cmpsl
scas
out
shr
cmp
xchg
cmc
lods
aas
inc
sbb
sub
jmp
add
in
cmpsb
xchg
and
lea
enter
add
call
test
jno
subl
popa
rolb
pop
xchg
bound
test
lahf
adc
call
idiv
cwtl
aam
in
gs
pop
stos
pop
movsl
ret
inc
sbb
and
test
imul
aas
mov
mov
push
mov
imull
mov
stc
mov
inc
mov
stos
pushl
lock
out
out
fistps
sub
cmpsl
bound
cltd
outsb
cltd
sbb
inc
cld
repnz
push
xchg
dec
inc
aaa
cltd
jp
jno
lock
xchg
push
ja
push
jl
nop
dec
call
loopne
adc
inc
sbb
ljmp
adc
push
iret
dec
movsl
fs
add
cmp
sub
rclb
mov
cmpsl
imul
fldcw
inc
mov
outsb
jge
outsb
sbbl
inc
add
subl
push
jmp
dec
lret
jb
mov
andb
push
mov
sub
add
jp
lcall
loopne
jo
xchg
jbe
cli
rcrb
addb
pop
xlat
sub
push
lret
sar
decl
repnz
clc
testl
imul
or
mov
decl
inc
add
movsw
addr16
call
popf
fwait
push
stos
pop
ret
ret
and
pop
arpl
cmp
push
xchg
push
dec
js
out
aam
fadds
repnz
inc
out
mov
push
xor
sbb
cmp
loopne
inc
cmp
adc
call
inc
mov
or
inc
add
in
fcoml
jle
xor
ljmp
push
test
out
inc
mov
push
push
and
or
xchg
dec
pusha
dec
lcall
push
movsb
loope
mov
pop
test
in
jle
int3
adc
jno
out
push
aad
xchg
cmpsb
xchg
push
cli
mov
jne
pop
jns
mov
mov
das
sar
xor
push
das
mov
iret
addl
repnz
sar
add
jmp
movsb
popa
or
dec
fldl
xchg
pop
scas
clc
sbb
xchg
fiadds
in
ds
xor
cmp
lods
minps
jmp
lods
jo
add
cwtl
xor
repz
add
sub
jmp
lods
inc
cmp
shrl
adc
int
adc
dec
pop
insl
cmp
ljmp
enter
or
cmp
popf
stos
pop
cmc
movsb
popf
mov
dec
dec
inc
or
and
aam
stos
sbb
data16
mov
out
dec
push
xor
aad
and
xor
jmp
jns
mov
and
out
pop
aad
xchg
int
das
jbe
cmp
xor
lret
jmp
mov
divl
int3
adc
jns
add
dec
dec
mov
jae
and
addr16
jmp
xchg
or
out
and
mov
and
lock
dec
push
lock
adc
xor
js
scas
sbb
push
mov
ljmp
sub
mov
andb
movsl
js
cmp
sbb
js
and
ret
mov
popa
and
je
dec
push
pushl
mov
clc
shrb
neg
lds
std
sbb
ja
call
sbb
add
lret
sbb
sbb
jmp
push
jo
sarl
ljmp
loopne
unpcklps
or
test
pusha
push
inc
pop
lock
mov
rclb
push
add
dec
test
lods
jle
sub
insb
in
clc
mov
and
xor
insl
cwtl
loope
mov
mov
jnp
fistpll
mov
sub
shlb
mov
dec
add
lret
cmpsb
mov
cli
dec
pop
sub
ja
push
loop
and
mov
and
lret
stos
stos
inc
cld
xchg
fwait
outsb
fildll
xor
ret
lcall
movl
popf
push
and
subl
test
sahf
jmp
or
decl
mov
jb
jne
or
push
cmp
push
push
xor
dec
add
cmp
sbb
lcall
ds
xor
movsb
pop
stos
pushf
in
fisttps
cmpsb
fildll
lcall
and
repnz
xor
cwtl
arpl
out
pop
pop
jnp
pop
inc
mov
and
jmp
mov
addr16
push
cmp
ret
adc
lods
loope
push
mov
lea
jg
pop
in
xchg
xchg
push
hlt
std
pop
and
push
jmp
shll
mov
notl
decl
inc
es
hlt
sti
outsb
jns
or
dec
cwtl
and
iret
sbbb
jbe
jecxz
decl
mov
stc
mov
add
and
inc
xchg
xlat
xor
fidivrl
jmp
rorl
mov
mov
addr16
out
lret
arpl
push
into
push
addr16
addr16
stos
sub
push
filds
fucompp
test
cmpb
in
movsl
cmpl
and
jo
inc
ret
incl
cmp
and
and
xchg
or
dec
or
sti
mov
sbb
push
ljmp
jbe
push
inc
xor
enter
push
pop
sbb
pop
pop
hlt
fcompl
data16
out
cli
jmp
mov
mov
cmp
int3
fldt
pop
mov
sahf
lret
sub
jg
jle
adc
push
mov
cwtl
movb
jle
ljmp
pop
xlat
lahf
jmp
pushl
cwtl
dec
mov
jmp
add
mov
in
pop
sbb
or
paddd
shrl
xor
cmpsl
nop
sbb
imul
pop
cmp
das
je
inc
lods
mov
lods
cld
adc
push
call
in
jb
lcall
gs
mov
push
push
nop
dec
fs
clc
call
jno
shrl
popf
xchg
dec
addr16
xchg
pop
addr16
mov
stos
aaa
aad
fmuls
scas
mov
fistpl
jne
enter
push
mov
scas
mov
add
pop
or
jno
clc
decl
xchg
xor
pop
shlb
mov
pusha
push
mov
repnz
decl
imul
pmuludq
pushf
lds
rcrl
dec
fadd
hlt
cmp
loope
pusha
add
jg
xor
inc
push
adc
pusha
xchg
push
in
or
xchg
dec
xchg
stc
in
push
flds
in
lods
jg
jbe
adc
scas
ret
push
jle
cwtl
sub
push
push
jnp
xchg
pop
fcmovnbe
sahf
xchg
aad
inc
std
pushl
add
sub
js
shll
divb
dec
cmp
incl
xchg
rcll
test
dec
cli
test
bound
sbb
lret
cli
lcall
pop
das
fcoms
inc
dec
jmp
sbb
or
lcall
sarb
or
or
aam
mov
mov
incl
adc
mov
ret
inc
adc
sar
dec
or
scas
pop
sub
adc
xchg
push
and
insb
cmpl
daa
lcall
dec
mov
cs
sbbb
and
je
rcrl
decl
dec
cmp
mov
mov
inc
xchg
xchg
cs
decl
and
sbb
inc
mov
jmp
jns
sbb
shr
xor
inc
ljmp
add
cmp
out
subb
pop
pushf
xor
add
shlb
incl
adc
scas
mov
lahf
fdivr
gs
sbb
mov
subl
jnp
or
cmc
mov
or
adc
jbe
push
sub
inc
cmp
mov
pushl
cmp
or
or
adc
pushf
mov
mull
andb
stos
pop
push
cld
mov
push
fcos
lcall
pop
aad
repnz
xor
mov
jge
inc
out
enter
jo
movsb
pop
inc
push
xchg
aaa
cld
jns
xlat
jo
scas
push
daa
add
dec
aas
add
push
xchg
out
jmp
jmp
repz
insl
xchg
call
or
movsl
mov
jg
decl
push
test
mov
and
movsb
stos
jmp
or
ror
inc
incl
cmpsb
daa
xchg
lahf
out
xor
cmp
or
xchg
jns
adcl
push
jmp
xlat
adcb
call
cmpsl
mov
jbe
aam
daa
push
insl
sub
mov
inc
sbb
lcall
xchg
push
cmp
pop
mov
lcall
arpl
fstp
and
add
shl
stc
aas
adc
outsb
mov
outsl
pop
repz
fsts
push
mov
lcall
jns
cmpsl
flds
mov
cmp
mov
sbbl
stos
incl
adc
xchg
aaa
les
in
insl
test
and
ljmp
inc
pop
dec
in
jo
push
pop
iret
dec
movsl
imull
repz
repnz
push
movsb
pushl
dec
or
jno
scas
cltd
repnz
test
sbb
dec
ja
xchg
jp
cltd
sti
inc
sbb
dec
inc
pushl
cld
mov
sti
cld
jb
pop
insl
xchg
outsb
shrb
cltd
lahf
shrl
sub
jmp
loopne
cld
lcall
inc
or
jae
and
inc
cmc
shl
call
into
filds
jo
xchg
int
dec
push
cmc
push
in
dec
lret
out
ljmp
xor
aaa
cld
push
cmpsl
push
adc
xchg
call
inc
or
cmc
ja
aas
repnz
outsb
test
in
lcall
xor
out
adc
cmp
mov
inc
and
inc
cli
jg
sarb
xchg
sbb
es
fildl
int3
mov
insb
xlat
ds
mov
mov
popa
fcomps
xchg
jg
jmp
lods
fwait
icebp
cltd
cld
incb
mov
mov
arpl
cmp
add
fmull
sbbb
pop
nop
push
adcb
in
or
pusha
jg
dec
sti
ret
pop
sub
fs
scas
xchg
cld
nop
mov
mov
sahf
ja
cmp
pushl
outsb
and
xchg
add
cmp
inc
aas
lcall
sti
int
sahf
scas
clc
jmp
lahf
subb
mov
xchg
mov
mov
jne
leave
es
jle
jg
mov
stc
push
mov
push
cmp
push
ficomps
mov
lods
rol
ljmp
cwtl
fstps
arpl
pop
out
mov
imul
push
lock
decl
push
aaa
lods
in
xchg
jns
inc
fisubl
dec
or
adc
xchg
pushl
mov
pop
dec
cmpsl
adc
xor
xchg
jae
std
jnp
jle
stos
rcll
jg
ljmp
outsl
mov
xchg
test
insl
inc
jmp
mov
inc
lods
loop
sahf
push
mov
mov
or
rcrb
stos
mov
inc
sub
ljmp
adc
insb
les
cmpsl
add
insb
pop
pop
dec
jo
fwait
jo
mov
mov
ljmp
pop
push
aad
je
mov
std
xchg
fiaddl
pop
aas
add
in
pop
dec
enter
ds
push
inc
out
lcall
test
fucomp
sbb
jecxz
jg
or
cmc
mov
ljmp
cmpsb
xchg
call
push
leave
mov
in
mov
hlt
xor
adc
dec
sahf
dec
jecxz
add
sub
pop
xlat
push
push
sahf
int3
mov
incl
insl
fisubrs
push
adc
jge
cmp
mov
std
sub
mov
sub
call
scas
rorb
add
fisubl
and
out
cld
lea
movsl
ljmp
add
add
cmp
leave
mov
jmp
andl
sub
fisttpll
popa
mov
js
iret
fwait
xchg
aam
pop
mov
push
jb
sbb
jp
jg
jmp
call
sub
and
std
fimuls
incl
iret
push
sub
lret
ljmp
notb
mov
loop
lahf
xor
push
or
ljmp
push
test
out
ss
adc
add
sub
test
add
imul
call
stc
cli
inc
sub
adc
sbb
sbb
inc
cmpl
out
outsb
mov
jmp
subb
incl
incl
cmp
repnz
shrb
insl
hlt
jnp
xchg
daa
add
ljmp
imul
sbb
fiadds
rolb
int
jg
aad
out
push
pop
dec
out
lret
rorl
shr
jmp
ljmp
and
in
sbb
sbb
sbb
cmpsb
and
add
mov
loop
data16
icebp
loope
and
std
xchg
jg
cmp
ja
fwait
xchg
mov
inc
fbld
xor
pop
pop
dec
call
int3
mov
jno
test
xorl
fidivrs
decl
adc
iret
inc
or
movsl
mov
imul
or
push
push
cmp
push
popa
rorl
lcall
test
cld
inc
jmp
lahf
adc
pop
push
popa
add
jge
in
inc
ljmp
push
outsl
and
insb
mov
arpl
xor
aad
lret
nop
adc
dec
fsubrp
cmp
decl
mov
jno
pop
dec
mov
clc
push
fnstenv
mov
shll
sar
in
inc
push
std
cmp
lock
ss
push
rclb
and
add
dec
sbb
fcompl
push
aaa
scas
and
cs
outsl
in
rclb
pushl
fsubs
push
cli
mov
stos
jmp
jno
push
int
push
shrb
dec
loopne
dec
cltd
cli
mov
pop
cmp
stos
pop
cmp
lds
mov
cmp
dec
mov
mov
sub
enter
test
rcll
mov
mov
std
cmp
mov
lcall
and
fsubrl
or
repnz
sbbb
aad
jmp
xchg
fidivrs
lea
ret
cld
fdiv
push
movd
jmp
pop
push
mov
pop
pusha
rcrl
call
mov
aas
xor
inc
leave
call
aaa
lea
sbb
shr
mov
pop
mov
es
stos
repnz
jg
cld
and
mov
mov
xchg
cltd
sbb
aam
jge
xor
mov
and
testb
cmp
pop
scas
jp
clc
ljmp
mulb
adc
dec
jl
mov
mov
mov
imul
stc
mov
adc
lock
mov
sbb
jmp
divl
jb
inc
sbb
cmp
pushl
and
xchg
sbb
call
mov
movsl
incl
sub
inc
inc
dec
adc
sti
icebp
push
and
jl
movsl
loop
push
lret
push
push
clc
out
jo
loope
mov
inc
cmpsl
push
xchg
dec
jno
mov
outsb
dec
in
adcb
lahf
in
js
sbb
or
xchg
mov
cmpb
push
mov
call
aam
incl
das
push
ljmp
sbb
iret
cltd
hlt
aaa
mov
dec
movsb
flds
call
pop
fucom
movsb
insb
mov
repnz
sub
imul
mov
jmp
in
imul
and
cmp
add
xchg
xchg
test
mov
les
mov
sahf
jb
imul
mov
scas
in
lret
ds
mov
pop
mov
nop
jp
push
in
jle
popa
add
jle
dec
lcall
mov
rcrl
lods
cmpsb
push
sub
out
rcl
jmp
xor
jmp
push
mov
xchg
push
jo
sub
dec
sub
rol
add
jmp
and
pop
addr16
icebp
mov
push
outsb
xor
xchg
mov
incl
hlt
ja
lods
rcrl
arpl
rcll
cli
lcall
or
leave
add
sbb
sti
mov
adc
fucom
out
mov
sub
fimull
inc
cmpsl
inc
mov
clc
jmp
inc
jbe
jae
decl
xchg
xchg
lret
inc
mov
insl
arpl
adc
push
xor
push
pop
mov
lcall
add
scas
jp
test
lock
xorl
popa
pop
push
mov
xchg
test
cmp
xchg
add
pop
sbb
jp
bound
adc
out
mov
mov
sahf
int3
bound
fcos
in
decl
stos
insl
dec
inc
scas
jmp
fwait
mov
ds
test
pop
or
iret
outsb
mov
inc
lret
push
mov
mov
dec
imul
inc
ret
jne
jnp
jb
cmpsb
filds
adc
mov
add
es
lahf
outsl
andl
lahf
rcr
dec
cmp
jecxz
add
jmp
push
mov
sub
decl
inc
pop
subl
gs
punpckldq
jg
rcrl
mov
jae
in
loopne
add
jo
out
pop
rorb
movsb
jge
sbb
jmp
jb
roll
mov
sub
lret
pushl
dec
push
mov
cmpsb
addr16
out
mov
sbb
xchg
mov
xchg
lahf
pushl
mov
adc
out
lods
xchg
loop
cld
fsubp
mov
stos
repz
jg
mov
mov
push
jmp
sbb
mov
scas
ret
jns
andb
pusha
dec
das
pop
xchg
and
push
jl
aam
mov
mov
fistps
xor
inc
fsubp
shlb
fisttps
pop
shrb
jg
in
mov
orl
inc
jge
xchg
rol
pop
xchg
inc
pop
sub
cld
inc
sub
sarl
jg
dec
jmp
test
lea
pop
decb
insl
popa
mov
mov
addb
xlat
sbb
mov
or
inc
or
incl
and
in
push
lcall
xor
lods
insl
mov
sarb
push
cmp
dec
push
lcall
icebp
or
jo
or
out
dec
and
cli
cmp
cli
jmp
ret
or
pushl
in
call
in
test
sbb
int3
iret
dec
outsl
ret
inc
out
hlt
xchg
mov
dec
inc
lss
mov
jmp
lds
in
shlb
and
in
push
fcmovnb
ds
decl
popf
add
sbb
jle
cli
mov
xor
jg
mov
andb
cmp
call
push
xor
call
clc
fcmovnb
add
jae
add
adc
add
lcall
adc
jmp
mov
leave
sbb
js
hlt
orl
lcall
ficoml
cmp
sub
jg
loopne
loopne
ljmp
in
in
lcall
arpl
xor
lods
negl
xchg
dec
xor
xchg
xchg
filds
adc
incl
ja
enter
pop
sub
add
ljmp
mov
sbb
sub
jne
mov
ficoms
and
mov
jmp
xchg
cmp
aam
shl
ss
mov
mov
xchg
out
pop
jmp
add
out
call
cmp
fimull
adc
pause
mov
into
aad
mov
out
outsl
mov
out
iret
rclb
cmp
inc
cmp
vcvtdq2pd
dec
adc
arpl
ret
pop
out
stos
movsb
out
xchg
decl
cmp
shlb
mov
sarl
mov
ficoml
xor
sub
pop
push
les
inc
and
add
xor
ljmp
add
sub
out
add
pushl
outsl
hlt
or
filds
aam
lods
jecxz
scas
cli
jmp
cmpsl
shll
inc
xchg
jnp
cmp
cmp
popf
sarl
aad
jg
test
sub
cwtl
je
ja
pop
mulb
push
test
pop
mov
lret
cmc
bound
decl
pop
lock
inc
mov
nop
lret
push
in
or
pop
fdivrl
jg
jb
mov
les
incl
adc
add
imul
push
sub
cmpb
sub
cmp
inc
aad
test
dec
jge
aad
lds
aad
sub
lcall
popa
je
movsl
sti
pusha
in
jmp
and
xchg
jnp
lea
aad
push
ljmp
loop
mov
fimull
xor
stos
bound
fs
mov
sbb
cmp
call
mov
gs
out
stos
push
addr16
test
pushf
stc
push
pushf
ljmp
dec
shr
call
pop
loop
lds
jmp
xor
push
scas
mov
je
inc
jb
mov
jbe
lahf
andb
sbb
add
cs
fcomip
lcall
inc
es
cli
imul
xchg
loopne
jl
insb
call
decl
mov
cmp
pushf
ret
push
or
cmp
add
cmp
add
clc
adc
xchg
stos
mov
jmp
out
adc
out
hlt
push
outsl
jmp
out
push
push
jg
popf
adc
lcall
mov
clc
int
out
mov
out
xchg
mov
inc
pop
cmpsl
inc
clc
decl
xor
and
mov
push
mov
cmc
in
in
adc
sbb
fwait
mov
incl
insl
and
dec
cmp
sahf
pushf
scas
shrb
out
mov
sahf
push
pushf
adc
pop
imul
loopne
mov
push
loopne
pop
mov
dec
cmp
fsubrl
stc
mov
mov
fisttpll
push
fsubrl
xchg
insl
int
sbb
jecxz
xor
jg
mov
pop
or
scas
lcall
mov
ret
adc
xor
jmp
std
mov
cmpsb
or
lcall
or
lcall
or
pop
loopne
cmc
cmpsb
flds
mov
ds
add
es
in
add
lcall
inc
inc
test
aas
lods
into
movsl
icebp
popf
fadd
or
pop
jns
xor
nop
add
call
andl
pop
fwait
jo
inc
and
aam
mov
mov
stos
ljmp
sarb
movsb
out
add
push
and
dec
sub
jmp
repnz
mov
sbb
jo
out
mov
out
xchg
jge
mov
add
push
push
mov
sbb
pop
xchg
sub
pop
lcall
and
into
dec
cmp
aam
jle
movb
sbb
sbb
inc
jmp
aaa
adc
mov
xchg
scas
js
adc
mov
push
inc
push
inc
push
inc
mov
insl
fdivs
dec
adc
dec
jnp
sbb
notl
outsl
fs
ja
inc
push
jnp
decl
adc
jp
shrl
cmp
mov
jl
jmp
xchg
ds
movsb
adc
xor
leave
jp
das
cli
pop
fstpl
pop
dec
jg
out
cs
inc
and
push
mov
push
ja,pt
sub
or
hlt
movl
adc
movsb
inc
addr16
je
jmp
stc
enter
cwtl
xor
pop
xor
in
pop
decl
lock
jbe
ds
inc
imul
icebp
ljmp
dec
ljmp
add
dec
in
xchg
or
xor
das
sti
fucomp
sbb
jmp
in
dec
shll
aas
push
mov
divb
add
aad
xor
repnz
fwait
cmp
mov
imul
mov
jns
test
fists
aaa
mov
bound
mov
add
lock
mov
faddl
sbb
sbbb
and
jle
repnz
lcall
pop
scas
sahf
push
inc
rcr
mov
inc
add
je
outsl
stc
cmp
lcall
fcmovnbe
pushf
cmp
jae
pop
imul
cmp
lods
push
jns
push
add
pushl
fsubrp
add
adc
mov
push
lret
mov
or
add
jecxz
ret
xor
mov
and
shl
cmp
icebp
scas
push
lds
dec
add
sbb
pushl
mov
and
das
pop
cmp
aam
pop
cmc
ret
xor
repz
out
fisubrl
incl
cmp
or
decl
lcall
aas
xor
div
enter
cld
jmp
aaa
sbb
inc
jne
inc
nop
mov
test
add
cmpsb
pushl
lahf
scas
bnd
mov
push
sub
addr16
fwait
outsb
lcall
jmp
in
cmp
out
mov
imul
or
std
lcall
add
stos
or
scas
sbb
clc
outsl
lods
ret
dec
jae
mov
sti
movsl
sarb
cmpsb
pop
stos
aaa
inc
clc
aaa
jp
xor
pop
fdivrs
mov
jle
ljmp
dec
out
fistpll
jno
sbb
xlat
insl
mov
xchg
adc
orb
incl
pop
mov
inc
aad
pop
in
data16
add
add
repnz
int
ret
add
and
push
jmp
aad
into
xchg
pop
gs
xor
add
cld
pop
sub
cmpsl
push
cmpb
jg
lcall
mov
add
outsb
cltd
mov
pop
jmp
int
or
mov
xchg
movsl
cltd
push
mov
testb
xor
inc
sbb
lcall
out
and
sub
inc
das
je
int
in
clc
lock
ret
aad
mov
or
cmp
xchg
hlt
and
aam
popa
pop
bound
jge
jo
lcall
mov
fsts
xchg
ret
push
xor
repz
movsl
sbb
ljmp
es
mov
cwtl
sub
mov
mov
or
pusha
dec
lock
lcall
pushl
cld
inc
in
cmp
xchg
scas
lret
iret
dec
in
aas
std
fdivrp
lret
mov
inc
outsl
pop
jge
popa
stos
fisubl
mov
mov
call
cmp
xlat
sbb
mov
xor
loop
ljmp
xor
xor
das
cli
jmp
xchg
test
icebp
mov
sbb
xor
pop
dec
test
mov
pushl
insb
sub
mov
cmp
decl
lret
out
mov
mov
push
mov
add
arpl
mov
xchg
pushl
cld
xchg
cmpsl
fs
test
insb
test
sbb
decl
add
sub
push
sub
mov
sbb
ljmp
sahf
sbb
pushl
popa
pop
sbb
cmc
and
xor
push
xchg
adc
fs
data16
les
lcall
ja
xor
imul
dec
push
aad
clc
lret
stos
cs
mov
lret
pushl
in
bound
inc
pop
in
loop
adc
aaa
sbb
and
sbb
loopne
out
stc
cmp
mov
and
insb
cmp
es
mov
lret
call
stos
aad
les
dec
aad
push
pop
orb
cli
mov
movsb
repz
shll
mov
sbb
test
inc
shrl
sbb
pop
je
notb
cwtl
push
adc
pop
jbe
jmp
mov
xlat
cwtl
les
xchg
inc
mov
hlt
jmp
inc
add
ljmp
jg
cwtl
adc
aam
xor
aam
loope
jmp
or
push
inc
and
adc
shrl
lea
mov
pushl
jmp
and
outsb
sbb
jb
jae
mov
imul
movsb
inc
stc
stc
fstpt
sub
incl
int
sti
ret
xchg
mov
dec
xchg
pop
mov
mov
shll
ljmp
imul
mov
clc
movsl
xchg
ljmp
add
mov
loope
jns
jns
arpl
mov
fistps
int3
testl
decl
lcall
bound
insl
jb
test
mov
aaa
add
xor
stos
mov
andb
ret
push
mov
lods
outsl
aad
jne,pn
pop
fidivs
movsb
lods
push
push
fsubrl
xor
sbb
pop
inc
rclb
lret
outsl
xchg
cmp
decl
mov
fdivrs
pop
mov
fisttpll
addb
mov
xor
test
scas
and
out
ficoms
sbb
leave
inc
call
ds
lcall
push
push
mov
pop
sarb
vpsubsb
stc
push
jle
lods
insb
xchg
fstl
pop
std
inc
sub
ljmp
mov
and
stc
cmp
push
outsl
das
push
mov
int3
xor
testl
or
push
fldt
add
mov
ret
push
pushl
fimull
clc
cmc
loop
insl
mov
aas
and
jmp
push
pop
out
and
scas
inc
cld
out
jns
gs
mov
xchg
jb
movsl
into
cs
mov
popa
decl
cld
movb
jp
hlt
inc
rcll
aam
or
push
pushf
push
cmpsb
aaa
fnstsw
outsb
ja
sahf
xor
mov
xchg
dec
jb
adc
jmp
fnstsw
add
jae
je
daa
and
mov
aam
dec
ret
xchg
cmp
mov
mov
icebp
test
outsl
or
testb
fmull
mov
dec
sahf
mov
mov
mov
lret
cmpsb
into
push
movsb
pop
xchg
inc
les
loopne
test
test
fimuls
shlb
enter
or
and
fnsave
loopne
notb
pop
lock
mov
bound
xor
and
push
pop
jge
stos
int
pushl
in
fsubp
sbb
sbb
jb
fldcw
xchg
sub
dec
and
lcall
bound
xchg
xchg
xlat
mov
rcl
mov
mov
sbbl
jb
or
addr16
xchg
sub
sti
jbe
xor
lcall
push
xchg
pop
lds
fldenv
lods
xchg
push
lea
fcomip
or
push
nop
jns
sahf
xchg
sub
out
cltd
pusha
add
xlat
sbbb
cmp
in
fcom
pop
out
clc
push
cmc
mov
loop
push
and
adc
call
inc
ss
repz
and
pushf
sbb
int
pop
mov
xchg
lret
dec
sub
in
push
xor
inc
add
inc
jge
daa
jmp
dec
test
mov
pop
cmp
data16
loope
inc
cld
pop
pop
je
stc
sub
mov
pop
cld
cmpsl
add
outsl
mov
cli
push
or
mov
add
inc
insl
cmpsl
cmpsl
addb
sub
mov
adc
cmp
cmpsb
ljmp
addr16
cmp
and
ss
or
lret
pop
mov
jecxz
fists
pop
popa
dec
sub
incl
push
fwait
and
test
push
pop
enter
out
pop
pop
pop
jmp
mov
lcall
dec
or
and
mov
lds
call
adc
or
adc
sti
mov
call
movsl
and
inc
arpl
test
cltd
das
addr16
lret
jns
repnz
sub
js
rcrb
incl
sub
or
sti
sbb
sub
nop
scas
and
dec
pop
lret
jmp
das
cmp
hlt
scas
mov
jo
outsb
lods
dec
sbb
jae
mov
pop
adcb
std
mov
jl
sbb
adc
dec
mov
push
pop
add
cld
ja
mov
push
mov
sub
lret
dec
pushf
rcll
imul
ljmp
jl
pop
xchg
jle
mov
out
test
jmp
xor
and
mov
add
pop
xorb
les
ljmp
push
loop
cmpsl
rorb
jge
inc
cmp
insl
dec
aad
fiadds
adc
inc
out
xor
and
insb
out
pusha
pop
dec
fisttpl
pushl
enter
pusha
push
or
jnp
aas
push
outsb
hlt
mov
call
inc
jg
adc
mov
or
inc
sub
mov
out
loopne
sbb
fbld
mov
in
xor
push
pop
iret
add
cmp
into
daa
xchg
sub
mov
sbb
lcall
cld
fistpll
push
mov
mov
adc
out
decl
or
sarb
xchg
cs
lds
and
inc
xchg
dec
pop
dec
jo
mov
lcall
sbb
jnp
mov
popa
pop
sub
outsb
scas
xor
lret
cmpsl
pop
xor
ljmp
subb
sub
pop
orb
rorb
mov
or
sti
mov
and
sbb
daa
fwait
or
or
aas
lahf
lds
pop
sbb
sbb
cli
std
or
pop
pop
and
push
testl
icebp
test
movsl
add
lds
sarl
lds
mov
mov
aam
pop
mov
popf
add
incl
mov
pop
sbb
push
sub
out
mov
push
into
jbe
ja
jg
and
lds
mov
movsb
jecxz
xchg
popa
mov
je
adc
cmp
or
stc
sub
pop
xchg
in
xor
dec
sub
mov
ljmp
outsb
fsubp
mov
xor
clc
outsb
push
out
push
cmp
dec
aad
cmp
into
mov
iret
sub
xchg
adc
jl
popf
dec
xchg
mov
lock
xor
xchg
cwtl
and
cmp
jg
cmovns
cmp
sbb
setle
outsb
pop
sbb
mov
jg
lods
aad
dec
cs
push
imul
add
xchg
cmp
jg
in
repz
out
push
xchg
idivb
sub
ret
movsl
pop
or
aaa
std
incl
add
sub
hlt
mov
or
push
ljmp
test
or
shrb
add
js
data16
test
jmp
add
pushf
je
imul
jmp
jno
mov
jle
and
out
clc
inc
sub
mov
mov
fisubrl
fstps
mov
roll
sub
xor
bound
out
aad
pushl
fmuls
ljmp
addr16
or
pop
push
adc
data16
sar
or
sub
aas
cld
call
insl
xor
lret
in
sbbb
mov
aas
xor
xor
lcall
rcr
popa
fnstsw
push
inc
push
dec
cmp
fimuls
inc
mov
incl
push
in
and
clc
repnz
fistl
mov
out
xchg
xchg
push
movsl
ja
ljmp
testl
sahf
push
filds
push
std
int
outsb
rclb
int3
push
xchg
mov
popf
mov
fisttps
out
test
repnz
out
mov
call
adc
sbb
or
shl
pop
pusha
clc
test
hlt
cmpsl
ja
loope
push
aaa
idiv
jmp
add
ljmp
fidivrl
popa
rclb
xchg
xor
out
les
aad
loopne
xor
push
jle
add
push
out
leave
stos
push
decl
cmp
bound
pop
pop
fiaddl
insl
je
mov
es
out
js
or
shlb
push
test
jo
mov
pop
or
out
push
aas
jl
ljmp
and
jb
test
xlat
int
mov
fldenv
and
pusha
das
stc
jno
jg
decl
test
cmp
mov
aad
jnp
mov
ret
push
jl
sub
rorl
call
scas
lret
mov
and
cmp
push
cmpl
int3
mov
lods
movsb
mov
enter
repnz
and
call
add
aas
or
pop
xorl
loope
imul
mov
xchg
stos
mov
cld
lcall
mov
in
stos
out
popa
pop
jns
pushl
add
out
cmpsb
dec
add
loop
incl
scas
xor
mov
or
inc
cmpsl
pop
and
xchg
imul
incl
pop
enter
fwait
mov
adc
mov
in
adc
add
sti
dec
sub
imul
pop
cmp
pop
xor
jno
mov
inc
mov
ljmp
dec
mov
add
aaa
mov
in
aaa
dec
jg
cmp
adc
insl
setg
add
adc
adc
adc
loop
fisttps
mov
mov
or
cli
fsub
jbe
sti
fsubr
movsl
xor
sarl
jecxz
pusha
aad
dec
sbb
xor
adc
push
sub
sub
nop
mov
cmc
adc
jne
jge
jle
in
mov
dec
es
ljmp
mov
es
mov
jmp
pop
test
and
pop
dec
push
xchg
ja
mov
push
push
fsubrl
arpl
movsl
movsb
lcall
inc
xlat
nop
jge
lret
mov
mov
jg
jmp
pop
cmp
aas
lret
jnp
ret
cmp
mov
loope
scas
int
fcoml
shrb
add
add
ljmp
jmp
sbb
xchg
inc
and
scas
cld
inc
movsl
jmp
push
enter
ljmp
nop
cltd
mov
or
and
std
adc
adc
sahf
ja
pop
sub
call
into
in
cwtl
jo
aaa
mov
jb
cmp
xchg
mov
adc
pushl
lock
aaa
cmp
jae
arpl
sbb
xor
aam
xchg
decl
movsl
out
loope
pop
add
scas
cli
sub
sarl
mov
cmp
js
cmpsb
jp
push
ss
and
cli
inc
xchg
mov
mov
ljmp
jnp
xor
movsb
hlt
aas
pop
dec
inc
mov
push
into
sbb
cmc
cmp
cli
outsl
jg
or
ljmp
pop
in
inc
cli
int3
push
xor
imul
call
inc
ja
jp
incl
sbb
mov
test
mov
leave
in
xchg
or
sahf
in
and
decl
ret
cmp
mov
faddp
push
hlt
cmc
dec
jg
mov
pop
fs
fstpt
sti
call
mov
pop
rcl
inc
push
pop
add
ds
dec
imul
or
testb
lret
mov
add
sbb
jo
sub
in
mov
jmp
jmp
xor
dec
lods
add
push
popf
outsl
mov
ss
cs
dec
inc
aam
aas
or
pushf
les
jmp
jmp
scas
xor
inc
adc
sub
fs
xor
inc
test
call
lcall
sub
dec
out
push
es
mov
cmc
je
ljmp
in
sbb
push
push
cmpl
repnz
pop
ficoml
xchg
pop
pop
push
movsl
push
mov
loop
push
and
jg
ret
negl
add
clc
movsb
test
sar
ljmp
mov
mov
inc
test
sbb
mov
cs
es
mov
call
sub
or
jmp
jnp
fcmovne
dec
out
or
adc
pushl
xchg
das
adc
ljmp
add
pop
addr16
rcr
jge
ljmp
add
icebp
inc
push
xchg
mov
push
mov
pop
inc
fiadds
rcl
push
fldcw
cmp
push
and
dec
scas
dec
fdiv
or
icebp
jge
jge
ljmp
rorb
repnz
test
test
lahf
pop
and
cld
adc
sbb
std
sub
hlt
movsb
cmpsl
mov
sub
pushf
data16
xchg
lahf
insl
xchg
lea
insb
add
shl
in
cli
inc
dec
int
jb
aam
or
cmp
shll
xorb
sbb
hlt
or
incl
sub
repz
xor
xchg
mov
in
sar
xor
jmp
dec
pop
sub
outsl
xor
dec
pop
and
sarb
sbb
sub
lcall
sbb
xchg
lds
iret
pop
pop
mov
ja
jbe
dec
stc
out
bound
add
push
mov
cmp
outsl
cli
jp
pop
sbb
xor
cltd
out
popf
cmp
push
jbe
ret
fs
lret
std
cmp
loopne
out
mov
xchg
negb
filds
inc
ljmp
sbb
cmp
stos
sbb
lahf
add
dec
sbb
pop
std
rolb
ret
stos
gs
push
in
mov
out
data16
sbb
add
cld
les
xchg
dec
xchg
and
fidivrs
popf
mov
mov
rol
out
aaa
imul
and
dec
fdivrl
rclb
xchg
add
sbb
jnp
dec
dec
cmp
ljmp
test
mov
xchg
add
pop
mov
fldenv
or
and
imul
add
dec
mov
mov
adc
lock
xchg
jmp
cmp
mov
cwtl
and
pop
shll
jmp
jle
enter
push
shl
mov
ret
aaa
sbb
aad
add
mov
push
je
or
outsb
mov
bound
cmpsl
out
adc
incl
insb
das
ret
and
mov
sbb
fwait
pop
out
icebp
and
xor
push
add
push
das
xchg
add
cmp
sbb
outsl
mov
call
je
fdivrl
mov
dec
sbb
pushl
stos
pop
xor
mov
call
insb
lock
adc
sub
or
sti
daa
popf
das
mov
inc
add
das
fwait
jmp
jmp
xor
ds
xor
int3
in
add
pop
adc
add
daa
push
fsubs
sahf
cmpsb
fwait
push
call
mov
sbb
cmp
data16
int
and
mov
sarl
dec
call
mov
je
sbb
addr16
jns
inc
cmp
lcall
inc
or
incl
enter
mov
pop
sahf
and
decl
clc
mov
jne
jb
jno
sub
hlt
xchg
inc
mov
sub
stc
or
cli
pop
icebp
call
daa
jae
pop
mov
cmp
movsb
out
xlat
shlb
pusha
and
test
scas
bound
out
repz
mov
push
ljmp
and
pusha
cmc
rcrl
jmp
pop
xor
seto
ret
mov
fwait
in
insl
adc
sbb
pushl
adc
jg
xor
fs
ret
adc
jb
imul
or
mov
push
lods
or
call
mov
mov
ljmp
dec
push
hlt
rolb
pop
sbb
icebp
ds
lahf
fs
repz
jmp
fcoms
cli
lea
jnp
das
ror
and
jns
dec
aad
sbb
sbb
in
and
inc
mov
cld
pushl
pop
jne
int
mov
add
fdiv
lahf
dec
test
jecxz
sarl
dec
and
ud0
decl
xlat
rcrl
fwait
jb
stos
ja
xor
jo
popa
ljmp
loope
pop
lods
dec
test
cli
lds
scas
repnz
xlat
int
mov
jl
pusha
popf
sahf
enter
add
xchg
pushf
ljmp
andb
aam
fadds
gs
jecxz
test
xor
cmp
repz
repz
push
mov
imul
in
pop
cltd
punpckhbw
int3
xchg
test
lds
das
xchg
cmp
inc
sar
ja
inc
mov
popa
mov
popa
inc
rcr
sti
xor
stos
ret
jns
test
jg
push
in
lea
or
pop
cmc
incl
jg
test
push
and
test
pop
lahf
sub
loopne
in
int
in
idivl
pop
popf
popf
push
aas
or
decl
addr16
jns
stc
and
pminub
xor
lahf
pop
sub
out
sub
jmp
out
cmp
mov
jnp
ret
dec
cmp
out
ret
sahf
mov
outsb
sub
repz
mov
iret
imul
fwait
inc
xchg
add
cwtl
jb
addr16
ljmp
mov
mov
xor
push
push
jnp
fbld
lcall
cmp
in
jo
add
sbb
mov
loopne
mov
out
pop
jno
jb
sbb
push
repz
mov
call
mov
lret
pushf
test
sub
push
mov
subl
xor
jg
add
adc
pop
test
xor
push
dec
je
fs
aas
xchg
incl
movsl
cmp
push
jns
jg
daa
push
int
cmc
inc
ret
jge,pt
lock
add
or
call
add
push
dec
icebp
jb
cmp
in
push
movb
cltd
fdivr
mov
sub
lret
mov
into
fsubp
fmul
adc
xchg
add
mov
enter
je
call
je
fimuls
fmull
in
mov
test
ret
cli
icebp
jecxz
jb
add
and
xchg
mov
lods
test
repnz
outsb
jno
mov
roll
xlat
lcall
sub
push
push
push
push
jo
bound
sub
xor
mov
and
divl
adc
dec
fcomip
jmp
mov
mov
push
in
js
cmp
andb
jg
inc
cs
das
cmpsl
in
and
in
test
push
adc
dec
mov
sub
push
or
mov
jg
fwait
dec
test
push
rclb
cmp
pushl
mov
jle
push
ret
shlb
xchg
cmp
adc
dec
or
inc
orl
call
movsl
sbb
popf
xor
or
inc
in
lods
xchg
ljmp
stos
call
in
ljmp
jg
push
or
sub
mov
das
mov
incl
scas
lea
sub
cmp
in
mov
jmp
and
push
mov
mov
int
add
lcall
jmp
xor
loopne
xor
jb,pt
sarb
ljmp
insl
iret
scas
fcompl
and
pop
xchg
jmp
outsl
jmp
sbb
incl
negb
add
cli
inc
mov
adc
jne
aas
mov
adc
addr16
popa
jg
icebp
pop
and
xor
and
psubsw
push
out
pop
inc
cltd
sbb
pop
push
xchg
add
test
repnz
mov
push
add
test
pushf
movsb
ds
jmp
push
mov
sub
mov
push
mov
xchg
in
dec
stos
cli
cmpsl
andl
fsubl
dec
add
orl
test
sbb
jbe
jmp
add
icebp
lods
jp
mov
popf
cld
inc
or
clc
add
pop
dec
xchg
clc
std
cmc
jg
ja
adc
mov
lret
out
nop
sar
ljmp
push
test
mov
scas
fdivrs
mov
and
mov
or
xchg
push
hlt
ret
dec
jbe
jle
and
pushf
jmp
incl
or
in
push
jp
shlb
clc
dec
mov
test
pop
enter
push
jmp
pop
xor
out
mov
in
icebp
push
jg
imul
add
sbb
and
push
dec
or
mov
loop
stc
sub
imul
addr16
adc
ljmp
ret
inc
das
dec
fwait
ret
pop
aam
sahf
cld
xchg
inc
sub
call
xor
mov
imul
and
jmp
orl
jmp
sbb
sub
iret
mov
lock
and
aam
and
js
test
sti
jle
push
adc
lcall
pop
pop
clc
sahf
cmc
add
sbb
int3
inc
adc
sti
mov
dec
and
lcall
aas
aas
out
inc
jl
aam
stos
movsl
inc
into
ret
loop
bswap
inc
mov
fbstp
mov
stc
shll
test
shll
pop
pusha
cmpsl
xor
shlb
ljmp
arpl
cmc
cmp
insb
mov
cmp
rclb
or
cmpsb
push
push
pop
icebp
ljmp
xchg
mov
cld
iret
aad
adc
dec
enter
in
jb
scas
mov
dec
outsb
push
imul
pusha
iret
popl
inc
fiadds
adc
xchg
or
sbb
mov
pusha
movsb
jae
adc
pushl
xor
jmp
fs
mov
insb
jae
mov
pop
mov
fs
inc
rclb
leave
push
jl
fld
or
sub
dec
imul
std
push
dec
cltd
in
sbb
jl
sbb
or
push
cmp
call
dec
pop
clc
lret
aam
cmc
lods
dec
jb
out
lcall
fdivrs
cmp
in
hlt
lcall
dec
decl
push
sub
adc
aam
push
mov
aam
fwait
fistpll
iret
dec
dec
jmp
daa
push
xlat
aas
sbb
pop
ja
test
push
hlt
jmp
leave
xchg
dec
clc
pop
mov
cmc
sbb
rcr
daa
in
out
xor
repz
dec
arpl
cmpsb
xchg
mov
mov
pop
cmp
aam
lock
imul
dec
idiv
decl
faddl
xchg
pusha
or
ja,pt
testb
and
inc
sub
popa
and
ljmp
xor
std
jp
cmc
cmp
stos
dec
scas
sti
lods
rcrl
sbb
adc
jne
adc
cmp
andl
mulb
and
dec
lods
stos
and
adc
jb
inc
ljmp
ljmp
sar
lock
xchg
mov
addr16
xchg
out
dec
adc
add
in
mov
mov
push
vpmulhuw
adc
sbbb
data16
inc
mov
into
jg
repz
shrb
mov
lret
cs
xchg
lret
jecxz
in
ret
call
repz
arpl
adc
adc
push
addr16
xor
movsl
dec
sbb
mov
in
out
xchg
nop
mov
std
fistps
lcall
out
out
sbb
or
fistpll
stos
call
clc
push
dec
lret
inc
cld
sub
das
push
sub
sbb
ja
sub
push
push
icebp
and
jnp
jno
sub
call
and
lds
aas
or
sti
cltd
push
jae
rdtsc
mov
inc
shlb
stc
jb
scas
pop
push
cmp
xchg
stos
in
mov
xor
cld
cmpl
dec
ss
ljmp
mov
or
sbb
inc
stos
xchg
xchg
out
sub
push
cmp
jmp
arpl
pop
or
fildl
cmp
or
repnz
mov
decl
push
push
mov
out
or
lahf
mov
insl
pusha
fisubl
cmpps
mov
loopne
pop
pushf
pop
sbb
xor
fidivs
or
imul
pop
mov
ljmp
push
push
jecxz,pt
pop
push
clc
loopne
xor
jmp
loop
or
cli
setge
add
mov
push
dec
ljmp
dec
das
lods
fsubrl
js
jmp
add
and
mov
in
fcompl
decl
dec
gs
mov
pcmpeqd
pop
adcb
push
push
movsb
dec
mov
mov
dec
sub
fwait
adc
clc
pop
ret
out
xor
ds
pop
inc
into
cmc
xchg
sahf
jmp
roll
test
xorl
std
mov
paddusb
cmp
aas
jmp
loope
and
cmp
pushl
inc
ljmp
push
cmp
lea
jnp
jae
mov
or
mov
dec
in
mov
loopne
xor
cwtl
pushf
jp
pop
sahf
in
int
out
iret
incl
decl
out
mov
mov
xchg
sbb
enter
ja
or
cs
incl
push
shll
xchg
test
ss
bound
sbb
or
pop
cmp
push
out
movsl
push
das
xchg
dec
cs
push
sub
sarl
call
jecxz
sub
inc
inc
xor
mov
push
cmp
rcr
pop
sahf
dec
scas
pop
jnp
fildll
loopne
sbb
mov
fwait
jns
or
pop
dec
adc
jmp
inc
jl
jns
jl
in
cwtl
push
add
out
fdivrs
and
insb
push
push
fsub
xchg
adc
call
sti
cmp
lea
mov
xchg
xor
push
adc
xchg
lea
cld
lcall
inc
sub
sbb
fdivs
mov
outsb
pop
cwtl
sub
xor
ljmp
jg
cltd
add
sbb
jmp
mov
sti
sub
dec
test
push
add
jae
pop
in
shll
pop
popf
sbb
mov
mov
shrb
divb
iret
push
mov
stc
loope
jb
mov
xchg
sbb
fadd
or
xor
cltd
sub
xlat
into
add
xchg
negb
test
push
jmp
hlt
fs
sub
cld
inc
jnp
sub
nop
andl
mov
or
adc
or
jg
ljmp
shlb
fsubrp
outsb
xchg
sub
ja
clc
cld
xchg
xchg
and
test
pushf
push
lea
je
fdivr
cmpsb
or
mov
ds
fistl
mov
lahf
inc
mov
cmp
or
adc
push
inc
sahf
rorl
xchg
cmc
fcoml
lcall
push
and
xor
mov
sbb
xorb
xchg
xor
mov
incl
add
add
adc
mov
int3
cmp
stos
pop
mov
loope
ljmp
ljmp
and
idivl
stc
in
mov
out
sub
ljmp
or
push
into
xor
mov
lret
pusha
aam
fisubs
mov
call
insl
push
inc
insb
xor
rcrb
mov
mov
lods
decl
jbe
aam
jl
sahf
das
aam
sub
das
jno
adc
enter
incl
jecxz
pop
push
pop
and
insl
repz
cmp
add
push
mov
ljmp
mov
inc
shlb
pushf
sbb
call
dec
int3
lret
sub
jo
mov
mov
mov
jo
inc
xorb
mov
imul
xor
cmc
adc
orl
shrl
scas
cltd
popa
test
int
or
add
daa
es
call
or
sbb
xlat
inc
test
jmp
dec
cwtl
sbbb
enter
ljmp
out
scas
sar
mov
repnz
aam
dec
inc
lock
ljmp
sub
add
jp
or
shll
mov
mov
into
aaa
pop
mov
sar
ljmp
cmp
jne
lret
nop
jg
add
pop
popa
iret
xchg
mov
jmp
scas
mov
inc
cmp
mov
cmc
mov
jo
daa
dec
and
andb
je
dec
lret
push
mov
cld
jle
push
lret
push
icebp
scas
cmpsl
les
rcll
lcall
test
xchg
jbe
repz
test
stos
inc
or
aad
add
xor
and
push
jns
xlat
aaa
mov
push
mov
push
pop
ret
popa
inc
je
mov
inc
mov
adc
cli
add
sub
pushl
loop
gs
cwtl
and
lret
std
call
loopne
mov
pop
cmp
hlt
jge
or
jo
pop
xchg
xchg
push
pop
xor
lcall
std
stc
xor
scas
iret
mov
mov
mov
fcomip
lcall
adc
movsl
or
pop
lods
adc
ret
mov
incl
shlb
les
pop
lahf
pop
pusha
nop
jge
xchg
cld
push
xchg
mov
in
adc
cld
mov
adc
or
dec
and
ljmp
loop
jno
ljmp
jge
mov
mov
dec
testl
aas
dec
pushl
push
or
cmp
out
mov
lahf
sti
and
scas
xchg
jmp
and
pushl
std
mov
dec
adc
jne
push
mov
test
jnp
stos
sti
ret
lret
out
mov
xor
sbb
and
int
cmpsb
add
mov
clc
xor
add
push
fnstsw
dec
and
out
dec
and
test
rol
loopne
idivl
sbb
push
negb
hlt
push
lods
or
insl
fcmovnbe
adc
push
or
push
insb
xorb
inc
sbb
mov
adc
int
xchg
mov
in
cmp
outsb
cmc
xchg
mov
jbe
dec
aaa
mov
sub
dec
adc
mov
inc
les
iret
fcomip
call
pop
or
and
out
ret
ret
add
mov
xor
ljmp
sarb
mov
lea
cmpb
mov
pop
hlt
cmp
fbld
jg
mov
mov
push
sbb
mov
push
mov
xor
dec
cmp
jg
jnp
cld
dec
pop
mov
pop
add
and
mov
jb
mov
into
fucom
inc
jns
dec
add
shrl
enter
notl
mov
add
idiv
lcall
call
pushl
mov
pop
inc
nop
es
outsw
xchg
scas
and
je
lcall
dec
jne
mov
arpl
jne
fildl
pop
popa
push
mov
mov
or
jne
cli
or
or
mov
sub
in
js
movsb
fildll
in
incb
or
mov
jge
leave
and
push
sti
pushf
test
sbb
cli
ljmp
jg
jb
add
sbb
push
xor
or
ljmp
std
aam
hlt
loope
dec
adc
fwait
jnp
xor
lock
decb
cmp
ljmp
mov
data16
in
fidivl
add
or
rcrb
sbb
call
jne
lret
fs
sbb
push
insb
and
les
inc
push
inc
or
or
pop
pop
insb
incl
inc
adc
imul
push
dec
adc
pushf
pop
ja
jg
cmpsl
mov
xlat
in
dec
inc
jb
sub
or
decl
pop
jne
push
or
dec
les
repnz
xor
js
xor
fmuls
sbbl
dec
enter
jne
adc
cmp
pop
ja
cltd
adc
inc
dec
adc
adc
dec
and
sti
out
clc
mov
adc
dec
popf
xchg
add
sub
pop
push
lea
cli
aad
mov
testb
ljmp
dec
lds
jb
cmp
inc
je
mov
lods
mov
adc
push
xchg
ds
mov
pop
icebp
pop
mov
ret
ret
sti
xchg
mov
loope
push
mov
pop
jg
mov
mov
mov
and
and
leave
out
jmp
sbb
sub
hlt
in
pusha
sti
or
aad
loopne
fmuls
jo
movsb
bound
cmpsb
push
fs
decl
lock
cwtl
dec
mov
dec
mov
scas
aas
jmp
xchg
loop
leave
decl
sarl
xchg
idivb
add
test
pop
add
xchg
xchg
orl
addb
rorb
push
mov
movsb
mov
inc
xchg
fidivs
shlb
mov
cmpsb
dec
sub
std
fstp
cmp
test
shlb
mov
cmp
add
mov
lahf
add
jmp
lahf
inc
xor
imul
jnp
es
sbb
fisubrl
data16
mov
popa
jo
push
sub
jbe
pop
lds
mov
mov
mov
jae
testb
inc
mov
push
cmp
test
lcall
add
not
test
fcoms
cmc
test
rclb
mov
jmp
fcomps
data16
xor
fnstcw
cmpsl
xchg
clc
fists
dec
inc
dec
sub
jg
push
adc
sahf
push
insb
push
pop
xchg
push
jo
scas
mov
popf
sbb
and
push
pop
push
inc
and
jbe
out
lods
js
mov
dec
imul
sahf
in
mov
cmpsl
cli
lock
mov
push
rorl
xchg
inc
pushl
xchg
sbb
outsb
cs
std
enter
mov
push
aaa
add
jmp
test
lahf
sbb
in
out
mov
cwtl
icebp
in
cmc
mov
jmp
lock
fsts
scas
cmp
xorb
jbe
jns
xchg
xchg
std
pop
clc
out
leave
xchg
sbb
jmp
inc
arpl
shlb
mov
shrb
xor
rcl
add
lahf
cltd
mov
xor
in
popa
outsb
ljmp
lahf
mov
push
data16
xor
das
push
idiv
daa
add
idivl
ljmp
push
sub
pop
inc
sub
adcb
inc
pop
sub
test
cmp
outsl
stos
pop
fs
orl
js
test
mov
mov
mov
fcomip
lea
adc
test
ja
fidivrs
sti
xchg
inc
cli
fadd
mov
loope
or
pop
add
mov
faddp
call
push
mov
cld
movsb
lret
mov
test
int
mov
loope
adc
xor
sti
add
push
pop
add
mov
lds
subl
mov
push
pusha
adc
popf
daa
adc
pushl
dec
xorl
add
insl
adc
les
mov
or
pusha
std
jmp
in
mov
fadd
and
jecxz
pop
xchg
mov
stos
insb
test
fdivl
sbbb
push
div
cmp
pop
or
adc
add
test
jmp
mov
cmp
mov
xor
mov
ret
loopne
pop
dec
add
mov
mov
cmp
jns
stos
cmp
mov
lahf
clc
jle
out
push
insl
or
pushl
push
xor
push
lds
adc
lret
dec
ret
mov
jmp
pop
and
stc
lahf
popf
sbb
jg
ljmp
add
mov
mov
push
rcrl
imul
add
jg
dec
jb
dec
xor
xchg
mov
aaa
call
sbb
int
adc
decl
js
jnp
dec
inc
jnp
iret
sbb
aam
xchg
mov
cmpl
push
movsl
decl
add
mov
push
ja
pop
xor
and
inc
pusha
stos
lcall
out
cmp
loop
enter
mov
adc
cmpb
popf
inc
adc
repz
aas
hlt
xlat
jge
jp
ljmp
pop
int3
cli
rorb
mov
pusha
mov
mov
cmp
stos
mov
movsl
pop
lahf
cmp
incl
icebp
and
jne
mov
add
pop
sub
xor
fsts
mov
mov
dec
int3
aam
inc
lcall
jo
mov
into
jle
pushl
or
ficoml
sub
adc
repz
push
mov
sahf
cmp
xorl
xor
incl
enter
mov
leave
push
rorb
faddl
clc
pop
dec
jl
mov
pmaxub
and
or
dec
jne
inc
xchg
cmp
pushl
mov
scas
mov
inc
and
xchg
lret
idivb
ficomps
and
inc
mov
pop
pop
icebp
sub
clc
decl
pop
outsl
jecxz
push
adc
add
test
or
jg
clc
fldcw
into
mov
ds
pop
pop
out
cmp
pusha
imul
iret
cmp
jns
pushl
or
cmp
sub
orb
mov
inc
jae
lret
test
decl
sbb
mov
push
pop
fldl
mov
cltd
xor
inc
mov
fucomip
jmp
or
mov
mov
or
arpl
lcall
mov
inc
les
das
lret
pop
out
pop
pop
dec
sti
push
stos
les
daa
jmp
sahf
call
cmc
popf
mov
aas
es
jl
push
sub
popf
es
xchg
call
xlat
das
in
jmp
movsl
jecxz
imul
sbb
cli
lcall
mov
insb
mov
in
ret
movsl
dec
lcall
xor
enter
insl
lea
rcrb
in
insb
mov
adc
scas
sti
push
dec
in
test
sahf
and
arpl
add
shl
mov
lcall
add
daa
outsl
pop
out
repnz
in
sbbl
sbbb
dec
sub
and
pushl
sbb
cmpsb
xor
pusha
fildl
aam
adc
sbb
rorl
push
incl
push
ss
cmc
lcall
fldl
sbb
xor
adc
fdivrp
sbb
cmp
loope
cmc
call
sbb
dec
icebp
mov
lods
or
stos
sbb
xchg
xchg
mov
movsb
jnp
cmpsb
pop
stos
call
sbb
cwtl
add
pop
mov
adc
jnp
test
mov
lret
cltd
push
incl
shlb
mov
jle
js
add
dec
push
mov
incl
es
mov
adc
inc
mov
xor
dec
pop
and
ret
ljmp
pop
loop
lods
test
aad
daa
adc
adc
cmp
push
loope
ljmp
or
cmp
mov
lret
mov
xor
stc
sub
pushl
sub
ffreep
jo
fstpt
push
lahf
xchg
push
loopne
mov
fidivl
lret
push
lods
jecxz
xor
mov
dec
in
push
daa
sti
jle
mov
cmp
add
and
xchg
sbb
fistpl
ds
fwait
mov
sub
test
test
xchg
das
outsb
pop
xchg
or
repz
jne
cld
jmp
or
sub
out
cmp
cmc
or
test
cwtl
dec
in
sub
aaa
fsub
cmp
mov
out
cmp
lcall
cmp
mov
aad
imulb
mov
clc
mov
xlat
xchg
repz
cmp
cmp
or
roll
es
rorb
div
mov
jns
les
xchg
cmp
push
jno
push
stc
pusha
xchg
into
pop
incl
push
cmc
xchg
lods
push
pop
leave
and
rol
inc
addl
call
and
add
fcomps
out
cmc
inc
mov
lahf
loope
mov
test
jmp
cmpsl
int3
inc
call
sarb
aas
mov
sub
inc
fcompl
leave
inc
pop
int
cmp
incl
hlt
fcoml
lock
add
mov
mov
xchg
xchg
xchg
je
ljmp
xchg
pop
cmpsb
fdivl
das
mov
push
inc
cmp
push
sahf
loop
incl
adc
in
mov
ficoms
cld
add
cmpsl
jg
dec
fs
std
loope
ljmp
dec
das
mov
adc
mov
daa
lods
mov
gs
pushf
xor
xchg
int
es
sar
mov
sub
mov
mov
in
pop
insl
sbb
sahf
sti
fildll
mov
sti
imul
xchg
andl
adc
repnz
fdivrp
pushl
mov
jns
fs
daa
jae
cmp
inc
rorb
dec
sbb
adc
out
loope
mov
gs
and
push
loop
or
cmp
imul
scas
ret
xchg
jg
loope
enter
out
insl
mov
test
and
dec
cmc
dec
inc
cli
decl
push
and
or
dec
cs
call
incl
xchg
mov
sahf
daa
mov
std
sub
aas
repnz
jo
mov
shll
ficompl
insb
adc
inc
sbb
jmp
lea
dec
xor
mov
pop
vmovntps
push
sbb
test
ror
and
jmp
lods
scas
xchg
xcrypt-ecb
cmpsl
dec
pop
or
mov
push
adc
icebp
repz
cmp
dec
ret
pop
rcll
cmp
jg
or
repnz
lock
call
in
out
test
rorl
shrb
mov
add
jbe
fs
ljmp
aas
pop
push
rcrb
xchg
sub
dec
mov
test
mov
in
lret
dec
mov
fcomip
jge
bound
xchg
pop
inc
add
push
js
clc
and
add
dec
sbb
cmp
call
cs
hlt
and
push
xchg
jmp
cltd
jb
dec
cmp
insl
mov
fsts
nop
enter
cmp
pop
mov
dec
jg
mov
call
fcomip
sbb
daa
push
pushf
add
cmp
jmp
sub
outsl
cmp
loopne
cld
or
std
imul
shrl
pushl
cwtl
data16
jo
xchg
or
sar
inc
lds
inc
mov
adcb
fisttpll
out
lods
je
xor
cmpsl
in
mov
pop
mov
out
imul
mov
mov
xor
test
aaa
loopne
scas
mov
dec
mov
js
jecxz
testb
add
pushl
cmp
adc
push
jg
lret
xchg
movsl
pop
cwtl
lret
rolb
cwtl
mov
cwtl
cmp
fwait
lcall
loopne
adcl
repnz
pop
dec
fdivrs
loope
adc
add
lea
imul
push
or
mov
or
dec
addr16
cmpsl
sbb
iret
mov
inc
popa
sbb
jbe
sbb
inc
add
imul
pushl
lds
jb
lahf
mov
add
and
ja
adc
test
jg
inc
hlt
cmp
mov
icebp
inc
mov
dec
aad
movsl
sub
cmpsb
call
loop
inc
sub
mov
push
cli
pop
pop
addr16
sar
dec
cmpsb
test
fdivrs
mov
cltd
das
xlat
sbb
in
mov
add
incl
test
rcl
testb
cld
jg
test
loopne
mov
fstl
xchg
inc
in
out
pushl
dec
and
fistpl
test
shll
inc
stos
add
lea
fldt
jmp
and
pop
push
not
cli
lea
and
push
push
mov
cmp
lods
or
fst
xchg
mov
xchg
outsb
ficoml
jae
sti
xor
and
pop
mov
mov
lret
inc
movsl
mov
fs
push
pop
xchg
jge
cmpl
call
dec
mov
mov
cmpb
jae
repnz
sbb
xor
dec
in
cmpsb
mov
in
mov
ja
fwait
xor
loope
repnz
out
loope
and
dec
fcoms
lahf
fsubs
or
mov
xchg
sbb
arpl
push
and
fnstenv
std
loop
test
xchg
push
rorl
jne
cmp
loopne
and
and
nop
decl
aad
scas
xchg
std
test
xor
pop
or
and
pop
xchg
adc
sbbl
pop
loopne
clc
jl
xchg
iret
sbb
cmc
sbbl
hlt
popf
lret
movsb
push
call
lods
mov
ja
cmp
outsb
add
mov
imul
jecxz
data16
pop
xchg
lcall
scas
mov
push
inc
clc
mov
pop
add
sahf
movsl
sub
cld
int3
pop
or
mov
in
es
mov
mov
xchg
fucomip
rcrl
and
mov
sahf
cmpsl
jo
aam
push
gs
pop
mov
dec
push
icebp
adc
mov
stos
mulb
mov
imul
rcll
jg
add
aas
sub
add
xor
test
dec
jle
xor
dec
mov
lcall
inc
pushf
mov
push
jbe
cmc
imul
mov
jg
jns
cwtl
add
in
stos
imul
js
mov
pop
dec
jecxz
imul
stos
jne
push
jp
negl
add
sarl
sbb
jle,pn
push
push
sub
jno
cli
rcr
cmp
std
outsl
add
jb
es
rcl
jge
ficoms
or
ret
mov
and
mov
jae
call
ljmp
cmp
call
lret
cmp
pop
pop
jle
stc
pop
mov
fcmovnu
or
je
or
xchg
push
inc
call
add
ficomps
push
sub
sbb
call
add
adc
mov
cwtl
inc
mov
jp
int3
mov
xchg
pushl
and
jne
adc
jae
push
cs
call
jp
sbb
incl
adc
jge
lcall
xchg
pop
ret
das
push
outsb
mov
jg
jecxz
mov
sti
out
into
cmp
sub
jge
mov
nop
xchg
sbb
popa
adc
inc
ret
popf
test
arpl
mov
pushf
leave
imul
and
bound
dec
xlat
push
add
repnz
shlb
cli
add
pop
neg
repz
xchg
add
fs
jp
lea
lret
decl
mov
dec
aam
mov
cmp
jbe
fidivs
xor
cmp
insl
xchg
pop
cmp
push
ljmp
popl
out
popf
or
or
pusha
jno
adc
inc
into
sbb
mov
incl
int3
fldt
stos
jbe
mov
jae
ret
adc
xchg
and
filds
mov
enter
icebp
cmp
incl
push
sbb
xchg
loopne
insl
test
insl
scas
out
lss
xchg
lret
sbb
push
int
and
lods
jmp
inc
aas
adc
inc
das
sarb
scas
xorb
hlt
jge
jae
in
dec
mov
adc
call
in
cmp
pop
sbb
or
lods
mull
push
lods
and
pop
cmp
outsl
clc
jmp
or
dec
jae
pop
inc
inc
or
jmp
xchg
or
add
xchg
mov
in
ds
or
pop
push
cmp
mov
pop
inc
dec
push
std
in
and
push
lahf
imul
jecxz
mov
out
filds
std
dec
push
mov
xor
lret
mov
loope
and
and
sub
fcomip
push
cmpsb
insb
daa
xor
jnp
push
and
inc
or
subb
les
out
aad
adc
xchg
pushf
mov
test
les
les
jle
in
leave
and
dec
nop
pushl
js
ja
loop
sbb
subb
out
push
sbb
rclb
pop
inc
in
stos
jg
incl
int3
iret
out
fs
cltd
pop
push
cmp
notl
inc
test
fxch
mov
jecxz
adc
dec
lods
cmp
repnz
test
int3
mov
mov
sub
xor
stos
dec
add
pop
adc
mov
out
add
pop
sub
or
cltd
mov
push
mov
mov
mov
sub
mov
loopne
fcompl
jge
or
cmpsb
pop
or
jmp
mov
jne
imul
and
push
fsub
mov
push
mov
cwtl
ja
mov
insl
inc
pop
fwait
cmp
leave
movsl
movsl
loope
fildll
fcompl
xor
into
push
or
sar
inc
icebp
push
dec
mov
dec
dec
movsb
push
lcall
fucomp
jae
loop
lock
loop
sub
xor
xor
imull
mov
rcrb
ljmp
mov
std
jne
jle
loopne
mov
sub
and
jno
and
aam
push
jp
pop
jno
inc
and
call
xchg
out
in
out
shr
lods
mov
decl
fdivrl
js
fwait
lcall
jmp
sahf
lea
xor
mov
decl
aad
lock
or
popa
add
movsb
jecxz
mov
ds
cmp
incb
rorl
jmp
and
push
push
sub
mov
jecxz
adc
mov
cmp
or
inc
jmp
icebp
jae
movsb
add
mov
and
or
push
push
sbb
xor
pop
popf
xchg
test
mov
mov
ljmp
jle
data16
jp
xchg
shrl
lds
cli
aas
jge
pop
das
decl
lcall
mov
adcb
add
aas
orb
add
lcall
out
loopne
popa
rcrb
mov
rep
scas
imul
cmp
pop
leave
pop
fwait
jnp
incl
sub
addr16
ror
cs
ja
adc
sahf
or
fisubrs
pushl
ret
ds
mov
add
mov
sub
and
outsl
mov
jo
mov
sti
mov
add
hlt
dec
fildl
loop
jl
mov
in
xor
lahf
test
aaa
pusha
push
mov
out
mov
mov
ja
pop
sub
and
sbbl
add
push
mov
jmp
test
pop
mov
ret
jb
adc
outsb
inc
inc
and
fs
xorb
pushl
js
sbb
inc
xchg
or
mov
shlb
jbe
sti
sbb
jg
pushl
repz
sar
lods
jbe
or
bound
std
stc
mov
stos
mov
imul
jmp
xor
sbb
leave
aas
adc
ds
xchg
dec
cli
call
jg
in
outsl
pop
add
rcrb
sub
jmp
outsb
addr16
popf
mov
es
push
and
or
out
cmc
xchg
dec
push
hlt
mov
xor
fucomi
pop
mov
sbb
lret
orl
fcoms
mov
push
sar
call
loopne
push
fwait
pusha
or
sbb
out
lds
xor
push
inc
in
lcall
sub
mov
add
or
icebp
sbb
enter
js
mov
in
test
push
xor
cmp
les
cld
outsb
stos
call
ja
xor
sub
loope
into
lahf
test
cmpsl
push
cmp
adc
mov
rcrl
iret
add
pop
jne
ljmp
push
inc
pusha
and
jl
jge
hlt
decl
fstpt
mov
jecxz
jmp
test
jns
nop
jo
lcall
fidivs
jno
xchg
xchg
inc
fcom
idivb
outsl
fmulp
aaa
rcr
insb
ljmp
xor
lcall
jns
loope
mov
dec
stos
inc
push
and
cmpsb
mov
mov
call
imul
int3
cmp
lods
ss
push
mov
mov
das
xor
ljmp
mov
arpl
add
scas
inc
or
fisttps
sub
dec
scas
jne
stos
dec
jae
pop
mov
insb
cs
jmp
inc
in
ljmp
dec
test
adc
imul
xor
ret
hlt
push
lcall
inc
jmp
stos
cltd
test
scas
data16
ljmp
popf
mov
out
mov
gs
sub
jmp
rcrl
enter
sarb
mov
push
ret
bound
sbb
jg
test
fwait
or
jmp
icebp
out
push
pop
xor
in
addr16
loopne
cmp
hlt
into
repnz
adc
ljmp
out
add
push
nop
clc
jg
pop
jo
push
movsb
mov
add
sub
call
les
into
ja
mov
and
jmp
out
cmc
fcomip
jmp
pop
nop
scas
lods
or
push
daa
pop
hlt
cmp
add
les
lahf
push
ljmp
dec
mov
jbe
mull
sarb
xchg
testb
pop
sbb
fcomip
call
in
sbb
dec
leave
sbb
pop
pop
jnp
and
fstl
pop
stos
mov
pushl
aaa
mov
fwait
xor
imul
or
push
lahf
pop
xchg
rcll
pop
pop
data16
mov
scas
rclb
push
jae
and
mov
insw
xchg
xor
push
pushl
and
in
fsubrl
es
fidivrs
test
ss
pop
adcb
or
in
push
jle
xchg
mov
pop
inc
lea
xchg
pop
add
scas
fdiv
or
mov
scas
sbb
add
mov
xchg
mov
xor
daa
lret
loop
xchg
fcos
jmp
pushf
stos
loop
das
lret
pusha
inc
xchg
rcrl
call
mov
lcall
dec
push
or
cmp
push
jge
leave
add
mov
cmovns
repz
jae
dec
rcrb
jg
addr16
jbe
mov
and
popf
in
add
sub
iret
jnp
dec
cwtl
pop
mulps
xchg
pop
dec
adc
arpl
int3
cld
adc
imul
fnstenv
or
sbb
jmp
stos
das
sub
mov
cmp
in
inc
jbe
mov
mov
adc
out
jle
push
jecxz
fldcw
and
sub
clc
pushl
dec
ret
inc
add
jg
rcr
jmp
pusha
insb
fdivrl
ljmp
imul
add
in
cli
jbe
mov
insl
loopne
push
cli
call
jg
xor
jne
cmp
and
dec
mov
emms
aad
mov
fdivrl
push
cmp
int
dec
lds
test
mov
fdivl
repz
cmp
dec
and
xor
das
nop
cmc
aaa
das
stos
jne
fs
push
or
mov
cmp
jg
aas
fnstenv
cmp
cltd
nop
push
push
sub
ja
add
lock
mov
sbb
fcmovnu
pushf
inc
dec
or
in
jnp
dec
dec
push
sbb
insl
cld
decl
pop
daa
scas
add
mov
hlt
xchg
push
loope
inc
mov
fcomip
fwait
push
pop
ret
cli
jg
cmpsb
xor
sbb
addr16
or
call
dec
xchg
add
mov
sahf
test
sbb
or
xchg
and
rep
and
inc
cwtl
push
cs
call
dec
push
adcb
aaa
add
push
push
nop
pop
xlat
xchg
hlt
sub
and
jno
sti
aas
pushl
adcb
push
pop
rcrb
rorb
cmc
inc
mov
inc
add
nop
sahf
add
ljmp
icebp
sbb
lea
pop
push
nop
xor
frstor
or
mov
xor
pop
and
iret
clc
add
outsl
xchg
pop
jno
call
leave
sbbl
loope
sub
pop
cmp
rorb
das
fwait
cmp
mov
incl
clc
sti
mov
cmp
nop
and
fdivrl
sub
mov
mov
aam
nop
loope
xor
cwtl
mov
mov
cmpsl
inc
shl
cli
fwait
js
mov
or
add
xor
inc
adc
jecxz
xchg
lock
call
rolb
mov
out
mov
jo
arpl
push
out
cli
pusha
incl
mov
les
dec
fs
jnp
fidivrs
add
xchg
mov
lcall
jg
orb
aas
daa
mov
in
lds
icebp
bound
enter
incl
and
xor
sbb
fwait
cmp
mov
pop
inc
divb
push
push
adc
decl
aas
push
test
xchg
cs
shrb
adc
std
jae
ljmp
push
and
pop
addb
inc
pop
add
mov
adc
lcall
pop
sbb
iret
daa
test
add
mov
sub
mov
or
ja
mov
mov
out
aas
int3
pop
sahf
div
fidivs
sbb
adc
jle
mov
lcall
or
adc
and
das
jno
lret
fbstp
pop
mov
out
cmp
mov
lds
dec
into
ljmp
dec
mov
leave
lods
xchg
or
shll
sbb
pushf
mov
mov
cwtl
cwtl
add
and
or
enter
leave
or
mov
incl
jae
xor
or
or
ja
mov
xlat
fistpll
fidivl
jle
in
push
pop
mov
dec
push
mov
jg
stc
rclb
shll
icebp
xor
fucomip
lods
cmp
comiss
sbb
das
xor
and
cmpsl
repnz
sti
jmp
jns
repz
aam
push
mov
mov
addr16
mov
in
lock
jmp
lock
adc
dec
push
sbb
dec
orb
mov
xor
push
cld
js
and
jo
cwtl
lcall
mov
cld
jmp
xlat
sub
mov
mov
or
testl
cmp
inc
lcall
add
jns
dec
push
hlt
pop
adc
mov
sub
push
pop
sub
enter
inc
push
ret
xchg
out
decl
dec
or
ret
ljmp
in
in
cmp
std
out
ss
jge
jb
jnp
jo
xor
into
lds
pop
push
into
sahf
pop
sbb
adc
jge
mov
popf
and
loopne
push
pushl
push
shlb
and
shll
popa
pop
jp
dec
pop
mov
adc
es
sub
pop
data16
repz
js
mov
mov
pusha
jns
pushl
mov
jecxz
int3
lahf
aad
adc
lods
adc
xor
dec
mov
ss
stos
mov
mov
inc
stos
or
js
mov
jmp
popa
movsb
out
mov
incl
cld
xor
sbb
lcall
push
push
test
call
push
popa
push
test
jle
and
inc
sbb
out
cltd
adc
cmc
call
cs
push
inc
outsl
flds
clc
les
fsubl
mov
inc
or
outsl
cli
call
imul
add
mov
xchg
xlat
in
nop
sub
sbb
pop
outsb
inc
icebp
pop
fistpll
movl
shll
sub
ss
pop
jmp
daa
rol
jecxz
loopne
adc
xchg
stos
adc
xchg
push
cld
lret
adc
sub
inc
cld
aad
push
push
aad
dec
xor
das
mov
mov
xlat
push
out
out
lock
out
pusha
cltd
stos
ret
jg
sbbb
shrl
icebp
iret
incl
ds
out
leave
imul
incl
aad
cmpsl
push
push
inc
andb
cmp
pushf
out
xor
push
pop
push
mov
mov
incb
xor
mov
out
sub
or
jae
ss
mov
xor
aam
popa
pop
fcmove
imul
cmp
push
cmpb
cmp
call
and
dec
cmp
mov
je
fwait
insb
xchg
jne
sahf
jl
loop
push
loope
sbb
movsb
fs
mov
jecxz
mov
sbb
push
dec
jg
das
xor
gs
mov
pushl
xchg
cwtl
cmp
ficomps
jp
das
loopne
movl
fmuls
sub
iret
jmp
enter
in
cmp
enter
movsl
fdivs
out
dec
out
and
sbb
ljmp
clc
cmp
lea
loopne
mov
push
jmp
leave
lods
cmp
clc
jmp
ljmp
out
fcomp
xlat
ljmp
mov
jmp
cmpsb
sub
add
push
adc
mov
iret
xor
push
fldt
out
dec
cwtl
cltd
divl
cwtl
add
stos
loop
bound
sub
cmpsb
in
adc
lret
test
out
jmp
notl
outsl
mov
icebp
sub
dec
inc
mov
cmp
mov
call
call
popa
add
idiv
sub
pop
frstor
mov
loope
jmp
sbb
lcall
idivl
jecxz
xor
dec
loopne
aam
sarl
scas
pushf
divb
jmp
aas
xchg
and
mov
mov
popa
fcmovne
jnp
pop
pop
das
xor
xchg
xchg
std
int
mov
adc
inc
mov
repz
add
shlb
sub
inc
sbb
lock
push
jg
jmp
adc
icebp
data16
imul
push
cmp
xchg
cmc
mov
imul
jmp
xor
lret
pop
xlat
adc
and
ljmp
enter
dec
cmp
push
lds
mov
lods
jecxz
sti
and
stos
adc
add
out
nop
pushl
aaa
cmp
push
lea
mov
add
mov
inc
add
pop
xor
ss
mov
mov
mov
mov
mov
pop
popa
pop
cmp
mov
pop
rcrb
jl
pop
jno
out
mov
jg
ljmp
adc
insb
mov
sarb
xrelease
in
mov
aaa
dec
inc
inc
jmp
ds
mov
inc
ds
ds
xchg
jge
aad
adc
out
pusha
loope
subl
scas
xor
jmp
mov
out
popa
cmc
arpl
stos
xchg
sub
das
clc
lcall
sub
test
jl
nop
ljmp
pop
popf
mov
pop
test
stos
inc
mov
mov
add
jmp
daa
and
mov
mov
mov
or
das
and
dec
add
aam
xchg
scas
cwtl
in
mov
sbb
pusha
sbb
fbstp
in
rcl
push
xchg
mov
shll
sti
ss
loope
xchg
lret
push
mov
nop
sahf
push
fwait
out
int3
jge
mov
push
mov
adc
test
cmc
stc
xor
mov
inc
clc
adc
adc
mov
stos
jo
inc
in
arpl
ljmp
out
push
xlat
pop
add
dec
insl
jo
fidivl
pop
scas
mov
xchg
jnp
xchg
mov
jbe
jle
add
lret
in
or
loopne
in
mov
pusha
in
insb
and
incl
push
gs
jl
pop
dec
in
cmpsl
xchg
fwait
xor
out
xchg
xchg
xchg
flds
popa
ljmp
add
lods
xor
inc
xchg
in
mov
enter
adc
lcall
insl
test
mov
or
add
push
ljmp
imul
push
sub
ljmp
mov
pushf
sbb
mov
jnp
xlat
lock
ljmp
jl
pop
call
cmp
or
int3
imul
push
aaa
repz
jne
dec
xchg
sub
cmp
pop
pushl
and
cli
cmp
rcll
mov
inc
movsl
aad
aas
jecxz
lcall
lcall
dec
inc
lahf
xor
xor
movsb
inc
mov
push
repnz
or
mov
out
add
inc
je
add
test
lcall
test
push
cmpsl
icebp
clc
insl
jae
enter
test
sub
testl
enter
fbld
addl
dec
mov
dec
and
fisubrs
ljmp
push
rcll
in
mov
repnz
fmuls
inc
pop
mov
inc
sub
lock
mov
imul
ss
rol
sar
adc
loope
mov
xchg
jmp
mov
inc
ss
push
or
xor
lcall
or
movsb
andl
rorb
sub
out
nop
jecxz
lcall
mov
test
push
addr16
call
mov
mov
decl
fmuls
hlt
outsb
cmpsb
fildll
jne
dec
test
stos
sbb
xchg
scas
es
jmpw
decl
push
ret
or
xor
leave
jno
shlb
cmp
lahf
or
aaa
test
clc
cld
sub
ret
sbb
aaa
adc
dec
test
adc
xchg
test
call
addr16
jecxz
aad
push
test
mov
lcall
xor
not
leave
les
mov
xor
xchg
repnz
cmp
jnp
scas
cld
popf
mov
cmp
leave
mov
popa
das
mov
jmp
and
jecxz
mov
fidivrl
out
je
test
or
popf
mov
rorb
mov
lds
mov
mov
mov
in
mov
pop
lcall
and
pop
mov
sti
imul
movsb
jmp
js
stos
out
mov
push
incl
popf
lods
inc
push
leavew
testl
mov
or
dec
sbb
and
repnz
filds
xor
out
sbb
loopne
dec
lods
sub
cmp
cmp
or
mov
addr16
fistl
cmp
jae
cmp
in
imul
je
call
or
popa
fsts
sub
xchg
ds
adc
out
stc
sbb
lcall
notb
mov
daa
inc
arpl
cmp
stos
xor
push
shl
push
mov
leave
sar
incl
stos
sbbb
lods
and
stc
push
mov
sbbb
js
pushf
pop
mov
add
loopne
jge
cltd
inc
sub
sarb
adc
push
and
or
lcall
ss
jb
sarl
out
sbb
out
pop
jecxz
addr16
or
ljmp
cli
mov
mov
movsl
int
repz
push
lcall
cld
aad
adc
mov
push
test
mov
out
or
add
shlb
cli
pop
xchg
cmp
dec
jle
test
int3
cmpb
enter
call
push
jmp
stos
push
movsb
sar
ljmp
adc
loop
std
stos
adc
dec
inc
fidivrs
popa
and
movsb
pop
leave
adc
into
dec
jbe
paddw
ljmp
jg
ljmp
imulb
aam
imul
pop
cmpsl
and
jae
cmpsl
sbb
jecxz
es
mov
ljmp
xor
mov
lds
mov
cwtl
sbb
dec
xor
mov
inc
mov
add
cmp
mov
push
out
add
notl
out
push
call
cli
push
cmp
mov
lret
push
xor
std
cmc
fcomip
jmp
insb
sub
inc
mov
fs
add
repnz
mov
fwait
mov
add
mov
dec
or
xchg
jae
pushf
mov
jmp
sbb
dec
insl
aas
adc
aaa
jle
sahf
outsb
and
sub
mov
inc
stc
dec
dec
inc
or
stos
popf
lcall
scas
clc
lret
sahf
push
mov
out
cld
ret
jl
jl
mov
sar
fxtract
leave
clc
incl
ret
inc
add
or
push
sub
gs
ud0
out
fdiv
or
loope
es
in
repnz
mov
push
xor
in
or
lret
call
ljmp
dec
jo
std
test
sarl
or
gs
gs
decl
inc
stos
inc
daa
xorl
inc
out
iret
sbb
loop
lahf
jl
xchg
xor
xor
push
cmp
int
mov
fcompl
mov
push
rorl
imul
repz
mov
adc
add
jl
insl
mov
int
xor
mov
lret
out
cli
clc
sti
mov
fcmovb
xor
cmp
in
xchg
imul
pop
or
jmp
sub
dec
test
xor
jnp
bnd
and
fsubrs
aad
add
insl
fnsave
movsl
bound
lea
fcomp
hlt
push
cld
fsubrp
les
cmp
icebp
jp
sub
dec
pop
sti
loop
js
mov
or
pop
dec
or
cmpb
in
xor
adc
or
ljmp
clc
in
dec
popf
mov
lcall
xchg
rcrl
add
lcall
mov
divl
mov
jae
clc
iret
pusha
inc
pushl
pushl
outsb
sub
or
pop
mov
ds
ds
adc
pushl
and
jg
movsb
jg
int3
push
pop
rclb
pop
push
ficoms
mov
lret
and
outsl
sub
dec
cli
xchg
push
mov
cmpsl
cmp
push
ljmp
daa
loope
sbb
out
ss
inc
xor
push
mov
mov
loope
scas
jg
add
enter
pop
mov
sub
cld
jns
adc
cmp
fisttps
xor
js
lds
lret
cmp
adc
xorl
jp
sub
jmp
clc
push
xchg
pop
jle
push
sub
xor
adc
push
incl
outsb
shl
fdivrp
push
mov
or
cmp
cli
push
scas
aaa
movsb
inc
mov
aam
jecxz
aam
mov
fdivr
mov
outsl
add
mov
cmc
sbb
mov
jno
lods
pop
in
int3
test
add
icebp
cld
mov
push
lods
cmp
fs
jnp
cmpsb
and
add
cld
and
jns
or
jmp
clc
push
or
inc
repnz
jne
pop
lahf
jns
xchg
dec
pop
mov
xor
pusha
push
xor
in
lahf
mov
push
push
fldl
sbb
gs
or
mov
xchg
adc
and
sub
pop
pop
mov
cld
push
ja
sbb
mov
mov
or
or
jo
loop
jl
jg
mov
addr16
in
cli
fcmove
insl
xor
in
pop
jbe
jp
pop
mov
fwait
jmp
pop
aam
and
ja
sbb
ret
jl
jae
pushf
imul
scas
adc
pop
jnp
movsl
shrb
dec
jmp
pop
jno
dec
dec
sub
or
push
ljmp
cli
mov
mov
rclb
fdivrs
dec
aam
inc
mov
pushl
arpl
mov
cmp
int3
add
loopne
nop
push
mov
loop
mov
xchg
call
out
mov
push
or
outsb
xlat
push
inc
popa
into
pushf
cmp
sti
mov
scas
mov
jle
add
decl
sub
sbb
mov
sbb
jo
cld
data16
aaa
or
ljmp
jmp
pop
lret
idivb
imul
jns
sahf
xchg
movsb
insb
decl
sub
jp
dec
jb
push
pusha
cltd
es
xlat
inc
incl
mov
dec
xchg
cmp
movsl
lock
push
add
or
fs
flds
aas
lock
pop
mov
cmc
cmp
xchg
jbe
dec
repz
inc
xor
jmp
in
cmp
inc
cld
pop
push
iret
rorl
imul
enter
or
mov
stc
pop
repnz
insb
enter
jo
clc
aas
inc
out
dec
mov
mov
mov
or
bound
into
pusha
adc
scas
decl
sbb
mov
mov
mov
or
cmpsb
lret
jne
incl
jg
inc
mov
and
jno
mov
cli
aad
pusha
iret
sub
fadds
pop
ja
dec
call
inc
outsb
shll
in
inc
pusha
xchg
and
add
pop
adc
dec
mov
pop
mov
test
int
in
lret
insl
loopne
std
jo
rorb
fwait
lahf
or
mov
lcall
leave
les
cli
cwtl
pushf
mov
and
ds
push
sbb
ret
dec
pop
jb
pop
dec
mov
out
inc
out
sbb
popl
add
jg
movsb
mov
xchg
sub
xor
mov
out
mov
add
out
mov
pushl
jg
aam
call
mov
into
insb
loopne
pop
mov
lahf
hlt
fsubrp
and
cmpsb
bt
pusha
sbb
roll
bound
dec
icebp
jmp
insb
outsl
lods
cmpsl
jbe
fsubr
outsl
dec
adc
test
xlat
sbb
inc
mov
nop
insl
inc
sar
pop
xchg
inc
add
xlat
mov
fxch
int3
pop
push
vmovhps
pop
mulb
jg
popl
xchg
mov
sub
mov
xchg
or
dec
pop
dec
frstor
mov
incl
movsl
pop
sbb
jnp
int
adc
and
jns
pop
sbb
ljmp
push
std
mov
xchg
adc
pop
rcl
out
inc
jbe
insb
roll
cwtl
and
incl
sahf
jno
add
adc
popl
pop
imul
into
out
ja
xchg
jle
rolb
in
xchg
push
mov
cltd
dec
les
xor
xchg
out
inc
test
cli
xor
xchg
xchg
pop
mov
out
lcall
jl
xor
sahf
pop
cmp
mov
and
js
xchg
dec
ret
xlat
lods
lret
mov
call
cmp
xlat
dec
cmp
xor
frstor
sub
cs
cmp
mov
cmp
cmp
push
push
fisubl
fldcw
jecxz
or
add
in
scas
mov
dec
push
js
in
fadds
mov
mov
ljmp
cmp
mov
mov
jle
xchg
add
stos
sub
and
pop
sbb
add
fisubl
std
aad
bound
xor
lcall
cmp
sub
sarl
shr
addb
and
sub
cmpsb
xchg
das
sahf
decl
or
jp
xchg
xor
mov
shrb
stos
mov
out
pushl
test
and
push
in
jo
add
sub
scas
mov
jne
push
jg
mov
call
fists
pop
cltd
gs
jl
sub
pop
pop
loop
loopne
in
mov
add
mov
pop
mov
pop
ret
xor
scas
mov
xchg
mov
jmp
aam
mov
sub
cltd
mov
mov
jo
rol
xchg
sti
ja
pushl
pop
push
aad
mov
xchg
xor
popf
cmp
aas
pop
cld
push
xor
mov
ja
scas
mov
hlt
cmc
popf
sub
jl
mov
mov
repz
jbe
pop
add
outsb
sbbb
push
ret
imul
cmp
inc
jmp
loopne
dec
adc
faddl
in
iret
jnp
lods
ss
fcomps
insb
rcl
jmp
push
scas
iret
scas
gs
leave
scas
insb
xlat
shll
shlb
out
js
and
add
std
jmp
std
out
bound
call
sub
ds
gs
xchg
push
jge
xchg
fwait
add
jmp
lcall
vmwrite
scas
mov
and
imul
mov
push
mov
decl
dec
jbe
rorb
jmp
sbb
mov
adc
int3
or
incl
movsl
or
fwait
rcrb
iret
dec
adc
sti
pop
loope
inc
pop
mov
cmp
es
decl
sbb
notl
push
leave
and
push
jo
push
or
and
enter
inc
jg,pt
inc
loop
aam
nop
clc
clc
fwait
and
mov
test
dec
into
aad
es
incl
inc
outsb
insl
jge
outsl
cmp
jmp
leave
mov
outsb
ret
and
sbbl
jecxz
add
leave
sar
fildll
and
add
arpl
jb
or
call
sbb
push
cmp
aas
jp
cmc
sti
or
adc
fcompl
call
inc
les
mov
or
arpl
sarl
lcall
movsl
pop
push
cmpb
xor
js
data16
fdivr
decl
je
in
stos
outsl
pushf
int3
imul
mov
or
xor
mov
dec
cmpsl
dec
movl
push
loopne
jmp
call
test
adc
mov
ds
enter
outsl
sub
aas
in
dec
add
decl
mulb
lret
fadds
dec
sub
add
in
ja
ljmp
rclb
dec
cmp
imul
push
push
jg
decl
int3
ljmp
add
pusha
push
mov
into
cld
and
push
aaa
inc
in
cmp
jmp
add
loop
mov
xchg
outsb
mov
incb
dec
and
cld
and
push
ljmp
jp
dec
jl
fsub
sbb
pop
xchg
jbe
stos
adc
lcall
jmp
push
inc
scas
ss
sbb
pop
cmpsl
pop
mov
add
dec
or
mov
lahf
cs
ret
ljmp
sarb
cmp
mov
xchg
push
fisttpl
sti
fsts
dec
sbb
adcb
jl
mov
adc
cmp
insb
imul
push
add
rcrl
repz
push
addl
call
loop
inc
xchg
into
ja
pusha
and
xchg
jl
aad
fs
pop
xchg
aas
mov
aam
les
and
filds
pop
sub
les
sti
hlt
int3
subb
stos
cld
adc
loope
add
outsl
cmp
nop
push
sub
jecxz
aaa
test
mov
lcall
mov
pusha
gs
or
jnp
xchg
push
cmpb
xacquire
or
ljmp
pop
mov
je
cmp
and
scas
popf
and
ljmp
or
lds
mov
mov
sub
hlt
xor
mov
ljmp
jmp
clc
scas
cld
jne
sub
sar
jecxz
icebp
mov
jns
mov
call
push
fdivr
inc
shl
inc
popf
pop
push
cmp
and
mov
enter
sar
and
out
lds
decl
stos
imul
lret
fdivrp
test
add
adc
sbbb
incl
ljmp
sarb
mov
push
fildll
les
icebp
xor
decl
jge
jg
mov
add
in
push
test
out
lock
dec
ljmp
and
js
fildll
push
lods
test
scas
jne
jecxz
decl
xor
nop
bound
mov
jmp
add
mov
in
and
jno
es
jecxz
loopne
test
inc
xchg
mov
rcrl
rcl
jecxz
incl
lret
in
jmp
cli
iret
jns
cmp
rcll
jmp
stos
jp
fidivs
xor
movsb
shll
gs
and
test
mov
ljmp
ret
pop
sub
hlt
frstor
pop
push
fidivrl
pop
fbld
jmp
mov
pop
mov
insb
push
xor
add
ror
loop
test
xchg
outsl
rclb
cmpsb
dec
fidivl
sbb
xchg
adc
and
aas
dec
or
sbb
xchg
cmp
sahf
ret
push
pop
cs
outsl
pushaw
fwait
incl
imul
gs
inc
jns
cmp
jno
enter
pushf
sub
add
leave
loopne
aas
pop
lcall
insb
xor
int3
mov
out
pusha
add
hlt
sub
test
inc
push
jae
mov
addr16
dec
jle
push
mov
repnz
sbb
pop
fsubp
ljmp
add
push
fistpl
in
imul
out
pop
dec
adc
pushl
pop
xchg
mov
bswap
adc
int3
mov
lcall
mov
bound
lcall
cmp
stos
rorb
sub
loopne
mov
sahf
fs
pop
xor
std
push
int
xor
notb
fcomip
mov
and
pop
inc
jmp
lock
lahf
mov
in
mov
ljmp
mov
dec
push
push
ret
pop
mov
dec
dec
xchg
in
inc
loopne
cmp
aam
out
jnp
pushl
fimull
and
mov
mov
cmp
pushl
dec
bound
or
adcb
pushf
scas
lret
mov
data16
out
and
mov
loope
aam
out
cltd
mov
sar
lcall
push
fs
or
aad
jp
shlb
jle
mov
icebp
mov
es
jle
sbb
test
mov
inc
ljmp
stos
inc
pop
and
add
incl
sbb
aas
ret
shll
xchg
pushf
ss
ja
sar
lcall
pop
xchg
inc
mov
push
inc
lock
adc
jne
outsl
jle
jp
pushf
cwtl
ljmp
enter
jne
jmp
ror
stos
mov
and
mov
fwait
xchg
push
pop
push
cld
lcall
push
sbb
icebp
mov
mov
pop
inc
inc
clc
incl
icebp
sbb
lret
xor
fwait
inc
dec
inc
test
xor
fcmovbe
ds
pushf
sbb
cld
mov
mov
or
mov
ljmp
decl
push
lock
jecxz
dec
in
sti
out
pop
pop
outsb
shll
jmp
dec
outsl
push
popf
inc
cs
in
mov
mov
mov
xlat
int
jne
push
test
xchg
sbb
jne
decl
sahf
sub
cmp
xchg
aas
or
lods
imul
mov
adc
xchg
incl
call
mov
xor
fistpll
int
cld
addr16
repz
lods
mov
mov
or
mov
adc
int3
ret
add
jmp
add
mov
lcall
loope
cmp
sub
js
call
mov
adc
cmp
sub
mov
imul
jbe
lcall
xchg
jns
out
jge
cmp
sbb
int
mov
jmp
aas
fcomip
fadd
cmp
push
mov
dec
fistps
leave
ud1
dec
mov
mov
inc
adc
cmpsb
push
add
bound
sbb
inc
inc
add
fildll
push
movsl
mov
mov
cmpsb
mov
out
xchg
imul
xchg
das
sub
mov
xorl
std
bound
cmc
lcall
sbb
jae
jae
mov
and
int3
adc
add
aaa
xchg
dec
mov
ret
sub
jo
nop
inc
xchg
cmpsl
mov
shll
cmp
push
ljmp
arpl
xor
xchg
pusha
sbb
dec
icebp
aas
xchg
sbbl
pusha
iret
js
ret
lretw
in
jne
pop
cli
pusha
adc
and
int
mov
in
xor
and
xchg
lret
dec
decl
fwait
jbe
pop
xchg
pop
test
sbb
xor
pop
xchg
dec
aad
incl
daa
jne
scas
stos
es
popa
mov
daa
pop
dec
cmpsl
mov
jmp
sbb
xchg
arpl
clc
push
leave
xchg
lds
shll
movsb
popf
stc
or
jge
pop
cmp
shrl
xchg
push
das
mov
ljmp
sti
inc
mov
cli
stos
pop
jb
pop
cmc
dec
rcll
sahf
gs
test
or
pushl
or
sub
mov
adc
test
jge
xor
out
in
push
mov
jp
out
roll
fisttps
dec
or
cmpsl
add
push
call
ljmp
repnz
sti
or
neg
jp
jns
lcall
mov
or
xor
repnz
out
ljmp
das
jns
inc
or
xchg
call
adc
jae
dec
out
cli
stc
or
je
gs
mov
das
pop
mov
cmpsb
sbb
rorb
fs
push
push
or
scas
xor
incl
loopne
sub
outsb
loope
dec
push
lcall
mov
cli
pop
add
mov
jns
or
dec
cld
mov
inc
popa
mov
in
dec
sub
inc
iret
mov
sbb
dec
mov
add
movsl
leave
jmp
cs
push
jbe
xor
decl
or
nop
stos
stos
sbb
xchg
inc
mov
out
jmp
cmp
inc
or
movsb
repz
pusha
cmp
inc
jae
dec
xchg
test
pusha
mov
push
repnz
cli
std
sbb
pop
and
inc
out
outsl
adc
out
inc
or
test
jb
cmp
sarl
into
pop
test
add
fcomip
mov
jg
jle
js
mov
pop
sahf
js
add
pop
mov
sub
mov
jl
cli
mov
add
scas
ds
push
mov
adc
xchg
ss
fsubrl
xchg
ret
lods
add
mov
scas
ds
cmpsl
sar
data16
call
insl
sbb
lcall
out
loopne
nop
imul
lcall
out
scas
xchg
add
mov
adc
xlat
and
movsl
or
xchg
decl
es
or
xorb
dec
fsubrs
notb
mov
out
fs
enter
mov
xor
ret
xor
repz
inc
sbb
push
push
ljmp
call
cli
mov
jbe
xor
cli
call
and
mov
inc
addr16
inc
rcrl
sbb
mov
enter
jmp
mov
into
dec
pop
cld
and
daa
ret
hlt
xor
negb
pop
cmc
add
mov
inc
add
loopne
aaa
dec
jno
mov
int
xchg
jge
clc
pop
inc
ja
dec
push
test
jmp
fistpll
sbb
cwtl
inc
jns
out
pop
pusha
adc
dec
std
fidivl
cmp
icebp
lods
lock
sub
sub
cwtl
rclb
jg
mov
sub
out
test
or
pop
and
ljmp
sar
push
dec
sub
dec
dec
lods
iret
repz
rorl
inc
movsb
leave
ljmp
mov
push
xchg
mov
rcrb
xchg
shl
ljmp
mov
pop
add
sub
cmp
lods
xlat
rol
addr16
pushl
mov
loop
add
aad
xor
mov
clc
lret
decl
lds
sub
bound
xchg
cmp
push
imul
test
pop
hlt
ljmp
bound
and
mov
pushf
adc
iret
mov
sbb
incl
inc
and
and
je
jg
mov
in
xchg
in
xlat
loopne
add
pushl
dec
out
adc
cli
int
call
cmpl
incl
test
pushf
push
out
xorl
jg
sbb
xor
bound
stos
jmp
rorl
dec
mov
mov
subl
mov
aaa
idivl
jg
add
or
jb
push
pop
cmp
cmp
cmpsl
add
dec
inc
retw
jg
push
jp
sbb
xchg
std
jb
cs
xchg
push
mov
call
scas
mov
adc
inc
xchg
sbbl
xchg
jg
adc
hlt
test
lret
repz
decl
je
mov
imul
lock
dec
das
jae
pop
fdivrl
mov
jo
jecxz
cld
call
mov
shrb
sub
js
push
pop
jno
adc
mov
add
data16
lcall
pop
xchg
jb
popa
sbb
lock
add
jp
cmp
dec
xor
out
in
push
cmp
push
mov
clc
pushl
jge
add
xor
xchg
imul
xchg
pop
mov
pop
or
sbb
mov
and
or
xchg
xor
enter
in
push
lock
fcmove
fmul
test
mov
cli
outsl
push
mov
xor
xor
push
ljmp
push
icebp
add
pop
pop
jbe
pop
mov
sbb
pop
mov
pop
cmp
push
mov
dec
rclb
pop
xor
repnz
jmp
inc
jp
in
gs
add
mov
sbb
or
pop
lret
mov
sar
mov
scas
mov
pusha
sahf
jae
jg
jp
mov
cmp
nop
and
push
ffreep
push
cmp
pop
cltd
sub
mov
int
leave
loop
fs
xchg
fisubrs
gs
les
jmp
test
jb
and
xor
mov
sbb
add
cld
aaa
or
cli
scas
jbe
mov
xor
incl
test
or
cmc
ja
push
mov
inc
aaa
mov
sahf
inc
lea
push
jmp
jnp
ljmp
dec
mov
cmpsl
add
out
outsl
mov
pop
cmp
repz
cmp
out
scas
shlb
pop
push
inc
out
cwtd
sbb
cmp
test
push
push
roll
pop
daa
insl
adc
inc
or
jno
mov
das
pop
or
roll
nop
repz
push
dec
in
or
ret
aad
mov
subl
jno
mov
int3
cmp
pop
lock
xor
dec
jne
out
das
nop
incl
adc
mov
stos
insl
add
decl
jns
lret
cld
in
mov
nop
in
cmp
jnp
pushl
fs
sbb
ds
lods
int
mov
mov
xchg
scas
xlat
cmp
aaa
push
xchg
push
popf
jmp
lcall
xchg
sub
jge
lods
test
push
bound
jo
addl
sti
in
jbe
or
shll
add
mov
stos
mov
pop
jb
lods
icebp
gs
incl
xor
mov
leave
mov
xor
rorb
pop
pop
cmp
pop
mov
jno
cmp
jl
roll
sbb
stc
pop
adc
pushl
in
fwait
bound
out
jae
lahf
imul
xor
cli
jle
aad
add
push
mov
mov
arpl
inc
dec
sbb
xchg
daa
xor
scas
dec
call
fwait
outsb
lock
jp
repz
insb
icebp
push
out
xor
mov
mov
mov
jecxz
mov
adc
or
sti
cmc
ljmp
ljmp
pusha
xor
sbb
cmp
in
jge
dec
lea
ja
mov
jge
lods
push
lea
fisubl
mov
jo
fcoms
dec
scas
mov
call
scas
cmp
mov
sub
jbe
vxorps
ljmp
xchg
test
ror
xchg
popa
or
std
je
jnp
jo
mov
cld
jmp
sbb
repnz
aam
ret
in
xchg
push
stc
push
ja
lock
pop
mov
notl
mov
lret
adc
call
mov
cmp
fistpll
test
mov
std
mov
imul
inc
lods
sbb
subb
outsb
add
xchg
ja
fwait
jno
stos
fst
arpl
ret
imul
lcall
test
stos
xchg
lcall
xor
lahf
in
add
and
add
jle
cmp
stc
mov
mov
insl
insl
jae
popa
pop
dec
sbb
dec
inc
push
in
outsb
pop
jnp
repz
jbe
xchg
jle
inc
decl
push
add
enter
movsl
scas
cmpsb
cmp
scas
xchg
adc
dec
aaa
pop
cmp
ss
dec
ss
cmpsb
in
add
ja
les
pusha
movsb
xchg
mov
adc
cmp
jp
addr16
push
call
and
in
dec
mov
insl
xchg
xchg
mov
aam
push
in
pop
push
sub
loopne
shrb
mov
es
cmp
iret
mov
dec
xchg
pop
test
hlt
and
aaa
push
decl
or
sub
mov
adc
loopne
mov
push
add
jmp
das
enter
xchg
push
jecxz
mov
fsubl
adc
pop
sub
sbb
loopne
dec
test
ljmp
and
out
hlt
jo
test
jnp
mov
data16
push
incl
leave
data16
aas
stc
xchg
jbe
loopne
decl
cwtl
adc
mov
fnsave
mov
incl
call
je
mov
fcoml
adc
adc
leave
push
ljmp
lret
dec
push
mov
leave
mov
and
addr16
jne
mov
fwait
inc
jmp
pop
lods
addr16
xor
or
fsubp
hlt
or
pop
and
loope
pop
cld
ja
sbbb
dec
mov
push
ret
cmp
je
lea
in
movsb
cmp
mov
push
add
cmp
and
imul
xchg
ss
jo
stos
inc
dec
mov
xchg
xorl
xor
pushl
and
inc
push
mov
inc
aad
cmp
sub
jecxz
in
jecxz,pn
fimull
clc
inc
sbb
aad
lret
pusha
out
insb
shl
ljmp
enter
rcrb
and
jae
pop
test
clc
ds
addr16
loopne
fwait
fistpll
jp
inc
jg
xchg
inc
cmp
addr16
xlat
lret
sub
and
xchg
add
inc
or
fisubl
ret
popa
nop
das
mov
sbb
clc
push
sbb
mov
jg
adc
mov
mov
jns
bound
rclb
xor
incl
in
stos
mov
pop
mov
xlat
pop
repnz
jmp
lods
mov
or
pop
push
and
mov
aad
xchg
xor
lcall
and
pop
pop
sbb
stc
mov
cmc
jb
mov
mov
fs
xchg
pop
ljmp
loop
pop
cwtl
repnz
inc
dec
pop
pop
jmp
push
ret
out
add
cmp
pushl
jmp
aaa
int3
call
in
call
dec
in
ja
movsl
decl
push
cmp
or
mov
dec
mov
ljmp
inc
cmp
in
int3
mov
subl
xchg
or
cmp
inc
ret
mov
gs
repnz
or
loope
cmp
cmpsl
mov
push
jecxz
mov
cli
dec
je
outsb
testl
lret
dec
xchg
jg
ljmp
pop
out
js
and
sub
fldcw
sar
call
xor
cli
inc
bsr
aad
addr16
les
stos
xchg
push
add
mov
movsl
mov
ljmp
inc
jl
cmp
cmp
pop
mov
inc
ret
rol
ret
cmp
out
mov
mov
cpuid
jp
push
sbb
pushf
aam
inc
lret
insl
inc
cmp
out
cs
xor
jne
mov
call
push
xchg
adc
mov
bound
mov
push
push
ja
add
cmpsl
and
flds
in
inc
sahf
ficoms
jg
aam
push
xchg
or
lods
dec
xor
rcl
addr16
xchg
ja
int
inc
in
dec
decl
adc
and
lock
and
or
sbb
sub
loope
lcall
pop
jmp
cmova
mov
icebp
push
pop
cmpsb
push
pop
sub
or
mov
lock
push
jmp
push
shrb
in
jne
xchg
dec
insl
or
test
repz
mov
shr
into
filds
mov
popa
jg
xchg
in
loopne
cs
xor
inc
dec
sub
lcall
std
call
mov
dec
in
int3
pushf
mov
pop
outsl
push
ljmp
sar
add
icebp
clc
mov
push
daa
js
and
inc
pop
add
in
lahf
fbld
cmpb
aas
outsb
pop
dec
jb
push
clc
cmp
adc
jmp
rolb
jp
inc
cmp
or
jg
pop
cmp
jbe
outsl
pop
mov
inc
or
mov
and
jmp
mov
jo
lret
sbb
pop
stc
arpl
pop
mov
mov
sub
mov
test
cmpsb
mov
xchg
fdivr
mov
adc
icebp
push
sub
add
fists
stos
ljmp
paddusb
ror
add
or
cmp
popa
repz
sbbl
sbb
adc
cmpb
jne
insb
incl
out
xchg
xchg
dec
cs
js
or
scas
sbb
fldcw
or
js
jl
adc
sar
jl
faddp
cmp
add
shl
testb
enter
sbb
stos
or
sbb
jge
add
pushl
loope
insl
xchg
push
mov
fistps
nop
clc
mov
popf
cwtl
and
daa
push
int
jnp
jg
mov
and
idivl
addr16
shlb
or
dec
adc
test
rol
cmp
call
pushl
aad
das
pushf
inc
lret
mov
bound
cli
incl
loopne
mov
push
gs
ret
in
ss
pop
xchg
cmp
cmc
das
pop
jg
xchg
pushl
sub
aam
mov
ds
outsb
loop
pop
dec
cltd
adc
rclb
mov
call
adc
lds
dec
add
and
inc
pop
sbb
pop
cmpsb
push
sarb
xor
call
pop
cmc
and
and
stc
out
mov
or
sbb
pop
mov
and
call
pop
jo
adcb
imul
mov
aas
flds
inc
aas
fstpt
andb
cmp
cld
xchg
pop
es
test
jo
das
mov
ljmp
fsubl
movsl
and
pop
mov
sub
rcrb
cmp
movsl
cld
outsl
popa
mov
ljmp
mov
mov
rorb
and
adc
add
ljmp
repz
inc
mov
inc
cmp
or
add
xchg
mov
lods
cmpsl
xchg
ret
mov
call
xlat
lods
faddl
sbb
fbstp
pop
test
xchg
daa
ret
mov
ja
mov
or
pushl
ljmp
pop
roll
fsubp
std
int3
xchg
jbe
and
lods
loop
pop
aam
mov
mov
mov
jp
sub
xor
pushf
cmpsl
lret
clc
mov
call
pop
fstp
xor
xor
adcb
mov
aas
push
les
mov
lock
jmp
xlat
or
outsl
mov
add
xor
or
mov
fdiv
fsts
arpl
idivl
push
shrb
add
popa
out
imul
sbb
pop
inc
jmp
js
sub
or
mov
mov
int
insw
jge
adc
call
into
fwait
stos
sbb
jo
cmpsb
dec
mov
jl
sub
add
lcall
iret
cmp
lods
int3
mov
mull
shr
pop
in
mov
popf
sub
jg
cmc
mov
andl
scas
pop
cmp
cmp
pushl
inc
dec
xchg
push
pop
test
scas
inc
xchg
shrl
dec
add
outsb
mov
clc
inc
adc
lcall
mov
xchg
das
mov
sub
cmp
inc
jp
jle
out
fidivl
in
or
mov
pushf
pop
ds
aad
xchg
mov
lahf
inc
pop
dec
test
test
add
call
rcrl
movsl
shr
push
sub
sub
mov
fdivl
es
jns
fmuls
stos
cwtl
in
lock
inc
pop
xchg
sub
mov
shrl
cmp
push
clc
pop
jecxz
jecxz
xlat
jg
dec
sar
cwtl
xor
pop
movsl
sub
fwait
scas
jmp
clc
dec
out
fbstp
fmull
xor
cmp
movb
call
test
cld
pushf
cmp
ds
arpl
out
push
mov
or
sub
inc
xchg
js
std
repnz
sbb
push
iret
jbe
dec
dec
repnz
ja,pt
addr16
xor
xor
bnd
pop
mov
mov
mov
in
test
fstl
into
test
movsb
call
data16
mov
in
movsb
cmpsl
mov
pushl
jg
addr16
lea
imul
adc
pusha
hlt
sub
out
jg
loopne
push
clc
scas
pushf
sbb
fcoml
xor
decl
mov
or
inc
xchg
mov
sbb
mov
scas
rcl
loopne
xchg
scas
cmpsl
arpl
pop
mov
ror
fsubrl
ds
or
pushf
es
imul
call
mov
ret
lcall
pop
push
jns
fcomps
aaa
sub
jg
pushl
js
inc
inc
gs
sub
daa
sub
loop
jne
push
mov
add
incl
mov
jp
fistl
jns
out
repz
mov
mov
xorl
mov
out
mov
or
jnp
push
push
ds
outsl
in
orl
mov
lods
cmc
fadd
jg
add
ljmp
mov
mov
inc
pop
xchg
xchg
gs
cwtl
jge
out
lods
icebp
je
and
or
lea
sahf
test
adc
jmp
scas
mov
push
sub
ss
sub
mov
mov
cmc
mov
addr16
fimull
aam
cltd
or
lcall
jbe
in
fisttps
ljmp
jb
xchg
inc
loopne
xchg
call
push
cmc
inc
pusha
cltd
in
mov
sub
adc
push
cwtl
inc
jns
jb
pop
int3
cs
adc
pop
dec
subl
cmp
fs
xor
jle
mov
rcll
adc
notl
es
or
std
pushl
jmp
sub
int
in
pop
cmp
ss
cmp
pop
or
jmp
mov
mov
shll
inc
mov
pop
stos
in
lods
jae
sub
jo
aad
lcall
sar
adc
mov
scas
aas
and
add
cli
sub
cmp
out
cli
lock
sub
inc
dec
repz
sub
cmp
cli
mov
mov
mov
or
pop
xchg
ds
xchg
push
pop
cld
call
in
rcrl
ds
xor
cli
popa
inc
push
dec
add
pop
sbb
jmp
mov
xor
dec
and
iret
add
xchg
sti
and
jecxz
lea
fsts
arpl
enter
push
lret
mov
call
int3
xchg
pop
popa
enter
in
mov
push
out
mov
add
add
leave
fcos
out
or
pop
mov
lcall
dec
mov
xchg
push
jecxz
add
inc
leave
call
xchg
hlt
daa
or
movsl
ret
jl
negl
cmc
xor
gs
mov
mov
lahf
and
scas
mov
cmp
jmp
imul
gs
ret
push
incl
xchg
push
int
xchg
iret
cmp
mov
adc
dec
shlb
aas
and
inc
mov
lock
mov
sahf
bound
sub
push
jmp
js
stc
scas
jb
lret
sti
pop
cmp
xchg
xor
pop
jmp
out
decl
lock
inc
gs
lret
mov
xor
lock
jns
xor
incl
sbb
jnp
lret
aas
stos
pop
or
or
repz
mov
dec
mov
dec
pop
call
jg
push
cmp
ret
popf
pop
adc
xchg
gs
aad
mov
int
sbb
pop
out
out
in
decl
das
inc
out
jno
xchg
and
sub
and
mov
lods
gs
xchg
xor
mov
decl
divb
lods
popf
xchg
or
lret
jno
clc
nop
imul
or
ret
mov
dec
xor
call
add
daa
pop
sub
fucomi
cld
inc
or
xor
cmp
pop
lcall
out
ljmp
lret
xchg
mov
rorl
push
iret
movsb
addr16
cmp
adc
adc
adc
test
cld
adc
arpl
les
icebp
icebp
mov
fcoms
push
mov
sub
cmp
lds
lcall
stos
ljmp
cs
and
movb
jecxz
jno
in
and
lds
jle
jmp
loopne
icebp
jnp
int3
cmp
stc
cli
cwtl
jmp
loope
mov
fs
mov
pop
into
dec
repz
inc
sub
add
adc
sbb
pop
fldenv
ljmp
pop
and
adc
call
push
jns
fsubrs
push
push
jb
xorb
out
mov
shlb
cmp
jge
lea
in
out
outsb
jmp
mov
pop
into
jg
scas
fwait
notb
inc
andl
adc
mov
inc
mov
lret
mov
adc
outsl
jb
add
pushf
cmp
push
inc
outsl
imul
loopne
scas
nop
cmpsb
ds
mov
aam
stc
in
std
in
jg
call
push
xchg
sbb
push
mov
jae
pop
or
out
in
daa
mov
insb
ss
sub
iret
sar
cs
push
xor
jae
and
iret
or
xchg
cmp
incl
jge
xchg
repz
mov
inc
cmp
fbld
cmc
outsl
jmp
out
js
pushl
out
add
xor
dec
sbb
rolb
push
sub
incl
pop
ds
pop
mov
stc
jno
fists
push
mov
mov
loopnew
jg
or
into
lcall
ror
test
in
inc
add
jno
xor
cli
jg
adc
inc
jmp
lods
or
scas
rolb
inc
jmp
mov
mov
sub
xchg
push
jo
dec
mov
ja
ret
insb
lods
movsl
jo
xor
jg
decl
cmpsb
mov
addb
and
dec
jg
out
mov
call
addr16
push
dec
inc
pop
out
sub
stos
jae
xor
std
daa
nop
stc
cmp
cmp
call
incb
in
xorl
jmp
mov
ljmp
mov
in
mov
iret
in
dec
adc
call
mov
cmpsl
aaa
push
fldenv
call
or
adc
inc
ret
add
dec
nop
ss
in
lret
fwait
or
incl
cmp
xlat
in
push
mov
adc
xor
dec
scas
adc
xchg
in
incl
inc
insl
pop
shlb
aaa
push
inc
je
push
dec
xchg
dec
sbb
test
mov
lret
jmp
mov
scas
xor
inc
add
fimull
movsl
leave
jg
test
sub
jg
subb
stos
out
xchg
cs
xchg
push
and
shrl
mov
xlat
scas
cmc
roll
dec
adcb
pushl
fidivl
lea
or
jecxz
xchg
mov
cmpsb
mov
outsb
mov
add
jecxz
aaa
mov
cltd
xor
push
dec
repnz
movsl
adc
sbb
jecxz
shlb
insb
fbstp
dec
imul
std
insl
in
xchg
fisubs
and
adc
xchg
cmpsl
pusha
clc
xchg
mov
mov
cmp
inc
testb
adc
in
add
pushl
sub
inc
stc
cmc
jecxz
inc
mov
aad
sti
push
nop
cmc
int3
call
fdivr
jg
cmp
dec
popa
sbb
test
inc
scas
push
sub
push
cmp
lcall
clc
xor
jns
push
xchg
outsb
xor
sub
ljmp
xor
push
das
clc
call
and
je
adc
mov
mov
aas
jecxz
repnz
jecxz
leave
decl
shlb
jb
jmp
jge
clc
xor
cmc
ficomps
cltd
sarl
dec
fistl
and
xchg
leave
ja
inc
js
mov
repnz
dec
lcall
outsb
outsb
xor
call
jl
in
movsl
sbb
cmp
cmp
lahf
xchg
cmp
push
out
mov
push
outsb
sti
leave
jge
ljmp
inc
int
js
push
clc
jbe
aas
cli
push
pusha
add
xchg
push
ljmp
lcall
mov
xorl
pop
dec
enter
cmp
imul
jmp
ret
dec
fs
dec
cs
inc
mov
ret
cmc
mov
dec
insb
subl
out
fs
not
sbb
xchg
repnz
mov
ds
mov
jmp
cs
xchg
dec
icebp
cli
ret
mov
loop
push
cmp
inc
hlt
push
jmp
insb
loope
call
mov
ss
scas
movsb
daa
ljmp
push
or
inc
add
adc
hlt
inc
adc
xchg
sti
cmpl
out
push
dec
das
inc
fisubrl
bsf
mov
sti
test
jns
push
int3
mov
pushf
push
or
jg
add
mov
dec
in
cmp
filds
jg
jbe
and
mov
jl
mov
jg
ja
ljmp
call
cltd
pop
jb
stc
sahf
in
xchg
les
repz
das
pop
xchg
aas
call
std
nop
jne
add
rorb
ljmp
push
pop
ljmp
mov
pop
mov
pop
mov
and
push
ret
icebp
lret
sbb
jno
jmp
pop
dec
fwait
lahf
jbe
jg
lds
ret
push
cmc
test
mov
lock
push
movsl
lcall
in
lret
pop
out
sub
xlat
ds
in
mov
decl
lock
dec
xor
add
addb
sub
mov
out
lret
mov
pop
cmp
jecxz
and
stos
dec
jne
or
ljmp
icebp
movsb
cmp
xor
push
adc
sbb
popl
hlt
rorb
mov
lcall
lcall
xchg
nop
repz
pop
cmp
mov
pushl
insb
jns
jge
decb
sbb
rclb
in
int
push
sub
dec
mov
ljmp
adc
or
inc
int
or
pop
and
insl
xchg
pop
fadd
sub
decl
sub
sub
push
mov
xor
sbb
nop
cmp
test
cmpsl
ljmp
adc
dec
mov
push
pop
adc
push
jg
rclb
imul
ret
sub
mov
out
sti
inc
sbb
divl
xchg
fs
mov
sub
cmp
inc
stos
push
fs
jp
int3
cmp
sti
rorl
lcall
bswap
pushf
jle
adc
roll
rcll
jo
dec
add
sub
call
lahf
imul
lcall
and
mov
lods
xor
xchg
outsl
sub
push
adc
pop
decl
fcom
sbb
leave
enter
fs
lret
jo
mov
daa
in
pcmpgtw
push
adc
decl
mov
in
sbb
cmpsl
dec
xor
hlt
pusha
mov
jb
pop
cmc
rolb
xchg
fdivrl
and
xchg
cmp
cmp
pop
lods
ss
inc
mov
lods
sti
ret
inc
mov
fcmovbe
or
sbb
js
push
jp
outsl
mov
fnstcw
movsb
fsubl
and
es
loop
sub
xchg
mov
mov
into
xchg
inc
pop
fistl
arpl
jb
mov
pushf
xor
mov
mov
in
outsb
sahf
mov
sbb
cs
fcompl
push
hlt
sbb
dec
mov
xor
sub
das
sbb
out
in
mov
idivb
call
lea
mov
ljmp
lcall
incl
cmp
or
shld
jle
mov
ret
dec
das
jp
inc
or
push
aam
inc
add
cmp
mov
push
or
push
jecxz
das
sar
imul
add
mov
inc
dec
jns
sbb
ljmp
stos
pop
jmp
les
mov
mov
inc
inc
into
add
push
dec
and
mov
iret
sub
xor
pop
icebp
jl
std
in
sbb
xchg
gs
lcall
dec
push
mov
mov
cmc
jp
inc
lret
jmp
xchg
fldcw
xchg
mov
decl
movsl
and
dec
sub
in
xchg
out
fsubp
outsb
fisubrl
xchg
and
lret
mov
push
mov
xchg
xchg
jle
pop
push
add
out
insl
jb
jns
inc
incl
and
mov
das
inc
cmp
cltd
ja
pop
lret
pop
lahf
pop
xlat
add
or
call
bound
fimull
pop
mulb
stc
and
frstor
cmp
jmp
xchg
inc
das
adc
and
mov
cli
push
jle
mov
jecxz
pop
sar
add
inc
subl
rclb
xchg
pushl
cmp
cmp
jp
outsl
xchg
push
lock
pushf
sub
push
sbb
mov
lock
xchg
xor
inc
xchg
insb
or
push
ljmp
mov
pop
sbb
mov
test
mov
test
lcall
xchg
stos
insl
lods
or
cltd
test
or
cmp
lcall
leavew
test
loop,pt
sbb
in
insb
out
sbb
pusha
fwait
mov
dec
push
cltd
js
ljmp
sub
test
nop
ss
fwait
add
cmp
push
rorl
clc
dec
mov
loope
mov
iret
pusha
cli
popa
cmpsb
out
mov
inc
mov
cld
ljmp
adc
add
cld
mov
enter
idiv
decl
fwait
cmpsb
pushf
mov
add
sti
push
dec
and
inc
imul
ljmp
decb
in
fsubs
jge
xchg
adc
shll
adc
imul
jmp
xchg
ret
pop
enter
aad
sub
cmp
cltd
sub
repnz
addr16
lcall
sub
push
mov
cmp
jb
xchg
inc
and
incb
dec
gs
mov
ret
shll
push
test
push
jp
fmuls
jp
jmp
or
test
outsl
add
fisttpll
bound
sub
ljmp
test
test
fisubrs
adc
imul
adc
mov
jne
dec
stc
pop
jns
add
leave
mov
mov
jecxz
mov
mov
repnz
xchg
pushf
add
cmpsl
pop
push
adc
insl
mov
xor
idiv
mov
dec
fidivrl
pushf
aad
pop
loopne
add
gs
aam
pushl
lods
cld
bt
xchg
scas
jg
into
scas
out
mov
push
outsb
dec
fwait
jecxz
xor
rcl
insl
xchg
push
cld
jecxz
insb
jae
push
scas
mulb
xor
dec
mov
add
pushl
sahf
cltd
test
cmp
stos
mov
inc
push
cmpsb
push
mov
xchg
xchg
loop
decb
dec
dec
sub
clc
out
adc
lods
pop
dec
cld
fs
push
int
ljmp
jmp
xchg
and
adc
sub
and
movb
cld
mov
lcall
ljmp
cwtl
in
arpl
xchg
shrl
test
mov
xchg
imul
fisubl
dec
fnstenv
sbb
sti
ret
add
xchg
adc
dec
push
popa
lcall
xchg
dec
lret
push
shl
pop
mov
and
push
in
mov
pushf
sub
and
incl
cltd
jl
cmp
lahf
xchg
in
or
push
xor
aad
dec
out
and
jmp
mov
daa
shrb
lret
in
popf
test
adc
lods
daa
into
popf
adc
ror
out
ds
jmp
fwait
mov
pop
sarb
loop
sbb
sub
fdivs
dec
aam
out
mov
pushl
and
and
mov
aad
jbe
adc
call
imul
inc
jp
mov
xchg
mov
dec
fisttpl
lea
cmp
out
jg
call
add
test
push
roll
pop
pop
and
clc
pushl
and
movsl
push
mov
inc
addl
addr16
out
addr16
ljmp
mov
dec
imul
or
xchg
lea
leave
or
push
pushl
and
jle
sbb
inc
or
aam
and
test
inc
jmp
or
sbb
push
push
lods
mov
lods
cltd
or
xchg
adcb
cmp
in
arpl
mov
dec
loopne
lcall
inc
jp
adc
sti
imul
and
and
jle
clc
decl
subb
push
jnp
jae
je
inc
std
or
cmp
mov
pushl
std
sub
fs
add
stc
arpl
cmp
inc
mov
cmc
dec
in
fidivrs
cmp
sub
repnz
shlb
sti
fwait
or
mov
scas
clc
leave
dec
aaa
std
jg
xorb
cmc
ljmp
add
mov
inc
xor
ja
jmp
inc
fucom
mov
add
and
inc
mov
cmc
and
or
xchg
cwtl
adc
decl
test
fwait
adc
les
mov
in
mov
clc
rorb
inc
xchg
fdivrp
mov
fistl
xor
push
jl
add
lock
mov
fstpt
or
cmp
ljmp
out
mov
lea
dec
xchg
leave
scas
jecxz
xor
mov
mov
inc
test
int
int3
cmc
sti
dec
pop
dec
std
lods
ret
lock
jp
xor
push
push
test
cmp
out
cli
rolb
or
jae
sub
add
icebp
jb
and
lret
lods
test
inc
mov
fimuls
je
mov
ljmp
jmp
add
cld
pop
hlt
rcrl
jne
adcb
rcl
mov
cld
jno
xor
fisttpl
and
xor
mov
or
jg
jg
addr16
or
outsl
out
cmp
pop
xor
mov
pop
jg
scas
lcall
lret
pop
ficomps
pushl
aad
call
repnz
xchg
cmp
and
push
outsl
into
subb
sbb
lahf
jp
mov
cwtl
sub
imul
aaa
inc
nop
jecxz
out
push
dec
test
incl
iret
ljmp
sbb
or
mov
movsl
mov
in
and
into
inc
cwtl
pop
cld
jg
or
add
inc
push
or
leave
iret
jnp
movaps
test
jl
sub
lret
pcmpeqd
ficompl
push
ficoms
test
cwtl
test
decl
leave
pop
sub
push
and
out
lahf
xor
je
inc
pop
rclb
ljmp
cmpsb
cli
xor
adc
xlat
arpl
jmp
xor
push
add
xor
and
or
adc
decl
rorb
icebp
pop
mov
xlat
and
arpl
repnz
sbb
sti
lock
in
push
jle
adc
mov
lret
add
in
mov
int
movsb
inc
jo
xchg
pop
sbb
stos
ret
mov
out
das
dec
or
mov
shlb
cmp
add
dec
int
xor
int3
jg
mov
push
mov
sbb
xor
fstl
lcall
fwait
jmp
jns
popf
inc
sbb
aam
jns
scas
cwtl
and
push
jne
mov
cmp
cli
push
xchg
pop
out
int3
adc
sbb
add
out
mov
and
jmp
cmp
mov
ljmp
fisubrl
inc
jp
ljmp
pusha
mov
ljmp
in
jns
xchg
pop
lahf
or
in
dec
sub
ja
clc
dec
data16
add
negl
sub
mov
lcall
test
or
ficoms
cwtl
mov
mov
or
lcall
out
fbld
adc
out
int3
in
inc
mov
shll
jae
push
sbb
hlt
push
mov
sub
cmp
sarl
add
pushf
stos
out
pop
cltd
adc
mov
imul
sub
repnz
sahf
dec
push
stos
sbb
gs
shr
mov
inc
push
push
cwtl
add
adc
out
cli
pop
scas
sahf
inc
adc
mov
mov
jmp
repnz
cmp
incl
push
jns
jne
arpl
adc
xchg
aam
jmp
outsl
mov
fs
ljmp
aas
int
sbb
mov
sub
mov
or
jo
es
xchg
lcall
or
sub
jb
fisubs
pop
xchg
pop
pop
lahf
sbb
stc
push
arpl
mov
incl
sub
cmovno
sbb
fbstp
lcall
pop
aas
inc
fcompl
cld
enter
mov
lret
jl
adc
pop
push
adc
jb
add
daa
insl
ret
pop
pop
dec
dec
gs
fsubs
clc
roll
and
mov
js
push
jl
cs
imul
inc
loopne
cmp
cld
xchg
repnz
icebp
xchg
mov
out
clc
inc
xor
adc
xchg
clc
pop
push
jg
fs
loopne
decl
push
lds
fidivrs
mov
pop
fdivrl
dec
fidivs
mov
imul
nop
sub
cltd
inc
cmp
shlb
dec
mov
jmp
cmp
ss
jg
lods
push
jbe
inc
pop
repz
add
jg
jp
cmp
loop
outsl
cli
ljmp
jbe
imul
jmp
jns
pop
dec
jns
xor
pop
sahf
push
sub
or
outsb
cwtl
push
sub
movsl
push
out
popf
iret
xor
sti
sub
or
sar
pushl
jg
pop
scas
test
fldt
xchg
test
sbb
pushl
out
jbe
jno
push
iret
movsb
sub
movsb
fnstenv
or
cld
shlb
fistpl
and
sar
inc
or
and
pushl
scas
jle
hlt
daa
jl
jl
mov
int3
popa
loop
jae
out
addb
mov
pop
and
mov
add
dec
in
leave
mov
bound
mov
xchg
adc
adc
out
and
mov
pop
cmp
stc
jbe
cmp
dec
cmpsl
dec
add
ljmp
call
add
cmp
xor
lods
inc
lcall
test
mov
testb
sub
sub
loope
popf
dec
inc
or
dec
leave
or
ljmp
sar
mov
add
rolb
add
cwtl
push
sbb
movb
ret
call
aam
daa
mov
xchg
rcrl
inc
sbb
outsl
out
fdivrl
cmc
fcomip
insl
adc
test
dec
mov
push
or
movsl
addb
jnp
lcall
ret
or
xchg
jge
pop
inc
adc
sub
repnz
adc
cmp
fwait
cltd
sub
cwtl
adc
jmp
cmp
and
jg
daa
lahf
shrl
inc
pop
js
adc
xchg
outsl
ljmp
mov
cld
xchg
ret
push
mov
fildll
divl
mov
xchg
lcall
imul
in
call
and
test
dec
jae
dec
mov
imul
hlt
mov
jae
fs
adc
inc
jmp
repz
movsl
stos
jle
cmp
sbb
pop
outsl
cmp
out
mov
jmp
or
sti
int
sahf
cmpsb
inc
pusha
das
jmp
and
or
call
cld
cmp
jbe
outsl
into
ds
xor
lret
add
pop
xlat
mov
loop
repnz
decl
add
cmpsl
cltd
insb
cli
inc
xor
jle
push
xchg
fcomp
icebp
fs
ljmp
push
pop
scas
jne
cmp
jno
xchg
add
fbstp
pop
ficoml
ret
xor
jg
movsl
adc
jb
and
push
imul
decl
push
xchg
test
xchg
push
mov
cmp
add
pop
adc
push
lcall
ret
addr16
sub
mov
ljmp
push
push
decl
cmp
add
dec
push
push
ljmp
out
notb
mov
cmp
je
cmc
mov
inc
ss
mov
mov
adc
stc
fstpt
inc
sub
mov
xor
add
scas
jg
icebp
movsl
sub
test
testb
push
incl
jo
dec
and
inc
lahf
mov
addr16
dec
hlt
test
call
mov
aam
ud0
sub
into
add
fs
add
adc
test
or
fs
cs
push
inc
xchg
clc
xor
sahf
cmp
cmp
into
cmc
jo
mov
jb
xchg
scas
pop
shll
into
push
inc
cli
jmp
hlt
bound
je
jns
lcall
add
scas
and
sbb
xchg
test
incl
add
push
or
enter
adc
mov
ja
popa
in
daa
rcrl
xor
pop
xor
test
frstor
jge
loop
inc
and
dec
mov
call
adc
and
adc
pop
adc
insb
adc
mov
cmc
or
mov
lcall
mov
lahf
jne
mov
loop
jae
test
mov
and
mov
call
mov
pop
fcmovnbe
lods
loope
jbe,pt
inc
pop
inc
xor
ficoml
test
cs
xchg
sub
ljmp
cmpsl
mov
popf
jno
movsl
xor
adc
int
xor
in
test
divb
cltd
xor
fdivl
mov
push
les
lea
mov
lcall
or
sbb
sbb
aam
mov
sub
mov
or
lahf
imul
aad
test
cmpsb
sbb
mov
js
push
in
into
aad
cltd
fcomip
xchg
aas
cmp
add
xor
pop
and
scas
dec
mov
fidivs
sti
pushl
add
dec
xor
sub
out
lods
test
jne
je
orb
mov
pushl
std
add
sub
add
jae
sub
das
jne
cwtl
out
js
clc
roll
pop
hlt
cmp
aad
in
hlt
ds
repnz
mov
cs
mov
call
call
movsl
insl
fbld
jle
int
sbb
mov
push
inc
imull
call
mov
cmp
rorl
adc
dec
sarl
dec
adc
jo
push
pusha
sbb
ss
mov
lods
loop
jne
cmovl
pop
pop
mov
call
pop
mov
xchg
add
push
aad
rcrb
sar
aam
ret
pop
fdivp
ficomps
or
pushl
andl
dec
cmp
in
mov
cmp
jmp
or
cmp
cmp
add
cwtl
sbb
push
cmp
cwtl
lods
pushl
dec
add
jnp
xor
mov
into
repz
mov
mov
xchg
incl
lret
sbb
in
mov
sub
sbb
testb
pop
fisttpl
inc
fnstcw
push
jg
call
enter
push
xchg
xor
mov
jo
push
hlt
inc
push
cli
test
sbbl
fyl2x
clc
sbbl
push
fldcw
out
cmc
adc
andl
push
or
push
outsl
fisubs
sbb
mov
mov
std
vpsrad
push
scas
mov
call
sbb
in
fisubs
adc
imul
aas
les
int3
jle
mov
fistpl
fstpl
stc
das
fwait
push
or
and
frstor
repnz
stos
stos
icebp
cmp
xchg
and
test
jbe
outsl
xor
daa
push
mov
push
mov
jno
or
cltd
movsl
imul
and
adc
pop
mov
mov
dec
dec
lcall
cld
adc
cmp
inc
add
xor
sbb
pusha
and
dec
lret
gs
mov
xor
pop
lcall
sbb
neg
xor
das
mov
rcrb
cmp
push
xchg
ljmp
fisubl
cmpsl
sub
mov
mov
and
leave
daa
xor
jno
cmp
pop
and
sbb
jle
sarb
insl
push
sbb
xor
shl
sbb
jmp
ret
out
mov
nop
out
and
dec
jb
lods
mov
push
pushl
test
add
repz
sarl
movsb
call
add
loope
mov
sarb
adcl
push
mov
test
stos
fldcw
inc
and
pop
jno
fdivs
cmc
inc
mov
popa
je
or
mov
mov
fildl
xchg
fs
test
mov
test
ss
outsb
mov
or
fcmovb
pop
fadds
cmp
fdivl
or
add
inc
ja
pop
pop
out
shl
dec
jmp
lret
cmpb
jmp
xchg
hlt
mov
lahf
jmp
mov
add
lret
adc
mov
sahf
mov
lea
push
pop
movsl
push
push
push
or
xor
push
and
cli
dec
mov
scas
jecxz
out
sbb
cmp
aad
cli
bound
fiaddl
loope
sbb
aam
xor
addr16
mov
popa
in
dec
cmp
lcall
or
nop
inc
mov
sbb
dec
int3
repnz
imul
nop
cmpsb
xchg
pop
mov
js
pusha
daa
lods
shl
xchg
and
xor
push
fwait
pushf
sub
fcomip
xchg
cmp
add
dec
aad
xor
mov
dec
xchg
adc
pop
push
cli
lcall
cmpsl
pop
rcrb
fldenv
push
sub
inc
mov
lcall
dec
adc
ljmp
mov
mov
jmp
jo
outsb
jecxz
pushf
mov
ljmp
data16
xor
insl
xchg
fisubl
repz
ret
mov
mov
push
cld
jg
or
out
inc
xchg
cmp
xchg
aas
mov
sarb
jg
or
loope
lods
ljmp
lcall
pop
call
or
or
scas
jecxz
xchg
inc
push
dec
test
and
gs
decl
fnstsw
daa
shl
notb
popf
fs
push
dec
fstp
add
add
clc
stos
xor
pop
sub
jp
scas
ja
loope
and
pop
and
or
adc
jl
aas
inc
xor
xlat
pushl
std
arpl
adc
add
push
mov
xchg
pop
pop
aad
or
in
mov
cmp
decl
mov
mov
test
cs
xchg
sbb
cmp
cld
in
decl
inc
sbb
hlt
dec
add
cs
cmp
mov
decl
scas
popf
adc
in
push
loop
sub
push
mov
ret
call
pop
pop
icebp
scas
cmpsb
push
pop
push
sub
xchg
dec
mov
sub
dec
mov
scas
push
cltd
ljmp
outsb
testl
dec
leave
xchg
jns
inc
repnz
jns
and
int3
push
aaa
cld
lcall
int
inc
mov
es
stos
jnp
test
dec
jg
cmp
inc
pop
cmp
mov
pop
push
jl
jmp
sub
push
decl
push
std
jns
fstp
cmpsl
or
mov
fs
mov
adc
inc
popf
addr16
scas
dec
aaa
jmp
inc
dec
sbb
fildll
jae
and
in
push
sub
sbb
push
xor
push
push
jb
call
orl
mov
mov
mov
into
in
ud0
ljmp
hlt
div
in
insl
xchg
xorl
inc
lock
ljmp
clc
pushl
mov
push
ljmp
lea
dec
dec
cmp
out
mov
int
jb
xchg
mov
mov
xor
jg
jmp
push
in
popa
mov
sti
pop
mov
clc
xor
aaa
jmp
daa
cld
mov
sbb
add
sub
std
decl
stos
inc
stos
pop
add
mov
imul
jb
or
dec
fwait
in
repnz
cmpsl
add
push
jg
mov
cmp
aad
je
shll
lahf
adc
inc
mov
xchg
inc
mov
mov
bnd
test
and
mov
sbb
out
pop
out
or
stc
lods
mov
add
jo
sbb
sub
scas
dec
je
and
sbb
out
mov
cs
lcall
push
pop
loope
repz
sbb
xchg
arpl
jmp
xchg
pop
sarb
in
xor
and
sbb
test
in
pop
xor
and
jo
rolb
cmc
lcall
inc
and
xchg
ss
mov
sub
inc
notb
mov
pop
test
aam
ss
jg
pushl
daa
lret
dec
or
adc
rorl
insb
add
dec
push
call
in
xchg
fsubl
lret
in
mov
push
addl
jmp
pop
das
and
mov
icebp
shrb
int
mov
or
lods
sti
das
fimuls
jl
gs
rclb
inc
or
rcll
ljmp
int3
and
ljmp
sub
jl
jnp
push
sub
push
ja
jnp
mov
mov
mov
fcomi
add
sbbl
shl
roll
testl
call
jae
ss
cmpsl
add
popa
cwtl
fstpl
xchg
movsb
insl
add
sub
insl
jg
incl
fwait
jno
inc
push
or
mov
adc
and
ss
lcall
fists
mov
das
in
mov
sub
fadds
pushf
insl
test
lcall
push
adc
stc
fdivl
xor
rcr
repnz
dec
jo
cli
lcall
xor
outsb
dec
out
jb
movsl
xchg
dec
mov
repnz
jp
jle
add
call
dec
add
jg
pop
mov
pop
and
mov
je
dec
xchg
shlb
xchg
lods
pop
jmp
inc
aaa
faddl
ljmp
jg
jge
loopne
pushl
lock
pop
ljmp
and
lods
mov
or
push
notl
icebp
push
clc
xor
dec
imulb
cli
inc
push
mov
dec
pop
mov
cmpsb
test
pop
push
add
outsb
push
imul
dec
cmp
fs
in
push
sub
ret
ret
shrb
incl
inc
xchg
sbb
or
cmp
inc
std
xchg
fs
ja
push
cmpb
shll
push
fildll
xor
je
xchg
inc
imul
dec
sbb
movsb
arpl
orl
sarl
ljmp
inc
pop
push
aas
mov
xor
mov
std
jle
ds
inc
imul
sub
pushl
inc
mov
mov
shll
dec
lret
loop
addr16
out
andl
and
adc
jmp
test
push
add
aad
scas
xor
dec
fisttpll
jne
shr
inc
xchg
std
push
sar
stc
stc
jmp
pop
test
pushf
sub
cli
inc
gs
das
ljmp
or
incl
in
stos
fwait
push
jle
adc
aaa
mov
add
insl
dec
push
push
xchg
ljmp
jae
ja
fsqrt
or
fistps
jl
or
and
in
xchg
mov
pushl
jle
subb
mov
sbb
cs
jnp
lret
lcall
mov
call
pop
push
push
cwtl
into
mov
and
cli
jmp
sbb
jne
mov
push
addr16
ljmp
sub
jbe
inc
push
rcll
callw
ficoml
dec
loop
adc
jecxz
jmp
fbld
jne
fisubs
push
lds
push
int
push
adc
inc
push
orl
adc
push
stos
in
fdiv
test
std
les
divb
les
jo
mov
cmp
ror
data16
adc
pop
pop
inc
stos
sub
aaa
dec
jae
push
shrl
andb
shl
ja
and
push
dec
pushf
xchg
sub
push
test
icebp
xchg
mov
mov
pop
jne
fcom
popa
jbe
adc
dec
or
cli
mov
out
call
sub
push
dec
mov
add
push
test
psllw
mov
pushl
xor
push
insl
icebp
xchg
loop
imul
pusha
xlat
lret
push
mov
icebp
adc
out
and
sub
jg
and
out
js
push
xorl
xor
imul
fidivrs
inc
stc
aas
in
ljmp
aas
stc
jecxz
imulb
xchg
cmp
enter
int
lods
and
dec
cmp
inc
dec
xchg
and
movsb
xchg
add
cwtl
sub
adc
cld
insb
lcall
sub
test
inc
mov
sarl
decl
popa
or
aad
cli
ret
mov
mov
ja
pop
jp
rcrl
push
mov
xchg
pop
loope
and
mov
mov
xor
sub
pop
and
jmp
pop
js
rcrb
jo
lea
push
js
push
out
popf
jnp
pop
mov
push
inc
mov
lahf
clc
loope
inc
sahf
imul
xor
aas
ljmp
cmp
clc
jae
aam
movsb
pusha
add
jl
dec
dec
or
ret
jmp
leave
and
push
sbb
pop
jbe
xchg
rolb
jbe
sub
hlt
mov
dec
sub
aam
fsubs
push
aam
jge
iret
push
sub
cmpsb
movsl
je
mov
pop
inc
jg
mov
push
in
jmp
in
out
or
cmp
mov
pushf
dec
sti
mov
bound
mov
fldt
lahf
and
fcoml
adcl
xchg
cli
dec
mov
das
cmpsb
dec
stc
popf
bnd
mov
pop
fisubs
inc
imul
jmp
sti
xchg
jge
sahf
test
dec
cli
adc
inc
aam
jno
dec
andl
jle
mov
call
adc
fdivrp
stc
inc
sbb
mov
pop
ret
mov
xor
pop
and
ljmp
push
imul
sub
es
mov
push
mov
jmp
gs
imul
and
jge
xlat
sub
in
sbb
orb
fwait
into
xchg
dec
jp
xchg
jne
dec
inc
push
in
in
adc
les
arpl
sbb
dec
push
call
cld
xor
loope
inc
xor
inc
std
int3
sbb
rclb
xchg
add
mov
inc
sub
decl
les
mov
xor
pop
mov
pop
sbb
jbe
nop
sbb
mov
loope
push
xchg
cmp
sub
lods
mov
fs
cmp
lcall
mov
lret
stos
ret
inc
lods
adc
or
dec
jnp
xchg
jae
xchg
outsl
das
inc
call
push
cld
pop
jne
sbb
lahf
push
icebp
xchg
add
pop
ljmp
adc
inc
pop
jl
test
icebp
xchg
jo
push
jp
aaa
lods
lret
jl
mov
push
leave
icebp
pop
fisttps
adc
nop
test
inc
repz
jmp
inc
mov
and
decl
cmpsl
xchg
fldenv
pop
mov
pop
adc
mov
jo
inc
out
loopne
cmc
push
mov
cli
cwtl
add
popa
and
xchg
out
addb
call
add
jnp
pop
or
mov
and
add
dec
out
xchg
das
js
in
xchg
and
or
fsubr
gs
jo
out
mov
loopne
jnp
xchg
test
ds
pop
pop
leave
mov
roll
mov
inc
push
rorl
pop
ljmp
or
mov
xchg
cmp
lahf
cmc
mov
mov
jmp
in
xchg
sahf
sub
add
or
and
pop
jge
xor
ljmp
movsl
faddp
out
xor
addr16
jmp
or
frstor
jp
leave
call
dec
mov
faddl
sbb
or
call
cld
push
fnsave
das
mov
jp
mov
or
fnstsw
subl
es
xchg
push
and
mov
mov
andb
cmp
in
stos
in
xor
scas
clc
pushl
jle
sub
pop
mov
pop
out
sbb
mov
mov
mov
xor
mov
mov
jbe
es
incl
outsb
add
fidivs
out
mov
shl
test
and
stos
mov
shll
adc
jmp
xor
std
push
dec
cmp
pop
mov
dec
inc
xor
movsl
rorb
ljmp
int3
out
cmpsl
mov
shrl
push
push
lock
adc
xor
jmp
mov
outsl
cltd
or
inc
fcompl
repnz
and
jmp
nop
jle
lea
jae
test
sbb
incl
andb
sub
lds
pop
test
cmpl
and
cmp
test
aaa
sub
push
scas
scas
add
or
adc
ljmp
shll
aas
add
nop
jecxz
hlt
fistl
xlat
push
gs
into
addl
jge
mov
mov
mov
sahf
push
cmc
sbb
loope
xlat
lahf
stos
inc
sti
push
cmp
xchg
nop
mov
cs
fdivrl
ret
jne
mov
pop
data16
cmc
rorl
mov
incl
cmp
jp
aad
push
add
andl
sbb
cmp
adc
lods
lea
sbb
int
sar
pop
test
insb
pop
scas
sarb
cmp
and
loop
jmp
popf
popa
test
xchg
mov
cmp
mov
pop
pop
insb
inc
cmp
pop
shl
mov
push
mov
repnz
and
outsl
add
fnstcw
fisubs
pushf
push
pushf
add
push
and
stc
mov
stos
std
call
paddsb
and
sub
push
xchg
call
in
inc
aam
cmp
adc
insl
mov
mov
mov
loopne
test
decl
in
pop
mov
int3
cltd
push
testb
cltd
popf
dec
pop
cmp
and
mov
jl
out
outsb
and
mov
fcoms
dec
push
push
daa
xchg
fisubrl
adc
popf
cmpl
push
roll
mov
cmp
lea
and
popf
push
cld
jns
xor
lret
bound
xchg
mov
dec
push
mov
out
movsl
mov
add
dec
mov
ljmp
xchg
mov
in
cmp
mov
not
jg
in
stos
cs
gs
xchg
jg
adc
insb
out
push
pop
xchg
iret
add
fsubp
adc
mov
adc
lcall
ljmp
pop
mov
loop
mov
imul
test
test
add
jmp
insl
cltd
push
lret
sub
lock
cli
bnd
mov
jbe
dec
mov
push
cli
mov
fists
fcomip
gs
lahf
fdivs
mov
pop
test
inc
sbb
cmpsl
test
dec
sbb
sub
shlb
push
mov
std
subb
pop
xchg
stos
pop
stos
loop
ret
shll
fimull
jp
call
xchg
pop
xor
stos
sar
mov
inc
or
cs
mull
rep
push
pushl
mov
and
ja
loopne
ret
push
sub
jl
mov
mov
pslld
ret
xchg
out
add
and
jbe
loope
lcall
lea
sbb
and
sbb
and
sbb
fists
cmp
pop
and
dec
jno
mov
dec
jae
dec
push
cmp
out
incl
xchg
push
movsl
pusha
dec
xor
rep
les
stos
int
movsb
scas
and
pushaw
leave
mov
mov
pushl
cmc
arpl
cmp
cwtl
scas
mov
lret
pop
mov
out
cmpsl
sahf
in
push
ljmp
sbb
pop
push
es
mov
push
inc
test
adc
fsubrp
jne
lcall
and
pop
add
in
aas
repz
fwait
pop
pop
scas
xchg
test
das
dec
adc
call
cs
push
inc
stos
fildll
dec
sbb
pop
pushf
or
lcall
idivb
cmpsb
inc
adc
cwtl
stos
jbe
cmp
add
data16
decl
js
rcr
jecxz
and
pushl
add
dec
sub
sub
push
jl
sbbl
fiadds
xor
fwait
in
into
push
push
and
popa
fs
mov
aad
pop
mov
aam
sbb
push
stos
and
and
shlb
jg
in
adc
add
out
call
pop
bswap
test
out
jbe
fcmovne
cli
std
orb
fisubrs
mov
cltd
push
adc
loope
adc
mov
lcall
or
push
add
jbe
pop
in
and
pop
pop
daa
dec
loope
inc
test
cmp
lcall
js
sti
push
sbb
fmull
aad
ja
push
jbe
repz
dec
xlat
add
and
pushf
stos
adc
pop
inc
movsl
dec
incl
jl
insb
ror
ljmp
or
mov
cld
mov
rcrb
in
dec
shlb
mov
push
add
dec
sub
js
lods
and
sti
cli
rolb
les
lds
or
arpl
cmpsl
cmp
lods
xchg
in
mov
ljmp
stos
cmc
xchg
mov
dec
sub
and
cmpsl
cmp
pop
dec
inc
repnz
or
inc
or
incl
clc
lea
gs
push
mov
and
inc
lea
jl
push
loope
movsl
decl
push
loopne
shr
mov
or
mov
sub
dec
pop
cld
decl
loopne
dec
js
stos
add
dec
std
loope
decb
mov
je
sub
inc
sbb
decl
push
xlat
int3
out
outsb
stos
pop
inc
jo
lahf
and
push
mov
push
xchg
xor
or
call
pushf
lea
cmpsl
mov
pop
stos
mov
sbb
int
sbb
incl
sahf
mulb
shll
call
add
fisubrl
mov
and
xlat
jo,pn
and
pop
flds
lcall
es
xchg
stos
nop
xchg
sub
push
pop
sahf
out
lods
pop
xchg
mov
and
mov
in
cmp
mov
sbb
pop
jmp
aaa
movsb
lds
test
test
ds
or
cmp
repz
es
sub
scas
arpl
ljmp
xchg
insb
jp
sbb
adc
subl
xchg
xchg
dec
lret
call
dec
sbb
adc
cmpsb
push
orl
loopne
lahf
jnp
and
push
mov
dec
lret
lcall
jns
pop
mov
idiv
fisubrs
aas
imul
aas
push
xorb
insb
and
scas
cli
push
sub
movsb
cmp
jne
xor
lock
mov
sbb
aaa
ljmp
pop
fnstenv
repz
and
enter
pop
mov
call
jecxz
popa
xor
comiss
push
fildl
fstl
cmp
mov
loopne
es
ljmp
mov
mov
mov
jmp
adc
push
cltd
push
mov
mov
je
mov
pop
dec
lds
in
cmp
dec
mov
insb
mov
push
xchg
shl
push
xor
ficompl
lret
filds
repnz
xor
push
cmpb
xor
and
cmpsb
cmpsb
call
pop
push
call
cmc
call
mov
mov
dec
sub
dec
xchg
sti
pop
adc
adc
mov
xor
xchg
cmc
out
movsb
push
add
or
aam
jmp
ljmp
adc
pop
inc
stc
inc
movsb
jno
and
int
movsl
push
mov
sub
roll
scas
inc
add
mov
es
inc
or
les
in
call
push
or
imul
dec
mov
subl
int
pusha
std
mov
xchg
addr16
call
stc
jne
rclb
in
cmp
pushf
xchg
arpl
cmpsl
fsub
cmp
leave
mov
in
mov
fucomp
lds
hlt
add
pushl
jg
or
inc
nop
push
and
addr16
cmp
mov
mov
lcall
roll
ficomps
pop
cli
xchg
cwtl
mov
push
stc
mov
jecxz
push
mov
fidivs
push
test
into
sbb
scas
add
inc
negl
adc
and
add
xchg
jo
sbb
leave
sub
dec
out
push
add
aas
mov
mov
xor
add
add
loope
push
fs
cltd
jne
mov
pushl
lods
and
cltd
pushf
in
xchg
inc
dec
cmpsl
sarl
repnz
and
call
imul
cmc
sahf
adc
xchg
pop
movb
imul
cmc
cmovo
add
inc
jmp
sub
sub
jae
pop
adc
adc
mov
gs
faddl
sbb
sahf
push
in
jmp
push
and
dec
movsb
fbld
inc
and
or
inc
outsl
out
xorb
or
pushl
xchg
pop
outsb
or
pusha
cmp
push
jbe
fwait
lret
lcall
and
push
cwtl
je
jne
aam
test
fists
repz
inc
lods
fildll
cmpsb
aaa
int
mov
adc
sti
decl
out
adc
int
dec
fcomi
xor
in
testl
mov
xchg
std
jmp
test
mov
outsl
rolb
lods
loopne
shll
imul
pop
mov
mov
push
subb
jg
sbb
pop
loopne
lcall
mov
in
cmp
in
or
sbb
call
ljmp
adc
orl
adc
pop
pushl
mov
push
inc
aaa
add
lahf
hlt
stos
sub
jp
aaa
clc
pop
imull
stos
ljmp
shll
xor
mov
cmp
bound
aad
and
jo
or
jae
sub
ljmp
xor
je
cmp
out
scas
and
divl
add
pop
cmp
sbb
cltd
pop
cmc
xchg
xchg
xchg
mov
jle
hlt
loopne
int3
or
jb
inc
popa
jg
mov
into
popf
sub
jne
js
hlt
pusha
push
ss
xchg
iret
int3
test
push
push
das
adc
imull
push
insb
icebp
and
aas
add
call
mov
mov
add
push
call
cmp
in
aas
push
xlat
incl
jp
icebp
jle
adc
mov
out
psllq
jg
imul
sub
mov
dec
xlat
movsl
xchg
fnstsw
push
iret
test
fisttpll
inc
stc
outsb
int
dec
cmp
bound
out
jno
je
fisubs
and
sar
xchg
xchg
data16
stos
cmpsb
sub
pushf
jno
sarb
cld
ss
push
mov
mov
mov
out
xor
fldl
inc
pop
push
ffree
cs
in
decl
test
out
adc
cmp
sub
add
lahf
cmp
mov
insb
daa
addb
mov
fsubs
push
mov
stos
mul
bound
fcoml
jnp
inc
sub
pop
xor
push
jmp
ja
push
hlt
hlt
mov
xor
mov
jo
sbb
add
ljmp
mov
mov
clc
sbb
mov
or
outsl
in
fldl
push
stos
es
jl
push
movsl
pop
sub
adc
in
mov
and
lds
mov
stos
dec
mov
fcomip
sub
jmp
sbb
call
out
popf
cmp
lcall
loop
insl
jb
xchg
cmp
out
pop
scas
mov
fbstp
out
out
and
mov
lcall
mov
sub
decl
loop
add
inc
push
jp
iret
push
mov
gs
lea
cli
xor
push
std
push
fdivrl
lcall
cmp
lods
adc
lods
rcl
rolb
and
sub
cs
add
mov
pop
popa
fildl
sbb
std
hlt
fwait
mov
xor
outsl
cmp
mov
jp
or
fildll
xchg
insb
in
movsb
pop
cmp
out
add
popf
push
ret
shll
cmc
jmp
int
fstp
roll
sub
jmp
sub
cld
nop
sbb
popf
push
jns
sbb
aad
incl
pop
daa
push
ds
xlat
es
andl
inc
in
fsts
xchg
jno
pushf
ljmp
sub
cmc
add
dec
mov
jbe
je
sbb
inc
and
sbb
pop
loopne
decl
js
sub
rcll
dec
mov
and
inc
test
jg
push
xchg
xchg
and
cmc
lcall
fs
dec
mov
jmp
jmp
pop
outsl
mov
and
gs
xchg
xchg
pop
int3
loop
gs
sub
ret
cld
repz
inc
and
ss
fwait
ja
fwait
add
mov
mov
flds
lock
fcomip
sahf
adc
sti
popf
xlat
or
shrl
xor
stos
inc
add
or
jge
jae
or
adc
push
scas
push
sbb
loope
les
shlb
outsb
mov
je
addb
es
jmp
push
call
pusha
jle
enter
scas
out
mov
pop
sahf
insl
aas
pop
cmp
test
lock
mov
or
jmp
jle
leave
rol
pmaxsw
pop
bound
out
in
jne
mov
test
dec
pop
mov
in
xchg
pop
sbb
aam
daa
iret
jnp
sub
call
data16
add
mov
setb
xchg
ret
lods
ljmp
jecxz
xchg
in
mov
pop
mov
add
pushf
bound
iret
mov
cs
out
popf
mov
inc
cmc
or
push
lds
cld
fs
sbb
jno
fists
fstpl
inc
push
movsb
pop
mov
aad
ds
data16
jg
dec
mov
or
xchg
push
test
inc
mov
ja
xor
pop
aam
adc
jmp
in
adc
sbb
push
jecxz
xor
idivl
or
mov
jg
sbb
pushf
mov
add
js
mov
jb
or
daa
mov
pushf
adc
lock
loopne
push
stos
movsb
xchg
ds
out
loop
push
xor
fs
push
adc
jmp
cmp
xor
movsb
jae
lock
pop
dec
inc
xchg
jbe
subb
scas
mov
sbb
incl
stos
in
lods
xchg
sub
fnsave
push
lds
ds
jl
lret
add
mov
jmp
mov
lahf
inc
xchg
out
mov
je
cmp
mov
adc
lcall
cld
mov
pop
sarl
gs
pop
xchg
push
inc
dec
push
or
das
movsb
jne
insl
pop
mov
nop
dec
ret
add
nop
addr16
loop
in
dec
jl
icebp
ss
sbb
inc
pop
mov
cmpsb
adc
test
cmp
orb
dec
push
adc
insl
test
cmp
cmp
test
jmp
adc
pushl
or
adc
xor
iret
fcomip
pop
or
int3
sarb
testl
call
mov
fisubrs
xchg
test
mov
cli
pop
test
repnz
movsb
sahf
and
cmp
fcomip
addr16
out
int3
and
sub
push
jmp
mov
test
mov
inc
jmp
gs
cmp
fidivl
lods
iret
adc
inc
bound
movsb
mov
push
setge
jecxz
cmpsb
jle
ljmp
stos
adc
mov
mov
push
xor
inc
rcr
jle
dec
pop
out
das
nop
aas
push
jb
loopne
pushl
dec
cmpsb
and
ficomps
jo
cs
and
sbb
call
movsb
les
jmp
mov
add
xchg
jp
xor
mov
pushf
adc
outsl
mov
dec
ljmp
out
fists
and
adc
push
test
add
lcall
mov
push
or
ret
lret
xchg
fsubs
mov
jmp
adc
cmpsb
in
inc
add
xchg
into
cltd
cmp
mov
push
call
adc
mov
popa
and
aad
jb
imul
or
incl
in
sub
outsl
push
adc
popl
daa
out
xchg
adc
push
test
cmp
decl
push
mov
sbb
out
and
jae
enter
mov
push
mov
inc
imul
pusha
jno
jo
mov
pusha
push
loopne
cmpsb
dec
mov
int3
in
iret
mov
xchg
lcall
jb
stos
or
add
fcomip
or
mov
adc
add
mov
xchg
sub
in
inc
jge
dec
les
adc
adc
test
and
ljmp
lcall
xorb
pushf
loope
push
xlat
jg
adc
addl
mov
arpl
xchg
mov
push
dec
std
jle
rcll
decl
lods
inc
mov
push
adcb
xchg
mov
repnz
mov
imul
mov
sub
sbbb
frstor
in
fcomip
xchg
cmp
pop
mov
mov
outsb
into
jg
inc
xor
hlt
push
dec
sbb
stos
and
fwait
mov
std
imul
cmp
lcall
dec
inc
cmp
mov
andl
jnp
mov
std
fwait
or
in
mov
stos
mov
scas
dec
lret
inc
fs
and
incl
mov
inc
sarl
insb
addr16
inc
cmpb
lret
pop
dec
add
dec
mov
inc
nop
mov
cmp
icebp
movsl
push
repz
int
push
cwtl
out
inc
movsb
or
add
lock
decl
cs
or
adc
movsl
outsl
nop
push
mov
adc
sbb
pushl
push
mov
xlat
lea
test
bound
pop
adc
and
rep
push
hlt
jmp
xor
lret
or
pop
inc
movsb
fwait
or
cltd
mov
and
je
scas
pop
sub
and
add
mov
lcall
stos
sub
cmpsl
and
xchg
cwtl
shlb
mov
and
adc
xor
scas
adc
shlb
push
adc
xorb
xor
sub
lods
mov
data16
mov
cmp
ljmp
pop
rorb
pop
iret
inc
popf
push
cmpsb
incl
dec
jb
or
lahf
inc
adc
jo
js
insl
add
xchg
cmp
pushl
je
lahf
push
mov
sbb
lret
and
fmuls
mov
inc
xchg
xchg
pop
cmp
mov
lods
pop
jnp
jnp
test
inc
mov
fmuls
repnz
pusha
xchg
icebp
pushl
mov
push
xlat
and
cli
mov
xchg
loope
ret
out
aaa
xchg
pop
in
jbe
jnp
lcall
dec
repnz
ljmp
pop
add
push
dec
sub
push
push
mov
push
stos
adc
adc
int
mov
ret
sbb
pop
lods
ljmp
pop
fmull
or
xchg
jo
push
popf
mov
push
cmpsb
sbb
out
sub
insl
xorb
add
rcrb
ret
insb
dec
ja
repnz
cli
jo
mov
cmc
add
dec
imul
jge
call
push
lock
fcompl
ss
add
daa
lods
cli
outsl
adc
pushl
mov
imul
js
sti
gs
and
xchg
adc
jp,pt
inc
or
add
jle
dec
or
insb
pop
test
leave
adc
push
pushf
push
mov
mov
inc
jb
xor
inc
out
mov
je
or
cmp
cwtl
jg
jo
sbb
inc
mov
mov
and
dec
or
adc
mov
sub
lock
jmp
inc
rorb
out
in
fs
mov
sbb
bound
call
js
sbb
scas
sbb
add
inc
sub
push
sub
pushf
outsb
movsl
decl
adc
inc
cmp
mov
clc
ljmp
pusha
xor
cmc
lea
insb
jl
mov
jmp
add
insl
inc
sbb
or
das
or
shl
fadd
stos
or
or
lods
in
dec
mov
mov
hlt
ljmp
jbe
jo
xchg
sub
jns
or
xor
lret
jnp
xorl
push
or
push
std
pop
sub
icebp
pop
jmp
hlt
xchg
or
fimull
inc
stos
ljmp
dec
mov
shrb
push
stos
lret
or
or
dec
add
mov
incl
mov
divb
aas
bound
iret
cmc
mov
pop
icebp
add
fs
jae
pushf
xchg
cmc
dec
adc
push
cld
ljmp
push
fwait
in
push
jno
mov
repnz
movsl
or
add
imulb
bound
and
add
mov
call
sbbb
sub
cli
in
pusha
arpl
push
ljmp
repz
cmp
fdivs
enter
movsl
shll
loop
orl
pushl
push
aaa
ljmp
sbb
out
sbb
xchg
clc
lcall
test
sbb
mov
fsts
inc
lods
mov
call
lret
enter
imul
pop
aad
movsb
jo
repnz
xchg
fisubrl
jo
decl
add
push
push
xor
add
out
mov
fstp
add
pusha
cmp
lea
pushl
mov
and
aaa
mov
pushf
scas
pop
out
lods
mov
jle
jne
push
out
pop
pop
in
sti
jl
insb
mov
dec
mov
notl
inc
aas
stc
mov
aad
adc
mov
call
sahf
mov
fistpl
mov
inc
lcall
out
dec
or
add
lret
jns
movsb
add
cs
sahf
ljmp
call
sbb
mov
xchg
lret
and
cmpsl
popf
push
mov
loop
and
sbb
fyl2xp1
loope
dec
shl
add
sbb
mov
push
jne
jo
jge
stos
push
lea
lahf
push
sarl
stos
lahf
jmp
cmpsb
in
push
cmp
push
xor
test
ds
pushl
pusha
xor
test
int
push
or
dec
and
aas
push
pushf
daa
cmp
fdivrp
fildll
out
shl
mov
stos
in
test
adc
aam
ljmp
fistps
fistl
push
stos
ficompl
nop
sub
lock
stc
hlt
inc
incl
mov
fs
pusha
popf
push
xor
int3
cmp
jle
and
pop
jg
addr16
cmp
add
add
mov
outsb
jecxz
test
loopne
cmpsl
push
inc
aas
idiv
incl
or
fwait
jae
pop
push
cmc
xchg
sarl
cmpsb
sbb
sub
cld
sahf
aas
ja
lret
jmp
inc
jle
sbb
cmp
lcall
push
call
sbb
rorl
loop
bnd
xor
xlat
add
lds
mov
mov
adc
jp
jns
jno
orb
mov
pop
sahf
pushl
push
mov
dec
lahf
dec
mov
popf
mov
jnp
cmpsb
pop
jbe
lret
or
clc
mov
call
push
lcall
xor
or
lea
in
dec
add
push
adc
xor
mov
fcomi
ljmp
jne
adc
mov
ret
test
fwait
sbb
xchg
xchg
jg
mov
add
test
call
test
xor
notl
sbb
sti
fcomip
sub
jmp
jg
or
clc
pushl
movsl
lcall
jl
ja
jo
std
add
incb
xor
out
push
or
add
outsl
in
dec
lret
xor
xor
popf
fbstp
mov
inc
xchg
sub
jg
test
aam
push
xor
pop
cmp
xchg
mov
mov
push
mov
jmp
repnz
in
jo
pop
stos
mov
mov
mov
lods
popa
cs
fnstenv
incl
dec
ret
lret
jb
adc
or
push
stos
ds
xor
jle
ret
mov
call
cmc
inc
xor
in
adc
sbb
fstl
push
pop
push
mov
lcall
ljmp
in
mov
or
add
jb
in
xchg
cmpsb
int
les
sbb
cld
adc
lret
shlb
imul
incb
mull
out
pusha
nop
jmp
sbb
movsl
push
ss
incb
and
jnp
out
loop
and
cmp
decl
sub
add
shrb
ds
cmp
pop
cmp
das
cmp
ljmp
jmp
mov
push
push
mov
xlat
sahf
sar
adc
mov
mov
cmc
add
pop
iret
mov
xchg
pop
mov
outsl
loop
mov
xchg
push
aaa
push
add
popa
ljmp
cli
pushl
aaa
aad
popa
ss
mov
sub
stc
into
hlt
and
inc
loopne
cld
aam
inc
jae
jmp
sarb
int3
inc
int3
inc
out
mov
inc
mov
mov
jp
inc
hlt
lock
jns
test
arpl
or
das
loop
jmp
hlt
fdivs
cli
push
mov
sti
cld
in
ret
push
xor
cmpsl
mov
xor
repz
imul
dec
adc
pop
xchg
cmp
insl
ds
dec
call
jbe
xor
test
inc
cli
incl
push
imul
push
jbe
adc
dec
in
arpl
push
fs
rorb
jo
cmc
out
aam
pop
adcb
es
jg
jg
xor
mov
pop
mov
xchg
gs
adc
and
xor
fcomip
ljmp
jl
push
shrl
xchg
loopne
sbb
jnp
push
and
lcall
pop
jne
pop
jne
out
mov
test
mov
es
ljmp
push
cmpl
add
icebp
or
lds
out
movl
add
scas
sahf
enter
push
cwtl
push
or
imul
pop
inc
push
out
sub
mov
push
pop
cmp
xchg
ja
mov
cwtl
rcll
inc
dec
call
repz
xlat
fwait
lahf
xor
cmp
sbb
fisubl
and
jmp
decl
div
sbb
cmpb
mov
push
jns
mov
imul
in
push
ret
jg
orb
call
pop
mov
mov
jge
and
enter
ljmp
sbb
jmp
insl
dec
mov
dec
insl
pushf
stc
pop
shld
es
mov
jmp
pop
in
and
lcall
sub
ja
adc
lods
stos
ss
and
lcall
xor
add
popf
adc
jle,pn
scas
cltd
pusha
dec
int3
xlat
mov
jo
push
in
ljmp
mov
push
sbb
insb
sbb
pop
aaa
dec
and
sbb
jmp
mov
ja
sbb
test
mov
push
incl
daa
bound
les
fs
xor
ret
roll
jg
pushl
and
or
and
pop
rol
mov
cmp
rol
movsb
shll
jp
js
lcall
dec
sahf
out
in
cmp
xchg
rol
movsb
mov
divb
xchg
jae
inc
mov
mov
lcall
sub
dec
idivl
adc
jecxz
mov
sub
lahf
sar
lcall
in
scas
ja
cmc
iret
push
pop
push
add
and
cli
aad
xchg
mov
inc
stos
dec
cmp
decl
ss
jnp
cs
cwtl
and
out
mov
pop
into
push
test
inc
sub
inc
loopne
cmpsb
mulb
jo
sti
stc
jp
mov
in
out
push
std
ljmp
lea
xchg
js
scas
sub
fldenv
arpl
mov
jecxz
adc
mov
dec
lcall
test
popl
push
fistpl
test
xchg
imul
fildll
hlt
cli
jbe
push
cwtl
repz
lcall
mov
mov
sarb
popa
push
xor
jecxz
and
sbb
rorl
xor
incl
cld
inc
out
mov
jl
int3
in
sub
bound
pop
sbb
cs
decl
jge
test
mov
data16
adc
or
ljmp
xor
das
push
and
jae
mov
sub
or
loop
scas
pop
lcall
call
push
jbe
pushf
push
and
push
lods
sub
loope
mov
push
sub
nop
ss
sub
push
je
jg,pn
jmp
out
dec
jmp
aas
sar
pushl
mov
xorb
pop
dec
sbb
sub
or
out
pop
mov
sbb
mov
decl
mov
pop
shl
dec
lods
rcrb
daa
xchg
sbb
imul
pop
and
jmp
scas
clc
fdivs
js
inc
out
mov
xchg
lcall
inc
mov
sbb
subb
pop
sub
mov
dec
call
mov
call
mov
xchg
aad
inc
cwtl
inc
insl
xlat
jge
ja
push
in
inc
lea
mov
mov
imul
lcall
jg,pt
js
les
test
or
xor
add
shll
loope
call
and
sub
push
and
cmpb
incl
cld
mov
or
cli
push
xor
fdivl
mov
pop
mov
ljmp
xchg
jmp
xor
xchg
sarb
js
enter
xor
ljmp
mov
adc
pop
andb
jbe
push
xchg
inc
xchg
sahf
bndldx
dec
lcall
pushl
jbe
dec
inc
adc
sti
in
aaa
pop
sub
jb
mov
lcall
jp
jbe
xchg
adc
cmp
movsl
inc
out
sarl
call
inc
addr16
adc
push
fiaddl
jge
loopne
test
mov
cmp
popa
rorb
mov
jmp
clc
or
jne
lcall
pop
mov
add
fucom
xchg
pop
push
icebp
adc
jle
xchg
jae
and
mov
dec
call
loopne
lcall
push
sub
aaa
sahf
lods
pusha
xchg
fmul
inc
call
dec
out
xor
push
arpl
pop
scas
out
cmp
lcall
call
xchg
cs
xchg
xchg
hlt
add
push
arpl
dec
pop
adc
jne
ja
push
ljmp
test
imul
sub
adc
xchg
inc
leave
movsb
sbb
mov
sub
stos
cld
pushl
adc
rclb
dec
adc
mov
mov
cmpsl
dec
pop
jl
std
jg
and
jl
mov
jbe
outsl
scas
cli
mov
call
jle
mov
int3
imul
sub
cs
pop
leave
enter
xor
cli
jmp
and
mov
jmp
dec
xor
sub
lret
hlt
mov
push
dec
call
push
dec
and
sbb
pop
and
xor
call
std
call
into
js
sub
xchg
adcl
add
sbb
inc
dec
jle
sub
dec
leave
js
fwait
ljmp
mov
outsb
adc
sbb
daa
fisttps
addl
ljmp
shll
sbbl
fistpl
jp
pop
push
push
mov
incl
xchg
nop
jo
scas
out
sbb
data16
shlb
jmp
fisubrl
xor
adc
out
jecxz
lods
adc
daa
movsb
xor
push
mov
lcall
inc
loopne
loopne
stos
pop
adc
mov
jg
dec
add
add
movsb
fdivl
mov
dec
xor
sahf
mov
jnp
push
pusha
rorl
hlt
dec
push
pushf
mov
aas
call
repz
ret
pop
push
and
icebp
cmp
cmp
sbb
cmp
enter
jne
popf
lahf
dec
mov
fisubl
je
imul
ror
jb
lahf
loope
or
pop
lret
jg
or
iret
pop
jmp
outsb
push
ja
shl
mov
int
rclb
dec
jge
fadds
mov
popa
xchg
xchg
addr16
mov
fwait
xor
push
sub
xlat
lds
gs
adc
in
mov
pop
es
decl
push
jle
mulb
push
lcall
popa
cmpsl
xor
cmc
xor
out
ljmp
enter
faddl
add
xchg
jbe
cmp
or
gs
pop
leave
gs
adc
pushl
pushl
fstps
ds
test
mov
ss
daa
mov
mov
frstor
cmp
lods
stos
xor
push
sbbb
arpl
aad
popl
imul
arpl
pop
aaa
lds
call
adc
dec
sbb
xor
es
repz
aam
out
or
pushl
push
inc
shr
inc
or
jo
popa
insb
sbb
stos
jge
inc
mov
xchg
or
ljmp
cli
scas
ds
fcomps
mov
icebp
xor
fidivl
or
stos
push
pop
ljmp
mov
push
xchg
pushl
mov
js
lock
mov
mov
mov
push
scas
imul
incl
loop
lahf
mov
push
jl
in
cmp
mov
mov
lock
pushl
addr16
test
push
xchg
adc
gs
xchg
mov
in
decl
xchg
leave
shl
rcrb
cmp
jge
jmp
andl
and
mov
mov
mov
add
enter
and
fbld
lods
cmc
loope
xchg
roll
mov
test
jg
dec
xchg
aas
imul
lcall
cmpsl
pushf
movsb
push
test
das
mov
pusha
jne
or
mov
mov
jmp
loopne
stos
adc
jmp
outsl
mov
pushl
mov
xor
test
add
cmpsl
xchg
lds
out
inc
jecxz
stos
shl
mov
pop
repnz
bound
mov
sahf
adc
xchg
cmp
lcall
jne
and
in
pushl
push
mov
mov
mov
mov
lahf
in
call
dec
sub
mov
jge
hlt
lea
fcompl
mov
stc
mov
shlb
call
mov
stc
jbe
inc
sahf
nop
xchg
jnp
call
incl
mov
push
mov
adc
mov
pop
sub
inc
fdivrl
dec
jns
ljmp
sbb
sbb
push
jbe
inc
das
jnp
fdivrl
jmp
sahf
stc
insl
addr16
loope
cmp
roll
cltd
cli
mov
loopne
ljmp
adc
sbb
mov
xor
ds
add
xor
jmp
mov
inc
int
bound
adc
lods
mov
sub
stos
dec
out
jmp
mov
cmp
fidivrl
icebp
testb
cwtl
rcrb
xor
ljmp
in
or
gs
push
nop
ds
stos
pop
je
jmp
sbb
push
stc
pop
mov
call
inc
sahf
pop
pop
loopne
lahf
and
sahf
mov
cmp
mov
shl
cmp
pop
adc
incl
pop
not
ljmp
or
std
mov
lock
insl
aaa
cmp
shrb
mov
jge
lods
jecxz
mov
nop
fisubl
sub
lcall
test
lods
in
aam
add
mov
pop
xor
sbb
jle
push
call
out
sub
sub
pop
jbe
ret
pop
sub
das
xor
in
mov
lcall
dec
push
test
cli
repz
cmpsl
je
pop
xchg
repz
cwtl
xlat
dec
iret
xacquire
pop
out
ljmp
movsl
adc
and
arpl
push
dec
in
orl
mov
sbb
neg
call
add
jle
jno
mov
xor
or
inc
js
mov
adc
lar
mov
mov
scas
mov
or
clc
aad
cmpb
jmp
popf
mov
gs
pop
lods
sub
call
cld
adc
getsec
data16
int
and
negb
call
stos
fiadds
hlt
scas
cli
decb
pop
pop
scas
mov
rcll
pop
ljmp
lock
cmp
pushl
add
fbstp
cmp
xchg
fs
clc
addr16
pop
dec
pop
inc
pop
rolb
ljmp
dec
jecxz
jecxz
mov
push
int
ljmp
cmp
inc
push
imul
lahf
sub
test
cmp
xor
sahf
pop
int
dec
xchg
inc
cmp
sub
mov
das
pop
inc
mov
mov
mov
mov
xchg
data16
jmp
mov
sub
mov
mov
frndint
sub
inc
lods
leave
incl
stos
and
and
sub
fcmovnbe
jno
cmp
loopne
aad
sub
sbb
popa
mov
shrb
and
push
in
adc
xchg
pop
mov
cmp
sbb
push
test
xor
xor
add
and
outsb
pushl
dec
subb
aas
decl
scas
mov
mov
leave
sti
mov
aad
popf
push
rcl
call
adc
test
cmp
xor
dec
cmp
aam
xchg
lret
sub
add
and
cmpsl
icebp
mov
pop
or
enter
pop
or
outsl
clc
jb
dec
mov
aam
push
in
data16
jo
mov
es
ja
icebp
leave
inc
dec
or
movsl
adc
sbb
dec
jmp
push
out
pop
cwtl
add
sub
aad
lcall
outsl
jge
ss
push
push
test
lcall
std
in
pop
cltd
mov
jnp
popa
cmp
andl
inc
fisubrl
out
shlb
cwtl
mov
in
std
outsl
xor
push
aam
mov
pop
cltd
ret
jg
call
jbe
mov
out
fimuls
xchg
mov
pop
dec
rcll
mov
cli
mov
jmp
pop
jnp
pop
xchg
scas
add
es
not
popa
sahf
xchg
cmp
scas
icebp
stc
jno
pop
xchg
ljmp
aas
mov
test
and
xchg
sarl
sub
sbb
icebp
xor
push
ret
sar
cmp
xlat
mov
in
add
cmc
lea
jnp
pusha
mov
popa
push
lcall
xor
cmp
xor
pop
mov
dec
out
or
mov
sbb
or
jmp
fiadds
popa
idivl
out
mov
mov
sub
fisubrs
jle
add
cmp
call
mov
jecxz
sub
mov
mov
insb
cmp
incl
lods
sbb
test
pusha
loope
pop
or
aad
jl
ret
jmp
xchg
into
and
or
out
decl
adc
loopne
adc
rclb
jns
push
stos
pop
and
decl
push
jg
lcall
pop
rcl
in
and
sub
sbb
mov
jo
pop
ret
ss
outsb
xchg
dec
popa
push
pop
pop
and
mov
mov
decl
sub
jecxz
inc
rol
cmp
aam
or
fistps
dec
call
jb
mov
lds
das
adc
adc
stos
je
lret
mov
lock
or
push
ds
aaa
mov
jl
rcl
ljmp
jg
sbb
mov
enter
je
mov
pop
pop
inc
cmp
scas
mov
lds
insb
mov
push
jns
jbe
decl
shrb
pop
pop
or
mov
out
lods
xchg
mov
aas
lcall
add
mov
inc
loopne
lods
aaa
sbb
in
or
or
add
add
loop
xchg
aam
inc
clc
gs
sub
lcall
sub
idiv
cmp
sub
lcall
stc
or
js
and
incl
push
insl
fwait
xchg
jp
cmp
fsubrl
or
sbb
jecxz
jp
repnz
decl
cmp
fcmove
orb
mov
fistl
ja
mov
fcmovb
dec
scas
dec
pop
inc
mov
pop
push
mov
dec
add
dec
mov
dec
jmp
cmpsb
lahf
pop
in
in
in
or
xorb
xchg
xchg
hlt
or
incb
pushf
mov
xchg
ljmp
adc
jge
xchg
pop
bound
dec
xchg
notl
lahf
xchg
out
sub
jle
fimull
dec
leave
popf
push
xchg
fstl
jmp
mov
xlat
push
cmpsl
xlat
xchg
pop
mov
mov
pop
and
xor
clc
lcall
aas
data16
adc
mov
outsb
call
fldenv
push
aas
fcmove
xchg
sub
pushf
pop
cs
jnp
push
decl
xchg
and
mov
imul
mov
dec
cmpsl
sub
sub
dec
ret
push
mov
sub
mov
ror
das
push
cld
iret
adc
loop
push
lcall
aaa
pop
inc
cmpsb
inc
outsb
cmp
mov
test
nop
cltd
cmpsb
xor
call
push
bnd
mov
and
test
fildl
out
sbb
sahf
xchg
sarl
push
xchg
lcall
or
mov
in
addl
jecxz
lret
ljmp
adc
pop
aas
dec
cmp
add
nop
stos
psadbw
sbb
or
xor
lahf
mov
negl
clc
xchg
test
ret
pop
push
pop
cwtl
sarb
mul
add
xchg
pop
jp
push
popa
pop
inc
aam
ljmp
or
mov
call
jb
adc
xor
in
or
in
mov
inc
dec
call
xor
out
mov
shll
cmpsl
sahf
das
lds
insb
pop
es
pop
dec
shll
les
sbb
lods
push
repnz
ljmp
out
lea
int3
mov
lods
mov
push
int
clc
mov
test
inc
mov
idivl
mov
or
lcall
cmpb
mov
jne
sbb
jne
ss
sbb
pop
cmc
pop
decl
icebp
fimuls
and
insl
xchg
pop
scas
inc
xlat
loope
dec
fs
mov
mov
lret
leave
pop
into
pop
shll
stos
jo
dec
xchg
out
stos
js
pop
fistpll
cmp
dec
ljmp
cli
inc
and
int
loope
test
push
mov
sub
scas
out
ljmp
jb
xchg
xor
xchg
adc
ret
sbb
popa
push
mov
push
push
sbb
es
push
lods
mov
jae
ret
loop
fwait
add
pushl
cmc
xor
hlt
mov
fadds
add
mov
stc
jae
sbb
sar
mov
add
ret
jbe
repz
lret
dec
call
adc
jg
ljmp
sbb
test
xor
add
outsb
fs
sub
mov
xchg
decl
lock
add
jb
and
or
outsb
or
xchg
inc
mov
inc
sub
dec
and
into
xchg
dec
lea
shll
lods
jbe
mov
cmp
cltd
dec
andl
sub
call
sub
lret
cmpsb
movsb
add
dec
addr16
decl
sub
inc
or
lds
adc
push
test
aas
jbe
cltd
inc
cmp
jmp
sbb
iret
add
addr16
fs
nop
push
nop
insb
jle
imul
ffree
adcl
mov
les
incl
call
aam
aad
add
cmp
cmp
clc
add
ficoml
mov
xor
orl
lcall
loopne
cmp
inc
xor
add
mov
and
xor
enter
mov
cmp
clc
ljmp
rolb
push
shrb
jg
dec
cmp
insb
call
ret
mov
je
mov
out
mov
jae
and
rolb
fdivrl
inc
sbb
mov
clc
incl
pop
or
decl
mov
out
mov
cmpsb
data16
test
push
std
xchg
inc
adc
frstor
xor
add
adc
cmpsl
cs
or
cli
sbb
inc
addb
push
aam
std
ljmp
fistpll
out
mov
aaa
jns
int3
rorb
mov
mov
or
mov
rorb
out
pop
mov
jbe
push
lods
std
add
sti
orl
or
dec
leave
repnz
in
push
loop
loop
jecxz
or
incl
stc
jmp
mov
lock
lods
or
inc
and
jle
or
cmc
push
ret
inc
lcall
dec
pop
pusha
jns
cmp
pop
aas
sub
out
add
test
lock
cmpl
mov
inc
pushf
js
test
and
nop
xor
sahf
jl
notl
aad
jl
cmpsb
sarl
push
out
shll
rol
sub
push
sub
ljmp
dec
mov
cs
lahf
push
das
push
lret
stc
or
add
popf
xor
pop
arpl
xor
cmp
inc
es
add
repnz
test
adc
jae
cmc
push
or
faddl
int3
mov
mov
arpl
inc
out
or
cltd
xor
cmp
push
xor
sbb
or
imulb
jns
push
jl
les
jge
pop
hlt
mov
stos
rolb
mov
sbb
and
fbld
ds
sbb
movsl
mov
cmc
and
lcall
dec
cmp
push
cmp
push
pop
push
call
mov
mov
mov
fcompl
call
mov
lret
fisubs
int
jno
xor
jl
cmpsb
dec
inc
jnp
test
inc
sbb
jmp
jb
sbb
outsb
jo
repnz
jo
subl
dec
jno
mov
adcb
dec
adc
ljmp
jecxz
xor
sbb
int3
pushl
mov
arpl
into
cmp
xor
push
into
stos
cmp
dec
mov
jl
insb
incl
sub
arpl
repz
shlb
mov
or
data16
inc
or
jle
aam
mov
fcmovnu
jg
inc
imul
arpl
test
insb
ljmp
sub
pushl
out
out
inc
addl
scas
push
xchg
xlat
inc
and
bound
insl
andl
int3
cmp
outsl
sti
cld
pushl
sub
lock
mov
dec
pusha
aad
adc
sub
mov
add
push
sti
inc
jmp
push
ds
sub
add
imul
cld
sub
and
sbb
jmp
out
dec
sub
jecxz
imul
dec
test
stos
mov
ret
fidivrs
cmp
out
add
dec
cmp
adc
outsl
lcall
call
in
mov
push
sbb
pop
pop
loope
lods
jmp
addl
inc
incl
xchg
imul
lds
mov
dec
test
push
repz
jl
sub
sbb
fcomip
dec
add
inc
cld
sub
cwtl
dec
ret
mov
adc
loopne
push
dec
clc
lcall
out
pop
test
or
push
jecxz
dec
lahf
mov
imul
int3
repz
imul
call
pop
out
les
mov
bound
incl
jbe
mov
ficoms
ret
adc
fcoms
pop
loopne
sbb
jmp
int3
lahf
sub
lds
enter
mov
and
cmp
jmp
sub
loopne
loope
mov
sti
jns
add
fistps
gs
mov
leave
mov
mov
insb
mov
addr16
mov
pushl
incl
mov
fidivrl
daa
add
fidivs
pop
pop
aaa
rclb
sbb
dec
mov
movsl
dec
mov
push
stos
or
outsb
sbb
cmp
shrb
loop
not
inc
mov
call
mov
sub
cltd
dec
loop
les
fsubs
pushl
stos
adc
divl
not
int
or
mov
adc
pushl
mov
ficoml
out
lahf
fsubs
in
mov
pop
xor
loope
xchg
inc
cmpsb
icebp
in
ss
lcall
inc
loope
xchg
scas
ds
ror
xchg
cmp
add
xchg
aam
cmp
ja
jg
movsb
mov
adc
push
stos
arpl
push
lods
arpl
movsb
arpl
in
test
xchg
inc
mov
jmp
cmp
mov
pushf
mov
adc
mov
popa
fdivl
stos
in
mov
fdivs
or
pop
jnp
pop
pop
popa
pop
bound
ja
add
mov
jg
jecxz
mov
pop
mov
pop
shl
dec
dec
pop
and
cmp
es
nop
mov
orl
push
std
and
mov
jmp
loopne
jl
push
rolb
std
pushl
sti
hlt
pop
and
imul
das
sub
sub
loop
pop
and
mov
xor
add
cld
jg
mov
mov
std
fcomp
or
and
mov
dec
imul
or
push
out
clc
inc
test
xchg
dec
movsl
xchg
lahf
in
int3
bnd
ret
dec
sbb
jb
mov
sbb
mov
cmp
and
xchg
pop
mov
and
cld
xor
call
andb
sub
sub
cs
mov
jnp
cld
mov
mov
mov
push
fstpl
mov
inc
jmp
daa
cmp
fldcw
jnp
jg
and
adc
jmp
jp
lret
fcompl
mov
fs
divb
jbe,pn
cld
pushf
or
lcall
push
push
jmp
inc
loopne
and
xchg
idivb
mov
sti
mov
push
mov
jp
popf
cld
aaa
cld
lret
repz
and
cwtl
add
inc
cmp
cmc
mov
cld
mov
mov
pop
push
dec
adc
decl
pop
imul
fdivs
lods
jns
fcmovnb
ror
aas
sar
shlb
daa
es
lcall
insb
movsb
int3
pop
jbe
inc
sbb
pop
jb
repz
dec
sbb
mov
adc
push
adc
mov
aas
loope,pn
pop
cld
int
in
fbstp
iret
inc
loopne
sbb
enter
ljmp
iret
loop
lcall
pop
loopne
repnz
xor
xor
sbb
ret
fbstp
mov
jp
or
xchg
fcomip
incl
xchg
pop
mov
bnd
and
clc
icebp
jo
add
xchg
test
jecxz
mov
cmpsl
in
out
inc
push
cmp
es
push
ss
push
scas
push
dec
add
das
or
out
outsb
lock
jg
popf
push
fdivp
cmp
jecxz
and
out
nop
and
scas
mov
inc
push
adc
rolb
adc
movsl
push
mov
in
add
pop
sbb
leave
test
pushl
test
inc
stos
add
stos
mov
outsl
scas
in
imul
cmp
jns
push
dec
rorb
lcall
inc
inc
imul
dec
arpl
push
adc
push
loope
arpl
push
cld
aaa
push
lret
add
test
and
cld
repnz
pushl
push
nop
mov
or
out
outsl
cmp
mov
mov
jmp
adc
add
nop
imul
sub
dec
pop
daa
xor
and
jne
hlt
stos
lcall
in
sbb
pop
xchg
and
in
das
es
pop
xor
and
jmp
pop
inc
inc
mov
daa
je
or
pushf
fcmovnu
in
xchg
addb
jns
out
cmp
cmp
popa
icebp
shrb
cltd
std
dec
add
cmp
and
jp
jg
or
and
pop
fsts
jle
xor
pop
out
jb
popa
sahf
jle
int3
cmp
ret
jecxz
xor
adc
lock
movsl
inc
insb
nop
lret
adc
repz
ficompl
or
push
repnz
adc
lods
leave
sub
push
loopne
fdivp
inc
mov
movsb
mov
jnp
into
dec
in
cmp
loopne
idiv
and
das
mov
push
addr16
aad
pop
xchg
out
lahf
push
cmp
sub
int
push
clc
cli
aas
iret
jg
xchg
nop
loope
out
mov
rorb
or
sub
push
xchg
ss
ds
sbb
sti
leave
sbb
jg
ljmp
and
xchg
jp
or
js
insb
into
adc
insl
or
ljmp
and
ret
jp
adc
jno
aam
sbb
rcl
xor
jl
sub
or
jae
shlb
insl
hlt
movsl
aaa
mov
jl
jmp
clc
jnp
insl
jnp
mov
ljmp
push
outsl
adcb
push
sbb
decl
insb
jmp
push
fbstp
movsl
xchg
mov
mov
inc
pop
pushf
ret
jmp
mov
mov
sub
pop
mov
ret
fistl
xchg
mov
test
lcall
test
push
jno
or
sbb
push
push
out
jno
fwait
push
orb
jmp
fstl
adcb
sbb
pop
insl
add
pop
cli
xchg
int3
cs
xor
xchg
pop
enter
jmp
cmp
jbe
jbe
xor
and
out
repnz
mov
incl
dec
adc
adc
xchg
sbb
ret
sbb
ja
rorb
mov
leave
fstl
mov
cli
ss
call
sbb
dec
cld
jmp
push
ror
lcall
daa
push
lock
lcall
mov
dec
dec
sti
repz
icebp
fnstcw
push
lss
add
mov
xchg
inc
mov
fcoml
insb
mov
adcl
or
iret
sub
mov
jns
sbb
nop
push
insb
fcoml
in
arpl
jmp
adc
lret
nop
aas
push
call
pop
xchg
mov
int3
dec
je
orb
mov
incl
or
imul
ficompl
xor
cs
cmpsb
insb
sti
lcall
inc
ficomps
jnp
and
sub
std
fidivrs
imul
mov
mov
sti
cmp
mov
push
stc
mov
outsb
add
jg
jle
js
inc
xor
shr
inc
xchg
sub
cmpsb
imul
jbe
dec
out
clc
cmp
std
adc
xchg
lds
dec
push
pop
ss
lods
out
xchg
idivb
shrb
sti
sahf
enter
cld
decl
pop
idivl
pop
mov
outsl
addr16
sub
loop
lods
mov
pushf
lcall
adc
push
pop
int3
out
push
bound
jns
lock
scas
ret
out
mov
test
incl
call
das
je
and
dec
fsubl
mov
sbb
popf
sub
add
jp
adc
xchg
cmp
pop
rdpmc
cmp
jg
lcall
or
jp
jmp
xchg
dec
jne
sub
pop
aas
fisttpl
adc
ja
inc
loope
push
jno
bound
jmp
movsl
push
xor
bound
and
jnp
fdivrs
mov
fdivrl
add
imul
clc
ljmp
mov
jo,pn
in
sub
popa
cmp
inc
and
lods
adc
movsb
dec
es
add
out
adc
mov
mov
mov
cld
imull
aad
adc
das
sbb
xor
cmpsb
les
outsb
jmp
jg
icebp
and
xor
outsb
xor
insb
cmp
cmp
add
jecxz
mov
mov
sub
arpl
jo
movsl
repnz
sbb
popa
iret
or
fcmovnbe
test
or
cltd
outsl
pop
addb
inc
cltd
inc
xchg
std
pushl
clc
jecxz
push
xchg
inc
add
std
scas
xchg
test
and
xchg
xor
data16
pop
rcr
out
fcmovnbe
mov
cmpsl
pusha
aas
mov
lock
xor
stc
xor
push
cmpsb
pusha
cmp
in
ds
int
sarl
fcoml
lcall
ljmp
mov
push
or
xor
icebp
pop
popa
dec
repz
decl
icebp
les
sarl
add
jnp
mov
sbb
adc
clc
incl
and
adc
push
add
xlat
xchg
outsb
xor
pop
stos
push
decl
adc
or
xchg
lahf
js
mov
decl
icebp
pop
cmp
out
sti
sub
cs
mov
lea
lcall
cld
fdivr
les
arpl
and
xchg
repnz
jmp
fs
aad
inc
shll
imul
jbe
lcall
in
dec
lahf
xor
call
int
jle
ja
cmpsl
ds
sub
add
cli
sbb
add
inc
aas
fsubrs
pop
cmp
je
push
cmpsl
lea
ds
inc
mov
sar
pop
std
pushl
xchg
dec
stos
mov
xchg
pop
insl
cmp
add
into
cmp
in
or
jns
inc
mov
stc
sbb
repnz
cmp
push
and
pop
and
push
inc
xor
flds
lea
pop
call
or
inc
pop
jp
pop
sub
push
push
data16
jns
mov
loope
add
jp
jmp
lock
jnp
mov
call
inc
or
iret
mov
es
shlb
pop
leave
popa
xchg
fwait
pop
es
cmp
lret
xor
mov
decl
or
sbbl
jle
stos
scas
mov
pop
cmpsb
insl
push
mov
jg
movsl
lods
adc
popa
mov
xor
xchg
jl
lds
xchg
xchg
imul
lock
mov
jl
pop
insb
jo
arpl
and
mov
incl
push
sub
fld
das
mov
push
mov
test
add
jnp
xor
pop
sub
push
outsl
jne
call
daa
dec
inc
xchg
cwtl
inc
mov
pop
mov
lea
shrl
and
addr16
in
cmpsb
mov
out
mov
jbe
call
mov
lods
pushf
pop
inc
sahf
fildl
test
dec
push
data16
pop
cs
xchg
icebp
xchg
out
fcmovnb
jl
adc
sahf
push
jg
add
mov
mov
xchg
push
fdivl
nop
das
test
mov
mov
xchg
or
test
loop
sbb
pop
iret
into
sbb
lods
adc
inc
cmpsb
xor
add
ljmp
jmp
jp
dec
and
mov
jnp
dec
fmull
mov
xchg
add
das
mov
call
mov
or
movsl
fwait
mov
cld
pop
cmpsb
dec
repz
clc
or
pusha
jns
iret
mov
mov
shlb
mov
test
fimull
cmpsb
cld
and
lock
add
cmc
mov
and
mov
int3
xor
cmp
jmp
add
insb
mov
mov
or
sbb
xchg
pop
cld
cli
test
orb
call
std
lea
mov
inc
js
mov
fcomp
imul
ljmp
into
pop
outsl
mov
xlat
push
xchg
adc
xlat
mov
pop
sbb
lds
add
mov
call
fistpl
and
rcll
test
cs
aas
mov
mov
subl
inc
mov
mov
in
pop
xchg
mov
adcb
push
cmp
mov
lcall
mov
and
movsb
adc
inc
inc
xchg
ja
jl
dec
mov
mov
fs
lcall
repz
pop
orl
xchg
mov
mov
jg
aas
movsb
js
sub
imul
mov
adc
jle
xchg
pushl
iret
out
adc
shl
jl
in
leave
mov
scas
or
ljmp
dec
out
ror
call
jle
loope
push
xchg
neg
stos
push
out
sbb
std
pushl
imul
insl
inc
pop
into
dec
sbb
mov
sti
cmp
and
pushf
insl
leave
in
push
ret
call
in
je
lcall
shll
pop
fcmove
lret
jbe
cwtl
pop
outsb
lea
pusha
mov
add
jnp
or
pushl
lcall
inc
pop
ret
es
or
fcomip
pop
call
lahf
test
mov
and
inc
out
or
iret
int3
xchg
add
cli
sbb
lea
dec
push
decl
jae
lret
cwtl
push
inc
mov
icebp
push
sbb
or
dec
push
fcomip
call
adcb
out
push
xchg
movsb
push
push
fisttpll
decl
inc
jnp
popa
aaa
popl
aaa
xchg
test
mov
xchg
push
push
and
mov
lock
idivl
rorb
xor
call
sbb
or
inc
aam
xchg
pop
lret
fs
les
imul
lcall
cmp
pop
lds
iret
push
cmp
xor
cmc
dec
mov
mov
ljmp
pusha
sbb
lods
inc
add
pop
daa
hlt
cmp
pop
dec
movsl
xchg
mov
fiadds
sbb
call
repz
in
call
jp
icebp
sbb
test
or
dec
call
sbbb
cmp
sub
push
insb
adcb
inc
xor
stos
jmp
cmp
out
pusha
mov
push
jnp
fsin
sub
jb
test
rcrb
divb
add
call
shrb
cwtl
sub
out
dec
pusha
in
jo
mov
adc
arpl
and
cmpsl
mov
js
popf
decl
call
imul
dec
sbb
dec
sbb
mov
cmp
cmc
call
ljmp
insb
mov
ret
lock
and
mov
sub
add
clc
jmp
lret
loopne
loopne
push
mov
mov
mov
xor
jmp
ljmp
mov
jecxz
jmp
aam
aam
sub
add
rcl
mov
movsl
adc
jbe
mov
mov
pop
jp
mov
push
enter
jns
pop
sahf
subl
pushf
adc
jg
add
lahf
ret
push
in
enter
push
jg
lock
ljmp
and
outsl
test
imul
in
mov
mov
jmp
ljmp
scas
out
outsb
jb
mov
cwtl
mov
push
pop
scas
push
mov
cwtl
insl
xchg
mov
decl
fwait
insb
out
sahf
jbe
sub
rcrl
push
test
jbe
cld
dec
iret
test
daa
hlt
movsb
push
shl
fcomip
incl
popf
dec
dec
sbb
adc
mov
add
decl
xchg
cltd
incb
cltd
gs
stos
add
stc
mov
inc
adc
dec
cmp
js
and
clc
jmp
ljmp
fmul
int
jmp
xor
pop
dec
inc
jle
jecxz
pop
add
mov
mov
xlat
pop
push
mov
add
hlt
sbb
roll
outsl
push
in
notb
cmp
fmul
jb
add
mov
cwtl
adc
jne
stos
lods
cmp
xor
les
setns
jno
cltd
mov
cmp
aam
cmp
out
leave
xor
mov
out
inc
in
add
lret
mov
mov
rorb
scas
sbb
sbb
adc
push
adc
or
stos
idivb
popf
aaa
dec
xchg
iret
xor
mov
mov
cmc
clc
sbb
pop
mov
ret
aaa
imul
jle
subl
or
daa
cmp
add
pop
and
jae
jmp
insb
push
pushl
insl
sub
aad
inc
sahf
mov
addr16
sub
clc
rolb
add
and
incl
and
sub
leave
and
das
dec
jns
and
or
pop
decl
and
les
test
sbb
mov
dec
sbb
ljmp
lds
mov
and
jecxz
pop
mov
cmc
fisttpll
jne
ss
dec
add
popa
call
xor
pop
mov
push
or
inc
pop
cltd
bound
fldl
jns
test
push
testl
dec
iret
dec
jl
dec
push
aam
xchg
pop
loopne
or
sub
popf
push
xchg
stos
mov
scas
adc
mov
dec
iret
sub
inc
lods
ljmp
leave
sub
movsl
push
js
jle
cmpsb
adc
xchg
mov
jno
pop
pop
aad
call
inc
aaa
xchg
sarl
sahf
pop
push
sbb
xor
jg
xchg
or
iret
out
orl
mov
cwtl
int3
arpl
xlat
les
test
cmp
cld
push
bnd
aas
cld
dec
cwtl
mov
scas
fidivrs
ds
dec
iret
out
mov
jg
bound
mov
lcall
pushl
lahf
inc
dec
pushf
insl
xor
cmp
inc
mov
jne
outsl
dec
scas
lcall
or
dec
pop
les
or
xor
dec
daa
fcompl
jg
jmp
movsb
test
lds
test
xchg
int
push
xor
xchg
clc
cmp
aad
sar
jnp
push
sub
jg
mov
jmp
sub
pop
lock
das
xchg
dec
inc
xor
stc
cmpsb
sahf
out
insb
frstor
lock
xchg
mov
or
das
clc
lcall
xor
cmp
repnz
lcall
sub
sbb
int3
call
test
shl
pop
pop
xchg
and
push
cmpsl
cld
fnsave
inc
jmp
add
stc
xchg
lds
test
addr16
pop
cmp
jg
scas
mov
sub
xor
jae
cmpsb
out
jmp
jge
and
xor
sti
fdivl
dec
jmp
inc
xor
cltd
jns
mov
popf
pop
add
call
pushf
call
add
outsb
shlb
icebp
xchg
cmp
fcompl
xlat
mov
bound
adc
mov
mov
xchg
xchg
jmp
je
and
push
lock
std
enter
incl
pop
xchg
and
sbb
int
pop
inc
lods
push
fsubr
cmpsb
inc
fists
popf
inc
or
pop
pusha
add
mov
adc
les
cwtl
dec
lret
scas
negb
add
incl
xor
jo
cmp
es
push
scas
and
icebp
cmpsl
jbe
mov
and
adc
fbld
mov
push
adc
inc
adc
fsubs
jmp
inc
cmc
add
mov
xor
lods
jge
push
xchg
imul
xchg
or
jg
pushl
pop
fimull
sbb
pop
or
int3
and
push
dec
in
aam
popf
movsl
dec
dec
cmc
mov
jle
mov
mov
push
repz
leave
es
pushl
push
test
ret
mov
pop
lds
fnstsw
sub
push
sbb
jmp
adc
addps
inc
mov
mov
js
shufps
int
and
aad
in
pop
dec
push
sbb
mov
andl
mov
bndldx
push
lahf
push
stos
call
mov
or
sahf
iret
add
push
xor
out
xor
or
jecxz
push
xchg
mov
jmp
push
mov
push
mov
and
fnstcw
rcrb
fcoms
cmp
sub
add
jg
mov
jecxz
outsl
push
jge
sub
and
cld
jo
incl
mov
cmp
add
test
inc
sub
test
cltd
out
call
inc
sbb
mov
sbb
es
ljmp
out
add
mov
aaa
mov
orl
cld
fcmovnb
cmpsl
mov
pusha
stos
pushf
dec
add
cs
dec
dec
fisttpll
std
call
loope
xchg
add
jns
mov
int3
adc
mov
pop
stos
cli
or
lea
fwait
mov
pop
rol
mov
ds
push
cmc
int3
mov
fcmovb
mov
into
mov
add
call
mov
add
push
je
in
xchg
ljmp
pushf
jns
sbb
cmp
sbb
sub
dec
lahf
xorb
sbb
cmp
sbb
jns
loope
and
and
or
jmp
loope
push
fsubs
jne
lcall
int3
lods
fwait
or
and
jg
push
push
mov
sub
inc
mov
push
daa
adc
shl
shl
repz
mov
decl
cld
sub
lret
test
push
and
incl
sub
in
jnp
or
scas
pushf
call
xlat
stc
out
and
jo
incl
addr16
jmp
sub
xchg
adc
lret
cmp
aad
cmp
mov
lea
es
push
bound
sub
pop
ljmp
xorb
ja
fwait
cmp
test
ljmp
xor
push
sbb
xor
stos
jns
jle
push
dec
push
ret
in
mov
outsl
cmp
mov
sti
dec
pushf
pop
sub
pop
stc
cmpsl
jo
cmp
pop
clc
sub
jno
pop
out
decl
inc
icebp
movsl
insb
sub
mov
xchg
das
roll
cmp
mov
lcall
push
loopne
scas
push
add
jne
lods
mov
icebp
adc
loopne
decl
inc
mov
clc
lods
dec
outsb
adc
aaa
add
call
push
scas
lds
les
call
ljmp
jg
mov
dec
jp
pop
mov
sbb
idiv
pop
je
imul
pop
lahf
cmc
lret
pusha
fldenv
call
aad
push
xchg
fs
ds
mov
popa
xchg
hlt
insl
push
dec
std
adc
lods
pop
sbb
shrl
rcl
incl
or
fisubl
in
subl
into
fcos
fisttps
imul
pop
and
fcmovbe
inc
pop
and
lcall
lcall
xchg
testb
dec
cld
xchg
ljmp
fisubrs
pop
out
std
jmp
lock
mov
aaa
mov
or
js
roll
jnp
jl
adc
iret
xchg
mov
pop
mov
negb
out
push
sbb
xor
lahf
incl
inc
or
pop
hlt
ret
ljmp
aaa
fildll
mov
push
lcall
cld
mov
ficompl
push
imul
cmp
ljmp
dec
jnp
or
lea
loopne
cmp
pop
lea
mov
dec
xorb
imul
jae
fadds
pop
jl
stc
mov
sar
mov
ds
nop
jmp
dec
cmp
scas
jae
push
push
and
cmp
push
out
cmc
and
mov
pop
cltd
aad
mov
mov
inc
push
lcall
dec
push
jg
out
iret
cmp
das
and
js
sbb
jl
sahf
cltd
sarl
dec
cs
js
mov
fwait
stc
jmp
mov
mov
xchg
inc
inc
push
inc
fdivl
jo
call
adc
aaa
or
mov
pop
mov
ds
hlt
test
sti
outsl
sbbb
pop
inc
cmp
aaa
push
mov
jmp
dec
cmp
test
mov
mov
pop
mov
mov
cld
scas
decl
popf
in
cmp
insb
mov
sbb
stos
rcrl
ljmp
in
lock
ret
decl
adc
cwtl
stc
ficompl
adc
mov
pop
sub
stos
fs
push
mov
xchg
loope
pop
cmp
ljmp
int
push
and
cmp
jne
xrelease
add
fwait
inc
repnz
cmpsl
mov
inc
push
sbb
push
adc
aas
mov
inc
lcall
out
mov
fidivrl
movsb
xchg
add
xor
rcrb
add
ljmp
ds
or
popf
push
adc
mov
mov
scas
cld
xor
test
jns
adc
sarl
jo
or
inc
jo
mov
std
inc
movsl
fistpll
mov
dec
or
clc
or
xor
jmp
cmp
inc
push
cmpsb
loopne,pn
call
mov
lcall
rorb
fwait
add
pusha
dec
dec
notb
das
imul
cltd
and
mov
ljmp
shlb
es
pushw
gs
ss
sub
fwait
cmp
push
pop
incl
fcmovnbe
xchg
add
jge
out
outsl
pop
loop
ja
inc
sub
aaa
sub
adc
mov
inc
stos
cmp
mov
mov
movsb
mov
mov
push
xlat
pushf
add
pop
xor
pushl
jl
loop
bound
test
sub
int
mov
jmp
sbb
xchg
add
sub
lds
incb
mov
add
sub
dec
push
decl
insb
rcll
out
jl
outsb
mov
out
cwtl
ret
mov
mov
jae
nop
or
scas
inc
push
cmp
movsb
call
xor
cltd
inc
adc
in
mov
daa
push
adc
or
dec
inc
xor
jmp
adc
pusha
loop
push
ljmp
test
cmp
push
and
scas
jp
ljmp
xor
jge
ret
data16
adc
cmp
into
insl
pushf
jecxz
rcl
add
enter
fstpl
push
mov
stos
fs
push
mov
negl
xor
lcall
mov
ret
jbe
scas
sbb
xchg
push
lahf
ret
frstor
cmp
aad
sahf
call
in
xchg
push
mov
movsl
pop
aad
cmp
inc
fiaddl
cs
stos
movsl
push
sbb
ljmp
mov
loope
les
lods
pop
jns
ficomps
lcall
inc
test
mov
xor
fildl
incl
add
sbb
xor
lods
imul
or
jg
mov
cmp
mov
pushf
imul
cmpb
dec
push
int3
call
or
shlb
push
or
hlt
icebp
sub
test
aad
aam
idiv
pop
add
push
xor
and
out
mov
inc
cmp
fwait
lret
outsl
ss
lret
jmp
jmp
or
scas
sbb
or
lea
movb
out
or
mov
decl
jle
sbb
in
adc
call
popf
fisubs
fisubrs
incl
or
jae
mov
push
or
out
xor
incl
lcall
rol
out
xchg
imul
cmp
andl
test
ss
jnp
lcall
decb
or
and
cmp
and
popa
stos
mov
sbb
mov
inc
mov
mov
mov
roll
test
mov
inc
ss
push
pop
cmp
test
clc
inc
inc
filds
mov
cmp
mov
xor
call
mov
pop
and
dec
sahf
xchg
fnsave
cltd
cwtl
repz
mov
xor
insb
decl
mov
push
push
in
lret
lods
js
ss
into
in
mov
cmp
sub
cmp
xor
cltd
push
pop
daa
popl
in
leave
repnz
das
hlt
or
icebp
inc
cmp
cld
and
mov
xchg
xchg
inc
aas
sub
push
jo
ljmp
dec
push
incl
mov
out
daa
outsb
enter
cwtl
mov
push
push
sbb
cmp
push
scas
test
fdivrl
pop
test
cmc
push
ljmp
sub
jmp
pop
rorb
test
and
incl
in
idivl
movsl
rcll
sub
and
or
mov
popa
into
int3
dec
sbb
pop
and
mov
decl
pop
push
aam
mov
rcr
imul
push
jecxz
insb
xor
mov
adc
call
push
hlt
int
sti
imul
outsb
lcall
adc
mov
das
xor
sbb
pop
shlb
js
mov
jne
and
insb
or
or
inc
enter
dec
dec
or
or
decl
sti
mov
pop
mov
jne
lock
and
lcall
sahf
stos
cmp
pop
hlt
out
adc
jno
jno
clc
rol
pusha
test
loope
ljmp
iret
cmp
jns
call
mov
ljmp
adc
movsl
gs
repnz
xor
push
cmp
cmp
ljmp
adc
fdiv
jl
fwait
out
dec
fdivl
enter
mov
inc
add
call
fildl
mov
adc
mov
test
push
orl
pushf
inc
adc
and
push
mov
in
pop
pop
lds
dec
mov
cmc
out
and
fsubrp
xorb
mov
jbe
incl
popa
xchg
adc
mov
xchg
inc
repnz
loop
inc
sub
loope
rolb
push
adcb
jb
cmc
ljmp
push
or
sub
es
iret
not
int3
fildll
rorl
jae
mov
and
pop
lea
xchg
mov
sbb
pop
jns
sarb
hlt
mov
rorb
cwtl
inc
lock
add
shl
cmp
incl
adc
leave
jo
xchg
cltd
repnz
mov
ljmp
dec
add
mov
sub
movsl
add
outsb
loopne
jbe
es
ret
mov
jle
cmp
push
pop
lds
inc
add
mov
sbb
mov
xchg
repnz
mov
jg
mov
sub
lods
lret
aaa
inc
in
add
idivl
fdivl
lcall
xor
sbb
fs
in
pop
xchg
cmp
add
cmp
call
pop
jb
sub
xor
jo
and
ljmp
adc
shr
fildll
int
pushl
or
ljmp
pop
push
jne
std
dec
cmp
test
dec
jmp
push
fs
ret
lret
jmp
xor
pop
add
clc
xor
call
mov
fistl
dec
les
pushl
mov
out
shlb
lock
adc
out
loop
loope
jns
xchg
mov
xor
fstpl
cli
ljmp
mov
lret
xor
jnp
shlb
popa
sbb
jne
or
fbld
adc
int3
mov
jl
sub
mov
mov
loope
sar
cmp
mov
xor
and
mov
mov
inc
or
mov
adc
in
jg
movsb
imul
xchg
cltd
jle
dec
mov
aam
pop
sbb
jmp
call
cs
add
jne
mov
push
jns
out
in
or
or
pushl
addr16
imul
lock
lret
pop
mov
jg
dec
xchg
jecxz
decl
push
insb
cmpsb
jno
sub
rcl
nop
lahf
stc
hlt
dec
push
xchg
pop
out
mov
cmp
clc
mov
push
xchg
mov
aaa
mov
mov
jb
push
int
das
or
test
mov
out
cmp
adcb
xor
lcall
imul
sub
cs
push
sub
insb
mov
sub
aaa
cld
ljmp
jmp
cmp
lret
popf
movsb
lahf
or
inc
dec
dec
ret
pop
mov
cltd
lret
outsl
sbb
dec
push
ja
mul
xlat
pusha
xchg
sub
sub
mov
cli
sbb
mov
cmp
lds
addb
ljmp
dec
push
in
loopne
ja
dec
mov
ljmp
andl
cmp
pushl
cmpsl
inc
andl
xchg
adc
cmp
mov
into
push
xchg
cmpsb
dec
push
rcrl
incl
fdivr
fsubp
adc
andl
in
loopne
lods
xor
cmpsl
push
cld
jg
mov
jmp
and
jl
fcomps
sub
aam
and
jp
out
movsb
mov
repz
push
jb
cmp
mov
incl
jne
enter
sub
or
push
xchg
call
mov
jl
jmp
fistpl
mov
dec
imul
sbb
lea
cmc
jg
inc
cmpsb
jge
shrl
sbb
adcb
data16
jmp
and
mov
mov
jae
jno
pop
fwait
nop
mov
cmp
dec
fwait
loop
sbb
push
jge
lcall
outsb
sub
mov
fwait
dec
xor
pop
or
jnp
mov
cmp
pop
pop
push
dec
rorb
lcall
outsb
call
imull
xchg
xchg
cmp
mov
mov
cmc
mov
mov
stos
clc
ja
sar
shlb
sbb
fdivs
divl
jmp
js
mov
das
in
jecxz
xchg
lods
xchg
inc
push
and
fstpl
inc
cmp
adcb
sahf
mov
add
or
imul
cmp
clc
add
dec
sbb
fstl
scas
out
or
adc
xchg
xchg
roll
test
frstor
xchg
fcoml
into
mov
jg
loope
jp
sub
fistpl
sbb
sbbl
adc
xor
push
sbb
int
pop
insl
adc
sub
xchg
or
push
sub
ljmp
mov
jo
or
lods
lock
fld
mov
inc
repz
lret
and
mov
mov
stos
dec
setg
mov
les
outsl
ljmp
popf
loopne
jbe
push
xchg
xchg
fists
jns
pusha
mov
mov
ljmp
inc
xor
jbe
in
ljmp
sub
push
lret
dec
adc
dec
inc
jne
orb
pop
pop
fildl
lcall
sbb
insl
lock
and
shrb
cmpl
sbb
xorb
mov
cmc
mov
inc
cwtl
or
xlat
push
shrl
in
mov
out
mov
push
mov
xor
lock
fcoml
ljmp
push
sbb
sbb
sbb
subb
mov
and
adc
into
outsb
fs
xchg
int3
lcall
pop
and
call
and
daa
add
mov
sub
ss
inc
push
gs
mov
inc
shlb
movsb
es
mov
loop
in
ds
sahf
mov
jb
in
rcrl
mov
popf
lock
pop
pusha
or
fdivrl
and
mov
dec
or
in
fnsave
pop
push
xchg
sar
lock
mov
fadds
orb
dec
mov
xor
inc
or
sarb
cmpsl
jne
sbb
test
lock
popf
test
insb
call
cmpsl
mov
jae
mov
sbb
mov
imul
aaa
or
fbld
call
stos
repnz
inc
inc
sbb
ljmp
cli
es
add
mov
add
add
xorb
add
je
and
lahf
and
mov
and
jae
bound
out
add
icebp
ljmp
fsubr
aas
std
sbb
mov
mov
iret
enter
sbb
fbstp
nop
aad
cs
out
pop
mov
sti
scas
or
insl
push
outsb
rcrb
clc
loope
hlt
lea
jno
mov
mov
outsb
aad
aad
ljmp
cmc
into
pop
jae
push
clc
loopne
cmpsb
mov
ljmp
aas
push
scas
mov
mov
or
and
ljmp
push
dec
xchg
add
xchg
jnp
and
dec
xor
cwtl
xor
std
inc
dec
repz
mov
pop
aaa
mov
xchg
mov
cli
mov
mov
loop
enter
scas
jge
push
lcall
pushl
fistpll
cli
test
xor
das
add
in
jne
stos
mov
rorl
jmp
mov
jb
sti
push
mov
in
mov
adc
aaa
jmp
cli
aaa
xor
jmp
and
aad
in
sbb
xlat
xchg
adc
sub
test
ret
faddl
scas
ret
sub
jb
insl
in
mov
mov
mov
xor
flds
jl
in
icebp
xlat
sbb
lea
lahf
popf
cwtl
mov
lcall
pusha
ficoms
in
mov
test
fidivs
xlat
stos
aaa
mov
cwtl
and
sahf
cmc
hlt
fcmovb
ja
push
aad
addr16
fs
call
call
add
jb
adcl
adc
xchg
pop
adc
mov
adc
push
inc
push
mov
in
sar
ljmp
test
cs
lock
xchg
mov
inc
lock
pusha
shlb
mov
xor
fimuls
pop
das
bound
pop
icebp
xchg
xor
jmp
test
ficoml
jns
fstpl
xchg
pop
fnstsw
mov
cmp
int3
aad
push
dec
fwait
adc
and
cmp
scas
pusha
push
cmp
mov
call
orl
in
test
ret
add
ljmp
dec
xchg
cltd
pop
stos
ljmp
xor
outsl
and
or
sbbl
ljmp
movsl
mov
mov
mov
pusha
or
adc
and
pop
arpl
sarl
xchg
pop
inc
jl
or
mulb
add
shl
add
call
iret
jmp
jb
test
adc
cli
data16
in
call
mov
jmp
in
inc
cld
mov
inc
popa
shrb
xrelease
lahf
arpl
ljmp
into
adc
fdivrs
loop
lahf
aad
jne
insl
pushf
inc
into
mov
lcall
movsb
testl
ret
xlat
movsl
mov
test
jg
orl
or
jmp
iret
sub
and
orl
jae
std
adc
sub
or
dec
pushf
cmp
mulb
das
adc
mov
stos
push
mov
sahf
or
fsubp
adc
pushl
mov
mov
or
mov
repz
xor
inc
jb
mov
pushf
push
out
divl
or
call
push
dec
sub
or
insb
and
push
cld
out
mov
jge
das
cli
incl
and
movsl
or
aad
mov
pop
mov
ljmp
ljmp
cmc
pushl
out
pop
mov
inc
out
js
adc
and
fsubs
sub
jmp
stc
das
and
or
mov
cmp
call
sbb
ljmp
cmc
adcb
jmp
pop
push
pop
sbb
cli
loopne
lret
fcomip
decl
lods
xlat
adc
fcomp
mov
add
inc
mul
das
ljmp
dec
imul
dec
dec
into
xlat
xchg
mov
inc
fldcw
incb
rcrb
pop
or
add
mov
movsb
or
pop
mov
push
push
and
pushf
jg
shlb
stos
loope
mov
bound
lcall
aad
mov
adc
pushl
mov
pushf
pop
dec
xor
cmp
je
pop
filds
jg
pushl
enter
cmp
ja
cmp
xchg
aam
mov
pop
adc
sbb
mov
incl
lods
xor
xor
cmp
arpl
fstpt
movsl
jb
push
in
mov
lock
lcall
popa
mov
push
push
sti
daa
lret
pop
jbe
dec
or
subb
lcall
push
jmp
and
fcoml
pop
in
icebp
push
pop
adc
xchg
cli
dec
incl
ja
jge
jne
clc
inc
cmp
mov
ljmp
inc
loopne
jp
incl
dec
xchg
ret
or
cmp
sbb
cwtl
icebp
push
pop
cmc
pop
addb
xchg
pop
inc
inc
jnp
sub
outsb
mov
lcall
mov
xor
and
inc
jo
cmpl
jecxz
jg
sbb
cli
lcall
lock
cmp
or
or
lods
fwait
add
cmp
lcall
lret
push
dec
push
hlt
ret
pop
pusha
dec
mov
imul
mov
jle
in
incl
jl
cmpb
pop
pop
mov
pusha
sub
xor
cmpsb
jbe
dec
dec
mov
xor
pop
int3
adc
fdivr
sub
imul
pop
js
inc
push
imulb
and
jae
movsb
and
xor
out
and
pusha
fucomi
sbb
je
adc
outsl
cli
jl
shlb
fwait
and
push
out
in
cmp
mov
fisttps
jns
test
scas
orl
push
cmp
and
cld
adc
popf
inc
push
and
pop
loope
incl
pop
sub
cs
jnp
pop
lock
mov
enter
jg
call
rcll
add
test
cmpsb
jns
fwait
pop
shrl
lea
dec
or
std
mov
jmp
andl
cwtl
rcrl
sub
test
lret
cmp
jbe
inc
mov
xchg
mov
xchg
xchg
pop
lret
and
mov
mov
mov
outsl
cmp
jg
dec
inc
push
mov
andb
and
mov
fs
jg
mov
jg
test
ljmp
xor
add
das
or
icebp
cmc
mov
das
sbb
mov
enter
daa
mov
mov
decl
lds
imul
scas
jno
loop
sub
adc
push
pop
cmpsb
push
jmp
dec
out
pop
xor
shlb
shlb
je
pop
jecxz
push
xchg
xchg
out
dec
pop
xchg
aad
fsubs
add
sbb
in
js
push
and
pop
inc
push
lock
popa
sbb
out
repnz
fcomip
incl
xchg
sbb
rolb
add
adc
xor
clc
incl
jg
push
fcompl
cmpsb
clc
mov
popl
push
mov
mov
ljmp
pop
je
cmp
loope
push
dec
sub
inc
xchg
xor
fmull
in
fists
jmp
lock
sbb
frstor
out
aad
inc
fistl
imul
ficompl
mov
ficompl
dec
dec
add
jl
adc
inc
xchg
movsb
enter
add
pusha
inc
inc
clc
push
sub
jae
and
call
stc
in
loop
mov
push
mov
mov
sub
jb
mov
testb
and
sarl
mov
shrb
pop
mov
call
dec
and
insl
iret
mov
mov
mov
xchg
fs
or
icebp
and
xchg
mov
popf
jb
pop
and
mov
daa
pop
pop
xor
lcall
jle
push
lret
test
mov
insl
pop
clc
xchg
mov
das
fucomip
push
lret
push
arpl
lds
pusha
mov
scas
inc
sub
mov
sbb
mov
pushl
bnd
jae
pop
mov
sbb
xchg
cltd
xchg
dec
dec
mov
incl
loope
rclb
pop
out
addr16
sbb
dec
dec
inc
sub
mov
xchg
mov
inc
ja
xlat
pop
divb
pop
loopne
cmc
push
mov
hlt
mov
jmp
jg
mov
mov
inc
mov
pusha
cmpl
aas
mov
out
cmp
pop
sub
mov
push
dec
sbb
pop
push
decl
jecxz
pop
cmp
std
cmp
mov
dec
mov
nop
add
mov
xchg
mov
adc
or
jg
cld
in
sahf
test
loopne
incb
sub
xor
push
add
jp
mov
out
cmpb
xchg
pop
roll
fistps
fidivs
imul
xor
cwtl
call
fs
incb
pop
cmp
sub
pop
push
xchg
bound
dec
call
repnz
icebp
mov
adc
std
mov
mov
aas
les
lods
or
adcb
pop
dec
outsb
add
dec
sbb
mov
ss
pop
push
cltd
or
jnp
sub
test
sub
mov
aas
adc
adc
loop
notl
imul
icebp
cltd
jnp
lcall
push
or
sub
mov
pop
out
inc
push
add
out
sub
pop
cld
call
dec
fsts
jb
add
jbe
sub
into
sub
stos
clc
decl
mov
test
pop
xor
xchg
and
push
lea
ljmp
cs
jbe
lcall
les
leave
pop
fsubs
ljmp
add
mov
inc
shll
ljmp
cli
hlt
jge
jle
test
mov
push
test
push
mov
inc
icebp
popa
sti
and
mov
jg
lods
incl
add
scas
or
xlat
imul
mov
addl
lahf
jecxz
in
in
into
mov
push
ss
add
xchg
xchg
cld
incl
js
dec
sbb
and
aas
or
lahf
jne
add
jbe
outsl
fldenv
pop
mov
xor
incl
cmc
fnstsw
dec
test
out
loopne
cmp
mov
push
xchg
mov
mov
sahf
inc
xor
or
ror
mov
mov
push
inc
incl
mov
ror
in
stos
or
jl
in
in
jmp
jge
add
sbb
mov
ja
les
imul
sub
call
jo
mov
negl
mov
xchg
div
add
add
fwait
fs
and
inc
add
mov
mov
xlat
in
and
pop
inc
rorl
push
mov
pop
xor
enter
ljmp
lds
das
mov
jb
test
and
adc
push
nop
jnp
cmp
jmp
lds
and
scas
stos
or
sbb
adc
push
in
cs
aas
fwait
iret
call
test
pop
push
xchg
mov
iret
mov
mov
push
and
pop
push
dec
in
lahf
pushl
mov
inc
jae
adc
insl
enter
mov
pop
xor
test
fcomip
out
test
mov
sbb
inc
sbb
pusha
push
stos
xor
lret
mov
mov
mov
call
lret
bound
dec
jl
das
aas
or
lret
jmp
ss
dec
mov
sbb
std
outsl
push
mov
sub
fsts
daa
sbbb
mov
adc
push
add
movsb
push
ljmp
scas
inc
ret
call
add
les
adc
sbb
fsubrl
mov
jne
push
sub
sub
push
int3
xchg
adc
test
ficoms
pushl
push
js
orb
repz
jl
shrl
sahf
fs
out
mov
data16
push
fadds
inc
scas
push
inc
mov
or
out
jb
scas
lret
test
inc
inc
subb
sub
call
dec
or
int
or
scas
sbb
jnp
sbbb
sar
lcall
mul
jmp
fisttps
cmp
lods
pop
inc
sbb
addl
jg
ljmp
xor
cmp
movsb
mov
cltd
leave
fs
mov
mov
das
cli
ljmp
out
lret
jnp
cmp
xor
je
aad
lcall
mov
loop
jno
pushl
bswap
push
mov
mov
cmpsl
pop
jp
cmp
call
mov
mov
adc
aam
jl
jo
dec
push
mov
aad
mov
mov
lcall
add
pop
vaddsd
jmp
cmp
jo
pop
call
insb
jp
pop
sahf
xor
mov
adc
jl
movsb
outsl
mov
or
cmpsb
cmpsl
adc
scas
jne
scas
inc
movups
cmp
iret
repnz
adc
fstps
enter
cpuid
xchg
mov
cli
adc
xchg
lea
xor
and
call
mov
enter
inc
cli
clc
mov
ds
cmp
cmp
aam
lret
mov
sub
stos
xchg
jmp
sub
cmp
incl
dec
enter
leave
or
ret
scas
mov
es
imul
push
adc
cli
or
push
xchg
lods
add
sar
ss
cmpsl
test
add
pushl
call
fsubrs
and
cmp
cmp
mov
sbb
into
std
mov
cmp
and
aad
int3
add
cmp
in
ljmp
int
jge
cwtl
xor
mov
pop
fidivrl
les
sbb
cmpsl
mov
stos
incl
outsl
or
out
pop
lcall
jmp
shlb
add
xchg
cmp
push
push
gs
cld
mov
dec
pop
call
daa
orl
inc
push
mov
in
rcrl
popa
loope
mov
adc
mov
dec
addb
scas
je
ja
mov
cli
pop
cmp
nop
mov
popa
pusha
out
mov
out
sub
repz
cmp
mov
mov
into
mov
jp
lret
out
pop
cmp
addb
das
shll
cmp
mov
or
dec
ret
adc
ja
repnz
and
loop
xchg
dec
cmp
xchg
and
mov
adc
scas
hlt
loope
pop
notl
jnp
stc
and
lcall
sti
lcall
push
sbb
push
sbb
jmp
add
lods
jle
cli
addl
add
inc
push
enter
sub
cmpsl
dec
mov
adc
sub
xor
cld
jl
jmp
es
and
xchg
add
mov
cmp
push
movsl
clc
sahf
cmp
arpl
ret
and
push
test
mov
cli
loope
push
adc
xor
inc
out
stc
mov
in
pop
loop
aas
rcll
fnstcw
dec
ds
stos
bound
out
fsub
add
xor
cmp
xor
jmp
imul
movb
cmp
add
pop
sar
pop
jmp
ret
out
cli
incl
lock
bound
mov
mov
xor
xor
scas
pop
inc
add
cld
xchg
jbe
add
xchg
mov
and
out
push
daa
popa
jg
imul
push
xchg
jge
fcomip
lcall
sahf
test
xor
jmp
push
add
clc
shrl
add
loope
pushl
xchg
fsubrl
test
repnz
mov
and
inc
dec
xchg
xchg
int
int
mov
or
add
sti
pop
fwait
xor
ret
jmp
lret
sbb
sub
and
out
mov
aas
xchg
les
dec
or
jl
mov
jp
test
fldenv
aaa
dec
xchg
pop
std
imul
jbe
push
subl
xchg
mov
in
cmp
ljmp
in
lahf
loope
lods
lret
inc
pushf
scas
daa
jmp
fidivrs
sti
jg
gs
ljmp
jle
push
mov
xchg
jge
or
sub
cmp
push
clc
ja
loop
xor
call
mov
mulb
stc
xchg
pop
mov
mov
push
mov
fisttpl
push
inc
ja
mov
sub
jnp
sbb
ficoml
push
xchg
stos
push
xor
sub
sbb
idivb
rcll
cmpsl
popa
aad
xchg
sahf
dec
xchg
aaa
ljmp
dec
dec
ds
jne
and
fsubrs
pop
lods
pop
ret
sbb
pushf
dec
jp
fisubs
pushl
adc
notb
cmp
xor
push
fdivs
dec
dec
je
xlat
mov
test
mov
fiadds
jg
test
xchg
push
cmp
aaa
and
dec
icebp
push
int3
decl
push
mov
sar
jb
js
testb
js
cmpsb
add
adc
and
decl
insb
dec
sub
jae
xchg
test
sub
in
push
mov
out
inc
jnp
mov
jb
cld
in
cltd
push
or
adc
sub
inc
cmp
mov
jmp
cmp
pop
push
add
and
mov
imul
pushl
lods
xchg
jb
adc
mov
jae
cli
add
les
mov
add
lcall
pop
xchg
into
inc
sti
jne
loopne
xchg
out
pop
cmp
mov
std
sar
pushl
add
jmp
push
or
ljmp
das
mov
mov
aad
test
in
loopne
fimuls
pop
dec
lods
stc
add
ds
fwait
push
sti
lcall
jns
cmpl
js
add
push
pop
cmpsl
cmpb
decl
rorl
pop
xchg
hlt
je
push
inc
out
insl
lods
ljmp
cli
push
lock
mov
mov
push
popa
jne
pop
dec
pop
or
pop
pop
mov
fwait
aaa
cld
outsl
adc
xchg
addr16
mov
xchg
sub
and
fistl
cltd
dec
cmc
and
xchg
lods
sbb
jnp
popa
aaa
out
arpl
push
gs
push
nop
dec
fwait
jmp
push
push
test
mov
test
in
xlat
adc
ljmp
and
incl
jge
lods
imul
test
cwtl
fisubrl
test
mov
adc
hlt
jmp
mov
xor
ss
jmp
out
sub
pinsrw
xchg
dec
popf
pop
mov
fcomip
push
je
cmpxchg
cmpps
inc
mov
imul
adc
das
xchg
cmc
ss
and
addb
add
and
adc
mov
sub
negb
aaa
dec
int
movsl
int
lcall
jns
inc
jmp
xor
or
jg
xor
xor
sbb
adc
adc
add
or
sbb
adc
mov
mov
jmp
xor
insb
mov
dec
and
ret
xor
ljmp
hlt
ja
pmaddwd
das
xchg
stos
jbe
jbe
jg
cs
xchg
loopne
psubd
push
jbe
lea
xchg
ret
add
ljmp
mov
decl
push
mov
popa
xchg
insb
xor
xchg
call
xchg
adc
stc
stos
decl
popf
inc
push
insb
mov
push
mov
je
stc
fldl
test
icebp
incl
movb
sbb
shl
test
jg
mov
shl
cwtl
mov
stos
lret
rcrb
xor
movsl
faddl
sbb
mov
jg
fdivrl
out
negb
out
cli
push
sbb
xchg
push
imul
xchg
incl
negb
jp
mov
jp
inc
sbb
sub
rcrl
mov
lcall
rcll
cmpb
or
repz
insl
sub
sbb
incl
icebp
add
pop
push
adc
das
inc
loope
testl
push
dec
cli
jmp
lcall
pop
xor
jb
and
rol
sbb
arpl
adc
jmp
push
jmp
or
dec
cltd
ljmp
mov
clc
call
clc
add
fcoml
sub
and
aam
in
loop
add
lcall
xchg
inc
testb
jmp
sub
aam
push
sbb
mov
add
test
pop
mov
shr
in
xor
pushl
nop
jmp
pushf
pop
in
fistpll
cltd
gs
imul
fst
out
add
int3
mov
sbb
jns
icebp
mov
fs
cmp
dec
stos
loop
mov
and
cmpl
dec
pop
fdivrs
outsl
cltd
jp
in
mov
arpl
mov
testl
call
cmp
adc
lcall
fwait
lock
dec
fwait
stos
sub
loopne
xor
adc
xor
das
cmp
inc
cmp
fimull
lcall
mov
mov
aad
je
push
mov
pop
lret
incl
lds
popf
insl
add
push
xchg
push
fistps
adc
scas
cmpsb
inc
mov
in
sbb
mov
stc
scas
jge
jp
jmp
adc
pop
adc
lods
cmp
out
and
mov
leave
imul
movsb
decl
call
xor
in
and
cld
daa
xor
call
stc
pop
pop
insb
add
and
pop
and
push
inc
inc
dec
mov
pop
subl
jp
jbe
jecxz
fsts
jbe
test
inc
cmp
incl
mov
ret
enter
iret
add
fcomip
rcll
jp
jo
mov
test
xlat
loope
scas
daa
cmp
jo
xor
incl
push
push
movsb
into
fildl
adc
out
push
sti
std
jns
or
loopne
std
std
inc
hlt
xorl
lret
push
jle
hlt
lcall
sub
arpl
movsb
mov
js
pop
ret
push
inc
or
das
imul
jmp
imul
xchg
pop
push
cwtl
xchg
cltd
inc
packsswb
mov
shrb
lea
jge
out
xlat
movsb
mov
outsb
or
mov
aad
mov
les
and
movb
out
icebp
fisttps
push
and
sbb
decl
push
inc
aad
out
sbb
fildll
push
add
ljmp
stc
mov
mov
ja
pop
add
sub
pop
pushf
dec
pushw
pop
arpl
inc
mov
xor
push
mov
pop
loop
cmp
clc
xchg
sbbb
notl
adc
stc
ret
cmp
mov
jmp
lret
loopne
xor
mov
shr
daa
insb
outsl
leave
sti
jg
cli
outsl
xchg
push
jnp
add
aas
inc
test
mov
push
xchg
push
pushl
cmp
xor
jo
into
ret
sbb
imul
inc
iret
jne
lods
lods
pop
cmpsl
or
ljmp
fmull
icebp
sub
adc
add
push
adc
lock
ret
test
push
aaa
add
cmp
push
push
mov
pop
jle
add
mov
jnp
fwait
cmp
inc
push
inc
fisubs
dec
push
in
sub
push
cmc
mov
push
pop
cmc
test
movsl
mov
inc
jp
in
fadd
int
addr16
in
ljmp
sti
js
inc
jnp
jae
sub
mov
adc
pop
enter
cmp
int
ljmp
pop
add
clc
or
fsts
xor
add
stc
in
mov
test
xchg
xlat
mov
fistps
inc
imul
outsl
mov
adc
mov
insl
pushf
loop
out
cli
mov
push
jmp
xchg
dec
add
mov
test
mov
incl
cmp
daa
lock
xchg
cmp
call
pushaw
das
jmp
push
sbb
icebp
cmp
pop
fldenv
insb
mov
aaa
inc
ficomps
and
ret
inc
jmp
orl
shll
movsb
je
out
add
lahf
or
mov
pop
fcomps
mov
es
sub
xor
ds
cmp
ljmp
flds
stos
movsl
mov
mov
dec
dec
in
add
lcall
mov
bound
pop
xchg
jl
sbbb
mov
pop
filds
adc
mov
jmp
sar
das
ljmp
sbbb
cmpsb
ret
test
or
in
das
xor
incl
lods
sub
mov
in
push
and
lds
add
mov
lock
inc
icebp
fmuls
inc
adc
sbb
out
mov
add
dec
mov
outsb
sbb
pop
cmp
xchg
inc
push
movb
and
in
dec
add
dec
hlt
incl
fcompl
add
xchg
cmpsl
cmp
js
xchg
mov
push
fwait
dec
subb
incl
xor
adcl
push
sub
popf
pop
enter
xchg
xchg
pop
mov
and
pushl
rcrl
ror
cltd
mov
push
jle
call
cmp
and
adc
jmp
xchg
jo
mov
jnp
pop
adc
test
mov
dec
lcall
inc
jnp
xor
pusha
or
push
dec
repz
add
cmp
push
and
sbb
lcall
jb
lret
pop
subl
imul
lcall
cwtl
add
cwtl
arpl
sub
shlb
or
out
push
dec
out
out
js
ret
cmpsl
pop
and
jge
int3
inc
daa
fimull
inc
imulb
lfs
dec
ja
shll
clc
push
ret
jmp
sub
outsl
cmp
sarb
test
shl
jmp
pop
and
addb
cmp
xorb
lods
aaa
push
and
mov
push
mov
dec
mov
push
movsl
adc
daa
out
lahf
push
mov
pop
aaa
cs
xor
decl
mov
shrb
leave
movsl
hlt
ret
cmp
imul
jb
inc
xor
jl
stc
inc
pop
dec
xchg
xor
mov
dec
and
mov
ss
gs
rcrl
sahf
roll
add
daa
or
or
pusha
push
out
add
fs
dec
cmc
jns
bound
hlt
push
test
xchg
mov
je
or
mov
pop
ds
mov
push
xor
add
call
and
mov
or
add
das
mov
lea
mov
aas
mov
xorb
cmpsb
push
jg
adc
out
scas
sub
xor
je
idiv
das
xchg
cmpb
bound
dec
icebp
out
adc
loopne,pn
push
movsl
es
jnp
dec
fcompl
adc
mov
or
out
dec
daa
push
pop
sub
and
jae
cmpsb
sbb
test
repz
test
mov
ljmp
add
insl
addl
jnp
bound
clc
loope
lea
std
in
push
nop
jbe
sbb
adc
push
imul
and
call
lock
mov
jae
push
mov
call
pop
in
sarb
in
mov
pop
outsl
inc
int3
arpl
mov
mov
incb
outsl
mov
hlt
scas
loope
fdivrl
mov
loop
xlat
sbb
sbb
sbb
cs
mov
xor
cmp
jmp
xlat
out
push
imull
clc
and
or
idiv
icebp
adc
pushl
test
jle
cmp
sub
hlt
jne
dec
mov
aaa
push
pop
in
daa
repnz
jp
sbb
decb
jno
mov
incl
push
or
pop
lcall
pushl
std
ljmp
mulb
mov
mov
icebp
shlb
push
push
cmpsb
xchg
sar
dec
inc
or
mov
push
loop
nop
movsb
sbb
pushl
mov
sahf
or
add
xor
jl
cmc
jb
mov
pop
mov
call
lret
clc
imul
and
xchg
lahf
xor
push
cmp
dec
fbstp
inc
and
add
push
lret
cwtl
xor
movsb
jbe
call
call
pop
or
lods
mov
mov
icebp
das
std
jno
cmc
stos
lock
cld
call
mov
mov
loope
mov
paddw
das
es
call
out
loop
mov
xchg
das
sbb
into
cmp
mov
xor
mov
xchg
add
sti
xor
mov
fcomip
inc
inc
lcall
fsubs
lods
nop
xchg
jno
jb
add
jg
mov
inc
out
xchg
mov
sbb
inc
or
scas
push
shlb
add
xor
push
push
push
xor
xor
sbb
mov
scas
mov
and
cmpsl
ja
ds
imul
dec
scas
ds
rcrl
dec
xlat
xor
push
push
adc
sbb
xor
xchg
std
pop
push
add
out
xchg
cli
lea
hlt
loopne
pushl
into
lock
sbb
lock
adc
imul
subb
pushl
push
pop
fadd
icebp
loop
rcl
or
stos
in
fildl
ficomps
jle
ss
lock
adc
xor
push
xchg
stos
and
inc
daa
mov
dec
push
mov
ret
push
add
mov
pop
adc
incl
out
and
pop
loopne
adc
movsl
xor
scas
mov
lcall
pushl
push
cmp
movsl
add
inc
inc
aad
xorl
jecxz
mov
mov
fiaddl
movb
or
jmp
lods
into
pushl
or
and
pop
inc
add
pop
jle
mov
mov
jae
shll
adc
sbb
call
and
stos
fdivs
mov
push
xchg
xor
enter
mov
pop
cli
mov
and
addr16
pushl
push
add
scas
dec
adc
dec
ffreep
pop
mov
push
pop
or
dec
jmp
daa
pop
in
loope
cli
aas
sub
lret
push
loopne
lea
daa
shll
fs
icebp
sub
test
call
ljmp
int3
popf
sahf
mov
or
fstps
mov
pusha
add
dec
aaa
xor
insl
andl
test
jmp
lahf
cli
or
dec
out
mov
cmp
imul
xorb
jg
add
shrl
mov
jg
scas
cmpl
dec
rol
mov
jnp
out
mov
lcall
and
jmp
in
mov
out
inc
rcrl
lcall
jnp
adc
iret
adc
push
scas
jp
and
ja
mov
lock
sub
call
dec
push
mov
sub
outsl
fs
andb
xchg
std
push
lahf
pop
fisttpll
clc
dec
cmp
xchg
enter
lods
outsl
sar
xchg
mov
int
mov
add
cltd
push
mov
das
and
and
lea
ret
icebp
xchg
scas
mov
mov
loopne
dec
loopne
decl
bound
push
shl
add
aas
sbbl
imul
fildl
mov
pop
test
mov
std
mov
decl
es
rol
push
mov
fbstp
mov
mov
sahf
or
cmp
pushl
idiv
jg
xchg
aad
mov
ds
mov
mov
mov
stc
mov
incl
cltd
jle
mov
dec
cmc
mov
pop
aaa
or
xor
cmp
push
pop
hlt
decl
iret
xlat
scas
pop
lahf
into
bound
pop
lcall
mov
cmc
incl
xchg
and
adc
cmp
inc
sahf
mov
inc
mov
out
jmp
and
test
out
sub
in
and
daa
test
mov
xchg
mov
es
mov
data16
pushl
mov
insb
outsb
decb
scas
sbb
xchg
sbb
lret
sahf
ss
dec
xor
movsl
insb
fsubl
push
cmp
dec
movsl
imul
mov
int3
jmp
sar
test
loope
lcall
inc
dec
or
jbe
enter
into
test
ljmp
dec
push
pop
xor
adc
and
xor
lock
cmpsl
dec
jl
aad
cmp
jmp
push
mov
sbb
popf
loope
in
sbb
addr16
xchg
je
sbb
loop
fidivs
adc
push
in
adc
and
cli
hlt
and
xchg
out
fucomi
pushf
pusha
loope
decl
or
sub
jmp
ja
lcall
jmp
shrl
mov
fcoml
ficoms
mov
adc
dec
lcall
mov
mov
mov
inc
dec
test
stos
mov
ljmp
icebp
jg
add
enter
jbe
inc
pushf
jmp
out
inc
add
out
cli
add
mov
leave
test
xor
mov
sbb
dec
movsb
add
jmp
jmp
jne
inc
jecxz
sub
int3
out
sub
call
push
mov
ljmp
jl
add
out
jbe
sahf
ja
jl
mov
bnd
inc
outsb
and
adc
imul
xor
xor
decl
lock
dec
mov
cltd
fidivrs
dec
push
jmp
aad
decl
mov
ffreep
fsubrs
push
sbb
sbb
fs
loop
sub
pop
mov
lret
stos
imul
cs
aad
shll
cmp
test
das
pushl
cmp
mov
jge
daa
jo
lock
shr
cmpl
add
pop
sub
push
add
xchg
mov
add
lahf
movsb
ljmp
xor
add
in
jne
addr16
push
jno
cmp
adc
inc
and
inc
inc
sar
jg
pop
dec
jne
xor
pop
insl
lods
or
lods
rorl
fstpl
cld
out
fwait
insl
mov
incl
in
pop
mulb
mov
jp
repnz
push
adc
nop
packssdw
ljmp
cli
decl
jbe
mov
jno
lcall
cli
in
ds
lcall
out
std
mov
mov
dec
mov
and
cmp
jb
sbb
lcall
mov
stos
dec
jmp
ljmp
testb
push
icebp
mov
fwait
mov
dec
leave
cmp
fdivrs
loope
test
xchg
stos
call
ds
cmp
mov
jp
sbb
pop
push
pop
loope
xchg
outsl
loop
push
decl
std
and
adc
xchg
in
sub
mov
push
call
inc
pop
in
push
movsb
inc
adc
call
jl,pn
mov
sti
or
cli
mov
mov
xlat
insl
test
cs
jo
xchg
cmp
or
scas
call
repz
pop
outsb
out
sbb
mov
mov
jecxz
cmp
call
lds
xchg
adc
push
rcr
jo
loopne
lods
push
mov
mov
cmp
fwait
clc
rorl
mov
xlat
mov
repz
and
lcall
es
push
xor
shll
cmp
nop
out
test
pop
loop
push
aaa
mov
jg
fs
in
sub
iret
sbb
cld
lds
adc
rclb
fwait
jo
leave
sbb
cmp
adc
cmp
xor
pop
ljmp
pushl
les
scas
insb
sbb
jge
mov
stos
je,pt
pop
loopne
cmp
repz
adc
lahf
and
add
divl
ja
xlat
out
in
cmp
arpl
push
sar
decl
mov
xor
adc
pop
icebp
shl
xchg
aaa
stos
cmpsb
cld
sti
inc
sbb
jbe
rcrl
cli
jle
es
sarb
xor
cld
sub
incl
jge
sub
clc
cwtl
and
test
pop
adc
pop
cmp
int3
dec
and
pushl
ja
outsl
xchg
outsl
das
mov
fdivrl
cmp
xor
fstl
cwtl
pop
cmc
push
jmp
push
sbb
sbb
sbbl
fsubrl
jmp
ds
lcall
shll
gs
jae
jmp
mov
in
xchg
test
imull
sub
adc
call
test
div
shll
push
mov
mov
pushf
lret
or
insl
or
xchg
mov
pushl
jae
rcll
xchg
sahf
lcall
lret
push
sub
repz
fnstsw
mov
pop
sbb
clc
xor
sub
mov
jmp
sahf
cli
fs
call
sti
popf
test
add
mov
dec
dec
xchg
add
fcompl
push
jg
outsl
nop
cwtl
cmp
outsb
adc
sub
cltd
mov
mov
frstor
cltd
es
mov
lods
adc
cltd
bound
adc
inc
cmp
adc
add
in
subl
lahf
adc
dec
imul
in
dec
enter
pop
pop
pop
js
fs
out
mov
or
mov
je
or
cmp
inc
push
dec
aam
jbe
loope
xor
mulb
cmpsl
push
notb
decl
dec
repnz
pushf
mov
leave
mov
repz
cwtl
call
mov
je
out
xchg
mov
movsl
inc
lea
and
sbb
aas
imul
lcall
xchg
mov
cli
scas
icebp
dec
jg
lock
push
adc
add
ret
cs
jno
push
daa
sub
sbb
or
jno
movb
cmp
std
mov
pop
loopne
popa
lea
out
sub
ds
cwtl
testl
call
repz
adc
cmpsb
rcrl
sub
add
cmp
stos
cmpsl
xlat
jo
cld
dec
or
mov
mov
fisubrl
shlb
xor
jmp
lcall
xchg
xchg
js
pop
loope
out
insb
push
xor
pop
lea
lea
sub
mov
push
adc
jmp
dec
fstl
xchg
jecxz
dec
dec
in
adc
dec
scas
mov
pop
cmp
pop
xlat
daa
dec
cli
aas
lret
mov
mov
xchg
inc
loopne
decl
pop
xor
push
ljmp
xor
and
adc
adc
lock
incl
push
and
aad
inc
mov
sub
cmp
data16
stos
stos
dec
aaa
loope
test
add
in
popa
dec
jle
jg
mov
jbe
cmpb
adc
dec
lock
xchg
cmp
cmp
clc
cmpsl
pusha
push
aad
lods
mov
nop
jo
xchg
fnstsw
imull
jmp
xchg
stc
mov
call
std
pop
and
cwtl
cmp
cli
xor
xchg
xchg
xchg
imulb
xchg
pop
mov
adc
sbb
mov
lods
push
stos
test
xor
orb
incl
inc
bound
sub
mov
mov
aaa
cmp
mov
mov
sub
pop
add
adc
sub
sub
cltd
sar
sbb
paddb
int3
movsb
fwait
lcall
pushl
mov
xor
rorb
xchg
jns
outsb
and
jmp
pop
aas
ficoml
inc
adc
clc
outsl
hlt
clc
inc
mov
sbb
test
ljmp
lcall
adc
loopne
call
test
sti
leave
movsb
mov
push
testl
mov
mov
fists
inc
stc
dec
adc
arpl
mov
xchg
pop
and
jg
mov
lret
inc
mulb
jb
pop
mov
aam
inc
sub
lcall
adc
xor
lods
mov
lahf
inc
inc
pop
xor
xor
cmp
incl
jecxz
sahf
xor
xchg
cmp
das
dec
cmpsb
adc
push
leave
test
rcl
xorl
mov
pushl
fcompl
lcall
mov
cli
in
dec
test
pushl
and
dec
sub
js
cmp
mov
aaa
arpl
add
add
fisubrs
xlat
movsl
loop
je
pusha
mov
sbb
js
inc
mov
and
popa
inc
shl
mov
dec
xchg
mov
insb
lcall
andb
add
cwtl
pop
call
or
ss
incl
insl
fwait
lock
push
jle
out
out
inc
pop
and
dec
aaa
stos
jle
ret
mov
pop
data16
jp
pop
sub
cltd
push
cltd
cwtl
add
sbb
pop
jae
ficomps
mov
lods
data16
push
push
jno
xor
repnz
sbb
sahf
cmp
in
shl
inc
add
adc
outsl
jno
hlt
mov
lock
repz
lea
out
mov
sub
daa
imulb
movb
lcall
push
loop
lea
sbb
xor
dec
dec
js
pop
sub
mov
hlt
stc
jmp
lds
daa
inc
outsl
mov
mov
jnp
and
sub
push
add
int
pop
jge
mov
pusha
ds
adc
add
push
adc
inc
mov
pop
incl
push
cmpsb
repnz
int3
jp
xchg
les
jle
sbb
aad
cmp
sbb
mov
iret
pop
jmp
cmpsb
ret
dec
xchg
test
sub
js
call
lahf
enter
dec
jne
xchg
out
stos
jecxz
mov
movsb
jnp
out
gs
adc
jmp
mov
mov
pushf
test
xchg
jo
jl
dec
aas
mov
add
mov
jnp
out
adc
mov
mov
cmc
sbb
xchg
das
pop
jns
inc
xor
out
repz
addl
inc
push
push
xchg
jmp
and
inc
cmc
mov
sbb
dec
pop
loopne
call
xchg
outsb
push
movsb
cmpsb
and
mov
cmp
jmp
insb
shl
pop
in
arpl
decl
and
scas
mov
mov
pusha
jbe
cli
inc
andl
fcos
incl
mov
imul
loope
push
rcrl
ret
subb
cmpsb
lods
loopne
jmp
fidivl
in
mov
add
sub
out
stc
xchg
daa
and
cltd
mov
and
repz
dec
in
adc
xor
mov
pop
sbb
inc
scas
orb
stos
fisubrs
mov
mov
xchg
je
test
xlat
ljmp
aaa
hlt
mov
cmpsl
in
sub
shlb
call
add
push
jecxz
sti
test
stos
or
adc
pop
xlat
imul
ljmp
sub
imul
inc
lods
sub
cs
rclb
clc
js
imul
in
jecxz
cmp
decl
imul
inc
jg
cmc
das
inc
rolb
stc
out
idiv
mov
jle
aad
loopne
incl
es
inc
sbb
or
mov
sbbb
jle
pop
push
in
mov
inc
lock
cwtl
sub
shll
out
fiaddl
outsb
loop
aaa
cmp
push
mov
xor
sub
mov
loop
pop
out
mov
jmp
or
in
into
imul
neg
sti
decl
inc
lret
or
cli
inc
ret
neg
xchg
fbld
ja
jg
dec
stos
jb
or
sbb
pop
push
call
shll
fildll
decl
xor
je
repnz
pop
fisttps
sahf
xchg
sbb
les
insl
jl
mov
jmp
mov
and
repz
push
push
cmp
loop
and
push
mov
lock
dec
pop
mov
incl
mov
pop
jl
test
or
sub
dec
in
addl
and
in
repz
stos
lcall
clc
add
mov
in
and
add
ja
out
or
aas
or
fdiv
dec
stos
scas
decl
sahf
mov
xchg
fdivrp
dec
movl
pusha
incl
pop
add
mov
popa
jg
ja
fildl
jl
filds
daa
inc
sti
mov
aad
and
decl
push
aaa
xchg
shrl
inc
and
inc
jg
shrb
pop
cs
insl
test
lahf
fptan
pusha
lods
mov
cmp
adc
lret
pushl
loopne
fnstsw
xchg
loope
xchg
cmpsb
stc
mov
cltd
test
cld
lcall
push
fistpll
xchg
movl
cld
shrl
enter
ja
push
aam
push
sti
pop
stos
xchg
sbb
xchg
and
mov
xchg
cmpsb
push
mov
push
mov
popa
repnz
and
lret
js
and
jbe
loope
mov
leave
jne
mulb
ror
mov
sbb
repnz
mov
dec
xor
lock
test
xchg
arpl
push
nopl
scas
add
jb
test
ljmp
adc
mov
push
shlb
fsub
movsb
cwtl
scas
sbbb
cmp
ss
add
sub
lea
cltd
xchg
xchg
sti
in
cmp
gs
or
adc
ljmp
mov
aam
lret
loope
inc
sbb
pop
sub
ljmp
mov
icebp
sti
adc
stos
in
cmc
adcl
inc
pop
cmp
pushl
or
mov
xchg
xor
sub
fs
scas
repz
fcomps
call
enter
or
sbb
pop
pop
aas
lahf
repnz
jbe
jl
mov
pop
ds
xchg
push
inc
out
mov
push
int
lret
cmp
xchg
jge
sub
dec
cmp
mov
inc
stc
or
fdivs
icebp
decl
addl
fisubrs
outsl
es
in
shrl
cltd
daa
out
xchg
or
decl
push
mov
xor
or
leave
pushf
mov
in
ret
roll
shrb
out
mov
mov
push
fwait
mov
sub
call
mov
pop
xchg
subb
dec
cmpb
call
lret
mov
mov
lods
sub
push
out
mov
push
cmp
pushl
and
movsl
cli
cmp
xor
cli
mov
push
outsb
dec
loop
sub
ljmp
cmp
data16
cmp
out
mov
mov
pushf
test
rorb
sar
mov
pop
or
push
mov
pushl
mov
add
mov
loopne
movsb
add
clc
add
sub
inc
out
mov
sti
cmpsb
call
in
popf
add
cmpsb
cmc
xorl
push
add
sbb
jl
movsl
mov
jmp
cmpsb
call
xchg
scas
add
fdivp
inc
mov
lcall
push
xchg
in
mov
cltd
jbe
dec
jb
sub
inc
inc
or
gs
dec
decl
insb
les
gs
mov
dec
pop
pop
mov
push
or
incl
outsl
stc
adc
jne
test
sbb
insl
mov
mov
nop
mov
lock
scas
lea
cmpsb
jmp
outsb
jg
dec
lcall
mov
sub
popa
shr
jmp
cltd
das
ja
out
hlt
sbb
mov
test
add
lods
call
mov
or
cwtl
popf
pushl
repnz
lret
pop
lret
and
mov
gs
push
pop
cli
test
dec
incb
jb
incl
xchg
ljmp
sub
sbb
cli
inc
pop
sub
ljmp
inc
xor
dec
add
jbe
xor
xchg
pushf
addr16
dec
mov
or
decl
jae
and
jmp
adc
pop
mov
in
mov
and
mov
ret
mov
xlat
or
sbb
lcall
ret
pop
jp,pt
arpl
xor
sub
pop
hlt
add
das
cli
in
cmpsb
cmp
xor
lods
and
addr16
sahf
in
adc
push
add
jmp
ret
popa
cmp
loope
jbe
stos
inc
push
sbb
data16
hlt
ja
inc
andb
ds
ljmp
nop
jns
add
ljmp
lds
push
or
and
fistps
decl
and
out
movzwl
movsb
out
aaa
xor
pop
aaa
repz
or
int3
in
dec
nop
clc
pushl
pop
mov
add
or
call
cmp
fnstsw
scas
rcll
subl
fstps
loop
icebp
xchg
fistl
mov
daa
repz
fcomip
sbb
test
xor
cmpsb
leave
xor
fldcw
daa
ret
movsb
incl
mov
mov
inc
daa
xchg
pusha
dec
inc
fbld
scas
xor
lods
lcall
push
inc
data16
sub
xchg
mov
lcall
xchg
aad
cmp
or
jecxz
adc
push
cltd
dec
insb
push
lahf
inc
xchg
or
fsts
push
mov
sub
pushf
or
sbb
cmp
inc
adc
test
sbb
ljmp
outsb
loope
add
movsb
adc
push
aaa
addr16
lahf
xchg
andb
call
dec
mov
ds
mov
inc
mov
popf
dec
push
lods
cmpsb
lcall
cmc
pop
cld
jmp
es
inc
cld
xchg
inc
mov
push
mov
add
adc
or
int3
push
push
fnstsw
xlat
mov
dec
add
lcall
in
or
xchg
sub
xchg
outsb
ljmp
jmp
push
in
fcom
repnz
out
cld
insw
inc
inc
sarl
data16
fwait
out
jns
lds
cltd
loop
loope
mov
imul
mov
mov
sti
mov
inc
ljmp
mov
scas
mov
xchg
jmp
add
lcall
adc
adc
ret
loopne
fdiv
lea
sub
rolb
cld
enter
ja
arpl
or
mov
mov
jne
cmp
xlat
fistpl
repnz
dec
aas
mov
cld
jmp
lea
leave
movsl
xor
dec
out
push
jg
frstor
lea
cwtl
or
pop
push
mov
and
in
lcall
cmc
hlt
es
pop
jl
sub
fistl
push
inc
adc
cmp
cmc
dec
leave
lds
mov
sub
es
push
iret
stos
pop
faddl
loope
inc
push
mov
push
in
jg
jmp
push
lcall
lods
push
jno
int3
pop
jmp
add
js
sub
push
incl
and
xor
jg
push
fsubrs
testl
mov
mov
ljmp
mov
jno
lret
mov
sti
stc
es
lock
ds
sahf
in
fcoms
pushl
mov
gs
jl
pop
sbb
add
sbb
lods
fs
fsubrl
mov
jo
xor
sbb
scas
out
push
loop
or
shll
cmp
ljmp
popa
xchg
sub
push
lahf
adc
enter
adc
pop
roll
faddl
or
ja
and
imul
push
inc
mov
dec
repnz
jb
lcall
cmpsb
sub
add
jl
lds
das
loop
push
aaa
int
loop
jle
cltd
lea
sub
lock
push
cld
dec
or
dec
push
xor
xchg
stc
xor
bswap
rorb
ljmp
into
cli
test
gs
sbb
cs
xchg
mov
xor
ljmp
sbb
mov
jnp
jge
jno
pop
lahf
clc
fidivl
mov
push
mov
or
popa
sar
adc
popl
rorl
mov
add
ljmp
daa
sub
fdivs
pusha
stc
dec
iret
addr16
lds
ljmp
iret
popf
jo
lret
mov
mov
dec
std
sbb
pop
mov
or
lcall
jle
or
adc
xor
in
scas
and
mov
insl
enter
test
cmpsl
jecxz
mov
xor
clc
mov
cmp
or
out
mov
xchg
popa
rolb
addr16
mov
xchg
movsl
mov
stos
decb
mov
mov
push
popf
fs
mov
insl
jl
loop
decl
shl
scas
jns
inc
xor
rclb
inc
pop
sub
cmp
lds
push
inc
push
ds
int3
jb
adc
nop
cli
test
push
loop
xchg
mov
rcll
incl
adc
or
sbb
jo
mov
js
leave
sub
mov
jb
fnstsw
out
lret
pminsw
scas
inc
mov
loop
call
loop
mov
aaa
dec
jo
pop
clc
push
dec
xchg
cmc
mov
stc
pusha
gs
mov
aaa
fwait
in
inc
jae
cld
jb
outsl
jl
fwait
dec
int3
add
mov
push
test
or
add
dec
fisttps
sbb
call
dec
mov
popa
bound
add
into
mov
data16
mov
push
inc
ja
loope
pushl
adc
imul
and
jg
pop
jmp
mov
imul
or
inc
push
lds
adc
xchg
faddl
jmp
xlat
mov
test
mov
push
push
pushl
xchg
push
je
cmp
jl
imul
add
pop
sbbb
mulb
jmp
pushf
push
loope
mov
bound
xchg
aam
jns
sarb
jb
into
clc
insb
jae
sub
ljmp
dec
inc
fistpl
rorb
lret
mov
mov
repnz
or
int
sbb
fidivl
cwtl
adc
fldcw
push
jnp
lea
shlb
loope
mov
sbb
fdivrs
and
ret
cltd
mov
adc
jmp
cmpsl
adc
mov
repz
lcall
dec
xor
xchg
cmp
add
xchg
subb
call
mov
sbb
ljmp
gs
ds
cmp
pushl
stos
mov
mov
xchg
and
test
inc
xchg
cltd
bound
fcmovbe
pushf
outsb
xchg
lods
inc
adcb
lcall
or
jb
movsl
in
rcl
in
pop
shr
call
adc
push
jp
shrl
pop
aaa
stos
mov
sbb
jo
xlat
ljmp
adc
pop
adc
jmp
mov
push
out
pop
lds
sbb
xor
incl
lret
inc
popf
lock
adc
stos
pop
lods
fimuls
mov
cmpsl
jbe
sbb
test
ret
test
ljmp
decl
mov
fidivs
pop
je
jp
add
out
dec
imull
out
jae
mov
xor
jmp
pop
hlt
aam
and
and
sub
pop
mov
cltd
sbb
jae
jne
ficoml
sar
xchg
fistpl
dec
adcb
test
mov
bound
pop
lods
xor
stos
ljmp
xor
push
rcrb
sub
fsubl
in
stc
pop
add
cmpsb
in
out
leave
call
push
xor
pusha
lahf
shrl
cs
cmpsb
cmpsb
lcall
icebp
aas
jge
call
dec
scas
jecxz
es
or
push
jge
sbb
imul
inc
lds
cmp
ud0
mov
xlat
cltd
dec
mov
mov
and
add
loop
mov
pop
adc
cli
sub
jmp
add
push
inc
dec
cmp
imul
mov
xlat
incl
ror
cmpsb
ds
adc
sahf
or
je
out
inc
cmpsl
sub
in
sub
sar
outsb
loopne
das
pop
mov
jo
and
mov
cmpsl
dec
leave
les
cmc
mov
xchg
loope
lahf
cmp
adc
decl
jmp
sti
imul
push
scas
mov
jnp
pop
push
push
insl
cmp
jne
cmp
pop
jp
das
jle
in
dec
mov
lods
int3
out
shll
jecxz
call
outsl
shrb
cmp
and
mov
jb
cli
lcall
imul
inc
sahf
fists
add
rcrb
scas
pop
shrb
inc
fbld
loope
cmp
lods
lock
push
jno
out
mov
mov
pushf
adc
and
vmovd
incl
ret
jecxz
lret
adc
movaps
fdivrs
test
mov
jle
jg
sbb
sbb
adc
push
cwtl
and
scas
mov
decl
scas
jmp
jns
lock
jno
out
scas
popf
call
xchg
mov
inc
fwait
pop
ljmp
decl
fcmovnu
add
mov
inc
and
jne
outsl
test
xor
leave
aas
cmpsb
sbb
idivl
lock
cld
fsubr
mov
xor
or
adc
cwtl
mov
mov
lds
inc
js
clc
lcall
das
rcr
push
mov
pop
jle
jo,pt
ss
stos
pop
lock
rclb
sub
push
imul
pushl
imul
sbb
adc
mov
cmp
fistpll
clc
and
xchg
test
push
dec
rolb
int3
jne
mov
sbb
jns
lea
ja
cmp
lods
int
pop
push
dec
enter
pop
loopne
test
iret
imul
orl
add
test
mov
xor
sub
cmp
leave
andl
lock
push
shr
sahf
cmc
jb
mov
pushl
test
adc
enter
loope
mov
inc
pop
ljmp
xchg
out
mov
lea
xor
jecxz
cld
outsl
lahf
int
ds
add
mov
add
mov
xorb
notl
push
and
stc
ja
loope
and
push
push
sar
out
dec
enter
aaa
add
leave
sbb
inc
fcoms
cld
jbe
mov
int3
xchg
add
and
sbb
aad
les
fwait
out
iret
test
out
mov
repz
mov
dec
ljmp
mov
test
imul
ljmp
dec
push
shll
mov
inc
rcrb
sbb
xor
fdivrp
mov
and
and
mov
ret
daa
fidivrs
xchg
dec
mov
decl
nop
jo
pop
test
jns
daa
movsl
out
mov
dec
lock
xchg
or
out
mov
clc
or
xchg
shr
mov
mov
mov
popa
push
add
cld
sbb
lea
push
mov
jle
aad
fwait
aaa
ss
out
add
sub
mov
and
fwait
mov
mov
push
sbb
dec
xor
mov
xchg
jbe
push
jmp
insl
repz
adc
or
lods
xchg
loop
mov
out
dec
cld
or
dec
shrb
fstps
out
xchg
sbb
mov
add
ds
sarl
in
dec
mov
decl
loop
cmp
jl
xchg
popf
cmp
sbb
ss
xchg
lods
mov
or
push
lcall
lcall
out
xchg
jns
xchg
lret
adc
pop
aas
arpl
dec
lcall
cmp
adc
or
add
mov
fidivs
mov
push
test
jo
jg
and
mov
mov
mov
and
add
push
dec
lret
call
and
addr16
lock
mov
mov
adcl
lcall
push
call
add
jmp
test
fnstenv
and
push
sahf
dec
lahf
cld
mov
pop
jecxz
xlat
sarl
pop
fdivs
jb
push
movsl
ljmp
pusha
inc
xchg
lds
incl
inc
lret
mov
pusha
add
iret
call
faddp
ss
xchg
mov
or
int3
sbb
pushl
xchg
cmpsb
lods
daa
lods
lcall
mov
push
icebp
lret
add
dec
pusha
mov
std
lods
les
jg
pop
aam
adc
cmpsl
arpl
fcompl
pop
sbb
fcmovnb
xchg
sub
dec
pop
inc
cld
in
xlat
call
cs
call
sbb
sbb
pop
mov
mov
pop
adc
adc
call
sbb
lcall
and
or
imull
push
push
mov
pop
insl
push
mov
fstps
repnz
jmp
dec
sbb
inc
mov
stos
cwtl
jecxz
mov
push
sbb
fidivrs
cmp
rorl
sub
hlt
jns
push
mov
xor
mov
sbb
jle
lret
lcall
cmc
cmc
mov
gs
lock
jno
icebp
pop
mov
call
loope
std
gs
cld
xchg
sub
lds
pusha
xor
in
subb
test
mov
lret
pop
or
mov
add
xor
loope
lcall
mov
aad
cmp
rcll
lea
push
adc
jle
mov
les
out
loop
adc
push
je
add
mov
xor
enter
loop
int
jbe
cld
jg
push
nop
outsb
cmp
jg
jle
lcall
lcall
jecxz
inc
cmp
sbb
ror
xchg
fdivrs
movsb
add
andb
pushl
pop
mov
mov
jg
jle
repz
jae
fimull
xor
pop
fcomps
clc
lcall
add
aam
push
hlt
movsb
jo
mov
ja
push
loopne
test
int3
xlat
test
cmp
mov
sub
jmp
push
mov
orl
add
ret
pushf
ds
cwtl
cmpb
decl
xchg
aam
inc
xlat
mov
jbe
int3
or
xchg
mov
push
pop
sub
incl
cmpsb
adc
ja
test
test
fcompl
xchg
outsb
stos
lock
cmp
in
mov
lcall
ljmp
ss
cmp
fimuls
and
fisttps
push
decl
in
sti
cmc
sahf
and
inc
and
sti
adc
ficoms
std
jno
and
lcall
jp
hlt
rcrb
push
mov
jp
and
jp
and
repz
adc
pushl
xchg
imul
lret
cmpsb
sbb
invd
dec
dec
mov
pop
movsb
sahf
mov
decl
xor
xlat
arpl
movsb
adc
sub
loop
push
dec
mov
and
jns
imul
incl
pop
js
pop
lret
mov
fmull
pushf
mov
mov
adcl
pop
dec
jb
cmp
enter
push
cmp
pop
cmp
outsl
mov
aam
test
shlb
and
fstpl
pop
sbb
ljmp
fstps
imul
mov
and
lcall
jne
and
dec
mov
lcall
repnz
xor
rcl
lods
mov
test
push
jmp
lcall
sub
out
stc
ficomps
fsub
das
gs
ljmp
xchg
rorl
ljmp
cmc
cmp
xchg
orb
pop
lods
jnp
es
mov
iret
jae
aad
mov
scas
clc
mov
and
adc
cmp
jmp
inc
adc
dec
cmpsb
inc
xor
pushl
ret
mov
popf
lea
stc
and
fistl
pusha
mov
pop
mov
shrl
mov
scas
or
mov
idiv
rcll
or
jmp
xor
mov
out
dec
add
incl
mov
mov
sbb
jecxz
loope
inc
dec
paddd
jle
mov
dec
lcall
inc
hlt
xchg
jns
ds
or
dec
pop
sub
cwtl
mov
mov
adc
cmpsl
aaa
gs
adc
mov
jg
inc
jnp
das
push
push
je
popa
mov
addr16
lcall
insb
cmp
xchg
test
daa
jg
es
movsb
std
lock
and
inc
mov
mov
dec
xor
mov
sub
adc
dec
mov
decl
and
js
inc
fadds
cmpsb
lods
pop
dec
je
nop
jmp
negl
push
jmp
rclb
pushf
adcl
pop
pop
icebp
push
std
push
xor
mov
pop
pushf
testb
subb
cmc
ja
pop
hlt
outsl
cmpb
cltd
dec
sbb
sub
imul
jmp
mul
pop
pop
roll
mov
dec
rclb
cld
push
mov
out
jae
xchg
pop
clc
mov
add
in
inc
notl
or
push
sub
decl
out
dec
or
jmp
stos
je
jbe
dec
fucom
popa
mov
cmp
aas
out
fcmovu
or
and
mov
mov
adc
cmp
or
push
fwait
mov
pop
add
sbb
mov
sub
mov
insb
shrl
sub
fcmovnbe
lret
adc
incl
mov
mov
cmc
inc
ret
or
lods
mov
mov
scas
imull
incl
imul
dec
fistps
ret
iret
xchg
test
das
jmp
mov
pushl
mov
mov
ds
insb
xor
pop
and
fmul
push
pop
jg
mov
sbb
pusha
filds
jnp
cmp
ss
or
mov
cld
jmp
jnp
lret
daa
cltd
cmpsb
lret
mov
mov
cmp
jg
ficoml
mov
out
pop
dec
and
mov
movsbl
inc
xchg
addr16
aaa
dec
pop
hlt
lcall
push
add
movsb
push
shll
cwtl
lds
call
nop
jmp
xlat
cmp
mov
push
ss
sub
cmp
mov
cld
jns
hlt
inc
push
into
push
and
cld
mov
cwtl
ss
dec
into
cld
dec
mov
call
mov
cmp
mov
sbb
mov
ret
ljmp
ljmp
mov
mov
js
xor
sub
and
ret
ret
dec
mov
hlt
les
aaa
rep
shl
mov
in
popf
out
aaa
int3
pop
mov
pushl
fwait
push
xchg
xchg
push
xchg
xor
push
loopne
imul
xchg
mov
mov
xor
popa
push
imul
test
mov
addr16
sar
xchg
int3
jb
mov
mov
dec
push
inc
cli
dec
inc
mov
adc
xor
and
push
sbb
incl
fisubrl
inc
popa
lret
sub
push
cmc
inc
or
inc
clc
add
xchg
cwtl
sub
ljmp
adc
pop
sbb
jno
pop
jp
dec
push
adc
outsl
ret
cli
sbb
pop
std
fdivrl
push
or
aaa
sti
fwait
rorb
fwait
lods
push
inc
adc
xlat
decl
fiaddl
or
xchg
adc
cwtl
int
inc
loope
pusha
push
jge
xlat
cmp
jb
out
ret
inc
xchg
or
add
lcall
mov
stos
icebp
out
bound
clc
cmpsb
mov
outsl
ss
lea
ljmp
cwtl
xchg
push
xchg
sbb
cli
cmp
mov
and
pushf
and
inc
pushf
outsl
add
ljmp
into
lds
in
test
push
jnp
lcall
pusha
cmp
mov
add
xor
outsl
and
cmpsb
mov
mov
jmp
cmpb
lock
outsl
push
or
out
outsl
adc
rorb
incl
mov
lcall
rcll
ljmp
xor
call
test
ja
int3
cmp
sahf
out
pushf
sub
jle
icebp
adc
jns
subb
decl
lds
pop
cmp
cld
xchg
push
jo
pusha
or
incl
loop
xor
subl
pop
xor
fidivs
aaa
cmp
aam
cld
pop
adc
pop
push
in
aaa
push
aam
sbb
ds
xlat
dec
add
adc
in
es
int3
mov
hlt
adc
mov
jge
lret
mov
sbb
stos
shrl
mov
xor
dec
into
or
aad
jge
out
jo
int
orl
mov
mov
decl
shlb
mov
jmp
fists
rcrl
jle
jbe
fsts
lods
rclb
push
jmp
adc
and
mov
lret
notl
and
jecxz
decl
pop
or
sub
inc
fwait
jbe
enter
bound
add
mov
dec
mov
cmp
stos
or
xor
ss
sbb
mov
inc
pop
dec
cld
aad
adc
adc
sar
inc
scas
mov
and
jmp
fdivrl
dec
cs
sub
sbb
mov
in
xor
out
pop
pop
add
pop
fs
push
bound
cmp
clc
out
in
stos
jbe
outsl
sub
sub
imul
mov
movsl
or
mov
imul
mov
push
push
jns
iret
test
incl
xchg
ljmp
jecxz
clc
mov
std
subb
insb
mov
sub
inc
add
es
pop
scas
flds
pop
sub
push
jne
pushl
pop
push
dec
adcb
fdivrl
jae
cmp
mov
fisubl
add
pushl
mov
jne
dec
cld
outsb
popf
cmp
push
xchg
dec
notl
jno,pn
cwtl
testb
out
in
or
sahf
jae
add
mov
int
je
mov
add
dec
loop
xorb
push
jmp
imul
fildl
jmp
mov
xor
mov
cld
and
and
and
ljmp
fisubl
push
test
test
fsubr
outsl
push
inc
stc
pop
or
inc
loopne
mov
ss
decl
outsl
cmp
sub
add
out
or
cld
arpl
movb
or
je
xchg
sbb
lret
cld
incl
push
hlt
cmpsl
push
in
fsubl
cmp
mov
lcall
aaa
aam
jle
sub
dec
mov
mov
clc
call
pop
jmp
pushl
mov
test
inc
fsubr
xchg
or
pop
lock
test
push
jp
movsb
push
xchg
ret
xchg
lcall
arpl
mov
pop
mov
aad
or
fldenv
dec
push
incl
ss
sbb
cmp
add
add
into
inc
fs
fmuls
out
cmp
xchg
adc
jmp
cmpb
iret
dec
int
jb
scas
dec
mov
mov
adc
sbb
jbe
push
inc
mov
insl
jecxz
call
inc
int3
and
pop
mov
inc
adc
in
cltd
daa
div
clc
jge
and
pop
or
cld
add
lahf
mov
jle,pt
mov
call
xchg
adc
outsb
mov
jg
add
sub
and
cwtl
insl
imul
jns
inc
mov
add
or
jle
inc
sub
xor
add
test
or
loop
icebp
out
dec
cmp
inc
xchg
lock
xor
and
test
in
jmp
adc
fdivrp
mov
cmp
dec
xor
push
add
cmp
cld
cmp
ljmp
adc
test
mov
push
mulb
sub
and
mov
rcrb
decl
clc
mov
cmp
loope
push
out
pusha
incl
cmp
cli
in
ja
sub
or
repz
aaa
ret
scas
and
jmp
push
jge
sbb
jnp
xchg
xor
mov
enter
push
lock
clc
add
cmpsb
adc
jle
pushf
push
into
xchg
fwait
inc
jmp
jle
jmp
call
mov
mov
push
cli
xchg
or
orb
ret
inc
xchg
sar
fcomip
mov
out
popf
dec
xchg
xlat
push
in
into
das
rcrb
adc
inc
sarl
fs
sbb
dec
cmp
test
jne
jle
in
stc
cmp
repnz
decl
mov
cld
leave
icebp
in
sbb
xchg
or
in
or
aad
out
pop
xchg
mov
lcall
icebp
and
xor
lds
inc
dec
inc
and
addr16
push
addr16
idiv
std
fistpl
push
leave
and
dec
and
xchg
pop
jle
int3
cltd
xor
out
repnz
adc
push
inc
scas
ret
ljmp
inc
daa
sub
cmp
ficompl
mov
jecxz
xchg
mov
scas
or
decl
jg
jb
mov
cmpsl
subb
pop
sbb
jmp
mov
push
cmp
std
mov
lret
arpl
push
fistpl
add
into
cmpsb
in
xchg
ss
mov
loop
pop
xchg
jb
ficoms
add
cmp
out
sub
shlb
repz
filds
ljmp
dec
loop
sbb
adc
sub
mov
dec
andl
add
xchg
fistl
dec
outsl
sub
stc
push
inc
out
adc
pop
sar
popa
mov
xchg
jle
pop
add
pop
push
call
pop
cmp
shll
sub
push
mov
jno
pop
dec
lock
jnp
jnp
ljmp
ljmp
jnp
scas
xchg
pop
loope
add
jg
xor
pop
mov
rcrl
adc
mov
lcall
push
neg
jnp
test
hlt
sbb
cld
inc
cltd
dec
insl
out
cmpb
pop
mov
mov
inc
pushl
or
and
push
xchg
lods
pop
mov
popf
sar
ljmp
push
pushf
insb
pop
pop
xchg
pop
xlat
inc
fwait
cmp
in
push
push
pop
mov
mov
inc
cld
clc
incl
insl
movntps
mov
fucomp
sbb
lret
ret
leave
push
cmpsb
stos
pop
outsl
decl
jmp
andl
sbb
out
insl
insb
cli
or
inc
clc
mov
cmp
incl
call
add
pop
mov
imul
popf
mov
testl
ret
sub
xor
sbb
xchg
jnp
imul
adc
decl
ret
testb
subb
mov
mov
out
js
imul
push
pop
aam
in
pusha
pop
dec
out
cmp
push
ljmp
pushl
push
out
out
in
ret
test
sub
jl
add
sbbl
sbb
push
outsl
dec
inc
cld
incl
inc
int
fsubs
pushf
push
cmp
dec
xchg
jg
mov
fdivrp
xor
out
sub
cmpsl
push
lcall
sbbl
fs
sbb
imul
mov
imul
ljmp
jl
and
mov
loopne
rorb
jg
xchg
mov
dec
xchg
mov
pop
lock
cmp
xchg
ret
dec
mov
movsb
and
roll
mov
aaa
imul
jmp
xlat
repnz
sub
sub
adc
lahf
mov
dec
mov
rcl
int
decl
jb
and
out
addl
imul
call
lret
mov
adc
aas
sub
lahf
and
jg
pop
lahf
mov
mov
arpl
push
mov
daa
lret
sbb
pop
stc
pop
pop
out
sub
lea
popa
pop
cmpl
std
negb
loopne
int3
dec
xchg
sub
mov
push
jp
fsubrl
jno
in
pushl
mov
mov
adc
ljmp
mov
add
and
call
adc
fwait
nop
xlat
repz
pop
and
fimuls
in
add
add
sbb
enter
pop
sub
jl
outsb
cmp
xchg
lock
jg
adc
divw
and
aas
inc
cwtl
sbb
scas
into
nop
ss
sub
sbb
or
sub
gs
ljmp
inc
lods
rclb
adcl
mov
xchg
jmp
push
das
lock
loopne
ljmp
sahf
adc
into
jae
mov
pop
sbb
sub
sarb
lcall
pop
repz
mov
mov
aas
arpl
adcb
lcall
enter
mov
mov
or
and
pop
add
cltd
jo
scas
ficomps
mov
mov
cmp
orl
dec
jmp
aaa
cld
incl
mov
arpl
adc
int3
sub
fistps
cmp
mov
and
mov
and
mov
mov
xchg
nop
mov
hlt
cmc
fsubrs
sub
sub
cmpsl
pop
das
nop
rorb
cwtl
xor
jns
sahf
sub
decl
dec
aaa
jmp
in
in
outsb
fldl
inc
shl
pop
push
insb
jge
pusha
es
sti
mov
inc
decl
into
lds
dec
mov
lret
xor
adc
call
cwtl
add
pushl
lcall
or
clc
cld
push
lcall
ljmp
mov
fnstsw
mov
loope
xchg
pop
fcoms
int3
cs
sub
push
pop
adc
das
loopne
stos
xlat
and
fsubrs
aam
inc
sbb
data16
sar
push
jmp
fs
imul
jno
fcomip
test
sub
ss
enter
jnp
andl
add
xchg
lcall
sub
loope
sbb
scas
dec
std
pop
pop
lahf
insl
pop
dec
mov
repz
and
lcall
mov
iret
outsl
outsl
pop
or
sub
inc
fwait
cmc
or
sbb
decl
dec
sbb
insb
insl
aam
mov
xchg
lds
insb
and
rcrb
adc
lcall
jno
and
inc
jo
push
stos
jbe
and
fcompl
int
mov
mov
mov
sahf
mov
mov
mov
jnp
mov
js
lds
ljmp
test
leave
sub
or
inc
dec
sbb
mov
gs
shll
sub
adc
ficoms
in
lods
pop
aas
and
add
lods
sbbl
incl
xorb
lods
jns
xchg
push
jecxz
mov
inc
add
lret
push
loope
xchg
lcall
or
test
or
mov
sbb
or
xor
divb
jg
fnstcw
fcomip
faddp
aad
adc
push
xor
data16
rolb
test
adc
out
jg
shrl
out
imul
fdivrp
mov
pop
outsl
push
jg
enter
xor
dec
popa
bound
mov
out
mov
int3
rcrl
sbbb
cld
push
lds
xchg
jo
into
mov
pop
decl
add
lods
inc
sbb
and
mov
adc
adc
pop
incl
outsb
dec
jmp
mov
mov
mov
cli
push
movsl
sahf
std
cmp
mov
aad
iret
repz
cmp
xor
xor
jge
and
xor
pop
inc
mov
sbb
iret
sbb
and
test
imul
incl
imull
cmp
xchg
bound
adc
or
sbb
call
incl
push
add
pop
fistpl
push
xchg
dec
cmpsb
aas
jle
dec
lods
sub
aas
cwtl
mov
cmpsl
mov
lcall
cli
in
daa
sbb
and
push
add
adc
mov
mov
loop
jo
ljmp
sub
jnp
jmp
scas
loop
movsb
xor
add
pop
add
jl
mov
stos
incb
je
xor
inc
bound
fdivrp
push
in
ja
scas
fldt
mov
fdivr
shlb
pop
data16
cmp
stc
sub
insb
fucom
inc
popa
sub
clc
xchg
fwait
mov
je
out
mov
cmp
ljmp
mov
imul
inc
sti
data16
jecxz
jno
sbb
and
mov
or
ficoms
adc
fwait
mov
aaa
pop
idiv
ljmp
mov
add
mov
mov
dec
xorb
movl
ljmp
adc
lcall
lcall
and
cmp
inc
and
imul
mov
push
addl
inc
push
push
popf
shrb
dec
mov
xlat
mov
pop
inc
movsb
lea
out
pushl
cmp
sub
ljmp
dec
push
add
fists
inc
cmp
sbb
aas
pop
ds
mulb
loop
aad
push
call
xchg
leave
fcmove
idiv
pushl
sub
out
into
sbb
repz
mov
inc
adc
insb
push
flds
sub
pop
cli
jecxz
lock
and
and
lea
lds
incl
push
sub
in
jge
add
fsubr
mov
pop
push
mov
sarl
cmp
call
loopne
mov
daa
loop
ror
and
or
clc
movsl
pop
jo
into
daa
lret
cmpsl
in
jmp
test
les
and
mov
inc
pop
stos
cmp
mov
decl
and
pop
ss
xor
xchg
fldl2t
jb
sbb
and
cmp
jg
ljmp
add
mov
sub
repz
sub
mov
call
jmp
mov
out
sti
shlb
jmp
jmp
or
jb
mov
sahf
jno
aad
iret
or
add
sub
pushl
aad
popf
call
iret
jbe
lret
cmpsb
rorl
pop
test
or
jmp
pop
jmp
mov
mov
jp
dec
mov
jecxz
dec
sub
push
negl
inc
mov
jmp
or
cmpsb
sub
popf
inc
mov
nop
and
jg
sahf
shl
call
cmp
pop
pushf
jg
jle
jmp
pop
dec
or
add
adc
cmc
aad
add
mov
hlt
push
cmc
mov
out
xorb
lea
xor
sahf
lock
mov
mov
shlb
das
lcall
xchg
outsl
adc
bnd
fcompl
push
shll
lods
sahf
mov
popf
pop
aad
inc
inc
inc
jl
cmpsb
mov
adc
in
lahf
aam
gs
repz
jb
repnz
jle
mov
sbb
jne
enter
cli
add
and
adc
xor
lcall
cmp
test
lret
jae
dec
jne
movsb
dec
fs
xor
sub
jmp
mov
sbb
xchg
sbb
dec
jns
popf
das
push
fcoml
mov
decl
nop
int
cmp
repz
adc
adc
jmp
in
pushl
xchg
jle
lods
nop
sub
ret
lods
out
leave
mov
pop
imul
jmp
icebp
and
jbe
in
pop
and
jnp
lcall
incl
xor
lcall
lcall
mov
sbb
mov
out
push
dec
aaa
add
xchg
leave
xor
incl
adc
hlt
loop
push
and
push
adc
inc
push
mov
jl
ljmp
fstps
push
mov
push
mulb
jle
inc
jmp
int3
pop
and
mov
dec
jle
inc
or
sbb
test
mov
pop
or
push
std
pop
jae
pushl
rorl
push
jno
push
add
adc
sub
inc
jns
je
out
decl
shl
dec
xor
fisubrs
scas
out
adc
call
fildll
push
sbb
out
sbb
idiv
shll
and
lea
popf
pushl
std
data16
rolb
repz
jb
in
notl
mov
mov
xchg
nop
pusha
xor
mov
incl
negl
push
jb
test
lcall
sub
mov
fisubs
loopne
xor
iret
out
imul
insl
decl
sbb
div
mov
sbb
loopne
pop
add
mov
sub
pop
pop
jo
lods
jg
movsb
ljmp
aad
scas
add
lret
add
cmpsb
aaa
cmp
xor
jmp
mov
pusha
sub
cli
xchg
mov
or
pop
cmpsb
in
xor
sbb
out
xchg
jbe
adcl
pop
scas
sti
pushl
call
insl
or
lahf
jecxz
mov
push
or
sub
cmp
lcall
sub
jle
scas
fsubl
fisubs
test
movsl
lcall
movsl
dec
or
add
and
les
or
lock
jl
mov
ljmp
jg
mov
ret
clc
cmp
call
lret
shl
cli
out
mov
popf
test
bound
push
mov
movsb
sub
addr16
dec
mov
es
mov
jle
cmp
push
and
fstp
cmp
mov
sbb
sti
gs
mov
sub
ljmp
jl
mov
leave
or
ds
pop
jmp
xchg
ss
insb
in
pop
mov
outsb
cli
lcall
pop
jl
shlb
mov
push
adc
les
mov
adc
scas
mov
xor
int
push
mov
mov
lds
jo
lea
cs
test
pop
std
ljmp
xlat
minps
lret
xlat
adc
shrl
adc
cmc
das
cld
sub
jo
data16
addl
inc
push
pop
pop
adc
nop
pushl
jl
and
je
dec
sbb
pop
mov
test
decl
jo
push
mov
pop
inc
jbe
sbb
dec
mov
sub
mov
lcall
and
into
mov
pop
in
stos
test
fwait
lds
loope
into
lock
add
dec
xor
pop
jo
fidivrs
cmpsb
inc
stos
out
mov
jecxz
mov
out
movsb
push
bound
jl
decl
dec
and
jnp
orb
jns
loope
ret
repnz
in
sub
in
sbb
jg
xor
call
pusha
movsl
xor
adc
cmpsb
in
test
cmp
in
mov
jmp
add
stos
cs
ljmp
call
cmp
add
mov
sbb
pop
insl
jmp
out
inc
fs
xchg
aaa
xchg
shlb
inc
push
ds
pusha
jl
aad
test
mov
sub
mov
loop
xchg
or
incl
aam
and
ljmp
call
dec
jnp
push
addl
cmp
pop
push
adc
aaa
ss
lock
xor
call
fimuls
lahf
xlat
push
mov
cmp
outsl
divl
mov
mov
lods
jo
sbb
mov
cmp
lcall
ret
sahf
jb
pop
sub
mov
lods
ljmp
repnz
div
lcall
mov
sbb
int3
cmpsl
shrb
das
jg
mov
push
fxtract
mov
rclb
inc
xchg
aaa
jbe
jb
xchg
out
inc
fisttpl
push
push
push
add
mov
addr16
or
jg
sub
or
jge
clc
mov
test
jg
jg
add
mov
mov
fcompl
dec
or
add
jae
cld
pop
cmc
add
jmp
mov
jnp
js
fdiv
pushf
jle
pop
clc
cmp
pop
xlat
shr
push
stos
subb
lahf
das
and
or
xchg
scas
cmp
add
int3
rcrb
push
stos
cmp
cmp
in
scas
xchg
idivl
out
adc
incl
aam
mov
sub
jg
lret
sbb
movsb
push
sbb
add
jmp
jmp
cmp
stos
rcrb
and
sbb
cwtl
call
add
ljmp
mov
out
jg
mov
dec
adc
pop
out
mov
jle
dec
movsl
not
mov
push
incl
scas
je
ja
in
iret
dec
scas
and
jl
movsb
cwtl
insl
mov
std
jle
js
aaa
push
and
daa
jg
out
outsl
in
pop
xor
cmc
jmp
loop
add
nop
inc
test
pop
sbb
or
mov
pop
cmc
pushl
cmp
jo
cs
jno
int
adc
push
loopne
cli
and
lcall
sub
outsl
sub
daa
xorl
lea
and
jp
inc
mov
push
rcl
int
pop
jle
push
repz
jge
fs
or
insl
adc
rcrb
push
lcall
mov
lret
aaa
cmp
scas
sbb
test
js
adc
push
stos
mov
fdivs
jns
mov
into
mov
xchg
mov
fsubr
sub
jb
jae
mov
push
jno
out
cmpsb
mov
jg
sbb
push
fnsave
dec
mov
cld
push
or
into
aaa
sub
xor
in
sbb
imul
push
mov
add
xorl
xchg
testb
xchg
cmc
out
gs
ljmp
jmp
push
test
mov
dec
push
add
mov
pop
call
inc
outsl
jmp
call
int3
jbe
pop
sbb
sahf
ret
and
lods
sbb
outsl
or
or
dec
push
inc
pop
fld1
sbb
sbb
push
insb
and
outsb
mov
mov
pop
sbb
push
jmp
ret
inc
dec
test
jl
cs
test
jb
mov
cmpsb
mov
filds
jmp
mov
ljmp
mov
pop
jnp
ret
sub
movsb
pusha
iret
int
xchg
dec
ret
mov
and
lock
xchg
lcall
xlat
dec
push
push
sub
loopne
push
xchg
push
or
push
in
int3
inc
mov
xchg
data16
lcall
pushl
stos
aam
nop
inc
sbb
sbb
cmpsl
cmpsl
push
mov
push
mov
in
in
sbb
call
push
pushl
mov
and
call
xorl
xchg
add
outsl
cli
jmp
add
sub
fs
call
call
inc
ljmp
and
in
loop
testb
repz
nop
dec
mov
cmp
xchg
test
repz
adc
call
je
mov
cmp
mov
daa
sub
loopne
in
in
loop
jno
xchg
or
mov
das
leave
jp
aad
jns
filds
inc
sub
mov
mov
pop
add
sbb
icebp
dec
cmpsb
test
push
fwait
or
push
fdivr
ljmp
jno
daa
dec
addr16
sahf
dec
enter
dec
mov
shll
xchg
push
add
jmp
mov
std
scas
clc
lcall
loope
mov
aam
push
sub
repnz
cld
dec
xchg
mov
lcall
cmpsb
adc
jge
dec
and
fidivrl
mov
sub
in
testl
fadds
jmp
sbb
or
lea
jp
xchg
jo
adc
or
jne
pop
iret
notb
insb
sub
pusha
lcall
dec
scas
sbb
test
dec
mov
add
add
das
or
xchg
cli
aam
jmp
mov
mov
ret
repz
fwait
mov
inc
aas
mov
outsl
adc
xchg
push
inc
xor
xchg
push
stos
mov
in
push
ds
jmp
jbe
and
push
testb
pop
mov
sub
loop
jmp
or
mov
cld
mov
into
out
mov
js
inc
scas
cmp
mov
xchg
xchg
cmc
outsb
adc
mov
cmp
sar
clc
mov
push
nop
mov
mov
sbbb
pushf
pop
movsb
push
test
ljmp
mov
pop
ljmp
mov
add
scas
cmp
sbb
push
std
mov
bswap
sub
jb
mov
sub
fidivrl
add
lcall
test
jb
loopne
fiaddl
mov
inc
imul
fdivrp
incl
lds
scas
mov
sub
mov
call
fdivr
and
in
push
xchg
mov
push
call
push
in
xor
loop
pop
sbb
test
repz
sub
xor
leave
incl
js
cmp
pop
mov
sub
jo
das
shll
mov
cmp
in
es
sbb
mov
js
sti
jo
mov
pushf
jg
mov
loope
out
mov
sub
and
je
fnsave
rolb
dec
clc
ljmp
sbb
lret
push
mov
mov
lcall
jns
inc
push
into
insb
stc
in
xor
outsl
xchg
ror
xchg
jo
jbe
sahf
pop
lock
incl
adc
jmp
pop
mov
stos
ret
test
add
aam
mov
xchg
mov
lahf
cmp
std
push
push
pop
sbb
imul
out
rcll
xor
push
mov
pop
mov
lds
fsubl
es
mov
jne
dec
jmp
js
jecxz
lods
sbb
ss
pop
inc
lods
push
jp
dec
cs
in
push
adc
inc
cld
xchg
jl
clc
lcall
ljmp
xchg
js
aaa
inc
xor
dec
push
std
incl
mov
and
push
xchg
xor
mov
xchg
push
jmp
xchg
cld
jmp
mov
repnz
cmp
inc
ljmp
mov
adc
or
cli
sbb
mov
aas
push
clc
push
fisubrl
dec
outsb
xchg
xlat
push
cmc
mov
incl
jno
or
fwait
jl
push
inc
jle
aad
in
ljmp
clc
inc
jecxz
into
add
push
xchg
fsubrs
ljmp
pushw
daa
js
incl
icebp
popf
pop
adc
sbb
ret
cmpsb
call
lcall
loop
popa
jecxz
outsl
push
pop
push
in
shr
cmpsb
sti
imul
fimull
dec
sub
push
pop
jmp
insl
fnstenv
scas
shll
mov
push
pop
stos
lods
add
or
out
movsb
out
jnp
or
mov
xor
jnp
fs
jns
pop
std
call
mov
aad
adc
loope
lcall
leave
shl
cmp
decl
xor
into
adcl
in
add
inc
out
mov
sbb
xchg
push
orl
mov
sub
xor
and
inc
in
imul
or
pop
push
decl
fnstsw
es
cmc
lahf
adc
inc
xor
xor
dec
in
out
test
sub
mov
sub
mov
fnstsw
jg
push
pusha
jp
cld
inc
lahf
adc
inc
xlat
insb
enter
xor
pop
sar
cmp
in
add
inc
or
xor
add
int3
push
inc
cmp
jno
xor
test
push
stos
mov
jg
add
jmp
cmp
das
adc
push
into
ljmp
mov
jg
insb
lret
dec
or
pop
add
jne
data16
jg
bound
jns
push
lock
aas
push
movsb
push
dec
fldl
mov
les
adc
or
mov
into
int3
sti
out
das
mov
inc
sbb
push
or
lret
call
pop
xchg
movsb
mov
jge
cmp
icebp
mov
cmp
sbb
imul
lods
rorb
call
out
mov
push
xor
mov
les
and
lea
jmp
or
mov
jl
push
sbb
inc
pop
incl
push
pop
mov
je
sarb
sarl
pmullw
jmp
and
pop
cltd
mov
stos
fbstp
test
pop
cs
fstpl
addr16
shll
rcr
ret
es
xchg
mov
or
sbb
rorl
outsl
mov
push
push
inc
lcall
cmp
mov
fildll
and
notb
xor
mov
or
pushf
imul
adc
add
mov
xchg
out
into
bound
sbb
cmpb
pushl
mov
inc
mov
add
movl
mov
es
int3
incl
js
es
add
test
or
popf
dec
add
sbb
call
xchg
je
push
and
mov
push
ljmp
pop
mov
incl
and
mov
add
loope
cs
mov
lcall
int3
mov
dec
xorl
ret
pop
xchg
aaa
cs
pushl
jo
frstor
fisttpl
ja
pop
iret
insb
and
xchg
dec
shlb
jg
lods
jnp
xchg
push
inc
test
add
jno
int3
jl
add
loope
loope
ja
pushl
inc
cwtl
inc
and
pop
fmull
push
or
sub
add
sub
jae
and
sbb
mov
decl
xor
incl
or
cmp
adc
aam
push
dec
ja
and
fldcw
mov
xlat
ljmp
mov
jl
or
fdivs
int
aas
ja
mov
test
sti
mov
lahf
cmpsl
xchg
cmc
mov
xchg
add
xchg
aaa
std
outsl
adcb
loope
pop
and
loope
mov
push
or
sar
push
push
enter
clc
cmpb
loope
or
mov
iret
pop
notb
rorl
cwtl
sbb
call
cmp
loop
xlat
dec
fldt
fwait
sarb
sbb
repz
call
call
jnp
movsl
or
and
fs
dec
jne
insl
and
cld
mov
hlt
mov
adc
int
cmp
jne
aad
sub
xchg
xor
pop
inc
cmpsl
jl
sub
or
push
xchg
lock
ss
jmp
add
sbbb
mov
in
cmp
decl
mov
inc
mov
adc
add
xor
mov
lcall
add
insb
fisubrl
notl
push
mov
bound
dec
push
pop
sub
mov
cwtl
pop
mov
leave
nop
rclb
clc
incl
jle
test
pop
fisubs
and
mov
pop
in
popf
xor
das
adc
jns
push
xor
mov
sub
and
pop
lea
aam
inc
ljmp
insb
xor
or
rol
sub
lea
sub
arpl
xchg
sarl
mov
add
jg
pushl
pop
jno
cmpsl
ja
jl
push
scas
popl
stc
xor
fidivl
out
mov
fmull
test
repz
or
or
xor
fdivr
jg
xchg
lret
adc
testl
fidivs
decl
jp
lret
nop
cli
cmp
pop
loope
ja
je
mov
cwtl
repz
or
adc
decl
test
jle
scas
inc
inc
mov
rcl
dec
pop
ds
jb,pt
shll
and
aas
mov
gs
inc
pop
fdivr
jo
jecxz
call
inc
cmp
xchg
lahf
push
cmp
dec
in
lret
or
fwait
andl
or
push
sub
adc
xor
mov
ljmp
popf
ret
ret
cmc
mov
push
and
movsb
aam
xor
pop
movsl
out
mov
push
cld
call
mov
push
jns
add
scas
and
mov
mov
test
xchg
pushl
sahf
in
dec
daa
push
push
out
scas
imul
push
clc
ja
incl
mov
sbb
sbb
aas
cltd
test
mov
jl
dec
xor
cmpsb
or
adc
je
mov
test
and
pushl
in
addr16
pop
ret
outsl
in
push
movsb
insl
shrl
je
pop
lcall
incl
add
cmpsb
pop
clc
add
jae
into
push
jb
push
in
dec
pop
mov
fwait
push
jge
sarb
sbb
lcall
jmp
rcrl
xchg
js
fcomps
pop
cmp
mov
jno
add
cmpsl
push
xchg
fimuls
cltd
xchg
insb
call
sub
std
and
adc
cmc
push
push
lock
flds
inc
rcrl
xlat
in
fcomip
pop
push
xchg
rorb
adc
pop
adc
inc
jmp
pop
shr
lods
sub
push
jbe
xchg
out
aam
movsl
sub
push
cmp
fninit
scas
sub
sbb
rcll
sub
jg
loope
sub
shlb
cltd
pop
adcb
mov
add
ret
loopne
ljmp
sub
jno
sti
aam
lret
push
sub
lret
cmp
mov
mov
dec
subb
xchg
into
or
into
jp
pop
inc
or
arpl
fnstenv
pop
inc
sbb
jae
add
loope
sub
cld
push
dec
xlat
stos
shrb
fucomp
jmp
jl
ja
aas
add
jnp
mov
jnp
sub
sar
jg
mov
pop
cwtl
dec
inc
jl
fdivp
push
xchg
dec
mov
mov
mov
mov
popf
cmpsb
lock
sub
loope
pusha
movsl
push
shlb
lock
call
ljmp
inc
dec
cmpsb
loop
sub
cmp
add
lcall
cmp
sub
jne
push
mov
int
icebp
mov
loopne
mov
call
xor
pushf
ret
cmp
add
clc
jge
aad
cmp
jbe
inc
inc
mov
pushl
sub
mov
mov
pop
mov
lcall
daa
inc
dec
out
push
mov
icebp
lcall
mov
je
mov
inc
dec
decl
and
fidivs
popf
mov
inc
cmp
cwtl
inc
lahf
clc
mov
lcall
cmp
sbbb
sub
mov
dec
lock
lds
mov
adc
ja
psllw
int
nop
mov
mov
pushl
insl
pushf
outsl
push
adc
and
jecxz
mov
inc
push
jo
jmp
adc
xor
cmpb
mov
mov
cmp
mov
cmp
call
xor
imulb
xor
xchg
js
xor
lret
in
cli
jmp
jne
test
inc
stc
mov
jp
push
adc
fistps
sbb
mov
shl
hlt
sub
call
shll
lcall
scas
sbb
xchg
lods
and
mov
pop
jecxz
mov
shl
inc
fs
fisttps
clc
out
fimuls
jle
push
xchg
mov
adc
int
add
cmp
out
fdivrs
ret
and
push
sbb
outsb
loopne
mov
sbb
dec
gs
hlt
jmp
xchg
mov
test
inc
adc
or
mov
pushf
pop
adc
insb
fucomip
test
notl
std
outsl
stc
cmp
test
cmc
loopne
and
std
jmp
fmul
aam
fstpt
aam
sub
xchg
ret
fcmovb
adc
inc
lret
sbb
xchg
push
sbb
sub
mov
or
mov
call
daa
and
push
xor
fisttpll
mov
imul
dec
lods
xchg
test
test
lcall
dec
jmp
in
adc
lcall
mov
movsl
int3
xchg
add
es
aad
pop
mov
mov
mov
and
xor
fsubrp
daa
sbb
stos
dec
test
add
les
js
adc
ljmp
divb
mov
and
inc
and
or
adc
jnp
ret
jns
decl
out
and
daa
dec
pop
adc
clc
push
jbe
loope
enter
xchg
xchg
fdivr
call
mov
imul
lret
test
inc
out
pushf
lods
dec
pop
mov
mov
or
aaa
test
daa
out
stos
aaa
outsb
cwtl
mov
dec
push
add
inc
cli
repz
mov
sub
pop
rcr
mov
int3
ljmp
jb
mov
push
scas
out
xlat
sbb
loope
enter
xlat
lea
mul
push
dec
inc
adc
int
popa
bound
fnstcw
cli
aam
addb
ljmp
jg
pop
cmc
popa
clc
fistl
popf
xor
jno
movsl
nop
and
cld
jg
ljmp
lea
sub
mov
decl
in
or
data16
xchg
shl
add
xchg
lock
mov
pushl
sub
or
sti
add
inc
xchg
inc
rcll
dec
xor
and
jg
dec
sbb
dec
pop
cld
adc
mov
repnz
call
mov
div
sub
out
mov
xor
ja
dec
std
xor
pop
std
sbb
loop
push
cmp
fisubrs
ret
adc
and
into
adc
decl
xor
push
inc
push
push
lret
loop
xchg
loop
daa
enter
inc
es
ret
sbb
fisttpl
cmpsl
sub
hlt
decl
data16
mov
in
sbb
and
jns
adc
dec
repnz
sub
mov
enter
and
jmp
movsb
mov
mov
jbe
insl
sbbb
ljmp
mov
and
lods
jne
cld
jp
outsl
syscall
mov
out
adc
push
push
lret
and
push
test
or
jmp
sub
decl
test
jb
jecxz
or
or
push
scas
clc
ljmp
jo
push
sbb
cltd
mov
movsb
aas
decb
adc
jg
out
push
in
inc
loop
mov
insl
rorb
dec
rclw
mov
add
imul
arpl
inc
in
cmp
mov
out
jmp
xchg
out
cli
mov
fistps
sarb
jmp
jl
cmpsb
ljmp
mov
mov
std
cmp
pusha
xchg
imul
jg
xchg
sti
cmpsb
sbb
pop
lret
mov
xlat
cld
movsl
outsb
add
inc
mulb
jp
jnp
mov
imul
test
sti
xor
insb
out
aas
add
loopne
aad
or
lcall
jmp
mov
insl
sbb
jo
lcall
jg
in
aas
xor
int3
jb
movsb
mov
adc
xor
je
ss
sub
fsubrs
imul
mov
sbb
jecxz
and
jp
cmpsb
dec
rol
xor
add
mov
push
das
adc
pop
pop
lea
mov
mov
jmp
fwait
inc
repnz
nop
push
fisubs
jb
jno
mov
test
fmull
and
lock
sar
std
sub
inc
mov
ret
jl
sub
mov
call
ret
fisubl
fistpll
dec
or
lcall
xchg
sub
xchg
cmpsl
das
lock
dec
inc
in
jno
fwait
sub
xchg
pushl
sbb
stc
shrl
cmp
insl
xchg
jp
popa
filds
sbb
in
scas
push
jb
movsb
pushl
mov
cltd
jle
adc
inc
rolb
bound
stc
scas
jg
lcall
das
dec
ja
dec
out
push
sahf
jne
jge
jnp
iret
sbb
pushl
subl
popf
lds
test
add
pop
mov
mov
and
jo
idiv
incl
dec
mov
loop
cmp
lret
dec
jns
inc
push
in
cmc
lret
decl
sub
and
jle
mov
dec
add
loope
arpl
jg
xchg
and
dec
xor
repnz
mov
pop
inc
jmp
jle
rcrb
aad
call
pop
push
xchg
repnz
nop
push
pop
sarb
adc
lret
mov
jae
js
lods
cli
lock
push
gs
push
push
sahf
and
mov
lret
and
mov
lcall
rcrb
test
ljmp
pop
out
arpl
out
stc
test
popl
insl
mov
xor
lcall
dec
out
add
inc
add
jnp
cmp
fdivs
into
cltd
cmc
fstpl
mov
pushf
fsubrl
cmc
or
popf
jae
ss
bound
or
jo
add
mov
ret
mov
aad
lock
pop
call
xchg
loopne
imul
rcr
test
repz
push
adc
sahf
out
push
or
cs
je
or
jmp
ficoms
lock
sub
cmp
xor
add
and
in
call
mov
adc
add
lds
outsl
xchg
mov
sahf
xor
cli
jg
in
sub
enter
sub
in
mov
ja
mul
jge
test
xchg
repnz
mov
push
add
hlt
mov
xor
andl
addb
scas
ds
inc
pushf
jmp
loopne
cmpsl
pop
dec
sub
lock
std
and
stc
out
ja
xchg
sbb
or
cwtl
pop
jl
inc
js
ds
adc
mov
in
aaa
mov
mov
ss
dec
mov
aas
inc
push
xlat
mov
repz
and
push
cld
xchg
call
xchg
jo
push
fwait
cltd
sbb
jmp
jae,pt
jge
cmp
add
das
aas
inc
cmp
dec
adc
pop
dec
pusha
sbb
sbb
adc
fcoml
push
inc
mov
or
decl
insl
adc
shl
pop
ja
xor
mov
lds
pop
add
pop
out
repnz
push
adc
pop
xor
sbb
xor
fs
or
mov
xor
dec
mov
imul
jns
inc
loopne
nop
xchg
push
out
stos
pop
and
or
subl
loopne
jle
call
xchg
pop
pop
fnsave
adc
imul
mov
movsb
cltd
xor
xchg
xchg
decl
nop
cmp
jmp
xlat
cmp
and
push
push
and
mov
decl
dec
pop
insb
enter
jge
xor
popa
pop
jmp
add
xchg
adc
ljmp
cmpl
lds
jg
ljmp
mov
imul
jns
inc
sub
aas
aas
in
lcall
mov
lret
test
jle
fs
mov
dec
testl
add
push
in
and
and
inc
pop
enter
mov
jns
incl
push
cmp
in
add
xor
lret
xor
clc
jg
test
mov
push
pop
ss
loop
ds
push
sbb
ja
sbb
xor
mov
xchg
and
outsb
mov
pop
dec
cli
add
mov
sarb
jmp
js
aad
insl
dec
or
ficompl
inc
xchg
test
test
adc
jmp
push
cs
lahf
sub
hlt
inc
mov
stos
mov
out
movsb
jb
or
jmp
movsb
mov
inc
adc
mov
fstl
movsl
mov
xchg
jmp
aaa
ds
xor
sbb
sbb
or
mov
cmpsl
imul
mov
cwtl
cmpb
jno
xchg
lret
push
inc
cs
mov
stc
test
enter
ljmp
jnp
lods
shll
adc
sbb
inc
mov
loopne
or
jbe
pop
xchg
mov
std
jle
xchg
repz
outsl
sbb
dec
or
mov
cld
jg
xor
in
and
xor
fidivrl
sbb
push
adc
scas
lods
mov
dec
lret
imul
das
cli
ljmp
push
mov
mov
hlt
sbb
dec
ljmp
data16
out
loopne
jmp
or
jb
mov
xor
push
mov
fxch
push
xchg
mov
pop
sbb
mov
mov
mov
rclb
and
stc
cld
andb
or
nop
lahf
lcall
cli
jno
pop
fxch
dec
stos
std
inc
or
sub
ljmp
pop
pushf
je
test
and
sub
movsb
mov
outsl
cltd
or
push
jg
incl
aad
pop
movsb
mov
movsb
sub
jnp
cmpsb
outsl
test
and
incl
pop
push
adc
stos
ret
mov
addb
rol
outsb
mov
mov
or
call
pop
mov
rcl
fiaddl
popf
das
dec
mov
ja
jg
cmp
in
pop
lahf
and
js
xchg
sbb
aaa
sub
jg
jmp
out
or
push
jge
mov
xchg
sbb
in
mov
decl
cmpsb
sahf
xchg
mov
lds
mov
stc
mov
push
fbstp
jmp
jge
test
sbb
imul
data16
unpckhps
je
pop
sub
mov
in
cmp
and
repnz
jmp
push
xchg
fwait
push
cmp
in
jbe
clc
sti
es
mov
jo
jae
xchg
push
and
enter
push
cld
push
dec
mov
mov
adc
push
ljmp
clc
dec
fstpt
shlb
cli
adc
js
inc
cmp
aad
ljmp
ja
stos
xchg
pop
stc
into
in
xor
or
xor
pop
mov
dec
jg
dec
mov
mov
mov
xchg
jmp
dec
out
pushl
mov
or
arpl
cmp
call
pop
mov
mov
xchg
enter
movsl
sti
pop
mov
jne
push
sar
ror
insb
icebp
movsl
out
clc
fisttpll
insl
fs
sbb
jle
enter
jge
jp
sbb
outsb
mov
inc
inc
outsb
jno
ja
lds
xchg
dec
dec
push
shl
aaa
jp
stc
nop
ret
or
jmp
sbb
xor
jle
loop
pop
inc
imul
mov
decl
jns
stc
das
loop
mov
inc
lods
lods
shr
ja
fwait
push
out
or
xchg
fwait
sub
aaa
mov
aas
sub
jae
jnp
inc
ret
shl
xor
jo
push
push
gs
dec
mov
ljmp
mov
dec
les
icebp
sbb
mul
pop
pop
outsb
cld
aam
pushf
pop
mov
add
decl
stos
pop
jle
in
mov
ss
push
xor
mov
mov
fildl
jo
or
sbb
ja
cwtl
lea
mov
or
push
repz
add
sti
cmp
ret
incl
jmp
or
pushf
loopne
in
pop
sbbb
and
jp
dec
jl
cmp
pushl
mov
mov
cwtl
jnp
fdivs
and
add
aam
shrb
push
orb
lret
enter
fisttps
push
jecxz
in
stos
or
cmp
jp
inc
xchg
cmp
mov
xchg
dec
in
subl
jle
decl
inc
out
fcoms
pop
add
repnz
mov
stos
adc
inc
loope
and
shlb
jmp
int
dec
insl
lock
das
push
rclb
outsb
int
mov
mov
dec
push
sbb
sub
push
les
cmp
ljmp
or
scas
lcall
mov
and
bound
sbb
test
mov
stc
cltd
nop
loope
clc
divl
jmp
pop
aad
cmpsb
mov
ljmp
and
std
imul
mov
jo
lods
mov
mov
cld
mov
mov
data16
mov
insb
inc
cmc
call
movsb
add
ret
mov
in
mov
pop
pop
cwtl
loope
rorl
jg
div
add
mov
adc
dec
adc
add
scas
fldt
cs
arpl
fnstcw
mov
fists
pushf
sub
xlat
aad
xor
mov
xor
arpl
out
imul
aas
xchg
jne
pop
repz
pop
jg
cmpsl
push
sub
or
das
addr16
call
adc
addr16
dec
mov
in
and
hlt
sub
stos
mov
fsubrl
aaa
hlt
xchg
mov
out
jg
decl
or
inc
and
js
pop
lret
xchg
aaa
repz
pop
add
out
push
and
mov
call
and
or
xor
push
mov
out
insb
dec
jmp
add
ja
xchg
mov
loope
xor
jo
mov
jge
pushf
dec
push
sub
lahf
cmp
push
push
mov
decl
lock
inc
dec
mov
dec
and
jnp
sub
inc
decl
adc
cwtl
pop
xor
inc
inc
jg
jg
scas
pop
jno
dec
jmp
call
inc
int3
xchg
push
and
mov
xchg
pop
stos
mov
and
jge
pushl
shlb
repnz
dec
or
push
mov
dec
cmp
add
adc
loop
dec
fstpt
jae
pop
fidivrl
and
imul
sar
das
nop
xlat
es
into
jg
add
cwtl
jns
filds
sbb
jg
fmull
cmc
inc
xchg
cmp
jl
mov
cltd
cmp
jo
dec
ljmp
sub
mov
mov
adc
mov
in
inc
jmp
xlat
mov
incl
inc
xchg
sbb
or
pop
leave
pop
jmp
adc
dec
mov
dec
sahf
lods
mov
stos
cltd
adc
cmp
outsb
pushf
lahf
xor
lock
inc
cwtl
insb
pop
inc
hlt
xlat
loopne
incl
ret
jae
test
hlt
push
push
pop
adc
lds
push
outsl
sbb
out
and
decl
xor
pop
test
jl
jne
ljmp
bound
pop
push
es
decl
outsb
xchg
push
mov
mov
insb
shrb
jnp
mov
sub
push
lret
ljmp
aam
sbb
mov
shrl
lret
push
rol
ljmp
push
or
fdivr
decl
test
or
pushf
xor
mov
es
add
rclb
jmp
lahf
pusha
pusha
add
test
xor
jno
int3
dec
aaa
sub
jnp
sbb
mov
mov
cmpsl
loope
sub
stc
lcall
lret
push
dec
lods
push
test
or
outsl
call
loopne
xchg
loopne
cmp
sbb
insb
push
out
push
mov
mov
pop
xor
inc
loopne
or
or
inc
loop
popa
push
call
sbb
sub
sub
push
mov
cltd
push
xor
mov
and
sbb
xor
xlat
xchg
outsl
jecxz
xor
pushf
cmp
decl
add
pop
lahf
roll
int3
sbb
xchg
loop
subb
lcall
pushl
dec
mov
push
jmp
fidivrl
sub
xchg
add
jmp
adc
dec
sti
mov
add
push
push
inc
jmp
dec
mov
add
ljmp
test
fdivp
pop
push
lret
cmpsl
out
inc
frstor
test
dec
adc
cmp
and
enter
pop
add
cmpsb
jno
sbb
arpl
cmp
add
rcrl
mov
mov
jns
jmp
fldcw
loopne
xor
daa
jb
pushl
out
mov
scas
inc
aad
push
cltd
xchg
and
aaa
pop
inc
pop
ljmp
push
jae
mov
jb
hlt
imul
cmc
ret
loope
mov
pop
rolb
xchg
test
ljmp
addr16
mov
mov
push
outsl
stos
mov
mov
mov
js
sbb
inc
scas
outsl
clc
call
shr
ja
jns
dec
sbb
jnp
xor
and
cld
icebp
test
adc
cld
stc
popf
mov
aas
stc
jne
mov
out
mov
cs
cmc
jbe
decl
or
mov
mov
or
fmull
cmpsl
test
nop
das
dec
ljmp
fisttpl
jbe
popa
cmp
xor
clc
cltd
push
cwtl
fidivrl
push
xchg
push
sbbl
decb
in
adc
insl
js
cmpsl
pop
add
and
clc
incl
xchg
outsl
aam
mov
out
add
push
mov
or
aaa
or
pop
pop
in
ljmp
notl
out
jl
int
xor
or
adc
add
ffreep
subl
sub
call
xor
or
test
mov
jbe
fbld
mov
out
mov
incl
iret
jmp
imul
sti
sbb
mov
sub
mov
mov
inc
dec
jg
sub
cmp
and
jmp
pushl
ret
les
scas
cli
gs
dec
mov
in
inc
bound
fisttps
jnp
test
shrb
mov
ret
imul
sbb
jg
add
cld
cmpsb
jns
cmpsl
dec
iret
out
push
les
repnz
movsb
repnz
mov
jmp
dec
dec
push
mov
cmp
test
into
psrld
lods
inc
jne
and
aam
dec
jg
outsl
lcall
psubb
dec
sub
imull
decl
cmp
scas
pop
je
jnp
pop
icebp
ret
push
mov
xor
das
dec
loopne
sar
in
pop
jne
xor
mov
arpl
jns
mov
adc
fiadds
pop
sahf
mov
incl
int
mov
sbbb
fwait
dec
mov
ret
sahf
in
cmp
fcomip
inc
pop
mov
out
stos
cwtl
mov
ja
incl
jle
and
cmpsb
mov
out
lret
xchg
data16
jne
mov
test
loopne
loopne
mov
xor
sub
sbb
repnz
test
ljmp
push
call
xchg
rcrl
lock
add
loope
scas
es
bound
enter
mov
xor
adc
pushl
xchg
mulb
cwtl
insl
mov
or
and
adc
jge
jge
incl
xchg
aas
test
pop
std
or
scas
jae
movsb
arpl
jle
leave
jmp
aad
cs
xor
ljmp
repz
pop
icebp
mov
cwtl
push
rcrl
cwtl
mov
lret
aad
incl
sbb
jg
addr16
add
sbb
pop
inc
sbb
cmpsl
in
cmp
ljmp
ret
rol
js
dec
fcoml
addr16
jmp
inc
and
mov
push
inc
pop
loopne
out
ficompl
imul
mov
jge
fs
jge
or
clc
jnp
sbb
mov
cmp
cmpsl
lcall
popf
or
ret
shlb
sbb
out
cmp
pop
sub
shll
test
insb
call
mov
pop
pop
and
movsb
stos
stc
jb
xor
adcl
sti
aaa
push
dec
dec
fimuls
imul
or
pop
mov
enter
jmp
incl
sub
pop
cmp
pavgw
insb
jns
pop
xor
inc
orb
xor
pushl
mov
pop
push
movsl
mov
pop
sub
sub
xorl
inc
fiadds
in
shrl
cmp
push
xchg
inc
xchg
lret
lahf
bound
mov
nop
mov
rclb
stos
pop
push
inc
sub
std
fisubs
pusha
mov
dec
aam
aam
or
xorb
mov
rol
or
mov
push
jne
mov
addr16
dec
mov
dec
adc
push
push
adc
or
jnp
js
jg
lret
add
xor
lea
or
xor
cmp
xor
mov
loope
addl
mov
fidivrs
out
xchg
adc
loopne
fists
mov
repz
ret
loopne
inc
loope
adc
and
mov
fbld
mov
ja
fldcw
data16
dec
mov
xchg
dec
or
inc
popa
sbb
sahf
into
addr16
xchg
dec
pop
std
data16
xchg
iret
aaa
ficompl
cmp
adcb
rcr
stos
mov
int
dec
out
adc
dec
scas
add
incl
aaa
xchg
push
jge
mov
mov
mov
cmp
or
inc
adc
mov
addr16
add
dec
fildl
shlb
rorb
jmp
ljmp
ret
int
xchg
xchg
push
std
mov
lock
xor
jg
mov
out
test
addr16
pushl
sti
mov
je
sub
les
fisubrs
in
repz
xor
ds
pushf
push
outsl
jle
imul
inc
mov
insl
mov
shlb
and
ja
mov
pop
xchg
cmp
ljmp
ret
or
or
fs
inc
mov
adc
outsb
sbb
lock
cltd
cmp
pop
addl
in
out
cltd
mov
testb
incl
sub
pop
aas
pop
aad
out
mov
jbe
loope
cld
incl
pop
cmp
addr16
jge
fmull
adc
sub
xor
loope
jnp
or
push
nop
in
scas
adc
orb
add
sahf
mov
cmp
and
int
lcall
jnp
lock
sub
sbb
xor
jge
enter
test
les
cmp
cmp
pop
cli
or
jg
hlt
jmp
inc
mov
fs
cmp
xor
pop
cmp
data16
lcall
push
mov
fwait
repnz
lea
lods
push
mov
dec
and
xor
push
jmp
lods
sbbb
ret
stc
mov
sub
out
cmp
and
loope
jecxz
add
test
fdivr
mov
call
dec
jbe
push
inc
int3
popf
xchg
imul
in
pushf
dec
pop
popa
mov
insb
ret
mov
push
psrlw
mov
mov
mov
nop
add
popa
adc
movsb
jmp
cmp
cmp
jmp
xchg
lea
aad
sub
adc
xor
mov
add
repz
adc
fwait
dec
mov
jge
lcall
mov
inc
cmp
ds
pushl
jmp
xor
pop
pop
loopne
in
cmpsl
fisubrl
cmp
inc
adc
add
decl
xchg
imul
pop
adc
mov
mov
into
add
enter
pop
dec
dec
or
and
pop
ljmp
imul
repnz
mov
sbb
rolb
and
add
push
add
ja
lock
call
lock
jecxz
movsb
xchg
push
adcl
call
push
jae
fwait
jbe
rorl
into
sub
cmpsl
mov
pop
sar
call
loop
call
ficomps
dec
test
pop
pop
nop
into
sub
addr16
testb
decl
dec
pop
jne
test
pop
pop
cli
sbb
imul
jmp
aad
jle
test
shrb
add
pop
mov
or
sub
and
inc
out
inc
insl
push
cltd
mov
sbb
shr
and
jnp
push
jl
dec
imul
popa
stos
sbb
pop
inc
fcmovu
dec
mov
mov
adc
decl
bound
push
sti
addr16
jg
rcr
mov
dec
jg
inc
repnz
pop
jp
mov
push
andb
mov
lock
xor
adc
ss
pop
xor
dec
dec
pushf
sbb
cmp
call
mov
lock
mov
or
loopne
ljmp
or
lcall
or
push
adc
xchg
call
into
mov
fldenv
jno
jle
lock
iret
scas
inc
nop
loope
adc
adc
call
and
lock
lds
push
pop
jnp
scas
test
jl
cmp
jmp
push
cs
icebp
sbb
lock
call
xchg
stos
cwtl
add
cltd
mov
xor
jg
lcall
enter
jp
push
dec
clc
cmp
or
mov
mov
mov
jg
ret
adc
mov
adc
mov
mov
lret
scas
lods
andl
je
repz
fbld
jecxz
mov
lcall
es
push
out
cmpsl
pop
mov
fnstenv
jns
add
add
aas
sbb
bound
add
jge
sub
mov
bound
push
call
dec
mov
fdiv
mov
or
icebp
and
push
icebp
aaa
daa
mov
cmc
cmpsb
adc
jl
jmp
and
inc
stc
push
inc
mov
js
mov
jno
pop
outsl
push
push
aaa
das
adc
call
lock
inc
jns
and
xchg
shll
aas
jnp
in
bound
icebp
xor
stos
sbb
mov
lcall
movsl
or
loopne
mov
icebp
in
outsl
or
xchg
or
mov
repz
cmp
movsb
jns
mov
loope
xchg
or
gs
mov
aad
cld
call
fidivrs
ja
repz
adc
aad
idivl
add
fbld
outsl
or
lret
lds
ss
mov
sub
jb
ljmp
jl
mov
and
or
enter
int3
fs
cmp
repz
fs
es
fadd
or
adc
jnp
lahf
cmpsl
aam
mov
icebp
add
jle
xchg
mov
and
imul
int
add
decl
jl
mov
std
test
lea
adc
xlat
movsl
ja
dec
loop
incl
lock
and
fsts
sub
or
divl
mov
sub
jne
out
lret
insb
sub
push
imul
or
jl
lock
call
enter
pop
shrb
addr16
xorl
ss
cmc
sar
lcall
repnz
cld
xlat
sub
adc
aaa
adc
push
inc
insl
mov
and
decl
lock
cmpsb
dec
add
lcall
xor
sahf
jns
sub
sti
and
and
aas
mov
stc
pusha
sbb
ljmp
dec
fildl
mov
adc
cmp
mov
or
push
imul
or
inc
mov
mov
push
sub
mov
pop
add
pop
sub
cmp
decl
sub
mov
ds
push
push
int3
xor
sti
xor
ja
sbb
out
loopw
xchg
sub
mov
inc
jecxz
jmp
decb
pushl
and
dec
add
scas
mov
sub
imul
fsubs
pop
in
mov
xchg
out
mov
mov
xlat
int3
mov
cmpsb
sub
shl
mov
sub
mov
jmp
add
dec
mov
lock
popa
test
sti
pop
inc
sbb
inc
mov
popf
loope
cmc
lcall
and
cmpsl
in
and
mov
test
push
inc
jmp
enter
jbe
in
and
sub
jmp
in
sub
xor
mov
stos
mov
push
jge
dec
cwtl
lods
lea
jmp
popa
push
xchg
out
int
pop
shll
lret
jmp
dec
pop
jecxz
in
xor
and
decl
das
out
inc
dec
mov
sub
push
sbb
clc
jbe,pn
jae
pop
add
xchg
jo
add
cmp
xor
adc
jbe
adc
pushf
pop
inc
incl
fnsave
sahf
fldl
push
mov
jge
xor
push
decl
lock
cmp
dec
cmp
push
jmp
mov
mov
mov
call
in
mov
cmp
dec
lcall
sbb
shrb
xchg
jb
mov
and
lcall
aam
adcl
and
jge
les
lods
mov
dec
cmp
int
call
das
mov
icebp
add
stos
or
lods
mov
stos
in
outsl
call
call
push
jo
adc
mov
fisttpll
jbe
adc
mov
leave
mov
push
imul
cs
and
pop
pop
and
cmp
or
xchg
mov
xchg
popf
mov
aaa
push
push
leave
adc
adc
call
outsb
xlat
dec
inc
sbb
enter
mov
push
jecxz
lcall
imul
sub
xorb
es
jg
xor
cmp
mov
jno
jno
addr16
pop
or
cltd
ret
data16
cmpsl
jno
inc
mov
lcall
stos
push
or
ljmp
pop
imul
adc
sub
lea
mov
jg
loop
es
lret
jo
xchg
mov
ljmp
add
dec
or
sbb
in
or
mov
clc
jg
sub
add
mov
xchg
mov
mov
lcall
or
ljmp
lea
sub
arpl
adc
adc
cwtl
sbb
dec
add
lock
cltd
adc
mov
in
lahf
pop
adc
xchg
ret
mov
es
jo
jmp
imul
in
mov
fwait
outsb
mov
dec
cmp
pop
inc
sbb
movsb
cmp
add
dec
sub
cmp
xchg
mov
mov
add
loopne
or
push
lcall
sub
repz
xor
adc
adc
call
call
xor
insl
inc
pop
lds
iret
cmp
rcr
in
outsb
pop
and
incl
out
sub
jecxz
lahf
bound
pop
push
cmp
jmp
ljmp
lock
cld
xchg
lock
pop
add
popf
xor
jl
jb
push
ljmp
pop
icebp
inc
lds
dec
outsb
movsb
pop
imul
daa
dec
lcall
mov
les
or
negb
and
dec
push
mov
sbb
test
xlat
sub
jg
das
aam
adc
sub
jmp
movsb
ret
cmp
mov
sahf
aam
add
leave
push
nop
je
dec
loope
ljmp
jae
leave
mov
adc
leave
aas
and
xchg
and
push
lret
jno
inc
adc
cltd
pusha
idiv
scas
cmpsb
or
add
loope
incl
pop
fidivl
les
leave
inc
or
aad
js
or
jns
jecxz
test
scas
jp
lds
lock
add
add
dec
sbb
lcall
dec
push
xchg
in
mov
jg
scas
inc
imulb
std
fidivl
xchg
push
cli
adc
add
call
es
ja
aaa
pop
cmp
cmp
or
xchg
andl
xor
ljmp
ret
fbstp
aaa
pop
cmp
xor
in
pop
mov
mov
imul
xchg
cmp
stos
incl
or
cwtl
jp
je
add
push
aam
cmp
in
inc
xor
scas
add
int3
adc
jge
xchg
mov
ret
ljmp
sbb
cwtl
out
lret
push
outsb
push
dec
movsb
xor
jmp
test
push
mov
xchg
jl
pop
cltd
mov
mov
jecxz
push
lods
adc
insb
cmp
jnp
dec
push
dec
mov
rorb
mov
inc
in
not
es
imul
jbe
shlb
fwait
loopne
andb
pushl
pop
fsubl
fwait
cmc
daa
fs
pop
hlt
cmp
arpl
aam
cwtl
mov
jg
lods
dec
mov
outsl
in
bnd
stos
push
jmp
into
add
aaa
cld
stos
pop
cs
sub
or
hlt
xlat
stos
mov
pop
mov
cmpsb
js
std
movsl
cmpsl
out
pop
and
mov
sbb
in
or
lcall
add
js
sbb
lahf
fimuls
pushl
mov
test
enter
inc
cmp
xor
and
out
incl
roll
mov
add
jae
and
jmp
push
jmp
pushl
dec
mov
mov
cmpsl
and
adc
out
test
cmp
test
mov
insl
in
pop
xchg
dec
pop
hlt
out
xor
js
xchg
loopne
int3
and
add
mov
and
adc
xchg
out
lcall
or
mov
xchg
xor
add
icebp
das
lcall
stc
add
aas
mov
lcall
and
push
stos
insb
add
jnp
inc
and
xor
mov
orl
inc
mov
mov
mov
or
lcall
stos
shll
pop
loope
adc
and
pop
jae
add
cs
pop
push
pop
xor
jo
icebp
pop
pop
adc
ljmp
stc
jmp
test
cmpsb
xchg
mov
lock
adc
dec
insb
inc
mov
ljmp
shll
add
pushl
dec
imul
jae
jnp
pushw
mov
out
aaa
cmp
out
xchg
sbb
inc
clc
lret
idiv
ljmp
mov
rcrb
iret
fcoml
jns
cmpsl
sbb
stos
sti
mov
mov
inc
fs
sbb
in
loope
jle
arpl
rcrl
or
in
scas
push
pop
imul
and
cmp
and
lock
out
dec
mov
pop
xchg
out
lcall
and
cmp
ret
push
hlt
inc
dec
sbb
pop
xor
mov
out
fdivr
inc
into
pop
inc
adc
pop
xor
xor
and
out
bound
lcall
cwtl
loop
insl
outsl
clc
incl
xor
mov
call
xor
dec
leave
inc
leave
in
iret
imul
icebp
pop
mov
cmp
jmp
adc
inc
cmpsl
lea
jno
dec
add
dec
fnstsw
loop
scas
cli
jb
and
push
loopne
mov
inc
daa
cld
xchg
dec
and
mov
insl
cltd
test
ret
data16
pop
std
ljmp
push
xor
push
cmp
in
pop
test
cmpsl
pop
outsb
in
mov
mov
mov
dec
inc
loopne
xor
push
call
pop
jno
jecxz
leave
out
lret
das
mov
data16
mov
sti
push
rorl
sbb
ljmp
mov
and
aas
sub
loope
jmp
dec
loop
xor
dec
xor
mov
lcallw
das
cmp
aaa
lea
push
int3
fdivl
xchg
cmp
es
cmpsl
sbb
mov
adc
fidivrs
dec
cld
call
push
jnp
loope
fldcw
jno
roll
das
fwait
or
jmp
cmp
pop
loope
jle
pushf
out
cli
ss
mov
xchg
insl
ljmp
loopne
mov
cmc
lods
pop
mov
outsb
cmp
nop
outsl
lret
in
mov
pushl
adc
ss
jl
add
mov
sub
xchg
icebp
fwait
sbb
insl
adc
lahf
sbbb
adc
fadds
fisubrl
pop
xchg
push
loop
push
push
mov
push
pop
xchg
jmp
xor
xor
enter
cmp
in
shl
fsubs
mov
and
ljmp
push
mov
sbb
cmp
fwait
stos
push
call
sbb
call
add
jns
mov
cmp
fwait
cltd
xchg
gs
decl
pop
sub
sbb
sbb
fistpll
mov
movsb
mov
cwtl
mov
ljmp
push
lahf
cmp
sbb
int3
je
jb
cmc
mov
int3
jp
cmc
lcall
test
pop
test
inc
xor
daa
das
sti
xchg
imul
pushl
cltd
lock
dec
neg
loope
dec
xor
arpl
sbb
fimuls
fwait
dec
xchg
sbb
ss
or
not
push
and
jge
push
movsb
mov
xchg
clc
ljmp
sti
sbb
addr16
mov
bound
and
xchg
fldt
mov
lahf
cli
fstl
les
sub
mov
pushf
mov
out
dec
push
subl
incl
cmpsb
pop
cmp
imulb
scas
sbb
out
sub
xchg
cmp
sarl
ljmp
pop
scas
cmpsb
fimull
cmp
test
ss
jg
jmp
test
cmpl
inc
dec
cwtl
sbb
mov
idivb
dec
nop
cld
add
mov
rorb
push
adc
insb
mov
mov
lcall
lods
bound
in
xor
pop
mov
jmp
out
pop
inc
push
jo
inc
dec
ds
call
sbb
xor
cmc
cmp
sahf
ret
insb
pop
fidivs
lcall
shll
js
adc
outsb
lds
push
bound
cmp
mov
in
out
cmp
add
jle
or
or
scas
add
xor
mov
fwait
mov
add
cltd
jge
pop
fs
adc
inc
dec
mov
adc
decl
or
jb
nop
ficompl
std
or
add
add
mov
mov
shl
cld
push
inc
inc
ss
pop
xor
cmp
pushw
xchg
in
fidivl
scas
push
jne
sbb
push
iret
pushf
into
fidivs
xlat
shlb
cmp
or
or
adc
int3
mov
push
gs
jecxz
pop
mov
popa
sbb
jmp
pop
inc
sbb
sub
adc
fwait
dec
mov
lock
mov
dec
add
pushl
decl
inc
outsb
aad
cli
mov
pushf
out
adc
ja
gs
add
mov
gs
mov
jg
out
js
pop
and
pop
push
add
inc
lcall
xchg
dec
lret
ss
iret
test
add
mov
loope
lret
xchg
out
out
aaa
cld
jmp
xor
cmp
stos
nop
or
cli
shlb
mov
sub
pop
data16
decl
lock
push
sub
das
jne
iret
jbe
test
hlt
dec
sbb
push
sub
xchg
mov
sub
mov
sbb
nop
adcl
pushl
lret
and
outsl
js
jge
add
mov
push
inc
inc
add
adc
sti
ljmp
dec
mov
loopne
xor
addl
mov
mov
arpl
fdivp
cli
pusha
pop
imul
sbb
imul
cmp
outsb
loopne
mov
jg
inc
dec
ljmp
shll
dec
lock
mov
mov
jle
push
inc
mov
mov
lods
bnd
add
xor
mov
jg
mov
and
inc
stos
ljmp
mov
jmp
in
std
jns
jae
and
add
out
cmp
in
push
mov
or
xchg
adc
incl
adc
inc
aad
mov
lea
mov
mov
leave
ret
loopne
lret
mov
xor
mov
jmp
push
fistpl
sbb
pop
sub
mov
sar
or
sahf
adc
xchg
mov
in
inc
das
pop
sbb
aad
push
insb
jns
outsl
sub
pop
pop
fimuls
fmuls
sahf
mov
push
fwait
inc
std
cmp
movsb
and
clc
jne
adc
add
mov
inc
jl
int
xchg
fsts
leave
je
jnp
lret
pop
clc
mov
incl
pop
sub
cmp
insl
iret
addl
jg
sub
jg
sar
jmp
mov
mov
xchg
xchg
fidivl
jle
js
or
xchg
aaa
out
call
mov
sahf
int3
cmpsb
xor
dec
daa
jb
push
xor
sahf
rol
or
mov
pop
jmp
rcl
es
ja
mov
sub
push
int3
inc
sub
lret
xchg
leave
cld
mov
inc
adc
int3
lret
ret
adc
pop
push
lock
ljmp
idivb
popa
fidivrs
leave
push
out
addr16
in
mov
mov
cmp
xor
loopne
insl
cwtl
xrelease
stos
push
std
decl
xchg
inc
and
lods
call
out
lcall
pop
imul
out
pop
lea
sub
das
int
js
inc
incl
call
jo
out
or
loope
mov
lods
test
mov
popf
roll
lret
in
cmc
mov
mov
cmp
add
mov
pop
insl
cltd
mov
pop
out
mov
adc
sub
mov
cmp
call
loope
cmp
outsb
xchg
fsubr
pop
int
add
push
push
push
xor
adc
push
cmpsl
cmpsb
addr16
mov
ljmp
lods
mov
or
les
rclb
xchg
clc
jg
into
mov
rcll
ljmp
daa
push
xorb
adc
mov
inc
lret
jge
test
sbb
pushl
loop
mov
pop
cs
decl
lcall
stos
gs
push
xchg
push
mov
xor
mov
aam
or
sbb
ljmp
adc
fstpl
add
xor
cmpsl
mov
push
fsubrs
stos
xor
mov
fdivp
rorb
pop
int3
xor
dec
aam
cld
ja
negl
jb
pop
jbe
inc
lds
or
or
mov
jg
jb
into
xlat
dec
cmp
or
orb
jecxz
mov
lahf
jp
mov
cmpsb
xor
decl
call
mov
jo
add
add
movsb
inc
sub
incl
mov
or
sbb
ficoms
xchg
inc
pushf
pop
mov
sahf
lahf
lods
leave
xor
cwtl
dec
test
gs
mov
jg
xchg
inc
jmp
arpl
and
pop
sub
fs
xor
mov
cli
mov
inc
dec
sbb
mov
pop
cmp
imul
adc
aad
inc
xchg
adc
mov
mov
cmp
stc
and
push
sub
shll
adc
ret
pushf
fcomps
xor
dec
sti
out
xchg
imul
mov
ljmp
adc
and
push
jp
mov
adc
ret
adc
fcoml
popf
xchg
mov
sti
movsl
test
mov
push
push
out
sub
push
scas
cmp
add
xlat
in
in
rol
dec
cmp
jp
pop
jl
stc
pop
mov
clc
jne
imul
sti
in
scas
and
adcb
cmp
rcl
dec
mulb
or
jg
test
adc
sahf
and
add
rolb
push
pop
aad
mov
rcl
movsl
scas
ss
fimuls
call
aas
fildll
mov
inc
test
adc
jmp
mov
and
daa
xlat
mov
sub
pop
aad
inc
scas
ljmp
test
sub
dec
cwtl
cmp
inc
cmp
and
out
int3
out
pop
mov
xchg
dec
adc
in
movsb
mov
es
xchg
ljmp
pop
lds
cmpsl
cmp
scas
sbb
je
cwtl
push
adc
stc
or
das
pop
lret
aaa
push
dec
rcrl
decl
call
inc
lods
fwait
pop
repnz
inc
fstpt
ja
mov
lahf
popa
xchg
and
repnz
adc
das
xchg
mov
pop
xorl
out
test
and
ljmp
hlt
xor
jmp
mov
push
jo
or
lods
and
es
out
add
cmp
lcall
out
cmpsl
iret
sahf
jb
clc
mov
es
cld
xchg
sbb
stos
imul
or
inc
mov
dec
xor
dec
mov
mov
outsb
jae
out
add
mov
aad
clc
iret
xor
gs
call
gs
fsubr
pop
mov
test
cmpsl
arpl
adc
cmp
ljmp
jp
das
clc
mov
inc
and
jb
and
test
loopne
bound
adc
and
out
ljmp
mov
stc
loope
xor
test
mov
mov
inc
sar
decl
adc
inc
aas
cmp
outsb
mov
xchg
cmp
pushl
adc
pop
fwait
xor
sub
addl
xchg
in
ljmp
repnz
dec
mov
fwait
pop
lods
notl
dec
mov
push
enter
ss
les
push
lock
sbb
add
stc
mul
pop
xchg
cmp
sbb
mov
lcall
xor
insl
xchg
outsl
lcall
xchg
ljmp
cmp
jns
cmp
test
mov
push
pop
into
imul
xor
call
jns
lret
inc
movsl
xor
add
mov
push
movsl
mov
int3
rorl
push
mov
bound
and
sahf
fildll
cwtl
shrb
sarb
push
lock
ds
call
lahf
cltd
test
js
jne
xchg
mov
pop
and
lea
incl
incl
lret
jno
cwtl
insb
int
add
or
js
jne
daa
lret
ret
fcomip
incl
pop
inc
jl
mov
jmp
call
inc
pop
jns
add
add
imul
test
adc
jmp
sahf
jge
or
rcrb
fstl
cmp
mov
cld
imul
subb
test
adc
add
pop
mov
adc
ret
push
push
imul
adc
fnstenv
loop
adcb
in
pop
into
lods
ja
mov
pop
loopne
in
mov
cwtl
lret
dec
dec
ret
fisubrl
imul
jmp
pop
lahf
ja
faddp
add
js
sub
push
add
mov
pop
fadds
addr16
loopne
mov
pop
mov
sbb
push
jno
imul
cmp
js
add
push
mov
push
cltd
xchg
lahf
js
mov
decl
xchg
rcrb
xor
ss
neg
mov
imul
data16
sahf
xchg
and
jmp
shl
sbb
xor
pop
int
call
inc
mov
arpl
mov
push
das
leave
cmp
mov
mov
ret
push
incb
aam
bound
hlt
mov
dec
gs
std
push
sbb
fnsave
into
cmp
pop
cmpsl
dec
into
inc
jnp
popf
jl
popf
jp
inc
test
xchg
push
add
dec
mov
push
fldenv
push
call
sbb
sub
xor
mov
fistl
or
decl
or
sarb
pop
pop
stos
or
mov
mov
mov
adc
xor
loope
mov
clc
push
or
pop
sub
jb
inc
inc
or
or
lock
mov
imul
addr16
lds
cmp
cmp
sbb
dec
jb
dec
pop
sbb
dec
mov
lods
dec
pop
add
push
cli
mov
pop
and
arpl
mov
jmp
jne
aas
jecxz
push
push
jnp
mov
add
fisttps
inc
roll
mov
push
stc
ja
ljmp
idivb
ret
sub
dec
mov
orb
mov
fimuls
mov
mov
pushl
jle
sub
jbe
jnp
mov
inc
mul
fnstenv
cltd
cmpsb
mov
call
mov
cmpsl
jno
lods
jbe
lods
sbb
mov
cmp
fcomip
lcall
sar
pop
cld
add
adc
cmp
sarl
rorl
add
jg
push
push
pop
sti
test
adc
dec
sahf
jmp
pop
mov
pop
inc
cli
push
sbb
dec
inc
mov
adc
dec
push
icebp
aas
bound
fisttpll
ret
jmp
mov
test
lahf
adc
hlt
sarl
mov
add
es
push
test
lock
mov
ljmp
jbe
decl
inc
test
or
sbb
stos
jnp
fadds
cld
lcall
jmp
cmp
mov
cwtl
inc
mov
lcall
test
insl
bound
add
nop
xchg
sub
sarl
stc
xor
cmp
or
lcall
xor
jmp
shr
or
js
lcall
ret
jmp
xchg
out
jbe
pop
icebp
insb
aam
ljmp
add
call
and
jl
pusha
push
push
mov
int3
add
xchg
mov
das
pop
mov
iret
pop
fnstcw
mov
adc
cmc
andb
je
cld
call
lret
call
jbe
mov
js
ret
lods
nop
jo
lret
std
adc
aas
cli
pushl
cmp
pop
stos
cmc
push
mov
mov
loop
dec
jge
and
std
pop
xchg
hlt
int
xchg
psubq
rcrb
call
popl
jp
xchg
sub
cmp
or
cmp
xor
sbb
test
jle,pt
lcall
mov
mov
jae
fwait
loopne
add
outsb
leave
add
jp
or
cmc
dec
jge
out
mov
insl
sub
jg
rclb
loopne
mov
lcall
pop
js
aam
xchg
repnz
cmp
push
cwtl
into
jnp
push
push
into
and
decl
cltd
mov
mov
jbe
das
add
push
pop
sub
movups
mov
jo
mov
jmp
icebp
rcll
mov
out
pop
jmp
push
lds
mov
pop
pop
pop
mov
pop
fisttpl
cmp
inc
or
push
test
jne
mov
or
jbe
fsubrl
jno
add
mov
cmpsl
xchg
cmp
xor
fs
and
mov
mov
cwtl
sbb
xlat
lea
in
mov
fwait
xchg
dec
xchg
pop
mov
mov
ljmp
clc
aad
add
adc
imul
adc
xchg
aaa
xchg
jg
cmp
xchg
icebp
or
mov
leave
xor
fdivr
fcoml
pop
out
pushf
aaa
int3
mov
sbb
fists
imul
mov
pop
pop
adc
pushl
in
dec
lret
push
xor
xchg
int3
pop
ret
pop
lcall
or
push
jecxz
jl
pusha
mov
stos
shlb
outsl
loope
jns
movl
push
cli
test
cmpsl
sub
fisubrs
test
in
je
mov
dec
call
lds
mov
inc
loope
and
push
test
in
add
mov
mov
cli
repz
push
inc
or
cmp
inc
and
pop
andb
mov
test
lret
push
movsb
xor
mov
call
xchg
pop
lcall
pop
cmp
in
pop
ljmp
gs
cld
or
xchg
testb
roll
mov
fwait
lcall
add
imul
push
fidivs
jnp
push
dec
inc
add
std
ljmp
in
push
or
aaa
ret
fildll
and
clc
ljmp
sub
dec
ljmp
decl
or
sub
dec
push
push
aad
xor
sbbb
dec
stos
cli
jmp
add
popf
daa
sub
xchg
mov
movsb
aas
dec
cmc
inc
sbb
outsl
or
jno
inc
idivb
sbb
jb
sbb
cmp
xchg
ret
push
mov
cmpsb
fidivl
fwait
jae
imul
mov
call
sbb
jae
push
inc
xor
or
jae
mov
test
cwtl
ret
repnz
push
call
fdivs
pusha
ficoms
das
add
popf
mov
repz
cmp
std
jne
fcomip
scas
push
test
sub
mov
call
inc
sbbl
call
pop
jnp
ja
ret
adcl
xchg
cmpl
int3
sbb
frstor
decl
and
sub
lds
movsb
xor
pop
lock
out
test
arpl
icebp
fs
imul
xchg
fwait
out
xchg
mov
sbbb
movsb
mov
adc
decl
xchg
pop
add
or
in
cmp
jbe
and
pop
incl
cmp
add
scas
mov
aad
pop
call
pushf
loopne
fbstp
inc
lea
fistl
scas
push
adc
leave
into
mov
jns
enter
push
imul
or
cltd
xor
bound
stos
pop
mov
call
sahf
mov
sahf
gs
call
sbb
mov
pop
adc
sub
insl
incl
clc
out
stos
jge
cld
ljmp
mov
cli
jecxz
adc
adc
xor
xchg
stos
dec
inc
mov
scas
jne
dec
sbbb
push
xchg
incl
mov
jg
daa
adc
jle
xchg
in
mov
sbb
sub
lcall
and
mov
push
mov
cmp
pop
jmp
inc
mov
pop
mov
xchg
xchg
adc
shlb
sbb
xchg
sub
stos
popa
xchg
jb
jbe
sti
inc
jmp
ja
or
mov
lods
bound
xor
mov
ficoms
jg
lock
mov
lock
aas
inc
icebp
dec
jno
inc
pop
mov
adc
push
sarl
lcall
xchg
sbb
mov
xchg
pushl
xor
jbe
jp
pop
sbb
fsubs
sar
popf
out
xchg
popf
add
cmp
dec
ss
cmc
ret
xor
mov
std
jmp
loop
std
inc
sub
adc
imul
ret
adc
jecxz
imul
call
test
xchg
call
sahf
cmp
cmp
and
mov
push
mov
lcall
or
mov
in
xchg
ds
ds
mov
leave
push
mov
loopne
nop
rcr
or
xlat
sub
outsb
out
xor
mov
pushl
jg
cmpsl
sbb
stos
test
mov
xchg
mov
fs
orl
call
das
or
inc
arpl
lds
xor
add
mov
pop
stc
insb
mov
stos
cmp
repnz
fwait
pushl
push
push
addr16
inc
fs
sbb
push
jns
or
rorl
cli
ljmp
cmp
or
pop
adc
fcomip
push
loop
adc
lcall
cmp
and
mov
fisubs
jg
sub
daa
mov
sbb
fs
sub
bound
pop
lds
sbb
repz
adc
hlt
mov
xor
jns
arpl
repz
fucompp
in
test
shl
fstpt
adc
fwait
lahf
faddp
fistpll
rcrl
pushl
popa
data16
mov
pop
addb
or
leave
dec
pop
icebp
mov
mov
incl
lret
or
mov
push
or
icebp
sub
out
mov
dec
jo
adc
add
push
adcl
popf
cmp
sub
int
outsb
cld
pushl
jne
mov
aam
int3
pop
fistps
cmc
sti
aaa
add
jmp
pusha
cmp
jnp
fs
jg
inc
pop
loopne
ja
addr16
sub
popa
or
ljmp
inc
dec
sub
test
gs
out
addl
jne
xor
gs
mov
bound
fnsave
or
dec
pushf
lods
dec
adc
sub
sar
ror
addr16
icebp
jp
sub
andb
fnstcw
call
cmp
incl
stos
movsb
popf
fs
xchg
and
addr16
imul
ss
test
out
loopne
pushl
fstpl
pushf
add
pushl
mov
imul
insb
hlt
decl
inc
lock
sub
bound
into
std
ss
or
pop
dec
mov
pop
ja
or
sbb
jle
mov
sti
frstor
jge
push
outsb
std
sbb
repz
lea
push
jg
arpl
iret
hlt
inc
mov
sub
ficoml
adc
js
pop
lcall
mov
add
sub
xchg
dec
pop
test
in
mov
mov
loop
pushl
fwait
xor
pushf
scas
pop
int
cmpsb
xchg
das
fcompl
xchg
cmp
mov
jo
jmp
or
movl
dec
jb
test
repz
mov
stc
mov
call
xchg
cli
pop
nop
and
clc
pop
inc
xor
xchg
push
pusha
outsb
incl
iret
dec
je
fdivrl
push
mov
mov
int
std
decl
pop
add
push
mov
cs
inc
mov
ljmp
pop
jge
mov
call
test
popa
jae
sub
xor
pop
arpl
mov
mov
std
or
sub
insl
jle
rorb
cmp
es
cmp
cmp
xor
leave
jae
mov
cmc
xchg
lods
aaa
adc
cmpsb
lds
dec
adcb
jb
jb
add
ljmp
shrb
xchg
pop
cs
mov
adc
and
das
jbe
pop
inc
pop
pushf
pushl
inc
fldln2
jno
adc
sbb
inc
mov
ret
dec
mov
sbbl
dec
std
ljmp
push
jl
xchg
cmp
pop
dec
inc
xchg
xor
lods
and
decl
arpl
shll
out
rol
out
xchg
ja
pop
sbb
xor
jne
cli
mov
lcall
jmp
sti
cmp
sbb
rcll
xchg
outsl
pushf
arpl
pop
cmp
add
adc
jne
push
or
mov
jp
cmp
mov
shlb
fwait
xchg
adcb
push
scas
mov
lcall
lcall
fdivs
add
push
pushl
mov
push
mov
mov
add
push
and
loope
or
xor
sbb
loopne
xor
clc
fmuls
rclb
cltd
imul
decl
mov
test
pop
enter
les
mov
sar
add
jmp
sarb
mov
pop
lods
mov
loope
lods
jmp
call
into
cmc
inc
push
test
xor
lods
sbb
inc
filds
out
gs
aad
repnz
cs
mov
cmc
inc
dec
and
dec
jmp
int
sub
rorb
outsb
sub
mov
jg
lods
popf
sub
pushf
inc
orl
sub
daa
pop
xchg
inc
sbb
xor
lcall
shlb
and
push
mov
sbbb
arpl
hlt
jae
out
inc
jo
call
sub
cmc
cld
pop
pop
fstps
dec
into
cmp
test
mov
jne
pop
adc
sar
inc
je
push
jecxz
cld
ss
dec
and
lods
fcomps
mov
jg
inc
cld
jle
dec
push
push
jne
pop
add
dec
and
lret
call
icebp
push
xor
clc
leave
fstsw
int
je
sub
pop
jb
in
mov
outsl
movsl
es
sahf
or
inc
xorl
inc
shll
sahf
push
lret
xor
pop
jb
sbb
lcall
sub
push
fbstp
and
fwait
push
or
aas
or
and
int3
scas
and
movsb
and
rorl
xchg
idiv
incl
repnz
leave
ret
inc
xchg
inc
inc
push
sub
add
aas
dec
nop
mov
out
inc
loopne
jp
lock
insl
fcomip
ljmp
dec
in
rcrl
ds
into
in
fucomi
xchg
cmp
xchg
icebp
adc
cmp
jnp
jle
jo
ja
jae
fcmove
xor
or
push
jb
lods
mov
dec
int
jne
lods
jns
push
mov
out
jp
popf
shl
lcall
jecxz
inc
rcr
out
cmc
daa
and
adc
incl
pop
das
incl
sbb
mov
add
jmp
scas
cmpsl
mov
mov
inc
cli
jge
sub
nop
or
or
es
call
xchg
dec
ret
in
sub
ljmp
mov
jg
scas
push
in
bswap
jbe
test
mov
sbb
sub
scas
mov
sbb
xchg
jmp
aam
dec
add
movsl
xlat
push
xchg
out
cli
inc
lcall
adc
push
pop
les
into
cmp
lcall
pop
aam
mov
mov
mov
dec
push
xchg
push
mov
pop
mov
scas
scas
jmp
fs
sti
gs
or
dec
push
rclb
addr16
push
loopne
movsb
imul
fdivrl
dec
sbb
inc
call
fisttpl
cmp
sti
je
adc
lret
clc
add
mov
rorw
dec
push
dec
xor
cmp
cld
pushf
addb
incl
pop
test
bound
fbstp
loopne
aas
and
mov
add
sub
ret
dec
call
xchg
and
pop
test
cmc
add
mov
mov
mov
dec
sarl
cmp
xchg
sub
into
xor
xor
jge
int3
fcom
fninit
cmpsb
ja
cwtl
mov
xor
mov
data16
int3
pop
test
ljmp
test
pushl
out
xchg
in
daa
and
popf
jge
inc
jnp
inc
in
cmp
sti
add
cwtl
xor
pop
mov
incl
movsb
into
lahf
pop
outsb
xchg
out
stos
inc
pop
arpl
out
stos
orb
push
stos
pop
mov
ljmp
mov
sub
dec
stc
inc
jbe
ret
jg
in
dec
add
loopne
pop
cmpsl
mov
push
iret
movsb
mov
sbb
pop
test
mov
ljmp
sub
in
rorl
inc
sub
insl
push
xchg
sbb
incl
stos
insb
call
int
xor
lods
fimull
inc
or
cmp
std
das
clc
mov
jl
adc
pop
sub
or
pushl
jmp
and
cmp
clc
xor
or
or
scas
xor
in
inc
or
dec
stos
push
mov
jmp
push
jmp
shll
sbb
mov
sub
mov
jg
decb
push
pop
mov
pusha
cmp
popf
xchg
cmp
ljmp
mov
ret
push
fdivr
pop
adc
in
cmc
jmp
sbb
jge
stos
incl
or
adc
cli
inc
shl
cli
jl
jno
pop
aas
pusha
mov
enter
int3
sbb
mov
push
cmp
pop
data16
lods
or
pop
scas
shlb
pop
mov
decl
lcall
lods
test
fstps
mov
repnz
ficoml
pop
cwtl
or
sbb
cmp
adc
mov
adc
or
hlt
sub
scas
outsl
cmp
pushl
sub
mov
test
mov
test
inc
lcall
adc
xchg
mov
addb
cmpsl
sbb
decl
sbb
mov
fiaddl
sub
aaa
mov
jo
lret
add
ljmp
xchg
scas
test
sti
rclb
pop
inc
pop
push
test
lock
stos
incl
daa
inc
mov
mov
scas
ljmp
fnstsw
mov
ds
dec
lret
and
mov
aam
adc
dec
jmp
and
inc
jmp
mov
cmp
aas
js
mov
mov
xchg
call
mov
inc
notl
mov
es
int3
pop
cmpb
sbb
sbb
sbb
or
jg
dec
loop
dec
and
mov
adc
lcall
and
pushl
sar
or
sub
mov
loope
gs
inc
cld
pushl
sti
or
call
mov
incl
xchg
popa
icebp
pop
sub
out
andb
jae
dec
xorb
bound
ficoms
bound
sarl
push
jb
int3
imul
jp
fs
cmp
pop
in
jmp
jecxz
shlb
mov
xchg
ljmp
fcos
pushl
fwait
adc
mov
xor
push
adc
cld
push
stos
aaa
clc
dec
mov
mov
jmp
les
ficomps
xchg
sahf
mov
cmpsb
sti
sbb
sar
push
fdivs
or
add
fcomip
jl
adc
movsb
lret
or
mov
ds
sbb
clc
jp
test
test
push
sub
enter
ljmp
sahf
subb
divl
adc
adc
push
or
cli
hlt
xor
repnz
lcall
pop
not
popf
aad
js
int
jge
imul
pop
lea
jb
jmp
mov
iret
mov
aad
icebp
aaa
je
imul
pop
fs
lret
push
dec
les
cmp
cmp
add
pop
sti
fldt
cmp
lds
pop
fcoml
movsb
jne
sarl
and
dec
push
xlat
pop
mov
dec
xor
imulb
adc
and
inc
adc
cmp
adc
ljmp
andb
js
fadd
mov
lods
push
push
mov
inc
decl
pop
inc
addr16
xchg
jmp
push
daa
popa
or
fnstenv
or
aas
inc
sar
dec
repnz
cmc
pop
mov
scas
jle
dec
pushl
enter
mov
xor
jecxz
call
fdivrp
arpl
les
cmp
mov
adc
push
outsb
adcb
test
cld
incl
mov
dec
fldenv
push
out
cltd
pop
jne
stos
pop
hlt
fidivrs
push
mov
jae
jg
and
andl
in
sbb
punpckhdq
incl
add
cmp
and
mov
lret
adc
cmc
fcoml
push
mov
enter
jecxz
fistl
mov
std
or
nop
andb
sbb
pop
test
jge
ljmp
mov
xchg
push
add
pop
punpckldq
cmp
adc
int
jmp
add
loopne
leave
sarb
imulb
test
imul
pop
mov
cld
ret
push
popf
decl
xor
jg
mov
sub
lret
lret
xor
mov
lods
aam
xor
out
jg
call
int3
pop
sub
sbb
fwait
sbb
popa
lods
and
inc
cmp
pushl
xchg
lahf
mov
clc
xchg
push
push
insb
sub
scas
mov
lcall
jns
lods
loope
cmp
adc
rcll
incl
cmp
add
sub
sub
xchg
pop
jmp
popf
fs
jno
or
outsb
inc
test
das
cmp
add
and
repz
xor
cmp
ds
xor
in
lcall
and
test
decl
call
xor
fcos
decl
cmp
pop
int3
and
insl
cmp
xchg
inc
stos
mov
imul
testb
jge
clc
cli
push
cwtl
icebp
icebp
pop
pusha
mov
dec
stc
push
scas
push
jecxz
mov
call
adc
out
pop
mov
jbe
mov
jb
js
push
inc
fdivr
and
pop
aad
push
mov
and
jmp
fidivrl
jnp
xchg
js
insb
pop
in
movsb
xchg
xor
pop
push
xlat
sahf
lds
mov
lcall
test
fisubrs
jmp
dec
bound
add
xor
test
incl
xlat
adc
dec
movsb
pop
xor
loope
outsl
rcrb
push
lret
pop
insl
lahf
ds
loope
fs
arpl
stc
js
jae
outsb
jnp
dec
push
mov
in
pushf
mov
xchg
int3
cmpsl
mov
decl
cmp
inc
pop
xor
or
mov
in
jl
daa
pop
sub
mov
hlt
fstps
aas
test
jb
or
adc
daa
cmp
sbbl
cmp
das
add
dec
shlb
idiv
outsl
leave
aad
cwtl
movsl
rcrl
dec
cmp
clc
das
jae
dec
lret
xchg
jmp
jns
pop
iret
inc
xchg
in
ja
aam
push
xor
cmpsb
cmp
push
cmp
cmc
lock
icebp
push
stos
loopne
adc
repz
mov
push
push
popf
sub
push
outsl
push
pop
cmp
aaa
imulb
cli
add
sub
jge
add
pushl
fs
push
jl
mov
lods
xchg
mov
sub
gs
xchg
rcrl
mov
jmp
jns
mov
sahf
jge
or
xchg
or
sbb
jmp
jbe
pop
inc
call
inc
cmpsb
test
rcrb
andb
xor
inc
fidivrs
mov
pushl
push
clc
or
cmp
and
mov
push
or
mov
cmp
push
les
cmpsb
loope
scas
nop
or
rolb
out
movsb
in
mov
fcomip
decl
add
sbb
pop
xchg
mov
xchg
pop
inc
mov
sbbb
pusha
jno
ljmp
rorl
sbb
popa
stos
sub
dec
das
mov
pop
sbb
fidivl
jmp
ror
test
push
mov
in
xlat
xchg
mov
cmp
rcll
adc
pop
je
and
mov
ds
fwait
cmp
jp
imul
sub
add
fstl
dec
cmpsb
insl
shrl
pop
cmp
lock
ljmp
mov
fs
push
or
adc
jns
filds
sbb
outsb
mov
lock
movsl
ret
and
jmp
and
incl
inc
call
sbbb
icebp
outsb
lahf
addr16
jecxz
xchg
push
ja
call
decl
pop
outsl
in
mov
js,pn
js
inc
mov
xchg
loopne
jbe
test
das
sar
xlat
adc
jns
cmp
jb
addb
lret
xchg
push
pop
pop
std
lcall
fidivrs
popf
dec
dec
pop
or
in
mov
pop
dec
pop
jmp
outsl
mov
mov
pop
xor
xor
dec
stc
adc
or
mov
mov
pusha
sarl
std
fsubrl
sahf
ljmp
in
add
mov
icebp
loopne
es
jp,pt
in
push
sub
sarl
lret
lcall
jecxz
dec
stos
add
scas
jo
mov
adc
addb
decl
mov
sbb
repz
mov
xchg
adc
mov
or
fucomip
dec
aaa
ds
pop
dec
ljmp
cmp
cmpsl
or
repz
ljmp
loopne
jns
stos
xor
mov
sbb
cmc
mov
pop
movsb
push
lret
dec
out
mov
xchg
arpl
add
shll
sub
movsl
les
orl
in
jnp
xchg
xchg
jo
jno
cmp
push
idivb
enter
jmp
sarb
jge
add
push
int3
and
push
lea
ror
std
fdivrp
lcall
cmpsb
nop
sbb
and
xchg
loope
jns
mov
jg
or
scas
incl
neg
shrl
repnz
pusha
fisubrs
dec
xor
xor
std
incl
or
ja,pt
xchg
addb
pop
lcall
ffree
and
loop
mov
popa
push
mov
les
mov
jb
aam
add
scas
fs
mov
xlat
ficompl
lahf
lret
out
push
in
push
das
lock
cmp
mov
lcall
ljmp
adc
push
rcrb
das
call
adc
push
cmpsl
sbb
popf
jg
jmp
push
or
mov
gs
dec
stos
enter
mov
jg
mov
enter
fldl
icebp
jp
dec
push
stos
rcrl
loop
insb
int3
push
incl
jns
mov
dec
pop
test
decl
js
loopne
sub
lahf
int3
mov
xchg
test
repnz
push
or
and
jae
rolb
pusha
xchg
sbb
das
mov
fstpl
fdivrs
inc
xchg
push
lcall
popa
in
int
mov
fsubp
inc
mov
add
push
fninit
cltd
lea
xor
jp
cmp
loopne
push
inc
xlat
scas
cld
mov
stos
movsb
fstl
shl
lcall
push
push
sub
and
fwait
cmc
pop
outsb
cmpsl
dec
add
lret
aas
cmp
incl
and
jb
xorb
iret
mov
add
ljmp
mov
push
lods
mov
dec
add
ds
repnz
sub
sub
lods
inc
push
fld
sar
dec
test
sahf
sbb
roll
int
addb
pop
mov
push
inc
mov
mov
stos
mov
dec
add
add
pushl
shrl
sub
int3
mov
adc
xchg
ja
jmp
lds
jge
ljmp
decl
jnp
mov
cmc
add
stc
es
lret
push
fwait
mov
clc
add
lret
nop
idiv
jg
xor
jmp
mov
dec
mov
add
lcall
es
sub
jmp
loope
add
mov
push
xchg
xchg
lret
push
adc
mov
jmp
lcall
ljmp
xchg
nop
sarb
mov
and
andb
rorl
fsubrl
jg
xchg
div
out
pop
imulb
xchg
adc
mov
mov
rcll
pop
call
pushl
cmp
lock
jne
xchg
out
daa
sub
adc
fnstenv
incl
or
dec
subb
inc
mov
mov
and
pop
push
inc
adc
adc
sbb
lahf
pop
repz
push
gs
int
jno
pop
sbb
std
mov
lds
xor
mov
push
jl
into
dec
xor
cltd
jmp
inc
outsl
stc
out
jnp
inc
outsb
xchg
stc
mov
push
mov
sbb
pop
push
mov
stos
cli
xchg
pop
test
notl
decl
sbb
pop
rcr
inc
mov
mov
dec
pop
cmc
pop
imul
shlb
xchg
xor
fwait
sub
cld
js
shl
adc
icebp
ljmp
addb
lret
loope
loopne
xchg
mov
mov
jl
mov
or
clc
and
or
and
lret
adc
mov
call
fcoml
mov
or
push
std
call
mov
lock
insb
mov
cwtl
push
ljmp
fcomip
fistpll
sarb
xor
shll
lods
push
or
mov
cmp
jg
cld
out
sbb
push
dec
xchg
into
stos
insb
jle
or
mov
xlat
push
inc
mov
jnp
xchg
push
jecxz
out
xchg
lock
xorb
sbb
and
movsb
xchg
add
jnp
add
faddp
push
pop
popa
jl
shr
out
mov
jb
mov
mov
lcall
cmp
dec
add
or
push
das
jno
in
out
aas
dec
mov
movsb
icebp
ljmp
jge
shrb
or
sbb
and
dec
add
ljmp
pop
lock
xor
imul
xchg
fisubs
mov
push
call
push
mov
stos
divl
lods
call
mov
dec
cmp
dec
lds
aam
lcall
mov
cwtl
pop
cmp
pusha
add
dec
mov
or
pop
sbb
std
js
je
jno
pop
icebp
cmp
add
mov
dec
dec
push
and
std
sub
out
repnz
stc
mov
out
in
in
sbb
ss
xor
push
lcall
jno
and
sbb
ret
addr16
add
xchg
fwait
call
dec
shrb
jno
decl
lock
cld
cli
mov
lock
lcall
ljmp
in
fistps
icebp
mov
data16
or
cld
pop
pop
loop
lcall
ljmp
cmp
jp
fmull
or
push
lock
inc
inc
loopne
xchg
decl
loopne
mov
je
add
push
inc
movsb
pop
mov
adc
and
cwtl
pop
pop
inc
xor
incl
cmc
pop
div
rclb
xchg
pop
sub
das
jle
and
lea
inc
scas
sub
test
aas
loop
insl
imul
cmp
cmp
mov
inc
sbb
inc
dec
cmp
stos
push
adc
jmp
xchg
mov
sbbb
sahf
in
scas
mov
je
incl
cmp
cmovo
add
pop
jle
stc
push
mov
inc
cmp
jae
filds
add
push
and
rcrl
pusha
mov
cli
xor
fildll
loop
nop
test
xor
lcall
cli
jp
pop
or
movsl
push
jbe
adc
ret
mov
jg
ret
lock
jns
mov
stc
int3
lret
mov
or
ljmp
daa
adc
sbb
aaa
sbb
data16
jg
mov
test
loop
jne
inc
jg
scas
pop
shlb
cmp
dec
dec
cmpsl
hlt
pushl
lods
sub
or
add
cmpsb
cmp
push
js
lods
fsubl
mov
pop
push
push
mov
inc
gs
mov
adc
gs
jbe
popa
fisttps
repz
dec
xor
hlt
and
call
in
hlt
xchg
sbb
fs
divl
ljmp
int3
or
inc
dec
xor
xchg
lods
lods
faddp
jnp
in
adc
pop
pop
call
scas
cli
lcall
xchg
mov
add
adc
into
lret
pop
jb
aad
mov
ds
mov
lcall
adc
or
push
jmp
clc
incl
fimull
pop
mov
cs
pop
mov
xchg
int3
mov
mov
ss
jp
fsts
adc
das
mov
addr16
fstps
push
lcall
jae
jmp
inc
dec
fwait
xchg
sahf
xlat
pop
cli
jg
lods
lcall
movsl
dec
andl
in
ja
jmp
xor
adc
pop
add
stos
or
fsubrl
into
out
call
push
adc
add
in
inc
and
xchg
arpl
pop
mov
dec
inc
cmpsb
pop
mov
pop
add
jge
mov
stos
fbld
sti
addr16
sub
pop
and
ret
jbe
jg
jnp
sahf
hlt
fsts
cmp
std
fcoms
inc
loope
movsb
outsb
mov
adc
pushf
mov
mov
mov
adc
pop
adc
int3
lods
int3
pusha
mov
inc
rolb
int
inc
and
push
pop
mov
rclb
mov
aaa
sub
pop
cmpsb
cwtl
add
mov
mov
std
jb
xor
lcall
add
pushf
adc
imul
sbb
orl
mov
xor
or
lcall
xor
push
xchg
add
mov
subb
dec
cwtl
jnp
loope
mov
add
mov
cmp
fistpl
clc
add
jns
dec
loope
push
mov
adc
lret
sbb
push
lret
leave
repnz
pushf
cmp
mov
dec
imul
call
push
inc
das
mov
mov
adc
addr16
adc
jmp
cmpsl
jnp
fists
ljmp
sub
js
xchg
movsb
mov
cmpb
sub
daa
rol
xor
jecxz
and
push
mov
lcall
jmp
add
hlt
decl
dec
push
jecxz
inc
cld
or
add
jmp
pushf
push
mov
int3
jbe
mov
pushf
sbb
js
mov
pop
mov
call
imul
dec
jmp
jge
fdivrs
jae
es
xchg
or
insl
pop
mov
jg
pop
cmp
jo
cwtl
mov
inc
mov
insl
pop
mov
adc
inc
daa
jae
cmc
shll
inc
pusha
mov
scas
std
xor
mov
or
lcall
mov
call
inc
mov
loope
ret
cmp
push
and
push
popa
call
sub
sub
das
mov
test
jecxz
rep
cld
fisttpl
in
loop
nop
mov
lcall
data16
cltd
xor
repz
ljmp
imul
aad
insl
jle
cmpsb
and
pushl
das
lret
movsb
jecxz
popf
int
jp
or
cmp
mov
movdqa
jmp
addr16
movsl
sti
aad
std
aaa
push
push
sarb
mov
call
call
or
cmp
sahf
packuswb
incl
inc
or
mov
ja
jnp
aad
push
inc
mov
cs
jg
data16
cmp
hlt
std
ds
outsl
mov
mov
push
sub
add
cmp
sub
pushl
ljmp
pop
orb
dec
jo
mov
andb
popa
cld
pop
add
mov
scas
fidivrl
out
mov
mov
ja
loope
mov
rcl
sub
jae
jp
xchg
insb
push
xor
gs
in
out
mov
adc
test
aaa
cld
jmp
inc
xchg
gs
sar
jle
cwtl
jmp
cwtl
sub
add
cmpsb
call
jno
mov
clc
inc
dec
data16
lcall
push
add
adc
adc
sub
and
gs
add
lods
add
fidivrl
mov
cmp
pop
inc
shlb
pop
cld
sti
jne
or
jmp
fdivl
filds
test
call
mov
mov
pop
test
mov
dec
xchg
push
jp
fstpl
dec
jle
add
cs
or
lret
cmp
mov
push
xor
mov
lcall
dec
cs
pop
movsl
add
xorb
repnz
and
dec
cmpsl
pushf
mov
pushl
lds
repz
push
cli
out
sahf
aaa
sbb
dec
xor
int3
adc
xor
or
incl
mov
pop
add
dec
je
xorb
pop
dec
cs
jecxz
xlat
int3
es
mov
call
shrl
jno
ret
imul
movsl
test
imul
fwait
mov
js
or
xchg
xchg
cltd
pushl
mov
and
mov
in
js,pt
clc
popf
cmp
gs
in
addr16
xorl
cmp
cmp
adc
and
cmpl
sti
popf
test
orb
ficoml
xchg
popa
mov
xchg
or
and
mov
mov
clc
data16
mov
mov
push
insl
repz
nop
je
jnp
lods
jnp
incl
enter
xor
leave
jnp
push
push
leave
jecxz
cld
decl
sub
es
mov
and
fdiv
cmpsb
add
gs
call
int3
fadd
rcrb
in
mov
adc
mov
xor
jno
mov
push
clc
outsl
add
in
xchg
rclb
dec
add
ret
cli
mov
scas
sub
or
cltd
in
rorl
dec
mov
ds
shll
out
clc
adc
arpl
ret
inc
lret
iret
jb
jle
mov
loopne
pushl
lcall
add
or
xchg
cmp
jns
mov
sbb
pop
adc
inc
mov
mov
xlat
add
pushf
scas
or
lcall
xchg
mov
pop
sbb
sbb
in
stc
cmpsb
xor
ds
push
cmp
loopne
xor
ljmp
out
in
int
push
into
int
scas
push
jb
xor
jo
sbb
add
ljmp
jl
popa
stos
int3
mov
and
push
push
cmp
call
jg
lret
loope
mov
mov
push
gs
jp
dec
mov
mov
push
cli
out
icebp
add
pop
ljmp
int
xchg
xchg
jmp
fldl
jbe
sub
and
mov
xacquire
push
mov
cmp
sub
jp
fisttps
test
orb
rolb
fimull
cmpl
in
lcall
add
dec
repz
sub
or
sub
sub
sub
adc
clc
mov
pop
mov
ja
imul
pushw
ss
mov
out
xchg
test
fisttpl
pop
jnp
cli
idiv
lcall
pop
add
std
jl
call
xlat
xchg
lods
pop
mov
or
adc
jmp
xor
andb
adc
adc
pop
mov
push
xor
ljmp
push
cs
xor
jecxz
out
movsl
mov
push
mov
ljmp
rclb
push
sbb
mov
jecxz
lods
pop
lcall
pop
pop
mov
cmc
test
incl
hlt
push
lcall
les
pusha
inc
mov
mov
and
jl
push
mov
lds
js
cwtl
js
sub
gs
push
add
decl
jle
into
push
loop
pop
pop
xor
jne
mov
xchg
pop
rcll
add
xchg
std
out
add
jmp
fidivl
sbb
rcll
push
repz
pushl
dec
and
push
xchg
cmp
test
mov
xor
jl
stos
adc
loopne
ljmp
clc
nop
ljmp
jnp
sbb
ds
testb
mov
out
clc
push
daa
inc
xor
pop
test
cmp
jmp
inc
mov
and
clc
pushl
adc
daa
xchg
and
add
jle
cmpsl
adc
insl
ja
mov
add
push
stos
jle
inc
push
aas
push
sub
repnz
dec
cmc
pop
xorb
jmp
or
mov
sub
ftst
jne
cld
loope
int3
clc
aas
mov
lcall
ds
jmp
shll
xchg
ret
stc
mov
mov
jmp
out
icebp
fbstp
mov
mov
jb,pt
enter
out
mov
lods
cld
mov
pusha
push
mov
mov
ror
mov
jmp
jb
sub
popf
cli
fdivr
int3
or
adc
fiaddl
pop
push
jp
fwait
lea
lea
push
cmp
sti
in
mov
repz
sbb
and
ja
cmp
sbb
or
cmpsl
lcall
bnd
std
scas
sbb
sbb
iret
lock
cmpsl
sbb
lcall
insb
loop
mov
pop
scas
into
mov
pushl
cmp
inc
test
inc
push
pop
cmp
mov
iret
movsl
xchg
jno
sbb
cli
or
and
call
pop
adcb
test
pushl
mov
jo
or
xor
out
into
sub
mov
divl
sti
lods
ljmp
dec
dec
bound
inc
cs
push
dec
je
jnp
in
repnz
lds
mov
mov
pushl
pop
cltd
out
xchg
adc
mov
and
cwtl
int3
lods
push
or
fimuls
mov
jl
es
insb
sbbl
xchg
and
popf
pop
ret
leave
add
incb
xlat
lods
or
xorl
mov
scas
pop
pusha
scas
add
push
ljmp
add
lret
sub
and
jl
pushl
out
rcrl
and
xchg
pop
push
jne
xlat
sti
cmp
adc
jmp
and
sar
jnp
xchg
push
xor
inc
aam
or
add
xchg
cmpl
pop
sbb
mov
in
dec
dec
jnp
test
ljmp
test
add
or
mov
adc
iret
xchg
shll
dec
mov
lods
pushl
test
es
push
jbe
imul
fistpll
sbbb
or
jns
daa
sar
por
cmpsl
jae
cmp
mov
jo
fiadds
xor
pop
cwtl
xor
and
push
addl
adc
sub
js
add
lds
or
ja
and
popa
mov
cmp
cld
ret
adc
hlt
mov
out
mov
incl
movb
in
enter
mov
push
pop
mov
bound
jmp
cmp
incl
emms
mov
and
jg
pusha
sbb
stos
or
adc
into
push
adc
push
mov
fisubl
sbb
xchg
ja
ljmp
leave
jne
inc
lcall
sub
out
imul
stc
pop
inc
inc
jg
jge
cmp
jmp
clc
push
hlt
lods
xchg
jecxz
test
mov
movsl
xchg
repnz
dec
outsb
inc
jg
fldl
movsb
cmp
cmp
int3
xor
ret
test
sarl
xlat
inc
ss
aaa
xor
jg
jne
outsb
xor
dec
and
es
pop
paddsb
pop
out
pop
sbb
jnp
and
xchg
fistpl
enter
aas
cmp
in
lret
add
jg
fcoml
sub
notb
scas
nop
push
xchg
push
jge
ret
enter
mov
mov
mov
sahf
stos
rolb
stos
mov
xchg
in
jmp
insb
jge
mov
sbb
and
mov
aad
pop
inc
int3
fs
ds
mov
fmull
and
pop
push
cwtl
cmp
add
out
lods
sub
pop
cmp
ljmp
shrb
scas
aam
xlat
or
in
cmc
stos
push
jo
lds
das
pop
sbb
or
add
dec
lahf
push
mov
sbb
int
sub
incb
loopne
cmpsb
inc
insb
mov
lods
xchg
movsb
add
sbb
pop
fcom
sbb
clc
jnp
cwtl
bound
cmp
roll
icebp
mov
in
xor
das
jnp
sbb
jg
ljmp
sbb
mov
cmpsl
lahf
scas
cmp
lcall
bound
dec
mov
fnsave
out
xorl
orl
cmpsb
xchg
fldenv
insl
call
fxtract
jae
in
aaa
insb
jmp
mov
xchg
xchg
pusha
sahf
adc
outsb
sub
jae
pushf
xchg
sti
lcall
stc
dec
rclb
lods
movsb
dec
imul
icebp
loop
lea
mov
dec
arpl
pusha
and
sbb
mov
gs
cmp
cmp
in
sbb
mov
lcall
in
cwtl
enter
lea
imul
cmpsb
push
fiaddl
xlat
in
add
inc
mov
push
lcall
mov
dec
subl
popf
idivb
repnz
pop
lahf
stos
add
lcall
outsl
push
and
scas
cmc
inc
daa
dec
inc
lret
mov
xchg
mov
push
jne
inc
jecxz
push
adc
fdivrp
in
mov
lods
mov
mov
jge
xchg
add
ljmp
lcall
insb
sub
out
cwtl
xchg
cltd
ror
popa
pop
enter
cmpsl
push
inc
out
loope
subb
pop
xchg
outsl
into
mov
movsb
inc
scas
cmp
clc
decl
enter
cmc
xor
inc
inc
je
mov
jl
js
lock
call
push
subw
inc
js
pop
add
push
jne
and
or
popl
sbb
sbbl
ljmp
add
inc
lds
inc
xor
sbb
addr16
js
aam
in
shr
lahf
sub
push
pop
inc
add
std
dec
and
in
pusha
push
lcall
sbb
jae
jmp
out
mov
cmpsb
cs
popa
cmp
sub
and
fsubr
mov
xchg
sub
insl
ljmp
xchg
push
icebp
xchg
call
push
aas
push
sub
mov
sub
sub
and
loopne
push
lcall
cmp
loope
stc
add
or
test
rolb
out
js
mov
stc
fs
or
mov
insb
push
push
insb
adc
jno
decl
lret
pop
ret
leave
dec
ficoml
dec
fdivrp
decl
mov
mov
jg
pop
xor
and
jle
icebp
push
jno
lds
mov
push
popf
test
ljmp
adc
notl
std
sub
mov
jae
lcall
xchg
out
bound
pop
subb
jp
pop
xchg
mov
jmp
mov
incl
pop
xchg
dec
repz
xlat
cmp
mov
inc
mov
xor
pusha
lea
stos
repz
ds
fsubl
fwait
or
das
and
ds
mov
cmp
icebp
jg
out
ss
cmp
ds
addr16
ror
shl
lea
or
out
push
subb
sbb
lods
movsl
or
test
ja
mov
dec
testb
or
dec
cmp
jmp
xor
lret
fiadds
mov
rcrl
ret
sub
out
mov
mov
cmp
and
xchg
icebp
aad
push
aam
pop
in
testb
jbe
fisubrl
cmpsl
sbb
sub
dec
shl
ficoml
push
fdivrs
jle
xor
stos
loopne
xchg
in
loopne
cmp
mov
add
fldcw
cli
jge
rclb
jg
stos
pop
cmp
ficoml
push
cmp
incl
mov
ss
fwait
aaa
rclb
mov
mov
mov
mov
out
cli
insl
adc
sub
lret
jecxz
mov
sub
ljmp
sahf
mov
pop
adc
dec
jae
add
test
mov
iret
push
add
sub
and
mov
jmp
faddp
xchg
pop
push
pop
xor
hlt
stos
mov
sub
and
out
outsl
lret
cwtl
sarl
add
insb
aas
bound
into
sarb
in
or
mov
daa
mov
sbb
push
or
mov
call
mov
not
sbb
mov
insl
mov
pop
movsl
or
loope
aam
call
push
pop
cmc
dec
and
xor
mov
int
cmp
xchg
jl
into
insb
inc
jg
ret
or
mov
inc
jb
push
xchg
std
adc
mull
sti
dec
fldl
call
sbb
cs
mov
sub
dec
sub
mov
jg
cmpl
sbb
jg
adc
mov
or
cmpb
enter
incl
imul
aam
scas
les
cmc
dec
daa
mov
decl
idivb
lods
or
pop
lcall
cmp
jbe
loope
add
adc
ljmp
out
gs
sbbb
xor
jmp
adc
jge
adc
sub
xor
adc
ja
data16
or
incl
sbb
gs
scas
sub
mov
daa
enter
xchg
sahf
in
pushl
andb
jb
adc
xor
dec
nop
pop
mov
out
jno
jmp
cwtl
jbe
xor
sti
pusha
mov
arpl
sub
xchg
bound
sub
nop
decl
dec
jns
aaa
pop
mov
xchg
inc
cwtl
sti
insl
aaa
xchg
mov
pop
xchg
or
fisubrl
or
cli
das
sar
cli
push
or
imulb
inc
test
loopne
std
xor
test
insb
inc
in
fadds
and
inc
dec
add
jmp
xchg
xchg
addb
adc
jno
aaa
int
insl
enter
dec
mov
fstl
adc
pop
stos
clc
iret
scas
or
cmp
jbe
shlb
decl
sbb
mov
jbe
movsl
test
imul
sub
xchg
stc
clc
arpl
fcos
lcall
and
lods
mov
dec
test
xor
adc
stc
sbb
lds
jmp
fwait
xchg
xchg
idiv
movsb
fs
loop
hlt
jns
nop
decl
ljmp
xchg
stos
cwtl
push
sahf
fwait
incb
outsb
lret
push
adcb
in
sar
jnp
adcl
push
and
xchg
loope
xlat
jl
add
jmp
aas
shr
sbb
and
xchg
ror
sarb
pop
xor
ljmp
cs
dec
adc
sub
add
lahf
les
sti
cmp
dec
add
adc
mov
jno
div
jae
rol
es
pop
daa
xchg
pop
or
sbb
lock
incl
sbb
popa
arpl
pop
mov
incl
das
sbb
les
stos
inc
stos
xchg
inc
or
cs
and
pop
dec
cld
pushl
ret
insb
mov
dec
popf
and
dec
add
add
hlt
jg
pop
mov
inc
popa
popf
out
or
push
sbb
filds
pushf
or
popa
push
cmp
sub
call
sbb
or
stos
popa
and
mov
ud0
dec
negb
in
imul
mov
movsb
or
mov
cltd
xor
cmp
fwait
and
cmpsl
nop
rorb
ljmp
mov
iret
pop
dec
cli
dec
stc
pushf
testb
repnz
repz
fmull
mov
ljmp
test
iret
stos
add
lea
xor
movl
lds
jbe
addr16
inc
es
lcall
fdivrs
jb
aam
mov
xor
and
mov
fs
inc
push
cmp
pushl
pop
daa
scas
ret
out
fistps
cltd
rcll
xor
sti
adc
xor
repnz
pop
call
dec
pop
add
lods
mov
lret
incb
xchg
out
jp
imul
pushl
repnz
push
xor
push
lea
or
inc
fiadds
sub
fiadds
adc
shr
bndldx
fistpl
xchg
dec
pop
mov
inc
lcall
cld
test
fisubrl
push
mov
xchg
shl
push
sub
push
mov
adc
out
movsb
pop
popa
pop
incl
mov
mov
call
cmp
popf
psubq
adc
call
ficoms
mov
sti
outsl
loop
or
jns
mov
scas
jne
popa
pop
loopne
cld
incl
push
cmpsl
aas
into
pop
test
ja
xor
lret
sbb
xor
mov
dec
xor
out
pop
xchg
adc
push
add
jae
jmp
adc
ja
pop
sub
nop
or
bound
mov
test
popa
ret
pushl
sbb
pushf
xchg
mov
ret
push
xchg
push
mov
jmp
scas
iret
mov
xchg
rcrb
loop
xor
movl
repnz
mov
xchg
jp
int3
push
insl
push
jo
mov
pushl
add
in
pushf
pushf
pop
pushf
imul
cmc
push
adc
add
mov
out
sbb
neg
mov
in
in
inc
incl
inc
inc
push
fwait
adc
mov
sbb
ljmp
sub
decl
cmp
xor
jle
cmp
mov
insl
push
jg
mov
sub
pop
hlt
cmpsl
mov
and
incl
inc
leave
rcrb
std
out
fwait
bound
push
push
lds
jge
add
lret
ljmp
jae
jae
add
mov
push
test
lret
in
sub
jg
into
inc
sbb
ljmp
nop
push
cmp
test
add
or
push
xchg
daa
sbb
nop
cld
scas
mov
pop
notl
lahf
jbe
rcll
ja
jl
clc
or
mov
incl
pop
push
dec
rcrl
dec
push
push
out
mov
mov
ljmp
arpl
arpl
rcl
je
push
sbb
movl
xor
mov
pop
stc
mov
cli
ret
in
in
out
mov
incl
mov
gs
arpl
ret
and
jge
pop
xchg
cmp
call
dec
xchg
lock
add
mul
addr16
arpl
call
pop
lods
sbb
sub
sbb
mov
mov
mov
jnp
pop
fwait
in
fsubrl
test
pop
or
arpl
and
jp
gs
jne
out
cs
and
mov
outsl
test
xlat
daa
mov
push
jg
fcomps
js
mov
out
lcall
imulb
jmp
cld
imul
sub
mov
add
pop
lock
inc
or
scas
and
sti
pop
mov
lea
lcall
pop
inc
shrb
pop
fs
fwait
cs
stc
sbb
mov
ret
sbb
cmp
divl
xor
clc
outsb
xor
imull
xchg
enter
inc
aam
shr
fildl
out
push
incl
mov
clc
xchg
dec
cmc
je
nop
xor
pop
mov
in
les
es
or
insl
mov
or
inc
lret
pop
cwtl
mov
fwait
jmp
test
jo
mov
aam
outsl
or
or
bound
adc
imul
call
pusha
jl
mov
mov
ljmp
outsb
xorb
jecxz
fbld
repz
mov
outsl
cmp
imul
ror
dec
sbb
cmpsl
sbb
add
insb
adc
xchg
filds
mov
cmp
cli
jge
fildl
add
rcll
call
clc
addr16
jbe
dec
les
leave
sbb
sub
and
das
mov
xor
adc
xchg
mov
arpl
sub
jno
xor
ljmp
push
inc
testb
icebp
pop
or
sub
test
push
xchg
std
loopne
gs
repz
in
out
movsb
test
or
xchg
add
mov
pop
mov
dec
fwait
popa
adc
mov
xlat
sub
ljmp
sti
lods
cmc
ret
xchg
jns
push
push
ret
fdivrs
pushf
dec
popa
push
fsubr
clc
inc
xor
pusha
sub
adc
pop
xchg
lahf
pop
int
fnsetpm(287
mov
jno
incl
mov
push
jnp
fs
bound
pop
adc
pop
outsl
fsubs
inc
test
ljmp
call
mov
mul
fiaddl
jl
loopne
push
xchg
mov
addl
dec
pop
lret
push
jmp
std
push
jg
jp
xlat
pop
rclb
subb
jno
cmpsb
lcall
push
in
ljmp
inc
loopne
mov
xchg
loop
jo
xchg
lea
jle
push
dec
pop
pop
loope
jp
inc
pop
out
add
pop
xor
mov
jbe
jbe
or
jg
call
or
cmp
cmp
dec
xlat
xchg
xor
mov
aam
out
lea
ljmp
mov
fsubrl
push
leave
rorl
push
jg
cwtl
cmp
lret
insb
sti
xchg
pop
loop
movsl
mov
decl
mov
daa
mov
inc
pop
stos
daa
adc
ljmp
call
mov
mov
push
push
lods
fsts
xor
xor
pop
in
in
sbb
fldcw
clc
nop
sti
stos
iret
popa
mov
or
fisubrs
imul
pusha
inc
dec
mov
ljmp
sahf
movsb
out
sbb
ficompl
or
movsl
loopne
mov
frstor
push
es
loope
cmpsl
lods
aam
insl
push
or
ljmp
leave
hlt
jae
scas
fnop
test
mov
arpl
aaa
inc
push
mov
gs
sbb
jae
incl
add
xchg
xlat
outsb
loopne
hlt
or
mov
cmc
fldcw
xor
ljmp
test
inc
lds
jne
sbb
aas
loope
push
scas
sub
inc
pop
insl
mov
movb
fs
mov
push
mov
dec
cwtl
test
leave
xchg
sub
and
push
jns
imull
insb
leave
pop
push
cmpsl
fcomip
fistpl
sub
es
dec
and
lret
mul
andb
inc
add
adc
xchg
pop
test
mov
push
xchg
andb
inc
bound
pop
push
jno
stos
lock
icebp
popa
jmp
clts
outsb
fsts
pop
lcall
cmp
push
adc
dec
mov
jge
scas
mov
mov
cmp
test
repz
dec
jmp
jbe
icebp
out
cli
out
cmpsl
ficoms
jns
or
push
adc
cmpsl
outsl
inc
shlb
add
clc
cmp
or
dec
lock
in
mov
jne
icebp
std
stos
mov
jmp
jmp
cmp
mov
adc
mov
arpl
dec
ja
jg
pop
add
push
loope
mov
daa
adc
dec
in
jmp
insb
inc
cmpb
push
pop
es
cmp
outsb
sub
add
insb
lods
push
xlat
leave
ds
addr16
push
ss
hlt
inc
arpl
dec
jge
stos
gs
insl
popf
imulb
jl
lret
lcall
add
dec
xorb
and
pop
mov
mov
adc
add
sub
lock
push
add
dec
xchg
mov
cmp
sub
addb
cli
add
fsubrl
enter
clc
ljmp
cwtl
or
cmpsl
jbe
xchg
je
daa
add
sbb
inc
ljmp
clc
push
aas
js
in
push
pop
mov
cwtl
mov
push
jmp
rolb
and
fsubrs
and
xchg
je
ljmp
inc
cld
jle
sbb
icebp
push
cmp
sub
mov
hlt
adc
xchg
fcmovb
jmp
cmp
jg
inc
cld
cmp
adc
fwait
out
dec
pushf
lock
mov
cmpsb
push
pop
mov
fstpl
leave
mov
mov
cmpsb
int3
daa
push
lcall
pushf
ret
push
or
jle
xchg
in
jmp
fidivrs
mov
sbb
lcall
cmp
xchg
lods
xchg
xchg
mov
sub
div
xchg
and
add
pop
jg
mov
and
aas
sbb
scas
dec
sub
sub
cmp
scas
dec
push
lock
sahf
jne
xchg
pop
fnstsw
int3
incl
lea
int
out
cwtl
inc
arpl
fistps
nop
and
xor
cwtl
nop
mov
lcall
inc
test
push
sbb
out
or
arpl
pop
ljmp
jge
insb
out
add
push
int3
fstpt
jmp
dec
in
pop
ficomps
xor
aas
int3
inc
dec
lock
push
mov
in
fcoml
iret
push
or
divb
ljmp
icebp
test
fnstenvs
pop
mov
or
daa
stos
dec
xchg
repnz
xor
dec
pushl
iret
sub
push
cmp
xorl
lods
jae
xlat
dec
or
das
js
iret
movb
push
sbb
mov
stc
ja
insl
pop
xchg
test
lock
dec
test
aas
fistps
jp
push
adc
mov
push
mov
xchg
adc
fdivrl
jnp
fwait
sub
cmp
jp
aad
shll
add
shrl
daa
ret
pop
jmp
mov
mov
cli
jbe
loope
push
stos
cmpb
push
dec
nop
lock
push
in
insb
sbb
sub
repnz
incl
jb
xor
xchg
lds
xor
loope
dec
and
in
stos
push
jmp
or
mov
cmc
rorl
adc
lcall
jmp
andl
lock
xchg
test
dec
or
xchg
lret
inc
or
mov
scas
lds
clc
and
lock
stos
sbbb
xchg
pop
ss
or
imul
out
test
outsl
sub
pop
pop
stc
sbb
push
dec
icebp
test
mov
pushl
pop
es
mov
pop
jp
add
notl
push
push
in
sbb
pop
dec
sbb
lcall
xor
xchg
arpl
sbb
xor
xor
jmp
stc
and
push
sub
fdivrs
push
outsl
popl
jo
jecxz
rclb
jg
mov
jne
dec
ss
aam
aas
jl
pop
test
data16
add
and
jb
int
mov
push
jno
mov
pop
pop
cli
add
or
leave
js
out
inc
insb
lahf
lahf
xchg
mov
nop
sub
adc
cwtl
or
ds
cmp
xor
incl
shlb
aam
dec
mov
xchg
sbb
jg
lret
xchg
ljmp
xchg
call
rcrl
lcall
or
add
scas
je
rorl
icebp
jnp
sbb
jmp
pusha
icebp
lret
dec
ljmp
mov
inc
push
mov
aam
and
push
ud0
decl
cmp
call
divl
mov
mov
and
xchg
test
pop
cmpsl
lock
push
ljmp
leave
loope
aaa
sbb
gs
js
pop
sub
pop
out
and
fcomi
sahf
imul
pushl
std
incb
adc
add
inc
inc
enter
je
aam
xchg
or
lcall
mov
and
lret
xchg
popa
mov
hlt
aas
cmc
inc
xchg
lahf
dec
cld
inc
sti
xchg
fdiv
bound
fwait
mov
inc
adc
lods
andl
lock
push
mov
xor
hlt
in
sub
incl
inc
jbe
mov
and
fldcw
cmp
test
call
sub
movsb
xchg
cmpsb
repnz
jb
and
cmp
fwait
xor
dec
fsubrl
cltd
clc
filds
adc
daa
fildll
or
adc
push
into
ljmp
sbb
or
lcall
inc
stc
sub
sbb
jg
call
cmp
or
cwtl
iret
shrl
xchg
xchg
pop
inc
mov
popa
or
lcall
push
adc
int3
jle
and
mov
pop
xchg
sub
inc
out
adc
inc
or
jmp
in
inc
mov
into
cmp
inc
flds
inc
jmp
mov
mov
test
das
into
fdivl
mov
aaa
imul
hlt
jmp
add
movsl
aad
adc
int3
shll
cmp
add
rorb
inc
clc
cmp
ficompl
jmp
outsl
pop
inc
scas
xor
lea
outsb
test
cmp
out
sbb
lcall
bound
fsubl
out
mov
cli
xchg
push
flds
mov
sub
add
lcall
xchg
aas
mov
mov
xor
push
aad
data16
xchg
stos
fimull
xor
lcall
je
pop
mov
mov
sarb
add
out
fsts
sar
pushl
inc
das
xlat
bound
mov
loop
xor
inc
push
cmpsb
leave
sub
in
int3
push
decl
cmp
or
pushf
imul
cmpsb
pop
or
or
and
xlat
call
std
mov
mov
cmc
xchg
test
mov
xchg
call
jecxz
push
test
jnp
add
add
jo
xor
rol
popa
sti
aaa
call
decl
out
pushf
ljmp
sarl
push
or
sar
call
xor
jb
std
pop
js
inc
push
lret
out
shrl
mov
xchg
clc
ljmp
adc
xor
cmpb
fbld
mov
pushl
cmp
cld
ljmp
add
push
cmp
add
test
stos
jg
sub
xchg
roll
inc
cltd
mov
mov
cli
nop
shll
add
int3
lret
mov
jg
cs
mov
sti
mov
cli
test
nop
fwait
sub
mov
mov
push
push
push
add
fdivrl
sbb
or
add
fidivl
das
cli
decl
pushf
loope
jmp
enter
jne
lock
jle
xchg
push
sub
aad
in
shll
mov
sar
ljmp
adc
sub
jo
shrl
ss
fcoml
xor
cmpsb
jg
subl
xor
and
out
mov
pop
mov
push
inc
clc
ljmp
in
jnp
fistps
dec
cmpsl
pushf
loop
out
sbb
jmp
xchg
cltd
dec
mov
xor
sub
shlb
nop
push
inc
iret
lahf
mov
jp
call
in
movsl
mov
movsl
mov
lods
cmp
scas
push
jne
into
je
jmp
sbb
loop
shrb
jp
test
add
sbb
sbb
fsubs
jmp
cmp
popf
iret
jle
pop
push
mov
push
in
mov
addl
mov
outsb
jg
push
ljmp
xor
sub
add
jecxz
fcomps
imul
in
adc
insb
sub
cld
fistpl
mov
stc
add
out
inc
icebp
mov
mov
or
clc
in
cmp
lcall
jg
cmp
add
daa
into
pusha
cltd
xor
lcall
movsb
add
dec
cmpb
imul
add
pop
aad
push
dec
rclb
or
out
cmpsb
inc
arpl
ljmp
insb
sbb
pop
sub
mov
out
repz
iret
out
and
dec
dec
cmpsb
cli
and
pushl
fwait
popf
fisubrs
and
ds
insl
jg
push
je
cmpsl
in
test
jnp
jmp
stc
notl
orps
xchg
sahf
cmp
lret
mov
pop
lahf
in
imul
mov
clc
mov
adc
and
pop
ljmp
mov
daa
cmp
pop
mov
mov
ljmp
out
test
sub
imul
xor
enter
mov
push
call
std
pop
popf
insl
iret
insb
jp
repnz
loope
mov
imul
sbb
enter
fistpll
std
pushl
ds
sbb
mov
adc
jne
mov
mov
cmp
add
mov
sub
shll
dec
dec
mov
sahf
inc
add
decl
cs
addr16
xlat
adc
or
adc
loopne
xlat
test
mov
push
push
push
fmuls
lret
xor
mov
hlt
pop
xchg
loop
and
addl
ljmp
pop
loop
bound
shlb
cmp
call
daa
or
pop
ljmp
push
cld
mov
int
movsl
in
fbstp
sub
inc
and
dec
pusha
imul
incl
mov
fnsave
imul
ljmp
ljmp
xchg
incl
rorl
stos
ss
xlat
enter
ss
sbb
sbb
inc
jae
jno
insb
and
int
sbb
add
ror
xchg
js
jl
lcall
popf
push
shl
sub
cltd
cmpsl
es
mov
jmp
mov
fstpl
call
sub
dec
jbe
sub
out
pusha
jmp
mov
adc
or
dec
cltd
dec
jbe
fwait
inc
add
ljmp
lds
shll
incb
in
cmp
mov
push
shll
xor
fisttps
stos
push
in
push
jecxz
lods
jno
pushl
sub
xchg
jno
add
jbe
xchg
or
and
loopne
bound
pushl
loope
sub
fdiv
cltd
xor
cmp
dec
dec
jb
lcallw
and
lret
sbb
xor
jge
mov
dec
negl
mov
mov
je
cmpsl
push
jmp
cmpsb
ja
cmpsl
sub
mov
ret
jmp
aas
pop
fs
aam
dec
sub
dec
lods
jg
mov
into
lea
or
pop
sub
repz
dec
cmpsl
mov
fidivrl
inc
mov
loopne
call
outsl
pop
xor
pop
sub
add
push
movsl
fisubrl
imull
call
inc
lret
cmp
mov
movsl
mov
movsl
dec
add
push
movl
lret
cmp
daa
daa
pop
aaa
or
decl
pop
push
add
outsl
cmp
fcomip
cli
inc
and
push
mov
cmpsb
inc
cld
jnp
data16
mov
cmpsl
rcll
leave
call
cmp
inc
outsl
inc
popl
in
inc
sub
push
negb
or
adc
cmpl
jg
pushl
push
orl
pusha
mov
idivb
mov
mov
lods
rcll
faddl
push
mov
adc
mov
xchg
mov
jbe
fidivl
mov
int3
push
hlt
push
test
insb
filds
mov
jo
jp
mov
cli
ljmp
repz
nop
xor
pop
dec
orb
lahf
push
xor
push
je
inc
adc
mov
test
mov
sbb
subl
cmp
loope
lret
stos
cmpsb
pop
jle
dec
ss
or
dec
inc
movsb
cmp
shrb
test
mov
add
jg
mov
mov
and
daa
ret
adc
jl
push
adc
add
mov
pop
out
and
xorb
fstpt
mov
stc
jg
mov
mov
pop
xchg
sti
cmp
popa
pop
divl
push
decl
stos
popf
movsl
lret
sub
add
jo
sbb
jae
jo
and
xchg
fildl
sbb
pushl
jmp
sub
add
fldenv
jb
test
call
call
cmp
daa
mov
mov
xchg
add
movsb
or
loopne
outsl
pop
outsl
pushl
andl
ret
test
push
cmp
cwtl
jo
add
jmp
scas
cmpsl
add
pop
rcll
cmp
hlt
nop
hlt
inc
mov
out
lods
xor
cld
call
int
and
loope
popf
sti
adc
aad
call
mov
add
fs
lea
repz
xlat
dec
test
incb
popa
and
xor
inc
and
test
mov
add
fdivs
in
mov
dec
add
mov
jle
rcll
mov
incl
jp
mov
into
or
aam
cld
cmpsb
xor
fisttps
xchg
ret
cmp
inc
and
sbb
pop
loope
and
fldcw
loopne
lds
mov
mov
incl
daa
rcr
imul
mov
fstps
cmp
das
xchg
int3
xor
mov
and
jp
cld
int
call
out
ficomps
lcall
xor
adc
stc
nop
test
sub
jl
lods
jl
sub
and
jns
pop
call
push
mov
push
into
out
add
lahf
cmp
jmp
pop
jmp
or
xor
jmp
icebp
add
push
xchg
sahf
rorl
mov
hlt
call
cmp
clc
ljmp
aad
inc
xor
mov
push
pop
cli
hlt
sbb
std
sar
jmp
cli
jg
xor
mov
mov
daa
mov
jg
data16
lahf
mov
leave
or
fiaddl
push
or
jmp
push
xor
sbb
dec
jnp
add
jnp
test
adc
mov
pop
lock
push
lds
popf
dec
bound
jb
sub
js
rcr
in
cmp
test
std
adc
lahf
pop
fnstsw
mov
cld
or
inc
insb
jle
pop
es
daa
clc
lcall
jns
pushf
mov
fbstp
cmpl
cs
sub
xlat
inc
push
xchg
mov
incl
inc
jbe
loope
and
sbb
inc
ljmp
dec
int
mov
imul
testb
inc
in
adc
mov
insb
and
das
outsl
int
ljmp
cs
or
fimuls
mov
pop
cmp
repnz
push
das
dec
lock
testb
enter
incl
xor
sbb
es
out
popl
dec
leave
lock
dec
pop
inc
stos
loop
movsl
addl
decb
ss
adc
sub
jg
jne
outsl
inc
aaa
icebp
mov
aad
dec
call
xor
mov
pop
push
add
scas
mov
inc
jb
das
ret
aam
mov
roll
push
or
ljmp
jo
mov
call
dec
sub
imul
popa
roll
inc
mov
add
dec
bound
mov
fucomip
and
push
push
dec
pop
arpl
scas
mov
addl
mov
fildll
inc
addr16
in
testl
pushl
push
jmp
aam
xlat
mov
ret
mov
aas
jecxz
inc
sbb
sub
decl
add
repz
sbb
and
sub
out
test
xchg
clc
sbb
notb
stos
outsb
jae
in
and
call
jb
xor
cmp
push
cmp
fisttpl
aam
cmpsl
and
sahf
fbld
decl
shll
js
mov
push
and
movsl
push
pushl
bound
mov
and
shll
and
decl
test
scas
popa
xlat
out
idivl
cmp
inc
xchg
add
mov
add
push
nop
aad
pushf
xchg
lods
lret
repz
test
mov
ljmp
cld
inc
dec
dec
pop
shll
movsb
and
fdivs
jp
or
rclb
jmp
lcall
sbb
sbb
xchg
push
fmul
push
js
dec
fidivl
pop
icebp
mov
stos
adc
cwtl
push
mov
mov
ljmp
sub
mov
cmpsl
js
jb
pop
addr16
pop
scas
stos
aad
out
gs
lods
dec
icebp
popf
inc
scas
lods
or
dec
cmp
jmp
in
aas
pusha
add
or
jb
movsl
and
test
sbb
push
mov
idivb
mov
out
push
xor
ds
pop
int
xchg
adc
jmp
int
push
xorb
int
jb
add
int
clc
das
test
xchg
xor
cld
pop
mov
hlt
mov
xchg
aaa
loopne
adc
dec
dec
sti
add
push
add
decl
cwtl
adc
dec
and
xor
rcr
cmp
dec
insb
mov
out
aad
out
mov
fidivl
daa
dec
loopne
push
cwtl
dec
je
dec
jp
mov
mov
jmp
loopne
int3
jle
and
fs
ret
jmp
and
mov
xor
and
cwtl
sbb
fistl
sti
fidivl
xchg
xor
shlb
ja
repnz
popa
lods
aas
mov
lods
add
jns
aaa
insb
mov
jo
sar
jg
das
loop
xlat
les
adc
ds
out
push
icebp
nop
jns
cld
jmp
in
test
cld
jecxz
fdivs
mov
lds
adc
add
push
xchg
out
inc
std
jo
jg
test
in
shlb
cmpsb
pop
sbb
decb
push
loope
lea
mov
ljmp
les
xchg
addr16
xchg
roll
std
ret
and
mov
insb
fdivr
clc
dec
jnp
pop
ficompl
out
aam
stos
cli
repz
push
adc
add
adcb
cmpl
sbb
call
ja
loopne
mov
outsb
mov
inc
jl
cltd
pop
jg
ss
movsl
adc
dec
shlb
lea
add
gs
inc
cld
popf
dec
data16
xchg
mov
je
pop
jbe
push
cmpsl
popa
or
mov
lock
dec
lret
sub
jg
push
divb
cmp
stc
dec
ja
mov
aad
jmp
mov
adc
push
push
sbbb
into
in
xchg
and
xor
inc
imul
ret
xorl
dec
add
test
gs
pushl
or
jl
out
adc
and
aad
mov
push
mov
mov
jl
pusha
lods
pop
fisubrl
cmpsl
sbb
outsl
call
jnp
or
jbe
sbb
loop
fcmovbe
incl
enter
jmp
ror
jle
lcall
sahf
mov
je
pop
adc
jne
arpl
jmp
fistpll
rcrb
mov
or
or
and
mov
jle
ljmp
cmp
decl
std
xchg
movsl
jge
cld
mov
lods
adcl
les
pop
mov
in
mov
incl
inc
movsb
fisttpll
sbb
inc
lods
xor
inc
mov
sub
jns
jo
jg
mov
cltd
pop
lods
pop
sbb
or
cmpsl
lahf
pop
or
mov
mov
mov
sub
sub
xchg
xor
inc
mov
hlt
pop
mov
mov
add
arpl
lcall
pop
lock
testl
jecxz
xchg
das
push
xor
jnp
jbe
mov
incl
mov
and
in
sbb
dec
lahf
aas
lock
mov
cmp
push
movb
lcall
aam
pop
fistl
popa
rorl
or
sbb
xor
jge
test
movsb
add
mov
mov
lcall
ljmp
out
jb
push
add
pop
fs
shll
mov
lcall
xor
lds
fucompp
adc
jg
cld
adc
in
pop
pop
insl
repz
in
subl
lock
es
push
xchg
les
lret
sbb
push
jg
pop
clc
shrb
pop
mov
mov
cmp
sbb
insb
mov
hlt
inc
inc
call
dec
cs
xorb
aaa
dec
xchg
mov
nop
movsl
in
cs
mov
jp
xchg
into
ljmp
scas
xor
pop
add
push
mov
xchg
xchg
push
mov
xchg
jo
lea
out
dec
inc
push
dec
popf
xor
out
dec
sub
dec
mov
adc
cs
rolb
mov
mov
adc
imul
popf
ret
inc
pop
mov
cmp
xchg
leave
fcmovnu
lcall
xor
fldt
imul
es
xor
sbb
jmp
jl
cmpsl
mov
and
std
ss
mov
js
int3
stos
dec
out
mov
aaa
inc
fldenv
ljmp
mov
fldcw
cmpsl
push
sti
jnp
xchg
fsubr
jecxz
inc
sub
sub
popf
add
shll
and
dec
ficomps
xchg
dec
xor
mov
test
outsl
lock
inc
push
mov
ret
push
stos
or
fisttpll
mov
negl
jg
xchg
jns
adc
cmpsb
adcb
push
pop
pusha
mov
cli
pusha
test
pushl
jp
adc
fistpl
ret
pop
hlt
push
sti
fstl
pop
pop
leave
out
inc
add
jecxz
cmp
adc
fsubrs
div
insb
push
in
call
mov
lock
ret
mov
call
dec
ds
clc
sbb
sahf
call
mov
inc
jmp
pop
pop
xchg
add
inc
enter
push
test
sbb
ljmp
jae
sbb
lea
jg
clc
ja
jmp
fidivl
dec
cmp
out
clc
inc
sahf
ret
js
inc
dec
pop
mov
push
add
cmp
mov
pop
push
aaa
lock
sbb
inc
pop
loopne
stc
aam
cmp
fnstsw
repnz
sub
cmp
in
cmpsl
clc
cmp
popa
push
lret
mov
pushl
jb
sub
jl
pop
mov
ds
pushl
lods
hlt
push
insb
out
dec
sti
sub
loop
cmc
in
jecxz
adcb
inc
jecxz
clc
add
mov
call
loope
dec
pop
lret
insl
stos
mov
cmp
mov
lcall
push
call
sbb
jnp
push
inc
jbe
inc
sahf
cmc
fs
jg
add
pushl
xchg
sub
jg
ret
mov
pop
adc
cltd
mov
push
mov
into
lahf
test
incl
leave
inc
mov
imul
out
mov
xchg
push
adc
inc
insb
ja
jo
test
and
or
inc
sbb
cmc
mov
iret
cmc
or
decl
sarl
cmp
outsl
rep
fmuls
xchg
xchg
clc
xchg
adc
sub
mov
cmp
ds
cmc
aam
addr16
sub
mov
movsl
xchg
sbb
add
sub
xor
and
incl
sub
loope
jns
pop
bound
out
je
adc
leave
or
jg
jmp
sbb
mov
outsl
dec
jg
mov
mov
cwtl
icebp
mov
int3
adc
cld
call
stos
or
push
lahf
push
inc
enter
jge
push
jae
stc
out
adc
ds
ljmp
pushf
aas
loope
add
out
mov
stos
xchg
inc
xor
neg
sub
sar
pop
inc
es
jns
lret
mov
cwtl
sub
pusha
sbb
mov
push
dec
inc
mov
xchg
cmc
and
adc
pop
fwait
outsb
adc
js
push
orl
mov
sarl
push
cmpsb
lcall
jno
mov
andb
inc
stos
imul
push
call
scas
jb
test
mov
data16
pop
xchg
sbb
sbb
es
jmp
les
mov
push
jne
aad
and
sub
xor
cmp
jmp
frstor
xchg
es
dec
pop
mov
lods
jg
pop
scas
mov
pusha
or
lahf
xchg
mov
lcall
in
loop
enter
xchg
push
xorb
cmp
imul
push
call
mov
xor
sub
mov
pop
cmp
jns
mov
and
push
jmp
mov
jns
test
push
ljmp
es
jmp
int3
fwait
pop
in
bound
dec
mov
insl
add
das
add
mov
xchg
mov
add
add
aad
fsubl
scas
sar
xor
pusha
mov
arpl
add
or
movl
pop
push
add
decl
sbb
or
frstor
lahf
nop
jle
and
inc
les
movl
out
sub
inc
push
or
outsb
push
mov
aas
sbbl
rolb
sahf
sbb
fmul
fsubl
int3
add
mov
add
cmpl
fidivl
in
lret
mov
pop
cld
inc
inc
cmp
aaa
adc
mov
mov
jg
inc
leave
ftst
push
xchg
cmpsb
push
jns
pushf
push
fidivl
lock
decl
mov
push
jne
repnz
cmpsl
xorl
dec
inc
js
sub
jle
push
add
adc
inc
push
cmc
pop
jne
cmp
mov
sahf
out
jnp
insb
scas
mov
incl
test
inc
int
mov
push
mov
js
mov
mov
adc
imul
decl
push
push
daa
aam
das
sub
xchg
mov
mov
push
mov
lods
adc
adc
je
ret
out
call
hlt
xor
mov
fcmovbe
push
mov
pop
jns
adc
pop
call
lahf
sbb
mov
add
inc
pop
mov
cmpb
mov
and
dec
push
lds
or
xchg
add
gs
mov
lcall
dec
pop
pushf
in
inc
test
jno
lods
or
in
ret
or
dec
out
dec
imul
js
std
mov
mov
gs
pop
inc
mov
das
je
or
dec
sti
inc
lcall
sub
leave
cmc
jb
pusha
inc
test
outsl
aaa
mov
jbe
test
cmp
jmp
inc
jmp
mov
lret
cld
push
xor
sbb
jg
mov
mov
es
xor
out
andl
cltd
mov
decl
push
fisubrl
cmp
xchg
mov
mov
mov
jns
out
and
clc
dec
movsb
pop
cmp
or
push
inc
dec
add
je
mov
sar
add
mov
insb
inc
scas
add
push
xchg
pop
int3
out
jmp
push
jno
aas
dec
aaa
cmpsl
fisttps
movsb
and
aaa
fldl
pop
adc
fistps
call
mov
dec
dec
aad
xchg
mov
mov
testb
pushl
xchg
inc
sbbb
jne
test
or
es
iret
mov
in
ljmp
aaa
or
sar
sub
jno
pop
in
pop
inc
punpckldq
cmp
adc
lods
push
in
inc
stos
out
cmc
adc
add
out
fidivrl
lret
aaa
xchg
jl
movsl
pushf
incl
sbb
stos
daa
jmp
js
and
cmpsb
fninit
jge
loop
fdivrl
incl
gs
lock
lret
mov
dec
je
insb
aas
xor
add
out
test
lret
out
lahf
jle
decl
push
mov
jbe
pop
cmp
out
jecxz
or
dec
ret
pushl
or
inc
and
adc
jno
in
mov
push
or
les
or
xor
mov
cld
enter
sar
das
rcr
inc
or
cmp
into
test
loope
std
adc
cmc
mov
stc
add
push
in
ss
incb
in
xchg
dec
jp
jecxz
mov
cmp
movsl
in
fisubs
and
jae
in
lahf
push
or
sti
mov
ficoml
cmp
jno
push
fnstsw
ret
inc
mov
push
je
push
popa
fisubl
ljmp
xlat
cmp
mov
or
fwait
jbe
cmp
mov
hlt
ljmp
cld
adc
mov
cmpsb
sbb
jmp
arpl
addr16
popa
mov
jae
incl
and
xorl
adc
mov
xchg
pop
lret
daa
xor
jo
mov
sub
lods
fs
in
sbb
jne
pusha
or
and
decl
sbbb
lds
pushl
adc
mov
cmp
xchg
cmpsl
cld
xor
iret
and
imulb
fcomip
push
into
push
mov
or
or
fbld
jns
and
mov
fidivrs
iret
push
and
sub
test
aaa
shll
call
or
sub
lock
xchg
adc
xchg
sbb
dec
fs
decl
mov
mov
ss
nop
adc
jb
sub
inc
sbb
out
and
xor
fs
lcall
lock
shrl
sub
in
add
inc
fs
clc
ljmp
shlb
test
test
cld
jl
insb
sub
incl
mov
rcl
int
cmp
ret
mov
decl
adc
out
cli
lcall
dec
out
jl
jmp
mov
add
adc
cmc
push
lcall
push
adc
mov
in
mov
je
ret
xor
aad
xchg
lcall
adc
enter
and
mov
jo
pusha
das
mov
jp
in
push
dec
test
scas
mov
rcrb
xor
cmpb
inc
filds
call
jbe
dec
stos
aas
lods
in
push
adc
add
jmp
loop
cmp
into
adc
xchg
lret
mov
scas
xor
and
div
push
repz
sar
fidivs
fmull
lods
and
sahf
push
fcmovb
in
cmc
imul
sbb
pop
rol
inc
in
sbb
lret
je
movsb
insb
imul
pushl
movb
push
adc
pcmpeqw
clc
mov
push
aam
dec
cmc
popf
incl
cld
fldl
jg
cmc
mov
adc
ljmp
mov
jge
pushf
testb
mov
orb
andl
call
shl
inc
rcl
xchg
inc
mov
test
stc
or
test
iret
push
lock
ss
pop
sub
call
ja
popa
scas
outsl
daa
dec
ja
add
lods
mov
fwait
cmpsb
in
mov
int
push
sbb
sbb
push
xchg
jge
mov
add
jmp
cwtl
stos
int3
and
out
fldenv
mov
sub
jo
negl
loope
dec
mov
jmp
sbb
inc
pcmpgtw
loop
stos
and
mov
mov
xchg
sbb
icebp
decl
out
xor
xchg
xchg
push
sub
test
inc
xor
adc
inc
cmpsl
dec
mov
ljmp
dec
ret
into
or
loope
dec
or
xchg
addr16
pop
jp
ret
pop
cmc
ljmp
add
ret
dec
insb
mov
sub
imul
jmp
std
cmp
pop
or
lock
enter
xor
insb
dec
icebp
sbb
jae
sahf
fildll
xor
out
and
sbb
ljmp
mov
push
outsb
sub
mov
sbb
adc
mov
cmc
sub
scas
clc
divl
push
shl
pop
sub
lcall
cmp
std
repnz
sub
inc
adc
push
cltd
lret
jp
subl
jb
icebp
jmp
std
out
fadds
inc
dec
lahf
mov
addr16
or
lret
mov
and
lods
fmuls
xchg
popf
add
or
je
sar
enter
pop
sub
sbb
xchg
pop
pop
test
or
jmp
mov
mov
imul
hlt
sbb
imul
cmp
mov
testl
roll
dec
insb
fcomp
icebp
jg
jns
ja
jmp
mov
adc
or
clc
incl
ljmp
sub
and
in
mov
jge
xchg
xlat
cmpsl
add
push
lahf
xor
das
out
cli
inc
mov
dec
inc
mov
or
insb
cmpsl
adc
enter
jp
jno
or
pushl
and
out
or
dec
and
movsb
xchg
add
lcall
addr16
sbb
xorl
mov
mov
cmpsb
fisubl
sbb
dec
data16
scas
out
orb
fdivs
or
jg
jmp
rolb
test
mov
mov
mov
dec
outsb
test
das
clc
scas
jb
test
jmp
adc
cmp
pop
sbb
gs
call
in
push
xchg
add
ret
test
out
ret
js
fwait
sahf
fs
into
xlat
and
inc
pop
push
ret
mov
gs
out
mov
or
in
xlat
pop
lea
ljmp
sarb
dec
adc
pop
add
shll
pop
xor
dec
cld
dec
pop
push
cli
stos
dec
scas
sbb
mov
insb
out
jo
lcall
gs
xor
mov
sbb
std
sub
push
xchg
and
mov
scas
pop
or
frstor
test
loop
sub
mov
mov
lods
jbe
xchg
stos
gs
lret
push
add
dec
ffree
mov
dec
incl
sbb
pop
push
mov
scas
jae
adc
divb
jne
cmp
rorl
decl
arpl
push
xor
pushf
mov
fwait
movsl
mov
lret
popf
lcall
int
xor
or
sub
cmp
call
mov
and
into
push
cmp
xchg
jge
out
adc
aad
pop
add
decl
mov
push
xor
sti
call
push
icebp
addl
or
jmp
or
sbb
repnz
jns
xchg
stc
cmp
shrb
xchg
scas
out
fwait
cmpb
rcrl
enter
push
mov
enter
sbb
pop
dec
jmp
dec
adc
mov
mov
xor
pusha
add
out
pusha
inc
call
incl
xchg
cmpsb
pop
mov
popf
jne
in
outsl
mov
cmp
negb
or
popa
in
mov
sbb
sbbb
test
scas
outsl
cmp
and
lea
dec
in
mov
sar
xchg
sub
and
and
lods
aas
push
imul
int3
daa
add
jne
std
fildll
daa
sbb
stos
push
popa
pop
ss
xchg
jp
sub
iret
mov
in
popf
popa
pushl
mov
push
mov
mov
mov
jmp
mov
sbb
pop
incl
xor
lcall
lock
test
inc
mov
cmc
popa
stc
iret
dec
mov
clc
lcall
int3
and
xor
pop
lea
inc
inc
fwait
dec
pop
sbb
sbb
sar
push
mov
stos
mov
je
jge,pt
sbb
insl
lret
mov
outsb
call
inc
rorl
or
bound
mov
call
loop
jp
frstor
not
adc
mov
mov
xchg
test
in
jg
inc
cld
clc
xchg
mov
frstor
adc
icebp
ljmp
pop
mov
adc
mov
popa
cmp
sub
clc
jo
cli
sti
push
dec
sahf
pusha
lea
insb
test
push
sub
pushl
inc
mov
pop
xor
xor
sahf
jae
push
sbb
scas
and
cld
lock
loopne
fdivl
lret
dec
push
pop
mov
pushl
shl
mov
shlb
test
shll
cli
out
push
fstl
sbb
jnp
adc
xor
adcl
sub
or
dec
sub
mov
imulb
pop
scas
sti
jl
or
test
es
mov
ljmp
into
inc
in
adc
paddusb
fs
test
xor
inc
cs
mov
pushl
movsl
xchg
sbb
ljmp
xchg
je
jne
test
jg
sarl
inc
out
idiv
cli
leave
mov
xor
fwait
leave
push
adc
sarb
ffreep
mov
jb
lret
fimull
pop
in
mov
lahf
lods
in
sbb
mov
shrl
pop
inc
faddl
sbb
ljmp
jp
push
cmp
movsb
sbb
ljmp
mov
jae
jmp
cmp
popf
push
test
shll
leave
pop
cmp
mov
mov
jecxz
loopne
ljmp
or
jmp
mov
daa
dec
push
aad
sahf
cld
dec
stos
mov
decl
lret
xor
fisubl
flds
dec
mov
cmpsb
xchg
mov
out
cli
ffree
inc
push
inc
dec
out
testb
cmp
outsl
ret
dec
push
add
push
xor
mov
sbb
adc
jns
mov
lods
data16
aas
sbb
sti
pop
out
fs
repz
imul
mov
adc
inc
pop
and
adc
sub
insb
mov
fsts
xlat
outsb
push
inc
das
ja
int
pop
pop
dec
rol
xor
pop
aaa
adc
adc
fwait
sbb
decl
mov
pop
pop
inc
mov
jl
enter
push
mov
das
push
xor
ljmp
stos
pusha
adc
sbb
shlb
call
popf
dec
ljmp
mov
decl
mov
sub
fcoms
aam
xchg
ret
es
out
out
out
xchg
loop
aam
pushl
call
mov
pop
add
scas
fistl
push
das
cli
pop
sub
out
cmp
jmp
pop
nop
out
loop
call
and
sti
popf
repnz
jns
decl
inc
loop
sub
pop
mov
rcll
into
ljmp
adc
jg
cmp
cmp
loop
mov
fmuls
cmp
addb
fstpt
adc
pushl
xchg
jbe
stc
add
mov
nop
add
sbb
xor
out
and
aad
mov
xor
loopne
mov
ds
push
mov
push
jb
inc
ljmp
stos
mov
insl
jnp
dec
ds
inc
mov
sbb
push
pusha
mov
adc
mov
cmc
iret
xor
clc
mov
int
inc
enter
lcall
aam
icebp
stos
add
mov
in
lcall
addl
dec
rcrb
out
jnp
mov
je
and
fsubs
sbb
cmp
outsl
cli
mov
push
popa
into
mov
cwtl
cmpsl
xor
dec
pop
js
mov
insl
or
sahf
or
shll
rcrb
lock
lcall
repnz
xor
insl
jg
jg
pextrw
andb
ljmp
out
push
jl
push
shl
mov
xor
add
xchg
mov
movsb
fiaddl
call
leave
fiaddl
je
testl
push
xchg
jbe
mov
sbb
jg
mov
jo
jge
sbb
xchg
rcr
pop
sahf
andl
jg
sub
fdivs
pop
ljmp
mov
push
jb
imul
gs
hlt
call
push
cltd
in
cli
pop
subb
loopne
xchg
jno
jp
pop
das
mov
sub
loope
inc
stc
or
es
fcomi
gs
testb
xchg
inc
fdivr
jnp
pop
sbb
mov
inc
and
divb
or
pop
popf
fbld
add
pushl
jae
jno
test
std
xchg
popa
mov
mov
xlat
mov
jnp
shrb
mov
repnz
fs
pop
mov
lods
push
cmpsl
lahf
outsl
ljmp
dec
xor
pop
sar
jmp
lods
inc
sub
inc
mov
sub
pop
addr16
mov
jl
push
sbb
sub
sub
inc
fstpl
hlt
jo
xor
lds
call
inc
shll
loop
add
add
sbb
jnp
lea
ja
push
inc
xor
outsl
inc
sbbb
lea
push
loope
xchg
lret
mov
rol
stc
dec
fisubs
push
lcall
notb
aas
inc
inc
insb
inc
lahf
push
hlt
repz
fstpt
inc
mov
pushl
sub
mov
adc
cmp
loopne,pn
cld
mov
jmp
pop
mov
sub
xor
jbe
pop
inc
cmpsl
cmp
imul
cmpsl
dec
and
loope
in
jl
xchg
adc
movsb
jge
into
pusha
xchg
popf
push
inc
add
stc
or
or
loop
sub
mov
int
xor
aaa
jp
add
xchg
jmp
cmpb
ljmp
xor
pop
test
sahf
adc
popa
add
imul
sti
ja
das
cmp
addl
mov
xor
mov
insb
bound
into
push
fxch
inc
sub
das
mov
lock
sbb
outsb
outsl
cli
jg
or
mov
xchg
pop
ss
or
call
add
aad
xor
xor
jp
pop
adc
fs
mov
jmp
inc
adc
mov
lret
aas
mov
push
mov
fs
pop
dec
fmul
jle
fwait
inc
pushl
jb
sub
cmc
les
call
incl
imul
insl
aam
dec
in
mov
rcrl
push
mov
decl
mov
lahf
inc
cmp
push
inc
push
das
test
fs
es
xchg
popf
sarl
rclb
fiadds
push
clc
pushl
add
cmp
fildl
and
pop
es
xor
jmp
dec
dec
and
mov
in
push
inc
jbe
movsl
aam
cmp
andl
sbbl
imul
nop
call
pop
ret
into
and
inc
push
jae
and
out
pop
push
jo
xor
jmp
sub
je
lcall
cs
fisubl
pusha
call
lcall
in
mov
stc
sbb
or
and
mov
jg
ljmp
push
mov
sbb
jbe
push
push
pop
test
mov
movsb
movsb
xor
lret
cmp
sbb
in
mov
mov
push
xchg
jb
subl
adc
ss
mov
cmp
int
nop
fdiv
in
out
dec
lods
push
xlat
sahf
jp
dec
xor
xchg
add
inc
mov
xchg
sbb
jno
aas
out
mov
dec
movsb
ljmp
xchg
lret
sbb
fidivl
dec
pop
or
mov
pop
pop
push
mov
pop
jbe
cli
decl
test
inc
lds
cmc
xchg
cwtl
xchg
int3
pushl
lods
xlat
stos
add
adc
or
aas
xor
call
cmp
or
rcrl
jge
push
leave
and
leave
xlat
stc
xchg
add
call
fildl
sbb
jbe
out
sbb
mov
adcl
movd
cmp
fwait
call
scas
xor
clc
lock
insb
ja
sbb
push
xor
sarl
gs
loope
leave
gs
dec
adc
pushf
jmp
pop
push
add
xsha1
cmpsb
or
mov
mov
sub
pushl
fldl
mov
movsl
pop
ret
cwtl
test
or
in
clc
push
fistpll
insb
lcall
push
mov
lock
sub
fmulp
stos
adc
rorb
loop
lea
into
mov
gs
out
jne
call
add
inc
push
repnz
lcall
leave
cmp
test
jge
call
imul
xchg
pop
dec
xchg
cwtl
mov
jmp
insl
mov
sbb
or
adc
movb
mov
ds
sti
pop
out
rcll
incl
or
jle
shll
or
mov
or
jecxz
in
leave
aam
incl
sub
test
mov
and
xor
loope
or
mov
lcall
lcall
leave
loope
cs
fistl
clc
ljmp
in
das
jmp
inc
pushl
sbb
in
inc
jmp
push
roll
push
jg
ret
lcall
cmp
imul
rclb
push
aad
mov
or
add
mov
call
incl
ljmp
sbb
or
pop
aam
jne
adc
pushf
jne
pop
lcall
lods
lret
leave
jl
jle
dec
push
sbb
sub
jge
push
xchg
xchg
js
sbb
jne
rcll
cli
cltd
insb
mov
inc
data16
gs
inc
fwait
jg
push
jge
das
jg
lahf
xrelease
inc
insb
or
push
dec
xchg
bound
sub
pushl
cltd
das
or
mov
pop
ret
clc
push
push
data16
dec
or
ljmp
jmp
jbe
fmuls
movl
int
push
clc
cmovnp
je
call
pushf
test
add
or
mov
fs
pop
std
mov
in
or
adc
loop
call
int3
mov
jecxz
loopne
test
loop
sub
mov
add
insl
add
rol
sub
leave
js
mov
jnp
pop
loopne
shll
cmp
cld
call
imull
push
int
rorl
xor
xor
ljmp
je
incl
cld
xor
fnstcw
scas
lcall
js
cwtl
rorb
das
outsl
incl
push
push
es
cmpsl
cmp
sahf
sbb
cltd
lcall
test
lcall
sub
rclb
shlb
shlb
sti
pop
hlt
push
lahf
fcoms
jmp
pop
fsubl
addr16
xor
cmpsl
inc
jp
inc
push
mov
jmp
xor
fadd
push
jge
jmp
cmp
mov
cwtl
push
insl
jl
mov
mov
mov
jns
enter
push
imull
ret
movsb
pop
out
enter
xchg
push
std
lret
dec
xchg
push
dec
adc
lcall
and
dec
scas
pop
inc
test
xchg
and
jmp
outsb
mov
sub
in
ja
fstps
or
mov
add
pop
fcmovnb
fiadds
cmc
dec
gs
mov
cwtl
lret
sar
fildl
push
inc
xor
clc
mov
adc
add
mov
jg
lret
es
outsb
scas
in
sub
mov
hlt
insb
sub
pop
pop
bound
inc
mov
cmp
lret
fs
call
mov
repz
dec
dec
sub
es
in
sahf
xor
data16
sub
clc
test
pop
adc
bound
call
mov
jp
popf
ja
imulb
iret
mov
div
push
inc
in
or
push
loopne
jg
loop
push
insl
insb
jle
pop
pop
stos
imul
jge
loopne
push
jg
mov
pushl
test
in
mov
pop
push
pop
mov
inc
or
js
je
mov
std
add
movb
es
clc
pop
xchg
jecxz
push
in
popa
mov
pushf
cmpsl
clc
adc
xor
outsb
xchg
fildll
adc
inc
popf
aaa
inc
test
ljmp
add
push
xrelease
and
clc
test
cmp
ror
mov
and
and
icebp
add
mov
incl
pop
fsubrl
leave
mov
gs
in
adc
inc
decl
and
icebp
mov
sahf
mov
lret
inc
jne
pop
dec
outsl
test
insl
into
or
stc
pop
insb
dec
sbb
subl
mov
in
xor
sub
xor
ds
pop
inc
sbb
lcall
mov
sbb
mov
shlb
dec
sub
xor
or
test
call
cmpsl
jmp
movsb
setp
push
dec
loopne
lock
cmp
cs
ljmp
and
jae
das
xchg
or
jnp
popf
mov
bswap
ret
xor
jmp
sub
subl
in
fwait
dec
movsl
cmp
mov
adc
iret
iret
sub
pop
stc
mov
sbb
or
iret
test
cwtl
jb
mov
sarl
mov
mov
adc
xlat
cltd
sarl
inc
sahf
xor
aad
add
cld
jno
ret
pop
rcl
in
mulb
rolb
mov
xor
jg
aaa
ret
sbb
out
shrl
mov
in
fbstp
flds
ficomps
push
cmp
xor
or
pushf
ja
loopne
in
popf
sub
call
push
xor
subl
xchg
dec
ja
pop
xchg
icebp
fidivrl
ljmp
fadds
mov
pop
inc
insb
js
pushl
popf
push
lcall
enter
sbb
outsb
clc
sbb
ss
ss
adc
mov
out
mov
out
mov
fldcw
ret
call
int3
mov
push
incl
and
repnz
or
xchg
add
push
imul
mov
inc
cwtl
jo
sahf
xlat
jmp
movsl
sarl
cmp
sahf
addb
add
adc
pop
xchg
push
dec
test
mov
cld
xchg
hlt
call
jl
jp
mov
shlb
test
aas
mov
push
dec
add
std
stos
lret
pop
jno
int3
or
sub
lret
fnstsw
mov
pop
mov
jp
jns
mov
shl
cltd
dec
sbb
add
call
push
in
call
adc
mov
mov
adc
test
inc
xchg
xor
jo
decl
aas
jbe
push
aad
jge
inc
inc
cltd
iret
dec
mov
pop
mov
xor
xchg
pop
add
cli
jge
and
lcall
xchg
scas
clc
jmp
push
lods
or
push
dec
adc
adc
xchg
inc
fwait
sbb
insw
lahf
lds
clc
incl
cmp
pop
inc
stc
mov
loope
adc
decl
test
lock
lret
stc
in
dec
int3
and
xor
xor
mov
mov
adc
jnp
int
or
scas
repz
in
jmp
push
jg
cmp
mov
sub
test
arpl
lcall
cmp
pop
loopne
incl
jne
lock
pop
sbb
xchg
mov
out
xor
jg
pusha
push
xchg
fwait
and
icebp
cwtl
pop
test
int
mov
fdivl
pop
das
jge
dec
ljmp
dec
xor
push
pop
out
aad
and
jae
movsl
push
pop
loope
cs
pushf
pushf
mov
mov
icebp
jg
cmp
in
sbb
mov
fiadds
inc
movsb
ja
mov
imul
or
imul
pop
movsb
mov
fstps
mov
lcall
adc
mov
pop
orb
flds
xor
jmp
loopne
in
mov
inc
sub
in
or
loope
movsb
stc
jge
add
test
push
test
fnstcw
pop
ret
ljmp
repz
std
xchg
data16
xchg
mov
pop
lods
es
lahf
jg
mov
mov
mov
or
movsl
lods
notb
outsl
pop
jg
lcall
xor
sbb
test
bound
imul
pop
clc
xchg
pop
mov
push
leave
adc
cmpsb
jge
into
inc
sbb
lods
sbb
jg
add
lcall
ljmp
and
in
mov
xor
popa
or
mov
scas
repz
mov
push
add
imul
mov
ja
sbb
sbb
inc
lret
sbb
aaa
jl
sub
sbb
or
jne
inc
imul
mov
add
mov
jg
xchg
inc
and
cmc
ss
mov
and
jne
push
arpl
out
insl
dec
fdivrs
mov
push
xor
push
aas
jns
repnz
mov
mov
dec
mov
mov
mov
mov
data16
add
fnstenv
sbb
int3
outsl
lret
mov
push
jg
mov
in
adc
cmp
or
mov
ljmp
leave
sub
ss
in
xor
movsb
xchg
aad
add
leave
ljmp
call
es
dec
test
es
faddl
and
js
inc
mov
sbb
sarl
jmp
mov
mov
divb
cwtl
jne
mov
sub
sub
outsl
mov
test
xor
repnz
add
jmp
test
push
mov
leave
orb
outsl
adc
daa
xcrypt-ctr
cmpsl
fchs
sbb
in
lds
in
mov
fs
test
and
push
fpatan
mov
jp
shll
jmp
cmp
popw
rcl
push
mov
in
clc
pop
stos
dec
lcall
out
and
lcall
popf
mov
jo
push
pop
lret
mov
hlt
xor
inc
daa
nop
enter
jns
or
pop
lahf
cs
dec
xchg
add
pop
jmp
sub
enter
dec
filds
lcall
push
push
clc
sbb
dec
jp
jno
outsb
push
mov
jno
xchg
cmp
aas
call
push
cmp
fnstenv
out
mov
mov
xchg
sbb
sub
sub
xor
insb
jge
jnp
jge
dec
inc
jmp
outsb
push
inc
in
inc
ror
enter
jp
in
pop
push
andb
adc
lods
pusha
ror
cs
fsubrs
sbb
jne
je
rolb
incl
ljmp
mov
push
rolb
jbe
and
mov
je
xor
fnstenv
loopne
cmp
cld
andl
enter
cmp
decl
mov
pop
push
mov
daa
jp
rcrl
clc
cmpsb
push
ljmp
repz
sub
add
dec
sqrtps
in
adc
outsl
clc
incl
jle
cmp
mov
pop
test
mov
jg
fiaddl
cli
int
insb
xchg
mov
and
fildl
xchg
rcrl
adc
decl
or
sbb
jp
mov
sbb
mov
jg
dec
mov
aaa
in
and
mov
arpl
pop
repnz
sar
call
repnz
ja
movsl
and
xor
lods
cmp
cwtl
dec
or
sti
jb
and
mov
out
push
or
push
rolb
fisttpll
jno
mov
idiv
ljmp
hlt
mov
int
fcomps
jecxz
mov
push
clc
push
scas
inc
jmp
aad
jg
pushl
mov
shl
dec
xchg
in
gs
dec
shlb
sbb
decl
pop
cmpsb
fwait
push
xchg
cmp
push
mov
cs
out
movsb
sbbl
add
add
sub
cld
inc
andl
push
test
inc
lret
xchg
shlb
adc
mov
or
les
lcall
mov
pop
cmp
push
xor
repz
jo
lods
push
inc
lcall
insb
dec
mov
or
push
xorb
sbb
jmp
outsl
lahf
mov
adc
or
add
clc
dec
shll
fsubrl
lcall
popa
lret
lret
cmp
add
sbb
jp
in
inc
insb
je,pn
insb
mov
in
xlat
mov
orb
lock
mov
movsb
ljmp
popf
int
jbe
and
loope
jg
jl
mov
lret
mov
test
adcl
sub
inc
jge
lock
insl
roll
or
inc
imul
testl
into
rorb
mov
cmp
movsb
pop
mov
in
add
xchg
decl
mov
inc
mov
push
pop
and
bound
insl
das
mov
test
iret
popf
ss
sbb
pop
cmp
add
mov
dec
imul
and
cmp
fmuls
xor
mov
pop
sbb
jno
inc
movsl
mov
notl
xor
inc
xchg
mov
mov
xchg
mov
decl
decl
std
xor
inc
mov
push
incl
pop
pop
push
sbb
fbstp
mov
test
cmp
xchg
popl
pushf
sbb
insb
adc
adc
mov
xor
jmp
dec
data16
push
fdivs
xchg
pusha
into
sbb
xchg
int3
pop
adc
lahf
cmc
pop
push
and
or
inc
mov
sub
mov
xor
or
fdivrl
int
aaa
out
es
cmc
les
incl
outsl
imul
bound
popf
jo
mov
pop
nop
xchg
negb
decl
cmp
cmp
repz
cs
mov
fcoms
jl
pushl
jecxz
rorl
push
cmc
nopl
ds
fnstenv
fisubrs
test
mov
int
fcompl
fidivrs
pop
lcall
fmulp
push
jns
ret
mov
xor
adc
push
pushf
cmp
jle
andb
add
in
sub
sbb
loop
int
lock
call
lahf
add
or
incl
ret
add
cmp
sbb
mov
lock
enter
mov
or
mov
jle
xor
pusha
push
cmp
nop
sbb
ljmp
clc
add
adc
and
sbb
and
mov
incl
pop
sub
inc
push
scas
in
sub
mov
mov
or
addb
loop
fwait
inc
or
in
pushl
mov
pop
and
mov
mov
jp
push
sbb
or
decl
mov
out
cmp
jmp
ds
dec
ljmp
lcall
xchg
mov
andb
pop
lcall
jmp
leave
js
pop
dec
jl
mov
push
xchg
pop
js
sub
mov
add
lock
ljmp
jmp
ja
call
jmp
cld
imulb
test
insb
pop
mov
sub
xor
test
or
aas
pop
iret
orl
pushl
icebp
cld
push
pop
gs
push
gs
lret
nop
rcrl
repz
and
mov
pushl
and
pop
js
cmp
cmpsb
pop
js
in
imulb
sbb
push
mov
sub
and
lcall
mov
and
adc
mov
mov
pushl
add
aaa
leave
xor
pop
jbe
addr16
mov
jmp
jo
push
cmpsl
mov
hlt
pop
dec
ss
push
add
stos
mov
xor
call
mov
lods
push
cld
pop
xor
inc
test
mov
add
call
push
arpl
jnp
or
fldl
addb
loop
inc
in
jecxz
shrb
clc
jmp
mov
sub
cmp
xor
push
test
addl
jmp
inc
cmp
jl
push
out
or
jle
lret
ljmp
mov
mov
cmp
ficoms
xchg
shrb
mov
dec
xor
roll
lcall
in
sahf
incl
and
mov
nop
lcall
movsb
mov
mov
mov
sbb
outsl
jle
out
mov
push
sbb
mov
pushl
mov
push
cltd
repz
rcrb
hlt
out
push
jns
push
cwtl
ret
xchg
hlt
lods
ret
ss
sbbl
add
mov
and
jae
aaa
push
sbb
or
mov
stc
into
les
and
cltd
dec
xor
mov
aaa
xor
jge
fdivrs
incl
jmp
in
mov
mov
dec
xchg
add
fcos
incl
xor
icebp
outsb
push
adc
sarl
and
sbb
jp
xor
scas
ljmp
mov
dec
xor
push
mov
sub
imul
and
cltd
stc
enter
sbb
or
adc
adc
out
iret
cld
lahf
and
clc
xchg
cmovo
cmc
lods
movsb
push
in
lea
adc
mov
mov
icebp
jnp
jne
test
add
pop
pusha
and
cli
es
ds
insb
lods
in
shufps
pushf
pop
es
cmp
and
lret
call
lcall
push
std
bound
xor
stc
lahf
cmpsb
stc
jns
and
orb
pushl
jle
push
xchg
xor
cmp
add
push
not
enter
popf
movsl
push
xchg
xor
ljmp
aad
sbb
or
loope
test
decl
jo
out
and
xlat
dec
out
inc
pop
adc
mov
test
xchg
scas
push
sti
mov
push
jp
inc
jmp
push
mov
or
fisubl
sahf
scas
stos
mov
cs
cmp
stos
inc
sbb
cmp
adc
mov
mov
or
jg
mov
lock
sbb
or
mov
lock
sahf
mov
cmpsl
inc
stc
and
lcall
xchg
cmp
add
insb
jecxz
add
xor
mov
popa
pop
push
mov
sti
cmp
add
mov
and
inc
cmpsb
add
sbb
negl
push
add
incl
xor
andl
in
into
sbb
pop
dec
adc
add
cld
mov
pop
sbb
cmp
addr16
cmp
mov
cmp
sbb
into
imul
adc
jne
push
inc
xchg
push
popf
sbb
dec
jmp
into
jg
xor
int
xchg
xor
xor
inc
sar
jg
push
filds
es
cmp
hlt
repnz
inc
mov
pushl
sbb
push
gs
rcrb
out
sahf
notl
sbb
xor
popa
ret
inc
cmp
or
xchg
or
lea
sbb
jle
int
or
sbb
nop
out
adc
cmp
inc
lcall
jl
dec
test
in
xchg
mov
call
push
cmpsl
gs
lods
xchg
mov
cmpsl
dec
mov
incl
or
out
jmp
dec
jno
and
inc
pop
mov
and
movsl
loop
call
out
stos
repz
mov
sub
adc
jne
enter
pushl
sarl
sub
cmpsl
aam
mov
lock
fstpt
out
loop
subl
lods
mov
add
mov
daa
neg
aad
je
sarl
pusha
mov
xchg
jmp
fmul
add
lret
outsb
jnp
js,pt
fadd
add
push
lock
dec
xor
inc
outsl
cmp
dec
stc
fidivrl
pop
dec
negl
nopl
cmp
pop
push
daa
sub
ret
mov
call
pusha
mov
inc
xchg
or
jnp
mov
jns
out
scas
push
pushl
adc
mov
lcall
pop
or
push
xchg
jg
add
shrb
sub
pop
cmp
xlat
incl
push
mov
sub
jle
gs
jo
andb
lea
cmp
in
cltd
jbe
push
and
push
xor
test
or
stc
lock
mov
test
cwtl
enter
xor
adc
jge
lcall
addr16
and
gs
negl
lcall
test
ljmp
cmp
mov
popa
fcmove
pop
ud0
fcomi
je
mov
mov
lcall
xchg
inc
push
mov
jno
ljmp
int3
xchg
cmpsl
xor
mov
into
repnz
and
dec
roll
and
gs
pushaw
xchg
mov
and
fistpll
mov
cmc
mull
jb
shl
lds
inc
xlat
lret
mov
pop
imul
divb
pop
mov
adc
jo
repnz
and
les
pushl
fwait
jg
xlat
or
dec
imul
jge
stos
xor
sbb
push
or
aaa
adcl
lahf
push
mov
jmp
lock
in
and
pop
jne
lea
or
push
movsl
sub
fnstcw
decl
cltd
jge
icebp
or
js
leave
pusha
icebp
mov
jmp
shll
mov
out
pop
stos
mov
push
sbb
pop
cmp
adc
mov
movsb
mov
jns,pn
enter
mov
cmp
adc
and
cwtl
jbe
stos
sbbl
inc
xchg
clc
lcall
adc
jnp
jge
hlt
test
pusha
sbb
add
jns
addr16
inc
fnstenv
leave
jp
push
or
mov
mov
ret
mov
rorl
int3
sbb
jb
push
xchg
mov
ss
call
and
lcall
mov
or
xorb
push
decl
insb
pop
stos
or
inc
test
inc
cmp
movhps
call
sub
ss
inc
pop
jle
sti
pusha
jnp
push
out
outsb
xorb
ljmp
ret
clc
jne
add
rcll
mov
push
call
xchg
sub
or
push
loop
push
and
push
push
push
imul
dec
out
popf
adc
and
or
into
cwtl
lea
stos
rclb
adc
lods
pop
mov
ljmp
leave
mov
das
fdivs
fistps
and
decl
jecxz
sub
jg
mov
ficoml
inc
pusha
lcall
and
push
ljmp
jns
lea
sbb
dec
pop
add
cld
dec
mov
push
or
mov
mov
mov
mov
jg
data16
mov
sbb
jbe
in
movsb
shl
orl
xlat
js
loop
xchg
pop
push
xchg
iret
les
leave
and
decl
je
stos
dec
pop
push
pop
push
xchg
enter
int
movsl
cmp
jg
xchg
cs
fsubrs
and
mov
add
or
lods
rcr
mov
out
ret
cmpsl
sbb
inc
movsl
jmp
xchg
xor
xchg
or
xor
enter
fisttpll
xchg
jnp
push
pop
xor
and
push
subl
mov
arpl
push
ja
lcall
dec
inc
inc
jmp
mov
adc
ficoms
jg
pop
xchg
push
mov
sub
lret
push
pop
add
aaa
push
neg
jp
jecxz
mov
pop
mov
inc
mov
into
mov
jg
lea
rcr
jbe
not
repz
jp
arpl
inc
and
out
out
not
push
mov
sbb
cmp
cmp
enter
lret
insl
xchg
pusha
pop
int3
call
cmp
xor
mov
inc
sub
push
cmp
xchg
mov
sub
rcll
incl
and
sbb
push
jg
pop
jp
push
int
sbb
js
jne
adc
fidivl
add
mov
add
jmp
push
jbe
pop
jo
sbb
ljmp
cmc
sahf
call
decl
fimull
push
mov
shrb
loope
inc
push
pop
insb
lahf
addb
dec
cmp
mov
rclb
aam
inc
pusha
sbb
repz
dec
sbb
pop
ret
incl
hlt
or
or
xchg
data16
fucomp
mov
add
std
xor
cld
es
fdivl
or
pop
push
in
add
push
std
ljmp
add
and
mov
push
daa
sub
xchg
mov
pop
pop
std
insb
nop
pop
pop
jne
in
ds
mov
enter
mov
in
out
hlt
mov
incl
mov
sub
insb
mov
adc
scas
cmp
or
test
lcall
sub
ja
call
out
mov
pushf
into
jae
sub
fmull
mov
dec
push
lods
cmp
mov
dec
je
shrl
inc
out
fsubp
jo
lods
cltd
mov
xor
push
icebp
jp
outsl
int
push
rorb
shlb
lret
add
push
in
movsb
mov
push
mov
adc
bound
call
repz
cli
sub
rol
mov
movsb
fcoml
mov
mulb
jmp
imul
fsin
pop
dec
xchg
pop
movsb
inc
dec
andb
fists
outsb
xchg
xchg
arpl
notl
aas
xor
and
mov
aaa
out
cmpsb
push
addr16
xchg
add
mov
call
and
sub
cmp
stos
or
pushf
mov
fisubs
arpl
push
sub
mov
jge
xor
xchg
pop
aaa
pop
add
dec
mov
push
and
jge
sbb
aaa
pop
clc
in
fldt
mov
rclb
in
dec
fstps
push
aam
add
in
pusha
es
pop
adc
push
dec
sbbl
addb
iret
pop
nop
les
mull
jg
ret
scas
jns
ret
cmp
mov
incl
jecxz
pop
ficoms
and
idiv
jbe
mov
mov
pop
adc
cwtl
ret
cmp
xchg
xchg
aam
xor
cltd
ja
out
hlt
aaa
lcall
mov
xlat
push
cmp
jb
push
mov
ss
push
inc
testl
sbb
mov
cmpsl
add
movsl
icebp
stos
pop
mov
adc
lret
pop
pop
xchg
pushl
movsl
adc
sub
inc
mov
subl
jge
je
inc
je
mov
incl
fdivr
push
fs
insl
xor
xchg
je
and
ljmp
mov
jl
mov
push
rcrb
push
ret
cs
sbb
xor
lods
lcall
incl
add
shr
cmp
pop
mov
test
aam
ljmp
decl
sbb
mov
sti
push
sarb
outsl
in
js
mov
push
cmpb
sub
sbb
loop
push
loopne
pop
dec
ljmp
fnstenv
sti
jns
pop
lcall
dec
into
push
mov
mov
jns
jg
lcall
or
mov
dec
pusha
jns
aam
inc
out
jae
inc
pop
repz
and
mov
fs
call
jecxz
sub
add
mov
push
cli
out
mov
sub
xor
orb
jb
insb
int3
or
mov
call
inc
out
outsb
mov
aaa
xor
scas
data16
jmp
pop
movsl
lret
add
lret
test
mov
mov
add
xor
jmp
push
inc
frstor
icebp
or
inc
pop
jle
in
inc
sbb
adc
mov
stc
fadd
inc
adc
adc
and
inc
and
sbb
punpcklbw
mov
pop
inc
dec
movb
inc
std
mov
fidivrl
aaa
test
jae
push
insl
sub
cmp
jle
movsb
pop
pop
imul
add
mov
ljmp
pop
xlat
cmpb
cmp
push
stos
shl
xchg
mov
std
fldcw
imul
or
mov
std
sub
std
loope
decl
xchg
movsl
dec
out
addr16
lahf
and
mov
int
jmp
jo
jns
ljmp
xlat
es
outsl
test
sbb
shlb
loop
mov
cmpsl
mov
scas
and
pop
or
scas
mov
pushl
jbe
sbb
pushf
and
push
or
xchg
dec
call
outsb
out
jnp
add
lcall
lcall
popf
loope
jbe
mov
movsl
mov
fidivrl
jg
stos
ljmp
sub
cmp
mov
or
aad
dec
xor
int
add
aad
sub
fsubrp
repnz
mov
div
test
fimull
ret
pop
jnp
cmp
movsl
mov
call
movb
xchg
xor
sbb
dec
ss
mov
ds
pop
std
ja
adc
nop
imul
jb
adc
mov
xor
sub
ljmp
adc
fstpl
imulb
pop
lret
in
pushf
cmp
cltd
gs
add
incl
xchg
xlat
jne
add
imul
outsl
loop
jmp
mov
add
sbb
mov
or
stc
inc
push
mov
lea
aam
lock
sub
pushf
xor
push
js
imul
decl
sbb
push
push
pop
jnp
jbe
clc
icebp
add
clc
mov
or
cbtw
outsb
test
mov
jbe
bound
arpl
inc
lahf
push
mov
lds
icebp
jmp
inc
hlt
test
xor
inc
sbbb
pushl
in
faddl
mov
lret
les
lods
test
cmp
out
jbe
xor
test
and
js
testl
fcoml
mov
gs
fisttps
hlt
cli
addr16
es
rcr
int
addr16
jmp
and
icebp
loop
es
loopne
mov
mov
roll
adc
pop
int3
out
push
outsb
out
mov
movsb
lcall
mov
cwtl
loope
in
lcall
std
jb
icebp
dec
push
sub
cmpsb
leave
leave
inc
push
sub
cli
mov
dec
xchg
cmp
pop
and
jg
jo
inc
pop
or
ret
jg
lcall
fmuls
loope,pt
fnstenv
mov
outsb
es
xchg
adc
int3
out
jp
mov
fimuls
jne
adc
rcll
jnp
fidivs
outsl
pushf
lods
call
xor
sahf
lret
popa
fnstenv
jo
or
add
in
cmpsl
imul
adc
aaa
sub
lods
outsb
test
pushf
icebp
xchg
push
mov
incl
lea
stos
icebp
pop
cmp
push
push
fndisi(8087
out
std
repnz
in
mov
fs
bound
leave
es
rcll
int
xchg
mov
sar
pusha
or
sbb
lahf
dec
scas
cmp
add
xchg
pop
icebp
mov
pop
mov
xchg
pop
pushf
jle
ret
jp
aaa
sbb
fdivrp
jmp
into
insb
dec
cltd
pop
sub
loopne
jo
sti
fsts
sbb
dec
jbe
inc
lods
adc
cmp
loop
incl
adc
jno
mov
leave
mov
jb
popf
lods
pop
add
fsubs
jg
enter
dec
sub
push
mov
mull
movsb
inc
push
and
into
inc
xor
xchg
sbb
push
xchg
jmp
mov
xchg
clc
out
add
cmp
es
pusha
insl
and
sub
or
cmpsl
sub
jmp
sub
pop
div
js
and
mov
inc
in
out
mov
lods
gs
pop
or
ljmp
sahf
insl
js
sbb
xchg
push
outsb
outsb
loope
popa
sahf
lock
sub
xor
stos
mov
movsl
add
daa
sahf
or
sbb
ljmp
addr16
pop
lea
call
ja
jmp
addr16
add
scas
stc
mul
add
call
call
cmp
negl
ret
mov
call
insb
sbb
int3
xor
cmp
mov
roll
bswap
pop
lcall
ljmp
add
add
cltd
rolb
xchg
aad
cmp
lcall
imul
mov
aas
sbb
xchg
xchg
push
push
mov
stos
sar
mov
mov
lods
push
and
push
imul
jg
lcall
push
xchg
push
into
and
pushf
ret
and
mov
das
call
lods
fidivs
das
das
ljmp
sub
mov
test
icebp
mov
scas
sub
sub
sbb
dec
inc
fists
data16
jg
push
cld
int3
fstpt
in
pusha
mov
mov
out
xchg
ljmp
mov
cltd
adc
into
and
jmp
imul
imul
mov
insl
mov
inc
inc
addl
imul
xor
ret
pop
icebp
decl
pop
lret
in
ficoml
inc
sub
add
cld
jp
xor
popf
mov
lcall
sbb
cmp
dec
mov
shll
cli
outsb
jmp
jmp
mov
shr
fistps
lods
pop
sbbl
xor
gs
mov
ljmp
daa
fs
dec
ss
lock
out
mov
cmp
out
mov
mov
call
out
jne
aam
loopne
ds
adc
fwait
test
xchg
sub
mov
fbstp
dec
cmp
in
fisubrl
enter
es
xor
mov
adc
repz
lret
adc
push
and
add
sahf
subl
cmpb
in
mov
outsl
pop
and
subl
fdivrp
fwait
or
inc
mov
xor
insb
xor
test
pushl
loop
mov
push
fsubl
adc
shrl
dec
sub
mov
pop
jne
xchg
and
mov
jg
dec
xor
sub
mov
adc
imul
mov
cmp
mov
pop
or
decw
add
mov
lahf
xor
pop
ss
popa
outsb
push
sub
sbb
jbe
scas
movsb
cmc
push
mov
cwtl
rcll
mov
pop
dec
rcrl
fisubrl
jne
dec
pop
jg
cmp
mov
and
lahf
arpl
test
ss
mov
xchg
fidivrl
cmp
loope
inc
clc
sub
int3
adc
testl
inc
dec
sub
or
sarb
jg
setp
inc
inc
add
call
mov
sbb
xor
out
insl
lods
fwait
andb
sahf
inc
sti
inc
fsqrt
push
xor
xor
pop
loopne
mov
cmp
insb
fcoml
decl
data16
mov
in
cwtl
and
mov
out
push
test
adc
or
jae
fsub
jl
rcrl
push
outsl
adc
dec
outsl
mov
xchg
sahf
pop
mov
jl
mov
icebp
and
ljmp
inc
and
mov
popa
lahf
mov
dec
mov
insb
mov
mov
cli
jle
decl
or
fstps
idiv
cmp
xor
or
lcall
into
cmp
orb
mov
xchg
enter
incl
mov
mov
popf
stc
sti
ret
add
in
sbb
lds
pop
dec
ds
pushl
mov
sub
inc
fisubrl
adc
jbe
inc
rorb
cmc
sbb
mov
dec
adc
pusha
cmc
push
fwait
pop
pop
incl
mov
xchg
outsb
fsubrp
outsl
jns
ss
out
or
movsb
xchg
ljmp
leave
sbb
lcall
adc
xchg
out
ret
mov
sub
jne
inc
arpl
jmp
jns
lods
decl
test
mov
or
mov
jmp
mov
cmp
pop
dec
mov
jmp
js
popa
lock
outsl
mov
lret
and
cli
pushl
and
xchg
push
dec
adc
iret
xor
dec
sete
pushl
lock
fstps
fs
sub
or
in
insl
push
scas
into
lods
test
cmp
cmc
jmp
in
cmp
push
mov
cmpsb
push
push
sub
and
xchg
lods
test
sbb
pop
pusha
pop
imul
adc
popf
leave
rorl
mov
lea
and
sub
sub
mov
andnps
mov
hlt
xor
stc
cli
xor
push
dec
sbb
cmp
aaa
push
jle
jmp
mov
push
lods
sub
mov
or
xchg
repz
cmp
lds
test
add
xchg
adc
push
stc
pop
mov
mov
mov
fistps
imul
fdiv
sub
fwait
sbb
arpl
and
lods
scas
nop
hlt
ljmp
fidivrl
mov
sbb
std
cli
dec
movsl
test
push
sbb
add
bswap
inc
shll
and
pop
popa
adc
push
xor
sbb
adc
adc
ljmp
sub
leave
xchg
mov
out
in
or
sbb
sub
inc
jmp
mov
mov
sub
mov
fbstp
inc
lods
jbe
sub
mov
push
out
sbb
pushl
loop
push
mov
test
nop
inc
jecxz
pushf
mov
xchg
jle
aam
lcall
add
adc
rolb
mov
mov
in
cmp
pop
mov
pop
cli
inc
xchg
mov
cld
dec
stos
test
enter
pop
jp
cmp
push
pop
int3
sbb
push
adc
lcall
inc
out
dec
pop
adc
and
push
mov
nop
out
xchg
mov
push
stos
out
pushl
cltd
adc
mov
sarb
xchg
stc
sbb
or
outsl
fmull
cwtl
pop
enter
inc
stos
xchg
sbb
fdivr
jg
jns
ss
mov
dec
pop
xor
add
and
mov
or
call
or
inc
pop
mov
ss
push
cltd
sub
imul
xchg
lock
pop
out
pusha
xor
mov
cltd
xor
adc
xor
add
mov
pop
pop
ljmp
inc
sbb
jb
jo
xchg
mov
aam
ljmp
ficoml
fs
imul
cmpsl
incl
dec
jbe
inc
adc
mov
sbb
cmp
outsl
push
mov
loopne
sbb
cmp
loop
inc
jns
mov
hlt
fadds
decl
jns
sbb
scas
add
fst
dec
mov
mov
test
dec
inc
scas
hlt
imul
lds
mov
test
pop
ljmp
ret
push
mov
and
jne
xchg
pusha
notl
cmp
xchg
mov
cmpsl
xchg
jp
push
insl
xchg
jnp
js
and
test
inc
inc
pop
mov
sar
mov
outsl
xor
lods
mov
xchg
repz
add
call
inc
mov
xorl
repnz
pop
jo
add
push
jmp
sar
push
dec
mov
sub
sarl
xchg
jge
fildl
adcl
cmp
lret
xlat
jle
dec
fisubl
pushf
test
pop
adc
sbb
shl
dec
mov
ficompl
test
mov
or
ljmp
dec
das
xor
or
dec
xchg
das
lods
aam
ja
ljmp
clc
addb
mov
sti
ljmp
aam
cwtl
mov
emms
cld
decl
xchg
cltd
lahf
push
sbb
adc
subb
in
imul
or
test
inc
loop,pt
push
or
adc
pop
mov
in
inc
pop
movsb
cmc
jl
cmp
cmpsl
push
inc
lock
lock
and
jo
mov
inc
xor
push
imul
inc
mov
mov
cli
lahf
movsb
sbb
mov
mov
nop
or
or
push
mov
lods
cwtl
pop
cmc
mov
push
jmp
pop
or
daa
int3
xchg
push
jo
jb
mov
pop
test
push
and
ficoms
jecxz
jle
sbb
cmp
je
lock
pusha
rcll
cmp
mov
les
jmp
jbe
outsl
jle
xchg
int
hlt
mov
jo
xchg
lret
call
add
orl
and
imul
adc
leave
divl
xlat
push
jg
push
sbb
mov
lret
jo
lcall
add
jmp
leave
clc
dec
or
adc
in
xor
jg
testb
cmp
gs
and
test
mov
mov
dec
push
movsl
imul
mov
sub
push
push
sub
test
shlb
jbe
xchg
cmp
scas
icebp
cmp
lret
aas
std
adc
xchg
xchg
dec
cld
mov
push
adc
dec
mov
icebp
aam
adc
cld
xlat
cmp
push
or
decb
cld
lret
xchg
jo
xchg
mov
repnz
jmp
subl
in
sbb
sub
push
dec
repz
call
decl
lods
or
mov
pushf
push
aaa
mov
dec
push
in
jmp
mov
push
adc
daa
iret
mulb
push
out
push
ljmp
sar
incl
insb
push
lock
adc
push
es
fisubrl
lods
cmp
pop
inc
shrb
hlt
stc
out
lock
and
jmp
rolb
pop
xchg
es
js
mov
sub
jmp
jp
mov
xor
mov
leave
add
xor
cmp
push
jno
pop
inc
xor
sbb
sbbl
push
jl
test
decl
sub
push
xchg
call
rcrl
fcoml
fildl
add
ret
loopne
lea
sbb
pop
mov
pop
mov
loopne
dec
mov
push
cmp
call
cli
pop
mov
int3
pop
stos
pop
xchg
and
cwtl
out
add
notb
aam
push
adc
loop
out
mov
repz
or
jle
or
call
push
jg
int
jecxz
push
push
sub
inc
fldenv
cmc
or
fdivrl
lds
and
push
cmp
and
sub
xchg
adc
loopne
incl
push
push
out
outsb
inc
in
or
and
pop
jmp
mov
or
lods
test
call
fidivrl
add
aas
into
scas
popf
loope
mov
leave
mov
xor
pushl
sti
add
sbb
clc
cmp
push
aad
mov
ds
repnz
add
jmp
nop
xor
cmp
mov
lahf
mov
cs
mov
cmpsb
push
mov
jg
ficompl
data16
jg
jle,pt
jmp
pop
sahf
mov
mov
ficomps
jg
push
push
mov
ljmp
and
jb
pop
push
mov
cltd
inc
lds
xchg
dec
xor
ljmp
orb
inc
psrlq
sahf
inc
sbb
and
mov
fadd
rclb
call
pop
dec
push
ds
scas
dec
into
mov
push
lret
sbb
sbb
inc
xchg
xor
mov
cmp
mov
shrb
cmp
ja
xor
rcll
out
lcall
ret
adc
call
push
push
fnsave
jns
mov
or
mov
xchg
xor
dec
psubb
nop
pop
out
ss
inc
mov
iret
xchg
sub
push
dec
xor
adcb
aaa
add
nop
push
xchg
int
pop
out
mov
and
inc
ds
aas
sbb
push
mov
andb
add
js
addb
xchg
add
das
sub
lret
xor
pop
pop
add
scas
push
mov
pop
imul
xchg
xor
scas
pop
aam
sub
mov
dec
cld
pushl
out
stos
push
xchg
push
imul
fldcw
cmp
flds
shlb
test
xor
stos
call
bound
lret
xor
cmp
and
pop
push
mov
push
ss
decl
fdivrs
imul
adc
out
mov
pop
loop
lcall
sub
fdivs
dec
hlt
aad
call
ljmp
push
or
cld
sub
xor
mov
and
mov
scas
fisttps
mov
sbb
cwtl
lcall
or
imul
enter
mov
sqrtps
mov
fisttpl
divl
out
pop
pop
xlat
push
push
cmp
xor
mov
cld
dec
clc
pop
cs
cmpsl
mov
jle
out
mov
jecxz
and
cmp
incl
int
loop
arpl
popa
enter
mov
jl
pop
cs
daa
and
jmp
mov
shl
or
and
bound
daa
ficoml
arpl
mov
in
pop
imul
int3
cwtl
fnstenv
cltd
push
ljmp
clc
decl
repnz
loopne
lcall
fucomp
adc
or
repz
sub
push
or
fimuls
jo
xchg
mov
cmp
lds
sbb
pop
jle
sub
decl
icebp
pushl
ja
xchg
push
mov
jmp
adc
inc
jo
jge
icebp
pushf
pop
xor
fisubrs
stos
cltd
xchg
rcl
push
fstl
loop
push
mov
mov
gs
jge
jl
adcb
decl
or
mov
scas
push
cmp
filds
mov
mov
dec
jmp
pop
xlat
xor
incl
lret
dec
addr16
data16
add
imul
cmpsl
clc
sbb
dec
cmp
jmp
pop
pushf
lock
popa
dec
inc
lods
cmpsb
enter
pop
fidivs
inc
pop
icebp
das
mov
lcall
stc
popf
pop
or
xchg
fildll
cld
std
es
data16
cli
mov
popa
adc
add
mov
incl
test
push
pop
xchg
or
xor
dec
outsl
test
xor
inc
rclb
in
or
add
jle
push
pminsw
icebp
addr16
mov
test
inc
jge
adc
cmp
jbe
lcall
scas
jmp
adc
aam
jl,pt
loope
ret
insb
lds
inc
xor
pusha
ljmp
insb
or
adc
lcall
clc
lea
adc
ljmp
gs
pop
jg
pop
and
cwtl
push
or
push
mov
jmp
mov
pop
subb
ja
mov
cltd
popa
add
out
test
test
addb
mov
rcll
xchg
push
repz
add
ljmp
arpl
adc
add
call
inc
or
pop
filds
inc
mov
push
xchg
sub
push
fbld
jbe
outsl
cli
call
mov
repnz
sub
shll
mov
jmp
inc
jecxz
pop
xor
repz
lret
movsl
call
push
fs
insb
jmp
or
sbb
jecxz
cmp
call
into
insb
cmc
loope
mov
or
inc
add
jg
dec
fisubrl
cmovno
or
lcall
ret
inc
mov
ss
cld
ss
test
cmpsb
push
sahf
xchg
lret
pop
lret
imul
imul
dec
mov
mov
jg
imul
fwait
or
cwtl
dec
mov
loopne
or
cmp
in
imul
xor
incl
cmp
fsubl
mov
movsb
jnp
fdiv
adc
cmp
repz
jbe
and
sbb
leave
enter
cmp
jno
xchg
movsl
mov
lock
jg
jnp
loop
icebp
mov
shl
fucomip
xor
in
movsb
repnz
inc
movsb
cwtl
popl
dec
loopne
test
jae
repz
arpl
and
push
addr16
mov
inc
pop
mov
les
notb
add
push
pop
pop
ds
fsubs
and
lcall
jmp
rorl
imull
sub
xorb
lahf
fcmovbe
ret
jae
sbb
push
mov
lcall
cmc
pop
sbb
pushl
shlb
mov
in
or
cli
roll
pop
push
cmp
incl
mov
xor
bound
and
std
sbb
shll
imul
inc
push
mov
pop
loope
sub
mov
loope
int
mov
mov
dec
inc
daa
stc
jle
mov
roll
pushf
fistl
icebp
mov
pushl
shll
xor
cltd
aad
mov
clc
repz
jbe
sub
lcall
push
xchg
pop
fs
clc
aaa
pop
mov
test
fdivl
rcrl
jle
std
cli
call
movsl
pop
ljmp
call
mov
push
push
lahf
imul
aam
sbb
out
mov
ds
pop
mov
mov
xchg
or
ds
add
js
mov
mov
cwtl
loope
sbb
test
sti
mov
lods
jae
les
jns
outsb
scas
xchg
lret
or
cmp
data16
lcall
decl
in
lea
pop
test
adc
xor
loopne
decl
ret
push
mov
sub
mov
xchg
push
sbb
mov
fcos
bound
mul
pop
stos
movhps
into
jl
das
ss
jp
shll
cmp
shl
sub
out
cli
jmp
data16
mov
int3
pop
mov
shll
and
jno
les
aas
mov
call
inc
jno
call
pushf
stc
adc
xbegin
jns
xchg
roll
adc
decl
xor
push
inc
inc
sbb
mov
push
lcall
push
cmp
shrl
and
add
ja
fwait
mov
adc
jmp
imul
xchg
icebp
and
insl
nop
xchg
or
sbb
jno
push
les
sub
mov
popf
sub
mov
incl
and
ret
jb
xor
repnz
icebp
lock
call
and
xchg
or
jb
shrl
xor
lods
or
lcall
and
inc
test
xchg
and
push
sub
popf
fstpl
mov
xchg
cmp
sub
cmp
negl
fmulp
clc
cli
lret
mov
mov
gs
fistl
lods
xchg
or
push
fistpll
lock
dec
xor
or
mov
push
lret
repz
stc
dec
ljmp
cld
subl
lods
cmp
mov
cmp
xor
lahf
int3
cs
mov
inc
jg
push
incl
adc
testb
mov
imul
repz
pop
jnp
xchg
cmp
inc
fwait
dec
cld
lcall
jl
and
gs
rcll
out
icebp
push
movsl
mov
mov
jecxz
cld
pusha
pop
dec
xchg
jnp
xor
or
jmp
sahf
xor
lea
leave
pop
out
fldt
movsl
mov
sub
dec
decl
fidivl
stc
mov
insb
scas
jecxz
lds
adc
shlb
test
sub
call
ljmp
push
mov
cmc
incl
test
mov
pop
push
add
sarl
outsb
xor
movsl
mov
stos
mov
pushf
xchg
incl
xor
mov
fcoms
push
mov
or
jmp
mov
rorl
mov
movsb
je
sub
fcmovu
xchg
jl
and
sbb
test
jno
decl
mov
stos
sbb
fmull
xchg
and
dec
stos
shl
and
mov
mov
clc
std
das
arpl
and
mov
sahf
stos
call
xor
mov
std
jle
aaa
mov
push
popf
incl
pop
or
cmp
mov
fcmove
cmp
adc
movsl
jmp
cmp
mov
out
push
push
nop
push
push
sbb
loope
testl
adc
ljmp
fsub
mov
add
int
jnp
dec
adc
mov
mov
data16
in
add
ljmp
pushl
in
xorb
rcrb
scas
inc
leave
push
jmp
addr16
std
pop
scas
test
mov
mov
mov
sub
sti
mov
dec
cmp
add
dec
or
insb
xchg
shl
or
out
scas
dec
cmp
inc
xlat
xor
cld
lcall
ljmp
and
fcmovbe
enter
or
gs
jge
sbb
out
add
call
aas
shl
and
aad
sub
cmp
dec
ret
mov
repz
pop
push
jbe
std
jg
xor
dec
pop
cmpsl
test
pop
dec
ss
les
nop
int
mul
stos
ljmp
dec
xor
sub
inc
popa
lods
int
shrl
call
mov
or
test
and
cmp
dec
mov
hlt
dec
and
add
inc
addb
cltd
push
lock
xlat
shlb
shll
jg
dec
push
lcall
and
dec
mov
or
inc
repnz
jb
test
cmp
mov
test
repz
mov
mov
out
cli
adc
lock
rclb
sub
rolb
cmp
scas
je
pusha
xchg
clc
fdivr
add
pushl
xor
dec
aad
outsb
mov
pop
enter
and
imul
cli
push
pop
std
mov
and
stos
jo
xor
sub
lcall
sub
ljmp
fistps
mull
out
out
mov
cs
ret
add
sbbl
or
in
dec
push
insb
mov
or
leave
filds
jmp
push
xchg
orb
dec
sbb
jmp
cli
ljmp
dec
jp
pop
iret
cmove
pop
mov
pop
push
into
idivl
cmp
sahf
jl
sub
in
hlt
push
fwait
in
mov
addb
ljmp
imul
jg
lcall
imul
lea
ljmp
andl
mov
push
mov
inc
push
sub
in
addr16
add
in
ja
aam
mov
jl
lcall
pop
jb
mov
and
rcr
lcall
scas
sbbl
popa
and
call
mov
dec
movsl
ljmp
mov
xchg
add
xor
add
pop
insl
cmp
xrelease
incl
xchg
fbstp
fisubrl
mov
push
enter
xlat
push
les
icebp
decl
pop
idiv
sbb
outsb
cs
push
repnz
add
in
fistpll
bound
mov
lods
xchg
mov
cmp
call
ljmp
add
test
pop
and
xlat
js
mov
adc
daa
fldl
sbb
outsb
in
loope
cld
ret
sbb
jbe
mov
decl
dec
call
arpl
xchg
mov
shrb
adc
or
or
into
push
mov
xor
cld
incl
in
clc
pop
sub
enter
mov
imul
jg
ds
lret
cmp
cmp
jb
sbb
inc
sub
cs
fistps
xor
popa
lret
into
mov
mov
push
cmp
xor
pop
sub
mov
test
jae
sbb
fwait
sar
les
popf
cmpsb
xchg
mov
ret
mov
mov
mov
cmp
clc
sub
imul
fs
xor
pop
dec
aaa
cmp
xchg
push
xor
mov
push
or
andl
cmp
outsl
cmc
pop
xchg
sub
imul
mov
in
mov
fnstsw
jbe
mov
lcall
scas
pop
add
add
mov
mov
icebp
mov
stos
adc
cmp
sti
enter
sbb
rorl
sub
push
scas
pop
cmp
icebp
push
stc
loope
jge
dec
repnz
xor
ljmp
pop
xchg
cli
xchg
fsubs
call
movsb
jl
push
xor
mov
sub
mov
or
cmp
decl
rol
popa
jecxz
inc
imul
mov
jl
pop
mov
out
xchg
dec
das
lahf
xchg
ljmp
cmpsb
push
lea
lea
jne
add
sub
test
cli
cld
shlb
or
ja
decl
pop
push
outsl
fs
mov
mov
adc
subb
cmp
cmc
jno
scas
pop
cmpsl
xchg
mov
xchg
and
into
outsb
scas
cli
sbb
adc
mov
cwtl
call
std
cmp
push
sbb
xchg
pop
mov
jecxz
adc
mov
movsl
sbb
call
inc
cmpsl
jge
fsubrs
adc
mov
cltd
jb
loopne
or
ljmp
fcompp
adc
pop
jle
mov
arpl
mov
xor
lea
push
xchg
outsb
xchg
clc
pushl
or
test
mov
decl
pop
sub
std
xor
jg
xchg
sub
jb
loope
lret
or
mov
dec
test
cmpsb
mov
mov
jle
int3
push
jecxz
loop
xchg
push
cld
push
rol
mov
repz
aaa
arpl
decl
add
fs
mov
cmpsb
and
jecxz,pn
scas
push
sub
ljmp
jge
jg
inc
and
aad
pop
outsb
lret
jge
incb
dec
loop
jg
dec
mov
shl
sub
pusha
cld
jo
hlt
mov
fucomi
ljmp
push
stos
jnp
jbe
jmp
cmp
lods
mov
push
hlt
xor
int3
or
cmp
cli
ljmp
inc
movsb
add
or
jb
jg
xchg
mov
inc
in
inc
pop
mov
ja
icebp
incl
cwtl
les
push
or
rorl
lcall
mov
xchg
lea
mov
insl
mov
dec
fildl
add
mov
jg
lcall
jg
xchg
xchg
aad
test
nop
loop
loopne
xchg
jno
std
xchg
call
inc
ret
in
dec
mov
push
sahf
subl
bound
fdivl
call
sti
push
jl
in
lods
push
pusha
imul
rorl
mov
jns
or
jg
push
adc
lock
movsl
push
icebp
add
jle
push
inc
rorb
pop
aad
push
mov
in
pop
jae
jne
dec
sub
popa
xchg
repz
push
cmpsb
daa
mov
and
mov
sub
mov
pop
pop
sbb
xlat
xor
jns
out
loope
das
push
and
test
mov
push
pushf
sub
cmp
push
sbb
mov
decl
das
add
mov
pop
mov
xchg
sbb
mov
xchg
clc
enter
aad
xchg
dec
pushf
imulb
or
mov
fwait
and
lcall
aas
jp
jnp
lock
incl
mov
int
inc
inc
push
stos
rcll
xlat
ficompl
decl
lods
rorb
or
into
js
enter
inc
movsb
std
cmp
test
push
js
data16
incl
pop
mov
cmp
stc
pop
movsb
push
stos
out
cwtl
pop
adc
lret
xlat
xor
dec
jne
mov
mov
aam
cwtl
outsb
js
ja
or
xor
sti
incl
push
cld
push
fdivs
or
out
xor
push
xor
in
sbb
or
das
mov
adc
loop
jno
ss
add
stc
cmpsb
outsb
pop
imul
call
cmp
iret
fisubrs
xchg
nop
pop
mov
ljmp
fcomip
jg
fsubrs
fidivl
fdivrp
jmp
sub
incl
repnz
lock
fsqrt
mov
add
dec
adc
pop
out
xor
js
int
mov
and
sti
cmp
in
add
mov
je
imul
and
incl
jg
or
outsb
jge
addr16
jp
jne
inc
or
jnp
adc
jg
and
jno
cwtl
negl
lahf
cmpsl
xchg
mov
aad
cli
cmp
and
filds
clc
push
adc
nop
mov
jmp
ljmp
scas
jne
icebp
mov
and
scas
xchg
cwtl
sbb
mov
mov
out
pop
cmc
jle
pop
ja
test
ljmp
cmc
popa
or
cli
pop
jb
gs
lods
lods
xor
int
cli
aaa
cld
dec
test
or
outsb
roll
mov
dec
pop
push
adc
mov
enter
dec
test
call
clc
jmp
dec
pushf
sbb
pusha
pop
lret
negl
arpl
out
popa
cmc
out
add
movlps
int
inc
dec
xchg
arpl
aad
repz
push
inc
mov
push
mov
dec
jnp
fstpt
push
sub
in
sbb
and
testb
cmp
adc
add
cs
add
xchg
ror
rclb
fldlg2
bound
and
mov
popf
jbe
adc
pop
mov
popf
xchg
leave
movsl
push
cs
or
decl
addr16
je
fwait
ss
sub
repz
dec
in
cmc
mov
jo
mov
push
shrl
mov
faddl
std
inc
xor
cmp
adc
imul
cmp
incl
mov
pop
cli
fmulp
stos
mov
andb
aaa
mov
xor
jae
xor
jmp
cwtl
lcall
xor
fnsave
adcb
pushl
mov
mov
aad
jmp
push
fs
ljmp
ret
push
lcall
cmp
rcr
dec
jb
andb
lods
mov
inc
fidivs
cmp
jmp
ljmp
aaa
lahf
fdivs
fldenv
std
in
loopne
pop
mov
mov
movsb
push
cld
jp
in
mov
jl
divl
pop
mov
adc
lcall
jae
mov
out
arpl
pop
pop
add
imul
lds
adc
aaa
sub
je
icebp
and
pop
cmp
aas
repz
sbb
push
mov
and
xchg
xchg
fwait
mov
push
add
mov
mov
fisubs
xlat
pop
xor
mov
pop
add
shll
mov
mov
mov
xchg
iret
mov
loope,pn
ds
inc
inc
arpl
mov
in
test
or
jl
adc
mov
aaa
xchg
pushl
pop
sbb
cld
mov
sbb
lock
adcl
nop
dec
in
pop
cmpsl
mov
mov
jg
add
inc
and
leave
data16
jg
lods
mov
jl
mov
cwtl
nop
mov
fwait
cmpsb
loopne
and
leave
int3
push
data16
int
int3
add
mov
aaa
ljmp
and
push
or
mov
sub
faddp
ds
inc
push
popf
bound
push
lret
mov
test
int3
incl
mov
not
ljmp
adc
lahf
xor
loop
pop
enter
mov
adc
or
mov
and
xlat
ja
mov
sbb
rcll
or
jne
cltd
orl
fwait
clc
pop
dec
add
lods
outsl
xor
push
bswap
nop
stos
incl
lcall
sub
mov
xor
les
incl
mov
cmp
test
lcall
cld
mov
jecxz
xor
mov
adc
xchg
mov
ljmp
scas
adc
lahf
aaa
sahf
and
incl
add
add
or
js
mov
sti
push
ss
decl
loopne
daa
push
jo
shr
add
scas
in
jmp
loope
frstor
xor
cli
or
adc
clc
shrl
jb
add
pop
je
stos
push
adc
jmp
rcll
add
sbbl
call
or
int
test
push
ds
or
mov
pop
mov
clc
jnp
sahf
dec
ljmp
cmpsl
dec
pop
xchg
xchg
movups
pop
mov
add
lcall
add
enter
lea
gs
push
sbb
pushl
xchg
fs
push
mov
loope
cli
adc
jbe
gs
xchg
hlt
call
and
lcall
pop
adc
scas
cli
pushl
xchg
adc
cld
jnp
add
addr16
loope
xchg
add
shlb
pop
hlt
jmp
ficomps
push
jge
jne
js
adc
in
out
mov
arpl
in
std
ljmp
mov
push
mov
imul
cli
mov
std
jne
sbb
pushl
adc
xor
out
dec
movsl
mov
fwait
and
jge
fs
inc
outsb
mov
adc
jmp
sahf
dec
mov
lock
vpaddw
call
add
pusha
add
js
push
sti
and
ljmp
sbb
mov
lods
psrld
clc
pop
xor
push
and
ljmp
sub
aas
lcall
fsubrp
mov
sub
fdivr
jns
mov
ljmp
gs
cmp
nop
repz
cld
push
enter
fiadds
out
xor
and
adc
sub
clc
mov
inc
out
inc
sahf
loope
imul
les
das
xchg
push
gs
xor
mov
insb
ret
insl
loopne
cli
cwtl
and
hlt
test
dec
dec
sub
inc
push
sbb
mov
cmp
ret
sub
jge
and
movb
in
mov
xchg
mov
insl
lcall
lock
mov
adc
mov
lcall
xchg
lods
pop
and
and
inc
ds
cmp
inc
add
add
mov
sbb
into
xlat
cmp
data16
inc
hlt
mov
ret
jbe
mov
mov
xchg
xchg
xor
mov
sub
aas
adc
pop
aaa
in
jg
sub
push
rclb
repz
mov
incl
push
pop
dec
aaa
pop
pop
test
fwait
pop
fidivl
jno
out
dec
in
or
cltd
mov
daa
ljmp
clc
cmp
inc
repz
into
fcmovb
push
in
lds
fs
pop
or
aas
mov
enter
movsl
xchg
fiaddl
lods
xchg
cmp
dec
mul
mov
xor
aaa
aam
fsts
int
neg
cmc
incl
addb
cwtl
les
jecxz
mov
sar
decl
pop
xor
adc
ffreep
test
push
sub
lcall
xor
andl
sbb
bound
mov
out
inc
adc
lock
xlat
push
js
test
mov
jmp
xchg
cmp
int
rolb
sbb
cmpsb
pusha
adc
cmp
mov
ljmp
mov
data16
xchg
aas
xchg
fwait
das
push
cs
andb
lods
and
dec
pop
mov
icebp
or
cmpsb
push
insl
pop
jns
mov
inc
and
mov
sti
lcall
jns
mov
fdivl
fimuls
add
pushf
repz
sti
cmpsl
xor
sbb
popa
push
mov
incl
shl
ficomps
fildl
mov
push
fnstcw
xchg
shlb
jbe
ss
movsb
insl
js
pushl
inc
pop
sbb
push
mov
or
andb
pop
cmp
lods
stos
fnstsw
popa
add
call
cmp
xor
pop
mov
push
xor
xor
xchg
sbb
popa
mov
test
gs
fs
sti
out
nop
into
testb
ss
pushl
and
dec
ljmp
mov
ret
sbb
out
orb
mov
sub
sub
scas
xchg
mov
fdivr
fbld
enter
fadds
and
inc
mov
stos
lcall
sub
lock
inc
iret
bswap
add
stos
stc
movsb
les
outsl
movsb
iret
jle
lds
hlt
int
out
enter
shl
xor
inc
adc
cs
clc
sub
xor
push
decl
aaa
xchg
jmp
sahf
mov
mov
test
cbtw
pop
dec
pop
jg
mov
jns
xor
or
pop
mov
sbb
sbb
mov
ljmp
jnp
or
and
dec
mov
pop
int
popa
shrl
push
mov
cmp
lea
xchg
xor
pusha
mov
xlat
sub
idivb
sub
xor
pop
icebp
ljmp
cmp
xor
icebp
in
int
jnp
dec
and
lcall
cmp
decl
mov
shlb
sarl
inc
arpl
mov
inc
jae
cmp
jmp
adc
stc
fwait
dec
in
xor
out
or
push
or
addr16
xchg
shll
les
inc
shl
lcall
sarl
fsubrp
cmp
adc
out
push
lahf
hlt
or
lcall
pop
inc
jno
inc
in
adc
mov
aaa
fidivrl
inc
mov
ds
push
pop
ja
mov
sarb
jns
cmpsb
or
xchg
jmp
in
mov
and
loopne
fcompl
push
push
jl
sbb
pushf
mov
dec
sbb
inc
jecxz
ljmp
imul
jmp
pop
dec
jns
sbb
jo
imul
out
jno
popf
jbe
jbe
push
lods
jae
inc
mov
stos
rcll
xchg
rolb
dec
loopne
mov
hlt
testl
inc
xor
dec
cltd
ret
imul
pop
inc
ret
jmp
loope
jg
push
lret
adc
sarb
jmp
sbb
scas
out
cli
das
clc
pop
cmp
adc
imul
jmp
or
pop
push
or
inc
arpl
sub
cmpsb
xchg
js
cli
psubusw
filds
sub
jb
push
or
adc
inc
xor
out
leave
push
dec
sub
mov
mov
sbb
jmp
out
dec
shl
mov
hlt
les
jp
rclb
and
fdivrl
call
cld
xchg
inc
pop
inc
jg
xor
sub
sbb
cwtl
push
xchg
mov
ficompl
cmp
xchg
sub
mov
add
mov
sub
ljmp
pop
mov
or
or
fsubrs
lds
js
nop
mov
pushf
mov
aaa
add
stos
push
ja
fwait
mov
fdivp
add
add
jmp
mov
pusha
lea
jge
or
sbb
insb
and
mov
adc
aas
adc
bound
sarb
push
sub
xor
cmp
push
pushl
ret
xchg
dec
jae
out
ss
push
add
or
jmp
scas
mov
inc
dec
test
sbb
mov
xchg
adc
outsb
daa
cmpsb
inc
mov
inc
ret
mov
xor
push
or
xchg
and
push
les
and
mov
jg
sub
call
fisttpll
or
ljmp
pop
rcl
lds
mov
add
adc
adc
push
jns
jmp
add
in
or
add
push
lret
dec
mov
call
das
pop
or
pop
mov
mov
inc
xchg
clc
inc
inc
iret
fisttps
int
icebp
jg
rcll
mov
cmp
aas
pop
cmp
imul
popa
xor
push
test
loop
aas
insl
mov
les
pop
add
pusha
inc
in
lret
push
and
mov
aam
lea
call
loopne
sahf
test
push
pop
aad
mov
addb
fildll
or
mov
insl
and
mov
fcompl
loopne
mov
bound
cmpsb
dec
jl
call
cmp
pop
popa
sub
xchg
mov
fnsave
xchg
dec
sbb
fimull
push
mov
cmpsl
movb
dec
ds
mov
cmp
pop
fisttps
mov
popf
stos
sub
inc
imul
fst
cwtl
outsb
movsl
xor
pop
test
lret
dec
push
mov
pop
icebp
add
push
and
scas
in
into
cmpsl
push
inc
cmp
dec
in
mov
lock
pop
adc
dec
mov
sub
lods
ret
ds
lods
out
inc
jo
icebp
push
icebp
ret
push
mov
mov
jb
xchg
push
cltd
pop
inc
and
js
call
cld
cmp
out
mov
sub
pop
ss
jmp
shlb
lret
hlt
jns
test
ja
jecxz
lret
stc
xor
ds
ljmp
mov
inc
test
pop
lds
dec
scas
in
or
push
or
mov
popa
xchg
pushl
mov
add
ret
or
or
cmp
stos
inc
lret
inc
pop
dec
arpl
mov
fldl
lods
mov
bound
pop
adc
sub
jp
and
lcall
xlat
jae
stos
lahf
inc
cmp
adc
out
int3
loop
stos
xor
mov
push
push
pop
mov
mov
fcom
lea
mov
jns
xchg
ja
jmp
jbe
push
into
ja
out
je
daa
xor
call
vpavgw
pop
hlt
incl
or
mov
test
pop
imul
cmp
rclb
cmp
cli
dec
push
pop
xchg
adc
bound
cli
loop
add
jb
outsb
call
dec
dec
dec
out
xchg
dec
inc
jle
dec
pop
push
decl
in
lcall
in
cmp
nop
cmc
outsl
insb
out
and
pop
mov
call
xchg
mov
sbb
lock
les
mov
addr16
jg
scas
xor
mov
jecxz
mov
mov
outsb
pop
outsb
jne
jp
cmp
dec
outsl
in
and
fdivp
pop
cs
add
push
loop
mov
pop
inc
pop
shl
outsb
xchg
sub
out
es
aad
mov
inc
scas
xlat
cld
fistl
aad
jb
int
sub
sti
cmpsb
add
adc
scas
push
mov
cld
push
or
cwtl
rcrb
and
fwait
loope
cmc
mov
cli
outsl
xchg
mov
call
fadd
cmc
and
jbe
ret
jmp
jl
into
lods
jae
xchg
cmp
rcll
decl
aaa
jl
frstor
mov
je
stos
inc
mov
pop
mov
or
decl
rcrb
mov
push
push
mov
out
jge
out
push
out
xchg
dec
call
or
subl
jg
movsb
lods
outsb
mov
fbld
pushf
or
pop
mov
leave
icebp
jg
xlat
push
xchg
xchg
cli
bound
fbstp
je
dec
unpckhps
fistpll
stos
lahf
lds
in
jmp
mov
sub
pusha
cld
insl
xchg
or
xchg
push
hlt
div
je
decl
dec
nop
frstor
push
mov
in
hlt
jo
mov
pop
fisttps
decl
pop
pop
sub
test
dec
xor
in
rcl
mov
in
push
dec
sysenter
call
mov
ljmp
cmp
stos
rcr
jbe
push
xlat
sub
dec
andl
notl
mov
adc
pop
outsl
push
out
out
sub
pushl
mov
xlat
lcall
inc
push
dec
stos
cmp
add
mov
ljmp
nop
ja
in
test
dec
bound
roll
sub
mov
sub
decl
lods
shl
and
mov
ret
sbb
adc
fisttpll
dec
movsb
out
lods
sub
pusha
mov
lret
lret
loop
loop
push
decb
push
or
dec
pop
gs
push
pop
stos
js
loopne
cmp
jno
adc
imul
jmp
mov
cmp
inc
mov
add
movsb
xchg
lcall
call
arpl
mov
sub
push
add
scas
mov
or
fcos
call
clc
repnz
pop
xchg
arpl
in
sbb
sarl
mov
push
mov
xor
inc
push
cmpsl
decb
int
scas
out
imul
stos
add
mov
pushl
sbb
mov
cmp
pop
les
repnz
and
shrb
cmpb
jbe
insl
lock
sbb
pop
adc
call
test
lea
and
mov
mov
imul
hlt
roll
dec
std
mov
add
icebp
scas
and
mov
jmp
jbe
fs
mov
pushl
cmp
lds
dec
jae
mov
rcl
gs
sti
int
ret
inc
push
push
xchg
mov
mov
sbbl
adc
rorl
jbe
sbb
lods
push
ja
leave
aad
lock
dec
or
and
ljmp
pop
mov
add
mov
or
mov
into
mov
dec
pop
mov
mov
sbb
pushl
pop
push
lret
jns
lea
push
rorl
and
mov
outsb
cmpsb
xchg
pop
sub
xor
pusha
sbb
jg
stos
stos
mov
mov
cmp
cmp
movsb
mov
popa
jbe
adc
and
adc
push
data16
dec
jno
jecxz
push
cmp
jmp
mov
js
cmpsl
in
mov
aaa
insb
dec
sbb
cmp
push
fiadds
jae
dec
scas
push
and
orb
leave
pop
sub
std
adc
adc
mov
add
mov
outsb
pushf
xor
js
rcll
push
cmp
test
mov
aaa
or
jo
push
push
insb
jae
xchg
aas
pop
sar
into
mov
pop
cmp
jge
xchg
push
or
fistpll
jmp
lahf
mov
icebp
pop
es
xchg
test
push
ljmp
cli
cld
sbb
xchg
cli
test
push
jbe
mov
cltd
jp
scas
mov
mov
xor
loopne
inc
movsb
mov
and
mov
jg
cmp
pop
lret
jg
pop
mov
and
je
scas
adc
mov
cmp
and
repnz
or
sbb
mov
push
ret
pop
jmp
mov
and
xor
aam
js
lcall
lods
out
imul
mov
js
dec
mov
inc
lcall
xorl
sbb
call
loop
sar
loope
push
mov
jge
mov
push
scas
xchg
mov
xchg
outsl
mov
pop
inc
adc
cs
xor
pop
lods
and
inc
mov
mov
movsl
sbb
xlat
adc
mov
lcall
sub
xchg
andl
jne
inc
test
popf
push
jg
push
mov
cmp
or
jle
pushf
pop
addr16
lock
jno
mov
and
pop
js
fstl
mov
jbe
out
and
pop
adc
sub
pop
addl
lcall
jmp
mov
pop
sbb
cmp
stos
or
lods
loopne
fsubl
sbb
fldenv
push
ljmp
pop
adc
mov
jns
cmpsb
sti
mov
enter
pop
cs
jg
jmp
mov
or
idiv
call
adcb
movsb
push
mov
fs
xchg
out
mov
aad
ljmp
loop
mov
and
movsl
cmc
and
xor
mov
test
or
decb
xchg
mull
loop
aaa
sbb
mov
add
aam
push
nop
jge
fistl
into
jne
push
xorl
call
mov
dec
cli
mov
cmp
push
and
gs
jb
cmp
insl
add
std
cld
ret
enter
push
je
push
pop
int3
mov
xor
or
mov
enter
xor
sbb
insb
int3
out
xchg
jecxz
cmpsl
fistpl
cmp
fmull
test
mov
mov
mov
jbe
mov
xor
mov
sub
sbb
mov
sahf
lea
pop
cmp
ljmp
popa
mov
xchg
mov
xchg
push
insl
push
adc
bound
outsl
mov
popw
xchg
cmpsl
addb
xchg
stos
incl
jecxz
and
shll
mov
lret
insl
ret
ja
in
jg
dec
hlt
inc
adcl
mov
push
pop
rcrb
out
ljmp
push
jl
mov
cmp
xor
jae
xchg
cmp
test
sub
out
clc
fiaddl
fs
dec
les
mov
mov
movsl
outsl
imul
jp
pushl
or
and
aaa
adc
mov
pop
jge
addl
pop
test
adc
ss
pusha
call
call
out
cs
and
outsb
push
mov
cwtl
pushl
xor
mov
popf
rcll
xchg
js
xor
pop
fiaddl
imul
out
rolb
pop
dec
rorb
push
xchg
loop
fbld
fs
xchg
loopne
loop
shrb
lcall
push
or
adc
scas
inc
loopne
mov
loope
insl
negb
leave
mov
sbb
or
mov
sub
insl
and
jmp
ds
jno
flds
fcomip
inc
sbb
inc
jecxz
cmpsb
xlat
jno
aad
stos
sbb
mov
jg
fs
rclb
std
or
xchg
sbbb
jmp
sub
lds
pop
data16
jnp
call
or
call
shlb
mov
push
lods
pop
cmp
aam
cmp
jmp
push
ja
je
mov
mov
jecxz
js
cmp
pop
xchg
pop
je
lret
mov
dec
push
mov
test
lret
pop
xchg
lret
and
cmp
scas
fxch
xor
es
mov
loop
cmc
arpl
jl
call
jg
repnz
ficoms
sti
xor
xchg
xchg
lods
push
imul
clc
xor
mov
lock
lock
mov
mov
or
push
imul
movsl
hlt
enter
cmp
dec
arpl
fistpl
jmp
jl
aaa
pop
int3
ret
mov
xlat
pop
loopne
push
lcall
sbb
imul
mov
insb
inc
in
testb
int3
out
add
mov
pop
sub
jle
pop
dec
or
in
aam
movsl
xchg
sub
enter
fnstsw
or
clc
mov
inc
pushf
out
jb
pop
out
gs
inc
sub
mov
dec
sti
scas
leave
adc
call
inc
inc
pop
cmpsb
sbbb
pop
mov
aam
scas
enter
ljmp
jmp
jo
out
and
add
nop
push
fwait
cld
push
cltd
xor
fs
out
adc
popf
fcomps
dec
dec
shlb
xchg
aam
jnp
mov
aam
lcall
or
or
push
mov
int3
pop
jecxz
push
lcall
cld
mov
sub
mov
cmp
leave
mov
mov
es
dec
inc
enter
test
fiaddl
aaa
iret
pop
lock
cwtl
mov
ret
dec
dec
aaa
mov
add
and
inc
xchg
repnz
call
mov
arpl
aad
cmpsb
mov
dec
in
mov
inc
mov
lcall
mov
push
out
pop
adc
loope
imul
ljmp
mov
notb
jnp
mov
mov
data16
daa
push
push
fcompl
ljmp
jecxz
cmc
pop
loopne
out
insl
flds
sbb
dec
lcall
ljmp
jp
mov
and
pushf
ja
call
push
movsb
cli
cmc
jp
mov
push
dec
mov
in
outsl
ljmp
or
mov
push
in
jnp
in
dec
sbb
lods
pop
lcall
adc
mov
lcall
push
sbb
push
inc
ja
dec
or
inc
xchg
mov
jecxz
aam
out
xor
pop
add
cmp
into
push
out
cmpsb
inc
sbb
push
sarl
cmp
mov
jmp
aam
lret
sub
sbbl
pop
out
sub
cmp
push
push
inc
hlt
inc
xchg
out
xor
lods
or
add
mov
push
lcall
and
int
and
cmpsb
cs
push
or
sub
loope
jp
out
mov
cmpsl
cmp
clc
mov
mov
fldcw
imul
std
ja
sbbb
sub
shlb
xchg
rolb
sahf
stos
inc
stos
add
aaa
scas
andb
icebp
scas
add
into
mov
in
xchg
ljmp
rcl
pop
movsl
aam
je
cmp
pop
ficoml
push
push
dec
add
decl
in
repz
cmp
jbe
inc
cld
adc
mov
or
jg
and
pop
js
sti
dec
xchg
jge
nop
dec
repz
in
call
cmc
cwtl
push
and
dec
mov
xor
iret
mov
mov
incl
scas
icebp
push
sub
enter
incl
cmpsl
jmp
lahf
mov
mov
js
ss
xor
aad
les
push
out
dec
loopne
cs
push
clc
mov
or
mov
imul
icebp
dec
push
movsb
cltd
fisttpll
pop
pop
adc
xchg
movsl
lods
inc
jl
or
call
xor
mov
shrb
ljmp
incl
adc
xcrypt-cbc
cmpsl
push
sbb
jmp
adc
sbb
inc
cli
lret
js
jge
lret
rcl
movsl
cli
mov
pop
out
orb
testb
jge
rcrl
je
cmc
notl
rclb
sbb
insb
jb
test
mov
jle
push
mov
rcrb
je
fisttps
pop
dec
push
pop
mov
push
mov
pop
push
cmp
and
jmp
stos
mov
mov
adc
jge
mov
sbb
jmp
lods
lock
ljmp
test
in
mov
test
xor
jecxz
lock
fs
mov
xor
call
fidivrl
sub
loop
sub
and
and
mov
and
push
insl
bnd
jle
outsl
clc
mov
dec
inc
xchg
jg
fdivl
sbb
xchg
ljmp
adc
adc
mov
jne
xchg
stc
jns
push
int3
sbb
mov
cwtl
das
pop
lret
sar
inc
xchg
fwait
mov
pop
add
fcmovu
ds
fbld
pushl
movsb
cmp
insl
clc
xchg
adc
xchg
std
push
lret
mov
adc
out
mov
add
add
jmp
sub
ljmp
mov
ret
jecxz
mov
insb
imull
lcall
sub
rclb
orl
das
lods
fs
fcmovnbe
in
mov
cld
ficomps
sbb
cmpb
test
mov
imul
icebp
sbb
mov
jmp
out
push
mov
xchg
mov
hlt
ljmp
jne
cmc
popa
and
dec
mov
es
xchg
or
add
loopne
add
and
sub
loopne
outsl
clc
incl
pop
loopne
push
push
jge
roll
inc
fs
pushl
add
in
rcll
gs
dec
pop
push
mov
cmp
mov
stc
repnz
push
mov
sbb
jmp
lcall
and
dec
inc
sahf
vpcmpgtd
sbb
ljmp
stc
sbb
fimull
rcrb
and
and
out
inc
sarl
and
call
mov
adc
rorb
dec
bound
insl
cld
jmp
insl
in
sbb
ljmp
rcl
jmp
and
sti
daa
pop
scas
jae
cltd
pop
inc
jl
aas
dec
cltd
call
inc
push
xlat
pop
pop
cmp
sbb
ljmp
loopne
dec
dec
adc
lcall
xor
roll
cmp
icebp
ret
xor
and
xchg
inc
lcall
sbb
ljmp
xor
data16
mov
gs
mov
push
aam
flds
xor
scas
sarb
call
jae
inc
push
popa
pop
push
jmp
or
outsl
cmp
stos
fistpll
jnp
shl
repz
inc
xchg
ljmp
decl
and
jge
cmp
inc
sarb
dec
push
adc
dec
incl
mov
daa
test
fsubs
adc
stos
pushl
scas
xchg
movsl
cmc
or
jecxz
inc
jp
xchg
mov
add
cld
add
std
popf
sbb
div
cmp
aaa
cmpsb
xchg
shll
inc
jge
lods
mov
cmp
xor
mov
in
xchg
push
mov
das
lret
dec
test
pushl
lret
cmp
frstor
les
xor
loopne
dec
ret
jl
push
aaa
and
inc
push
data16
sbb
popf
jp
insb
push
mov
incl
push
mov
or
pop
movsl
and
mov
adc
add
movzwl
xor
mov
add
inc
dec
and
ljmp
iret
xor
and
sbb
xor
pop
cmp
mov
jo
xchg
push
jl
call
popa
sub
inc
cltd
mov
mov
into
or
lahf
sarl
cmpsb
or
call
mov
sub
pop
outsl
dec
sbb
in
push
insl
lret
je
and
outsb
call
xchg
pop
add
lods
aas
jnp
aaa
cli
call
gs
push
les
inc
gs
aam
jg
mov
cmp
xchg
js
loopne
and
inc
jns
add
sub
cltd
pop
xchg
and
mov
inc
sahf
icebp
or
jg
sub
mov
faddp
mov
jecxz
pop
arpl
int3
push
stc
inc
outsb
loopne
inc
jg
sub
mov
cmp
mov
cs
ljmp
scas
cmpsl
push
stos
sbb
roll
call
jnp
shlb
mov
add
mov
mov
out
xor
ds
or
push
jb
gs
inc
adcl
mov
sub
sub
out
mov
adc
cld
inc
rclb
adc
cmpsl
xor
push
pushl
cmp
adc
adc
mov
jge
sub
test
mov
jmp
mov
enter
dec
je
je
sub
and
mov
pop
sbb
outsl
mov
leave
incb
in
pop
pop
mov
cmp
aas
fucomi
sub
xorl
movsb
xor
mov
lcall
adc
xchg
pop
lret
pop
fwait
add
and
incl
gs
add
out
leave
xchg
push
or
inc
mov
fsubrl
sbbl
mov
sbb
addr16
adc
dec
pop
cmpsl
enter
adc
sbb
fdivl
and
popf
xchg
divl
std
ljmp
mov
sahf
into
fwait
and
ss
lods
mov
push
imul
mov
mov
lock
mov
out
xchg
fbld
or
mov
cld
decl
or
xchg
push
jle
jg
inc
clc
pop
fisubs
scas
jg
adc
lahf
push
cmp
shlb
sbb
pop
pop
test
dec
inc
dec
scas
push
jnp
addr16
in
sbb
fs
or
mov
cmpsb
push
add
fimuls
clc
jae
jmp
cmc
xor
mov
cld
pop
and
cs
cmp
mov
decl
loope
ss
mov
fs
jne
push
les
xchg
add
cltd
out
push
ss
cwtl
pushf
shlb
inc
call
push
test
int
add
leave
push
in
mov
and
test
sbb
dec
xchg
mov
push
xor
push
mov
repz
adc
fbstp
enter
pop
insb
push
imul
adc
subl
push
or
out
xor
outsl
mov
mov
dec
orb
in
mov
int
xchg
mov
gs
loope
ljmp
andl
mov
cmc
daa
call
mov
mov
imulb
sbb
inc
pop
sub
imul
push
mov
jmp
lds
push
sbb
lcall
inc
push
pop
inc
out
cmpsl
xchg
adc
or
cmpsb
xchg
nop
xchg
fmulp
nopl
imull
mov
add
xchg
outsl
push
cli
cmp
leave
in
mov
or
sbb
loop
out
jle
shll
jmp
jmp
test
push
arpl
mov
and
mov
sarb
imul
out
nop
imul
clc
or
pop
sbb
xchg
xor
mov
mov
rcrl
and
mov
add
ljmp
push
cld
pop
xchg
push
and
jmp
lds
pop
dec
pop
and
pop
ret
in
sbb
fcomip
push
push
pusha
push
mov
xchg
mov
push
ljmp
loopne
lods
popa
bound
push
test
out
cmp
fidivrl
and
dec
xchg
stos
pop
cmpsl
fwait
pop
outsl
fistpll
cltd
jg
mov
ds
mov
int3
sbb
rcrl
fistl
rcl
cmpsl
cltd
and
imul
pushl
arpl
adc
sahf
mov
push
dec
push
flds
fisubl
sub
jmp
sbb
cmpsl
mov
push
xchg
insb
xchg
ret
dec
and
into
pop
addl
mov
jg
inc
int3
cmp
mov
lret
jnp
andb
call
add
mov
mov
mov
add
js
push
pop
test
mov
add
lcall
pop
fwait
xchg
push
and
pop
iret
leave
add
fstl
jo
inc
ljmp
adc
xor
mov
je
xchg
mov
das
jo
mov
test
outsl
xchg
pusha
pop
xor
inc
jno
ss
cmp
jg
cmc
ret
xchg
cmp
adc
roll
dec
add
clc
mov
mov
out
hlt
xchg
ret
inc
lahf
sahf
rorl
adc
cs
gs
sub
push
xor
pushl
int3
imul
xor
xchg
fadds
or
push
call
loopne
lret
mov
enter
popaw
cwtl
fcompl
pop
hlt
push
std
out
dec
or
imul
fdivrp
pushl
xlat
pop
push
cwtl
jnp
ds
fdivrp
enter
mov
ljmp
push
cmp
cld
or
fistps
pop
adc
mov
add
jge
dec
pop
lea
sub
cli
pop
addl
lcall
adc
andl
pop
popl
fisttps
xchg
xchg
push
or
add
das
icebp
lcall
sub
das
mov
or
loope
pause
or
ljmp
cs
mov
loop
mov
mov
fistpll
mov
int3
ss
sbb
outsb
popa
in
mov
cmp
sbbb
int
pop
pop
push
rcrb
mov
inc
pop
dec
loopne
int3
out
fldcw
pusha
pop
cmp
cli
adc
push
pop
mov
adc
pushl
arpl
xchg
dec
orb
mov
xchg
mov
popf
lret
bound
decl
adc
stos
movsb
jo
jo
in
lock
sbb
cmp
mov
je
or
inc
fs
leave
jg
and
cld
sub
mov
sub
insb
fcomip
jle
pop
jns
in
pushf
mov
into
int3
pop
inc
adc
aaa
pop
pusha
jmp
pop
in
incl
add
fdiv
cmp
mov
dec
addb
frstor
mov
sub
pop
push
sub
lods
xchg
push
negb
movsl
ds
decl
mov
fldcw
movsl
bound
lcall
incl
jb
jl
and
mov
int3
xchg
mov
ljmp
lds
sub
out
mov
pop
popf
test
dec
incl
cld
dec
xchg
fs
outsb
sbb
and
js
jge
fcoms
pushl
jp
mov
and
push
or
movsl
adc
loop
stos
lret
cwtl
cmpsl
xor
arpl
dec
outsl
aaa
mov
int
lock
push
shll
ds
jge
movsl
dec
cmp
clc
fwait
pusha
loope
or
inc
add
out
test
push
push
add
adc
jle
cmpsb
test
xchg
filds
sub
sub
mov
mov
inc
sub
ds
xchg
cmp
and
add
pushl
xchg
inc
fs
jmp
gs
sub
cwtl
lock
nop
sub
jg
addb
xor
jecxz
enter
push
adc
xor
pushl
psubsb
pushf
inc
ds
imul
fistps
stos
cs
cmp
movsb
push
adc
or
mov
lea
add
push
push
push
fisubl
cmp
mov
ds
loopne
rcr
xor
mov
into
imul
xchg
gs
push
cli
ds
cmpsb
out
and
mov
ja
loop
dec
mov
lea
js
and
icebp
shrl
jb
or
fists
bound
test
mov
call
mov
aad
std
adc
in
mov
je
mov
or
cmp
or
pusha
bound
popf
ret
cmp
jl
sub
jo
or
decl
adc
inc
cmc
xchg
ja
inc
js
lret
sti
popf
jno
inc
dec
inc
or
jmp
mov
loop
xor
dec
add
sub
movsb
adc
into
sub
cmp
decl
in
cmc
fsubrl
sbb
repnz
pop
or
dec
insl
sub
mov
decl
into
push
out
add
dec
and
push
dec
and
pop
push
nop
out
out
add
pushl
addl
push
hlt
mov
cwtl
cltd
dec
push
test
mov
cmp
ljmp
in
sub
jmp
push
outsb
xor
sahf
dec
mov
pusha
sub
fs
test
mov
or
fcomps
adc
adc
jns
add
outsl
mov
lcall
out
pop
push
mov
push
ss
lds
and
pop
std
inc
xchg
lahf
pop
mov
decl
pusha
imul
sub
sbb
ljmp
pop
fwait
jp
gs
push
jno
addr16
cmp
ds
inc
cld
int
jecxz
sbb
aaa
rcr
push
mov
push
mov
pop
jb
inc
popa
out
test
inc
out
ror
stc
adc
dec
pop
jae
push
jle
jl
repz
or
xchg
and
adc
mov
and
lock
mov
stos
ljmp
add
ret
jle
lret
int
test
ds
xor
dec
sbb
xchg
cmp
jae
dec
mov
mov
mov
pop
and
lahf
call
cmpsl
push
and
cmp
xchg
inc
jns
hlt
stos
les
lea
adc
ja
popf
sbb
dec
je
fwait
adc
jmp
pop
pop
xchg
add
sub
cli
cmpsl
addl
and
cmp
push
shll
adc
mov
mov
cmp
inc
daa
mov
and
mov
add
adc
add
jg
popf
repnz
and
data16
outsb
jp
xlat
push
test
decl
adc
mov
aaa
sbb
out
lods
pusha
sbb
ljmp
xchg
ljmp
fisttps
add
lcall
jmp
cld
cwtl
lret
pusha
clc
bound
or
mov
daa
inc
adc
and
xor
dec
pop
icebp
xor
sbb
decl
out
dec
ljmp
lcall
xchg
popl
cmp
in
das
int3
mov
mov
call
jno
cmp
jbe
and
mov
out
clc
incl
test
push
xchg
enter
rcrb
cwtl
or
hlt
sbb
ljmp
lock
fwait
sub
jns
mov
jle
lcall
push
fsubrl
sbb
push
pop
cld
insb
and
sti
mov
cld
sbb
aam
or
call
sbb
and
dec
popf
daa
adc
or
jg
sub
xchg
inc
add
xor
ljmp
loopne
pop
aas
pop
jle
jg
mov
movsb
or
cmp
adc
xchg
adc
mov
call
inc
add
bound
xor
push
fcomps
mov
jecxz
jo
adc
jg
pop
andb
mov
dec
xchg
movsb
dec
xchg
dec
dec
and
call
mov
or
mov
ljmp
enter
add
adc
xchg
ja
mov
loopne
xchg
jmp
sbb
outsb
sbb
bnd
test
stc
xchg
loop
xlat
push
aas
adc
mov
push
xor
jmp
xor
nop
xor
mov
jp
and
movups
mov
in
sub
xlat
xor
jle
roll
push
jne
inc
mov
dec
add
lcall
aam
stos
std
in
div
push
sarb
push
pop
mov
or
pop
cmpsb
xchg
adc
divl
jae
fnsave
xor
pushl
fdivrl
dec
pop
sub
lods
pop
mov
in
fidivl
andb
pop
or
mov
pop
pop
sbb
lods
cli
cltd
and
jmp
fcomi
pop
push
push
je
mov
sti
div
and
pop
iret
popa
clc
mov
and
push
ret
iret
sub
ficoms
add
cld
sub
jg
push
cmp
sbb
aam
pushf
mov
mov
mov
mov
aaa
std
sub
pop
lods
das
outsl
nop
dec
es
jnp
xchg
imul
xor
mov
jg
add
in
mov
xchg
inc
cmp
cli
fnstcw
cltd
in
inc
ficompl
adc
daa
inc
dec
lret
test
jns
roll
rcl
pushl
pop
add
cmp
sbb
mov
dec
push
lods
push
sub
das
call
sbb
cwtl
push
fisubrs
inc
ja
push
sti
pushf
lret
mov
insl
push
add
mov
shll
push
mov
pop
jno
add
out
std
insl
inc
mov
decl
stos
cmp
inc
dec
aaa
pop
push
dec
insb
mov
mov
mov
or
test
mov
mov
and
sub
in
dec
jge
int
scas
lcall
add
bound
mov
add
jg
push
stc
pop
mov
pop
outsb
or
and
aas
bound
ljmp
sbb
sbb
pusha
sub
dec
lahf
repz
shrb
mov
in
sub
add
movsl
int3
jo
cmpsl
dec
lock
push
or
jmp
adc
loop
dec
xor
lods
push
dec
ret
adc
sbb
pop
loopne
jmp
pop
xor
xor
ja
adc
mov
stc
incl
fisubrs
divl
sahf
cmpsb
fldl
imul
pusha
jns
mov
popf
mov
or
lcall
inc
idivl
rol
push
lods
ja
test
xor
xor
add
js
sti
in
xor
cmpsb
or
dec
mov
lds
ja
daa
sbb
and
jg
mov
scas
xchg
xchg
pop
lcall
mov
push
xlat
shrl
out
or
jmp
aad
inc
clc
stc
cli
iret
mov
testb
addb
insl
outsl
pop
dec
ljmp
lcall
push
lret
movsb
add
popf
inc
scas
pop
jg
sub
outsl
push
ds
arpl
jne
fstl
aad
jmp
shll
pop
lahf
sub
divb
sub
pop
mov
push
rol
ljmp
fidivl
xor
subb
jo
jle
js
call
fs
sbb
pop
mov
pop
sbb
dec
fldl
stos
push
test
push
xchg
or
daa
sub
loop
sbb
xchg
mull
mov
call
lret
imul
cmc
and
enter
adc
sbb
mov
pop
daa
or
stos
subl
lcall
sahf
jo
inc
pop
lret
das
dec
adc
mov
in
scas
cli
fisubrs
out
adc
rorb
mov
xchg
adc
mov
inc
inc
ljmp
js
mov
shlb
xchg
nop
and
mov
addr16
decl
orb
aam
fisubl
add
xchg
jp
jae
mov
sbbb
sbb
call
in
cmp
dec
mov
cwtl
sub
fdivrl
call
movsb
shl
mov
jmp
adc
scas
xchg
or
mov
mov
cmp
add
dec
mov
jp
mov
or
stos
inc
cmpsb
orl
das
mov
push
fs
xchg
clc
insb
cmp
mov
sub
test
hlt
mov
mov
sahf
daa
ljmp
jmp
js
sbb
jp
lahf
ss
dec
push
mov
jo
mov
mov
pushl
jno
xor
in
aam
fwait
jno
fstpt
mov
je
scas
push
fildl
and
inc
loopne
decl
aaa
xchg
jbe
nop
rcll
clc
ret
jne
and
out
fcomps
call
mov
sbb
mov
mov
sbb
int
cmp
pop
add
pop
sub
jmp
push
incl
mov
add
arpl
cmpsb
in
cmpl
ja
cwtl
pop
roll
lahf
push
pusha
sub
insl
ljmp
scas
xchg
sbb
das
out
imul
sbb
push
mov
stos
and
loope
pushl
les
xor
pop
mov
mov
cmpsb
insl
movsl
pop
cmp
inc
bound
xchg
sbb
sbb
dec
xchg
movsl
pop
out
filds
cld
dec
test
dec
sbb
insb
jno
sar
push
cli
lea
ret
push
call
jmp
aad
xchg
jbe
popa
fcmovu
int3
divl
pop
jno
fcoml
lcall
mov
cmp
iret
ficompl
mov
xor
jns
adc
lea
xchg
imul
incl
fisubrs
fwait
sub
add
xchg
dec
dec
into
cmc
sbb
add
sub
std
and
mov
mov
adc
fwait
cmpsb
sar
adc
es
mov
ja
dec
pcmpgtb
or
dec
xor
adc
fsts
je
mov
pop
call
rcll
add
cmp
inc
sbb
fs
mov
xchg
cmp
pop
orb
and
fstpt
fcmovnu
mov
lods
daa
nop
roll
mov
pushl
lods
sub
in
mov
es
and
cmp
add
mov
xorb
lock
dec
shlb
stos
cwtl
iret
int3
scas
daa
xchg
in
popf
mov
mov
xorl
sbb
adc
js
inc
xchg
mov
cmpsb
xchg
xorl
mov
decl
mov
dec
loop
ficoml
mov
fiaddl
push
inc
inc
jmp
jne
decl
mov
adc
mov
icebp
fs
test
pop
mov
push
mov
sbb
push
into
iret
mov
lcall
pop
add
lods
mov
or
mov
bnd
test
jmp
mov
pop
dec
cli
or
adc
jno
lock
test
cwtl
cmp
stc
sti
rol
lcall
pushf
push
adc
xchg
ljmp
sbb
stos
mov
icebp
incl
loope
frstor
jle
dec
lock
and
inc
daa
sub
pop
int
lcall
shll
nop
jb
or
aam
push
mov
sbb
pop
frstor
decl
aaa
filds
jle
mov
repz
lds
lcall
adc
aad
popf
icebp
jbe
rolb
sub
pop
fadd
insl
add
int
mov
pushl
std
push
xor
ja
es
dec
fbstp
or
rcr
movsb
sarb
mov
mov
popf
inc
cmp
loope
ljmp
mov
sti
repz
jmp
inc
mov
mov
dec
push
out
inc
sti
out
sbb
mov
fdivrl
push
ja
rorb
adc
out
xchg
lcall
jge
pusha
fmuls
adc
test
in
mov
into
adc
lods
filds
dec
xchg
stos
dec
in
pop
mov
pushf
mov
cmp
or
and
scas
mov
std
outsl
dec
aaa
cld
pop
icebp
add
cmp
push
aam
js
outsl
mov
sbb
mov
ret
fmuls
mov
cmp
fists
jg
mov
int
mov
or
das
lock
lcall
dec
add
popf
xchg
add
outsl
xchg
cmc
push
sarl
scas
adc
pushf
jae
aas
cld
or
out
lahf
negl
test
aaa
jp
dec
or
ljmp
ret
roll
fsubs
inc
push
imul
ret
clc
mov
mov
cmpsb
sbb
sti
in
dec
jmp
rcll
stc
pusha
pop
call
push
sbb
pop
jmp
mov
inc
or
nop
sub
cmp
shll
push
dec
xchg
repnz
push
in
aaa
std
add
jmp
dec
cltd
stos
mov
xor
mov
in
out
cli
xor
and
inc
sub
mov
xor
call
aad
lcall
mov
inc
jmp
xchg
pushf
push
and
scas
fwait
cwtl
pop
mov
and
cld
insl
pop
add
ficoml
fldt
inc
jg
cmp
jo
inc
clc
xor
xchg
in
stos
lea
and
jge
sub
mov
mov
pop
insl
ja
inc
shll
cmp
aas
xchg
out
mov
sarb
mov
ljmp
jo
mov
pop
test
add
in
aas
sbb
fsubs
push
decl
cmp
xchg
outsb
jb
or
in
movsl
mov
mov
aaa
cltd
call
fdivr
adc
sub
adc
movsl
stc
adc
ljmp
rcrl
sbb
cmp
arpl
fdivl
jl
rcrl
pop
into
cmp
rcll
xor
cmpsb
mov
jbe
idivl
ljmp
cmp
lcall
clc
xchg
ljmp
and
and
lock
xchg
push
sub
decl
hlt
rolb
incb
mov
int
daa
adc
mov
arpl
imul
push
jle
push
push
push
pop
stc
dec
out
mov
je
aam
xchg
out
add
std
push
xorb
lock
mov
push
das
xor
jne
imul
cld
sbb
jg
or
pop
xchg
nop
jge
xor
pop
cmc
dec
sub
adc
test
pushl
stos
dec
daa
add
and
fimuls
mov
aaa
popa
xchg
loop
dec
xor
out
pop
icebp
incl
and
stos
into
jbe
xchg
ja
sub
stos
call
jg
fimull
cmp
cmp
fistpll
test
jmp
fstpt
mov
pop
pop
mov
mov
pop
mov
out
addr16
clc
push
adc
and
add
jecxz
mov
pushl
mov
pusha
inc
and
test
popa
sbb
mov
jnp
ljmp
dec
std
aas
push
pop
cli
push
or
or
in
lcall
call
cwtl
push
sub
pusha
cmc
into
dec
mov
pop
imul
ss
out
xor
push
mov
xchg
fucom
dec
and
ljmp
insl
mov
mov
mulb
sub
inc
push
sbb
sbb
mov
or
push
sub
movsl
clc
dec
sbb
pop
nop
les
pop
pusha
dec
test
hlt
incl
aam
sbb
icebp
imul
jle
stc
and
frstor
filds
sbb
jbe
data16
pop
out
add
push
mov
cmc
xor
cwtl
aas
mov
decl
fisubs
sbb
mov
hlt
mov
in
dec
push
xchg
adc
push
fs
sub
inc
outsl
in
pushl
push
adc
mov
mov
push
xor
and
jge
mov
mov
icebp
jns
or
sbb
dec
pavgb
sti
call
mov
frstor
lods
rorl
lods
jne
fldl
mov
jmp
daa
test
mov
push
jmp
stos
push
ljmp
out
push
pop
push
xchg
pop
test
jo
sub
mov
dec
jne
in
es
cli
sub
pusha
adc
mov
in
clc
frstor
pop
rclb
xor
mov
decl
ss
dec
xlat
xchg
xorb
aam
xor
movsb
bound
adc
fldenv
adc
push
std
sbb
pop
jmp
test
aam
ljmp
inc
movsl
cmpsb
xlat
adc
out
xor
test
popf
out
fisubs
lds
decl
fcomip
roll
rol
inc
aam
and
mov
incl
add
pusha
add
insb
or
ljmp
cli
inc
ja
addl
sub
decl
inc
dec
sub
mov
dec
in
mov
pop
feni(8087
ror
push
stc
sub
add
fisubrs
les
rep
sub
sbb
jmp
adc
rol
pop
mov
jle
mov
or
rorb
fcompl
stos
pop
divb
sbb
cmp
clc
sar
cwtl
dec
jb
inc
mov
mov
xchg
mov
add
pop
push
adc
imul
xchg
inc
pop
sbb
cld
xchg
cmpl
fs
or
insb
or
adc
or
loopne
insb
mov
fisttps
mov
dec
es
fstp
push
or
mov
mov
add
adc
mov
fmul
mov
pop
inc
incl
fucompp
dec
pop
jns
daa
out
xor
sub
mov
movsb
loop
mov
insl
push
repnz
xchg
mov
rclb
lahf
adc
adc
test
nop
decl
jbe
movntps
xor
loope
mov
mov
dec
rcrb
jg
cmpsb
clc
aad
jmp
dec
inc
sub
fildl
mov
stos
lret
sbb
mov
push
test
nop
nop
in
ja
imul
jmp
fdecstp
sahf
test
lods
in
imul
cltd
shl
in
sbb
jmp
into
es
sub
push
xchg
xchg
or
mov
push
push
div
pop
mov
sbb
jmp
mov
push
dec
mov
pop
mov
cmp
and
mov
pushl
in
orb
movsb
cmc
mov
cmp
xchg
stc
out
cmp
mov
mov
xor
jl
mov
fwait
xor
or
stos
jl
das
iret
in
inc
fwait
or
ljmp
clc
push
add
lds
push
hlt
divl
hlt
pop
mov
aam
jmp
add
fwait
add
sarl
sub
lret
adc
ds
or
add
mov
adc
mov
call
jbe
in
repz
cmp
rclb
pop
outsb
xor
mov
mov
movsl
mov
xor
adc
xchg
pop
lret
sahf
inc
test
rol
fs
scas
addb
shr
adc
fsub
test
outsl
cmp
fwait
xor
shll
out
adc
cli
in
dec
cld
xchg
insb
adcb
dec
cmp
in
pop
inc
mov
decl
push
mov
mov
popa
popf
cmp
stos
insb
and
sub
popa
scas
adc
jg
mov
xchg
inc
shll
testl
jge
pushl
dec
rorl
movsb
outsl
popf
imul
push
aaa
or
pusha
or
pop
ss
adc
fsubs
fcomps
mov
outsb
mov
std
jg
mov
dec
into
jno
jp
push
in
xchg
push
xchg
das
sub
cli
ja
adc
shlb
data16
call
int
mov
in
ljmp
pop
adc
add
jo
in
jno
loope
inc
stc
test
in
push
lcall
test
mov
and
int3
push
cs
pop
pop
hlt
aas
call
push
adc
pop
lret
lods
add
lcall
dec
addl
pop
fcoml
xor
jg
lcall
shll
or
sub
mov
lcall
mov
add
mov
adc
and
jmp
push
movsb
lods
jmp
jne
mov
jmp
xchg
lea
test
pop
pop
pop
sbb
iret
mov
xchg
mov
out
add
mov
repz
mov
sbb
out
push
ficoml
xchg
sub
jne
decb
stos
ljmp
jl
sub
xchg
dec
xor
push
ds
or
into
pop
outsb
out
in
ljmp
mov
mov
mov
out
clc
lcall
insl
mov
add
mov
adc
and
lcall
fsubrl
lahf
outsl
mov
lcall
xchg
dec
ljmp
clc
decl
jb
inc
jne
jbe
je
clc
call
fistpl
pop
out
lret
bound
popf
test
dec
mov
icebp
adc
sbb
das
lods
loop
inc
sti
add
xchg
sbb
fs
xor
iret
call
inc
xchg
enter
mov
mov
mov
pop
jb
out
add
jae
xchg
lods
mov
push
jmp
fidivl
inc
mov
jle
lahf
jp
hlt
and
test
cld
ljmp
jno
mov
push
fwait
jge
fsubl
xchg
bound
jbe
push
xchg
test
imul
daa
mov
out
push
pusha
testb
call
or
loopne
pop
xchg
and
cmc
pop
loop
mov
xor
push
inc
cmp
push
lods
xchg
paddusw
adc
ja
rorl
xchg
add
or
push
dec
mov
sarb
xor
mov
ss
jg
pavgw
xchg
or
aad
lcall
sbb
push
push
out
and
pop
insl
add
pop
scas
in
cli
inc
and
dec
jg
cmpsb
push
lods
cmpsb
fnstenv
xor
cmp
push
jnp
cwtl
mov
mov
ljmp
pop
inc
aaa
testb
stos
push
jmp
dec
lahf
ret
aad
mov
pushl
sbb
fistl
xchg
mov
pusha
sbb
dec
cmp
push
jns
sub
mov
call
in
cmp
sahf
lret
ss
inc
das
cmp
test
push
jnp
orb
and
push
add
add
xor
mov
in
aam
ljmp
test
cmpsb
xor
cwtl
shlb
sbb
popf
fiadds
outsb
or
cmp
jg
inc
cmp
stos
rcr
or
dec
mov
jle
push
mov
mov
add
imulb
and
js
pop
mov
sub
into
loope
jle
mov
out
addr16
lcall
imul
adc
jle
adc
push
cmpb
cmp
cmpsl
popa
lea
sub
jmp
lcall
pop
mov
push
lods
adc
cmp
xor
idivl
testl
lcall
les
push
dec
outsb
or
push
outsl
inc
cmpsl
lods
mov
scas
lcall
or
shll
sbb
and
adc
mov
jmp
dec
jp
insb
add
xchg
loopne
push
push
cmp
testb
xor
add
in
aaa
push
sbb
dec
mov
out
clc
inc
dec
jge
mov
shll
repz
push
jl
dec
dec
sbb
outsb
das
sar
pushf
mov
adc
cli
inc
xor
add
cmp
pushf
push
into
add
pop
movsb
ret
inc
push
inc
shrl
push
cwtl
sub
inc
lods
add
sub
push
xor
inc
sti
push
stos
inc
lds
cld
int3
inc
loop
enter
push
mov
mov
push
stos
arpl
push
xchg
imul
ja
push
in
sbb
dec
sbb
inc
loopne
shl
mov
add
jae
pushw
adc
incl
cmp
scas
and
adc
ljmp
dec
fiaddl
push
mov
xor
cmp
cmpsb
pop
sub
and
test
and
add
or
xor
mov
sbb
test
mov
inc
fsubrl
dec
xchg
fiaddl
cmpsb
lcall
xor
pop
jnp
test
add
aaa
jecxz
pop
or
incl
or
dec
cmp
mov
test
adc
mov
and
jmp
add
pop
fcoms
int
jmp
dec
jecxz
ss
xor
inc
mov
mov
sbb
mov
lea
lods
mov
sbb
adc
sarl
addb
mov
jmp
xchg
xlat
loopne
insb
xchg
js
mov
ljmp
push
pop
xor
ret
shrb
pusha
and
fbstp
repnz
imul
cmp
mov
sti
aam
dec
fnstenv
xchg
pop
xor
outsl
mov
lcall
lods
adc
xchg
cmp
inc
or
cmovg
ds
mov
pop
or
mov
sub
pop
and
xor
cli
pop
sbb
out
ja
clc
dec
add
cmp
xchg
adc
test
aaa
decl
adc
cs
or
aas
mov
fstpl
mov
sub
add
arpl
std
mov
fistps
lock
outsl
out
in
jae
lds
rclb
loopne
pop
jp
push
sbb
pop
mov
les
add
push
adc
cli
dec
iret
jae
mov
pop
loop
subb
sbb
jmp
pop
out
sub
mov
xchg
push
lods
idiv
lcall
inc
addr16
sbb
mov
out
jo
fidivrl
mov
imul
fnstsw
or
xchg
loopne
aaa
xor
cmpsl
sarb
fidivrl
jl
cmp
sub
lcall
out
sbb
clc
add
sub
movsl
imul
push
decl
shll
movsl
stc
lds
lock
loopne
dec
lret
stos
stos
jge
pop
xor
push
jg
push
lods
out
adc
xor
scas
fistps
cmpsl
test
popf
xchg
sbb
orl
pop
pop
push
out
xchg
mov
jle
sahf
push
in
out
incl
or
mov
push
jo
pop
enter
add
jp
mov
xor
jo
jecxz
sbb
sub
add
mov
cs
adc
test
dec
andb
mov
dec
xchg
cld
jmp
dec
stos
mov
mov
sub
fs
jl
cmp
fnstsw
add
loopne
and
dec
scas
sbb
jge
fidivs
cmp
fists
xchg
cmp
adc
push
imul
out
repz
insb
xorb
fld
pop
roll
stc
lock
xor
cmp
ljmp
clc
push
lds
adc
andl
and
aaa
scas
repz
mov
pop
lods
jmp
push
inc
fcomps
in
mov
add
fwait
int
movsb
insb
mov
lea
sub
mov
iret
insb
into
lods
pop
inc
out
mov
mov
leave
cwtl
mov
mov
ret
jg
icebp
incl
mov
inc
outsb
xor
sbb
cmp
lret
pop
das
clc
lcall
mov
popa
mov
dec
cmpsb
push
mov
mov
push
ficomps
lods
rep
ljmp
lock
lds
sub
in
inc
add
mov
jns
lea
jmp
add
es
lret
mov
inc
adc
movsl
mov
push
int
sar
sub
mov
xchg
pop
imul
movsl
fimuls
fcoml
pop
mov
mov
mov
or
inc
shll
rcpps
and
sbb
dec
sbb
aam
out
imulb
cs
test
pop
cmc
js
out
test
push
inc
es
imul
jp
mov
adc
mov
mov
or
cmp
xor
sti
push
sbb
push
and
daa
and
push
add
mov
lcall
or
or
les
lds
mov
and
jmp
roll
cmp
adcb
das
in
loop
outsb
fisubrl
sub
sbb
in
int3
in
or
shr
faddp
call
pop
ficomps
xlat
cmp
popl
ljmp
fadds
int3
xlat
ja
ss
outsb
icebp
cmpsb
insb
aaa
push
sbb
add
sbb
xchg
push
ficoms
pop
dec
cld
jmp
sub
xchg
pushf
lret
pop
mov
jg
pop
mov
repz
push
inc
call
cltd
test
pop
pop
mov
xchg
iret
jl
pusha
sbb
ljmp
test
stos
dec
jg
test
push
cmp
mov
pop
aam
test
out
push
pop
dec
xor
test
push
and
lcall
adc
popa
in
loop
adc
js
iret
mov
ljmp
jecxz
sub
sti
or
and
mov
cmpb
sbb
shll
xchg
insl
sti
push
cmp
sub
mov
jp
fucompp
in
orl
dec
in
repz
push
mov
cld
xchg
sbb
out
cmpsb
or
dec
movsl
nop
add
and
out
testl
xchg
lock
xor
mov
aaa
out
sbb
mov
decl
jbe
mov
cmpsb
outsb
call
std
sub
ss
mov
mov
push
ret
lcall
notb
imul
fwait
jo
adc
jbe
fwait
jle
mov
jg
fwait
into
incl
mov
leave
mov
stos
mov
xor
sub
leave
mov
call
jnp
inc
cmp
stc
movd
or
xor
mov
in
jp
lcall
dec
scas
push
push
xchg
xchg
jb
pop
repz
dec
orl
jnp
adc
incl
jbe
fadds
sarl
stos
mov
jg
lret
mov
mov
insb
sbb
xlat
ljmp
les
pop
jb
leave
jnp
mov
rclb
movsb
adc
pushf
or
inc
mov
stos
test
data16
mov
jbe
mov
icebp
out
pop
push
jg
ljmp
les
xlat
cmp
xorl
pushl
je
xchg
cmc
movsb
loope
ljmp
inc
pop
pop
push
xchg
test
cmp
cmp
movsb
iret
cmc
int3
fisttpl
jnp
dec
inc
xchg
adc
cmp
and
cmp
adc
call
jbe
cltd
fnstsw
xchg
or
outsb
ja
or
fisubrl
xchg
fwait
lcall
or
mov
popa
jl
scas
mov
scas
les
scas
psllq
jecxz
ljmp
or
add
xor
adc
push
push
mov
mov
and
or
cmc
pop
sub
decl
imul
xor
sub
cmp
fwait
xchg
filds
add
adc
cmp
push
imul
shrl
mov
scas
adcl
dec
mov
imul
pushf
push
xchg
add
lcall
jo
cld
xor
adc
push
stos
hlt
or
jge
loopne
and
js
and
jmp
pop
sbb
jno
dec
xchg
imul
xchg
test
mov
xor
pop
mov
mov
xlat
roll
add
xchg
out
call
cmp
out
lods
cs
adcb
push
ret
or
call
push
push
inc
sub
lods
mov
leave
mov
sbb
mov
cmpsl
jl
mov
mov
shrb
negl
inc
dec
xchg
inc
mov
cmp
out
pop
mov
ffree
and
push
pusha
push
xor
xor
or
push
int
mov
js
pop
ss
or
sar
inc
cmpsl
or
cmp
sub
mov
cmp
test
nop
or
jp
iret
data16
mov
cmp
inc
pop
sbb
mov
sbb
add
and
mov
mov
outsb
cli
push
fs
pop
mov
andl
xor
sar
jge
incl
int3
jae
sbb
mov
push
mov
push
fsubrp
call
xorl
add
pop
sahf
sbb
fxch
mov
xchg
xor
push
and
and
xchg
into
xlat
stc
adc
adc
bound
incl
mov
sbb
sub
subb
xor
jecxz
outsl
sbb
mov
ljmp
xor
mov
jae
imul
stc
and
popf
test
pushl
xchg
xchg
mov
shlb
orb
bound
push
mov
loopne
stos
insb
out
push
addb
popf
movsb
and
pop
dec
icebp
push
lock
dec
jge
cmp
add
cmp
inc
out
push
pop
adc
ret
loope
and
xor
stc
or
scas
ljmp
or
rcrl
mov
mov
mov
adc
ljmp
inc
scas
jmp
out
push
xorb
xchg
arpl
cmp
ljmp
addr16
in
cld
neg
call
jge
sub
into
xchg
mov
pop
mov
in
xor
inc
xlat
or
xor
cmp
scas
fnstenv
sbb
nop
sbb
dec
jg
mov
cmpsb
scas
xor
adc
push
add
decl
add
mov
mov
sbb
push
out
ljmp
mov
sbb
cmpsl
xchg
push
lods
sahf
push
repnz
hlt
test
ret
std
mov
and
das
dec
push
out
or
int3
sbb
call
enter
fbld
xchg
pop
sbb
pop
pop
mov
cmc
xchg
xor
pushl
mov
sub
arpl
jle
mov
loopne
int3
cli
hlt
jae
xchg
mov
in
imul
cmp
cmpsb
add
or
mov
shrl
lds
out
pop
cmc
incl
cmp
jne
rorl
mov
xor
incl
sbbb
dec
and
out
call
and
call
dec
xchg
loop
rcr
nop
hlt
adc
call
shlb
ja
movsl
cltd
add
cltd
dec
lcall
jbe
jg
test
or
imul
inc
aaa
clc
sbb
dec
jecxz
lcall
add
add
fs
or
jg
xchg
enter
add
dec
ss
lea
clc
jle
movsl
mov
cmp
aad
fs
push
les
sbbl
pop
add
pushf
dec
imul
movsb
xchg
sub
stos
rcr
pusha
and
sahf
sahf
pop
ja
scas
xor
outsl
mov
cmpsl
add
incl
pop
adc
cmp
push
inc
mov
xchg
cli
add
dec
mov
add
ljmp
mov
jne
mov
sub
gs
mov
arpl
jg
mov
mov
js
nop
xor
fwait
pop
shrb
notl
bound
sbb
push
adc
inc
in
sti
pop
xchg
xor
pushf
and
pop
int
sbb
or
mov
fisttps
popa
jo
outsb
pop
aam
push
int
movsl
xor
imul
ret
xchg
lods
add
jl
cmp
filds
pop
mov
jecxz
negl
js
lret
ljmp
jg
imul
jp
sbb
mov
jmp
push
in
pushf
jmp
jae
rcll
jmp
cwtl
shll
enter
rcll
int3
jnp
dec
movsl
fstpl
xchg
add
jg
icebp
in
cmp
ud0
pushl
insb
jge
and
dec
hlt
mov
pop
test
imul
loop
add
cmp
xorb
mov
mov
rolb
and
ljmp
out
js
test
xchg
cmc
xor
repnz
into
jle
sbb
xor
test
pushl
jno
mov
lods
dec
js
xchg
or
bound
test
mov
ljmp
adc
ljmp
outsb
out
mov
mov
out
jo
mov
mov
and
xor
incl
mov
lods
jp
cmp
pop
sub
cld
dec
inc
jae
int
pop
push
pop
and
sti
call
aas
enter
push
cmp
and
jno
jg
je
xor
ret
push
push
mov
jmp
fstps
push
fistps
adc
dec
cmp
push
aam
les
decl
xor
leave
pusha
adcl
jb
je
push
sbb
pop
sti
mov
mulb
or
add
sbb
pop
je
dec
xchg
cs
ljmp
stos
or
je
or
xor
pop
enter
popf
mov
cli
jg
test
cmpsl
or
nop
fidivl
mov
xor
std
decl
addr16
mov
mov
decl
inc
jmp
pop
repz
aad
xlat
je
lcall
mov
pop
jmp
mov
push
pop
loope
imul
jo
cmpb
pop
jg
mov
mov
stos
cs
lcall
jl
scas
rorb
jno
test
dec
mov
dec
jmp
stos
mov
or
imul
mov
push
scas
stc
mov
cmp
das
push
or
inc
bound
xchg
mov
and
lcall
iret
sbb
ret
hlt
divb
jbe
add
push
repnz
pop
out
mov
cmp
loop
push
pop
sahf
add
and
das
mov
repz
dec
or
int
lock
pushl
pop
out
in
das
arpl
sub
xchg
xor
outsb
pushl
mov
inc
insl
cli
mov
stc
xor
fists
mov
jno
lret
cmp
mov
test
lock
out
in
pop
dec
pop
lahf
mov
push
mov
push
push
pop
mov
psubb
incl
fcoml
mov
faddl
notb
and
sub
inc
jmp
cmp
dec
push
dec
lahf
sbb
push
push
add
and
inc
loopne
int
mov
fs
dec
loope
adc
mov
and
outsb
aaa
xor
fbld
push
enter
inc
dec
in
lock
out
lods
sub
das
pop
or
in
fwait
push
test
pushl
sbb
dec
jmp
pop
pop
adc
lods
cmpb
call
nop
sti
aaa
sub
mov
push
test
xchg
push
decb
je
push
and
mov
add
pop
fidivs
daa
std
adc
out
cli
inc
fimull
and
cmpsl
mov
cld
ljmp
add
xchg
cmp
add
fiadds
jg
ljmp
and
mov
cmp
pusha
and
rcrb
out
push
pop
push
ffree
ljmp
and
xchg
mov
aad
jmp
jb
mov
push
sub
mov
test
int
bswap
idiv
mov
iret
adc
stos
push
ror
xor
in
mov
inc
add
lods
sub
addb
mov
mov
scas
push
add
xchg
jg
add
fsubrl
stos
cmpb
sar
decl
orl
fldenv
imul
mov
and
lea
and
es
mov
lock
push
ja
inc
lcall
in
jbe
jae
cmp
pushf
nop
dec
insb
into
pushf
in
shll
stos
lea
gs
xor
loope
test
dec
mov
jne
inc
jb
mov
decl
cld
loopne
and
call
inc
mov
test
ret
aam
call
incb
dec
int3
mov
cmc
mov
cmp
adc
inc
jno
in
mov
cld
incl
int3
movsb
mov
xor
lea
push
inc
dec
lahf
pusha
mov
jg
or
jg
jb
cld
imul
pop
mov
mov
call
push
call
or
xchg
jnp
xlat
sbb
xchg
inc
cmp
addl
lods
inc
es
call
fimuls
sahf
cmp
lahf
lods
dec
push
js
adc
lcall
and
movsb
incl
dec
andnps
sub
pop
pushf
es
inc
pop
push
stc
xlat
lret
out
add
bound
es
out
mov
inc
or
and
push
pop
xor
mov
in
or
aad
idivb
popf
fistl
push
jbe
jl
cmp
inc
or
fbstp
pop
jbe
mov
cwtl
ss
orl
pop
hlt
decl
cwtl
fisubl
pop
add
aas
jmp
les
lcall
ljmp
pop
lret
ret
test
stos
and
stos
add
xor
shrl
mov
jns
xor
aaa
mov
leave
lret
je
sbb
pop
ret
daa
adc
pop
add
nop
call
pop
rolb
xor
jnp
sub
rorb
push
add
sbb
pop
clc
data16
xor
pop
fdivl
adc
jle
xchg
ljmp
inc
repnz
jl
fsts
pop
mov
test
cwtl
loopnew
jge
xchg
pusha
fldl
test
std
lcall
sbb
or
jo
and
jg
pop
sets
insb
lahf
or
sahf
pop
lret
mov
mov
cmp
int3
jnp
ss
sti
push
addr16
jnp
dec
ljmp
push
xlat
add
cmc
or
das
pop
mov
cmc
mov
xor
lahf
fdivr
decl
sbb
sti
mov
inc
sbb
sbb
sbb
mov
xchg
lods
fidivl
pushl
pop
push
out
push
inc
cmp
daa
push
mov
add
and
push
xor
icebp
or
adc
xor
ljmp
jne
inc
inc
mov
jp
pusha
daa
add
std
inc
xor
sahf
cs
cmp
pusha
idiv
call
sub
jae
xor
jo
and
aaa
inc
pop
pop
aaa
imul
mov
test
jge
mov
movsl
pop
lods
sahf
call
decl
in
jae
call
pop
or
mov
mov
mov
lcall
inc
int3
xchg
inc
ret
and
in
das
lea
jecxz
xchg
clc
cmc
repz
mov
test
mov
xlat
inc
dec
outsl
mov
bound
sbb
cmp
lds
mov
lea
mov
movsb
lcall
jl
icebp
call
push
push
outsb
idiv
sub
mov
sub
or
stos
inc
imul
pop
ljmp
xchg
adc
xchg
stos
or
mov
sbb
mov
mov
mov
xchg
out
clc
incl
jo
cld
or
fmuls
rcl
addr16
cmpsb
clc
std
jecxz
shrl
repnz
lock
decl
cs
ja
jns
out
fwait
mov
inc
pop
clc
lret
pop
jle
mov
in
pusha
adc
fdivrl
outsb
addb
sbb
sar
mov
adc
dec
dec
ficompl
ljmp
jg
inc
mov
stos
std
sub
xor
stos
shl
jecxz
jg
iret
push
imul
insl
sbb
subb
jo
out
loopne
nop
fsts
cmpsl
xor
dec
dec
inc
pusha
in
push
loopne
pop
mov
jns
stc
iret
mov
sti
loopne
xor
sub
roll
cld
ljmp
add
ret
lods
std
adc
loopne
ud0
fbstp
xchg
adc
sub
mov
nop
addl
or
jle
xchg
inc
cltd
shl
iret
pop
cmp
rcr
push
sub
sbb
xchg
in
xor
xchg
sti
sub
xor
sbb
mov
sub
mov
iret
push
dec
lea
pushl
mov
push
loop
test
aam
mov
mov
imul
int3
imul
inc
sahf
pop
daa
cmc
fdivr
cmp
mov
aad
push
movsl
pop
inc
or
cmpsb
xor
adc
pushl
cwtl
and
ja
jecxz
loope
fcoms
mov
add
les
dec
out
cwtl
imul
incl
xor
nop
push
xchg
mov
lods
push
cmp
imul
icebp
leave
pop
lcall
not
dec
fcmovne
int
jecxz
cmc
fcomip
ljmp
lret
push
xor
add
adc
pop
jb
add
rcll
lcall
jle
enter
cmpsb
pop
mov
testb
mov
std
rcrl
dec
fisubrl
fsubrs
popf
sub
sti
subl
push
and
mov
ljmp
sub
or
aad
push
imul
js
ficoms
xor
xor
ljmp
mov
popf
enter
inc
into
cmp
das
push
cmp
and
scas
lahf
inc
inc
mov
je
push
or
or
repz
flds
arpl
inc
push
xchg
cmp
movsb
xchg
xchg
aas
out
mov
rcl
imul
loopne
fnstenv
loop
sbb
mov
or
cmp
in
add
ficomps
in
sti
test
mov
dec
movsb
roll
cmp
push
mov
mov
scas
shrb
outsb
out
push
jg
test
inc
or
xchg
aam
xchg
add
jle
sub
cmp
dec
xor
pop
push
incl
lods
out
out
cli
scas
bound
cwtl
lds
pop
push
mov
std
inc
mov
dec
aam
mov
bound
push
popa
imul
pop
in
loopne
xchg
inc
sar
incl
mov
andb
push
cs
loope
cmp
mov
aam
fcmovnbe
and
and
dec
mov
jb
dec
in
cmp
or
jne
mov
das
clc
frstor
cli
loope
cmpsl
cmp
sbb
and
pushl
sub
call
fcomip
xor
cmp
pop
and
lock
lea
insb
or
clc
pusha
enter
cmp
or
xor
repnz
push
inc
subl
or
ljmp
or
cmpl
data16
inc
sub
ret
movsl
addr16
mov
test
cwtl
clc
decl
test
dec
mov
xchg
lahf
fistl
jns
bound
inc
push
cmp
jno
cld
pushl
push
inc
in
fnstcw
daa
aas
movsb
outsb
xchg
cmp
jbe
jno
mov
scas
jbe
loop
ja
pop
insl
sbb
xchg
test
lcall
lods
movsl
das
js
bnd
sub
add
into
sahf
push
sub
movsb
pushl
out
test
push
jmp
push
xchg
and
cltd
and
cld
jmp
inc
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
jo
jb
push
dec
imul
je
push
gs
popa
adc
jb
jb
inc
gs
aas
sti
arpl
insl
and
jae
popa
fs
jb
ss
jo
jbe
mov
inc
push
jae
inc
popaw
jne
jp
dec
inc
es
ja
mov
inc
js
lods
inc
jbe
outsl
lods
mov
mov
push
lcall
jo
xchg
bound
dec
popa
outsb
fs
gs
out
sbb
je
je
jo
outsw
push
and
mov
insb
mov
jae
inc
sbb
push
ss
fisubs
inc
je
pop
inc
insb
movsb
sbb
call
jns
mov
out
xor
es
cmp
sbb
sti
stc
les
jb
andl
ljmp
outsl
pop
push
mov
pop
sub
add
lds
xchg
push
sub
xchg
xor
xchg
test
or
aas
inc
xor
mov
mov
lods
dec
mov
dec
out
adc
addb
or
or
push
add
and
lods
cmc
mov
dec
add
sub
and
or
xor
adc
lods
add
lds
cmp
adcb
cmp
xchg
push
xor
dec
inc
adcb
add
push
sbb
add
nop
sub
pop
fcomi
mov
adcb
xor
inc
incl
lods
add
inc
pop
add
push
jmp
adc
xor
gs
dec
sbb
flds
push
and
ret
fldl
lods
and
dec
jecxz
inc
adc
lds
and
add
adc
jne
cmc
pusha
push
add
add
out
cmp
fucomi
xchg
sub
popa
je
outsl
insl
jo
imul
pop
push
mov
jnp
add
loope
mov
jb
shl
inc
addr16
mov
xorb
pop
shrl
stos
inc
and
pop
inc
xchg
outsl
mov
inc
inc
add
push
add
fistl
mov
mov
jns
sub
arpl
lahf
dec
add
and
mov
nop
subb
or
out
adc
popf
or
or
pop
lret
inc
stos
add
mov
mov
push
pop
mov
rorb
push
push
mov
inc
rep
inc
mov
sbb
xchg
add
and
nop
mov
test
pop
push
adc
inc
or
push
mov
add
add
jne
adc
mov
cmpl
dec
add
jmp
add
push
dec
add
add
add
mov
jmp
add
cmp
jo
sbb
incb
retw
inc
inc
pop
add
add
imul
add
bswap
xchg
mov
mov
sbb
inc
add
or
je
shlb
and
fidivs
pusha
dec
in
jnp
add
mov
mov
and
sbb
mov
mov
daa
pop
mov
dec
loopne
and
pop
and
cmp
cmp
pushf
dec
andb
fistl
mov
xchg
push
push
and
fsubl
sbb
dec
jb
xor
dec
inc
sbb
adc
xchg
lock
push
xchg
fsubrs
jae
dec
pop
sbb
pop
push
out
push
inc
dec
xchg
lock
inc
adc
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
faddl
add
add
add
add
add
add
add
add
add
add
mov
add
rolb
add
add
add
add
add
add
add
add
add
fadds
add
movsb
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
sub
add
insb
dec
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
add
js
add
xor
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
enter
cld
pop
inc
add
add
add
add
add
add
add
roll
inc
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
les
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
movl
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
lret
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
int
add
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
rolb
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
roll
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
aad
add
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
fadds
ds
mov
data16
popa
stos
call
sbb
icebp
ret
mov
test
push
test
and
jne
cmp
lock
push
lods
lea
mov
psrlw
mov
mov
jae
cmp
loop
jge
rcrl
xor
pop
shlb
jbe
stos
lret
mov
clc
or
clc
cmp
repz
mov
lret
adcl
mov
or
in
rcl
push
and
repz
arpl
mov
movsb
push
sbb
adc
and
stos
sub
cmp
repz
sbb
xor
mov
sahf
insb
mov
outsb
insl
pop
sti
sub
jnp
in
adc
mov
arpl
push
repnz
dec
shlb
lret
into
pop
out
push
xchg
mov
xchg
fdivp
mov
scas
cpuid
xlat
stos
mov
push
jae
jmp
aaa
and
adc
enter
lret
inc
lds
mov
adc
and
cltd
testl
push
and
clc
dec
popf
dec
stc
mov
dec
inc
lea
iret
or
js
jnp
sub
adc
insb
mov
adc
cmp
int3
jbe
test
cmpb
movsb
dec
pushf
nop
sbb
stos
loope
dec
ljmp
outsb
jl
jg
lods
mov
xor
cmp
test
sub
dec
lods
fidivrl
rolb
es
in
mov
xor
out
push
out
sahf
fnstenv
lea
mov
rol
pop
sub
adc
mov
jl
jb
push
das
scas
or
or
xor
mov
es
xor
sti
dec
add
inc
push
pop
push
mov
pavgw
out
xchg
mov
mov
cwtl
jno
inc
xor
mov
andl
xor
mov
pop
xor
and
dec
std
in
ss
out
mov
and
push
in
sbb
ds
mov
je
rclb
push
push
xchg
adc
ficompl
or
andl
push
movb
push
xlat
mov
mov
sub
cltd
mov
lret
cmp
lahf
out
ret
stos
sub
push
sbb
adc
leave
iret
or
inc
mov
push
inc
stos
imul
sub
punpckhdq
out
aam
outsb
sub
inc
xchg
fists
xor
push
xchg
pop
hlt
mov
shlb
mov
cmpsb
in
sub
mov
lock
movsb
int
sub
pop
shrl
dec
or
and
sub
faddl
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
add
lret
add
add
add
pop
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jne
popa
jo
add
imul
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
jne
je
jb
outsl
fs
insb
outsl
jae
inc
outsb
jne
add
push
gs
imul
add
