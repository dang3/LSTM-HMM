sbb
add
arpl
cmc
lea
repnz
jb
ds
pop
loop
icebp
inc
leave
insl
mov
jl
mov
or
mov
xchg
in
imul
dec
loopne
jl
aad
jge
pop
outsb
jmp
stos
mov
cmp
stos
les
fs
cmp
inc
rcr
int
adc
add
sbb
vcvtss2si
fs
lret
bound
outsb
sub
pop
xor
push
pop
mov
popf
jns
divl
jmp
and
mov
lds
movsl
sub
mov
mov
in
push
iret
popf
lret
pushf
imul
sbb
sbb
inc
repnz
repz
push
pop
stos
pop
cli
mov
dec
int3
repnz
mov
popa
push
jae
add
jp
ret
adc
je
inc
jmp
shr
in
mov
jp
ljmp
push
sub
mov
sbb
cmpsl
xchg
jns
bound
cmpsb
repz
repnz
leave
cmp
pop
cmp
into
cmpsl
sbb
jb
pop
add
enter
or
or
repz
and
adc
jae
sub
adc
adc
or
arpl
imul
and
rcr
mov
rcr
xor
inc
lret
mov
or
mov
or
fdivr
pop
sub
loop
dec
testl
inc
jb
mov
dec
mov
push
push
xchg
cltd
sbbb
sbb
dec
arpl
dec
sti
iret
imul
pop
xchg
dec
imul
lods
and
popa
sbb
mov
and
stos
das
addr16
aas
push
jmp
inc
mov
test
push
rcr
int
pop
adc
dec
mov
les
jecxz
jno
cmp
je
xchg
jae
iret
ret
andl
mov
xor
push
push
mov
push
adc
fsubs
cltd
mov
xchg
sub
fwait
push
outsl
adc
xchg
inc
add
cmp
mov
scas
pop
dec
mov
adc
outsl
cmp
add
xchg
push
xor
jae
fsts
or
leave
jg
sahf
mov
xor
mov
je
imul
lock
ret
fldenv
ljmp
leave
xor
inc
xor
fistps
jnp
xchg
cmp
xor
sbb
cli
popf
mov
xchg
in
push
test
xchg
pushf
push
xor
into
scas
pop
xlat
cs
adc
mov
aaa
mov
xchg
fcomip
jbe
loop
ret
jmp
pop
pusha
dec
push
pop
cmp
cmp
outsl
push
mov
daa
fdiv
out
jbe
mov
dec
out
mov
movsl
push
ss
push
jb
adcb
repz
xchg
cmp
hlt
out
mov
pop
daa
iret
mov
dec
or
and
movsl
add
sub
mov
ja
in
sbb
pop
mov
jnp
sub
cmp
xor
jg
dec
cwtl
lods
mov
mov
jg
xor
xorl
daa
dec
ret
xor
push
mov
mov
cmpsl
sbb
dec
stc
lahf
mov
loope
xchg
mov
sub
shl
sbb
sub
clc
mov
cmc
leave
mov
jmp
pop
lcall
and
adc
jnp
inc
add
sbb
sub
iret
sub
push
lcall
mov
xor
xchg
push
lcall
lock
stos
mov
sbb
mov
lods
aam
fidivs
stos
adc
pop
push
cmp
xor
xor
das
inc
std
mov
push
out
lea
loope
sub
inc
sarl
pop
push
mov
jne
xchg
movsb
into
fst
and
or
adc
jno
adc
outsb
lret
outsb
into
cwtl
lahf
scas
cltd
aaa
cmpsl
xor
push
inc
cmp
mov
xchg
sub
incl
mov
fcoms
mov
xchg
xchg
lods
ja
jmp
pop
enter
dec
lods
adc
lods
cmpl
fbld
out
nop
stos
mov
adc
rolb
test
pop
sub
mov
mov
mov
jae
fstl
insl
rcrl
xchg
pop
xor
xchg
stc
sbb
and
dec
lods
add
mov
clc
xchg
aaa
cwtl
pop
test
xor
arpl
inc
outsb
push
aam
pop
fnstenv
jno
in
fs
add
xchg
or
out
sbb
xor
dec
push
push
loop
data16
fisubs
add
lds
xor
inc
pop
ficoml
scas
repz
jle
push
push
sbb
and
jne
addr16
addl
rolb
pop
mov
addb
loop
add
dec
xchg
ljmp
clc
jo
push
dec
outsl
and
loope
ret
add
movsl
aad
jle
pusha
arpl
mov
imul
push
cltd
test
repnz
hlt
dec
jmp
cli
loop
jno
xor
lock
pop
jo
iret
mov
jl
push
and
pushf
mov
xchg
mov
in
subb
push
jno
pop
ds
cmpsl
mov
and
push
mov
rcrb
pop
mov
rcll
pop
ds
out
mov
aas
mov
rcrl
mov
adc
sbb
sub
in
and
pop
gs
fs
mov
jecxz
iret
mov
pusha
cmp
mov
fidivs
in
xchg
inc
adc
dec
cmp
inc
sar
mov
out
in
or
fmull
rcrb
lods
pop
mov
jbe
testb
sti
out
ret
test
xor
sub
addr16
js
loop
les
push
pop
xchg
push
jo
out
aaa
push
icebp
inc
insl
xor
aad
mov
imul
mov
test
test
iret
pop
pop
movsb
jae
out
call
jnp
mov
ficoml
cltd
cmp
aad
add
pop
mov
inc
mov
popf
aas
outsl
lret
scas
or
jg
cwtl
adc
icebp
stc
push
mov
fwait
jl
pop
aad
sub
test
in
shrb
int
cmp
sbb
mov
push
jecxz
scas
rcrb
mov
xor
pop
push
gs
rcll
les
and
lgs
das
dec
mov
insl
out
xorb
adc
dec
fstp
lods
adc
insb
xlat
mov
fwait
xor
arpl
xchg
ljmp
mov
cli
pop
pop
mov
xchg
arpl
je
lods
rcrb
push
iret
xchg
aad
das
cmpsb
xor
jns
popf
insl
fsubrl
insb
fnstcw
sti
cmpsb
dec
jb
inc
pop
aad
dec
mov
and
sub
mov
dec
cwtl
loop
mov
jmp
jno
aad
clc
pushf
jle
xchg
clc
ret
push
mov
pop
adc
mov
mov
bnd
ja
loope
pop
test
leave
xor
fs
pop
sahf
lods
pop
mov
das
fisttpl
sbbl
cmp
scas
adc
std
test
stc
add
xchg
mov
cli
and
int3
push
jo
or
mov
xchg
imull
mov
lock
lock
add
fidivs
mov
pop
pop
sbb
sahf
outsl
mov
subl
ret
pop
inc
sub
pop
or
sarb
sbb
filds
negb
faddl
outsl
mov
mov
or
dec
jne
outsl
in
lcall
enter
data16
push
ret
pop
out
adc
call
pusha
inc
stc
int
add
fildll
or
addr16
sub
lods
push
lds
test
jb
dec
dec
inc
rorb
fnstsw
pushf
stc
pop
push
sti
mov
insl
test
js
rorl
xor
dec
cld
sbb
aad
sub
sbb
leave
sbb
popa
adc
fwait
ror
pop
aaa
dec
ror
jae
es
clc
adc
les
push
lods
pop
push
dec
insl
rolb
mov
lahf
push
pushf
ss
iret
test
sbb
jae
add
mov
xorb
cltd
test
pop
stos
out
fwait
and
movsb
push
adc
notl
ret
outsb
mov
stc
es
movl
ljmp
hlt
mov
and
in
mov
xchg
test
lahf
sahf
fs
jp
inc
test
das
mov
sti
mov
loope
cli
std
sbb
jb
pop
mov
das
mov
sbb
addb
in
arpl
inc
pop
pop
aas
stos
sbbl
scas
orl
inc
fsubrl
push
push
call
cmpsb
loopne
and
ljmp
cmp
mov
out
ds
clc
je
pop
mov
push
dec
mov
fisubs
inc
imul
pop
dec
adc
dec
jns
add
push
sbb
push
sub
mov
mov
lret
mov
into
les
cmp
mov
pop
push
clc
das
cmpsl
adc
jne
push
testl
sub
or
adc
jge
call
add
hlt
out
sbb
popf
sbb
sub
mov
lods
dec
les
mov
sarl
xchg
ret
xchg
mov
enter
dec
pop
jnp
mov
in
mov
and
and
nop
pop
into
cmpsl
mov
lret
lcall
shrb
test
xchg
inc
popf
mov
lcall
cmp
pop
fcoml
pushf
ret
cmp
xchg
mov
cmpsb
xchg
call
xchg
cmp
outsl
dec
ljmp
mov
mov
sar
jmp
iret
or
flds
cwtl
call
fistps
add
pop
or
and
push
sbb
outsb
hlt
cwtl
mov
push
jae
dec
mov
imul
sti
and
jle
aam
in
test
jmp
mulb
shrl
cmpl
cwtl
dec
movsl
inc
mov
inc
pop
xor
adc
push
push
movl
push
mov
push
addr16
iret
dec
lock
sub
inc
xchg
icebp
sbb
lods
mov
sbb
mov
test
popf
xchg
jg
into
sub
mov
and
mov
jmp
dec
movsl
call
pop
pop
push
mov
add
mov
pushf
aas
fsubs
test
in
pusha
rol
dec
pop
stc
aad
imul
cmp
aaa
mov
gs
lods
and
daa
jbe
mov
mov
rcl
pop
and
icebp
add
sbb
ljmp
sbb
aas
outsl
fs
pop
and
or
addr16
sbb
cwtl
push
mov
popa
in
pop
push
inc
add
xchg
dec
mov
dec
sub
sti
cli
mov
jmp
push
jl
sub
jg
cltd
xor
sub
xchg
mov
adc
test
out
dec
sahf
or
ret
pop
xor
sbbb
shrb
and
lods
out
mov
out
push
movsb
fwait
dec
pushf
xchg
or
pop
and
jecxz
rcll
xchg
adcb
cmp
fidivrl
in
jl
xchg
dec
cmpsb
repz
pusha
mov
inc
mov
xlat
aas
sarl
shrl
movsb
rcl
in
push
inc
and
pop
leave
loop
jg
xor
out
mov
mov
pushf
dec
mov
mov
adc
or
mov
aas
jmp
sub
sub
fs
rorb
cmp
ja
xchg
insb
add
sub
and
xorb
outsb
fcompl
lahf
mov
loopne
push
mov
lea
jns
xchg
mov
or
mov
push
into
jns
mov
or
mov
test
mov
push
mov
or
xchg
rep
or
test
subl
es
xchg
push
inc
lahf
mov
inc
ret
testb
mov
push
out
jnp
mov
cmp
pop
inc
imull
mov
insl
push
sub
adc
ljmp
ds
icebp
push
inc
lods
les
insl
ss
inc
lods
and
scas
cwtl
sub
xchg
popf
xlat
xor
in
inc
jo
push
inc
jno
pop
xor
mov
stos
add
xchg
enter
jmp
jmp
test
test
sub
mov
xchg
sbb
clc
xor
insl
pushf
cwtl
push
push
icebp
xorb
or
in
sti
xor
insb
add
inc
xchg
movsl
testb
lcall
or
ret
xlat
dec
jl
imul
int3
clc
or
fmuls
cs
loop
rolb
das
jno
test
sub
lcall
repz
int
inc
adc
mov
or
inc
add
push
jae
push
inc
sub
into
test
mov
out
xor
ss
leave
sub
std
fcomps
fcoms
cltd
push
mov
inc
sahf
pop
mov
imul
fstpl
mov
cmp
xchg
add
fidivs
daa
push
xor
jmp
xchg
sub
cld
and
fmuls
es
out
jmp
adcl
xchg
add
sub
idivb
daa
test
sgdtl
lods
push
aaa
xorl
xchg
mov
ret
mov
pop
in
add
aam
scas
jecxz
ja
cwtl
scas
jne
into
push
and
pop
ss
pusha
rcll
fcoml
insl
int3
das
xchg
sub
mov
sbb
insl
jecxz
jae
mov
lcall
and
lods
loope
mov
clc
sub
or
sti
adc
mov
pop
sub
int3
push
dec
fwait
jecxz
push
sbb
push
xchg
fcompl
lea
jg
loopne
push
pop
ljmp
into
rep
push
loopne
jne
xlat
mov
jns
push
jecxz
repz
test
jne
adc
rcr
sub
aam
movsl
mov
es
pop
cmp
lock
inc
addl
sbb
mov
inc
sub
lock
mov
mov
sarb
mov
jb
jl
scas
in
enter
cli
lea
cmp
or
xor
or
jns
stos
mov
add
sbb
cld
mov
or
in
adc
inc
dec
push
or
or
fcmovbe
adc
testl
fildll
ss
mov
inc
movsb
cwtl
xchg
shrl
sbb
movsb
movsl
add
test
xchg
orb
xorl
test
xor
das
pop
pop
adc
ds
cli
mov
pop
xor
loope
mov
pop
pop
lods
pop
or
jns
jno
shl
dec
clc
jb
and
hlt
lret
fnstenv
fwait
out
shlb
movsl
outsb
push
push
icebp
fsts
sbb
gs
jecxz
lds
xchg
sti
jno
sbb
sbbb
cltd
sbb
jno
dec
repz
or
pusha
xchg
mov
dec
cmp
scas
xsha1
cmpsb
dec
and
pop
ds
pop
inc
sub
dec
dec
sbb
and
outsb
fst
fsts
push
pop
adc
in
jnp
cmp
out
cmp
xor
ret
push
les
xor
popf
lock
lret
nop
icebp
or
imul
imul
sbb
fstpl
daa
mov
test
movsl
in
xlat
xor
or
cltd
cmp
in
shlb
fimull
jp
out
cmc
xor
add
pop
std
push
dec
push
lar
inc
adc
xor
cmpb
movsb
mov
jo
test
call
xor
fldt
roll
xchg
cmpsb
arpl
arpl
jbe
mov
popf
dec
idiv
test
and
out
or
and
movsb
cmpsb
loopne
and
adc
mov
movsb
scas
push
jns
es
test
mov
faddl
stc
lcall
aad
jl
xchg
jp
mov
cmc
rclb
mov
add
jo
mov
inc
inc
xchg
dec
mov
jbe
dec
adc
lahf
and
pop
fsubrl
mov
xchg
adc
imul
jl
push
push
mov
push
lock
adc
movsb
test
inc
sbb
mov
fs
jae
das
cmpsb
pusha
sbb
push
push
xchg
lock
push
or
lock
negb
loopne
adc
or
add
shll
jns
lock
es
push
pop
mov
lods
pop
jmp
mov
jbe,pn
sub
sbb
mov
mov
inc
cwtl
mov
sbb
jmp
nop
cmp
cli
std
lret
sub
add
dec
out
mov
lds
and
ret
pusha
js
mov
cs
icebp
lock
adc
pop
and
ret
andb
xchg
cmpsl
mov
mov
adc
ja
sbb
fmuls
cmpb
xchg
inc
push
cltd
push
mov
mov
aas
int
dec
ret
cmp
pop
and
mov
mov
imull
xchg
mov
xchg
pop
jge
xchg
hlt
cmp
dec
push
cmc
and
cld
pop
ljmp
scas
mov
jb
daa
inc
push
dec
mov
push
in
jmp
inc
pop
mov
mov
lock
cmp
mov
sub
sahf
sub
dec
outsl
test
cli
int3
xlat
int3
mov
xlat
mov
xor
sub
movsb
xlat
mov
shll
addr16
sbb
push
cltd
pop
sti
shll
lock
stos
adc
add
test
pop
in
outsl
loop
cmc
test
in
call
inc
jle
adc
clc
inc
test
mov
sub
cmp
sub
test
xor
fnsave
dec
push
icebp
and
rorl
stos
mov
sub
xchg
jg
ficoms
push
lret
pop
push
fisubl
stc
sub
sbb
ret
push
lea
in
lds
pop
or
or
les
cmc
in
xor
jne
out
cltd
call
push
add
dec
mov
xchg
dec
mov
sbb
mov
dec
pushf
adc
push
sbb
mov
lods
dec
bound
pushf
mov
pop
xor
addr16
clc
lds
cld
sar
in
inc
xchg
out
sub
nop
xchg
jno
add
sbb
sbbl
cmc
sbb
xchg
loop
push
hlt
leave
adc
mov
cmp
add
mov
loope
cmp
push
pushf
addr16
cltd
adc
or
rcll
dec
push
imul
or
shrl
movsb
push
mov
sti
mov
js
push
shrl
ljmp
lock
fiadds
enter
stc
mov
fwait
sarl
pusha
bound
pop
push
push
int
ret
xor
popf
sahf
add
mov
jmp
jl
inc
xor
std
dec
roll
pop
lahf
xchg
test
xor
push
inc
inc
leave
lret
push
push
test
jmp
jecxz
mov
dec
or
sub
mov
das
add
and
xor
sbb
iret
mov
ficomps
xchg
or
insb
divb
pop
pop
sbb
enter
subl
mov
arpl
loope
hlt
cmp
in
xchg
popf
push
test
aaa
imul
fwait
jg
sar
popf
jns
arpl
into
movb
clc
adc
enter
sub
push
enter
cli
adc
call
insb
jne
sub
xor
dec
es
add
orb
mov
cli
imul
lret
sub
cmpsl
pop
popa
in
cmp
lds
inc
cmpsl
push
lea
pop
inc
out
stc
mov
or
jecxz
popf
push
add
push
out
lret
mov
pop
insb
xchg
mov
and
data16
lcall
lcall
sbb
jl
lret
xchg
jno
cmp
push
daa
cmpb
test
push
mov
xor
jb
movsb
push
adc
in
dec
in
data16
xor
jns
dec
mov
or
jp
xor
xchg
add
mov
xchg
je
lret
sub
stos
mov
sbb
daa
fs
in
ljmp
pusha
cmp
cld
jecxz,pn
inc
sbb
xchg
push
jp
out
int
aad
pusha
xchg
adc
fmull
or
xor
ret
push
pop
or
push
ja
aam
test
mov
sub
out
ret
inc
jno
cmp
push
ret
sbb
test
fldenv
push
mov
ret
int
hlt
cli
addr16
daa
adc
mov
dec
mov
mov
test
and
adc
mov
mov
mov
jmp
xchg
clc
xchg
ret
daa
mov
mov
sbb
inc
add
and
pop
or
dec
jecxz
es
pusha
test
and
mov
call
push
sub
mov
pushf
lods
sbb
fs
stos
xor
cmpl
shr
cmp
mov
fucomi
inc
push
lahf
pop
stos
inc
jecxz
aam
int3
repz
jno
roll
push
add
inc
or
xchg
int3
es
mov
push
out
mov
lret
aas
scas
and
pop
sbb
fsubl
test
and
xchg
adc
adc
mov
push
call
cmp
cmp
or
mov
sbbb
cmp
call
xor
xchg
aas
sbb
add
pop
int3
jl
dec
iret
lret
dec
dec
xor
cmp
rorb
cmpsb
std
pop
cltd
call
push
xor
lahf
stos
cmpsl
repz
mov
aaa
popf
lea
in
xor
aam
pop
das
jne
pop
pop
testb
push
xchg
pusha
or
or
adc
cmp
sbb
pushl
pop
imul
or
jg
sbb
mov
push
cli
pop
add
xor
movsl
push
addl
jle
sbb
popf
imull
scas
ss
inc
cmpsb
movsl
fscale
mov
aas
imul
inc
mov
jp
inc
repnz
mov
into
or
cmp
std
add
push
xlat
lds
cmpsl
mov
jne
scas
adc
xor
jnp
std
mov
scas
lea
jbe
orl
adc
and
in
and
fbld
das
rolb
arpl
push
add
lock
mov
hlt
imul
fwait
mov
mov
lahf
xor
or
and
outsl
pop
orl
xlat
adc
add
in
jae
and
out
mov
test
sbb
imul
and
jno
repz
je
xchg
sbb
mov
test
push
aad
mov
and
cmp
mov
hlt
out
xchg
movsl
bound
loop
lahf
sbb
cmp
or
dec
mov
fadds
gs
into
clc
shl
sbb
flds
xchg
add
xchg
inc
dec
push
mov
fisttpl
cmp
fldt
daa
ss
jmp
pop
in
pop
jae
scas
xchg
les
aas
fisttps
and
inc
fwait
mov
inc
push
jb
jmp
ss
ljmp
mov
push
mov
push
pusha
popa
sahf
add
dec
adc
stc
dec
or
pusha
mov
ret
jb
enter
outsb
sbb
sub
sub
sub
cmc
inc
push
dec
dec
cld
sbb
dec
cmp
adc
add
lahf
loope
adc
pop
pushf
add
lfs
jge
bound
bound
popf
cmp
aad
mov
sbb
inc
setne
fidivrs
nop
jno
adc
xchg
cwtl
inc
lret
sbb
xor
pop
cltd
test
outsl
test
aad
jg
adc
test
push
jno
pop
ljmp
rclb
es
xor
lret
jnp
es
in
sbb
adc
or
xchg
dec
push
dec
pusha
test
pusha
mov
xchg
mov
or
pop
test
repnz
mov
adc
jnp
push
test
xlat
pop
hlt
mov
aad
shrb
in
test
cmpsb
jecxz
add
and
push
sbb
mov
mov
aad
add
movb
int3
push
dec
cmp
fnstsw
insl
imul
test
popf
mov
mov
mov
xchg
scas
and
mov
add
inc
idivb
xchg
adc
enter
call
mov
add
pusha
xor
call
mov
scas
insb
clc
pop
movsb
imul
pop
sarb
xchg
testb
js
in
popa
fsub
pop
aam
mov
in
xor
js
hlt
pop
sbb
push
cmp
ja
jl
dec
scas
lods
loopne
stos
repz
xchg
or
push
in
punpcklbw
xor
fstps
sub
sub
daa
push
int3
jge
aam
rcrb
test
mov
and
ss
adc
or
or
fcoml
pusha
inc
loopne
insb
dec
pop
imul
pop
imul
outsb
pop
popf
sahf
sbb
je
out
fisttpll
int
les
repz
lock
mov
adc
inc
call
jle
sub
xchg
pop
mov
mov
mov
roll
jae
pop
mov
insb
xor
sbb
jecxz
in
sbb
and
scas
sbb
sbb
inc
jo
pushf
icebp
mov
cs
repz
pushf
pop
mov
push
outsb
int3
xor
scas
jp
inc
shll
sbb
cld
mov
and
aam
lret
push
mov
cwtl
cmpsl
inc
out
or
xor
and
test
jo
adc
shl
shl
dec
in
cmp
dec
sub
lods
mov
loopne
out
stc
popf
movsb
mov
pop
push
mov
jbe
jecxz
cli
xchg
negb
adc
lret
cld
pop
push
push
pop
frstor
jge
xchg
inc
cmp
dec
xchg
pushf
sbb
int3
mov
jo
in
insb
inc
xor
xor
icebp
sub
orl
fimuls
sub
push
mov
cmp
push
or
or
push
dec
sub
iret
gs
pop
or
lods
test
jp
and
ss
jge
pop
push
xchg
call
mov
int3
ja
pusha
sbb
mov
pop
cmpl
shll
sub
mov
jbe
aad
test
or
orb
cld
sets
outsb
pop
sbb
push
cmp
mov
mov
stc
pop
lret
sub
daa
fstps
pusha
cwtl
and
sti
pushf
push
ret
dec
sbb
ret
and
xor
lds
mov
into
sbb
push
out
push
roll
jge
pop
xor
repnz
and
jbe
push
imul
idivl
inc
xchg
mov
push
fisubl
mov
mov
or
and
test
jg
jb
mov
call
push
dec
mov
fnstcw
push
mov
adc
pop
cmp
push
fbstp
jns
xchg
mov
repnz
test
out
xor
sbb
push
addr16
push
and
shrl
push
cwtl
push
mov
mov
add
ret
add
shr
sub
sub
xor
pop
cmp
loopne
push
jae
test
inc
or
jmp
mov
jmp
ss
std
push
sub
shrb
push
rcrb
cmp
push
ds
dec
xchg
ret
test
push
dec
mov
fbstp
cmc
scas
pop
bound
sbb
popa
sbb
stos
inc
adc
cmpsb
lret
mov
pop
mov
push
rcrb
cmc
pop
mov
addr16
cmc
popa
sahf
xlat
mov
call
cmp
add
adc
fwait
mov
pop
rcrl
xor
mov
inc
jns
pusha
subb
inc
lret
dec
ja
mov
inc
loope
fdiv
mov
jmp
xchg
or
jnp
cld
imul
sar
adc
jmp
aad
imull
rclb
mov
mov
add
xchg
pop
adc
out
cmp
xorb
outsb
or
cmp
js
inc
cwtl
lcall
into
mov
call
xchg
in
add
and
int3
pop
add
out
inc
ret
fcoms
rorl
mov
xchg
loope
mov
lods
cmp
cmp
pslld
pop
je
cli
mov
aas
xlat
js
pop
clc
xchg
cli
das
jmp
sbb
inc
out
push
out
rcrb
sub
ljmp
or
or
lahf
push
cli
xchg
push
imul
cmpsl
mov
repnz
cmc
frstor
adc
je
cmc
addr16
cmpsl
lods
pop
lahf
dec
je
adc
mov
xchg
data16
cld
and
sub
adc
inc
or
stc
fs
cli
int3
mov
push
mov
mov
mov
xchg
out
push
clc
xchg
jge
mov
nop
sahf
mov
inc
inc
sbb
inc
dec
jae
fldcw
outsb
add
out
xchg
xchg
ljmp
sbb
mov
inc
push
sbb
pushf
inc
inc
mov
mov
mov
leave
pop
xor
dec
adc
cld
mov
ret
test
inc
cwtl
xchg
sub
sarl
sub
aas
cmp
inc
arpl
mov
push
mov
adc
js
xchg
pushf
dec
dec
int
hlt
push
xor
out
push
in
int
mov
cmpsb
adc
sti
adc
dec
add
mov
lods
or
mov
mov
mov
data16
xchg
mov
inc
mov
lret
mov
out
jb
adc
incl
mov
lods
mov
daa
jns
push
ss
addr16
xchg
shl
shr
pusha
insl
xor
dec
add
pop
addr16
out
fstpt
inc
inc
or
popf
mov
and
or
out
dec
in
and
xor
mul
lods
or
fimull
pusha
dec
pop
test
testb
xlat
pop
outsl
leave
mov
mov
fcoml
mov
iret
dec
push
out
pop
ret
scas
jb
outsl
jle
inc
push
inc
fwait
xchg
std
pop
mov
popa
pop
add
pop
push
xchg
stos
subl
lock
xchg
cwtl
je
mov
sti
sub
ret
xchg
ljmp
or
mov
add
flds
add
add
lds
testl
lcall
mov
pop
mov
mov
shlb
or
sub
jle
xor
cmpsl
in
les
adc
sarb
les
jmp
icebp
inc
pop
inc
push
cmp
or
pop
mov
mov
sub
pop
out
jle
jmp
test
je
push
jl
cmp
fbstp
adc
aad
movsl
lcall
loopne
adc
mov
xor
jp
adc
gs
xor
dec
pop
cli
stos
insb
stc
jle
fwait
fmul
push
cmp
mov
mov
inc
add
cmc
call
or
dec
inc
xchg
das
ja
daa
popa
cwtl
out
dec
push
jg
stos
cmp
fucomip
fcompl
popf
pop
out
mov
pop
jl
dec
in
clc
mov
add
cld
xchg
sbb
fcmovbe
loop
add
ror
data16
mov
xor
arpl
out
das
icebp
cmp
test
adc
in
add
inc
sub
push
cmpsb
mov
cli
popa
adc
test
lret
jo
mov
jg
inc
mov
add
data16
out
sub
test
and
fiadds
out
notl
std
lds
sub
jns
inc
test
xor
bswap
call
out
cmpsl
adc
sti
push
test
push
mov
sub
cs
in
mov
rcll
inc
test
out
insl
dec
inc
push
xor
mov
mov
mov
cmp
mov
push
inc
cmpsb
mov
xchg
or
in
jo
aaa
les
push
add
popf
stc
adc
mov
mov
cli
jmp
cmpsb
and
mov
sub
aas
xchg
mov
xor
out
adc
add
xor
sbb
lret
cmpsb
adc
pop
mov
outsl
out
xor
out
out
lea
fadds
pop
inc
pop
int
cmp
jae
pop
xor
movhps
int
xchg
adcb
and
mov
or
mov
dec
mov
mov
jp
repnz
lahf
xchg
icebp
das
jmp
xchg
xchg
pop
lds
imul
stos
jle
test
pop
divb
mov
xchg
xchg
incb
pusha
add
lret
jge
rclb
movsl
pop
mov
xchg
push
fnstenv
addr16
push
jp
mov
fidivs
repnz
xor
xorl
je
aam
jge
fsubs
aam
leave
xchg
popf
cs
cmp
call
loope
pop
and
scas
xor
cmp
repnz
nopl
push
jge
push
push
mov
bound
fildl
sub
sbb
adc
xchg
daa
repnz
lahf
mov
test
xchg
cmp
mov
or
fadds
add
repz
repnz
pop
sbb
daa
pop
jg
cmpsl
out
pop
roll
sub
mov
aaa
and
mov
adc
call
fcoml
bound
dec
dec
hlt
and
test
push
in
inc
scas
push
movsl
xlat
add
roll
xchg
add
in
std
out
sahf
jae
jne
adc
das
mov
decl
cmp
mov
fwait
or
xchg
int3
pop
mov
push
pop
jo
mov
insb
loopne
and
push
mov
stos
dec
fdivl
lret
mov
icebp
ss
fsubrp
scas
popf
sti
aad
mov
testb
dec
bnd
popa
loope
insb
jmp
sbb
xor
push
mov
insb
sti
ss
sub
test
addr16
mov
inc
iret
cli
pop
into
pop
loopne
xchg
or
mov
int
jle
mov
leave
or
pop
mov
insb
push
ja
gs
push
push
hlt
js
vmovupd
add
lods
cmp
jb
loopne
inc
shl
scas
push
dec
insl
fcompl
xchg
pop
jae
pop
pusha
lcall
push
sub
es
and
loope
sbb
pusha
jmp
test
nop
mov
jbe
rclb
iret
mov
loopne
sub
mov
mov
imul
insb
mov
add
jno
arpl
ds
dec
push
xor
lods
sti
mov
cmp
add
in
out
out
jno
xor
addr16
and
bound
or
add
inc
jns
adc
xchg
dec
mov
cmpsb
jl
mov
imull
movsl
test
popa
mov
pushf
fidivs
jb
push
push
clc
push
mov
lock
dec
xchg
cmp
sbb
add
or
mov
add
inc
movsl
xor
push
outsl
and
or
lock
pop
mov
fwait
adc
push
in
jnp
mov
imulb
mov
int3
jns
std
xchg
cli
insl
sub
movsl
fdivrs
sbb
cmp
push
xchg
xchg
fidivrs
pop
rcr
sti
ret
lds
mov
mov
mov
jno
push
xchg
movl
clc
cltd
fcmovne
push
or
sbbb
dec
rorl
movl
scas
xor
in
sub
insb
add
mov
pusha
jge
or
pop
lcall
mov
inc
pushf
fnstenv
fisubrl
into
test
aas
lret
dec
sub
daa
mov
aad
fsin
and
adc
mov
cmp
cmc
cwtl
adc
dec
into
in
enter
mov
addr16
sahf
pop
pushfw
and
push
daa
sbbl
lahf
and
fmuls
cmpl
add
xor
push
jmp
mov
lcall
sbb
test
cmpsb
pop
push
push
sarb
push
xchg
or
adc
dec
push
stc
inc
or
fmul
std
xor
stos
or
jmp
inc
outsb
fadds
sub
adc
jae
or
xor
fdivrl
popa
sub
mov
mov
scas
lds
jne
jmp
xchg
push
fwait
leave
lahf
xchg
jl
punpckhwd
fcmovbe
fwait
clc
sahf
test
sbb
xchg
cmp
sub
jge
adc
sbb
cs
ja
cli
out
jnp
das
mov
jbe
stos
pop
mov
insl
fisubs
mov
fmul
psubd
call
dec
xor
pop
rclb
pop
dec
imul
out
sbb
xchg
xor
jge
cwtl
inc
ds
sub
lods
inc
sub
repz
inc
push
jns
insb
pop
xchg
push
nop
xchg
push
loop
scas
xchg
rclb
clc
push
or
icebp
sbb
ljmp
repz
push
cld
xchg
push
cmp
mov
xlat
fistl
sbbb
sub
in
ficomps
pop
and
sbb
shll
xorl
mov
inc
cmp
sub
lock
xchg
lret
mov
jbe
es
add
mov
mov
ljmp
push
cld
repz
cmp
mov
add
pop
arpl
ja
adc
mov
xor
pop
scas
shll
loop
sbb
movsb
pop
notl
orb
ds
movsb
test
fimuls
jb
enter
movsl
imul
outsl
add
adc
dec
dec
xchg
dec
xchg
out
cli
cltd
mov
hlt
push
mov
push
sbb
xchg
cmp
cmp
dec
dec
dec
lret
call
es
mov
insb
inc
imull
lds
push
inc
int3
out
shl
nop
push
add
aaa
repz
add
shr
in
inc
xor
pop
lret
mov
std
cmp
mov
pop
shrl
rcll
icebp
dec
ds
imul
cwtl
pusha
gs
divl
int3
mov
push
pop
sbbl
dec
test
std
ljmp
aad
pop
roll
and
cltd
imul
push
mov
decl
cmp
mov
dec
rcl
pop
add
mov
ljmp
xor
dec
cmp
movsb
xor
leave
mov
jl
ja
inc
lret
loopne
mov
sbb
pusha
andb
sub
test
outsb
and
cmpsl
jge
jmp
arpl
or
cmp
out
test
fildl
mov
jle
dec
and
fwait
pop
jnp
mov
das
sbb
fisubrl
pop
fs
push
negb
jmp
cli
fwait
xchg
mov
out
mov
jl
add
repz
mov
xlat
push
xchg
ror
jb
xlat
inc
pop
je
ret
pusha
into
mov
sahf
mov
rclb
push
dec
add
xchg
loope
scas
mov
icebp
jbe
xlat
xor
add
stos
in
push
lret
addb
mov
loopne
xchg
pushf
ret
popf
adc
mov
divl
sub
mov
fs
subw
outsl
jg
pop
fldenv
sbb
mov
pop
cmc
inc
fcoms
sub
hlt
ja
sarl
adc
or
mov
popl
lds
in
ret
mov
mov
lea
in
adc
mov
cmp
sub
add
jle
xor
add
cmp
pop
add
or
mov
outsl
sbb
add
xor
es
cmp
xor
scas
jb
loopne
dec
xchg
adc
push
add
shrl
or
outsb
jmp
test
aas
pusha
cmp
inc
into
adc
jecxz
testb
dec
int3
push
mov
outsb
or
ss
xor
lds
ret
xor
jp
mov
lret
leave
and
mov
iret
add
sbb
shll
add
xchg
out
and
push
push
or
or
xchg
aaa
mov
inc
insl
dec
jecxz
fidivrs
popf
std
dec
sbb
mov
vshufpd
jmp
aaa
push
gs
inc
or
les
pop
add
aad
adc
and
sar
push
push
lcall
mov
lret
dec
ds
outsl
and
sub
ljmp
adc
ljmp
lds
aam
loop
cmc
add
push
das
and
daa
pop
ja
jo
pop
xchg
cmp
int
ja
mov
call
jnp
push
adc
fadd
jge
or
sbb
lcall
xor
or
rcl
jge
jnp
daa
insl
aad
test
shll
inc
sbbl
fiaddl
mov
cmpsb
lea
mov
mov
pusha
shl
jg
aas
jl
pop
jb
cmc
pushf
loop
daa
jae
fistpl
cmp
mov
loopne
les
ljmp
jp
mov
xor
adc
adc
or
lock
call
and
add
aad
xor
xchg
fmull
and
inc
xlat
or
add
dec
mov
sbb
sbb
sarl
in
faddl
sub
and
mov
or
pusha
mov
insb
jne
into
les
push
xor
leave
das
cmp
mov
sbb
aas
xor
out
mov
stos
shlb
pop
iret
inc
adcl
push
ja
cmp
inc
outsl
mov
pop
jbe
xor
xor
out
adcb
fiadds
sub
sbb
jbe
movsb
ja
pop
rorl
sbb
jns
pop
pop
fwait
orl
sub
iret
push
jae
or
xchg
mov
mov
aas
cwtl
mov
filds
test
push
int3
stos
into
cmp
and
cmp
cs
sub
add
jp
pop
push
ja
xor
dec
xor
cs
sub
test
clc
sub
sbb
imul
xchg
jg
loope
and
dec
test
cmp
mov
fidivrl
mov
push
cwtl
loope
ljmp
add
loopne
lods
clc
xchg
inc
xor
mov
pushf
push
sub
bound
xor
ljmp
sbb
aaa
pop
xor
dec
push
add
out
mov
cmp
mov
sub
shr
leave
in
mov
bound
jg
lock
xor
mov
cld
imul
scas
xchg
inc
jmp
adc
outsb
ljmp
lods
mov
int3
icebp
mov
or
sub
jle
dec
xchg
aaa
out
out
mov
mov
or
js
cmp
push
frstor
mov
ja
out
in
fld
outsb
out
lods
adc
inc
pop
in
lret
popa
cmovs
cmp
mov
clc
mov
pop
cmpb
mov
mov
inc
lcall
add
lds
popf
fldl
lret
fisubrl
into
stos
imul
pushf
ljmp
in
imul
jecxz
adc
je
pushl
mov
dec
mov
jg
lock
repz
mov
cmp
inc
nop
mov
test
push
mov
sbb
dec
fisubl
cwtl
mov
adc
xor
mov
push
cmp
push
shll
pushf
mov
sbb
stos
cmp
xor
adc
mov
pop
mov
outsb
lcall
cmp
cmpsl
mov
inc
sbb
xor
sub
pop
mov
call
test
imul
inc
sti
xor
scas
sbb
and
pushf
jmp
jnp
stos
sbb
push
add
aas
mov
jmp
in
stos
movb
ret
and
data16
mov
mov
xchg
repz
clc
dec
mov
cmp
push
scas
and
adc
es
mov
xchg
push
mov
mov
inc
mov
jo
outsb
out
mov
xor
lock
lahf
nop
jne
ror
ja
xor
sub
xchg
and
fsubl
xlat
pop
add
mov
pop
movsb
xor
lock
lods
lods
je
push
std
out
sarl
out
jnp
mov
pop
cmp
dec
mov
pop
inc
mov
cmp
xor
mov
push
adc
mov
xor
popa
sbb
js
aad
mov
dec
cld
fstpt
pushf
shlb
pop
stos
out
jne
cmc
lods
inc
push
fwait
leave
push
pop
xor
outsl
push
jno
andb
cmp
dec
loop
popf
mov
icebp
in
addr16
test
or
orb
pushf
sub
xor
xchg
dec
mov
add
bound
mov
ja
pop
data16
stos
mov
xor
cmpsl
aam
sub
cmp
jecxz
jg
int3
out
sbb
out
mov
push
cwtl
jne,pn
loope
dec
loopne
test
lahf
aad
aas
rolb
mov
xchg
fisubrl
jmp
jmp
inc
xor
arpl
sbb
inc
dec
jmp
pushf
or
xchg
out
lods
shl
jl
ret
add
cmp
inc
cmp
ret
xchg
push
aas
test
dec
gs
mov
dec
push
lahf
out
mov
sub
sar
out
les
cmpsl
test
xchg
std
lcall
lret
adc
rcll
sbb
adc
or
fsubrl
jecxz
mov
cwtl
stos
aad
sbb
mov
add
testb
shrb
es
cmp
pop
int3
pop
arpl
adc
rcr
xlat
jg
jbe
out
int3
outsl
mov
cmp
push
mov
into
adc
push
ret
test
lea
fucom
hlt
fdivl
jp
ret
jb
int3
pop
push
lcall
nop
pop
push
cld
fnstsw
xor
sub
sbb
stc
add
jnp
mov
pusha
pop
sbb
ss
xchg
in
xor
ror
jns
loope
fsub
repnz
jge
cs
jl
mov
dec
push
pop
addr16
fidivs
mov
adc
scas
repnz
lea
je
cld
mov
cs
mov
jno
dec
mov
mov
mov
int3
out
sub
lods
mov
pop
ljmp
jle
and
add
mov
push
pop
aad
std
push
stc
bound
jae
lret
rcrb
outsb
and
ds
pop
loop
pop
pop
mov
add
movsb
ficompl
scas
jl
iret
jno
jno
fistpll
mov
and
in
inc
add
sbb
daa
or
inc
cmp
fadds
subl
roll
xlat
imul
imul
mov
push
mov
inc
xchg
add
xor
inc
xor
aam
out
lahf
fdivrs
xchg
pop
mov
sbb
xchg
test
xchg
adc
inc
aam
rclb
pop
outsl
xor
popf
push
inc
lods
jb
in
rorl
mov
jmp
sub
or
jle
hlt
nop
jl
inc
testl
and
cltd
enter
mov
test
and
lret
cli
sahf
adc
les
dec
xor
pop
mov
mov
cltd
cltd
out
sbb
xchg
inc
ds
adc
jno
inc
inc
out
xor
xor
ljmp
loop
in
sub
cmc
testb
insl
rol
loop
sbb
ret
jns
testl
cs
or
imul
or
into
xchg
and
dec
nop
pop
cmp
into
test
pop
or
das
xor
nop
das
lea
inc
push
cli
stc
fbstp
mov
jae
sub
data16
add
test
and
xchg
loop
or
mov
mov
pop
adc
mov
and
adc
in
mov
out
lahf
pop
mov
xlat
out
pop
pop
sarb
out
inc
lds
loopne
mov
xor
cmpsb
sub
shlb
jle
outsb
push
push
add
mov
out
rcr
pop
add
mov
xchg
mov
rclb
faddp
sub
test
and
js
pop
je
pop
lcall
iret
xor
pop
int
cmp
mov
adc
pop
jno
xor
movsb
clc
inc
push
pop
add
shll
or
lret
cmpsb
dec
sub
push
into
fbstp
jecxz
in
test
daa
push
push
shlb
jle
pop
mov
in
lahf
lock
outsl
xchg
dec
xor
movsl
test
stos
shll
xchg
lcall
sbbb
adc
jge
mov
sub
push
jo
cmp
pushf
in
das
das
adc
cmp
mov
in
cmp
sbbl
push
sbb
les
or
bound
cld
mov
xchg
mov
rorb
push
xchg
out
leave
out
xor
leave
sub
lods
or
dec
out
or
mov
es
repnz
push
adc
pusha
xchg
loopne
mov
mov
push
fst
lret
std
mov
stos
xor
stos
pop
sbb
pop
dec
dec
xor
mov
and
popw
sahf
scas
cmp
pop
jle
cmp
aas
xchg
cmpsl
cmp
push
jge
into
or
rcpps
or
mov
mov
xchg
clc
iret
iret
je
dec
rorb
sub
sub
aas
out
jns
push
int
nop
jl
ss
dec
cmp
push
push
pusha
scas
push
loop
cmpsl
and
xchg
sbb
stos
pop
jge
les
jbe
or
imul
cltd
into
sub
daa
mov
les
add
idivb
mov
cmp
mov
sub
pop
repnz
ljmp
sub
dec
sbb
mov
adc
and
adc
imul
and
mov
xchg
int3
xchg
or
xchg
adc
fnstenv
out
dec
js
jbe
sbb
or
dec
subb
cs
sub
arpl
lcall
test
fcompl
xor
push
mov
mov
int
adc
repz
adc
xchg
adc
push
daa
mov
mov
dec
subps
cmp
xchg
mov
pop
pop
fwait
aad
mov
je
aad
dec
js
sub
cmp
loop
adc
js
arpl
inc
jno
xor
xor
pop
pushf
cmp
mov
push
ljmp
mov
mov
in
imull
inc
jo
lock
xor
in
in
mov
push
lret
mov
movsl
cmc
sub
aad
xchg
push
dec
fwait
push
push
mov
xor
cmp
or
in
mov
nop
das
dec
mov
clc
andb
out
sub
adc
jae
jl
inc
inc
ljmp
mov
jo
sar
fcomp
outsb
inc
pop
in
lock
mov
fldl
lds
lret
insb
jnp
imul
cwtl
xor
mov
push
cmp
nopl
adc
outsb
stc
outsl
adc
sti
pop
out
out
add
push
add
loopne
into
mov
jecxz
xor
js
mov
lods
mov
test
movsl
mov
xor
aas
iret
lahf
or
add
popf
pop
stc
popf
aaa
inc
orb
clc
pop
xchg
sub
mov
dec
daa
dec
or
adc
mov
or
mov
pop
mov
sbb
lods
pusha
cmpsl
aam
std
aam
adc
or
in
daa
xchg
mov
cmpsb
in
jmp
push
lods
jmp
inc
inc
pushf
sub
pop
pop
mov
cmp
insl
inc
jl
icebp
repz
cmc
adc
daa
inc
aam
mov
lea
addb
rcl
mov
insb
cmp
inc
or
xor
ds
jle
out
adc
push
rcr
cmp
or
inc
data16
sub
cld
mov
cmpsb
test
pop
cmc
cs
push
loop
xor
movsb
out
mov
push
pop
movsl
dec
xchg
cmp
add
ret
pushl
mov
fnsave
push
jecxz
sti
xchg
imul
adc
shrb
sub
mov
cwtl
daa
lods
add
out
ficomps
ret
add
dec
mov
push
icebp
cmp
pop
mov
inc
mov
jmp
cwtl
aas
push
ja
movsl
adc
pop
fxch
out
sbb
mov
gs
push
mov
xchg
sbb
inc
test
pop
pop
out
jecxz
cmp
in
inc
mov
lds
or
ljmp
loopne
sub
mov
loope
pop
cld
out
jb
cmp
push
lock
push
out
and
les
fdivrl
js
jl
stos
jo
rclb
dec
or
gs
xor
sbb
mov
and
sahf
mov
sahf
lods
fildll
dec
inc
lock
lods
jae
fwait
fcoms
push
cmp
pushf
cmpsl
testb
jae
and
das
pop
and
fsts
mov
xor
mov
and
dec
loope
cmp
pop
xor
cmpsl
adc
repz
jl
stos
repz
mov
mov
mov
cltd
ja
mov
ds
enter
clc
scas
rcr
rolb
dec
sahf
cmc
lods
push
xchg
movsl
outsb
mov
cmp
xor
insb
inc
shlb
cld
out
jb
lods
fwait
sbb
mov
out
dec
xor
addl
push
inc
fs
jg
hlt
mov
pusha
je
adcl
mov
add
shll
cltd
stos
push
xor
xchg
pop
mov
insb
fwait
pop
sbb
push
call
sti
mov
fiadds
shlb
cmpsb
jle
aad
sahf
cmp
aam
bound
or
pandn
mov
mov
pop
nop
adc
cli
clc
mov
jnp
mov
pop
adc
aaa
and
pushw
into
sbb
mov
lods
cwtl
and
setae
ljmp
adc
cmp
jle
lods
sbb
adc
adc
jg
push
xchg
lret
iret
ret
xchg
cwtl
icebp
addr16
mov
rolb
jge
shll
push
lods
sub
dec
push
xchg
fsubr
fmull
and
xchg
push
sbb
xor
out
mov
inc
fnstsw
fldenv
xchg
jp
xchg
xor
sbb
lret
andb
enter
adc
push
test
dec
lcall
mov
or
imulb
test
sub
popf
sbb
pusha
jb
xchg
fwait
adc
and
ret
mov
push
imul
add
xor
or
sbb
rcrl
push
mov
mov
adc
add
push
and
pop
mov
inc
inc
lods
jmp
or
inc
test
std
movb
jecxz
clc
cmp
orb
loop
test
xchg
cmp
adc
jnp
push
sub
inc
das
in
jp
movsb
fcoml
int
test
cld
scas
mov
or
lock
loope
xchg
dec
call
push
rcrb
pushf
test
and
pop
mov
or
push
xor
mov
and
adc
pop
lock
xor
and
push
push
dec
stc
mov
sbb
ret
or
inc
mov
xor
sbb
cmpsb
into
jbe
test
push
or
inc
xor
or
in
cwtl
lock
xor
sub
xor
lods
js
decl
xchg
inc
jb
je
pop
push
inc
adc
sub
dec
es
imul
mov
dec
cmp
sub
std
fsubrl
add
jns
push
js
mov
adc
xor
adc
into
jno
les
mov
mov
hlt
sbb
or
incl
push
and
in
mov
jno
in
test
sbb
test
cmp
inc
cmc
test
aas
xchg
mov
xchg
outsl
adc
lret
push
test
mov
inc
out
adc
popa
xchg
or
aad
sbb
xchg
cmp
mov
clc
sbb
scas
fisubrs
cmp
das
jo
repnz
jae
dec
xchg
cmpsl
test
popa
hlt
fld1
clc
cmpsb
frstor
call
jne
add
fbld
inc
fistpll
popf
sub
sub
ret
mov
ss
sbb
mov
subl
iret
push
pop
xchg
jmp
pusha
push
scas
push
data16
imul
je
adc
adc
and
test
sbb
sub
in
fwait
es
stos
inc
mov
outsb
iret
les
inc
je
insb
mov
call
cmp
into
stos
repz
push
lret
jae
xor
jg
jecxz
arpl
roll
pop
fmull
inc
push
cld
or
iret
stc
out
int
cmc
sbb
pop
jle
mov
sbb
adc
maxps
ss
hlt
adc
into
xchg
lahf
enter
cmc
sbb
sbb
or
mov
sbb
sbb
pop
aaa
inc
pop
mull
nop
cld
mov
sub
aad
shlb
mov
pop
in
fisttpl
andl
lea
cmc
call
sub
cmp
pop
push
pusha
inc
loopne
xchg
pop
ja
lret
pop
les
or
xchg
adc
ficoml
push
add
jno
test
out
cmpsl
and
faddl
jne
xor
sbb
xor
xchg
testl
sahf
repnz
dec
jg
sub
pop
mov
out
aas
lods
mov
dec
mov
jae
repz
fmull
xor
jne
repnz
sub
inc
and
and
dec
clc
cwtl
js
and
push
inc
insl
push
iret
jl
mov
xor
aad
je
adc
fldt
test
sbb
imul
out
xor
cmp
push
pop
daa
mov
dec
xchg
push
add
lret
dec
pminub
dec
and
cmpsl
out
pop
jbe
sub
push
sbb
jecxz
adc
setb
push
push
xor
roll
mov
sbb
mov
test
outsb
jp
xchg
pop
movb
xor
inc
out
inc
dec
xchg
ja
push
movsl
bound
xchg
ja
loope
fwait
dec
divb
push
adc
cmc
inc
adc
push
rorb
jge
mov
or
btr
test
movd
rolb
push
pop
jl
pop
mov
jmp
ja
mov
iret
jbe
hlt
mov
stos
mov
push
sbb
movsl
jle
aaa
mov
jmp
nop
mov
lret
push
xchg
pop
inc
sbb
mov
jo
cmp
xchg
pop
hlt
mov
sti
add
test
fcmovnbe
add
dec
or
icebp
and
pop
fbld
jmp
push
mov
loopne
adc
cmc
dec
or
jmp
dec
or
jl
rclb
xchg
movsl
je
sahf
adc
fiaddl
test
inc
mov
mov
dec
xor
jo
mov
les
ret
xchg
cmp
fstps
adc
xchg
iret
aaa
lret
test
pop
rcll
dec
dec
andb
das
je
sub
cmpsl
gs
adc
adc
scas
add
addr16
mov
sub
fisttpll
fisttps
outsb
scas
sbb
inc
cmp
dec
lea
cmp
cltd
cmpb
fimuls
push
lods
xchg
pop
data16
rol
and
add
aam
cmp
pushf
adcl
push
push
cmp
push
sbb
push
xchg
ss
jmp
sbb
mov
mov
jp
mov
movsb
inc
jg
dec
loop
repz
movsb
sahf
xor
jmp
push
pop
stc
mov
sti
gs
pop
or
lds
hlt
fsubl
inc
mov
cmpl
inc
sbb
mov
mov
xor
cmp
hlt
leave
dec
and
dec
movb
xchg
adc
div
shlb
mov
add
mov
cltd
imull
cmc
imul
into
sub
sub
xor
lret
sbb
add
fdivs
or
daa
leave
les
and
int
jnp
cs
xor
mov
dec
sub
or
jecxz
mov
mov
pop
push
test
push
popf
cmp
add
jbe
ss
sbb
popa
mov
sbb
in
lds
scas
stos
pop
pusha
xor
lret
inc
xor
mov
mov
pop
sub
pop
out
aad
xchg
add
mov
mov
mov
int
lock
in
adc
movsl
fucomip
out
leave
mov
icebp
add
push
inc
mov
cmp
es
mov
inc
mov
rcll
sbb
xor
mov
xor
mov
call
mov
and
dec
lock
shlb
in
mov
test
movsl
adc
mull
popa
cmp
ja
sbb
lock
outsb
cmpsl
rcr
xor
lods
lea
xor
or
push
fs
test
fs
mov
xor
and
ret
pop
in
adc
fs
inc
sarb
out
push
jo
pop
daa
shr
fadds
negb
cmpsl
sti
mov
es
inc
mov
xor
cmc
ret
lahf
add
out
ret
xchg
inc
dec
or
or
xlat
mov
inc
jae
mov
outsb
sub
xor
sub
add
imul
jns
mov
mov
xor
test
es
push
mov
aad
in
pop
push
add
imul
pop
js
xchg
dec
scas
popf
push
fldcw
xchg
nop
movl
xor
bound
jae
xor
dec
jbe
outsb
dec
mov
sar
sbb
stos
push
popf
mov
les
sub
enter
fs
lahf
mov
xor
add
xchg
and
sbb
movsb
xchg
inc
pop
cmp
out
pop
out
jg
xchg
add
gs
adc
mov
jmp
push
mov
dec
subl
cwtl
push
movsl
mov
mov
add
mov
xor
adc
lret
pop
sbb
ja
jo
aaa
adcb
mov
repz
sbb
fcoml
imul
sarl
sti
mov
sar
dec
icebp
xor
lods
ja
pop
adc
cmpsl
cmpl
lahf
add
cmp
cmp
mov
call
scas
inc
repnz
lea
daa
sbb
test
xchg
pop
enter
push
sub
mov
push
push
mov
mov
adc
mov
push
sti
or
jmp
testl
mov
adc
pop
push
mov
xor
ljmp
pop
push
mov
push
mov
xor
inc
rcrl
aaa
bnd
ss
mov
lret
sub
adc
rclb
jp
sti
test
mov
dec
fcmovne
test
mov
jp
fstl
sub
and
je
sbb
das
test
lods
lret
dec
cmpl
out
fcompl
pop
loop
inc
sub
and
sti
xor
test
add
addr16
dec
jle
adc
iret
adc
insl
ljmp
push
shll
fucomi
and
jl
dec
add
int3
dec
mov
pusha
inc
pop
outsb
push
cld
fwait
mov
mov
movsb
fnsave
test
mov
cs
in
or
les
ljmp
test
adc
inc
lcall
filds
lods
loope
dec
pop
cmp
notl
frstor
lret
popf
es
pop
cwtl
and
in
pop
imul
fistps
ljmp
aad
cmp
xlat
lahf
das
dec
cmp
dec
pop
jl
stos
imul
cmp
xchg
stos
mov
mulb
aam
or
mov
xchg
shl
addl
fsts
loop
dec
or
notl
sarl
pop
jp
jb
dec
pushf
xchg
popf
mov
movsl
push
inc
jle
adc
insb
mov
lret
sub
repnz
and
sbb
jle
or
ds
sub
fnstenv
push
push
mov
std
aaa
mov
stos
push
adc
les
jp
mov
pusha
loop
mull
repz
or
lock
sub
outsl
imul
repz
push
mov
pop
jg
addb
pop
pop
enter
lahf
and
mov
fiadds
lea
jmp
adc
push
xchg
mov
xchg
mov
insb
aad
loopne
sbb
inc
call
mov
mov
push
push
inc
or
arpl
in
cmp
add
cwtl
mov
jno
test
xor
xor
rolb
insl
nop
divb
cmp
loope
lods
or
jl
into
sub
mov
and
insb
imul
push
or
or
test
or
and
adc
out
dec
popf
xchg
fdivl
sahf
pop
lds
loop
bound
add
lahf
lea
mov
adc
aam
cwtl
and
sub
movsl
fidivl
jo
shr
and
fcom
cltd
push
mov
int
in
sub
xor
out
cli
adc
mov
gs
fsubl
sub
xlat
jns
inc
push
xor
adc
les
loope
clc
imul
xchg
sbb
outsb
dec
jb
cs
sub
pop
jbe
push
fsubs
cld
sub
arpl
mov
lods
icebp
xchg
pop
push
mov
mov
fcoml
or
fdivr
sub
xchg
pop
popf
stos
sub
jbe
faddl
enter
mov
xor
jo
fprem
fidivs
lock
call
adc
sub
ret
cmpsb
xchg
lcall
sbb
leave
addr16
xchg
or
sub
lcall
push
popa
scas
mov
jns
andb
addb
inc
sbb
test
jl
pop
in
or
mov
adc
ret
and
ror
add
push
sbb
es
movsb
pop
rorb
lods
out
and
push
mov
jp
shr
aam
push
mov
mov
pop
dec
xor
mov
mov
cmpsl
in
fstps
popa
movsl
bnd
or
xor
dec
xor
lea
loope
pop
mov
jp
ljmp
leave
jp
and
mov
rcrb
lahf
popf
xor
test
test
scas
ds
cmp
mov
sub
aam
shlb
pop
push
cmpsb
bound
adc
sub
insb
ffreep
adc
xor
jge
cs
mov
xchg
ss
ljmp
cwtl
in
scas
lea
mov
fadds
mov
add
mov
jecxz
aam
xchg
sbb
sti
and
scas
ljmp
add
mov
in
movl
mov
leave
jo
xor
mov
rcrb
ja
mov
addr16
cmp
std
pushf
inc
inc
sub
stc
cmp
jle
and
cmp
outsb
adc
push
mov
shl
ret
lahf
ljmp
fidivrs
sbb
jg
jae
sar
xor
mov
mov
insb
xlat
sub
dec
popf
rcrb
mov
jp
int3
sub
stos
bnd
bnd
stos
int
out
js
call
dec
mov
je
push
movsb
push
out
in
mov
push
ja
lods
adc
bound
out
call
push
mov
or
les
cli
pop
jg
psubd
fwait
loope
int3
push
jp
lret
add
or
daa
and
out
ret
jecxz
cld
ret
mov
ljmp
push
pop
in
sub
cs
popa
scas
xor
cmpsl
cmp
add
sub
es
mov
xchg
test
or
fldt
lea
pushf
cli
push
cmpb
cmp
push
cmp
sub
iret
mov
loop
ret
lret
jecxz
inc
sbbl
movsb
into
cltd
jnp
pop
sbb
pop
cmp
sub
test
pop
fcoml
adc
ss
mov
jecxz
leave
add
repz
fsubp
cmp
lock
fdivr
jae
add
movsb
push
xchg
inc
pop
das
scas
mov
and
and
xchg
popf
dec
add
test
int
sub
repnz
xchg
and
mov
push
push
mov
jle
rorb
jae
icebp
sbb
sub
push
insl
xor
rcrl
sbb
lock
add
stos
and
jmp
dec
in
jb
jl
jmp
or
insl
xchg
sbb
mov
mov
iret
lret
add
xchg
jbe
inc
jne
sar
dec
jns
loop
sub
pop
in
push
dec
or
scas
or
clc
fincstp
sub
insl
test
imul
sbb
ret
sub
jle
inc
es
xlat
push
stc
nop
stos
adc
in
test
iret
orl
inc
add
xchg
mov
iret
bound
cmp
adc
push
xor
cmc
adc
cmc
sub
xor
adc
out
cwtl
sub
jp
inc
ret
dec
aam
cld
jb
ss
adc
pop
sub
scas
in
rcll
pop
testl
imul
rcll
popa
fisubs
rcrb
push
adc
inc
mov
inc
pop
notb
jns
call
pop
roll
jp
push
int3
xchg
out
cli
fsub
loopne
jle
sbb
xchg
xlat
or
xor
xchg
jne
popf
gs
mov
pusha
rep
jecxz
fisubrl
jnp
jo
adc
or
ja
xor
lret
inc
jge
jge
gs
in
mov
lds
mov
rol
pushf
push
fwait
lcall
rorb
sub
xchg
push
or
push
mov
in
sarb
nop
adc
out
xchg
push
sbb
popa
xchg
push
inc
and
push
xor
cmc
xor
sbb
jb
mov
pop
sbb
mov
addl
dec
insb
ss
arpl
sub
inc
call
jle
icebp
fcomps
xor
and
lret
dec
cmp
mov
xchg
add
das
stos
repnz
jne
xor
xor
sbb
mov
jnp
pop
push
or
xlat
leave
in
xlat
dec
fcompl
test
sahf
pusha
neg
test
inc
movsl
push
idiv
movsb
shlb
repnz
fsubrl
pop
inc
aaa
or
js
xchg
iret
inc
adc
xor
mov
jle
movsb
aam
insb
mov
mov
out
or
mov
movsl
jbe
and
sub
jmp
cmp
ja
push
insb
subl
fucomi
and
lea
lahf
rolb
mov
ljmp
push
mov
scas
dec
roll
sub
xlat
fcomp
or
repz
pop
test
ss
or
push
mov
popa
sub
inc
fistl
adc
jecxz
mov
aaa
jmp
fstl
mov
push
rol
pop
in
jno
insb
shll
push
dec
rcrb
sub
xor
fsubrp
mov
iret
dec
scas
cmp
adc
sub
repz
ja
xor
and
in
inc
hlt
push
ja
in
jg
into
stos
cmovl
cmp
dec
jmp
mov
pop
dec
in
pop
bound
data16
inc
mov
lea
int
cmp
fisttpll
mov
cltd
es
mov
addr16
jle
dec
pop
cmpl
mov
pop
add
adc
fadd
xchg
roll
jo
xor
out
notl
xor
dec
push
cli
aas
repnz
icebp
and
in
xchg
and
scas
and
out
data16
fwait
dec
les
roll
jns
mov
aad
pop
xchg
inc
xor
movsl
and
imul
adc
insl
test
js
xor
pop
inc
imul
test
cmc
bnd
loop
sbb
mov
push
gs
lock
add
es
jns
push
cmp
sbb
mov
in
xchg
ds
pop
xor
imul
push
and
sub
pop
push
sbb
inc
push
fsubrs
pop
jmp
or
jne
mov
mov
sub
rol
push
jno
test
movsl
test
push
jge
imulb
mov
cs
popf
mov
fldl
xchg
call
decb
inc
pop
pop
xchg
add
lock
pop
cmc
cmp
xor
add
pop
sbb
or
and
dec
testb
loope
jns
out
sub
std
mov
cltd
call
inc
fwait
loopne
mov
mov
lods
lock
push
clc
in
push
repz
bound
jmp
fstl
rcrl
mov
enter
loope
leave
aam
popa
lcall
xchg
jmp
das
mov
cmp
mov
xchg
das
cmp
xor
jle
inc
adc
sbb
aam
xor
mov
mov
xchg
in
rolb
insb
push
sub
in
fdivl
jg
call
std
and
sub
adc
and
lock
std
rcrl
aam
sub
inc
test
mov
push
mov
or
pop
loop
mov
add
fs
xor
out
jne
pop
or
dec
fldcw
rorb
dec
fucomip
out
mov
fisubrl
xacquire
pushw
add
cmp
dec
lcall
cmp
jo
es
jge
mov
mov
dec
xor
in
push
mov
and
jmp
call
jle
and
arpl
jl
xchg
arpl
loopne
push
adc
lahf
jbe
mov
shrb
lretw
in
pop
test
xor
adcb
mov
icebp
add
xor
sbb
imulb
mov
mov
push
and
loop
jge
mov
push
fcoms
sbb
test
lret
stc
lea
jnp
adc
dec
test
or
mov
push
jp
mov
mov
in
add
sub
mov
in
push
pop
call
push
add
cld
flds
push
jl
or
addr16
outsb
mov
xchg
outsl
mov
shrl
mov
adc
in
movsl
int
ss
mov
out
pushw
jg
fidivrl
ret
decl
std
call
adc
mov
sub
jle
aas
fstpl
and
loopne
daa
out
out
pop
mov
mov
popf
xchg
daa
roll
test
subb
inc
lods
xchg
adcl
xor
xorb
xor
insl
addr16
mov
outsl
add
in
cs
adc
shl
cmp
dec
loope
daa
loopne
sub
mov
mov
jle
cltd
mov
mov
xchg
xchg
push
push
addr16
fsts
push
scas
add
or
mov
loop
or
xchg
push
inc
xchg
push
dec
push
adc
dec
cmp
xchg
stos
pop
jge
sub
or
inc
jl
jnp
pushf
fwait
pushf
pop
sahf
xlat
jp
movsl
lea
jecxz
push
leave
bswap
dec
jge
dec
inc
fnstcw
cmp
in
pusha
sbb
imul
push
loopne
loop
dec
fcomps
addb
scas
cmp
jmp
jnp
and
xor
sbb
aam
cwtl
cwtl
call
mov
xchg
xchg
jge
fstpl
jecxz
test
and
lock
inc
sbb
sub
fimull
mov
adc
jb
jmp
xchg
add
outsl
imul
arpl
les
scas
inc
cmp
pop
lahf
sub
sub
pop
fisttps
loop
out
mov
out
je
jno
jp
out
mov
inc
add
jle
jle
lods
pop
in
mov
mov
mov
stos
ret
out
push
inc
sti
sub
sahf
aaa
sub
jmp
mov
add
mov
mov
xchg
and
jp
mov
jo
stc
mov
adc
and
ret
inc
popf
cs
jecxz
insl
xchg
xchg
enter
jae
fidivs
xchg
xor
movsbl
andl
jns
rcrb
std
push
popf
jl
imul
xor
dec
lcall
sub
adc
or
outsb
out
mov
mov
push
imul
sub
test
cmp
outsb
fisubl
cwtl
jo
ret
pushf
addr16
sahf
pushf
mov
fstpt
inc
jmp
push
jg
mov
daa
inc
inc
stc
pop
mull
test
dec
inc
xlat
cmp
sbb
pop
inc
pop
lea
mov
or
xlat
lds
jno
pop
test
insb
fldl
gs
inc
and
lea
lods
dec
push
xchg
shll
enter
add
xchg
or
jns
sahf
fidivl
das
es
data16
mov
sbb
mov
lahf
out
cmpsl
fimull
jb
and
in
mov
ljmp
cli
andl
cmp
inc
xchg
shlb
ret
add
sub
sahf
fs
test
sbb
out
insb
mov
fcmovu
sti
mov
mov
insl
xchg
shrl
and
into
mov
ss
adcb
xlat
pop
jbe
mov
repnz
repz
inc
arpl
stos
ret
stos
lret
jle
sub
inc
mov
repz
mov
popa
fldl
sub
push
notl
cmpb
sub
scas
push
jbe
and
dec
mov
fidivl
testl
cmp
loope
enter
pop
mov
ss
dec
sbb
xchg
lock
dec
in
leave
dec
jge
out
hlt
pop
inc
lods
pop
loope
aaa
sbb
xchg
daa
cmpsb
mov
incl
in
stos
fwait
inc
mov
test
aam
push
or
lock
mov
imul
and
lcall
lock
andl
jecxz
nop
or
mov
mov
mov
sbb
pusha
jae
or
js
iret
cmp
fimuls
and
cltd
pop
sub
inc
pushf
or
dec
or
or
jne
fcmove
hlt
into
test
xchg
or
xor
add
sti
mov
inc
rclb
push
adc
cmpb
add
movsl
in
cmp
cmpb
std
aad
test
lahf
mov
hlt
add
mov
inc
out
cmpsb
inc
xchg
sti
dec
aam
scas
xchg
test
das
out
test
mov
lods
and
dec
or
xor
test
ljmp
lods
mov
lods
cmp
or
pop
jp
arpl
repnz
aad
imul
shlb
mov
cmp
push
cltd
lods
fwait
inc
add
or
xorl
pop
fistl
pop
xlat
xchg
pop
clc
jb
push
out
or
sar
and
inc
push
mov
xlat
cmp
adc
popa
fisttpl
rclb
mov
or
mov
cmp
dec
clc
rcrl
inc
push
xchg
mov
clc
push
cmc
pop
cld
sbb
lcall
orb
in
imul
insl
xor
mov
sbb
jp
inc
fdivrs
enter
and
xor
cmp
fwait
sbbl
xor
dec
inc
inc
jne
inc
jle
xor
mov
inc
push
jbe
inc
dec
and
push
imul
push
lods
add
add
pop
stos
push
shrl
das
out
fcomp
sub
ret
rclb
cmp
iret
les
in
push
sbb
mov
nop
rcrb
sub
push
xor
out
lret
int
jb
mov
inc
scas
sti
cmp
dec
xor
mov
or
mov
dec
icebp
cmp
pop
and
into
test
pushf
negl
pop
lret
cmp
dec
push
ds
leave
ret
xlat
rcll
mov
and
mov
pop
sub
jbe
std
jne
es
ja
pop
shrb
in
mov
dec
push
mov
and
popf
or
lods
jle
lcall
sub
andl
daa
and
mov
mul
pop
andl
adc
xchg
repz
test
insb
mov
adc
test
mov
adc
cmp
into
sub
int
xor
xlat
xchg
addr16
add
sti
pop
lods
scas
out
dec
pcmpgtb
xor
cmpsl
daa
pop
arpl
jmp
add
mov
or
ret
and
add
inc
adc
adc
or
xor
into
mov
fs
cmp
push
mov
and
cmp
mov
sbb
sti
xchg
xchg
and
pop
fwait
imul
or
pop
outsb
xor
push
add
dec
add
inc
inc
xchg
pop
cwtl
mov
or
faddp
out
mov
mov
sub
cli
inc
lret
jp
mov
mov
mov
lock
int
decl
jb
dec
rcr
cmp
adc
mov
ret
or
sub
test
cmpsl
sbb
and
add
movsl
jbe
cmp
jb
movsb
mov
mov
inc
mov
mov
stos
xor
jle
and
mov
mov
lcall
repz
dec
jns
aad
mov
pop
sarl
sbb
sub
push
mov
cwtl
enter
push
es
lahf
and
popa
mov
or
addl
sub
in
aas
fcoml
cltd
push
mov
repnz
mov
loopne
or
test
sarb
scas
movsb
sarb
cmp
loop
nop
inc
sub
testb
pop
push
jbe
les
shrl
shlb
inc
inc
sub
pop
scas
or
mov
dec
and
pop
out
mov
mov
and
push
cmpl
aas
jnp
pop
mov
sub
les
decl
jb
test
mov
scas
push
adc
pop
lret
pop
cs
sub
cli
orl
inc
out
xchg
cmp
cwtl
pop
mov
test
jle
jge
sub
lret
mov
aam
add
in
xchg
adc
sub
push
lahf
xchg
dec
sub
inc
aaa
pop
adc
adc
xchg
add
mov
jns
pop
aaa
push
and
push
push
xor
dec
dec
cmp
push
mov
mov
arpl
adc
and
push
js
rclb
add
loopne
jl
or
sub
mov
fdivrs
jae
pushf
ljmp
imul
repnz
shll
and
shlb
inc
das
lcall
sti
inc
ret
jp
scas
mov
lret
mov
data16
out
hlt
jp
dec
xor
cld
imul
icebp
dec
aaa
in
mov
nop
daa
mov
cli
and
mov
or
filds
push
inc
cmp
jne
mov
das
cmc
lods
int3
lods
or
testl
sbb
addb
fldt
dec
push
loop
cmp
and
add
cmc
repz
xlat
aam
daa
mov
adc
mov
fiadds
movsl
dec
test
ss
or
mov
sbb
jle
mov
iret
test
mov
cs
push
and
fmul
push
nop
in
out
add
adc
ljmp
movsl
jp
jmp
lret
or
adc
and
stos
xchg
xlat
sahf
out
sbb
shll
insl
or
mov
scas
in
mov
or
xor
mulb
sti
cmpb
movsb
push
pop
xchg
cmp
icebp
jbe
pushf
jno
push
jno
and
pop
and
js
lret
and
movsl
xchg
fnstcw
shr
mov
sub
dec
mov
mov
ja
mov
mov
clc
push
aad
adc
mov
sub
and
call
dec
pop
mov
push
in
push
out
pop
shlb
xlat
sub
pop
inc
cltd
inc
xor
pop
inc
push
lods
and
out
jle
jno
sub
sub
pushf
aaa
aam
pop
push
push
cmp
mov
push
sbb
clc
sub
pop
sarl
jo
mulb
mov
sub
mov
xor
cmpsb
jg
pop
cmpsb
push
movsb
mov
into
jge
dec
sbb
jg
repz
add
insl
into
add
cmp
mov
bound
adc
pop
loop
out
out
pop
ljmp
das
xor
das
mov
and
sbb
fwait
js
in
dec
push
lretw
mov
xor
mov
lods
je
cmp
hlt
negb
je
xor
out
mov
xchg
shl
sbb
mov
sbbl
jmp
loop
push
mov
xlat
and
mov
cmpsb
aad
pop
jne
push
push
xchg
pop
je
mov
mov
das
leave
xchg
shl
lret
cmp
cmp
jbe
sbb
mov
xchg
orl
cmc
lret
xchg
add
arpl
dec
mov
jo
icebp
push
xchg
or
hlt
aas
dec
sbb
xor
jns
jb
adc
mov
mov
mov
stos
aaa
mov
pop
shlb
push
test
std
add
mov
insb
out
fsub
push
nop
fisubrs
add
and
sahf
xchg
into
dec
xchg
scas
jecxz
pop
inc
adc
stc
cs
sahf
push
cmpsl
popa
mov
sub
mov
push
inc
into
ja
jbe
std
cmc
dec
or
psraw
sbb
cmp
xchg
gs
inc
xchg
cli
enter
and
fucom
adc
out
xor
jne
jbe
inc
lret
icebp
mov
push
cmp
pop
pushf
shll
test
outsl
sbbl
stos
aaa
xchg
daa
or
aas
test
in
ret
xor
mov
xchg
adc
sbb
cmp
outsl
fwait
sbb
mov
xor
pop
sub
adc
in
popa
in
dec
orl
lahf
bound
lret
orl
or
test
push
cld
inc
les
imul
jge
xchg
mov
or
rolb
lret
mov
mov
inc
push
sub
arpl
movsb
int
roll
xlat
fadds
push
js
scas
movsb
cmp
clc
shlb
fistps
rolb
mov
pushf
xor
xor
insl
in
pushf
rolb
andl
daa
add
hlt
or
clc
sarl
cmpsl
mov
xchg
daa
mov
jmp
and
pop
jb
lea
leave
lock
and
mov
mov
sub
mov
leave
jno
fcmovb
js
and
scas
xchg
add
mov
aaa
mov
mov
xchg
mov
pop
out
scas
mov
dec
sub
mov
or
outsl
out
dec
out
iret
daa
mov
adc
xchg
xor
fisubrs
mov
mov
push
mov
xacquire
push
mov
push
xor
fisubl
jo
movsl
test
push
jb
add
popf
sub
xchg
inc
int3
data16
repz
dec
sbb
jns
pop
xor
gs
push
bound
enter
mov
push
push
jnp
loop
hlt
addr16
into
aas
cwtl
push
cli
out
and
fs
inc
inc
cld
in
hlt
push
adc
mov
jp
inc
pop
fwait
jmp
imul
jae
lods
les
mov
mov
nop
jle
cld
or
movsb
push
in
sbb
das
xor
jecxz
pop
lret
and
sbb
adc
mov
aad
int
jg
mov
cmp
in
into
mov
cld
jp
sub
fadd
call
mov
mov
shlb
and
fdivrl
shrb
shll
inc
mov
sbb
pop
inc
sar
jo
in
pop
xor
lcall
imul
insb
add
mov
ljmp
push
into
xor
ljmp
or
jle
dec
popa
cmp
dec
sub
lret
jb
fs
mov
lret
mov
movsl
popa
sbb
stos
bound
in
loop
xchg
shlb
adc
loopne
and
mov
push
mov
cmp
mov
out
push
and
xchg
jno
lret
mov
test
xor
push
xchg
rol
pop
push
inc
je
rclb
sub
pop
dec
outsb
or
or
inc
mov
lcall
jp
sub
mov
and
jmp
mov
sub
xchg
or
scas
aad
int3
or
xor
xchg
pushf
in
xchg
cld
jo
jle
inc
push
pushf
or
xchg
xchg
pop
out
fnstenv
pop
cmp
testl
and
cmp
lods
hlt
pop
xchg
push
outsb
orl
movsl
lods
dec
mov
cmpl
push
jmp
jl
jbe
out
fiadds
dec
xlat
lahf
add
mov
dec
lea
bound
fcomp
jmp
xchg
repnz
rorl
jl
sub
cmpl
mov
xor
aad
add
mov
lret
jns
mov
std
pushf
sahf
loop
pop
pop
inc
jge
push
roll
inc
push
mov
sti
xchg
mov
fs
sub
loopne
cltd
sub
mull
stos
mov
mov
xchg
pop
jle
sarb
fwait
dec
clc
cltd
aaa
mov
adc
pop
in
mov
insl
mov
cmp
mov
insb
xor
xchg
ja
inc
sarb
es
or
push
xlat
adc
shlb
inc
mov
jae
subb
int
cmp
mov
inc
les
dec
sbb
xchg
and
xchg
jl
add
enter
mov
ret
scas
mov
inc
inc
and
push
lcall
lock
ss
or
and
and
outsl
add
push
lods
cmp
mov
mov
xor
inc
pop
loopne
and
iret
and
add
or
cmp
add
orb
mov
adc
dec
pop
mov
mov
lds
repnz
xchg
mov
pop
rcl
pop
loop
jno
xor
shrl
arpl
int
mov
sbb
repz
push
jns
sub
inc
pop
ljmp
jmp
sub
rclb
push
pop
fisubrl
pop
fimull
xchg
test
push
call
dec
xor
jbe
sbb
xchg
js
inc
shll
mov
mov
stos
jne
cmp
and
ret
and
fcmove
add
sbb
stc
sbb
in
loop
mov
xor
add
mov
or
je
jmp
jle
lret
push
or
mov
add
mull
jmp
nop
or
frndint
xor
cmp
sub
test
arpl
cmp
adc
addr16
popa
mov
imulb
mov
frstor
adc
adc
inc
sub
mov
cmc
iret
loope
sbb
dec
and
mov
xchg
add
cmp
fnstenv
dec
ds
jne
sub
adc
cmp
rcll
push
dec
cmc
dec
pusha
mov
fs
push
inc
arpl
mov
add
jl
xor
inc
jmp
lods
mov
xor
push
negw
pop
rclb
inc
ret
outsb
test
jno
std
jno
mov
pop
ljmp
jge
jo
cmp
dec
or
fldt
dec
cltd
dec
mov
inc
mov
push
lea
into
mov
in
or
int
xchg
xchg
xor
pushf
sahf
lcall
cwtl
int
imul
daa
push
xchg
fcmovbe
nop
or
ljmp
ss
cmpsb
mul
pop
mov
daa
sbb
sbb
mov
mov
lds
ret
pop
rcr
add
pop
popa
mov
push
mov
mov
stc
jnp
mov
pushf
out
mov
pop
push
jle
scas
jbe
mov
mov
fdivl
je
pop
xlat
insl
cmpsb
push
clc
mov
stos
cmp
adc
xchg
mov
stc
jae
mov
icebp
pop
lods
fs
cmp
dec
mov
js
add
stos
and
neg
sub
adc
add
push
jns
shll
scas
gs
loop
xor
cmpsl
jne
jle
cmp
sbb
cli
js
cmc
das
out
cmpsl
nop
int3
fdivl
out
jb
push
into
pop
push
in
sbbb
sbb
test
popa
out
or
out
cmp
out
add
shlb
sub
dec
inc
xchg
mov
cmp
test
pop
mov
cmp
addr16
loop,pt
enter
imul
in
lds
in
lcall
adc
aaa
test
adc
fsub
inc
clc
cmc
pop
lds
hlt
pop
movsl
imul
mov
out
ss
sub
pop
mov
dec
arpl
and
inc
out
lret
cmp
data16
in
dec
mov
mov
into
nop
out
push
xchg
outsb
data16
pop
insb
pop
inc
nop
jne
movsl
or
lahf
aad
mov
pop
sbb
mov
mov
adc
lods
icebp
mov
into
fmull
jae
cmp
pop
das
div
mov
imul
push
mov
and
dec
mov
cmp
mov
out
rcrb
push
arpl
mov
xor
add
pop
sti
mov
hlt
aad
cmovge
insb
pusha
pop
pop
mov
mov
inc
scas
dec
movsl
mov
or
lock
mov
loop
jge
arpl
xchg
std
push
mov
mov
mov
cmpsb
and
shll
loope
xchg
and
cmpsl
mov
push
pop
idivb
sbb
dec
stc
orb
pop
dec
test
test
loop
es
and
push
gs
jge
xchg
insb
xchg
loop
shl
sbb
cltd
mov
sub
lods
push
fwait
mov
or
or
xchg
clc
popa
movsl
sbb
jb
pushf
and
pop
cmp
sub
fisubl
or
cmp
dec
das
sbb
je
movsb
daa
fmull
mov
push
js
ficoms
jmp
fidivs
xchg
rorl
cmc
lock
cmc
mov
xor
pop
xchg
push
in
and
lods
jmp
inc
inc
rorb
push
addr16
aas
mov
or
nop
imul
enter
out
js
add
cmp
je
jmp
gs
ffree
inc
jns
lds
mov
in
and
mov
adcl
and
cld
pop
aad
fidivl
aam
test
pusha
fldt
sub
inc
loopne
movsb
mov
cmp
pop
clc
xor
add
adcl
std
mov
fisubrs
fsub
cmp
int3
push
cwtl
xchg
xchg
sahf
sub
imul
add
mov
xchg
fcoms
and
iret
addr16
hlt
lahf
add
popa
pop
cmp
in
jne
enter
add
or
dec
add
out
or
xchg
div
pop
pop
jne
fadds
repz
scas
push
mov
cmpsl
dec
xchg
mov
cmp
cli
ds
cli
sbb
nop
sub
pop
icebp
pop
das
nop
outsl
aaa
stos
sbb
int
adc
and
in
or
mov
or
inc
in
pop
jmp
add
mov
push
pop
lret
hlt
inc
xchg
in
and
xchg
icebp
daa
dec
adcl
pop
inc
in
arpl
or
lods
rcll
xchg
dec
ss
adc
sbb
fldcw
test
repz
push
cmc
xor
sub
mov
cli
shlb
adc
hlt
popl
mov
outsb
aad
mov
sub
cmp
aad
testl
shlb
sbb
pop
test
dec
leave
dec
sbb
popa
outsb
push
fsubl
lock
pop
xorl
push
xor
lea
movb
xchg
clc
inc
test
jge
hlt
add
mov
jb
mov
jne
mov
loope
test
cmp
cmp
int3
test
fbld
xor
add
dec
jb
popa
mov
mov
or
push
ljmp
adc
mov
fnstenv
inc
and
cmp
inc
fstps
adc
jo
xchg
mov
dec
icebp
pop
push
movsl
ja
fstpl
fsubl
mov
dec
adc
push
jns
pop
fadds
frstor
cmp
lea
push
lods
mov
jo
mov
mov
xchg
or
mov
jnp
xchg
jbe
and
cmc
or
xor
push
aas
stos
jl
ja
rorl
int
inc
iretw
adcb
in
insl
in
inc
mov
sub
push
flds
cwtl
test
mov
add
and
lock
dec
mov
lcall
out
fldt
jl
inc
xchg
mov
pop
mov
test
jne
xchg
lcall
aad
adc
iret
push
std
jle
mov
test
lods
jle
sbb
test
sbb
mov
cmp
mov
inc
mov
adc
loopne
addl
in
nop
dec
xchg
mov
imul
xchg
jo
sbb
imul
mov
jl
cwtl
imul
sahf
cli
sub
xchg
add
addr16
mov
shr
mov
das
push
gs
mov
ss
mov
shl
cltd
xchg
push
cmpsl
pop
into
mov
movsl
jecxz
dec
loope
add
push
inc
sti
add
repnz
add
adcb
movsl
arpl
daa
mov
int3
outsb
or
stc
outsb
call
and
sub
pushf
or
xchg
add
push
mov
push
ja
inc
xlat
aaa
push
les
xor
imul
adc
in
imull
mov
pop
lods
push
into
or
add
nop
push
sub
lods
cwtl
push
sbb
pop
mov
setle
hlt
clc
pop
mov
nop
or
inc
push
pop
mov
dec
ffree
ret
aas
ja
rolb
cmpsl
sbb
fwait
add
mov
cltd
scas
xlat
pushf
adc
or
mov
mov
adc
sub
mov
dec
or
inc
add
mov
sub
cmp
adc
fs
and
stos
mov
mov
clc
adc
inc
mov
rol
mov
add
in
adc
mov
dec
jb
inc
cmp
sbb
imul
mov
add
jns
out
rcl
xchg
jle
std
mov
sub
stos
or
fldl2t
and
and
or
test
jp
pushf
outsb
mov
cmp
out
shl
fsubl
push
aam
movsl
and
xchg
mov
dec
test
sub
mov
cmc
or
leave
fldln2
ds
jle
mov
into
fs
cli
jnp
mov
stc
test
lods
ret
shll
sbbl
insl
mov
mov
or
xorb
cmp
ficoml
pop
stos
imul
and
inc
lods
xor
testb
adc
adc
mov
pushf
es
aam
and
iret
and
aad
popl
cltd
mov
addb
cmp
jle
clc
inc
repnz
xchg
out
inc
cmp
adc
cwtl
mov
adc
into
aam
jae
dec
mov
outsb
scas
mov
mov
hlt
push
scas
jle
iret
pushl
mov
ficoml
shll
inc
inc
aas
cmp
sahf
push
pop
xchg
push
rcr
arpl
test
or
call
sti
cli
jno
pusha
lods
mov
mov
ret
inc
insb
leave
adcl
push
ljmp
inc
add
adc
lret
push
jecxz
mov
push
xlat
pop
aas
lea
add
inc
lock
xorl
jbe
or
cmp
shlb
dec
sub
movsb
or
cmp
gs
movsl
mov
movsl
cmp
pop
dec
push
in
jge
divb
mov
jo
push
insl
dec
icebp
lods
hlt
ds
pop
dec
dec
repnz
pushf
adc
xchg
cmp
pop
xor
cmp
mov
and
shll
lret
lret
xchg
mov
sub
and
lods
popa
xchg
ficompl
mov
or
call
or
dec
add
jecxz
mov
ret
inc
arpl
ret
cwtl
inc
add
and
lahf
jb
push
cmpsl
cmp
sar
call
aam
aaa
xchg
ljmp
iret
ret
cmp
int3
xor
sub
rorb
ret
pusha
bound
xchg
leave
mov
dec
out
pop
inc
xchg
in
inc
arpl
push
dec
mov
icebp
mov
aam
popf
fsubr
mov
pop
out
sub
cmp
pop
inc
and
pop
mov
addr16
push
xchg
lahf
out
push
les
push
scas
add
adc
call
xor
add
jecxz
xor
xchg
fimull
fistpll
xchg
mov
int
iret
fimull
inc
dec
or
push
inc
repz
jb
xchg
add
out
stc
in
mov
adcb
mov
jns
dec
sbb
jg
push
xchg
adc
and
or
in
sub
add
imul
frstor
dec
cmc
mov
adc
jnp
jno
mov
mov
loop
pusha
sti
add
adc
js
lret
jl
es
pusha
pop
je
daa
mov
jle
mov
dec
rolb
mov
clc
mov
insl
orl
std
sbb
mov
and
sbb
push
test
push
dec
inc
xchg
sahf
cmp
mov
pushf
test
rol
push
enter
and
xor
iret
popf
iret
push
adc
mov
sub
lock
outsl
jp
pop
pushf
push
pop
mov
pusha
adc
pop
int3
out
out
lods
pop
mov
mov
mov
push
jl
mov
or
add
cmp
aaa
aam
push
push
cs
mov
inc
repz
les
in
mov
lea
gs
lret
es
push
in
mov
test
cld
dec
out
or
sub
js
dec
popf
cltd
aad
or
push
ljmp
mov
in
dec
mov
pop
imul
iret
out
or
testl
mov
dec
dec
mov
or
or
xchg
popa
sub
sub
bound
sub
fsubr
nop
pop
sbb
daa
pop
jne
push
lahf
adc
fdivrs
or
lret
xor
std
mov
mov
hlt
dec
aaa
push
mov
sahf
sbb
push
out
push
push
imul
es
mov
in
adc
adc
dec
fstpl
roll
add
add
xor
jnp
out
loop
jl
iret
mov
push
loopne
leave
nop
rorb
push
jno
lret
push
std
lret
in
mov
push
jnp
push
push
into
push
jb
xchg
xchg
ss
add
mov
out
js
xor
cmp
subb
cmp
cmp
aaa
cmc
adc
pop
imul
or
add
loop
push
jmp
pop
cmp
and
jp
dec
push
in
popf
dec
lret
mov
inc
in
cmp
push
repz
imul
lods
jnp
mov
je
inc
in
int3
fcoms
ds
imul
dec
insb
push
xchg
jle
mov
sub
flds
ja
pop
loope
bound
clc
push
and
add
or
shlb
shl
or
cmp
adc
dec
ret
adc
scas
stos
cmp
imul
mov
push
out
imul
subb
aad
addr16
clc
mov
push
sbb
gs
pop
mulb
add
cmp
aas
mov
adc
sub
inc
xor
enter
leave
push
add
or
pop
icebp
xchg
fwait
xor
rcr
push
adc
pushf
dec
stos
movsb
pop
cmpsb
and
in
inc
mov
mov
cmpsb
je
dec
jle
fcmovu
vmread
adc
mov
lds
mov
dec
inc
into
cmp
sbb
jg
or
jne
je
rcrb
gs
sti
cmp
mov
mov
iret
mov
jb
inc
push
ja
scas
popf
jmp
sbb
mov
jb
in
push
or
ja
aaa
test
ret
cmp
subb
adc
insl
xchg
hlt
lret
out
jne
dec
rorl
scas
cmp
cmp
into
and
inc
fisubrs
test
sbb
dec
jp
imul
mov
popa
jg
jns
bound
sub
imul
mov
jle
scas
mov
and
enter
mov
or
lahf
and
bound
jmp
and
mov
mov
jns
dec
push
fwait
push
and
push
ja
mov
popa
inc
rcll
aam
out
cmp
cmp
stos
xchg
mov
int
push
ljmp
call
adc
cmp
jecxz
mov
push
xor
daa
bnd
mov
mov
xchg
jno
jecxz
dec
and
push
mull
mov
sbb
bound
adc
sub
xchg
pusha
mov
jecxz
jp
jle
and
cs
es
add
jo
out
rcrb
push
test
imul
cmpsl
pop
mov
mov
imul
xchg
push
pop
dec
in
xor
ja
ficomps
shl
dec
aad
dec
cmp
lahf
dec
mov
and
test
push
and
lcall
or
inc
js
mov
push
pop
or
imul
inc
xchg
jmp
lods
roll
jne
push
gs
sbb
pop
add
push
mov
mov
and
mov
and
mov
fstps
jle
xchg
mov
fdiv
pop
out
cmpsl
nop
test
pop
xchg
insl
adc
inc
xchg
loopne
movsl
xlat
cmp
in
in
cmp
cmp
and
dec
mov
or
cmp
aas
pop
jp
ret
fimuls
cmp
cmp
xlat
or
or
aas
add
cmpb
popf
or
jl
sbb
mov
push
test
arpl
and
xchg
push
add
outsl
sub
or
rolb
inc
cmp
ss
pop
fs
stc
mov
and
mov
sahf
outsb
rorl
sub
xchg
adc
sbb
jge
push
mull
inc
xchg
jbe
push
mov
inc
mov
sbb
jae
lods
sub
mov
outsb
cwtl
mov
ss
push
cmpsl
adc
pop
popf
arpl
mov
and
sbb
repnz
icebp
roll
dec
pop
aas
lds
dec
les
cli
pop
cmc
push
stos
stos
jg
adc
sbb
cmc
div
jg
mov
mov
xchg
pop
pop
stos
outsb
fsts
xor
adc
pusha
fisttpl
dec
sbb
jg
pop
add
movsb
popa
xor
fimull
lret
addr16
mov
addr16
push
out
jnp
mull
movsb
int3
and
popa
test
and
cmp
or
dec
xchg
inc
add
in
fincstp
pop
into
lock
aam
movsl
test
mov
xor
jno
pop
add
sahf
enter
js
push
pop
leave
rorl
mov
or
lret
sub
popa
jno
insb
inc
jmp
fnstcw
add
js
inc
xchg
jne
out
cmc
xor
xor
sub
jp
jne
mov
mov
test
adc
stos
dec
into
mov
imul
jae
sub
lret
fstps
add
scas
xor
in
repnz
inc
sbb
add
rdpmc
mov
cld
mov
and
in
sub
pop
push
add
fcoml
jns
lods
xchg
out
in
orl
js
fcoms
call
mov
xor
mov
fs
jp
push
nop
sbb
cmp
xor
cmp
dec
pop
sbb
push
sbb
mov
cmc
adc
xor
addb
jb
insb
ror
mov
data16
test
lahf
add
jle
cwtl
pop
push
sub
mov
cmpsl
mov
xor
or
lea
nop
inc
or
ja
sbb
sahf
mov
mov
push
out
stos
mov
call
mull
sbb
clc
mov
xchg
dec
sub
aad
popf
ljmp
pushf
cmpsl
popa
loope
cmpsl
jnp
cmc
push
push
fcmovb
cmp
lret
pushf
add
pop
and
mov
dec
dec
jle
movb
mov
mov
dec
mov
cmp
dec
xor
cmpsl
mov
dec
mov
loopne
mov
movsb
xchg
push
pop
pop
and
mov
and
inc
xorl
test
cmp
aaa
mov
rorb
shr
add
push
rorl
jnp
xorl
scas
mov
push
dec
jmp
inc
mov
dec
test
xlat
in
jp
jo
inc
loop
dec
push
in
imul
data16
jbe
insb
and
loope
int3
das
xor
cmp
repz
iret
and
movsl
dec
or
ja
pop
ljmp
cmp
inc
ret
jmp
lahf
mov
or
dec
scas
nop
inc
ret
les
out
lods
bound
mov
push
sub
in
adc
dec
aad
enter
das
mov
adc
push
loop
js
push
or
mov
mov
mov
push
xchg
or
sarb
mov
ljmp
lock
jecxz
sahf
push
xor
mov
stos
dec
xchg
push
es
push
pop
jl
pusha
popf
jp
fwait
cmpsl
out
add
fs
xor
xchg
popa
pop
pushf
xor
lcall
cmp
in
add
lea
stos
sub
fildl
frstor
aaa
mov
lods
lock
fisubs
imul
sub
xchg
ret
hlt
pop
sub
cmp
push
pusha
call
or
lret
dec
arpl
jp
xor
adc
iret
xchg
push
mov
cmpsb
call
add
add
push
loope
pusha
sub
mov
jae
pop
mov
xchg
pushl
dec
inc
je
loop
push
mov
ja
insb
cmp
roll
jp
cmp
and
xchg
shlb
negl
and
adcb
mov
mov
xor
aas
rcr
aaa
add
lret
mov
mov
fists
mov
and
es
lea
pop
movups
hlt
fidivrl
push
dec
mov
das
in
and
cwtl
dec
hlt
leave
adc
scas
push
jecxz
dec
cltd
pop
push
add
push
notb
lock
mov
nop
jl
test
sbb
and
js
push
pusha
jno
ror
adc
push
sub
xor
add
cmp
outsl
mov
subl
mov
nop
and
xchg
cmp
sbb
rcl
pshufw
ja
loopne
out
inc
nop
add
xchg
scas
sub
shrb
scas
add
mov
scas
mov
sbb
and
roll
adc
mov
into
fimull
std
inc
lea
sbb
cmpsl
mov
test
fbld
mov
dec
nop
lods
les
and
inc
pop
add
lret
mov
es
jno
and
sbb
ret
mov
jge
out
loop
cli
je
xor
mov
fs
or
int3
add
mov
nop
add
and
and
rcl
iret
daa
sub
insl
fbld
dec
xor
call
xor
repnz
adc
stc
pop
fwait
jae
pop
fdivr
dec
or
mov
dec
push
add
cmc
test
jns
dec
sub
push
aaa
je
cltd
and
imul
data16
pop
cmp
add
mov
jo
lds
sbb
and
fs
xchg
rclb
and
or
lods
mov
rol
add
scas
popa
or
xchg
sahf
dec
ficoms
mov
adc
test
xchg
push
xchg
pop
setbe
dec
out
xchg
cmpsb
xlat
push
jns
inc
add
mov
and
jbe
xor
loope
lcall
and
bnd
test
lret
std
aas
xlat
xchg
data16
adc
cmp
xchg
inc
push
add
ret
subl
adc
inc
pop
dec
mov
ret
in
aad
jnp
xchg
jb
xchg
and
cwtl
inc
cmpsl
daa
ljmp
sub
clc
mov
or
mov
mov
jmp
sti
in
das
popf
out
shlb
das
arpl
dec
sbb
pop
xor
in
jbe
adc
test
and
sbb
das
xor
xor
mov
and
push
in
je
cmp
jne
popa
sbb
nop
push
pop
les
fistpll
sbb
inc
mov
out
lahf
cmp
int
cwtl
mov
cli
lret
xchg
in
pop
fmuls
loope
add
inc
jns
cmp
movsl
test
cmc
ja
mov
shrb
dec
popf
cli
enter
ss
xor
xor
orb
icebp
scas
add
leave
dec
lods
mov
pop
rcrl
sub
cmpb
push
sub
in
dec
xlat
xor
arpl
test
xor
push
sub
sbb
aaa
sbb
mov
or
rol
lods
lret
xor
and
sbb
xchg
test
imul
sbb
sub
push
xchg
xor
mov
or
aas
or
cmpsl
les
pop
inc
pop
arpl
fimull
mov
loope
jo
int
adc
push
inc
xchg
push
je
scas
inc
enter
and
inc
sahf
in
cmp
inc
mov
ret
inc
jmp
daa
std
ret
scas
mov
adc
pop
fucomi
in
movb
jae
int
jecxz
fmul
push
sbb
lds
adc
xor
or
add
cltd
mov
sbb
dec
pop
mov
enter
cmp
cmpsl
cmp
test
xchg
or
xchg
push
clc
repz
psadbw
mov
mov
and
dec
inc
pop
push
cmpsb
xchg
cli
jecxz
das
andl
ret
aas
pop
loope
xor
jl
mov
idivb
fcomps
call
ds
mov
loope
xlat
cmp
icebp
aas
pop
jecxz
adcb
test
sbb
jecxz
push
adc
xor
and
cltd
lods
mov
hlt
jecxz
push
fsubrs
cs
xor
mov
mov
rcr
and
sbb
gs
or
std
mov
push
lar
sub
dec
lods
push
pop
sub
xlat
push
add
push
inc
jmp
xchg
and
xor
clc
pop
fcoml
stos
movsb
xlat
mov
shll
fisubrs
push
mov
xchg
fildll
adcl
sbb
inc
add
jmp
lods
jl
cmp
mov
sub
mov
sub
roll
xor
lds
lds
inc
movl
outsl
mov
cmp
push
shl
cmp
and
and
pop
mov
mov
pop
les
mov
jnp
push
cwtl
or
movsb
lahf
pop
movsb
pop
mov
aaa
cmp
adc
mov
pop
dec
mov
xchg
cmpsb
fcmovne
aas
ss
mov
std
mov
dec
inc
std
rorb
aaa
sbb
in
in
xchg
lods
movsb
test
push
in
stc
mov
and
sub
lcall
js
fmull
cld
mov
in
sub
xchg
fistps
pop
into
das
fnstsw
cld
pop
sahf
das
mov
aaa
mov
rol
lock
out
stos
adc
jnp
inc
push
aam
shrl
push
cmp
lahf
fs
xor
stc
jle
jae
push
mov
xchg
imul
leave
mov
pop
rclb
fildl
xchg
leave
inc
nop
data16
dec
test
int
cmp
mov
jmp
icebp
out
cmpsb
jge
mov
jo
mov
push
dec
mov
cltd
push
iret
cmpsl
push
mov
enter
out
in
paddd
rol
std
xchg
sahf
sbb
inc
pop
jo
push
pop
in
std
aam
push
xchg
add
push
add
or
addr16
repnz
lds
xchg
filds
das
add
hlt
popa
stos
cmp
int
mov
mov
adc
cmp
inc
es
out
mov
sbb
sbb
sub
repz
aaa
fwait
mov
pop
shrb
imul
imul
xchg
cmpsl
dec
dec
enter
loopne
xorb
xchg
and
jb
cs
test
jae
outsl
push
jae
testb
mov
and
loope
aad
add
out
xchg
mov
mulb
cmp
mov
lock
adc
paddd
mov
icebp
dec
sbb
sbb
and
daa
cltd
cmp
fcompl
sub
orw
xor
loope
mov
xchg
test
mov
sahf
inc
shll
outsl
sub
lea
lods
lar
aad
pop
std
mov
sub
imul
shrl
lock
das
aaa
add
sti
pushf
ja
loop
pop
stc
jmp
mov
xchg
test
push
sbb
jmp
addr16
iret
add
mov
loope
lahf
idivb
lods
fs
adc
jns
sbb
jbe
mov
test
fwait
mov
pop
in
fwait
sbbl
xor
add
mov
jmp
xchg
in
outsb
es
in
fsubl
sub
fwait
pusha
ja
je
jmp
dec
js
and
mov
xor
or
or
mov
jno
pop
xchg
dec
outsb
xchg
sub
inc
xchg
or
sub
or
fdivs
dec
loope
pushf
fsubrs
xchg
adcb
out
cmpsl
mov
cmp
imul
pop
jmp
mov
mov
movsb
insl
mov
mov
aam
add
rcr
pop
outsl
les
mov
mov
push
hlt
movsl
inc
outsb
mov
idivb
cwtl
mov
or
mov
sub
loopne
adc
out
xlat
cmp
sbb
mov
adc
mov
icebp
lcall
testb
ret
adc
jg
cli
xor
mov
lods
mov
xchg
mov
dec
sbb
cmp
insl
adc
jecxz
call
sbb
push
les
popa
jmp
push
lods
sbb
dec
loopne
pmaxsw
ret
jnp
stos
test
hlt
int
lock
mov
pushf
and
sbbl
sbb
push
and
mov
out
ljmp
jns
add
or
mov
mov
ret
push
add
inc
sub
mov
xchg
fdivs
shl
mov
lods
and
cmpsb
xchg
popl
push
ret
mov
mov
jle
mov
fstl
xorb
in
mov
fldcw
sbb
jmp
mov
pop
mov
shl
lods
xor
inc
inc
jle
add
jne
xchg
and
enter
or
adc
aam
les
add
or
das
data16
xchg
dec
push
loop
xor
dec
popa
xchg
int
cli
xchg
pushf
jg
lret
xor
xchg
pushf
mov
sbb
jp
sbb
pop
xchg
mov
fisubl
mov
repz
movsb
stc
cli
push
sbb
and
je
in
pop
and
pop
pusha
mov
xchg
scas
scas
xchg
imul
in
sub
inc
xor
fcmovnbe
adc
rorb
mov
stos
dec
cmp
xchg
add
xor
lods
loopne
xchg
aad
stc
pop
inc
inc
ja
dec
aad
jge
int3
xorl
incl
lret
jge
cld
xchg
push
rol
cwtl
xor
dec
repnz
add
dec
mov
das
cmp
or
dec
cmpsb
pop
or
fiadds
jl
cs
pop
stos
xor
mov
popf
xlat
xor
mov
or
cld
sub
and
test
jae
frstor
ret
jl
in
and
and
push
fwait
daa
js
stos
or
inc
mov
add
xchg
leave
scas
xlat
dec
int3
rclb
jmp
fstpl
dec
loop
push
shrl
jb
fcom
call
sbb
and
rolb
sti
stos
and
xchg
pushf
mov
dec
fiadds
js
jmp
cmp
xor
shrb
mov
adc
fdivs
stc
mov
inc
aam
js
xor
sbb
jge
cwtl
std
popa
mov
mov
add
jne
pop
mov
imul
in
jle
pusha
scas
clc
jge
push
push
outsb
pop
lahf
lret
pop
xchg
push
cmc
xor
movsb
rcl
arpl
ljmp
shr
push
and
dec
out
in
adcb
in
push
fsubl
mov
mov
pop
rcll
mov
adc
nop
shll
mov
cwtl
outsl
mov
and
cmp
mov
jne
sbb
and
xchg
leave
mov
mov
jne
fs
xor
jb
mov
or
push
xor
ja
cld
and
xor
int
fucomi
or
add
js
adc
cmpsb
lret
xor
xor
xor
cmp
ss
xchg
inc
pcmpgtb
xchg
dec
inc
mov
cmc
out
mov
and
cli
sub
out
leave
mov
push
sbb
sub
outsb
add
jle
cmp
jns
int3
jle
sbb
and
push
add
mov
or
jmp
inc
cmp
mov
dec
loopne
dec
xchg
and
xor
cmp
add
jmp
mov
fdivr
daa
xchg
mov
mov
out
lds
aas
xchg
out
fidivl
and
repz
add
arpl
and
mov
dec
stos
cmp
pop
pop
dec
popf
movsl
inc
or
dec
loop
test
insl
in
into
ljmp
leave
mov
mov
mov
sub
jae,pt
fs
out
cmpsb
xchg
xchg
ret
out
cltd
imul
incl
cmp
xorb
xchg
pop
push
xor
mov
shlb
jl
cs
imul
clc
outsl
xor
scas
ljmp
call
adc
aad
das
ljmp
jg
xor
sub
pop
xor
in
pusha
scas
leave
mov
scas
dec
and
shlb
jbe
iret
loop
movsb
lds
fisubs
dec
or
cmp
and
xchg
movsl
test
in
loope
jae
cmpsl
inc
int
jmp
mov
dec
cli
out
xchg
sbb
repnz
push
jge
sub
inc
xor
add
adc
sbb
sub
les
or
cs
lret
into
outsb
and
sub
lock
daa
pushf
push
inc
cld
pop
cs
inc
cltd
ret
mov
mov
aas
repnz
pushf
out
aaa
movups
cmp
pop
sti
push
xchg
clc
jb
imul
jo
lock
lahf
sbb
xlat
call
push
mov
les
adc
pop
loope
mov
sub
outsb
ret
sti
mov
pop
repz
push
jae
mov
inc
mov
imul
daa
add
and
mov
rcll
mov
daa
xchg
adc
xor
dec
cmpsl
dec
insl
dec
adc
mov
add
inc
in
cmpsl
jge
rorb
lods
inc
dec
mov
sbb
fcoml
inc
sbbb
sub
and
je
rcrl
jno
pop
stc
mov
repz
xchg
sub
sti
jmp
mov
pop
dec
dec
movsl
dec
mov
out
iret
sahf
mov
mov
mov
aam
adc
sbb
mov
addr16
jne
push
ljmp
mov
jmp
jmp
add
int
xchg
out
push
mov
fadds
in
jns
xorb
sbb
pop
out
dec
fstpl
lret
lea
cmc
xchg
dec
mov
cmp
add
jge
test
add
jp
out
das
add
loop,pn
mov
dec
push
aas
sbb
ljmp
popa
or
push
mov
sahf
and
mov
subb
pop
adc
mov
lcall
and
cmp
jge
addr16
sti
cli
mov
adcl
sbb
rcr
mov
aas
sub
mov
jae
or
aaa
inc
xor
jl
jb
jbe
sub
scas
adc
lahf
lods
loop
mov
faddp
xchg
rorl
aad
vpackuswb
ja
shl
in
int3
sub
xor
rol
gs
dec
and
in
idiv
mov
in
fcompl
mov
mov
les
ljmp
mov
xchg
mov
leave
fisubl
add
mov
fildl
mov
pop
imul
aas
in
test
inc
out
dec
sbbb
cld
hlt
aad
mov
je
mov
mov
in
cmpsl
out
inc
sbb
jl
mov
iret
sub
daa
adc
mov
mov
push
cld
and
cmp
outsl
movsl
jg
sbb
sbb
stos
adc
fs
lods
repz
xchg
push
sub
pop
and
popa
addl
popf
negl
setns
sbb
stc
shll
mov
stos
imul
hlt
loopne
scas
jno
and
shll
mov
decb
mov
inc
aam
aaa
cmpsb
cmp
and
lahf
pop
mov
mov
int
imul
test
dec
xor
and
sub
pop
and
dec
pop
inc
outsb
jge
mov
les
daa
push
xchg
shll
insl
fsubs
and
fcmovnb
sbbl
std
je
std
lds
sbb
or
add
jp
push
xchg
mov
fsts
xchg
xor
or
sub
and
outsl
imull
inc
inc
ret
rorb
push
in
in
mov
cwtl
inc
mov
cmpsb
sub
or
xchg
and
sbb
jmp
iret
jo
cwtl
jo
aaa
pop
out
fs
mov
or
sbb
loope
adc
call
mov
dec
gs
popa
mov
mov
nop
je
js
gs
sbbb
sub
push
sahf
jl
mov
insl
fbld
xchg
push
pushf
lock
arpl
repnz
mov
xchg
test
rcrl
outsb
jae
xchg
in
jmp
dec
data16
inc
inc
adc
jmp
fbstp
repnz
aas
fwait
mull
lahf
mov
out
xor
fwait
xor
inc
pop
jo
pop
fstpl
add
rol
mov
mov
add
es
clc
jle
push
inc
add
jns
cmp
inc
xor
mov
sub
push
pop
inc
cmpsl
ret
jnp
push
notl
out
mov
test
cli
lods
jmp
int3
pop
iret
sbb
clc
stc
add
sub
mov
lea
popf
add
xchg
inc
mov
mov
inc
add
dec
sbb
std
and
bound
sbb
jge
insl
sub
add
fsubs
cmc
lcall
movsl
mov
inc
add
xchg
por
addb
cmp
scas
scas
mov
jl,pn
incl
mov
mov
xchg
fwait
test
dec
mov
mov
lret
ret
cmp
lret
cmp
adc
pop
jnp
shll
seta
stc
in
dec
outsl
mov
add
cmpsb
fstpl
jmp
cmpsb
mov
or
dec
mov
mov
arpl
push
mov
push
xchg
mov
sahf
test
popf
lret
mov
aam
cmc
and
daa
pop
mov
push
xchg
mov
jns
mov
test
rep
mov
pusha
sbb
loopne
push
nop
push
ss
je
push
xchg
fcoms
jle
cmp
jo
or
jne
ja
scas
test
mov
loopne
pop
pop
lret
mov
or
add
jnp
adc
push
mov
test
dec
push
add
ja
inc
pop
daa
sbb
pop
adcl
jne
or
dec
dec
push
xor
or
popa
push
mov
decb
xor
push
push
mov
lcall
bound
xchg
dec
mov
std
fs
das
pop
mov
lds
mov
mull
rol
adc
adc
dec
or
loope
daa
dec
push
pop
push
outsl
hlt
jnp
es
push
aaa
lds
and
and
sbb
fldl
and
mov
cli
and
rcrb
and
push
mov
xchg
ret
sbb
adc
xchg
ja
cmp
inc
sbb
push
and
mov
pop
std
dec
lret
push
lods
pop
lea
push
and
push
mov
and
fstl
lock
cmp
add
test
mov
pop
sbb
repnz
mov
lret
loopne
repz
cld
outsl
push
and
push
inc
mov
pop
cmp
ljmp
lret
adc
inc
sub
clc
jo
add
pop
inc
sbb
in
inc
adc
shrl
jbe
in
mov
jbe
mov
jecxz
test
xor
sarl
incb
xor
add
scas
mov
add
adc
sbb
adc
inc
dec
das
fwait
imul
cmp
sbb
add
or
and
pop
sub
push
pop
imull
sub
push
into
lret
xor
jp
push
cld
mov
push
or
sub
ss
and
jae
test
js
testb
lcall
inc
out
xor
push
fisttpll
out
test
aam
pop
repz
in
dec
mov
add
adc
mov
es
enter
mov
lods
dec
cmc
shll
jp
dec
cld
bound
testb
jg
rclb
lret
jle
cmp
pop
push
or
pop
lret
inc
mov
mov
mov
test
popa
push
gs
test
xor
or
push
insb
pop
dec
fsts
cli
scas
mov
pop
lds
and
outsb
inc
dec
insb
lods
and
enter
jp
stc
aaa
mul
inc
test
out
data16
fmull
enter
cmc
add
lea
mov
pop
lds
insl
cmc
push
mov
inc
insb
sbb
push
jmp
push
sub
dec
stos
cltd
sub
jmp
shl
pop
pusha
sti
repz
mov
pop
fldln2
xlat
push
lods
addb
cmp
incb
add
aas
movsl
xlat
mov
inc
and
ds
xchg
rcrb
mov
mov
push
xor
xchg
daa
stc
in
pop
sbb
sahf
stos
loop
xor
jecxz
in
xchg
jmp
sarb
in
and
or
push
movl
sahf
es
orl
cmc
mov
shll
adc
pop
in
add
push
xchg
sarl
cli
test
mov
rcll
and
aas
cmc
sub
push
add
adc
in
pusha
xchg
ss
cmpsl
mov
insb
or
bound
inc
das
fistl
pop
push
leave
push
lret
filds
pop
add
mov
movb
jg
arpl
mov
sbbb
decl
push
xchg
lods
jo
add
xchg
push
stc
int
in
lret
ret
push
xchg
scas
fdivs
adc
movsl
loopne
and
scas
sbb
dec
les
adc
aad
ss
xchg
gs
ss
addl
xchg
jns
loope
mov
jb
pop
outsl
sahf
sarl
dec
ret
pop
jne
xor
xchg
jg
mov
jmp
movsl
lds
inc
aad
lods
jbe
push
push
icebp
xor
jb
inc
mov
xchg
sbb
popa
test
push
andl
adc
ret
test
fst
inc
sub
test
pop
dec
mov
add
imul
out
adc
fadds
notl
dec
cmp
cli
mov
jecxz
shr
shlb
sbb
cli
adc
aad
xor
dec
sbb
sarb
roll
mov
pusha
pop
loopne
adc
sub
jl
packssdw
clc
and
out
pushf
jo
js
jns
pop
daa
loop
pop
dec
fbld
xchg
cwtl
jb
test
mov
in
cmpsl
mov
loopne
inc
jle
lock
push
lock
xlat
mov
and
es
xorl
pop
mov
lahf
sbb
int3
movsl
daa
sbb
mov
sbb
or
lret
jae
cld
aaa
or
in
pop
jae
iret
sbb
sub
test
daa
jo
mov
ljmp
and
inc
sbb
imul
cmpsb
imul
xchg
ret
and
jb
add
repz
adc
sub
popa
jno
mov
insl
cmpsl
xor
cmp
mov
dec
dec
imul
mov
push
cs
xor
popa
mov
int
dec
fld
adc
mov
push
dec
push
inc
xchg
mov
fnstcw
movl
andl
js
pop
jno
pop
xor
jecxz
jmp
cmpsb
and
sbb
mov
outsb
mov
sub
xchg
pop
jg
mov
sub
out
mov
fisubs
cltd
jo
clc
sub
add
pop
mov
cltd
pop
cmp
inc
inc
inc
mov
fstpt
outsb
cld
dec
inc
aaa
stos
sub
lock
das
lds
mov
adc
jo
mov
cmp
push
enter
aaa
icebp
adc
jl
mov
ds
push
mov
and
mov
out
cmpl
cmpsb
push
test
divb
out
lock
or
aas
out
out
fcomps
mov
add
icebp
loope
and
das
shll
sub
mov
jno
nop
cltd
xchg
pop
adc
cwtl
aas
xor
adc
sub
xor
aam
hlt
adc
fwait
xor
pushf
cli
xor
je
pop
enter
inc
into
fcoml
in
push
inc
cltd
lods
jne
stos
xor
repz
inc
clc
scas
mov
mov
test
inc
sbb
pop
arpl
dec
test
cmpl
rcr
aad
leave
push
dec
jecxz
xchg
lods
cmp
inc
fcoml
jp
cmp
xor
das
pop
jno
nop
pop
push
jae
jge
xlat
aas
in
cs
fnsetpm(287
mov
iret
ljmp
mov
push
adc
jne
cmp
dec
mov
adc
lock
inc
xchg
pop
sbb
out
sbb
push
data16
into
jno
pop
pop
mov
cltd
clc
add
adc
cli
or
push
sti
add
scas
add
jo
inc
mov
out
cmp
push
mov
fdiv
push
and
pop
jbe
xor
sub
dec
je
pop
adc
dec
fistl
cld
clc
hlt
adc
nop
stos
inc
jne
stc
shll
loopne
dec
rorb
push
imul
int3
sub
sti
jmp
mov
pushf
jl
jns
xchg
push
leave
pop
add
out
adc
mov
mov
mov
stos
adc
add
movsl
or
jno
dec
in
sti
sbb
jae
insb
adc
rep
inc
bound
jmp
lcall
mov
mulb
pop
test
and
add
aas
scas
lods
cmpsb
add
scas
jmp
lds
je
scas
in
fucomip
jne
arpl
lods
sub
clc
pop
insl
xchg
or
icebp
push
pushf
insb
inc
bound
push
inc
aaa
mov
sbb
push
sbb
mov
addb
popa
inc
add
fists
cmp
sub
dec
ficoms
pop
xor
jbe
or
popa
mov
in
mov
in
sbb
sbb
xlat
and
mov
mov
test
outsl
push
jmp
gs
xchg
lcall
repz
xchg
in
push
pop
cli
jb
sbb
jb
ja
xor
mov
mov
or
ret
push
inc
stc
and
push
sahf
js
mov
mov
aaa
hlt
xchg
fcompl
push
adc
scas
ret
cmp
mov
fbld
or
sbb
inc
out
inc
sbb
jge
sub
pop
or
in
mov
leave
cmpsb
gs
subl
rcrb
inc
push
pop
mov
mov
subps
ret
stc
and
ljmp
xchg
sbb
bound
push
fwait
or
jg
mov
loopne
push
das
sbb
xchg
in
add
xor
out
out
fwait
loope
out
out
mov
sbb
push
mov
out
popf
fwait
mov
sbb
or
movsl
mov
or
push
loopne
shrl
rorb
push
pop
das
out
mov
popa
fwait
mov
pusha
subb
or
lret
xor
xlat
mov
push
adc
mov
outsb
ja
lock
sub
fbld
out
mov
mov
ds
mov
loope
test
cwtl
loop,pn
push
jns
mov
sbb
pop
cli
addr16
data16
dec
ret
mov
sti
pushl
in
rcll
cmc
dec
aam
xchg
dec
sbb
or
rorl
pushf
mov
imul
sbb
cmp
dec
filds
or
and
inc
xor
xor
lock
imul
mov
nop
aaa
jnp
mov
push
push
pop
pop
push
js
fstps
add
gs
push
call
mov
test
mov
cmp
push
push
js
mov
mov
and
into
icebp
push
mov
lret
pop
xor
pop
leave
pop
int3
push
adc
push
adc
lret
shl
push
shlb
popa
cmc
mov
es
pop
xchg
sbbb
xchg
ljmp
syscall
call
sahf
loopne
xor
out
and
mov
mov
pop
idiv
dec
mov
cld
inc
cmp
inc
sub
imulb
pusha
mov
mov
push
cmp
cmpl
xchg
rcrl
xchg
mov
mov
loop
nop
or
mov
mov
das
loop
enter
inc
mov
les
mov
ljmp
push
pop
mov
xorb
dec
and
xlat
aas
cmp
cld
sub
imul
incl
ds
stos
or
fs
xlat
sub
push
lahf
dec
les
mov
mov
mov
in
and
out
and
in
lods
xchg
das
outsb
dec
adc
add
les
mov
fstpl
insw
pop
bound
or
loopne
shlb
push
scas
xchg
mov
lods
push
aad
mov
cld
dec
push
jns
sbb
push
xor
faddl
std
mov
cmp
adc
add
mov
mov
fnstcw
xchg
mov
ret
lcall
jle
lret
arpl
sbb
add
mov
fsubs
mov
sbb
jae
add
cmpl
push
jo
adc
ja
jge
sub
pop
and
test
ljmp
outsb
outsl
pop
outsl
dec
push
push
sub
cmp
sbb
cmpb
pop
mov
pinsrw
lds
inc
mov
sub
mov
clc
mov
mov
cwtl
incb
sbb
pop
cltd
fsubrp
or
scas
es
add
adc
add
adc
rdmsr
iret
push
mov
imul
dec
cmp
or
add
ja
dec
adc
xchg
btl
or
xchg
test
push
inc
pop
sub
das
cwtl
jecxz
pop
nop
incl
sub
lods
mov
fs
jbe
ret
cmp
insl
cmp
out
cwtl
out
cmc
and
cmpl
fsubrp
mov
jbe
gs
negl
push
test
imul
aas
int
push
bnd
jns
jge
xor
inc
pusha
mov
mov
and
push
popf
mov
or
pop
fiadds
push
jns
mov
push
or
lea
lods
xchg
pop
sbb
std
aad
call
aad
mov
jae
xor
add
cmpsl
mov
test
adc
dec
hlt
jb
and
and
jle
pop
sti
jle
push
clc
push
ljmp
cs
jmp
jp
sbb
cwtl
mov
fs
jl
pop
std
pop
sbb
clc
mov
out
clc
pop
pop
and
imul
sub
sub
and
and
daa
inc
cmp
jmp
xlat
and
sbb
pushf
push
jecxz
inc
jo
movsl
nop
pop
push
in
inc
jl
mov
dec
mov
jecxz
or
or
jnp
xor
push
xchg
ss
add
sti
test
cmp
cmp
xorl
pop
sbb
jb
xor
out
jl
xchg
in
out
add
aam
into
cmpsl
xor
adc
xchg
and
sahf
mov
sub
push
cmp
xchg
mov
xor
push
cmp
add
int3
iret
xchg
push
mov
imul
loop
aad
jl
or
out
mov
pop
xchg
xchg
rclb
push
cmpsl
push
push
sbbb
push
pop
xor
fs
inc
scas
sbb
cmpsb
xor
mov
loopne
popf
fdiv
dec
cli
ss
jecxz
push
lds
push
loope
les
mov
and
int3
fnstsw
sahf
pop
jb
rclb
cmp
xor
lods
xor
and
add
xchg
ljmp
icebp
icebp
enter
push
push
dec
pop
dec
mov
cmp
or
arpl
mov
mov
mov
jne
mov
icebp
lret
aas
imul
stos
lahf
xor
fdivrs
out
decl
fwait
inc
push
daa
xor
dec
xor
popa
clc
sti
cmp
or
addr16
mov
lock
scas
mov
push
test
inc
test
fisttpll
mov
add
xor
mov
xchg
and
xchg
adc
cvttps2pi
adc
push
mov
mulb
adc
cmpsb
cmp
sarl
inc
scas
int3
imul
xor
jle
pop
cmp
jae
loope
into
xchg
aas
sti
in
pop
fistpl
pop
pop
jae
pop
aam
push
rolb
xchg
movsb
mov
push
mov
sti
pop
sub
dec
filds
mov
dec
push
nop
push
lret
push
lret
cmpsl
sub
push
rcrb
mov
jno
jne
aaa
out
stc
add
jo
push
add
xchg
xchg
jmp
add
sbb
push
push
fsts
imul
mov
je
sbb
int
mov
mov
add
xor
jne
and
arpl
push
inc
add
sub
orl
sub
lcall
pop
nop
repz
data16
popa
repnz
out
xchg
adc
aas
push
rorl
xchg
dec
popa
iret
das
mov
sub
jne
xchg
push
sahf
aam
sub
push
call
push
mov
orb
and
and
pop
in
xchg
and
mov
add
in
cltd
pop
out
xchg
decl
mov
mov
and
jge
sub
fwait
pop
cmp
repz
clc
cmp
mov
push
mov
mov
cmpsl
mov
mov
dec
decb
inc
sub
adc
lods
sti
cs
les
loop
aam
int
push
adc
adc
xlat
subb
inc
in
sub
or
ret
rorb
dec
jno
int
pop
inc
int
enter
jmp
jecxz
dec
cmpsl
hlt
pop
jmp
in
setp
push
int
lock
xchg
std
std
and
push
pushf
mov
jno
mov
mov
test
ss
push
ss
push
jecxz
inc
or
js
inc
lock
arpl
sbb
cmp
push
and
xchg
popa
jbe
add
or
mov
xorl
pop
cmp
push
xlat
inc
cmp
repz
aam
mov
call
sbb
mov
mov
stos
xor
jmp
sbb
jbe
scas
jl
ljmp
mov
jnp
pop
rcrb
stos
and
xchg
mov
xor
arpl
ret
push
adc
lods
data16
in
arpl
outsb
int3
fsts
xlat
add
iret
inc
mov
cs
jp
sub
dec
test
pop
lcall
ret
data16
imul
and
test
jb
mov
adc
mov
outsb
pop
cmp
mov
xchg
fsts
mov
repnz
and
pop
repnz
sti
or
pop
pop
dec
sub
sbb
push
out
jg
and
movsb
jg
icebp
mov
cmp
arpl
enter
push
xor
enter
daa
sbb
pop
in
pop
icebp
mov
sub
in
fwait
add
loop
mov
jle
mov
sub
mov
stc
sub
adc
inc
inc
insb
int3
popa
push
adc
jb
btc
mov
xchg
push
clc
jmp
shl
mov
sbb
xchg
out
mov
lock
jl
scas
call
dec
hlt
fnsave
fisubrl
nop
xorl
cmpsl
inc
cmp
add
add
fwait
push
fisubrs
fs
mov
pop
sub
mov
xorl
jmp
and
sbb
inc
pop
cltd
pop
call
cmp
or
fbld
or
mov
push
ficompl
ret
mov
add
pop
test
clc
pop
mov
addr16
fcompl
int3
lcall
addr16
cld
test
and
pop
sbbl
das
xchg
mov
mov
mov
pushf
xchg
jmp
xor
xor
outsb
mov
push
push
js
xor
push
fdivl
stc
cwtl
movb
lods
stc
je
dec
cmp
jns
adc
adc
scas
std
xlat
sbb
scas
or
jae
pop
sub
test
pop
inc
fimuls
dec
pop
mov
fsts
ficompl
rcl
addr16
imull
mov
mov
stos
hlt
hlt
xor
outsl
fcoml
push
add
dec
cmp
push
jo
pop
outsb
xor
jns
or
adc
shlb
cs
lahf
aaa
mov
inc
sbb
mov
add
mov
lret
mov
fstl
xor
mov
mov
int3
bound
scas
int
mov
mov
mov
imul
mov
bound
pusha
pop
daa
mov
cmp
pop
ret
or
jbe
aam
jae
data16
mov
loop
sub
lret
cmc
pop
dec
test
sub
xchg
loope
nop
and
adc
shrb
jmp
sub
and
outsl
pop
add
cli
out
ja
je
hlt
mov
lret
xorl
gs
enter
jle
cmpsl
mov
sbb
cmp
aad
xor
popa
xchg
cs
jbe
jne
inc
icebp
pop
cmpb
ficoml
cld
xor
push
insl
pop
xchg
add
std
adc
mov
dec
xor
adc
fs
test
mov
faddl
ljmp
sahf
jmp
mov
in
or
nop
leave
xor
mov
iret
pop
dec
xor
stos
sbb
ret
lock
ffreep
add
aam
and
in
and
lds
mov
push
xor
mov
and
mov
xor
fsubs
lds
rclb
mov
out
inc
cmpsl
mov
sub
mov
mov
mov
fdivs
push
aam
ret
add
xchg
call
out
shlb
push
adc
sbb
testb
iret
dec
jne
stos
int
sub
adc
sahf
or
and
insb
mov
xorl
lret
inc
addr16
pop
das
mov
dec
inc
hlt
push
pop
sbbl
pusha
sbb
cmp
add
gs
sti
call
adc
mov
lea
out
pop
sbb
loopne
push
icebp
ficompl
mov
xor
lods
push
sti
inc
test
push
push
and
std
sbb
push
xchg
pop
jge
bound
and
leave
push
lods
ds
ljmp
mov
sbb
mov
pop
xchg
sahf
ljmp
sub
fs
jge
mov
je
call
push
xor
je
es
sbb
nop
in
xor
and
iret
repz
into
xchg
nop
ret
pop
pushf
out
lock
dec
clc
ds
repz
clc
push
mov
dec
dec
push
or
loop
dec
mov
xor
daa
shlb
shll
push
cli
mov
sahf
dec
lods
lahf
jno
fsub
dec
add
lcall
sub
sub
dec
fstl
jl
cmp
ljmp
jp
cmp
dec
sbb
popf
adc
sub
aaa
xchg
std
aam
es
gs
xchg
jae
shlb
push
cli
jae
jg
cli
mov
fbstp
inc
add
fs
fimuls
push
lods
daa
sub
rclb
or
adc
inc
add
push
cmp
mov
inc
inc
xchg
addb
std
sub
rolb
fwait
ss
lcall
sub
mov
mov
fdivrs
sahf
mov
jo
mov
leave
mov
dec
div
aam
add
or
push
ret
xchg
lods
mov
setl
adc
mov
jg
dec
sahf
clc
std
mov
adc
lret
ret
ss
bnd
pop
pop
pop
loopne
push
add
pop
pushl
mov
aad
lods
outsb
mov
xchg
pusha
int
dec
dec
dec
jge
add
ret
sub
scas
pop
sbb
idivl
test
fdivr
add
mov
push
push
pop
mov
pop
fwait
call
sahf
stos
jl
pop
insb
jecxz
and
lahf
out
cld
stos
mov
cld
jnp
or
xchg
push
dec
push
push
mov
mov
adc
in
flds
jae
mov
das
inc
aad
fucom
sub
xchg
pop
push
outsl
xor
leave
or
out
sub
pop
imul
repnz
aas
mov
pop
adc
push
mov
dec
rclb
mov
xchg
inc
rclb
sub
xchg
dec
mov
cmp
hlt
gs
fxtract
sbb
adc
push
cs
pop
pop
mov
loope
fisubs
arpl
aas
aad
rcr
mov
int
cltd
jno
loopne
add
repz
stos
pop
mov
adc
lahf
sbb
mov
movsl
int3
sbb
out
and
in
adc
stos
aam
dec
cmpsb
lcall
sbb
inc
pop
out
add
fwait
inc
in
fsubrs
outsl
sbb
pop
pop
add
dec
loope
std
or
jnp
mov
movsb
loop
les
jns
nop
inc
popl
sbb
mov
hlt
lods
lock
xor
pop
fstps
jp
outsb
push
loopne
xor
fistps
cltd
push
cmp
loop
and
bound
mov
cld
add
sub
ret
dec
fists
mov
imul
clc
out
jae
cmpsl
adc
sbb
mov
fisubs
aaa
dec
push
cmp
xchg
sub
and
in
pop
fdivrl
scas
or
cmp
daa
push
mov
lods
mov
outsb
cwtl
or
and
mov
adc
cld
xor
or
xchg
lea
rcll
and
popa
aaa
stos
pop
cmp
jnp
std
mov
xchg
cmp
push
pop
outsl
and
fwait
cmc
mov
jge
hlt
ja
adc
out
jecxz
mov
mov
pop
jmp
divb
daa
push
jle
adc
fdivrl
mov
mov
pop
mov
jp
cmp
and
jp
fistl
adc
adc
jb
xchg
negl
fcoml
incl
inc
imul
stc
xor
ret
push
iret
movsl
mov
xchg
das
stos
cmp
fs
xchg
ret
fcomp
mov
mov
loopne
mov
xchg
pop
cmp
test
mov
mov
sub
les
push
dec
mov
mov
in
and
jecxz
loope
pop
dec
int3
in
arpl
adc
cmp
je
cwtl
push
loope
sbb
lods
test
popa
fcompl
mov
add
lock
das
sub
inc
push
push
xchg
rcll
pop
sbb
jg
mov
je
aad
sbb
and
sub
push
cmp
jne
pop
xchg
sub
cs
in
mov
insb
insb
xchg
mov
add
pop
xchg
cmovge
or
add
mov
shll
cld
pop
inc
sbb
and
jle
jge
maskmovq
notl
cli
ret
fwait
popa
push
push
fsubs
in
push
bound
test
sbb
js
mov
lcall
jb
sub
lret
negb
sbb
adc
scas
fiadds
rclb
jl
roll
mov
mov
push
sbb
and
popl
sub
sbb
xlat
and
test
mov
cmpsb
cwtl
jb
out
sti
push
pop
jge
sub
jae
add
test
lods
pop
cmpsb
push
mov
or
add
cmpsb
sbb
outsb
iret
sbb
popl
loope
fisubl
jmp
mov
out
aad
inc
push
clc
add
fldcw
stc
mov
bnd
cli
mov
ljmp
fwait
jl
in
int3
loope
mov
lea
adc
or
or
xor
push
dec
inc
pop
jl
jle
inc
push
dec
cmp
je
pop
inc
data16
dec
cmp
lods
mov
cs
and
cmpsl
jne
out
mov
bnd
sbb
outsb
outsb
mov
xor
idivl
js
sub
pop
roll
cmp
cmp
out
xlat
push
fdivs
ret
nop
movsb
lock
mov
push
call
mov
dec
inc
xor
and
shr
rclb
jle
into
inc
inc
or
push
sbb
addb
insb
fistpll
sbb
dec
fsubrs
aad
icebp
or
dec
mov
lds
dec
jae
or
add
sub
das
sbb
cmp
push
sarb
jo
fldcw
add
and
and
jl
shll
push
les
daa
dec
cmpsb
cmp
shrl
aas
addb
es
das
sbb
xchg
repnz
dec
sbb
adc
sbb
sub
cmpsb
xor
lock
jnp
mov
cmpsb
lahf
mov
lods
sbb
mov
minps
push
popf
jbe
shlb
xchg
xchg
lds
and
cmp
sub
adc
cmpb
push
dec
lock
xlat
mov
sbb
fstl
jmp
mov
popa
pop
mov
mov
jecxz
shll
mov
and
inc
push
pop
andb
sbb
sub
mov
dec
cwtl
xlat
jo
and
aad
fs
out
mov
and
in
js
xchg
xor
xor
sbb
scas
lcall
testl
mov
xor
icebp
inc
mov
dec
sbb
mov
fisttps
inc
push
int
fsts
mov
sti
sub
sti
shl
push
negb
add
loope
jbe
mov
in
data16
rorb
sahf
pop
sub
imul
mov
and
adc
jnp
iret
and
add
inc
adc
mov
repz
push
dec
imul
daa
jbe
jbe
aas
mov
imul
mov
mov
pop
mov
scas
fsubrl
cmp
xchg
xor
add
lods
cmpsl
or
aam
jmp
add
stos
add
test
dec
inc
call
pop
jb
filds
popa
fmuls
xor
mov
pusha
mov
lock
dec
xchg
aad
push
icebp
add
cmp
jmp
test
inc
out
mov
les
pop
fidivl
cmc
push
jns
arpl
cmp
leave
push
mov
pop
notl
mov
and
ret
inc
add
lods
adc
mov
fldcw
dec
icebp
xchg
mov
inc
hlt
hlt
mov
test
test
jne
fidivs
and
ficompl
mov
adc
outsb
and
ljmp
jno
repz
out
sub
out
adc
adc
xor
cltd
sub
jb
cmp
out
das
mov
sahf
sbb
sbb
push
mov
je
sbb
stos
std
push
js
sbb
cwtl
lock
addb
cmc
mov
push
dec
mov
sbb
or
mov
jle
lds
or
fwait
pop
ficoms
jbe
mov
ret
xchg
push
lret
fistl
ljmp
sbb
xchg
rclb
jmp
fnstsw
jbe
arpl
xchg
mov
aas
mov
in
inc
outsl
inc
mov
add
xor
lods
cmp
int
push
insl
push
mov
loope
pushl
inc
ds
mov
ljmp
sub
mov
lcall
sahf
push
stos
pextrw
adc
ret
fs
pop
movsl
in
inc
shll
and
dec
sbb
rol
testb
mov
iret
bound
xor
fs
insb
jns
js
xchg
mov
or
mov
lea
mov
jl
inc
fldenv
in
sahf
daa
mov
dec
out
push
out
sub
cmp
push
lret
int
mov
aaa
sbb
call
subl
iret
mov
or
in
push
imull
sbb
cmp
jle
and
pop
dec
pusha
out
fildl
add
ljmp
pusha
dec
movsb
sub
dec
les
sbb
out
push
fiaddl
xchg
add
sub
iret
push
push
mov
jge,pn
dec
test
data16
pop
orl
dec
cmc
xor
in
add
and
adcb
fcmove
and
xchg
cmp
adc
and
mov
xchg
adc
xchg
jge
add
hlt
sbb
cld
shll
or
movsl
xlat
pop
pop
mov
sti
add
inc
dec
pop
test
sbb
sarb
gs
or
ja
out
cwtl
loopne
xor
push
das
dec
rol
iret
pop
loope
pop
mov
inc
pop
lods
fnstcw
push
pop
divl
cmp
lret
mov
lock
lret
pop
test
sub
sub
ud2
sbb
scas
loopne
xor
dec
push
loope
mov
imul
mov
jge
scas
or
sbbb
xor
xor
cmc
sti
cmpsl
jmp
pop
popfw
aas
fbstp
jbe
sbb
nop
xchg
pusha
xor
mov
mov
push
pop
adc
mov
inc
stos
and
jmp
add
xor
scas
jno
mov
movsb
andb
mov
std
xorl
mov
xchg
nop
pushf
addr16
int3
mov
pusha
sbb
xor
aam
shll
and
je
testb
movsb
mov
aas
add
push
add
addl
sub
xor
es
sar
out
sbb
call
aaa
xor
xorl
xchg
dec
fadds
jo
into
popf
lea
pop
sbb
bound
mov
movsb
add
aad
lret
pop
sub
dec
fsubrs
int
push
sub
test
movsl
pusha
shlb
cmp
out
iret
push
mov
xchg
dec
scas
stos
outsl
jae
cmc
nop
mov
fcomi
imul
or
mov
push
dec
push
lahf
push
push
pusha
mov
icebp
call
mov
shr
icebp
inc
sahf
mov
idivl
adc
mov
cmp
call
clc
push
cmp
pop
pop
je
add
fistps
adc
cli
stc
mov
mov
pop
ficoms
adc
mov
mov
xchg
sbb
mov
leave
mov
movsb
push
mov
test
cmp
pop
xor
aas
jns
gs
pop
insb
das
stos
pop
sub
push
jns
lcall
jge
aas
cmp
push
lea
add
in
sbb
rorb
mov
xor
dec
pop
or
mov
ds
push
xchg
dec
leave
add
mov
mov
add
xor
jnp
repz
adcb
mov
cld
pop
push
mov
mov
or
sbb
popf
loop
xchg
dec
fwait
sub
insl
icebp
lock
pop
cwtl
pop
xchg
lcall
xlat
dec
repz
jl
or
pop
xchg
adc
lock
cld
cmp
jmp
inc
clc
mov
and
xlat
popf
sbb
cmpsb
fstpl
imul
and
mull
outsl
sti
sahf
xor
pop
xchg
cs
and
arpl
xchg
int3
sbb
arpl
xchg
lods
mov
data16
xor
xchg
es
xor
in
aas
test
sbb
xorb
cwtl
pop
xor
add
stc
aad
mov
daa
test
dec
out
mov
cmp
in
hlt
and
mov
mov
movsl
push
cltd
es
aad
fiadds
stos
cmp
cmpsl
sbb
negl
je
fisubrs
sbb
je
stos
lcall
xchg
or
outsl
mov
push
out
fldl
inc
mov
mov
aad
movsl
fdivrs
jecxz
jl
pushf
ficoms
push
inc
mov
insb
lock
pop
sti
xor
sub
inc
mov
cwtl
lret
mov
mov
mov
add
insl
ja
adc
cmp
xor
sbb
shl
pop
mov
lds
push
mov
cmpb
out
cmp
cmpsb
inc
push
add
jmp
ficompl
adc
inc
push
dec
xchg
lds
hlt
imul
sbb
cltd
lock
and
fildll
jb
mov
cli
movsl
xchg
stos
push
jo
sub
bound
sbbb
sub
int
and
stc
pop
stos
nop
sbbb
in
cmp
fs
push
mov
dec
xor
xor
or
jle
scas
inc
daa
xchg
fiaddl
xchg
cs
mov
sbb
adc
jne
xchg
movlps
filds
push
inc
es
popa
jmp
mov
jne
pusha
and
int3
mov
dec
cmpsl
or
xor
pop
sub
std
insl
xlat
inc
pop
cmp
in
roll
js
xor
dec
pop
aad
movsl
insb
jo
push
mov
daa
sub
and
out
sub
test
aad
jne
repz
xor
orb
dec
sub
ljmp
pop
sub
xchg
bnd
daa
fs
scas
aaa
cmp
mov
fs
pop
sub
arpl
push
in
mov
repnz
jg
mov
pop
jnp
mov
das
leave
sbb
out
and
cltd
sub
lods
push
lea
int3
push
and
jbe
aad
add
insb
xor
inc
mov
lods
xchg
mov
shll
pop
data16
add
xor
jecxz
sub
xchg
outsl
jbe
ljmp
adc
dec
xorl
jle
push
or
sub
inc
aam
out
pop
sbb
fcomps
cmpsl
mov
gs
cmp
stc
and
mov
mov
cmpsl
pop
mov
mov
sub
stos
mov
pop
js
mov
movsb
aad
mov
loope
inc
mov
cmpsl
xchg
push
setbe
mov
and
pusha
mov
pop
cwtl
imul
push
push
sub
popa
rcll
dec
lahf
dec
cltd
popf
outsl
into
jl
icebp
lahf
lret
lea
mov
jmp
xor
jl
adc
jo
repz
int3
imul
and
loop
pop
cmpsl
addr16
sbb
add
mov
les
sbb
int
loope
push
sub
hlt
ds
pop
push
inc
mov
lds
aam
or
mov
shl
and
insl
imulb
fs
sub
fstpt
arpl
dec
cmp
shrl
jno
cmp
mov
or
fs
dec
arpl
mov
xor
cwtl
dec
leave
xchg
xchg
adc
xor
repnz
push
mov
add
or
or
leave
ret
movb
cmp
mov
in
fwait
xor
adc
popf
cld
dec
rolb
gs
push
mov
mov
jnp
iret
cmp
lret
fxam
cli
lods
push
push
sub
push
pusha
sbb
scas
hlt
adc
xchg
push
movsb
mov
mov
in
notb
and
fisubrs
xorl
pop
gs
or
shrb
leave
mov
rclb
jbe
dec
or
nop
push
stos
sub
gs
mov
jo
outsb
mov
aas
jmp
fmull
add
jge
jmp
push
cmp
insb
stos
mov
icebp
ret
test
rolb
rcpps
out
xchg
shr
clc
pop
pop
ss
je
cmp
adc
cltd
mov
repnz
dec
push
cmp
sub
mov
sbb
push
aam
and
fstpl
decl
repz
fdivrs
les
or
sti
cmp
inc
add
mov
in
movsl
lods
push
mov
dec
and
ror
das
fwait
shl
imul
lods
sbb
lret
pop
in
mov
dec
cmp
mov
js
inc
inc
stos
and
aaa
jecxz
lret
push
adc
pop
and
shrd
push
jne
and
cli
adc
lock
push
cmpsb
popf
shrl
dec
unpckhps
popf
and
pop
stc
mov
movsl
mov
dec
test
out
mov
inc
pushf
mov
add
mov
clc
imul
xorl
insl
adc
push
adc
sub
call
adc
sub
arpl
add
sbb
jp
loopne
mov
popl
push
mov
mov
pop
fs
out
repnz
mov
push
sbb
mov
cmc
adc
test
dec
mov
xchg
xlat
xchg
or
jnp
lock
mov
stc
or
pop
add
repnz
sub
add
in
loop
movsl
xchg
movsl
sub
std
loopne
lock
cs
jle
or
insb
frstor
daa
sbb
push
pop
dec
rcrb
popa
adc
sub
repnz
jbe
pop
pop
scas
cmpb
out
jmp
les
xchg
in
push
add
lret
cmpsl
inc
loop
push
incl
fcoms
xchg
in
fcmovnbe
push
scas
pop
or
inc
insb
pop
fxrstor
fidivs
test
push
sbb
inc
push
lea
insl
jno
sbb
add
icebp
xchg
dec
sub
inc
stos
je
aad
repnz
cmp
movsb
mov
mov
imul
aas
mov
mov
out
jl
and
push
adc
mov
pminsw
outsb
dec
ret
push
and
pop
hlt
mov
scas
addr16
sub
add
sbb
movsl
test
shll
clc
cs
jp
dec
add
daa
aaa
lods
add
pop
mov
cltd
sbb
repz
mov
sbb
fwait
dec
iret
adc
pop
aaa
call
leave
cmp
cld
dec
scas
loop
lock
pushf
sbb
xchg
xor
adc
inc
jmp
das
pop
stos
sbb
test
lea
or
inc
pop
lret
mov
pop
in
jmp
push
or
mov
inc
aad
push
mov
sub
sub
pop
push
cmpsb
fsubr
xchg
adc
sahf
les
or
outsl
adc
push
adcl
clc
inc
test
mov
daa
js
xchg
push
push
jb
negl
or
fisttpll
das
xchg
jle
mov
in
inc
cs
and
xchg
push
cmpsb
fxch
xchg
jp
cmp
repnz
call
mov
das
and
or
add
pop
mov
lret
or
stos
mov
int3
je
pop
sub
mov
sbb
sub
cmpsb
stos
addr16
sub
into
sub
jl
popa
movsb
repnz
shl
cmpl
dec
jle
into
shl
clc
mov
stos
mov
or
enter
push
insb
push
incl
mov
push
jmp
xchg
filds
jbe
ret
js
cmp
jg
mov
aam
arpl
incb
cwtl
jge
mov
hlt
sub
add
addr16
cltd
test
mov
imul
inc
movsb
mov
jo
test
imul
rorb
movsl
scas
jp
mov
call
mov
push
jle
jle
daa
out
ret
cmpsl
cmc
mov
subl
add
push
fsubp
scas
xchg
push
lea
imul
mov
xchg
pop
dec
adc
push
dec
stos
insl
sahf
mov
jecxz
adc
adc
daa
adc
pushf
mov
mov
andl
lea
int
addr16
cmp
test
add
insl
loope
fdivrs
mov
ds
mov
in
rorb
fs
out
or
push
not
loopne
into
mov
das
dec
imul
out
out
in
stos
into
mov
inc
ja
stos
lcall
sbb
sbb
sub
je
pop
adc
jp
lock
mov
xlat
jbe
dec
mov
out
insl
mov
push
das
inc
adc
mov
mov
rcll
sti
jge
adc
xor
or
xchg
outsb
lea
or
lods
push
pop
in
or
xor
addw
popa
enter
jno
push
jecxz
jl
sub
or
jns
push
mov
pop
andl
mov
push
xchg
test
cmp
loop
xorl
mov
scas
lds
add
mov
xchg
ret
in
not
push
lock
gs
push
int3
mov
xchg
cmpsb
xor
xlat
mov
lods
faddp
pop
pop
xchg
cwtl
add
push
push
aad
sub
aas
cmp
xchg
or
adc
add
add
and
dec
push
or
cs
xchg
dec
gs
and
fmuls
stc
cwtl
adc
add
mov
and
repz
jecxz
mov
dec
daa
sbb
leave
adc
push
sbb
mov
jo
mov
push
mov
jmp
jmp
add
xchg
or
insl
mov
repnz
mov
lods
jge
test
pop
fdivr
mov
mov
lret
xchg
decl
in
fidivl
or
int
jae
jo
in
in
daa
mov
sbb
cmpw
subb
sbb
and
testb
mov
pop
movsb
int
lock
pusha
inc
test
dec
add
dec
int3
adc
lahf
imul
ds
stos
cmp
std
adc
sahf
mov
adc
mov
jle
xlat
inc
push
mov
jge
cmp
bound
dec
ljmp
add
orl
jp
jns
push
pop
mov
cmp
ret
jns
and
fisttps
adc
xchg
jl
test
into
adc
ss
xchg
add
fcomp
inc
push
cltd
fiadds
aam
fnstcw
add
je
cltd
cltd
lods
jbe
enter
xchg
fucomi
xorl
dec
popa
add
inc
shrb
push
fwait
jbe
push
lock
movsb
mov
fidivl
cmp
into
jno
and
sahf
incb
loopne
ss
pop
out
xchg
push
stos
sub
scas
hlt
lret
jp
std
loope
sbb
push
jbe
js
push
fisubrl
jo
dec
scas
mov
pushf
pop
adc
into
mov
xchg
pop
divb
mov
or
dec
cld
mov
andb
sub
jo
mov
and
jne
bound
cmp
in
lods
mov
jecxz
dec
shrb
notb
push
xchg
sbb
mov
mov
mov
pop
lcall
mov
mov
sub
or
add
xor
ret
inc
inc
loop
lods
and
aas
popf
nop
pop
clc
push
loope
sbb
pop
nop
cmp
push
jne
orl
push
out
xchg
loop
push
push
mov
pusha
xor
dec
movsb
fbld
aaa
and
adc
dec
lea
jb
outsb
cli
insl
arpl
lock
xchg
and
fsubl
lds
push
pop
push
add
push
test
pop
ret
rcll
les
in
je
push
jge
int3
sbb
adc
sbb
xchg
adc
push
hlt
in
mulb
outsb
out
mov
inc
inc
push
xor
cmp
lock
adc
fldcw
imul
sbb
cmp
pop
push
sbb
jnp
xchg
xor
push
out
add
jo
jle
xchg
mov
adc
clc
adc
dec
dec
fldl
or
xor
ljmp
cmp
fsubl
pcmpeqb
sbb
out
add
jno
aam
mov
out
rcrb
ss
cmpsb
jmp
dec
out
hlt
push
in
add
adcl
fs
aaa
or
adc
dec
decb
push
cmp
push
sbb
or
std
icebp
adc
test
sbb
ljmp
das
sub
cltd
sbb
and
movsl
loop
xchg
pop
sbb
std
int3
push
lods
mov
in
jg
lea
jmp
movsl
mov
mov
subl
sbb
sbb
sub
jmp
das
clc
test
ja
fidivl
xchg
out
cli
rcl
sbb
out
push
out
mov
mov
cmp
dec
out
int
inc
ret
test
jae
cmp
mov
push
je
dec
lret
ss
in
cmpsl
cmp
test
xor
mov
leave
dec
dec
int3
lods
jns
xor
movsb
lods
sbbl
dec
sub
adc
mov
test
in
int
pop
and
push
pop
inc
je
jnp
insl
cltd
jne
int
jno
jg
mov
mov
cmpsl
pop
cwtl
adc
je
cmp
cmpsb
sbb
repz
aam
lods
test
in
inc
push
testb
xor
dec
adc
out
add
jo
rcrl
nop
xchg
pop
cmpsl
fidivl
jne
dec
pop
cld
dec
loop
fs
sbb
push
lock
jno
imul
clc
in
pop
insl
inc
shlb
jmp
or
or
test
in
ja
xchg
int3
push
out
or
push
sbb
call
or
sbb
and
xlat
mov
imul
arpl
mov
inc
cli
aaa
push
out
notl
repnz
aaa
fisttps
sbb
sahf
cmc
into
mov
jo
pop
movsb
mov
jl
stos
fldl
test
loopne
cli
in
sbb
mov
shll
mov
xchg
mov
xchg
push
cmp
cmp
push
icebp
jge
sub
inc
scas
push
cmp
or
jg
movsl
sbb
jmp
outsb
loopne
xchg
ret
lcall
mov
dec
xchg
mov
rcr
sub
repnz
daa
in
aad
arpl
sub
imul
xorl
dec
lods
arpl
sbb
jb
cmc
insb
out
cmp
aas
cmp
sarb
mul
add
psubq
shrl
dec
jns
dec
int3
cld
mov
dec
lds
sub
fs
push
push
adc
pushf
push
xor
movzwl
lcall
nop
into
ss
lahf
pop
sbb
sub
cltd
inc
sbb
mov
adc
pop
lea
outsl
fildll
jbe
push
or
jbe
dec
pop
test
loop
fisubs
js
jmp
add
in
dec
fiadds
sub
call
xor
hlt
divb
addr16
push
movsl
xchg
mov
leave
cmp
mov
fisubs
or
and
pop
int3
push
cmc
xchg
adc
lock
and
push
ror
and
popf
inc
fsubrs
int3
xchg
dec
cmp
ds
jecxz
pop
push
adc
call
push
cmc
in
shr
addr16
adc
stos
cs
sbb
lods
xor
adc
inc
gs
lahf
data16
xchg
fnstcw
cs
adc
call
test
add
cmpb
out
inc
mov
xchg
lods
push
pop
mov
cmp
sbb
jl
and
mov
or
repz
adc
and
inc
test
adc
sub
push
xor
push
out
adc
xor
jg
pop
mov
lock
fidivrl
pop
lods
sbb
mov
and
jge
out
les
scas
movsb
push
pop
movsb
jbe
scas
sub
jecxz
or
push
lock
sar
insl
fsubrl
pop
cmpsl
jne
je
inc
and
jns
jno
test
adc
mov
lahf
adc
repnz
jge
push
pushf
mov
mov
fs
add
stos
pop
cmp
mov
jp
fists
pop
movsb
push
cmpsl
adc
icebp
sbb
shrl
in
test
sti
lock
bound
hlt
add
push
dec
pop
push
int
mov
pop
xor
lcall
lods
scas
popf
fisubrl
push
iret
inc
cmp
jle
nop
mov
cwtl
push
test
or
sar
xchg
lock
inc
push
int
adc
and
pop
movb
pop
loope
xchg
sub
test
bound
mov
cli
sub
adc
arpl
sbb
or
jne
mov
lret
and
push
jmp
mov
mov
sti
mov
push
jle
sbb
ja
shlb
out
fcompl
enter
jl
cmp
ds
sahf
xor
std
jge
shll
mov
lods
inc
xchg
ljmp
push
mov
xor
pop
cli
pop
pop
sub
pop
pop
dec
sub
inc
lods
pop
lret
movsl
enter
cmp
cld
adc
ret
and
cmp
dec
es
inc
cs
ljmp
sbb
lea
dec
or
call
adc
xlat
test
jne
and
push
insb
cmpsb
int3
imul
cmpsb
aaa
test
adc
cmp
mov
mov
jbe
xor
pop
sub
add
inc
push
fwait
rcrl
stos
lock
mov
mov
arpl
jmp
sbb
rorb
cmp
xor
movsl
frstor
xor
lret
xlat
lcall
jp
inc
insb
mov
dec
pop
enter
push
and
mov
push
js
mov
dec
nopl
lret
jae
repz
inc
xor
out
sbb
mov
out
jae
cli
mov
icebp
sbb
dec
incl
cmc
cli
add
arpl
addr16
repnz
pop
jmp
rorb
dec
stos
inc
ret
jmp
repz
div
lret
cmpsl
out
jnp
jle
inc
and
ret
popa
pop
xchg
xchg
fidivrs
mov
sbb
fs
fdivs
addr16
rcrl
push
sbb
mov
lcall
xor
jecxz
inc
mov
cmc
mov
jl
inc
push
mov
adc
push
inc
loopne
xor
jno
sahf
jge
lea
pop
mov
mov
push
mov
outsl
iret
enter
rcrb
out
mov
sub
sarb
inc
mov
jmp
dec
xchg
jmp
and
add
push
into
cmp
jbe
xor
mov
pop
xchg
xchg
fstps
cmp
cmpsb
ficomps
dec
testb
jne
in
jle
pop
pop
out
and
fsub
pusha
pop
push
add
call
ss
stc
xor
insb
fbld
push
pop
add
aas
loopne
push
lret
rorb
fildll
inc
cmp
lret
xor
stos
pop
jg
mov
out
loopne
mov
into
scas
mov
repz
fwait
or
xlat
xchg
or
xchg
sub
imul
and
add
or
or
cmpb
xchg
stos
sub
aas
add
out
push
and
jge
imul
cmpsb
mov
lret
xor
bound
push
out
push
xchg
jl
pop
cmp
das
mov
push
daa
lods
out
cmp
pop
popf
dec
or
jmp
in
test
sahf
or
loop
cmp
cmp
mov
rcl
pop
movsl
jo
mov
hlt
jbe
loop
and
fbstp
enter
pop
add
sub
mov
fcmovnu
clc
pop
repnz
cltd
movsb
jle
pop
xchg
push
cld
fnsave
ja
outsb
jecxz
inc
and
int
cmp
and
lcall
adc
arpl
test
dec
mov
scas
orb
pop
ja
mov
xchg
xor
outsl
xchg
out
mov
mov
ret
ret
inc
out
popf
cmpl
fiadds
jge
popf
cmp
mov
fadd
inc
lea
in
mov
push
xor
add
sahf
aam
mov
lods
icebp
insl
jl
jo
cmp
jp
sub
mov
daa
insl
dec
jmp
or
mov
xchg
fs
sbb
stos
daa
outsl
sub
pop
mov
mov
push
cmc
loopne
xchg
push
shll
stos
ret
pop
scas
jg
inc
or
dec
mov
jp
and
out
stc
out
lahf
cmp
inc
lods
fdivrs
fisubrs
jno
sbb
shll
das
cli
in
xchg
push
test
pop
cmp
add
in
and
mov
in
mov
mov
xor
mov
enter
pop
ljmp
xlat
cwtl
dec
dec
push
outsb
fisubs
jg
pop
ficoml
pop
push
mov
xor
jle
inc
xchg
xchg
mov
int
cmp
rolb
mov
pop
repnz
dec
jae
jmp
fisttps
mov
push
inc
je
dec
leave
lods
xchg
andb
fisttpl
pop
and
push
lahf
shll
sarl
jge
jns
mov
mov
movsb
jle
cmp
shll
les
out
or
repnz
jno
sbbl
inc
jne
pop
jbe
lock
shrb
dec
mov
imul
lods
andl
adc
inc
cmp
xchg
mov
push
jl
xor
mov
fwait
inc
sub
sbb
inc
fs
mov
xchg
daa
movsl
pusha
or
pop
pop
mov
mov
mov
shrb
sbb
sub
jle
sbb
inc
jns
cmpsl
adc
lahf
mov
add
bound
js
lcall
dec
or
adc
scas
shr
clc
pop
in
sub
mov
mov
push
in
and
jp
and
popf
in
in
xlat
adc
icebp
mov
sbb
popf
cmp
insb
and
pop
shll
add
sbb
aaa
or
pop
push
nop
mov
push
lea
and
mov
rcrl
lret
iret
mov
cltd
push
and
aam
test
pop
int3
inc
cmp
fisttps
sub
adc
ret
mov
jp
or
test
or
dec
sbb
repnz
xor
xchg
xchg
aad
jo
adc
sub
cmpsl
fs
in
repnz
addr16
fbld
out
cmp
dec
xlat
mov
popf
lret
push
sahf
mov
mov
fadds
pop
sti
sbb
femms
dec
or
sti
dec
inc
jo
push
insl
lea
push
mov
orb
fwait
mov
sub
xchg
cmc
enter
mov
ds
adc
enter
pusha
mov
or
xor
test
sarb
jp
out
cmpsl
xor
idivb
cltd
jecxz
jb
dec
sahf
xchg
mov
pop
fcmovb
mov
dec
mov
dec
cmpsl
push
std
addl
lcall
mov
sub
aam
in
lcall
or
mov
and
out
xor
pop
sub
lret
cwtl
push
enter
jb
cmp
pop
mov
cmpsb
jmp
imul
into
or
orl
xchg
or
rorl
fistpll
aad
enter
in
lret
and
mov
xor
fcomps
mov
push
and
aam
mov
stc
xor
mov
int3
jmp
addr16
sub
sub
sub
push
subl
mov
incb
fidivs
faddl
in
repnz
nop
iret
addb
repnz
dec
leave
mov
add
fwait
push
rorl
int3
mov
stos
lods
fsubs
cmc
mov
lcall
rclb
xchg
rcl
data16
stos
push
repz
push
ss
loopne
ret
push
lret
xorb
out
adc
mov
and
inc
adcb
xchg
sbb
sbb
aas
jbe
xchg
jns
and
bound
jae
or
sub
jae
sbb
pop
mov
repz
inc
add
push
sub
ja
into
or
or
gs
lahf
lods
push
mov
jnp
and
dec
jb
add
mov
dec
mov
push
xchg
pop
push
aas
push
jl
iret
pop
sbb
adc
xchg
in
sbb
jbe
insb
repz
pushf
sti
js
sbb
mov
xchg
cmp
int3
inc
popl
je
sarb
icebp
or
in
push
ss
mov
xor
pushf
push
jp
jecxz
mov
je
leave
xor
xchg
cmp
dec
lahf
inc
mov
cmp
loope
das
mov
std
addl
xor
shrl
dec
xlat
in
gs
movsl
int
add
or
sub
xchg
jb
inc
fstpl
stc
sbb
adc
out
in
xor
nop
dec
dec
roll
iret
cmp
out
data16
sbb
pop
in
fdivl
cmp
fisubl
or
mov
pop
mov
xor
inc
inc
mov
mov
adc
in
js
adc
xchg
orb
cmp
pop
dec
fnstcw
mov
push
adc
xchg
mov
jb
pop
ds
lds
call
aas
movsl
movsl
mov
inc
add
mov
fstps
jg
pop
pop
ret
mov
mov
ret
adc
lods
add
rep
sbb
sbbl
add
sub
lret
mov
adc
cmp
jae
lcall
inc
dec
or
sbb
lret
inc
movd
fldl
xchg
xor
xchg
xchg
jne
cmpsb
std
jno
out
mov
cli
sub
mov
mov
dec
outsl
aas
lods
in
mov
arpl
jp
and
pop
fldcw
add
dec
xchg
dec
aad
adc
mov
adc
mov
ret
dec
les
xorl
loope
sub
popf
mov
push
sbb
js
sub
insl
lock
and
aas
sarb
rclb
mov
pop
jmp
std
add
in
insl
into
sub
sub
in
xchg
out
aas
cltd
xchg
lahf
rcr
lret
xchg
push
mov
and
iret
call
push
ljmp
ja
shlb
jne
xor
cmp
adc
xor
outsb
rorl
ret
cmp
repz
pop
mov
popa
mov
idiv
cmp
fists
shlb
inc
jge
enter
xor
cmpsb
jo
lret
dec
mov
lret
mov
cmp
cltd
shlb
inc
push
cmp
push
inc
imul
xchg
xor
push
or
mov
sti
sub
xor
cmp
xchg
fnstcw
sbb
repz
dec
rol
or
jne
test
sbb
pop
into
inc
test
cltd
add
decl
push
dec
outsb
fs
ss
pop
add
or
push
mov
pop
rol
add
jp
fdivrl
lds
pop
iret
add
arpl
fstl
ljmp
mov
cmp
xchg
sbb
xchg
cmpsl
loopne
xchg
js
ret
cmpsb
das
int3
test
fldt
int3
icebp
out
rcrl
xor
iret
adc
das
jo
xchg
inc
in
lret
outsb
repnz
sbb
test
add
mov
mov
aad
das
add
cmp
ds
jno
fndisi(8087
sub
pop
roll
fs
fisubrs
ja
mov
dec
insl
pop
imulb
lods
fldl2e
repnz
sbb
jbe
outsl
lahf
fnsave
movsl
jg
push
insl
push
in
in
adc
cmc
test
lahf
stos
movsb
iret
mov
or
mov
jg
je
mov
popf
mov
ficoms
mov
sbb
xor
cmp
std
jae
aam
push
jmp
mov
push
test
js
xor
leave
sbb
add
sbb
rcll
xchg
arpl
or
push
pop
aad
mov
sub
mov
add
adc
xchg
push
sub
xchg
mov
ret
ja
jmp
push
pop
adc
stc
jle
into
xchg
jns
mov
popf
dec
test
bound
dec
sub
stos
xor
es
outsb
leave
je
sub
fsts
pop
cmpsl
pop
mov
adc
jno
pop
xchg
shll
and
fidivrl
movsl
jecxz
ret
jge
or
outsb
jmp
inc
cmpsb
mov
push
scas
cmp
enter
daa
lret
push
sbb
xor
in
pop
loop
sub
push
popa
les
push
imul
add
sub
shlb
and
repz
jb
pop
mov
and
sbb
insl
push
adc
xchg
xchg
xor
or
cmp
es
push
adcl
pushf
xor
lock
mov
cltd
adc
xlat
test
dec
fstl
pop
push
add
mov
pop
inc
cmc
cmpsb
pop
shlb
xchg
imul
adc
mov
test
mov
jmp
stos
decl
xor
fwait
push
dec
jmp
std
and
push
dec
adc
sub
hlt
addb
aad
jnp
aam
jecxz
rcll
xlat
mov
jno
sbb
loop
out
rcr
movsb
mov
jae
das
lret
mov
hlt
jb
addr16
push
xchg
shll
jb
out
fisttps
inc
cmp
icebp
mov
fldcw
xchg
mov
cmp
jl
pop
iret
lahf
adc
mov
inc
icebp
pop
dec
dec
fs
xorl
xlat
pop
mov
cmpsl
sub
mov
jae
dec
jae
pop
pop
pop
out
xor
jae
dec
fsub
loopne
adc
xchg
shll
mov
repnz
cmpsl
jecxz
vpshuflw
cmp
notl
sub
xchg
mov
pop
cmpsl
inc
insb
push
lock
std
dec
fnstcw
sub
fisubl
test
mov
and
imull
and
gs
popf
ret
push
adc
ss
cld
jl
pop
mov
dec
jmp
inc
push
mov
lds
mov
enter
insl
call
les
mov
push
test
ret
pop
mov
xchg
lods
cld
jne
adc
cmp
sbb
jle,pt
int
out
or
rolb
cmp
and
add
movsl
aam
push
xor
pop
cmp
repz
push
mov
xor
mov
movsl
dec
mov
movsl
test
dec
sbb
clc
sbb
fists
cmc
in
pushf
push
pusha
rolb
cli
adc
fsubrs
hlt
jnp
xor
and
inc
mov
in
sbb
dec
lret
fcmovu
shl
adc
imul
pusha
fsub
loopne
ds
and
or
xor
ds
and
bound
cmp
repz
sub
shlb
hlt
xor
mov
repnz
ret
xchg
push
and
dec
jecxz
pop
mov
jo
pop
pop
push
adc
fwait
jbe
in
push
pop
shl
loopne
or
test
ret
shll
pop
inc
arpl
repz
push
hlt
sbb
push
out
mov
shlb
pop
jns
xchg
pop
stos
or
push
fisubrs
xlat
add
pop
hlt
andl
in
inc
jecxz
cmp
add
hlt
pop
or
pop
fidivrs
fiaddl
push
imul
in
mov
push
sub
rolb
adc
outsl
je
lret
pop
incb
and
xchg
jp
or
or
adcb
sub
jno
cmp
rorl
xchg
sub
sub
push
enter
xor
xchg
mov
lahf
dec
push
shrl
clc
and
push
scas
stos
hlt
in
hlt
add
xchg
mov
outsl
rcrl
sub
stos
std
testl
push
test
test
pop
fnsave
push
inc
inc
mov
mov
jle
addr16
jns
gs
xor
pop
and
mov
or
xor
mov
push
pop
fistps
js
mov
jnp
mov
sbb
addr16
xchg
cmp
fbstp
dec
addr16
sub
add
push
lods
shll
pavgb
aad
shll
pop
arpl
pop
xchg
mov
pop
jbe
xchg
dec
inc
xor
mov
jecxz
add
pop
movsl
int
rcrb
adc
mov
pop
adc
popf
lahf
in
pop
ja
lcall
or
sbb
mov
test
push
mov
gs
gs
add
and
adcb
mov
popf
cmc
adc
sbb
lods
mov
lods
mov
cmp
xchg
fistl
push
mov
mov
repz
push
push
loopne
pop
xorl
mov
inc
xor
pushf
fsubrl
adc
push
daa
xchg
mov
mov
push
andl
addr16
cmpsb
mov
ret
inc
loop
ja
jmp
cmc
mov
push
cmp
fs
inc
inc
push
bound
add
clc
out
ja
push
test
rol
enter
or
and
stos
dec
jmp
xor
mov
mov
sub
pop
jg
cltd
adc
stos
stc
dec
add
gs
hlt
push
insl
jo
shlb
push
cld
test
inc
lret
pop
out
out
cmpl
cmp
jnp
add
adc
mov
xchg
popf
lret
loop
loop
iret
popa
mov
xchg
cmpsl
repnz
jnp
push
in
mov
jb
add
das
jnp
jne
jg
les
jecxz
int3
push
popa
jge
xchg
out
pushf
sbb
aam
dec
out
int
and
push
sbb
lahf
jg
sbb
jb
adc
daa
cwtd
push
sub
inc
adc
mov
fisttpl
xchg
cmp
mov
test
mov
dec
xchg
out
adc
insl
or
rclb
pop
pop
xor
out
scas
mov
push
jl
imul
cli
dec
push
mov
xchg
mov
lea
fimull
ds
inc
sahf
fdiv
adc
fdivrl
arpl
xchg
pop
xchg
cmp
or
std
add
xlat
sbb
xchg
cmc
pop
push
xchg
test
pop
pop
leave
or
sub
cwtl
cmp
decl
xchg
fnstsw
ret
cmp
adc
adc
aam
sbb
pop
repnz
div
mov
loop
in
adc
push
push
push
test
add
mov
pusha
add
sub
out
das
adc
pop
push
mov
insl
xor
sbb
cmpsl
daa
es
test
dec
and
in
mov
pop
ljmp
xchg
push
loop
and
inc
lds
call
or
adc
or
fstl
mov
sub
hlt
mov
jo
pop
popf
mov
inc
and
bound
std
sbb
push
or
and
jle
mov
dec
add
pop
and
mov
das
std
lret
jecxz
jae
push
or
inc
orb
out
xchg
add
lret
sub
popf
movsb
pop
pop
jp
cld
in
or
pop
test
in
inc
pop
test
mov
scas
mov
pop
inc
inc
aaa
dec
jns
mov
nop
lahf
jbe
sbbl
sbb
outsl
mov
in
shll
sbb
ja
cmp
flds
cmpsb
stc
mov
lods
js
shll
sbb
mov
rorb
fiadds
push
out
jge
push
inc
push
mov
arpl
adc
inc
cli
sub
add
andb
iret
jbe
sti
subb
fistpll
dec
dec
sub
andl
pop
add
push
loopne
test
lret
mov
xor
adc
insl
add
jl
int3
in
rcrl
cs
pop
cli
mov
lcall
xor
test
cmpsb
ss
sub
hlt
sahf
sbb
dec
aaa
mov
iret
dec
in
sti
sub
mov
mov
lret
lahf
dec
test
ret
push
push
inc
in
lods
push
cmp
jl
cmc
out
mov
or
xchg
dec
add
ret
addr16
test
inc
jle,pn
lods
inc
push
sub
sti
and
gs
push
ret
xor
adc
jbe
ja
cmp
lea
addl
enter
xchg
mov
fsubrl
sub
cmpsb
mov
fldl2t
ds
ror
jp
cmc
ficoml
int
cmp
roll
mov
hlt
jmp
outsl
fdivs
mov
aad
faddl
pop
mov
jmp
jecxz
pop
leave
das
cmpsl
mov
dec
in
sti
lea
inc
mov
adc
icebp
fwait
cmp
push
adc
bound
nop
sbb
test
bound
inc
mov
subb
xlat
fcoms
jae
dec
pop
fs
sbb
cmpsl
outsb
adc
inc
jns
clc
stos
xchg
gs
sub
movsb
jle
lods
adc
mov
cwtl
dec
mov
out
cs
ds
lods
pop
lods
lock
xchg
mov
ret
pop
xor
movsb
das
in
inc
test
je
movsb
or
movsb
cmpsl
mov
mov
jl
add
fstps
js
jecxz
mov
xchg
aas
fisubrs
and
push
loopne
int3
loopne
out
cltd
push
lcall
jo
scas
cmc
push
add
enter
cmc
add
leave
popa
movsb
xchg
fs
cmp
stos
fisubrl
mov
into
popa
push
dec
clc
mov
pop
pop
inc
pop
and
fidivl
xlat
pop
orl
imul
cmpsb
pop
cmp
pop
xor
ret
push
jle
adc
pop
stos
inc
fistl
mov
push
dec
push
jae
or
mov
pop
xor
cmp
ds
rol
pop
xor
ja
jmp
push
test
dec
sti
push
mov
nop
jbe
jmp
sahf
repnz
arpl
lret
mov
dec
shll
test
pop
jp
pop
ja
xor
adc
into
pop
xchg
dec
lods
dec
or
gs
xor
sbb
testb
sbb
cmp
or
iret
clc
shll
aam
xchg
loopne
ds
mov
shl
outsl
shlb
popa
mov
sbb
shrb
clc
pop
cmpsb
jne
addr16
lcall
jns
sbb
add
jnp
scas
or
inc
lea
repz
jnp
xchg
dec
mov
mov
adc
call
pop
fnstenv
or
push
sbb
push
lret
add
out
ds
sbb
fcoml
inc
mov
test
xchg
sub
aaa
rcr
ss
xor
sahf
lods
lcall
pop
addr16
aam
icebp
daa
xchg
adc
mull
jbe
in
or
cmpsb
mov
jecxz
mov
jge
ret
insb
enter
daa
idivl
sub
push
jnp
lea
mov
cmpb
jo
shlb
out
pop
daa
mov
lods
testb
pop
fbld
clc
pushf
cltd
adc
sbb
dec
inc
nop
jg
mov
jg
daa
in
subl
fistpll
cmpsb
push
and
fnstenv
rcrl
xlat
xor
jecxz
std
sub
divps
rcr
and
xorl
jae
pop
push
xorb
mov
dec
or
xchg
sti
jno
mov
jge
mov
into
mov
cmpsl
xor
int3
push
inc
mov
pop
scas
xor
pop
mov
insb
cmp
mov
rclb
adc
test
mov
or
fwait
lret
pop
mov
repnz
out
test
mov
lds
and
nop
cmpsl
movsb
fwait
cld
inc
loopne
push
sub
xor
mov
stos
mov
lcall
inc
inc
sti
mov
mov
sub
fwait
xor
mov
dec
fidivl
out
xchg
adc
adc
in
lock
ret
push
mov
mov
inc
ret
jo
inc
jns
cmp
xchg
cmp
idivl
xor
xlat
int
add
call
mov
or
out
mul
in
xchg
or
xchg
cmpsl
pushl
pushf
and
scas
pushf
loop
cs
sub
mov
sbb
bnd
int3
mov
and
int3
cwtl
adc
cmp
jo
ljmp
xchg
sub
jno
lret
sbb
mov
and
jmp
fsubrs
jecxz
insl
clc
dec
or
scas
xor
aad
or
ja
movsl
fldenv
pusha
sbb
xchg
int3
lcall
call
jns
out
dec
or
fstpl
sarl
pop
lahf
insb
or
cmpl
pop
push
icebp
cmp
xor
push
lret
call
dec
js
xchg
sti
jmp
adc
jne
add
nop
mov
js
xor
sbb
mov
sbb
jne
jle
rorl
xchg
inc
cmp
jge
adc
repnz
pop
enter
push
cmp
pushf
in
mov
shll
xchg
jg
popf
sbb
loop
int
sbbl
sbb
inc
inc
les
jae
pushl
cmp
fucomip
mov
sub
xor
inc
loopne
cmovp
stos
pushf
lahf
and
mov
test
test
sbbb
mov
and
sbb
cmpl
pop
movsb
and
subl
sub
hlt
in
in
fwait
sahf
mov
aad
cmp
xchg
mov
or
aaa
cmpsb
aas
mov
mov
add
cmp
and
call
xchg
cmp
hlt
push
push
cltd
xor
lahf
add
fcoms
js
cmp
jmp
mov
cmp
xor
push
aas
xor
xor
data16
inc
in
ljmp
adc
sub
dec
cmp
scas
mov
rcrl
jb
jne
sbb
lea
xor
clc
mov
add
jmp
mov
cmpsl
fucomp
shld
insb
cld
sarl
jp
pusha
push
fwait
shlb
pop
fcompl
in
cmpsb
aad
repnz
jbe
inc
int3
aas
mov
mov
push
push
hlt
aas
cs
or
jge
nop
adcb
inc
rcl
mov
push
arpl
and
mov
in
lods
movsb
nop
addr16
icebp
gs
sbb
stc
and
lock
adc
addr16
cmc
xorl
cwtl
pop
mov
popf
scas
sbb
mov
imul
or
sbbb
dec
push
rorb
fistpl
xor
and
sarb
mov
ret
dec
or
cmpsl
scas
pop
xchg
dec
dec
fbstp
mov
mov
mov
xor
push
mov
fwait
rol
test
adc
sbb
lret
int
int3
jbe
popf
or
pop
sub
mov
lea
or
in
out
in
in
mov
mov
mov
mov
shll
lret
shll
mov
add
jns
adc
add
mov
imul
lret
jg
adc
fnsave
adc
cld
cwtl
sub
lds
popl
out
imul
imul
add
aas
or
jnp
push
jmp
lods
add
mov
rcr
outsl
adc
roll
mov
lret
leave
add
push
cli
popf
push
sbb
ret
ret
sbb
and
jl
jb
mov
loopne
repz
hlt
inc
push
pushf
push
mov
cmp
pop
cwtl
sbb
aaa
repnz
mov
scas
icebp
add
mov
popa
stc
or
cmp
cmp
pusha
sti
addr16
xor
xor
jmp
mov
sub
add
xchg
mov
inc
dec
fdivrs
mov
fcmove
jle
andb
pop
dec
rorl
or
call
and
dec
mov
mov
pop
scas
xchg
lret
or
inc
pop
dec
jl
das
notl
faddl
push
inc
leave
xchg
xchg
or
jne
pushf
jno
and
inc
ret
addr16
cmp
mov
das
inc
jl
insl
pop
xchg
shrl
and
push
sub
mov
xlat
mov
lock
ja
lret
and
push
psllw
das
ret
and
cmpsb
ljmp
fadds
and
pop
imul
out
das
fs
in
fiaddl
jp
and
insb
test
cmp
ds
repnz
pop
jne
popa
mov
test
xchg
in
inc
or
sbb
lret
test
adc
sub
sub
jp
pop
jne
sub
adc
stos
es
push
push
jmp
lock
les
push
test
or
in
jae
ljmp
xchg
movsb
or
addb
mov
stos
lock
int
cmp
jl
sbb
dec
movsb
jmp
inc
xor
mov
add
clc
mov
mov
mov
movsl
out
fadd
push
pop
mov
mov
fs
outsb
add
xor
cs
xchg
and
pop
outsb
mov
insb
jecxz
lea
push
repnz
in
icebp
les
pop
pand
enter
int
into
inc
aad
pop
mov
push
dec
pop
stos
push
movsl
pop
pop
out
in
ret
lods
orl
ljmp
jno
in
into
sti
xchg
dec
out
std
loop
xchg
add
imul
push
fcmovne
in
sub
in
roll
insl
mov
jge
add
divl
outsb
test
mov
mov
xchg
and
inc
xchg
fidivrs
cwtl
bound
dec
icebp
adc
inc
addr16
rorb
dec
dec
test
jo
dec
lret
jnp
or
rcl
or
andb
sarb
xchg
stos
or
rolb
lds
add
int3
fstl
xor
mov
xchg
movsl
mov
add
push
adc
lahf
cld
push
sub
dec
lret
call
xor
add
mov
xchg
inc
push
fnstenv
mov
sub
jp
xor
pop
shl
jno
push
push
nop
and
sbb
mov
add
mov
adc
insl
scas
les
and
mov
adc
nop
pop
mov
and
pop
jbe
push
push
rol
call
sub
inc
sbb
jne
int
sub
xor
icebp
es
push
jae
or
cmp
inc
push
jnp
mov
push
mov
ljmp
jecxz
call
sub
dec
test
daa
insb
jmp
fildl
push
push
cmp
repnz
sbb
or
fiaddl
outsb
push
xchg
push
xchg
daa
pop
icebp
jecxz
pop
push
jmp
loopne
push
push
mov
pop
popa
cmp
fsubrs
adc
out
fwait
insb
std
xor
mov
jg
adc
or
jl
rcll
icebp
cwtl
or
es
mov
mov
jne
mov
sub
pop
sbb
xor
pop
test
adc
inc
sti
daa
ficomps
dec
xchg
mov
xchg
lahf
pop
jge
sbb
push
cmpsb
sub
sub
inc
push
and
push
xor
sbb
sub
loopne
cmp
loopne
mov
std
push
xor
test
lods
jl
out
mov
xchg
xchg
xchg
adc
jns
popa
mov
out
inc
xor
mov
call
inc
cs
stc
out
mov
jmp
jecxz
call
and
dec
lock
pop
mov
adc
sub
mov
or
or
das
scas
lods
pushf
or
out
jnp
and
inc
imul
mov
lods
sarl
sub
jg
pop
arpl
dec
sbbl
cld
fistpl
mov
fiaddl
jge
pop
pop
imul
xlat
or
rolb
adc
das
or
inc
xchg
jb
jp
popa
sbb
scas
xor
mov
icebp
in
repnz
xchg
sbb
inc
int
xor
sar
pop
and
ss
decb
adc
aas
rol
mov
push
mov
das
icebp
xor
pop
int3
mov
and
das
dec
clc
aas
sbb
adc
cs
dec
stc
xchg
adc
mov
and
mov
xchg
add
cld
test
fwait
loopne,pt
rolb
les
sarl
sub
mov
iret
imul
fmulp
or
pop
sti
addb
pop
push
lret
aaa
mov
lods
fistps
xor
mov
push
push
lea
int3
es
in
push
inc
fiaddl
push
sbb
xchg
cmp
adc
mov
inc
pop
push
scas
jge
inc
int3
outsb
xchg
pop
fcmovnu
test
test
ljmp
cs
xor
add
out
mov
cmc
push
mov
inc
outsb
cmp
test
jp
addb
pop
mov
shrl
dec
pushl
shrb
filds
insb
jle
mov
push
add
cltd
pop
outsl
cli
dec
enter
jne
adc
popa
in
xchg
pop
add
mov
ret
push
mov
leave
punpckldq
pop
je
loope
and
sbb
insb
in
adc
inc
cmpsl
in
rcll
dec
jg
sbb
or
cmp
jmp
in
stc
mov
sarl
and
mov
jnp
pop
xlat
dec
das
lods
pop
lret
int
stos
or
mov
or
call
fldl
cltd
call
out
xchg
ja
scas
mov
jo
in
add
outsb
xchg
cld
bound
mov
rep
adc
xor
or
mov
dec
jbe
repz
sub
xchg
inc
fldcw
inc
loope
dec
sub
dec
ret
ja
dec
repz
or
adcl
ret
jo
mov
sub
xor
scas
das
mov
mov
sbb
cmpb
mov
jo
fmulp
int
mov
mov
pop
sbb
adc
mov
mov
fisubrl
out
and
imul
cmp
daa
mov
mov
jno
and
mov
pop
and
repz
push
and
int
xor
cmpsl
movd
enter
cltd
xchg
xor
in
and
ror
xchg
xor
push
cmpsb
scas
mov
in
insb
test
dec
jl
dec
data16
pop
pop
bound
jnp
popf
lea
mov
inc
fs
movsl
pop
xor
sub
jmp
loopne
fdivr
cs
add
push
and
jecxz
cli
sbb
pushf
es
adc
cld
lret
enter
int
or
mov
out
pop
cmp
mov
push
mov
sub
lock
sub
jmp
sbb
out
mov
fcoml
adc
inc
dec
lods
test
pop
inc
mov
repnz
fs
test
cmp
jbe
mov
xchg
sti
adc
dec
loop
outsl
and
fmull
out
fiaddl
or
rcrb
xor
loop
xchg
dec
aaa
xchg
int
repnz
mov
inc
cltd
pop
lret
xor
pop
and
adc
int3
nop
xchg
add
xchg
sbbb
xor
add
xor
cmpsl
mov
push
xor
fnstcw
inc
xchg
adc
mov
repz
bound
mov
leave
in
pusha
or
mov
fcmovnbe
jmp
ss
sub
sub
dec
or
les
sub
in
jmp
lock
sbb
xorl
inc
add
jne
jg
out
js
cltd
dec
movsb
lea
dec
test
push
testl
add
adc
jae
inc
enter
mov
iret
in
push
pop
or
mov
add
sub
mov
jp
or
adc
orb
jle
arpl
pop
xchg
or
shl
aam
jmp
out
sub
jno
and
pop
mov
ret
inc
loope
fnstsw
cmp
mov
pop
sbb
lods
scas
lea
push
dec
sarl
or
sub
inc
repnz
mov
lret
js
inc
cmp
sub
xchg
rclb
test
out
call
xchg
mov
dec
push
in
lcall
lret
cld
insb
push
pop
ret
xchg
mov
loopne
lods
je
insb
sbb
pop
push
pop
inc
cld
xchg
pop
mov
jp
insb
and
or
setbe
movsl
lret
or
jb
xorb
jmp
mov
testb
lahf
xor
mov
aaa
pop
jge
ja
ja
mov
rolb
divl
loop
loope
jno
rcll
shll
iret
subl
repnz
outsl
popf
mov
dec
mov
test
rorl
mov
rorb
push
outsl
ljmp
fbstp
mov
ret
xor
fwait
mov
mov
mov
wbinvd
jecxz
mov
aam
or
inc
inc
pop
sbb
xor
fimull
pushf
hlt
cmc
adc
add
cli
cmp
subl
repnz
test
push
icebp
in
shrl
adc
out
cs
push
mov
jnp
sub
repz
add
ljmp
rcrl
or
mov
jge
arpl
mov
pop
jp
add
jno
add
lret
dec
scas
sbb
arpl
jo
mov
lds
jo
sbb
popa
dec
cs
popa
shll
mov
int3
sbb
out
test
sbb
lock
pop
mov
push
mov
xor
in
sahf
ljmp
mov
or
push
xchg
lock
mov
imul
das
add
mov
fsubrs
sub
sub
inc
scas
pop
bound
push
dec
das
clc
je
xlat
xchg
lods
mov
cmp
and
bound
imul
int
cmp
sub
or
mov
inc
xchg
xchg
cld
inc
mov
add
ret
ljmp
sub
mov
push
je
inc
cmpsb
test
stos
in
sbb
setbe
xor
pop
icebp
push
pop
sbb
pusha
sub
pop
mov
fstpt
js
imul
nop
adc
mov
cmc
test
ret
jbe
xchg
jge
scas
inc
fbld
adc
stos
or
mov
or
enter
icebp
jo
int3
or
jle
vmovntdq
mov
int3
add
into
popf
push
pop
sbb
shll
jg
cmpsb
jno
pop
pushf
nop
std
mov
pusha
add
and
pop
xchg
insl
stos
xchg
das
hlt
xor
shrl
repnz
and
loop
and
mov
ret
lods
xchg
xchg
shlb
test
jmp
or
out
push
cmp
mov
adcb
sbb
adc
xchg
in
mov
mov
dec
dec
sar
outsb
jecxz
popa
sub
pop
pop
cmp
sbb
push
or
in
outsl
add
stos
pushf
dec
cmpsb
jno
jne
jb
xor
into
sbb
enter
repnz
or
imul
mov
fldt
lock
out
push
lea
sub
and
sbbb
xchg
and
cmpl
push
gs
jp
add
mov
incl
or
fs
movsb
xchg
lods
sub
fistpl
or
cwtl
dec
fsubs
dec
rcl
or
inc
jecxz
popa
adc
xchg
sbb
or
add
and
fisttps
test
jmp
pop
mov
adc
imul
stc
call
movsl
sbb
sbb
addr16
fsubrs
stos
sahf
mov
xor
je
fcoml
shl
sub
mov
lret
mov
sbb
fmul
movsl
xchg
or
outsl
addr16
addr16
ljmp
and
jecxz
rclb
xor
mov
fyl2x
dec
xchg
lea
xchg
cmp
cmpsl
xchg
or
xchg
js
xchg
je
or
inc
jp
data16
push
loop
jbe
loop
pushf
inc
push
rol
xor
out
sub
fnstenv
xchg
pop
pusha
push
mov
jb
fs
inc
addl
or
stos
lcall
imul
xchg
fmul
rcr
xor
mov
lock
aas
int
ret
and
popa
shlb
mov
mov
cmpb
pop
out
ljmp
popa
fsts
es
lahf
sbb
sbb
push
xchg
jg
icebp
sarb
loope
inc
notb
push
loope
sub
sbbl
inc
push
cmp
pop
aaa
mov
mov
lcall
es
add
push
lods
movsl
lods
jno
mov
ljmp
fwait
loop
adc
movsb
ss
mov
mov
jecxz
cmc
inc
sbb
push
inc
adc
shl
jbe
jl
ja
sbb
in
lcall
mov
adc
inc
mov
cmp
fisubrl
lds
bnd
inc
loop
fs
mov
lahf
xchg
sbbb
inc
pop
mov
test
add
sub
into
add
lods
jbe
sub
push
lcall
or
fstp
sti
dec
lods
sahf
dec
testb
or
sbb
push
jo
xchg
stc
jno
loope
mov
sub
in
adc
cmp
stos
nop
mov
add
addr16
jo
ret
movb
pop
es
aad
repnz
cmp
idiv
jecxz
int3
push
mov
pop
push
pop
cmp
fldl
stos
xor
addr16
add
orb
dec
lods
jns
fcoml
enter
pop
leave
adc
les
pop
mov
jnp
push
xor
in
testb
dec
mov
int3
icebp
and
movsb
hlt
push
sahf
pop
adc
dec
in
and
movsb
cld
adc
mov
sub
and
lods
repz
xchg
and
das
lret
adc
dec
outsb
aaa
or
adc
repnz
arpl
inc
mov
sbb
add
dec
stc
mov
add
les
popa
ss
add
mov
out
mov
sarb
loop
jg
aam
sub
das
mov
out
and
xchg
adc
mov
push
inc
leave
xchg
lock
cltd
pusha
je
dec
stos
cmp
mov
jecxz
or
aad
mulb
pushf
cli
mov
shll
xor
fwait
inc
cwtl
das
insl
push
cmpl
lret
scas
gs
sbb
sarb
and
rcl
test
pop
mov
sub
mov
adc
aam
ror
and
je
cmp
sbb
add
sub
cwtl
xorl
mov
repnz
push
loopne
xchg
sub
sbbb
mov
ds
testl
mov
mov
movsb
mov
mov
sbb
arpl
in
mov
repnz
and
cmp
cld
sbb
cltd
xor
inc
rorl
enter
repz
pop
xor
or
gs
xchg
movsl
pop
mov
mov
jb
lock
gs
scas
adc
mov
fcomp
popa
call
push
iret
and
sub
test
add
stc
outsb
cmp
test
pop
and
inc
mov
sbb
dec
lret
pop
or
jle
fisttpll
mov
outsl
repnz
mov
pop
imul
lret
mov
scas
mov
sub
sub
shr
rcrb
loopne
js
pop
fsub
nop
or
clc
add
and
lea
jo
das
sub
in
rcrl
dec
mov
loope
cmp
jl
inc
push
sti
push
iret
repnz
in
out
xchg
pushf
push
pop
xchg
sarl
dec
inc
xchg
xchg
sub
push
out
je
push
cmp
movsb
xlat
mov
fmul
imul
pop
aas
lds
sub
jmp
repnz
daa
dec
and
movsb
push
test
mov
and
out
jo
push
sahf
arpl
or
dec
sub
push
ret
and
mov
push
xor
fwait
aad
test
mov
add
es
das
addr16
fiadds
jmp
ret
xchg
pop
push
sbb
push
jge
push
aaa
sbb
cmc
pop
mov
shll
xchg
out
mov
rorl
sub
data16
dec
outsb
mov
rorb
push
mov
adc
push
cmp
mov
aas
sub
fdivrs
adc
hlt
mov
lahf
jp
adc
mov
pop
call
lods
sahf
stos
pop
jnp
js
andl
inc
insl
inc
sbb
adc
push
dec
mov
cmp
mov
fwait
push
fidivrl
inc
mov
xchg
add
cld
mov
repz
push
jmp
xor
xlat
jns
jecxz
rclb
out
insl
outsl
inc
mov
pop
insb
mov
scas
cmovg
and
pop
sub
xorl
mov
std
xor
cltd
fdiv
mov
cmp
lods
outsb
sbb
pop
mov
lods
inc
mov
push
stos
jg
mov
pop
movsb
jmp
xchg
scas
xchg
cmp
in
cli
leave
lea
sub
mov
jmp
rorl
mov
inc
std
mov
pop
sub
js
mov
adc
mov
scas
fcomps
sar
popf
dec
sbb
xchg
insb
mov
inc
pop
cmp
cmp
hlt
aam
add
lea
ret
in
mov
inc
movsb
sbbl
hlt
inc
fs
into
sbb
shll
sub
xchg
outsl
imul
inc
ret
int
lret
ficoms
mov
lock
ret
jae
mov
mov
rol
mov
pop
sti
mov
popl
in
flds
stos
lock
test
inc
add
aas
insb
jmp
jbe
movsl
mov
xchg
fidivrl
pushf
push
sahf
sub
test
pop
jae
jl
xchg
pop
cmpsb
std
push
clc
xchg
test
test
movsl
addr16
std
adc
mov
push
imul
packuswb
or
xchg
decb
call
inc
cld
cmp
icebp
test
jp
or
inc
jae
xor
addr16
mov
test
dec
icebp
cld
add
mov
sbb
mov
stc
push
repz
mov
stos
ret
pop
mov
lahf
sarb
mov
nop
sbb
out
jmp
mov
les
arpl
popf
aad
test
pushf
aad
and
enter
movsl
add
mov
or
pop
data16
aam
or
pop
pushf
movsl
add
nop
jge
and
sti
mov
sub
test
ret
sub
pusha
loop
int
pop
sarb
sbb
adc
rorb
or
ljmp
loop
leave
lret
aam
aas
xchg
mov
stos
adc
push
cmp
xor
roll
repz
xchg
xor
cmp
mov
dec
push
out
mov
xlat
inc
dec
push
ljmp
scas
aam
jns
or
jle
sbb
cmpsl
lods
insb
sub
call
bound
imul
and
jp
cs
ds
jo
iret
jns
or
xchg
pop
mov
fwait
cs
and
jnp
out
dec
aaa
mov
outsb
xor
ss
movd
mov
sbb
insl
lea
add
stos
mov
add
cmp
adc
popa
mov
sbb
mov
mov
xchg
dec
pop
add
pop
mov
xchg
outsl
divl
push
pop
cmp
pop
popa
fmuls
xor
stos
push
jns
mov
ret
rcrb
sub
jne
pop
pop
daa
lret
imul
mov
fnstsw
mov
xor
and
sarb
inc
lret
lret
scas
mov
aaa
cmc
xor
std
cli
jmp
fucomip
dec
lea
push
out
xchg
xor
push
cli
into
rorb
pop
call
lcall
mov
cmp
scas
xor
inc
les
notl
shl
shll
loop
pop
test
push
into
cmpsb
adc
movsl
sbb
stos
sub
es
sbb
adc
cmp
mov
push
mov
inc
jb
sbb
pusha
and
mov
push
add
outsb
es
arpl
xchg
enter
mov
mov
testb
sub
cmpsl
jmp
push
jae
enter
adc
gs
or
add
dec
aas
sbb
xchg
fmull
sbb
mov
daa
es
scas
sbb
or
into
pop
add
loope
sbb
sti
cltd
addr16
or
and
sbb
sti
push
das
mov
movsb
mov
mov
inc
mov
xlat
inc
pop
fmull
das
leave
xlat
or
inc
push
pop
mov
lahf
loopne
xchg
wbinvd
add
push
dec
data16
ja
out
mov
xchg
icebp
test
aam
movsl
xchg
dec
cltd
jo
fdivl
mov
mov
cmpsb
xor
dec
rol
cmp
mov
push
cs
mov
sbb
test
cli
sbb
test
pop
leave
nop
outsb
jp
mov
ss
mov
push
cmc
popa
pop
loope
inc
call
jnp
pushf
xor
inc
fwait
dec
ss
and
jl
loop
mov
loopne
ret
pop
insb
inc
inc
cmp
lods
pop
ret
jb
jbe
mov
rclw
sbb
pop
ficoms
adc
test
dec
mov
cwtl
adc
ljmp
push
and
popf
lahf
rcrl
stc
sub
xor
sbb
fcmovu
xchg
and
mov
sbb
mov
insb
aas
xor
mov
fisttpl
outsl
pop
int3
lahf
test
dec
adcl
cltd
mov
mov
xor
lea
dec
cmc
pop
call
add
push
and
sbb
inc
cmp
insl
inc
je
clc
mov
lods
xchg
xchg
roll
insl
mov
gs
out
scas
and
mov
cltd
rorl
lcall
dec
sbb
movsb
psubusw
xchg
or
inc
jno
xor
insl
mov
jmp
je
popa
pusha
inc
sarb
mov
pop
jno
mov
int3
arpl
sub
outsl
out
add
adc
cs
adc
add
push
cmp
add
mov
ficoms
jno
loope
inc
jae
and
int
je
adc
sti
or
inc
mov
icebp
mov
shl
sbb
push
es
data16
movsl
lock
gs
cmp
sub
imul
and
xchg
cmp
mov
add
cmp
icebp
sub
xlat
into
cmp
aas
clc
fwait
arpl
jo
push
jo
pop
popa
into
loop
add
inc
pop
outsl
add
pop
pop
out
xchg
sti
scas
call
es
int3
test
add
fprem
popa
mov
fadds
cmp
rcrb
sahf
mov
mov
and
stos
aam
sub
lods
push
clc
sub
pusha
call
jg
push
mov
cmp
test
int3
fimuls
out
ret
test
outsb
ret
and
fs
add
xchg
mov
fs
call
scas
add
pop
xlat
adc
das
fdivr
xchg
sti
jecxz
mov
in
xchg
dec
and
sbb
adc
pop
rcrl
sahf
pushf
sbb
in
dec
hlt
mov
scas
push
scas
imul
jl
std
jmp
xor
mov
fisubs
je
mov
mov
add
aad
cmp
in
dec
pop
shll
dec
or
scas
cld
jnp
xor
or
pop
push
cmpl
lret
out
mov
or
push
out
mov
popa
lds
fistps
add
jno
inc
xor
adc
ljmp
add
test
rep
cmp
mov
lods
xchg
xchg
mov
sub
jo
and
jmp
mov
jmp
cmp
orl
or
rorb
loope
push
mov
ss
arpl
fwait
xchg
insb
data16
push
stos
cmpsb
in
dec
push
out
mov
sbb
xchg
add
push
xor
flds
clc
in
mov
call
imul
dec
lahf
inc
sahf
das
aad
stos
ret
repnz
mov
stos
sub
xor
xor
test
inc
push
mov
bound
dec
pop
mov
out
gs
xor
dec
jmp
or
sti
lods
add
push
dec
inc
push
or
lods
mov
aam
xchg
lock
movb
shlb
sub
mov
negb
mov
sbb
xchg
mov
addr16
jmp
lock
ret
jmp
cmpsb
sbb
jg
or
and
subl
test
mov
addl
push
pop
js
xor
mov
loope
cmpxchg
les
cmpsl
dec
clc
lea
test
dec
fldenv
pop
ljmp
xchg
mov
mov
adc
in
cltd
dec
cmpsl
loopne
lret
in
cld
outsl
push
and
cmp
fs
sub
sti
enter
add
pop
lea
cmpsl
iret
cld
fcoml
push
lcall
or
out
push
inc
fs
loope
dec
inc
out
xchg
rcll
mov
mov
lea
adc
lea
jmp
xor
inc
jg
ret
imul
cld
mov
push
inc
jb
mov
cs
push
xor
xlat
add
lahf
add
adc
iret
xchg
in
aam
imul
aas
leave
in
sarb
jnp,pt
mov
cltd
loopne
das
xchg
pop
sti
dec
xlat
imulb
inc
mov
rclb
loope
pop
or
addl
jns
push
rcrl
popf
pop
cmp
sub
add
adc
mov
test
in
cmp
inc
imul
cmp
cltd
adc
jmp
push
push
mov
dec
adc
cltd
lahf
jnp
cmp
sti
mov
jne
and
dec
xor
mov
xorl
xchg
loope
lret
cltd
and
cltd
rorb
pop
xchg
mov
mov
movsl
cld
mov
jb
lret
or
or
loope
cltd
out
xlat
enter
pop
inc
hlt
mov
popf
ja
mov
pop
fidivs
mov
sbb
aam
xlat
or
stc
push
push
sahf
mov
xor
mov
sbb
or
sbb
or
mov
test
and
cltd
jns
jo
rcrb
data16
adc
test
cmp
xchg
fwait
leave
jb
push
cltd
insb
aad
lahf
or
push
mov
sub
sub
mov
pusha
mov
pop
loopne
pop
and
lahf
jbe
push
int
and
jne
mov
js
std
xchg
push
stos
sub
and
inc
mov
push
jns
pop
jns
dec
popf
pop
cltd
xchg
pop
pop
fs
mov
gs
in
imul
mov
daa
xchg
repz
mov
mov
clc
mov
test
stos
push
inc
jne
mov
cmpsb
dec
stos
fs
and
mov
or
or
repnz
and
je
add
stc
mov
sub
mov
sub
imul
pop
inc
mov
adc
inc
js
push
std
dec
mov
cltd
in
mov
fwait
ror
dec
xchg
popa
sub
sub
cmpsb
mov
stos
call
add
and
test
or
jmp
sbb
mov
mov
hlt
mov
adc
sbb
ret
inc
leave
adc
sti
fs
lock
pop
adc
insl
add
repnz
das
mov
mov
sub
in
jmp
or
sbb
sbb
adc
outsb
mov
push
stos
vphaddwq
into
test
pop
ret
mov
sbb
fisttpl
scas
fdivrs
rcr
dec
add
fwait
and
fcoms
imull
test
jnp
xor
cmc
xor
push
add
mov
mov
and
adc
xor
xchg
and
jg
xchg
add
ss
scas
daa
mov
sbb
pop
jecxz
ret
data16
sub
pop
mov
pop
xlat
int3
jnp
mov
add
mov
push
dec
xor
jb
cmpsb
mov
iret
cmpsb
sbb
clc
pushf
dec
ds
mov
adc
lods
ss
push
pop
ret
ret
pop
testb
repnz
jecxz
lret
lahf
add
std
xlat
push
mov
jo
cs
pop
std
loop
mov
mov
mov
pop
sbb
out
pop
push
aad
call
pushf
fldln2
xlat
aad
in
lcall
dec
fstp
xchg
imul
jae
stc
movsb
cmp
aas
outsl
aam
incb
adc
cmpsb
mov
xchg
jne
xchg
test
hlt
mov
insb
gs
fnstenv
sbb
pop
scas
cmpsl
xorl
fldl
fisttpl
mov
dec
je
jle
gs
fwait
push
mov
or
jmp
imul
movsl
mov
adc
loope
pop
add
into
jnp
or
or
orb
inc
xlat
push
push
adc
pminub
mov
pusha
notb
arpl
mov
daa
sub
xor
gs
jp
pop
sti
enter
mov
dec
popf
adcb
rclb
sbb
adc
popa
or
enter
cltd
out
int
inc
gs
out
in
test
out
leave
jl
pop
inc
xor
in
cmc
test
or
mov
leave
scas
rcll
stos
fwait
xchg
adc
je
in
push
mov
das
lods
push
jno
cmp
out
push
mov
mov
xor
testb
mov
cmc
sar
pop
xchg
xchg
fcmove
shlb
lcall
enter
mov
cltd
in
mov
push
push
cld
les
test
cmc
cmp
mov
subb
sarb
or
fidivl
mov
ds
ret
push
rcrl
cmc
repz
das
rolb
dec
mov
pushf
pop
fldenv
jno
int
inc
inc
push
rol
js
lahf
neg
rcr
lods
in
pop
ret
mov
jge
imul
jge
inc
fdivs
test
mov
sbb
lahf
insb
dec
push
mov
push
test
jg
push
sub
pop
jae
outsb
xchg
xlat
add
jne
adc
add
sub
mov
insl
imull
cs
mov
aad
or
clc
ljmp
out
ror
call
lea
cmp
inc
push
sbb
xor
sub
fwait
or
fcmovnu
nop
ja
inc
and
adc
dec
xor
aad
fcoms
jecxz
jnp
mov
enter
add
fiadds
mov
jae
push
pop
testb
inc
out
lds
mov
xlat
lods
pop
and
pop
mov
adcl
ret
lret
or
test
xchg
scas
xor
pop
or
cs
add
jg
and
xchg
push
dec
insb
shlb
fbstp
aaa
inc
push
insl
cltd
add
ret
imul
aad
mov
sbbb
pop
shrb
loopne
pop
sti
test
ss
push
mov
imul
mov
gs
mov
std
cld
pop
lods
and
imulb
mov
test
in
push
mov
xchg
xchg
fwait
icebp
jl
xchg
int
dec
call
jnp
outsb
xchg
dec
xor
mov
dec
jg
pop
repnz
jmp
xchg
cmp
sub
jl
stc
and
int
mov
push
add
pop
stc
inc
inc
sbb
imul
call
add
mov
and
scas
mov
push
and
xchg
mov
out
sarl
or
xor
test
jge
add
fdivl
sub
xchg
in
adc
fwait
mov
into
ror
dec
imul
dec
pop
jae
adc
insb
inc
stc
adc
lds
mov
xchg
and
pop
xchg
jg
sbb
mov
and
fwait
sub
jl
dec
sti
testb
cmp
add
shlb
xchg
outsb
sub
cmp
cmp
push
mov
scas
sub
loope
test
aas
inc
pop
mov
jb
jne
and
lods
jl
mov
pop
cmpsb
pop
out
pop
lcall
jmp
addb
cmp
loopne
xchg
out
and
in
mov
in
mov
or
mov
shr
fs
mov
or
lock
jg
mov
sub
and
lds
mov
rcrb
xchg
pop
xor
jns
out
jp
cs
into
dec
cmpsl
clc
push
fidivs
idivb
jo
loop
mov
leave
into
jg
mov
int
cmc
cmp
mov
addb
dec
or
in
and
mov
movsb
psraw
addb
pusha
push
fisttps
inc
xor
orl
xor
xor
mov
and
lods
jno
sbb
xorl
ret
xor
push
sub
loop
dec
lea
or
mov
mov
push
mov
add
clc
jp
mov
lret
lcall
mov
add
cmpsl
movsb
js
mov
test
pop
sub
pop
xor
inc
inc
pop
pop
dec
and
push
inc
pop
xchg
push
and
xchg
int3
scas
dec
imul
xlat
mov
bound
or
xchg
std
mov
movsl
pushf
mov
popa
out
add
mov
fcoms
mov
push
jmp
stos
pop
aas
add
add
in
mov
iret
or
into
and
inc
and
cltd
popf
inc
add
call
cs
pop
mov
jne
mov
push
mov
test
out
cmp
mov
and
dec
sub
jmp
cmc
lcall
aam
imul
mov
lea
pop
out
jmp
sbb
mov
popf
decb
imul
inc
adc
test
in
push
mov
fisubrs
scas
mov
lret
mov
test
mov
addr16
inc
aaa
cmpsb
dec
lcall
and
push
popf
scas
cltd
push
jecxz
shll
cmp
clc
mov
pop
mov
scas
std
repnz
mov
xchg
xchg
mov
scas
adc
pop
mov
xor
inc
jb
call
stc
insb
inc
xchg
sbb
lcall
jecxz
mov
enter
stos
mov
jg
vpshab
mov
std
xor
popa
mov
xor
fadd
and
mov
aaa
push
stos
mov
and
sub
mov
daa
ret
sub
sbb
lods
add
sbb
push
push
fisttpll
fistpll
loopne
adc
xor
add
sahf
dec
cli
cltd
movsl
add
xchg
xor
jl
xor
repnz
jns
cmp
testb
daa
mov
insb
sbbb
or
jmp
dec
or
pop
jb
shlb
mov
fucom
cmp
loopne
jno
add
pop
cmpsb
ret
add
mov
insl
jl
adc
out
leave
dec
mov
jp
fwait
out
imul
in
rcrb
into
pop
jge
into
mov
jle
pusha
pushf
fadds
add
xor
addr16
out
test
mov
add
loopne
sbb
outsl
test
mov
lret
lds
mov
lcall
xchg
mov
fimull
inc
cli
cmp
xor
mov
std
pusha
lods
mov
mov
cmpsl
out
test
out
sahf
fldenv
cld
xchg
mov
ljmp
pop
push
xor
int3
jp
ret
jp
mov
jmp
stos
xchg
mov
ret
repz
mov
sbb
sub
dec
xor
adc
mov
xchg
push
dec
sub
lock
pop
pop
adc
aad
mov
movsl
add
inc
stos
out
adc
lret
test
jbe
mov
add
cmp
cli
inc
stos
pop
xor
sbb
jmp
mov
bound
dec
push
pusha
shl
movsl
scas
mov
push
add
mov
icebp
mov
sbb
ret
fiadds
and
mov
xchg
jp
fsts
test
test
popf
xor
movsl
inc
lods
mov
notl
in
pop
in
iret
push
call
adc
adcl
lea
cmp
xor
xchg
adc
pop
jns
inc
daa
xchg
sbb
xor
and
or
or
pop
ret
dec
hlt
or
mov
sbb
rcrb
push
lock
leave
pop
adc
add
xchg
add
ja
sub
aam
mov
loop
pop
xchg
into
sbb
sbb
and
jle
pop
dec
lea
jae
and
fiadds
add
mov
add
pop
add
pop
xchg
repnz
jo,pn
lods
cmc
repnz
ffreep
ljmp
mov
inc
xor
xchg
dec
js
inc
push
ja
call
add
sbb
mov
mov
sbb
iret
mov
add
and
or
xchg
add
lret
push
stos
xor
mov
pop
xchg
rclb
subb
es
ja
mov
adc
aad
faddl
mov
jmp
xchg
xor
out
clc
push
sti
adc
mov
mov
mov
dec
push
dec
or
sahf
cs
gs
lock
sahf
int3
dec
pop
push
and
or
dec
xor
stos
mov
or
lock
and
add
les
ret
pushf
push
aam
pop
pop
or
mov
xchg
lock
pop
sub
rcr
jnp
cmp
into
jle
lret
jno
jns
pop
js
rcll
loopne
shld
and
js,pn
adc
jo
mov
cmp
imul
cs
cmpsb
mov
adc
outsl
pop
dec
out
push
inc
sub
imul
fcompl
or
gs
ret
cmp
sbb
sti
xor
loope
adc
fs
es
icebp
aaa
mov
mov
test
xor
dec
fistl
out
test
xor
lods
sub
ja
sbb
mov
mov
sbb
clc
xchg
jp
adc
mov
pop
clc
jbe
or
sub
push
mov
inc
dec
fidivl
aas
pop
push
loop
adc
add
sub
add
xorb
and
xchg
mov
jae
cmp
jae
sbb
mov
cmpsb
mov
inc
jns
mov
divb
adc
xchg
sub
out
out
xchg
mov
sub
xchg
imul
stc
sbb
jp
sbb
xor
xchg
cli
stos
push
cmp
sbbl
lret
rolb
jge
mov
mov
test
fiadds
mov
lea
ds
popa
adc
jmp
push
data16
mov
stos
je
mov
jp
add
dec
lret
pop
jnp
mov
xor
xor
hlt
mov
fildl
adc
out
jp
into
shlb
mov
idivl
inc
ss
je
fdivrs
notb
add
or
repnz
loop
add
xchg
sti
xchg
popf
fs
mov
xor
xchg
lcall
xchg
pop
sarl
test
mov
xor
cwtl
hlt
movsb
and
or
aas
or
cmp
lcall
fnstsw
dec
push
adc
dec
adc
jbe
out
ds
arpl
fwait
mov
dec
xchg
mov
xchg
jb
imul
subb
push
popa
pop
shl
jb
sbb
ljmp
andl
cmp
mov
scas
or
scas
loopne
dec
mov
lock
dec
cmp
or
cmpsl
shlb
fidivrl
mov
mov
ss
mov
inc
xchg
es
inc
sub
adc
lahf
and
pop
push
ficoml
sub
inc
es
jp
adc
lock
jb
push
cmp
sub
stos
jmp
cmp
cmpsb
dec
js
inc
outsl
aas
pusha
inc
sub
sbb
cmp
push
fs
add
push
ret
push
mov
aam
inc
cld
cltd
adc
mov
mov
xchg
rep
mov
pop
xor
and
mov
dec
sahf
out
xchg
xchg
scas
or
aas
cmpsb
dec
or
dec
adc
add
arpl
sub
mov
ret
sub
stc
pop
adc
sbb
call
cld
sbb
fidivrl
mov
imul
sbb
mov
mov
mov
xor
movsl
jae
aas
sarl
div
pop
xchg
push
nop
test
or
fidivs
notl
xchg
cmp
dec
and
inc
pop
pop
aas
jo
or
xor
xchg
sarb
pop
and
ret
or
sbb
push
inc
cmc
push
cmp
inc
fisubl
aam
dec
insb
jle
push
cmp
jnp
mov
shll
test
and
xor
out
fldcw
iret
test
pop
adc
std
pop
outsb
push
repnz
dec
stos
xlat
pop
in
pop
inc
mov
pop
mov
mov
ja
sub
xor
out
test
scas
sub
cmc
insb
orl
fisttpl
or
les
outsb
adc
shll
shll
xchg
and
loopne
dec
out
incb
cmp
mov
push
mov
cli
icebp
cwtl
jmp
jnp
mov
lods
ss
fs
pusha
and
dec
ja
push
push
sub
pop
in
imul
pop
pushf
dec
push
cmpsb
push
xchg
ret
outsb
sub
mov
ja
aaa
dec
and
inc
ret
add
mov
xchg
sub
cmp
dec
sub
jb
mov
test
jnp
xchg
xchg
xorl
push
push
xchg
and
test
shll
pop
push
arpl
jge
add
jne
dec
loop
enter
ds
iret
sti
add
sub
into
push
dec
xor
dec
popa
into
cmp
test
or
xchg
xor
dec
mov
cmp
out
pop
hlt
fs
jg
cwtl
cmc
shlb
cltd
mov
jbe
sbb
ja
mov
add
jle
mov
adc
lods
popf
xor
jbe
daa
push
push
mov
stc
int3
popf
or
enter
ret
sub
sbb
or
ljmp
mov
arpl
out
jmp
lcall
outsl
pop
push
xor
cmp
cltd
nop
shl
sti
fldenv
movsb
sti
rcrb
int3
mov
and
ljmp
call
add
std
sbb
mov
or
xor
loop
mov
aad
adc
pop
scas
mov
cmp
sti
clc
or
mov
pop
mov
push
repz
mov
dec
rorl
imul
sbb
outsl
xlat
add
lods
push
in
out
das
xor
orl
test
mov
xchg
add
mov
mov
out
ja
pushf
pop
xchg
loope
and
pop
mov
pop
in
mov
sbb
jg
dec
in
push
sahf
xchg
mov
fisttps
mov
sar
pop
dec
std
jns
xlat
push
sbbb
pop
push
shll
xor
in
test
jno
addr16
cltd
cmp
std
pop
adc
loop
int3
sahf
repz
jno
cwtl
mov
mov
mov
push
inc
mov
lods
or
sbb
push
insb
inc
add
xchg
loopne
lret
scas
cmp
cwtl
enter
adc
lea
add
outsl
ja
xor
push
xor
or
imul
iret
lret
sbb
mov
xor
or
out
icebp
xlat
into
pop
out
push
pop
push
int3
ret
jle
loope
jb
mov
cltd
mov
std
int3
mov
scas
into
xchg
leave
int
inc
loop
mov
dec
es
add
rcr
arpl
subl
rcrl
adc
in
das
roll
mulb
add
pop
sbb
mulb
or
test
in
movsl
xor
mov
jp
sarb
sub
push
loopne
xor
or
dec
mov
xchg
push
jb
es
jp
call
popa
clc
or
or
mov
xor
out
push
bound
jg
push
cld
shrb
cs
dec
jne
mov
mov
push
mov
dec
roll
je
adcl
xlat
in
lcall
je
mov
adc
pop
inc
shrl
sbb
aaa
xchg
stc
lea
xchg
sahf
fists
jne
cmp
popf
mov
dec
arpl
mov
aas
push
sub
inc
xor
aaa
jle
jmp
cs
push
andl
movsb
push
fsubs
sub
sbb
sub
iret
sbb
ret
inc
jmp
pop
loope
inc
fdivrs
pushf
test
fwait
inc
jge
mov
sbb
add
lahf
fwait
xchg
push
stos
push
div
popf
xor
rorb
mov
add
cmpsb
movsb
mov
dec
and
mov
xchg
dec
push
mov
scas
add
jl
mov
cmp
ja
mov
mov
aam
xor
add
mov
or
inc
adcb
add
int3
sub
adc
outsb
stos
lods
mov
pop
inc
insb
xchg
jg
dec
gs
fidivl
inc
xchg
das
cli
pop
ljmp
stos
mov
jae
jecxz
jae
cmp
jge
testb
rolb
ret
pop
loop
cwtl
push
ja
mov
rcrb
lods
pop
fildl
les
and
mov
and
jle
jp
repnz
jbe
push
push
inc
fsubl
rorl
xor
sbb
sahf
das
push
es
lea
dec
ljmp
mov
push
sub
lods
fwait
sub
cmp
cmp
add
pop
xchg
inc
adc
cmp
in
mov
cli
pop
clc
and
push
dec
inc
and
js
loope,pt
xor
mov
mov
ret
xchg
cmp
frstor
in
pop
xchg
dec
leave
mov
scas
sub
clc
sbb
cld
mov
and
cmp
mov
jge
aaa
imul
xor
test
std
push
popa
jl
rorl
mov
arpl
xor
rorl
jge
leave
mov
in
fnstsw
push
sbb
mov
inc
dec
push
sbb
mov
cs
cmpsb
sbb
sahf
or
push
inc
ljmp
xor
jae
f2xm1
jge
movsl
loope
sub
sub
popa
in
pop
test
or
pop
shlb
stos
ret
dec
add
fiadds
scas
jg
movb
rcr
or
pop
leave
xchg
jbe
push
cs
mov
stc
add
xor
loope
rclb
mov
push
decl
xor
mov
sbb
pminub
adc
ficomps
xchg
lcall
call
add
and
dec
test
cmp
sbb
cmp
xchg
loope
push
je
test
cmpsl
lods
adc
bound
xor
jae
imul
inc
mov
push
and
inc
mov
icebp
sbb
pushf
cli
scas
mov
stos
add
push
mov
cmp
loop
lock
pop
neg
scas
adc
enter
clc
or
sub
jge
jno
mov
push
sbb
insl
insl
nop
jg
jns
je
adc
cs
sub
jecxz
mov
push
lcall
clc
add
mov
mov
out
jmp
or
stos
inc
out
cli
xorb
shll
or
mov
xor
je
xor
cmp
pop
mov
cmpsb
leave
adc
in
out
lods
xor
pop
adc
jbe
test
ret
pop
or
loope
mov
sti
xor
sti
arpl
dec
xchg
ret
xchg
add
lret
out
loopne
sbb
mov
test
jl
test
popa
inc
in
mov
sbb
in
call
stos
mov
in
push
arpl
cltd
pusha
leave
addr16
inc
mov
addr16
cltd
lods
lds
imul
push
lods
pop
rcll
lods
dec
cmp
or
pop
cmpsl
fdivl
out
rclb
jb
xor
loopne
les
shrl
add
fcmove
pop
lods
sub
loopne
stc
push
lret
lcall
cmpsb
add
pusha
adc
cmpsl
iret
fistps
cmp
pop
cltd
dec
jmp
mov
jae
inc
cli
insb
inc
mov
adc
inc
imul
pushf
insb
sbb
andb
xchg
add
add
dec
or
int
pop
push
sbb
aaa
lcall
pop
jecxz
xor
cmp
lods
sbb
loope
xor
mov
inc
mov
outsl
fcoms
xor
aaa
jg
fldt
push
xor
xlat
out
adcb
lahf
inc
lret
push
je
pop
push
lret
cli
push
or
or
mov
jns
xchg
or
rorl
jae
mov
fistps
cmc
sbb
push
test
sub
inc
lea
xor
fisubl
mov
das
mov
xor
shr
testb
sub
add
add
mov
es
js
mov
or
sbb
jge
outsl
mov
in
mov
jp
icebp
jg
std
loop
push
movsl
bound
inc
mov
std
adc
test
jl
mov
pop
adc
pop
test
pop
pushf
mov
cmp
scas
and
push
sub
jb
into
pushl
bound
fildl
mov
pop
popf
sahf
shll
aas
shll
fsubrs
pop
ljmp
fisubrs
outsl
cmpsb
xchg
pop
xor
movb
mov
mov
xchg
or
mov
sti
or
sub
shrl
test
push
cmp
or
cmp
push
bound
insl
sub
push
push
jg
scas
inc
mov
movsb
fs
jmp
gs
pop
clc
repz
sbb
push
je
call
aam
pushf
or
loopne
daa
mov
subl
dec
sub
push
xchg
cmp
lahf
cmp
test
and
mov
xor
or
ljmp
lcall
std
cmp
xchg
push
out
mov
push
in
call
adc
addr16
out
scas
sub
dec
adc
enter
sahf
out
call
and
mov
sub
adc
jp
push
jle
outsb
in
dec
or
ds
insl
push
mov
jle
xor
in
add
std
lret
out
adc
das
ja
mov
aam
fucomip
stc
stc
hlt
push
rorb
or
movsb
mov
je
fwait
loopne
cltd
jecxz
enter
fiadds
out
mov
add
arpl
je
aaa
dec
push
dec
fcomps
push
cmp
dec
adc
jae
jne
xor
repz
sub
sub
and
mov
iret
dec
sub
lea
jae
adc
jl
ja
insl
out
call
dec
pop
mov
jne
jnp
lds
mov
push
repnz
push
mov
ljmp
cmp
adc
cmp
fisttpl
and
movsb
and
mov
adc
sub
pop
into
ror
pushf
adc
repz
sbb
push
xor
pop
jp
pop
mov
cmpsl
mov
clc
arpl
xor
add
pop
add
enter
std
jp
dec
inc
jmp
mov
sahf
or
popa
xchg
inc
xchg
stos
and
push
xorb
out
inc
cmp
addr16
sub
iret
xor
aas
out
loope
mov
lods
outsb
cmp
and
xchg
jae
std
adc
and
mov
add
in
mov
jae
jg
add
push
iret
add
push
mov
frstor
stc
xlat
inc
dec
mov
xchg
rcll
cmp
mov
dec
sbb
sub
cld
in
inc
mov
fiaddl
cmp
mov
jp
ret
xchg
ja
add
pop
or
lods
and
in
pop
fiaddl
sub
mov
xor
dec
call
std
test
mov
xor
test
sbb
push
cmp
hlt
testb
push
das
aam
add
fisubl
or
test
xor
jl
out
ljmp
repz
cs
mov
push
cmp
xchg
jne
xchg
pop
daa
or
ret
push
mov
pop
jns
adc
and
push
ret
jo
xchg
cwtl
hlt
dec
fstl
cmc
mov
orl
push
frstor
arpl
int3
pop
push
insl
push
or
stos
xchg
incl
and
mov
ljmp
pop
push
cmp
dec
dec
imul
cmp
cmp
or
xchg
mov
inc
in
insl
rclb
push
iret
outsb
jmp
lsl
mov
js
xchg
jno
sbb
cmpsl
popa
push
cs
and
repnz
pop
xchg
lds
sub
add
push
lods
stos
sub
arpl
sub
sbb
test
out
sbbb
clc
and
xchg
pop
jecxz
test
out
xor
jns
mov
adc
mov
sub
insb
sbb
inc
push
lods
xorl
jo
test
inc
and
out
addl
adc
mov
pop
cmc
insl
lret
ret
jne
xchg
xor
dec
push
daa
dec
jbe
sbb
js
jg
add
mov
sbb
mov
sbb
les
inc
out
inc
jb
insl
mov
pop
lds
adc
xchg
push
dec
fdivl
lea
repnz
jae
fnstenv
loope
jne
sub
push
mov
into
es
or
lea
shll
gs
adc
fnstenv
imul
sub
mov
cmp
dec
xlat
lods
jmp
xchg
jb
push
jp
dec
pop
lcall
jnp
and
fs
lds
rolb
and
cmp
loope
pop
jnp
and
ficomps
push
add
lds
pop
mov
push
hlt
add
adc
std
loope
mov
inc
scas
mov
push
push
fwait
or
pop
dec
in
push
mov
add
inc
jnp
insb
ss
dec
dec
jp
out
mov
cmp
add
int
cltd
jp,pt
xchg
fdivrs
mov
or
mov
pushf
sti
test
lds
aaa
jbe
jne
js
out
add
cmp
mov
inc
push
shrb
sub
xchg
les
mov
dec
dec
imul
lcall
lea
imul
call
sub
rcrl
sbbl
fcom
mov
cmc
inc
int3
lret
fmuls
loope
imul
lds
sbb
enter
add
pop
mov
test
jmp
cwtl
cmc
das
test
out
xor
inc
in
adc
pushf
cmpsb
lds
jmp
cmc
add
stos
addr16
inc
punpckhdq
pop
call
jge
dec
xchg
add
xchg
sbb
adc
loop
ljmp
or
loope
rclb
sub
mov
mov
and
inc
test
ss
xchg
jns
mov
adc
fstp
std
loop
xor
cwtl
mov
cmpsb
push
daa
and
add
idiv
add
pop
cwtl
and
arpl
lock
iret
cmpsb
dec
insl
pop
ret
push
xor
or
out
add
jae
cmp
scas
push
popa
dec
rorb
sti
cmpsl
lods
out
fistpll
push
inc
ret
sub
jae
rorl
iret
lahf
lods
mov
mov
jns
mov
inc
test
or
and
pusha
mov
mov
pop
mov
pop
sub
test
enter
or
pushf
jecxz
stos
xor
pusha
out
xchg
mov
int3
and
out
pop
loop
and
addr16
sbb
xor
cmc
xor
les
adc
xchg
dec
lcall
stc
mov
std
adc
pop
fdivp
xor
shlb
fdivrl
sub
mov
bound
xor
cmp
outsl
jne
or
fidivs
mov
movsl
movsb
mov
jbe
dec
fsubl
in
pop
movsb
insl
mov
push
daa
fildl
dec
std
dec
push
scas
dec
adc
arpl
and
inc
loop
xor
mov
cmp
ja
mov
lds
mov
inc
fdivr
push
iret
xor
pop
jb
or
adc
xchg
movsl
fldenv
xchg
inc
loope
add
scas
scas
and
mov
shll
testb
inc
jle
jecxz
stos
xchg
cmpsb
js
repz
jge
xor
divb
cmp
adc
xchg
jb
and
jge
rcr
call
jbe
jns
jmp
aam
sub
sbb
das
idiv
and
int3
adc
cmpl
mov
dec
sti
xor
and
int
fldt
cmp
add
and
dec
jecxz
inc
mov
adc
sbb
imul
hlt
mov
add
lods
mov
mov
mov
adc
adc
sub
std
pop
xchg
mov
rcrb
rorl
adc
arpl
mov
push
stc
test
fdivs
mov
push
shlb
mov
push
aaa
fdivr
fldl
lahf
xor
mov
pop
cmc
mov
push
pop
add
repnz
out
xchg
in
xchg
aam
jg
xlat
lret
add
push
mov
sbb
outsl
inc
sti
mov
out
repnz
lret
dec
neg
aam
test
cmp
outsl
cltd
in
mov
arpl
push
scas
daa
pop
loope
jbe
test
sub
popa
push
jb
shr
cli
insb
lahf
test
inc
repz
add
adc
popa
lret
or
inc
push
scas
add
mov
mov
xor
aaa
sbb
in
inc
ljmp
lds
mov
and
xor
xchg
rcrl
rcll
shr
in
xchg
je
pop
stc
inc
push
frndint
add
push
hlt
insb
ret
mov
cmp
gs
sub
mov
fistpl
or
int
ds
popf
pop
xchg
testb
cmp
insb
cmp
or
push
repz
sahf
sbb
dec
sub
pop
aam
jns
in
sub
dec
ret
pop
gs
dec
sbb
out
test
sub
outsl
pop
mov
in
mov
or
int3
stc
mov
imul
pop
fs
mov
adcl
gs
call
and
cmp
int
mov
aaa
rorl
imul
fisubl
jg
xor
dec
ljmp
pop
aad
or
cmp
into
int
fsubr
xchg
mov
push
push
sub
loop
mov
sub
mov
pushf
xor
sbb
dec
sbb
sarl
clc
imul
fisubl
push
push
add
push
or
in
aaa
adc
adc
das
xor
mov
dec
cmp
cltd
into
jge
mov
push
push
in
orl
mov
in
cltd
repnz
imul
fidivrs
ja
mov
add
push
xor
jnp
push
movsb
mov
dec
pusha
fmull
adc
test
cmpl
test
ljmp
cmp
adc
cmpsl
and
outsb
fstpl
jnp
cltd
ja
jb
imul
aad
sbb
cs
dec
icebp
fsts
jg
mov
push
mov
insl
cmpsl
cmpsb
and
dec
cmpsl
aam
dec
mov
mov
fldt
leave
mov
xlat
std
in
mov
notb
pop
fcmovne
xor
shll
add
test
or
xchg
jg
xchg
cmp
out
jns
mov
fwait
sbb
mov
jp
sbb
movsl
cmp
out
or
mov
lcall
sahf
jns
sub
inc
pop
jnp
inc
es
mov
mov
jo
and
rclb
xor
pop
xor
adc
jb
mov
flds
leave
inc
push
je
or
inc
in
mov
loopne
adc
dec
sbb
stc
imul
int
sbb
cld
mov
push
mov
pop
inc
push
js
loopne
cltd
xor
sbb
xor
pop
pop
inc
mov
mov
ss
out
push
sbb
adcl
sbb
mov
jno
xchg
add
lret
mov
xor
cmpsl
out
gs
sti
adc
outsl
push
rcr
loop
sub
and
dec
out
adc
popa
mov
iret
inc
jge
loope
rcrb
inc
nop
imul
int3
scas
push
xchg
bound
xor
lret
out
in
leave
jo
jl
xchg
sub
test
mov
stos
rcl
test
pop
popaw
mov
test
dec
inc
push
mov
dec
aad
je
repz
fs
xor
int3
cltd
dec
adc
scas
in
stos
add
dec
sbb
xchg
xchg
movsl
hlt
cltd
and
cmpl
shrd
pop
std
enter
xor
movsl
loope
mov
and
mov
adc
in
enter
and
xchg
popa
addr16
out
push
push
push
loopne
sub
loop
mov
dec
iret
pop
icebp
adc
mov
sbb
jnp
pop
jo
dec
shlb
test
push
and
xchg
stos
cmp
outsb
jl
push
xor
ret
xchg
ret
mov
movsb
enter
ds
aad
shrl
int
mov
jbe
jg
rcrl
testl
repz
and
dec
imul
push
mov
lcall
jp
or
loope
jl
icebp
sbb
mov
into
and
imul
in
add
xor
mov
add
cmp
inc
xchg
adc
ret
and
cmp
ss
testl
xchg
mov
pop
xor
jns
js
mov
xor
sahf
rolb
out
mov
mov
fmuls
push
jno
jb
mov
in
and
addr16
ret
out
inc
jmp
cltd
mov
pop
loope
cli
sahf
mov
movl
add
testb
jae
xchg
aad
inc
stos
ret
ljmp
push
and
sbb
mov
sub
idivl
jb
imul
kmovb
xchg
fs
sub
clc
xchg
bound
mov
lds
adc
xchg
cmp
fldt
push
loopne
das
imul
shll
sub
lahf
jo
push
push
rol
inc
push
iret
nop
mov
cmp
xchg
hlt
xorl
aaa
shlb
sarl
mov
rolb
hlt
sub
in
lock
sbb
dec
push
sbb
stos
adc
pop
sub
insb
dec
cltd
fs
xor
insl
ss
mov
icebp
sbb
aad
fstpt
push
sbb
popf
cmpsb
ds
jp
leave
mov
sbb
aad
adc
int
mov
and
rcll
mov
aas
sarb
adc
push
push
std
jp
lret
cwtl
mov
push
ja
sarb
inc
jle
stos
jg
jnp
aam
push
push
out
jl
enter
fprem
jp
mov
mov
mov
push
fidivrs
mov
pop
test
in
sbb
ret
push
leave
sbb
fiaddl
bnd
push
ljmp
inc
sub
dec
jmp
inc
sub
push
loopne
sub
cli
push
dec
in
rcr
clc
jb
lods
xchg
repnz
mov
popa
aas
std
push
sub
xchg
ret
cmp
leave
dec
jmp
mov
movsl
sbb
cmpsb
cmp
out
lea
lahf
xor
push
stos
add
sbb
cltd
pop
xor
jg
shrb
int
pop
cltd
iret
sbb
leave
adc
lret
and
loope
int3
orl
mov
push
jg
jmp
jno
scas
test
xchg
jne
scas
cmp
popf
cli
daa
enter
sub
call
adc
mov
test
and
sti
push
jl
andl
push
insl
movsb
aad
mov
loopne
mov
popf
inc
sub
ffree
or
dec
outsb
mov
sbb
push
out
nop
jb
daa
xor
loope
sti
mov
adc
aad
jmp
pop
xchg
js
or
sbb
mov
sub
sbb
outsl
push
sub
push
adc
sub
ja
fdivl
inc
sub
cmpsl
adc
mov
in
mov
in
cmp
jo
icebp
add
pop
jmp
test
add
mov
repz
or
cmp
ret
jge
push
sbb
fwait
addb
fwait
rcll
insl
leave
push
notl
dec
pop
call
dec
pop
call
shr
and
lds
sub
fisttpll
mov
outsl
repz
mov
mov
adc
test
sub
dec
out
or
mov
ja
rcl
scas
loop
pop
popf
in
les
xor
xchg
adc
cmp
xchg
mov
inc
in
dec
pop
push
xchg
sub
xchg
mov
mov
rolb
pusha
jg
push
push
adc
inc
ss
es
int
or
pop
lahf
jmp
cli
mov
pushf
icebp
aas
imul
jnp
pop
addl
add
mov
sub
xor
add
sub
push
scas
in
inc
mov
mov
lahf
fldl
sbb
and
jp
punpckldq
push
dec
jmp
sub
popa
cmp
adc
jno
xorl
mulb
xchg
mov
sbb
rcll
cmp
or
pusha
or
sahf
imul
jae
and
add
pusha
or
xor
dec
sbb
mov
lcall
inc
leave
lods
cmpl
mov
mov
pushf
test
lea
jo
int
stc
push
xorb
pop
push
jne
loop
jo
cmp
xchg
loopne
add
add
pop
xchg
in
imul
mov
push
xchg
xor
call
aad
add
into
icebp
xchg
dec
xor
pop
xor
xchg
add
adc
decl
mov
ret
push
ljmp
mov
sahf
push
lods
fwait
hlt
cmp
icebp
rcrl
mov
ds
icebp
mov
mov
push
xor
pop
mov
loope
cmp
or
shrb
pop
jo
cmp
pop
pop
pop
fisttpl
bound
divl
mov
test
popa
pop
or
add
jmp
ljmp
push
jl
lcall
ss
loope
outsl
fwait
roll
iret
cmpl
add
mov
adc
jmp
and
shll
dec
jp
xchg
pop
xchg
jl
aaa
sahf
mov
sub
mov
sub
jle
dec
sbb
popf
cmp
fisttpll
fwait
out
lods
pusha
sub
adc
imul
adc
mov
add
hlt
sub
inc
jb
mov
xchg
push
jo
mov
mov
mov
mov
pop
outsl
jb
test
js
fidivrs
repnz
lret
insb
iret
mov
mov
mov
jnp
int
mov
sub
mov
jl
rol
mov
fcmove
ljmp
cwtl
sahf
jecxz
xchg
test
pop
push
xchg
negl
fdivrs
pop
loopne
jae
std
sub
xor
or
cmpsl
sbb
pop
lret
imul
pop
adc
jmp
push
cmp
aas
jns
inc
es
xorb
les
cmp
js
cwtl
shlb
scas
repnz
cltd
rcrb
mov
aaa
aad
fisubrs
dec
pop
pop
mov
fildl
fcompl
lods
mov
fnstsw
fwait
sub
add
add
insb
mov
int3
or
xor
jns
pushf
jp
lret
addb
adc
mov
pop
xchg
jl
int3
jmp
dec
repz
inc
fwait
mov
jnp
ret
sbb
shll
inc
inc
out
inc
cmpsb
pop
lahf
add
jmp
in
fisubrl
pop
sbb
hlt
icebp
mov
bswap
inc
lret
into
js
ljmp
cwtl
cltd
xor
mov
fildll
xor
scas
push
xlat
into
cmc
mov
dec
loopne
pop
insb
jg
or
xor
mov
or
push
ja
mov
and
fidivrs
lock
sti
push
daa
push
leave
je
pop
dec
xlat
movsl
xchg
sub
cmp
sbb
es
hlt
jp
mov
mov
fcos
sub
cmp
pop
dec
data16
leave
inc
out
in
sbbb
sub
mov
cmpsb
outsb
pop
mov
dec
int3
sub
outsl
mov
out
xor
icebp
aad
cmp
loop
inc
cmp
sbb
push
jle
jl
jp
mov
lea
ret
mov
xor
popf
sub
adcb
xor
dec
in
push
mov
daa
xchg
iret
cmp
xchg
out
pop
insb
lods
xlat
fnstsw
andl
sub
dec
jae
sbb
popf
out
test
cltd
push
push
rolb
sub
cs
cmpsb
out
shll
insb
mov
push
xor
inc
pop
out
push
ds
scas
xchg
sbb
cmc
test
dec
sub
mov
scas
out
sub
xchg
adc
test
lods
and
pop
aad
add
xlat
sub
dec
call
fsubs
rcrl
pop
pop
adc
inc
lret
mov
add
or
push
xchg
out
or
mov
jecxz
scas
pop
imul
push
enter
rclb
inc
mov
lock
mov
outsl
add
test
jae
mov
les
pop
lods
and
mov
cs
xchg
and
push
aam
out
cmp
jle
dec
xor
mov
shl
mov
sbb
mov
jmp
gs
xchg
inc
fcoml
test
test
jle
lret
xorl
daa
imul
sub
in
stos
add
stos
fsubrl
cs
jb
mov
ret
cmpsl
inc
jg
stos
or
dec
cwtl
ret
sub
push
loop
stos
xchg
push
xor
sbb
dec
dec
cmp
cmp
push
cli
lods
scas
dec
aam
adc
jo
shl
outsl
nop
movsb
push
mov
into
lock
pop
mov
mov
inc
lods
in
jae
push
mov
dec
xor
add
dec
and
je
push
add
sub
stos
rcl
test
insl
fiadds
mov
rcll
test
push
and
lcall
push
scas
dec
cs
mov
xchg
bound
xchg
lods
ficomps
jmp
cld
into
xorl
jns
sar
xor
sti
outsb
daa
sbb
enter
inc
jne
fwait
xchg
aaa
xchg
fcoml
outsl
cltd
mov
dec
or
ror
rorl
jge
cmc
mov
sbb
jne
das
cltd
insb
loopne
lods
shl
nop
and
aam
in
push
popa
jns
pushf
repnz
push
mov
hlt
add
addr16
insb
movsb
test
inc
clc
and
lcall
xchg
and
pop
xchg
lret
fisttpl
add
jne
pop
pop
shrb
jl
repz
subl
iret
dec
cmp
ret
push
inc
mov
xchg
push
dec
fimuls
jo
xchg
dec
in
cmpb
dec
adc
call
ret
pop
arpl
movntq
icebp
fdivs
pop
adc
xchg
xchg
mov
dec
xchg
inc
and
jle
sar
mov
jmp
out
pushf
dec
stos
xorb
sub
inc
jecxz
xor
stc
and
fdivr
jnp
filds
lock
int
xchg
popa
pop
jl
jecxz
or
stos
icebp
cmp
fsubrl
xchg
cmpl
andb
inc
mov
pmulhuw
imul
fldl
cmp
dec
pusha
repnz
shl
insb
cli
mul
ss
out
imul
mov
sbb
shl
inc
xchg
mov
push
in
loopne
test
add
hlt
stc
pop
xor
mov
dec
dec
xor
mov
sbbl
mov
repz
jbe
jo
mov
xchg
mov
cs
fcomps
mov
imul
xchg
and
enter
aam
xor
mov
negb
mov
inc
test
pop
movsl
cmp
adcl
mov
popa
xchg
dec
adc
in
imul
fisttps
test
jns
mov
cmp
fdivrs
outsl
push
cmp
xchg
out
mov
push
lret
cmc
dec
and
xor
test
jne
and
test
ljmp
inc
add
push
cmp
pop
sbb
add
out
fwait
in
cmp
push
xchg
out
andb
lret
cs
aaa
and
mov
cmpsb
mov
jl
xchg
jb
xorl
cmc
je
ja
pop
add
pusha
mov
dec
mov
loope
jb
lods
mov
xor
add
xor
push
nop
ss
ret
jo
push
pop
mov
mov
stc
dec
jne
pushw
xchg
dec
push
cmp
bound
cmp
enter
add
xchg
push
dec
fildl
xchg
rcrl
add
mov
popa
inc
cmpsb
rolb
repz
inc
jl
pop
cltd
jge
cmp
in
xchg
sahf
mov
inc
xchg
or
dec
push
mov
or
jmp
mov
mull
mov
fidivs
push
ljmp
and
ds
rorl
jp
jge
into
test
add
cli
inc
jns
fwait
lcall
or
les
xor
mov
mov
lods
mov
mov
bnd
mov
addr16
fadds
sarb
mov
lahf
add
jo
xchg
mov
push
cld
push
shrb
and
imul
or
repnz
mov
pop
pop
movsb
addb
jae
test
pop
mov
or
int
add
movsb
adc
jecxz
cmpsb
lock
jge
ret
test
sub
adc
pop
addr16
sub
xlat
pop
fs
out
inc
and
pop
jmp
es
mov
mov
ror
enter
orl
mov
lods
ja
inc
scas
mull
lds
iret
jns
shrb
push
ljmp
icebp
cmp
jne
jle
test
dec
cmpb
sbb
imul
jns
mov
fsubl
pop
sub
test
gs
sbb
sbb
int3
inc
lret
sti
out
cmpsb
xchg
and
jp
dec
sbb
mov
push
xchg
pop
mov
insl
jae
les
jl
pushf
sub
int
mov
sub
push
aad
mov
dec
pop
mov
jne
pop
cltd
pop
hlt
je
jmp
lret
pop
daa
mov
dec
into
gs
ret
mov
cmpl
lock
out
mov
or
das
call
lds
fs
mov
inc
mov
aad
cmp
mov
rcrl
xchg
mov
add
lret
cmc
push
clc
pop
sbb
arpl
loope
and
jno
out
mov
and
xor
dec
jbe
add
sub
outsl
mov
cs
pushf
cwtl
pop
or
or
repz
popf
mov
pop
push
aam
stos
iret
test
xor
mov
aad
fidivl
fs
sbb
mov
xchg
bound
cltd
xchg
pop
dec
pop
add
ret
imul
pop
inc
outsb
es
mov
in
inc
mov
dec
clc
imul
in
imul
mov
in
ret
mov
fdivrs
jge
xchg
arpl
es
mov
movsb
rol
cli
inc
arpl
jge
pop
pop
mov
in
dec
lahf
dec
mov
add
mov
or
add
add
cwtl
cwtl
mov
adc
xor
xchg
scas
jl
jno
jns
ror
pop
inc
dec
cmp
lret
add
adc
inc
enter
or
sub
out
cmc
cmc
xchg
fsubr
cmp
add
sub
dec
repnz
decl
xor
shlb
mov
cltd
mov
adc
dec
xor
sbb
pop
add
dec
adc
sbb
sub
mov
inc
mov
mov
cmp
pop
inc
cmp
mov
adc
or
lds
inc
mov
xor
or
inc
pushl
mov
dec
cwtl
lods
bound
mov
and
cmp
insb
in
mov
icebp
jo
sbb
sbb
sub
xchg
mov
push
popa
sub
xor
pcmpgtw
add
or
lret
call
std
or
leave
lock
pop
scas
fdiv
rcl
sbb
fwait
add
ds
or
dec
xor
sub
lret
push
jle
lret
push
lcall
js
inc
mov
or
mov
in
roll
sub
popa
fistl
insl
jp
imul
std
or
je
bound
push
ljmp
xor
insl
icebp
inc
pop
addl
and
jl
les
fstpt
xchg
nop
jecxz
insb
xlat
mov
loop
mov
xchg
mov
leave
pop
std
leave
cld
lret
insb
xorb
pop
and
aad
dec
mov
mov
or
lock
das
popa
mov
bound
mov
sub
jle
sti
mov
cmp
imul
clc
je
loopne
imull
adc
dec
adc
into
sub
mov
es
mov
js
or
testb
inc
aam
adc
lock
jne
jl
lret
outsl
jge
add
jb
mov
dec
scas
jne
lock
gs
int3
push
arpl
inc
jb
mov
in
mov
and
movl
pop
or
xor
and
mov
mov
in
or
push
cmc
subb
mov
nop
arpl
fidivrl
pop
mov
fcos
movsl
add
enter
and
pop
fidivl
cs
dec
xchg
xlat
adc
push
xorb
cs
pop
repz
pop
jmp
out
stos
aad
jne
adc
scas
loope
mov
scas
aaa
push
adc
neg
test
enter
mov
xor
mov
or
pop
dec
test
mov
jg
lcall
js
fs
push
adc
adc
jge
dec
popf
std
repnz
xlat
sbb
jne
or
sbb
mov
sub
inc
out
nop
in
mov
mov
cs
dec
xlat
mov
lret
adc
pop
mov
cmovns
jno
mov
or
les
and
inc
adc
pop
fstpl
xor
call
into
mov
in
push
pop
inc
lahf
jg
xor
jge
loopne
xchg
xor
and
outsb
aas
mov
cld
mov
lcall
imul
pop
outsl
dec
dec
je
mov
ret
mov
add
or
cli
lods
push
cmp
notl
dec
pushf
aad
jp,pt
nop
push
jno
push
push
mov
sub
xchg
inc
lods
xor
mov
pop
pop
cmp
xchg
sub
into
leave
shrl
inc
das
andb
test
stos
inc
insl
lret
dec
lret
mov
fwait
inc
sub
push
inc
imul
scas
sbb
push
fstpl
sahf
or
sub
xchg
call
pop
inc
push
stos
gs
or
xor
outsb
stos
and
daa
fsub
dec
sbb
push
add
sub
inc
andl
cmp
mov
ret
scas
xor
xchg
mov
add
mov
or
or
push
jecxz
int3
sbb
mov
adc
imul
ret
insb
pop
mov
fisttps
fcompl
repz
stos
sub
movsb
or
pop
mov
xchg
outsl
pop
in
jb
cmp
or
js
push
cmp
xor
push
or
inc
ljmp
adc
imul
jmp
lret
mov
scas
mov
cs
stc
pusha
into
inc
mov
adc
xchg
test
sbb
mov
xor
cmpl
cmp
ret
jmp
jnp
loopne
test
adc
outsl
sarl
in
daa
adcb
add
out
arpl
aas
xchg
adc
xchg
scas
stos
fnstsw
pop
inc
cmpsl
ljmp
es
out
dec
iret
pusha
jmp
dec
loope
fidivs
cld
movsb
test
test
mov
out
cmp
push
xacquire
mov
inc
mov
fstps
leave
push
xor
push
int
dec
mov
push
stc
inc
loop
xorb
movsl
inc
and
pop
push
sbb
mov
push
cmpsb
test
cmp
pmaxub
std
dec
sar
inc
stos
cmpsb
sbb
dec
cmpps
popa
pop
cmpsb
fidivl
lea
adc
lock
mov
dec
sbb
mov
mov
cli
mov
push
sub
or
lds
add
loopne
or
mov
pop
and
adcl
orb
push
jo
sbb
push
ljmp
je
mov
popf
rcl
fildl
or
cmp
das
xchg
dec
test
xchg
cmpsb
inc
sub
jnp
mov
inc
arpl
fisubrs
jo
mov
lds
push
or
and
add
sbb
and
lea
xchg
mov
xchg
int3
repz
xchg
fcom
stos
pop
jo
push
fsubrl
jne
les
ss
cmp
xchg
loop
dec
push
xchg
ljmp
cld
sarb
cmp
or
loop
lret
stos
mov
cld
push
int3
mov
leave
sti
jmp
mov
adc
xchg
mov
int3
and
fldenv
cmpsl
push
fnstsw
enter
clc
repnz
inc
fcompl
adc
sbb
push
pop
fistps
adc
es
and
push
and
rcr
push
mov
mov
pop
inc
and
push
ljmp
inc
mov
ror
jo
repnz
mov
jmp
fnsave
add
js
cmp
cs
sub
icebp
popf
and
outsl
dec
frstor
mov
enter
adc
stos
pop
js
adc
pop
inc
mov
fsubrs
icebp
cmp
imul
cmpsb
popf
rorb
cmp
xchg
movsb
bound
movsb
arpl
push
shl
aaa
pop
test
aaa
dec
addb
aaa
enter
scas
aad
mov
jns
scas
daa
push
gs
cmp
cmp
mov
or
mov
push
push
roll
push
pop
mov
sti
insb
add
jb
or
xchg
jno
sti
dec
inc
mov
and
dec
mov
xor
and
push
stc
aaa
fwait
jnp
icebp
int3
lret
jge
fdivl
enter
loop
lea
bound
ss
inc
out
mov
xchg
lahf
push
xor
or
dec
cmp
or
insl
test
jns
sub
sub
clc
add
adc
sub
push
push
mov
into
mov
rol
shlb
je
mov
fsubr
pop
mov
push
or
das
into
pop
lock
inc
movsb
add
xlat
out
notb
inc
push
arpl
pop
cli
pop
repnz
cmp
adc
cwtl
mov
dec
xchg
int3
imul
xchg
or
mov
mov
mov
aas
faddp
cmp
xchg
push
jae
gs
popa
hlt
cvtpi2ps
lret
jb
in
fs
push
mov
cmpsb
cmp
add
js
xchg
mov
sub
pop
cld
arpl
mov
adc
sbb
mov
sahf
mov
out
pop
clc
pop
sahf
andl
inc
xor
ja
lret
sbb
int
repz
jnp
inc
or
push
mov
daa
inc
mov
arpl
pop
setns
lods
inc
stos
dec
xor
push
hlt
enter
pop
cwtl
daa
add
test
or
jbe
das
adc
test
int3
ja
cmp
jg
lea
push
dec
fisttpll
pop
xchg
jge
xchg
inc
loope
fnstenv
es
addr16
dec
mov
push
mov
mov
mov
hlt
xchg
cli
adc
nop
and
sub
mov
pop
pop
stos
hlt
mov
stos
xchg
arpl
out
notl
and
lahf
imul
inc
sbb
notb
inc
mov
pop
xchg
fiadds
in
xor
and
jbe
mov
add
sub
jg
jmp
jge
ja
idiv
mov
cli
lods
mov
add
mov
dec
cs
loop
jle,pn
aam
arpl
adc
sbb
and
push
sub
out
mov
xchg
aas
arpl
and
adcl
push
push
adc
rcrl
mov
inc
or
and
jno
insb
movsl
cld
jmp
xor
mov
pop
jmp
sub
test
fiaddl
cmp
mov
sarb
xchg
sbb
push
pop
xchg
insb
dec
in
inc
xor
jge
pop
fs
adc
fwait
pop
pop
sub
das
mov
cmpl
inc
and
xchg
call
movsl
sub
inc
xchg
mov
mov
out
cwtl
add
insb
addr16
insb
cltd
cli
xor
adc
mov
xchg
sbb
addr16
mov
push
jp
add
ret
sbbb
cld
push
xor
inc
push
ret
push
in
in
pop
cmpsl
push
sbb
sti
lret
clc
fbld
mov
rcll
mov
push
pusha
jnp
adc
cwtl
xlat
mov
mov
das
stos
dec
mov
cmc
adc
mov
push
scas
scas
std
xchg
jg
inc
jmp
mov
jb
cltd
in
fistl
fidivrl
call
hlt
push
je
sahf
pop
pop
js
cmp
adc
lods
data16
adc
and
lock
int
rcl
out
adc
sbbb
aad
bound
mov
jbe
loope
add
nop
ret
jnp
loop
rorb
adc
push
iret
push
dec
shrl
sbbl
pop
mov
xlat
testl
sti
stos
or
push
pushf
jb
and
out
inc
dec
cmp
lahf
daa
sahf
push
mov
or
mov
lods
adc
jae
or
test
mov
ljmp
fsubl
cmp
aad
lods
outsl
add
aas
sub
les
jle
xchg
pusha
daa
ret
pop
jl
mov
and
test
inc
dec
adc
cs
test
add
xorl
inc
aam
dec
sub
sbb
enter
push
xchg
pop
pop
inc
call
shll
pop
fnsave
int3
dec
add
adc
testl
mov
inc
cmpsl
dec
push
or
fdiv
sbb
dec
inc
add
sub
fldl
das
and
xchg
jo
ss
pop
pop
mov
movsl
in
add
stc
push
inc
pop
sbb
xorl
push
inc
in
push
fs
mov
push
cmp
bound
ds
ljmp
loope
add
bound
dec
pop
sub
insl
and
xchg
fidivs
adc
test
ss
inc
sbb
clc
add
jb
pop
daa
jns
aad
repz
gs
mov
xchg
sbb
inc
sub
sub
xor
fisttps
and
xor
mov
jg
ja
xchg
mov
sti
push
or
mov
outsl
sub
iret
pushl
aam
das
sub
in
cmp
imul
fidivrl
sti
dec
cwtl
lods
fs
mov
adc
notl
pop
add
scas
jae
jo
lcall
outsb
push
imul
movsb
push
sti
or
xchg
pop
lods
sbb
fldenv
sti
lahf
cmpsl
lea
cmp
sbb
ret
sub
mov
test
sbbl
fsubs
or
sub
mov
mov
je
enter
mov
push
add
enter
xchg
push
test
pop
sub
leave
jge
mov
mov
sub
sbb
out
out
sbb
inc
fistl
std
outsl
or
and
loop
push
pusha
mov
inc
and
ficoms
push
lcall
add
call
sbb
mov
mov
mov
sub
outsl
adc
cmc
inc
loopne
xchg
movsl
lods
jl
inc
and
call
push
cmpsl
les
cmp
arpl
mov
mulb
inc
adc
aad
mov
or
inc
cmpb
jl
loope
mov
mov
push
mov
aas
push
addb
mov
or
scas
in
and
pushf
out
mov
ljmp
xor
push
dec
in
aas
xor
out
inc
push
xchg
add
and
pop
adc
lcall
ljmp
iret
sbb
cmp
and
les
aam
sub
nop
shll
iret
dec
loope
sbb
xchg
jmp
cmp
pop
lds
in
and
xchg
xor
cmp
stc
imul
push
jl
add
decl
jl
xor
pop
jg
mov
dec
push
pop
fisubl
push
loope
pop
iret
jp
outsl
xchg
xchg
lea
insl
loopne
jo
xor
nop
jg
pop
pcmpeqb
xchg
xchg
insl
fucomi
pushf
rclb
jbe
ficoms
pop
aam
outsl
xlat
jbe
les
jne
push
rclb
int3
sahf
and
mov
cld
pusha
pop
ja
addl
aad
push
jl,pn
pop
js
repnz
out
lcall
adc
leave
scas
pop
jecxz
icebp
out
test
ds
mov
ret
movsb
mov
clc
lea
jecxz
inc
stos
popa
mov
pop
sub
mov
cmp
shrb
xchg
nop
mov
mov
and
add
sahf
cmp
mov
sti
mov
sub
or
stos
xchg
mov
lods
out
out
pusha
mov
popa
lods
ffree
hlt
adc
lock
test
push
xor
push
add
loopne
jl
mov
lahf
and
mov
dec
mov
jne
inc
adc
fbld
mov
mov
das
inc
es
push
add
jb
daa
lea
mov
testb
cmp
and
insb
xchg
xchg
mov
cmpsb
mov
xor
stos
bound
addb
or
fstl
jp
cmp
pop
and
cld
out
test
adc
or
xor
mov
sub
ja
sub
pop
repz
mov
dec
push
cmp
mov
bound
das
add
jmp
inc
xchg
call
and
ljmp
and
movsb
sahf
xor
in
cmpsl
sahf
and
loopne
fiaddl
jae
pop
xor
imul
push
loop
jno
fistps
mov
pop
daa
enter
xchg
inc
push
out
aas
sub
and
inc
ljmp
jecxz
push
les
add
cmp
xlat
cmp
pop
imul
daa
jg
lret
pop
mov
addr16
stc
cmpsl
sbb
pop
daa
daa
lds
mov
xchg
adc
jecxz
popa
push
stc
imull
out
mov
push
test
mov
inc
sti
inc
insl
test
and
add
lock
push
or
arpl
cs
pop
scas
mov
jp
js
cmp
xchg
or
sub
mov
sbbl
adc
cltd
pop
xchg
adc
leave
xor
pop
ss
imul
je
rorl
mov
push
jl
and
icebp
int3
lock
adcb
pop
mov
mov
les
pushf
dec
mov
jl
data16
arpl
jnp
adc
mov
push
or
enter
cmc
dec
mov
push
lret
and
sbb
loopne
mov
cmp
aad
push
and
fistpll
xchg
insb
lret
lret
and
or
jge
imul
mov
pop
lock
int
es
jns
xchg
dec
push
inc
or
sub
adc
and
inc
into
es
mov
mov
out
lret
mov
or
cmp
fwait
loop
mov
fisubs
sub
pushf
pop
in
into
adc
inc
sbb
pusha
add
cmp
inc
icebp
jb
pop
jae
ret
shll
into
fcomip
shrl
shll
shr
and
mov
lcall
shlb
inc
mov
inc
pop
jae
fimull
or
in
inc
cmp
js
scas
push
fs
in
lea
lret
mov
insl
arpl
push
adc
jl
add
imul
jne
sbb
dec
sbb
iret
push
stc
cwtl
into
xchg
dec
mov
xor
mov
push
lcall
dec
int
lds
mov
pusha
jbe
lock
out
and
pop
pop
stc
cmp
sub
das
scas
and
inc
lds
sbb
mov
or
jg
sbb
sti
lea
push
sub
gs
sub
dec
ficoml
xor
add
push
das
rorb
dec
mov
mov
inc
out
xchg
xchg
inc
aaa
or
cltd
mov
xchg
dec
fimull
or
jbe
mov
sbb
imull
fcompl
inc
repz
jns
lea
mov
pop
out
int3
call
add
mov
fisubrs
adc
dec
jecxz
cmp
dec
out
dec
rclb
mov
fsubl
dec
mov
leave
xlat
clc
in
lods
aad
mov
ja
stc
xchg
aam
imul
dec
aas
sbbl
cmp
insb
fs
adc
testl
repz
xorb
xchg
xor
mov
or
lds
inc
cmpsl
out
nop
pop
and
adc
mov
xchg
push
xor
push
test
cmp
lret
sbb
xchg
cli
and
loope
mov
jp
pop
aad
shl
sbb
fcmovnu
data16
out
dec
sub
inc
ja
dec
jbe
outsb
iret
fsubs
adc
mov
stos
sub
jns
repnz
gs
cli
or
aam
mov
in
mov
das
out
addr16
cltd
pusha
dec
iret
adc
ret
cmp
mov
mov
inc
inc
mov
inc
rolb
shl
mov
add
mov
push
adc
sub
data16
cltd
mov
xor
sbb
mov
mov
icebp
sub
add
leave
lds
lock
xor
adc
data16
out
push
push
adc
pop
outsb
jg
aaa
and
repnz
inc
or
in
popf
and
cmp
xchg
push
jne
jp
rcr
lret
add
cltd
pop
push
lret
pop
xor
mov
mov
daa
jae
add
dec
push
xor
mov
pop
loop
psrlq
xchg
push
ret
sti
lock
mov
pusha
push
dec
push
ss
insl
jbe
stc
mov
jbe
fs
jecxz
jp
push
scas
lahf
ret
cmpsb
mov
cld
out
mov
andb
mov
mov
jne
incb
push
mov
jmp
addr16
jnp
pop
mov
out
sub
or
fdivrs
sbb
lret
test
cmp
movsl
add
jl
sub
popf
adc
pop
mov
fidivl
mov
pop
inc
sbb
add
xor
sub
ja
dec
repnz
in
pop
xchg
xor
pop
pushf
sub
rorl
jl
push
jle
sub
inc
repz
sub
in
dec
js
mov
addr16
cs
adc
fldenv
test
out
push
test
fsubs
jb
jns
stos
out
xor
outsl
fimuls
xchg
in
cmpsb
rcrb
lret
adc
bound
insl
rolb
stc
jnp
in
fs
push
pop
xor
cltd
jb
dec
dec
and
cmp
xchg
mov
ja
push
rcr
out
stos
mov
hlt
and
adc
push
push
out
mov
adcl
or
push
add
shrl
lods
adc
imul
and
push
or
pop
xor
xchg
add
push
hlt
lret
sti
lcall
iret
mov
push
mov
gs
dec
jmp
pop
ljmp
mov
aas
test
jae
mov
add
push
lcall
xor
jno
cmpsb
sbb
into
cltd
sti
test
or
push
divl
pop
inc
xor
xor
mov
cmp
fsubs
xchg
fisubrl
and
jmp
int3
or
pop
popf
xchg
mov
outsb
and
mov
popa
loopne
in
and
xor
cmc
add
pop
popa
xchg
stos
xor
lods
cs
xchg
add
jmp
mov
lds
jge
push
std
jg
stos
pop
mov
xchg
sbb
jmp
repz
les
out
cli
leave
sub
inc
leave
aad
clc
pop
jmp
mov
outsl
xor
test
fs
push
test
add
push
sbb
lds
inc
test
and
das
add
jae
stos
loopne
mov
test
push
bound
and
or
dec
or
adc
push
aam
sub
sbb
inc
jo
rcll
jb
repnz
adcb
mov
xchg
pusha
stc
push
cmc
mov
mov
outsl
mov
cmp
out
aas
lock
and
adc
sahf
and
shl
dec
mov
push
mov
or
add
test
add
push
mov
xor
lahf
cmc
in
adc
mov
sbb
cmp
dec
mov
jo
xchg
mov
sub
add
mov
sub
mov
xchg
imul
adc
xchg
ffree
in
decb
mulb
mov
push
test
push
int3
orl
adc
adcl
fisttps
roll
adcb
mov
inc
or
dec
cmp
adc
arpl
ja
push
repnz
cmp
sbb
mul
loop
lret
icebp
xchg
push
stos
push
out
or
push
daa
jecxz
addb
dec
and
dec
push
add
repnz
bound
cmp
cmpl
outsl
mov
xor
clc
or
inc
aad
stos
xor
out
pop
xor
cmp
pop
ljmp
push
pop
mov
xlat
mull
push
push
push
xchg
adc
cmp
push
movsl
pop
cmp
ds
fsub
outsb
add
hlt
inc
xchg
imul
cmp
cvtps2pi
dec
stos
adc
pop
inc
xchg
dec
ret
subb
push
cmp
stos
dec
pop
jp
or
stos
pop
dec
outsb
imul
mov
int3
pop
shl
arpl
repnz
mov
test
dec
call
divb
in
jbe
negl
mov
stos
inc
ss
rcl
in
dec
xchg
shl
and
inc
add
or
pop
movsl
sti
int
bound
adc
mov
xor
out
xor
icebp
pop
das
cs
dec
fnstenv
mov
cmc
sbb
inc
jl
fdivrl
cmp
out
adc
or
add
frstor
mov
mov
sub
inc
add
pop
pop
aam
test
cli
cmp
sbb
sub
lods
jo
jmp
push
mov
pop
sbb
mov
jno
jmp
inc
inc
mov
rorl
sbb
out
sub
test
sahf
icebp
lea
jnp
and
int
hlt
lret
sub
xor
fst
call
xor
movb
lds
jecxz
push
mov
in
dec
xor
push
lret
dec
popa
mov
push
push
outsb
push
adc
or
add
and
std
sbb
jg
adc
cli
ret
dec
stos
in
sbb
clc
lahf
icebp
fnsave
inc
dec
nop
lods
push
mov
push
cmc
into
andl
xor
sub
mov
xor
inc
inc
dec
mov
shl
or
fwait
sbb
pop
lea
push
mov
adc
lods
jae
push
repnz
call
je
sub
mov
mov
addr16
repnz
xchg
dec
js
fsubl
loopne
lahf
enter
mov
mov
mov
mov
ja
leave
hlt
push
xor
add
scas
and
ss
and
or
dec
cmp
push
test
lcall
sub
out
es
jge
mov
push
push
sbbb
cmpsb
lahf
inc
or
sub
mov
loop
push
stc
push
ret
cmp
in
data16
jp
test
call
out
rclb
cmp
sbb
mull
movsl
add
sbb
stos
pop
insl
aas
or
negl
dec
ret
mov
std
rcll
mov
fsubs
popa
stos
xor
pop
xchg
adc
dec
pop
adc
dec
xor
idivb
popf
shr
or
je
movsl
imul
dec
xchg
mov
jae
dec
aaa
faddl
push
adc
adc
jecxz
cmp
xchg
frstor
out
sbb
xor
fstpl
lret
mov
insb
loop
fwait
leave
sub
mov
das
jno
lret
or
fidivrs
jmp
push
xlat
adc
sti
loopne
clc
mov
testl
mov
dec
xchg
dec
psllq
xor
repnz
push
scas
daa
cmp
ret
movsl
stos
cmp
test
jecxz
enter
fs
jecxz
ficoms
inc
mov
push
jae
push
scas
lods
nop
lea
jg
cli
sub
push
dec
je
adc
fisttpll
push
push
cmp
xchg
gs
js
pop
adc
out
jae
push
bound
jmp
out
scas
outsl
notb
ljmp
pop
push
aad
out
push
jg
xchg
or
fidivrl
xor
scas
cli
outsb
jnp
rolb
or
or
adc
adc
out
mov
adc
push
jbe
xchg
or
jecxz
test
jl
aad
jmp
jmp
fnsave
fstl
call
cmp
mov
les
dec
xor
jle
mov
mov
add
jae
push
pop
inc
pop
pop
push
or
lock
insl
stc
icebp
push
fwait
gs
movsl
icebp
repz
dec
hlt
ljmp
inc
scas
lods
cwtl
ret
or
pop
push
fidivrl
mov
rcll
pop
andb
out
es
or
jp
xor
cltd
inc
sbb
mov
cmp
jne
bound
jbe
sub
insl
decb
inc
push
lods
add
loopne
cmp
dec
ficomps
sbb
mov
hlt
jae
sub
xor
paddusw
jbe
in
push
push
jns
into
outsb
lock
movsb
sarb
jo
cs
data16
jno
inc
xor
notb
cli
push
into
lret
jnp
sbb
ror
inc
push
dec
or
xchg
out
add
cmp
cmp
push
das
int3
scas
dec
pop
push
shl
gs
fs
cld
mov
cmp
jb
clc
nop
sarl
add
into
push
cmpsl
test
mov
leave
xor
imul
mov
xlat
xchg
in
cs
cmc
or
xor
shll
xchg
cmp
add
push
cmp
adc
cli
inc
ret
xchg
push
lret
test
jecxz
repnz
mov
ficomps
incl
outsl
and
and
push
pop
push
add
pop
js
aad
push
pop
fisubrs
and
add
jle
add
sahf
xor
push
outsl
mov
mov
jo
push
dec
sub
outsb
sti
add
add
adc
add
in
lods
inc
sarb
int3
aaa
fstpt
jg
insl
and
pop
push
or
or
rclb
scas
mulb
or
sub
out
stos
inc
maskmovq
testl
and
cwtl
lock
test
nop
push
add
jb
push
jne
iret
imul
aas
cmp
adc
int
pop
cmc
fcoms
or
jl
aam
in
pop
jle
mov
ret
dec
pop
xchg
sbb
mov
mov
pop
aas
sbb
in
jge
cmp
mov
push
fwait
adc
push
push
add
jge
aaa
icebp
fsubs
int
jae
nop
xlat
jge
out
xchg
es
fs
push
push
mov
cmp
mov
jns
popa
cld
xor
dec
leave
out
pop
pop
jne
sub
cs
pop
ss
inc
shll
sbb
or
push
pop
dec
stos
stc
inc
sub
mov
xchg
mull
jne
aam
lret
out
mov
arpl
jg
icebp
dec
test
xor
es
pcmpeqw
xchg
aam
js
sub
fbld
cltd
fdivs
push
inc
and
loop
pop
mov
fiadds
jmp
ret
jbe
mov
fisttpll
jmp
jns
ljmp
insb
push
pop
clc
rcrb
outsl
mov
subb
clc
imul
dec
mov
ljmp
xor
xor
icebp
xor
fisubs
xchg
xor
rdpmc
adc
aam
xor
push
repz
call
icebp
ret
stos
cmp
add
popa
push
mov
jge
inc
leave
in
pop
push
daa
sahf
popf
adc
or
pop
push
mov
sub
popf
jmp
movsl
and
cmp
and
mov
je
popf
mov
std
dec
push
and
sbb
sbb
mov
scas
mov
lcall
xchg
xchg
dec
cmpsb
fs
or
dec
clc
mov
add
inc
dec
adc
and
daa
xor
icebp
adc
in
sub
add
sahf
addr16
iret
sub
lahf
fwait
mov
aad
fadds
dec
and
mov
insb
in
sub
mov
pop
out
call
xchg
mov
sbb
dec
lret
xlat
xchg
jp
imul
push
xchg
mov
int3
or
sub
inc
pop
jg
adc
push
mov
repz
jns
pop
add
xchg
ljmp
fadd
cmc
xor
repnz
out
cmpl
int3
xor
leave
addr16
ret
shll
mov
jne
rcll
adc
sub
jecxz
pushl
pop
out
sti
xor
add
arpl
das
fs
ljmp
sbb
adc
test
xor
xchg
mov
sbb
mov
out
sub
cmp
sbb
andb
fldl
fnstcw
loope
sbb
lods
dec
fimuls
push
jns
mov
pop
call
lods
test
add
int
icebp
imul
and
mov
orl
scas
xchg
repnz
or
mov
push
nop
and
aas
sub
xor
sub
stos
push
mov
or
push
mov
movsb
add
add
jp
in
xor
adc
push
sub
cld
mov
add
fistpll
xor
stos
push
mov
mov
jno
pusha
dec
jno
jne
cwtl
cwtl
ja
sub
sub
test
aaa
cmpsb
adc
jmp
stos
pop
jo
jmp
out
les
test
ret
js
dec
fsubrl
and
push
cmp
pusha
jne
iret
pusha
dec
js
inc
jb
or
mov
adc
pushf
xor
cmp
and
push
mov
jp
inc
mov
sbb
sbb
xchg
aad
or
xor
bound
loopne
add
xchg
add
arpl
mov
sub
lods
pop
mov
dec
mov
sbb
andb
fcoml
insl
ret
cltd
pop
xchg
push
sub
and
mov
in
insb
cmp
mov
cmp
in
sbb
idiv
rclb
sbb
fisttpll
push
push
dec
mov
ja
in
ret
insb
daa
push
out
adc
xchg
adc
push
lds
jp
xor
jb
mov
pop
ret
pushf
leave
hlt
or
std
insb
aam
mov
sbb
loop
jecxz
sub
aad
cltd
mov
mov
sub
cli
test
and
pop
mov
add
std
fnstsw
incb
jbe
negl
push
sarl
and
ret
pusha
inc
and
in
scas
jne
into
shl
test
ret
dec
jo
jmp
fs
std
cmp
pop
sub
push
pop
xor
adc
push
jmp
int3
nop
loope
aaa
sbb
jo
mul
clc
in
mul
inc
xlat
std
mov
sbb
xor
xlat
test
out
add
dec
sbb
aas
and
cwtl
inc
lods
nop
cwtl
add
dec
lret
jmp
mov
mov
sbb
daa
rorl
das
and
dec
ret
andb
xchg
in
jbe
pusha
mov
push
bound
dec
dec
insl
scas
je
subb
imul
cmp
cmp
mov
adc
dec
sbb
jno
pop
cwtl
cmp
test
adc
hlt
cs
ja
jl
jns
and
cmp
mov
push
pop
sub
and
jg
setnp
sti
stos
sub
jge
mov
inc
add
stc
cmp
lods
dec
jb
outsb
fwait
movsb
test
in
push
jl
mov
std
in
xchg
push
mov
pop
arpl
cmp
sub
push
int
imul
jmp
iret
sbb
sub
mov
cmp
pop
push
out
fisttps
inc
add
ljmp
dec
icebp
inc
fisttpll
mov
frstor
mov
mov
je
aad
les
ljmp
aaa
jb
jns
cld
ret
xchg
popa
outsl
ja
push
rorb
mov
and
cmpsl
in
adc
les
pop
insb
xlat
sub
cmp
cltd
or
aad
mov
push
cs
jae
loopne
fildll
mov
xor
dec
ret
pusha
sub
pxor
push
mov
cld
divb
fxch
jb
adc
mov
repnz
movsb
pop
pop
nop
mov
das
add
cmpsl
stc
prefetcht1
push
scas
je
cmp
lds
pop
mov
sub
je
mov
insb
xor
inc
insl
aam
mov
cmpsb
aaa
pop
jae
lcall
xchg
and
mov
jnp
shrl
cmp
out
push
sub
iret
les
outsl
shrb
jae
adcl
mov
dec
in
push
cmp
jb
enter
fwait
mov
xchg
rcrb
pop
pop
mov
mov
inc
push
stos
sbb
jbe
jp
ss
mov
dec
stos
out
sub
adc
or
mov
jp
jo
push
and
push
stos
in
or
cld
rcl
sbb
jbe
jmp
std
mov
out
dec
popa
mov
jmp
fcmovu
inc
xchg
ja
scas
push
mov
sbb
fisubrs
adc
xchg
xor
and
pop
sarb
fcmovnbe
cmp
out
cmp
test
xor
loopne
jge
push
insl
jp
test
je
loop
dec
mulb
movsb
hlt
inc
xchg
push
push
mov
call
inc
sub
aaa
and
jl
jle
cmp
rcr
gs
repz
mov
pop
jno
pusha
or
xor
movsl
sahf
cmp
shll
lahf
inc
hlt
jb
adc
inc
mov
in
adc
sub
sbb
pop
pushf
adc
js
lahf
sbb
push
or
jl
insb
jae
rclb
dec
mov
inc
aaa
rorl
ja
out
in
out
bound
lret
mov
push
aas
lret
jle
mov
push
lahf
add
mov
adcb
jg
hlt
jbe
faddl
mov
jmp
sbb
fidivrs
in
push
fistps
jne
and
clc
shll
movsl
xchg
sub
popa
cmp
lcall
mov
jle
clc
and
shll
push
dec
add
ja
mov
inc
or
inc
mov
xchg
roll
jnp
js
sbb
fisubrs
dec
and
inc
aam
outsl
cmp
or
and
push
test
add
mov
sbb
aad
inc
xchg
pop
add
shlb
rcrl
iret
push
sbb
out
stc
pop
es
sub
ret
loopne
sarl
lods
nop
lret
jg
aam
dec
cmpsl
mov
fmull
sbb
test
je
aam
pop
xor
sub
popa
xchg
scas
pop
and
insb
pop
repz
divb
mov
mov
inc
movsb
pop
mov
jns
dec
cs
mov
adc
dec
push
dec
dec
jp
loopne
mov
pop
mov
cli
or
imul
out
lods
xchg
call
ds
xchg
ficompl
in
xchg
and
ret
sti
mov
shll
cmp
xchg
sub
fwait
aam
in
or
jno
xchg
rcrl
or
fnstcw
fidivs
mov
or
out
adc
cld
or
jbe
jl
mov
jns
enter
xor
leave
pushf
add
rorb
dec
mov
std
inc
repnz
push
jmp
cltd
xlat
mov
push
inc
sbb
push
arpl
jb
pop
divb
sbb
adc
aam
pop
cmpl
inc
push
jno
out
repz
pop
lcall
popf
xor
cmp
mov
pushw
insl
clc
frstor
mov
hlt
xchg
sbbb
ss
adcl
dec
cld
xorl
mov
dec
lock
and
push
mov
mov
adc
cs
sub
cmp
nop
lds
aam
pop
into
push
sahf
cmp
fsubl
pop
xchg
out
add
mov
and
mov
inc
cs
in
out
mov
ss
fstl
shlb
xchg
stos
in
testl
idivb
xchg
ficomps
adc
es
jb
mov
lock
xchg
and
repz
leave
mov
add
ss
sub
xor
sbb
lea
and
and
mov
jnp
sbb
xor
enter
fiaddl
mov
add
sub
mov
jp
push
mov
out
jl
sub
mov
jnp
je
cmp
test
rol
lret
pushf
sub
mov
popf
jg
mov
jp
mov
and
or
push
outsb
mov
add
jl
mov
and
imul
inc
ret
fstpl
rcrl
push
shrb
xor
xchg
adc
inc
cmp
jmp
pop
call
mov
rcr
adc
sbb
fwait
add
les
cltd
lods
mov
jg
or
popf
push
xchg
in
rolb
ja
inc
nop
jo
out
jl
std
mov
insl
imul
mov
add
mov
adc
and
add
loope
pusha
loop
or
mov
das
stc
push
jns
adcb
cld
loopne
cmpsb
cwtl
idiv
mov
loope
in
js
xor
or
fisttpl
xor
dec
sub
cmp
aam
jbe
and
jmp
xchg
inc
popa
add
movsl
cwtl
test
jle
jmp
cmp
dec
inc
mov
loopne
xor
inc
xchg
je
xchg
xor
imul
adc
orb
imul
outsl
lret
push
sbb
pushf
scas
dec
ja
addr16
ret
insb
shrb
add
in
leave
sub
xchg
cs
jp
mov
jno
pop
imul
in
in
sub
mov
cmp
jmp
imul
lea
mov
inc
xchg
push
fldl
jmp
xchg
cmpsl
xlat
lret
or
sub
je
push
test
mov
xor
out
add
mov
xor
pop
mov
je
iret
shll
sti
cmp
jl
int
xchg
ss
sbb
mov
enter
push
xchg
adc
or
rol
js
cltd
inc
fidivs
jp
dec
popa
mov
add
xchg
push
shll
cmp
mov
xchg
mov
std
xor
sub
mov
push
lret
adc
add
xchg
push
jne
lret
cltd
fimull
push
xor
jo,pt
testl
xchg
pop
or
jno
sahf
mov
clc
add
out
incb
add
pushf
cmpsb
sti
lods
lea
ds
jns
sub
loopne
push
push
push
adc
mov
call
ror
test
add
push
inc
arpl
shll
lahf
cmpsb
or
lcall
add
mov
es
rcr
mov
jge
sarb
lcall
ss
mov
jo
subb
add
and
inc
cmp
std
jl
and
and
or
out
notl
jno
sub
fdivp
xchg
adc
xchg
outsl
adc
jg
gs
cltd
push
aas
incl
cmp
mov
cmpsl
sbb
jmp
pop
mov
insb
add
insb
rorb
adc
ret
es
ret
lahf
negl
aaa
xor
pop
mov
cmc
insl
mov
xchg
mov
outsb
cwtl
mov
pop
push
and
add
aam
lahf
xor
out
adc
cli
fnstcw
mov
aaa
mov
sahf
cmp
mov
add
mov
xor
cmc
pop
xor
mov
out
push
pop
jbe
mov
mov
jb
adc
decl
repz
or
insb
mov
adc
pop
sub
movl
and
data16
fldt
push
add
out
jo
fs
out
sbb
xor
out
push
add
insl
jecxz
add
pop
or
adc
jl
incl
stos
inc
cmp
sub
sbb
idivb
and
int3
rcrl
mulb
and
and
rol
rcll
dec
jmp
or
mov
pop
xor
mov
pop
xor
fwait
lds
call
inc
push
inc
pop
out
shrb
shlb
mov
add
inc
mov
int
or
mov
xchg
dec
pop
add
xor
pop
jb
xor
jge
push
pop
adc
cmp
insb
mov
dec
cmp
mov
cmc
movsl
arpl
gs
adc
mov
sub
inc
mov
pop
imul
mov
pop
or
movaps
addr16
dec
inc
icebp
xchg
nop
fistl
dec
incl
pop
sbb
push
imul
je
add
cmp
or
push
sbb
sahf
jbe
outsb
sub
jbe
adc
sbb
sbb
je
sub
adc
mov
hlt
pusha
fdivr
mov
ds
daa
or
push
fnstsw
adc
decl
mov
sbb
xorl
dec
addb
popf
adc
xor
xor
scas
pop
cmpsl
loopne
scas
pop
shll
test
dec
xchg
iret
mov
in
pop
test
incb
das
fs
dec
mov
dec
stc
or
sbb
test
mov
std
sahf
es
jbe
pop
xor
enter
mov
sahf
std
out
adc
sbb
xor
dec
and
mov
add
out
daa
cmp
mov
iret
ret
push
or
enter
fmull
es
mov
pop
push
dec
mov
mov
cmp
fdivr
icebp
push
and
cwtl
xchg
cmp
lods
lods
xlat
out
lret
lods
insb
cmp
pop
push
leave
cmpb
cmc
js
jnp
or
xchg
ret
repnz
jle
pop
sub
cmp
inc
jae
sub
cli
sbb
jmp
mov
cmp
popf
mov
mov
insb
fs
pop
stc
loopne
data16
jb
and
jbe
jno
aam
mov
lret
jp
clc
clc
aaa
imull
repnz
inc
hlt
rcrw
int
cmpsl
jno
inc
push
inc
mov
ss
int3
shlb
jmp
lock
js
lods
call
inc
pop
push
dec
or
test
sub
test
jge
lea
lods
xchg
mov
les
and
xchg
call
scas
pop
and
and
loope
scas
push
int3
adc
shll
jl
das
mov
mov
pop
addl
pop
xor
leave
repz
mov
out
mov
in
mov
cmc
mov
inc
jae
jbe
hlt
pop
push
jp
push
lret
mov
adc
fscale
pop
scas
repz
ret
aaa
jp
divl
sub
outsb
fcom
test
es
mov
pop
or
add
xchg
xchg
js
adc
xor
jge
in
xor
inc
popf
cmp
jge
cmp
push
xchg
and
mov
int3
js
xchg
mov
popf
fmuls
cmp
into
cmp
and
cwtl
sti
in
jne
aad
jne
lds
dec
xlat
xchg
add
movsb
xchg
jecxz
loop
orb
gs
cmp
inc
rcrb
cs
jle
cld
dec
xor
neg
xchg
push
aam
cs
mov
xchg
movsl
setns
sbbl
fnstsw
jge
jg
cltd
sbb
cld
orl
push
in
jg,pt
data16
add
cmp
sub
insb
or
ja
or
mov
and
jne
rcll
pop
mov
jmp
repz
mov
dec
jno
mov
jae
icebp
sbb
push
mov
ja
andb
insl
fiaddl
pop
xchg
subb
xchg
add
sub
mov
pop
std
repz
xchg
es
push
mov
pop
push
ja
or
and
pop
mov
sub
mov
push
sub
push
push
pop
js
popf
loope
or
dec
vpsubq
xor
pop
dec
jp
lods
bound
xchg
mov
loop
enter
add
in
cmp
ljmp
shl
jae
jle
nop
sub
mov
sub
ret
out
or
or
loopne
fdiv
scas
addr16
add
xor
xorl
subl
sbb
push
xchg
pop
xor
adc
mov
cmp
mov
inc
idivl
leave
xor
xchg
mov
jl
add
dec
xchg
xchg
imul
sub
shl
subl
nop
mov
rclb
and
cmc
jbe
push
out
fwait
or
mov
fsubs
in
inc
outsb
jo
xor
dec
icebp
test
adc
sbb
jne
cmpsb
out
cltd
adc
push
ljmp
mov
cmp
jmp
movzwl
cs
inc
dec
repnz
into
test
stos
cli
addl
jns
packsswb
daa
inc
je
lods
cmc
jne
mov
out
cli
or
aaa
cmp
les
scas
mov
xchg
clc
xor
setno
arpl
sbb
xchg
popa
out
iret
cmc
xlat
xchg
daa
sbb
inc
or
adc
sub
outsl
hlt
shl
daa
adc
negl
js
jo
jecxz
adcb
push
jo
stc
add
ret
outsl
jno
add
icebp
jle
dec
adc
or
test
xchg
xchg
fsubrs
cmc
lods
inc
jle
andb
fists
cmp
je
and
xor
lock
mov
ja
clc
pusha
pop
jne
mov
mov
mov
ret
xchg
lods
or
nop
or
ljmp
sti
aam
imul
iret
and
test
sbb
mov
xchg
daa
lods
pushl
xor
sbb
xor
sti
mov
xchg
xchg
repnz
add
xor
xorb
in
jnp
pop
inc
fisubs
jo
xlat
jbe
scas
aad
add
je
lret
enter
xchg
test
xor
loop
mov
fiadds
adc
fimull
mov
pop
mov
cmp
xlat
lret
in
movsb
dec
xchg
lahf
insl
outsb
adc
jle
cmpsl
mov
xlat
pop
mov
pop
xchg
pop
jecxz
out
imul
leave
inc
jae
sub
mov
or
iret
pop
jne
fimuls
in
xchg
add
and
nop
stc
and
je
mov
jb
add
and
add
insb
out
push
dec
loop
jb
test
add
add
jbe
addr16
imul
scas
mov
xlat
cmp
jmp
mov
push
cmp
cld
or
lea
pop
mov
repz
aaa
mov
xchg
aam
sub
mov
fcompl
push
call
jae
push
adc
cmpsl
sahf
jge
out
add
daa
or
sbb
jnp
pop
les
lahf
cmpsl
int
and
dec
dec
sub
roll
push
jae
into
pop
mov
jbe
daa
bound
stos
shrl
push
jbe
lcall
and
mov
cltd
cmpsb
sbb
loopne
push
in
in
movsb
adcb
sbb
lods
ret
inc
mov
adc
sub
pop
ljmp
call
push
js
std
mov
es
pop
inc
adc
int
movsl
jo,pt
sbb
jmp
pop
pop
mov
ds
fdivrl
fwait
stc
push
jp
pop
fs
mov
jle
mov
insb
dec
jg
std
pop
in
loope
mov
jns
jo
mov
outsl
repz
lahf
cmpsl
pop
mov
push
add
mov
lret
lahf
leave
adc
das
sub
sarl
int3
stos
lock
sub
sbb
inc
fadd
mov
push
rolb
out
cmp
fcom
sbb
pop
pop
push
leave
into
push
xor
jbe
mov
push
and
mov
mov
out
movb
data16
cmp
jne
push
outsl
pop
gs
pushf
or
inc
mov
andb
adc
mov
add
js
fadds
inc
dec
repnz
cmp
jns
fwait
test
stos
nop
popf
mov
push
push
aad
out
pushf
adc
dec
dec
or
push
pushf
cmpsb
cmp
outsl
fs
jnp
inc
sbbb
imul
data16
into
addr16
std
inc
notb
ret
scas
mov
enter
je
ret
cmp
push
xchg
stc
ret
jle
clc
leave
sbb
and
shll
sub
dec
and
outsl
mov
roll
cmp
lret
mov
pop
jg
mov
popa
xchg
jg
xor
cmpb
bound
sbb
int3
rolb
mov
aaa
xchg
out
mov
fsubrs
mov
scas
dec
in
and
shlb
lret
and
mov
push
test
and
xor
test
mulb
sbb
xchg
lods
scas
int
add
lcall
mull
aaa
les
sbb
stos
dec
mov
fnstsw
inc
pop
fiaddl
mov
test
xlat
inc
jmp
ficomps
jmp
int3
mov
inc
and
stc
and
rcll
push
xor
mov
cmp
packssdw
sub
push
and
js
fwait
repnz
mov
test
push
iret
mov
outsb
sbb
inc
sub
jle
and
das
mov
cmp
pop
pop
jp
pop
rcl
jb
cmp
fs
jmp
or
lea
add
cmp
pop
cmpb
fstpl
test
scas
xchg
pushf
es
aas
in
mov
test
mov
nop
mov
pop
icebp
lfs
jp
ss
xor
lods
dec
in
stos
int
pop
ds
lcall
pusha
mov
mov
mov
ljmp
mov
fidivs
sbb
cld
pop
daa
jmp
bound
mov
push
add
sbb
int3
lcall
fmul
in
imul
push
cld
mov
cmp
push
pop
loope
sbbb
push
in
loope
jnp
mov
or
ss
clc
add
sbb
mov
lret
in
fsts
pop
es
es
cltd
loop
das
cld
sub
xchg
jmp
imul
aas
ds
movsb
xchg
imul
push
dec
leave
inc
jp
mov
lods
sub
sub
push
jns
push
arpl
out
mov
jg
or
lahf
ja
sub
xchg
push
inc
mov
adc
stc
clc
push
pushf
sbb
bound
sarl
popa
rolb
and
pop
dec
and
xor
cmpsl
xlat
add
lret
sbb
lock
out
pop
shlb
and
dec
adc
imul
in
fsubrs
stos
cmp
lea
lcall
or
imul
ds
repz
fstpl
std
mov
xchg
cmp
sarl
jg
mov
mov
cmp
je
add
lahf
pop
sbb
cmp
sbb
jmp
cmp
and
jae
flds
pand
or
sbb
jno
jecxz
lret
ss
mov
jns
or
mov
out
ljmp
inc
and
sub
sbb
mov
cmp
sbb
xchg
fisubl
and
testb
adc
clc
pop
xchg
popa
inc
or
cs
stc
push
scas
dec
pop
jecxz
in
push
add
cld
sahf
jb
jle
pop
je
xor
dec
notl
mov
jmp
lods
ficoms
fdivr
mov
jp
xor
arpl
mov
jns
pop
ss
daa
fs
shll
cli
fnstenv
mov
outsb
imul
jmp
aad
lods
sti
imul
lock
stos
loopne
sbb
mov
push
and
mov
mov
and
cld
mov
inc
jmp
mov
lret
pop
xchg
enter
out
or
hlt
clc
rcll
sbb
pop
aam
loop
shlb
add
mov
mov
mov
dec
adc
jle
xor
and
push
popf
push
lock
imul
xor
test
sarl
rcl
xchg
daa
enter
pushf
sub
adc
add
push
xor
add
or
push
fwait
orb
cmp
inc
push
lock
stc
in
gs
leave
push
xor
pushf
nop
je
jno
sub
scas
test
adc
inc
mov
pop
bound
jae
adc
mov
or
sub
sbb
mov
sub
dec
jl
lods
lock
inc
retw
dec
push
push
dec
jo
loopne
iret
das
jp
clc
jle
mov
inc
adc
xor
cmp
and
cmp
sbb
popf
imul
pop
lds
add
int3
nop
pop
lcall
out
and
mov
jno
jle
xor
insl
loop
push
push
lret
dec
jnp
int3
test
inc
subb
sub
or
jno
pand
cmp
fildl
adc
pop
fists
out
pushf
je
cmovo
lret
and
out
jl
xor
out
add
stos
or
dec
and
mov
inc
sbb
add
push
cld
insb
subl
or
ret
adc
out
mov
sbb
pop
out
sbb
cld
add
adc
mov
test
pop
es
inc
lods
push
rorb
pop
std
test
cmp
mov
pop
testb
pop
js
fcoms
mov
jge
movsl
es
leave
scas
data16
jmp
punpckhdq
add
subb
xor
add
inc
inc
sub
sahf
out
and
aam
das
enter
fstpl
mov
push
sbb
outsb
cmc
mov
insb
nop
stos
std
out
mov
xlat
enter
icebp
sahf
add
call
jge
idivb
push
sbb
pop
sub
or
mov
cmc
adc
in
shrl
inc
xchg
mov
mov
out
loopne
or
add
int
test
rcl
pop
jecxz
in
divb
pop
ret
out
in
lahf
mov
or
pushf
adc
jo
sub
inc
push
xchg
fnsave
pop
dec
lahf
cmp
outsb
sub
xchg
push
push
int
imulb
pop
adc
xchg
push
mov
push
fisttpl
mov
jl
or
adc
mov
xchg
outsl
mov
sub
mov
in
sahf
std
or
adc
ja
pusha
push
sub
dec
int
pop
jl
pop
push
test
jb
push
popa
int
lods
ret
push
int3
xor
adc
ds
pop
test
lahf
mov
pop
sub
jle
sub
xor
popf
inc
fidivl
and
movsl
clc
sub
push
dec
out
dec
pop
insb
std
fdiv
test
rorb
sub
bound
mov
pop
add
jmp
sbb
in
neg
cwtl
stos
les
dec
addb
mov
nop
lcall
mov
add
xchg
movsl
xchg
call
je
mov
jg
stos
int3
movsb
loop
test
divl
test
clc
adc
jno
and
popa
jnp
sbb
popa
adc
jge
mov
mov
mov
jae
loope
mov
cmpsb
pop
in
jg
jb
and
push
dec
aam
ds
int3
jecxz
mov
std
aad
loop
les
cmpsb
shll
loopne
lock
movsb
pop
test
dec
stos
hlt
xchg
sti
pop
test
mov
cmp
pop
xchg
pop
sub
cltd
jmp
jno
jae
out
clc
sbb
adc
push
insb
sub
mov
sar
imul
sahf
xchg
loope
cmp
lret
negb
inc
insb
in
nop
mov
inc
sub
or
lahf
nop
pop
push
pop
mov
imull
or
mov
sub
push
cmp
or
add
aas
adc
test
ds
mov
xchg
push
cmc
loopne
xlat
push
xor
lods
loop
push
imul
sti
popf
adc
hlt
mov
mov
xchg
imul
ljmp
sub
add
sbb
cmc
cld
pushf
mov
std
push
clc
sub
xlat
outsl
loop
hlt
push
mov
push
sarl
push
in
jae
shrl
mov
pop
pop
push
jmp
lret
jecxz
pop
dec
inc
push
sbb
lock
fld
pop
mov
add
cmpsb
or
sbb
repz
fnstsw
mov
cld
mov
rcrl
bound
pop
xchg
jge
mov
sbb
mov
mov
sahf
pusha
sahf
mov
mov
cmp
sub
mov
dec
mov
xor
gs
fs
xchg
add
insl
jne
popf
sbb
mov
std
mov
ja
jae
loopne
cs
aad
ljmp
xor
mov
pop
popa
add
mov
xchg
jnp
repz
shrl
sbb
jge
mov
push
cmc
adc
arpl
gs
cwtl
push
leave
movsb
cmp
scas
sti
adc
jle
test
jne
adcb
insb
ljmp
dec
fistps
jp,pn
movsb
cmp
pusha
in
cmpsb
lret
cs
pop
inc
and
or
aam
and
cmc
lods
aad
int
cld
sahf
inc
bound
dec
mov
and
xorl
add
sub
inc
push
mov
push
add
das
xchg
dec
cmp
ret
lock
pop
es
cmpsl
push
js
ja
bound
or
aad
mov
fucomip
or
pop
pop
jns
ja
inc
fadd
fbld
idiv
fwait
testb
mov
inc
outsl
sbb
ljmp
insb
jno
fmull
jne
arpl
or
stc
and
dec
out
stos
bound
jl
pop
pop
push
cmp
in
dec
cmp
xchg
mov
or
std
icebp
mov
sub
jge
js
pop
pop
xchg
push
mov
mov
or
add
or
mov
lret
inc
movsb
inc
xlat
sbb
loop
pop
loopne
push
jecxz
xchg
out
jo
cmp
jp
push
adc
and
push
mov
popf
cmp
cmpsb
mov
in
dec
movsl
dec
jge
aam
loope
clc
sarl
inc
fistl
cmp
aas
scas
jns
sub
fimull
lds
dec
sbbl
mov
outsb
cmpb
flds
insb
cltd
add
jp
mov
mov
cwtl
xchg
jcxz
push
mov
sub
lds
or
imul
mov
clc
into
push
lock
add
cmp
or
xor
lret
rcrb
lahf
notb
cld
inc
sub
out
xchg
adc
mov
add
mov
fs
or
mov
mov
adc
mov
in
sbb
mov
fprem
pop
lcall
dec
or
push
gs
push
mov
inc
decl
pop
repz
inc
mov
inc
in
push
pop
push
xor
test
sbb
insb
sub
rolb
cmp
add
xchg
pop
loope
lahf
jb
mov
sub
into
mov
xchg
call
dec
cmpsb
ret
mov
xchg
out
aaa
or
cmp
outsb
lret
inc
lret
jg
imul
out
pop
ret
cli
icebp
scas
mov
idivb
adc
sbb
cmc
out
and
gs
pop
add
pop
das
pop
fwait
cltd
test
sub
pop
jne
cmp
cs
inc
jb
rcrl
mov
cmpl
lret
scas
sub
push
imulb
aam
mov
inc
adc
addr16
mov
lods
mov
mov
push
sahf
lret
adc
orb
adc
push
cmp
adc
popa
sub
mov
and
cltd
scas
cwtl
lea
xor
inc
out
cmp
jge
outsb
push
jmp
loope
negb
jmp
aaa
cmp
lret
or
inc
seta
cltd
sbb
mov
cwtl
pop
and
repz
mov
jae
sbb
inc
in
jge
popa
adc
inc
cmpsl
jmp
fidivrl
dec
push
aad
xchg
mov
lahf
lea
mov
xchg
push
icebp
mov
subl
or
mov
mov
mov
dec
imul
jg
add
xchg
jmp
jp
sbb
push
mov
fsubs
ss
push
out
pop
fimull
insb
jno
cli
sbb
or
dec
mov
loope
push
dec
je
adc
cmc
dec
in
or
or
sub
stos
mov
and
fdivrs
adc
idivl
cmc
mov
mov
add
outsl
cmpsl
or
inc
es
sub
and
push
in
enter
sbb
aaa
inc
lds
ljmp
cmpsl
adc
das
test
out
popa
ljmp
pop
mov
dec
cmpsb
mov
adc
dec
xor
cmp
push
fidivl
notl
js
negl
lods
pop
data16
fldcw
mov
add
add
shl
lret
cmpsl
sar
ror
test
pop
jle
out
dec
push
mov
mov
cmp
dec
sub
pop
add
adc
clc
jmp
inc
in
dec
mov
xchg
outsl
jle
repz
inc
jg
push
dec
dec
gs
lock
lret
xor
xchg
jb
jne
pushf
pop
inc
fistpll
mov
or
and
mov
mov
adc
mov
punpckldq
ja
rcl
arpl
and
and
pushf
outsl
popf
mov
lea
inc
lock
xchg
dec
push
fsubrl
pop
jp
mov
out
inc
aam
add
push
mov
push
push
sub
aas
jmp
fwait
xor
xchg
mov
iret
hlt
and
ret
fwait
bound
and
icebp
int3
ret
xor
pusha
pop
sbb
pop
outsl
xchg
roll
test
in
xchg
xor
xor
in
call
xchg
mov
pop
pop
cmp
outsb
jno
sti
inc
idivb
push
mov
in
inc
cmp
js
mov
sti
loopne
jo
fwait
xor
xor
jle
sub
scas
inc
hlt
int3
cmp
lahf
sub
push
adc
popa
mov
inc
sub
cmc
data16
sub
in
push
dec
push
push
stos
inc
sub
mov
outsb
add
bound
dec
in
leave
inc
cmpsb
roll
in
repz
dec
xchg
mov
ljmp
mov
dec
pop
test
sub
in
jg
orb
mov
pop
clc
cmpsb
dec
sahf
popa
pop
adcb
fsubp
mov
sub
bound
outsl
xchg
fiaddl
bound
repz
cmp
stos
je
mov
mov
jae
in
pop
mov
aam
add
and
mov
fcmovu
pop
aas
enter
xor
mov
pushf
mov
stc
ds
xlat
push
push
cmp
adc
sbb
dec
jle
push
push
cwtl
jmp
pusha
andl
xchg
lea
xor
or
xor
in
xor
add
adc
test
in
lahf
dec
jns
clc
scas
inc
jbe
sbb
cltd
xor
rclb
enter
push
pop
mov
into
or
lea
shll
jo
sbb
arpl
jne,pn
imul
and
pop
lret
xlat
cmp
repnz
into
out
jnp
lods
add
out
repnz
mov
mov
stos
jmp
outsb
neg
testl
clc
stos
jge
sub
pop
icebp
push
ja
cmp
xchg
xor
stc
aas
push
inc
mov
jb
stos
imul
fldenv
js
aaa
mov
push
repnz
inc
repz
aaa
test
ljmp
xchg
dec
imul
dec
in
lods
sub
inc
pop
ljmp
xor
fsts
daa
xor
mov
sbb
jns,pt
movsb
ss
imul
test
or
aaa
imul
mov
sub
out
adc
fcomp
or
xchg
and
bound
adc
vmovss
jbe
inc
pop
nop
xor
cld
sbb
jl
pop
aam
xchg
push
sbb
lcall
inc
pop
sub
push
frstor
hlt
adc
jp
je
and
popa
sub
mov
mov
js
or
push
pop
ror
jnp
ss
and
jl
scas
pop
sbb
xchg
push
mov
sub
in
mov
outsl
and
xor
lea
mov
sub
mov
xchg
inc
xchg
rcrb
pop
je
pop
mov
in
popa
lcall
xchg
or
pushf
mov
jo
or
jge
pop
iret
test
add
mov
jg
out
pusha
cltd
in
inc
mov
jno
test
movsl
dec
ret
inc
clc
pop
outsb
cli
mov
addr16
cmp
sbb
js
sbb
in
push
sbb
shl
or
test
sti
ja
aam
int3
fadds
mov
or
data16
push
sub
psllq
jae
push
adc
popa
add
arpl
pop
dec
sbb
inc
cmp
adc
cltd
jo
std
push
mov
sbb
lret
xor
cmp
dec
mov
hlt
or
mov
or
nop
or
lods
dec
cwtl
neg
push
mov
inc
mov
incl
scas
arpl
scas
js
push
ljmp
xor
dec
or
mov
and
loop
cmp
inc
sbb
lahf
adc
cmp
xchg
test
xor
cmp
add
and
stc
adc
mov
xor
pop
arpl
lret
addl
mov
outsl
jne
sub
sub
inc
push
sbb
fwait
ds
push
sbb
fwait
mov
mov
iret
fwait
call
dec
out
dec
sbb
mov
push
setge
adc
hlt
js
rcll
lods
jecxz
and
out
ja
outsl
addr16
mov
lahf
adc
addb
xor
arpl
xor
push
mov
sbb
dec
popa
insl
ljmp
jns
sbb
into
stos
inc
mov
dec
or
jmp
hlt
jle
push
push
repz
mov
aas
movsl
dec
push
shll
or
in
mov
jmp
rorl
stos
adc
shll
aam
mov
sbb
mov
cmp
push
lcall
adc
loop
or
and
and
out
push
not
roll
cmp
dec
jl
mov
xor
cmpsl
sub
lods
mov
fbstp
lea
cltd
mov
into
lret
pop
xchg
pop
sahf
add
fwait
mov
sub
inc
nop
add
cld
rolb
dec
sbb
outsb
mov
adc
mov
dec
xchg
inc
inc
mov
or
outsl
out
jl
ret
mov
mov
lock
test
into
xor
mov
or
dec
in
push
push
stos
hlt
pusha
push
pop
adc
pop
mov
push
imul
test
test
xchg
add
xchg
adc
std
inc
imulb
mov
les
ret
mov
push
sub
xchg
and
adc
cmpb
mov
or
cmp
mov
mov
push
push
push
shll
loopne
in
cs
fmull
int
pop
push
frstor
rorb
pop
bound
inc
push
push
lret
pop
jmp
inc
insl
dec
mov
lahf
and
pop
loope
scas
push
sbb
mov
mov
push
fldt
push
and
pushl
push
add
aad
sbb
jmp
jb
mov
nop
std
lock
push
dec
movsl
andb
cltd
mov
and
xor
aam
int
movsl
cmc
jns
enter
pushf
jno
int
lock
shlb
pop
jp
jbe
aas
pop
lds
and
or
adc
mov
lds
mov
fs
push
mov
xor
dec
push
sbbl
xchg
xor
cld
mov
fwait
and
sbb
inc
cmp
ds
inc
arpl
insl
add
outsl
lcall
dec
add
jb
aas
leave
aam
jo
adc
jmp
inc
pusha
sarl
cmp
xor
inc
test
mov
stos
arpl
jbe
mov
push
xchg
cmp
loopne
nop
das
pop
movsb
add
addr16
jl
mov
ret
dec
mov
fadds
in
pop
out
stos
sbb
dec
jno
fsubl
inc
ds
or
xor
sbb
xor
lea
or
cmp
stos
jbe
inc
mov
std
ljmp
fwait
mov
cli
fwait
mov
push
push
pushf
push
mov
mov
int3
cmpb
inc
gs
sub
push
aas
adc
xlat
cwtl
popa
aad
dec
and
repz
jo
in
cmpsl
mov
cmp
movsb
xchg
ret
xchg
cld
fsts
lret
imul
and
jnp
insb
sub
shll
js
popf
dec
les
fs
adc
out
pop
or
mov
sub
pusha
push
xchg
pop
jno
leave
addr16
in
pushf
pushf
add
pop
pushf
mov
ja
mov
lahf
imul
roll
test
fcmovbe
test
jl,pt
jne
in
push
pop
mov
sbb
cld
add
xchg
repz
xchg
mov
test
adc
mov
lods
lock
movsb
and
nop
dec
dec
fisubs
ret
sub
fstl
scas
icebp
mov
adcl
pop
fwait
jo
push
in
imul
lock
inc
jnp
mov
test
add
add
lret
hlt
xor
mov
das
nop
inc
dec
addb
cmpsl
add
arpl
je
jg
std
push
sub
insl
in
mov
inc
inc
sbb
popf
ss
mov
cmp
sub
les
in
adcl
lock
cmp
aas
and
xchg
cwtl
lret
jecxz
xchg
sbb
mov
loop,pn
adc
pop
mov
xlat
aam
mov
sbb
popa
cmc
arpl
ja
fbld
or
addl
push
shrb
ss
dec
stc
add
je
jge
inc
jg
dec
mov
addb
stos
mov
jg
jns
filds
fdivs
imul
popa
push
xlat
in
lahf
cmp
dec
jo
popf
pop
mov
scas
jae
sub
imul
mov
sbb
and
pop
jmp
repz
data16
push
mov
xchg
jecxz
lret
add
in
addr16
fistpl
sbb
lds
adc
sbb
mov
out
loop
adc
xor
sbb
mov
jg
inc
xlat
and
lcall
cmp
xchg
mov
scas
cmp
sub
xchg
std
std
adc
inc
mov
lods
in
loopne
out
mov
jno
or
push
sub
les
lods
mov
loopne
add
repz
xchg
push
xor
out
dec
inc
aaa
js
xchg
cmpsb
add
jmp
iret
mov
les
adc
mov
outsb
sbb
in
jg
insb
add
shl
xor
jnp
mov
negb
push
pop
dec
cli
shll
lods
imul
sbb
rol
mov
cltd
jo
repz
mov
sub
cmp
rcrl
fs
cmpsl
scas
imul
mov
sub
mov
mov
jg
mov
je
or
stos
in
cltd
xchg
sbb
sub
push
mov
dec
sub
add
lret
or
mov
jne
push
sbb
dec
es
movsl
les
jmp
aam
mov
fadds
and
test
mov
or
adc
pop
lock
pop
mov
fs
add
rol
mov
repnz
lahf
push
stos
out
mov
mov
rol
jle
nop
xchg
pop
loope
sbb
ds
test
mov
cmpsl
and
call
ret
shlb
pop
push
into
and
js
and
adc
jle
jmp
xlat
dec
ja
or
mov
cli
lret
mov
cmpl
inc
jecxz
inc
dec
movsl
jne
xchg
jbe
jecxz
xchg
in
stos
or
int3
fcoml
xchg
mov
js
paddusb
addl
inc
mov
cltd
shll
aam
pop
push
inc
jmp
ss
or
fdivrs
add
cmp
xor
lret
sarb
aaa
pop
into
orl
mov
adcl
jl
das
out
fnstcw
movsl
inc
push
sar
sarb
pop
cld
push
push
in
imul
inc
cs
or
pop
lock
out
cmpsb
out
les
add
xchg
std
jno
inc
leave
lret
mov
push
adc
pop
dec
xabort
xchg
xchg
inc
bswap
mov
inc
pushf
sahf
movsb
imul
in
ds
scas
cmp
repnz
lea
inc
mov
notb
cs
clc
rorb
outsb
nop
iret
push
popa
fs
pop
adc
out
cmc
imul
dec
dec
sub
decl
mov
sti
xor
clc
jmp
out
mov
mov
call
mov
imul
push
jne
jge
loop
pusha
jecxz
xor
mov
jno
rcrb
jge
push
inc
popf
or
jge
xlat
mov
cmc
cmpsb
xchg
or
and
sahf
push
movsb
push
pop
xrelease
ficoml
cwtl
out
cltd
outsb
std
dec
and
sub
jb
ss
mov
inc
filds
jne
aad
mov
dec
sbb
adcl
sti
mov
add
fldl
ja
adc
scas
mov
shlb
fwait
outsb
adc
or
out
pop
mov
stos
mov
inc
js
adc
rcll
push
jge
cmp
or
jae
push
repnz
and
addb
cld
sbb
pop
outsb
insb
popa
xlat
rcl
cli
mov
sar
jae
rcll
lds
and
and
mov
jno
clc
mov
sbb
aad
lcall
in
adc
les
test
out
mov
add
cwtl
lods
outsl
lods
aaa
test
push
inc
cmp
inc
pop
rol
mov
sub
lret
push
mov
pop
faddp
dec
cli
pop
fimuls
fstpt
dec
jbe
add
mov
sbb
jge
lcall
std
icebp
add
sbb
xor
and
dec
ja
mov
aad
or
mov
insl
mov
xchg
jno
pop
aam
jl
cmpsb
cmp
pop
xchg
mov
push
sub
and
lret
loopne
pop
int3
orl
mov
inc
xchg
jmp
int
insl
pop
mov
inc
cmc
xor
add
sub
and
in
and
lds
xor
or
add
inc
cmp
adc
push
in
int
call
rclb
cltd
out
push
and
mov
adc
mov
add
push
jle
ret
cmp
in
mov
inc
jno
pop
dec
mov
xchg
xlat
push
mov
popa
mov
andb
mov
arpl
idiv
nop
and
inc
sub
dec
jmp
iret
mov
inc
ljmp
imul
shr
mov
push
ficompl
push
and
ds
das
jbe
vmulss
and
aam
ss
jae
in
cwtl
inc
jb
lea
and
daa
lret
sbb
mov
xchg
jae
inc
adc
mov
xchg
mov
adc
fmulp
or
lret
sub
inc
pop
pop
divl
cltd
js
jl
dec
int3
testb
movsl
js
mov
mov
cmc
and
xchg
add
and
xchg
fs
in
jmp
rolb
sub
out
rcr
mov
xor
sahf
push
insb
sub
loope
xchg
dec
nop
gs
lea
in
in
aas
sahf
dec
jl
jns
xor
pop
dec
push
mov
inc
leave
mov
in
push
mov
mov
lret
xor
lahf
xchg
lret
jmp
sub
inc
push
push
inc
pop
xor
sub
inc
push
jne
xorb
xlat
loopne
das
stos
aad
sbb
mov
cmpsl
cmpps
xadd
xor
adc
inc
aam
inc
mov
xchg
insl
lcall
and
mov
xchg
jp
aas
jne
aaa
jl
or
mov
hlt
aam
dec
dec
ss
in
add
xor
loopne
jecxz
popa
xchg
sub
lea
xor
vsqrtps
push
xchg
ret
dec
xor
nop
stos
jl
and
jecxz
sti
das
xor
push
test
or
sub
dec
inc
xor
leave
add
movsl
dec
int3
mov
cli
pusha
jp
and
rcrb
cmp
fisubl
fucomi
mov
test
add
push
lock
mov
and
push
shl
imul
lds
aam
call
push
and
mov
cli
ds
out
lock
out
fcmovb
xchg
push
adc
adc
jl
popf
adc
mov
es
enter
push
mov
fwait
xchg
inc
cltd
or
enter
mov
lcall
jmp
push
addb
pop
pusha
popf
out
out
xor
pop
jns
mov
adc
dec
adc
add
mov
jns
enter
mov
pop
ror
add
in
dec
sub
pop
scas
inc
lock
out
xchg
xor
mov
inc
out
lds
push
imul
mov
jle
mov
inc
addr16
loope
inc
sub
push
mov
nop
fidivrs
test
cmp
sub
sti
dec
lcall
xchg
mov
or
pop
je
in
mulb
imul
enter
pop
in
dec
daa
mov
scas
loop
mov
and
xchg
mov
mov
adc
adc
imul
inc
sbb
and
movsl
xor
out
add
sub
imul
lahf
dec
jnp
adc
in
adc
sbb
xchg
cltd
popa
or
sbb
arpl
xchg
sub
pop
push
add
stos
push
stos
lcall
push
dec
shlb
movl
outsb
sbb
jle
pop
ljmp
xchg
dec
enter
pop
push
xlat
mov
cwtl
bnd
imul
fstpl
daa
in
add
fisttps
xchg
add
ss
shrl
call
sarb
shrb
jae
test
in
je
cltd
add
in
arpl
mov
out
mov
jb
xchg
jg
xchg
scas
cmp
ja
movsl
out
sbb
pop
je
lods
bound
cmp
pushl
push
add
jne
inc
mov
and
inc
push
inc
or
pop
xchg
and
inc
pushf
ss
push
add
ret
dec
data16
mov
enter
mov
out
sbb
sub
addl
pop
das
push
cltd
xchg
xchg
push
repz
mov
adc
iret
or
push
subb
dec
dec
sub
xchg
ror
or
xor
leave
cmp
jle
fstpl
xchg
pushf
mov
int
jnp
jl
daa
mov
in
xchg
mov
stc
rorl
xchg
pop
imul
xchg
aas
cmp
imul
movsl
cmp
lea
push
movsl
lock
test
push
push
jbe
decb
push
idivb
test
pusha
sub
ret
lds
push
jge
popf
pop
mull
shll
or
pusha
and
sarb
mov
pusha
mov
jge
ret
xchg
dec
xchg
outsl
fists
xchg
lret
jle
push
lahf
nop
xor
rcl
jg
mov
flds
bnd
mov
and
xchg
out
mov
test
sahf
pop
add
loop
rorb
lock
dec
inc
int3
push
ficoms
and
push
mov
ljmp
and
cli
cwtl
subl
inc
enter
pop
arpl
pop
aad
imul
sarb
inc
add
ds
cmp
pop
aaa
mull
dec
in
js
xor
dec
imul
mov
divb
or
int3
or
fwait
cmpb
mov
fsts
inc
mov
xchg
outsl
lret
out
or
inc
pop
adc
dec
shll
xorb
pop
dec
xor
dec
movsl
add
mov
adc
sbb
ss
mov
mov
hlt
imul
out
mov
push
xor
xchg
xor
and
hlt
pop
mov
popf
test
cmp
mov
fisubl
repnz
pop
dec
pop
sti
mov
js
in
int
xor
mov
data16
inc
jo
pop
dec
je
push
inc
dec
pop
mov
sbb
jb
lods
push
cmp
xor
jge
xchg
jb
clc
movsl
xorl
cs
xchg
pop
pop
arpl
bound
ss
pop
test
loope
push
mov
sti
pop
mov
sub
loopne
rcrl
pop
cmp
or
fsubrs
sbb
sub
sub
cmp
add
cmc
out
inc
sbb
divb
mov
push
xchg
rorb
fcmovnbe
fwait
jo
push
js
js
mov
push
cs
imul
dec
scas
jo
jle
movsb
fisttpl
pop
ljmp
pop
jno
pop
sbb
mov
hlt
cmpl
jg,pt
fst
add
pushw
xor
xchg
mov
andb
into
dec
jno
mov
inc
int
ret
mov
cmpsb
int3
sbb
insb
das
fdiv
mov
mov
lock
mov
jp
ss
jl
aaa
cld
aam
clc
cmpsb
cmp
mov
mov
ret
sub
nop
jg
test
mov
xor
lods
int3
in
data16
xchg
and
out
sub
shlb
std
aas
inc
push
sbb
xchg
xchg
movsl
js
mov
xchg
mov
mov
and
movsb
mov
xor
rclb
jp
into
in
mov
pop
xor
cmpb
cmp
add
repnz
or
ja
or
aad
xor
push
and
aam
repnz
fisttpl
popa
xor
dec
jmp
rcll
dec
push
push
ror
nop
jmp
int3
outsb
ss
inc
pop
imul
dec
fiaddl
cmp
and
lock
sti
jo
mov
les
test
out
lods
or
fld
not
adc
cmp
or
fsubrs
popf
ss
cmp
and
sbb
loope
icebp
testb
loop
and
rcll
cmp
sbb
jno
jb
fwait
cmp
cmp
int3
cltd
mov
cmc
int
mov
jb
dec
mov
jno
daa
mov
push
clc
repz
cmp
lahf
xor
pushl
test
scas
dec
dec
mul
ss
pop
rol
cmpsl
cmpsl
cmpsl
dec
fs
std
js
dec
push
push
xor
and
lods
lcall
push
dec
pop
jl
leave
pop
xor
cmp
push
stos
addb
adc
sub
icebp
sbb
repz
cmpsl
or
jl
addr16
jb
dec
sbb
mov
stc
inc
sub
or
sbb
int
pop
outsb
nop
xor
jb
pop
xlat
js
jg
jbe
popf
repnz
jne
out
inc
jns
pop
sahf
lret
cmp
stos
pop
js
dec
jnp
xor
add
js,pt
fmuls
xchg
stos
mov
jle
into
push
add
pop
mov
insw
push
lods
adc
mov
shl
adc
aam
leave
pushf
cmp
and
pop
fistl
inc
jecxz
flds
pop
leave
out
or
xor
add
pop
mov
dec
mov
enter
sbb
dec
mov
rcll
in
repz
inc
outsl
xor
xor
outsb
cwtl
dec
fnstenv
cmp
scas
scas
rorb
xchg
aas
fistl
or
packuswb
adc
and
inc
shll
xchg
dec
and
adcl
ss
adc
sub
push
lcall
pop
stc
jg
gs
push
test
xor
xchg
sti
sbb
or
jnp
fidivl
dec
sbb
push
inc
adc
out
push
mov
fwait
mov
dec
cmp
inc
push
popf
fistpll
loop
scas
imul
dec
adc
jp
dec
xor
adc
pop
add
div
or
js
icebp
and
xchg
push
pop
dec
and
sahf
or
cmpl
xchg
inc
add
mov
add
pop
movsl
cmp
sahf
mov
add
add
mov
fnsave
mov
jmp
push
aas
and
cmp
addr16
pop
fistpl
cmpsl
aas
jmp
mov
sbb
sub
mov
inc
push
add
pop
push
cmp
jbe
popf
mov
xor
ficompl
pop
punpckhdq
cmc
daa
push
cmp
shll
leave
xor
shrl
pop
test
cltd
sub
or
roll
in
xlat
pop
push
cltd
cld
dec
lea
mov
outsb
pop
sub
push
cld
push
rol
iret
mov
or
inc
lea
xchg
mov
jns
jmpw
inc
divb
out
add
ficoms
negb
pop
sbb
mov
jl
mov
inc
push
pop
sub
mov
inc
mov
xchg
mov
mov
xchg
daa
into
push
insb
gs
stos
jle
pop
fstps
addl
mov
mov
test
pop
or
leave
addb
jmp
mov
pop
push
jnp
sarb
or
mov
test
cmpl
cmp
test
pop
addb
and
pop
insb
inc
enter
pop
mov
fcoms
inc
inc
dec
inc
xor
mov
push
mov
push
add
dec
insb
insl
test
cmpsl
cmpsl
ds
aaa
lock
sahf
adc
mov
shrl
or
xchg
out
xlat
pop
test
jp
fsubr
sti
xlat
sbb
sub
pop
loopne
inc
bound
in
popf
nop
repnz
xchg
inc
test
xchg
add
mov
fistpl
cmp
inc
xchg
xor
sub
push
scas
ja
pop
ljmp
es
cmp
cmp
mov
rcl
fxch
por
ret
and
xchg
dec
aaa
clc
jle
ja
sbb
jns
jb
sub
jecxz
xchg
aad
fistl
stos
and
mov
ret
aas
sub
xor
jb
or
cmpsb
adc
cmp
sti
push
nop
mov
jo
push
mov
xor
lret
push
adc
in
int3
and
mov
sub
imul
push
mov
out
dec
rcr
out
daa
and
push
pop
jp
popa
imul
enter
out
dec
fcom
cmc
jns
cmpsl
mov
bnd
jp
sub
inc
cmp
cli
shl
je
inc
in
scas
lds
les
and
or
jnp
cmp
in
shlb
mov
out
mov
or
push
rclb
pusha
arpl
mov
sbb
ss
cmpsb
test
test
push
xor
cld
xor
cmpsb
mov
dec
adc
ja
inc
hlt
cmp
ffreep
cli
mov
std
xor
mov
shll
lods
pop
std
ljmp
roll
rorl
sahf
dec
cmp
cmpsl
jp
fucomip
movsb
mov
adc
mov
mov
imul
insb
jno
push
xchg
scas
inc
mov
lods
jo
and
loope
fiadds
lods
fwait
add
inc
xlat
mov
in
lds
xor
pusha
rolb
lret
in
cmp
sbb
shl
imul
mull
icebp
sub
pop
movsl
loope
scas
out
cmp
sub
dec
roll
in
scas
mov
jg
xchg
scas
rolb
lea
jne
or
insl
cmp
xorb
pop
mov
cli
cmp
sub
push
jge
bound
pushf
mov
mov
add
outsl
push
lahf
mov
and
shll
and
push
stos
enter
sbb
jg
xchg
nop
sub
jmp
fmuls
pop
and
jl
push
fcompl
daa
mov
test
data16
cmc
xchg
iret
bound
push
jno
fbld
or
xchg
les
mov
push
xchg
in
xchg
lret
mov
pop
add
rcll
push
mov
dec
int3
adc
pop
dec
pop
ret
mov
clc
sbbl
push
sub
orl
jmp
stc
mov
mov
fs
aad
jns
mov
jae
cli
addl
or
shll
push
outsl
and
ja
adc
mov
call
cmpsb
nop
jbe
dec
xor
sbb
pop
call
xor
and
cmp
fs
push
jbe
and
inc
fcoml
cmpsl
xchg
stos
imul
push
ds
xor
push
push
mov
sub
add
pop
pop
jnp
repz
test
cltd
push
sbb
jle
dec
cmp
dec
sbb
xchg
mov
cmpsl
stc
jmp
dec
mov
and
or
add
sbb
xor
cwtl
mov
ja
sbb
pop
sbb
push
cmp
les
cld
jecxz
mov
xchg
cwtl
xchg
lock
pusha
arpl
cmp
jge
and
popf
aaa
dec
jb
nop
rcl
addb
sbb
sub
push
mov
ljmp
cmpsb
xchg
adc
mov
ror
xlat
pop
inc
cmc
sbb
mov
add
in
stc
sbb
xchg
jecxz
xor
jge
add
addr16
cwtl
jge
and
sbb
mov
fldcw
loop,pt
arpl
aaa
mov
scas
ja
je
into
pop
loopne
popa
imul
daa
and
je
cmpb
call
imul
daa
cli
push
aaa
add
xlat
pop
lret
lret
stc
daa
outsl
jo
adc
sub
push
mov
and
ret
dec
ss
shrl
outsb
push
int
jge
jbe
imul
je
ljmp
mov
and
outsb
inc
inc
rcr
push
shr
xchg
xor
mul
shrl
enter
stos
test
mov
mov
je
inc
push
mov
incl
lock
lahf
mov
push
adc
jmp
push
xlat
ljmp
insb
mov
stos
fld
or
testb
mov
pop
xor
pop
sbb
mov
and
arpl
std
sbb
or
bound
fmuls
xchg
cmp
cmp
push
mov
sbbl
inc
push
mov
cltd
and
pop
sub
ror
inc
mov
sbb
sbb
xabort
mov
rcrl
cmp
scas
jmp
in
add
ljmp
and
mov
mov
jmp
push
fisttpll
pop
push
mov
andl
pop
movsl
out
or
std
push
out
mov
inc
sbb
dec
out
ret
ljmp
and
icebp
pop
push
adc
sbb
pop
jb
mov
outsb
add
sbb
xor
mov
out
mov
repnz
xor
sbb
xchg
aas
arpl
jnp
repz
fiadds
loop
push
mov
scas
sub
jns
jns
mov
mov
cmp
jge
pop
jae
int
incl
gs
cmp
into
jnp
arpl
stos
inc
mov
mov
push
jo
aaa
bound
adc
das
loopne
leave
inc
ss
dec
mov
fwait
jle
push
jmp
and
sbb
repz
test
add
jnp
jg
jge
xchg
mov
ret
mov
adc
and
mov
insb
xorl
adc
jns
stos
adc
gs
ljmp
fwait
dec
adc
sub
incl
pop
loope
push
jns
les
into
inc
addb
dec
movsb
mov
sahf
js
jno
mov
dec
lds
xchg
sti
stos
or
or
cmp
inc
cmpsl
shr
cld
negb
scas
loopne
adc
fnsave
aam
and
adc
jle
inc
pushf
pop
sub
sub
call
and
add
cmp
out
inc
sbb
dec
fsubp
push
jle
bound
xchg
jno
mov
inc
dec
xor
loopne
push
cmpsb
cs
fucomi
leave
xchg
outsl
testl
xorl
jnp
psubq
mov
or
and
rcl
and
shll
dec
fwait
xor
jmp
lock
shlb
int
fs
add
testb
mov
push
sbb
loope
push
mov
divl
lea
jg
push
mov
iret
mov
mov
js
mov
cmp
dec
add
faddl
sbb
dec
xchg
sahf
adc
pop
subb
cmp
inc
loope
fsubs
imul
pusha
out
sbb
mov
js
push
scas
jbe
out
in
je
inc
jmp
test
leave
push
lcall
mov
xchg
aaa
jmp
scas
insl
jo,pn
jmp
add
and
movsb
push
push
mov
out
scas
mov
int
das
aam
jb
loop
or
mov
sbb
pusha
int
loopne
mov
mov
bnd
pop
cmp
and
ret
xor
and
jp
mov
out
sbb
cmpsb
mov
popf
ss
pop
or
adc
mov
adc
jbe
test
rol
xchg
inc
icebp
insb
ret
jne
pop
xor
ret
xchg
lds
testl
pop
sub
and
getsec
inc
lods
pop
fmuls
mov
push
cmp
aaa
cmp
push
mov
mov
imul
mov
test
inc
jb
lds
imul
fsubl
mov
lock
fldenv
shr
fimull
cli
xor
outsl
aad
leave
pop
and
shlb
je
adc
int3
dec
sub
loop
jb
push
loope
sbb
push
or
rorb
push
loope
pushf
popa
aad
and
mov
inc
mov
adc
fcoms
adc
sub
in
cli
iret
rcr
jns
popf
scas
ja
or
push
imul
pop
jne
lcall
je
sbb
pop
or
lcall
cmp
jmp
pop
imul
fisttpll
jmp
pop
ss
mov
das
and
inc
pop
add
xor
dec
aaa
mov
addl
sbb
and
loope
adc
mov
subb
arpl
push
pop
mov
subb
jae
stos
mov
or
cmp
or
orb
push
or
xchg
ljmp
fucomip
mov
jo
cli
fbstp
jno
aad
xchg
xchg
sub
push
fucomp
js
sbb
sti
jge
xchg
xorb
cmp
gs
fsub
cmpl
movsb
jbe
adc
sbb
dec
call
clc
arpl
push
lds
outsl
icebp
mov
fisubl
data16
frndint
repz
ljmp
inc
nop
inc
bound
ljmp
dec
aad
stc
jl
mov
lea
imul
sub
ljmp
jno
jno
loope
jg
sbb
jecxz
xchg
or
adc
cmp
popa
shrl
push
lock
dec
sbb
rcll
inc
inc
popl
pop
dec
andw
dec
dec
fnsave
int
ret
int
fnstsw
out
or
or
pop
pop
mov
pop
fimull
add
cmp
jg
js
push
xor
in
cmc
add
mov
outsl
bound
fxch
outsl
and
pop
xchg
cmp
pusha
loope
pop
push
shll
inc
xchg
ljmp
push
loopne
cli
loopne
mov
mov
aas
ljmp
sbb
xor
cmp
xorb
push
pop
aaa
jp
xchg
insb
push
cwtl
movsl
daa
andb
cwtl
adc
xchg
fiaddl
inc
sbb
jne
jne
insb
lock
aaa
out
sbb
dec
imul
sti
jmp
adc
sti
fnstsw
test
mov
int
lcall
cs
push
jbe
cmc
inc
stos
mov
fdivrl
lock
sub
pop
mov
cs
test
mov
mov
dec
ret
and
dec
jmp
nop
popa
inc
mov
mov
jp
mov
push
mov
mov
clc
xchg
in
xor
arpl
int3
stos
add
cmp
ret
icebp
push
sub
aas
imul
idiv
leave
repnz
lods
add
mov
loop
mov
or
jnp
popa
mov
int3
frstor
outsb
mov
inc
test
xlat
jbe
insl
mov
cmp
fmulp
ljmp
cmp
ljmp
jp
mov
mov
cmp
and
adc
ret
outsl
and
shl
cmpsl
pop
add
push
jbe
repz
int
adc
lcall
adc
mov
sbb
daa
add
sahf
mov
arpl
pop
cmpsl
in
jle
insb
mov
mov
pop
js
lea
aas
or
ret
xchg
mov
or
mov
pop
adc
sub
lock
xchg
stc
fldcw
fstp
leave
lea
add
xor
movsl
fcoms
adc
pop
out
pop
bnd
inc
mov
xchg
add
and
inc
imull
fmul
jnp
sbb
cmc
push
fwait
or
or
decl
and
shlb
xchg
notl
cmp
pop
xlat
icebp
sbb
or
lahf
enter
jo
or
lds
and
xchg
pop
fistl
pop
call
mov
mov
orps
ret
int3
add
mov
pop
cwtl
loope
imul
hlt
ss
or
rclb
stc
icebp
mov
sbb
mov
mov
es
movsb
popa
xor
subb
shrb
jns
ret
pop
stos
xchg
jb
mov
aaa
popl
push
stc
pop
push
xor
mov
xchg
inc
add
mov
lahf
mov
enter
push
fcoms
push
inc
nop
movl
pushl
pop
jbe
stos
dec
xor
stos
dec
cmpb
vmovntdq
inc
in
stos
nop
data16
lret
lea
adc
test
test
jno
xor
or
fimull
adc
fsts
sbb
popa
cmc
stos
jmp
xor
cld
loop
mov
fs
pop
xor
xor
xchg
or
decb
adc
scas
fisubrl
jae
lock
add
rcr
aad
in
cld
lahf
loop
cltd
inc
xor
stos
sti
xchg
add
xchg
inc
pushf
xchg
adc
fs
call
add
lret
push
iret
movsb
adc
stos
add
jb
pop
scas
lcall
mov
pushf
sub
fsubp
enter
xlat
arpl
ret
loop
sarb
mov
fidivrl
rcl
mov
jne
xor
rorl
out
push
cmp
lcall
xorl
outsl
lea
orps
scas
pop
add
pop
xchg
in
cmp
jne
cld
mov
mov
dec
pop
out
xchg
in
repz
cld
inc
iret
inc
aas
test
xlat
outsl
stos
mov
adc
test
jno
pop
mov
test
mov
jns
ja
cmpsb
pop
daa
shll
test
negl
mov
push
pop
aad
sub
xlat
cmp
pop
mov
push
jmp
adc
mov
adc
inc
pop
das
mov
or
fdivrl
pop
jmp
cmp
pop
sub
bswap
popa
andb
xchg
xchg
jle
push
mov
adc
pop
adcl
cs
push
cmpsb
pop
sub
out
jg
sbb
aad
add
fisttpl
loope
mov
inc
mov
dec
sbb
insl
repnz
adc
sub
lds
jo
mov
das
sahf
iret
sbb
lds
andb
sub
and
rorb
add
call
scas
sub
jge
call
clc
mov
int
push
sbb
mov
js
lds
push
jle
nop
push
dec
push
aam
in
shrl
cld
fsub
pop
scas
adc
push
fisubrs
xchg
sbb
out
ds
pop
mov
hlt
mov
js
int3
cmp
jmp
int3
jg
dec
jbe
jns
loope
and
adc
std
or
ret
mov
arpl
pop
mov
ja
ficoml
dec
push
fnstcw
mov
jae
mov
jae
testb
daa
inc
adc
mov
adc
into
shr
popf
add
icebp
dec
rcrl
inc
inc
adc
ret
ja
sbb
imulb
mov
pop
or
mov
repz
notb
stc
into
push
or
cmc
fwait
mov
mov
mov
aam
inc
xchg
div
cmp
or
aam
push
outsb
insl
dec
leave
add
fwait
jle
jge
push
cmp
jle
push
rcr
adc
inc
inc
inc
xor
jmp
dec
outsl
push
rorl
mov
mov
mov
js
inc
xor
std
mov
stc
push
xor
and
iret
adc
add
clc
dec
cmp
movsb
bound
jmp
leave
push
fmull
pop
fldt
sbb
jmp
in
dec
pop
xor
pop
icebp
xor
push
mov
mov
adc
pop
pop
cmp
cltd
xchg
int3
loopne
push
or
rol
xchg
and
dec
call
jp
mov
cmpsl
insb
jmp
inc
es
addr16
ljmp
mov
daa
xchg
fdivs
insl
sub
mov
xor
pop
out
sbb
pushf
jne
mov
jecxz
loop
aaa
mov
sti
cltd
cmp
shlb
sub
xor
cmp
pop
add
loop
jg
or
scas
insl
or
and
jb
aam
push
adc
xor
mov
xchg
hlt
int
push
cmp
pop
enter
sti
ss
and
sbb
mov
jb
mov
popf
mov
push
jg
movsl
call
shlb
mov
push
loope
xor
add
and
ret
or
aad
sub
cmp
addr16
insb
orb
jbe
jb
dec
push
sub
add
pop
xchg
mov
mov
outsl
and
xchg
fcompl
jns
jg
icebp
inc
sub
inc
lcall
leave
inc
cmpsl
xchg
xchg
mov
nop
sarb
pop
adc
jb
cmp
mov
push
icebp
je
adc
push
leave
in
into
adc
mov
jb
xchg
push
mov
jmp
pop
xchg
shrl
mov
xchg
jmp
imulb
mulb
or
mov
push
or
mov
mov
lcall
push
mov
cmp
dec
in
xchg
mov
cmp
lcall
xor
xchg
hlt
xchg
mov
loopne
lcall
and
movsl
push
and
data16
xor
js
sub
or
xchg
or
mov
sbb
push
xchg
stos
iret
push
sub
push
push
xor
push
adc
pusha
mov
out
fs
int3
test
add
jnp
adc
mov
and
jge
lods
repnz
orb
push
sub
pop
and
pushw
sti
sbb
mov
jl
add
aad
add
xor
movsb
push
outsl
mov
icebp
dec
lret
fisubl
and
or
ljmp
mov
pop
imul
mov
ret
inc
fdivr
push
das
jae,pn
in
xlat
mov
add
lcall
jbe
sahf
out
pop
mov
push
mov
shll
mov
inc
in
arpl
add
enter
stos
rcr
test
sarl
jnp
jbe
aas
inc
test
or
or
bts
das
notl
mov
test
xchg
jns
in
cwtl
add
call
push
jp
stc
fiaddl
sbb
sub
adc
push
popf
sub
adc
xor
cmp
pop
pushf
push
or
mov
mov
out
add
out
fldenv
xchg
aas
or
or
jb
test
adc
rcrb
into
sbb
push
sahf
insb
sbbl
cmp
xchg
popa
scas
ljmp
mov
and
rcrl
pusha
fcomps
dec
dec
push
sbb
add
and
mov
xlat
sub
ret
sub
es
inc
mov
xor
mov
xor
push
sbb
mov
movl
push
mov
mov
add
es
cmpsl
and
iret
das
sahf
outsb
push
jno
xchg
cmp
adc
decl
push
and
lods
stc
pop
adcl
xchg
popa
and
mov
pop
or
push
das
insl
jns
pop
ficompl
jb
cwtl
pop
test
fimull
dec
adc
popa
nop
sub
dec
pop
push
imul
pop
adc
and
scas
aas
ljmp
mov
imul
orb
shll
dec
std
scas
xor
inc
cmp
roll
mov
movsl
inc
mov
adc
imul
dec
and
aas
andb
shll
xlat
push
fwait
push
stos
pop
sub
aam
pop
dec
mov
lcall
sbb
into
stc
xor
imul
sbb
outsb
pop
addr16
lahf
jle
lahf
testl
sub
sbb
mov
cmp
or
fnstsw
loope
enter
push
stos
sub
lea
cmpsb
push
xor
pop
or
mov
flds
cwtl
adc
mov
pusha
insl
push
rolb
push
xor
sub
call
push
test
and
dec
pop
fnstsw
or
xchg
sub
cld
adc
into
repz
aad
es
imul
adc
mov
and
scas
popa
cmp
fldl
cmc
lods
jmp
out
roll
into
pop
pop
loope
imul
aas
mov
xchg
mov
stos
repz
xchg
mov
jmp
adc
dec
ja
or
cmp
dec
cli
gs
les
fdivl
push
leave
dec
inc
sbb
mov
mov
jnp
add
scas
mov
stc
fdiv
jns
mov
or
mov
xchg
inc
xor
push
push
cwtl
push
mov
xchg
cli
mov
loope
sbb
fldt
ljmp
pop
test
mulb
mov
mov
mov
sub
jbe
mul
inc
imul
loopne
mov
imul
bound
add
sub
mov
push
lods
cmp
ds
inc
mov
fstl
push
loope,pn
pop
jns
insb
daa
cmp
mov
insb
sub
xchg
les
stos
mov
jbe
shlb
dec
sahf
cld
mov
ja
or
dec
push
mov
mov
mov
data16
push
or
push
pop
mov
cmp
out
cmp
int
inc
sbb
jbe
flds
popf
inc
in
sub
xlat
movsb
clc
outsl
add
push
fists
bsr
loopne
dec
lea
sub
je
stos
popf
pushf
das
test
arpl
push
aad
sub
xchg
or
jnp
mov
cmp
in
movsb
push
xchg
xor
lret
and
dec
ror
or
jl
jbe
xor
arpl
xchg
fbld
rorl
or
mov
es
mov
nop
out
push
add
cmp
arpl
xchg
mov
cltd
insb
sub
iret
jle
inc
mov
hlt
aam
sarb
jbe
cmpsb
adc
cmp
inc
push
out
and
add
inc
pushl
lret
aaa
dec
mov
xor
mov
lahf
in
or
imul
cmpsb
jp
inc
leave
lock
pop
push
je
push
out
js
notb
sbb
pushf
pusha
out
cmp
out
movsl
aam
adc
fs
cli
mov
testl
ja
dec
cmc
jno
sbbl
xchg
mov
pop
sub
arpl
dec
add
or
jne
lcall
mov
mov
ljmp
lahf
or
sub
test
xchg
leave
loopew
cwtl
andl
adc
stos
fidivrs
testb
xlat
mov
das
shr
lods
and
mov
cli
cltd
mov
or
sub
out
push
ljmp
inc
mov
pop
ds
jne
out
mov
imul
hlt
sub
mov
dec
mov
das
lock
sub
fidivrl
out
popf
mov
pop
mov
sahf
jae
cs
int
dec
lcall
in
movsb
movsb
pop
je
sahf
xchg
jle
sub
test
mov
sbb
inc
sbb
addr16
lahf
cli
mov
xchg
ret
adc
dec
lcall
test
stos
test
and
div
mov
adc
inc
leave
and
fistps
xchg
stos
push
ja
imul
fstps
mov
sahf
stc
fsubrl
ss
dec
mov
in
sub
stos
mov
frstor
jmp
mov
add
push
imul
aas
ds
test
sbb
adc
mov
fdivs
jmp
sbb
gs
pop
aaa
pushf
sbb
push
fistpll
popa
push
int
jb
into
jbe
sub
cwtl
fwait
pushf
push
cld
lods
jg
pop
insl
adc
fsubs
xchg
insb
fcomps
out
les
cmp
mov
mov
and
cmpsl
lea
lcall
cmp
loope
jmp
lea
enter
jae
sub
inc
dec
scas
sub
pop
outsl
push
or
mov
xchg
repz
in
bound
aam
cmp
inc
inc
mov
jno
mov
data16
mov
xor
bound
mov
xor
mov
cwtl
shrl
mov
mov
inc
lcall
bound
lock
ja
int
mov
js
cs
push
cmp
loopne
pop
hlt
stos
cld
nop
sbb
test
arpl
fs
jmp
pusha
pop
pop
jns
fiaddl
inc
jge
inc
shrb
loopne
pop
push
int
out
fldcw
dec
out
sbb
loopne
sbb
mov
push
iret
adc
mov
les
ljmp
xor
call
cmpsl
popa
das
insl
mov
mov
loope
ljmp
ja
push
xlat
mov
outsl
or
sbb
sbb
leave
ja
mov
add
imul
add
inc
mov
xchg
pop
imul
js
mov
lret
leave
fcoms
fcomp
std
cmpsb
insl
in
adc
sahf
imul
sub
xor
rcl
jmp
or
movsl
add
pop
adc
jae
or
and
ror
cmpsb
fwait
pop
add
jp
dec
fnstenv
popa
lahf
test
in
jmp
push
xchg
mov
ret
incl
add
cmc
ljmp
cwtl
rclb
lret
xor
add
cmpsb
jg
push
sbb
lret
repz
cmp
and
std
pop
out
ret
mov
inc
sbb
jns
mov
je
mov
int3
sub
popl
jnp
xlat
xchg
js
fs
test
pop
mov
stos
sti
jbe
scas
pop
dec
addr16
ss
aad
pusha
pop
mov
inc
cmp
cmp
test
push
lret
movsl
cmp
push
and
dec
adc
jbe
les
xchg
test
lcall
inc
cld
cmp
or
out
mov
pop
in
cmpsl
scas
jbe
fs
push
push
mov
fs
pop
loop
add
pop
adc
sbb
rcl
std
popa
outsl
cmp
movsl
call
mov
subb
inc
imul
and
mov
orl
mov
xchg
js
mov
movsb
add
or
push
push
mov
lods
pushf
out
jmp
jle
mov
lds
adc
stos
xchg
or
xchg
cmp
push
stos
gs
jg
repnz
in
aaa
xorb
mov
jecxz
mov
fnsave
jne
mov
arpl
push
ds
adc
push
insb
ss
mov
and
mov
out
lret
sub
pop
fadds
cwtl
jp
jo
repz
xchg
pop
fistpl
negl
sub
mov
jb
enter
xor
loop
adc
cmp
lea
idiv
pop
hlt
cld
lret
cmp
and
dec
js
and
dec
rcll
out
es
cmp
xchg
es
loope
xor
add
and
in
repz
adc
into
es
sarl
push
loop
call
pop
inc
push
imul
and
jmp
mov
icebp
andl
add
scas
mov
out
adc
outsl
jp
lahf
mov
push
imul
ficoms
cli
push
call
jae
xchg
inc
jg
pop
stos
negb
push
cmc
push
rcrl
inc
mov
pop
push
xchg
pop
xchg
push
cld
xchg
cmpsl
jle
outsl
pop
nop
std
jge
fs
stos
mov
not
mov
xchg
mov
inc
lds
ljmp
push
repnz
fstps
xlat
popf
inc
sbb
fstpt
xor
les
mov
aad
jl
add
scas
cwtl
js
or
pop
adc
rep
mov
dec
aam
adc
out
inc
and
inc
in
icebp
mov
add
sbb
push
cmp
xchg
cmp
loopne
cmc
icebp
clc
les
es
push
es
test
pop
je
xlat
mov
jmp
popf
in
pop
fistpl
sbb
mov
movsl
sbb
xchg
jmp
cmp
dec
mov
lret
cmc
xchg
ret
fsubl
stos
add
out
or
aad
mov
repnz
dec
jg
sbb
mov
int3
or
out
repz
dec
xchg
cmp
mov
add
xchg
sub
ja
xor
subl
adc
ret
cld
mov
xchg
sbb
push
ja
inc
push
mov
jle
pop
stos
push
test
and
aaa
jge
or
dec
inc
cld
push
xor
cmpsl
aam
or
lret
shll
mov
mov
or
stos
iret
stos
pop
cltd
push
fldcw
dec
xchg
test
scas
movsb
aas
xor
mov
aad
jle
mov
jnp
loope
dec
test
and
pop
out
dec
xchg
das
xchg
int
pop
sub
push
aas
cwtl
sahf
in
mov
mov
pop
add
xor
inc
and
push
inc
pop
test
cmp
mov
loopne
sti
fildl
repnz
xor
adc
sbb
push
repz
push
push
scas
adc
ja
cmpsl
push
test
popf
pop
cmp
aam
cltd
xchg
sbb
rcr
push
aam
sub
pop
dec
pop
mov
movsl
insb
jns
repnz
loopne
inc
jno
dec
jns
ror
xor
ficoms
lods
jl
or
jmp
push
sbb
int3
cwtl
jns
cmc
sub
aaa
imul
push
stc
hlt
insb
pop
outsl
test
nop
outsb
dec
lods
xchg
cmp
jecxz
dec
push
mov
loopne,pn
pop
push
mov
cmpsl
test
add
pushf
and
sbb
pusha
idivb
sub
lods
fimuls
xor
pop
push
into
dec
leave
mov
test
ficoms
test
add
call
jb
emms
vmptrst
shll
sub
inc
outsl
push
repnz
adc
scas
jnp
es
clc
mov
jae
xchg
jo
aas
xchg
adc
sub
mov
cmp
mov
rcll
ss
and
std
outsb
sub
rol
push
xchg
jno
inc
movsb
imul
mov
jmp
aad
pop
xchg
pavgb
add
ret
xchg
xor
mov
dec
test
xchg
sub
mov
popa
xchg
xchg
jle
stc
jg
sub
push
mov
addb
fwait
fwait
xchg
sub
cmc
dec
mov
cmp
mov
aam
das
daa
jge
mov
aam
repnz
lahf
pop
scas
cmp
mov
push
shl
xor
sub
add
sbb
enter
cli
ret
xor
les
pop
loope
jns
jnp
jmp
bnd
sub
dec
xchg
scas
xor
mov
ror
push
inc
fwait
loop
lcall
inc
ja
lret
cmp
dec
adc
ficompl
cmp
pusha
nop
cli
jae
sub
push
jbe
push
ret
adc
mov
cmpsl
in
mov
dec
dec
call
shrl
sub
sbb
push
inc
xchg
fnsave
and
lret
inc
jo
fldenv
stc
or
add
mov
sbb
pop
cmp
xor
into
sbb
fidivs
sbb
into
cmp
hlt
or
scas
scas
scas
addr16
push
jae
xor
fdivrs
cmp
inc
lahf
fistpl
aam
cmpsl
or
and
inc
mov
sub
int3
push
les
imul
test
shll
jle
data16
mov
pushl
and
push
in
int3
mov
hlt
lahf
ljmp
jle
std
pushf
push
inc
cmp
dec
xor
rcrl
cld
sub
daa
or
xor
insb
jb
cmc
jmp
xchg
imul
lret
cli
adc
test
adc
stos
aas
jge
sub
or
mov
mov
je
inc
inc
mov
fldt
fs
push
dec
dec
xchg
pop
push
negb
shrl
sahf
xlat
call
add
and
add
in
clc
push
pop
leave
xorl
pop
mov
mov
into
pop
inc
daa
lods
notb
cmp
ljmp
xchg
ja
pop
inc
mov
mov
xchg
sar
jo
jo
and
dec
daa
pop
mov
into
mov
iret
push
outsb
cmp
inc
pop
into
mov
mov
adc
arpl
jo
pushf
rcll
push
and
pop
icebp
ret
insl
mov
daa
mov
inc
mov
sbb
mov
pushf
inc
mov
ret
xchg
jecxz
push
ds
popa
pushl
mov
mov
sub
pop
int3
fwait
lea
or
scas
ja
cltd
add
mov
add
jno
sbb
jno
lock
pushf
int
add
roll
mov
movsl
fimuls
stos
orb
aad
outsb
add
sub
pop
dec
sub
loop
rcl
int3
iret
fs
lea
mov
cmp
into
imul
das
xor
mov
mov
nop
cli
xor
jo
cmc
or
stc
fistpll
xchg
fimuls
push
mov
out
insl
sub
out
scas
xor
ja
lds
mov
call
push
or
or
leave
nop
mov
std
leave
or
adc
dec
or
insl
stos
in
or
mov
movups
scas
pop
mov
insl
fildl
mov
orb
dec
mov
or
rolb
rcrb
aad
lcall
push
test
xchg
push
adc
mov
in
lea
imul
stos
repz
push
pushf
mov
loope
dec
xchg
bound
cld
inc
push
jl
cmc
or
js
popa
pop
push
and
push
lds
sub
sbb
jns
mov
fldt
pop
int3
cmp
roll
xor
push
or
enter
cmpsb
test
xor
sbbb
or
push
inc
shll
sar
sub
push
mov
xchg
mov
mov
mov
addr16
xor
inc
sarl
xchg
arpl
insb
shrb
enter
jmp
xchg
sti
test
out
sub
loop
mov
ljmp
rep
pop
push
test
dec
mov
ds
add
hlt
add
adc
jnp
adc
jne
js
push
push
or
sbb
push
hlt
in
or
stos
sbb
xchg
scas
aaa
dec
out
or
xchg
fst
inc
leave
repz
int
add
js
jle
adc
inc
sahf
pusha
test
in
xchg
movsb
xor
mov
ret
ljmp
fwait
orb
ret
aad
lahf
inc
mov
jp
not
mov
jl
mov
negb
dec
mov
mov
inc
xchg
lds
jle
hlt
jno
ss
jecxz
inc
pop
mov
fwait
pushw
sub
xorb
icebp
in
lret
cltd
sub
stos
ja
stc
xchg
and
add
mov
sbb
clc
out
test
int
repnz
or
sbb
dec
mov
inc
negl
cmp
mov
subl
mov
jb
xchg
lcall
test
addr16
sbb
sahf
stos
idivl
and
mov
adc
lret
xor
sbb
mov
xchg
popl
cmp
dec
mov
in
neg
rolb
xor
adc
lret
add
push
dec
sub
insl
mov
lods
jbe
inc
jno
dec
dec
mov
pop
mov
cmpsl
pop
test
nop
or
add
pop
push
jmp
cmp
cmp
sbbl
pop
pop
push
push
pop
add
pop
or
mov
jge
stos
loop
dec
jge
stos
cmp
lods
fistpll
ficompl
fiadds
jecxz
jnp
inc
pop
ret
ret
dec
sub
inc
mov
pop
daa
push
xor
iret
stos
xlat
sbb
jmp
pop
inc
mov
aaa
pop
hlt
push
fildll
pop
mov
stc
sub
inc
adcb
dec
mov
push
stc
push
cltd
out
dec
std
jp
pop
xchg
xchg
pop
shrb
add
inc
dec
mov
movb
add
nop
mov
inc
mov
cli
in
inc
lret
dec
push
inc
mov
inc
lret
inc
sub
push
ds
aam
inc
xchg
dec
sub
adc
gs
shll
dec
jo
js
pop
addr16
mov
sbb
xor
out
outsb
jo
aam
je
inc
jnp
inc
aaa
outsb
add
mov
jecxz
pusha
insl
push
lods
out
int3
icebp
leave
lcall
xchg
dec
repz
lds
adc
cmc
mov
lds
jns
add
jae
ja
rcrb
incl
imul
ljmp
in
fnstcw
fstp
std
enter
sarl
mov
xchg
cmp
jno
sub
cmp
pop
cltd
loope
and
xchg
andb
shlb
movsl
in
sub
or
adc
push
ret
mov
sub
pop
or
cmpsb
lcall
test
mov
setle
mov
sub
test
pop
cs
dec
mov
xor
scas
inc
arpl
out
cmp
gs
rorl
xor
mov
das
shll
out
pop
movsl
jg
imul
push
sbb
stos
pop
dec
lods
loopne
and
outsl
or
les
cltd
sub
mov
aad
negl
push
in
mov
dec
inc
insl
loop
mov
clc
xchg
ret
and
jl
cld
stos
sub
dec
insl
add
jb
rol
and
ret
int
pop
mov
push
xor
daa
push
mov
imul
push
pop
es
lods
add
lahf
mov
leave
lods
ud2
adc
jno
fs
hlt
dec
mov
xchg
int3
or
xor
mov
jo
in
into
mov
and
mov
mov
scas
push
lods
sarl
idiv
or
jae
scas
jno
out
push
sub
fisubrs
push
jmp
out
or
enter
cmp
push
mov
rcrb
insl
or
push
fbstp
or
scas
adc
sbb
lods
xchg
dec
fistpl
pop
aam
lock
fs
xor
cld
ss
mov
xor
adc
pop
xor
js
aad
out
out
inc
mov
in
jno
jo
popa
aas
shrb
sbb
mov
cmp
popf
gs
mov
das
pop
mov
sub
icebp
and
inc
adc
sub
shrl
fistpll
or
aam
fldl
in
mov
add
mov
inc
or
jbe
popa
aas
xchg
pop
sbb
adc
push
and
xchg
hlt
adc
inc
xor
pushf
rorb
mov
inc
and
jo
lods
xchg
mov
insb
inc
cmp
ja
xchg
mov
stos
sub
in
pop
dec
xlat
jb
shr
je
popa
pop
pop
shll
das
imul
in
call
cmp
int
lret
or
mov
dec
push
fcmovbe
rorb
mov
and
arpl
xorl
test
insb
js
rcrl
arpl
push
lahf
jecxz
adc
mov
nop
inc
ss
push
add
ljmp
mov
xor
add
mov
test
add
adc
push
xor
repz
ja
adc
xchg
jl
jecxz
filds
in
add
cltd
mov
and
leave
and
xchg
pusha
stos
inc
enter
or
push
mov
and
pop
test
sub
jp
and
mov
or
fildl
test
int
lcall
daa
mov
daa
cmp
test
imul
clc
sbb
push
cmp
rcrb
xchg
imull
bound
cli
rcrl
scas
pushf
pop
test
int3
xchg
mov
push
inc
jne
add
ds
iret
push
dec
sbb
shrb
shl
xchg
icebp
mov
or
push
fisubrs
adc
sub
test
and
roll
pop
movsl
add
pop
mov
dec
pop
pop
and
and
mov
test
push
das
lcall
or
pop
pop
andl
push
outsb
stos
jae
mov
adc
imul
push
clc
cmpsb
sub
mov
and
sbb
nop
pop
data16
xchg
rcrl
inc
xor
lea
lock
mov
inc
int
xchg
aad
pop
cmp
aam
outsb
out
imul
iret
shlb
adc
inc
fs
shrl
adc
cmp
mov
cmp
mov
jecxz
dec
sbb
add
push
in
lea
sbb
add
fwait
test
ja
xor
cmp
cmpsb
push
outsl
out
push
jl
inc
add
pushf
mov
shr
lock
popa
loopne
outsl
sub
fldcw
data16
adc
xchg
fcmovbe
mov
sbb
shl
pop
fimull
pop
mov
pop
aas
in
sub
stos
mov
push
scas
outsb
sub
hlt
outsl
add
pop
lahf
leave
sub
sub
jno
xchg
inc
cmovnp
js
cs
imul
xchg
addr16
push
hlt
cmpb
addr16
mov
dec
jae
loopne
in
iret
dec
sahf
sub
lds
fldl
outsl
mov
das
mov
dec
inc
in
sarl
pop
ljmp
mov
adcb
dec
ret
pop
imul
arpl
jle
jle
js
mov
sti
std
xchg
and
out
xchg
int3
pop
movlps
jg
mov
lcall
inc
dec
sub
test
andb
inc
sub
rcrb
push
mov
xchg
inc
insl
dec
jmp
dec
cmpsb
push
leave
pop
call
cmpb
stc
or
retw
cmp
shrl
test
jge
mov
ja
into
xchg
adc
aaa
mov
mov
sbb
xchg
lret
dec
imul
mov
push
addr16
mov
faddl
xchg
add
ja
or
out
fnstenv
addr16
mov
orl
mov
adc
loope
mov
imul
call
sub
mov
lahf
scas
mov
xor
mov
addr16
mov
jmp
mov
aad
add
loopne
jp
insl
pop
aaa
dec
jne
insb
xor
mov
orl
icebp
jb
cld
xchg
cmc
ds
popa
dec
cmp
xchg
lods
xchg
repnz
movl
das
pop
xchg
divl
xchg
pop
popf
xchg
xchg
cld
inc
sub
shlb
add
fidivrl
and
sub
mov
nop
dec
stos
in
call
xchg
add
xlat
mov
test
lods
pop
push
leave
fsubrl
lahf
shll
push
test
mov
movsb
repnz
cmp
sbbl
repz
push
ja
repz
push
gs
or
adc
pop
cmpl
in
pop
or
jecxz
ds
xor
jmp
shll
imull
loop
jmp
rolb
mov
push
ds
sub
sti
cld
mov
mov
mov
push
movsb
jl
xchg
lcall
xchg
cmp
inc
int3
pop
fdivs
mov
in
mov
xor
out
adc
cltd
xor
popa
ret
mov
mov
rcr
daa
xor
popa
in
xlat
fsubrl
nop
jae
mov
fstps
mov
stos
or
out
mov
add
insb
and
jnp
pusha
xlat
sbb
cmp
mov
icebp
dec
stc
sub
shll
push
dec
mov
test
roll
insb
jo
jnp
cwtl
xchg
pushf
sbb
push
cmp
jp
mov
sarl
mov
pop
xchg
adc
pop
enter
dec
add
jae
mov
int3
mov
aas
xchg
inc
push
lcall
jmp
loop
lret
outsl
cmp
xchg
ret
popa
imul
fdivr
or
cmpsb
lods
ss
cwtl
and
notb
jns
stos
test
xchg
push
push
cwtl
mov
xor
jb
fldcw
adc
cmpsl
stos
mov
dec
mov
sbb
popa
aas
jne
xchg
hlt
inc
clc
push
mov
push
orl
test
and
insl
mov
dec
fmull
sub
aaa
pop
lea
xchg
mov
inc
add
mov
sbb
fistps
pop
jg
mov
pop
jae
sub
xor
sbb
dec
dec
ret
rcl
shlb
cltd
push
nop
cmp
das
addl
mov
jg
push
in
popf
js
mov
cmpl
and
dec
inc
int
inc
sub
jl
cli
jmp
fisttpll
fistpll
sub
adc
dec
inc
xor
mov
nop
popl
mov
dec
stos
push
xor
js
pop
dec
in
ljmp
xchg
in
inc
jo
jg
push
add
scas
scas
cltd
into
mov
or
outsb
gs
adc
sbb
mov
outsl
outsl
in
outsb
xchg
ja
jmp
lods
aaa
push
push
stos
and
xor
and
out
inc
add
lcall
or
mov
dec
gs
pop
push
pop
mov
rol
mov
in
lret
outsb
adcl
cli
out
inc
and
les
push
outsb
xchg
repnz
mov
inc
je
jle
mov
mull
rorb
lock
imul
sbb
je
mov
add
pop
loope
fcomps
and
stos
xchg
pop
sahf
nop
leave
lret
pop
outsl
mov
push
dec
push
outsl
mov
imul
outsb
and
or
lret
lret
arpl
aad
bound
or
add
fdivs
mov
imul
test
das
xchg
leave
lcall
adc
movsl
movsl
fdivrs
adc
mov
xchg
pop
mov
and
mov
adc
insl
jae
sub
push
sti
insb
sbb
mov
mov
insb
push
out
fisttpll
int
mov
je
sbb
imul
sbb
sbb
add
sub
push
loop
cmp
mov
out
xchg
mov
sub
jecxz
in
add
xchg
jp
int
add
imul
and
ss
pop
sahf
fdivrp
xor
jle
in
inc
push
mov
cmp
and
mov
xchg
rclb
mov
cmpsl
stc
add
ljmp
pop
adc
dec
mov
leave
adc
js
mov
insb
cmp
aam
push
mov
clc
jb
cmp
ss
and
fyl2xp1
xchg
xchg
inc
push
inc
xchg
or
imulb
mov
rcl
aas
mov
ss
jns
cmp
add
adc
add
add
mov
mov
inc
imul
roll
xchg
unpckhps
mov
push
mov
mov
mov
jmp
ljmp
lea
repz
add
out
insb
adc
popf
bound
nop
xchg
movsl
rcpps
out
std
je
xchg
mul
jge
xchg
push
in
hlt
adc
push
jbe
lret
pop
xor
mov
sub
sub
jp
int
mov
mov
ud1
add
and
xorl
cld
add
sub
push
or
jmp
and
push
iret
je
mov
cmpsl
ds
mov
push
cmp
arpl
and
incb
in
sub
mov
mov
pop
inc
loop
mov
inc
insl
cmpsl
push
mov
aaa
mov
outsb
lock
and
dec
xchg
mov
cwtl
mov
sub
scas
jnp
dec
inc
test
or
adc
pop
outsl
aad
outsl
jp
xchg
mov
nop
lods
and
or
xchg
lods
lods
rclb
xlat
add
ljmp
shl
adc
xchg
and
inc
sbb
add
push
je
outsl
fldcw
lret
in
aad
mov
out
cmp
movsl
loop
popl
push
pop
data16
cmpsb
popa
arpl
mov
or
in
or
les
fisubrs
test
out
cmp
jnp
xor
scas
push
add
jl
sbb
add
fdiv
xchg
stc
insb
hlt
adc
sbb
lcall
dec
mov
ljmp
jb
dec
inc
pop
xlat
sub
lret
cwtl
dec
or
in
push
or
push
cmp
cmpb
mov
xchg
sbb
xchg
cmc
fnsave
push
lret
mov
inc
repnz
jns
or
push
mov
sarl
xchg
filds
push
inc
cmpsb
or
lds
gs
aaa
fidivrl
cld
iret
sub
cltd
aaa
lods
imul
pop
repz
push
inc
repz
jg
popf
nop
cltd
out
mov
mov
das
lret
ret
incb
xor
lods
clc
jp
jmp
stos
fwait
push
push
out
test
in
mov
xor
xchg
je
pusha
xchg
dec
in
pusha
pop
mov
das
lcall
mov
and
pop
xor
or
mov
cs
lds
shrb
xor
mov
lods
cmp
incl
and
addr16
mov
adc
aad
pop
in
mov
or
dec
rcll
arpl
xchg
adc
movl
aam
sub
push
ret
add
dec
daa
dec
mov
icebp
sahf
mov
aam
stos
das
jmp
stos
mov
inc
xor
gs
insl
inc
and
or
dec
jmp
les
pusha
or
fnstcw
repnz
lret
xchg
pop
mov
icebp
mov
loope
jnp
ret
repz
dec
test
cmc
loopne
dec
aad
xchg
xchg
jo
shrb
imul
or
mov
sti
dec
das
lret
je
jo
js
loopne
aad
push
mov
or
sub
xor
push
orb
jg
cltd
or
dec
ret
nop
cwtl
clc
hlt
push
sub
sahf
sbb
push
pop
js
xor
jnp
mov
push
sbb
imul
push
js
lock
lea
push
push
add
or
addr16
in
push
mov
mov
dec
push
icebp
sbb
orl
es
por
outsl
fnstsw
and
and
das
fdiv
fucomp
dec
mov
test
movsb
adc
jnp
or
mov
cmpsb
das
jne
sbb
lods
shlb
pop
xor
rcll
adc
out
imul
int
dec
popf
in
xchg
mov
sub
clc
hlt
jns
inc
gs
push
int3
mov
fildll
sub
in
or
pop
dec
mov
mov
pop
adc
mov
fcoml
jle
lea
inc
fadd
pushf
mov
cwtl
pushf
repz
add
int3
and
in
push
and
pop
add
es
mov
cli
out
int3
cmovp
jecxz
inc
sub
inc
pop
and
push
bound
push
xchg
iret
std
cmp
sbb
cmp
call
mov
clc
cli
dec
mov
leave
sub
sarb
lahf
push
ljmp
push
cmpsb
cltd
mov
mov
addl
in
cmp
lcall
push
or
insb
pop
pop
push
dec
adcb
mov
aaa
movsl
addr16
iret
addr16
xor
pop
mov
fwait
orb
inc
lcall
test
cmpsb
sbb
iret
add
xlat
or
movsb
aas
popf
xor
sbb
push
fwait
push
xlat
pop
xor
jmp
test
pop
xor
mul
cs
inc
fwait
dec
insb
add
mov
pop
cmpsl
adc
push
imul
ret
in
fscale
pop
imul
mov
push
xchg
jnp
dec
fsubl
sub
xor
in
adc
xlat
sub
aam
jo
repz
jnp
jle
lea
or
jne
pop
or
jle
push
aas
inc
inc
push
xchg
test
adc
enter
clc
push
lock
lock
mov
ds
int
out
rcrl
push
dec
push
repz
add
stc
out
adcl
int
pushf
shl
mov
movb
test
xor
ror
ja
iret
cmp
outsb
test
push
xchg
cmp
clc
adc
insb
dec
inc
mov
push
mov
mov
arpl
jnp
xor
ljmp
mov
push
mov
psubb
movsb
sub
sti
leave
adc
out
arpl
mov
mov
in
test
leave
ret
adc
je
xor
out
or
popf
mov
xchg
clc
push
lods
pop
push
test
repz
mov
nop
add
shr
add
pop
mov
test
adc
dec
mul
aas
outsl
lds
icebp
push
das
pushl
repnz
xchg
jne
aaa
in
fistl
add
addr16
mov
inc
mov
leave
aas
push
lods
adc
xchg
jo
sub
fsubl
subl
fimuls
mov
fcomps
cmp
in
cltd
push
in
lds
push
in
iret
adc
xchg
leave
dec
movsb
les
in
inc
jne
aaa
mov
ret
xor
decl
mov
insb
sub
hlt
push
adc
dec
and
sbb
lea
or
jp
dec
cs
hlt
repnz
in
sti
mov
aam
and
xor
xor
xchg
xchg
cmc
mov
enter
mov
sbb
jg
rcll
repz
mov
dec
mov
aaa
push
or
test
sbb
xlat
repnz
das
in
lods
bound
in
xor
stc
rcll
mov
inc
aas
jmp
sarl
js
pop
adc
mov
lret
jp
sub
mov
aam
les
mov
out
cmp
fidivrs
or
outsl
je
inc
js
mov
hlt
mov
add
add
jbe
daa
mov
insl
adc
jge
pop
xchg
mov
jo
push
jno
push
mov
xor
orl
pop
cmp
cmp
mov
inc
push
fsubl
or
es
inc
cmp
rclb
dec
push
or
in
gs
stos
push
repnz
cmp
inc
jl
out
jecxz
pop
xchg
ret
fsts
mov
cld
testl
adc
lret
jb
pop
in
enter
or
test
stos
adc
push
xor
repz
call
cmp
cmp
std
test
je
fdivrs
dec
pop
push
jns
jne
loop
xor
imul
sub
xchg
icebp
push
aad
bound
add
fadds
xchg
mov
mov
cmpsb
inc
cmp
imul
mov
adc
mov
push
daa
fidivrs
push
lods
addr16
dec
lds
pop
das
call
pop
push
jbe
cmp
inc
cs
movsb
ret
shll
mov
cmp
cmp
stc
test
xchg
adc
push
dec
push
sub
loopne
int3
cltd
std
fwait
stos
int3
insb
add
mov
fcomps
sbb
or
pop
push
or
out
sub
push
insb
test
xchg
mov
stos
pop
push
leave
inc
test
jge
mov
in
xchg
imul
clc
insb
mov
in
and
cmp
cmp
imul
hlt
das
je
daa
ret
jg
ss
data16
negb
je
xchg
movsb
mov
mov
pop
xchg
xchg
test
dec
xor
bnd
dec
mov
pop
out
lret
ret
cmp
and
gs
popa
xacquire
dec
mov
xor
push
xchg
xchg
add
lods
jle
and
mov
pop
inc
std
xor
call
ja
xor
lea
daa
mov
mov
inc
call
arpl
mov
xchg
cwtl
stos
loopne
add
fiaddl
jmp
pop
ret
adcb
xor
or
icebp
shlb
aad
xchg
notb
pop
inc
jb
repnz
popa
lcall
xor
fcompl
dec
ss
movsb
sbb
adc
and
and
sbb
pop
cmp
xchg
sti
and
dec
jp
push
sarl
filds
inc
lods
lods
mov
lcall
shr
mov
sahf
mov
push
cmc
add
sub
mov
and
pop
cmp
ja
hlt
add
cmpsl
iret
pop
sbbb
insb
jmp
mov
ja
push
jp
sub
mov
mov
dec
leave
mov
and
std
pop
dec
pop
cmpsb
lcall
xor
call
data16
jnp
jecxz
ljmp
sbb
pop
sbb
jb
mov
stos
pop
jle
lret
cld
and
or
fwait
int
or
mov
pop
fsubrl
and
push
test
testb
dec
or
jne
mov
mov
and
imul
mov
push
ror
mov
mov
fnstsw
xchg
fs
out
add
cmpsb
test
xchg
inc
sti
xor
shrl
andl
mov
in
mov
nop
cmpsb
loop
dec
mov
cmp
adc
xor
fcoms
and
sbb
repnz
mov
clc
and
pop
xchg
push
addr16
les
push
pop
mov
std
push
test
inc
lods
mov
test
or
xor
xor
mov
push
lods
dec
and
push
mov
ljmp
popf
pushf
inc
adc
xor
push
cmp
push
xor
mov
mov
sbb
pop
or
adcl
pop
leave
jge
or
ret
out
cmp
lock
sub
adc
mov
cmp
movsb
and
dec
cmpb
mov
lret
ja
shrl
shl
and
pop
data16
sbb
or
or
xchg
mov
ficoms
jmp
inc
pop
ja
jl
std
leave
jno
add
cld
xor
roll
movsl
movsb
lahf
clc
push
mov
sbb
decb
add
aam
test
jno
and
mov
mov
les
jns
gs
imul
repz
cmpsl
xchg
jl
sbb
mov
pop
xchg
pop
popl
es
scas
bound
cwtl
dec
adc
jl
sbb
das
rcr
jle
lods
adc
add
add
popf
aas
adc
insl
push
adcl
cwtl
repnz
sti
sub
sbb
jecxz
xlat
leave
cltd
dec
cmp
js
adc
or
lcall
in
out
ds
dec
ljmp
xor
mov
sub
in
pusha
jnp
arpl
pop
dec
rolb
jae
jnp
lock
adc
dec
notl
test
xchg
xchg
adc
out
ss
lea
mov
stos
sub
add
push
ds
jbe
push
lret
dec
pop
push
scas
push
sbb
pop
sbb
ret
mov
xchg
fcoms
push
leave
test
sub
xor
dec
mov
popa
adc
jmp
push
inc
daa
xor
sbb
or
ret
xor
mov
cld
ss
push
mov
adc
fs
fmul
adc
test
nop
lods
push
pop
lcall
roll
out
les
adc
inc
ficoms
cld
pop
or
adcl
adc
jmp
jl
cmpsl
sub
add
cmc
daa
adc
js
movsb
pop
push
push
and
arpl
popa
ss
add
xchg
mov
in
lods
sub
sbb
and
faddp
aam
push
into
pusha
rolb
pop
mov
jne
xchg
stos
dec
mov
test
aaa
pop
cmpsb
cmp
mov
mov
inc
pop
mov
xchg
mov
jno
jg
mov
imul
xor
mov
iret
outsl
sbb
fsubs
pop
sub
scas
or
loop
mov
push
das
bound
sbb
dec
mov
ret
aas
sbb
arpl
mov
ss
lret
inc
push
pushf
pop
dec
fucomi
and
inc
sbb
inc
js
xchg
jge
or
pop
add
in
inc
inc
or
sbb
lods
loope
dec
push
jl
les
sbb
shrl
adc
dec
cmp
fmuls
mov
cmpsl
mov
test
cmpl
or
cltd
fstl
xchg
jo
shll
jb
cltd
pushf
add
punpckhbw
loopne
hlt
or
sbb
xlat
popa
clc
jae
xchg
loope
adc
cli
arpl
je
lods
rcrb
stos
xchg
cmpsb
lret
repz
xchg
call
ret
cltd
popf
sbb
sti
jp
jno
movsb
cld
cmp
fwait
push
mov
or
xchg
addl
stos
sbb
jae
notl
cmpsb
pop
les
pop
mov
fbld
xor
dec
jle
pop
cmpsb
xor
nop
cmp
mov
xchg
or
mov
pushf
movsl
or
cmc
sub
mov
or
adc
adc
aaa
shl
or
sbb
push
jge
mov
mov
aam
enter
jo
inc
aad
vmovmskpd
outsb
shlb
mov
jmp
jge
push
mov
mov
popa
pop
lock
inc
aas
jne
dec
mov
jmp
lret
jbe
xchg
mov
loope
lahf
jp
jle
and
pusha
and
add
inc
in
shlb
xlat
aam
sbb
cltd
mov
push
sti
data16
inc
test
jmp
lret
mov
and
inc
add
data16
fs
dec
pusha
adc
push
cmpsb
inc
push
fnstcw
sub
addr16
inc
jnp
jnp
and
orl
out
scas
inc
push
add
cmc
mov
xchg
sahf
mov
jnp
inc
pop
mov
test
jecxz
imul
cmpsb
xor
nop
pop
test
xorl
shll
scas
lahf
adc
inc
mov
sbbb
aaa
jle
xor
mov
es
lcall
fwait
mov
push
sub
fstl
jg
xlat
and
jmp
xchg
jg
out
orb
daa
mov
xchg
xchg
cmp
xchg
es
xor
xchg
xchg
lahf
mov
mov
shlb
outsb
lock
or
stos
mov
cmp
movsb
jae
push
push
fs
xchg
xchg
xor
xchg
adc
fcmovnb
int
xor
add
stos
mov
andb
jmp
into
hlt
popa
mov
pop
scas
dec
push
aad
mov
lea
aam
jo
shl
mov
rcrb
mov
int
aaa
ja
mov
and
outsl
mov
xchg
inc
nop
inc
insb
stos
notb
lret
sbb
jbe
icebp
or
clc
insb
lret
sbb
sub
sbbb
leave
xor
in
daa
shrl
inc
xchg
inc
fwait
pop
fnsave
or
xchg
lea
push
call
test
xorl
fcompl
adc
lret
and
xchg
cli
push
subl
enter
decb
jo
cmc
add
and
sbb
mov
dec
in
xor
mov
not
lods
hlt
je
sub
mov
sub
nop
pop
pop
cli
inc
mov
mov
mov
test
in
jb
arpl
push
daa
push
popf
adc
sub
clc
enter
lcall
fwait
adc
mov
and
xchg
adc
aad
scas
inc
pop
mov
push
mov
leave
frstor
dec
xchg
xlat
insl
pop
sub
aas
loopne
jle
in
or
cmpsl
push
pop
ljmp
xor
inc
mov
movsl
mov
rorl
jg
adc
in
xor
test
add
inc
pop
xchg
inc
in
int
jno
aas
lea
jae
pop
icebp
pop
jl
cltd
and
adc
dec
cmp
aas
dec
cmp
push
idivl
mov
cmp
push
insb
stos
std
push
dec
sti
lcall
or
stos
cmp
pusha
push
ds
fwait
push
sub
sbb
push
addr16
lret
mov
jb
lods
xor
fsubrs
xchg
xchg
pop
mov
loope
int3
jmp
xor
in
sub
mov
push
insl
cmp
into
lret
mov
sub
cmp
mov
inc
add
xchg
and
xchg
adc
or
lcall
pop
or
add
add
inc
fimull
insl
leave
mov
imul
pop
and
adc
mov
out
adc
and
mov
fwait
mov
mov
mov
sbb
outsl
arpl
leave
lods
push
mov
shlb
mov
pop
jp
hlt
daa
inc
fists
mov
push
shrb
rcr
rcr
scas
pop
mov
enter
repnz
mov
fisttps
adc
push
push
mov
sub
cld
gs
dec
xor
cmpb
mov
dec
mov
stos
lea
imul
mov
cmpsb
jle
lcall
xchg
call
lods
xlat
xor
test
subl
mov
call
insl
jmp
pop
repnz
mov
jb
out
mov
mov
sbb
data16
pop
xchg
sub
repnz
imul
adc
hlt
in
xor
jne
mov
jo
lahf
xor
fistl
xor
push
inc
movntq
out
loopne
dec
es
cmpsl
mov
mov
std
into
loope
mov
mov
stos
mov
ficompl
mov
rcll
adc
stc
cmp
jle
add
rclb
daa
mov
pusha
fnstenv
icebp
push
adc
sti
xchg
push
or
mov
push
jge
gs
pop
sti
sub
mov
enter
outsb
lahf
test
out
add
leave
push
or
jp
and
daa
pusha
jbe
dec
lahf
lods
hlt
fcompl
inc
and
jle
or
push
dec
xchg
sbb
mov
sub
clc
fisttpl
push
mov
into
lcall
out
sub
or
mov
gs
add
frstor
insb
or
fwait
jns
dec
jge
and
push
out
sub
cmc
dec
sub
gs
cmp
ja
dec
xchg
fwait
mov
lock
mov
jbe
dec
rcll
sub
pop
push
mov
orl
clc
pop
or
jecxz
cmp
inc
jb
mov
dec
sbb
jne
test
or
sub
cmp
ficoml
cmp
adc
push
ds
adc
and
fidivs
inc
adc
out
lods
sbb
test
int3
lcall
sahf
pop
add
cmpsb
sub
fmull
pop
mov
sbb
jecxz
mov
aas
and
pusha
jle
test
pop
sbb
pop
pop
sub
mov
adc
iret
loope
jae
gs
add
sub
sbb
into
jecxz
push
xchg
out
or
icebp
aas
arpl
out
aam
mov
push
je
jo
xor
shrl
add
adc
dec
jmp
mov
into
mov
push
gs
xor
inc
xchg
out
lds
pop
xor
fidivrs
inc
jp
lock
jmp
pop
xchg
jge
test
mov
jge
jle
pop
fadd
pop
pop
fucomp
jle
fcomps
stc
push
cmp
clc
lock
aad
mov
mov
je
pop
push
cmp
mov
jp
in
add
fldt
adc
dec
jge
imul
leave
out
fwait
add
xchg
mov
mov
aam
xlat
pop
push
xchg
push
dec
stos
pop
push
es
enter
out
int3
inc
xor
out
insb
inc
pop
xchg
inc
fsubp
push
sub
inc
das
enter
in
xchg
rcr
dec
cmpsb
mov
and
sbb
movsb
mov
sbb
lods
repnz
out
sarl
scas
push
cli
in
lea
or
cs
or
fs
stc
add
or
adc
daa
popa
lret
adc
cmpsl
inc
imul
clc
and
aas
ja
les
int
fs
jns
fdiv
sbb
and
xchg
or
xlat
xchg
pusha
jae
inc
ss
mov
cmpsb
mov
jge
aad
xchg
les
add
mov
pop
pushf
dec
jbe
imul
cs
arpl
adc
xchg
push
subb
inc
sbb
mov
xchg
leave
sbb
ds
inc
popa
dec
xchg
mov
xlat
outsb
scas
and
sub
lahf
xchg
or
cld
adc
dec
adc
stos
push
adc
sbb
cmc
adc
lcall
iret
lock
xor
call
cmp
or
xchg
push
dec
incb
mov
cmp
andl
add
mov
mov
leave
cmpsl
mov
mov
jnp
mov
popf
sbb
fwait
clc
inc
xchg
and
push
lods
adc
out
shrb
dec
fistl
add
das
pop
add
ss
loopne
out
sti
rcrb
imul
push
cmp
es
jl
sbb
fsubr
sub
sbb
inc
and
into
outsl
aaa
fsubrp
push
stos
imul
push
loop
push
push
leave
lcall
sub
jle
test
hlt
cmp
xchg
and
addr16
push
stos
in
fs
imul
int
insl
lea
subb
or
out
hlt
cmp
pop
aas
in
fcoms
setge
das
out
and
rcrb
and
inc
sbb
rcrl
icebp
ja
push
test
pop
push
mov
push
shl
rclb
clc
lret
imul
insb
daa
fucomip
mov
fidivrl
inc
inc
leave
or
sub
fisubl
data16
nop
imull
insb
push
adc
dec
sub
cmp
stos
push
inc
orb
sbb
aad
mov
xchg
xor
jae
sub
xchg
jp
pop
mov
sbb
pop
mov
jle
adc
cmp
sub
aad
push
mov
cmp
sub
in
cmp
data16
ss
adc
pop
lods
push
xchg
xlat
cmpsl
lock
cmp
cmovo
adc
or
mov
cld
iret
inc
icebp
cmp
lock
inc
cmp
aas
mov
jne
mov
inc
test
mov
mov
mov
sbb
pop
adc
dec
add
sarl
jnp
and
imul
mov
jno
inc
push
cwtl
pop
aam
fld
pop
add
dec
adc
fimuls
daa
dec
stos
cld
lahf
fistps
xlat
int3
pushf
xor
push
ret
shlb
mov
xchg
inc
aas
mov
mov
pop
lret
mov
out
sub
mov
mov
daa
rorb
popa
push
scas
jl
call
inc
cmpsl
les
ffreep
jne
adc
jae
mov
adc
lcall
sub
sub
push
pusha
mov
sbb
mov
pusha
outsl
jno
jo
adc
mov
mov
mov
fs
mov
xor
out
and
mov
mov
cmp
js
jl
mov
xchg
out
clc
fldt
adc
popa
mov
inc
imul
ret
inc
jle
cmp
sub
icebp
pop
movsb
and
dec
lahf
xor
arpl
push
mov
sbb
and
cmp
sbb
jmp
jg
test
mov
pop
add
xor
fwait
and
cmp
xlat
inc
pop
repz
cmp
xchg
sahf
adc
out
pop
mov
xchg
mov
cmp
outsb
fs
enter
ljmp
add
das
outsb
dec
inc
jg
shlb
loopne
or
inc
nop
popl
ss
cmp
xchg
mov
cmpsb
xchg
adc
fwait
addb
lock
add
jae
in
pop
fmull
fidivl
adc
xor
lods
int
mov
pop
pop
fwait
rorl
or
lret
cs
push
pop
orb
jl
push
andl
scas
pop
pop
in
push
inc
out
cli
fs
pop
inc
fnstsw
sub
daa
xchg
into
into
mov
arpl
loope
dec
sti
data16
sub
test
sub
enter
mov
or
mul
sbb
js
out
xor
out
mov
mov
xchg
fxch
mov
cs
aas
dec
loope
jmp
mov
mov
jne
mov
mov
lret
push
flds
mov
fisubrl
fdivrs
mov
pushf
shlb
lea
sub
xchg
cwtl
sbb
clc
inc
adc
popf
lahf
addr16
test
pop
pop
inc
mov
xor
mov
mov
lods
cmp
loop
rcll
and
xchg
jg
inc
mov
cs
inc
dec
arpl
adc
fistps
sub
jmp
ljmp
movsb
add
adc
mov
out
mov
outsb
or
std
lret
out
or
in
push
push
mov
fsubp
push
push
adc
divb
pop
jmp
push
subl
scas
push
imul
outsb
ret
jo
push
sbb
cmp
gs
push
mov
mulb
or
xchg
push
cli
fcmovb
jge
out
pop
sar
jl
fs
xor
hlt
adc
dec
push
pop
xor
stc
out
nop
mov
and
ret
push
pop
sbb
or
je
arpl
or
push
xor
pop
scas
pop
cmpl
pusha
dec
movsl
hlt
push
outsb
and
sub
jb
hlt
sbbb
dec
sbb
lods
popa
addb
pop
jmp
ja
xor
xchg
rcr
mov
das
xor
es
int
pop
jle
adc
sahf
fidivrs
movsl
stc
sti
test
sarb
push
pop
iret
addr16
fbld
jns
mov
cmp
jne
scas
and
sbb
pop
stos
mov
push
jne
xchg
pushf
jo
cltd
mov
mov
or
mov
movsl
shrl
scas
decb
pop
les
into
xchg
xchg
stc
adc
adc
inc
rorb
aaa
or
add
outsl
ss
ret
les
movsb
mov
sub
xchg
mov
push
sub
xor
inc
js
stos
xchg
add
shlb
cmp
leave
mov
or
inc
int
lret
xor
nop
jns
xchg
and
jge
pop
jge
mov
out
mov
jnp
scas
jecxz
test
sbb
popf
fwait
sbb
pop
dec
ljmp
sbb
std
ja
add
les
lods
lret
sahf
jmp
push
iret
lret
pop
inc
or
pop
sti
mov
mov
push
daa
lds
xchg
lods
add
sbb
xchg
inc
push
and
arpl
outsl
or
fwait
cmpsl
bnd
cmpsl
das
push
pop
shrb
in
jbe
mov
mov
push
in
cltd
fildl
inc
mov
sbb
xor
lcall
xchg
dec
mov
negb
mov
pop
mov
dec
xchg
aas
push
imul
or
je
mov
cs
xor
sbb
scas
or
xchg
ret
fdivl
test
stos
inc
and
jg
jb
sti
inc
add
mov
push
pop
fcmove
mov
push
mov
js
jb
lods
sbb
inc
les
test
cmp
lods
lods
mov
dec
adc
mov
sub
xchg
inc
and
sbb
incl
inc
lahf
jbe
pusha
cwtl
xor
xchg
xor
pop
movsb
jmp
dec
out
cmp
and
jbe
sbb
out
stos
jle
mov
mov
push
xor
inc
or
mov
xor
sbb
push
fcomps
fisubrl
dec
xchg
loop
aas
sbb
mov
mov
adc
fwait
pop
call
adc
sub
pop
xchg
mov
mov
loopne
xchg
loope
movsl
cli
push
and
sbbl
popl
aas
int
or
jp
ficoms
not
in
lea
push
pop
int3
movsb
jns
std
subb
pusha
movsl
push
cmp
xchg
pop
adc
xchg
loopne
fwait
lods
icebp
sub
mov
inc
lret
lret
pusha
cli
mov
lea
leave
imul
icebp
das
cmp
and
add
loope
xor
mov
je
mov
sti
stos
test
jge
jecxz
xor
lret
cwtl
call
cld
mov
aas
subl
add
inc
cmp
dec
rdtsc
aaa
or
ret
xor
loope
nop
mov
jg
sbb
test
or
xor
mov
cmp
in
xlat
mov
cmp
sub
rorb
pop
add
dec
xchg
pop
xchg
std
mov
lret
pop
sub
mov
push
lock
inc
adc
add
pop
inc
or
mov
incb
rorb
aam
aam
jmp
je
outsl
loop
xorl
lock
hlt
pop
fdivrl
mov
inc
leave
pop
pop
repnz
mov
repz
lock
mov
jmp
xor
mov
jnp
and
nop
addr16
rorl
in
iret
add
sub
jp
cltd
jmp
lcall
cwtl
ja
lock
call
xchg
or
jb
popf
mov
pop
or
rol
jl
pop
sub
cmc
mov
mov
xchg
sbb
sbb
xchg
dec
int
or
or
outsl
inc
inc
adc
sbb
mov
sarb
jecxz
mov
add
rcll
xchg
mov
fists
dec
push
lret
sbb
aam
cs
mov
xchg
arpl
gs
inc
push
stc
sahf
mov
mov
sarl
lret
das
xor
roll
or
sti
add
cwtl
fwait
pushf
jns
iret
dec
lock
mov
adc
clc
mov
mov
or
cltd
pushf
inc
lret
sub
mov
sub
shrb
inc
loop
add
push
mov
fdivrs
jmp
sbb
pop
mov
or
jns
sti
sbb
scas
jg
ret
out
xor
in
mov
cltd
mov
daa
mov
outsl
mov
hlt
jp
test
sbb
sbb
push
push
cmp
cmpsl
sarb
popf
aas
jmp
data16
cmpsl
jecxz
jnp
hlt
movsb
sub
or
pop
jnp,pn
insl
jmp
and
mov
lock
pop
mov
xchg
xor
push
inc
fdivs
sbb
scas
leave
xchg
mulb
pop
mov
jmp
fsubrs
cltd
neg
mov
fs
mov
lcall
decb
xchg
push
xchg
sbb
pop
mov
jo
enter
fmull
push
or
mov
mov
scas
mov
adc
mov
sub
inc
xor
jg
mov
les
dec
xlat
fnsave
xor
stos
xchg
sbb
push
std
test
jge
aas
mov
mov
arpl
pop
rolb
and
xor
gs
xchg
xchg
testb
inc
jmp
pop
imul
insb
in
inc
lock
jp
dec
test
push
rcll
jns
fidivl
xchg
lods
je
xchg
outsb
push
push
adc
out
sub
sbb
pop
or
cmp
push
loope
sbb
dec
mov
mov
inc
pop
sti
test
mov
fisttpl
mov
imulb
xchg
xchg
or
and
aam
imul
dec
dec
stc
adc
mov
dec
or
arpl
pop
inc
fcomps
cmp
repnz
lods
pop
mov
aas
test
sub
push
aad
test
in
aad
std
mov
mov
movsl
adc
mov
mov
stos
stos
shlb
cmp
add
pop
xor
xor
test
dec
das
enter
xor
pusha
inc
mov
hlt
je
lds
lahf
adc
sub
jecxz
in
xorl
aam
dec
xor
addr16
mov
mov
es
mov
push
bound
arpl
gs
notb
mov
movsl
aad
test
mov
and
jnp
jp
sbb
jnp
inc
fdivs
rclb
add
cmpsb
xor
mov
repnz
and
and
loop
sbb
in
int3
in
ret
lds
jmp
push
jl,pn
xor
cmp
or
add
and
mov
inc
xlat
add
mov
or
inc
xor
mov
xlat
mov
lock
call
xchg
xchg
push
sub
cmovl
cmpsb
dec
fcmovbe
mov
out
das
inc
jb
loop
jmp
mov
sub
cmpsl
adc
cmpsb
push
xchg
fisttpll
mov
adc
push
icebp
setae
insl
or
ja
mov
add
in
icebp
out
jbe
sahf
inc
les
aaa
nop
es
cwtl
inc
mov
push
sub
mov
xor
xchg
inc
xchg
das
push
icebp
mov
fnstsw
jno
out
dec
sub
xchg
mov
in
cmp
and
dec
push
mov
scas
test
shll
push
pop
cmpb
and
test
es
lock
or
in
daa
cwtl
dec
pop
adc
clc
fiadds
lret
inc
add
or
adc
dec
ljmp
lods
or
inc
jmp
test
sahf
shlb
and
lods
mov
mov
mov
or
push
out
xchg
inc
push
js
xor
mov
mov
shll
sub
jo
push
aam
or
ljmp
icebp
cld
fimull
push
dec
stos
pop
test
mov
das
xchg
mov
subl
subl
movsl
pop
sbb
add
jb
sub
dec
sub
fsubp
jmp
sub
insb
out
or
aas
leave
push
sbb
shrl
adc
orl
jne
ljmp
js
sahf
cltd
and
cmpsl
or
sub
sub
adc
mov
push
adc
out
push
es
stc
jb
push
sub
push
lcall
push
cltd
aaa
mov
test
or
test
cmp
mov
cmc
ds
xor
sbb
add
mov
movsb
jnp
push
jecxz
or
adc
sub
stos
add
stos
rep
pop
mov
fadd
xchg
bound
dec
mov
das
lcall
movnti
pusha
subl
sti
jnp
mov
and
push
das
mov
ds
dec
in
mov
xlat
idivl
mov
mov
ja
mov
lods
out
cmc
outsl
mov
xlat
pop
int3
mov
add
js
idivl
cmpsl
dec
gs
orl
popa
shl
repnz
insl
cmpsb
js
das
sub
or
mov
push
or
test
push
inc
dec
fnstsw
fisubl
fdivrs
loopne
xor
jno
add
mov
xor
pushf
testb
mov
lds
lods
das
mov
clc
sub
int3
negl
inc
jg
xchg
repnz
push
rorb
fnsave
dec
out
jnp
sbb
add
cmp
pop
fiaddl
add
push
sbbl
mov
cld
jbe
mov
imul
sub
sbb
inc
xchg
fs
ja
or
xchg
sbb
lea
daa
rclb
sbb
imul
xor
and
sbb
mov
imul
aaa
push
stos
pusha
or
dec
dec
stc
push
jl
xor
scas
mov
xchg
cmp
xor
xchg
shlb
sub
add
push
mov
mov
stc
mov
andl
int3
xor
in
scas
sbb
test
cltd
mov
sbb
sub
inc
out
xchg
lahf
lret
mov
in
arpl
or
test
notl
cmp
fadds
scas
pop
jno
pop
decb
push
push
insl
mov
stos
outsl
mov
ficompl
into
and
mov
sub
mov
ja
cmp
outsb
dec
lahf
pusha
or
cld
jne
mov
mov
add
fisubrl
gs
and
rolb
sarb
test
cmpb
xchg
addl
sbbb
lret
lret
mov
shll
inc
jmp
cmp
cltd
jnp
jp
xor
and
cld
and
pop
ja
hlt
dec
mov
movsb
sub
popf
jp
mov
cmp
sub
test
inc
in
jne
ds
sbb
sub
and
test
or
das
xchg
mov
or
inc
mov
jns
aaa
sub
mov
adc
leave
push
movsl
or
iret
sbb
mov
xchg
mov
dec
xor
fmuls
xchg
xlat
push
fidivl
jo
sahf
pusha
ljmp
push
mov
cmpsb
dec
mov
ja
and
mov
xorb
sbb
or
dec
clc
dec
fcompl
imul
xchg
sub
fsubl
test
xchg
jae
mov
int3
repnz
nop
and
bound
gs
pop
xchg
popf
pop
sarl
cltd
jbe
jae
pop
insb
add
call
js
mov
imul
jns
lods
leave
orb
mov
pop
mov
or
mov
outsb
mov
shlb
les
shlb
mov
fwait
xchg
fucomp
xor
lods
cmpsb
shll
fcmovbe
subl
repnz
sarb
inc
decb
sub
pop
xor
jp
pop
into
fcomi
or
mov
cmp
adc
pop
in
push
ret
aaa
mov
mov
sbb
aaa
ljmp
mov
jb
cmp
add
push
pop
je
mov
movsb
inc
adc
in
aam
adc
cmp
rcrb
and
rclb
subl
lret
inc
mov
lods
stos
push
mov
pop
jecxz
dec
adcl
adcl
mov
add
aas
jle
lock
movl
inc
popf
adc
jbe
push
xchg
js
loope
int
mov
das
dec
sti
lods
inc
ret
fistpll
lret
ja
leave
das
dec
int
out
pop
push
data16
add
fwait
cwtl
cltd
and
xor
pusha
dec
pushf
push
sub
cltd
cmp
mov
loopne
push
mov
dec
inc
adc
inc
push
cmpsl
mov
insl
xor
les
or
cli
in
fs
dec
data16
mov
push
jae
jnp
test
shl
repnz
jnp
or
ret
ds
mov
mov
xchg
imul
pushf
cld
rorb
in
pop
dec
pop
push
jnp
repz
std
mov
pop
arpl
push
daa
push
sub
call
mov
into
lcall
push
xorl
mov
mov
inc
mov
ss
mov
mov
pop
xchg
sbb
loopne
pop
ja
or
cld
into
push
es
fistl
jecxz
fbld
outsl
xchg
aaa
out
sbb
jle
xlat
int
sar
mov
neg
mov
loopw
sbbl
mov
jecxz
jge
jno
mov
out
pop
mov
add
push
shrl
cmp
and
pop
rcrb
dec
cmpsb
adc
push
gs
jns
mov
movsl
mov
mov
inc
push
xchg
popf
cmc
mov
ljmp
sub
imulb
hlt
and
fbstp
inc
dec
and
inc
in
jae
and
pop
daa
jmp
mov
lods
call
into
mov
std
and
jbe
jns
mov
out
xchg
inc
test
fisubrs
cmp
sar
loopne
lea
dec
pop
imul
push
push
add
and
call
push
clc
cmp
mov
cmp
popf
xchg
gs
je
mov
adc
pop
ss
mov
xchg
mov
sbb
pop
addb
test
adc
fstps
mov
mov
push
inc
xchg
and
sub
and
clc
push
roll
pushf
not
add
cwtl
sub
dec
in
sub
imul
jno
movsb
shll
loop
fimuls
sub
jmp
loope
push
movsl
stos
sbb
movsl
iret
rcrl
lahf
es
in
push
xchg
pop
loopne
inc
lret
and
sub
inc
and
arpl
lods
pop
jecxz
lods
push
mov
or
add
enter
mov
inc
sti
ret
out
xor
cmp
mov
cmp
mov
fs
adc
cwtl
or
mov
dec
repnz
push
cmc
fnstcw
enter
enter
push
jne
mov
xor
outsb
loope
jo
cwtl
pop
btr
pop
in
and
cmpsl
mov
pop
mov
mov
add
push
cmp
or
xor
test
add
add
adc
add
fwait
sbb
sbb
adc
fistl
adc
in
cmp
int
jecxz
rcl
adc
sub
popf
cmp
mov
sti
cs
pop
jle
xchg
inc
and
sbbl
mov
xchg
inc
std
cmp
lods
or
shlb
mov
sbb
inc
fs
addl
outsb
push
dec
sahf
pushf
into
pop
mov
cmpsl
xchg
push
clc
jl
iret
xchg
scas
daa
cmpsl
lods
push
push
std
xor
mov
mov
fsts
pushf
adc
dec
pushf
test
cmp
mov
pop
add
mov
test
sub
clc
cmpsb
sub
xchg
adc
and
dec
cmp
add
xchg
pop
repz
pop
xchg
add
mov
mov
pop
jb
fwait
dec
jmp
push
outsl
and
push
icebp
xchg
sbb
enter
jge
inc
fsubrp
xchg
xchg
pop
jae
ds
cmp
xchg
push
std
push
mov
mov
jb
scas
sti
adc
fisubs
loop
sub
test
enter
xor
int3
adc
test
sub
data16
pop
sarl
iret
jae
mov
insl
and
cmp
lcall
fsubs
adc
mov
push
rcrb
sub
xor
xorl
outsl
minps
mov
cli
fcmovnb
jo
cmpb
pop
inc
cmp
call
insb
jp
mov
xchg
je
dec
push
jp
iret
ficoml
cld
mov
pop
push
outsl
mov
or
andb
stos
je
pop
sbbb
gs
ror
icebp
push
add
push
cmc
scas
push
dec
outsb
cmp
mov
pop
test
mov
pop
cmp
lcall
fdivs
fcmovnbe
sahf
mov
enter
mov
call
rcrb
test
imul
lret
movsb
mov
add
sti
jnp
int3
sub
jcxz
inc
and
jecxz
adc
add
pop
xlat
mov
sub
ret
lock
fstl
inc
jle
jmp
sbb
aas
and
enter
add
icebp
lea
pop
stos
lret
insb
dec
pop
push
mov
test
ret
push
mov
hlt
jb
stos
pushf
xchg
cwtl
pop
test
push
in
mov
push
addl
scas
jp
add
and
loopne
lret
pop
jp
sub
xchg
pop
push
out
mov
outsb
sub
jae
clc
mov
cmp
movsb
test
dec
fldl
push
jns
in
lea
jae
xor
sarl
jbe
stc
push
xchg
mov
popf
rcrl
inc
fdivl
fmul
test
cmp
cld
or
in
subb
push
popa
mov
mov
fsubrs
orb
xor
out
dec
test
aam
into
das
insl
out
jge
mov
call
xchg
addb
leave
mov
in
lock
jle
lods
mov
shll
xor
cmp
cmp
ljmp
sbb
jno
imul
sub
divl
mov
mov
bound
int
mov
push
xor
add
subl
adc
mov
mov
sub
add
pop
and
mov
iret
sbb
xor
xchg
mov
add
les
mov
and
mov
imul
ficoms
bound
add
ret
cmp
sahf
shrb
ss
cmpsl
decl
mov
ds
xchg
mov
sbb
mov
or
sbb
jl
fmuls
fstp
or
jmp
mov
cmc
push
pop
push
push
xor
xchg
js
sahf
push
inc
lahf
xchg
movsb
xchg
jne
adc
xchg
mov
mov
lcall
mov
outsl
add
jp
dec
adc
push
in
adc
lcall
divl
cltd
loop
insb
shl
jmp
jl
push
mov
into
int3
jg
xor
xlat
outsb
pop
es
ja
push
test
sub
out
mov
mov
leave
and
sub
cmpsb
daa
xchg
mov
nop
in
sbb
fildll
pushf
mov
movsl
jo
mov
icebp
push
and
add
jb
or
and
jmp
xchg
in
sub
jo
inc
dec
xchg
push
inc
js
sti
fldl
push
inc
pop
mov
xor
daa
std
clc
enter
movsl
dec
outsl
jmp
jo
lods
test
leave
sbb
popa
or
and
sub
movsb
mov
jo
mov
and
sbb
loope
mov
clc
push
in
lea
sbb
add
ret
adc
imul
sub
dec
popf
xchg
mov
fisubl
mov
clc
mov
movsb
cs
inc
mov
and
lods
dec
jge
arpl
aad
inc
das
jnp
push
adc
adc
lahf
xor
xchg
add
enter
adc
pop
xchg
cmpsl
inc
jns
pusha
add
test
imul
adc
cs
aaa
jecxz
mov
out
test
or
in
fists
pop
imul
shll
popa
cwtl
cmp
test
leave
xchg
or
rcrb
xchg
xchg
ss
cmp
cmp
sub
inc
out
divl
pop
xchg
popa
lret
insb
das
pusha
nop
jmp
push
push
xor
or
loop
jno
enter
lret
mov
insb
mov
or
fdivl
mov
and
and
les
adc
aam
incb
inc
add
mov
inc
xor
mov
adc
adc
cli
dec
adcw
es
cmpsl
or
aas
or
loope
mov
mov
mov
add
cmp
dec
xchg
mov
or
cmp
enter
cmp
push
sahf
dec
sub
or
pop
outsb
aaa
mov
mov
sti
push
lret
jmp
xor
pop
add
or
stos
pop
inc
aaa
stc
or
jb
test
repnz
mov
cmp
stos
mov
mov
clc
inc
jb
mov
les
dec
pushf
push
sub
mov
lahf
and
lahf
into
and
pop
add
fstpt
sbb
popa
pop
outsl
repz
dec
cmp
cmp
cwtl
pop
and
push
xchg
sub
orb
sbb
test
test
xchg
fistpll
mov
jnp
mov
out
xor
mov
mov
sbb
push
sarl
outsl
aam
pop
inc
sbb
or
jl
dec
mov
sarb
enter
data16
mov
mov
mov
xchg
movsb
call
daa
adc
mov
xchg
mov
cmp
pop
test
sbb
inc
add
out
in
push
pop
fldl
repnz
out
mov
push
int3
jl
gs
dec
das
mov
roll
push
mov
push
sub
rcr
out
and
cmp
clc
jle
mov
pop
pop
jbe
add
mov
movsb
push
int3
adc
sarl
fdecstp
or
jle
push
lret
in
add
adc
dec
mov
movd
jecxz
scas
mov
inc
mov
fsubl
ficompl
les
outsl
sub
scas
pop
or
mov
push
cmp
push
sti
ds
jbe
push
xor
gs
pusha
inc
int3
pop
insl
dec
popa
out
imul
xor
mov
jbe
lahf
icebp
sbb
lds
int
adc
das
pop
ret
enter
fstps
mov
test
iret
gs
dec
sbb
mov
aas
adc
test
sub
in
push
cmc
mov
ret
jle
pop
icebp
pop
cmp
xchg
cs
in
pop
or
or
lea
mov
adc
push
mov
pop
cmp
bound
push
enter
jmp
rorl
lea
rcrb
inc
add
insl
in
sub
sbb
rcrl
aad
push
mov
ret
push
pop
pop
sbb
scas
dec
jae
les
dec
xchg
data16
dec
cltd
ljmp
mov
and
int3
rolb
cmc
inc
sub
or
add
movsl
cmpsl
jle
pop
js
fbld
movsl
xor
xorb
popf
xor
into
sub
icebp
mov
out
ret
and
stc
lgs
cmp
and
dec
fisubl
lret
jecxz
add
stos
push
mov
ss
bound
fs
scas
xor
pop
adc
in
adc
pop
daa
int
daa
push
push
testl
sub
adc
pop
add
push
mov
in
pusha
add
dec
es
cmp
xchg
test
sbb
gs
cmp
popa
or
sbbb
shl
test
lds
jnp
adc
lahf
les
out
inc
mulb
and
outsl
imull
xor
fs
xor
int3
adc
sbb
std
add
jno
out
lods
stc
sub
mov
mov
push
scas
xchg
push
xchg
pop
fistps
dec
stos
int3
pusha
jle
or
mov
cmp
xor
jbe
sub
arpl
or
incb
push
lcall
xchg
and
clc
cmp
mov
mov
add
xchg
outsl
dec
xlat
jp
mov
dec
push
push
xchg
push
test
dec
ret
inc
mov
test
iret
stos
out
mov
punpcklbw
gs
faddl
ss
adcl
mov
or
cmp
aam
iret
vmread
jl
aad
xchg
xchg
adc
cmc
das
test
fcoml
rcrb
lcall
js
movl
stos
mov
ret
sti
inc
push
sbb
cmpsb
repnz
mov
je
inc
and
imul
fs
dec
push
sub
pop
scas
xchg
or
enter
jae
mov
xor
shlb
cmpb
daa
pop
movsl
outsl
mov
cmp
lods
stc
pop
push
xchg
jmp
je
mov
das
test
lock
fidivl
adc
jae
sti
cli
push
faddp
cmpsl
mov
adc
xor
outsl
push
mov
das
in
mov
adc
mov
inc
jno
inc
xchg
push
sbb
xchg
lods
imul
xorl
xchg
nop
dec
sti
add
mov
shlb
loope
in
adc
xchg
push
or
shlb
xchg
not
xchg
push
rorb
cwtl
inc
cwtl
inc
cmp
jecxz
fistl
cmpsl
cli
push
sub
push
imul
inc
icebp
test
in
jmp
into
push
loopne
fistps
pop
push
jb
or
imul
or
jns
push
mov
xchg
push
pop
lret
lcall
stos
repz
push
jmp
xchg
sub
mov
ljmp
mov
imul
mov
push
test
cmp
in
push
les
fsubl
out
pop
dec
jnp
push
pop
cmp
mov
mov
dec
or
js
mov
lret
int
mov
ret
out
mov
jne
sbb
dec
mov
adc
sbb
pop
cmp
mov
xor
scas
outsb
inc
std
push
das
loope
jbe
shlb
ljmp
dec
test
jmp
gs
inc
dec
and
xor
scas
shrb
enter
or
mov
mov
dec
adc
jecxz
loope
xchg
int3
pop
cwtl
xlat
mov
lret
bound
pop
add
xor
call
repz
sub
xchg
lock
in
jnp
lods
inc
sbb
xchg
mov
mov
lea
cld
aam
dec
sahf
into
cs
dec
xor
pop
in
or
cmp
pop
mov
mov
shll
or
ja
xor
xchg
mov
jno
scas
pop
sub
mov
jne
push
shlb
cwtl
push
fsubr
xchg
insb
gs
inc
lahf
punpckldq
insl
ljmp
add
mov
jb
sbb
insb
push
jnp
loop
xchg
and
jp
aam
in
repnz
mov
out
inc
sbb
push
ficompl
inc
aas
push
in
mov
sub
aad
inc
push
sub
xchg
sbb
ret
bound
inc
mov
outsl
jg
into
xchg
into
aam
sbb
bound
mov
jns
cmp
mov
xchg
mov
pusha
lock
inc
out
adc
nop
sti
xor
cmp
ds
int3
sahf
xor
xor
inc
inc
cmp
imul
call
js
lahf
cmp
or
dec
pop
dec
pop
or
lret
pusha
add
decl
cmp
inc
lods
ljmp
push
imul
mov
lock
add
pop
lret
hlt
jns
js
cltd
mov
jnp
adc
imul
cwtl
mov
push
mov
mov
sbb
sub
jne
sbb
jne
pop
fdivl
add
push
sub
cmp
push
pop
jecxz
adc
sub
cmp
cltd
cmc
sahf
cs
insb
nop
sbb
or
into
out
test
js
in
inc
and
mov
xor
aam
subb
mov
jnp
xchg
ret
cmpsl
dec
push
imul
xor
mov
add
push
xchg
adc
pop
xchg
jle
rcrl
xor
push
lahf
push
jmp
loopne
daa
xorb
cwtl
or
mov
pushf
sub
scas
sbb
cmp
mov
jl
out
pop
scas
fists
cmp
shll
pop
cmpsl
loop
sbb
xchg
mov
mov
push
insb
adc
pop
in
fidivrs
inc
xchg
lret
add
popa
xchg
jmp
mov
popa
mov
mov
jg
inc
adc
sti
iret
mov
shlb
stos
shlb
cmp
xchg
out
push
xchg
add
data16
mov
stc
stos
lahf
movsb
jbe
jae
jle
daa
and
inc
imul
aad
pop
jo
jb
loope
or
ja
cmpsb
lret
scas
mov
data16
mov
push
sub
mov
xchg
cmp
test
sbb
outsl
mov
aas
fistpl
jmp
out
add
jns
add
push
jp
pop
pop
and
ljmp
inc
xchg
xor
mov
dec
ss
mov
mov
fildll
dec
pop
sbb
outsl
xor
and
add
sahf
flds
sbb
pop
inc
add
or
or
jbe
sub
mov
xor
dec
xor
mov
jl
sbb
cs
push
insb
cmp
daa
jg
negl
xchg
push
test
fcomps
sbb
sub
push
aad
ret
dec
sbb
mov
add
inc
les
mov
mov
stc
push
lods
or
ja
mov
aas
adc
loop
mov
add
push
test
aad
xchg
sub
inc
xchg
xchg
sbb
add
scas
cli
sbb
pushf
sbb
dec
cmp
inc
pop
jp
mov
xchg
mov
mov
xor
popf
xchg
mov
rorl
clc
mov
js
inc
fsubrs
cmp
scas
cmp
std
leave
aad
jecxz
cwtl
ret
jbe
dec
sub
sub
adc
rol
rcrl
ret
push
inc
loope
add
xor
mov
clc
sub
shr
lods
ja
mov
psubsb
aad
loopne
push
ret
les
addr16
jge
sbb
pop
mov
push
mov
clc
in
leave
push
aaa
dec
lcall
out
pop
xchg
iret
xchg
cmp
push
enter
fnsave
sub
dec
mov
mov
dec
add
and
lret
push
mov
mov
inc
add
inc
mov
mov
out
pop
enter
add
fldcw
int
mov
decl
pop
mov
pop
cld
mov
loopne
push
cmp
xchg
mov
aaa
int3
stc
and
lds
xor
in
cmp
xor
into
cmpl
jmp
mov
sbb
out
pop
lods
jp
sub
push
cltd
mov
and
and
mov
mov
test
ret
jnp
aas
jb,pn
xor
ds
lret
outsb
out
fs
fmull
aaa
mov
push
mov
jecxz
pshufw
mov
lahf
mov
add
ljmp
mov
push
mov
jle
and
mov
jge
jg
cli
cld
xchg
xor
and
xchg
lods
push
mov
dec
add
fs
sti
or
xchg
fldl
jl
adc
call
mov
jg
inc
enter
or
out
pop
sub
jecxz
sbbl
inc
fcoms
aaa
cmp
loope
lods
out
imul
mov
jmp
pop
add
aad
xchg
icebp
imul
and
sub
in
imul
loop
pop
js
mov
ror
ror
ja
jnp
jecxz
loopne
aaa
je
fs
lods
inc
xchg
xchg
je
lods
add
xchg
push
inc
mov
sub
or
lret
ficomps
or
dec
ret
and
ja
or
mov
clc
pusha
repz
or
dec
cs
dec
and
xchg
push
cwtl
orl
outsb
movsb
push
incl
mov
dec
pop
divb
fistpll
les
test
cmc
and
mov
jge
jae
aaa
aas
lahf
push
ljmp
xlat
sbb
ds
hlt
sub
cmc
iret
fimull
mov
lock
out
addr16
xchg
jnp
addl
cli
sbb
add
mov
xchg
enter
mov
sbb
out
mov
int3
lret
rolb
mov
mov
fwait
pop
push
stc
insb
adc
ja
loopne
lahf
pop
pop
sbb
ja
mov
mov
mov
cmp
or
iret
enter
sub
xchg
daa
ret
cmp
jg
jns
or
mov
jne,pn
aaa
int
mov
clc
cmp
sbb
fs
aas
sarb
jns
dec
add
inc
and
out
nop
sti
insl
insb
mov
jnp
pushf
sub
aas
sub
es
in
mov
push
test
inc
pusha
fldcw
xchg
pop
les
int
mov
ret
mov
stos
add
sub
dec
and
mov
shl
mov
mov
ja
pop
push
outsl
add
lret
lods
icebp
lock
dec
aaa
outsb
xchg
adc
es
cltd
int
mov
pop
test
fmulp
fstpt
lret
adc
or
hlt
mov
ja
sti
iret
pop
jo
lods
cmp
xchg
inc
xor
push
mov
dec
inc
mov
cmpsl
lods
out
and
pop
mov
inc
add
push
or
aas
notl
mov
shlb
enter
xchg
outsl
loope
sbb
test
outsb
je
inc
mov
xor
cs
arpl
in
cltd
and
dec
sub
mov
testb
mov
js
mov
mov
inc
mov
jae
std
rep
jge
jle
add
setns
mov
push
xor
jecxz
xor
jae
or
adc
xor
js
out
push
inc
dec
aas
mov
aad
aam
add
xor
mov
mov
mov
sub
xchg
les
scas
inc
testl
mov
test
jcxz
cmp
in
rcrb
inc
push
cmpsb
imul
insl
imul
and
sub
ficoml
add
cmpsl
pop
mov
mov
push
and
movsb
mov
in
sub
incl
xchg
mov
push
push
int3
pop
cs
mov
cmpsl
in
fcomip
cli
cmp
scas
ss
xlat
insw
adc
and
xchg
int
outsb
js,pt
and
push
mov
pop
jne
shll
jg
shll
mov
cli
in
jno
adc
fldl
rorl
sarb
mov
dec
imulb
pop
dec
pop
mov
fldl
mov
nop
add
and
fisttpll
jns
adc
xchg
ja
ret
jp
xor
pop
dec
fsubp
ucomiss
inc
movsl
aad
push
dec
cltd
and
cli
pusha
jnp
ja
pop
mov
adc
push
cmpsl
mov
sub
mov
jo
and
adc
fwait
lret
sbb
lret
push
fildl
mov
cmp
mov
xor
xor
pop
sbb
fsubr
insb
sub
inc
repnz
jno
stos
scas
mov
nop
add
mov
lret
mov
cmp
int3
movsl
xchg
xor
jle
lods
xchg
js
gs
test
lock
std
xorl
loopne
out
jl
jne
je
adc
std
xrelease
sbb
sbb
mov
pop
or
int
cs
xchg
xchg
dec
into
dec
ja
sbb
idivb
es
data16
sub
scas
mov
adc
addr16
movsl
movsl
ret
rclb
repz
mov
fstps
mov
pusha
cltd
push
ficoms
jno
cli
pop
ss
cli
pop
cmpsb
cmp
lods
push
int3
lods
push
push
push
or
mov
ret
lahf
shlb
mov
cmp
ss
popf
add
lahf
ljmp
out
aas
imul
inc
add
aam
sbb
cmpsl
or
lcall
dec
pop
mov
fwait
imul
popf
cmp
dec
int
cmp
fnstcw
mov
test
jbe
adc
ja
ret
adcb
cmc
jl
repnz
and
inc
rorb
push
insb
aam
scas
enter
pop
sarb
pop
cmpsb
push
pop
mov
in
and
cmp
xchg
sbb
push
cmpsb
insb
mov
push
shll
cmp
iret
incl
negl
and
jecxz
push
push
jp
insb
ja
adc
int3
nop
mov
in
lds
loop
pusha
lret
loop
mov
cmp
adc
fdivl
jl
push
bound
or
cmp
or
rorl
sub
or
mov
pop
and
mov
mov
call
test
push
and
mov
orl
mov
mov
cmp
cmc
dec
ror
and
mov
jle
aad
add
jp
cmp
add
loop
cmp
pop
add
mov
sub
iret
cmp
mulb
xor
loopne
cwtl
mov
or
mov
sub
or
add
jae
rcrl
stc
test
flds
int3
pushf
dec
outsl
fcomps
cltd
push
fsubrs
cmpl
jg
cs
ja
mov
push
aam
and
sub
stc
mov
popa
lret
sbb
pop
mov
xorl
ret
dec
adc
push
cmpsb
insl
jno
add
data16
test
cmp
rcrb
jo
arpl
push
sbb
or
call
incl
inc
xchg
repnz
cwtl
dec
xor
jno
push
sub
sub
jae
loop
lods
jl
push
ror
add
fcoms
in
lods
pop
mov
push
mov
insl
mov
mov
jl
pushf
jecxz
sbb
mov
mov
rep
xchg
inc
cmp
daa
flds
int
je
fidivl
add
dec
out
xlat
jge
jmp
mov
push
dec
push
outsl
fwait
inc
xchg
outsb
in
cvtpi2ps
lods
and
sub
cs
inc
sbb
pusha
push
dec
fwait
xor
repnz
ret
fwait
lret
ds
shlb
sbbl
cmp
or
loop
pop
jecxz
pop
shll
mov
jb
pop
aaa
out
int3
inc
mov
dec
lods
cmp
inc
insb
shrb
sub
dec
scas
arpl
mov
jmp
out
dec
mov
adc
push
aad
mulb
cmp
jnp
movsl
mov
mov
lock
xorb
xchg
xchg
cld
sbb
insl
loopne,pt
jbe
or
add
jns
dec
scas
xcrypt-ecb
cmpsl
dec
dec
and
jno
js
and
jae
lea
lods
int3
add
addb
fistps
mov
leave
mov
sahf
add
mov
sbb
stc
cmp
scas
aam
jne
fwait
stos
sub
insl
xchg
jae
mov
lods
subl
loop
subl
xchg
sbb
ja
cli
popf
outsb
jbe
cwtl
aad
aad
pop
icebp
mov
fisttpl
dec
cmp
icebp
out
pop
xchg
ds
hlt
add
imul
xor
sbb
and
sbb
andl
inc
mov
ljmp
ret
cli
or
int
mov
jnp
and
ret
jns
cmp
jno
bound
mov
ror
mov
je
stos
bound
arpl
not
lahf
fs
cmp
sbb
sbbl
jp
mov
lds
xor
and
ds
inc
fcmovnbe
xor
movsl
cmp
mov
pop
pushf
sub
incl
push
dec
sbb
cmp
sub
clc
sbb
aam
and
hlt
cmp
in
and
inc
jb
movsl
movzwl
mov
add
xor
out
bound
cmp
sarl
es
adc
outsb
inc
scas
fsubs
ret
add
pop
sbb
pusha
lahf
lods
cmpsb
pslld
mov
mov
test
inc
jno
test
dec
sub
ret
mov
xor
data16
pop
aam
aad
inc
xchg
cld
dec
jno
add
das
test
or
pop
scas
hlt
sbb
lahf
inc
jecxz
sarl
and
imul
insl
push
mov
cmp
loop
jge
push
out
mov
outsl
aam
leave
shl
sub
lock
sbb
and
xor
pop
filds
mov
xchg
mov
rcrb
in
shlb
enter
insb
mov
mov
xor
lcall
arpl
enter
mov
dec
test
mull
pop
pop
sbb
enter
movsl
pop
std
psraw
cmp
pop
test
dec
repz
jae
sub
outsl
das
push
or
xor
addl
sbb
mov
fs
jmp
hlt
mov
pushf
bound
mov
and
pop
pop
cld
and
aas
jp,pn
shlb
sbb
xor
stos
mov
cmp
insb
add
js
inc
mov
cmp
test
push
daa
cltd
addr16
rclb
sbb
shrl
jecxz
and
inc
fstl
mov
xchg
in
pop
sbb
xchg
shl
mov
scas
psubb
xchg
xchg
inc
jnp
inc
dec
test
out
push
shrb
jne
imul
hlt
inc
or
out
mov
imul
mov
adc
into
sbb
arpl
cmc
fbld
sar
fisttps
or
add
es
mov
adc
xor
rol
rcl
dec
cld
nop
scas
ds
shl
mov
jne
and
insl
jl
lahf
fadds
cmp
repnz
xor
leave
sub
out
sbb
pop
test
stos
aaa
pushf
rolb
lret
in
xor
setnp
adc
lcall
dec
sbb
dec
out
lock
int3
ljmp
cld
xchg
mov
rcl
add
cmpsb
mov
sbb
push
cmp
cwtl
and
mov
jmp
sbb
sbb
lods
call
or
fisubl
inc
aas
mov
or
sub
mov
into
ds
inc
loop
mov
push
pop
sbb
and
in
movsl
jp
or
xlat
imul
xor
or
cmpsl
in
push
jno
ds
push
dec
push
aam
les
dec
ret
rolb
out
dec
dec
ja
rclb
mov
dec
mov
or
mov
cld
push
mov
scas
cmp
in
sbb
out
jge
nop
lock
sbb
cltd
adc
add
arpl
add
or
add
popa
mov
mov
mov
into
sarl
int3
loopne
imul
sbb
aad
mov
or
ret
mov
in
ret
loop
xor
sti
in
rclb
sbb
in
mov
imul
fcmovbe
out
push
adc
sti
xor
daa
in
les
dec
xor
add
adc
stos
arpl
js
cmc
outsb
aas
pop
inc
mov
xor
add
inc
icebp
and
sbb
add
push
mov
or
inc
aas
cmpsl
add
and
push
sbb
inc
xor
mull
fs
dec
andl
mov
pop
jnp
iret
and
sbb
sbbb
mov
mov
fidivrl
jae
xor
hlt
sbb
aaa
adc
mov
and
jb
lahf
cwtl
out
stc
pop
out
cld
inc
push
fisttps
cwtl
sub
pop
mov
mov
jae
xor
in
push
mov
fs
and
outsl
and
jb
arpl
rorl
sub
and
movsb
pop
dec
mov
fldenv
maxps
or
mov
xor
pop
push
repnz
out
mov
fxch
xchg
xor
sahf
xchg
js
inc
fstpt
dec
push
rclb
or
mov
mov
pop
xchg
jne
jge
outsl
mov
push
xchg
mov
xchg
pop
std
or
dec
xor
gs
subl
stos
xor
xchg
nop
out
xor
pushf
movsb
jae
add
push
mov
push
ljmp
test
jl
pushf
out
and
adc
ret
mov
bnd
test
sub
test
cltd
sarb
xor
push
data16
imul
jl
cmp
adc
jbe
roll
cmp
out
adc
outsb
mov
negl
andl
aaa
xchg
gs
jae
mov
jnp
rcll
push
add
dec
cmp
jbe
add
jae
cli
and
jb
mov
cld
call
xchg
sub
add
fstps
or
jl
mov
loope
call
nop
pushf
test
test
jns
test
push
out
fstpt
scas
inc
arpl
mov
int
data16
xchg
mov
aaa
repz
jb
and
orb
dec
cs
dec
mov
fdivrl
fwait
mov
cmp
fnsave
cld
out
orb
jno
addr16
mov
rcll
mov
mov
cwtl
inc
jb
andb
mov
test
push
outsb
repnz
jp
and
mov
pop
notl
popf
roll
push
add
lods
xchg
rcrb
data16
fwait
mov
mov
subb
xchg
cld
sub
clc
and
loopne
stc
push
jbe
add
cmp
push
fbstp
and
dec
rcl
jmp
lods
les
push
mov
loopne
mov
vhsubps
pop
push
incb
fimuls
pop
fldcw
outsl
lret
stc
imul
and
fiadds
in
insb
stos
cwtl
jecxz
sbb
outsl
pusha
and
push
insb
xchg
clc
and
imul
xchg
pop
js
lahf
xchg
push
jle
and
pop
lds
lret
jb
dec
add
jno
dec
xor
or
clc
xor
xor
jmp
and
fldt
xor
and
or
jns
inc
push
call
dec
jne
ficompl
push
and
notl
xchg
rolb
scas
xorl
sub
mov
cmpsb
in
dec
mov
pop
push
sbb
loop
mov
sar
pop
fsubs
outsl
in
arpl
pop
sub
inc
shl
mov
fs
mov
into
mov
mov
fldcw
shrb
ficoml
gs
inc
scas
shlb
jle
shlw
cmc
les
pop
pop
and
mov
rorl
sbb
adcl
xchg
sahf
fsubs
and
aad
bound
sbb
cltd
ljmp
enter
in
add
lea
inc
cmp
pop
in
xorb
arpl
push
or
mov
fisubs
lret
pusha
inc
sub
or
inc
mov
mov
and
pop
into
xchg
mov
mov
aam
fnsave
in
inc
dec
js
push
jp
adc
add
pusha
xor
jmp
xchg
stos
cltd
and
push
push
mov
push
test
in
out
sub
js
or
stc
sub
adc
in
loop
stos
rolb
push
mov
std
adc
scas
sbb
sbb
cmpsb
sahf
sbb
push
xor
push
add
xchg
shll
out
pop
in
jle
lret
mov
icebp
jnp
rorb
mov
icebp
xor
adc
push
xlat
addr16
mov
aad
andb
push
dec
andl
js
and
or
aam
sub
loopne
mov
mov
and
inc
push
imul
mov
jno
aaa
mov
aam
lret
mov
add
int
add
negl
fcoml
sar
jno
gs
ja
bswap
lret
push
out
bts
test
mov
into
sub
imul
and
sbb
pop
mov
dec
cmp
jmp
imul
xorb
loope
or
insl
test
pop
in
ljmp
dec
aas
in
and
dec
mov
push
fcompl
mov
aas
int3
hlt
push
icebp
xlat
fmulp
mov
lea
mov
push
ljmp
dec
lcall
repnz
aad
jno
out
dec
inc
es
jnp
in
imul
sub
pop
cmc
pop
shrb
pop
rclb
loop
js
lods
lds
cmp
dec
mov
lcall
in
mov
bound
push
mov
jno
movsb
ja
shl
jnp
and
mov
jbe
je
pop
xchg
jp
bound
mov
jg
cmp
fidivs
cmpsl
push
dec
repnz
fistl
inc
aam
cmpl
mov
and
pop
in
popf
mov
loope
jb
movsb
int
pop
and
test
cmovbe
cmp
test
sbb
xchg
adc
and
nop
inc
pop
mov
xor
sub
fdivs
pusha
mov
add
fdivs
mov
adcb
mov
rorb
xchg
sarl
xchg
daa
add
fcom
push
jle
sub
mov
add
addr16
jg,pt
inc
lea
jmp
mov
pop
sub
cmp
inc
jns
jae
jge
sbb
sbb
neg
out
xlat
divl
cmp
dec
push
fiaddl
dec
lcall
fwait
dec
sbb
inc
clc
adc
adc
mov
int3
or
mov
fisubl
stc
stos
inc
icebp
ja
mov
mov
adc
pop
pop
testb
xchg
mov
test
pop
lds
into
scas
repnz
inc
adc
movl
jle
stos
jo
and
pop
cmpsb
fucomip
popf
adc
aas
pop
frstor
das
adc
adc
xchg
mov
scas
fwait
sub
outsb
out
mov
cmp
lods
jno
in
xchg
movsl
xchg
sub
jg
and
dec
mov
mov
jae
xchg
int
in
pop
lods
lcall
xor
stos
sarl
dec
jmp
mov
dec
push
bound
and
push
aas
aad
lock
pop
cltd
mov
inc
ds
lock
mov
jl
adc
jb
push
mov
orl
bound
sti
lock
fiadds
icebp
mov
lret
stos
ret
aam
or
pushf
push
addr16
dec
xor
loope
jno
test
movsb
inc
mov
sbb
sub
mov
xchg
adc
lcall
pop
sbb
ret
cmp
mov
sbb
or
mov
sub
sub
scas
cltd
aam
inc
push
pushf
iret
movsb
arpl
fcompl
in
and
jmp
scas
outsb
xchg
inc
xchg
add
testl
sbb
cs
mov
adc
sub
in
jg
sub
in
push
hlt
jge
rorl
lock
divb
xor
lret
sbb
not
jle
cld
addr16
push
and
int3
jg
aad
fidivrs
arpl
je
xor
adc
jo
ljmp
out
xlat
or
outsb
sub
push
sub
mov
mov
cmp
out
push
outsl
xchg
int3
mov
or
pop
inc
mov
xchg
xor
cld
mov
or
add
xchg
nop
rorb
adc
cmpsb
fadds
int
adc
lea
sub
and
push
mull
fwait
testb
push
pusha
mov
adc
mov
sti
sub
adc
push
xor
ss
add
jae
and
testl
jo
popa
xchg
in
or
pushl
sarb
mov
ret
dec
stos
cs
mov
add
mov
movsb
into
add
mov
xor
bound
test
stos
add
jbe
cmp
push
cmp
inc
mov
inc
sub
and
fwait
mov
mov
dec
scas
mov
shrb
shr
xchg
fmull
in
iret
xchg
sub
in
xor
mov
lods
das
lods
movsb
adc
pop
dec
fmull
mov
push
sti
xchg
jne
cld
insb
fisttpl
jne
test
sbb
shrb
cwtl
imul
test
add
clc
iret
mov
xchg
ret
xchg
divl
and
mov
cmp
jae
xchg
add
dec
push
sbb
aad
and
into
pop
repz
in
ss
mov
mov
aam
mov
in
mov
andl
mov
sti
xchg
mov
sub
dec
outsl
xchg
lods
sahf
push
mov
push
mov
cmc
mov
movsb
xchg
dec
pop
jmp
jmp
fnstenv
aas
add
addl
mov
dec
mov
imul
int
jae
inc
jmp
insb
fwait
jae
add
shl
or
adc
or
fldl
test
sbb
jbe
aaa
sub
lods
mov
arpl
mov
roll
mov
aam
jo
cmp
mov
mov
mov
cmp
popf
fcmovnbe
jmp
dec
cltd
mov
push
mov
push
push
je
sbb
lcall
ja
push
out
push
daa
mov
daa
daa
movl
les
gs
fmuls
pop
mov
or
pushl
push
mov
adc
mov
ds
push
xchg
lret
popf
add
les
sahf
jle
or
xchg
pusha
ja
add
mov
sbb
cmp
push
xor
rcl
push
dec
xor
mov
sub
mov
fwait
mov
jnp
ret
xorl
xchg
icebp
inc
movsl
adc
mov
mov
xchg
shrl
negl
jbe
push
in
movsb
ss
mov
loop
popa
arpl
xor
dec
add
dec
dec
xor
leave
xlat
and
shrb
aam
scas
incb
scas
insb
ss
into
adc
mov
pop
iret
inc
xchg
and
sub
sbb
out
push
add
pop
cmpsb
ljmp
sub
xchg
sbb
rcr
mov
cmp
mov
xchg
and
sbb
cbtw
mov
or
adcb
xor
fdivl
jae
pop
xor
fucom
inc
gs
and
mov
xor
dec
stc
pop
xor
pop
enter
loope
test
cmpb
push
or
mov
dec
ja
and
fildll
cltd
stc
or
mov
add
rol
mov
mov
sbb
push
nop
jnp
imul
testb
sar
in
cli
jae
dec
test
add
loope
cli
rclb
in
sti
out
dec
lret
dec
fcomip
pop
push
ror
pop
out
call
xchg
std
pop
xchg
inc
ficoms
adc
out
fmulp
mov
xor
adc
or
mov
ror
push
add
xchg
rcl
daa
icebp
mov
into
decb
lret
dec
ds
and
sbb
daa
in
sub
push
jg
xchg
icebp
dec
push
add
xchg
sub
ljmp
rclb
adc
out
das
cmc
gs
or
cmp
inc
dec
stos
fsubp
test
outsb
mov
mov
or
movb
ds
cmp
xchg
jb
pop
insb
jb
sub
lcall
sbb
pop
mov
add
mov
and
mov
add
add
sub
loop
mov
add
fnstsw
sbbb
push
push
sbb
outsb
stos
xchg
adc
xchg
jo
mov
sbb
fisubl
or
out
adc
int
shll
xor
stos
in
adc
jae
inc
mov
adc
adc
iret
push
xor
movsl
sbb
and
push
scas
lods
imul
rol
inc
dec
pop
sahf
or
pushf
push
arpl
jbe
xchg
notb
enter
mov
fmull
dec
mov
ja
push
push
inc
popf
adc
adc
lret
pop
lods
dec
lcall
testl
add
mov
pusha
ror
inc
sbb
dec
pop
out
addl
dec
push
add
jecxz
push
xchg
aaa
pop
mov
cmp
pop
ret
xor
pop
mov
or
inc
mov
nop
cmp
push
insb
aaa
mov
and
xchg
scas
and
mov
cmp
js
dec
lock
packuswb
push
aas
and
xor
xor
lcall
addr16
inc
mov
inc
pop
jne
rcr
arpl
inc
aad
jmp
pop
jb
je
mov
jge
xchg
pop
add
outsl
sbb
xchg
repnz
aad
pop
sub
aaa
mov
xor
movsb
xchg
xchg
bnd
xchg
cmp
cmpsb
push
mov
mov
ror
pop
cmp
das
push
sbb
sub
loop
sbb
fiadds
sarb
js
xor
outsl
cld
add
push
mov
lret
push
and
sbb
add
xchg
and
rcll
data16
aas
pushf
pop
jbe,pn
push
iret
sbb
mov
xchg
or
push
pop
mov
cmp
enter
fwait
sbb
sbb
sbb
and
xor
insb
test
pop
scas
fptan
fsubr
inc
xor
pusha
sbb
jno
mov
mulb
out
add
stos
cmp
insl
es
rolb
mov
ret
aam
and
dec
cmp
cmp
cmp
fs
clc
pusha
or
or
inc
cli
lea
stc
imul
jmp
sahf
mov
pusha
mov
or
inc
add
loope
fcomps
jl
out
sahf
adc
jo
mov
fninit
pop
cwtl
pop
pushf
adc
adc
fwait
jmp
sub
dec
mov
cltd
pop
nop
push
ret
gs
aad
xchg
mov
push
cmp
jno
mov
or
mov
das
xor
xor
shr
stc
movl
sbbb
out
cmp
cmp
outsb
incl
jmp
cmp
std
icebp
out
sub
dec
das
incl
stos
xor
and
xor
daa
inc
pop
clc
fdivl
adc
pop
xor
jmp
xor
inc
pop
in
adc
mov
shll
mov
jg
pop
dec
mov
data16
dec
stos
test
hlt
cmc
cmpsw
sbb
fsubl
stos
clc
lods
mov
ss
sbb
cmp
lds
xchg
mov
or
stc
fwait
cmp
xchg
movsb
xor
adc
and
dec
mov
loop
testl
cmp
ja
lds
dec
divl
fimull
arpl
sbb
dec
add
jl
inc
out
xchg
cmp
sub
pushl
fbstp
cmpsb
mov
mov
leave
ljmp
pusha
cmpsl
and
dec
stos
dec
loope
mov
lock
pop
pop
mov
jb
cmc
sbb
cmpsb
or
xor
lock
test
into
add
sarb
cmp
movsl
adc
lods
pushf
push
xor
mov
in
mov
mov
cmp
test
fucomp
andl
nop
bound
out
into
int
lahf
arpl
add
jecxz
rol
mov
lret
daa
iret
xchg
mov
mov
push
aaa
enter
scas
lods
aas
fmuls
lds
xor
and
jb
push
adc
fs
ja
sbb
and
cmp
xor
push
jg
jbe
in
leave
and
pop
jnp
and
int3
call
in
imul
lret
push
add
icebp
sbb
and
lret
rcrl
cli
dec
stos
cmp
and
hlt
pop
cmp
xor
push
movsl
loopne
add
cltd
jno
push
addl
out
sbb
cmp
insl
aaa
mov
push
cmp
push
mov
ljmp
into
rol
inc
inc
dec
dec
paddw
pop
or
mov
cltd
mov
pushf
sub
cmpb
xchg
addr16
rorl
push
push
icebp
aas
xchg
xor
mov
or
sub
out
repnz
aam
mov
push
cltd
pop
xadd
fs
ljmp
repz
insb
dec
cli
xor
cmc
test
jl
lea
int3
ljmp
mov
xor
pop
jne
sbb
adc
xlat
mov
cmp
mov
lods
out
inc
xor
jns
pop
rcll
je
xor
dec
shrb
pop
mov
mov
enter
sbb
and
jno
jbe
fdivr
xor
jno
clc
lret
adc
arpl
inc
cmc
mov
loop
jg
insl
mov
fisubrl
lock
out
mov
or
arpl
add
rep
jno
div
test
mov
movsb
cmp
mov
xor
js
mov
enter
outsb
aas
mov
dec
xor
jne
fwait
lods
out
pop
sub
enter
ret
mov
jmp
and
outsb
cltd
int
jmp
fistl
and
xor
dec
lahf
into
mov
dec
scas
mov
sub
std
mov
lea
sub
mov
sbb
lods
shll
addr16
dec
decb
pop
xchg
ficoml
add
aas
ja
not
inc
ljmp
pop
sbb
imul
ror
imul
sub
in
jo
push
adc
pushf
adc
mov
cli
loop
adc
xor
mov
and
dec
mov
mov
popf
shrl
leave
mov
into
jge
dec
js
sbb
jmp
pop
leave
mov
jp
aam
aam
mov
mov
fnstenv
xchg
mov
mov
push
enter
fadd
jle
lret
je
xor
xor
mov
pop
sub
pushf
fnstenv
aas
xor
jne
adc
push
ds
jmp
sbb
pcmpeqd
push
insl
inc
ja
gs
push
imul
xchg
daa
pop
data16
and
pop
ror
jp
cmp
add
outsb
cmpsl
dec
fs
test
test
in
mov
dec
inc
lods
pop
dec
movsb
in
lret
dec
push
cld
pop
fwait
pop
cmc
xchg
js
gs
daa
mov
into
rcll
xchg
ljmp
push
and
mov
pop
pop
mull
adc
xor
dec
popf
adc
mov
xchg
pusha
mov
mov
dec
sbb
shl
into
stc
dec
ss
sti
jno
jecxz
push
dec
cmp
sti
pop
fcoms
xchg
outsl
in
pop
stos
inc
cmc
add
int
movl
in
insl
out
mov
pop
push
cmpb
insb
imul
mov
jg
or
xchg
movsl
enter
xchg
loop
inc
pop
sub
push
ljmp
test
xor
je
jbe
push
dec
into
aaa
inc
jne
mov
imul
ljmp
mov
inc
adc
push
pop
test
sbb
jmp
adc
xchg
or
sub
lock
enter
jle
mov
in
rorl
outsl
out
adc
add
pushf
std
inc
mov
inc
push
inc
popa
in
rorb
out
imul
imul
popa
imul
pusha
or
test
cmp
out
sbb
xor
pop
lret
dec
gs
add
cmp
shrb
in
daa
insl
mov
mov
aas
gs
cmp
hlt
mov
xchg
lret
inc
xchg
icebp
test
inc
push
mov
and
adc
xor
cltd
in
addl
jns
jecxz
shlb
lods
pop
cmp
xor
and
xlat
pminub
into
mov
test
jb
scas
gs
scas
pop
inc
stos
scas
scas
enter
cld
std
pop
mov
mulb
cmpb
in
loop
and
loope
leave
jle
xchg
jg
test
mov
adc
xchg
adc
dec
movsl
adc
aas
add
jns
insl
je
or
pop
dec
cmp
outsl
sub
jmp
cmpsl
and
out
aaa
add
cmp
xor
and
jge
add
rcl
outsl
leave
pop
push
xchg
mov
push
aam
inc
sub
loop
popa
inc
sti
insl
sub
fimuls
lods
dec
mov
cmc
clc
popa
lods
push
xor
in
cli
and
add
pop
lret
fucom
push
das
hlt
pop
dec
shl
movsl
xchg
std
hlt
push
jno
jae
hlt
dec
repnz
cmpsb
js
pop
and
lods
imul
pop
fimuls
lret
mov
std
test
inc
out
fucomi
jnp
push
out
in
sub
cwtl
inc
roll
fnstsw
sbb
clc
cmpsl
and
jno
sbb
cs
dec
mov
rol
pop
xchg
ret
jg
fadd
stos
fadds
mov
cmp
sbb
and
addl
andb
push
mov
and
iret
pop
push
lret
mov
mov
repz
stos
mov
enter
movsb
stos
dec
jmp
or
and
flds
insl
aaa
bound
mov
out
shrb
dec
push
jmp
out
or
jns
mov
push
addl
push
mov
sub
sar
frstor
mov
mov
push
fdivrs
push
jns
and
lock
popf
inc
mov
scas
add
mov
dec
or
mov
mov
in
and
xor
push
jbe
jp
arpl
lret
out
dec
mov
sub
mov
insl
pusha
loop
mov
pusha
addr16
mov
stc
rcrb
into
aad
inc
jmp
nop
push
decb
pusha
daa
sbb
mov
pop
jne
xor
xor
adc
push
mov
into
movsl
aam
pusha
popa
aaa
xchg
jo
loope
arpl
lods
in
jne
in
adc
cmpsl
scas
aaa
es
scas
aas
sub
imul
xchg
push
das
stos
jmp
xor
mov
and
inc
mov
pop
cmp
jae
fsubs
xchg
cmpsb
in
mov
outsb
push
stos
popf
insl
adc
xchg
testb
shlb
ds
cs
add
xor
fldt
bound
div
mov
negl
test
fcompl
into
xchg
xchg
daa
dec
movsl
adc
test
repz
dec
sub
jle
and
push
fs
or
mov
jmp
insb
add
mov
loop
inc
sarl
xchg
ljmp
pushf
cmp
jbe
out
lods
inc
aaa
aam
or
add
rcrb
in
int
adc
dec
jno
pop
mov
std
jo
scas
fprem1
loopne
or
lds
movsb
daa
dec
pop
icebp
popa
test
dec
in
fbld
sarb
dec
mov
sub
xchg
fs
pop
cltd
bound
arpl
push
outsl
cmpsb
xchg
leave
mov
fisttpll
and
lea
insb
add
repz
insb
out
push
mov
cmpsb
fldl
scas
xchg
jo
sub
lds
or
mov
cmp
daa
inc
adcl
fwait
imul
mov
ja
mov
jmp
sbb
in
in
add
jo
sbbl
mov
lahf
mov
jmp
rclb
mov
repz
pop
repz
lea
jb
xchg
fldl
fwait
setne
mov
cmp
mov
fldl
jbe
movsl
rorl
xchg
lds
inc
cld
push
add
mov
in
scas
pop
enter
add
daa
jne
xchg
add
movsl
into
orl
fcompl
fsubrl
mov
jge
jo
push
xchg
xchg
mull
mov
sub
mov
jne
ja
aad
xorl
scas
movsb
adc
pushf
xorl
pop
sub
mov
stos
inc
pop
inc
jp
fs
push
xor
mov
pop
mov
je
dec
mov
mov
or
pushl
push
loopne
dec
stc
lock
lock
stos
inc
ficomps
cmpsl
jae
fcmovnbe
dec
scas
divl
lock
pop
fnstenv
imul
sahf
loopne
out
aaa
sub
dec
cmpsl
into
gs
pop
cmp
test
in
or
shl
push
jb
mov
mov
out
enter
xchg
xor
popf
aas
cmp
xor
xchg
jne
shl
jmp
stos
adc
jmp
ja
mov
cmp
adc
int
and
add
dec
jo
cmp
call
jmp
aam
insl
insl
or
fcoml
test
sub
out
mov
mov
imul
sub
outsb
loopne
xchg
pop
inc
into
push
ss
jl
movsb
adc
pop
subb
dec
adc
xchg
aad
dec
xchg
jb
subl
sbb
pusha
mov
es
dec
dec
mov
loop
out
add
mov
inc
repnz
or
mov
test
cmp
and
adc
lods
mov
mov
cmpb
push
hlt
sbb
andl
cmp
pop
xor
mov
ljmp
dec
push
mov
stos
dec
xchg
sbbl
pop
sub
cld
imul
mov
stc
enter
pop
jg
mov
sub
jg
in
xchg
xchg
xor
ret
mov
fadds
stos
ret
das
test
mov
mov
and
xchg
lea
daa
pop
mov
add
adc
daa
add
sbb
jbe
lods
xchg
add
adc
lods
xor
inc
pop
adcb
adc
jb
jno
pop
stc
cmp
xor
pop
pop
scas
enter
or
pop
das
mov
sti
and
addb
push
cmp
into
stos
lock
inc
movsb
xor
inc
ret
les
imul
sarb
add
add
cli
cmp
or
leave
addr16
jmp
and
or
hlt
aaa
ret
fs
push
jge
das
mov
jne
das
cwtl
jge
and
jnp
push
dec
pop
mul
cmc
jne
add
push
clc
data16
and
dec
sarb
xchg
jle
inc
adc
repnz
xchg
sbb
insl
push
push
es
inc
ret
or
jno
sti
icebp
in
arpl
imul
adc
je
cli
jne
ljmp
inc
daa
lock
je
add
pop
popl
jns
arpl
xchg
or
les
dec
scas
insb
mov
sbb
out
sbb
or
push
scas
push
aaa
xor
jl
fdivrs
je
jmp
mov
xor
fisttpl
shrb
and
int3
movsb
sbb
xlat
mov
jno
mov
pop
sub
and
icebp
outsl
sub
dec
es
pop
out
enter
lahf
pop
push
in
out
jp
imul
lahf
xor
pushf
push
fadds
in
cmp
scas
outsb
into
sbb
je
ljmp
xchg
jge
xchg
sbb
clc
pop
xor
subb
cmp
fnstcw
xor
bound
dec
fldenv
test
mov
les
pop
outsl
repz
in
mov
adc
xor
xlat
xchg
push
sub
pop
into
add
dec
add
je
push
inc
mov
mov
lret
xor
in
adc
cmpsl
pop
mov
imul
pushl
xchg
adc
mov
pop
leave
xchg
std
inc
xor
jle
sarb
jp
pop
test
xchg
fisubl
loop
pop
flds
jecxz
enter
mov
adc
cmp
and
scas
ja
mov
mov
daa
into
mov
jbe
cltd
xchg
aas
mov
mov
mov
fldenv
mov
pushl
jbe
mov
idivl
sub
into
stos
xchg
pop
add
add
stos
nop
fdivrs
mov
das
sbb
ljmp
mov
lods
pop
push
jmp
imul
in
jnp
lret
js
xor
dec
imul
fucomp
xorl
xlat
inc
fldcw
add
inc
jge
mov
xor
add
mov
xor
adc
cld
sbb
js
outsb
bt
rcl
mov
push
sahf
mov
enter
add
mov
jns
push
adc
call
js
into
or
test
push
xorb
push
arpl
cmpsb
pop
cmp
mov
std
iret
data16
lea
inc
lods
imul
ds
sahf
movsl
hlt
cmc
sti
or
mov
xor
sub
out
push
mov
leave
pushf
sub
fdivrl
sbb
addb
sbb
sub
mov
xchg
xor
ret
arpl
popa
inc
inc
cmc
pop
loop
into
xchg
fisttpll
xor
dec
popa
out
insb
mov
lcall
ficompl
sub
in
dec
jnp
mov
vphadduwq
pop
adc
aad
xchg
shll
xchg
cmp
add
scas
or
lods
jp
daa
jne
out
or
push
cltd
jb
push
xchg
loopne
cmc
fbld
xor
iret
inc
xor
int
in
sbb
or
mov
mov
sub
xor
inc
cmp
xchg
in
test
pop
xor
shl
and
add
push
xor
out
out
add
stos
shll
dec
jne
sub
jns
iret
xchg
pusha
test
push
mov
cs
scas
jns
imul
cmpsl
and
mov
adc
lret
shld
dec
jmp
xor
test
jne
inc
into
dec
mov
cmp
dec
in
pop
out
fadds
cs
sbb
or
arpl
dec
fs
popf
iret
jnp
mov
mov
dec
mov
inc
jbe
push
es
pop
xchg
mov
xor
int
dec
add
dec
xor
mov
xchg
xchg
pop
cmp
mov
sub
imul
mov
imul
jnp
lods
push
xchg
pop
cltd
push
jnp
cmpsb
int3
jne
int3
ret
lods
xchg
pop
aam
push
adc
mov
movsb
int
push
popa
jge
or
push
ljmp
push
aam
fisubrl
and
xchg
in
dec
xor
jns
in
in
push
shrb
shll
clc
sbb
add
xor
lea
or
in
mov
dec
icebp
mov
fs
shl
mov
adc
fistpl
push
movsb
outsl
cmp
rcrb
xchg
dec
adc
inc
ret
jmp
pushf
adc
push
inc
adc
daa
push
jp
pushf
dec
movsb
lock
jmp
pop
add
fwait
out
mov
jno
or
loopne
mov
in
inc
cmp
fistpl
fdivp
jl
sti
cmp
mov
aam
iret
fstps
push
cmp
jge
out
push
add
mov
das
out
sbb
dec
clc
xor
push
add
sub
sub
leave
and
inc
popa
lock
jns
mov
in
sub
sbb
into
push
push
add
ljmp
xchg
lea
lret
cmpsl
pop
into
push
push
push
jmp
jecxz
jb
jns
jge
pop
xor
les
adc
pop
xchg
lahf
jl
jmp
ljmp
mov
dec
xor
and
clc
in
cmp
mov
test
inc
das
dec
add
cmp
sub
negb
add
sbb
gs
mov
call
in
mov
xchg
scas
popa
fwait
pop
cwtl
clc
cmp
add
inc
fwait
lods
aam
aam
adc
mov
dec
inc
and
orb
fdivrs
mov
es
cmp
dec
mov
addr16
pop
pushf
mov
pop
movsb
push
addb
icebp
pop
xor
int3
daa
xchg
scas
ja
adc
pavgb
outsl
imul
rcr
xor
jo
fimull
popa
jns
cmpsb
push
jmp
push
push
mov
xor
dec
ss
into
mov
sub
mov
xor
or
adc
stos
aas
cmp
jp
jne
test
pop
cmp
idivl
call
sti
adc
jmp
mov
lods
fucomp
inc
ds
mov
xor
push
rorb
out
aad
sub
nop
int
or
push
insl
sub
push
loope
jbe
enter
add
jp
or
xchg
adc
divb
inc
cmp
lcall
arpl
add
test
dec
sub
outsl
cmp
insb
mov
popf
insl
stc
sbb
jo
mov
mov
sub
pop
push
lret
jns
add
ljmp
push
xchg
test
es
xchg
and
out
or
leave
xor
out
mov
jle
sub
sub
in
loopne
fstp
cwtl
push
cmp
das
or
outsb
lods
push
test
inc
aas
cwtl
inc
adc
push
mov
jno
ljmp
xchg
mov
shll
push
cmp
addr16
mov
cmp
xchg
outsb
push
dec
mov
addl
xchg
jmp
push
push
fdivrs
jg
mov
insl
xchg
push
outsb
cwtl
stos
mov
xor
mov
mov
xchg
sbb
int3
cld
and
push
or
in
ja
fistpll
movsl
jbe
mov
popa
dec
push
mov
xor
leave
and
push
addr16
push
mov
push
outsb
mov
aas
fldenv
sbb
mov
or
xchg
xor
inc
mov
mov
mov
leave
testb
xchg
add
push
iret
arpl
ljmp
or
imulb
push
lea
loope
pusha
adc
aad
data16
repz
out
jmp
cmp
lcall
bound
adc
fistps
pop
mov
pop
push
and
pop
imul
sbb
ja
ljmp
and
dec
push
test
andl
movsb
fwait
in
test
into
sbb
push
shlb
sbb
lahf
dec
push
or
rcr
lret
pop
xor
ret
movsl
aas
lret
jecxz
inc
lahf
mov
cmp
push
aad
out
push
dec
loope
mov
enter
xchg
add
mov
imul
cmp
rcll
nop
faddl
aam
pop
mov
dec
pop
mov
jecxz
stc
add
in
loope
and
or
in
push
ss
pop
xchg
out
inc
daa
jno
xchg
aas
sti
jnp
inc
shlb
test
sub
roll
and
sti
jae
in
sub
pushf
lcall
pop
pushf
arpl
sub
or
arpl
sub
roll
ret
fldcw
xchg
dec
xchg
fs
nop
and
es
dec
inc
call
orb
mov
add
subb
popf
cmp
lahf
test
jp
clc
pop
es
cwtl
out
cmp
mov
mov
jg
enter
sub
xchg
dec
push
push
mov
stc
das
scas
adc
lea
cld
test
xor
nop
outsl
mov
pop
dec
dec
pop
adc
fwait
mov
cmc
in
addb
jle
jecxz
rorb
jne
mov
mov
ror
pop
push
xor
les
sbb
loopne
or
lcall
imul
shr
mov
xlat
or
sahf
addb
movsb
fdivrs
mov
cmp
fwait
dec
sub
insl
pop
js
xchg
mov
mov
cld
jge
outsb
fldl2t
or
xor
nop
xchg
dec
xor
pop
mov
push
pop
or
aad
inc
jo
outsb
orl
pop
rclb
ds
xor
lcall
scas
and
sahf
xor
pop
pop
cmpsl
push
xchg
add
xchg
iret
sbb
in
aaa
adc
mov
inc
dec
xchg
mov
imul
push
in
in
movsl
outsl
pop
push
dec
jne
cwtl
add
sbb
adc
mov
push
cmp
mov
pop
inc
stos
enter
pop
sbbb
fiadds
aad
outsl
fld
fnstcw
jmp
jne
cmp
and
insl
clc
push
mov
orl
shl
dec
xor
inc
fnstenv
or
pop
iret
scas
push
js
fdivs
lea
cmpsb
jmp
xchg
jmp
rcrl
push
repnz
lods
pop
inc
cmp
lods
xchg
shrl
xor
fisubs
sub
and
adc
mov
dec
sbb
clc
or
and
sarl
out
adc
adc
mov
nop
mulb
in
add
mov
in
mov
loop
enter
out
cmp
ret
into
sbb
pusha
roll
daa
jle
sbb
push
lea
call
popf
popa
push
fstpl
or
and
and
mov
test
rcll
stc
shrl
imul
and
inc
mov
imul
scas
popa
addr16
in
das
mov
pop
stos
les
test
jae
mov
push
and
test
lea
cmp
iret
js
xchg
cmp
xchg
dec
popf
std
mov
scas
pop
dec
ljmp
ret
mov
jle
sub
cs
mov
mov
out
sahf
add
popf
adc
enter
dec
stos
fdivl
pop
xchg
cmp
lock
and
pusha
pop
pop
popa
popa
scas
push
cmp
mov
mov
xchg
mov
mov
pop
adc
cli
add
and
js
mov
mov
push
stos
ljmp
shlb
test
inc
pcmpgtd
xchg
movsl
and
imul
xor
mov
mov
adc
add
inc
mov
aam
inc
inc
dec
and
vmovd
ja
xchg
cwtl
sub
fld
xchg
jg
push
nop
or
loopne
pop
cmp
dec
leave
mov
roll
ja
adc
pop
inc
mov
stos
out
add
inc
das
mov
push
sbb
jecxz
sbb
xlat
cmp
cld
nop
int
jns
lock
adc
pop
daa
jp
lahf
pushf
pop
mov
inc
mov
cmpsb
adc
jns
inc
push
test
aas
pop
mov
iret
mov
inc
loop
jg
inc
rolb
xchg
lds
push
pop
xchg
adc
sub
lret
push
and
xchg
pop
push
inc
insl
push
test
adc
adc
and
cmp
outsl
mov
lods
popf
jp
es
mov
hlt
or
mov
loope
push
add
cwtl
sbb
fiadds
out
pop
jecxz
aaa
mov
adc
addb
ss
dec
in
add
stc
or
test
outsl
les
push
cmc
repz
or
jne
adc
sbb
cwtl
ret
insb
jp
dec
jno
pop
fs
loope
xor
xlat
adc
xchg
xchg
push
test
mov
mov
push
pop
push
loopne
sarl
cmp
pop
lret
scas
sub
mov
movsl
test
mov
les
ss
xchg
jne
test
cmp
data16
pushf
jnp
div
mov
lock
das
sahf
jle
inc
outsl
jbe
cwtl
cltd
pop
mov
push
dec
xor
xchg
inc
push
inc
lret
or
or
mov
inc
mov
loope
mov
rol
sbb
nop
aas
imul
aam
aad
rcl
mov
and
idiv
lods
xchg
sahf
in
lcall
jae
cmp
cs
not
pop
mov
inc
fistpll
call
shl
pop
inc
sbb
clc
add
cmp
popf
push
arpl
insb
stc
jp
movsl
adc
int
mov
add
daa
adc
mov
add
lea
mov
pop
and
gs
add
iret
aad
fmul
jle
incl
stos
jb
xor
cmp
mov
nop
stc
mov
jns
adc
xchg
and
repnz
inc
cmp
adc
inc
inc
sbb
or
mov
push
push
adc
out
repz
sub
sub
adc
pop
gs
pop
push
mov
iret
frstor
js
into
jmp
mov
daa
push
and
add
mov
movsl
mov
mov
cmp
push
push
mov
bound
inc
int3
iret
aaa
outsb
stos
fucomp
or
fbld
push
pusha
inc
and
sbb
fcmovnbe
push
fisttpll
xor
inc
pminsw
movsb
xchg
insb
pop
lret
gs
cmp
fucompp
push
and
push
sbbb
add
jg
push
inc
fs
jle
dec
sub
jne
add
addr16
push
das
jge
push
pop
jb
test
jno
cmp
jge
lods
and
dec
cmp
mov
or
icebp
or
sub
ljmp
mov
and
mov
cltd
inc
cmpsl
daa
idivl
mov
add
mov
push
mov
stc
sahf
mov
sti
push
jne
add
addr16
jcxz
mov
test
in
dec
icebp
sub
xchg
int
stos
lods
in
cmp
or
je
cmpsb
inc
or
or
leave
pop
loopne
mov
in
xchg
jns
push
fstp
mov
scas
shl
xor
std
pop
mov
cli
and
cltd
ljmp
push
outsb
js
out
add
or
lds
dec
orl
inc
dec
lcall
dec
jp
mov
or
cmpl
or
sbb
sub
mov
inc
cmp
pop
out
push
push
std
adc
hlt
imul
in
jnp
mov
dec
movsl
in
into
hlt
adc
cmp
scas
push
mov
lret
and
cmp
xchg
push
daa
mov
cmp
xchg
fiaddl
iret
aad
test
inc
jae
stc
out
pop
mov
push
mov
into
jno
inc
push
cmp
push
sbb
mov
dec
xor
xchg
daa
ljmp
pusha
xchg
aam
push
add
pop
xor
mov
cs
mov
xor
or
push
xchg
xchg
sarl
mov
or
lock
andl
cmpsb
gs
mov
ret
cs
popf
fcom
jge
pusha
or
lret
fcoml
in
js
stc
xor
pushf
pop
lahf
fldenv
std
xlat
adc
pop
loope
cwtl
stos
add
xchg
xchg
addl
repz
push
mov
movsl
sarb
jl
add
pop
dec
add
mov
mov
and
daa
dec
and
push
fldenv
xchg
bnd
test
xchg
pop
xor
sbb
cmp
fidivs
mov
leave
jo
adc
mov
pushf
out
jns
stos
je
inc
inc
sub
cs
or
rorb
inc
push
andl
orb
pop
fnstcw
ds
xchg
es
inc
and
into
or
jecxz
fcomi
aam
das
in
ja
cmp
cmp
inc
in
sub
pushf
gs
xchg
in
cmp
std
test
lds
mov
jno
or
push
aam
xchg
push
ljmp
adc
mov
fdivrl
push
add
cld
jmp
pop
gs
jns
inc
incb
or
mov
movl
jbe
pop
cmp
dec
mov
fwait
cs
aas
and
jo
movsb
outsl
cmpsl
jae
pop
movsb
out
loopne
gs
je
fstl
mov
scas
xchg
jp
fsubs
push
clc
pop
push
mulb
adc
test
dec
insb
fisttps
movsb
dec
call
push
fisubl
xchg
lods
push
es
js
adc
push
push
rcrl
inc
cltd
leave
sub
pop
xor
lret
sbb
call
xor
mov
mov
loop
cmp
scas
cmp
fucomip
cwtl
or
mov
scas
push
inc
mov
hlt
mov
push
lcall
inc
inc
stos
imul
out
push
mov
dec
fwait
iret
hlt
cli
sbb
mov
xor
inc
cmp
pop
out
pop
push
cltd
inc
clc
sbb
mov
xchg
add
xchg
loop
int
lret
orb
jb
sub
or
jne
mov
loope
and
outsb
push
pop
aas
aas
cmp
pushl
pop
rcl
mov
imul
fcomps
and
fdivs
add
loop
ds
inc
or
and
push
push
inc
xor
jle
pop
out
pop
sbb
cmc
cmp
popa
adc
sbb
mov
test
idivb
adc
and
scas
add
mov
and
mov
xchg
cmp
gs
adc
sarl
dec
enter
rcr
mov
add
sbb
pop
jne
dec
lret
shlb
fcmovu
sbb
scas
jae
repnz
icebp
mov
mov
pop
sbb
jg
lock
bnd
and
stos
pop
push
psrad
repnz
adc
pop
sub
scas
jp
cmp
mov
int3
xor
pop
and
int3
dec
fwait
loope
cmp
xor
push
xchg
fldenv
aaa
xor
cld
iret
adc
cltd
lods
pop
mov
push
cmp
add
pop
sbb
and
aam
ret
stc
cmp
mov
pop
jmp
lret
neg
fwait
popa
mov
push
notb
xchg
sahf
inc
sub
and
mov
inc
jo
xlat
es
in
fistpl
add
or
push
in
daa
mov
jmp
das
insb
ret
lahf
and
xchg
fstpt
stos
insl
xor
inc
int
push
std
inc
xchg
cmp
adc
push
sbb
in
cmc
jno
in
arpl
mov
sub
mov
xor
stos
insl
jnp
js
jbe
rorl
movsb
repnz
in
sahf
mov
or
das
insl
xor
mov
push
push
in
cmp
dec
sbb
or
push
inc
jno
aaa
movsl
sub
sbb
jg
in
imul
fsubrl
mov
into
push
mov
lea
ret
fstpt
sbb
add
ret
sub
cmp
lret
ljmp
lds
or
fdivs
inc
fdivrs
adc
ret
in
and
push
jmp
jl
inc
fwait
loop
push
cmp
sbb
xchg
mov
fcompl
adc
les
imul
sub
add
jecxz
imul
jne
jne
out
push
aaa
mov
mov
fsts
mov
aad
ljmp
dec
outsb
push
xchg
sub
movsl
sub
jns
fsubrs
mov
movsl
cmp
hlt
test
push
pop
ficomps
and
test
ljmp
shll
pop
xchg
sub
sbb
aas
xor
push
dec
insb
aas
ja
sub
mulb
cmp
xchg
fldt
sub
std
lcall
jno
jecxz
jmp
mul
and
mov
out
out
sbbb
call
cmp
arpl
inc
mov
in
data16
sbb
ror
push
push
es
pushf
jne
cmc
loope
cmp
ja
cld
int
or
cmp
dec
cltd
sub
lock
insl
in
jb
movsl
jmp
xchg
pop
or
rclb
xchg
add
fwait
jmp
testl
xchg
sub
cltd
pop
roll
aad
xor
je
mov
or
addr16
mov
movsb
fimull
sbb
repz
stos
stc
outsb
xchg
jl
pop
sub
xchg
push
xor
pop
jo
mov
fiadds
cmp
lcall
int
negb
xor
aaa
cwtl
or
aas
test
cltd
jbe
int
loop
fildll
push
jge
sbb
call
pop
adc
mov
out
mov
mov
ret
xchg
push
psubw
cmp
cmp
mov
fstpl
xchg
pushf
sti
loope
test
xlat
sub
mov
xor
cld
xchg
or
and
or
cs
adc
or
sti
pop
mov
mov
mov
sar
jo
ret
out
push
pop
fwait
dec
xor
add
notl
jecxz
fwait
leave
xchg
lahf
mov
mov
jl
add
pop
cmp
lock
test
mov
xor
mov
mov
sub
sbbb
ficoms
sbb
cmp
shll
lret
adc
dec
ret
in
mov
enter
mov
decb
aad
cltd
push
sbb
jle
es
fstps
ja
push
loopne
pop
insb
inc
and
dec
jge
cs
lea
addr16
out
pop
mov
jnp
add
mov
pushf
jns
push
sub
divb
mov
popa
dec
dec
rcr
jp
leave
xchg
add
sbb
cmpsb
xor
fstps
sub
les
mov
mov
jg
pushf
or
out
sbb
sbb
pop
xor
scas
rclb
outsl
pushf
xchg
inc
xor
mov
dec
cmp
xchg
push
mov
sub
mov
mov
leave
ret
add
jl
add
in
fsubl
inc
aas
fsubrs
subb
dec
out
mov
adc
xchg
sbb
sub
xor
lds
inc
jbe
push
loopne
mov
pushf
jb
jl
pop
mov
sti
cmp
add
mov
pop
add
push
mov
add
sbbl
or
or
imull
fs
aam
call
adc
inc
xchg
dec
gs
cmp
ret
sbb
clc
mov
pop
gs
adc
int3
pop
mov
inc
popf
mov
clc
adc
call
out
pop
iret
dec
push
fs
adc
into
add
mov
cltd
cmp
ret
mov
ret
jbe
sbb
sbb
ret
mov
div
push
xchg
outsl
ds
fs
imul
lods
jae
popf
inc
push
add
scas
sub
cmpsb
stos
nop
sub
pop
cmp
divb
cmc
gs
pop
fists
jmp
test
and
subb
mov
test
inc
or
movsl
or
inc
js
xor
arpl
clts
subb
mov
stos
add
add
ds
xor
mov
outsb
icebp
mov
out
lahf
push
repz
sahf
aaa
scas
sbb
sti
lret
pop
push
jnp
and
dec
repz
push
or
adc
or
dec
mov
jns
push
in
inc
lds
mov
std
imul
loopne
mov
mov
hlt
in
jno
into
jmp
mov
dec
push
arpl
js
sub
bound
arpl
dec
sub
push
mov
cld
cmp
jb
xchg
imul
repz
cmp
pusha
jno
arpl
mov
repz
inc
loope
dec
xchg
sbbb
or
pop
enter
imul
insl
js
ja
cmc
mov
dec
decl
sbb
data16
daa
addl
arpl
enter
sub
xor
pop
in
sbb
es
in
icebp
pop
xchg
rol
aaa
leave
jp
cmp
mov
fists
xlat
insl
xor
popa
sti
adc
stc
ja
xchg
shrb
cmp
xchg
push
bound
rorl
cli
ds
fstpl
jno
ficoml
mov
pop
push
inc
aaa
jmp
insl
lock
jb,pn
mov
dec
lahf
mov
fisttpll
push
mov
inc
push
xchg
mov
pop
enter
adc
pop
mov
idivl
arpl
add
jmp
test
scas
push
push
out
jno
mov
lahf
mov
xor
xor
pop
lds
out
sbb
jecxz
xchg
pop
jbe
in
sbb
cs
push
frstor
out
icebp
std
adc
mov
xor
fdivrs
iret
dec
inc
mov
lcall
popf
xor
dec
mov
pop
and
stc
pushf
push
and
push
pop
pop
shl
jg
aad
sti
out
xchg
push
inc
push
jb
mov
je
inc
lret
push
imul
int3
and
std
add
lret
mov
scas
mull
push
push
setae
sub
insl
xchg
inc
add
scas
adc
jo
push
inc
jb
inc
rcr
sahf
cld
push
out
outsl
cmp
add
dec
dec
les
xchg
sti
orl
aas
lods
fistps
test
gs
dec
xchg
sti
insl
or
addr16
es
dec
repnz
xor
dec
out
push
jae
imul
jnp
cmp
adc
sub
repz
xchg
dec
inc
mov
je
inc
xlat
push
jae
addl
test
pop
cld
inc
inc
lahf
inc
int3
gs
aam
gs
cld
notl
mov
addb
xchg
mov
adc
imul
stc
repz
jge
mov
cwtl
inc
mov
push
cmp
js
push
sbb
jb
jb
mov
push
wrmsr
inc
inc
addr16
push
out
jecxz
mov
sbb
sub
fs
or
xchg
js
push
lcall
mov
mov
out
inc
inc
into
jb
pop
sub
lock
ds
ficoml
pop
fs
ljmp
addr16
mov
dec
mov
loope
das
xor
shll
cmp
push
jmp
lods
xchg
aad
push
cmp
outsb
out
sbb
int3
cltd
pop
add
mov
push
dec
or
jno
fwait
aas
hlt
mov
rorl
adc
outsl
mov
push
xchg
xchg
out
into
aaa
push
xor
mov
and
sbb
xchg
add
aam
mov
inc
mov
ds
cmpsl
cmp
lods
jne
cli
bound
mov
and
imul
cmp
imul
sahf
lcall
mov
adc
into
pop
out
insl
cmp
mov
mov
adc
jbe
lock
mov
sarl
ror
jae
cli
cmpsl
sbb
mov
cmp
dec
outsb
fcmovnbe
sub
ds
sub
dec
xor
sub
dec
es
jbe
adc
andps
mov
push
mov
popf
mov
int3
je
int
add
or
dec
mov
push
and
inc
lock
inc
imul
sub
pinsrw
inc
jb
mov
push
cltd
cmpsb
int3
js
cwtd
cmp
sub
add
imul
pop
inc
stc
clc
arpl
push
adc
pusha
ret
inc
nop
out
mov
clc
add
sub
inc
fdivrl
jecxz
sbb
idivb
push
fistpll
adc
xchg
sbb
outsb
and
mov
and
jg
iret
es
test
jp
cs
mov
xor
jmp
jp
jns
mov
sahf
adc
or
imul
pop
mov
mov
cmp
clc
mov
adc
mov
int
les
loop
aad
cwtl
pop
cmc
movsl
sub
std
sti
adc
stc
shlb
pushf
int
arpl
jne
jp
std
cmp
xor
cmpsb
test
push
push
lcall
push
movsb
push
or
lret
adc
xor
lds
cld
test
mov
dec
add
sahf
fs
lahf
xor
dec
cltd
jnp
push
in
int3
cltd
push
repz
jecxz
subb
xchg
sbb
shlb
into
pop
xchg
lods
mov
cmp
push
icebp
jmp
add
or
scas
shl
lret
popaw
or
lret
stos
clc
fldt
dec
mov
test
fwait
jo
arpl
or
sahf
inc
stos
push
paddusb
and
or
sub
icebp
mov
mov
push
aam
fs
xchg
inc
enter
ds
mov
mov
insb
iret
adc
mov
mov
shlb
repnz
cmpsl
mov
mov
add
cmp
mov
notl
les
add
push
mov
xor
jno
rclb
jp
sub
add
adcb
lcall
adcl
and
sub
push
pop
jge
addr16
iret
shl
mov
xchg
cmc
sub
ror
cmp
pop
icebp
addps
insb
dec
sbb
xchg
mov
dec
or
dec
mov
shll
jge
add
inc
sub
or
in
fisubrs
mov
in
and
dec
mov
loop
sti
cmp
into
in
mov
inc
or
or
pop
push
cmp
mov
pop
dec
or
les
cmp
mov
cld
pop
push
clc
jnp
jns
idiv
push
fidivrs
push
call
mov
jno
mov
add
mov
pop
sub
imul
pusha
sbb
outsb
popa
fwait
adc
xor
mov
and
fildl
add
or
or
push
xchg
mov
icebp
int3
pop
sbb
stos
xlat
ret
sub
xchg
insb
aam
popf
lock
repz
pop
lcall
mov
push
ret
and
cmp
fisubrs
ds
sbb
pop
call
inc
mov
test
sbb
or
stc
mov
test
rcr
into
xlat
in
add
cmp
call
jle
jb
stc
jne
and
xlat
mov
gs
pushf
push
out
lahf
add
inc
iret
dec
stos
pop
jne
rcr
movsb
scas
bound
les
iret
inc
outsl
cmp
aam
fistpl
mov
sub
addl
jo
xchg
inc
dec
and
scas
mov
pop
inc
in
xchg
mov
xchg
sub
adc
into
add
sahf
in
dec
test
mov
or
out
mov
pop
xchg
movsb
test
adc
adc
loop
jp
imul
out
stos
jno
push
add
fdivs
mov
shrl
adc
fwait
pop
jbe
enter
sub
add
jb
cmp
xchg
imul
out
movsb
mov
cld
sub
adc
adc
pushfw
sbb
cmc
mov
addl
adc
pop
insb
fldenv
mov
pop
sbb
dec
inc
dec
push
mov
xchg
mov
hlt
jl
inc
outsl
and
jg
lock
in
add
or
movb
push
xchg
push
push
incl
imul
cmp
dec
mov
pop
mov
fsub
rorl
xor
cwtl
jnp
pop
mov
jo
adc
cmpsl
and
mov
loope
stos
clc
or
adc
mov
or
xor
sub
bound
loopne
arpl
cs
int3
leave
pop
loop
jecxz
or
or
push
mov
int
mov
mov
cmp
je,pt
xor
adc
dec
dec
sbb
xchg
jo
mov
mov
cltd
xchg
xchg
fistl
jp
mov
cmp
jle
into
cs
cli
sbb
aaa
in
jle
scas
ss
inc
push
pop
or
test
lret
mov
dec
xchg
push
cmp
fnstsw
je
movsl
sub
xchg
aaa
adc
inc
adc
mov
lret
push
lods
adc
mov
js
mov
sbb
jl
pop
sbb
pop
aas
cmc
fcoms
jns
test
loope
and
push
mov
subb
imul
dec
jnp
xchg
mov
rcll
cwtl
mov
fwait
mov
ret
int
stos
stc
jae
sarl
mov
clc
sbb
or
sbb
aam
pop
push
fisubs
xor
mov
cs
pusha
daa
xor
aad
out
mov
daa
jecxz
cmc
in
xchg
dec
dec
mov
jp
lret
dec
sbb
les
test
arpl
int
dec
cmp
fs
xor
out
subb
inc
sub
or
test
sbb
daa
inc
jb
shrb
roll
xchg
jnp
adc
mov
mov
in
mov
or
cmc
push
xchg
outsl
mov
jae
test
lcall
sub
hlt
js
push
in
jmp
xchg
aam
dec
mov
arpl
xchg
and
mov
jnp
jl
cwtl
jbe
andl
bound
arpl
xchg
sbb
ficomps
xchg
push
or
icebp
lods
lahf
mov
mov
stc
insl
cmpsb
jns
push
fwait
adc
or
inc
sbb
push
inc
cmp
fidivrs
insb
mov
and
les
jmp
fsubl
or
add
jg
ljmp
sbb
cmpsl
mov
sbb
mov
pop
test
fcomi
jo
sahf
flds
in
fbld
insl
mov
loope
adc
or
test
jb
inc
ror
roll
sub
hlt
mov
loopne
mov
xor
cld
inc
imul
pushf
xchg
cmpsb
cmp
push
and
data16
fsubl
out
out
fistpl
fsubrs
or
shll
mov
stc
fsts
and
loope
mov
ror
in
inc
popa
cmpsl
dec
outsl
push
pop
ret
cmp
imulb
popf
mov
addr16
and
shl
push
mov
fstpt
mov
pop
mov
shlb
scas
fs
cwtl
add
inc
push
fbld
and
jmp
cmc
or
aam
stos
jo
xchg
fisttpl
fildl
js
or
movsb
das
mov
jl
mov
xor
jp
sub
mov
mov
fists
cld
std
or
mov
movsb
mov
in
pop
pushw
dec
and
divb
or
pop
inc
bswap
add
add
push
jb
gs
rorb
call
cwtl
push
cmp
sub
shrl
je
pop
jmp
pop
sub
test
bound
arpl
pusha
mov
scas
and
aaa
out
ret
and
mov
mov
sbb
sub
arpl
inc
stc
mov
sahf
cltd
xchg
adc
loop
int3
sub
push
cmp
popf
xchg
xchg
inc
into
inc
dec
mov
xor
mov
aaa
add
and
pop
or
rcll
imul
inc
fcomip
aas
gs
xchg
mov
addr16
mov
aaa
jns
shlb
mov
rolb
es
pop
fldenv
sub
imul
rcr
aas
xchg
lret
mov
sbb
add
data16
ljmp
loop
sub
fwait
push
cmpsb
jl
int
mov
scas
xlat
xor
inc
cld
mov
les
flds
cmp
jl
push
idivl
fs
sub
fldcw
insl
punpckhdq
je
lahf
or
and
lds
sbb
pop
adc
popf
jmp
and
mov
test
add
cmp
in
or
js
test
jg
repnz
or
iret
push
push
clc
add
arpl
fdivl
mov
adc
insl
stc
orl
cmc
and
out
imul
inc
add
dec
stos
bswap
sbb
hlt
pop
sbb
das
sub
lcall
fs
in
jmp
cltd
mov
dec
ljmp
rcl
pop
push
mov
data16
jno
aaa
ficoml
cmp
mov
add
push
pop
repz
mov
rorb
test
xlat
add
dec
test
lahf
push
sbb
insl
xor
test
mov
jmp
cmp
ja
jp
cmp
lret
or
push
dec
outsb
or
jns
neg
test
add
dec
xchg
cmp
jp
mov
sub
xchg
sbb
pop
icebp
data16
adcb
fsubrl
cltd
jo
aas
add
loop
js
fcoml
or
pop
lods
add
mov
test
adc
popa
push
dec
movsl
add
int3
xor
adc
adc
push
jnp
xchg
shl
dec
sub
xor
push
inc
js
lds
cltd
pop
insl
outsl
xchg
sbb
stc
adc
inc
imul
pop
ret
imul
das
mov
sbb
js
stos
xor
mov
add
and
mov
dec
or
test
mov
or
test
pusha
outsb
push
xor
scas
mov
or
pandn
add
mov
sbb
iret
dec
inc
xchg
mov
ljmp
in
sub
cmpsl
divb
in
fisttpl
mov
in
pop
les
lret
ds
xorl
repz
push
or
dec
xchg
pop
and
pop
cmc
inc
shl
mov
pop
mov
cmp
adc
dec
push
mov
push
cmp
stos
icebp
xor
cmp
mov
push
test
sti
push
xchg
xchg
mov
xchg
xor
dec
mov
jne
sub
or
pusha
jno
mov
ret
mov
xor
rcrb
sub
gs
lods
dec
pusha
adc
jle
xchg
movsl
dec
aas
lds
insl
dec
mov
cwtl
rolb
ret
arpl
dec
jo
mov
xchg
sub
and
pop
shlb
rol
outsb
xor
inc
scas
inc
std
jge
sub
dec
loop
dec
cmp
cmp
fbld
ret
iret
inc
arpl
jo
or
lods
sub
or
push
sub
add
pop
gs
pop
xchg
lea
test
xorb
jno
sti
xchg
lret
fiadds
movsl
fninit
jns
xchg
mov
inc
loope
gs
or
fidivrl
mov
cmp
jne
xchg
scas
add
xor
inc
stos
orl
mov
mov
jmp
hlt
add
add
mov
test
stos
es
jl
out
xor
daa
or
and
xlat
out
sbb
andl
and
inc
push
loopne
subl
in
rcr
cmc
repz
xor
into
sbb
iret
push
cmp
jle
or
inc
fisttpll
xor
inc
hlt
jno
push
insb
ret
push
in
sub
mov
push
nop
dec
pushf
and
ja
cmpl
out
inc
pop
push
sbb
jmp
lret
push
add
cmp
jbe,pn
ja
jle
std
mov
aaa
and
jo
mov
out
mov
inc
add
mov
pop
pop
aas
ja
xchg
test
outsb
push
test
jbe
mov
sub
scas
scas
lds
shrb
inc
aad
cmp
mov
test
je
mov
cmp
fmul
insb
pusha
aaa
sub
out
dec
lods
shrl
daa
sub
into
xor
imul
test
inc
push
or
inc
outsb
inc
out
leave
push
out
push
cs
or
lahf
jge
push
mov
pop
mov
mov
ljmp
and
mov
jnp
lds
xchg
rcrb
and
cmpl
xchg
or
jmp
mov
mov
or
or
jg
pushf
sbb
mov
das
pusha
lock
jbe
xchg
imul
push
fnop
xor
out
clc
cli
jbe
push
jg
sub
cmp
cmp
jno
mov
push
sbb
dec
out
insl
xchg
jecxz
fsubs
xor
fwait
mov
adc
cmc
inc
bound
ljmp
mov
lds
js
xchg
add
push
cltd
xchg
movsb
cmp
out
xor
fwait
and
mov
pushf
add
fidivs
fcomi
test
sub
push
fsubrl
test
push
push
sub
jle
add
sbb
inc
stos
test
testb
fdivl
inc
xor
cwtl
enter
loope
fldl
out
cmp
jmp
rclb
pusha
pushf
or
loop
add
movsb
nopl
add
sub
dec
jne
addl
clc
stos
mov
movsb
je
xor
fwait
cmp
jge
aas
arpl
sub
sub
xchg
or
sub
mov
stos
dec
fistl
mov
push
cmc
cli
ret
adc
in
mov
ss
and
fsubr
dec
fcoms
stos
shlb
jl
subb
pop
jne
scas
push
xor
addl
shl
in
insl
sbb
sub
test
lahf
stos
fadd
mov
jno
cmp
gs
bound
rcrb
xor
fcomps
hlt
push
es
xchg
or
into
sbb
and
mov
popf
push
lds
lret
out
push
pop
xchg
shrb
hlt
ss
push
movsl
mov
pop
add
fimuls
sub
jne
shlb
arpl
dec
div
cmp
jp
push
in
aad
mov
dec
imulb
push
push
jmp
jns,pn
fbstp
push
xor
jae
fcompl
inc
jo
sub
in
mov
sbb
inc
and
es
xor
mov
pusha
cmp
adcb
adc
cmp
adc
mov
sahf
jo
cld
aaa
fdivr
into
arpl
loope
push
cmp
jg
jl
icebp
int3
pop
adc
fsubrs
add
pop
out
push
je
dec
decl
xor
pop
lea
popa
adc
aas
pop
aas
jbe
js
stos
incb
cmp
scas
push
mov
mov
clc
stos
mov
aas
cmp
fs
sarl
and
int
dec
dec
fmuls
stos
inc
jo
cmp
sbb
inc
addr16
out
out
cmc
inc
aam
popf
subl
dec
inc
movsb
sbb
int
lods
pop
arpl
in
adc
stos
pop
sbb
jno
xchg
fdivr
test
out
push
mov
xchg
sbb
test
xor
or
push
adc
leave
or
pop
xor
lret
mov
popa
jae
adc
scas
pushf
shrl
pushf
push
push
pop
jge
inc
ss
rol
bound
or
jae
pushf
sub
loopne
add
and
mov
in
mov
push
xor
dec
mov
jne
xor
push
or
out
mov
dec
cld
fidivs
mov
inc
aam
incb
push
dec
cmpl
loopne
aad
test
jecxz
rcl
jle
mov
pop
pop
sub
gs
mov
stos
and
in
inc
mov
mov
xchg
cmpsb
or
insl
xchg
push
and
xor
and
or
hlt
insb
lret
push
add
leave
popa
das
clc
cs
in
jge
mov
mov
cmp
push
addb
fsubrs
mov
imul
or
fsubp
xlat
popa
je
adc
loopne
mov
rcr
repnz
inc
stc
inc
mov
lods
loope
imul
jb
xchg
aas
push
in
push
inc
or
cmp
loopne
popf
or
ficomps
push
cmp
movsl
or
fbld
popf
mov
mov
xchg
sbb
dec
insb
pushf
mov
adc
testb
cmp
mov
sahf
incb
or
push
push
jnp
and
stos
xchg
pushf
cmp
cld
xchg
xchg
cli
mov
cmpsb
aad
mov
jno
mov
push
jo
mov
outsb
adc
arpl
and
repnz
xchg
push
pop
test
pop
movsb
dec
popa
addr16
fisubs
daa
es
insb
mov
inc
pop
push
cs
and
or
xor
insb
jmp
insl
push
mov
js
sub
mov
mov
pop
sahf
sbbb
testb
xor
xchg
mov
mov
mov
lods
lret
outsb
xor
dec
mov
lods
pop
mov
jno
mov
dec
pop
pop
xor
xor
ja
mov
mov
mov
sbbl
xchg
or
jo
cmp
shll
fdivrl
test
bound
pop
shll
pusha
lea
lock
push
scas
negl
pop
in
cmp
jl
pop
xchg
fiadds
out
lret
add
sbb
xchg
cmp
jl
mov
orb
adc
push
cld
mov
mov
sbb
mov
das
out
mov
ds
shl
pop
xor
xchg
lds
test
faddp
dec
inc
jmp
cmc
mov
xchg
inc
mov
cmp
aam
roll
xchg
push
and
xchg
add
loop
mov
push
sarl
in
push
pop
xor
movsl
clc
pop
pushf
lea
pushf
scas
loope
hlt
adc
push
aad
fimull
push
cmp
js
mov
test
lret
xchg
andb
sti
pop
rclb
popl
xor
lods
insb
push
dec
test
push
cmp
pop
popf
sbb
cmp
inc
or
mov
fs
andl
mov
xchg
mov
cmpsl
mov
xlat
inc
cmp
inc
mov
cs
pop
pop
jae
push
xor
cmp
add
pop
out
je
enter
push
mov
test
jle
in
xchg
xchg
outsl
inc
mov
xor
lea
or
ss
inc
adc
pop
in
mov
dec
mov
add
jae
stos
fsubs
inc
jb
lcall
inc
mov
adc
in
call
xchg
xchg
sbb
inc
or
jnp
or
decl
sub
mov
and
jns
outsb
and
test
xor
notl
ljmp
aas
push
jge
push
shll
mov
mov
gs
dec
mov
imul
lret
movl
shlb
inc
add
jbe
and
push
dec
and
cmpl
faddl
sub
mov
inc
cli
mov
or
rclb
jae
cmp
pop
pop
aam
arpl
nop
mul
dec
shll
sub
dec
fdiv
popf
pop
sarb
add
mov
jbe
adc
fwait
cwtl
ret
and
mov
or
std
cwtl
adcl
call
jle
mov
test
or
xchg
lcall
push
dec
add
pushf
ret
inc
outsl
stos
dec
js
ljmp
pop
mov
mov
jle
mov
xor
or
mov
jnp
ret
fs
jge
adc
pop
ljmp
adc
pusha
push
pusha
ljmp
stos
les
add
or
and
inc
mov
test
int
fs
cltd
hlt
aaa
mov
mov
inc
dec
mov
movsb
jbe
pop
sarb
stos
sti
test
in
sti
outsl
lcall
outsb
cmp
sbb
ret
stc
or
loop
movsb
das
sub
jne
lock
dec
pushf
push
sub
pop
or
pop
enter
hlt
mov
insl
jo
xchg
inc
dec
aad
mov
or
cli
leave
mov
add
dec
fimuls
scas
xchg
popf
jns
jae
cmp
mov
shlb
add
xchg
or
js,pn
fisubl
movzwl
jle
test
sbb
out
sbb
push
es
orl
nop
mov
stos
andb
arpl
clc
lret
sub
mov
push
pushf
insb
mov
adc
gs
push
pusha
jnp
cwtl
jg
push
test
jp
loopne
loop
in
xor
mov
test
addr16
mov
mov
dec
sub
mov
cwtl
roll
leave
movsl
in
jecxz
lcall
pushf
in
movsb
loope
cmp
fstpt
or
inc
popf
insl
mov
out
push
shll
int
push
jns
dec
mov
in
adc
inc
in
mov
icebp
mov
cwtl
repnz
jg
lret
cld
dec
fs
in
inc
adc
xor
imul
dec
fnstcw
pop
test
or
test
into
jecxz
inc
les
popf
mov
dec
in
adc
dec
in
xchg
push
pusha
and
push
pop
in
inc
test
mull
adc
push
pop
cmp
outsl
xchg
filds
mov
mov
mov
icebp
popa
mov
xchg
ja
pop
pop
pop
mov
add
insl
jo
add
mov
test
add
mov
aas
cli
or
inc
mov
ret
xlat
sub
ficoms
outsb
movsl
push
mov
jle
and
imul
test
daa
push
shlb
popa
cmp
test
into
sub
iret
hlt
push
popf
xor
aam
pop
mov
xor
push
into
scas
mov
xchg
movb
and
repz
sub
push
sbb
out
push
xchg
aaa
scas
adc
push
cmp
or
jecxz
push
inc
sub
cmp
mov
jae
pop
int3
cltd
imul
out
mov
xor
push
jmp
pop
test
xlat
dec
adc
jno
ljmp
shll
ret
lcall
adc
fstps
mov
rcl
or
mov
push
push
not
jmp
rolb
lahf
movsl
clc
bnd
cmp
orl
dec
mov
fistpl
jbe
dec
mov
dec
rcr
push
add
lret
cmp
add
sub
daa
fstpl
mov
into
pop
sbb
fwait
jg
leave
stos
out
jmp
jp
loop
mov
repz
sbb
and
inc
in
or
add
aaa
scas
jne
mov
lods
xlat
cmpsb
mov
jge
int3
jne
mov
imul
mov
xor
xlat
repz
push
nop
adc
sub
scas
rol
sub
aad
sbb
xlat
loopne
push
sub
andl
loop
push
xchg
mov
lret
or
xlat
lahf
cltd
sbb
xchg
sbb
mov
push
adc
cs
mov
mov
fnstsw
sbb
enter
jae
xchg
std
fisubl
lret
xlat
mov
int3
pop
fsts
int
xor
cmpsl
dec
xchg
scas
in
sahf
add
and
iret
adc
cmp
or
daa
ss
or
dec
pop
divl
leave
loope
les
xor
scas
andl
pop
mov
inc
mov
inc
hlt
icebp
popf
test
repz
fldt
gs
outsb
into
aam
in
push
int3
xor
inc
lret
lock
cwtl
pusha
sbb
cmp
sub
dec
outsl
adc
les
jl
shlb
xor
stc
inc
lcall
jno
decb
sbb
popa
or
sbb
sbb
loopne
jbe
iret
jbe
sub
push
sahf
sub
cmp
insl
sbb
pop
dec
mov
int
push
xchg
dec
popa
popa
and
mov
mov
push
js
pop
mov
out
int
insb
push
cmpsl
sbbl
or
jl
adc
cli
adc
xchg
int3
outsl
clc
cmp
xchg
cld
in
push
out
bound
int3
aam
icebp
inc
or
jge
notl
cmp
dec
test
idivl
mov
adc
cmpsb
mov
das
cmp
loope
add
data16
pop
push
filds
mov
fisttpl
in
cmp
dec
mov
or
mov
and
fisubs
cmpsb
xchg
imul
push
cmpsb
jge
dec
arpl
fbstp
pop
test
jmp
mov
inc
add
fisubrs
push
mov
inc
fistpll
subb
mov
lret
shlb
add
pushf
mov
jae
inc
add
adc
dec
clc
pop
pop
iret
cmpsb
mov
lret
jmp
mull
sub
cltd
pop
xor
xor
sub
iret
pop
in
mov
stos
std
lcall
push
inc
inc
punpcklwd
mov
cwtl
rorl
movsl
fistpl
sub
pop
sub
or
inc
jl
in
push
fsubrs
jmp
popf
stos
test
lods
push
les
in
push
out
or
lret
inc
imul
mov
ret
movsl
rcrl
call
dec
add
xchg
in
push
sbbl
dec
adc
jle
enter
mov
jns
xor
mov
cs
jle
lods
sbbl
pop
push
mov
ret
mov
inc
fwait
add
push
mov
mov
jp
sub
call
ficomps
out
insb
daa
enter
clc
and
xlat
mov
pop
je
mov
cmp
jle
and
add
or
dec
in
divb
aas
jecxz
adc
push
xor
push
sbb
mov
scas
jg
fisubl
sbb
or
fildll
insl
jmp
popa
add
xor
xlat
or
mov
and
jmp
insl
jnp
xor
idivb
dec
lahf
in
icebp
jae
insl
push
ficomps
int3
xchg
cli
stc
cs
ret
lea
scas
clc
jmp
mov
xchg
xor
scas
mov
push
sbb
into
mov
sbbb
mov
or
cmp
push
fwait
adc
and
adc
jecxz
neg
mov
dec
ret
pop
shrb
mov
mov
inc
dec
dec
add
sbb
arpl
bound
xor
test
scas
out
mov
shl
incl
popa
dec
adc
jb
mov
leave
mov
push
xchg
or
add
push
mov
jl
sbb
sub
and
rcll
adc
mov
xchg
lock
fdivrs
push
in
pop
mov
inc
out
dec
xchg
fdivrl
add
movsb
dec
sbbb
sub
andl
ds
fistpl
outsb
sbb
jo
movsl
xchg
popa
dec
jmp
outsl
cli
push
aad
pop
or
xlat
dec
mov
push
pop
sub
gs
lock
orb
dec
or
divb
sbb
sub
iret
xlat
xor
cmp
mov
jnp
jge
icebp
dec
gs
xor
mov
pop
inc
jge
lock
mov
mov
push
or
outsb
adc
jno
aad
xchg
xchg
scas
das
push
and
ljmp
adc
int3
add
jae
xor
xor
fisubrl
xor
imul
push
sarb
lods
or
in
inc
in
add
subb
loop
test
movl
aam
pop
test
adc
negl
shlb
jns
xor
fwait
or
por
cmp
dec
and
xchg
imul
mov
mov
cs
jl
mov
stos
ret
lahf
sub
or
lock
popa
rclb
add
repnz
adc
pop
frstor
dec
add
ds
and
cmpsb
stos
mov
and
push
fcompl
inc
adc
mov
paddsb
mov
pop
int3
jnp
sbb
inc
xlat
idiv
mov
fprem1
adc
lret
notb
lods
fcomps
enter
push
aaa
adcb
pop
sti
add
cmp
adc
aad
mov
xchg
dec
push
or
test
or
mov
mov
lcall
or
divb
fwait
add
mov
or
test
or
jbe
cmp
mov
mov
lahf
sub
fimuls
test
add
cld
mov
iret
jp
sbb
and
jg
ss
fsubr
mov
jns
mov
enter
adc
arpl
push
fnstcw
into
or
pushf
lock
lahf
cli
clc
mov
push
jmp
leave
jg
mov
add
dec
push
aam
add
jg
dec
mov
mov
clc
stos
xchg
popf
mov
mov
mov
jmp
jnp
sub
cmpsl
pop
or
and
add
mov
xchg
cltd
and
xor
cld
sub
cmpsb
stos
fwait
nop
lods
pop
icebp
push
cmp
shll
pop
int3
sbbb
mov
sbb
loope
aaa
jmp
scas
std
popf
mov
adc
jp
push
pusha
icebp
push
xor
addr16
nop
aam
movsb
imul
stos
sbb
fwait
mov
xor
scas
ret
rorb
jae
inc
out
and
ror
adc
scas
ja
mov
stos
mov
mov
lret
mov
fists
in
clc
mov
into
inc
pop
mov
sub
pop
mov
xchg
mov
iret
xchg
push
jae
ret
and
je
lret
into
inc
sbb
xchg
or
push
ret
fcmove
cmp
xchg
es
jnp
or
xchg
out
lcall
adc
les
ljmp
addr16
ljmp
mov
sahf
cwtl
lods
cmp
dec
mov
lods
dec
adcl
cmp
popa
sub
mov
mov
sub
xor
and
test
xchg
ljmp
cs
sbb
pop
aas
std
sbb
lret
xor
stos
mov
test
fistl
outsl
repnz
inc
shlb
add
add
aad
sub
mov
mov
jbe
jl
les
jmp
cli
lret
rdtsc
js
icebp
xchg
ret
je
mov
repnz
or
xchg
and
scas
xchg
std
rclb
push
sti
fisttpl
mov
cli
ror
jae
scas
int3
dec
enter
shll
into
and
int
les
inc
cmpsb
pop
imul
jns
and
inc
lea
daa
cmp
data16
scas
rcll
jmp
xchg
xor
and
mov
loopne
mov
lock
ret
jmp
xchg
cmp
mov
pop
pop
nop
cli
jbe
sub
mov
lds
cli
into
add
clc
and
jb,pt
inc
pop
aam
cld
dec
pop
dec
mov
mov
pop
sub
xor
mov
jnp
ret
sub
rcrb
jge
cltd
das
mov
or
decl
add
push
rol
mov
out
adc
mov
add
in
inc
mov
or
shll
sub
stos
dec
aam
call
mov
lods
mov
mov
imul
pop
mov
push
mov
adc
lods
in
dec
sbb
mov
mov
ret
pop
out
inc
lcall
push
enter
fsubp
movsb
or
dec
adcb
mov
cmpsb
pop
jno
sbb
sbb
test
jg
fdivs
repnz
les
adc
pop
outsb
rol
sub
mov
jae
aad
pushf
and
fcoms
inc
cmpsl
pop
out
out
ret
movsb
mov
and
adc
add
loop
leave
hlt
mov
xchg
insl
pop
jl
enter
test
pusha
out
daa
mov
xor
cmp
out
ss
mov
mov
cmp
negb
add
dec
dec
jmp
mov
int
into
mov
je
push
jne
lea
and
fwait
sub
or
rcll
jnp
fldenv
jg
and
jmp
and
jg
mov
popa
mov
ret
in
sub
js
ljmp
rcll
insb
fucomp
push
push
stos
push
cmp
out
xchg
mov
aad
test
mov
mov
inc
adc
or
dec
mov
mov
ja
mov
bound
sti
pop
push
std
mov
shlb
sbb
aam
arpl
cmp
add
xor
into
mov
pop
cmpsl
dec
sbb
cmc
faddl
int
scas
inc
rolb
test
aaa
or
xchg
push
sbb
test
xor
or
and
xlat
into
and
push
into
call
xor
mov
push
xchg
scas
sub
sbb
in
jbe
xor
jns
push
xor
cmp
out
icebp
insb
push
xchg
roll
repnz
jb
xor
fbstp
xor
stos
add
ja
cltd
adc
lods
add
jl
adc
or
repnz
outsl
inc
mov
roll
gs
sub
push
lret
mov
pusha
int
jge
insl
add
xchg
xor
call
xlat
fsubrp
test
sub
jo
mov
cmpsl
das
int
mov
sbb
addr16
in
fsub
pop
adcb
lcall
aad
ror
mov
inc
pop
fildll
push
or
push
xor
xor
cmp
jmp
into
addb
mov
into
jmp
negb
sub
xor
cmp
or
mov
popf
xor
mov
dec
dec
fdivs
pushf
mov
neg
out
fwait
mov
scas
sub
sub
adc
mov
fcoms
popa
int3
xor
mov
stos
cmc
test
mov
sub
mov
xchg
jne
out
sti
sub
aad
hlt
leave
mov
sbb
pushf
jno
push
mov
adc
addr16
sahf
add
imul
xchg
lods
popa
test
inc
sub
mov
dec
or
or
nop
aad
or
push
mov
sbb
pop
xchg
xor
and
inc
dec
jge
outsb
and
repnz
inc
dec
ret
mov
jmp
pop
cmp
leave
pop
jmp
add
aas
ljmp
xchg
ret
sub
pop
pop
pop
loope
sbb
imul
lock
cmp
cmp
mov
repz
adc
mov
pop
gs
ja
dec
js
inc
daa
cltd
lret
push
xchg
fcomps
mov
sarb
sub
dec
add
movsl
movl
loop
cmp
and
dec
hlt
scas
movsb
lods
loope
xor
scas
mov
inc
sub
and
xor
aaa
xor
dec
test
das
rcrl
dec
mov
fsubrl
mov
stos
mov
loope
imul
or
into
and
sbb
test
loop
sti
cmp
ds
and
imul
inc
cmp
scas
loope
pop
inc
int
mul
inc
add
lahf
je
out
icebp
add
inc
clc
sahf
mov
dec
mov
ljmp
xchg
cmc
or
push
sahf
daa
xor
rol
dec
pop
cld
mov
jb
jo
imul
dec
leave
dec
mov
pop
mov
xchg
sbb
add
add
mov
outsb
pusha
rorl
mov
cmp
rcrb
mov
call
es
lods
shlb
out
mov
hlt
stos
loope
sub
adc
insb
bound
adc
push
out
repnz
pop
cmpsb
sbb
xchg
test
ss
pop
jmp
and
push
pop
and
cmp
enter
sbb
pop
gs
loop
sub
mov
stos
popf
out
dec
jge
and
aad
mov
or
jb
movsb
push
jle
pushf
popa
mov
mov
and
xor
push
push
dec
push
mov
mov
ljmp
shr
and
push
mov
jle
les
dec
inc
loope
pop
das
jecxz
in
daa
out
inc
cmpsl
cmp
lret
or
rorl
scas
insl
xor
shlb
fucomp
ja
std
je
jp
push
insb
out
jp
mov
mov
mov
and
into
enter
gs
jle
jne
cs
loope
add
test
fsubr
dec
xor
dec
or
es
lds
jne
jge
loope
insb
push
cli
inc
xchg
push
addr16
xchg
xchg
cli
push
arpl
out
movl
adc
cmp
mov
and
jae
mov
aam
int3
add
and
call
aad
xchg
push
daa
or
jb
rcrl
mov
repz
loopne
push
addb
dec
lret
push
adc
or
pusha
push
mov
testb
push
sub
or
aas
pop
lock
and
add
xor
popa
mulb
popf
xor
and
pop
je
lds
jbe
repz
cmc
test
jnp
dec
adc
xor
jecxz
jne
inc
pop
stos
mov
shlb
jmp
dec
ja
jae
cwtl
arpl
sarl
dec
clc
ja
mov
js
pop
sbb
sbb
xchg
or
cld
das
sahf
mov
push
out
push
jl
rolb
lahf
ja
nop
push
jl
paddq
iret
fs
stos
ja
xor
mov
insl
fcoms
cli
dec
bound
ljmp
jge
add
lods
and
jae
or
dec
mov
outsb
jmp
xor
out
xchg
movsl
fsubs
mov
rcll
pop
mov
das
cld
inc
insl
xchg
aad
jg
into
cmc
das
sub
xchg
lahf
call
cltd
mov
jl
call
jns
add
ret
ret
roll
xor
inc
jae
mov
xchg
dec
test
cs
fldcw
jp
movb
aas
roll
or
jae
or
ljmp
lock
fisubl
imul
ret
icebp
mov
xchg
mov
pop
je
and
sub
sbb
ljmp
adc
fyl2x
inc
daa
jo
lds
adc
mov
nop
out
push
pop
inc
int3
popa
push
lds
push
cmp
stos
mov
pop
cmp
lcall
jns
pop
ret
fildll
es
mov
imul
sbb
cs
mov
mov
or
test
mov
idiv
int
lret
mov
or
loopne
andl
test
fimull
or
pop
dec
cmpsl
rorl
push
cmp
addr16
pop
repz
ficompl
shrb
and
lock
pusha
cmp
add
xchg
nop
mov
jg
int3
fiaddl
xor
xor
cmp
mov
pop
and
sub
call
sbb
mov
js
push
cld
mov
leave
arpl
mov
inc
jb
ds
imul
cwtl
cmpsb
je
insl
insb
push
xor
xchg
pop
xchg
inc
aam
and
cld
xor
push
fdivl
mov
cli
mov
dec
cmp
pushf
lea
sub
aaa
xorl
pop
sahf
mov
pop
sbb
loope
dec
add
movsl
mov
jb
mov
sub
sbb
mov
enter
lods
mov
fstps
add
fadd
xlat
lret
jbe
test
xor
cmp
cmp
rclb
subb
jp
mov
dec
addl
fmuls
mov
loopne
ja
and
xchg
pop
jno
mov
loope
loop
xchg
pop
mov
and
jmp
rcl
add
stc
jne
stos
lock
mov
stos
cltd
cmp
inc
jbe
dec
imul
ret
pop
test
fsts
clc
pop
inc
cmp
mov
out
pop
pop
je
flds
sub
add
test
into
jbe
or
adc
cltd
inc
jl
pushf
incl
scas
sbb
data16
pop
scas
jnp
out
hlt
cmp
xor
jecxz
stos
sbb
repz
xchg
clc
mov
loopne
pusha
gs
push
dec
dec
fildl
lods
push
lret
and
jmp
lea
repz
paddusw
jl
xor
scas
inc
mov
xor
sbb
pop
add
jne
cmp
add
adc
inc
pusha
xchg
in
push
cli
gs
mov
dec
iret
faddl
cmc
dec
jb
xor
cmp
subl
sahf
mov
cld
jb
nop
out
fcoms
popa
pop
pushf
bound
dec
cmp
fnsave
adc
popa
je
inc
loopne
dec
inc
mov
imulb
xor
dec
shll
popf
aad
jg
orb
imul
mov
subl
xchg
or
shll
rdpmc
ja
pop
pushf
add
data16
pop
lods
cmc
stc
daa
push
mov
pcmpeqd
sub
test
xor
xor
xlat
ds
cmp
jp
jb
les
loope
or
sahf
adc
dec
mov
insl
sarb
add
and
and
pop
fcmovnu
dec
in
daa
stos
xchg
faddl
add
bound
pop
mov
jl
or
negb
pop
fsubs
jmp
stc
xchg
add
roll
lock
je
push
inc
je
mov
es
pop
xchg
push
or
lods
icebp
push
pop
in
enter
xchg
and
push
stos
das
pop
cs
jge
js
cmpsb
sub
faddp
mov
xor
sbb
aas
adc
mov
cld
vandnps
dec
xor
call
test
in
test
insl
bound
mov
push
insl
imul
and
add
aaa
and
jae
enter
js
mov
or
loope
and
or
out
push
xor
dec
add
out
xchg
aas
push
ret
stos
xchg
lahf
js
dec
cmp
dec
sub
aas
mov
aam
mov
inc
add
subb
fwait
mov
xchg
xchg
xor
pop
imul
dec
jo
add
push
into
lods
jnp
push
inc
xchg
es
xchg
inc
mov
ds
daa
dec
dec
outsw
and
cmc
inc
out
adc
in
loop
mov
dec
mov
and
push
pushf
das
int3
and
je
je
mov
sbbl
inc
push
lret
sbb
sbb
mov
inc
add
cmpsb
outsb
dec
in
mov
mov
sbb
pop
scas
sub
testl
adc
pushf
pop
cmp
das
test
sbb
push
mov
mov
mov
dec
push
push
pop
fsub
inc
scas
in
insl
push
fwait
xor
stos
adc
pusha
pop
mov
cmp
and
mov
setp
sar
push
out
push
and
sbb
cmp
das
and
jle
xchg
daa
pop
lea
cmp
test
mov
lods
pop
pop
fmull
add
mov
aad
shrl
push
dec
les
sbb
or
jecxz
sbb
std
xor
jnp
pop
sub
pop
jmp
mov
in
shl
or
test
mov
movsl
insl
das
outsb
push
pop
add
xor
or
mov
mov
lods
mov
adc
lds
scas
negl
xor
xchg
push
jae
arpl
add
mov
inc
xor
fstpl
mov
push
sub
popl
jmp
sub
stos
aam
xchg
lods
lock
repz
outsb
stc
mov
xor
dec
mulb
es
mov
or
mov
shll
mov
test
jne
cld
adc
test
push
ret
sub
mov
jmp
std
orl
test
jl
push
out
xchg
mov
dec
jp
rcrl
mov
in
fcomps
xchg
out
lret
pop
mov
loopne
jl
insb
lds
mov
push
add
repnz
pushf
push
or
ss
jbe
pavgw
lea
xchg
mov
inc
xlat
mov
push
add
cmc
jne
and
or
sbb
subb
repz
sub
pusha
push
sti
pop
pop
jbe
scas
mov
popf
gs
inc
bound
ss
mov
jmp
stos
pop
push
neg
pop
pop
pushf
int
xchg
cmp
es
cli
or
add
mov
fwait
cmp
fisubrl
popf
and
xchg
rolb
inc
orl
into
xlat
int
nop
sbb
mov
test
cmp
in
mov
testl
daa
loop
shrl
es
dec
cld
fnstsw
jecxz
or
adc
jecxz
bound
test
mov
cmp
movl
push
adc
mov
ljmp
test
fistps
push
outsb
insb
push
jb
mov
ds
loopne
adc
jns
sahf
fcoml
das
shll
xor
ss
mov
popa
dec
add
mov
fldl
sahf
imulb
stos
cld
cmp
lahf
shl
lcall
imul
push
iret
adc
xor
and
rcl
add
mov
scas
nop
and
pop
ljmp
cmc
fadd
je
rcrb
cmpsl
and
int
in
adc
and
repnz
mov
ss
inc
cmp
nop
mov
mov
cmc
sub
lret
jns
movsb
cmpsl
mov
rcl
or
fwait
dec
mov
mov
dec
clc
repnz
pop
in
cmp
addr16
or
and
cmpb
rcll
xchg
dec
sub
push
lods
and
cltd
mov
jl
imul
adc
lahf
dec
or
push
jo
push
pop
sbb
sub
push
insb
xchg
push
jne
cmpsl
movlps
lods
cs
std
jns
rcrl
push
leave
dec
imul
test
rcrl
jecxz
shlw
pop
add
loopne
mov
gs
or
cmp
xchg
push
pop
gs
test
out
pop
jbe
enter
mov
or
movsb
mov
mov
mov
pop
ja
sub
adc
inc
ret
xor
lahf
xchg
or
inc
dec
pop
dec
add
imul
pop
adc
data16
or
lock
cmp
mov
pop
sbb
dec
jne
push
mov
mov
jae
xor
adc
mov
subl
add
out
sub
xchg
pop
lods
jne
dec
mov
sub
stos
sub
lret
jmp
cmp
and
jnp
in
cli
mov
cmp
das
and
movsb
call
mov
enter
push
mov
adc
cli
int
mov
ljmp
mov
cwtl
in
fistps
and
leave
mov
jle
inc
pop
adc
leave
adc
add
leave
test
inc
ja
adc
mov
dec
or
ret
sbb
std
xchg
rol
push
xchg
cld
add
stc
add
das
cmp
nop
sbb
data16
aam
divb
mov
push
mov
adc
inc
mov
pusha
out
test
insl
inc
mov
sub
push
jge
shl
pop
out
jne
push
lock
clc
pop
cmpsb
std
sbb
cmp
cmp
test
mov
hlt
and
mov
jne
scas
mov
pop
in
leave
rcr
xchg
das
and
mov
cmp
sbb
mov
insb
ljmp
rclb
sarl
mov
sub
pop
sti
fs
sub
test
lock
pop
loope
out
push
pop
mov
std
imul
jmp
int3
mov
in
sbbb
jp
jne
and
inc
fdivs
add
xor
adc
fisubrs
xchg
stc
cmp
sub
push
pushf
fmull
insl
push
pop
stc
xor
cld
lea
inc
push
fmull
notb
mov
pop
test
sbb
jo
test
ljmp
fs
imul
mov
divb
in
cli
push
jp
insb
mov
arpl
in
jo
jmp
jl
loopne
mov
mov
cs
inc
push
sub
and
push
or
jbe
xchg
mov
mov
push
daa
test
xor
divl
mov
cmp
sarb
mov
jmp
adc
daa
call
hlt
test
fsubrs
xchg
fmull
or
cli
popf
jle
popa
orl
add
push
repnz
or
pop
xor
fs
or
dec
push
and
sbb
insl
flds
push
outsb
jbe
sbbl
outsl
sti
add
xchg
jle
jb
xor
sahf
cltd
out
test
xorl
push
xorb
iret
mov
mov
stos
inc
xor
sub
frstor
jl
daa
xor
inc
xor
sahf
push
jns
outsl
loopne
jae
fimull
cwtl
scas
pop
add
nop
pop
push
rcl
push
sub
movsb
in
jmp
jo
dec
cwtl
xchg
adc
add
mov
pop
clc
cli
cmp
xchg
mov
add
xchg
inc
addr16
mov
mov
push
adc
sub
pop
and
push
cmpsl
mov
xor
hlt
call
nop
fwait
outsb
mov
dec
or
or
jmp
sti
adc
sbb
push
xlat
stc
or
jl
add
pop
sti
int3
mov
mov
xor
loopne
xchg
sbb
stc
jmp
or
int3
xchg
lret
inc
gs
push
sub
fwait
mov
xor
rcrb
pop
les
test
add
rorl
into
xor
mov
nop
jmp
int
jnp
or
lahf
fsubrs
pop
fucomip
fcmove
and
imul
rclb
iret
fwait
lret
xlat
sub
out
pop
lcall
cmpsb
sub
push
fbstp
dec
sti
cmp
pop
shl
jg
in
test
ljmp
inc
add
clc
nop
jle
in
pusha
insl
or
mov
scas
sbb
lret
enterw
xchg
pop
les
push
mov
outsl
sarl
cs
lcall
es
xchg
adc
ljmp
push
inc
lods
mov
sbb
daa
mov
push
stos
pop
je
sbb
sbb
dec
iret
icebp
add
mov
mov
pusha
jge
mov
ret
cwtl
jbe
sarb
aaa
call
sub
jmp
add
repnz
pop
aam
jg
xlat
rcll
jb
mov
add
jo
lock
pushf
inc
arpl
xor
fdivs
aad
sub
clc
add
inc
int
stos
fcmovbe
mov
cmp
divb
xchg
daa
xchg
add
push
pop
fnstsw
jns
insb
es
ss
outsb
stc
add
inc
addr16
sub
inc
dec
or
lds
push
xor
xor
rclb
push
scas
cmpsb
subb
mov
lods
jle
jb
mov
pop
jne
out
std
pop
es
leave
les
stc
shrl
and
rolb
pop
daa
std
dec
or
aam
addl
cs
push
fwait
push
or
lret
cwtl
push
out
or
test
popf
jb
out
lods
out
mov
sub
jb
sahf
push
out
xchg
lret
mov
arpl
inc
std
rcr
stos
adc
clc
lret
push
sub
xor
repnz
dec
sbbl
xchg
xchg
inc
loope
mov
lock
outsb
mov
fwait
xchg
dec
ror
das
inc
dec
inc
dec
out
in
cmpsb
sahf
mov
or
clc
add
popf
test
or
inc
mov
xlat
repnz
adc
push
imulb
shrl
xchg
test
fstpl
dec
jae
outsl
cmp
jl
cmp
xchg
mov
sbb
jnp
sbb
add
roll
sti
repnz
lds
cmpl
inc
adc
push
xchg
sbb
fsubl
xchg
cltd
push
inc
ja
insb
xsha256
cmpsb
sarl
jmp
xor
push
sub
cmp
mov
ja
or
call
jno
dec
or
cmpsb
push
nop
popf
xchg
jns
adc
mov
jb
test
xorb
add
push
pop
mov
aaa
in
or
adc
cmp
xor
lods
mov
into
adc
stos
pop
cld
lea
xor
or
or
mov
add
push
insl
cmp
in
movsl
das
jbe
add
mov
mov
adc
xchg
push
push
packssdw
sub
push
daa
adc
mov
mov
jnp
xchg
cltd
sbb
xlat
mov
testb
loop
mov
jns
stos
imul
or
dec
loop
imull
lret
or
sarl
stos
mov
inc
push
cmpsl
mov
fdivl
insb
mov
test
cmc
lcall
movsb
push
mov
cwtl
xchg
cmp
pop
andb
ss
add
cltd
xchg
ret
xchg
cmp
inc
out
bswap
and
xchg
push
fldl
mov
adc
adc
mov
fisubrl
aas
and
clc
ljmp
cmp
mov
mov
aad
cmp
hlt
aam
xchg
pop
mov
icebp
stc
loope
cmp
lds
js
sbb
rcrb
mov
pushf
mov
jg
inc
das
repz
sbb
aas
scas
cmp
adc
xchg
sub
cmpsl
lea
fwait
ret
test
fildll
and
sbb
mov
mov
sbb
test
aad
outsb
mov
daa
push
out
or
pop
call
xchg
adc
jle,pn
and
dec
push
push
mov
pushf
outsl
xchg
cmp
fcomp
add
push
in
arpl
and
mov
cmc
enter
ja
jg
data16
or
push
mov
or
xchg
lahf
add
stos
mov
aad
mov
push
loope
pop
in
push
add
dec
in
in
das
lock
mov
mov
lods
push
inc
sti
cmp
insl
jle
mov
jmp
push
mov
adc
push
je
lock
addb
xchg
or
aas
dec
adc
cmp
inc
popa
in
add
push
xor
mov
sbb
in
das
xchg
lds
sbb
pop
xchg
pop
adc
fsubrs
inc
inc
mov
aad
jno
sbb
lcall
movb
pusha
nop
loop
cmc
in
xchg
gs
arpl
scas
movsl
cmc
testl
loope
int
and
test
inc
into
add
gs
mov
das
ljmp
or
out
push
shlb
fimull
insl
fisubl
imulb
int3
jmp
ljmp
imul
mov
test
sbb
js
pusha
push
cmp
mov
pop
mov
call
arpl
jmp
in
nop
lods
jl
negb
jmp
in
fisttpl
out
push
movsb
cmp
pop
xchg
push
daa
addr16
gs
out
mov
cmp
and
mov
frstor
inc
jno
aaa
lds
pop
jns
jae
xchg
enter
pushf
movsb
xchg
rclb
out
dec
lock
mov
out
js
pop
test
xor
int
push
sub
aad
in
cmp
jns
and
jno
out
pop
in
or
and
fstpl
into
popf
ja
pop
dec
mov
fwait
mov
dec
fnstenv
mov
int
test
push
pop
and
fwait
add
xor
loope
mov
icebp
ja
or
js
cmp
stos
mov
or
in
xchg
and
stos
into
jg
jg
push
lea
dec
adc
out
sbb
cmpsl
mov
cwtl
fcoml
or
shlb
bound
aad
test
inc
ss
dec
inc
pop
mov
insl
jmp
push
dec
sti
js
mov
je
sti
dec
sub
add
test
jno
fsubs
add
push
loop
sti
xor
popa
add
add
inc
andb
inc
mov
insl
jb
pop
push
test
es
sub
lret
mov
loopne
mov
and
fucom
lds
mov
repnz
add
or
mov
in
test
shlb
data16
mov
pop
jecxz
popf
call
mov
or
icebp
cltd
js
dec
xchg
add
imul
in
cmpsl
cmp
not
insl
pusha
sbb
jp
movsl
xchg
lahf
fimull
arpl
dec
xchg
sbb
dec
cltd
push
std
push
cmp
xchg
ret
jns
cwtl
pop
int
insl
loopne
aaa
mov
sbb
add
cmovae
mov
mov
inc
and
repnz
in
mov
imul
clc
cwtl
push
dec
jno
add
or
aaa
rorb
or
mov
out
cmp
loope
movsl
mov
leave
outsl
jns
sbb
adc
pop
jge
inc
mov
adc
mov
cmp
xchg
test
loopne
nop
in
sub
jne
adc
and
leave
add
mov
loop
pop
mov
sbb
lea
jecxz
mov
fdivrl
sub
shlb
cmp
roll
jg
adc
dec
popa
mov
int
movq
gs
add
push
data16
pop
sub
add
fistpl
ret
pop
imul
add
xchg
pop
in
mov
jmp
out
push
daa
mov
cmp
xchg
shrl
jge
push
subw
rolb
mov
push
data16
jmp
movsb
mov
lret
fcompl
lods
aam
cmp
aas
pop
aaa
sarl
gs
lds
sub
lea
xlat
lea
ret
cmp
leave
mov
push
xchg
fildl
shrb
and
sbb
xchg
xchg
dec
sub
aad
jo
popa
jns
adc
push
sub
mov
lea
jp
ss
xor
push
lods
jg
cmc
ljmp
xlat
sbb
scas
xchg
push
push
mov
repnz
sub
sbb
lcall
mov
idivl
and
dec
jl
add
mov
add
sub
cmp
clc
pop
and
dec
xor
jae
xlat
mov
mov
push
push
or
or
lret
fldcw
psllw
std
push
std
ds
nop
jo
dec
add
testb
pop
lods
mov
out
repnz
adc
aam
fs
mov
stos
push
push
dec
cmc
lods
lahf
xchg
sub
test
gs
dec
lret
mov
pusha
add
jl,pn
in
push
les
jecxz
icebp
cmp
push
lcall
loop
rolb
clc
mov
xchg
je
rorb
lock
sbb
cmpsl
push
popf
test
jbe
daa
lret
push
xchg
or
add
jnp
mov
jp
popf
loop
dec
mov
mov
xchg
sub
stos
into
movsb
loopne
push
pop
fisubs
jp
jecxz
mov
sbb
fwait
dec
xor
lock
or
in
and
cmp
push
icebp
pop
mov
test
notl
mov
lahf
andb
js
and
sub
shll
add
push
mov
ret
sbb
fldcw
jbe
stos
pop
lods
push
ficoms
xchg
and
cmp
pusha
xlat
mov
jb
mov
nop
popf
dec
mov
sbb
repz
insb
test
adc
sbb
sti
dec
dec
mov
lods
dec
mov
daa
mov
bound
xor
push
clc
sbb
ret
cmpl
frstor
jmp
pop
lcall
xchg
data16
xor
add
cmp
push
jae
adc
jo
aas
dec
add
pop
mov
inc
xor
xlat
mov
push
push
xlat
jo
jp
jp
jno
xchg
dec
inc
lods
xchg
pop
pop
loopne
pop
inc
lahf
jo
mov
xchg
push
leave
ficoml
std
test
or
or
pop
cld
push
popf
ljmp
xchg
mov
into
cs
in
sbb
pop
nop
insb
inc
sub
adc
subb
sbb
jbe
pop
pop
mov
jns
ret
mov
insb
outsl
loopne
pop
push
push
jge
cmpsb
and
inc
jl
xor
test
dec
out
cmpl
dec
jg
add
into
out
and
outsb
daa
sahf
rclb
pmulhuw
xchg
out
adc
int3
out
push
cmp
fistpll
je
ljmp
cmpsb
and
in
mov
push
cli
xchg
dec
imul
lds
sahf
out
push
mov
adc
cmp
aaa
loopne
test
ljmp
loop
xchg
addr16
add
mov
repz
jl
and
dec
ret
lahf
sub
cmp
push
pop
add
sti
adc
loopne
insb
fistl
push
jp
outsb
push
repz
mov
push
shlb
and
push
mov
das
mov
inc
mov
pushf
dec
scas
arpl
pop
cmp
adc
pop
pushf
xchg
in
add
js
jecxz
mov
loope
sub
out
cmpsl
pop
jno
mov
xor
mov
jno
push
call
das
sti
xchg
inc
arpl
inc
mov
sub
push
dec
in
xchg
stos
mov
jg
das
in
xor
jle
add
add
push
adc
dec
stos
negl
out
mov
stos
pusha
add
jg
add
push
and
inc
into
loope
cs
mov
mov
dec
dec
pop
insl
ja
sti
sbb
pop
fsubr
push
iret
push
jmp
in
jbe
jnp
push
in
shlb
notl
js
loop
mov
out
jl
push
pop
xchg
std
mov
cld
sbb
jg
mov
lret
data16
or
pushw
mov
add
ljmp
imul
mov
shlb
lcall
data16
sbb
push
arpl
loop
mov
fidivrs
mov
pushf
and
push
mov
cmpsb
scas
stc
cmpsl
add
sbb
shl
fcoms
jb
push
scas
movlhps
mov
fisubrs
mov
ja
leave
or
push
sarb
fadd
pushf
ret
fldt
inc
stos
and
cmp
inc
pushl
cwtl
addb
fcompl
ss
push
popf
or
jo
test
ljmp
sti
bound
xchg
stc
cmp
mov
std
ret
sbb
stos
dec
insb
cmp
mov
cmpb
loopne
aam
sub
mov
xor
pop
not
pushl
and
mov
and
repnz
adc
dec
mov
xchg
fwait
je
push
cwtl
popa
push
lods
mov
dec
cmp
adc
mov
add
sbb
imul
ja
sub
pop
clc
lahf
outsl
fsubrs
std
mov
push
leave
icebp
pop
sub
ret
cld
sahf
sbb
push
or
test
mov
int3
movd
pop
mov
stos
rcrb
mov
add
xchg
call
in
daa
jle
shr
cmp
push
jmp
and
add
shl
mov
xchg
adc
in
pushf
sbbb
push
fldt
cmp
or
lods
repnz
lahf
sub
mov
ficomps
mov
mov
adc
ljmp
jns
and
adc
in
leave
jbe
inc
shrb
cmp
andl
cmp
jl
das
shll
jecxz
int
sub
mov
es
push
jg
add
fs
xchg
mov
stos
outsb
loop
repnz
sub
aam
fxch
rcrb
push
in
push
jmp
mov
clc
mov
rol
pop
adcb
scas
cwtl
shr
xchg
push
clc
in
dec
inc
mov
repz
mov
sbb
dec
jecxz
or
and
pusha
shl
adc
push
push
adc
jl
std
out
stc
int3
pop
cld
xchg
lcall
pop
outsb
xor
mov
jb
xor
sub
cmpsb
test
mov
pop
in
xchg
mov
mov
adc
lea
pop
int
pop
xchg
xchg
mov
jbe
test
add
test
popa
add
push
jle
mov
inc
mov
int3
outsb
mov
cmp
ret
pusha
sub
outsb
test
dec
in
sti
or
inc
out
aas
mov
mov
cld
xor
jbe
jl
jns
xor
dec
repnz
mov
rcrb
jnp
jno
adc
leave
and
inc
icebp
mov
xor
sub
outsl
rol
fs
mov
sub
das
inc
sub
cmp
enter
fs
leave
mov
inc
push
inc
dec
jmp
mov
shlb
out
stos
fwait
cld
xorb
cmpsb
repz
in
fldenv
xchg
sar
xchg
xor
sbb
out
jmp
or
mov
in
mov
in
jne
inc
cmp
mov
xchg
std
sbb
daa
repnz
in
ret
fstps
in
mov
push
xor
les
fisttpll
shrb
mov
xor
add
push
xchg
bound
inc
in
dec
cmc
mov
test
inc
mov
int3
stc
mov
fbld
fisubrl
xlat
mov
pop
ljmp
int3
and
shll
iret
mov
repz
imul
test
mov
jp
jb
int
adc
fwait
xor
add
jns
xchg
push
sbb
inc
loopne
inc
out
pushl
dec
xchg
xchg
stc
inc
cmp
outsl
insl
sbb
fmuls
fldenv
sbb
inc
clc
adc
filds
lds
or
dec
fs
mov
xor
cld
push
mov
clc
xchg
outsb
dec
jl
fsubl
std
les
inc
sbb
adc
lock
test
cmpsl
jecxz
sbb
add
mov
test
aad
mov
in
cli
hlt
pop
loope
xor
mov
and
rcr
shr
outsb
scas
adc
cmpb
dec
jle
pop
sub
shrl
std
xchg
insl
mov
xchg
outsb
mov
inc
cltd
iret
jb
or
ja
inc
inc
adcb
fs
adc
xor
cmpl
cltd
mov
xor
push
rcrl
into
mov
push
adc
movsl
jge
xchg
movb
or
scas
push
or
pop
negb
aam
push
pop
and
js
sbb
roll
dec
push
add
mov
mov
nop
insl
bound
jle
cmp
loop
cmp
aaa
and
push
cmp
and
lcall
add
xor
insl
pusha
stc
dec
xchg
adc
jg
adc
je
fsubl
fs
sub
inc
cmp
sbb
mov
mov
jnp
dec
mov
enter
jecxz
mov
push
inc
iret
enter
and
enter
fistps
ljmp
mov
dec
xor
sti
sti
imul
ret
pop
pop
leave
and
out
out
mov
fldenv
sub
data16
ljmp
pop
sub
jmp
ss
outsb
aam
or
mov
cmp
mov
sti
in
das
mov
mov
xchg
jnp
sbb
test
testl
jge
stos
sub
sbb
pop
cmpsl
xchg
adc
test
or
push
sub
pop
mov
test
xchg
mov
std
outsl
mov
xchg
sbb
adc
gs
dec
sarb
mov
cli
and
lea
cmc
sbb
xor
push
jp
jge
sbb
and
pushf
mov
push
mov
cwtl
jae
into
jle
movsl
xor
cmp
test
push
jbe
in
lahf
cli
cmc
mov
ljmp
ljmp
stc
jmp
add
pusha
jae
pop
pop
lret
movsl
jg
mov
xchg
movb
xchg
loop
cld
loopne
jmp
bts
mov
mov
cmp
int
test
lock
shrl
rolb
xor
int3
out
mov
sahf
mov
jg
xchg
mov
cmp
notl
jp
or
adc
movsl
dec
loope
mov
movsb
out
out
push
dec
jl
movsb
xor
adc
xchg
lret
scas
andl
inc
fdivp
push
cmp
orb
mov
jbe
push
int3
push
cmp
add
push
dec
loope
loop
rcrb
jae
dec
mov
lret
test
sub
ljmp
cmp
test
jae
jle
cmp
jbe
dec
or
cltd
stos
mov
and
inc
jbe
loop
cmp
addl
cmp
rolb
or
add
mov
push
xchg
je
add
aas
inc
push
push
clc
and
adc
cmp
icebp
xor
mov
lret
fistpl
ja
mov
adc
pusha
jmp
push
fcoms
insb
ja
inc
mov
lds
rol
fwait
or
add
iret
xchg
and
xor
add
mov
push
jae
bound
fistpll
sbb
out
fcoml
add
xchg
sarl
jl
cmpsl
jmp
pusha
mov
shl
std
mov
les
sbb
xlat
addb
leave
sti
shlb
jp
loop
orl
cli
jle
int
mov
mov
sub
sbb
adc
popa
dec
jno
push
shl
loope
mov
daa
in
stos
data16
push
setne
fisttpll
xchg
aad
popf
fcmovu
in
sub
cmp
lahf
adc
shr
cmp
adcl
outsl
ret
lds
insl
shr
adc
pop
sbb
dec
mov
fwait
testl
push
xor
enter
icebp
push
outsl
pop
das
lods
insb
mov
xchg
call
pop
sub
idivl
fnstsw
or
repz
add
mov
negb
xor
insb
lcall
cli
aad
jne
insb
push
push
data16
out
rcll
pushf
cmp
xchg
jl
or
lea
scas
sbb
push
notb
jns
insl
fsts
icebp
frstor
rcrl
mov
cli
int
lods
jle
push
xor
test
adc
ja
cmp
and
adc
xor
aad
data16
imul
push
adcb
mov
insb
xchg
push
hlt
inc
cmc
cmp
xor
in
nop
push
addr16
inc
sbb
pop
jae
mov
push
lahf
mov
jl
sub
lock
add
mov
dec
adc
push
mov
out
pop
jmp
test
sti
fdivr
push
dec
adc
je
hlt
repz
inc
stos
shrl
out
inc
pop
push
std
aas
lods
repz
jmp
and
sbb
jp
cmp
push
xlat
fstp
and
cmp
mov
pop
mov
jns
adc
sub
das
push
fidivs
mov
testb
jp
hlt
in
cmp
cmp
clc
add
push
mov
pop
pop
xchg
xor
out
lods
int3
pop
and
lods
and
pop
imul
lret
mov
jmp
or
cmp
lock
std
mov
insl
stc
addb
lahf
push
mov
adc
loopne
adc
mov
outsl
in
std
sub
sub
xchg
adc
push
ljmp
jle
pop
mov
popa
push
icebp
aam
mov
jnp
jecxz
arpl
xchg
or
sub
negb
lock
cli
js
push
ret
jecxz
rorl
testl
pushl
cwtl
adc
imul
sbb
lret
dec
pop
xor
jae
rcll
in
push
stc
sub
outsb
les
imul
cmc
cli
jge
call
repnz
xor
add
push
cmp
cld
adc
mov
popf
pop
test
je
xchg
rcrb
stos
lods
gs
sti
dec
inc
lods
and
lock
lahf
sub
xchg
shll
pop
inc
mov
sbb
add
popf
mov
mov
adc
xor
jg
test
xchg
insl
jb
je
arpl
shll
fmull
pop
aas
fnsave
mov
mov
lods
sahf
leave
xlat
adc
dec
lock
clc
pop
scas
aaa
fdivs
daa
stc
sbb
repnz
shrl
xor
stos
or
pop
cltd
sbb
adc
inc
in
push
mov
push
sbb
scas
cwtl
inc
sbb
cmp
push
loop
loope
lcall
jno
jnp
loope
push
in
xchg
dec
pop
jle
pushf
imul
sbb
orl
push
clc
xchg
imul
out
ja
or
xor
ljmp
cmp
xor
xor
stos
or
mov
sbb
push
and
subl
movsb
or
push
pop
mov
pop
xor
pop
call
nop
adc
xchg
push
mov
jmp
pop
inc
fildl
ljmp
das
scas
cmp
lea
add
ljmp
aaa
in
cmp
loopne
adc
stos
push
out
and
adc
lret
push
mov
notl
vmread
sbb
int3
inc
pop
lods
pop
fidivs
aad
sbb
jp
shrb
push
dec
dec
or
dec
and
mov
testl
out
cmp
add
sbb
in
stc
xlat
mov
sbb
pop
mov
sbb
nop
mov
mov
mov
sub
adc
test
jae
xchg
jmp
xlat
daa
or
push
mov
add
cltd
pusha
mov
test
sahf
dec
add
pop
or
jecxz
mov
pushw
xor
push
pop
pop
vpsrld
outsb
push
jae
sub
dec
enter
adc
stos
or
std
lret
call
cmp
cld
jns
xadd
inc
dec
mov
in
lods
inc
xchg
xchg
and
push
xchg
clc
fs
add
pusha
test
lret
incl
mov
rorl
push
push
add
jae
mov
mov
mov
sub
frstor
leave
pop
iret
mov
cmc
push
pop
pushf
dec
lock
loopne
aas
push
inc
insb
insb
sbb
mov
mov
in
test
scas
push
or
mov
jg
js
pusha
iret
cmpsl
or
xchg
loope
mov
sbb
xor
push
inc
jecxz
insb
in
add
in
sub
jns
add
adc
cmp
sbb
add
and
jmp
mov
dec
sbb
jb
dec
rol
fcmovnbe
sahf
pushf
jl
mov
adcb
jae
subl
pop
jg
scas
mov
movsb
and
inc
ss
xchg
jnp
adc
gs
jp
xor
push
inc
sub
lahf
push
sahf
arpl
lock
out
jbe
add
jp
dec
cmpsl
repnz
jmp
inc
mov
mov
call
clc
xchg
inc
movsl
jge
inc
outsl
inc
push
mov
mov
inc
int
pop
mov
int3
dec
lea
scas
loope
cmp
sbb
and
cmp
jp
dec
jns
rcr
pushf
jnp
lcall
push
lret
bound
pop
sbb
into
mov
in
mov
wbinvd
shrl
aas
adc
jle
add
pop
out
mov
lods
cld
arpl
mov
mov
xchg
mov
arpl
notb
stc
and
sub
loope
mov
es
stos
test
mov
shrb
xchg
dec
inc
pop
js
adc
mov
mull
sti
or
nop
and
inc
out
jbe
ljmp
popa
addr16
subl
pop
mov
out
aam
push
dec
aaa
shrb
je
cltd
and
mov
or
insl
mov
imul
jb
xlat
into
adc
xchg
pop
jno
cmc
cld
sbb
shll
dec
repnz
addr16
lds
fs
sbb
adc
jb
add
mov
and
cmpsb
mov
fidivl
in
lret
xor
mov
popa
in
fidivl
icebp
pop
imull
pop
pop
cmpsl
mov
out
push
mov
dec
jecxz
mov
cmp
add
push
js,pt
sub
gs
pusha
mov
rol
add
cmp
cmp
or
orl
ret
lds
leave
int3
sbb
mov
xorb
cmpsb
adc
ret
lock
in
clc
sbb
or
repz
insl
jg
push
cmpsl
and
add
pop
mov
xchg
pop
fldt
push
pop
add
cmpsb
jns
pop
enter
lahf
popa
sub
mov
ja
jecxz
arpl
scas
sub
loopne
xorb
loopne
cmp
lock
or
in
add
adc
inc
sub
mov
int3
sub
lods
or
lret
mov
cmpsl
cmpsb
es
xchg
ja
inc
std
or
repz
fwait
dec
fildll
int
cmp
jnp
fcmovu
xlat
arpl
xchg
cmpsb
sbbb
sbb
jecxz
sbb
inc
inc
xor
enter
stc
sbb
xchg
in
test
add
stc
and
or
mov
cmp
jge
mov
jbe
or
xchg
and
fcomi
hlt
cmp
cmp
mov
xchg
jle
outsb
dec
mov
xchg
add
fists
mov
rol
test
icebp
mov
mov
ja
sub
push
sbb
cmp
orl
test
mov
and
mov
mov
push
mov
cmpsl
insb
xor
cmc
xor
out
cmpsl
arpl
lret
test
lods
rcrl
lods
push
inc
push
add
cmp
int3
push
popa
fadd
dec
decl
jno
push
nop
lcall
or
mov
fcomi
sbb
fnsave
ja
pop
push
push
mov
pop
add
cmp
mov
add
sub
sub
stc
pop
cwtl
inc
mov
dec
outsb
sbb
movsl
jge
sahf
mov
xchg
or
test
mov
movsb
sub
xor
inc
sub
pop
iret
test
xlat
xlat
enter
pop
mov
addl
rcrb
cmp
or
nop
sbb
mov
into
sub
mov
popf
mov
jmp
push
xchg
rcll
fdiv
mov
jle
mov
pop
movsl
testl
cmp
and
outsl
out
push
test
xor
test
adc
ds
xchg
sbb
dec
push
and
or
outsl
lock
jnp
xchg
mov
nop
mov
jmp
dec
adc
inc
mov
dec
sbb
pusha
into
cmp
stc
insl
cwtl
aad
inc
add
sbb
imul
imulb
or
in
sub
sub
mov
mov
mov
in
mov
aaa
mov
cmp
or
cmp
cmp
mov
or
sbb
pop
enterw
fnstsw
push
xchg
mov
jbe
xchg
cmp
and
in
pop
jne
out
jb
and
bt
adc
dec
add
or
imul
out
cli
sbb
dec
mov
call
add
push
mov
cmp
popa
adc
add
js
mov
movb
or
cwtl
xlat
xor
sbb
mov
filds
mov
loope
ficompl
pop
lahf
xor
and
fs
cmp
push
push
jb
lods
mov
jnp
fstps
adc
ret
test
or
repz
xchg
shrl
xchg
nop
pop
cli
aaa
repnz
xchg
sbb
xchg
pushf
sub
mov
fcmove
mov
test
push
fmull
cltd
pop
or
sub
clc
lea
rorb
jle
dec
pop
shll
mov
mov
jo
adc
daa
lcall
jnp
or
call
pop
loopne
pop
jecxz
jae
mov
sub
adc
insb
mov
out
cld
aaa
pop
ret
cmpsl
in
jecxz
push
ds
pop
sti
push
stos
sub
ds
fdivr
clc
push
loopne
decb
mov
aaa
pop
mov
test
lock
mov
repnz
inc
popa
std
cmp
in
push
int
aad
insb
sub
hlt
jmp
xchg
outsb
ljmp
xor
push
out
insb
aad
pop
testl
jo
insb
dec
insl
xchg
mov
mov
je
test
xchg
insb
mov
jno
cltd
iret
and
fcoms
icebp
mov
sbb
in
scas
push
ret
imul
xchg
bound
out
mov
xor
add
lds
pusha
xor
or
pop
or
jne
cmp
mov
aam
nop
gs
xchg
movsb
clc
gs
sbb
loopne
jle
jne
add
fidivrl
test
addl
fnstsw
xchg
movsl
mov
and
adcl
bound
jg
mov
shl
movsb
dec
out
out
js
stos
adc
lcall
xor
jmp
out
dec
jnp
and
movsl
js
out
dec
sub
lret
xchg
push
push
sbb
test
dec
pop
jne
cmpb
mov
lds
xchg
lea
addr16
mov
inc
add
xor
mov
cmp
jne
pop
cmpsb
adc
rorb
cwtl
fimull
mov
xchg
mov
daa
mov
xchg
aad
cmpsb
sbb
and
loop
cmpsl
inc
jl
pop
clc
sti
outsb
pushf
push
dec
jle
mov
loope
test
sti
jb
mov
insl
fldenv
cmpsl
and
adc
loopne
dec
pop
mov
arpl
adcb
jo
mov
popa
or
fucomi
fisubs
jle
pop
mov
inc
in
in
loop
mov
sahf
or
aas
add
or
push
jns
lock
iret
pop
bound
movsl
pusha
fwait
iret
sub
sbb
stos
jecxz
jbe
insb
cli
negb
aam
mov
add
icebp
adc
dec
out
jge
mulb
arpl
dec
cs
lcall
push
sbb
cmp
adcl
add
and
dec
loopne
inc
dec
mov
insl
adc
jge
leave
inc
ret
xchg
sub
mov
and
push
xchg
xchg
pushf
fiaddl
xor
push
arpl
leave
push
pop
repz
adc
clc
and
xchg
sbb
mov
sbb
jbe
xor
ds
es
fisubrl
out
add
mov
or
imul
push
in
xlat
jle
inc
cmpsb
or
cld
inc
sub
arpl
xchg
push
xchg
push
mov
test
fs
inc
jge
adc
shll
pop
mov
hlt
jbe
sbb
mov
lock
xchg
adc
rcr
xchg
fwait
adc
cmpsl
push
and
or
sarb
out
mov
and
push
or
xchg
mov
rolb
push
cmc
std
push
jge
movsl
dec
mov
cmpsb
imul
mov
dec
or
jae
bound
loop
repnz
mov
cmpsl
jg
push
rorb
in
les
testb
push
out
outsl
stos
jo
xchg
nop
call
mov
aad
arpl
call
xchg
push
jmp
sub
pop
inc
imul
push
cli
and
nop
cmp
ds
jno
int
pop
cmp
imul
xchg
sbb
sarb
ret
cmc
jae
sub
je
arpl
arpl
xchg
jae
gs
mov
and
push
push
xchg
pushf
mov
imul
adc
or
dec
out
out
cli
xor
adc
test
hlt
shlb
nopl
insb
jl
call
roll
iret
scas
jb
mov
dec
pushf
and
add
aad
sbb
out
dec
fcmovnbe
stos
leave
scas
mov
mov
push
fwait
mov
sub
mov
xchg
xor
xor
pop
mov
mov
lcall
xchg
stc
jae
roll
inc
fsub
hlt
adc
mov
aam
gs
mov
fdivr
ljmp
add
push
inc
sbb
or
stc
jnp
test
cwtl
repnz
enter
jb
jae
fcomi
jbe
movsb
xor
mov
mov
pop
jo
inc
stos
popa
pop
sub
outsb
xor
dec
push
mov
iret
shll
mov
xchg
mov
daa
lret
inc
aad
sbb
push
xchg
inc
mov
inc
push
sbb
adc
cmpl
stc
adc
cmp
lea
rcrb
outsb
inc
fcomp
jge
js
jae
scas
fcmovnu
sbbl
jo
jle
cld
push
mov
fcomps
out
mov
out
dec
cmp
pop
ficoms
movsb
lds
mov
xor
ret
je
clc
sub
stos
pop
insl
jae
in
loop
pop
out
rorb
into
xlat
jg
repz
jnp
jecxz
movsb
cmp
xlat
and
cmp
add
mov
jnp
inc
push
sarb
movsb
mov
imul
cld
aaa
dec
and
std
mov
lea
sbb
in
js
add
sarl
loope
jmp
loop
xchg
sbb
add
mov
repnz
mov
into
fnstsw
fisubs
in
jno
push
lea
jmp
stc
ret
dec
add
lock
daa
movsl
cmp
or
aaa
xchg
jne
cmp
es
fs
leave
ret
mov
arpl
xchg
adc
ret
jnp
adc
jle
fsts
jmp
pushf
adc
iret
imul
in
bound
sbb
xlat
movsb
adc
in
jge
pop
mov
cmp
fs
add
shrb
cld
aas
insl
clc
push
lcall
sbb
sbb
xor
push
cmp
mov
xor
icebp
rcrb
dec
jns
fsubl
pop
rcll
out
lock
xor
pop
cmp
stos
jle
sbb
push
mov
pop
add
pop
lods
xor
dec
into
jp
divl
inc
js
pop
fildll
repz
mov
jl
rclb
nop
mov
outsb
lods
push
dec
push
sbbb
add
mov
imul
cli
dec
adc
add
xchg
fisubrl
mov
push
cmp
push
mov
insb
sbb
insb
and
xchg
add
idiv
fwait
xchg
out
nop
nop
jle
pusha
or
mov
and
aaa
rorb
mov
cmc
call
popf
fcmovne
jmp
jg
cmp
jno
iret
out
clc
cmp
loopne
lcall
cmp
xchg
aad
fisubrs
loopne
int3
pop
jge
push
or
test
jae
aaa
pop
sti
adc
xor
scas
adc
pop
jmp
sub
es
and
jmp
stc
test
jno
movsb
adc
mov
fiadds
adc
add
lock
sti
sub
jmp
lods
xor
and
outsl
aam
xor
in
sbb
arpl
leave
pop
mov
repz
push
stc
jno
hlt
cmp
dec
std
jnp
ja
and
mov
and
cmp
mov
cld
cli
adc
rol
dec
lret
adc
dec
mov
xchg
sti
mov
jmp
aam
mov
xor
ljmp
mov
in
mov
mov
inc
mov
ret
rclb
cmpsb
js
div
fmull
pop
mov
adcb
xor
inc
loop
std
mov
or
data16
or
sub
jne
sarl
cmp
sbb
xchg
xchg
ret
dec
outsb
repnz
dec
lods
mov
mov
stos
jb
xchg
repnz
aam
xor
int3
xchg
sbb
or
stos
pop
adc
imul
rorl
jle
insl
jg
xchg
and
xchg
bound
outsb
pop
rorl
mov
mov
andl
add
xchg
clc
fstps
mov
iret
stc
imul
ljmp
push
adcl
jle
cmp
mov
mov
jecxz
mov
sub
push
and
xchg
ja
fidivl
loopne
inc
xor
push
sbb
sub
sub
mov
push
push
test
mov
mov
add
xor
repz
add
mov
add
jmp
rcll
bound
test
or
xor
xchg
add
and
movl
ds
stos
daa
aad
sub
pop
add
imul
or
add
push
filds
shlb
jge
out
jg
incl
das
lods
push
insb
jecxz
fistps
push
iret
push
dec
dec
cmpsl
mov
test
push
mov
in
popa
inc
movsl
or
or
dec
fnstcw
mov
out
sbb
pushf
popa
jbe
add
xchg
xchg
jbe
or
dec
fs
test
push
inc
xchg
mov
hlt
sub
inc
xchg
xchg
int3
cmp
icebp
xlat
iret
fcomps
out
pop
pop
xchg
or
push
xor
callw
bound
add
fsubs
in
dec
mov
xchg
add
lock
push
cmp
aaa
adc
das
jle
add
fs
icebp
pop
scas
call
sub
xor
dec
pop
mov
adc
rolb
adc
test
dec
test
cmp
popa
push
xchg
xchg
dec
cmp
push
out
adc
ja
mov
gs
push
xchg
ljmp
popa
inc
test
scas
add
lock
inc
jp
inc
out
movsb
mov
bound
dec
cmc
xor
push
inc
iret
lock
cmp
fimuls
xchg
or
mov
out
inc
loop
int3
js
jg
dec
dec
cmp
sbbl
or
xchg
push
fcoms
sbb
inc
xor
addr16
add
dec
xor
or
fdivrp
in
jecxz
jo
adc
jl
pop
dec
movsl
aaa
mov
orl
xor
mov
push
push
cmp
mov
inc
shlb
xor
imul
fisubs
mov
add
adc
push
insb
enter
cwtl
sbb
lods
lods
call
fwait
gs
cmpb
pop
pop
in
push
fldt
mov
pop
mov
pop
mov
jbe
push
aam
sub
jmp
dec
or
gs
xor
test
hlt
fldcw
out
imul
outsb
bnd
es
dec
xchg
cmp
sub
sbb
icebp
aam
jb
test
pop
cmpsl
or
add
rorb
cmp
or
dec
lods
inc
pop
inc
sbb
pop
clc
and
pop
push
push
icebp
repz
int3
imul
or
inc
repnz
jne
js
xorl
xchg
or
xor
int
mov
jecxz
insb
push
sahf
aas
xchg
xchg
jo
lahf
iret
cmp
adc
gs
jecxz
das
mov
movb
add
and
xchg
mov
imul
adc
pop
repz
lods
popa
fidivl
xchg
aas
decl
into
inc
xorb
dec
adcb
test
fs
xorl
xor
scas
stos
inc
sti
pop
lock
or
iret
stc
stos
pop
push
xor
jecxz
jg
shlb
arpl
fisubrl
xor
repnz
dec
adc
and
mov
push
call
push
js
test
cmp
pop
loop
cmp
int3
xchg
mov
bound
push
jecxz
sub
jo
add
loope
mov
jp
mov
sub
xchg
gs
loopne
fmuls
lahf
add
gs
out
sbb
leave
lods
lea
push
mov
pop
cmp
test
out
les
mov
pop
mov
jne
dec
cmp
adc
test
xor
add
mov
push
dec
jb
mov
ds
and
push
out
repnz
std
push
cmp
push
mov
mov
mov
or
insb
mov
mov
cmp
sub
dec
test
andl
adc
add
sub
mov
inc
aaa
jecxz
xchg
loopne
cmp
push
mov
test
xchg
jno
mov
lret
sub
push
mov
and
inc
xchg
add
sti
inc
dec
add
icebp
cltd
mov
int3
and
rolb
pop
aas
adc
jno
xchg
jbe
cmp
jge
aam
jge
and
lret
adc
loope
movsb
addl
aad
cwtl
aad
iret
cmp
arpl
mov
jno
pop
sub
fcompl
popl
sub
mov
ret
test
out
shr
aas
es
test
push
testb
or
imul
dec
dec
idivl
gs
lods
loopne
mulb
push
gs
test
cltd
aad
or
xchg
in
xor
xchg
adc
in
push
fldl
cld
xchg
jnp
imul
das
mov
sub
cltd
ja
adc
fs
mov
scas
idiv
cmp
in
jns
bound
rcrl
fldt
adc
mov
and
inc
cld
push
lcall
popf
or
or
pop
fxtract
jno
push
loop
dec
cmp
sbb
gs
jge
and
pop
je
aaa
push
inc
inc
xchg
insb
call
pop
push
cmp
xchg
mov
adc
movsb
stc
jl
mov
push
push
jns
jbe
cmp
sub
inc
loopne
shlb
test
rcrb
pop
inc
xchg
pop
or
rcll
aaa
mov
cld
xchg
in
fisttpll
dec
jg
xchg
adc
movsl
call
cmp
outsl
cmp
mov
mov
mov
cltd
daa
push
sti
out
jge
lods
ja
sbb
stos
test
das
mov
push
xor
ficoml
mov
inc
and
dec
leave
ljmp
mov
jge
cmpsl
sbb
out
cmp
push
nop
outsl
sbb
jmp
xchg
ss
jecxz
add
sahf
jmp
insb
push
sbb
push
pop
jecxz
pop
outsb
dec
sbb
repnz
cmp
sbb
js
push
popf
sbb
push
outsl
popf
repnz
hlt
stc
imul
adc
mov
scas
dec
loop
icebp
pushf
adc
xchg
inc
out
mov
jne
dec
lahf
lds
xchg
das
ss
fnstcw
sbb
pop
pop
lret
nop
sub
push
cmp
in
cmp
lods
icebp
ret
negl
sbb
test
push
sarl
dec
cmp
sar
stos
filds
jo
sub
mov
daa
clc
jl
mov
jbe
scas
pop
lock
leave
mov
outsb
fcmove
fistps
xchg
cmpb
mov
jae
push
icebp
pop
subl
push
push
fidivl
mov
into
ret
clc
xchg
xlat
insl
sti
dec
mov
xor
fistpll
xor
pop
in
jge
out
imul
jns
and
xor
pushf
sbb
cltd
xchg
call
push
sbbb
or
dec
mov
push
jp
or
fcomp
mov
inc
sbb
mov
mov
and
xor
daa
pop
xor
ds
sahf
mov
repnz
dec
insl
out
push
and
sbb
push
xchg
mov
and
xor
loope
mov
xor
sbb
dec
inc
add
call
adc
in
jle
push
xchg
push
ret
mov
fwait
outsl
xchg
jb
shrb
and
repz
mov
ljmp
inc
fdivrs
loop
jnp
xchg
jg
mov
adc
daa
jge
push
jl
cld
adc
xchg
fcmovnb
xchg
sbb
mov
call
mov
cmc
cmp
and
fnstenv
mov
ljmp
movsl
scas
mov
cmpsl
in
push
push
popf
cmpsb
xor
hlt
cmp
cli
sub
fbld
sbb
lock
mov
cmp
fsubp
cs
mov
sbb
lcall
data16
and
xor
repnz
adc
mov
mov
hlt
lock
mov
cmp
cmpsl
sti
mov
fwait
mov
push
jnp
sub
aaa
mov
scas
sbb
stos
pop
pop
mov
push
jg
mov
sbb
mov
iret
sub
testb
data16
xchg
mov
ds
out
out
mov
subl
fmuls
mov
push
jmp
adc
sarl
inc
cld
mov
iret
addb
mov
jo
dec
pop
jbe
movsb
and
out
scas
add
xchg
repz
xor
roll
sub
ds
adc
or
push
jecxz
clts
ret
dec
in
pop
ljmp
fcmovne
lret
mov
popa
and
dec
cmp
mov
mov
daa
pop
jmp
pop
ret
lds
lock
pop
push
loopne
sarb
lcall
xchg
lock
rcrl
inc
decl
les
out
jnp
pop
mov
sub
xor
inc
sub
das
adc
mov
in
ror
mov
xchg
icebp
ja
int
push
xor
push
out
mull
subb
lcall
jnp
dec
js
clc
jae
adc
clc
or
xchg
imulb
mov
gs
mov
push
out
pop
xchg
daa
popa
xor
sbb
jnp
jle
pusha
ret
xchg
adc
mov
mov
das
movsl
sub
pop
or
push
sbb
in
pushf
mov
shrl
ljmp
adc
sub
xchg
mov
mov
inc
xchg
jo
fsubrs
xor
fsubrl
dec
in
pop
sbb
dec
lret
mov
movb
add
lret
sub
pop
pop
and
sub
and
and
push
repz
cmp
sbbl
push
sbb
outsl
sbb
sub
pop
cmpsb
mov
shl
mov
insb
sbb
ja
mov
xchg
pop
pushf
and
outsb
mov
loope
mov
lret
inc
outsb
inc
pushf
sbb
push
push
inc
mov
movsb
mov
mov
cltd
sub
adc
jnp
inc
xor
fidivrs
insl
cmp
push
ja
das
xchg
insb
mov
out
cmp
adc
jmp
js
stc
inc
dec
hlt
in
pusha
test
xchg
push
pop
push
into
inc
test
mov
sub
sti
pop
sti
in
add
xchg
push
mov
rcrl
adc
dec
dec
adcl
xor
xor
adcb
sub
cmp
loopne
aad
xchg
sub
and
std
add
push
dec
pop
jo
jg
xchg
daa
fimull
insb
addr16
push
mov
cmpsb
sub
pusha
add
out
ljmp
push
ljmp
aad
ficomps
dec
push
pop
or
mov
xchg
push
fstps
xor
je
and
shrb
rol
sete
or
push
nop
sahf
cli
call
push
mov
inc
adc
mov
and
aad
dec
jno
cld
pop
lods
adc
sahf
lds
shlb
sub
outsl
jmp
and
aas
push
icebp
mov
push
or
lret
sub
jg
in
insl
cmp
scas
or
dec
jnp
aam
shll
fdivrp
jbe
scas
into
test
imulb
test
addr16
xlat
mov
xor
push
xlat
pop
arpl
or
jmp
cmpsb
jp
or
outsl
cwtl
int
andb
sti
fcoms
jns
sub
or
repnz
mov
and
sbb
fsub
add
shll
dec
cmovb
fmull
adc
push
jae
icebp
push
adc
ljmp
jae
icebp
arpl
mov
iret
cwtl
arpl
adc
jae
fisttpl
js
jno
adc
push
test
cld
lret
mov
add
mov
push
pop
dec
std
pop
loope
out
add
dec
push
cmp
xchg
es
cwtl
jae,pn
or
jle
push
orb
mov
out
pushf
lods
cmp
push
and
mov
cmp
enter
addr16
sahf
dec
lods
sub
stc
jbe
ret
movsb
ficoms
negl
shll
stos
adc
movl
dec
in
aaa
inc
lret
addr16
lret
xor
dec
mov
int
dec
cmp
add
jbe
xor
jns
lods
pop
sub
sti
fdivp
cli
popf
popa
orb
into
jnp
pop
ret
inc
push
add
jns
bound
adc
fimull
cli
and
popa
daa
fstpl
sub
dec
add
or
cmp
fdivrs
fstpt
addl
push
inc
cld
popa
pop
dec
fldl
sub
ret
push
cmp
xor
lods
mov
ja
add
jbe
imul
iret
lods
sub
push
mov
cld
cmp
push
test
mov
test
xchg
mov
add
insl
or
out
int3
rol
or
cltd
push
fnop
mov
adc
jnp
icebp
fstpt
cmp
daa
and
cmp
dec
in
cmpl
jae
dec
mov
movsl
rclb
adc
out
push
xchg
lret
jl
dec
pause
xchg
out
ds
hlt
les
addb
jb
sbb
adc
pop
arpl
mov
jecxz
ljmp
mov
xchg
mov
mov
jno
cwtl
mov
pop
test
rcr
jmp
cmpsb
mov
int
stos
orb
adc
mov
shlb
popa
jg
mov
pop
dec
popf
scas
mov
aad
jecxz
lods
mov
add
xchg
je
jmp
jno
mov
pop
mov
lahf
sbb
pop
mov
or
sub
mov
fsts
cmpsb
in
jbe
out
stos
and
out
cmp
xchg
test
addl
jecxz
stos
lods
call
push
ret
add
jne
sbb
push
jl
aad
cmp
js
imul
rclb
movl
jl
mov
cmpsb
popf
pop
test
push
jecxz
xor
jmp
mov
loopne
and
xchg
aaa
add
jo
sub
adc
shl
sub
or
or
outsb
push
jnp
mov
sub
pop
ret
pop
cmpsb
inc
and
add
lret
push
mov
add
iret
stc
mov
push
popf
dec
in
rorl
push
sub
adc
push
mov
sbb
mov
mov
xchg
push
scas
push
andb
out
mov
sub
clc
sbb
sti
xchg
rclb
cmc
pop
xchg
ret
cli
jmp
cmp
outsl
lods
mov
sbb
or
mov
popf
cltd
sbb
cmp
inc
pop
add
inc
std
add
mov
fisubrs
sahf
cmpsl
scas
inc
cmpsl
mov
xchg
mov
mov
and
shrl
pop
push
sahf
jne
dec
cwtl
mov
pusha
test
test
divl
pop
push
jbe
aad
dec
int
push
cmp
mov
sbb
stos
pusha
dec
push
inc
arpl
aaa
scas
sub
repnz
sub
inc
ds
mov
add
in
sub
add
dec
pushf
sub
xorb
ret
out
test
ja
shrl
push
dec
aas
xchg
into
gs
test
mov
fs
aaa
sub
scas
or
mov
and
sbb
sub
popa
shlb
or
sbb
xor
inc
clc
xchg
ljmp
aaa
mov
pop
in
pop
xor
mov
lock
inc
or
notb
ffree
data16
jne
push
shll
pop
divl
test
xchg
mov
jle
cltd
xchg
int
sub
lods
sbb
jle
pop
out
cltd
rcrl
push
mov
out
dec
xorl
cmp
mov
addb
jbe
aad
dec
pop
rcrl
sub
scas
sbb
fistl
nop
xor
bound
pop
xor
dec
aad
push
add
ror
sub
xchg
pop
xchg
enter
xor
mov
cmp
add
pop
pop
scas
mov
adc
rcrl
js
and
ds
pop
add
mov
lods
scas
pop
mov
cmp
inc
cmpsl
ljmp
lea
addr16
mov
xor
cltd
dec
fistpll
push
ret
es
mov
cwtl
sub
add
scas
jne
xchg
out
adc
pop
mov
mov
mov
sbb
xor
mov
sub
mov
mov
sub
inc
adc
push
out
std
inc
nop
stc
cmc
mov
mov
and
aam
push
add
push
into
jns
outsb
lods
lcall
add
es
mov
adc
test
sub
insl
inc
and
movsb
xchg
les
les
sbb
out
add
mov
cmc
or
cmp
dec
mov
call
xor
and
test
xor
faddl
adc
sub
lods
fbld
xchg
cmpsb
jns
lret
lret
jmp
or
inc
and
mov
fimull
add
test
sub
lahf
pop
pop
xchg
sahf
push
ss
cld
xchg
out
fdivp
aaa
sub
aaa
adc
mov
mov
cld
cmp
jmp
subl
popf
xchg
cmp
push
sub
jnp
fsubl
lahf
ljmp
and
or
mov
iret
sti
sub
std
push
push
sbb
dec
mov
mov
fimuls
and
scas
cmp
inc
jg
fildll
or
pop
mov
hlt
push
inc
inc
leave
jge
out
adc
sub
shll
jmp
mov
inc
mov
jns
imul
xchg
mov
add
dec
pushf
movsb
les
in
jnp
cmp
jns
xlat
push
je
inc
mov
addr16
or
cmp
mov
cmp
aas
sahf
rcr
sub
sti
repnz
push
cmc
insb
push
inc
repz
test
sti
dec
adc
sti
leave
add
lock
sub
dec
dec
or
cs
fs
js
jbe
cwtl
je
sbb
call
adc
and
out
adc
mov
push
sbb
clc
adc
pusha
fucomp
into
adc
mov
ret
repnz
adc
int
stos
mov
ja
mov
xor
iret
ja
loopne
inc
lahf
and
or
into
lds
jge
stc
dec
sbb
pop
arpl
das
pop
sub
and
test
jg
xlat
cmpsl
and
jg
addr16
leave
lret
testb
mov
jbe
leave
cmp
lds
sbbl
cltd
test
lahf
roll
pushf
dec
out
add
add
push
js
ret
lret
sub
idivb
jl
push
jge
mov
test
jnp
lahf
sub
mov
or
cmpsl
or
mov
divl
lods
sub
mov
cli
cltd
push
inc
mov
cmp
mov
mov
mov
fmuls
call
sub
fsubrl
sbb
or
jnp
adc
mov
lods
xor
ja
bound
pop
jp
pop
mov
arpl
cmp
cmc
imul
adc
mov
clc
xchg
mov
loop
imul
out
lcall
data16
add
arpl
dec
sbb
push
dec
into
sbb
dec
ficompl
cmp
in
xchg
test
scas
or
sti
leave
or
nop
inc
movsb
stos
inc
into
push
xchg
das
mov
jp
jae
jb
mov
push
out
dec
daa
lahf
out
adc
pop
xchg
jp
pop
les
fsub
mov
in
iret
xor
out
pop
jge
mov
loope
xchg
dec
push
into
sub
nop
adc
movsl
sbb
ret
jns
cs
orb
xor
push
imul
fidivl
leave
inc
insl
adc
rcr
jns
incb
lds
push
cli
jns
lret
inc
outsl
leave
dec
mov
mov
rolb
xchg
outsb
sub
mov
faddl
push
imulb
push
sti
jp
mov
aaa
inc
daa
sbb
pop
dec
sub
adc
in
push
inc
dec
out
iret
push
subb
jg
xchg
enter
jmp
call
into
and
js
call
fistpl
push
lahf
push
add
fidivs
mov
mov
fldcw
pop
lret
sub
xor
fs
shlb
in
mov
dec
leave
xchg
sub
pushf
pop
cmpsb
add
xor
sbb
mov
dec
pop
or
je
jno
pop
xor
or
cld
sub
inc
mov
sub
xor
imul
push
sbb
mov
inc
ss
sub
inc
and
call
push
scas
cld
dec
add
cmpsb
sub
sbbb
dec
jns
outsb
dec
jno
mov
jge
adc
je
ljmp
push
fbld
dec
or
adc
or
sub
in
je
jno
mov
out
xchg
jnp
iret
pusha
mov
mov
mull
fdivrs
add
mulb
mov
es
xchg
shl
test
sbb
push
in
test
repnz
cltd
test
push
call
loopne
inc
lcall
fisubl
or
adc
sti
insb
jg
adc
add
mov
pop
out
mov
inc
icebp
lock
pop
jnp
pop
test
sub
push
testb
inc
fucomi
mov
imul
mov
inc
cli
mov
or
mov
fnstenv
add
lahf
xor
push
es
sbb
aaa
cmp
sbb
subl
dec
lock
pop
addr16
scas
ds
nop
rcll
lods
cld
addr16
outsb
and
xchg
mov
in
jle
scas
or
xchg
je
or
fildll
mov
sub
mov
outsb
movsl
loop
mov
repnz
loope
out
xchg
mov
rcrl
shlb
and
jb
jno
bnd
rorl
cli
xor
dec
pushf
adc
enter
pushf
out
xchg
lea
sbb
test
mov
imul
mov
outsb
fsubrl
sub
movhps
cmc
push
test
sbb
xorl
push
push
dec
jno
fstpt
xchg
push
mov
leave
in
mov
leave
xor
shr
mov
je
pop
pop
jge
mov
sub
push
and
arpl
test
push
xchg
fisubs
aas
lods
shll
leave
pushf
xchg
jno
mov
mov
mov
mov
xchg
outsb
cmpsb
mov
fsubrs
adc
mov
inc
iret
cli
rcl
mov
and
mov
pop
je
or
in
jno
cmp
hlt
mov
sbb
out
xor
mov
les
xchg
test
mov
nop
pushf
lahf
pop
dec
or
sbb
sbb
dec
mov
lea
fwait
mov
test
push
stc
dec
push
repnz
cs
push
out
faddl
sub
in
adc
mov
sarl
stos
dec
imul
xor
cmp
outsb
out
dec
pusha
aad
test
xor
rol
testl
xchg
loop
inc
ja
mov
int
les
ljmp
in
adc
repnz
int3
or
jl
jge
cmc
jns
outsl
pop
popf
xchg
mov
bound
call
xor
and
or
push
popf
fldl2e
or
mov
lods
std
iret
pop
xchg
add
bound
sub
adc
xchg
sub
sarl
repnz
xchg
imul
dec
mov
pop
sbb
cli
imul
movsl
mov
outsl
js
inc
pop
jbe
mov
shrl
icebp
or
fidivrs
lcall
ret
insb
fsts
adc
icebp
fdiv
mov
dec
xchg
jmp
adc
push
movsl
outsl
lock
pop
je
mov
mov
add
push
pop
dec
xchg
cmpsb
inc
or
inc
in
push
inc
adc
stc
mov
int
jne
xor
xor
cmpsb
mov
dec
pushf
stc
add
xchg
sti
lahf
lock
or
mov
xchg
fwait
mov
inc
pop
add
cli
xchg
add
hlt
cmovle
fs
ljmp
jmp
js
cmp
sbbb
mov
adc
cmp
jmp
push
jecxz
test
orl
dec
lds
lods
and
xor
scas
mov
cmpsb
inc
push
adc
add
push
pop
enter
das
in
mov
inc
or
push
jg
mov
pop
xchg
lret
cmpsl
shrl
js
mov
pop
dec
in
outsb
mov
leave
das
pop
push
adc
bound
xchg
dec
jno
lahf
mov
mov
pop
inc
sub
nop
xlat
bound
iret
test
push
leave
jecxz
mov
sbbb
jnp
adc
mov
ja
stos
pop
repnz
xchg
xchg
xlat
pop
int3
movsl
sbbl
ret
test
sbb
insl
aaa
pop
xchg
divl
lcall
dec
push
pop
inc
insb
pop
mov
xor
cmp
mov
iret
xchg
repz
mov
pop
icebp
mov
jl
pop
dec
outsb
pop
or
call
cmp
cmc
mov
stos
ljmp
cltd
movsl
fmull
ret
decb
mov
ljmp
orb
add
daa
mov
popa
cmp
test
fdivr
push
push
push
cmpsl
int
and
add
mov
inc
xor
adc
std
adc
pop
jmp
dec
ljmp
sbb
lret
gs
aam
mov
mov
add
testb
sysenter
xchg
sbb
test
or
and
pop
push
loope
mov
xchg
mov
lds
bound
inc
lock
mov
nop
sets
out
jne
sub
or
fwait
enter
push
insb
mov
dec
or
xchg
dec
mov
mov
lods
dec
sbbb
and
inc
lds
shrb
lea
add
add
pop
jo
push
inc
daa
gs
xor
js
rorl
xchg
dec
sbb
aas
jle
inc
pusha
lods
in
pop
ss
in
push
ljmp
icebp
xchg
mov
cmp
sbb
insl
push
xor
stos
je
pop
cmpsl
mov
lcall
or
xor
fsub
ja
sbb
mov
std
pop
in
ja
popa
push
fildl
cs
or
mov
sahf
or
nop
imul
cmc
mov
insl
jg
sub
dec
call
stos
int3
xchg
incl
or
jmp
cli
aaa
dec
xor
and
inc
ds
jge
lods
cmp
cmp
pop
incb
iret
sbb
pop
fs
inc
push
popf
cmpb
push
xor
pop
xlat
add
pop
push
popl
mov
and
test
dec
aaa
rorl
add
mov
sahf
or
daa
les
pusha
fadd
cmpsb
cmpb
xor
jno
scas
add
ror
test
xlat
adc
jo
or
adcb
scas
mov
jmp
into
jnp
ret
out
inc
outsl
test
add
mov
pop
jmp
repz
sub
mov
ss
iret
dec
sahf
sbb
int
arpl
xor
subl
jo
data16
fisttps
call
dec
pop
sbb
addr16
ja
or
ret
in
popf
insb
fs
insb
dec
stos
sarl
rolb
push
mov
lds
jmp
inc
aaa
dec
push
and
xchg
add
dec
popf
pusha
add
testl
popf
inc
repnz
mov
cmc
sbb
fs
inc
ret
outsl
push
mov
cltd
nop
call
inc
xchg
ret
cmpsl
pop
xlat
sahf
mov
inc
fs
imul
bound
sbb
sahf
dec
xlat
daa
stos
cmp
shl
daa
fdivl
jns
ja
out
mov
dec
dec
push
lret
jge
testb
xchg
sbb
adc
cld
dec
mov
jmp
jle
mov
jne
pop
pusha
jno
jbe
xor
or
or
push
jnp
xchg
push
pusha
xchg
cmp
sub
js
xchg
addl
call
cmp
mov
mov
push
movsl
jb
mov
dec
in
mov
cmp
repz
mov
aas
es
jle
sub
movsb
stc
testl
ficompl
sub
xor
popa
mov
inc
sub
push
ja
iret
mov
fucomp
sbb
ljmp
sbb
add
push
jecxz
mov
adc
dec
adc
jl
cmp
or
sti
movsl
fistpll
daa
push
jl
jmp
push
aaa
jne
stc
fnstenv
adc
addr16
adc
cmp
mov
movsl
mov
ss
rol
xchg
xlat
jno
negl
sub
in
addl
stc
jge
add
push
lods
xchg
rcrl
sahf
lock
lahf
jge
pop
je
mov
xchg
sub
mov
mov
cld
mov
mov
hlt
jb
sbb
sbb
addb
jb,pt
popf
jecxz
clc
dec
sbb
outsl
push
les
jp
xchg
adc
or
out
les
hlt
in
add
jg
pusha
xchg
lahf
fnstsw
inc
sti
xor
inc
ljmp
inc
mov
int
ficoml
jecxz
pop
hlt
xor
cld
mov
sub
jmp
out
dec
add
jb
ljmp
jmp
push
clc
aam
add
mov
and
std
push
lahf
sbb
xchg
scas
bound
mov
push
lock
xor
xchg
jns
cwtl
pop
popf
sbb
mov
in
imul
push
orb
int3
inc
jmp
lods
in
mov
test
aas
and
enter
aaa
inc
out
adc
sub
and
jmp
push
mov
fimuls
nopl
fldenv
roll
inc
xchg
sub
xlat
outsb
pushl
out
jp
xchg
mov
imul
dec
mov
mov
inc
jne
lahf
jbe
inc
add
jge
pop
repz
cmp
xor
jg
in
sub
out
cmpsb
jbe
sbb
xorb
fs
jecxz
and
push
or
bound
cmpl
sub
and
ret
and
pop
jae
xchg
push
repnz
push
mov
test
fildl
pop
cmpsb
mov
or
pop
aam
mov
jle
mov
aas
lods
in
jo
popf
push
add
sub
adc
movsl
test
test
int3
fld
movsb
repz
fisubrs
sub
inc
addr16
and
shlb
ss
outsl
out
cmp
pop
cltd
pop
push
pop
fisttpll
xor
fisubrl
sub
cmp
hlt
rol
or
push
int3
push
ja
sbb
inc
fsubrs
lods
not
jo
aas
mov
dec
push
movsl
dec
and
loop
mov
sub
lahf
mov
enter
adc
and
jmp
das
and
pop
lahf
push
sub
jae
scas
ss
loopne
stos
out
jle
test
sub
adc
dec
shrl
add
sub
add
fbld
mov
leave
sub
adc
stc
or
push
xor
in
sahf
daa
fwait
pop
pop
inc
inc
push
jne
mov
xor
push
ds
stos
mov
inc
movsb
test
int3
adc
jo
xor
in
ffree
push
sbb
inc
push
cmp
int3
mov
ljmp
daa
hlt
jmp
frstor
xchg
and
xor
jl
mov
push
mov
enter
es
repz
or
xchg
fstpl
into
add
cmp
nop
cmp
leave
xlat
hlt
mov
nop
or
cmp
sub
pop
nop
add
mov
mov
movsb
outsb
std
cld
repnz
repz
and
adc
mov
lods
push
xchg
inc
jle
xchg
std
push
in
movsb
and
push
call
sbb
dec
out
pop
fbstp
push
jns
inc
sahf
pop
in
mov
aad
adc
int3
add
in
int
sbb
ss
inc
sbb
out
and
fwait
mov
pop
pop
sbb
sub
pop
fs
mov
pop
jbe
jae
in
pop
mov
mov
mov
xchg
dec
jmp
and
adc
mov
pop
test
mov
insl
scas
sbb
jmp
sub
ret
ficomps
fstl
leave
sti
sti
cltd
or
sbb
mov
std
inc
mov
lock
adc
xor
ja
mov
xchg
insb
xor
lea
mov
mov
ss
cmp
arpl
mov
push
jo
push
and
pop
push
sub
aad
jae
or
pop
jae
push
je
jg
imul
sti
cmp
mov
jge
sub
in
mov
jno
dec
mov
sahf
xchg
movsl
test
sbb
fcoml
aas
int
mov
loopne
in
xor
jno,pt
rcrb
or
in
mov
fs
pop
mov
add
and
inc
jl
xchg
sahf
test
or
out
dec
insl
aam
lods
paddd
adc
das
inc
lds
and
and
int
push
das
aas
lock
stos
call
push
nop
xor
lods
test
jle
push
mov
pop
sarl
and
fs
mov
divb
jbe
xorl
sbb
jl
xchg
cmp
xchg
sub
jge
adc
add
pop
inc
sti
movsb
push
movsb
int3
scas
jnp
imul
inc
stos
xor
lock
ret
ljmp
rol
clc
scas
jg
xor
cmp
or
es
call
add
mov
push
inc
lahf
pop
shl
pop
xchg
inc
lahf
push
or
mov
push
mov
fnstsw
mov
repnz
add
dec
dec
push
rcrb
int
mov
lret
aad
jp
pusha
or
cs
enter
hlt
sti
mov
cmpsl
xchg
incb
jno
xchg
cmpsb
arpl
jge
push
adc
adc
lret
pop
movsb
inc
dec
out
xchg
xchg
sub
mov
xchg
pop
loope
inc
and
cld
cld
and
mov
movsb
add
jns
push
cs
imul
out
ret
adc
fdivr
dec
cli
pop
mov
fwait
stos
pop
fsubrl
inc
push
test
imull
sub
out
addb
std
idivb
pop
push
fnstsw
xor
jmp
jecxz
sbb
sub
add
add
jg
dec
fsubl
int
inc
add
fisubl
xor
mov
xchg
dec
cld
in
pop
in
inc
rclb
mov
ja
xchg
push
stos
sub
lcall
mov
out
adc
inc
xchg
addb
xchg
jno
shrl
pop
jb
hlt
sahf
cmp
call
push
mov
sar
pop
call
mov
lret
mov
out
jne
cld
push
fidivrl
lcall
pop
cltd
fxtract
out
add
fwait
sbb
or
mov
jb
call
mov
cmp
xchg
faddp
ds
cmpsb
das
or
inc
lods
stos
fwait
imul
clc
xchg
fdivs
stos
or
xchg
pop
add
and
inc
sarb
ret
xchg
aas
add
out
mov
std
dec
mov
push
mov
nop
movsb
dec
sbb
cmp
mov
mov
push
cs
sbb
mov
orl
jne
jmp
lods
pop
arpl
leavew
xchg
and
cltd
out
mov
out
fsub
lods
push
and
xor
sar
mov
pop
pop
ss
jae
into
add
add
ficompl
pop
fs
das
das
cmp
lahf
subl
push
notl
pop
in
enter
cmp
add
pop
mov
dec
in
push
mov
and
push
sahf
pop
inc
pop
mov
adc
xchg
das
movsb
jns
cmp
movb
dec
ds
stos
add
imul
icebp
push
and
ret
enter
jae
into
leave
jecxz
dec
pop
xchg
test
stos
jge
inc
xor
aad
outsl
jbe
adc
sub
nop
daa
sub
jae
inc
push
pop
pop
cmp
std
test
or
lret
scas
push
xlat
test
ret
ss
mov
inc
xor
jle
push
xor
pusha
xorl
mov
push
jge
repz
testl
int3
outsl
gs
aam
mov
jb
dec
mov
stos
jo
inc
or
cltd
cli
mov
into
fcmovu
cmpsb
fcompl
in
aaa
leave
outsb
push
sbb
mov
pop
sub
clc
cmp
insl
enter
repz
and
ljmp
stos
push
or
lock
test
cmpsb
xor
adc
les
les
add
and
repz
inc
pop
cmp
rcl
stos
xor
punpckhdq
xbegin
jnp
insb
shl
je
sti
xor
scas
lods
mov
js
aad
sarl
cmp
sbb
cmpsl
lea
push
dec
sbb
pop
inc
add
jp
jl
inc
fadd
enter
cmp
ss
fs
ret
xor
jns
adc
ljmp
fcmovnbe
test
in
fdivrs
aam
xchg
xchg
cltd
idiv
andl
es
jo
jbe
sbb
cwtl
sub
inc
mov
add
cmp
mov
hlt
pop
adc
jl
aam
or
movsl
pop
jg
das
and
mov
add
test
aam
in
ret
into
lods
mov
push
in
xchg
ds
mov
jb
fiadds
jmp
pop
add
cmp
repz
dec
push
es
loopne
int3
pushf
fcmovnbe
xorl
fnstsw
cmp
hlt
xchg
insl
out
bound
lods
movsb
push
insl
sbb
sbb
das
jbe
fs
dec
mov
hlt
adc
xlat
icebp
into
pop
or
mov
repz
test
inc
cld
jecxz
ja
nop
testl
and
lahf
incb
xchg
inc
mov
popl
insb
pop
dec
sbb
cmp
out
imul
xchg
arpl
dec
push
cld
adc
ljmp
mov
jnp
adc
fisubs
mov
sbb
jl
add
clc
iret
lock
shrl
orb
inc
lahf
mov
dec
insb
xor
in
jae
cmp
add
rorl
or
or
mov
xchg
loop
mov
adc
test
mov
pop
fs
or
stos
stc
mov
rcrb
push
ret
xlat
pushl
xlat
adc
repz
fldenv
lcall
stos
out
fldln2
xor
int3
sahf
dec
frstor
enter
push
jl
mov
xchg
in
xchg
mov
stos
cld
sbb
mov
adc
xlat
inc
out
mov
mov
inc
nop
jno
outsb
inc
std
mov
cmp
adc
mov
add
inc
ja
ret
mov
cwtl
imul
dec
cwtl
or
loop
adc
jo
in
inc
cmp
or
and
lods
xchg
ss
fstl
or
ret
ja
scas
pop
sahf
sbb
xchg
xor
pushf
dec
jge
leave
xor
add
xor
push
adc
sbb
lock
lcall
jge
and
fcom
mov
inc
jp
mov
iret
shrl
insb
adc
rcrb
inc
lea
call
sahf
hlt
shll
push
cvttps2pi
sub
sarl
jp
pop
out
mov
pop
pop
jno
repz
or
mov
ds
jne
xor
pop
js
cltd
pop
pop
je
int
lahf
xor
arpl
mov
mov
mov
fwait
adc
sub
hlt
icebp
pop
bound
decl
mov
in
stos
push
mov
scas
cmp
fs
jbe
dec
pop
cmc
adc
mov
je
cmp
fildll
aas
jge
add
in
and
lahf
jno
sbb
movsb
paddq
sub
mov
scas
pop
sbb
mov
xlat
aam
dec
call
mov
sbb
outsb
fistl
fisttpll
cmp
fs
inc
fistpl
mov
leave
gs
leave
or
mov
insb
out
inc
inc
fnstcw
sbb
sbb
movsl
negl
in
stc
sbb
sarl
aad
fwait
ret
xor
push
mov
lock
out
lock
scas
incl
cmp
or
or
mov
mov
pop
sar
add
ljmp
fidivs
dec
inc
add
pushf
in
lods
pusha
sbb
add
aad
push
cltd
stos
dec
jg
in
dec
pop
jb
sbb
jmp
jmp
aam
cld
test
push
stos
pop
sub
pop
and
sti
sub
cmpsb
inc
shll
hlt
movd
subl
in
jae
test
test
and
inc
jbe
lahf
clc
daa
pusha
sbb
sub
mov
jbe
cmp
divl
pop
stc
sbb
dec
jle
out
jecxz
outsl
pop
mov
jb
add
loop
je
popl
fcmovu
es
sub
xchg
dec
dec
jns
jmp
sub
cmp
push
adc
daa
xor
cltd
push
repz
imul
inc
pusha
jge
pop
fnstcw
cmp
ret
movsl
imul
mov
shll
cmp
adc
sub
std
inc
pop
roll
jns
push
mov
scas
imul
daa
push
inc
aad
pop
repnz
rcrl
jb,pn
es
mov
cmpsl
mov
pop
nop
mov
push
lods
iret
sbb
ds
mov
js
jle
mov
push
mov
push
pop
and
out
nop
cld
dec
testl
add
enter
icebp
es
sbb
imul
xchg
in
les
and
dec
push
mov
sub
cmp
cmp
rol
in
stc
xor
mov
cli
popa
sahf
xchg
cwtl
ret
sbb
sbb
xor
sbb
dec
ljmp
push
xchg
push
popl
pop
cli
jne
adc
inc
aad
add
add
jl
dec
pop
test
pop
mov
push
mov
fmul
jge
cmp
js
or
mov
cmp
jl
xchg
outsl
xchg
or
jp
sti
lcall
xchg
sahf
and
push
or
jnp
sbb
and
pop
mov
aam
xor
sub
arpl
cmp
fists
fistps
outsb
ljmp
jecxz
call
jl
popf
push
clc
jp
fld
cmp
jg
imul
imulb
pop
je
and
pop
add
xchg
adc
scas
filds
cmpl
push
pop
jo
shrl
mov
xlat
lea
in
pop
mov
rclb
cmc
xchg
push
cmp
cmp
dec
hlt
std
test
dec
dec
lock
imul
fs
mov
mov
adc
out
addb
lock
scas
aad
jge
inc
std
cmp
shll
test
loop
sub
in
xchg
arpl
xchg
stc
push
arpl
cmpsl
outsb
idiv
xor
cmp
adc
addr16
cmp
push
push
fs
aad
test
push
xchg
mov
mov
jne
sub
lea
lahf
in
push
mov
shll
push
ja
ret
jns
lahf
pop
xor
fcmovne
mov
or
and
into
out
bound
inc
movb
imul
mov
mov
add
dec
cmp
ds
out
gs
push
imul
lret
or
out
arpl
fwait
aas
cltd
out
jle
xor
sbb
pop
out
push
push
xor
mov
and
cmp
lods
dec
pop
icebp
repnz
fbstp
out
push
cmp
inc
outsb
mov
jmp
xchg
mov
push
sbb
inc
bound
xchg
fwait
mov
mov
cmp
mov
out
ja
dec
sub
ret
or
bnd
jl
ret
aaa
mov
rclb
rorl
fidivrl
jmp
repz
repnz
jbe
xchg
clc
insb
jle
enter
add
sbb
rorb
mov
insb
mov
adc
cltd
pinsrw
aam
cmp
inc
xchg
cmp
add
in
pop
scas
dec
mov
dec
or
repnz
cltd
push
push
call
dec
outsb
outsb
stos
jb
insl
mov
iret
jbe
iret
mov
sti
push
cmp
xor
jmp
mov
cmp
cmp
dec
xchg
shll
add
out
cmc
jecxz
jge
dec
sbb
movsb
inc
push
fidivs
mov
ret
mov
xchg
xchg
fimuls
jb
push
lods
pop
sub
inc
inc
sbb
movsl
xor
dec
inc
xorl
sahf
dec
pop
pusha
mov
mov
mov
insl
xchg
xor
and
aaa
mov
xor
mov
icebp
xchg
pop
pop
xchg
sub
je
outsb
pop
push
jae
in
rcll
mov
push
adc
div
scas
jbe,pt
mov
std
inc
jg
arpl
sbb
xchg
lds
push
pop
xchg
pop
sbb
lcall
mov
xchg
lods
imul
addb
mov
loopne
xor
push
push
or
sti
test
add
push
fxch
dec
test
imul
pop
xchg
sub
xor
cmp
push
inc
popa
xchg
sub
lods
out
push
out
dec
and
fnsave
sub
add
bound
jae
clc
push
sub
mov
and
mov
xchg
decl
sti
xchg
adc
in
loop
add
aas
jae
add
enter
adc
inc
adc
cli
pop
push
xchg
jbe
testl
mov
push
dec
xor
ficompl
and
mov
push
mov
mov
dec
jb
adc
xor
and
out
in
lods
mov
mov
push
or
sti
jno
fwait
test
pop
test
sub
xchg
rorb
jbe
test
mov
pop
aad
in
out
mov
or
lret
jne
inc
jb
push
or
and
push
movsl
cmpsl
arpl
icebp
mov
pop
and
bound
out
nop
or
inc
imul
or
sbb
jge
pop
test
push
test
sbb
ret
es
xor
xchg
adc
jb
daa
cmc
xor
test
cltd
pop
int
mov
imul
or
pop
xor
lock
test
dec
lea
lcall
popa
push
stos
or
xor
mov
jmp
fidivs
pushf
cmpsb
enter
clc
cld
adc
and
and
push
or
mov
and
and
lea
dec
cmp
mov
dec
and
gs
dec
sbb
sbb
lahf
push
and
rcrl
xchg
jl
leave
bound
cmp
data16
or
mov
hlt
scas
xlat
popf
fistpl
and
xor
dec
ucomiss
lods
mov
lea
jmp
adc
lea
jecxz
frstor
std
pop
repz
dec
xchg
inc
repnz
aaa
aas
mov
push
push
inc
jle
fidivl
inc
pop
adc
mov
outsl
cli
mov
fs
scas
jl
xchg
scas
lahf
nop
fucomi
call
adc
repz
imul
sbb
loope
mov
sub
shrb
mov
adc
sbb
cmp
add
mov
pop
out
push
mov
xchg
cmc
das
cmpsl
das
loope,pn
sub
sbb
out
dec
cwtl
jno
orb
mov
jo
mov
cmp
imul
jae
dec
sub
or
mov
pusha
pop
leave
adc
out
add
aad
sub
aas
jl
cmp
loop
out
mov
push
push
andl
test
shrl
sbb
jb
nop
rorl
cmp
adc
cmp
iret
pop
test
insl
pop
movl
or
int3
in
std
fsub
repnz
add
ljmp
fisttpll
pop
repnz
mov
ss
and
jle
pop
push
mov
aad
push
jbe
movsl
fiaddl
jge,pn
inc
lods
mov
mov
cmpsl
adc
inc
add
mov
cmc
mov
aam
lea
jae
imul
pushf
xorl
xchg
mov
mov
lahf
cmc
test
scas
mov
pop
je
das
dec
mov
pop
int
lods
mov
enter
sub
mov
lods
jno
fldl
push
push
arpl
pusha
out
sahf
jmp
push
inc
pop
cmp
add
arpl
mov
adc
insl
lods
aaa
cwtl
sti
or
or
cmpsb
inc
lods
sbb
xor
imul
adc
in
jp
lds
call
lret
lret
push
xor
mov
in
and
std
mov
pop
andl
mov
add
xchg
movsb
rsqrtps
jg
mov
push
popl
mov
inc
jmp
xchg
sbb
jmp
pop
cmpl
mov
scas
add
and
into
push
lea
add
cmp
cmp
pop
mov
or
filds
mov
daa
aaa
lods
int3
xchg
cmp
push
loopne
notb
test
pop
sub
int3
lret
push
xchg
shrl
imul
mov
hlt
mov
sub
adc
jne
call
das
jp
in
xor
shl
sbb
push
rorl
pop
lock
jno
adc
mov
inc
jle
out
dec
push
pextrw
adc
fwait
loopne
xchg
cmpsb
je
push
fistps
xchg
adc
lods
clc
fwait
mov
loopne
mov
xlat
pop
pop
sub
in
sub
enter
sahf
imull
push
jno
negb
mov
mov
sub
test
les
in
sbb
in
xchg
cmpsb
pushf
int3
loope
data16
shlb
xchg
iret
pop
mov
pop
push
or
push
dec
jg
ds
in
add
push
call
mov
jmp
jl
mov
lret
mov
xor
lret
add
fisubrs
test
addr16
push
add
cmp
jge
or
out
insb
mov
popa
lcall
mov
mov
sub
les
dec
xchg
jmp
push
dec
xchg
scas
xchg
cli
sbb
jb
pop
addl
adc
mov
adc
cmc
call
pop
dec
sbb
ret
xchg
cli
lods
into
ja
aam
push
dec
mov
scas
or
xchg
jbe
loope
jno
pop
rclb
lcall
leave
mov
loope
fwait
cwtl
aas
mov
mov
pop
xchg
test
or
or
sarl
bnd
clc
dec
cmpl
hlt
xor
add
pop
xchg
xchg
and
mov
mov
stos
mov
push
test
in
cwtl
nop
add
mov
inc
cmpsb
scas
mov
dec
mov
jl
test
test
sbb
sbb
xchg
in
jmp
and
jge
popa
inc
mov
adc
sub
in
dec
push
adc
sub
sub
inc
xor
pop
mov
jg
mov
and
repnz
and
aad
aad
inc
fdivr
jmp
xchg
in
lret
and
cmp
out
lods
rcll
sbb
jmp
jno
lret
pop
push
push
xlat
popf
lahf
or
mov
stos
cmpsl
cli
and
mov
jecxz
push
push
movsb
mov
ja
dec
pusha
ret
xchg
cmc
inc
cmp
mov
pusha
sbb
das
inc
fwait
pop
lods
sarb
add
test
rorb
and
test
divl
js
ds
dec
cwtl
push
jnp
dec
pop
cmp
imul
cld
cmp
ljmp
inc
loop
push
ret
push
addr16
cmpsl
fcompl
push
inc
jmp
sar
fstpl
lret
daa
jae
lcall
pushf
mov
inc
sbb
pop
out
adc
push
push
xchg
in
inc
mov
clc
shl
jmp
scas
mov
jbe
pop
test
adc
add
aad
xor
ljmp
rcll
mov
add
sub
xchg
mov
insl
mov
lea
mov
vandnps
adc
xor
push
mov
jecxz
imul
xor
and
cmp
mov
scas
sub
mov
jmp
lret
pop
lahf
iret
imul
mov
aas
push
frstor
ja
std
cmp
test
jo
mov
icebp
lea
andb
addb
xor
ja
lcall
out
mov
mov
adc
jle
mov
cmp
popa
imul
movsl
xchg
sbb
xchg
push
xchg
insl
aad
push
int
or
lea
xor
scas
dec
lods
jg
in
sub
ret
jmp
xor
xorb
inc
adc
or
insb
scas
leave
push
enter
push
rol
cmpsb
inc
std
fildl
lret
adc
cwtl
test
lods
jl
loopne
cmpsb
insb
dec
dec
inc
ja
mov
push
sbb
push
dec
cli
scas
es
push
lcall
jbe
cmp
arpl
sub
shrl
addr16
int
fldenv
push
arpl
stos
cmp
mov
add
xchg
shl
and
adc
add
out
daa
inc
push
mov
xchg
sub
clc
mov
mov
add
sub
int3
test
sub
shlb
movsl
pop
or
jecxz
mov
sub
je
cmpsb
lds
cmpsb
stc
lea
jecxz
sahf
cld
sub
jae,pt
sti
enter
sub
xor
fcmove
add
scas
pop
scas
cmp
data16
movsb
inc
rcl
sbb
divl
mov
mov
push
cmp
mov
mov
lock
test
jp
lds
in
daa
stos
mov
xchg
push
pop
fidivl
cwtl
mov
sbb
pop
data16
insl
pop
icebp
push
int3
addr16
dec
aas
xlat
jno
loop
mov
daa
daa
inc
cmp
out
pop
and
test
push
out
pmulhuw
xor
cmp
xchg
negb
pop
fidivl
and
aaa
inc
das
mov
fwait
scas
cwtl
mov
jmp
push
movl
cmpsl
cmp
loopne
repnz
adc
push
sub
clc
jno
cmp
outsl
xor
popf
jge
inc
push
inc
add
cmp
lcall
push
in
stc
addl
outsl
das
and
movsb
jb
push
mov
mov
jmp
push
imul
es
std
data16
and
scas
inc
or
out
dec
sbb
jns
push
jno
lods
sub
mov
jo
in
adc
cld
push
push
movsb
lcall
fidivrl
ljmp
test
cmp
cli
push
dec
cmp
cmp
stos
jg
pop
jno,pt
sbb
bound
mov
pusha
cmp
sub
into
mov
cmp
outsb
cmpsb
dec
jae
cmp
sub
jge
pop
mov
clc
adc
ljmp
mul
int3
insl
fnstcw
add
int
clc
inc
les
push
mov
cmp
dec
sbb
add
dec
sub
iret
insb
enterw
mov
jge
test
mov
rol
int3
dec
mov
pop
leave
insl
daa
xor
pop
pop
adc
mov
sahf
xor
fnstsw
repz
mov
mov
mov
shl
test
jnp
scas
push
push
shll
push
or
adc
clc
ficoms
fistl
fwait
cltd
cmpsb
in
stc
fsubl
inc
ret
sbb
mov
adc
sbb
bound
adc
repnz
fs
dec
mov
pop
or
iret
xor
mov
xchg
or
imul
inc
sbb
sub
xchg
test
pushl
and
push
or
dec
xchg
outsl
movsb
adc
lcall
mov
insl
jp
pop
push
rorl
bswap
sbb
je
int3
push
mov
mov
xchg
pop
push
loopne
or
shr
cmpsb
cmp
add
fimull
mov
sbb
lods
in
push
jae
lods
addr16
fldcw
lret
sahf
adc
loopne
cwtl
mov
enter
andb
push
aam
cmp
jmp
sbb
mov
lcall
je
call
sbb
pop
pop
sbb
adc
pop
add
and
xor
test
sbb
push
adc
and
jle
std
fdivrs
sbb
dec
scas
pop
sub
xchg
popa
pop
fcmovne
shlb
and
aad
bound
mov
and
ret
das
cltd
xchg
xchg
test
mov
jp
mov
mov
loop
pop
daa
enter
mov
movsl
xchg
lods
out
lcall
lds
pop
sub
add
aaa
clc
mov
add
inc
and
adc
enter
or
push
enter
xor
movsl
or
cmp
xchg
sub
mov
outsl
sub
dec
add
addl
sub
popa
and
add
popa
es
sbb
add
dec
and
sub
jle
cmp
cmp
roll
and
sahf
mov
incl
cwtl
xchg
or
iret
sbb
aas
inc
jno
push
rorb
mov
cmp
fwait
das
and
aam
mov
sahf
mov
pop
inc
fnstcw
fists
push
jbe
mov
mov
mov
rcll
mov
bnd
lods
enter
inc
push
std
adc
dec
inc
pop
jno
inc
fisubrl
sub
mov
mov
cmpsl
dec
mov
call
test
add
out
bswap
fbld
xor
inc
sti
ss
or
lret
test
sarl
mov
fnsave
mov
ret
xchg
in
mov
repnz
mov
dec
dec
xor
aaa
loope
cmpsl
mov
ret
add
int
test
in
xchg
pop
scas
movsb
sub
fs
adc
adc
jmp
pop
scas
lods
cmp
mov
cmpsb
jae
inc
je
loopne
cmp
mov
and
jns
adc
sub
jle
adc
decl
push
cmp
hlt
sbb
sbbb
aad
sar
lahf
outsb
aas
stc
data16
sub
mov
adc
push
sti
or
orl
popa
push
out
mov
in
leave
ficoml
add
rorb
lcall
decb
fwait
cmp
fs
mov
mov
mov
push
cltd
inc
dec
add
loope
jnp
ljmp
xchg
leave
sbb
es
lret
lahf
lods
jp
mov
loop
adcl
jno
ja
movsl
ret
and
push
cmc
pop
rcrl
push
ret
jp
shlb
cmp
imul
inc
lret
into
pop
and
pop
jns
mov
cltd
mov
cmp
scas
pop
jns
ret
inc
aad
lret
leave
lret
fnstenv
mov
sub
mov
xchg
xlat
shlb
adc
in
fucomp
das
push
cmpsb
or
inc
adc
xchg
arpl
fdiv
movsb
aas
cmpb
or
out
and
inc
adc
mov
test
or
adc
pop
nop
push
movsb
movl
in
jbe
sbb
jp
loopne
mov
cld
ds
pushl
push
scas
test
jle
scas
in
lret
or
inc
add
sub
inc
inc
or
xchg
and
jg
add
mov
out
mov
inc
xlat
push
mov
repnz
ret
cmp
sbb
es
pushf
xchg
cmp
int
cli
cs
les
dec
mov
adcb
sahf
cli
pop
rorl
int3
pop
inc
mov
sbb
dec
lret
mov
lea
in
mov
call
or
loope
jge
and
pop
call
out
or
addb
jns
notl
pusha
test
test
push
inc
sub
cs
mov
icebp
push
jb
iret
fwait
rcl
lea
jecxz
fisubrs
ss
inc
push
dec
mov
sbb
data16
shlb
stos
xor
jp
jb
dec
cmpsl
inc
pushf
rcrb
sub
sbb
repz
ja
push
xchg
rolb
push
xor
leave
in
adc
movsl
pop
shrb
mov
pop
test
sub
mov
jae
add
bound
cmc
iret
pushf
mov
jg
add
adc
psubq
and
lods
insb
cmpsl
mov
ja
mov
lds
hlt
pop
push
cmp
cmp
test
cmp
pop
inc
xchg
in
in
outsb
add
cmp
pop
adc
xchg
cmp
inc
stc
bound
lea
cmpsl
fdiv
hlt
mov
mov
mov
cld
and
shrl
mov
aam
jecxz
lods
insb
sbb
mov
cmp
ja
jae
nop
mov
sarl
mov
cltd
dec
inc
test
or
into
xor
addr16
cli
aas
xchg
xchg
sahf
lds
or
ds
xlat
mov
cmpsl
mov
inc
mov
cmp
fldenv
call
jmp
cli
icebp
jns
add
addb
and
bound
and
aam
dec
sbb
rorb
push
out
jbe
hlt
fbstp
mov
outsb
mov
lods
cmp
addl
cwtl
clts
add
add
fsts
stos
in
pop
fisttpl
cmp
push
xchg
or
push
stc
cmp
int3
int3
imul
leave
pop
out
lds
add
and
inc
cmpl
and
cld
scas
mov
inc
xchg
dec
dec
psubq
arpl
setns
add
jns
add
into
int3
fstpl
dec
test
pop
fisttpl
inc
mov
insl
orl
pop
push
pop
and
push
xchg
xor
pop
mov
sub
pcmpeqb
sbb
xor
jns
sbb
lret
fiadds
dec
mov
cmc
jns
cmp
mov
loope
mov
lea
pop
mov
jns
inc
js
cmp
and
jb
aaa
lret
pop
in
flds
lea
aas
pop
dec
sahf
stos
adcl
data16
sbb
sti
lcall
pop
and
addr16
sar
push
mov
inc
jmp
cmp
imul
sbb
test
cwtl
stos
dec
lcall
adc
loop
lret
lea
jae
cmp
jo
scas
inc
sarb
mov
cmc
and
sbb
imul
cmp
insl
in
ds
sub
mov
or
ret
jmp
xorl
add
orb
inc
sti
stos
adc
push
cwtl
or
adc
push
sbb
inc
or
enter
mov
jno
mov
sbb
inc
popa
mov
xor
test
or
xchg
mov
jno
push
mov
jmp
popa
mov
sub
loopne
or
fisttpl
das
stos
lret
sbb
inc
out
mov
xor
xor
adc
jb
dec
jnp
cmp
mov
cmp
push
cltd
lds
xor
mov
in
ficoml
popa
push
xor
loope
dec
pop
cmc
in
xchg
in
das
das
stos
or
mov
fdivrl
imul
cltd
dec
mov
mov
jns
into
dec
mov
test
loop
das
gs
cld
pop
iret
lods
dec
les
ss
ss
mov
pop
mov
and
sbb
stc
cmpsl
sub
nop
ret
inc
mov
sti
add
ds
ret
fldt
lahf
and
and
repz
aam
adc
shll
int
outsl
sub
pop
or
mov
cli
jne
sub
fildl
not
adc
loopne
inc
mov
and
xchg
add
ds
cwtl
sub
iret
in
in
add
mov
inc
xchg
xchg
pop
adc
adc
mov
pop
nop
ja
adc
int3
push
clc
cmc
ss
cmp
inc
imul
mov
sti
in
addb
cs
cmc
xor
aas
std
lea
mov
mov
mov
pop
adc
and
cmp
add
dec
xchg
lcall
mov
icebp
ret
add
in
mov
inc
sub
xlat
aam
dec
ret
xor
sbb
push
test
pop
sub
push
loope
mov
dec
ret
stos
cli
mov
fnsave
sbb
in
adc
fstl
int3
or
xchg
xchg
push
adc
add
mov
rclb
call
adcb
sbbb
and
rol
xchg
sub
clc
cld
and
outsl
lcall
pop
mov
or
pop
adc
outsb
lcall
mov
insb
adc
sub
cltd
enter
daa
fwait
pop
addl
repz
push
jno
push
cltd
and
std
inc
ds
movsl
outsb
xchg
loopne
xor
pop
call
pop
je
pop
in
in
ss
int
in
push
insb
inc
pop
pop
cmpl
mov
mov
test
pop
add
stos
inc
push
test
bound
btc
je
mov
lcall
xchg
std
out
mov
jmp
pushf
xchg
out
add
fsubrs
mull
in
adc
and
loop
jbe
aas
mov
dec
and
fdivp
push
test
nop
and
ljmp
or
stc
int
scas
int
jno
out
scas
rorl
inc
xor
in
sub
add
lahf
out
push
ljmp
sub
ss
jl
xor
std
inc
and
lcall
imul
cmp
jg
pusha
push
and
mov
cli
addr16
pop
shl
push
cmc
movsb
pop
mov
push
inc
out
cmp
dec
dec
cmpsl
mov
push
mov
out
cld
push
mov
mov
mov
dec
sbb
adc
mov
js
in
loope
jle
insb
dec
daa
daa
dec
sbb
int
test
mov
das
xchg
insb
lods
mov
pusha
test
sub
jbe
jecxz
pop
repz
jns
jp
mov
xchg
xor
insl
add
xchg
insl
mov
jmp
xlat
aam
std
lret
or
hlt
std
mov
sbb
push
addr16
bound
push
jmp
adc
add
xlat
cld
fimull
mov
cmc
sbb
pop
lods
or
mov
xchg
mov
repnz
loope
stc
ja
hlt
push
jmp
in
stos
add
fwait
inc
jp
cmp
jmp
or
data16
jge
imul
lcall
dec
xchg
jmp
cmp
fwait
sbb
test
scas
mov
mov
ret
xorb
popa
imul
xchg
sbb
xchg
mov
adc
mov
mov
pop
xchg
sub
addr16
aad
out
jns
pop
or
sub
aas
fiaddl
mov
repz
push
ret
jg
pop
ljmp
in
aad
lds
icebp
insb
outsb
mov
or
mov
inc
fcmovnb
stos
pcmpgtw
lds
add
jae
fldl
cmp
xor
data16
clc
xor
xor
hlt
sahf
aas
mov
mov
and
int
leave
cmc
test
mov
mov
or
movsl
lahf
dec
imul
jnp
test
sub
mov
xchg
pop
push
shrb
mov
movsb
cwtl
add
push
aad
jo
rcrl
pop
and
sbb
popa
mov
push
cmp
adc
mov
jno
mov
int3
cltd
jge
or
add
negb
lock
pop
jne
cs
adc
scas
inc
push
jo
out
add
mov
stc
scas
gs
add
lcall
dec
arpl
or
sub
loopne
pop
outsl
add
fnstenv
and
ja
push
aad
imul
mull
sub
in
inc
sub
cmp
xlat
loopne
out
pop
mov
shlb
jbe
push
jp
pop
inc
xchg
repz
or
pop
push
dec
xlat
test
push
inc
mov
mov
mov
lods
mov
inc
dec
xchg
sub
sbb
push
pop
repnz
daa
daa
out
aad
imul
mov
xchg
add
mov
movsl
inc
xor
pop
fwait
testb
in
rcrb
xor
into
mov
xlat
mov
std
inc
xchg
addr16
daa
cmpsb
int3
xor
or
lret
insl
dec
or
push
add
outsb
jno,pn
and
outsl
imull
ja
filds
addr16
jae
enter
mov
hlt
inc
cwtl
jbe
arpl
lahf
add
and
mov
jp
fwait
imull
in
clc
mov
ljmp
lcall
xorb
sbb
notl
add
lock
leave
add
mov
jbe
lock
shl
jnp
jg
inc
pop
mov
push
sbb
ret
je
add
dec
andl
repnz
aas
lahf
cld
jmp
mov
adc
xor
stc
insl
xchg
inc
push
out
xchg
push
pop
adc
pop
call
cmpl
lock
or
dec
mov
cwtl
popa
mov
out
imul
addr16
jns
adc
adc
inc
dec
cmpsl
and
cmp
mov
cmc
outsb
sub
aas
and
mov
mov
popf
mov
push
lret
and
dec
sbb
adc
rclb
fcomp
xor
loope
test
mov
cmp
xchg
out
sahf
ljmp
cltd
into
movb
aad
pusha
push
aad
xlat
push
add
mov
jb
pop
add
mov
ret
je
xlat
aas
imul
mov
sbb
or
mov
cmp
lods
add
pop
ljmp
imul
das
and
sub
inc
lahf
popw
fsts
adc
adc
fcoml
xchg
push
arpl
jl
mov
mov
xor
ja
sub
jno
aad
pop
add
fwait
push
imul
and
jp
ret
pop
pushf
jb
ss
push
cmpsb
fstpl
adc
cmpsb
sub
out
pop
mov
in
jle
mov
cwtl
jmp
icebp
mov
sbb
inc
mov
lret
ljmp
mov
and
cmpsl
imul
xchg
test
pop
pop
test
fs
stos
pop
adc
jmp
and
xchg
aam
push
test
fdivrl
scas
jns
lahf
inc
sbb
xchg
loopne
cmp
push
jge
sub
push
push
cmp
int3
fdivrl
sbb
push
stos
cmp
sbb
dec
pusha
cwtl
cwtl
rcll
decb
add
addr16
mov
dec
push
add
pop
pop
xchg
sub
adc
push
daa
jae
mov
sbb
fcmove
decb
stos
cmp
enter
push
jl
jb
outsb
cmpsl
cmp
xchg
mov
mov
leave
sbb
out
mov
mov
jo
mov
js
mov
pusha
aaa
jno
or
push
fstpl
cmc
push
test
je
int
test
sbb
and
imul
pop
sbb
fidivrs
ja
xor
push
and
cmp
lods
je
jb
jnp
sub
mov
xor
imul
data16
xor
inc
inc
loopne
jo
xchg
jnp
ret
cmp
sbb
sahf
jg
pop
sbb
adc
ret
test
mov
push
and
adc
xor
xchg
jae
jb
ret
ret
sub
add
repz
div
pop
mov
aam
ds
stmxcsr
aaa
inc
mov
cmp
jcxz
test
cltd
add
or
jmp
xchg
mov
movups
jg
pop
push
stc
mov
push
into
inc
popa
jl
fisttpl
cs
pop
js
stc
rcr
lods
jne
pop
push
add
pop
fisubrl
je
push
sub
loopne
adc
cmpsl
pop
and
repnz
push
mov
adc
cld
add
stc
cmp
gs
xor
movsb
mov
sub
lahf
cmp
dec
incb
outsl
popa
xchg
adc
enter
xchg
lahf
mov
int3
and
push
inc
sarl
pop
stc
dec
bound
bound
xor
jmp
frstpm(287
push
jns
int
jns
imul
sti
dec
push
frstpm(287
cwtl
xor
sub
add
sbb
sti
cmpsl
addl
sbb
jp
jns
sbbl
jl
inc
rorl
xor
jb
adc
jmp
add
lea
dec
adc
pop
pop
sub
addr16
lods
outsb
aad
mov
imul
jecxz
lods
in
mov
push
xchg
in
fld
jge
adc
fdivrl
call
pop
adc
fmull
or
stos
add
and
sahf
fwait
mov
mov
pop
mov
mov
pop
push
inc
ret
and
mov
pop
mov
mov
mov
ss
inc
xchg
sbb
pop
in
les
fwait
add
jl
push
in
cmp
sahf
cltd
xor
insb
pop
mov
ss
add
sbb
adc
dec
cwtl
das
movl
jp
out
fadds
sub
add
shlb
adc
sbb
push
mov
insb
ret
shl
xchg
jns
mov
adc
dec
outsb
push
sub
inc
aaa
pop
or
notl
out
testb
add
out
cmp
adc
xor
mov
xor
insl
and
jl
in
cltd
inc
xchg
mov
fisubrl
rorl
push
or
lret
jl
test
rol
push
dec
cld
or
lret
rolb
imul
jns
outsl
add
cmp
mov
jmp
xor
xlat
inc
jne
add
mov
inc
sar
loopne
mov
mov
dec
mov
or
aas
inc
iret
bound
idivb
xchg
jp
inc
fisubrs
jns
fnstenv
aas
or
jmp
scas
lahf
out
outsb
adc
xchg
pop
push
and
push
mov
test
push
push
inc
pop
outsb
icebp
stos
insl
pushf
lcall
xchg
add
and
xchg
xchg
es
hlt
sbb
cltd
inc
loop
fcmovnu
js
push
test
sarl
xchg
idivb
jno
decb
push
dec
adc
imul
mov
adc
into
jle
inc
punpckhdq
lock
mov
inc
mov
jbe
pop
repz
mov
test
cmp
in
daa
ja
or
mov
mov
sub
sbb
aam
mov
outsl
sar
scas
in
xor
enter
outsl
jbe
mov
icebp
movsl
add
adc
les
xor
xlat
mov
mov
scas
pop
inc
je
fldl
into
pop
fwait
rcll
mov
pop
sbb
xlat
int
add
push
scas
pushf
out
inc
sub
mov
nop
wrmsr
and
sbb
rcrb
push
mov
out
imul
repnz
lret
scas
arpl
xchg
pop
mov
pushf
in
push
mov
loop
add
fstps
cmp
scas
inc
xor
jp
pop
push
out
idivl
rorb
fs
sbbb
lcall
sub
jno
outsl
ljmp
outsl
icebp
push
jp
xlat
bound
mov
mov
lret
int
jbe
sub
bound
sbb
xlat
and
sti
aas
movsl
ret
push
ss
inc
or
mov
sbb
mov
fwait
cmp
and
mov
mov
mov
pop
orb
fdivl
sti
insl
dec
mov
jne
ficompl
mov
arpl
test
arpl
inc
in
les
push
fiadds
xorl
sub
add
out
and
sub
mov
inc
movsl
int3
add
add
cld
jl
add
cmp
mov
popf
pop
mov
dec
enter
test
push
pop
mov
testl
add
xor
das
push
mov
add
pop
mov
dec
test
fwait
push
mov
lret
je
inc
pop
push
mov
xor
pop
adc
shl
lods
dec
idivl
add
ror
xchg
mov
inc
inc
ficoml
push
xchg
dec
pop
sub
cmp
cmovp
cmpl
add
cli
pop
cmp
dec
cmp
out
sub
std
pop
and
jb
xor
cmc
mov
popf
jb
repnz
int3
xchg
dec
adc
lcall
stos
fst
sbb
sbb
jg
inc
mov
jns
daa
cmp
jns
dec
inc
mov
int3
sbb
mov
ret
inc
add
jb
ljmp
stos
sbb
shrl
or
adc
fidivl
jp
xor
xchg
test
pop
popf
fisubrl
adc
xchg
enter
pop
sub
scas
loope
jae
popf
mov
sub
mov
dec
cs
pop
repnz
push
jmp
mov
or
arpl
in
cmp
repz
mov
push
mov
mov
shrl
sarb
call
adc
icebp
mov
sub
rcll
sub
xor
adc
adc
inc
and
movsb
cmp
push
cmp
sbb
addr16
loope
cmp
cmp
inc
js
sub
es
mov
cmp
insl
inc
pushf
sub
cvtps2pd
add
fstps
push
adc
jle
push
arpl
rorl
sbb
pop
push
mov
out
jns
xchg
inc
mov
xchg
adc
int3
lods
pushf
xor
sbb
into
nop
insl
mov
xchg
mov
mov
xchg
rol
lods
adc
imul
and
fs
popf
and
aam
bound
lcall
cltd
test
ja
dec
lret
cmp
movsb
mov
pop
mov
dec
cli
inc
adc
arpl
lahf
mov
push
test
inc
and
xor
push
nop
mov
xchg
xor
and
xor
test
sub
mov
mov
shlb
imul
inc
cs
jno
lods
lahf
sbb
sbb
ds
sbb
mov
imul
mov
neg
mov
dec
dec
cwtl
imul
or
fistpll
mov
adc
xor
lahf
jns
out
push
scas
sahf
and
iret
jp
lahf
jmp
das
adc
mov
lods
fadds
bound
xchg
inc
push
dec
movsl
notb
pop
sbb
iret
movb
adc
dec
mov
movsl
dec
sub
jae
pop
mov
repz
in
movsl
sub
pusha
cmpsb
je
and
inc
mov
repnz
int
mov
and
pop
jae
fucomip
jg
leave
repz
add
inc
cmp
cmp
jb
mov
pop
pop
push
adc
ljmp
in
aas
mov
sbb
fwait
pop
cmp
ret
jo
push
dec
jmp
pushf
cld
xchg
and
pop
mov
pop
or
mov
nop
pop
sbb
or
aad
sub
xchg
mov
enter
out
in
lahf
vpmovmskb
sub
es
lea
push
loop
fcoms
pop
in
sub
rolb
mov
enter
scas
push
ret
arpl
cmpl
jnp
pushf
popf
ljmp
xchg
adc
pop
int
rcr
iret
imul
sub
adcb
loop
xchg
mov
cmp
ljmp
rcrl
mov
cltd
iret
bound
scas
xor
push
xor
push
mov
int3
movsb
dec
add
cwtl
jge
pop
int3
cli
out
mov
jns
es
sub
pop
aaa
jb
jp
aas
and
xchg
sbb
or
std
jns
fimuls
jne
test
in
movsl
dec
repnz
bound
or
mov
iret
out
mov
sbb
test
hlt
jmp
mov
or
rcll
fidivs
rcrb
xor
push
cmp
mov
add
adc
xchg
repz
jae
icebp
icebp
dec
outsl
mov
test
clc
mov
and
jg
cltd
inc
pusha
test
loope
jmp
mov
or
dec
jmp
ja
out
pop
jae,pt
sub
jle
stos
jns
test
or
pusha
mov
adc
and
test
xchg
stos
int3
pop
cld
pop
adc
push
js
jge
sbb
outsl
movsb
mov
call
sub
std
scas
adc
out
xor
mov
adc
mov
jno
rcl
xor
adc
out
adc
push
push
pop
cmp
repz
jne
sbb
xchg
push
mov
inc
stos
cmp
cmp
bnd
arpl
dec
jbe
int
jb
sub
sbb
js
add
add
pop
cmpsb
pop
or
hlt
mov
mov
insl
mov
push
divb
mov
outsl
xchg
lea
push
ret
std
addr16
and
sbb
cwtl
movsl
and
adc
dec
mov
push
jno
pop
out
imul
adc
mulb
mov
data16
int3
add
ljmp
ret
test
mov
cmp
xor
cwtl
sbb
add
sbb
xor
add
sbb
pmullw
out
xchg
into
sbb
mov
cltd
fbstp
mov
addb
adc
sbb
xchg
cmp
cmpsb
mov
push
jp
sub
mov
xchg
lds
cmp
rcl
mov
jns
popl
rcr
into
sti
jmp
sub
inc
out
icebp
add
popa
arpl
fwait
sub
add
dec
pop
push
pop
rcrl
addr16
xchg
sub
cmpsl
lds
aas
xchg
dec
sub
test
and
dec
mov
movl
jbe
xchg
pushf
out
inc
dec
pop
xchg
mov
cmpsl
lcall
inc
js
push
orb
es
mov
xchg
hlt
xchg
dec
fcompl
adc
test
int3
inc
dec
push
lock
call
mov
testl
cs
je
sbb
mov
mov
test
in
jp
inc
pop
dec
ret
aad
ss
ss
in
fwait
mov
iret
nop
pop
pop
std
ja
mov
data16
pop
xchg
xorl
gs
sub
inc
bound
sbb
pop
add
mov
cs
inc
icebp
inc
scas
stos
repnz
jle
lods
in
xlat
push
add
cmp
mov
and
jb
sbbl
jb
cmp
mov
push
jg
cwtl
adcb
out
fwait
cmpsl
push
inc
stos
call
sub
jge
das
inc
xchg
addr16
cmp
jbe
push
ljmp
inc
mov
fwait
popf
cmp
cmp
cmp
movsl
lret
jp
lods
mov
mov
push
adc
mov
or
inc
inc
mov
xlat
xor
lds
es
pop
aad
loop
ret
mov
sub
sub
sub
cmp
test
and
or
dec
mov
movsb
dec
seto
push
jmp
push
jae
dec
pop
daa
and
loope
call
dec
ljmp
xor
out
sub
xchg
sub
inc
mov
xor
cmp
sahf
and
xchg
adc
or
sbb
ds
mov
mov
jo
and
dec
mov
scas
insl
jl
out
sub
or
and
cmpl
and
mov
push
inc
cmp
ja
fdiv
addr16
sub
frstor
lret
adc
adc
inc
call
mov
arpl
lods
pop
pop
sub
stos
iret
enter
aam
ficomps
das
push
adc
insb
xlat
push
sub
out
jg
gs
ja
in
leave
sahf
shll
mov
mov
rcrb
lret
lds
jne
ds
add
insl
pushf
push
mov
sub
lods
imul
inc
jp
movups
out
lcall
mov
test
adc
adc
cmp
les
jns
test
repz
xor
jns
and
and
stc
cmp
insl
movsb
dec
ret
and
out
mov
cmp
loop
sbb
dec
incb
and
or
and
test
xor
and
loopne
mov
mov
les
ret
add
bound
ja
test
xor
insl
and
mov
jg
jo
or
or
pushf
pop
jl
add
inc
adc
scas
mov
and
push
or
cmp
cld
sbb
insl
dec
test
negb
sbb
xchg
push
rorb
lahf
movsb
cltd
cwtl
jle
mov
out
test
and
xor
dec
sbb
jmp
fistps
scas
push
inc
jns
xchg
daa
or
aad
pop
test
push
imul
xor
mov
sub
outsb
push
mov
cmpsl
jne
subl
fsubr
push
outsb
xchg
inc
xlat
mov
fisubl
xchg
mov
pop
cmc
ret
test
pop
lret
mov
jl
mov
shll
out
rorl
mov
push
stos
mov
imul
pop
ljmp
das
outsl
dec
jns
int3
fidivs
aas
out
ss
mov
xchg
sub
pop
and
push
and
adc
sbb
aaa
cmpsb
mov
inc
jae
push
int3
fdivr
inc
enter
xlat
mov
xchg
mov
repnz
jns
outsl
mov
sbb
push
loopne
xorl
mov
mov
mov
stos
mov
mov
aad
cmp
fnsave
xchg
adc
stos
and
xchg
out
dec
outsb
push
data16
and
jo
sub
mov
adc
out
shll
stc
imul
xor
jp
mov
mov
call
lock
nop
aam
scas
dec
pop
fidivl
lock
fwait
int
mov
mov
mov
push
pop
cmp
into
ljmp
cmpl
ret
aam
xor
add
imul
in
sbb
push
repz
mov
imul
sbb
roll
sub
fcomi
roll
pop
das
test
push
fwait
call
fldenv
ja
lret
add
sub
and
xor
jle
mov
popa
cmpsb
insl
or
fs
in
movl
test
mov
popf
in
ds
call
xor
cwtl
loope
push
jb
pop
mov
int
movsb
ficoms
test
lret
cmp
dec
ret
jb
mov
sub
pusha
cmp
pop
sub
popa
inc
inc
sub
push
fiaddl
sbb
add
frstor
sub
and
imul
cmp
cs
fidivs
aas
roll
cmp
repz
push
jnp
dec
mov
insl
cmp
jge
fidivrs
lock
jb
dec
mov
test
loope
jo
cmc
stos
and
xchg
inc
dec
sbb
loopne
sbb
in
mov
inc
pop
pop
aaa
adcb
loope
lahf
leave
out
mov
mov
push
jns
inc
leave
inc
mov
pop
and
pop
adc
cmp
dec
les
cltd
cmp
mov
add
ficompl
xchg
pop
aaa
xor
roll
iret
dec
xor
cmpsb
mov
push
push
int
and
shlb
ffreep
sti
popa
out
cmpsb
cmp
xchg
adc
and
and
movsl
and
rol
aaa
lea
jl
xchg
mov
test
fstl
ja
filds
push
cli
adc
je
push
and
cs
pop
ljmp
jo
mov
les
rcrb
mov
loope
add
inc
jns
xor
ss
adcl
cmp
jg
mov
mov
xor
push
or
fabs
rcrl
jge
sub
fcoml
push
int3
stos
sub
pop
addr16
sub
sub
popf
stc
adc
pop
neg
cmp
fucomi
inc
test
lock
dec
or
decl
cmp
cmp
test
pop
into
scas
jle
call
in
mov
inc
push
fldl
popf
push
imul
push
add
lock
aad
dec
imul
xchg
push
mov
lret
aaa
pushf
mov
jnp
mov
cmp
add
jns
xchg
in
int
mov
mov
rclb
jb
sahf
or
scas
hlt
fisttpll
and
jle
outsb
dec
rolb
adc
sarl
loopne
or
push
pop
mov
testb
dec
inc
jbe
ja
add
loope
sbb
add
mov
xor
mov
sbb
in
test
jb
xor
popa
cld
in
jle
xchg
hlt
out
ss
sbb
fildll
mov
aaa
add
mov
xchg
out
xlat
cmpsl
insl
mov
xchg
dec
inc
out
movsl
inc
jb
pop
mov
sti
jp
out
mov
rcl
cs
push
mov
and
jns
lret
rcr
inc
das
ljmp
jg
mov
hlt
push
pushf
mov
add
mov
sub
dec
mov
aad
push
xor
insb
push
xchg
out
movsb
mov
xchg
or
xchg
cmp
add
cli
js
in
repnz
fists
mov
lahf
loope
js
jnp
push
into
loopne
mov
test
pmaxsw
push
aam
add
cmc
pop
pusha
inc
xor
push
xchg
outsl
mov
in
jne
arpl
into
insb
adc
adc
in
add
scas
not
jno
and
out
push
lcall
push
imul
lods
out
sub
fimull
out
fldt
mov
xor
xchg
imulb
cmp
clc
add
add
shl
mov
add
or
jno
xchg
cmp
es
fstpl
and
xchg
jbe
cmp
cli
arpl
and
cli
pop
sub
dec
lock
ret
adc
push
fmuls
inc
rcl
push
into
jne
cmp
sub
xchg
adc
push
pop
in
add
repnz
push
out
imul
inc
in
std
sub
and
jns
jnp
mov
jl
jecxz
xchg
inc
iret
inc
pop
cmp
jae
imul
sub
lock
xchg
jmp
xor
dec
ret
sti
lret
mov
push
ljmp
aas
jns
aaa
xchg
cld
and
aaa
xchg
mov
sub
stc
pop
inc
xor
mov
jecxz
fwait
roll
xchg
sbb
lods
push
loope
mov
sahf
add
and
jb
jp
iret
jo
dec
dec
push
into
iret
faddl
sbb
jnp
imul
sarb
cmp
lahf
xor
dec
cmp
test
sub
mov
xor
stc
pop
addb
xchg
or
sbb
pop
add
call
push
mov
mov
pop
dec
or
jge
sbb
ja
xor
stc
push
stos
add
sub
or
dec
call
lds
xor
fmuls
dec
mov
add
push
popf
test
pop
dec
adc
pop
add
pop
pop
add
lds
push
add
cld
fimuls
scas
xor
xor
js
xlat
and
push
lcall
jnp
lret
fdivl
lock
lods
mov
sub
fbstp
mov
mov
repz
mov
add
jp
mov
lock
mov
adc
inc
movsl
sbb
std
push
and
jnp
mov
ja
mov
mov
leave
push
adc
movb
subb
lcall
scas
shlb
icebp
mov
xor
push
xchg
ja
outsb
add
icebp
sti
rorl
mov
sti
aam
dec
cmp
push
aam
mov
and
push
xchg
mov
jbe
addl
fwait
enter
mov
push
int
push
inc
inc
or
adc
cli
push
lahf
xchg
sbb
imul
shrb
mov
movsb
mov
gs
sbb
in
stc
push
jmp
fnstsw
cmpsb
mov
xchg
cli
dec
mov
mov
inc
pop
push
rcll
cli
adc
inc
lret
adc
insl
popa
jle
inc
adc
ljmp
push
mov
jecxz
and
in
push
push
fmuls
dec
mov
std
dec
test
jp
pop
movlps
cmp
mov
inc
pop
scas
ret
push
xchg
mov
xchg
xchg
out
mov
popa
out
push
pop
idiv
fwait
cmp
pop
movsb
mov
mov
test
insl
or
scas
sub
xor
test
mov
xor
pusha
cli
pop
test
xchg
xorb
stos
mov
jecxz
movsl
adc
pusha
xor
pop
mov
je
sti
mov
in
xchg
pusha
jg
jmp
xor
movsb
ret
cmpb
jae
inc
xchg
xor
jge
call
in
jle
adc
adc
sub
out
and
inc
push
bound
popf
push
jg
cmp
imul
jns
xchg
scas
in
or
repz
lods
dec
movsl
cs
dec
cltd
xchg
in
repz
rcrl
lods
aam
fcompl
xlat
push
jb
adc
push
repnz
and
xor
mov
data16
jg
movsl
pop
or
sub
jne
cwtl
mov
aad
frstor
fldt
insb
in
pop
jg
iretw
or
les
push
clc
xchg
inc
sbb
push
aam
push
adcl
pusha
mov
lahf
jmp
push
insl
add
fcomps
mov
sahf
and
je
imul
cltd
dec
ffree
jle
push
ja
icebp
sbb
lahf
push
sbb
out
movsl
sub
sbb
jo
cmpb
xlat
loop
mov
int
or
popf
pusha
insb
cwtl
add
es
pop
sbb
sbbl
jae
jns
data16
inc
mov
dec
aas
dec
sbb
mov
outsb
shrb
cmp
shlb
and
out
jmp
addr16
lods
out
inc
push
out
push
mov
mov
cli
jbe
cmp
dec
in
aam
push
mov
mov
mov
std
mov
mov
fistpll
ja
out
dec
lods
sbb
xchg
jns
mov
or
in
cmpsb
push
inc
adc
cmp
stos
push
push
sbb
out
xorb
push
inc
testb
dec
xchg
sbb
lahf
out
mov
fs
adc
mov
imul
sub
jne
testl
ljmp
xlat
insb
fistpll
insb
int3
or
dec
dec
push
popf
and
pop
cmpsl
mov
shlb
dec
sbb
lcall
stos
xchg
hlt
pop
add
subb
pop
xlat
jb
push
sbb
popf
jbe
jb
or
je
rcrb
fisttps
loop
push
pop
mov
hlt
inc
es
aad
rcrb
add
add
add
mov
jecxz
adc
stos
stos
or
mov
imul
jb
and
ret
movsb
sbb
or
cld
xchg
mov
and
mov
out
mov
pusha
enter
lcall
adc
lods
dec
sub
hlt
xchg
int
sbb
sar
or
and
fnsave
xchg
in
inc
adc
int
sbb
cltd
cmp
sar
and
sti
jno
outsl
pop
mov
inc
fisubs
xchg
adc
inc
adc
mov
mov
dec
xor
je
mov
pop
dec
lds
repz
or
inc
stos
lahf
mov
imul
call
dec
pop
int
lods
test
lcall
xor
or
mov
sbb
data16
or
jo
inc
dec
jbe
jno
rcl
lahf
mov
mov
das
sbb
es
adc
pop
dec
pushf
icebp
inc
fidivrl
fidivs
fstpt
dec
fdivs
loop
sub
cmc
fildl
cmp
lds
ret
dec
pop
movsl
js
and
dec
fs
pop
mov
sub
sarb
out
inc
mov
mov
pop
mov
xchg
mov
dec
add
std
mov
dec
mov
mov
xchg
hlt
repnz
bound
inc
push
dec
jmp
sbb
call
cmp
mov
mov
mov
fmuls
and
ljmp
pop
cmp
mov
mov
test
xchg
mov
push
or
jne
fsubrp
stos
jb
scas
outsb
jmp
cltd
icebp
push
cmp
repz
repz
aad
insl
cmp
in
jecxz
xor
mov
in
cmp
mov
popa
std
call
adc
fdiv
cli
inc
sbb
jle
or
dec
lahf
push
test
mov
xchg
xchg
rcrl
mov
dec
data16
std
sub
imul
fldcw
addr16
fisttpll
inc
mov
fiadds
and
xchg
shr
cmp
ret
adc
and
imul
and
ret
adc
sub
out
aaa
push
lahf
cmpsb
inc
push
mov
or
dec
clc
xor
mov
nop
push
mov
fisttpll
adc
ljmp
push
mov
enter
mov
insb
outsl
and
aas
sahf
push
pop
xchg
testb
mov
daa
adc
push
mov
dec
adcl
loopne
pop
lret
aaa
sbb
fidivrl
movsl
push
adc
xor
cmpb
pop
push
ret
inc
push
insl
mov
popa
cmpsb
shr
test
push
cltd
mov
xchg
cmp
dec
jmp
loopne
pop
cmpb
rcrb
fdiv
sbb
sbb
jecxz
rcr
cmp
call
mov
in
stos
add
and
or
pop
cmovns
not
notl
dec
cmp
jp
sbb
adc
mov
dec
sub
sbb
add
std
xor
xchg
aas
add
or
je
pop
xor
mov
and
into
xlat
add
xchg
and
std
pop
push
xor
mov
adc
lcall
in
mov
jo
push
int
cmc
mov
or
ljmp
lea
push
pop
inc
inc
imul
ret
xchg
dec
and
mov
enter
mov
dec
je
bound
stos
js
adc
inc
mov
icebp
xor
ljmp
mov
or
in
mov
stc
push
ret
pop
popl
rorl
addr16
push
xor
dec
movsl
jmp
cltd
sbb
jp
loopne
and
loopne
into
cld
pop
imul
hlt
mov
sub
sub
lods
or
fcmovb
lock
mov
lods
and
cmpsb
mov
pop
arpl
jge
js
mov
sarl
mov
ss
iret
pop
imul
fimull
mov
lret
les
mov
cmpsb
push
push
cmp
add
fsubs
nop
adcl
push
pop
push
xlat
inc
dec
icebp
aaa
jmp
cli
insb
addr16
lods
mov
cmc
ds
addl
dec
frstor
dec
push
stos
or
adc
add
or
lods
adc
out
fmulp
test
sbb
push
push
jl
arpl
dec
lods
shr
xor
xchg
bound
dec
sub
pop
sub
int
lahf
xchg
mov
pop
push
out
fisttpl
and
sub
das
shrb
cmpsb
mov
cmpsl
push
fcmovu
ret
inc
es
inc
pop
lods
movsl
sti
mov
lea
sub
lea
insb
xchg
jl
and
jns
mov
clc
inc
lods
ret
mov
test
dec
std
std
addr16
sub
sub
pop
int
sub
mov
xlat
push
inc
push
adc
out
inc
mov
lods
js
jp
dec
fistpll
out
jns
sti
xchg
dec
push
inc
add
xchg
js
mov
fsubrl
addl
and
lret
xchg
jnp
xchg
test
mov
sti
int3
dec
mov
sub
movl
rcll
and
xchg
ss
add
pop
dec
cmp
lods
popf
jl
mov
or
cmp
fnstcw
cld
insb
out
sub
mov
rcr
sub
aad
test
adc
pop
outsb
xor
shlb
adcb
leave
pop
mov
ljmp
lds
inc
pop
les
mov
xchg
in
adc
sahf
xor
xchg
adc
mov
out
jmp
cmp
jmp
push
inc
jno
mov
loope
dec
lea
lret
test
fiaddl
les
pop
scas
add
pop
out
daa
xchg
les
xchg
mov
or
push
push
pop
std
cmp
jae
shll
adc
push
test
test
outsb
pop
jp
cmc
xchg
out
in
push
mov
imul
mov
push
mov
cs
jecxz
jge
movsb
sbb
fldcw
cld
mov
out
cltd
mov
mov
inc
popa
cmpsb
or
add
mov
ret
enter
xchg
cmp
addr16
aad
je
or
ja
inc
cmc
int3
cmc
pop
jmp
outsl
insl
dec
popf
jne
dec
and
gs
rorb
outsb
in
pop
dec
dec
push
pop
das
lcall
ss
cld
pop
sar
cmpsl
jne
cmp
sti
add
lock
mov
mov
out
mov
inc
cltd
xchg
xchg
mov
pop
jno
cmp
mov
call
cmp
mov
jmp
fisttps
mov
cmpsl
push
or
cmpsb
push
outsl
jbe
cli
shl
mov
or
lods
in
push
ficoml
loope
or
xor
inc
pop
pop
js
xchg
cmp
sbb
insl
flds
int
mov
xor
push
dec
outsb
xor
icebp
imul
mov
inc
cmpsl
insb
lods
and
jmp
mov
mov
scas
pop
fistl
or
xor
cwtl
xchg
jg
imul
jno
dec
int
ss
dec
jo
out
nop
loopne
repz
or
adc
pop
lcall
sbb
ret
lock
xchg
pop
mov
inc
cmp
js
repz
mov
mov
pop
mov
insl
scas
pop
adc
mov
xchg
or
sarl
lret
fucom
or
mov
add
imul
sub
ljmp
cld
in
into
pusha
jp
cmp
out
popf
mov
push
fwait
or
dec
pop
xchg
data16
sub
inc
pop
jb
push
xchg
mov
sub
ret
sub
pop
dec
mov
sbb
or
cmp
fdivl
roll
test
jecxz
adc
cmp
daa
xchg
bound
pop
mov
xchg
mov
jmp
leave
xchg
jne
sub
iret
pop
or
or
arpl
pop
xchg
cmp
or
push
stos
jbe
out
mov
repz
jne
xchg
cmp
mov
jle
cltd
iret
jle
push
add
cli
or
fdivrs
mov
ljmp
xchg
lahf
cwtl
test
bsr
xchg
lret
popf
jnp
lret
call
mov
inc
inc
loop
jne
icebp
inc
out
and
dec
sarb
adc
mov
imul
into
cmp
adc
and
cld
popl
pop
shrb
xchg
push
pop
or
sub
aas
jmp
das
ja
call
in
std
arpl
sti
sbb
clc
or
out
insl
in
fdivr
pop
loop
movsb
sub
sub
out
mov
daa
xchg
jns
jne
std
sbb
stos
fsubs
popf
jp
fcmovnb
mov
ja
ret
mov
bound
or
cltd
enter
dec
popf
xlat
cwtl
rcrl
and
daa
les
rolb
mov
mov
inc
cmp
mov
pop
pushf
addr16
fcmovnb
sbb
xor
dec
ja
or
and
cltd
imul
inc
pop
in
enter
xchg
aad
dec
xchg
outsl
xor
lcall
cmpsl
femms
and
lds
sahf
fdivl
mov
xchg
inc
lret
out
push
pop
fiaddl
outsl
xlat
rcrb
cltd
lock
add
enter
sub
not
mov
push
fdivr
and
dec
lea
inc
jle
mov
dec
lods
dec
pop
sar
xorl
cmpsl
and
rcll
jo
addl
xchg
mov
push
mov
push
repz
in
cmp
shlb
xchg
xchg
xchg
xchg
xchg
loopne
sahf
adc
sbb
lods
mov
xchg
cmpsl
pushf
and
lret
and
repz
xchg
loopne
pushf
lods
xchg
xor
ret
cmp
sbb
cwtl
lcall
out
dec
aas
xchg
and
inc
dec
mov
mov
mov
fldt
leave
sub
pop
mov
pop
sub
ret
xor
inc
dec
push
jo
or
lea
adc
gs
scas
fcomps
daa
rclb
and
dec
stos
js
imul
mov
jnp
cmpsb
adc
mov
mov
sbb
ss
push
enter
ja
mov
xchg
movl
pop
inc
push
decl
mov
sbbl
scas
stc
pop
dec
push
adc
push
push
jbe
in
xchg
or
mov
mov
xchg
faddl
outsl
jg
insl
scas
lret
bound
loopne
dec
adc
arpl
int
lds
xorl
pop
mov
or
stos
cmc
or
cli
inc
inc
bound
aas
rolb
test
shr
divl
test
inc
pop
add
push
nop
or
in
jbe
xor
scas
xchg
push
adcb
mov
scas
pop
pop
frstor
pushl
mov
rcll
gs
push
shrl
clc
outsb
int3
rorb
inc
test
out
and
movzbl
mov
push
scas
mov
cmp
stos
xor
and
jp
fists
in
cmp
adc
movsl
lds
adc
movsb
out
test
out
cmpsb
cmp
sub
pushf
nop
pop
loope
popf
pop
pop
cmpb
or
jo
lret
adc
bound
in
into
lea
add
adc
cmp
rcr
pop
and
mov
mov
fidivs
add
inc
and
lahf
sahf
dec
fimull
out
pop
jb
call
push
mov
sub
sahf
sub
nop
and
jp
nop
dec
dec
pushf
mov
fnstenv
sub
mov
mov
outsb
sqrtps
inc
xor
repnz
test
sub
out
jns
test
cli
and
xchg
sbb
subl
orl
jnp
mov
out
arpl
inc
mov
sbb
scas
ss
loop
push
mov
cmpsl
cmp
dec
mov
insl
pusha
orl
out
pop
dec
mov
sbb
test
jg
movsl
outsb
jno
inc
jle
mov
aaa
jp
fsubs
mov
inc
hlt
in
dec
jge
mov
dec
pop
xlat
fsts
push
jne
dec
dec
push
sbb
test
test
lods
rolb
mov
roll
mov
jmp
mov
shrb
or
mov
test
or
int
mov
sti
cmp
inc
lds
sbb
int3
stos
xchg
gs
push
int3
pop
es
sub
rorb
xchg
fwait
pop
push
sub
aad
movsl
cmp
scas
mov
mulb
imul
jns
jo
add
loop
popa
lds
mov
int
icebp
mov
imul
push
adc
orb
fwait
push
cld
inc
ret
inc
cmpsb
or
cld
mov
repnz
jnp
sbb
ss
xchg
rolb
xor
pusha
in
test
and
inc
cwtl
mov
dec
sti
mov
push
push
mov
out
movsb
out
fxch
jb
test
xor
call
insl
lret
jae
addb
xchg
fcomps
sar
js
enter
test
test
je
notb
popf
js
rcl
adc
ficoms
xor
mov
cwtl
cmc
pop
jnp
jb
pop
loope
es
or
cmc
push
out
push
popf
adc
aas
cmp
cmp
rcr
mov
mov
pop
and
rolb
mov
movsl
roll
sub
mov
xchg
xor
jle
int
hlt
adc
mov
enter
and
jl
cmp
lds
out
cmc
dec
int3
or
mov
je
scas
nop
aaa
add
dec
add
mov
pop
jae
sbb
call
test
jp
aas
adc
popf
je
mov
cmp
push
push
mov
xchg
hlt
mov
sarb
adc
loope
stos
inc
orl
es
and
xchg
push
or
imul
xor
mov
mov
and
loopne
and
cmpsl
adc
popa
cmpb
fisubrs
inc
aas
or
addl
faddl
nop
ja
inc
ficomps
add
sahf
addr16
aad
shr
mov
xchg
mov
popf
add
mov
mov
mov
adc
or
adcb
out
inc
dec
aad
mov
push
mov
add
stos
test
imulb
int3
mov
mov
and
inc
repnz
xchg
repnz
adc
and
or
ds
lahf
sbb
push
add
mov
fwait
sbb
and
xor
pop
movsb
pop
mov
xor
out
aam
lea
xchg
ret
clc
lret
insl
xor
mov
pop
clc
cmp
pushl
dec
pop
ss
fndisi(8087
repz
std
push
stc
imul
mov
arpl
addb
in
mov
repz
xchg
mov
pop
lods
lcall
jnp
fistps
mov
inc
fs
dec
mov
pop
cmpsb
mov
mov
mov
cmp
jae
add
rclb
sub
pusha
fisubl
into
iret
dec
inc
push
fwait
enter
push
inc
mov
and
out
push
es
aaa
call
lret
int
pop
push
cwtl
aam
lret
das
cmc
cmp
ret
leave
jns
icebp
js
sub
xor
xchg
out
dec
xor
ljmp
test
ja
lret
mov
xchg
mov
in
or
adc
int
push
xchg
mov
mov
popf
push
cmp
dec
shl
stos
cmp
mov
jp,pn
popf
decb
xchg
shr
ficoml
lock
pop
pop
lock
lods
jp
pop
add
iret
pop
add
lock
stc
cmpsl
add
sbb
mov
mov
clc
xor
cmpsb
lds
insb
aad
or
scas
push
pop
push
mov
jae
or
jbe
das
jl
add
adc
es
lret
mov
sahf
dec
dec
mov
lods
xlat
lea
mov
push
lock
pop
cmpsb
outsl
push
inc
sbb
push
negb
xor
in
xor
mov
mov
or
jno
xchg
dec
leave
cld
dec
dec
sbb
xchg
imul
stos
scas
add
jecxz
inc
sub
add
scas
inc
cwtl
mov
push
fs
int3
mov
xor
xlat
popa
popa
hlt
pop
push
je
mov
push
fistps
das
cwtl
xchg
and
and
popa
aaa
test
mov
xchg
mov
ret
pop
jb
lock
aam
out
cmpl
dec
push
xor
cmp
mov
xor
hlt
cmc
add
aam
fildl
orb
pop
clc
and
mov
mov
popf
mov
fwait
pusha
movsb
or
movsl
sbb
lock
mov
lret
fistl
mull
adc
adc
fwait
pop
mov
jb
cwtl
dec
add
mov
sbb
xor
das
cli
rclb
fs
testb
mov
mov
push
push
outsl
jp
in
shl
outsb
xchg
out
out
mov
imul
xor
sub
push
jmp
dec
test
xor
sub
fiaddl
push
jno
cmpsl
jns
adc
in
jno
mov
mov
cmp
in
rol
jmp
testl
mov
call
jle
ljmp
sub
stos
sub
daa
push
les
insl
xchg
push
or
cmp
adc
pop
fxtract
inc
push
dec
add
inc
test
mov
pop
xor
lds
jbe
push
loope
jmp
jo
out
or
pusha
das
fwait
xchg
push
add
stos
jl
mov
out
dec
jp
dec
adc
pop
push
loope
insb
out
scas
outsl
push
dec
insl
add
jo
addb
in
pop
cltd
js
push
sub
sahf
clc
jmp
pop
das
andl
push
ret
sub
fbld
mov
dec
pop
cmp
jge
xchg
cwtl
or
sbb
pop
or
icebp
jg
into
pop
mov
mov
mov
pop
mov
mov
sbb
das
jg
pop
pop
cld
jle
sbb
std
in
sub
mov
cmp
lods
fildll
fwait
out
cmpsb
es
inc
jo
mov
cmpsb
inc
pop
and
dec
pop
bound
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
movl
dec
mov
movzbl
shl
movzbl
dec
mov
mov
movl
movl
mov
movl
movzbl
add
movl
movl
mov
shl
movl
lea
cmp
jae
mov
movw
add
loop
mov
movl
mov
add
mov
xor
xor
cmp
je
shl
inc
movzbl
or
inc
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shl
shll
movzbl
inc
or
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
movzbl
mov
and
shl
mov
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
lea
shll
mov
and
mov
cmpl
lea
lea
mov
ja
cmp
je
shl
movzbl
shll
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
mov
cmpl
lea
mov
je
jmp
sub
sub
lea
mov
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
movzbl
inc
shll
shl
or
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
shr
sub
mov
lea
jmp
mov
mov
mov
mov
mov
inc
mov
cmpl
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
sub
mov
sub
mov
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
ja
cmp
je
shl
movzbl
shl
inc
or
mov
mov
mov
shr
movzwl
imul
cmp
jae
mov
movl
sub
mov
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
or
inc
shl
mov
shr
mov
movzwl
imul
cmp
jae
sub
sarl
mov
mov
lea
cmpl
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
mov
sub
sub
shr
sub
cmp
mov
ja
cmp
je
shl
movzbl
shl
inc
or
mov
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
mov
sub
sar
lea
mov
mov
jmp
sub
mov
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
inc
shl
shl
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
mov
jmp
sub
mov
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
lea
mov
add
cmp
ja
cmp
je
shl
movzbl
shl
inc
or
mov
mov
movzwl
shr
imul
cmp
jae
mov
shll
mov
sub
sar
lea
movl
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
shl
shl
movzbl
inc
or
mov
movzwl
mov
shr
imul
cmp
jae
mov
mov
sub
shll
sar
lea
mov
movl
mov
lea
mov
movl
jmp
sub
mov
movl
sub
mov
movl
shr
sub
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shl
movzbl
inc
or
shll
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
mov
lea
add
cmpl
ja
cmp
je
shl
shll
movzbl
or
inc
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
and
sar
or
lea
cmp
mov
jg
shl
add
mov
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
movzbl
shl
shll
inc
or
add
shrl
cmp
jb
sub
or
dec
jne
mov
shl
add
mov
movl
mov
mov
movl
mov
add
mov
add
cmpl
ja
cmp
je
shll
shl
movzbl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
add
mov
cmp
ja
mov
mov
sub
lea
add
mov
mov
mov
incl
inc
inc
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
mov
mov
mov
mov
mov
xor
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
xchg
sbb
push
xor
mov
adc
mov
popa
xchg
dec
jns
mov
aad
aam
jns
bound
in
icebp
call
push
lods
jecxz
out
dec
or
pop
pop
fnstcw
jmp
and
sub
mov
push
fbld
arpl
pop
adcl
loope
xor
ja
push
cmc
stos
sbb
loopne
pop
lock
std
ficompl
push
inc
mov
cltd
and
int3
outsb
sahf
test
cli
shll
add
mov
sub
and
hlt
xchg
fcomi
push
pop
sbbb
mov
jp
inc
xlat
sbb
dec
sbb
lods
repnz
test
ds
adc
pop
pop
pop
idiv
testl
jmp
xor
mov
mov
fildll
jle
repnz
or
mov
cwtl
lods
jg
ljmp
xor
dec
add
lods
pop
mov
nop
dec
loopne
out
insb
xchg
test
lds
movsb
addb
add
jmp
pusha
pop
nop
push
jne
mov
iret
add
fs
sub
mov
or
les
mov
mov
repnz
adc
and
add
addb
data16
pusha
add
insl
in
inc
xchg
xor
push
dec
sbb
sbb
cli
sub
inc
jns
sub
test
jbe
jge
jo
mov
mov
push
dec
out
aaa
inc
jno
and
loop
fstp
ficompl
inc
fcoml
mov
cmc
daa
stos
cmp
scas
test
sbb
push
xchg
idivb
ficomps
xor
out
or
fsubrs
test
mov
loop
test
fidivs
imulb
.byte
mov
in
add
add
add
add
addb
add
sub
add
sub
sbbb
add
push
add
add
add
mov
add
mov
add
add
add
add
add
add
test
or
loopne
add
add
add
lods
or
mov
add
add
add
add
add
mov
add
push
or
fdivs
add
dec
add
adcb
add
cwtl
add
andb
add
rolb
subb
add
add
addb
add
cmp
add
pusha
add
sub
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
cmp
add
add
add
mov
add
add
add
inc
add
mov
add
test
or
les
add
add
add
add
add
add
add
add
inc
add
add
add
hlt
mov
add
add
add
add
add
mov
add
add
add
add
mov
or
mov
add
add
inc
add
js
add
jo
or
call
add
add
inc
add
mov
mov
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
mov
add
mov
add
fadds
add
add
addb
add
add
add
add
lods
add
add
add
add
inc
add
mov
rorb
rolb
add
add
add
add
add
or
mov
add
add
inc
add
lock
add
rorl
mov
add
add
inc
add
sbb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
addb
add
add
add
add
or
add
add
xchg
mov
incl
add
add
add
add
int3
adc
add
add
add
add
add
imul
and
inc
add
push
add
jae
popa
add
popa
add
add
add
add
add
push
add
add
popa
add
jae
and
push
add
jb
imul
or
add
add
xor
or
sbb
incl
add
add
add
add
add
add
add
mov
add
add
je
jae
add
add
add
test
or
clc
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
xor
xor
xor
xor
cmp
xor
xor
inc
add
add
add
sub
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
add
jb
jns
sub
and
inc
add
add
bound
popa
add
push
add
jb
insl
add
outsb
add
sub
and
ja
ja
ja
add
push
add
jns
add
add
add
or
add
push
add
js
push
add
ja
push
add
dec
add
add
arpl
inc
add
data16
inc
add
add
push
add
data16
push
add
inc
add
outsl
add
push
add
add
sldt
add
outsl
add
je
outsl
add
dec
add
add
jno
push
add
imul
add
xor
push
add
xor
add
jns
jb
popa
add
add
add
add
add
dec
add
add
add
jae
xor
dec
add
xor
add
dec
add
add
add
add
push
add
inc
add
jo
inc
add
push
add
add
imul
add
insl
add
add
add
add
push
add
add
add
jae
inc
add
add
push
add
push
add
jbe
xor
imul
add
add
add
insl
add
push
xor
inc
add
inc
add
add
add
js
xor
xor
add
add
add
adc
add
inc
add
add
add
push
add
inc
add
imul
add
add
push
add
push
add
add
js
je
js
jo
add
add
jne
dec
add
insb
add
inc
add
add
add
or
add
inc
add
add
add
jb
jb
dec
add
xor
insb
add
push
add
xor
jbe
pop
add
add
add
outsl
add
add
insl
add
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
jo
add
jns
add
add
dec
add
add
add
js
jne
ja
arpl
outsl
add
dec
add
add
add
inc
add
outsb
add
push
xor
push
add
add
inc
add
inc
add
xor
dec
add
xor
dec
add
add
add
add
add
add
push
add
arpl
inc
add
add
add
jb
push
add
add
insb
add
xor
jne
insl
add
inc
add
add
add
add
dec
add
add
push
add
pop
add
add
add
bound
dec
add
imul
add
imul
add
add
push
add
add
push
add
dec
add
add
jne
jbe
jno
add
pop
add
add
add
add
add
add
jbe
dec
add
add
push
add
add
add
push
add
insb
add
inc
add
add
add
imul
aaa
add
add
jae
push
add
xor
outsb
add
xor
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
jns
add
jb
add
add
jbe
jne
jno
jne
jb
popa
add
add
add
adc
add
pop
add
jne
js
imul
add
push
add
dec
add
add
add
add
dec
add
dec
add
jno
push
add
xor
push
add
jb
push
add
inc
add
jbe
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
jo
add
jae
xor
bound
jne
bound
add
add
js
add
add
add
add
add
dec
add
add
jb
bound
jbe
pop
add
data16
push
add
add
push
add
imul
xor
push
add
imul
add
add
add
add
add
data16
add
xor
push
add
add
push
add
add
add
push
add
je
inc
add
arpl
inc
add
dec
add
add
jae
add
add
inc
add
add
outsl
add
add
imul
pop
add
add
add
add
add
arpl
xor
add
jbe
push
add
inc
add
outsl
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
leave
or
and
and
js
insb
and
jbe
jb
imul
xor
xor
and
arpl
imul
push
push
inc
sub
je
outsb
fs
insb
outsl
outsb
and
jns
jae
aas
ds
jae
gs
bound
js
insb
outsb
jae
cmp
jb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
and
and
xor
xor
ds
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
cmp
jne
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
and
and
popa
jae
outsb
jbe
imul
and
inc
arpl
jae
and
popa
insb
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
dec
or
or
pop
or
or
or
inc
or
add
jo
or
jle
or
mov
or
lods
or
or
add
add
enter
add
add
loopne
or
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
push
dec
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
outsb
jbe
jb
push
je
imul
outsl
push
imul
push
jb
jo
