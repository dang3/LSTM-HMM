xlat
test
jb
pop
push
scas
daa
add
call
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
push
mov
idivl
fsts
mov
pusha
call
add
pop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
pop
es
adc
add
jns
dec
sub
loop
ret
xor
scas
mov
jg
jns
inc
js
test
push
sarl
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
jmp
and
jp
pop
adc
out
sub
lret
mov
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
inc
rcll
cmpb
cltd
cmp
in
push
inc
jbe
and
stos
in
icebp
adc
add
xor
loop
mov
mov
cmp
stos
fists
popa
cmpsb
fists
or
cmp
cld
inc
fdivr
lea
les
jne
loop
fldt
loop
inc
add
fwait
add
test
rorb
xor
leave
jle
mov
in
nop
cli
xchg
jo
ljmp
mov
std
repnz
scas
pop
lahf
inc
inc
pop
aaa
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
mov
add
push
pop
mov
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
sub
test
jne
mov
pop
ret
add
xor
outsl
enter
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
sti
pop
xor
int
mov
mov
das
int
gs
jb
xlat
jmp
ljmp
mov
inc
out
xor
pop
mov
in
cmp
pusha
into
lcall
ret
push
pop
clc
push
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
outsb
and
add
and
add
add
and
add
add
add
and
add
add
sub
add
out
and
add
add
insb
and
add
and
add
and
add
add
jbe
add
cli
and
add
add
add
add
lret
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
add
add
fisubs
add
nop
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
outsb
and
add
and
add
add
and
add
add
add
and
add
add
sub
add
out
and
add
add
insb
and
add
and
add
and
add
add
jbe
add
cli
and
add
add
add
add
lret
add
and
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
outsl
imul
jbe
jae
add
fs
outsl
outsb
jae
insb
gs
add
sti
add
insb
gs
jae
dec
jne
gs
add
inc
gs
je
imul
push
add
add
fs
imul
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
jae
inc
outsl
jo
inc
imul
gs
fs
outsl
outsb
jae
insb
gs
add
dec
add
insb
outsb
inc
add
add
gs
inc
imul
insb
gs
das
add
outsb
fs
je
insl
push
add
add
popa
jo
imul
push
imul
jb
je
arpl
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
gs
popa
insb
jne
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
jae
inc
jbe
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
push
add
outsb
fs
push
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
imul
jae
inc
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jl
jnp
stos
stos
lods
add
cmpsb
test
mov
mov
mov
ret
lret
lret
into
int
rcl
in
rcl
shl
ror
shl
int3
int
hlt
leave
mov
out
mov
in
mov
mov
stos
stos
stos
lea
cltd
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
not
rcl
cld
fcomp
fdivr
fcomp
xlat
fcom
rcl
sar
into
int3
int
aam
aad
rcl
sar
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
stos
stos
add
scas
sbb
mov
jnp
mov
sar
vpaddd
lret
iret
iret
iret
aam
aad
fcom
fcom
call
aam
int
int3
dec
int
call
aad
dec
int3
int
rol
mov
mov
lods
std
test
test
xchg
xchg
xchg
mov
pop
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
dec
add
push
add
or
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int
call
rcl
call
xlat
call
call
dec
int3
int3
dec
lret
lret
int
inc
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
jmp
cltd
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
push
push
pop
pop
pop
fs
sbb
push
sub
cmp
aaa
cmp
sub
and
adc
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
leave
call
iret
sar
aam
aad
aad
call
rcl
dec
leave
leave
inc
ret
ret
mov
mov
ljmp
movsb
movsl
pushf
pushf
popf
xchg
xchg
cwtl
lcall
addl
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jl
jg
jge
jb
jno
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsl
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
leave
leave
dec
mov
mov
mov
ljmp
mov
cltd
call
xchg
cwtl
xchg
xchg
cltd
fwait
fwait
in
test
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
jo
pop
pop
pop
or
jnp
nop
mov
incb
jp
idivb
jmp
outsl
outsb
out
data16
push
ret
jge
js
jp
arpl
inc
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
incl
addl
xchg
xchg
lahf
sahf
lahf
sti
mov
xchg
cwtl
mov
js
jns
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
sahf
fwait
popf
in
mov
mov
addl
mov
mov
jg
jno
jb
jae
jae
jge
jge
test
jnp
addr16
ss
cmp
mov
stos
test
sti
lods
stos
lods
lods
lods
lods
stos
test
mov
xchg
xchg
xchg
incl
jge
jns
js
jnp
jns
xchg
xchg
movsb
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
xchg
incl
xchg
mov
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
push
pop
pop
push
femms
or
dec
imul
xchg
xchg
leave
fwait
lcall
lcall
std
mov
mov
xchg
mov
mov
lcall
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jp
scas
cmpsb
lods
add
pop
adc
cmpsl
scas
call
cltd
xchg
xchg
incl
test
decb
xchg
pushf
sahf
popf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
xchg
in
test
jne
or
add
or
or
daa
daa
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
xchg
std
nop
decb
xchg
xchg
lcall
cmpsl
test
stos
cmpsl
lods
pushl
cmpsb
scas
mov
xchg
test
std
les
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
pushf
xchg
fwait
decl
mov
call
xchg
xchg
xchg
xchg
sahf
popf
popf
movsl
mov
stos
movsl
movsb
mov
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
jae
mov
jg
addl
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
insb
xchg
mov
dec
xchg
mov
sub
mov
movsl
mov
mov
stos
lods
mov
mov
add
shll
adc
mov
lcall
mov
xchg
xchg
xchg
call
xchg
lcall
cltd
cltd
pushf
pushf
popf
mov
movsb
mov
stc
xchg
lcall
mov
xchg
aad
xchg
fwait
in
xchg
xchg
out
xchg
cmc
nop
mov
cld
xchg
orb
cltd
push
test
movsb
dec
jle
lods
inc
jl
mov
jp
mov
jae
mov
outsb
ljmp
adc
stos
or
stos
or
pushl
mov
mov
pushf
mov
movsl
mov
add
mov
add
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
popf
lcall
sahf
popf
lcall
xchg
cwtl
call
xchg
xchg
call
cwtl
fwait
cld
cltd
cwtl
popf
stc
mov
xchg
pushf
cld
pushf
mov
xchg
imul
cwtl
dec
jns
cltd
cmp
push
sahf
pop
addr16
lahf
sbb
movsl
adc
jmp
adc
stos
adc
lods
adc
scas
adc
mov
push
mov
push
mov
insl
mov
lcall
lods
scas
lods
scas
movsl
movsb
mov
add
add
add
add
mov
pop
pop
adc
mov
ljmp
popf
call
pushf
sahf
lcall
movsl
mov
jmp
xchg
cwtl
decl
mov
decl
mov
fwait
jo
cltd
fs
xchg
push
jns
xchg
cmp
decl
pop
popa
call
or
pop
call
add
lahf
add
ljmp
pushl
sbb
jo
mov
and
mov
and
rolb
ret
mov
scas
scas
mov
mov
mov
add
add
add
mov
lods
add
pop
adc
lods
mov
shll
popf
pushf
popf
jmp
cmpsl
test
test
test
test
stos
ljmp
lcall
mov
decl
push
mov
popa
decl
push
pop
incl
add
push
decl
add
xchg
add
xchg
add
cltd
add
lahf
add
test
pusha
pushl
es
mov
sub
sub
sub
sub
inc
xor
enter
enter
enter
mov
mov
lret
mov
add
add
add
add
add
push
push
adc
test
mov
lahf
lcall
test
test
ljmp
mov
ljmp
mov
mov
mov
incl
or
push
incl
add
test
push
incl
add
mov
push
decl
add
cltd
add
mov
add
scas
adc
mov
aaa
cmp
cmp
dec
cmp
iret
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
cmpsb
ljmp
lahf
ljmp
lods
lods
pushl
mov
pushl
mov
ljmp
decl
push
decl
push
pop
decl
pop
push
incl
add
lea
push
call
add
pushf
add
mov
add
lods
add
pushl
cmp
int3
inc
mov
roll
call
dec
mov
xlat
dec
xchg
fmuls
fimull
fisttpll
fistl
call
xchg
std
mov
mov
movsl
movsl
movsb
arpl
mov
add
add
add
fwait
xchg
cwtl
add
inc
adc
jp
mov
test
popf
ljmp
mov
pushl
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
call
adc
decl
or
add
xchg
add
xchg
add
pushf
add
mov
add
stos
add
mov
arpl
shll
int
nop
call
push
cltd
call
push
lcall
pop
pushf
fistps
jmp
pop
popf
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
cmpsb
test
jne
lahf
lahf
or
xchg
xchg
cwtl
add
adc
ja
lahf
cltd
sahf
jmp
lahf
cltd
lahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
call
and
xchg
sbb
xchg
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
fisubl
fbld
fbld
in
test
jecxz
cmpsb
jmp
data16
call
addr16
fildl
ret
mov
cmpsb
cmpsl
mov
sahf
lahf
add
inc
aas
adc
jp
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
lcall
lcall
sbb
pop
call
add
mov
add
lods
add
mov
pushl
adc
roll
fsubrl
jmp
jo
jmp
outsl
lods
call
jae
in
jne
in
jne
out
jne
out
je
out
jb
jmp
mov
mov
cmpsl
test
sahf
sahf
sahf
pop
sahf
lahf
lahf
add
jge
cmp
imul
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
outsb
lcall
aaa
jne
lahf
xor
lcall
call
add
mov
add
mov
pushl
add
leave
sbb
fsts
jmp
ja
call
jle
in
cmpb
icebp
cmpb
xacquire
push
cmpb
aad
inc
mov
stos
cmpsl
popf
pushf
sahf
daa
mov
mov
add
arpl
add
xor
push
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
insb
mov
fwait
cmp
movsl
inc
jl
mov
ss
cltd
pop
call
add
mov
add
scas
add
mov
fs
mov
add
call
daa
cmp
call
mov
push
mov
push
xchg
ret
nop
ret
push
nop
xchg
xchg
stc
mov
out
nop
mov
inc
ret
stos
stos
mov
sahf
popf
xor
sahf
popf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
pushl
mov
mov
ret
ret
inc
ret
ret
mov
mov
jle
lcall
cmp
movsb
xor
adc
cltd
add
mov
add
lods
add
mov
arpl
mov
add
movl
mov
out
mov
out
xchg
lcall
repnz
negb
lret
cld
lahf
int3
cli
lahf
into
sti
lcall
fidivs
cli
mov
mov
mov
nop
xchg
add
add
add
cmp
or
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
inc
mov
ljmp
cmp
dec
xchg
scas
dec
mov
movsb
sub
cltd
or
add
movsb
add
lods
add
mov
popa
mov
add
enter
rorl
jne
filds
out
mov
push
movsb
int
cmc
movsb
int
clc
cmpsl
iret
sti
cmpsl
iret
cld
cmpsl
into
cld
test
stos
iret
cld
stos
iret
std
cmpsl
sar
cmc
sahf
jmp
mov
int
mov
mov
lahf
mov
xchg
add
lcall
xor
xor
sub
or
inc
bound
pop
xlat
jne
jb
mov
rol
rol
mov
mov
enter
rol
pushl
push
test
scas
push
mov
scas
dec
test
lahf
sbb
pop
jmp
add
mov
mov
add
int3
add
xlat
add
adc
in
pop
cmpsb
push
lahf
leave
cli
scas
aam
cld
mov
cli
scas
aad
sti
mov
std
mov
mov
mov
mov
std
mov
std
mov
push
cmpsb
mov
call
leave
int
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
outsl
jo
mov
mov
xlat
jmp
xlat
not
rcl
std
lret
dec
leave
leave
dec
lret
lret
leave
lret
enter
mov
mov
scas
push
mov
stos
cmp
arpl
mov
add
mov
mov
add
roll
outsb
call
add
add
call
jae
cli
lods
sar
cld
mov
cld
mov
fdivr
cld
mov
std
mov
fdivr
std
rcr
mov
int3
jmp
mov
call
lret
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
or
enter
in
pop
out
out
in
in
jecxz
jecxz
fstp
fsubp
fcmovnu
fsqrt
xlat
fdivr
int
into
mov
push
cmp
sub
mov
add
mov
popa
mov
add
lret
add
aad
jae
fldl
ja
in
ja
out
das
xchg
stc
mov
cli
mov
std
ret
std
loope
std
std
loopne
dec
loopne
std
enter
fdivrp
std
enter
lret
loopne
cli
mov
leave
call
leave
into
mov
mov
xchg
adc
add
add
incb
std
add
std
incb
hlt
div
or
out
in
pop
in
out
in
sub
in
in
dec
call
ljmp
in
out
fcmovu
fucomp
ret
stc
lods
jno
cmpsb
cmp
movsl
adc
jmp
add
mov
mov
add
int
outsl
fadds
jb
loopne
jbe
call
inc
pushf
sti
mov
jecxz
cld
lret
jecxz
dec
out
dec
in
dec
in
std
into
loope
dec
loop
dec
jecxz
dec
loop
shl
shl
cld
in
mov
xlat
inc
cmpsb
cmpsl
mov
cwtl
cwtl
add
add
add
std
add
std
add
stc
clc
add
repz
repz
in
repnz
pop
in
repnz
cmp
in
in
pop
fsubp
loop
les
sti
lahf
and
jmp
add
lods
add
mov
inc
add
movl
jno
fiaddl
jne
jecxz
jns
in
push
jl
negl
cli
mov
shl
shl
call
out
shl
call
in
std
aad
call
out
fsubr
fucomi
fld1
std
cld
iret
loop
repz
in
lret
leave
leave
rep
test
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
cld
add
testl
repz
or
aad
xor
mov
xchg
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
faddl
ja
out
js
out
sbb
push
jne
sti
ret
loopne
xlat
ljmp
fucomi
std
fucomi
fucomi
fucomp
std
fsubr
fucomp
fucomip
std
loopne
std
loopne
std
aam
push
ret
aad
out
fdivr
iret
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loope
add
leave
lds
lods
jnp
repnz
and
sahf
add
test
pusha
pushl
add
les
push
call
add
filds
jae
call
sub
cld
aam
fucomip
fsubr
fldl2e
std
fucompp
std
fsubr
jecxz
std
shl
cld
shl
cli
shl
push
into
stc
lret
fdivrp
test
lret
call
xlat
xlat
sti
mov
mov
lcall
add
add
add
add
mov
subb
imul
add
test
pusha
pushl
add
les
imul
xlat
add
loop
jp
call
xor
enter
loope
cld
int3
jecxz
cli
clc
mov
sar
hlt
mov
iret
push
mov
int3
ljmp
call
ret
sar
jmp
fsub
cmc
fsubrp
mov
mov
xchg
add
add
add
int
add
sarb
mov
add
test
pop
pushl
add
ret
add
dec
push
jo
rorl
jbe
fsts
js
loop
cmp
ljmp
call
mov
std
loopne
mov
cli
lock
int3
in
lret
shl
xlat
fcmovb
out
loop
jmp
call
popf
jmp
leave
lret
lods
lods
adc
test
cmpsb
add
ret
mov
sahf
stos
aam
dec
cmp
cmpsb
push
push
scas
and
mov
jns
mov
dec
xchg
ret
stc
lret
fs
mov
out
mov
mov
enter
lret
rcl
lret
mov
int
mov
xlat
rcl
jg
jb
loopne
gs
in
out
out
ljmp
sub
div
and
icebp
icebp
sbb
fcmovnu
or
mov
int3
add
add
add
mov
inc
mov
xchg
lock
xchg
ljmp
mov
sarb
mov
les
rcrb
int
iret
int3
shlb
rcl
push
rcl
rorl
xlat
xlat
inc
rcl
aam
fcmovnu
daa
fcomp
fcompl
fcmovu
fstl
fsubp
loop
loope
in
call
lock
add
cli
testb
sti
add
std
add
incl
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
mov
ret
enter
int
daa
int
shlb
iret
aad
sbb
aad
adc
aam
or
push
rcr
fadds
fstp
add
loopne
add
jecxz
add
in
jmp
leave
xlat
aam
incb
mov
mov
add
rol
mov
mov
mov
mov
push
rol
or
leave
enter
enter
leave
add
aad
add
xlat
add
xlat
aam
xlat
aad
aad
add
fabs
add
fiaddl
loop
filds
in
out
repnz
icebp
add
incb
std
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
ret
mov
mov
mov
ja
stos
test
and
add
add
add
add
add
add
add
add
mov
push
mov
mov
jmp
rcl
cmc
rcl
sar
ror
iret
cli
int3
lret
lret
stc
int3
lret
lret
hlt
mov
mov
lods
fwait
xchg
xchg
xchg
dec
ds
aas
and
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
ror
into
xlat
xlat
call
aad
rcl
sar
int
iret
dec
int3
int3
mov
mov
cld
stos
stos
stos
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jne
je
gs
dec
dec
inc
cmp
sub
sub
ss
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
call
rcl
call
rcl
dec
lret
lret
inc
mov
mov
mov
ljmp
lahf
sahf
xchg
xchg
xchg
jmp
outsl
jo
pop
push
pop
dec
add
add
add
add
add
add
addb
addl
aam
imul
push
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
jno
outsl
adc
mov
mov
ret
mov
mov
mov
test
pushf
pushf
call
xchg
xchg
cltd
fwait
lcall
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
cwtl
cwtl
fcoml
addb
jl
jnp
js
jns
jns
jns
jns
jns
je
jae
push
push
push
cmp
jne
pushf
sahf
popf
mov
scas
lods
repz
lods
lods
sti
scas
scas
lods
std
cmpsl
test
std
pushf
sahf
popf
call
xchg
call
mov
scas
jmp
scas
scas
leave
movsl
cmpsb
cmpsb
cltd
je
jb
adc
adc
add
add
add
add
outsb
insl
insl
pop
lods
movsl
test
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
mov
xchg
xchg
xchg
lcall
cmpsb
test
mov
scas
std
mov
scas
mov
mov
mov
movsl
mov
addl
add
add
popa
pop
pusha
or
lods
mov
movsl
mov
mov
mov
nop
call
sahf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
imul
jge
subb
mov
std
nop
xchg
ljmp
jle
pushl
pop
mov
jge
mov
scas
stos
insl
stos
stos
test
add
add
add
pop
or
mov
in
movsb
cmpsl
call
xchg
xchg
lcall
cltd
xchg
cltd
cltd
cltd
lcall
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orb
xchg
imul
sahf
dec
jl
mov
aaa
jbe
mov
jae
scas
push
outsb
pushl
sbb
mov
mov
scas
mov
movsl
movsl
movsb
push
popa
pop
popa
or
mov
call
popf
lahf
jmp
mov
xchg
decl
addl
xchg
jb
cld
xchg
pop
cmp
dec
js
cmp
nop
sub
xchg
sbb
lcall
push
ljmp
sbb
mov
outsb
pushl
sbb
jbe
mov
test
scas
xchg
sahf
popf
popf
adc
add
add
pop
pop
popa
or
lods
mov
test
mov
test
stos
stos
test
lcall
pop
jnp
mov
imul
sub
mov
pop
incl
or
mov
push
decl
add
fwait
add
or
pushl
sub
inc
jl,pn
lds
jle
leave
das
cmp
xor
cwtl
inc
test
mov
test
test
add
add
add
pusha
or
cmpsb
stos
in
mov
cmpsl
ljmp
mov
pushl
xchg
lahf
call
adc
mov
pop
incl
add
push
call
add
lahf
add
movsl
add
mov
insl
inc
ss
inc
mov
into
inc
mov
aam
nop
call
inc
xchg
fmuls
call
arpl
stc
mov
mov
mov
std
add
add
add
pop
or
popf
mov
ljmp
mov
pushl
mov
ljmp
push
jge
sbb
pusha
decl
or
push
call
pop
ljmp
add
jne
rorl
fcoms
fcompl
fistps
jmp
pop
mov
fildll
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jp
pushf
cwtl
lcall
scas
mov
mov
mov
mov
mov
mov
sahf
data16
xchg
sub
imul
and
xchg
push
pop
call
add
add
mov
pushl
xor
fsubl
jmp
insb
stos
jmp
outsb
stos
jmp
jno
in
jno
jmp
jp
call
test
mov
inc
addb
add
dec
pop
outsl
outsb
imul
test
lcall
mov
mov
mov
jmp
cmp
jmp
sub
lcall
add
mov
add
mov
inc
or
xchg
jmp
jns
jmp
test
push
mov
out
mov
mov
test
push
cltd
fwait
lcall
sub
push
push
push
dec
pop
gs
loopne
mov
mov
sarb
mov
xchg
test
sub
lcall
ljmp
add
mov
adc
jmp
pop
mov
push
xchg
push
xchg
push
xchg
clc
cltd
lret
fwait
lret
xchg
jmp
stos
inc
mov
stos
popa
lahf
mov
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
ret
pushl
push
xchg
lods
dec
test
mov
add
add
mov
arpl
mov
add
and
push
movsb
int
imulb
into
cli
test
iret
cld
lods
sar
cli
test
jmp
mov
inc
rol
stos
stos
stos
jne
sahf
pushf
or
add
add
push
dec
dec
aaa
jb
jae
test
int3
int3
out
into
int3
cmc
leave
lret
lret
std
enter
movsb
mov
test
inc
jle
mov
add
mov
arpl
rolb
dec
add
flds
xchg
push
xchg
sti
mov
cld
mov
xlat
cld
mov
mov
sar
jmp
enter
repz
lods
mov
add
add
add
add
pop
or
aam
dec
loopne
loope
loope
fcmovnu
ffree
fcmovu
fcmovu
xlat
out
shll
cmpsl
sub
pop
pushl
add
leave
add
add
in
jp
repnz
mov
sti
inc
loop
dec
loopne
dec
fdivrp
dec
fdivrp
std
leave
loopne
sti
lock
lret
divb
popf
pushf
sbb
add
add
std
incb
std
incl
ljmp
jmp
in
xor
loopne
loop
les
mov
mov
add
mov
fs
add
into
add
fldl
je
ljmp
sti
ret
std
shl
shl
shl
std
aam
call
out
call
out
cld
shl
push
fcos
fcmove
sar
mov
mov
add
incb
incl
std
cld
incb
aad
aad
mov
pop
xchg
lahf
or
test
pusha
pushl
add
rolb
jo
fiadds
jbe
out
and
shl
fsubr
fucompp
cld
xlat
jmp
std
xlat
out
cld
fsub
cld
aad
push
jmp
iret
sti
mov
lahf
lahf
das
add
add
int3
into
into
or
bound
ljmp
add
movb
call
add
loop
jns
in
xor
cli
int
clc
lret
test
bnd
icebp
ret
aam
lock
sar
out
aad
in
ljmp
ljmp
stos
das
incl
aam
aad
mov
jae
push
addr16
mov
insl
inc
sbb
int3
and
cs
fists
jecxz
mov
out
loop
leave
jmp
fidivrs
lret
leave
loopne
iret
mov
jecxz
ficompl
out
call
rorl
mov
add
stos
stos
stos
add
xchg
movsl
les
pop
xchg
mov
xchg
fidivrl
jle
rol
lods
mov
mov
les
aam
int
ror
into
pop
rcl
rorb
xlat
xlat
cmp
das
jecxz
frstor
jecxz
icebp
adc
jmp
or
std
incb
std
std
incl
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
rcl
aam
mov
rcl
or
loopne
or
int
add
std
std
add
std
incb
fwait
cltd
cltd
add
mov
or
into
into
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
rol
mov
xchg
leave
enter
enter
sarl
scas
mov
lods
stos
lods
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
rcl
sar
iret
iret
into
std
mov
stc
mov
test
sarl
gs
pop
pop
add
add
add
add
add
add
add
add
jb
jno
addr16
das
cs
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
aad
dec
into
into
dec
enter
mov
scas
jmp
mov
push
add
add
add
add
jne
jne
xchg
adc
outsb
outsl
ret
arpl
outsl
outsb
outsb
jb
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jno
and
add
pop
add
add
jb
jae
fwait
xchg
lcall
test
clc
xchg
test
addb
push
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
stos
mov
mov
lea
cld
sahf
sahf
sahf
cmc
cwtl
lcall
push
push
push
imul
jg
xchg
aam
lea
lcall
pushl
xchg
mov
stos
mov
stos
lods
lods
push
stos
lods
stos
add
add
add
cmpsl
mov
mov
scas
cld
xchg
xchg
xchg
call
lcall
cwtl
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
arpl
std
pushf
inc
ja
cmpsl
ss
scas
sub
pop
jno
mov
insb
pushl
sahf
scas
lock
mov
imul
int
add
add
test
pop
lods
movsb
lods
test
sahf
pushf
popf
jmp
mov
xchg
decl
push
js
xchg
inc
je
mov
imul
xchg
adc
xchg
or
or
mov
outsl
pushl
and
inc
daa
jnp
ret
aas
xchg
rcrb
subl
jne
push
mov
mov
cmpsl
pushl
mov
lcall
sub
adc
mov
push
decl
add
xchg
add
mov
adc
shll
dec
aas
mov
rolb
call
inc
call
push
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
call
pop
push
call
add
stos
add
mov
push
xchg
fistpl
fistps
jmp
pusha
movsl
jmp
data16
call
lcall
cmpsl
cmpsb
cmpsb
pop
add
add
arpl
adc
popf
fwait
lcall
mov
mov
lcall
xor
cwtl
and
call
add
stos
add
mov
xor
jmp
outsb
stos
call
jl
out
jle
out
jge
fstps
mov
mov
add
add
adc
push
cmp
mov
mov
rol
mov
fs
movsb
inc
jle
sahf
and
popf
add
test
pop
pushl
insl
fmull
in
mov
notb
leave
push
xchg
enter
mov
movsl
cmpsb
sub
aas
inc
aas
adc
push
xchg
mov
mov
inc
mov
xchg
ljmp
sbb
cmpsb
add
mov
gs
add
adc
jmp
scas
push
cmpsl
int
cli
stos
iret
cld
lods
sar
cld
lods
sar
cld
lods
sar
in
mov
inc
mov
movsb
ds
std
add
outsl
inc
scas
mov
mov
aad
mov
aad
rcl
out
lret
lret
mov
mov
jmp
inc
add
add
out
test
stc
pop
mov
inc
std
ret
cld
ret
fcos
icebp
mov
ret
in
test
dec
addl
stos
add
jmp
or
call
in
outsb
movsl
es
ljmp
add
lret
add
faddl
jne
out
cmp
std
iret
out
shl
call
out
std
aad
shl
push
fdivr
aad
int
scas
scas
lods
popa
addb
add
incl
std
incb
lret
lret
shrl
mov
add
mov
add
loope
jp
repz
movsl
inc
loopne
aad
cld
aad
cld
shl
cld
aam
stc
shl
push
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
mov
cld
scas
push
fs
mov
or
fstpl
jg
jmp
lods
cld
out
mov
aam
call
mov
shl
out
aam
jmp
scas
lds
cltd
fwait
add
rol
or
popf
lods
xchg
inc
and
push
mov
shll
lret
mov
fdivrs
adc
int
xlat
int
pop
xlat
dec
jecxz
loopne
call
in
out
sbb
sarb
cmp
movsb
lods
arpl
lods
mov
ret
mov
lds
int3
sbb
bswap
int
or
aad
push
incb
jg
addl
stos
incb
mov
std
incl
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
or
inc
sti
cmp
sets
aad
stc
adc
je
mov
out
mov
adc
fldt
ja
cmp
ds
mov
in
rcr
cmc
out
cmp
mov
mov
daa
test
mov
push
insl
jge
cmp
stos
loope
sub
xor
mov
out
add
jns
scas
pop
xchg
cs
dec
in
add
fstps
aam
out
mov
int3
int3
aas
jp
pop
jmp
sub
and
ss
add
dec
push
cmc
push
sub
mov
and
xchg
mov
mov
sti
iret
loopne
daa
add
pop
dec
cmp
shlb
popa
or
div
int
jae
repnz
pop
insb
mov
loop
cmp
fwait
cld
dec
add
dec
sti
mov
out
int
sub
out
jle
adc
dec
orl
sub
sbbl
pushf
xor
into
lret
adc
and
jle
mov
jmp
or
aaa
xor
push
push
mov
add
int3
loope
das
aam
sub
and
and
imul
cmp
pop
and
mov
pop
outsl
lcall
cmp
pop
jbe
mov
push
hlt
ja
sub
ret
test
mov
fcmove
mov
popa
hlt
cmp
loope
sub
inc
clc
outsl
xor
ret
jmp
add
xor
rep
int3
push
outsb
ljmp
gs
and
cmp
mov
imul
jle
push
mov
sbb
xor
xchg
sub
cld
pop
sti
shrl
sub
rolb
mov
jae
cmp
or
mov
test
negb
sbb
dec
push
ret
push
movsb
xlat
push
push
aad
or
gs
and
repnz
pop
js
lret
mov
xchg
rolb
divl
lods
popa
mov
test
cld
jmp
nop
dec
jl
ja
dec
mov
out
cmp
pop
cli
xchg
cmp
xchg
imul
fbstp
test
push
ret
or
push
lds
int
rcll
mov
pushf
adc
in
int
mov
dec
ret
xchg
cmp
shl
lret
shll
cltd
scas
sbbb
mov
push
fcomip
in
iret
xchg
sub
cmp
pop
add
ret
jmp
icebp
das
std
imul
rcr
mov
sahf
sahf
mov
or
jl
mov
xor
les
cli
roll
jmp
adc
pop
mov
xorb
fidivs
scas
mov
test
inc
insl
sub
or
adc
cmpsl
ljmp
cmp
shrl
je
es
add
gs
push
fldt
sub
dec
sahf
int3
popl
pop
add
push
in
outsb
mov
push
jl
stos
and
pop
xor
aas
int
loopne
jae
sub
cwtl
std
xchg
push
pusha
add
dec
adc
int
mov
addr16
sbb
xor
mov
ss
inc
add
jmp
or
fstps
or
sbbb
call
in
std
icebp
inc
aaa
sahf
mov
fwait
ret
les
out
pop
shl
xorl
push
lds
test
rclb
pop
xor
add
lret
imul
insl
movsl
sub
in
into
fld
mov
rcll
aas
lahf
sbb
adc
jle
inc
inc
push
or
push
rcrb
dec
dec
push
push
nop
mov
stos
jmp
test
push
add
jge
enter
aas
testb
int3
sub
and
push
jmp
xchg
cld
jo
mov
sti
lds
ficomps
push
adc
push
mov
movsl
into
out
push
scas
mov
pop
iret
xchg
mov
mov
lods
mov
mov
xchg
mov
xor
das
imul
and
mov
lret
cmpsl
pop
adc
xchg
movb
stc
xchg
popa
scas
jae
add
std
test
mov
inc
ja
cmc
pusha
adc
dec
mov
cmp
mov
cmp
pop
cmc
xchg
sub
mov
sti
pop
shlb
sbb
jecxz
push
dec
jnp
outsb
cld
or
fxch
or
dec
ds
mov
lcall
insl
insl
push
insb
icebp
mov
roll
in
lret
cs
mov
and
mov
ss
xchg
cld
push
mulb
jmp
xchg
sub
cmp
mov
stos
cmp
mov
stos
leave
sub
hlt
sbb
outsl
jecxz
or
imul
cld
dec
push
jl
adcb
push
push
add
lret
lret
pop
mov
lret
xor
mov
sub
inc
ss
jne
xor
push
and
mov
or
repnz
loope
repz
xchg
lds
cld
rolb
pop
subb
pop
xlat
cltd
ss
scas
mov
pop
mov
ds
cmpsl
add
or
mov
push
lods
lret
scas
mov
sar
mov
push
xchg
mov
add
les
xor
push
sub
push
lahf
jmp
fldcw
dec
pop
scas
adc
mov
inc
xor
jns
sub
mov
dec
cmp
cltd
or
pop
pop
inc
fnstsw
jl
dec
aaa
arpl
pop
or
push
adc
mov
frstor
push
lods
dec
out
das
jg
popa
ljmp
xor
mov
mov
xorb
mov
pop
push
pop
sahf
test
scas
cmpsb
and
xchg
stc
inc
xlat
aaa
and
cmc
mov
movsl
stos
jl
fadd
dec
loopne
std
lcall
push
mov
sbb
sahf
cmp
iret
out
ss
push
in
and
mov
or
xchg
xchg
sub
loope
nop
adc
mov
inc
or
aad
lcall
mov
mov
leave
jecxz
adc
sub
fnsave
hlt
sbb
xchg
iret
ja
push
lods
fcomps
xor
cmp
cld
fld1
and
dec
inc
mov
jns
jns
fwait
lcall
out
in
pop
pop
adc
insb
das
add
mov
push
testb
movsl
adc
xchg
push
in
divl
sub
stc
mov
sub
push
ficomps
popf
xor
icebp
iret
and
fcmovnu
std
and
xor
push
adcb
andl
xor
sub
mov
das
jl
fidivl
sahf
mov
rcrb
aam
and
adc
mov
xor
jne
xsha1
cmpsb
leave
xchg
shr
inc
push
inc
sbb
outsl
or
fcompl
in
das
mov
adc
lahf
test
xor
insb
push
test
sbb
sti
in
lods
andb
leave
fcoms
cwtl
repz
push
ficoml
add
xchg
inc
es
hlt
gs
mov
cwtl
insl
test
mov
psubd
xor
add
pop
mov
mov
rcl
in
or
cmpsb
cmp
pop
inc
les
jge
mov
lret
iret
aas
add
add
push
aas
push
mov
je
adc
cltd
xor
jecxz
icebp
adc
mov
packuswb
insl
mov
shl
repz
inc
shrb
addr16
cwtl
xor
out
aam
movsl
add
es
push
xchg
js
in
add
pop
xor
xor
sti
push
jecxz
test
loopne
adc
imul
loopne
mov
mov
cmc
stos
add
inc
and
lcall
jnp
cmpsl
popa
cli
adc
pushf
inc
repz
and
mov
js
inc
fsubr
fwait
mov
lret
or
shrl
data16
cltd
aas
icebp
xchg
lcall
ljmp
adc
aaa
dec
out
mov
stos
mov
leave
or
mov
add
dec
out
sub
push
test
lret
stc
lock
jecxz
sub
test
montmul
cmpsb
inc
cmpsb
push
out
popa
xor
xchg
clc
jae
sub
cmp
add
ret
dec
xchg
mov
add
jge
sub
fwait
test
not
mov
enter
xchg
mov
jne
mov
xchg
sbb
data16
add
sbb
inc
bound
inc
out
xor
push
mov
lods
mov
pop
outsb
into
fsubrs
nop
je
sub
dec
mov
ret
dec
pop
push
iret
rorb
les
outsl
js
insl
scas
xchg
sub
mov
or
cmc
cmp
xorb
fists
and
lahf
dec
clc
sub
or
jg
sbbl
xchg
mov
sbb
cltd
xchg
and
loopne
outsl
mov
pushl
ret
mov
add
movsb
pop
scas
adc
popf
push
add
push
jae
ljmp
cmp
xchg
addb
pop
jb
cmpsl
add
imul
mov
mov
cmc
scas
push
movsl
loopne
xor
inc
add
int
inc
fs
jg
mov
cmp
dec
xor
addl
sbbb
dec
pushf
pop
fs
imul
cs
jecxz
or
scas
xchg
pop
sub
mov
aad
mov
insl
fwait
inc
mov
js
outsb
mov
mov
fidivrs
adc
xor
adc
mov
fs
cld
test
or
ficoml
nop
lahf
dec
jne
inc
ds
mov
repnz
mov
jbe
cwtl
out
lret
js
std
inc
sarl
dec
movsl
mov
mov
loopne
int
pop
fidivs
inc
fcomps
xlat
xchg
testb
in
or
xor
ja
sar
xchg
lds
dec
loope
inc
jmp
cmpsb
les
adc
pop
repz
xchg
outsl
jecxz
int
nop
test
xor
xor
les
mov
outsb
add
dec
or
gs
adc
push
mov
fiaddl
cltd
in
or
inc
add
xchg
repz
add
scas
xchg
pop
repz
roll
cltd
and
inc
jno
data16
sbb
aas
pop
lock
aaa
incb
mov
cli
pushl
leave
sbb
dec
ljmp
sahf
fwait
test
jge
fwait
jp
loopne
out
or
lock
imul
cmp
int
xor
push
shlb
xchg
ja
jns
test
out
push
lea
mov
call
push
adc
cmpsl
jb
rorl
sub
aad
stc
pop
mov
mov
lds
jmp
idivb
fmull
mov
mov
fsubl
mov
clc
add
ja
push
lods
cmpsb
cwtl
and
fbld
pusha
divl
rcrl
fiaddl
pop
repz
push
lods
push
aad
int
je
cld
andb
or
aam
xchg
sub
rcr
jbe
sub
pop
inc
mov
jo
ja
imul
jmp
xchg
jecxz
push
mov
sbb
pusha
leave
dec
lea
cltd
and
mov
scas
push
and
in
cmp
mov
cmp
mov
clc
sbb
or
gs
cmp
mov
int3
arpl
test
aad
mov
mov
out
sbb
xlat
add
xchg
scas
inc
in
adc
inc
cmc
imul
lods
inc
js
test
test
in
jmp
in
aad
or
adc
xchg
mov
pop
sbb
out
sbb
jmp
imul
outsb
add
fldl
and
stc
mov
fimull
push
jmp
outsl
int
pop
lcall
jo
nop
daa
movsb
xchg
inc
fadds
daa
pusha
divl
adcb
xchg
or
sub
stc
nop
sub
scas
pusha
dec
inc
fcoml
dec
loopne
jb
lret
cs
aas
call
or
adc
mov
or
mov
or
imull
fdecstp
int
mov
lret
cld
sbb
out
sbb
dec
push
aaa
js
sbb
or
stc
stos
loop
push
int
rol
push
out
cmp
pop
add
pop
xchg
fisubrl
and
aaa
fsubrl
lret
cmp
cmp
mov
jecxz
push
fcomps
pop
nop
stc
lea
push
xchg
outsl
movsl
hlt
xchg
ja
in
js
int
outsl
ror
xchg
aad
scas
inc
repz
mov
cmc
cmpsl
pop
into
fidivl
out
mov
push
dec
setae
andb
pop
fcom
mov
fists
fstpt
fiadds
popa
sbb
add
xchg
lret
sbb
fbstp
fsubrs
xor
pop
or
pop
test
mov
jne
mov
repz
shrl
adc
mov
dec
mov
lahf
ss
rol
pop
in
data16
pop
xor
push
mov
cltd
subb
in
add
gs
mov
insl
loope
mov
fs
xchg
mov
out
hlt
aam
in
adc
inc
fimull
cmp
pop
sub
xlat
cltd
test
xchg
sub
jp
shrb
fldl
sub
test
push
or
mov
pop
jno
ljmp
adc
cmp
dec
loop
imul
popf
imul
pushf
leave
lea
lret
inc
fdivrp
mov
cmp
icebp
test
cmp
xchg
push
or
mov
adc
int3
shrl
mov
out
xchg
xchg
mov
or
or
add
cs
sub
imull
lret
inc
shrl
adc
mov
or
push
ljmp
sub
mov
mov
call
mov
inc
out
decb
shrl
in
ss
lcall
lock
or
add
and
cmp
lods
popa
xchg
cs
dec
out
test
negb
rol
pop
out
test
ret
call
or
insl
cmp
sbb
jge
cld
xchg
push
sbb
ret
jecxz
sbb
inc
xchg
out
xchg
icebp
call
sbb
xor
movsb
cwtl
and
inc
mov
mov
repnz
jp
je
clc
mov
jo
lea
jno,pn
cli
xchg
hlt
xchg
leave
pusha
adc
jl
lods
xor
test
xchg
mov
and
outsb
add
pop
xchg
lock
xorb
pop
shll
filds
lods
inc
mov
ret
lret
mov
mov
les
shrl
mov
test
pop
sahf
andl
cmpsb
cmp
xchg
jb
mov
popf
cmc
xor
adc
mov
xchg
mov
fnstenv
lds
pushf
xor
or
dec
ds
mov
dec
push
mov
pop
and
mov
imul
dec
xor
mov
inc
jo
mov
dec
cs
stos
inc
pop
dec
mov
pusha
jnp
dec
cmp
scas
inc
bound
scas
inc
test
les
cmp
cmpsl
cmp
pop
repz
out
mov
fidivrs
call
iret
popf
push
popf
sbb
cmp
cmp
nop
call
lock
loopne
cmp
add
push
lcall
xchg
mov
xchg
in
cmp
xchg
sub
addl
repnz
ss
sub
jp
mov
sbb
ds
add
aam
jnp
cld
xchg
daa
popf
fidivl
dec
sub
test
lret
sti
xchg
adcl
sub
lea
or
nop
daa
push
cwtl
cld
xchg
push
xor
jb
aas
jle
jno
cwtl
das
in
or
mov
ret
sub
mov
shrb
sbb
add
push
je
aam
dec
jbe
sahf
lret
clc
into
sbbl
sbb
jbe
les
xchg
sbb
out
repz
unpckhps
cld
test
mov
push
les
out
bound
repz
add
mov
les
cmp
mov
mov
jnp
sti
mov
dec
test
cwtl
pop
ret
scas
outsl
push
loope
mov
ret
xor
ja
push
loope
stos
iret
hlt
jo
ret
hlt
inc
loopne
out
xor
cmp
test
fdivrs
clc
push
or
inc
in
call
xor
out
add
push
imul
lea
jb
es
mov
xor
shrb
push
and
cmp
mov
sub
clc
in
jae
add
or
int
enter
cs
repnz
mov
mov
mov
inc
xlat
dec
or
push
jp
pusha
int3
aam
incb
sbb
cmp
xor
iret
gs
sub
aas
adc
lret
iret
fisubrl
inc
jnp
ljmp
jl
cs
arpl
hlt
adc
pop
or
icebp
mov
into
push
pop
cmp
clc
adc
mov
jo
push
jmp
dec
in
ficoml
aas
xor
jl
cmpsl
mov
and
daa
sbb
pop
and
daa
mov
bound
xchg
add
roll
lea
insl
xor
roll
andl
stc
nop
loope
dec
and
ret
lahf
rcr
sbbl
mov
jge,pn
jae
arpl
mov
pop
lret
inc
loopne
inc
int
test
aad
iret
dec
sbb
inc
rol
adc
xchg
repz
pop
insb
cmp
rclb
sub
aam
outsl
adc
repz
icebp
jecxz
outsl
adc
mov
mov
rcrl
adc
loopne
mov
cvtpi2ps
pop
test
xchg
stos
cmpsb
loop
in
adc
pop
jmp
push
std
scas
dec
jp
jbe
jnp
pop
mov
jnp
xchg
jg
cmp
xorl
adc
cmp
xchg
outsb
inc
jns
mov
mov
jbe
or
enter
jmp
xor
push
js
xchg
dec
pop
sub
ljmp
out
loop
push
mov
in
or
lcall
mov
sti
adc
incl
mov
cli
negl
call
mov
gs
enter
inc
jmp
shll
leave
pusha
adc
lods
fs
mov
sub
gs
pop
pop
int
stc
jg
out
icebp
xor
test
dec
int
into
data16
adc
daa
xchg
aad
mov
dec
mov
xchg
ficoms
pop
gs
call
inc
popa
test
stc
cmp
add
mov
pop
out
ret
lcall
cmpsb
int3
arpl
xchg
lcall
or
xchg
in
adc
push
sbbl
add
sub
ja
add
jecxz
arpl
push
addr16
cmc
pop
lock
leave
pop
xor
das
lds
addr16
ds
xor
pop
xor
shlb
scas
cmp
outsl
sarb
pushf
xor
cmp
sub
repnz
dec
xchg
adcb
sbb
pop
cmp
lcall
ds
push
negl
adc
inc
inc
pop
lods
lcall
out
call
hlt
mov
mov
cmp
xchg
sub
jnp
push
je
mov
aas
jno
imul
cmc
mov
test
jb
adc
aad
out
mov
jl
add
xchg
pop
repnz
call
mov
sbb
out
inc
sbb
jge
jp
push
pop
add
rcrl
ss
xchg
jbe
pop
xor
sub
jns
fs
dec
push
out
lods
popa
cmp
pop
call
pop
pop
push
call
jns
dec
xor
xchg
sub
pushf
popa
aas
ja
push
inc
aas
ret
push
sbb
sbb
and
cmp
dec
jmp
inc
and
das
out
xchg
push
cmp
mov
cltd
xchg
test
cmp
cmp
in
mov
cmp
and
jno
sar
or
fbstp
das
push
push
xor
sbb
cmpsl
je
bound
inc
or
mov
pop
popa
fs
outsb
adc
imul
jbe
cmp
push
adcb
push
push
leave
lcall
cltd
rorl
jae
clc
cmp
sub
adc
scas
stc
sub
jbe
fwait
sarl
icebp
lods
mov
xor
sti
cmpsb
js
shll
jle
mov
mov
pushf
lahf
ss
adc
lods
shl
repz
push
orl
lods
fstps
popa
clc
clc
aas
pusha
divl
je
rclb
orl
pop
test
aas
sbb
push
dec
and
in
pushf
xor
push
mov
cltd
xor
rcll
ret
jne
ja
pop
neg
je
jbe
sbb
push
pushf
loopne
pusha
or
data16
sarb
adc
stc
cmc
outsb
mov
pusha
mov
pop
scas
mov
add
scas
cli
pop
cmc
sub
push
jmp
push
addb
add
push
incl
xor
pop
cmp
loope
enter
mov
iret
loope
jl
lret
sti
mov
pop
int3
and
lods
mov
sbb
dec
into
pop
repz
and
aam
sub
push
lret
popa
jmp
and
fsubrs
sbb
add
mov
fwait
inc
xchg
shll
pop
mov
pusha
ret
mov
fs
sti
jmp
loopne
hlt
jecxz
pop
outsb
push
xchg
jmp
inc
insl
mov
lahf
scas
xor
adc
in
adc
pcmpgtd
add
pop
fiadds
movsl
push
jno
lea
js
inc
inc
stos
mov
cmp
mov
outsb
sbb
inc
lret
ss
xor
dec
and
xor
push
inc
movsl
dec
mov
jb
insb
sbb
sbb
jbe
insb
adc
sti
nop
movsb
inc
mov
xlat
fisubrl
and
jne
jae
inc
inc
mov
inc
pop
sbb
mov
cmpsb
push
pusha
testl
push
mov
fisubrs
push
addr16
in
cli
addr16
sub
iret
data16
cld
or
cmpsl
and
aam
fwait
out
jne
add
cmc
std
jp
nop
push
arpl
ret
loopne
pop
scas
push
and
cmp
inc
inc
xchg
sub
lock
mov
jne
mov
addr16
imul
push
sub
mov
fnsave
nop
jp
sub
push
pop
sbb
cmp
out
pop
stos
andl
cmp
gs
int
mov
sub
loope
in
ja
shll
xor
sub
insl
pop
jle
stos
jb
movsl
nop
movsb
cmpl
out
divb
rolb
nop
stos
repz
shrl
or
cs
insb
jae
aad
pushf
shll
femms
or
in
outsb
fidivrs
insb
nop
rorl
mov
mov
mov
addr16
pop
add
out
jnp
cmp
mov
repnz
sbb
or
cli
fistpll
int3
ficoms
xchg
stos
clc
mov
pop
sub
sub
mov
sbb
mov
jmp
push
sub
sbb
mov
notb
mov
lods
sub
push
inc
cs
cmpsl
push
popa
push
test
mov
out
pop
testb
add
dec
scas
loop
sbb
dec
fdivrs
rorb
jo
imul
into
adc
sbb
mov
cmp
ljmp
rol
aad
cwtl
mov
adc
mov
mov
popf
aam
outsl
mov
sbb
cmp
popl
sbb
cmp
sbbl
inc
ja
pusha
addb
and
stc
mov
sbb
scas
mov
push
jno
and
daa
mov
mov
popa
insl
das
push
cli
add
and
add
bound
loope
jge
je
cmp
sub
jmp
sbbl
mov
or
mov
xor
sbb
inc
inc
adcl
sarl
and
lahf
xor
lock
mov
jl
sub
mov
insl
add
lods
mov
push
test
xchg
push
subb
mov
and
stos
mov
loopne
xor
ret
nop
daa
clc
out
xor
aaa
inc
adc
adc
sarl
dec
jge
add
pop
fldl
orb
out
or
popa
jne
loop
je
xor
popa
icebp
pop
iret
call
test
repnz
addb
movsl
cli
sbb
int
repnz
xchg
fidivl
and
in
daa
pop
mov
lahf
nop
dec
test
adc
scas
push
outsb
mov
stc
nop
es
mov
and
mov
fsubl
aad
stos
push
mov
mov
adc
les
lds
sub
push
sahf
push
mov
xor
mov
fidivs
sti
cmp
mov
arpl
testb
mov
mov
push
jecxz
push
xchg
mov
and
or
sub
sbb
dec
cmp
jle
inc
jp
in
jle
mov
icebp
in
cmp
jns
lock
outsb
mov
or
xchg
or
mov
stos
ja
jae
adc
sbb
push
enter
popa
iret
cmpsl
push
hlt
jmp
sbb
xchg
sub
adc
lret
mov
inc
test
mov
mov
inc
or
xorl
jg
pop
cld
and
into
inc
and
fnstcw
push
jne
aas
cmpsl
cmp
cli
nop
in
cld
sbb
push
pop
imull
in
sbb
ret
sub
fdivr
ss
loope
pop
mov
add
jnp
insb
stc
jno
nop
jbe
pop
inc
fisttpl
mov
stos
test
or
push
data16
or
or
mov
sub
and
test
movsl
mov
sub
repnz
xchg
mov
out
into
dec
scas
xchg
int
fcmovnb
push
fwait
sahf
mov
xlat
cmpb
call
nop
xchg
fsubl
scas
lcall
mov
push
mov
xor
pop
dec
or
movsb
or
pushf
and
jmp
add
adc
cmp
cmpsl
sbb
ja
and
pusha
ret
cld
cwtl
xchg
sub
int
push
hlt
add
push
ss
mov
add
push
js
rcrl
xor
out
mov
sbb
fsts
es
mov
sub
out
imul
jmp
mov
dec
inc
fstps
popf
es
shrl
movsb
push
xchg
hlt
ret
lahf
addr16
rcl
stos
mov
xchg
sbbb
sub
cwtl
sbb
call
popf
cmp
xor
xlat
mov
pop
and
pop
cmp
ffree
shll
imul
sub
lcall
iret
xchg
mov
mov
xlat
aad
inc
movsb
and
inc
or
dec
addr16
mov
dec
cmpsb
dec
jmp
jb
data16
xchg
pop
rcr
jecxz
cmc
sbb
dec
cmc
ljmp
adc
xchg
mov
mov
inc
and
push
jae
mov
push
mov
ja
les
pop
popa
call
insl
mov
shll
fwait
sahf
xor
das
mov
push
pop
xchg
shrl
popa
pushf
mov
or
jl
gs
xor
pop
jl
pop
into
cmp
jmp
dec
sub
pop
xor
jb
shrd
jg
test
ret
fidivl
push
cltd
xchg
fistl
movsb
push
enter
js
push
outsl
iret
push
lock
int3
inc
pop
cmpsb
mov
push
fimull
cmpsb
mov
dec
add
add
sub
ds
clc
out
push
popf
pop
push
imul
or
add
xlat
sub
leave
andl
sbb
divb
insl
add
icebp
add
adc
mov
push
aaa
cmp
add
mov
and
mov
mov
or
mov
cld
mov
or
cmc
lods
outsb
rcl
push
out
rcrb
jge
repz
rolb
mov
pop
adc
int
xchg
mov
out
cmp
rorb
fsubrs
push
lods
scas
adc
mov
xor
xchg
sub
jb
icebp
loopne
sub
jle
rcl
outsl
aas
inc
and
lea
ss
les
pop
sbb
repnz
xlat
xor
imul
sbb
inc
push
push
pusha
jge
or
push
daa
adc
push
adc
scas
std
divb
or
mov
cmc
and
add
inc
in
cwtl
arpl
lea
stc
cli
nop
dec
or
lods
and
mov
xchg
lea
pop
xchg
mov
outsb
or
addr16
mov
pop
and
mov
dec
inc
mov
sub
and
cmp
push
aam
hlt
adc
add
xchg
in
pop
mov
loopne
add
pop
stos
inc
mov
addb
inc
fisttpll
out
loop
mov
idivb
pop
aad
mov
cld
pop
movsb
call
cltd
ss
in
aam
pop
hlt
jge
fucomp
cmp
mov
pop
and
imul
sub
push
cmp
push
dec
loope
dec
loop
add
and
in
call
leave
sbb
jnp
movsb
cmp
xor
pop
dec
xchg
into
xor
das
movsl
popa
movsb
xchg
ficoml
std
movsl
imul
decl
mov
scas
sub
push
xor
sub
clc
jno
push
test
push
push
jmp
xor
sub
cmp
pop
xchg
pop
cmc
cmp
out
sahf
cltd
xor
icebp
daa
sti
loope
jmp
call
enter
movsb
cmp
mov
cmp
xchg
lret
lds
iret
sti
fidivs
icebp
sahf
lock
stos
inc
or
sbbb
shlb
shrl
mov
lock
out
enter
lds
adc
mov
pop
nop
dec
in
daa
dec
cmpsb
xchg
stos
sub
or
push
xchg
xor
enter
cmp
mov
ja
dec
loopne
cwtl
pop
cmc
std
adc
int
lds
add
or
bound
int
scas
iret
xchg
mov
or
loope
mov
or
inc
ds
jno
stos
pop
cmp
and
pop
dec
aaa
push
roll
or
cltd
xor
mov
aam
enter
xchg
negb
lods
imul
and
sti
and
arpl
aas
ficoml
scas
push
jle
xchg
call
mov
rcll
pop
mov
in
jecxz
mov
stos
mov
lret
push
mov
sbb
setbe
xor
je
inc
lret
fs
push
repz
xor
fstpl
shrb
repz
xchg
xchg
sub
jno
cmp
mov
rclb
mov
aas
jno
jne
pusha
into
gs
ja
outsb
rcll
mov
xor
es
fwait
xor
sub
out
push
dec
loop
and
and
out
mov
cmp
mov
ds
dec
stos
jae
sub
pop
into
pop
lret
push
pop
shlb
jno
xchg
push
bound
dec
ss
and
lods
pop
js
fiadds
ss
mov
mov
ljmp
xchg
test
mov
mov
mov
adc
fcoml
popa
mov
stc
pushf
xchg
cmc
pop
repz
loop
arpl
or
cmc
daa
jbe
jmp
pop
cmp
xor
push
popf
mov
bound
cmp
pop
mov
sbb
pop
cmc
sub
sbb
xor
add
or
inc
and
dec
xchg
cs
jb
lds
cmp
mov
adc
cli
xchg
mov
mov
lods
jnp
roll
cmpsl
ds
sbb
jecxz
mov
push
inc
pop
jns
dec
insb
jb
popa
jl
mov
dec
loope
mov
test
ds
imulb
in
sub
mov
adc
mov
pusha
shrb
xchg
pop
icebp
sub
cmp
lods
test
iret
shll
pop
gs
push
in
call
pop
jmp
dec
add
jb
out
das
or
dec
subb
clc
loop
in
or
call
cmc
ret
mov
lds
push
jmp
adc
cld
xchg
in
xchg
aad
lret
sbb
popa
lea
js
je
mov
jp
sbb
cmp
enter
lods
repz
cs
jnp
mov
or
loop
mov
loop
push
adc
xchg
mov
adc
and
jp
cltd
stos
outsl
das
jae
xor
call
mov
fadds
mov
dec
test
inc
icebp
mov
in
testb
in
xchg
sbb
push
lds
cmp
push
shl
adc
js
cmp
stc
test
lea
adc
stos
push
movsb
and
cwtl
push
push
bound
xor
xlat
add
dec
mov
cmpsb
adc
pop
aam
fcomps
or
loop
mov
add
pop
ljmp
push
lahf
fwait
push
push
out
mov
or
push
inc
fdivrl
cld
xchg
sub
popa
arpl
xchg
dec
mov
xorl
mov
test
pop
mov
mov
fistps
mov
fisubs
fsubl
mov
push
testl
sbb
jp
pushf
or
push
cmp
sbb
inc
mov
ss
cmpsw
cwtl
inc
scas
sbb
mov
iret
cld
xchg
jmp
sbb
adc
repnz
dec
cwtl
jecxz
pop
pop
jg
imul
mov
jae
vpsrad
fwait
jecxz
fwait
sbbl
test
mov
pop
out
mov
mov
mov
push
cmp
enter
sub
mov
andl
into
push
and
cmp
jo
icebp
loope
out
push
neg
es
and
testb
cmpl
and
cs
in
test
lret
shll
enterw
shll
jp
mov
jb
fldenv
sarb
lock
popf
jae
dec
xchg
ja
les
push
fisttpll
xchg
sub
insl
and
sbb
bound
xchg
jns
pop
jbe
adc
rcll
push
jecxz
ljmp
push
push
ja
cmp
out
sub
add
scas
cmpsl
xor
mov
js
fsubrp
pop
xor
int3
xchg
mov
nop
rolb
jmp
push
push
cmp
loope
xor
mov
movsl
add
mov
mov
test
mov
inc
xor
sbb
sub
jne
sarb
jge
int
stos
mov
fstps
push
fsts
jecxz
clc
xor
data16
adcb
cld
shrl
adc
push
and
cmpl
xor
sub
xor
cli
or
adcb
dec
gs
in
ljmp
mov
sbb
push
lock
pop
sbb
lea
outsb
aaa
aas
lods
dec
loope
nop
data16
repnz
xchg
fstps
inc
or
and
dec
xor
int3
fdivrp
cvttps2pi
cmpsb
pop
adc
ljmp
in
daa
daa
push
fld
xlat
or
add
add
mov
xor
aad
mov
jg
pop
test
sub
ljmp
cmpsb
sarb
sarb
xchg
mov
inc
mov
ret
hlt
xchg
xlat
nop
xchg
pop
test
or
test
movsb
jmp
test
ret
aad
repz
jge
vminps
fsubs
roll
mov
cmc
fldenv
or
jp
push
lcall
cwtl
imul
fcoms
or
jge
pop
stos
jno
xchg
es
movsb
mov
ss
pop
mov
push
mov
ljmp
shr
movsl
sub
inc
pop
ret
mov
popf
pop
xchg
iret
jp
add
lret
jo
cmp
repz
nop
out
movb
fucomi
jb
add
outsl
mov
sbb
lcall
clc
and
je
jge
mov
into
test
push
sub
lahf
psraw
rolb
aam
inc
pop
push
adc
ss
pop
jle
xor
xchg
jl
xor
pushf
sub
ret
push
pop
cmp
shl
xchg
in
movl
xchg
out
scas
cmp
fisttps
pop
lods
pop
fldt
cld
cmp
jg,pn
cmpsl
mov
push
mov
pusha
repnz
mov
fldl
incb
pop
cld
stos
xlat
push
mov
adc
sub
icebp
dec
aam
sahf
ret
sub
pop
jno
icebp
mov
push
inc
out
aas
jle
dec
mov
jp
pop
jge
mov
js
gs
stos
jg
push
clc
mov
shll
push
je
lret
jp
mov
js
mov
jecxz
mov
jbe
mov
imul
pop
loop
out
sti
or
sub
movups
sti
xchg
cmp
pop
sbb
sbb
cmp
jnp
sarl
adc
dec
or
dec
out
xor
loope
inc
xchg
mov
and
fcomps
lock
cmp
movsb
add
push
mov
int3
clc
popl
fdiv
mov
movsb
push
xor
enter
cld
lret
mov
fmull
pop
repnz
testl
cmc
xorb
pop
test
fimull
dec
dec
mov
dec
and
mov
dec
adc
sahf
dec
shll
pop
rcr
loope
fs
push
in
pop
pop
jg
add
jae
or
push
xorl
outsl
sbbl
enter
dec
mov
cmp
cmp
push
lret
inc
lret
loop
pop
xchg
xlat
sbb
jl
add
jge
mov
inc
sbb
flds
icebp
pusha
mul
jbe
shlb
inc
dec
loopne
xchg
or
xor
movsb
sbb
mov
or
out
mov
sbb
inc
lret
pop
mov
push
lahf
jnp
xchg
inc
xchg
out
pop
out
lds
test
shrb
pop
stos
xor
aaa
iret
hlt
mov
push
leave
enter
idivb
sbb
aaa
mov
loopne
orl
cs
push
adc
lcall
popa
or
mov
xchg
fsts
add
out
aaa
les
inc
int
in
call
mov
jo
hlt
in
outsb
sbb
or
dec
test
sub
push
shll
popf
add
mov
mov
lock
stos
dec
mov
aam
ret
push
push
hlt
iret
pop
repnz
pusha
mov
mov
ds
fsts
lods
and
out
adc
jb
fbld
mov
stos
je,pt
add
jg
and
ret
mov
hlt
cld
inc
test
push
and
nop
idivl
push
cmp
lea
or
cli
push
sahf
inc
mov
add
not
ret
cmp
int
push
push
xchg
aad
ds
cmp
loope
vaddsubps
iret
popa
dec
loope
stc
push
mov
test
and
cmpsb
addr16
push
in
leave
ret
xor
add
cmp
cmp
dec
pusha
fdivl
test
pushf
sbb
test
mov
clc
iret
aam
test
jb
stos
cld
and
loop
sbb
scas
ret
rcrb
ja
mov
loopne
pop
cmp
sahf
decb
out
xor
les
dec
adc
loop
add
out
je
push
adc
insb
iret
jne
jg
push
jmp
push
and
or
cmp
fwait
jae
add
cli
push
cltd
push
pushf
adc
cmp
push
ret
dec
mov
in
adc
cmp
xchg
xchg
movsb
cmpsb
mov
pop
popf
dec
cs
cld
or
into
inc
xchg
jp
cmp
pop
call
pop
lock
rcrb
daa
outsl
mov
fbstp
pusha
jl
or
push
mov
sub
sbb
inc
rolb
ja
pop
sub
sub
mov
movsl
je
or
or
notb
jb
clc
push
cltd
xchg
fisttps
enter
fldcw
xor
test
mov
gs
sahf
pop
or
or
cwtl
sbb
addr16
jcxz
mov
add
xchg
xor
fucom
jle
jno
popf
sub
add
mov
mov
or
cli
mov
test
fnsave
xor
ja
sti
xchg
mov
out
sbb
adc
mov
fmuls
or
or
out
ja
aad
rcrl
inc
jae
lea
imul
push
lods
int3
mov
ret
hlt
jb
lea
into
xor
out
aas
add
sbb
mov
sub
xor
and
inc
lds
push
pop
js
inc
lods
testb
mov
xor
mov
shll
pop
push
pop
lods
cs
test
mov
int3
testb
dec
shll
pop
mov
int
xor
scas
mov
cmpsb
sub
fs
and
add
cmc
int3
arpl
pop
ljmp
xchg
test
mov
les
loope
pop
push
push
pop
in
mov
hlt
lods
es
or
scas
add
jmp
clc
nop
adc
and
lcall
cwtl
or
push
inc
mov
shll
mov
sbb
mov
mov
lods
loope
mulb
cmp
push
xlat
repz
in
mov
mov
pusha
ss
push
pop
mov
das
lea
jae
out
ss
mov
ja
jnp
dec
xchg
clc
out
int3
lret
cmp
aam
pop
hlt
jnp
arpl
sub
mov
stos
shll
jno
stc
mov
pop
cmp
push
sub
dec
inc
mov
add
cmpsl
pop
cmc
mov
flds
lcall
mov
xor
jge
sbbb
stc
inc
inc
lods
xorb
jge
rcrl
pop
pop
mov
loopne
repnz
fisubs
insl
xchg
notb
popf
je
mov
or
fidivs
ja
dec
cmp
pop
sbb
xor
sbb
test
mov
popa
ret
pop
jge
xchg
orb
psrlw
xchg
outsl
cmp
dec
in
pop
rolb
push
mov
in
and
xchg
out
aad
mov
into
aam
fnsave
iret
push
cmpsl
pop
aam
dec
dec
shrl
or
push
bound
in
jle
cmp
sbb
cmp
inc
mov
outsl
ss
pop
adc
push
xor
pop
adc
lods
jmp
adc
jmp
sahf
scas
jl
pop
or
mov
mov
lcall
dec
movsl
xchg
out
pusha
xor
mov
jb
sub
incl
out
sub
mov
push
and
pop
pop
movsb
cmp
jmp
inc
push
das
fsubl
dec
xor
movsb
cmp
imul
dec
fsubrs
inc
inc
sbb
dec
popa
sub
cmc
mov
dec
push
movsl
mov
cltd
rep
pop
cltd
das
sahf
add
lea
lods
mov
jb
jg
aaa
lea
jne
and
sbb
cmp
and
jno
cmp
dec
loop
mov
pop
loope
or
lret
pop
enter
xor
cmp
shll
dec
out
lds
xchg
lret
xlat
int3
xchg
cld
lea
inc
mov
fbld
adc
jbe
cwtl
sbbl
les
jo
ja
xor
sarl
sbb
scas
cmc
or
decb
daa
cld
cmp
jnp
jl
mov
fstpt
bound
cmp
mov
imul
fwait
cmp
popf
dec
add
inc
shlb
add
repz
cmp
aad
lods
in
adc
scas
push
out
sahf
xor
clc
mov
cltd
aaa
xor
arpl
icebp
mov
and
push
les
dec
jo
jp
pop
testb
mov
lds
push
call
movsb
iret
lahf
push
pop
repz
lahf
pop
xchg
push
and
jno
xor
int3
clc
test
dec
jecxz
cltd
pop
mov
adcb
xchg
cmp
cmpsl
pushf
xchg
add
fwait
std
mov
mov
into
sahf
xchg
jecxz
add
push
outsl
loop
mov
mov
jne
adc
sbbb
sbb
test
xchg
sub
sbb
cmp
cmpsb
lea
inc
and
xor
fisubrl
lea
loopne
push
and
popf
xor
ljmp
lret
lds
xchg
dec
pop
int3
test
mov
inc
push
mov
pop
mov
fnsave
lea
mov
fidivrs
inc
lds
adc
adc
push
fstps
clc
cmp
test
js
ja
dec
fisttps
decb
pop
inc
aad
mov
mov
cmc
cltd
lods
jmp
push
popf
mov
loopne
push
movsl
sbb
add
in
and
mov
xchg
mov
lret
cmp
mov
xchg
mov
and
mov
imul
clc
lahf
pusha
mov
cmp
icebp
and
push
pushf
rcrl
and
sbb
mov
clc
call
dec
mov
aas
in
data16
ljmp
jo
into
test
cmp
popf
setns
lcall
sub
enter
cltd
fcom
jmp
sub
sbb
pop
add
test
in
stos
mov
xchg
int3
hlt
mov
mov
in
inc
mov
mov
flds
orl
daa
aam
mov
fistl
outsl
es
stos
nop
sahf
lods
cld
mov
nop
add
sarl
pop
sub
out
xchg
dec
mov
mov
xor
sti
and
dec
dec
mov
test
mov
dec
dec
pop
cli
and
inc
outsb
jmp
fsubs
fists
subb
testl
loop
rorl
daa
lea
xchg
in
mov
or
imul
sub
fdivrs
ret
lahf
and
movsb
xor
call
decb
jno
cmp
fs
adc
icebp
inc
sbb
cmp
hlt
mov
cltd
mov
dec
mov
mov
enter
push
cmpsl
ret
or
mov
movsb
cmp
mov
subl
or
jg
cmp
dec
rol
add
xor
mov
mov
ljmp
pop
mov
shll
jbe
adcl
call
and
lock
xor
js
xchg
lcall
lods
mov
insb
fisubrs
sub
cmpsl
inc
jl
test
fidivl
iret
lahf
jmp
inc
rolb
mov
popl
pop
sbb
inc
dec
in
jl
push
mov
loope
push
mov
push
mov
nop
jno
fcomip
loope
cmpb
test
gs
sahf
mov
loopne
dec
cmp
mov
adc
jb
shll
aaa
push
lods
jnp
test
pop
lods
xchg
shlb
mov
les
inc
dec
cld
movsl
mov
pop
dec
les
call
xchg
mov
push
add
imul
fdivrl
push
cmp
push
icebp
jno
push
cs
stos
inc
dec
stc
rol
shr
aam
out
dec
ret
ret
inc
ficompl
inc
sub
jno
outsl
mov
mov
rolb
push
ss
xchg
jmp
sahf
xchg
cmp
mov
inc
into
out
out
adc
push
hlt
mov
fwait
aas
aam
cli
jns
and
ret
subl
or
dec
into
das
subb
aam
push
lcall
inc
or
lds
adc
inc
sti
jb
mov
andb
addr16
loopne
sub
in
dec
sub
mov
cmp
sbbl
gs
ds
fwait
xor
int3
iret
push
in
sbb
into
cmp
add
jo
jmp
or
aaa
push
push
lods
sbbb
in
mov
sub
aas
fmuls
ljmp
sbb
in
mov
adc
push
mov
pop
loop
pop
bnd
add
adc
inc
jnp
jno
and
dec
enter
out
test
pop
pop
movsb
jg
pusha
xor
pop
pushf
or
loopne
jns
leave
push
xchg
and
adc
mov
jnp
jo
dec
das
repnz
dec
push
sub
xchg
mov
and
inc
ja
in
aas
mov
aad
dec
inc
movsl
sbb
xor
arpl
outsb
jb
pop
ljmp
inc
mov
push
in
mov
rclb
std
je
repnz
testl
mov
mov
mov
mov
xchg
or
dec
sahf
xchg
sub
and
aas
cmp
jge
pop
loop
xor
xor
pop
jmp
push
or
cltd
xor
dec
out
and
loop
je
inc
lea
mov
out
andl
movsb
mov
jle
jb
cmp
lods
aas
test
clc
sbb
xchg
adc
loope
jo
sbb
mov
leave
adc
mov
mov
call
xchg
add
pop
packuswb
jmp
jo
pushf
test
mov
fmulp
add
mov
pop
lret
lahf
and
push
in
ss
jb
push
mov
fwait
in
push
stos
jge
xor
adc
clc
lret
jne
or
jbe
mov
dec
sbb
pop
mov
mov
sbb
mov
je
push
xor
pop
jns
mov
roll
mov
jno
ffreep
daa
adc
loope
jl
push
icebp
dec
and
int3
xor
xor
out
pushw
leave
pop
and
mov
jo
mov
sub
out
call
dec
xchg
xchg
pop
jo
test
lret
mov
fucomip
stc
fistl
orb
pop
xor
aam
mov
fidivl
std
rclb
fadd
hlt
fidivrl
rcl
rcrl
and
out
testb
insb
inc
mov
hlt
mov
mov
jne
push
xor
or
jo
in
dec
lock
rcr
in
mull
xor
sbb
jecxz
leave
sub
insb
pop
jmp
inc
sarb
test
mov
sbb
dec
idiv
repnz
mov
mov
inc
cmpsl
outsb
inc
hlt
jnp
mov
inc
pop
sub
mov
mov
mov
inc
mov
stc
push
cmp
adc
add
and
mov
xor
add
decb
dec
cmp
jnp
sbb
cmp
add
roll
mov
pop
dec
pop
add
cmp
fstl
mov
adc
lods
add
cmp
repz
push
call
jp
jo
adc
inc
fcmovu
ss
incb
fsubrs
ret
mov
jns
cltd
mov
repnz
xlat
sbb
dec
push
xchg
lods
cmp
les
iret
popf
mov
rclb
xchg
dec
fs
dec
test
stos
cmp
sub
popl
pop
fwait
xor
pop
mov
jae
jne
je
mov
mov
movsb
sahf
ja
dec
jecxz
insb
adc
rep
in
fwait
xor
lret
pop
icebp
mov
lock
jge
mov
negb
push
dec
mov
pop
add
out
jg
mov
test
inc
cltd
in
test
pop
imul
dec
lods
add
int
rolb
pop
aaa
inc
lds
fwait
mov
aam
jo
jbe
xchg
xorps
pop
testl
gs
pop
dec
add
mov
pop
mov
out
xchg
adc
pop
lahf
sbb
sub
sub
sub
mov
cmp
andb
imul
sbb
xchg
stos
gs
popf
xor
bound
push
in
ljmp
and
dec
push
clc
rorl
push
xor
cmpsb
cmp
pop
pop
ds
ljmp
mov
mov
andl
pop
orb
and
jo
cmp
pop
dec
adc
jnp
arpl
out
mov
add
push
inc
in
movsl
add
inc
loop
xchg
and
enter
lret
adc
push
pop
mov
mov
test
mov
jne
ja
icebp
fstl
xor
sahf
scas
xchg
sub
jbe
jnp
cmpsl
decb
in
xchg
jb
repnz
clc
and
push
fs
loopne
cmp
rorl
lock
jae
popf
xchg
popa
pop
pop
cmp
mov
mov
push
dec
inc
enter
xchg
push
push
and
shll
rclb
fisttpl
cmp
push
in
gs
and
repnz
lret
cmpsl
fisubs
fs
dec
push
dec
sub
mov
add
mov
mov
add
test
adc
sub
loop
shrb
insl
push
nop
mov
sbb
ja
insb
stos
push
and
inc
and
ljmp
fidivrl
jecxz
sarb
fadds
and
inc
xchg
scas
addl
scas
lcall
dec
imul
aam
stc
cmp
cli
arpl
sub
xor
int3
and
push
jmp
out
mov
sub
out
sbb
dec
out
iret
arpl
movsb
addr16
xchg
mov
in
inc
inc
or
mov
outsb
test
stc
movsl
repnz
fwait
add
fwait
push
cld
sub
dec
pop
jnp
mov
es
mov
mov
cmpsl
jl
pop
xchg
cld
std
sti
cmpsl
insb
cwtl
stc
push
mov
sbb
jp
lods
and
sbb
leave
sbbl
jb
xor
fistps
les
nop
roll
jo
sub
andb
jno
bound
adc
lahf
mov
push
or
adc
push
pop
sahf
inc
fistpll
mov
ja
pop
inc
in
rcrb
pushf
sbb
pop
cmp
inc
lcall
sub
dec
mov
sbbb
mov
pushl
ja
push
ljmp
jno
outsl
lods
stc
orl
sub
mov
push
sbb
sbb
lret
mov
and
fwait
test
sbb
or
push
push
int
shlb
js
mov
sbb
cmc
loop
xor
movsb
repz
sub
scas
nop
clc
sbb
arpl
test
jp
dec
in
popa
das
addr16
stc
mov
mov
jne
adc
je
ljmp
and
mov
push
cmp
nop
mov
adc
sub
cmp
inc
adc
sub
sbb
jbe
out
xchg
cmp
insl
adc
aas
std
xchg
popa
enter
ret
repz
stos
sbb
fnsave
push
repnz
sbb
in
scas
outsl
jns
inc
mov
sbb
and
sbb
leave
out
add
lahf
jne
repnz
xor
cli
jecxz
ret
test
sub
dec
loope
xor
icebp
adc
lock
and
movsl
js
ret
jle
adc
jge
call
jnp
sbb
pop
mov
lcall
sbb
xor
mov
cmpsl
push
cwtl
das
nop
rcl
repnz
jne
push
push
adc
cwtl
lahf
in
jnp
cli
add
fdivrl
loope
int
xchg
mov
imul
mov
lock
adc
push
dec
and
in
ficompl
cmpsb
scas
add
leave
pusha
bound
mov
xor
fcomp
dec
sarl
push
rclb
jg
jg
mov
or
cwtl
sbb
adc
mov
sbbl
jae
mov
leave
addb
fwait
add
inc
and
jge
push
pusha
outsb
add
sbb
sub
cmc
sub
test
jge
out
lock
cmp
cmp
and
je
lods
hlt
mov
sbb
and
jae
xor
pop
mov
mov
xlat
pop
push
adc
xchg
cmp
popf
lret
cmp
loop
mov
subl
insb
ret
inc
out
mov
push
xchg
pop
repnz
or
lea
mov
sbb
sub
and
call
test
iret
test
dec
dec
jp
aad
call
jns
push
or
xchg
dec
loope
pop
cmp
inc
lock
jo
xchg
sub
dec
imul
cmp
pop
mov
sub
jl
sbb
push
test
sbbb
test
dec
mov
lahf
add
inc
nop
pop
xor
ds
fdivp
repnz
aam
data16
inc
sbb
jno
mov
mov
aas
aad
or
cmp
mov
shrl
add
adc
sbb
and
arpl
outsb
outsl
jnp
movsl
in
add
sbb
push
fstps
das
mov
lock
test
scas
mov
mov
test
lods
inc
popf
cli
and
ret
dec
stos
cmp
in
imul
stos
add
pushf
xchg
test
fidivs
mov
js
and
mov
mov
jae
mov
fnstenv
mov
repz
sbb
xlat
enter
les
jb
divl
pop
sbb
loopne
dec
pop
xchg
insb
sub
push
mov
stos
inc
sbb
jne
push
loope
push
roll
jmp
call
or
std
test
jo
in
adc
int
sahf
stos
jbe
xor
mov
test
decl
mov
xor
aas
mov
inc
int3
scas
cmp
jecxz
ficoms
pushf
repz
inc
push
jb
shrl
jo
lret
loope
sbbb
sub
fldt
test
adc
mov
sbb
push
mov
arpl
iret
mov
cmp
decb
inc
push
leave
mov
mov
push
jcxz
push
fsubs
movsb
sbb
jb
mov
rorb
push
lea
add
mov
addb
xor
dec
movsb
push
jmp
dec
dec
repz
aad
sub
add
lret
lock
gs
lea
into
icebp
sub
sbbb
ss
movsb
ja
jno
xchg
push
sbb
lcall
xchg
or
push
rorb
dec
push
mov
lods
pop
sub
in
xchg
cmc
popf
je
add
jne
cmp
in
loop
mov
shrl
movsl
stos
es
pop
lds
sbb
add
push
je
push
outsl
xchg
sahf
subl
popf
or
adc
pop
push
fisubrs
push
push
mov
dec
ja
push
xor
cmp
or
mov
es
mov
mov
test
enter
mov
xchg
dec
xlat
ljmp
mov
mov
mov
icebp
std
sub
stos
cmp
pop
es
or
pop
imul
add
xchg
jmp
in
decb
into
sub
xchg
in
lds
jne
sub
pop
pop
out
push
jmp
stc
dec
mov
jmp
push
jl
mov
adc
into
xchg
imul
andb
push
movsb
cmp
xchg
ja
les
dec
inc
lods
jnp
mov
int
fidivl
and
or
adc
int
lcall
aam
push
in
sub
test
dec
add
inc
mov
sub
jnp
sbb
mov
push
cmp
lods
sub
mov
pop
jne
lret
add
dec
pop
push
cwtl
jb
pop
adc
jo
inc
cwtl
push
xchg
jmp
adc
jg
jne
movsb
out
in
pusha
add
xor
in
sub
cmp
into
cmp
sbb
loopne
mov
adc
clc
push
mov
cmpsl
xchg
sub
push
sub
cs
lods
imul
xchg
rcll
adc
pusha
clc
leave
sbb
mov
out
es
inc
out
inc
mov
je
cld
xor
sbb
pop
out
xlat
mov
cmc
enter
popf
pop
pusha
ss
cmp
fs
sti
xchg
adc
xacquire
add
xchg
push
push
popa
push
ljmp
cmp
notl
rclb
lods
xchg
sub
cli
mov
push
les
push
hlt
cwtl
sbb
std
dec
std
push
lcall
int
sub
aam
in
adc
sub
insl
add
xor
stos
mov
sbb
jge
cmpsb
mov
shrl
ja
mov
jno
dec
sub
es
cmp
mov
lds
push
lahf
xchg
das
pop
cmc
jo
fnstsw
dec
sub
and
pop
stos
fnstenv
mov
jle
cmp
sub
andl
inc
lock
rol
test
scas
jl,pt
sub
mov
scas
inc
jge
sbb
pop
fwait
push
and
out
mov
stc
insb
jo
sbb
hlt
fsubl
mov
hlt
sbb
inc
lret
jnp
cld
mov
sbb
pusha
add
jbe
xchg
stos
adc
aaa
mov
jb
fs
testl
ds
jge
pop
scas
sub
int3
shll
bound
sahf
push
stos
mov
pusha
xor
jmp
fstp
sti
mov
mov
repz
test
pusha
jnp
outsl
jne
lods
jg
dec
jle
fldt
sub
popf
add
ss
icebp
mov
cmp
pop
int
pusha
aam
xchg
sbb
mov
lock
and
mov
sti
mov
scas
or
push
repnz
sub
adc
cld
lcall
jne
push
dec
adc
adcl
and
lcall
subl
xor
dec
repz
mov
inc
fs
mov
ret
or
dec
adc
pop
adc
push
mov
addb
jne
imul
push
or
out
push
and
add
popa
add
xchg
dec
xchg
pop
mov
data16
and
imul
push
jnp
cmp
sbb
cmp
das
ret
pushf
aad
rcrl
lds
in
push
and
out
push
push
xchg
jg
sbbl
call
dec
push
pop
jmp
inc
insb
add
imulb
sbb
xchg
xor
jo
insb
xor
lds
loopne
inc
sub
xor
fdivr
sub
in
arpl
lds
pop
repz
inc
ret
pop
repz
cmp
lret
mov
push
mov
test
mov
xor
mov
outsb
loop
sub
and
ret
shll
out
outsb
inc
mov
inc
dec
mov
push
push
js
aaa
insl
sub
xor
inc
cmp
cmp
fnstsw
pop
mov
iret
pusha
sbb
push
mov
aaa
cli
adc
inc
cmpl
cltd
jle,pt
sbb
clc
popa
cmp
cmpsb
shll
lret
pop
repz
int3
lret
in
push
loope
mov
pop
les
fwait
iret
mov
add
cwtl
sbbb
mov
mov
fisubs
ret
das
mov
fistps
or
test
pushf
add
pop
out
movsl
mov
add
jnp
lcall
adc
add
notb
or
pop
ds
js
adc
and
xchg
aad
cltd
or
fimuls
mov
test
mov
scas
cmp
scas
scas
inc
subl
or
push
out
dec
fnstsw
mov
orb
and
xor
test
push
add
push
les
loope
sbb
ljmp
movsb
cvtps2pi
loope
add
adc
push
lahf
sbb
in
inc
scas
sbb
push
outsb
loope
push
add
lret
inc
jb
pop
sub
push
sub
sti
jns
dec
cltd
scas
aaa
mov
push
cmp
and
dec
aam
fdecstp
mov
xchg
add
out
add
push
mov
xorb
pop
std
pushf
data16
adc
popa
jmp
mov
fstps
fistpll
lock
dec
adc
gs
sarl
push
push
xor
es
clc
subl
dec
popf
arpl
cmp
fsubrl
cmpsl
ret
or
inc
test
mov
movsl
rcrl
xchg
sahf
pop
ja
pop
cmpb
push
and
fsts
outsb
mov
lods
jmp
fcmovu
outsl
loop
inc
pop
aaa
shlb
test
cwtl
xor
or
arpl
test
ljmp
pop
cmp
or
mov
test
scas
sbb
fsubrp
jb
jge
lcall
pusha
jle
in
push
stos
decb
out
pop
into
xor
xor
push
sbb
out
jmp
sarb
pop
fwait
lea
inc
mov
pusha
sbb
cld
adcl
or
jl
sbb
push
pop
ljmp
push
icebp
or
push
daa
leave
into
fsubl
dec
mov
pop
rclb
dec
jecxz
stc
inc
add
mov
mov
call
or
fmull
lcall
pop
bound
ret
cld
xchg
and
ds
outsb
jge
lahf
cmpsb
fmull
addr16
cmp
sbb
dec
mov
in
rcrl
sub
inc
push
sbb
sti
pop
outsb
and
lea
mov
das
mov
fwait
scas
fmul
orl
mov
xor
sub
pop
cmpsl
push
call
cli
xorl
jbe
ret
cmpsl
mov
mov
mov
inc
frstor
mov
push
hlt
xlat
jb
mov
out
mov
in
outsb
cld
add
adc
movsb
mov
test
mov
jmp
pop
mov
pop
jbe
sysexit
cmp
jae
or
mov
not
mov
jle
scas
adc
outsb
fistpl
hlt
adc
dec
cmp
lcall
addb
icebp
and
fcomi
aaa
adc
mov
aad
pop
sub
pop
add
data16
cmp
out
cmp
mov
and
iret
das
pop
xor
int
out
popa
leave
pop
xchg
insb
jbe
and
mov
xchg
dec
sub
sub
ljmp
popf
pop
out
or
fdivrp
lea
mov
mov
mov
push
aas
mov
xchg
sub
test
sub
mov
leave
jmp
adc
cmp
imul
pop
add
es
xor
mov
or
dec
sub
or
clc
movsb
dec
cs
lds
lods
orb
arpl
mov
cmpsl
jg
jns
leave
and
dec
sbb
sbb
jae
call
das
push
mov
test
fs
idiv
sbb
loop
rorb
aam
and
outsl
adc
add
lea
aad
xchg
mov
jg
xchg
mov
mov
mov
sbb
dec
sub
popf
shrl
sbb
dec
cmp
sub
sti
pushf
jns
or
jle
sbb
into
daa
dec
jns
popf
inc
stos
imul
rolb
add
mov
push
xchg
sahf
xor
cmp
mov
cmp
sti
fwait
insb
sbb
jmp
lods
inc
cmc
lret
scas
in
or
mov
subl
cltd
sbb
icebp
movsl
jae
clc
or
sbb
mov
mov
push
xor
push
je
nopl
es
mov
in
nop
aam
test
fadd
das
dec
pop
add
xor
fldenv
scas
icebp
inc
inc
adc
adc
fsubr
pop
jno
mov
inc
ficoml
jmp
sbb
lahf
lods
add
push
jo
sub
add
mov
inc
xlat
xchg
leave
das
addb
sbb
test
pop
scas
out
inc
rcr
push
mov
sbbb
xor
cmp
mov
dec
daa
insb
pop
addr16
outsb
icebp
lcall
scas
xlat
divl
lods
and
jb
or
dec
xchg
inc
loope
jmp
dec
sbb
sti
iret
lcall
ja
cmp
cmp
mov
sbb
imul
dec
jmp
shll
roll
jmp
sahf
clc
cmp
jne
fwait
imul
fmuls
dec
icebp
and
cmc
dec
push
pop
cmp
adc
mov
xchg
dec
pop
cmp
rclb
mov
gs
nop
jg
xchg
shlb
xchg
push
rcrb
cmp
xchg
cs
cmp
outsb
pop
add
movl
mov
test
nop
int3
cmpsb
add
cmpsl
movl
lock
jecxz
imul
or
xchg
out
or
push
cwtl
pop
xchg
les
andl
jnp
loop
lds
imul
cwtl
mov
ss
mov
lock
jecxz
testl
aaa
sub
jge
sub
popa
jnp
mov
fwait
and
lret
push
sbb
scas
jl
push
adc
sbb
mov
cltd
arpl
movsl
mov
cwtl
js
inc
mov
fldenv
aad
jmp
call
fildl
push
xchg
int
adc
jg
pop
shrl
fwait
pop
mov
jmp
es
xor
xlat
out
jno
pop
data16
ret
adc
mov
test
xor
ret
ret
jnp
fs
cmp
sbb
mov
mov
aam
adc
inc
inc
push
inc
jmp
jg
jnp
fisubrl
negl
cmovo
mov
jmp
cmp
inc
fistl
push
aad
push
fldcw
pop
lds
mov
jp
testb
lea
xchg
ret
dec
loope
mov
imul
lret
bound
jae
xor
jo
lock
aas
add
jbe
jne
test
jmp
and
xchg
or
pop
dec
roll
add
push
xlat
sbb
outsl
inc
sub
dec
mov
leave
insb
repnz
jp
cmpsl
or
and
xor
dec
into
pop
fwait
inc
int3
arpl
arpl
add
jmp
push
mov
cwtl
jae
or
popa
mov
dec
dec
mov
outsb
vandnpd
clc
out
orl
mov
jns
adc
in
sbbb
lcall
lea
lock
iret
cmpsb
jae
jp
dec
pop
pop
xor
js
sub
int3
or
es
inc
jle
pop
fwait
sub
shrl
bound
bound
pop
push
aaa
jle
stc
mov
or
pop
mov
lahf
or
test
rol
adc
pop
pushf
loopne
sbb
aaa
mov
push
rclb
jmp
int3
dec
dec
push
loopne
and
inc
and
movsb
and
push
ficomps
mov
jecxz
xchg
dec
aad
jo
popa
mov
xor
rorb
push
mov
nop
in
jo
lds
xor
dec
into
repz
test
je
js
sbb
inc
imul
and
mov
jae
test
stc
mov
mov
or
aam
imul
or
cmpl
mov
scas
pop
mov
popa
ret
imul
mov
or
sarb
add
cmpsb
jle
fnstenv
stc
in
xlat
sub
sbb
xchg
inc
mov
test
push
pop
sbb
addl
ss
lds
cmpl
adcl
mov
mov
cs
adc
xor
mov
and
stos
push
or
fimuls
inc
arpl
cmp
dec
cmpsb
imulb
or
add
sub
imul
les
mov
imul
add
out
test
jae
lahf
inc
cmpsl
mov
mov
fstpt
ljmp
push
push
fstl
dec
xlat
and
push
roll
and
scas
mov
sbb
sbb
cld
mov
aad
mov
fbld
push
cmp
ret
push
int
push
in
aaa
repz
int3
movsb
adc
xchg
pop
repz
push
imul
addr16
mov
cmp
inc
xor
adc
jmp
xor
rcr
aam
stos
insl
jno
icebp
lret
call
dec
lods
hlt
cmp
inc
xor
mov
xchg
mov
loope
out
sub
inc
pushf
cli
imul
mov
fnsave
testb
lahf
push
mov
loop
mov
jecxz
push
push
lds
dec
push
sbb
iret
cmp
push
lret
sub
mov
push
push
cmpsl
inc
stos
adc
inc
cli
xchg
mull
fwait
test
stc
xlat
push
adc
sub
out
and
add
ljmp
in
xchg
outsb
mov
imul
divl
imul
dec
dec
inc
cmp
or
xchg
pop
adc
aas
dec
scas
arpl
cmp
popf
xchg
sbb
mov
mov
adc
ds
mov
subb
mov
cmpsb
testl
mov
jg
repnz
icebp
movswl
jne
and
inc
inc
lods
inc
jns
mov
popa
jg
loopne
imul
xor
sbb
das
addr16
lcall
mov
cmp
pop
add
lock
fwait
leave
lret
int3
ljmp
sbb
adc
lcall
cmp
mov
lcall
push
js
jb
pop
push
mov
inc
lds
js
test
mov
dec
js
ss
sub
fdivl
inc
push
repnz
add
sbb
int
cmpb
mov
push
jo
addr16
mov
mov
fstpl
xor
and
jge
ds
jg
cltd
fwait
shl
xchg
adc
adc
aaa
into
jmp
or
jnp
and
movsb
iret
push
cmpsl
mov
fnstenv
dec
lret
jb
in
shlb
mov
jle
insb
testl
mov
or
stos
jge
xchg
test
fidivs
cmp
movsb
fdivrs
or
jns
or
jge
dec
cmpsb
aad
pop
add
clc
pop
outsb
mov
pop
imul
sub
repz
mov
xchg
sbb
dec
sbb
aam
les
sbb
mov
inc
incl
mov
sahf
lea
out
pusha
ja
and
pop
push
push
std
cmp
sbb
lods
popa
roll
mov
adc
add
pop
sub
pusha
aaa
push
lods
inc
dec
in
fwait
icebp
cmpsl
ret
and
adc
adc
and
or
cmc
sbbb
imul
jle
push
lret
adc
call
xchg
iret
setg
mov
mov
or
cmp
mov
lock
test
pop
icebp
mov
adc
pushf
jne
jge
inc
imul
fs
inc
jp
xor
and
in
jno
aad
sbb
inc
cmc
xor
arpl
or
dec
inc
data16
ret
int
mov
shrb
lahf
loope
mov
mov
mov
lret
in
pusha
push
push
call
stos
faddl
xchg
jne
xlat
and
addr16
fstl
sub
loopne
dec
fistpll
aas
cmp
sbb
bound
push
xchg
pop
sub
out
sub
jae
jge
mov
adc
mov
xchg
and
push
push
mov
xchg
push
jp
test
add
mov
cld
cld
inc
fldt
je
sbb
sar
inc
movsb
sti
stos
aad
sbbl
mov
and
jo
cmpsl
sarl
int3
ss
dec
es
sub
in
andl
adc
fldenv
dec
movsb
dec
add
jecxz
sbb
lock
shrl
les
rorb
or
dec
jecxz
fxtract
icebp
add
cmp
push
flds
mov
test
ss
jp
adc
sbb
pop
jecxz
out
lahf
aad
lods
js
sbb
mov
add
fldt
stos
sub
sbb
dec
add
mov
pop
dec
pop
xchg
mov
dec
adc
shl
rorl
add
loope
adc
dec
mov
fbld
pop
lahf
mov
xchg
out
and
xorb
sbb
jb
mov
mov
or
or
xchg
lock
push
xor
mov
dec
aad
adc
daa
mov
aas
push
dec
test
outsb
mov
bound
rclb
add
adc
sbb
or
loop
mov
cmpb
nop
stos
push
ret
xchg
sub
je
sub
leave
scas
inc
add
jno
aam
test
and
push
ss
test
ret
jae
and
cmpsl
add
dec
outsb
jp
sub
or
jg
pop
inc
mov
sub
leave
fisttpl
fdivs
add
shrl
mov
xchg
dec
dec
sbb
fwait
jbe
and
add
inc
inc
pop
inc
cmc
lods
out
push
push
and
test
cmp
xchg
es
je
adc
add
rcr
and
in
xor
mov
arpl
inc
daa
mov
cmc
dec
push
dec
jnp
add
push
aaa
and
divb
pop
icebp
les
pop
jmp
js
cmp
mov
jne
push
jno
mov
imull
mov
sbb
xchg
sar
enter
incb
mov
fistps
fs
dec
out
push
jnp
fcompl
xor
mov
mov
jge
push
movsl
jmp
xlat
pusha
xor
push
jl
das
pop
mov
std
mov
mov
pop
and
addr16
mov
pop
inc
ss
mov
add
icebp
dec
push
popf
sarl
fs
ljmp
std
enter
test
mov
xlat
icebp
and
inc
pop
les
add
jae
shll
adc
jp
adc
dec
arpl
mov
gs
lds
fwait
xor
pop
adc
cmp
decl
cmc
jp
xor
bnd
dec
xchg
das
fwait
and
sub
in
jg
ja
mov
lock
and
push
xlat
inc
pop
icebp
int3
or
push
sub
pop
inc
es
or
ret
subb
addr16
call
inc
xchg
stc
addl
popf
dec
adc
loopne
pop
stos
jmp
mov
test
jl
add
and
testl
adc
shrl
add
mov
aas
movsl
cs
fsubrl
subb
dec
cmp
adc
sub
and
cmp
cwtl
clc
ss
insl
loop
add
lahf
sub
mov
xchg
jnp
sti
pop
call
scas
dec
sub
fdiv
in
frstor
clc
and
jle
jb
adc
pop
sub
push
xchg
dec
incl
std
subb
nop
mov
in
mov
push
loop
out
xchg
stos
mov
ljmp
pop
mov
or
or
stos
inc
pop
sub
scas
nop
sbbl
outsb
aas
dec
pusha
out
inc
xlat
stos
dec
push
jno
pop
cmp
fldl
mov
iret
es
push
lods
inc
jno
outsb
push
jge
mov
les
push
movsl
and
push
mov
mov
push
dec
clc
dec
mov
jl
pop
xor
clc
jge,pt
loop
pop
jg
dec
inc
push
jae
shrl
icebp
mov
int3
mov
adc
dec
lret
xchg
test
outsb
test
xor
inc
xor
jle
cltd
cmp
imul
jecxz
or
cs
popf
sub
or
loope
push
mov
mov
cli
in
xchg
scas
cltd
xor
lret
cmc
rolb
icebp
movsb
lods
add
pop
xor
cli
out
xchg
sub
and
lahf
jecxz
into
dec
mov
cmc
out
add
cs
cmp
mov
aam
pop
pop
fisubl
ds
dec
or
jg
jle
mov
aaa
mov
push
in
dec
pushf
sub
out
cmc
cmp
in
out
pop
jge
in
pop
mov
xchg
insl
into
or
or
and
push
xchg
pop
jb
mov
test
sbb
mov
or
inc
lret
mov
push
in
and
adc
rcrl
xchg
sbb
and
fstl
dec
popa
mov
push
xchg
loop
sub
push
dec
arpl
jnp
mov
cwtl
subb
mov
jne
inc
pop
sbb
ds
sub
nop
daa
inc
dec
aad
xlat
xor
lods
cld
dec
push
outsb
mov
ljmp
andb
lods
in
or
sbb
mov
fs
sub
pop
pop
adc
stc
ljmp
cmp
pop
orl
int3
mov
lahf
test
jle
adc
mov
mov
pop
or
adc
xor
dec
pop
mov
repnz
mov
test
pop
lock
daa
fmulp
push
lcall
test
loopne
sar
xchg
inc
mov
fimull
fidivrs
enter
xor
popa
sub
push
add
pop
push
jnp
negb
pusha
std
mov
repnz
mov
dec
sub
sahf
lock
movsl
and
adc
enter
inc
cmp
cmp
jge
mov
xchg
or
xchg
xchg
and
insl
aad
xor
sub
adc
hlt
in
fbstp
pop
dec
sub
mov
ljmp
xchg
insl
rorb
sbb
test
xor
push
push
pop
outsb
xchg
xchg
dec
jle
and
cmp
idiv
mov
insl
leave
stc
frstor
hlt
imul
xor
adc
xchg
pop
leave
jnp
mov
stos
fstpt
jg
dec
iret
fistl
in
ds
out
cmc
pushf
dec
jecxz
sub
add
imul
xchg
jns
inc
jmp
push
stos
inc
inc
pop
es
stos
xor
cmpsl
push
mov
sub
push
bound
mov
mov
rcrb
push
push
sahf
stos
fists
popf
int
test
shlb
std
mov
orl
jnp
loopne
dec
cmp
insb
stc
daa
mov
sub
test
jl
xchg
fdivs
or
xchg
bound
or
cmpl
lahf
jl
notl
stos
mov
jle
add
test
js
ret
les
mov
adc
push
or
push
jg
dec
arpl
fldcw
and
cmc
orb
out
xor
sahf
inc
fcmovnbe
push
push
loopne
lods
shll
sbb
test
mov
ret
out
pop
mov
repnz
jmp
or
xchg
mov
or
mov
mov
sahf
testl
fwait
popa
subl
test
jo
pop
fsubrs
cmpsb
daa
call
scas
test
cmp
insb
and
and
inc
inc
subb
push
mov
pushf
mov
mov
push
and
cmpsl
in
mov
testb
lret
jl
adc
repnz
xor
adcl
jno
sahf
xor
mov
cmp
out
rcll
lods
mov
jecxz
repz
xor
sub
insl
shlb
jl
std
or
out
push
mov
in
inc
xlat
aad
add
stos
add
pop
xor
mov
fsubs
arpl
fisttpll
dec
dec
xchg
jno
dec
push
mov
dec
fs
lods
scas
xor
dec
popa
xor
les
data16
fcomi
inc
clc
jb
mov
push
setbe
imul
ds
mov
out
jbe
push
pop
adc
gs
push
outsb
out
xchg
adc
out
and
sub
pusha
mov
sub
cmp
shlb
popa
fildl
shl
and
movsb
cltd
icebp
test
mov
testb
pop
cmpsl
decb
push
or
fwait
push
popf
sub
inc
fwait
inc
bound
aaa
nop
bound
mov
sbb
lods
aam
jmp
shl
push
int
mov
fs
mov
inc
shlb
daa
imul
dec
jmp
inc
jae
cmc
mov
in
jno
lahf
out
xchg
vunpckhpd
out
push
dec
iret
cwtl
scas
sbb
adcl
cmp
xor
mov
lret
adc
sti
xor
adc
mov
sub
mov
pop
cmc
loop
xor
test
ret
pop
mov
jp
lahf
jae
inc
iret
sbb
mov
mov
inc
aad
or
stos
cli
xchg
loopne
sbb
loope
sbb
xor
jnp
fwait
pop
cmpsl
xor
jae
jnp
subb
mov
pop
iret
dec
inc
add
ds
das
push
cltd
add
jecxz
in
cmpsb
push
lret
ss
push
push
inc
fistpll
cld
test
es
fstpt
cmpsb
inc
mov
lahf
daa
or
adc
ret
outsl
dec
leave
sub
insb
fwait
out
xor
in
movsb
std
xchg
xchg
inc
stos
push
outsl
jnp
leave
loopne
mov
stc
dec
mov
mov
mov
sbbl
loop
and
add
xor
rol
es
sub
sub
jb
inc
les
xchg
orb
loope
fwait
or
adc
pop
push
ret
add
pop
loopne
les
and
pop
cmp
cwtl
xor
mov
rorl
mov
in
cmp
movsb
inc
push
daa
push
pusha
subb
pop
sarb
dec
movsb
mov
inc
push
and
dec
pop
cmc
cwtl
cmpl
and
sahf
mov
add
push
jns
mov
sub
idivl
mov
lcall
and
jge
and
pop
xor
enter
jbe
pusha
xchg
pop
ret
pushf
rclb
mov
pop
xor
jno
rcrl
dec
bound
add
insl
repz
leave
or
adc
jbe
cmp
and
jle
int3
jg
dec
add
leave
and
push
lds
sub
fsubr
das
out
cld
adc
clc
nop
sbb
pop
scas
out
xor
test
pop
add
sahf
push
out
lds
addl
push
ja
repnz
std
adc
hlt
mov
orb
call
fs
sbb
mov
xchg
pushf
sub
test
sbb
dec
adc
cmpps
subl
mov
mov
iret
xor
je
int3
fbld
ret
lret
push
cmp
lahf
push
xor
rclb
les
repnz
sub
popa
fadd
push
or
stos
cltd
push
and
rorl
orb
and
push
jle
popf
ss
cli
stos
xor
inc
adc
mov
icebp
inc
test
cs
sahf
mov
xchg
pop
pop
jb
roll
jno
repz
stc
xchg
sbb
push
int
hlt
incl
sbb
push
popf
icebp
movsb
mov
lea
jg
mov
stc
pop
xchg
mov
loope
mov
mov
xchg
gs
mov
shlb
sarl
outsl
cltd
rol
xchg
cmp
filds
add
int3
mov
nop
pslld
mov
cmp
push
sti
or
add
ljmp
inc
imul
std
rorb
adc
out
js
mov
xor
xor
mov
pop
iret
mov
lcall
jmp
lea
cmp
mov
int
pop
into
jmp
cltd
sub
in
mov
pop
sbb
sub
mov
les
cmpsb
push
push
push
testl
and
xchg
cmp
push
sarl
mov
and
sbb
imul
push
or
pop
mov
lea
pop
sbb
pusha
imul
call
jle
inc
or
or
es
fiaddl
pushf
loopne
dec
push
cmp
or
popf
pop
aas
mov
cmpl
lret
cs
mov
test
ds
adc
mov
lds
dec
push
push
inc
dec
inc
ss
adc
lods
mov
cs
jge
mov
loope
xchg
inc
scas
push
push
and
gs
xlat
lcall
lds
cli
cmpsl
push
cmp
leave
out
aad
jmp
sbb
arpl
aam
enter
dec
in
sub
sbb
mov
in
shlb
xchg
push
mov
push
xor
sar
nop
daa
test
pop
sub
cmp
add
pop
sub
add
xchg
fimull
hlt
cmpb
add
add
xchg
push
push
fs
cmp
ja
and
cmpsb
dec
add
scas
xor
lea
or
jmp
jns
sub
and
std
push
jne
clc
mov
sbb
pop
mov
push
xor
mov
lret
cmp
sarb
mov
dec
out
rcrb
fldt
adc
xchg
stc
adc
sbb
jle
mov
into
int3
cmp
cmc
mov
sub
fstpt
mov
and
lret
jl
js
inc
cmp
int
out
jg
pop
lcall
xchg
mov
clc
jnp
stos
stos
xor
and
sti
dec
mov
aad
testb
cmp
sbb
pop
test
push
jl
cmpsb
or
lahf
jmp
mov
repnz
inc
out
call
cs
ds
out
add
sbbb
movsl
lods
jg
mov
aaa
movsw
loop
add
mov
sti
push
pusha
test
cmpsb
in
cwtl
push
inc
push
nop
mov
jns
mov
jge
xor
inc
bound
add
sbb
mulb
xchg
ss
cs
xchg
outsb
adc
sbb
stos
ret
push
pop
lret
int3
xor
sub
or
rorb
push
fisttpl
sbb
pop
mov
loop
fdivl
mov
mov
and
shrb
fdivrs
jecxz
sti
push
cmp
pop
sbb
test
mov
pusha
xchg
fadds
mov
cmp
cmp
and
xor
mov
pusha
aaa
or
enter
mov
aad
or
dec
mov
push
sub
shl
outsb
es
ficoml
aad
jl
xor
inc
mov
xor
arpl
addb
dec
cmp
shl
mov
loop
inc
mov
popa
movl
add
das
sbb
pushf
cmp
fwait
push
dec
add
or
xchg
sarb
sbb
mov
aaa
mov
xor
popa
outsb
sub
xor
mov
xchg
out
mov
jmp
inc
call
lret
pop
fwait
out
bound
cli
sub
out
or
in
add
or
xchg
push
outsb
ds
mov
aad
int3
pop
add
dec
or
pusha
adc
jno
add
or
add
cmpsb
ljmp
push
fnsetpm(287
imul
in
inc
fwait
mov
push
imul
jo
jo
push
mov
iret
pop
je
inc
mov
aas
inc
and
pop
lods
pop
or
rcrl
lahf
lds
push
addr16
arpl
or
xchg
cmpsl
ret
sbb
sbb
into
imulb
repz
dec
add
frstor
test
fs
cs
cmp
mov
xchg
dec
mov
movsb
xchg
dec
cmp
xchg
or
push
cmpsb
out
sahf
inc
fnstcw
fsubl
addl
push
sub
hlt
xchg
jle
scas
inc
stc
mov
in
leave
int
aad
inc
repz
mov
mov
sub
sub
mov
inc
jo
jbe
pop
call
push
insl
push
idivb
dec
aaa
mov
sbb
add
sbb
pop
or
testl
xchg
mov
pop
sarl
bound
add
setg
cmp
dec
push
hlt
addb
cmc
xchg
int
int
movsl
mov
push
outsb
jae
push
cltd
and
imul
sbb
jne
out
xor
mov
xor
aam
xchg
xchg
pop
adc
or
subb
inc
dec
push
jnp
pop
cmp
mov
mov
mov
int
inc
bound
mov
lds
insb
rcr
sahf
sti
cld
dec
icebp
lret
jno
xor
jns
and
popa
divl
or
pushf
xchg
fmuls
ret
call
xor
adc
ret
mov
lcall
aas
stc
dec
jecxz
fwait
mov
and
out
pop
sbb
inc
or
xchg
ds
aaa
sub
mov
imul
cli
mov
enter
mov
mov
dec
xlat
sub
mov
sub
aad
mov
add
xchg
insb
and
imul
xchg
sahf
aaa
mov
and
sahf
loopne
arpl
jecxz
dec
jmp
mov
fwait
repnz
or
push
movsb
ror
xlat
mov
cli
nop
xchg
mov
mov
xlat
pop
dec
cmpsb
jp
icebp
xchg
and
lds
xchg
push
push
dec
or
push
aad
imul
sbb
les
cmp
pop
enter
dec
mov
dec
rol
jecxz
test
inc
arpl
lret
test
mov
mov
outsl
jecxz
push
xchg
add
test
in
mov
dec
add
push
imul
scas
xchg
push
ss
jp
cmp
cmpb
mov
pop
daa
ret
dec
pusha
addr16
sbb
ficomps
cs
dec
mov
mov
dec
jns
jp
sbb
push
mov
push
or
shlb
int
lods
call
test
inc
pusha
fnstsw
xor
aas
jno
xchg
mov
fcompl
xor
sub
bound
stos
xchg
xchg
testl
daa
inc
push
mov
pop
sub
lcall
mov
ss
and
call
push
mov
mov
out
add
mov
xchg
add
notb
pop
popa
or
push
popf
fnstcw
scas
gs
push
pushf
lret
sti
mov
test
xchg
jge
into
sub
push
add
aad
push
dec
push
out
dec
jne
movsl
sbb
and
jae
push
cmp
jmp
dec
repnz
pop
mov
adc
jo
push
stos
out
inc
xor
xor
and
rolb
mov
les
pop
int3
in
mov
pop
cmp
lcall
jbe
inc
mov
xchg
adc
jbe
xchg
cmp
jno
sub
repnz
daa
aaa
stc
nop
imul
or
inc
leave
xlat
je
xchg
sub
fidivl
adc
cwtl
out
dec
push
das
movb
dec
xlat
or
dec
and
cmp
bound
mov
sbb
jge
sub
jbe
inc
xchg
xor
or
rcrl
fstl
scas
stc
push
out
sub
cs
push
sub
imul
mov
pop
adc
mov
mov
iret
orl
push
in
fisttpl
push
repnz
jae
insl
xchg
xchg
adc
jo
mov
and
test
sub
jno
and
jb
mov
inc
xor
adc
mov
inc
pusha
ret
push
movsb
pcmpeqb
jnp
fwait
cmc
xchg
shlb
adc
cmpb
fnstsw
repnz
fisubrs
jnp
popa
jl
adc
arpl
daa
repz
ficoms
aam
out
xchg
inc
xor
setns
pop
mov
sbb
adc
imul
imul
pop
xor
or
xchg
xchg
loope
or
leave
repz
jecxz
push
rcrl
enter
aas
in
sbb
cli
insb
mov
lret
sub
jmp
lahf
sbb
mov
mov
mov
cmp
js
pop
push
movsl
jg
aas
dec
mov
dec
les
add
insb
ret
in
pop
bound
dec
ficomps
dec
loop
mov
in
pop
aad
mov
inc
pop
mov
or
jp
jp
out
push
in
inc
pop
xchg
aad
scas
inc
test
xchg
xchg
pop
mov
or
pop
out
shrl
mov
in
add
jmp
lahf
push
jbe
test
lahf
daa
xchg
or
jmp
std
push
sbb
sbb
push
push
add
stc
inc
mov
push
push
or
sahf
movsb
inc
es
adc
bound
jbe
negl
jno
mov
mov
adc
push
sti
stos
inc
sub
sahf
enter
hlt
js
mov
fcoms
adcl
push
inc
xor
ja
imul
jge
jno
jb
mov
add
ljmp
sbb
mov
pusha
cmp
cli
daa
cmpsl
jo
jg
pop
mov
fcmove
daa
mov
fidivl
mov
hlt
inc
sub
roll
shll
insl
stc
ret
sarl
sub
nop
call
imul
xor
inc
adc
insb
sub
cltd
push
jne
out
mov
rcrb
nop
je
adc
aas
test
rcrl
pop
lret
sub
and
leave
mov
add
stc
mov
jo
iret
add
sti
bound
shr
inc
adc
mov
xchg
mov
loopne
mov
sub
daa
fldcw
orl
xchg
add
leave
mov
loope
pushf
loope
fdivp
mov
rcrl
inc
clc
lret
pop
lcall
cmp
rorl
mov
nop
scas
ljmp
test
int3
hlt
sub
aas
pop
enter
les
xchg
and
xor
bound
cmpl
test
lcall
mov
dec
loope
xchg
add
pop
rorl
mov
add
mov
sub
xor
push
fiaddl
jnp
mov
or
adcl
mov
imul
dec
loope
andl
aaa
cmp
mov
pop
out
push
pushf
sub
pop
ror
pop
das
cmp
jp
adc
stos
test
jns
jbe
dec
mov
subl
sub
fistpl
inc
jl
cli
or
imul
loop
fimull
cmp
fcomps
das
dec
mov
aam
mov
movsl
ljmp
xor
insb
in
push
clc
xchg
mov
mov
ds
push
inc
cmpb
add
scas
push
mov
in
pop
scas
jp
adc
and
in
add
sbb
sub
cmp
das
sahf
daa
lcall
adc
mov
sbb
enter
pushf
inc
out
es
loop
or
jae
xchg
imul
sbb
mov
jge
push
mov
aas
inc
and
jmp
ljmp
loope
xor
pop
xchg
jno
mov
sbb
mov
pop
dec
data16
and
and
jecxz
push
or
and
adc
jmp
pusha
les
ds
push
repz
push
lahf
fst
or
cld
xorb
pop
sahf
insb
inc
pop
fsin
stos
cld
fwait
pop
cltd
mov
js
sub
cld
push
mov
mov
cli
and
and
mov
lret
int3
imul
in
mov
jbe
or
adc
std
aam
in
mov
push
popa
sbb
test
sbb
lods
inc
cmp
int3
movsb
jmp
or
pusha
xchg
rorl
jbe
sar
xor
es
ds
push
ret
add
xor
mov
rcrb
pop
sti
test
adc
push
mov
push
cmp
pop
or
out
mov
sub
pop
fnsave
mov
les
adc
aam
and
fbstp
les
aas
push
dec
add
mov
imul
sub
adc
cmp
js
mov
fs
pop
repnz
lcall
mov
add
push
adc
inc
lea
sub
movsb
pop
cmpsl
mov
sub
push
mov
xchg
aaa
or
sti
ss
jns
sbb
mov
adc
outsl
bound
fidivl
push
pop
xor
adc
pop
sahf
sbb
enter
cli
popa
lahf
stos
push
xor
out
inc
xchg
jbe
and
cmp
rcl
cmp
dec
push
fstl
nop
mov
mov
jno
pop
adc
scas
shr
loopne
mov
out
in
inc
xor
lret
xchg
enter
sbb
inc
cmp
push
shrb
cmp
out
adc
inc
jb
push
jno
aad
aaa
or
leave
pusha
dec
sub
scas
mov
sbb
dec
inc
xchg
xchg
and
pop
mov
lret
lret
push
sahf
pop
nop
movsb
mov
inc
mov
push
inc
push
sbb
ds
jbe
sti
jge
stos
ljmp
dec
pop
jns
add
outsl
push
and
mov
push
mov
lods
xchg
sbb
adc
fmuls
cmp
jp
data16
ror
xchg
sti
jecxz
mov
ljmp
mov
add
pop
pushf
xchg
dec
pop
mov
push
inc
int3
jge
js
push
inc
in
cld
lret
aas
imul
or
insl
jge
sub
outsb
pop
sti
cmp
mov
add
ret
dec
dec
fsubr
sbb
lea
stos
mov
jle
shrl
sbbb
jg
sub
jecxz
push
jle
enter
adc
jge
push
xor
cmp
hlt
add
adc
cmc
mov
mov
out
aam
enter
stos
stc
mov
test
loope
jns
mov
xchg
fildl
dec
or
lret
pop
icebp
orl
lahf
mov
sbb
xchg
adc
sub
jo
jle
jne
sub
mov
dec
fdivrs
xchg
enter
lods
mov
outsl
jns
or
test
add
pop
xchg
add
and
test
adc
adc
jg
jge
sbb
jg
lcall
das
push
or
shlb
pop
xchg
lds
or
pushf
cmp
jge
fstpl
mov
jecxz
add
inc
push
lret
pop
mov
push
push
aaa
cmp
and
int
xor
int3
lret
aad
out
inc
lds
pop
dec
push
dec
in
dec
cmp
mov
or
repnz
jg
xor
mull
testb
stos
lea
sti
int
push
sbb
pop
enter
pop
out
pop
outsb
fsubr
push
add
icebp
mov
pop
fidivrs
sub
lcall
add
xor
mov
in
inc
sub
sbb
add
inc
pop
sahf
dec
or
in
jge
ret
das
ja
scas
cmpsb
in
adc
andb
push
xchg
imul
fcomip
sbb
and
sub
minps
test
mov
aam
push
jp
iret
and
pushf
int
mov
xchg
mov
xchg
pop
cmp
in
push
or
outsl
push
in
push
fwait
nop
xor
push
mov
test
push
lahf
lea
sbb
push
sti
rclb
pusha
cmp
das
adc
adc
loopne
lea
repz
add
insb
cmp
enter
mov
movsb
and
mov
cmpsb
out
mov
mov
cmp
outsb
pusha
iret
and
in
inc
mov
es
jg
ret
addr16
inc
push
and
movsb
jecxz
ja
mov
push
clc
or
in
jmp
mov
ret
movsb
icebp
jno
negb
push
jp
rorl
sbb
iret
cmp
xchg
mov
sbb
jmp
cmp
lcall
xchg
mov
cmp
push
or
mov
push
jle
mov
enter
lret
adc
fs
inc
xorb
xor
inc
add
jmp
mov
test
test
vpsubd
out
dec
fprem
rolb
cmp
pop
add
push
jne
in
test
imul
arpl
shll
sbb
ds
cli
aas
push
aad
sbb
jle
js
sub
pop
jnp
arpl
lahf
andb
pusha
outsl
xchg
fsts
std
jno
das
mov
je
lea
mov
mov
ret
icebp
movsl
mov
add
dec
sbb
nop
push
jl
stos
xchg
loopne
mov
push
imul
dec
ds
shll
hlt
fisubrl
xlat
cmp
pushf
cmpxchg
je
sub
icebp
xchg
adc
xor
inc
push
out
inc
je
jb
xor
in
pop
lods
xchg
xlat
mov
adc
ja
cltd
test
cltd
inc
loopne
adc
push
jle
mov
movq
xchg
sarl
dec
ss
or
xor
pop
push
sub
inc
out
ljmp
dec
imul
push
mov
cmp
sub
pop
rcrl
orb
xchg
adc
hlt
jg
jnp
fbstp
std
inc
pop
mov
add
jmp
pop
mov
mov
push
or
andl
mov
fcomip
pop
hlt
pushf
lcall
frstor
aam
mov
cltd
test
jno
int3
ss
stc
popa
fsubrs
call
lods
frstor
fnstenv
in
aas
fisubrs
mov
push
int
fistl
shlb
into
stos
inc
push
rolb
jae
int
nop
shrl
add
int3
sbb
loop
test
or
mov
mov
sub
fisubs
mov
cmp
jne
roll
or
test
cmpsb
nop
jmp
jecxz
popa
or
scas
test
mov
pushf
pop
ss
call
or
out
dec
js
pop
inc
jbe
in
xchg
jno
jmp
or
cld
clc
lds
aam
pop
sbb
inc
mov
jg
call
sub
lods
cmp
loope
leave
pop
mov
sbb
xchg
pop
jae
xor
push
sbb
dec
mov
sbb
mov
test
sub
xor
inc
adc
mov
push
add
mov
pop
adc
and
pop
dec
aad
sti
insb
loopne
lock
add
xor
pushf
jb
add
std
xchg
jb
cmpps
mov
inc
pop
enter
ror
inc
insb
dec
and
add
and
jecxz
jo
repnz
sub
movsb
int
test
fsubs
mov
rorb
xchg
lods
das
mov
lea
test
ret
hlt
data16
mov
pop
insl
pop
cwtl
sbb
and
sub
test
xlat
xor
jg
movb
xor
push
dec
push
sbb
mov
jecxz,pn
in
stos
xchg
adc
mov
add
sti
mov
jae
ret
jne
int
pop
xchg
dec
add
repnz
arpl
jne
xor
inc
popa
jnp
das
cmp
lock
dec
test
mov
fstl
outsb
cmp
add
mov
aaa
es
mov
loop
sub
push
xor
add
mov
dec
and
mov
fbstp
cmp
fnstenv
cmp
xchg
xor
cmpsl
repz
movsb
enter
adc
xchg
pop
pop
dec
jge
push
jge
sbb
lret
xor
pop
clc
enter
shll
cwtl
xchg
xchg
pop
xchg
aas
inc
sub
cmp
dec
fcomps
mov
xchg
sub
ljmp
add
fwait
mov
test
add
adc
int3
lret
sub
jmp
repnz
stos
insb
jge
jp
mov
add
inc
fs
inc
lret
jae
outsl
add
decb
in
roll
cmp
mov
shlb
cmp
xorl
popf
jmp
ja
or
test
or
loope
push
adc
out
bnd
jmp
fs
stc
mov
or
xor
pop
out
ret
cmc
add
or
dec
jmp
inc
inc
repz
iret
and
imul
inc
add
xchg
inc
orb
mov
ret
lods
mov
stc
xchg
or
pop
cmp
cwtl
ss
loopne
pop
pop
pop
mov
mov
cmp
fldenv
data16
jle
fwait
mov
jo
sbb
mov
es
rcrl
push
push
pop
xor
js
xchg
sub
fistpll
lods
scas
add
test
mov
jle
push
mov
aaa
out
and
pop
loope
or
push
lahf
xchg
in
dec
inc
stos
sub
sbb
repnz
nop
lock
lret
mov
hlt
incb
xchg
jo
shr
adc
push
outsl
sbb
loop
sbb
mov
ss
sub
pop
sub
stc
sarb
inc
mov
xchg
into
ficompl
frstor
repz
dec
pop
out
jp
mov
fcomi
sbb
clc
xor
mov
inc
xchg
or
popf
xor
sub
mov
loope
aas
loope
ret
repz
mov
test
and
jmp
out
mov
jle
xor
sub
pusha
and
sub
out
dec
mov
imull
mov
repnz
push
jmp
ret
test
dec
stos
test
push
or
shlb
inc
inc
std
mov
sub
cld
outsl
mov
mov
in
mov
lahf
push
je
pop
divl
aad
sbb
dec
inc
xor
ds
fsubrl
dec
fisubrs
jmp
ss
inc
cmc
adc
leave
push
add
xchg
ss
or
pop
fldpi
mov
cld
stos
hlt
iret
cs
cmp
nop
pop
test
push
aaa
xor
cmp
lcall
and
lcall
pushf
jne
adc
repnz
mov
out
adc
mov
jmp
dec
xchg
in
push
jo
out
push
fadds
addr16
and
xchg
fwait
ja
sub
lret
add
pop
push
popf
hlt
mov
shrb
mov
push
mov
fwait
sub
dec
pop
jns
mov
add
in
fsubl
mov
das
sbb
ret
push
jg
test
dec
pushf
das
jl
inc
shrl
xor
es
xchg
sub
js
add
fmuls
mov
loope
adc
imul
cld
jle
mov
mov
sbbl
in
insl
movsl
push
dec
cmp
arpl
mov
pop
lds
xchg
int
call
or
shl
sti
jbe
sahf
inc
fmulp
cmc
cmp
xchg
lds
lret
mov
outsb
cmp
push
xor
pop
lea
popa
movsl
sti
mov
cvtpi2ps
enter
adc
push
pusha
mov
cld
cld
js
dec
stos
push
and
call
xlat
mov
adc
adc
fnstsw
add
popf
push
pop
fnclex
pop
sarl
enter
mov
adc
outsl
xchg
adc
lods
cmpsb
std
out
pusha
dec
sub
and
shrb
lret
mov
push
jne
mov
fidivs
push
adc
in
js
mov
jo
pusha
clc
inc
ja
testl
repz
int3
cld
cltd
scas
lea
pop
daa
outsl
adc
dec
lock
mov
or
pop
mov
in
cmpxchg
mov
insl
mov
test
inc
into
arpl
jle
cmp
ja
lods
dec
and
cld
cmp
loopne
sbb
fucomi
jbe
cmp
leave
push
scas
lar
aad
jp
or
enter
dec
xchg
outsb
mov
pop
ljmp
xor
test
sub
outsl
pop
sbb
cmc
sub
clc
iret
addb
jb
sbb
push
sahf
cmp
add
sub
bound
cs
inc
dec
fmuls
aad
or
mov
pop
cmp
out
pushf
inc
sub
mov
inc
or
add
pop
icebp
movsl
ret
dec
mov
pop
imul
scas
lret
dec
fidivl
repnz
jmp
out
add
and
dec
or
lret
pop
jle
ret
push
data16
adc
js
mov
pushl
push
sbb
mov
add
cwtl
push
cmp
add
add
mov
stos
pop
mov
mov
cmc
clc
loop
sub
rorb
bound
pop
sub
mov
arpl
mov
iret
into
mov
mov
lret
ret
in
mov
cmp
push
xchg
mov
out
adc
lock
test
repnz
and
cmp
add
pop
cmp
imul
int
iret
data16
lds
imul
sbbl
iret
aad
daa
addr16
lret
cld
jns
jns
fistpl
mov
std
sub
adc
aam
jo
pop
sub
negl
daa
and
xchg
pop
jge,pt
jno
lcall
and
push
ss
add
inc
test
jo
addr16
fstpt
fadds
and
in
fwait
dec
or
mov
xchg
sbb
cmp
and
xchg
mov
insl
and
testb
jae
sub
pop
aaa
dec
popa
mov
test
insb
iret
fnstenv
pop
loope
cltd
popf
sub
das
stos
stos
inc
jecxz
dec
adcl
loopne
xor
xchg
mov
push
xchg
mov
lods
subl
jl
sbb
arpl
inc
cmc
fiaddl
or
cs
fs
and
icebp
sub
fbstp
lret
jae
mov
lahf
jl
aad
mov
stos
mov
pop
outsl
roll
jle
inc
sbb
sti
lcall
sub
cwtl
mov
xor
cmp
adc
mov
in
dec
rep
or
rclb
cmc
test
push
push
ret
inc
xchg
sub
and
int
inc
xchg
fdivrp
pop
lods
cmpsb
out
fsubr
test
movsl
lds
das
cmp
xchg
sbb
outsb
into
push
jo
insb
loopne
pop
movsb
aas
mov
cmc
add
xchg
mov
lret
std
aas
mov
xchg
jbe
add
mov
jmp
out
dec
loopne
jb
movsb
xchg
fimuls
dec
mov
mov
faddl
mov
ficoms
xchg
mov
xchg
push
ss
dec
and
fdivrl
stc
nop
lret
fnstsw
sbb
inc
or
pop
mov
ret
jl
pusha
push
mov
mov
pusha
in
push
jl
mov
and
lea
mov
pop
stc
adc
sbb
sbb
aaa
fs
adc
fisttpll
jle
icebp
popa
ljmp
ss
fdivs
test
iret
mov
outsb
mul
cmp
iret
push
cmp
cli
pop
cmp
push
lods
je
push
out
xchg
divb
mul
ds
es
adc
cmp
sub
jle
mov
add
mov
and
test
xor
and
inc
pop
mov
sbb
les
jo
in
mov
add
shrb
negl
repnz
jge
mov
dec
xor
rcrl
push
pushf
jbe
cmp
cmp
call
cmp
out
add
sti
mov
fs
add
cmpl
mov
or
pusha
push
pop
loope
out
shl
das
or
pop
push
push
xchg
xchg
loop
movsl
das
push
jbe
outsl
aad
sbb
shrb
addr16
push
cmp
and
add
into
xor
push
mov
xlat
jmp
ss
push
sarb
test
ss
fists
and
mov
mov
mov
add
pop
out
sub
xchg
shl
cmp
popf
sbb
ds
push
add
pop
sub
ds
jno
in
ret
cmp
jo
push
rclb
xor
inc
aas
xchg
cld
mov
enter
divb
sbb
movsl
movsl
add
fisubl
in
data16
in
outsl
add
es
add
ja
insb
in
jecxz
mov
rorb
lds
fsubrs
cmp
add
jle
mov
or
add
daa
mov
pushf
sub
int
inc
popa
cmp
push
iret
jp
jo
mov
pop
push
dec
sbb
xor
add
ja
mov
inc
and
push
and
mov
lods
and
fcomi
cld
cmp
mov
add
roll
lcall
and
insb
sbb
xchg
ds
pop
pop
mov
repnz
push
int
sarl
daa
aad
nop
jl
jb
jne
mov
repz
pop
movsb
push
ljmp
dec
or
mov
and
out
and
inc
aaa
mov
xchg
sub
and
jb
arpl
test
mov
pop
repz
jecxz
pop
gs
movsl
push
dec
sub
fdiv
shll
cmp
sbbl
aas
addb
sbb
push
cltd
jne
jae
cld
sbb
inc
push
xchg
ljmp
in
dec
push
push
inc
adc
icebp
xor
xor
mov
jbe
adc
rol
xor
pop
arpl
push
in
mov
aas
daa
imul
mov
mov
and
adc
mov
dec
xor
cli
lret
mov
cwtl
push
movsb
jecxz
in
sub
in
les
cmpsb
adc
add
sbb
pop
outsb
enter
cli
push
adc
es
cmpsl
outsl
cmp
xchg
sbb
test
and
mov
stos
push
or
fsubs
jmp
neg
jb
stos
pop
jmp
mov
outsb
repnz
or
mov
int
push
jl
xor
loope
popa
jnp
add
pop
pop
sub
mov
iret
mov
sbb
mov
shll
pop
inc
cmpsl
dec
outsb
insb
jle
inc
fildll
cmp
adc
call
pop
mov
jnp
outsl
inc
leave
xchg
jbe
insl
jge
dec
fnstenv
pop
mov
in
cmp
cld
icebp
adc
push
inc
fnsave
mov
and
lret
shll
movsb
andl
ja
mov
cs
mov
dec
xabort
loop
cmc
mov
push
sti
orl
push
shrl
push
fcompl
adc
clc
jb
rclb
and
pop
jae
aas
and
movsl
inc
xlat
push
jbe
pop
add
incb
jb
push
test
mov
mov
enter
enter
mov
add
sbb
mov
jnp
fdiv
xlat
adc
stc
xchg
mov
jmp
decb
mov
add
insl
sbb
cli
and
and
jge
jmp
lahf
shl
dec
lods
pop
dec
aaa
int
icebp
lret
sahf
push
push
call
mov
call
push
out
xchg
xchg
sub
stc
mov
scas
mov
sub
jbe
mov
test
lods
fsubrs
arpl
ljmp
sti
je
fstpl
fbld
imul
cli
sub
mov
add
mov
jb
mov
das
out
push
aam
fxch
or
xchg
cmp
xchg
cmpsb
mov
lret
mov
stos
xchg
push
sbbb
roll
lds
test
data16
add
in
nop
push
inc
ret
pop
and
sub
sbb
ds
jl
add
sahf
and
test
mov
cmp
xor
fmul
sbb
jbe
scas
test
pop
lds
rcll
pop
mov
xorb
ficomps
scas
ret
and
push
int
scas
decl
in
je
mov
out
lea
jp
daa
pop
jb
fidivrl
nop
jg
pop
mov
lods
cld
gs
loopne
outsl
add
mov
pusha
and
sub
inc
mov
je
pop
insb
jno
push
stos
mov
mov
mov
fisubs
outsl
out
mov
add
pop
pushf
cld
enter
cmp
popa
sti
fldcw
popa
mov
scas
aas
leave
int
xchg
and
inc
fsubrs
mov
lahf
ss
mov
xor
in
fiaddl
enter
mov
iret
notb
sub
jo
mov
lods
repz
pusha
lods
cmp
not
aas
test
mov
arpl
mov
aam
popf
gs
push
es
pop
jmp
and
xchg
mov
test
pop
adc
xchg
mov
xchg
addr16
or
ret
out
xchg
fsubs
mov
shll
fwait
inc
scas
mov
jns
push
sbb
aad
stos
cmp
sub
adc
sub
cs
out
cwtl
sub
push
rcrl
lods
ja
and
add
int
call
xchg
das
sbb
xchg
cmp
jo
mov
outsl
and
insl
movsb
fisubrl
movsl
sbb
and
mov
inc
popa
faddl
lahf
push
pop
lock
or
lock
xchg
inc
cmp
cmpsl
push
call
inc
or
jbe
jecxz
dec
and
fdivrl
add
into
iret
add
jbe
xor
cwtl
data16
mov
xor
fiadds
adc
sub
push
cmp
jg
loope
dec
int
loop
call
orl
xchg
daa
in
fidivs
repnz
jno,pt
addr16
lods
xchg
aam
pop
loopne
add
mov
inc
jmp
gs
sbb
fiaddl
sub
push
dec
adc
aas
inc
outsl
daa
scas
jl
cmp
sub
sub
jnp
int3
pop
jge
sbb
in
aas
pop
scas
sub
xor
movsl
or
out
dec
mov
and
sbb
stos
mov
sub
mov
mov
mov
cmp
xor
push
push
repz
dec
add
dec
in
dec
dec
loopne
jg
jg
mulb
daa
out
loop
and
xchg
test
rcrb
or
sbb
mov
push
mov
inc
cli
shl
dec
shrl
sbb
scas
jno
lock
mov
outsw
add
loope
scas
and
loope
mov
les
clc
mov
dec
mov
mov
jb
scas
movb
stc
mov
add
in
les
pop
mov
and
dec
fcmovnu
sbb
jmp
sti
cmp
xor
shll
test
dec
stos
xor
mov
repnz
rorb
xchg
sbb
enter
cmp
in
mov
dec
ja
jns
pop
adc
adc
lret
mov
aaa
dec
adc
fwait
xchg
xor
lods
cmp
adc
dec
push
xor
sbb
mov
jp
mov
inc
fildl
test
cmpsl
fists
sbbb
push
dec
jecxz
push
dec
bound
negb
nop
rorl
cmp
fsts
xchg
sub
pop
ss
int
push
repz
mov
les
adc
repz
or
arpl
in
xor
into
mov
or
bound
pop
push
jno
dec
repnz
enter
clc
out
inc
flds
cmp
push
dec
bnd
cmpb
sub
xchg
shll
mov
add
fsubrl
push
mov
bound
mov
jmp
jge
popl
xchg
inc
xchg
add
inc
outsl
ss
mov
cmpsb
scas
mov
dec
iret
adcb
call
adcl
adc
push
push
mov
cs
xor
cs
loop
adc
lods
and
ja
out
adc
push
or
mov
fimuls
pop
mov
mov
and
mov
imul
add
ljmp
sbb
dec
mov
jne
cltd
cltd
les
in
xchg
insb
dec
push
jle
fisubrl
mov
nop
faddl
xor
aaa
aam
mov
pop
jle,pn
imul
adc
add
scas
inc
cmp
or
and
xor
sub
movl
lea
ret
ds
xchg
in
push
dec
xchg
addr16
js
mov
lods
lret
leave
in
jge
cwtl
xor
jb
stos
fwait
inc
stos
leave
leave
mov
fwait
cmp
test
pop
ret
dec
dec
sub
repnz
test
dec
push
mov
dec
movsl
mov
or
cmpsb
imul
xchg
jb
fs
loopne
ss
jg
mov
sbb
fwait
sub
sbbb
mov
clc
arpl
ret
jp
mov
mov
cmp
fs
cmpsb
out
xchg
fists
fidivs
mov
xchg
decl
cmc
rorb
xor
das
out
inc
and
mov
sub
pop
dec
cmpsb
add
and
push
lea
pop
pop
imul
and
or
mov
cmp
inc
cltd
sbb
cltd
xor
mov
inc
lds
fmul
xlat
mov
mov
mov
enter
test
leave
test
into
mov
jecxz
push
pop
push
or
insb
ljmp
jnp
repnz
jmp
cmp
jmp
pop
loope
mov
inc
inc
push
or
xchg
adc
arpl
inc
push
ficompl
xchg
outsl
xchg
sub
xchg
jns
push
cwtl
mov
movsb
outsl
out
aaa
mov
out
add
dec
mov
std
sub
in
sahf
cmc
call
pop
jge
int3
stos
mov
ja
int3
push
inc
mov
fcmovb
in
mov
add
pop
push
stos
ds
cmp
mov
mov
cmp
jno
outsb
and
int
fidivrl
loopne
mov
inc
cmc
or
cld
test
scas
das
rcrl
aam
lds
mov
rcll
sbb
into
mov
daa
push
test
pop
mov
ja
jecxz
cmpl
sub
rclb
mov
stc
pop
clc
push
mov
cwtl
outsb
daa
clc
inc
loopne
inc
loop
mov
imul
sub
movsl
cmp
in
test
xchg
jmp
or
scas
inc
push
sub
rcll
mov
and
bound
sub
dec
add
mov
aam
aaa
push
xor
fwait
mov
imul
aas
mov
repz
mov
mov
inc
into
gs
sti
mov
jp
ret
mov
stos
adc
push
mov
mov
sti
clc
lret
iret
push
or
lcall
je
mov
and
inc
jns
mov
rclb
cmp
lret
mov
outsl
incb
push
mov
mov
sarl
add
xor
fs
cmp
lock
or
cmpsl
lods
mov
pop
lds
jno
jno
in
mov
into
mov
add
pop
cmpsb
insb
push
mov
jmp
rcrl
jno
mov
push
mov
enter
xchg
fstpt
sbb
clc
or
cmp
jge
jle
dec
outsl
out
lcall
jg
add
jecxz
bnd
or
test
sub
jge
push
loopne
pop
push
ja
mov
testb
push
xchg
dec
push
inc
jg
jmp
xchg
stos
xor
and
sbb
jbe
cmp
sub
mov
mov
imul
cmp
pop
int
stos
jp
sub
sub
imul
popa
ljmp
cmp
or
jmp
mov
mov
loopne
fs
lock
and
cmpsl
pop
mov
aad
enter
js
cmp
cs
jmp
push
icebp
mov
fbld
jbe
aaa
jne
adc
hlt
pop
or
sub
test
xor
fs
mov
push
out
test
add
mov
mov
cmc
cmp
mov
test
aaa
xchg
js
imulb
aam
ja
jmp
dec
adc
lds
mov
insl
mov
aaa
repnz
mov
inc
in
cld
das
in
dec
or
cmp
xchg
push
cld
pop
test
shl
scas
js
cmpsl
add
push
and
scas
cmp
pop
xor
pusha
dec
jl
pop
inc
lret
sbb
in
xor
mov
and
pop
adc
sahf
push
test
xchg
sub
dec
dec
lahf
ds
movsl
jb
pop
and
lds
jl
sub
fwait
sub
int
push
push
rorb
inc
loope
adc
jne
jg
sub
push
jl
fwait
data16
pop
notb
into
add
sbb
mov
fwait
sub
aas
push
adc
inc
cwtl
xchg
rcrb
and
aas
xor
cmp
aam
xor
cltd
sbbb
xchg
lock
jae
sahf
sbb
cmp
push
mov
and
movsl
rolb
out
movl
or
gs
lret
hlt
jbe
and
mov
aas
add
sbbl
mov
lahf
ss
and
dec
mov
dec
jle
ror
es
push
pop
lahf
iret
mov
call
or
aaa
cltd
pop
unpckhps
push
lret
and
mov
xor
mov
and
mov
and
movsl
nop
lods
jle
lds
ret
mov
or
push
or
mov
sub
push
ljmp
ljmp
mov
pusha
jnp
push
push
out
push
hlt
aaa
lds
lcall
mov
adc
adc
sub
and
mov
push
fildll
or
shrl
popa
lahf
xchg
cmpsl
rolb
out
test
incb
xchg
or
andb
xchg
pusha
jle
mov
sbbl
add
sub
xchg
mov
aam
dec
fwait
shr
lds
jecxz
repz
ffreep
loopne
sbb
mov
push
pop
inc
ljmp
sahf
mov
sub
xchg
push
test
rcr
lock
cmpsb
ds
outsl
xchg
sub
nop
imull
sbb
outsl
shlb
sbb
and
faddl
xchg
sahf
xor
sbb
mov
insb
mov
sbb
sub
dec
mov
movsl
lds
icebp
xchg
dec
or
test
pop
and
nop
xor
lcall
mov
lcall
inc
cmpsl
nop
mov
fbstp
aaa
jbe
pop
lcall
sub
loopne
mov
sarb
jb
push
push
pop
pop
test
xor
scas
inc
jg
movsl
push
outsb
inc
je
stos
lods
fcomps
lret
xor
inc
leave
fsubs
mov
iret
subb
pop
andl
fldt
nop
mov
inc
pop
cmp
sbb
cltd
stos
stos
popf
mov
add
mov
les
dec
or
je
popf
dec
ja
idivb
int
sahf
xchg
mov
cmp
into
gs
xor
pop
je
dec
int3
aam
sbb
sbb
xchg
ljmp
jge
adcb
cmpl
sbbl
jne
pop
jne
pop
orl
repz
movsb
out
test
push
lods
xchg
stos
movsl
cld
inc
and
jb
lods
xchg
add
in
fdivs
push
push
cmc
iret
or
test
fstl
ffree
pop
push
jns
lock
insl
adc
cmp
mov
jmp
std
test
divl
fstpl
inc
mov
dec
xchg
dec
cmp
in
pop
mov
mov
cmc
shll
sbb
cmp
mov
test
daa
mov
push
mov
stos
jmp
in
les
xor
test
mov
mov
mov
inc
cli
lret
mov
jo
shlb
inc
in
push
dec
out
js
pop
xchg
sub
rcrl
les
mov
enter
jmp
out
push
nop
rcl
aam
jne
push
fistps
pop
shlb
imul
xor
iret
or
out
push
test
mov
mov
std
jecxz
ds
sarb
cmc
out
pop
repnz
out
sbb
adc
sbb
aas
mov
call
and
mov
add
out
je
pushf
testb
lods
pop
call
mov
flds
jae
sub
fiaddl
sti
jge
hlt
inc
fxam
iret
fcomps
out
leave
hlt
movsb
pop
pop
test
lret
rcrb
push
popf
inc
lds
pop
js
jmp
and
jmp
stos
outsb
rcr
test
sub
shl
sti
popa
scas
mov
das
out
popa
scas
addr16
pop
js
mov
jge
mov
and
sbb
jno
sarb
push
stos
fcmovnu
jbe
ret
shlb
cmc
roll
mov
lds
mull
mov
xor
fimuls
shl
loop
and
or
fcompl
cltd
pop
out
cs
dec
add
arpl
mov
jge
add
sbb
cmovle
lock
inc
pop
loopne
pushf
add
push
jno
inc
mov
insl
adc
outsb
sbb
push
push
sbb
dec
pop
sahf
xor
imul
cmpsl
add
call
arpl
outsl
cmc
daa
mov
addr16
aas
shrl
loopne
mov
daa
add
xchg
adc
sbb
sahf
lods
dec
lods
push
shrb
jnp
out
xor
fidivrs
cmpsb
shr
mov
shll
mov
loopne
fistpll
inc
arpl
pop
data16
push
nop
stos
sub
sti
xor
shrb
test
sub
repnz
movsl
clc
dec
mov
aad
and
jbe
out
xchg
lods
sub
loop,pt
push
pop
vpaddsw
les
pop
stos
rcrl
pop
idivb
lahf
pop
and
and
insb
add
nop
stc
push
das
sbb
sub
divb
xor
push
xor
rcll
mov
push
pop
fmuls
pop
dec
inc
xchg
push
mov
pop
popl
pop
scas
out
inc
xchg
fs
adc
ret
out
jb
fisubrl
mov
out
test
mov
insb
sbb
aaa
mov
out
lea
mov
or
add
dec
ret
js
es
cltd
shll
mov
pop
out
ja
mov
adc
mov
mov
fisttpll
divl
add
add
adc
pop
in
lcall
mov
scas
and
imull
sbb
int
divl
call
insb
ja
stos
dec
mov
scas
inc
fmuls
pop
mov
stos
int
pop
or
mov
pop
or
mov
je
dec
mov
mov
add
cli
test
push
sub
mov
ja
mov
into
popf
mov
roll
xchg
dec
scas
arpl
fsubrs
xor
mov
outsl
iret
sbb
es
fisubrs
lds
cmpsl
cmpsb
and
cmpsb
mov
cwtl
mov
jno
icebp
xchg
and
sbb
into
aas
mov
push
stc
dec
idiv
mov
mov
out
jecxz
mov
jb
aad
shlb
shrb
push
cmp
xlat
out
pop
xor
les
stc
enter
xlat
mov
xchg
push
ficomps
ret
idivb
push
and
cld
test
jae
mov
inc
pop
lcall
mov
aas
repnz
fs
adc
adc
xchg
mov
cmp
pop
add
cmp
push
int
jnp
pushf
push
shlb
sahf
jbe
jge
ss
xchg
hlt
ret
adc
adc
fwait
aaa
push
xor
mov
pusha
jmp
xchg
dec
imul
out
push
mov
mov
cmpsb
dec
shll
dec
push
stos
clc
loop
loop
xchg
loope
xchg
mov
shlb
and
fidivl
scas
stos
jmp
xchg
cmp
test
lods
adc
out
movsb
mov
test
push
push
testl
mov
ja
adc
xchg
jecxz
mov
into
add
dec
ss
mov
push
mov
inc
pcmpgtd
jle
icebp
js
lcall
int
out
in
push
and
jbe
negb
mov
rcrb
loope
mov
lea
addb
fcomip
repnz
sahf
and
pop
xchg
xor
std
dec
sbb
push
rol
pop
and
push
mov
out
pop
fwait
sbb
fs
loope
enter
jnp
mov
and
jae
cmp
jg
faddl
or
push
test
in
std
test
push
adc
arpl
adc
mov
inc
sti
out
int3
ds
lods
icebp
jae
pop
data16
adc
gs
hlt
xor
fnstcw
call
ret
jbe
aam
scas
push
inc
cli
push
jno
pop
shlb
or
jg
icebp
and
jg
lret
ja
cmp
xchg
xor
xchg
in
sbb
add
pop
mov
stos
aas
in
mov
xchg
outsb
lret
jbe
inc
cmpsl
adc
adc
es
mov
xchg
lods
imul
je
mov
mov
mov
rclb
int
or
mov
cmc
mov
mov
cltd
xor
mov
rcr
inc
or
mull
or
ret
jl
push
cli
and
ds
sub
adc
loopne
cli
ret
in
mov
xor
mov
pop
stc
cmpsl
push
and
loopne
jno
out
sub
xchg
pop
mov
push
sub
shll
cmpsl
sti
pop
jmp
lahf
out
test
repz
pop
sarl
mov
ds
lcall
jmp
sbb
mov
push
pop
lock
in
daa
xor
push
sub
ret
dec
sbb
xchg
sub
lods
shll
test
icebp
sub
mov
lret
hlt
push
out
cmpsl
cmp
and
mov
das
in
ficoml
mov
dec
cmpsb
ror
sbbb
jnp
out
aad
call
inc
or
ret
fwait
stc
les
rcr
sbb
sub
xor
xchg
push
mov
into
test
xor
js
push
rclb
addl
xor
sub
jmp
xchg
notl
aad
mov
outsb
sub
push
fbld
jmp
inc
test
insb
das
stos
stos
push
rcrb
pop
cmp
xor
js
enter
js
mov
in
xor
stc
call
shll
jno
pop
outsl
aas
cmpsb
test
xchg
lret
popa
jbe
inc
mov
jae
cmp
and
pop
icebp
dec
sysret
xchg
dec
fidivrs
out
stc
pop
or
xor
dec
push
imul
xor
outsl
imul
pop
jno
pop
cmpsl
out
jns
xlat
cli
lds
hlt
push
outsb
subl
xchg
fs
or
shlb
dec
mov
jmp
fldln2
stos
addl
ret
sub
and
mov
adc
inc
xor
pusha
cmp
push
xchg
dec
push
or
push
addr16
rcr
icebp
mov
lock
mov
and
mov
ret
xchg
ret
adc
add
add
sub
int
cmp
fisubrl
ret
dec
jo
xor
mov
shrb
add
jl
sbb
jno
jbe
into
xor
scas
cmp
mov
movsl
cmp
cmc
ss
jg
mov
push
lea
aad
sub
sbb
test
enter
subl
pop
mov
dec
dec
fisubrs
fidivrs
pop
mov
push
sub
sbb
jge,pn
adcb
jmp
adc
dec
push
out
repnz
lcall
cmp
pushf
hlt
fwait
mov
inc
ljmp
mov
mov
andb
mov
in
ror
jnp
xor
xor
mov
je
int
repnz
xor
mov
outsb
xor
jg
cwtl
jne
cmpsl
jg
daa
popf
movsb
push
je
or
sbb
inc
lock
jge
jle
pop
das
cmpsb
sahf
clc
daa
mov
je
sbb
adc
mov
mov
out
insb
std
ss
add
ja
out
and
and
cmp
push
sahf
fistpl
inc
pop
adc
lret
push
testb
fs
rcl
mov
xorl
repz
xchg
add
call
mov
mov
pop
sub
push
push
or
int
adc
cli
out
pop
out
pop
inc
or
scas
and
outsb
mov
aad
or
ljmp
mov
shlb
mov
sbb
or
lcall
mov
push
stos
mov
sbb
cmp
pop
aaa
insl
call
stos
inc
outsl
dec
mov
mov
enter
pop
jg
mov
dec
test
fnstsw
xchg
nop
fbstp
push
ss
lea
cmp
mov
push
cmp
addr16
add
and
xchg
xchg
inc
std
add
cmp
lods
pop
repnz
cmp
repnz
pop
xchg
lret
pushl
ljmp
inc
xor
pop
sahf
bnd
loopne
mov
dec
sub
inc
dec
dec
cwtl
ja
outsb
jns
jl
addl
add
je
or
dec
xor
push
pop
mov
mov
insb
xor
and
push
mov
mov
xor
inc
pusha
or
mov
hlt
les
dec
push
jecxz,pt
cwtl
pop
enter
pop
mov
jbe
rcrl
jecxz
pop
mov
scas
and
ret
enter
icebp
sub
dec
adc
jmp
daa
dec
iret
outsb
sahf
mov
jmp
dec
pushf
ds
xchg
xchg
pop
cmpsb
aas
mov
adc
mov
daa
in
mov
jae
lods
popa
jnp
data16
clc
adc
jg
push
or
insb
cmp
xchg
sti
xchg
pop
or
sbb
mov
repz
jmp
jnp
cmpsb
xor
sbb
mov
inc
cld
fnsave
shrb
dec
mov
pop
pushf
cmp
mov
imul
jp
daa
lds
testb
out
out
mov
jno
mov
clc
nop
aas
and
pop
fsubl
lods
xchg
cmp
adc
adc
lcall
xchg
aas
ss
out
sub
daa
and
and
iret
dec
adc
in
iret
cltd
xor
or
jae
pop
jmp
frstor
or
test
mov
movsb
xor
ss
or
cmc
mov
add
mov
adc
adc
mov
adc
xchg
sub
addr16
lcall
or
add
inc
aam
cwtl
jmp
cmp
mov
pop
or
cmp
fistl
and
repnz
xchg
icebp
mov
mov
imul
jge
jns
sub
cmp
xchg
and
ret
xor
stos
inc
movsb
fsubl
pop
insl
cltd
out
jge
std
mov
xchg
dec
inc
jne
fistl
mov
cmp
pop
lods
pop
call
or
inc
xchg
or
xchg
outsb
xchg
jg
xchg
jle
rol
insl
sbb
jbe
ret
fdivl
pop
fs
dec
jns
and
sahf
loopne
dec
gs
cmpsb
mov
es
pop
jb
movsb
push
pop
pop
shlb
loop
push
ja
push
stc
fists
mov
mov
xchg
stc
xor
sub
fidivs
aas
ret
or
xchg
ja
pop
shll
rcll
cmp
imul
shrl
lcall
jp
popa
mov
inc
sbb
fstpt
cli
test
lret
inc
loopne
pop
icebp
sbb
mov
int3
enter
fstp
jb
mov
lods
nopl
sub
jae
scas
cmp
push
lds
jb
xchg
les
mov
out
sti
into
arpl
jo
out
outsl
ljmp
daa
or
cmp
mov
aas
xchg
ud1
xor
xchg
jmp
shlb
cmp
shlb
and
jb
loope
sarl
sub
repz
lcall
jmpw
pop
xor
push
and
in
scas
cli
inc
fadd
cli
cmp
pop
mov
sbb
cli
jl
pop
sub
hlt
sbb
push
xor
dec
or
add
xchg
jmp
repnz
or
insb
add
into
mov
repz
icebp
and
fnstenv
cmp
pop
jb
imul
cmp
adc
sbb
pop
mov
test
mov
jp
sbb
out
stos
lds
ds
push
pop
mov
fxam
jbe
inc
or
stos
cli
or
xor
cmp
push
clc
jbe
sub
cltd
jae
sbbl
sbb
push
arpl
inc
subb
and
pop
adc
add
mov
int3
iret
mov
cwtl
mov
push
in
decl
lods
dec
lds
insl
lret
jle
adc
notl
mov
mov
jno
ljmp
xor
push
mov
mov
push
fnstenv
ljmp
pop
pop
sbb
jae
xchg
lock
movb
jl
pop
mov
sbb
and
test
mov
or
push
imul
test
out
push
orl
hlt
push
sub
push
cmp
test
xor
test
ret
push
scas
in
mov
mov
push
mov
mov
fnsave
test
sub
test
nop
push
mov
pop
fidivl
mov
clc
jae
cltd
xchg
inc
mov
addr16
shrb
lock
jp
test
dec
test
call
fldcw
mov
mov
push
ja
es
fs
scas
ret
push
cmpsb
pop
test
mov
loopne
sub
pop
sahf
cmp
into
gs
pop
jno
xchg
in
mov
mov
jmp
jb
shll
insb
pop
mov
cmpsb
es
pop
and
sub
lods
leave
xor
cmp
or
fcomps
xor
mov
jb
in
inc
decb
cs
xchg
add
mov
fs
ds
mov
imul
or
jno
and
lret
nop
outsl
and
xor
imul
dec
out
loope
outsl
pop
fsubr
mov
sub
add
dec
out
pop
insl
shrb
in
std
push
es
mov
jnp
xor
inc
adc
out
jo
inc
cmpsl
sbb
mov
push
cmp
xor
stos
sub
xchg
jae
bound
popa
mov
mov
aas
clc
arpl
jecxz
ret
fisttps
fmull
adc
pop
pop
and
pop
xchg
sub
mov
fidivs
xor
scas
adc
adc
int
subb
mov
mov
xchg
inc
sti
mov
rcll
adc
js
fcomps
pop
mov
scas
lahf
pop
or
sahf
mov
notb
outsl
dec
mov
mov
outsl
repnz
lods
mov
hlt
test
push
addr16
xchg
imul
dec
dec
or
mov
mov
int3
sbb
inc
sub
cmc
pop
adc
out
mov
sahf
lods
test
faddl
and
imul
js
jp
lea
insl
sti
loope
adc
hlt
dec
notl
out
loope
lea
cmp
andl
popf
inc
sbb
popf
and
shlb
rolb
pop
mov
or
shll
imul
lods
inc
push
ffree
out
and
xchg
push
cmpsb
mov
test
add
mov
mov
mov
pop
test
mov
not
push
rclb
icebp
jmp
jo
push
incl
add
insb
mov
shr
xor
mov
rorl
xchg
mov
mov
jb
xor
outsb
repz
fidivs
jle
xor
cs
fiaddl
pushf
sbb
bnd
fbld
adc
mov
dec
cli
push
adc
ss
jbe
pop
push
mov
adc
ss
std
or
shll
mov
push
xor
test
sbb
jp
lret
jb
mov
call
aaa
or
imul
movsl
jl
mov
sbb
add
xor
arpl
and
insb
int3
mov
xor
ds
pop
ja
xchg
testb
cmp
mov
sub
add
adc
icebp
mov
mov
je
push
push
fucomi
fs
out
inc
jg
or
js
xchg
lods
ljmp
mov
mov
call
cmpsb
jmp
loop
xlat
lods
fmull
movsl
imul
mov
fldenv
cs
and
aas
push
icebp
dec
int3
xor
std
insl
jl
lahf
sbb
lret
jbe
test
ljmp
mov
sub
push
bound
mov
mov
xchg
call
sbbb
lods
in
jecxz
fisttpll
jmp
jg
repnz
push
shrl
data16
sbb
test
push
imul
iret
cmpsb
xor
push
dec
lea
add
out
fnsave
lret
ret
sti
pop
hlt
test
movsl
sbb
mov
ds
push
inc
xchg
mov
test
mov
xor
sub
mov
cmp
fistps
lahf
sarb
sbb
icebp
data16
jae
xor
inc
fistps
inc
sbbb
in
dec
es
sahf
xor
out
test
clc
inc
test
pop
movsl
test
cwtl
das
mov
fidivs
xor
pop
inc
leave
pushf
test
loopne
repnz
mov
xorb
mov
pop
mov
ret
int3
inc
gs
fsubrs
cmp
cld
inc
sub
fimuls
sbb
ds
mov
testl
or
xchg
popf
repnz
ror
lds
gs
pop
rcll
push
cmp
push
aas
push
or
frstor
jb
scas
push
test
jo
out
scas
xchg
lcall
in
mov
repnz
test
mov
jns
sbb
dec
shrb
jne
or
into
push
daa
ret
xchg
es
pop
adc
jno
mov
fld
imull
pcmpgtb
dec
and
mov
loop
adc
test
xor
pop
mov
push
mov
mov
push
andl
sbb
ds
pop
jnp
lcall
cmp
shlb
pop
mov
hlt
push
xor
sbb
and
push
hlt
mov
mov
ficomps
lock
mov
pop
daa
jge
xor
movsl
inc
repz
inc
popa
sub
fnsave
xor
xchg
push
mov
push
cmp
cmp
call
test
data16
cmp
xlat
jbe
std
push
add
sysret
pop
mov
dec
subl
ds
or
pop
sbb
enter
sbb
adc
dec
in
movsb
cmp
push
out
lods
mov
cmp
repz
sahf
and
in
popf
xor
lock
mov
cmp
pop
sahf
inc
jl
cmpl
fwait
push
push
add
jbe
xchg
push
inc
cltd
dec
loopne
ja
sbb
fwait
push
jge
sub
les
and
mov
inc
insl
inc
adc
test
xchg
in
fbld
inc
mov
test
and
test
xor
pop
xlat
pop
outsb
mov
jecxz
and
sbb
and
mov
mov
je
mov
bound
cmpsl
push
adc
mov
movb
push
out
into
push
sub
fwait
orb
xchg
mov
push
imul
adc
popf
lods
shlb
inc
ja
movb
mov
fidivs
loop
iret
shr
repz
cli
push
ret
fwait
add
pop
mov
push
and
inc
fcomps
sub
mov
sbb
xchg
adc
add
andb
insl
ret
jge
in
mov
js
adc
pushf
xor
xor
jne
clc
call
sub
xor
mov
stos
test
jb
or
lds
jge
scas
addb
or
sbbb
arpl
push
dec
insl
insl
add
xor
fisttps
jmp
or
pop
add
xchg
sub
jbe
daa
adc
mov
lret
jbe
mov
jbe
imul
sbb
mov
inc
cltd
jae
ret
and
xlat
push
sbb
jns
pop
cmp
mov
and
and
adcb
xchg
daa
mov
pop
ljmp
call
orb
data16
and
ds
lea
cmp
int
pop
push
mov
cli
lahf
stos
and
push
mov
arpl
pop
loope
pop
je
or
sarb
lret
and
gs
call
cli
in
push
adc
movsl
jnp
ficomps
jecxz
add
aas
repz
out
xchg
fs
xchg
clc
mov
ret
in
fldl
fstpt
xor
xchg
mov
pop
mov
adc
mov
sbb
cli
or
pop
testl
xor
pop
out
pop
inc
insl
cld
xor
aaa
lea
sti
les
pop
hlt
xchg
cmp
lds
in
push
add
xor
push
sti
andb
fsubr
xchg
faddl
adc
hlt
mov
jp
sbb
cmc
dec
mov
inc
shll
fs
pop
xchg
out
xor
xor
outsl
stc
sbb
insb
push
add
stos
lds
inc
add
popa
lahf
loop
daa
sub
imul
fisttpll
inc
pop
loop
lcall
mov
popa
jo
inc
or
jge
es
repnz
adc
test
jne
jp
dec
in
add
lods
sub
sbb
mov
std
xchg
jmp
call
push
pop
repz
add
addr16
cmp
sub
ret
dec
dec
es
cmp
nop
lahf
loopne
xchg
les
pop
scas
pop
rorb
in
ret
ss
xor
add
lea
mov
mov
rcll
mov
jo
pop
lcall
cwtl
or
sub
mov
jmp
inc
in
js
inc
push
sub
std
cmc
inc
shrl
mov
mov
inc
push
xchg
xor
push
mov
inc
fxch
fdiv
mov
mov
faddp
jns
push
call
addl
xor
mov
in
inc
xor
jne
mov
jnp
mov
sti
pop
mov
sub
xchg
pop
adc
pop
jne
push
dec
xor
xor
lahf
sbbb
or
fstp
pop
andb
std
mov
inc
loope
pop
cmpsl
ds
in
sahf
add
and
push
dec
sub
pushf
shll
push
mov
es
xchg
inc
cld
adc
lods
mov
jno
push
and
xchg
stos
dec
stos
mov
sub
xrelease
pushf
adc
orb
out
test
jge
fprem1
arpl
ljmp
les
and
lods
js
divl
ficoms
pop
in
fsts
cmc
lahf
add
xchg
out
repnz
inc
cld
mov
mov
iret
insb
adc
lcall
fs
cmp
nop
pop
adc
xchg
jbe
pmulhw
xor
mov
pop
and
push
lock
xlat
or
push
inc
or
jl
or
cli
cltd
pop
cmp
in
xor
mov
add
and
pop
icebp
std
mov
js
cli
ficompl
mov
or
push
mov
rcrl
or
sahf
cwtl
add
les
jle
xor
pop
sti
adc
movb
mov
std
lret
add
mov
add
outsb
add
bound
movsl
adc
xlat
dec
leave
int
stos
mov
insb
sahf
aad
mov
out
data16
aaa
push
ficoml
and
sub
shrl
ss
repnz
sub
push
fnsave
shll
ja
xchg
push
cwtl
ret
movl
enter
pop
mov
push
jecxz
mov
xchg
adc
rorl
pop
mov
call
in
add
dec
cs
inc
test
xchg
shrl
push
stos
inc
inc
adc
sub
push
out
mov
sub
adc
test
cltd
mov
adc
fnstcw
insb
in
or
sub
mov
push
ret
push
add
filds
sahf
ret
dec
and
pop
rcl
flds
sbb
cmc
test
cmpsl
in
test
inc
int
inc
fisttpll
subl
mov
sbb
flds
mov
int
das
fidivl
vpcmpgtb
mov
movsl
push
cmp
jnp
stc
xchg
pop
hlt
sbbl
add
jnp
jecxz
lods
pop
mov
negb
sbb
sbb
pop
cmp
jns
mov
lahf
ret
jle
shrb
jae
jl
jbe
mov
pop
dec
adc
cmc
ss
insl
jae
shlb
jmp
mov
pop
pop
xchg
icebp
lret
daa
fstpl
push
or
in
gs
mov
call
sbb
lahf
adcl
xor
mov
incb
sbb
xchg
sbb
ja
into
call
jge
pop
addr16
out
mov
loopne
sub
mov
dec
in
or
in
aad
outsb
rcrl
and
int3
dec
pop
aad
lcall
cmp
lods
inc
rcrb
sbb
mov
js
pop
push
xor
or
and
mov
adc
mov
mov
imul
and
push
adc
sbbl
jecxz
fadd
dec
or
push
cmp
jmp
iret
lcall
and
and
repz
lds
and
fwait
xor
jae
or
mov
pop
ficoml
imul
in
mov
pop
aam
xchg
inc
popf
lods
jl
mov
enter
mov
mov
movsl
and
lahf
push
xor
jge
fwait
or
loop
mov
xchg
repz
icebp
dec
sbb
push
movsl
pop
push
out
xchg
hlt
pop
jl
sahf
mov
mov
add
ficomps
lahf
sub
lret
fnstcw
fwait
cmpsl
cmc
jp
loopne
xchg
loope
pop
gs
xchg
loope
push
adc
pop
insl
pop
jp
push
jbe
push
ret
jg
movsl
cmp
dec
iret
xchg
divb
mov
sub
jno
xor
addl
push
jae
and
mov
shll
sub
mov
ss
adcl
imul
dec
aam
clc
inc
adc
xor
mov
push
adc
push
cli
stc
popf
and
cli
insl
push
xor
pop
adc
rcrl
push
stc
ret
movl
stc
insl
hlt
push
or
cmp
add
or
and
mov
sbb
out
adc
movsl
js
jecxz
leave
lahf
mov
jp
mov
add
inc
mov
stc
nop
pop
ds
in
mov
das
pusha
idiv
dec
mov
dec
sbb
arpl
pushf
ja
cmp
mov
fidivl
test
or
cmpsl
mov
adc
mov
loop
mov
mov
add
test
mov
mov
dec
or
cmp
cmp
rcrl
ret
loope
jecxz
xchg
lcall
jbe
lds
jnp
and
stc
ss
xchg
cs
call
iret
and
inc
icebp
mov
ljmp
int3
add
lods
jge
aam
rcrl
or
dec
xor
outsl
pusha
test
movsl
xor
in
xor
test
pop
push
push
cmpsb
cmp
lods
fmul
test
push
ret
add
pop
or
push
in
pop
xor
movsb
aam
xlat
and
sbb
stos
cmp
mov
adc
xor
cltd
sub
add
pop
adc
xor
das
push
les
das
xchg
in
lock
out
test
cmp
xchg
dec
inc
mov
das
icebp
in
mov
fwait
stos
sub
aaa
and
out
xchg
dec
sahf
das
insl
std
lret
mov
clc
or
and
fstpt
shrl
in
jnp
push
nop
daa
push
outsb
add
xchg
andl
pushf
iret
xor
stos
fs
xor
sbb
inc
stc
jmp
mov
mov
sbb
and
push
daa
jle
sbb
mov
jo
pop
jb
outsl
lret
lret
fimull
jnp
shrl
iret
cmpsl
enter
jge
loope
ss
lea
fisubrs
sarb
add
movsb
jnp
das
and
push
pop
pop
adc
fildll
js
stos
test
push
inc
shll
dec
movsb
add
sbb
rcll
nop
or
outsb
add
cmc
push
jbe
aas
push
mov
mov
int3
arpl
jecxz
nop
out
andb
add
pop
jbe
and
sbb
aas
dec
or
data16
cmpsl
andb
rcrl
push
dec
dec
je
xchg
ret
dec
lcall
push
pop
xlat
xchg
mov
in
ds
mov
gs
inc
aas
mov
sbb
and
pop
dec
andb
gs
jge
sti
dec
and
mov
pop
aam
cmpsl
clc
xchg
movsl
and
mov
ja
fdivrs
or
cmpsl
jae
or
inc
jno
xchg
dec
jle
sahf
add
adc
ljmp
add
in
push
inc
cmp
jae
out
lea
je
out
and
push
xchg
xchg
or
outsb
cmp
pushf
jns
and
mov
jg
fnsave
push
cmp
call
or
mov
dec
jg
xchg
subb
cmp
andl
arpl
std
leave
cmp
sub
xchg
fldcw
loope,pt
push
mov
neg
test
fcom
rolb
out
jne
test
mov
iret
cmp
int
dec
add
add
aas
in
call
shll
mov
and
mov
mov
loopne
and
push
pusha
sub
dec
dec
rcrb
xchg
and
insb
jo
pop
or
imul
cmp
iret
xor
sub
ftst
jmp
pusha
cli
and
imul
sub
cwtl
roll
jp
mov
and
jo
pop
sub
dec
xchg
sub
mov
aas
push
in
mov
inc
adc
imul
pusha
jmp
loopne
add
jo
dec
xlat
xor
adc
inc
out
adc
dec
in
imul
adc
and
pop
outsl
push
mov
scas
pop
mov
push
lret
xchg
mov
push
mov
mov
pop
neg
loopne
fdivl
movsl
dec
cmp
xchg
dec
mov
cltd
jp
insb
jp
repnz
jae
mov
mov
sub
adc
inc
mov
pop
test
push
cmpsl
aad
pop
nop
enter
movsl
ret
je
mov
push
add
mov
fildl
push
mov
mov
xor
add
rorb
mov
mov
push
imul
fisttpll
scas
fs
loopne
mov
push
int3
rcl
repz
xor
cmp
or
pslld
or
faddp
loopne
cmc
arpl
sbb
leave
sub
insl
xlat
stc
push
in
jne
clc
stos
iret
out
push
xor
fsubr
je
fwait
movsl
ss
push
inc
frstor
push
ds
aaa
push
xor
dec
jge
sbb
jne
adc
mov
jp
test
addr16
es
xor
fwait
out
mov
fisttpll
push
cs
mov
ftst
aas
test
int3
sub
mov
loopne
inc
mov
or
int3
mov
fbld
add
sahf
jns
ljmp
cmp
aaa
into
cmc
jecxz
adc
sbbb
out
mov
nop
xchg
or
pop
aam
vmovupd
mov
push
mov
in
sub
ror
xchg
lods
mov
in
loop
aad
cld
and
roll
lret
jmp
out
adc
movntss
xor
in
sub
fsub
test
jmp
or
and
fwait
push
jp
lcall
xor
std
pop
pop
inc
test
mov
addr16
ficomps
fstp
in
rcll
xchg
push
loop
xchg
stos
mov
push
mov
fdivl
lret
mov
jbe
xor
js
enter
inc
mov
lods
xor
sar
nop
add
xor
stos
cwtl
mov
dec
roll
sbb
int
xchg
aaa
push
cwtl
push
pop
push
call
mov
repnz
mov
es
adc
cmpl
outsl
adc
pop
cltd
push
mov
icebp
adc
mov
jge
leave
cmp
mov
sbb
dec
arpl
notl
inc
xchg
gs
push
sub
mov
dec
dec
in
xor
jo
sbb
mov
jmp
lods
sbb
std
inc
cld
aaa
jno
inc
or
mov
sub
pop
push
leave
movsb
js
mov
xchg
lcall
int
push
sahf
in
inc
or
inc
push
es
mov
inc
sbb
divb
flds
cmc
mov
rorl
mov
jnp
jb
in
clc
sub
nop
fsub
cmp
pop
sarl
xor
sub
xchg
bound
push
xchg
lods
fs
mov
ficoms
addb
inc
adc
sbb
ss
mov
test
jb
enter
out
in
mov
mov
lods
cltd
mov
cmp
call
call
dec
xor
push
out
push
in
sbb
add
push
and
outsb
movsl
icebp
ret
arpl
jns,pt
dec
mov
out
jle
push
add
addr16
jl
xor
pop
xor
jae
jnp
ficomps
pop
push
movsl
inc
jo
mov
lock
lret
push
sub
add
icebp
pop
icebp
and
fimuls
xchg
dec
mov
cmp
dec
imul
jp
xchg
mov
into
insb
add
sub
jne
mov
mov
push
sub
xlat
pop
mov
stos
xchg
xor
and
cmpsl
loop
out
sub
cli
stos
in
stc
inc
in
ret
cs
test
scas
xor
dec
jne
lock
and
out
cld
jbe
popf
cs
mov
or
add
push
jle
pop
push
arpl
inc
lcall
cmc
sarl
fists
push
scas
xchg
inc
fmull
inc
fdivr
pop
mov
clc
inc
in
xchg
insb
push
mov
adc
push
xlat
push
enter
mov
lea
push
xor
daa
xchg
leave
add
sub
push
mov
push
stc
dec
add
bound
push
fimull
xor
fwait
cmpsl
sub
js
stos
addr16
aas
iret
addb
mov
adc
mov
popa
sbb
fcom
xor
push
arpl
jg
adc
popf
add
mov
mov
js
inc
sbb
popf
fnstsw
dec
jmp
mov
mov
sbb
imul
mov
outsl
in
repz
mov
mulb
outsl
stos
push
ret
les
arpl
cmp
aaa
imul
and
dec
in
mov
cli
xor
cld
in
lret
cmp
ret
repnz
int3
cmp
in
mov
jg
and
mov
jle
jg,pt
testb
xor
jmp
mov
or
mov
movsb
cmp
jp
mov
xchg
mov
mov
in
shl
adc
push
cmp
mov
inc
mov
lds
sub
mov
les
addr16
dec
filds
lods
fstps
or
dec
dec
inc
push
xchg
enter
adc
mov
popa
add
int3
and
xchg
push
or
repz
and
fdivl
add
aad
clc
cmpsl
and
adc
xchg
inc
lret
mov
push
xchg
mov
int
mov
jo
loopne
in
add
cmpsl
mov
vpsubb
or
xchg
or
xchg
pop
out
mov
xchg
sub
sbbb
jnp
mov
adc
movsl
push
dec
push
lods
dec
xor
jns
and
pop
pop
std
xor
hlt
loopne
pop
imul
add
fsubl
sbb
cmpsl
inc
aam
movsl
add
pop
sub
clc
push
push
mov
bound
outsb
push
nop
pop
jmp
sbb
pushf
add
and
insb
out
dec
mov
mov
sub
mov
mov
or
mov
test
or
sub
mov
sub
insl
aad
mov
xchg
scas
stos
lahf
sbb
dec
stos
push
insl
fsubrl
ficomps
mov
sahf
clc
or
cmpsl
loop
jp
and
mov
loope
int
pcmpgtb
xchg
add
or
adc
mov
pop
xor
mov
pop
cmp
mov
dec
mov
adcl
push
mov
dec
sti
jb
jne
and
inc
push
out
icebp
test
push
dec
or
xchg
mov
pop
inc
daa
roll
push
ret
mov
fs
push
aam
adc
cmp
fwait
cmp
je
xchg
daa
call
std
fwait
rep
mov
mov
in
mov
roll
ljmp
mov
jb
in
inc
push
jle
cmp
mov
dec
or
mov
or
jge
aam
inc
adc
enter
fldenv
imul
pop
ffreep
shll
cld
fbstp
adc
sub
js
in
lret
jns
cld
pop
push
jmp
mov
mov
sub
movsb
dec
xchg
cmp
xor
xor
mov
cmp
popa
mov
test
int3
stos
cmpsb
jmp
divl
das
pop
fldl
jg
push
pusha
fsubrs
mov
pushf
mov
movsl
mov
mov
scas
insb
jnp
pop
fbstp
enter
add
lret
push
jno
push
xor
xchg
mov
push
cli
pop
std
mov
xor
mov
leave
fyl2xp1
lret
sbb
mulb
sbb
xchg
out
jae
ljmp
adc
mov
and
rcl
mov
sub
sahf
add
sbb
sarl
in
dec
cs
imul
je
or
in
jo
sub
add
daa
mov
pop
scas
inc
fneni(8087
loop
arpl
sub
fimuls
jmp
mov
scas
pop
repnz
mov
or
cmc
cmp
xor
push
mov
dec
loope
push
jge
fbld
sub
ja
push
inc
push
mov
aas
mov
sbbb
ljmp
mov
rolb
sahf
pop
dec
sub
mov
fmuls
inc
sahf
lods
cmp
push
loopne
or
mov
mov
mov
popa
fsubl
mov
movsb
inc
stos
xchg
push
dec
pop
adc
sub
fistps
sbb
add
pushf
jecxz
sub
stc
push
pop
cmp
add
clc
sbb
out
and
mov
clc
sahf
rcrl
cmp
cmp
ficompl
in
pop
outsb
into
sbb
xchg
xlat
ret
pop
cmp
dec
xlat
sahf
push
sub
mov
mov
loope
mov
ja
stos
xchg
dec
add
dec
subl
add
add
aad
mov
adcb
nop
daa
gs
sub
lds
rclb
mov
insl
add
sub
mov
mov
sbb
dec
jb
adc
mov
xchg
inc
mov
jae
jecxz
and
pop
dec
sub
mov
dec
push
jae
stos
and
push
sahf
mov
jo
cwtl
bound
cltd
mov
pop
and
movsl
cmp
iret
aaa
stc
mov
cltd
inc
in
sub
xor
pop
mov
lods
ret
xchg
leave
mov
movsb
dec
pop
push
decl
out
fisubs
push
fnstcw
int3
lret
add
push
sub
push
fldl
jp
ljmp
ret
callw
mov
or
lock
into
mov
dec
test
arpl
jecxz
inc
xor
fisubrl
dec
pop
pop
cld
mov
xor
test
add
mov
test
ja
add
sub
in
leave
outsl
add
notl
push
jge
in
insl
push
nop
sub
dec
push
lods
cmc
mov
xchg
ds
xchg
in
inc
jae
add
xor
clc
push
fsin
xchg
loope
push
xlat
dec
add
push
pop
push
ret
add
cmp
push
lds
mov
scas
cli
lahf
subb
xor
xor
out
add
fisubs
jmp
or
aas
push
add
loope
gs
loop
push
cmc
lea
cs
lea
lods
and
xchg
xchg
ficomps
leave
inc
ja
mov
cmp
mov
cmpsl
out
pop
loop
cs
daa
es
xchg
iret
clc
and
aaa
adc
dec
lock
in
dec
pop
push
inc
rcrb
push
addr16
mov
or
negb
mov
in
js
popf
xor
cmp
je
pop
sbb
inc
pop
data16
js
cmp
sbb
pop
lea
push
scas
aad
sarl
mov
sbb
jns
ljmp
fldcw
jg
lcall
stos
cmp
insb
cli
push
outsb
mov
outsl
fistpll
ret
daa
add
and
int
popf
mov
xlat
outsl
in
push
lods
stc
jb
out
add
sbb
xor
inc
clc
cmp
pop
mov
mulb
sahf
mov
jnp
mov
ljmp
xlat
ss
cmc
push
hlt
jbe
add
stos
or
dec
mov
xor
fistps
mov
mov
sbbl
xor
imull
fisubrl
ret
jge
out
sbb
mov
xor
pop
cmc
sbb
sbb
add
xchg
cmc
jns
mov
rcr
push
or
push
ds
popa
or
dec
xor
js
pop
push
push
inc
insl
push
lahf
shrb
inc
ljmp
dec
icebp
popf
sbb
mov
pop
ja
test
push
push
int3
dec
lret
jb
call
and
mov
icebp
jge
adc
jmp
ja
scas
or
into
xchg
pop
cs
insb
hlt
lret
mov
insb
out
jmp
cltd
mov
push
fistpll
adc
imul
mov
mov
mov
push
loopne
xchg
enter
mov
sub
xor
xchg
mov
aam
adc
stos
mov
and
lods
ljmp
pushf
addr16
ja
test
jg
enter
mov
inc
adc
clc
push
push
scas
and
test
in
mov
loopne
pusha
or
xor
dec
push
test
push
lods
sub
lods
ror
ds
ljmp
mov
pushf
out
test
clc
nop
andl
add
loopne
jb
lods
inc
cmpsl
in
jne
jno
xacquire
xchg
mov
fldl
xor
sti
int3
in
cli
mov
cmp
int3
xlat
outsb
aad
ljmp
insb
pushf
mov
xchg
test
decb
sbb
lods
sbb
lahf
cmp
aas
rcrb
xlat
push
jbe
jge
andl
stc
je
repz
push
imull
mov
jecxz
aad
sti
mov
dec
cltd
cmp
xchg
sbb
mov
adc
arpl
testb
out
and
push
addr16
xor
mov
dec
imul
inc
pop
lahf
lea
jmp
out
notb
sub
inc
ficoml
jle
pop
lock
ret
jo
hlt
xchg
or
dec
mov
popa
insb
dec
gs
insl
jns
xchg
push
stc
push
or
popf
stc
mov
adc
sub
rorl
mov
dec
mov
call
test
push
inc
push
inc
pop
or
andb
dec
push
pop
pop
mov
inc
cmpsl
imul
aad
lock
cmp
clc
insertq
jns
mov
adcl
xchg
gs
fdivrl
rcl
in
cmp
shll
pushf
shr
leave
jp
inc
pop
out
mov
setp
mov
sub
data16
mov
scas
push
addr16
rorl
jge
mov
popf
inc
leave
pop
and
test
and
call
or
cmpsb
push
shrb
adc
xchg
xor
jbe
rcll
push
imul
push
inc
mov
mov
lcall
mov
push
mov
pop
test
push
jbe
jmp
or
scas
js
jb
aad
call
pop
movsl
cmp
in
cmp
in
jb,pt
loope
cmp
icebp
mov
dec
xchg
add
mov
xor
arpl
ds
mov
xchg
mov
ds
in
int
push
mov
mov
jmp
repz
dec
movsb
push
mov
out
or
dec
dec
mov
lahf
in
dec
out
mov
int
push
inc
xchg
add
adc
hlt
dec
xchg
outsl
divb
icebp
mov
fisttpl
icebp
notb
add
lret
ss
in
scas
mov
call
or
xchg
cmp
mov
mov
and
mov
pop
ret
mov
addr16
jge
in
or
iret
jg
enter
es
adc
jbe
dec
addr16
jl
xchg
cs
stos
add
fidivrs
popf
stc
mov
mov
ret
and
sti
dec
div
add
stos
inc
cmp
xor
inc
rcll
rorb
inc
mov
xlat
mov
nop
testb
or
xlat
cmp
xchg
adc
vmread
pushf
inc
jg
xchg
mov
dec
and
pop
inc
subl
outsb
leave
cmp
push
mov
fsubs
and
mov
sbb
bnd
loopne
jb
pop
addr16
shrb
jg
insb
clc
arpl
into
xchg
sbb
jg
adc
add
mov
cli
test
sahf
push
or
test
add
leave
lds
addr16
inc
or
mov
fisttps
shrb
dec
movsb
add
dec
push
mov
push
pop
daa
mov
outsl
and
lea
mov
cld
mov
loop
mov
jp
je
mov
xlat
sub
popf
pop
mov
xchg
push
cmp
shrl
ja
fs
xchg
je
and
leave
das
cli
rcll
or
lret
xchg
sub
push
lret
mov
xlat
sub
jl
jge
pop
sub
sbb
dec
dec
mov
or
lods
ljmp
xchg
xor
in
clc
sarl
inc
fs
push
xor
jbe
repz
sbb
adc
jae
dec
cltd
lcall
fwait
in
pop
cmp
test
inc
sbb
jb
dec
cmc
xor
xor
push
pop
mov
pop
leave
lret
xchg
loope
mov
and
mov
cmpsl
xchg
js
push
add
mov
pop
ljmp
bound
mov
sub
xor
xchg
loope
lahf
push
adc
mov
sub
push
call
cmpsl
imul
fincstp
mov
adc
mov
sub
lret
shlb
mov
push
jne
cmp
cltd
cltd
and
push
push
xchg
cmpsl
push
out
popa
notl
ret
inc
cld
sarb
subb
out
sub
in
insl
insb
dec
and
je
xor
xor
jmp
fidivl
fimuls
xchg
xchg
aam
pop
data16
aaa
push
adc
mov
repnz
adc
fimull
orb
xchg
mov
cmpsb
int
iret
mov
mov
outsl
fisubl
clc
push
hlt
cli
mov
iret
sbb
push
mov
dec
pop
idivb
cs
push
pop
xchg
add
sub
and
inc
fnsave
in
repz
insl
cmp
inc
push
cmp
mov
and
loopne
cmp
shlb
mov
movsb
jle
fisubrl
jns
or
std
mov
pop
int
pop
jb
out
mov
les
xchg
sub
or
jnp
mov
cmp
das
mov
lea
mov
or
outsb
fiadds
mov
rcl
mov
pop
push
pop
in
mov
aas
idivb
push
dec
push
out
mov
pxor
mov
repnz
movsb
push
test
sbb
jmp
stos
xchg
add
cmp
mov
push
pop
xor
in
cmp
jle
adc
hlt
xchg
andl
inc
sbb
dec
lahf
xorl
adc
xor
xor
adc
aad
jnp
daa
mov
repnz
rclb
shlb
cwtl
scas
fimuls
repnz
adc
jl
loopne
pop
push
fwait
cmc
mov
push
insl
or
push
out
inc
shl
jmp
push
je
outsb
ja,pn
add
or
aad
sub
movsb
shl
pusha
mull
xchg
sub
cmpb
in
or
cs
inc
dec
jp
aad
in
jno
xchg
movsb
inc
pusha
xlat
insb
mov
fiaddl
mov
decb
xchg
add
popf
jnp
add
cld
xchg
inc
adc
daa
mov
inc
mov
mov
lar
repz
inc
xchg
sub
cmc
jmp
xlat
outsb
aam
dec
cmc
bound
cld
rol
mov
bswap
mov
mov
xchg
sbb
cmp
mov
hlt
adc
vshufps
out
mov
pusha
repz
and
nop
dec
dec
jp
call
add
gs
pop
out
or
test
sub
call
lds
mov
sbb
jo
and
or
push
cmp
jns
cmp
mov
mov
lret
ljmp
mov
pop
pop
out
lea
push
stc
mov
mov
mov
jecxz
push
ds
push
jae
test
lcall
mov
outsb
sbb
nop
sub
cmpsl
inc
div
mov
or
sub
cli
add
inc
iret
repnz
pop
in
sbb
mov
iret
js
xchg
icebp
and
dec
pop
inc
fcomps
mov
out
stos
push
mov
mov
stos
icebp
rcr
adc
std
imul
test
test
lds
xlat
push
sub
es
pop
mov
arpl
stc
mov
mov
shlb
pusha
aas
outsb
shrl
adc
lods
jmp
mov
shll
push
clc
sbb
xchg
scas
pop
lcall
add
mov
imul
sub
adc
insb
jle
popa
pop
jo
mov
frstor
aad
gs
out
enter
lods
jmp
cwtl
gs
popa
xchg
std
jbe
mov
inc
pusha
cmp
pop
scas
mov
lods
mov
lret
xlat
shr
add
sahf
dec
std
adc
in
js
nop
mov
stos
idivb
cld
xchg
pop
jno
scas
jmp
inc
xchg
adc
mov
xor
push
fld
pusha
ja
and
out
hlt
xchg
pushl
push
mov
fbld
xor
in
inc
mov
test
lcall
mov
jle
test
in
loop
inc
pop
add
aad
jae
popf
loop
mov
cmpsl
outsl
and
sbb
mov
or
mov
xlat
xchg
or
add
inc
fcomi
cwtl
and
xchg
mov
repz
inc
mov
test
cmp
aas
ss
mov
js
pop
add
pop
and
arpl
dec
and
and
imul
fisubs
jmp
pop
imul
sub
ja
movsb
xchg
mov
test
not
push
dec
pop
insb
mov
cwtl
dec
pop
stos
jmp
scas
testl
test
push
jno
test
sub
int
mov
into
das
xor
jne
stos
arpl
jge
iret
cmp
sub
nop
xor
insl
sahf
arpl
xchg
xchg
js
inc
push
pop
and
push
aad
rol
mov
cmp
jge
outsb
xchg
push
mov
inc
shld
and
mov
mov
or
xchg
add
inc
mov
imul
dec
fisttpll
fwait
sub
push
leave
into
cmp
inc
cld
lock
rol
mov
imul
fiadds
scas
mov
aas
mov
rclb
lret
lds
pushf
dec
outsl
jbe
popa
das
bswap
cmp
pop
dec
push
push
fwait
cmpsl
fisttpl
cmp
dec
and
xchg
cmp
jne
lds
inc
aaa
les
loop
push
mov
in
bound
mov
and
jecxz
int
mov
aad
int
xor
and
push
imul
jb
or
dec
cmp
cmp
nop
clc
dec
mov
fisubl
push
mov
inc
mov
jg
xor
outsl
aaa
dec
mov
cmc
adc
sub
adc
xchg
enter
xchg
jmp
mov
xlat
popf
mov
xchg
adc
pop
cmp
or
insb
jl
outsl
daa
mov
fldlg2
fists
orl
outsb
or
sub
push
sbbb
popa
mov
pop
xor
repnz
out
repz
pop
bnd
xchg
pop
mov
jp
cmp
pop
repz
fiaddl
data16
je
in
movsb
push
inc
fadd
testl
and
adc
fidivs
mov
cmp
xchg
das
pop
in
fdivr
mov
cmp
das
mov
sbb
insb
sub
daa
in
lret
data16
imul
xchg
dec
pop
lret
cmc
pop
mov
inc
out
sub
add
xor
or
pop
outsl
inc
or
repnz
xor
mov
jo
ljmp
sarb
sahf
scas
and
loope
mov
xor
data16
popa
adc
add
lea
movups
jmp
popf
mov
mov
adc
adc
stos
sti
push
cwtl
fcmove
shll
nop
in
add
push
mov
xchg
into
outsb
add
rcrb
mov
out
subl
mov
mov
addr16
bound
nop
out
xor
mov
xchg
mov
lret
orb
movsl
inc
pop
and
inc
cwtl
add
pop
pushaw
mov
xchg
push
push
cmp
xchg
fsubr
mov
dec
mov
rcr
pop
and
cmc
ja
cmp
and
xchg
popa
outsl
cs
pusha
pop
cmp
outsb
add
shll
pop
out
mov
add
fxtract
inc
push
mov
mov
sub
sub
shlb
inc
pop
imul
sub
dec
sub
lea
cltd
mov
sub
lods
push
in
rol
nop
pop
push
dec
pop
ffreep
cmc
mov
in
cld
dec
pop
popa
mov
inc
xor
jmp
ja
nop
ds
scas
jp
in
jnp
cmpsl
ss
dec
fistl
ret
in
pop
mov
sub
popa
sbb
or
xchg
push
cmp
jb
mov
cltd
push
fsubl
and
loop
test
rcl
in
icebp
and
dec
out
inc
bound
je,pn
repnz
subb
in
mov
mov
push
adc
out
mov
and
test
aaa
nop
aaa
sbb
mov
xor
out
sbb
and
outsb
add
mov
arpl
out
subb
sub
mov
xchg
sub
cmp
iret
mov
sub
les
int3
arpl
xchg
insl
cld
sbbb
aad
hlt
subl
cmp
hlt
push
test
jnp
mov
dec
aaa
movsb
jne
pop
push
mov
or
or
stos
or
or
mov
insl
in
and
and
out
inc
rcrb
sbbb
adc
pop
xchg
mov
cltd
and
dec
dec
add
xor
ja
push
xchg
or
mov
pop
fsubs
jo
cmp
jnp
mov
scas
cmp
repz
shrb
rorb
dec
pushf
xchg
mov
mov
mov
mov
mov
jg
in
lock
leave
push
insb
sub
loope
lea
and
scas
sbb
lods
inc
push
cmp
jg
dec
ficoms
fdivp
ret
lret
mov
and
inc
clc
cmp
push
scas
ljmp
lret
cld
sub
enter
je
mov
sbb
repz
ret
imul
or
sti
mov
push
aaa
pop
push
sbb
dec
rorb
jle
iret
mov
lahf
push
jo
sarl
mov
lret
cmpsw
ds
cwtl
pop
sahf
inc
mov
inc
in
mov
dec
adc
cmc
pop
cmp
dec
in
stos
cmpsb
sbb
inc
fiadds
lahf
mov
sbb
adc
jns
ljmp
jge
mov
cmc
xor
mov
mov
cmc
xchg
lods
sbb
jp
cmp
dec
pop
es
insb
inc
and
loopne
adc
or
xchg
and
aam
and
or
cmpl
cmp
push
fs
popf
cmpsl
mov
and
jle
cwtl
xor
add
jae
stc
inc
xchg
xor
cltd
pop
jo
inc
stos
dec
and
mov
daa
loop
rcrl
sub
pusha
cmp
movsb
cmp
xchg
cltd
sbb
or
pop
das
es
mov
mov
dec
scas
out
out
inc
adc
ss
inc
lret
lret
repz
adc
mov
sti
push
rcll
pop
mov
shlb
dec
dec
pop
jl
xor
mov
cmc
jnp
aad
stc
mov
xor
or
xchg
jne
push
push
aad
add
mov
xchg
mov
shrb
negl
adc
les
or
imul
ss
daa
iret
loope
hlt
add
inc
mov
push
cmp
les
xor
mov
add
leave
pop
fstpl
hlt
mov
xor
outsb
fs
idivl
lds
inc
dec
jp
push
call
out
jae
ja
sub
sbb
pop
xchg
dec
stos
push
adc
aaa
sbb
xor
fprem
cwtl
test
or
xor
mov
ljmp
and
xor
movsb
and
dec
inc
pop
incb
xor
fsts
subl
sti
adc
mov
fimuls
fldpi
inc
pop
scas
out
sub
test
cmpsb
rcr
jb
mov
insl
loopne
daa
enter
ja
lahf
imulb
shll
shr
mov
sbb
rclb
dec
cwtl
sub
aas
std
dec
and
ret
push
call
lock
int
into
xchg
pop
add
pop
mov
or
cmp
subb
fstps
mov
shlb
mov
cmc
pushf
sub
ljmp
lods
or
daa
dec
enter
pop
sub
aam
cmp
mov
cmc
rcrb
dec
push
cs
xchg
sti
popl
in
cltd
ret
dec
mov
rol
xchg
sub
cs
xor
movsl
stos
movsl
addr16
addr16
jl
fsubrl
mov
inc
add
lds
inc
repnz
add
dec
cmpsb
addr16
fistps
xor
int
xchg
and
mov
mov
inc
inc
xorb
mov
addb
xchg
xchg
pop
clc
push
lods
push
push
mov
loop
pop
sbb
lss
push
mov
stc
ret
cmc
gs
and
popa
add
mov
sub
jb
sar
pusha
push
orb
ret
jp
xor
push
imul
dec
fs
sbb
fistps
popfw
inc
testb
fcompl
subl
loop
lods
popf
pop
imul
insl
xchg
xor
and
sbb
or
or
cmpsb
lcall
js
loopne
add
xchg
push
jl
jo
pop
popf
inc
into
mov
lret
and
push
fucomp
add
lcall
mov
insb
adc
xor
ss
ds
dec
mov
xor
or
fcomp
shl
outsl
inc
test
filds
and
stc
sbbb
add
insb
and
cld
sbb
sbb
cs
cmp
mov
xor
cmpsb
mov
dec
pop
fnsetpm(287
idiv
pop
adc
hlt
jge
mov
repz
pop
repz
popf
divl
cwtl
push
xsha256
cmpsb
xchg
mov
pop
lock
arpl
sbb
add
mov
pop
xor
fldenv
mov
push
addr16
cmp
sub
mov
pop
je
pushf
dec
lods
xchg
add
test
xchg
sub
loop
mov
int3
lcall
mov
mov
lock
xor
add
cmp
add
add
rcr
in
dec
rclb
xchg
adc
call
xchg
push
scas
mov
std
jecxz
cmc
call
outsb
out
adcb
ljmp
lret
shlb
lcall
push
inc
cmpsb
mov
call
and
push
push
ret
pop
dec
cmp
xchg
xchg
or
add
sbb
mov
mov
add
movl
ret
add
cwtl
xchg
mov
test
push
sti
push
push
popf
shlb
jge
pushaw
into
clc
dec
push
outsb
cli
sbb
lods
and
cmpsl
mov
add
pop
pop
aad
xor
dec
mov
pop
dec
cmc
sub
xchg
mov
dec
cmp
jle
pop
inc
push
push
sub
jl
stos
xor
cmpsb
mov
jg
and
movsb
out
test
lds
repnz
adc
mov
sub
loopne
sahf
test
xor
and
ds
mov
popa
and
and
int
pop
sub
jmp
pop
xor
rorl
sub
out
testl
jmp
inc
cmc
int3
mov
add
xchg
push
push
and
insl
push
imul
fwait
popl
mov
cmc
mov
roll
dec
mov
pop
out
dec
out
jp
sbb
js
inc
fisttpll
jmp
dec
in
stos
push
jno
fcoml
sbbb
adc
or
sub
call
lods
sub
mov
jno
data16
sarb
outsb
add
adc
pop
inc
mov
loopne
add
adc
lock
stos
arpl
cmp
push
sub
shr
repz
cli
xchg
add
mov
xchg
sub
dec
popa
and
std
xchg
xor
mov
push
sbb
or
add
inc
jbe
mov
repnz
sub
and
mov
hlt
jnp
fldenv
pop
fisttpll
inc
sbb
sahf
xchg
ss
pushf
orb
add
sbb
call
and
daa
add
pop
jp
mov
xor
movsl
sub
std
stos
xchg
cmp
xor
in
jge
and
pop
pop
xlat
inc
mov
dec
dec
dec
pop
push
imul
xor
pusha
sti
iret
mov
xchg
and
dec
lods
mov
sbb
xchg
jno
imul
clc
lcall
fs
xchg
sbb
cwtl
das
jo
fbstp
fdivs
push
fwait
sbb
push
xlat
je
lods
aad
push
mov
add
push
das
ret
stos
lock
sbb
pop
mov
mov
mov
mov
add
mov
shrl
ss
mov
sbb
mov
loop
and
mov
test
sahf
addr16
push
inc
mov
dec
inc
xchg
jecxz
push
xlat
add
pop
cmp
or
or
stc
mov
nop
push
loop
sbb
xor
and
fs
loop
ljmp
jg
mov
adc
mov
dec
sbb
push
push
mov
and
shlb
and
xchg
inc
cld
packsswb
push
inc
fldl
sahf
xor
pop
cmovnp
mov
xchg
jmp
or
mov
inc
ret
mov
test
jle
jl
cmc
xor
mov
rclb
fbstp
pop
shr
cmp
leave
cmp
fs
cli
mov
add
scas
imul
xor
shlb
and
shl
fwait
pop
icebp
xchg
cmpsb
fisubl
nop
repnz
pop
ss
mov
sub
sub
push
popf
sub
cmpsl
lcall
aaa
add
out
adc
test
sbb
or
jle
cltd
test
cmp
pop
cmp
mov
adc
cmp
rorl
pop
xor
repnz
ret
outsl
incl
cmpsb
jo
scas
add
mov
lret
sub
mov
fidivs
pop
dec
inc
das
add
in
orl
arpl
out
mov
dec
mov
xor
sti
test
sub
cltd
xor
in
or
lret
call
jle
pop
xchg
into
popf
xchg
xor
push
enter
mov
lahf
aam
add
addb
fldt
pop
dec
ljmp
lcall
inc
cld
inc
dec
xchg
js
jecxz
loop
cltd
mov
rclb
cs
fs
sub
out
test
or
mov
cmp
jno
rolb
pop
push
jmp
mov
arpl
pop
mov
cld
movsl
mov
dec
lret
xchg
add
cmp
stc
push
imul
in
mov
fwait
mov
pop
rclb
sbb
jg
loope
sbb
sbbl
xchg
sbb
pop
shrl
jnp
push
aas
daa
xchg
pop
scas
dec
push
cmc
inc
inc
jle
loop
cmp
mov
es
mov
mov
jae
push
fdiv
sbb
jnp,pt
or
rcll
xor
dec
data16
testl
jg
out
sti
adcb
pop
cmp
loope
popa
std
lock
imul
mov
test
insl
sarl
mov
mov
jl
add
add
test
push
cltd
repz
notl
mov
pop
data16
cmp
jp
mov
or
mov
push
inc
xor
push
dec
push
test
inc
popa
adc
jbe
outsl
in
test
addr16
sbb
jo
sbb
test
out
push
cmp
aad
sbb
push
push
mov
sbb
inc
fdivrl
push
adc
mov
push
or
xor
aam
or
cwtl
jge
add
dec
mov
sbb
dec
fs
loope
push
adcb
in
fsubs
sub
lea
jecxz
loopne
lahf
add
scas
push
fadd
mov
aaa
stos
and
in
data16
mov
bound
mov
xor
lock
sbb
sub
stos
loopne
add
or
scas
stos
push
and
cld
sub
cmpsb
sti
je
test
dec
dec
out
jnp
testl
xor
jg
stos
sbb
test
fsubs
inc
pop
or
ret
xchg
imull
ss
fistpll
hlt
ret
std
xor
das
in
popa
push
push
pminsw
add
ss
adc
lret
fsubr
sbb
jne
in
and
loope
cmc
adc
loope
mov
jl
xchg
inc
test
loop
stos
out
adc
out
xchg
add
mov
inc
jb
xorb
push
popa
mov
pop
push
pop
mov
movsb
rcr
mov
std
lret
push
or
arpl
mov
sti
stos
mov
push
sbb
jnp
loopne
daa
dec
dec
pop
dec
mov
xor
lret
mov
jns
sbb
inc
popa
or
aaa
arpl
xchg
xchg
in
repnz
adc
imul
nop
inc
fldcw
xchg
cmc
push
rcll
sub
mov
push
sub
pop
iret
mov
sub
cwtl
dec
or
jne
fists
fld
mov
in
call
in
daa
mov
addr16
fs
fisttpl
popf
pop
outsl
cmpb
xchg
fwait
aas
mov
cmp
jns
fstps
xor
cld
adc
ljmp
push
push
dec
das
mov
std
outsl
and
sbb
int
mov
fwait
sti
mov
cmpsl
ret
and
push
or
gs
cwtl
mov
insl
inc
mov
push
pushf
and
iret
sbbb
pop
xor
repnz
sbb
icebp
sbb
daa
inc
push
or
js
add
xor
jae
mov
cld
dec
mov
test
into
inc
mov
xchg
mov
adc
jbe
pop
xor
cmpsl
negl
push
jp
fcoml
icebp
repz
adc
xchg
cmp
ds
lcall
jbe
mov
mov
loop
and
adcb
inc
add
fistpll
pop
into
push
lods
xor
fstps
flds
ret
sbb
jno
jge
add
ret
mov
loopne
sarb
fstps
or
xor
adc
mov
sahf
cmp
fists
xchg
mov
aad
sub
jecxz
pop
jle
dec
xor
sbb
aam
pop
mov
jno
stos
adc
pop
ja
call
ljmp
push
xor
insl
sub
subb
cmpsl
xor
dec
mov
xchg
test
fildl
mov
lds
or
hlt
rorl
popf
movsb
push
inc
push
sbb
pop
cmpl
mov
push
orb
cmp
cmc
jo
mov
sahf
cli
outsb
lods
nop
add
inc
adc
push
ss
dec
out
and
cmp
dec
dec
pop
mov
cmp
sub
repnz
xor
push
je
xchg
fwait
test
mov
jbe
jmp
sub
fwait
shrb
push
lea
dec
push
aad
psubusb
loope
fcmovbe
and
dec
pop
mov
cs
mov
dec
cmpsl
jp
sarb
adc
adc
pop
cmp
out
pusha
into
in
sub
push
ret
lret
insb
and
popf
fimuls
js
jle
movsl
insb
jno
icebp
insl
add
adc
insb
aam
fwait
mov
fisttps
push
int3
test
lods
mov
dec
pop
sbb
xchg
add
loop
push
sbb
add
test
pop
dec
scas
push
push
shlb
xlat
imul
push
cmp
imul
and
sub
pop
and
in
mov
cs
sbb
sbb
iret
adc
cmp
push
shlb
push
push
fwait
aaa
data16
in
and
sub
subb
pop
mov
popa
insl
mov
stc
pop
pop
sbb
in
mov
add
aad
cmpsb
out
push
or
lahf
inc
fst
or
mov
mov
and
push
jmp
jp
xor
sbb
aam
pusha
xchg
pop
js
dec
cmp
jb
sbb
or
xor
imul
fdivl
and
test
shl
adc
fstpt
int3
or
stos
jbe
mov
test
xor
dec
xchg
bound
jcxz
sub
mov
in
movb
aam
xor
dec
mov
pop
mov
add
adc
add
cwtl
cmp
and
outsl
cmp
movsl
inc
pop
mov
jp
aaa
mov
cld
adc
add
fs
sub
sbbb
rcrb
in
adc
or
adc
sbb
add
dec
pop
pop
mov
fcmovu
aad
int
add
jno
test
idiv
add
sub
mov
jl
imul
popf
stos
arpl
out
imul
rcrb
xor
ljmp
cwtl
xchg
sub
mov
test
aad
pop
dec
lret
loopne
mov
daa
mov
pop
mov
movsl
ret
push
mov
mov
push
pop
testb
jmp
pop
hlt
mov
or
repz
mov
inc
and
sti
es
decb
lret
shll
rcl
sbb
ss
rcrl
mov
test
mov
mov
mov
test
pop
lahf
fldenv
mov
lods
std
inc
test
mov
loope
xchg
inc
dec
jg
jb
out
jp
fst
aad
adc
xchg
adc
lock
enter
ss
mov
adc
jnp
je
push
shl
sar
jmp
cs
aaa
nopl
or
fisubrs
popa
or
push
xor
adc
fdivs
pop
jno
inc
rcrl
mov
jl
std
jo
test
enter
daa
repnz
lea
dec
lods
pop
hlt
fisubrs
and
aaa
es
push
inc
mov
dec
or
push
or
mov
jge
notb
aaa
aaa
pop
fwait
fwait
xor
stos
dec
push
mov
xchg
cmp
jae
mov
lret
jg
inc
xor
xlat
shrl
xchg
xor
jno
mov
dec
adc
cmpsl
in
lock
dec
pop
sub
cli
push
pop
sub
addr16
inc
jle
dec
fimull
push
push
mov
mov
arpl
inc
sti
mov
mov
das
mov
test
lods
xchg
sbb
mov
or
inc
lods
ret
xor
jb
pop
sbbl
neg
mov
or
push
mov
dec
cmpsb
popf
sti
stos
enter
fdivrs
mov
mov
aas
fwait
cmp
mov
in
pushf
xor
loop
outsb
enter
jne
iret
pushf
cmp
vmovntps
aad
adc
cmpsl
out
cmp
ret
and
fdivr
mov
lock
pop
out
fwait
inc
mov
sub
dec
add
xchg
sub
mov
pop
fs
jae
inc
xchg
xchg
sahf
sarl
fmuls
sbb
mov
xchg
add
mov
inc
lret
xor
xlat
aas
insl
dec
out
push
jmp
pop
dec
in
insl
mov
xchg
imul
mov
or
movsl
test
pop
imul
xchg
repz
fsubrp
push
test
mov
repnz
lret
mov
push
lea
js
sarl
les
mov
ret
mov
movsb
mov
popa
lods
xchg
lcall
jb
nop
bnd
out
shl
les
xor
xor
push
fs
dec
out
or
cmpb
outsl
sbb
sti
bound
jne
fdivs
insb
in
xchg
lcall
cwtl
ret
adc
rcrb
mov
dec
jb
push
icebp
in
lods
adc
jb
daa
mov
mov
movsl
push
aaa
mov
xorl
sbb
imul
xchg
hlt
jb,pn
jne
insl
loopne
shrl
mov
mov
data16
xlat
sahf
push
jmp
testl
jmp
xchg
push
jo
push
in
jbe
loopne
adcb
inc
xor
cwtl
jae
ds
lahf
es
push
shlb
ja
fnop
es
push
pushf
xchg
sbb
mov
sbb
mov
int
lea
subb
push
sub
int
es
or
sahf
repz
in
push
sbb
in
imul
lds
mov
mov
roll
ss
push
dec
shlb
dec
popf
popa
dec
lods
aam
xchg
in
dec
pop
test
dec
mov
repz
mov
in
sbb
lea
popa
faddl
rolb
aad
jo
pop
or
pop
xchg
enter
jg
dec
clc
inc
inc
aam
xor
popf
shlb
ljmp
push
sbb
adc
pop
into
addr16
and
push
aas
insl
dec
mov
cmc
call
mov
sub
jae
jo
fdiv
sbb
lahf
pop
and
jb
lret
cmp
popa
lret
jmp
push
inc
shlb
ja
cmp
xchg
mov
lds
mov
ss
fadds
pop
adcl
push
xor
mov
clc
xchg
sbb
and
push
pusha
ljmp
cmpsl
pop
jnp
push
xlat
xor
js
add
dec
sub
jns
xor
loopne
sbb
fstpt
jb
je
push
das
xchg
mov
xor
xchg
in
fldcw
popl
fidivrs
push
push
out
mov
pushf
push
adc
lcall
in
push
rorl
subl
leave
daa
out
fbstp
push
or
loopne
adc
movsb
test
sub
or
jnp
mov
pop
xchg
in
mov
aam
js
and
cld
daa
mov
or
mov
imul
or
test
insb
arpl
cmpsb
and
add
push
lret
lcall
fadds
pusha
fstpl
pop
sub
pop
jle
jmp
scas
fists
xlat
xor
push
cmp
cmpsb
aaa
ret
testb
jle
in
dec
shll
adc
sbb
out
push
in
and
bt
fists
les
add
sub
aas
clc
adc
lahf
jo
pop
sub
cli
jle
inc
jmp
push
xor
sbb
mov
cmp
jge
push
jmp
jnp
jo
repnz
cmp
pop
mov
es
cltd
push
fcompl
repz
lret
adc
lret
jae
mov
sbb
xchg
movsb
mov
and
jmp
or
pop
cmp
aam
mov
out
or
adc
data16
push
int3
xor
lahf
mov
or
jg
adc
dec
pop
lret
sahf
sahf
pop
lea
cmp
es
xor
xor
lcall
popa
inc
les
push
je
data16
inc
nop
push
stos
stos
loope
fcmovne
or
test
cli
and
adc
jae
inc
sub
ljmp
inc
ss
ljmp
add
testb
es
mov
into
xlat
mov
push
jp
inc
out
jp
out
fs
jmp
mov
test
inc
inc
adc
xlat
pop
push
mov
test
lds
cmpsb
adc
mov
jns
daa
outsl
inc
aas
aad
lret
jns
lds
stc
adc
push
inc
xchg
xchg
sbb
push
mov
jp
mov
cld
push
adc
orb
dec
mov
inc
mov
jg
divb
adc
cltd
in
jl
pop
dec
andb
ja
pushf
in
dec
repnz
dec
cmp
rclb
arpl
int
imul
push
pop
test
cmp
imull
adc
mov
adc
and
mov
jle
mov
push
in
push
lret
sbb
cmp
jae
roll
pop
jecxz
dec
test
loopne
out
xlat
repz
pop
mov
xor
je
dec
lods
mov
adc
jl
jae
rcll
int
ret
ljmp
pop
pop
xchg
push
insl
inc
je
cwtl
inc
arpl
cld
insb
scas
cld
and
in
cld
adc
mov
lods
push
xchg
sbb
jp
rcrl
aad
jle
dec
out
mov
sbb
or
mov
jnp
and
jp
test
aas
pop
xchg
outsb
or
addr16
lea
daa
lcall
cmp
mov
addr16
lret
sbb
add
ret
lret
fadd
out
dec
inc
pop
mov
cmp
and
imul
mov
in
push
xchg
out
into
das
add
xchg
pop
xchg
test
and
movsl
jno
mov
mov
jne
inc
fldcw
dec
cmp
fcomip
xchg
lcall
mov
call
into
xchg
mov
shrb
mov
inc
adc
loop
test
ja
sbb
push
jnp
xchg
jecxz
int3
xor
ret
int
push
cmpb
cmp
mov
add
mov
inc
clc
add
xor
lcall
cmp
push
cld
movsb
mov
fimuls
sub
inc
lret
jp
mov
sub
sub
sti
sub
imul
ss
je
iret
mov
mov
sahf
in
xlat
jnp
clc
and
pushf
daa
outsl
fisubrs
mov
dec
sbb
xchg
mov
mov
jl
inc
ja
mov
rcrl
sub
jl
add
fldln2
cwtl
add
mov
or
cltd
xchg
outsl
mov
ljmp
addr16
int3
fsubl
dec
imul
push
std
pop
es
or
and
out
and
xchg
sbb
mov
cmpsl
jo
sbb
fsubrs
lea
sahf
push
lahf
and
enter
shl
mov
push
stc
rcr
jne
jmp
scas
jl
push
mov
gs
cwtl
imul
mov
cmp
testb
jecxz
inc
pop
pop
cmp
sub
mov
push
leave
mov
push
int
lods
pop
cmp
pop
jno
ret
in
cmp
outsl
mov
sahf
movsb
addr16
sub
int3
lds
inc
adc
jecxz
in
je
lcall
mov
xlat
data16
push
movsb
dec
jg
mov
jl
sbb
inc
mov
push
xorl
loopne
sub
inc
adc
mulb
mov
inc
adc
ficompl
add
cmp
es
sbb
xchg
sbb
mov
arpl
mov
lret
mov
jle
in
jns
pushf
cmp
mov
repz
fwait
push
pop
mov
test
mov
addl
dec
push
out
dec
cmc
dec
testb
cmp
cmp
icebp
pop
outsl
adc
jne
cs
xor
jmp
or
js
or
jae
xchg
inc
mov
dec
jns
shrl
out
jns
jne
dec
scas
pop
scas
imul
popa
inc
sti
fwait
inc
push
repnz
js
adc
jne
pop
les
or
xor
movsb
sub
dec
in
stos
in
jl
ds
cmpsl
mov
push
or
sbb
pop
dec
xchg
mov
jb
push
jnp
pop
test
shlb
mov
pusha
into
and
mov
push
je
xor
pushf
insl
jns
in
inc
shlb
push
out
ja
pop
jno
pop
jns
nop
fwait
dec
mov
mov
dec
dec
add
xchg
dec
insb
iret
stos
sti
rol
cwtl
jge
cli
add
xchg
inc
aas
add
mov
out
movsl
out
iret
ret
mov
sub
inc
test
and
addr16
inc
cwtl
sub
dec
out
cmp
cltd
push
adc
push
or
leave
test
add
push
clc
mov
pushf
dec
jmp
mov
insl
in
mov
mov
dec
add
out
cmc
sar
cwtl
cli
xchg
pop
mov
or
fsubs
popa
int3
jg
xor
gs
imulb
cmpsl
cld
outsl
add
jne
pop
mov
fst
dec
mov
push
gs
fidivrs
xor
data16
lret
xchg
jbe
test
pushf
jb
int
daa
scas
mov
das
jle
out
mov
outsb
adc
stc
push
sbb
sub
xor
ret
outsb
jl
jl
popa
ret
std
sbb
cs
mov
mov
out
mov
jecxz
fstps
loopne
imul
add
shlb
bnd
sbb
sub
lods
fldcw
push
outsl
xor
xor
jle
sub
mov
movsb
sbb
sbb
iret
lret
and
test
arpl
add
jae
rol
dec
cmc
or
lods
out
add
or
sbb
sbb
pop
xor
jmp
push
cmpsl
or
pusha
add
and
addr16
js
fdivrs
mov
jb
jp
adc
cmpsl
sub
dec
in
clc
sarb
dec
mov
outsl
jns
jmp
push
repz
push
sub
sbb
xchg
rcrl
mov
sbbb
jl
test
mov
lods
shl
fsubp
shr
sub
fwait
js
fsubr
scas
mov
sbb
es
ss
sub
or
sub
jae
jp
cmpsb
xchg
cwtl
stos
loope
dec
pop
push
inc
loope
jns
jecxz
test
add
nop
pop
cmpsb
inc
mov
lret
pop
xchg
push
push
ljmp
add
push
push
jp
popf
lcall
xor
ljmp
fisttpl
sbbl
lea
aam
les
or
add
shl
movsl
push
adc
dec
xchg
shrl
mov
rorl
mov
or
ja
int3
addr16
dec
repnz
mov
movsl
push
or
xchg
enter
mov
mov
cmp
imul
aaa
fldenvs
dec
or
in
test
jl
jbe
test
push
lea
mov
mov
arpl
xchg
leave
imul
fmul
adc
loop
aas
sbbl
sub
inc
mov
aad
out
pop
sub
sarb
test
jnp
dec
shrb
popf
xchg
in
movsb
sbb
out
cmp
mov
push
mov
imul
jno
stc
sbbl
jmp
mov
push
inc
imul
sbb
mov
jmp
jl
adc
push
fidivrl
fbld
insb
pop
test
lcall
ljmp
jecxz
aaa
fnstsw
jg
movsb
sbb
lret
andl
insb
push
mull
cmp
sbb
cmp
mov
mov
out
je
scas
inc
sub
fnsave
dec
xchg
adc
xchg
inc
xor
lock
jae
push
add
sarl
clc
sbb
adc
stos
or
arpl
lret
sahf
xor
and
mov
ljmp
sub
sbb
pop
jns
into
push
add
add
inc
and
xchg
dec
add
lcall
bound
nop
dec
cmpsb
mov
cmpsb
add
iret
fnstcw
dec
or
popa
cmp
xlat
lds
inc
push
cmp
popa
mov
shrb
sub
xchg
and
jb
mov
pop
inc
fnstcw
mov
fcomi
push
js
cmp
jns
mov
mov
addr16
inc
inc
imul
jmp
outsb
sub
enter
mov
xor
rolb
jp
jge
test
jns
xor
lock
leave
stos
es
pop
inc
loope
inc
hlt
cwtl
and
fwait
jbe
scas
jge
push
mov
xor
insb
jnp
push
push
xchg
push
pop
jns
add
sub
int
mov
out
push
adc
imul
loopne
std
movsb
cmp
mov
xor
fiadds
push
jns
adc
int
daa
push
insl
test
jo
scas
mov
mov
adc
inc
dec
cmp
cmpsb
or
and
mov
repz
filds
fcompl
mov
js
sub
jae
jo
dec
daa
sbb
lret
sti
or
push
cli
shl
inc
rclb
push
testb
repnz
push
aad
mov
sti
mov
ja
rcll
mov
daa
mov
bound
jl
sub
cmc
push
loopne
insb
fimull
jecxz
les
test
out
daa
sub
lds
xchg
aad
leave
ss
push
inc
scas
outsb
add
pop
dec
push
pop
adc
add
push
push
or
push
push
pop
mov
adc
lods
outsl
cmp
mov
push
rcrb
pshufw
leave
jecxz
sub
in
pushf
leave
out
clc
sbb
dec
mov
cwtl
pop
lds
xchg
dec
pop
push
aas
mov
fadds
in
xor
cwtl
out
test
pop
ret
mov
push
out
push
loope
push
push
scas
xchg
andb
cmp
dec
add
in
aam
into
and
out
cmovs
push
xchg
xor
pop
adc
call
imul
jecxz
adc
mov
jb
xor
neg
inc
lods
mov
in
fidivl
mov
xchg
xchg
scas
fimull
sbb
pushf
lret
dec
icebp
in
pop
imul
mov
mov
cltd
or
and
jecxz
outsl
jl
jle
mov
add
adc
add
sarl
mov
push
aas
je
fidivl
jo
popa
stos
fsubr
cmp
xlat
int
jbe
pusha
push
jle
jge
test
xchg
mov
fwait
xor
cmpsl
cmp
jecxz
les
mov
cmpsl
jp
int3
lea
jmp
add
jno
addr16
repz
cmp
cmp
arpl
mov
jge
outsl
pop
scas
test
ja
pusha
cltd
imul
mov
push
clc
pop
xor
xor
aas
mov
pop
pop
mov
iret
aam
sub
pop
pop
icebp
xlat
adc
fnstenv
pop
dec
cmp
pusha
dec
push
cmp
or
cmp
jno
push
jmp
add
jb
stos
jne
fmulp
sbb
ja
push
and
jg
xchg
or
mov
popl
sub
lcall
pop
inc
lods
add
loopne
inc
jle
fsubrl
fs
push
fldl
pop
mov
stos
fsts
nop
daa
mov
mov
pushf
pop
xor
test
out
movl
rcrb
mov
push
sbb
aaa
dec
pop
sbb
or
cli
jae
mov
and
inc
popf
stc
inc
push
jno
inc
in
mov
adc
fdivrl
mov
push
mov
or
mov
push
inc
scas
xor
jge
mov
fldcw
push
and
xchg
rclb
fisttps
jmp
out
lods
out
pop
sub
jo
lds
fmul
mov
popa
mov
mov
mov
call
pop
mov
and
nop
adc
sub
sahf
sbb
cmp
mov
push
daa
mov
daa
in
or
xor
test
cwtl
aam
add
mov
leave
es
out
je
popa
add
sbb
mov
je
nop
cmpsl
sbb
adc
movsl
ret
or
into
movsl
test
dec
xor
push
lret
push
and
mov
mov
sub
xchg
and
pushl
dec
sbb
inc
sbb
jnp
xchg
add
dec
mov
jb
sbb
mov
lret
hlt
and
call
xchg
pop
add
mov
stos
ficoml
inc
into
xor
rolb
shl
daa
jo
xchg
push
mov
cmc
push
out
xchg
pop
in
xchg
adc
mov
enter
and
xchg
stos
inc
jns
mov
jnp,pt
outsl
jl
lahf
pop
movsb
aad
in
and
add
inc
xlat
pusha
int
in
loopne
or
iret
mov
mov
inc
in
lods
inc
scas
push
xchg
jmp
dec
sub
cmc
pop
lods
fcompp
lahf
adc
sahf
jae
mov
mov
cmp
dec
cmp
cmp
and
outsb
push
add
sbb
cmp
arpl
mov
ficoms
adc
lock
icebp
hlt
mov
mov
fdivrs
xchg
and
bound
lahf
outsl
mov
sub
outsb
inc
imul
in
pushf
sbb
lcall
lods
out
mov
or
sub
repnz
adcb
mov
test
enter
incl
out
add
add
pusha
pop
mov
outsb
jae
push
mov
cmp
imul
mov
mov
adc
add
ja
repnz
sub
push
cmpsb
sub
mov
in
mov
mov
mov
shll
jbe
mov
mov
pushf
sbb
ret
mov
repnz
add
or
or
mov
enter
mov
cmpsb
in
mov
pop
fs
xchg
addr16
lock
adc
or
sbb
mov
je
shlb
aad
rorl
movsb
fistps
clc
insb
jne
sahf
sbb
and
shrb
dec
or
dec
out
jo
push
sub
pop
jns
aad
jo
jb
cmp
sbb
mov
push
inc
pusha
mov
cmp
fstl
xchg
cs
insb
inc
and
int3
lret
mov
cmpsb
xchg
subl
sbb
fwait
ret
jp
dec
lcall
jp
mov
sub
cmp
push
sub
inc
clc
ret
ret
mov
add
les
js
xor
sub
dec
mov
dec
pop
nop
daa
nop
jo
andb
outsl
popa
xchg
mov
cltd
loop
lret
fbld
adc
mov
and
xor
test
or
test
js
mov
push
xor
aas
inc
adcb
dec
cmp
jmp
xchg
or
js
gs
dec
pop
dec
inc
insl
test
mov
and
xchg
test
add
into
inc
lret
outsb
stos
jge
push
pop
mov
add
int
pop
push
vmovlpd
mov
adc
popf
ja
mov
movsl
push
push
adc
out
inc
jecxz
lods
mov
mov
cs
push
sub
jp
mov
andl
iret
loopne
gs
dec
scas
push
sub
lds
cli
push
fadd
cmp
cwtl
imul
mov
es
in
jae
cmc
rcll
dec
cmp
out
out
ret
adc
jno
mov
sub
sub
cmp
shrb
push
xchg
daa
push
mov
xor
addr16
sbb
sub
dec
mov
push
sub
cmpsl
sub
jecxz
call
pop
arpl
aam
je
sub
and
jge
pop
mov
inc
loopne
jge
enter
stos
and
xor
push
lea
mov
mov
ds
ds
and
outsb
clc
out
cmp
mov
rorb
pop
sub
mov
xchg
pop
in
mov
pop
sub
rcrl
daa
arpl
pop
out
popa
push
rcrl
stc
int3
mov
mov
js
popf
into
sbb
jle
jmp
xor
test
mov
jmp
sbb
cltd
jp
insl
les
outsb
pop
sbb
mov
mov
mov
jge
mov
insl
iret
dec
aam
neg
loope
sub
jae
add
xchg
movsb
sbb
mov
loop,pn
clc
or
movsb
lds
inc
dec
or
push
mov
mov
fwait
push
stc
dec
imul
out
xchg
shll
cltd
into
sbb
adc
adc
push
mov
stos
push
xor
pusha
mov
mov
pop
sbb
cmp
or
jmp
push
ljmp
xor
inc
cmp
inc
je
gs
in
js
ss
cmpsl
imul
jnp
sbb
mov
or
sub
dec
and
jecxz
push
mov
fmuls
ficomps
and
fimuls
jl
sub
loop
out
push
xchg
mov
or
out
push
in
testl
scas
enter
sub
lods
call
or
inc
jle
rcrl
pop
push
push
int3
mov
cltd
xlat
sbb
jns
pusha
and
and
bound
jo
adc
adc
xor
push
loope
push
fadds
jbe
and
push
sub
jmp
xor
ss
les
fildl
popa
pusha
or
sbb
mov
cmpl
inc
or
push
jle
adc
sbb
out
rcrl
addr16
fs
dec
push
sub
sub
arpl
sbb
mov
inc
testl
mov
mov
mov
or
out
cs
fisttps
xchg
ret
push
cwtl
es
out
test
and
movsb
mov
push
inc
stos
addr16
popa
push
test
pusha
push
and
inc
ret
and
push
shr
fwait
pop
ret
pusha
std
icebp
insb
rorl
sarb
insl
jb
out
xchg
sub
out
adc
test
pop
js
into
fdivrl
jne
int3
xlat
scas
inc
inc
lods
pop
xor
arpl
jae
mov
dec
mov
cld
les
mov
call
mov
popf
sub
pop
lods
push
pop
imul
das
pop
sbb
cmp
cli
mov
and
inc
dec
ror
movsl
push
adc
jae
lret
sub
xlat
mov
js
arpl
popa
jns
jp
and
and
cmp
cmpl
aam
mov
cwtl
adc
pushf
pop
jle
rorb
or
insb
hlt
push
decl
test
scas
leave
data16
std
jno
dec
repz
cmp
ljmp
mov
or
loope
cwtl
test
mov
xor
nop
pop
es
int3
shll
push
cmpsl
out
adc
mov
pop
shll
fcmovnb
fmuls
cmp
and
outsb
mov
ds
lahf
mov
adc
adc
in
fistpll
xchg
fcomi
adc
mov
mov
outsl
popf
add
cmp
mov
in
aad
pop
mov
add
les
push
xlat
clc
push
es
pop
into
mov
sbb
mov
mov
push
outsl
or
xchg
add
push
sub
les
mov
fcoml
popl
fwait
jae
int3
and
imul
sbb
insl
clc
dec
nop
mov
jl
loope
or
xchg
adc
ret
outsb
test
iret
mov
pop
push
xchg
fists
sbb
lock
fnstenv
and
rorl
rclb
nop
lea
cmp
dec
sbb
xchg
jo
mov
ja
add
xor
mov
sub
outsl
push
add
push
adc
pop
lret
jns
out
jp
push
cmp
lahf
stos
call
add
mov
pop
cmp
mov
pop
popf
scas
shll
pop
xchg
sub
adc
addr16
testb
or
fcompl
mov
pop
lock
pop
lods
std
add
popf
jae
sub
push
scas
jmp
xor
cmp
loop
mov
gs
nop
sub
push
std
inc
dec
jle
data16
pop
inc
push
roll
data16
call
into
das
jno
scas
jge
push
sub
jle
mov
lods
and
outsb
pop
adc
outsb
pop
jo
lods
loop
insl
sahf
cmp
xor
push
dec
xchg
jmp
decl
xchg
cmp
adc
jmp
andb
ds
out
fwait
xor
mov
push
mov
sub
insb
inc
pop
jns
int3
shrl
push
push
mov
cwtl
ss
mov
sahf
out
negl
out
jb
pop
sbb
rol
lods
add
and
lea
cwtl
or
sbb
add
xor
out
pop
push
jge
or
insb
sub
cmc
mov
inc
enter
cmp
pop
dec
cmp
push
addl
pop
adc
cmpsb
cmp
or
mov
jp
push
cmp
ret
leave
cmp
rol
inc
add
insb
jno
lret
lret
inc
inc
outsb
mov
inc
cmp
cltd
add
cmpsb
or
pop
push
lods
cltd
les
dec
cmp
aaa
push
arpl
test
test
sub
fs
add
lea
imul
aas
dec
sbbl
jnp
shl
pop
adc
sarb
mov
mov
ficoml
jns
shrl
push
sbb
xor
std
mov
dec
dec
push
aas
stos
mov
cltd
fsqrt
cltd
mov
out
add
and
inc
push
push
mov
push
and
out
inc
test
mov
imul
adc
inc
in
mov
insb
add
addr16
cld
cs
fstpl
aad
or
stos
pop
ljmp
subl
push
mov
andl
sub
rolb
jbe
test
mov
dec
jae
fidivl
shll
or
test
add
adc
ret
fidivl
test
popl
aam
jo
loop
out
push
pop
adc
sub
popa
scas
jmp
addl
pop
fmuls
daa
mov
int
sub
inc
mov
cltd
pusha
test
xchg
push
movl
dec
in
push
mov
jne
pop
pop
mov
and
ds
test
and
push
fwait
inc
enter
fsubrs
mov
mov
jmp
adcl
sub
mov
cmp
and
repnz
push
stos
mov
pop
out
fistpll
stc
mov
cltd
je
imul
pop
fmuls
mov
mov
inc
or
jp
pop
leave
xor
cmp
pop
repz
into
pushf
sub
aad
lods
inc
lods
lcall
in
outsl
fucomi
mov
mov
xchg
add
fiadds
xchg
add
push
sbb
fdivrs
jns
adc
ret
or
leave
sbb
je
arpl
pop
xchg
test
fnsave
in
test
fsubrl
test
xlat
std
cltd
test
sahf
lret
gs
aam
mov
add
mov
pop
loope
sub
call
int3
repnz
or
pop
inc
and
push
push
xlat
imul
mov
mov
mov
pushf
jb
mov
std
pop
out
test
cmp
aaa
mov
hlt
sbb
test
rcl
mov
mov
out
pop
add
rclb
and
out
nop
vmovdqa
pop
jecxz
daa
lds
testl
jecxz
fstpt
push
xor
dec
sarb
nop
mov
and
sbb
push
xor
sbb
push
scas
lcall
mov
lods
push
xor
add
sub
jge
mov
and
mov
daa
icebp
fstpl
gs
pop
loop
ss
mov
push
addr16
pop
andb
not
xor
lahf
rol
iret
test
mov
cmp
push
test
shl
sahf
sbb
divl
xor
mov
gs
shrl
mov
mov
out
pop
fwait
scas
ljmp
movsl
push
cmp
mov
mulb
movsl
jo
ja
inc
shl
xchg
insb
inc
push
mov
push
data16
fs
inc
cld
mov
and
and
ret
sub
mov
stc
iret
xchg
scas
jb
lock
fnop
xchg
cmpb
mov
mov
fdivrs
clc
mov
jp
aad
adc
xor
rcr
out
cmpsl
mov
nop
int
mov
sub
nop
cmp
mov
sub
mov
jmp
dec
dec
jg
insb
ja
pop
test
popf
and
in
repz
orl
enter
sbb
aam
jle
push
test
clc
pop
in
push
fildll
inc
bound
popa
mov
lods
dec
fwait
jbe
push
xchg
popf
hlt
inc
jbe
cmp
jp
mov
xchg
ucomiss
dec
pop
test
ss
sub
dec
cli
mov
pusha
mov
jae
adc
mov
aad
mov
mov
xchg
mov
fsubrs
ja
test
add
pop
push
mov
dec
xor
rcrl
inc
fcoms
scas
add
in
xchg
bswap
push
ret
lcall
add
test
clc
pop
sub
push
add
in
jge
insl
in
dec
sub
sub
in
test
iret
cmp
pop
inc
bound
mov
fsubl
int3
pop
movsb
mov
loopne
or
push
adc
repz
and
xchg
leave
dec
scas
enter
lock
pushf
jle
ret
push
mov
out
sti
adc
dec
rorl
xor
and
fbld
fnsave
jp
sub
setp
inc
mov
xlat
popf
mov
jne
or
fldt
cmp
jg
rolb
incb
xlat
mov
push
and
xchg
out
or
ficomps
mov
mov
and
addr16
inc
ret
test
add
dec
dec
mov
movsb
jecxz
int
arpl
iret
movl
push
add
xchg
jne
push
adc
fldl
xchg
xor
loopne
pop
icebp
mov
dec
in
addr16
mov
mov
pusha
sbb
sbb
pop
stos
aas
mov
jle
pop
lods
in
cmp
mov
mov
cmp
push
mov
pop
mov
hlt
or
and
test
inc
decb
out
jb
cmc
es
rcr
aam
or
sbb
sbb
shl
inc
jl
jecxz
test
icebp
or
jnp
xchg
vxorps
pop
hlt
je
push
xor
xchg
movsb
stc
popf
sub
nop
cs
iret
out
pop
sbb
xchg
in
call
ficomps
test
inc
push
dec
dec
scas
inc
ljmpw
je
pop
out
divl
subl
adc
ret
mov
cltd
lahf
ret
jle
xchg
gs
xor
jl
icebp
roll
xchg
shll
mov
sub
stos
call
sbb
fwait
add
xchg
lock
cmp
clc
and
or
ss
pop
adcb
insb
jno
xor
jb
pop
cmp
mov
int
nop
jnp
imul
cmp
repnz
fldl2e
pop
sub
loop
rcll
mov
add
out
mov
shll
xor
push
arpl
pop
repnz
cli
repnz
ret
ss
in
lods
in
mov
mov
pushf
int
fnstsw
sahf
in
lret
xor
test
pop
fisubrl
mov
dec
push
jnp
dec
pop
rorl
jecxz
daa
mov
push
dec
pop
sub
sub
cmp
das
dec
mov
into
fiaddl
or
sbb
movsl
xchg
bound
add
mov
aas
in
cmp
adc
cmp
inc
call
out
mov
test
aad
mov
jle
jo
adc
call
test
scas
repnz
rol
dec
rorb
push
mov
ljmp
addr16
stos
inc
scas
mov
adc
shrb
repz
aad
mov
nop
cmpsb
mov
cli
loope
fldcw
andl
mov
cmc
sub
popa
cmp
das
and
adc
outsb
sbb
or
fstps
pop
cld
ds
xchg
xchg
out
std
cmp
cli
sahf
push
xchg
and
popf
incb
out
pop
mov
jae
adc
cmp
jg
push
mov
cmp
dec
xchg
mov
inc
aas
inc
adc
fldl
jne
xor
loopne
das
out
push
shll
or
sbb
mov
mov
sti
push
push
lahf
lods
or
rorb
mov
int
dec
jnp
adc
xchg
rorb
mov
ret
mov
push
ds
hlt
out
lock
push
cmpsl
push
pushf
insb
scas
repnz
mov
add
inc
stos
sbb
adc
adc
pop
rol
adc
idivb
dec
dec
jg
ret
mov
ret
jno
lock
addr16
or
imull
xor
aam
out
cmpsb
jae
addb
jae
inc
arpl
sub
stos
das
lods
test
mov
stos
add
pop
shll
aad
jecxz
sub
xlat
pop
dec
out
jae
pop
sub
xchg
std
xchg
jl
dec
mov
je
aad
aam
mov
stc
insl
out
fucomip
out
xor
mov
lahf
jbe
cmp
and
cltd
les
in
xchg
pushf
aas
and
jmp
std
fidivs
jns
jbe
lahf
scas
sub
sbb
push
push
xlat
mov
jmp
pop
push
pop
jmp
in
jmp
inc
mov
ret
push
push
out
or
or
stos
in
das
fnstsw
es
jg
js
pop
addr16
jp
popf
mov
imul
aas
jl
ljmp
jmp
shll
js
inc
lock
adc
js
fcoms
icebp
or
and
mov
stos
test
jl
add
jbe
jmp
jbe
pushf
push
and
leave
data16
insb
shll
jae
mov
fidivs
mov
icebp
mov
rcr
jbe
outsb
pop
fildll
lods
ja
neg
out
stos
std
or
int
mov
sbb
imulb
adc
xor
xchg
inc
push
lahf
roll
xor
hlt
pop
fdivr
popf
or
or
and
sub
lds
rorb
add
mov
mov
sub
pop
jns
add
mov
lds
push
scas
mov
jmp
js
xor
rcrb
or
out
in
inc
sbbl
xchg
pop
xchg
jmp
add
in
cmp
and
aam
test
call
pop
loopne
sbb
push
mov
lock
std
paddsw
pop
repnz
push
cmp
inc
loop
xchg
fsubr
xchg
xor
or
scas
push
cmp
addb
aaa
arpl
xor
add
ljmp
xor
clc
pushf
in
cld
mov
in
std
mov
aas
aad
mov
pop
lret
fstpl
mov
lret
movb
pop
popf
mov
call
mov
mov
mov
cmc
push
xchg
movsb
negl
dec
xor
jb
mov
cmp
pusha
mov
cmpsb
std
or
xor
loopne
push
xchg
push
sbbl
xlat
mov
mov
mov
inc
stos
pushf
xchg
loopne
inc
lods
adc
dec
push
arpl
xchg
push
pop
outsb
test
push
ret
inc
loope
outsl
sahf
arpl
jb
cltd
test
lock
sub
push
xchg
dec
addr16
les
xlat
fwait
mov
xor
adc
fcmovbe
and
or
lods
fcmovne
loop
int
pop
decb
loopne
sahf
pop
rol
xchg
push
xchg
daa
inc
leave
aaa
sbb
cmpsb
out
jmp
movsl
xor
xor
clc
ret
xor
pop
clc
ljmp
fstpt
sub
mov
ret
shrb
lahf
or
addb
shrb
mov
dec
ja
in
sub
mov
mov
sbb
mov
aad
add
stos
xchg
cmpsb
stos
jmp
sbb
mov
insl
jnp
mov
dec
mov
push
add
xor
add
cltd
test
lahf
push
pop
jno
lret
dec
xchg
jmp
inc
nop
push
mov
test
and
xor
fcmove
aas
std
adc
pop
xchg
adc
mov
xor
mov
push
ljmp
in
loop
xor
std
ja
xchg
mov
jbe
push
and
cmp
fimuls
das
clc
push
shrb
sbb
aas
ret
push
fwait
stos
xchg
sbb
out
stc
fsubs
aaa
or
bound
and
cmp
popf
adc
xlat
stc
push
push
cmpsb
stc
pop
addr16
xlat
xor
mov
jnp
popf
push
notb
xor
add
incl
addr16
sbb
imul
mov
mov
sub
push
mov
inc
xchg
je
call
or
jle
icebp
xchg
jno
pop
repnz
adc
movsb
jmp
sbb
out
fadd
das
xchg
pop
mov
mov
mov
mov
dec
arpl
sbb
popa
add
sbb
cmp
mov
sbb
sbb
xchg
insl
cmp
nop
insb
lea
rorl
mov
dec
push
and
mov
add
jno
push
imul
mov
scas
adc
imul
negb
jge
dec
cmp
add
xchg
dec
push
dec
xchg
dec
push
jmp
mov
mov
jo
and
inc
mov
push
add
insb
testb
fsubrp
aaa
scas
dec
std
call
in
cmp
xchg
jecxz
jecxz
xchg
imul
and
mov
xchg
ds
jmp
shll
dec
sar
and
imul
mov
or
pminub
insl
std
nop
dec
or
out
mov
dec
xor
xchg
mov
repnz
sahf
adc
xchg
push
fstpl
dec
xchg
inc
mov
adc
aaa
in
xlat
cmp
inc
idivl
fsubs
ret
in
aaa
pop
inc
jmp
out
jno
adc
std
stos
jne
jae
repnz
add
add
call
mov
and
xchg
mov
imul
lahf
testb
pop
mov
loopne
xor
ret
sub
pop
hlt
dec
fistps
pop
or
jno
jl
out
xchg
sbb
ret
push
cmpsl
cmp
add
mov
mov
popa
loop
sahf
pushf
xchg
pop
loope
inc
or
mov
push
jmp
pop
push
jno
jae
mov
movsl
rol
pop
mov
loopne
or
imul
stc
jo
daa
mov
stos
enter
int3
fidivs
dec
lcall
inc
dec
jo
jno
mov
int
repnz
pop
inc
push
dec
sbb
cmpsb
dec
jne
cmp
sub
inc
clc
rcrb
sub
scas
out
jp
movzwl
sbb
or
stos
sahf
and
mov
loopne
inc
loope
test
push
rclb
xchg
sub
pop
mov
nop
ret
mov
sbb
xchg
add
aaa
test
dec
test
inc
add
dec
mov
mov
inc
nop
imul
das
sbb
mov
cmp
push
pop
aam
aad
or
jne
lds
fnsave
dec
push
push
pop
std
mov
push
roll
jge
xchg
mov
nop
dec
test
repnz
jnp
jae
or
and
es
add
lock
pushaw
clc
push
cwtl
sti
movsl
js
xchg
imul
or
add
nop
daa
mov
shll
scas
mov
fscale
loop
lods
test
sahf
es
mov
adc
shlb
std
fcoms
movsl
lret
stc
cld
sub
insl
ficompl
mov
pop
fldt
andl
pop
icebp
inc
xor
setns
or
jmp
cmp
iret
xchg
xchg
pusha
or
daa
and
pop
stc
jg
mov
mov
mov
jns
adc
push
sbb
xchg
add
and
pop
test
dec
clc
imul
es
jbe
nop
aam
int3
jg
cli
xor
lods
arpl
scas
mov
adc
test
jns
fwait
or
ja
inc
test
arpl
movsb
mov
xor
jge
mov
sbb
clc
mov
add
mov
pop
loopne
cwtl
inc
lods
loop
mov
dec
xor
out
cmc
or
in
sub
loope
dec
fistps
xchg
fistpll
xor
inc
inc
iret
mov
fcompl
loopne
das
popf
inc
mov
inc
adc
mov
negl
lcall
cwtl
dec
bound
adc
lods
shrb
mov
dec
add
jge
mov
mov
fldcw
mov
arpl
cwtl
fwait
lds
js
add
jecxz
out
scas
mov
ja
movb
int
sbb
pop
jne
cmp
subb
pop
mov
xchg
scas
inc
aad
jge
sti
scas
and
lret
and
shrl
mov
icebp
enter
pop
xchg
dec
pop
iret
out
js
divb
jne
incb
in
fldenv
std
or
push
cmp
mov
jle
js
aam
and
nop
adc
xor
out
adc
inc
call
jnp
add
push
aam
outsb
push
loop
les
lahf
out
mov
xor
cmpsb
pop
sub
inc
xor
hlt
dec
push
ret
dec
push
aam
pop
mov
lods
lahf
dec
mov
inc
sub
sub
dec
pop
cmc
jnp
cmp
mov
push
jnp
cmp
mov
pop
cmp
test
inc
mov
jp
daa
ficompl
lret
mov
mov
jp
adc
mov
mov
push
ret
fistps
dec
sub
xor
cmp
jmp
or
adc
mov
xlat
outsb
pop
xlat
shlw
insl
les
inc
push
xchg
jbe
lret
push
daa
fwait
dec
scas
int3
dec
shll
sahf
cltd
xlat
mov
adc
ss
pushf
jle
and
adc
inc
addr16
adc
mov
pop
push
xchg
lea
clc
mov
iret
mov
stos
cmp
pop
ljmp
jecxz
loope
adc
xor
dec
cmp
dec
pop
adc
jp
rcrl
jg
shlb
push
shrl
into
xor
and
jbe
iret
xor
mov
inc
push
fidivl
sbb
negl
test
dec
xchg
jp
movsl
sti
mov
xor
nop
xchg
adc
dec
jp
sbb
pop
ret
pop
inc
mov
sti
adc
mov
pop
dec
jo
movb
dec
xchg
mov
add
mov
repz
and
icebp
fadd
xchg
mov
repnz
mov
add
mov
mov
mov
rcll
adc
dec
jae
int3
les
xchg
xchg
sub
dec
push
ljmp
inc
push
add
in
les
inc
jg
inc
add
adc
pop
mull
repz
je
cli
cmp
jnp
sbb
inc
fsubrs
pop
outsl
add
lea
mov
sbb
imull
lds
and
sbb
je
fs
inc
xchg
shl
jbe
movsb
das
in
xchg
hlt
pop
sarl
les
pop
insb
mov
mov
pop
and
add
mov
ficoml
cs
cmc
dec
aam
pop
mov
aas
dec
adc
adc
sub
mov
fdivr
scas
lods
movsb
dec
fildl
cmp
xor
pusha
aam
push
fs
hlt
xchg
cmp
fnstsw
push
loope
je
lods
sbb
push
push
test
jbe
ds
add
inc
pop
push
and
mov
int3
gs
filds
out
xchg
mov
les
jns
int
pushf
adc
loopne
adc
inc
xor
mov
add
imul
pushf
cmpsl
cmpsl
ljmp
pushf
js
xor
cmp
lock
mov
int3
mov
mov
imul
jecxz
mov
mov
add
ss
inc
bound
mov
filds
dec
pushl
data16
inc
cwtl
push
sub
push
jne
rcrl
ficoms
adc
cli
je
inc
mov
loope
sti
adc
pop
leave
pop
jns
cmp
fs
pop
inc
or
or
mov
bound
mov
jae
test
mov
and
add
inc
cmpsb
pop
stos
pop
pop
fbstp
hlt
sbb
rorb
movsl
inc
aas
rolb
add
es
imul
aaa
push
add
xor
insl
inc
adc
xchg
or
inc
lahf
cmp
or
mov
fistps
mov
mov
lods
and
push
adc
jg
rorb
pop
sbb
loope,pt
repnz
mov
iret
adc
dec
pop
xor
ds
gs
mov
xor
stc
dec
aaa
mov
sbb
inc
out
xor
lahf
mov
sbb
iret
fwait
das
cmp
lret
xor
aas
or
aas
mov
sub
push
std
jg
aas
divl
dec
sub
mov
xorps
push
lahf
sub
jmp
cli
xor
cmc
les
aaa
andl
or
inc
movsb
jno
frstor
jecxz
in
in
rclb
nop
push
and
or
lret
xchg
mov
jmp
pop
subb
dec
mov
cwtl
addr16
addr16
icebp
cmp
frstor
add
mov
fwait
push
aam
pop
sbb
ss
xor
ror
xchg
sub
and
inc
jg
jne
dec
pusha
push
and
sub
mov
sti
pop
sahf
sub
push
xor
add
and
jb
pop
cmp
sub
mov
imul
scas
dec
xchg
hlt
hlt
and
enter
inc
jecxz
dec
out
mov
insl
mov
mov
sub
loope
sbb
fiaddl
mov
sub
stos
add
mov
enter
add
jnp
loope
js
jno
pop
adc
outsl
popa
andb
add
and
sbb
mov
lcall
sahf
mov
repz
push
mov
clc
rorb
test
roll
sti
repz
out
sahf
mov
jp
cmpsl
aaa
shlb
add
scas
fstpt
xchg
xor
xchg
mov
pop
mov
jne
int3
mov
and
sbb
xlat
dec
out
ja
mov
test
int
mov
mov
pop
inc
adc
dec
pop
loope
inc
shlb
add
ljmp
call
dec
push
rorb
add
repz
in
dec
mov
cli
icebp
fsubs
les
ret
shrl
ljmp
dec
pop
adc
jmp
test
push
or
jmp
aad
mov
les
andl
stos
in
test
std
hlt
dec
data16
fisubs
inc
std
js
aas
repnz
je
fcmovu
xchg
std
add
xor
pop
sbb
inc
add
das
fidivs
sarb
ficompl
pop
push
sub
imul
pop
inc
push
sub
mov
pop
pop
in
mov
loope
sbb
aam
adcl
out
das
mov
push
mov
add
ret
pop
je
jno
out
lock
add
in
sbbb
pop
dec
cld
push
xor
and
dec
jp
nop
xor
arpl
push
mov
or
je
cmp
repnz
pushf
adcl
test
mov
mov
xor
mov
push
pop
repz
xchg
sub
push
inc
lret
push
pop
scas
test
mov
xchg
fwait
ja
dec
mov
pop
adc
cmp
sbb
and
mov
lahf
dec
ja
pop
sti
or
dec
pop
fldl
fs
push
stos
into
mov
mov
add
push
push
pushf
rolb
cmp
stos
xor
pop
add
pop
inc
sub
scas
int
rep
rcr
or
shrb
xchg
and
cld
push
stos
push
lock
push
popf
add
sti
jb
movsb
and
sahf
cmpsl
add
int3
mov
ret
jo
jle
cmp
sti
inc
add
xchg
jne
jae
int3
mov
pushf
push
subl
aaa
push
xacquire
ja
enter
das
pushl
inc
cwtl
cwtl
cs
xor
lcall
cmpsl
or
mov
cmp
stos
aas
jo
movsl
cmp
lahf
or
pop
ret
fiadds
fwait
xchg
xor
or
cmp
mov
jge
subl
mov
out
xchg
repnz
add
inc
inc
sbb
stos
popa
aam
xchg
int3
adc
imul
add
lods
pop
jns
fdivrs
mov
pop
cmpsl
inc
adc
repz
xchg
mov
imul
jbe
dec
sahf
mov
and
imul
push
out
pushf
mov
outsb
ljmp
push
inc
popf
jnp
aad
addl
cwtl
jl
mov
out
jmp
aaa
sar
in
mov
xchg
cmp
cltd
jmp
out
test
pop
pusha
dec
das
lea
push
jle
add
pop
jge
test
or
mov
mov
and
ss
xchg
outsl
scas
shrb
movsl
enter
test
mov
sahf
pop
push
sub
sub
iret
xchg
mov
movsl
sbb
popa
dec
pop
in
je
sub
pusha
fwait
ret
jle
or
xor
loope
icebp
orb
lcall
mov
sbb
test
daa
cwtl
mov
ret
repz
subb
mov
lret
cmp
mov
push
xchg
mov
fists
or
or
push
pop
jp
mov
push
xor
xchg
int3
call
test
mov
add
sbb
add
cmovns
pop
mov
fldt
data16
xor
jmp
loop
or
enter
cmp
lea
pop
cmp
lock
push
arpl
rcr
push
dec
adc
jecxz
sub
les
pop
ret
inc
adc
es
int
fisttps
and
in
iret
pushw
xor
mov
je
subb
cmp
filds
xchg
pop
sbb
flds
dec
fdivrl
inc
and
cmc
movsl
cmp
fidivl
mov
adcl
jbe
fidivrs
stc
in
pop
in
lret
pop
pop
jbe
std
mov
stos
idivl
mov
add
bound
addr16
insl
and
shl
leave
shll
mov
ds
loopne
nop
fdivrs
sbb
je
fs
add
mov
dec
sbb
out
scas
lret
rcrb
dec
mov
test
sub
dec
fsubr
inc
or
jle
mov
test
add
mov
xor
das
stc
mov
iret
sub
and
js
inc
fucomip
pop
jns
test
adc
in
inc
sbb
xchg
call
repz
hlt
jecxz
test
mov
imul
dec
add
enter
mov
shll
and
sbb
ja
xchg
ljmp
push
cmp
aad
ljmp
aad
call
mov
outsl
mov
daa
lods
and
pop
push
in
push
lcall
cmp
adc
cmp
adc
gs
into
jae
add
xchg
jo
inc
ret
sbb
test
sbb
or
gs
mov
cmp
push
and
mov
rolb
pop
mov
sbb
std
adc
dec
in
out
pushf
scas
sbb
dec
sbbb
or
xchg
icebp
test
jb
fadds
test
sbbl
dec
fidivs
xor
mov
push
lcall
and
test
rclb
mov
out
pop
push
pusha
pop
jmp
pushf
gs
jmp
adc
push
xor
sarb
push
ss
jmp
dec
xor
xor
addl
cmpsb
cltd
jne
dec
lods
je
jecxz
sbb
imul
test
and
mov
xor
out
js
push
lds
sbbb
add
and
lahf
cmp
andl
xchg
daa
pop
push
sahf
pusha
adc
scas
and
sarl
outsl
sbb
add
sbb
mov
or
xchg
sbb
aad
or
icebp
sbbl
lcall
sbb
cmp
or
les
push
add
pop
dec
in
adc
push
adc
push
jne
stos
add
sbb
das
movb
test
xlat
mov
inc
mov
jl
pop
and
pop
mov
jge
clc
nop
pop
jp
mov
jg
add
sub
scas
pop
daa
lods
jmp
or
lea
cmp
mov
mov
cltd
std
das
cmp
xlat
xchg
sub
pushf
fdivs
ljmp
sub
fs
push
arpl
jae
push
jae
xchg
addb
xor
test
adc
sbb
adc
scas
inc
movsl
pop
sub
daa
cs
stos
lods
push
sub
dec
dec
or
insb
sbb
jmp
adc
inc
mov
pop
cmp
xchg
xchg
decl
dec
pop
mov
loope
repnz
and
mov
lcall
and
fwait
dec
jge
ja
pop
testb
add
pop
stc
push
addb
dec
addr16
jp
push
cmp
inc
in
jb
mov
hlt
sarb
sbb
xor
fidivl
dec
gs
ror
pop
add
in
aas
daa
sub
mov
mov
rep
int
mov
jnp
sub
inc
cmp
popf
mov
dec
inc
fnstsw
je
ds
xor
lods
sub
push
sbb
xor
out
xchg
in
in
ds
push
mov
loope
cmp
mov
lahf
jmp
mov
mov
notl
fcompp
xchg
jne
dec
cli
gs
sub
cmp
mov
ja
mov
or
testl
mov
xor
or
in
xor
je
cmp
fadd
out
sub
mov
repnz
mov
std
pop
out
push
mov
loopne
repnz
xlat
loope
add
pop
jae
add
sbb
lods
sub
jo
jl
mov
sahf
cmpsb
inc
mov
push
insb
mov
sahf
test
jae
shll
inc
pop
mov
mov
dec
setne
xor
andl
mov
jle
leave
mov
fistl
mov
fucomip
nop
xlat
adc
imul
sbb
insl
inc
jbe
test
sahf
mov
in
ror
jp
lret
xchg
cmp
pop
adc
xchg
aad
mov
push
test
mov
in
sbb
pop
inc
in
cwtl
push
push
pop
xor
jnp
jo
xor
fnstcw
les
xlat
ss
push
scas
sub
add
xchg
sbb
fiadds
sahf
lcall
and
into
mov
int3
or
push
inc
or
insl
rcrb
jno
mov
sub
ss
dec
hlt
xorl
rorl
ret
cmp
inc
or
test
lock
adc
add
ljmp
insl
mov
inc
lea
fiadds
jmp
mov
push
iret
movsl
fwait
pop
sbb
ja
sbb
ds
sub
cs
pop
in
xchg
sub
mov
loop
movsl
psrad
jp
sti
dec
inc
fnstsw
mov
cs
insl
jge
dec
loop
cmp
dec
mov
pusha
dec
push
pop
cmpsl
inc
fs
lahf
scas
inc
rcr
loop
lret
jg
push
call
fstl
or
adc
mov
daa
xor
push
test
pop
jo
jg
negb
js
repz
call
sbb
mov
and
pop
hlt
fsub
orl
ror
mov
arpl
xchg
icebp
mov
repnz
adc
cmp
test
loop
pop
icebp
or
mov
jp
pop
lds
pop
adc
sbbb
pushf
out
jmp
xchg
cmp
jmp
adc
jb
cltd
aas
push
inc
cmp
dec
in
rolb
into
fnstcw
popa
sbbl
pusha
dec
out
jne
stos
push
xchg
aad
jbe
jnp
fidivl
ljmp
ret
cltd
mov
lods
adc
clc
push
das
mov
iret
sbb
cmpsl
jb
xchg
in
pop
dec
in
mov
jl
mov
lahf
aad
mov
mov
lahf
cli
cmpsl
andl
mov
xchg
mov
xor
out
pop
into
gs
and
jge
shr
addl
loopne
stc
push
or
add
jp
dec
pop
in
cmp
xor
enter
test
cmp
and
pop
push
int
sar
dec
lods
inc
cmp
pop
lret
cmp
jecxz
mov
sub
lret
push
push
push
xchg
add
ret
sbb
xchg
stos
cmp
cltd
divl
pop
push
bound
inc
aas
push
dec
sub
loope
loopne
add
ja
and
sbb
imul
pop
dec
fimull
and
sub
xor
enter
sub
add
out
test
xlat
cmp
out
fwait
push
jl
insb
mov
add
jge
jle
pop
shll
insb
rcll
mov
fucomip
mov
out
or
mov
push
out
mov
in
dec
add
mov
dec
cmp
ret
or
addr16
data16
mov
out
fldcw
int
jo
std
gs
cmp
pusha
iret
test
incb
mov
ret
cs
push
push
outsb
andb
pop
shll
leave
mov
mov
out
jnp
jnp
jecxz
inc
pushf
mov
mov
add
pop
subl
stc
xchg
loop
jo
loop
dec
sti
jmp
in
push
loope
jns
jp
mov
pushf
push
insb
lds
repnz
or
sbb
inc
xlat
pop
xchg
cmp
dec
out
mov
popf
sub
dec
es
mov
iret
shlb
jmp
insl
sub
aam
mov
or
xchg
gs
nop
ss
dec
pusha
fmull
pop
movsb
ss
jae
sub
jns
fimuls
sub
push
sbb
add
ds
and
lcall
fldt
cmp
in
dec
or
fistl
lcall
or
and
xchg
insb
mov
mov
jge
dec
push
cmpb
push
shl
inc
in
jecxz
adc
cmp
xor
inc
fmul
movl
cmp
jns
cli
mov
cmp
sbb
cmpsl
push
out
add
pop
setns
aas
lcall
mov
cmpsl
test
jo
jmp
in
jno
add
in
aaa
into
push
mov
push
jne
xchg
push
ja
push
xchg
or
inc
cwtl
cld
pop
sbb
stos
pop
fwait
and
jge
or
outsl
cwtl
stc
mov
cmpsl
jge
pop
sarl
sahf
add
cmp
and
xchg
clc
xor
out
mov
cmpsl
xor
push
loop
xchg
roll
ljmp
shrb
call
inc
fiadds
std
xchg
gs
insl
andb
sub
xchg
insb
dec
sub
mov
cmp
pop
and
push
adcb
xor
stos
dec
xlat
mov
jo
inc
and
inc
shrb
ss
fstpl
out
xchg
sub
push
imul
jle
loope
imul
adc
incl
movsb
xchg
adc
cli
push
and
mov
and
mov
cmpsl
cmpb
jbe
or
sbb
cli
pop
adc
add
sub
sbb
je
xchg
scas
dec
push
xor
daa
sub
xor
xor
fwait
push
in
xchg
insl
sub
sbb
ss
ja
pop
cmpsl
or
sub
bnd
jnp
leave
movsl
scas
int
loopne
fdivrs
dec
fdivp
jbe
lods
ljmp
insb
lcall
mov
mov
aas
sbb
sub
aam
sbb
rcrb
mov
arpl
movsb
or
sub
cmp
push
andb
popa
insb
adc
in
xchg
adc
ja
xor
sub
mov
inc
cwtl
in
rorb
call
fadds
lcall
and
movsl
pop
dec
add
rcrb
mov
sbb
dec
jmp
or
in
jp
or
rcrl
bound
loop
mov
push
and
and
rcrb
push
cmpsl
and
in
xchg
lret
pop
mov
scas
pop
daa
or
fsubl
aaa
pop
or
nop
movq
insb
dec
lock
and
cmp
inc
cmp
adc
pop
out
push
ja
ja
pop
fbld
sub
bound
xchg
lods
lahf
sbb
scas
cmp
mov
fstpl
fimull
cmpsl
xchg
sub
lods
lds
pusha
cmp
push
ds
push
dec
cmp
in
pop
repnz
paddsb
inc
push
sahf
or
imul
xlat
mov
cmpsl
rol
js
jecxz
mov
ret
push
cmp
adc
ljmp
jge
enter
aam
pop
scas
xchg
int3
lret
and
cmp
adc
insb
ret
ljmp
cmc
repnz
and
xchg
push
and
mov
push
ds
stos
sti
xor
mov
add
mov
notb
pop
cwtl
adc
sbb
test
cmp
insl
sahf
sub
icebp
mov
iret
dec
loopne
and
mov
sub
cmp
sbb
mov
mov
repz
test
ds
fwait
cmc
and
mov
outsl
outsl
int3
jle
jo
cmp
int
xor
mov
mov
mov
mov
or
es
dec
aaa
ret
arpl
dec
dec
in
mov
cmp
jmp
rolb
sub
inc
enter
insl
shll
sti
lcall
sbb
pop
in
sbb
mov
nop
cmpsl
into
lcallw
mov
nop
sbb
test
das
out
pop
cltd
sub
sti
adc
rcrl
lcall
jne
adc
mov
mov
mov
jo
hlt
mov
iret
jnp
popa
pop
rclb
adc
outsl
jae
sub
jns
js
or
out
sti
mov
push
ljmp
ret
gs
mov
rcr
xor
inc
roll
clc
popf
cmpsl
lret
and
das
sub
and
cmc
pop
mov
or
jp,pt
xor
or
out
stc
je
push
ror
or
mov
cmpsb
inc
pop
out
push
pop
ljmp
call
outsb
cmpsl
push
adcl
test
or
and
or
daa
shrb
mov
fisubl
dec
mov
scas
and
scas
std
mov
jge
jp
push
mov
and
xor
xor
sbb
jo
jns
ret
insl
test
bound
push
fbld
test
aam
dec
add
jg
mov
out
add
add
mov
push
mov
out
sub
rol
add
out
pop
call
pop
fldenv
push
dec
sub
aaa
inc
push
cli
movsl
ljmp
aam
iret
pop
push
rorl
dec
in
and
push
fucomi
cmp
mov
popa
sbbb
mov
cmp
adc
repnz
sbb
mov
push
lods
pop
add
std
push
adc
test
int3
testl
cmp
test
out
call
fildl
test
jmp
xlat
fisubrs
sub
mov
xor
sub
cmp
mov
mov
lret
mov
fcompl
fldcw
test
cmc
inc
mov
rorb
xchg
add
xlat
jmp
mov
cmp
push
cmc
bound
xchg
fldcw
psubw
lods
and
cs
ds
stos
daa
lret
pop
fwait
scas
test
call
add
mov
ret
scas
adc
shlb
rcrl
inc
cs
orl
in
loop
unpcklps
inc
cmpsl
or
sub
xchg
pop
lock
rclb
sub
lret
nop
inc
mov
push
cmp
imull
loopne
push
sbb
ret
push
cwtl
fildll
lods
orb
inc
arpl
jne
inc
xor
lahf
sti
fwait
xchg
leave
lds
jb
icebp
mov
jmp
xor
push
cmpsb
push
cmp
je
vpcmpgtb
add
mov
sub
adc
push
adcb
push
jne
jge
sbb
lret
int
imul
xor
stos
div
data16
ds
pop
inc
test
jmp
setns
ret
cmp
xchg
push
pop
cltd
mov
jbe
sbb
or
xor
test
nop
call
add
iret
test
jmp
insl
push
mov
inc
push
sbb
dec
add
add
push
not
cmp
std
stos
pop
pop
loope
adc
test
cs
xor
pop
lods
inc
arpl
ficoml
cmp
fs
fnsave
mov
xor
mov
push
and
out
and
pop
pushf
sbb
icebp
xchg
cmpsl
push
pop
push
insl
icebp
movsl
xor
mov
lock
iret
cmp
aas
ret
dec
nop
adc
xchg
daa
outsl
mov
inc
imul
aam
inc
sbb
mov
icebp
add
mov
xchg
sbb
cmpsl
mov
rorl
jb
push
mov
iret
pop
cwtl
enter
push
aas
mov
enter
adc
push
movsl
cmp
jne
pop
sub
cmpsb
cmp
jno
lret
push
ljmp
dec
or
shr
rorb
add
pop
loop
fsubs
add
dec
leave
in
fsubs
mov
or
iret
jb
out
lods
xchg
int3
rclb
sbb
popf
popa
pop
add
mov
cmp
sub
pop
imul
popa
popa
push
pop
outsb
inc
fsubr
imul
and
jae
cmp
bound
mov
fwait
and
sbb
adc
rcl
shrl
add
mov
sub
xor
xchg
imul
popf
mov
dec
enter
aaa
mov
ds
mov
dec
lea
fistl
vsqrtpd
das
sub
movsb
add
sbb
dec
imul
stos
insl
cmpl
or
mov
insb
lock
mulb
add
hlt
pop
dec
and
jp
mov
cmp
call
out
mov
imul
dec
stos
imul
out
movsb
fisubs
sti
jnp
push
fsubrl
xchg
fldt
insb
fbld
ret
push
and
dec
fdivl
pop
jne
mov
clc
icebp
fcoms
stos
enter
inc
push
je
jae,pt
mov
fstpt
pop
mov
mov
fsubrs
dec
push
mov
fs
insb
sub
pop
pop
cmp
inc
mov
adc
sbb
xchg
insl
out
js
ds
mov
inc
into
movsl
fmull
cmp
fdivp
push
repz
mov
sbb
clc
mov
push
cli
leave
jbe
out
sbb
dec
xchg
adc
adcl
mov
std
sbb
push
inc
nopl
mov
int3
adc
into
mov
xor
shlb
cwtl
xlat
dec
call
sub
addr16
pop
pop
sbb
test
mov
push
adcl
pop
pop
out
int
jae
cmpsl
xor
clc
dec
arpl
cmpsl
aam
cmc
fcom
jns
add
test
mov
jne
inc
jg
pushf
or
int
aas
hlt
shlb
add
xchg
fsubrl
ljmp
pop
divb
inc
shrl
enter
sbb
push
leave
test
add
stos
jmp
cltd
add
call
jo
fnstsw
push
push
clc
ja
jnp
mov
adc
push
jp
mov
inc
fcoml
icebp
push
xchg
mov
adc
fwait
arpl
mov
or
aas
jnp
mov
rcrl
imul
stos
sbb
jnp
jno
push
test
jbe
mov
adc
inc
push
fidivrl
xor
lret
mov
in
fstpl
bound
mov
jmp
sub
mov
lahf
test
or
scas
mov
sub
lods
inc
jb
mov
pushf
out
inc
sbb
dec
addr16
fwait
sti
pusha
jle
enter
and
dec
sbb
movsb
cmc
ljmp
push
ret
pop
test
loope
mov
sti
in
jo
jp
bound
push
mov
jnp
pusha
mov
adc
incl
movsl
pushf
addl
add
repnz
loopne
stos
fidivl
orl
ja
nop
pop
int
in
jle
lret
cmp
ficompl
push
fnstenv
mov
rclb
insl
pop
and
adc
inc
inc
enter
stos
push
ficomps
mov
ret
lahf
push
aam
pushf
and
mov
jnp
icebp
divb
testb
jno
xlat
dec
imul
fwait
aas
sbbl
loopne
popf
shlb
pop
test
mov
inc
jecxz
daa
outsl
in
int3
fs
loop
inc
fwait
sub
data16
test
xor
and
mov
xchg
jb
aad
cmp
sbb
push
add
inc
pop
dec
xor
lods
inc
fsts
inc
movsb
scas
push
or
mov
fbld
les
push
mov
andl
ret
jb
aad
notb
jo
nopl
add
test
out
cmp
lahf
push
adc
or
imul
pop
leave
addr16
pop
xchg
fs
xor
movsb
nop
stos
fdiv
std
xchg
and
addr16
sub
cmp
pop
rorl
lods
sub
loope
mov
cs
inc
push
out
cmp
in
xor
into
imul
adc
jge
add
mov
add
ja
shll
outsb
add
nop
jno
and
mulb
xor
out
mov
stos
test
mov
dec
clc
jno
mov
mov
push
and
nop
xlat
orl
andb
repz
cmp
mov
pop
mov
sub
jl
ja
dec
sub
jb
cld
cltd
push
outsb
and
dec
push
mov
adc
mov
mov
shlb
mov
mov
dec
sub
add
nop
sahf
lock
xchg
loope
adc
push
getsec
push
and
adc
pop
push
js
pop
jle
sbb
nop
je
push
jb
les
xchg
fnsave
insl
loopne
imul
divl
push
cwtl
xchg
push
outsb
leave
cmpsl
inc
out
cld
jb
dec
add
shl
mov
dec
push
jmp
jae
jo
xchg
push
jb
adc
xor
push
repnz
pushf
push
sbb
imul
shrb
es
inc
xor
imul
or
sahf
stos
and
test
rolb
fwait
or
imul
mov
dec
data16
jg
pop
adc
xchg
scas
fcompl
fs
jns
outsb
loope
cmpsl
jno
fstps
mov
fsubrl
sbb
sbb
mov
cmc
loope
xchg
out
out
xchg
pop
cmp
and
or
mov
inc
ljmp
pop
outsb
jmp
mov
ret
dec
mov
sbb
gs
fdivs
sahf
pop
movsl
iret
push
in
inc
or
pop
stos
mov
mov
scas
mov
notl
repnz
ficomps
dec
pop
fsubl
xchg
fsubr
xchg
test
std
rcr
dec
push
imul
adc
cltd
mov
mov
and
mov
mov
cld
or
xor
or
jl
movsb
sbb
dec
sbb
scas
fsubp
inc
fsts
add
inc
and
popa
movsl
cmp
dec
xchg
xchg
nop
ret
jbe
inc
hlt
or
bnd
ret
pop
jle
int
sub
repz
jmp
in
jb
push
in
jle
scas
test
push
fs
outsb
push
jns
fdivrl
mov
fmulp
xchg
popa
clc
sub
jns
lock
inc
lret
xor
test
sbb
pop
jle
das
mov
aam
test
mov
lcall
inc
call
inc
ja
fcoms
xor
iret
xor
jne
mov
push
mov
sbb
lods
push
add
pop
in
add
add
mov
xchg
fnstcw
jge
leave
mov
sahf
inc
push
xchg
mov
pusha
mov
jmp
pop
xchg
mov
add
adcl
xor
cmpsb
test
mov
loopne
loope
sti
lods
ljmp
in
stos
sahf
xchg
aas
arpl
sbb
lcall
jne
add
xor
xor
dec
mov
xor
jle
dec
cmpsb
cmp
or
rorl
repnz
cmp
subb
mov
fmull
jle
std
push
cmpsb
rolb
sub
sbb
pop
popf
sbb
mov
rcll
fstl
mov
cmp
add
cli
mov
jae
sbb
aaa
mov
testb
jle
cltd
xor
repz
mov
pop
mov
data16
out
xchg
jae
dec
xor
jnp
mov
jg
and
rcrb
adc
stc
std
cmpl
xchg
cmp
hlt
gs
mov
pop
push
test
jmp
or
lret
mov
lds
adc
sub
inc
fstl
dec
mov
test
stc
pop
push
mov
je
in
cld
cmp
les
insl
sub
fcompl
mov
out
mov
stos
shll
ds
push
fxch
arpl
jae
addr16
pop
cmpsl
das
dec
into
dec
rcl
ret
pusha
loope
sub
int3
xor
lret
imul
sbb
push
mov
inc
in
outsb
dec
fcoms
xor
push
les
jns
aad
es
jb
hlt
mov
jge
ret
popf
xor
cmp
rclb
add
ljmp
xor
xor
ja
push
push
mov
rol
sub
jne
inc
sub
insb
mov
insl
or
xchg
inc
pusha
popf
cmp
mov
imul
cmpsl
cmpsb
jg
inc
popa
dec
mov
insb
jno
push
mov
inc
repnz
mov
sbb
xchg
dec
sub
sbbb
inc
mov
push
in
stos
es
cmp
add
leave
xchg
push
add
mov
sti
mov
sbb
rcrl
xchg
lods
xor
jae
jge
jnp
lods
dec
push
imul
pusha
sbb
mov
out
mov
mov
push
mov
je,pt
push
ljmp
lds
pop
push
cmp
mov
add
inc
pop
mov
test
cmp
iret
inc
fidivrs
and
in
popa
ljmp
dec
adc
imul
mov
test
pushf
out
data16
or
push
je
ljmp
in
fiadds
xor
hlt
mov
jmp
test
jo
nop
push
or
pop
ljmp
push
lock
lret
addr16
subb
or
lea
js
mov
jnp
pusha
popa
add
sti
xchg
cmp
mov
shll
and
push
insl
add
pop
xlat
xor
mov
inc
rcll
mov
jno
cmp
pop
or
in
popa
add
or
sbbb
stc
push
mov
mov
cld
xchg
mov
fbstp
push
lret
rcrl
xor
addr16
in
mov
lds
out
xchg
push
icebp
outsl
jo
jae
test
int
lock
gs
mov
jnp
je
sbb
notl
jg
and
mov
cbtw
add
int
or
pop
jl
ss
jp
dec
push
leave
stos
out
xchg
stos
xor
jmp
scas
push
jae
test
jnp
push
jne
jecxz
js
shrb
jbe
sbb
dec
arpl
push
jo
lods
inc
bound
sub
insb
fistps
loope
and
push
lret
outsl
mov
lods
test
xor
fdiv
xchg
xchg
inc
inc
lea
imul
and
mov
xchg
or
std
jl
pop
push
jl
mov
ljmp
test
xchg
jb
inc
pop
fs
jnp
ret
lods
aam
dec
or
pslld
and
cmc
std
jle
out
adc
lahf
inc
outsb
xlat
add
in
clc
mov
shll
andl
insb
xchg
cwtl
cld
jmp
es
fxam
add
lods
shr
and
sbb
mov
cltd
movsl
sbb
jmp
xchg
mov
ret
pop
pop
jp
and
pushf
mov
movsb
ret
mov
lea
out
or
mov
stos
int
sbb
adc
sub
jmp
and
xchg
gs
fildl
data16
int
enter
lods
mov
add
inc
mov
fiaddl
jae
jae
movsl
xchg
mov
call
or
sbb
out
xchg
mov
loop
call
or
pop
sub
fldl
push
sub
push
aaa
leave
std
hlt
jne
or
shl
add
mov
aam
pushl
sub
dec
xchg
xor
mov
leave
jge
push
xchg
add
shlb
mov
imul
rorb
mov
sub
scas
push
push
mov
sbb
lea
orl
stos
add
xchg
mov
jno
fwait
aad
mov
jecxz
es
test
ds
loop
lret
add
pop
lret
sbb
mov
mov
jmp
xor
xor
sbb
mov
aas
mov
or
xlat
je
mov
clc
imul
fcmove
ja
out
sti
das
and
mov
jbe
pusha
movsl
sub
roll
call
pop
sarb
and
mov
loopne
push
pop
xchg
pop
sub
and
fldl2e
fsubp
aam
xchg
mov
daa
and
out
scas
xchg
push
xchg
outsl
iret
daa
and
leave
out
mov
ret
sub
pop
lea
ljmp
movsl
and
cli
pop
int3
inc
ljmp
pop
sub
gs
mov
cld
jmp
test
adc
adc
lea
mov
insl
in
lea
popl
in
mov
adc
mov
xchg
mov
mov
aaa
sub
outsl
jge
repnz
test
testl
repnz
test
pop
cmp
inc
mov
imul
cmpsb
rorl
insl
loopne
fcoml
cmpsl
or
es
call
in
imulb
into
or
aad
fsubs
mov
les
cmp
setno
and
or
pop
mov
sbb
dec
add
shll
arpl
xlat
je
mov
xor
loop
int3
and
jmp
xchg
mov
lahf
outsl
out
and
mov
xor
xchg
jnp
lea
pop
popl
mov
js
lret
xlat
ljmp
or
jg
sbb
lock
mov
sbb
add
cmp
pop
shll
in
fcoml
popa
jmp
je
je
xor
add
scas
sub
push
stc
test
popf
aaa
inc
adc
mov
mov
testl
inc
inc
ret
in
mov
mov
enter
adc
daa
and
sbb
stos
sahf
lea
scas
xor
push
subl
jo
mov
nop
jo
or
mov
or
clc
outsb
mov
lahf
sbb
xor
adc
mov
mov
pop
cmp
ja
mov
sahf
pop
cmp
iret
rcrb
cmc
or
rolb
icebp
fidivl
jge
popa
push
xchg
cwtl
adc
flds
sbb
push
sub
scas
mov
mov
fstp
xor
or
dec
and
xchg
cmp
mov
shrl
iret
call
adc
jmp
or
movsl
cmp
cltd
cmp
xor
push
cmp
and
popl
mov
popl
push
stc
std
sub
xchg
mov
pushw
call
push
les
pop
dec
sahf
or
cmp
mov
std
inc
inc
fisubl
lea
cli
lea
movsl
sub
mov
sbb
shlb
jecxz
imul
fnsave
shrb
lret
roll
xor
xchg
testl
inc
int3
jp
pop
gs
incb
lcall
clc
mov
shl
repnz
divl
ss
push
repnz
mov
cmpsb
mov
in
mov
hlt
inc
push
sub
ljmp
xor
repz
adc
out
xchg
sbb
std
cmp
xchg
mov
mov
test
xor
mov
ret
aas
stc
and
das
jle
xchg
andl
or
dec
xor
rolb
cmc
sahf
push
lret
pushf
push
mov
outsl
mov
jmp
cmc
sub
addr16
jnp
fdivs
or
imul
push
std
xchg
cli
xchg
arpl
arpl
adc
sbb
imul
push
jg
push
ret
testl
nop
cmc
mov
mov
lcall
insb
cmc
ds
das
add
mov
or
test
pusha
loop
cli
add
and
add
inc
inc
sahf
pusha
es
fcmovnbe
cmp
xchg
test
or
xchg
lret
xchg
jo
xchg
lods
and
ret
faddl
cwtl
fistpll
pop
js
jns
pop
mov
pop
lds
ret
jmp
fisttpl
sub
lcall
or
outsb
movsb
inc
fidivl
cltd
dec
pop
push
fisubl
cmp
dec
add
xor
dec
rcll
xor
inc
addr16
std
in
jecxz
mov
test
repnz
je
popf
movsl
fs
adc
mov
aas
mov
add
pop
mov
jae
push
mov
cmc
fidivrs
push
xchg
adc
push
jno
or
xlat
sbb
andb
add
push
pop
lret
shl
repz
mov
mov
jmp
in
gs
mov
insl
sub
dec
cmp
testl
mov
mov
nop
jp
jg
cmc
cli
pop
in
xchg
mov
mov
cmp
push
xor
or
stc
dec
pop
xchg
sahf
out
inc
insl
out
push
xchg
adc
lret
bound
shll
iret
xor
cmp
adc
les
xor
add
push
popf
ret
imul
fs
push
and
je
rclb
fidivl
sub
repnz
popl
push
lods
ficomps
loopne
dec
sbb
xor
cltd
push
rcrl
ds
std
lods
pop
mov
push
or
jmp
sbbb
pop
or
mov
xchg
jmp
repnz
scas
out
test
inc
out
jl
push
decl
adc
icebp
repz
adc
lcall
push
cmc
dec
cmp
mov
xchg
clc
cmp
dec
in
add
movups
inc
mov
divl
stos
mov
sbb
rclb
dec
iret
loopne
mov
fsubrs
xchg
ds
jbe
pop
pushf
mov
sarb
cli
mov
sbb
cwtl
inc
or
fidivrs
mov
mov
enter
dec
add
out
push
jne
dec
jmp
xrelease
fdivrl
mov
cmp
std
jae
mov
sbb
stc
test
xchg
aad
lds
fisttpl
out
jne
push
rcrb
out
dec
cld
fcmovnbe
imul
add
mov
sbb
mov
jo
push
imull
pushf
stos
mov
daa
xor
fimuls
mul
enter
les
negb
es
xor
lods
push
mov
test
lock
fnstsw
daa
push
into
mov
jp
inc
push
pusha
test
loope
aas
xor
in
push
or
ror
jne
hlt
add
int3
popa
std
xchg
mov
popw
scas
add
out
and
movsb
xor
push
cmp
pop
test
sub
or
mov
fbld
rcr
ja
cli
pop
jae
adc
sub
sub
loope
fisubrl
iret
cmp
movsb
loop
loope
or
and
aam
xchg
stc
or
or
shr
sbb
adc
aaa
cmpsb
test
xchg
pop
sti
mov
sbbb
sub
nop
push
xor
fldl2t
sub
mov
inc
stc
fstps
aas
pop
int3
out
adc
adc
loope
loopne
arpl
out
push
and
movsl
or
cltd
push
inc
jmp
add
test
out
fsubrs
idiv
cmp
filds
lret
and
jae
xchg
jg
ret
mov
pop
or
dec
outsb
std
cmp
and
add
out
jno
or
xchg
mov
push
and
repnz
and
adc
loopne
sbb
int
orl
mov
scas
and
xor
xchg
pop
cmpsl
repz
cmpsb
and
adc
lods
mov
or
pop
ja
mov
in
add
jmp
inc
mov
ss
xor
sbb
ss
mov
fs
out
addb
outsl
adc
mov
aaa
mov
xor
xchg
ss
sbb
fdivl
mov
hlt
outsl
cmp
cmp
and
les
inc
iret
inc
cltd
cmpsl
push
jne
mov
push
popf
movsb
mov
or
dec
cmp
daa
sbb
add
mov
enter
sub
je
fisttpl
xor
shlb
add
xchg
in
sbb
jns
arpl
rclb
cmp
jne
lock
popf
mov
fsubrl
andb
ds
fwait
jp
int
inc
int
imul
jmp
bnd
cmp
add
xchg
fisttpll
pop
cmp
xchg
sbb
pop
fwait
out
sti
mov
imul
inc
add
mov
outsb
jle
sub
adc
and
cmp
push
sub
loope
cmpl
pop
into
jg
arpl
mov
repnz
aaa
or
jmp
sbb
xchg
adcb
ret
imul
ret
sub
sbbl
cli
fisttps
ja
jnp
iret
bound
repnz
adc
nop
jnp
mov
push
int3
popf
mov
xchg
dec
int
or
cs
jno
dec
cmovb
cmp
push
lods
shll
xor
roll
mov
pop
jl
sbb
fidivrs
xchg
xor
out
pop
in
adc
jge
int
xchg
cmovnp
ret
fwait
or
jmp
outsb
push
stc
popf
jo
cmpsl
or
push
cmp
lahf
mov
imul
add
aaa
and
pop
ss
aam
sub
std
cwtl
xchg
in
dec
push
sbb
imul
and
jl
jge
lods
inc
into
test
pop
and
mov
fisubrl
dec
negb
loope
pop
stc
nop
test
fwait
xor
xchg
inc
mov
mov
je
push
scas
xorl
or
add
inc
mov
aam
pop
xchg
jno
mov
int3
adc
sbb
sub
adc
xchg
sub
cmp
xor
xor
add
int3
es
inc
add
es
iret
or
jl
pop
jge
cmp
adc
add
addr16
testb
test
push
pop
cwtl
movsb
add
gs
dec
inc
sbb
shlb
and
fnstcw
pusha
testl
sbb
loopne
cmpsb
imul
out
mov
test
cmp
pop
out
and
stos
pop
lods
pop
cmp
negl
sub
bound
outsb
fucom
push
scas
xchg
loope
cmpsl
bound
dec
movsl
mov
sub
push
outsb
test
fldenv
sub
pop
cmp
xchg
jmp
es
cmpsl
outsb
sbb
lds
lods
fs
xchg
mov
in
dec
or
pop
xchg
aam
jp
jmp
dec
iret
nop
imul
fbstp
jbe
ds
mov
in
cmp
pop
add
or
adc
or
stos
add
mov
imul
mov
dec
into
test
push
push
cmp
or
scas
mov
push
aas
out
pop
lds
popf
ja
pop
fs
enter
push
cmpsb
xchg
pop
movsb
je
andb
or
mov
push
pop
add
out
sub
cmpsl
icebp
and
sti
xchg
scas
sub
dec
dec
dec
pop
mov
inc
out
in
dec
push
inc
fiadds
pop
cmp
in
mov
jno
xor
pop
arpl
adc
mov
and
dec
dec
movsb
iret
sub
adc
jg
pusha
out
out
xchg
outsl
ss
imul
jg
jae
cltd
adc
sub
mov
mov
xor
cmp
sbb
or
outsb
mov
pusha
out
and
sub
mov
scas
or
test
cmp
repz
push
push
movsl
subl
cwtl
dec
jns
sbb
rolb
sbb
xchg
sub
sbb
mov
stos
loop
ljmp
xchg
sbb
es
decl
out
sub
fsubl
repz
ljmp
pop
ja
clc
jno
push
add
inc
pop
dec
popa
into
or
pop
mov
and
adc
nop
sarl
sub
inc
out
test
popl
sub
dec
ss
js
out
dec
loopne
std
orl
js
popf
push
or
jge
nop
imul
loop
rol
fisttpl
and
test
xchg
sbb
bound
pop
loop
mov
cmc
pop
adc
pusha
push
outsb
shr
cmp
popf
pushl
xchg
into
gs
xchg
lds
mov
mov
pop
adc
lock
fsubs
popl
dec
loopne
sub
pop
enter
adc
cmp
inc
cltd
shrl
jns
add
lock
inc
xor
xchg
cmpl
push
call
xchg
sub
mov
adc
addr16
repz
icebp
sbb
das
sub
popa
fstl
cmp
mov
mov
loope
mov
roll
ss
add
test
shrb
xchg
and
ja
arpl
xchg
mov
sahf
lea
cmc
jae
inc
cltd
mov
outsl
arpl
adcl
nop
push
push
popa
fsubs
fldt
testl
mov
mov
test
fnsave
jecxz
int3
mov
fs
sbb
xchg
enter
lahf
lea
insl
add
out
add
push
lods
sub
adcl
loope
mov
fwait
dec
iret
icebp
iret
sub
leave
adc
std
push
rolb
idiv
inc
cmp
mov
popa
or
push
data16
fnstcw
pop
scas
cli
sub
sbb
adc
sub
mov
push
and
jae
pop
xchg
shlb
xchg
in
data16
and
ret
pushl
xor
in
ss
stc
mov
mov
adc
movsl
mov
fdiv
pop
push
hlt
dec
test
jns
xchg
xchg
and
or
pop
inc
mov
insl
cmp
mov
cmp
adc
xchg
xchg
es
test
ret
inc
fldl
pop
mov
mov
popf
stc
dec
xchg
pop
fucom
sub
aaa
cmpsb
fimull
cli
or
jl
push
push
adcb
jl
xchg
jge
sub
xchg
xchg
inc
jno
xor
in
push
sbb
inc
insb
or
lret
cmp
dec
mov
pushf
sub
jge
inc
es
adc
loop
cmc
cld
xchg
mull
xor
pop
mov
in
enter
adc
sbb
xor
repz
das
popa
and
mov
mov
jae
cmpb
lods
in
das
addr16
fcmovne
adc
inc
xchg
cmp
loope
stc
and
mov
stos
out
cltd
or
add
test
jmp
cltd
mov
jg
xorl
out
ret
dec
adc
add
out
mov
pop
jae
adc
xchg
fistpl
xchg
in
and
jecxz
fdivs
mov
cwtl
lea
das
inc
in
mov
jge
rcrb
jle
mov
lods
cld
repz
xchg
mov
or
leave
test
mov
test
sbb
aam
add
mov
scas
cmpsb
loope
out
int
cmp
push
dec
sub
dec
inc
dec
pop
xor
addr16
cmp
out
popa
fisttpll
int
outsb
fidivs
sub
addb
xchg
aaa
mov
out
mov
cmc
ret
rcrb
cs
or
sbb
int
mov
jo
and
shr
jno
pop
mov
imul
mov
push
gs
gs
jecxz
sbb
fmuls
testb
cmc
adc
fistpll
pop
jmp
mov
in
xor
insb
rclb
or
push
pop
pop
mov
fwait
cs
mov
mov
aas
dec
mov
jbe
stc
xchg
movsb
push
mov
lea
xor
pop
andl
sbb
sahf
xor
jno
pop
jg
cmp
mov
stc
adc
fiadds
psllq
gs
add
in
cmpl
mov
add
movsl
cmp
and
inc
mov
mov
int3
jnp
pop
push
jb
sub
fiadds
mov
xchg
and
fidivl
bound
ret
jb
int3
adc
dec
push
in
cmp
jns
mov
lret
push
sbb
adc
xchg
scas
mov
sbb
inc
add
jmp
sbb
stos
subb
mov
pop
or
mov
repnz
sub
das
push
push
int
pop
iret
sub
cmp
jns
in
les
popf
xchg
push
shll
mov
hlt
cwtl
das
andl
dec
mov
dec
aad
pop
push
dec
es
hlt
sti
cmpsl
es
sub
dec
mov
push
mov
xchg
insb
roll
or
pop
stos
adc
stc
jae
ljmp
ja
nop
mov
xor
insb
mov
fs
in
and
insl
daa
icebp
sbb
adc
aam
pop
dec
mov
pop
repz
add
xor
cmpsl
pop
mov
pushf
lods
jo
mov
mov
aas
mov
iret
sub
or
xchg
rcl
hlt
aas
jp
jno
clc
adc
sbb
mov
pop
repz
xlat
jbe
and
popl
push
addl
adc
push
fnstsw
cltd
cs
fisubrs
dec
imull
sub
imul
xorl
xchg
cmpsl
jle
xchg
popf
add
pusha
add
sub
mov
jmp
pop
rcrb
mov
stc
jle
daa
ficoml
mov
push
mov
xor
xchg
call
mov
data16
jp
adc
mov
xor
and
jo
imul
sbb
adc
repz
cmp
adc
lods
jae
xchg
push
loop
in
sbb
scas
ret
outsl
dec
jbe
rol
cltd
adc
outsb
hlt
mov
nop
xchg
inc
mov
scas
pusha
inc
ret
pop
jae
testb
xchg
pop
jl
addr16
jno
icebp
cmp
fmuls
or
dec
xchg
add
add
mov
cli
stc
aas
insl
cmc
mov
iret
mul
jmp
xor
loopne
pushf
sub
fiaddl
dec
clc
and
jb
repz
popf
dec
mov
mov
arpl
adc
add
xor
fcomp
mov
xchg
jno
cmp
or
mov
mov
shrl
xchg
hlt
lea
jb
es
lods
jbe
jmp
subl
or
cwtl
arpl
mov
xor
into
sbb
lock
cmc
lods
shlb
rolb
arpl
pop
int3
lods
mov
cmp
push
push
jb
push
mov
iret
in
dec
sub
sti
sar
hlt
cmp
sbbl
scas
pop
stos
pushf
cli
sub
adc
jo
push
fstl
je
add
mov
lods
mov
mov
dec
mov
ljmp
int3
inc
in
fs
insb
aad
nop
daa
leave
sbb
mov
shlb
adc
or
mov
adc
lods
imul
int3
call
mov
fnstenv
int
add
adc
inc
inc
fnstcw
xchg
add
mov
jp
popl
sarb
test
add
push
inc
sub
fwait
pop
xsha1
cmpsb
mov
add
or
sbb
jecxz
cmp
repnz
add
out
sub
stos
and
out
or
test
call
cmp
outsl
adc
mov
pop
fnstenv
push
js
subl
jo
mov
fidivrl
mov
or
push
xchg
cwtl
sub
adc
in
dec
jae
scas
cmp
call
rcr
xchg
mov
gs
mov
mov
je
cli
xchg
sti
xor
mov
pushf
data16
daa
ds
push
cmp
sbb
clc
pop
sub
xor
call
faddl
jno
adc
bound
xor
loop
add
js
in
cmp
mov
adc
mov
mov
fnstsw
and
pop
or
dec
add
push
bound
int
insb
cmpsb
inc
fcoms
popf
and
movl
xor
pushf
cmc
movsb
cmp
mov
cmp
mov
push
push
cmpsb
pop
push
fcomip
fisttpl
jecxz
mov
fisttps
add
jno
add
xor
daa
fxch
pop
imul
sub
cmp
pop
dec
dec
rorb
inc
pop
ljmp
call
ret
adc
cltd
xor
cli
js
mov
cmpsl
rcll
pop
push
push
xchg
sub
loop
pop
sbbl
leave
cli
push
jbe
sbb
daa
dec
mov
jp
mov
fmulp
and
mov
pop
lods
or
adc
sbb
sbbb
nop
sbb
mov
sub
leave
pop
pop
loop
jge
sub
pop
rorb
and
imul
xchg
inc
in
scas
jno
loope
repz
jp
add
adc
mov
fstpl
or
xor
popf
jb
std
and
or
jne
dec
jo
gs
and
sub
pop
xchg
sbb
pop
shrl
imul
int
test
sub
rcr
pop
icebp
mov
inc
int
das
add
fisttpll
adcl
mov
sbb
push
mov
setae
lret
inc
and
pop
mov
mov
mov
xor
hlt
and
cmc
sub
jo
mov
push
jge
aas
scas
roll
push
push
or
cwtl
push
scas
push
rcll
fwait
sti
cmp
dec
mov
sbb
sub
pop
imul
ret
pop
cmp
ds
mov
roll
xchg
jb,pn
fs
roll
insb
pop
add
xor
addb
dec
xor
cmp
push
pop
call
icebp
lea
push
xchg
dec
lock
incl
cmpsb
cmp
jae
leave
fldl2t
lds
pop
and
out
jb
push
adc
in
or
add
push
or
sub
push
pop
cmp
jp
leave
dec
push
sub
mov
test
mov
stos
insb
add
or
xchg
cmpsb
sbb
rorb
jp
lods
jmp
in
sahf
push
rsm
or
ds
cld
dec
testb
jo
ds
arpl
mov
mov
mov
repz
mov
adc
push
and
mov
xchg
jno
push
mov
push
mov
lds
and
and
rorl
mov
arpl
jmp
les
pushf
cmpsl
mov
iret
pop
adc
arpl
xchg
cmp
xor
cmp
xor
cld
inc
addr16
jbe
call
leave
add
pop
sub
pop
add
or
das
add
pop
dec
inc
push
pop
cmp
dec
in
push
xchg
xlat
xchg
lret
xchg
dec
and
pop
push
cmp
out
xchg
das
in
pop
icebp
cmp
push
inc
into
or
dec
cmp
jecxz
lock
aas
xor
pop
clc
xchg
pop
scas
and
int3
mov
mov
sub
sub
scas
or
dec
cld
pop
outsl
out
mov
sbb
rcl
sbb
insl
fildll
adc
mov
out
jbe
int
cmp
sub
fsubrl
testl
test
and
add
adc
xchg
pop
out
push
jmp
pop
out
stos
mov
adc
jmp
outsb
lods
xchg
mov
aam
daa
xchg
inc
popa
out
shr
push
sbb
cs
pop
jmp
ss
lret
cli
push
icebp
mov
mov
pop
sub
adc
push
mov
sub
push
popf
xchg
fistpll
stos
cmpsl
mov
test
jmp
xchg
xchg
sub
push
or
add
jae
test
cli
xor
push
inc
fcomps
pop
ss
data16
scas
aad
or
xlat
jbe
push
imul
add
xor
adc
dec
fs
push
or
mov
sub
xchg
mov
hlt
sbb
arpl
or
mov
rcl
xor
push
out
inc
push
sub
ss
cwtl
mov
iret
and
dec
les
test
and
sbb
cld
aad
dec
cwtl
mov
into
lods
jb
sarl
ss
jne
xchg
js
cltd
adc
fistl
loope
pop
adc
push
mov
notb
cmp
or
push
add
xchg
mov
insb
sbb
sbb
or
or
xchg
addb
push
push
cmc
mov
jl
sub
jno
test
andb
jnp
ja
mov
sub
pop
dec
and
nopl
jne
and
sbb
lock
push
xchg
inc
xor
bndstx
mov
sti
push
les
jp
pusha
rcrl
lret
inc
nop
fistpll
mov
in
jge
lds
push
mov
push
mov
daa
xor
nop
jnp
fnstenv
xchg
clc
stc
cmp
idivb
int3
jbe
adc
filds
pop
jno
lock
xchg
sub
and
add
fistps
xor
ret
pop
xor
xchg
pushf
or
aaa
push
je
mov
int
out
ja
scas
addl
and
and
lods
call
and
inc
sbb
jge
add
std
imul
cmp
cmp
mov
daa
inc
and
adc
or
push
fsubrs
sub
or
pop
jnp
jo
pop
mov
jo
popa
jnp
arpl
jo
push
pop
mov
and
sahf
adc
mov
fs
scas
adc
hlt
or
ss
outsb
and
pop
cmp
ja
ret
and
movsb
mov
roll
iret
sub
xor
out
pop
push
dec
push
imul
test
cmovs
fs
sbb
jae
jno
je
lods
call
sbb
or
in
xchg
mov
test
ret
mov
shrb
aad
mov
or
push
push
icebp
clc
push
xor
loopne
pop
cwtl
mov
shrl
insb
addb
mov
ds
lret
inc
ljmp
stc
xor
aaa
fs
xchg
cmp
testb
insl
jge
ja
cs
scas
jno
popf
mov
cmp
push
xor
push
repz
loopne
daa
or
sub
in
adc
iret
data16
inc
push
in
out
push
stos
loope
pop
push
xor
push
repnz
sub
inc
fmull
pop
scas
shll
pop
jae
push
out
aas
push
sub
fidivrl
jge
int3
mov
arpl
or
xchg
cmp
cmpsb
xchg
sbb
push
cli
jl
xlat
mov
xchg
xor
pop
movsb
mov
pop
repz
lds
scas
movb
rcr
sub
mov
sub
mov
arpl
push
xorl
mov
mov
and
outsl
cli
std
xchg
out
add
push
shrb
lock
sub
mov
sub
mov
adc
lret
jo
stos
fidivrl
fs
dec
adc
cld
repz
test
inc
addr16
jns
ljmp
mov
mov
inc
iret
jno
clc
sahf
xor
adcb
pop
test
cmp
ss
dec
popa
jle
icebp
movsl
jb
sub
inc
ja
adc
test
rcrl
cmp
jae
mov
arpl
jb
daa
sub
in
inc
les
leave
mov
iret
xchg
sub
aam
call
mov
push
pop
sbb
jo
leave
lcall
popa
xchg
pop
adc
push
aad
and
mov
push
mov
mov
or
xor
fwait
push
mov
imul
ficoml
fmul
jns
mov
insb
lcall
cld
data16
add
sbb
add
or
repz
sbb
add
dec
jns
jbe
xchg
cs
cwtl
push
shlb
dec
adc
stc
dec
xor
popa
and
and
cmp
cwtl
add
and
testb
cmp
aad
pop
mov
sbb
pop
lea
enter
pop
cmp
aad
lds
aad
addr16
adc
xchg
sbb
clc
fwait
xor
adc
test
std
cmc
in
in
imul
movsb
dec
xchg
icebp
xor
fdivr
adc
fistpl
xchg
das
push
dec
fs
pop
out
sub
and
mov
or
cli
inc
sbb
out
je
fistps
arpl
sbb
xlat
jb
imul
insl
xchg
clc
addr16
sbb
push
ret
push
outsb
adc
in
and
push
push
xchg
sbb
dec
aam
ds
call
pop
rep
and
lahf
test
or
aas
mov
pop
das
scas
add
es
cmpsl
shlb
xlat
jnp
mov
int3
je
xor
lahf
xchg
or
lret
popa
mov
jg
xchg
xchg
jno
ficoml
xchg
iret
testb
call
call
sahf
dec
pop
lds
jns
lods
outsl
mov
sub
pop
mov
adc
xchg
sub
lret
scas
xorl
adcb
negl
daa
mov
scas
test
sub
int3
arpl
push
stos
sbb
jl
pop
das
lock
and
movb
inc
pop
imul
xor
lods
or
scas
add
stc
aam
imul
stos
mov
in
dec
movsl
cwtl
aad
rolb
mov
and
iret
pop
dec
rorl
and
jbe
arpl
in
jg
out
inc
mov
xor
inc
test
leave
loopne
jae
cli
or
xor
leave
or
std
push
lock
dec
push
cmpsb
xchg
shlb
iret
dec
fistl
mov
mov
insb
stc
inc
mov
jnp
cld
xchg
sbb
jae
cmpsb
mov
jne
scas
das
or
sbb
xchg
lods
jae
test
lret
dec
jbe
dec
cld
and
dec
dec
in
add
daa
pop
aam
cmp
scas
popf
lahf
fimull
imulb
test
ds
xor
fnstenv
ds
jae
jecxz
pop
xchg
cli
jne
das
sahf
popf
pop
jg
xor
mov
sahf
and
inc
mov
rolb
jle
daa
test
dec
enter
add
xchg
das
xor
push
popf
ret
lods
outsl
hlt
enter
mov
in
stos
dec
data16
je
mov
cmpsl
push
mov
mov
jge
dec
jecxz
insb
sub
fstl
and
cmp
and
test
pop
jle
out
xor
xor
dec
jecxz
xchg
in
aam
imulb
adc
out
push
adc
negl
push
sub
fwait
cs
and
mov
int3
mov
sub
push
mov
add
push
add
sub
hlt
lea
xchg
push
cmp
adc
stos
xor
popf
insb
push
sbbb
sbb
pop
testl
mov
xor
sbb
rcrb
mov
adc
orb
nop
lods
push
fcoml
push
stos
stos
xor
pop
mov
push
or
rclb
data16
cld
lock
sbb
scas
daa
cmc
repnz
popf
scas
mov
lock
nop
scas
xchg
fiadds
dec
pop
and
mov
xchg
lods
test
aaa
stc
in
cmp
ljmp
sbb
in
ljmp
iret
stc
movsb
inc
mov
or
sub
hlt
xchg
dec
lods
dec
cmp
cmp
jnp
mov
or
dec
scas
lcall
ja
loope
sbb
push
mov
andl
lahf
xor
dec
std
sbbl
pop
mov
xchg
cmpsl
cmc
mov
shrl
stc
inc
lcall
xor
in
xor
divl
inc
stos
inc
xchg
pop
push
xchg
dec
inc
repnz
int
iret
pop
mov
or
out
cld
dec
imul
repnz
pusha
mov
or
arpl
push
ljmp
pusha
cld
pop
xchg
push
pop
xor
add
mov
aad
pushf
sub
sub
jbe
mov
sbb
jg
pop
popf
jo
notb
ja
dec
stos
ficoms
jle
fsubrs
stos
das
mov
jbe
sahf
inc
pop
mov
loope
insl
inc
aaa
pop
lods
lret
adc
outsb
lds
xchg
dec
mov
fmul
fsubrs
cmpsl
popa
rcrb
subl
lods
in
pop
jno
nop
add
fisttpl
xor
je
add
dec
jb
and
outsb
push
in
inc
jns
call
sbb
sbb
std
leave
push
xor
bound
cmp
jbe
hlt
mov
sub
sbb
pop
inc
xchg
outsb
jne
iret
mov
cs
push
and
inc
push
out
lret
jg
bound
xchg
ja
aaa
mov
push
jg,pt
aam
icebp
xlat
xchg
mov
fwait
jp
mov
mov
rcrb
adc
loopne
cld
push
add
outsl
aad
inc
xchg
push
inc
xor
iret
adc
mov
pop
mov
pop
stos
inc
ljmp
push
mov
popa
dec
adc
movsb
ss
cmp
jnp
iret
mov
aad
jg
arpl
sbb
mov
xor
idivl
fimuls
popa
loop
push
lea
out
adc
popa
fdivrl
mov
outsl
inc
mov
js
push
jnp
les
sub
pop
add
mov
cld
xchg
in
sub
pop
inc
jge
add
push
lods
mov
push
jb
loop
xchg
xor
sbb
movsb
aas
mov
ja
iret
fadd
pushf
cld
inc
xor
outsl
shrb
pop
scas
lds
push
mov
adc
int
mov
xchg
cs
imul
jnp
jle
scas
push
rcll
repz
cs
sbb
cld
lods
push
out
fldl
xchg
dec
pop
mov
popa
enter
scas
jp
and
insb
lret
xchg
stos
es
loop
pushf
xlat
test
jo
adc
sub
inc
pop
jb
pop
stc
xchg
lods
aas
adc
push
fidivl
inc
mov
inc
testb
push
cmp
push
and
cmp
cmpsl
jns,pt
rol
xor
xlat
or
scas
sub
and
gs
cs
or
and
pop
in
dec
hlt
es
jne
adc
lds
xchg
lcall
cmp
test
pop
mov
sub
inc
inc
or
nop
xor
cmpb
pop
jle
cmp
sbb
jle
jo
jae
fs
sub
add
sarb
or
dec
adc
adc
inc
pop
movsb
cmp
add
test
jp
jo
addr16
scas
roll
inc
mov
sbb
stos
arpl
fistl
or
xor
out
gs
pop
inc
test
out
push
mov
repz
jecxz
fdivrl
dec
lea
add
test
jg
stos
movsl
mov
inc
pop
nop
jo
shlb
lret
sub
add
push
mov
mov
mov
and
xchg
jb
add
insl
loopne
xchg
cmpsb
insl
sub
mov
nop
sub
in
mov
rolb
lods
inc
dec
bound
sbb
pop
adc
pop
mov
ljmp
out
pop
xchg
frstor
dec
add
jno
jbe
dec
subl
and
mov
cmp
sti
ret
dec
pop
mov
adc
pop
pusha
xor
lods
faddl
nop
xchg
or
dec
mov
mov
mov
in
aad
cmpsb
les
dec
mov
test
dec
jg
jge
xchg
mov
pop
test
into
and
xor
and
leave
cmp
cli
push
push
ljmp
call
bound
and
xor
inc
std
push
mov
lahf
lret
or
cmp
outsb
xchg
xor
fwait
mov
int
aaa
mov
dec
jmp
loop
add
sub
add
xchg
into
mov
sbb
sub
xchg
pop
push
gs
scas
sbb
mov
mov
push
push
movsl
add
mov
cmpsb
sub
mov
jb
add
mov
dec
inc
lcall
mov
filds
negl
pop
add
sbb
test
push
std
dec
leave
jnp
cli
outsl
jl
dec
pop
daa
inc
stc
cmp
mov
ljmp
xchg
adc
enter
lods
rorb
mov
ja
ja
ret
mov
push
or
push
dec
push
adc
adcl
mov
jmp
stos
test
movsb
push
add
enter
sub
daa
sbb
lcall
jp
pop
xchg
in
and
mov
out
jbe
sub
jb
fisubs
dec
jnp
std
push
adc
mov
test
mov
cli
xchg
fidivs
sub
push
test
aaa
and
mov
enter
in
pusha
fdiv
inc
jae
pop
iret
mov
push
mov
inc
hlt
dec
or
dec
adc
sub
shr
fs
and
cmp
bound
sbb
negl
sub
stc
xor
addr16
mov
lahf
xchg
les
inc
inc
sbb
jge
aam
cld
loopne
test
pop
sub
mov
push
sbb
xlat
mov
outsb
fdivs
loope
outsb
cld
pop
xor
push
jg
add
jg
cmpsb
mov
leave
vunpckhps
mov
push
push
cmp
add
and
xchg
fs
scas
mov
iret
adc
push
hlt
push
xchg
cltd
xor
cltd
ljmp
xchg
call
aad
stc
jne
inc
in
mov
xchg
ret
mull
shll
ja
rcll
cwtl
in
or
xlat
mov
mov
add
xor
cli
adcl
add
xchg
pop
stos
jle
lods
inc
fildll
xchg
dec
pop
mov
lds
dec
jmp
aaa
cmp
lods
cmp
loope
gs
sbb
xchg
movsl
xchg
std
mov
fwait
fs
addr16
mov
inc
pop
or
cmp
mov
jg
inc
icebp
push
pop
mov
leave
push
mov
ret
and
test
js
xchg
scas
xchg
fistps
or
mov
repz
std
shrl
les
jge
lret
pop
mov
sbb
mov
ja
inc
xlat
sbb
fnstcw
jne
leave
je
pop
xor
rcll
and
cmp
jecxz
push
adc
or
and
pop
jp
dec
and
or
mov
mov
loopne
pop
fucomp
andb
mov
pusha
lret
mov
enter
jae
pop
movsl
jb
lds
int3
pop
inc
decb
jecxz
sbb
sub
lret
repnz
xor
test
jmp
sub
push
or
je
iret
rcrb
int
xchg
cmpsl
inc
or
push
stc
fs
xchg
jle
mov
inc
xchg
stos
pusha
das
jle
pusha
xorl
clc
xchg
inc
cltd
dec
xchg
sti
cld
xchg
icebp
das
sub
and
push
sahf
cmc
mov
sub
cmpsb
push
ret
dec
cmp
lcall
push
lds
fs
lret
lret
out
jg
es
int
imul
in
add
push
pusha
mov
push
jo
aam
stc
std
je
pop
cmpsb
ficoml
bound
pop
xor
test
movsb
xchg
mov
stos
inc
pop
mov
int
jge
loop
add
cmp
pop
es
mov
or
lods
dec
cmp
shrb
out
inc
clc
pushf
inc
fisttps
or
adc
dec
inc
xchg
dec
push
sub
pop
fidivs
out
push
push
ljmp
fidivs
dec
hlt
jo
int3
cld
xchg
mov
pop
mov
xchg
pop
add
push
xchg
sbb
ret
push
pop
daa
lds
pop
repz
pop
xor
jnp
xor
dec
and
inc
ja
add
mov
pushf
loopne
cmpsb
in
add
cmp
adc
push
insb
mov
add
mov
fistps
mov
orb
push
pop
ss
mov
dec
loop
xchg
push
push
mov
fs
and
imul
out
bound
push
call
jecxz
aas
stos
mov
push
inc
aad
or
xor
das
mov
je
push
mov
mov
sahf
push
or
push
jmp
push
shl
xchg
je
sbb
mov
pop
cmp
lds
add
pusha
fstl
scas
repnz
in
mov
cmp
cmp
push
adc
in
ret
add
dec
push
push
movsl
cmp
iret
inc
bnd
ret
or
orl
sub
std
rcrb
pusha
xor
sub
cmp
pop
in
test
cwtl
fldcw
xchg
sbb
pop
movl
mov
popa
jnp
aas
pop
fisttpll
out
ss
mov
add
xor
ja
pop
and
inc
int
out
cltd
lret
rorb
dec
movsb
xlat
push
cwtl
hlt
outsb
shlb
pop
ja
pop
mov
lcall
add
push
outsb
mov
pop
dec
std
xor
fs
push
lods
stc
ffreep
loope
pop
mov
add
and
sbb
lods
mov
adc
sbb
and
out
cld
lcall
add
aaa
ljmp
and
cli
lret
inc
hlt
and
and
xor
cltd
inc
dec
mov
mov
mov
bound
sbbl
shlb
dec
or
push
mov
or
dec
mov
aaa
stos
pushf
pop
movsb
xchg
jnp
and
mov
call
adc
stos
int
pop
sbb
stos
jmp
mov
int3
cmpsl
and
xor
iret
cmpb
mov
test
cmc
ja
add
fbstp
ljmp
scas
leave
dec
bound
sbb
inc
cmp
add
nop
inc
cmp
xchg
std
cwtl
imul
scas
nop
aaa
mov
push
popa
jecxz
out
bound
dec
add
mov
hlt
sub
out
test
js
sub
out
xor
incb
lock
clc
or
mov
les
adc
es
jb
into
pusha
add
mov
sbb
push
xchg
or
popf
icebp
loop
sub
repz
in
scas
push
and
mov
cltd
out
xchg
sub
loop
xchg
push
loopne
nop
negb
mov
xchg
mov
or
push
jne
stc
addr16
gs
add
inc
ss
test
aam
adc
mov
sbb
and
adc
mov
inc
sub
inc
fmuls
sub
jns
pop
add
jg
jbe
ret
push
popf
jnp
mov
or
aaa
jbe
stos
push
js
hlt
adc
stos
out
mov
inc
sahf
fcoms
scas
fidivl
shlb
sti
mov
ss
and
in
shlb
dec
adc
cld
pushf
sbbl
adc
shrb
and
insb
cmp
imul
xor
xor
ret
sub
cs
jle
push
inc
fiadds
xor
xor
test
aaa
jbe
imul
or
and
push
setge
test
jns
dec
lahf
pop
inc
aam
cld
dec
lcall
mov
jno
and
aas
std
pusha
jg
mov
dec
jns
bound
pop
fidivl
enter
xor
ss
xchg
jmp
cmp
ficompl
pop
imul
sbb
adcl
lcall
jb
daa
movsb
pop
mov
mov
popf
inc
cld
adc
adc
mov
test
dec
pop
sbbl
aas
jo
mov
aas
xchg
aaa
pusha
cli
and
xorl
inc
std
test
mov
inc
pop
sub
jp,pn
in
sbb
push
mov
sbb
sahf
pop
icebp
mov
stos
fmull
jae
pop
leave
mov
shl
cmpsb
out
lea
es
adc
jae
outsb
and
jmp
mov
addb
testb
or
ljmp
jno
mov
ret
cs
es
inc
push
push
icebp
clc
cmp
adc
lcall
fidivrs
int
aam
xlat
push
test
push
jnp
sub
sub
jno
std
jecxz
cs
cmpb
movb
mov
cmpsb
mov
sahf
insl
repnz
lds
rcrb
fabs
in
aas
idivl
inc
lods
xor
addl
arpl
in
pop
shll
xchg
stos
jmp
frstor
xchg
divb
lds
negl
mov
fildl
jbe
stos
xchg
and
std
mov
cmp
push
xor
dec
xchg
sbb
bound
lods
test
scas
mov
xor
popa
lods
ret
sbb
xor
cmp
xlat
test
or
testl
fidivl
sbbb
hlt
dec
mov
jle
hlt
arpl
sub
sub
stc
mov
mov
scas
sahf
push
sbb
seto
ds
push
repz
cld
xchg
in
pop
mov
imul
test
inc
mov
stos
cmpps
sbb
sub
or
lock
push
pop
test
mov
mov
imul
in
jg
inc
mov
pop
and
es
dec
push
gs
mov
cmp
push
push
jl
ljmp
xor
outsl
add
jo
jae
xchg
adc
icebp
cmp
jle
int3
dec
lods
sbb
repnz
sbb
ds
jae
cmc
or
jno
xor
repz
sub
mov
fisubs
mov
std
cmp
lcall
leave
les
emms
push
inc
jb
and
stos
or
fucomp
add
sub
loope
jno
das
mov
mov
notb
test
mov
sub
test
xchg
and
pop
pushf
sub
sti
rorb
ljmp
sti
cmp
sbb
mov
adc
pop
xor
or
pushl
leave
xor
inc
pop
shll
mov
mov
jnp
mov
xchg
lret
call
or
gs
add
mov
xor
dec
push
lret
lahf
stos
inc
repz
add
in
insb
dec
fdivl
leave
cmovne
xor
ja
or
cli
jne
movsl
xchg
sub
xor
xchg
or
mov
repz
xchg
daa
mov
xlat
flds
insl
push
inc
shl
mov
shrl
popa
xchg
je
andb
mov
jnp
and
or
cmp
mov
adc
pop
push
iret
fildl
mov
clc
and
jg
cld
jle
stc
lcall
cmp
pop
xlat
mov
mov
mov
push
in
push
dec
adc
sub
cltd
daa
scas
dec
bnd
lcall
aas
ds
dec
lock
or
sbb
sub
or
out
shlb
add
push
xchg
mov
dec
jecxz
incl
pop
cs
mov
mov
mov
mov
mov
sub
popa
fnstenv
lahf
fstpt
xor
jecxz
test
rol
cmpsl
cs
in
mov
adc
dec
mov
xor
aaa
lahf
int3
aam
pop
xchg
ljmp
scas
pop
nop
dec
add
enter
pop
mov
int3
mov
cld
rcrl
xchg
sub
call
or
add
push
adc
fadds
outsb
sub
pop
push
cmp
pop
insl
out
daa
test
lret
jge
inc
xchg
add
mov
adc
lcall
xor
std
adc
inc
xor
sub
loope
ret
cld
xchg
mov
dec
mov
je
cmp
pop
fwait
mov
add
xchg
push
pop
repz
pop
loope
leave
dec
loopne
mov
test
push
sbb
stos
jle
test
mov
fwait
push
xchg
ljmp
xor
jg
stos
xor
es
adc
inc
xor
in
pop
fcmovne
mov
mov
sub
lahf
jne
shl
adc
negb
daa
scas
rcrb
cwtl
mov
or
dec
jecxz
xchg
mov
xor
or
xchg
sub
pop
mov
mov
imul
sub
out
out
sbb
push
icebp
add
das
xor
mov
movsl
jp
loop
jg,pt
inc
rcl
mov
cmp
adc
imull
and
cwtl
imul
jns
mov
mov
push
mov
sbb
andb
dec
mov
insb
cmp
add
std
fisttpl
sbb
lds
repz
mov
mov
lds
ljmp
idivl
mov
mov
sbb
sbb
jge
in
imul
sbb
and
fsubr
daa
inc
inc
int
in
push
std
cmp
push
popf
push
call
sbb
call
int3
scas
pop
imul
lcall
or
stc
or
ds
dec
push
iret
orb
xchg
call
or
sbb
jne
inc
lret
jne
fldenv
sbb
jmp
int
adc
sti
fimull
mov
data16
dec
movsb
addr16
xchg
insb
scas
push
inc
in
iret
data16
in
cmp
fldt
dec
lods
shlb
mov
bound
adc
jl
mov
add
mov
lea
leave
addr16
and
inc
sbb
push
pop
call
mov
or
and
adc
les
inc
repnz
lods
bound
sbb
cmp
mov
jb
xor
push
in
sbb
sub
jp
mov
mov
mov
dec
xor
mov
lock
mov
data16
mov
sbb
pop
xchg
mov
test
mov
mov
rorl
cltd
aaa
jg
inc
idiv
lods
insb
lock
and
pop
xlat
cmp
sub
pop
sub
nop
es
dec
inc
arpl
test
add
loop
xlat
and
sbb
dec
imul
sub
lahf
cmc
cmp
adc
mov
lock
fldl2t
enter
sbbl
mov
dec
pop
imul
andb
shlb
jne
fwait
jno
ror
imul
lret
daa
les
mov
loop,pt
loopne
pop
and
sbb
fs
mov
test
mov
cmp
sub
push
repz
cwtl
mov
insl
and
dec
and
pop
and
int3
lea
pop
xchg
dec
test
test
in
xor
adc
push
push
aas
dec
jnp
cld
scas
mov
nop
dec
es
leave
pusha
int3
repnz
pop
test
int3
xor
xchg
dec
jno
out
lods
mov
fiaddl
out
adc
adc
in
cmp
mov
shrl
testl
iret
fistpl
pop
cs
dec
push
cs
or
inc
mov
bound
push
cmc
cmp
sbb
call
xor
fidivl
fsubrl
mov
sahf
push
jbe
cmp
hlt
xchg
inc
leave
xor
mov
pop
jp
inc
call
sub
das
and
add
xor
test
ficoml
pop
out
mov
pop
in
sbb
sub
cmc
jno
aas
jno
cli
push
push
cmp
jno
pop
enter
mov
pop
cwtl
pop
cmp
aaa
push
iret
xorl
push
push
mov
int3
mov
xor
test
fisubs
out
scas
mov
pop
and
xchg
sub
add
pop
dec
add
leave
lahf
imul
cltd
pop
scas
xlat
data16
dec
or
fs
mov
stos
mov
push
xor
outsb
push
aaa
addb
lea
push
lcall
dec
cmp
or
loopne
loop
dec
jecxz
or
loope
sahf
out
xchg
sbb
and
ja
pop
test
outsb
add
adc
fadd
push
push
jg
jle
xor
mov
nop
jnp
out
xor
fcoms
loop
xchg
mov
decb
mov
sahf
or
stos
int3
jnp
xor
mov
push
shlb
nop
imul
ss
movsl
xchg
out
cmc
push
sub
das
outsb
jl
loopne
sub
mov
les
sub
dec
iret
enter
and
aad
cmc
fisubrl
cld
cmpb
bound
jmp
fisubl
lret
in
std
sbb
sti
dec
out
les
or
mov
lods
pop
pop
out
push
cmpsl
ds
and
inc
or
jbe
push
test
xchg
movsb
and
inc
sub
dec
mov
cmp
sbbl
loope
lahf
ss
mov
mov
das
dec
and
loopne
mov
fnstcw
add
inc
pop
repz
flds
jp
xchg
mov
out
mov
dec
mov
or
adc
and
inc
sbb
sbb
lea
insb
sub
out
push
dec
ss
pop
insl
sbb
jecxz
test
mov
mov
push
sub
and
out
sbb
mov
lds
mov
adc
pop
lret
dec
test
and
es
cmp
and
aam
sbb
dec
js
push
jecxz
cmp
icebp
scas
sbbb
mov
fsubrs
in
lods
xchg
in
loop
push
fwait
add
aaa
ss
data16
ss
aaa
iret
xchg
push
test
jo
xor
in
mov
push
std
fidivl
jnp
sbb
mov
xor
push
lds
or
push
mov
pop
cmpsl
rcr
jb
cmc
xchg
loop
scas
imull
js
imul
mov
lret
test
mov
lods
jb
lahf
aaa
lea
jnp
fwait
jb
sub
fcom
cmc
stc
or
mull
scas
hlt
aad
es
xlat
scas
hlt
testl
mov
sub
fwait
push
pop
jmp
mov
gs
add
push
or
mov
jle
popa
or
sub
pop
cmpsl
out
and
push
mov
sarb
aam
sub
ret
lea
out
pop
cmp
push
xchg
mov
repz
and
adc
loopne
js
ljmp
loop
jns
sbb
push
aam
ret
xor
aad
ret
shl
cli
sub
sbb
dec
pop
divb
sbb
sarl
inc
mov
jp
pop
mov
inc
pusha
cmp
mov
out
or
jnp
pop
jno
ret
mov
push
cwtl
xchg
inc
jge
inc
jbe
push
jmp
add
out
xchg
xchg
lea
jno
rcrl
cs
ret
into
cli
xchg
add
mov
cmp
cmp
cltd
jge
dec
je
mov
push
lea
inc
adc
adcl
cmpsl
frstor
data16
fidivs
dec
decb
dec
jg
xchg
mov
in
pop
into
pop
sbb
xor
aad
gs
cmpsl
pop
add
mov
adc
insb
aad
js
push
push
outsb
dec
mov
inc
mov
sbb
dec
dec
popf
and
or
push
out
pop
mov
int
xchg
and
add
imul
jne
fimuls
ljmp
sbbb
mov
movsb
pop
mov
jecxz
rcl
sbb
cmp
adc
pushf
lret
in
addr16
cli
fldpi
imul
fistps
test
mov
loope
imul
jecxz
pop
xchg
lods
add
xchg
mov
dec
push
mov
jge
cmp
aad
xorl
pop
mov
or
mov
aam
hlt
push
fiaddl
mov
jmp
push
mov
popf
xor
sub
add
fcmovbe
pop
fnsave
xchg
cmp
fdiv
movsl
in
inc
testl
pop
test
and
cmp
in
adc
adcb
or
fistl
int
xchg
out
sti
sub
rorb
mov
in
movsb
push
push
mov
or
pushf
ja
sub
push
dec
fcmove
jno
in
add
lds
xchg
sub
das
outsl
test
out
xchg
sbb
and
ret
sub
lret
mov
fnstsw
inc
cmp
decb
pop
xchg
cmp
das
push
push
and
adc
test
mov
add
pop
daa
jns
push
jmp
sub
xchg
mov
xor
pushf
mov
hlt
icebp
test
mov
and
or
sbb
xor
jecxz
lods
aaa
and
add
inc
jmp
and
mov
mov
movsl
cmpsb
aas
add
dec
dec
sub
and
dec
clc
push
cmc
pop
popf
out
das
inc
clc
or
pop
mov
sub
stos
inc
imul
cmc
sbb
rcrb
mov
pop
xchg
jle
imulb
sti
mov
mov
arpl
push
cmp
aam
std
jmp
insl
mov
lods
fdivrp
and
call
mov
ror
jne
insb
arpl
les
stos
dec
dec
sub
mov
push
push
fwait
jns
sub
popl
adc
pop
inc
cs
mov
inc
cmp
jge
mov
stos
jecxz
into
iret
dec
push
xchg
dec
mov
mov
sub
push
cmp
mov
cmp
push
lods
dec
js
fists
sub
push
imul
ret
iret
into
pop
jle
mov
xchg
dec
mov
dec
lahf
jp
out
add
push
ljmp
out
jle
imul
pop
jg
je,pn
mov
inc
test
push
cmc
jns
xor
and
inc
xlat
insl
xchg
mov
cwtl
movsb
xlat
push
push
mov
fcomps
sub
ds
cmp
es
adc
jg
cli
xchg
push
ds
xor
lods
mov
movsl
xor
pop
adc
xchg
fildll
sbbb
mov
adc
mov
imul
loop
jecxz
pop
adc
loopne
sub
pusha
fnsave
sbb
mov
dec
xor
mov
add
leave
sub
adc
xor
test
push
sub
nop
jb
aad
movntq
mov
daa
ljmp
jg
xlat
or
mov
stc
sbb
xorb
push
xchg
mov
mov
adc
roll
xchg
pop
aad
popf
mov
in
js
xor
bound
sbb
cmp
daa
inc
jle
cwtl
cmp
shlb
cmp
stc
jnp
xor
pop
pop
lock
sub
xor
mov
cmp
rcrl
and
dec
or
jle
int3
inc
sti
sbb
sbb
jno
mov
clc
test
mov
outsl
cld
call
fstpt
fwait
jno
int
or
loope
es
cmpsb
divl
mov
mov
scas
lods
popf
cmp
into
into
aas
repz
jo
cltd
pusha
mov
and
xor
scas
leave
push
push
in
push
out
outsl
lret
dec
in
cmp
jmp
push
add
or
xor
fstl
xlat
loopne
mov
mov
sub
xchg
dec
cmp
scas
andl
aas
iret
mov
push
xor
std
bound
xlat
cmp
mov
insl
xchg
out
jge
cs
aaa
aad
sahf
adc
fwait
mov
hlt
mov
xchg
popa
cld
and
mov
add
xlat
sub
sub
dec
test
xorb
into
mov
into
gs
test
loopne
insb
popf
inc
mov
fnsave
movsb
cmp
fimuls
sbb
roll
sbb
and
mov
movsl
lret
js
add
dec
inc
adcl
xchg
dec
sub
jge
pusha
inc
mov
mov
inc
inc
dec
and
cmp
sub
add
lds
rol
push
shrb
or
cmp
add
loope
leave
popf
jmp
je
out
int
lret
fildll
popf
push
adc
jno
inc
push
inc
sub
popa
insl
adc
hlt
or
sub
imul
pop
dec
ja
icebp
jge
push
orb
scas
stos
mov
cmp
outsl
ljmp
outsb
pop
xor
sub
lods
adc
jae
cmp
ljmp
pop
mov
and
pop
lea
repnz
push
stos
fmuls
dec
in
fdivr
mov
push
cmpsb
in
stos
inc
sahf
addb
add
mov
iret
jecxz
mov
push
mov
les
andl
pop
and
adcl
in
jecxz
dec
lock
fstl
sub
call
mov
stos
out
pop
xor
imul
push
sub
ret
jecxz
dec
dec
stc
mov
dec
sub
pop
in
dec
mov
inc
xor
lds
stos
or
push
dec
xor
xor
cmp
sub
pop
sbb
ljmp
stos
dec
and
xchg
dec
cwtl
movsb
aaa
and
out
xchg
cmc
push
inc
fisttpl
cwtl
xlat
cmp
inc
popa
mov
lds
add
xchg
clc
outsl
stos
lret
fstpl
nop
adc
icebp
sbb
enter
add
jmp
clc
dec
lcall
lods
sub
or
dec
enter
jl
fwait
pop
inc
daa
or
mov
xor
jmp
dec
inc
sub
mov
push
out
les
cmp
push
fidivrs
xchg
imul
lock
jnp
pop
ret
mov
das
pop
adc
jo
fdivrs
mov
xor
sbb
dec
cmp
cltd
dec
dec
push
outsl
insl
inc
sub
cmp
testb
push
jg
fldcw
push
mov
lods
test
into
sub
or
and
inc
add
xchg
outsb
shlb
dec
mov
pop
mov
leave
jo
ret
jns
mov
fwait
push
pop
jmp
and
sub
call
xlat
pop
rcl
ret
pop
scas
add
dec
pop
mov
cmp
int
jne
dec
mov
push
rorb
pop
cmp
js
pop
mov
lret
mov
icebp
or
fwait
daa
jmp
jb
pop
cmp
pop
icebp
jle
dec
mov
or
add
inc
pop
jb
sub
mov
and
shlb
addr16
insl
sahf
jno
pop
jae
fsubr
mov
loopne
xor
aaa
into
int
mov
xorb
shlb
push
repnz
iret
sub
dec
cmp
test
dec
nopl
push
jne
movsl
aas
in
pop
jnp
test
ret
pop
mov
idivl
push
mov
inc
not
mov
pop
sbbl
testb
xor
jmp
or
mov
sub
xor
cmpsl
add
push
hlt
mov
sbb
lcall
jne
cmpsl
addr16
jns
inc
fwait
out
aam
sbb
fs
arpl
outsl
pop
out
int3
fucomp
lret
fnstenv
mov
mov
fstpl
push
add
divb
and
sub
push
mov
push
cmp
testb
call
cmp
negb
and
sbb
cmpsb
xor
jns
out
loopne
push
mov
test
ret
mov
and
pop
mov
adc
ds
addr16
mov
iret
jo
add
out
push
jno
fisttpll
sbb
jecxz
dec
sub
adc
aam
ja
xchg
sbbb
xor
jl
add
test
ret
and
test
mulb
in
xchg
rcrl
sbb
jne
arpl
push
jp
jo
out
pop
xchg
insl
or
rclb
dec
ret
cmp
xchg
or
jbe
sub
nop
sub
aas
cmp
mov
out
or
inc
outsb
outsl
sub
or
das
mov
xchg
or
sarl
and
adc
cltd
and
shll
cltd
xor
out
faddl
or
out
push
mov
dec
ja
nop
aad
dec
pop
mov
loopne
outsb
lahf
jmp
sbb
sub
rol
adc
cmp
cmpsb
inc
pop
ret
mov
cwtl
and
add
je
fmul
or
pop
dec
mov
loope
adcb
ja
subb
insb
mov
loop
dec
add
lds
sahf
sbb
rol
sbb
int
cmp
jmp
daa
scas
shll
xchg
cmp
xchg
push
xor
call
or
in
std
cmp
fidivrl
or
push
xchg
inc
shlb
lods
adc
in
fisttps
mov
stos
jle
inc
cs
and
or
mov
dec
test
xor
outsl
or
pop
sub
frstor
jo
cmp
in
in
cmpsl
jae
scas
lahf
push
xor
das
cmp
popa
or
dec
adc
mov
push
push
inc
mov
jno
jmp
cmp
clc
sahf
cltd
mov
adc
sbb
or
es
cmpsl
lods
fists
addr16
mov
stc
hlt
hlt
nop
psadbw
lods
and
sbb
clc
cs
xchg
outsl
push
leave
outsb
bswap
scas
cs
mov
lds
fadd
lea
fldenv
xlat
or
clc
aam
sub
mov
sub
dec
bound
push
xor
add
adc
test
mov
fnstsw
stc
pop
mov
lea
scas
fldt
fidivl
sub
loop
pop
jg
adc
sti
mov
jle
and
cs
pop
pop
xor
push
inc
cmp
dec
mov
ss
jns
sub
pushf
mov
movsl
ds
and
pop
insb
sub
xchg
jmp
xchg
mov
inc
lcall
or
inc
fsubs
or
push
or
dec
dec
leave
ds
cmc
out
lahf
dec
fiadds
or
and
xchg
pop
leave
mov
pop
inc
lahf
es
cmp
mov
test
xchg
sbb
sahf
mov
mov
dec
imul
mov
lds
fcmovnb
pop
loope
popf
lcall
pop
repnz
cli
js
and
mov
movsb
mov
lcall
sub
cltd
std
mov
add
sbb
add
das
jb
mov
dec
sbb
sub
test
out
cmpsl
mov
rcrl
pop
sub
ja
xchg
ja
mov
es
dec
or
sub
sbb
mov
cs
and
repnz
shlb
push
data16
ret
add
andb
mov
adc
push
xor
enter
push
jo
inc
inc
test
mov
sub
jge
xchg
je
sahf
mov
sbb
repz
jmp
pop
mov
mov
aad
dec
ret
addr16
aad
push
subl
push
sub
push
outsb
push
dec
pop
fimull
les
xchg
jae
mov
mov
mov
repz
mov
cmp
jno
xor
rclb
push
loop
inc
fbstp
loope
pop
imull
sub
aaa
dec
test
mov
into
popf
data16
cmp
cs
and
push
subb
adc
mov
adc
cmp
repnz
gs
je
jmp
sub
sbbl
jo
cmpb
xchg
test
or
pop
xor
cwtl
jecxz
or
mov
add
sub
sti
pop
shl
add
mov
mov
or
lock
and
icebp
adc
test
mov
pop
adc
popf
and
lret
mov
clc
dec
in
and
test
clc
shrl
scas
in
and
jno
out
arpl
loope
push
stos
xchg
push
jecxz
dec
adc
rolb
mov
aas
pop
jne
sbb
and
shlb
orl
cmp
test
or
les
shl
movsb
rcll
push
dec
jne
setae
movsb
ljmp
push
mov
std
xchg
sahf
xor
hlt
mov
mov
test
test
mov
fcmovnb
nop
aaa
ja
jle
xor
cmp
dec
mov
cmp
scas
stc
push
in
mov
lds
mov
or
lahf
xor
fldz
call
inc
in
inc
or
mov
sub
rorl
mov
ss
pop
pop
pushf
inc
stc
add
sarl
pop
push
inc
mov
inc
scas
mov
test
pop
imul
mov
push
fwait
adc
push
repz
js
inc
icebp
pop
sbb
in
xchg
xrelease
dec
mov
and
push
cwtl
jnp
mov
mov
mov
inc
rcrw
js
inc
shrl
loop
mov
inc
jmp
jb
lock
out
notl
mov
mov
adc
shr
imulb
xlat
lock
xlat
sub
sahf
or
xchg
xor
pop
inc
int
xor
pop
cmp
pusha
dec
adc
je
dec
filds
icebp
fnstenv
loopne
push
xlat
xor
ficoms
jle
lock
out
sbb
shll
adc
cmpl
shrb
icebp
rcrl
jnp
xor
lds
add
outsb
cld
pop
fxch
xlat
pop
loope
sahf
dec
add
adc
mov
mov
packssdw
int3
push
cmpsl
addb
cmc
lods
mov
ljmp
hlt
adc
lds
xor
add
or
movsl
imul
rolb
cmp
pop
lcall
repz
xchg
mov
subl
inc
pop
jno
add
cmpsl
es
mov
inc
sub
std
inc
fnstsw
pop
xor
sbb
scas
int3
popf
jnp
lret
rorb
or
or
cli
push
jno
subl
mov
sbb
inc
xchg
push
lret
cmp
rol
push
cmp
push
cmc
mov
je
or
xchg
adc
and
or
fnstenv
push
mov
inc
pusha
rcrl
fdivs
cmp
outsl
push
push
push
out
test
mov
dec
pop
ja
jle
ss
mov
xchg
ja
fcompl
push
faddl
mov
push
test
mov
sbbl
adc
push
lahf
sbb
mov
imul
in
sbbl
nop
movsb
je
cs
mov
mov
jg
int3
lds
jp
aam
insb
inc
ss
nop
movsl
repnz
pusha
nop
es
push
stos
ficomps
sahf
cmp
adc
mov
into
repz
out
fidivl
int
adc
mov
mov
stc
es
call
pushf
dec
pop
add
arpl
rolb
sti
ljmp
fidivs
adc
lcall
push
ficompl
mov
xchg
imul
popa
add
pushf
xor
xchg
das
sub
mov
gs
pushf
jno
idivb
or
xchg
test
out
rorl
push
fbld
mov
fcoms
or
js
mov
cmp
enter
test
call
mov
jno
mov
or
lret
push
test
push
call
sub
cs
imull
mov
dec
mov
cs
mov
iret
cmpsl
jecxz
aam
addr16
ss
add
int3
lcall
mov
aas
outsb
daa
xchg
xchg
mov
sbb
push
cmpsb
cmp
mov
fmulp
popa
add
test
and
xor
xor
xchg
lret
sub
xchg
jge,pt
mov
push
or
sbb
jmp
test
cmp
imul
pop
push
jle
mov
int
mov
js
pop
xor
scas
ret
jp
push
cltd
and
std
inc
mov
testl
and
iret
mov
out
fsubrp
std
push
je
xor
fs
mov
fistpl
add
stc
pop
hlt
inc
aas
lods
cmp
push
std
jne
inc
std
lcall
test
pop
lea
out
push
movsl
mov
push
pop
push
lahf
notl
outsb
stc
xchg
mov
sub
imul
js
loopne
push
lret
mov
pop
cltd
xor
push
sbb
add
pop
or
imul
stos
add
mov
mov
in
fisubl
mov
xlat
popf
pop
push
iret
int
push
push
push
mov
mov
adc
push
pop
pushf
add
adc
int
cld
xchg
pop
addl
cld
push
bound
dec
push
rcr
or
daa
dec
pushf
aaa
push
mov
mov
popa
jbe
rolb
add
out
ss
jnp
push
adcb
gs
push
pop
in
mov
lret
cmp
mov
lret
sub
jp
mov
inc
pop
pop
push
rol
mov
stc
test
daa
inc
adc
pop
in
xchg
pop
out
jecxz
jmp
dec
mov
or
mov
add
shll
and
push
hlt
sbb
pushf
and
sti
call
jge
aad
push
inc
imul
dec
out
mov
or
mov
call
mov
and
adc
mov
xor
stos
and
add
mov
imul
subb
pop
pop
gs
jecxz
sub
add
dec
lods
cld
imul
push
sub
les
fcmovne
sub
xor
and
insb
add
add
clc
mov
lret
pop
pop
lret
nop
xchg
mov
push
sub
or
insb
in
sbb
cmp
pushf
ljmp
scas
sub
add
mov
xor
inc
std
cmp
sub
cli
int3
inc
add
mov
or
or
xor
adc
dec
cwtl
jmp
fists
mov
sbb
xchg
adc
shll
mov
cwtl
and
or
into
ss
mov
inc
out
xor
xor
repnz
xor
xor
mov
mov
jne
std
dec
lds
scas
add
push
dec
dec
lods
stos
lea
xchg
dec
idivb
dec
call
cmp
nop
sbb
pusha
testl
jle
mov
loope
push
outsl
mov
fbstp
jnp
arpl
outsb
push
pop
pop
push
into
imul
push
dec
push
aam
bound
into
orb
mov
mov
popa
lods
and
push
int
add
or
adc
std
or
mov
in
int3
movsb
xchg
pop
int
in
decl
sti
sub
test
insb
mov
popf
jo
ljmp
jp
mov
mov
sub
sarl
or
pop
adc
adc
sub
mov
or
push
xor
inc
cmp
mov
arpl
rcr
int
push
inc
xor
xor
add
lret
jb
fcoms
adc
cmp
push
jne
pop
movsb
add
iret
hlt
mov
test
pop
cmc
sbb
jl
or
pop
add
push
aas
push
leave
inc
fsqrt
addr16
pop
fidivrl
mov
xchg
and
stc
scas
pushl
xchg
inc
stc
pop
in
int
push
inc
sbb
add
mov
dec
pop
stc
aad
cmp
decl
daa
aam
in
aas
insb
test
cld
push
insl
mov
mov
xor
loop
cltd
rcrl
jmp
adc
sub
mov
add
push
xor
int3
xor
xchg
test
adc
xchg
ljmp
xor
imul
inc
repz
stos
test
sbb
sbb
nop
dec
push
mov
das
xchg
add
dec
sbb
cmpsb
lods
std
push
push
pop
stos
jno
xchg
mov
mov
cld
lods
xlat
mov
sub
fildl
push
stos
jno
inc
mov
out
push
cmp
int
js
movsl
push
xchg
jmp
ret
jp
mov
push
ret
mov
cs
mov
or
mov
or
gs
jg
push
mov
adc
and
out
pop
imul
lcall
mov
push
jmp
lock
sbb
fwait
outsb
push
and
mov
inc
inc
jmp
add
mov
lods
mov
sub
mov
push
pop
xchg
ds
fucomp
adc
hlt
cmp
inc
mov
cltd
xchg
ds
push
das
lret
ret
rcrl
test
dec
das
pop
inc
andl
sbb
xchg
pop
shl
aad
pusha
call
lahf
mov
sbb
mov
inc
mov
hlt
addr16
lock
inc
mov
popf
xchg
sbb
sahf
cmpsl
and
cmpsl
pop
inc
andb
lahf
pop
jno
loop
jg
cmc
jns
imulb
adc
xchg
push
add
inc
scas
jmp
push
jl
push
cmp
mov
pop
emms
lret
jne
sbbb
or
cltd
ret
or
aas
xchg
mov
mov
cmc
lcall
mov
dec
mov
mov
mov
xstore-rng
cmpsl
rcll
sbb
sti
test
xchg
mov
scas
xchg
adc
add
imul
mov
push
jae
into
je
pop
xchg
mov
jmp
adc
pop
push
xchg
and
mov
and
sbb
movsb
mov
loop
jo
inc
cld
add
clc
xor
out
pop
dec
imull
mov
lcall
adc
push
push
adc
ja
xor
ret
enter
xchg
adc
movsl
mov
adcb
mov
jecxz
leave
sbb
add
mov
popl
add
lods
dec
andl
enter
mov
jo
inc
cs
jnp
stc
mov
push
dec
push
xorb
xor
js
push
daa
adc
lea
into
scas
pop
push
pushl
add
push
shl
push
stos
rcr
addr16
cli
mov
mov
fmul
and
testl
add
inc
test
je
and
stos
repz
adcb
push
sbb
sbb
das
push
mov
pop
movsb
inc
mov
call
pop
inc
mov
sarl
in
jbe
mov
jnp
shr
add
mov
nop/reserved
testl
mov
jae
ret
sub
inc
adc
cmp
mov
fs
inc
gs
push
mov
ficompl
rcll
sub
inc
les
call
mov
add
int
lock
and
jg
lods
lahf
mov
mov
mov
rcrb
popf
push
and
mov
push
mov
pop
mov
mov
or
cs
jns
sub
and
xchg
sub
jne
dec
mul
lods
sbb
xchg
loop
push
fidivl
dec
lahf
jb
cmp
jae
pop
sub
pushf
pop
jg
mov
pusha
sub
sbb
mov
cmpsl
mov
push
stos
and
jnp
pop
mov
xchg
jl
cmp
scas
shlb
jp
popf
mov
out
fisttpl
sub
pop
dec
inc
inc
shl
ja
and
decb
rorl
mov
and
dec
sti
mov
inc
inc
das
sbb
dec
cmp
mov
cmc
jbe
xchg
test
cmp
xchg
push
in
xor
mov
mov
out
xor
xchg
mov
outsb
dec
lods
repz
mov
mov
das
std
cs
push
popf
out
jmp
sahf
add
sub
jmp
pop
jae
mov
push
test
and
and
je
and
scas
test
adc
jns
jge
sbb
or
fisubl
push
das
ljmp
test
aaa
gs
popf
std
pop
add
xchg
cmpsl
call
stc
jle
dec
pop
pop
sub
jmp
pop
fcmovnb
shlb
jnp
inc
inc
dec
dec
ljmp
add
roll
mov
in
lods
jmp
mov
popf
inc
jnp
icebp
shll
popa
in
call
cltd
xchg
or
xorb
out
pop
repnz
xor
aas
shlb
das
jbe
mov
mov
cmpsl
outsl
sbb
mov
mov
insl
jp
leave
int3
dec
hlt
pop
adcb
add
jno
push
jb
cmp
pop
pop
dec
int
mov
leave
sub
inc
aam
movsl
cmp
enter
cmp
mov
push
adc
jae
push
movsl
cmova
shll
fxch
xchg
ja
sbb
stos
and
sub
mov
fs
xor
mov
inc
leave
inc
lods
sub
icebp
mov
fistpll
fisttpll
scas
pusha
ss
adc
and
stos
inc
faddp
outsl
push
sub
int3
mov
pop
stc
popf
xchg
and
add
mov
mov
jge
ds
mov
outsb
or
out
bound
sahf
sbb
jmp
push
sub
push
mov
movsl
jp
push
mov
test
shr
sub
push
in
imul
out
jp
or
in
addb
or
fdivrs
inc
and
lods
inc
xlat
clc
sbb
inc
push
dec
add
dec
lret
pop
inc
in
inc
fsts
movsb
mov
mov
cli
jne
push
cmc
cmp
mov
loopne
ret
push
in
mov
out
je
and
fwait
inc
push
adc
mov
sahf
lock
push
dec
in
nop
in
into
gs
sbb
jno
jge
sbb
mov
xor
jecxz
add
mov
or
shlb
pop
lods
mov
sub
idiv
imul
aam
add
cmp
and
mov
iret
inc
insb
fdivp
popf
sub
mov
xor
pop
jge
fs
rcrb
lar
mov
and
pop
jae
cld
js
xchg
out
add
sbb
and
mov
add
push
sub
mov
loop
lea
mov
push
push
sub
addr16
cmp
inc
dec
or
cli
pop
repnz
nop
enter
jl
lcall
dec
or
sub
pop
pop
push
arpl
dec
cmp
jmp
mov
cmp
movsl
jb
mov
mov
inc
push
shlb
xor
test
sbb
lock
fldl
sar
sub
popf
pusha
dec
in
pop
sar
outsl
jle
lret
cmp
andb
cmp
xlat
pop
js
outsl
mov
dec
mul
jg
and
cmp
dec
inc
in
icebp
andl
aam
sbbb
sbb
adc
out
cld
mov
addl
mov
aas
xor
lock
es
fwait
arpl
lods
dec
ret
mov
mov
cmpsb
leave
js
hlt
out
add
hlt
inc
lret
xchg
mov
cltd
sbb
out
fnstcw
faddl
test
scas
and
ja
pop
and
mov
out
js
hlt
xchg
fldcw
lcall
shlb
outsl
push
mov
xor
push
in
mov
lds
aam
loope
sbb
in
push
sub
and
ffree
or
cmp
fwait
adc
leave
aam
popf
ja
cltd
cmpl
push
mov
mov
ret
xor
pop
imul
ds
lods
call
jbe
xchg
dec
in
orl
jns
pushf
stos
push
pop
repz
andl
stc
xchg
jo
das
int3
add
insl
andb
dec
arpl
cmp
cld
int3
lahf
or
sbb
sub
subb
into
or
fistpl
xor
leave
in
inc
push
movsl
mov
fsubrl
push
mov
xchg
fldpi
dec
cmp
inc
test
jecxz
xchg
adc
mov
mov
xchg
xchg
mov
dec
pushf
pop
mov
or
mov
xchg
gs
mov
mov
fstpt
ja
icebp
add
scas
jne
mov
pop
push
cmp
mov
sub
pop
fnstcw
nop
daa
ret
out
mov
enter
pop
or
mov
pop
dec
and
cmp
xor
cmp
xchg
ret
push
cmpsb
xchg
shrl
or
cmp
int3
into
pop
fidivs
push
pop
outsb
sub
rcr
cmpsl
push
jge
cld
pop
mov
pop
xchg
mov
fiadds
sub
mov
adc
xchg
ret
jecxz
scas
push
mov
das
mov
clc
and
inc
std
sbb
clc
lock
xchg
cmpsl
or
pop
lods
insl
loopne
jo
cld
stos
outsb
jne
data16
push
sub
mov
cmp
mov
ds
xchg
mov
cmpsl
dec
adc
xor
subl
outsb
aad
cmp
in
or
dec
dec
and
lret
enter
les
cmpsb
adc
das
or
rcll
jg
jge,pt
xor
loop
dec
or
jnp
dec
sbb
mov
or
push
jmp
mov
popf
cli
jns
test
das
test
and
pop
lds
sub
push
xlat
mov
fwait
outsb
psrlq
ss
inc
rcl
lock
lods
in
jns
and
sub
loope
arpl
cmp
stos
gs
or
mov
sbb
and
mov
inc
addr16
mov
arpl
cld
orl
dec
fimuls
fdivl
xor
shrl
rorl
dec
stos
sbb
adc
lahf
push
out
std
cld
sbb
out
aas
arpl
push
adc
je
rdtsc
stc
pop
jnp
cli
shlb
jo
pop
lock
ss
push
rcrb
push
sub
jb
aas
stos
aad
es
divb
int3
mov
outsl
add
into
int3
sarl
mov
inc
pop
popf
sbb
mov
cmc
dec
stos
dec
loop
ret
adc
pusha
lods
mov
jp
into
call
mov
jno
mov
xchg
add
dec
cmpsb
std
scas
out
sbb
out
mov
push
sub
mov
sbb
in
lds
call
mov
dec
mov
jo
dec
dec
rcr
lret
inc
pop
aam
imul
mull
sub
jg
pusha
cs
mov
xlat
bound
shlb
dec
mov
and
jo
adc
adc
add
ret
sahf
push
push
xor
movsb
sub
xor
xchg
aaa
lcall
arpl
lds
add
xlat
icebp
cmp
pop
or
xchg
lret
leave
xchg
mov
ja
lock
cld
push
movsl
fwait
add
dec
pop
sub
daa
es
lahf
push
sub
push
insl
dec
in
sbb
fstl
insl
call
stc
jl
inc
lret
cwtl
push
outsb
add
test
hlt
cli
pop
daa
inc
lods
mov
mov
sbb
push
fisttps
mov
cmp
fcoml
inc
mov
in
push
pop
push
push
and
ret
sbb
rorl
lock
xor
xchg
sub
push
popf
add
jnp
insb
and
mov
and
outsl
jge
std
push
imul
xor
rolb
xchg
and
and
aad
sbb
jns
inc
sbb
int3
subl
lahf
and
xor
push
add
sti
addr16
add
fadd
adc
or
push
mov
and
fmull
js
data16
xchg
fwait
mov
test
xchg
pop
xlat
outsb
nop
daa
pop
adc
mov
sbb
rolb
je
adcb
ss
in
mov
mov
push
mov
bound
jae
das
movsl
loop
addr16
outsb
mov
pop
push
out
sahf
repnz
das
out
push
mov
dec
sub
jl
pop
mov
jns
jo
psadbw
mov
mov
mov
adc
jne
lret
add
push
xor
jno
fistl
jnp
jp
subl
ja
jle
add
sbb
sbb
push
or
adc
xchg
fidivrl
ja
jo
mov
in
dec
sub
dec
sbb
jno
jecxz
loopne
loope
mov
push
fs
aad
add
stc
ja
adc
sbb
mov
xchg
rclb
mov
in
xor
mov
sbbl
fdivrl
insb
leave
push
out
insl
les
xchg
sbb
popf
enter
sbb
adc
adc
lcallw
pxor
mov
leave
arpl
shlb
pop
and
push
fdiv
fmull
mov
or
pusha
mov
rcrl
rolb
imul
cmp
mov
or
fs
loopne
pop
adc
in
cmp
pop
xor
out
cltd
mov
xchg
cs
cltd
add
ljmp
cmp
mov
pop
xlat
push
adc
push
stc
in
aaa
cmp
push
push
push
and
mov
push
mov
insb
fbstp
hlt
mov
jmp
test
fmul
fnstsw
sbb
xchg
in
mov
das
lds
push
or
xor
mov
adc
daa
mov
iret
sub
pop
call
arpl
lods
cmp
popf
movsb
mov
jmp
rcr
mov
call
xchg
fdiv
mov
mov
arpl
cmp
and
cmp
dec
add
mov
jns
pop
fcoml
mov
bound
push
xchg
iret
mov
in
fstpl
lods
pop
jle
insb
xchg
cltd
jo
dec
enter
mov
xchg
push
fdivr
xorl
dec
arpl
inc
fidivrl
into
int
addr16
stos
cwtl
int
js
and
rcr
fstps
repz
jmp
fidivl
pop
push
test
mov
movsb
jnp
push
pop
add
scas
add
loopne
cltd
xor
add
fisubrl
outsb
add
icebp
test
sub
push
or
inc
lret
sar
push
pushf
movsb
stc
sti
les
lds
divb
xlat
cmp
xchg
pop
sti
das
cmpb
push
xor
add
pop
aas
inc
arpl
int3
fnsave
cld
imull
scas
sbb
xchg
xor
or
dec
mov
in
call
pop
out
mov
call
push
inc
or
rcl
dec
mov
inc
leave
and
es
sahf
idivl
or
pop
in
loopne
outsb
repnz
jl
cmc
adc
cmp
sub
cmpsl
pop
in
push
lret
test
int3
popa
test
mov
jle
lea
in
test
popa
add
jns
cltd
les
icebp
jle
cltd
and
pop
rep
cmp
sub
std
fs
hlt
imul
test
pop
aas
jo
lds
jg
mov
jge
mov
stos
insl
jg
into
insl
ds
adc
pop
jns
inc
fidivl
jle
cmp
scas
or
push
mov
and
sbb
xchg
sub
inc
sub
sub
xor
adc
movsl
inc
dec
xchg
dec
sub
sub
adc
pusha
xor
sbb
mov
les
sti
xchg
add
mov
mov
jne
ficoms
sub
sub
mov
push
adc
cmp
es
fcompl
cld
xchg
and
ret
xor
pop
dec
sarb
mov
add
jnp
jae
xchg
sub
dec
mov
je
int3
arpl
outsl
adc
sbb
outsl
stos
or
lea
int
aaa
cld
xor
sub
or
dec
pop
pop
pop
mov
mov
pushl
sub
fisubs
sub
sub
cmp
int
adc
lret
mov
mov
sub
pop
push
cwtl
push
xchg
mov
dec
xor
incl
sar
cmp
in
pop
ds
adcl
stos
aaa
scas
fiadds
inc
gs
jae
cmp
cwtl
push
push
lahf
add
outsb
jae
push
sti
pop
cs
sub
lea
insl
or
mov
sbb
mov
scas
adc
imul
cmp
popa
shll
mov
stos
jo
pop
push
jge
mov
nop
out
xchg
add
leave
icebp
lods
aas
daa
pminsw
push
cmp
pop
lahf
iret
mov
cli
les
insb
sbb
pop
mov
mov
lods
inc
push
or
jle
inc
inc
pop
inc
leave
aam
push
and
outsl
jnp
sub
push
mov
aaa
frstor
xchg
xchg
cmp
sbb
cld
pop
call
jmp
push
jbe
ret
aad
pop
inc
mov
mov
cmp
adc
lcall
or
xchg
or
xchg
add
pushf
scas
ret
mov
sarb
in
testb
pop
jg,pt
sahf
mov
adc
xor
stos
add
xchg
sub
lret
mov
dec
inc
sbb
jbe
mov
push
add
gs
addl
movsl
mov
sbb
clc
leave
js
push
push
testb
jae
jecxz
adc
cmp
daa
mov
ret
mov
xor
cmpsb
pop
int3
int3
jle
sub
fisttpll
push
je
cmp
mov
movsl
push
movsl
mov
pop
scas
jp
adcl
push
fs
cwtl
jge
push
cmp
push
fwait
jne
dec
dec
pop
lods
jmp
mov
sub
into
pop
pop
sarb
lret
rcrl
or
mov
jg
and
jmp
sbb
pop
icebp
and
outsb
push
push
pushf
or
xchg
mov
pop
rclb
cltd
push
or
sti
stos
roll
ds
leave
add
fwait
sbbb
shl
cmp
aam
xchg
repz
call
or
stos
je
fwait
repz
stc
push
mov
xor
test
push
mov
pushf
push
mov
dec
stos
jnp
xlat
mov
into
fisubl
aam
jp
push
lods
ljmp
ds
mov
cli
popa
push
xchg
hlt
les
jge
dec
loope
and
mov
movsl
pop
stos
xchg
sub
aam
xchg
icebp
mov
pop
lds
mov
adc
push
and
test
push
out
add
rdpmc
ror
xor
imul
lcall
stos
imul
outsb
mov
aaa
jl
popa
clc
dec
lea
jmp
insl
shlb
adc
popa
notl
add
jl
test
cmpsb
popa
call
sbb
fbld
sti
outsb
popa
cld
jg
andb
ds
xlat
lcall
stos
dec
and
push
insb
mov
jg
imul
fstl
sub
aaa
fmuls
cltd
je
lods
test
adc
jmp
mov
out
pop
push
lret
dec
sub
lret
lcall
mov
push
test
dec
in
sub
enter
mov
int
push
outsb
sub
into
iret
or
int
sahf
testb
mov
nop/reserved
mov
jb
push
enter
mov
pushf
mov
ljmp
jne
pop
int
mov
and
add
out
das
test
scas
sub
ja
fldenv
sub
push
mov
cmc
mov
push
mov
ret
pop
sbb
ja
jl
shlb
stos
test
cmp
test
mov
sbb
add
daa
xor
push
stos
mov
dec
mov
sti
pop
mov
int
sub
int3
popf
test
pop
mov
bound
adc
push
mov
xchg
addr16
ret
fdiv
icebp
outsl
fiaddl
aam
cmp
sub
cmp
out
js
lcall
hlt
or
jmp
fnstcw
mov
pusha
push
out
test
add
outsb
vmovupd
ss
dec
pop
test
or
fimull
rorb
lods
adc
push
dec
out
xchg
push
mov
shll
mov
aad
sub
scas
in
das
addr16
mov
leave
inc
sub
add
ficomps
aam
popf
stc
scas
in
pop
in
dec
mov
jmp
push
add
js
aad
int3
fdivr
adc
inc
ja
iret
loope
je
jp
sbb
addb
loope
gs
cmp
aad
pop
pop
inc
push
mov
adc
sarb
scas
sbb
push
jge
test
mov
cwtl
jb
lea
arpl
cmp
lret
sbb
mov
or
fs
scas
cmp
out
and
sti
inc
sub
sub
sub
xor
enter
mov
les
pop
in
mov
cmpsl
cli
loope
mov
xor
cmp
into
orb
call
shrb
cmpl
cmpsl
out
sub
int3
pop
fisttpl
loope
push
inc
dec
aas
mov
dec
lea
mov
push
aas
insb
ljmp
xor
xor
lret
push
fdivs
movsb
cmp
jo
mov
dec
in
xlat
push
fcoml
jns
mov
int
call
push
mov
xchg
in
ds
pop
jecxz
lods
adc
mov
stc
stos
add
adc
aaa
fwait
std
add
xchg
hlt
cmp
cmpsb
arpl
mov
idivb
test
mulb
addr16
mov
inc
jbe
add
loop
and
fs
nop
imul
sbb
push
xlat
shl
jne
mov
xor
scas
inc
into
push
sub
mov
sbb
xchg
std
jmp
mov
mov
notl
mov
sub
sub
stc
int3
jo
rcll
dec
movsb
xor
sub
lret
lret
cmpsl
in
push
ret
cli
fisttpll
xor
jno
mov
out
mov
fmulp
clc
add
out
cltd
push
int3
and
cwtl
test
inc
cmpps
inc
lods
cmpsl
nop
jo
stc
rcr
dec
movsl
sbb
dec
add
decl
or
jne
popa
fisttpl
push
add
out
stos
sub
fwait
mov
ljmp
fldenv
add
lds
mov
das
std
cmpsl
out
std
icebp
int3
and
imull
cmpsl
fstp
shrb
sbb
outsl
aad
sub
aad
repnz
pop
imul
xor
xlat
cmp
xor
jmp
pop
popf
stc
or
and
and
jae
mov
orl
sbb
xchg
adc
cmp
insb
cmp
push
mov
imul
rclb
ret
push
push
leave
mov
ljmp
jecxz
jge
cmpl
out
jle
inc
inc
lcall
psubusw
jbe
inc
das
movsb
mov
cmp
jp
loopne
into
arpl
shrl
imul
xor
gs
shrl
push
gs
hlt
ret
mov
pop
mov
movsb
xor
les
out
xchg
sub
adc
mov
push
pop
adc
push
stc
les
inc
lret
mov
mov
loope
pusha
inc
add
xor
cmpsl
cmp
or
dec
ljmp
ja
mov
sahf
loope
push
and
stos
push
pop
imul
inc
push
pop
jge
in
add
push
int3
cmp
push
mov
or
inc
add
sbb
je
sahf
mov
iret
popa
in
jbe
fisttpl
cmovs
jle
pushf
mov
fdivl
inc
push
inc
pop
ja
pusha
lret
cmpsb
stos
int
fildl
ja
xor
cmpsb
les
add
gs
sti
dec
adc
rol
repz
add
mov
arpl
outsb
test
ja
add
stos
push
notl
xor
test
sbb
xor
and
test
andb
sarl
out
test
pop
in
xor
addr16
popa
sti
fwait
xchg
add
xor
mov
pop
lock
sbb
xlat
sbb
add
imul
cwtl
mov
mov
cmp
shll
jno
jns
inc
aas
divl
xor
movsb
dec
xor
lds
movsl
outsb
dec
jbe
push
mov
repnz
dec
in
shlb
pop
jecxz
pusha
and
call
pusha
cmc
mov
mov
push
xchg
and
movsl
push
jne
int
mov
fsubr
xchg
sbb
mov
adc
add
ffree
dec
and
xchg
shlb
aam
in
sub
mov
mov
int3
adc
jne
inc
scas
push
repz
add
loopne
pop
popf
or
or
sbb
xchg
cltd
cmp
and
cmp
sub
cli
dec
sbb
negl
outsb
ss
es
jmp
push
mov
test
scas
stc
add
inc
out
fldenv
mov
xor
call
mov
pop
ss
lret
cmp
divb
cmp
std
pop
jmp
and
or
cmp
ds
bound
lret
and
push
cs
scas
mov
std
pop
insl
ficoml
lcall
inc
mov
movsb
adc
sub
and
mov
jecxz
dec
out
lods
adcl
jb
les
cmp
divl
adc
xchg
lds
mov
bound
xchg
push
xchg
adc
add
movsb
inc
ja
mov
add
or
in
sbb
mov
xor
daa
sbb
test
aaa
push
adc
lahf
or
cs
stc
pop
sbbb
std
adcb
int
mov
ret
mov
lea
cmp
push
gs
jbe
mov
lods
pop
and
les
xor
sub
fs
stos
movsb
pop
out
dec
ret
lahf
outsb
stc
sbb
sti
js
cmpsb
push
hlt
add
mov
cli
sub
cwtl
cltd
cwtl
rcrb
pop
jle
dec
cmp
lcall
pop
xchg
sub
popf
lds
cmp
lods
and
leave
rcll
cmp
sbb
fucomp
je
xchg
pop
in
xchg
xchg
cmc
insb
out
xchg
push
lcall
cltd
or
pop
pop
cmp
adcb
clc
and
jmp
sbb
pusha
ljmp
mov
pop
outsb
mov
fwait
and
mov
mov
cs
push
fcoml
mov
ffree
inc
enter
jle
mov
pop
add
pushf
push
and
jns
xchg
xchg
jns
inc
pop
lcallw
xchg
imul
adc
mov
sub
clc
jge
push
fildll
mov
adc
xchg
cld
pextrw
xor
outsb
movsl
std
xchg
fwait
es
mov
push
or
jae
jne
lret
jge
mov
or
lods
mov
jl
insl
add
mov
andl
inc
sbb
mov
cmp
or
dec
dec
loopne
add
rorb
outsl
add
add
les
dec
mov
adc
sbb
mov
testb
cmp
or
je
adcl
stos
push
mov
lret
imul
js
lea
or
scas
add
adc
mov
icebp
pusha
xchg
push
ljmp
jb
movb
cmp
mov
push
into
push
mov
nop
cld
rolb
xlat
sbb
xor
stc
cwtl
or
inc
jmp
fcomps
pop
ljmp
pusha
cmp
sub
lahf
out
and
fdivr
pop
idivb
in
sbbl
test
sbb
lcall
push
inc
push
lock
cmp
xchg
xor
int3
and
dec
ja
loopne
popa
add
mov
pop
call
outsb
ret
sbb
fbstp
and
inc
push
lock
bound
outsb
cltd
scas
or
addb
inc
fisttpl
jecxz
jae
sti
jno
sub
push
dec
enter
out
xor
test
push
add
cltd
outsl
lret
adc
dec
xchg
lock
add
cli
lea
adc
test
mov
add
out
pusha
cwtl
cmp
mov
xor
mov
cmp
jo
add
jnp
xchg
xor
cmp
lea
sub
or
push
xchg
es
dec
shrl
mov
in
mov
scas
cmc
scas
pop
sbb
cmp
incl
or
mov
sbb
je
push
imul
data16
fsubrp
push
mov
je
out
add
daa
push
stos
fnstsw
mov
mov
hlt
mov
ret
push
pop
repz
jmp
roll
and
jnp
push
loop
and
ja
loope
lret
ret
adc
clc
jmp
test
mov
lcall
sub
ret
sti
or
inc
out
popa
sbb
push
jg
push
pop
mov
rorb
dec
aam
mov
mov
fldl
push
in
ja
add
ss
je
dec
test
pop
lret
cmpsb
mov
imul
add
and
xchg
mov
add
mov
lret
and
cmpsl
test
sbb
mov
iret
fwait
pop
ret
jae
in
pop
and
fstpt
outsb
mov
repz
jmp
lret
inc
and
sbb
rcrb
jbe
xor
bound
leave
xchg
loopne
sub
pop
shl
push
dec
xchg
mov
cmc
cltd
call
fisubrs
rorb
loope
mov
dec
daa
xor
jge
fwait
push
mov
sbb
sti
dec
rorb
sub
les
ret
addr16
inc
mov
jae
jns
out
push
and
xlat
push
int3
mov
out
popa
dec
push
pop
lods
test
mov
addl
sub
cld
push
mov
jne
push
push
push
movswl
push
sbb
adc
out
sbb
fsubrl
daa
das
cwtl
fistpl
fdivl
je
mov
mov
dec
fcmovne
ret
dec
add
pop
push
adc
scas
cmpl
push
ljmp
and
mov
sbbl
and
inc
sbb
jmp
mov
push
fdivl
lahf
cmp
dec
cmpsl
rorb
add
lods
dec
add
in
adc
fstpt
push
outsb
xchg
in
mov
jno
sbb
lds
cmp
push
mov
sbb
sub
inc
fistps
jl
add
mov
cmpsb
xchg
pop
test
fnstsw
imul
sub
ds
in
mov
ret
jmp
aad
and
clc
xor
incl
jmp
xchg
outsl
mov
int3
popf
scas
and
imul
and
in
xor
addr16
mov
lret
out
add
repz
xor
jmp
inc
bound
ljmp
shlb
mov
mov
mov
in
ficoms
test
mov
mov
jb
push
or
sbb
int
aaa
cmp
outsl
pop
xor
mov
dec
jae
xchg
mov
add
mov
pusha
cwtl
dec
xchg
or
pop
mov
ret
sbb
out
inc
in
add
jae
xlat
push
outsl
lcall
push
mov
in
push
leave
inc
stos
jne
loope
adc
xchg
int
loope
cmc
sbb
mov
or
pop
and
jne
cwtl
pop
and
aam
repnz
loop
jg
xchg
mov
jge
cmp
pop
or
cmpsl
inc
scas
xor
je
js
jp
fimuls
nop
push
sub
cmp
xor
loop
dec
adc
mov
sub
inc
jecxz
rolb
mov
sub
sbb
sub
out
mov
adcl
sti
pop
lock
lcall
fstps
mov
cmp
iret
mov
mull
sub
mov
pop
dec
movsb
or
call
outsb
fidivl
lret
inc
shll
jae
add
fiaddl
sub
mov
fisubrs
push
sub
test
jle
shr
rcrl
repz
adc
das
call
and
bnd
fwait
pop
and
push
arpl
lahf
data16
fsubrs
aam
loope
push
mov
ficoml
jl
mov
cmp
jecxz
fwait
sti
mov
jg
cwtl
stos
fnsave
push
mov
cmc
pop
add
jno
inc
jo
fidivl
cmp
xchg
data16
loopne
into
pop
sbb
cmpsb
les
push
movsb
push
cmpsb
jl
mov
sbb
scas
cs
pushf
in
mov
outsl
rorb
push
sub
pop
cmp
pop
jno
sbb
push
add
xchg
negb
sbb
xchg
cs
iret
xchg
insb
or
andb
jmp
push
in
enter
outsb
inc
cmp
dec
push
jnp
jbe
add
cs
lret
jb
into
push
cltd
outsl
add
and
je
outsl
scas
lcall
cmp
nop
rorl
cmpsl
sahf
test
mov
pop
xor
rcrl
pop
fidivs
dec
fimuls
clc
jle
fdivrs
xlat
cmp
rcrb
or
leave
or
mov
leave
cs
pushf
outsb
test
shr
sbb
sbb
movsb
in
mov
mov
icebp
fldt
stos
push
jno
cmpsb
mov
cmpsl
cmp
add
pop
cmp
cltd
mov
bound
add
push
fadds
orb
imul
sti
xchg
pop
fsubl
jb
mov
in
iret
jae
push
popf
or
jp
les
or
fnstcw
andb
sahf
lds
iret
out
add
or
dec
dec
push
xchg
push
in
sub
inc
push
pop
and
mov
mov
and
pop
dec
add
dec
loope
and
andl
pop
faddp
xchg
out
xchg
or
sbb
cltd
inc
cs
sbb
push
pop
lea
push
repz
inc
test
aas
sub
push
sbb
jae
inc
sub
aad
in
inc
mov
fs
inc
xlat
and
in
and
push
push
daa
push
aam
xchg
inc
sub
cmp
sbb
mov
sub
mov
into
ja
add
jbe
jl
cmpsb
cmp
inc
inc
fidivs
mov
ret
xchg
repnz
js
mov
mov
pop
xlat
mov
sub
stos
stos
sub
cmp
je
lds
jo
or
xor
mov
push
mov
sti
dec
loop
jl
xor
and
cmp
xor
sbb
scas
hlt
cmp
jg
mov
cmp
or
lahf
xor
inc
sub
mov
popa
mov
push
test
dec
push
mov
mov
adc
and
and
mov
pop
shrb
and
mov
sbbb
add
addl
enter
enter
movsb
xor
xor
out
pushf
in
loope
pop
stos
mov
aam
decl
cmp
outsb
cs
cli
add
imull
mov
je
imul
dec
push
jg
inc
gs
mov
xor
xor
mov
pop
push
out
cmp
cmp
sub
add
es
scas
push
outsl
mov
mov
lcall
and
je
cmp
lock
add
xchg
adcb
xor
ljmp
sqrtps
lcall
sti
mov
xchg
je
ds
dec
xlat
cmpl
push
xor
jg
ss
ds
mov
ss
inc
fisttpll
pop
sub
or
cs
movsl
inc
repnz
and
cmp
pop
and
inc
lea
xchg
int3
arpl
out
cld
adc
lea
clc
or
dec
pop
mov
push
js
outsb
mov
adc
popl
jmp
and
cmpsb
push
xor
fcompl
mov
mov
adc
sub
mov
pop
pop
push
popf
cld
aad
cwtl
xchg
and
ljmp
pushf
xor
mov
jno
mov
jmp
xchg
inc
insb
inc
adc
js
scas
out
dec
xchg
jbe
sbb
mov
mov
mov
adc
sub
les
push
testb
push
dec
push
shl
ja
mov
mov
push
push
sbb
test
xlat
ficoml
cmpsb
mov
xchg
hlt
jp
push
pushl
push
mov
fidivrl
mov
pop
mov
dec
push
mov
inc
popa
mov
add
ja
lret
daa
dec
jge
dec
dec
push
xor
push
sub
pop
test
pop
outsb
jne
hlt
xchg
jmp
ds
pop
shlb
mov
cltd
cmp
push
out
test
aam
rol
pop
clc
mov
aad
add
mov
mov
mov
sti
cmp
add
loope
fnsave
push
pop
out
add
int
aas
sbb
mov
negl
fstps
mov
jae
imul
sub
loope
xchg
fisubrs
movsl
sub
or
pop
icebp
mov
adc
cltd
inc
lds
push
or
mov
pop
sub
pop
pop
call
into
lahf
jno
xor
push
outsb
and
mov
in
aad
fldt
daa
cmp
into
cwtl
push
xchg
mov
lcall
and
jle
xchg
ror
mov
mov
inc
push
jns
daa
mov
test
out
mov
lods
xchg
add
sub
or
sub
mov
pop
and
lcall
push
in
sti
sub
pushf
jo
cmpsb
adc
sbb
xor
jns
pushf
xchg
push
test
inc
cwtl
fbstp
pop
push
inc
mov
inc
mov
push
mov
mov
add
jne
movsb
loopne
push
sahf
std
pop
inc
popl
xor
ds
dec
js
push
scas
push
iret
rol
decb
push
rcrb
test
in
in
test
das
icebp
mov
sub
push
rorb
dec
gs
adc
push
shll
sub
xchg
shlb
repz
cltd
dec
loopne
test
jbe
adc
ds
jo
dec
movsb
xchg
ret
icebp
dec
sub
or
mov
inc
mov
fidivrl
movsb
inc
xor
pushf
dec
int
sub
aam
or
push
dec
lods
mov
inc
jl
fsubrs
push
lret
xor
stos
jne
lock
lods
pop
repnz
add
adc
mov
adc
rcll
jp
mov
ja
inc
dec
dec
push
cmp
test
xlat
cmp
cmpsb
pop
in
push
cltd
ret
in
aas
idivb
xchg
fldcw
mov
jmp
dec
fnstsw
fistps
das
xchg
xor
call
push
iret
pop
pop
call
mov
stos
test
sub
pop
xchg
sub
jb
in
daa
and
lea
mov
test
add
in
std
out
xchg
sbb
cld
cmpl
sbb
mov
loopne
adc
add
mov
inc
aas
pop
ss
out
lea
loope
andl
or
repnz
xchg
popa
pop
dec
cmp
cmpb
shrl
popa
sbb
subl
lds
rorb
movsl
je
pop
shl
out
in
popf
dec
adc
xchg
push
cwtl
stos
cltd
cmpsl
popf
cmpsl
lock
push
adc
pop
jno
sbb
lods
ret
call
ret
clc
outsb
jl
stos
xchg
xchg
sbb
mov
imul
sub
outsl
mov
mov
pop
mov
data16
aam
mov
lock
in
push
mov
push
and
push
add
mov
aaa
loopne
xchg
outsb
adc
xor
lahf
mov
scas
lods
xor
or
stos
jno
fildl
jbe
sub
stos
lods
mov
cmpsl
rcrl
push
insb
push
jge
jl
adc
je
ret
inc
loop
mov
icebp
xchg
xchg
or
sbb
xchg
pop
xchg
cs
jp
lds
jbe
cmp
push
cmp
std
add
sub
outsl
daa
dec
cmpsb
adc
loope
sub
call
pop
loop
scas
sub
jae
mov
cwtl
stc
movl
xchg
out
mov
push
xor
inc
add
loop
pusha
ss
sti
bound
sarb
sub
xchg
sbb
imulb
push
scas
ds
lods
cli
jg
jb
sbb
xchg
hlt
cli
xchg
add
cmp
xchg
xlat
iret
pop
jle
dec
xchg
xchg
sbb
mov
mov
jg
sub
xchg
outsb
nop
pop
and
jmp
rcrl
lret
popa
inc
inc
shll
mov
pop
mov
xchg
sub
push
outsb
popa
cs
sahf
jns
sub
and
pop
xchg
mov
stos
aaa
mov
lods
pop
aam
cmc
push
mov
sub
inc
and
xchg
mov
jns
pop
xchg
push
in
clc
xor
addr16
or
jae
mov
std
scas
subb
sub
movsl
in
jo
or
fildl
stos
xchg
and
xlat
lea
dec
xorl
dec
cmp
leave
aad
pop
jbe
mov
scas
jle
fists
or
push
scas
bound
xchg
and
mov
fstl
mov
mov
mov
aad
sub
js
mov
xchg
sub
lcall
mov
test
mov
pop
jg
xchg
mov
mov
addr16
lret
push
xlat
push
cmp
push
fsubr
pop
movb
jnp
into
shr
repnz
test
ret
jnp
mov
pop
pop
lock
adc
xchg
and
mov
push
mov
ja
imull
pop
pop
mov
xchg
jl
add
push
push
mov
fistpl
loope
imul
adc
cmpsb
and
or
push
out
cmp
iret
data16
jns
xor
and
sti
cmpsb
sub
imul
jecxz
lret
mov
push
mov
loop
inc
sahf
aas
in
adc
pop
xor
fs
rcrb
pop
stos
inc
sahf
xor
iret
xor
push
pop
mov
sbb
pop
pop
push
cmp
dec
in
std
push
pop
shrb
in
imul
push
mov
shll
fisubl
jns
nop
mov
rolb
sbb
cmp
cmp
hlt
push
jnp
jg
ljmp
arpl
insl
addr16
insl
xchg
inc
pusha
negl
pop
fwait
and
rol
mov
lea
jnp
xor
mov
jg
test
aam
push
aad
add
mov
icebp
mov
mov
enter
dec
mov
cmc
ds
jle
dec
hlt
arpl
push
push
or
adcl
and
xchg
inc
call
mov
les
shlb
clc
aas
data16
fsts
fwait
sahf
aas
cli
mov
sbb
xor
pushl
push
fwait
cld
sti
rcrl
jo
call
cmp
bound
dec
mov
int
mov
fcmovu
loopne
dec
sub
jl
fnstsw
testl
pusha
mov
add
xchg
adc
jmp
push
jb
sbb
jge
mov
les
or
nop
dec
insl
pop
cmp
pop
mov
scas
imul
outsb
add
mov
xchg
out
stos
sbb
adc
addb
aam
or
add
mov
jo
add
add
cs
mov
repnz
sti
jmp
jbe
mov
ret
aam
mov
in
add
and
cwtl
pop
cmp
cmp
rolb
bound
inc
adc
gs
decl
and
aas
mov
or
push
aam
push
test
sbb
xor
pusha
jmp
cmp
fisubl
icebp
push
bound
mov
and
test
lock
dec
icebp
lock
mov
arpl
jge
mov
nop
jnp
add
push
mov
lret
and
pop
mov
pop
int
mov
loope
aaa
mov
je
mov
cmp
fs
or
adc
insl
in
push
and
mov
leave
inc
daa
jno
aad
push
mov
les
daa
in
iret
mov
add
push
inc
inc
push
xor
shr
decb
iret
push
ljmp
jno
outsb
call
imul
insb
leave
dec
adc
test
aaa
sbb
adc
pusha
sbbb
shll
inc
xchg
mov
stc
inc
pusha
sbb
mov
inc
xchg
xor
jb
outsl
aas
pop
shll
add
test
jl
aad
or
inc
outsb
fbstp
shlb
shr
clc
cwtl
dec
pop
jge
icebp
push
mov
out
cmp
fisubs
adc
lods
imul
xchg
ja
mov
cmpsb
dec
inc
and
pop
add
mov
push
or
mov
mov
adcb
push
popa
pop
add
lock
daa
push
fnstcw
xor
and
sub
sub
adc
data16
adc
mov
shl
adc
sbb
cwtl
push
daa
std
mov
lods
xchg
std
jne
loop
ficoml
or
adc
pop
add
xor
ds
jmp
add
inc
push
adc
in
push
fstps
mov
mov
rcr
icebp
jecxz
sbb
mov
xchg
xorl
push
xor
push
out
xchg
jp
lods
jl
cmovs
not
jo
or
xchg
pop
lock
js
or
frstor
pusha
mov
mov
ret
lret
add
inc
es
fildll
xor
cmpsb
mov
outsb
ss
inc
dec
out
xorl
mov
fcmovu
lods
pop
sarl
enter
sub
lret
jae
shll
push
lds
ss
les
adc
mov
lods
sarl
inc
sti
addr16
cmp
mov
or
pop
aad
mov
movsb
aam
push
xor
out
das
out
aam
xor
test
push
addr16
or
mov
sub
cmp
nop
jae
or
mov
or
xchg
sub
dec
in
int3
hlt
loop
dec
aam
stos
mov
and
and
and
xchg
mov
mov
push
cmpsb
cmp
lea
push
rclb
inc
scas
inc
mov
adcb
pop
push
retw
hlt
andl
in
shrb
mov
insb
mov
incb
push
cmp
sub
push
gs
dec
mov
das
dec
insb
test
pop
out
inc
cmc
cmp
xor
inc
fisttpll
scas
outsb
jo
cmp
xchg
sbb
dec
pop
xlat
cmp
ja
dec
add
pop
das
or
sbb
movsb
lret
pusha
test
cmpsb
dec
inc
mov
hlt
inc
roll
pop
mov
ljmp
cld
mov
mov
mov
add
mov
test
fwait
and
jbe
add
sub
stos
xchg
sub
andb
fs
test
dec
in
in
stos
xchg
stos
fmull
icebp
xchg
out
bound
loope
dec
dec
lods
cmp
pushf
add
sahf
pop
inc
jno
mov
in
inc
dec
pop
dec
test
lret
inc
mov
les
mov
ret
or
pop
cmc
testl
push
call
cmp
adc
jmp
incl
es
nop
loopne
push
in
out
in
sbb
add
xchg
jp
push
xchg
xor
lods
inc
lods
pusha
frstor
loop
jmp
cmp
pop
jp
lds
outsb
outsl
push
mov
rorb
dec
mov
mov
xlat
xlat
leave
ret
xchg
lods
mov
push
add
test
lcall
sub
cmp
lret
in
push
mov
xchg
ret
mov
addr16
lods
cwtl
aas
jecxz
jmp
out
inc
jo
push
insl
daa
mov
inc
xor
dec
jmp
divl
mov
or
mov
test
cmp
adc
pop
pushf
ss
mov
pop
xlat
cmp
inc
push
popf
jb
add
cmp
in
jb
add
pop
stos
cmp
or
repnz
xchg
xor
xchg
enter
in
clc
push
and
dec
cmc
sub
mov
ret
push
inc
sub
loope
divl
and
dec
inc
add
lods
adc
dec
cmp
mov
mov
ja
fs
sti
push
xlat
sub
pop
jmp
scas
inc
fimuls
cmp
fxch
cmp
ret
pop
pop
jecxz
ret
filds
ljmp
int3
dec
mov
push
or
sti
xchg
cmp
and
adc
enter
push
sbb
int3
lds
loope
dec
out
rorl
push
jmp
imul
mov
movsl
pusha
pop
cmc
push
fldt
jmp
stc
pop
inc
dec
sub
call
mov
sub
mov
push
mov
sub
mov
sub
and
div
test
in
addl
or
pop
fbstp
pop
jae
cmpsl
dec
sbb
ds
sub
xchg
xor
mov
adc
and
test
arpl
jmp
or
lds
dec
dec
out
or
ds
ss
inc
dec
xchg
fnstenv
mov
loop
arpl
cmp
push
jg
inc
adc
sbb
mov
xchg
sbb
sub
pop
scas
test
popf
fnstsw
daa
insb
in
sub
in
pusha
imul
and
jge
push
in
lods
or
cmp
imul
cli
scas
push
adc
mov
ret
imul
mov
das
mov
rclb
or
ja
out
je
and
jmp
mov
in
xchg
sub
jge
mov
mov
lcall
lods
test
mov
cmp
push
jne
mov
test
inc
fisttpll
cmpsl
cpuid
xchg
ljmp
inc
test
sbb
js
mov
js
xchg
push
ljmp
push
scas
push
int3
push
sub
cmp
dec
stos
xchg
adc
imulb
fimuls
pop
fcomps
sub
leave
mov
lret
stos
pusha
divl
or
pop
xchg
push
jle
push
out
lds
push
pop
adc
add
fldenv
mov
std
jno
pop
or
pop
ret
shlb
or
mov
dec
scas
out
scas
test
and
adc
std
fnsave
sti
cli
int3
pop
out
xchg
es
cs
fildll
les
jbe
mov
jmp
add
add
cmpsl
repz
jo
xchg
cli
pop
test
push
mov
dec
and
aaa
in
sarl
pop
das
aad
or
scas
jge
push
push
dec
mov
leave
aad
rcl
adc
jnp
andb
ja
data16
xor
incb
xchg
into
xchg
dec
ficoml
or
stos
jo
push
adc
out
jmp
dec
jg
mov
mov
push
xlat
cld
nop
aam
sub
sub
cmp
jae
or
and
add
push
lret
mov
xor
sahf
lahf
jb
fbld
push
sbb
sub
jb
fimull
fsincos
ss
mov
lret
mov
mov
push
cmpsb
push
call
mov
test
enter
pop
test
jl
addb
imul
cwtl
mov
aam
call
sahf
dec
mov
cltd
test
fcomps
mov
xor
xchg
lea
cmpsb
in
jecxz
stc
xchg
ss
pop
sub
daa
fdivrs
inc
push
mov
push
je
pop
xor
pop
add
sbb
mov
cmp
mov
inc
pop
das
call
jl
and
add
jnp
cmp
mov
jmp
xchg
add
push
dec
adc
mov
push
mov
subb
pop
sub
inc
pop
xchg
mov
repz
leave
das
lea
mov
xchg
mov
xchg
push
mov
push
maxps
xchg
push
mov
sbb
mov
sbb
pop
xor
mov
popa
rcr
outsb
sti
inc
mov
dec
lcall
out
cmpsl
insb
repz
inc
gs
ds
or
dec
scas
rcll
scas
and
jne
mov
add
xor
fwait
aas
ret
ljmp
push
in
hlt
push
xchg
mov
adc
mov
test
addr16
imul
shll
xor
mov
xor
mov
jg
cmp
lods
mov
data16
call
inc
jmp
iret
mov
lea
das
mov
mov
ss
pop
mov
call
push
push
adc
test
movsl
sub
jmp
imul
data16
push
mov
push
jmp
mov
xor
fsubrp
push
push
push
lods
sbb
mov
fldt
es
sbb
cmp
cmpsb
test
add
push
xchg
mov
dec
imul
cmc
fidivrs
mov
outsl
insb
ret
mov
pop
or
adc
cld
inc
orb
push
mov
dec
or
inc
sub
in
out
nop
dec
fsubl
fidivrl
sub
repz
loopne
xchg
mov
fisubl
mov
pop
pushf
outsl
out
test
xchg
xchg
pop
cmp
add
sti
test
div
xchg
mov
mov
cwtl
mov
dec
push
inc
out
rcrl
sti
fnstsw
notl
fisubrl
std
out
jbe
cmp
push
and
stc
mov
and
lods
subb
inc
loop
xchg
push
sbb
out
push
out
pop
inc
xchg
hlt
xor
sub
cs
lds
add
mov
pusha
test
jbe
pop
in
xchg
aad
mov
mov
das
ret
jb
insl
pop
or
cmp
in
call
lods
pop
data16
imul
adc
nop
dec
ror
cmpsl
les
pop
enter
pop
stc
mov
iret
addb
lahf
jns
inc
add
push
ret
pop
aaa
jle
jmp
adc
cltd
and
popa
xchg
xorl
lds
popf
ja
cmpsb
out
imul
cwtl
out
mov
and
cmpsl
adc
andl
xchg
sub
out
sub
cli
adc
les
pop
out
in
pop
mov
fnsave
fcmovbe
cmpsl
ss
rolb
div
pop
scas
and
jb
lods
cltd
mov
aam
scas
imul
push
lret
adc
fcomip
dec
jb
sub
int3
and
adc
pop
iret
or
into
and
push
or
fnsave
lods
push
push
xlat
mov
data16
pop
es
lcall
aas
jb
bound
push
ljmp
cmc
stos
aad
pop
push
xlat
mov
cld
cmpb
data16
xor
xor
adc
out
insb
and
aaa
inc
in
cmpsl
push
add
mov
fcomip
ds
mov
xchg
insb
mov
xor
add
cmp
pop
cmp
mov
push
fcomi
add
xchg
nop
mov
movsl
stos
inc
mov
mov
xor
imulb
sbb
pop
sbb
in
arpl
xchg
xor
cmpl
movsb
sti
add
out
and
mov
stc
test
xchg
xor
jg
cmp
adc
daa
lret
adc
stos
mov
fnstsw
lret
xchg
mov
mov
lock
sub
stc
pushf
pop
xchg
sti
pushf
mov
add
or
nop
push
out
mov
movsb
stc
mov
jo
xchg
lahf
xor
or
incl
js
sti
xchg
inc
mov
add
pop
in
scas
outsl
mov
adc
jle
cltd
inc
enter
and
pusha
jge
jmp
in
mov
mov
sub
setb
xor
inc
loopne
push
movsl
in
push
push
pushl
out
pop
push
sahf
sub
cmp
adcb
and
roll
sahf
flds
lods
add
std
pslld
push
inc
ds
mov
mov
mov
xorl
sub
inc
cli
mov
aaa
outsl
cmpsl
xchg
or
out
xchg
xchg
adc
dec
les
cmp
dec
imull
je
and
addl
jmp
clc
aam
aad
push
arpl
cli
pop
or
mov
sbb
sbb
js
call
cmp
push
lds
je
and
push
testb
das
pop
dec
loopne
xchg
cs
mov
adc
push
jno
imul
pop
jo
in
pop
dec
sub
jbe
loope
xor
cmpsb
dec
xor
push
push
lea
mov
insb
cmp
xchg
jno
dec
in
jbe
lods
push
xchg
imul
xchg
addr16
loope
add
arpl
popa
in
inc
pop
pop
addl
mov
lret
jnp
addr16
pop
out
dec
sbb
xor
fwait
and
inc
mov
clc
fwait
xchg
test
rclb
out
mov
and
lock
cli
lcall
dec
pop
call
push
jno
inc
test
xor
nop
test
mov
lcall
outsb
imul
jbe
inc
sub
pop
cmpsb
sub
std
mov
fadds
cmp
sbb
lcall
push
cs
pop
inc
push
mov
loope
imul
fwait
sub
sahf
stos
out
add
push
xchg
sbb
add
addr16
mov
push
jmp
mov
fisttpl
or
pop
mov
xchg
or
aas
in
into
mov
mov
inc
out
push
jecxz
nop
cli
fadd
stos
fidivrl
jmp
push
sbb
stc
int3
outsl
idiv
fdivrs
add
cmp
cltd
sub
ja
pop
aam
dec
jge
in
outsl
imul
movsb
jl
imul
in
jle
xor
movsb
out
mov
movsl
push
jecxz
lret
je
ror
push
adc
outsl
daa
stc
cmp
mov
jecxz
jbe
int
pusha
cmpsl
ds
lods
outsl
sub
lds
lret
mov
and
ljmp
popl
mov
imul
ljmp
and
inc
mov
sub
cli
loop
mov
loope
and
jo
jge
xor
push
sbb
enter
push
jmp
scas
pop
cmpsb
adc
xor
cs
orb
sub
dec
insb
or
sbb
dec
jecxz
mov
push
xor
rol
xchg
jbe
in
and
ret
sti
add
shrb
xchg
push
enter
jno
lret
es
jmp
repz
jmp
mov
jns
sbb
cltd
aas
lret
push
pusha
mov
pop
cmp
int
cmp
ret
push
sbbl
loopne
movsb
fbstp
dec
mov
mov
sub
hlt
lea
inc
mov
pop
daa
into
faddl
pop
xchg
pop
daa
and
mov
or
adc
jge
adc
sbb
cmp
add
insb
lcall
lods
cltd
loopne
test
mov
repz
dec
rcr
inc
sbb
aad
jae
call
or
mov
and
mov
insb
jp
push
mov
push
lods
push
pop
cmpsl
dec
mov
xor
daa
cwtl
pop
lahf
or
push
jp
push
addb
iret
sub
popa
push
fiadds
lahf
push
sti
xchg
pop
in
xchg
inc
movsl
mov
pop
fs
mov
and
jno
fadd
jmp
lds
lret
cmp
cmp
jns
aam
leave
nop
pop
xchg
xor
xlat
out
dec
or
mov
sub
jne
stos
mov
mov
loopne
lret
stos
push
jmp
fcmovnu
mov
sbb
arpl
clc
cmp
pop
jne
adc
push
lahf
and
scas
popa
cld
dec
scas
sbb
insl
cmp
add
scas
xor
jle
sahf
stos
jbe
call
pop
dec
leave
subl
fidivrs
data16
inc
push
lret
sti
dec
and
inc
push
xchg
in
outsb
inc
push
out
mov
stos
mov
ret
rorl
out
jae
imul
ds
cmp
stos
cmpsl
lods
lea
mov
xchg
pop
and
les
cmp
mov
sysret
outsb
dec
adc
inc
sub
pop
stos
mov
insb
dec
inc
mov
mov
sub
sarb
push
movsb
mov
xchg
ljmp
lods
xor
jle
cmpsl
sub
cmpsb
or
pushf
sub
cmp
xor
inc
int
pop
movsb
fisttpll
lea
xor
ljmp
stc
jge
sub
adcl
adc
out
in
fsubr
in
adc
add
mov
call
lret
push
hlt
pop
add
shll
cltd
ret
jp
rolb
loope
aad
mov
fadd
cmpsl
pop
call
xor
mov
mov
hlt
in
jg
fdivrl
xchg
add
jae
dec
addr16
test
cmp
inc
fsts
push
xor
lret
xlat
sbb
js
cmp
push
mov
and
stos
call
fiadds
dec
sbb
add
iret
popa
pop
and
inc
mov
xlat
cs
pop
outsl
push
lea
pop
clc
psubd
movsl
jae
lahf
in
in
mov
sbbl
ret
pop
lcall
icebp
mov
and
repnz
out
cwtl
inc
cli
xchg
fs
jge
xlat
sub
sbb
jb
inc
jne
sbb
dec
mov
cmp
ja
scas
test
mov
sbb
in
cmp
pop
cltd
dec
xlat
or
dec
fisttpll
insl
lds
je
popa
inc
jmp
sub
wbinvd
int3
jg
push
mov
scas
xchg
sbb
push
sbb
lret
ljmp
arpl
mov
or
sub
xor
cmp
jecxz
xor
mov
stos
mov
test
jle
dec
fwait
mov
pusha
flds
xchg
jl
outsl
push
jmp
lcall
std
or
out
xchg
stos
aas
jge
mov
int
loope
sbb
repnz
add
ds
out
lahf
push
adc
jecxz
xchg
mov
insb
test
insb
mov
add
pop
mov
loope
testl
inc
push
imul
dec
lea
xchg
aad
cs
add
pop
pcmpgtw
js
xchg
scas
push
ds
out
je
cmp
pushl
cmp
in
sub
pop
or
or
or
xchg
mov
add
or
xchg
pop
inc
sub
test
sub
xchg
cmp
stos
test
test
lods
cmc
les
divl
rcrb
into
jno
adc
icebp
ja
mov
lock
and
or
lods
or
adc
outsb
sbb
pop
out
push
rcrb
loopne
jae
mov
ds
sahf
sub
bound
jmp
and
in
jle
add
mov
popa
inc
fsts
jae
and
out
nop
xlat
sub
mov
fildll
fidivrs
fisubs
jmp
sti
addb
fidivl
in
fidivrl
xchg
cmpsl
inc
push
mov
outsl
inc
in
arpl
mov
push
call
pop
andb
std
mov
fs
pop
daa
sahf
pandn
sub
xor
inc
aas
sub
cwtl
fucomip
lea
cli
je
jmp
stos
pop
push
mov
fildll
std
repz
xor
aas
decl
push
jns
fisubrs
pop
xor
inc
imul
out
mov
and
mov
add
in
cmp
cmp
stc
sub
test
js
push
nop
daa
stc
mov
in
dec
mov
xchg
cwtl
sub
incb
inc
add
xor
call
or
sbb
push
push
pop
scas
call
jbe
sahf
mov
xchg
jne
enter
xchg
xchg
adc
pop
sbb
sub
fiadds
adc
sti
xor
mov
and
pop
std
push
imulb
jecxz
jle
movsl
inc
jg
add
test
push
popf
fsubrs
jl
xchg
xor
cli
inc
pop
mov
xor
push
mov
xchg
cwtl
push
icebp
sbb
dec
xchg
sub
inc
push
cmp
inc
stos
faddl
ljmp
dec
jb
scas
iret
call
leave
xor
mov
stos
jmp
aaa
fsubl
cmc
divl
sub
jle
xchg
rorb
mov
cmp
xchg
jecxz
pop
out
pop
popa
leave
mov
imul
icebp
lea
sub
repnz
dec
mov
jmp
inc
test
xchg
imul
and
cmp
cmp
add
mov
lahf
jecxz
repnz
mov
insb
sahf
ja
das
sbb
dec
loop
mov
loop
jno
mov
aaa
repz
inc
sub
lahf
mov
das
add
fwait
add
mov
stc
les
jle
mov
iret
jecxz
in
std
dec
add
inc
sub
inc
pop
and
aaa
mov
jb
mov
ljmp
push
sbb
les
xor
and
push
cmpsl
test
mov
test
gs
imul
dec
aam
repz
inc
int
or
mov
loope
lock
sbbb
loop
ret
popa
and
mov
inc
dec
rcl
dec
push
test
xchg
adc
ds
push
repz
pop
sub
jp
adc
aad
push
cmp
mov
sub
mov
scas
jb
cli
add
cmp
mov
sbb
jo
in
aam
dec
sbb
dec
in
xor
cmp
sbb
push
cmpsl
pop
insb
fnstenv
xorb
lea
inc
inc
cld
push
xlat
cwtl
std
scas
jae
pop
and
test
or
mov
call
stos
pop
push
pushf
mov
das
js
pop
jle
lods
std
pop
scas
outsb
dec
pushf
xor
sub
adc
or
out
nop
push
mov
insb
call
dec
lods
mov
aad
nopl
loopne
add
or
fistps
insb
xchg
jb
hlt
ret
pop
and
push
loopne
push
dec
and
jnp
insb
add
inc
lahf
fidivrs
lods
ret
pusha
inc
pop
and
call
les
mov
dec
cmp
incl
popf
xor
loop
and
jl
fwait
mov
mov
xor
pusha
mov
cmp
fwait
or
jmp
stos
push
mov
lcall
pop
cmp
loop
sub
and
fildl
rcrb
xchg
push
sarl
mov
xchg
clc
lea
sub
fucomp
fwait
inc
dec
sbb
rolb
and
ficompl
insl
and
inc
aam
test
int
and
adc
inc
data16
aad
lds
mov
push
jns
fbld
push
jmp
std
punpckhwd
andb
outsl
push
in
test
jae
cmp
xchg
cmp
inc
xchg
push
enter
adc
mov
dec
testl
jo
fsubr
popf
in
testl
outsl
xor
or
push
xchg
inc
leave
cmpl
and
insb
jg
add
xor
adc
push
push
iret
xorl
test
std
lret
xchg
dec
fadds
jecxz
stos
push
pop
out
dec
mov
popa
loop
or
sub
mov
inc
cmp
stc
pop
into
imul
test
in
in
adc
mov
sbb
xor
lods
gs
mov
out
je
jnp
pop
jo
pushf
mov
dec
push
loop
out
mov
mov
enter
ljmp
dec
adc
repz
pusha
dec
jecxz
jge
pop
cmp
test
inc
adc
pop
lahf
ss
sbbl
daa
cli
insb
int
test
jb
add
jo
leave
jmp
sbb
push
jmp
lods
jmp
push
or
fdivrl
fs
clts
mov
jb
mov
jmp
mov
sahf
sub
in
mov
pop
nop
adc
and
fmuls
pop
out
imul
test
mov
addr16
sbbb
jecxz
cmp
in
test
sbb
lea
sub
test
lcall
jb
push
jp
push
cmpsl
das
push
js
repz
icebp
adcl
dec
loopne
in
jmp
shr
sbb
jmp
fdivs
mov
mov
add
shlb
push
shrb
fs
jg
add
or
out
inc
cmpsl
mov
inc
dec
push
fwait
leave
xor
add
sbb
sub
iret
out
jmp
lods
dec
mov
scas
jp
sub
cmpsb
mov
stc
popf
hlt
add
inc
bound
pop
xor
mov
call
sti
scas
inc
mov
clc
clc
out
cmp
bound
mov
adc
imul
cmc
inc
sub
push
sbb
out
pop
jne
es
arpl
mov
sahf
in
sarb
jl
pop
push
ljmp
lock
out
jnp
pop
scas
and
xor
sub
fucomip
push
cmc
test
and
jae
in
roll
xor
das
shll
fisubrl
loopne
sbb
adc
mov
cmp
ret
arpl
lods
mov
xchg
movsb
mov
sbb
test
mov
rcl
sbb
jg
shl
dec
push
dec
mov
ret
xchg
cmp
sbb
and
sbb
push
push
pop
mov
add
loop
icebp
subb
cmp
std
xchg
lock
movsl
push
inc
sbb
pop
sub
hlt
mov
cmpb
fistps
or
push
xchg
push
mov
jg
fnstcw
lret
testl
orb
movsl
in
out
pop
outsb
aaa
cmp
data16
icebp
call
out
mov
pop
mov
fwait
pop
mov
std
xor
pop
arpl
mulb
lea
add
xchg
sub
add
fildll
sbb
mov
ret
int3
icebp
ds
xor
mov
icebp
xor
dec
cmc
dec
pop
repz
sahf
and
ljmp
and
cmp
int
add
mov
cs
mov
pop
fdivrs
xlat
adc
data16
pop
sarl
pop
pop
call
lret
adc
ret
jle
sbb
mov
test
sbb
cmp
sarl
and
push
mov
outsb
jl
into
and
out
ljmp
sub
ss
test
mov
cmc
mov
int3
je
mov
xlat
clc
or
cs
sarb
nop
dec
les
cli
lea
jge
dec
add
arpl
add
jo
movsl
lds
sbb
js
mov
loopne
push
jno
inc
rcrb
push
ljmp
xchg
cmp
enter
cld
iret
aas
add
sarl
xchg
decl
mov
cs
pop
mov
sbb
test
imul
iret
and
mov
mov
fadds
inc
mov
mov
dec
fnstenv
outsb
notb
sbb
pop
dec
mov
psubusb
sti
jbe
dec
mov
lods
pop
test
jbe
cltd
aas
lret
std
cltd
or
add
aam
adc
popa
lods
pop
icebp
lahf
pop
jp
add
js
out
stos
cld
xchg
add
mov
pop
or
dec
push
test
pop
out
pop
xchg
nop
push
leave
pop
mov
jle
mov
shrl
xchg
xchg
fisubs
imul
and
int3
dec
outsb
mov
pop
adc
inc
mov
xor
sbb
push
lcall
dec
mov
ja
mov
mov
shlb
push
fmul
xlat
add
ja
pop
icebp
movsl
aam
fidivs
lods
cmpl
xor
push
enter
fisubrs
adc
pop
pop
sbb
xor
cmp
push
scas
les
adcb
outsb
or
lock
sti
jnp
sub
jp
ja
mov
jbe
in
call
lret
hlt
shlb
jl
mov
push
mov
jmp
jbe
or
jbe
loopne
mov
repz
das
movsb
jp
jge
push
movsl
movsb
in
movzbl
lods
fdivrl
fwait
lea
test
cmpsl
fnstenv
push
test
sbb
add
out
adc
cmpsl
push
fdivp
jnp
mov
repnz
mov
xbegin
out
sbb
mov
cltd
jecxz
lret
mov
sti
mov
ja
mov
incb
mov
and
adc
fisttpl
or
dec
iret
mov
scas
adc
lret
xor
xchg
jb
sub
test
jmp
ja
inc
lds
cmp
mov
jg
fildll
movsb
push
and
mov
mov
sub
outsl
leave
sub
and
jnp
int
stos
ja
or
test
mov
sbb
push
jb
fdivs
adc
dec
jb
mov
jp
jg
pop
cmpsb
pop
out
add
jecxz
cli
xchg
dec
out
xlat
push
mov
icebp
adc
ljmp
fcoms
test
xor
lods
in
sahf
mov
mov
das
jle
fnstcw
or
cmc
mov
mov
in
loope
push
scas
je
mov
cltd
fidivs
xchg
repz
and
cwtl
and
push
or
push
mov
rcrb
sti
inc
rclb
pop
bnd
pop
push
or
push
pop
mov
movsl
mov
filds
sbb
aad
movsl
cmp
add
repz
push
mov
dec
fwait
sbb
pop
inc
loopne
sub
jecxz
mov
mov
loop
ret
jecxz
fnsave
test
mov
addl
fldl
mov
jbe
jno
lea
and
mov
fcomip
xchg
mov
lods
into
scas
cmc
cld
shll
dec
cwtl
mov
or
xor
fbstp
out
icebp
adc
std
cltd
imul
flds
xlat
xor
jmp
lock
repz
dec
dec
out
xchg
in
enter
mov
sub
dec
scas
jno
cmp
fwait
jle
add
mov
push
mov
push
rcr
movsl
adc
movsl
dec
cmpsl
les
dec
test
xchg
movsl
shrl
les
jmp
dec
std
push
in
push
ss
scas
in
jne
mov
mov
dec
pop
iret
loope
sub
inc
dec
notl
cmp
mov
jl
jle
xchg
mov
enter
outsb
mov
push
shlb
push
fisttpl
and
test
test
sbb
test
int
pop
jbe
xchg
rep
xchg
mov
mov
mov
push
pop
in
inc
push
cmc
and
mov
cmpsl
dec
notb
shlb
add
je
decb
scas
fsub
sti
dec
popf
dec
fdiv
cmp
icebp
inc
iret
push
mov
daa
mov
test
loope
insb
call
into
das
data16
popa
or
jecxz
imul
add
lret
int
icebp
push
or
xchg
pop
lahf
adc
sbb
std
fwait
fs
mov
mov
xchg
mov
adc
jbe
scas
jle
cli
es
adcl
test
pop
mov
pop
push
xor
push
inc
push
xchg
out
test
ja
xor
mov
shl
push
cmp
push
dec
ret
mov
loope
mov
imul
inc
or
ret
xchg
sbb
dec
shll
in
sbb
adc
fxtract
pop
mov
mov
jb
push
cwtl
outsl
lahf
sbb
mov
jg
xchg
insl
sahf
pop
push
xlat
lret
jnp
mov
add
sub
mov
icebp
mov
push
xlat
xchg
cwtl
das
ret
mov
xchg
nop
cmp
mov
jl
xchg
cmpsb
cwtl
pop
flds
or
mov
imul
push
push
cmp
mov
mov
sbb
cmp
dec
dec
mov
sub
test
dec
jg
int3
gs
dec
and
shr
orl
pop
repz
mov
loop
xlat
test
ds
imul
xor
adc
sti
inc
mov
movsl
int
rol
outsl
cmp
mov
std
or
sub
jl
or
ljmp
dec
mov
lret
cli
and
pop
xchg
mov
xchg
sub
int
cmp
fwait
lods
pop
mov
jbe
hlt
push
int3
xor
push
fs
pop
int
dec
in
push
dec
and
mov
cmp
shll
jno
xchg
add
ret
fstpt
pop
addr16
pop
adc
adc
xchg
push
or
xchg
inc
dec
or
in
xor
jecxz
pop
cmpsb
rorb
stos
pusha
js
lret
inc
cltd
std
xchg
repnz
les
cmpsl
cmc
rcrb
mov
lret
jmp
or
or
mov
fisubrs
xchg
sbb
and
orb
dec
adcb
movl
movsl
mov
insl
adcb
xor
adc
test
cs
sahf
jns
gs
lcall
inc
mov
fidivl
xchg
lahf
jmp
shlb
fnstenv
and
out
inc
rorb
fs
adc
out
inc
mov
dec
aas
cmp
dec
and
out
pop
pop
imul
mov
into
ret
repnz
aad
popf
mov
pop
jne
jmp
pusha
inc
shlb
adcl
jae
sub
in
dec
mov
jbe
in
add
mov
scas
ds
clc
push
xchg
je
in
movsl
add
mov
repnz
mov
daa
dec
xchg
add
addr16
mov
lds
test
test
outsl
cmpsb
je
dec
add
mov
push
mov
andl
or
mov
cmp
inc
cmpsl
je,pt
push
cmpb
adc
setnp
rcl
xchg
or
mov
mov
fbstp
pop
add
inc
mov
icebp
jnp
adcb
es
xor
es
stc
inc
repnz
sbb
les
jp
fcmovb
stos
xor
and
sahf
mov
cltd
ss
adc
push
pop
sub
xor
add
lods
aas
jmp
int
add
ss
test
fcmovb
insl
dec
call
lret
mov
es
and
arpl
push
jbe
int3
test
sub
dec
push
xchg
jo
add
mov
mov
sub
pop
movsb
lods
cmp
jge
in
xor
incb
test
adcl
ja
jmp
push
push
push
leave
inc
add
mov
xchg
mov
cmp
stos
jae
pop
clc
mov
sub
out
repnz
lea
mov
rcl
mov
test
push
loope
fildl
add
mov
imul
dec
and
test
or
fs
lret
shr
dec
mov
add
pop
ret
mov
push
mov
pop
fdivr
mov
sbb
xor
inc
insl
mov
lods
in
push
mov
scas
dec
and
test
cmpsb
repz
sbb
xchg
xchg
mov
stos
in
test
sarl
adc
xor
dec
push
lock
data16
jp
test
std
add
mov
shlb
push
das
cmp
push
jmp
mov
xchg
in
adc
stos
sbb
or
shrb
adc
xchg
jno
mov
push
mov
or
bound
fwait
inc
lcall
or
push
imull
shrd
das
shlb
adcl
mov
sahf
fmull
test
shrl
cwtl
mov
adc
mov
and
pop
call
add
lret
mov
mov
clc
mov
rclb
ficoml
inc
pop
jge
fsubrs
call
xor
push
fsubrl
stos
shll
jno
jle
fdivs
out
jb
dec
shlb
xchg
sub
xchg
cltd
and
bnd
mov
ret
fldenv
pop
mov
sbb
jge
scas
pop
inc
in
loope
popa
jg
add
int3
cmp
sahf
xchg
jge
pop
into
gs
in
jbe
add
imul
push
cmp
push
push
movaps
repnz
cmpsb
outsb
testb
cmpsb
sub
push
leave
fld
xchg
jae
dec
dec
inc
popf
icebp
fdivs
cwtl
inc
loope
sarl
inc
push
stc
mov
mov
sbb
xchg
mov
addr16
or
pop
xor
xchg
and
jecxz
pop
fadd
xchg
add
addr16
je
lds
dec
out
add
adcb
push
mov
fldl2t
mov
js
mov
mov
sub
cmp
inc
test
xchg
jge
jo
push
mov
pop
lea
jmp
stos
ficompl
inc
pop
hlt
jae
inc
pop
loop
add
fidivrl
xchg
outsb
xor
sbb
push
mov
insl
mov
ja
add
dec
xlat
pop
sahf
or
seta
ja
ljmp
ljmp
jno
adc
stos
scas
mov
test
cmp
pop
sti
lahf
jne
int3
fstpl
jle
test
fstpl
cmp
xchg
mov
out
jno
inc
data16
inc
rolb
stos
cld
cltd
mov
mov
push
lods
stc
and
js
fstpt
adc
mov
jo
sti
xor
movsb
push
push
sub
lods
mov
fstps
or
xchg
jmp
jns
sbb
mov
adcb
cs
hlt
pop
xchg
inc
inc
mov
mov
fiadds
dec
mov
inc
inc
inc
movsb
out
ds
or
insl
dec
lds
repnz
clc
aaa
mov
inc
inc
inc
xchg
mov
outsl
mov
adc
mov
jmp
and
mov
cmp
andl
mov
fidivrl
and
add
lods
pop
mov
jmp
les
icebp
pop
inc
push
inc
push
push
in
ss
adc
lcall
stc
sbb
fdivrl
aas
shl
push
out
cmp
xor
movsl
and
xchg
sub
iret
add
clc
cmpsl
dec
test
xlat
sbb
cltd
sbb
dec
lcall
adc
loope
push
stos
popa
faddl
add
lret
adc
repnz
cli
adc
paddw
inc
test
lods
inc
push
roll
sub
adc
cmc
idivl
mov
or
push
popf
dec
xor
and
out
ljmp
pop
xor
cwtl
mull
mov
lret
jno
mov
mov
popa
xchg
pop
xchg
fistps
repnz
or
xchg
pop
call
push
cmp
daa
inc
insb
jp
dec
inc
fnstcw
ljmp
addr16
pop
lret
shll
inc
lret
xchg
sbb
xchg
push
xchg
dec
mov
imul
pop
fdivrp
dec
mov
mov
jmp
cmp
dec
lahf
inc
sbbb
fwait
inc
out
xchg
jge
enter
push
sub
jecxz
arpl
mov
adc
movsb
and
sbb
xor
imul
sub
adcb
push
jae
inc
pusha
jo
push
jge
into
adc
push
adc
xor
mov
fnstenv
jb
sub
aaa
cmp
add
js
iret
pop
orl
icebp
lret
in
adc
adc
cmpb
adcl
test
sub
outsb
push
jp
pop
insb
xor
js
pusha
adc
pop
pop
aad
or
mov
testb
pop
ds
mov
inc
mov
sub
add
mov
out
inc
outsl
mov
mov
mov
sub
je
ljmp
or
int3
dec
psubd
popa
mov
push
mov
punpckhwd
orl
sbb
or
iret
jns
iret
or
lret
ret
xlat
adc
xchg
aas
mov
cmpsb
inc
push
lret
cli
roll
mov
imul
cmp
leave
dec
ret
sub
addr16
rcll
pushf
shll
and
mov
jb
pop
mull
imul
mov
adc
pushf
int
xor
fnstcw
ficoml
jb
add
clc
popl
gs
fs
sub
adc
inc
mov
pop
jo
cmpsb
and
dec
dec
push
std
dec
xchg
in
mov
mov
xchg
push
fwait
xor
fs
ret
xor
dec
pop
or
rcll
and
mov
sbb
lds
pusha
sahf
mov
iret
cli
or
dec
cmp
movsl
out
mov
notl
outsl
addl
inc
neg
shll
cmc
xchg
sub
push
inc
or
adc
sbb
cld
dec
scas
cmc
popf
jg
mov
jecxz
mov
and
flds
das
frstor
mov
lcall
dec
fsubs
cmp
pop
mov
punpckldq
inc
stc
push
and
scas
adc
iret
xorb
jle
sbb
sbb
ljmp
fwait
jl
sbbl
insb
jge
sbb
xchg
fbstp
mov
mov
fbstp
mov
push
repnz
xchg
dec
dec
fwait
loop
and
add
js
insl
push
or
jl
into
sbb
jbe
jbe
inc
jp
mov
add
in
out
sub
xchg
mov
rcl
cmpsb
subl
daa
pop
movsb
vpaddw
outsb
jb
pop
testb
xorb
in
or
dec
ljmp
sbb
faddp
std
addr16
cs
xor
dec
cld
loope
cmpsb
pop
fnstenv
xchg
bound
pop
or
jnp
and
push
and
dec
push
and
icebp
dec
repz
jecxz
fsubs
mov
pop
subl
or
cmp
inc
or
jb
sbbl
adc
xchg
and
enter
gs
fsub
xchg
fldt
dec
lock
dec
or
fwait
ss
inc
shrb
pop
insl
lahf
mov
shl
jp
test
mov
shl
mov
sub
aaa
inc
lds
addr16
repz
jne
sahf
xchg
lea
mov
lret
bound
addr16
mov
repnz
inc
and
push
lds
add
fistpl
nop
test
mov
sbb
jne
push
add
jp
pop
nop
lcall
outsl
xchg
add
jle
pop
cmp
je
les
xchg
mov
xchg
test
sahf
cmp
imull
or
mov
sahf
cmpsb
faddl
popf
inc
stos
xchg
cld
fldl
cmp
add
mov
adc
push
push
and
pusha
mov
jb
sbb
xchg
push
xchg
test
and
pop
or
mull
inc
xchg
icebp
testb
lret
adc
orl
in
or
les
adc
shll
inc
mov
push
inc
push
ficoml
inc
aas
mov
bound
imul
outsl
adc
jecxz
movsl
clc
out
jecxz
pop
loop
xchg
rorb
sbb
lcall
mov
scas
adc
and
movsl
nop
sbb
mov
mov
jns
adc
push
repz
cli
ja
fidivl
xchg
pop
shl
adc
push
sbb
jmp
and
jge
xlat
jo
mov
jle
jne
xchg
sbb
inc
bound
push
jle
add
es
inc
add
clc
and
sbb
repnz
adc
and
inc
rcrl
lcall
lret
int3
out
test
cmpsl
adcl
pop
lods
pusha
repnz
filds
shrb
sbb
and
xchg
add
xor
popa
and
xchg
inc
insb
or
cmpb
pop
mov
fdivs
loope
hlt
fstl
sub
repnz
in
and
push
lods
pushf
stc
lock
fucomp
cmc
jno
push
mov
dec
xchg
jae
out
or
fnstsw
cvtps2pd
adc
inc
pop
fsubrs
jl
bound
mov
dec
push
test
testb
das
push
mov
jae
cmc
mov
push
repz
jp
mov
leave
out
mov
outsb
add
outsb
jnp
test
adcb
cmp
push
pop
cmp
adc
push
and
jae
pop
insl
rorb
cs
cli
pop
dec
mov
outsb
mov
fdecstp
mov
lock
pusha
and
jno
mov
ss
mov
cmp
scas
outsb
ja
or
imul
subb
insl
sub
inc
pop
je
jo
pop
mov
bound
out
ss
mov
rorl
xchg
call
jno
jae
mov
les
enter
loop
scas
mov
jno
cpuid
mov
test
sbbl
pop
rcll
mov
jnp
xchg
jns
xor
sbb
imul
xlat
repz
pop
mov
mov
push
ljmp
arpl
gs
lods
jo
dec
mov
dec
or
xor
dec
insb
sub
pop
push
mov
jbe
mov
mov
les
cmp
movsl
add
pop
enterw
cld
mov
pop
insb
lret
cwtl
ficoml
jae
sbb
dec
and
cmp
popf
cmp
pop
imul
sahf
jge
jp
inc
pop
mov
push
out
dec
pop
xchg
incl
aad
and
mov
or
adc
fcomps
adc
shrl
adc
xor
out
in
add
dec
xchg
dec
shrl
je
push
mov
les
fmuls
push
push
jnp
or
pop
jo
mov
mov
or
stos
xorb
cs
adc
and
inc
jmp
arpl
pop
popf
insl
dec
jmp
lahf
xor
xlat
lock
test
clc
fildl
rclb
mov
mov
mov
movsl
sub
sub
scas
std
push
test
jae
int3
lret
dec
and
fsub
cmpsb
mov
mov
stos
sub
dec
jno
andl
jbe
cmpsb
sbb
std
xchg
mulb
jbe
add
sbb
sbb
aaa
adc
inc
mov
repz
shr
pop
cmp
movsl
leave
cmp
push
jne
arpl
xchg
es
test
sub
jl
aas
cmp
jno
mov
jae
flds
fwait
cli
stc
inc
loop
cmpsb
adc
xor
outsb
inc
or
fimull
lahf
mov
es
pop
scas
inc
push
loopne
jo
scas
fxch
sub
cmpb
insl
lahf
mov
push
mov
add
push
cmp
pop
sbb
mov
scas
in
test
iret
arpl
jecxz
or
add
jp
jp
fldcw
inc
insb
add
rcrb
test
pop
cmp
jbe
cs
lret
cmp
xchg
dec
rorb
fs
inc
outsb
orl
adc
imul
dec
notl
dec
sub
stos
pop
xchg
push
mov
jae
int
lods
gs
es
fcompl
aad
push
pop
insl
movsb
mov
inc
mov
add
cld
in
jo
sbb
dec
adc
xchg
xchg
mov
daa
lret
and
mov
sbb
mov
or
leave
test
cwtl
das
push
test
ret
sbb
adc
aaa
into
out
jb
and
adc
xor
lret
fxch
dec
bound
shll
inc
insl
inc
mov
sbb
cld
sbb
fstps
sbb
loope
xor
sbb
push
push
fs
mov
pusha
orb
stos
cmpsb
pushf
xor
pop
ficoml
pop
repz
or
sbb
imull
xchg
outsl
sbb
loopne
nop
decl
xor
aam
stc
cmp
scas
push
mov
cwtl
sbb
add
push
pop
fildll
insl
fwait
jmp
xchg
shll
pop
cli
xchg
mov
leave
jle
lahf
push
mov
shll
sbb
xor
out
mov
lods
das
add
rcrl
gs
inc
std
pop
adc
dec
and
aad
sar
and
scas
outsl
pop
dec
clc
or
sub
das
dec
cmpsb
inc
or
dec
jecxz
fs
xor
rcll
lret
xor
decb
pop
fidivrl
push
in
filds
out
inc
jp
inc
dec
pushf
dec
iret
mov
aaa
aas
sahf
data16
push
jae
sub
pop
mov
mov
mov
mulb
aas
popf
xor
mov
inc
inc
scas
xchg
outsl
xlat
ret
adc
jnp
xchg
pop
mov
popf
cmc
mov
lods
cmp
or
adc
push
cs
repnz
mov
in
imul
mov
sub
dec
lock
inc
inc
inc
adc
xor
mov
and
inc
mov
cmpsl
jp
in
mov
mov
dec
xchg
fisttpll
xchg
test
sub
jno
xchg
mov
or
jnp
add
jp
in
test
push
sti
call
push
mov
and
pop
xor
mov
lret
std
push
mov
lcall
daa
lret
push
mov
fisttpl
dec
outsl
icebp
cltd
sub
popa
dec
aas
push
mov
push
das
cmp
loope
cmp
ds
or
push
rcrb
sub
lret
sbb
jae
pop
or
xchg
add
insb
mov
add
jo
xchg
xchg
cmpsl
cmp
push
sbb
mov
lds
push
ret
stos
icebp
sub
in
test
fcoml
rcl
add
aam
je
push
shll
push
iret
cmp
jmp
or
andl
sub
lret
bound
mov
sti
pop
push
ffreep
imul
xor
mov
test
jne
out
out
repnz
daa
aas
lea
push
inc
fs
leave
mov
and
xchg
pusha
decb
les
sbb
ja
loop
sub
repz
xchg
push
out
adc
mov
fnsave
dec
pandn
test
or
dec
adc
add
xchg
push
push
icebp
cmp
movsl
push
jb
jo
subb
leave
mov
mov
cltd
sub
xlat
outsb
push
push
cwtl
adc
mov
jmp
repz
jno
sub
cwtl
dec
mov
lods
xchg
insb
sbb
push
out
xchg
out
std
xchg
lcall
and
sbb
mov
mov
xchg
das
fstl
test
mov
insl
adc
call
jo
idivb
mov
jmp
aas
aam
jo
add
sbb
mov
ja
push
adc
lahf
jae
mov
push
mov
popl
cmpsb
adc
nop
mov
out
and
cmp
jecxz
in
adcl
aas
mov
test
ljmp
push
or
inc
enter
jle
xchg
fmuls
roll
mov
shlb
lcall
sbb
repnz
lcall
in
into
js
xor
aaa
push
push
test
pop
insl
sbb
shlb
pop
aad
sbb
pop
cmp
jbe
scas
xchg
cmp
sub
inc
pop
mov
push
into
push
rcll
out
sbb
int3
test
xor
push
cmp
pop
push
mov
es
and
lods
or
or
mov
out
out
sbb
pop
cmp
fs
pushf
shrl
popa
mov
in
in
mov
adc
pop
repz
add
mov
xchg
push
adc
movsl
inc
jbe
jbe
jmp
jne
aam
dec
loope
cmc
pop
xchg
mov
add
mov
jnp
popa
lods
rcl
add
dec
dec
and
xlat
dec
mov
pop
mov
and
adc
jecxz
xchg
adc
push
mov
and
into
mov
jbe
ret
popf
mov
mov
test
add
popa
inc
sub
fdivl
jg
addr16
movsb
lods
cs
xor
cmc
cmc
lods
inc
jp
lods
and
int3
repz
sbb
jns
testl
push
je
test
cld
inc
push
pop
inc
add
push
adc
push
adc
adc
mov
lea
cld
xchg
pop
or
push
cmp
jo
mov
test
movsb
arpl
int
dec
mov
mov
hlt
inc
stos
pop
fisubl
sub
inc
outsb
pop
loopne
test
jbe
adc
bound
dec
jmp
inc
insl
pop
aam
nop
mov
gs
dec
in
mov
int
fnstsw
scas
push
xlat
repnz
jl
jne
pop
negb
mov
scas
rcr
mov
aas
add
arpl
popa
sahf
adcl
sarl
aad
sbb
ljmp
cmc
iret
idivl
mov
jl
inc
iret
rcr
jmp
scas
sbb
adcl
icebp
xchg
aad
pop
inc
sub
lahf
pop
xor
ret
into
enter
sbb
dec
mov
xor
lods
cmp
push
inc
pop
dec
xor
leave
pop
andb
mov
insb
sbb
inc
popa
clc
jno
fsubr
clc
call
in
dec
xor
rcll
rcrl
insl
lret
xchg
pop
les
lods
xor
dec
mov
cld
jecxz
pushf
adc
outsl
addl
pusha
imull
jl
aad
es
inc
negb
cmp
push
cmp
test
arpl
setno
subb
and
out
push
xchg
testl
sbb
or
push
in
xorb
movsb
mov
adc
and
sub
mov
stc
jmp
fchs
movsb
cmp
insb
add
mov
imul
push
out
movsb
aas
icebp
int
mov
testl
or
mov
je
shlb
outsb
xchg
push
and
mov
outsb
mov
push
sbb
call
popa
ljmp
pop
mov
and
cmp
stos
and
fidivrs
jg
into
pushf
lods
dec
data16
leave
sti
stos
cmp
xorl
or
jmp
stc
nop
ja
inc
addr16
scas
mov
push
xorl
lea
sub
push
in
addr16
in
inc
loop
xchg
ds
jecxz
cmc
adc
movsb
repnz
dec
movsb
pop
gs
cmp
lods
sarl
test
insl
push
adc
mov
ds
rcl
mov
ja
mov
jne
pusha
addr16
nop
aaa
jbe
je
lds
fs
xor
data16
lods
or
fwait
jp
and
and
dec
std
cmpsb
and
xlat
mov
push
shrl
mov
adcb
divl
test
popa
sbb
ds
xlat
in
jg
sbb
jg
mov
pop
mov
nop
jnp
and
sbb
shll
sub
add
in
lock
mov
jle
ret
es
loope
in
xor
daa
dec
loope
or
jp
insb
jns
mov
inc
fxam
lock
pusha
divl
mov
pop
mov
sub
mov
xor
jmp
xlat
int
inc
sti
and
pushf
pop
pop
rcrb
sbb
xor
loope
jle
mov
test
mov
xchg
mov
jne
retw
icebp
sub
pop
mov
xchg
push
jmp
lcall
xchg
loop
aam
lds
loopne
sti
jp
mov
test
mov
inc
jl
popa
jns
sbb
loop
shll
es
pop
insl
add
and
subl
push
mov
sub
inc
sbb
lods
mov
adc
rcrl
das
adc
pop
jne
rcrl
cmp
shll
add
push
cli
sub
xchg
fistps
mov
xor
xor
leave
xchg
pop
inc
xchg
push
outsl
push
jne
loopne
setne
out
test
aad
insl
inc
test
mov
ss
xchg
faddl
add
and
arpl
out
rcrb
and
jle
jo
cmp
insl
jno
lods
push
xchg
ficomps
es
popf
stc
mov
dec
test
xor
sub
jmp
inc
loopne
mov
hlt
xor
bound
or
lea
outsl
cmp
popf
imul
push
int3
sbb
or
cmp
jecxz
out
xchg
jb
push
cmp
xor
shll
sub
push
adc
jnp
mov
stos
mov
out
lods
push
mov
andl
xchg
pop
hlt
pop
pop
out
cli
pop
jno
xchg
mov
into
push
mov
rol
mov
lret
enter
aad
mov
and
and
or
popa
pop
jge
cld
push
jns
out
add
jbe
mov
or
pushf
daa
lea
sub
xchg
jne
xchg
push
icebp
shlb
mov
roll
rolb
sbb
push
inc
xchg
mov
jg
test
movzwl
dec
std
fcoml
xchg
out
push
in
insb
shrl
add
xchg
inc
fidivl
scas
fdivl
popa
mov
fs
aas
outsb
les
cmp
dec
fidivrs
dec
add
nop
jle
sub
lods
xor
jle
outsl
cmp
mov
or
test
xchg
push
add
xor
pop
scas
sahf
clc
aam
in
xchg
std
push
adc
dec
popa
fisubrl
or
dec
scas
aaa
xor
adc
stos
add
bound
loop
xlat
call
dec
cmpsl
adc
addr16
icebp
inc
data16
mov
js
and
mov
fwait
lods
jb
cmpsl
leave
mov
sbb
mov
add
bound
mov
sbb
ret
cmpsb
popa
loopne
ljmp
ss
adc
int
jb
mov
imul
sbb
add
test
fs
push
call
iret
mov
pusha
pminub
aas
dec
or
xchg
sub
or
mov
mov
push
or
adc
lcall
in
mov
sbb
test
xchg
cmpsl
ret
clc
es
cltd
xchg
mov
rcrl
mov
xor
push
rol
shlb
mov
repnz
cs
mov
mov
andl
sbb
adc
jne
jl
test
cmc
hlt
mov
mov
je
andl
sbbl
scas
dec
add
loop
push
stos
dec
test
movsb
ds
mov
aad
xor
loopne
and
xor
outsb
sub
fldl
rcrb
inc
pushf
dec
jb
rclb
mov
roll
push
inc
cmp
dec
jecxz
mov
push
mov
out
test
jmp
bndstx
sbb
add
jnp
lds
icebp
scas
xchg
inc
inc
aad
mov
pop
mov
fld
lods
mov
pop
jecxz
pop
leave
rcrb
ret
nop
jbe
subl
les
jne
push
mov
dec
fstpl
mov
cmp
mov
inc
or
cmpsb
xchg
xchg
fmul
xchg
ljmp
cmp
dec
rcr
dec
mov
pop
bound
or
call
dec
and
out
xchg
in
leave
xchg
jmp
cmp
pop
jo
lea
mov
xor
pushl
jl
pushf
sahf
inc
lahf
adc
repnz
bound
sbb
pop
sub
jns
loop
scas
lea
cmp
push
lock
cs
mov
add
repnz
call
rcll
adcl
clc
dec
mov
mov
fcoml
cmpsl
dec
movsl
pop
mov
nop
xchg
js
out
test
or
je
dec
sub
mov
out
mov
aam
cmp
push
adc
testl
stc
orl
cmp
adc
inc
push
pop
adc
mov
mov
les
enter
push
jp
pop
and
nop
das
in
xchg
sahf
push
xor
push
and
push
xor
jbe
mov
jae
adc
mov
pop
dec
test
sbb
adc
mov
icebp
pop
jno
sahf
insb
js
mov
call
test
test
xor
mov
dec
lahf
in
jbe
push
jmp
mov
dec
imul
push
frstor
ret
xlat
imul
sub
pushf
ret
pusha
sub
push
shl
in
cmpsl
jg
aas
or
shrl
insl
xor
jle
sub
pop
push
jmp
mov
xchg
mov
mov
and
iret
orb
icebp
std
push
aas
xlat
sbb
adc
mov
ret
cwtl
cld
dec
inc
sti
scas
push
mov
repnz
aam
nop
insb
adc
pop
dec
mov
aam
and
inc
std
adc
lret
cmpsb
inc
push
pop
ljmp
mov
mov
test
adc
pop
pop
bound
fmull
add
xchg
call
push
add
shll
mov
xor
and
xchg
rorb
rcrb
pop
arpl
fs
inc
std
or
add
imul
out
cmp
ret
xchg
dec
mov
dec
mov
adc
es
and
sbb
aaa
and
cwtl
jg
das
test
ds
aas
or
ss
pop
iret
dec
xchg
std
inc
filds
and
and
adc
mov
ret
fsubl
fs
cmp
sbb
lret
fldl
xchg
mov
ret
ss
xchg
test
out
pop
cmp
popa
xchg
rep
sbb
dec
dec
push
repz
inc
xchg
in
jp
pushf
jle
into
xor
scas
loopne
fstl
in
gs
lock
ds
mov
cmp
push
and
jns
adc
jl
jecxz
and
mov
sbb
rcrl
add
dec
out
adc
push
mov
iret
fwait
jns
sbb
jp
xchg
pop
xlat
mov
hlt
xchg
or
shll
adc
jno
scas
lcall
sub
and
mov
xchg
add
cwtl
das
sub
loop
push
lods
daa
mov
insl
fstpl
ror
pop
jle
cmpsl
cs
mov
rol
xchg
pop
repnz
xor
jl
pusha
cmc
ss
cmp
jb
inc
movsl
icebp
inc
int3
lahf
jbe
mov
mull
add
les
std
jb
mov
push
mov
shr
add
mov
int3
loopne
decb
scas
mov
fwait
xor
rcll
xor
popa
scas
cmpsl
jnp
and
movsl
fucomip
jbe
repnz
lret
mov
inc
loop
jge
repz
xchg
dec
test
mov
mov
sti
adc
adc
lods
push
cltd
adc
outsb
and
dec
and
inc
xchg
mov
dec
fbstp
cld
dec
xchg
inc
les
movsl
add
scas
ja
sub
hlt
jbe
mov
jl
mov
dec
cmpsl
out
adcl
adc
js
dec
pop
jmp
sub
mov
jo
mov
ja
out
mov
jb
push
rcr
cmpsb
in
mov
mov
imul
adc
stc
mov
xchg
test
pusha
lret
cltd
cmp
je
mov
sub
or
popa
sti
jns
out
andl
jns
push
sub
int3
xor
jge
aas
roll
cmp
xchg
push
sarl
add
mov
jbe
mov
test
mov
es
fcmovb
pop
adc
mov
jno
aaa
jbe
inc
das
lock
cld
repnz
cwtl
push
decl
imul
ror
cmpsb
in
lcall
mov
mov
adcb
aaa
aas
dec
or
fwait
mov
addb
xchg
lahf
negl
mov
jb
cmp
testl
fadds
sti
rcl
push
cs
aas
mov
shll
rsqrtps
mov
jmp
int
loop
mov
test
fisubs
movsl
push
xchg
adcl
repz
jae
push
sub
add
dec
cmpsl
push
pop
cmp
add
sbb
dec
jno
mov
add
shlb
pop
repnz
add
daa
or
or
add
xchg
mov
in
xor
push
xchg
xchg
xor
inc
fisubl
push
inc
mov
pushl
leave
mov
pushf
subb
sbbb
mov
pop
arpl
and
call
lock
push
mov
cmp
sbb
lahf
or
or
cmpsb
ja
loope
icebp
popa
aad
rcll
mov
cmp
ficoms
bound
movsl
push
dec
loop
push
mov
int
dec
or
roll
jbe
popa
pop
lds
fs
jg
decl
test
or
adc
dec
lahf
xorb
pop
mov
icebp
inc
andb
mov
popl
testl
lea
mov
hlt
lock
dec
push
mov
loope
mov
or
sub
rol
pop
push
mov
popf
fs
ds
jge
scas
fidivs
mov
int3
fsubr
icebp
xlat
dec
rcrb
sub
popf
popa
clc
leave
dec
mov
mov
lea
jmp
or
mov
pop
notb
cmp
xor
ret
test
dec
xchg
sub
das
cmp
jbe
mov
xor
cmpsb
repz
inc
jp
adc
push
push
jb
pushf
cwtl
and
cmpsb
bound
pop
xlat
mov
and
sub
dec
loopne
dec
orl
push
push
or
aas
dec
dec
add
stos
dec
dec
loopne
lret
fldenv
add
mov
inc
pusha
divl
jo
push
sar
adc
sub
xchg
repz
aad
mov
repz
ja
xchg
int
cmpsl
cmp
mov
push
jle
and
addl
and
xchg
gs
enter
test
jns
cwtl
data16
outsb
daa
sahf
scas
packsswb
pop
imul
ret
sbb
nop
and
ljmp
sbb
mov
add
lret
addl
pop
mov
roll
mov
xor
addr16
push
lods
ljmp
dec
popf
or
and
push
ret
into
mov
orb
sbb
mov
imul
fincstp
jae
push
cmp
or
mov
mov
dec
lods
inc
jns
test
xor
icebp
movsl
sar
bound
gs
mov
std
or
sbb
outsb
mov
es
push
pushf
xchg
mov
mov
int3
adc
inc
aam
inc
pop
jne
inc
push
daa
and
lahf
int
add
mov
mov
jmp
mov
or
and
data16
lret
or
jle
rcpps
inc
cwtl
jmp
sub
fnsave
ja
imul
cmp
popf
xor
cltd
xchg
push
jo
pminub
inc
cmovbe
cmp
sahf
scas
fcompl
jp
inc
jl
pop
jmp
mov
fdivs
mov
addl
and
sbb
cmpsb
dec
sbb
rep
xlat
cmp
sbb
lret
leave
subb
push
ljmp
push
mov
sub
jecxz
jge
jmp
inc
xchg
mov
mov
out
pop
pushf
dec
adc
jnp
arpl
xor
fmulp
xor
jecxz
push
dec
ljmp
ss
push
mov
mov
into
in
arpl
adc
push
cltd
stos
xor
jne
add
push
repz
pop
ds
mov
cmovle
mov
test
mov
sbb
int
mov
xchg
in
push
stos
xchg
jne
std
stc
pop
push
flds
or
clc
jae
cli
movsb
sbb
clc
and
add
and
inc
and
mov
cli
jle
std
xchg
xor
and
mov
push
out
lds
mov
cmp
push
mov
scas
push
repnz
mov
jl
int3
pop
stos
lods
add
or
jne
mov
adc
adc
xchg
jns
push
adc
or
mov
loope
or
jno
sarl
or
add
es
mov
notb
xor
rcrb
test
les
pushf
sbb
jmp
out
inc
fldt
push
fistpl
jle
push
fwait
push
shlb
add
sbb
push
pop
lock
insl
push
cltd
call
fnstenv
cmp
dec
js
lahf
mov
rol
fsts
jno
add
xor
cli
mov
fstl
bound
rcr
lcall
fs
sub
xlat
outsb
mov
scas
sbb
ljmp
dec
sahf
in
stos
inc
push
push
mov
push
or
mov
sub
push
sub
and
outsl
pop
jbe
jl
xor
push
iret
mov
adc
inc
repz
dec
push
lods
adc
fdivrl
and
fstpl
loope
sbb
xchg
sahf
stos
push
mov
jbe
bound
lods
repz
xchg
sub
pop
std
push
mov
mov
js
fisubl
inc
cltd
mov
int3
jae
pushf
xor
fsubrl
jle
inc
mov
sbb
mov
adc
dec
and
mov
stc
inc
add
push
pop
ret
push
sub
cmpsl
mov
add
je
dec
bound
mov
in
dec
mov
mov
ret
dec
hlt
fs
sub
test
out
testl
loop
ret
shll
cli
addr16
ficoms
inc
arpl
dec
test
out
inc
pop
divb
pop
adc
sub
jmp
jne
push
or
mov
jne
sbb
leave
xchg
lret
movl
stc
xor
inc
test
into
jno
cmpl
dec
aad
in
pop
pop
fwait
pop
cmp
pop
daa
xchg
xchg
sbb
mov
xor
aad
insb
shl
xchg
and
outsb
push
mov
pop
ror
les
mov
push
push
xorb
sub
outsl
xor
push
mov
xchg
sbb
add
push
aaa
and
sub
and
push
adcl
mov
les
mov
cmpsl
out
iret
push
and
add
iret
cmpsb
ret
adc
test
xor
les
sbb
data16
xlat
xor
jbe
je
mov
mov
mov
xor
movsl
push
jmp
inc
dec
cmp
jae
inc
jecxz
cli
and
movsb
fisttpl
inc
scas
pop
mov
dec
dec
stos
inc
divl
enter
mov
adc
sbb
nop
aas
lcall
cmp
call
inc
jmp
inc
mov
in
mov
lret
jle
xchg
cmp
sbb
dec
out
icebp
movsl
or
dec
and
pop
movsl
pop
into
jae
insb
loope
xchg
loope
mov
out
popf
jmp
and
mov
mov
out
dec
jmp
and
inc
fnstsw
mov
ret
inc
xchg
js
popf
mov
jge
fdivr
push
gs
fsubl
sahf
clc
or
jbe
pushl
xchg
pop
rcll
fadd
fildl
lret
bound
out
stc
loope
xlat
outsl
cli
test
or
mov
xchg
sub
mov
mov
mov
bound
cmp
rolb
icebp
xor
xor
or
jnp
rcll
in
pushf
and
orb
sub
mov
push
push
xchg
add
xor
lods
mov
sbb
fsubl
gs
adc
mov
sub
add
fs
test
cwtl
and
sbb
mov
pop
lret
std
inc
fisubs
in
je
xstore-rng
cmpsl
ret
pop
sbb
jbe
pop
dec
and
movsl
and
insl
mov
hlt
mov
mov
sub
push
sbb
ret
mov
or
mov
mov
mov
out
xlat
pop
jne
push
inc
sbbl
insl
mov
pop
gs
leave
lret
sub
jno
stc
shrb
jg
or
lret
and
rcrl
and
mov
shll
cmp
cld
sahf
test
sbb
xchg
int
arpl
adc
aas
popa
call
cmpsb
sub
and
mov
imul
push
daa
adc
subl
mov
rorb
cmp
and
in
rorl
or
sbb
mov
xchg
cmp
rorb
inc
fimuls
sbb
insl
dec
std
dec
cmpb
push
push
cmp
adc
scas
mov
xor
in
sbb
stos
fistpl
lret
adc
bound
in
test
mov
repz
and
rol
sbb
mov
scas
repz
insb
pop
pusha
sbb
cmpxchg
xor
je
adc
test
pop
lea
jle
popf
es
mov
and
in
jp
bound
mov
mov
lret
adc
gs
rol
fucompp
test
xchg
out
or
mov
pop
pop
subl
insl
or
in
out
cmp
aas
cmpsl
lds
mov
xchg
adc
ds
aad
xchg
fwait
mov
xor
cmp
cmpsl
rcrb
scas
add
movsb
xchg
or
notb
xor
test
pop
adc
orb
push
mov
popf
popf
cmp
inc
inc
push
aaa
imul
jl
filds
gs
add
outsb
pushf
cmc
cwtl
outsl
cmpsl
fstps
inc
mov
out
pop
out
dec
es
xchg
jp
push
lods
decb
clc
push
xchg
inc
sub
int3
add
repnz
push
inc
pop
cmp
push
pop
fwait
mov
lret
push
jne
mov
cld
push
leave
pusha
xor
out
add
sub
lret
pop
adc
aam
shl
add
ss
sub
push
sub
cmp
pop
adc
ret
push
jmp
nop
sbb
fisttpll
leave
pop
xor
mov
cmp
pop
mov
push
cs
sbb
les
lret
sarb
or
outsb
add
and
icebp
adc
inc
xlat
cmpsl
push
xchg
adc
jns
and
int3
pushf
dec
or
shrl
mov
jle
outsl
inc
jle
mov
aad
xor
in
loop
in
jge
and
iret
push
movsb
and
jl
sbb
sbbb
jg
fucomp
add
repnz
and
mov
dec
and
push
inc
sarl
clc
in
xor
out
out
cs
cmpsl
sbb
xor
lods
fimuls
cmpl
xor
js
push
ret
rorl
aas
mov
pop
pop
push
sbb
cmp
std
sti
in
jae
pop
cwtl
cli
daa
ljmp
fimull
cmpsl
aaa
stos
adc
or
cld
mov
sub
push
jno
test
mov
adc
jl
mov
push
pop
in
xchg
mov
jmp
mov
enter
loopne
lods
outsl
call
out
sub
leave
pop
ja
mov
push
xchg
jno
adc
es
mov
shlb
sbb
dec
scas
fs
lock
cmpsl
insb
xchg
cmp
in
icebp
dec
sub
fucom
fldt
mov
pusha
int
adc
sbb
lret
pusha
daa
xlat
adc
fildl
ja
sub
hlt
cmc
sub
arpl
or
std
pop
or
xor
mov
mov
mov
dec
ret
sbb
notl
in
mov
aaa
mov
mov
aad
mov
inc
es
addl
jecxz
cmp
loop
in
add
scas
xor
aam
inc
xor
es
dec
push
inc
stos
nop
mov
cmovle
mov
cmp
data16
aaa
xchg
pop
dec
ljmp
mov
fsubrl
mov
aad
pushf
je
cld
daa
ja
and
aad
mov
aaa
dec
push
jno
and
int3
mov
xchg
jmp
mov
nop
js
mov
fisubrs
or
xchg
xlat
mov
adc
scas
stos
popa
and
xchg
stos
dec
lret
fisubs
sub
popa
sahf
nop
dec
ss
je
sub
lea
sub
mov
test
mov
xor
or
mov
movsb
fucom
imul
xchg
nop
jae
repnz
or
enter
mov
pop
or
lahf
nop
mov
dec
cld
es
std
push
clc
je
mov
xchg
mov
push
jmp
mov
xor
stc
popf
ret
sbb
popf
and
dec
xor
cli
adc
push
fsts
xchg
sub
adc
int3
outsb
mov
sbb
xchg
ss
dec
shrl
or
notl
mov
cmc
inc
jb
in
lock
jle
scas
decb
mov
mov
push
xchg
jne
xchg
test
lds
xor
mov
pop
lock
pop
cmc
aad
mov
xchg
mov
ljmp
mov
pop
lods
add
shrb
fnstenv
jle
cmp
sbb
mov
imul
sarb
shrl
mov
les
cmp
fbstp
pop
fimull
jb
std
aam
scas
js
pop
mov
fbld
stos
mov
mov
inc
lret
bound
push
xor
jb
xchg
mov
arpl
sbb
stc
mov
sbb
in
pop
aam
ja
das
stos
cmp
push
fucomip
fst
dec
stos
mov
pop
jns
mov
ret
pop
pop
call
lea
cltd
xchg
fisttpll
outsb
dec
mov
jl
push
mov
outsl
jns
mov
mov
inc
fdivrl
stos
dec
ds
lret
cmp
mov
sarb
mov
gs
cltd
inc
adc
jne
notb
xor
xchg
pushf
adc
in
rorl
cmp
test
mov
adcb
lods
aas
out
hlt
pop
adc
dec
dec
fnstenv
and
cwtl
xchg
dec
mov
fiaddl
cmc
pop
dec
add
add
mov
iret
or
mov
fldl
lcall
fs
cmc
dec
out
test
into
jmp
cld
mov
ja
add
aaa
cld
lds
lods
push
mov
inc
lds
mov
scas
iret
mov
inc
aam
leave
pop
add
test
mov
dec
fwait
lods
mov
or
cmp
in
sti
pop
pusha
xor
cmp
rcrl
out
lea
jb
lret
push
sahf
xor
sub
xor
sbb
cmp
jmp
xchg
push
or
lret
jno
psubb
inc
mov
jecxz
aaa
comiss
outsl
push
lea
orb
or
push
jecxz
fisubrs
push
inc
push
mov
and
out
adc
push
rcrl
out
test
pop
repnz
sbb
xchg
jl
sarl
icebp
jae
and
sub
into
inc
push
fisubl
arpl
sbb
xchg
scas
out
stc
or
inc
lds
jae
cmp
lds
daa
add
mov
mov
fldl2e
pop
cmp
push
movsl
push
push
loop
out
push
cld
movlps
in
add
sbb
ror
mov
std
mov
jge
adc
add
mov
cltd
sub
pop
cmp
xchg
jno
xchg
cwtl
sbb
push
in
lret
movsb
fwait
sti
inc
add
or
lods
push
mov
lods
mov
lods
sahf
jns
sbb
dec
jns
xchg
ret
subl
add
add
push
xchg
and
inc
and
and
insl
mov
sbb
mov
test
imul
out
outsl
sti
fsubr
sbb
dec
cmpsl
pop
aas
push
jnp
mov
or
jb
mov
mov
mov
pop
dec
mov
ljmp
push
shl
dec
in
lea
cmpsl
sbb
imul
out
mov
inc
sbb
repnz
decl
lock
das
shl
arpl
cmpsl
sarb
and
outsb
adc
nop
and
and
inc
xlat
cwtl
outsl
addr16
pop
lret
lret
and
es
cmp
jp
inc
push
insb
xor
add
dec
lea
pop
mov
ret
adcb
mov
mov
loope
mov
in
mov
adc
dec
loopne
xchg
lea
aas
push
aad
xlat
fists
rcll
mov
and
sbb
dec
jp
or
or
jmp
mov
movsb
ja
in
and
test
mov
clc
rcr
add
gs
popf
mov
push
dec
add
lods
or
cmpsb
xchg
cmovg
cmp
xor
jp
pop
adc
insb
mov
test
mov
cmpsl
test
pop
in
mov
inc
push
decl
jecxz
adc
aad
and
xchg
imul
lds
sbb
sbb
dec
add
mov
sub
adc
popa
std
xor
push
fyl2x
fsubl
inc
inc
inc
nop
adc
in
test
mov
jae
out
mov
fidivs
ret
jb
xor
stos
mov
cld
inc
xor
mov
sbb
inc
xchg
dec
xor
xchg
aas
lds
mov
dec
mov
push
fcompl
xchg
sub
mov
aas
icebp
mov
mov
jo
xchg
add
lods
push
lret
shll
jbe
xor
dec
scas
jo
ja
mov
mov
js
mov
out
lds
xor
sub
lds
ljmp
adc
pop
fcos
popf
popf
daa
sbb
jecxz
mov
sub
mov
mov
pop
adc
xchg
arpl
dec
pop
lds
daa
jmp
lret
push
ficomps
mov
sti
rol
in
leave
pusha
push
decb
loopne
sub
pop
xlat
outsb
rclb
pop
fsub
aas
loop
dec
mov
popa
stos
jns
mov
incl
rcl
and
pusha
mov
pop
mov
sbb
push
leave
push
iret
bound
in
add
and
out
aam
in
dec
mov
fs
or
jmp
out
dec
and
stos
push
out
int
outsb
cmp
dec
cmp
inc
stos
sbb
push
popa
call
sahf
push
push
dec
mov
std
xchg
xor
inc
bound
pop
dec
es
jo
lret
enter
out
fs
inc
xor
sub
repnz
leave
out
adc
xor
mov
test
stc
scas
sbb
lret
loop
lret
jmp
aam
nop
cmp
outsb
pop
xor
jnp
mov
xlat
dec
sbb
sub
ja
mov
test
mov
test
mov
clc
popa
lds
mov
or
jl
out
or
mov
inc
push
and
pop
imulb
cltd
pushf
rcl
sub
or
sub
and
out
loope
mov
test
sahf
in
and
shrb
imulb
int3
or
add
icebp
xchg
push
testl
test
push
inc
pushf
cmp
xlat
jecxz
aam
cld
jecxz
and
sub
pop
or
idivl
and
xor
jb
shrl
add
cmpsb
inc
shll
mov
cmc
dec
add
arpl
lods
inc
ljmp
or
loop
dec
stc
imul
imul
lods
test
cmp
insl
adc
js
movsl
insl
jne
sbb
leave
mov
sub
mov
cli
lock
jmp
sub
push
xor
in
mov
mov
adcl
or
imul
sarl
xor
mov
ja
fwait
mov
and
jmp
sbb
xor
pop
cmp
add
mov
jp
testb
xchg
movsb
js
cmp
dec
jle
outsb
sub
out
test
mov
add
cmp
xchg
push
ror
xor
xlat
cld
or
leave
mov
adc
aam
mov
fsubr
dec
aad
movsb
insb
adc
xor
andl
popa
leave
push
call
pushf
cmp
pop
mov
inc
insl
dec
popa
adcl
mov
cs
adc
adc
jmp
mov
dec
popf
arpl
sbb
je
pop
sahf
push
sbb
add
sbb
inc
mov
jge
sub
out
imul
adc
jecxz
loop
and
mov
and
mov
sub
fdivs
pop
dec
jmp
mov
imul
cs
cmpsl
outsb
das
sbbl
push
cld
cmp
out
stc
repnz
aaa
hlt
jg
xor
adc
popa
jnp
jmp
mov
hlt
cmp
xchg
push
lds
loope
sub
fimull
dec
call
out
les
daa
inc
xlat
cmp
add
mov
es
jmp
and
out
fmul
cs
jge
inc
xor
jno
clc
push
mov
jno
lcall
jmp
xor
call
lret
out
call
xor
repz
rcrl
add
add
call
or
arpl
ret
popf
cwtl
jo
mov
es
int3
add
lods
mov
pop
xorb
dec
loop
xor
repnz
arpl
lds
lods
jl
and
adc
mov
mov
cmp
cmp
in
in
inc
subl
lahf
je
lock
test
or
sub
xchg
insl
shlb
in
pmulhuw
or
jp
xor
shll
push
les
sub
push
xor
inc
out
jg
aas
hlt
sbb
cltd
outsb
push
xchg
adc
imulb
inc
pop
xchg
repz
push
test
lret
cmpsb
adc
mov
xchg
sub
popf
cmpsb
pop
imul
push
cld
push
neg
mov
xchg
mov
out
inc
pop
mov
mov
insb
repnz
in
and
je
and
adcb
jecxz
cmp
jo
lcall
cmpb
fstpl
inc
xchg
gs
shll
fstps
mov
gs
mov
stc
push
inc
cli
es
sub
cld
push
cmpsb
mov
xchg
lods
lahf
mov
in
jp
xchg
mov
pop
inc
jmp
sahf
cmpsl
enter
jmpw
xchg
push
cmp
into
leave
add
push
sub
xor
xor
and
sbb
fsubs
xchg
sub
jecxz
xor
xlat
mov
mov
lret
jns
stc
outsb
arpl
aam
imul
mov
pop
out
sub
mov
mov
add
dec
pop
jmp
stos
mov
lock
sub
repnz
scas
imul
loope
jb
mov
xor
xlat
aad
stc
aam
mov
mov
stc
cmp
sub
mov
jbe
fwait
jle
sbb
or
mov
mov
movsl
fsubr
es
ret
sahf
push
inc
xlat
lahf
push
lds
aad
sub
jle
data16
sub
mov
push
xorb
popl
ss
jg
fstps
pop
outsb
cli
popf
xor
imul
push
int
iret
testb
shrl
jne
pop
cmp
loopne
or
clc
pop
in
shl
mov
push
enter
sar
xor
movsb
repnz
leave
add
inc
mov
push
popf
adc
push
imul
inc
cli
pop
stos
xchg
mov
dec
dec
jecxz
into
pop
adc
rorb
mov
push
mov
popf
sbb
cmpsb
and
or
or
psrlq
or
push
pop
enter
dec
cmp
sbb
out
lret
enter
mov
push
jae
sti
pop
aam
les
mov
or
mov
fcomp
jmp
xor
aad
sbb
cmpsb
imul
push
clc
ja
jns,pn
data16
cltd
and
push
add
adc
mov
adc
push
dec
add
cwtl
in
xchg
cmp
mov
lods
sbb
imul
jge
mov
dec
push
adc
mov
xchg
or
fcomps
push
insb
pop
stc
xchg
xor
and
cmp
cld
cli
xchg
cs
sbb
popf
pop
pop
imul
inc
ret
fnstsw
jae
movsb
movsb
jecxz
push
sub
adc
add
adc
mov
or
add
mov
inc
cmp
mov
pop
lahf
mov
push
lcall
lds
mov
sbb
sbb
cmp
lcall
insl
dec
and
outsl
jge
decl
addl
jle
sub
nop
adc
sbb
lods
xchg
xchg
sbb
cmp
cmpl
cs
adc
stc
dec
cmp
cmpb
mov
repnz
xchg
xor
jne
sbb
mov
imul
in
movsb
imul
mov
shlb
rcl
mov
or
jle
jl
inc
sahf
repnz
mov
nop
fisttpll
imul
jle
repnz
ja
or
std
cmp
push
ja
inc
add
cs
dec
inc
mov
bound
xor
into
xor
mov
mov
sbb
push
ja
incb
mov
pop
dec
cltd
pop
jo
fstpl
xor
repz
mov
rolb
mov
cmp
sbb
add
push
push
cmp
outsb
push
inc
sbb
outsl
mov
sbb
and
xor
dec
xchg
or
popa
mov
sub
jg
out
fwait
ljmp
jns
mov
aam
test
cmp
andb
stos
mov
pop
xchg
mov
fcompl
lods
or
mov
xlat
push
xor
or
ljmp
xchg
and
mov
aad
xchg
push
xor
in
dec
mov
sbb
pop
mov
adc
jmp
inc
cmp
int
inc
pop
shl
mov
insl
jle
xchg
daa
inc
leave
sbb
pop
push
push
in
cmp
xchg
cmpsl
leave
dec
inc
enter
add
adc
and
stos
sub
lds
or
mov
clc
lret
arpl
xchg
nop
ficompl
mov
ljmp
fbstp
pop
sub
popf
mov
out
adc
xor
arpl
mov
mov
std
and
mov
or
dec
pop
sub
aad
jg
mov
mov
pop
shrl
cs
xchg
ja
iret
xchg
inc
adc
push
and
stc
cmpsb
ja
je
pop
mov
lret
repnz
jmp
mov
pop
jp
mov
cwtl
cmp
lret
addr16
or
dec
jns
jae
jle
pop
xchg
stos
mov
jo
into
and
xor
int
test
pop
push
sar
stos
adc
jle
jnp
push
sbb
fs
inc
xlat
ja
nop
addr16
and
mov
pop
loop
inc
aaa
loopne
mov
orb
enter
adc
mov
inc
std
xor
adc
jle
loope
jle
dec
scas
in
push
sbb
lea
add
insb
scas
mov
in
push
or
jnp
mov
popa
mov
xor
jmp
outsl
lock
icebp
es
jb
mov
mov
xchg
fnsave
jmp
inc
mov
or
arpl
push
pop
lds
or
pop
loope
pop
push
pop
pop
cltd
xchg
cltd
orb
cmp
fidivs
rorb
in
push
push
xchg
mov
out
in
sbb
mov
nop
inc
int
jns
repz
clc
and
push
mov
push
cwtl
inc
fs
xchg
lods
and
inc
xchg
iret
inc
out
push
in
std
pop
inc
testl
or
loop
mov
into
adc
insb
inc
mov
push
jge
xchg
daa
pop
pop
fisubl
cmp
icebp
sysret
nop
shrb
lods
add
push
jne
loope
movntps
rcrb
push
popf
dec
nop
inc
insb
mov
stos
cwtl
jae
push
mov
jmp
add
pop
sbb
adc
shrl
xor
xor
into
js
pop
rcl
push
push
or
mov
xchg
push
scas
das
mov
cltd
add
fcmovnb
dec
pop
cld
fwait
adc
lock
imul
aas
add
adc
cmp
mov
sbb
sbb
cmp
nop
mov
nop
mov
sbb
cmpsl
loope
gs
movsl
ljmp
fstpl
mov
mov
mov
cmc
push
out
jo
xor
loop
inc
xor
mov
out
push
test
xchg
sbb
mov
dec
or
test
mov
shr
sbb
fs
in
mov
icebp
addb
dec
movsl
ss
lods
cmpsl
add
lcall
sub
jns
cmc
and
xchg
mov
push
dec
bound
mov
sub
outsl
daa
push
ret
gs
cmpsl
in
mov
add
sub
fprem1
adc
dec
stos
pusha
leave
fisttps
pop
mov
push
mov
inc
sbb
cmp
or
mov
decb
ret
and
adcl
xor
sahf
dec
cld
aad
jns
imul
pop
and
das
cmpsb
jno
sub
aaa
pop
sti
fmull
enter
fdivrs
dec
scas
pop
push
jo
jae
test
cltd
int
ss
and
add
pop
ja
inc
sub
and
xchg
xor
dec
in
outsb
add
dec
pop
mov
imul
xorb
add
bound
pushf
je,pn
mov
pop
stos
bound
mov
add
inc
pop
or
jns
std
jb
out
and
mov
std
ljmp
sbb
movzbl
add
pop
dec
ficomps
and
jl
pop
pop
clc
outsb
sub
imul
fcomps
mov
inc
scas
ret
addl
mov
cmp
nop
negl
dec
cmc
cld
sar
popf
mov
sub
lcall
jecxz
divl
pop
xor
sbb
cmp
cmc
jo
dec
jo
cmp
and
xor
iret
mov
push
pop
adc
fisubs
scas
xor
loopne
add
sarl
xor
adc
ss
popf
inc
cmpsl
xchg
mov
pop
and
pop
push
push
add
int3
popf
loop
stos
inc
aaa
and
insl
pop
mov
fwait
add
in
imul
or
pop
popa
inc
cltd
lret
arpl
mov
daa
xchg
cmp
ret
adc
clc
xchg
icebp
fadds
inc
out
into
jno
xor
gs
xchg
lret
xchg
nop
maxps
fisubrs
sbb
mov
or
inc
mull
push
push
add
sbb
lods
dec
mov
and
sbb
and
sub
sub
or
mov
or
xor
std
jno
sub
and
fisttps
adc
into
sbb
sub
xchg
add
push
stos
das
push
xor
pusha
insb
lock
shr
roll
ljmp
xchg
repz
jmp
repnz
ljmp
sbb
sbb
adc
pop
jg
fldz
ja
in
andb
lods
mov
dec
mov
cwtl
push
sub
insl
lcall
stos
push
pop
cmp
mov
aas
and
cmp
cli
shrb
mov
lret
repz
dec
cmp
not
stos
lods
inc
in
inc
cmp
in
mov
or
pop
xor
fists
xchg
insl
xor
and
jnp
pop
movsl
lods
jmp
jnp
and
jmp
mov
aaa
mov
test
pushf
xor
lock
cwtl
scas
mov
sub
or
inc
fidivl
iret
dec
inc
aaa
push
dec
cmp
loop
adc
fsubrl
dec
test
fs
sub
int3
decl
incl
adc
inc
and
mov
movsb
test
pop
mov
test
xchg
cmpsb
loope
adc
mov
insb
jmp
mov
fwait
or
rdtsc
insl
sub
in
test
jle
xor
pop
pop
icebp
popa
push
fidivrl
in
stos
pop
mov
sub
push
and
push
daa
push
cmp
shlb
pop
ds
pop
js
jae
rcrl
jmp
and
xchg
or
sub
popf
jp
std
push
out
cs
es
or
sbb
and
mov
fisttpl
aas
call
enter
dec
test
cmpsb
sbb
fsubr
test
int
push
sub
icebp
aam
mov
or
push
scas
push
into
xchg
sbb
stos
ljmp
mov
addr16
adc
pop
ret
dec
push
xlat
cld
fs
cmp
fisttpll
call
xor
and
clc
gs
sar
fsts
inc
push
push
repz
fs
mov
loop
cwtl
das
repnz
pop
dec
mov
repnz
jbe
xor
adc
es
aas
pop
mov
pop
sub
shrd
xchg
shrb
mov
mov
ja
add
int3
lret
jb
movsl
repnz
orb
out
inc
jno
mov
fs
test
out
std
or
scas
aaa
add
jns
xlat
or
add
int
fs
out
les
in
sub
pop
mov
sub
cmpsl
lock
dec
jnp
decb
scas
adc
cld
movsl
cmpsl
pop
arpl
je
clc
cmp
pop
aas
push
shll
enter
cmp
sub
addl
adc
sti
aas
xchg
cli
jp
repz
pop
mov
ret
mov
sahf
fdivrl
call
pop
jo
cli
dec
lods
cmpsb
push
test
hlt
sub
or
out
xchg
and
lock
sub
sbb
decb
and
jp
inc
mov
movsl
mov
stos
idiv
jmp
cs
mov
jae
cltd
addr16
mov
xchg
cmp
dec
fs
jo
mov
test
rclb
jle
scas
out
xchg
xchg
add
test
or
pop
jecxz
push
dec
fadds
dec
cmp
xlat
jb
xchg
pop
cmpsl
add
out
mov
and
push
jb
and
pushf
sub
gs
sbb
pop
and
cmp
stos
mov
sub
fistpl
fcomp
out
lret
adc
inc
movsl
inc
cmp
push
outsb
bound
cmp
and
hlt
hlt
outsb
movsl
jmp
push
in
jge
xchg
jbe
in
test
lcall
clc
xchg
xor
push
aaa
aam
cmp
fcomps
scas
add
fisubrl
scas
xchg
mov
in
lcall
aaa
xor
jmp
and
test
inc
fmuls
scas
pop
push
ja
jbe
mov
in
test
jnp
push
cmpsb
jmp
jmp
clc
mov
cmp
mov
insl
int
jnp
or
mov
ret
sti
ret
xlat
mov
scas
inc
xor
cmp
std
shll
call
mov
inc
push
cld
faddl
test
in
inc
adc
pop
adc
fcompl
test
and
enter
jb
pop
or
dec
loopne
stos
fnstenv
sahf
andb
lret
mov
popf
ss
enter
lea
scas
hlt
push
ljmp
test
sbb
lea
cmpsb
out
or
mov
dec
daa
cmp
mov
repnz
adc
mov
pusha
hlt
xchg
push
sbb
jle
push
cmp
push
or
dec
imul
lret
add
ficoms
inc
out
sahf
pop
in
aas
mov
hlt
sti
mov
xor
shll
mov
mov
push
andb
cmp
jecxz
cmpsl
ret
push
insl
push
mov
rorb
sub
sbb
or
xchg
push
lock
mov
pop
mov
push
xchg
and
iret
adc
xor
imul
scas
popf
mov
inc
leave
push
mov
out
and
jp
pop
fwait
or
inc
dec
cli
xchg
andb
jne
mov
ret
inc
lods
xor
jg
push
jge
rclb
popf
hlt
daa
idivb
lea
mov
mov
cmpsl
cltd
enter
fdiv
ja
andl
cltd
mov
dec
leave
pusha
jl
jns
mov
in
ror
adc
cmpsl
lcall
mov
aam
push
xchg
outsl
dec
push
jb
nop
out
mov
lret
pop
jmp
mov
ror
sbb
pop
cmp
push
or
das
repnz
lods
xchg
sbb
clc
arpl
mov
fwait
xlat
repz
fidivl
cmp
in
jo
in
test
add
mov
pushf
lock
decl
insb
aam
movsl
icebp
imul
xchg
push
sub
or
sub
rcrb
add
les
dec
jecxz
popa
or
mov
pop
pop
out
mov
mov
movsl
pop
inc
lret
ret
inc
pushl
imul
loopne
imul
jne
cmpsl
dec
addr16
jns
jmp
inc
popf
mov
adc
dec
lret
mov
sahf
xchg
or
aam
inc
out
adc
insl
fwait
das
ja
sub
ret
jnp
mov
pop
jl
shr
add
sbb
lret
js
xchg
movsb
push
push
test
arpl
sahf
addr16
mov
xchg
xor
mov
pop
lret
inc
cltd
sbb
and
jnp
adc
cmp
test
sti
movsl
pop
mov
mov
cmp
movsb
out
rcrl
push
jge
icebp
scas
xchg
jne
scas
dec
js
decb
sbb
imul
xchg
xchg
test
lods
dec
push
shll
imul
dec
fcomps
std
xor
dec
dec
enter
call
repz
mov
test
lahf
pop
push
cvtpi2ps
mov
insb
mov
pop
mov
test
cmpb
xchg
pop
aad
test
and
sbb
les
dec
push
inc
xor
es
insb
cltd
std
enter
mov
in
jp
inc
xchg
fwait
stos
into
push
ljmp
es
ds
rol
cmpsl
clc
fs
les
inc
push
stos
mov
pop
jle
xor
stos
aad
jns
lds
cmp
sbbl
shll
in
outsb
rcrb
imul
sbb
rorb
in
outsl
cmpsl
data16
jecxz
repz
jnp,pt
arpl
mov
ss
scas
call
sub
sub
and
roll
push
xor
mov
outsl
ds
icebp
insb
pop
cmp
pop
movsb
mov
sub
lods
mov
inc
cwtl
enter
clc
pop
and
sbb
pushf
arpl
xlat
xlat
mov
jecxz
imul
push
pop
sti
mov
adc
jns
push
jmp
lahf
and
xchg
dec
xor
test
push
push
pusha
leave
push
push
sbb
cmpsl
mov
or
xor
stc
mov
aad
into
loope
add
out
cwtl
pop
lds
ret
xor
out
lret
pushf
std
or
cmp
push
lahf
inc
xchg
stos
jnp
je
sub
sub
imul
push
fiaddl
clc
xor
out
add
mov
in
dec
popf
xchg
call
mov
nop
test
and
sub
mov
dec
sbb
aam
pop
sub
test
sahf
pop
repz
cltd
xchg
sub
stos
mov
mov
sub
pop
or
and
decl
bound
rolb
add
pop
xchg
push
test
data16
sbb
pop
mov
loope
mov
sti
xchg
movsl
mov
inc
call
loope
fxch
fdiv
ret
add
mov
roll
lret
push
pop
in
push
add
sub
mov
bound
lahf
and
outsl
push
mov
sub
scas
sub
hlt
push
push
jno
mov
sub
xor
insl
push
dec
pop
push
add
ljmp
push
andb
movsl
push
dec
and
movsb
loope
fcoml
stc
xchg
jecxz
stos
xlat
and
cmp
test
dec
std
pop
fcomps
loopne
adc
push
xchg
xor
in
rcrl
pop
imul
stc
xor
icebp
dec
push
movsl
je
jecxz
pop
xor
jl
xchg
into
sbb
int
leave
sarb
sub
mull
aad
arpl
mov
das
cmpsl
imul
aas
sbb
xor
insl
and
lahf
inc
movsl
dec
dec
push
fsub
mov
adc
rcr
fwait
push
mov
test
or
xor
loope
movsb
mov
aam
mov
in
xchg
push
mov
or
dec
jle
or
std
mov
cli
and
mov
je
push
jbe
shrb
sub
cmp
jmp
inc
fdivl
jp
cmp
jmp
in
fwait
movsb
pop
lea
xchg
add
jp
adc
cltd
jns
dec
and
fldenv
repz
cli
in
mov
sub
xorl
xchg
out
dec
icebp
lock
movsl
mov
jp
or
jo
push
adc
fwait
or
and
and
cmp
and
push
xor
sub
sbb
mov
ss
or
das
cwtl
neg
inc
daa
ljmp
das
repnz
scas
push
or
lret
jbe
mov
fwait
xchg
xchg
sub
fnstenv
dec
xchg
and
cmpsl
jecxz
or
imul
icebp
mov
jb
fisubl
jge
or
data16
cmp
imul
push
pop
dec
cmpsl
inc
mov
ret
int3
addr16
xchg
sub
pop
lcall
cwtl
push
in
movsb
inc
sbb
xor
cld
lcall
in
sbbl
or
stc
mov
sbb
inc
xchg
push
bound
push
test
lret
insl
sub
hlt
mov
faddl
or
test
pop
lock
testl
lea
test
dec
adc
mov
lret
sti
mov
push
out
sbb
test
sbb
add
stos
inc
ds
cmp
out
jb
pop
test
push
pop
movsb
add
mov
pop
sbb
mov
popf
adcb
pop
out
sub
iret
jbe
subl
xchg
rdpmc
gs
arpl
mov
mov
mov
pop
adc
ss
pop
mov
push
jge
fistpll
stc
sahf
mov
js
loop
fwait
xor
or
sbb
test
lret
out
xor
xchg
and
push
das
mov
loop
sbb
out
mov
aam
xchg
add
ss
xor
std
out
stc
xchg
mov
negl
mov
push
loopne
push
mov
enter
fimuls
sarb
jne
adcb
mov
stc
adc
fldenv
or
pop
in
xchg
add
inc
pop
out
nop
dec
mov
and
jno
mov
jp
js
sarb
fnstenv
adc
xor
xor
jns
out
in
rorl
push
out
shll
push
sbb
loopne
xchg
imul
clc
jae
out
dec
sbb
mov
into
pop
push
pop
test
or
mov
popa
lahf
mov
fstl
mov
in
daa
cmp
mov
lods
push
cld
in
sbb
xor
imul
mov
or
pop
fstl
js
cli
pop
xchg
mov
dec
sbb
dec
rol
test
js
sahf
cmp
movsl
out
outsb
cmp
push
push
pop
in
mov
mov
inc
pop
jbe
jp
inc
cmpsb
shll
repz
adc
push
xchg
addr16
jne
adc
out
pop
or
fs
adc
xchg
dec
pop
daa
mov
lahf
lahf
call
pop
cmp
or
sbb
scas
in
pop
cmc
xor
jmp
mov
sub
fdivrl
ljmp
clc
xchg
adcb
repz
repz
xor
fld
fildl
push
je
xchg
cmp
and
andl
mov
xchg
inc
jmp
xchg
mov
adcb
sbb
cltd
cs
cmp
or
dec
fsubs
sbb
stos
jb
pop
push
arpl
aaa
mov
pop
test
scas
fcomip
addl
push
fiadds
sbb
addb
xchg
loop
je
jmp
pop
jo
xor
adc
loopne
nop
adc
ror
xor
cltd
jo
insl
fldt
xchg
testl
lcall
cmpb
cmp
pop
sub
adc
mov
cmpsb
xor
in
xchg
lret
in
cld
in
pop
data16
daa
and
scas
push
in
and
roll
stos
add
std
sub
or
sbbl
out
mov
daa
fsubl
xchg
sub
scas
jae
bound
shll
jno
scas
ret
xchg
add
jnp
popf
nop
hlt
adc
icebp
pop
js
xor
xor
icebp
dec
dec
dec
push
vmovsldup
inc
lods
mov
sbb
aas
lahf
xor
ret
jno
sbb
dec
cld
push
shlb
out
pop
pop
pop
out
sub
jo
lret
or
sar
iret
xor
pop
push
xchg
push
lahf
mov
inc
out
jle
inc
sub
or
scas
sbb
fucomp
daa
xor
rol
sbb
loope
mov
fs
lock
adc
dec
dec
dec
les
cwtl
aaa
sbb
and
cmpsl
les
lahf
pslld
lods
mov
mov
sbb
xor
add
xor
push
cld
lcall
sbb
dec
lods
es
bound
iret
pushf
mov
or
shr
pop
les
insl
lret
dec
dec
sbb
mov
shrl
push
stos
mov
fldt
inc
push
lds
loope
inc
push
mov
in
int3
xchg
xor
repz
xor
leave
sub
insl
rorb
pusha
orb
lock
cmp
ret
mov
push
fs
out
mov
bound
fwait
testl
dec
scas
orb
jb
fidivrl
frstor
lahf
or
mov
add
insb
jle
test
rcl
cmc
and
shlb
add
pop
and
push
mov
mov
fnstsw
cmc
mov
sbb
inc
jae
push
call
push
lods
lcall
inc
and
inc
lea
sahf
ss
cltd
lock
mov
je
mov
jmp
push
lods
add
and
sub
push
aas
jno
jge
pop
adc
pop
pop
mov
jmp
xchg
xchg
test
repz
jne
call
or
xor
sub
jle
and
inc
imul
pop
inc
fnsave
iret
movsl
jnp
xchg
imul
sub
fnstenv
pop
ljmp
lea
cmpsb
sub
cltd
sahf
adc
jl
pop
scas
loop
or
jmp
test
shll
inc
mov
mov
movsb
add
ficoml
xchg
push
pop
pop
into
arpl
pop
adc
divb
mov
into
push
push
jg
out
xchg
pop
xchg
test
or
rcl
subl
mov
in
mov
mov
add
push
leave
xchg
mov
jg
sahf
adc
ret
movsb
out
xchg
loop
sbbl
lret
mov
idivb
hlt
sub
pushf
add
add
cli
or
pop
adc
jne
cmp
ret
iret
ljmp
imul
add
sbb
inc
push
imul
lret
cmp
push
outsl
stos
gs
ja
in
mov
jb
add
mov
push
into
xchg
in
les
arpl
xchg
inc
mov
or
xor
or
cltd
pop
xor
push
sub
sbb
rcrl
xor
outsl
gs
fidivs
out
xchg
mov
sti
pop
fdivs
mov
mov
lret
stos
mov
pop
mov
adc
gs
hlt
adc
iret
into
fiadds
adc
fbld
add
xor
or
sub
sbb
fstl
mov
adc
lret
sahf
sub
mov
scas
out
lods
cmp
aaa
iret
xor
xchg
popa
and
mov
or
lock
ret
jge
repz
out
fbstp
cli
mov
xor
jge
mov
lds
pop
out
jge
push
stos
cmp
xor
xor
vcomisd
xor
mov
std
sti
js
mov
dec
dec
cmp
push
jmp
loopne
scas
sbb
xor
cmp
mov
call
sub
xchg
mov
out
cmp
pop
test
das
into
popf
imul
jl
inc
lock
loopne
or
pushf
cli
cmp
lea
addb
mov
jae
push
fstpt
or
dec
jae
jl
shll
ret
dec
iret
push
ret
mov
fists
sub
ds
push
adc
notl
int
jb
push
cmpsl
shll
out
sahf
js
xchg
and
in
sub
fs
lea
lcall
adc
hlt
gs
push
fwait
test
test
aam
jecxz
imul
repnz
jo
xor
or
cs
or
iret
jno
push
sbb
fisubrs
icebp
push
popf
mov
add
mov
cmp
inc
leave
clc
call
shl
jg
mov
andb
sbb
jns
outsb
cli
std
mov
outsb
or
jb
or
lea
dec
fsubrs
lea
rcl
lods
cmc
push
jmp
mov
pop
stos
in
fmul
pop
jg
je
sub
shlb
pusha
pop
addr16
iret
push
repnz
cld
jb
sbb
pop
sub
dec
outsb
lds
call
aam
es
cmp
push
cmp
mov
fisttps
xchg
cmpsl
jl
push
aas
adc
test
fcoms
fwait
jo
ds
mov
mov
dec
jo
cmp
and
aam
fdivs
mov
mov
mov
aam
pushf
cmc
je
jle
mov
repz
loop
in
mov
xor
fidivs
je
insl
add
lods
sti
stc
hlt
dec
je
xor
sub
aam
cmpsb
loope
insl
mov
lea
mov
dec
add
sub
sar
mov
jbe
push
scas
mov
push
xor
int
into
xchg
outsb
movsb
lret
push
lods
test
cmc
dec
or
or
rcrb
sbb
mov
mov
dec
add
push
jmp
inc
aam
and
jge
out
aaa
dec
mov
movsb
imull
jmp
je
cld
sbb
pop
push
outsl
push
lods
fimuls
cmp
lds
mov
xchg
insl
iret
pop
sbb
rclb
aad
add
cs
pop
pop
mov
jnp
mov
push
cmp
out
jae
popf
jbe
pop
jbe
ljmp
cmpsl
daa
stos
fnsave
inc
or
cmp
es
stos
addl
lods
mov
and
pushf
jae
in
aad
test
mov
mov
mov
sbb
jp
sbbl
lods
lcall
pushf
ljmp
mov
ret
dec
sahf
xorl
dec
hlt
push
inc
call
inc
mov
ret
ljmp
mov
inc
pop
cmp
sub
xchg
sti
jmp
lea
ret
adc
and
adc
pop
stc
jno
and
jns
push
ljmp
icebp
jae
and
mov
loop
out
cmp
mov
push
inc
adc
movsb
mov
cld
popf
idivb
xchg
mov
negb
sbb
xor
mov
int3
jecxz
cmp
dec
jp
mov
adc
sub
xchg
lods
xlat
divb
add
jle
sbb
add
sbb
push
scas
aam
or
add
rcll
lock
stc
add
cmpsl
xor
insb
iret
popa
inc
push
les
fisubrl
push
shrb
inc
aas
push
dec
or
mov
out
xor
insb
and
or
push
je
cmp
cmp
sbb
frstor
and
push
fstp
outsl
inc
pop
mov
movsl
imul
mov
xor
pmulhuw
js
out
out
in
imul
clc
jne
outsl
js
pushf
out
jl
scas
jmp
and
push
xlat
xor
shrl
pop
aas
inc
pop
mov
xchg
cmp
jnp
push
dec
ds
xchg
jp
sub
push
movsl
daa
or
jl
pop
dec
int3
test
mov
jo
shrb
ds
xchg
lcall
inc
add
jne
fbld
adc
js
cmc
fwait
sbbl
sbb
pop
add
addr16
dec
or
dec
dec
sub
push
pusha
cmp
leave
sbb
jle
sub
xchg
lahf
dec
lahf
das
jns
push
testb
movsb
mov
lds
int3
mov
cwtl
fmull
int3
mov
or
mov
dec
and
mov
mov
push
lea
jg
adc
pop
jno
movsl
movsb
mov
inc
dec
jno
lret
and
es
add
ja
and
lods
mov
xchg
adc
lods
outsb
sub
arpl
shlb
shll
insl
cmpl
icebp
mov
pop
arpl
pop
insb
xor
xchg
jmp
xchg
add
cmp
dec
jp
push
insb
insb
mov
sub
dec
mov
jbe
or
rcrl
push
adc
sbb
inc
data16
sbbb
mov
clc
mov
mov
mov
mov
pop
ret
call
push
or
stos
jmp
xchg
push
test
cmpsl
ss
jo
clc
sub
call
int
std
xor
aas
cmp
loop
inc
stc
and
out
or
cltd
test
mov
sbb
aas
jae
out
sub
add
jge
lock
xor
inc
xor
call
mov
mov
ret
jmp
mov
ds
in
or
mov
dec
sub
inc
pop
jb
int3
cmp
pop
or
pop
jge
adc
sub
idiv
dec
xor
stc
sbb
mov
sub
sarl
dec
add
pop
pop
sub
movsl
scas
call
or
call
mov
xor
adc
add
faddl
das
mov
leave
pusha
lods
push
xor
push
jl
mov
fs
lea
dec
leave
test
dec
add
sub
roll
cmpsl
xchg
mov
and
xchg
test
bound
jecxz
mov
dec
xchg
pop
jp
jp
adcl
add
add
or
push
push
sub
rcr
ja
divb
insb
loopne
das
addr16
mov
jmp
lahf
pop
xor
and
adc
into
test
outsb
sub
fcompl
mov
and
dec
xor
or
es
hlt
mov
cwtl
scas
sbb
push
mov
mov
and
push
enter
dec
sbb
cmc
loop
cmc
dec
stos
movsl
ljmp
and
jg
lods
ret
push
pop
stos
arpl
xor
push
sbb
jne
or
fcompl
ja
repz
gs
addps
aaa
push
popl
testb
xchg
mov
out
sub
mov
and
jl
int3
in
push
sub
mov
rcl
ret
das
call
push
cli
sarb
iret
sbbl
das
popa
xor
dec
rcrl
aaa
sub
lock
iret
fwait
jle
mov
and
sbb
push
mov
insl
mov
pushl
jl
arpl
sbb
push
push
out
lock
or
movsb
push
sbb
rcrb
xchg
xchg
and
jp
xchg
jge
fstpl
aaa
pop
rorl
vunpckhpd
dec
pop
arpl
jbe
or
mov
idiv
lcall
dec
adc
xlat
jno
cmp
adc
std
sub
inc
in
push
and
cmp
pop
in
pop
fbstp
add
aas
dec
mov
test
sbb
mov
jmp
lahf
lds
ret
push
mov
mov
in
mov
push
jnp
xchg
mov
sub
sub
dec
call
pop
push
ljmp
inc
pop
fistl
and
ret
pop
in
int
aam
push
addr16
pop
push
jmp
inc
sub
xchg
pop
pop
mov
idivb
sub
and
dec
cld
jbe
loope
mov
cmp
or
ja
cmpsb
sub
popa
scas
adc
xor
mov
sbb
das
inc
fistl
adc
pop
inc
mov
in
push
ds
lcall
jle,pt
repz
mov
xchg
xchg
inc
sbb
cmpsb
lret
int3
push
push
sbb
aam
scas
mov
ja,pt
shll
cmp
or
pop
out
xor
in
or
and
dec
data16
adc
sbb
dec
lret
xchg
push
leave
jbe
je
shll
scas
and
js
int3
jae
cmp
mov
out
or
mov
inc
or
cmp
and
sbbl
stc
and
sub
outsl
fwait
or
sar
xchg
pop
scas
cwtl
nop
or
addl
sarl
mov
xchg
xchg
xchg
and
rcl
popa
shlb
roll
jns
negl
push
loop
arpl
push
add
add
inc
cmp
je
pop
insl
shlb
cld
outsl
cmpsl
jp
push
lds
cmp
fs
fstps
in
cltd
sbb
jge
mov
xor
mov
orl
adc
fiadds
ljmp
andl
movsl
stc
mov
scas
dec
mov
dec
xchg
aaa
fcomps
xchg
push
cs
jmp
mov
bound
orb
adc
cmp
aas
rcl
pop
andl
nop
jne
imul
out
daa
ret
mov
and
cmp
adc
pop
push
les
mov
push
aad
movsb
xchg
ljmp
mov
mov
lods
rolb
pop
xor
ljmp
sahf
inc
stc
cmp
shlb
ss
and
sub
sti
dec
loop
dec
fwait
push
pop
sbb
push
cmc
stos
fiadds
mov
das
push
inc
fcompl
leave
xor
es
push
out
or
jmp
inc
sbb
mov
jo
sub
push
xchg
sbbb
jae
and
call
bound
push
mov
sti
test
imul
fcomps
mov
pop
in
aas
pop
mov
xlat
mov
out
push
add
jle
rorb
xchg
cmp
das
push
dec
imul
pushf
adc
mov
test
fdivs
push
xchg
sub
or
pop
mov
rcrl
fsts
inc
fsubrp
jbe
mov
fwait
and
push
mov
jmp
inc
shl
add
addr16
leave
push
in
mov
nop
clc
ds
imul
or
leave
mov
mov
loope
mov
stc
jp
xchg
mov
mov
mov
clc
mov
fsubrp
adc
test
and
jbe
gs
jbe
je
xchg
xor
scas
xchg
movl
pop
jno
je
push
mov
dec
push
sbb
jmp
stc
lahf
mov
adc
shl
dec
push
test
mov
cmp
pop
push
push
es
mov
cwtl
test
xchg
mov
mov
ljmp
sbb
or
jp
cmp
or
cmc
int3
cwtl
mov
pop
sub
int3
sbbb
sbb
pop
xchg
mov
dec
fcmovbe
jae
jmp
test
add
arpl
mov
stos
inc
lea
mov
lods
enter
mov
sbb
call
cmp
or
sarl
adc
jle
out
push
sti
lahf
scas
push
loope
ss
add
inc
jae
out
test
xlat
mov
cmpsb
add
fcmovnb
adc
push
cs
cltd
xor
les
ds
sub
clc
fs
adc
and
nop
add
mov
jne
jg
mov
adcb
outsl
fidivl
sbb
divb
cmpsb
daa
push
iret
push
pop
and
or
hlt
negb
imul
fsubs
xchg
in
in
pop
xor
inc
xchg
jae
cmpsb
push
jl
push
mov
sub
jb
lretw
dec
adc
cltd
and
lret
sbb
mov
add
add
mov
dec
mov
and
mov
mov
lret
sbb
aam
ret
fsubs
sub
es
add
in
xor
stos
insb
mov
stos
lock
repz
lret
or
mov
inc
les
add
adc
fisubl
and
scas
fmull
jne
xor
pop
gs
fcomi
ds
sub
lock
arpl
arpl
jl
pop
mov
popf
ja
mov
cmpsb
in
and
in
mov
test
orl
lret
pop
cltd
in
push
sahf
push
jno
popa
mov
loopne
sub
cmp
jo
stc
imul
scas
repz
scas
lods
mov
mov
inc
xlat
cmp
inc
pop
push
cmpsl
lahf
mov
xchg
mov
stos
out
inc
jecxz
lcall
ficompl
mov
les
mov
loope
sbb
dec
pop
fnstenv
ds
mov
out
cmp
jecxz
aad
sar
adc
pop
xchg
pop
lds
push
jb
adc
cli
ja
sub
xchg
dec
dec
ret
fidivrl
shrb
sti
jae
xor
dec
hlt
cltd
xor
sub
int
mov
or
aas
loop
fwait
adc
jge
popa
fists
jne
cmp
xchg
test
lret
cmp
loope
and
je
lds
push
cli
pushf
mov
pop
mov
cmp
stos
xchg
xor
push
jmp
gs
movsl
bnd
daa
nop/reserved
cmpsb
push
dec
add
jl
xchg
pop
mov
insl
cmpsb
fsub
add
loope
int3
loop
inc
dec
push
pop
dec
shl
mov
jnp
mov
std
push
push
inc
pextrw
fisubrl
ret
push
loope
jne
gs
pop
fadds
pop
loope
cmpsb
fsubrs
in
cwtl
push
jbe
xchg
loope
mov
jno
pop
and
jp
pop
pop
jl
mov
jecxz
lahf
ss
ja
lods
push
mov
and
cmpsb
pop
adc
sub
fwait
cli
xchg
fsubr
hlt
in
or
out
cmc
xor
dec
pop
xor
pop
mov
mov
shll
les
cmp
push
cs
in
xchg
test
xlat
jmp
or
add
lahf
inc
sbb
int
cmp
in
aas
adc
xor
test
loop
fcmovne
loopne
adc
dec
xlat
cmpsb
les
jmp
pusha
fstpt
adc
xchg
loope
add
call
push
into
adc
lock
pop
mov
jno
xchg
mov
push
jle
test
add
or
cmp
xchg
mov
and
cmc
fxch
or
xchg
xor
push
jo
or
enter
call
dec
pop
mov
test
test
test
into
mov
pop
push
call
js
sahf
xor
adc
cmpb
js
jno
push
sub
loop
ret
push
int
into
loop
movsl
mov
fistpl
xchg
jecxz
ljmp
cld
stc
in
dec
test
mov
stc
inc
das
in
psllq
jp
jmp
sub
push
insl
push
push
outsb
add
cmpsb
adc
js
fisubl
fldl2t
and
pop
stc
push
enter
rcl
bnd
inc
mov
movsb
push
xor
or
lret
sbb
pusha
inc
test
iret
xor
out
pop
aaa
cmp
dec
repz
push
and
scas
ljmp
jl
pop
jle
and
push
add
movsb
popf
fnsave
std
mov
daa
mov
sbb
addr16
iret
cmp
in
jns
xor
shr
stos
sarb
aad
lret
lock
xlat
aad
pop
sbb
insb
aam
pop
inc
jo,pt
xchg
mov
pusha
xor
ljmp
test
dec
or
in
push
dec
push
adc
push
mov
push
dec
adc
xchg
pop
jg
inc
insl
arpl
hlt
adc
lret
xor
sub
in
lods
xchg
jge
and
pop
jecxz
xchg
adc
sti
stos
jl
pop
in
stos
push
jl
push
mov
jg
and
jnp
pop
subb
cmc
scas
insl
sbb
cld
push
mov
mov
in
pop
mov
lods
mov
enter
xchg
inc
dec
fbstp
and
mov
dec
movsb
repnz
loop
mov
sbbb
ljmp
or
mov
shll
nop
mov
aaa
enter
ja
in
add
loopne
or
pop
mov
dec
jg
mov
dec
mov
or
mov
sbb
shl
mov
sub
mov
sarl
frstor
pop
dec
ja
or
cli
fwait
mov
int3
in
ds
jle
xchg
sub
and
cmp
dec
in
pop
xchg
in
push
sahf
enter
mov
shl
pusha
sti
sub
sbb
mov
mov
int
jecxz
push
mov
mov
rcrb
mov
lcall
fldcw
jl
leave
sahf
inc
std
mov
sbb
mov
bound
jl
cmpsl
mov
and
fs
mov
jge
mov
or
inc
push
adc
shl
sub
jp
adc
lea
in
sbb
dec
xor
mov
sub
aad
out
popa
mov
push
aam
dec
aad
jl
das
jg
push
cmpl
sarl
mov
mov
sub
and
fwait
sbb
mov
ss
cmp
push
cmpsl
add
xchg
mov
pop
out
pop
aas
test
pushf
int
xchg
andl
pop
jl
sbb
mov
and
xchg
add
leave
std
test
fdivrl
imul
ret
in
addl
pop
dec
pop
mov
lret
xlat
test
inc
mov
add
shr
push
and
add
push
js
mul
mov
adc
add
mov
sti
jl
cmc
adc
cmpsb
jecxz
xor
adc
roll
aaa
pop
ss
xchg
loop
jb
xchg
and
jno
add
push
fcoms
adc
ds
add
mov
or
fiadds
xchg
gs
lret
mov
stos
sbb
jl
stc
mov
add
cmp
pop
movsl
sub
repz
loope,pt
jge
or
cmp
addr16
stc
shll
inc
insl
jnp
jne
cmp
mov
shr
nop
jb
mov
nop
cmpsl
out
lahf
add
xchg
ss
sbb
and
ret
inc
loope
insb
lods
mov
aaa
aaa
cmp
push
xchg
add
cmp
repnz
test
pushl
cmpsb
out
rcrb
ljmp
rcrl
mov
imul
je
mov
inc
out
mov
enter
push
pop
xchg
mov
xchg
and
pop
mov
push
mov
ljmp
sub
jp
sub
mov
cmp
xlat
jmp
lcall
dec
jecxz
ja
mov
mov
jo
and
sbb
jp
daa
std
dec
in
xchg
into
adc
jne
cwtl
fdivs
incl
inc
int
lcall
inc
sub
loop
test
dec
xchg
lock
aas
dec
lods
xor
jmp
and
mov
test
ret
jb
rcrl
add
aaa
jge
pop
mov
sbb
insl
lahf
ret
iret
testl
xor
jns
push
jg,pn
mov
sbb
cs
mov
ljmp
mov
dec
ret
jo
jl
fwait
nop
jle
pop
repz
cmp
lods
cmp
mov
pusha
loop
loopne
dec
cmc
jnp
rcl
jno
mov
andl
xlat
ja,pn
fisttps
aam
lret
test
mov
sbb
pop
cmp
repz
xor
rcr
lods
addr16
sti
stos
int3
pop
sahf
sbb
pop
lds
lcall
sub
cli
cmp
nop
cmp
addb
push
inc
push
sbb
cmp
cld
in
test
lcall
jno
loope
mov
push
in
cltd
xchg
push
dec
jmp
fcmovnbe
out
pop
push
xchg
sub
cli
cmpsl
mov
push
mov
cwtl
mov
pushl
push
xchg
mov
jb
std
and
fwait
adc
test
sbb
into
lret
sub
pop
in
jb
pop
addl
mov
adc
dec
cmp
lret
adc
cmp
add
out
inc
fistl
mov
movsb
pop
mov
frstor
push
adc
sub
lret
cmc
stos
repz
dec
or
inc
cmpsb
cld
repz
cmpsl
ja
cmp
mov
and
repz
cmp
cmp
xchg
enter
lods
xchg
bound
pushf
sahf
lods
lds
andl
xchg
aas
es
dec
add
dec
inc
lods
aam
fbld
das
cmpsl
mov
test
inc
or
je
push
test
push
jne
mov
in
mov
test
dec
mov
inc
nop
sbb
mov
scas
arpl
sub
add
push
jp
mov
aaa
cmp
push
mov
jge
iret
push
sarl
test
lret
xor
lcall
incl
jge
pop
aaa
stos
cmp
test
cmp
push
aaa
loopne
xchg
call
inc
cli
or
push
push
test
out
jo
cmp
scas
dec
in
mov
icebp
jmp
fwait
icebp
sub
jmp
xchg
add
add
jl
sbb
stos
inc
add
mov
xor
sub
xchg
cltd
aad
xor
jge
mov
jge
lcall
fadd
push
shl
pop
test
mov
stos
add
sbb
loop
iret
jnp
sti
push
ja
jbe
fdivl
orl
mov
lea
stc
adc
in
adc
jne
shlb
adc
jmp
out
pop
mov
cmp
loopne
movsb
jge
cmpsb
divb
movsb
stc
dec
clc
adc
mov
loop
js
and
inc
pop
and
push
dec
subb
dec
push
dec
dec
inc
ror
push
je
dec
aas
push
loop
xorb
mov
loope
adc
push
xor
push
shr
or
push
aas
sub
mov
push
inc
sti
stos
std
add
or
insb
mov
push
movsb
cwtl
lods
and
aaa
jno
ss
push
sar
icebp
insb
pop
outsb
test
dec
pop
test
jnp
jns
daa
jns
adc
notb
loope
pop
aaa
stos
test
cmp
push
insl
jg
lods
repnz
xlat
inc
pop
or
test
stc
push
nop
aad
or
stos
mov
sarl
imul
or
sub
cmpsb
lock
std
fnsave
push
mov
je
cld
in
out
mov
fcoms
cmpl
aad
sub
mov
xor
loope
mov
lods
lcall
popa
aaa
xor
test
addr16
cmc
rcrl
push
mov
sti
xchg
pop
xor
cmpb
test
cmpsl
and
mov
loope
lods
icebp
out
fistpll
push
and
cmp
lahf
cmp
shrb
lds
lret
aam
dec
mov
and
lea
ss
xchg
jo
lock
daa
adc
cmp
je
out
fwait
push
pop
xchg
and
push
ds
in
push
sbb
lahf
cmp
into
fsubrl
call
dec
mov
push
std
lods
stc
add
lcall
and
mov
push
imul
int
addr16
in
and
push
inc
pop
inc
das
mov
push
push
outsl
jb
movsb
repnz
sub
cmc
mov
cmp
cs
mov
jae
test
test
push
popf
mov
fs
push
inc
rolb
inc
pusha
sti
push
mov
inc
fldcw
or
jle
fisubrl
scas
and
andb
push
cmp
xchg
into
ficompl
fisubs
cmp
mov
cmpsb
cmp
mov
dec
adc
cwtl
aas
mov
jmp
subl
xor
lret
mov
push
add
andb
mov
movsb
fidivs
sbb
jle
test
repnz
mov
cmp
mov
mov
adc
shrb
je
sub
mov
xchg
add
lcall
lcall
stc
sti
addb
ds
sbb
and
jg
loopne
pop
jno
bound
or
ret
mov
pop
push
cmpsl
cmpsl
dec
decl
jle
ds
dec
jnp
lret
cmp
idivb
add
lret
loope
push
cmpsb
inc
cmpsl
and
xlat
lret
inc
push
jmp
std
mov
cmpsl
push
pusha
adcb
mov
mov
mov
lcall
mov
mov
jne
add
add
mov
stc
pop
loopne
leave
push
cmc
push
repnz
aas
into
inc
pop
call
mov
aad
int3
xor
movsb
inc
xchg
test
cmpsb
cmpsl
dec
add
jg
inc
xchg
cmp
sahf
gs
ss
idiv
aad
and
jl
xor
fists
mov
jns
popa
jmp
jnp
xchg
xor
push
icebp
inc
mov
inc
stos
sti
daa
push
cmpsb
rorb
mov
loope
sub
rorl
repz
iret
xor
je
in
or
ret
outsb
bnd
fstl
cmp
inc
xchg
cmpsl
lock
inc
lret
std
push
fmull
xor
jb
insl
cwtl
jbe
out
push
mov
andl
test
push
pop
push
icebp
inc
cli
xor
int
cmp
xchg
repz
push
das
rolb
cmp
push
lods
pop
mov
jmp
push
lea
dec
inc
clc
or
imul
out
xchg
jo
sbb
sbb
int
lods
pushf
cmp
inc
sbb
mov
pushf
stc
pop
pop
sti
push
in
mov
scas
nop
aaa
leave
sub
pop
dec
adc
sub
test
mov
xchg
js
xlat
aaa
mov
insb
mov
sbb
stc
sahf
out
dec
add
sbb
pop
dec
pop
test
push
addr16
dec
cmc
cmp
push
lock
aad
cwtl
xor
lock
jmp
jge
add
jnp
push
cli
pushf
jecxz
xor
ljmp
xchg
add
pop
out
cmp
popf
subb
je
add
nop
adc
push
push
popa
enter
jo
add
leave
or
in
or
je
pop
adc
jmp
push
jae
push
gs
push
addr16
icebp
xlat
inc
int
mov
js
movsb
and
sbb
sbb
out
lea
or
xchg
cli
xchg
lds
sbb
lock
inc
or
movsl
sbb
xchg
aaa
xor
jle
outsl
dec
adc
jle
out
imul
inc
lret
sti
gs
xchg
cmpsl
decb
in
mov
rep
pop
xchg
out
bound
add
ss
in
xor
cmp
mov
jecxz
js
dec
call
sahf
sub
fs
cmp
aad
cli
sarb
adc
inc
cmpsl
mov
fsubrs
lods
fldt
sub
lock
das
imull
imul
repnz
add
inc
pushf
adc
mov
xchg
add
lods
inc
pop
xchg
mov
mov
xlat
es
mov
in
add
lret
mov
jmp
or
pop
jb
loop
jae
call
outsl
xchg
cmc
cmp
sub
inc
mov
aam
pop
xchg
outsb
add
dec
pop
call
in
cwtl
das
pop
lods
pop
mov
mov
adc
adc
enter
push
data16
ja
xor
cmp
lret
push
push
adc
ret
sbb
mov
hlt
lock
adc
aad
xorps
movsl
dec
adc
rcr
mov
xor
lret
mov
mov
jb
cld
daa
xor
mov
xor
mov
out
lds
jmp
popf
pop
iret
cmpsb
or
push
ds
pop
add
icebp
outsl
mov
lret
push
lods
ja
sub
insb
adc
std
pop
adc
fwait
pop
mov
stc
clc
pop
loopne
mov
xlat
vpmulhuw
add
out
mov
insb
cwtl
jecxz
insl
fnstenv
sbb
in
stos
mov
icebp
push
je
lods
outsb
aad
test
xchg
enter
inc
mov
adc
cmp
jle
outsl
cmp
jmp
add
mov
push
hlt
xor
jnp
repz
pop
push
sub
xor
out
lock
xchg
sub
cmp
mov
rolb
test
mov
clc
inc
dec
out
jae
mov
push
lods
fldenv
jne
cmp
pop
aaa
cmpsl
mov
sub
orb
ret
mov
ret
shl
je
sbb
xor
hlt
push
inc
xor
mov
push
push
aad
xchg
jle
and
rcll
in
test
add
push
add
lret
mov
sub
in
out
mov
mov
icebp
out
ret
outsl
lcall
sahf
gs
std
lods
mov
and
xchg
add
arpl
jmpw
ficoms
out
sbb
lds
push
or
mov
lock
int3
inc
test
iret
and
sub
add
js
xchg
jge
or
mov
fldcw
mov
add
dec
enter
sbb
aad
roll
jbe
sub
pop
pushf
jge
add
cmp
int3
ljmp
dec
pop
stos
fidivrl
adc
decl
or
cld
push
dec
movsl
fnstenv
xchg
pop
fwait
adc
lock
negb
notb
dec
jno
bound
inc
cmp
jb
xchg
lods
jns
inc
lahf
xchg
ss
inc
push
pop
xchg
cs
pop
jecxz
or
aam
xchg
cmpsl
mov
mov
ret
adc
lahf
pop
ljmp
stos
outsl
sub
and
add
repz
push
cmp
mov
es
and
loope
add
lds
es
and
clc
nop
xor
popf
es
inc
stos
leave
inc
and
call
andps
pop
jo
xlat
pop
cmp
mov
or
mov
cltd
insl
stc
popf
ss
jmp
stos
test
pop
loop
mov
mov
xchg
cmp
popf
dec
dec
xchg
scas
inc
lods
loopne
ds
sbb
fmulp
pop
add
sti
xor
imul
nop
mov
divb
push
cmp
hlt
pop
add
mov
lods
inc
push
or
jno
insl
and
cmp
test
jne
xlat
andb
mov
sub
fmul
sahf
xchg
xor
and
adc
add
sub
mov
pop
mov
pop
xchg
mov
mov
and
popl
ds
lcall
adc
pop
movsb
rsqrtps
movsl
push
adc
popa
loope
adc
xor
xchg
inc
out
mov
mov
sub
fsubrl
imul
adc
mov
sub
pop
cmp
jnp
mov
pop
subb
push
imul
sti
and
jp
jl
imul
ljmp
icebp
xchg
out
sub
inc
leave
cmp
jecxz
push
sbb
sbb
inc
push
out
stos
xchg
xor
push
aas
shll
sub
fsts
dec
mov
stc
movsb
es
test
aad
mov
xor
outsl
push
lock
sub
adc
pop
jmp
add
repz
ret
test
loope
pushf
test
andl
or
mov
dec
pop
test
dec
ds
jnp
into
fisubl
into
out
fdivr
xchg
sub
add
add
adc
dec
inc
sbb
arpl
in
sbb
cmc
mov
cmp
sarb
adc
xchg
std
inc
lret
out
mov
iret
iret
dec
mov
and
sahf
mov
and
jns
hlt
stos
mov
push
push
int
or
addl
and
lods
adc
adc
mov
jg
or
mov
mov
add
es
pop
fcmovne
mov
or
outsl
and
xchg
pop
xor
in
dec
testl
jle
or
mov
cwtl
push
cld
adc
data16
cld
lock
push
lret
jae
ret
rcll
mov
sahf
testb
hlt
dec
mov
test
xor
lret
loope
xchg
or
fildl
mov
addr16
push
lods
rclb
mov
sahf
xor
lods
adc
mov
adc
cld
outsl
jno
mov
out
xor
mov
jle
cmp
mov
xchg
adc
dec
mov
mov
push
xchg
arpl
pop
dec
jb
insb
in
mov
and
xchg
mov
shr
xchg
repz
mov
adc
cmc
xchg
fwait
jns
bnd
mov
xchg
call
dec
adc
sub
xchg
cmp
jns
sub
pushf
xor
sti
int3
subl
mov
notb
arpl
hlt
and
sbb
lods
inc
std
xor
les
and
ret
mov
dec
dec
xor
cmp
jbe
xor
pusha
loop
adc
test
fwait
ret
sti
test
push
xlat
and
cmc
pop
aam
push
fistps
push
in
mov
push
mov
mulb
addr16
sub
stc
mov
sbb
sbb
rclb
cmp
xor
push
or
fcomps
scas
add
loop
loope
outsl
fsubs
lea
xchg
sbb
stos
mov
xlat
inc
shlb
outsl
mov
push
icebp
in
xchg
mov
add
scas
sub
dec
dec
pop
lahf
sti
jno,pn
notl
pop
fldt
stos
inc
push
cmp
out
loopne
mov
adc
fsubrl
jne
mov
xchg
xchg
pop
icebp
or
mov
data16
mov
pusha
adcb
cmpsl
pop
xchg
dec
dec
pushf
imul
jle
xor
xor
cltd
and
push
mov
arpl
dec
movsb
inc
push
mov
push
loopne
or
push
jne,pn
xchg
sti
xlat
push
mov
inc
jns
push
ljmp
cmp
out
adc
divb
lcall
in
cld
push
wrmsr
or
into
inc
sbb
rol
xchg
lret
jo
adc
pop
jo
mov
push
xlat
scas
xor
push
jb
add
cmp
int3
add
cwtl
mov
and
fistps
sti
fistps
subl
mov
in
ret
pop
insl
cwtl
pop
jle
ret
cli
xchg
dec
mov
adc
xor
or
mov
and
push
cmp
add
ljmp
test
pop
push
out
mov
es
mov
mov
popa
dec
out
lcall
mov
or
jmp
out
aad
sti
and
clc
shrl
test
int3
arpl
sbb
mov
add
mov
mov
imulb
add
and
push
mov
mov
add
es
jg
pop
xor
xor
jmp
repz
shll
xchg
push
mov
popa
mov
scas
cmc
push
jg
loopne
push
sub
or
popf
pop
xchg
or
dec
and
cmp
mov
inc
xlat
jmp
xor
aam
repnz
std
lods
loope
dec
pushf
mov
popf
xchg
xchg
mov
divl
cmp
inc
rorl
loopne
ss
mov
sbb
into
lods
mov
mov
xor
mov
int
xchg
sahf
xchg
mov
adc
pop
inc
xchg
insb
sbb
scas
xchg
or
add
jne
cwtl
cwtl
sbb
imul
sbb
rclb
leave
xchg
pusha
pop
notl
add
pop
or
loop
add
push
xchg
je
ja
divl
pusha
ss
inc
data16
leave
das
add
adc
and
loopne
mov
cmpsl
cmp
or
ss
jbe
mov
jp
aad
add
scas
insl
add
cmp
js
cmpsb
subb
gs
mov
testb
or
stos
jne
jl
mov
push
fadds
int
mov
inc
lret
jb
sub
adc
mov
push
and
mov
cmc
mov
xor
sbb
test
mov
push
andb
mov
inc
stos
fcomps
inc
pop
adc
andl
enter
push
push
fiaddl
inc
xor
addr16
scas
pop
xor
push
or
add
cmp
mov
icebp
jnp
cmpsb
pop
inc
sub
sarl
add
add
and
mov
adc
mov
fisubl
sub
push
inc
sub
and
mov
in
add
dec
and
or
adc
adc
jne
xchg
inc
dec
aad
inc
hlt
push
inc
push
mov
pop
cmpb
cmp
cltd
lock
imul
sbb
push
fstpt
sbb
int3
mov
popa
jp
adc
fildl
xor
jle
into
jb
fwait
inc
fmull
loopne
fnstenv
pop
xor
jmp
bound
cld
jo
push
dec
outsb
test
mov
mov
xchg
add
inc
cwtl
fwait
movsl
xor
in
out
push
cmpsb
pop
push
jmp
add
jb
and
xchg
push
mov
repz
sbb
xchg
std
jo
popa
mov
mov
clc
inc
rcrl
out
clc
mov
ss
repnz
test
aam
arpl
mov
mov
hlt
shll
adc
stc
and
push
cmp
add
push
and
pop
enter
and
sbb
or
jmp
pop
hlt
jo
and
and
push
bound
adc
mov
dec
dec
push
mov
adc
fmuls
push
sbbb
push
or
push
jno
clc
jae
sbb
repnz
popw
dec
jp
cmp
jns
mov
jnp
inc
in
out
cmpsl
jg
in
repnz
mov
dec
and
lods
cld
xchg
push
cmc
mov
push
outsl
mov
repz
fadd
sbb
push
push
pop
cmpsl
data16
icebp
xchg
and
or
sub
lahf
dec
inc
jp
add
out
clc
pop
stc
or
push
mov
and
xchg
movsl
cs
sbb
mov
dec
pop
or
xor
fidivl
and
ja
xchg
push
push
pop
cli
add
insb
cld
movsl
sbb
add
pop
daa
psubq
adc
dec
roll
mov
lock
js
imul
adc
mov
cltd
std
scas
scas
mov
popf
fwait
sbb
icebp
loope
ja
push
pop
fmull
sub
aaa
inc
mov
inc
fcoml
adc
xor
pop
sti
dec
fwait
lds
scas
mov
cmp
adc
cli
pop
adc
pop
jb
cmp
cmpsb
mov
jno
int
adc
and
jne
mov
in
scas
mov
xor
test
es
sbb
cltd
stos
scas
push
adc
int
pushf
mov
out
mov
lods
clc
ficompl
lea
nop
pop
pop
push
gs
or
pop
iret
pop
and
jg
mov
movsl
adc
aad
cmp
out
mov
push
sti
pushw
lds
pop
push
push
or
adc
mov
cmp
addr16
popf
inc
stos
bnd
pop
cmc
pusha
insl
inc
cltd
adc
cmp
loop
sbb
ficoms
fists
lcall
xchg
jecxz
dec
jle
mov
int
sub
mov
push
lods
adc
pop
push
or
sbb
or
stos
dec
lock
mov
jmp
addr16
jns
out
outsb
push
push
or
jb
test
mov
xchg
in
xor
add
mov
fsts
xchg
mov
pop
loope
ja
aam
xchg
add
adc
xor
fwait
xor
sub
dec
push
in
dec
push
js
cmp
notl
daa
call
notl
clc
mov
test
std
push
test
push
dec
add
mov
mov
or
cld
and
sbb
push
jmp
stos
lahf
fcoml
xchg
xchg
shlb
mov
fsts
mov
mov
add
push
cmp
push
out
mov
dec
arpl
sub
lods
nop
mov
inc
loopne
popf
mov
movsl
fcomi
mov
lods
jnp
xorl
sub
pop
loope
mov
cmp
cmp
pop
jecxz
jb
mov
pop
sub
cmpl
or
test
push
fldenv
outsl
std
arpl
xlat
test
aad
dec
push
in
sub
dec
je
js
sbb
mov
dec
sbb
xchg
jge
mov
js
arpl
xlat
cs
xchg
dec
mov
fcmovbe
push
js
orb
sub
jl
je
cmp
and
aaa
and
push
jg
enter
movb
dec
std
imul
fcoml
int3
flds
imul
pop
and
cltd
das
lds
xor
aam
inc
push
mov
hlt
addr16
sub
jl
fidivs
adc
fldenv
outsl
xchg
test
cwtl
cmc
push
xor
jecxz
xchg
cmp
pop
jae
fwait
movsb
jge
jle
insl
fistl
insb
aas
push
pop
popf
and
fnsave
jg
mov
jge
and
pop
mov
pop
jecxz
push
sub
loop
hlt
mov
push
mov
ja
repz
lret
cwtl
dec
ret
fucom
dec
jns
mov
ja
inc
add
inc
mov
push
xchg
fnsave
fwait
or
xor
imul
lret
imul
adc
inc
fdivp
daa
out
adc
mov
pop
insl
scas
adc
fidivl
lea
clc
stos
int3
cs
add
cld
gs
mov
adc
inc
sub
cltd
fdiv
mov
add
fsubl
pop
dec
mov
add
lret
cmp
push
insb
cmpsl
mov
mov
fwait
mov
lret
xchg
daa
mov
aam
xchg
pop
add
stos
scas
mov
mov
or
and
bound
bound
testb
xor
stc
and
cmp
cmp
cli
fucom
jb
sbb
pop
popa
xor
int
or
mov
jb
sarb
jle
fbld
insl
push
cld
xor
test
lret
sbbl
push
mov
sbbl
popf
int3
inc
bound
std
jg
push
inc
fadds
lods
add
in
repz
cs
ja
pop
pusha
pushf
jnp
jp
mov
or
cmp
filds
inc
push
mov
idiv
leave
pusha
jmp
cmpsl
mov
xor
and
cmp
xchg
adc
xchg
adc
pop
jbe
pop
out
sti
mov
movsl
inc
push
adc
test
fwait
cmpsl
jp
adc
dec
jg
icebp
mov
fdivs
add
and
hlt
aam
mov
sbb
das
push
ficoms
fisubrl
les
fsubr
aaa
mov
cmp
xor
mov
notl
push
adc
aam
test
push
lret
bound
sub
cmpsl
outsb
sub
pop
sub
xor
push
inc
cwtl
push
sub
fisttpll
repz
xchg
imul
rorb
push
out
pop
std
test
fstpl
in
bound
leave
or
dec
sahf
in
shrl
shr
gs
jno
pop
inc
pushf
xor
pusha
push
cmp
mov
into
lods
jmp
test
hlt
push
js
pushf
cmc
and
pop
insb
dec
inc
test
inc
pop
and
xlat
repz
popa
ds
rorl
repnz
sbb
out
inc
sbb
add
inc
imul
fmuls
clc
cs
add
cmpsl
out
clc
mov
icebp
adc
inc
mov
mov
loope
or
test
cmp
sub
xchg
fisubs
fldl2t
jge
mov
rcrb
jo
stos
mov
sbb
lock
dec
mov
cmc
mov
add
test
sub
fsts
xor
adc
sbb
mov
and
xor
sub
js
shrb
gs
push
rolb
imul
xor
ja
lcall
insb
xchg
daa
mov
pop
lds
jb
xchg
fistl
mov
sbb
and
push
hlt
sbb
cld
mov
push
iret
rorb
dec
inc
int3
mov
adc
decl
cmp
in
dec
repnz
sub
or
jp
pop
push
loopne
daa
push
das
jge
lcall
pop
loopne
xchg
mov
rcll
stos
xchg
xchg
pop
sbb
pop
xor
popa
sub
xchg
arpl
dec
sahf
jae
lret
ljmp
fisttpl
pop
lret
enter
fstpl
push
pop
push
icebp
xorb
add
mov
adc
mov
xchg
xchg
xor
pop
xchg
xchg
and
lods
xor
nop
push
jl
ds
adc
cmc
pop
cld
fwait
in
xchg
popa
leave
in
and
inc
push
sbb
sbb
or
cs
mov
cmp
repz
shl
inc
push
lods
mov
xor
lds
repz
mov
movq
mov
mov
and
repz
xlat
outsb
dec
or
cmp
fisubrl
adcl
aam
gs
pop
inc
and
or
cmp
mov
mov
mov
or
jge
popf
jae
xor
loope
leave
push
rorb
mov
ljmp
stos
mov
loop
xor
fists
add
dec
xchg
xor
rcrb
push
adc
nop
jb
jns
sbb
fstpt
iret
hlt
add
fsubr
inc
jp
lret
inc
inc
or
adc
lea
sbb
lods
and
lods
push
into
xchg
int3
lcall
ljmp
jno
cmp
decb
daa
xor
cmc
lea
or
scas
jl
jbe
scas
xor
test
lret
popf
movsb
push
xor
ja
leave
inc
mov
pusha
outsl
popf
int3
mov
fisubs
jle
mov
xor
in
imul
cmp
ja
outsl
clc
adc
movsb
test
test
insl
jns
pop
xchg
pop
adc
aad
xor
test
cmp
jl
sbb
nop
add
mov
ds
cmp
inc
mov
mov
arpl
sub
xchg
push
cli
inc
cmp
les
mov
orl
push
add
push
xchg
adc
xor
jge
sub
sbb
stos
or
pop
mov
enter
lahf
ss
push
sub
sbb
push
out
aas
jb
stos
mov
ret
in
or
daa
dec
jbe
dec
stc
pop
hlt
in
fidivl
idiv
mov
nop
out
add
cmpsl
mov
mov
aad
xchg
aaa
pop
lahf
push
fdivl
xor
repz
cmpsb
out
adc
jnp
cltd
cmp
aaa
imul
cmp
mov
sbb
loop
mov
xchg
insl
xor
hlt
push
and
push
pop
push
push
in
packsswb
or
out
mov
push
das
xlat
and
std
mov
rolb
cwtl
xor
mov
popa
and
mov
shrl
loop
mov
adc
pop
push
mov
lods
lahf
sbb
xchg
sbb
lea
sub
divl
iret
mov
mov
mov
pop
sbb
loopne
ret
repz
nop
arpl
out
sti
ret
push
pop
xor
movlps
pop
dec
dec
adc
out
shll
dec
lock
aaa
stos
jg
push
out
dec
adc
ret
sub
in
decb
xchg
dec
mov
and
xchg
shlb
mov
ret
call
test
fisubl
jle
xor
pop
xor
inc
loop
jns
push
incb
jno
mov
xchg
inc
push
repz
cwtl
mov
dec
pop
or
xchg
sub
or
add
xor
sbb
fs
sub
adc
xor
add
mov
pop
dec
dec
shl
jp
cmp
and
adc
lret
flds
adc
push
enter
lret
shrl
or
imul
inc
sbb
fsts
jb
mov
fstl
out
sbb
test
add
mov
mov
lock
mov
shl
loop
adc
push
inc
fiadds
gs
daa
or
mov
jg
xadd
lods
inc
cmp
cmc
jo
imul
and
shll
dec
int
cmp
cmp
iret
xor
push
out
add
movsl
jnp
hlt
repz
adc
jb
stos
lds
dec
ljmp
cmp
and
xor
bound
stc
std
lods
mov
outsl
mov
mov
push
call
push
test
ljmp
outsl
mov
push
mov
les
iret
addr16
shll
lret
xlat
loop
mov
adc
sub
adc
push
mov
lret
or
pusha
dec
pop
mov
add
adc
push
mov
clc
ret
pop
imul
dec
dec
dec
leave
fwait
pop
cmp
enter
mov
inc
pusha
xor
xchg
addr16
ret
rcrl
bound
inc
cli
cmpl
lods
adc
frstor
cmpsl
dec
rorl
ret
sbb
jmp
test
lods
lcall
stos
fdivs
cwtl
cli
xchg
or
pop
aad
xor
sbb
mov
cmp
sarl
xor
xlat
mov
pop
lea
lods
add
and
popa
xor
push
push
scas
inc
aam
push
out
and
jp
dec
jb
leave
mov
push
out
aad
lret
into
push
mov
push
jl
push
aam
sbbl
or
out
test
cmp
or
sub
xor
dec
or
mov
outsb
push
jo
out
xor
jmp
std
lret
aaa
ss
gs
xor
mov
mov
pop
mov
mov
jp
enter
movsl
iret
and
adc
out
je
aaa
xor
mov
inc
mov
mov
fdivs
jb
dec
mov
mov
add
andb
jp
shll
add
mov
insl
fiaddl
push
outsb
xchg
sar
mov
pop
imul
dec
outsb
in
fs
stc
aad
cmc
ss
or
pop
push
xchg
in
sahf
or
mov
dec
aad
sbb
sbb
push
jmp
or
mov
fisubl
outsl
rcr
mov
ret
loop
stc
xchg
push
inc
sahf
xchg
cwtl
adc
das
pop
jno
pop
cmpsb
out
frstor
aad
loopne
shll
lds
adc
add
dec
jecxz
ds
loopne
sbb
xchg
into
fistpl
scas
loop
movsb
es
cs
cmp
test
leave
mov
xchg
mov
push
inc
push
inc
ja
inc
test
int3
scas
fidivrs
fdivp
mov
popf
mov
mov
bound
adc
nop
mov
xor
aaa
adc
xchg
or
mov
stos
jle
push
xchg
aas
mov
push
pushf
mov
push
cmpsb
icebp
je
inc
sti
lods
xchg
add
sbb
jae
clc
sti
leave
xlat
insl
push
ds
add
test
daa
pop
cmp
jns
dec
outsb
aad
scas
lock
mov
and
xor
sbb
mov
sbbb
pop
out
std
pop
enter
rol
mov
daa
outsl
daa
lret
or
mov
out
mov
lods
jae
popa
mov
mov
fmulp
and
push
adc
adc
in
fmulp
push
loop
stos
dec
add
shl
adc
sbb
or
shrb
addr16
lret
aad
lret
mov
fcompl
gs
mov
dec
cltd
xchg
les
jge
arpl
jbe
sbb
inc
pop
data16
sbb
mov
and
jecxz
mov
dec
cmp
xchg
sub
ret
repz
test
movl
imulb
cmp
cmp
lcall
bound
jno
mov
or
dec
and
loopne
loop
fldcw
scas
icebp
inc
dec
loope
jl
push
pop
xor
fnstcw
push
sbb
mov
das
xchg
popa
stc
pop
vpmulhuw
mov
mov
aad
push
mov
jno
xchg
inc
movl
push
fisubs
shll
push
mov
adc
push
cmp
xlat
add
sbb
or
add
xchg
aaa
out
scas
mov
nop
dec
fs
repz
xlat
sbb
jle
test
or
jp
xchg
shrl
pop
insl
sti
pop
jmp
testl
push
xlat
rorl
add
push
pop
lds
jbe
jg
dec
push
in
mov
fldl2t
pop
jns
push
mov
clc
dec
mov
jg
movsb
popa
dec
dec
xchg
arpl
jo
rolb
mov
mov
jo
jnp
in
clc
cmp
pop
outsb
mov
inc
xchg
xor
movsl
lock
cmpsl
inc
cmp
xchg
adc
jge
adc
in
ret
push
subb
xor
enter
enter
lods
insl
call
hlt
lret
inc
sub
add
inc
pop
sub
aad
dec
dec
cltd
mov
sub
pop
and
addr16
jns
fldt
jae
pop
cmp
xchg
pop
ljmp
jo
add
xchg
push
rcrl
inc
adc
jns
ljmp
add
outsl
mov
inc
int3
xchg
jns
dec
movsb
or
jae
movsl
cmc
jno
mov
xchg
cmc
pop
scas
out
fs
arpl
stos
jge
outsl
je
lret
pop
and
out
or
in
jns
leave
and
andl
pop
mov
dec
fdivl
sbb
out
mov
lods
jns
fcmovnb
data16
mov
lret
adc
adc
jbe
imul
inc
mov
cmc
and
sbb
xchg
icebp
mov
push
shll
sbb
mov
xor
sbbb
and
js
mov
and
iret
adc
sbb
or
pop
movups
outsl
sbb
nop
mov
dec
out
out
cmc
ja
sbb
es
push
jns
jbe
std
adc
xchg
sti
pop
addr16
cmp
lods
in
sarl
rcr
xchg
rolb
pop
cmpsl
or
jecxz
push
cmc
push
cli
scas
mov
adc
dec
cltd
or
inc
jb
jb
lretw
push
push
dec
mov
pop
jecxz
pop
push
xchg
adc
sbb
vxorps
les
sbb
cwtl
mov
sub
iret
mov
xlat
and
repnz
loopne
fidivrl
movsl
clc
lock
scas
sbb
add
sub
lret
inc
pop
testb
sbb
xchg
in
jge
sti
push
je
repnz
daa
inc
cmpsb
fcmovnbe
cs
loope
in
rol
push
pop
mov
xchg
add
test
or
cmp
xchg
sbb
mov
cmpb
cmp
out
loope
fadd
fisttps
push
sbb
xchg
xchg
hlt
pop
lret
and
in
popf
sbb
stos
in
sbb
ss
cld
jp
mov
mov
pcmpgtb
pop
sub
sbb
repz
shlb
pusha
subb
mov
loop
mov
lock
iret
cwtl
mov
add
daa
fcomps
gs
ljmp
push
sbb
shlb
jae
das
mov
add
xchg
mov
adc
fmull
jl
bound
into
or
in
sarl
mov
mov
adcl
mov
cmp
push
hlt
lret
xchg
iret
add
loope
adc
fnstsw
das
pop
push
cmp
outsb
fcmovnbe
arpl
cwtl
imull
mov
mov
data16
aad
adc
ret
int3
adc
decb
sub
lret
aas
sub
xor
cmp
fdivrl
and
add
xor
lret
jns
imul
sub
insb
inc
fldenv
pop
shlb
movsb
loop
sub
inc
insb
sub
pop
imul
push
pop
imul
pusha
mov
mull
pop
dec
lea
in
sub
push
imul
jg
xlat
lods
iret
mov
out
push
inc
test
and
fstpt
icebp
inc
and
arpl
mov
dec
fcoms
push
lcall
cwtl
pop
cmp
and
xor
repnz
test
xchg
mov
mov
ja
mov
add
sub
leave
mov
jno
sbb
mov
adc
cltd
lret
icebp
idiv
add
push
popf
sub
out
pop
ret
js
xor
and
jge
into
arpl
sbb
sub
orl
bound
sub
xor
xchg
and
push
mov
sub
inc
arpl
nop
sbb
lcall
inc
cmp
or
jbe
rcrl
inc
inc
imul
sbb
hlt
stc
mov
cli
mov
jg
jo
dec
in
xchg
jnp
sub
cmc
cmpsl
mov
mov
dec
dec
jb
sbb
mov
mov
fsubrs
es
fs
and
insb
add
push
ljmp
test
add
sub
adc
xor
gs
in
iret
sbb
add
lods
mov
test
fbstp
sub
push
out
leave
aas
fstl
mov
popa
testb
or
cld
lea
stos
jne
add
or
mov
push
inc
cmpl
inc
adc
and
jbe
xchg
repz
add
aas
pop
mov
sbb
push
daa
jae
pop
repz
sbb
iret
pushf
xchg
pusha
icebp
or
mov
push
std
xchg
loop
jnp
pop
add
movb
rolb
xor
mov
out
aad
xor
pop
outsb
cmpb
minps
leave
pusha
dec
lcall
dec
cmpsl
hlt
addr16
sahf
scas
call
fcoml
mov
int3
sbb
mov
cmp
pusha
mov
pop
pop
es
out
xchg
test
jle
popa
and
sub
cmp
out
shlb
call
ja
dec
lret
cmpsb
std
xchg
or
nop
ds
xchg
es
fwait
mov
cltd
ret
dec
imul
enter
int3
sbb
push
or
inc
inc
scas
jbe
scas
push
push
test
aas
push
aas
lcall
es
inc
insl
loope
adc
cmp
xor
pushf
popa
cltd
aam
in
and
mov
inc
jle
dec
mov
xchg
ja
out
mov
sub
mov
jmp
jbe
stos
jg
fs
test
cmpsl
imul
loopne
dec
cmp
int3
cmp
outsb
std
adc
sbb
mov
adc
outsl
or
rcr
clc
mov
add
pushf
popf
or
stc
mov
jmp
push
test
mov
ret
push
test
daa
push
fdivl
pop
or
popf
stos
vsubss
test
fmull
cli
push
fcmovne
in
sbb
jb
fisubs
mov
aas
fisubrl
or
push
dec
sti
cmp
notl
shll
repnz
aad
jnp
test
lret
sub
or
xchg
leave
das
jne
lcall
push
jbe
mov
or
xor
cmp
cmp
push
jnp
fwait
movsl
add
je
movb
pop
sbb
xchg
jo
shlb
sbb
mov
xchg
mov
cmp
jge
int3
scas
add
pop
loop
dec
ds
add
mov
shrl
push
push
xor
add
cwtl
jo
int3
pop
stc
test
mov
mov
push
push
mov
pop
push
pop
fnstenv
leave
mov
push
rolb
push
push
sub
push
fadd
push
jecxz
and
xchg
add
jge
in
or
inc
scas
shlb
aad
xlat
lret
and
addr16
js
roll
pop
scas
lods
aam
jne
jg
jp
mov
imulb
test
add
es
push
js
push
stos
imul
adc
cwtl
insb
in
fsubl
in
pop
pop
mov
lret
lret
push
push
xor
pusha
aad
mov
or
jne
xchg
aaa
movsl
jl
cmpsl
jbe
jle
sbb
inc
mov
mov
mov
frstor
repz
lods
inc
sub
inc
shll
xor
decb
push
mov
adc
scas
push
xor
mov
fidivrs
fisubs
mov
repz
outsb
cmp
add
mov
bound
data16
or
std
mov
xor
jnp
add
pminsw
sbb
dec
mov
xor
sub
push
call
sub
cmpsb
cmp
push
movl
adc
dec
xchg
test
mov
sbb
add
inc
fsubr
out
lahf
adc
mov
test
icebp
rorb
lret
notb
stos
jbe
mov
lea
mov
test
int
jge
sti
fdivrl
jo
int3
gs
jne
add
adc
xchg
and
js
mov
sbb
repz
loopne
mov
fiaddl
push
pop
cmp
call
jl
aas
pop
push
xlat
out
stc
divl
fcomps
add
pushf
adc
and
nop
ret
je
aaa
pop
adcl
mov
add
pop
inc
mov
sbb
pop
cmpsl
inc
testb
fisttpll
push
inc
sub
pop
inc
bnd
pop
bound
imul
or
push
cmp
add
pop
jmp
jmp
and
push
popa
notb
adc
pop
sbb
xor
cmp
divl
fwait
xor
xor
mov
mov
push
mov
mov
or
int3
add
cwtl
push
and
cli
or
mov
daa
sub
inc
cmp
pop
xor
mov
fcompl
ret
push
xchg
int
enter
pop
pop
inc
cld
push
jle
or
ja
push
jmp
shl
jno
cwtl
xor
sbb
insl
add
fnstenv
jno
adc
adc
cmpb
movsl
mov
sbb
mov
stos
push
push
insb
mov
and
inc
fmuls
push
test
lahf
mov
mov
dec
adc
pushf
or
out
adc
imul
mov
imul
mov
mov
xchg
sbb
push
add
xor
sahf
rclb
fwait
or
and
arpl
jge
jp
or
mov
in
lret
test
pop
scas
mov
lods
sbbl
insl
jecxz
sbb
scas
sti
mov
aaa
scas
nop
cmpsl
add
out
addl
adc
jbe
adc
sub
rclb
cmp
sub
add
jnp
into
and
into
aas
push
xor
je
jle
and
dec
subb
bound
loope
mov
cmp
cmpsb
test
idivl
dec
testb
add
out
add
jle
push
lcall
popa
movsb
lret
mov
jno
xchg
call
leave
lahf
pop
cbtw
cs
imul
inc
jno
xor
cs
stos
mov
out
sti
mov
lds
mov
stc
shrb
fisubl
adc
stc
inc
pcmpgtb
mov
ss
int3
push
daa
push
mov
and
fisttpl
bound
fisttps
xchg
js
jmp
fstl
in
test
push
sub
dec
enter
inc
jmp
or
fdivl
and
push
ret
dec
in
dec
add
in
mov
int3
loop
adc
aad
xchg
inc
xchg
cwtl
xor
push
out
rcrb
rol
jl
jnp
mov
jmp
rcrl
jg
push
xchg
js
dec
dec
sbb
testl
loope
inc
sub
test
push
out
mov
xor
push
xchg
cmp
movsb
addr16
sub
jmp
shrb
mov
mov
je
enter
push
pop
sbb
jge
sub
push
lods
jmp
js
popf
xor
lcall
loop
test
sbb
cmp
in
ret
sub
mov
les
cmp
imulb
scas
push
mov
mov
pushf
xchg
mov
pop
iret
jns
cmc
js
mov
mov
xor
adc
fwait
test
mov
shrl
mov
ja
xchg
popf
lods
pop
out
sub
mov
push
lret
pop
jns
jmp
jbe
pop
jbe
lea
cwtl
push
dec
out
jo
subl
insl
fmul
lds
or
jno
push
into
adc
jae
mov
cmp
add
ret
mov
mov
int3
imul
xor
mov
mov
mov
adc
inc
jp
and
and
xor
inc
stc
sahf
mov
iret
call
adc
loope
mov
mov
fst
cmc
push
jl
imul
mov
jmp
inc
imul
adc
notl
test
mov
ret
icebp
adc
lds
jns
test
sbb
cmp
pop
test
lods
dec
fisubs
xchg
int3
sub
pushf
negl
iret
adc
cltd
inc
fwait
or
cmpl
pushf
enter
push
notb
xchg
adc
and
or
sbb
cmp
js
sub
sarb
out
gs
sbb
bound
test
or
add
push
adc
xor
out
fbstp
jg
pop
mov
xor
aad
pop
jno
inc
mov
outsb
fidivl
push
lods
sbbb
cmp
imul
dec
std
add
dec
scas
sbb
jbe
mov
movsb
das
sub
xor
mov
cltd
std
aam
sbb
je
sub
pop
mov
das
neg
push
mov
ljmp
leave
adc
out
test
pop
cwtl
fnstsw
cmp
dec
movsl
mov
xchg
push
es
push
addr16
jb
mov
dec
je
push
mov
mov
jmp
pusha
sbb
sbb
push
hlt
loopne
pop
leave
test
adc
fcomps
dec
adc
mov
pusha
xor
mov
xchg
xor
nop
stos
cmp
xchg
arpl
bound
mov
shll
rcl
in
ret
cld
mov
and
lock
inc
jb
jne
mov
into
xchg
lods
jg
pop
add
mov
and
dec
loope
mulb
cmp
push
xchg
lods
and
cs
xor
das
inc
out
cmp
inc
in
leave
push
mov
pop
pop
in
mov
cmc
test
xor
add
inc
fstl
or
imul
and
cmpsb
sti
cld
xchg
adc
fnstsw
test
xchg
or
ficoms
push
mov
imul
int3
movsl
das
mov
xchg
jns
sub
in
jne
fistps
imul
push
test
gs
in
and
or
jl
push
jb
subl
shlb
icebp
lahf
sbb
repz
ret
jle
inc
push
mov
and
inc
sbb
sbb
pop
pop
call
scas
add
pusha
stos
or
inc
adc
cmc
xchg
and
fdivl
xorb
fidivrl
dec
jg
adc
stos
shlb
jg
fwait
mov
out
test
sarl
shl
add
dec
mov
je
or
push
scas
sti
lds
out
xor
adc
mov
addr16
stos
push
in
sbb
xchg
idivb
add
pop
xlat
adc
or
scas
pop
cmp
insl
xor
dec
add
ret
pop
sahf
out
xor
pop
mov
ret
sub
pop
pop
cmp
jmp
sub
jo
mov
lods
jmp
das
dec
andl
int
fdivr
adc
jp
xor
ljmp
dec
leave
lods
sub
fucomip
iret
sub
add
insb
in
imul
mov
cmpsb
ss
mov
mov
dec
adc
sbb
into
xchg
mov
jl
addr16
mov
cld
xchg
mov
cli
jge
pop
mov
push
add
lods
adc
or
out
mov
or
lahf
dec
xchg
ret
mov
in
xchg
mov
pop
add
add
mul
xchg
and
pop
adc
scas
fdivs
fldcw
das
lods
lahf
testl
addb
sbb
jno
decl
mov
fists
das
jle
mov
mov
jge
dec
les
or
mov
shlb
cmp
aad
fistpl
sbb
cld
xlat
jns
loop
ss
in
sarl
mov
inc
inc
push
xchg
add
jle
jo
mov
das
push
testl
call
push
xchg
je
or
aad
bound
pop
fcmovnbe
or
add
mov
sti
mov
outsl
js
adcb
push
cs
jg
mov
jmp
inc
and
xchg
pop
hlt
ret
fcoms
inc
adc
fldl
mov
cmc
pop
enter
jl
sbb
add
stc
fnstcw
je
enter
enter
mov
sbb
cmp
jno
xchg
push
mov
gs
repz
or
jne
fs
xor
insb
das
jmp
fwait
add
sub
pop
cmp
pop
dec
lock
pop
into
loopne
iret
aaa
into
add
stos
xor
ret
lret
lcall
and
in
inc
fldcw
sahf
pusha
test
push
cs
push
sbb
orb
les
ds
push
repz
enter
add
cli
pop
cmpsb
gs
leave
call
int
cwtl
push
js
test
icebp
cltd
lahf
xor
xchg
insb
sub
shl
xor
test
jmp
push
xor
mov
adc
xor
or
push
or
fcomip
lcall
push
jmp
cwtl
pop
in
ds
repnz
fldl
out
mov
loopne
xor
dec
push
into
ljmp
mov
xor
fldcw
mull
out
movsl
cmp
dec
mov
add
mov
ss
sbb
es
push
test
mov
pop
fwait
sub
xchg
sub
dec
sbb
ret
jecxz
add
das
movsl
mov
dec
mov
pop
add
sub
aas
jno
scas
sub
pushf
inc
fnstcw
clc
arpl
sbb
mov
mov
mov
rcrl
mov
addr16
in
rcrb
jo
xor
mov
pop
push
out
mov
stos
push
js
adc
xor
ret
and
jne
cld
cmpsl
shll
rcl
out
ja
inc
lret
sub
cmp
jecxz
vorps
in
mov
fwait
sub
xchg
lret
bound
fcoml
int3
jmp
or
or
push
xchg
and
enter
and
mov
push
out
pusha
mov
imul
adc
fnsave
xchg
push
icebp
orb
sub
adc
leave
ljmp
cmp
fs
orb
lcall
inc
dec
sub
add
mov
inc
out
in
add
push
or
sub
or
mov
sub
sbb
outsb
fisubs
xor
push
mov
cmp
cltd
add
outsb
into
rcll
mov
or
mov
and
xor
mov
dec
stos
insb
mov
mov
add
and
std
sarb
fstps
cs
sub
pop
out
pop
ds
inc
sbb
jb
xor
dec
xchg
loope
inc
subb
out
mov
xor
jle
je
jne
lret
push
add
test
jno
push
fistpl
inc
push
ljmp
negl
scas
push
xchg
lahf
hlt
add
mov
add
mov
xchg
sbb
scas
jp
jle
push
sub
lahf
jne
in
push
sub
push
sbb
inc
mov
sar
and
cld
and
xor
xchg
jl
rcr
cmc
inc
inc
stos
inc
push
cli
or
sub
ficoml
sbb
sbb
pop
jae
lahf
lods
gs
fwait
add
push
cmpsb
push
push
lods
dec
js
scas
adc
inc
push
lret
inc
inc
cmp
push
cs
inc
aam
jl
push
frstor
push
xlat
mov
pop
dec
bound
mov
lcall
sub
loope
sub
sbb
xchg
jmp
stos
sub
and
or
enter
inc
mov
pop
pusha
iret
mov
scas
adc
xchg
dec
enter
jecxz
add
sub
mov
inc
push
outsb
mov
aas
xchg
test
push
mov
xchg
mov
ret
lods
or
shrb
jns
shlb
adc
xchg
sti
insl
or
in
add
out
jmp
cmc
icebp
fwait
fwait
sti
xchg
dec
movsb
jp
mov
fstps
test
popf
movsl
aaa
fidivl
lock
fs
pushf
lahf
repz
daa
sti
cmp
movl
inc
push
mull
repz
aam
push
and
aam
adc
mov
mov
jmp
fadd
into
mov
in
stos
in
and
jl
pop
scas
and
in
test
incl
scas
xor
in
sub
inc
xlat
push
inc
jecxz
dec
icebp
sbb
insl
cmp
push
outsl
mov
insb
loope
mov
inc
or
fisttpll
std
adc
imul
jo
and
push
arpl
andl
loope
mov
inc
movsl
jb
pushl
fbld
or
cltd
daa
pop
sbbb
icebp
sbb
arpl
js
xchg
xor
test
mov
in
scas
xor
xchg
scas
mov
sbb
jp
cmc
sbb
pushf
sub
xchg
sub
dec
add
ss
jl
stos
popf
pop
xchg
sub
cmp
popf
in
sub
jae
nop
adc
daa
and
xchg
jnp
add
ret
pushf
sbb
loopne
mov
add
jge
out
lcall
leave
or
rcrb
and
cwtl
ds
lcall
pushf
mov
and
add
sbb
rcll
xchg
add
js
mov
aam
cmp
out
into
cmp
jnp
inc
jp
incb
adc
lods
ds
test
pop
sub
je
jecxz
dec
aaa
jmp
or
pop
mov
adc
fimull
ficoms
js
or
enter
sbb
rol
push
mov
aad
outsb
cld
inc
fwait
imul
stos
xor
sahf
scas
sbb
aaa
shrb
add
loop
ss
mov
mov
xchg
fs
dec
inc
xor
cld
cmp
dec
jecxz
mov
adc
mov
push
dec
mov
out
adc
push
add
pop
gs
les
add
add
decl
lds
shrl
lcall
std
pop
cli
jecxz
xor
mov
js
and
push
fadds
inc
in
jp
mov
xor
mov
inc
inc
adc
jns
push
ss
sub
mov
adc
inc
xchg
push
fdivr
test
aad
shl
insl
in
fdivl
insl
ja
and
shl
and
push
push
inc
cwtl
pop
arpl
int
adc
add
inc
inc
push
xor
jmp
jb
sar
jo
shlb
lret
int3
push
pop
cmp
push
inc
xchg
or
jle
jl
lods
pop
mov
jne
mov
aad
sub
or
sub
inc
pop
mov
rcrb
loopne
adc
inc
ds
xchg
bound
push
xor
pop
in
aas
push
inc
sbb
lods
pop
loop
ja
lds
add
setbe
or
repz
into
sahf
jle
add
in
push
ss
cs
movsb
cmp
outsb
je
out
out
push
add
mov
mov
mov
fildl
fwait
cmove
gs
xor
sarl
sub
shlb
dec
bound
imull
shr
cmpsl
jle
cmp
add
fs
cs
lahf
push
or
lea
cmpsl
outsb
shlb
fldt
adc
pop
subb
add
mov
stc
into
insl
push
ja
notl
inc
iret
mov
dec
push
push
in
inc
ret
mov
or
cmp
test
faddl
adc
push
cmp
lret
sbb
insl
xchg
rcrl
mov
sarl
jge
pop
xor
cmp
cld
ja
push
dec
pop
xorb
lret
test
loope
push
les
test
inc
mov
cmc
mov
pop
dec
ficompl
pop
ja
loopne
rorl
paddb
pop
mov
in
jnp
fildl
push
jmp
and
ja
jl
mov
stc
pop
lret
popf
imulb
jbe
inc
icebp
pop
add
cmp
xchg
mov
inc
out
lcall
ja
pop
xchg
stos
fld
decb
inc
into
jecxz
sbb
push
int3
sti
jnp
cwtl
jns
mov
jnp
jns
xchg
outsl
push
adc
lret
xchg
gs
or
push
mov
sarl
adc
add
mov
cwtl
in
jno
pop
out
popf
les
loop
je
sbb
jle
mov
fwait
cmpsb
cmp
sahf
inc
fidivs
cs
pop
fadds
stc
ficoms
jno
jno
dec
dec
pop
bnd
xchg
push
jns
testb
fmuls
or
jnp
cwtl
mov
sbb
mov
fists
xchg
sub
cmp
sbb
loopne
cmp
mov
cmp
cmpl
cmp
xor
sbb
mov
jp
pusha
outsl
aad
jl
stos
cmp
pop
jb
push
ja
sbb
movsb
mov
in
in
popa
sbb
testb
adcl
pop
pop
fdiv
test
mov
mov
push
mov
sti
xorb
daa
cmp
mov
sub
icebp
mov
mov
sbb
lods
push
movsl
imul
mov
daa
lret
fcmovb
bound
jp
lcall
inc
ss
insl
inc
dec
mov
adc
dec
jbe
shlb
aam
insb
mov
popa
dec
adc
lea
shl
sub
jo
jg
inc
push
add
pop
jae
arpl
xchg
cltd
inc
push
lret
dec
lds
into
and
xchg
iret
lods
jns
mov
addl
cmp
popf
js
and
lods
adc
ror
lret
nop
push
adc
ret
rolb
int
rol
or
es
mov
or
pop
jno
dec
lret
scas
decl
adcl
aam
subb
movsb
pop
icebp
adc
jnp
call
mov
shrb
sub
into
cmp
outsl
sub
int3
mov
cltd
xor
add
cmp
cli
dec
invd
nop
mov
shrl
mov
pop
or
lcall
sti
jb
fidivl
int
daa
arpl
es
jae
inc
popa
xor
add
in
das
enter
add
xchg
jne
sub
cli
rcl
fdivrs
call
shrb
jg
and
jg
or
outsl
stos
jmp
out
jns
and
or
add
movsb
cmp
or
arpl
sbb
into
xor
lcall
out
js
stc
lea
add
sub
pushf
xor
in
mov
pop
sub
popa
and
and
fwait
loope
sbb
ja
pop
add
data16
pop
jo
out
lods
cmp
dec
repz
mov
testb
shrl
mov
repnz
jle
fidivrs
adc
jl
outsb
movsl
sbb
push
shufps
cmpsl
test
ja
mov
pop
mov
shlb
cs
pop
push
mov
ljmp
dec
das
xor
lret
int3
outsl
hlt
imul
mov
cmpsl
and
sub
icebp
cs
push
je
adc
xor
push
mov
jg
loopne
add
sub
and
and
push
testb
fists
mov
fsubrp
frstor
or
sbb
xchg
cmp
dec
hlt
hlt
inc
gs
fnstenv
push
sbb
pushf
inc
rclb
or
pop
movsb
adc
mov
pop
push
mov
ljmpw
cmp
mov
xor
lock
mov
ror
sti
add
cs
popa
or
mov
add
fsubrl
repz
fwait
ret
mov
jmp
jg
jns
cmp
stos
pop
loopne
test
xor
mov
sbb
inc
loopne
adcl
in
pop
xchg
jne
outsl
cmp
push
jnp
adc
arpl
xor
sbb
jp
jnp
aad
push
cltd
js
jp
sbb
imul
nop
psubusw
cmp
sarb
sub
lea
dec
push
dec
pop
push
out
or
inc
incb
jg
mov
sarb
out
imul
push
scas
mov
pop
jbe
shll
pop
in
popa
loope
cmpsb
mov
sbb
xor
nop
sub
lcall
addr16
inc
loop
mov
lock
sub
xlat
push
mov
scas
call
jge
ljmp
mov
pop
add
inc
add
daa
mov
jp
lea
mov
scas
lea
push
shll
and
cmpsl
mov
shrl
hlt
stos
fs
lock
fwait
pop
rorl
mov
dec
loop
nop
sub
or
cmp
lock
pop
rcll
in
stos
adc
in
cltd
cmp
fildl
shrb
jmp
push
xchg
inc
dec
cltd
inc
fmul
insb
ljmp
in
aam
sub
xor
sub
cmp
call
push
xchg
xchg
xor
sbb
fdivs
pop
setle
mov
sahf
pop
adc
cmp
stc
je
mov
mov
mov
mov
mov
adc
and
push
cmp
jmp
cmpsl
out
adc
add
inc
ss
cltd
dec
imul
pop
dec
out
mov
or
divl
jmp
and
mov
and
sahf
pop
hlt
lods
pop
lahf
out
mov
cltd
jo
ja
mov
shr
mov
sbb
mov
mov
fmuls
push
and
xchg
outsl
xchg
sbb
in
jl
sub
or
pop
mov
dec
shlb
aaa
clc
cwtl
push
ret
xor
iret
inc
daa
xor
daa
bound
jle
je
movsl
mov
lods
inc
aas
lret
lock
mov
dec
jmp
xchg
push
cmpsl
shll
jo
adc
dec
call
mov
out
cmpsb
push
push
sub
mov
jb
and
pop
cmp
pop
pusha
arpl
xchg
sbbl
movsb
push
mov
out
test
add
sahf
jae
lcall
push
clc
subb
sbbl
pop
loope
pop
in
dec
or
scas
cs
test
int
sbb
inc
xor
out
test
ss
pop
ds
xchg
mov
repz
add
aam
lret
mov
push
cli
gs
stc
dec
sar
dec
frstor
setge
adc
sub
daa
scas
ljmp
call
mov
roll
xchg
es
enter
inc
fcomip
mov
push
call
pop
fsubrl
sub
jo
or
or
negb
mov
adc
fmull
jo
mov
ret
test
outsl
sbb
adc
je
leave
mov
push
mov
sbb
in
mov
or
mov
call
sbb
dec
cmp
push
sbb
adc
sti
sbb
ret
lcall
scas
push
or
mov
pop
icebp
pop
add
imul
js
add
jmp
lret
adc
dec
push
ja
jb
add
push
push
xchg
adc
push
cmpsb
sbb
pop
fdivl
jmp
out
stos
xchg
jge
add
mov
jns
and
int
xchg
or
popf
inc
dec
imull
loopne
push
push
cmpsb
jl
shrl
mov
pop
shrl
xchg
jbe
xchg
sub
popf
cmp
clc
lods
add
test
outsl
sbb
aam
pop
sbb
sbb
mov
jo
fstpl
sbb
fucomp
jecxz
fnsave
sbb
mov
jne
test
mov
xor
xchg
and
mov
xor
adc
test
clc
push
aas
lods
xor
imul
lret
xor
push
push
icebp
scas
pop
scas
push
cwtl
shrb
sub
pop
insl
das
js
mov
popa
scas
test
dec
out
test
sub
sbb
das
rcrl
pop
aas
insl
nop
or
inc
push
mov
pusha
aaa
cmpl
pop
out
or
mov
push
into
adc
sbb
mov
or
out
aaa
call
and
xor
and
std
push
push
mov
jmp
scas
lahf
test
int
loope
repnz
sub
cmpsl
es
mov
add
sahf
or
and
lret
fimuls
add
mov
xlat
cld
and
push
pop
rol
lahf
scas
inc
push
xor
lcall
and
int
ds
bound
sar
pop
cmc
xor
pop
sub
shrl
push
enter
icebp
movsl
inc
xor
xor
adc
fmuls
sbb
in
dec
aas
aam
subl
or
scas
jns
loope
push
outsl
pop
or
xchg
fwait
push
rorl
or
je
out
sbb
mov
cmp
jmp
add
js
or
xchg
hlt
arpl
pop
mov
aaa
xor
data16
jmp
xchg
sub
fdivs
sub
divb
jno
push
insb
xchg
dec
stos
xchg
dec
add
adc
call
fisubs
in
into
jno
jne
push
xchg
push
out
test
mov
out
push
add
inc
les
pop
mov
push
xor
pop
push
xorl
pusha
jns
and
outsl
push
jae
adc
popa
mov
mov
data16
jle
xchg
cmp
xorb
cmp
push
in
inc
mov
dec
push
and
negb
addl
lods
add
pop
jp
adc
dec
sbb
hlt
push
sub
mov
out
lods
mov
sbb
pop
bound
mov
int3
mov
outsb
hlt
push
xchg
int3
pop
mov
mov
sub
repnz
xchg
or
fnstenv
dec
lcall
int3
cmp
push
mov
pop
mov
call
mov
popf
cmp
pop
imul
jne
sbb
testb
cld
and
fdivrp
dec
test
jmp
sub
mov
pop
dec
fisubs
dec
xchg
and
test
loopne
out
push
nop
lods
jne
in
sbb
test
popf
mov
add
push
mov
out
inc
sub
cmp
push
in
fwait
xchg
iret
mov
bound
or
fs
or
push
xor
jmp
jg
roll
in
pusha
sarl
test
mov
sbbl
mov
es
cmc
insl
ss
mov
imul
shlb
mov
xchg
or
sahf
cmpsl
data16
mov
lcall
aad
popa
and
pop
cmp
xchg
xlat
insl
dec
enter
outsl
hlt
push
mov
push
inc
adc
mov
enter
mov
pop
fcoms
mov
jb
movsb
stos
das
or
jge
push
xor
lock
jae
xor
inc
clc
xchg
pop
call
mov
inc
push
das
and
fldt
cmp
add
jg
lds
loopne
mov
pop
cli
cs
mov
dec
push
adc
leave
jbe
push
xor
push
in
push
push
data16
popa
cmp
fdiv
adc
adc
mov
mov
inc
adc
pushf
lret
xchg
std
mov
mov
frstor
sub
sub
ficoml
jno
add
pop
idiv
and
fcoms
mov
icebp
xchg
lds
lahf
jmp
movsl
cmp
xchg
add
stos
mov
cli
push
xor
mov
pop
sub
ja
pop
mov
lock
pop
data16
inc
push
aas
inc
fdivl
scas
ret
out
mov
push
scas
insl
rcrb
push
roll
mov
inc
inc
mov
pop
push
lods
ret
out
inc
pushf
mov
jl
xchg
sub
push
sti
jbe
mov
mov
mov
add
dec
dec
adc
insl
emms
icebp
push
outsl
inc
ds
mov
dec
scas
out
sub
xchg
enter
and
int3
dec
mov
fs
inc
inc
into
movsb
leave
cmp
add
adc
cli
xor
xchg
jecxz
sbb
xor
jmp
shrb
ret
jge
jp
xchg
arpl
movsb
or
jecxz
mov
push
mov
in
pop
mov
sbb
sbb
out
insb
imul
sub
pop
mov
cmc
jne
in
lods
xchg
sub
and
and
std
cmp
cmp
je
out
ret
xchg
enter
addl
or
and
loope
mov
sbb
and
sub
ja
and
xchg
rcl
cld
in
repnz
std
and
lret
repnz
ret
push
std
fisubs
xor
inc
lock
or
loop
and
sub
int3
cmp
je
or
or
cwtl
adc
repz
cmp
mov
xor
int
adc
aas
movsl
mov
inc
sbb
inc
cmc
in
or
lahf
pop
mov
mov
inc
lret
lret
push
adc
ja
sbb
inc
int3
dec
mov
das
into
into
adc
rorb
and
divps
jns
test
lods
dec
cmpsb
push
subps
leave
fists
inc
push
xor
cs
xchg
mov
dec
xor
push
leave
xchg
shrb
jo
daa
sub
xchg
ja
movsl
mov
roll
push
fbld
int3
inc
xor
inc
shrb
out
xor
pop
pop
mov
shrl
mov
int
cmpsl
push
inc
xchg
mov
imul
in
jne
inc
popa
mul
mov
jg
cmp
sbb
sub
cmp
imul
mov
data16
stos
mov
dec
xor
mov
stos
jecxz
fadd
stos
dec
jmp
push
add
lret
cmp
xor
and
fmull
ffreep
fisubrl
std
mov
ret
outsl
mov
or
adc
stos
mov
adc
and
and
shlb
iret
ja
dec
lods
cmp
lret
lea
in
sub
loopne
jle
movsb
add
test
pop
stos
sbb
push
das
cmp
xchg
or
sub
cltd
test
adc
add
sub
popa
add
cmp
pop
scas
arpl
and
adc
test
dec
cmp
sub
add
cmp
push
fcoms
mov
dec
into
pop
lea
flds
mov
push
and
sub
popa
xchg
push
mov
fs
scas
clc
sub
enter
mov
mov
push
jle
pop
std
sbbb
lock
mov
mov
data16
int3
rcll
rcl
std
gs
xchg
test
push
fldenv
jge
and
mov
xchg
std
sub
test
pop
hlt
pop
leave
lock
mov
fistpll
insl
adc
cmp
inc
xlat
mulb
testb
inc
fs
das
cmp
sub
lods
xchg
shrl
iret
fisubs
mov
xchg
imul
aaa
into
subb
das
push
into
and
mov
or
or
and
push
lods
jl
and
adc
xchg
xchg
pushf
add
mov
jae
mov
push
xlat
lret
inc
add
push
aas
lret
fildl
cld
in
fiadds
xchg
pop
cmp
xor
mov
inc
xor
or
inc
mov
xlat
jbe
pop
lcall
test
cmp
pop
or
jne
daa
mov
enter
sti
jns
xchg
xchg
loopne
dec
push
fnsave
test
mov
test
aas
pop
out
add
pop
xchg
and
xchg
mov
fstps
add
mov
stos
insb
add
or
pop
mov
inc
lock
bound
pop
in
add
vucomiss
xchg
pusha
lcall
xchg
push
sub
lea
enter
test
mov
int3
xchg
pop
dec
out
mov
mov
lods
mov
or
lret
in
adc
sbb
int3
gs
sti
fcoml
jne
jne
out
pop
xchg
loop
xor
rorb
dec
push
test
add
fisttpl
cmpsb
pushf
das
mov
cltd
fstpt
cs
xor
adc
mov
cwtl
xchg
lret
mov
int
sbb
push
lret
addr16
shr
shlb
cmpsb
jns
pop
lds
cmpsl
iret
pop
rorb
gs
lock
push
cmp
sbb
mov
aad
pop
dec
jae
or
and
js
mov
ret
xor
and
lods
aas
push
pop
lods
dec
sbb
pop
dec
xchg
pop
cmp
add
adc
xchg
inc
jecxz
lcall
bound
out
aaa
sti
insb
jo
dec
fidivl
sub
movsb
adc
inc
pop
jns
lods
pop
mov
das
add
add
sub
cltd
mov
popf
adc
out
rcl
mov
pop
mov
add
out
or
push
test
mov
push
popf
das
fcomp
icebp
pop
lds
negl
pop
jmp
aaa
or
push
jnp
inc
mov
push
in
pop
out
jge
sti
shrb
mov
lds
mulb
lods
inc
fcoml
lret
mov
movsl
push
mov
out
cmp
sub
mov
cmp
dec
loop
mull
movsb
dec
imul
clc
xor
js
jecxz
data16
inc
imull
xchg
add
repz
mov
cmp
je
loope
jne
jae
hlt
popf
into
xchg
iret
adc
notb
mov
fstl
test
mov
jnp
dec
lret
or
xchg
inc
add
pop
test
loop
jo
and
sbb
aad
dec
pop
pusha
loopne
cmp
xchg
add
pop
lcall
push
imul
push
pop
cmpsb
push
ds
or
pop
filds
imul
inc
cld
cmc
repnz
sub
inc
fimuls
scas
cmp
inc
or
stos
xchg
imul
call
daa
cmp
stos
jns
push
add
add
push
fmuls
lea
and
dec
pop
fmul
jg
clc
shrb
push
add
pop
pop
dec
xor
xlat
and
cld
js
sub
dec
jbe
push
jecxz
lret
rcll
xchg
dec
pop
movl
imul
sub
sbb
xor
movl
imul
xchg
sbb
les
out
mov
add
popf
scas
dec
pop
mov
loope
jmp
push
cld
mov
push
sbb
icebp
mov
imul
lds
cmp
mov
test
daa
lret
arpl
pop
lea
mov
popl
adcb
daa
rcrb
rol
add
sti
cs
mov
testb
jge
push
push
movsl
add
test
push
pop
nop
imul
bnd
xor
mov
testb
cmp
mov
lret
fldcw
push
sub
ficoms
push
scas
subl
out
mov
outsl
test
add
pop
sbb
xor
stc
push
pop
adc
xchg
negl
hlt
sbb
mov
jo
sub
iret
fstps
nop
and
pop
or
mov
imul
mov
jnp
aam
push
movsl
jno
push
sub
cmpsl
jae
ret
xor
mov
push
push
mov
fcoml
popa
lods
xchg
imul
mov
xchg
mov
adc
jb
movsb
add
cli
push
mov
cmp
mov
sbb
sbb
rol
ret
and
addb
adc
das
dec
xor
daa
stc
fucomip
cmp
inc
mov
mov
ficoms
std
jge
in
scas
sbb
insl
lret
std
dec
push
js
push
stos
bnd
btsl
int3
pop
mov
aad
xor
add
in
xchg
xor
shl
stc
cmovs
mov
sub
cmp
call
push
ljmp
out
test
sbb
jg
add
andl
in
pop
lock
insb
lahf
mov
lahf
jb
xor
stc
or
push
repnz
lret
push
cwtl
cld
mov
mov
out
jb
aaa
jecxz
inc
flds
lock
out
ja
jecxz
fwait
inc
sbb
sarb
out
pop
push
cmp
xchg
iret
sub
loopne
mov
daa
cmpsl
xchg
and
int3
sbb
push
inc
fimuls
scas
out
mov
jmp
cli
test
and
rol
pop
loop
and
fimull
or
addr16
imul
sub
add
repz
mov
adc
lret
push
int
rclb
insb
mov
ficoms
sbb
mov
test
mov
xlat
mov
pop
arpl
push
push
or
ja
pop
mov
and
mov
out
mov
pop
ficompl
mov
cmpsl
adc
xchg
push
mov
push
dec
push
fistpll
hlt
fcmovnb
lds
in
inc
pop
gs
js
in
inc
out
ret
loop
or
push
rcl
mov
nop
into
jecxz
add
pop
enter
lret
jmp
in
lcall
jmp
xor
adc
sub
popf
ffree
dec
push
mov
lret
pop
sbb
out
imul
insl
cmp
xorl
stos
mov
lock
stc
cltd
mov
in
into
int
in
inc
int
inc
out
popf
jmp
add
or
sbb
daa
out
mov
push
push
jns
lret
jno
push
xor
xchg
push
adc
cmpl
push
push
lret
in
into
jp
jo
mov
and
mov
fcomps
or
push
aaa
outsl
mov
outsb
dec
sbb
icebp
xchg
add
inc
add
or
push
adc
cmp
pop
dec
add
pushf
cltd
sbb
mov
mov
cld
stc
iret
or
cmp
subb
shlb
add
or
std
loop
insl
adc
sub
xlat
test
pop
mov
or
aam
test
xchg
ret
pop
xchg
fs
jle
out
inc
jnp
iret
sbb
pop
or
leave
pushf
mov
addr16
jmp
fcoms
nop
mov
mov
cmp
jg
mov
mov
aam
insb
popa
loop
fistps
lods
sub
jmp
aas
inc
gs
inc
add
fimull
hlt
sub
scas
sub
subb
pop
pushf
jno
and
and
pop
mov
scas
cmp
pop
imul
bound
fmull
mov
test
mov
xor
inc
pop
movsb
add
in
insl
jp
cmp
mov
mov
add
jae
xchg
mov
inc
negb
add
sbb
cmc
ljmp
jne
sbb
or
mov
push
in
jp
rolb
fs
mov
mov
outsb
fs
push
insl
fidivrs
jae
mov
cmp
loop
jne
dec
stos
pop
call
movsl
out
jnp
xchg
aas
pop
and
mov
gs
push
cmp
mov
shll
imul
pop
mov
xorl
jmp
dec
or
aaa
mov
cmp
sbb
mov
mov
sub
mov
pop
test
mov
xor
je
ljmp
and
adc
iret
mov
divl
xchg
cmpb
std
lret
outsl
inc
test
mov
or
mov
ret
ret
fldt
fcompl
sub
js
loopne
pop
xchg
mov
fsubrl
lock
adc
stc
xchg
mov
aam
or
push
add
es
jbe
fiadds
in
xchg
nop
xlat
cs
jno
dec
notb
dec
push
fucom
xchg
nop
int
dec
aam
popf
insl
imul
lds
shl
mov
popf
inc
pop
out
cmp
sti
mov
inc
sbbb
loope,pn
scas
mov
ret
mov
mov
js
cli
pushl
mov
mov
inc
ret
pop
fcmovne
xlat
mov
push
add
pop
or
inc
pusha
loope
outsl
jecxz
stos
es
push
cmc
mov
xchg
add
movsb
inc
jmp
dec
dec
loopne
imul
andb
cmp
mov
fucom
iret
dec
pop
out
or
rclb
mov
scas
mov
cmp
test
or
fstpt
iret
jg
je
stc
mov
cmpb
push
dec
mov
ret
loop
pop
imul
lock
loop
jb
adc
and
dec
mov
inc
mov
jge
xor
sub
mov
lret
mov
loope
and
filds
sub
lea
shlb
push
mov
or
or
shrb
addr16
inc
loopne
out
test
fstps
or
cmp
je
xor
cwtl
dec
adc
outsl
ret
pop
inc
iret
rolb
insb
mov
aaa
sbb
jo
clc
stos
jp
xor
or
cmp
adc
lods
pop
pop
and
dec
pusha
rolb
jmp
xor
push
icebp
bswap
cmp
shl
pop
cwtl
cld
data16
inc
pusha
push
je
adcb
adc
mov
mov
ret
imul
insl
sbb
dec
lods
jmp
insl
cmp
imul
sarl
mov
inc
push
sub
subb
and
outsl
adc
ret
jmp
lahf
jne
shll
sbb
xor
dec
dec
sbb
sti
xchg
js
push
jmp
mov
pusha
add
xchg
and
cld
mov
and
sub
je
mov
mov
data16
xor
jle
lods
aaa
rcrb
xchg
inc
popf
sub
sarl
dec
push
imul
jnp
and
pop
adcb
jg
cs
shrb
dec
sub
into
insb
jle
insl
imul
andl
fisubrs
out
mov
pop
stos
inc
dec
push
sbb
pusha
cmc
outsb
js
jnp
je
ds
mov
xor
xor
xlat
movsl
ret
js
jecxz
inc
xchg
sbb
das
mov
pop
or
add
jne
sbb
pop
jno
jg
xor
hlt
push
jae
imul
sarl
pop
shll
int3
sub
std
jb
push
lods
jle
inc
shrw
xor
push
pop
hlt
add
mov
icebp
sub
inc
and
cmpsl
ds
dec
pop
sahf
jae
pop
push
mov
shlb
jns
or
sub
loop
sbb
ss
and
test
xor
lods
out
ficoms
mov
loop
aad
sbb
movsl
data16
in
test
mov
pop
out
dec
mov
clc
fsubl
sbb
insb
sbb
sahf
xor
jno
mov
insb
cmpsb
jg
mov
popa
add
or
jl
dec
movsl
jne
cwtl
das
and
jno
push
outsb
push
xlat
mov
or
pop
subl
cmp
mov
out
mov
hlt
push
adc
jne
incl
xor
xchg
pop
xorb
call
ret
enter
inc
dec
sub
test
into
mov
mov
xchg
and
sbb
stos
xchg
lds
xchg
nop
jae
aaa
movsl
fsts
dec
mov
jo
dec
fs
lods
push
sbb
mov
mov
xchg
fwait
inc
scas
mov
js
pop
call
xor
jg
ds
push
mov
or
cltd
cmpsl
out
inc
push
pop
cmp
into
out
int3
gs
addl
inc
pushf
cmp
enter
mov
lret
inc
clc
add
ds
sbb
push
xchg
in
inc
fcompl
sti
out
icebp
or
xor
fsubs
mov
push
fs
pop
int
roll
xorb
ljmp
push
xlat
aas
sub
push
cs
testl
test
mov
add
les
mov
movsb
sti
sub
and
addr16
cmp
lahf
add
sbb
in
cmp
lods
jmp
int
popf
sbb
sbb
mov
bound
inc
rolb
out
cmc
jmp
movsb
daa
push
cmp
sti
add
and
mov
cs
std
push
loope
mov
sbb
loope
mov
lods
dec
jb
and
xchg
sub
pop
adc
inc
cmp
fwait
and
or
das
or
dec
mov
inc
push
icebp
xchg
inc
les
sub
lahf
outsb
mov
xor
add
cmc
test
mov
cmp
repz
decl
test
idivb
pop
scas
or
mov
test
inc
adc
sub
lahf
mov
je
ss
sub
and
lods
sbb
ret
movb
imul
movsl
xor
mov
push
dec
xorb
arpl
pop
xor
das
std
std
mov
pop
push
and
push
xchg
push
mov
arpl
cld
inc
sbb
mov
out
int3
mov
ljmp
fisubrl
dec
js,pt
test
mulb
into
mov
sbb
aam
and
data16
mov
xor
xchg
fxch
lods
mov
dec
test
mov
or
mov
sbb
xchg
pusha
lock
cmpsl
mov
sbb
sub
mov
in
and
cmp
inc
testb
adc
mov
or
cs
mov
rorl
cmpsl
stc
xchg
int3
sbb
sbb
push
add
adc
clc
fadd
jmp
cs
loope
pop
dec
mov
daa
in
xchg
jne
push
mov
cmpsb
bound
push
aam
inc
and
repz
mov
mov
adc
jne
xor
fsub
dec
mov
lock
aam
and
fiaddl
sahf
out
mov
pushf
sbb
dec
out
insb
pop
bound
jnp
dec
jge
clc
jge
inc
std
jnp
xor
mov
aam
push
cmp
stc
loop
sbb
lds
push
and
xchg
pop
sbb
dec
movb
mov
dec
out
js
aad
xchg
sbb
xchg
xor
push
insl
lcall
pop
fsubs
inc
test
mov
movsl
pop
cmp
js
sbb
insl
ja
mov
pop
sub
push
movsb
cmpsl
or
xchg
enter
mov
std
jne
pop
dec
iret
inc
inc
xor
into
ret
lahf
xchg
into
jae
mov
push
push
lock
das
test
and
and
sbb
inc
mov
pop
popa
bound
cmp
movsb
incb
bound
pop
orb
cmp
cmpsb
pop
push
inc
dec
lret
xor
add
cwtl
sti
and
mov
rcrl
fldcw
sbb
sub
xor
add
and
loop
adc
or
aad
es
sti
int3
xchg
sub
mov
and
mov
mov
pop
rol
pop
mov
mov
xor
aam
pop
iret
adc
add
pusha
insl
out
aad
push
dec
daa
mov
loopne
xor
icebp
das
sub
enter
ret
pop
adc
sub
jbe
or
testl
dec
pushf
push
lret
push
jo
mov
mov
push
pop
dec
into
mov
cld
in
cmp
scas
loope
mov
sub
test
test
jg
cwtl
fstps
xchg
inc
in
mov
fdivl
dec
lea
cmpsl
stos
inc
fstps
or
push
mov
pop
sub
loopne
pushl
mov
movsb
jle
cmc
push
xchg
fsincos
adc
je
mov
mov
jb
jnp
mov
mov
je
xor
xchg
xor
ret
xor
dec
sbb
mov
mov
mov
mov
insl
aad
inc
sbb
mov
or
sbbl
adc
sbb
xchg
scas
pop
out
mov
xor
test
jmp
and
xor
mov
dec
xchg
enter
mov
lret
add
cs
lret
mov
stos
lock
and
jge
jo
repz
mov
add
cs
pop
aaa
jl
sub
dec
cmp
cmp
lds
and
jp
int
shlb
scas
add
and
jb
imul
mov
jge
popa
icebp
or
push
and
xchg
xchg
popf
cmp
adc
ror
add
shrb
mov
add
jb
cwtl
cld
aas
fldenv
outsl
test
sbb
call
movsl
ljmp
les
loopne
dec
sub
push
test
hlt
mov
sahf
sub
cmp
in
jb
mov
mov
stos
and
mov
gs
dec
dec
jmp
dec
push
ljmp
inc
in
mov
sub
pop
loopne
not
dec
mov
notb
out
adcl
loope
lods
icebp
adcb
in
int
xchg
adc
jb
iret
popf
ss
popf
outsb
push
leave
loope
and
xchg
pushf
mov
inc
and
nop
mov
sub
lret
pushf
cli
inc
out
sub
sub
out
popf
mov
cmpl
movsb
add
dec
das
adc
mov
pushf
push
inc
mov
outsl
jne
mov
mov
sub
add
cs
push
pushf
lcall
jnp
inc
cli
add
sbb
xchg
cmpsl
lcall
jo
add
imul
mov
push
test
pop
ret
cmp
or
mov
stc
clc
pop
hlt
xor
ljmp
fidivrl
je
icebp
and
jb
mov
jno
movsl
or
sbbl
jmp
mov
mov
loope
les
rorb
sbb
cmp
push
dec
sbb
shrb
loop
daa
addr16
jne
insb
sbbl
xlat
std
sbb
or
xchg
jns
sbb
sbb
iret
mov
js
lds
xchg
sub
lods
pushf
adc
or
or
inc
jge
cmp
mov
pop
mov
je
pushf
xor
dec
fsubrs
mov
popa
xor
inc
and
xlat
fcoml
cmp
mov
lahf
adc
fs
addr16
fwait
dec
out
sub
popa
mov
aam
movsl
fiaddl
mov
fs
push
fs
xchg
cmpb
mov
lds
std
sbb
mov
mov
mov
fcmovne
fiadds
sub
pop
ds
adc
pusha
fidivrs
iret
jecxz
push
push
imul
icebp
pop
adc
lret
call
jecxz
add
xchg
push
pop
sbb
das
es
mov
add
and
pop
loope
add
rcrb
xor
test
fstpt
loope
mov
js
xor
dec
dec
xchg
hlt
pop
pop
addr16
outsl
aad
gs
out
pop
xor
in
push
mov
inc
sbb
ret
fistpll
pop
mov
sahf
cmp
dec
push
test
fistpll
sbb
jp
push
cmc
mull
push
and
xchg
lock
mov
inc
pop
inc
movsl
mov
jae
sub
mov
cmp
fsub
xor
ficomps
sbb
cmp
inc
push
jns
or
outsl
shrl
cmp
icebp
andl
add
push
sahf
xchg
fidivrl
in
mov
xor
jnp
enter
out
inc
jno
mov
jnp
ss
dec
xchg
xchg
fadd
fcmovne
mov
lret
cmpsb
fisubl
lods
leave
dec
scas
enter
imul
dec
xchg
shrb
insl
out
xor
les
mov
test
xor
sub
dec
or
sbb
sub
add
shlb
dec
mov
addb
int3
clc
es
and
jp
lods
insl
pusha
les
inc
cwtl
add
stos
mov
push
adcb
dec
js
mulb
adc
imul
and
in
popa
add
cmp
out
mov
hlt
cmp
pop
dec
pop
cmp
divl
push
cwtl
and
out
mov
mov
loopne
mulb
mull
xchg
stos
jecxz
pop
jb
sbb
subb
imul
jg
out
push
sbb
loop
popa
push
jb
push
push
sahf
sbb
cmp
mov
in
sbb
nop
fwait
sarb
inc
inc
sarb
cltd
scas
call
cltd
push
adc
xor
dec
out
rcr
fs
aaa
lret
push
fsubrl
int3
fs
iret
popf
nop
shr
xor
cld
push
lcall
mov
and
push
mov
inc
fcmovne
cmp
inc
clc
mov
xlat
mov
pop
sarb
andb
pop
fiaddl
mov
sbb
sbb
cwtl
loope
dec
loop
clc
stos
jmp
xchg
fdivrp
or
cmc
inc
enter
subb
sbbl
adc
add
hlt
dec
jb
xor
sti
outsl
aad
and
xchg
adcb
sahf
sbb
ss
adc
aas
and
je
adc
mov
lret
subl
outsb
sbb
cmp
in
mov
jl
in
int
mov
add
xchg
lret
fucomp
mov
xlat
jmp
int3
inc
ljmp
shrl
ja
ret
clc
popf
insl
es
ljmp
push
scas
xchg
lods
push
sub
jns
add
jle
jle
sbb
je
lcall
aaa
stc
nop
test
cmp
je
ret
dec
mov
jl
imul
adc
jne
and
lock
fs
ja
mov
jo
mov
push
std
enter
mov
add
stos
dec
fdivrs
sarb
les
jns
in
sbb
push
jns
mov
lret
and
cmpsl
scas
push
pop
sti
jge
ss
jp
movsl
lods
sbb
stc
dec
sub
jns
or
pop
lock
cltd
bound
out
inc
ret
outsl
xor
lret
mov
into
lods
jmp
jb
jmp
xchg
xchg
fldenv
popf
sub
nop
push
pop
cmc
push
mov
int3
jl
movsl
or
es
jmp
sub
xchg
rorl
pop
adc
ret
lock
iret
gs
fisubrs
xor
or
fwait
or
push
adc
cmpsb
mov
mov
mov
adc
or
arpl
xor
loopne
xchg
mov
add
popa
adc
sub
rcl
sub
sub
loopne
loopw
lret
out
in
jecxz
pusha
sbbl
das
push
add
fwait
das
lret
dec
call
inc
or
xorb
xchg
aaa
mov
mov
mov
jmp
and
sbb
jo
fldt
in
mov
sub
or
lret
dec
leave
mov
xor
shrb
aad
sub
mov
ret
clc
loope
mov
cmp
pop
sbb
roll
add
cmp
in
or
push
jg
sbb
mov
call
leave
dec
mov
mov
sti
inc
mov
and
inc
push
fisubrs
gs
sbb
aam
call
lock
mov
mov
repz
mov
mov
sbb
xchg
mov
mov
push
push
or
ss
loope
inc
jmp
aas
mov
mov
push
push
mov
insb
jae
mov
mov
in
test
lock
mov
sti
push
jne
xchg
jmp
stos
sub
pop
dec
fsubr
push
cs
orl
and
push
shrb
mov
lcall
jo
daa
rorl
aaa
shll
dec
add
jbe
push
sub
sahf
movsl
icebp
xchg
pop
into
cmc
sbb
daa
mov
cmp
shll
jns
inc
aas
aam
cmp
test
aaa
sti
fnstenv
pop
sbb
inc
xchg
enter
dec
xor
xchg
out
dec
or
rcll
or
inc
aas
lahf
sub
cmc
fsubs
inc
loop
lcall
jo
lods
shlb
cld
es
fnstenv
inc
jmp
std
jb
adc
sub
push
jb
xchg
adc
or
mov
mov
push
out
mov
aas
inc
dec
and
dec
sub
inc
xchg
mov
shlb
int3
sbb
push
outsl
sbb
les
jmp
adc
xor
jnp
mov
push
arpl
montmul
cmpsb
inc
test
mov
mov
movsb
pop
lar
sub
loope
mov
xchg
mov
pushf
out
js
hlt
imul
pop
xlat
and
fwait
gs
or
ficoml
xor
jmp
mov
dec
sub
sub
les
xor
jle
or
enter
sub
mov
or
xchg
add
push
test
in
dec
lcall
in
aas
and
cwtl
test
lods
aad
push
in
and
adc
mov
sbb
ljmp
jno
sbb
pop
call
jb
cmpps
cmpl
hlt
mov
ds
inc
repnz
call
sbb
outsl
shr
add
jge
adc
mov
or
mov
sbb
loopne
sbb
mov
scas
shlb
mov
xchg
sti
push
int
adc
dec
mov
pop
ret
pop
insl
sub
xlat
push
lea
xchg
ss
notb
push
or
mov
sbb
call
add
orl
outsl
xor
in
cwtl
daa
icebp
popf
mov
fwait
dec
in
test
xchg
mov
ja
cmpsb
sub
mov
pop
test
scas
lcall
jle
dec
mov
mov
jbe
mov
jl
adc
xor
mov
in
jl
or
pop
hlt
or
sbb
loopne
testl
popf
aam
int
cs
in
nop
jns
inc
and
jae
jo
call
pop
pushf
leave
lods
cmp
cmp
stos
pop
shr
or
xchg
cmp
stc
mov
mov
jne
jbe
mov
in
xchg
xor
or
cltd
add
in
mov
lret
out
test
mov
sub
pop
icebp
jae
leave
movsb
adc
adcb
nop
push
add
pop
sub
mov
jnp
or
fmul
loop
js
and
lret
std
sbb
inc
shl
lahf
mov
popf
push
in
push
jle
divl
int3
iret
sbb
inc
js
jo
mov
adc
or
add
push
mov
aad
jns
push
test
loope
or
cmp
fadd
imul
pop
push
sbb
mov
data16
jmp
xchg
sbb
scas
mov
shrl
add
mov
dec
daa
inc
jne
out
ret
movsb
les
ljmp
jno
clc
push
std
dec
aas
xchg
add
mov
dec
sbb
mov
and
pusha
add
jb
or
int
test
pop
imul
mov
idivl
arpl
and
movsl
in
and
div
test
xchg
rcl
add
jp
cmpsb
or
sbbb
mov
push
fimuls
out
pop
scas
loope
sub
mov
je
roll
mov
bound
jp
clc
addr16
push
and
aaa
mov
in
pop
imul
add
push
jecxz
push
jl
jp
lds
psubd
movsl
out
cmp
pop
test
cld
js
push
pop
outsl
pushl
push
mov
lcall
adc
out
or
fisttps
push
insl
ljmp
or
dec
and
sub
sub
clc
xor
fbstp
bound
int3
bound
mov
adc
mov
cmc
dec
or
sub
sbb
movsl
mov
bound
xchg
push
rorb
daa
mov
push
jmp
out
xchg
sub
ret
or
add
stos
test
in
mov
loope
sti
cwtl
dec
dec
cltd
push
inc
pop
jp
out
mov
or
data16
inc
call
xchg
in
addb
cltd
loope
sti
icebp
pop
aas
out
shrl
dec
xlat
cmc
cmp
rol
xchg
adc
cwtl
dec
jb
daa
dec
jl
mov
xor
mov
xorb
cs
gs
or
ja,pn
add
sbb
sbb
in
ss
testb
add
call
pushf
push
scas
or
cmp
icebp
xchg
xchg
out
orb
mov
sub
aam
sub
pop
dec
gs
sti
jmp
fldt
jo
pop
inc
fmuls
sbb
icebp
inc
adc
in
push
cmp
push
fnstcw
add
mov
mull
aad
cli
pop
pop
xchg
rep
shrl
lret
bound
xchg
push
sub
rorl
out
into
sbb
cmp
xor
cmpsb
lret
pop
push
jmp
in
mov
pusha
add
xchg
jb
cmp
call
xchg
xor
push
ja
fimull
je
jb
pop
push
cmp
jne
loopne
int
dec
adc
xor
push
or
scas
sub
xor
push
jle
cmpl
push
fcoms
and
or
mov
imul
aam
ficoml
pop
sbbl
pop
mov
pop
movsl
loopne
lock
stos
aad
xchg
mul
movsb
xor
repz
outsl
icebp
or
mov
fcmovnb
data16
adc
data16
ss
cmp
inc
arpl
mov
xchg
cmp
std
dec
mov
or
cmp
jg
rclb
cmp
dec
in
inc
out
jge
bound
test
shl
lods
dec
dec
xor
jb
js
rcr
dec
int
add
mov
stc
cmp
cmp
clc
push
bndstx
jecxz
ja
addr16
outsl
stc
ljmp
jno
mov
xlat
ja
pop
push
jb
or
pop
dec
jecxz
inc
add
sub
and
dec
cmp
ja
in
lret
and
push
sbb
pop
imul
popa
xor
dec
jg
push
insl
out
or
test
mov
lds
lahf
ljmp
and
in
or
cmp
lods
insl
pop
and
or
fisubs
scas
mov
adc
push
xchg
insl
enter
pop
std
rol
cmp
or
popf
aam
dec
inc
cmp
insl
dec
jecxz
aas
pop
jp
insb
xchg
jle
add
sbb
outsb
loope
or
pop
push
out
je
mov
iret
mov
push
mov
push
xor
mov
mov
or
mov
add
cli
cwtl
call
pusha
scas
repnz
jno
inc
lahf
cmp
call
imulb
mov
leave
ss
add
xchg
add
lods
out
pop
push
fldl
arpl
dec
push
fwait
push
push
sub
popa
mov
int3
pop
sbb
dec
push
xchg
add
pop
out
jae
sbb
and
pop
add
out
rorl
jnp
clc
cmp
fldenv
pusha
daa
sbb
stc
adc
cvtpi2ps
inc
sbb
jecxz
shrl
push
out
cmpsl
ja
or
sbb
ja
inc
dec
scas
pop
decb
push
push
mov
inc
pop
xor
into
ror
push
inc
insb
int
lahf
xchg
pop
imul
jmp
xchg
pop
lods
mov
xchg
ret
push
and
mov
dec
jge
ds
in
lods
jp,pt
outsb
mov
test
outsl
cmp
gs
in
incl
mov
mov
fimull
dec
test
gs
lock
push
loop
adc
inc
lahf
adc
xchg
adc
cli
in
out
sbb
das
rclb
add
mov
repz
inc
mov
sbb
jo
loope
push
cmp
jno
inc
cs
test
repnz
mov
jo
adc
int
pop
imul
cmpsb
call
fsubrl
dec
fdivrs
imul
pop
sub
and
inc
push
repz
inc
int3
inc
mov
jp
dec
pop
cmc
cmp
xchg
call
mov
in
pop
in
leave
add
cltd
mov
fxch
fcoml
cld
push
inc
les
mov
pop
movsb
mov
adc
adc
mov
pop
cmp
push
dec
popa
cmpsb
mov
ds
das
mov
mov
adc
mov
adc
js
decb
loope
push
aaa
mov
xor
inc
adc
adc
xchg
repnz
cmp
je
sub
scas
or
nop
push
pop
push
into
int3
paddq
mov
adc
sub
mov
push
je
xchg
cmpsb
lea
ret
jnp
clc
mov
scas
mov
sbb
push
sub
repnz
je
push
xor
adc
pop
or
xor
mov
jle
and
lods
mov
xchg
lock
test
adc
sahf
lret
leave
repz
pop
in
stos
shll
xchg
inc
mov
pop
scas
cmpsb
xchg
mov
lret
daa
ss
shr
mov
out
loopne
stos
adc
mov
mov
inc
push
sti
ss
add
out
popf
add
push
cmpsl
ds
add
push
mov
pop
jbe
stos
xor
mov
jl
inc
dec
scas
rorb
sbb
dec
out
ja
stos
shrb
shlb
dec
inc
test
cltd
out
inc
hlt
inc
adc
mov
inc
frstor
shl
mov
push
mov
fs
jns
mov
aad
cwtl
push
and
dec
fsubrs
ljmp
adc
xchg
pop
jbe
xchg
insb
imul
dec
mov
mov
lods
sbb
fcomip
adc
adc
fistl
incb
lret
mov
lods
inc
jns
fisubs
pop
add
stos
inc
outsl
loop
or
sarb
jp
sub
test
into
test
xchg
repnz
jne
mov
mov
aad
push
sbb
sbb
mov
jg
xlat
ljmp
mov
add
pop
jbe
push
test
ss
cmp
jae
add
lods
mov
or
cmp
xchg
cltd
jns
inc
pop
jmp
xchg
cltd
hlt
cltd
xor
mov
inc
pusha
cmp
imul
cmp
jecxz
xchg
je
rcr
in
bound
test
testb
push
push
adc
sbb
pop
jmp
out
cmp
adc
loopne
cmc
cmp
fs
lret
push
sub
outsl
or
data16
lods
cmp
dec
subb
mov
xor
pop
arpl
add
enter
jne
invd
notl
out
dec
pop
mov
fs
popa
xchg
andb
sub
sbb
pusha
iret
ficompl
loopne
inc
adc
test
mov
iret
cmpsb
leave
push
aad
jge
lcall
loope
pop
sub
int
mov
xchg
in
inc
xchg
cmp
push
outsb
jnp
or
mov
dec
out
je
imul
jne
aam
or
lcall
pcmpeqb
xchg
movsb
ljmp
push
leave
xchg
add
push
lds
lea
push
pop
mov
push
inc
push
insl
out
xchg
sbb
pop
cmc
add
sub
pop
stos
push
fbstp
pop
cmp
push
out
xchg
shl
xchg
test
lea
mov
cwtl
or
nop
mov
fwait
dec
cmpsb
rclb
test
mov
fsubs
push
adc
or
or
test
in
ret
outsl
jno
into
bound
rcrb
jp
out
aaa
dec
loopne
jns
subl
fstpl
jle
mov
lock
repnz
loopne
ja
jmp
add
mov
pop
inc
push
mov
push
ss
fisttpl
lcall
js
pop
push
jne
int
xchg
jle
xorb
lahf
push
jnp
clc
cmp
arpl
frstor
addr16
sahf
mov
fstpl
mov
popa
popf
inc
push
cmpsl
sahf
pusha
test
fmuls
cmp
aas
push
pop
out
jle
fwait
mov
dec
aam
stc
popf
pop
test
jp
xchg
invd
xchg
ret
repz
loope
jb
mov
cmp
mov
pop
mov
clc
or
ja
sub
in
fwait
mov
push
push
or
dec
test
jo
mov
ret
sbb
mov
imull
jbe
hlt
repnz
outsb
std
push
addr16
in
mov
pop
adc
std
les
arpl
adc
dec
clc
sahf
out
mov
cmp
sarl
pop
repz
out
pop
jp
fwait
dec
jle
mov
mov
orl
jg
in
rclb
faddl
mulb
out
fs
jbe
clc
pushf
in
inc
stos
cmp
jmp
cmp
cmp
and
push
jno
insl
xchg
mov
mov
lret
cli
in
adcb
mov
call
or
mov
fnsave
jmp
or
pop
rcrb
dec
in
push
and
xchg
mov
test
andl
ret
stos
daa
dec
lahf
fcmovne
cmp
sbb
sbb
or
mov
into
lret
cld
daa
stc
je
cwtl
in
jle
daa
fldt
rcrl
jbe
add
fucomip
shll
leave
int
jnp
mov
enter
lods
aas
pop
push
test
mov
lcall
pusha
iret
dec
rorb
sarl
rol
sbbb
sub
jmp
sbb
mov
test
mov
mov
push
rcrl
push
adc
dec
add
jo
loope
jge
mov
and
push
cwtl
and
lds
mov
adc
arpl
xor
aam
into
insl
xchg
xchg
mov
mov
and
mov
push
mov
add
movsl
stos
cltd
lods
inc
fistpl
je
cltd
int
pop
dec
call
inc
pop
outsb
pop
jecxz
add
dec
mov
outsl
movsl
cmp
lods
aad
flds
stos
pusha
neg
cmp
insb
sti
mov
fsub
mov
pusha
mov
xchg
sub
adc
lret
pop
mov
fldcw
mov
ljmp
pop
pop
cltd
jle
xchg
outsl
frstor
fmuls
mov
sbb
lock
adc
mov
jmp
or
aaa
xchg
inc
gs
mov
pop
lret
pop
sub
cmp
jns
xchg
cmp
ret
lret
sub
mov
and
stos
push
xor
xchg
lret
test
mov
push
in
popa
iret
sub
gs
insl
cmpsb
stos
mov
orb
data16
sub
je
std
xchg
sub
push
cmpsb
jns
add
test
movsb
fdivrs
push
cmp
test
add
rorl
rcrb
mov
pop
decl
mov
stos
sbbb
or
xchg
adc
and
or
test
pop
and
pop
hlt
adc
sti
jecxz
cmc
lahf
sub
xchg
pop
xchg
cltd
out
test
jb
subb
push
fbstp
nop
xchg
add
fistpll
dec
addl
sarb
xchg
fdivrl
lds
fisttpll
lret
out
sub
cmpsl
sub
adcb
into
fadd
jo
mov
dec
lcall
adc
in
xchg
sub
xchg
sub
or
jno
das
pop
mov
test
and
cmpsb
xchg
cmp
push
mov
mov
and
mov
jne
jmp
sbb
imul
sub
dec
push
fldl
jb
sbb
jecxz
dec
movsl
cmp
out
inc
stc
xor
lea
adc
lret
pop
xor
imul
jg
push
mov
ss
mov
cmpsl
nopl
scas
stos
jle
roll
jl
mov
dec
fildl
sar
fs
frstor
outsl
pop
dec
daa
dec
pop
pop
das
int3
pop
out
hlt
add
push
jle
mov
add
and
insb
lods
bound
int
inc
mov
or
add
in
test
push
popf
stc
or
cmp
lods
or
fwait
pop
dec
cmp
fwait
xchg
adc
hlt
cltd
push
loop
lret
xchg
rorl
sub
xor
adc
jmp
xor
inc
pop
out
push
mov
and
shl
mov
dec
das
pusha
mov
xchg
dec
out
std
xlat
ds
int
aas
cltd
xor
fsubl
dec
mov
stos
inc
lea
cli
js
lods
test
inc
xor
xchg
aam
dec
mov
arpl
jne
push
cwtl
das
xorb
lods
cmp
pop
xor
sti
sbb
shll
adc
sbb
outsl
sub
inc
aam
out
push
inc
sahf
jmp
and
xchg
push
stc
mov
shr
push
add
stos
gs
outsb
or
mov
jl
add
jge
fsubs
xor
dec
push
pop
testl
cmp
jno
cltd
adc
clc
cmpsl
xchg
jbe
fwait
mov
arpl
jp
jae
into
movsb
out
pop
repnz
xchg
cmpsl
inc
jns
jne
sbb
adc
and
jg
inc
push
pop
mov
shrl
hlt
imul
ret
push
inc
xchg
mov
xchg
lcall
mov
adc
sbb
lds
pop
imul
mov
inc
pop
and
js
adc
or
dec
xlat
ds
pop
imul
push
out
jbe
push
js
ljmp
jbe
jae
jb
jge
pop
out
push
push
pop
pop
out
inc
sbbb
leave
out
pop
int
out
adc
in
pop
pop
push
mov
push
out
std
adc
and
leave
pusha
lret
pop
sbb
sbb
pop
jns
xor
inc
mov
mov
sti
incl
and
jp
push
fdivp
sub
push
ret
out
xchg
dec
mov
add
mov
mov
xor
jns
mov
and
ficompl
cld
push
cmp
push
adcl
sahf
pusha
ss
xor
mov
cmp
adcl
sahf
leave
loopne
xchg
imulb
add
aam
cmp
stos
inc
sbb
dec
aas
push
repz
movsb
cmp
iret
xchg
cs
add
mov
sub
lock
xchg
out
add
push
movsl
hlt
jg
shrl
jge
mov
add
fidivl
dec
pop
cmc
cmp
test
mov
mov
fsubrs
xlat
mov
or
jnp
ja
sub
mov
testl
orb
mov
or
mov
mov
movsb
dec
mov
push
call
pop
and
inc
push
jns
xchg
gs
icebp
push
jb
mov
out
cmc
dec
push
test
inc
mov
or
aam
sub
into
mov
mov
jbe
stos
aaa
mov
addr16
pop
shr
xchg
lods
pop
inc
pop
lret
jg
push
pop
pop
xchg
dec
gs
les
scas
icebp
or
imul
movsb
jecxz
testl
sti
jmp
sub
adc
loopne
imul
sub
xor
stos
sbb
iret
sbb
or
mov
xchg
in
mov
nop
pop
stc
in
and
push
fidivs
xchg
scas
inc
or
lods
ficomps
push
push
fwait
lea
add
mov
mov
fwait
mov
dec
jo
sbb
dec
xchg
mov
jge
or
ja
mov
movsb
inc
xlat
daa
lcall
adc
jae
pop
mov
into
aas
dec
pop
cli
pop
je
mov
pcmpgtw
push
ja
fs
adc
into
and
aam
lods
inc
jno
push
mov
cmpsb
and
xchg
cmpsl
fdivrl
xchg
out
repz
ds
inc
cmp
fwait
in
inc
mov
or
arpl
mov
cs
fists
pop
mov
out
daa
imul
push
fcoms
lea
mov
push
lock
shll
lods
mov
fildll
sbb
pop
mov
repz
or
movsb
mov
ficompl
and
scas
pop
jmp
cmp
stos
out
addr16
sbb
dec
or
fistpl
dec
mov
insb
jl
fcoml
rolb
jno
mov
in
leave
sub
fwait
cli
ds
test
xorl
addr16
lods
xlat
test
data16
subb
mov
or
fldt
xor
xor
xchg
lock
sub
ret
cmpsb
inc
pushf
aaa
ret
jl
xor
push
jge
push
adc
outsl
push
scas
dec
loope
sbb
ror
repnz
ret
enter
into
insb
dec
and
daa
popa
sub
xchg
gs
hlt
push
sub
add
in
dec
add
jge
stc
loop
xor
stos
mov
dec
mov
std
lods
faddl
push
into
pop
xor
xor
fistpll
lret
lret
test
imul
mov
in
dec
test
jbe
push
xlat
rcr
xchg
into
je
xchg
lods
inc
cmp
jge
lods
pop
int3
lret
fstps
popf
dec
mov
aaa
jno
adc
and
pop
and
cmp
cld
add
insl
mov
mov
inc
add
fisubl
xor
fiaddl
cs
into
inc
and
push
lahf
testl
pop
into
push
jb
popf
mov
dec
setg
mov
and
push
inc
jns
xor
adc
pusha
idivl
xor
mov
xchg
xor
xchg
rol
push
pusha
push
cmpsb
outsl
into
shll
out
dec
sbbb
xchg
fwait
dec
dec
inc
mov
int3
repz
mov
xchg
xchg
xchg
pop
ret
fidivrs
xchg
mov
lahf
cmp
inc
and
jnp
adc
mov
mov
mov
inc
insl
add
mov
mov
jnp
loope
mov
shr
jmp
push
push
or
cmp
pushf
push
cmc
adc
mov
jg
add
push
dec
enter
cmpsl
popa
cmpl
jno
sub
xchg
aad
and
and
in
cmpsl
dec
sti
divl
jecxz
jle
addb
mov
fs
outsl
push
rolb
xor
in
shrl
push
xchg
lret
mov
dec
adc
jne
pop
lahf
sbb
aaa
loope
imul
mov
mov
dec
lret
sub
jmp
cmpsb
clc
and
adc
push
mov
pop
stc
or
push
xchg
loopne
push
cmp
xlat
mov
pop
lds
jecxz
outsb
fxch
mov
lcall
clc
or
imul
mov
xchg
sti
pushf
mov
sub
and
pop
cmpsb
fiaddl
jne
inc
imul
cld
dec
mov
cmpsb
pop
or
rol
xorb
push
pop
mov
xchg
lea
nop
test
iret
mov
inc
pop
xor
mov
lcall
add
fwait
mov
lcall
mov
dec
dec
call
add
lcall
imul
add
mov
push
insb
hlt
inc
mov
adc
adc
addr16
mov
add
mov
sbb
std
aam
in
push
xchg
push
pop
or
decb
inc
pop
lds
lods
movsl
lea
aam
add
jge
pop
out
inc
push
test
and
fildl
aam
push
addr16
mov
xchg
push
sub
addr16
stc
shl
sub
inc
pusha
mov
adc
cmp
outsb
enter
stc
or
adc
mov
or
int
sbb
pop
mov
xchg
mov
push
xchg
xor
in
aaa
mov
nop
lahf
stos
sarl
cmp
insb
mov
jg
js
out
cli
sbb
pop
lock
pop
scas
inc
pop
jge
push
scas
addb
inc
pusha
fidivl
inc
cmp
mov
clc
or
xchg
push
xchg
push
lods
outsb
push
mov
in
in
adc
xor
xor
loop
add
mov
xlat
cmpsl
je
mov
or
mov
jge
sbb
sbb
mov
call
je
pop
stos
mov
and
mov
and
sbb
test
clc
xchg
push
shll
addr16
pusha
sbb
shll
and
out
xchg
rorl
in
ljmp
mov
push
loop
cs
jne
stos
adc
outsb
jle
sub
insl
fimuls
xor
pushf
push
pop
pop
inc
shl
xchg
pop
cmp
or
fwait
sub
arpl
pop
insb
test
test
stos
mov
mov
xor
sbbb
test
loope
inc
adc
loopne
ds
repz
cmpsl
ret
dec
lods
sbb
xchg
or
rolb
mov
mov
mov
cmp
pushf
aam
mov
and
popa
clc
and
pusha
imul
es
outsb
mov
test
mov
ret
jle
jecxz
leave
adc
add
aam
adc
movsl
sti
xor
pop
xchg
xchg
data16
sbb
mov
rolb
imul
add
mov
mov
adc
hlt
sbb
in
mov
aas
cli
imul
loope
lret
jecxz
jmp
fcmove
hlt
pop
push
cmp
xorl
mov
addr16
insb
adc
int3
pop
mov
lods
dec
adc
xchg
inc
jle
push
mov
popf
xor
push
ss
aas
inc
mov
into
push
lds
fldcw
inc
push
lods
ja
jg
inc
cwtl
xor
sbb
cmp
push
inc
cwtl
mov
adc
xor
mov
pop
aaa
pop
call
mov
dec
pop
repz
lahf
xor
sbb
ret
daa
or
and
cmp
push
cs
push
shlb
mov
in
jae
or
pop
or
out
fs
xchg
xor
dec
and
mov
pop
sub
outsb
jb
jnp
xor
outsb
jl
popa
fsubl
sbb
mov
sub
shll
popf
repz
insl
insl
xchg
sub
sub
sarb
shlb
jmp
ja
push
das
aad
insl
popf
idivl
jg
dec
mov
stc
xchg
fimuls
mov
rcll
orl
jp
xor
movsb
pop
popf
cmpsl
cmp
ret
iret
stos
add
mov
dec
sbb
mov
or
in
sbbl
out
jg
mov
sub
cmp
push
scas
push
fmull
push
aam
jp
mov
fisubrl
js
out
das
jne
xchg
cmpsl
push
jbe
fildl
push
aas
stos
add
mov
jns
inc
arpl
pop
cs
xchg
insl
sbb
inc
negb
xchg
pop
sub
es
xor
sahf
xchg
out
lods
or
push
fiaddl
mov
mov
lahf
pusha
pushf
pushf
les
hlt
mov
pusha
and
mov
lcall
dec
xchg
sub
push
xorl
cmp
inc
push
push
cmp
es
rclb
push
out
cmp
shrb
jns
lock
jecxz
pop
adc
loope
ljmp
call
push
imul
rolb
es
lock
inc
pop
or
test
cmp
pop
decl
lods
lret
jns
shrl
lret
jb
mov
and
and
push
jb
cld
sub
fsubs
add
ljmp
jae
mov
and
xor
loop
push
inc
aad
out
call
lds
ljmp
add
loop
test
mov
dec
flds
cmp
into
xchg
pop
jecxz
add
push
cltd
inc
mov
push
xchg
neg
lret
lahf
subb
stos
repz
sarl
lcall
sti
in
jbe
inc
pop
adc
loope
dec
iret
xor
fistpll
fnstcw
pusha
jb
and
jmp
call
xchg
mov
inc
mov
adc
mov
sbb
imul
add
xchg
dec
jg
sahf
push
xor
test
ds
mov
xor
and
lret
jb
test
pop
mov
mov
sub
insl
mov
jl
test
std
push
pop
pop
repnz
movsl
in
inc
fiaddl
mov
push
xchg
xchg
pusha
subb
and
inc
and
mov
sahf
jno
pusha
sub
sbb
mov
xor
push
aad
mov
push
cltd
xchg
dec
std
sub
ds
mov
call
test
aam
xlat
pop
mov
shrl
repnz
mov
jl
sti
mov
pop
jne
outsb
in
test
mov
stc
and
xchg
mov
icebp
sbb
call
or
add
cmp
dec
pop
mov
inc
fwait
pop
out
fcoml
and
push
mov
popa
xchg
jge
das
and
aad
mov
or
ret
inc
cmp
outsl
and
mov
xchg
jg
add
std
into
ret
mov
hlt
out
jb
sub
nop
mov
testb
dec
inc
sbb
and
xlat
and
clc
or
inc
pop
cmc
pcmpgtw
cwtl
and
ljmp
and
pop
cmc
in
dec
sbb
movsl
cmp
and
in
mov
add
movsb
cli
or
jmp
adc
movsb
out
cli
sti
pop
sub
cmp
jne
jp
sti
or
xor
inc
sbb
cli
outsl
nop
daa
pop
cwtl
andl
inc
imul
in
dec
add
jl
or
push
xrelease
sbbl
aam
mov
and
and
stc
ss
mov
iret
sbb
mov
mov
movsl
add
jne
hlt
mov
jp
mov
mov
push
out
mov
mov
dec
in
daa
imul
ret
mov
xchg
sub
shlb
push
or
rcrl
lods
addr16
rol
sbb
icebp
dec
loope
ret
inc
data16
scas
mov
das
xor
test
inc
lock
push
cmpsb
mov
mov
popf
mov
mov
mov
lret
cmp
testl
sbb
lret
mov
insl
mov
mov
or
and
dec
xor
test
dec
sbb
repz
mov
mov
stos
sub
leave
cwtl
das
adc
mov
xor
mov
mov
fmuls
aas
cmpsl
inc
adc
outsl
iret
lret
adc
jno
testb
or
xor
popf
dec
inc
fcomip
xorl
int
mov
jbe
jl
mov
or
loope
and
je
ss
cmpsl
mov
nop
add
inc
xor
cltd
xor
push
mov
mov
push
jb
ds
jbe
mov
stos
mull
stos
inc
iret
fidivs
or
clc
mov
adc
cld
and
adc
cmc
or
push
mov
loope
cmpsl
aad
or
loop
dec
pop
cmc
jns
addr16
mov
cli
pop
test
or
ljmp
dec
jmp
or
adc
aaa
fstpl
adc
jecxz
xor
nop
jmp
xor
sub
lret
mov
nop
sub
pop
call
cmp
add
push
sbb
push
sub
push
xlat
mov
dec
adc
cmp
dec
loope
jo
stos
push
mov
int3
fiaddl
inc
add
ss
in
push
fwait
icebp
mov
pop
push
out
es
scas
push
hlt
iret
or
mov
push
fsubs
addb
bound
push
mov
adc
pop
nop
sub
mov
mov
aaa
leave
dec
cmp
daa
mov
int
inc
jecxz
outsl
jae
sbb
ds
pop
jmp
mov
aas
lods
lahf
mull
test
adc
sub
rorb
js
idivl
xor
push
xchg
addl
nop
push
and
pop
push
stos
daa
cmp
jae
mov
into
mov
in
cwtl
sub
icebp
jl
mov
jmp
testb
jle
adc
jno
xor
sbb
ds
cwtl
jo
xor
ret
inc
into
cmp
pop
sub
xlat
out
leave
ja
sbb
xor
xchg
out
xor
ja
sbb
mov
mov
mov
and
lea
sarl
pop
pop
cli
cmp
sbb
fmuls
and
jo
notb
lahf
mov
cmpsb
loop
mov
fs
mov
dec
test
jb
insl
cs
xchg
xchg
dec
mov
mov
inc
inc
pop
cmc
mov
mov
sub
pop
sub
adc
call
mov
cmpsl
adc
mov
pushf
mov
and
pop
repnz
xlat
mov
dec
cld
cld
sbb
test
cmpsl
ss
fildl
sti
sbb
out
popa
xor
jb
movsl
adc
cmp
imul
mov
pop
popa
adcl
mov
adc
mov
pslld
test
or
sbb
fs
imul
ret
fbstp
or
divb
rcll
inc
mov
stos
xchg
dec
dec
mov
ret
dec
lahf
jns
icebp
or
jnp
lret
xchg
push
cmp
inc
sets
sbb
cmp
je
mov
xchg
out
or
xchg
and
test
inc
sbb
cmpsl
inc
mov
jno
cld
aam
push
jae
push
sub
jg
fstp
mov
push
pop
call
pop
cmpsl
or
pop
xor
hlt
fdivrs
enter
cmpsb
inc
subb
loope
or
repnz
cmp
cmp
and
xor
xlat
cmp
loopne
jecxz
nop
ds
call
adc
rcll
leave
testl
and
and
mov
iret
sub
dec
out
or
fstps
jmp
jae
xor
push
dec
push
mov
and
pop
in
movd
sub
out
data16
pop
cwtl
mov
in
push
mov
xor
jnp
fndisi(8087
add
mov
stos
jecxz
adc
ja
ret
lret
inc
dec
loop
out
cli
xchg
lods
in
push
push
iret
sbb
mov
jmp
mov
jo
sub
sub
scas
ret
sub
jge
rcrb
push
add
daa
shrb
cmpsl
cmp
repz
pusha
lret
sub
pop
scas
sub
sbb
addr16
pusha
push
or
mov
jno
add
arpl
cwtl
cltd
cmp
mov
jge
pop
lock
in
sbb
lcall
and
mov
push
pop
repz
add
jmp
cmpsb
out
sbb
add
xchg
pop
inc
cli
test
pop
xor
icebp
js
sub
push
movsb
push
sbb
or
enter
pop
sbb
push
adc
cmp
cli
xor
sbb
mov
loop
psrlq
inc
lcall
jmp
into
sbb
int3
fiadds
jl
jae
mov
adcl
mov
mov
js
fwait
out
mul
incl
popf
jne
imul
dec
jbe
mul
xor
shrl
pushw
mov
mov
pop
div
dec
sbb
ret
sub
das
cs
cmc
aad
seto
pop
outsb
mov
push
lods
rolb
out
insl
jl
xchg
les
jmp
mov
xor
lock
add
and
mov
or
and
in
mov
cmpb
dec
push
fwait
std
xchg
mov
lret
mov
push
mov
jg
iret
push
in
sub
adc
cltd
sbb
je
jns
dec
test
adc
and
sub
inc
mov
pop
imul
mov
sti
shl
and
cmp
popa
jg
jbe
dec
dec
jno
repz
and
or
cmpb
dec
negl
shll
enter
sbb
leave
data16
lahf
shlb
scas
jle
sbb
adc
xchg
aam
pop
mov
or
mull
and
cmp
xorb
mov
mov
sub
jp
xor
add
add
adc
in
sub
jmp
gs
mov
insl
inc
arpl
sub
test
not
mov
mov
sbb
xlat
or
outsl
mov
data16
cwtl
jo
cltd
mov
xchg
push
test
jg
loope
orb
pop
enter
movsl
jmp
rorb
ljmp
stos
xor
xlat
sarb
stos
inc
movsb
push
or
popf
int
xor
pop
iret
mov
loopne
pop
lods
rclb
xchg
ja
xor
lods
pushf
cmpsb
xchg
sbb
int
aaa
push
jno
int
outsb
lcall
adc
adc
out
push
mov
rcrl
inc
jle
jmp
jbe
call
out
test
stos
xchg
sbb
int3
mov
mov
int
inc
fcompl
ds
imull
mov
lahf
fnsave
es
xchg
das
cmp
cmp
popf
cmp
scas
pop
mov
mov
ja
dec
or
mov
mov
dec
iret
gs
jp
cmp
mov
cmpsl
ret
adc
sbb
cwtl
pop
outsb
jl
negl
aaa
cld
add
inc
stos
sbb
push
sbbl
mov
gs
repnz
sbb
mov
in
push
jb
in
xchg
sub
add
inc
mov
int3
ficomps
fistpll
cs
in
lock
mov
ja
hlt
push
cltd
jae
rcl
push
xor
aad
test
jne
pushf
jns
addb
jmp
sbb
mov
cmp
sbb
push
int3
add
or
mov
and
fsubrl
sbb
lcall
add
mov
loopne
inc
and
sti
in
xor
xchg
inc
mov
fiaddl
rcrb
hlt
mov
popa
cld
nop
sub
loope
inc
add
mov
push
push
xchg
sbb
adc
clc
sub
cmc
inc
adc
cs
push
pop
jae
sub
push
out
and
dec
push
jecxz
pop
push
mov
and
ficompl
inc
jb
pop
int3
ss
jno
in
in
ss
int
ljmp
std
add
push
cmpsb
adc
sbb
adc
jno
arpl
adc
lret
mov
ret
imulb
lahf
loope
das
mov
fstps
mov
add
sbb
les
test
xchg
hlt
cmp
das
cmp
adc
jmp
adcb
inc
leave
in
mov
out
xor
mov
insb
add
arpl
or
mov
sti
sub
fcompl
ret
inc
mov
xor
gs
xbegin
xchg
lret
mov
test
or
xchg
inc
mov
jne
jge
pop
add
pop
pop
xor
mov
jl
cld
cld
stos
dec
loope
jg
sub
push
jo
dec
ror
mov
sub
push
lds
fsubrp
add
cmp
dec
lods
lea
aaa
scas
xchg
in
cmp
les
lahf
je
cmpsb
cmpsb
inc
scas
jg
enter
movsb
ljmp
push
inc
lahf
lret
mov
push
pop
fbstp
or
cmp
mov
call
sub
enter
mov
pop
fmull
mov
mov
loopne
andb
sbb
push
mov
pop
jge
pushf
ds
pop
add
mov
adc
ss
stc
addr16
sbb
jle
out
bound
and
loopne
cld
or
add
sbbb
shl
dec
add
cmp
lret
test
arpl
lds
insb
divb
jmp
mov
jmp
and
iret
cmp
jp
and
cmpsb
dec
fadd
and
jg
sahf
out
iret
mov
jbe
and
dec
dec
shrb
xor
xor
addr16
mov
imul
clc
sbb
pop
and
mov
add
xor
xchg
loop
sbb
lods
add
jbe
xor
xlat
and
xchg
aas
xor
incb
mov
test
pop
addl
push
in
mov
cli
push
into
pop
repz
mov
movsb
mov
jbe
lcall
dec
or
pushl
xchg
cmp
jl
test
push
push
cmpsb
mov
js
lret
bound
pop
repz
imul
mov
mov
sub
in
push
mov
mov
fistps
popf
add
adc
push
in
mov
pop
out
xchg
xchg
aaa
push
lret
test
and
mov
gs
popf
fistps
enter
fs
shlb
mov
les
out
or
in
cmp
and
imul
leave
ljmp
outsl
push
lret
push
aam
lea
fiaddl
jle
cmpsl
loop
scas
xchg
jns
jl
lcall
mov
pop
sub
cld
or
pop
ds
or
fistps
add
fldl
and
idiv
push
bound
sbb
or
aaa
into
and
push
jmp
das
xchg
sub
cli
jb
sub
mov
sahf
inc
stos
mov
mov
test
fsubp
jge
rorl
or
test
inc
stos
cli
xchg
repz
xorl
pop
xor
in
ja
adc
mov
in
jle
xor
xchg
in
lods
mov
jae
subb
mov
sub
test
repnz
mov
sbb
mov
lret
jb
xor
stc
push
jnp
pop
sub
std
push
in
sub
dec
jae
jae
cli
pushf
dec
scas
imul
mov
test
sbb
dec
bound
repz
xchg
jmp
jg
cld
cld
xchg
pop
popa
jle
mov
mov
push
jne,pn
xlat
scas
pop
sbb
in
adc
sbbb
cli
sub
daa
arpl
and
ss
stos
mov
push
in
fistpll
add
xchg
push
sub
fwait
xchg
movsb
push
ja
cmpsl
dec
mov
in
idivl
xor
push
ja
inc
adc
ljmp
inc
push
xchg
adcl
lahf
cld
shrb
sub
pop
bound
divb
fcmovne
push
fs
push
cmp
popa
xchg
mov
mov
dec
jle
addr16
les
movsb
loopne
in
push
mov
xor
fldenv
adc
rsqrtps
xor
lds
je
lea
shrl
dec
mov
mov
out
and
xchg
pop
or
sbb
pusha
sti
std
xchg
sub
or
addr16
pop
jge
mov
or
xor
pop
mov
fmuls
cmp
stos
test
cmp
lds
lock
sub
ljmp
jno
sub
xor
cmp
pop
push
and
mov
cmpsb
lcall
or
pusha
jno
xchg
dec
ja
xor
adc
jno
jno
inc
je
jb
sbbb
xor
movsl
jg
xchg
pop
push
mov
sub
mov
push
hlt
pop
add
sub
push
push
inc
jb
dec
mulb
scas
pushf
hlt
test
mov
imul
addr16
inc
stos
cs
cmc
gs
call
mov
leave
pop
xlat
out
push
into
or
shl
jl
mov
aaa
cli
pop
lock
aad
sub
push
movsl
fdivl
add
pop
lods
aas
sbb
jg
stos
cwtl
popa
idivb
pop
mov
jne
jb
adc
adc
or
jae
pop
ja
inc
jg
cmp
sub
das
mov
clc
aas
pop
pop
mov
sbbl
jle
repz
and
cmc
rol
pop
popf
adc
scas
inc
mov
aad
js
ret
cltd
repz
push
sbb
add
xchg
mov
mov
rorl
stos
fldenv
sub
or
jp
cmp
or
cmp
fwait
scas
int
imul
xor
int
jne
sti
imul
mov
js
xor
test
or
popa
cmp
pushf
cs
inc
out
jae
xor
iret
mov
push
testl
and
clc
sahf
out
int
pop
js
call
or
mov
jp
inc
push
mov
les
pusha
mov
cmc
rcrb
xor
dec
das
dec
adc
mov
or
jae
lods
cmp
stos
jno
cmpb
and
mov
jno
call
leave
xlat
xor
outsb
jle
cmpsl
dec
pop
dec
xchg
inc
insb
divl
adc
ss
lock
sub
mov
jbe
dec
lods
push
addr16
insb
xchg
sub
sbbb
insb
out
popf
sub
mov
test
push
loop
mov
dec
dec
and
aad
loope
add
stc
jp
ljmp
je,pt
lods
lea
test
into
icebp
cmp
sbb
sbb
xor
mov
mov
add
test
pop
mov
outsb
sbbb
and
lea
xor
sub
les
into
in
test
movb
int
js
add
pushf
mov
cld
daa
cmp
or
sub
sbb
orl
jle
sbb
add
incb
mov
sub
les
scas
xchg
inc
xchg
jns
push
repnz
rcrb
pushf
lds
xlat
repz
leave
lds
sti
sbb
jne
lcall
and
xor
into
mov
in
out
popf
jnp
ja
jle
lret
fcomp
loop
mov
lods
push
mov
push
fistl
call
fsubrp
push
insb
mov
cs
mull
daa
mul
jnp
pop
in
push
cmp
arpl
sbbb
or
xor
xor
aaa
sbbl
mov
clc
cmp
sub
inc
fdivrs
movsb
lcall
cld
mov
push
or
das
cmp
mov
push
cmp
es
movsb
dec
out
xor
test
mov
mov
ret
adc
cmp
loop
ret
pop
inc
and
aam
int3
cmpsl
js
in
jns
adc
insb
stc
ds
repz
aam
cmp
adc
add
sbb
mov
xchg
jo
lea
enter
les
lret
popa
adcl
mov
inc
pop
into
xlat
loop
nop
jecxz
push
lock
xor
call
cs
dec
or
cltd
fs
clc
mov
mov
in
sti
std
sub
js
push
loop
cltd
xor
mov
movsl
sbb
adc
ja
jae
jne
xchg
jp
xor
stc
cmc
int
fnsave
push
movsl
cmp
js
insb
cli
mov
add
pusha
mov
xor
stos
and
inc
xor
int3
mov
out
jmp
and
mov
dec
sbb
mov
push
pop
xor
out
push
mov
movsb
push
popa
mov
shrl
pop
jno
in
out
fstpl
mov
mov
cli
cltd
cld
xchg
push
or
mov
sbb
sub
ret
sub
xchg
imul
into
cltd
and
ds
xor
add
rcll
push
subb
xchg
cs
lock
cmpsl
push
pop
push
add
mov
fisubl
fs
push
fisubs
jmp
das
fs
popf
push
pop
out
xorl
adc
in
pop
jb
mov
leave
std
xchg
repz
sub
out
imul
xchg
aaa
cld
xchg
mov
push
add
mov
enter
xchg
pop
cltd
dec
xor
xchg
out
cmp
in
push
pop
arpl
mov
cmp
mov
pop
push
xor
outsb
gs
xchg
in
jb
insb
add
xor
andl
rcrl
je
jmp
jnp
mov
cs
mov
dec
call
mov
outsl
mov
sub
sub
dec
dec
mov
sbb
sbb
xor
mov
push
call
popf
orl
popf
push
or
std
mov
test
es
shll
cmp
loop
adc
ret
lcall
dec
mov
push
nop
dec
pop
mov
test
or
mov
incb
xor
sub
incb
dec
jnp
shlb
push
test
test
lret
jnp
or
push
sub
mov
or
scas
inc
inc
and
and
xor
add
jae
and
decl
and
sbb
hlt
lahf
test
rcr
rorb
dec
mov
pop
and
insb
insl
cmp
xchg
outsb
dec
stos
inc
sbbb
jno
cmpsl
adc
sub
mov
jne
ffree
xor
addr16
sbb
add
ja
pop
jnp
lea
xchg
push
scas
push
loop
test
pop
out
adc
loopne
aaa
xor
inc
ljmp
popf
out
sbb
pop
arpl
loope
rolb
cmp
xor
add
xchg
std
cmp
dec
mov
cmp
mov
xor
scas
add
icebp
mov
enter
jo
ds
es
mov
sbb
mov
fcompl
push
call
push
insl
mov
xchg
mov
xchg
add
jne
jns
aaa
mov
in
mov
js
xchg
ss
pop
jle
loopne
sti
xchg
or
jae
mov
lret
addr16
mov
pop
stc
xchg
or
jmp
sub
xchg
outsb
sub
pop
xchg
add
divl
adc
into
jne
mov
xor
insb
adc
push
cli
das
mov
xor
out
xchg
mov
movsb
movsb
rol
pop
fcoms
sub
pop
jmp
xor
lea
popa
mov
push
sahf
ds
mov
jns
pop
lods
shrb
sbb
fs
repnz
sbb
mov
scas
movsl
loope
fxch
inc
pop
add
ljmp
inc
jbe
push
xor
pop
fnstenv
push
adc
cmp
out
je
xchg
hlt
push
int3
test
pusha
pop
or
fwait
xor
lea
data16
iret
sub
in
test
adc
test
xchg
push
lcall
cmp
loop
shr
xchg
sub
js
or
shll
pop
sbb
pop
dec
mov
clc
lahf
mov
and
mov
mov
loopne
ljmp
mov
or
fsubs
xchg
icebp
mov
notl
aas
orl
aad
movsb
in
sbb
inc
les
fbstp
sbb
std
or
cmpsl
push
rclb
subl
cmp
imul
sub
pop
repnz
mov
into
pop
or
mov
mov
lock
mov
fcmovnu
lcall
mov
sarb
stos
cmpsb
mov
push
jo
arpl
movb
jecxz
jo
int
cmp
pop
xor
sarl
xchg
push
mov
imul
icebp
inc
into
arpl
sbb
leave
sbb
sub
jbe
push
mov
sbb
sbb
loope
popa
sub
mov
test
dec
pusha
das
push
push
xchg
in
cmpsl
inc
dec
push
test
sub
inc
mov
jbe
repz
mov
xchg
sub
das
enter
cmp
xchg
push
sub
push
rcrl
sub
rcr
aaa
mov
cmc
mov
add
mov
les
or
mov
sbb
xchg
dec
xor
loopne
push
aam
push
or
addr16
cmp
cmp
dec
lahf
scas
out
cmp
pushf
jg
aad
iret
shl
and
jnp
adc
and
in
push
inc
mov
or
adc
mov
in
mov
add
popf
inc
inc
popa
jae
sbb
out
lods
add
mov
loop
or
incb
hlt
mov
jge
ret
xchg
int
and
and
insb
add
inc
fnsave
pop
mov
int3
push
sub
push
rol
mov
pop
or
aad
cld
cmp
add
cmp
dec
mov
aad
adcb
sbb
add
sbb
dec
inc
popf
dec
fwait
inc
xor
adc
xor
into
bound
mov
scas
push
jl
lea
cs
inc
push
popf
js
scas
inc
jb
sti
jb
adc
dec
ret
loopne
mov
push
dec
jg
jle
bound
mov
pop
fldcw
fcoml
test
es
and
pop
fiaddl
fidivrs
lcall
and
bound
pop
int3
les
push
mov
cltd
call
sub
out
sbb
inc
lods
inc
jbe
lds
stos
ss
inc
xchg
mov
mov
es
push
notb
pop
sahf
sbb
sarb
lods
std
fnstenv
mov
notl
or
fs
xchg
push
call
outsb
fldt
or
xor
out
xor
popa
adc
stc
int3
mov
adcb
cmp
sbb
pop
scas
sub
scas
inc
xchg
pop
jecxz
int
mov
or
rcrl
out
int
add
mov
test
mov
fidivrl
push
push
dec
and
jns
add
mov
andl
clc
ja
sub
cmp
fidivs
jns
cmp
orl
jne
lods
cmp
pop
jecxz
cmp
jne
fs
lret
mov
xchg
sub
xchg
shlb
jbe
inc
mov
outsl
add
mov
outsb
test
call
and
adc
cmp
imul
push
pop
lods
and
cmp
sbb
xchg
loope
cmpsl
sub
add
cmc
fistpll
test
lret
iret
mov
jnp
sbb
push
arpl
cmpsl
jns
mov
jecxz
fistl
push
shr
test
add
sbb
jmp
int3
rcr
andl
int
mov
add
jno
jl
push
xor
test
lret
shlb
fcomps
enter
adc
fstpt
push
lods
inc
mov
add
jb
sub
adc
cmc
loop
aas
into
push
ds
pusha
into
push
rorb
out
repz
lods
add
xor
leave
jecxz
jbe
mov
lcall
dec
mov
insl
pop
aas
repnz
xor
xchg
add
outsb
adcl
aam
dec
add
int3
jne
mov
adcb
mov
push
mov
push
mov
jmp
lret
jmp
or
repz
hlt
les
fwait
cli
and
jbe
test
cld
mov
jecxz
xorb
cmp
sahf
test
push
repnz
loope
jl
fisttps
adc
sub
dec
in
sahf
fstpl
push
mov
adc
inc
or
mull
cmp
pop
jno
or
cmp
xchg
add
xor
adc
jns
stc
nop
xchg
lcall
cmc
xchg
mov
rcll
sbb
inc
daa
sbb
cmp
pop
jb
xchg
sbb
outsl
lods
fwait
add
in
inc
pop
jmp
push
jmp
orps
jp
test
mov
out
and
sub
lods
fwait
jp
int
inc
out
loope
push
imul
adc
rclw
pop
ret
movsb
mov
outsl
adc
and
jbe
inc
push
jae
shl
adc
mov
and
jecxz
es
push
sbb
enter
outsb
dec
cmpsb
sbb
dec
add
in
int3
add
sbb
inc
cmpsl
inc
lret
je
shr
xchg
pusha
sub
xchg
mov
adc
or
adc
pop
jbe
lds
xor
mov
pop
testb
add
jo
sbb
lea
ret
addr16
push
lods
test
cld
or
xchg
mov
pop
push
das
and
sbbl
xor
or
stos
outsl
add
in
into
fidivrs
pop
adc
push
out
and
mov
ja
sub
xchg
xlat
icebp
add
and
fmul
fnsave
arpl
push
add
dec
jne,pt
adc
lds
mov
inc
lsl
in
xchg
xchg
cmpsb
add
push
and
mov
mov
movsl
ja
or
lcall
and
or
adc
test
notb
nop
aas
into
xchg
push
inc
pop
push
sahf
fisubs
outsl
xchg
scas
inc
inc
pusha
mov
mov
popa
mov
loop
jp
ror
lods
mov
and
js
sbb
fdivl
cwtl
and
dec
movsl
cld
ja
outsb
mov
mov
push
adcb
push
sbb
push
dec
repz
pop
push
pop
icebp
stos
jno
add
cmp
or
cmpsl
mov
sub
mov
jecxz
clc
jle
insb
mov
push
jno
and
cwtl
dec
testl
adc
jns
mov
add
inc
fisubs
in
xor
pop
mov
insl
in
and
push
inc
xchg
cmp
mov
xor
push
stc
imul
cmpsb
ret
fwait
divl
lcall
add
scas
ja
test
jecxz
int
mov
pop
insl
or
cmpsb
add
cmpsb
subl
adc
ret
jmp
or
cmp
mov
xor
jge
pop
scas
cmp
sbb
mov
xor
jbe
cmp
movsl
mov
dec
xchg
aas
cmp
in
cmp
cli
push
xor
shlb
mov
loope
xor
xchg
out
mov
dec
test
mov
sub
pop
cmp
aam
push
test
jmp
adc
add
xor
fwait
or
int3
add
cli
hlt
dec
testl
xchg
sbbb
adc
adc
dec
cmc
adc
fnstsw
sbb
and
mov
aas
scas
out
out
lds
in
jae
mov
ss
push
popf
inc
bound
jnp
pop
gs
aad
add
hlt
data16
in
push
mov
mov
imul
xor
shll
xchg
cwtl
jne,pn
andb
pop
outsb
popf
xchg
or
movsb
icebp
hlt
mov
fldenv
add
mov
inc
dec
push
jnp,pt
jns
clc
sbb
bound
aas
shr
dec
hlt
push
sub
lods
jb
or
jmp
push
jns
icebp
mov
repz
cs
pop
inc
and
leave
lods
push
mov
fiaddl
iret
add
in
sub
xchg
pop
outsl
mov
in
jge
ss
shr
jp
ja
stc
push
xor
mov
pop
jne
jno
in
outsb
dec
test
adc
sub
ror
cmpsb
divl
ds
shlb
pop
or
jbe
cmp
inc
negl
in
add
loop
call
or
mov
test
in
ja
lret
push
mov
pop
clc
cmp
sbb
leave
or
push
sbb
rcl
in
aas
popf
add
cmpsl
incb
mov
lahf
or
mov
imul
divb
roll
push
fisttpll
ret
stos
add
lret
dec
loope
jo
lcall
and
outsl
out
xchg
xor
adc
lock
out
out
sti
andb
test
push
and
or
jns
xchg
xor
add
push
outsl
pop
mov
or
cmpsb
cld
aad
jb
out
decb
add
lock
sbb
lret
adc
imul
ljmp
xchg
pop
xchg
fcoml
jp
cmp
mul
jge
imul
dec
add
dec
jno
stos
push
clc
adc
add
scas
repz
and
sbb
xchg
rcrl
in
repz
test
cmpsb
pop
jp
out
stc
lea
push
mov
mov
shrb
jns
sar
mov
int3
pop
jmp
xchg
adc
cmp
or
add
mov
push
rcrl
and
movsl
pop
sub
cltd
test
mov
scas
loope
insb
inc
out
or
sbb
cli
cmp
roll
ljmp
es
xor
repz
cwtl
push
mov
or
jns
or
xchg
addr16
clc
sbb
dec
mov
xchg
push
fists
mov
ja
inc
cmp
and
xchg
xchg
cmpsb
in
test
loopne
jns
dec
dec
pop
sbbl
rclb
and
sar
pop
stos
ljmp
dec
mov
out
xor
xchg
aad
icebp
movsb
test
inc
and
inc
lret
add
inc
xor
sarl
push
jae
xchg
nop
jo
ret
cmpsl
adc
pop
notb
pop
hlt
les
subb
and
outsl
jecxz
lahf
or
leave
jbe
add
negl
cltd
aam
ret
xor
rolb
adc
dec
out
daa
iret
ja
add
or
ficoms
mov
xchg
and
fsub
js
pop
imul
sub
icebp
fs
incb
cs
and
lcall
imul
jno
push
jae
push
lret
and
es
lret
sub
test
jne
subb
push
pusha
ret
xor
mov
adc
rcl
inc
inc
xchg
sub
pop
imul
in
inc
mov
adc
outsl
pop
hlt
pusha
or
push
sbbl
mov
mov
scas
lcall
sub
stos
outsl
aad
mov
sub
gs
pop
cmc
adc
daa
mov
cmp
xlat
mov
cmpsl
outsl
mov
cmpsb
xor
inc
movsb
test
sub
in
dec
mov
in
hlt
imul
jmp
ret
sub
repz
jecxz
lock
hlt
mov
mov
push
test
lcall
jbe
cwtl
popf
jge
add
test
or
rcll
fsubrs
cltd
mov
push
jg
push
mov
ret
fcomps
into
sbb
xchg
add
sbb
imul
out
mov
das
cmpsb
adc
gs
call
imul
cmp
inc
orb
bound
cltd
aaa
add
and
dec
adc
sbb
xchg
push
jmp
aaa
push
mov
jo
fs
in
adc
adcb
data16
mov
dec
push
push
imulb
pop
jb
aaa
or
out
mov
dec
mov
mov
popa
add
out
dec
and
mov
adc
pop
scas
les
mov
sarl
ja
xor
add
notb
scas
test
sub
jge
aad
sub
pop
movsl
inc
mov
mov
in
sub
lret
lahf
push
jmp
or
add
and
xchg
aaa
loopne
inc
adc
pop
hlt
sub
mov
lea
push
in
cld
aam
lods
out
xorb
psadbw
mov
fisttps
out
loope
insl
fcomi
mov
scas
pop
jae
ja
mov
out
clc
les
cli
mov
and
sbb
dec
and
lods
xor
cmp
xchg
fldl2t
loope
pop
pushf
lock
imul
adc
cmp
inc
cld
int3
xchg
sub
cmp
xor
xor
pusha
push
push
mov
jbe
sub
repz
std
or
and
cwtl
outsl
jge
ficompl
test
rcr
xor
mov
xchg
push
in
push
xchg
test
frstor
inc
pmaddwd
push
push
xchg
stos
rcr
in
cmpsb
fisubrl
das
scas
stos
inc
out
pop
dec
or
sbb
ss
dec
aam
andl
iret
cmpsl
jnp
cmp
pop
jns
jb
sub
stos
mov
jno
mov
mov
push
fwait
adc
mov
pop
xor
add
sbb
mov
cltd
push
jmp
dec
xchg
sub
stos
pop
repz
insb
add
mov
cmp
add
pop
sbb
sti
div
mov
popf
adc
jmp
sbb
js
or
sti
xchg
sbb
fidivl
mov
fbld
jo
outsb
gs
xchg
or
jp
shlb
push
stc
xchg
imul
cmpsb
xor
mov
pop
jl
dec
push
push
call
out
cld
push
ljmp
fidivs
stos
ds
lods
and
movsb
hlt
add
mov
aam
add
add
xchg
jle
dec
xor
es
nop
xor
divl
jbe
jp
mov
in
push
adc
adc
or
data16
clc
push
out
sub
add
adc
popa
ds
nop
sbb
sbb
outsb
shll
cld
inc
add
fstpl
xrelease
shll
jbe
lock
lahf
cli
mov
push
nop
pop
int3
or
imulb
rcr
mov
sbbl
and
inc
jecxz
mov
pop
test
add
test
cltd
stos
cld
shrb
mov
jle
clc
push
push
inc
fldl
xchg
sub
lea
xchg
arpl
inc
test
rcl
xor
sti
imul
test
stos
shll
ficomps
int3
add
arpl
cli
ret
pop
sub
xorl
divb
xchg
insb
sbb
pop
nop
mov
sub
jle
movsb
pop
stc
or
pop
loop
or
mov
lods
push
mov
fcomip
mov
pop
mov
jnp
cmp
sub
popl
inc
loope
pop
pushf
loopne
adc
sub
dec
and
imul
inc
rcrl
inc
call
push
lahf
sub
sub
xchg
je
inc
ret
ds
negb
xor
adc
or
shll
aas
sti
push
push
aad
mov
rcrb
and
dec
fnstcw
pop
inc
push
shlb
xor
jns
das
and
or
std
xchg
sub
xor
xor
and
popf
clc
scas
leave
and
cmpsl
lds
in
das
rcll
in
dec
cmp
aam
test
dec
shlb
hlt
test
lret
in
mov
iret
out
je
repnz
xor
test
int3
sub
or
jl
push
adc
int
loop,pt
imul
adc
es
cs
pop
dec
sbb
sub
fdivrs
lock
dec
popa
test
push
gs
mov
jne
xchg
adc
inc
dec
hlt
imul
inc
sbb
push
icebp
lahf
imul
ss
mov
mov
dec
leave
jg
xchg
cs
popf
push
jnp
push
outsl
dec
fmulp
pop
fs
sub
addb
lahf
lods
mov
xchg
ljmp
cmp
adc
shl
outsb
pop
mov
adc
stc
or
arpl
sbb
lock
pop
sub
add
mov
mov
xlat
inc
or
dec
divb
jl
xchg
cld
push
call
call
cmpsb
jns
push
ret
hlt
addr16
and
add
push
mov
sbb
hlt
jnp
mov
mov
inc
fcompl
sub
cltd
std
sub
decb
xlat
push
xchg
xor
or
sub
shl
call
pop
sub
fcomip
es
jg
mov
js
mov
icebp
loope
add
pop
push
push
call
mov
mov
xchg
mov
lods
popl
cs
sub
fistpl
aas
fwait
xor
fistpll
aad
faddl
jnp
rcl
mov
dec
pop
addr16
pop
loopne
mov
jmp
cli
aam
sub
rorl
sub
aad
repnz
movsb
pop
push
xor
push
in
shll
sub
mov
notl
push
je
in
sub
int3
test
rclb
test
dec
mov
jb
jno
inc
rcrb
andl
cmpsb
cmpb
add
arpl
mov
inc
in
inc
roll
mov
loopne
push
lcall
aas
and
lret
frstor
imul
push
js
lock
sub
and
pop
sti
out
test
ret
outsl
subl
jge
popa
fbstp
mov
jge
fwait
ret
testb
xor
dec
stos
cmc
leave
sub
fidivrs
test
inc
cmp
cmp
xor
testb
sbb
sbb
xchg
push
stc
test
mov
mov
es
inc
mov
pop
aad
inc
psllw
mov
ret
es
mov
fnstsw
scas
mov
xor
lods
icebp
dec
in
jno
cmp
shr
movsb
ret
cmp
daa
xor
mov
jecxz
adc
or
mov
fisubs
or
inc
lods
outsb
add
leave
fbld
popa
lea
inc
movsb
cmp
xor
xchg
inc
sahf
shrb
dec
imul
push
loope
mov
ja
fwait
imul
add
cmp
fstps
mov
add
cmc
jo
pushf
and
shl
movsl
sub
sub
dec
ds
outsl
outsb
dec
pop
loop
test
adc
int
xor
fs
add
roll
loop
fs
lahf
mov
inc
in
sti
push
xchg
mov
adc
mov
sti
out
loopne
sti
rclb
aas
enter
xor
in
lret
repz
daa
icebp
cmpsl
pop
cwtl
sbb
ss
bnd
es
lds
les
sbb
test
mov
dec
roll
lret
ficompl
dec
fidivrs
aas
xchg
inc
std
xchg
fdiv
int
xchg
add
push
jo
xchg
mov
dec
xchg
int3
std
xchg
mov
stos
or
push
jmp
xchg
insl
cli
mov
mov
jne
int3
xor
inc
divl
xchg
sub
pop
push
mov
stos
icebp
hlt
push
shll
stc
ljmp
fsubs
inc
scas
dec
mov
ljmp
mov
sarl
cmp
inc
out
test
lods
xor
jno
mov
scas
ljmp
orl
xchg
mov
push
ja
push
inc
int3
stos
std
inc
mov
push
inc
mov
pusha
inc
pop
mov
sbb
scas
add
push
repnz
ljmp
imull
mov
jb
xchg
mov
mov
dec
js
mov
je
cmpsb
sub
lds
into
sub
adc
add
lcall
in
pop
test
psrlq
loope
pop
mov
dec
dec
repz
pop
loope
or
jb
icebp
nop
sub
lcall
push
pop
test
ret
fwait
dec
jmp
repnz
push
adc
imul
lcall
adc
push
scas
rcll
xor
movhps
and
xor
fdiv
xchg
add
popf
mov
cltd
pop
xor
or
or
movsb
jmp
inc
mov
and
cmp
xlat
pop
rorl
fs
rolb
sub
xor
lock
incl
sub
pop
inc
cltd
hlt
repz
mov
sbb
rol
dec
movsb
jge
mov
mov
jnp
push
mov
sbbb
cmc
fcomps
xor
pop
xchg
push
fstpt
mulb
xchg
adc
xor
pop
mov
pushf
xchg
repnz
repz
cs
and
jb
lds
jns
daa
and
fadd
jge
sahf
clc
pusha
cmpsb
ljmp
mov
jne
pop
pop
xchg
sbb
or
popl
repz
pop
lea
adc
int
cltd
xchg
add
jge
sbb
jo
jno
or
mov
jo
into
sbb
or
and
xor
in
mov
push
btc
outsl
bound
sub
das
pop
pop
icebp
pop
adc
jo
cmpb
sarb
test
test
push
not
xor
xchg
mov
inc
inc
bound
jl
notb
inc
xor
push
ret
jns
and
or
push
out
scas
bound
push
mov
mov
sbb
sub
in
sub
hlt
lcall
ret
mov
push
mov
test
mov
mov
jbe
jecxz
cmp
adcb
cmp
ret
out
cmp
ja
or
pmuludq
mov
aam
push
sbb
dec
test
cli
sbbb
sbb
bound
cmp
sub
sbb
scas
lret
push
enter
fldenv
mov
sub
dec
jge
js
insb
in
lods
or
jl
mov
in
sbb
mov
je
leave
push
pop
adc
mov
sbb
add
loop
pop
and
mov
rolb
cwtl
ljmp
xor
movsl
jg
mov
mov
ret
into
ds
and
fists
aaa
push
movsl
cmp
data16
test
bound
jb
jns
fsubr
mov
test
test
inc
lret
faddl
sub
nop
jge
push
scas
dec
xor
loope
push
dec
mov
xchg
sbb
inc
pop
shll
xor
push
xchg
cmc
xchg
mov
add
xchg
cmc
jne
enter
jnp
ds
mov
adc
aam
xor
clc
adc
jne
repnz
shll
cmc
adcl
fnstsw
or
test
jne
insb
je
sahf
xchg
shlb
in
lds
cmpsb
or
jne
repnz
js
add
xor
mov
arpl
push
and
mov
jns
or
shl
mov
push
dec
pusha
sbbl
dec
sbb
outsl
xchg
out
lahf
cmp
test
pop
jno
mov
mov
ds
push
dec
add
inc
push
pop
adc
pop
insb
out
pop
fmull
push
idivl
fisubs
std
pop
sub
lods
mov
push
mov
pop
clc
xchg
inc
fcomps
or
mov
data16
enter
xchg
jge
mov
fisubrl
adc
mov
cmp
push
stos
xchg
mov
je
mov
jle
inc
jge
arpl
sbb
mov
mov
and
pop
addr16
nop
mov
inc
pop
mov
cld
xchg
pop
inc
xchg
mov
and
add
adc
and
mov
leave
dec
sub
inc
in
popf
xor
enter
sub
nop
ret
fistpll
bound
inc
fs
mov
sbb
stc
and
xchg
test
mov
popa
xchg
icebp
out
lods
mov
xchg
and
fs
jb
push
out
sti
jno
cltd
icebp
adcl
out
xor
and
movsl
add
pop
imul
mov
lock
jb
loopne
lret
sub
or
sub
pop
mov
and
push
or
stc
repz
push
xchg
mov
loope
loop
lret
cmp
push
jne
leave
push
mov
stos
and
and
add
outsb
sub
inc
dec
push
mov
pop
cmc
jbe
loop
scas
push
sub
inc
popa
and
loopne
mov
add
nop
loopne
ret
pop
sub
test
rclb
cmp
sahf
testb
mov
sub
push
mov
dec
loopne
mov
addr16
adc
cld
mov
pushf
jle
movsl
mov
popa
das
pop
jbe
dec
push
adc
mov
inc
scas
out
aad
jne
lods
mov
mov
test
push
lret
push
repz
and
mov
mov
out
lret
xchg
inc
out
stc
popf
stos
ds
fidivrl
shl
movsb
out
es
mov
xchg
shrl
xor
push
js
mov
jns
and
push
mov
xor
pop
insl
mov
sub
jg
push
lgs
push
cmc
jecxz
and
mov
les
sbb
pop
jle
pusha
idiv
adc
jb
jg
dec
adc
stc
idiv
mov
inc
mov
imul
jb
xchg
in
pop
sbb
xor
pushf
test
mov
pop
mov
shl
jp
cwtl
and
loopne
add
and
pop
sbb
test
adcb
jp
cs
push
add
push
inc
mov
clc
jae
in
movsl
icebp
xchg
xor
push
cld
ljmp
fsubrp
inc
sbb
mov
popa
shll
xchg
data16
test
inc
cmp
or
adc
dec
and
xor
sbb
stos
xchg
mov
mov
mov
jbe
pop
add
push
or
adc
out
sti
pop
sbb
xor
inc
add
and
push
or
inc
dec
dec
in
jmp
daa
loopne
insb
inc
push
adc
mov
popa
sarl
mov
mov
cmp
jns
sbb
inc
sbb
cmp
jmp
sub
scas
test
lds
xchg
mov
leave
mov
mov
add
push
iret
pusha
testl
in
outsb
call
sbb
test
sbb
icebp
rolb
mov
xchg
jo
lds
outsb
sub
sbb
shrb
lods
and
test
into
fwait
xor
mov
mov
cmp
enter
stc
test
andb
scas
fnstenv
dec
jge
adc
test
loope
lret
push
loopne
movsb
push
xchg
push
jl
outsb
jns
mov
in
push
push
push
repnz
push
sub
lahf
bound
loop
call
jb
in
jge
nop
adc
test
popa
test
iret
stos
jbe
jo
jle
jnp
or
or
popa
icebp
push
notb
inc
adc
adc
fisubs
int
imul
sbb
xchg
adc
cmp
and
dec
loopne
sbb
addr16
in
xor
xor
ds
cmp
clc
jmp
push
sub
das
cli
int
pop
insb
xchg
pop
icebp
btsl
andl
sbb
xor
ljmp
jb
insb
lea
stc
rclb
test
shll
nop
std
add
push
xor
lret
stos
cmc
popa
sbb
ljmp
repz
outsl
xchg
addr16
mov
inc
cmp
add
and
movsb
inc
mov
mov
push
push
mov
dec
sti
fisubrs
loop
rcrb
negb
decl
cmc
jl
adc
or
pop
popa
sub
pop
push
fidivrl
sub
loopne
add
pop
mov
pop
fistpll
adc
xor
fbstp
sbb
mov
imul
loope
pop
mov
mov
mov
cltd
inc
movsb
fs
sbb
sub
add
xorl
daa
push
xchg
popl
sub
push
lods
dec
push
sub
out
xor
adc
fsubrs
xor
mov
cmpsl
adc
fadds
mov
and
xlat
fidivl
int3
fildll
movhps
xor
popf
stos
xchg
sbbb
push
sub
or
inc
fsubp
and
ror
test
mov
pop
aaa
movsl
jmp
mov
ret
jp
cmp
xor
xchg
pop
repz
or
int
mov
pop
sahf
sbb
out
shl
mov
ljmp
jns
or
out
push
sarb
or
shll
push
lods
jbe
jbe
sarl
jae
leave
pop
dec
dec
inc
arpl
in
loop
jnp
xchg
imul
aad
mov
std
pop
sbb
les
xor
jb
outsb
cld
xchg
pop
in
pop
or
cwtl
dec
inc
sbb
jbe
out
int
pop
dec
mov
push
shl
test
sti
rcrl
cmpsl
insb
inc
ljmp
call
mul
test
popf
fidivs
mov
jg
jno
dec
cmp
stc
push
lock
xchg
jns
dec
fwait
or
stos
sarb
movsl
mov
scas
adc
add
fcomps
push
test
push
mov
push
cmp
ja
xchg
mov
test
out
cmp
jne
fcmove
jb
jmp
push
test
and
sar
push
mov
fisttpll
movsl
inc
std
xchg
push
into
sbb
xor
sbb
aaa
push
fmul
pop
push
jne
pop
xor
mov
fwait
sub
test
mov
cltd
and
rcrb
xor
fisubs
insb
xchg
sub
and
hlt
mov
ja
stos
mov
hlt
test
es
mov
ljmp
mov
es
pusha
addb
cmpsl
dec
cmp
fwait
es
sub
or
stos
clc
inc
cmp
xchg
xchg
mov
inc
ds
cmpsl
shll
leave
shlb
mov
cmc
clc
movsl
mov
sub
fcmovnbe
add
cs
sbbb
push
inc
pop
sbb
mov
jb
cmpsb
pop
xor
pop
shlb
stc
inc
dec
scas
cmp
aaa
pop
mov
hlt
push
xor
daa
int3
fsubs
andb
pop
fldcw
fbstp
jnp
iret
sarb
pop
inc
lods
sbb
mov
addr16
mov
mov
addr16
lahf
imul
fs
push
cmp
stos
jecxz
mov
dec
int
cmpsl
dec
data16
cmpsl
aad
sub
notl
int3
mov
jge
into
pusha
clc
leave
int
mov
mov
mov
enter
cwtl
dec
xlat
push
or
sbb
push
pop
ljmp
sub
and
push
out
add
das
xchg
jmp
fwait
sub
and
aas
clc
cmpsl
icebp
xor
out
add
out
xchg
cmp
in
stos
jmp
cmp
xor
adc
cmpsl
pop
xchg
inc
fldt
jae
adc
inc
lds
cmp
andl
pop
test
xchg
jns
cli
clc
sahf
faddl
xchg
sub
popf
cmpsl
mov
icebp
movsl
cmp
jge
fnstcw
pop
or
mov
xlat
add
add
xchg
bound
jecxz
scas
dec
aad
dec
pop
cmp
push
dec
and
flds
mov
mov
mov
cmpsb
xor
fdivs
pop
into
inc
adc
dec
popa
sti
imul
dec
dec
loope
cltd
mov
aas
cmp
fwait
push
js
mov
or
sbb
jp
xchg
sbb
mov
add
pop
pop
icebp
mov
add
xor
adc
and
fcmovnu
iret
pop
inc
insl
jbe
mov
xchg
push
cmc
cmp
mov
lods
cmpsl
cmp
inc
mov
outsl
push
out
cwtl
ja
xor
cli
loop
int
dec
mov
mov
lods
ljmp
pushf
aas
mov
mov
dec
inc
insl
mov
fsubr
rol
std
jle
fsubl
shl
xchg
cmpsl
out
lcall
and
jge
and
dec
sub
in
das
addr16
cmp
into
pop
xorb
call
xchg
cmp
add
pop
mov
or
pop
and
leave
pop
pop
push
push
insl
pop
int
dec
jp
xor
push
fcomip
adc
push
sbb
iret
in
bound
mov
lahf
cli
and
push
pop
outsb
jl
sbb
orb
mov
jl
dec
jl
in
sbb
in
add
dec
out
or
pop
or
cmc
mov
ret
jbe
cmp
xchg
data16
push
cmpsl
orb
push
mov
sbb
pop
sbb
lea
jbe
cmp
dec
lds
sub
insb
sub
cmp
das
popf
xchg
push
and
push
aas
scas
pop
cmp
pop
cmp
dec
hlt
sbb
and
testl
cmc
es
jg
sub
mov
jns
push
mov
dec
pop
cmp
addr16
mov
sbb
lods
popl
movsl
icebp
cli
sub
add
lods
and
fcom
and
ret
push
aad
sub
in
call
cld
scas
mov
loope
lds
mov
daa
sbb
mov
fstpl
xchg
fisttps
shl
or
or
aas
gs
jae
std
pop
or
inc
and
inc
cmp
pop
rol
rclb
ret
in
rol
inc
or
es
out
ret
loope
xor
in
mov
ss
mov
cmp
popf
inc
fmul
mov
arpl
loopne
int
mov
lods
mov
add
add
xor
outsl
cmp
sbb
mov
ret
int3
add
inc
sbb
loopw
mov
daa
icebp
mov
outsb
lods
sbbb
icebp
nop
inc
mov
lcall
and
dec
out
stc
je
xor
movl
mov
cmp
or
out
cltd
jns
lods
test
mov
add
pushf
imul
adc
clc
cs
push
push
jl
push
cmpsb
inc
jg
push
pop
iret
jecxz
jne
cltd
cmpsb
in
sub
out
xchg
ss
loop
add
push
mov
cmp
repnz
adc
pop
pop
daa
lds
jb
clc
xor
in
mov
mov
cli
imul
lret
lock
xchg
or
jnp
bound
xchg
lods
mov
mov
mov
and
push
movsl
sub
lret
mov
lret
mov
or
popa
and
push
rol
sub
into
daa
xor
xchg
add
es
ja
test
xchg
mov
lods
pop
lods
xchg
jge
in
pop
pop
mov
xor
mov
xchg
call
jbe
sahf
push
xchg
or
jg
mov
mov
mov
fadds
inc
bound
push
mov
inc
sbb
mov
js
cltd
xor
or
pop
pop
xchg
cmp
sub
ss
xor
mov
pop
inc
in
int
push
aad
push
pop
mov
fisubrs
add
fs
inc
and
jecxz
scas
xchg
std
push
inc
xor
pop
loop
adc
mov
roll
push
shll
data16
inc
dec
cmp
aad
test
pushf
cmc
fwait
mov
mov
cmpsl
aaa
jecxz
fiaddl
lret
scas
mov
fdivl
add
sahf
push
push
sbb
aaa
in
subl
mov
xor
inc
data16
popf
push
jmp
dec
je
ss
and
sbbl
inc
mov
notb
cwtl
test
je
jnp
inc
xchg
ds
lcallw
inc
sub
mov
repnz
loopne
dec
loopne
mov
or
les
cmc
pop
xor
xchg
or
fcmovnu
pop
sbb
out
cmp
or
sub
xchg
das
jmp
test
or
mov
pop
aas
inc
cmp
test
inc
out
xor
es
add
fs
lods
pop
xchg
lds
dec
push
inc
mov
jmp
loop
testb
pusha
sar
jg
fdivl
push
or
outsl
xor
jg
mov
push
or
adc
pop
fs
movsb
or
xor
dec
inc
test
fiadds
bound
and
test
outsl
jnp
ds
cwtl
out
lds
pop
scas
out
xchg
mov
fldt
int3
pop
sub
xchg
decl
pop
cli
shlb
mov
in
movsl
ja
xchg
sub
sub
or
aam
xchg
push
mov
and
popa
clc
sbb
sbb
loopne
mov
cltd
shrl
daa
in
ret
icebp
mov
cmp
setp
sbb
aad
cmp
pushf
testb
insb
adcb
shll
aas
shrl
insb
mov
sub
lahf
arpl
sbb
cld
outsl
mov
dec
dec
add
xchg
insb
mov
pop
fbld
adc
stos
mov
fcoms
cmp
movsb
mov
adc
mov
loope
pop
mov
add
shrl
fsubr
jecxz
cmpsb
stc
pop
adc
repnz
test
ja
je
or
sbb
push
jle
xchg
pop
cli
aaa
pop
loope
inc
lods
fcom
nop
sbb
fnstcw
mov
pop
shll
pop
dec
mov
lea
fcoms
ficomps
dec
sar
loope
sbb
ljmp
insb
add
mov
fsts
bound
sbb
push
or
jecxz
filds
ljmp
push
push
fcmove
les
arpl
shrl
xlat
sahf
mov
push
add
repz
mov
dec
pop
or
jo
push
mov
mov
stos
pop
outsl
fnstsw
push
or
scas
xchg
jmp
repz
outsl
sub
mov
lcallw
pop
sub
gs
imul
mov
fnstenv
pop
mov
jno
pop
out
scas
ret
rolb
cmp
cmp
push
rorb
ret
jl
repz
into
inc
sti
or
push
pop
jno
jecxz
mov
loope
cmp
lock
push
dec
pop
push
cmc
jns
dec
out
xchg
out
int3
dec
or
stos
std
push
mov
das
mov
sub
mov
xor
shll
inc
xchg
sub
pop
ret
adc
into
bound
in
sbb
add
out
pusha
mov
push
mov
mov
dec
cmp
push
jo
push
dec
sub
loop
cmp
scas
add
xchg
das
or
or
out
mov
xor
jb
pop
sbb
clc
and
shll
lret
pop
mov
dec
and
ret
push
testb
adc
jb
add
jp
dec
pop
add
pop
sub
sub
pop
out
pop
mov
cmp
xchg
mov
popa
adc
or
insl
aam
ficoml
bnd
xor
adc
push
mov
and
fdivl
mov
mov
xchg
iret
xchg
outsb
cmp
stc
xchg
lret
xchg
dec
sub
outsb
push
cmpsl
fildll
imul
in
or
imul
add
jp
mov
xor
bound
dec
or
fsubl
push
inc
lret
dec
jo
imul
ljmp
cmp
mov
dec
xor
inc
negl
sub
sbb
icebp
lret
and
jl
mov
ret
push
mov
push
ss
in
test
arpl
mov
mov
pop
mov
leave
pushf
and
sbb
fsubs
pop
xor
imul
repnz
jp
xchg
pop
jg
mov
jp
jge
lret
pop
pop
divb
mov
hlt
mov
xchg
jge
mov
jl
fndisi(8087
adc
sub
cli
pop
orb
repz
jmp
mov
addr16
fcmovb
push
imul
out
mov
sbb
inc
adc
pusha
xchg
cmp
shrl
sbbl
inc
icebp
fdivr
clc
add
test
and
cmpsb
xchg
mov
and
xchg
dec
xchg
jae
add
sbb
mov
and
aaa
pop
movsl
in
int3
mov
mov
loopne
inc
pop
into
lea
push
daa
lds
pop
fcom
mov
mov
lret
sahf
push
jae
and
mov
sti
inc
inc
iret
movsb
push
jbe
int3
fsubrl
pushw
sbb
imul
push
lea
loope
arpl
add
xchg
inc
pop
sub
sub
aaa
aad
add
mov
pushf
stos
jo
adc
add
sbb
jg
push
cmp
inc
test
ret
movsb
inc
leave
mov
ljmp
jmp
test
ss
iret
popa
inc
das
outsb
addr16
int
sub
xor
mov
shr
scas
std
xchg
mov
sbb
sbb
cmp
je
jbe
insb
jle
pop
ja
sbb
neg
fnstcw
enter
sbb
jns
loop
ds
sbb
push
into
and
mov
insl
cld
jecxz
pop
inc
cwtl
out
movsl
push
ljmp
add
aas
xchg
or
in
fwait
xchg
pop
pop
outsb
jl
lahf
jge
jmp
jns
add
push
test
imulb
jp
xchg
lods
les
mov
bound
cmp
js
jns
sub
cld
xchg
sbb
stc
xor
jns
and
cmpsb
inc
jnp
jno
sahf
xor
cmpsl
mov
push
test
js
fldl
loope
inc
movsl
cmp
xchg
fs
and
jp
ljmp
xchg
mov
je
sbb
cwtl
in
sub
xchg
xor
lock
scas
std
mov
das
rcr
mov
xor
jnp
in
fcmovnb
push
gs
cmpsl
mov
cmp
or
pop
adc
pop
lcall
push
jp
das
and
pop
sahf
sub
test
add
jg
jge
sub
pop
cmc
loopne
mov
xchg
psllq
ja
repnz
cmc
mov
sub
gs
fldt
pop
xor
cmp
lcall
std
mov
jecxz
adc
xchg
xchg
jbe
subps
dec
mov
adc
sbb
scas
inc
jne
sti
sti
jno
stos
cmp
adc
cmp
jg
mov
sub
add
pop
cld
push
aaa
and
fisubl
xor
lret
arpl
bound
jge
cmp
xchg
cmp
hlt
pop
adc
xor
xchg
xchg
cmpsb
cmp
and
les
dec
popa
xor
xor
mov
das
adc
sarl
nop
sub
jmp
iret
iret
std
jbe
das
addr16
xchg
inc
ret
xchg
out
sub
lcall
and
sub
lcall
sarl
imul
pop
jecxz
ret
jb
shl
out
mov
and
xchg
pop
int3
mov
push
sbb
or
jbe
aaa
rol
stc
jmp
ret
inc
adc
or
cmp
add
cmovl
hlt
push
clc
lods
outsl
es
into
test
imul
jmp
jbe
jle
cmpsl
imul
sub
lds
mov
test
int3
add
mov
in
stos
mov
test
adc
es
insl
pop
cmp
jl
icebp
insl
adc
fiaddl
mov
xchg
repnz
stos
test
rorb
in
or
call
enter
and
push
call
je
ljmp
ljmp
mov
jg
fisubrs
pop
clc
mov
shll
xchg
repz
shrb
mov
cwtl
hlt
xchg
cmp
mov
scas
loop
pop
pop
imul
test
xchg
push
mov
cs
mov
mov
push
outsl
sbb
xchg
je
lea
dec
aad
mov
out
dec
xchg
jge
jbe
xor
pop
aaa
inc
push
sbb
andl
push
pushf
pop
cmp
or
out
mov
inc
mov
imul
or
in
push
filds
sbb
mov
movsb
mov
rorl
daa
inc
xor
pop
mov
inc
leave
je
repz
sbb
lods
add
sub
arpl
fwait
cmpsl
push
shrb
idivl
fsubrs
movsb
dec
cltd
pusha
xor
in
iret
inc
fucomp
jno
sbbl
mov
pop
mov
popa
in
dec
mov
xlat
jnp
mov
ret
shl
jnp
mov
cs
aad
cmp
call
or
mov
out
std
shll
enter
cmpsb
mov
lahf
shl
shlb
inc
sub
and
into
icebp
and
inc
into
orb
out
int
mov
ret
mov
inc
popf
pushf
es
mov
rcll
ja
xor
rclb
sbb
inc
lea
pop
and
add
lret
stos
jg
insb
mov
cmp
shl
sbb
lock
jge
fwait
repnz
ficoms
and
dec
fstps
or
mov
jp
mov
cs
pop
cwtl
mov
test
cmpsb
xchg
notl
shll
data16
jnp
ja
in
push
lcall
adc
mov
andb
out
jb
mov
adc
lret
jmp
sarb
out
movb
push
fwait
xchg
test
movsb
mov
arpl
loopne
pop
adc
mov
pop
mov
movsl
cmp
out
mulb
mov
fldenv
dec
icebp
call
lcall
cltd
jle
mov
mov
imul
das
inc
cmp
or
int3
mov
add
in
mov
jo
scas
repnz
insb
jg
sahf
xor
xor
pop
pop
bnd
dec
sbb
xlat
loopne
aaa
popf
clc
mov
leave
jecxz
pop
ds
dec
call
cmp
pop
imul
hlt
pop
pop
pop
in
push
add
inc
mov
popa
sahf
out
iret
fimuls
mov
xchg
lods
push
test
cmp
ljmp
sahf
bound
mov
ja
mov
dec
mov
xchg
aam
dec
lock
sbb
mov
add
stos
jp
adc
adc
push
nop
jnp
lods
and
int
repz
xchg
sub
dec
adc
lds
inc
mov
sub
push
je
dec
lds
push
jmp
adc
jo
cld
xchg
lods
inc
lds
push
push
cmp
lret
movsb
add
es
clc
xchg
ss
aas
mov
pop
out
jns
dec
movsl
dec
push
push
push
dec
shr
loopne
mov
push
xor
xchg
mov
xchg
cmp
cmp
mov
das
out
xchg
mov
sbb
inc
subl
xchg
or
cs
xchg
repnz
pop
push
mov
lock
inc
add
cmp
push
in
xchg
movsl
xor
in
dec
loop
jp
mov
inc
imul
pop
pop
mov
jl
rclb
sbb
or
fisttpll
cmc
cmpsl
jp
cmc
arpl
fildl
lods
xor
hlt
pop
push
xor
add
addr16
and
or
dec
adc
pop
aaa
adc
rorl
shlb
ficompl
imul
mov
insl
inc
xchg
xchg
gs
cmp
cmc
insl
pop
in
xchg
adc
add
or
dec
cmc
test
lret
je
andl
aas
ret
mov
bound
cli
sub
sub
mov
pop
jo
out
inc
rcll
inc
nop
das
dec
add
fstps
nop
cli
cmp
mov
or
outsl
cmp
xchg
sub
and
add
dec
pop
cmp
jnp
loopne
inc
dec
dec
js
movl
add
dec
mov
inc
arpl
lea
jg
addr16
je
lahf
jl
dec
xor
xchg
sub
jo
jns
ss
subb
fstps
inc
out
cmc
pop
ss
sbb
ret
jae
mov
out
push
rcrb
adc
addr16
add
stc
out
jmp
inc
leave
xchg
fwait
xchg
lods
nop
or
ret
or
add
pop
aaa
jecxz
test
mov
icebp
sbb
or
enter
mov
pushf
fs
inc
sub
xlat
imulb
rcr
xchg
call
xchg
push
push
neg
addr16
cwtl
cld
push
scas
add
testl
add
notl
fdivrl
or
out
fnsave
aaa
dec
loopne
jg
mov
cmp
push
pop
sub
jmp
scas
jne
imul
push
cmp
out
adc
lret
jb
jge
in
sbb
mov
out
xchg
sahf
push
sbb
mov
fiadds
sar
and
mov
mov
int3
in
les
test
push
insl
dec
mov
movsl
mov
cltd
lods
inc
shll
out
adc
and
add
mov
nop
jne
popa
fimull
add
mov
sub
ret
mov
inc
test
or
loope
or
std
inc
xor
xchg
out
test
xor
mov
icebp
das
stc
or
fsub
je
fwait
xor
lods
or
sub
lds
shr
mov
dec
pop
jb
scas
inc
mov
data16
pop
int
mov
out
add
fsubrl
stc
out
xchg
inc
mov
push
push
ds
add
dec
mov
lods
sbb
fisttpll
daa
into
movsl
pop
aad
xchg
dec
dec
pushf
repnz
ljmp
add
loop
cmp
ss
dec
mov
mov
bound
sbb
movsb
pushl
mov
iret
es
fldl2t
mov
cli
xchg
cmpsl
cmp
jecxz
lret
jno
test
es
notl
push
sbb
mov
push
push
bound
xchg
jb
sti
push
ss
idivb
push
jge
hlt
imul
add
xchg
sub
and
adc
inc
push
sub
test
xchg
sub
testl
cmc
sbb
movsb
ret
pop
je
cmp
clc
jecxz
jmp
ret
and
shrb
fsubs
and
cmp
and
jnp
mov
push
jae
xor
sub
jg
addr16
fs
rcrb
repz
insb
xor
mov
push
imul
pop
sub
in
cmp
xlat
or
xchg
aas
fmuls
mov
and
push
ja
xchg
test
inc
mov
jle
dec
into
pop
mov
xor
mov
aam
in
jle
add
scas
or
push
pop
pop
pusha
adcb
mov
jle
push
addl
cmp
and
mov
jno
in
stos
xchg
mov
popa
pop
inc
and
into
leave
icebp
adc
aas
ljmp
xchg
imul
cli
push
inc
movsb
sub
xor
ficomps
push
inc
mov
shl
mov
insb
sub
int3
pop
dec
insl
add
lock
dec
lea
inc
sub
xchg
xor
pop
xor
std
repnz
xor
sti
dec
jne
pushf
mov
addr16
mov
adc
adc
lret
jbe
push
bound
push
add
dec
sbb
lock
popa
loop
jp
fbstp
adc
pushf
shlb
lcall
pop
scas
xor
dec
cmp
or
sub
cwtl
sub
lds
inc
test
jns
xlat
outsb
loope
stos
mov
push
insl
jge
aas
sbb
out
scas
jb
xorl
mul
out
xchg
lahf
xor
push
mov
aam
jb
shr
stc
mov
mov
xchg
inc
loopne
stos
xlat
outsb
out
mov
fidivrs
add
lea
in
cld
mov
fs
addr16
xchg
in
testl
xor
xor
cmpsl
fldt
ds
cmp
xchg
xchg
sbbb
imul
xor
xor
rcll
je
sahf
cmc
cmp
insb
push
adc
push
movsl
xchg
icebp
fdiv
mov
xor
pop
push
cltd
loope
icebp
scas
lock
cltd
mov
xchg
and
pop
pop
add
insl
jecxz
jbe
sub
insl
adc
dec
jle
jle
fwait
add
sbb
gs
cmpb
pop
and
sub
in
mov
xchg
mov
inc
stos
xchg
add
push
fadds
or
lock
scas
scas
pop
add
mov
push
xor
dec
in
scas
and
cmp
adc
loop
xchg
idiv
mov
lret
leave
inc
imul
push
out
lret
clc
cmp
sub
jg
sbb
mov
sub
mov
scas
shlw
mov
mov
xor
inc
icebp
sub
pop
cmp
test
out
out
pop
dec
xor
nop
xchg
sbb
iret
jmp
repz
push
fidivrs
int3
push
pusha
fwait
gs
or
push
dec
sbb
movsb
repz
in
push
inc
pusha
nop
adc
xor
jmp
inc
repz
cmp
jmp
stos
push
sub
ficompl
stc
rcrb
je
popf
or
xchg
mulb
xor
bound
mov
das
jmp
or
mov
not
cmp
xor
xchg
icebp
add
mov
std
aam
das
cmp
repnz
cmp
cld
les
mov
pop
cld
shrl
add
test
ljmp
jno
push
jne
mov
enter
call
cs
mov
mov
fists
je
jnp
xor
and
sbb
mov
xchg
and
xchg
inc
fisubs
sbbb
lock
and
mov
or
add
fwait
xor
mov
fildl
test
sub
xchg
jno
ficomps
or
inc
pop
mulb
jns
addr16
adc
sub
out
je
sub
push
add
bound
mov
dec
iret
loope
pop
sbb
scas
xor
sbbl
stc
push
jno
push
adc
es
xor
pop
sub
pop
fisubrl
push
call
push
push
inc
sbb
outsl
jle
pop
sbb
popa
subl
mov
cld
leave
pop
cmpsb
lea
sub
pop
mov
pop
cmp
push
stos
push
xor
push
jbe
test
sahf
std
mov
popf
mov
mov
cwtl
mov
xchg
dec
mov
cmp
sub
push
insl
sub
and
aam
pop
mov
cmc
inc
gs
les
cmp
aas
scas
mov
dec
cmp
sbb
ja
add
out
dec
stos
cmp
mov
jle
pop
adc
adc
adc
fisubs
inc
or
and
das
inc
rcrl
dec
divb
sub
and
orl
jl
adc
jnp
xchg
pop
xor
or
or
dec
repnz
pop
fwait
mov
in
push
icebp
or
ficomps
daa
push
dec
mov
arpl
xor
test
outsl
mov
icebp
mov
enter
movsb
pop
loop
sbb
lock
sbb
xchg
dec
inc
lock
das
push
ljmp
mov
cmp
push
sbb
aam
sbb
repz
mov
sub
fs
data16
outsb
aaa
xor
pop
jmp
mov
inc
iret
hlt
adc
sbb
cmp
mulb
out
push
mov
scas
fldl
iret
vpunpcklwd
xchg
mov
sub
mov
mov
adc
insl
cld
sbb
mov
pushf
pop
jmp
lods
lock
and
dec
sub
jl
stos
ret
gs
inc
fmulp
xchg
push
mov
in
push
les
mov
aas
push
dec
in
dec
subl
insb
jl
cs
pop
mov
popf
daa
mov
andb
in
mov
fxch
fistps
ret
push
mov
dec
in
inc
clc
stos
mov
sub
out
jbe
ja
dec
pop
mov
dec
data16
and
pop
rorl
test
idivb
mov
out
inc
js
stos
lahf
or
dec
add
or
cs
out
loopne
lods
adc
pop
xor
mov
add
jecxz
dec
scas
pop
fadds
frndint
std
mov
das
or
xor
and
jo
bound
adc
es
out
sbbb
imul
xchg
or
leave
ljmp
fmull
arpl
xlat
add
addr16
jge
pusha
scas
in
repz
dec
jo
push
adc
pop
lret
mov
mov
aas
jb
inc
es
testb
rcr
jp
dec
in
lss
cmc
add
out
adc
jae
lret
push
ljmp
jno
in
call
cmc
add
dec
xchg
mov
xchg
js
sub
inc
shlb
aam
into
setge
jmp
mov
xchg
insb
into
jno
mov
clc
inc
inc
mov
dec
pop
xchg
mov
mov
adc
lret
mov
loop
ss
in
mov
fiaddl
mov
push
jo
mov
push
sbb
add
and
mov
cmp
lea
sub
pusha
jg
jmp
xor
ficompl
inc
xor
xor
cmp
mov
loopne
cwtl
lahf
jg
ret
pop
ja
cmp
xor
or
xor
or
inc
outsl
jno
loope
mov
or
jnp
es
movsl
sub
dec
test
sub
outsl
pop
repz
js
and
add
aas
stos
sbbl
mov
movsb
inc
nop
pop
popa
shrb
dec
lea
lock
rolb
mov
fsubp
pop
sar
dec
repnz
add
nop
daa
shll
inc
loop
les
int3
outsb
jne
xor
jg
stos
dec
out
ret
inc
lret
xchg
jmp
pop
or
arpl
sbb
jne
je
jecxz
xchg
andl
jecxz
xchg
lock
ficoms
xorb
mov
cmpsb
test
fdiv
mov
sub
mov
sub
in
xlat
imul
es
pop
lret
test
syscall
push
fildl
mov
pop
mov
push
ljmp
inc
movsl
int3
cld
xchg
loope
or
loopne
test
call
sahf
mov
jecxz
cmc
nop
ds
out
jl
push
shrb
popf
cli
sub
cltd
xor
sbb
mov
ss
pusha
jge
or
test
push
in
xor
sub
dec
cmpsb
sbb
scas
adc
jmp
popa
push
shl
adc
mov
mov
mov
push
shl
adc
shrl
or
or
xchg
jle
xorl
adc
fdivl
rol
stos
stc
xchg
in
push
and
pushf
pusha
leave
pop
or
mov
pop
pushf
jecxz
push
repnz
sub
mov
pop
je
mov
pop
jns
xchg
out
data16
mov
sti
mov
mov
in
mov
cwtl
add
ret
sbb
pop
hlt
adc
pop
out
mov
insl
mov
fs
popa
mov
call
ja
cmp
xor
mulb
lds
pusha
add
inc
cli
sbb
aad
pop
push
sub
loop
scas
sar
fisttps
jo
scas
mov
sub
pop
repnz
sbb
push
shlb
add
ja
adc
sub
xchg
testb
shll
out
push
or
pop
insb
movsb
lea
or
or
loope
inc
dec
jbe
mov
jg
jae
xorb
mov
xor
sbb
or
and
pop
stos
es
daa
mov
or
mov
sbb
notb
cmp
add
pop
xchg
cmpsl
in
jg
mov
and
fcmovu
in
adc
iret
bound
loopne
filds
mov
adc
adc
push
sbb
sbb
je
cmp
imul
insb
push
nop
mov
ret
jnp
sub
loop
testb
les
lds
jp
push
arpl
ds
adc
mov
xchg
and
mov
xchg
lahf
sbb
stos
adc
movaps
fistps
sub
dec
ficomps
push
in
out
sahf
fdivrs
test
jg
int3
insl
pop
inc
fbstp
mov
dec
push
inc
fdivrl
pop
push
add
clc
std
xchg
and
sbb
lret
jne
imul
sbb
xlat
scas
ss
mov
jle
ljmp
lea
mov
in
into
fnstsw
into
push
into
gs
gs
sbb
aas
sub
sub
sahf
add
addr16
mov
push
lahf
ss
adc
push
sub
cmp
dec
sahf
xor
aam
mov
imul
cmc
mov
pop
xchg
mov
mov
or
sub
int3
btr
cmpl
mov
push
int3
dec
cmp
fwait
lods
mov
sub
into
jp
cmp
mov
adc
mov
lret
mov
mov
dec
or
sbb
test
insb
jp
mov
jb
pop
insb
in
inc
ljmp
repnz
jno
sub
xchg
test
pusha
cld
adc
xor
jb
scas
pop
sahf
sbbl
stos
add
and
lock
jb
jb
adc
jne
push
call
stc
stos
repnz
push
xchg
sub
mov
sbb
lret
adc
mov
test
ret
xor
clc
push
test
js
mov
cmp
xchg
sub
push
lea
dec
mov
fsubrs
aad
out
pop
pop
xor
daa
dec
insw
xchg
ret
clc
idiv
xchg
sub
and
stos
out
add
mov
clc
xchg
imul
btcl
int
and
mov
sbb
push
lcall
repz
push
popf
fcomps
sbb
jnp
jns
jne
outsl
shlb
clc
xchg
test
arpl
dec
mov
lcall
imul
jno
loop
xchg
xchg
mov
sarl
or
mov
shrb
popa
xchg
dec
pop
adc
mov
dec
jmp
pop
jg
push
daa
incb
push
je
into
mov
cwtl
pop
cmp
sub
mov
std
xchg
scas
or
and
or
lahf
stos
in
jae
and
xchg
adc
es
insl
inc
arpl
and
lcall
and
scas
inc
nop
pop
es
jno
insb
inc
fbld
and
lods
xchg
les
loope
orb
lods
inc
jo
es
outsb
inc
cmp
or
lods
inc
xchg
pop
lds
leave
insl
inc
fsubs
scas
inc
mov
es
insl
inc
idivl
and
andb
mov
insb
inc
adc
ficoms
or
pop
xor
sti
fwait
andb
cmp
or
jge
xor
mov
inc
dec
in
jns
dec
sbbl
push
jno
push
mov
je
jp
inc
into
fsubr
or
cmp
mov
lods
jnp
sub
fdivs
pop
fwait
mov
lahf
cli
adc
xor
nop
gs
mov
movsl
or
fs
loopne
test
push
push
ljmp
repnz
sbb
clc
mov
push
push
adcb
mov
dec
push
mov
pop
scas
jp
insb
and
int3
pop
popa
and
stc
into
xchg
sub
xchg
cmp
xlat
pop
jbe
xchg
rolb
pop
cmp
shlb
sahf
ret
mov
leave
push
sub
dec
dec
pop
subb
aad
xchg
lods
ret
iret
push
fwait
xor
fdivrl
ret
bound
or
adc
pushf
push
out
cli
add
nop
das
rcll
add
and
subl
icebp
mov
jne
out
mov
xchg
imul
pop
icebp
xor
hlt
jecxz
sub
dec
mov
cli
ret
hlt
es
adc
jg
je
mov
jbe
ljmp
push
or
arpl
test
dec
jbe
mov
push
sarl
shrl
dec
mov
or
cmc
pop
daa
outsb
dec
xor
pop
mov
or
fucomp
test
mov
jne
jecxz
xchg
scas
call
pop
outsl
repz
loop
dec
fwait
cmpb
leave
xchg
adc
stos
jne
pop
or
mov
jge
ss
ficompl
jno
mov
lods
sbb
jbe
xchg
loope
into
fdivrl
aad
push
fwait
popf
mov
repz
fdivr
scas
dec
stos
stc
loopne
cmp
das
inc
push
fnsave
gs
test
adc
add
push
push
test
inc
inc
mov
sbb
stos
xchg
push
cmp
mov
xor
xlat
jnp
push
in
jbe
and
mov
aaa
out
sti
mov
movups
arpl
callw
incb
sub
test
test
push
mov
loopne
mov
cld
cltd
fisubrl
mov
sub
mov
andl
call
add
jge
dec
in
sahf
and
ficoml
push
jnp
outsl
mov
cmpsb
sbb
mov
shll
inc
and
ja
jno
cmp
sarb
repnz
fsubs
push
pop
scas
fsubrl
insl
call
add
cld
aam
lods
xchg
inc
shll
sbb
movsb
das
pop
clc
adcb
xor
add
and
in
jl
sub
lcall
aas
mov
jno
or
loop
mov
les
inc
mov
and
pop
cld
int3
setbe
mov
sub
push
xor
jecxz
std
sbbb
and
adcb
inc
arpl
pop
jb
cmp
pop
jbe
in
jne
mov
xchg
pop
and
iret
lcall
push
ss
pop
mov
aaa
leave
pusha
mov
inc
xchg
dec
shrl
inc
enter
lods
and
shr
jo
xorb
jnp
xor
jle
test
cmovbe
ret
ds
xor
dec
push
and
pop
or
shrb
sub
and
push
adc
fdivrl
sub
push
and
jmp
mov
sbb
jnp
push
jmp
inc
sub
nop
and
jg
xor
cltd
pop
inc
fnsave
or
fistpl
flds
mov
pop
adc
push
mov
fimull
xchg
ja
enter
and
xchg
or
cmp
pusha
outsb
or
pop
mov
mov
hlt
xchg
pop
mov
mov
mov
dec
inc
fldenv
std
fnstenv
inc
cmp
mov
out
sub
xor
inc
push
rcll
mov
in
and
cmp
and
nop
enter
adc
xor
enter
adc
sub
rcll
mov
test
lea
cmp
out
cld
repnz
ljmp
push
inc
mov
arpl
sbb
jns
lock
sbb
inc
cld
lret
lea
jg
adc
adcb
imul
inc
out
mov
fldl2t
inc
movsl
ds
iret
addl
out
arpl
xchg
outsl
lods
mov
iret
jno
jne
xor
and
inc
pop
in
push
jp
add
insl
add
cmp
mov
push
pop
repnz
mov
test
xor
movl
movsl
scas
inc
xlat
repz
and
inc
mov
es
xor
lret
mov
mov
sub
xor
addr16
pusha
testl
jne
lret
movsl
aad
testb
mov
sub
xor
popf
fcomps
sbb
sub
hlt
xor
cmp
pop
cmc
cmp
mov
xor
pop
xlat
push
add
outsb
movb
sbb
and
mov
arpl
and
and
js
push
xchg
xchg
pop
cmpsb
dec
fldt
cmpl
loope
lret
push
pop
outsb
pop
push
dec
xcrypt-cfb
cmpsl
mov
and
xor
inc
in
add
out
inc
mov
dec
xchg
xor
testl
cli
les
mov
mov
jb
cmp
fists
jo
sub
push
addr16
pop
xchg
or
push
inc
mov
imull
sub
mov
mov
fcmovnu
ja
lret
pushf
hlt
push
in
lds
pop
sbb
lret
pop
popa
xrelease
int
mov
fisubl
mov
inc
cmp
jbe
bound
rclb
inc
lea
jg
xchg
test
inc
inc
jo
hlt
imul
popf
adc
out
adcl
mov
mov
in
testl
lods
adc
add
add
test
or
lea
negl
push
or
push
cmp
movsl
cmp
in
leave
push
push
sub
fwait
push
push
fnstenv
cmp
adc
in
xor
or
adc
insl
mov
cmp
cmpsb
mov
sub
scas
sahf
and
scas
and
decl
shr
and
das
shlb
outsb
pop
or
xchg
jmp
fidivrl
or
mov
outsb
mov
mov
es
cmp
enter
lds
push
test
inc
leave
ficompl
jecxz
cmp
cwtl
pop
loop
jno
popf
push
adc
cmpb
aas
push
push
xchg
ret
iret
mov
cmp
loop
out
sbbl
mov
jnp
pop
mov
les
fdivr
cmpsl
inc
cli
stc
addb
mov
outsb
sarb
enter
jo
loop
pop
ja
les
mov
cltd
dec
in
rorb
inc
dec
fdivrp
ret
sbb
push
subb
in
xor
fstps
dec
cmp
int3
pop
add
stos
call
push
push
repnz
and
popa
cmp
adc
push
pushf
cli
pop
movb
add
sbb
cltd
xchg
js
mov
mov
xor
cmp
testb
adc
loope
testb
popf
outsl
xor
jl
lea
mov
test
xchg
mov
xchg
mov
or
loop
mov
fcomip
sahf
out
lcall
inc
adc
roll
jns
push
testb
popa
add
shlb
int
fstpt
mov
dec
addr16
and
int3
testl
test
push
movsb
inc
shlb
inc
pop
pop
dec
push
adc
ja
sbb
test
in
xchg
aad
or
aas
mov
shlb
jae
sbb
movsl
ljmp
andb
cmp
mulb
sti
addr16
push
pop
lret
adc
dec
push
mov
mov
add
lods
idiv
sbb
sahf
xchg
fnstcw
inc
imul
xchg
push
shlb
jg
dec
out
js
sar
xchg
pop
fwait
or
and
push
nop
mov
stos
adc
mov
arpl
ret
aam
bound
lahf
jae
ficomps
in
add
les
add
movsb
enter
mov
pop
mov
orb
xchg
mov
and
jp
aam
ret
xor
icebp
mov
or
ss
xchg
ljmp
insl
sbb
and
nop
fdivs
pop
movsb
mov
adc
sbb
xor
aas
dec
imul
lret
sbb
adc
mov
push
mov
mov
ds
rol
mov
xchg
cmc
push
repz
sub
dec
jmp
push
jl
ljmp
addr16
adc
mov
aaa
xor
ret
dec
sub
sbb
ret
adc
sub
cli
xchg
lahf
dec
add
jl
movsl
cli
stos
lahf
shrb
inc
sbbb
xchg
in
jecxz
pop
out
loopne
cmp
xchg
sub
std
dec
aad
aaa
ss
mov
xchg
pusha
jg
pop
lods
orb
mov
mov
cmp
xchg
jge
out
scas
lahf
mov
scas
daa
sub
pop
iret
icebp
xchg
repnz
push
or
fisttps
jns
sub
xor
sub
mov
ds
dec
jecxz
aad
scas
or
out
push
in
add
inc
loope
out
mulb
or
jns
mov
or
icebp
mov
push
mov
test
gs
jbe
push
jmp
repz
xchg
pop
or
sahf
addb
mov
rclb
mov
or
push
mov
inc
sbb
addr16
fildll
test
cmp
out
les
sub
cmpsl
loopne
rolb
xor
push
dec
push
ss
in
fidivrs
inc
out
popf
push
int3
out
or
jecxz
add
mov
out
dec
add
mov
cmp
sub
adc
mov
test
dec
xchg
out
ret
sub
jo
cltd
jle
and
fwait
dec
fcomps
xor
jae
loopne
push
out
xor
sub
cli
jge
dec
mov
jg
inc
xlat
jmp
push
adcl
cmp
rcll
rcrb
pusha
or
cmpsw
dec
je
cli
cmp
test
les
dec
cli
xchg
and
jbe
sbb
dec
or
xchg
adcb
repnz
scas
fidivrs
cmp
jge
out
mov
lret
push
lods
aas
cmp
dec
push
insl
push
pop
xor
aad
mov
stos
mov
mov
icebp
in
test
or
outsb
dec
pushf
xchg
cli
cwtl
xchg
xorb
mov
dec
pushf
dec
lods
clc
cmc
lods
mull
jp
ss
ret
sbb
and
fdivl
mov
repnz
xor
jb
shrb
inc
es
mov
xor
cmpsl
jmp
pusha
mov
call
popa
push
aaa
dec
or
stos
mov
cmp
arpl
enter
rcrb
xor
decl
popa
sbb
mov
cwtl
call
test
lahf
insl
arpl
xchg
mov
cli
and
mov
jg
in
out
sbb
nop
daa
pop
xor
inc
sahf
pop
ja
loope
mov
cmpsl
es
sub
push
inc
cs
jg
je
test
lret
bound
stc
xchg
ss
in
test
push
sub
ret
xor
inc
mov
enter
sbb
inc
and
jbe
fnsave
pop
sub
xchg
xchg
aam
sub
lcall
fisubs
clc
and
outsb
or
cmpsb
fucomp
jg
jno
daa
mov
sbb
insb
dec
dec
mov
repnz
xor
subl
mov
push
call
imul
test
xor
or
xchg
jmp
jge
jecxz
xchg
add
scas
sbb
sub
std
mov
jb
cmp
lds
repz
pop
outsl
repnz
pop
sub
cmp
ja
stos
mov
fdivl
xchg
jno
lcall
jp
mov
xchg
sub
and
push
ljmp
ljmp
jmp
outsb
loopne
inc
fidivrl
testb
mov
gs
ret
loope
add
dec
mov
push
loop
dec
push
notb
aam
mov
jns
nop
cld
mov
ja
and
inc
rcl
jge
jg
jcxz
and
adc
sub
fstps
pop
hlt
in
pop
mov
inc
adc
ret
movsl
push
lret
cmp
pusha
idivl
call
cmp
inc
pushf
cmc
fwait
xor
add
cmpsb
js
test
lret
xchg
idivb
fs
and
scas
jmp
xor
rorl
sar
jge
stos
push
push
and
daa
int
xchg
pop
adc
mov
ds
mov
mov
dec
xor
cmp
xchg
movsb
pop
addb
push
jg
lret
cmpsb
mov
sub
xchg
mov
pop
stos
stos
sbb
mov
cld
fwait
and
xor
movsl
pop
scas
pop
jle
mov
sti
fstl
iret
mov
insl
imul
imul
mov
outsb
fwait
hlt
dec
mov
aaa
pop
sbb
sub
aad
hlt
sbb
xlat
xchg
sub
ret
jnp
mov
or
cmp
sub
dec
dec
clc
cmpb
cmp
loop
popf
sti
cli
xchg
add
mov
test
jecxz
pop
and
divl
inc
pop
lds
xchg
sub
out
cmpb
jno
ret
in
and
lret
pop
add
pop
xchg
scas
dec
adcl
xor
pusha
data16
adc
fiadds
dec
xor
push
pop
lahf
cmpxchg
lret
pop
xchg
hlt
mov
jg
jne
lock
sub
xchg
mov
mov
lret
shll
fwait
test
and
add
mov
adc
mov
cmpsb
push
inc
sub
js
and
xor
or
enter
lods
test
out
std
or
push
adc
imul
mov
xchg
jnp
cmp
inc
loopne
addr16
jno
out
and
and
in
in
push
lret
mov
arpl
shl
sti
pop
inc
mov
stos
cmp
jno
adc
mov
xor
jnp
loope
cmpsb
neg
loope
mov
adc
mov
adc
adc
push
dec
push
inc
and
cmpsl
sbb
push
je
iret
jb
cmp
mov
es
out
lds
lds
inc
lods
lea
xor
adc
add
sbb
sahf
jb
orb
pushf
or
pop
mov
ret
mov
jnp
sub
pop
test
adc
mov
popa
cmpsb
dec
fsubrs
jnp
out
mov
inc
gs
push
mov
aam
ss
mov
shll
iret
leave
pop
jo
shrl
jne
xor
icebp
adc
ds
enter
pop
insb
mov
lea
aas
pop
int3
mov
mov
loopne
int3
cmpsl
jp
cmpsb
jae
loope
mov
fisubl
or
loope
ja
iret
inc
imulb
push
jbe
lahf
mov
xchg
sbb
repz
push
or
xor
and
lret
jne
cwtl
sbb
dec
lods
adc
add
xchg
add
addr16
jp
test
jmp
lds
ja
fidivl
mov
sbb
jb
popa
sub
add
aaa
push
idiv
sbb
rcrl
repz
insl
dec
xorl
mov
lods
inc
push
xor
outsl
add
push
fmul
xchg
dec
loopne
scas
lods
mov
pop
xor
cmp
std
xchg
add
jle
push
xor
clc
scas
stos
xchg
je
inc
ljmp
jno
dec
or
dec
arpl
sbb
outsb
ljmp
sub
xor
add
testl
rol
int3
stos
nop
or
dec
fsubr
es
mov
sub
jp
mov
stos
ds
pop
lret
xlat
subb
sbb
lods
mov
ret
xor
add
or
stos
jne
lods
cmpl
xor
lods
lea
or
dec
cmpb
fs
testl
dec
ret
orb
xchg
sub
into
scas
clc
inc
aad
andb
shlb
loope
sub
mov
xchg
sbb
hlt
mov
mov
insl
mov
scas
cmp
add
addr16
jmp
xor
add
add
aad
dec
adc
sbb
fisttpll
push
lahf
and
movsb
cmpsl
out
mov
call
lods
adc
ja
ss
sbb
mov
outsb
add
fbld
adc
fmull
mov
std
cmpsb
cld
pop
loopne
lret
dec
notb
aas
in
adc
cwtl
inc
or
mov
xchg
jne
in
mov
int3
mov
std
mov
mov
push
bt
pop
inc
stos
fcompl
jg
popf
ss
jp
push
xor
push
jnp
lds
in
aad
jbe
and
je
adc
cs
xchg
js
mov
push
int3
lret
lcall
bound
cmp
call
inc
push
inc
mov
lock
test
sub
aas
add
and
mov
lcall
xchg
test
in
xor
cmp
push
adc
mov
out
jmp
pop
nop
inc
dec
ret
inc
arpl
ds
popf
mov
inc
adc
mov
push
sub
lret
mov
or
adc
push
xor
jae
xor
mov
cmp
mov
or
push
icebp
sbb
sbb
in
insl
push
test
mov
sahf
bound
sub
hlt
ja
xchg
stos
mov
jnp
lods
loope
mov
add
dec
add
sbb
pusha
mov
add
push
lods
add
cli
dec
mov
orb
repnz
in
mov
pop
js
mulb
rcr
out
push
repnz
lods
cmp
cmp
mov
mov
push
dec
or
mov
pop
pop
cmp
sbb
sub
clc
mov
jb
pop
sub
push
cmpsb
jb
adc
adc
mov
push
jne
test
fbld
jl
mov
fcomi
enter
push
cwtl
cmp
mov
stos
nop
pop
jecxz
xlat
ror
jno
rcll
pop
mov
enter
pop
repz
jp
pop
std
arpl
jle,pn
lods
push
cmp
test
adc
jbe
jbe
xchg
xchg
movsl
cld
inc
mov
mov
and
outsb
and
movsl
push
mov
cs
les
adc
jge
nop
or
or
dec
mov
clc
pop
xor
dec
pop
push
test
jecxz
fdivl
mov
adc
sahf
mov
lock
into
xorl
popa
xorb
cltd
pop
and
or
or
add
paddsw
inc
sbb
inc
pushf
dec
cmp
cmp
sbb
inc
pusha
gs
aas
fidivs
into
mov
and
fiaddl
dec
rcrl
pop
fxch
addl
ss
push
mov
jo
sbb
xor
inc
hlt
data16
push
sub
adc
inc
xor
pop
loopne
stos
or
inc
push
xchg
dec
bound
rol
in
cmc
lock
cmpsl
cmp
pushf
icebp
inc
rclb
sbb
inc
xor
imul
sub
lret
cli
xchg
jg
pusha
clc
mov
inc
xlat
and
mov
gs
cmpsb
lock
inc
xlat
inc
or
inc
test
outsl
fisubl
add
test
jge
push
inc
sbb
call
shll
insl
ret
xchg
mov
or
adc
test
arpl
jnp
or
in
push
pop
mov
cmp
xor
adc
dec
pop
dec
pop
addr16
in
mov
clc
ja
pop
dec
cmp
mov
adc
movsl
cmp
mov
ljmp
dec
mov
loope
push
pop
test
scas
inc
leave
xorb
xor
push
mov
outsb
stc
int3
shrl
es
jmp
out
xchg
xchg
enter
ret
mov
cmpl
or
loop
push
cs
sub
icebp
mov
xor
out
repz
xor
icebp
pop
nop
movsb
fists
clc
push
imul
lret
loop
xlat
icebp
adc
jle
loopne
xchg
mov
addb
or
jb
cmp
test
mov
jecxz
cmpsl
popa
clc
fcoms
out
movsb
mov
xor
pop
mov
mov
cltd
and
lock
inc
adc
xor
xor
adc
pop
jecxz
repnz
enter
out
push
insb
cs
testl
bound
scas
int
pop
out
pop
out
and
test
ja
ds
push
jecxz
jecxz
push
sub
es
mov
pop
daa
add
mov
adc
or
insb
mov
add
sbb
ss
dec
mov
imul
icebp
enter
es
adc
mov
pop
and
divl
mov
clc
lock
ffreep
sub
fnstenv
cmp
lods
push
ljmp
xor
jp
sahf
stos
test
jp
fldcw
stos
scas
dec
jns
subb
dec
mov
add
cmp
rcrb
data16
mov
add
inc
push
dec
inc
and
jle
xor
pop
aad
sub
addr16
fldcw
or
repnz
cltd
mov
std
movsl
inc
int
es
jle
inc
data16
push
cmp
adc
sbbb
xchg
ljmp
outsb
fwait
pop
ret
in
adc
xor
sub
int3
in
rorl
repnz
pop
popl
test
lods
andb
jg
dec
inc
push
fsubrl
mov
mov
inc
nop
test
dec
dec
add
add
mov
fiadds
rcl
dec
ficoml
pusha
add
push
mov
out
test
inc
arpl
ja
xor
mov
xchg
or
pop
add
dec
add
mov
mov
pop
sub
xor
ss
out
shl
pop
adc
inc
pop
or
jne
cld
cmp
scas
sub
sbb
and
das
mov
push
cmp
pop
neg
ds
fistpll
xor
loop
jl
stc
adc
dec
mov
mov
into
aaa
mov
jo
mov
jg
loopne
jno
xor
add
sbb
mov
push
xor
push
js
ds
ss
cli
push
ret
push
out
inc
jno
mov
ret
inc
or
js
xchg
outsb
push
lcall
adc
es
sbb
mov
lods
and
pop
dec
add
popa
mov
mov
cs
fisttps
aam
jl
or
push
push
and
pop
andl
xchg
push
cmp
andb
or
push
outsl
inc
cmpsl
out
icebp
test
popf
pop
or
hlt
lea
xor
ffree
stc
fisubl
clc
sub
jmp
shrb
cmp
inc
into
adc
pop
mov
enter
adc
out
push
adc
sti
clc
push
pop
fld
inc
push
jg
shr
inc
adc
lea
ret
cmp
jecxz
mov
les
insl
in
xchg
xchg
mov
out
test
int3
mov
scas
jmp
in
mov
es
repz
stos
sbb
jmp
and
pop
imul
movsl
or
cmp
in
adc
xor
xor
push
call
sub
sbb
push
out
mov
pop
add
pop
jns
loopne
fwait
mov
cmp
jecxz
lods
sub
and
je
aas
lret
sbb
std
gs
sbb
sti
rcrb
dec
cmpl
jbe
mov
test
xchg
pushf
cmp
cltd
daa
xor
inc
data16
in
inc
scas
fldt
lods
call
hlt
mov
jnp
xchg
jo
xor
mov
fsubl
inc
mov
fbld
dec
push
or
in
movsb
ljmp
mov
or
mov
js
mov
mov
insl
xchg
dec
fsubr
mov
mov
pop
mov
dec
icebp
mov
nop
fcomps
and
and
jno
clc
mov
sahf
lods
cmp
jmp
data16
adc
fldcw
sbb
arpl
pop
nop
dec
push
sahf
xchg
inc
loopne
mov
xor
mov
push
rol
or
pop
sub
jmp
je
xchg
mov
int3
cmp
mov
outsl
and
repnz
push
popa
test
add
mov
cmovbe
mull
dec
rorl
sub
fwait
insl
cmp
xchg
cmp
or
clc
nop
addl
rcll
mov
or
aam
cmp
cmp
lea
mov
in
mov
mov
pop
mov
les
arpl
mov
fmuls
cmpsl
mov
fimuls
std
push
stc
sub
mov
pushfw
mov
dec
lahf
or
jb
iret
imul
and
in
mov
fidivrs
pop
xor
pusha
pop
shl
mov
add
or
and
repz
and
dec
out
inc
ret
outsb
in
inc
mov
sbb
sub
or
jbe
cli
xor
jb
lock
pushf
scas
sbb
out
pop
lahf
xchg
lea
mov
add
andl
or
cwtl
sub
shll
cli
or
rolb
mov
dec
jo
repz
pop
cmp
lret
lret
fcmovnbe
dec
into
push
jg
outsb
mov
loopne
pop
out
int
loope
mov
popf
dec
fucomip
mov
int
sub
in
dec
push
cmpsl
icebp
cmc
cmc
sub
or
inc
xchg
xor
xchg
dec
jecxz
enter
inc
adc
test
inc
in
pusha
loope
xor
sub
inc
lods
and
inc
out
mov
sub
add
sub
and
cmp
sbb
mov
je
inc
inc
sub
adc
int
pop
notb
sub
aaa
add
inc
xchg
loope
std
insb
xchg
or
add
xchg
mov
add
mov
cmp
lret
mov
xor
lods
xlat
outsb
fimuls
mov
fidivs
mov
lea
out
push
cmp
ret
cltd
gs
lock
push
movsl
or
daa
or
adc
in
ret
and
push
loop
and
jns
jbe
cmp
leave
mov
test
shl
xor
daa
cmp
cwtl
daa
or
fsubrl
mov
ret
jnp
enter
fsubs
jle
pop
in
aad
xchg
test
popa
lds
adcl
xchg
mov
mov
jp
adc
dec
aam
notl
push
mov
pop
lds
rcll
call
testb
fwait
into
imull
shlb
int3
xor
jnp
loop
test
dec
out
adc
loopne
xor
mov
ficompl
jge
das
mov
pop
int
lret
sti
pop
in
add
daa
adc
je
out
add
adc
push
mov
gs
xchg
push
fnstsw
mov
fs
out
pop
cli
inc
rcrl
xor
sbb
out
lea
leave
pusha
jp
inc
push
lock
es
insl
imul
pop
cmp
aas
adc
nop
shrl
push
add
sahf
xor
and
mov
test
addr16
xchg
xor
jmp
mov
lret
mov
fisubs
push
or
jl
mov
pop
mov
in
lock
mov
pop
adc
cs
out
mov
shll
stos
jp
sbb
or
adc
or
mov
aaa
leave
pusha
imul
mov
enter
lahf
jmp
mov
mov
jmp
inc
push
fdivs
stc
enter
sbb
adcb
or
jl
sub
inc
cmp
popa
dec
dec
shlb
les
insl
mov
mov
xorl
adc
icebp
xchg
lahf
in
dec
fcoms
xor
inc
stc
rol
aaa
fnstcw
sub
lods
mov
test
loop
mov
loopne
jne
add
cmp
ss
xchg
push
mov
xchg
sub
and
lds
mov
cmp
dec
jecxz
in
call
or
xchg
cmp
mov
push
pop
sbb
iret
cmpsl
movsb
fbstp
imul
xchg
sub
clc
jmp
das
jp
pop
scas
push
stos
dec
in
jno
int3
mov
dec
loop
pop
in
test
lods
or
scas
cld
jae
fisubs
pushf
xor
mov
mov
mov
outsb
fwait
xor
sarl
xchg
add
pop
xor
loop
test
ljmp
xor
pop
imul
jge
xchg
sub
rcl
fwait
pop
test
ret
in
cmpl
loopne
xchg
out
ret
roll
lcall
and
roll
and
push
bound
fldcw
pop
repnz
pusha
divl
push
pop
out
xchg
mov
xor
ljmp
imul
lock
ljmp
and
lahf
push
xchg
mov
scas
inc
lods
sarl
stos
adc
mov
inc
sahf
adc
gs
arpl
bound
mov
sub
or
cmp
fidivl
or
outsl
ds
scas
loope
sub
cmp
sub
aad
mov
aam
dec
adc
aaa
popf
or
sub
xchg
pop
mov
xchg
sub
xor
shlb
in
push
adc
xchg
push
mov
test
push
loopne
xchg
enter
fs
fnsave
dec
in
std
add
mov
dec
loope
je
add
pop
icebp
iret
es
push
out
push
sbb
mov
insb
shr
testl
testb
cmp
mov
fs
mov
fbld
mov
js
popa
lods
mov
mov
inc
fldcw
aad
out
add
outsl
andl
pop
fnstsw
sub
jae
fldenv
jns
mov
testb
jle
mov
jg
sbb
xlat
jle
repz
dec
mov
jg
in
subl
rclb
pop
cmc
jle
inc
fldcw
jno
repz
jns
cmc
stos
mov
cmp
mov
jns
shrl
jno
jge
dec
xchg
sub
pop
out
mov
jo
aam
test
movsl
push
pusha
testl
jl
mov
sbb
mov
xchg
sub
fwait
push
loopne
test
pop
cmc
lret
inc
fstl
mov
fld
addr16
xchg
pusha
pop
out
xchg
mov
mov
addr16
fstl
mov
lahf
mov
addr16
mov
mov
lods
pop
clc
jb
aad
xchg
add
scas
pusha
or
mov
jge
xlat
scas
push
sub
mov
xchg
sub
outsl
js
sahf
jg
movsl
lods
cmpl
mov
jg
mov
scas
jae
jecxz
jb
loope
jns
shrl
jae
mov
push
mov
stos
test
mov
popa
insl
xchg
jp
pop
stos
lea
mov
push
and
mov
popa
into
gs
jb
iret
mov
jg
popf
lods
pop
cli
xchg
mov
mov
jb
ja
push
loopne
test
int
xchg
cmp
enter
movsb
pusha
shlb
je
adc
mov
xchg
scas
ljmpw
rep
cmpl
or
jp
adc
jle
std
scas
data16
add
lods
xorb
jnp
adc
jge
xchg
mov
push
movsl
mov
pop
repz
gs
mov
outsl
jp
sahf
gs
fistl
orl
push
insl
ret
inc
shr
or
xor
push
test
mov
dec
jecxz
fidivs
or
pop
cmc
pop
sub
xchg
pop
jl
lret
sbb
lods
into
push
push
iret
scas
inc
add
icebp
mov
hlt
mov
and
stos
int
fdivr
shl
jnp
and
popa
push
and
sti
push
jae
repz
rclb
les
mov
cmc
sbb
test
xor
inc
jbe
sbb
into
std
xchg
cld
mov
sbb
insl
push
add
scas
cmp
movsb
pop
inc
fisttpl
mov
pop
out
add
cmp
lock
jp
mov
test
or
jg
gs
mov
mov
sub
fisttpll
call
sub
dec
clc
jl
lea
popf
mov
lret
cld
inc
fisubrl
in
push
jmp
cmpb
pop
jno
mov
aam
and
fisttpll
jp
insb
add
out
lret
adcb
xchg
lds
sub
and
int
sub
jbe
jmp
jg
in
or
xchg
sub
call
mov
adc
outsb
add
outsl
cmpl
mov
shl
jns
loopne
inc
push
and
xchg
sub
mov
mov
xchg
sub
fistl
lock
dec
jecxz
sub
pop
test
sub
adc
mov
out
arpl
cmp
pop
test
stos
fdivp
mov
push
jmp
sbb
cltd
push
jnp
lds
xchg
repz
lock
sbb
mov
dec
test
insb
pop
out
cltd
shrb
cmc
mov
push
in
pop
outsl
dec
add
mov
orl
push
in
cmp
or
or
dec
test
mov
lcall
aaa
lock
or
test
cld
fstl
mov
adcb
cmp
test
cmc
mov
lods
inc
fldl
data16
inc
fmuls
leave
pusha
je
jno
push
cltd
jecxz
lret
js
lods
pop
shrl
jns
xchg
lods
pushf
mov
loop
pusha
call
inc
mov
cwtl
loop
pushf
xor
sbbb
push
pop
repz
push
cmp
pop
mov
xchg
imulb
sub
out
xor
scas
jle
das
std
sub
cmpsb
sbb
notl
xchg
in
sub
insl
dec
outsl
jns
pop
dec
sub
mov
insl
dec
clc
sub
jbe
rorl
cmp
cmp
repz
rcll
aam
push
and
mov
fidivl
xor
adcb
add
pushf
cs
rcll
gs
movsl
fisubl
mov
jecxz
test
mov
mov
shlb
or
outsb
pop
ret
ljmp
add
rcrl
test
or
loope
add
mov
out
or
or
bound
adc
lcall
fxch
xchg
aas
shlb
loope
cltd
ret
lret
push
in
jmp
sbb
adc
mov
imul
jb
sub
mov
in
inc
fcomps
repnz
loop
xchg
xchg
adc
cli
xor
in
mov
in
bound
js
enter
xchg
push
jb
cli
dec
cmpl
insl
andl
mov
push
mov
sub
arpl
adc
cs
pop
push
out
push
dec
jg
sti
pop
dec
stc
sub
imul
pop
dec
push
add
add
aas
inc
pop
dec
mov
jno
pop
sarb
mov
push
dec
sub
push
jb
ds
inc
or
mov
test
dec
xchg
call
xor
popl
ret
lahf
cmp
es
jb
jmp
sub
adc
fnstsw
jmp
aad
das
out
gs
fidivl
jno
cmpsl
push
mov
inc
adc
jg
cmp
fildl
enter
daa
lods
jne
fcoms
pop
popf
repz
mov
loop
ja
sti
mov
insl
out
mov
mov
mov
rep
cmp
inc
sbb
imul
fwait
pop
pushf
dec
mov
cmp
mov
xlat
subl
and
sahf
ss
inc
orl
addl
jg
lahf
inc
mov
xor
pop
je
dec
or
mov
out
mov
jns
cmp
push
sbb
popa
movsb
rcll
xor
test
mov
pop
sbb
lahf
test
mov
shlb
cmp
pop
mov
or
adc
adc
sbbb
mov
pop
jno
push
loopne
out
xor
mov
jmp
mov
dec
pop
repz
pop
sbb
push
mov
xchg
add
addr16
cmpb
inc
mul
jnp
arpl
or
cmp
out
and
lcall
inc
jbe
push
daa
pusha
std
cmpsb
negb
add
sbb
jnp
call
and
mov
addr16
ds
jnp
aas
icebp
cmp
daa
in
lea
mov
sti
sbb
out
mov
jmp
sarl
sbb
inc
jl
pusha
mov
sbb
and
in
les
push
shrb
sub
aas
les
cmp
push
sub
push
aad
push
sub
scas
fs
hlt
stos
pop
int
xchg
sub
int3
sbb
xor
adc
leave
ds
in
mov
cmp
lcall
pop
jns
mov
jecxz
fwait
je
jecxz
in
in
and
ret
aad
sarl
repnz
loop
and
enter
jno
cmpsb
dec
rcrl
jo
pop
lret
hlt
mov
les
repnz
and
and
stos
cmp
sub
test
inc
sti
add
and
ret
add
call
cmpsb
cmp
cmc
js
pop
add
lea
daa
test
lret
jmp
rorb
shrb
lods
pop
push
push
adc
pop
mov
push
mov
ds
mov
push
jae
sub
fidivl
xchg
xchg
mov
sub
lahf
js
scas
pop
sbbl
mov
ret
call
mov
mov
prefetch
or
xor
jp
je
jecxz
dec
aam
cmpsb
sub
and
aas
out
push
inc
mov
les
lods
pop
ret
rcrl
mov
in
push
outsl
pop
fmull
inc
cmp
pop
pop
ret
push
add
popa
ljmp
sub
test
pop
pop
loope
inc
push
add
push
dec
std
and
leave
dec
aas
dec
fdivl
pusha
iret
xor
mov
push
push
in
enter
cmp
add
pushf
push
lea
sbb
pop
lahf
out
jl
pop
mov
jp
sarb
cmc
xor
scas
iret
sbb
ss
mov
push
push
xchg
cmp
xchg
aaa
mov
leave
inc
xor
bound
rclb
aas
xchg
mov
gs
add
in
aaa
rcrl
xor
fldl
xor
fs
dec
push
mov
hlt
mov
test
adc
aaa
add
cmp
lock
dec
sbb
push
ret
call
cmpsl
fistl
lods
insl
movsl
repz
pop
pop
rorb
pop
mov
movsl
xchg
dec
xchg
pop
jns
push
sub
pop
fs
js
xchg
sub
ss
mov
cs
popa
rorb
pop
lods
pop
push
dec
mov
jo
mov
cmp
nop
ja
jnp
mov
mov
jg
push
adc
push
in
es
sbb
push
mov
pop
sub
in
and
mov
dec
xchg
stc
dec
adc
bound
mov
cltd
adc
imulb
aad
push
out
sub
xchg
aam
adc
add
bswap
push
mov
or
jae
and
push
bound
loope
test
mov
jge
add
xor
shrb
mov
or
sbb
adc
inc
fimull
scas
jae
outsl
mov
xchg
out
cmpsl
xchg
ja
xchg
pushw
push
xor
jno
das
outsb
cmp
aas
cmpl
jge
cmc
fists
xchg
dec
shrl
arpl
gs
xchg
stos
mov
or
cmpsl
inc
pushf
push
mov
imul
inc
sub
aad
adcb
and
daa
in
aaa
jno
xor
or
xor
jno
shll
inc
rcll
mov
daa
in
and
push
or
cli
gs
cli
pop
jmp
or
cmp
add
cmpb
inc
adc
xlat
lods
inc
enter
imul
mov
lods
sbb
gs
sub
sub
mov
insb
mov
out
pop
int3
imul
or
dec
imul
push
jmp
xor
dec
inc
jno
pop
inc
es
push
pop
xchg
pop
sbb
cmp
mov
cs
pmulhw
test
add
mov
dec
jp
enter
and
orl
into
dec
xchg
mov
cmp
pusha
stc
mov
in
fwait
mov
dec
mov
ret
inc
gs
je
pusha
pushf
and
outsl
cltd
pop
cwtl
sbb
pop
stos
jnp
sbb
cltd
dec
rorb
sub
push
hlt
xor
imul
cmp
outsl
sub
xor
fnstenv
push
imul
push
jnp
jo
sahf
xor
cmpsb
sub
add
out
pushf
mov
adc
fldl
jo
into
ret
pop
jae
fwait
xchg
stos
cmp
sarb
or
in
jge
cmp
and
or
gs
sarl
and
or
adc
ss
jb
mov
cmp
cmpb
fsts
in
fs
fists
xchg
xchg
scas
jb
loope
js
mov
push
xchg
or
mov
dec
sbb
test
mov
inc
sti
fs
jmp
mov
or
or
out
jmp
mov
outsl
mov
leave
pop
insb
mov
adc
daa
sti
lock
mov
adc
mov
test
mov
jg
cld
insb
sti
xchg
mov
std
pop
mov
fwait
cld
push
pushf
lret
adc
jmp
or
xor
ljmp
fadds
push
out
mov
movsb
ljmp
mov
pop
sbb
mov
jecxz
mov
stos
repnz
popa
jle
ret
pop
inc
mov
rcr
dec
mov
dec
int3
test
mov
sti
mov
cmpsl
filds
testb
mov
call
mov
mov
stos
cltd
push
mov
add
fcompl
mov
das
hlt
inc
cltd
pop
les
inc
sub
arpl
cld
cmp
add
jle
and
test
dec
mov
mov
pop
aam
pop
int
movsb
push
lds
icebp
fmuls
pop
das
fisubl
sarb
fists
xor
cmp
mov
subl
xor
mov
out
icebp
imul
out
push
fadds
push
aam
xchg
xor
enter
cli
jmp
sbb
lret
or
icebp
lret
hlt
sub
movsb
fisubrl
repz
pop
mov
fistpll
adc
test
sub
mov
lret
inc
inc
imul
push
popa
mov
xor
mov
loopne
cmp
imul
repnz
repnz
cltd
imul
or
mov
mov
push
ljmp
xor
push
dec
inc
scas
pop
mov
xor
and
push
aas
jmp
int3
xchg
xchg
gs
xchg
xchg
ja
cld
xchg
mov
imul
hlt
dec
xor
scas
jne
mov
mov
cltd
repnz
arpl
mov
mov
mov
mov
adc
mov
icebp
sbb
mov
push
adc
cld
cmp
jp
jae
adc
mov
xchg
sahf
sahf
cmpsl
ja
add
popa
movsl
lahf
xchg
inc
int
icebp
pop
imul
dec
push
mov
lods
cmp
cmc
and
jg
in
and
fidivs
xchg
fimuls
int
inc
rclb
push
sbb
xchg
cmp
sbbb
dec
mov
and
imul
xor
inc
js
inc
fstps
and
xchg
mov
in
in
cwtl
mov
leave
and
xlat
mov
add
xor
push
orl
es
enter
add
lahf
inc
test
bnd
repz
xlat
mov
ss
mov
push
or
cltd
out
mov
sbb
pop
icebp
je
in
and
xchg
xor
sub
into
inc
sub
movsb
daa
dec
ret
jne
mov
inc
fldenv
popa
cmp
push
iret
inc
xchg
mov
test
and
loope
mov
fwait
pop
push
mov
lods
or
pop
lods
and
ja
mov
sbb
dec
mov
and
bound
bound
aad
inc
pop
int3
addr16
inc
aas
out
cwtl
push
sar
lock
add
fdivs
and
add
sarb
sbb
imull
loope
xchg
sub
ror
aaa
out
sahf
imulb
or
rclb
cltd
mov
inc
xor
jne
push
xchg
ja
pop
mov
cmp
imul
pop
pop
into
ljmp
lds
addr16
xor
daa
fldenv
jp
jno
inc
adc
outsb
jb
or
push
cmp
outsl
push
cwtl
das
add
adc
sbb
adc
and
gs
pusha
push
lds
stos
jb
inc
mov
xchg
out
sub
test
stos
or
add
out
and
sbb
call
dec
out
popa
inc
xchg
inc
shlb
push
mov
lods
aas
jmp
mov
lds
adc
out
sub
hlt
mov
fidivl
sarl
and
inc
jle
fcoml
cmp
inc
orb
jne
sbb
xchg
popf
cmp
mov
out
xor
rorl
nop
in
and
jbe
aas
dec
fidivrs
aad
push
inc
and
in
lods
pop
sbb
adc
out
xor
jle
dec
dec
and
inc
mov
cmp
inc
lea
in
inc
jge
data16
ret
xchg
and
movsb
insl
repz
mov
push
scas
cmpb
inc
fptan
and
cli
decb
arpl
cmc
lea
stos
sbb
sub
pop
add
cwtl
mov
sbb
lock
mov
call
ja
loopne
ds
into
mov
sbb
fidivl
orb
pop
test
add
dec
cmpsl
xor
das
add
addr16
es
test
cmpl
mov
cmp
mov
inc
out
leave
iret
daa
insl
push
jmp
lods
fstpt
adc
je
fisubl
sbbb
sub
xchg
jge
sarb
mov
test
mov
push
iret
add
addl
cmp
cmp
jnp
bound
adc
stos
inc
pop
sarl
in
stos
les
or
ret
loope
in
sub
mov
push
jnp
out
push
clc
xor
popa
jecxz
xchg
dec
and
xor
adc
insb
arpl
adcb
ja
jbe
or
jg
xchg
and
adc
jmp
pop
or
xchg
push
addr16
outsb
and
cmc
shll
sub
lock
inc
hlt
mov
ficoml
mov
inc
push
xchg
inc
leave
cmc
cmp
xor
call
rorb
mov
cmpsl
pop
int3
lcall
adc
scas
mov
test
inc
fimuls
xchg
mov
sbb
cmpsl
lock
mov
int
inc
lcall
jle
sub
xlat
push
into
imul
aaa
enter
jo
add
lock
pop
or
out
mov
loop
inc
mov
in
cmpl
mov
test
pushf
dec
push
movsl
arpl
in
pushf
test
fcompl
fxch
xor
aam
and
leave
rorb
adc
int
repz
call
mov
dec
shlb
jg
leave
push
cmp
push
int
repz
jns
popa
cmp
outsb
xchg
sub
jle
dec
add
push
or
jecxz
pop
jmp
adc
cs
cmp
loope
aad
lahf
add
sub
call
incb
loope
insb
les
xchg
sub
inc
adc
addr16
out
cmp
cmpsb
cmpsl
mov
adc
cmc
jl
in
jg
jge
push
dec
rclb
add
mov
cmp
pop
rorb
inc
xlat
out
sbb
dec
mov
loope
inc
sub
xchg
push
je
addb
int3
dec
mov
es
cmc
pop
sbb
xlat
pop
lock
sub
or
loopne
stos
mov
and
std
shrb
test
sbb
mov
xchg
int
jbe
arpl
popa
hlt
inc
fwait
mov
xchg
jnp
rolb
jbe
push
rcrl
cmpsl
pusha
sub
mov
mov
lcall
into
call
movsl
ret
sbb
fnstenv
inc
sbb
arpl
or
dec
sbbl
out
xchg
leave
sbb
js
stos
jecxz
adc
xchg
jl
lahf
stc
nop
sbb
ds
js
dec
aam
and
pop
testl
pop
shlb
xchg
xchg
sub
gs
les
lds
es
scas
jnp
sub
pusha
pushf
popa
enter
add
xchg
inc
daa
pop
into
gs
arpl
push
mov
jecxz
andb
adc
dec
inc
ret
mov
xor
xchg
stos
add
push
daa
adc
inc
nop
imul
jp
les
fildl
sub
call
sarl
and
lods
hlt
mov
mov
xor
in
cmpsb
pusha
iret
push
inc
ret
mov
cmc
xor
rcl
ss
jb
fyl2xp1
cld
xor
into
popa
fwait
in
filds
mov
mov
rcll
or
mov
cld
orb
divb
test
lret
loope
pop
lret
cmpsb
movsl
out
xor
imull
es
and
mull
push
lahf
cltd
mov
dec
lods
jae
imul
push
mov
pop
sbb
xchg
dec
lea
push
and
sbb
xchg
in
cmpsl
pop
jp
imul
sub
pop
xchg
pop
mov
pushf
pop
lods
test
insb
mov
mov
sbb
in
dec
iret
popa
fwait
aam
das
add
jbe
repz
insl
in
pop
mov
je
mov
pop
xchg
pop
fldl
adc
inc
cmpsl
es
loop
enter
mov
or
stos
inc
cmc
mov
imul
sub
mov
js
adc
push
stos
sbb
push
dec
mov
test
mov
inc
test
sub
repnz
jg
call
push
inc
arpl
xchg
lea
cltd
outsl
or
cmp
imul
dec
dec
mov
fnstcw
test
mov
insb
hlt
lcall
add
xchg
xchg
mov
push
repnz
push
cmp
fdivl
test
loop
lcall
xor
push
pop
push
jns
push
inc
inc
jmp
jne
push
std
xchg
mov
pop
aas
stos
sbb
add
test
mov
movsb
cmp
arpl
popf
repz
xor
add
inc
les
pop
sub
lret
adc
lcall
rcrb
add
lcall
clc
jno
or
cld
inc
add
mov
repnz
inc
jnp
lret
push
or
aad
xor
sbb
out
sub
dec
mov
add
xchg
push
or
ja
sbb
jg
add
dec
cmp
pop
lret
inc
test
fs
cmpl
push
mov
shll
stc
cmpsl
fbld
dec
mulb
fnsave
out
pop
add
fwait
sbb
and
add
aad
adc
inc
sar
xor
inc
aas
aad
clc
mov
adc
xlat
scas
call
in
mov
cmp
push
cmc
mov
test
push
out
jge
mov
pop
mov
imul
pop
icebp
sbb
or
dec
cltd
sub
lahf
pop
stc
test
loop
xchg
xchg
inc
test
jbe
push
jp
fs
lahf
movb
inc
out
ffree
inc
dec
aam
sarl
add
jbe
shrl
cli
sub
mov
sbb
jbe
push
add
stos
jbe
push
ss
rcl
arpl
push
add
nop
daa
cmc
sbb
push
xchg
js
mov
movsl
cmp
and
bound
adc
fucomi
or
stos
mov
mov
stos
mov
lock
stos
jmp
mov
leave
push
dec
mov
sbb
jns
mov
imul
adc
test
insl
ficoml
fstl
inc
stos
outsl
pop
cmpsb
jnp
clc
xor
sub
movsl
jb
or
mov
adc
andb
cmp
adc
out
mov
or
mov
mov
in
xor
and
and
and
add
mov
in
negb
fmull
jb
fiaddl
add
mov
push
adc
add
xchg
add
pop
out
repz
mov
shll
imulb
in
push
stos
push
push
mov
inc
push
mov
leave
andl
addr16
insl
jmp
dec
cmpsb
subb
aad
scas
mov
fsub
cwtl
mov
mov
stc
inc
test
ja
xor
mov
jmp
in
ljmp
test
insl
mov
and
adc
repnz
movsb
data16
xor
loop
ja
movsl
test
sbb
ret
int
cmp
imul
jl
pop
push
out
addb
addr16
adc
xchg
scas
dec
std
nop
iret
xchg
jecxz
je
loope
xchg
jle
mov
add
pop
stos
xchg
cld
xchg
sub
stc
es
dec
loop
insl
pop
fstl
and
insl
in
mov
mov
pop
sbb
add
adc
xchg
mov
sub
dec
sti
inc
push
hlt
in
sbb
inc
mov
jle
add
mov
movsb
mov
add
fadds
enter
pop
flds
in
pop
dec
aad
loopne
std
mov
flds
jg
jo
xlat
push
and
lock
je
dec
cmp
mov
shll
lret
xor
sbb
rcl
testb
ljmp
rorl
jmp
xor
cld
into
pop
cmc
in
mov
xor
add
in
loope
jne
mov
enter
cld
cmp
sub
dec
push
in
jg
push
out
mov
outsb
add
and
inc
mov
js
stos
inc
cwtl
cltd
into
gs
mov
in
sbbl
call
mov
xchg
xchg
sub
jecxz
inc
fstl
fs
push
popa
clc
mov
jg
fcmovnu
mov
xor
cs
push
addb
jo
aam
xchg
push
div
mov
sub
scas
pop
dec
adc
int
pushf
xor
int
push
jmp
out
push
call
push
inc
outsl
push
jb
xchg
sub
scas
inc
mul
stos
inc
sbb
into
gs
cmp
pusha
imul
mov
jle
mov
add
rolb
mov
xchg
addl
mov
cld
out
pop
testb
test
cmp
jge
pop
pop
mov
xor
mov
jbe
and
outsl
push
push
std
xchg
xchg
lea
adc
idiv
cmp
jmp
xor
out
out
sbb
cmp
outsl
push
dec
imul
cmp
sarb
test
lret
sti
xchg
cltd
xor
sbb
mov
sbb
nop
popa
and
aas
lret
repnz
mov
test
inc
les
pop
xor
cmp
dec
in
rorl
repnz
jbe
imul
jns
mov
arpl
scas
xchg
in
adc
out
push
movsl
jo
inc
fnstcw
xchg
sub
ret
mov
orl
stos
ds
aad
mov
data16
push
xchg
ror
sti
sti
loope
out
adc
ss
fs
xchg
add
aas
jbe
inc
test
xor
xchg
leave
int
or
cs
ret
xchg
push
call
repnz
pop
hlt
jne,pt
mov
pop
jnp
mov
rcrl
and
mov
cmp
sub
jg
inc
xchg
repz
dec
jns
jb
enter
fisttpl
testb
adc
xor
stos
xor
in
inc
outsl
stc
stc
or
lret
xor
mov
mov
or
add
pushf
inc
aas
cltd
nop
xchg
push
push
ss
push
push
ret
push
repnz
sub
mov
push
into
add
fs
add
aaa
frstor
jge
push
dec
mov
jno
fimull
arpl
sub
mov
daa
adc
aad
dec
int
adcb
push
jmp
and
shll
mov
push
lahf
push
mov
in
adc
add
lret
push
stos
pop
mov
xchg
sahf
arpl
jne
aas
andb
and
mov
lods
je
andl
sub
mov
dec
adc
add
daa
scas
cmp
pmuludq
dec
adc
in
jns
mov
lcall
repz
jge
dec
mul
jnp
cwtl
ds
push
pop
mov
lcall
loop
scas
clc
mov
pusha
and
inc
sbb
dec
cmpsl
and
xor
jecxz
push
enter
jns
xor
fisubs
xor
pop
xor
out
jg
fcomp
sbb
mov
and
js
or
lret
rcll
push
pop
test
push
jl
test
and
aam
cmp
dec
jns
out
push
cmc
into
xchg
test
ret
je
ficomps
scas
ret
fsubrl
pop
jle
xchg
lds
and
mov
push
icebp
test
sbb
mov
push
mov
or
jp
loopne
add
imul
adc
lahf
cltd
cmp
pop
sbb
push
jno
fs
pop
stc
inc
dec
jmp
jbe
aad
or
sub
lds
cmp
loope
jecxz
push
xchg
jae
in
sub
enter
jb
test
cltd
or
fisubrs
push
xchg
xorb
mov
fnsave
test
inc
addr16
pop
cmc
xchg
sub
inc
cwtl
mov
js
mov
xlat
outsb
out
fiadds
iret
mov
push
mov
mov
insb
add
cmpsb
mov
sbb
shrl
mov
or
nop
es
and
movsl
cmp
push
lods
jbe
sahf
addr16
xchg
insl
mov
jecxz
lea
adc
xor
mov
xchg
mov
mov
jno
push
cmpsl
ds
inc
test
xor
imul
hlt
popl
add
jnp
loop
mov
int3
adc
xchg
mov
mov
out
insl
xchg
mov
and
cld
pop
push
popf
mov
or
nop
je
pusha
into
into
xchg
jo
adc
sbb
inc
ret
xchg
jg
hlt
popa
push
arpl
mov
movb
pop
or
push
inc
adc
das
cmp
cmp
in
imul
mov
aad
int
inc
or
push
pop
push
imul
cmp
test
push
cld
xchg
mov
ja
adc
cli
bound
js
xor
xor
inc
popa
jl
push
cltd
loope
aas
dec
out
jne
xor
call
lods
adc
mov
add
outsb
stc
bound
add
fs
scas
jns
sub
mov
lods
aas
inc
push
jge
cld
gs
stc
bound
data16
repz
test
jecxz
gs
xor
pop
lea
cltd
lcall
push
stc
popa
adc
inc
add
movsb
lock
data16
jns
sbb
dec
inc
push
insl
pop
std
lds
popa
sbb
dec
test
add
idivb
jns
sbb
xor
sub
pusha
pop
push
cli
gs
mov
pop
loope
add
idiv
fs
jg
mov
scas
xor
fldl
fistl
imul
pop
insl
lock
dec
adc
addr16
xor
shll
mov
loopne
inc
mov
out
call
dec
nop
in
out
xor
cli
inc
or
sbb
rcl
push
std
pop
mov
out
aam
dec
push
dec
add
clc
sahf
xor
cmp
into
xchg
int
orl
ja
xchg
test
sarb
aam
push
ret
popl
push
pop
add
xchg
test
movl
loop
push
test
jg
xchg
andl
mov
stos
xor
js
adcl
add
insb
repnz
test
jns
xchg
push
stc
clc
in
and
movsl
aad
push
mov
jl
push
sub
data16
jns
jb
stc
xlat
fs
mov
lods
xor
test
test
xor
pop
adc
lea
mov
jecxz
fstpt
mov
test
cwtl
aaa
pop
adc
xor
xchg
mov
or
or
mov
cmpsl
xor
sar
mov
mov
stos
mov
push
out
jo
mov
and
push
sbb
push
jno
sbb
mov
push
inc
inc
adc
mov
pop
stc
sbb
lock
insb
inc
movsb
xor
lods
idivl
mov
lods
push
sbb
cli
sbb
jo
out
and
mov
adc
dec
inc
adc
mov
pop
cli
adc
lock
movsl
xor
scas
add
cmpsb
leave
mov
mov
xlat
fdivs
in
pushf
aaa
mov
mov
mov
inc
mov
xchg
addr16
xor
rcr
clc
pop
addr16
mov
jge
mov
push
sarb
loop
sub
mov
push
jp
lahf
cmp
push
inc
cmpxchg8b
adc
movsl
rcll
push
into
or
dec
push
sub
ret
adcl
je
mov
aad
push
lret
xchg
negb
push
lret
jecxz
xchg
shll
lahf
cmp
mov
into
xchg
xchg
mull
adc
or
dec
xsaves
dec
pop
shll
mov
stos
sub
dec
pop
int3
mov
pusha
or
mov
mov
inc
imul
sti
or
or
mulb
adc
jp
rorb
lret
pop
ss
jmp
mov
lods
jne
mov
xchg
mov
nop
aaa
lods
xor
mov
mov
dec
adc
or
in
mov
test
daa
mov
or
fildl
dec
sub
in
test
out
jne
mov
mov
add
popa
mov
pushf
inc
mov
jl
cmpsl
mov
xlat
jge
mov
inc
or
push
std
push
popf
je
xchg
adcl
sbb
xchg
test
sbb
ret
inc
or
inc
aad
pop
add
pop
mov
nop
cmp
pop
add
xor
mov
jb
sbb
inc
negl
in
std
cmp
inc
or
sub
cmp
xchg
cmp
fsubs
jns
ljmp
xchg
cmp
cmp
xlat
cmc
das
mov
add
mov
inc
jmp
push
xchg
or
scas
sbbl
xor
mov
scas
xor
or
dec
dec
jae
xchg
mov
repz
loope
xchg
xor
fmulp
xchg
or
adc
les
call
sbb
or
pop
mov
push
in
sarb
mov
daa
cltd
inc
popf
out
jmp
cltd
inc
sar
and
mov
scas
ds
xor
push
stc
es
sbb
push
pop
dec
push
neg
mov
push
xor
and
nop
inc
or
lea
sub
pop
pop
outsb
lock
mov
lods
es
shll
xor
nop
shl
inc
or
std
imul
jmp
icebp
cmp
mov
dec
outsl
aaa
scas
cs
js
jne
xchg
xchg
cmc
mov
push
pop
cli
mov
mov
sub
or
dec
clc
push
mov
ret
outsb
sbb
js
sub
fs
and
jle
incl
fistl
leave
orb
mov
mov
lods
imul
and
nop
inc
pcmpgtb
test
sbbb
js
fbstp
cmpsb
sub
jmp
fnsave
adc
cmpsb
add
jge
mov
test
aam
sub
dec
mull
mov
dec
pusha
insb
lods
rorl
push
js
or
dec
adc
pop
icebp
pop
testb
fucom
dec
pop
sub
pop
pop
xor
iret
lods
sub
add
push
push
js
dec
mov
mov
sbb
nop
mov
ljmp
or
cmpsl
mov
cmp
jno
popf
cmp
icebp
xorb
pop
cld
inc
xlat
lea
pushf
fwait
ds
jae
mov
inc
roll
data16
scas
adc
mov
testb
push
in
mov
les
push
sti
pop
mov
mov
outsb
ljmp
xchg
inc
cmp
or
mov
sarl
cmpsl
ljmp
mov
mov
mov
adc
inc
xchg
mov
mov
in
jl
das
popa
clc
pusha
movsl
xchg
sub
adc
add
xchg
mov
adc
jne
inc
roll
jl
dec
or
ja
lahf
pop
imul
sahf
dec
fiadds
inc
ss
xchg
out
je
out
adc
dec
adc
int3
shrl
scas
sub
and
inc
inc
or
test
mov
je
xor
and
jb
jnp
mov
mov
inc
insb
or
or
jns
std
adc
mov
jmp
and
aaa
inc
or
pop
sbb
rorl
dec
dec
call
repz
and
mov
inc
icebp
cltd
cmp
mov
add
pop
jecxz
and
mov
xlat
imul
aam
xor
sbb
inc
adc
push
add
and
leave
and
adc
mov
lret
test
inc
cld
test
mov
lret
bound
shr
adc
out
or
pop
loopne
inc
mov
mov
outsl
stos
dec
sub
inc
dec
mov
test
stos
mov
rcrl
cmpsl
sub
mov
jp
lahf
pop
shr
repz
testb
fistps
in
clc
fstl
sbb
fistpll
jne
imul
mov
loope
rcll
test
adc
cltd
sbb
mov
ja
shl
nop
ja
int3
test
out
jae
xlat
jle
fs
jo
enter
aad
sahf
test
into
mov
adc
fimuls
mov
fidivrs
jae
jne
dec
xchg
inc
sbb
xor
cs
jo
xor
and
sbb
cmp
push
add
jge
mov
xor
inc
push
xchg
inc
jmp
xor
jmp
idivb
sahf
lock
mov
mov
dec
or
ret
outsb
and
lods
dec
je
test
xchg
pop
cli
xchg
cmp
gs
out
fildll
shl
cmp
pop
adc
in
sub
push
cmp
test
inc
fs
fcoml
push
pop
enter
mov
incl
and
adc
in
inc
std
gs
push
pushf
inc
in
xor
xor
mov
aad
cli
inc
add
push
outsb
pop
add
loopne
stos
push
push
mov
pcmpgtw
push
lcall
and
stc
inc
daa
mov
jecxz
xchg
arpl
movsl
repz
dec
fdivp
mov
mov
push
add
scas
push
mov
dec
push
iret
pop
jo
cmp
dec
xchg
sub
ret
pop
sbb
icebp
pop
jo
mov
inc
test
mov
imul
lds
mov
call
das
stos
mov
pop
shll
mov
mov
pop
fmull
xor
imul
pop
loope
adc
mov
adc
lret
mov
cmp
mov
mov
mov
movb
mov
int3
push
ds
scas
cmpl
bound
negb
andb
jmp
xor
leave
xchg
adc
imul
push
mov
lret
jl
pop
cmpsl
daa
mov
xchg
lret
je
adc
mov
mov
xchg
ss
mov
xchg
aas
jecxz
lea
lcall
mov
adc
test
int3
and
cmp
insb
dec
dec
jecxz
mov
push
stc
push
mov
leave
xchg
out
call
repnz
adc
pop
mov
mov
mov
loop
fdivp
dec
adc
adc
sti
cmc
xor
push
inc
adc
aas
mov
iret
scas
sub
js
mov
in
jg
fistpll
imul
addr16
into
xchg
hlt
bound
sahf
std
pop
cmpsb
das
push
out
pop
xlat
loopne
or
mov
push
scas
xor
dec
adc
xor
mov
in
jno
adc
or
cmp
js
orl
and
repnz
rcll
mov
mov
cmpsb
xor
xor
mov
sub
mov
dec
and
stc
jmp
cmp
in
push
or
rolb
test
ja
adc
ss
and
mov
mov
add
inc
adc
lea
inc
cmpsb
xlat
fdivrl
mov
or
dec
fcomi
loope
sub
test
xor
fs
outsl
jecxz
push
cld
hlt
loopne
add
ss
in
fadds
jg
mov
sbb
xchg
cmp
test
fwait
sub
fcom
pop
ret
stc
fs
mov
xor
sbb
jg,pt
inc
sub
cmp
mov
mov
aam
aam
push
lahf
sub
int3
pop
or
sahf
dec
out
cmp
xchg
icebp
fincstp
bound
rolb
dec
mov
sbb
ret
movsl
xor
push
mov
inc
lea
jge
cmp
ss
inc
adc
sub
les
adc
and
movsl
xor
cmp
push
ljmp
mov
xchg
leave
cwtl
movsb
sub
sbb
lcall
lds
pop
mov
push
push
push
int3
out
jne
adcl
dec
lcall
fadds
loop
pop
add
rorb
adc
stos
outsl
repz
adc
aad
jo
fcoml
inc
sarb
cmp
mov
inc
jae
inc
pop
xchg
data16
sub
mov
inc
cld
stos
out
jo
in
jl
dec
iret
pop
sub
ss
xchg
push
sbb
dec
data16
mov
push
in
test
mov
ret
xchg
jecxz
mov
add
mov
jb
dec
adcl
int3
jge
mov
lods
fs
pop
sti
cmpb
loopne
adc
cmpsl
ds
xor
pop
mov
data16
roll
mov
scas
mov
jnp
cmp
pop
idivl
movsb
mov
mov
xlat
xchg
inc
adc
rcll
je
and
imul
mov
ds
aas
jb
jecxz
sub
outsb
cli
xchg
mov
mov
cmpsb
aad
mov
pop
ret
sbb
pop
xchg
and
test
cmp
daa
pushf
ds
test
fisubrl
iret
mov
jno
andb
ds
lock
cs
lock
inc
jno
lcall
inc
ret
pop
ja
inc
or
imul
xor
aam
inc
jno
jns
inc
bound
mov
insb
fnstsw
mov
out
aas
mov
or
sti
ja
std
pop
subl
add
mov
popa
sbb
test
xor
or
mov
sbb
inc
jp
cld
pop
adc
push
mov
pop
mov
lods
rolb
push
mov
xchg
js
in
je
imul
stos
pop
pop
or
enter
jbe
in
jne
push
lahf
inc
xchg
inc
and
pop
cs
add
cmp
mov
mov
inc
lods
ja
int3
xchg
xchg
cmp
sbb
shr
pop
mov
xor
jmp
arpl
and
cltd
out
cwtl
ds
enter
jmp
ficompl
scas
add
adc
fists
inc
or
xchg
cmp
test
jns
xor
arpl
xchg
lcall
out
dec
jle
cld
cmp
stos
mov
xor
outsb
icebp
xchg
jne
sahf
adc
fiadds
xor
sub
inc
dec
jmp
xchg
scas
xor
mov
add
jo
imull
loop
in
xor
shrb
repz
testb
pop
add
outsl
push
push
cli
inc
jnp
icebp
bound
inc
or
outsb
mov
mov
push
cmc
push
jb
pop
loope
xor
sarl
cld
test
xor
pop
enter
scas
cltd
pushf
insl
repnz
rcrb
rol
push
stc
jns
push
iret
jne
ds
pop
and
push
and
addb
insb
aad
mov
and
movb
mov
inc
inc
clc
adc
push
lcall
lret
inc
cmp
cmp
nop
lods
sbb
mov
and
xor
add
push
push
cli
push
sub
jo
inc
or
arpl
push
ss
cmp
mov
addl
add
sub
dec
adc
jg
jle
adc
scas
pop
int
imul
loop
cmp
sub
push
std
cs
lea
cmp
mov
and
and
mov
stos
orl
add
add
addl
cmp
ret
xlat
gs
xchg
mov
xchg
cmp
fisttpll
divb
stos
push
aad
movsl
sub
inc
add
fidivrs
pop
iret
lea
lock
lea
test
dec
fiaddl
xchg
test
lock
mov
pop
stc
mov
mov
popa
icebp
sub
repz
pop
fdiv
inc
adc
aad
and
inc
or
aas
fwait
out
push
and
jle
mov
fisubl
mov
jbe
sub
jp
jle
in
lods
popa
in
in
mov
adc
repz
movsl
and
xor
push
mov
test
mov
dec
lsl
add
rorb
or
mov
dec
or
sub
stos
push
mov
loop
mov
daa
in
imul
popf
fucomip
inc
push
les
jg
or
lods
inc
mov
inc
fldl
stos
sahf
inc
push
push
imul
dec
mov
sbbl
ss
jge
sub
movsb
jo
orb
sub
cmp
pop
cli
lea
daa
fstpt
pop
inc
adc
cld
pop
fimull
mov
das
xchg
bswap
loope
mov
movsb
ljmp
xor
inc
test
or
cltd
mov
and
loope
add
xor
aam
and
sbb
movsl
aaa
loopne
jp
sbb
dec
arpl
fstl
imul
push
mov
mov
je
add
fisubrl
aas
push
or
mov
push
shr
addr16
dec
push
mov
mov
nop
inc
xchg
pop
mov
pmaddwd
vsqrtss
jns
icebp
pop
hlt
and
add
stos
fcoms
jecxz
lds
mov
push
std
in
sbb
pop
sub
stos
das
push
cmp
jp
xchg
lcall
inc
or
loope
adc
mov
mov
dec
adc
pop
add
jp
inc
sub
or
sarb
pop
add
stos
inc
push
xchg
xchg
cmp
movl
lret
xchg
popf
inc
mov
mov
mov
mov
mov
rolb
and
cmp
stc
nop
rclb
outsl
repz
jbe
addr16
sarb
jne
sbb
in
outsl
pushf
loopew
jno
les
push
add
enter
pop
sbb
xchg
cmp
pop
incl
loop,pt
cmp
out
inc
sub
test
mov
fsubrl
adc
cld
push
popf
aas
sbb
sub
dec
mov
xchg
cmp
aam
pushf
jno
sub
out
aas
mov
xor
rcrb
pop
inc
adc
inc
in
addr16
cmpsb
fucom
jo
mov
gs
test
add
xchg
sub
adc
cmp
fists
lea
scas
inc
test
je
mov
sbb
adc
inc
or
call
push
int3
inc
insl
test
xchg
sarl
dec
pop
fdivrl
mov
or
mov
test
dec
sub
push
stos
ss
push
xchg
cmp
ret
mov
movsl
sub
popf
orl
mov
orl
cltd
inc
add
xchg
inc
or
out
stc
lcall
stc
ja
cmpsb
xchg
jbe
mov
cmp
insl
mov
cmpsb
xor
rclb
mov
lds
shrl
lods
jl
sbb
xchg
scas
dec
rolb
add
adcl
dec
push
sub
out
dec
adcl
adcb
sub
pop
std
push
xchg
adc
jl
mov
pop
cwtl
lods
fsubrs
mov
add
sbb
push
clc
fs
sub
cmp
jns
inc
cwtl
add
lcall
enter
scas
jmp
imulb
dec
stc
daa
mov
xchg
cwtl
cmp
test
push
fcomi
gs
in
dec
push
in
lret
sti
in
push
cs
xor
icebp
mov
sub
loopne
mov
shl
outsl
hlt
push
fwait
inc
adc
sbb
inc
bound
mov
cld
dec
mov
ljmp
jno
negb
gs
mov
mov
sbb
push
adc
jmp
inc
addr16
dec
js
data16
push
add
add
mov
loope
xor
push
fldt
out
add
and
sub
insb
xchg
pushf
mov
ds
pop
fiaddl
add
das
mov
push
negl
and
decb
add
dec
pop
mov
lcall
or
movsl
mov
stos
sarl
add
jne
and
mov
mov
lods
mov
lds
xlat
mov
iret
adc
adc
int
dec
je
iret
mov
outsb
lock
mov
pop
cwtl
das
cmp
mov
lods
add
jge
bnd
sarb
or
add
mov
ljmp
mov
pop
and
aaa
push
imull
psrld
outsl
icebp
popa
mov
je
jecxz
popf
arpl
es
mov
dec
hlt
pop
clc
mov
cmp
dec
jne
push
mov
lret
cwtl
fdivrs
testb
je
in
push
cmpsl
inc
jmp
push
mov
je
shll
pop
fidivl
jne
or
out
xlat
xchg
ds
dec
adc
add
xor
call
or
out
cmp
jo
jg
cmp
arpl
xchg
xor
cmp
pop
sub
push
scas
mov
frstor
mov
pop
inc
adc
push
jnp
lcall
jmp
ret
inc
shrb
or
ljmp
repnz
xchg
cmp
or
mov
call
cmp
xchg
lods
das
test
pop
mov
sti
sub
fucomp
push
scas
or
gs
xor
addr16
fdivs
ljmp
mov
mov
push
les
loope
jg
pusha
repnz
xchg
inc
mov
jae
rcl
push
add
mov
jns
fisubrl
mov
or
fcompl
lods
sbb
shll
pop
lret
push
adcb
into
pop
aaa
mov
test
jbe
or
xchg
jae
roll
dec
and
std
pop
aas
add
frstor
jg
int
call
cmp
loope
adc
adc
test
out
or
sbb
mov
popf
adc
adc
jmp
fadds
jp
stos
xor
insl
pop
add
movsb
inc
inc
or
cwtl
inc
xor
daa
adc
jge
sub
leave
or
test
rorl
popa
lret
pop
and
jbe
mov
hlt
shrw
push
aad
dec
or
pop
cmc
mov
xchg
gs
xor
pcmpeqw
and
ljmp
pop
push
jecxz
add
fcoml
mov
setns
mov
je
xor
mov
fisubl
stos
add
int
das
push
inc
or
loopne
jne
out
lods
insb
out
test
xor
cwtl
lock
incb
mov
cmp
push
or
dec
jbe
jmp
cwtl
lods
sub
xchg
lods
mov
cmpsb
imul
sub
lds
cmp
sti
push
adc
iret
adc
adc
addr16
add
mov
clc
xchg
clc
addb
test
push
mov
adc
ficoms
mov
xchg
sub
in
mov
sub
dec
pop
cmp
ficoml
orl
call
xor
lods
arpl
and
leave
call
mov
jbe
dec
pop
add
sti
cmp
cmp
mov
mov
mov
or
pop
sarl
out
push
lock
cmp
stos
fildl
dec
push
orb
dec
push
cmp
sub
aad
in
push
shll
pop
dec
jbe
xchg
pop
push
mov
lea
mov
test
sti
lock
stc
scas
out
inc
adc
adc
sub
cmp
js
jle
js
adc
sbb
fidivrl
jne
and
cmpsb
mov
xor
sbb
xchg
popa
cmc
push
add
das
mov
sbb
loope
sar
orl
sbb
push
pushf
jg
push
jle
jb
and
ss
xor
mov
xchg
imul
imul
push
pop
jnp
fwait
jae
mov
pminub
les
or
scas
sub
cmc
pop
test
jmp
mov
psrld
in
mov
push
ret
sbb
aaa
mov
std
mov
sti
pop
loopne
add
insl
std
pop
clc
pop
jb
pusha
inc
cmpb
popf
push
add
int
pop
jp
lret
gs
cmp
push
pop
pop
dec
jecxz
fistl
or
stos
xor
inc
or
xchg
mov
cmp
mov
cmpsl
fnsave
mov
mov
lea
test
cltd
jbe
lcall
sbb
mov
test
jns
inc
xchg
rorb
int
mov
lods
adc
shlb
sbb
dec
pop
pop
test
imul
adc
push
lods
roll
add
repnz
outsb
mov
mov
xchg
mov
int3
jbe
imul
dec
mov
stc
inc
cwtl
inc
adc
sahf
ret
xchg
out
popf
cmp
mov
lock
xchg
pop
testb
mov
and
push
add
insb
xor
test
fstpt
push
adc
decb
pop
jbe
jne
stos
xor
imul
xchg
jmp
das
jg
mov
add
inc
pop
dec
pop
lret
fwait
sarl
push
lods
xor
cmpsb
sub
es
xchg
rcr
in
insb
in
adcl
lods
pop
std
mov
mov
inc
adc
in
jo
pop
inc
xchg
adc
and
aas
clc
pop
sub
out
imul
mov
sbb
scas
push
dec
add
pop
nop
test
cmp
bound
stc
push
mov
call
sub
std
ljmp
push
cmp
mov
adc
jb
jbe
inc
or
outsl
mov
lret
nop
and
cmp
jecxz
cmp
clc
sub
ficomps
push
shll
lcall
sti
mov
lock
sub
lods
out
sti
dec
mov
test
clc
das
mov
lods
jmp
in
in
inc
mov
shll
mov
aam
or
sbb
ret
pop
das
scas
popa
sbb
push
icebp
jp
and
ljmp
jns
mov
jne
sarl
outsl
inc
adc
cmp
fwait
arpl
mov
mov
ds
push
outsl
divb
xchg
cmp
das
mov
out
pop
shll
pusha
mov
mov
fcmovbe
js
push
adc
adc
and
ret
bound
push
shr
insl
mov
jecxz
and
lahf
cmp
pop
out
cli
jo
adc
stos
out
imul
and
ljmp
push
hlt
repz
aas
shr
fwait
cmp
push
ja
xchg
add
fidivs
fs
xchg
add
and
aam
add
icebp
xchg
daa
rcll
rorl
xchg
xchg
daa
or
sbb
loop
xchg
inc
adc
cli
pop
cmpsb
dec
xor
xchg
sub
pop
lock
addl
mov
es
push
fnstcw
leave
fwait
daa
dec
adc
rorb
push
xor
repz
insl
pop
loope
push
cmpsb
mov
test
ficompl
orl
js
aas
pop
out
popa
sub
sbb
jp
mov
mov
in
mov
pop
pop
in
inc
push
addb
xor
inc
inc
test
cltd
jbe
or
fidivs
push
adc
mov
mov
sub
stos
mov
insb
call
stc
fadds
lea
shl
jecxz
adc
lock
jne
cmp
or
cmp
sarb
int3
xchg
jle
jb
dec
addr16
inc
fists
mov
int
imul
outsb
js,pn
mov
xor
psubq
or
add
push
daa
lods
and
or
xor
jns
dec
xor
cmpl
pop
add
pop
pop
add
movsl
pop
decl
fildl
fimull
sub
inc
pop
arpl
mov
ja
in
add
mov
push
fidivrs
xchg
xchg
add
lods
sub
fnsave
mov
push
xchg
mov
aam
or
lea
sbb
mov
inc
data16
testb
xchg
mov
mov
dec
or
es
int3
daa
inc
adc
cmp
jns
dec
dec
mov
ret
xchg
fs
in
shrl
lods
xor
fistpll
sub
sbb
in
cmc
bound
sbb
pop
sub
xor
outsb
lock
adcb
adcl
in
fbstp
jecxz
add
xchg
pop
push
dec
or
dec
out
addl
insl
repnz
jecxz
and
nop
inc
sarl
cmpsb
xor
mov
adcl
and
or
stos
sub
pop
arpl
and
adc
lock
out
mov
cmpsl
push
add
mov
cmc
mov
sarl
add
adc
popa
mov
pushf
fidivl
test
or
aas
jmp
mov
std
or
inc
cmp
scas
ss
scas
sahf
inc
lods
rorl
jno
sub
fs
pop
lret
jge
and
flds
test
sub
insb
in
js
ljmp
xchg
xchg
sub
out
sbb
in
es
dec
outsb
repz
jg
sbb
dec
cli
push
out
std
pop
icebp
cs
inc
pop
push
aas
push
rcll
mov
dec
add
push
mov
mov
cltd
inc
fbstp
jp
or
popa
in
lret
jp
pop
in
aad
dec
adc
add
mov
gs
loop
jmp
and
sbb
mov
and
push
push
enter
sbbb
iret
in
jnp
cwtl
cmc
sbb
push
in
fdivrs
pop
je
mov
xchg
sub
loopne
sub
jmp
in
sahf
lret
xchg
js
aad
lds
bound
jmp
jnp
rolb
scas
sbb
gs
outsb
add
dec
adc
push
mov
push
cld
sbb
dec
add
pop
pop
xor
fidivs
or
add
lods
cltd
jmp
lret
dec
push
enter
or
push
aaa
push
mov
or
mov
insb
pop
hlt
xchg
inc
jae
dec
or
int
add
cmp
imul
xchg
xor
jbe
inc
pop
andl
sbb
or
jne
inc
loopne
adc
dec
leave
xchg
out
outsb
imul
data16
mov
gs
lods
sbb
mov
pop
out
jge
and
test
mov
jnp
mov
js
and
fnstcw
popf
jmp
push
sub
ss
add
mov
test
sarb
out
repz
bswap
mov
mov
lret
cmpsl
dec
or
loope
movsl
mov
mov
sbb
cmc
loopne
push
shrl
and
or
aas
fistpll
mov
rolb
pop
pop
std
popa
inc
adc
and
add
inc
xlat
sbbl
inc
mov
pusha
adc
pop
shl
imul
pop
std
sbb
push
add
jns
mov
sbb
mov
and
ret
add
fcompl
in
pushf
adc
mov
shlb
divl
sahf
jae
add
and
cmp
xor
jg
call
pop
fcomp
mov
negb
lret
aam
cmp
shll
jbe
out
mov
and
xlat
add
xor
mov
testb
adc
sahf
sti
xchg
sar
fwait
xor
repnz
jle
aaa
into
jne
xlat
outsb
rcll
cmc
mov
jae
sbb
stos
ja
xchg
sub
xor
leave
scas
inc
shr
out
jecxz
fs
ss
push
mov
mov
adc
aaa
pop
imul
in
mov
fldl
lcall
and
pop
cmpb
mov
mov
hlt
add
es
pop
and
xchg
push
jns
xor
int3
mov
inc
ss
pop
insl
push
pop
push
in
dec
jb
mov
adc
out
pop
xor
dec
cmpxchg
imul
xchg
mov
in
and
mov
inc
or
mov
xchg
pop
sub
mov
pop
out
cmp
gs
das
pop
add
sbb
mov
inc
fdivs
idivl
testb
jge
popf
sti
xchg
iret
negl
mov
dec
mov
into
je
xlat
outsb
rclb
cmc
mov
call
adc
insl
xchg
xor
enter
shr
out
loop
fs
insl
add
xor
mov
rorl
inc
adc
daa
mov
push
mov
jl
jg
cli
mov
add
add
and
push
cmpl
push
stos
rcrl
add
and
cli
xchg
push
js
xor
lret
mov
std
les
int
push
insl
push
push
push
in
inc
jno
mov
les
test
in
push
xor
inc
push
mov
inc
push
into
gs
mov
in
and
mov
aas
pop
or
xchg
pop
sub
mov
inc
push
out
cmp
gs
cs
add
sbb
mov
inc
fsubrs
idivb
testb
jge
aad
sti
xchg
into
negb
mov
dec
mov
into
jae
xlat
outsb
iret
xchg
push
in
mov
out
or
inc
adc
insb
xchg
xor
lea
out
loope
adc
insl
add
xor
andb
and
xchg
mov
adc
daa
mov
addr16
fcompl
in
mov
fildl
lcall
and
push
cmpb
mov
mov
hlt
add
and
adc
cli
xchg
push
ja
xor
lret
cld
ret
ss
sbb
push
in
inc
jo
mov
ret
adc
in
adc
mov
aas
addr16
out
pusha
into
gs
mov
in
and
mov
ds
or
xchg
pop
sub
mov
inc
add
gs
sub
dec
sbbl
stos
and
sar
inc
fsubrs
cmc
mov
testb
jge
aam
sti
xchg
int
fwait
xor
out
sbb
jnp
aaa
into
jb
xlat
outsb
into
xchg
push
in
out
cmc
mov
out
or
inc
adc
imul
inc
mov
loopne
adc
insl
add
xor
andb
and
loopne
inc
adc
daa
mov
sub
pop
xchg
jl
jge
cli
scas
fiaddl
lcall
and
push
jg
mov
mov
hlt
add
and
push
sbb
cltd
xor
leave
mov
sti
ret
repz
insl
dec
adc
in
inc
outsl
hlt
mov
ret
repz
xor
inc
or
inc
ds
out
pop
into
gs
mov
in
and
mov
cmp
pop
stos
inc
nop
push
sub
mov
inc
add
jle
sti
gs
sub
add
sbb
and
sar
inc
fsubrs
dec
pop
testb
jge
rcrl
fwait
xor
out
sbb
jp
aaa
into
jno
xlat
outsb
int
push
in
ret
out
cmc
mov
in
or
inc
adc
push
xor
lds
dec
out
adc
insl
add
xor
andb
mov
fildll
mov
sub
pop
xchg
jl
jl
cli
lods
flds
lcall
and
push
jle
scas
jne
push
cmpsl
rcrb
add
and
push
sbb
xchg
dec
jne
xor
enter
shll
repnz
insl
dec
adc
inc
outsb
hlt
mov
rcll
repnz
xor
inc
or
out
pop
into
gs
mov
add
mov
and
mov
cmp
or
push
sub
xchg
inc
fcompp
add
jle
cli
gs
sub
pushf
mov
jle
and
sar
inc
fsubrs
mov
idivb
fnsave
jge
rcrb
fwait
xor
inc
mov
into
jo
xlat
outsb
int3
xchg
push
in
ret
mov
in
or
inc
adc
imul
dec
out
fmulp
adc
insl
add
xor
andb
and
fisubrs
mov
sub
pop
test
jl
jnp
cli
lods
fadds
lcall
and
push
jge
scas
je
push
cmpsb
iret
pop
hlt
add
and
push
sbb
xchg
dec
je
xor
mov
stc
shlb
icebp
sbb
insl
dec
adc
inc
insl
hlt
mov
rclb
icebp
mov
sub
adc
enter
inc
cmp
dec
out
pop
into
gs
mov
add
mov
and
mov
cmp
or
mov
rolb
inc
add
jle
stc
gs
sub
pushf
xchg
sbb
and
sar
inc
fsubrs
repnz
idivb
fnsave
jge
rcrl
fwait
xor
sbb
js
aaa
into
outsl
cltd
xlat
outsb
lret
nop
push
in
shr
mov
jecxz
or
ss
sub
xor
ret
mov
out
fs
insl
add
xor
andb
and
test
mov
arpl
inc
fcompl
in
mov
arpl
stos
xlat
add
ljmp
and
push
jnp
lods
jae
push
movsl
int
hlt
inc
fdivl
pop
jl
push
sbb
xchg
dec
jb
xor
mov
into
out
sbb
outsb
dec
adc
inc
imul
popf
bound
mov
xchg
sub
adc
leave
inc
or
out
pop
iret
lea
test
pop
lea
add
xor
inc
mov
roll
add
jg
mull
sub
test
sbb
and
xlat
pushf
mov
fldcw
lock
pusha
idivl
jne
popf
jle
iret
xchg
cld
xchg
enter
and
sbb
jbe
cmp
insl
xchg
fsubrs
mov
mov
loope
or
ds
outsl
xor
sub
xor
roll
out
fcmovne
gs
cs
andl
and
fldt
mov
popa
es
fstl
out
mov
fs
test
lret
sbbb
daa
and
push
jns
xlat
stos
jno
push
mov
fnsave
jge
dec
pop
cld
xchg
dec
jo
xor
ret
mov
iret
in
push
fsubrs
push
push
out
aas
imul
or
mov
xchg
sub
push
xor
aas
push
mov
cmp
call
mov
out
test
add
or
xor
inc
mov
roll
dec
call
std
daa
push
push
popf
test
sbb
and
fwait
mov
fldcw
out
rclb
pusha
idivl
fidivs
pushf
jle
into
xchg
cld
xchg
out
pushf
xor
jmp
mov
iret
insb
xchg
fsubrs
lea
mov
loopne
or
cmp
xchg
sub
xor
rolb
out
fcmove
gs
outsb
add
pop
xchg
mov
stos
inc
or
sub
pusha
and
out
mov
fs
test
add
add
and
dec
js
xlat
test
lret
sti
ret
fnsave
jge
dec
push
cld
xchg
dec
outsl
fwait
xor
ret
hlt
mov
fsubrs
or
testb
mov
xchg
sub
or
mov
aaa
pop
push
call
mov
out
test
add
and
das
pop
lods
inc
mov
roll
dec
call
std
es
push
popf
addl
jns
and
aad
mov
fldenv
out
rclb
pusha
idivl
fidivs
fwait
jle
int
cld
xchg
out
pushf
xor
call
mov
iret
imul
in
mov
fbstp
cmp
stos
insl
xor
leave
mov
loopne
out
fxch
or
outsb
add
pop
xchg
mov
stos
inc
or
sub
pop
and
fstl
out
mov
fs
cmpsl
roll
add
sbbb
and
mov
xlat
test
mov
cmc
cli
ret
hlt
sbb
dec
adc
fwait
xor
sarl
jmp
fsubrs
or
out
cmp
pop
jne
nop
mov
xchg
sub
or
lret
mov
ss
push
call
mov
out
test
add
mov
mov
roll
dec
std
call
std
and
inc
test
js
and
aam
mov
fldenv
in
rclb
pusha
idivl
fidivs
lcall
xor
out
mov
inc
mov
iret
push
fsubrs
mov
mov
fidivs
cmp
insb
xor
leave
mov
fists
adc
into
or
outsb
add
pop
test
scas
fsubrs
mov
pop
and
push
jg
jge
jne
sti
cmpsb
rolb
add
sbbb
and
mov
dec
jbe
xlat
cmpsl
outsb
mov
cmc
stc
rcr
repz
dec
adc
xchg
inc
insl
fwait
xor
sarb
ljmp
out
cmp
testb
mov
xchg
sub
or
lret
mov
xor
push
shlb
scas
outsl
push
loope
out
test
add
mov
mov
sarl
popa
call
std
and
push
popf
addl
mov
lret
fldenv
inc
pusha
idivl
fidivs
cltd
jle
lret
xchg
cld
xchg
in
pushf
xor
out
mov
inc
mov
iret
imul
testb
cmp
imul
sub
xor
mov
ficoms
pmovmskb
or
outsb
add
pop
test
scas
xlat
stos
inc
or
sub
pop
and
push
jle
jge
je
sti
movsl
roll
add
sbbb
and
mov
dec
jne
xlat
cmpsb
insl
mov
cmc
clc
rcr
repnz
dec
adc
xchg
inc
insb
fwait
xor
mov
cmp
jmp
or
cmp
lea
mov
xchg
sub
or
lret
mov
xor
push
call
xchg
out
test
add
mov
xchg
sarl
popa
ficompl
call
std
and
popf
addb
mov
mov
fldenv
rclb
pusha
divl
fidivs
cwtl
jle
lret
xchg
ret
jmp
xor
aas
mov
iret
push
mov
mov
fdivl
cmp
push
xchg
sub
xor
mov
fstl
push
into
or
outsb
add
pop
orl
stos
inc
or
sub
pop
and
push
jge
jge
jae
sti
movsb
rolb
add
sbbb
and
mov
dec
je
xlat
movsl
insb
mov
cmc
idivl
jge
dec
adc
xchg
inc
imul
xchg
mov
cmp
call
or
cmp
xchg
pop
jne
lea
xchg
sub
or
lret
mov
xor
call
xchg
out
test
add
mov
xchg
jge
lret
sahf
dec
cli
call
std
and
popf
jg
test
jne
and
rcll
inc
fldenv
ljmp
jbe
fidivs
xchg
jle
leave
nop
cld
xchg
ret
xor
sbb
jo
cmp
addr16
fsubrs
mov
mov
cmp
imul
xor
mov
fcoml
or
das
outsb
add
pop
orb
aad
inc
pop
into
sub
pop
and
push
jnp
jge
jb
cld
mov
les
mov
dec
jb
fsubs
les
cmc
mov
jle
dec
adc
xchg
inc
imul
out
mov
shl
psubusw
pop
pop
out
cmp
mov
adc
sub
pop
xor
cmp
mov
xor
jmp
test
test
decl
mov
test
sarl
fcomps
call
std
and
popf
jle
test
je
and
rclb
inc
fldenv
jmp
pusha
divl
fidivs
xchg
jle
enter
shr
xor
jecxz
mov
cmp
cmp
xchg
fsubrs
xchg
mov
fidivl
aaa
adc
push
mov
leave
mov
fistl
or
into
gs
outsb
add
pop
orl
push
int
mov
pop
pop
inc
ficoms
out
lods
jno
cld
mov
ret
sbbl
pop
and
dec
jno
fsubs
ret
pop
div
mov
jle
inc
paddw
bound
mov
mov
cmp
in
fnstenv
push
pop
out
aaa
popa
testl
in
xchg
sub
push
xor
aaa
mov
xor
jmp
subl
test
decb
mov
test
sarl
popa
xlat
pushf
dec
clc
call
std
and
jge
test
jae
and
iret
xchg
mov
fldenv
call
pusha
divl
jne
xchg
jle
mov
xchg
shr
xor
loop
mov
cmp
push
outsb
xor
iret
gs
fsubrs
xchg
mov
testb
ss
addr16
sub
xor
mov
ficoml
or
into
gs
es
sbbl
and
shrl
mov
pop
push
inc
fimuls
out
stos
jo
cld
mov
ret
hlt
push
and
inc
jo
fsubs
ret
repz
jle
inc
push
std
xchg
inc
addr16
xor
mov
cmp
in
fnstenv
add
testl
in
xchg
sub
add
mov
das
pop
push
jmp
subb
test
std
mov
sub
inc
orl
jp
lret
fwait
dec
imul
jg
out
data16
pop
dec
push
popf
jl
test
jb
and
into
xchg
mov
fldenv
out
push
sbb
divl
fidivs
xchg
jle
cld
xchg
mov
loope
mov
cmp
iret
fs
outsl
rolb
lea
fdivs
xor
xchg
sub
xor
mov
fsts
or
into
gs
outsb
add
push
jg
and
shrb
mov
push
sbb
out
stos
outsl
gs
mov
roll
dec
adc
cmp
inc
fsubs
rcrl
mov
jle
inc
or
pushf
xor
mov
cmp
jecxz
fnstenv
add
out
xor
push
jbe
mov
xchg
sub
add
lret
xor
push
push
jmp
subl
mov
daa
push
lods
inc
orb
jns
lret
lcall
sub
data16
push
dec
push
popf
jnp
test
jno
and
int
mov
fstps
out
push
sbb
divl
fidivs
xchg
jle
lds
xor
loopne
mov
cmp
iret
arpl
push
in
mov
testb
xor
stos
sub
leave
mov
mov
scas
fcoms
or
into
add
outsb
add
push
jle
and
shrl
mov
push
sbb
fimuls
out
test
lret
sti
rolb
dec
adc
fcomps
rcrb
mov
jle
inc
or
xchg
ds
xor
mov
cmp
loop
fnstenv
add
xor
testl
loop
xchg
sub
add
xor
mov
sub
dec
shlb
test
pop
fisubl
mov
es
lods
inc
addl
popa
aam
dec
cmc
call
std
sbb
test
jo
and
int3
xchg
mov
fstps
in
push
pop
inc
pusha
divl
fidivs
xchg
jle
les
pushf
xor
fistps
mov
cmp
iret
bound
in
mov
testb
xor
sub
leave
mov
mov
scas
xlat
push
out
ror
add
outsb
add
push
jge
and
shrb
mov
push
sbb
dec
jbe
jge
insl
gs
sahf
leave
add
cli
mov
and
inc
insl
inc
fcomps
mov
fidivs
adc
inc
or
xchg
cmp
pop
sbb
jmp
or
jo
add
xor
mov
mov
lods
loope
xchg
sub
add
xor
mov
sub
push
jmp
jg
jo
fldenv
mov
and
inc
sub
ja
lret
cwtl
dec
hlt
call
std
sbb
push
popf
jns
test
outsl
lcall
ret
fstps
aas
pusha
divl
fidivs
xchg
jle
ret
mov
xchg
mov
ficomps
mov
cmp
iret
popa
mov
outsl
mov
fdivp
imul
mull
push
adc
adcb
mov
sbb
jmp
sub
mov
mov
jmpw
xor
pop
rcll
push
loopne
je
in
in
in
es
test
pop
mov
fldcw
push
inc
xor
mov
mov
pop
cld
fwait
inc
mov
add
add
jb
je
hlt
sahf
mov
sti
call
cmc
sbb
push
outsl
sub
loopne
inc
mov
jle
pop
stos
jle
dec
stos
mov
das
add
dec
jmp
outsl
push
loope
xchg
int3
lcall
out
jge
adc
mov
cmp
jo
mov
xor
das
inc
sbb
cmpsl
int3
in
pop
or
lods
out
sub
arpl
and
mov
jp
sbb
xor
sar
jmp
loopne
sub
mov
ret
jmp
cmp
sbb
jno
and
lds
add
movsb
push
ffree
jnp
mov
out
iret
dec
sub
stos
stos
adc
imul
popf
enter
mov
nop
addl
sbb
mov
adc
push
ss
std
and
stc
movsb
daa
pop
mov
fbstp
push
push
dec
mov
stc
xor
fs
mov
je
push
xor
test
jae
sub
lahf
daa
jle
dec
mov
and
clc
dec
cmp
loopne
movsl
or
ss
inc
mov
ljmp
sub
jbe
lods
mov
out
js
pop
sti
insb
pushf
nop
pushf
add
out
cmp
in
cltd
adc
mov
pop
mov
push
ja
adcb
sub
push
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
vpackssdw
or
sti
cmpsl
sub
js
in
mov
pop
jb
test
or
mov
scas
stc
xchg
les
outsb
xchg
int3
and
dec
lock
call
out
sbb
lods
sarb
data16
testl
lahf
cmp
loopne
stos
lret
or
repz
divl
mov
and
mov
dec
mov
ja
fldl
sti
jmp
nop
lds
jns
push
stos
je
fdivp
sub
mov
jbe
and
push
mov
ja
test
mov
fwait
inc
je
adc
dec
sbb
and
int3
iret
push
nop
jno
aad
repz
push
xchg
mov
mov
bound
iret
sub
das
inc
xchg
lcall
jne
flds
xchg
leave
sub
in
cld
pop
lahf
fs
jmp
aas
dec
sbb
enter
mov
js
or
sti
lahf
in
pop
out
sbb
jns
inc
mov
int
xchg
jnp
scas
movsl
lods
movsb
orl
daa
mov
inc
int3
fstps
insl
cmc
pand
ficompl
icebp
and
cwtl
xor
push
repnz
rclb
cmp
mov
cs
cmp
aaa
adc
add
scas
dec
mov
aaa
adc
inc
mov
or
mov
sub
adc
push
fnstcw
jo
add
xor
ret
rcrl
xor
cmp
mov
psllq
addr16
add
cmp
paddw
dec
pop
jnp
push
jne
or
jo
or
incl
xchg
stos
pop
dec
inc
int3
out
clc
insl
or
xor
test
orb
mov
or
stos
or
sbbb
and
mov
push
mov
and
push
and
add
or
dec
xchg
js
imul
sti
jb
insb
mov
fwait
cmpsb
push
jno
sub
in
xchg
enter
sbb
loop
popa
into
aaa
and
jge
xor
lret
leave
fiadds
clc
mov
sahf
test
mov
mov
addr16
cwtl
imul
addl
cmp
movsl
pop
mov
out
and
mov
sub
popa
negl
sub
insl
xchg
pop
or
mov
sbb
push
ret
leave
repnz
mov
mov
sbb
jbe
push
fildll
cmp
cli
repz
or
pop
sub
xchg
add
scas
je
mov
mov
cmc
pop
xchg
add
add
in
jge
xor
pop
in
aad
cmp
test
orl
repz
sbb
bound
xchg
insl
in
adcb
jge
sbb
repnz
adc
decl
out
sbb
cmpsl
popa
icebp
stos
les
out
push
push
jecxz
mov
dec
push
movsl
xchg
scas
ret
xchg
add
scas
shlb
push
outsb
push
mov
push
sbb
dec
mov
or
mov
pusha
push
push
stos
shll
lea
popf
xchg
mov
pop
sahf
inc
adc
cs
push
scas
rorl
rclb
into
add
push
mov
add
cmc
insb
lea
enter
sbb
cs
js
sub
shr
daa
xlat
mov
mov
inc
lds
inc
cmp
inc
mov
jle
jae
mov
outsl
jae
dec
mov
jle
je
dec
mov
dec
je
cmc
rcl
iret
movsb
das
arpl
enter
imul
pop
inc
cmc
insb
xchg
repnz
call
in
cmp
adc
and
jge
sarb
cli
xchg
das
jl
inc
pop
xchg
int
or
adc
scas
test
andps
push
jb
aaa
xchg
mov
mov
xchg
mov
pop
pop
sbb
repz
or
sub
lods
cmc
or
inc
std
js
aaa
mov
mov
inc
jae
mov
pop
cmp
dec
jp
sub
jns
adc
sub
pop
sub
and
fdivs
jp
jge
or
sarb
adc
shr
sbb
mov
mov
inc
roll
lods
push
std
fmull
push
push
adc
lods
mov
push
cmp
adc
xchg
not
sbb
stc
mov
xchg
pushf
pop
or
sbb
gs
cmp
xchg
popa
movsb
xchg
ja
mov
dec
js
mov
mov
push
xor
cli
out
addr16
push
cwtl
mov
dec
incb
jbe
out
jae
jmp
jle
push
mov
sub
out
int3
lea
js
xchg
jne
mov
pop
mov
adc
mov
jp
fcoml
shlb
mov
mov
das
dec
inc
and
sbb
in
sarl
dec
jl
and
aam
test
jb
adc
icebp
jmp
add
jns
clc
stc
dec
out
addr16
or
mov
test
iret
xor
ror
cwtl
or
lcall
mov
or
insl
call
sbbl
fisubrl
or
sub
shlb
jae
xchg
cwtl
imul
jno
cmpsb
cmp
add
jge
cmp
fdivs
lret
pop
jbe
neg
and
push
out
in
outsb
popa
pusha
xchg
fwait
fwait
mov
bound
mov
je
sahf
arpl
mov
xor
mov
jp
or
pop
dec
jae
inc
add
xor
adc
jns
or
xlat
jge
pop
lahf
pop
cmpsl
aad
mov
int3
ss
inc
cmp
sbb
vmptrld
dec
jbe
sar
pop
into
fwait
loopne
roll
fs
lret
iret
mov
mov
push
lods
sbb
cmpsb
pop
sbb
xor
data16
pop
cltd
dec
rcrb
das
dec
fs
mov
out
dec
dec
xor
cmp
int3
xor
jle
insl
pushf
pusha
fcmovnb
repz
je
in
bound
or
sub
ret
fs
pop
cli
aaa
adc
pop
shll
mov
pop
loopne
nop
jns
sub
and
sbb
add
or
cltd
push
stc
xchg
mov
sahf
and
jno
out
pop
mov
sbb
pop
mov
pop
jno
jecxz
pop
mov
and
loope
pop
mov
mov
mov
je
pusha
fst
dec
aad
scas
pop
add
mov
add
mov
sar
out
mov
or
xchg
pop
fs
mov
mov
jl
je
testl
xchg
popf
test
or
jb
xor
pop
xchg
test
sbb
add
ja
inc
or
add
ret
aas
jge
mov
mov
mov
sbb
dec
and
mov
syscall
outsb
or
cli
inc
loop
sub
aaa
pop
mov
xchg
into
scas
je
xor
xchg
mov
inc
imulb
std
mov
xor
in
cmpsl
and
pop
rolb
cmp
adc
in
push
roll
inc
jb
push
dec
mov
or
rclb
jbe
scas
.byte
